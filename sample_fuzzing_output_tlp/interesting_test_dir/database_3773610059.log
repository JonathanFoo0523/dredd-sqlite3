-- Time: 2024/06/10 00:13:24
-- Database: database59
-- Database version: 3.40.0
-- seed value: 3773610059
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2, +c3 TEXT ); -- 1ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0 UNINDEXED, c1, c2 UNINDEXED, c3 UNINDEXED); -- 1ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
INSERT OR ABORT INTO rt0(c0) VALUES (NULL); -- 1ms;
UPDATE OR REPLACE rt0 SET (c2, c0)=(NULL, NULL) WHERE CASE WHEN TRIM(rt0.c3, rt0.c2) THEN ((((((((((((rt0.c3)OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c3)) WHEN ((rt0.c3)>=(rt0.c2)) THEN rt0.c3 WHEN rt0.c0 COLLATE RTRIM THEN CASE rt0.c1  WHEN rt0.c3 THEN rt0.c2 END ELSE ((rt0.c0)>>(rt0.c3)) END; -- 0ms;
PRAGMA locking_mode = NORMAL; -- 0ms;
INSERT OR ROLLBACK INTO vt1(c1, c0) VALUES (NULL, '1153314605'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 1); -- 1ms;
ANALYZE; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '21877'); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 6); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
UPDATE OR IGNORE vt1 SET c2='Bn' WHERE CASE TRIM(DISTINCT vt1.c1)  WHEN CASE WHEN vt1.c0 THEN vt1.c0 END THEN (NOT (vt1.c2)) END; -- 0ms;
PRAGMA main.journal_mode = WAL; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt1 SET (c1, c0)=('179108633', x'da23') WHERE ((CASE vt1.c3  WHEN vt1.c1 THEN vt1.c0 END)&((vt1.c2 IN ('-1637378991')))); -- 1ms;
UPDATE vt1 SET (c1)=(0.7900179193046504); -- 0ms;
UPDATE rt0 SET c0=0.4222538018620612 WHERE (((((x'b3f8' IN ()))AND(TRIM(DISTINCT rt0.c2))))AND(((rt0.c1) NOT NULL))); -- 0ms;
PRAGMA shrink_memory; -- 0ms;
PRAGMA main.cache_size; -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=717293769,3');\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
DELETE FROM rt0; -- 0ms;
INSERT OR ROLLBACK INTO vt1(c3) VALUES (x'841c'), (NULL), (NULL); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1140449889); -- 0ms;
INSERT OR IGNORE INTO vt1(c3, c2, c0, c1) VALUES (0xffffffff9e679451, 0.18522234221303546, 0X44be2f2d, NULL); -- 0ms;
PRAGMA temp.threads; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', -1854876707);\n; -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=817401099,5');\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '42210'); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c2, c0, c3) VALUES (x'', NULL, NULL, 0.27658731351267574); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (0.9323275693075431, NULL, '635716717', x'df3b'); -- 0ms;
INSERT OR REPLACE INTO rt0(c1, c3) VALUES (0Xffffffff82e59d60, x''), (NULL, -2098881184), (0.48857517658172955, NULL); -- 4ms;
INSERT OR IGNORE INTO vt1(c1, c2, c0) VALUES (NULL, NULL, 0.11122950412791544); -- 1ms;
END; -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 9); -- 0ms;
UPDATE OR ROLLBACK rt0 SET (c1, c2)=('-1637378991', '0.11122950412791544'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 5); -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0); -- 5ms;
ANALYZE; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
END; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '54337'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-873057356'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR ABORT rt0 SET (c3)=(0.939255733850957); -- 0ms;
UPDATE OR IGNORE rt0 SET c0='-1820211291' WHERE CASE ((rt0.c1)IS NOT(rt0.c0))  WHEN ((rt0.c1) NOTNULL) THEN '0.48857517658172955' ELSE LIKELIHOOD(rt0.c1, 0.1032688389925902) END; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
CREATE VIRTUAL TABLE rt1 USING rtree(c0, c1, c2); -- 0ms;
PRAGMA main.cache_spill = true; -- 0ms;
PRAGMA application_id = 8552391366093246409; -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c1) VALUES ('120062009', -2.098881184E9), (182368841, NULL), ('-873057356', '*''t'); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt1 SET c0=NULL, c3=0x4750d111 WHERE x''; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=('1484427783'); -- 0ms;
INSERT OR ABORT INTO rt0(c0, c1) VALUES ('182368841', '-560713685'); -- 0ms;
UPDATE OR IGNORE rt0 SET c1='' WHERE (rt0.c1 IN ()); -- 0ms;
INSERT OR IGNORE INTO rt0(c3, c0, c1) VALUES ('', 0Xfffffffff3498ede, '0.18522234221303546'); -- 0ms;
INSERT OR IGNORE INTO rt1(c1) VALUES (x'2b3a'), ('1869250444'), ('Oqd츮v'), ('1153314605'), (-1919594854); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=1'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 5); -- 0ms;
INSERT OR ROLLBACK INTO rt1(c2) VALUES (-2.098881184E9); -- 0ms;
INSERT OR IGNORE INTO vt1(c1, c0) VALUES ('-213283106', 0.31765495314197234); -- 1ms;
REINDEX; -- 0ms;
PRAGMA main.soft_heap_limit = 7965151353430165961; -- 0ms;
PRAGMA main.secure_delete; -- 0ms;
INSERT OR ABORT INTO rt1(c2, c1, c0) VALUES (NULL, '-890843602', 'Qi'); -- 0ms;
INSERT OR REPLACE INTO rt0 VALUES ('', '611305575', 0.4808390939504905, 0.11122950412791544); -- 0ms;
INSERT OR IGNORE INTO rt0(c0) VALUES (NULL); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '20166'); -- 0ms;
PRAGMA wal_checkpoint(RESTART); -- 0ms;
REINDEX  rt1; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 7); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO rt1(c1, c2, c0) VALUES ('1925035981', x'', NULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c0) VALUES (0Xffffffffd72890dd), (0.1618246426757446), (''); -- 0ms;
INSERT OR IGNORE INTO rt1(c0) VALUES ('-873057356'), ('-1726132508'), (0X207c41a5); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c3) VALUES ('QI'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '63279'); -- 1ms;
ANALYZE main; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '15781'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 9); -- 0ms;
PRAGMA temp.journal_size_limit; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c0)=(x'bc20', NULL); -- 0ms;
UPDATE OR ROLLBACK rt1 SET c0=NULL WHERE ((UPPER(DISTINCT rt1.c1))*((rt1.c2 IN ()))); -- 0ms;
PRAGMA default_cache_size = 2054894138; -- 0ms;
INSERT OR ABORT INTO rt0(c1, c0, c2, c3) VALUES (x'', '-1637378991', 0.07433308145644524, x''), (x'ac2a', '817401099', '-1767157790', NULL), (x'', x'', 0Xffffffff81b75bde, NULL); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x'f4ac'), (0X7a7b323a), ('Bn'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET c2='Oqd츮v' WHERE (((((rt0.c0, rt0.c1, 0Xfffffffff7452f4e)) BETWEEN ((rt0.c3, rt0.c1, 0.9137534523230808)) AND ((rt0.c3, rt0.c2, '收7')))) BETWEEN (LIKE(rt0.c0, '-2098881184')) AND (((rt0.c3)|(rt0.c0)))); -- 0ms;
SELECT rtreecheck('rt1'); -- 0ms;
DROP TABLE IF EXISTS vt1; -- 0ms;
UPDATE OR FAIL vt0 SET (c0, c0, c0)=(0.43574334257407354, NULL, 0X1110c90d); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR FAIL INTO rt1(c2, c1) VALUES ('', '-706261488'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 3); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt1 SET c1=x'865c', c1=-572466421 WHERE 568713666; -- 0ms;
UPDATE vt0 SET (c0)=(0.6209262513073768); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=0.0652838659004783 WHERE JULIANDAY(((((((((0.35100622998752296)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND('-1252111302')), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END, UPPER(DISTINCT vt0.c0)); -- 0ms;
END; -- 0ms;
INSERT OR REPLACE INTO vt1(c0, c1) VALUES ('2005791190', x''); -- 0ms;
ANALYZE; -- 0ms;
UPDATE rt1 SET (c0, c2)=(NULL, 'qi') WHERE ((rt1.c2) ISNULL); -- 0ms;
REINDEX RTRIM; -- 0ms;
UPDATE rt0 SET (c3)=(x'') WHERE CASE WHEN ((rt0.c2)!=(rt0.c3)) THEN ((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c0)) END; -- 0ms;
COMMIT; -- 0ms;
UPDATE OR ABORT rt0 SET c3=0.07776958428743863; -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 5); -- 0ms;
INSERT OR REPLACE INTO vt1(c1, c3, c0) VALUES (0.48857517658172955, '{~', '1117623049'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 5); -- 0ms;
COMMIT TRANSACTION; -- 1ms;
PRAGMA temp.busy_timeout = 0; -- 0ms;
INSERT OR IGNORE INTO rt1(c2, c0) VALUES (0xfffffffff630515b, x'7c56'), (0.8024750365597747, ''), (x'', NULL); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 11); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '27799'); -- 0ms;
INSERT OR IGNORE INTO rt1(c0) VALUES ('1087917629'); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT * FROM vt0, rt1;
SELECT * FROM vt0, rt1 WHERE ('*nneYYNf') UNION ALL SELECT ALL * FROM vt0, rt1 WHERE ((NOT ('*nneYYNf'))) UNION ALL SELECT ALL * FROM vt0, rt1 WHERE ((('*nneYYNf') ISNULL));
SELECT * FROM vt0, rt1;
SELECT DISTINCT rt0.c3, vt1.c2, rt0.c1, vt1.c1, vt1.c0, vt0.c0, rt0.c2, rt0.c0, vt1.c3 FROM rt0 FULL OUTER JOIN vt1 ON ((((('7965151353430165961', vt1.c1, rt0.c0, vt1.c0, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c3, rt0.c0, rt0.c1, vt0.c0)) AND ((x'', vt1.c0, rt0.c0, vt1.c0, vt1.c2))))IS((rt0.c1 IN (vt1.c1, vt1.c1)))) CROSS JOIN vt0 ON CASE vt1.c1  WHEN (rt0.c0 IN (vt0.c0, x'')) THEN ((vt1.c0) NOTNULL) END;
SELECT vt1.c3 FROM vt1 GROUP BY vt1.c3;
SELECT ALL vt1.c3 FROM vt1 WHERE (CAST(((vt1.c1)>>(0x4750d111)) AS BLOB)) GROUP BY vt1.c3 UNION SELECT vt1.c3 FROM vt1 WHERE ((NOT (CAST(((vt1.c1)>>(0X4750d111)) AS BLOB)))) GROUP BY vt1.c3 UNION SELECT ALL vt1.c3 FROM vt1 WHERE (((CAST(((vt1.c1)>>(0X4750d111)) AS BLOB)) ISNULL)) GROUP BY vt1.c3;
SELECT vt1.c3 FROM vt1 GROUP BY vt1.c3;
SELECT ALL vt1.c1 FROM vt0 LEFT OUTER JOIN vt1 ON (- ('-660606757')) COLLATE NOCASE LEFT OUTER JOIN rt0 ON (((vt1.c1 IN (rt1.c2)))GLOB(((vt1.c0)+(vt1.c2)))) CROSS JOIN rt1 ON (((vt1.c1) NOT NULL) IN ()) GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt0 LEFT OUTER JOIN vt1 ON (- ('-660606757')) COLLATE NOCASE LEFT OUTER JOIN rt0 ON (((vt1.c1 IN (rt1.c2)))GLOB(((vt1.c0)+(vt1.c2)))) CROSS JOIN rt1 ON (((vt1.c1) NOT NULL) IN ()) GROUP BY vt1.c1 HAVING CAST(((SUM(rt0.c0)) BETWEEN (vt0.c0) AND (vt1.c3)) AS INTEGER) UNION ALL SELECT ALL vt1.c1 FROM vt0 LEFT OUTER JOIN vt1 ON (- ('-660606757')) COLLATE NOCASE LEFT OUTER JOIN rt0 ON (((vt1.c1 IN (rt1.c2)))GLOB(((vt1.c0)+(vt1.c2)))) CROSS JOIN rt1 ON (((vt1.c1) NOT NULL) IN ()) GROUP BY vt1.c1 HAVING (NOT (CAST(((SUM(rt0.c0)) BETWEEN (vt0.c0) AND (vt1.c3)) AS INTEGER))) UNION ALL SELECT ALL vt1.c1 FROM vt0 LEFT OUTER JOIN vt1 ON (- ('-660606757')) COLLATE NOCASE LEFT OUTER JOIN rt0 ON (((vt1.c1 IN (rt1.c2)))GLOB(((vt1.c0)+(vt1.c2)))) CROSS JOIN rt1 ON (((vt1.c1) NOT NULL) IN ()) GROUP BY vt1.c1 HAVING ((CAST(((SUM(rt0.c0)) BETWEEN (vt0.c0) AND (vt1.c3)) AS INTEGER)) ISNULL);
SELECT ALL vt1.c1 FROM vt0 LEFT OUTER JOIN vt1 ON (- ('-660606757')) COLLATE NOCASE LEFT OUTER JOIN rt0 ON (((vt1.c1 IN (rt1.c2)))GLOB(((vt1.c0)+(vt1.c2)))) CROSS JOIN rt1 ON (((vt1.c1) NOT NULL) IN ()) GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt0 LEFT OUTER JOIN vt1 ON (- ('-660606757')) COLLATE NOCASE LEFT OUTER JOIN rt0 ON (((vt1.c1 IN (rt1.c2)))GLOB(((vt1.c0)+(vt1.c2)))) CROSS JOIN rt1 ON (((vt1.c1) NOT NULL) IN ()) GROUP BY vt1.c1 HAVING CAST(((SUM(rt0.c0)) BETWEEN (vt0.c0) AND (vt1.c3)) AS INTEGER) UNION ALL SELECT ALL vt1.c1 FROM vt0 LEFT OUTER JOIN vt1 ON (- ('-660606757')) COLLATE NOCASE LEFT OUTER JOIN rt0 ON (((vt1.c1 IN (rt1.c2)))GLOB(((vt1.c0)+(vt1.c2)))) CROSS JOIN rt1 ON (((vt1.c1) NOT NULL) IN ()) GROUP BY vt1.c1 HAVING (NOT (CAST(((SUM(rt0.c0)) BETWEEN (vt0.c0) AND (vt1.c3)) AS INTEGER))) UNION ALL SELECT ALL vt1.c1 FROM vt0 LEFT OUTER JOIN vt1 ON (- ('-660606757')) COLLATE NOCASE LEFT OUTER JOIN rt0 ON (((vt1.c1 IN (rt1.c2)))GLOB(((vt1.c0)+(vt1.c2)))) CROSS JOIN rt1 ON (((vt1.c1) NOT NULL) IN ()) GROUP BY vt1.c1 HAVING ((CAST(((SUM(rt0.c0)) BETWEEN (vt0.c0) AND (vt1.c3)) AS INTEGER)) ISNULL);
SELECT ALL vt1.c1 FROM vt0 LEFT OUTER JOIN vt1 ON (- ('-660606757')) COLLATE NOCASE LEFT OUTER JOIN rt0 ON (((vt1.c1 IN (rt1.c2)))GLOB(((vt1.c0)+(vt1.c2)))) CROSS JOIN rt1 ON (((vt1.c1) NOT NULL) IN ()) GROUP BY vt1.c1;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (('91', CASE WHEN vt0.c0 THEN x'' ELSE vt0.c0 END, ((((vt0.c0)AND(x'')))AND(vt0.c0)))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)>(vt0.c0)), CAST(vt0.c0 AS TEXT))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (('91', CASE WHEN vt0.c0 THEN x'' ELSE vt0.c0 END, ((((vt0.c0)AND(x'')))AND(vt0.c0)))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)>(vt0.c0)), CAST(vt0.c0 AS TEXT))))))) UNION ALL SELECT ALL * FROM vt0 NOT INDEXED WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (('91', CASE WHEN vt0.c0 THEN x'' ELSE vt0.c0 END, ((((vt0.c0)AND(x'')))AND(vt0.c0)))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)>(vt0.c0)), CAST(vt0.c0 AS TEXT))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM rt1, rt0, vt0;
SELECT DISTINCT * FROM rt1, rt0, vt0 WHERE (rt1.c2) UNION SELECT DISTINCT * FROM rt1, rt0, vt0 WHERE ((NOT (rt1.c2))) UNION SELECT DISTINCT * FROM rt1, rt0, vt0 WHERE (((rt1.c2) ISNULL));
SELECT DISTINCT * FROM rt1, rt0, vt0;
SELECT rt0.c2, vt1.c3, rt1.c1, vt1.c2, rt0.c0, vt0.c0, rt1.c0, rt0.c1, rt1.c2, vt1.c1 FROM rt0, rt1, vt1, vt0 GROUP BY rt0.c2, vt1.c3, rt1.c1, vt1.c2, rt0.c0, vt0.c0, rt1.c0, rt0.c1, rt1.c2, vt1.c1;
SELECT ALL rt0.c2, vt1.c3, rt1.c1, vt1.c2, rt0.c0, vt0.c0, rt1.c0, rt0.c1, rt1.c2, vt1.c1 FROM rt0, rt1, vt1, vt0 WHERE ((((vt1.c0, vt1.c0, vt1.c3)) NOT BETWEEN ((rt0.c3, vt1.c0, rt1.c2)) AND ((vt1.c0, rt1.c2, -2118689826))) COLLATE NOCASE) GROUP BY rt0.c2, vt1.c3, rt1.c1, vt1.c2, rt0.c0, vt0.c0, rt1.c0, rt0.c1, rt1.c2, vt1.c1 UNION SELECT rt0.c2, vt1.c3, rt1.c1, vt1.c2, rt0.c0, vt0.c0, rt1.c0, rt0.c1, rt1.c2, vt1.c1 FROM rt0, rt1, vt1, vt0 WHERE ((NOT ((((vt1.c0, vt1.c0, vt1.c3)) NOT BETWEEN ((rt0.c3, vt1.c0, rt1.c2)) AND ((vt1.c0, rt1.c2, -2118689826))) COLLATE NOCASE))) GROUP BY rt0.c2, vt1.c3, rt1.c1, vt1.c2, rt0.c0, vt0.c0, rt1.c0, rt0.c1, rt1.c2, vt1.c1 UNION SELECT rt0.c2, vt1.c3, rt1.c1, vt1.c2, rt0.c0, vt0.c0, rt1.c0, rt0.c1, rt1.c2, vt1.c1 FROM rt0, rt1, vt1, vt0 WHERE ((((((vt1.c0, vt1.c0, vt1.c3)) NOT BETWEEN ((rt0.c3, vt1.c0, rt1.c2)) AND ((vt1.c0, rt1.c2, -2118689826))) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c2, vt1.c3, rt1.c1, vt1.c2, rt0.c0, vt0.c0, rt1.c0, rt0.c1, rt1.c2, vt1.c1;
SELECT rt0.c2, vt1.c3, rt1.c1, vt1.c2, rt0.c0, vt0.c0, rt1.c0, rt0.c1, rt1.c2, vt1.c1 FROM rt0, rt1, vt1, vt0 GROUP BY rt0.c2, vt1.c3, rt1.c1, vt1.c2, rt0.c0, vt0.c0, rt1.c0, rt0.c1, rt1.c2, vt1.c1;
SELECT ALL rt0.c3 FROM vt0, rt0, vt1 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM vt0, rt0, vt1 GROUP BY rt0.c3 HAVING AVG(TOTAL(SUM(rt0.c2))) UNION ALL SELECT ALL rt0.c3 FROM vt0, rt0, vt1 GROUP BY rt0.c3 HAVING (NOT (AVG(TOTAL(SUM(rt0.c2))))) UNION ALL SELECT ALL rt0.c3 FROM vt0, rt0, vt1 GROUP BY rt0.c3 HAVING ((AVG(TOTAL(SUM(rt0.c2)))) ISNULL);
SELECT ALL rt0.c3 FROM rt0;
SELECT rt0.c3 FROM rt0 WHERE (((TYPEOF(rt0.c3))==(((rt0.c3)IS NOT(rt0.c3))))) UNION ALL SELECT ALL rt0.c3 FROM rt0 WHERE ((NOT (((TYPEOF(rt0.c3))=(((rt0.c3)IS NOT(rt0.c3))))))) UNION ALL SELECT ALL rt0.c3 FROM rt0 WHERE (((((TYPEOF(rt0.c3))==(((rt0.c3)IS NOT(rt0.c3))))) ISNULL));
SELECT ALL rt0.c3 FROM rt0;
SELECT DISTINCT * FROM rt1 CROSS JOIN vt1 ON (vt1.c0 COLLATE BINARY IN ());
SELECT DISTINCT * FROM rt1 CROSS JOIN vt1 ON (vt1.c0 COLLATE BINARY IN ()) WHERE (((CAST(NULL AS BLOB))AND(((rt1.c2)IS NOT(rt1.c1))))) UNION SELECT DISTINCT * FROM rt1 CROSS JOIN vt1 ON (vt1.c0 COLLATE BINARY IN ()) WHERE ((NOT (((CAST(NULL AS BLOB))AND(((rt1.c2)IS NOT(rt1.c1))))))) UNION SELECT DISTINCT * FROM rt1 CROSS JOIN vt1 ON (vt1.c0 COLLATE BINARY IN ()) WHERE (((((CAST(NULL AS BLOB))AND(((rt1.c2)IS NOT(rt1.c1))))) ISNULL));
SELECT DISTINCT * FROM rt1 CROSS JOIN vt1 ON (vt1.c0 COLLATE BINARY IN ());
SELECT ALL rt0.c1, rt0.c3, rt1.c1, vt1.c0, rt0.c2, vt1.c2, rt1.c0 FROM rt0, vt1, rt1 GROUP BY rt0.c1, rt0.c3, rt1.c1, vt1.c0, rt0.c2, vt1.c2, rt1.c0;
SELECT ALL rt0.c1, rt0.c3, rt1.c1, vt1.c0, rt0.c2, vt1.c2, rt1.c0 FROM rt0, vt1, rt1 WHERE ((((((((vt1.c0)OR(0.05794386771859239)))AND('')), ((((vt1.c3)AND(NULL)))OR(0.5888268535301011)), x'' COLLATE BINARY))>((((rt1.c2) IS FALSE), ((((vt1.c0)OR(rt1.c0)))OR(rt1.c0)), ((rt0.c1)<(rt1.c1)))))) GROUP BY rt0.c1, rt0.c3, rt1.c1, vt1.c0, rt0.c2, vt1.c2, rt1.c0 UNION SELECT rt0.c1, rt0.c3, rt1.c1, vt1.c0, rt0.c2, vt1.c2, rt1.c0 FROM rt0, vt1, rt1 WHERE ((NOT ((((((((vt1.c0)OR(0.05794386771859239)))AND('')), ((((vt1.c3)AND(NULL)))OR(0.5888268535301011)), x'' COLLATE BINARY))>((((rt1.c2) IS FALSE), ((((vt1.c0)OR(rt1.c0)))OR(rt1.c0)), ((rt0.c1)<(rt1.c1)))))))) GROUP BY rt0.c1, rt0.c3, rt1.c1, vt1.c0, rt0.c2, vt1.c2, rt1.c0 UNION SELECT ALL rt0.c1, rt0.c3, rt1.c1, vt1.c0, rt0.c2, vt1.c2, rt1.c0 FROM rt0, vt1, rt1 WHERE ((((((((((vt1.c0)OR(0.05794386771859239)))AND('')), ((((vt1.c3)AND(NULL)))OR(0.5888268535301011)), x'' COLLATE BINARY))>((((rt1.c2) IS FALSE), ((((vt1.c0)OR(rt1.c0)))OR(rt1.c0)), ((rt0.c1)<(rt1.c1)))))) ISNULL)) GROUP BY rt0.c1, rt0.c3, rt1.c1, vt1.c0, rt0.c2, vt1.c2, rt1.c0;
SELECT ALL rt0.c1, rt0.c3, rt1.c1, vt1.c0, rt0.c2, vt1.c2, rt1.c0 FROM rt0, vt1, rt1 GROUP BY rt0.c1, rt0.c3, rt1.c1, vt1.c0, rt0.c2, vt1.c2, rt1.c0;
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING CAST(COUNT(MIN(SUM(rt1.c0))) AS INTEGER) UNION ALL SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING (NOT (CAST(COUNT(MIN(SUM(rt1.c0))) AS INTEGER))) UNION ALL SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING ((CAST(COUNT(MIN(SUM(rt1.c0))) AS INTEGER)) ISNULL);
SELECT vt1.c3, vt1.c0, vt1.c2, rt0.c1, rt0.c0, vt1.c1 FROM vt0, rt0 INNER JOIN vt1 ON ((((((vt1.c0)OR(rt0.c1)))OR(vt1.c0)))/(((rt0.c1)>(vt1.c2))));
SELECT vt1.c3, vt1.c0, vt1.c2, rt0.c1, rt0.c0, vt1.c1 FROM vt0, rt0 INNER JOIN vt1 ON ((((((vt1.c0)OR(rt0.c1)))OR(vt1.c0)))/(((rt0.c1)>(vt1.c2)))) WHERE ((((INSTR(rt0.c0, rt0.c1), CAST('9U' AS NUMERIC), CASE WHEN vt1.c2 THEN vt1.c2 ELSE vt1.c0 END, vt1.c2 COLLATE NOCASE, json_array(rt0.c3, rt0.c0)))==(((NOT (rt0.c2)), (~ (vt0.c0)), ((vt1.c3) IS TRUE), x'', (rt0.c2 IN (vt0.c0)))))) UNION ALL SELECT vt1.c3, vt1.c0, vt1.c2, rt0.c1, rt0.c0, vt1.c1 FROM vt0, rt0 INNER JOIN vt1 ON ((((((vt1.c0)OR(rt0.c1)))OR(vt1.c0)))/(((rt0.c1)>(vt1.c2)))) WHERE ((NOT ((((INSTR(rt0.c0, rt0.c1), CAST('9U' AS NUMERIC), CASE WHEN vt1.c2 THEN vt1.c2 ELSE vt1.c0 END, vt1.c2 COLLATE NOCASE, json_array(rt0.c3, rt0.c0)))==(((NOT (rt0.c2)), (~ (vt0.c0)), ((vt1.c3) IS TRUE), x'', (rt0.c2 IN (vt0.c0)))))))) UNION ALL SELECT ALL vt1.c3, vt1.c0, vt1.c2, rt0.c1, rt0.c0, vt1.c1 FROM vt0, rt0 INNER JOIN vt1 ON ((((((vt1.c0)OR(rt0.c1)))OR(vt1.c0)))/(((rt0.c1)>(vt1.c2)))) WHERE ((((((INSTR(rt0.c0, rt0.c1), CAST('9U' AS NUMERIC), CASE WHEN vt1.c2 THEN vt1.c2 ELSE vt1.c0 END, vt1.c2 COLLATE NOCASE, json_array(rt0.c3, rt0.c0)))==(((NOT (rt0.c2)), (~ (vt0.c0)), ((vt1.c3) IS TRUE), x'', (rt0.c2 IN (vt0.c0)))))) ISNULL));
SELECT vt1.c3, vt1.c0, vt1.c2, rt0.c1, rt0.c0, vt1.c1 FROM vt0, rt0 INNER JOIN vt1 ON ((((((vt1.c0)OR(rt0.c1)))OR(vt1.c0)))/(((rt0.c1)>(vt1.c2))));
SELECT DISTINCT rt0.c3, rt1.c1, vt1.c1, rt0.c2, rt1.c0, vt1.c2, vt1.c0, rt1.c2 FROM vt1, rt0, vt0, rt1;
SELECT DISTINCT rt0.c3, rt1.c1, vt1.c1, rt0.c2, rt1.c0, vt1.c2, vt1.c0, rt1.c2 FROM vt1, rt0, vt0, rt1 WHERE ((((vt1.c0 COLLATE NOCASE))<=((vt1.c2)))) UNION SELECT DISTINCT rt0.c3, rt1.c1, vt1.c1, rt0.c2, rt1.c0, vt1.c2, vt1.c0, rt1.c2 FROM vt1, rt0, vt0, rt1 WHERE ((NOT ((((vt1.c0 COLLATE NOCASE))<=((vt1.c2)))))) UNION SELECT DISTINCT rt0.c3, rt1.c1, vt1.c1, rt0.c2, rt1.c0, vt1.c2, vt1.c0, rt1.c2 FROM vt1, rt0, vt0, rt1 WHERE ((((((vt1.c0 COLLATE NOCASE))<=((vt1.c2)))) ISNULL));
SELECT DISTINCT rt0.c3, rt1.c1, vt1.c1, rt0.c2, rt1.c0, vt1.c2, vt1.c0, rt1.c2 FROM vt1, rt0, vt0, rt1;
SELECT ALL rt1.c0, vt0.c0, rt0.c3, rt0.c1 FROM rt0, vt0 NOT INDEXED, rt1 GROUP BY rt1.c0, vt0.c0, rt0.c3, rt0.c1;
SELECT rt1.c0, vt0.c0, rt0.c3, rt0.c1 FROM rt0, vt0, rt1 WHERE (((((((((((rt1.c2) NOT BETWEEN (rt0.c1) AND ('j')))AND(((rt1.c1) IS TRUE))))AND(((((rt1.c1)AND('Bn')))AND('0.0652838659004783')))))OR(((rt0.c1)+(rt0.c3)))))OR((+ (rt1.c1))))) GROUP BY rt1.c0, vt0.c0, rt0.c3, rt0.c1 UNION SELECT ALL rt1.c0, vt0.c0, rt0.c3, rt0.c1 FROM rt0, vt0, rt1 WHERE ((NOT (((((((((((rt1.c2) NOT BETWEEN (rt0.c1) AND ('j')))AND(((rt1.c1) IS TRUE))))AND(((((rt1.c1)AND('Bn')))AND('0.0652838659004783')))))OR(((rt0.c1)+(rt0.c3)))))OR((+ (rt1.c1))))))) GROUP BY rt1.c0, vt0.c0, rt0.c3, rt0.c1 UNION SELECT rt1.c0, vt0.c0, rt0.c3, rt0.c1 FROM rt0, vt0, rt1 WHERE (((((((((((((rt1.c2) NOT BETWEEN (rt0.c1) AND ('j')))AND(((rt1.c1) IS TRUE))))AND(((((rt1.c1)AND('Bn')))AND('0.0652838659004783')))))OR(((rt0.c1)+(rt0.c3)))))OR((+ (rt1.c1))))) ISNULL)) GROUP BY rt1.c0, vt0.c0, rt0.c3, rt0.c1;
SELECT ALL rt1.c0, vt0.c0, rt0.c3, rt0.c1 FROM rt0, vt0 NOT INDEXED, rt1 GROUP BY rt1.c0, vt0.c0, rt0.c3, rt0.c1;
SELECT rt0.c1, rt1.c1, rt1.c0, vt1.c3, rt0.c3 FROM rt0, vt1, vt0, rt1 GROUP BY rt0.c1, rt1.c1, rt1.c0, vt1.c3, rt0.c3;
SELECT rt0.c1, rt1.c1, rt1.c0, vt1.c3, rt0.c3 FROM rt0, vt1, vt0, rt1 GROUP BY rt0.c1, rt1.c1, rt1.c0, vt1.c3, rt0.c3 HAVING GROUP_CONCAT(MAX(MIN(SUM(MIN(vt1.c0))))) UNION ALL SELECT rt0.c1, rt1.c1, rt1.c0, vt1.c3, rt0.c3 FROM rt0, vt1, vt0, rt1 GROUP BY rt0.c1, rt1.c1, rt1.c0, vt1.c3, rt0.c3 HAVING (NOT (GROUP_CONCAT(MAX(MIN(SUM(MIN(vt1.c0))))))) UNION ALL SELECT ALL rt0.c1, rt1.c1, rt1.c0, vt1.c3, rt0.c3 FROM rt0, vt1, vt0, rt1 GROUP BY rt0.c1, rt1.c1, rt1.c0, vt1.c3, rt0.c3 HAVING ((GROUP_CONCAT(MAX(MIN(SUM(MIN(vt1.c0)))))) ISNULL);
SELECT * FROM rt0, vt0, rt1, vt1;
SELECT * FROM rt0, vt0, rt1, vt1 WHERE (0Xffffffffbe90c55f) UNION ALL SELECT * FROM rt0, vt0, rt1, vt1 NOT INDEXED WHERE ((NOT (0Xffffffffbe90c55f))) UNION ALL SELECT ALL * FROM rt0, vt0, rt1, vt1 WHERE (((0Xffffffffbe90c55f) ISNULL));
SELECT * FROM rt0, vt0, rt1, vt1;
SELECT DISTINCT * FROM vt0, vt1, rt0 INNER JOIN rt1 ON (((rt0.c3)) NOT BETWEEN ((((rt1.c1) NOT NULL))) AND ((((rt1.c2) BETWEEN (rt0.c2) AND (x'')))));
SELECT DISTINCT * FROM vt0, vt1, rt0 INNER JOIN rt1 ON (((rt0.c3)) NOT BETWEEN ((((rt1.c1) NOT NULL))) AND ((((rt1.c2) BETWEEN (rt0.c2) AND (x''))))) WHERE (((CAST(vt1.c3 AS INTEGER))*(0.6488335669403901))) UNION SELECT DISTINCT * FROM vt0, vt1, rt0 INNER JOIN rt1 ON (((rt0.c3)) NOT BETWEEN ((((rt1.c1) NOT NULL))) AND ((((rt1.c2) BETWEEN (rt0.c2) AND (x''))))) WHERE ((NOT (((CAST(vt1.c3 AS INTEGER))*(0.6488335669403901))))) UNION SELECT DISTINCT * FROM vt0, vt1, rt0 INNER JOIN rt1 ON (((rt0.c3)) NOT BETWEEN ((((rt1.c1) NOT NULL))) AND ((((rt1.c2) BETWEEN (rt0.c2) AND (x''))))) WHERE (((((CAST(vt1.c3 AS INTEGER))*(0.6488335669403901))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1, rt0 INNER JOIN rt1 ON (((rt0.c3)) NOT BETWEEN ((((rt1.c1) NOT NULL))) AND ((((rt1.c2) BETWEEN (rt0.c2) AND (x'')))));
SELECT rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2;
SELECT rt1.c0, rt1.c2 FROM rt1 WHERE (CASE CAST(rt1.c1 AS INTEGER)  WHEN ((rt1.c0) BETWEEN (rt1.c1) AND (0.9137534523230808)) THEN rt1.c1 COLLATE NOCASE WHEN ((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c2)) THEN rt1.c0 WHEN ((((rt1.c2)OR(rt1.c0)))AND(rt1.c1)) THEN ((rt1.c0) NOT NULL) END) GROUP BY rt1.c0, rt1.c2 UNION SELECT rt1.c0, rt1.c2 FROM rt1 WHERE ((NOT (CASE CAST(rt1.c1 AS INTEGER)  WHEN ((rt1.c0) BETWEEN (rt1.c1) AND (0.9137534523230808)) THEN rt1.c1 COLLATE NOCASE WHEN ((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c2)) THEN rt1.c0 WHEN ((((rt1.c2)OR(rt1.c0)))AND(rt1.c1)) THEN ((rt1.c0) NOT NULL) END))) GROUP BY rt1.c0, rt1.c2 UNION SELECT ALL rt1.c0, rt1.c2 FROM rt1 WHERE (((CASE CAST(rt1.c1 AS INTEGER)  WHEN ((rt1.c0) BETWEEN (rt1.c1) AND (0.9137534523230808)) THEN rt1.c1 COLLATE NOCASE WHEN ((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c2)) THEN rt1.c0 WHEN ((((rt1.c2)OR(rt1.c0)))AND(rt1.c1)) THEN ((rt1.c0) NOT NULL) END) ISNULL)) GROUP BY rt1.c0, rt1.c2;
SELECT rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2;
SELECT ALL vt1.c1, vt0.c0, vt1.c3, vt1.c2 FROM vt1 CROSS JOIN vt0 ON '1925035981' COLLATE NOCASE GROUP BY vt1.c1, vt0.c0, vt1.c3, vt1.c2;
SELECT ALL vt1.c1, vt0.c0, vt1.c3, vt1.c2 FROM vt1 CROSS JOIN vt0 ON '1925035981' COLLATE NOCASE GROUP BY vt1.c1, vt0.c0, vt1.c3, vt1.c2 HAVING AVG(TOTAL(x'')) UNION ALL SELECT ALL vt1.c1, vt0.c0, vt1.c3, vt1.c2 FROM vt1 CROSS JOIN vt0 ON '1925035981' COLLATE NOCASE GROUP BY vt1.c1, vt0.c0, vt1.c3, vt1.c2 HAVING (NOT (AVG(TOTAL(x'')))) UNION ALL SELECT ALL vt1.c1, vt0.c0, vt1.c3, vt1.c2 FROM vt1 CROSS JOIN vt0 ON '1925035981' COLLATE NOCASE GROUP BY vt1.c1, vt0.c0, vt1.c3, vt1.c2 HAVING ((AVG(TOTAL(x''))) ISNULL);
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE (((((vt1.c1)AND(vt1.c2)))OR(vt1.c0)) COLLATE NOCASE) UNION ALL SELECT * FROM vt1 WHERE ((NOT (((((vt1.c1)AND(vt1.c2)))OR(vt1.c0)) COLLATE NOCASE))) UNION ALL SELECT ALL * FROM vt1 WHERE (((((((vt1.c1)AND(vt1.c2)))OR(vt1.c0)) COLLATE NOCASE) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt1 ON ((LOWER(DISTINCT rt0.c1)) NOT BETWEEN (CASE vt1.c2  WHEN rt0.c2 THEN rt0.c1 END) AND ((((('0.8024750365597747')OR(x'')))AND(rt0.c2)))) LEFT OUTER JOIN rt1 ON -360496325 INNER JOIN vt0 ON (('Xs')-(((rt1.c0)<(''))));
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt1 ON ((LOWER(DISTINCT rt0.c1)) NOT BETWEEN (CASE vt1.c2  WHEN rt0.c2 THEN rt0.c1 END) AND ((((('0.8024750365597747')OR(x'')))AND(rt0.c2)))) LEFT OUTER JOIN rt1 ON -360496325 INNER JOIN vt0 ON (('Xs')-(((rt1.c0)<('')))) WHERE ((0.534065280935638 IN (CASE WHEN rt1.c0 THEN x'5751' ELSE rt0.c2 END))) UNION SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt1 ON ((LOWER(DISTINCT rt0.c1)) NOT BETWEEN (CASE vt1.c2  WHEN rt0.c2 THEN rt0.c1 END) AND ((((('0.8024750365597747')OR(x'')))AND(rt0.c2)))) LEFT OUTER JOIN rt1 ON -360496325 INNER JOIN vt0 ON (('Xs')-(((rt1.c0)<('')))) WHERE ((NOT ((0.534065280935638 IN (CASE WHEN rt1.c0 THEN x'5751' ELSE rt0.c2 END))))) UNION SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt1 ON ((LOWER(DISTINCT rt0.c1)) NOT BETWEEN (CASE vt1.c2  WHEN rt0.c2 THEN rt0.c1 END) AND ((((('0.8024750365597747')OR(x'')))AND(rt0.c2)))) LEFT OUTER JOIN rt1 ON -360496325 INNER JOIN vt0 ON (('Xs')-(((rt1.c0)<('')))) WHERE ((((0.534065280935638 IN (CASE WHEN rt1.c0 THEN x'5751' ELSE rt0.c2 END))) ISNULL));
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt1 ON ((LOWER(DISTINCT rt0.c1)) NOT BETWEEN (CASE vt1.c2  WHEN rt0.c2 THEN rt0.c1 END) AND ((((('0.8024750365597747')OR(x'')))AND(rt0.c2)))) LEFT OUTER JOIN rt1 ON -360496325 INNER JOIN vt0 ON (('Xs')-(((rt1.c0)<(''))));
SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM rt1 WHERE (CAST((0.9137534523230808 IN ()) AS REAL)) GROUP BY rt1.c0 UNION SELECT ALL rt1.c0 FROM rt1 WHERE ((NOT (CAST((0.9137534523230808 IN ()) AS REAL)))) GROUP BY rt1.c0 UNION SELECT rt1.c0 FROM rt1 WHERE (((CAST((0.9137534523230808 IN ()) AS REAL)) ISNULL)) GROUP BY rt1.c0;
SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((((((((((((COUNT(*))OR(COUNT(MIN(GROUP_CONCAT(rt0.c2))))))OR(rt0.c3)))OR((GROUP_CONCAT(TOTAL(rt0.c1)) IN ()))))AND(COUNT(TOTAL(rt0.c0)))))OR(MIN(rt0.c2))))OR(TOTAL(rt0.c0))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (((((((((((((COUNT(*))OR(COUNT(MIN(GROUP_CONCAT(rt0.c2))))))OR(rt0.c3)))OR((GROUP_CONCAT(TOTAL(rt0.c1)) IN ()))))AND(COUNT(TOTAL(rt0.c0)))))OR(MIN(rt0.c2))))OR(TOTAL(rt0.c0))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((((((((((((((COUNT(*))OR(COUNT(MIN(GROUP_CONCAT(rt0.c2))))))OR(rt0.c3)))OR((GROUP_CONCAT(TOTAL(rt0.c1)) IN ()))))AND(COUNT(TOTAL(rt0.c0)))))OR(MIN(rt0.c2))))OR(TOTAL(rt0.c0)))) ISNULL);
SELECT * FROM vt1, rt1, vt0;
SELECT * FROM vt1, rt1, vt0 WHERE (CASE WHEN CASE vt1.c1  WHEN rt1.c0 THEN vt1.c1 END THEN vt1.c1 WHEN (NOT (rt1.c0)) THEN ((vt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1)) WHEN (NOT (rt1.c2)) THEN CASE WHEN rt1.c1 THEN vt1.c1 ELSE vt1.c3 END ELSE vt1.c3 END) UNION ALL SELECT * FROM vt1, rt1, vt0 WHERE ((NOT (CASE WHEN CASE vt1.c1  WHEN rt1.c0 THEN vt1.c1 END THEN vt1.c1 WHEN (NOT (rt1.c0)) THEN ((vt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1)) WHEN (NOT (rt1.c2)) THEN CASE WHEN rt1.c1 THEN vt1.c1 ELSE vt1.c3 END ELSE vt1.c3 END))) UNION ALL SELECT ALL * FROM vt1, rt1, vt0 WHERE (((CASE WHEN CASE vt1.c1  WHEN rt1.c0 THEN vt1.c1 END THEN vt1.c1 WHEN (NOT (rt1.c0)) THEN ((vt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1)) WHEN (NOT (rt1.c2)) THEN CASE WHEN rt1.c1 THEN vt1.c1 ELSE vt1.c3 END ELSE vt1.c3 END) ISNULL));
SELECT * FROM vt1, rt1, vt0;
SELECT DISTINCT vt1.c2, vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c2, vt1.c0 FROM vt1 WHERE (HEX((((vt1.c0, vt1.c3, vt1.c1, vt1.c3, vt1.c2)) BETWEEN ((vt1.c3, vt1.c3, 2.00579119E9, 0xffffffff9170d3dd, vt1.c0)) AND ((vt1.c0, vt1.c2, vt1.c3, vt1.c1, vt1.c2))))) UNION SELECT DISTINCT vt1.c2, vt1.c0 FROM vt1 WHERE ((NOT (HEX((((vt1.c0, vt1.c3, vt1.c1, vt1.c3, vt1.c2)) BETWEEN ((vt1.c3, vt1.c3, 2.00579119E9, 0Xffffffff9170d3dd, vt1.c0)) AND ((vt1.c0, vt1.c2, vt1.c3, vt1.c1, vt1.c2))))))) UNION SELECT DISTINCT vt1.c2, vt1.c0 FROM vt1 WHERE (((HEX((((vt1.c0, vt1.c3, vt1.c1, vt1.c3, vt1.c2)) BETWEEN ((vt1.c3, vt1.c3, 2.00579119E9, 0xffffffff9170d3dd, vt1.c0)) AND ((vt1.c0, vt1.c2, vt1.c3, vt1.c1, vt1.c2))))) ISNULL));
SELECT DISTINCT vt1.c2, vt1.c0 FROM vt1;
SELECT rt1.c2 FROM rt0, rt1 GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt0, rt1 WHERE ('5)') GROUP BY rt1.c2 UNION SELECT rt1.c2 FROM rt0, rt1 WHERE ((NOT ('5)'))) GROUP BY rt1.c2 UNION SELECT rt1.c2 FROM rt0, rt1 WHERE ((('5)') ISNULL)) GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt0, rt1 GROUP BY rt1.c2;
SELECT ALL rt1.c2, rt0.c3, rt0.c1, vt1.c3 FROM rt1, vt1, rt0 GROUP BY rt1.c2, rt0.c3, rt0.c1, vt1.c3;
SELECT rt1.c2, rt0.c3, rt0.c1, vt1.c3 FROM rt1, vt1, rt0 GROUP BY rt1.c2, rt0.c3, rt0.c1, vt1.c3 HAVING COUNT(((rt1.c2)|(rt0.c2))) UNION ALL SELECT rt1.c2, rt0.c3, rt0.c1, vt1.c3 FROM rt1, vt1, rt0 GROUP BY rt1.c2, rt0.c3, rt0.c1, vt1.c3 HAVING (NOT (COUNT(((rt1.c2)|(rt0.c2))))) UNION ALL SELECT rt1.c2, rt0.c3, rt0.c1, vt1.c3 FROM rt1, vt1, rt0 GROUP BY rt1.c2, rt0.c3, rt0.c1, vt1.c3 HAVING ((COUNT(((rt1.c2)|(rt0.c2)))) ISNULL);
SELECT ALL rt1.c2, rt0.c3, rt0.c1, vt1.c3 FROM rt1, vt1, rt0 GROUP BY rt1.c2, rt0.c3, rt0.c1, vt1.c3;
SELECT rt1.c2, rt0.c3, rt0.c1, vt1.c3 FROM rt1, vt1, rt0 GROUP BY rt1.c2, rt0.c3, rt0.c1, vt1.c3 HAVING COUNT(((rt1.c2)|(rt0.c2))) UNION ALL SELECT rt1.c2, rt0.c3, rt0.c1, vt1.c3 FROM rt1, vt1, rt0 GROUP BY rt1.c2, rt0.c3, rt0.c1, vt1.c3 HAVING (NOT (COUNT(((rt1.c2)|(rt0.c2))))) UNION ALL SELECT rt1.c2, rt0.c3, rt0.c1, vt1.c3 FROM rt1, vt1, rt0 GROUP BY rt1.c2, rt0.c3, rt0.c1, vt1.c3 HAVING ((COUNT(((rt1.c2)|(rt0.c2)))) ISNULL);
SELECT ALL rt1.c2, rt0.c3, rt0.c1, vt1.c3 FROM rt1, vt1, rt0 GROUP BY rt1.c2, rt0.c3, rt0.c1, vt1.c3;
SELECT ALL SUM(((CAST(rt0.c1 AS NUMERIC))IS NOT(NULL COLLATE BINARY))) FROM rt0, rt1;
SELECT ALL rt1.c1, rt1.c2, rt0.c3, rt0.c0 FROM vt1, vt0, rt0, rt1;
SELECT rt1.c1, rt1.c2, rt0.c3, rt0.c0 FROM vt1, vt0, rt0, rt1 WHERE (CASE LOWER(rt1.c1)  WHEN (((rt0.c3, vt0.c0, vt1.c0, rt1.c2, rt0.c2, 0X7cd4ada6, rt1.c0))<((vt1.c1, vt1.c3, rt0.c0, rt0.c2, rt1.c2, x'', vt1.c0))) THEN LIKELY(DISTINCT rt0.c3) END) UNION ALL SELECT ALL rt1.c1, rt1.c2, rt0.c3, rt0.c0 FROM vt1, vt0, rt0, rt1 WHERE ((NOT (CASE LOWER(rt1.c1)  WHEN (((rt0.c3, vt0.c0, vt1.c0, rt1.c2, rt0.c2, 0x7cd4ada6, rt1.c0))<((vt1.c1, vt1.c3, rt0.c0, rt0.c2, rt1.c2, x'', vt1.c0))) THEN LIKELY(DISTINCT rt0.c3) END))) UNION ALL SELECT rt1.c1, rt1.c2, rt0.c3, rt0.c0 FROM vt1, vt0, rt0, rt1 WHERE (((CASE LOWER(rt1.c1)  WHEN (((rt0.c3, vt0.c0, vt1.c0, rt1.c2, rt0.c2, 0x7cd4ada6, rt1.c0))<((vt1.c1, vt1.c3, rt0.c0, rt0.c2, rt1.c2, x'', vt1.c0))) THEN LIKELY(DISTINCT rt0.c3) END) ISNULL));
SELECT ALL rt1.c1, rt1.c2, rt0.c3, rt0.c0 FROM vt1, vt0, rt0, rt1;
SELECT DISTINCT vt1.c3, rt1.c0, vt1.c2, vt1.c1, rt1.c2, vt0.c0, vt1.c0, rt1.c1 FROM rt1 CROSS JOIN vt1 ON (((rt1.c0, rt1.c0, vt1.c1)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)), ((rt1.c2)GLOB(x'')), ((((rt1.c0)AND(rt1.c2)))OR(rt1.c0)))) AND (('qj31q	', ((vt1.c2) BETWEEN (vt1.c2) AND (vt1.c3)), ((vt1.c2) NOTNULL)))) CROSS JOIN vt0 ON CASE WHEN ((rt1.c1) NOT BETWEEN (x'f230') AND (vt1.c2)) THEN ((vt1.c3)<<(vt1.c0)) END;
SELECT DISTINCT vt1.c3, rt1.c0, vt1.c2, vt1.c1, rt1.c2, vt0.c0, vt1.c0, rt1.c1 FROM rt1 CROSS JOIN vt1 ON (((rt1.c0, rt1.c0, vt1.c1)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)), ((rt1.c2)GLOB(x'')), ((((rt1.c0)AND(rt1.c2)))OR(rt1.c0)))) AND (('qj31q	', ((vt1.c2) BETWEEN (vt1.c2) AND (vt1.c3)), ((vt1.c2) NOTNULL)))) CROSS JOIN vt0 ON CASE WHEN ((rt1.c1) NOT BETWEEN (x'f230') AND (vt1.c2)) THEN ((vt1.c3)<<(vt1.c0)) END WHERE ((((vt1.c1, vt1.c3, vt0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN vt1.c1 END, CAST(vt0.c0 AS INTEGER), CASE WHEN rt1.c0 THEN vt1.c0 END)) AND ((((vt1.c1)-(vt1.c1)), rt1.c0, ((vt1.c3)>(vt1.c3)))))) UNION SELECT DISTINCT vt1.c3, rt1.c0, vt1.c2, vt1.c1, rt1.c2, vt0.c0, vt1.c0, rt1.c1 FROM rt1 CROSS JOIN vt1 ON (((rt1.c0, rt1.c0, vt1.c1)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)), ((rt1.c2)GLOB(x'')), ((((rt1.c0)AND(rt1.c2)))OR(rt1.c0)))) AND (('qj31q	', ((vt1.c2) BETWEEN (vt1.c2) AND (vt1.c3)), ((vt1.c2) NOTNULL)))) CROSS JOIN vt0 ON CASE WHEN ((rt1.c1) NOT BETWEEN (x'f230') AND (vt1.c2)) THEN ((vt1.c3)<<(vt1.c0)) END WHERE ((NOT ((((vt1.c1, vt1.c3, vt0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN vt1.c1 END, CAST(vt0.c0 AS INTEGER), CASE WHEN rt1.c0 THEN vt1.c0 END)) AND ((((vt1.c1)-(vt1.c1)), rt1.c0, ((vt1.c3)>(vt1.c3)))))))) UNION SELECT DISTINCT vt1.c3, rt1.c0, vt1.c2, vt1.c1, rt1.c2, vt0.c0, vt1.c0, rt1.c1 FROM rt1 CROSS JOIN vt1 ON (((rt1.c0, rt1.c0, vt1.c1)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)), ((rt1.c2)GLOB(x'')), ((((rt1.c0)AND(rt1.c2)))OR(rt1.c0)))) AND (('qj31q	', ((vt1.c2) BETWEEN (vt1.c2) AND (vt1.c3)), ((vt1.c2) NOTNULL)))) CROSS JOIN vt0 ON CASE WHEN ((rt1.c1) NOT BETWEEN (x'f230') AND (vt1.c2)) THEN ((vt1.c3)<<(vt1.c0)) END WHERE ((((((vt1.c1, vt1.c3, vt0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN vt1.c1 END, CAST(vt0.c0 AS INTEGER), CASE WHEN rt1.c0 THEN vt1.c0 END)) AND ((((vt1.c1)-(vt1.c1)), rt1.c0, ((vt1.c3)>(vt1.c3)))))) ISNULL));
SELECT DISTINCT vt1.c3, rt1.c0, vt1.c2, vt1.c1, rt1.c2, vt0.c0, vt1.c0, rt1.c1 FROM rt1 CROSS JOIN vt1 ON (((rt1.c0, rt1.c0, vt1.c1)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)), ((rt1.c2)GLOB(x'')), ((((rt1.c0)AND(rt1.c2)))OR(rt1.c0)))) AND (('qj31q	', ((vt1.c2) BETWEEN (vt1.c2) AND (vt1.c3)), ((vt1.c2) NOTNULL)))) CROSS JOIN vt0 ON CASE WHEN ((rt1.c1) NOT BETWEEN (x'f230') AND (vt1.c2)) THEN ((vt1.c3)<<(vt1.c0)) END;
SELECT vt1.c2, rt1.c0, rt1.c1, vt1.c3, vt1.c0, rt1.c2, vt1.c1 FROM vt1 CROSS JOIN rt1 ON CASE CAST(vt1.c3 AS REAL)  WHEN ((((((((x'')AND('')))OR(vt1.c1)))OR(vt1.c1)))AND(x'')) THEN ((((((((((((x'')AND(vt1.c3)))AND(rt1.c2)))AND(vt1.c3)))AND(rt1.c0)))AND(x'')))OR(vt1.c3)) WHEN UPPER(vt1.c2) THEN ((vt1.c1) NOT NULL) WHEN (~ (vt1.c2)) THEN (((vt1.c2, vt1.c1, vt1.c3)) BETWEEN ((vt1.c3, vt1.c3, vt1.c0)) AND ((rt1.c1, vt1.c1, rt1.c0))) END GROUP BY vt1.c2, rt1.c0, rt1.c1, vt1.c3, vt1.c0, rt1.c2, vt1.c1;
SELECT ALL vt1.c2, rt1.c0, rt1.c1, vt1.c3, vt1.c0, rt1.c2, vt1.c1 FROM vt1 NOT INDEXED CROSS JOIN rt1 ON CASE CAST(vt1.c3 AS REAL)  WHEN ((((((((x'')AND('')))OR(vt1.c1)))OR(vt1.c1)))AND(x'')) THEN ((((((((((((x'')AND(vt1.c3)))AND(rt1.c2)))AND(vt1.c3)))AND(rt1.c0)))AND(x'')))OR(vt1.c3)) WHEN UPPER(vt1.c2) THEN ((vt1.c1) NOT NULL) WHEN (~ (vt1.c2)) THEN (((vt1.c2, vt1.c1, vt1.c3)) BETWEEN ((vt1.c3, vt1.c3, vt1.c0)) AND ((rt1.c1, vt1.c1, rt1.c0))) END WHERE (CASE WHEN rt1.c1 COLLATE NOCASE THEN (((vt1.c1))!=((vt1.c2))) WHEN NULL THEN TRIM(DISTINCT vt1.c2) WHEN 0X7130a679 COLLATE RTRIM THEN (rt1.c2 IN ()) ELSE ((((vt1.c1)AND(vt1.c2)))AND(vt1.c1)) END) GROUP BY vt1.c2, rt1.c0, rt1.c1, vt1.c3, vt1.c0, rt1.c2, vt1.c1 UNION SELECT ALL vt1.c2, rt1.c0, rt1.c1, vt1.c3, vt1.c0, rt1.c2, vt1.c1 FROM vt1 CROSS JOIN rt1 ON CASE CAST(vt1.c3 AS REAL)  WHEN ((((((((x'')AND('')))OR(vt1.c1)))OR(vt1.c1)))AND(x'')) THEN ((((((((((((x'')AND(vt1.c3)))AND(rt1.c2)))AND(vt1.c3)))AND(rt1.c0)))AND(x'')))OR(vt1.c3)) WHEN UPPER(vt1.c2) THEN ((vt1.c1) NOT NULL) WHEN (~ (vt1.c2)) THEN (((vt1.c2, vt1.c1, vt1.c3)) BETWEEN ((vt1.c3, vt1.c3, vt1.c0)) AND ((rt1.c1, vt1.c1, rt1.c0))) END WHERE ((NOT (CASE WHEN rt1.c1 COLLATE NOCASE THEN (((vt1.c1))<>((vt1.c2))) WHEN NULL THEN TRIM(DISTINCT vt1.c2) WHEN 0x7130a679 COLLATE RTRIM THEN (rt1.c2 IN ()) ELSE ((((vt1.c1)AND(vt1.c2)))AND(vt1.c1)) END))) GROUP BY vt1.c2, rt1.c0, rt1.c1, vt1.c3, vt1.c0, rt1.c2, vt1.c1 UNION SELECT vt1.c2, rt1.c0, rt1.c1, vt1.c3, vt1.c0, rt1.c2, vt1.c1 FROM vt1 CROSS JOIN rt1 ON CASE CAST(vt1.c3 AS REAL)  WHEN ((((((((x'')AND('')))OR(vt1.c1)))OR(vt1.c1)))AND(x'')) THEN ((((((((((((x'')AND(vt1.c3)))AND(rt1.c2)))AND(vt1.c3)))AND(rt1.c0)))AND(x'')))OR(vt1.c3)) WHEN UPPER(vt1.c2) THEN ((vt1.c1) NOT NULL) WHEN (~ (vt1.c2)) THEN (((vt1.c2, vt1.c1, vt1.c3)) BETWEEN ((vt1.c3, vt1.c3, vt1.c0)) AND ((rt1.c1, vt1.c1, rt1.c0))) END WHERE (((CASE WHEN rt1.c1 COLLATE NOCASE THEN (((vt1.c1))!=((vt1.c2))) WHEN NULL THEN TRIM(DISTINCT vt1.c2) WHEN 0X7130a679 COLLATE RTRIM THEN (rt1.c2 IN ()) ELSE ((((vt1.c1)AND(vt1.c2)))AND(vt1.c1)) END) ISNULL)) GROUP BY vt1.c2, rt1.c0, rt1.c1, vt1.c3, vt1.c0, rt1.c2, vt1.c1;
SELECT vt1.c2, rt1.c0, rt1.c1, vt1.c3, vt1.c0, rt1.c2, vt1.c1 FROM vt1 CROSS JOIN rt1 ON CASE CAST(vt1.c3 AS REAL)  WHEN ((((((((x'')AND('')))OR(vt1.c1)))OR(vt1.c1)))AND(x'')) THEN ((((((((((((x'')AND(vt1.c3)))AND(rt1.c2)))AND(vt1.c3)))AND(rt1.c0)))AND(x'')))OR(vt1.c3)) WHEN UPPER(vt1.c2) THEN ((vt1.c1) NOT NULL) WHEN (~ (vt1.c2)) THEN (((vt1.c2, vt1.c1, vt1.c3)) BETWEEN ((vt1.c3, vt1.c3, vt1.c0)) AND ((rt1.c1, vt1.c1, rt1.c0))) END GROUP BY vt1.c2, rt1.c0, rt1.c1, vt1.c3, vt1.c0, rt1.c2, vt1.c1;
SELECT rt0.c0, vt0.c0, rt1.c0, rt0.c1, rt0.c3, rt1.c2 FROM rt0, rt1, vt0 GROUP BY rt0.c0, vt0.c0, rt1.c0, rt0.c1, rt0.c3, rt1.c2;
SELECT rt0.c0, vt0.c0, rt1.c0, rt0.c1, rt0.c3, rt1.c2 FROM rt0, rt1, vt0 GROUP BY rt0.c0, vt0.c0, rt1.c0, rt0.c1, rt0.c3, rt1.c2 HAVING ((((COUNT(*) COLLATE NOCASE)OR(AVG(MIN(rt1.c1)))))AND(MIN(COUNT(AVG(TOTAL(COUNT(*))))))) UNION ALL SELECT rt0.c0, vt0.c0, rt1.c0, rt0.c1, rt0.c3, rt1.c2 FROM rt0, rt1, vt0 GROUP BY rt0.c0, vt0.c0, rt1.c0, rt0.c1, rt0.c3, rt1.c2 HAVING (NOT (((((COUNT(*) COLLATE NOCASE)OR(AVG(MIN(rt1.c1)))))AND(MIN(COUNT(AVG(TOTAL(COUNT(*))))))))) UNION ALL SELECT rt0.c0, vt0.c0, rt1.c0, rt0.c1, rt0.c3, rt1.c2 FROM rt0, rt1, vt0 GROUP BY rt0.c0, vt0.c0, rt1.c0, rt0.c1, rt0.c3, rt1.c2 HAVING ((((((COUNT(*) COLLATE NOCASE)OR(AVG(MIN(rt1.c1)))))AND(MIN(COUNT(AVG(TOTAL(COUNT(*)))))))) ISNULL);
SELECT ALL * FROM rt0, vt0, vt1, rt1;
SELECT ALL * FROM rt0, vt0, vt1, rt1 WHERE ('?') UNION ALL SELECT * FROM rt0, vt0, vt1, rt1 WHERE ((NOT ('?'))) UNION ALL SELECT * FROM rt0, vt0, vt1, rt1 WHERE ((('?') ISNULL));
SELECT ALL * FROM rt0, vt0, vt1, rt1;
SELECT DISTINCT * FROM vt0, rt0, rt1 LEFT OUTER JOIN vt1 ON '';
SELECT DISTINCT * FROM vt0, rt0, rt1 LEFT OUTER JOIN vt1 ON '' WHERE (vt1.c2) UNION SELECT DISTINCT * FROM vt0 NOT INDEXED, rt0, rt1 LEFT OUTER JOIN vt1 ON '' WHERE ((NOT (vt1.c2))) UNION SELECT DISTINCT * FROM vt0, rt0, rt1 LEFT OUTER JOIN vt1 ON '' WHERE (((vt1.c2) ISNULL));
SELECT DISTINCT * FROM vt0, rt0, rt1 LEFT OUTER JOIN vt1 ON '';
SELECT ALL vt1.c1, vt1.c2, vt1.c3, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt1.c2, vt1.c3, vt0.c0;
SELECT vt1.c1, vt1.c2, vt1.c3, vt0.c0 FROM vt0, vt1 WHERE (0.7306703006499065) GROUP BY vt1.c1, vt1.c2, vt1.c3, vt0.c0 UNION SELECT vt1.c1, vt1.c2, vt1.c3, vt0.c0 FROM vt0, vt1 WHERE ((NOT (0.7306703006499065))) GROUP BY vt1.c1, vt1.c2, vt1.c3, vt0.c0 UNION SELECT ALL vt1.c1, vt1.c2, vt1.c3, vt0.c0 FROM vt0, vt1 WHERE (((0.7306703006499065) ISNULL)) GROUP BY vt1.c1, vt1.c2, vt1.c3, vt0.c0;
SELECT ALL vt1.c1, vt1.c2, vt1.c3, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt1.c2, vt1.c3, vt0.c0;
SELECT vt1.c3, rt1.c2, vt1.c2, vt1.c0, rt1.c0 FROM rt1, vt1 GROUP BY vt1.c3, rt1.c2, vt1.c2, vt1.c0, rt1.c0;
SELECT vt1.c3, rt1.c2, vt1.c2, vt1.c0, rt1.c0 FROM rt1, vt1 GROUP BY vt1.c3, rt1.c2, vt1.c2, vt1.c0, rt1.c0 HAVING CAST((NOT (vt1.c1)) AS NUMERIC) UNION ALL SELECT vt1.c3, rt1.c2, vt1.c2, vt1.c0, rt1.c0 FROM rt1, vt1 GROUP BY vt1.c3, rt1.c2, vt1.c2, vt1.c0, rt1.c0 HAVING (NOT (CAST((NOT (vt1.c1)) AS NUMERIC))) UNION ALL SELECT ALL vt1.c3, rt1.c2, vt1.c2, vt1.c0, rt1.c0 FROM rt1, vt1 GROUP BY vt1.c3, rt1.c2, vt1.c2, vt1.c0, rt1.c0 HAVING ((CAST((NOT (vt1.c1)) AS NUMERIC)) ISNULL);
SELECT vt1.c3, rt1.c2, vt1.c2, vt1.c0, rt1.c0 FROM rt1, vt1 GROUP BY vt1.c3, rt1.c2, vt1.c2, vt1.c0, rt1.c0;
SELECT vt1.c3, rt1.c2, vt1.c2, vt1.c0, rt1.c0 FROM rt1, vt1 GROUP BY vt1.c3, rt1.c2, vt1.c2, vt1.c0, rt1.c0 HAVING CAST((NOT (vt1.c1)) AS NUMERIC) UNION ALL SELECT vt1.c3, rt1.c2, vt1.c2, vt1.c0, rt1.c0 FROM rt1, vt1 GROUP BY vt1.c3, rt1.c2, vt1.c2, vt1.c0, rt1.c0 HAVING (NOT (CAST((NOT (vt1.c1)) AS NUMERIC))) UNION ALL SELECT ALL vt1.c3, rt1.c2, vt1.c2, vt1.c0, rt1.c0 FROM rt1, vt1 GROUP BY vt1.c3, rt1.c2, vt1.c2, vt1.c0, rt1.c0 HAVING ((CAST((NOT (vt1.c1)) AS NUMERIC)) ISNULL);
SELECT vt1.c3, rt1.c2, vt1.c2, vt1.c0, rt1.c0 FROM rt1, vt1 GROUP BY vt1.c3, rt1.c2, vt1.c2, vt1.c0, rt1.c0;
SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1;
SELECT rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE ((('-685207331') NOT BETWEEN ((rt1.c2 IN ())) AND (((rt1.c1) IS FALSE)))) UNION ALL SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE ((NOT ((('-685207331') NOT BETWEEN ((rt1.c2 IN ())) AND (((rt1.c1) IS FALSE)))))) UNION ALL SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE ((((('-685207331') NOT BETWEEN ((rt1.c2 IN ())) AND (((rt1.c1) IS FALSE)))) ISNULL));
SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1;
SELECT DISTINCT rt0.c1, vt1.c0, rt1.c0, vt1.c2, rt0.c3, rt1.c2, rt0.c0 FROM rt0, vt0, rt1 CROSS JOIN vt1 ON x'';
SELECT DISTINCT rt0.c1, vt1.c0, rt1.c0, vt1.c2, rt0.c3, rt1.c2, rt0.c0 FROM rt0, vt0, rt1 CROSS JOIN vt1 ON x'' WHERE ((((((((rt1.c0))>((vt1.c2))))AND((+ (rt1.c2)))))AND(((rt1.c0)||(rt0.c1))))) UNION SELECT DISTINCT rt0.c1, vt1.c0, rt1.c0, vt1.c2, rt0.c3, rt1.c2, rt0.c0 FROM rt0, vt0, rt1 CROSS JOIN vt1 ON x'' WHERE ((NOT ((((((((rt1.c0))>((vt1.c2))))AND((+ (rt1.c2)))))AND(((rt1.c0)||(rt0.c1))))))) UNION SELECT DISTINCT rt0.c1, vt1.c0, rt1.c0, vt1.c2, rt0.c3, rt1.c2, rt0.c0 FROM rt0, vt0, rt1 CROSS JOIN vt1 ON x'' WHERE ((((((((((rt1.c0))>((vt1.c2))))AND((+ (rt1.c2)))))AND(((rt1.c0)||(rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c1, vt1.c0, rt1.c0, vt1.c2, rt0.c3, rt1.c2, rt0.c0 FROM rt0, vt0, rt1 CROSS JOIN vt1 ON x'';
SELECT ALL vt1.c0, rt0.c1, vt1.c3 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c1, vt1.c3;
SELECT vt1.c0, rt0.c1, vt1.c3 FROM rt0, vt1 WHERE (((((((vt1.c1) NOT NULL))OR(((vt1.c2) NOT BETWEEN (vt1.c1) AND (vt1.c3)))))AND((vt1.c3 IN ())))) GROUP BY vt1.c0, rt0.c1, vt1.c3 UNION SELECT ALL vt1.c0, rt0.c1, vt1.c3 FROM rt0, vt1 WHERE ((NOT (((((((vt1.c1) NOT NULL))OR(((vt1.c2) NOT BETWEEN (vt1.c1) AND (vt1.c3)))))AND((vt1.c3 IN ())))))) GROUP BY vt1.c0, rt0.c1, vt1.c3 UNION SELECT ALL vt1.c0, rt0.c1, vt1.c3 FROM rt0, vt1 WHERE (((((((((vt1.c1) NOT NULL))OR(((vt1.c2) NOT BETWEEN (vt1.c1) AND (vt1.c3)))))AND((vt1.c3 IN ())))) ISNULL)) GROUP BY vt1.c0, rt0.c1, vt1.c3;
SELECT ALL vt1.c0, rt0.c1, vt1.c3 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c1, vt1.c3;
SELECT ALL rt1.c1, vt1.c1, rt1.c2, vt1.c2, vt1.c0, vt1.c3, rt1.c0 FROM vt1, rt1 GROUP BY rt1.c1, vt1.c1, rt1.c2, vt1.c2, vt1.c0, vt1.c3, rt1.c0;
SELECT rt1.c1, vt1.c1, rt1.c2, vt1.c2, vt1.c0, vt1.c3, rt1.c0 FROM vt1, rt1 GROUP BY rt1.c1, vt1.c1, rt1.c2, vt1.c2, vt1.c0, vt1.c3, rt1.c0 HAVING MIN(GROUP_CONCAT(COUNT(0.837632084919528))) UNION ALL SELECT ALL rt1.c1, vt1.c1, rt1.c2, vt1.c2, vt1.c0, vt1.c3, rt1.c0 FROM vt1, rt1 GROUP BY rt1.c1, vt1.c1, rt1.c2, vt1.c2, vt1.c0, vt1.c3, rt1.c0 HAVING (NOT (MIN(GROUP_CONCAT(COUNT(0.837632084919528))))) UNION ALL SELECT ALL rt1.c1, vt1.c1, rt1.c2, vt1.c2, vt1.c0, vt1.c3, rt1.c0 FROM vt1, rt1 GROUP BY rt1.c1, vt1.c1, rt1.c2, vt1.c2, vt1.c0, vt1.c3, rt1.c0 HAVING ((MIN(GROUP_CONCAT(COUNT(0.837632084919528)))) ISNULL);
SELECT rt1.c1, rt0.c1, rt1.c0, vt1.c1, vt1.c2, rt0.c3, vt1.c0 FROM rt1, vt1, rt0, vt0;
SELECT rt1.c1, rt0.c1, rt1.c0, vt1.c1, vt1.c2, rt0.c3, vt1.c0 FROM rt1, vt1, rt0, vt0 WHERE ((~ (rt0.c0)) COLLATE RTRIM) UNION ALL SELECT rt1.c1, rt0.c1, rt1.c0, vt1.c1, vt1.c2, rt0.c3, vt1.c0 FROM rt1, vt1, rt0, vt0 WHERE ((NOT ((~ (rt0.c0)) COLLATE RTRIM))) UNION ALL SELECT rt1.c1, rt0.c1, rt1.c0, vt1.c1, vt1.c2, rt0.c3, vt1.c0 FROM rt1, vt1, rt0, vt0 WHERE ((((~ (rt0.c0)) COLLATE RTRIM) ISNULL));
SELECT rt1.c1, rt0.c1, rt1.c0, vt1.c1, vt1.c2, rt0.c3, vt1.c0 FROM rt1, vt1, rt0, vt0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (((((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c1)))IS((NOT (rt1.c2))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (((((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c1)))IS((NOT (rt1.c2))))))) UNION SELECT DISTINCT * FROM rt1 WHERE (((((((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c1)))IS((NOT (rt1.c2))))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT vt0.c0, vt1.c3, rt0.c0, vt1.c0, vt1.c1, vt1.c2 FROM rt0 LEFT OUTER JOIN vt0 ON ((vt1.c1) IS TRUE) COLLATE RTRIM FULL OUTER JOIN vt1 ON (((vt1.c2) ISNULL) IN ()) GROUP BY vt0.c0, vt1.c3, rt0.c0, vt1.c0, vt1.c1, vt1.c2;
SELECT ALL vt0.c0 FROM rt1, vt0, rt0, vt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM rt1, vt0, rt0, vt1 GROUP BY vt0.c0 HAVING x'' UNION ALL SELECT ALL vt0.c0 FROM rt1, vt0, rt0, vt1 GROUP BY vt0.c0 HAVING (NOT (x'')) UNION ALL SELECT ALL vt0.c0 FROM rt1, vt0, rt0, vt1 GROUP BY vt0.c0 HAVING ((x'') ISNULL);
SELECT ALL vt0.c0 FROM rt1, vt0, rt0, vt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM rt1, vt0, rt0, vt1 GROUP BY vt0.c0 HAVING x'' UNION ALL SELECT ALL vt0.c0 FROM rt1, vt0, rt0, vt1 GROUP BY vt0.c0 HAVING (NOT (x'')) UNION ALL SELECT ALL vt0.c0 FROM rt1, vt0, rt0, vt1 GROUP BY vt0.c0 HAVING ((x'') ISNULL);
SELECT ALL vt0.c0 FROM rt1, vt0, rt0, vt1 GROUP BY vt0.c0;
SELECT * FROM rt0, vt1 INNER JOIN rt1 ON LOWER(DISTINCT CASE vt1.c1  WHEN rt0.c3 THEN rt1.c2 ELSE 0.6612939890252727 END);
SELECT ALL * FROM rt0, vt1 INNER JOIN rt1 ON LOWER(DISTINCT CASE vt1.c1  WHEN rt0.c3 THEN rt1.c2 ELSE 0.6612939890252727 END) WHERE ((+ (TYPEOF(vt1.c0)))) UNION ALL SELECT ALL * FROM rt0, vt1 INNER JOIN rt1 ON LOWER(DISTINCT CASE vt1.c1  WHEN rt0.c3 THEN rt1.c2 ELSE 0.6612939890252727 END) WHERE ((NOT ((+ (TYPEOF(vt1.c0)))))) UNION ALL SELECT ALL * FROM rt0, vt1 INNER JOIN rt1 ON LOWER(DISTINCT CASE vt1.c1  WHEN rt0.c3 THEN rt1.c2 ELSE 0.6612939890252727 END) WHERE ((((+ (TYPEOF(vt1.c0)))) ISNULL));
SELECT * FROM rt0, vt1 INNER JOIN rt1 ON LOWER(DISTINCT CASE vt1.c1  WHEN rt0.c3 THEN rt1.c2 ELSE 0.6612939890252727 END);
SELECT DISTINCT * FROM vt0, rt1;
SELECT DISTINCT * FROM vt0, rt1 WHERE (CAST(x'' AS BLOB)) UNION SELECT DISTINCT * FROM vt0, rt1 WHERE ((NOT (CAST(x'' AS BLOB)))) UNION SELECT DISTINCT * FROM vt0, rt1 WHERE (((CAST(x'' AS BLOB)) ISNULL));
SELECT DISTINCT * FROM vt0, rt1;
SELECT ALL vt0.c0 FROM vt1 NATURAL JOIN vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1 NATURAL JOIN vt0 WHERE (ROUND(vt1.c0, (vt1.c2 IN ()))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt1 NATURAL JOIN vt0 WHERE ((NOT (ROUND(vt1.c0, (vt1.c2 IN ()))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt1 NATURAL JOIN vt0 WHERE (((ROUND(vt1.c0, (vt1.c2 IN ()))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1 NATURAL JOIN vt0 GROUP BY vt0.c0;
SELECT ALL vt1.c1, rt0.c1, vt1.c0, rt0.c2, rt1.c1 FROM vt0 INNER JOIN rt0 ON ((('%A'))>=((vt1.c1))) INNER JOIN vt1 ON ((NOT (rt0.c3)) IN ()) LEFT OUTER JOIN rt1 ON CASE ((((((((vt1.c2)AND(vt1.c0)))OR('-1642920441')))AND(rt0.c0)))AND(rt0.c0))  WHEN ((((vt0.c0)AND(vt1.c3)))AND(vt1.c2)) THEN (0.5652897336453636 IN (vt1.c3)) WHEN ((((vt1.c2)AND(rt1.c2)))AND(vt1.c3)) THEN ((rt0.c1)IS(rt0.c3)) WHEN CASE rt0.c1  WHEN rt0.c2 THEN rt1.c2 WHEN vt1.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c3 ELSE rt1.c1 END THEN ((vt0.c0)<=(vt1.c2)) WHEN ((((rt0.c0)AND(rt0.c0)))OR(rt1.c0)) THEN COALESCE(DISTINCT vt1.c2, vt0.c0) WHEN vt1.c0 THEN ((0.31765495314197234) BETWEEN (NULL) AND (vt1.c3)) END GROUP BY vt1.c1, rt0.c1, vt1.c0, rt0.c2, rt1.c1;
SELECT vt1.c1, rt0.c1, vt1.c0, rt0.c2, rt1.c1 FROM vt0 INNER JOIN rt0 ON ((('%A'))>=((vt1.c1))) INNER JOIN vt1 ON ((NOT (rt0.c3)) IN ()) LEFT OUTER JOIN rt1 ON CASE ((((((((vt1.c2)AND(vt1.c0)))OR('-1642920441')))AND(rt0.c0)))AND(rt0.c0))  WHEN ((((vt0.c0)AND(vt1.c3)))AND(vt1.c2)) THEN (0.5652897336453636 IN (vt1.c3)) WHEN ((((vt1.c2)AND(rt1.c2)))AND(vt1.c3)) THEN ((rt0.c1)IS(rt0.c3)) WHEN CASE rt0.c1  WHEN rt0.c2 THEN rt1.c2 WHEN vt1.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c3 ELSE rt1.c1 END THEN ((vt0.c0)<=(vt1.c2)) WHEN ((((rt0.c0)AND(rt0.c0)))OR(rt1.c0)) THEN COALESCE(DISTINCT vt1.c2, vt0.c0) WHEN vt1.c0 THEN ((0.31765495314197234) BETWEEN (NULL) AND (vt1.c3)) END GROUP BY vt1.c1, rt0.c1, vt1.c0, rt0.c2, rt1.c1 HAVING COUNT(rt0.c1) COLLATE NOCASE COLLATE NOCASE UNION ALL SELECT vt1.c1, rt0.c1, vt1.c0, rt0.c2, rt1.c1 FROM vt0 INNER JOIN rt0 ON ((('%A'))>=((vt1.c1))) INNER JOIN vt1 ON ((NOT (rt0.c3)) IN ()) LEFT OUTER JOIN rt1 ON CASE ((((((((vt1.c2)AND(vt1.c0)))OR('-1642920441')))AND(rt0.c0)))AND(rt0.c0))  WHEN ((((vt0.c0)AND(vt1.c3)))AND(vt1.c2)) THEN (0.5652897336453636 IN (vt1.c3)) WHEN ((((vt1.c2)AND(rt1.c2)))AND(vt1.c3)) THEN ((rt0.c1)IS(rt0.c3)) WHEN CASE rt0.c1  WHEN rt0.c2 THEN rt1.c2 WHEN vt1.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c3 ELSE rt1.c1 END THEN ((vt0.c0)<=(vt1.c2)) WHEN ((((rt0.c0)AND(rt0.c0)))OR(rt1.c0)) THEN COALESCE(DISTINCT vt1.c2, vt0.c0) WHEN vt1.c0 THEN ((0.31765495314197234) BETWEEN (NULL) AND (vt1.c3)) END GROUP BY vt1.c1, rt0.c1, vt1.c0, rt0.c2, rt1.c1 HAVING (NOT (COUNT(rt0.c1) COLLATE NOCASE COLLATE NOCASE)) UNION ALL SELECT ALL vt1.c1, rt0.c1, vt1.c0, rt0.c2, rt1.c1 FROM vt0 INNER JOIN rt0 ON ((('%A'))>=((vt1.c1))) INNER JOIN vt1 ON ((NOT (rt0.c3)) IN ()) LEFT OUTER JOIN rt1 ON CASE ((((((((vt1.c2)AND(vt1.c0)))OR('-1642920441')))AND(rt0.c0)))AND(rt0.c0))  WHEN ((((vt0.c0)AND(vt1.c3)))AND(vt1.c2)) THEN (0.5652897336453636 IN (vt1.c3)) WHEN ((((vt1.c2)AND(rt1.c2)))AND(vt1.c3)) THEN ((rt0.c1)IS(rt0.c3)) WHEN CASE rt0.c1  WHEN rt0.c2 THEN rt1.c2 WHEN vt1.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c3 ELSE rt1.c1 END THEN ((vt0.c0)<=(vt1.c2)) WHEN ((((rt0.c0)AND(rt0.c0)))OR(rt1.c0)) THEN COALESCE(DISTINCT vt1.c2, vt0.c0) WHEN vt1.c0 THEN ((0.31765495314197234) BETWEEN (NULL) AND (vt1.c3)) END GROUP BY vt1.c1, rt0.c1, vt1.c0, rt0.c2, rt1.c1 HAVING ((COUNT(rt0.c1) COLLATE NOCASE COLLATE NOCASE) ISNULL);
SELECT ALL vt1.c1, rt0.c1, vt1.c0, rt0.c2, rt1.c1 FROM vt0 INNER JOIN rt0 ON ((('%A'))>=((vt1.c1))) INNER JOIN vt1 ON ((NOT (rt0.c3)) IN ()) LEFT OUTER JOIN rt1 ON CASE ((((((((vt1.c2)AND(vt1.c0)))OR('-1642920441')))AND(rt0.c0)))AND(rt0.c0))  WHEN ((((vt0.c0)AND(vt1.c3)))AND(vt1.c2)) THEN (0.5652897336453636 IN (vt1.c3)) WHEN ((((vt1.c2)AND(rt1.c2)))AND(vt1.c3)) THEN ((rt0.c1)IS(rt0.c3)) WHEN CASE rt0.c1  WHEN rt0.c2 THEN rt1.c2 WHEN vt1.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c3 ELSE rt1.c1 END THEN ((vt0.c0)<=(vt1.c2)) WHEN ((((rt0.c0)AND(rt0.c0)))OR(rt1.c0)) THEN COALESCE(DISTINCT vt1.c2, vt0.c0) WHEN vt1.c0 THEN ((0.31765495314197234) BETWEEN (NULL) AND (vt1.c3)) END GROUP BY vt1.c1, rt0.c1, vt1.c0, rt0.c2, rt1.c1;
SELECT vt1.c1, rt0.c1, vt1.c0, rt0.c2, rt1.c1 FROM vt0 INNER JOIN rt0 ON ((('%A'))>=((vt1.c1))) INNER JOIN vt1 ON ((NOT (rt0.c3)) IN ()) LEFT OUTER JOIN rt1 ON CASE ((((((((vt1.c2)AND(vt1.c0)))OR('-1642920441')))AND(rt0.c0)))AND(rt0.c0))  WHEN ((((vt0.c0)AND(vt1.c3)))AND(vt1.c2)) THEN (0.5652897336453636 IN (vt1.c3)) WHEN ((((vt1.c2)AND(rt1.c2)))AND(vt1.c3)) THEN ((rt0.c1)IS(rt0.c3)) WHEN CASE rt0.c1  WHEN rt0.c2 THEN rt1.c2 WHEN vt1.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c3 ELSE rt1.c1 END THEN ((vt0.c0)<=(vt1.c2)) WHEN ((((rt0.c0)AND(rt0.c0)))OR(rt1.c0)) THEN COALESCE(DISTINCT vt1.c2, vt0.c0) WHEN vt1.c0 THEN ((0.31765495314197234) BETWEEN (NULL) AND (vt1.c3)) END GROUP BY vt1.c1, rt0.c1, vt1.c0, rt0.c2, rt1.c1 HAVING COUNT(rt0.c1) COLLATE NOCASE COLLATE NOCASE UNION ALL SELECT vt1.c1, rt0.c1, vt1.c0, rt0.c2, rt1.c1 FROM vt0 INNER JOIN rt0 ON ((('%A'))>=((vt1.c1))) INNER JOIN vt1 ON ((NOT (rt0.c3)) IN ()) LEFT OUTER JOIN rt1 ON CASE ((((((((vt1.c2)AND(vt1.c0)))OR('-1642920441')))AND(rt0.c0)))AND(rt0.c0))  WHEN ((((vt0.c0)AND(vt1.c3)))AND(vt1.c2)) THEN (0.5652897336453636 IN (vt1.c3)) WHEN ((((vt1.c2)AND(rt1.c2)))AND(vt1.c3)) THEN ((rt0.c1)IS(rt0.c3)) WHEN CASE rt0.c1  WHEN rt0.c2 THEN rt1.c2 WHEN vt1.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c3 ELSE rt1.c1 END THEN ((vt0.c0)<=(vt1.c2)) WHEN ((((rt0.c0)AND(rt0.c0)))OR(rt1.c0)) THEN COALESCE(DISTINCT vt1.c2, vt0.c0) WHEN vt1.c0 THEN ((0.31765495314197234) BETWEEN (NULL) AND (vt1.c3)) END GROUP BY vt1.c1, rt0.c1, vt1.c0, rt0.c2, rt1.c1 HAVING (NOT (COUNT(rt0.c1) COLLATE NOCASE COLLATE NOCASE)) UNION ALL SELECT ALL vt1.c1, rt0.c1, vt1.c0, rt0.c2, rt1.c1 FROM vt0 INNER JOIN rt0 ON ((('%A'))>=((vt1.c1))) INNER JOIN vt1 ON ((NOT (rt0.c3)) IN ()) LEFT OUTER JOIN rt1 ON CASE ((((((((vt1.c2)AND(vt1.c0)))OR('-1642920441')))AND(rt0.c0)))AND(rt0.c0))  WHEN ((((vt0.c0)AND(vt1.c3)))AND(vt1.c2)) THEN (0.5652897336453636 IN (vt1.c3)) WHEN ((((vt1.c2)AND(rt1.c2)))AND(vt1.c3)) THEN ((rt0.c1)IS(rt0.c3)) WHEN CASE rt0.c1  WHEN rt0.c2 THEN rt1.c2 WHEN vt1.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c3 ELSE rt1.c1 END THEN ((vt0.c0)<=(vt1.c2)) WHEN ((((rt0.c0)AND(rt0.c0)))OR(rt1.c0)) THEN COALESCE(DISTINCT vt1.c2, vt0.c0) WHEN vt1.c0 THEN ((0.31765495314197234) BETWEEN (NULL) AND (vt1.c3)) END GROUP BY vt1.c1, rt0.c1, vt1.c0, rt0.c2, rt1.c1 HAVING ((COUNT(rt0.c1) COLLATE NOCASE COLLATE NOCASE) ISNULL);
SELECT ALL vt1.c1, rt0.c1, vt1.c0, rt0.c2, rt1.c1 FROM vt0 INNER JOIN rt0 ON ((('%A'))>=((vt1.c1))) INNER JOIN vt1 ON ((NOT (rt0.c3)) IN ()) LEFT OUTER JOIN rt1 ON CASE ((((((((vt1.c2)AND(vt1.c0)))OR('-1642920441')))AND(rt0.c0)))AND(rt0.c0))  WHEN ((((vt0.c0)AND(vt1.c3)))AND(vt1.c2)) THEN (0.5652897336453636 IN (vt1.c3)) WHEN ((((vt1.c2)AND(rt1.c2)))AND(vt1.c3)) THEN ((rt0.c1)IS(rt0.c3)) WHEN CASE rt0.c1  WHEN rt0.c2 THEN rt1.c2 WHEN vt1.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c3 ELSE rt1.c1 END THEN ((vt0.c0)<=(vt1.c2)) WHEN ((((rt0.c0)AND(rt0.c0)))OR(rt1.c0)) THEN COALESCE(DISTINCT vt1.c2, vt0.c0) WHEN vt1.c0 THEN ((0.31765495314197234) BETWEEN (NULL) AND (vt1.c3)) END GROUP BY vt1.c1, rt0.c1, vt1.c0, rt0.c2, rt1.c1;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)<(vt0.c0)) IN ())) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((((vt0.c0)<(vt0.c0)) IN ())))) UNION ALL SELECT * FROM vt0 WHERE ((((((vt0.c0)<(vt0.c0)) IN ())) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt1.c0, vt1.c1, vt0.c0, rt0.c3, rt0.c1 FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON (((- (vt1.c1))) BETWEEN (((rt0.c3)OR(vt1.c3))) AND (rt0.c0 COLLATE RTRIM));
SELECT DISTINCT vt1.c0, vt1.c1, vt0.c0, rt0.c3, rt0.c1 FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON (((- (vt1.c1))) BETWEEN (((rt0.c3)OR(vt1.c3))) AND (rt0.c0 COLLATE RTRIM)) WHERE ((((vt1.c0)GLOB(rt0.c3)) IN ('my'))) UNION SELECT DISTINCT vt1.c0, vt1.c1, vt0.c0, rt0.c3, rt0.c1 FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON (((- (vt1.c1))) BETWEEN (((rt0.c3)OR(vt1.c3))) AND (rt0.c0 COLLATE RTRIM)) WHERE ((NOT ((((vt1.c0)GLOB(rt0.c3)) IN ('my'))))) UNION SELECT DISTINCT vt1.c0, vt1.c1, vt0.c0, rt0.c3, rt0.c1 FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON (((- (vt1.c1))) BETWEEN (((rt0.c3)OR(vt1.c3))) AND (rt0.c0 COLLATE RTRIM)) WHERE ((((((vt1.c0)GLOB(rt0.c3)) IN ('my'))) ISNULL));
SELECT DISTINCT vt1.c0, vt1.c1, vt0.c0, rt0.c3, rt0.c1 FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON (((- (vt1.c1))) BETWEEN (((rt0.c3)OR(vt1.c3))) AND (rt0.c0 COLLATE RTRIM));
SELECT rt1.c2, rt1.c0, vt1.c1 FROM vt0, vt1, rt1 GROUP BY rt1.c2, rt1.c0, vt1.c1;
SELECT rt1.c2, rt1.c0, vt1.c1 FROM vt0, vt1, rt1 WHERE ((NOT ((rt1.c1 IN ())))) GROUP BY rt1.c2, rt1.c0, vt1.c1 UNION SELECT rt1.c2, rt1.c0, vt1.c1 FROM vt0, vt1, rt1 WHERE ((NOT ((NOT ((rt1.c1 IN ())))))) GROUP BY rt1.c2, rt1.c0, vt1.c1 UNION SELECT rt1.c2, rt1.c0, vt1.c1 FROM vt0, vt1, rt1 WHERE ((((NOT ((rt1.c1 IN ())))) ISNULL)) GROUP BY rt1.c2, rt1.c0, vt1.c1;
SELECT rt1.c2, rt1.c0, vt1.c1 FROM vt0, vt1, rt1 GROUP BY rt1.c2, rt1.c0, vt1.c1;
SELECT ALL vt1.c1, rt0.c2, rt0.c0, vt1.c0, vt0.c0, vt1.c3, rt0.c3, rt0.c1, vt1.c2 FROM rt0, vt0 INNER JOIN vt1 ON (((rt0.c2))>=((CASE WHEN rt0.c3 THEN vt1.c2 END))) GROUP BY vt1.c1, rt0.c2, rt0.c0, vt1.c0, vt0.c0, vt1.c3, rt0.c3, rt0.c1, vt1.c2;
SELECT ALL vt1.c1, rt0.c2, rt0.c0, vt1.c0, vt0.c0, vt1.c3, rt0.c3, rt0.c1, vt1.c2 FROM rt0, vt0 INNER JOIN vt1 ON (((rt0.c2))>=((CASE WHEN rt0.c3 THEN vt1.c2 END))) GROUP BY vt1.c1, rt0.c2, rt0.c0, vt1.c0, vt0.c0, vt1.c3, rt0.c3, rt0.c1, vt1.c2 HAVING MAX(CASE WHEN COUNT(rt0.c3) THEN SUM(vt0.c0) ELSE vt1.c2 END) UNION ALL SELECT ALL vt1.c1, rt0.c2, rt0.c0, vt1.c0, vt0.c0, vt1.c3, rt0.c3, rt0.c1, vt1.c2 FROM rt0, vt0 INNER JOIN vt1 ON (((rt0.c2))>=((CASE WHEN rt0.c3 THEN vt1.c2 END))) GROUP BY vt1.c1, rt0.c2, rt0.c0, vt1.c0, vt0.c0, vt1.c3, rt0.c3, rt0.c1, vt1.c2 HAVING (NOT (MAX(CASE WHEN COUNT(rt0.c3) THEN SUM(vt0.c0) ELSE vt1.c2 END))) UNION ALL SELECT ALL vt1.c1, rt0.c2, rt0.c0, vt1.c0, vt0.c0, vt1.c3, rt0.c3, rt0.c1, vt1.c2 FROM rt0, vt0 INNER JOIN vt1 ON (((rt0.c2))>=((CASE WHEN rt0.c3 THEN vt1.c2 END))) GROUP BY vt1.c1, rt0.c2, rt0.c0, vt1.c0, vt0.c0, vt1.c3, rt0.c3, rt0.c1, vt1.c2 HAVING ((MAX(CASE WHEN COUNT(rt0.c3) THEN SUM(vt0.c0) ELSE vt1.c2 END)) ISNULL);
SELECT * FROM rt0, rt1, vt0;
SELECT ALL * FROM rt0, rt1 NOT INDEXED, vt0 WHERE ((((CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c2 END))>=((((rt1.c1) NOT NULL))))) UNION ALL SELECT ALL * FROM rt0, rt1, vt0 WHERE ((NOT ((((CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c2 END))>=((((rt1.c1) NOT NULL))))))) UNION ALL SELECT * FROM rt0, rt1, vt0 WHERE ((((((CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c2 END))>=((((rt1.c1) NOT NULL))))) ISNULL));
SELECT * FROM rt0, rt1, vt0;
SELECT DISTINCT * FROM rt0 INNER JOIN vt1 ON ((rt0.c0) IS TRUE) FULL OUTER JOIN rt1 ON (+ (rt1.c0)) FULL OUTER JOIN vt0 ON ((IFNULL(DISTINCT vt1.c3, vt1.c0))<(SQLITE_VERSION()));
SELECT DISTINCT * FROM rt0 INNER JOIN vt1 ON ((rt0.c0) IS TRUE) FULL OUTER JOIN rt1 ON (+ (rt1.c0)) FULL OUTER JOIN vt0 ON ((IFNULL(DISTINCT vt1.c3, vt1.c0))<(SQLITE_VERSION())) WHERE (TYPEOF(DISTINCT rt0.c0 COLLATE RTRIM)) UNION SELECT DISTINCT * FROM rt0 INNER JOIN vt1 ON ((rt0.c0) IS TRUE) FULL OUTER JOIN rt1 ON (+ (rt1.c0)) FULL OUTER JOIN vt0 ON ((IFNULL(DISTINCT vt1.c3, vt1.c0))<(SQLITE_VERSION())) WHERE ((NOT (TYPEOF(DISTINCT rt0.c0 COLLATE RTRIM)))) UNION SELECT DISTINCT * FROM rt0 INNER JOIN vt1 ON ((rt0.c0) IS TRUE) FULL OUTER JOIN rt1 ON (+ (rt1.c0)) FULL OUTER JOIN vt0 ON ((IFNULL(DISTINCT vt1.c3, vt1.c0))<(SQLITE_VERSION())) WHERE (((TYPEOF(DISTINCT rt0.c0 COLLATE RTRIM)) ISNULL));
SELECT DISTINCT * FROM rt0 INNER JOIN vt1 ON ((rt0.c0) IS TRUE) FULL OUTER JOIN rt1 ON (+ (rt1.c0)) FULL OUTER JOIN vt0 ON ((IFNULL(DISTINCT vt1.c3, vt1.c0))<(SQLITE_VERSION()));
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((vt1.c3)<<(vt1.c0)))IS NOT(vt1.c0 COLLATE BINARY))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c3)<<(vt1.c0)))IS NOT(vt1.c0 COLLATE BINARY))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((((vt1.c3)<<(vt1.c0)))IS NOT(vt1.c0 COLLATE BINARY))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0, vt1.c3, rt0.c0, vt1.c1, rt0.c1, rt0.c3, rt1.c1, vt1.c2, rt1.c2, vt0.c0, rt1.c0, rt0.c2 FROM vt1, vt0 LEFT OUTER JOIN rt1 ON (((+ (rt0.c0)))+(CAST(rt0.c0 AS NUMERIC))) LEFT OUTER JOIN rt0 ON ((((((vt1.c1)AND(vt1.c2)))OR(rt1.c2))) NOT BETWEEN ((rt0.c3 IN ())) AND (((vt0.c0)<=(rt0.c0)))) GROUP BY vt1.c0, vt1.c3, rt0.c0, vt1.c1, rt0.c1, rt0.c3, rt1.c1, vt1.c2, rt1.c2, vt0.c0, rt1.c0, rt0.c2;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0))>((vt0.c0))) IN ((vt0.c0 IN (vt0.c0)), ROUND(vt0.c0, vt0.c0)))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((((vt0.c0))>((vt0.c0))) IN ((vt0.c0 IN (vt0.c0)), ROUND(vt0.c0, vt0.c0)))))) UNION ALL SELECT * FROM vt0 WHERE (((((((vt0.c0))>((vt0.c0))) IN ((vt0.c0 IN (vt0.c0)), ROUND(vt0.c0, vt0.c0)))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt1.c2, rt1.c1, rt1.c0, vt1.c0, vt1.c1, rt0.c1, vt1.c3, rt1.c2, rt0.c2, rt0.c0, rt0.c3 FROM rt0, rt1, vt1;
SELECT DISTINCT vt1.c2, rt1.c1, rt1.c0, vt1.c0, vt1.c1, rt0.c1, vt1.c3, rt1.c2, rt0.c2, rt0.c0, rt0.c3 FROM rt0, rt1, vt1 WHERE (((vt1.c1)!=(vt1.c0)) COLLATE RTRIM) UNION SELECT DISTINCT vt1.c2, rt1.c1, rt1.c0, vt1.c0, vt1.c1, rt0.c1, vt1.c3, rt1.c2, rt0.c2, rt0.c0, rt0.c3 FROM rt0, rt1, vt1 WHERE ((NOT (((vt1.c1)<>(vt1.c0)) COLLATE RTRIM))) UNION SELECT DISTINCT vt1.c2, rt1.c1, rt1.c0, vt1.c0, vt1.c1, rt0.c1, vt1.c3, rt1.c2, rt0.c2, rt0.c0, rt0.c3 FROM rt0, rt1, vt1 WHERE (((((vt1.c1)<>(vt1.c0)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT vt1.c2, rt1.c1, rt1.c0, vt1.c0, vt1.c1, rt0.c1, vt1.c3, rt1.c2, rt0.c2, rt0.c0, rt0.c3 FROM rt0, rt1, vt1;
SELECT ALL vt1.c0, rt0.c0, rt0.c2, rt1.c1, rt0.c3, vt1.c1, rt1.c0, vt1.c3, rt1.c2, vt1.c2, vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON (~ (x'')) LEFT OUTER JOIN rt1 ON 'ArQ9Ps ' FULL OUTER JOIN rt0 ON 0.8518165062897374 GROUP BY vt1.c0, rt0.c0, rt0.c2, rt1.c1, rt0.c3, vt1.c1, rt1.c0, vt1.c3, rt1.c2, vt1.c2, vt0.c0;
SELECT ALL vt1.c0, rt0.c0, rt0.c2, rt1.c1, rt0.c3, vt1.c1, rt1.c0, vt1.c3, rt1.c2, vt1.c2, vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON (~ (x'')) LEFT OUTER JOIN rt1 ON 'ArQ9Ps ' FULL OUTER JOIN rt0 ON 0.8518165062897374 WHERE ((((((((((((((((rt0.c0))==((0.9644743476128543))))OR(((rt1.c1) IS FALSE))))AND(LIKELIHOOD(rt0.c1, 0.6425794434015625))))AND((rt0.c0 IN ()))))AND(UNICODE(rt0.c3))))OR(CASE vt1.c3  WHEN vt0.c0 THEN x'' ELSE rt1.c2 END)))OR(rt0.c3))) GROUP BY vt1.c0, rt0.c0, rt0.c2, rt1.c1, rt0.c3, vt1.c1, rt1.c0, vt1.c3, rt1.c2, vt1.c2, vt0.c0 UNION SELECT vt1.c0, rt0.c0, rt0.c2, rt1.c1, rt0.c3, vt1.c1, rt1.c0, vt1.c3, rt1.c2, vt1.c2, vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON (~ (x'')) LEFT OUTER JOIN rt1 ON 'ArQ9Ps ' FULL OUTER JOIN rt0 ON 0.8518165062897374 WHERE ((NOT ((((((((((((((((rt0.c0))=((0.9644743476128543))))OR(((rt1.c1) IS FALSE))))AND(LIKELIHOOD(rt0.c1, 0.6425794434015625))))AND((rt0.c0 IN ()))))AND(UNICODE(rt0.c3))))OR(CASE vt1.c3  WHEN vt0.c0 THEN x'' ELSE rt1.c2 END)))OR(rt0.c3))))) GROUP BY vt1.c0, rt0.c0, rt0.c2, rt1.c1, rt0.c3, vt1.c1, rt1.c0, vt1.c3, rt1.c2, vt1.c2, vt0.c0 UNION SELECT vt1.c0, rt0.c0, rt0.c2, rt1.c1, rt0.c3, vt1.c1, rt1.c0, vt1.c3, rt1.c2, vt1.c2, vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON (~ (x'')) LEFT OUTER JOIN rt1 ON 'ArQ9Ps ' FULL OUTER JOIN rt0 ON 0.8518165062897374 WHERE ((((((((((((((((((rt0.c0))==((0.9644743476128543))))OR(((rt1.c1) IS FALSE))))AND(LIKELIHOOD(rt0.c1, 0.6425794434015625))))AND((rt0.c0 IN ()))))AND(UNICODE(rt0.c3))))OR(CASE vt1.c3  WHEN vt0.c0 THEN x'' ELSE rt1.c2 END)))OR(rt0.c3))) ISNULL)) GROUP BY vt1.c0, rt0.c0, rt0.c2, rt1.c1, rt0.c3, vt1.c1, rt1.c0, vt1.c3, rt1.c2, vt1.c2, vt0.c0;
SELECT ALL vt1.c0, rt0.c0, rt0.c2, rt1.c1, rt0.c3, vt1.c1, rt1.c0, vt1.c3, rt1.c2, vt1.c2, vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON (~ (x'')) LEFT OUTER JOIN rt1 ON 'ArQ9Ps ' FULL OUTER JOIN rt0 ON 0.8518165062897374 GROUP BY vt1.c0, rt0.c0, rt0.c2, rt1.c1, rt0.c3, vt1.c1, rt1.c0, vt1.c3, rt1.c2, vt1.c2, vt0.c0;
SELECT ALL rt1.c0, vt1.c3, rt0.c3, rt0.c0, rt1.c1, vt1.c0 FROM rt0 RIGHT OUTER JOIN rt1 ON (((x'')/(rt0.c0)) IN ()) INNER JOIN vt1 ON (NOT (((rt1.c0) NOT BETWEEN (rt0.c3) AND (vt1.c1)))) GROUP BY rt1.c0, vt1.c3, rt0.c3, rt0.c0, rt1.c1, vt1.c0;
SELECT rt1.c0, vt1.c3, rt0.c3, rt0.c0, rt1.c1, vt1.c0 FROM rt0 RIGHT OUTER JOIN rt1 ON (((x'')/(rt0.c0)) IN ()) INNER JOIN vt1 ON (NOT (((rt1.c0) NOT BETWEEN (rt0.c3) AND (vt1.c1)))) GROUP BY rt1.c0, vt1.c3, rt0.c3, rt0.c0, rt1.c1, vt1.c0 HAVING SUM(SUM(MAX(rt0.c0))) UNION ALL SELECT ALL rt1.c0, vt1.c3, rt0.c3, rt0.c0, rt1.c1, vt1.c0 FROM rt0 RIGHT OUTER JOIN rt1 ON (((x'')/(rt0.c0)) IN ()) INNER JOIN vt1 ON (NOT (((rt1.c0) NOT BETWEEN (rt0.c3) AND (vt1.c1)))) GROUP BY rt1.c0, vt1.c3, rt0.c3, rt0.c0, rt1.c1, vt1.c0 HAVING (NOT (SUM(SUM(MAX(rt0.c0))))) UNION ALL SELECT rt1.c0, vt1.c3, rt0.c3, rt0.c0, rt1.c1, vt1.c0 FROM rt0 RIGHT OUTER JOIN rt1 ON (((x'')/(rt0.c0)) IN ()) INNER JOIN vt1 ON (NOT (((rt1.c0) NOT BETWEEN (rt0.c3) AND (vt1.c1)))) GROUP BY rt1.c0, vt1.c3, rt0.c3, rt0.c0, rt1.c1, vt1.c0 HAVING ((SUM(SUM(MAX(rt0.c0)))) ISNULL);
SELECT * FROM vt1, vt0, rt0;
SELECT * FROM vt1, vt0, rt0 WHERE (UPPER(((((0.21957939365053192)OR(rt0.c3)))AND(vt1.c0)))) UNION ALL SELECT * FROM vt1, vt0, rt0 WHERE ((NOT (UPPER(((((0.21957939365053192)OR(rt0.c3)))AND(vt1.c0)))))) UNION ALL SELECT * FROM vt1, vt0, rt0 WHERE (((UPPER(((((0.21957939365053192)OR(rt0.c3)))AND(vt1.c0)))) ISNULL));
SELECT * FROM vt1, vt0, rt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (json_object(NULL, x'')) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (json_object(NULL, x'')))) UNION SELECT DISTINCT * FROM vt1 WHERE (((json_object(NULL, x'')) ISNULL));
SELECT rt0.c3 FROM rt1, rt0, vt1, vt0 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt1, rt0, vt1, vt0 WHERE ((((((vt1.c2)OR(0.9363756940204533)))AND(rt0.c0)) IN ())) GROUP BY rt0.c3 UNION SELECT rt0.c3 FROM rt1, rt0, vt1, vt0 WHERE ((NOT ((((((vt1.c2)OR(0.9363756940204533)))AND(rt0.c0)) IN ())))) GROUP BY rt0.c3 UNION SELECT rt0.c3 FROM rt1, rt0, vt1, vt0 WHERE ((((((((vt1.c2)OR(0.9363756940204533)))AND(rt0.c0)) IN ())) ISNULL)) GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt1, rt0, vt1, vt0 GROUP BY rt0.c3;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CASE WHEN TOTAL(SUM(vt0.c0)) THEN ((vt0.c0)LIKE(vt0.c0)) ELSE SUM(SUM(COUNT(GROUP_CONCAT(x'd67d')))) COLLATE NOCASE END UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CASE WHEN TOTAL(SUM(vt0.c0)) THEN ((vt0.c0)LIKE(vt0.c0)) ELSE SUM(SUM(COUNT(GROUP_CONCAT(x'd67d')))) COLLATE NOCASE END)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CASE WHEN TOTAL(SUM(vt0.c0)) THEN ((vt0.c0)LIKE(vt0.c0)) ELSE SUM(SUM(COUNT(GROUP_CONCAT(x'd67d')))) COLLATE NOCASE END) ISNULL);
SELECT ALL vt1.c3, vt1.c1, vt0.c0, vt1.c0, vt1.c2 FROM vt1, vt0;
SELECT ALL vt1.c3, vt1.c1, vt0.c0, vt1.c0, vt1.c2 FROM vt1, vt0 WHERE ((+ (((((((((((((vt0.c0)OR(vt1.c2)))AND(vt1.c3)))OR(vt1.c3)))AND(vt1.c2)))OR(vt1.c1)))OR(vt0.c0))))) UNION ALL SELECT ALL vt1.c3, vt1.c1, vt0.c0, vt1.c0, vt1.c2 FROM vt1, vt0 WHERE ((NOT ((+ (((((((((((((vt0.c0)OR(vt1.c2)))AND(vt1.c3)))OR(vt1.c3)))AND(vt1.c2)))OR(vt1.c1)))OR(vt0.c0))))))) UNION ALL SELECT ALL vt1.c3, vt1.c1, vt0.c0, vt1.c0, vt1.c2 FROM vt1, vt0 WHERE ((((+ (((((((((((((vt0.c0)OR(vt1.c2)))AND(vt1.c3)))OR(vt1.c3)))AND(vt1.c2)))OR(vt1.c1)))OR(vt0.c0))))) ISNULL));
SELECT ALL vt1.c3, vt1.c1, vt0.c0, vt1.c0, vt1.c2 FROM vt1, vt0;
SELECT DISTINCT rt0.c0, vt1.c3, rt1.c2, rt0.c3 FROM vt0, rt0 RIGHT OUTER JOIN rt1 ON TRIM(DISTINCT ((vt1.c3)&(vt1.c1))) RIGHT OUTER JOIN vt1 ON (((rt0.c3)/(vt1.c0)) IN ());
SELECT rt0.c1, rt0.c0, vt1.c3, vt1.c0, rt1.c1, vt1.c1, rt0.c3 FROM rt1, vt1, rt0 GROUP BY rt0.c1, rt0.c0, vt1.c3, vt1.c0, rt1.c1, vt1.c1, rt0.c3;
SELECT ALL rt0.c1, rt0.c0, vt1.c3, vt1.c0, rt1.c1, vt1.c1, rt0.c3 FROM rt1, vt1, rt0 WHERE (CASE WHEN (NOT (rt0.c0)) THEN vt1.c3 END) GROUP BY rt0.c1, rt0.c0, vt1.c3, vt1.c0, rt1.c1, vt1.c1, rt0.c3 UNION SELECT rt0.c1, rt0.c0, vt1.c3, vt1.c0, rt1.c1, vt1.c1, rt0.c3 FROM rt1, vt1, rt0 WHERE ((NOT (CASE WHEN (NOT (rt0.c0)) THEN vt1.c3 END))) GROUP BY rt0.c1, rt0.c0, vt1.c3, vt1.c0, rt1.c1, vt1.c1, rt0.c3 UNION SELECT rt0.c1, rt0.c0, vt1.c3, vt1.c0, rt1.c1, vt1.c1, rt0.c3 FROM rt1, vt1, rt0 WHERE (((CASE WHEN (NOT (rt0.c0)) THEN vt1.c3 END) ISNULL)) GROUP BY rt0.c1, rt0.c0, vt1.c3, vt1.c0, rt1.c1, vt1.c1, rt0.c3;
SELECT rt0.c1, rt0.c0, vt1.c3, vt1.c0, rt1.c1, vt1.c1, rt0.c3 FROM rt1, vt1, rt0 GROUP BY rt0.c1, rt0.c0, vt1.c3, vt1.c0, rt1.c1, vt1.c1, rt0.c3;
SELECT ALL vt0.c0, vt1.c2, rt1.c2 FROM vt1, vt0, rt1 FULL OUTER JOIN rt0 ON ((vt0.c0 COLLATE NOCASE) BETWEEN ((((rt0.c3, rt0.c2, rt1.c0)) BETWEEN ((rt0.c3, rt0.c1, rt1.c0)) AND ((rt0.c3, 0xffffffffdde0db0b, vt1.c3)))) AND (((vt0.c0)+(1.79108633E8)))) GROUP BY vt0.c0, vt1.c2, rt1.c2;
SELECT ALL vt0.c0, vt1.c2, rt1.c2 FROM vt1, vt0, rt1 FULL OUTER JOIN rt0 ON ((vt0.c0 COLLATE NOCASE) BETWEEN ((((rt0.c3, rt0.c2, rt1.c0)) BETWEEN ((rt0.c3, rt0.c1, rt1.c0)) AND ((rt0.c3, 0xffffffffdde0db0b, vt1.c3)))) AND (((vt0.c0)+(1.79108633E8)))) GROUP BY vt0.c0, vt1.c2, rt1.c2 HAVING GROUP_CONCAT(rt1.c2) UNION ALL SELECT vt0.c0, vt1.c2, rt1.c2 FROM vt1, vt0, rt1 FULL OUTER JOIN rt0 ON ((vt0.c0 COLLATE NOCASE) BETWEEN ((((rt0.c3, rt0.c2, rt1.c0)) BETWEEN ((rt0.c3, rt0.c1, rt1.c0)) AND ((rt0.c3, 0xffffffffdde0db0b, vt1.c3)))) AND (((vt0.c0)+(1.79108633E8)))) GROUP BY vt0.c0, vt1.c2, rt1.c2 HAVING (NOT (GROUP_CONCAT(rt1.c2))) UNION ALL SELECT vt0.c0, vt1.c2, rt1.c2 FROM vt1, vt0, rt1 FULL OUTER JOIN rt0 ON ((vt0.c0 COLLATE NOCASE) BETWEEN ((((rt0.c3, rt0.c2, rt1.c0)) BETWEEN ((rt0.c3, rt0.c1, rt1.c0)) AND ((rt0.c3, 0Xffffffffdde0db0b, vt1.c3)))) AND (((vt0.c0)+(1.79108633E8)))) GROUP BY vt0.c0, vt1.c2, rt1.c2 HAVING ((GROUP_CONCAT(rt1.c2)) ISNULL);
SELECT ALL vt0.c0, vt1.c2, rt1.c2 FROM vt1, vt0, rt1 FULL OUTER JOIN rt0 ON ((vt0.c0 COLLATE NOCASE) BETWEEN ((((rt0.c3, rt0.c2, rt1.c0)) BETWEEN ((rt0.c3, rt0.c1, rt1.c0)) AND ((rt0.c3, 0xffffffffdde0db0b, vt1.c3)))) AND (((vt0.c0)+(1.79108633E8)))) GROUP BY vt0.c0, vt1.c2, rt1.c2;
SELECT ALL vt0.c0, vt1.c2, rt1.c2 FROM vt1, vt0, rt1 FULL OUTER JOIN rt0 ON ((vt0.c0 COLLATE NOCASE) BETWEEN ((((rt0.c3, rt0.c2, rt1.c0)) BETWEEN ((rt0.c3, rt0.c1, rt1.c0)) AND ((rt0.c3, 0xffffffffdde0db0b, vt1.c3)))) AND (((vt0.c0)+(1.79108633E8)))) GROUP BY vt0.c0, vt1.c2, rt1.c2 HAVING GROUP_CONCAT(rt1.c2) UNION ALL SELECT vt0.c0, vt1.c2, rt1.c2 FROM vt1, vt0, rt1 FULL OUTER JOIN rt0 ON ((vt0.c0 COLLATE NOCASE) BETWEEN ((((rt0.c3, rt0.c2, rt1.c0)) BETWEEN ((rt0.c3, rt0.c1, rt1.c0)) AND ((rt0.c3, 0xffffffffdde0db0b, vt1.c3)))) AND (((vt0.c0)+(1.79108633E8)))) GROUP BY vt0.c0, vt1.c2, rt1.c2 HAVING (NOT (GROUP_CONCAT(rt1.c2))) UNION ALL SELECT vt0.c0, vt1.c2, rt1.c2 FROM vt1, vt0, rt1 FULL OUTER JOIN rt0 ON ((vt0.c0 COLLATE NOCASE) BETWEEN ((((rt0.c3, rt0.c2, rt1.c0)) BETWEEN ((rt0.c3, rt0.c1, rt1.c0)) AND ((rt0.c3, 0Xffffffffdde0db0b, vt1.c3)))) AND (((vt0.c0)+(1.79108633E8)))) GROUP BY vt0.c0, vt1.c2, rt1.c2 HAVING ((GROUP_CONCAT(rt1.c2)) ISNULL);
SELECT ALL vt0.c0, vt1.c2, rt1.c2 FROM vt1, vt0, rt1 FULL OUTER JOIN rt0 ON ((vt0.c0 COLLATE NOCASE) BETWEEN ((((rt0.c3, rt0.c2, rt1.c0)) BETWEEN ((rt0.c3, rt0.c1, rt1.c0)) AND ((rt0.c3, 0xffffffffdde0db0b, vt1.c3)))) AND (((vt0.c0)+(1.79108633E8)))) GROUP BY vt0.c0, vt1.c2, rt1.c2;
SELECT * FROM rt1;
SELECT ALL * FROM rt1 WHERE ((((rt1.c0)IS(rt1.c0)) IN ())) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT ((((rt1.c0)IS(rt1.c0)) IN ())))) UNION ALL SELECT * FROM rt1 WHERE ((((((rt1.c0)IS(rt1.c0)) IN ())) ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT vt1.c1 FROM rt1, vt0 INNER JOIN vt1 ON CAST((- (0.4255662752229217)) AS BLOB);
SELECT DISTINCT vt1.c1 FROM rt1, vt0 INNER JOIN vt1 ON CAST((- (0.4255662752229217)) AS BLOB) WHERE (0.927732932211862) UNION SELECT DISTINCT vt1.c1 FROM rt1, vt0 INNER JOIN vt1 ON CAST((- (0.4255662752229217)) AS BLOB) WHERE ((NOT (0.927732932211862))) UNION SELECT DISTINCT vt1.c1 FROM rt1, vt0 INNER JOIN vt1 ON CAST((- (0.4255662752229217)) AS BLOB) WHERE (((0.927732932211862) ISNULL));
SELECT DISTINCT vt1.c1 FROM rt1, vt0 INNER JOIN vt1 ON CAST((- (0.4255662752229217)) AS BLOB);
SELECT ALL vt1.c1, vt0.c0, vt1.c3, rt0.c1, vt1.c0, rt0.c0 FROM rt0 CROSS JOIN vt0 ON ((rt0.c2)OR(json_array_length(vt1.c3))) LEFT OUTER JOIN vt1 ON CASE WHEN (((vt1.c1)) BETWEEN ((rt0.c2)) AND ((NULL))) THEN ((((((((((((rt0.c1)AND(rt0.c3)))OR(vt1.c3)))OR(vt0.c0)))OR(vt0.c0)))OR(rt0.c0)))AND(vt1.c1)) WHEN rt0.c1 COLLATE RTRIM THEN (((vt1.c3, x'', vt1.c3))=(('', vt1.c1, rt0.c2))) WHEN ((vt1.c3) IS TRUE) THEN (('') IS TRUE) ELSE (vt1.c3 IN ()) END GROUP BY vt1.c1, vt0.c0, vt1.c3, rt0.c1, vt1.c0, rt0.c0;
SELECT vt1.c1, vt0.c0, vt1.c3, rt0.c1, vt1.c0, rt0.c0 FROM rt0 CROSS JOIN vt0 ON ((rt0.c2)OR(json_array_length(vt1.c3))) LEFT OUTER JOIN vt1 ON CASE WHEN (((vt1.c1)) BETWEEN ((rt0.c2)) AND ((NULL))) THEN ((((((((((((rt0.c1)AND(rt0.c3)))OR(vt1.c3)))OR(vt0.c0)))OR(vt0.c0)))OR(rt0.c0)))AND(vt1.c1)) WHEN rt0.c1 COLLATE RTRIM THEN (((vt1.c3, x'', vt1.c3))=(('', vt1.c1, rt0.c2))) WHEN ((vt1.c3) IS TRUE) THEN (('') IS TRUE) ELSE (vt1.c3 IN ()) END WHERE ((CASE WHEN 'NWMc3' THEN rt0.c0 WHEN vt1.c3 THEN 0.4279963378715693 WHEN vt1.c0 THEN rt0.c0 END IN ())) GROUP BY vt1.c1, vt0.c0, vt1.c3, rt0.c1, vt1.c0, rt0.c0 UNION SELECT ALL vt1.c1, vt0.c0, vt1.c3, rt0.c1, vt1.c0, rt0.c0 FROM rt0 CROSS JOIN vt0 ON ((rt0.c2)OR(json_array_length(vt1.c3))) LEFT OUTER JOIN vt1 ON CASE WHEN (((vt1.c1)) BETWEEN ((rt0.c2)) AND ((NULL))) THEN ((((((((((((rt0.c1)AND(rt0.c3)))OR(vt1.c3)))OR(vt0.c0)))OR(vt0.c0)))OR(rt0.c0)))AND(vt1.c1)) WHEN rt0.c1 COLLATE RTRIM THEN (((vt1.c3, x'', vt1.c3))==(('', vt1.c1, rt0.c2))) WHEN ((vt1.c3) IS TRUE) THEN (('') IS TRUE) ELSE (vt1.c3 IN ()) END WHERE ((NOT ((CASE WHEN 'NWMc3' THEN rt0.c0 WHEN vt1.c3 THEN 0.4279963378715693 WHEN vt1.c0 THEN rt0.c0 END IN ())))) GROUP BY vt1.c1, vt0.c0, vt1.c3, rt0.c1, vt1.c0, rt0.c0 UNION SELECT ALL vt1.c1, vt0.c0, vt1.c3, rt0.c1, vt1.c0, rt0.c0 FROM rt0 CROSS JOIN vt0 ON ((rt0.c2)OR(json_array_length(vt1.c3))) LEFT OUTER JOIN vt1 ON CASE WHEN (((vt1.c1)) BETWEEN ((rt0.c2)) AND ((NULL))) THEN ((((((((((((rt0.c1)AND(rt0.c3)))OR(vt1.c3)))OR(vt0.c0)))OR(vt0.c0)))OR(rt0.c0)))AND(vt1.c1)) WHEN rt0.c1 COLLATE RTRIM THEN (((vt1.c3, x'', vt1.c3))=(('', vt1.c1, rt0.c2))) WHEN ((vt1.c3) IS TRUE) THEN (('') IS TRUE) ELSE (vt1.c3 IN ()) END WHERE ((((CASE WHEN 'NWMc3' THEN rt0.c0 WHEN vt1.c3 THEN 0.4279963378715693 WHEN vt1.c0 THEN rt0.c0 END IN ())) ISNULL)) GROUP BY vt1.c1, vt0.c0, vt1.c3, rt0.c1, vt1.c0, rt0.c0;
SELECT ALL vt1.c1, vt0.c0, vt1.c3, rt0.c1, vt1.c0, rt0.c0 FROM rt0 CROSS JOIN vt0 ON ((rt0.c2)OR(json_array_length(vt1.c3))) LEFT OUTER JOIN vt1 ON CASE WHEN (((vt1.c1)) BETWEEN ((rt0.c2)) AND ((NULL))) THEN ((((((((((((rt0.c1)AND(rt0.c3)))OR(vt1.c3)))OR(vt0.c0)))OR(vt0.c0)))OR(rt0.c0)))AND(vt1.c1)) WHEN rt0.c1 COLLATE RTRIM THEN (((vt1.c3, x'', vt1.c3))=(('', vt1.c1, rt0.c2))) WHEN ((vt1.c3) IS TRUE) THEN (('') IS TRUE) ELSE (vt1.c3 IN ()) END GROUP BY vt1.c1, vt0.c0, vt1.c3, rt0.c1, vt1.c0, rt0.c0;
SELECT rt1.c0, vt1.c1, rt0.c1, vt0.c0, rt0.c3, rt1.c1, vt1.c3, vt1.c0, rt0.c0, vt1.c2 FROM rt1, vt1 CROSS JOIN vt0 ON '1201008449' FULL OUTER JOIN rt0 ON ((((rt0.c2)IS('-182009540')))||(((vt1.c1)>>(vt1.c1)))) GROUP BY rt1.c0, vt1.c1, rt0.c1, vt0.c0, rt0.c3, rt1.c1, vt1.c3, vt1.c0, rt0.c0, vt1.c2;
SELECT ALL rt1.c0, vt1.c1, rt0.c1, vt0.c0, rt0.c3, rt1.c1, vt1.c3, vt1.c0, rt0.c0, vt1.c2 FROM rt1, vt1 CROSS JOIN vt0 ON '1201008449' FULL OUTER JOIN rt0 ON ((((rt0.c2)IS('-182009540')))||(((vt1.c1)>>(vt1.c1)))) GROUP BY rt1.c0, vt1.c1, rt0.c1, vt0.c0, rt0.c3, rt1.c1, vt1.c3, vt1.c0, rt0.c0, vt1.c2 HAVING 'Q' UNION ALL SELECT rt1.c0, vt1.c1, rt0.c1, vt0.c0, rt0.c3, rt1.c1, vt1.c3, vt1.c0, rt0.c0, vt1.c2 FROM rt1, vt1 CROSS JOIN vt0 ON '1201008449' FULL OUTER JOIN rt0 ON ((((rt0.c2)IS('-182009540')))||(((vt1.c1)>>(vt1.c1)))) GROUP BY rt1.c0, vt1.c1, rt0.c1, vt0.c0, rt0.c3, rt1.c1, vt1.c3, vt1.c0, rt0.c0, vt1.c2 HAVING (NOT ('Q')) UNION ALL SELECT rt1.c0, vt1.c1, rt0.c1, vt0.c0, rt0.c3, rt1.c1, vt1.c3, vt1.c0, rt0.c0, vt1.c2 FROM rt1, vt1 CROSS JOIN vt0 ON '1201008449' FULL OUTER JOIN rt0 ON ((((rt0.c2)IS('-182009540')))||(((vt1.c1)>>(vt1.c1)))) GROUP BY rt1.c0, vt1.c1, rt0.c1, vt0.c0, rt0.c3, rt1.c1, vt1.c3, vt1.c0, rt0.c0, vt1.c2 HAVING (('Q') ISNULL);
SELECT rt1.c0, vt1.c1, rt0.c1, vt0.c0, rt0.c3, rt1.c1, vt1.c3, vt1.c0, rt0.c0, vt1.c2 FROM rt1, vt1 CROSS JOIN vt0 ON '1201008449' FULL OUTER JOIN rt0 ON ((((rt0.c2)IS('-182009540')))||(((vt1.c1)>>(vt1.c1)))) GROUP BY rt1.c0, vt1.c1, rt0.c1, vt0.c0, rt0.c3, rt1.c1, vt1.c3, vt1.c0, rt0.c0, vt1.c2;
SELECT ALL rt1.c0, vt1.c1, rt0.c1, vt0.c0, rt0.c3, rt1.c1, vt1.c3, vt1.c0, rt0.c0, vt1.c2 FROM rt1, vt1 CROSS JOIN vt0 ON '1201008449' FULL OUTER JOIN rt0 ON ((((rt0.c2)IS('-182009540')))||(((vt1.c1)>>(vt1.c1)))) GROUP BY rt1.c0, vt1.c1, rt0.c1, vt0.c0, rt0.c3, rt1.c1, vt1.c3, vt1.c0, rt0.c0, vt1.c2 HAVING 'Q' UNION ALL SELECT rt1.c0, vt1.c1, rt0.c1, vt0.c0, rt0.c3, rt1.c1, vt1.c3, vt1.c0, rt0.c0, vt1.c2 FROM rt1, vt1 CROSS JOIN vt0 ON '1201008449' FULL OUTER JOIN rt0 ON ((((rt0.c2)IS('-182009540')))||(((vt1.c1)>>(vt1.c1)))) GROUP BY rt1.c0, vt1.c1, rt0.c1, vt0.c0, rt0.c3, rt1.c1, vt1.c3, vt1.c0, rt0.c0, vt1.c2 HAVING (NOT ('Q')) UNION ALL SELECT rt1.c0, vt1.c1, rt0.c1, vt0.c0, rt0.c3, rt1.c1, vt1.c3, vt1.c0, rt0.c0, vt1.c2 FROM rt1, vt1 CROSS JOIN vt0 ON '1201008449' FULL OUTER JOIN rt0 ON ((((rt0.c2)IS('-182009540')))||(((vt1.c1)>>(vt1.c1)))) GROUP BY rt1.c0, vt1.c1, rt0.c1, vt0.c0, rt0.c3, rt1.c1, vt1.c3, vt1.c0, rt0.c0, vt1.c2 HAVING (('Q') ISNULL);
SELECT rt1.c0, vt1.c1, rt0.c1, vt0.c0, rt0.c3, rt1.c1, vt1.c3, vt1.c0, rt0.c0, vt1.c2 FROM rt1, vt1 CROSS JOIN vt0 ON '1201008449' FULL OUTER JOIN rt0 ON ((((rt0.c2)IS('-182009540')))||(((vt1.c1)>>(vt1.c1)))) GROUP BY rt1.c0, vt1.c1, rt0.c1, vt0.c0, rt0.c3, rt1.c1, vt1.c3, vt1.c0, rt0.c0, vt1.c2;
SELECT rt1.c1 FROM vt0 NATURAL JOIN rt1;
SELECT ALL rt1.c1 FROM vt0 NATURAL JOIN rt1 WHERE ((NOT (NULL))) UNION ALL SELECT rt1.c1 FROM vt0 NATURAL JOIN rt1 WHERE ((NOT ((NOT (NULL))))) UNION ALL SELECT rt1.c1 FROM vt0 NATURAL JOIN rt1 WHERE ((((NOT (NULL))) ISNULL));
SELECT rt1.c1 FROM vt0 NATURAL JOIN rt1;
SELECT DISTINCT * FROM rt1, rt0, vt1;
SELECT DISTINCT * FROM rt1, rt0, vt1 WHERE (((((NOT (vt1.c3))))>((CASE WHEN vt1.c3 THEN rt1.c2 END)))) UNION SELECT DISTINCT * FROM rt1, rt0, vt1 WHERE ((NOT (((((NOT (vt1.c3))))>((CASE WHEN vt1.c3 THEN rt1.c2 END)))))) UNION SELECT DISTINCT * FROM rt1, rt0, vt1 WHERE (((((((NOT (vt1.c3))))>((CASE WHEN vt1.c3 THEN rt1.c2 END)))) ISNULL));
SELECT DISTINCT * FROM rt1, rt0, vt1;
SELECT ALL vt1.c2 FROM vt1 GROUP BY vt1.c2;
SELECT ALL vt1.c2 FROM vt1 WHERE ((((vt1.c1)) BETWEEN ((IFNULL(DISTINCT vt1.c2, vt1.c2))) AND (((((vt1.c1, vt1.c2, vt1.c0))<>((vt1.c2, vt1.c1, vt1.c3))))))) GROUP BY vt1.c2 UNION SELECT ALL vt1.c2 FROM vt1 WHERE ((NOT ((((vt1.c1)) BETWEEN ((IFNULL(DISTINCT vt1.c2, vt1.c2))) AND (((((vt1.c1, vt1.c2, vt1.c0))<>((vt1.c2, vt1.c1, vt1.c3))))))))) GROUP BY vt1.c2 UNION SELECT vt1.c2 FROM vt1 WHERE ((((((vt1.c1)) BETWEEN ((IFNULL(DISTINCT vt1.c2, vt1.c2))) AND (((((vt1.c1, vt1.c2, vt1.c0))!=((vt1.c2, vt1.c1, vt1.c3))))))) ISNULL)) GROUP BY vt1.c2;
SELECT ALL vt1.c2 FROM vt1 GROUP BY vt1.c2;
SELECT ALL rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c2;
SELECT rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c2 HAVING MAX(MIN(AVG(0.003696269016813414))) UNION ALL SELECT ALL rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c2 HAVING (NOT (MAX(MIN(AVG(0.003696269016813414))))) UNION ALL SELECT rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c2 HAVING ((MAX(MIN(AVG(0.003696269016813414)))) ISNULL);
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1;
SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE (((CAST(rt1.c2 AS BLOB))>(rt1.c2 COLLATE RTRIM))) UNION ALL SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE ((NOT (((CAST(rt1.c2 AS BLOB))>(rt1.c2 COLLATE RTRIM))))) UNION ALL SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE (((((CAST(rt1.c2 AS BLOB))>(rt1.c2 COLLATE RTRIM))) ISNULL));
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1;
SELECT DISTINCT * FROM vt0, rt0, vt1, rt1;
SELECT DISTINCT * FROM vt0, rt0, vt1, rt1 WHERE (CASE WHEN CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt1.c1 END THEN CASE vt1.c2  WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c3 END END) UNION SELECT DISTINCT * FROM vt0, rt0, vt1, rt1 WHERE ((NOT (CASE WHEN CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt1.c1 END THEN CASE vt1.c2  WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c3 END END))) UNION SELECT DISTINCT * FROM vt0, rt0, vt1, rt1 WHERE (((CASE WHEN CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt1.c1 END THEN CASE vt1.c2  WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c3 END END) ISNULL));
SELECT DISTINCT * FROM vt0, rt0, vt1, rt1;
SELECT ALL rt0.c2, rt1.c2, vt1.c3, vt1.c2, vt0.c0, rt1.c1, vt1.c0, rt1.c0, rt0.c0, vt1.c1, rt0.c1, rt0.c3 FROM rt0 FULL OUTER JOIN rt1 ON CAST(((rt0.c3)GLOB(x'')) AS INTEGER) CROSS JOIN vt1 ON CAST(rt0.c0 AS BLOB) INNER JOIN vt0 ON (((rt0.c1)) NOT BETWEEN (((~ (vt1.c1)))) AND (((NOT (NULL))))) GROUP BY rt0.c2, rt1.c2, vt1.c3, vt1.c2, vt0.c0, rt1.c1, vt1.c0, rt1.c0, rt0.c0, vt1.c1, rt0.c1, rt0.c3;
SELECT ALL rt0.c2, rt1.c2, vt1.c3, vt1.c2, vt0.c0, rt1.c1, vt1.c0, rt1.c0, rt0.c0, vt1.c1, rt0.c1, rt0.c3 FROM rt0 FULL OUTER JOIN rt1 ON CAST(((rt0.c3)GLOB(x'')) AS INTEGER) CROSS JOIN vt1 ON CAST(rt0.c0 AS BLOB) INNER JOIN vt0 ON (((rt0.c1)) NOT BETWEEN (((~ (vt1.c1)))) AND (((NOT (NULL))))) WHERE (((((((vt1.c1)OR(rt0.c2)))OR(rt0.c3)))LIKE(((0.05794386771859239) BETWEEN (rt1.c2) AND (rt0.c3))))) GROUP BY rt0.c2, rt1.c2, vt1.c3, vt1.c2, vt0.c0, rt1.c1, vt1.c0, rt1.c0, rt0.c0, vt1.c1, rt0.c1, rt0.c3 UNION SELECT ALL rt0.c2, rt1.c2, vt1.c3, vt1.c2, vt0.c0, rt1.c1, vt1.c0, rt1.c0, rt0.c0, vt1.c1, rt0.c1, rt0.c3 FROM rt0 FULL OUTER JOIN rt1 ON CAST(((rt0.c3)GLOB(x'')) AS INTEGER) CROSS JOIN vt1 ON CAST(rt0.c0 AS BLOB) INNER JOIN vt0 ON (((rt0.c1)) NOT BETWEEN (((~ (vt1.c1)))) AND (((NOT (NULL))))) WHERE ((NOT (((((((vt1.c1)OR(rt0.c2)))OR(rt0.c3)))LIKE(((0.05794386771859239) BETWEEN (rt1.c2) AND (rt0.c3))))))) GROUP BY rt0.c2, rt1.c2, vt1.c3, vt1.c2, vt0.c0, rt1.c1, vt1.c0, rt1.c0, rt0.c0, vt1.c1, rt0.c1, rt0.c3 UNION SELECT rt0.c2, rt1.c2, vt1.c3, vt1.c2, vt0.c0, rt1.c1, vt1.c0, rt1.c0, rt0.c0, vt1.c1, rt0.c1, rt0.c3 FROM rt0 FULL OUTER JOIN rt1 ON CAST(((rt0.c3)GLOB(x'')) AS INTEGER) CROSS JOIN vt1 ON CAST(rt0.c0 AS BLOB) INNER JOIN vt0 ON (((rt0.c1)) NOT BETWEEN (((~ (vt1.c1)))) AND (((NOT (NULL))))) WHERE (((((((((vt1.c1)OR(rt0.c2)))OR(rt0.c3)))LIKE(((0.05794386771859239) BETWEEN (rt1.c2) AND (rt0.c3))))) ISNULL)) GROUP BY rt0.c2, rt1.c2, vt1.c3, vt1.c2, vt0.c0, rt1.c1, vt1.c0, rt1.c0, rt0.c0, vt1.c1, rt0.c1, rt0.c3;
SELECT ALL rt0.c2, rt1.c2, vt1.c3, vt1.c2, vt0.c0, rt1.c1, vt1.c0, rt1.c0, rt0.c0, vt1.c1, rt0.c1, rt0.c3 FROM rt0 FULL OUTER JOIN rt1 ON CAST(((rt0.c3)GLOB(x'')) AS INTEGER) CROSS JOIN vt1 ON CAST(rt0.c0 AS BLOB) INNER JOIN vt0 ON (((rt0.c1)) NOT BETWEEN (((~ (vt1.c1)))) AND (((NOT (NULL))))) GROUP BY rt0.c2, rt1.c2, vt1.c3, vt1.c2, vt0.c0, rt1.c1, vt1.c0, rt1.c0, rt0.c0, vt1.c1, rt0.c1, rt0.c3;
SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING SUM(AVG(rt1.c0)) UNION ALL SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING (NOT (SUM(AVG(rt1.c0)))) UNION ALL SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING ((SUM(AVG(rt1.c0))) ISNULL);
SELECT ALL vt1.c3, vt1.c1 FROM vt1;
SELECT ALL vt1.c3, vt1.c1 FROM vt1 WHERE (((vt1.c1 COLLATE RTRIM)*(((vt1.c0)>=(vt1.c3))))) UNION ALL SELECT vt1.c3, vt1.c1 FROM vt1 WHERE ((NOT (((vt1.c1 COLLATE RTRIM)*(((vt1.c0)>=(vt1.c3))))))) UNION ALL SELECT vt1.c3, vt1.c1 FROM vt1 WHERE (((((vt1.c1 COLLATE RTRIM)*(((vt1.c0)>=(vt1.c3))))) ISNULL));
SELECT ALL vt1.c3, vt1.c1 FROM vt1;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (((rt1.c1)/(((rt1.c0) ISNULL)))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (((rt1.c1)/(((rt1.c0) ISNULL)))))) UNION SELECT DISTINCT * FROM rt1 WHERE (((((rt1.c1)/(((rt1.c0) ISNULL)))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL vt0.c0, rt1.c0, vt1.c2, rt0.c2, rt1.c1, vt1.c1, rt0.c0, rt0.c3, rt0.c1, vt1.c3 FROM rt1, rt0, vt0, vt1 GROUP BY vt0.c0, rt1.c0, vt1.c2, rt0.c2, rt1.c1, vt1.c1, rt0.c0, rt0.c3, rt0.c1, vt1.c3;
SELECT vt0.c0, rt1.c0, vt1.c2, rt0.c2, rt1.c1, vt1.c1, rt0.c0, rt0.c3, rt0.c1, vt1.c3 FROM rt1, rt0, vt0, vt1 WHERE (vt1.c0) GROUP BY vt0.c0, rt1.c0, vt1.c2, rt0.c2, rt1.c1, vt1.c1, rt0.c0, rt0.c3, rt0.c1, vt1.c3 UNION SELECT vt0.c0, rt1.c0, vt1.c2, rt0.c2, rt1.c1, vt1.c1, rt0.c0, rt0.c3, rt0.c1, vt1.c3 FROM rt1, rt0, vt0, vt1 WHERE ((NOT (vt1.c0))) GROUP BY vt0.c0, rt1.c0, vt1.c2, rt0.c2, rt1.c1, vt1.c1, rt0.c0, rt0.c3, rt0.c1, vt1.c3 UNION SELECT vt0.c0, rt1.c0, vt1.c2, rt0.c2, rt1.c1, vt1.c1, rt0.c0, rt0.c3, rt0.c1, vt1.c3 FROM rt1, rt0, vt0, vt1 WHERE (((vt1.c0) ISNULL)) GROUP BY vt0.c0, rt1.c0, vt1.c2, rt0.c2, rt1.c1, vt1.c1, rt0.c0, rt0.c3, rt0.c1, vt1.c3;
SELECT ALL vt0.c0, rt1.c0, vt1.c2, rt0.c2, rt1.c1, vt1.c1, rt0.c0, rt0.c3, rt0.c1, vt1.c3 FROM rt1, rt0, vt0, vt1 GROUP BY vt0.c0, rt1.c0, vt1.c2, rt0.c2, rt1.c1, vt1.c1, rt0.c0, rt0.c3, rt0.c1, vt1.c3;
SELECT ALL rt1.c0, rt0.c2, vt1.c3, rt0.c3, rt1.c2, rt0.c0, vt1.c1, vt1.c2, rt1.c1, vt0.c0, vt1.c0, rt0.c1 FROM rt1, vt0, vt1, rt0 GROUP BY rt1.c0, rt0.c2, vt1.c3, rt0.c3, rt1.c2, rt0.c0, vt1.c1, vt1.c2, rt1.c1, vt0.c0, vt1.c0, rt0.c1;
SELECT rt1.c0, rt0.c2, vt1.c3, rt0.c3, rt1.c2, rt0.c0, vt1.c1, vt1.c2, rt1.c1, vt0.c0, vt1.c0, rt0.c1 FROM rt1, vt0, vt1, rt0 GROUP BY rt1.c0, rt0.c2, vt1.c3, rt0.c3, rt1.c2, rt0.c0, vt1.c1, vt1.c2, rt1.c1, vt0.c0, vt1.c0, rt0.c1 HAVING SUM(((rt1.c1) ISNULL)) UNION ALL SELECT ALL rt1.c0, rt0.c2, vt1.c3, rt0.c3, rt1.c2, rt0.c0, vt1.c1, vt1.c2, rt1.c1, vt0.c0, vt1.c0, rt0.c1 FROM rt1, vt0, vt1, rt0 GROUP BY rt1.c0, rt0.c2, vt1.c3, rt0.c3, rt1.c2, rt0.c0, vt1.c1, vt1.c2, rt1.c1, vt0.c0, vt1.c0, rt0.c1 HAVING (NOT (SUM(((rt1.c1) ISNULL)))) UNION ALL SELECT rt1.c0, rt0.c2, vt1.c3, rt0.c3, rt1.c2, rt0.c0, vt1.c1, vt1.c2, rt1.c1, vt0.c0, vt1.c0, rt0.c1 FROM rt1, vt0, vt1, rt0 GROUP BY rt1.c0, rt0.c2, vt1.c3, rt0.c3, rt1.c2, rt0.c0, vt1.c1, vt1.c2, rt1.c1, vt0.c0, vt1.c0, rt0.c1 HAVING ((SUM(((rt1.c1) ISNULL))) ISNULL);
SELECT ALL rt1.c0, rt0.c2, vt1.c3, rt0.c3, rt1.c2, rt0.c0, vt1.c1, vt1.c2, rt1.c1, vt0.c0, vt1.c0, rt0.c1 FROM rt1, vt0, vt1, rt0 GROUP BY rt1.c0, rt0.c2, vt1.c3, rt0.c3, rt1.c2, rt0.c0, vt1.c1, vt1.c2, rt1.c1, vt0.c0, vt1.c0, rt0.c1;
SELECT rt1.c0, rt0.c2, vt1.c3, rt0.c3, rt1.c2, rt0.c0, vt1.c1, vt1.c2, rt1.c1, vt0.c0, vt1.c0, rt0.c1 FROM rt1, vt0, vt1, rt0 GROUP BY rt1.c0, rt0.c2, vt1.c3, rt0.c3, rt1.c2, rt0.c0, vt1.c1, vt1.c2, rt1.c1, vt0.c0, vt1.c0, rt0.c1 HAVING SUM(((rt1.c1) ISNULL)) UNION ALL SELECT ALL rt1.c0, rt0.c2, vt1.c3, rt0.c3, rt1.c2, rt0.c0, vt1.c1, vt1.c2, rt1.c1, vt0.c0, vt1.c0, rt0.c1 FROM rt1, vt0, vt1, rt0 GROUP BY rt1.c0, rt0.c2, vt1.c3, rt0.c3, rt1.c2, rt0.c0, vt1.c1, vt1.c2, rt1.c1, vt0.c0, vt1.c0, rt0.c1 HAVING (NOT (SUM(((rt1.c1) ISNULL)))) UNION ALL SELECT rt1.c0, rt0.c2, vt1.c3, rt0.c3, rt1.c2, rt0.c0, vt1.c1, vt1.c2, rt1.c1, vt0.c0, vt1.c0, rt0.c1 FROM rt1, vt0, vt1, rt0 GROUP BY rt1.c0, rt0.c2, vt1.c3, rt0.c3, rt1.c2, rt0.c0, vt1.c1, vt1.c2, rt1.c1, vt0.c0, vt1.c0, rt0.c1 HAVING ((SUM(((rt1.c1) ISNULL))) ISNULL);
SELECT ALL rt1.c0, rt0.c2, vt1.c3, rt0.c3, rt1.c2, rt0.c0, vt1.c1, vt1.c2, rt1.c1, vt0.c0, vt1.c0, rt0.c1 FROM rt1, vt0, vt1, rt0 GROUP BY rt1.c0, rt0.c2, vt1.c3, rt0.c3, rt1.c2, rt0.c0, vt1.c1, vt1.c2, rt1.c1, vt0.c0, vt1.c0, rt0.c1;
SELECT ALL * FROM vt0, rt0;
SELECT ALL * FROM vt0, rt0 WHERE ((((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) UNION ALL SELECT * FROM vt0, rt0 WHERE ((NOT ((((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ())))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE ((((((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) ISNULL));
SELECT ALL * FROM vt0, rt0;
SELECT DISTINCT rt1.c1, rt1.c2, vt1.c2, rt0.c0, rt0.c1, rt1.c0 FROM vt0, rt1, rt0, vt1;
SELECT DISTINCT rt1.c1, rt1.c2, vt1.c2, rt0.c0, rt0.c1, rt1.c0 FROM vt0, rt1, rt0, vt1 WHERE (CAST(((rt1.c0)>(vt0.c0)) AS REAL)) UNION SELECT DISTINCT rt1.c1, rt1.c2, vt1.c2, rt0.c0, rt0.c1, rt1.c0 FROM vt0, rt1, rt0, vt1 WHERE ((NOT (CAST(((rt1.c0)>(vt0.c0)) AS REAL)))) UNION SELECT DISTINCT rt1.c1, rt1.c2, vt1.c2, rt0.c0, rt0.c1, rt1.c0 FROM vt0, rt1, rt0, vt1 WHERE (((CAST(((rt1.c0)>(vt0.c0)) AS REAL)) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c2, vt1.c2, rt0.c0, rt0.c1, rt1.c0 FROM vt0, rt1, rt0, vt1;
SELECT vt1.c2, vt1.c3, vt1.c0 FROM vt1, vt0 GROUP BY vt1.c2, vt1.c3, vt1.c0;
SELECT vt1.c2, vt1.c3, vt1.c0 FROM vt1 NOT INDEXED, vt0 WHERE (((((((817401099)AND(vt1.c0)))AND(vt1.c1))) IS FALSE)) GROUP BY vt1.c2, vt1.c3, vt1.c0 UNION SELECT vt1.c2, vt1.c3, vt1.c0 FROM vt1, vt0 WHERE ((NOT (((((((817401099)AND(vt1.c0)))AND(vt1.c1))) IS FALSE)))) GROUP BY vt1.c2, vt1.c3, vt1.c0 UNION SELECT ALL vt1.c2, vt1.c3, vt1.c0 FROM vt1, vt0 WHERE (((((((((817401099)AND(vt1.c0)))AND(vt1.c1))) IS FALSE)) ISNULL)) GROUP BY vt1.c2, vt1.c3, vt1.c0;
SELECT vt1.c2, vt1.c3, vt1.c0 FROM vt1, vt0 GROUP BY vt1.c2, vt1.c3, vt1.c0;
SELECT ALL rt0.c2, rt0.c3 FROM vt1 FULL OUTER JOIN rt0 ON ((((rt0.c0)<<(rt0.c2)))>=((- (rt0.c2)))) GROUP BY rt0.c2, rt0.c3;
SELECT ALL rt0.c2, rt0.c3 FROM vt1 FULL OUTER JOIN rt0 ON ((((rt0.c0)<<(rt0.c2)))>=((- (rt0.c2)))) GROUP BY rt0.c2, rt0.c3 HAVING MAX(COUNT(AVG(SUM(rt0.c2)))) UNION ALL SELECT ALL rt0.c2, rt0.c3 FROM vt1 FULL OUTER JOIN rt0 ON ((((rt0.c0)<<(rt0.c2)))>=((- (rt0.c2)))) GROUP BY rt0.c2, rt0.c3 HAVING (NOT (MAX(COUNT(AVG(SUM(rt0.c2)))))) UNION ALL SELECT ALL rt0.c2, rt0.c3 FROM vt1 FULL OUTER JOIN rt0 ON ((((rt0.c0)<<(rt0.c2)))>=((- (rt0.c2)))) GROUP BY rt0.c2, rt0.c3 HAVING ((MAX(COUNT(AVG(SUM(rt0.c2))))) ISNULL);
SELECT ALL vt0.c0, rt0.c0, vt1.c0, rt1.c2, rt1.c0, vt1.c2, rt0.c3, rt0.c1, rt0.c2, vt1.c3, rt1.c1 FROM rt0, rt1, vt0, vt1;
SELECT vt0.c0, rt0.c0, vt1.c0, rt1.c2, rt1.c0, vt1.c2, rt0.c3, rt0.c1, rt0.c2, vt1.c3, rt1.c1 FROM rt0, rt1, vt0, vt1 WHERE (((vt0.c0) BETWEEN (rt0.c0) AND (vt1.c2)) COLLATE RTRIM) UNION ALL SELECT vt0.c0, rt0.c0, vt1.c0, rt1.c2, rt1.c0, vt1.c2, rt0.c3, rt0.c1, rt0.c2, vt1.c3, rt1.c1 FROM rt0, rt1, vt0, vt1 WHERE ((NOT (((vt0.c0) BETWEEN (rt0.c0) AND (vt1.c2)) COLLATE RTRIM))) UNION ALL SELECT vt0.c0, rt0.c0, vt1.c0, rt1.c2, rt1.c0, vt1.c2, rt0.c3, rt0.c1, rt0.c2, vt1.c3, rt1.c1 FROM rt0, rt1, vt0, vt1 WHERE (((((vt0.c0) BETWEEN (rt0.c0) AND (vt1.c2)) COLLATE RTRIM) ISNULL));
SELECT ALL vt0.c0, rt0.c0, vt1.c0, rt1.c2, rt1.c0, vt1.c2, rt0.c3, rt0.c1, rt0.c2, vt1.c3, rt1.c1 FROM rt0, rt1, vt0, vt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL rt0.c3, rt0.c1, vt1.c3, vt1.c0, rt0.c0, vt1.c2 FROM vt1, rt0 NOT INDEXED GROUP BY rt0.c3, rt0.c1, vt1.c3, vt1.c0, rt0.c0, vt1.c2;
SELECT rt0.c3, rt0.c1, vt1.c3, vt1.c0, rt0.c0, vt1.c2 FROM vt1, rt0 WHERE (rt0.c3) GROUP BY rt0.c3, rt0.c1, vt1.c3, vt1.c0, rt0.c0, vt1.c2 UNION SELECT ALL rt0.c3, rt0.c1, vt1.c3, vt1.c0, rt0.c0, vt1.c2 FROM vt1, rt0 WHERE ((NOT (rt0.c3))) GROUP BY rt0.c3, rt0.c1, vt1.c3, vt1.c0, rt0.c0, vt1.c2 UNION SELECT ALL rt0.c3, rt0.c1, vt1.c3, vt1.c0, rt0.c0, vt1.c2 FROM vt1, rt0 WHERE (((rt0.c3) ISNULL)) GROUP BY rt0.c3, rt0.c1, vt1.c3, vt1.c0, rt0.c0, vt1.c2;
SELECT ALL rt0.c3, rt0.c1, vt1.c3, vt1.c0, rt0.c0, vt1.c2 FROM vt1, rt0 NOT INDEXED GROUP BY rt0.c3, rt0.c1, vt1.c3, vt1.c0, rt0.c0, vt1.c2;
SELECT rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2 HAVING CAST((((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) AS TEXT) UNION ALL SELECT ALL rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2 HAVING (NOT (CAST((((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) AS TEXT))) UNION ALL SELECT rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2 HAVING ((CAST((((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) AS TEXT)) ISNULL);
SELECT rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2 HAVING CAST((((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) AS TEXT) UNION ALL SELECT ALL rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2 HAVING (NOT (CAST((((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) AS TEXT))) UNION ALL SELECT rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2 HAVING ((CAST((((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) AS TEXT)) ISNULL);
SELECT rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2;
SELECT * FROM vt1, rt0, rt1;
SELECT * FROM vt1, rt0, rt1 WHERE (CAST(((rt0.c3) BETWEEN (vt1.c2) AND (rt0.c2)) AS NUMERIC)) UNION ALL SELECT ALL * FROM vt1, rt0, rt1 WHERE ((NOT (CAST(((rt0.c3) BETWEEN (vt1.c2) AND (rt0.c2)) AS NUMERIC)))) UNION ALL SELECT * FROM vt1, rt0, rt1 WHERE (((CAST(((rt0.c3) BETWEEN (vt1.c2) AND (rt0.c2)) AS NUMERIC)) ISNULL));
SELECT * FROM vt1, rt0, rt1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((- (x'' COLLATE RTRIM))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((- (x'' COLLATE RTRIM))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((- (x'' COLLATE RTRIM))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1;
SELECT rt1.c0, rt1.c1 FROM rt1 WHERE (((((((((NULL)AND(rt1.c2)))AND('')))OR(((rt1.c1)|(NULL)))))OR(((NULL)GLOB(rt1.c2))))) GROUP BY rt1.c0, rt1.c1 UNION SELECT rt1.c0, rt1.c1 FROM rt1 WHERE ((NOT (((((((((NULL)AND(rt1.c2)))AND('')))OR(((rt1.c1)|(NULL)))))OR(((NULL)GLOB(rt1.c2))))))) GROUP BY rt1.c0, rt1.c1 UNION SELECT rt1.c0, rt1.c1 FROM rt1 WHERE (((((((((((NULL)AND(rt1.c2)))AND('')))OR(((rt1.c1)|(NULL)))))OR(((NULL)GLOB(rt1.c2))))) ISNULL)) GROUP BY rt1.c0, rt1.c1;
SELECT rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1;
SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING SUM((+ (GROUP_CONCAT(COUNT(0Xffffffff8d954e9a))))) UNION ALL SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING (NOT (SUM((+ (GROUP_CONCAT(COUNT(0xffffffff8d954e9a))))))) UNION ALL SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING ((SUM((+ (GROUP_CONCAT(COUNT(0xffffffff8d954e9a)))))) ISNULL);
SELECT MIN((- (((rt1.c1)+(rt1.c1))))) FROM rt0, vt1, rt1;
SELECT rt0.c0, rt0.c3, rt1.c2, vt1.c3, vt1.c0, rt0.c1, rt0.c2, rt1.c0, vt1.c1, rt1.c1 FROM rt1, rt0, vt1;
SELECT ALL rt0.c0, rt0.c3, rt1.c2, vt1.c3, vt1.c0, rt0.c1, rt0.c2, rt1.c0, vt1.c1, rt1.c1 FROM rt1, rt0, vt1 WHERE ((((((rt0.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c2))))>((vt1.c2 IN ())))) UNION ALL SELECT ALL rt0.c0, rt0.c3, rt1.c2, vt1.c3, vt1.c0, rt0.c1, rt0.c2, rt1.c0, vt1.c1, rt1.c1 FROM rt1, rt0, vt1 WHERE ((NOT ((((((rt0.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c2))))>((vt1.c2 IN ())))))) UNION ALL SELECT rt0.c0, rt0.c3, rt1.c2, vt1.c3, vt1.c0, rt0.c1, rt0.c2, rt1.c0, vt1.c1, rt1.c1 FROM rt1, rt0, vt1 WHERE ((((((((rt0.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c2))))>((vt1.c2 IN ())))) ISNULL));
SELECT rt0.c0, rt0.c3, rt1.c2, vt1.c3, vt1.c0, rt0.c1, rt0.c2, rt1.c0, vt1.c1, rt1.c1 FROM rt1, rt0, vt1;
SELECT DISTINCT * FROM rt1, rt0;
SELECT DISTINCT * FROM rt1, rt0 WHERE ((- ((NOT (NULL))))) UNION SELECT DISTINCT * FROM rt1, rt0 WHERE ((NOT ((- ((NOT (NULL))))))) UNION SELECT DISTINCT * FROM rt1, rt0 WHERE ((((- ((NOT (NULL))))) ISNULL));
SELECT DISTINCT * FROM rt1, rt0;
SELECT rt0.c2, vt1.c0, vt1.c3, rt0.c0, rt0.c3 FROM rt0 INNER JOIN vt0 ON CASE WHEN vt1.c3 COLLATE NOCASE THEN TRIM(rt0.c1, rt0.c0) END INNER JOIN vt1 ON (NOT (CASE WHEN vt1.c0 THEN 0.055258348569762306 ELSE rt0.c3 END)) GROUP BY rt0.c2, vt1.c0, vt1.c3, rt0.c0, rt0.c3;
SELECT ALL rt0.c2, vt1.c0, vt1.c3, rt0.c0, rt0.c3 FROM rt0 INNER JOIN vt0 ON CASE WHEN vt1.c3 COLLATE NOCASE THEN TRIM(rt0.c1, rt0.c0) END INNER JOIN vt1 ON (NOT (CASE WHEN vt1.c0 THEN 0.055258348569762306 ELSE rt0.c3 END)) WHERE (vt1.c3) GROUP BY rt0.c2, vt1.c0, vt1.c3, rt0.c0, rt0.c3 UNION SELECT rt0.c2, vt1.c0, vt1.c3, rt0.c0, rt0.c3 FROM rt0 INNER JOIN vt0 ON CASE WHEN vt1.c3 COLLATE NOCASE THEN TRIM(rt0.c1, rt0.c0) END INNER JOIN vt1 ON (NOT (CASE WHEN vt1.c0 THEN 0.055258348569762306 ELSE rt0.c3 END)) WHERE ((NOT (vt1.c3))) GROUP BY rt0.c2, vt1.c0, vt1.c3, rt0.c0, rt0.c3 UNION SELECT ALL rt0.c2, vt1.c0, vt1.c3, rt0.c0, rt0.c3 FROM rt0 INNER JOIN vt0 ON CASE WHEN vt1.c3 COLLATE NOCASE THEN TRIM(rt0.c1, rt0.c0) END INNER JOIN vt1 ON (NOT (CASE WHEN vt1.c0 THEN 0.055258348569762306 ELSE rt0.c3 END)) WHERE (((vt1.c3) ISNULL)) GROUP BY rt0.c2, vt1.c0, vt1.c3, rt0.c0, rt0.c3;
SELECT rt0.c2, vt1.c0, vt1.c3, rt0.c0, rt0.c3 FROM rt0 INNER JOIN vt0 ON CASE WHEN vt1.c3 COLLATE NOCASE THEN TRIM(rt0.c1, rt0.c0) END INNER JOIN vt1 ON (NOT (CASE WHEN vt1.c0 THEN 0.055258348569762306 ELSE rt0.c3 END)) GROUP BY rt0.c2, vt1.c0, vt1.c3, rt0.c0, rt0.c3;
SELECT ALL vt0.c0, rt0.c2, vt1.c3, rt0.c1, vt1.c0 FROM vt0, rt0, vt1 GROUP BY vt0.c0, rt0.c2, vt1.c3, rt0.c1, vt1.c0;
SELECT vt0.c0, rt0.c2, vt1.c3, rt0.c1, vt1.c0 FROM vt0, rt0, vt1 GROUP BY vt0.c0, rt0.c2, vt1.c3, rt0.c1, vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0, rt0.c2, vt1.c3, rt0.c1, vt1.c0 FROM vt0, rt0, vt1 GROUP BY vt0.c0, rt0.c2, vt1.c3, rt0.c1, vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0, rt0.c2, vt1.c3, rt0.c1, vt1.c0 FROM vt0, rt0, vt1 GROUP BY vt0.c0, rt0.c2, vt1.c3, rt0.c1, vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0, rt0.c2, vt1.c3, rt0.c1, vt1.c0 FROM vt0, rt0, vt1 GROUP BY vt0.c0, rt0.c2, vt1.c3, rt0.c1, vt1.c0;
SELECT vt0.c0, rt0.c2, vt1.c3, rt0.c1, vt1.c0 FROM vt0, rt0, vt1 GROUP BY vt0.c0, rt0.c2, vt1.c3, rt0.c1, vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0, rt0.c2, vt1.c3, rt0.c1, vt1.c0 FROM vt0, rt0, vt1 GROUP BY vt0.c0, rt0.c2, vt1.c3, rt0.c1, vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0, rt0.c2, vt1.c3, rt0.c1, vt1.c0 FROM vt0, rt0, vt1 GROUP BY vt0.c0, rt0.c2, vt1.c3, rt0.c1, vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0, rt0.c2, vt1.c3, rt0.c1, vt1.c0 FROM vt0, rt0, vt1 GROUP BY vt0.c0, rt0.c2, vt1.c3, rt0.c1, vt1.c0;
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE x'0300' END THEN CAST(vt0.c0 AS INTEGER) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (x'76c3')) THEN ((vt0.c0) ISNULL) WHEN ((vt0.c0)>>(vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))AND(-1196340002)) WHEN ((vt0.c0) ISNULL) THEN TRIM(vt0.c0) WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0)=(vt0.c0)) ELSE CAST(vt0.c0 AS TEXT) END) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE x'0300' END THEN CAST(vt0.c0 AS INTEGER) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (x'76c3')) THEN ((vt0.c0) ISNULL) WHEN ((vt0.c0)>>(vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))AND(-1196340002)) WHEN ((vt0.c0) ISNULL) THEN TRIM(vt0.c0) WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0)=(vt0.c0)) ELSE CAST(vt0.c0 AS TEXT) END))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE x'0300' END THEN CAST(vt0.c0 AS INTEGER) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (x'76c3')) THEN ((vt0.c0) ISNULL) WHEN ((vt0.c0)>>(vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))AND(-1196340002)) WHEN ((vt0.c0) ISNULL) THEN TRIM(vt0.c0) WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0)==(vt0.c0)) ELSE CAST(vt0.c0 AS TEXT) END) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT rt0.c0 FROM rt0, vt0;
SELECT DISTINCT rt0.c0 FROM rt0, vt0 WHERE (((((rt0.c3)%(rt0.c3)))<(UPPER(DISTINCT rt0.c2)))) UNION SELECT DISTINCT rt0.c0 FROM rt0, vt0 WHERE ((NOT (((((rt0.c3)%(rt0.c3)))<(UPPER(DISTINCT rt0.c2)))))) UNION SELECT DISTINCT rt0.c0 FROM rt0, vt0 WHERE (((((((rt0.c3)%(rt0.c3)))<(UPPER(DISTINCT rt0.c2)))) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0, vt0;
SELECT ALL vt1.c1, vt1.c3, rt0.c0, vt1.c0, rt0.c1, rt1.c1 FROM vt0, rt1, vt1, rt0 GROUP BY vt1.c1, vt1.c3, rt0.c0, vt1.c0, rt0.c1, rt1.c1;
SELECT ALL vt1.c1, vt1.c3, rt0.c0, vt1.c0, rt0.c1, rt1.c1 FROM vt0, rt1, vt1, rt0 WHERE (CAST(x'c332' COLLATE BINARY AS TEXT)) GROUP BY vt1.c1, vt1.c3, rt0.c0, vt1.c0, rt0.c1, rt1.c1 UNION SELECT ALL vt1.c1, vt1.c3, rt0.c0, vt1.c0, rt0.c1, rt1.c1 FROM vt0, rt1, vt1, rt0 WHERE ((NOT (CAST(x'c332' COLLATE BINARY AS TEXT)))) GROUP BY vt1.c1, vt1.c3, rt0.c0, vt1.c0, rt0.c1, rt1.c1 UNION SELECT vt1.c1, vt1.c3, rt0.c0, vt1.c0, rt0.c1, rt1.c1 FROM vt0, rt1, vt1, rt0 WHERE (((CAST(x'c332' COLLATE BINARY AS TEXT)) ISNULL)) GROUP BY vt1.c1, vt1.c3, rt0.c0, vt1.c0, rt0.c1, rt1.c1;
SELECT ALL vt1.c1, vt1.c3, rt0.c0, vt1.c0, rt0.c1, rt1.c1 FROM vt0, rt1, vt1, rt0 GROUP BY vt1.c1, vt1.c3, rt0.c0, vt1.c0, rt0.c1, rt1.c1;
SELECT ALL rt0.c3, vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c3, vt0.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c3, vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c3, vt0.c0, rt0.c2, rt0.c0, rt0.c1 HAVING AVG(AVG(SUM(rt0.c0)) COLLATE RTRIM) UNION ALL SELECT ALL rt0.c3, vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c3, vt0.c0, rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (AVG(AVG(SUM(rt0.c0)) COLLATE RTRIM))) UNION ALL SELECT ALL rt0.c3, vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c3, vt0.c0, rt0.c2, rt0.c0, rt0.c1 HAVING ((AVG(AVG(SUM(rt0.c0)) COLLATE RTRIM)) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((((rt0.c3)IS(rt0.c0)))OR(((((((((rt0.c3)AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c3)))AND(rt0.c2))))) ORDER BY ((((((((((((CAST(rt0.c3 AS BLOB))OR(CAST(rt0.c1 AS TEXT))))OR(rt0.c2 COLLATE BINARY)))OR((((rt0.c1, rt0.c0, rt0.c1))>((rt0.c0, rt0.c1, rt0.c1))))))AND(((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)))))AND(((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)))))AND((((1.925035981E9)) NOT BETWEEN ((x'')) AND ((rt0.c0))))) ASC  NULLS LAST, CAST((rt0.c1 IN ()) AS TEXT) DESC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((NOT (((((rt0.c3)IS(rt0.c0)))OR(((((((((rt0.c3)AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c3)))AND(rt0.c2))))))) ORDER BY ((((((((((((CAST(rt0.c3 AS BLOB))OR(CAST(rt0.c1 AS TEXT))))OR(rt0.c2 COLLATE BINARY)))OR((((rt0.c1, rt0.c0, rt0.c1))>((rt0.c0, rt0.c1, rt0.c1))))))AND(((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)))))AND(((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)))))AND((((1.925035981E9)) NOT BETWEEN ((x'')) AND ((rt0.c0))))) ASC  NULLS LAST, CAST((rt0.c1 IN ()) AS TEXT) DESC  NULLS LAST;
SELECT * FROM rt0 WHERE (((((((rt0.c3)IS(rt0.c0)))OR(((((((((rt0.c3)AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c3)))AND(rt0.c2))))) ISNULL)) ORDER BY ((((((((((((CAST(rt0.c3 AS BLOB))OR(CAST(rt0.c1 AS TEXT))))OR(rt0.c2 COLLATE BINARY)))OR((((rt0.c1, rt0.c0, rt0.c1))>((rt0.c0, rt0.c1, rt0.c1))))))AND(((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)))))AND(((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)))))AND((((1.925035981E9)) NOT BETWEEN ((x'')) AND ((rt0.c0))))) ASC  NULLS LAST, CAST((rt0.c1 IN ()) AS TEXT) DESC  NULLS LAST;
SELECT ALL * FROM rt0;
SELECT DISTINCT vt1.c1, vt1.c2, rt0.c1, rt0.c3, rt0.c0 FROM rt0, rt1, vt1, vt0;
SELECT DISTINCT vt1.c1, vt1.c2, rt0.c1, rt0.c3, rt0.c0 FROM rt0, rt1, vt1, vt0 WHERE ((((((vt1.c2)*(rt1.c1)), CASE WHEN vt1.c0 THEN rt0.c1 WHEN rt1.c2 THEN vt1.c2 WHEN vt1.c1 THEN rt1.c0 ELSE vt1.c2 END, ((rt0.c3)GLOB(rt1.c1))))<>((LENGTH(rt1.c0), CAST(rt0.c0 AS NUMERIC), LIKELIHOOD(DISTINCT rt1.c0, 0.8775900846493396))))) UNION SELECT DISTINCT vt1.c1, vt1.c2, rt0.c1, rt0.c3, rt0.c0 FROM rt0, rt1, vt1, vt0 WHERE ((NOT ((((((vt1.c2)*(rt1.c1)), CASE WHEN vt1.c0 THEN rt0.c1 WHEN rt1.c2 THEN vt1.c2 WHEN vt1.c1 THEN rt1.c0 ELSE vt1.c2 END, ((rt0.c3)GLOB(rt1.c1))))<>((LENGTH(rt1.c0), CAST(rt0.c0 AS NUMERIC), LIKELIHOOD(DISTINCT rt1.c0, 0.8775900846493396))))))) UNION SELECT DISTINCT vt1.c1, vt1.c2, rt0.c1, rt0.c3, rt0.c0 FROM rt0, rt1, vt1, vt0 WHERE ((((((((vt1.c2)*(rt1.c1)), CASE WHEN vt1.c0 THEN rt0.c1 WHEN rt1.c2 THEN vt1.c2 WHEN vt1.c1 THEN rt1.c0 ELSE vt1.c2 END, ((rt0.c3)GLOB(rt1.c1))))<>((LENGTH(rt1.c0), CAST(rt0.c0 AS NUMERIC), LIKELIHOOD(DISTINCT rt1.c0, 0.8775900846493396))))) ISNULL));
SELECT DISTINCT vt1.c1, vt1.c2, rt0.c1, rt0.c3, rt0.c0 FROM rt0, rt1, vt1, vt0;
SELECT ALL rt0.c1, vt0.c0, rt0.c3, vt1.c3, vt1.c2, rt0.c0 FROM vt0, vt1, rt0, rt1 GROUP BY rt0.c1, vt0.c0, rt0.c3, vt1.c3, vt1.c2, rt0.c0;
SELECT rt0.c1, vt0.c0, rt0.c3, vt1.c3, vt1.c2, rt0.c0 FROM vt0, vt1, rt0, rt1 WHERE ((((rt0.c0, x'38ee', rt0.c3)) BETWEEN (((~ (vt1.c1)), ((vt1.c3)>>(vt1.c2)), (~ (vt1.c3)))) AND ((((rt0.c2) IS FALSE), ((rt0.c0) BETWEEN (vt1.c1) AND (vt0.c0)), (((rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((rt1.c1, vt1.c2, rt0.c2)) AND ((vt1.c2, rt0.c2, vt0.c0))))))) GROUP BY rt0.c1, vt0.c0, rt0.c3, vt1.c3, vt1.c2, rt0.c0 UNION SELECT ALL rt0.c1, vt0.c0, rt0.c3, vt1.c3, vt1.c2, rt0.c0 FROM vt0, vt1, rt0, rt1 WHERE ((NOT ((((rt0.c0, x'38ee', rt0.c3)) BETWEEN (((~ (vt1.c1)), ((vt1.c3)>>(vt1.c2)), (~ (vt1.c3)))) AND ((((rt0.c2) IS FALSE), ((rt0.c0) BETWEEN (vt1.c1) AND (vt0.c0)), (((rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((rt1.c1, vt1.c2, rt0.c2)) AND ((vt1.c2, rt0.c2, vt0.c0))))))))) GROUP BY rt0.c1, vt0.c0, rt0.c3, vt1.c3, vt1.c2, rt0.c0 UNION SELECT rt0.c1, vt0.c0, rt0.c3, vt1.c3, vt1.c2, rt0.c0 FROM vt0, vt1, rt0, rt1 WHERE ((((((rt0.c0, x'38ee', rt0.c3)) BETWEEN (((~ (vt1.c1)), ((vt1.c3)>>(vt1.c2)), (~ (vt1.c3)))) AND ((((rt0.c2) IS FALSE), ((rt0.c0) BETWEEN (vt1.c1) AND (vt0.c0)), (((rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((rt1.c1, vt1.c2, rt0.c2)) AND ((vt1.c2, rt0.c2, vt0.c0))))))) ISNULL)) GROUP BY rt0.c1, vt0.c0, rt0.c3, vt1.c3, vt1.c2, rt0.c0;
SELECT ALL rt0.c1, vt0.c0, rt0.c3, vt1.c3, vt1.c2, rt0.c0 FROM vt0, vt1, rt0, rt1 GROUP BY rt0.c1, vt0.c0, rt0.c3, vt1.c3, vt1.c2, rt0.c0;
SELECT vt0.c0, rt1.c1, rt1.c2, vt1.c1, vt1.c3, vt1.c2, vt1.c0, rt1.c0 FROM rt1, vt0, vt1 GROUP BY vt0.c0, rt1.c1, rt1.c2, vt1.c1, vt1.c3, vt1.c2, vt1.c0, rt1.c0;
SELECT vt0.c0, rt1.c1, rt1.c2, vt1.c1, vt1.c3, vt1.c2, vt1.c0, rt1.c0 FROM rt1, vt0, vt1 GROUP BY vt0.c0, rt1.c1, rt1.c2, vt1.c1, vt1.c3, vt1.c2, vt1.c0, rt1.c0 HAVING COUNT((((NULL, vt1.c2, GROUP_CONCAT(rt1.c2))) BETWEEN ((MIN(COUNT(*)), vt0.c0, vt1.c0)) AND (('2054894138', vt1.c0, MIN(rt1.c1))))) UNION ALL SELECT ALL vt0.c0, rt1.c1, rt1.c2, vt1.c1, vt1.c3, vt1.c2, vt1.c0, rt1.c0 FROM rt1, vt0, vt1 GROUP BY vt0.c0, rt1.c1, rt1.c2, vt1.c1, vt1.c3, vt1.c2, vt1.c0, rt1.c0 HAVING (NOT (COUNT((((NULL, vt1.c2, GROUP_CONCAT(rt1.c2))) BETWEEN ((MIN(COUNT(*)), vt0.c0, vt1.c0)) AND (('2054894138', vt1.c0, MIN(rt1.c1))))))) UNION ALL SELECT ALL vt0.c0, rt1.c1, rt1.c2, vt1.c1, vt1.c3, vt1.c2, vt1.c0, rt1.c0 FROM rt1, vt0, vt1 GROUP BY vt0.c0, rt1.c1, rt1.c2, vt1.c1, vt1.c3, vt1.c2, vt1.c0, rt1.c0 HAVING ((COUNT((((NULL, vt1.c2, GROUP_CONCAT(rt1.c2))) BETWEEN ((MIN(COUNT(*)), vt0.c0, vt1.c0)) AND (('2054894138', vt1.c0, MIN(rt1.c1)))))) ISNULL);
SELECT * FROM rt0 RIGHT OUTER JOIN vt1 ON (NOT (CAST(rt0.c1 AS INTEGER))) RIGHT OUTER JOIN rt1 ON rt0.c0 COLLATE BINARY LEFT OUTER JOIN vt0 ON CASE WHEN ((rt0.c1)IS(rt1.c0)) THEN ((vt1.c3)GLOB(vt1.c2)) END;
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt1 ON (NOT (CAST(rt0.c1 AS INTEGER))) RIGHT OUTER JOIN rt1 ON rt0.c0 COLLATE BINARY LEFT OUTER JOIN vt0 ON CASE WHEN ((rt0.c1)IS(rt1.c0)) THEN ((vt1.c3)GLOB(vt1.c2)) END WHERE (((LOWER(vt1.c2)) IS FALSE)) UNION ALL SELECT * FROM rt0 RIGHT OUTER JOIN vt1 ON (NOT (CAST(rt0.c1 AS INTEGER))) RIGHT OUTER JOIN rt1 ON rt0.c0 COLLATE BINARY LEFT OUTER JOIN vt0 ON CASE WHEN ((rt0.c1)IS(rt1.c0)) THEN ((vt1.c3)GLOB(vt1.c2)) END WHERE ((NOT (((LOWER(vt1.c2)) IS FALSE)))) UNION ALL SELECT * FROM rt0 RIGHT OUTER JOIN vt1 ON (NOT (CAST(rt0.c1 AS INTEGER))) RIGHT OUTER JOIN rt1 ON rt0.c0 COLLATE BINARY LEFT OUTER JOIN vt0 ON CASE WHEN ((rt0.c1)IS(rt1.c0)) THEN ((vt1.c3)GLOB(vt1.c2)) END WHERE (((((LOWER(vt1.c2)) IS FALSE)) ISNULL));
SELECT * FROM rt0 RIGHT OUTER JOIN vt1 ON (NOT (CAST(rt0.c1 AS INTEGER))) RIGHT OUTER JOIN rt1 ON rt0.c0 COLLATE BINARY LEFT OUTER JOIN vt0 ON CASE WHEN ((rt0.c1)IS(rt1.c0)) THEN ((vt1.c3)GLOB(vt1.c2)) END;
SELECT DISTINCT vt1.c2, vt1.c0, vt1.c3, vt1.c1 FROM vt1;
SELECT DISTINCT vt1.c2, vt1.c0, vt1.c3, vt1.c1 FROM vt1 WHERE (ABS(DISTINCT vt1.c2)) UNION SELECT DISTINCT vt1.c2, vt1.c0, vt1.c3, vt1.c1 FROM vt1 WHERE ((NOT (ABS(DISTINCT vt1.c2)))) UNION SELECT DISTINCT vt1.c2, vt1.c0, vt1.c3, vt1.c1 FROM vt1 WHERE (((ABS(DISTINCT vt1.c2)) ISNULL));
SELECT DISTINCT vt1.c2, vt1.c0, vt1.c3, vt1.c1 FROM vt1;
SELECT rt0.c1, vt0.c0, rt0.c3, vt1.c1, rt0.c2, rt0.c0, vt1.c3, vt1.c0, vt1.c2 FROM rt0 INNER JOIN vt0 ON (((((rt0.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c0)))) NOTNULL) LEFT OUTER JOIN vt1 ON ((((((vt1.c2)<<(vt1.c3)))AND(((((rt0.c2)AND(vt1.c0)))OR(rt0.c3)))))OR(NULL)) GROUP BY rt0.c1, vt0.c0, rt0.c3, vt1.c1, rt0.c2, rt0.c0, vt1.c3, vt1.c0, vt1.c2;
SELECT rt0.c1, vt0.c0, rt0.c3, vt1.c1, rt0.c2, rt0.c0, vt1.c3, vt1.c0, vt1.c2 FROM rt0 INNER JOIN vt0 ON (((((rt0.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c0)))) NOTNULL) LEFT OUTER JOIN vt1 ON ((((((vt1.c2)<<(vt1.c3)))AND(((((rt0.c2)AND(vt1.c0)))OR(rt0.c3)))))OR(NULL)) WHERE (((((vt1.c2) IS TRUE))||(((vt1.c0) NOT BETWEEN (vt1.c3) AND (rt0.c0))))) GROUP BY rt0.c1, vt0.c0, rt0.c3, vt1.c1, rt0.c2, rt0.c0, vt1.c3, vt1.c0, vt1.c2 UNION SELECT rt0.c1, vt0.c0, rt0.c3, vt1.c1, rt0.c2, rt0.c0, vt1.c3, vt1.c0, vt1.c2 FROM rt0 INNER JOIN vt0 ON (((((rt0.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c0)))) NOTNULL) LEFT OUTER JOIN vt1 ON ((((((vt1.c2)<<(vt1.c3)))AND(((((rt0.c2)AND(vt1.c0)))OR(rt0.c3)))))OR(NULL)) WHERE ((NOT (((((vt1.c2) IS TRUE))||(((vt1.c0) NOT BETWEEN (vt1.c3) AND (rt0.c0))))))) GROUP BY rt0.c1, vt0.c0, rt0.c3, vt1.c1, rt0.c2, rt0.c0, vt1.c3, vt1.c0, vt1.c2 UNION SELECT ALL rt0.c1, vt0.c0, rt0.c3, vt1.c1, rt0.c2, rt0.c0, vt1.c3, vt1.c0, vt1.c2 FROM rt0 INNER JOIN vt0 ON (((((rt0.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c0)))) NOTNULL) LEFT OUTER JOIN vt1 ON ((((((vt1.c2)<<(vt1.c3)))AND(((((rt0.c2)AND(vt1.c0)))OR(rt0.c3)))))OR(NULL)) WHERE (((((((vt1.c2) IS TRUE))||(((vt1.c0) NOT BETWEEN (vt1.c3) AND (rt0.c0))))) ISNULL)) GROUP BY rt0.c1, vt0.c0, rt0.c3, vt1.c1, rt0.c2, rt0.c0, vt1.c3, vt1.c0, vt1.c2;
SELECT rt0.c1, vt0.c0, rt0.c3, vt1.c1, rt0.c2, rt0.c0, vt1.c3, vt1.c0, vt1.c2 FROM rt0 INNER JOIN vt0 ON (((((rt0.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c0)))) NOTNULL) LEFT OUTER JOIN vt1 ON ((((((vt1.c2)<<(vt1.c3)))AND(((((rt0.c2)AND(vt1.c0)))OR(rt0.c3)))))OR(NULL)) GROUP BY rt0.c1, vt0.c0, rt0.c3, vt1.c1, rt0.c2, rt0.c0, vt1.c3, vt1.c0, vt1.c2;
SELECT vt1.c3, rt0.c3, rt1.c0, vt1.c2, rt1.c1, rt0.c1 FROM rt0, vt1, rt1, vt0 GROUP BY vt1.c3, rt0.c3, rt1.c0, vt1.c2, rt1.c1, rt0.c1;
SELECT vt1.c3, rt0.c3, rt1.c0, vt1.c2, rt1.c1, rt0.c1 FROM rt0, vt1, rt1, vt0 GROUP BY vt1.c3, rt0.c3, rt1.c0, vt1.c2, rt1.c1, rt0.c1 HAVING ((((~ (MIN(MAX(rt0.c0))))))>((LOWER(vt0.c0)))) UNION ALL SELECT ALL vt1.c3, rt0.c3, rt1.c0, vt1.c2, rt1.c1, rt0.c1 FROM rt0, vt1, rt1, vt0 GROUP BY vt1.c3, rt0.c3, rt1.c0, vt1.c2, rt1.c1, rt0.c1 HAVING (NOT (((((~ (MIN(MAX(rt0.c0))))))>((LOWER(vt0.c0)))))) UNION ALL SELECT ALL vt1.c3, rt0.c3, rt1.c0, vt1.c2, rt1.c1, rt0.c1 FROM rt0, vt1, rt1, vt0 GROUP BY vt1.c3, rt0.c3, rt1.c0, vt1.c2, rt1.c1, rt0.c1 HAVING ((((((~ (MIN(MAX(rt0.c0))))))>((LOWER(vt0.c0))))) ISNULL);
SELECT MIN((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((HEX(vt0.c0), ((((((((((((x'76f8')OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)), (vt0.c0 IN ()))) AND ((CAST(vt0.c0 AS TEXT), TRIM(DISTINCT vt0.c0, vt0.c0), (((x'')) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))) FROM vt0 ORDER BY ((((JULIANDAY(vt0.c0, x'', vt0.c0, vt0.c0, vt0.c0))OR(CAST(vt0.c0 AS BLOB))))OR((~ (vt0.c0))))  NULLS FIRST, vt0.c0 ASC, ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) ISNULL) DESC  NULLS FIRST;
SELECT rt1.c2, rt1.c0 FROM rt1;
SELECT ALL rt1.c2, rt1.c0 FROM rt1 WHERE (CAST(SQLITE_COMPILEOPTION_USED('!Dt穪+8z') AS REAL)) UNION ALL SELECT rt1.c2, rt1.c0 FROM rt1 WHERE ((NOT (CAST(SQLITE_COMPILEOPTION_USED('!Dt穪+8z') AS REAL)))) UNION ALL SELECT rt1.c2, rt1.c0 FROM rt1 WHERE (((CAST(SQLITE_COMPILEOPTION_USED('!Dt穪+8z') AS REAL)) ISNULL));
SELECT rt1.c2, rt1.c0 FROM rt1;
SELECT DISTINCT rt0.c0 FROM vt0, rt0, rt1, vt1;
SELECT DISTINCT rt0.c0 FROM vt0, rt0, rt1, vt1 WHERE ((~ (rt0.c3)) COLLATE BINARY) UNION SELECT DISTINCT rt0.c0 FROM vt0, rt0, rt1, vt1 WHERE ((NOT ((~ (rt0.c3)) COLLATE BINARY))) UNION SELECT DISTINCT rt0.c0 FROM vt0, rt0, rt1, vt1 WHERE ((((~ (rt0.c3)) COLLATE BINARY) ISNULL));
SELECT DISTINCT rt0.c0 FROM vt0, rt0, rt1, vt1;
SELECT vt1.c0, vt1.c1, vt0.c0, vt1.c3, vt1.c2 FROM vt0, vt1 GROUP BY vt1.c0, vt1.c1, vt0.c0, vt1.c3, vt1.c2;
SELECT vt1.c0, vt1.c1, vt0.c0, vt1.c3, vt1.c2 FROM vt0, vt1 WHERE (((CAST(vt0.c0 AS REAL))+(((vt1.c0) BETWEEN (vt1.c2) AND (vt0.c0))))) GROUP BY vt1.c0, vt1.c1, vt0.c0, vt1.c3, vt1.c2 UNION SELECT vt1.c0, vt1.c1, vt0.c0, vt1.c3, vt1.c2 FROM vt0, vt1 WHERE ((NOT (((CAST(vt0.c0 AS REAL))+(((vt1.c0) BETWEEN (vt1.c2) AND (vt0.c0))))))) GROUP BY vt1.c0, vt1.c1, vt0.c0, vt1.c3, vt1.c2 UNION SELECT ALL vt1.c0, vt1.c1, vt0.c0, vt1.c3, vt1.c2 FROM vt0, vt1 WHERE (((((CAST(vt0.c0 AS REAL))+(((vt1.c0) BETWEEN (vt1.c2) AND (vt0.c0))))) ISNULL)) GROUP BY vt1.c0, vt1.c1, vt0.c0, vt1.c3, vt1.c2;
SELECT vt1.c0, vt1.c1, vt0.c0, vt1.c3, vt1.c2 FROM vt0, vt1 GROUP BY vt1.c0, vt1.c1, vt0.c0, vt1.c3, vt1.c2;
SELECT ALL rt1.c2, vt0.c0, rt1.c1, rt0.c0, vt1.c0, rt1.c0, vt1.c1, rt0.c1, vt1.c3 FROM rt1, vt0, vt1, rt0 GROUP BY rt1.c2, vt0.c0, rt1.c1, rt0.c0, vt1.c0, rt1.c0, vt1.c1, rt0.c1, vt1.c3;
SELECT ALL rt1.c2, vt0.c0, rt1.c1, rt0.c0, vt1.c0, rt1.c0, vt1.c1, rt0.c1, vt1.c3 FROM rt1, vt0, vt1, rt0 GROUP BY rt1.c2, vt0.c0, rt1.c1, rt0.c0, vt1.c0, rt1.c0, vt1.c1, rt0.c1, vt1.c3 HAVING IFNULL(TOTAL(COUNT(rt1.c2)), TOTAL(MAX(vt1.c1))) UNION ALL SELECT ALL rt1.c2, vt0.c0, rt1.c1, rt0.c0, vt1.c0, rt1.c0, vt1.c1, rt0.c1, vt1.c3 FROM rt1, vt0, vt1, rt0 GROUP BY rt1.c2, vt0.c0, rt1.c1, rt0.c0, vt1.c0, rt1.c0, vt1.c1, rt0.c1, vt1.c3 HAVING (NOT (IFNULL(TOTAL(COUNT(rt1.c2)), TOTAL(MAX(vt1.c1))))) UNION ALL SELECT rt1.c2, vt0.c0, rt1.c1, rt0.c0, vt1.c0, rt1.c0, vt1.c1, rt0.c1, vt1.c3 FROM rt1, vt0, vt1, rt0 GROUP BY rt1.c2, vt0.c0, rt1.c1, rt0.c0, vt1.c0, rt1.c0, vt1.c1, rt0.c1, vt1.c3 HAVING ((IFNULL(TOTAL(COUNT(rt1.c2)), TOTAL(MAX(vt1.c1)))) ISNULL);
SELECT ALL * FROM rt0, vt1;
SELECT * FROM rt0, vt1 WHERE ((NOT ((NOT (vt1.c1))))) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE ((NOT ((NOT ((NOT (vt1.c1))))))) UNION ALL SELECT * FROM rt0, vt1 WHERE ((((NOT ((NOT (vt1.c1))))) ISNULL));
SELECT ALL * FROM rt0, vt1;
SELECT DISTINCT rt0.c0, vt1.c3, vt1.c2, rt1.c2, rt1.c0, rt0.c2, rt0.c3, vt1.c0, rt0.c1, vt1.c1 FROM rt1, vt1 CROSS JOIN rt0 ON SQLITE_COMPILEOPTION_USED(((vt1.c0) IS FALSE));
SELECT DISTINCT rt0.c0, vt1.c3, vt1.c2, rt1.c2, rt1.c0, rt0.c2, rt0.c3, vt1.c0, rt0.c1, vt1.c1 FROM rt1, vt1 CROSS JOIN rt0 ON SQLITE_COMPILEOPTION_USED(((vt1.c0) IS FALSE)) WHERE ((((((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((vt1.c1))))OR(((vt1.c0) IS FALSE))))OR(IFNULL(vt1.c2, rt0.c2)))) UNION SELECT DISTINCT rt0.c0, vt1.c3, vt1.c2, rt1.c2, rt1.c0, rt0.c2, rt0.c3, vt1.c0, rt0.c1, vt1.c1 FROM rt1, vt1 CROSS JOIN rt0 ON SQLITE_COMPILEOPTION_USED(((vt1.c0) IS FALSE)) WHERE ((NOT ((((((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((vt1.c1))))OR(((vt1.c0) IS FALSE))))OR(IFNULL(vt1.c2, rt0.c2)))))) UNION SELECT DISTINCT rt0.c0, vt1.c3, vt1.c2, rt1.c2, rt1.c0, rt0.c2, rt0.c3, vt1.c0, rt0.c1, vt1.c1 FROM rt1, vt1 CROSS JOIN rt0 ON SQLITE_COMPILEOPTION_USED(((vt1.c0) IS FALSE)) WHERE ((((((((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((vt1.c1))))OR(((vt1.c0) IS FALSE))))OR(IFNULL(vt1.c2, rt0.c2)))) ISNULL));
SELECT DISTINCT rt0.c0, vt1.c3, vt1.c2, rt1.c2, rt1.c0, rt0.c2, rt0.c3, vt1.c0, rt0.c1, vt1.c1 FROM rt1, vt1 CROSS JOIN rt0 ON SQLITE_COMPILEOPTION_USED(((vt1.c0) IS FALSE));
SELECT ALL vt1.c2 FROM vt1 GROUP BY vt1.c2;
SELECT ALL vt1.c2 FROM vt1 WHERE (TYPEOF(DISTINCT ((((((((vt1.c3)OR(vt1.c0)))OR(vt1.c3)))OR(vt1.c1)))AND(vt1.c2)))) GROUP BY vt1.c2 UNION SELECT vt1.c2 FROM vt1 WHERE ((NOT (TYPEOF(DISTINCT ((((((((vt1.c3)OR(vt1.c0)))OR(vt1.c3)))OR(vt1.c1)))AND(vt1.c2)))))) GROUP BY vt1.c2 UNION SELECT vt1.c2 FROM vt1 WHERE (((TYPEOF(DISTINCT ((((((((vt1.c3)OR(vt1.c0)))OR(vt1.c3)))OR(vt1.c1)))AND(vt1.c2)))) ISNULL)) GROUP BY vt1.c2;
SELECT ALL vt1.c2 FROM vt1 GROUP BY vt1.c2;
SELECT rt1.c1, vt0.c0, vt1.c1, rt0.c2, rt1.c2, rt0.c1, rt0.c3, vt1.c3, vt1.c0, rt0.c0, rt1.c0, vt1.c2 FROM vt1, vt0, rt1, rt0 GROUP BY rt1.c1, vt0.c0, vt1.c1, rt0.c2, rt1.c2, rt0.c1, rt0.c3, vt1.c3, vt1.c0, rt0.c0, rt1.c0, vt1.c2;
SELECT ALL rt1.c1, vt0.c0, vt1.c1, rt0.c2, rt1.c2, rt0.c1, rt0.c3, vt1.c3, vt1.c0, rt0.c0, rt1.c0, vt1.c2 FROM vt1, vt0, rt1, rt0 GROUP BY rt1.c1, vt0.c0, vt1.c1, rt0.c2, rt1.c2, rt0.c1, rt0.c3, vt1.c3, vt1.c0, rt0.c0, rt1.c0, vt1.c2 HAVING CASE 0.24591251512417878  WHEN ((vt1.c0) NOT BETWEEN (rt1.c2) AND (rt0.c1)) THEN (- (GROUP_CONCAT(vt1.c2))) END UNION ALL SELECT ALL rt1.c1, vt0.c0, vt1.c1, rt0.c2, rt1.c2, rt0.c1, rt0.c3, vt1.c3, vt1.c0, rt0.c0, rt1.c0, vt1.c2 FROM vt1, vt0, rt1, rt0 GROUP BY rt1.c1, vt0.c0, vt1.c1, rt0.c2, rt1.c2, rt0.c1, rt0.c3, vt1.c3, vt1.c0, rt0.c0, rt1.c0, vt1.c2 HAVING (NOT (CASE 0.24591251512417878  WHEN ((vt1.c0) NOT BETWEEN (rt1.c2) AND (rt0.c1)) THEN (- (GROUP_CONCAT(vt1.c2))) END)) UNION ALL SELECT ALL rt1.c1, vt0.c0, vt1.c1, rt0.c2, rt1.c2, rt0.c1, rt0.c3, vt1.c3, vt1.c0, rt0.c0, rt1.c0, vt1.c2 FROM vt1, vt0, rt1, rt0 GROUP BY rt1.c1, vt0.c0, vt1.c1, rt0.c2, rt1.c2, rt0.c1, rt0.c3, vt1.c3, vt1.c0, rt0.c0, rt1.c0, vt1.c2 HAVING ((CASE 0.24591251512417878  WHEN ((vt1.c0) NOT BETWEEN (rt1.c2) AND (rt0.c1)) THEN (- (GROUP_CONCAT(vt1.c2))) END) ISNULL);
SELECT rt1.c1, vt0.c0, vt1.c1, rt0.c2, rt1.c2, rt0.c1, rt0.c3, vt1.c3, vt1.c0, rt0.c0, rt1.c0, vt1.c2 FROM vt1, vt0, rt1, rt0 GROUP BY rt1.c1, vt0.c0, vt1.c1, rt0.c2, rt1.c2, rt0.c1, rt0.c3, vt1.c3, vt1.c0, rt0.c0, rt1.c0, vt1.c2;
SELECT ALL rt1.c1, vt0.c0, vt1.c1, rt0.c2, rt1.c2, rt0.c1, rt0.c3, vt1.c3, vt1.c0, rt0.c0, rt1.c0, vt1.c2 FROM vt1, vt0, rt1, rt0 GROUP BY rt1.c1, vt0.c0, vt1.c1, rt0.c2, rt1.c2, rt0.c1, rt0.c3, vt1.c3, vt1.c0, rt0.c0, rt1.c0, vt1.c2 HAVING CASE 0.24591251512417878  WHEN ((vt1.c0) NOT BETWEEN (rt1.c2) AND (rt0.c1)) THEN (- (GROUP_CONCAT(vt1.c2))) END UNION ALL SELECT ALL rt1.c1, vt0.c0, vt1.c1, rt0.c2, rt1.c2, rt0.c1, rt0.c3, vt1.c3, vt1.c0, rt0.c0, rt1.c0, vt1.c2 FROM vt1, vt0, rt1, rt0 GROUP BY rt1.c1, vt0.c0, vt1.c1, rt0.c2, rt1.c2, rt0.c1, rt0.c3, vt1.c3, vt1.c0, rt0.c0, rt1.c0, vt1.c2 HAVING (NOT (CASE 0.24591251512417878  WHEN ((vt1.c0) NOT BETWEEN (rt1.c2) AND (rt0.c1)) THEN (- (GROUP_CONCAT(vt1.c2))) END)) UNION ALL SELECT ALL rt1.c1, vt0.c0, vt1.c1, rt0.c2, rt1.c2, rt0.c1, rt0.c3, vt1.c3, vt1.c0, rt0.c0, rt1.c0, vt1.c2 FROM vt1, vt0, rt1, rt0 GROUP BY rt1.c1, vt0.c0, vt1.c1, rt0.c2, rt1.c2, rt0.c1, rt0.c3, vt1.c3, vt1.c0, rt0.c0, rt1.c0, vt1.c2 HAVING ((CASE 0.24591251512417878  WHEN ((vt1.c0) NOT BETWEEN (rt1.c2) AND (rt0.c1)) THEN (- (GROUP_CONCAT(vt1.c2))) END) ISNULL);
SELECT rt1.c1, vt0.c0, vt1.c1, rt0.c2, rt1.c2, rt0.c1, rt0.c3, vt1.c3, vt1.c0, rt0.c0, rt1.c0, vt1.c2 FROM vt1, vt0, rt1, rt0 GROUP BY rt1.c1, vt0.c0, vt1.c1, rt0.c2, rt1.c2, rt0.c1, rt0.c3, vt1.c3, vt1.c0, rt0.c0, rt1.c0, vt1.c2;
SELECT * FROM vt1;
SELECT ALL * FROM vt1 WHERE (SQLITE_COMPILEOPTION_GET(CAST(vt1.c0 AS REAL))) UNION ALL SELECT * FROM vt1 WHERE ((NOT (SQLITE_COMPILEOPTION_GET(CAST(vt1.c0 AS REAL))))) UNION ALL SELECT ALL * FROM vt1 WHERE (((SQLITE_COMPILEOPTION_GET(CAST(vt1.c0 AS REAL))) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT rt1.c0, rt1.c1, rt1.c2, vt0.c0 FROM vt0, rt1;
SELECT DISTINCT rt1.c0, rt1.c1, rt1.c2, vt0.c0 FROM vt0, rt1 WHERE (((((vt0.c0)==(rt1.c0))) BETWEEN (((rt1.c2)/(rt1.c1))) AND ((rt1.c1 IN ())))) UNION SELECT DISTINCT rt1.c0, rt1.c1, rt1.c2, vt0.c0 FROM vt0, rt1 WHERE ((NOT (((((vt0.c0)==(rt1.c0))) BETWEEN (((rt1.c2)/(rt1.c1))) AND ((rt1.c1 IN ())))))) UNION SELECT DISTINCT rt1.c0, rt1.c1, rt1.c2, vt0.c0 FROM vt0, rt1 WHERE (((((((vt0.c0)=(rt1.c0))) BETWEEN (((rt1.c2)/(rt1.c1))) AND ((rt1.c1 IN ())))) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c1, rt1.c2, vt0.c0 FROM vt0, rt1;
SELECT rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1;
SELECT rt1.c0, rt1.c1 FROM rt1 WHERE (CAST((((x'')) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0))) AS INTEGER)) GROUP BY rt1.c0, rt1.c1 UNION SELECT ALL rt1.c0, rt1.c1 FROM rt1 WHERE ((NOT (CAST((((x'')) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0))) AS INTEGER)))) GROUP BY rt1.c0, rt1.c1 UNION SELECT ALL rt1.c0, rt1.c1 FROM rt1 WHERE (((CAST((((x'')) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0))) AS INTEGER)) ISNULL)) GROUP BY rt1.c0, rt1.c1;
SELECT rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1;
SELECT rt0.c2, vt1.c2, vt1.c1, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c2, vt1.c1, rt0.c0;
SELECT ALL rt0.c2, vt1.c2, vt1.c1, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c2, vt1.c1, rt0.c0 HAVING SUM(vt1.c1) UNION ALL SELECT ALL rt0.c2, vt1.c2, vt1.c1, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c2, vt1.c1, rt0.c0 HAVING (NOT (SUM(vt1.c1))) UNION ALL SELECT ALL rt0.c2, vt1.c2, vt1.c1, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c2, vt1.c1, rt0.c0 HAVING ((SUM(vt1.c1)) ISNULL);
SELECT rt0.c2, vt1.c2, vt1.c1, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c2, vt1.c1, rt0.c0;
SELECT ALL rt0.c2, vt1.c2, vt1.c1, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c2, vt1.c1, rt0.c0 HAVING SUM(vt1.c1) UNION ALL SELECT ALL rt0.c2, vt1.c2, vt1.c1, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c2, vt1.c1, rt0.c0 HAVING (NOT (SUM(vt1.c1))) UNION ALL SELECT ALL rt0.c2, vt1.c2, vt1.c1, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c2, vt1.c1, rt0.c0 HAVING ((SUM(vt1.c1)) ISNULL);
SELECT rt0.c2, vt1.c2, vt1.c1, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c2, vt1.c1, rt0.c0;
SELECT ALL * FROM rt1;
SELECT * FROM rt1 WHERE (((((ABS(DISTINCT rt1.c0))AND(((rt1.c1)%(rt1.c1)))))AND(CASE rt1.c2  WHEN rt1.c2 THEN rt1.c2 END))) UNION ALL SELECT * FROM rt1 WHERE ((NOT (((((ABS(DISTINCT rt1.c0))AND(((rt1.c1)%(rt1.c1)))))AND(CASE rt1.c2  WHEN rt1.c2 THEN rt1.c2 END))))) UNION ALL SELECT * FROM rt1 WHERE (((((((ABS(DISTINCT rt1.c0))AND(((rt1.c1)%(rt1.c1)))))AND(CASE rt1.c2  WHEN rt1.c2 THEN rt1.c2 END))) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT * FROM vt0, vt1 FULL OUTER JOIN rt0 ON CHAR(LOWER(DISTINCT rt1.c1)) RIGHT OUTER JOIN rt1 ON ((((((((0.5617651280868712)OR((((vt1.c3))<((vt1.c3))))))OR((- (rt0.c0)))))OR(((rt0.c3) NOT BETWEEN (vt1.c0) AND (rt1.c1)))))OR(CASE rt0.c3  WHEN x'bd0b' THEN rt0.c1 ELSE rt0.c3 END));
SELECT ALL vt0.c0, rt0.c1, vt1.c1 FROM vt0, rt0, vt1 GROUP BY vt0.c0, rt0.c1, vt1.c1;
SELECT vt0.c0, rt0.c1, vt1.c1 FROM vt0, rt0, vt1 WHERE (((vt1.c2)<=(((0.6435353924032388)OR(rt0.c1))))) GROUP BY vt0.c0, rt0.c1, vt1.c1 UNION SELECT vt0.c0, rt0.c1, vt1.c1 FROM vt0, rt0, vt1 WHERE ((NOT (((vt1.c2)<=(((0.6435353924032388)OR(rt0.c1))))))) GROUP BY vt0.c0, rt0.c1, vt1.c1 UNION SELECT vt0.c0, rt0.c1, vt1.c1 FROM vt0, rt0, vt1 WHERE (((((vt1.c2)<=(((0.6435353924032388)OR(rt0.c1))))) ISNULL)) GROUP BY vt0.c0, rt0.c1, vt1.c1;
SELECT ALL vt0.c0, rt0.c1, vt1.c1 FROM vt0, rt0, vt1 GROUP BY vt0.c0, rt0.c1, vt1.c1;
SELECT ALL rt0.c2, vt1.c2, rt0.c0, rt0.c3, rt0.c1, vt1.c0, vt1.c1 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c2, rt0.c0, rt0.c3, rt0.c1, vt1.c0, vt1.c1;
SELECT rt0.c2, vt1.c2, rt0.c0, rt0.c3, rt0.c1, vt1.c0, vt1.c1 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c2, rt0.c0, rt0.c3, rt0.c1, vt1.c0, vt1.c1 HAVING CASE TOTAL(TOTAL(rt0.c3))  WHEN MIN(COUNT(*)) THEN SUM(COUNT(rt0.c2)) WHEN COUNT(rt0.c3) COLLATE NOCASE THEN MIN(AVG(rt0.c0)) WHEN AVG(vt1.c0) THEN ((((MIN(COUNT(GROUP_CONCAT(AVG(COUNT(rt0.c0))))))AND(SUM(vt1.c3))))OR(0Xffffffff903494dc)) END UNION ALL SELECT ALL rt0.c2, vt1.c2, rt0.c0, rt0.c3, rt0.c1, vt1.c0, vt1.c1 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c2, rt0.c0, rt0.c3, rt0.c1, vt1.c0, vt1.c1 HAVING (NOT (CASE TOTAL(TOTAL(rt0.c3))  WHEN MIN(COUNT(*)) THEN SUM(COUNT(rt0.c2)) WHEN COUNT(rt0.c3) COLLATE NOCASE THEN MIN(AVG(rt0.c0)) WHEN AVG(vt1.c0) THEN ((((MIN(COUNT(GROUP_CONCAT(AVG(COUNT(rt0.c0))))))AND(SUM(vt1.c3))))OR(0xffffffff903494dc)) END)) UNION ALL SELECT rt0.c2, vt1.c2, rt0.c0, rt0.c3, rt0.c1, vt1.c0, vt1.c1 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c2, rt0.c0, rt0.c3, rt0.c1, vt1.c0, vt1.c1 HAVING ((CASE TOTAL(TOTAL(rt0.c3))  WHEN MIN(COUNT(*)) THEN SUM(COUNT(rt0.c2)) WHEN COUNT(rt0.c3) COLLATE NOCASE THEN MIN(AVG(rt0.c0)) WHEN AVG(vt1.c0) THEN ((((MIN(COUNT(GROUP_CONCAT(AVG(COUNT(rt0.c0))))))AND(SUM(vt1.c3))))OR(0Xffffffff903494dc)) END) ISNULL);
SELECT ALL rt1.c1, vt1.c3, vt1.c1, vt1.c0, rt1.c2, vt1.c2, rt1.c0 FROM vt1, rt1;
SELECT rt1.c1, vt1.c3, vt1.c1, vt1.c0, rt1.c2, vt1.c2, rt1.c0 FROM vt1, rt1 WHERE (((((CAST(vt1.c3 AS REAL))AND(CASE rt1.c0  WHEN vt1.c1 THEN 0.921634348841576 WHEN vt1.c0 THEN '#sG؇' WHEN vt1.c3 THEN vt1.c3 ELSE rt1.c0 END)))AND((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((vt1.c1)))))) UNION ALL SELECT ALL rt1.c1, vt1.c3, vt1.c1, vt1.c0, rt1.c2, vt1.c2, rt1.c0 FROM vt1, rt1 WHERE ((NOT (((((CAST(vt1.c3 AS REAL))AND(CASE rt1.c0  WHEN vt1.c1 THEN 0.921634348841576 WHEN vt1.c0 THEN '#sG؇' WHEN vt1.c3 THEN vt1.c3 ELSE rt1.c0 END)))AND((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((vt1.c1)))))))) UNION ALL SELECT ALL rt1.c1, vt1.c3, vt1.c1, vt1.c0, rt1.c2, vt1.c2, rt1.c0 FROM vt1, rt1 WHERE (((((((CAST(vt1.c3 AS REAL))AND(CASE rt1.c0  WHEN vt1.c1 THEN 0.921634348841576 WHEN vt1.c0 THEN '#sG؇' WHEN vt1.c3 THEN vt1.c3 ELSE rt1.c0 END)))AND((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((vt1.c1)))))) ISNULL));
SELECT ALL rt1.c1, vt1.c3, vt1.c1, vt1.c0, rt1.c2, vt1.c2, rt1.c0 FROM vt1, rt1;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((vt0.c0)==(vt0.c0)) COLLATE NOCASE) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0)=(vt0.c0)) COLLATE NOCASE))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((vt0.c0)==(vt0.c0)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt1.c0, vt1.c1, rt0.c1, rt1.c1, rt0.c3, rt0.c0, vt1.c2 FROM rt1, vt0, rt0, vt1 GROUP BY vt1.c0, vt1.c1, rt0.c1, rt1.c1, rt0.c3, rt0.c0, vt1.c2;
SELECT ALL vt1.c0, vt1.c1, rt0.c1, rt1.c1, rt0.c3, rt0.c0, vt1.c2 FROM rt1, vt0, rt0, vt1 WHERE ((- (((rt1.c0)&(rt0.c3))))) GROUP BY vt1.c0, vt1.c1, rt0.c1, rt1.c1, rt0.c3, rt0.c0, vt1.c2 UNION SELECT ALL vt1.c0, vt1.c1, rt0.c1, rt1.c1, rt0.c3, rt0.c0, vt1.c2 FROM rt1, vt0, rt0, vt1 WHERE ((NOT ((- (((rt1.c0)&(rt0.c3))))))) GROUP BY vt1.c0, vt1.c1, rt0.c1, rt1.c1, rt0.c3, rt0.c0, vt1.c2 UNION SELECT ALL vt1.c0, vt1.c1, rt0.c1, rt1.c1, rt0.c3, rt0.c0, vt1.c2 FROM rt1, vt0, rt0, vt1 WHERE ((((- (((rt1.c0)&(rt0.c3))))) ISNULL)) GROUP BY vt1.c0, vt1.c1, rt0.c1, rt1.c1, rt0.c3, rt0.c0, vt1.c2;
SELECT vt1.c0, vt1.c1, rt0.c1, rt1.c1, rt0.c3, rt0.c0, vt1.c2 FROM rt1, vt0, rt0, vt1 GROUP BY vt1.c0, vt1.c1, rt0.c1, rt1.c1, rt0.c3, rt0.c0, vt1.c2;
SELECT rt0.c0, rt1.c2, vt1.c3, vt0.c0, rt0.c3, rt1.c0, rt0.c2, rt0.c1, vt1.c2, vt1.c1 FROM vt0, rt0, vt1 LEFT OUTER JOIN rt1 ON ((rt0.c0) ISNULL) GROUP BY rt0.c0, rt1.c2, vt1.c3, vt0.c0, rt0.c3, rt1.c0, rt0.c2, rt0.c1, vt1.c2, vt1.c1;
SELECT rt0.c0, rt1.c2, vt1.c3, vt0.c0, rt0.c3, rt1.c0, rt0.c2, rt0.c1, vt1.c2, vt1.c1 FROM vt0, rt0, vt1 LEFT OUTER JOIN rt1 ON ((rt0.c0) ISNULL) GROUP BY rt0.c0, rt1.c2, vt1.c3, vt0.c0, rt0.c3, rt1.c0, rt0.c2, rt0.c1, vt1.c2, vt1.c1 HAVING (NOT (0Xffffffffa1e12a89)) UNION ALL SELECT ALL rt0.c0, rt1.c2, vt1.c3, vt0.c0, rt0.c3, rt1.c0, rt0.c2, rt0.c1, vt1.c2, vt1.c1 FROM vt0, rt0, vt1 LEFT OUTER JOIN rt1 ON ((rt0.c0) ISNULL) GROUP BY rt0.c0, rt1.c2, vt1.c3, vt0.c0, rt0.c3, rt1.c0, rt0.c2, rt0.c1, vt1.c2, vt1.c1 HAVING (NOT ((NOT (0Xffffffffa1e12a89)))) UNION ALL SELECT ALL rt0.c0, rt1.c2, vt1.c3, vt0.c0, rt0.c3, rt1.c0, rt0.c2, rt0.c1, vt1.c2, vt1.c1 FROM vt0, rt0, vt1 LEFT OUTER JOIN rt1 ON ((rt0.c0) ISNULL) GROUP BY rt0.c0, rt1.c2, vt1.c3, vt0.c0, rt0.c3, rt1.c0, rt0.c2, rt0.c1, vt1.c2, vt1.c1 HAVING (((NOT (0xffffffffa1e12a89))) ISNULL);
SELECT rt0.c0, rt1.c2, vt1.c3, vt0.c0, rt0.c3, rt1.c0, rt0.c2, rt0.c1, vt1.c2, vt1.c1 FROM vt0, rt0, vt1 LEFT OUTER JOIN rt1 ON ((rt0.c0) ISNULL) GROUP BY rt0.c0, rt1.c2, vt1.c3, vt0.c0, rt0.c3, rt1.c0, rt0.c2, rt0.c1, vt1.c2, vt1.c1;
SELECT rt0.c0, rt1.c2, vt1.c3, vt0.c0, rt0.c3, rt1.c0, rt0.c2, rt0.c1, vt1.c2, vt1.c1 FROM vt0, rt0, vt1 LEFT OUTER JOIN rt1 ON ((rt0.c0) ISNULL) GROUP BY rt0.c0, rt1.c2, vt1.c3, vt0.c0, rt0.c3, rt1.c0, rt0.c2, rt0.c1, vt1.c2, vt1.c1 HAVING (NOT (0Xffffffffa1e12a89)) UNION ALL SELECT ALL rt0.c0, rt1.c2, vt1.c3, vt0.c0, rt0.c3, rt1.c0, rt0.c2, rt0.c1, vt1.c2, vt1.c1 FROM vt0, rt0, vt1 LEFT OUTER JOIN rt1 ON ((rt0.c0) ISNULL) GROUP BY rt0.c0, rt1.c2, vt1.c3, vt0.c0, rt0.c3, rt1.c0, rt0.c2, rt0.c1, vt1.c2, vt1.c1 HAVING (NOT ((NOT (0Xffffffffa1e12a89)))) UNION ALL SELECT ALL rt0.c0, rt1.c2, vt1.c3, vt0.c0, rt0.c3, rt1.c0, rt0.c2, rt0.c1, vt1.c2, vt1.c1 FROM vt0, rt0, vt1 LEFT OUTER JOIN rt1 ON ((rt0.c0) ISNULL) GROUP BY rt0.c0, rt1.c2, vt1.c3, vt0.c0, rt0.c3, rt1.c0, rt0.c2, rt0.c1, vt1.c2, vt1.c1 HAVING (((NOT (0xffffffffa1e12a89))) ISNULL);
SELECT rt0.c0, rt1.c2, vt1.c3, vt0.c0, rt0.c3, rt1.c0, rt0.c2, rt0.c1, vt1.c2, vt1.c1 FROM vt0, rt0, vt1 LEFT OUTER JOIN rt1 ON ((rt0.c0) ISNULL) GROUP BY rt0.c0, rt1.c2, vt1.c3, vt0.c0, rt0.c3, rt1.c0, rt0.c2, rt0.c1, vt1.c2, vt1.c1;
SELECT rt0.c2 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 WHERE ((+ (NULL))) ORDER BY CASE CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END  WHEN CAST(rt0.c2 AS REAL) THEN ((rt0.c3)==(rt0.c3)) ELSE rt0.c1 COLLATE NOCASE END DESC;
SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT ((+ (NULL))))) ORDER BY CASE CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END  WHEN CAST(rt0.c2 AS REAL) THEN ((rt0.c3)==(rt0.c3)) ELSE rt0.c1 COLLATE NOCASE END DESC;
SELECT ALL rt0.c2 FROM rt0 WHERE ((((+ (NULL))) ISNULL)) ORDER BY CASE CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END  WHEN CAST(rt0.c2 AS REAL) THEN ((rt0.c3)=(rt0.c3)) ELSE rt0.c1 COLLATE NOCASE END DESC;
SELECT rt0.c2 FROM rt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((~ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((~ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((~ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0, vt1.c3, vt1.c0, rt1.c2, rt0.c3, rt1.c0, vt1.c2, rt1.c1, rt0.c2, rt0.c0, vt1.c1, rt0.c1 FROM vt1, rt0, vt0, rt1 GROUP BY vt0.c0, vt1.c3, vt1.c0, rt1.c2, rt0.c3, rt1.c0, vt1.c2, rt1.c1, rt0.c2, rt0.c0, vt1.c1, rt0.c1;
SELECT vt0.c0, vt1.c3, vt1.c0, rt1.c2, rt0.c3, rt1.c0, vt1.c2, rt1.c1, rt0.c2, rt0.c0, vt1.c1, rt0.c1 FROM vt1, rt0, vt0, rt1 WHERE (((((((rt0.c0)!=(vt0.c0)))OR(((rt0.c3) BETWEEN (rt0.c0) AND (vt0.c0)))))OR(('0.37687870489605746' IN ())))) GROUP BY vt0.c0, vt1.c3, vt1.c0, rt1.c2, rt0.c3, rt1.c0, vt1.c2, rt1.c1, rt0.c2, rt0.c0, vt1.c1, rt0.c1 UNION SELECT ALL vt0.c0, vt1.c3, vt1.c0, rt1.c2, rt0.c3, rt1.c0, vt1.c2, rt1.c1, rt0.c2, rt0.c0, vt1.c1, rt0.c1 FROM vt1, rt0, vt0, rt1 WHERE ((NOT (((((((rt0.c0)!=(vt0.c0)))OR(((rt0.c3) BETWEEN (rt0.c0) AND (vt0.c0)))))OR(('0.37687870489605746' IN ())))))) GROUP BY vt0.c0, vt1.c3, vt1.c0, rt1.c2, rt0.c3, rt1.c0, vt1.c2, rt1.c1, rt0.c2, rt0.c0, vt1.c1, rt0.c1 UNION SELECT vt0.c0, vt1.c3, vt1.c0, rt1.c2, rt0.c3, rt1.c0, vt1.c2, rt1.c1, rt0.c2, rt0.c0, vt1.c1, rt0.c1 FROM vt1, rt0, vt0, rt1 WHERE (((((((((rt0.c0)!=(vt0.c0)))OR(((rt0.c3) BETWEEN (rt0.c0) AND (vt0.c0)))))OR(('0.37687870489605746' IN ())))) ISNULL)) GROUP BY vt0.c0, vt1.c3, vt1.c0, rt1.c2, rt0.c3, rt1.c0, vt1.c2, rt1.c1, rt0.c2, rt0.c0, vt1.c1, rt0.c1;
SELECT ALL vt0.c0, vt1.c3, vt1.c0, rt1.c2, rt0.c3, rt1.c0, vt1.c2, rt1.c1, rt0.c2, rt0.c0, vt1.c1, rt0.c1 FROM vt1, rt0, vt0, rt1 GROUP BY vt0.c0, vt1.c3, vt1.c0, rt1.c2, rt0.c3, rt1.c0, vt1.c2, rt1.c1, rt0.c2, rt0.c0, vt1.c1, rt0.c1;
SELECT rt1.c2, vt1.c0, rt0.c2 FROM rt0, vt0, rt1, vt1 GROUP BY rt1.c2, vt1.c0, rt0.c2;
SELECT rt1.c2, vt1.c0, rt0.c2 FROM rt0, vt0, rt1, vt1 GROUP BY rt1.c2, vt1.c0, rt0.c2 HAVING COUNT(SUM(COUNT(rt0.c2))) UNION ALL SELECT ALL rt1.c2, vt1.c0, rt0.c2 FROM rt0, vt0, rt1, vt1 GROUP BY rt1.c2, vt1.c0, rt0.c2 HAVING (NOT (COUNT(SUM(COUNT(rt0.c2))))) UNION ALL SELECT rt1.c2, vt1.c0, rt0.c2 FROM rt0, vt0, rt1, vt1 GROUP BY rt1.c2, vt1.c0, rt0.c2 HAVING ((COUNT(SUM(COUNT(rt0.c2)))) ISNULL);
SELECT ALL rt1.c2, rt0.c2, rt0.c1, rt1.c0, rt0.c0 FROM rt1, rt0;
SELECT ALL rt1.c2, rt0.c2, rt0.c1, rt1.c0, rt0.c0 FROM rt1, rt0 WHERE ((rt0.c2 IN ())) UNION ALL SELECT rt1.c2, rt0.c2, rt0.c1, rt1.c0, rt0.c0 FROM rt1, rt0 WHERE ((NOT ((rt0.c2 IN ())))) UNION ALL SELECT ALL rt1.c2, rt0.c2, rt0.c1, rt1.c0, rt0.c0 FROM rt1, rt0 WHERE ((((rt0.c2 IN ())) ISNULL));
SELECT ALL rt1.c2, rt0.c2, rt0.c1, rt1.c0, rt0.c0 FROM rt1, rt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (highlight(CAST(vt1.c3 AS BLOB), (((vt1.c3, vt1.c2, x''))!=((vt1.c0, vt1.c3, vt1.c2))), vt1.c1 COLLATE NOCASE, ((vt1.c0)OR(vt1.c1)))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (highlight(CAST(vt1.c3 AS BLOB), (((vt1.c3, vt1.c2, x''))!=((vt1.c0, vt1.c3, vt1.c2))), vt1.c1 COLLATE NOCASE, ((vt1.c0)OR(vt1.c1)))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((highlight(CAST(vt1.c3 AS BLOB), (((vt1.c3, vt1.c2, x''))<>((vt1.c0, vt1.c3, vt1.c2))), vt1.c1 COLLATE NOCASE, ((vt1.c0)OR(vt1.c1)))) ISNULL));
SELECT rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, vt0 WHERE ((((((rt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c0))))==((('-2064551345') IS TRUE)))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0, vt0 WHERE ((NOT ((((((rt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c0))))=((('-2064551345') IS TRUE)))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0, vt0 WHERE ((((((((rt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c0))))=((('-2064551345') IS TRUE)))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0;
SELECT vt1.c2 FROM vt1 GROUP BY vt1.c2;
SELECT ALL vt1.c2 FROM vt1 GROUP BY vt1.c2 HAVING CASE WHEN ((x'')<=(vt1.c0)) THEN (((GROUP_CONCAT(COUNT(*)))) NOT BETWEEN ((vt1.c1)) AND ((COUNT(*)))) END UNION ALL SELECT ALL vt1.c2 FROM vt1 GROUP BY vt1.c2 HAVING (NOT (CASE WHEN ((x'')<=(vt1.c0)) THEN (((GROUP_CONCAT(COUNT(*)))) NOT BETWEEN ((vt1.c1)) AND ((COUNT(*)))) END)) UNION ALL SELECT ALL vt1.c2 FROM vt1 GROUP BY vt1.c2 HAVING ((CASE WHEN ((x'')<=(vt1.c0)) THEN (((GROUP_CONCAT(COUNT(*)))) NOT BETWEEN ((vt1.c1)) AND ((COUNT(*)))) END) ISNULL);
SELECT TOTAL((~ (UNLIKELY(DISTINCT rt0.c3)))) FROM rt1, vt0, rt0, vt1;
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE (((((CASE vt1.c3  WHEN vt1.c0 THEN vt1.c0 END)AND((((vt1.c2)) NOT BETWEEN ((vt1.c3)) AND ((vt1.c2))))))OR(((vt1.c0) ISNULL)))) UNION ALL SELECT * FROM vt1 WHERE ((NOT (((((CASE vt1.c3  WHEN vt1.c0 THEN vt1.c0 END)AND((((vt1.c2)) NOT BETWEEN ((vt1.c3)) AND ((vt1.c2))))))OR(((vt1.c0) ISNULL)))))) UNION ALL SELECT * FROM vt1 WHERE (((((((CASE vt1.c3  WHEN vt1.c0 THEN vt1.c0 END)AND((((vt1.c2)) NOT BETWEEN ((vt1.c3)) AND ((vt1.c2))))))OR(((vt1.c0) ISNULL)))) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM rt1, vt1;
SELECT DISTINCT * FROM rt1, vt1 WHERE ((((+ (vt1.c0))) NOT BETWEEN (((vt1.c1) ISNULL)) AND (NULL))) UNION SELECT DISTINCT * FROM rt1, vt1 WHERE ((NOT ((((+ (vt1.c0))) NOT BETWEEN (((vt1.c1) ISNULL)) AND (NULL))))) UNION SELECT DISTINCT * FROM rt1, vt1 NOT INDEXED WHERE ((((((+ (vt1.c0))) NOT BETWEEN (((vt1.c1) ISNULL)) AND (NULL))) ISNULL));
SELECT DISTINCT * FROM rt1, vt1;
SELECT ALL vt1.c1, vt1.c0, vt1.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON (((rt0.c0, x'', vt1.c3)) NOT BETWEEN ((((rt0.c3)OR(vt1.c0)), ((rt0.c2)GLOB(rt0.c1)), 1925035981)) AND ((((NULL) NOT NULL), 0xffffffffb0bad412, CASE vt1.c2  WHEN rt0.c3 THEN vt1.c2 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c3 THEN rt0.c3 END))) GROUP BY vt1.c1, vt1.c0, vt1.c2, rt0.c3, rt0.c1, rt0.c0;
SELECT vt1.c1, vt1.c0, vt1.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON (((rt0.c0, x'', vt1.c3)) NOT BETWEEN ((((rt0.c3)OR(vt1.c0)), ((rt0.c2)GLOB(rt0.c1)), 1925035981)) AND ((((NULL) NOT NULL), 0xffffffffb0bad412, CASE vt1.c2  WHEN rt0.c3 THEN vt1.c2 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c3 THEN rt0.c3 END))) WHERE (CASE WHEN CASE WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN vt1.c0 THEN vt1.c3 END THEN ((vt1.c3)>=(rt0.c1)) END) GROUP BY vt1.c1, vt1.c0, vt1.c2, rt0.c3, rt0.c1, rt0.c0 UNION SELECT vt1.c1, vt1.c0, vt1.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON (((rt0.c0, x'', vt1.c3)) NOT BETWEEN ((((rt0.c3)OR(vt1.c0)), ((rt0.c2)GLOB(rt0.c1)), 1925035981)) AND ((((NULL) NOT NULL), 0xffffffffb0bad412, CASE vt1.c2  WHEN rt0.c3 THEN vt1.c2 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c3 THEN rt0.c3 END))) WHERE ((NOT (CASE WHEN CASE WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN vt1.c0 THEN vt1.c3 END THEN ((vt1.c3)>=(rt0.c1)) END))) GROUP BY vt1.c1, vt1.c0, vt1.c2, rt0.c3, rt0.c1, rt0.c0 UNION SELECT ALL vt1.c1, vt1.c0, vt1.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON (((rt0.c0, x'', vt1.c3)) NOT BETWEEN ((((rt0.c3)OR(vt1.c0)), ((rt0.c2)GLOB(rt0.c1)), 1925035981)) AND ((((NULL) NOT NULL), 0Xffffffffb0bad412, CASE vt1.c2  WHEN rt0.c3 THEN vt1.c2 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c3 THEN rt0.c3 END))) WHERE (((CASE WHEN CASE WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN vt1.c0 THEN vt1.c3 END THEN ((vt1.c3)>=(rt0.c1)) END) ISNULL)) GROUP BY vt1.c1, vt1.c0, vt1.c2, rt0.c3, rt0.c1, rt0.c0;
SELECT ALL vt1.c1, vt1.c0, vt1.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON (((rt0.c0, x'', vt1.c3)) NOT BETWEEN ((((rt0.c3)OR(vt1.c0)), ((rt0.c2)GLOB(rt0.c1)), 1925035981)) AND ((((NULL) NOT NULL), 0xffffffffb0bad412, CASE vt1.c2  WHEN rt0.c3 THEN vt1.c2 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c3 THEN rt0.c3 END))) GROUP BY vt1.c1, vt1.c0, vt1.c2, rt0.c3, rt0.c1, rt0.c0;
SELECT ALL vt1.c3, vt1.c1, vt1.c0, vt1.c2 FROM vt1 GROUP BY vt1.c3, vt1.c1, vt1.c0, vt1.c2;
SELECT vt1.c3, vt1.c1, vt1.c0, vt1.c2 FROM vt1 GROUP BY vt1.c3, vt1.c1, vt1.c0, vt1.c2 HAVING GROUP_CONCAT(UPPER(DISTINCT SUM(vt1.c0))) UNION ALL SELECT vt1.c3, vt1.c1, vt1.c0, vt1.c2 FROM vt1 GROUP BY vt1.c3, vt1.c1, vt1.c0, vt1.c2 HAVING (NOT (GROUP_CONCAT(UPPER(DISTINCT SUM(vt1.c0))))) UNION ALL SELECT vt1.c3, vt1.c1, vt1.c0, vt1.c2 FROM vt1 NOT INDEXED GROUP BY vt1.c3, vt1.c1, vt1.c0, vt1.c2 HAVING ((GROUP_CONCAT(UPPER(DISTINCT SUM(vt1.c0)))) ISNULL);
SELECT ALL vt0.c0, vt1.c1, rt1.c1, rt0.c0, rt1.c2, rt0.c3, vt1.c2, rt0.c1, rt1.c0, vt1.c0 FROM vt0, vt1, rt1, rt0;
SELECT vt0.c0, vt1.c1, rt1.c1, rt0.c0, rt1.c2, rt0.c3, vt1.c2, rt0.c1, rt1.c0, vt1.c0 FROM vt0, vt1, rt1, rt0 WHERE (((vt1.c0)IS(CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt0.c1 THEN rt0.c1 WHEN vt1.c1 THEN vt1.c3 ELSE rt0.c1 END))) UNION ALL SELECT vt0.c0, vt1.c1, rt1.c1, rt0.c0, rt1.c2, rt0.c3, vt1.c2, rt0.c1, rt1.c0, vt1.c0 FROM vt0, vt1, rt1, rt0 WHERE ((NOT (((vt1.c0)IS(CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt0.c1 THEN rt0.c1 WHEN vt1.c1 THEN vt1.c3 ELSE rt0.c1 END))))) UNION ALL SELECT vt0.c0, vt1.c1, rt1.c1, rt0.c0, rt1.c2, rt0.c3, vt1.c2, rt0.c1, rt1.c0, vt1.c0 FROM vt0, vt1, rt1, rt0 WHERE (((((vt1.c0)IS(CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt0.c1 THEN rt0.c1 WHEN vt1.c1 THEN vt1.c3 ELSE rt0.c1 END))) ISNULL));
SELECT ALL vt0.c0, vt1.c1, rt1.c1, rt0.c0, rt1.c2, rt0.c3, vt1.c2, rt0.c1, rt1.c0, vt1.c0 FROM vt0, vt1, rt1, rt0;
SELECT DISTINCT rt1.c1, rt1.c2, rt1.c0 FROM rt1;
SELECT DISTINCT rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE (((NULL) NOT BETWEEN (NULL) AND (rt1.c2)) COLLATE BINARY) UNION SELECT DISTINCT rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE ((NOT (((NULL) NOT BETWEEN (NULL) AND (rt1.c2)) COLLATE BINARY))) UNION SELECT DISTINCT rt1.c1, rt1.c2, rt1.c0 FROM rt1 NOT INDEXED WHERE (((((NULL) NOT BETWEEN (NULL) AND (rt1.c2)) COLLATE BINARY) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c2, rt1.c0 FROM rt1;
SELECT ALL rt1.c1, rt0.c3, rt1.c2, vt1.c3, rt0.c1, vt1.c0, rt1.c0, vt1.c2, vt1.c1, rt0.c0 FROM rt0 FULL OUTER JOIN rt1 ON ((((rt1.c0, rt0.c3, '2074418697'))<((vt1.c0, vt1.c3, rt1.c0))) IN ()) INNER JOIN vt1 ON rt0.c0 GROUP BY rt1.c1, rt0.c3, rt1.c2, vt1.c3, rt0.c1, vt1.c0, rt1.c0, vt1.c2, vt1.c1, rt0.c0;
SELECT ALL rt1.c1, rt0.c3, rt1.c2, vt1.c3, rt0.c1, vt1.c0, rt1.c0, vt1.c2, vt1.c1, rt0.c0 FROM rt0 FULL OUTER JOIN rt1 ON ((((rt1.c0, rt0.c3, '2074418697'))<((vt1.c0, vt1.c3, rt1.c0))) IN ()) INNER JOIN vt1 ON rt0.c0 WHERE (((((((((((((((rt0.c3)OR(rt0.c0)))AND(rt0.c0)))OR(vt1.c1)))AND(rt0.c1)))AND('13974561')))AND(rt0.c3)))IS NOT(CASE vt1.c3  WHEN rt0.c2 THEN rt0.c1 ELSE vt1.c2 END))) GROUP BY rt1.c1, rt0.c3, rt1.c2, vt1.c3, rt0.c1, vt1.c0, rt1.c0, vt1.c2, vt1.c1, rt0.c0 UNION SELECT ALL rt1.c1, rt0.c3, rt1.c2, vt1.c3, rt0.c1, vt1.c0, rt1.c0, vt1.c2, vt1.c1, rt0.c0 FROM rt0 FULL OUTER JOIN rt1 ON ((((rt1.c0, rt0.c3, '2074418697'))<((vt1.c0, vt1.c3, rt1.c0))) IN ()) INNER JOIN vt1 ON rt0.c0 WHERE ((NOT (((((((((((((((rt0.c3)OR(rt0.c0)))AND(rt0.c0)))OR(vt1.c1)))AND(rt0.c1)))AND('13974561')))AND(rt0.c3)))IS NOT(CASE vt1.c3  WHEN rt0.c2 THEN rt0.c1 ELSE vt1.c2 END))))) GROUP BY rt1.c1, rt0.c3, rt1.c2, vt1.c3, rt0.c1, vt1.c0, rt1.c0, vt1.c2, vt1.c1, rt0.c0 UNION SELECT rt1.c1, rt0.c3, rt1.c2, vt1.c3, rt0.c1, vt1.c0, rt1.c0, vt1.c2, vt1.c1, rt0.c0 FROM rt0 FULL OUTER JOIN rt1 ON ((((rt1.c0, rt0.c3, '2074418697'))<((vt1.c0, vt1.c3, rt1.c0))) IN ()) INNER JOIN vt1 ON rt0.c0 WHERE (((((((((((((((((rt0.c3)OR(rt0.c0)))AND(rt0.c0)))OR(vt1.c1)))AND(rt0.c1)))AND('13974561')))AND(rt0.c3)))IS NOT(CASE vt1.c3  WHEN rt0.c2 THEN rt0.c1 ELSE vt1.c2 END))) ISNULL)) GROUP BY rt1.c1, rt0.c3, rt1.c2, vt1.c3, rt0.c1, vt1.c0, rt1.c0, vt1.c2, vt1.c1, rt0.c0;
SELECT ALL rt1.c1, rt0.c3, rt1.c2, vt1.c3, rt0.c1, vt1.c0, rt1.c0, vt1.c2, vt1.c1, rt0.c0 FROM rt0 FULL OUTER JOIN rt1 ON ((((rt1.c0, rt0.c3, '2074418697'))<((vt1.c0, vt1.c3, rt1.c0))) IN ()) INNER JOIN vt1 ON rt0.c0 GROUP BY rt1.c1, rt0.c3, rt1.c2, vt1.c3, rt0.c1, vt1.c0, rt1.c0, vt1.c2, vt1.c1, rt0.c0;
SELECT ALL rt1.c0, rt0.c2, rt0.c0, vt0.c0, rt1.c2, vt1.c1, vt1.c3, vt1.c2, rt0.c1, rt0.c3, vt1.c0 FROM vt0, rt0, rt1, vt1 GROUP BY rt1.c0, rt0.c2, rt0.c0, vt0.c0, rt1.c2, vt1.c1, vt1.c3, vt1.c2, rt0.c1, rt0.c3, vt1.c0;
SELECT ALL rt1.c0, rt0.c2, rt0.c0, vt0.c0, rt1.c2, vt1.c1, vt1.c3, vt1.c2, rt0.c1, rt0.c3, vt1.c0 FROM vt0, rt0, rt1, vt1 GROUP BY rt1.c0, rt0.c2, rt0.c0, vt0.c0, rt1.c2, vt1.c1, vt1.c3, vt1.c2, rt0.c1, rt0.c3, vt1.c0 HAVING 0.7216951600316174 UNION ALL SELECT rt1.c0, rt0.c2, rt0.c0, vt0.c0, rt1.c2, vt1.c1, vt1.c3, vt1.c2, rt0.c1, rt0.c3, vt1.c0 FROM vt0, rt0, rt1, vt1 GROUP BY rt1.c0, rt0.c2, rt0.c0, vt0.c0, rt1.c2, vt1.c1, vt1.c3, vt1.c2, rt0.c1, rt0.c3, vt1.c0 HAVING (NOT (0.7216951600316174)) UNION ALL SELECT ALL rt1.c0, rt0.c2, rt0.c0, vt0.c0, rt1.c2, vt1.c1, vt1.c3, vt1.c2, rt0.c1, rt0.c3, vt1.c0 FROM vt0, rt0, rt1, vt1 GROUP BY rt1.c0, rt0.c2, rt0.c0, vt0.c0, rt1.c2, vt1.c1, vt1.c3, vt1.c2, rt0.c1, rt0.c3, vt1.c0 HAVING ((0.7216951600316174) ISNULL);
SELECT ALL rt1.c0, rt0.c2, rt0.c0, vt0.c0, rt1.c2, vt1.c1, vt1.c3, vt1.c2, rt0.c1, rt0.c3, vt1.c0 FROM vt0, rt0, rt1, vt1 GROUP BY rt1.c0, rt0.c2, rt0.c0, vt0.c0, rt1.c2, vt1.c1, vt1.c3, vt1.c2, rt0.c1, rt0.c3, vt1.c0;
SELECT ALL rt1.c0, rt0.c2, rt0.c0, vt0.c0, rt1.c2, vt1.c1, vt1.c3, vt1.c2, rt0.c1, rt0.c3, vt1.c0 FROM vt0, rt0, rt1, vt1 GROUP BY rt1.c0, rt0.c2, rt0.c0, vt0.c0, rt1.c2, vt1.c1, vt1.c3, vt1.c2, rt0.c1, rt0.c3, vt1.c0 HAVING 0.7216951600316174 UNION ALL SELECT rt1.c0, rt0.c2, rt0.c0, vt0.c0, rt1.c2, vt1.c1, vt1.c3, vt1.c2, rt0.c1, rt0.c3, vt1.c0 FROM vt0, rt0, rt1, vt1 GROUP BY rt1.c0, rt0.c2, rt0.c0, vt0.c0, rt1.c2, vt1.c1, vt1.c3, vt1.c2, rt0.c1, rt0.c3, vt1.c0 HAVING (NOT (0.7216951600316174)) UNION ALL SELECT ALL rt1.c0, rt0.c2, rt0.c0, vt0.c0, rt1.c2, vt1.c1, vt1.c3, vt1.c2, rt0.c1, rt0.c3, vt1.c0 FROM vt0, rt0, rt1, vt1 GROUP BY rt1.c0, rt0.c2, rt0.c0, vt0.c0, rt1.c2, vt1.c1, vt1.c3, vt1.c2, rt0.c1, rt0.c3, vt1.c0 HAVING ((0.7216951600316174) ISNULL);
SELECT ALL rt1.c0, rt0.c2, rt0.c0, vt0.c0, rt1.c2, vt1.c1, vt1.c3, vt1.c2, rt0.c1, rt0.c3, vt1.c0 FROM vt0, rt0, rt1, vt1 GROUP BY rt1.c0, rt0.c2, rt0.c0, vt0.c0, rt1.c2, vt1.c1, vt1.c3, vt1.c2, rt0.c1, rt0.c3, vt1.c0;
SELECT * FROM vt0, rt1, rt0, vt1;
SELECT * FROM vt0, rt1, rt0, vt1 WHERE ((((((((rt1.c0, vt1.c2, x''))<=((0.2461564376755373, rt0.c3, rt1.c0))))OR((+ (vt1.c0)))))AND((NOT (vt1.c3))))) UNION ALL SELECT ALL * FROM vt0, rt1, rt0, vt1 WHERE ((NOT ((((((((rt1.c0, vt1.c2, x''))<=((0.2461564376755373, rt0.c3, rt1.c0))))OR((+ (vt1.c0)))))AND((NOT (vt1.c3))))))) UNION ALL SELECT * FROM vt0, rt1, rt0, vt1 WHERE ((((((((((rt1.c0, vt1.c2, x''))<=((0.2461564376755373, rt0.c3, rt1.c0))))OR((+ (vt1.c0)))))AND((NOT (vt1.c3))))) ISNULL));
SELECT * FROM vt0, rt1, rt0, vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (CASE CAST(vt1.c0 AS NUMERIC)  WHEN ((vt1.c2) NOT BETWEEN (vt1.c0) AND (vt1.c1)) THEN 'H붡65' END) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (CASE CAST(vt1.c0 AS NUMERIC)  WHEN ((vt1.c2) NOT BETWEEN (vt1.c0) AND (vt1.c1)) THEN 'H붡65' END))) UNION SELECT DISTINCT * FROM vt1 WHERE (((CASE CAST(vt1.c0 AS NUMERIC)  WHEN ((vt1.c2) NOT BETWEEN (vt1.c0) AND (vt1.c1)) THEN 'H붡65' END) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL rt0.c3, vt0.c0, rt0.c0, rt0.c1 FROM rt0 RIGHT OUTER JOIN vt0 ON (((vt1.c2, vt1.c3, rt0.c2)) NOT BETWEEN ((((vt1.c3) NOT NULL), CAST(rt0.c3 AS INTEGER), ((((rt0.c0)AND(rt0.c2)))AND(vt0.c0)))) AND ((((((rt0.c0)OR(vt1.c0)))AND(rt0.c2)), vt1.c2 COLLATE NOCASE, rt0.c2 COLLATE NOCASE))) INNER JOIN vt1 ON rt0.c0 GROUP BY rt0.c3, vt0.c0, rt0.c0, rt0.c1;
SELECT ALL vt1.c3, rt0.c2 FROM vt0, vt1, rt0 GROUP BY vt1.c3, rt0.c2;
SELECT ALL vt1.c3, rt0.c2 FROM vt0, vt1, rt0 GROUP BY vt1.c3, rt0.c2 HAVING AVG(((vt1.c2) ISNULL)) UNION ALL SELECT vt1.c3, rt0.c2 FROM vt0, vt1, rt0 GROUP BY vt1.c3, rt0.c2 HAVING (NOT (AVG(((vt1.c2) ISNULL)))) UNION ALL SELECT vt1.c3, rt0.c2 FROM vt0, vt1, rt0 GROUP BY vt1.c3, rt0.c2 HAVING ((AVG(((vt1.c2) ISNULL))) ISNULL);
SELECT ALL vt1.c3, rt0.c2 FROM vt0, vt1, rt0 GROUP BY vt1.c3, rt0.c2;
SELECT ALL vt1.c3, rt0.c2 FROM vt0, vt1, rt0 GROUP BY vt1.c3, rt0.c2 HAVING AVG(((vt1.c2) ISNULL)) UNION ALL SELECT vt1.c3, rt0.c2 FROM vt0, vt1, rt0 GROUP BY vt1.c3, rt0.c2 HAVING (NOT (AVG(((vt1.c2) ISNULL)))) UNION ALL SELECT vt1.c3, rt0.c2 FROM vt0, vt1, rt0 GROUP BY vt1.c3, rt0.c2 HAVING ((AVG(((vt1.c2) ISNULL))) ISNULL);
SELECT ALL vt1.c3, rt0.c2 FROM vt0, vt1, rt0 GROUP BY vt1.c3, rt0.c2;
SELECT ALL rt1.c1, rt1.c2 FROM rt1, vt0;
SELECT rt1.c1, rt1.c2 FROM rt1, vt0 WHERE (((((rt1.c0) IS TRUE)) NOT NULL)) UNION ALL SELECT rt1.c1, rt1.c2 FROM rt1 NOT INDEXED, vt0 WHERE ((NOT (((((rt1.c0) IS TRUE)) NOT NULL)))) UNION ALL SELECT ALL rt1.c1, rt1.c2 FROM rt1, vt0 WHERE (((((((rt1.c0) IS TRUE)) NOT NULL)) ISNULL));
SELECT ALL rt1.c1, rt1.c2 FROM rt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 FULL OUTER JOIN rt0 ON (((vt1.c3, rt0.c0, vt0.c0)) NOT BETWEEN ((rt1.c0, -1.726132508E9, vt1.c3)) AND ((vt1.c0, rt1.c0, vt1.c3))) COLLATE BINARY INNER JOIN rt1 ON LIKELY((((rt0.c0)) BETWEEN ((rt1.c1)) AND ((rt0.c0))));
SELECT vt1.c2, vt1.c1 FROM vt1 GROUP BY vt1.c2, vt1.c1;
SELECT vt1.c2, vt1.c1 FROM vt1 WHERE (((((((((((vt1.c1)AND(0.49908887786186606)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))) IS FALSE)) GROUP BY vt1.c2, vt1.c1 UNION SELECT ALL vt1.c2, vt1.c1 FROM vt1 WHERE ((NOT (((((((((((vt1.c1)AND(0.49908887786186606)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))) IS FALSE)))) GROUP BY vt1.c2, vt1.c1 UNION SELECT vt1.c2, vt1.c1 FROM vt1 WHERE (((((((((((((vt1.c1)AND(0.49908887786186606)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))) IS FALSE)) ISNULL)) GROUP BY vt1.c2, vt1.c1;
SELECT vt1.c2, vt1.c1 FROM vt1 GROUP BY vt1.c2, vt1.c1;
SELECT rt0.c1, vt1.c1, vt1.c0, rt1.c0, vt1.c2 FROM rt1 CROSS JOIN rt0 ON vt1.c1 INNER JOIN vt1 ON (((vt1.c1) NOT NULL) IN (((rt0.c2) BETWEEN (rt0.c0) AND (vt1.c3)))) GROUP BY rt0.c1, vt1.c1, vt1.c0, rt1.c0, vt1.c2;
SELECT ALL rt0.c1, vt1.c1, vt1.c0, rt1.c0, vt1.c2 FROM rt1 CROSS JOIN rt0 ON vt1.c1 INNER JOIN vt1 ON (((vt1.c1) NOT NULL) IN (((rt0.c2) BETWEEN (rt0.c0) AND (vt1.c3)))) GROUP BY rt0.c1, vt1.c1, vt1.c0, rt1.c0, vt1.c2 HAVING json_array_length(SUM(rt0.c2), CAST(vt1.c2 AS NUMERIC)) UNION ALL SELECT rt0.c1, vt1.c1, vt1.c0, rt1.c0, vt1.c2 FROM rt1 CROSS JOIN rt0 ON vt1.c1 INNER JOIN vt1 ON (((vt1.c1) NOT NULL) IN (((rt0.c2) BETWEEN (rt0.c0) AND (vt1.c3)))) GROUP BY rt0.c1, vt1.c1, vt1.c0, rt1.c0, vt1.c2 HAVING (NOT (json_array_length(SUM(rt0.c2), CAST(vt1.c2 AS NUMERIC)))) UNION ALL SELECT rt0.c1, vt1.c1, vt1.c0, rt1.c0, vt1.c2 FROM rt1 CROSS JOIN rt0 ON vt1.c1 INNER JOIN vt1 ON (((vt1.c1) NOT NULL) IN (((rt0.c2) BETWEEN (rt0.c0) AND (vt1.c3)))) GROUP BY rt0.c1, vt1.c1, vt1.c0, rt1.c0, vt1.c2 HAVING ((json_array_length(SUM(rt0.c2), CAST(vt1.c2 AS NUMERIC))) ISNULL);
SELECT rt0.c1, vt1.c1, vt1.c0, rt1.c0, vt1.c2 FROM rt1 CROSS JOIN rt0 ON vt1.c1 INNER JOIN vt1 ON (((vt1.c1) NOT NULL) IN (((rt0.c2) BETWEEN (rt0.c0) AND (vt1.c3)))) GROUP BY rt0.c1, vt1.c1, vt1.c0, rt1.c0, vt1.c2;
SELECT ALL rt0.c1, vt1.c1, vt1.c0, rt1.c0, vt1.c2 FROM rt1 CROSS JOIN rt0 ON vt1.c1 INNER JOIN vt1 ON (((vt1.c1) NOT NULL) IN (((rt0.c2) BETWEEN (rt0.c0) AND (vt1.c3)))) GROUP BY rt0.c1, vt1.c1, vt1.c0, rt1.c0, vt1.c2 HAVING json_array_length(SUM(rt0.c2), CAST(vt1.c2 AS NUMERIC)) UNION ALL SELECT rt0.c1, vt1.c1, vt1.c0, rt1.c0, vt1.c2 FROM rt1 CROSS JOIN rt0 ON vt1.c1 INNER JOIN vt1 ON (((vt1.c1) NOT NULL) IN (((rt0.c2) BETWEEN (rt0.c0) AND (vt1.c3)))) GROUP BY rt0.c1, vt1.c1, vt1.c0, rt1.c0, vt1.c2 HAVING (NOT (json_array_length(SUM(rt0.c2), CAST(vt1.c2 AS NUMERIC)))) UNION ALL SELECT rt0.c1, vt1.c1, vt1.c0, rt1.c0, vt1.c2 FROM rt1 CROSS JOIN rt0 ON vt1.c1 INNER JOIN vt1 ON (((vt1.c1) NOT NULL) IN (((rt0.c2) BETWEEN (rt0.c0) AND (vt1.c3)))) GROUP BY rt0.c1, vt1.c1, vt1.c0, rt1.c0, vt1.c2 HAVING ((json_array_length(SUM(rt0.c2), CAST(vt1.c2 AS NUMERIC))) ISNULL);
SELECT rt0.c1, vt1.c1, vt1.c0, rt1.c0, vt1.c2 FROM rt1 CROSS JOIN rt0 ON vt1.c1 INNER JOIN vt1 ON (((vt1.c1) NOT NULL) IN (((rt0.c2) BETWEEN (rt0.c0) AND (vt1.c3)))) GROUP BY rt0.c1, vt1.c1, vt1.c0, rt1.c0, vt1.c2;
SELECT rt0.c3 FROM rt0;
SELECT ALL rt0.c3 FROM rt0 WHERE ((((((((rt0.c1))>=((rt0.c1))))AND(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))))OR(3.88809692E8))) UNION ALL SELECT ALL rt0.c3 FROM rt0 WHERE ((NOT ((((((((rt0.c1))>=((rt0.c1))))AND(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))))OR(3.88809692E8))))) UNION ALL SELECT rt0.c3 FROM rt0 WHERE ((((((((((rt0.c1))>=((rt0.c1))))AND(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))))OR(3.88809692E8))) ISNULL));
SELECT rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0 WHERE (x'317e5f0d') UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0 WHERE ((NOT (x'317e5f0d'))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0 WHERE (((x'317e5f0d') ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0;
SELECT rt0.c2 FROM rt0, vt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0, vt0 WHERE (COALESCE(DISTINCT CHAR(NULL, rt0.c0, rt0.c0), (~ (vt0.c0)))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0, vt0 WHERE ((NOT (COALESCE(DISTINCT CHAR(NULL, rt0.c0, rt0.c0), (~ (vt0.c0)))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0, vt0 WHERE (((COALESCE(DISTINCT CHAR(NULL, rt0.c0, rt0.c0), (~ (vt0.c0)))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, vt0 GROUP BY rt0.c2;
SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING COUNT(MAX(TOTAL(rt1.c2))) UNION ALL SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING (NOT (COUNT(MAX(TOTAL(rt1.c2))))) UNION ALL SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING ((COUNT(MAX(TOTAL(rt1.c2)))) ISNULL);
SELECT rt0.c0, rt0.c3 FROM rt0;
SELECT rt0.c0, rt0.c3 FROM rt0 WHERE ((((rt0.c3, rt0.c3, rt0.c3))<((rt0.c3, rt0.c3, rt0.c0))) COLLATE BINARY) UNION ALL SELECT ALL rt0.c0, rt0.c3 FROM rt0 WHERE ((NOT ((((rt0.c3, rt0.c3, rt0.c3))<((rt0.c3, rt0.c3, rt0.c0))) COLLATE BINARY))) UNION ALL SELECT ALL rt0.c0, rt0.c3 FROM rt0 WHERE ((((((rt0.c3, rt0.c3, rt0.c3))<((rt0.c3, rt0.c3, rt0.c0))) COLLATE BINARY) ISNULL));
SELECT rt0.c0, rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c0 FROM vt1, vt0, rt0;
SELECT DISTINCT rt0.c0 FROM vt1, vt0, rt0 WHERE ((((NOT (rt0.c0)))+(CAST(rt0.c3 AS INTEGER)))) UNION SELECT DISTINCT rt0.c0 FROM vt1, vt0, rt0 WHERE ((NOT ((((NOT (rt0.c0)))+(CAST(rt0.c3 AS INTEGER)))))) UNION SELECT DISTINCT rt0.c0 FROM vt1, vt0, rt0 WHERE ((((((NOT (rt0.c0)))+(CAST(rt0.c3 AS INTEGER)))) ISNULL));
SELECT DISTINCT rt0.c0 FROM vt1, vt0, rt0;
SELECT rt1.c1, vt1.c2, vt1.c3, rt1.c2 FROM vt0, vt1, rt1 GROUP BY rt1.c1, vt1.c2, vt1.c3, rt1.c2;
SELECT ALL rt1.c1, vt1.c2, vt1.c3, rt1.c2 FROM vt0, vt1, rt1 WHERE (((((((vt1.c2)AND(rt1.c2)))AND(vt1.c2))) IS TRUE)) GROUP BY rt1.c1, vt1.c2, vt1.c3, rt1.c2 UNION SELECT rt1.c1, vt1.c2, vt1.c3, rt1.c2 FROM vt0, vt1, rt1 WHERE ((NOT (((((((vt1.c2)AND(rt1.c2)))AND(vt1.c2))) IS TRUE)))) GROUP BY rt1.c1, vt1.c2, vt1.c3, rt1.c2 UNION SELECT ALL rt1.c1, vt1.c2, vt1.c3, rt1.c2 FROM vt0, vt1, rt1 WHERE (((((((((vt1.c2)AND(rt1.c2)))AND(vt1.c2))) IS TRUE)) ISNULL)) GROUP BY rt1.c1, vt1.c2, vt1.c3, rt1.c2;
SELECT rt1.c1, vt1.c2, vt1.c3, rt1.c2 FROM vt0, vt1, rt1 GROUP BY rt1.c1, vt1.c2, vt1.c3, rt1.c2;
SELECT rt1.c2, rt1.c0, rt1.c1, rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM vt0, rt1, rt0 GROUP BY rt1.c2, rt1.c0, rt1.c1, rt0.c2, rt0.c1, rt0.c0, rt0.c3;
SELECT rt1.c2, rt1.c0, rt1.c1, rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM vt0, rt1, rt0 GROUP BY rt1.c2, rt1.c0, rt1.c1, rt0.c2, rt0.c1, rt0.c0, rt0.c3 HAVING MIN(NULL) UNION ALL SELECT ALL rt1.c2, rt1.c0, rt1.c1, rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM vt0, rt1, rt0 GROUP BY rt1.c2, rt1.c0, rt1.c1, rt0.c2, rt0.c1, rt0.c0, rt0.c3 HAVING (NOT (MIN(NULL))) UNION ALL SELECT rt1.c2, rt1.c0, rt1.c1, rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM vt0, rt1, rt0 GROUP BY rt1.c2, rt1.c0, rt1.c1, rt0.c2, rt0.c1, rt0.c0, rt0.c3 HAVING ((MIN(NULL)) ISNULL);
SELECT rt1.c2, rt1.c0, rt1.c1, rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM vt0, rt1, rt0 GROUP BY rt1.c2, rt1.c0, rt1.c1, rt0.c2, rt0.c1, rt0.c0, rt0.c3;
SELECT rt1.c2, rt1.c0, rt1.c1, rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM vt0, rt1, rt0 GROUP BY rt1.c2, rt1.c0, rt1.c1, rt0.c2, rt0.c1, rt0.c0, rt0.c3 HAVING MIN(NULL) UNION ALL SELECT ALL rt1.c2, rt1.c0, rt1.c1, rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM vt0, rt1, rt0 GROUP BY rt1.c2, rt1.c0, rt1.c1, rt0.c2, rt0.c1, rt0.c0, rt0.c3 HAVING (NOT (MIN(NULL))) UNION ALL SELECT rt1.c2, rt1.c0, rt1.c1, rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM vt0, rt1, rt0 GROUP BY rt1.c2, rt1.c0, rt1.c1, rt0.c2, rt0.c1, rt0.c0, rt0.c3 HAVING ((MIN(NULL)) ISNULL);
SELECT rt1.c2, rt1.c0, rt1.c1, rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM vt0, rt1, rt0 GROUP BY rt1.c2, rt1.c0, rt1.c1, rt0.c2, rt0.c1, rt0.c0, rt0.c3;
SELECT ALL rt0.c3, vt0.c0, vt1.c0 FROM vt1, rt0, vt0;
SELECT rt0.c3, vt0.c0, vt1.c0 FROM vt1, rt0, vt0 WHERE (((((rt0.c0) BETWEEN (rt0.c0) AND (vt1.c0))) IS TRUE)) UNION ALL SELECT rt0.c3, vt0.c0, vt1.c0 FROM vt1, rt0, vt0 WHERE ((NOT (((((rt0.c0) BETWEEN (rt0.c0) AND (vt1.c0))) IS TRUE)))) UNION ALL SELECT ALL rt0.c3, vt0.c0, vt1.c0 FROM vt1, rt0, vt0 WHERE (((((((rt0.c0) BETWEEN (rt0.c0) AND (vt1.c0))) IS TRUE)) ISNULL));
SELECT ALL rt0.c3, vt0.c0, vt1.c0 FROM vt1, rt0, vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c0)>>(0.8204287503632675))) NOT NULL)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c0)>>(0.8204287503632675))) NOT NULL)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c0)>>(0.8204287503632675))) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2, rt0.c3, rt0.c0, rt1.c1 FROM vt1, rt0 FULL OUTER JOIN vt0 ON (COALESCE(DISTINCT vt1.c2, vt1.c1, vt0.c0, rt0.c0) IN (CAST(rt0.c3 AS TEXT), CASE WHEN rt1.c0 THEN vt0.c0 WHEN 0.4707880229289564 THEN rt1.c1 WHEN rt0.c2 THEN vt1.c3 END)) RIGHT OUTER JOIN rt1 ON ((((vt1.c1)OR(rt0.c0)))OR(rt0.c3)) COLLATE BINARY GROUP BY rt0.c2, rt0.c3, rt0.c0, rt1.c1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CASE CAST(vt0.c0 AS NUMERIC)  WHEN SUM(GROUP_CONCAT(vt0.c0)) THEN ((TOTAL(vt0.c0))GLOB(COUNT(*))) ELSE SUM(vt0.c0) END UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CASE CAST(vt0.c0 AS NUMERIC)  WHEN SUM(GROUP_CONCAT(vt0.c0)) THEN ((TOTAL(vt0.c0))GLOB(COUNT(*))) ELSE SUM(vt0.c0) END)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CASE CAST(vt0.c0 AS NUMERIC)  WHEN SUM(GROUP_CONCAT(vt0.c0)) THEN ((TOTAL(vt0.c0))GLOB(COUNT(*))) ELSE SUM(vt0.c0) END) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (NULL COLLATE BINARY) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (NULL COLLATE BINARY))) UNION ALL SELECT * FROM rt0 WHERE (((NULL COLLATE BINARY) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM vt1 CROSS JOIN rt0 ON (rt1.c2 COLLATE RTRIM IN (CASE vt1.c1  WHEN rt0.c2 THEN '2054894138' WHEN vt1.c0 THEN rt0.c1 WHEN 0.579533291309482 THEN rt1.c2 ELSE rt1.c2 END)) LEFT OUTER JOIN rt1 ON ((((rt0.c1)IS NOT(rt1.c2)))GLOB(0.6988725177067256));
SELECT DISTINCT * FROM vt1 CROSS JOIN rt0 ON (rt1.c2 COLLATE RTRIM IN (CASE vt1.c1  WHEN rt0.c2 THEN '2054894138' WHEN vt1.c0 THEN rt0.c1 WHEN 0.579533291309482 THEN rt1.c2 ELSE rt1.c2 END)) LEFT OUTER JOIN rt1 ON ((((rt0.c1)IS NOT(rt1.c2)))GLOB(0.6988725177067256)) WHERE (((((((rt0.c2)%(rt0.c0)))AND((((rt0.c2))<=((rt1.c0))))))OR(0x3558181f))) UNION SELECT DISTINCT * FROM vt1 CROSS JOIN rt0 ON (rt1.c2 COLLATE RTRIM IN (CASE vt1.c1  WHEN rt0.c2 THEN '2054894138' WHEN vt1.c0 THEN rt0.c1 WHEN 0.579533291309482 THEN rt1.c2 ELSE rt1.c2 END)) LEFT OUTER JOIN rt1 ON ((((rt0.c1)IS NOT(rt1.c2)))GLOB(0.6988725177067256)) WHERE ((NOT (((((((rt0.c2)%(rt0.c0)))AND((((rt0.c2))<=((rt1.c0))))))OR(0x3558181f))))) UNION SELECT DISTINCT * FROM vt1 CROSS JOIN rt0 ON (rt1.c2 COLLATE RTRIM IN (CASE vt1.c1  WHEN rt0.c2 THEN '2054894138' WHEN vt1.c0 THEN rt0.c1 WHEN 0.579533291309482 THEN rt1.c2 ELSE rt1.c2 END)) LEFT OUTER JOIN rt1 ON ((((rt0.c1)IS NOT(rt1.c2)))GLOB(0.6988725177067256)) WHERE (((((((((rt0.c2)%(rt0.c0)))AND((((rt0.c2))<=((rt1.c0))))))OR(0x3558181f))) ISNULL));
SELECT DISTINCT * FROM vt1 CROSS JOIN rt0 ON (rt1.c2 COLLATE RTRIM IN (CASE vt1.c1  WHEN rt0.c2 THEN '2054894138' WHEN vt1.c0 THEN rt0.c1 WHEN 0.579533291309482 THEN rt1.c2 ELSE rt1.c2 END)) LEFT OUTER JOIN rt1 ON ((((rt0.c1)IS NOT(rt1.c2)))GLOB(0.6988725177067256));
SELECT ALL rt0.c3 FROM rt1, rt0, vt0 GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt1, rt0, vt0 WHERE ((((((rt1.c0)<=(rt0.c2)), ((rt0.c0) IS FALSE), ((((rt1.c2)OR(rt1.c1)))OR('-1606677300')), CAST(rt1.c0 AS BLOB), ((((rt1.c1)OR(rt1.c0)))AND(rt1.c0)), (- (rt0.c2)), rt1.c2))>((((((rt0.c2)AND(rt1.c2)))AND(vt0.c0)), 'b', HEX(rt1.c1), ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt1.c2)), ((rt0.c1)|(rt0.c0)), ((rt1.c1) IS TRUE), ('-782269708' IN (rt0.c3)))))) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM rt1, rt0, vt0 WHERE ((NOT ((((((rt1.c0)<=(rt0.c2)), ((rt0.c0) IS FALSE), ((((rt1.c2)OR(rt1.c1)))OR('-1606677300')), CAST(rt1.c0 AS BLOB), ((((rt1.c1)OR(rt1.c0)))AND(rt1.c0)), (- (rt0.c2)), rt1.c2))>((((((rt0.c2)AND(rt1.c2)))AND(vt0.c0)), 'b', HEX(rt1.c1), ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt1.c2)), ((rt0.c1)|(rt0.c0)), ((rt1.c1) IS TRUE), ('-782269708' IN (rt0.c3)))))))) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM rt1, rt0, vt0 WHERE ((((((((rt1.c0)<=(rt0.c2)), ((rt0.c0) IS FALSE), ((((rt1.c2)OR(rt1.c1)))OR('-1606677300')), CAST(rt1.c0 AS BLOB), ((((rt1.c1)OR(rt1.c0)))AND(rt1.c0)), (- (rt0.c2)), rt1.c2))>((((((rt0.c2)AND(rt1.c2)))AND(vt0.c0)), 'b', HEX(rt1.c1), ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt1.c2)), ((rt0.c1)|(rt0.c0)), ((rt1.c1) IS TRUE), ('-782269708' IN (rt0.c3)))))) ISNULL)) GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt1, rt0, vt0 GROUP BY rt0.c3;
SELECT ALL vt1.c0, vt1.c2, vt1.c3 FROM vt1 GROUP BY vt1.c0, vt1.c2, vt1.c3;
SELECT vt1.c0, vt1.c2, vt1.c3 FROM vt1 GROUP BY vt1.c0, vt1.c2, vt1.c3 HAVING GROUP_CONCAT((+ (MIN(vt1.c3)))) UNION ALL SELECT ALL vt1.c0, vt1.c2, vt1.c3 FROM vt1 GROUP BY vt1.c0, vt1.c2, vt1.c3 HAVING (NOT (GROUP_CONCAT((+ (MIN(vt1.c3)))))) UNION ALL SELECT ALL vt1.c0, vt1.c2, vt1.c3 FROM vt1 GROUP BY vt1.c0, vt1.c2, vt1.c3 HAVING ((GROUP_CONCAT((+ (MIN(vt1.c3))))) ISNULL);
SELECT MIN(((((rt1.c0)) NOT BETWEEN (('')) AND ((rt1.c1))) IN (rt1.c1))) FROM rt1;
SELECT * FROM rt1, vt0;
SELECT * FROM rt1, vt0 WHERE (CASE CAST(vt0.c0 AS BLOB)  WHEN rt1.c0 COLLATE BINARY THEN rt1.c2 ELSE (- (rt1.c0)) END) UNION ALL SELECT * FROM rt1, vt0 WHERE ((NOT (CASE CAST(vt0.c0 AS BLOB)  WHEN rt1.c0 COLLATE BINARY THEN rt1.c2 ELSE (- (rt1.c0)) END))) UNION ALL SELECT ALL * FROM rt1, vt0 WHERE (((CASE CAST(vt0.c0 AS BLOB)  WHEN rt1.c0 COLLATE BINARY THEN rt1.c2 ELSE (- (rt1.c0)) END) ISNULL));
SELECT * FROM rt1, vt0;
SELECT DISTINCT vt1.c2, rt1.c0, rt1.c2, rt0.c2 FROM rt0 CROSS JOIN rt1 ON rt1.c0 LEFT OUTER JOIN vt0 ON ((((rt0.c1)OR(vt0.c0)))AND(((rt0.c0) NOT NULL))) LEFT OUTER JOIN vt1 ON rt0.c0;
SELECT DISTINCT vt1.c2, rt1.c0, rt1.c2, rt0.c2 FROM rt0 CROSS JOIN rt1 ON rt1.c0 LEFT OUTER JOIN vt0 ON ((((rt0.c1)OR(vt0.c0)))AND(((rt0.c0) NOT NULL))) LEFT OUTER JOIN vt1 ON rt0.c0 WHERE ('>멉') UNION SELECT DISTINCT vt1.c2, rt1.c0, rt1.c2, rt0.c2 FROM rt0 CROSS JOIN rt1 ON rt1.c0 LEFT OUTER JOIN vt0 ON ((((rt0.c1)OR(vt0.c0)))AND(((rt0.c0) NOT NULL))) LEFT OUTER JOIN vt1 ON rt0.c0 WHERE ((NOT ('>멉'))) UNION SELECT DISTINCT vt1.c2, rt1.c0, rt1.c2, rt0.c2 FROM rt0 CROSS JOIN rt1 ON rt1.c0 LEFT OUTER JOIN vt0 ON ((((rt0.c1)OR(vt0.c0)))AND(((rt0.c0) NOT NULL))) LEFT OUTER JOIN vt1 ON rt0.c0 WHERE ((('>멉') ISNULL));
SELECT DISTINCT vt1.c2, rt1.c0, rt1.c2, rt0.c2 FROM rt0 CROSS JOIN rt1 ON rt1.c0 LEFT OUTER JOIN vt0 ON ((((rt0.c1)OR(vt0.c0)))AND(((rt0.c0) NOT NULL))) LEFT OUTER JOIN vt1 ON rt0.c0;
SELECT ALL vt1.c3, vt1.c2, rt0.c3, rt0.c2, vt1.c0, vt1.c1, vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0, vt1 GROUP BY vt1.c3, vt1.c2, rt0.c3, rt0.c2, vt1.c0, vt1.c1, vt0.c0, rt0.c1, rt0.c0;
SELECT ALL vt1.c3, vt1.c2, rt0.c3, rt0.c2, vt1.c0, vt1.c1, vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0, vt1 WHERE ((('+VF')%(vt1.c3)) COLLATE RTRIM) GROUP BY vt1.c3, vt1.c2, rt0.c3, rt0.c2, vt1.c0, vt1.c1, vt0.c0, rt0.c1, rt0.c0 UNION SELECT vt1.c3, vt1.c2, rt0.c3, rt0.c2, vt1.c0, vt1.c1, vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0, vt1 NOT INDEXED WHERE ((NOT ((('+VF')%(vt1.c3)) COLLATE RTRIM))) GROUP BY vt1.c3, vt1.c2, rt0.c3, rt0.c2, vt1.c0, vt1.c1, vt0.c0, rt0.c1, rt0.c0 UNION SELECT ALL vt1.c3, vt1.c2, rt0.c3, rt0.c2, vt1.c0, vt1.c1, vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0, vt1 WHERE ((((('+VF')%(vt1.c3)) COLLATE RTRIM) ISNULL)) GROUP BY vt1.c3, vt1.c2, rt0.c3, rt0.c2, vt1.c0, vt1.c1, vt0.c0, rt0.c1, rt0.c0;
SELECT ALL vt1.c3, vt1.c2, rt0.c3, rt0.c2, vt1.c0, vt1.c1, vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0, vt1 GROUP BY vt1.c3, vt1.c2, rt0.c3, rt0.c2, vt1.c0, vt1.c1, vt0.c0, rt0.c1, rt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT(SUM(vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(SUM(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(SUM(vt0.c0))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CHANGES() COLLATE RTRIM) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CHANGES() COLLATE RTRIM))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((CHANGES() COLLATE RTRIM) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM rt1, vt0 RIGHT OUTER JOIN rt0 ON (((((rt0.c0))<((rt1.c1)))) BETWEEN ((NOT (rt0.c3))) AND (((((((((rt0.c1)OR(rt1.c2)))AND(vt0.c0)))OR(rt0.c2)))OR(rt0.c2))));
SELECT DISTINCT * FROM rt1, vt0 RIGHT OUTER JOIN rt0 ON (((((rt0.c0))<((rt1.c1)))) BETWEEN ((NOT (rt0.c3))) AND (((((((((rt0.c1)OR(rt1.c2)))AND(vt0.c0)))OR(rt0.c2)))OR(rt0.c2)))) WHERE ((((((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c3))))<((rt1.c2)))) UNION SELECT DISTINCT * FROM rt1, vt0 RIGHT OUTER JOIN rt0 ON (((((rt0.c0))<((rt1.c1)))) BETWEEN ((NOT (rt0.c3))) AND (((((((((rt0.c1)OR(rt1.c2)))AND(vt0.c0)))OR(rt0.c2)))OR(rt0.c2)))) WHERE ((NOT ((((((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c3))))<((rt1.c2)))))) UNION SELECT DISTINCT * FROM rt1, vt0 RIGHT OUTER JOIN rt0 ON (((((rt0.c0))<((rt1.c1)))) BETWEEN ((NOT (rt0.c3))) AND (((((((((rt0.c1)OR(rt1.c2)))AND(vt0.c0)))OR(rt0.c2)))OR(rt0.c2)))) WHERE ((((((((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c3))))<((rt1.c2)))) ISNULL));
SELECT DISTINCT * FROM rt1, vt0 RIGHT OUTER JOIN rt0 ON (((((rt0.c0))<((rt1.c1)))) BETWEEN ((NOT (rt0.c3))) AND (((((((((rt0.c1)OR(rt1.c2)))AND(vt0.c0)))OR(rt0.c2)))OR(rt0.c2))));
SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2;
SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE (((rt1.c2) IS FALSE)) GROUP BY rt1.c1, rt1.c0, rt1.c2 UNION SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE ((NOT (((rt1.c2) IS FALSE)))) GROUP BY rt1.c1, rt1.c0, rt1.c2 UNION SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE (((((rt1.c2) IS FALSE)) ISNULL)) GROUP BY rt1.c1, rt1.c0, rt1.c2;
SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2;
SELECT vt1.c2, rt1.c0, rt0.c1, rt1.c2, vt1.c0, rt0.c3, vt0.c0, vt1.c1, rt1.c1 FROM rt0, vt0, rt1, vt1 GROUP BY vt1.c2, rt1.c0, rt0.c1, rt1.c2, vt1.c0, rt0.c3, vt0.c0, vt1.c1, rt1.c1;
SELECT vt1.c2, rt1.c0, rt0.c1, rt1.c2, vt1.c0, rt0.c3, vt0.c0, vt1.c1, rt1.c1 FROM rt0, vt0, rt1, vt1 GROUP BY vt1.c2, rt1.c0, rt0.c1, rt1.c2, vt1.c0, rt0.c3, vt0.c0, vt1.c1, rt1.c1 HAVING COUNT(*) UNION ALL SELECT vt1.c2, rt1.c0, rt0.c1, rt1.c2, vt1.c0, rt0.c3, vt0.c0, vt1.c1, rt1.c1 FROM rt0, vt0, rt1, vt1 GROUP BY vt1.c2, rt1.c0, rt0.c1, rt1.c2, vt1.c0, rt0.c3, vt0.c0, vt1.c1, rt1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c2, rt1.c0, rt0.c1, rt1.c2, vt1.c0, rt0.c3, vt0.c0, vt1.c1, rt1.c1 FROM rt0, vt0, rt1, vt1 GROUP BY vt1.c2, rt1.c0, rt0.c1, rt1.c2, vt1.c0, rt0.c3, vt0.c0, vt1.c1, rt1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c2, rt1.c0, rt0.c1, rt1.c2, vt1.c0, rt0.c3, vt0.c0, vt1.c1, rt1.c1 FROM rt0, vt0, rt1, vt1 GROUP BY vt1.c2, rt1.c0, rt0.c1, rt1.c2, vt1.c0, rt0.c3, vt0.c0, vt1.c1, rt1.c1;
SELECT vt1.c2, rt1.c0, rt0.c1, rt1.c2, vt1.c0, rt0.c3, vt0.c0, vt1.c1, rt1.c1 FROM rt0, vt0, rt1, vt1 GROUP BY vt1.c2, rt1.c0, rt0.c1, rt1.c2, vt1.c0, rt0.c3, vt0.c0, vt1.c1, rt1.c1 HAVING COUNT(*) UNION ALL SELECT vt1.c2, rt1.c0, rt0.c1, rt1.c2, vt1.c0, rt0.c3, vt0.c0, vt1.c1, rt1.c1 FROM rt0, vt0, rt1, vt1 GROUP BY vt1.c2, rt1.c0, rt0.c1, rt1.c2, vt1.c0, rt0.c3, vt0.c0, vt1.c1, rt1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c2, rt1.c0, rt0.c1, rt1.c2, vt1.c0, rt0.c3, vt0.c0, vt1.c1, rt1.c1 FROM rt0, vt0, rt1, vt1 GROUP BY vt1.c2, rt1.c0, rt0.c1, rt1.c2, vt1.c0, rt0.c3, vt0.c0, vt1.c1, rt1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c2, rt1.c0, rt0.c1, rt1.c2, vt1.c0, rt0.c3, vt0.c0, vt1.c1, rt1.c1 FROM rt0, vt0, rt1, vt1 GROUP BY vt1.c2, rt1.c0, rt0.c1, rt1.c2, vt1.c0, rt0.c3, vt0.c0, vt1.c1, rt1.c1;
SELECT ALL * FROM rt1, vt0 LEFT OUTER JOIN rt0 ON CASE WHEN rt0.c0 THEN rt0.c0 COLLATE NOCASE END;
SELECT ALL * FROM rt1, vt0 LEFT OUTER JOIN rt0 ON CASE WHEN rt0.c0 THEN rt0.c0 COLLATE NOCASE END WHERE (0.8916039239446909) UNION ALL SELECT * FROM rt1, vt0 LEFT OUTER JOIN rt0 ON CASE WHEN rt0.c0 THEN rt0.c0 COLLATE NOCASE END WHERE ((NOT (0.8916039239446909))) UNION ALL SELECT ALL * FROM rt1, vt0 LEFT OUTER JOIN rt0 ON CASE WHEN rt0.c0 THEN rt0.c0 COLLATE NOCASE END WHERE (((0.8916039239446909) ISNULL));
SELECT ALL * FROM rt1, vt0 LEFT OUTER JOIN rt0 ON CASE WHEN rt0.c0 THEN rt0.c0 COLLATE NOCASE END;
SELECT DISTINCT rt1.c0, rt1.c2 FROM rt1;
SELECT DISTINCT rt1.c0, rt1.c2 FROM rt1 WHERE (CASE (rt1.c2 IN (rt1.c2))  WHEN ((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c0)) THEN UPPER(rt1.c0) END) UNION SELECT DISTINCT rt1.c0, rt1.c2 FROM rt1 WHERE ((NOT (CASE (rt1.c2 IN (rt1.c2))  WHEN ((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c0)) THEN UPPER(rt1.c0) END))) UNION SELECT DISTINCT rt1.c0, rt1.c2 FROM rt1 WHERE (((CASE (rt1.c2 IN (rt1.c2))  WHEN ((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c0)) THEN UPPER(rt1.c0) END) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c2 FROM rt1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (((0.11695903969264343) IS TRUE)) AND (CAST(vt0.c0 AS REAL)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (((0.11695903969264343) IS TRUE)) AND (CAST(vt0.c0 AS REAL)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (((0.11695903969264343) IS TRUE)) AND (CAST(vt0.c0 AS REAL)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3;
SELECT rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3 HAVING ((MAX(MIN(MIN(rt0.c3))))*((((AVG(TOTAL(COUNT(COUNT(*))))))<=((rt0.c3))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3 HAVING (NOT (((MAX(MIN(MIN(rt0.c3))))*((((AVG(TOTAL(COUNT(COUNT(*))))))<=((rt0.c3))))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3 HAVING ((((MAX(MIN(MIN(rt0.c3))))*((((AVG(TOTAL(COUNT(COUNT(*))))))<=((rt0.c3)))))) ISNULL);
SELECT * FROM vt1, vt0, rt0;
SELECT * FROM vt1, vt0, rt0 WHERE ((CAST(rt0.c3 AS NUMERIC) IN ())) UNION ALL SELECT ALL * FROM vt1, vt0, rt0 WHERE ((NOT ((CAST(rt0.c3 AS NUMERIC) IN ())))) UNION ALL SELECT * FROM vt1, vt0, rt0 WHERE ((((CAST(rt0.c3 AS NUMERIC) IN ())) ISNULL));
SELECT * FROM vt1, vt0, rt0;
SELECT DISTINCT vt0.c0, rt1.c1 FROM vt0, rt1;
SELECT DISTINCT vt0.c0, rt1.c1 FROM vt0, rt1 WHERE (CAST((rt1.c1 IN ()) AS TEXT)) UNION SELECT DISTINCT vt0.c0, rt1.c1 FROM vt0, rt1 WHERE ((NOT (CAST((rt1.c1 IN ()) AS TEXT)))) UNION SELECT DISTINCT vt0.c0, rt1.c1 FROM vt0, rt1 WHERE (((CAST((rt1.c1 IN ()) AS TEXT)) ISNULL));
SELECT DISTINCT vt0.c0, rt1.c1 FROM vt0, rt1;
SELECT rt0.c2, vt1.c1, vt1.c0, rt1.c0, rt0.c1, vt1.c2, vt1.c3 FROM vt1, rt0, rt1, vt0 GROUP BY rt0.c2, vt1.c1, vt1.c0, rt1.c0, rt0.c1, vt1.c2, vt1.c3;
SELECT ALL rt0.c2, vt1.c1, vt1.c0, rt1.c0, rt0.c1, vt1.c2, vt1.c3 FROM vt1, rt0, rt1, vt0 WHERE ((((((rt1.c1 IN (rt0.c0)))AND(((rt1.c2) BETWEEN (rt1.c1) AND (vt0.c0)))))AND((((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((vt1.c2)))))) GROUP BY rt0.c2, vt1.c1, vt1.c0, rt1.c0, rt0.c1, vt1.c2, vt1.c3 UNION SELECT ALL rt0.c2, vt1.c1, vt1.c0, rt1.c0, rt0.c1, vt1.c2, vt1.c3 FROM vt1, rt0, rt1, vt0 WHERE ((NOT ((((((rt1.c1 IN (rt0.c0)))AND(((rt1.c2) BETWEEN (rt1.c1) AND (vt0.c0)))))AND((((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((vt1.c2)))))))) GROUP BY rt0.c2, vt1.c1, vt1.c0, rt1.c0, rt0.c1, vt1.c2, vt1.c3 UNION SELECT ALL rt0.c2, vt1.c1, vt1.c0, rt1.c0, rt0.c1, vt1.c2, vt1.c3 FROM vt1, rt0, rt1, vt0 WHERE ((((((((rt1.c1 IN (rt0.c0)))AND(((rt1.c2) BETWEEN (rt1.c1) AND (vt0.c0)))))AND((((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((vt1.c2)))))) ISNULL)) GROUP BY rt0.c2, vt1.c1, vt1.c0, rt1.c0, rt0.c1, vt1.c2, vt1.c3;
SELECT rt0.c2, vt1.c1, vt1.c0, rt1.c0, rt0.c1, vt1.c2, vt1.c3 FROM vt1, rt0, rt1, vt0 GROUP BY rt0.c2, vt1.c1, vt1.c0, rt1.c0, rt0.c1, vt1.c2, vt1.c3;
SELECT ALL rt0.c1, rt1.c1, rt0.c3, rt1.c0, vt1.c1, vt1.c2, rt0.c2, vt0.c0, vt1.c3, rt1.c2, rt0.c0, vt1.c0 FROM vt0, rt0 INNER JOIN rt1 ON '1676082721' CROSS JOIN vt1 ON CASE WHEN ((((vt1.c3)AND(vt1.c1)))OR(rt0.c0)) THEN CAST(rt0.c2 AS TEXT) WHEN ((vt1.c1) NOT BETWEEN (rt1.c0) AND ('XU')) THEN CASE WHEN rt1.c1 THEN rt1.c2 END WHEN ((((rt0.c3)AND(rt0.c3)))AND(rt1.c2)) THEN (NOT (vt0.c0)) WHEN HEX(vt1.c2) THEN (rt1.c2 IN ()) WHEN ((rt1.c1)==(vt1.c3)) THEN (((vt1.c2, vt1.c3, vt1.c0, rt0.c2, rt1.c0))>=((vt1.c1, rt0.c2, rt1.c1, vt1.c0, rt0.c0))) END GROUP BY rt0.c1, rt1.c1, rt0.c3, rt1.c0, vt1.c1, vt1.c2, rt0.c2, vt0.c0, vt1.c3, rt1.c2, rt0.c0, vt1.c0;
SELECT ALL rt0.c1, rt1.c1, rt0.c3, rt1.c0, vt1.c1, vt1.c2, rt0.c2, vt0.c0, vt1.c3, rt1.c2, rt0.c0, vt1.c0 FROM vt0, rt0 INNER JOIN rt1 ON '1676082721' CROSS JOIN vt1 ON CASE WHEN ((((vt1.c3)AND(vt1.c1)))OR(rt0.c0)) THEN CAST(rt0.c2 AS TEXT) WHEN ((vt1.c1) NOT BETWEEN (rt1.c0) AND ('XU')) THEN CASE WHEN rt1.c1 THEN rt1.c2 END WHEN ((((rt0.c3)AND(rt0.c3)))AND(rt1.c2)) THEN (NOT (vt0.c0)) WHEN HEX(vt1.c2) THEN (rt1.c2 IN ()) WHEN ((rt1.c1)=(vt1.c3)) THEN (((vt1.c2, vt1.c3, vt1.c0, rt0.c2, rt1.c0))>=((vt1.c1, rt0.c2, rt1.c1, vt1.c0, rt0.c0))) END GROUP BY rt0.c1, rt1.c1, rt0.c3, rt1.c0, vt1.c1, vt1.c2, rt0.c2, vt0.c0, vt1.c3, rt1.c2, rt0.c0, vt1.c0 HAVING (NOT (MAX(rt0.c1))) UNION ALL SELECT ALL rt0.c1, rt1.c1, rt0.c3, rt1.c0, vt1.c1, vt1.c2, rt0.c2, vt0.c0, vt1.c3, rt1.c2, rt0.c0, vt1.c0 FROM vt0, rt0 INNER JOIN rt1 ON '1676082721' CROSS JOIN vt1 ON CASE WHEN ((((vt1.c3)AND(vt1.c1)))OR(rt0.c0)) THEN CAST(rt0.c2 AS TEXT) WHEN ((vt1.c1) NOT BETWEEN (rt1.c0) AND ('XU')) THEN CASE WHEN rt1.c1 THEN rt1.c2 END WHEN ((((rt0.c3)AND(rt0.c3)))AND(rt1.c2)) THEN (NOT (vt0.c0)) WHEN HEX(vt1.c2) THEN (rt1.c2 IN ()) WHEN ((rt1.c1)==(vt1.c3)) THEN (((vt1.c2, vt1.c3, vt1.c0, rt0.c2, rt1.c0))>=((vt1.c1, rt0.c2, rt1.c1, vt1.c0, rt0.c0))) END GROUP BY rt0.c1, rt1.c1, rt0.c3, rt1.c0, vt1.c1, vt1.c2, rt0.c2, vt0.c0, vt1.c3, rt1.c2, rt0.c0, vt1.c0 HAVING (NOT ((NOT (MAX(rt0.c1))))) UNION ALL SELECT rt0.c1, rt1.c1, rt0.c3, rt1.c0, vt1.c1, vt1.c2, rt0.c2, vt0.c0, vt1.c3, rt1.c2, rt0.c0, vt1.c0 FROM vt0, rt0 INNER JOIN rt1 ON '1676082721' CROSS JOIN vt1 ON CASE WHEN ((((vt1.c3)AND(vt1.c1)))OR(rt0.c0)) THEN CAST(rt0.c2 AS TEXT) WHEN ((vt1.c1) NOT BETWEEN (rt1.c0) AND ('XU')) THEN CASE WHEN rt1.c1 THEN rt1.c2 END WHEN ((((rt0.c3)AND(rt0.c3)))AND(rt1.c2)) THEN (NOT (vt0.c0)) WHEN HEX(vt1.c2) THEN (rt1.c2 IN ()) WHEN ((rt1.c1)=(vt1.c3)) THEN (((vt1.c2, vt1.c3, vt1.c0, rt0.c2, rt1.c0))>=((vt1.c1, rt0.c2, rt1.c1, vt1.c0, rt0.c0))) END GROUP BY rt0.c1, rt1.c1, rt0.c3, rt1.c0, vt1.c1, vt1.c2, rt0.c2, vt0.c0, vt1.c3, rt1.c2, rt0.c0, vt1.c0 HAVING (((NOT (MAX(rt0.c1)))) ISNULL);
SELECT ALL rt0.c1, rt1.c1, rt0.c3, rt1.c0, vt1.c1, vt1.c2, rt0.c2, vt0.c0, vt1.c3, rt1.c2, rt0.c0, vt1.c0 FROM vt0, rt0 INNER JOIN rt1 ON '1676082721' CROSS JOIN vt1 ON CASE WHEN ((((vt1.c3)AND(vt1.c1)))OR(rt0.c0)) THEN CAST(rt0.c2 AS TEXT) WHEN ((vt1.c1) NOT BETWEEN (rt1.c0) AND ('XU')) THEN CASE WHEN rt1.c1 THEN rt1.c2 END WHEN ((((rt0.c3)AND(rt0.c3)))AND(rt1.c2)) THEN (NOT (vt0.c0)) WHEN HEX(vt1.c2) THEN (rt1.c2 IN ()) WHEN ((rt1.c1)==(vt1.c3)) THEN (((vt1.c2, vt1.c3, vt1.c0, rt0.c2, rt1.c0))>=((vt1.c1, rt0.c2, rt1.c1, vt1.c0, rt0.c0))) END GROUP BY rt0.c1, rt1.c1, rt0.c3, rt1.c0, vt1.c1, vt1.c2, rt0.c2, vt0.c0, vt1.c3, rt1.c2, rt0.c0, vt1.c0;
SELECT ALL rt0.c1, rt1.c1, rt0.c3, rt1.c0, vt1.c1, vt1.c2, rt0.c2, vt0.c0, vt1.c3, rt1.c2, rt0.c0, vt1.c0 FROM vt0, rt0 INNER JOIN rt1 ON '1676082721' CROSS JOIN vt1 ON CASE WHEN ((((vt1.c3)AND(vt1.c1)))OR(rt0.c0)) THEN CAST(rt0.c2 AS TEXT) WHEN ((vt1.c1) NOT BETWEEN (rt1.c0) AND ('XU')) THEN CASE WHEN rt1.c1 THEN rt1.c2 END WHEN ((((rt0.c3)AND(rt0.c3)))AND(rt1.c2)) THEN (NOT (vt0.c0)) WHEN HEX(vt1.c2) THEN (rt1.c2 IN ()) WHEN ((rt1.c1)=(vt1.c3)) THEN (((vt1.c2, vt1.c3, vt1.c0, rt0.c2, rt1.c0))>=((vt1.c1, rt0.c2, rt1.c1, vt1.c0, rt0.c0))) END GROUP BY rt0.c1, rt1.c1, rt0.c3, rt1.c0, vt1.c1, vt1.c2, rt0.c2, vt0.c0, vt1.c3, rt1.c2, rt0.c0, vt1.c0 HAVING (NOT (MAX(rt0.c1))) UNION ALL SELECT ALL rt0.c1, rt1.c1, rt0.c3, rt1.c0, vt1.c1, vt1.c2, rt0.c2, vt0.c0, vt1.c3, rt1.c2, rt0.c0, vt1.c0 FROM vt0, rt0 INNER JOIN rt1 ON '1676082721' CROSS JOIN vt1 ON CASE WHEN ((((vt1.c3)AND(vt1.c1)))OR(rt0.c0)) THEN CAST(rt0.c2 AS TEXT) WHEN ((vt1.c1) NOT BETWEEN (rt1.c0) AND ('XU')) THEN CASE WHEN rt1.c1 THEN rt1.c2 END WHEN ((((rt0.c3)AND(rt0.c3)))AND(rt1.c2)) THEN (NOT (vt0.c0)) WHEN HEX(vt1.c2) THEN (rt1.c2 IN ()) WHEN ((rt1.c1)==(vt1.c3)) THEN (((vt1.c2, vt1.c3, vt1.c0, rt0.c2, rt1.c0))>=((vt1.c1, rt0.c2, rt1.c1, vt1.c0, rt0.c0))) END GROUP BY rt0.c1, rt1.c1, rt0.c3, rt1.c0, vt1.c1, vt1.c2, rt0.c2, vt0.c0, vt1.c3, rt1.c2, rt0.c0, vt1.c0 HAVING (NOT ((NOT (MAX(rt0.c1))))) UNION ALL SELECT rt0.c1, rt1.c1, rt0.c3, rt1.c0, vt1.c1, vt1.c2, rt0.c2, vt0.c0, vt1.c3, rt1.c2, rt0.c0, vt1.c0 FROM vt0, rt0 INNER JOIN rt1 ON '1676082721' CROSS JOIN vt1 ON CASE WHEN ((((vt1.c3)AND(vt1.c1)))OR(rt0.c0)) THEN CAST(rt0.c2 AS TEXT) WHEN ((vt1.c1) NOT BETWEEN (rt1.c0) AND ('XU')) THEN CASE WHEN rt1.c1 THEN rt1.c2 END WHEN ((((rt0.c3)AND(rt0.c3)))AND(rt1.c2)) THEN (NOT (vt0.c0)) WHEN HEX(vt1.c2) THEN (rt1.c2 IN ()) WHEN ((rt1.c1)=(vt1.c3)) THEN (((vt1.c2, vt1.c3, vt1.c0, rt0.c2, rt1.c0))>=((vt1.c1, rt0.c2, rt1.c1, vt1.c0, rt0.c0))) END GROUP BY rt0.c1, rt1.c1, rt0.c3, rt1.c0, vt1.c1, vt1.c2, rt0.c2, vt0.c0, vt1.c3, rt1.c2, rt0.c0, vt1.c0 HAVING (((NOT (MAX(rt0.c1)))) ISNULL);
SELECT ALL rt0.c1, rt1.c1, rt0.c3, rt1.c0, vt1.c1, vt1.c2, rt0.c2, vt0.c0, vt1.c3, rt1.c2, rt0.c0, vt1.c0 FROM vt0, rt0 INNER JOIN rt1 ON '1676082721' CROSS JOIN vt1 ON CASE WHEN ((((vt1.c3)AND(vt1.c1)))OR(rt0.c0)) THEN CAST(rt0.c2 AS TEXT) WHEN ((vt1.c1) NOT BETWEEN (rt1.c0) AND ('XU')) THEN CASE WHEN rt1.c1 THEN rt1.c2 END WHEN ((((rt0.c3)AND(rt0.c3)))AND(rt1.c2)) THEN (NOT (vt0.c0)) WHEN HEX(vt1.c2) THEN (rt1.c2 IN ()) WHEN ((rt1.c1)==(vt1.c3)) THEN (((vt1.c2, vt1.c3, vt1.c0, rt0.c2, rt1.c0))>=((vt1.c1, rt0.c2, rt1.c1, vt1.c0, rt0.c0))) END GROUP BY rt0.c1, rt1.c1, rt0.c3, rt1.c0, vt1.c1, vt1.c2, rt0.c2, vt0.c0, vt1.c3, rt1.c2, rt0.c0, vt1.c0;
SELECT ALL rt0.c0, vt1.c2, vt1.c0 FROM vt0, vt1 CROSS JOIN rt0 ON ((vt1.c1)-(LTRIM(rt0.c1)));
SELECT rt0.c0, vt1.c2, vt1.c0 FROM vt0, vt1 CROSS JOIN rt0 ON ((vt1.c1)-(LTRIM(rt0.c1))) WHERE ((((((- (rt0.c1)))AND((NOT (rt0.c1)))))AND((('286312717')IS(rt0.c0))))) UNION ALL SELECT ALL rt0.c0, vt1.c2, vt1.c0 FROM vt0, vt1 CROSS JOIN rt0 ON ((vt1.c1)-(LTRIM(rt0.c1))) WHERE ((NOT ((((((- (rt0.c1)))AND((NOT (rt0.c1)))))AND((('286312717')IS(rt0.c0))))))) UNION ALL SELECT rt0.c0, vt1.c2, vt1.c0 FROM vt0, vt1 CROSS JOIN rt0 ON ((vt1.c1)-(LTRIM(rt0.c1))) WHERE ((((((((- (rt0.c1)))AND((NOT (rt0.c1)))))AND((('286312717')IS(rt0.c0))))) ISNULL));
SELECT ALL rt0.c0, vt1.c2, vt1.c0 FROM vt0, vt1 CROSS JOIN rt0 ON ((vt1.c1)-(LTRIM(rt0.c1)));
SELECT DISTINCT rt0.c0, vt1.c1, vt0.c0, vt1.c2, rt1.c0, rt1.c1, vt1.c3, rt1.c2, rt0.c1 FROM rt1, vt0, vt1, rt0;
SELECT DISTINCT rt0.c0, vt1.c1, vt0.c0, vt1.c2, rt1.c0, rt1.c1, vt1.c3, rt1.c2, rt0.c1 FROM rt1, vt0, vt1, rt0 WHERE (MAX(STRFTIME(rt0.c2, vt0.c0, rt1.c0), ((vt1.c2)IS NOT(vt1.c2)))) UNION SELECT DISTINCT rt0.c0, vt1.c1, vt0.c0, vt1.c2, rt1.c0, rt1.c1, vt1.c3, rt1.c2, rt0.c1 FROM rt1, vt0, vt1, rt0 WHERE ((NOT (MAX(STRFTIME(rt0.c2, vt0.c0, rt1.c0), ((vt1.c2)IS NOT(vt1.c2)))))) UNION SELECT DISTINCT rt0.c0, vt1.c1, vt0.c0, vt1.c2, rt1.c0, rt1.c1, vt1.c3, rt1.c2, rt0.c1 FROM rt1, vt0, vt1, rt0 WHERE (((MAX(STRFTIME(rt0.c2, vt0.c0, rt1.c0), ((vt1.c2)IS NOT(vt1.c2)))) ISNULL));
SELECT DISTINCT rt0.c0, vt1.c1, vt0.c0, vt1.c2, rt1.c0, rt1.c1, vt1.c3, rt1.c2, rt0.c1 FROM rt1, vt0, vt1, rt0;
SELECT rt0.c1, rt1.c1, vt1.c1, vt1.c2, vt1.c0, rt0.c0, vt0.c0, rt1.c2, rt1.c0 FROM rt1, vt0, rt0, vt1 GROUP BY rt0.c1, rt1.c1, vt1.c1, vt1.c2, vt1.c0, rt0.c0, vt0.c0, rt1.c2, rt1.c0;
SELECT rt0.c1, rt1.c1, vt1.c1, vt1.c2, vt1.c0, rt0.c0, vt0.c0, rt1.c2, rt1.c0 FROM rt1, vt0, rt0, vt1 WHERE (0.5897037611441649) GROUP BY rt0.c1, rt1.c1, vt1.c1, vt1.c2, vt1.c0, rt0.c0, vt0.c0, rt1.c2, rt1.c0 UNION SELECT rt0.c1, rt1.c1, vt1.c1, vt1.c2, vt1.c0, rt0.c0, vt0.c0, rt1.c2, rt1.c0 FROM rt1, vt0, rt0, vt1 WHERE ((NOT (0.5897037611441649))) GROUP BY rt0.c1, rt1.c1, vt1.c1, vt1.c2, vt1.c0, rt0.c0, vt0.c0, rt1.c2, rt1.c0 UNION SELECT rt0.c1, rt1.c1, vt1.c1, vt1.c2, vt1.c0, rt0.c0, vt0.c0, rt1.c2, rt1.c0 FROM rt1, vt0, rt0, vt1 WHERE (((0.5897037611441649) ISNULL)) GROUP BY rt0.c1, rt1.c1, vt1.c1, vt1.c2, vt1.c0, rt0.c0, vt0.c0, rt1.c2, rt1.c0;
SELECT rt0.c1, rt1.c1, vt1.c1, vt1.c2, vt1.c0, rt0.c0, vt0.c0, rt1.c2, rt1.c0 FROM rt1, vt0, rt0, vt1 GROUP BY rt0.c1, rt1.c1, vt1.c1, vt1.c2, vt1.c0, rt0.c0, vt0.c0, rt1.c2, rt1.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG(SUM(COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (AVG(SUM(COUNT(*))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG(SUM(COUNT(*)))) ISNULL);
SELECT * FROM rt1, vt0, rt0, vt1;
SELECT ALL * FROM rt1, vt0, rt0, vt1 WHERE ((((~ (vt1.c0)))<=((vt1.c2 IN ())))) UNION ALL SELECT ALL * FROM rt1, vt0, rt0, vt1 WHERE ((NOT ((((~ (vt1.c0)))<=((vt1.c2 IN ())))))) UNION ALL SELECT * FROM rt1, vt0, rt0, vt1 WHERE ((((((~ (vt1.c0)))<=((vt1.c2 IN ())))) ISNULL));
SELECT * FROM rt1, vt0, rt0, vt1;
SELECT DISTINCT rt1.c1, rt1.c2, rt1.c0 FROM rt1;
SELECT DISTINCT rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE (CASE WHEN (((NULL)) BETWEEN ((rt1.c1)) AND ((rt1.c2))) THEN rt1.c1 COLLATE RTRIM WHEN (rt1.c0 IN ()) THEN (((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c2))) WHEN CAST(rt1.c2 AS INTEGER) THEN rt1.c2 COLLATE BINARY ELSE 0.8229252500133596 END) UNION SELECT DISTINCT rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE ((NOT (CASE WHEN (((NULL)) BETWEEN ((rt1.c1)) AND ((rt1.c2))) THEN rt1.c1 COLLATE RTRIM WHEN (rt1.c0 IN ()) THEN (((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c2))) WHEN CAST(rt1.c2 AS INTEGER) THEN rt1.c2 COLLATE BINARY ELSE 0.8229252500133596 END))) UNION SELECT DISTINCT rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE (((CASE WHEN (((NULL)) BETWEEN ((rt1.c1)) AND ((rt1.c2))) THEN rt1.c1 COLLATE RTRIM WHEN (rt1.c0 IN ()) THEN (((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c2))) WHEN CAST(rt1.c2 AS INTEGER) THEN rt1.c2 COLLATE BINARY ELSE 0.8229252500133596 END) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c2, rt1.c0 FROM rt1;
SELECT rt1.c2 FROM rt1, vt0 GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1, vt0 WHERE (CAST((((vt0.c0)) NOT BETWEEN ((0.5786252281045106)) AND ((vt0.c0))) AS REAL)) GROUP BY rt1.c2 UNION SELECT ALL rt1.c2 FROM rt1, vt0 WHERE ((NOT (CAST((((vt0.c0)) NOT BETWEEN ((0.5786252281045106)) AND ((vt0.c0))) AS REAL)))) GROUP BY rt1.c2 UNION SELECT rt1.c2 FROM rt1, vt0 WHERE (((CAST((((vt0.c0)) NOT BETWEEN ((0.5786252281045106)) AND ((vt0.c0))) AS REAL)) ISNULL)) GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1, vt0 GROUP BY rt1.c2;
SELECT rt0.c2, vt1.c1, rt1.c1, vt1.c2, rt1.c0 FROM rt1, vt0, vt1, rt0 GROUP BY rt0.c2, vt1.c1, rt1.c1, vt1.c2, rt1.c0;
SELECT rt0.c2, vt1.c1, rt1.c1, vt1.c2, rt1.c0 FROM rt1, vt0, vt1, rt0 GROUP BY rt0.c2, vt1.c1, rt1.c1, vt1.c2, rt1.c0 HAVING (((NULL COLLATE BINARY, GROUP_CONCAT('-1025357667'), MIN(rt1.c2)))>((SUM(rt1.c2), GROUP_CONCAT(TOTAL(rt1.c2)), (vt1.c0 IN ())))) UNION ALL SELECT ALL rt0.c2, vt1.c1, rt1.c1, vt1.c2, rt1.c0 FROM rt1, vt0, vt1, rt0 GROUP BY rt0.c2, vt1.c1, rt1.c1, vt1.c2, rt1.c0 HAVING (NOT ((((NULL COLLATE BINARY, GROUP_CONCAT('-1025357667'), MIN(rt1.c2)))>((SUM(rt1.c2), GROUP_CONCAT(TOTAL(rt1.c2)), (vt1.c0 IN ())))))) UNION ALL SELECT ALL rt0.c2, vt1.c1, rt1.c1, vt1.c2, rt1.c0 FROM rt1, vt0, vt1, rt0 GROUP BY rt0.c2, vt1.c1, rt1.c1, vt1.c2, rt1.c0 HAVING (((((NULL COLLATE BINARY, GROUP_CONCAT('-1025357667'), MIN(rt1.c2)))>((SUM(rt1.c2), GROUP_CONCAT(TOTAL(rt1.c2)), (vt1.c0 IN ()))))) ISNULL);
SELECT ALL * FROM rt0 FULL OUTER JOIN rt1 ON (((((((((((((rt0.c1)OR(rt1.c2)))AND(rt0.c3)))OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c0)) IN (-111108155, '1869250444')) LEFT OUTER JOIN vt0 ON 139520575;
SELECT * FROM rt0 FULL OUTER JOIN rt1 ON (((((((((((((rt0.c1)OR(rt1.c2)))AND(rt0.c3)))OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c0)) IN (-111108155, '1869250444')) LEFT OUTER JOIN vt0 ON 139520575 WHERE ((((NOT (vt0.c0)))/(((rt1.c1)>>(rt1.c2))))) UNION ALL SELECT ALL * FROM rt0 FULL OUTER JOIN rt1 ON (((((((((((((rt0.c1)OR(rt1.c2)))AND(rt0.c3)))OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c0)) IN (-111108155, '1869250444')) LEFT OUTER JOIN vt0 ON 139520575 WHERE ((NOT ((((NOT (vt0.c0)))/(((rt1.c1)>>(rt1.c2))))))) UNION ALL SELECT ALL * FROM rt0 FULL OUTER JOIN rt1 ON (((((((((((((rt0.c1)OR(rt1.c2)))AND(rt0.c3)))OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c0)) IN (-111108155, '1869250444')) LEFT OUTER JOIN vt0 ON 139520575 WHERE ((((((NOT (vt0.c0)))/(((rt1.c1)>>(rt1.c2))))) ISNULL));
SELECT ALL * FROM rt0 FULL OUTER JOIN rt1 ON (((((((((((((rt0.c1)OR(rt1.c2)))AND(rt0.c3)))OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c0)) IN (-111108155, '1869250444')) LEFT OUTER JOIN vt0 ON 139520575;
SELECT DISTINCT * FROM vt1, rt0, rt1, vt0;
SELECT DISTINCT * FROM vt1, rt0, rt1, vt0 WHERE (-1575751978 COLLATE BINARY) UNION SELECT DISTINCT * FROM vt1, rt0, rt1, vt0 WHERE ((NOT (-1575751978 COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt1, rt0, rt1, vt0 WHERE (((-1575751978 COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM vt1, rt0, rt1, vt0;
SELECT ALL vt1.c2, rt0.c1, vt1.c1, rt0.c3, vt1.c0 FROM vt1 CROSS JOIN rt0 ON (((((rt0.c2, rt0.c1, vt1.c1))!=((vt1.c2, rt0.c1, rt0.c2))))IS((((vt1.c1)) BETWEEN ((vt1.c0)) AND ((rt0.c2))))) GROUP BY vt1.c2, rt0.c1, vt1.c1, rt0.c3, vt1.c0;
SELECT vt1.c2, rt0.c1, vt1.c1, rt0.c3, vt1.c0 FROM vt1 CROSS JOIN rt0 ON (((((rt0.c2, rt0.c1, vt1.c1))!=((vt1.c2, rt0.c1, rt0.c2))))IS((((vt1.c1)) BETWEEN ((vt1.c0)) AND ((rt0.c2))))) WHERE (((((vt1.c1)OR(vt1.c0)))OR(vt1.c3)) COLLATE BINARY) GROUP BY vt1.c2, rt0.c1, vt1.c1, rt0.c3, vt1.c0 UNION SELECT vt1.c2, rt0.c1, vt1.c1, rt0.c3, vt1.c0 FROM vt1 CROSS JOIN rt0 ON (((((rt0.c2, rt0.c1, vt1.c1))!=((vt1.c2, rt0.c1, rt0.c2))))IS((((vt1.c1)) BETWEEN ((vt1.c0)) AND ((rt0.c2))))) WHERE ((NOT (((((vt1.c1)OR(vt1.c0)))OR(vt1.c3)) COLLATE BINARY))) GROUP BY vt1.c2, rt0.c1, vt1.c1, rt0.c3, vt1.c0 UNION SELECT vt1.c2, rt0.c1, vt1.c1, rt0.c3, vt1.c0 FROM vt1 CROSS JOIN rt0 ON (((((rt0.c2, rt0.c1, vt1.c1))<>((vt1.c2, rt0.c1, rt0.c2))))IS((((vt1.c1)) BETWEEN ((vt1.c0)) AND ((rt0.c2))))) WHERE (((((((vt1.c1)OR(vt1.c0)))OR(vt1.c3)) COLLATE BINARY) ISNULL)) GROUP BY vt1.c2, rt0.c1, vt1.c1, rt0.c3, vt1.c0;
SELECT ALL vt1.c2, rt0.c1, vt1.c1, rt0.c3, vt1.c0 FROM vt1 CROSS JOIN rt0 ON (((((rt0.c2, rt0.c1, vt1.c1))!=((vt1.c2, rt0.c1, rt0.c2))))IS((((vt1.c1)) BETWEEN ((vt1.c0)) AND ((rt0.c2))))) GROUP BY vt1.c2, rt0.c1, vt1.c1, rt0.c3, vt1.c0;
SELECT rt0.c0, vt0.c0, rt0.c3, rt1.c1, rt1.c2, rt0.c1, vt1.c2, rt0.c2, vt1.c1, rt1.c0 FROM vt0, rt1, vt1, rt0 GROUP BY rt0.c0, vt0.c0, rt0.c3, rt1.c1, rt1.c2, rt0.c1, vt1.c2, rt0.c2, vt1.c1, rt1.c0;
SELECT rt0.c0, vt0.c0, rt0.c3, rt1.c1, rt1.c2, rt0.c1, vt1.c2, rt0.c2, vt1.c1, rt1.c0 FROM vt0, rt1, vt1, rt0 GROUP BY rt0.c0, vt0.c0, rt0.c3, rt1.c1, rt1.c2, rt0.c1, vt1.c2, rt0.c2, vt1.c1, rt1.c0 HAVING AVG(SUM(rt0.c2)) UNION ALL SELECT ALL rt0.c0, vt0.c0, rt0.c3, rt1.c1, rt1.c2, rt0.c1, vt1.c2, rt0.c2, vt1.c1, rt1.c0 FROM vt0, rt1, vt1, rt0 GROUP BY rt0.c0, vt0.c0, rt0.c3, rt1.c1, rt1.c2, rt0.c1, vt1.c2, rt0.c2, vt1.c1, rt1.c0 HAVING (NOT (AVG(SUM(rt0.c2)))) UNION ALL SELECT ALL rt0.c0, vt0.c0, rt0.c3, rt1.c1, rt1.c2, rt0.c1, vt1.c2, rt0.c2, vt1.c1, rt1.c0 FROM vt0, rt1, vt1, rt0 GROUP BY rt0.c0, vt0.c0, rt0.c3, rt1.c1, rt1.c2, rt0.c1, vt1.c2, rt0.c2, vt1.c1, rt1.c0 HAVING ((AVG(SUM(rt0.c2))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (803446863) UNION ALL SELECT * FROM rt0 WHERE ((NOT (803446863))) UNION ALL SELECT ALL * FROM rt0 WHERE (((803446863) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1 FROM vt0, rt1;
SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1 FROM vt0, rt1 WHERE (((((vt0.c0)LIKE(vt0.c0))) NOTNULL)) UNION SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1 FROM vt0, rt1 WHERE ((NOT (((((vt0.c0)LIKE(vt0.c0))) NOTNULL)))) UNION SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1 FROM vt0, rt1 WHERE (((((((vt0.c0)LIKE(vt0.c0))) NOTNULL)) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1 FROM vt0, rt1;
SELECT ALL vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c1;
SELECT ALL vt0.c0, rt0.c1 FROM rt0, vt0 WHERE (((((rt0.c2)LIKE(vt0.c0)))OR(rt0.c1))) GROUP BY vt0.c0, rt0.c1 UNION SELECT ALL vt0.c0, rt0.c1 FROM rt0, vt0 WHERE ((NOT (((((rt0.c2)LIKE(vt0.c0)))OR(rt0.c1))))) GROUP BY vt0.c0, rt0.c1 UNION SELECT ALL vt0.c0, rt0.c1 FROM rt0, vt0 WHERE (((((((rt0.c2)LIKE(vt0.c0)))OR(rt0.c1))) ISNULL)) GROUP BY vt0.c0, rt0.c1;
SELECT ALL vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c1;
SELECT rt1.c0, rt0.c3, rt1.c2, vt1.c1, rt0.c2, vt1.c2, rt1.c1, vt1.c3, vt1.c0, rt0.c1 FROM vt1, rt0, rt1 GROUP BY rt1.c0, rt0.c3, rt1.c2, vt1.c1, rt0.c2, vt1.c2, rt1.c1, vt1.c3, vt1.c0, rt0.c1;
SELECT rt1.c0, rt0.c3, rt1.c2, vt1.c1, rt0.c2, vt1.c2, rt1.c1, vt1.c3, vt1.c0, rt0.c1 FROM vt1, rt0, rt1 GROUP BY rt1.c0, rt0.c3, rt1.c2, vt1.c1, rt0.c2, vt1.c2, rt1.c1, vt1.c3, vt1.c0, rt0.c1 HAVING MAX(AVG(vt1.c3)) UNION ALL SELECT ALL rt1.c0, rt0.c3, rt1.c2, vt1.c1, rt0.c2, vt1.c2, rt1.c1, vt1.c3, vt1.c0, rt0.c1 FROM vt1, rt0, rt1 GROUP BY rt1.c0, rt0.c3, rt1.c2, vt1.c1, rt0.c2, vt1.c2, rt1.c1, vt1.c3, vt1.c0, rt0.c1 HAVING (NOT (MAX(AVG(vt1.c3)))) UNION ALL SELECT rt1.c0, rt0.c3, rt1.c2, vt1.c1, rt0.c2, vt1.c2, rt1.c1, vt1.c3, vt1.c0, rt0.c1 FROM vt1, rt0, rt1 GROUP BY rt1.c0, rt0.c3, rt1.c2, vt1.c1, rt0.c2, vt1.c2, rt1.c1, vt1.c3, vt1.c0, rt0.c1 HAVING ((MAX(AVG(vt1.c3))) ISNULL);
SELECT ALL vt1.c3, rt0.c0 FROM vt1 CROSS JOIN vt0 ON (((((vt1.c2)AND(rt0.c0)), ((vt1.c1)LIKE(rt0.c0)), ((rt0.c0) NOT BETWEEN (-1.642920441E9) AND (x'271a'))))>=((IFNULL(rt0.c3, vt1.c1), MIN(rt0.c2, 0Xffffffffd89ff0db), 0X1aafa608))) CROSS JOIN rt0 ON (((vt1.c0 IN ()))<=(json_remove(vt0.c0, vt1.c0)));
SELECT vt1.c3, rt0.c0 FROM vt1 CROSS JOIN vt0 ON (((((vt1.c2)AND(rt0.c0)), ((vt1.c1)LIKE(rt0.c0)), ((rt0.c0) NOT BETWEEN (-1.642920441E9) AND (x'271a'))))>=((IFNULL(rt0.c3, vt1.c1), MIN(rt0.c2, 0xffffffffd89ff0db), 0X1aafa608))) CROSS JOIN rt0 ON (((vt1.c0 IN ()))<=(json_remove(vt0.c0, vt1.c0))) WHERE ((((~ (vt0.c0)))<=(((rt0.c2)>=(rt0.c1))))) UNION ALL SELECT vt1.c3, rt0.c0 FROM vt1 CROSS JOIN vt0 ON (((((vt1.c2)AND(rt0.c0)), ((vt1.c1)LIKE(rt0.c0)), ((rt0.c0) NOT BETWEEN (-1.642920441E9) AND (x'271a'))))>=((IFNULL(rt0.c3, vt1.c1), MIN(rt0.c2, 0xffffffffd89ff0db), 0X1aafa608))) CROSS JOIN rt0 ON (((vt1.c0 IN ()))<=(json_remove(vt0.c0, vt1.c0))) WHERE ((NOT ((((~ (vt0.c0)))<=(((rt0.c2)>=(rt0.c1))))))) UNION ALL SELECT ALL vt1.c3, rt0.c0 FROM vt1 CROSS JOIN vt0 ON (((((vt1.c2)AND(rt0.c0)), ((vt1.c1)LIKE(rt0.c0)), ((rt0.c0) NOT BETWEEN (-1.642920441E9) AND (x'271a'))))>=((IFNULL(rt0.c3, vt1.c1), MIN(rt0.c2, 0xffffffffd89ff0db), 0x1aafa608))) CROSS JOIN rt0 ON (((vt1.c0 IN ()))<=(json_remove(vt0.c0, vt1.c0))) WHERE ((((((~ (vt0.c0)))<=(((rt0.c2)>=(rt0.c1))))) ISNULL));
SELECT ALL vt1.c3, rt0.c0 FROM vt1 CROSS JOIN vt0 ON (((((vt1.c2)AND(rt0.c0)), ((vt1.c1)LIKE(rt0.c0)), ((rt0.c0) NOT BETWEEN (-1.642920441E9) AND (x'271a'))))>=((IFNULL(rt0.c3, vt1.c1), MIN(rt0.c2, 0Xffffffffd89ff0db), 0X1aafa608))) CROSS JOIN rt0 ON (((vt1.c0 IN ()))<=(json_remove(vt0.c0, vt1.c0)));
SELECT DISTINCT rt0.c3, rt0.c0, vt1.c3, rt0.c1, rt0.c2, rt1.c1, rt1.c0 FROM rt1, vt0 CROSS JOIN vt1 ON (((CAST(rt0.c1 AS NUMERIC)))=((((rt1.c0)>=('1080360532'))))) LEFT OUTER JOIN rt0 ON HEX(rt1.c2);
SELECT DISTINCT rt0.c3, rt0.c0, vt1.c3, rt0.c1, rt0.c2, rt1.c1, rt1.c0 FROM rt1, vt0 CROSS JOIN vt1 ON (((CAST(rt0.c1 AS NUMERIC)))=((((rt1.c0)>=('1080360532'))))) LEFT OUTER JOIN rt0 ON HEX(rt1.c2) WHERE (CAST(1402119516 AS NUMERIC)) UNION SELECT DISTINCT rt0.c3, rt0.c0, vt1.c3, rt0.c1, rt0.c2, rt1.c1, rt1.c0 FROM rt1, vt0 CROSS JOIN vt1 ON (((CAST(rt0.c1 AS NUMERIC)))=((((rt1.c0)>=('1080360532'))))) LEFT OUTER JOIN rt0 ON HEX(rt1.c2) WHERE ((NOT (CAST(1402119516 AS NUMERIC)))) UNION SELECT DISTINCT rt0.c3, rt0.c0, vt1.c3, rt0.c1, rt0.c2, rt1.c1, rt1.c0 FROM rt1, vt0 CROSS JOIN vt1 ON (((CAST(rt0.c1 AS NUMERIC)))==((((rt1.c0)>=('1080360532'))))) LEFT OUTER JOIN rt0 ON HEX(rt1.c2) WHERE (((CAST(1402119516 AS NUMERIC)) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c0, vt1.c3, rt0.c1, rt0.c2, rt1.c1, rt1.c0 FROM rt1, vt0 CROSS JOIN vt1 ON (((CAST(rt0.c1 AS NUMERIC)))=((((rt1.c0)>=('1080360532'))))) LEFT OUTER JOIN rt0 ON HEX(rt1.c2);
SELECT rt0.c1, vt1.c3, rt1.c2, rt0.c3, vt1.c1, rt1.c1, rt1.c0, vt1.c0, rt0.c2, vt1.c2 FROM vt1 LEFT OUTER JOIN rt1 ON ((((rt1.c0)IS NOT(rt1.c2)))||('-1040302979')) LEFT OUTER JOIN rt0 ON (((NOT (vt1.c0))) NOT BETWEEN ((('447718920') NOTNULL)) AND (((NULL)-(vt1.c2)))) CROSS JOIN vt0 ON CAST(((((rt0.c3)AND(vt0.c0)))AND(0.2774342228072817)) AS REAL) GROUP BY rt0.c1, vt1.c3, rt1.c2, rt0.c3, vt1.c1, rt1.c1, rt1.c0, vt1.c0, rt0.c2, vt1.c2;
SELECT ALL rt0.c1, vt1.c3, rt1.c2, rt0.c3, vt1.c1, rt1.c1, rt1.c0, vt1.c0, rt0.c2, vt1.c2 FROM vt1 LEFT OUTER JOIN rt1 ON ((((rt1.c0)IS NOT(rt1.c2)))||('-1040302979')) LEFT OUTER JOIN rt0 ON (((NOT (vt1.c0))) NOT BETWEEN ((('447718920') NOTNULL)) AND (((NULL)-(vt1.c2)))) CROSS JOIN vt0 ON CAST(((((rt0.c3)AND(vt0.c0)))AND(0.2774342228072817)) AS REAL) WHERE ((+ (((rt0.c3) IS TRUE)))) GROUP BY rt0.c1, vt1.c3, rt1.c2, rt0.c3, vt1.c1, rt1.c1, rt1.c0, vt1.c0, rt0.c2, vt1.c2 UNION SELECT rt0.c1, vt1.c3, rt1.c2, rt0.c3, vt1.c1, rt1.c1, rt1.c0, vt1.c0, rt0.c2, vt1.c2 FROM vt1 LEFT OUTER JOIN rt1 ON ((((rt1.c0)IS NOT(rt1.c2)))||('-1040302979')) LEFT OUTER JOIN rt0 ON (((NOT (vt1.c0))) NOT BETWEEN ((('447718920') NOTNULL)) AND (((NULL)-(vt1.c2)))) CROSS JOIN vt0 ON CAST(((((rt0.c3)AND(vt0.c0)))AND(0.2774342228072817)) AS REAL) WHERE ((NOT ((+ (((rt0.c3) IS TRUE)))))) GROUP BY rt0.c1, vt1.c3, rt1.c2, rt0.c3, vt1.c1, rt1.c1, rt1.c0, vt1.c0, rt0.c2, vt1.c2 UNION SELECT ALL rt0.c1, vt1.c3, rt1.c2, rt0.c3, vt1.c1, rt1.c1, rt1.c0, vt1.c0, rt0.c2, vt1.c2 FROM vt1 LEFT OUTER JOIN rt1 ON ((((rt1.c0)IS NOT(rt1.c2)))||('-1040302979')) LEFT OUTER JOIN rt0 ON (((NOT (vt1.c0))) NOT BETWEEN ((('447718920') NOTNULL)) AND (((NULL)-(vt1.c2)))) CROSS JOIN vt0 ON CAST(((((rt0.c3)AND(vt0.c0)))AND(0.2774342228072817)) AS REAL) WHERE ((((+ (((rt0.c3) IS TRUE)))) ISNULL)) GROUP BY rt0.c1, vt1.c3, rt1.c2, rt0.c3, vt1.c1, rt1.c1, rt1.c0, vt1.c0, rt0.c2, vt1.c2;
SELECT rt0.c1, vt1.c3, rt1.c2, rt0.c3, vt1.c1, rt1.c1, rt1.c0, vt1.c0, rt0.c2, vt1.c2 FROM vt1 LEFT OUTER JOIN rt1 ON ((((rt1.c0)IS NOT(rt1.c2)))||('-1040302979')) LEFT OUTER JOIN rt0 ON (((NOT (vt1.c0))) NOT BETWEEN ((('447718920') NOTNULL)) AND (((NULL)-(vt1.c2)))) CROSS JOIN vt0 ON CAST(((((rt0.c3)AND(vt0.c0)))AND(0.2774342228072817)) AS REAL) GROUP BY rt0.c1, vt1.c3, rt1.c2, rt0.c3, vt1.c1, rt1.c1, rt1.c0, vt1.c0, rt0.c2, vt1.c2;
SELECT ALL rt0.c3, vt1.c3, vt1.c0, rt0.c0, rt1.c2, vt0.c0, rt1.c1, rt0.c1, rt0.c2 FROM vt0, vt1, rt1, rt0 GROUP BY rt0.c3, vt1.c3, vt1.c0, rt0.c0, rt1.c2, vt0.c0, rt1.c1, rt0.c1, rt0.c2;
SELECT ALL rt0.c3, vt1.c3, vt1.c0, rt0.c0, rt1.c2, vt0.c0, rt1.c1, rt0.c1, rt0.c2 FROM vt0, vt1, rt1, rt0 GROUP BY rt0.c3, vt1.c3, vt1.c0, rt0.c0, rt1.c2, vt0.c0, rt1.c1, rt0.c1, rt0.c2 HAVING MAX((COUNT(TOTAL(vt1.c2)) IN ())) UNION ALL SELECT rt0.c3, vt1.c3, vt1.c0, rt0.c0, rt1.c2, vt0.c0, rt1.c1, rt0.c1, rt0.c2 FROM vt0, vt1, rt1, rt0 GROUP BY rt0.c3, vt1.c3, vt1.c0, rt0.c0, rt1.c2, vt0.c0, rt1.c1, rt0.c1, rt0.c2 HAVING (NOT (MAX((COUNT(TOTAL(vt1.c2)) IN ())))) UNION ALL SELECT rt0.c3, vt1.c3, vt1.c0, rt0.c0, rt1.c2, vt0.c0, rt1.c1, rt0.c1, rt0.c2 FROM vt0, vt1, rt1, rt0 GROUP BY rt0.c3, vt1.c3, vt1.c0, rt0.c0, rt1.c2, vt0.c0, rt1.c1, rt0.c1, rt0.c2 HAVING ((MAX((COUNT(TOTAL(vt1.c2)) IN ()))) ISNULL);
SELECT ALL rt0.c3, vt1.c3, vt1.c0, rt0.c0, rt1.c2, vt0.c0, rt1.c1, rt0.c1, rt0.c2 FROM vt0, vt1, rt1, rt0 GROUP BY rt0.c3, vt1.c3, vt1.c0, rt0.c0, rt1.c2, vt0.c0, rt1.c1, rt0.c1, rt0.c2;
SELECT ALL rt0.c3, vt1.c3, vt1.c0, rt0.c0, rt1.c2, vt0.c0, rt1.c1, rt0.c1, rt0.c2 FROM vt0, vt1, rt1, rt0 GROUP BY rt0.c3, vt1.c3, vt1.c0, rt0.c0, rt1.c2, vt0.c0, rt1.c1, rt0.c1, rt0.c2 HAVING MAX((COUNT(TOTAL(vt1.c2)) IN ())) UNION ALL SELECT rt0.c3, vt1.c3, vt1.c0, rt0.c0, rt1.c2, vt0.c0, rt1.c1, rt0.c1, rt0.c2 FROM vt0, vt1, rt1, rt0 GROUP BY rt0.c3, vt1.c3, vt1.c0, rt0.c0, rt1.c2, vt0.c0, rt1.c1, rt0.c1, rt0.c2 HAVING (NOT (MAX((COUNT(TOTAL(vt1.c2)) IN ())))) UNION ALL SELECT rt0.c3, vt1.c3, vt1.c0, rt0.c0, rt1.c2, vt0.c0, rt1.c1, rt0.c1, rt0.c2 FROM vt0, vt1, rt1, rt0 GROUP BY rt0.c3, vt1.c3, vt1.c0, rt0.c0, rt1.c2, vt0.c0, rt1.c1, rt0.c1, rt0.c2 HAVING ((MAX((COUNT(TOTAL(vt1.c2)) IN ()))) ISNULL);
SELECT ALL rt0.c3, vt1.c3, vt1.c0, rt0.c0, rt1.c2, vt0.c0, rt1.c1, rt0.c1, rt0.c2 FROM vt0, vt1, rt1, rt0 GROUP BY rt0.c3, vt1.c3, vt1.c0, rt0.c0, rt1.c2, vt0.c0, rt1.c1, rt0.c1, rt0.c2;
SELECT * FROM vt0, rt1;
SELECT ALL * FROM vt0, rt1 WHERE (TOTAL_CHANGES()) UNION ALL SELECT ALL * FROM vt0, rt1 WHERE ((NOT (TOTAL_CHANGES()))) UNION ALL SELECT * FROM vt0, rt1 WHERE (((TOTAL_CHANGES()) ISNULL));
SELECT * FROM vt0, rt1;
SELECT DISTINCT vt1.c2 FROM vt1;
SELECT DISTINCT vt1.c2 FROM vt1 WHERE ((((+ (vt1.c0)))=(((vt1.c2) IS FALSE)))) UNION SELECT DISTINCT vt1.c2 FROM vt1 WHERE ((NOT ((((+ (vt1.c0)))==(((vt1.c2) IS FALSE)))))) UNION SELECT DISTINCT vt1.c2 FROM vt1 WHERE ((((((+ (vt1.c0)))==(((vt1.c2) IS FALSE)))) ISNULL));
SELECT DISTINCT vt1.c2 FROM vt1;
SELECT ALL rt1.c0, rt0.c3, rt1.c2 FROM rt0, rt1, vt0 GROUP BY rt1.c0, rt0.c3, rt1.c2;
SELECT rt1.c0, rt0.c3, rt1.c2 FROM rt0, rt1, vt0 WHERE (((((LOWER(rt1.c2))AND(((rt0.c2)==(vt0.c0)))))AND(rt0.c0))) GROUP BY rt1.c0, rt0.c3, rt1.c2 UNION SELECT rt1.c0, rt0.c3, rt1.c2 FROM rt0, rt1, vt0 WHERE ((NOT (((((LOWER(rt1.c2))AND(((rt0.c2)==(vt0.c0)))))AND(rt0.c0))))) GROUP BY rt1.c0, rt0.c3, rt1.c2 UNION SELECT ALL rt1.c0, rt0.c3, rt1.c2 FROM rt0, rt1, vt0 WHERE (((((((LOWER(rt1.c2))AND(((rt0.c2)==(vt0.c0)))))AND(rt0.c0))) ISNULL)) GROUP BY rt1.c0, rt0.c3, rt1.c2;
SELECT ALL rt1.c0, rt0.c3, rt1.c2 FROM rt0, rt1, vt0 GROUP BY rt1.c0, rt0.c3, rt1.c2;
SELECT ALL vt1.c1, rt0.c1, rt0.c0, rt1.c0 FROM rt0, rt1, vt1 GROUP BY vt1.c1, rt0.c1, rt0.c0, rt1.c0;
SELECT vt1.c1, rt0.c1, rt0.c0, rt1.c0 FROM rt0, rt1, vt1 GROUP BY vt1.c1, rt0.c1, rt0.c0, rt1.c0 HAVING CASE SUM(COUNT(*))  WHEN ((MIN(SUM(rt0.c1)))>(AVG(vt1.c1))) THEN ((((((((MIN(vt1.c3))OR(rt0.c1)))AND(x'')))AND(TOTAL(rt0.c0))))OR(rt0.c0)) ELSE MIN(rt1.c1) END UNION ALL SELECT vt1.c1, rt0.c1, rt0.c0, rt1.c0 FROM rt0, rt1, vt1 GROUP BY vt1.c1, rt0.c1, rt0.c0, rt1.c0 HAVING (NOT (CASE SUM(COUNT(*))  WHEN ((MIN(SUM(rt0.c1)))>(AVG(vt1.c1))) THEN ((((((((MIN(vt1.c3))OR(rt0.c1)))AND(x'')))AND(TOTAL(rt0.c0))))OR(rt0.c0)) ELSE MIN(rt1.c1) END)) UNION ALL SELECT vt1.c1, rt0.c1, rt0.c0, rt1.c0 FROM rt0, rt1, vt1 GROUP BY vt1.c1, rt0.c1, rt0.c0, rt1.c0 HAVING ((CASE SUM(COUNT(*))  WHEN ((MIN(SUM(rt0.c1)))>(AVG(vt1.c1))) THEN ((((((((MIN(vt1.c3))OR(rt0.c1)))AND(x'')))AND(TOTAL(rt0.c0))))OR(rt0.c0)) ELSE MIN(rt1.c1) END) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE ('784445526') UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ('784445526'))) UNION ALL SELECT * FROM rt0 WHERE ((('784445526') ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt1, vt0 NOT INDEXED, rt0, vt1;
SELECT DISTINCT * FROM rt1, vt0, rt0, vt1 WHERE ((- (rt0.c1))) UNION SELECT DISTINCT * FROM rt1, vt0, rt0, vt1 WHERE ((NOT ((- (rt0.c1))))) UNION SELECT DISTINCT * FROM rt1, vt0, rt0, vt1 WHERE ((((- (rt0.c1))) ISNULL));
SELECT DISTINCT * FROM rt1, vt0 NOT INDEXED, rt0, vt1;
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE (x'0b2f') GROUP BY rt1.c1, rt1.c2, rt1.c0 UNION SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE ((NOT (x'0b2f'))) GROUP BY rt1.c1, rt1.c2, rt1.c0 UNION SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE (((x'0b2f') ISNULL)) GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MIN(AVG(MIN(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MIN(AVG(MIN(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN(AVG(MIN(vt0.c0)))) ISNULL);
SELECT * FROM vt1, rt1, rt0, vt0;
SELECT * FROM vt1, rt1, rt0, vt0 WHERE (NULLIF(rt1.c0 COLLATE BINARY, CASE vt1.c3  WHEN vt1.c0 THEN rt1.c1 WHEN vt0.c0 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c1 END)) UNION ALL SELECT * FROM vt1, rt1, rt0, vt0 WHERE ((NOT (NULLIF(rt1.c0 COLLATE BINARY, CASE vt1.c3  WHEN vt1.c0 THEN rt1.c1 WHEN vt0.c0 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c1 END)))) UNION ALL SELECT ALL * FROM vt1, rt1, rt0, vt0 WHERE (((NULLIF(rt1.c0 COLLATE BINARY, CASE vt1.c3  WHEN vt1.c0 THEN rt1.c1 WHEN vt0.c0 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c1 END)) ISNULL));
SELECT * FROM vt1, rt1, rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0, vt1, rt1;
SELECT DISTINCT * FROM rt0, vt0, vt1, rt1 WHERE (ABS(((vt1.c2)/(vt1.c1)))) UNION SELECT DISTINCT * FROM rt0, vt0, vt1, rt1 WHERE ((NOT (ABS(((vt1.c2)/(vt1.c1)))))) UNION SELECT DISTINCT * FROM rt0, vt0, vt1, rt1 WHERE (((ABS(((vt1.c2)/(vt1.c1)))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0, vt1, rt1;
SELECT ALL vt1.c0, vt1.c3, rt1.c2, rt1.c0 FROM rt1 LEFT OUTER JOIN vt1 ON ((((-2118689826) BETWEEN (vt1.c0) AND (vt1.c3))) NOT BETWEEN (vt1.c1) AND ((- (vt1.c2)))) GROUP BY vt1.c0, vt1.c3, rt1.c2, rt1.c0;
SELECT vt1.c0, vt1.c3, rt1.c2, rt1.c0 FROM rt1 LEFT OUTER JOIN vt1 ON ((((-2118689826) BETWEEN (vt1.c0) AND (vt1.c3))) NOT BETWEEN (vt1.c1) AND ((- (vt1.c2)))) WHERE (vt1.c2) GROUP BY vt1.c0, vt1.c3, rt1.c2, rt1.c0 UNION SELECT vt1.c0, vt1.c3, rt1.c2, rt1.c0 FROM rt1 LEFT OUTER JOIN vt1 ON ((((-2118689826) BETWEEN (vt1.c0) AND (vt1.c3))) NOT BETWEEN (vt1.c1) AND ((- (vt1.c2)))) WHERE ((NOT (vt1.c2))) GROUP BY vt1.c0, vt1.c3, rt1.c2, rt1.c0 UNION SELECT vt1.c0, vt1.c3, rt1.c2, rt1.c0 FROM rt1 LEFT OUTER JOIN vt1 ON ((((-2118689826) BETWEEN (vt1.c0) AND (vt1.c3))) NOT BETWEEN (vt1.c1) AND ((- (vt1.c2)))) WHERE (((vt1.c2) ISNULL)) GROUP BY vt1.c0, vt1.c3, rt1.c2, rt1.c0;
SELECT ALL vt1.c0, vt1.c3, rt1.c2, rt1.c0 FROM rt1 LEFT OUTER JOIN vt1 ON ((((-2118689826) BETWEEN (vt1.c0) AND (vt1.c3))) NOT BETWEEN (vt1.c1) AND ((- (vt1.c2)))) GROUP BY vt1.c0, vt1.c3, rt1.c2, rt1.c0;
SELECT ALL vt1.c0, rt0.c3, vt1.c1 FROM rt0, vt0, vt1 GROUP BY vt1.c0, rt0.c3, vt1.c1;
SELECT vt1.c0, rt0.c3, vt1.c1 FROM rt0, vt0, vt1 GROUP BY vt1.c0, rt0.c3, vt1.c1 HAVING MIN((rt0.c2 IN (GROUP_CONCAT(rt0.c2)))) UNION ALL SELECT ALL vt1.c0, rt0.c3, vt1.c1 FROM rt0, vt0, vt1 GROUP BY vt1.c0, rt0.c3, vt1.c1 HAVING (NOT (MIN((rt0.c2 IN (GROUP_CONCAT(rt0.c2)))))) UNION ALL SELECT ALL vt1.c0, rt0.c3, vt1.c1 FROM rt0, vt0, vt1 GROUP BY vt1.c0, rt0.c3, vt1.c1 HAVING ((MIN((rt0.c2 IN (GROUP_CONCAT(rt0.c2))))) ISNULL);
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON ((CASE vt1.c0  WHEN vt1.c1 THEN vt0.c0 ELSE rt0.c3 END) BETWEEN (((rt0.c3)||(rt0.c3))) AND ((NOT (rt0.c2)))) CROSS JOIN vt1 ON (NOT (vt0.c0)) COLLATE NOCASE COLLATE RTRIM;
SELECT DISTINCT vt0.c0, rt1.c1, rt0.c2, rt0.c0, rt0.c3, rt1.c0, rt0.c1, rt1.c2 FROM rt0 LEFT OUTER JOIN rt1 ON CASE (rt0.c1 IN (rt0.c3, vt0.c0))  WHEN 0.4255662752229217 THEN x'' END FULL OUTER JOIN vt0 ON (((rt0.c3)) NOT BETWEEN ((CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt1.c2 THEN '894965791' WHEN rt0.c2 THEN rt1.c2 ELSE rt0.c1 END)) AND ((((((rt0.c2)AND(rt0.c0)))OR(NULL)))));
SELECT vt1.c1, rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY vt1.c1, rt0.c2, rt0.c1;
SELECT vt1.c1, rt0.c2, rt0.c1 FROM rt0, vt1 WHERE (((rt0.c0)LIKE(vt1.c0)) COLLATE NOCASE) GROUP BY vt1.c1, rt0.c2, rt0.c1 UNION SELECT vt1.c1, rt0.c2, rt0.c1 FROM rt0, vt1 WHERE ((NOT (((rt0.c0)LIKE(vt1.c0)) COLLATE NOCASE))) GROUP BY vt1.c1, rt0.c2, rt0.c1 UNION SELECT ALL vt1.c1, rt0.c2, rt0.c1 FROM rt0, vt1 WHERE (((((rt0.c0)LIKE(vt1.c0)) COLLATE NOCASE) ISNULL)) GROUP BY vt1.c1, rt0.c2, rt0.c1;
SELECT vt1.c1, rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY vt1.c1, rt0.c2, rt0.c1;
SELECT vt1.c2, vt1.c1, rt1.c0 FROM vt0, vt1, rt1, rt0 GROUP BY vt1.c2, vt1.c1, rt1.c0;
SELECT ALL vt1.c2, vt1.c1, rt1.c0 FROM vt0, vt1, rt1, rt0 GROUP BY vt1.c2, vt1.c1, rt1.c0 HAVING x'' UNION ALL SELECT vt1.c2, vt1.c1, rt1.c0 FROM vt0, vt1, rt1, rt0 GROUP BY vt1.c2, vt1.c1, rt1.c0 HAVING (NOT (x'')) UNION ALL SELECT vt1.c2, vt1.c1, rt1.c0 FROM vt0, vt1, rt1, rt0 GROUP BY vt1.c2, vt1.c1, rt1.c0 HAVING ((x'') ISNULL);
SELECT vt1.c2, vt1.c1, rt1.c0 FROM vt0, vt1, rt1, rt0 GROUP BY vt1.c2, vt1.c1, rt1.c0;
SELECT ALL vt1.c2, vt1.c1, rt1.c0 FROM vt0, vt1, rt1, rt0 GROUP BY vt1.c2, vt1.c1, rt1.c0 HAVING x'' UNION ALL SELECT vt1.c2, vt1.c1, rt1.c0 FROM vt0, vt1, rt1, rt0 GROUP BY vt1.c2, vt1.c1, rt1.c0 HAVING (NOT (x'')) UNION ALL SELECT vt1.c2, vt1.c1, rt1.c0 FROM vt0, vt1, rt1, rt0 GROUP BY vt1.c2, vt1.c1, rt1.c0 HAVING ((x'') ISNULL);
SELECT vt1.c2, vt1.c1, rt1.c0 FROM vt0, vt1, rt1, rt0 GROUP BY vt1.c2, vt1.c1, rt1.c0;
SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0;
SELECT rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0 WHERE (((((NOT (rt0.c2))))>=((rt0.c3 COLLATE NOCASE)))) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((((NOT (rt0.c2))))>=((rt0.c3 COLLATE NOCASE)))))) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0 WHERE (((((((NOT (rt0.c2))))>=((rt0.c3 COLLATE NOCASE)))) ISNULL));
SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt1 CROSS JOIN rt0 ON CAST(CHANGES() AS BLOB);
SELECT DISTINCT * FROM rt1 CROSS JOIN rt0 ON CAST(CHANGES() AS BLOB) WHERE (CASE (((rt0.c2))<>((rt0.c3)))  WHEN ((((6.35716717E8)OR(rt1.c2)))AND(rt1.c0)) THEN (((rt0.c1, rt1.c2, rt1.c1)) NOT BETWEEN ((rt0.c0, rt1.c2, rt0.c0)) AND ((rt1.c1, rt1.c2, rt1.c1))) ELSE ((rt0.c3) NOTNULL) END) UNION SELECT DISTINCT * FROM rt1 CROSS JOIN rt0 ON CAST(CHANGES() AS BLOB) WHERE ((NOT (CASE (((rt0.c2))<>((rt0.c3)))  WHEN ((((6.35716717E8)OR(rt1.c2)))AND(rt1.c0)) THEN (((rt0.c1, rt1.c2, rt1.c1)) NOT BETWEEN ((rt0.c0, rt1.c2, rt0.c0)) AND ((rt1.c1, rt1.c2, rt1.c1))) ELSE ((rt0.c3) NOTNULL) END))) UNION SELECT DISTINCT * FROM rt1 CROSS JOIN rt0 ON CAST(CHANGES() AS BLOB) WHERE (((CASE (((rt0.c2))!=((rt0.c3)))  WHEN ((((6.35716717E8)OR(rt1.c2)))AND(rt1.c0)) THEN (((rt0.c1, rt1.c2, rt1.c1)) NOT BETWEEN ((rt0.c0, rt1.c2, rt0.c0)) AND ((rt1.c1, rt1.c2, rt1.c1))) ELSE ((rt0.c3) NOTNULL) END) ISNULL));
SELECT DISTINCT * FROM rt1 CROSS JOIN rt0 ON CAST(CHANGES() AS BLOB);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (CAST(((vt0.c0)IS NOT(vt0.c0)) AS REAL)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CAST(((vt0.c0)IS NOT(vt0.c0)) AS REAL)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((CAST(((vt0.c0)IS NOT(vt0.c0)) AS REAL)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt1.c3, vt1.c2, vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c3, vt1.c2, vt1.c1, vt1.c0;
SELECT vt1.c3, vt1.c2, vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c3, vt1.c2, vt1.c1, vt1.c0 HAVING MAX(MIN(MAX(vt1.c2))) UNION ALL SELECT ALL vt1.c3, vt1.c2, vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c3, vt1.c2, vt1.c1, vt1.c0 HAVING (NOT (MAX(MIN(MAX(vt1.c2))))) UNION ALL SELECT ALL vt1.c3, vt1.c2, vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c3, vt1.c2, vt1.c1, vt1.c0 HAVING ((MAX(MIN(MAX(vt1.c2)))) ISNULL);
SELECT * FROM rt1, vt1 FULL OUTER JOIN rt0 ON (((CAST(rt0.c3 AS REAL)))>((CASE vt1.c0  WHEN rt1.c0 THEN vt1.c0 WHEN rt1.c2 THEN rt0.c3 WHEN rt1.c2 THEN vt1.c1 ELSE rt1.c2 END))) RIGHT OUTER JOIN vt0 ON (((rt0.c0)IS NOT(rt0.c3)) IN ((((rt1.c0))<>((vt1.c2)))));
SELECT ALL * FROM rt1, vt1 FULL OUTER JOIN rt0 ON (((CAST(rt0.c3 AS REAL)))>((CASE vt1.c0  WHEN rt1.c0 THEN vt1.c0 WHEN rt1.c2 THEN rt0.c3 WHEN rt1.c2 THEN vt1.c1 ELSE rt1.c2 END))) RIGHT OUTER JOIN vt0 ON (((rt0.c0)IS NOT(rt0.c3)) IN ((((rt1.c0))!=((vt1.c2))))) WHERE ((((vt0.c0) NOT BETWEEN (rt1.c0) AND (rt0.c3)) IN ())) UNION ALL SELECT ALL * FROM rt1, vt1 FULL OUTER JOIN rt0 ON (((CAST(rt0.c3 AS REAL)))>((CASE vt1.c0  WHEN rt1.c0 THEN vt1.c0 WHEN rt1.c2 THEN rt0.c3 WHEN rt1.c2 THEN vt1.c1 ELSE rt1.c2 END))) RIGHT OUTER JOIN vt0 ON (((rt0.c0)IS NOT(rt0.c3)) IN ((((rt1.c0))<>((vt1.c2))))) WHERE ((NOT ((((vt0.c0) NOT BETWEEN (rt1.c0) AND (rt0.c3)) IN ())))) UNION ALL SELECT ALL * FROM rt1, vt1 FULL OUTER JOIN rt0 ON (((CAST(rt0.c3 AS REAL)))>((CASE vt1.c0  WHEN rt1.c0 THEN vt1.c0 WHEN rt1.c2 THEN rt0.c3 WHEN rt1.c2 THEN vt1.c1 ELSE rt1.c2 END))) RIGHT OUTER JOIN vt0 ON (((rt0.c0)IS NOT(rt0.c3)) IN ((((rt1.c0))!=((vt1.c2))))) WHERE ((((((vt0.c0) NOT BETWEEN (rt1.c0) AND (rt0.c3)) IN ())) ISNULL));
SELECT * FROM rt1, vt1 FULL OUTER JOIN rt0 ON (((CAST(rt0.c3 AS REAL)))>((CASE vt1.c0  WHEN rt1.c0 THEN vt1.c0 WHEN rt1.c2 THEN rt0.c3 WHEN rt1.c2 THEN vt1.c1 ELSE rt1.c2 END))) RIGHT OUTER JOIN vt0 ON (((rt0.c0)IS NOT(rt0.c3)) IN ((((rt1.c0))<>((vt1.c2)))));
SELECT DISTINCT rt1.c2, rt0.c1, vt0.c0, rt0.c2, rt1.c1, rt1.c0, rt0.c0 FROM rt0 LEFT OUTER JOIN rt1 ON LOWER((rt0.c1 IN ())) LEFT OUTER JOIN vt0 ON (((((rt1.c0)AND(rt0.c3)))AND(vt0.c0)) IN ());
SELECT DISTINCT rt1.c2, rt0.c1, vt0.c0, rt0.c2, rt1.c1, rt1.c0, rt0.c0 FROM rt0 LEFT OUTER JOIN rt1 ON LOWER((rt0.c1 IN ())) LEFT OUTER JOIN vt0 ON (((((rt1.c0)AND(rt0.c3)))AND(vt0.c0)) IN ()) WHERE (CAST((+ (rt1.c1)) AS TEXT)) UNION SELECT DISTINCT rt1.c2, rt0.c1, vt0.c0, rt0.c2, rt1.c1, rt1.c0, rt0.c0 FROM rt0 LEFT OUTER JOIN rt1 ON LOWER((rt0.c1 IN ())) LEFT OUTER JOIN vt0 ON (((((rt1.c0)AND(rt0.c3)))AND(vt0.c0)) IN ()) WHERE ((NOT (CAST((+ (rt1.c1)) AS TEXT)))) UNION SELECT DISTINCT rt1.c2, rt0.c1, vt0.c0, rt0.c2, rt1.c1, rt1.c0, rt0.c0 FROM rt0 LEFT OUTER JOIN rt1 ON LOWER((rt0.c1 IN ())) LEFT OUTER JOIN vt0 ON (((((rt1.c0)AND(rt0.c3)))AND(vt0.c0)) IN ()) WHERE (((CAST((+ (rt1.c1)) AS TEXT)) ISNULL));
SELECT DISTINCT rt1.c2, rt0.c1, vt0.c0, rt0.c2, rt1.c1, rt1.c0, rt0.c0 FROM rt0 LEFT OUTER JOIN rt1 ON LOWER((rt0.c1 IN ())) LEFT OUTER JOIN vt0 ON (((((rt1.c0)AND(rt0.c3)))AND(vt0.c0)) IN ());
SELECT ALL rt0.c1, rt1.c1, rt0.c2, vt1.c1, vt1.c2, rt1.c0, rt1.c2, vt1.c0, vt1.c3, rt0.c0 FROM rt1, rt0, vt1 GROUP BY rt0.c1, rt1.c1, rt0.c2, vt1.c1, vt1.c2, rt1.c0, rt1.c2, vt1.c0, vt1.c3, rt0.c0;
SELECT rt0.c1, rt1.c1, rt0.c2, vt1.c1, vt1.c2, rt1.c0, rt1.c2, vt1.c0, vt1.c3, rt0.c0 FROM rt1, rt0, vt1 WHERE (rt0.c3) GROUP BY rt0.c1, rt1.c1, rt0.c2, vt1.c1, vt1.c2, rt1.c0, rt1.c2, vt1.c0, vt1.c3, rt0.c0 UNION SELECT ALL rt0.c1, rt1.c1, rt0.c2, vt1.c1, vt1.c2, rt1.c0, rt1.c2, vt1.c0, vt1.c3, rt0.c0 FROM rt1, rt0, vt1 WHERE ((NOT (rt0.c3))) GROUP BY rt0.c1, rt1.c1, rt0.c2, vt1.c1, vt1.c2, rt1.c0, rt1.c2, vt1.c0, vt1.c3, rt0.c0 UNION SELECT rt0.c1, rt1.c1, rt0.c2, vt1.c1, vt1.c2, rt1.c0, rt1.c2, vt1.c0, vt1.c3, rt0.c0 FROM rt1, rt0, vt1 WHERE (((rt0.c3) ISNULL)) GROUP BY rt0.c1, rt1.c1, rt0.c2, vt1.c1, vt1.c2, rt1.c0, rt1.c2, vt1.c0, vt1.c3, rt0.c0;
SELECT ALL rt0.c1, rt1.c1, rt0.c2, vt1.c1, vt1.c2, rt1.c0, rt1.c2, vt1.c0, vt1.c3, rt0.c0 FROM rt1, rt0, vt1 GROUP BY rt0.c1, rt1.c1, rt0.c2, vt1.c1, vt1.c2, rt1.c0, rt1.c2, vt1.c0, vt1.c3, rt0.c0;
SELECT ALL rt1.c1, rt0.c3, rt1.c0, rt0.c0, rt1.c2, rt0.c1, rt0.c2 FROM rt1, rt0 GROUP BY rt1.c1, rt0.c3, rt1.c0, rt0.c0, rt1.c2, rt0.c1, rt0.c2;
SELECT ALL rt1.c1, rt0.c3, rt1.c0, rt0.c0, rt1.c2, rt0.c1, rt0.c2 FROM rt1, rt0 GROUP BY rt1.c1, rt0.c3, rt1.c0, rt0.c0, rt1.c2, rt0.c1, rt0.c2 HAVING GROUP_CONCAT(MAX(rt0.c3)) UNION ALL SELECT ALL rt1.c1, rt0.c3, rt1.c0, rt0.c0, rt1.c2, rt0.c1, rt0.c2 FROM rt1, rt0 GROUP BY rt1.c1, rt0.c3, rt1.c0, rt0.c0, rt1.c2, rt0.c1, rt0.c2 HAVING (NOT (GROUP_CONCAT(MAX(rt0.c3)))) UNION ALL SELECT ALL rt1.c1, rt0.c3, rt1.c0, rt0.c0, rt1.c2, rt0.c1, rt0.c2 FROM rt1, rt0 GROUP BY rt1.c1, rt0.c3, rt1.c0, rt0.c0, rt1.c2, rt0.c1, rt0.c2 HAVING ((GROUP_CONCAT(MAX(rt0.c3))) ISNULL);
SELECT rt1.c1, vt1.c0, rt1.c0, vt1.c1, vt1.c3, vt1.c2 FROM vt1 NATURAL JOIN rt1;
SELECT rt1.c1, vt1.c0, rt1.c0, vt1.c1, vt1.c3, vt1.c2 FROM vt1 NATURAL JOIN rt1 WHERE (8.94965791E8) UNION ALL SELECT rt1.c1, vt1.c0, rt1.c0, vt1.c1, vt1.c3, vt1.c2 FROM vt1 NATURAL JOIN rt1 WHERE ((NOT (8.94965791E8))) UNION ALL SELECT ALL rt1.c1, vt1.c0, rt1.c0, vt1.c1, vt1.c3, vt1.c2 FROM vt1 NATURAL JOIN rt1 WHERE (((8.94965791E8) ISNULL));
SELECT rt1.c1, vt1.c0, rt1.c0, vt1.c1, vt1.c3, vt1.c2 FROM vt1 NATURAL JOIN rt1;
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE (((((((((((vt1.c3)LIKE(rt0.c3)))OR(NULL)))OR(((vt1.c1) BETWEEN (x'') AND (rt0.c3)))))OR((rt0.c1 IN ()))))OR((~ (x''))))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT (((((((((((vt1.c3)LIKE(rt0.c3)))OR(NULL)))OR(((vt1.c1) BETWEEN (x'') AND (rt0.c3)))))OR((rt0.c1 IN ()))))OR((~ (x''))))))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE (((((((((((((vt1.c3)LIKE(rt0.c3)))OR(NULL)))OR(((vt1.c1) BETWEEN (x'') AND (rt0.c3)))))OR((rt0.c1 IN ()))))OR((~ (x''))))) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT ALL vt1.c0 FROM rt0, vt1, rt1, vt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM rt0, vt1, rt1, vt0 WHERE (((((((vt0.c0)AND(vt1.c2)))AND(rt0.c0)))%(TRIM(vt1.c1)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM rt0, vt1, rt1, vt0 WHERE ((NOT (((((((vt0.c0)AND(vt1.c2)))AND(rt0.c0)))%(TRIM(vt1.c1)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM rt0, vt1, rt1, vt0 WHERE (((((((((vt0.c0)AND(vt1.c2)))AND(rt0.c0)))%(TRIM(vt1.c1)))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM rt0, vt1, rt1, vt0 GROUP BY vt1.c0;
SELECT rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2 HAVING ((CASE WHEN MIN(GROUP_CONCAT(MIN(rt0.c1))) THEN GROUP_CONCAT(TOTAL(GROUP_CONCAT(vt0.c0))) WHEN MAX(MAX(rt0.c1)) THEN AVG(COUNT(rt0.c1)) WHEN MIN(rt0.c1) THEN x'' END) NOT NULL) UNION ALL SELECT ALL rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2 HAVING (NOT (((CASE WHEN MIN(GROUP_CONCAT(MIN(rt0.c1))) THEN GROUP_CONCAT(TOTAL(GROUP_CONCAT(vt0.c0))) WHEN MAX(MAX(rt0.c1)) THEN AVG(COUNT(rt0.c1)) WHEN MIN(rt0.c1) THEN x'' END) NOT NULL))) UNION ALL SELECT ALL rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2 HAVING ((((CASE WHEN MIN(GROUP_CONCAT(MIN(rt0.c1))) THEN GROUP_CONCAT(TOTAL(GROUP_CONCAT(vt0.c0))) WHEN MAX(MAX(rt0.c1)) THEN AVG(COUNT(rt0.c1)) WHEN MIN(rt0.c1) THEN x'' END) NOT NULL)) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((rt0.c3 COLLATE RTRIM)IS NOT(((NULL)>(rt0.c1))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((rt0.c3 COLLATE RTRIM)IS NOT(((NULL)>(rt0.c1))))))) UNION ALL SELECT * FROM rt0 WHERE (((((rt0.c3 COLLATE RTRIM)IS NOT(((NULL)>(rt0.c1))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT vt1.c2, vt1.c0, rt1.c1, vt0.c0, rt0.c2, vt1.c3, rt0.c3, rt0.c0, rt1.c0, rt1.c2, vt1.c1 FROM rt1, rt0, vt1, vt0;
SELECT DISTINCT vt1.c2, vt1.c0, rt1.c1, vt0.c0, rt0.c2, vt1.c3, rt0.c3, rt0.c0, rt1.c0, rt1.c2, vt1.c1 FROM rt1, rt0, vt1, vt0 WHERE ((((((((rt1.c2)AND(vt1.c2)))OR(x''))))>=((CASE vt1.c0  WHEN rt1.c2 THEN vt1.c1 ELSE rt0.c3 END)))) UNION SELECT DISTINCT vt1.c2, vt1.c0, rt1.c1, vt0.c0, rt0.c2, vt1.c3, rt0.c3, rt0.c0, rt1.c0, rt1.c2, vt1.c1 FROM rt1, rt0, vt1, vt0 WHERE ((NOT ((((((((rt1.c2)AND(vt1.c2)))OR(x''))))>=((CASE vt1.c0  WHEN rt1.c2 THEN vt1.c1 ELSE rt0.c3 END)))))) UNION SELECT DISTINCT vt1.c2, vt1.c0, rt1.c1, vt0.c0, rt0.c2, vt1.c3, rt0.c3, rt0.c0, rt1.c0, rt1.c2, vt1.c1 FROM rt1, rt0, vt1, vt0 WHERE ((((((((((rt1.c2)AND(vt1.c2)))OR(x''))))>=((CASE vt1.c0  WHEN rt1.c2 THEN vt1.c1 ELSE rt0.c3 END)))) ISNULL));
SELECT DISTINCT vt1.c2, vt1.c0, rt1.c1, vt0.c0, rt0.c2, vt1.c3, rt0.c3, rt0.c0, rt1.c0, rt1.c2, vt1.c1 FROM rt1, rt0, vt1, vt0;
SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt1 WHERE (CASE rt1.c2  WHEN (((rt1.c2, rt1.c2, '-560713685', rt1.c1, rt1.c0))<((rt1.c0, rt1.c2, rt1.c2, rt1.c2, rt1.c2))) THEN (((rt1.c0, rt1.c2, rt1.c2))<>((NULL, rt1.c0, rt1.c0))) WHEN ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c0)) THEN ((rt1.c1) IS TRUE) WHEN ((rt1.c1) ISNULL) THEN ((((rt1.c1)AND(rt1.c2)))OR(rt1.c0)) ELSE 0.16140401802260607 END) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM rt1 WHERE ((NOT (CASE rt1.c2  WHEN (((rt1.c2, rt1.c2, '-560713685', rt1.c1, rt1.c0))<((rt1.c0, rt1.c2, rt1.c2, rt1.c2, rt1.c2))) THEN (((rt1.c0, rt1.c2, rt1.c2))<>((NULL, rt1.c0, rt1.c0))) WHEN ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c0)) THEN ((rt1.c1) IS TRUE) WHEN ((rt1.c1) ISNULL) THEN ((((rt1.c1)AND(rt1.c2)))OR(rt1.c0)) ELSE 0.16140401802260607 END))) GROUP BY rt1.c1 UNION SELECT rt1.c1 FROM rt1 WHERE (((CASE rt1.c2  WHEN (((rt1.c2, rt1.c2, '-560713685', rt1.c1, rt1.c0))<((rt1.c0, rt1.c2, rt1.c2, rt1.c2, rt1.c2))) THEN (((rt1.c0, rt1.c2, rt1.c2))<>((NULL, rt1.c0, rt1.c0))) WHEN ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c0)) THEN ((rt1.c1) IS TRUE) WHEN ((rt1.c1) ISNULL) THEN ((((rt1.c1)AND(rt1.c2)))OR(rt1.c0)) ELSE 0.16140401802260607 END) ISNULL)) GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT ALL rt1.c1, rt0.c0, rt0.c2, rt1.c2, vt1.c0, rt0.c3 FROM rt0, rt1, vt1 LEFT OUTER JOIN vt0 ON CHANGES() GROUP BY rt1.c1, rt0.c0, rt0.c2, rt1.c2, vt1.c0, rt0.c3;
SELECT rt1.c1, rt0.c0, rt0.c2, rt1.c2, vt1.c0, rt0.c3 FROM rt0, rt1, vt1 LEFT OUTER JOIN vt0 ON CHANGES() GROUP BY rt1.c1, rt0.c0, rt0.c2, rt1.c2, vt1.c0, rt0.c3 HAVING COUNT('0.43574334257407354') UNION ALL SELECT rt1.c1, rt0.c0, rt0.c2, rt1.c2, vt1.c0, rt0.c3 FROM rt0, rt1, vt1 LEFT OUTER JOIN vt0 ON CHANGES() GROUP BY rt1.c1, rt0.c0, rt0.c2, rt1.c2, vt1.c0, rt0.c3 HAVING (NOT (COUNT('0.43574334257407354'))) UNION ALL SELECT ALL rt1.c1, rt0.c0, rt0.c2, rt1.c2, vt1.c0, rt0.c3 FROM rt0, rt1, vt1 LEFT OUTER JOIN vt0 ON CHANGES() GROUP BY rt1.c1, rt0.c0, rt0.c2, rt1.c2, vt1.c0, rt0.c3 HAVING ((COUNT('0.43574334257407354')) ISNULL);
SELECT ALL rt1.c1, rt0.c0, rt0.c2, rt1.c2, vt1.c0, rt0.c3 FROM rt0, rt1, vt1 LEFT OUTER JOIN vt0 ON CHANGES() GROUP BY rt1.c1, rt0.c0, rt0.c2, rt1.c2, vt1.c0, rt0.c3;
SELECT rt1.c1, rt0.c0, rt0.c2, rt1.c2, vt1.c0, rt0.c3 FROM rt0, rt1, vt1 LEFT OUTER JOIN vt0 ON CHANGES() GROUP BY rt1.c1, rt0.c0, rt0.c2, rt1.c2, vt1.c0, rt0.c3 HAVING COUNT('0.43574334257407354') UNION ALL SELECT rt1.c1, rt0.c0, rt0.c2, rt1.c2, vt1.c0, rt0.c3 FROM rt0, rt1, vt1 LEFT OUTER JOIN vt0 ON CHANGES() GROUP BY rt1.c1, rt0.c0, rt0.c2, rt1.c2, vt1.c0, rt0.c3 HAVING (NOT (COUNT('0.43574334257407354'))) UNION ALL SELECT ALL rt1.c1, rt0.c0, rt0.c2, rt1.c2, vt1.c0, rt0.c3 FROM rt0, rt1, vt1 LEFT OUTER JOIN vt0 ON CHANGES() GROUP BY rt1.c1, rt0.c0, rt0.c2, rt1.c2, vt1.c0, rt0.c3 HAVING ((COUNT('0.43574334257407354')) ISNULL);
SELECT ALL rt1.c1, rt0.c0, rt0.c2, rt1.c2, vt1.c0, rt0.c3 FROM rt0, rt1, vt1 LEFT OUTER JOIN vt0 ON CHANGES() GROUP BY rt1.c1, rt0.c0, rt0.c2, rt1.c2, vt1.c0, rt0.c3;
SELECT * FROM vt0, rt1;
SELECT * FROM vt0, rt1 WHERE (((((~ (vt0.c0)), LIKELIHOOD(rt1.c0, 0.20064548553574557), CASE WHEN rt1.c0 THEN rt1.c2 WHEN x'' THEN vt0.c0 WHEN rt1.c1 THEN rt1.c1 ELSE vt0.c0 END))<>((CASE WHEN rt1.c0 THEN vt0.c0 ELSE rt1.c0 END, ((rt1.c0)<>(vt0.c0)), (rt1.c0 IN (rt1.c0)))))) UNION ALL SELECT ALL * FROM vt0, rt1 WHERE ((NOT (((((~ (vt0.c0)), LIKELIHOOD(rt1.c0, 0.20064548553574557), CASE WHEN rt1.c0 THEN rt1.c2 WHEN x'' THEN vt0.c0 WHEN rt1.c1 THEN rt1.c1 ELSE vt0.c0 END))!=((CASE WHEN rt1.c0 THEN vt0.c0 ELSE rt1.c0 END, ((rt1.c0)!=(vt0.c0)), (rt1.c0 IN (rt1.c0)))))))) UNION ALL SELECT ALL * FROM vt0, rt1 WHERE (((((((~ (vt0.c0)), LIKELIHOOD(rt1.c0, 0.20064548553574557), CASE WHEN rt1.c0 THEN rt1.c2 WHEN x'' THEN vt0.c0 WHEN rt1.c1 THEN rt1.c1 ELSE vt0.c0 END))!=((CASE WHEN rt1.c0 THEN vt0.c0 ELSE rt1.c0 END, ((rt1.c0)!=(vt0.c0)), (rt1.c0 IN (rt1.c0)))))) ISNULL));
SELECT * FROM vt0, rt1;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((vt0.c0)||((+ (vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0)||((+ (vt0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((vt0.c0)||((+ (vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt1.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT vt1.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt1 WHERE (CASE WHEN (x'' IN ()) THEN (((rt0.c3)) BETWEEN ((vt1.c0)) AND ((rt0.c3))) END) GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c1 UNION SELECT vt1.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt1 WHERE ((NOT (CASE WHEN (x'' IN ()) THEN (((rt0.c3)) BETWEEN ((vt1.c0)) AND ((rt0.c3))) END))) GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL vt1.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt1 WHERE (((CASE WHEN (x'' IN ()) THEN (((rt0.c3)) BETWEEN ((vt1.c0)) AND ((rt0.c3))) END) ISNULL)) GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT ALL vt1.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1;
SELECT rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1 HAVING CHANGES() UNION ALL SELECT rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1 HAVING (NOT (CHANGES())) UNION ALL SELECT ALL rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1 HAVING ((CHANGES()) ISNULL);
SELECT ALL rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1;
SELECT rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1 HAVING CHANGES() UNION ALL SELECT rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1 HAVING (NOT (CHANGES())) UNION ALL SELECT ALL rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1 HAVING ((CHANGES()) ISNULL);
SELECT ALL rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1;
SELECT ALL vt0.c0, rt0.c3, rt1.c2 FROM rt0 RIGHT OUTER JOIN vt0 ON ((((rt0.c0)AND(rt0.c3)))AND(rt0.c1)) COLLATE BINARY RIGHT OUTER JOIN rt1 ON CASE WHEN rt1.c2 THEN rt0.c1 END COLLATE NOCASE;
SELECT ALL vt0.c0, rt0.c3, rt1.c2 FROM rt0 RIGHT OUTER JOIN vt0 ON ((((rt0.c0)AND(rt0.c3)))AND(rt0.c1)) COLLATE BINARY RIGHT OUTER JOIN rt1 ON CASE WHEN rt1.c2 THEN rt0.c1 END COLLATE NOCASE WHERE (NULL) UNION ALL SELECT ALL vt0.c0, rt0.c3, rt1.c2 FROM rt0 RIGHT OUTER JOIN vt0 ON ((((rt0.c0)AND(rt0.c3)))AND(rt0.c1)) COLLATE BINARY RIGHT OUTER JOIN rt1 ON CASE WHEN rt1.c2 THEN rt0.c1 END COLLATE NOCASE WHERE ((NOT (NULL))) UNION ALL SELECT vt0.c0, rt0.c3, rt1.c2 FROM rt0 RIGHT OUTER JOIN vt0 ON ((((rt0.c0)AND(rt0.c3)))AND(rt0.c1)) COLLATE BINARY RIGHT OUTER JOIN rt1 ON CASE WHEN rt1.c2 THEN rt0.c1 END COLLATE NOCASE WHERE (((NULL) ISNULL));
SELECT ALL vt0.c0, rt0.c3, rt1.c2 FROM rt0 RIGHT OUTER JOIN vt0 ON ((((rt0.c0)AND(rt0.c3)))AND(rt0.c1)) COLLATE BINARY RIGHT OUTER JOIN rt1 ON CASE WHEN rt1.c2 THEN rt0.c1 END COLLATE NOCASE;
SELECT DISTINCT rt1.c0 FROM rt1;
SELECT DISTINCT rt1.c0 FROM rt1 WHERE (rt1.c2 COLLATE NOCASE) UNION SELECT DISTINCT rt1.c0 FROM rt1 WHERE ((NOT (rt1.c2 COLLATE NOCASE))) UNION SELECT DISTINCT rt1.c0 FROM rt1 WHERE (((rt1.c2 COLLATE NOCASE) ISNULL));
SELECT DISTINCT rt1.c0 FROM rt1;
SELECT vt1.c3 FROM rt0, vt1, vt0 CROSS JOIN rt1 ON ((rt1.c0) BETWEEN (rt1.c2) AND (NULL)) COLLATE RTRIM GROUP BY vt1.c3;
SELECT ALL vt1.c3 FROM rt0, vt1, vt0 CROSS JOIN rt1 ON ((rt1.c0) BETWEEN (rt1.c2) AND (NULL)) COLLATE RTRIM WHERE (rt0.c1) GROUP BY vt1.c3 UNION SELECT ALL vt1.c3 FROM rt0 NOT INDEXED, vt1, vt0 CROSS JOIN rt1 ON ((rt1.c0) BETWEEN (rt1.c2) AND (NULL)) COLLATE RTRIM WHERE ((NOT (rt0.c1))) GROUP BY vt1.c3 UNION SELECT vt1.c3 FROM rt0, vt1, vt0 CROSS JOIN rt1 ON ((rt1.c0) BETWEEN (rt1.c2) AND (NULL)) COLLATE RTRIM WHERE (((rt0.c1) ISNULL)) GROUP BY vt1.c3;
SELECT vt1.c3 FROM rt0, vt1, vt0 CROSS JOIN rt1 ON ((rt1.c0) BETWEEN (rt1.c2) AND (NULL)) COLLATE RTRIM GROUP BY vt1.c3;
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING ((CAST(GROUP_CONCAT(SUM(COUNT(*))) AS REAL))LIKE(MAX(COUNT(*)))) UNION ALL SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING (NOT (((CAST(GROUP_CONCAT(SUM(COUNT(*))) AS REAL))LIKE(MAX(COUNT(*)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING ((((CAST(GROUP_CONCAT(SUM(COUNT(*))) AS REAL))LIKE(MAX(COUNT(*))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((((((((vt0.c0) NOTNULL))AND((((vt0.c0))<=((vt0.c0))))))AND(((vt0.c0)IS NOT(vt0.c0)))))OR(vt0.c0 COLLATE NOCASE)))OR(((vt0.c0)>(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((((((((vt0.c0) NOTNULL))AND((((vt0.c0))<=((vt0.c0))))))AND(((vt0.c0)IS NOT(vt0.c0)))))OR(vt0.c0 COLLATE NOCASE)))OR(((vt0.c0)>(vt0.c0))))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((((((((((vt0.c0) NOTNULL))AND((((vt0.c0))<=((vt0.c0))))))AND(((vt0.c0)IS NOT(vt0.c0)))))OR(vt0.c0 COLLATE NOCASE)))OR(((vt0.c0)>(vt0.c0))))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT rt0.c0, vt0.c0, vt1.c0, vt1.c1, rt0.c2, vt1.c3, rt0.c3, vt1.c2, rt1.c0, rt1.c2, rt0.c1 FROM rt1, rt0, vt1, vt0;
SELECT DISTINCT rt0.c0, vt0.c0, vt1.c0, vt1.c1, rt0.c2, vt1.c3, rt0.c3, vt1.c2, rt1.c0, rt1.c2, rt0.c1 FROM rt1, rt0, vt1, vt0 WHERE (((((0.7916184948685014) IS TRUE)) ISNULL)) UNION SELECT DISTINCT rt0.c0, vt0.c0, vt1.c0, vt1.c1, rt0.c2, vt1.c3, rt0.c3, vt1.c2, rt1.c0, rt1.c2, rt0.c1 FROM rt1, rt0, vt1, vt0 WHERE ((NOT (((((0.7916184948685014) IS TRUE)) ISNULL)))) UNION SELECT DISTINCT rt0.c0, vt0.c0, vt1.c0, vt1.c1, rt0.c2, vt1.c3, rt0.c3, vt1.c2, rt1.c0, rt1.c2, rt0.c1 FROM rt1, rt0, vt1, vt0 WHERE (((((((0.7916184948685014) IS TRUE)) ISNULL)) ISNULL));
SELECT DISTINCT rt0.c0, vt0.c0, vt1.c0, vt1.c1, rt0.c2, vt1.c3, rt0.c3, vt1.c2, rt1.c0, rt1.c2, rt0.c1 FROM rt1, rt0, vt1, vt0;
SELECT vt1.c2, vt1.c3, rt1.c1, rt1.c0, vt1.c0 FROM vt1 LEFT OUTER JOIN rt1 ON ((((rt1.c2)>=(vt1.c3)))*(((rt1.c2)>=(vt1.c3)))) GROUP BY vt1.c2, vt1.c3, rt1.c1, rt1.c0, vt1.c0;
SELECT vt1.c2, vt1.c3, rt1.c1, rt1.c0, vt1.c0 FROM vt1 LEFT OUTER JOIN rt1 ON ((((rt1.c2)>=(vt1.c3)))*(((rt1.c2)>=(vt1.c3)))) WHERE (((+ (rt1.c2)) IN ())) GROUP BY vt1.c2, vt1.c3, rt1.c1, rt1.c0, vt1.c0 UNION SELECT vt1.c2, vt1.c3, rt1.c1, rt1.c0, vt1.c0 FROM vt1 LEFT OUTER JOIN rt1 ON ((((rt1.c2)>=(vt1.c3)))*(((rt1.c2)>=(vt1.c3)))) WHERE ((NOT (((+ (rt1.c2)) IN ())))) GROUP BY vt1.c2, vt1.c3, rt1.c1, rt1.c0, vt1.c0 UNION SELECT ALL vt1.c2, vt1.c3, rt1.c1, rt1.c0, vt1.c0 FROM vt1 LEFT OUTER JOIN rt1 ON ((((rt1.c2)>=(vt1.c3)))*(((rt1.c2)>=(vt1.c3)))) WHERE (((((+ (rt1.c2)) IN ())) ISNULL)) GROUP BY vt1.c2, vt1.c3, rt1.c1, rt1.c0, vt1.c0;
SELECT vt1.c2, vt1.c3, rt1.c1, rt1.c0, vt1.c0 FROM vt1 LEFT OUTER JOIN rt1 ON ((((rt1.c2)>=(vt1.c3)))*(((rt1.c2)>=(vt1.c3)))) GROUP BY vt1.c2, vt1.c3, rt1.c1, rt1.c0, vt1.c0;
SELECT ALL vt1.c1, rt0.c0, vt0.c0, rt0.c2, rt1.c1, vt1.c0, rt1.c0 FROM vt1, rt1 FULL OUTER JOIN rt0 ON 0.3033897677481574 CROSS JOIN vt0 ON CAST(vt1.c2 AS BLOB) COLLATE BINARY GROUP BY vt1.c1, rt0.c0, vt0.c0, rt0.c2, rt1.c1, vt1.c0, rt1.c0;
SELECT ALL vt1.c1, rt0.c0, vt0.c0, rt0.c2, rt1.c1, vt1.c0, rt1.c0 FROM vt1, rt1 FULL OUTER JOIN rt0 ON 0.3033897677481574 CROSS JOIN vt0 ON CAST(vt1.c2 AS BLOB) COLLATE BINARY GROUP BY vt1.c1, rt0.c0, vt0.c0, rt0.c2, rt1.c1, vt1.c0, rt1.c0 HAVING AVG(CASE vt1.c2  WHEN vt1.c2 THEN COUNT(MAX(NULL)) ELSE TOTAL(MAX(MAX(AVG(SUM(rt0.c0))))) END) UNION ALL SELECT vt1.c1, rt0.c0, vt0.c0, rt0.c2, rt1.c1, vt1.c0, rt1.c0 FROM vt1, rt1 FULL OUTER JOIN rt0 ON 0.3033897677481574 CROSS JOIN vt0 ON CAST(vt1.c2 AS BLOB) COLLATE BINARY GROUP BY vt1.c1, rt0.c0, vt0.c0, rt0.c2, rt1.c1, vt1.c0, rt1.c0 HAVING (NOT (AVG(CASE vt1.c2  WHEN vt1.c2 THEN COUNT(MAX(NULL)) ELSE TOTAL(MAX(MAX(AVG(SUM(rt0.c0))))) END))) UNION ALL SELECT ALL vt1.c1, rt0.c0, vt0.c0, rt0.c2, rt1.c1, vt1.c0, rt1.c0 FROM vt1 NOT INDEXED, rt1 FULL OUTER JOIN rt0 ON 0.3033897677481574 CROSS JOIN vt0 ON CAST(vt1.c2 AS BLOB) COLLATE BINARY GROUP BY vt1.c1, rt0.c0, vt0.c0, rt0.c2, rt1.c1, vt1.c0, rt1.c0 HAVING ((AVG(CASE vt1.c2  WHEN vt1.c2 THEN COUNT(MAX(NULL)) ELSE TOTAL(MAX(MAX(AVG(SUM(rt0.c0))))) END)) ISNULL);
SELECT MAX(((((((vt1.c1)AND(vt1.c3)))OR(vt1.c1)))<>(vt1.c2 COLLATE RTRIM))) FROM vt1, rt0 ORDER BY (('-509130609') NOT BETWEEN (CASE rt0.c2  WHEN vt1.c1 THEN rt0.c3 ELSE vt1.c2 END) AND ((((rt0.c3, rt0.c2, vt1.c1))>=((vt1.c2, vt1.c2, vt1.c3))))) ASC  NULLS FIRST;
SELECT * FROM vt0 NOT INDEXED CROSS JOIN rt0 ON -1329933294 RIGHT OUTER JOIN vt1 ON (0.7040149019351314 IN ());
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON -1329933294 RIGHT OUTER JOIN vt1 ON (0.7040149019351314 IN ()) WHERE (CASE ((rt0.c1)!=(rt0.c2))  WHEN CAST(vt0.c0 AS REAL) THEN (((vt1.c0)) BETWEEN ((x'9921')) AND ((rt0.c3))) WHEN (NULL IN ()) THEN ((vt0.c0) NOT NULL) WHEN rt0.c3 COLLATE RTRIM THEN ((((vt1.c1)OR(rt0.c2)))AND(vt1.c3)) ELSE vt0.c0 END) UNION ALL SELECT ALL * FROM vt0 CROSS JOIN rt0 ON -1329933294 RIGHT OUTER JOIN vt1 ON (0.7040149019351314 IN ()) WHERE ((NOT (CASE ((rt0.c1)<>(rt0.c2))  WHEN CAST(vt0.c0 AS REAL) THEN (((vt1.c0)) BETWEEN ((x'9921')) AND ((rt0.c3))) WHEN (NULL IN ()) THEN ((vt0.c0) NOT NULL) WHEN rt0.c3 COLLATE RTRIM THEN ((((vt1.c1)OR(rt0.c2)))AND(vt1.c3)) ELSE vt0.c0 END))) UNION ALL SELECT ALL * FROM vt0 CROSS JOIN rt0 ON -1329933294 RIGHT OUTER JOIN vt1 ON (0.7040149019351314 IN ()) WHERE (((CASE ((rt0.c1)!=(rt0.c2))  WHEN CAST(vt0.c0 AS REAL) THEN (((vt1.c0)) BETWEEN ((x'9921')) AND ((rt0.c3))) WHEN (NULL IN ()) THEN ((vt0.c0) NOT NULL) WHEN rt0.c3 COLLATE RTRIM THEN ((((vt1.c1)OR(rt0.c2)))AND(vt1.c3)) ELSE vt0.c0 END) ISNULL));
SELECT * FROM vt0 NOT INDEXED CROSS JOIN rt0 ON -1329933294 RIGHT OUTER JOIN vt1 ON (0.7040149019351314 IN ());
SELECT DISTINCT rt0.c1, vt1.c3, rt0.c2 FROM rt0, rt1, vt1, vt0;
SELECT DISTINCT rt0.c1, vt1.c3, rt0.c2 FROM rt0, rt1, vt1, vt0 WHERE (rt1.c2) UNION SELECT DISTINCT rt0.c1, vt1.c3, rt0.c2 FROM rt0, rt1, vt1, vt0 WHERE ((NOT (rt1.c2))) UNION SELECT DISTINCT rt0.c1, vt1.c3, rt0.c2 FROM rt0, rt1, vt1, vt0 WHERE (((rt1.c2) ISNULL));
SELECT DISTINCT rt0.c1, vt1.c3, rt0.c2 FROM rt0, rt1, vt1, vt0;
SELECT rt0.c1, rt0.c0, vt1.c1, vt1.c3, vt0.c0 FROM vt1, rt1 INNER JOIN vt0 ON ((rt0.c2) IS TRUE) COLLATE RTRIM RIGHT OUTER JOIN rt0 ON CAST(((((vt1.c3)OR(vt0.c0)))AND(vt1.c0)) AS INTEGER) GROUP BY rt0.c1, rt0.c0, vt1.c1, vt1.c3, vt0.c0;
SELECT rt0.c0, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3;
SELECT ALL rt0.c0, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3 HAVING CASE ((rt0.c3)-(rt0.c1))  WHEN MIN(rt0.c2) THEN SUM(TOTAL(MIN(GROUP_CONCAT(MIN(MAX(-1.820211291E9)))))) END UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3 HAVING (NOT (CASE ((rt0.c3)-(rt0.c1))  WHEN MIN(rt0.c2) THEN SUM(TOTAL(MIN(GROUP_CONCAT(MIN(MAX(-1.820211291E9)))))) END)) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3 HAVING ((CASE ((rt0.c3)-(rt0.c1))  WHEN MIN(rt0.c2) THEN SUM(TOTAL(MIN(GROUP_CONCAT(MIN(MAX(-1.820211291E9)))))) END) ISNULL);
SELECT ALL SUM(NULL) FROM rt1, vt0;
SELECT ALL * FROM rt1, rt0, vt0, vt1;
SELECT ALL * FROM rt1, rt0, vt0, vt1 WHERE (LIKE(vt1.c1, rt0.c0)) UNION ALL SELECT ALL * FROM rt1, rt0, vt0, vt1 WHERE ((NOT (LIKE(vt1.c1, rt0.c0)))) UNION ALL SELECT * FROM rt1, rt0, vt0, vt1 WHERE (((LIKE(vt1.c1, rt0.c0)) ISNULL));
SELECT ALL * FROM rt1, rt0, vt0, vt1;
SELECT DISTINCT vt1.c1 FROM vt1;
SELECT DISTINCT vt1.c1 FROM vt1 WHERE ((((vt1.c0)) BETWEEN (((~ (vt1.c0)))) AND ((CAST(0.37629611480856295 AS NUMERIC))))) UNION SELECT DISTINCT vt1.c1 FROM vt1 WHERE ((NOT ((((vt1.c0)) BETWEEN (((~ (vt1.c0)))) AND ((CAST(0.37629611480856295 AS NUMERIC))))))) UNION SELECT DISTINCT vt1.c1 FROM vt1 WHERE ((((((vt1.c0)) BETWEEN (((~ (vt1.c0)))) AND ((CAST(0.37629611480856295 AS NUMERIC))))) ISNULL));
SELECT DISTINCT vt1.c1 FROM vt1;
SELECT vt1.c1, vt1.c3, vt1.c2, rt0.c0, vt0.c0, rt0.c1, rt0.c2, rt1.c0, rt1.c1, vt1.c0, rt1.c2 FROM rt1 LEFT OUTER JOIN vt0 ON ((((((vt1.c0) IS TRUE))OR((- (vt1.c0)))))AND((- (rt0.c1)))) RIGHT OUTER JOIN rt0 ON rt1.c0 COLLATE RTRIM RIGHT OUTER JOIN vt1 ON ((((rt0.c1) IS FALSE))*(CASE WHEN rt0.c0 THEN vt1.c2 END)) GROUP BY vt1.c1, vt1.c3, vt1.c2, rt0.c0, vt0.c0, rt0.c1, rt0.c2, rt1.c0, rt1.c1, vt1.c0, rt1.c2;
SELECT rt0.c3, vt1.c2, rt1.c0, rt1.c1, vt0.c0, vt1.c3, vt1.c0, vt1.c1, rt0.c0 FROM rt0, vt0 LEFT OUTER JOIN rt1 ON ((((0.927732932211862)AND(CAST(rt0.c0 AS REAL))))OR(CASE WHEN rt0.c1 THEN '1950210525' END)) CROSS JOIN vt1 ON vt0.c0 GROUP BY rt0.c3, vt1.c2, rt1.c0, rt1.c1, vt0.c0, vt1.c3, vt1.c0, vt1.c1, rt0.c0;
SELECT rt0.c3, vt1.c2, rt1.c0, rt1.c1, vt0.c0, vt1.c3, vt1.c0, vt1.c1, rt0.c0 FROM rt0, vt0 LEFT OUTER JOIN rt1 ON ((((0.927732932211862)AND(CAST(rt0.c0 AS REAL))))OR(CASE WHEN rt0.c1 THEN '1950210525' END)) CROSS JOIN vt1 ON vt0.c0 GROUP BY rt0.c3, vt1.c2, rt1.c0, rt1.c1, vt0.c0, vt1.c3, vt1.c0, vt1.c1, rt0.c0 HAVING TOTAL(((((COUNT(MAX(AVG(rt1.c0))))AND(MAX(rt0.c2))))OR(MAX(rt1.c1)))) UNION ALL SELECT rt0.c3, vt1.c2, rt1.c0, rt1.c1, vt0.c0, vt1.c3, vt1.c0, vt1.c1, rt0.c0 FROM rt0, vt0 LEFT OUTER JOIN rt1 ON ((((0.927732932211862)AND(CAST(rt0.c0 AS REAL))))OR(CASE WHEN rt0.c1 THEN '1950210525' END)) CROSS JOIN vt1 ON vt0.c0 GROUP BY rt0.c3, vt1.c2, rt1.c0, rt1.c1, vt0.c0, vt1.c3, vt1.c0, vt1.c1, rt0.c0 HAVING (NOT (TOTAL(((((COUNT(MAX(AVG(rt1.c0))))AND(MAX(rt0.c2))))OR(MAX(rt1.c1)))))) UNION ALL SELECT ALL rt0.c3, vt1.c2, rt1.c0, rt1.c1, vt0.c0, vt1.c3, vt1.c0, vt1.c1, rt0.c0 FROM rt0, vt0 LEFT OUTER JOIN rt1 ON ((((0.927732932211862)AND(CAST(rt0.c0 AS REAL))))OR(CASE WHEN rt0.c1 THEN '1950210525' END)) CROSS JOIN vt1 ON vt0.c0 GROUP BY rt0.c3, vt1.c2, rt1.c0, rt1.c1, vt0.c0, vt1.c3, vt1.c0, vt1.c1, rt0.c0 HAVING ((TOTAL(((((COUNT(MAX(AVG(rt1.c0))))AND(MAX(rt0.c2))))OR(MAX(rt1.c1))))) ISNULL);
SELECT rt0.c1, rt0.c2, rt1.c2, vt1.c1, rt1.c0, vt1.c3 FROM rt1, vt1 INNER JOIN rt0 ON CAST(vt1.c0 COLLATE NOCASE AS BLOB) FULL OUTER JOIN vt0 ON (~ (((rt1.c0) IS FALSE)));
SELECT ALL rt0.c1, rt0.c2, rt1.c2, vt1.c1, rt1.c0, vt1.c3 FROM rt1, vt1 INNER JOIN rt0 ON CAST(vt1.c0 COLLATE NOCASE AS BLOB) FULL OUTER JOIN vt0 ON (~ (((rt1.c0) IS FALSE))) WHERE ((((rt0.c1) IS FALSE) IN ())) UNION ALL SELECT rt0.c1, rt0.c2, rt1.c2, vt1.c1, rt1.c0, vt1.c3 FROM rt1, vt1 INNER JOIN rt0 ON CAST(vt1.c0 COLLATE NOCASE AS BLOB) FULL OUTER JOIN vt0 ON (~ (((rt1.c0) IS FALSE))) WHERE ((NOT ((((rt0.c1) IS FALSE) IN ())))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt1.c2, vt1.c1, rt1.c0, vt1.c3 FROM rt1, vt1 INNER JOIN rt0 ON CAST(vt1.c0 COLLATE NOCASE AS BLOB) FULL OUTER JOIN vt0 ON (~ (((rt1.c0) IS FALSE))) WHERE ((((((rt0.c1) IS FALSE) IN ())) ISNULL));
SELECT rt0.c1, rt0.c2, rt1.c2, vt1.c1, rt1.c0, vt1.c3 FROM rt1, vt1 INNER JOIN rt0 ON CAST(vt1.c0 COLLATE NOCASE AS BLOB) FULL OUTER JOIN vt0 ON (~ (((rt1.c0) IS FALSE)));
SELECT DISTINCT rt1.c2, rt1.c1, rt1.c0, rt0.c1, vt0.c0, rt0.c0, rt0.c3, rt0.c2 FROM rt0, vt0, rt1;
SELECT DISTINCT rt1.c2, rt1.c1, rt1.c0, rt0.c1, vt0.c0, rt0.c0, rt0.c3, rt0.c2 FROM rt0, vt0, rt1 WHERE (((((((((CASE WHEN rt0.c0 THEN rt1.c1 END)AND(CASE WHEN rt1.c1 THEN rt0.c2 ELSE rt0.c2 END)))AND((rt0.c1 IN ()))))AND(((rt0.c1)%(rt0.c0)))))AND(((rt0.c0)LIKE(rt0.c1))))) UNION SELECT DISTINCT rt1.c2, rt1.c1, rt1.c0, rt0.c1, vt0.c0, rt0.c0, rt0.c3, rt0.c2 FROM rt0, vt0 NOT INDEXED, rt1 WHERE ((NOT (((((((((CASE WHEN rt0.c0 THEN rt1.c1 END)AND(CASE WHEN rt1.c1 THEN rt0.c2 ELSE rt0.c2 END)))AND((rt0.c1 IN ()))))AND(((rt0.c1)%(rt0.c0)))))AND(((rt0.c0)LIKE(rt0.c1))))))) UNION SELECT DISTINCT rt1.c2, rt1.c1, rt1.c0, rt0.c1, vt0.c0, rt0.c0, rt0.c3, rt0.c2 FROM rt0, vt0, rt1 WHERE (((((((((((CASE WHEN rt0.c0 THEN rt1.c1 END)AND(CASE WHEN rt1.c1 THEN rt0.c2 ELSE rt0.c2 END)))AND((rt0.c1 IN ()))))AND(((rt0.c1)%(rt0.c0)))))AND(((rt0.c0)LIKE(rt0.c1))))) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c1, rt1.c0, rt0.c1, vt0.c0, rt0.c0, rt0.c3, rt0.c2 FROM rt0, vt0, rt1;
SELECT vt1.c1, vt0.c0, vt1.c0, vt1.c2 FROM vt0 CROSS JOIN vt1 ON ((((vt1.c2) NOT BETWEEN (vt1.c2) AND (vt1.c0))) NOT NULL) GROUP BY vt1.c1, vt0.c0, vt1.c0, vt1.c2;
SELECT ALL vt1.c1, vt0.c0, vt1.c0, vt1.c2 FROM vt0 CROSS JOIN vt1 ON ((((vt1.c2) NOT BETWEEN (vt1.c2) AND (vt1.c0))) NOT NULL) WHERE (((((vt1.c2)AND(((((vt1.c3)AND(vt1.c3)))AND(vt1.c3)))))AND((((vt1.c0))<=((vt1.c1)))))) GROUP BY vt1.c1, vt0.c0, vt1.c0, vt1.c2 UNION SELECT ALL vt1.c1, vt0.c0, vt1.c0, vt1.c2 FROM vt0 CROSS JOIN vt1 ON ((((vt1.c2) NOT BETWEEN (vt1.c2) AND (vt1.c0))) NOT NULL) WHERE ((NOT (((((vt1.c2)AND(((((vt1.c3)AND(vt1.c3)))AND(vt1.c3)))))AND((((vt1.c0))<=((vt1.c1)))))))) GROUP BY vt1.c1, vt0.c0, vt1.c0, vt1.c2 UNION SELECT vt1.c1, vt0.c0, vt1.c0, vt1.c2 FROM vt0 CROSS JOIN vt1 ON ((((vt1.c2) NOT BETWEEN (vt1.c2) AND (vt1.c0))) NOT NULL) WHERE (((((((vt1.c2)AND(((((vt1.c3)AND(vt1.c3)))AND(vt1.c3)))))AND((((vt1.c0))<=((vt1.c1)))))) ISNULL)) GROUP BY vt1.c1, vt0.c0, vt1.c0, vt1.c2;
SELECT vt1.c1, vt0.c0, vt1.c0, vt1.c2 FROM vt0 CROSS JOIN vt1 ON ((((vt1.c2) NOT BETWEEN (vt1.c2) AND (vt1.c0))) NOT NULL) GROUP BY vt1.c1, vt0.c0, vt1.c0, vt1.c2;
SELECT ALL vt1.c0, rt1.c1, rt0.c1, rt0.c3, rt1.c0, rt1.c2, rt0.c2, rt0.c0, vt1.c2 FROM rt0, vt1, rt1 GROUP BY vt1.c0, rt1.c1, rt0.c1, rt0.c3, rt1.c0, rt1.c2, rt0.c2, rt0.c0, vt1.c2;
SELECT ALL vt1.c0, rt1.c1, rt0.c1, rt0.c3, rt1.c0, rt1.c2, rt0.c2, rt0.c0, vt1.c2 FROM rt0, vt1, rt1 GROUP BY vt1.c0, rt1.c1, rt0.c1, rt0.c3, rt1.c0, rt1.c2, rt0.c2, rt0.c0, vt1.c2 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0, rt1.c1, rt0.c1, rt0.c3, rt1.c0, rt1.c2, rt0.c2, rt0.c0, vt1.c2 FROM rt0, vt1, rt1 GROUP BY vt1.c0, rt1.c1, rt0.c1, rt0.c3, rt1.c0, rt1.c2, rt0.c2, rt0.c0, vt1.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0, rt1.c1, rt0.c1, rt0.c3, rt1.c0, rt1.c2, rt0.c2, rt0.c0, vt1.c2 FROM rt0, vt1, rt1 GROUP BY vt1.c0, rt1.c1, rt0.c1, rt0.c3, rt1.c0, rt1.c2, rt0.c2, rt0.c0, vt1.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0, rt1.c1, rt0.c1, rt0.c3, rt1.c0, rt1.c2, rt0.c2, rt0.c0, vt1.c2 FROM rt0, vt1, rt1 GROUP BY vt1.c0, rt1.c1, rt0.c1, rt0.c3, rt1.c0, rt1.c2, rt0.c2, rt0.c0, vt1.c2;
SELECT ALL vt1.c0, rt1.c1, rt0.c1, rt0.c3, rt1.c0, rt1.c2, rt0.c2, rt0.c0, vt1.c2 FROM rt0, vt1, rt1 GROUP BY vt1.c0, rt1.c1, rt0.c1, rt0.c3, rt1.c0, rt1.c2, rt0.c2, rt0.c0, vt1.c2 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0, rt1.c1, rt0.c1, rt0.c3, rt1.c0, rt1.c2, rt0.c2, rt0.c0, vt1.c2 FROM rt0, vt1, rt1 GROUP BY vt1.c0, rt1.c1, rt0.c1, rt0.c3, rt1.c0, rt1.c2, rt0.c2, rt0.c0, vt1.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0, rt1.c1, rt0.c1, rt0.c3, rt1.c0, rt1.c2, rt0.c2, rt0.c0, vt1.c2 FROM rt0, vt1, rt1 GROUP BY vt1.c0, rt1.c1, rt0.c1, rt0.c3, rt1.c0, rt1.c2, rt0.c2, rt0.c0, vt1.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0, rt1.c1, rt0.c1, rt0.c3, rt1.c0, rt1.c2, rt0.c2, rt0.c0, vt1.c2 FROM rt0, vt1, rt1 GROUP BY vt1.c0, rt1.c1, rt0.c1, rt0.c3, rt1.c0, rt1.c2, rt0.c2, rt0.c0, vt1.c2;
SELECT * FROM vt1, vt0;
SELECT * FROM vt1, vt0 WHERE (CASE (x'3f23' IN (vt1.c0, vt0.c0))  WHEN vt1.c1 THEN SUBSTR(vt1.c1, vt1.c0) WHEN ((x'')*(vt1.c1)) THEN vt1.c1 WHEN (+ (vt1.c3)) THEN (vt1.c0 IN (vt1.c0)) END) UNION ALL SELECT ALL * FROM vt1, vt0 WHERE ((NOT (CASE (x'3f23' IN (vt1.c0, vt0.c0))  WHEN vt1.c1 THEN SUBSTR(vt1.c1, vt1.c0) WHEN ((x'')*(vt1.c1)) THEN vt1.c1 WHEN (+ (vt1.c3)) THEN (vt1.c0 IN (vt1.c0)) END))) UNION ALL SELECT * FROM vt1, vt0 WHERE (((CASE (x'3f23' IN (vt1.c0, vt0.c0))  WHEN vt1.c1 THEN SUBSTR(vt1.c1, vt1.c0) WHEN ((x'')*(vt1.c1)) THEN vt1.c1 WHEN (+ (vt1.c3)) THEN (vt1.c0 IN (vt1.c0)) END) ISNULL));
SELECT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, rt0, vt0;
SELECT DISTINCT * FROM vt1, rt0, vt0 WHERE (CAST(NULL AS INTEGER) COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt1, rt0, vt0 WHERE ((NOT (CAST(NULL AS INTEGER) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt1, rt0, vt0 WHERE (((CAST(NULL AS INTEGER) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt1, rt0, vt0;
SELECT ALL vt1.c3, vt1.c2, vt1.c0, vt1.c1, rt1.c1, rt1.c0, vt0.c0 FROM vt0, vt1, rt1 GROUP BY vt1.c3, vt1.c2, vt1.c0, vt1.c1, rt1.c1, rt1.c0, vt0.c0;
SELECT ALL vt1.c3, vt1.c2, vt1.c0, vt1.c1, rt1.c1, rt1.c0, vt0.c0 FROM vt0, vt1, rt1 WHERE ((8.2165247E8 IN ())) GROUP BY vt1.c3, vt1.c2, vt1.c0, vt1.c1, rt1.c1, rt1.c0, vt0.c0 UNION SELECT vt1.c3, vt1.c2, vt1.c0, vt1.c1, rt1.c1, rt1.c0, vt0.c0 FROM vt0, vt1, rt1 WHERE ((NOT ((8.2165247E8 IN ())))) GROUP BY vt1.c3, vt1.c2, vt1.c0, vt1.c1, rt1.c1, rt1.c0, vt0.c0 UNION SELECT ALL vt1.c3, vt1.c2, vt1.c0, vt1.c1, rt1.c1, rt1.c0, vt0.c0 FROM vt0, vt1, rt1 WHERE ((((8.2165247E8 IN ())) ISNULL)) GROUP BY vt1.c3, vt1.c2, vt1.c0, vt1.c1, rt1.c1, rt1.c0, vt0.c0;
SELECT ALL vt1.c3, vt1.c2, vt1.c0, vt1.c1, rt1.c1, rt1.c0, vt0.c0 FROM vt0, vt1, rt1 GROUP BY vt1.c3, vt1.c2, vt1.c0, vt1.c1, rt1.c1, rt1.c0, vt0.c0;
SELECT rt1.c1, vt1.c3, vt1.c0, vt1.c1, rt1.c2, rt1.c0 FROM vt1, rt1 GROUP BY rt1.c1, vt1.c3, vt1.c0, vt1.c1, rt1.c2, rt1.c0;
SELECT ALL rt1.c1, vt1.c3, vt1.c0, vt1.c1, rt1.c2, rt1.c0 FROM vt1, rt1 GROUP BY rt1.c1, vt1.c3, vt1.c0, vt1.c1, rt1.c2, rt1.c0 HAVING MAX(AVG(SUM(MAX(vt1.c0)))) UNION ALL SELECT rt1.c1, vt1.c3, vt1.c0, vt1.c1, rt1.c2, rt1.c0 FROM vt1, rt1 GROUP BY rt1.c1, vt1.c3, vt1.c0, vt1.c1, rt1.c2, rt1.c0 HAVING (NOT (MAX(AVG(SUM(MAX(vt1.c0)))))) UNION ALL SELECT rt1.c1, vt1.c3, vt1.c0, vt1.c1, rt1.c2, rt1.c0 FROM vt1, rt1 GROUP BY rt1.c1, vt1.c3, vt1.c0, vt1.c1, rt1.c2, rt1.c0 HAVING ((MAX(AVG(SUM(MAX(vt1.c0))))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(0.7257054333257802)))AND(vt0.c0)))<<((',႟*\r' IN ())))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(0.7257054333257802)))AND(vt0.c0)))<<((',႟*\r' IN ())))))) UNION ALL SELECT * FROM vt0 WHERE (((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(0.7257054333257802)))AND(vt0.c0)))<<((',႟*\r' IN ())))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM rt0, rt1, vt1, vt0 NOT INDEXED;
SELECT DISTINCT * FROM rt0, rt1, vt1, vt0 WHERE (vt1.c2) UNION SELECT DISTINCT * FROM rt0, rt1, vt1, vt0 WHERE ((NOT (vt1.c2))) UNION SELECT DISTINCT * FROM rt0, rt1, vt1, vt0 WHERE (((vt1.c2) ISNULL));
SELECT DISTINCT * FROM rt0, rt1, vt1, vt0 NOT INDEXED;
SELECT vt0.c0, rt1.c0, rt0.c2, rt0.c0, rt0.c3 FROM rt1, vt0, rt0 GROUP BY vt0.c0, rt1.c0, rt0.c2, rt0.c0, rt0.c3;
SELECT vt0.c0, rt1.c0, rt0.c2, rt0.c0, rt0.c3 FROM rt1, vt0, rt0 WHERE ((((((rt1.c1)AND(rt0.c0)))AND(rt0.c0)) IN ())) GROUP BY vt0.c0, rt1.c0, rt0.c2, rt0.c0, rt0.c3 UNION SELECT vt0.c0, rt1.c0, rt0.c2, rt0.c0, rt0.c3 FROM rt1, vt0, rt0 WHERE ((NOT ((((((rt1.c1)AND(rt0.c0)))AND(rt0.c0)) IN ())))) GROUP BY vt0.c0, rt1.c0, rt0.c2, rt0.c0, rt0.c3 UNION SELECT vt0.c0, rt1.c0, rt0.c2, rt0.c0, rt0.c3 FROM rt1, vt0, rt0 WHERE ((((((((rt1.c1)AND(rt0.c0)))AND(rt0.c0)) IN ())) ISNULL)) GROUP BY vt0.c0, rt1.c0, rt0.c2, rt0.c0, rt0.c3;
SELECT vt0.c0, rt1.c0, rt0.c2, rt0.c0, rt0.c3 FROM rt1, vt0, rt0 GROUP BY vt0.c0, rt1.c0, rt0.c2, rt0.c0, rt0.c3;
SELECT vt1.c1 FROM rt1, vt1 GROUP BY vt1.c1;
SELECT vt1.c1 FROM rt1, vt1 GROUP BY vt1.c1 HAVING COUNT(COALESCE(MIN(COUNT(TOTAL(vt1.c3))), GROUP_CONCAT(SUM(MAX(vt1.c3))))) UNION ALL SELECT vt1.c1 FROM rt1, vt1 GROUP BY vt1.c1 HAVING (NOT (COUNT(COALESCE(MIN(COUNT(TOTAL(vt1.c3))), GROUP_CONCAT(SUM(MAX(vt1.c3))))))) UNION ALL SELECT vt1.c1 FROM rt1, vt1 GROUP BY vt1.c1 HAVING ((COUNT(COALESCE(MIN(COUNT(TOTAL(vt1.c3))), GROUP_CONCAT(SUM(MAX(vt1.c3)))))) ISNULL);
SELECT * FROM vt1 CROSS JOIN rt0 ON (((('-355430169')OR(vt1.c0)))OR(rt0.c3)) COLLATE RTRIM COLLATE NOCASE;
SELECT ALL * FROM vt1 CROSS JOIN rt0 ON (((('-355430169')OR(vt1.c0)))OR(rt0.c3)) COLLATE RTRIM COLLATE NOCASE WHERE (CAST((NOT (rt0.c0)) AS INTEGER)) UNION ALL SELECT * FROM vt1 CROSS JOIN rt0 ON (((('-355430169')OR(vt1.c0)))OR(rt0.c3)) COLLATE RTRIM COLLATE NOCASE WHERE ((NOT (CAST((NOT (rt0.c0)) AS INTEGER)))) UNION ALL SELECT * FROM vt1 CROSS JOIN rt0 ON (((('-355430169')OR(vt1.c0)))OR(rt0.c3)) COLLATE RTRIM COLLATE NOCASE WHERE (((CAST((NOT (rt0.c0)) AS INTEGER)) ISNULL));
SELECT * FROM vt1 CROSS JOIN rt0 ON (((('-355430169')OR(vt1.c0)))OR(rt0.c3)) COLLATE RTRIM COLLATE NOCASE;
SELECT DISTINCT vt1.c0 FROM vt1, rt1, vt0;
SELECT DISTINCT vt1.c0 FROM vt1, rt1, vt0 WHERE ((- ((+ (rt1.c2))))) UNION SELECT DISTINCT vt1.c0 FROM vt1, rt1, vt0 WHERE ((NOT ((- ((+ (rt1.c2))))))) UNION SELECT DISTINCT vt1.c0 FROM vt1, rt1, vt0 WHERE ((((- ((+ (rt1.c2))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1, rt1, vt0;
SELECT rt1.c1, rt1.c2, rt1.c0, vt0.c0, rt0.c0, rt0.c1 FROM vt0, rt0, rt1, vt1 GROUP BY rt1.c1, rt1.c2, rt1.c0, vt0.c0, rt0.c0, rt0.c1;
SELECT rt1.c1, rt1.c2, rt1.c0, vt0.c0, rt0.c0, rt0.c1 FROM vt0, rt0, rt1, vt1 WHERE (((((CAST(rt0.c2 AS NUMERIC))OR(((rt1.c0) NOT BETWEEN (rt0.c0) AND (rt1.c2)))))OR(((rt1.c1)!=(rt1.c0))))) GROUP BY rt1.c1, rt1.c2, rt1.c0, vt0.c0, rt0.c0, rt0.c1 UNION SELECT ALL rt1.c1, rt1.c2, rt1.c0, vt0.c0, rt0.c0, rt0.c1 FROM vt0, rt0, rt1, vt1 WHERE ((NOT (((((CAST(rt0.c2 AS NUMERIC))OR(((rt1.c0) NOT BETWEEN (rt0.c0) AND (rt1.c2)))))OR(((rt1.c1)!=(rt1.c0))))))) GROUP BY rt1.c1, rt1.c2, rt1.c0, vt0.c0, rt0.c0, rt0.c1 UNION SELECT rt1.c1, rt1.c2, rt1.c0, vt0.c0, rt0.c0, rt0.c1 FROM vt0, rt0, rt1, vt1 WHERE (((((((CAST(rt0.c2 AS NUMERIC))OR(((rt1.c0) NOT BETWEEN (rt0.c0) AND (rt1.c2)))))OR(((rt1.c1)<>(rt1.c0))))) ISNULL)) GROUP BY rt1.c1, rt1.c2, rt1.c0, vt0.c0, rt0.c0, rt0.c1;
SELECT rt1.c1, rt1.c2, rt1.c0, vt0.c0, rt0.c0, rt0.c1 FROM vt0, rt0, rt1, vt1 GROUP BY rt1.c1, rt1.c2, rt1.c0, vt0.c0, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0;
SELECT ALL MAX(CAST(CASE WHEN rt1.c0 THEN vt0.c0 END AS TEXT)) FROM rt1, vt0 ORDER BY vt0.c0 DESC;
SELECT * FROM rt1, vt0, vt1;
SELECT * FROM rt1, vt0, vt1 WHERE (((rt1.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY) UNION ALL SELECT ALL * FROM rt1, vt0, vt1 WHERE ((NOT (((rt1.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY))) UNION ALL SELECT ALL * FROM rt1, vt0, vt1 WHERE (((((rt1.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY) ISNULL));
SELECT * FROM rt1, vt0, vt1;
SELECT DISTINCT rt1.c0, rt1.c2 FROM rt1;
SELECT DISTINCT rt1.c0, rt1.c2 FROM rt1 WHERE (COALESCE(((rt1.c1)%(rt1.c1)), ((((((((rt1.c0)AND(rt1.c2)))AND(rt1.c2)))OR(rt1.c0)))AND(rt1.c2)))) UNION SELECT DISTINCT rt1.c0, rt1.c2 FROM rt1 WHERE ((NOT (COALESCE(((rt1.c1)%(rt1.c1)), ((((((((rt1.c0)AND(rt1.c2)))AND(rt1.c2)))OR(rt1.c0)))AND(rt1.c2)))))) UNION SELECT DISTINCT rt1.c0, rt1.c2 FROM rt1 WHERE (((COALESCE(((rt1.c1)%(rt1.c1)), ((((((((rt1.c0)AND(rt1.c2)))AND(rt1.c2)))OR(rt1.c0)))AND(rt1.c2)))) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c2 FROM rt1;
SELECT ALL rt1.c2, vt1.c0, vt1.c2, rt1.c1, vt1.c3, rt0.c1, rt0.c0, rt0.c3, vt1.c1, vt0.c0 FROM rt0, vt0, rt1, vt1 GROUP BY rt1.c2, vt1.c0, vt1.c2, rt1.c1, vt1.c3, rt0.c1, rt0.c0, rt0.c3, vt1.c1, vt0.c0;
SELECT ALL rt1.c2, vt1.c0, vt1.c2, rt1.c1, vt1.c3, rt0.c1, rt0.c0, rt0.c3, vt1.c1, vt0.c0 FROM rt0, vt0, rt1, vt1 WHERE (((((rt0.c0)OR((((rt0.c3)) BETWEEN ((0.48640944041758793)) AND ((vt1.c1))))))AND(((vt1.c2)%(rt0.c0))))) GROUP BY rt1.c2, vt1.c0, vt1.c2, rt1.c1, vt1.c3, rt0.c1, rt0.c0, rt0.c3, vt1.c1, vt0.c0 UNION SELECT rt1.c2, vt1.c0, vt1.c2, rt1.c1, vt1.c3, rt0.c1, rt0.c0, rt0.c3, vt1.c1, vt0.c0 FROM rt0, vt0, rt1, vt1 WHERE ((NOT (((((rt0.c0)OR((((rt0.c3)) BETWEEN ((0.48640944041758793)) AND ((vt1.c1))))))AND(((vt1.c2)%(rt0.c0))))))) GROUP BY rt1.c2, vt1.c0, vt1.c2, rt1.c1, vt1.c3, rt0.c1, rt0.c0, rt0.c3, vt1.c1, vt0.c0 UNION SELECT ALL rt1.c2, vt1.c0, vt1.c2, rt1.c1, vt1.c3, rt0.c1, rt0.c0, rt0.c3, vt1.c1, vt0.c0 FROM rt0, vt0, rt1, vt1 WHERE (((((((rt0.c0)OR((((rt0.c3)) BETWEEN ((0.48640944041758793)) AND ((vt1.c1))))))AND(((vt1.c2)%(rt0.c0))))) ISNULL)) GROUP BY rt1.c2, vt1.c0, vt1.c2, rt1.c1, vt1.c3, rt0.c1, rt0.c0, rt0.c3, vt1.c1, vt0.c0;
SELECT ALL rt1.c2, vt1.c0, vt1.c2, rt1.c1, vt1.c3, rt0.c1, rt0.c0, rt0.c3, vt1.c1, vt0.c0 FROM rt0, vt0, rt1, vt1 GROUP BY rt1.c2, vt1.c0, vt1.c2, rt1.c1, vt1.c3, rt0.c1, rt0.c0, rt0.c3, vt1.c1, vt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING TOTAL(((COUNT(rt0.c2))<<(rt0.c2))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 NOT INDEXED GROUP BY rt0.c2, rt0.c0 HAVING (NOT (TOTAL(((COUNT(rt0.c2))<<(rt0.c2))))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((TOTAL(((COUNT(rt0.c2))<<(rt0.c2)))) ISNULL);
SELECT * FROM vt0, vt1, rt1, rt0;
SELECT ALL * FROM vt0, vt1, rt1, rt0 WHERE ('u,W4pa.U ') UNION ALL SELECT * FROM vt0, vt1, rt1, rt0 WHERE ((NOT ('u,W4pa.U '))) UNION ALL SELECT * FROM vt0, vt1, rt1, rt0 WHERE ((('u,W4pa.U ') ISNULL));
SELECT * FROM vt0, vt1, rt1, rt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (LIKELY((vt1.c3 IN ()))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (LIKELY((vt1.c3 IN ()))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((LIKELY((vt1.c3 IN ()))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT * FROM rt0, vt1, rt1;
SELECT ALL * FROM rt0, vt1, rt1 WHERE (CASE WHEN rt0.c1 COLLATE NOCASE THEN CAST(vt1.c2 AS INTEGER) END) UNION ALL SELECT ALL * FROM rt0, vt1, rt1 WHERE ((NOT (CASE WHEN rt0.c1 COLLATE NOCASE THEN CAST(vt1.c2 AS INTEGER) END))) UNION ALL SELECT ALL * FROM rt0, vt1, rt1 WHERE (((CASE WHEN rt0.c1 COLLATE NOCASE THEN CAST(vt1.c2 AS INTEGER) END) ISNULL));
SELECT * FROM rt0, vt1, rt1;
SELECT DISTINCT * FROM rt1 CROSS JOIN vt0 ON TYPEOF(DISTINCT (+ (vt0.c0))) RIGHT OUTER JOIN rt0 ON CAST((((rt1.c1, rt0.c3, 0.7972416088324598)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c3)) AND ((rt1.c0, rt0.c0, rt0.c0))) AS INTEGER);
SELECT DISTINCT * FROM rt1 CROSS JOIN vt0 ON TYPEOF(DISTINCT (+ (vt0.c0))) RIGHT OUTER JOIN rt0 ON CAST((((rt1.c1, rt0.c3, 0.7972416088324598)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c3)) AND ((rt1.c0, rt0.c0, rt0.c0))) AS INTEGER) WHERE (((rt1.c0 COLLATE BINARY) NOT BETWEEN ('0.4843004101682098') AND (NULL))) UNION SELECT DISTINCT * FROM rt1 CROSS JOIN vt0 ON TYPEOF(DISTINCT (+ (vt0.c0))) RIGHT OUTER JOIN rt0 ON CAST((((rt1.c1, rt0.c3, 0.7972416088324598)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c3)) AND ((rt1.c0, rt0.c0, rt0.c0))) AS INTEGER) WHERE ((NOT (((rt1.c0 COLLATE BINARY) NOT BETWEEN ('0.4843004101682098') AND (NULL))))) UNION SELECT DISTINCT * FROM rt1 CROSS JOIN vt0 ON TYPEOF(DISTINCT (+ (vt0.c0))) RIGHT OUTER JOIN rt0 ON CAST((((rt1.c1, rt0.c3, 0.7972416088324598)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c3)) AND ((rt1.c0, rt0.c0, rt0.c0))) AS INTEGER) WHERE (((((rt1.c0 COLLATE BINARY) NOT BETWEEN ('0.4843004101682098') AND (NULL))) ISNULL));
SELECT DISTINCT * FROM rt1 CROSS JOIN vt0 ON TYPEOF(DISTINCT (+ (vt0.c0))) RIGHT OUTER JOIN rt0 ON CAST((((rt1.c1, rt0.c3, 0.7972416088324598)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c3)) AND ((rt1.c0, rt0.c0, rt0.c0))) AS INTEGER);
SELECT vt0.c0, rt0.c3, rt1.c1 FROM rt1, vt0, rt0 GROUP BY vt0.c0, rt0.c3, rt1.c1;
SELECT ALL vt0.c0, rt0.c3, rt1.c1 FROM rt1, vt0, rt0 WHERE (((((rt0.c0) BETWEEN (rt1.c0) AND (rt0.c1)))/(LIKELIHOOD(rt1.c1, 0.771886415217384)))) GROUP BY vt0.c0, rt0.c3, rt1.c1 UNION SELECT vt0.c0, rt0.c3, rt1.c1 FROM rt1, vt0, rt0 WHERE ((NOT (((((rt0.c0) BETWEEN (rt1.c0) AND (rt0.c1)))/(LIKELIHOOD(rt1.c1, 0.771886415217384)))))) GROUP BY vt0.c0, rt0.c3, rt1.c1 UNION SELECT vt0.c0, rt0.c3, rt1.c1 FROM rt1, vt0, rt0 WHERE (((((((rt0.c0) BETWEEN (rt1.c0) AND (rt0.c1)))/(LIKELIHOOD(rt1.c1, 0.771886415217384)))) ISNULL)) GROUP BY vt0.c0, rt0.c3, rt1.c1;
SELECT vt0.c0, rt0.c3, rt1.c1 FROM rt1, vt0, rt0 GROUP BY vt0.c0, rt0.c3, rt1.c1;
SELECT ALL rt1.c0, rt0.c3, rt0.c2, vt1.c2, vt1.c3, vt1.c1, rt1.c2, rt0.c1, vt1.c0 FROM vt1, rt0 LEFT OUTER JOIN rt1 ON ((vt1.c2 IN ()) IN ()) LEFT OUTER JOIN vt0 ON CAST(((vt1.c2) ISNULL) AS INTEGER) GROUP BY rt1.c0, rt0.c3, rt0.c2, vt1.c2, vt1.c3, vt1.c1, rt1.c2, rt0.c1, vt1.c0;
SELECT rt1.c0, rt0.c3, rt0.c2, vt1.c2, vt1.c3, vt1.c1, rt1.c2, rt0.c1, vt1.c0 FROM vt1, rt0 LEFT OUTER JOIN rt1 ON ((vt1.c2 IN ()) IN ()) LEFT OUTER JOIN vt0 ON CAST(((vt1.c2) ISNULL) AS INTEGER) GROUP BY rt1.c0, rt0.c3, rt0.c2, vt1.c2, vt1.c3, vt1.c1, rt1.c2, rt0.c1, vt1.c0 HAVING GROUP_CONCAT(((((vt1.c0)AND(COUNT(*))))OR(vt0.c0))) UNION ALL SELECT rt1.c0, rt0.c3, rt0.c2, vt1.c2, vt1.c3, vt1.c1, rt1.c2, rt0.c1, vt1.c0 FROM vt1, rt0 LEFT OUTER JOIN rt1 ON ((vt1.c2 IN ()) IN ()) LEFT OUTER JOIN vt0 ON CAST(((vt1.c2) ISNULL) AS INTEGER) GROUP BY rt1.c0, rt0.c3, rt0.c2, vt1.c2, vt1.c3, vt1.c1, rt1.c2, rt0.c1, vt1.c0 HAVING (NOT (GROUP_CONCAT(((((vt1.c0)AND(COUNT(*))))OR(vt0.c0))))) UNION ALL SELECT rt1.c0, rt0.c3, rt0.c2, vt1.c2, vt1.c3, vt1.c1, rt1.c2, rt0.c1, vt1.c0 FROM vt1, rt0 LEFT OUTER JOIN rt1 ON ((vt1.c2 IN ()) IN ()) LEFT OUTER JOIN vt0 ON CAST(((vt1.c2) ISNULL) AS INTEGER) GROUP BY rt1.c0, rt0.c3, rt0.c2, vt1.c2, vt1.c3, vt1.c1, rt1.c2, rt0.c1, vt1.c0 HAVING ((GROUP_CONCAT(((((vt1.c0)AND(COUNT(*))))OR(vt0.c0)))) ISNULL);
SELECT ALL * FROM vt0, vt1, rt0 LEFT OUTER JOIN rt1 ON ((((((((((((((rt0.c0) ISNULL))OR(',v+<')))OR((rt0.c2 IN (vt1.c1)))))OR(ABS(DISTINCT rt0.c3))))OR(CASE vt1.c2  WHEN vt1.c3 THEN rt0.c0 ELSE rt1.c1 END)))OR(rt1.c0 COLLATE RTRIM)))AND(IFNULL(DISTINCT rt0.c2, rt0.c2)));
SELECT * FROM vt0, vt1, rt0 LEFT OUTER JOIN rt1 ON ((((((((((((((rt0.c0) ISNULL))OR(',v+<')))OR((rt0.c2 IN (vt1.c1)))))OR(ABS(DISTINCT rt0.c3))))OR(CASE vt1.c2  WHEN vt1.c3 THEN rt0.c0 ELSE rt1.c1 END)))OR(rt1.c0 COLLATE RTRIM)))AND(IFNULL(DISTINCT rt0.c2, rt0.c2))) WHERE (x'') UNION ALL SELECT * FROM vt0, vt1, rt0 LEFT OUTER JOIN rt1 ON ((((((((((((((rt0.c0) ISNULL))OR(',v+<')))OR((rt0.c2 IN (vt1.c1)))))OR(ABS(DISTINCT rt0.c3))))OR(CASE vt1.c2  WHEN vt1.c3 THEN rt0.c0 ELSE rt1.c1 END)))OR(rt1.c0 COLLATE RTRIM)))AND(IFNULL(DISTINCT rt0.c2, rt0.c2))) WHERE ((NOT (x''))) UNION ALL SELECT * FROM vt0, vt1, rt0 LEFT OUTER JOIN rt1 ON ((((((((((((((rt0.c0) ISNULL))OR(',v+<')))OR((rt0.c2 IN (vt1.c1)))))OR(ABS(DISTINCT rt0.c3))))OR(CASE vt1.c2  WHEN vt1.c3 THEN rt0.c0 ELSE rt1.c1 END)))OR(rt1.c0 COLLATE RTRIM)))AND(IFNULL(DISTINCT rt0.c2, rt0.c2))) WHERE (((x'') ISNULL));
SELECT ALL * FROM vt0, vt1, rt0 LEFT OUTER JOIN rt1 ON ((((((((((((((rt0.c0) ISNULL))OR(',v+<')))OR((rt0.c2 IN (vt1.c1)))))OR(ABS(DISTINCT rt0.c3))))OR(CASE vt1.c2  WHEN vt1.c3 THEN rt0.c0 ELSE rt1.c1 END)))OR(rt1.c0 COLLATE RTRIM)))AND(IFNULL(DISTINCT rt0.c2, rt0.c2)));
SELECT DISTINCT vt1.c1, vt1.c3, vt1.c2, rt0.c1, rt0.c0, rt0.c2, vt1.c0, rt0.c3, vt0.c0 FROM rt0, vt0, vt1;
SELECT DISTINCT vt1.c1, vt1.c3, vt1.c2, rt0.c1, rt0.c0, rt0.c2, vt1.c0, rt0.c3, vt0.c0 FROM rt0, vt0, vt1 WHERE ((NOT ((-660606757 IN ())))) UNION SELECT DISTINCT vt1.c1, vt1.c3, vt1.c2, rt0.c1, rt0.c0, rt0.c2, vt1.c0, rt0.c3, vt0.c0 FROM rt0, vt0, vt1 WHERE ((NOT ((NOT ((-660606757 IN ())))))) UNION SELECT DISTINCT vt1.c1, vt1.c3, vt1.c2, rt0.c1, rt0.c0, rt0.c2, vt1.c0, rt0.c3, vt0.c0 FROM rt0, vt0, vt1 WHERE ((((NOT ((-660606757 IN ())))) ISNULL));
SELECT DISTINCT vt1.c1, vt1.c3, vt1.c2, rt0.c1, rt0.c0, rt0.c2, vt1.c0, rt0.c3, vt0.c0 FROM rt0, vt0, vt1;
SELECT ALL rt0.c3, rt1.c0, rt1.c2 FROM rt1 FULL OUTER JOIN rt0 ON rt0.c2 GROUP BY rt0.c3, rt1.c0, rt1.c2;
SELECT ALL rt0.c3, rt1.c0, rt1.c2 FROM rt1 FULL OUTER JOIN rt0 ON rt0.c2 WHERE ((((- (rt1.c2))) IS FALSE)) GROUP BY rt0.c3, rt1.c0, rt1.c2 UNION SELECT rt0.c3, rt1.c0, rt1.c2 FROM rt1 FULL OUTER JOIN rt0 ON rt0.c2 WHERE ((NOT ((((- (rt1.c2))) IS FALSE)))) GROUP BY rt0.c3, rt1.c0, rt1.c2 UNION SELECT rt0.c3, rt1.c0, rt1.c2 FROM rt1 FULL OUTER JOIN rt0 ON rt0.c2 WHERE ((((((- (rt1.c2))) IS FALSE)) ISNULL)) GROUP BY rt0.c3, rt1.c0, rt1.c2;
SELECT ALL rt0.c3, rt1.c0, rt1.c2 FROM rt1 FULL OUTER JOIN rt0 ON rt0.c2 GROUP BY rt0.c3, rt1.c0, rt1.c2;
SELECT rt1.c1, vt1.c2, vt0.c0, rt0.c2, rt0.c0, rt1.c2, rt1.c0 FROM vt0, vt1 INNER JOIN rt0 ON vt1.c3 CROSS JOIN rt1 ON (NOT (((vt1.c3)>=(rt0.c3)))) GROUP BY rt1.c1, vt1.c2, vt0.c0, rt0.c2, rt0.c0, rt1.c2, rt1.c0;
SELECT ALL rt1.c1, vt1.c2, vt0.c0, rt0.c2, rt0.c0, rt1.c2, rt1.c0 FROM vt0, vt1 INNER JOIN rt0 ON vt1.c3 CROSS JOIN rt1 ON (NOT (((vt1.c3)>=(rt0.c3)))) GROUP BY rt1.c1, vt1.c2, vt0.c0, rt0.c2, rt0.c0, rt1.c2, rt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c1, vt1.c2, vt0.c0, rt0.c2, rt0.c0, rt1.c2, rt1.c0 FROM vt0, vt1 INNER JOIN rt0 ON vt1.c3 CROSS JOIN rt1 ON (NOT (((vt1.c3)>=(rt0.c3)))) GROUP BY rt1.c1, vt1.c2, vt0.c0, rt0.c2, rt0.c0, rt1.c2, rt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c1, vt1.c2, vt0.c0, rt0.c2, rt0.c0, rt1.c2, rt1.c0 FROM vt0, vt1 INNER JOIN rt0 ON vt1.c3 CROSS JOIN rt1 ON (NOT (((vt1.c3)>=(rt0.c3)))) GROUP BY rt1.c1, vt1.c2, vt0.c0, rt0.c2, rt0.c0, rt1.c2, rt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c1, vt1.c2, vt0.c0, rt0.c2, rt0.c0, rt1.c2, rt1.c0 FROM vt0, vt1 INNER JOIN rt0 ON vt1.c3 CROSS JOIN rt1 ON (NOT (((vt1.c3)>=(rt0.c3)))) GROUP BY rt1.c1, vt1.c2, vt0.c0, rt0.c2, rt0.c0, rt1.c2, rt1.c0;
SELECT ALL rt1.c1, vt1.c2, vt0.c0, rt0.c2, rt0.c0, rt1.c2, rt1.c0 FROM vt0, vt1 INNER JOIN rt0 ON vt1.c3 CROSS JOIN rt1 ON (NOT (((vt1.c3)>=(rt0.c3)))) GROUP BY rt1.c1, vt1.c2, vt0.c0, rt0.c2, rt0.c0, rt1.c2, rt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c1, vt1.c2, vt0.c0, rt0.c2, rt0.c0, rt1.c2, rt1.c0 FROM vt0, vt1 INNER JOIN rt0 ON vt1.c3 CROSS JOIN rt1 ON (NOT (((vt1.c3)>=(rt0.c3)))) GROUP BY rt1.c1, vt1.c2, vt0.c0, rt0.c2, rt0.c0, rt1.c2, rt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c1, vt1.c2, vt0.c0, rt0.c2, rt0.c0, rt1.c2, rt1.c0 FROM vt0, vt1 INNER JOIN rt0 ON vt1.c3 CROSS JOIN rt1 ON (NOT (((vt1.c3)>=(rt0.c3)))) GROUP BY rt1.c1, vt1.c2, vt0.c0, rt0.c2, rt0.c0, rt1.c2, rt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c1, vt1.c2, vt0.c0, rt0.c2, rt0.c0, rt1.c2, rt1.c0 FROM vt0, vt1 INNER JOIN rt0 ON vt1.c3 CROSS JOIN rt1 ON (NOT (((vt1.c3)>=(rt0.c3)))) GROUP BY rt1.c1, vt1.c2, vt0.c0, rt0.c2, rt0.c0, rt1.c2, rt1.c0;
SELECT vt1.c2, rt1.c0, rt1.c2, rt0.c0, vt1.c0, rt0.c2, rt0.c3, vt0.c0 FROM rt1, rt0, vt0, vt1;
SELECT ALL vt1.c2, rt1.c0, rt1.c2, rt0.c0, vt1.c0, rt0.c2, rt0.c3, vt0.c0 FROM rt1, rt0, vt0, vt1 WHERE ((NOT (((rt0.c2)<<(rt0.c0))))) UNION ALL SELECT ALL vt1.c2, rt1.c0, rt1.c2, rt0.c0, vt1.c0, rt0.c2, rt0.c3, vt0.c0 FROM rt1, rt0, vt0, vt1 WHERE ((NOT ((NOT (((rt0.c2)<<(rt0.c0))))))) UNION ALL SELECT vt1.c2, rt1.c0, rt1.c2, rt0.c0, vt1.c0, rt0.c2, rt0.c3, vt0.c0 FROM rt1, rt0, vt0, vt1 WHERE ((((NOT (((rt0.c2)<<(rt0.c0))))) ISNULL));
SELECT vt1.c2, rt1.c0, rt1.c2, rt0.c0, vt1.c0, rt0.c2, rt0.c3, vt0.c0 FROM rt1, rt0, vt0, vt1;
SELECT DISTINCT * FROM vt1, rt1;
SELECT DISTINCT * FROM vt1, rt1 WHERE ((((+ (rt1.c1)))AND(CASE rt1.c1  WHEN vt1.c0 THEN rt1.c0 END))) UNION SELECT DISTINCT * FROM vt1, rt1 WHERE ((NOT ((((+ (rt1.c1)))AND(CASE rt1.c1  WHEN vt1.c0 THEN rt1.c0 END))))) UNION SELECT DISTINCT * FROM vt1, rt1 WHERE ((((((+ (rt1.c1)))AND(CASE rt1.c1  WHEN vt1.c0 THEN rt1.c0 END))) ISNULL));
SELECT DISTINCT * FROM vt1, rt1;
SELECT ALL vt1.c1, rt0.c2, rt1.c2, vt1.c3, rt0.c1, rt1.c0, vt1.c0, rt0.c3, rt1.c1 FROM rt1, rt0, vt0 NATURAL JOIN vt1 GROUP BY vt1.c1, rt0.c2, rt1.c2, vt1.c3, rt0.c1, rt1.c0, vt1.c0, rt0.c3, rt1.c1;
SELECT ALL vt1.c1, rt0.c2, rt1.c2, vt1.c3, rt0.c1, rt1.c0, vt1.c0, rt0.c3, rt1.c1 FROM rt1, rt0, vt0 NATURAL JOIN vt1 WHERE (((CASE WHEN vt1.c2 THEN vt1.c3 END)<(TRIM(DISTINCT vt1.c1)))) GROUP BY vt1.c1, rt0.c2, rt1.c2, vt1.c3, rt0.c1, rt1.c0, vt1.c0, rt0.c3, rt1.c1 UNION SELECT ALL vt1.c1, rt0.c2, rt1.c2, vt1.c3, rt0.c1, rt1.c0, vt1.c0, rt0.c3, rt1.c1 FROM rt1, rt0, vt0 NATURAL JOIN vt1 WHERE ((NOT (((CASE WHEN vt1.c2 THEN vt1.c3 END)<(TRIM(DISTINCT vt1.c1)))))) GROUP BY vt1.c1, rt0.c2, rt1.c2, vt1.c3, rt0.c1, rt1.c0, vt1.c0, rt0.c3, rt1.c1 UNION SELECT vt1.c1, rt0.c2, rt1.c2, vt1.c3, rt0.c1, rt1.c0, vt1.c0, rt0.c3, rt1.c1 FROM rt1, rt0, vt0 NATURAL JOIN vt1 WHERE (((((CASE WHEN vt1.c2 THEN vt1.c3 END)<(TRIM(DISTINCT vt1.c1)))) ISNULL)) GROUP BY vt1.c1, rt0.c2, rt1.c2, vt1.c3, rt0.c1, rt1.c0, vt1.c0, rt0.c3, rt1.c1;
SELECT ALL vt1.c1, rt0.c2, rt1.c2, vt1.c3, rt0.c1, rt1.c0, vt1.c0, rt0.c3, rt1.c1 FROM rt1, rt0, vt0 NATURAL JOIN vt1 GROUP BY vt1.c1, rt0.c2, rt1.c2, vt1.c3, rt0.c1, rt1.c0, vt1.c0, rt0.c3, rt1.c1;
SELECT rt1.c2 FROM rt0, rt1 GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt0, rt1 GROUP BY rt1.c2 HAVING rt0.c2 UNION ALL SELECT rt1.c2 FROM rt0, rt1 GROUP BY rt1.c2 HAVING (NOT (rt0.c2)) UNION ALL SELECT rt1.c2 FROM rt0, rt1 GROUP BY rt1.c2 HAVING ((rt0.c2) ISNULL);
SELECT rt1.c2 FROM rt0, rt1 GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt0, rt1 GROUP BY rt1.c2 HAVING rt0.c2 UNION ALL SELECT rt1.c2 FROM rt0, rt1 GROUP BY rt1.c2 HAVING (NOT (rt0.c2)) UNION ALL SELECT rt1.c2 FROM rt0, rt1 GROUP BY rt1.c2 HAVING ((rt0.c2) ISNULL);
SELECT rt1.c2 FROM rt0, rt1 GROUP BY rt1.c2;
SELECT rt0.c0, rt1.c0, vt1.c2, vt0.c0, rt1.c2 FROM rt1, rt0, vt0, vt1;
SELECT rt0.c0, rt1.c0, vt1.c2, vt0.c0, rt1.c2 FROM rt1, rt0 NOT INDEXED, vt0, vt1 WHERE ((CAST(vt1.c2 AS TEXT) IN ())) UNION ALL SELECT ALL rt0.c0, rt1.c0, vt1.c2, vt0.c0, rt1.c2 FROM rt1, rt0, vt0, vt1 WHERE ((NOT ((CAST(vt1.c2 AS TEXT) IN ())))) UNION ALL SELECT rt0.c0, rt1.c0, vt1.c2, vt0.c0, rt1.c2 FROM rt1, rt0, vt0, vt1 WHERE ((((CAST(vt1.c2 AS TEXT) IN ())) ISNULL));
SELECT rt0.c0, rt1.c0, vt1.c2, vt0.c0, rt1.c2 FROM rt1, rt0, vt0, vt1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((((((((rt0.c3)AND(rt0.c2)))AND(rt0.c1)))AND(NULL)))AND(rt0.c2)) IN ())) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((((((((rt0.c3)AND(rt0.c2)))AND(rt0.c1)))AND(NULL)))AND(rt0.c2)) IN ())))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((((((((rt0.c3)AND(rt0.c2)))AND(rt0.c1)))AND(NULL)))AND(rt0.c2)) IN ())) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL vt1.c2, rt0.c1, rt0.c0, vt1.c0, vt0.c0, rt0.c3, vt1.c3, rt0.c2, vt1.c1 FROM rt0, vt1, vt0 GROUP BY vt1.c2, rt0.c1, rt0.c0, vt1.c0, vt0.c0, rt0.c3, vt1.c3, rt0.c2, vt1.c1;
SELECT ALL vt1.c2, rt0.c1, rt0.c0, vt1.c0, vt0.c0, rt0.c3, vt1.c3, rt0.c2, vt1.c1 FROM rt0, vt1, vt0 WHERE (CAST(rt0.c1 AS REAL) COLLATE NOCASE) GROUP BY vt1.c2, rt0.c1, rt0.c0, vt1.c0, vt0.c0, rt0.c3, vt1.c3, rt0.c2, vt1.c1 UNION SELECT vt1.c2, rt0.c1, rt0.c0, vt1.c0, vt0.c0, rt0.c3, vt1.c3, rt0.c2, vt1.c1 FROM rt0, vt1, vt0 WHERE ((NOT (CAST(rt0.c1 AS REAL) COLLATE NOCASE))) GROUP BY vt1.c2, rt0.c1, rt0.c0, vt1.c0, vt0.c0, rt0.c3, vt1.c3, rt0.c2, vt1.c1 UNION SELECT vt1.c2, rt0.c1, rt0.c0, vt1.c0, vt0.c0, rt0.c3, vt1.c3, rt0.c2, vt1.c1 FROM rt0, vt1, vt0 WHERE (((CAST(rt0.c1 AS REAL) COLLATE NOCASE) ISNULL)) GROUP BY vt1.c2, rt0.c1, rt0.c0, vt1.c0, vt0.c0, rt0.c3, vt1.c3, rt0.c2, vt1.c1;
SELECT ALL vt1.c2, rt0.c1, rt0.c0, vt1.c0, vt0.c0, rt0.c3, vt1.c3, rt0.c2, vt1.c1 FROM rt0, vt1, vt0 GROUP BY vt1.c2, rt0.c1, rt0.c0, vt1.c0, vt0.c0, rt0.c3, vt1.c3, rt0.c2, vt1.c1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((0.529430237496258)<>(GROUP_CONCAT(SUM(MAX(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((0.529430237496258)<>(GROUP_CONCAT(SUM(MAX(vt0.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((0.529430237496258)!=(GROUP_CONCAT(SUM(MAX(vt0.c0)))))) ISNULL);
SELECT ALL MIN((((vt1.c3)) NOT BETWEEN ((rt1.c1)) AND ((((((rt1.c2)AND(vt1.c3)))AND(vt1.c3)))))) FROM rt0, vt1, rt1 NOT INDEXED;
SELECT * FROM rt1;
SELECT ALL * FROM rt1 WHERE (rt1.c1) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT (rt1.c1))) UNION ALL SELECT ALL * FROM rt1 WHERE (((rt1.c1) ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT rt1.c1, rt1.c2 FROM rt1;
SELECT DISTINCT rt1.c1, rt1.c2 FROM rt1 WHERE (rt1.c1) UNION SELECT DISTINCT rt1.c1, rt1.c2 FROM rt1 WHERE ((NOT (rt1.c1))) UNION SELECT DISTINCT rt1.c1, rt1.c2 FROM rt1 WHERE (((rt1.c1) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c2 FROM rt1;
SELECT ALL vt1.c0, vt1.c2, vt1.c1 FROM vt1, rt1, vt0 GROUP BY vt1.c0, vt1.c2, vt1.c1;
SELECT ALL vt1.c0, vt1.c2, vt1.c1 FROM vt1, rt1, vt0 WHERE ((CASE vt1.c0  WHEN vt1.c1 THEN rt1.c2 ELSE vt1.c2 END IN ())) GROUP BY vt1.c0, vt1.c2, vt1.c1 UNION SELECT vt1.c0, vt1.c2, vt1.c1 FROM vt1, rt1, vt0 WHERE ((NOT ((CASE vt1.c0  WHEN vt1.c1 THEN rt1.c2 ELSE vt1.c2 END IN ())))) GROUP BY vt1.c0, vt1.c2, vt1.c1 UNION SELECT ALL vt1.c0, vt1.c2, vt1.c1 FROM vt1, rt1, vt0 WHERE ((((CASE vt1.c0  WHEN vt1.c1 THEN rt1.c2 ELSE vt1.c2 END IN ())) ISNULL)) GROUP BY vt1.c0, vt1.c2, vt1.c1;
SELECT ALL vt1.c0, vt1.c2, vt1.c1 FROM vt1, rt1, vt0 GROUP BY vt1.c0, vt1.c2, vt1.c1;
SELECT vt1.c2, rt0.c2, vt1.c0, vt0.c0 FROM vt1, rt1, vt0, rt0 GROUP BY vt1.c2, rt0.c2, vt1.c0, vt0.c0;
SELECT vt1.c2, rt0.c2, vt1.c0, vt0.c0 FROM vt1, rt1, vt0, rt0 NOT INDEXED GROUP BY vt1.c2, rt0.c2, vt1.c0, vt0.c0 HAVING CASE (((vt1.c1))>=((AVG(COUNT(*)))))  WHEN ((MAX(MIN(MAX(TOTAL(COUNT(MIN(rt0.c3))))))) ISNULL) THEN MAX(AVG(0.9323275693075431)) END UNION ALL SELECT ALL vt1.c2, rt0.c2, vt1.c0, vt0.c0 FROM vt1, rt1, vt0, rt0 GROUP BY vt1.c2, rt0.c2, vt1.c0, vt0.c0 HAVING (NOT (CASE (((vt1.c1))>=((AVG(COUNT(*)))))  WHEN ((MAX(MIN(MAX(TOTAL(COUNT(MIN(rt0.c3))))))) ISNULL) THEN MAX(AVG(0.9323275693075431)) END)) UNION ALL SELECT vt1.c2, rt0.c2, vt1.c0, vt0.c0 FROM vt1, rt1, vt0, rt0 GROUP BY vt1.c2, rt0.c2, vt1.c0, vt0.c0 HAVING ((CASE (((vt1.c1))>=((AVG(COUNT(*)))))  WHEN ((MAX(MIN(MAX(TOTAL(COUNT(MIN(rt0.c3))))))) ISNULL) THEN MAX(AVG(0.9323275693075431)) END) ISNULL);
SELECT * FROM vt1, rt0, rt1, vt0;
SELECT * FROM vt1, rt0, rt1, vt0 WHERE (TRIM(((vt1.c3)<=(rt1.c1)), 0.2075015836859554)) UNION ALL SELECT ALL * FROM vt1, rt0, rt1, vt0 WHERE ((NOT (TRIM(((vt1.c3)<=(rt1.c1)), 0.2075015836859554)))) UNION ALL SELECT * FROM vt1, rt0, rt1, vt0 WHERE (((TRIM(((vt1.c3)<=(rt1.c1)), 0.2075015836859554)) ISNULL));
SELECT * FROM vt1, rt0, rt1, vt0;
SELECT DISTINCT * FROM rt1 FULL OUTER JOIN vt0 ON CASE ((((vt1.c1)OR(rt1.c2)))OR(vt1.c2))  WHEN ((((rt0.c3)OR(vt0.c0)))OR(rt1.c1)) THEN CAST(rt0.c2 AS NUMERIC) END RIGHT OUTER JOIN vt1 ON ((vt1.c1 COLLATE RTRIM)IS('-660606757')) INNER JOIN rt0 ON CASE WHEN vt1.c2 THEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c3 ELSE vt1.c2 END END;
SELECT vt1.c3, rt1.c1, rt1.c0, vt1.c2, rt0.c3, rt0.c1, vt1.c1, rt1.c2, vt0.c0, rt0.c0 FROM vt0, rt0 CROSS JOIN rt1 ON CAST(CASE WHEN rt0.c3 THEN vt1.c0 ELSE x'' END AS NUMERIC) INNER JOIN vt1 ON (((((((((vt1.c2 IN (rt0.c1)))OR(TRIM(DISTINCT x'8d8b'))))AND(((((vt0.c0)AND('-1606677300')))AND(x'8d23')))))OR(CASE WHEN '120062009' THEN rt0.c0 END)))OR(LAST_INSERT_ROWID())) GROUP BY vt1.c3, rt1.c1, rt1.c0, vt1.c2, rt0.c3, rt0.c1, vt1.c1, rt1.c2, vt0.c0, rt0.c0;
SELECT vt1.c3, rt1.c1, rt1.c0, vt1.c2, rt0.c3, rt0.c1, vt1.c1, rt1.c2, vt0.c0, rt0.c0 FROM vt0, rt0 CROSS JOIN rt1 ON CAST(CASE WHEN rt0.c3 THEN vt1.c0 ELSE x'' END AS NUMERIC) INNER JOIN vt1 ON (((((((((vt1.c2 IN (rt0.c1)))OR(TRIM(DISTINCT x'8d8b'))))AND(((((vt0.c0)AND('-1606677300')))AND(x'8d23')))))OR(CASE WHEN '120062009' THEN rt0.c0 END)))OR(LAST_INSERT_ROWID())) WHERE (x'') GROUP BY vt1.c3, rt1.c1, rt1.c0, vt1.c2, rt0.c3, rt0.c1, vt1.c1, rt1.c2, vt0.c0, rt0.c0 UNION SELECT ALL vt1.c3, rt1.c1, rt1.c0, vt1.c2, rt0.c3, rt0.c1, vt1.c1, rt1.c2, vt0.c0, rt0.c0 FROM vt0, rt0 CROSS JOIN rt1 ON CAST(CASE WHEN rt0.c3 THEN vt1.c0 ELSE x'' END AS NUMERIC) INNER JOIN vt1 ON (((((((((vt1.c2 IN (rt0.c1)))OR(TRIM(DISTINCT x'8d8b'))))AND(((((vt0.c0)AND('-1606677300')))AND(x'8d23')))))OR(CASE WHEN '120062009' THEN rt0.c0 END)))OR(LAST_INSERT_ROWID())) WHERE ((NOT (x''))) GROUP BY vt1.c3, rt1.c1, rt1.c0, vt1.c2, rt0.c3, rt0.c1, vt1.c1, rt1.c2, vt0.c0, rt0.c0 UNION SELECT vt1.c3, rt1.c1, rt1.c0, vt1.c2, rt0.c3, rt0.c1, vt1.c1, rt1.c2, vt0.c0, rt0.c0 FROM vt0, rt0 CROSS JOIN rt1 ON CAST(CASE WHEN rt0.c3 THEN vt1.c0 ELSE x'' END AS NUMERIC) INNER JOIN vt1 ON (((((((((vt1.c2 IN (rt0.c1)))OR(TRIM(DISTINCT x'8d8b'))))AND(((((vt0.c0)AND('-1606677300')))AND(x'8d23')))))OR(CASE WHEN '120062009' THEN rt0.c0 END)))OR(LAST_INSERT_ROWID())) WHERE (((x'') ISNULL)) GROUP BY vt1.c3, rt1.c1, rt1.c0, vt1.c2, rt0.c3, rt0.c1, vt1.c1, rt1.c2, vt0.c0, rt0.c0;
SELECT vt1.c3, rt1.c1, rt1.c0, vt1.c2, rt0.c3, rt0.c1, vt1.c1, rt1.c2, vt0.c0, rt0.c0 FROM vt0, rt0 CROSS JOIN rt1 ON CAST(CASE WHEN rt0.c3 THEN vt1.c0 ELSE x'' END AS NUMERIC) INNER JOIN vt1 ON (((((((((vt1.c2 IN (rt0.c1)))OR(TRIM(DISTINCT x'8d8b'))))AND(((((vt0.c0)AND('-1606677300')))AND(x'8d23')))))OR(CASE WHEN '120062009' THEN rt0.c0 END)))OR(LAST_INSERT_ROWID())) GROUP BY vt1.c3, rt1.c1, rt1.c0, vt1.c2, rt0.c3, rt0.c1, vt1.c1, rt1.c2, vt0.c0, rt0.c0;
SELECT ALL rt0.c2, vt1.c2, vt1.c3, vt1.c1, vt0.c0, rt1.c1 FROM rt0 CROSS JOIN vt1 ON ((((((vt0.c0)AND(rt1.c1)))OR(rt1.c2)))AND(((vt0.c0) IS TRUE))) INNER JOIN rt1 ON QUOTE(((vt1.c3)/(rt1.c1))) RIGHT OUTER JOIN vt0 ON (((rt1.c1, rt1.c1, vt0.c0)) BETWEEN (((- (vt1.c3)), ((((rt0.c0)OR(rt0.c0)))AND(rt0.c3)), CAST(vt1.c0 AS BLOB))) AND ((vt1.c3 COLLATE BINARY, CAST(x'' AS NUMERIC), (- (vt1.c0))))) GROUP BY rt0.c2, vt1.c2, vt1.c3, vt1.c1, vt0.c0, rt1.c1;
SELECT ALL rt1.c2 FROM rt1;
SELECT rt1.c2 FROM rt1 WHERE (CAST(CASE rt1.c2  WHEN rt1.c0 THEN '247301686' END AS TEXT)) UNION ALL SELECT ALL rt1.c2 FROM rt1 WHERE ((NOT (CAST(CASE rt1.c2  WHEN rt1.c0 THEN '247301686' END AS TEXT)))) UNION ALL SELECT rt1.c2 FROM rt1 WHERE (((CAST(CASE rt1.c2  WHEN rt1.c0 THEN '247301686' END AS TEXT)) ISNULL));
SELECT ALL rt1.c2 FROM rt1;
SELECT DISTINCT * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1 WHERE (CASE WHEN vt1.c2 THEN vt1.c0 WHEN vt1.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE vt1.c1 END COLLATE RTRIM) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((NOT (CASE WHEN vt1.c2 THEN vt1.c0 WHEN vt1.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE vt1.c1 END COLLATE RTRIM))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE (((CASE WHEN vt1.c2 THEN vt1.c0 WHEN vt1.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE vt1.c1 END COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM rt0, vt1;
SELECT vt1.c1, vt1.c3, vt0.c0, vt1.c0, rt1.c1, vt1.c2 FROM vt1, rt1, vt0 GROUP BY vt1.c1, vt1.c3, vt0.c0, vt1.c0, rt1.c1, vt1.c2;
SELECT vt1.c1, vt1.c3, vt0.c0, vt1.c0, rt1.c1, vt1.c2 FROM vt1, rt1, vt0 WHERE (((vt1.c2)IS NOT(vt1.c2)) COLLATE NOCASE) GROUP BY vt1.c1, vt1.c3, vt0.c0, vt1.c0, rt1.c1, vt1.c2 UNION SELECT vt1.c1, vt1.c3, vt0.c0, vt1.c0, rt1.c1, vt1.c2 FROM vt1, rt1, vt0 WHERE ((NOT (((vt1.c2)IS NOT(vt1.c2)) COLLATE NOCASE))) GROUP BY vt1.c1, vt1.c3, vt0.c0, vt1.c0, rt1.c1, vt1.c2 UNION SELECT vt1.c1, vt1.c3, vt0.c0, vt1.c0, rt1.c1, vt1.c2 FROM vt1, rt1, vt0 WHERE (((((vt1.c2)IS NOT(vt1.c2)) COLLATE NOCASE) ISNULL)) GROUP BY vt1.c1, vt1.c3, vt0.c0, vt1.c0, rt1.c1, vt1.c2;
SELECT vt1.c1, vt1.c3, vt0.c0, vt1.c0, rt1.c1, vt1.c2 FROM vt1, rt1, vt0 GROUP BY vt1.c1, vt1.c3, vt0.c0, vt1.c0, rt1.c1, vt1.c2;
SELECT rt0.c0, vt1.c0 FROM vt1, rt1 INNER JOIN vt0 ON (CAST(rt1.c1 AS INTEGER) IN ()) RIGHT OUTER JOIN rt0 ON (((((rt1.c1, rt0.c2, vt1.c0)) NOT BETWEEN ((rt1.c2, rt0.c2, rt0.c2)) AND ((rt0.c2, vt1.c0, vt1.c2)))) NOT BETWEEN (((((rt0.c2)OR(rt1.c0)))OR(rt0.c0))) AND (((('1080360532')) BETWEEN ((rt0.c3)) AND ((rt0.c3))))) GROUP BY rt0.c0, vt1.c0;
SELECT ALL rt0.c0, vt1.c0 FROM vt1, rt1 INNER JOIN vt0 ON (CAST(rt1.c1 AS INTEGER) IN ()) RIGHT OUTER JOIN rt0 ON (((((rt1.c1, rt0.c2, vt1.c0)) NOT BETWEEN ((rt1.c2, rt0.c2, rt0.c2)) AND ((rt0.c2, vt1.c0, vt1.c2)))) NOT BETWEEN (((((rt0.c2)OR(rt1.c0)))OR(rt0.c0))) AND (((('1080360532')) BETWEEN ((rt0.c3)) AND ((rt0.c3))))) GROUP BY rt0.c0, vt1.c0 HAVING MIN(MAX(vt1.c2)) UNION ALL SELECT ALL rt0.c0, vt1.c0 FROM vt1, rt1 INNER JOIN vt0 ON (CAST(rt1.c1 AS INTEGER) IN ()) RIGHT OUTER JOIN rt0 ON (((((rt1.c1, rt0.c2, vt1.c0)) NOT BETWEEN ((rt1.c2, rt0.c2, rt0.c2)) AND ((rt0.c2, vt1.c0, vt1.c2)))) NOT BETWEEN (((((rt0.c2)OR(rt1.c0)))OR(rt0.c0))) AND (((('1080360532')) BETWEEN ((rt0.c3)) AND ((rt0.c3))))) GROUP BY rt0.c0, vt1.c0 HAVING (NOT (MIN(MAX(vt1.c2)))) UNION ALL SELECT rt0.c0, vt1.c0 FROM vt1, rt1 INNER JOIN vt0 ON (CAST(rt1.c1 AS INTEGER) IN ()) RIGHT OUTER JOIN rt0 ON (((((rt1.c1, rt0.c2, vt1.c0)) NOT BETWEEN ((rt1.c2, rt0.c2, rt0.c2)) AND ((rt0.c2, vt1.c0, vt1.c2)))) NOT BETWEEN (((((rt0.c2)OR(rt1.c0)))OR(rt0.c0))) AND (((('1080360532')) BETWEEN ((rt0.c3)) AND ((rt0.c3))))) GROUP BY rt0.c0, vt1.c0 HAVING ((MIN(MAX(vt1.c2))) ISNULL);
SELECT ALL rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((((rt0.c0)<=(rt0.c2))) BETWEEN (CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END) AND (((((rt0.c2)OR(rt0.c2)))OR(NULL))))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c0)<=(rt0.c2))) BETWEEN (CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END) AND (((((rt0.c2)OR(rt0.c2)))OR(NULL))))))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (((((((rt0.c0)<=(rt0.c2))) BETWEEN (CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END) AND (((((rt0.c2)OR(rt0.c2)))OR(NULL))))) ISNULL));
SELECT ALL rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1, rt1.c0, vt1.c0, rt0.c3 FROM rt1, vt1, rt0;
SELECT DISTINCT rt0.c1, rt1.c0, vt1.c0, rt0.c3 FROM rt1, vt1, rt0 WHERE (((rt0.c3) BETWEEN (((rt1.c2) NOT BETWEEN (rt0.c0) AND (-916945694))) AND (MAX(rt0.c0, vt1.c0)))) UNION SELECT DISTINCT rt0.c1, rt1.c0, vt1.c0, rt0.c3 FROM rt1, vt1, rt0 WHERE ((NOT (((rt0.c3) BETWEEN (((rt1.c2) NOT BETWEEN (rt0.c0) AND (-916945694))) AND (MAX(rt0.c0, vt1.c0)))))) UNION SELECT DISTINCT rt0.c1, rt1.c0, vt1.c0, rt0.c3 FROM rt1, vt1, rt0 WHERE (((((rt0.c3) BETWEEN (((rt1.c2) NOT BETWEEN (rt0.c0) AND (-916945694))) AND (MAX(rt0.c0, vt1.c0)))) ISNULL));
SELECT DISTINCT rt0.c1, rt1.c0, vt1.c0, rt0.c3 FROM rt1, vt1, rt0;
SELECT ALL rt1.c2, vt0.c0, vt1.c2 FROM vt1, rt0 NOT INDEXED, vt0 FULL OUTER JOIN rt1 ON CASE vt0.c0  WHEN NULL THEN rt0.c0 WHEN rt1.c1 THEN rt1.c0 WHEN vt1.c3 THEN vt0.c0 END COLLATE NOCASE GROUP BY rt1.c2, vt0.c0, vt1.c2;
SELECT ALL rt1.c2, vt0.c0, vt1.c2 FROM vt1, rt0, vt0 FULL OUTER JOIN rt1 ON CASE vt0.c0  WHEN NULL THEN rt0.c0 WHEN rt1.c1 THEN rt1.c0 WHEN vt1.c3 THEN vt0.c0 END COLLATE NOCASE WHERE (UNLIKELY(((vt1.c3)IS(rt0.c0)))) GROUP BY rt1.c2, vt0.c0, vt1.c2 UNION SELECT ALL rt1.c2, vt0.c0, vt1.c2 FROM vt1, rt0, vt0 FULL OUTER JOIN rt1 ON CASE vt0.c0  WHEN NULL THEN rt0.c0 WHEN rt1.c1 THEN rt1.c0 WHEN vt1.c3 THEN vt0.c0 END COLLATE NOCASE WHERE ((NOT (UNLIKELY(((vt1.c3)IS(rt0.c0)))))) GROUP BY rt1.c2, vt0.c0, vt1.c2 UNION SELECT ALL rt1.c2, vt0.c0, vt1.c2 FROM vt1, rt0, vt0 FULL OUTER JOIN rt1 ON CASE vt0.c0  WHEN NULL THEN rt0.c0 WHEN rt1.c1 THEN rt1.c0 WHEN vt1.c3 THEN vt0.c0 END COLLATE NOCASE WHERE (((UNLIKELY(((vt1.c3)IS(rt0.c0)))) ISNULL)) GROUP BY rt1.c2, vt0.c0, vt1.c2;
SELECT ALL rt1.c2, vt0.c0, vt1.c2 FROM vt1, rt0 NOT INDEXED, vt0 FULL OUTER JOIN rt1 ON CASE vt0.c0  WHEN NULL THEN rt0.c0 WHEN rt1.c1 THEN rt1.c0 WHEN vt1.c3 THEN vt0.c0 END COLLATE NOCASE GROUP BY rt1.c2, vt0.c0, vt1.c2;
SELECT ALL vt1.c2, rt1.c2, rt0.c3, vt1.c3, rt0.c1 FROM rt1, vt0, rt0, vt1 GROUP BY vt1.c2, rt1.c2, rt0.c3, vt1.c3, rt0.c1;
SELECT ALL vt1.c2, rt1.c2, rt0.c3, vt1.c3, rt0.c1 FROM rt1, vt0, rt0, vt1 GROUP BY vt1.c2, rt1.c2, rt0.c3, vt1.c3, rt0.c1 HAVING COUNT(MAX(AVG(SUM(MAX(vt0.c0))))) UNION ALL SELECT vt1.c2, rt1.c2, rt0.c3, vt1.c3, rt0.c1 FROM rt1, vt0, rt0, vt1 GROUP BY vt1.c2, rt1.c2, rt0.c3, vt1.c3, rt0.c1 HAVING (NOT (COUNT(MAX(AVG(SUM(MAX(vt0.c0))))))) UNION ALL SELECT vt1.c2, rt1.c2, rt0.c3, vt1.c3, rt0.c1 FROM rt1, vt0, rt0, vt1 GROUP BY vt1.c2, rt1.c2, rt0.c3, vt1.c3, rt0.c1 HAVING ((COUNT(MAX(AVG(SUM(MAX(vt0.c0)))))) ISNULL);
SELECT ALL rt1.c1, rt1.c0 FROM vt0, rt1;
SELECT rt1.c1, rt1.c0 FROM vt0, rt1 WHERE ((- (((rt1.c0) NOT NULL)))) UNION ALL SELECT ALL rt1.c1, rt1.c0 FROM vt0, rt1 WHERE ((NOT ((- (((rt1.c0) NOT NULL)))))) UNION ALL SELECT rt1.c1, rt1.c0 FROM vt0 NOT INDEXED, rt1 WHERE ((((- (((rt1.c0) NOT NULL)))) ISNULL));
SELECT ALL rt1.c1, rt1.c0 FROM vt0, rt1;
SELECT DISTINCT * FROM rt0, rt1;
SELECT DISTINCT * FROM rt0, rt1 WHERE (((((NOT (rt0.c2))))>((((NULL)LIKE(rt1.c2)))))) UNION SELECT DISTINCT * FROM rt0, rt1 WHERE ((NOT (((((NOT (rt0.c2))))>((((NULL)LIKE(rt1.c2)))))))) UNION SELECT DISTINCT * FROM rt0, rt1 WHERE (((((((NOT (rt0.c2))))>((((NULL)LIKE(rt1.c2)))))) ISNULL));
SELECT DISTINCT * FROM rt0, rt1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE (CAST(((rt0.c2)OR(rt0.c2)) AS INTEGER)) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT (CAST(((rt0.c2)OR(rt0.c2)) AS INTEGER)))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE (((CAST(((rt0.c2)OR(rt0.c2)) AS INTEGER)) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1, vt1.c1 FROM rt0, vt1 GROUP BY rt0.c1, vt1.c1;
SELECT ALL rt0.c1, vt1.c1 FROM rt0, vt1 GROUP BY rt0.c1, vt1.c1 HAVING ((CASE WHEN vt1.c1 THEN rt0.c0 WHEN vt1.c1 THEN rt0.c2 WHEN vt1.c3 THEN TOTAL(vt1.c0) END)/(MIN(MIN(rt0.c3)))) UNION ALL SELECT rt0.c1, vt1.c1 FROM rt0, vt1 GROUP BY rt0.c1, vt1.c1 HAVING (NOT (((CASE WHEN vt1.c1 THEN rt0.c0 WHEN vt1.c1 THEN rt0.c2 WHEN vt1.c3 THEN TOTAL(vt1.c0) END)/(MIN(MIN(rt0.c3)))))) UNION ALL SELECT rt0.c1, vt1.c1 FROM rt0, vt1 GROUP BY rt0.c1, vt1.c1 HAVING ((((CASE WHEN vt1.c1 THEN rt0.c0 WHEN vt1.c1 THEN rt0.c2 WHEN vt1.c3 THEN TOTAL(vt1.c0) END)/(MIN(MIN(rt0.c3))))) ISNULL);
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON 'LI' COLLATE NOCASE;
SELECT * FROM vt1 CROSS JOIN vt0 ON 'LI' COLLATE NOCASE WHERE (LIKELY(((vt1.c1) BETWEEN (vt1.c3) AND (vt1.c3)))) UNION ALL SELECT * FROM vt1 CROSS JOIN vt0 ON 'LI' COLLATE NOCASE WHERE ((NOT (LIKELY(((vt1.c1) BETWEEN (vt1.c3) AND (vt1.c3)))))) UNION ALL SELECT ALL * FROM vt1 CROSS JOIN vt0 ON 'LI' COLLATE NOCASE WHERE (((LIKELY(((vt1.c1) BETWEEN (vt1.c3) AND (vt1.c3)))) ISNULL));
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON 'LI' COLLATE NOCASE;
SELECT DISTINCT * FROM rt1, vt0;
SELECT DISTINCT * FROM rt1, vt0 WHERE ('-2121528941') UNION SELECT DISTINCT * FROM rt1, vt0 WHERE ((NOT ('-2121528941'))) UNION SELECT DISTINCT * FROM rt1, vt0 WHERE ((('-2121528941') ISNULL));
SELECT DISTINCT * FROM rt1, vt0;
SELECT rt0.c0, vt1.c2, rt0.c1, rt0.c3, vt1.c3, vt0.c0, vt1.c0 FROM rt0, vt0 CROSS JOIN vt1 ON CASE ((((rt0.c0)AND(vt1.c2)))OR(rt0.c3))  WHEN ((0.43748841612059575) BETWEEN (rt0.c3) AND (rt0.c2)) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c0 END WHEN (NOT (vt0.c0)) THEN CAST(vt1.c2 AS TEXT) WHEN (((vt1.c0)) BETWEEN ((vt0.c0)) AND ((x''))) THEN CASE vt1.c0  WHEN vt0.c0 THEN vt1.c1 ELSE rt0.c1 END ELSE (((vt1.c3, rt0.c0, vt1.c2))<((NULL, vt1.c2, 0Xffffffffda1e5ef0))) END GROUP BY rt0.c0, vt1.c2, rt0.c1, rt0.c3, vt1.c3, vt0.c0, vt1.c0;
SELECT rt0.c0, vt1.c2, rt0.c1, rt0.c3, vt1.c3, vt0.c0, vt1.c0 FROM rt0, vt0 CROSS JOIN vt1 ON CASE ((((rt0.c0)AND(vt1.c2)))OR(rt0.c3))  WHEN ((0.43748841612059575) BETWEEN (rt0.c3) AND (rt0.c2)) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c0 END WHEN (NOT (vt0.c0)) THEN CAST(vt1.c2 AS TEXT) WHEN (((vt1.c0)) BETWEEN ((vt0.c0)) AND ((x''))) THEN CASE vt1.c0  WHEN vt0.c0 THEN vt1.c1 ELSE rt0.c1 END ELSE (((vt1.c3, rt0.c0, vt1.c2))<((NULL, vt1.c2, 0xffffffffda1e5ef0))) END WHERE (NULL) GROUP BY rt0.c0, vt1.c2, rt0.c1, rt0.c3, vt1.c3, vt0.c0, vt1.c0 UNION SELECT ALL rt0.c0, vt1.c2, rt0.c1, rt0.c3, vt1.c3, vt0.c0, vt1.c0 FROM rt0, vt0 CROSS JOIN vt1 ON CASE ((((rt0.c0)AND(vt1.c2)))OR(rt0.c3))  WHEN ((0.43748841612059575) BETWEEN (rt0.c3) AND (rt0.c2)) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c0 END WHEN (NOT (vt0.c0)) THEN CAST(vt1.c2 AS TEXT) WHEN (((vt1.c0)) BETWEEN ((vt0.c0)) AND ((x''))) THEN CASE vt1.c0  WHEN vt0.c0 THEN vt1.c1 ELSE rt0.c1 END ELSE (((vt1.c3, rt0.c0, vt1.c2))<((NULL, vt1.c2, 0Xffffffffda1e5ef0))) END WHERE ((NOT (NULL))) GROUP BY rt0.c0, vt1.c2, rt0.c1, rt0.c3, vt1.c3, vt0.c0, vt1.c0 UNION SELECT rt0.c0, vt1.c2, rt0.c1, rt0.c3, vt1.c3, vt0.c0, vt1.c0 FROM rt0, vt0 CROSS JOIN vt1 ON CASE ((((rt0.c0)AND(vt1.c2)))OR(rt0.c3))  WHEN ((0.43748841612059575) BETWEEN (rt0.c3) AND (rt0.c2)) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c0 END WHEN (NOT (vt0.c0)) THEN CAST(vt1.c2 AS TEXT) WHEN (((vt1.c0)) BETWEEN ((vt0.c0)) AND ((x''))) THEN CASE vt1.c0  WHEN vt0.c0 THEN vt1.c1 ELSE rt0.c1 END ELSE (((vt1.c3, rt0.c0, vt1.c2))<((NULL, vt1.c2, 0Xffffffffda1e5ef0))) END WHERE (((NULL) ISNULL)) GROUP BY rt0.c0, vt1.c2, rt0.c1, rt0.c3, vt1.c3, vt0.c0, vt1.c0;
SELECT rt0.c0, vt1.c2, rt0.c1, rt0.c3, vt1.c3, vt0.c0, vt1.c0 FROM rt0, vt0 CROSS JOIN vt1 ON CASE ((((rt0.c0)AND(vt1.c2)))OR(rt0.c3))  WHEN ((0.43748841612059575) BETWEEN (rt0.c3) AND (rt0.c2)) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c0 END WHEN (NOT (vt0.c0)) THEN CAST(vt1.c2 AS TEXT) WHEN (((vt1.c0)) BETWEEN ((vt0.c0)) AND ((x''))) THEN CASE vt1.c0  WHEN vt0.c0 THEN vt1.c1 ELSE rt0.c1 END ELSE (((vt1.c3, rt0.c0, vt1.c2))<((NULL, vt1.c2, 0Xffffffffda1e5ef0))) END GROUP BY rt0.c0, vt1.c2, rt0.c1, rt0.c3, vt1.c3, vt0.c0, vt1.c0;
SELECT ALL rt1.c2 FROM rt1, rt0 GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1, rt0 GROUP BY rt1.c2 HAVING COUNT(MAX(MAX(MIN(MAX(MAX(MAX(rt1.c2))))))) UNION ALL SELECT rt1.c2 FROM rt1, rt0 GROUP BY rt1.c2 HAVING (NOT (COUNT(MAX(MAX(MIN(MAX(MAX(MAX(rt1.c2))))))))) UNION ALL SELECT rt1.c2 FROM rt1, rt0 GROUP BY rt1.c2 HAVING ((COUNT(MAX(MAX(MIN(MAX(MAX(MAX(rt1.c2)))))))) ISNULL);
SELECT rt0.c0, rt1.c0, rt0.c3, vt1.c2 FROM rt1, vt1, vt0, rt0;
SELECT rt0.c0, rt1.c0, rt0.c3, vt1.c2 FROM rt1, vt1, vt0, rt0 WHERE (((((rt1.c2)||(rt0.c1))) NOTNULL)) UNION ALL SELECT rt0.c0, rt1.c0, rt0.c3, vt1.c2 FROM rt1, vt1, vt0, rt0 WHERE ((NOT (((((rt1.c2)||(rt0.c1))) NOTNULL)))) UNION ALL SELECT ALL rt0.c0, rt1.c0, rt0.c3, vt1.c2 FROM rt1, vt1, vt0, rt0 WHERE (((((((rt1.c2)||(rt0.c1))) NOTNULL)) ISNULL));
SELECT rt0.c0, rt1.c0, rt0.c3, vt1.c2 FROM rt1, vt1, vt0, rt0;
SELECT DISTINCT rt1.c0, rt1.c1 FROM rt1;
SELECT DISTINCT rt1.c0, rt1.c1 FROM rt1 WHERE ((rt1.c2 IN (rt1.c1, rt1.c0)) COLLATE BINARY) UNION SELECT DISTINCT rt1.c0, rt1.c1 FROM rt1 WHERE ((NOT ((rt1.c2 IN (rt1.c1, rt1.c0)) COLLATE BINARY))) UNION SELECT DISTINCT rt1.c0, rt1.c1 FROM rt1 WHERE ((((rt1.c2 IN (rt1.c1, rt1.c0)) COLLATE BINARY) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c1 FROM rt1;
SELECT ALL rt0.c0 FROM rt1 FULL OUTER JOIN rt0 ON ((((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c3))) NOT BETWEEN (CASE WHEN rt1.c0 THEN rt0.c3 END) AND (((rt0.c3) IS TRUE))) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt1 FULL OUTER JOIN rt0 ON ((((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c3))) NOT BETWEEN (CASE WHEN rt1.c0 THEN rt0.c3 END) AND (((rt0.c3) IS TRUE))) WHERE (CAST(rt0.c0 AS TEXT)) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt1 FULL OUTER JOIN rt0 ON ((((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c3))) NOT BETWEEN (CASE WHEN rt1.c0 THEN rt0.c3 END) AND (((rt0.c3) IS TRUE))) WHERE ((NOT (CAST(rt0.c0 AS TEXT)))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt1 FULL OUTER JOIN rt0 ON ((((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c3))) NOT BETWEEN (CASE WHEN rt1.c0 THEN rt0.c3 END) AND (((rt0.c3) IS TRUE))) WHERE (((CAST(rt0.c0 AS TEXT)) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt1 FULL OUTER JOIN rt0 ON ((((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c3))) NOT BETWEEN (CASE WHEN rt1.c0 THEN rt0.c3 END) AND (((rt0.c3) IS TRUE))) GROUP BY rt0.c0;
SELECT rt0.c1, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2;
SELECT ALL rt0.c1, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2 HAVING COUNT(*) UNION ALL SELECT rt0.c1, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c1, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2;
SELECT ALL rt0.c1, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2 HAVING COUNT(*) UNION ALL SELECT rt0.c1, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c1, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2;
SELECT ALL rt0.c3, rt0.c0, rt1.c2, rt0.c1, vt1.c2, vt0.c0, rt1.c1, vt1.c3, vt1.c0, rt0.c2 FROM vt0, vt1 LEFT OUTER JOIN rt1 ON CAST(((vt1.c1) BETWEEN (rt0.c1) AND (rt1.c2)) AS INTEGER) CROSS JOIN rt0 ON ((((rt1.c1) NOT NULL))<(((rt1.c0) IS TRUE)));
SELECT DISTINCT * FROM vt0, vt1, rt1;
SELECT DISTINCT * FROM vt0, vt1, rt1 WHERE ((+ (vt1.c1)) COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt0, vt1, rt1 WHERE ((NOT ((+ (vt1.c1)) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt0, vt1, rt1 WHERE ((((+ (vt1.c1)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt0, vt1, rt1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CAST(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) AS INTEGER)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CAST(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) AS INTEGER)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((CAST(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) AS INTEGER)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c1, rt0.c3 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c3;
SELECT ALL rt0.c1, rt0.c3 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c3 HAVING CHAR(((COUNT(SUM(rt0.c2)))!=(AVG(rt0.c3)))) UNION ALL SELECT rt0.c1, rt0.c3 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c3 HAVING (NOT (CHAR(((COUNT(SUM(rt0.c2)))!=(AVG(rt0.c3)))))) UNION ALL SELECT rt0.c1, rt0.c3 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c3 HAVING ((CHAR(((COUNT(SUM(rt0.c2)))<>(AVG(rt0.c3))))) ISNULL);
SELECT * FROM rt0, vt1, vt0;
SELECT ALL * FROM rt0, vt1, vt0 WHERE (vt1.c0) UNION ALL SELECT * FROM rt0, vt1, vt0 WHERE ((NOT (vt1.c0))) UNION ALL SELECT ALL * FROM rt0, vt1, vt0 WHERE (((vt1.c0) ISNULL));
SELECT * FROM rt0, vt1, vt0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (874466059) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (874466059))) UNION SELECT DISTINCT * FROM rt1 WHERE (((874466059) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0) NOT NULL))+((~ (NULL))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) NOT NULL))+((~ (NULL))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c0) NOT NULL))+((~ (NULL))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt1.c2, vt1.c0 FROM rt0 NOT INDEXED, vt0 RIGHT OUTER JOIN vt1 ON CASE NULL  WHEN rt1.c1 THEN CASE vt0.c0  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt1.c0 WHEN rt0.c1 THEN vt1.c3 END WHEN vt0.c0 THEN ((rt1.c2)>>(vt1.c2)) WHEN CAST(rt1.c0 AS REAL) THEN vt1.c2 COLLATE RTRIM ELSE ((rt0.c3) NOTNULL) END INNER JOIN rt1 ON CAST(x'' AS NUMERIC) GROUP BY vt1.c2, vt1.c0;
SELECT * FROM vt0, rt1 CROSS JOIN rt0 ON ((CASE WHEN rt1.c2 THEN rt0.c3 END) NOTNULL);
SELECT * FROM vt0, rt1 CROSS JOIN rt0 ON ((CASE WHEN rt1.c2 THEN rt0.c3 END) NOTNULL) WHERE (0.7216951600316174) UNION ALL SELECT ALL * FROM vt0, rt1 CROSS JOIN rt0 ON ((CASE WHEN rt1.c2 THEN rt0.c3 END) NOTNULL) WHERE ((NOT (0.7216951600316174))) UNION ALL SELECT ALL * FROM vt0, rt1 CROSS JOIN rt0 ON ((CASE WHEN rt1.c2 THEN rt0.c3 END) NOTNULL) WHERE (((0.7216951600316174) ISNULL));
SELECT * FROM vt0, rt1 CROSS JOIN rt0 ON ((CASE WHEN rt1.c2 THEN rt0.c3 END) NOTNULL);
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c1) NOT NULL)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c1) NOT NULL)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c1) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c0;
SELECT rt0.c3, rt0.c0 FROM rt0 WHERE (rt0.c0) GROUP BY rt0.c3, rt0.c0 UNION SELECT ALL rt0.c3, rt0.c0 FROM rt0 WHERE ((NOT (rt0.c0))) GROUP BY rt0.c3, rt0.c0 UNION SELECT rt0.c3, rt0.c0 FROM rt0 WHERE (((rt0.c0) ISNULL)) GROUP BY rt0.c3, rt0.c0;
SELECT ALL rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(GROUP_CONCAT(vt0.c0)))>(COUNT(COUNT(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((TOTAL(GROUP_CONCAT(vt0.c0)))>(COUNT(COUNT(vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((TOTAL(GROUP_CONCAT(vt0.c0)))>(COUNT(COUNT(vt0.c0))))) ISNULL);
SELECT ALL * FROM vt0, rt1, vt1;
SELECT * FROM vt0, rt1, vt1 WHERE ((- (CHANGES()))) UNION ALL SELECT ALL * FROM vt0, rt1, vt1 WHERE ((NOT ((- (CHANGES()))))) UNION ALL SELECT ALL * FROM vt0, rt1, vt1 WHERE ((((- (CHANGES()))) ISNULL));
SELECT ALL * FROM vt0, rt1, vt1;
SELECT DISTINCT rt1.c2, vt1.c1, vt1.c3, vt1.c2, vt1.c0, rt1.c0, rt1.c1 FROM rt1 NATURAL JOIN vt1;
SELECT DISTINCT rt1.c2, vt1.c1, vt1.c3, vt1.c2, vt1.c0, rt1.c0, rt1.c1 FROM rt1 NATURAL JOIN vt1 WHERE (CAST(vt1.c0 COLLATE RTRIM AS TEXT)) UNION SELECT DISTINCT rt1.c2, vt1.c1, vt1.c3, vt1.c2, vt1.c0, rt1.c0, rt1.c1 FROM rt1 NATURAL JOIN vt1 WHERE ((NOT (CAST(vt1.c0 COLLATE RTRIM AS TEXT)))) UNION SELECT DISTINCT rt1.c2, vt1.c1, vt1.c3, vt1.c2, vt1.c0, rt1.c0, rt1.c1 FROM rt1 NATURAL JOIN vt1 WHERE (((CAST(vt1.c0 COLLATE RTRIM AS TEXT)) ISNULL));
SELECT DISTINCT rt1.c2, vt1.c1, vt1.c3, vt1.c2, vt1.c0, rt1.c0, rt1.c1 FROM rt1 NATURAL JOIN vt1;
SELECT rt0.c1, vt1.c1, vt1.c3, vt1.c2, vt1.c0, rt0.c2, rt1.c2 FROM vt1, rt1, rt0 GROUP BY rt0.c1, vt1.c1, vt1.c3, vt1.c2, vt1.c0, rt0.c2, rt1.c2;
SELECT rt0.c1, vt1.c1, vt1.c3, vt1.c2, vt1.c0, rt0.c2, rt1.c2 FROM vt1, rt1, rt0 WHERE (CAST((rt0.c2 IN (rt0.c2)) AS BLOB)) GROUP BY rt0.c1, vt1.c1, vt1.c3, vt1.c2, vt1.c0, rt0.c2, rt1.c2 UNION SELECT ALL rt0.c1, vt1.c1, vt1.c3, vt1.c2, vt1.c0, rt0.c2, rt1.c2 FROM vt1, rt1, rt0 WHERE ((NOT (CAST((rt0.c2 IN (rt0.c2)) AS BLOB)))) GROUP BY rt0.c1, vt1.c1, vt1.c3, vt1.c2, vt1.c0, rt0.c2, rt1.c2 UNION SELECT rt0.c1, vt1.c1, vt1.c3, vt1.c2, vt1.c0, rt0.c2, rt1.c2 FROM vt1, rt1, rt0 WHERE (((CAST((rt0.c2 IN (rt0.c2)) AS BLOB)) ISNULL)) GROUP BY rt0.c1, vt1.c1, vt1.c3, vt1.c2, vt1.c0, rt0.c2, rt1.c2;
SELECT rt0.c1, vt1.c1, vt1.c3, vt1.c2, vt1.c0, rt0.c2, rt1.c2 FROM vt1, rt1, rt0 GROUP BY rt0.c1, vt1.c1, vt1.c3, vt1.c2, vt1.c0, rt0.c2, rt1.c2;
SELECT rt0.c1, rt1.c2, vt1.c0, rt1.c1, vt1.c3, rt0.c3, rt1.c0, vt1.c1, rt0.c0, rt0.c2 FROM rt1 LEFT OUTER JOIN vt1 ON ((((((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt1.c0)))AND(((vt1.c3) BETWEEN (rt1.c1) AND (rt0.c2)))))OR(((vt1.c0)/('-560713685')))))OR((vt1.c2 IN (rt0.c0)))))OR(((rt0.c1) ISNULL))) LEFT OUTER JOIN rt0 ON ((rt0.c1 COLLATE NOCASE) BETWEEN ((((rt0.c1)) BETWEEN ((vt1.c2)) AND ((vt1.c0)))) AND (CASE WHEN rt1.c2 THEN x'' WHEN rt0.c0 THEN rt1.c0 WHEN rt0.c2 THEN rt0.c0 ELSE vt1.c2 END)) GROUP BY rt0.c1, rt1.c2, vt1.c0, rt1.c1, vt1.c3, rt0.c3, rt1.c0, vt1.c1, rt0.c0, rt0.c2;
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE (((vt1.c3) NOT BETWEEN (vt1.c2) AND (vt1.c2)) COLLATE NOCASE) UNION ALL SELECT * FROM vt1 WHERE ((NOT (((vt1.c3) NOT BETWEEN (vt1.c2) AND (vt1.c2)) COLLATE NOCASE))) UNION ALL SELECT ALL * FROM vt1 WHERE (((((vt1.c3) NOT BETWEEN (vt1.c2) AND (vt1.c2)) COLLATE NOCASE) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM rt1, vt1, rt0;
SELECT DISTINCT * FROM rt1, vt1, rt0 WHERE (((((vt1.c3) BETWEEN (vt1.c1) AND (vt1.c3)))AND(rt1.c0 COLLATE RTRIM))) UNION SELECT DISTINCT * FROM rt1, vt1, rt0 WHERE ((NOT (((((vt1.c3) BETWEEN (vt1.c1) AND (vt1.c3)))AND(rt1.c0 COLLATE RTRIM))))) UNION SELECT DISTINCT * FROM rt1, vt1, rt0 WHERE (((((((vt1.c3) BETWEEN (vt1.c1) AND (vt1.c3)))AND(rt1.c0 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT * FROM rt1, vt1, rt0;
SELECT ALL rt1.c2, vt1.c2 FROM vt1, rt1 GROUP BY rt1.c2, vt1.c2;
SELECT rt1.c2, vt1.c2 FROM vt1, rt1 WHERE (((CASE vt1.c0  WHEN rt1.c2 THEN rt1.c2 WHEN vt1.c0 THEN rt1.c1 WHEN vt1.c3 THEN rt1.c0 ELSE rt1.c2 END) NOT NULL)) GROUP BY rt1.c2, vt1.c2 UNION SELECT rt1.c2, vt1.c2 FROM vt1, rt1 WHERE ((NOT (((CASE vt1.c0  WHEN rt1.c2 THEN rt1.c2 WHEN vt1.c0 THEN rt1.c1 WHEN vt1.c3 THEN rt1.c0 ELSE rt1.c2 END) NOT NULL)))) GROUP BY rt1.c2, vt1.c2 UNION SELECT rt1.c2, vt1.c2 FROM vt1, rt1 WHERE (((((CASE vt1.c0  WHEN rt1.c2 THEN rt1.c2 WHEN vt1.c0 THEN rt1.c1 WHEN vt1.c3 THEN rt1.c0 ELSE rt1.c2 END) NOT NULL)) ISNULL)) GROUP BY rt1.c2, vt1.c2;
SELECT ALL rt1.c2, vt1.c2 FROM vt1, rt1 GROUP BY rt1.c2, vt1.c2;
SELECT rt0.c0 FROM rt0, vt0 INNER JOIN vt1 ON HEX(DISTINCT x'') GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, vt0 INNER JOIN vt1 ON HEX(DISTINCT x'') GROUP BY rt0.c0 HAVING TOTAL(CAST(GROUP_CONCAT(rt0.c1) AS INTEGER)) UNION ALL SELECT rt0.c0 FROM rt0, vt0 INNER JOIN vt1 ON HEX(DISTINCT x'') GROUP BY rt0.c0 HAVING (NOT (TOTAL(CAST(GROUP_CONCAT(rt0.c1) AS INTEGER)))) UNION ALL SELECT rt0.c0 FROM rt0, vt0 NOT INDEXED INNER JOIN vt1 ON HEX(DISTINCT x'') GROUP BY rt0.c0 HAVING ((TOTAL(CAST(GROUP_CONCAT(rt0.c1) AS INTEGER))) ISNULL);
SELECT vt1.c2, rt0.c3, vt1.c3, rt0.c1, vt0.c0 FROM rt0, vt1, vt0, rt1;
SELECT ALL vt1.c2, rt0.c3, vt1.c3, rt0.c1, vt0.c0 FROM rt0, vt1, vt0, rt1 WHERE (CAST(((vt1.c2)|(vt1.c2)) AS REAL)) UNION ALL SELECT vt1.c2, rt0.c3, vt1.c3, rt0.c1, vt0.c0 FROM rt0, vt1, vt0, rt1 WHERE ((NOT (CAST(((vt1.c2)|(vt1.c2)) AS REAL)))) UNION ALL SELECT ALL vt1.c2, rt0.c3, vt1.c3, rt0.c1, vt0.c0 FROM rt0, vt1, vt0, rt1 WHERE (((CAST(((vt1.c2)|(vt1.c2)) AS REAL)) ISNULL));
SELECT vt1.c2, rt0.c3, vt1.c3, rt0.c1, vt0.c0 FROM rt0, vt1, vt0, rt1;
SELECT DISTINCT rt0.c3, vt1.c3, rt1.c0, rt1.c1, vt1.c0, rt0.c0 FROM rt1 FULL OUTER JOIN vt0 ON (NOT (CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN '-679416993' WHEN vt1.c3 THEN vt1.c1 ELSE vt1.c3 END)) LEFT OUTER JOIN vt1 ON rt1.c1 CROSS JOIN rt0 ON ((((rt0.c2))>=((vt1.c0))) IN ());
SELECT DISTINCT rt0.c3, vt1.c3, rt1.c0, rt1.c1, vt1.c0, rt0.c0 FROM rt1 FULL OUTER JOIN vt0 ON (NOT (CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN '-679416993' WHEN vt1.c3 THEN vt1.c1 ELSE vt1.c3 END)) LEFT OUTER JOIN vt1 ON rt1.c1 CROSS JOIN rt0 ON ((((rt0.c2))>=((vt1.c0))) IN ()) WHERE (((load_extension(rt0.c2))<<(vt1.c3))) UNION SELECT DISTINCT rt0.c3, vt1.c3, rt1.c0, rt1.c1, vt1.c0, rt0.c0 FROM rt1 FULL OUTER JOIN vt0 ON (NOT (CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN '-679416993' WHEN vt1.c3 THEN vt1.c1 ELSE vt1.c3 END)) LEFT OUTER JOIN vt1 ON rt1.c1 CROSS JOIN rt0 ON ((((rt0.c2))>=((vt1.c0))) IN ()) WHERE ((NOT (((load_extension(rt0.c2))<<(vt1.c3))))) UNION SELECT DISTINCT rt0.c3, vt1.c3, rt1.c0, rt1.c1, vt1.c0, rt0.c0 FROM rt1 FULL OUTER JOIN vt0 ON (NOT (CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN '-679416993' WHEN vt1.c3 THEN vt1.c1 ELSE vt1.c3 END)) LEFT OUTER JOIN vt1 ON rt1.c1 CROSS JOIN rt0 ON ((((rt0.c2))>=((vt1.c0))) IN ()) WHERE (((((load_extension(rt0.c2))<<(vt1.c3))) ISNULL));
SELECT DISTINCT rt0.c3, vt1.c3, rt1.c0, rt1.c1, vt1.c0, rt0.c0 FROM rt1 FULL OUTER JOIN vt0 ON (NOT (CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN '-679416993' WHEN vt1.c3 THEN vt1.c1 ELSE vt1.c3 END)) LEFT OUTER JOIN vt1 ON rt1.c1 CROSS JOIN rt0 ON ((((rt0.c2))>=((vt1.c0))) IN ());
SELECT ALL rt1.c0, rt0.c1, vt1.c3, rt0.c2, rt1.c2, vt1.c1, vt1.c0, rt0.c3, rt0.c0 FROM vt1, rt1, rt0 GROUP BY rt1.c0, rt0.c1, vt1.c3, rt0.c2, rt1.c2, vt1.c1, vt1.c0, rt0.c3, rt0.c0;
SELECT ALL rt1.c0, rt0.c1, vt1.c3, rt0.c2, rt1.c2, vt1.c1, vt1.c0, rt0.c3, rt0.c0 FROM vt1, rt1, rt0 WHERE (CAST((- (rt1.c2)) AS TEXT)) GROUP BY rt1.c0, rt0.c1, vt1.c3, rt0.c2, rt1.c2, vt1.c1, vt1.c0, rt0.c3, rt0.c0 UNION SELECT ALL rt1.c0, rt0.c1, vt1.c3, rt0.c2, rt1.c2, vt1.c1, vt1.c0, rt0.c3, rt0.c0 FROM vt1, rt1, rt0 WHERE ((NOT (CAST((- (rt1.c2)) AS TEXT)))) GROUP BY rt1.c0, rt0.c1, vt1.c3, rt0.c2, rt1.c2, vt1.c1, vt1.c0, rt0.c3, rt0.c0 UNION SELECT rt1.c0, rt0.c1, vt1.c3, rt0.c2, rt1.c2, vt1.c1, vt1.c0, rt0.c3, rt0.c0 FROM vt1, rt1, rt0 WHERE (((CAST((- (rt1.c2)) AS TEXT)) ISNULL)) GROUP BY rt1.c0, rt0.c1, vt1.c3, rt0.c2, rt1.c2, vt1.c1, vt1.c0, rt0.c3, rt0.c0;
SELECT ALL rt1.c0, rt0.c1, vt1.c3, rt0.c2, rt1.c2, vt1.c1, vt1.c0, rt0.c3, rt0.c0 FROM vt1, rt1, rt0 GROUP BY rt1.c0, rt0.c1, vt1.c3, rt0.c2, rt1.c2, vt1.c1, vt1.c0, rt0.c3, rt0.c0;
SELECT ALL vt0.c0, rt1.c0, rt0.c1, vt1.c0, rt1.c1 FROM rt1, rt0, vt1 CROSS JOIN vt0 ON TRIM(((('-2138579877')) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0)))) GROUP BY vt0.c0, rt1.c0, rt0.c1, vt1.c0, rt1.c1;
SELECT ALL vt0.c0, rt1.c0, rt0.c1, vt1.c0, rt1.c1 FROM rt1, rt0, vt1 CROSS JOIN vt0 ON TRIM(((('-2138579877')) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0)))) GROUP BY vt0.c0, rt1.c0, rt0.c1, vt1.c0, rt1.c1 HAVING ((rt0.c2) NOT BETWEEN (SUM(NULL)) AND (rt0.c2)) COLLATE BINARY UNION ALL SELECT ALL vt0.c0, rt1.c0, rt0.c1, vt1.c0, rt1.c1 FROM rt1, rt0, vt1 CROSS JOIN vt0 ON TRIM(((('-2138579877')) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0)))) GROUP BY vt0.c0, rt1.c0, rt0.c1, vt1.c0, rt1.c1 HAVING (NOT (((rt0.c2) NOT BETWEEN (SUM(NULL)) AND (rt0.c2)) COLLATE BINARY)) UNION ALL SELECT vt0.c0, rt1.c0, rt0.c1, vt1.c0, rt1.c1 FROM rt1, rt0, vt1 CROSS JOIN vt0 ON TRIM(((('-2138579877')) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0)))) GROUP BY vt0.c0, rt1.c0, rt0.c1, vt1.c0, rt1.c1 HAVING ((((rt0.c2) NOT BETWEEN (SUM(NULL)) AND (rt0.c2)) COLLATE BINARY) ISNULL);
SELECT ALL vt0.c0, rt1.c0, rt0.c1, vt1.c0, rt1.c1 FROM rt1, rt0, vt1 CROSS JOIN vt0 ON TRIM(((('-2138579877')) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0)))) GROUP BY vt0.c0, rt1.c0, rt0.c1, vt1.c0, rt1.c1;
SELECT ALL vt0.c0, rt1.c0, rt0.c1, vt1.c0, rt1.c1 FROM rt1, rt0, vt1 CROSS JOIN vt0 ON TRIM(((('-2138579877')) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0)))) GROUP BY vt0.c0, rt1.c0, rt0.c1, vt1.c0, rt1.c1 HAVING ((rt0.c2) NOT BETWEEN (SUM(NULL)) AND (rt0.c2)) COLLATE BINARY UNION ALL SELECT ALL vt0.c0, rt1.c0, rt0.c1, vt1.c0, rt1.c1 FROM rt1, rt0, vt1 CROSS JOIN vt0 ON TRIM(((('-2138579877')) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0)))) GROUP BY vt0.c0, rt1.c0, rt0.c1, vt1.c0, rt1.c1 HAVING (NOT (((rt0.c2) NOT BETWEEN (SUM(NULL)) AND (rt0.c2)) COLLATE BINARY)) UNION ALL SELECT vt0.c0, rt1.c0, rt0.c1, vt1.c0, rt1.c1 FROM rt1, rt0, vt1 CROSS JOIN vt0 ON TRIM(((('-2138579877')) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0)))) GROUP BY vt0.c0, rt1.c0, rt0.c1, vt1.c0, rt1.c1 HAVING ((((rt0.c2) NOT BETWEEN (SUM(NULL)) AND (rt0.c2)) COLLATE BINARY) ISNULL);
SELECT ALL vt0.c0, rt1.c0, rt0.c1, vt1.c0, rt1.c1 FROM rt1, rt0, vt1 CROSS JOIN vt0 ON TRIM(((('-2138579877')) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0)))) GROUP BY vt0.c0, rt1.c0, rt0.c1, vt1.c0, rt1.c1;
SELECT ALL * FROM vt0, rt1, rt0;
SELECT * FROM vt0, rt1, rt0 WHERE (((((CAST(rt0.c1 AS NUMERIC))OR(rt0.c3)))AND((rt0.c3 IN ())))) UNION ALL SELECT ALL * FROM vt0, rt1, rt0 WHERE ((NOT (((((CAST(rt0.c1 AS NUMERIC))OR(rt0.c3)))AND((rt0.c3 IN ())))))) UNION ALL SELECT ALL * FROM vt0, rt1, rt0 WHERE (((((((CAST(rt0.c1 AS NUMERIC))OR(rt0.c3)))AND((rt0.c3 IN ())))) ISNULL));
SELECT ALL * FROM vt0, rt1, rt0;
SELECT DISTINCT * FROM vt1, rt1 INNER JOIN rt0 ON ((((rt1.c2))==((vt1.c3))) IN ());
SELECT DISTINCT * FROM vt1, rt1 INNER JOIN rt0 ON ((((rt1.c2))=((vt1.c3))) IN ()) WHERE ((((((rt1.c1) IS TRUE)))!=(((((vt1.c1, rt0.c2, rt0.c3))>((rt0.c2, vt1.c1, rt0.c2))))))) UNION SELECT DISTINCT * FROM vt1, rt1 INNER JOIN rt0 ON ((((rt1.c2))==((vt1.c3))) IN ()) WHERE ((NOT ((((((rt1.c1) IS TRUE)))<>(((((vt1.c1, rt0.c2, rt0.c3))>((rt0.c2, vt1.c1, rt0.c2))))))))) UNION SELECT DISTINCT * FROM vt1, rt1 INNER JOIN rt0 ON ((((rt1.c2))==((vt1.c3))) IN ()) WHERE ((((((((rt1.c1) IS TRUE)))<>(((((vt1.c1, rt0.c2, rt0.c3))>((rt0.c2, vt1.c1, rt0.c2))))))) ISNULL));
SELECT DISTINCT * FROM vt1, rt1 INNER JOIN rt0 ON ((((rt1.c2))==((vt1.c3))) IN ());
SELECT rt0.c1, rt0.c3, rt1.c1, rt1.c0 FROM rt1, rt0 GROUP BY rt0.c1, rt0.c3, rt1.c1, rt1.c0;
SELECT ALL rt0.c1, rt0.c3, rt1.c1, rt1.c0 FROM rt1, rt0 NOT INDEXED WHERE (((((CASE rt1.c2  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt0.c1 WHEN x'17d455cb' THEN '' END)OR(((rt0.c2) BETWEEN (rt1.c0) AND (rt1.c0)))))OR(0.20360351797470744 COLLATE NOCASE))) GROUP BY rt0.c1, rt0.c3, rt1.c1, rt1.c0 UNION SELECT ALL rt0.c1, rt0.c3, rt1.c1, rt1.c0 FROM rt1, rt0 WHERE ((NOT (((((CASE rt1.c2  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt0.c1 WHEN x'17d455cb' THEN '' END)OR(((rt0.c2) BETWEEN (rt1.c0) AND (rt1.c0)))))OR(0.20360351797470744 COLLATE NOCASE))))) GROUP BY rt0.c1, rt0.c3, rt1.c1, rt1.c0 UNION SELECT rt0.c1, rt0.c3, rt1.c1, rt1.c0 FROM rt1, rt0 WHERE (((((((CASE rt1.c2  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt0.c1 WHEN x'17d455cb' THEN '' END)OR(((rt0.c2) BETWEEN (rt1.c0) AND (rt1.c0)))))OR(0.20360351797470744 COLLATE NOCASE))) ISNULL)) GROUP BY rt0.c1, rt0.c3, rt1.c1, rt1.c0;
SELECT rt0.c1, rt0.c3, rt1.c1, rt1.c0 FROM rt1, rt0 GROUP BY rt0.c1, rt0.c3, rt1.c1, rt1.c0;
SELECT rt0.c2, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c3;
SELECT ALL rt0.c2, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c3 HAVING MIN(COUNT(*)) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c3 HAVING (NOT (MIN(COUNT(*)))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c3 HAVING ((MIN(COUNT(*))) ISNULL);
SELECT * FROM vt0, rt1, rt0, vt1;
SELECT * FROM vt0, rt1, rt0, vt1 WHERE (CAST(((rt1.c2) IS FALSE) AS TEXT)) UNION ALL SELECT * FROM vt0, rt1, rt0, vt1 WHERE ((NOT (CAST(((rt1.c2) IS FALSE) AS TEXT)))) UNION ALL SELECT * FROM vt0, rt1, rt0, vt1 WHERE (((CAST(((rt1.c2) IS FALSE) AS TEXT)) ISNULL));
SELECT * FROM vt0, rt1, rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1 WHERE ((+ (CAST(vt1.c3 AS INTEGER)))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((NOT ((+ (CAST(vt1.c3 AS INTEGER)))))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((((+ (CAST(vt1.c3 AS INTEGER)))) ISNULL));
SELECT DISTINCT * FROM rt0, vt1;
SELECT ALL rt0.c3, vt1.c2, rt0.c0, vt1.c3, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c3, vt1.c2, rt0.c0, vt1.c3, rt0.c2;
SELECT ALL rt0.c3, vt1.c2, rt0.c0, vt1.c3, rt0.c2 FROM vt1, rt0 WHERE ((((vt1.c1, vt1.c0, vt1.c0)) BETWEEN ((((vt1.c2) IS FALSE), rt0.c3 COLLATE BINARY, (+ (rt0.c3)))) AND (('1584264980', (rt0.c0 IN ()), (((vt1.c3)) NOT BETWEEN ((rt0.c1)) AND ((vt1.c0))))))) GROUP BY rt0.c3, vt1.c2, rt0.c0, vt1.c3, rt0.c2 UNION SELECT rt0.c3, vt1.c2, rt0.c0, vt1.c3, rt0.c2 FROM vt1, rt0 WHERE ((NOT ((((vt1.c1, vt1.c0, vt1.c0)) BETWEEN ((((vt1.c2) IS FALSE), rt0.c3 COLLATE BINARY, (+ (rt0.c3)))) AND (('1584264980', (rt0.c0 IN ()), (((vt1.c3)) NOT BETWEEN ((rt0.c1)) AND ((vt1.c0))))))))) GROUP BY rt0.c3, vt1.c2, rt0.c0, vt1.c3, rt0.c2 UNION SELECT ALL rt0.c3, vt1.c2, rt0.c0, vt1.c3, rt0.c2 FROM vt1, rt0 WHERE ((((((vt1.c1, vt1.c0, vt1.c0)) BETWEEN ((((vt1.c2) IS FALSE), rt0.c3 COLLATE BINARY, (+ (rt0.c3)))) AND (('1584264980', (rt0.c0 IN ()), (((vt1.c3)) NOT BETWEEN ((rt0.c1)) AND ((vt1.c0))))))) ISNULL)) GROUP BY rt0.c3, vt1.c2, rt0.c0, vt1.c3, rt0.c2;
SELECT ALL rt0.c3, vt1.c2, rt0.c0, vt1.c3, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c3, vt1.c2, rt0.c0, vt1.c3, rt0.c2;
SELECT ALL rt1.c1 FROM vt0, rt1 GROUP BY rt1.c1;
SELECT rt1.c1 FROM vt0, rt1 GROUP BY rt1.c1 HAVING ((AVG(GROUP_CONCAT(COUNT(vt0.c0))))&(((((((((rt1.c2)AND(vt0.c0)))AND(COUNT(*))))AND(MIN(rt1.c0))))AND(rt1.c1)))) UNION ALL SELECT ALL rt1.c1 FROM vt0, rt1 GROUP BY rt1.c1 HAVING (NOT (((AVG(GROUP_CONCAT(COUNT(vt0.c0))))&(((((((((rt1.c2)AND(vt0.c0)))AND(COUNT(*))))AND(MIN(rt1.c0))))AND(rt1.c1)))))) UNION ALL SELECT ALL rt1.c1 FROM vt0, rt1 GROUP BY rt1.c1 HAVING ((((AVG(GROUP_CONCAT(COUNT(vt0.c0))))&(((((((((rt1.c2)AND(vt0.c0)))AND(COUNT(*))))AND(MIN(rt1.c0))))AND(rt1.c1))))) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (((vt0.c0)>>(vt0.c0))) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((CASE WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (((vt0.c0)>>(vt0.c0))) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))))) UNION ALL SELECT * FROM vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (((vt0.c0)>>(vt0.c0))) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt1.c1, rt0.c0, vt1.c0, rt0.c3, rt0.c1 FROM vt1, rt0, vt0;
SELECT DISTINCT vt1.c1, rt0.c0, vt1.c0, rt0.c3, rt0.c1 FROM vt1, rt0, vt0 WHERE (json_valid(((vt0.c0)<(vt1.c3)))) UNION SELECT DISTINCT vt1.c1, rt0.c0, vt1.c0, rt0.c3, rt0.c1 FROM vt1, rt0, vt0 WHERE ((NOT (json_valid(((vt0.c0)<(vt1.c3)))))) UNION SELECT DISTINCT vt1.c1, rt0.c0, vt1.c0, rt0.c3, rt0.c1 FROM vt1, rt0, vt0 WHERE (((json_valid(((vt0.c0)<(vt1.c3)))) ISNULL));
SELECT DISTINCT vt1.c1, rt0.c0, vt1.c0, rt0.c3, rt0.c1 FROM vt1, rt0, vt0;
SELECT rt0.c2, vt1.c1, vt1.c0, rt0.c0, vt1.c3, vt0.c0, rt1.c1, rt0.c1, rt0.c3, vt1.c2, rt1.c2, rt1.c0 FROM vt1, rt0, rt1, vt0 GROUP BY rt0.c2, vt1.c1, vt1.c0, rt0.c0, vt1.c3, vt0.c0, rt1.c1, rt0.c1, rt0.c3, vt1.c2, rt1.c2, rt1.c0;
SELECT rt0.c2, vt1.c1, vt1.c0, rt0.c0, vt1.c3, vt0.c0, rt1.c1, rt0.c1, rt0.c3, vt1.c2, rt1.c2, rt1.c0 FROM vt1, rt0, rt1, vt0 WHERE (vt1.c3) GROUP BY rt0.c2, vt1.c1, vt1.c0, rt0.c0, vt1.c3, vt0.c0, rt1.c1, rt0.c1, rt0.c3, vt1.c2, rt1.c2, rt1.c0 UNION SELECT rt0.c2, vt1.c1, vt1.c0, rt0.c0, vt1.c3, vt0.c0, rt1.c1, rt0.c1, rt0.c3, vt1.c2, rt1.c2, rt1.c0 FROM vt1, rt0, rt1, vt0 WHERE ((NOT (vt1.c3))) GROUP BY rt0.c2, vt1.c1, vt1.c0, rt0.c0, vt1.c3, vt0.c0, rt1.c1, rt0.c1, rt0.c3, vt1.c2, rt1.c2, rt1.c0 UNION SELECT rt0.c2, vt1.c1, vt1.c0, rt0.c0, vt1.c3, vt0.c0, rt1.c1, rt0.c1, rt0.c3, vt1.c2, rt1.c2, rt1.c0 FROM vt1, rt0, rt1, vt0 WHERE (((vt1.c3) ISNULL)) GROUP BY rt0.c2, vt1.c1, vt1.c0, rt0.c0, vt1.c3, vt0.c0, rt1.c1, rt0.c1, rt0.c3, vt1.c2, rt1.c2, rt1.c0;
SELECT rt0.c2, vt1.c1, vt1.c0, rt0.c0, vt1.c3, vt0.c0, rt1.c1, rt0.c1, rt0.c3, vt1.c2, rt1.c2, rt1.c0 FROM vt1, rt0, rt1, vt0 GROUP BY rt0.c2, vt1.c1, vt1.c0, rt0.c0, vt1.c3, vt0.c0, rt1.c1, rt0.c1, rt0.c3, vt1.c2, rt1.c2, rt1.c0;
SELECT rt1.c2, rt0.c3 FROM vt1, rt0, vt0, rt1 GROUP BY rt1.c2, rt0.c3;
SELECT rt1.c2, rt0.c3 FROM vt1, rt0, vt0, rt1 GROUP BY rt1.c2, rt0.c3 HAVING CASE WHEN TOTAL(vt1.c0) THEN CASE rt1.c0  WHEN MIN(vt1.c3) THEN MIN(COUNT(MIN(rt0.c3))) ELSE vt1.c1 END END UNION ALL SELECT ALL rt1.c2, rt0.c3 FROM vt1, rt0, vt0, rt1 GROUP BY rt1.c2, rt0.c3 HAVING (NOT (CASE WHEN TOTAL(vt1.c0) THEN CASE rt1.c0  WHEN MIN(vt1.c3) THEN MIN(COUNT(MIN(rt0.c3))) ELSE vt1.c1 END END)) UNION ALL SELECT ALL rt1.c2, rt0.c3 FROM vt1, rt0, vt0, rt1 GROUP BY rt1.c2, rt0.c3 HAVING ((CASE WHEN TOTAL(vt1.c0) THEN CASE rt1.c0  WHEN MIN(vt1.c3) THEN MIN(COUNT(MIN(rt0.c3))) ELSE vt1.c1 END END) ISNULL);
SELECT * FROM rt1;
SELECT * FROM rt1 WHERE ((rt1.c1 IN ((rt1.c2 IN (rt1.c1, rt1.c2)), ((rt1.c2) NOT BETWEEN ('-2027827271') AND (rt1.c0))))) UNION ALL SELECT * FROM rt1 WHERE ((NOT ((rt1.c1 IN ((rt1.c2 IN (rt1.c1, rt1.c2)), ((rt1.c2) NOT BETWEEN ('-2027827271') AND (rt1.c0))))))) UNION ALL SELECT * FROM rt1 WHERE ((((rt1.c1 IN ((rt1.c2 IN (rt1.c1, rt1.c2)), ((rt1.c2) NOT BETWEEN ('-2027827271') AND (rt1.c0))))) ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (MIN(-1503272374, ((0x53265be2) BETWEEN (rt0.c2) AND (rt0.c0)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (MIN(-1503272374, ((0X53265be2) BETWEEN (rt0.c2) AND (rt0.c0)))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((MIN(-1503272374, ((0x53265be2) BETWEEN (rt0.c2) AND (rt0.c0)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2, rt1.c2, vt1.c0, vt1.c3, vt0.c0, vt1.c1 FROM rt0, vt0, vt1, rt1 GROUP BY rt0.c2, rt1.c2, vt1.c0, vt1.c3, vt0.c0, vt1.c1;
SELECT rt0.c2, rt1.c2, vt1.c0, vt1.c3, vt0.c0, vt1.c1 FROM rt0, vt0, vt1, rt1 WHERE ((((1957212939, ((vt1.c3)AND(0.7889669351399943)), 467571297))!=((((rt0.c0) NOT NULL), (rt1.c1 IN ()), ((rt0.c1) NOT BETWEEN (rt0.c1) AND (vt1.c2)))))) GROUP BY rt0.c2, rt1.c2, vt1.c0, vt1.c3, vt0.c0, vt1.c1 UNION SELECT ALL rt0.c2, rt1.c2, vt1.c0, vt1.c3, vt0.c0, vt1.c1 FROM rt0, vt0, vt1, rt1 WHERE ((NOT ((((1957212939, ((vt1.c3)AND(0.7889669351399943)), 467571297))<>((((rt0.c0) NOT NULL), (rt1.c1 IN ()), ((rt0.c1) NOT BETWEEN (rt0.c1) AND (vt1.c2)))))))) GROUP BY rt0.c2, rt1.c2, vt1.c0, vt1.c3, vt0.c0, vt1.c1 UNION SELECT rt0.c2, rt1.c2, vt1.c0, vt1.c3, vt0.c0, vt1.c1 FROM rt0, vt0, vt1, rt1 WHERE ((((((1957212939, ((vt1.c3)AND(0.7889669351399943)), 467571297))!=((((rt0.c0) NOT NULL), (rt1.c1 IN ()), ((rt0.c1) NOT BETWEEN (rt0.c1) AND (vt1.c2)))))) ISNULL)) GROUP BY rt0.c2, rt1.c2, vt1.c0, vt1.c3, vt0.c0, vt1.c1;
SELECT ALL rt0.c2, rt1.c2, vt1.c0, vt1.c3, vt0.c0, vt1.c1 FROM rt0, vt0, vt1, rt1 GROUP BY rt0.c2, rt1.c2, vt1.c0, vt1.c3, vt0.c0, vt1.c1;
SELECT ALL vt0.c0, rt1.c1, vt1.c0, rt1.c2, vt1.c3, vt1.c2, rt1.c0 FROM vt0, rt1, vt1 GROUP BY vt0.c0, rt1.c1, vt1.c0, rt1.c2, vt1.c3, vt1.c2, rt1.c0;
SELECT vt0.c0, rt1.c1, vt1.c0, rt1.c2, vt1.c3, vt1.c2, rt1.c0 FROM vt0, rt1, vt1 GROUP BY vt0.c0, rt1.c1, vt1.c0, rt1.c2, vt1.c3, vt1.c2, rt1.c0 HAVING TOTAL((((MIN('/ﻆ'), vt0.c0, AVG(rt1.c0)))>=((0.055258348569762306, MAX(SUM(vt1.c1)), vt1.c3)))) UNION ALL SELECT ALL vt0.c0, rt1.c1, vt1.c0, rt1.c2, vt1.c3, vt1.c2, rt1.c0 FROM vt0, rt1, vt1 GROUP BY vt0.c0, rt1.c1, vt1.c0, rt1.c2, vt1.c3, vt1.c2, rt1.c0 HAVING (NOT (TOTAL((((MIN('/ﻆ'), vt0.c0, AVG(rt1.c0)))>=((0.055258348569762306, MAX(SUM(vt1.c1)), vt1.c3)))))) UNION ALL SELECT vt0.c0, rt1.c1, vt1.c0, rt1.c2, vt1.c3, vt1.c2, rt1.c0 FROM vt0, rt1, vt1 GROUP BY vt0.c0, rt1.c1, vt1.c0, rt1.c2, vt1.c3, vt1.c2, rt1.c0 HAVING ((TOTAL((((MIN('/ﻆ'), vt0.c0, AVG(rt1.c0)))>=((0.055258348569762306, MAX(SUM(vt1.c1)), vt1.c3))))) ISNULL);
SELECT ALL vt1.c1, rt0.c3, rt0.c1, vt0.c0, vt1.c2, rt1.c0, rt1.c2, rt0.c2, rt1.c1, rt0.c0, vt1.c3, vt1.c0 FROM rt0, vt0, rt1, vt1;
SELECT ALL vt1.c1, rt0.c3, rt0.c1, vt0.c0, vt1.c2, rt1.c0, rt1.c2, rt0.c2, rt1.c1, rt0.c0, vt1.c3, vt1.c0 FROM rt0, vt0, rt1, vt1 WHERE ((CAST(vt1.c0 AS TEXT) IN ())) UNION ALL SELECT ALL vt1.c1, rt0.c3, rt0.c1, vt0.c0, vt1.c2, rt1.c0, rt1.c2, rt0.c2, rt1.c1, rt0.c0, vt1.c3, vt1.c0 FROM rt0, vt0, rt1, vt1 WHERE ((NOT ((CAST(vt1.c0 AS TEXT) IN ())))) UNION ALL SELECT ALL vt1.c1, rt0.c3, rt0.c1, vt0.c0, vt1.c2, rt1.c0, rt1.c2, rt0.c2, rt1.c1, rt0.c0, vt1.c3, vt1.c0 FROM rt0, vt0, rt1, vt1 WHERE ((((CAST(vt1.c0 AS TEXT) IN ())) ISNULL));
SELECT ALL vt1.c1, rt0.c3, rt0.c1, vt0.c0, vt1.c2, rt1.c0, rt1.c2, rt0.c2, rt1.c1, rt0.c0, vt1.c3, vt1.c0 FROM rt0, vt0, rt1, vt1;
SELECT DISTINCT rt0.c3, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c3, rt0.c2, rt0.c1 FROM rt0 WHERE (((HEX(rt0.c2))!=(((((rt0.c2)OR(0.4592352012084341)))AND(rt0.c3))))) UNION SELECT DISTINCT rt0.c3, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((HEX(rt0.c2))<>(((((rt0.c2)OR(0.4592352012084341)))AND(rt0.c3))))))) UNION SELECT DISTINCT rt0.c3, rt0.c2, rt0.c1 FROM rt0 WHERE (((((HEX(rt0.c2))<>(((((rt0.c2)OR(0.4592352012084341)))AND(rt0.c3))))) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c2, rt0.c1 FROM rt0;
SELECT rt1.c0, rt0.c3, rt0.c1, vt1.c1, vt1.c0, rt1.c1, vt1.c2, rt0.c0, rt1.c2, rt0.c2 FROM vt1, rt1, rt0 GROUP BY rt1.c0, rt0.c3, rt0.c1, vt1.c1, vt1.c0, rt1.c1, vt1.c2, rt0.c0, rt1.c2, rt0.c2;
SELECT ALL rt1.c0, rt0.c3, rt0.c1, vt1.c1, vt1.c0, rt1.c1, vt1.c2, rt0.c0, rt1.c2, rt0.c2 FROM vt1, rt1, rt0 WHERE ((((((vt1.c1, vt1.c3, rt0.c1, vt1.c1, rt0.c2))>=((vt1.c0, rt1.c0, rt1.c1, rt0.c0, rt1.c0)))) NOTNULL)) GROUP BY rt1.c0, rt0.c3, rt0.c1, vt1.c1, vt1.c0, rt1.c1, vt1.c2, rt0.c0, rt1.c2, rt0.c2 UNION SELECT rt1.c0, rt0.c3, rt0.c1, vt1.c1, vt1.c0, rt1.c1, vt1.c2, rt0.c0, rt1.c2, rt0.c2 FROM vt1, rt1, rt0 WHERE ((NOT ((((((vt1.c1, vt1.c3, rt0.c1, vt1.c1, rt0.c2))>=((vt1.c0, rt1.c0, rt1.c1, rt0.c0, rt1.c0)))) NOTNULL)))) GROUP BY rt1.c0, rt0.c3, rt0.c1, vt1.c1, vt1.c0, rt1.c1, vt1.c2, rt0.c0, rt1.c2, rt0.c2 UNION SELECT rt1.c0, rt0.c3, rt0.c1, vt1.c1, vt1.c0, rt1.c1, vt1.c2, rt0.c0, rt1.c2, rt0.c2 FROM vt1, rt1, rt0 WHERE ((((((((vt1.c1, vt1.c3, rt0.c1, vt1.c1, rt0.c2))>=((vt1.c0, rt1.c0, rt1.c1, rt0.c0, rt1.c0)))) NOTNULL)) ISNULL)) GROUP BY rt1.c0, rt0.c3, rt0.c1, vt1.c1, vt1.c0, rt1.c1, vt1.c2, rt0.c0, rt1.c2, rt0.c2;
SELECT rt1.c0, rt0.c3, rt0.c1, vt1.c1, vt1.c0, rt1.c1, vt1.c2, rt0.c0, rt1.c2, rt0.c2 FROM vt1, rt1, rt0 GROUP BY rt1.c0, rt0.c3, rt0.c1, vt1.c1, vt1.c0, rt1.c1, vt1.c2, rt0.c0, rt1.c2, rt0.c2;
SELECT ALL rt1.c0, rt1.c2, rt0.c0, rt1.c1, rt0.c3 FROM rt1 LEFT OUTER JOIN rt0 ON (((rt0.c2) IS FALSE) IN ((rt1.c1 IN ()))) GROUP BY rt1.c0, rt1.c2, rt0.c0, rt1.c1, rt0.c3;
SELECT rt1.c0, rt1.c2, rt0.c0, rt1.c1, rt0.c3 FROM rt1 LEFT OUTER JOIN rt0 ON (((rt0.c2) IS FALSE) IN ((rt1.c1 IN ()))) GROUP BY rt1.c0, rt1.c2, rt0.c0, rt1.c1, rt0.c3 HAVING SUM(GROUP_CONCAT(rt1.c1)) UNION ALL SELECT ALL rt1.c0, rt1.c2, rt0.c0, rt1.c1, rt0.c3 FROM rt1 LEFT OUTER JOIN rt0 ON (((rt0.c2) IS FALSE) IN ((rt1.c1 IN ()))) GROUP BY rt1.c0, rt1.c2, rt0.c0, rt1.c1, rt0.c3 HAVING (NOT (SUM(GROUP_CONCAT(rt1.c1)))) UNION ALL SELECT rt1.c0, rt1.c2, rt0.c0, rt1.c1, rt0.c3 FROM rt1 LEFT OUTER JOIN rt0 ON (((rt0.c2) IS FALSE) IN ((rt1.c1 IN ()))) GROUP BY rt1.c0, rt1.c2, rt0.c0, rt1.c1, rt0.c3 HAVING ((SUM(GROUP_CONCAT(rt1.c1))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (NULL) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (NULL))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((NULL) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT rt0.c0, rt0.c3, vt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0;
SELECT DISTINCT rt0.c0, rt0.c3, vt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 WHERE (rt0.c1) UNION SELECT DISTINCT rt0.c0, rt0.c3, vt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT rt0.c0, rt0.c3, vt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c3, vt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0;
SELECT vt1.c1, vt1.c3, rt0.c3, rt0.c2 FROM vt0, rt0 RIGHT OUTER JOIN vt1 ON ((NULL) NOTNULL) FULL OUTER JOIN rt1 ON ((0.20616007924107227 IN (rt1.c0)) IN ()) GROUP BY vt1.c1, vt1.c3, rt0.c3, rt0.c2;
SELECT vt1.c1, vt1.c3, rt0.c3, rt0.c2 FROM vt0, rt0 RIGHT OUTER JOIN vt1 ON ((NULL) NOTNULL) FULL OUTER JOIN rt1 ON ((0.20616007924107227 IN (rt1.c0)) IN ()) WHERE (CAST(rt0.c1 AS NUMERIC)) GROUP BY vt1.c1, vt1.c3, rt0.c3, rt0.c2 UNION SELECT vt1.c1, vt1.c3, rt0.c3, rt0.c2 FROM vt0, rt0 RIGHT OUTER JOIN vt1 ON ((NULL) NOTNULL) FULL OUTER JOIN rt1 ON ((0.20616007924107227 IN (rt1.c0)) IN ()) WHERE ((NOT (CAST(rt0.c1 AS NUMERIC)))) GROUP BY vt1.c1, vt1.c3, rt0.c3, rt0.c2 UNION SELECT vt1.c1, vt1.c3, rt0.c3, rt0.c2 FROM vt0, rt0 RIGHT OUTER JOIN vt1 ON ((NULL) NOTNULL) FULL OUTER JOIN rt1 ON ((0.20616007924107227 IN (rt1.c0)) IN ()) WHERE (((CAST(rt0.c1 AS NUMERIC)) ISNULL)) GROUP BY vt1.c1, vt1.c3, rt0.c3, rt0.c2;
SELECT vt1.c1, vt1.c3, rt0.c3, rt0.c2 FROM vt0, rt0 RIGHT OUTER JOIN vt1 ON ((NULL) NOTNULL) FULL OUTER JOIN rt1 ON ((0.20616007924107227 IN (rt1.c0)) IN ()) GROUP BY vt1.c1, vt1.c3, rt0.c3, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING x'' UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (x'')) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((x'') ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING x'' UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (x'')) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((x'') ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt1.c0, rt1.c1 FROM vt0, rt1;
SELECT ALL rt1.c0, rt1.c1 FROM vt0, rt1 WHERE (((((rt1.c1) NOTNULL)) IS FALSE)) UNION ALL SELECT ALL rt1.c0, rt1.c1 FROM vt0, rt1 WHERE ((NOT (((((rt1.c1) NOTNULL)) IS FALSE)))) UNION ALL SELECT ALL rt1.c0, rt1.c1 FROM vt0, rt1 WHERE (((((((rt1.c1) NOTNULL)) IS FALSE)) ISNULL));
SELECT ALL rt1.c0, rt1.c1 FROM vt0, rt1;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (CAST(((rt1.c2)&(rt1.c1)) AS REAL)) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (CAST(((rt1.c2)&(rt1.c1)) AS REAL)))) UNION SELECT DISTINCT * FROM rt1 WHERE (((CAST(((rt1.c2)&(rt1.c1)) AS REAL)) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL rt1.c1 FROM rt1, vt0 GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt1, vt0 WHERE (((CAST(rt1.c2 AS NUMERIC))IS(((vt0.c0) BETWEEN (vt0.c0) AND (rt1.c0))))) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM rt1, vt0 WHERE ((NOT (((CAST(rt1.c2 AS NUMERIC))IS(((vt0.c0) BETWEEN (vt0.c0) AND (rt1.c0))))))) GROUP BY rt1.c1 UNION SELECT rt1.c1 FROM rt1, vt0 WHERE (((((CAST(rt1.c2 AS NUMERIC))IS(((vt0.c0) BETWEEN (vt0.c0) AND (rt1.c0))))) ISNULL)) GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt1, vt0 GROUP BY rt1.c1;
SELECT vt1.c1, rt1.c0, vt1.c0, rt1.c1 FROM rt1, vt1 GROUP BY vt1.c1, rt1.c0, vt1.c0, rt1.c1;
SELECT vt1.c1, rt1.c0, vt1.c0, rt1.c1 FROM rt1, vt1 GROUP BY vt1.c1, rt1.c0, vt1.c0, rt1.c1 HAVING SUM(TOTAL(vt1.c0)) UNION ALL SELECT ALL vt1.c1, rt1.c0, vt1.c0, rt1.c1 FROM rt1, vt1 GROUP BY vt1.c1, rt1.c0, vt1.c0, rt1.c1 HAVING (NOT (SUM(TOTAL(vt1.c0)))) UNION ALL SELECT ALL vt1.c1, rt1.c0, vt1.c0, rt1.c1 FROM rt1, vt1 GROUP BY vt1.c1, rt1.c0, vt1.c0, rt1.c1 HAVING ((SUM(TOTAL(vt1.c0))) ISNULL);
SELECT ALL rt0.c1, vt0.c0, vt1.c1 FROM rt0, vt0, vt1;
SELECT ALL rt0.c1, vt0.c0, vt1.c1 FROM rt0, vt0, vt1 WHERE (((((((rt0.c2)>(0.6082841263143237)))AND(SQLITE_VERSION())))AND(CAST(vt1.c3 AS NUMERIC)))) UNION ALL SELECT rt0.c1, vt0.c0, vt1.c1 FROM rt0, vt0, vt1 WHERE ((NOT (((((((rt0.c2)>(0.6082841263143237)))AND(SQLITE_VERSION())))AND(CAST(vt1.c3 AS NUMERIC)))))) UNION ALL SELECT rt0.c1, vt0.c0, vt1.c1 FROM rt0, vt0, vt1 WHERE (((((((((rt0.c2)>(0.6082841263143237)))AND(SQLITE_VERSION())))AND(CAST(vt1.c3 AS NUMERIC)))) ISNULL));
SELECT ALL rt0.c1, vt0.c0, vt1.c1 FROM rt0, vt0, vt1;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c3 FROM vt0 NATURAL JOIN rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c3 FROM vt0 NATURAL JOIN rt0 WHERE (CAST((rt0.c1 IN ()) AS REAL)) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c3 FROM vt0 NATURAL JOIN rt0 WHERE ((NOT (CAST((rt0.c1 IN ()) AS REAL)))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c3 FROM vt0 NATURAL JOIN rt0 WHERE (((CAST((rt0.c1 IN ()) AS REAL)) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c3 FROM vt0 NATURAL JOIN rt0;
SELECT rt1.c1, vt0.c0 FROM rt1, vt0 GROUP BY rt1.c1, vt0.c0;
SELECT ALL rt1.c1, vt0.c0 FROM rt1, vt0 WHERE (ABS(DISTINCT '-1329933294')) GROUP BY rt1.c1, vt0.c0 UNION SELECT ALL rt1.c1, vt0.c0 FROM rt1, vt0 WHERE ((NOT (ABS(DISTINCT '-1329933294')))) GROUP BY rt1.c1, vt0.c0 UNION SELECT ALL rt1.c1, vt0.c0 FROM rt1, vt0 NOT INDEXED WHERE (((ABS(DISTINCT '-1329933294')) ISNULL)) GROUP BY rt1.c1, vt0.c0;
SELECT rt1.c1, vt0.c0 FROM rt1, vt0 GROUP BY rt1.c1, vt0.c0;
SELECT ALL rt0.c3, rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c3, rt0.c2, rt0.c1;
SELECT rt0.c3, rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c3, rt0.c2, rt0.c1 HAVING MAX((TOTAL(MIN(vt1.c2)) IN ())) UNION ALL SELECT rt0.c3, rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c3, rt0.c2, rt0.c1 HAVING (NOT (MAX((TOTAL(MIN(vt1.c2)) IN ())))) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c3, rt0.c2, rt0.c1 HAVING ((MAX((TOTAL(MIN(vt1.c2)) IN ()))) ISNULL);
SELECT ALL rt0.c3, rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c3, rt0.c2, rt0.c1;
SELECT rt0.c3, rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c3, rt0.c2, rt0.c1 HAVING MAX((TOTAL(MIN(vt1.c2)) IN ())) UNION ALL SELECT rt0.c3, rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c3, rt0.c2, rt0.c1 HAVING (NOT (MAX((TOTAL(MIN(vt1.c2)) IN ())))) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c3, rt0.c2, rt0.c1 HAVING ((MAX((TOTAL(MIN(vt1.c2)) IN ()))) ISNULL);
SELECT ALL rt0.c3, rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c3, rt0.c2, rt0.c1;
SELECT vt1.c3, vt1.c1 FROM vt0 LEFT OUTER JOIN vt1 ON CASE WHEN ((vt0.c0)%(vt1.c0)) THEN ((vt0.c0) NOT BETWEEN (vt1.c2) AND (vt1.c2)) END;
SELECT vt1.c3, vt1.c1 FROM vt0 LEFT OUTER JOIN vt1 ON CASE WHEN ((vt0.c0)%(vt1.c0)) THEN ((vt0.c0) NOT BETWEEN (vt1.c2) AND (vt1.c2)) END WHERE (((NULL) ISNULL)) UNION ALL SELECT ALL vt1.c3, vt1.c1 FROM vt0 LEFT OUTER JOIN vt1 ON CASE WHEN ((vt0.c0)%(vt1.c0)) THEN ((vt0.c0) NOT BETWEEN (vt1.c2) AND (vt1.c2)) END WHERE ((NOT (((NULL) ISNULL)))) UNION ALL SELECT ALL vt1.c3, vt1.c1 FROM vt0 LEFT OUTER JOIN vt1 ON CASE WHEN ((vt0.c0)%(vt1.c0)) THEN ((vt0.c0) NOT BETWEEN (vt1.c2) AND (vt1.c2)) END WHERE (((((NULL) ISNULL)) ISNULL));
SELECT vt1.c3, vt1.c1 FROM vt0 LEFT OUTER JOIN vt1 ON CASE WHEN ((vt0.c0)%(vt1.c0)) THEN ((vt0.c0) NOT BETWEEN (vt1.c2) AND (vt1.c2)) END;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((+ (rt0.c0)) IN ())) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((+ (rt0.c0)) IN ())))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((+ (rt0.c0)) IN ())) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt1.c1, vt1.c0, vt0.c0, vt1.c1, vt1.c2, rt0.c2, rt1.c2, vt1.c3, rt0.c1, rt0.c3 FROM vt0, rt0, rt1, vt1 GROUP BY rt1.c1, vt1.c0, vt0.c0, vt1.c1, vt1.c2, rt0.c2, rt1.c2, vt1.c3, rt0.c1, rt0.c3;
SELECT rt1.c1, vt1.c0, vt0.c0, vt1.c1, vt1.c2, rt0.c2, rt1.c2, vt1.c3, rt0.c1, rt0.c3 FROM vt0, rt0, rt1, vt1 NOT INDEXED WHERE (vt1.c2 COLLATE NOCASE) GROUP BY rt1.c1, vt1.c0, vt0.c0, vt1.c1, vt1.c2, rt0.c2, rt1.c2, vt1.c3, rt0.c1, rt0.c3 UNION SELECT ALL rt1.c1, vt1.c0, vt0.c0, vt1.c1, vt1.c2, rt0.c2, rt1.c2, vt1.c3, rt0.c1, rt0.c3 FROM vt0, rt0, rt1, vt1 WHERE ((NOT (vt1.c2 COLLATE NOCASE))) GROUP BY rt1.c1, vt1.c0, vt0.c0, vt1.c1, vt1.c2, rt0.c2, rt1.c2, vt1.c3, rt0.c1, rt0.c3 UNION SELECT ALL rt1.c1, vt1.c0, vt0.c0, vt1.c1, vt1.c2, rt0.c2, rt1.c2, vt1.c3, rt0.c1, rt0.c3 FROM vt0, rt0, rt1, vt1 WHERE (((vt1.c2 COLLATE NOCASE) ISNULL)) GROUP BY rt1.c1, vt1.c0, vt0.c0, vt1.c1, vt1.c2, rt0.c2, rt1.c2, vt1.c3, rt0.c1, rt0.c3;
SELECT ALL rt1.c1, vt1.c0, vt0.c0, vt1.c1, vt1.c2, rt0.c2, rt1.c2, vt1.c3, rt0.c1, rt0.c3 FROM vt0, rt0, rt1, vt1 GROUP BY rt1.c1, vt1.c0, vt0.c0, vt1.c1, vt1.c2, rt0.c2, rt1.c2, vt1.c3, rt0.c1, rt0.c3;
SELECT vt0.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c2;
SELECT ALL vt0.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c2 HAVING AVG(TOTAL(GROUP_CONCAT(rt0.c1))) UNION ALL SELECT vt0.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c2 HAVING (NOT (AVG(TOTAL(GROUP_CONCAT(rt0.c1))))) UNION ALL SELECT ALL vt0.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c2 HAVING ((AVG(TOTAL(GROUP_CONCAT(rt0.c1)))) ISNULL);
SELECT ALL rt0.c0, vt1.c0, vt1.c3, rt0.c2, vt1.c2, rt0.c1, vt1.c1 FROM rt0 NATURAL JOIN vt1;
SELECT ALL rt0.c0, vt1.c0, vt1.c3, rt0.c2, vt1.c2, rt0.c1, vt1.c1 FROM rt0 NATURAL JOIN vt1 WHERE (((rt0.c1)&(rt0.c3)) COLLATE NOCASE) UNION ALL SELECT rt0.c0, vt1.c0, vt1.c3, rt0.c2, vt1.c2, rt0.c1, vt1.c1 FROM rt0 NATURAL JOIN vt1 WHERE ((NOT (((rt0.c1)&(rt0.c3)) COLLATE NOCASE))) UNION ALL SELECT ALL rt0.c0, vt1.c0, vt1.c3, rt0.c2, vt1.c2, rt0.c1, vt1.c1 FROM rt0 NATURAL JOIN vt1 WHERE (((((rt0.c1)&(rt0.c3)) COLLATE NOCASE) ISNULL));
SELECT ALL rt0.c0, vt1.c0, vt1.c3, rt0.c2, vt1.c2, rt0.c1, vt1.c1 FROM rt0 NATURAL JOIN vt1;
SELECT DISTINCT * FROM vt1, rt1, vt0, rt0;
SELECT DISTINCT * FROM vt1, rt1, vt0, rt0 WHERE (((vt1.c0 COLLATE RTRIM)IS(((vt1.c0) IS TRUE)))) UNION SELECT DISTINCT * FROM vt1, rt1, vt0, rt0 WHERE ((NOT (((vt1.c0 COLLATE RTRIM)IS(((vt1.c0) IS TRUE)))))) UNION SELECT DISTINCT * FROM vt1, rt1, vt0, rt0 WHERE (((((vt1.c0 COLLATE RTRIM)IS(((vt1.c0) IS TRUE)))) ISNULL));
SELECT DISTINCT * FROM vt1, rt1, vt0, rt0;
SELECT rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1;
SELECT ALL rt1.c2, rt1.c1 FROM rt1 WHERE (((ABS(DISTINCT rt1.c1))<=(((((rt1.c0)AND(rt1.c0)))AND(rt1.c2))))) GROUP BY rt1.c2, rt1.c1 UNION SELECT ALL rt1.c2, rt1.c1 FROM rt1 WHERE ((NOT (((ABS(DISTINCT rt1.c1))<=(((((rt1.c0)AND(rt1.c0)))AND(rt1.c2))))))) GROUP BY rt1.c2, rt1.c1 UNION SELECT ALL rt1.c2, rt1.c1 FROM rt1 WHERE (((((ABS(DISTINCT rt1.c1))<=(((((rt1.c0)AND(rt1.c0)))AND(rt1.c2))))) ISNULL)) GROUP BY rt1.c2, rt1.c1;
SELECT rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1;
SELECT vt1.c1 FROM rt0 FULL OUTER JOIN vt0 ON ((((vt1.c0) IS TRUE))IS(((((((((rt0.c2)OR(vt1.c3)))OR(vt1.c2)))OR(rt0.c2)))AND(vt0.c0)))) INNER JOIN vt1 ON CASE WHEN 0.09161001591223494 THEN (~ (rt0.c0)) ELSE vt1.c2 COLLATE RTRIM END GROUP BY vt1.c1;
SELECT ALL MIN(((vt1.c3)IS NOT((((rt1.c2))<=((vt1.c2)))))) FROM rt1, vt0, rt0, vt1;
SELECT * FROM rt0 INNER JOIN vt1 ON (('0.3033897677481574' COLLATE BINARY) NOT BETWEEN (rt1.c2) AND ((+ (rt0.c0)))) CROSS JOIN rt1 ON CASE LOWER(DISTINCT 0.6612939890252727)  WHEN rt1.c0 COLLATE NOCASE THEN CASE rt0.c3  WHEN vt1.c3 THEN vt1.c1 WHEN x'' THEN 0x5dd82564 WHEN x'3812' THEN rt1.c0 ELSE vt1.c0 END WHEN ((rt1.c1) IS FALSE) THEN ((rt1.c2) IS TRUE) WHEN rt1.c1 COLLATE RTRIM THEN (((vt1.c2)) BETWEEN ((x'')) AND ((vt1.c2))) END;
SELECT ALL * FROM rt0 INNER JOIN vt1 ON (('0.3033897677481574' COLLATE BINARY) NOT BETWEEN (rt1.c2) AND ((+ (rt0.c0)))) CROSS JOIN rt1 ON CASE LOWER(DISTINCT 0.6612939890252727)  WHEN rt1.c0 COLLATE NOCASE THEN CASE rt0.c3  WHEN vt1.c3 THEN vt1.c1 WHEN x'' THEN 0x5dd82564 WHEN x'3812' THEN rt1.c0 ELSE vt1.c0 END WHEN ((rt1.c1) IS FALSE) THEN ((rt1.c2) IS TRUE) WHEN rt1.c1 COLLATE RTRIM THEN (((vt1.c2)) BETWEEN ((x'')) AND ((vt1.c2))) END WHERE ((((((x'')) NOT BETWEEN ((vt1.c1)) AND ((rt0.c1))))||(((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c0))))) UNION ALL SELECT ALL * FROM rt0 INNER JOIN vt1 ON (('0.3033897677481574' COLLATE BINARY) NOT BETWEEN (rt1.c2) AND ((+ (rt0.c0)))) CROSS JOIN rt1 ON CASE LOWER(DISTINCT 0.6612939890252727)  WHEN rt1.c0 COLLATE NOCASE THEN CASE rt0.c3  WHEN vt1.c3 THEN vt1.c1 WHEN x'' THEN 0x5dd82564 WHEN x'3812' THEN rt1.c0 ELSE vt1.c0 END WHEN ((rt1.c1) IS FALSE) THEN ((rt1.c2) IS TRUE) WHEN rt1.c1 COLLATE RTRIM THEN (((vt1.c2)) BETWEEN ((x'')) AND ((vt1.c2))) END WHERE ((NOT ((((((x'')) NOT BETWEEN ((vt1.c1)) AND ((rt0.c1))))||(((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c0))))))) UNION ALL SELECT ALL * FROM rt0 INNER JOIN vt1 ON (('0.3033897677481574' COLLATE BINARY) NOT BETWEEN (rt1.c2) AND ((+ (rt0.c0)))) CROSS JOIN rt1 ON CASE LOWER(DISTINCT 0.6612939890252727)  WHEN rt1.c0 COLLATE NOCASE THEN CASE rt0.c3  WHEN vt1.c3 THEN vt1.c1 WHEN x'' THEN 0X5dd82564 WHEN x'3812' THEN rt1.c0 ELSE vt1.c0 END WHEN ((rt1.c1) IS FALSE) THEN ((rt1.c2) IS TRUE) WHEN rt1.c1 COLLATE RTRIM THEN (((vt1.c2)) BETWEEN ((x'')) AND ((vt1.c2))) END WHERE ((((((((x'')) NOT BETWEEN ((vt1.c1)) AND ((rt0.c1))))||(((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c0))))) ISNULL));
SELECT * FROM rt0 INNER JOIN vt1 ON (('0.3033897677481574' COLLATE BINARY) NOT BETWEEN (rt1.c2) AND ((+ (rt0.c0)))) CROSS JOIN rt1 ON CASE LOWER(DISTINCT 0.6612939890252727)  WHEN rt1.c0 COLLATE NOCASE THEN CASE rt0.c3  WHEN vt1.c3 THEN vt1.c1 WHEN x'' THEN 0x5dd82564 WHEN x'3812' THEN rt1.c0 ELSE vt1.c0 END WHEN ((rt1.c1) IS FALSE) THEN ((rt1.c2) IS TRUE) WHEN rt1.c1 COLLATE RTRIM THEN (((vt1.c2)) BETWEEN ((x'')) AND ((vt1.c2))) END;
SELECT DISTINCT rt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON ((('867373215', vt1.c3, vt1.c1)) BETWEEN ((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c2)), (NOT (rt0.c1)), (('')==('')))) AND ((((rt0.c3)&(rt0.c1)), CASE WHEN vt1.c2 THEN vt0.c0 ELSE vt1.c3 END, ((vt1.c3) NOT BETWEEN (rt0.c3) AND (vt1.c0))))) INNER JOIN vt1 ON (((']nnI'))=((CAST(0.6133035663022085 AS INTEGER))));
SELECT rt0.c0, vt1.c2, vt0.c0 FROM rt1, vt0 RIGHT OUTER JOIN vt1 ON (((vt0.c0)) BETWEEN ((((rt0.c2) IS FALSE))) AND ((((rt1.c2)<(rt1.c1))))) RIGHT OUTER JOIN rt0 ON LAST_INSERT_ROWID() GROUP BY rt0.c0, vt1.c2, vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG(((vt0.c0)*(COUNT(*)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (AVG(((vt0.c0)*(COUNT(*)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG(((vt0.c0)*(COUNT(*))))) ISNULL);
SELECT vt1.c3, rt0.c0, rt1.c1, vt0.c0, vt1.c2, rt1.c0, vt1.c1, rt0.c3, vt1.c0, rt0.c2 FROM vt1 RIGHT OUTER JOIN rt1 ON ((((rt1.c2) ISNULL))+(COALESCE(vt1.c3, vt1.c0))) INNER JOIN rt0 ON vt1.c0 RIGHT OUTER JOIN vt0 ON json((vt1.c2 IN (rt1.c1)));
SELECT vt1.c3, rt0.c0, rt1.c1, vt0.c0, vt1.c2, rt1.c0, vt1.c1, rt0.c3, vt1.c0, rt0.c2 FROM vt1 RIGHT OUTER JOIN rt1 ON ((((rt1.c2) ISNULL))+(COALESCE(vt1.c3, vt1.c0))) INNER JOIN rt0 ON vt1.c0 RIGHT OUTER JOIN vt0 ON json((vt1.c2 IN (rt1.c1))) WHERE (rt0.c3) UNION ALL SELECT ALL vt1.c3, rt0.c0, rt1.c1, vt0.c0, vt1.c2, rt1.c0, vt1.c1, rt0.c3, vt1.c0, rt0.c2 FROM vt1 RIGHT OUTER JOIN rt1 ON ((((rt1.c2) ISNULL))+(COALESCE(vt1.c3, vt1.c0))) INNER JOIN rt0 ON vt1.c0 RIGHT OUTER JOIN vt0 ON json((vt1.c2 IN (rt1.c1))) WHERE ((NOT (rt0.c3))) UNION ALL SELECT vt1.c3, rt0.c0, rt1.c1, vt0.c0, vt1.c2, rt1.c0, vt1.c1, rt0.c3, vt1.c0, rt0.c2 FROM vt1 RIGHT OUTER JOIN rt1 ON ((((rt1.c2) ISNULL))+(COALESCE(vt1.c3, vt1.c0))) INNER JOIN rt0 ON vt1.c0 RIGHT OUTER JOIN vt0 ON json((vt1.c2 IN (rt1.c1))) WHERE (((rt0.c3) ISNULL));
SELECT vt1.c3, rt0.c0, rt1.c1, vt0.c0, vt1.c2, rt1.c0, vt1.c1, rt0.c3, vt1.c0, rt0.c2 FROM vt1 RIGHT OUTER JOIN rt1 ON ((((rt1.c2) ISNULL))+(COALESCE(vt1.c3, vt1.c0))) INNER JOIN rt0 ON vt1.c0 RIGHT OUTER JOIN vt0 ON json((vt1.c2 IN (rt1.c1)));
SELECT DISTINCT vt1.c0, rt1.c2, vt1.c1, vt1.c2, rt1.c0 FROM vt1, rt1;
SELECT DISTINCT vt1.c0, rt1.c2, vt1.c1, vt1.c2, rt1.c0 FROM vt1, rt1 WHERE (CAST(CASE WHEN vt1.c2 THEN rt1.c1 END AS NUMERIC)) UNION SELECT DISTINCT vt1.c0, rt1.c2, vt1.c1, vt1.c2, rt1.c0 FROM vt1, rt1 WHERE ((NOT (CAST(CASE WHEN vt1.c2 THEN rt1.c1 END AS NUMERIC)))) UNION SELECT DISTINCT vt1.c0, rt1.c2, vt1.c1, vt1.c2, rt1.c0 FROM vt1, rt1 WHERE (((CAST(CASE WHEN vt1.c2 THEN rt1.c1 END AS NUMERIC)) ISNULL));
SELECT DISTINCT vt1.c0, rt1.c2, vt1.c1, vt1.c2, rt1.c0 FROM vt1, rt1;
SELECT ALL vt1.c3, rt1.c1, vt1.c0, rt0.c2, rt1.c0, rt0.c3 FROM rt1, vt1, rt0 GROUP BY vt1.c3, rt1.c1, vt1.c0, rt0.c2, rt1.c0, rt0.c3;
SELECT vt1.c3, rt1.c1, vt1.c0, rt0.c2, rt1.c0, rt0.c3 FROM rt1, vt1, rt0 WHERE (CAST('!' AS REAL)) GROUP BY vt1.c3, rt1.c1, vt1.c0, rt0.c2, rt1.c0, rt0.c3 UNION SELECT vt1.c3, rt1.c1, vt1.c0, rt0.c2, rt1.c0, rt0.c3 FROM rt1, vt1, rt0 WHERE ((NOT (CAST('!' AS REAL)))) GROUP BY vt1.c3, rt1.c1, vt1.c0, rt0.c2, rt1.c0, rt0.c3 UNION SELECT ALL vt1.c3, rt1.c1, vt1.c0, rt0.c2, rt1.c0, rt0.c3 FROM rt1, vt1, rt0 WHERE (((CAST('!' AS REAL)) ISNULL)) GROUP BY vt1.c3, rt1.c1, vt1.c0, rt0.c2, rt1.c0, rt0.c3;
SELECT ALL vt1.c3, rt1.c1, vt1.c0, rt0.c2, rt1.c0, rt0.c3 FROM rt1, vt1, rt0 GROUP BY vt1.c3, rt1.c1, vt1.c0, rt0.c2, rt1.c0, rt0.c3;
SELECT ALL rt0.c3, rt0.c2, rt1.c1, rt1.c0, rt0.c0, rt1.c2, vt0.c0 FROM rt0, rt1 CROSS JOIN vt0 ON ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))) NOT BETWEEN (((rt0.c1)<=(rt1.c1))) AND (rt1.c2 COLLATE BINARY)) GROUP BY rt0.c3, rt0.c2, rt1.c1, rt1.c0, rt0.c0, rt1.c2, vt0.c0;
SELECT ALL rt0.c3, rt0.c2, rt1.c1, rt1.c0, rt0.c0, rt1.c2, vt0.c0 FROM rt0, rt1 CROSS JOIN vt0 ON ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))) NOT BETWEEN (((rt0.c1)<=(rt1.c1))) AND (rt1.c2 COLLATE BINARY)) GROUP BY rt0.c3, rt0.c2, rt1.c1, rt1.c0, rt0.c0, rt1.c2, vt0.c0 HAVING TOTAL(MIN(rt0.c1)) UNION ALL SELECT rt0.c3, rt0.c2, rt1.c1, rt1.c0, rt0.c0, rt1.c2, vt0.c0 FROM rt0, rt1 CROSS JOIN vt0 ON ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))) NOT BETWEEN (((rt0.c1)<=(rt1.c1))) AND (rt1.c2 COLLATE BINARY)) GROUP BY rt0.c3, rt0.c2, rt1.c1, rt1.c0, rt0.c0, rt1.c2, vt0.c0 HAVING (NOT (TOTAL(MIN(rt0.c1)))) UNION ALL SELECT rt0.c3, rt0.c2, rt1.c1, rt1.c0, rt0.c0, rt1.c2, vt0.c0 FROM rt0, rt1 CROSS JOIN vt0 ON ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))) NOT BETWEEN (((rt0.c1)<=(rt1.c1))) AND (rt1.c2 COLLATE BINARY)) GROUP BY rt0.c3, rt0.c2, rt1.c1, rt1.c0, rt0.c0, rt1.c2, vt0.c0 HAVING ((TOTAL(MIN(rt0.c1))) ISNULL);
SELECT * FROM vt0, rt1, rt0, vt1;
SELECT * FROM vt0, rt1, rt0, vt1 WHERE (((CASE rt1.c2  WHEN vt1.c1 THEN rt1.c2 ELSE rt1.c0 END)*(((((vt1.c2)OR(0.6656423327353618)))OR(rt0.c1))))) UNION ALL SELECT ALL * FROM vt0, rt1, rt0, vt1 WHERE ((NOT (((CASE rt1.c2  WHEN vt1.c1 THEN rt1.c2 ELSE rt1.c0 END)*(((((vt1.c2)OR(0.6656423327353618)))OR(rt0.c1))))))) UNION ALL SELECT ALL * FROM vt0, rt1, rt0, vt1 WHERE (((((CASE rt1.c2  WHEN vt1.c1 THEN rt1.c2 ELSE rt1.c0 END)*(((((vt1.c2)OR(0.6656423327353618)))OR(rt0.c1))))) ISNULL));
SELECT * FROM vt0, rt1, rt0, vt1;
SELECT DISTINCT vt1.c1, vt0.c0 FROM vt0, vt1;
SELECT DISTINCT vt1.c1, vt0.c0 FROM vt0, vt1 WHERE (vt1.c0) UNION SELECT DISTINCT vt1.c1, vt0.c0 FROM vt0, vt1 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT vt1.c1, vt0.c0 FROM vt0, vt1 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT vt1.c1, vt0.c0 FROM vt0, vt1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0))<>((vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((NOT ((((vt0.c0))<>((vt0.c0)))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((NOT ((((vt0.c0))<>((vt0.c0)))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0, rt0.c1, rt0.c3, rt0.c2, vt1.c0, rt0.c0, vt1.c1, vt1.c2 FROM vt1, vt0, rt0 GROUP BY vt0.c0, rt0.c1, rt0.c3, rt0.c2, vt1.c0, rt0.c0, vt1.c1, vt1.c2;
SELECT vt0.c0, rt0.c1, rt0.c3, rt0.c2, vt1.c0, rt0.c0, vt1.c1, vt1.c2 FROM vt1, vt0, rt0 GROUP BY vt0.c0, rt0.c1, rt0.c3, rt0.c2, vt1.c0, rt0.c0, vt1.c1, vt1.c2 HAVING rt0.c3 UNION ALL SELECT ALL vt0.c0, rt0.c1, rt0.c3, rt0.c2, vt1.c0, rt0.c0, vt1.c1, vt1.c2 FROM vt1, vt0, rt0 GROUP BY vt0.c0, rt0.c1, rt0.c3, rt0.c2, vt1.c0, rt0.c0, vt1.c1, vt1.c2 HAVING (NOT (rt0.c3)) UNION ALL SELECT ALL vt0.c0, rt0.c1, rt0.c3, rt0.c2, vt1.c0, rt0.c0, vt1.c1, vt1.c2 FROM vt1, vt0, rt0 GROUP BY vt0.c0, rt0.c1, rt0.c3, rt0.c2, vt1.c0, rt0.c0, vt1.c1, vt1.c2 HAVING ((rt0.c3) ISNULL);
SELECT ALL vt0.c0, rt0.c1, rt0.c3, rt0.c2, vt1.c0, rt0.c0, vt1.c1, vt1.c2 FROM vt1, vt0, rt0 GROUP BY vt0.c0, rt0.c1, rt0.c3, rt0.c2, vt1.c0, rt0.c0, vt1.c1, vt1.c2;
SELECT vt0.c0, rt0.c1, rt0.c3, rt0.c2, vt1.c0, rt0.c0, vt1.c1, vt1.c2 FROM vt1, vt0, rt0 GROUP BY vt0.c0, rt0.c1, rt0.c3, rt0.c2, vt1.c0, rt0.c0, vt1.c1, vt1.c2 HAVING rt0.c3 UNION ALL SELECT ALL vt0.c0, rt0.c1, rt0.c3, rt0.c2, vt1.c0, rt0.c0, vt1.c1, vt1.c2 FROM vt1, vt0, rt0 GROUP BY vt0.c0, rt0.c1, rt0.c3, rt0.c2, vt1.c0, rt0.c0, vt1.c1, vt1.c2 HAVING (NOT (rt0.c3)) UNION ALL SELECT ALL vt0.c0, rt0.c1, rt0.c3, rt0.c2, vt1.c0, rt0.c0, vt1.c1, vt1.c2 FROM vt1, vt0, rt0 GROUP BY vt0.c0, rt0.c1, rt0.c3, rt0.c2, vt1.c0, rt0.c0, vt1.c1, vt1.c2 HAVING ((rt0.c3) ISNULL);
SELECT ALL vt0.c0, rt0.c1, rt0.c3, rt0.c2, vt1.c0, rt0.c0, vt1.c1, vt1.c2 FROM vt1, vt0, rt0 GROUP BY vt0.c0, rt0.c1, rt0.c3, rt0.c2, vt1.c0, rt0.c0, vt1.c1, vt1.c2;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE ((((+ (vt0.c0))) NOT BETWEEN ((((vt0.c0))>=((vt0.c0)))) AND (LOWER(vt0.c0)))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((((+ (vt0.c0))) NOT BETWEEN ((((vt0.c0))>=((vt0.c0)))) AND (LOWER(vt0.c0)))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((((+ (vt0.c0))) NOT BETWEEN ((((vt0.c0))>=((vt0.c0)))) AND (LOWER(vt0.c0)))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c0, rt1.c2, rt1.c0 FROM vt1, vt0, rt1, rt0;
SELECT DISTINCT vt0.c0, rt1.c2, rt1.c0 FROM vt1, vt0, rt1, rt0 WHERE ((- ((((vt1.c3, vt1.c1, vt0.c0))=((rt0.c3, rt0.c3, vt0.c0)))))) UNION SELECT DISTINCT vt0.c0, rt1.c2, rt1.c0 FROM vt1, vt0, rt1, rt0 WHERE ((NOT ((- ((((vt1.c3, vt1.c1, vt0.c0))=((rt0.c3, rt0.c3, vt0.c0)))))))) UNION SELECT DISTINCT vt0.c0, rt1.c2, rt1.c0 FROM vt1, vt0, rt1, rt0 WHERE ((((- ((((vt1.c3, vt1.c1, vt0.c0))=((rt0.c3, rt0.c3, vt0.c0)))))) ISNULL));
SELECT DISTINCT vt0.c0, rt1.c2, rt1.c0 FROM vt1, vt0, rt1, rt0;
SELECT rt0.c2, vt1.c0, rt0.c0, rt1.c0, rt1.c1, rt0.c1, vt1.c1, vt1.c3, vt0.c0, rt0.c3, rt1.c2, vt1.c2 FROM rt1 CROSS JOIN vt0 ON ((((rt0.c3)|(rt0.c1)))/(TIME(rt0.c2, NULL, rt0.c2, -331367834, rt1.c0))) LEFT OUTER JOIN rt0 ON ((CASE WHEN rt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN 'TGPjV\	H|' WHEN 0.8499571634787165 THEN NULL ELSE rt1.c1 END)<(CASE WHEN vt0.c0 THEN rt0.c2 WHEN vt1.c1 THEN rt0.c2 WHEN rt0.c0 THEN vt1.c3 ELSE rt0.c1 END)) RIGHT OUTER JOIN vt1 ON (vt1.c0 IN ()) GROUP BY rt0.c2, vt1.c0, rt0.c0, rt1.c0, rt1.c1, rt0.c1, vt1.c1, vt1.c3, vt0.c0, rt0.c3, rt1.c2, vt1.c2;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(MAX(SUM(AVG('-1831068558')))))%(MAX(vt0.c0, SUM(TOTAL(COUNT(*)))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((TOTAL(MAX(SUM(AVG('-1831068558')))))%(MAX(vt0.c0, SUM(TOTAL(COUNT(*)))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((TOTAL(MAX(SUM(AVG('-1831068558')))))%(MAX(vt0.c0, SUM(TOTAL(COUNT(*))))))) ISNULL);
SELECT * FROM vt1;
SELECT ALL * FROM vt1 WHERE (vt1.c0) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (vt1.c0))) UNION ALL SELECT * FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT rt1.c1, vt1.c1 FROM vt1 RIGHT OUTER JOIN rt1 ON CAST(vt1.c2 AS BLOB) COLLATE RTRIM;
SELECT DISTINCT rt1.c1, vt1.c1 FROM vt1 RIGHT OUTER JOIN rt1 ON CAST(vt1.c2 AS BLOB) COLLATE RTRIM WHERE (((((((vt1.c2)OR(rt1.c2)))AND(vt1.c0))) BETWEEN ((rt1.c2 IN ())) AND ((~ (vt1.c3))))) UNION SELECT DISTINCT rt1.c1, vt1.c1 FROM vt1 RIGHT OUTER JOIN rt1 ON CAST(vt1.c2 AS BLOB) COLLATE RTRIM WHERE ((NOT (((((((vt1.c2)OR(rt1.c2)))AND(vt1.c0))) BETWEEN ((rt1.c2 IN ())) AND ((~ (vt1.c3))))))) UNION SELECT DISTINCT rt1.c1, vt1.c1 FROM vt1 RIGHT OUTER JOIN rt1 ON CAST(vt1.c2 AS BLOB) COLLATE RTRIM WHERE (((((((((vt1.c2)OR(rt1.c2)))AND(vt1.c0))) BETWEEN ((rt1.c2 IN ())) AND ((~ (vt1.c3))))) ISNULL));
SELECT DISTINCT rt1.c1, vt1.c1 FROM vt1 RIGHT OUTER JOIN rt1 ON CAST(vt1.c2 AS BLOB) COLLATE RTRIM;
SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt1.c2 FROM rt0, rt1, vt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt1.c2;
SELECT rt0.c1, rt0.c2, rt0.c3, rt1.c2 FROM rt0, rt1, vt0 WHERE (CAST((((rt0.c1))<=((1))) AS BLOB)) GROUP BY rt0.c1, rt0.c2, rt0.c3, rt1.c2 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt1.c2 FROM rt0, rt1, vt0 WHERE ((NOT (CAST((((rt0.c1))<=((1))) AS BLOB)))) GROUP BY rt0.c1, rt0.c2, rt0.c3, rt1.c2 UNION SELECT rt0.c1, rt0.c2, rt0.c3, rt1.c2 FROM rt0, rt1, vt0 WHERE (((CAST((((rt0.c1))<=((1))) AS BLOB)) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c3, rt1.c2;
SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt1.c2 FROM rt0, rt1, vt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt1.c2;
SELECT ALL rt0.c0, vt1.c0, vt0.c0, rt0.c3 FROM vt0, rt0, vt1 GROUP BY rt0.c0, vt1.c0, vt0.c0, rt0.c3;
SELECT rt0.c0, vt1.c0, vt0.c0, rt0.c3 FROM vt0, rt0, vt1 GROUP BY rt0.c0, vt1.c0, vt0.c0, rt0.c3 HAVING 0.0 UNION ALL SELECT ALL rt0.c0, vt1.c0, vt0.c0, rt0.c3 FROM vt0, rt0, vt1 GROUP BY rt0.c0, vt1.c0, vt0.c0, rt0.c3 HAVING (NOT (0.0)) UNION ALL SELECT rt0.c0, vt1.c0, vt0.c0, rt0.c3 FROM vt0, rt0, vt1 GROUP BY rt0.c0, vt1.c0, vt0.c0, rt0.c3 HAVING ((0.0) ISNULL);
SELECT ALL rt0.c0, vt1.c0, vt0.c0, rt0.c3 FROM vt0, rt0, vt1 GROUP BY rt0.c0, vt1.c0, vt0.c0, rt0.c3;
SELECT rt0.c0, vt1.c0, vt0.c0, rt0.c3 FROM vt0, rt0, vt1 GROUP BY rt0.c0, vt1.c0, vt0.c0, rt0.c3 HAVING 0.0 UNION ALL SELECT ALL rt0.c0, vt1.c0, vt0.c0, rt0.c3 FROM vt0, rt0, vt1 GROUP BY rt0.c0, vt1.c0, vt0.c0, rt0.c3 HAVING (NOT (0.0)) UNION ALL SELECT rt0.c0, vt1.c0, vt0.c0, rt0.c3 FROM vt0, rt0, vt1 GROUP BY rt0.c0, vt1.c0, vt0.c0, rt0.c3 HAVING ((0.0) ISNULL);
SELECT ALL rt0.c0, vt1.c0, vt0.c0, rt0.c3 FROM vt0, rt0, vt1 GROUP BY rt0.c0, vt1.c0, vt0.c0, rt0.c3;
SELECT rt1.c2, rt1.c0 FROM vt0, rt1;
SELECT ALL rt1.c2, rt1.c0 FROM vt0, rt1 WHERE (rtreenode(((rt1.c2)>(rt1.c1)), ((rt1.c2) BETWEEN (vt0.c0) AND (rt1.c1)))) UNION ALL SELECT ALL rt1.c2, rt1.c0 FROM vt0, rt1 WHERE ((NOT (rtreenode(((rt1.c2)>(rt1.c1)), ((rt1.c2) BETWEEN (vt0.c0) AND (rt1.c1)))))) UNION ALL SELECT ALL rt1.c2, rt1.c0 FROM vt0, rt1 WHERE (((rtreenode(((rt1.c2)>(rt1.c1)), ((rt1.c2) BETWEEN (vt0.c0) AND (rt1.c1)))) ISNULL));
SELECT rt1.c2, rt1.c0 FROM vt0, rt1;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CASE (vt0.c0 IN ())  WHEN ((vt0.c0)GLOB(0.11480547735274937)) THEN ((0.5258252940710743)<(vt0.c0)) ELSE CAST(vt0.c0 AS TEXT) END) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (CASE (vt0.c0 IN ())  WHEN ((vt0.c0)GLOB(0.11480547735274937)) THEN ((0.5258252940710743)<(vt0.c0)) ELSE CAST(vt0.c0 AS TEXT) END))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CASE (vt0.c0 IN ())  WHEN ((vt0.c0)GLOB(0.11480547735274937)) THEN ((0.5258252940710743)<(vt0.c0)) ELSE CAST(vt0.c0 AS TEXT) END) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c3)))&((rt0.c1 IN ())))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c3)))&((rt0.c1 IN ())))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE (((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c3)))&((rt0.c1 IN ())))) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0, rt0.c3, vt1.c3, rt0.c1, vt1.c2 FROM vt1 LEFT OUTER JOIN vt0 ON ((((vt0.c0)-(rt1.c1)))IS NOT(((vt1.c2) ISNULL))) CROSS JOIN rt0 ON '-1193285145' FULL OUTER JOIN rt1 ON (((0.39229675398500186))<=((((rt1.c2) ISNULL)))) GROUP BY rt0.c0, rt0.c3, vt1.c3, rt0.c1, vt1.c2;
SELECT rt1.c2, rt0.c1, vt1.c0, vt1.c3 FROM rt0, vt0, rt1, vt1;
SELECT rt1.c2, rt0.c1, vt1.c0, vt1.c3 FROM rt0, vt0, rt1, vt1 WHERE (json_quote((((vt1.c1))=((rt0.c1))))) UNION ALL SELECT rt1.c2, rt0.c1, vt1.c0, vt1.c3 FROM rt0, vt0, rt1, vt1 WHERE ((NOT (json_quote((((vt1.c1))=((rt0.c1))))))) UNION ALL SELECT ALL rt1.c2, rt0.c1, vt1.c0, vt1.c3 FROM rt0, vt0, rt1, vt1 WHERE (((json_quote((((vt1.c1))==((rt0.c1))))) ISNULL));
SELECT rt1.c2, rt0.c1, vt1.c0, vt1.c3 FROM rt0, vt0, rt1, vt1;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((vt0.c0)IS NOT(vt0.c0))) NOT NULL)) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0)IS NOT(vt0.c0))) NOT NULL)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((vt0.c0)IS NOT(vt0.c0))) NOT NULL)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt1.c3 FROM rt0, vt1 RIGHT OUTER JOIN vt0 ON ((NOT (rt0.c3)) IN ()) GROUP BY vt1.c3;
SELECT vt1.c3 FROM rt0, vt1 RIGHT OUTER JOIN vt0 ON ((NOT (rt0.c3)) IN ()) WHERE (((CAST(vt1.c0 AS INTEGER)) BETWEEN (NULL) AND (((((0.7555941452255136)OR(rt0.c1)))AND(vt1.c0))))) GROUP BY vt1.c3 UNION SELECT vt1.c3 FROM rt0, vt1 RIGHT OUTER JOIN vt0 ON ((NOT (rt0.c3)) IN ()) WHERE ((NOT (((CAST(vt1.c0 AS INTEGER)) BETWEEN (NULL) AND (((((0.7555941452255136)OR(rt0.c1)))AND(vt1.c0))))))) GROUP BY vt1.c3 UNION SELECT vt1.c3 FROM rt0, vt1 RIGHT OUTER JOIN vt0 ON ((NOT (rt0.c3)) IN ()) WHERE (((((CAST(vt1.c0 AS INTEGER)) BETWEEN (NULL) AND (((((0.7555941452255136)OR(rt0.c1)))AND(vt1.c0))))) ISNULL)) GROUP BY vt1.c3;
SELECT vt1.c3 FROM rt0, vt1 RIGHT OUTER JOIN vt0 ON ((NOT (rt0.c3)) IN ()) GROUP BY vt1.c3;
SELECT ALL vt1.c2, vt1.c0, rt1.c2, rt1.c1, vt1.c3 FROM rt1, vt1 GROUP BY vt1.c2, vt1.c0, rt1.c2, rt1.c1, vt1.c3;
SELECT vt1.c2, vt1.c0, rt1.c2, rt1.c1, vt1.c3 FROM rt1, vt1 GROUP BY vt1.c2, vt1.c0, rt1.c2, rt1.c1, vt1.c3 HAVING ((((((((((COUNT(*))==(rt1.c1)))AND(MIN(TOTAL(AVG(SUM('1062897399')))))))OR(COUNT(TOTAL(SUM(MIN(AVG(MAX(COUNT(*))))))))))OR(COUNT(1.954861741E9))))AND(MAX(GROUP_CONCAT('0.24591251512417878')))) UNION ALL SELECT ALL vt1.c2, vt1.c0, rt1.c2, rt1.c1, vt1.c3 FROM rt1, vt1 GROUP BY vt1.c2, vt1.c0, rt1.c2, rt1.c1, vt1.c3 HAVING (NOT (((((((((((COUNT(*))==(rt1.c1)))AND(MIN(TOTAL(AVG(SUM('1062897399')))))))OR(COUNT(TOTAL(SUM(MIN(AVG(MAX(COUNT(*))))))))))OR(COUNT(1.954861741E9))))AND(MAX(GROUP_CONCAT('0.24591251512417878')))))) UNION ALL SELECT ALL vt1.c2, vt1.c0, rt1.c2, rt1.c1, vt1.c3 FROM rt1, vt1 GROUP BY vt1.c2, vt1.c0, rt1.c2, rt1.c1, vt1.c3 HAVING ((((((((((((COUNT(*))=(rt1.c1)))AND(MIN(TOTAL(AVG(SUM('1062897399')))))))OR(COUNT(TOTAL(SUM(MIN(AVG(MAX(COUNT(*))))))))))OR(COUNT(1.954861741E9))))AND(MAX(GROUP_CONCAT('0.24591251512417878'))))) ISNULL);
SELECT vt1.c1, rt1.c1, vt0.c0, vt1.c2, rt1.c2, vt1.c0 FROM vt0, vt1, rt1;
SELECT vt1.c1, rt1.c1, vt0.c0, vt1.c2, rt1.c2, vt1.c0 FROM vt0, vt1, rt1 WHERE (vt1.c2) UNION ALL SELECT ALL vt1.c1, rt1.c1, vt0.c0, vt1.c2, rt1.c2, vt1.c0 FROM vt0, vt1, rt1 WHERE ((NOT (vt1.c2))) UNION ALL SELECT vt1.c1, rt1.c1, vt0.c0, vt1.c2, rt1.c2, vt1.c0 FROM vt0, vt1, rt1 WHERE (((vt1.c2) ISNULL));
SELECT vt1.c1, rt1.c1, vt0.c0, vt1.c2, rt1.c2, vt1.c0 FROM vt0, vt1, rt1;
SELECT DISTINCT rt1.c2, rt1.c1, rt1.c0 FROM rt1;
SELECT DISTINCT rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE (CAST(((rt1.c2) IS TRUE) AS TEXT)) UNION SELECT DISTINCT rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE ((NOT (CAST(((rt1.c2) IS TRUE) AS TEXT)))) UNION SELECT DISTINCT rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE (((CAST(((rt1.c2) IS TRUE) AS TEXT)) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c1, rt1.c0 FROM rt1;
SELECT vt1.c3, rt0.c0, rt0.c2, vt1.c1, rt0.c3, vt0.c0, rt0.c1 FROM vt1, vt0, rt0 GROUP BY vt1.c3, rt0.c0, rt0.c2, vt1.c1, rt0.c3, vt0.c0, rt0.c1;
SELECT ALL vt1.c3, rt0.c0, rt0.c2, vt1.c1, rt0.c3, vt0.c0, rt0.c1 FROM vt1, vt0, rt0 WHERE ((((rt0.c3 IN (vt1.c2)))>=(((vt1.c3)/(rt0.c0))))) GROUP BY vt1.c3, rt0.c0, rt0.c2, vt1.c1, rt0.c3, vt0.c0, rt0.c1 UNION SELECT vt1.c3, rt0.c0, rt0.c2, vt1.c1, rt0.c3, vt0.c0, rt0.c1 FROM vt1, vt0, rt0 WHERE ((NOT ((((rt0.c3 IN (vt1.c2)))>=(((vt1.c3)/(rt0.c0))))))) GROUP BY vt1.c3, rt0.c0, rt0.c2, vt1.c1, rt0.c3, vt0.c0, rt0.c1 UNION SELECT ALL vt1.c3, rt0.c0, rt0.c2, vt1.c1, rt0.c3, vt0.c0, rt0.c1 FROM vt1, vt0, rt0 WHERE ((((((rt0.c3 IN (vt1.c2)))>=(((vt1.c3)/(rt0.c0))))) ISNULL)) GROUP BY vt1.c3, rt0.c0, rt0.c2, vt1.c1, rt0.c3, vt0.c0, rt0.c1;
SELECT vt1.c3, rt0.c0, rt0.c2, vt1.c1, rt0.c3, vt0.c0, rt0.c1 FROM vt1, vt0, rt0 GROUP BY vt1.c3, rt0.c0, rt0.c2, vt1.c1, rt0.c3, vt0.c0, rt0.c1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING NULL UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (NULL)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((NULL) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING NULL UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (NULL)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((NULL) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT TOTAL((((rt1.c2)) NOT BETWEEN (((rt1.c2 IN ()))) AND ((CASE rt1.c2  WHEN rt0.c1 THEN rt1.c2 WHEN rt0.c2 THEN vt0.c0 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c1 END)))) FROM rt1, rt0, vt0;
SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt0, rt1, vt0, vt1;
SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt0, rt1, vt0, vt1 WHERE (CASE WHEN rt1.c0 THEN UPPER(DISTINCT vt1.c2) WHEN ((rt0.c1) NOTNULL) THEN CAST(vt1.c2 AS INTEGER) WHEN ((0X64861c83)|(vt1.c0)) THEN vt1.c1 END) UNION ALL SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt0, rt1, vt0, vt1 WHERE ((NOT (CASE WHEN rt1.c0 THEN UPPER(DISTINCT vt1.c2) WHEN ((rt0.c1) NOTNULL) THEN CAST(vt1.c2 AS INTEGER) WHEN ((0X64861c83)|(vt1.c0)) THEN vt1.c1 END))) UNION ALL SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt0, rt1, vt0, vt1 WHERE (((CASE WHEN rt1.c0 THEN UPPER(DISTINCT vt1.c2) WHEN ((rt0.c1) NOTNULL) THEN CAST(vt1.c2 AS INTEGER) WHEN ((0X64861c83)|(vt1.c0)) THEN vt1.c1 END) ISNULL));
SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt0, rt1, vt0, vt1;
SELECT DISTINCT rt1.c2 FROM rt1;
SELECT DISTINCT rt1.c2 FROM rt1 WHERE ((((rt1.c1)) NOT BETWEEN ((((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c2)))) AND ((((0x15a40210) NOTNULL))))) UNION SELECT DISTINCT rt1.c2 FROM rt1 WHERE ((NOT ((((rt1.c1)) NOT BETWEEN ((((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c2)))) AND ((((0x15a40210) NOTNULL))))))) UNION SELECT DISTINCT rt1.c2 FROM rt1 WHERE ((((((rt1.c1)) NOT BETWEEN ((((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c2)))) AND ((((0X15a40210) NOTNULL))))) ISNULL));
SELECT DISTINCT rt1.c2 FROM rt1;
SELECT ALL vt1.c0 FROM rt1 INNER JOIN vt0 ON (((rt1.c2)) BETWEEN ((((rt0.c1) IS FALSE))) AND (((((vt1.c3, rt0.c3, vt1.c3))<((rt0.c3, rt1.c0, vt1.c1)))))) INNER JOIN rt0 ON ((((((((((vt1.c3)AND(vt1.c3)))OR(vt1.c0)))OR(vt1.c3)))AND(vt0.c0)))==((rt0.c1 IN ()))) INNER JOIN vt1 ON (((rt1.c1) NOT BETWEEN (rt0.c3) AND (vt1.c2)) IN ((NOT (vt1.c3)))) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM rt1 INNER JOIN vt0 ON (((rt1.c2)) BETWEEN ((((rt0.c1) IS FALSE))) AND (((((vt1.c3, rt0.c3, vt1.c3))<((rt0.c3, rt1.c0, vt1.c1)))))) INNER JOIN rt0 ON ((((((((((vt1.c3)AND(vt1.c3)))OR(vt1.c0)))OR(vt1.c3)))AND(vt0.c0)))=((rt0.c1 IN ()))) INNER JOIN vt1 ON (((rt1.c1) NOT BETWEEN (rt0.c3) AND (vt1.c2)) IN ((NOT (vt1.c3)))) WHERE ((+ (CASE vt1.c3  WHEN vt1.c1 THEN NULL WHEN rt1.c0 THEN vt1.c1 WHEN vt0.c0 THEN rt1.c0 END))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM rt1 INNER JOIN vt0 ON (((rt1.c2)) BETWEEN ((((rt0.c1) IS FALSE))) AND (((((vt1.c3, rt0.c3, vt1.c3))<((rt0.c3, rt1.c0, vt1.c1)))))) INNER JOIN rt0 ON ((((((((((vt1.c3)AND(vt1.c3)))OR(vt1.c0)))OR(vt1.c3)))AND(vt0.c0)))==((rt0.c1 IN ()))) INNER JOIN vt1 ON (((rt1.c1) NOT BETWEEN (rt0.c3) AND (vt1.c2)) IN ((NOT (vt1.c3)))) WHERE ((NOT ((+ (CASE vt1.c3  WHEN vt1.c1 THEN NULL WHEN rt1.c0 THEN vt1.c1 WHEN vt0.c0 THEN rt1.c0 END))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM rt1 INNER JOIN vt0 ON (((rt1.c2)) BETWEEN ((((rt0.c1) IS FALSE))) AND (((((vt1.c3, rt0.c3, vt1.c3))<((rt0.c3, rt1.c0, vt1.c1)))))) INNER JOIN rt0 ON ((((((((((vt1.c3)AND(vt1.c3)))OR(vt1.c0)))OR(vt1.c3)))AND(vt0.c0)))=((rt0.c1 IN ()))) INNER JOIN vt1 ON (((rt1.c1) NOT BETWEEN (rt0.c3) AND (vt1.c2)) IN ((NOT (vt1.c3)))) WHERE ((((+ (CASE vt1.c3  WHEN vt1.c1 THEN NULL WHEN rt1.c0 THEN vt1.c1 WHEN vt0.c0 THEN rt1.c0 END))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM rt1 INNER JOIN vt0 ON (((rt1.c2)) BETWEEN ((((rt0.c1) IS FALSE))) AND (((((vt1.c3, rt0.c3, vt1.c3))<((rt0.c3, rt1.c0, vt1.c1)))))) INNER JOIN rt0 ON ((((((((((vt1.c3)AND(vt1.c3)))OR(vt1.c0)))OR(vt1.c3)))AND(vt0.c0)))==((rt0.c1 IN ()))) INNER JOIN vt1 ON (((rt1.c1) NOT BETWEEN (rt0.c3) AND (vt1.c2)) IN ((NOT (vt1.c3)))) GROUP BY vt1.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CASE WHEN GROUP_CONCAT(MIN(vt0.c0)) THEN ((GROUP_CONCAT(x'9f06')) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE (vt0.c0 IN ()) END UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CASE WHEN GROUP_CONCAT(MIN(vt0.c0)) THEN ((GROUP_CONCAT(x'9f06')) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE (vt0.c0 IN ()) END)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CASE WHEN GROUP_CONCAT(MIN(vt0.c0)) THEN ((GROUP_CONCAT(x'9f06')) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE (vt0.c0 IN ()) END) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((((rt0.c2)<(rt0.c0)))&(CAST(0.5444108709677221 AS BLOB)))) ORDER BY (((((rt0.c1, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c0, '-1193285145', rt0.c1)) AND ((rt0.c1, rt0.c3, rt0.c3)))) BETWEEN (CAST(rt0.c1 AS REAL)) AND (rt0.c0))  NULLS LAST;
SELECT * FROM rt0 WHERE ((NOT (((((rt0.c2)<(rt0.c0)))&(CAST(0.5444108709677221 AS BLOB)))))) ORDER BY (((((rt0.c1, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c0, '-1193285145', rt0.c1)) AND ((rt0.c1, rt0.c3, rt0.c3)))) BETWEEN (CAST(rt0.c1 AS REAL)) AND (rt0.c0))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((((((rt0.c2)<(rt0.c0)))&(CAST(0.5444108709677221 AS BLOB)))) ISNULL)) ORDER BY (((((rt0.c1, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c0, '-1193285145', rt0.c1)) AND ((rt0.c1, rt0.c3, rt0.c3)))) BETWEEN (CAST(rt0.c1 AS REAL)) AND (rt0.c0))  NULLS LAST;
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt1, vt1, rt0;
SELECT DISTINCT * FROM rt1, vt1, rt0 WHERE ((((vt1.c0))!=((rt1.c0))) COLLATE RTRIM COLLATE NOCASE) UNION SELECT DISTINCT * FROM rt1, vt1, rt0 WHERE ((NOT ((((vt1.c0))<>((rt1.c0))) COLLATE RTRIM COLLATE NOCASE))) UNION SELECT DISTINCT * FROM rt1, vt1, rt0 WHERE ((((((vt1.c0))!=((rt1.c0))) COLLATE RTRIM COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM rt1, vt1, rt0;
SELECT ALL vt1.c2, rt0.c0, rt0.c2, rt1.c0, rt1.c2, rt0.c3, rt0.c1, rt1.c1, vt1.c1, vt1.c0 FROM vt1, rt1, rt0 GROUP BY vt1.c2, rt0.c0, rt0.c2, rt1.c0, rt1.c2, rt0.c3, rt0.c1, rt1.c1, vt1.c1, vt1.c0;
SELECT ALL vt1.c2, rt0.c0, rt0.c2, rt1.c0, rt1.c2, rt0.c3, rt0.c1, rt1.c1, vt1.c1, vt1.c0 FROM vt1, rt1, rt0 WHERE (DATE((~ (vt1.c1)), CASE WHEN vt1.c2 THEN rt0.c3 END, 'faEi﬙''〫uM')) GROUP BY vt1.c2, rt0.c0, rt0.c2, rt1.c0, rt1.c2, rt0.c3, rt0.c1, rt1.c1, vt1.c1, vt1.c0 UNION SELECT vt1.c2, rt0.c0, rt0.c2, rt1.c0, rt1.c2, rt0.c3, rt0.c1, rt1.c1, vt1.c1, vt1.c0 FROM vt1, rt1, rt0 WHERE ((NOT (DATE((~ (vt1.c1)), CASE WHEN vt1.c2 THEN rt0.c3 END, 'faEi﬙''〫uM')))) GROUP BY vt1.c2, rt0.c0, rt0.c2, rt1.c0, rt1.c2, rt0.c3, rt0.c1, rt1.c1, vt1.c1, vt1.c0 UNION SELECT vt1.c2, rt0.c0, rt0.c2, rt1.c0, rt1.c2, rt0.c3, rt0.c1, rt1.c1, vt1.c1, vt1.c0 FROM vt1, rt1, rt0 WHERE (((DATE((~ (vt1.c1)), CASE WHEN vt1.c2 THEN rt0.c3 END, 'faEi﬙''〫uM')) ISNULL)) GROUP BY vt1.c2, rt0.c0, rt0.c2, rt1.c0, rt1.c2, rt0.c3, rt0.c1, rt1.c1, vt1.c1, vt1.c0;
SELECT ALL vt1.c2, rt0.c0, rt0.c2, rt1.c0, rt1.c2, rt0.c3, rt0.c1, rt1.c1, vt1.c1, vt1.c0 FROM vt1, rt1, rt0 GROUP BY vt1.c2, rt0.c0, rt0.c2, rt1.c0, rt1.c2, rt0.c3, rt0.c1, rt1.c1, vt1.c1, vt1.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING SUM(((vt0.c0)/(SUM(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (SUM(((vt0.c0)/(SUM(vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM(((vt0.c0)/(SUM(vt0.c0))))) ISNULL);
SELECT ALL TOTAL(((CAST(vt0.c0 AS BLOB)) NOTNULL)) FROM vt0 ORDER BY (- (CAST(vt0.c0 AS REAL))), CASE WHEN NULL THEN ((vt0.c0)<=(vt0.c0)) ELSE ((((((((vt0.c0)OR(0Xffffffff8bc840e5)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) END ASC;
SELECT rt1.c1, rt0.c2, rt1.c0, rt1.c2 FROM rt0 CROSS JOIN rt1 ON CAST(((rt0.c0)/(rt1.c0)) AS INTEGER);
SELECT rt1.c1, rt0.c2, rt1.c0, rt1.c2 FROM rt0 CROSS JOIN rt1 ON CAST(((rt0.c0)/(rt1.c0)) AS INTEGER) WHERE (((json_array(rt0.c0, rt0.c1)) NOTNULL)) UNION ALL SELECT rt1.c1, rt0.c2, rt1.c0, rt1.c2 FROM rt0 CROSS JOIN rt1 ON CAST(((rt0.c0)/(rt1.c0)) AS INTEGER) WHERE ((NOT (((json_array(rt0.c0, rt0.c1)) NOTNULL)))) UNION ALL SELECT ALL rt1.c1, rt0.c2, rt1.c0, rt1.c2 FROM rt0 CROSS JOIN rt1 ON CAST(((rt0.c0)/(rt1.c0)) AS INTEGER) WHERE (((((json_array(rt0.c0, rt0.c1)) NOTNULL)) ISNULL));
SELECT rt1.c1, rt0.c2, rt1.c0, rt1.c2 FROM rt0 CROSS JOIN rt1 ON CAST(((rt0.c0)/(rt1.c0)) AS INTEGER);
SELECT DISTINCT * FROM vt1, rt1, vt0 RIGHT OUTER JOIN rt0 ON CASE ((vt1.c3)>>('PW'))  WHEN vt1.c2 THEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN rt1.c0 THEN vt1.c3 WHEN vt0.c0 THEN rt1.c0 ELSE vt1.c2 END ELSE rt0.c0 END;
SELECT DISTINCT * FROM vt1, rt1, vt0 RIGHT OUTER JOIN rt0 ON CASE ((vt1.c3)>>('PW'))  WHEN vt1.c2 THEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN rt1.c0 THEN vt1.c3 WHEN vt0.c0 THEN rt1.c0 ELSE vt1.c2 END ELSE rt0.c0 END WHERE (((0.7553461181262902)GLOB(rt1.c0 COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt1, rt1, vt0 RIGHT OUTER JOIN rt0 ON CASE ((vt1.c3)>>('PW'))  WHEN vt1.c2 THEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN rt1.c0 THEN vt1.c3 WHEN vt0.c0 THEN rt1.c0 ELSE vt1.c2 END ELSE rt0.c0 END WHERE ((NOT (((0.7553461181262902)GLOB(rt1.c0 COLLATE RTRIM))))) UNION SELECT DISTINCT * FROM vt1, rt1, vt0 RIGHT OUTER JOIN rt0 ON CASE ((vt1.c3)>>('PW'))  WHEN vt1.c2 THEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN rt1.c0 THEN vt1.c3 WHEN vt0.c0 THEN rt1.c0 ELSE vt1.c2 END ELSE rt0.c0 END WHERE (((((0.7553461181262902)GLOB(rt1.c0 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT * FROM vt1, rt1, vt0 RIGHT OUTER JOIN rt0 ON CASE ((vt1.c3)>>('PW'))  WHEN vt1.c2 THEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN rt1.c0 THEN vt1.c3 WHEN vt0.c0 THEN rt1.c0 ELSE vt1.c2 END ELSE rt0.c0 END;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((- (((0.17495847879113602)<<(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((- (((0.17495847879113602)<<(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((- (((0.17495847879113602)<<(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2;
SELECT rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2 HAVING TRIM(DISTINCT MIN(rt1.c1), GROUP_CONCAT(rt1.c2)) UNION ALL SELECT rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2 HAVING (NOT (TRIM(DISTINCT MIN(rt1.c1), GROUP_CONCAT(rt1.c2)))) UNION ALL SELECT ALL rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2 HAVING ((TRIM(DISTINCT MIN(rt1.c1), GROUP_CONCAT(rt1.c2))) ISNULL);
SELECT ALL rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2;
SELECT rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2 HAVING TRIM(DISTINCT MIN(rt1.c1), GROUP_CONCAT(rt1.c2)) UNION ALL SELECT rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2 HAVING (NOT (TRIM(DISTINCT MIN(rt1.c1), GROUP_CONCAT(rt1.c2)))) UNION ALL SELECT ALL rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2 HAVING ((TRIM(DISTINCT MIN(rt1.c1), GROUP_CONCAT(rt1.c2))) ISNULL);
SELECT ALL rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2;
SELECT ALL * FROM rt0, vt1;
SELECT ALL * FROM rt0, vt1 WHERE ((TRIM(DISTINCT vt1.c2) IN ())) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE ((NOT ((TRIM(DISTINCT vt1.c2) IN ())))) UNION ALL SELECT * FROM rt0, vt1 WHERE ((((TRIM(DISTINCT vt1.c2) IN ())) ISNULL));
SELECT ALL * FROM rt0, vt1;
SELECT DISTINCT * FROM vt1, rt1, rt0, vt0;
SELECT DISTINCT * FROM vt1, rt1, rt0, vt0 WHERE (CASE vt1.c3  WHEN ((rt1.c2)&(rt0.c0)) THEN rt0.c1 COLLATE BINARY WHEN '766288201' THEN rt0.c0 WHEN ((rt0.c0)LIKE(rt1.c0)) THEN ((rt1.c2)&(vt1.c0)) ELSE ('' IN (rt1.c0)) END) UNION SELECT DISTINCT * FROM vt1, rt1, rt0, vt0 WHERE ((NOT (CASE vt1.c3  WHEN ((rt1.c2)&(rt0.c0)) THEN rt0.c1 COLLATE BINARY WHEN '766288201' THEN rt0.c0 WHEN ((rt0.c0)LIKE(rt1.c0)) THEN ((rt1.c2)&(vt1.c0)) ELSE ('' IN (rt1.c0)) END))) UNION SELECT DISTINCT * FROM vt1, rt1, rt0, vt0 WHERE (((CASE vt1.c3  WHEN ((rt1.c2)&(rt0.c0)) THEN rt0.c1 COLLATE BINARY WHEN '766288201' THEN rt0.c0 WHEN ((rt0.c0)LIKE(rt1.c0)) THEN ((rt1.c2)&(vt1.c0)) ELSE ('' IN (rt1.c0)) END) ISNULL));
SELECT DISTINCT * FROM vt1, rt1, rt0, vt0;
SELECT ALL rt0.c2, vt1.c0, rt0.c3, rt0.c1, vt0.c0 FROM vt1, vt0, rt0 GROUP BY rt0.c2, vt1.c0, rt0.c3, rt0.c1, vt0.c0;
SELECT ALL rt0.c2, vt1.c0, rt0.c3, rt0.c1, vt0.c0 FROM vt1, vt0, rt0 WHERE ((((((vt1.c3))<((rt0.c1)))) NOT BETWEEN (CAST(rt0.c2 AS TEXT)) AND ((rt0.c3 IN ())))) GROUP BY rt0.c2, vt1.c0, rt0.c3, rt0.c1, vt0.c0 UNION SELECT rt0.c2, vt1.c0, rt0.c3, rt0.c1, vt0.c0 FROM vt1, vt0, rt0 WHERE ((NOT ((((((vt1.c3))<((rt0.c1)))) NOT BETWEEN (CAST(rt0.c2 AS TEXT)) AND ((rt0.c3 IN ())))))) GROUP BY rt0.c2, vt1.c0, rt0.c3, rt0.c1, vt0.c0 UNION SELECT rt0.c2, vt1.c0, rt0.c3, rt0.c1, vt0.c0 FROM vt1, vt0, rt0 WHERE ((((((((vt1.c3))<((rt0.c1)))) NOT BETWEEN (CAST(rt0.c2 AS TEXT)) AND ((rt0.c3 IN ())))) ISNULL)) GROUP BY rt0.c2, vt1.c0, rt0.c3, rt0.c1, vt0.c0;
SELECT ALL rt0.c2, vt1.c0, rt0.c3, rt0.c1, vt0.c0 FROM vt1, vt0, rt0 GROUP BY rt0.c2, vt1.c0, rt0.c3, rt0.c1, vt0.c0;
SELECT ALL vt1.c2, rt1.c1, rt0.c2, rt0.c0, vt1.c1, vt1.c0, rt1.c0, rt0.c1, rt1.c2, rt0.c3, vt0.c0, vt1.c3 FROM rt0, rt1, vt0 FULL OUTER JOIN vt1 ON UNLIKELY(DISTINCT (rt0.c2 IN (rt0.c0))) GROUP BY vt1.c2, rt1.c1, rt0.c2, rt0.c0, vt1.c1, vt1.c0, rt1.c0, rt0.c1, rt1.c2, rt0.c3, vt0.c0, vt1.c3;
SELECT vt1.c2, rt1.c1, rt0.c2, rt0.c0, vt1.c1, vt1.c0, rt1.c0, rt0.c1, rt1.c2, rt0.c3, vt0.c0, vt1.c3 FROM rt0, rt1, vt0 FULL OUTER JOIN vt1 ON UNLIKELY(DISTINCT (rt0.c2 IN (rt0.c0))) GROUP BY vt1.c2, rt1.c1, rt0.c2, rt0.c0, vt1.c1, vt1.c0, rt1.c0, rt0.c1, rt1.c2, rt0.c3, vt0.c0, vt1.c3 HAVING (((((rt0.c2) NOT NULL), UPPER(AVG(AVG(TOTAL(GROUP_CONCAT(MIN(vt1.c2)))))), ((rt1.c0) BETWEEN (MAX(vt0.c0)) AND (TOTAL(SUM(SUM(COUNT(rt1.c0)))))), rt0.c2, CAST(rt1.c0 AS TEXT)))==((SUM(rt1.c2), COUNT(*), TOTAL(COUNT(COUNT(*))) COLLATE RTRIM, MIN(COUNT(AVG('-1363195459'))), MAX(MIN(vt1.c2))))) UNION ALL SELECT vt1.c2, rt1.c1, rt0.c2, rt0.c0, vt1.c1, vt1.c0, rt1.c0, rt0.c1, rt1.c2, rt0.c3, vt0.c0, vt1.c3 FROM rt0, rt1, vt0 FULL OUTER JOIN vt1 ON UNLIKELY(DISTINCT (rt0.c2 IN (rt0.c0))) GROUP BY vt1.c2, rt1.c1, rt0.c2, rt0.c0, vt1.c1, vt1.c0, rt1.c0, rt0.c1, rt1.c2, rt0.c3, vt0.c0, vt1.c3 HAVING (NOT ((((((rt0.c2) NOT NULL), UPPER(AVG(AVG(TOTAL(GROUP_CONCAT(MIN(vt1.c2)))))), ((rt1.c0) BETWEEN (MAX(vt0.c0)) AND (TOTAL(SUM(SUM(COUNT(rt1.c0)))))), rt0.c2, CAST(rt1.c0 AS TEXT)))=((SUM(rt1.c2), COUNT(*), TOTAL(COUNT(COUNT(*))) COLLATE RTRIM, MIN(COUNT(AVG('-1363195459'))), MAX(MIN(vt1.c2))))))) UNION ALL SELECT ALL vt1.c2, rt1.c1, rt0.c2, rt0.c0, vt1.c1, vt1.c0, rt1.c0, rt0.c1, rt1.c2, rt0.c3, vt0.c0, vt1.c3 FROM rt0, rt1, vt0 FULL OUTER JOIN vt1 ON UNLIKELY(DISTINCT (rt0.c2 IN (rt0.c0))) GROUP BY vt1.c2, rt1.c1, rt0.c2, rt0.c0, vt1.c1, vt1.c0, rt1.c0, rt0.c1, rt1.c2, rt0.c3, vt0.c0, vt1.c3 HAVING (((((((rt0.c2) NOT NULL), UPPER(AVG(AVG(TOTAL(GROUP_CONCAT(MIN(vt1.c2)))))), ((rt1.c0) BETWEEN (MAX(vt0.c0)) AND (TOTAL(SUM(SUM(COUNT(rt1.c0)))))), rt0.c2, CAST(rt1.c0 AS TEXT)))=((SUM(rt1.c2), COUNT(*), TOTAL(COUNT(COUNT(*))) COLLATE RTRIM, MIN(COUNT(AVG('-1363195459'))), MAX(MIN(vt1.c2)))))) ISNULL);
SELECT ALL vt1.c0, rt1.c1, vt1.c1, rt0.c2 FROM rt1, rt0, vt1, vt0;
SELECT ALL vt1.c0, rt1.c1, vt1.c1, rt0.c2 FROM rt1, rt0, vt1, vt0 WHERE (vt1.c0) UNION ALL SELECT ALL vt1.c0, rt1.c1, vt1.c1, rt0.c2 FROM rt1, rt0, vt1, vt0 WHERE ((NOT (vt1.c0))) UNION ALL SELECT ALL vt1.c0, rt1.c1, vt1.c1, rt0.c2 FROM rt1, rt0, vt1, vt0 WHERE (((vt1.c0) ISNULL));
SELECT ALL vt1.c0, rt1.c1, vt1.c1, rt0.c2 FROM rt1, rt0, vt1, vt0;
SELECT DISTINCT rt1.c2 FROM rt1;
SELECT DISTINCT rt1.c2 FROM rt1 WHERE ((~ (((rt1.c1)>=(rt1.c1))))) UNION SELECT DISTINCT rt1.c2 FROM rt1 WHERE ((NOT ((~ (((rt1.c1)>=(rt1.c1))))))) UNION SELECT DISTINCT rt1.c2 FROM rt1 WHERE ((((~ (((rt1.c1)>=(rt1.c1))))) ISNULL));
SELECT DISTINCT rt1.c2 FROM rt1;
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1 WHERE (0.11083450352002211) GROUP BY rt1.c2 UNION SELECT ALL rt1.c2 FROM rt1 WHERE ((NOT (0.11083450352002211))) GROUP BY rt1.c2 UNION SELECT rt1.c2 FROM rt1 WHERE (((0.11083450352002211) ISNULL)) GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT rt0.c1 FROM rt1 CROSS JOIN rt0 ON ((((-2082077561)OR(((((rt1.c0)OR(rt1.c1)))OR(rt0.c0)))))OR(CASE rt0.c1  WHEN rt1.c0 THEN rt0.c2 END)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt1 CROSS JOIN rt0 ON ((((-2082077561)OR(((((rt1.c0)OR(rt1.c1)))OR(rt0.c0)))))OR(CASE rt0.c1  WHEN rt1.c0 THEN rt0.c2 END)) GROUP BY rt0.c1 HAVING SUM(COUNT(COUNT(MAX(COUNT(*))))) UNION ALL SELECT ALL rt0.c1 FROM rt1 CROSS JOIN rt0 ON ((((-2082077561)OR(((((rt1.c0)OR(rt1.c1)))OR(rt0.c0)))))OR(CASE rt0.c1  WHEN rt1.c0 THEN rt0.c2 END)) GROUP BY rt0.c1 HAVING (NOT (SUM(COUNT(COUNT(MAX(COUNT(*))))))) UNION ALL SELECT rt0.c1 FROM rt1 CROSS JOIN rt0 ON ((((-2082077561)OR(((((rt1.c0)OR(rt1.c1)))OR(rt0.c0)))))OR(CASE rt0.c1  WHEN rt1.c0 THEN rt0.c2 END)) GROUP BY rt0.c1 HAVING ((SUM(COUNT(COUNT(MAX(COUNT(*)))))) ISNULL);
SELECT ALL * FROM rt0, vt0;
SELECT * FROM rt0, vt0 WHERE (CAST('-1741881822' AS BLOB)) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((NOT (CAST('-1741881822' AS BLOB)))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE (((CAST('-1741881822' AS BLOB)) ISNULL));
SELECT ALL * FROM rt0, vt0;
SELECT DISTINCT * FROM vt1 FULL OUTER JOIN rt0 ON CAST((((rt0.c3, 0.6440284844177995, rt0.c1))>=((rt0.c2, vt1.c2, vt0.c0))) AS TEXT) LEFT OUTER JOIN vt0 ON ((((((vt1.c2, rt0.c0, vt0.c0)) NOT BETWEEN ((rt0.c1, vt1.c1, rt0.c2)) AND ((NULL, rt0.c3, vt1.c0)))))!=((((vt1.c1)||(rt0.c0)))));
SELECT ALL vt1.c2 FROM vt1 GROUP BY vt1.c2;
SELECT ALL vt1.c2 FROM vt1 WHERE (CHAR((((vt1.c0)) NOT BETWEEN ((vt1.c3)) AND ((vt1.c3))))) GROUP BY vt1.c2 UNION SELECT ALL vt1.c2 FROM vt1 WHERE ((NOT (CHAR((((vt1.c0)) NOT BETWEEN ((vt1.c3)) AND ((vt1.c3))))))) GROUP BY vt1.c2 UNION SELECT ALL vt1.c2 FROM vt1 WHERE (((CHAR((((vt1.c0)) NOT BETWEEN ((vt1.c3)) AND ((vt1.c3))))) ISNULL)) GROUP BY vt1.c2;
SELECT ALL vt1.c2 FROM vt1 GROUP BY vt1.c2;
SELECT rt1.c0, rt1.c2, rt0.c0 FROM rt0, rt1 GROUP BY rt1.c0, rt1.c2, rt0.c0;
SELECT ALL rt1.c0, rt1.c2, rt0.c0 FROM rt0, rt1 GROUP BY rt1.c0, rt1.c2, rt0.c0 HAVING ((COUNT(COUNT(*)))AND(CAST(SUM(rt0.c0) AS BLOB))) UNION ALL SELECT ALL rt1.c0, rt1.c2, rt0.c0 FROM rt0, rt1 GROUP BY rt1.c0, rt1.c2, rt0.c0 HAVING (NOT (((COUNT(COUNT(*)))AND(CAST(SUM(rt0.c0) AS BLOB))))) UNION ALL SELECT ALL rt1.c0, rt1.c2, rt0.c0 FROM rt0, rt1 GROUP BY rt1.c0, rt1.c2, rt0.c0 HAVING ((((COUNT(COUNT(*)))AND(CAST(SUM(rt0.c0) AS BLOB)))) ISNULL);
SELECT * FROM rt1, rt0 NOT INDEXED, vt0, vt1;
SELECT * FROM rt1, rt0, vt0, vt1 WHERE (((json_valid(rt0.c2))OR(((((((((rt0.c2)OR(0.7999523308641155)))AND(vt1.c2)))OR(vt1.c0)))OR(NULL))))) UNION ALL SELECT ALL * FROM rt1, rt0, vt0, vt1 WHERE ((NOT (((json_valid(rt0.c2))OR(((((((((rt0.c2)OR(0.7999523308641155)))AND(vt1.c2)))OR(vt1.c0)))OR(NULL))))))) UNION ALL SELECT * FROM rt1, rt0, vt0, vt1 WHERE (((((json_valid(rt0.c2))OR(((((((((rt0.c2)OR(0.7999523308641155)))AND(vt1.c2)))OR(vt1.c0)))OR(NULL))))) ISNULL));
SELECT * FROM rt1, rt0 NOT INDEXED, vt0, vt1;
SELECT DISTINCT vt1.c3, vt1.c1, rt1.c1 FROM rt1, vt1, vt0;
SELECT DISTINCT vt1.c3, vt1.c1, rt1.c1 FROM rt1, vt1, vt0 WHERE (CASE WHEN ((rt1.c0)+(vt1.c0)) THEN vt1.c0 COLLATE RTRIM WHEN ((rt1.c2) BETWEEN (vt1.c0) AND (vt1.c1)) THEN (- ('mxm')) WHEN (vt0.c0 IN (rt1.c0)) THEN (((rt1.c1))>=((vt1.c0))) END) UNION SELECT DISTINCT vt1.c3, vt1.c1, rt1.c1 FROM rt1, vt1, vt0 WHERE ((NOT (CASE WHEN ((rt1.c0)+(vt1.c0)) THEN vt1.c0 COLLATE RTRIM WHEN ((rt1.c2) BETWEEN (vt1.c0) AND (vt1.c1)) THEN (- ('mxm')) WHEN (vt0.c0 IN (rt1.c0)) THEN (((rt1.c1))>=((vt1.c0))) END))) UNION SELECT DISTINCT vt1.c3, vt1.c1, rt1.c1 FROM rt1, vt1, vt0 WHERE (((CASE WHEN ((rt1.c0)+(vt1.c0)) THEN vt1.c0 COLLATE RTRIM WHEN ((rt1.c2) BETWEEN (vt1.c0) AND (vt1.c1)) THEN (- ('mxm')) WHEN (vt0.c0 IN (rt1.c0)) THEN (((rt1.c1))>=((vt1.c0))) END) ISNULL));
SELECT DISTINCT vt1.c3, vt1.c1, rt1.c1 FROM rt1, vt1, vt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE ((((rt0.c3)) BETWEEN ((((rt0.c2)=(rt0.c2)))) AND ((CAST(NULL AS BLOB))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c3)) BETWEEN ((((rt0.c2)==(rt0.c2)))) AND ((CAST(NULL AS BLOB))))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((((((rt0.c3)) BETWEEN ((((rt0.c2)=(rt0.c2)))) AND ((CAST(NULL AS BLOB))))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c3 FROM vt0, rt0 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM vt0, rt0 GROUP BY rt0.c3 HAVING ((UNLIKELY(DISTINCT AVG(rt0.c3))) NOT BETWEEN (((TOTAL(MAX(TOTAL(rt0.c2))))LIKE(rt0.c1))) AND ((((rt0.c2)) BETWEEN ((COUNT(COUNT(1676082721)))) AND ((SUM(MAX(AVG(MAX(vt0.c0))))))))) UNION ALL SELECT rt0.c3 FROM vt0, rt0 GROUP BY rt0.c3 HAVING (NOT (((UNLIKELY(DISTINCT AVG(rt0.c3))) NOT BETWEEN (((TOTAL(MAX(TOTAL(rt0.c2))))LIKE(rt0.c1))) AND ((((rt0.c2)) BETWEEN ((COUNT(COUNT(1676082721)))) AND ((SUM(MAX(AVG(MAX(vt0.c0))))))))))) UNION ALL SELECT ALL rt0.c3 FROM vt0, rt0 GROUP BY rt0.c3 HAVING ((((UNLIKELY(DISTINCT AVG(rt0.c3))) NOT BETWEEN (((TOTAL(MAX(TOTAL(rt0.c2))))LIKE(rt0.c1))) AND ((((rt0.c2)) BETWEEN ((COUNT(COUNT(1676082721)))) AND ((SUM(MAX(AVG(MAX(vt0.c0)))))))))) ISNULL);
SELECT vt0.c0, rt0.c2 FROM rt1, rt0, vt0, vt1;
SELECT vt0.c0, rt0.c2 FROM rt1, rt0, vt0, vt1 WHERE (((x'e441') IS TRUE)) UNION ALL SELECT vt0.c0, rt0.c2 FROM rt1, rt0, vt0, vt1 WHERE ((NOT (((x'e441') IS TRUE)))) UNION ALL SELECT vt0.c0, rt0.c2 FROM rt1, rt0, vt0, vt1 WHERE (((((x'e441') IS TRUE)) ISNULL));
SELECT vt0.c0, rt0.c2 FROM rt1, rt0, vt0, vt1;
SELECT DISTINCT vt0.c0, vt1.c0, vt1.c3, rt0.c0, rt0.c3, rt0.c1, rt1.c2, rt0.c2, rt1.c0, vt1.c2, rt1.c1, vt1.c1 FROM vt0 INNER JOIN rt1 ON (((vt1.c3)&(vt1.c3)) IN ()) FULL OUTER JOIN rt0 ON vt0.c0 FULL OUTER JOIN vt1 ON ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt1.c0))) ISNULL);
SELECT DISTINCT vt0.c0, vt1.c0, vt1.c3, rt0.c0, rt0.c3, rt0.c1, rt1.c2, rt0.c2, rt1.c0, vt1.c2, rt1.c1, vt1.c1 FROM vt0 INNER JOIN rt1 ON (((vt1.c3)&(vt1.c3)) IN ()) FULL OUTER JOIN rt0 ON vt0.c0 FULL OUTER JOIN vt1 ON ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt1.c0))) ISNULL) WHERE (((((((vt1.c3)AND(rt0.c0)))OR(rt0.c2)))<((((vt1.c0, rt1.c0, -1.575751978E9)) BETWEEN ((rt1.c0, vt1.c3, vt1.c1)) AND ((rt0.c3, vt1.c1, rt1.c2)))))) UNION SELECT DISTINCT vt0.c0, vt1.c0, vt1.c3, rt0.c0, rt0.c3, rt0.c1, rt1.c2, rt0.c2, rt1.c0, vt1.c2, rt1.c1, vt1.c1 FROM vt0 INNER JOIN rt1 ON (((vt1.c3)&(vt1.c3)) IN ()) FULL OUTER JOIN rt0 ON vt0.c0 FULL OUTER JOIN vt1 ON ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt1.c0))) ISNULL) WHERE ((NOT (((((((vt1.c3)AND(rt0.c0)))OR(rt0.c2)))<((((vt1.c0, rt1.c0, -1.575751978E9)) BETWEEN ((rt1.c0, vt1.c3, vt1.c1)) AND ((rt0.c3, vt1.c1, rt1.c2)))))))) UNION SELECT DISTINCT vt0.c0, vt1.c0, vt1.c3, rt0.c0, rt0.c3, rt0.c1, rt1.c2, rt0.c2, rt1.c0, vt1.c2, rt1.c1, vt1.c1 FROM vt0 INNER JOIN rt1 ON (((vt1.c3)&(vt1.c3)) IN ()) FULL OUTER JOIN rt0 ON vt0.c0 FULL OUTER JOIN vt1 ON ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt1.c0))) ISNULL) WHERE (((((((((vt1.c3)AND(rt0.c0)))OR(rt0.c2)))<((((vt1.c0, rt1.c0, -1.575751978E9)) BETWEEN ((rt1.c0, vt1.c3, vt1.c1)) AND ((rt0.c3, vt1.c1, rt1.c2)))))) ISNULL));
SELECT DISTINCT vt0.c0, vt1.c0, vt1.c3, rt0.c0, rt0.c3, rt0.c1, rt1.c2, rt0.c2, rt1.c0, vt1.c2, rt1.c1, vt1.c1 FROM vt0 INNER JOIN rt1 ON (((vt1.c3)&(vt1.c3)) IN ()) FULL OUTER JOIN rt0 ON vt0.c0 FULL OUTER JOIN vt1 ON ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt1.c0))) ISNULL);
SELECT rt0.c0, vt1.c0, vt1.c2, rt1.c0, vt1.c1, rt0.c3, vt0.c0, rt0.c2, rt1.c1, rt0.c1, rt1.c2 FROM vt1, rt0, rt1, vt0 GROUP BY rt0.c0, vt1.c0, vt1.c2, rt1.c0, vt1.c1, rt0.c3, vt0.c0, rt0.c2, rt1.c1, rt0.c1, rt1.c2;
SELECT ALL rt0.c0, vt1.c0, vt1.c2, rt1.c0, vt1.c1, rt0.c3, vt0.c0, rt0.c2, rt1.c1, rt0.c1, rt1.c2 FROM vt1, rt0, rt1, vt0 WHERE (NULL) GROUP BY rt0.c0, vt1.c0, vt1.c2, rt1.c0, vt1.c1, rt0.c3, vt0.c0, rt0.c2, rt1.c1, rt0.c1, rt1.c2 UNION SELECT rt0.c0, vt1.c0, vt1.c2, rt1.c0, vt1.c1, rt0.c3, vt0.c0, rt0.c2, rt1.c1, rt0.c1, rt1.c2 FROM vt1, rt0, rt1, vt0 WHERE ((NOT (NULL))) GROUP BY rt0.c0, vt1.c0, vt1.c2, rt1.c0, vt1.c1, rt0.c3, vt0.c0, rt0.c2, rt1.c1, rt0.c1, rt1.c2 UNION SELECT rt0.c0, vt1.c0, vt1.c2, rt1.c0, vt1.c1, rt0.c3, vt0.c0, rt0.c2, rt1.c1, rt0.c1, rt1.c2 FROM vt1, rt0, rt1 NOT INDEXED, vt0 WHERE (((NULL) ISNULL)) GROUP BY rt0.c0, vt1.c0, vt1.c2, rt1.c0, vt1.c1, rt0.c3, vt0.c0, rt0.c2, rt1.c1, rt0.c1, rt1.c2;
SELECT rt0.c0, vt1.c0, vt1.c2, rt1.c0, vt1.c1, rt0.c3, vt0.c0, rt0.c2, rt1.c1, rt0.c1, rt1.c2 FROM vt1, rt0, rt1, vt0 GROUP BY rt0.c0, vt1.c0, vt1.c2, rt1.c0, vt1.c1, rt0.c3, vt0.c0, rt0.c2, rt1.c1, rt0.c1, rt1.c2;
SELECT vt1.c0, vt1.c3, vt1.c2 FROM vt1 GROUP BY vt1.c0, vt1.c3, vt1.c2;
SELECT vt1.c0, vt1.c3, vt1.c2 FROM vt1 GROUP BY vt1.c0, vt1.c3, vt1.c2 HAVING CASE WHEN ((GROUP_CONCAT(AVG(TOTAL(SUM(vt1.c0))))) NOT BETWEEN (vt1.c3) AND (TOTAL(COUNT(*)))) THEN SUM(MIN(vt1.c1)) ELSE COUNT(*) END UNION ALL SELECT vt1.c0, vt1.c3, vt1.c2 FROM vt1 GROUP BY vt1.c0, vt1.c3, vt1.c2 HAVING (NOT (CASE WHEN ((GROUP_CONCAT(AVG(TOTAL(SUM(vt1.c0))))) NOT BETWEEN (vt1.c3) AND (TOTAL(COUNT(*)))) THEN SUM(MIN(vt1.c1)) ELSE COUNT(*) END)) UNION ALL SELECT ALL vt1.c0, vt1.c3, vt1.c2 FROM vt1 GROUP BY vt1.c0, vt1.c3, vt1.c2 HAVING ((CASE WHEN ((GROUP_CONCAT(AVG(TOTAL(SUM(vt1.c0))))) NOT BETWEEN (vt1.c3) AND (TOTAL(COUNT(*)))) THEN SUM(MIN(vt1.c1)) ELSE COUNT(*) END) ISNULL);
SELECT ALL vt0.c0, vt1.c0, vt1.c1, vt1.c3 FROM vt1, vt0;
SELECT ALL vt0.c0, vt1.c0, vt1.c1, vt1.c3 FROM vt1, vt0 WHERE ((('116966292') IS FALSE)) UNION ALL SELECT ALL vt0.c0, vt1.c0, vt1.c1, vt1.c3 FROM vt1, vt0 WHERE ((NOT ((('116966292') IS FALSE)))) UNION ALL SELECT ALL vt0.c0, vt1.c0, vt1.c1, vt1.c3 FROM vt1, vt0 WHERE ((((('116966292') IS FALSE)) ISNULL));
SELECT ALL vt0.c0, vt1.c0, vt1.c1, vt1.c3 FROM vt1, vt0;
SELECT DISTINCT rt0.c3, vt1.c0 FROM vt1, rt1 CROSS JOIN vt0 ON (((('[끖l2[')OR(vt1.c0)))OR(LIKELIHOOD(rt0.c2, 0.5384231097632426))) RIGHT OUTER JOIN rt0 ON ((((((((((((CASE rt1.c1  WHEN rt1.c0 THEN '37896850' ELSE rt0.c0 END)AND(TIME(vt1.c3, rt0.c2, rt0.c3, rt1.c2, rt0.c1))))AND(vt0.c0)))OR(UPPER(rt1.c2))))OR(LIKELIHOOD(DISTINCT rt1.c1, 0.7718309932538729))))OR((- (rt1.c0)))))OR((~ (rt1.c2))));
SELECT ALL rt1.c1, rt0.c1, vt0.c0, vt1.c3, rt1.c0, rt0.c3 FROM vt1, rt1, vt0, rt0 GROUP BY rt1.c1, rt0.c1, vt0.c0, vt1.c3, rt1.c0, rt0.c3;
SELECT ALL rt1.c1, rt0.c1, vt0.c0, vt1.c3, rt1.c0, rt0.c3 FROM vt1, rt1, vt0, rt0 WHERE (rt1.c1) GROUP BY rt1.c1, rt0.c1, vt0.c0, vt1.c3, rt1.c0, rt0.c3 UNION SELECT ALL rt1.c1, rt0.c1, vt0.c0, vt1.c3, rt1.c0, rt0.c3 FROM vt1, rt1, vt0, rt0 WHERE ((NOT (rt1.c1))) GROUP BY rt1.c1, rt0.c1, vt0.c0, vt1.c3, rt1.c0, rt0.c3 UNION SELECT rt1.c1, rt0.c1, vt0.c0, vt1.c3, rt1.c0, rt0.c3 FROM vt1, rt1, vt0, rt0 WHERE (((rt1.c1) ISNULL)) GROUP BY rt1.c1, rt0.c1, vt0.c0, vt1.c3, rt1.c0, rt0.c3;
SELECT ALL rt1.c1, rt0.c1, vt0.c0, vt1.c3, rt1.c0, rt0.c3 FROM vt1, rt1, vt0, rt0 GROUP BY rt1.c1, rt0.c1, vt0.c0, vt1.c3, rt1.c0, rt0.c3;
SELECT ALL rt0.c0, vt1.c0, rt1.c2, rt1.c0, rt1.c1, vt1.c1, rt0.c3, vt1.c2, vt1.c3, rt0.c1 FROM vt1, rt1, rt0 GROUP BY rt0.c0, vt1.c0, rt1.c2, rt1.c0, rt1.c1, vt1.c1, rt0.c3, vt1.c2, vt1.c3, rt0.c1;
SELECT rt0.c0, vt1.c0, rt1.c2, rt1.c0, rt1.c1, vt1.c1, rt0.c3, vt1.c2, vt1.c3, rt0.c1 FROM vt1, rt1, rt0 GROUP BY rt0.c0, vt1.c0, rt1.c2, rt1.c0, rt1.c1, vt1.c1, rt0.c3, vt1.c2, vt1.c3, rt0.c1 HAVING (NOT (((SUM(MIN(rt0.c3))) NOT NULL))) UNION ALL SELECT rt0.c0, vt1.c0, rt1.c2, rt1.c0, rt1.c1, vt1.c1, rt0.c3, vt1.c2, vt1.c3, rt0.c1 FROM vt1, rt1, rt0 GROUP BY rt0.c0, vt1.c0, rt1.c2, rt1.c0, rt1.c1, vt1.c1, rt0.c3, vt1.c2, vt1.c3, rt0.c1 HAVING (NOT ((NOT (((SUM(MIN(rt0.c3))) NOT NULL))))) UNION ALL SELECT ALL rt0.c0, vt1.c0, rt1.c2, rt1.c0, rt1.c1, vt1.c1, rt0.c3, vt1.c2, vt1.c3, rt0.c1 FROM vt1, rt1, rt0 GROUP BY rt0.c0, vt1.c0, rt1.c2, rt1.c0, rt1.c1, vt1.c1, rt0.c3, vt1.c2, vt1.c3, rt0.c1 HAVING (((NOT (((SUM(MIN(rt0.c3))) NOT NULL)))) ISNULL);
SELECT ALL rt0.c0 FROM rt0;
SELECT ALL rt0.c0 FROM rt0 WHERE ((((((((((rt0.c0 IN (rt0.c2)))AND('-427859495')))AND(SUBSTR(rt0.c3, rt0.c2))))AND(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c3)))))AND(((((rt0.c3)AND(rt0.c2)))AND(rt0.c1))))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE ((NOT ((((((((((rt0.c0 IN (rt0.c2)))AND('-427859495')))AND(SUBSTR(rt0.c3, rt0.c2))))AND(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c3)))))AND(((((rt0.c3)AND(rt0.c2)))AND(rt0.c1))))))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE ((((((((((((rt0.c0 IN (rt0.c2)))AND('-427859495')))AND(SUBSTR(rt0.c3, rt0.c2))))AND(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c3)))))AND(((((rt0.c3)AND(rt0.c2)))AND(rt0.c1))))) ISNULL));
SELECT ALL rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0, vt1, rt1;
SELECT DISTINCT * FROM rt0, vt1, rt1 WHERE ((((((rt0.c3)OR(rt0.c2)))AND(rt0.c2)) IN ((- (vt1.c0))))) UNION SELECT DISTINCT * FROM rt0, vt1, rt1 WHERE ((NOT ((((((rt0.c3)OR(rt0.c2)))AND(rt0.c2)) IN ((- (vt1.c0))))))) UNION SELECT DISTINCT * FROM rt0, vt1, rt1 WHERE ((((((((rt0.c3)OR(rt0.c2)))AND(rt0.c2)) IN ((- (vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt1, rt1;
SELECT ALL rt1.c1, rt0.c2, rt0.c0, vt1.c2, vt1.c3, vt1.c0, rt1.c0 FROM rt0 INNER JOIN rt1 ON (((~ (vt1.c1)))|(CAST(vt1.c1 AS INTEGER))) RIGHT OUTER JOIN vt0 ON ((((('', vt0.c0, vt1.c2))<((rt1.c1, rt1.c2, vt1.c1)))) NOT BETWEEN (((rt1.c0)==(x'05f6'))) AND (((rt0.c1) NOTNULL))) RIGHT OUTER JOIN vt1 ON (((CAST(rt0.c1 AS INTEGER), (((vt1.c2))<=((rt1.c2))), CASE WHEN rt0.c3 THEN NULL ELSE rt1.c1 END))>=((((rt0.c2) ISNULL), rt0.c0, 0.055959150055751916))) GROUP BY rt1.c1, rt0.c2, rt0.c0, vt1.c2, vt1.c3, vt1.c0, rt1.c0;
SELECT ALL vt1.c0, rt0.c2, rt0.c3, vt0.c0, vt1.c1, vt1.c2, rt1.c1, vt1.c3, rt0.c0, rt1.c2, rt0.c1, rt1.c0 FROM rt1, vt0, vt1, rt0 GROUP BY vt1.c0, rt0.c2, rt0.c3, vt0.c0, vt1.c1, vt1.c2, rt1.c1, vt1.c3, rt0.c0, rt1.c2, rt0.c1, rt1.c0;
SELECT vt1.c0, rt0.c2, rt0.c3, vt0.c0, vt1.c1, vt1.c2, rt1.c1, vt1.c3, rt0.c0, rt1.c2, rt0.c1, rt1.c0 FROM rt1, vt0, vt1, rt0 GROUP BY vt1.c0, rt0.c2, rt0.c3, vt0.c0, vt1.c1, vt1.c2, rt1.c1, vt1.c3, rt0.c0, rt1.c2, rt0.c1, rt1.c0 HAVING MAX(TOTAL(AVG(0.6469232351910551))) UNION ALL SELECT vt1.c0, rt0.c2, rt0.c3, vt0.c0, vt1.c1, vt1.c2, rt1.c1, vt1.c3, rt0.c0, rt1.c2, rt0.c1, rt1.c0 FROM rt1, vt0, vt1, rt0 GROUP BY vt1.c0, rt0.c2, rt0.c3, vt0.c0, vt1.c1, vt1.c2, rt1.c1, vt1.c3, rt0.c0, rt1.c2, rt0.c1, rt1.c0 HAVING (NOT (MAX(TOTAL(AVG(0.6469232351910551))))) UNION ALL SELECT ALL vt1.c0, rt0.c2, rt0.c3, vt0.c0, vt1.c1, vt1.c2, rt1.c1, vt1.c3, rt0.c0, rt1.c2, rt0.c1, rt1.c0 FROM rt1, vt0, vt1, rt0 GROUP BY vt1.c0, rt0.c2, rt0.c3, vt0.c0, vt1.c1, vt1.c2, rt1.c1, vt1.c3, rt0.c0, rt1.c2, rt0.c1, rt1.c0 HAVING ((MAX(TOTAL(AVG(0.6469232351910551)))) ISNULL);
SELECT vt1.c2, vt1.c3, vt1.c0 FROM vt1;
SELECT ALL vt1.c2, vt1.c3, vt1.c0 FROM vt1 WHERE (vt1.c1) UNION ALL SELECT ALL vt1.c2, vt1.c3, vt1.c0 FROM vt1 WHERE ((NOT (vt1.c1))) UNION ALL SELECT vt1.c2, vt1.c3, vt1.c0 FROM vt1 WHERE (((vt1.c1) ISNULL));
SELECT vt1.c2, vt1.c3, vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE ((((vt1.c2, vt1.c2, vt1.c3)) NOT BETWEEN ((COALESCE(vt1.c3, vt1.c0, vt1.c2, vt1.c0), ((((((((vt1.c2)AND(vt1.c2)))OR('\n\r+Bt\55x')))AND(vt1.c0)))AND(x'')), x'')) AND ((((((vt1.c3)OR(-2.13283106E8)))AND(NULL)), ((((vt1.c0)AND(vt0.c0)))AND(vt1.c3)), (- (vt0.c0)))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT ((((vt1.c2, vt1.c2, vt1.c3)) NOT BETWEEN ((COALESCE(vt1.c3, vt1.c0, vt1.c2, vt1.c0), ((((((((vt1.c2)AND(vt1.c2)))OR('\n\r+Bt\55x')))AND(vt1.c0)))AND(x'')), x'')) AND ((((((vt1.c3)OR(-2.13283106E8)))AND(NULL)), ((((vt1.c0)AND(vt0.c0)))AND(vt1.c3)), (- (vt0.c0)))))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((((((vt1.c2, vt1.c2, vt1.c3)) NOT BETWEEN ((COALESCE(vt1.c3, vt1.c0, vt1.c2, vt1.c0), ((((((((vt1.c2)AND(vt1.c2)))OR('\n\r+Bt\55x')))AND(vt1.c0)))AND(x'')), x'')) AND ((((((vt1.c3)OR(-2.13283106E8)))AND(NULL)), ((((vt1.c0)AND(vt0.c0)))AND(vt1.c3)), (- (vt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT vt1.c0, rt1.c2, rt1.c0, vt1.c2, rt0.c0, vt0.c0, rt0.c2, rt0.c3 FROM rt1, rt0, vt0, vt1 GROUP BY vt1.c0, rt1.c2, rt1.c0, vt1.c2, rt0.c0, vt0.c0, rt0.c2, rt0.c3;
SELECT ALL vt1.c0, rt1.c2, rt1.c0, vt1.c2, rt0.c0, vt0.c0, rt0.c2, rt0.c3 FROM rt1, rt0, vt0, vt1 WHERE (((((((rt0.c1)OR(rt0.c3)))OR(rt0.c3)))&(rt1.c2))) GROUP BY vt1.c0, rt1.c2, rt1.c0, vt1.c2, rt0.c0, vt0.c0, rt0.c2, rt0.c3 UNION SELECT vt1.c0, rt1.c2, rt1.c0, vt1.c2, rt0.c0, vt0.c0, rt0.c2, rt0.c3 FROM rt1, rt0, vt0, vt1 WHERE ((NOT (((((((rt0.c1)OR(rt0.c3)))OR(rt0.c3)))&(rt1.c2))))) GROUP BY vt1.c0, rt1.c2, rt1.c0, vt1.c2, rt0.c0, vt0.c0, rt0.c2, rt0.c3 UNION SELECT vt1.c0, rt1.c2, rt1.c0, vt1.c2, rt0.c0, vt0.c0, rt0.c2, rt0.c3 FROM rt1, rt0, vt0, vt1 WHERE (((((((((rt0.c1)OR(rt0.c3)))OR(rt0.c3)))&(rt1.c2))) ISNULL)) GROUP BY vt1.c0, rt1.c2, rt1.c0, vt1.c2, rt0.c0, vt0.c0, rt0.c2, rt0.c3;
SELECT vt1.c0, rt1.c2, rt1.c0, vt1.c2, rt0.c0, vt0.c0, rt0.c2, rt0.c3 FROM rt1, rt0, vt0, vt1 GROUP BY vt1.c0, rt1.c2, rt1.c0, vt1.c2, rt0.c0, vt0.c0, rt0.c2, rt0.c3;
SELECT vt1.c0, vt1.c3, vt1.c2 FROM vt0, vt1 RIGHT OUTER JOIN rt1 ON (+ (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) GROUP BY vt1.c0, vt1.c3, vt1.c2;
SELECT ALL vt1.c0, vt1.c3, vt1.c2 FROM vt0, vt1 RIGHT OUTER JOIN rt1 ON (+ (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) GROUP BY vt1.c0, vt1.c3, vt1.c2 HAVING COUNT(*) UNION ALL SELECT vt1.c0, vt1.c3, vt1.c2 FROM vt0, vt1 RIGHT OUTER JOIN rt1 ON (+ (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) GROUP BY vt1.c0, vt1.c3, vt1.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0, vt1.c3, vt1.c2 FROM vt0, vt1 RIGHT OUTER JOIN rt1 ON (+ (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) GROUP BY vt1.c0, vt1.c3, vt1.c2 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0, vt1.c3, vt1.c2 FROM vt0, vt1 RIGHT OUTER JOIN rt1 ON (+ (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) GROUP BY vt1.c0, vt1.c3, vt1.c2;
SELECT ALL vt1.c0, vt1.c3, vt1.c2 FROM vt0, vt1 RIGHT OUTER JOIN rt1 ON (+ (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) GROUP BY vt1.c0, vt1.c3, vt1.c2 HAVING COUNT(*) UNION ALL SELECT vt1.c0, vt1.c3, vt1.c2 FROM vt0, vt1 RIGHT OUTER JOIN rt1 ON (+ (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) GROUP BY vt1.c0, vt1.c3, vt1.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0, vt1.c3, vt1.c2 FROM vt0, vt1 RIGHT OUTER JOIN rt1 ON (+ (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) GROUP BY vt1.c0, vt1.c3, vt1.c2 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0, vt1.c3, vt1.c2 FROM vt0, vt1 RIGHT OUTER JOIN rt1 ON (+ (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) GROUP BY vt1.c0, vt1.c3, vt1.c2;
SELECT ALL rt1.c0, rt1.c1 FROM rt1;
SELECT ALL rt1.c0, rt1.c1 FROM rt1 WHERE (1500180595) UNION ALL SELECT ALL rt1.c0, rt1.c1 FROM rt1 WHERE ((NOT (1500180595))) UNION ALL SELECT ALL rt1.c0, rt1.c1 FROM rt1 WHERE (((1500180595) ISNULL));
SELECT ALL rt1.c0, rt1.c1 FROM rt1;
SELECT DISTINCT * FROM rt1, vt0 NATURAL JOIN rt0;
SELECT DISTINCT * FROM rt1, vt0 NATURAL JOIN rt0 WHERE (((((rt1.c2)*(rt0.c2)))OR('<mL27_'))) UNION SELECT DISTINCT * FROM rt1, vt0 NATURAL JOIN rt0 WHERE ((NOT (((((rt1.c2)*(rt0.c2)))OR('<mL27_'))))) UNION SELECT DISTINCT * FROM rt1, vt0 NATURAL JOIN rt0 WHERE (((((((rt1.c2)*(rt0.c2)))OR('<mL27_'))) ISNULL));
SELECT DISTINCT * FROM rt1, vt0 NATURAL JOIN rt0;
SELECT ALL rt1.c1, rt1.c2, rt0.c0, rt1.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0, vt0, rt1 GROUP BY rt1.c1, rt1.c2, rt0.c0, rt1.c0, rt0.c2, rt0.c1, rt0.c3;
SELECT rt1.c1, rt1.c2, rt0.c0, rt1.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0, vt0, rt1 WHERE (CASE 0.15210956937303233  WHEN LIKELIHOOD(DISTINCT rt0.c3, 0.8564757958059654) THEN ((((((((rt0.c1)AND(rt0.c0)))AND(rt1.c1)))AND(rt0.c1)))OR(vt0.c0)) ELSE 1189313384 END) GROUP BY rt1.c1, rt1.c2, rt0.c0, rt1.c0, rt0.c2, rt0.c1, rt0.c3 UNION SELECT rt1.c1, rt1.c2, rt0.c0, rt1.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0, vt0, rt1 WHERE ((NOT (CASE 0.15210956937303233  WHEN LIKELIHOOD(DISTINCT rt0.c3, 0.8564757958059654) THEN ((((((((rt0.c1)AND(rt0.c0)))AND(rt1.c1)))AND(rt0.c1)))OR(vt0.c0)) ELSE 1189313384 END))) GROUP BY rt1.c1, rt1.c2, rt0.c0, rt1.c0, rt0.c2, rt0.c1, rt0.c3 UNION SELECT ALL rt1.c1, rt1.c2, rt0.c0, rt1.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0, vt0, rt1 WHERE (((CASE 0.15210956937303233  WHEN LIKELIHOOD(DISTINCT rt0.c3, 0.8564757958059654) THEN ((((((((rt0.c1)AND(rt0.c0)))AND(rt1.c1)))AND(rt0.c1)))OR(vt0.c0)) ELSE 1189313384 END) ISNULL)) GROUP BY rt1.c1, rt1.c2, rt0.c0, rt1.c0, rt0.c2, rt0.c1, rt0.c3;
SELECT ALL rt1.c1, rt1.c2, rt0.c0, rt1.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0, vt0, rt1 GROUP BY rt1.c1, rt1.c2, rt0.c0, rt1.c0, rt0.c2, rt0.c1, rt0.c3;
SELECT vt1.c3 FROM rt1, vt1 GROUP BY vt1.c3;
SELECT vt1.c3 FROM rt1, vt1 GROUP BY vt1.c3 HAVING COUNT(((GROUP_CONCAT(AVG(MIN(GROUP_CONCAT(GROUP_CONCAT(SUM(vt1.c3)))))))AND(NULL))) UNION ALL SELECT ALL vt1.c3 FROM rt1, vt1 GROUP BY vt1.c3 HAVING (NOT (COUNT(((GROUP_CONCAT(AVG(MIN(GROUP_CONCAT(GROUP_CONCAT(SUM(vt1.c3)))))))AND(NULL))))) UNION ALL SELECT vt1.c3 FROM rt1, vt1 GROUP BY vt1.c3 HAVING ((COUNT(((GROUP_CONCAT(AVG(MIN(GROUP_CONCAT(GROUP_CONCAT(SUM(vt1.c3)))))))AND(NULL)))) ISNULL);
SELECT ALL rt1.c2, rt1.c1, vt1.c3, rt0.c1, rt0.c2, rt0.c3, rt0.c0, vt1.c1, rt1.c0, vt0.c0, vt1.c2, vt1.c0 FROM rt0, vt1, vt0, rt1;
SELECT ALL rt1.c2, rt1.c1, vt1.c3, rt0.c1, rt0.c2, rt0.c3, rt0.c0, vt1.c1, rt1.c0, vt0.c0, vt1.c2, vt1.c0 FROM rt0, vt1, vt0, rt1 WHERE (((((((rt0.c1)OR(rt0.c0)))AND(vt1.c0))) ISNULL)) UNION ALL SELECT rt1.c2, rt1.c1, vt1.c3, rt0.c1, rt0.c2, rt0.c3, rt0.c0, vt1.c1, rt1.c0, vt0.c0, vt1.c2, vt1.c0 FROM rt0, vt1, vt0, rt1 WHERE ((NOT (((((((rt0.c1)OR(rt0.c0)))AND(vt1.c0))) ISNULL)))) UNION ALL SELECT ALL rt1.c2, rt1.c1, vt1.c3, rt0.c1, rt0.c2, rt0.c3, rt0.c0, vt1.c1, rt1.c0, vt0.c0, vt1.c2, vt1.c0 FROM rt0, vt1, vt0, rt1 WHERE (((((((((rt0.c1)OR(rt0.c0)))AND(vt1.c0))) ISNULL)) ISNULL));
SELECT ALL rt1.c2, rt1.c1, vt1.c3, rt0.c1, rt0.c2, rt0.c3, rt0.c0, vt1.c1, rt1.c0, vt0.c0, vt1.c2, vt1.c0 FROM rt0, vt1, vt0, rt1;
SELECT DISTINCT rt1.c2, vt1.c3, vt1.c2, rt1.c0, rt0.c0, rt0.c3, rt0.c1, vt1.c0, vt1.c1 FROM rt0, rt1, vt1, vt0;
SELECT DISTINCT rt1.c2, vt1.c3, vt1.c2, rt1.c0, rt0.c0, rt0.c3, rt0.c1, vt1.c0, vt1.c1 FROM rt0, rt1, vt1, vt0 WHERE ((((((vt1.c3))<((rt0.c1)))) BETWEEN (((rt0.c1)|(vt1.c1))) AND (UNLIKELY(x'f68ba7ac')))) UNION SELECT DISTINCT rt1.c2, vt1.c3, vt1.c2, rt1.c0, rt0.c0, rt0.c3, rt0.c1, vt1.c0, vt1.c1 FROM rt0, rt1, vt1, vt0 WHERE ((NOT ((((((vt1.c3))<((rt0.c1)))) BETWEEN (((rt0.c1)|(vt1.c1))) AND (UNLIKELY(x'f68ba7ac')))))) UNION SELECT DISTINCT rt1.c2, vt1.c3, vt1.c2, rt1.c0, rt0.c0, rt0.c3, rt0.c1, vt1.c0, vt1.c1 FROM rt0, rt1, vt1, vt0 WHERE ((((((((vt1.c3))<((rt0.c1)))) BETWEEN (((rt0.c1)|(vt1.c1))) AND (UNLIKELY(x'f68ba7ac')))) ISNULL));
SELECT DISTINCT rt1.c2, vt1.c3, vt1.c2, rt1.c0, rt0.c0, rt0.c3, rt0.c1, vt1.c0, vt1.c1 FROM rt0, rt1, vt1, vt0;
SELECT ALL vt1.c2, rt1.c0, rt1.c1, vt1.c3, vt1.c1, vt1.c0, rt1.c2 FROM rt1 FULL OUTER JOIN vt1 ON vt1.c1 GROUP BY vt1.c2, rt1.c0, rt1.c1, vt1.c3, vt1.c1, vt1.c0, rt1.c2;
SELECT ALL vt1.c2, rt1.c0, rt1.c1, vt1.c3, vt1.c1, vt1.c0, rt1.c2 FROM rt1 FULL OUTER JOIN vt1 ON vt1.c1 WHERE (rt1.c0) GROUP BY vt1.c2, rt1.c0, rt1.c1, vt1.c3, vt1.c1, vt1.c0, rt1.c2 UNION SELECT vt1.c2, rt1.c0, rt1.c1, vt1.c3, vt1.c1, vt1.c0, rt1.c2 FROM rt1 FULL OUTER JOIN vt1 ON vt1.c1 WHERE ((NOT (rt1.c0))) GROUP BY vt1.c2, rt1.c0, rt1.c1, vt1.c3, vt1.c1, vt1.c0, rt1.c2 UNION SELECT ALL vt1.c2, rt1.c0, rt1.c1, vt1.c3, vt1.c1, vt1.c0, rt1.c2 FROM rt1 FULL OUTER JOIN vt1 ON vt1.c1 WHERE (((rt1.c0) ISNULL)) GROUP BY vt1.c2, rt1.c0, rt1.c1, vt1.c3, vt1.c1, vt1.c0, rt1.c2;
SELECT ALL vt1.c2, rt1.c0, rt1.c1, vt1.c3, vt1.c1, vt1.c0, rt1.c2 FROM rt1 FULL OUTER JOIN vt1 ON vt1.c1 GROUP BY vt1.c2, rt1.c0, rt1.c1, vt1.c3, vt1.c1, vt1.c0, rt1.c2;
SELECT ALL rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0;
SELECT ALL rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0 HAVING COUNT((rt1.c2 IN ())) UNION ALL SELECT ALL rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0 HAVING (NOT (COUNT((rt1.c2 IN ())))) UNION ALL SELECT ALL rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0 HAVING ((COUNT((rt1.c2 IN ()))) ISNULL);
SELECT ALL rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0;
SELECT ALL rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0 HAVING COUNT((rt1.c2 IN ())) UNION ALL SELECT ALL rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0 HAVING (NOT (COUNT((rt1.c2 IN ())))) UNION ALL SELECT ALL rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0 HAVING ((COUNT((rt1.c2 IN ()))) ISNULL);
SELECT ALL rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0;
SELECT ALL vt0.c0, rt1.c2, rt1.c0 FROM vt0, rt1 NOT INDEXED;
SELECT vt0.c0, rt1.c2, rt1.c0 FROM vt0, rt1 WHERE (IFNULL(DISTINCT ((vt0.c0)=(0.635297498704376)), ((rt1.c0) BETWEEN (vt0.c0) AND (x'')))) UNION ALL SELECT ALL vt0.c0, rt1.c2, rt1.c0 FROM vt0, rt1 WHERE ((NOT (IFNULL(DISTINCT ((vt0.c0)==(0.635297498704376)), ((rt1.c0) BETWEEN (vt0.c0) AND (x'')))))) UNION ALL SELECT ALL vt0.c0, rt1.c2, rt1.c0 FROM vt0, rt1 WHERE (((IFNULL(DISTINCT ((vt0.c0)==(0.635297498704376)), ((rt1.c0) BETWEEN (vt0.c0) AND (x'')))) ISNULL));
SELECT ALL vt0.c0, rt1.c2, rt1.c0 FROM vt0, rt1 NOT INDEXED;
SELECT DISTINCT vt1.c0, vt1.c1, vt1.c3, rt1.c0, rt1.c2, rt1.c1, rt0.c1, vt1.c2, vt0.c0, rt0.c0, rt0.c2, rt0.c3 FROM rt0, rt1, vt1, vt0;
SELECT DISTINCT vt1.c0, vt1.c1, vt1.c3, rt1.c0, rt1.c2, rt1.c1, rt0.c1, vt1.c2, vt0.c0, rt0.c0, rt0.c2, rt0.c3 FROM rt0, rt1, vt1, vt0 WHERE (((((vt1.c2) BETWEEN (rt1.c2) AND (rt1.c0)))GLOB(((rt0.c3) BETWEEN (vt0.c0) AND (vt1.c2))))) UNION SELECT DISTINCT vt1.c0, vt1.c1, vt1.c3, rt1.c0, rt1.c2, rt1.c1, rt0.c1, vt1.c2, vt0.c0, rt0.c0, rt0.c2, rt0.c3 FROM rt0, rt1, vt1, vt0 WHERE ((NOT (((((vt1.c2) BETWEEN (rt1.c2) AND (rt1.c0)))GLOB(((rt0.c3) BETWEEN (vt0.c0) AND (vt1.c2))))))) UNION SELECT DISTINCT vt1.c0, vt1.c1, vt1.c3, rt1.c0, rt1.c2, rt1.c1, rt0.c1, vt1.c2, vt0.c0, rt0.c0, rt0.c2, rt0.c3 FROM rt0, rt1, vt1, vt0 WHERE (((((((vt1.c2) BETWEEN (rt1.c2) AND (rt1.c0)))GLOB(((rt0.c3) BETWEEN (vt0.c0) AND (vt1.c2))))) ISNULL));
SELECT DISTINCT vt1.c0, vt1.c1, vt1.c3, rt1.c0, rt1.c2, rt1.c1, rt0.c1, vt1.c2, vt0.c0, rt0.c0, rt0.c2, rt0.c3 FROM rt0, rt1, vt1, vt0;
SELECT ALL rt0.c0, rt0.c2, rt0.c3, vt0.c0, rt0.c1 FROM rt0 CROSS JOIN vt0 ON ((((CASE rt0.c0  WHEN vt0.c0 THEN rt0.c2 ELSE vt0.c0 END)AND(rt0.c0)))AND(((rt0.c1)>>(rt0.c0)))) GROUP BY rt0.c0, rt0.c2, rt0.c3, vt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c3, vt0.c0, rt0.c1 FROM rt0 CROSS JOIN vt0 ON ((((CASE rt0.c0  WHEN vt0.c0 THEN rt0.c2 ELSE vt0.c0 END)AND(rt0.c0)))AND(((rt0.c1)>>(rt0.c0)))) WHERE (((((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))) BETWEEN (CAST(rt0.c3 AS INTEGER)) AND ((('-1403210322')>>(rt0.c1))))) GROUP BY rt0.c0, rt0.c2, rt0.c3, vt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c3, vt0.c0, rt0.c1 FROM rt0 CROSS JOIN vt0 ON ((((CASE rt0.c0  WHEN vt0.c0 THEN rt0.c2 ELSE vt0.c0 END)AND(rt0.c0)))AND(((rt0.c1)>>(rt0.c0)))) WHERE ((NOT (((((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))) BETWEEN (CAST(rt0.c3 AS INTEGER)) AND ((('-1403210322')>>(rt0.c1))))))) GROUP BY rt0.c0, rt0.c2, rt0.c3, vt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c3, vt0.c0, rt0.c1 FROM rt0 CROSS JOIN vt0 ON ((((CASE rt0.c0  WHEN vt0.c0 THEN rt0.c2 ELSE vt0.c0 END)AND(rt0.c0)))AND(((rt0.c1)>>(rt0.c0)))) WHERE (((((((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))) BETWEEN (CAST(rt0.c3 AS INTEGER)) AND ((('-1403210322')>>(rt0.c1))))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c3, vt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c3, vt0.c0, rt0.c1 FROM rt0 CROSS JOIN vt0 ON ((((CASE rt0.c0  WHEN vt0.c0 THEN rt0.c2 ELSE vt0.c0 END)AND(rt0.c0)))AND(((rt0.c1)>>(rt0.c0)))) GROUP BY rt0.c0, rt0.c2, rt0.c3, vt0.c0, rt0.c1;
SELECT rt0.c3, rt0.c1, rt0.c0 FROM rt0 INNER JOIN vt0 ON CAST(rt0.c2 AS TEXT) GROUP BY rt0.c3, rt0.c1, rt0.c0;
SELECT ALL rt0.c3, rt0.c1, rt0.c0 FROM rt0 INNER JOIN vt0 ON CAST(rt0.c2 AS TEXT) GROUP BY rt0.c3, rt0.c1, rt0.c0 HAVING COUNT(AVG(vt0.c0)) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c0 FROM rt0 INNER JOIN vt0 ON CAST(rt0.c2 AS TEXT) GROUP BY rt0.c3, rt0.c1, rt0.c0 HAVING (NOT (COUNT(AVG(vt0.c0)))) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c0 FROM rt0 INNER JOIN vt0 ON CAST(rt0.c2 AS TEXT) GROUP BY rt0.c3, rt0.c1, rt0.c0 HAVING ((COUNT(AVG(vt0.c0))) ISNULL);
SELECT rt0.c3, vt1.c3, rt1.c1, vt1.c1, rt1.c2, vt1.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt1, rt1;
SELECT rt0.c3, vt1.c3, rt1.c1, vt1.c1, rt1.c2, vt1.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt1, rt1 WHERE (vt1.c3) UNION ALL SELECT ALL rt0.c3, vt1.c3, rt1.c1, vt1.c1, rt1.c2, vt1.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt1, rt1 WHERE ((NOT (vt1.c3))) UNION ALL SELECT rt0.c3, vt1.c3, rt1.c1, vt1.c1, rt1.c2, vt1.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt1, rt1 WHERE (((vt1.c3) ISNULL));
SELECT rt0.c3, vt1.c3, rt1.c1, vt1.c1, rt1.c2, vt1.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt1, rt1;
SELECT DISTINCT vt1.c0, rt0.c0, vt0.c0, vt1.c2, rt1.c0, rt1.c1, rt0.c2, rt0.c3 FROM vt1, rt0 CROSS JOIN vt0 ON 'v헏' RIGHT OUTER JOIN rt1 ON vt1.c1;
SELECT DISTINCT vt1.c0, rt0.c0, vt0.c0, vt1.c2, rt1.c0, rt1.c1, rt0.c2, rt0.c3 FROM vt1, rt0 CROSS JOIN vt0 ON 'v헏' RIGHT OUTER JOIN rt1 ON vt1.c1 WHERE (json_quote(((rt1.c2)|(rt0.c1)))) UNION SELECT DISTINCT vt1.c0, rt0.c0, vt0.c0, vt1.c2, rt1.c0, rt1.c1, rt0.c2, rt0.c3 FROM vt1, rt0 CROSS JOIN vt0 ON 'v헏' RIGHT OUTER JOIN rt1 ON vt1.c1 WHERE ((NOT (json_quote(((rt1.c2)|(rt0.c1)))))) UNION SELECT DISTINCT vt1.c0, rt0.c0, vt0.c0, vt1.c2, rt1.c0, rt1.c1, rt0.c2, rt0.c3 FROM vt1, rt0 CROSS JOIN vt0 ON 'v헏' RIGHT OUTER JOIN rt1 ON vt1.c1 WHERE (((json_quote(((rt1.c2)|(rt0.c1)))) ISNULL));
SELECT DISTINCT vt1.c0, rt0.c0, vt0.c0, vt1.c2, rt1.c0, rt1.c1, rt0.c2, rt0.c3 FROM vt1, rt0 CROSS JOIN vt0 ON 'v헏' RIGHT OUTER JOIN rt1 ON vt1.c1;
SELECT vt1.c0, rt1.c2, rt0.c2 FROM rt1, vt0, vt1 NOT INDEXED, rt0 GROUP BY vt1.c0, rt1.c2, rt0.c2;
SELECT vt1.c0, rt1.c2, rt0.c2 FROM rt1, vt0, vt1, rt0 WHERE ((((+ (rt0.c2))) NOT BETWEEN (UPPER(DISTINCT vt1.c3)) AND ('' COLLATE NOCASE))) GROUP BY vt1.c0, rt1.c2, rt0.c2 UNION SELECT vt1.c0, rt1.c2, rt0.c2 FROM rt1, vt0, vt1, rt0 WHERE ((NOT ((((+ (rt0.c2))) NOT BETWEEN (UPPER(DISTINCT vt1.c3)) AND ('' COLLATE NOCASE))))) GROUP BY vt1.c0, rt1.c2, rt0.c2 UNION SELECT vt1.c0, rt1.c2, rt0.c2 FROM rt1, vt0, vt1, rt0 WHERE ((((((+ (rt0.c2))) NOT BETWEEN (UPPER(DISTINCT vt1.c3)) AND ('' COLLATE NOCASE))) ISNULL)) GROUP BY vt1.c0, rt1.c2, rt0.c2;
SELECT vt1.c0, rt1.c2, rt0.c2 FROM rt1, vt0, vt1 NOT INDEXED, rt0 GROUP BY vt1.c0, rt1.c2, rt0.c2;
SELECT ALL rt1.c1, vt1.c1 FROM rt1, vt1 GROUP BY rt1.c1, vt1.c1;
SELECT ALL rt1.c1, vt1.c1 FROM rt1, vt1 GROUP BY rt1.c1, vt1.c1 HAVING (((rt1.c2)) NOT BETWEEN (((NOT (COUNT(*))))) AND ((TOTAL(vt1.c0)))) UNION ALL SELECT ALL rt1.c1, vt1.c1 FROM rt1, vt1 GROUP BY rt1.c1, vt1.c1 HAVING (NOT ((((rt1.c2)) NOT BETWEEN (((NOT (COUNT(*))))) AND ((TOTAL(vt1.c0)))))) UNION ALL SELECT ALL rt1.c1, vt1.c1 FROM rt1, vt1 GROUP BY rt1.c1, vt1.c1 HAVING (((((rt1.c2)) NOT BETWEEN (((NOT (COUNT(*))))) AND ((TOTAL(vt1.c0))))) ISNULL);
SELECT ALL rt1.c1, vt1.c1 FROM rt1, vt1 GROUP BY rt1.c1, vt1.c1;
SELECT ALL rt1.c1, vt1.c1 FROM rt1, vt1 GROUP BY rt1.c1, vt1.c1 HAVING (((rt1.c2)) NOT BETWEEN (((NOT (COUNT(*))))) AND ((TOTAL(vt1.c0)))) UNION ALL SELECT ALL rt1.c1, vt1.c1 FROM rt1, vt1 GROUP BY rt1.c1, vt1.c1 HAVING (NOT ((((rt1.c2)) NOT BETWEEN (((NOT (COUNT(*))))) AND ((TOTAL(vt1.c0)))))) UNION ALL SELECT ALL rt1.c1, vt1.c1 FROM rt1, vt1 GROUP BY rt1.c1, vt1.c1 HAVING (((((rt1.c2)) NOT BETWEEN (((NOT (COUNT(*))))) AND ((TOTAL(vt1.c0))))) ISNULL);
SELECT ALL rt1.c1, vt1.c1 FROM rt1, vt1 GROUP BY rt1.c1, vt1.c1;
SELECT ALL * FROM rt1, rt0;
SELECT * FROM rt1, rt0 WHERE (NULL) UNION ALL SELECT ALL * FROM rt1, rt0 WHERE ((NOT (NULL))) UNION ALL SELECT * FROM rt1, rt0 WHERE (((NULL) ISNULL));
SELECT ALL * FROM rt1, rt0;
SELECT DISTINCT * FROM vt1, vt0, rt0 LEFT OUTER JOIN rt1 ON (((vt1.c3)) NOT BETWEEN ((CASE vt0.c0  WHEN rt1.c1 THEN rt0.c2 WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c2 ELSE vt0.c0 END)) AND ((rt1.c0)));
SELECT DISTINCT * FROM vt1, vt0, rt0 LEFT OUTER JOIN rt1 ON (((vt1.c3)) NOT BETWEEN ((CASE vt0.c0  WHEN rt1.c1 THEN rt0.c2 WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c2 ELSE vt0.c0 END)) AND ((rt1.c0))) WHERE (CAST(((vt1.c2) BETWEEN (rt1.c0) AND (rt0.c0)) AS BLOB)) UNION SELECT DISTINCT * FROM vt1, vt0, rt0 LEFT OUTER JOIN rt1 ON (((vt1.c3)) NOT BETWEEN ((CASE vt0.c0  WHEN rt1.c1 THEN rt0.c2 WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c2 ELSE vt0.c0 END)) AND ((rt1.c0))) WHERE ((NOT (CAST(((vt1.c2) BETWEEN (rt1.c0) AND (rt0.c0)) AS BLOB)))) UNION SELECT DISTINCT * FROM vt1, vt0, rt0 LEFT OUTER JOIN rt1 ON (((vt1.c3)) NOT BETWEEN ((CASE vt0.c0  WHEN rt1.c1 THEN rt0.c2 WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c2 ELSE vt0.c0 END)) AND ((rt1.c0))) WHERE (((CAST(((vt1.c2) BETWEEN (rt1.c0) AND (rt0.c0)) AS BLOB)) ISNULL));
SELECT DISTINCT * FROM vt1, vt0, rt0 LEFT OUTER JOIN rt1 ON (((vt1.c3)) NOT BETWEEN ((CASE vt0.c0  WHEN rt1.c1 THEN rt0.c2 WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c2 ELSE vt0.c0 END)) AND ((rt1.c0)));
SELECT ALL vt1.c0, rt0.c1, vt1.c2, vt1.c3 FROM rt0 FULL OUTER JOIN vt1 ON ('802004521' IN ()) GROUP BY vt1.c0, rt0.c1, vt1.c2, vt1.c3;
SELECT ALL vt1.c0, rt0.c1, vt1.c2, vt1.c3 FROM rt0 FULL OUTER JOIN vt1 ON ('802004521' IN ()) WHERE (((CASE WHEN vt1.c2 THEN rt0.c0 ELSE rt0.c2 END)|(((vt1.c0) IS FALSE)))) GROUP BY vt1.c0, rt0.c1, vt1.c2, vt1.c3 UNION SELECT ALL vt1.c0, rt0.c1, vt1.c2, vt1.c3 FROM rt0 FULL OUTER JOIN vt1 ON ('802004521' IN ()) WHERE ((NOT (((CASE WHEN vt1.c2 THEN rt0.c0 ELSE rt0.c2 END)|(((vt1.c0) IS FALSE)))))) GROUP BY vt1.c0, rt0.c1, vt1.c2, vt1.c3 UNION SELECT vt1.c0, rt0.c1, vt1.c2, vt1.c3 FROM rt0 FULL OUTER JOIN vt1 ON ('802004521' IN ()) WHERE (((((CASE WHEN vt1.c2 THEN rt0.c0 ELSE rt0.c2 END)|(((vt1.c0) IS FALSE)))) ISNULL)) GROUP BY vt1.c0, rt0.c1, vt1.c2, vt1.c3;
SELECT ALL vt1.c0, rt0.c1, vt1.c2, vt1.c3 FROM rt0 FULL OUTER JOIN vt1 ON ('802004521' IN ()) GROUP BY vt1.c0, rt0.c1, vt1.c2, vt1.c3;
SELECT vt1.c2, rt0.c1, rt0.c3, rt0.c0, vt1.c3, vt1.c1 FROM vt1 CROSS JOIN rt0 ON CASE WHEN (((rt0.c2)) BETWEEN ((rt0.c3)) AND ((x''))) THEN vt1.c1 COLLATE RTRIM ELSE CASE 0.6604431148065615  WHEN rt0.c1 THEN rt0.c2 END END GROUP BY vt1.c2, rt0.c1, rt0.c3, rt0.c0, vt1.c3, vt1.c1;
SELECT ALL vt1.c2, rt0.c1, rt0.c3, rt0.c0, vt1.c3, vt1.c1 FROM vt1 CROSS JOIN rt0 ON CASE WHEN (((rt0.c2)) BETWEEN ((rt0.c3)) AND ((x''))) THEN vt1.c1 COLLATE RTRIM ELSE CASE 0.6604431148065615  WHEN rt0.c1 THEN rt0.c2 END END GROUP BY vt1.c2, rt0.c1, rt0.c3, rt0.c0, vt1.c3, vt1.c1 HAVING ((((SUM(TOTAL('-1329933294')))IS(COUNT(*))))<=(AVG(COUNT(*)))) UNION ALL SELECT ALL vt1.c2, rt0.c1, rt0.c3, rt0.c0, vt1.c3, vt1.c1 FROM vt1 CROSS JOIN rt0 ON CASE WHEN (((rt0.c2)) BETWEEN ((rt0.c3)) AND ((x''))) THEN vt1.c1 COLLATE RTRIM ELSE CASE 0.6604431148065615  WHEN rt0.c1 THEN rt0.c2 END END GROUP BY vt1.c2, rt0.c1, rt0.c3, rt0.c0, vt1.c3, vt1.c1 HAVING (NOT (((((SUM(TOTAL('-1329933294')))IS(COUNT(*))))<=(AVG(COUNT(*)))))) UNION ALL SELECT ALL vt1.c2, rt0.c1, rt0.c3, rt0.c0, vt1.c3, vt1.c1 FROM vt1 CROSS JOIN rt0 ON CASE WHEN (((rt0.c2)) BETWEEN ((rt0.c3)) AND ((x''))) THEN vt1.c1 COLLATE RTRIM ELSE CASE 0.6604431148065615  WHEN rt0.c1 THEN rt0.c2 END END GROUP BY vt1.c2, rt0.c1, rt0.c3, rt0.c0, vt1.c3, vt1.c1 HAVING ((((((SUM(TOTAL('-1329933294')))IS(COUNT(*))))<=(AVG(COUNT(*))))) ISNULL);
SELECT SUM((- (rt1.c0)) COLLATE RTRIM) FROM rt0, rt1, vt0 ORDER BY ((LIKELY(DISTINCT rt0.c3))<(CAST(rt0.c3 AS INTEGER)))  NULLS LAST;
SELECT ALL * FROM vt1, vt0;
SELECT * FROM vt1, vt0 WHERE (CAST(CASE vt1.c2  WHEN vt1.c0 THEN vt1.c0 END AS BLOB)) UNION ALL SELECT * FROM vt1, vt0 WHERE ((NOT (CAST(CASE vt1.c2  WHEN vt1.c0 THEN vt1.c0 END AS BLOB)))) UNION ALL SELECT ALL * FROM vt1, vt0 WHERE (((CAST(CASE vt1.c2  WHEN vt1.c0 THEN vt1.c0 END AS BLOB)) ISNULL));
SELECT ALL * FROM vt1, vt0;
SELECT DISTINCT * FROM rt1, rt0;
SELECT DISTINCT * FROM rt1, rt0 WHERE (rt0.c1 COLLATE NOCASE) UNION SELECT DISTINCT * FROM rt1, rt0 WHERE ((NOT (rt0.c1 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM rt1, rt0 WHERE (((rt0.c1 COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM rt1, rt0;
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1 WHERE (rt1.c0) GROUP BY rt1.c2 UNION SELECT rt1.c2 FROM rt1 WHERE ((NOT (rt1.c0))) GROUP BY rt1.c2 UNION SELECT rt1.c2 FROM rt1 WHERE (((rt1.c0) ISNULL)) GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT vt0.c0, vt1.c2, vt1.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c2, vt1.c1;
SELECT ALL vt0.c0, vt1.c2, vt1.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c2, vt1.c1 HAVING MIN(((MAX(vt0.c0))<=(COUNT(*)))) UNION ALL SELECT ALL vt0.c0, vt1.c2, vt1.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c2, vt1.c1 HAVING (NOT (MIN(((MAX(vt0.c0))<=(COUNT(*)))))) UNION ALL SELECT ALL vt0.c0, vt1.c2, vt1.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c2, vt1.c1 HAVING ((MIN(((MAX(vt0.c0))<=(COUNT(*))))) ISNULL);
SELECT * FROM vt1;
SELECT ALL * FROM vt1 WHERE (vt1.c2) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (vt1.c2))) UNION ALL SELECT ALL * FROM vt1 WHERE (((vt1.c2) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM vt1, vt0, rt1, rt0;
SELECT DISTINCT * FROM vt1, vt0, rt1, rt0 WHERE (((((rt1.c2) NOT BETWEEN (rt1.c0) AND (vt1.c1))) IS FALSE)) UNION SELECT DISTINCT * FROM vt1, vt0, rt1, rt0 WHERE ((NOT (((((rt1.c2) NOT BETWEEN (rt1.c0) AND (vt1.c1))) IS FALSE)))) UNION SELECT DISTINCT * FROM vt1, vt0, rt1, rt0 WHERE (((((((rt1.c2) NOT BETWEEN (rt1.c0) AND (vt1.c1))) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM vt1, vt0, rt1, rt0;
SELECT ALL vt1.c2 FROM rt0 RIGHT OUTER JOIN vt1 ON vt1.c0 INNER JOIN vt0 ON (((rt1.c2)) BETWEEN ((((rt0.c2)|(x'')))) AND ((CAST(vt1.c3 AS INTEGER)))) CROSS JOIN rt1 ON (- (((vt1.c0) BETWEEN (rt0.c0) AND (0.8173217307385564)))) GROUP BY vt1.c2;
SELECT ALL vt1.c2, vt1.c0 FROM vt1 GROUP BY vt1.c2, vt1.c0;
SELECT ALL vt1.c2, vt1.c0 FROM vt1 GROUP BY vt1.c2, vt1.c0 HAVING MIN((- (COUNT(TOTAL(GROUP_CONCAT(vt1.c3)))))) UNION ALL SELECT vt1.c2, vt1.c0 FROM vt1 GROUP BY vt1.c2, vt1.c0 HAVING (NOT (MIN((- (COUNT(TOTAL(GROUP_CONCAT(vt1.c3)))))))) UNION ALL SELECT ALL vt1.c2, vt1.c0 FROM vt1 GROUP BY vt1.c2, vt1.c0 HAVING ((MIN((- (COUNT(TOTAL(GROUP_CONCAT(vt1.c3))))))) ISNULL);
SELECT ALL rt0.c3, rt0.c2 FROM rt0, vt1;
SELECT rt0.c3, rt0.c2 FROM rt0, vt1 WHERE (0.7574313548407873) UNION ALL SELECT ALL rt0.c3, rt0.c2 FROM rt0, vt1 WHERE ((NOT (0.7574313548407873))) UNION ALL SELECT ALL rt0.c3, rt0.c2 FROM rt0, vt1 WHERE (((0.7574313548407873) ISNULL));
SELECT ALL rt0.c3, rt0.c2 FROM rt0, vt1;
SELECT DISTINCT rt0.c3, vt1.c1, vt1.c2, vt1.c0, rt0.c1, vt0.c0, rt0.c0, vt1.c3 FROM vt1, vt0, rt0, rt1 NOT INDEXED;
SELECT DISTINCT rt0.c3, vt1.c1, vt1.c2, vt1.c0, rt0.c1, vt0.c0, rt0.c0, vt1.c3 FROM vt1, vt0, rt0, rt1 WHERE (((((rt0.c1) BETWEEN (vt1.c1) AND (vt0.c0)))<<(vt1.c1))) UNION SELECT DISTINCT rt0.c3, vt1.c1, vt1.c2, vt1.c0, rt0.c1, vt0.c0, rt0.c0, vt1.c3 FROM vt1, vt0, rt0, rt1 WHERE ((NOT (((((rt0.c1) BETWEEN (vt1.c1) AND (vt0.c0)))<<(vt1.c1))))) UNION SELECT DISTINCT rt0.c3, vt1.c1, vt1.c2, vt1.c0, rt0.c1, vt0.c0, rt0.c0, vt1.c3 FROM vt1, vt0, rt0, rt1 WHERE (((((((rt0.c1) BETWEEN (vt1.c1) AND (vt0.c0)))<<(vt1.c1))) ISNULL));
SELECT DISTINCT rt0.c3, vt1.c1, vt1.c2, vt1.c0, rt0.c1, vt0.c0, rt0.c0, vt1.c3 FROM vt1, vt0, rt0, rt1 NOT INDEXED;
SELECT ALL vt0.c0, vt1.c3, rt0.c3, vt1.c2, vt1.c0, rt1.c2, rt0.c0, rt0.c2, rt1.c1 FROM vt0, rt1, vt1, rt0 GROUP BY vt0.c0, vt1.c3, rt0.c3, vt1.c2, vt1.c0, rt1.c2, rt0.c0, rt0.c2, rt1.c1;
SELECT vt0.c0, vt1.c3, rt0.c3, vt1.c2, vt1.c0, rt1.c2, rt0.c0, rt0.c2, rt1.c1 FROM vt0, rt1, vt1, rt0 WHERE ((((((rt1.c0))<=((rt0.c2)))) IS FALSE)) GROUP BY vt0.c0, vt1.c3, rt0.c3, vt1.c2, vt1.c0, rt1.c2, rt0.c0, rt0.c2, rt1.c1 UNION SELECT ALL vt0.c0, vt1.c3, rt0.c3, vt1.c2, vt1.c0, rt1.c2, rt0.c0, rt0.c2, rt1.c1 FROM vt0, rt1, vt1, rt0 WHERE ((NOT ((((((rt1.c0))<=((rt0.c2)))) IS FALSE)))) GROUP BY vt0.c0, vt1.c3, rt0.c3, vt1.c2, vt1.c0, rt1.c2, rt0.c0, rt0.c2, rt1.c1 UNION SELECT ALL vt0.c0, vt1.c3, rt0.c3, vt1.c2, vt1.c0, rt1.c2, rt0.c0, rt0.c2, rt1.c1 FROM vt0, rt1 NOT INDEXED, vt1, rt0 WHERE ((((((((rt1.c0))<=((rt0.c2)))) IS FALSE)) ISNULL)) GROUP BY vt0.c0, vt1.c3, rt0.c3, vt1.c2, vt1.c0, rt1.c2, rt0.c0, rt0.c2, rt1.c1;
SELECT ALL vt0.c0, vt1.c3, rt0.c3, vt1.c2, vt1.c0, rt1.c2, rt0.c0, rt0.c2, rt1.c1 FROM vt0, rt1, vt1, rt0 GROUP BY vt0.c0, vt1.c3, rt0.c3, vt1.c2, vt1.c0, rt1.c2, rt0.c0, rt0.c2, rt1.c1;
SELECT ALL rt1.c0, rt1.c2 FROM vt0, rt1 GROUP BY rt1.c0, rt1.c2;
SELECT ALL rt1.c0, rt1.c2 FROM vt0, rt1 GROUP BY rt1.c0, rt1.c2 HAVING '0.8229252500133596' UNION ALL SELECT ALL rt1.c0, rt1.c2 FROM vt0, rt1 GROUP BY rt1.c0, rt1.c2 HAVING (NOT ('0.8229252500133596')) UNION ALL SELECT rt1.c0, rt1.c2 FROM vt0, rt1 GROUP BY rt1.c0, rt1.c2 HAVING (('0.8229252500133596') ISNULL);
SELECT ALL rt1.c0, rt1.c2 FROM vt0, rt1 GROUP BY rt1.c0, rt1.c2;
SELECT ALL rt1.c0, rt1.c2 FROM vt0, rt1 GROUP BY rt1.c0, rt1.c2 HAVING '0.8229252500133596' UNION ALL SELECT ALL rt1.c0, rt1.c2 FROM vt0, rt1 GROUP BY rt1.c0, rt1.c2 HAVING (NOT ('0.8229252500133596')) UNION ALL SELECT rt1.c0, rt1.c2 FROM vt0, rt1 GROUP BY rt1.c0, rt1.c2 HAVING (('0.8229252500133596') ISNULL);
SELECT ALL rt1.c0, rt1.c2 FROM vt0, rt1 GROUP BY rt1.c0, rt1.c2;
SELECT * FROM vt0, vt1, rt0;
SELECT * FROM vt0, vt1, rt0 WHERE ((+ (CAST(x'' AS NUMERIC)))) UNION ALL SELECT * FROM vt0, vt1, rt0 WHERE ((NOT ((+ (CAST(x'' AS NUMERIC)))))) UNION ALL SELECT * FROM vt0, vt1, rt0 WHERE ((((+ (CAST(x'' AS NUMERIC)))) ISNULL));
SELECT * FROM vt0, vt1, rt0;
SELECT DISTINCT rt1.c1, rt1.c2 FROM rt1;
SELECT DISTINCT rt1.c1, rt1.c2 FROM rt1 WHERE ((((- (rt1.c2)))>=(CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN NULL END))) UNION SELECT DISTINCT rt1.c1, rt1.c2 FROM rt1 WHERE ((NOT ((((- (rt1.c2)))>=(CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN NULL END))))) UNION SELECT DISTINCT rt1.c1, rt1.c2 FROM rt1 WHERE ((((((- (rt1.c2)))>=(CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN NULL END))) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c2 FROM rt1;
SELECT rt0.c2, vt0.c0, rt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON rt0.c2 COLLATE RTRIM GROUP BY rt0.c2, vt0.c0, rt0.c0;
SELECT rt0.c2, vt0.c0, rt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON rt0.c2 COLLATE RTRIM WHERE (CAST(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c3 END AS BLOB)) GROUP BY rt0.c2, vt0.c0, rt0.c0 UNION SELECT ALL rt0.c2, vt0.c0, rt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON rt0.c2 COLLATE RTRIM WHERE ((NOT (CAST(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c3 END AS BLOB)))) GROUP BY rt0.c2, vt0.c0, rt0.c0 UNION SELECT rt0.c2, vt0.c0, rt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON rt0.c2 COLLATE RTRIM WHERE (((CAST(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c3 END AS BLOB)) ISNULL)) GROUP BY rt0.c2, vt0.c0, rt0.c0;
SELECT rt0.c2, vt0.c0, rt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON rt0.c2 COLLATE RTRIM GROUP BY rt0.c2, vt0.c0, rt0.c0;
SELECT ALL rt1.c1, vt0.c0, rt1.c2, rt1.c0 FROM vt0, rt1 GROUP BY rt1.c1, vt0.c0, rt1.c2, rt1.c0;
SELECT rt1.c1, vt0.c0, rt1.c2, rt1.c0 FROM vt0, rt1 GROUP BY rt1.c1, vt0.c0, rt1.c2, rt1.c0 HAVING GROUP_CONCAT((COUNT(rt1.c1) IN ())) UNION ALL SELECT rt1.c1, vt0.c0, rt1.c2, rt1.c0 FROM vt0, rt1 GROUP BY rt1.c1, vt0.c0, rt1.c2, rt1.c0 HAVING (NOT (GROUP_CONCAT((COUNT(rt1.c1) IN ())))) UNION ALL SELECT rt1.c1, vt0.c0, rt1.c2, rt1.c0 FROM vt0, rt1 GROUP BY rt1.c1, vt0.c0, rt1.c2, rt1.c0 HAVING ((GROUP_CONCAT((COUNT(rt1.c1) IN ()))) ISNULL);
SELECT ALL rt1.c1, vt0.c0, rt1.c2, rt1.c0 FROM vt0, rt1 GROUP BY rt1.c1, vt0.c0, rt1.c2, rt1.c0;
SELECT rt1.c1, vt0.c0, rt1.c2, rt1.c0 FROM vt0, rt1 GROUP BY rt1.c1, vt0.c0, rt1.c2, rt1.c0 HAVING GROUP_CONCAT((COUNT(rt1.c1) IN ())) UNION ALL SELECT rt1.c1, vt0.c0, rt1.c2, rt1.c0 FROM vt0, rt1 GROUP BY rt1.c1, vt0.c0, rt1.c2, rt1.c0 HAVING (NOT (GROUP_CONCAT((COUNT(rt1.c1) IN ())))) UNION ALL SELECT rt1.c1, vt0.c0, rt1.c2, rt1.c0 FROM vt0, rt1 GROUP BY rt1.c1, vt0.c0, rt1.c2, rt1.c0 HAVING ((GROUP_CONCAT((COUNT(rt1.c1) IN ()))) ISNULL);
SELECT ALL rt1.c1, vt0.c0, rt1.c2, rt1.c0 FROM vt0, rt1 GROUP BY rt1.c1, vt0.c0, rt1.c2, rt1.c0;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)+(CAST(vt0.c0 AS REAL)))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((vt0.c0 COLLATE NOCASE)+(CAST(vt0.c0 AS REAL)))))) UNION ALL SELECT * FROM vt0 WHERE (((((vt0.c0 COLLATE NOCASE)+(CAST(vt0.c0 AS REAL)))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT rt1.c2, vt0.c0, vt1.c2, rt1.c1, vt1.c1, rt1.c0, vt1.c0 FROM vt0, rt1, vt1;
SELECT DISTINCT rt1.c2, vt0.c0, vt1.c2, rt1.c1, vt1.c1, rt1.c0, vt1.c0 FROM vt0, rt1, vt1 WHERE (((0.27895965430502)AND(((vt1.c3) NOT BETWEEN (vt0.c0) AND (rt1.c1))))) UNION SELECT DISTINCT rt1.c2, vt0.c0, vt1.c2, rt1.c1, vt1.c1, rt1.c0, vt1.c0 FROM vt0, rt1, vt1 WHERE ((NOT (((0.27895965430502)AND(((vt1.c3) NOT BETWEEN (vt0.c0) AND (rt1.c1))))))) UNION SELECT DISTINCT rt1.c2, vt0.c0, vt1.c2, rt1.c1, vt1.c1, rt1.c0, vt1.c0 FROM vt0, rt1, vt1 WHERE (((((0.27895965430502)AND(((vt1.c3) NOT BETWEEN (vt0.c0) AND (rt1.c1))))) ISNULL));
SELECT DISTINCT rt1.c2, vt0.c0, vt1.c2, rt1.c1, vt1.c1, rt1.c0, vt1.c0 FROM vt0, rt1, vt1;
SELECT ALL rt0.c3, vt1.c3, rt1.c1 FROM rt1, vt0, vt1, rt0 GROUP BY rt0.c3, vt1.c3, rt1.c1;
SELECT rt0.c3, vt1.c3, rt1.c1 FROM rt1, vt0, vt1, rt0 WHERE (((CASE rt1.c2  WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c1 THEN rt0.c0 WHEN vt1.c3 THEN vt1.c1 ELSE vt1.c0 END)=(TRIM(rt0.c3, rt1.c0)))) GROUP BY rt0.c3, vt1.c3, rt1.c1 UNION SELECT ALL rt0.c3, vt1.c3, rt1.c1 FROM rt1, vt0, vt1, rt0 WHERE ((NOT (((CASE rt1.c2  WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c1 THEN rt0.c0 WHEN vt1.c3 THEN vt1.c1 ELSE vt1.c0 END)=(TRIM(rt0.c3, rt1.c0)))))) GROUP BY rt0.c3, vt1.c3, rt1.c1 UNION SELECT ALL rt0.c3, vt1.c3, rt1.c1 FROM rt1, vt0, vt1, rt0 WHERE (((((CASE rt1.c2  WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c1 THEN rt0.c0 WHEN vt1.c3 THEN vt1.c1 ELSE vt1.c0 END)=(TRIM(rt0.c3, rt1.c0)))) ISNULL)) GROUP BY rt0.c3, vt1.c3, rt1.c1;
SELECT ALL rt0.c3, vt1.c3, rt1.c1 FROM rt1, vt0, vt1, rt0 GROUP BY rt0.c3, vt1.c3, rt1.c1;
SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1 HAVING (~ (MAX(rt0.c0))) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1 HAVING (NOT ((~ (MAX(rt0.c0))))) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1 HAVING (((~ (MAX(rt0.c0)))) ISNULL);
SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1 HAVING (~ (MAX(rt0.c0))) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1 HAVING (NOT ((~ (MAX(rt0.c0))))) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1 HAVING (((~ (MAX(rt0.c0)))) ISNULL);
SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1;
SELECT ALL vt1.c2, rt1.c0, vt1.c3, rt1.c1, rt0.c3 FROM rt0 FULL OUTER JOIN vt1 ON 0.11631399648918861 CROSS JOIN rt1 ON (~ (rt0.c3)) COLLATE RTRIM;
SELECT vt1.c2, rt1.c0, vt1.c3, rt1.c1, rt0.c3 FROM rt0 FULL OUTER JOIN vt1 ON 0.11631399648918861 CROSS JOIN rt1 ON (~ (rt0.c3)) COLLATE RTRIM WHERE ((TRIM(DISTINCT rt1.c1, rt0.c0) IN ())) UNION ALL SELECT ALL vt1.c2, rt1.c0, vt1.c3, rt1.c1, rt0.c3 FROM rt0 FULL OUTER JOIN vt1 ON 0.11631399648918861 CROSS JOIN rt1 ON (~ (rt0.c3)) COLLATE RTRIM WHERE ((NOT ((TRIM(DISTINCT rt1.c1, rt0.c0) IN ())))) UNION ALL SELECT ALL vt1.c2, rt1.c0, vt1.c3, rt1.c1, rt0.c3 FROM rt0 FULL OUTER JOIN vt1 ON 0.11631399648918861 CROSS JOIN rt1 ON (~ (rt0.c3)) COLLATE RTRIM WHERE ((((TRIM(DISTINCT rt1.c1, rt0.c0) IN ())) ISNULL));
SELECT ALL vt1.c2, rt1.c0, vt1.c3, rt1.c1, rt0.c3 FROM rt0 FULL OUTER JOIN vt1 ON 0.11631399648918861 CROSS JOIN rt1 ON (~ (rt0.c3)) COLLATE RTRIM;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c0 IN ()))+(((vt0.c0)GLOB(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((vt0.c0 IN ()))+(((vt0.c0)GLOB(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c0 IN ()))+(((vt0.c0)GLOB(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT rt1.c0, vt1.c0, vt0.c0, vt1.c1, vt1.c3, rt0.c0, rt1.c1, rt0.c3 FROM vt1, vt0, rt0, rt1 GROUP BY rt1.c0, vt1.c0, vt0.c0, vt1.c1, vt1.c3, rt0.c0, rt1.c1, rt0.c3;
SELECT rt1.c0, vt1.c0, vt0.c0, vt1.c1, vt1.c3, rt0.c0, rt1.c1, rt0.c3 FROM vt1, vt0, rt0, rt1 WHERE ((((CASE vt1.c2  WHEN rt1.c1 THEN vt1.c3 ELSE rt0.c2 END))<>((((vt1.c1)>>(rt1.c1)))))) GROUP BY rt1.c0, vt1.c0, vt0.c0, vt1.c1, vt1.c3, rt0.c0, rt1.c1, rt0.c3 UNION SELECT ALL rt1.c0, vt1.c0, vt0.c0, vt1.c1, vt1.c3, rt0.c0, rt1.c1, rt0.c3 FROM vt1, vt0, rt0, rt1 NOT INDEXED WHERE ((NOT ((((CASE vt1.c2  WHEN rt1.c1 THEN vt1.c3 ELSE rt0.c2 END))<>((((vt1.c1)>>(rt1.c1)))))))) GROUP BY rt1.c0, vt1.c0, vt0.c0, vt1.c1, vt1.c3, rt0.c0, rt1.c1, rt0.c3 UNION SELECT ALL rt1.c0, vt1.c0, vt0.c0, vt1.c1, vt1.c3, rt0.c0, rt1.c1, rt0.c3 FROM vt1, vt0, rt0, rt1 WHERE ((((((CASE vt1.c2  WHEN rt1.c1 THEN vt1.c3 ELSE rt0.c2 END))!=((((vt1.c1)>>(rt1.c1)))))) ISNULL)) GROUP BY rt1.c0, vt1.c0, vt0.c0, vt1.c1, vt1.c3, rt0.c0, rt1.c1, rt0.c3;
SELECT rt1.c0, vt1.c0, vt0.c0, vt1.c1, vt1.c3, rt0.c0, rt1.c1, rt0.c3 FROM vt1, vt0, rt0, rt1 GROUP BY rt1.c0, vt1.c0, vt0.c0, vt1.c1, vt1.c3, rt0.c0, rt1.c1, rt0.c3;
SELECT rt1.c0, vt1.c3, vt1.c0, vt0.c0, rt1.c2 FROM rt1, vt0, rt0, vt1 GROUP BY rt1.c0, vt1.c3, vt1.c0, vt0.c0, rt1.c2;
SELECT rt1.c0, vt1.c3, vt1.c0, vt0.c0, rt1.c2 FROM rt1, vt0, rt0, vt1 GROUP BY rt1.c0, vt1.c3, vt1.c0, vt0.c0, rt1.c2 HAVING SUM(MAX(rt1.c0)) UNION ALL SELECT rt1.c0, vt1.c3, vt1.c0, vt0.c0, rt1.c2 FROM rt1, vt0, rt0, vt1 GROUP BY rt1.c0, vt1.c3, vt1.c0, vt0.c0, rt1.c2 HAVING (NOT (SUM(MAX(rt1.c0)))) UNION ALL SELECT ALL rt1.c0, vt1.c3, vt1.c0, vt0.c0, rt1.c2 FROM rt1, vt0, rt0, vt1 GROUP BY rt1.c0, vt1.c3, vt1.c0, vt0.c0, rt1.c2 HAVING ((SUM(MAX(rt1.c0))) ISNULL);
SELECT vt1.c0, vt1.c2 FROM vt1, vt0;
SELECT ALL vt1.c0, vt1.c2 FROM vt1, vt0 WHERE (((((vt1.c0 COLLATE BINARY)AND(((vt1.c0) NOTNULL))))AND(0Xf16c174))) UNION ALL SELECT ALL vt1.c0, vt1.c2 FROM vt1, vt0 WHERE ((NOT (((((vt1.c0 COLLATE BINARY)AND(((vt1.c0) NOTNULL))))AND(0xf16c174))))) UNION ALL SELECT ALL vt1.c0, vt1.c2 FROM vt1, vt0 WHERE (((((((vt1.c0 COLLATE BINARY)AND(((vt1.c0) NOTNULL))))AND(0xf16c174))) ISNULL));
SELECT vt1.c0, vt1.c2 FROM vt1, vt0;
SELECT DISTINCT vt1.c1 FROM rt0, vt1, vt0;
SELECT DISTINCT vt1.c1 FROM rt0, vt1, vt0 WHERE ((((vt1.c1)) NOT BETWEEN ((((NULL)<(rt0.c3)))) AND ((((rt0.c3)*(vt1.c1)))))) UNION SELECT DISTINCT vt1.c1 FROM rt0, vt1, vt0 WHERE ((NOT ((((vt1.c1)) NOT BETWEEN ((((NULL)<(rt0.c3)))) AND ((((rt0.c3)*(vt1.c1)))))))) UNION SELECT DISTINCT vt1.c1 FROM rt0, vt1, vt0 WHERE ((((((vt1.c1)) NOT BETWEEN ((((NULL)<(rt0.c3)))) AND ((((rt0.c3)*(vt1.c1)))))) ISNULL));
SELECT DISTINCT vt1.c1 FROM rt0, vt1, vt0;
SELECT ALL rt1.c1 FROM vt0, rt1 GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM vt0, rt1 WHERE (rt1.c1) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM vt0, rt1 WHERE ((NOT (rt1.c1))) GROUP BY rt1.c1 UNION SELECT rt1.c1 FROM vt0, rt1 WHERE (((rt1.c1) ISNULL)) GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM vt0, rt1 GROUP BY rt1.c1;
SELECT rt0.c2, rt1.c2, vt1.c2, vt1.c0 FROM rt1, rt0, vt1 GROUP BY rt0.c2, rt1.c2, vt1.c2, vt1.c0;
SELECT rt0.c2, rt1.c2, vt1.c2, vt1.c0 FROM rt1, rt0, vt1 GROUP BY rt0.c2, rt1.c2, vt1.c2, vt1.c0 HAVING (NOT ((vt1.c3 IN ()))) UNION ALL SELECT rt0.c2, rt1.c2, vt1.c2, vt1.c0 FROM rt1, rt0, vt1 GROUP BY rt0.c2, rt1.c2, vt1.c2, vt1.c0 HAVING (NOT ((NOT ((vt1.c3 IN ()))))) UNION ALL SELECT ALL rt0.c2, rt1.c2, vt1.c2, vt1.c0 FROM rt1, rt0, vt1 GROUP BY rt0.c2, rt1.c2, vt1.c2, vt1.c0 HAVING (((NOT ((vt1.c3 IN ())))) ISNULL);
SELECT rt0.c2, rt1.c2, vt1.c2, vt1.c0 FROM rt1, rt0, vt1 GROUP BY rt0.c2, rt1.c2, vt1.c2, vt1.c0;
SELECT rt0.c2, rt1.c2, vt1.c2, vt1.c0 FROM rt1, rt0, vt1 GROUP BY rt0.c2, rt1.c2, vt1.c2, vt1.c0 HAVING (NOT ((vt1.c3 IN ()))) UNION ALL SELECT rt0.c2, rt1.c2, vt1.c2, vt1.c0 FROM rt1, rt0, vt1 GROUP BY rt0.c2, rt1.c2, vt1.c2, vt1.c0 HAVING (NOT ((NOT ((vt1.c3 IN ()))))) UNION ALL SELECT ALL rt0.c2, rt1.c2, vt1.c2, vt1.c0 FROM rt1, rt0, vt1 GROUP BY rt0.c2, rt1.c2, vt1.c2, vt1.c0 HAVING (((NOT ((vt1.c3 IN ())))) ISNULL);
SELECT rt0.c2, rt1.c2, vt1.c2, vt1.c0 FROM rt1, rt0, vt1 GROUP BY rt0.c2, rt1.c2, vt1.c2, vt1.c0;
SELECT ALL vt1.c3, vt1.c2, vt0.c0, rt1.c2, vt1.c0, vt1.c1 FROM vt0, vt1, rt1;
SELECT vt1.c3, vt1.c2, vt0.c0, rt1.c2, vt1.c0, vt1.c1 FROM vt0, vt1, rt1 WHERE (((vt0.c0) IS TRUE)) UNION ALL SELECT ALL vt1.c3, vt1.c2, vt0.c0, rt1.c2, vt1.c0, vt1.c1 FROM vt0, vt1, rt1 WHERE ((NOT (((vt0.c0) IS TRUE)))) UNION ALL SELECT vt1.c3, vt1.c2, vt0.c0, rt1.c2, vt1.c0, vt1.c1 FROM vt0, vt1, rt1 WHERE (((((vt0.c0) IS TRUE)) ISNULL));
SELECT ALL vt1.c3, vt1.c2, vt0.c0, rt1.c2, vt1.c0, vt1.c1 FROM vt0, vt1, rt1;
SELECT DISTINCT * FROM vt1, rt1, vt0;
SELECT DISTINCT * FROM vt1, rt1, vt0 WHERE (CAST((+ (rt1.c1)) AS REAL)) UNION SELECT DISTINCT * FROM vt1, rt1, vt0 WHERE ((NOT (CAST((+ (rt1.c1)) AS REAL)))) UNION SELECT DISTINCT * FROM vt1, rt1, vt0 WHERE (((CAST((+ (rt1.c1)) AS REAL)) ISNULL));
SELECT DISTINCT * FROM vt1, rt1, vt0;
SELECT vt1.c1, vt1.c0, rt1.c2, vt1.c2, rt1.c1, rt0.c2 FROM rt0, vt1 CROSS JOIN rt1 ON ((((((rt1.c0)AND(-1767157790)))OR(rt1.c2)))GLOB(rt1.c2)) LEFT OUTER JOIN vt0 ON rt0.c0 GROUP BY vt1.c1, vt1.c0, rt1.c2, vt1.c2, rt1.c1, rt0.c2;
SELECT ALL vt1.c1, vt1.c0, rt1.c2, vt1.c2, rt1.c1, rt0.c2 FROM rt0, vt1 CROSS JOIN rt1 ON ((((((rt1.c0)AND(-1767157790)))OR(rt1.c2)))GLOB(rt1.c2)) LEFT OUTER JOIN vt0 ON rt0.c0 WHERE ((((vt1.c3))>=((rt0.c0))) COLLATE RTRIM) GROUP BY vt1.c1, vt1.c0, rt1.c2, vt1.c2, rt1.c1, rt0.c2 UNION SELECT ALL vt1.c1, vt1.c0, rt1.c2, vt1.c2, rt1.c1, rt0.c2 FROM rt0, vt1 CROSS JOIN rt1 ON ((((((rt1.c0)AND(-1767157790)))OR(rt1.c2)))GLOB(rt1.c2)) LEFT OUTER JOIN vt0 ON rt0.c0 WHERE ((NOT ((((vt1.c3))>=((rt0.c0))) COLLATE RTRIM))) GROUP BY vt1.c1, vt1.c0, rt1.c2, vt1.c2, rt1.c1, rt0.c2 UNION SELECT vt1.c1, vt1.c0, rt1.c2, vt1.c2, rt1.c1, rt0.c2 FROM rt0, vt1 CROSS JOIN rt1 ON ((((((rt1.c0)AND(-1767157790)))OR(rt1.c2)))GLOB(rt1.c2)) LEFT OUTER JOIN vt0 ON rt0.c0 WHERE ((((((vt1.c3))>=((rt0.c0))) COLLATE RTRIM) ISNULL)) GROUP BY vt1.c1, vt1.c0, rt1.c2, vt1.c2, rt1.c1, rt0.c2;
SELECT vt1.c1, vt1.c0, rt1.c2, vt1.c2, rt1.c1, rt0.c2 FROM rt0, vt1 CROSS JOIN rt1 ON ((((((rt1.c0)AND(-1767157790)))OR(rt1.c2)))GLOB(rt1.c2)) LEFT OUTER JOIN vt0 ON rt0.c0 GROUP BY vt1.c1, vt1.c0, rt1.c2, vt1.c2, rt1.c1, rt0.c2;
SELECT ALL vt0.c0, rt1.c2, rt1.c0 FROM rt1 FULL OUTER JOIN vt0 ON '' GROUP BY vt0.c0, rt1.c2, rt1.c0;
SELECT vt0.c0, rt1.c2, rt1.c0 FROM rt1 FULL OUTER JOIN vt0 ON '' GROUP BY vt0.c0, rt1.c2, rt1.c0 HAVING CAST(CASE vt0.c0  WHEN TOTAL(MAX(rt1.c2)) THEN GROUP_CONCAT(COUNT(*)) END AS REAL) UNION ALL SELECT ALL vt0.c0, rt1.c2, rt1.c0 FROM rt1 FULL OUTER JOIN vt0 ON '' GROUP BY vt0.c0, rt1.c2, rt1.c0 HAVING (NOT (CAST(CASE vt0.c0  WHEN TOTAL(MAX(rt1.c2)) THEN GROUP_CONCAT(COUNT(*)) END AS REAL))) UNION ALL SELECT vt0.c0, rt1.c2, rt1.c0 FROM rt1 FULL OUTER JOIN vt0 ON '' GROUP BY vt0.c0, rt1.c2, rt1.c0 HAVING ((CAST(CASE vt0.c0  WHEN TOTAL(MAX(rt1.c2)) THEN GROUP_CONCAT(COUNT(*)) END AS REAL)) ISNULL);
SELECT * FROM vt1 NATURAL JOIN vt0;
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE (((vt1.c0)<=(((('))Oa'))>((vt1.c1)))))) UNION ALL SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE ((NOT (((vt1.c0)<=(((('))Oa'))>((vt1.c1)))))))) UNION ALL SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE (((((vt1.c0)<=(((('))Oa'))>((vt1.c1)))))) ISNULL));
SELECT * FROM vt1 NATURAL JOIN vt0;
SELECT DISTINCT rt1.c2, rt1.c1 FROM rt1;
SELECT DISTINCT rt1.c2, rt1.c1 FROM rt1 WHERE (rt1.c2) UNION SELECT DISTINCT rt1.c2, rt1.c1 FROM rt1 WHERE ((NOT (rt1.c2))) UNION SELECT DISTINCT rt1.c2, rt1.c1 FROM rt1 WHERE (((rt1.c2) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c1 FROM rt1;
SELECT rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c3;
SELECT rt0.c0, rt0.c3 FROM rt0 WHERE (((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN x'' WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END) IS TRUE)) GROUP BY rt0.c0, rt0.c3 UNION SELECT rt0.c0, rt0.c3 FROM rt0 WHERE ((NOT (((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN x'' WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END) IS TRUE)))) GROUP BY rt0.c0, rt0.c3 UNION SELECT rt0.c0, rt0.c3 FROM rt0 WHERE (((((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN x'' WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END) IS TRUE)) ISNULL)) GROUP BY rt0.c0, rt0.c3;
SELECT rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c3;
SELECT rt1.c2, rt1.c0, vt1.c3, vt1.c2, vt1.c1, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, rt1.c0, vt1.c3, vt1.c2, vt1.c1, vt1.c0;
SELECT rt1.c2, rt1.c0, vt1.c3, vt1.c2, vt1.c1, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, rt1.c0, vt1.c3, vt1.c2, vt1.c1, vt1.c0 HAVING (~ (TOTAL(rt1.c2))) UNION ALL SELECT ALL rt1.c2, rt1.c0, vt1.c3, vt1.c2, vt1.c1, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, rt1.c0, vt1.c3, vt1.c2, vt1.c1, vt1.c0 HAVING (NOT ((~ (TOTAL(rt1.c2))))) UNION ALL SELECT ALL rt1.c2, rt1.c0, vt1.c3, vt1.c2, vt1.c1, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, rt1.c0, vt1.c3, vt1.c2, vt1.c1, vt1.c0 HAVING (((~ (TOTAL(rt1.c2)))) ISNULL);
SELECT rt1.c2, rt1.c0, vt1.c3, vt1.c2, vt1.c1, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, rt1.c0, vt1.c3, vt1.c2, vt1.c1, vt1.c0;
SELECT rt1.c2, rt1.c0, vt1.c3, vt1.c2, vt1.c1, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, rt1.c0, vt1.c3, vt1.c2, vt1.c1, vt1.c0 HAVING (~ (TOTAL(rt1.c2))) UNION ALL SELECT ALL rt1.c2, rt1.c0, vt1.c3, vt1.c2, vt1.c1, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, rt1.c0, vt1.c3, vt1.c2, vt1.c1, vt1.c0 HAVING (NOT ((~ (TOTAL(rt1.c2))))) UNION ALL SELECT ALL rt1.c2, rt1.c0, vt1.c3, vt1.c2, vt1.c1, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, rt1.c0, vt1.c3, vt1.c2, vt1.c1, vt1.c0 HAVING (((~ (TOTAL(rt1.c2)))) ISNULL);
SELECT rt1.c2, rt1.c0, vt1.c3, vt1.c2, vt1.c1, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, rt1.c0, vt1.c3, vt1.c2, vt1.c1, vt1.c0;
SELECT ALL * FROM rt1;
SELECT * FROM rt1 WHERE (((((rt1.c1) IS FALSE)) BETWEEN ((((rt1.c1, rt1.c0, rt1.c1))<((rt1.c2, rt1.c1, rt1.c0)))) AND (((((((((rt1.c0)OR(rt1.c1)))OR(rt1.c1)))OR(rt1.c1)))OR(rt1.c0))))) UNION ALL SELECT * FROM rt1 WHERE ((NOT (((((rt1.c1) IS FALSE)) BETWEEN ((((rt1.c1, rt1.c0, rt1.c1))<((rt1.c2, rt1.c1, rt1.c0)))) AND (((((((((rt1.c0)OR(rt1.c1)))OR(rt1.c1)))OR(rt1.c1)))OR(rt1.c0))))))) UNION ALL SELECT * FROM rt1 WHERE (((((((rt1.c1) IS FALSE)) BETWEEN ((((rt1.c1, rt1.c0, rt1.c1))<((rt1.c2, rt1.c1, rt1.c0)))) AND (((((((((rt1.c0)OR(rt1.c1)))OR(rt1.c1)))OR(rt1.c1)))OR(rt1.c0))))) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((CASE WHEN vt1.c3 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c2 THEN vt1.c3 WHEN vt1.c2 THEN vt1.c0 ELSE vt1.c1 END) BETWEEN (COALESCE(DISTINCT vt1.c3, vt1.c1)) AND (vt1.c3))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((CASE WHEN vt1.c3 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c2 THEN vt1.c3 WHEN vt1.c2 THEN vt1.c0 ELSE vt1.c1 END) BETWEEN (COALESCE(DISTINCT vt1.c3, vt1.c1)) AND (vt1.c3))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((CASE WHEN vt1.c3 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c2 THEN vt1.c3 WHEN vt1.c2 THEN vt1.c0 ELSE vt1.c1 END) BETWEEN (COALESCE(DISTINCT vt1.c3, vt1.c1)) AND (vt1.c3))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt1.c3, rt1.c0, vt1.c0, rt1.c2 FROM rt0, vt1, rt1 GROUP BY vt1.c3, rt1.c0, vt1.c0, rt1.c2;
SELECT ALL vt1.c3, rt1.c0, vt1.c0, rt1.c2 FROM rt0, vt1, rt1 WHERE (CASE (~ (vt1.c1))  WHEN (- (vt1.c0)) THEN ((rt0.c3)&(rt0.c1)) END) GROUP BY vt1.c3, rt1.c0, vt1.c0, rt1.c2 UNION SELECT ALL vt1.c3, rt1.c0, vt1.c0, rt1.c2 FROM rt0, vt1, rt1 WHERE ((NOT (CASE (~ (vt1.c1))  WHEN (- (vt1.c0)) THEN ((rt0.c3)&(rt0.c1)) END))) GROUP BY vt1.c3, rt1.c0, vt1.c0, rt1.c2 UNION SELECT vt1.c3, rt1.c0, vt1.c0, rt1.c2 FROM rt0, vt1, rt1 WHERE (((CASE (~ (vt1.c1))  WHEN (- (vt1.c0)) THEN ((rt0.c3)&(rt0.c1)) END) ISNULL)) GROUP BY vt1.c3, rt1.c0, vt1.c0, rt1.c2;
SELECT ALL vt1.c3, rt1.c0, vt1.c0, rt1.c2 FROM rt0, vt1, rt1 GROUP BY vt1.c3, rt1.c0, vt1.c0, rt1.c2;
SELECT rt1.c0, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1;
SELECT rt1.c0, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1 HAVING ((COUNT(*))-(COUNT(rt1.c0))) UNION ALL SELECT rt1.c0, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1 HAVING (NOT (((COUNT(*))-(COUNT(rt1.c0))))) UNION ALL SELECT rt1.c0, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1 HAVING ((((COUNT(*))-(COUNT(rt1.c0)))) ISNULL);
SELECT rt1.c0, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1;
SELECT rt1.c0, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1 HAVING ((COUNT(*))-(COUNT(rt1.c0))) UNION ALL SELECT rt1.c0, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1 HAVING (NOT (((COUNT(*))-(COUNT(rt1.c0))))) UNION ALL SELECT rt1.c0, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1 HAVING ((((COUNT(*))-(COUNT(rt1.c0)))) ISNULL);
SELECT rt1.c0, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1;
SELECT ALL * FROM rt1, rt0, vt0;
SELECT ALL * FROM rt1, rt0, vt0 WHERE ((- (TIME(rt1.c1, rt0.c3, rt1.c0)))) UNION ALL SELECT * FROM rt1, rt0, vt0 WHERE ((NOT ((- (TIME(rt1.c1, rt0.c3, rt1.c0)))))) UNION ALL SELECT ALL * FROM rt1, rt0, vt0 WHERE ((((- (TIME(rt1.c1, rt0.c3, rt1.c0)))) ISNULL));
SELECT ALL * FROM rt1, rt0, vt0;
SELECT DISTINCT rt1.c1, rt1.c0, vt0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM vt0 INNER JOIN rt1 ON (((rt0.c0)) NOT BETWEEN ((((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt1.c2)))) AND ((((rt0.c1)<<(rt0.c2))))) INNER JOIN rt0 ON (((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c0))))*(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c3 END));
SELECT DISTINCT rt1.c1, rt1.c0, vt0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM vt0 INNER JOIN rt1 ON (((rt0.c0)) NOT BETWEEN ((((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt1.c2)))) AND ((((rt0.c1)<<(rt0.c2))))) INNER JOIN rt0 ON (((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c0))))*(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c3 END)) WHERE (CASE CHANGES()  WHEN ((vt0.c0)&(rt0.c2)) THEN (rt0.c0 IN (-1.726132508E9, vt0.c0)) ELSE (((rt0.c1))>((rt0.c1))) END) UNION SELECT DISTINCT rt1.c1, rt1.c0, vt0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM vt0 INNER JOIN rt1 ON (((rt0.c0)) NOT BETWEEN ((((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt1.c2)))) AND ((((rt0.c1)<<(rt0.c2))))) INNER JOIN rt0 ON (((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c0))))*(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c3 END)) WHERE ((NOT (CASE CHANGES()  WHEN ((vt0.c0)&(rt0.c2)) THEN (rt0.c0 IN (-1.726132508E9, vt0.c0)) ELSE (((rt0.c1))>((rt0.c1))) END))) UNION SELECT DISTINCT rt1.c1, rt1.c0, vt0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM vt0 INNER JOIN rt1 ON (((rt0.c0)) NOT BETWEEN ((((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt1.c2)))) AND ((((rt0.c1)<<(rt0.c2))))) INNER JOIN rt0 ON (((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c0))))*(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c3 END)) WHERE (((CASE CHANGES()  WHEN ((vt0.c0)&(rt0.c2)) THEN (rt0.c0 IN (-1.726132508E9, vt0.c0)) ELSE (((rt0.c1))>((rt0.c1))) END) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c0, vt0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM vt0 INNER JOIN rt1 ON (((rt0.c0)) NOT BETWEEN ((((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt1.c2)))) AND ((((rt0.c1)<<(rt0.c2))))) INNER JOIN rt0 ON (((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c0))))*(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c3 END));
SELECT vt0.c0, rt1.c1, rt1.c0, vt1.c0, rt1.c2, rt0.c3, vt1.c2, rt0.c0, vt1.c3, rt0.c2 FROM vt1, rt1 FULL OUTER JOIN vt0 ON json_extract('', (+ (rt1.c1))) RIGHT OUTER JOIN rt0 ON ((vt1.c3 COLLATE RTRIM)<(rt0.c3)) GROUP BY vt0.c0, rt1.c1, rt1.c0, vt1.c0, rt1.c2, rt0.c3, vt1.c2, rt0.c0, vt1.c3, rt0.c2;
SELECT vt0.c0, rt1.c1, rt1.c0, vt1.c0, rt1.c2, rt0.c3, vt1.c2, rt0.c0, vt1.c3, rt0.c2 FROM vt1, rt1 FULL OUTER JOIN vt0 ON json_extract('', (+ (rt1.c1))) RIGHT OUTER JOIN rt0 ON ((vt1.c3 COLLATE RTRIM)<(rt0.c3)) WHERE (vt1.c3) GROUP BY vt0.c0, rt1.c1, rt1.c0, vt1.c0, rt1.c2, rt0.c3, vt1.c2, rt0.c0, vt1.c3, rt0.c2 UNION SELECT vt0.c0, rt1.c1, rt1.c0, vt1.c0, rt1.c2, rt0.c3, vt1.c2, rt0.c0, vt1.c3, rt0.c2 FROM vt1, rt1 FULL OUTER JOIN vt0 ON json_extract('', (+ (rt1.c1))) RIGHT OUTER JOIN rt0 ON ((vt1.c3 COLLATE RTRIM)<(rt0.c3)) WHERE ((NOT (vt1.c3))) GROUP BY vt0.c0, rt1.c1, rt1.c0, vt1.c0, rt1.c2, rt0.c3, vt1.c2, rt0.c0, vt1.c3, rt0.c2 UNION SELECT vt0.c0, rt1.c1, rt1.c0, vt1.c0, rt1.c2, rt0.c3, vt1.c2, rt0.c0, vt1.c3, rt0.c2 FROM vt1, rt1 FULL OUTER JOIN vt0 ON json_extract('', (+ (rt1.c1))) RIGHT OUTER JOIN rt0 ON ((vt1.c3 COLLATE RTRIM)<(rt0.c3)) WHERE (((vt1.c3) ISNULL)) GROUP BY vt0.c0, rt1.c1, rt1.c0, vt1.c0, rt1.c2, rt0.c3, vt1.c2, rt0.c0, vt1.c3, rt0.c2;
SELECT vt0.c0, rt1.c1, rt1.c0, vt1.c0, rt1.c2, rt0.c3, vt1.c2, rt0.c0, vt1.c3, rt0.c2 FROM vt1, rt1 FULL OUTER JOIN vt0 ON json_extract('', (+ (rt1.c1))) RIGHT OUTER JOIN rt0 ON ((vt1.c3 COLLATE RTRIM)<(rt0.c3)) GROUP BY vt0.c0, rt1.c1, rt1.c0, vt1.c0, rt1.c2, rt0.c3, vt1.c2, rt0.c0, vt1.c3, rt0.c2;
SELECT rt0.c1, rt0.c0, vt0.c0, vt1.c3, rt0.c2, rt1.c1, rt0.c3, rt1.c0, vt1.c1, vt1.c0 FROM rt0, vt1, vt0 NATURAL JOIN rt1 GROUP BY rt0.c1, rt0.c0, vt0.c0, vt1.c3, rt0.c2, rt1.c1, rt0.c3, rt1.c0, vt1.c1, vt1.c0;
SELECT rt0.c1, rt0.c0, vt0.c0, vt1.c3, rt0.c2, rt1.c1, rt0.c3, rt1.c0, vt1.c1, vt1.c0 FROM rt0, vt1, vt0 NATURAL JOIN rt1 GROUP BY rt0.c1, rt0.c0, vt0.c0, vt1.c3, rt0.c2, rt1.c1, rt0.c3, rt1.c0, vt1.c1, vt1.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c1, rt0.c0, vt0.c0, vt1.c3, rt0.c2, rt1.c1, rt0.c3, rt1.c0, vt1.c1, vt1.c0 FROM rt0, vt1, vt0 NATURAL JOIN rt1 GROUP BY rt0.c1, rt0.c0, vt0.c0, vt1.c3, rt0.c2, rt1.c1, rt0.c3, rt1.c0, vt1.c1, vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c1, rt0.c0, vt0.c0, vt1.c3, rt0.c2, rt1.c1, rt0.c3, rt1.c0, vt1.c1, vt1.c0 FROM rt0, vt1, vt0 NATURAL JOIN rt1 GROUP BY rt0.c1, rt0.c0, vt0.c0, vt1.c3, rt0.c2, rt1.c1, rt0.c3, rt1.c0, vt1.c1, vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, rt0.c0, vt0.c0, vt1.c3, rt0.c2, rt1.c1, rt0.c3, rt1.c0, vt1.c1, vt1.c0 FROM rt0, vt1, vt0 NATURAL JOIN rt1 GROUP BY rt0.c1, rt0.c0, vt0.c0, vt1.c3, rt0.c2, rt1.c1, rt0.c3, rt1.c0, vt1.c1, vt1.c0;
SELECT rt0.c1, rt0.c0, vt0.c0, vt1.c3, rt0.c2, rt1.c1, rt0.c3, rt1.c0, vt1.c1, vt1.c0 FROM rt0, vt1, vt0 NATURAL JOIN rt1 GROUP BY rt0.c1, rt0.c0, vt0.c0, vt1.c3, rt0.c2, rt1.c1, rt0.c3, rt1.c0, vt1.c1, vt1.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c1, rt0.c0, vt0.c0, vt1.c3, rt0.c2, rt1.c1, rt0.c3, rt1.c0, vt1.c1, vt1.c0 FROM rt0, vt1, vt0 NATURAL JOIN rt1 GROUP BY rt0.c1, rt0.c0, vt0.c0, vt1.c3, rt0.c2, rt1.c1, rt0.c3, rt1.c0, vt1.c1, vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c1, rt0.c0, vt0.c0, vt1.c3, rt0.c2, rt1.c1, rt0.c3, rt1.c0, vt1.c1, vt1.c0 FROM rt0, vt1, vt0 NATURAL JOIN rt1 GROUP BY rt0.c1, rt0.c0, vt0.c0, vt1.c3, rt0.c2, rt1.c1, rt0.c3, rt1.c0, vt1.c1, vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, rt0.c0, vt0.c0, vt1.c3, rt0.c2, rt1.c1, rt0.c3, rt1.c0, vt1.c1, vt1.c0 FROM rt0, vt1, vt0 NATURAL JOIN rt1 GROUP BY rt0.c1, rt0.c0, vt0.c0, vt1.c3, rt0.c2, rt1.c1, rt0.c3, rt1.c0, vt1.c1, vt1.c0;
SELECT ALL rt1.c2, rt1.c1 FROM vt1, vt0, rt1;
SELECT ALL rt1.c2, rt1.c1 FROM vt1, vt0, rt1 WHERE (((CAST(NULL AS TEXT)) BETWEEN (CASE vt0.c0  WHEN rt1.c1 THEN rt1.c0 ELSE vt1.c1 END) AND (((vt1.c0)>=(vt1.c0))))) UNION ALL SELECT rt1.c2, rt1.c1 FROM vt1, vt0, rt1 WHERE ((NOT (((CAST(NULL AS TEXT)) BETWEEN (CASE vt0.c0  WHEN rt1.c1 THEN rt1.c0 ELSE vt1.c1 END) AND (((vt1.c0)>=(vt1.c0))))))) UNION ALL SELECT ALL rt1.c2, rt1.c1 FROM vt1, vt0, rt1 WHERE (((((CAST(NULL AS TEXT)) BETWEEN (CASE vt0.c0  WHEN rt1.c1 THEN rt1.c0 ELSE vt1.c1 END) AND (((vt1.c0)>=(vt1.c0))))) ISNULL));
SELECT ALL rt1.c2, rt1.c1 FROM vt1, vt0, rt1;
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN rt1 ON ((((rt1.c0) NOTNULL))&(((rt1.c2) IS FALSE)));
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN rt1 ON ((((rt1.c0) NOTNULL))&(((rt1.c2) IS FALSE))) WHERE (CAST((((rt1.c0))<((rt1.c1))) AS BLOB)) UNION SELECT DISTINCT * FROM vt0 FULL OUTER JOIN rt1 ON ((((rt1.c0) NOTNULL))&(((rt1.c2) IS FALSE))) WHERE ((NOT (CAST((((rt1.c0))<((rt1.c1))) AS BLOB)))) UNION SELECT DISTINCT * FROM vt0 FULL OUTER JOIN rt1 ON ((((rt1.c0) NOTNULL))&(((rt1.c2) IS FALSE))) WHERE (((CAST((((rt1.c0))<((rt1.c1))) AS BLOB)) ISNULL));
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN rt1 ON ((((rt1.c0) NOTNULL))&(((rt1.c2) IS FALSE)));
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((((rt0.c1 IN (rt0.c3))) NOT BETWEEN ((rt0.c1 IN (rt0.c1, rt0.c3))) AND (''))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c1 IN (rt0.c3))) NOT BETWEEN ((rt0.c1 IN (rt0.c1, rt0.c3))) AND (''))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((((((rt0.c1 IN (rt0.c3))) NOT BETWEEN ((rt0.c1 IN (rt0.c1, rt0.c3))) AND (''))) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT vt1.c2, vt0.c0, vt1.c3, vt1.c0, rt0.c1, rt0.c2 FROM vt1, rt0 INNER JOIN vt0 ON (+ (((vt1.c1)|(rt0.c0)))) GROUP BY vt1.c2, vt0.c0, vt1.c3, vt1.c0, rt0.c1, rt0.c2;
SELECT vt1.c2, vt0.c0, vt1.c3, vt1.c0, rt0.c1, rt0.c2 FROM vt1, rt0 INNER JOIN vt0 ON (+ (((vt1.c1)|(rt0.c0)))) GROUP BY vt1.c2, vt0.c0, vt1.c3, vt1.c0, rt0.c1, rt0.c2 HAVING TOTAL(0.1490730755767703) UNION ALL SELECT vt1.c2, vt0.c0, vt1.c3, vt1.c0, rt0.c1, rt0.c2 FROM vt1, rt0 INNER JOIN vt0 ON (+ (((vt1.c1)|(rt0.c0)))) GROUP BY vt1.c2, vt0.c0, vt1.c3, vt1.c0, rt0.c1, rt0.c2 HAVING (NOT (TOTAL(0.1490730755767703))) UNION ALL SELECT vt1.c2, vt0.c0, vt1.c3, vt1.c0, rt0.c1, rt0.c2 FROM vt1, rt0 INNER JOIN vt0 ON (+ (((vt1.c1)|(rt0.c0)))) GROUP BY vt1.c2, vt0.c0, vt1.c3, vt1.c0, rt0.c1, rt0.c2 HAVING ((TOTAL(0.1490730755767703)) ISNULL);
SELECT vt1.c2, vt0.c0, vt1.c3, vt1.c0, rt0.c1, rt0.c2 FROM vt1, rt0 INNER JOIN vt0 ON (+ (((vt1.c1)|(rt0.c0)))) GROUP BY vt1.c2, vt0.c0, vt1.c3, vt1.c0, rt0.c1, rt0.c2;
SELECT vt1.c2, vt0.c0, vt1.c3, vt1.c0, rt0.c1, rt0.c2 FROM vt1, rt0 INNER JOIN vt0 ON (+ (((vt1.c1)|(rt0.c0)))) GROUP BY vt1.c2, vt0.c0, vt1.c3, vt1.c0, rt0.c1, rt0.c2 HAVING TOTAL(0.1490730755767703) UNION ALL SELECT vt1.c2, vt0.c0, vt1.c3, vt1.c0, rt0.c1, rt0.c2 FROM vt1, rt0 INNER JOIN vt0 ON (+ (((vt1.c1)|(rt0.c0)))) GROUP BY vt1.c2, vt0.c0, vt1.c3, vt1.c0, rt0.c1, rt0.c2 HAVING (NOT (TOTAL(0.1490730755767703))) UNION ALL SELECT vt1.c2, vt0.c0, vt1.c3, vt1.c0, rt0.c1, rt0.c2 FROM vt1, rt0 INNER JOIN vt0 ON (+ (((vt1.c1)|(rt0.c0)))) GROUP BY vt1.c2, vt0.c0, vt1.c3, vt1.c0, rt0.c1, rt0.c2 HAVING ((TOTAL(0.1490730755767703)) ISNULL);
SELECT vt1.c2, vt0.c0, vt1.c3, vt1.c0, rt0.c1, rt0.c2 FROM vt1, rt0 INNER JOIN vt0 ON (+ (((vt1.c1)|(rt0.c0)))) GROUP BY vt1.c2, vt0.c0, vt1.c3, vt1.c0, rt0.c1, rt0.c2;
SELECT ALL * FROM vt0, rt1 NATURAL JOIN rt0;
SELECT ALL * FROM vt0, rt1 NATURAL JOIN rt0 WHERE ((((rt1.c2)) BETWEEN (((~ (rt1.c1)))) AND ((LIKELY(x'600c'))))) UNION ALL SELECT ALL * FROM vt0, rt1 NATURAL JOIN rt0 WHERE ((NOT ((((rt1.c2)) BETWEEN (((~ (rt1.c1)))) AND ((LIKELY(x'600c'))))))) UNION ALL SELECT * FROM vt0, rt1 NATURAL JOIN rt0 WHERE ((((((rt1.c2)) BETWEEN (((~ (rt1.c1)))) AND ((LIKELY(x'600c'))))) ISNULL));
SELECT ALL * FROM vt0, rt1 NATURAL JOIN rt0;
SELECT DISTINCT vt0.c0, vt1.c1, vt1.c3, vt1.c2, vt1.c0, rt0.c3, rt0.c2 FROM rt0 FULL OUTER JOIN vt1 ON ((((vt1.c3) NOT BETWEEN (vt1.c3) AND (vt1.c2))) BETWEEN (((((((((((((vt1.c1)OR('346369027')))OR(vt0.c0)))OR(vt1.c0)))AND(vt1.c1)))AND(rt0.c3)))AND(vt0.c0))) AND (CAST(rt0.c2 AS BLOB))) INNER JOIN vt0 ON ((vt1.c1)<<((((rt0.c1, vt0.c0, vt1.c2)) NOT BETWEEN ((vt1.c2, vt1.c1, vt1.c0)) AND ((rt0.c2, vt1.c2, vt1.c1)))));
SELECT ALL vt1.c0, vt1.c2, rt1.c1 FROM rt1 CROSS JOIN vt1 ON CASE vt1.c2  WHEN rt0.c1 THEN '0.8204287503632675' END COLLATE NOCASE CROSS JOIN vt0 ON ((NULL COLLATE BINARY) BETWEEN (LIKELIHOOD(rt1.c0, 0.9713909042182232)) AND (CAST(rt0.c0 AS INTEGER))) INNER JOIN rt0 ON ((rt1.c1 COLLATE RTRIM)+(((rt1.c1)/(vt1.c3)))) GROUP BY vt1.c0, vt1.c2, rt1.c1;
SELECT vt1.c0, vt1.c2, rt1.c1 FROM rt1 CROSS JOIN vt1 ON CASE vt1.c2  WHEN rt0.c1 THEN '0.8204287503632675' END COLLATE NOCASE CROSS JOIN vt0 ON ((NULL COLLATE BINARY) BETWEEN (LIKELIHOOD(rt1.c0, 0.9713909042182232)) AND (CAST(rt0.c0 AS INTEGER))) INNER JOIN rt0 ON ((rt1.c1 COLLATE RTRIM)+(((rt1.c1)/(vt1.c3)))) WHERE ((((rt1.c0)) BETWEEN ((vt1.c3)) AND ((vt1.c3))) COLLATE BINARY COLLATE BINARY) GROUP BY vt1.c0, vt1.c2, rt1.c1 UNION SELECT ALL vt1.c0, vt1.c2, rt1.c1 FROM rt1 CROSS JOIN vt1 ON CASE vt1.c2  WHEN rt0.c1 THEN '0.8204287503632675' END COLLATE NOCASE CROSS JOIN vt0 ON ((NULL COLLATE BINARY) BETWEEN (LIKELIHOOD(rt1.c0, 0.9713909042182232)) AND (CAST(rt0.c0 AS INTEGER))) INNER JOIN rt0 ON ((rt1.c1 COLLATE RTRIM)+(((rt1.c1)/(vt1.c3)))) WHERE ((NOT ((((rt1.c0)) BETWEEN ((vt1.c3)) AND ((vt1.c3))) COLLATE BINARY COLLATE BINARY))) GROUP BY vt1.c0, vt1.c2, rt1.c1 UNION SELECT ALL vt1.c0, vt1.c2, rt1.c1 FROM rt1 CROSS JOIN vt1 ON CASE vt1.c2  WHEN rt0.c1 THEN '0.8204287503632675' END COLLATE NOCASE CROSS JOIN vt0 ON ((NULL COLLATE BINARY) BETWEEN (LIKELIHOOD(rt1.c0, 0.9713909042182232)) AND (CAST(rt0.c0 AS INTEGER))) INNER JOIN rt0 ON ((rt1.c1 COLLATE RTRIM)+(((rt1.c1)/(vt1.c3)))) WHERE ((((((rt1.c0)) BETWEEN ((vt1.c3)) AND ((vt1.c3))) COLLATE BINARY COLLATE BINARY) ISNULL)) GROUP BY vt1.c0, vt1.c2, rt1.c1;
SELECT ALL vt1.c0, vt1.c2, rt1.c1 FROM rt1 CROSS JOIN vt1 ON CASE vt1.c2  WHEN rt0.c1 THEN '0.8204287503632675' END COLLATE NOCASE CROSS JOIN vt0 ON ((NULL COLLATE BINARY) BETWEEN (LIKELIHOOD(rt1.c0, 0.9713909042182232)) AND (CAST(rt0.c0 AS INTEGER))) INNER JOIN rt0 ON ((rt1.c1 COLLATE RTRIM)+(((rt1.c1)/(vt1.c3)))) GROUP BY vt1.c0, vt1.c2, rt1.c1;
SELECT vt1.c0, vt1.c3 FROM vt1 GROUP BY vt1.c0, vt1.c3;
SELECT vt1.c0, vt1.c3 FROM vt1 GROUP BY vt1.c0, vt1.c3 HAVING AVG(COUNT(*)) UNION ALL SELECT vt1.c0, vt1.c3 FROM vt1 GROUP BY vt1.c0, vt1.c3 HAVING (NOT (AVG(COUNT(*)))) UNION ALL SELECT ALL vt1.c0, vt1.c3 FROM vt1 GROUP BY vt1.c0, vt1.c3 HAVING ((AVG(COUNT(*))) ISNULL);
SELECT * FROM vt0, rt1, rt0, vt1;
SELECT ALL * FROM vt0, rt1, rt0, vt1 WHERE (TRIM(((rt0.c1) NOT BETWEEN ('f lR') AND (rt1.c1)), vt1.c3 COLLATE BINARY)) UNION ALL SELECT ALL * FROM vt0, rt1, rt0, vt1 WHERE ((NOT (TRIM(((rt0.c1) NOT BETWEEN ('f lR') AND (rt1.c1)), vt1.c3 COLLATE BINARY)))) UNION ALL SELECT * FROM vt0, rt1, rt0, vt1 WHERE (((TRIM(((rt0.c1) NOT BETWEEN ('f lR') AND (rt1.c1)), vt1.c3 COLLATE BINARY)) ISNULL));
SELECT * FROM vt0, rt1, rt0, vt1;
SELECT DISTINCT vt1.c3, vt1.c1, vt1.c2, vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c3, vt1.c1, vt1.c2, vt1.c0 FROM vt1 WHERE (LOWER('1229351408')) UNION SELECT DISTINCT vt1.c3, vt1.c1, vt1.c2, vt1.c0 FROM vt1 WHERE ((NOT (LOWER('1229351408')))) UNION SELECT DISTINCT vt1.c3, vt1.c1, vt1.c2, vt1.c0 FROM vt1 WHERE (((LOWER('1229351408')) ISNULL));
SELECT DISTINCT vt1.c3, vt1.c1, vt1.c2, vt1.c0 FROM vt1;
SELECT vt1.c3 FROM vt1 GROUP BY vt1.c3;
SELECT vt1.c3 FROM vt1 WHERE (json_extract(NULL, (vt1.c1 IN (vt1.c3)))) GROUP BY vt1.c3 UNION SELECT ALL vt1.c3 FROM vt1 WHERE ((NOT (json_extract(NULL, (vt1.c1 IN (vt1.c3)))))) GROUP BY vt1.c3 UNION SELECT ALL vt1.c3 FROM vt1 WHERE (((json_extract(NULL, (vt1.c1 IN (vt1.c3)))) ISNULL)) GROUP BY vt1.c3;
SELECT vt1.c3 FROM vt1 GROUP BY vt1.c3;
SELECT vt1.c2, rt1.c1, rt1.c0, vt1.c3, vt0.c0, vt1.c1, rt1.c2 FROM vt1 RIGHT OUTER JOIN rt1 ON (~ ((vt1.c2 IN ()))) INNER JOIN vt0 ON (- (NULL)) GROUP BY vt1.c2, rt1.c1, rt1.c0, vt1.c3, vt0.c0, vt1.c1, rt1.c2;
SELECT ALL vt1.c2, rt1.c1, rt1.c0, vt1.c3, vt0.c0, vt1.c1, rt1.c2 FROM vt1 RIGHT OUTER JOIN rt1 ON (~ ((vt1.c2 IN ()))) INNER JOIN vt0 ON (- (NULL)) GROUP BY vt1.c2, rt1.c1, rt1.c0, vt1.c3, vt0.c0, vt1.c1, rt1.c2 HAVING CASE (- (vt1.c1))  WHEN '0.0' THEN SUM(COUNT(MIN(COUNT(*)))) WHEN CAST(NULL AS TEXT) THEN AVG(vt1.c1) WHEN AVG(MAX(rt1.c0)) THEN COUNT(*) END UNION ALL SELECT ALL vt1.c2, rt1.c1, rt1.c0, vt1.c3, vt0.c0, vt1.c1, rt1.c2 FROM vt1 RIGHT OUTER JOIN rt1 ON (~ ((vt1.c2 IN ()))) INNER JOIN vt0 ON (- (NULL)) GROUP BY vt1.c2, rt1.c1, rt1.c0, vt1.c3, vt0.c0, vt1.c1, rt1.c2 HAVING (NOT (CASE (- (vt1.c1))  WHEN '0.0' THEN SUM(COUNT(MIN(COUNT(*)))) WHEN CAST(NULL AS TEXT) THEN AVG(vt1.c1) WHEN AVG(MAX(rt1.c0)) THEN COUNT(*) END)) UNION ALL SELECT ALL vt1.c2, rt1.c1, rt1.c0, vt1.c3, vt0.c0, vt1.c1, rt1.c2 FROM vt1 RIGHT OUTER JOIN rt1 ON (~ ((vt1.c2 IN ()))) INNER JOIN vt0 ON (- (NULL)) GROUP BY vt1.c2, rt1.c1, rt1.c0, vt1.c3, vt0.c0, vt1.c1, rt1.c2 HAVING ((CASE (- (vt1.c1))  WHEN '0.0' THEN SUM(COUNT(MIN(COUNT(*)))) WHEN CAST(NULL AS TEXT) THEN AVG(vt1.c1) WHEN AVG(MAX(rt1.c0)) THEN COUNT(*) END) ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c3 FROM rt0;
SELECT ALL rt0.c1, rt0.c2, rt0.c3 FROM rt0 WHERE ((((rt0.c3, CAST(rt0.c2 AS NUMERIC), (~ (rt0.c1))))>=((((rt0.c1) ISNULL), ((((((((rt0.c3)AND(rt0.c3)))OR(rt0.c3)))OR(rt0.c3)))AND(rt0.c2)), ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c3)))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c3 FROM rt0 WHERE ((NOT ((((rt0.c3, CAST(rt0.c2 AS NUMERIC), (~ (rt0.c1))))>=((((rt0.c1) ISNULL), ((((((((rt0.c3)AND(rt0.c3)))OR(rt0.c3)))OR(rt0.c3)))AND(rt0.c2)), ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c3)))))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c3 FROM rt0 WHERE ((((((rt0.c3, CAST(rt0.c2 AS NUMERIC), (~ (rt0.c1))))>=((((rt0.c1) ISNULL), ((((((((rt0.c3)AND(rt0.c3)))OR(rt0.c3)))OR(rt0.c3)))AND(rt0.c2)), ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c3)))))) ISNULL));
SELECT rt0.c1, rt0.c2, rt0.c3 FROM rt0;
SELECT DISTINCT * FROM vt0, rt1;
SELECT DISTINCT * FROM vt0, rt1 WHERE (UPPER(TRIM(rt1.c2, vt0.c0))) UNION SELECT DISTINCT * FROM vt0, rt1 WHERE ((NOT (UPPER(TRIM(rt1.c2, vt0.c0))))) UNION SELECT DISTINCT * FROM vt0, rt1 WHERE (((UPPER(TRIM(rt1.c2, vt0.c0))) ISNULL));
SELECT DISTINCT * FROM vt0, rt1;
SELECT ALL rt1.c0, rt0.c3 FROM rt1, vt1, vt0, rt0 GROUP BY rt1.c0, rt0.c3;
SELECT ALL rt1.c0, rt0.c3 FROM rt1, vt1, vt0, rt0 WHERE (((((vt1.c2)==(vt0.c0))) NOT BETWEEN (CASE WHEN rt0.c1 THEN vt1.c0 WHEN rt1.c1 THEN rt1.c2 WHEN rt0.c2 THEN vt1.c0 ELSE vt1.c0 END) AND (rt0.c0 COLLATE NOCASE))) GROUP BY rt1.c0, rt0.c3 UNION SELECT rt1.c0, rt0.c3 FROM rt1, vt1, vt0, rt0 WHERE ((NOT (((((vt1.c2)==(vt0.c0))) NOT BETWEEN (CASE WHEN rt0.c1 THEN vt1.c0 WHEN rt1.c1 THEN rt1.c2 WHEN rt0.c2 THEN vt1.c0 ELSE vt1.c0 END) AND (rt0.c0 COLLATE NOCASE))))) GROUP BY rt1.c0, rt0.c3 UNION SELECT ALL rt1.c0, rt0.c3 FROM rt1, vt1, vt0, rt0 WHERE (((((((vt1.c2)==(vt0.c0))) NOT BETWEEN (CASE WHEN rt0.c1 THEN vt1.c0 WHEN rt1.c1 THEN rt1.c2 WHEN rt0.c2 THEN vt1.c0 ELSE vt1.c0 END) AND (rt0.c0 COLLATE NOCASE))) ISNULL)) GROUP BY rt1.c0, rt0.c3;
SELECT ALL rt1.c0, rt0.c3 FROM rt1, vt1, vt0, rt0 GROUP BY rt1.c0, rt0.c3;
SELECT ALL rt0.c3 FROM rt0, vt1 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0, vt1 GROUP BY rt0.c3 HAVING TOTAL(TOTAL(COUNT(*))) UNION ALL SELECT rt0.c3 FROM rt0, vt1 GROUP BY rt0.c3 HAVING (NOT (TOTAL(TOTAL(COUNT(*))))) UNION ALL SELECT rt0.c3 FROM rt0, vt1 GROUP BY rt0.c3 HAVING ((TOTAL(TOTAL(COUNT(*)))) ISNULL);
SELECT vt1.c2 FROM vt1, rt1;
SELECT ALL vt1.c2 FROM vt1, rt1 WHERE (HEX(DISTINCT ((NULL) NOT BETWEEN (rt1.c1) AND (vt1.c0)))) UNION ALL SELECT vt1.c2 FROM vt1, rt1 WHERE ((NOT (HEX(DISTINCT ((NULL) NOT BETWEEN (rt1.c1) AND (vt1.c0)))))) UNION ALL SELECT ALL vt1.c2 FROM vt1, rt1 WHERE (((HEX(DISTINCT ((NULL) NOT BETWEEN (rt1.c1) AND (vt1.c0)))) ISNULL));
SELECT vt1.c2 FROM vt1, rt1;
SELECT DISTINCT rt0.c2, vt1.c3, vt1.c2, rt0.c0, vt1.c0, rt0.c3, rt0.c1, vt1.c1 FROM rt0, vt1;
SELECT DISTINCT rt0.c2, vt1.c3, vt1.c2, rt0.c0, vt1.c0, rt0.c3, rt0.c1, vt1.c1 FROM rt0, vt1 WHERE (((vt1.c2 COLLATE NOCASE)LIKE((((vt1.c2, vt1.c1, rt0.c1))<((vt1.c0, vt1.c2, rt0.c3)))))) UNION SELECT DISTINCT rt0.c2, vt1.c3, vt1.c2, rt0.c0, vt1.c0, rt0.c3, rt0.c1, vt1.c1 FROM rt0, vt1 WHERE ((NOT (((vt1.c2 COLLATE NOCASE)LIKE((((vt1.c2, vt1.c1, rt0.c1))<((vt1.c0, vt1.c2, rt0.c3)))))))) UNION SELECT DISTINCT rt0.c2, vt1.c3, vt1.c2, rt0.c0, vt1.c0, rt0.c3, rt0.c1, vt1.c1 FROM rt0, vt1 WHERE (((((vt1.c2 COLLATE NOCASE)LIKE((((vt1.c2, vt1.c1, rt0.c1))<((vt1.c0, vt1.c2, rt0.c3)))))) ISNULL));
SELECT DISTINCT rt0.c2, vt1.c3, vt1.c2, rt0.c0, vt1.c0, rt0.c3, rt0.c1, vt1.c1 FROM rt0, vt1;
SELECT ALL vt1.c0, vt1.c1, rt1.c2, rt1.c0 FROM vt0, vt1 RIGHT OUTER JOIN rt1 ON rt1.c2 GROUP BY vt1.c0, vt1.c1, rt1.c2, rt1.c0;
SELECT vt1.c0, vt1.c1, rt1.c2, rt1.c0 FROM vt0, vt1 RIGHT OUTER JOIN rt1 ON rt1.c2 WHERE ((((rt1.c2 IN ())) NOT BETWEEN (((vt1.c3) ISNULL)) AND (0.2968340483146885))) GROUP BY vt1.c0, vt1.c1, rt1.c2, rt1.c0 UNION SELECT ALL vt1.c0, vt1.c1, rt1.c2, rt1.c0 FROM vt0, vt1 RIGHT OUTER JOIN rt1 ON rt1.c2 WHERE ((NOT ((((rt1.c2 IN ())) NOT BETWEEN (((vt1.c3) ISNULL)) AND (0.2968340483146885))))) GROUP BY vt1.c0, vt1.c1, rt1.c2, rt1.c0 UNION SELECT ALL vt1.c0, vt1.c1, rt1.c2, rt1.c0 FROM vt0, vt1 RIGHT OUTER JOIN rt1 ON rt1.c2 WHERE ((((((rt1.c2 IN ())) NOT BETWEEN (((vt1.c3) ISNULL)) AND (0.2968340483146885))) ISNULL)) GROUP BY vt1.c0, vt1.c1, rt1.c2, rt1.c0;
SELECT ALL vt1.c0, vt1.c1, rt1.c2, rt1.c0 FROM vt0, vt1 RIGHT OUTER JOIN rt1 ON rt1.c2 GROUP BY vt1.c0, vt1.c1, rt1.c2, rt1.c0;
SELECT ALL vt1.c1, vt1.c0, vt1.c3 FROM vt1 GROUP BY vt1.c1, vt1.c0, vt1.c3;
SELECT vt1.c1, vt1.c0, vt1.c3 FROM vt1 GROUP BY vt1.c1, vt1.c0, vt1.c3 HAVING GROUP_CONCAT(MIN(GROUP_CONCAT(vt1.c0))) UNION ALL SELECT vt1.c1, vt1.c0, vt1.c3 FROM vt1 GROUP BY vt1.c1, vt1.c0, vt1.c3 HAVING (NOT (GROUP_CONCAT(MIN(GROUP_CONCAT(vt1.c0))))) UNION ALL SELECT ALL vt1.c1, vt1.c0, vt1.c3 FROM vt1 GROUP BY vt1.c1, vt1.c0, vt1.c3 HAVING ((GROUP_CONCAT(MIN(GROUP_CONCAT(vt1.c0)))) ISNULL);
SELECT ALL rt0.c1 FROM rt0, vt0;
SELECT ALL rt0.c1 FROM rt0, vt0 WHERE (IFNULL(DISTINCT (((rt0.c1, rt0.c0, vt0.c0, rt0.c1, '1203106960')) NOT BETWEEN ((rt0.c1, rt0.c2, '럍&', rt0.c1, rt0.c0)) AND ((rt0.c0, rt0.c0, NULL, vt0.c0, rt0.c2))), TYPEOF(rt0.c1))) UNION ALL SELECT rt0.c1 FROM rt0, vt0 WHERE ((NOT (IFNULL(DISTINCT (((rt0.c1, rt0.c0, vt0.c0, rt0.c1, '1203106960')) NOT BETWEEN ((rt0.c1, rt0.c2, '럍&', rt0.c1, rt0.c0)) AND ((rt0.c0, rt0.c0, NULL, vt0.c0, rt0.c2))), TYPEOF(rt0.c1))))) UNION ALL SELECT ALL rt0.c1 FROM rt0, vt0 WHERE (((IFNULL(DISTINCT (((rt0.c1, rt0.c0, vt0.c0, rt0.c1, '1203106960')) NOT BETWEEN ((rt0.c1, rt0.c2, '럍&', rt0.c1, rt0.c0)) AND ((rt0.c0, rt0.c0, NULL, vt0.c0, rt0.c2))), TYPEOF(rt0.c1))) ISNULL));
SELECT ALL rt0.c1 FROM rt0, vt0;
SELECT DISTINCT rt0.c2, rt0.c3, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c3, rt0.c0 FROM rt0 WHERE (CASE ((rt0.c2)|(rt0.c2))  WHEN (rt0.c1 IN (rt0.c2)) THEN (((rt0.c1, rt0.c3, rt0.c3)) NOT BETWEEN ((rt0.c1, rt0.c3, rt0.c0)) AND ((rt0.c2, rt0.c2, rt0.c1))) END) UNION SELECT DISTINCT rt0.c2, rt0.c3, rt0.c0 FROM rt0 WHERE ((NOT (CASE ((rt0.c2)|(rt0.c2))  WHEN (rt0.c1 IN (rt0.c2)) THEN (((rt0.c1, rt0.c3, rt0.c3)) NOT BETWEEN ((rt0.c1, rt0.c3, rt0.c0)) AND ((rt0.c2, rt0.c2, rt0.c1))) END))) UNION SELECT DISTINCT rt0.c2, rt0.c3, rt0.c0 FROM rt0 WHERE (((CASE ((rt0.c2)|(rt0.c2))  WHEN (rt0.c1 IN (rt0.c2)) THEN (((rt0.c1, rt0.c3, rt0.c3)) NOT BETWEEN ((rt0.c1, rt0.c3, rt0.c0)) AND ((rt0.c2, rt0.c2, rt0.c1))) END) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c3, rt0.c0 FROM rt0;
SELECT ALL vt1.c0, rt1.c1, rt0.c0, rt0.c1, rt0.c3, vt1.c3, vt0.c0, vt1.c1, rt1.c0, rt0.c2 FROM rt1, rt0 FULL OUTER JOIN vt0 ON CAST(((vt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c0)) AS INTEGER) LEFT OUTER JOIN vt1 ON ((CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END) BETWEEN ((NOT (vt1.c0))) AND (((rt0.c1)<(vt1.c2)))) GROUP BY vt1.c0, rt1.c1, rt0.c0, rt0.c1, rt0.c3, vt1.c3, vt0.c0, vt1.c1, rt1.c0, rt0.c2;
SELECT ALL vt0.c0, rt1.c1, rt1.c0, vt1.c1, vt1.c3 FROM rt1 RIGHT OUTER JOIN vt0 ON (NOT (vt1.c0)) COLLATE BINARY CROSS JOIN vt1 ON CAST(vt1.c3 AS REAL) COLLATE NOCASE GROUP BY vt0.c0, rt1.c1, rt1.c0, vt1.c1, vt1.c3;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c1)<<(rt0.c1))))<((CASE rt0.c1  WHEN rt0.c0 THEN 0.9469039257700973 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 END)))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((((((rt0.c1)<<(rt0.c1))))<((CASE rt0.c1  WHEN rt0.c0 THEN 0.9469039257700973 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 END)))))) UNION ALL SELECT * FROM rt0 WHERE ((((((((rt0.c1)<<(rt0.c1))))<((CASE rt0.c1  WHEN rt0.c0 THEN 0.9469039257700973 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 END)))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt1.c1, rt1.c0 FROM rt1, vt0;
SELECT DISTINCT rt1.c1, rt1.c0 FROM rt1, vt0 WHERE (((((rt1.c0)IS(vt0.c0)))IS NOT(((rt1.c1) BETWEEN (rt1.c2) AND (vt0.c0))))) UNION SELECT DISTINCT rt1.c1, rt1.c0 FROM rt1, vt0 WHERE ((NOT (((((rt1.c0)IS(vt0.c0)))IS NOT(((rt1.c1) BETWEEN (rt1.c2) AND (vt0.c0))))))) UNION SELECT DISTINCT rt1.c1, rt1.c0 FROM rt1, vt0 WHERE (((((((rt1.c0)IS(vt0.c0)))IS NOT(((rt1.c1) BETWEEN (rt1.c2) AND (vt0.c0))))) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c0 FROM rt1, vt0;
SELECT rt0.c0, vt1.c0, vt1.c2, vt1.c1 FROM rt0 NOT INDEXED, vt0 LEFT OUTER JOIN vt1 ON ((((rt0.c2)|(vt1.c1)))||(((((vt1.c3)OR(0.6710629651235729)))OR(vt1.c3)))) GROUP BY rt0.c0, vt1.c0, vt1.c2, vt1.c1;
SELECT ALL rt0.c0, vt1.c0, vt1.c2, vt1.c1 FROM rt0, vt0 LEFT OUTER JOIN vt1 ON ((((rt0.c2)|(vt1.c1)))||(((((vt1.c3)OR(0.6710629651235729)))OR(vt1.c3)))) WHERE ((((CAST(rt0.c3 AS TEXT)))<((((vt1.c0) ISNULL))))) GROUP BY rt0.c0, vt1.c0, vt1.c2, vt1.c1 UNION SELECT rt0.c0, vt1.c0, vt1.c2, vt1.c1 FROM rt0, vt0 LEFT OUTER JOIN vt1 ON ((((rt0.c2)|(vt1.c1)))||(((((vt1.c3)OR(0.6710629651235729)))OR(vt1.c3)))) WHERE ((NOT ((((CAST(rt0.c3 AS TEXT)))<((((vt1.c0) ISNULL))))))) GROUP BY rt0.c0, vt1.c0, vt1.c2, vt1.c1 UNION SELECT rt0.c0, vt1.c0, vt1.c2, vt1.c1 FROM rt0, vt0 LEFT OUTER JOIN vt1 ON ((((rt0.c2)|(vt1.c1)))||(((((vt1.c3)OR(0.6710629651235729)))OR(vt1.c3)))) WHERE ((((((CAST(rt0.c3 AS TEXT)))<((((vt1.c0) ISNULL))))) ISNULL)) GROUP BY rt0.c0, vt1.c0, vt1.c2, vt1.c1;
SELECT rt0.c0, vt1.c0, vt1.c2, vt1.c1 FROM rt0 NOT INDEXED, vt0 LEFT OUTER JOIN vt1 ON ((((rt0.c2)|(vt1.c1)))||(((((vt1.c3)OR(0.6710629651235729)))OR(vt1.c3)))) GROUP BY rt0.c0, vt1.c0, vt1.c2, vt1.c1;
SELECT ALL vt1.c1 FROM rt1, vt1, vt0 GROUP BY vt1.c1;
SELECT vt1.c1 FROM rt1, vt1, vt0 GROUP BY vt1.c1 HAVING (((NULL)) NOT BETWEEN ((rt1.c0)) AND ((COUNT(vt1.c1)))) UNION ALL SELECT ALL vt1.c1 FROM rt1, vt1, vt0 GROUP BY vt1.c1 HAVING (NOT ((((NULL)) NOT BETWEEN ((rt1.c0)) AND ((COUNT(vt1.c1)))))) UNION ALL SELECT vt1.c1 FROM rt1, vt1, vt0 GROUP BY vt1.c1 HAVING (((((NULL)) NOT BETWEEN ((rt1.c0)) AND ((COUNT(vt1.c1))))) ISNULL);
SELECT ALL vt1.c1 FROM rt1, vt1, vt0 GROUP BY vt1.c1;
SELECT vt1.c1 FROM rt1, vt1, vt0 GROUP BY vt1.c1 HAVING (((NULL)) NOT BETWEEN ((rt1.c0)) AND ((COUNT(vt1.c1)))) UNION ALL SELECT ALL vt1.c1 FROM rt1, vt1, vt0 GROUP BY vt1.c1 HAVING (NOT ((((NULL)) NOT BETWEEN ((rt1.c0)) AND ((COUNT(vt1.c1)))))) UNION ALL SELECT vt1.c1 FROM rt1, vt1, vt0 GROUP BY vt1.c1 HAVING (((((NULL)) NOT BETWEEN ((rt1.c0)) AND ((COUNT(vt1.c1))))) ISNULL);
SELECT ALL vt1.c1 FROM rt1, vt1, vt0 GROUP BY vt1.c1;
SELECT ALL * FROM vt0, rt1;
SELECT ALL * FROM vt0, rt1 WHERE (UNLIKELY(CAST(vt0.c0 AS TEXT))) UNION ALL SELECT ALL * FROM vt0, rt1 WHERE ((NOT (UNLIKELY(CAST(vt0.c0 AS TEXT))))) UNION ALL SELECT ALL * FROM vt0, rt1 WHERE (((UNLIKELY(CAST(vt0.c0 AS TEXT))) ISNULL));
SELECT ALL * FROM vt0, rt1;
SELECT DISTINCT vt0.c0, rt1.c2 FROM rt0, vt0, rt1;
SELECT DISTINCT vt0.c0, rt1.c2 FROM rt0, vt0, rt1 WHERE (json_array_length(rt0.c1, (vt0.c0 IN ()))) UNION SELECT DISTINCT vt0.c0, rt1.c2 FROM rt0, vt0, rt1 WHERE ((NOT (json_array_length(rt0.c1, (vt0.c0 IN ()))))) UNION SELECT DISTINCT vt0.c0, rt1.c2 FROM rt0, vt0, rt1 WHERE (((json_array_length(rt0.c1, (vt0.c0 IN ()))) ISNULL));
SELECT DISTINCT vt0.c0, rt1.c2 FROM rt0, vt0, rt1;
SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt1 WHERE (json_array_length(((rt1.c2) NOT NULL), ((rt1.c0) IS FALSE))) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM rt1 WHERE ((NOT (json_array_length(((rt1.c2) NOT NULL), ((rt1.c0) IS FALSE))))) GROUP BY rt1.c1 UNION SELECT rt1.c1 FROM rt1 WHERE (((json_array_length(((rt1.c2) NOT NULL), ((rt1.c0) IS FALSE))) ISNULL)) GROUP BY rt1.c1;
SELECT ALL rt1.c1, vt0.c0 FROM rt1, vt0 GROUP BY rt1.c1, vt0.c0;
SELECT rt1.c1, vt0.c0 FROM rt1, vt0 GROUP BY rt1.c1, vt0.c0 HAVING ((AVG(TOTAL(rt1.c2)))>=(((SUM(rt1.c0)) BETWEEN (rt1.c1) AND (COUNT(AVG(vt0.c0)))))) UNION ALL SELECT rt1.c1, vt0.c0 FROM rt1, vt0 GROUP BY rt1.c1, vt0.c0 HAVING (NOT (((AVG(TOTAL(rt1.c2)))>=(((SUM(rt1.c0)) BETWEEN (rt1.c1) AND (COUNT(AVG(vt0.c0)))))))) UNION ALL SELECT rt1.c1, vt0.c0 FROM rt1, vt0 GROUP BY rt1.c1, vt0.c0 HAVING ((((AVG(TOTAL(rt1.c2)))>=(((SUM(rt1.c0)) BETWEEN (rt1.c1) AND (COUNT(AVG(vt0.c0))))))) ISNULL);
SELECT vt0.c0, vt1.c2, vt1.c3, vt1.c0, vt1.c1 FROM vt0, vt1;
SELECT vt0.c0, vt1.c2, vt1.c3, vt1.c0, vt1.c1 FROM vt0, vt1 WHERE ((NOT (((vt1.c2)IS NOT(vt1.c0))))) UNION ALL SELECT vt0.c0, vt1.c2, vt1.c3, vt1.c0, vt1.c1 FROM vt0, vt1 WHERE ((NOT ((NOT (((vt1.c2)IS NOT(vt1.c0))))))) UNION ALL SELECT vt0.c0, vt1.c2, vt1.c3, vt1.c0, vt1.c1 FROM vt0, vt1 WHERE ((((NOT (((vt1.c2)IS NOT(vt1.c0))))) ISNULL));
SELECT vt0.c0, vt1.c2, vt1.c3, vt1.c0, vt1.c1 FROM vt0, vt1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((LTRIM(rt0.c0))<<('RZ'))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((LTRIM(rt0.c0))<<('RZ'))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((LTRIM(rt0.c0))<<('RZ'))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c3, rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, rt0.c3, rt0.c2, vt0.c0;
SELECT rt0.c1, rt0.c0, rt0.c3, rt0.c2, vt0.c0 FROM rt0, vt0 WHERE (((- (rt0.c0)) IN (((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))))) GROUP BY rt0.c1, rt0.c0, rt0.c3, rt0.c2, vt0.c0 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c3, rt0.c2, vt0.c0 FROM rt0, vt0 WHERE ((NOT (((- (rt0.c0)) IN (((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))))))) GROUP BY rt0.c1, rt0.c0, rt0.c3, rt0.c2, vt0.c0 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c3, rt0.c2, vt0.c0 FROM rt0, vt0 WHERE (((((- (rt0.c0)) IN (((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c3, rt0.c2, vt0.c0;
SELECT ALL rt0.c1, rt0.c0, rt0.c3, rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, rt0.c3, rt0.c2, vt0.c0;
SELECT vt1.c2, vt1.c0 FROM vt1 GROUP BY vt1.c2, vt1.c0;
SELECT vt1.c2, vt1.c0 FROM vt1 GROUP BY vt1.c2, vt1.c0 HAVING TYPEOF(COUNT(*)) UNION ALL SELECT ALL vt1.c2, vt1.c0 FROM vt1 GROUP BY vt1.c2, vt1.c0 HAVING (NOT (TYPEOF(COUNT(*)))) UNION ALL SELECT ALL vt1.c2, vt1.c0 FROM vt1 GROUP BY vt1.c2, vt1.c0 HAVING ((TYPEOF(COUNT(*))) ISNULL);
SELECT vt1.c2, vt1.c0 FROM vt1 GROUP BY vt1.c2, vt1.c0;
SELECT vt1.c2, vt1.c0 FROM vt1 GROUP BY vt1.c2, vt1.c0 HAVING TYPEOF(COUNT(*)) UNION ALL SELECT ALL vt1.c2, vt1.c0 FROM vt1 GROUP BY vt1.c2, vt1.c0 HAVING (NOT (TYPEOF(COUNT(*)))) UNION ALL SELECT ALL vt1.c2, vt1.c0 FROM vt1 GROUP BY vt1.c2, vt1.c0 HAVING ((TYPEOF(COUNT(*))) ISNULL);
SELECT vt1.c2, vt1.c0 FROM vt1 GROUP BY vt1.c2, vt1.c0;
SELECT SUM(((((vt1.c1)GLOB(vt1.c3)))<=(((rt0.c2)%(vt1.c1))))) FROM vt0, rt0, vt1 ORDER BY CASE ((vt1.c1)|('1'))  WHEN (vt1.c0 IN ()) THEN x'151e' END  NULLS LAST, (((vt1.c3 IN ()))-(CAST(vt1.c2 AS NUMERIC))) ASC  NULLS LAST, CASE ((rt0.c3)!=(vt1.c0))  WHEN ((vt1.c2)>(vt0.c0)) THEN (vt0.c0 IN (rt0.c2)) END  NULLS FIRST;
SELECT rt0.c2, rt1.c1, rt0.c0, rt1.c2, rt0.c3 FROM rt1, rt0;
SELECT ALL rt0.c2, rt1.c1, rt0.c0, rt1.c2, rt0.c3 FROM rt1, rt0 WHERE ((json_quote(rt0.c3) IN ())) UNION ALL SELECT rt0.c2, rt1.c1, rt0.c0, rt1.c2, rt0.c3 FROM rt1, rt0 WHERE ((NOT ((json_quote(rt0.c3) IN ())))) UNION ALL SELECT rt0.c2, rt1.c1, rt0.c0, rt1.c2, rt0.c3 FROM rt1, rt0 WHERE ((((json_quote(rt0.c3) IN ())) ISNULL));
SELECT rt0.c2, rt1.c1, rt0.c0, rt1.c2, rt0.c3 FROM rt1, rt0;
SELECT DISTINCT rt0.c0, vt0.c0, rt0.c2 FROM rt1, rt0, vt0, vt1;
SELECT DISTINCT rt0.c0, vt0.c0, rt0.c2 FROM rt1, rt0, vt0, vt1 WHERE ((((vt1.c3) BETWEEN (rt0.c1) AND (vt1.c0)) IN ())) UNION SELECT DISTINCT rt0.c0, vt0.c0, rt0.c2 FROM rt1, rt0, vt0, vt1 WHERE ((NOT ((((vt1.c3) BETWEEN (rt0.c1) AND (vt1.c0)) IN ())))) UNION SELECT DISTINCT rt0.c0, vt0.c0, rt0.c2 FROM rt1, rt0, vt0, vt1 WHERE ((((((vt1.c3) BETWEEN (rt0.c1) AND (vt1.c0)) IN ())) ISNULL));
SELECT DISTINCT rt0.c0, vt0.c0, rt0.c2 FROM rt1, rt0, vt0, vt1;
SELECT rt0.c3, vt1.c3, rt0.c0, vt1.c2, vt1.c0 FROM vt1, rt0, vt0 GROUP BY rt0.c3, vt1.c3, rt0.c0, vt1.c2, vt1.c0;
SELECT ALL rt0.c3, vt1.c3, rt0.c0, vt1.c2, vt1.c0 FROM vt1, rt0, vt0 WHERE (((CASE WHEN rt0.c2 THEN vt1.c0 END)IS NOT(((-1.040302979E9)=(rt0.c1))))) GROUP BY rt0.c3, vt1.c3, rt0.c0, vt1.c2, vt1.c0 UNION SELECT rt0.c3, vt1.c3, rt0.c0, vt1.c2, vt1.c0 FROM vt1, rt0, vt0 WHERE ((NOT (((CASE WHEN rt0.c2 THEN vt1.c0 END)IS NOT(((-1.040302979E9)=(rt0.c1))))))) GROUP BY rt0.c3, vt1.c3, rt0.c0, vt1.c2, vt1.c0 UNION SELECT rt0.c3, vt1.c3, rt0.c0, vt1.c2, vt1.c0 FROM vt1, rt0, vt0 WHERE (((((CASE WHEN rt0.c2 THEN vt1.c0 END)IS NOT(((-1.040302979E9)=(rt0.c1))))) ISNULL)) GROUP BY rt0.c3, vt1.c3, rt0.c0, vt1.c2, vt1.c0;
SELECT rt0.c3, vt1.c3, rt0.c0, vt1.c2, vt1.c0 FROM vt1, rt0, vt0 GROUP BY rt0.c3, vt1.c3, rt0.c0, vt1.c2, vt1.c0;
SELECT ALL rt1.c1, vt1.c2, rt1.c0, vt1.c1, rt0.c2, rt1.c2, vt1.c0, vt1.c3, rt0.c0, rt0.c1, vt0.c0 FROM vt0, vt1 LEFT OUTER JOIN rt1 ON (((((((('-1196340002')AND(LOWER(DISTINCT rt1.c2))))AND('-2082258452')))OR(((vt1.c1) BETWEEN (vt1.c3) AND (rt0.c1)))))AND(((((rt1.c0)AND(rt1.c2)))OR(rt0.c0)))) CROSS JOIN rt0 ON (((((vt0.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c2)))) IS TRUE) GROUP BY rt1.c1, vt1.c2, rt1.c0, vt1.c1, rt0.c2, rt1.c2, vt1.c0, vt1.c3, rt0.c0, rt0.c1, vt0.c0;
SELECT SUM(((vt1.c0)>>(rt0.c3)) COLLATE NOCASE) FROM rt0, vt1, vt0 ORDER BY ((((rt0.c3) NOT NULL)) NOT BETWEEN (CASE rt0.c0  WHEN rt0.c1 THEN vt1.c2 ELSE vt0.c0 END) AND (x'6b04'))  NULLS LAST;
SELECT ALL * FROM rt1 FULL OUTER JOIN vt0 ON x'' CROSS JOIN rt0 ON CAST(((((rt0.c2)OR(rt0.c0)))OR(rt0.c3)) AS BLOB);
SELECT * FROM rt1 FULL OUTER JOIN vt0 ON x'' CROSS JOIN rt0 ON CAST(((((rt0.c2)OR(rt0.c0)))OR(rt0.c3)) AS BLOB) WHERE (CAST(rt0.c2 AS TEXT) COLLATE NOCASE) UNION ALL SELECT * FROM rt1 FULL OUTER JOIN vt0 ON x'' CROSS JOIN rt0 ON CAST(((((rt0.c2)OR(rt0.c0)))OR(rt0.c3)) AS BLOB) WHERE ((NOT (CAST(rt0.c2 AS TEXT) COLLATE NOCASE))) UNION ALL SELECT * FROM rt1 FULL OUTER JOIN vt0 ON x'' CROSS JOIN rt0 ON CAST(((((rt0.c2)OR(rt0.c0)))OR(rt0.c3)) AS BLOB) WHERE (((CAST(rt0.c2 AS TEXT) COLLATE NOCASE) ISNULL));
SELECT ALL * FROM rt1 FULL OUTER JOIN vt0 ON x'' CROSS JOIN rt0 ON CAST(((((rt0.c2)OR(rt0.c0)))OR(rt0.c3)) AS BLOB);
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((- (rt0.c0)))IS(((rt0.c0)-(rt0.c0))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((- (rt0.c0)))IS(((rt0.c0)-(rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((- (rt0.c0)))IS(((rt0.c0)-(rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL vt1.c3 FROM vt1, rt1, vt0 GROUP BY vt1.c3;
SELECT vt1.c3 FROM vt1, rt1, vt0 WHERE (CAST(((vt1.c0)GLOB(vt0.c0)) AS INTEGER)) GROUP BY vt1.c3 UNION SELECT ALL vt1.c3 FROM vt1, rt1, vt0 WHERE ((NOT (CAST(((vt1.c0)GLOB(vt0.c0)) AS INTEGER)))) GROUP BY vt1.c3 UNION SELECT ALL vt1.c3 FROM vt1, rt1, vt0 WHERE (((CAST(((vt1.c0)GLOB(vt0.c0)) AS INTEGER)) ISNULL)) GROUP BY vt1.c3;
SELECT ALL vt1.c3 FROM vt1, rt1, vt0 GROUP BY vt1.c3;
SELECT ALL rt0.c2, rt1.c2, vt1.c1, vt1.c0, rt1.c0, vt0.c0 FROM vt1, rt1, rt0 CROSS JOIN vt0 ON ((((((((vt1.c2 COLLATE NOCASE)OR(CASE vt1.c1  WHEN rt0.c0 THEN rt0.c1 END)))AND(CASE WHEN rt0.c2 THEN rt0.c2 WHEN vt1.c1 THEN rt0.c3 WHEN rt0.c1 THEN vt1.c1 ELSE vt1.c2 END)))AND(((rt0.c2)IS NOT(rt0.c1)))))AND(CASE WHEN rt1.c0 THEN rt0.c1 WHEN rt1.c2 THEN vt1.c3 WHEN rt0.c1 THEN rt0.c3 ELSE vt1.c3 END)) GROUP BY rt0.c2, rt1.c2, vt1.c1, vt1.c0, rt1.c0, vt0.c0;
SELECT rt0.c2, rt1.c2, vt1.c1, vt1.c0, rt1.c0, vt0.c0 FROM vt1, rt1, rt0 CROSS JOIN vt0 ON ((((((((vt1.c2 COLLATE NOCASE)OR(CASE vt1.c1  WHEN rt0.c0 THEN rt0.c1 END)))AND(CASE WHEN rt0.c2 THEN rt0.c2 WHEN vt1.c1 THEN rt0.c3 WHEN rt0.c1 THEN vt1.c1 ELSE vt1.c2 END)))AND(((rt0.c2)IS NOT(rt0.c1)))))AND(CASE WHEN rt1.c0 THEN rt0.c1 WHEN rt1.c2 THEN vt1.c3 WHEN rt0.c1 THEN rt0.c3 ELSE vt1.c3 END)) GROUP BY rt0.c2, rt1.c2, vt1.c1, vt1.c0, rt1.c0, vt0.c0 HAVING MAX(((COUNT(vt0.c0))>>(MIN(COUNT(*))))) UNION ALL SELECT ALL rt0.c2, rt1.c2, vt1.c1, vt1.c0, rt1.c0, vt0.c0 FROM vt1, rt1, rt0 CROSS JOIN vt0 ON ((((((((vt1.c2 COLLATE NOCASE)OR(CASE vt1.c1  WHEN rt0.c0 THEN rt0.c1 END)))AND(CASE WHEN rt0.c2 THEN rt0.c2 WHEN vt1.c1 THEN rt0.c3 WHEN rt0.c1 THEN vt1.c1 ELSE vt1.c2 END)))AND(((rt0.c2)IS NOT(rt0.c1)))))AND(CASE WHEN rt1.c0 THEN rt0.c1 WHEN rt1.c2 THEN vt1.c3 WHEN rt0.c1 THEN rt0.c3 ELSE vt1.c3 END)) GROUP BY rt0.c2, rt1.c2, vt1.c1, vt1.c0, rt1.c0, vt0.c0 HAVING (NOT (MAX(((COUNT(vt0.c0))>>(MIN(COUNT(*))))))) UNION ALL SELECT rt0.c2, rt1.c2, vt1.c1, vt1.c0, rt1.c0, vt0.c0 FROM vt1, rt1, rt0 CROSS JOIN vt0 ON ((((((((vt1.c2 COLLATE NOCASE)OR(CASE vt1.c1  WHEN rt0.c0 THEN rt0.c1 END)))AND(CASE WHEN rt0.c2 THEN rt0.c2 WHEN vt1.c1 THEN rt0.c3 WHEN rt0.c1 THEN vt1.c1 ELSE vt1.c2 END)))AND(((rt0.c2)IS NOT(rt0.c1)))))AND(CASE WHEN rt1.c0 THEN rt0.c1 WHEN rt1.c2 THEN vt1.c3 WHEN rt0.c1 THEN rt0.c3 ELSE vt1.c3 END)) GROUP BY rt0.c2, rt1.c2, vt1.c1, vt1.c0, rt1.c0, vt0.c0 HAVING ((MAX(((COUNT(vt0.c0))>>(MIN(COUNT(*)))))) ISNULL);
SELECT * FROM rt1;
SELECT ALL * FROM rt1 WHERE (INSTR(((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c1)), CASE rt1.c2  WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 END)) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT (INSTR(((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c1)), CASE rt1.c2  WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 END)))) UNION ALL SELECT ALL * FROM rt1 WHERE (((INSTR(((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c1)), CASE rt1.c2  WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 END)) ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT * FROM vt0, rt0, rt1, vt1;
SELECT DISTINCT * FROM vt0, rt0, rt1, vt1 WHERE (((((rt0.c0)AND(rt1.c2)))+((rt1.c1 IN ())))) UNION SELECT DISTINCT * FROM vt0, rt0, rt1, vt1 WHERE ((NOT (((((rt0.c0)AND(rt1.c2)))+((rt1.c1 IN ())))))) UNION SELECT DISTINCT * FROM vt0, rt0, rt1, vt1 WHERE (((((((rt0.c0)AND(rt1.c2)))+((rt1.c1 IN ())))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0, rt1, vt1;
SELECT rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1;
SELECT ALL rt1.c0, rt1.c1 FROM rt1 WHERE ((+ (((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c0))))) GROUP BY rt1.c0, rt1.c1 UNION SELECT ALL rt1.c0, rt1.c1 FROM rt1 WHERE ((NOT ((+ (((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c0))))))) GROUP BY rt1.c0, rt1.c1 UNION SELECT ALL rt1.c0, rt1.c1 FROM rt1 WHERE ((((+ (((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c0))))) ISNULL)) GROUP BY rt1.c0, rt1.c1;
SELECT rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1;
SELECT vt1.c2, vt1.c3, vt0.c0, vt1.c1, vt1.c0 FROM vt0, vt1 GROUP BY vt1.c2, vt1.c3, vt0.c0, vt1.c1, vt1.c0;
SELECT ALL vt1.c2, vt1.c3, vt0.c0, vt1.c1, vt1.c0 FROM vt0, vt1 GROUP BY vt1.c2, vt1.c3, vt0.c0, vt1.c1, vt1.c0 HAVING MIN(SUM(MIN(GROUP_CONCAT(vt1.c2)))) UNION ALL SELECT ALL vt1.c2, vt1.c3, vt0.c0, vt1.c1, vt1.c0 FROM vt0, vt1 GROUP BY vt1.c2, vt1.c3, vt0.c0, vt1.c1, vt1.c0 HAVING (NOT (MIN(SUM(MIN(GROUP_CONCAT(vt1.c2)))))) UNION ALL SELECT ALL vt1.c2, vt1.c3, vt0.c0, vt1.c1, vt1.c0 FROM vt0 NOT INDEXED, vt1 GROUP BY vt1.c2, vt1.c3, vt0.c0, vt1.c1, vt1.c0 HAVING ((MIN(SUM(MIN(GROUP_CONCAT(vt1.c2))))) ISNULL);
SELECT rt1.c1, rt1.c2, rt0.c0 FROM rt0 CROSS JOIN rt1 ON ((CAST(rt1.c1 AS REAL))!=(((rt0.c2) ISNULL)));
SELECT rt1.c1, rt1.c2, rt0.c0 FROM rt0 CROSS JOIN rt1 ON ((CAST(rt1.c1 AS REAL))!=(((rt0.c2) ISNULL))) WHERE (((((rt0.c3)+(rt0.c0))) NOT BETWEEN (rt0.c3) AND (((rt1.c2) ISNULL)))) UNION ALL SELECT rt1.c1, rt1.c2, rt0.c0 FROM rt0 CROSS JOIN rt1 ON ((CAST(rt1.c1 AS REAL))<>(((rt0.c2) ISNULL))) WHERE ((NOT (((((rt0.c3)+(rt0.c0))) NOT BETWEEN (rt0.c3) AND (((rt1.c2) ISNULL)))))) UNION ALL SELECT ALL rt1.c1, rt1.c2, rt0.c0 FROM rt0 CROSS JOIN rt1 ON ((CAST(rt1.c1 AS REAL))<>(((rt0.c2) ISNULL))) WHERE (((((((rt0.c3)+(rt0.c0))) NOT BETWEEN (rt0.c3) AND (((rt1.c2) ISNULL)))) ISNULL));
SELECT rt1.c1, rt1.c2, rt0.c0 FROM rt0 CROSS JOIN rt1 ON ((CAST(rt1.c1 AS REAL))!=(((rt0.c2) ISNULL)));
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (CASE ((((((((vt1.c1)OR(vt1.c1)))OR(vt1.c3)))OR(vt1.c1)))OR(vt1.c3))  WHEN CASE WHEN vt1.c0 THEN vt1.c3 ELSE vt1.c1 END THEN (- (vt1.c1)) WHEN ((((vt1.c3)OR(vt1.c3)))OR(vt1.c2)) THEN vt1.c3 WHEN '0.16140401802260607' THEN CASE vt1.c1  WHEN vt1.c2 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c3 WHEN vt1.c2 THEN vt1.c3 END END) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (CASE ((((((((vt1.c1)OR(vt1.c1)))OR(vt1.c3)))OR(vt1.c1)))OR(vt1.c3))  WHEN CASE WHEN vt1.c0 THEN vt1.c3 ELSE vt1.c1 END THEN (- (vt1.c1)) WHEN ((((vt1.c3)OR(vt1.c3)))OR(vt1.c2)) THEN vt1.c3 WHEN '0.16140401802260607' THEN CASE vt1.c1  WHEN vt1.c2 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c3 WHEN vt1.c2 THEN vt1.c3 END END))) UNION SELECT DISTINCT * FROM vt1 WHERE (((CASE ((((((((vt1.c1)OR(vt1.c1)))OR(vt1.c3)))OR(vt1.c1)))OR(vt1.c3))  WHEN CASE WHEN vt1.c0 THEN vt1.c3 ELSE vt1.c1 END THEN (- (vt1.c1)) WHEN ((((vt1.c3)OR(vt1.c3)))OR(vt1.c2)) THEN vt1.c3 WHEN '0.16140401802260607' THEN CASE vt1.c1  WHEN vt1.c2 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c3 WHEN vt1.c2 THEN vt1.c3 END END) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT rt0.c2, rt1.c1, rt0.c3 FROM vt0, rt0, rt1, vt1 GROUP BY rt0.c2, rt1.c1, rt0.c3;
SELECT rt0.c2, rt1.c1, rt0.c3 FROM vt0, rt0, rt1, vt1 WHERE ('0.4255662752229217') GROUP BY rt0.c2, rt1.c1, rt0.c3 UNION SELECT rt0.c2, rt1.c1, rt0.c3 FROM vt0, rt0, rt1, vt1 WHERE ((NOT ('0.4255662752229217'))) GROUP BY rt0.c2, rt1.c1, rt0.c3 UNION SELECT rt0.c2, rt1.c1, rt0.c3 FROM vt0, rt0, rt1, vt1 WHERE ((('0.4255662752229217') ISNULL)) GROUP BY rt0.c2, rt1.c1, rt0.c3;
SELECT rt0.c2, rt1.c1, rt0.c3 FROM vt0, rt0, rt1, vt1 GROUP BY rt0.c2, rt1.c1, rt0.c3;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(TOTAL(GROUP_CONCAT(vt0.c0))))-(SUM(MIN(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((TOTAL(TOTAL(GROUP_CONCAT(vt0.c0))))-(SUM(MIN(vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((TOTAL(TOTAL(GROUP_CONCAT(vt0.c0))))-(SUM(MIN(vt0.c0))))) ISNULL);
SELECT ALL vt0.c0, rt0.c3, rt1.c0, vt1.c2 FROM vt1, rt0, vt0, rt1;
SELECT vt0.c0, rt0.c3, rt1.c0, vt1.c2 FROM vt1, rt0, vt0, rt1 WHERE (x'') UNION ALL SELECT vt0.c0, rt0.c3, rt1.c0, vt1.c2 FROM vt1, rt0, vt0, rt1 WHERE ((NOT (x''))) UNION ALL SELECT vt0.c0, rt0.c3, rt1.c0, vt1.c2 FROM vt1, rt0, vt0, rt1 WHERE (((x'') ISNULL));
SELECT ALL vt0.c0, rt0.c3, rt1.c0, vt1.c2 FROM vt1, rt0, vt0, rt1;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL rt0.c0, rt1.c1, vt0.c0, rt1.c2, rt0.c1, rt0.c2, rt0.c3, rt1.c0 FROM rt0 LEFT OUTER JOIN rt1 ON ((- (rt1.c0)) IN ()) LEFT OUTER JOIN vt0 ON ABS(DISTINCT rt1.c1) COLLATE RTRIM GROUP BY rt0.c0, rt1.c1, vt0.c0, rt1.c2, rt0.c1, rt0.c2, rt0.c3, rt1.c0;
SELECT ALL rt0.c0, rt1.c1, vt0.c0, rt1.c2, rt0.c1, rt0.c2, rt0.c3, rt1.c0 FROM rt0 LEFT OUTER JOIN rt1 ON ((- (rt1.c0)) IN ()) LEFT OUTER JOIN vt0 ON ABS(DISTINCT rt1.c1) COLLATE RTRIM WHERE (((CAST(rt0.c1 AS TEXT)) NOT NULL)) GROUP BY rt0.c0, rt1.c1, vt0.c0, rt1.c2, rt0.c1, rt0.c2, rt0.c3, rt1.c0 UNION SELECT ALL rt0.c0, rt1.c1, vt0.c0, rt1.c2, rt0.c1, rt0.c2, rt0.c3, rt1.c0 FROM rt0 LEFT OUTER JOIN rt1 ON ((- (rt1.c0)) IN ()) LEFT OUTER JOIN vt0 ON ABS(DISTINCT rt1.c1) COLLATE RTRIM WHERE ((NOT (((CAST(rt0.c1 AS TEXT)) NOT NULL)))) GROUP BY rt0.c0, rt1.c1, vt0.c0, rt1.c2, rt0.c1, rt0.c2, rt0.c3, rt1.c0 UNION SELECT rt0.c0, rt1.c1, vt0.c0, rt1.c2, rt0.c1, rt0.c2, rt0.c3, rt1.c0 FROM rt0 LEFT OUTER JOIN rt1 ON ((- (rt1.c0)) IN ()) LEFT OUTER JOIN vt0 ON ABS(DISTINCT rt1.c1) COLLATE RTRIM WHERE (((((CAST(rt0.c1 AS TEXT)) NOT NULL)) ISNULL)) GROUP BY rt0.c0, rt1.c1, vt0.c0, rt1.c2, rt0.c1, rt0.c2, rt0.c3, rt1.c0;
SELECT ALL rt0.c0, rt1.c1, vt0.c0, rt1.c2, rt0.c1, rt0.c2, rt0.c3, rt1.c0 FROM rt0 LEFT OUTER JOIN rt1 ON ((- (rt1.c0)) IN ()) LEFT OUTER JOIN vt0 ON ABS(DISTINCT rt1.c1) COLLATE RTRIM GROUP BY rt0.c0, rt1.c1, vt0.c0, rt1.c2, rt0.c1, rt0.c2, rt0.c3, rt1.c0;
SELECT rt1.c0, rt0.c0, rt0.c2 FROM rt0 RIGHT OUTER JOIN rt1 ON (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((vt1.c3)))) BETWEEN ((rt0.c0 IN ())) AND (((vt1.c3) IS FALSE))) FULL OUTER JOIN vt1 ON vt1.c1 GROUP BY rt1.c0, rt0.c0, rt0.c2;
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON (x'0c39' IN ());
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON (x'0c39' IN ()) WHERE (CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c2 WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY) UNION ALL SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON (x'0c39' IN ()) WHERE ((NOT (CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c2 WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY))) UNION ALL SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON (x'0c39' IN ()) WHERE (((CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c2 WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY) ISNULL));
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON (x'0c39' IN ());
SELECT DISTINCT * FROM vt1, rt0, rt1, vt0;
SELECT DISTINCT * FROM vt1, rt0, rt1, vt0 WHERE (rt1.c0) UNION SELECT DISTINCT * FROM vt1, rt0, rt1, vt0 WHERE ((NOT (rt1.c0))) UNION SELECT DISTINCT * FROM vt1, rt0, rt1, vt0 WHERE (((rt1.c0) ISNULL));
SELECT DISTINCT * FROM vt1, rt0, rt1, vt0;
SELECT rt1.c0, rt1.c2, vt1.c3, rt0.c1, rt0.c3, rt0.c2, vt1.c0, rt1.c1, vt1.c2, vt0.c0, vt1.c1, rt0.c0 FROM rt0, rt1, vt0, vt1 GROUP BY rt1.c0, rt1.c2, vt1.c3, rt0.c1, rt0.c3, rt0.c2, vt1.c0, rt1.c1, vt1.c2, vt0.c0, vt1.c1, rt0.c0;
SELECT ALL rt1.c0, rt1.c2, vt1.c3, rt0.c1, rt0.c3, rt0.c2, vt1.c0, rt1.c1, vt1.c2, vt0.c0, vt1.c1, rt0.c0 FROM rt0, rt1, vt0, vt1 WHERE (((((rt1.c0)=(rt0.c1))) NOT BETWEEN (vt1.c2) AND (CAST(rt1.c1 AS INTEGER)))) GROUP BY rt1.c0, rt1.c2, vt1.c3, rt0.c1, rt0.c3, rt0.c2, vt1.c0, rt1.c1, vt1.c2, vt0.c0, vt1.c1, rt0.c0 UNION SELECT rt1.c0, rt1.c2, vt1.c3, rt0.c1, rt0.c3, rt0.c2, vt1.c0, rt1.c1, vt1.c2, vt0.c0, vt1.c1, rt0.c0 FROM rt0, rt1, vt0, vt1 WHERE ((NOT (((((rt1.c0)=(rt0.c1))) NOT BETWEEN (vt1.c2) AND (CAST(rt1.c1 AS INTEGER)))))) GROUP BY rt1.c0, rt1.c2, vt1.c3, rt0.c1, rt0.c3, rt0.c2, vt1.c0, rt1.c1, vt1.c2, vt0.c0, vt1.c1, rt0.c0 UNION SELECT rt1.c0, rt1.c2, vt1.c3, rt0.c1, rt0.c3, rt0.c2, vt1.c0, rt1.c1, vt1.c2, vt0.c0, vt1.c1, rt0.c0 FROM rt0, rt1, vt0, vt1 WHERE (((((((rt1.c0)=(rt0.c1))) NOT BETWEEN (vt1.c2) AND (CAST(rt1.c1 AS INTEGER)))) ISNULL)) GROUP BY rt1.c0, rt1.c2, vt1.c3, rt0.c1, rt0.c3, rt0.c2, vt1.c0, rt1.c1, vt1.c2, vt0.c0, vt1.c1, rt0.c0;
SELECT rt1.c0, rt1.c2, vt1.c3, rt0.c1, rt0.c3, rt0.c2, vt1.c0, rt1.c1, vt1.c2, vt0.c0, vt1.c1, rt0.c0 FROM rt0, rt1, vt0, vt1 GROUP BY rt1.c0, rt1.c2, vt1.c3, rt0.c1, rt0.c3, rt0.c2, vt1.c0, rt1.c1, vt1.c2, vt0.c0, vt1.c1, rt0.c0;
SELECT ALL vt1.c1, rt0.c2, rt1.c2, vt1.c0, vt1.c2, rt0.c1 FROM rt1, rt0, vt1, vt0 GROUP BY vt1.c1, rt0.c2, rt1.c2, vt1.c0, vt1.c2, rt0.c1;
SELECT ALL vt1.c1, rt0.c2, rt1.c2, vt1.c0, vt1.c2, rt0.c1 FROM rt1, rt0, vt1, vt0 GROUP BY vt1.c1, rt0.c2, rt1.c2, vt1.c0, vt1.c2, rt0.c1 HAVING COUNT(ABS(TOTAL(rt1.c0))) UNION ALL SELECT vt1.c1, rt0.c2, rt1.c2, vt1.c0, vt1.c2, rt0.c1 FROM rt1, rt0, vt1, vt0 GROUP BY vt1.c1, rt0.c2, rt1.c2, vt1.c0, vt1.c2, rt0.c1 HAVING (NOT (COUNT(ABS(TOTAL(rt1.c0))))) UNION ALL SELECT vt1.c1, rt0.c2, rt1.c2, vt1.c0, vt1.c2, rt0.c1 FROM rt1, rt0, vt1, vt0 GROUP BY vt1.c1, rt0.c2, rt1.c2, vt1.c0, vt1.c2, rt0.c1 HAVING ((COUNT(ABS(TOTAL(rt1.c0)))) ISNULL);
SELECT ALL * FROM vt1, rt0, rt1, vt0;
SELECT * FROM vt1, rt0, rt1, vt0 WHERE (((vt1.c1) BETWEEN ((- (rt1.c1))) AND (((((0.14884157540425325)AND(vt0.c0)))OR(rt1.c0))))) UNION ALL SELECT * FROM vt1, rt0, rt1, vt0 NOT INDEXED WHERE ((NOT (((vt1.c1) BETWEEN ((- (rt1.c1))) AND (((((0.14884157540425325)AND(vt0.c0)))OR(rt1.c0))))))) UNION ALL SELECT * FROM vt1, rt0, rt1, vt0 WHERE (((((vt1.c1) BETWEEN ((- (rt1.c1))) AND (((((0.14884157540425325)AND(vt0.c0)))OR(rt1.c0))))) ISNULL));
SELECT ALL * FROM vt1, rt0, rt1, vt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((CASE vt1.c2  WHEN vt1.c2 THEN vt1.c3 ELSE vt1.c3 END IN ())) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((CASE vt1.c2  WHEN vt1.c2 THEN vt1.c3 ELSE vt1.c3 END IN ())))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((CASE vt1.c2  WHEN vt1.c2 THEN vt1.c3 ELSE vt1.c3 END IN ())) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt1.c1, vt1.c0, vt1.c2, vt1.c3, rt0.c0, vt0.c0, rt1.c2, rt0.c3 FROM vt0, rt0, rt1, vt1 GROUP BY vt1.c1, vt1.c0, vt1.c2, vt1.c3, rt0.c0, vt0.c0, rt1.c2, rt0.c3;
SELECT vt1.c1, vt1.c0, vt1.c2, vt1.c3, rt0.c0, vt0.c0, rt1.c2, rt0.c3 FROM vt0, rt0, rt1, vt1 WHERE (((((((rt0.c1)>>(rt0.c0)))AND((((NULL, rt1.c2, rt0.c3)) BETWEEN ((rt0.c2, rt1.c1, vt1.c2)) AND ((vt1.c3, rt0.c2, vt1.c3))))))OR(vt1.c1 COLLATE RTRIM))) GROUP BY vt1.c1, vt1.c0, vt1.c2, vt1.c3, rt0.c0, vt0.c0, rt1.c2, rt0.c3 UNION SELECT vt1.c1, vt1.c0, vt1.c2, vt1.c3, rt0.c0, vt0.c0, rt1.c2, rt0.c3 FROM vt0, rt0, rt1, vt1 WHERE ((NOT (((((((rt0.c1)>>(rt0.c0)))AND((((NULL, rt1.c2, rt0.c3)) BETWEEN ((rt0.c2, rt1.c1, vt1.c2)) AND ((vt1.c3, rt0.c2, vt1.c3))))))OR(vt1.c1 COLLATE RTRIM))))) GROUP BY vt1.c1, vt1.c0, vt1.c2, vt1.c3, rt0.c0, vt0.c0, rt1.c2, rt0.c3 UNION SELECT ALL vt1.c1, vt1.c0, vt1.c2, vt1.c3, rt0.c0, vt0.c0, rt1.c2, rt0.c3 FROM vt0, rt0, rt1, vt1 WHERE (((((((((rt0.c1)>>(rt0.c0)))AND((((NULL, rt1.c2, rt0.c3)) BETWEEN ((rt0.c2, rt1.c1, vt1.c2)) AND ((vt1.c3, rt0.c2, vt1.c3))))))OR(vt1.c1 COLLATE RTRIM))) ISNULL)) GROUP BY vt1.c1, vt1.c0, vt1.c2, vt1.c3, rt0.c0, vt0.c0, rt1.c2, rt0.c3;
SELECT vt1.c1, vt1.c0, vt1.c2, vt1.c3, rt0.c0, vt0.c0, rt1.c2, rt0.c3 FROM vt0, rt0, rt1, vt1 GROUP BY vt1.c1, vt1.c0, vt1.c2, vt1.c3, rt0.c0, vt0.c0, rt1.c2, rt0.c3;
SELECT ALL rt0.c0, vt1.c2, rt1.c0, vt1.c0, vt1.c1, rt0.c2, rt1.c2, vt1.c3, rt1.c1, rt0.c3, rt0.c1 FROM vt1 RIGHT OUTER JOIN rt1 ON (NOT (CASE WHEN vt1.c3 THEN rt1.c0 END)) LEFT OUTER JOIN rt0 ON ((CASE vt1.c1  WHEN vt1.c0 THEN rt0.c1 ELSE '-398409261' END)OR(ABS(x''))) GROUP BY rt0.c0, vt1.c2, rt1.c0, vt1.c0, vt1.c1, rt0.c2, rt1.c2, vt1.c3, rt1.c1, rt0.c3, rt0.c1;
SELECT rt0.c0, vt1.c2, rt1.c0, vt1.c0, vt1.c1, rt0.c2, rt1.c2, vt1.c3, rt1.c1, rt0.c3, rt0.c1 FROM vt1 RIGHT OUTER JOIN rt1 ON (NOT (CASE WHEN vt1.c3 THEN rt1.c0 END)) LEFT OUTER JOIN rt0 ON ((CASE vt1.c1  WHEN vt1.c0 THEN rt0.c1 ELSE '-398409261' END)OR(ABS(x''))) GROUP BY rt0.c0, vt1.c2, rt1.c0, vt1.c0, vt1.c1, rt0.c2, rt1.c2, vt1.c3, rt1.c1, rt0.c3, rt0.c1 HAVING ((SUM(vt1.c1))OR((((MAX(AVG(rt0.c1)))) NOT BETWEEN ((vt1.c0)) AND ((rt0.c3))))) UNION ALL SELECT ALL rt0.c0, vt1.c2, rt1.c0, vt1.c0, vt1.c1, rt0.c2, rt1.c2, vt1.c3, rt1.c1, rt0.c3, rt0.c1 FROM vt1 RIGHT OUTER JOIN rt1 ON (NOT (CASE WHEN vt1.c3 THEN rt1.c0 END)) LEFT OUTER JOIN rt0 ON ((CASE vt1.c1  WHEN vt1.c0 THEN rt0.c1 ELSE '-398409261' END)OR(ABS(x''))) GROUP BY rt0.c0, vt1.c2, rt1.c0, vt1.c0, vt1.c1, rt0.c2, rt1.c2, vt1.c3, rt1.c1, rt0.c3, rt0.c1 HAVING (NOT (((SUM(vt1.c1))OR((((MAX(AVG(rt0.c1)))) NOT BETWEEN ((vt1.c0)) AND ((rt0.c3))))))) UNION ALL SELECT rt0.c0, vt1.c2, rt1.c0, vt1.c0, vt1.c1, rt0.c2, rt1.c2, vt1.c3, rt1.c1, rt0.c3, rt0.c1 FROM vt1 RIGHT OUTER JOIN rt1 ON (NOT (CASE WHEN vt1.c3 THEN rt1.c0 END)) LEFT OUTER JOIN rt0 ON ((CASE vt1.c1  WHEN vt1.c0 THEN rt0.c1 ELSE '-398409261' END)OR(ABS(x''))) GROUP BY rt0.c0, vt1.c2, rt1.c0, vt1.c0, vt1.c1, rt0.c2, rt1.c2, vt1.c3, rt1.c1, rt0.c3, rt0.c1 HAVING ((((SUM(vt1.c1))OR((((MAX(AVG(rt0.c1)))) NOT BETWEEN ((vt1.c0)) AND ((rt0.c3)))))) ISNULL);
SELECT ALL rt0.c3 FROM rt1 INNER JOIN rt0 ON (+ (((((rt0.c0)AND(rt0.c0)))AND(rt1.c1))));
SELECT rt0.c3 FROM rt1 INNER JOIN rt0 ON (+ (((((rt0.c0)AND(rt0.c0)))AND(rt1.c1)))) WHERE (CASE ((rt1.c2)!=(rt1.c1))  WHEN (rt1.c2 IN ()) THEN '-2098881184' END) UNION ALL SELECT ALL rt0.c3 FROM rt1 INNER JOIN rt0 ON (+ (((((rt0.c0)AND(rt0.c0)))AND(rt1.c1)))) WHERE ((NOT (CASE ((rt1.c2)<>(rt1.c1))  WHEN (rt1.c2 IN ()) THEN '-2098881184' END))) UNION ALL SELECT rt0.c3 FROM rt1 INNER JOIN rt0 ON (+ (((((rt0.c0)AND(rt0.c0)))AND(rt1.c1)))) WHERE (((CASE ((rt1.c2)!=(rt1.c1))  WHEN (rt1.c2 IN ()) THEN '-2098881184' END) ISNULL));
SELECT ALL rt0.c3 FROM rt1 INNER JOIN rt0 ON (+ (((((rt0.c0)AND(rt0.c0)))AND(rt1.c1))));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((vt0.c0)*(vt0.c0)) COLLATE RTRIM) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0)*(vt0.c0)) COLLATE RTRIM))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((vt0.c0)*(vt0.c0)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT rt1.c0 FROM rt1 WHERE ((((rt1.c1)<<(rt1.c2)) IN ())) GROUP BY rt1.c0 UNION SELECT rt1.c0 FROM rt1 WHERE ((NOT ((((rt1.c1)<<(rt1.c2)) IN ())))) GROUP BY rt1.c0 UNION SELECT rt1.c0 FROM rt1 WHERE ((((((rt1.c1)<<(rt1.c2)) IN ())) ISNULL)) GROUP BY rt1.c0;
SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT vt1.c2, rt1.c1, vt1.c0, vt1.c3, rt1.c2, vt1.c1, rt1.c0 FROM vt1, rt1 GROUP BY vt1.c2, rt1.c1, vt1.c0, vt1.c3, rt1.c2, vt1.c1, rt1.c0;
SELECT vt1.c2, rt1.c1, vt1.c0, vt1.c3, rt1.c2, vt1.c1, rt1.c0 FROM vt1 NOT INDEXED, rt1 GROUP BY vt1.c2, rt1.c1, vt1.c0, vt1.c3, rt1.c2, vt1.c1, rt1.c0 HAVING MIN((- (rt1.c1))) UNION ALL SELECT ALL vt1.c2, rt1.c1, vt1.c0, vt1.c3, rt1.c2, vt1.c1, rt1.c0 FROM vt1, rt1 GROUP BY vt1.c2, rt1.c1, vt1.c0, vt1.c3, rt1.c2, vt1.c1, rt1.c0 HAVING (NOT (MIN((- (rt1.c1))))) UNION ALL SELECT ALL vt1.c2, rt1.c1, vt1.c0, vt1.c3, rt1.c2, vt1.c1, rt1.c0 FROM vt1, rt1 GROUP BY vt1.c2, rt1.c1, vt1.c0, vt1.c3, rt1.c2, vt1.c1, rt1.c0 HAVING ((MIN((- (rt1.c1)))) ISNULL);
SELECT vt1.c2, rt1.c1, vt1.c0, vt1.c3, rt1.c2, vt1.c1, rt1.c0 FROM vt1, rt1 GROUP BY vt1.c2, rt1.c1, vt1.c0, vt1.c3, rt1.c2, vt1.c1, rt1.c0;
SELECT vt1.c2, rt1.c1, vt1.c0, vt1.c3, rt1.c2, vt1.c1, rt1.c0 FROM vt1 NOT INDEXED, rt1 GROUP BY vt1.c2, rt1.c1, vt1.c0, vt1.c3, rt1.c2, vt1.c1, rt1.c0 HAVING MIN((- (rt1.c1))) UNION ALL SELECT ALL vt1.c2, rt1.c1, vt1.c0, vt1.c3, rt1.c2, vt1.c1, rt1.c0 FROM vt1, rt1 GROUP BY vt1.c2, rt1.c1, vt1.c0, vt1.c3, rt1.c2, vt1.c1, rt1.c0 HAVING (NOT (MIN((- (rt1.c1))))) UNION ALL SELECT ALL vt1.c2, rt1.c1, vt1.c0, vt1.c3, rt1.c2, vt1.c1, rt1.c0 FROM vt1, rt1 GROUP BY vt1.c2, rt1.c1, vt1.c0, vt1.c3, rt1.c2, vt1.c1, rt1.c0 HAVING ((MIN((- (rt1.c1)))) ISNULL);
SELECT vt1.c2, rt1.c1, vt1.c0, vt1.c3, rt1.c2, vt1.c1, rt1.c0 FROM vt1, rt1 GROUP BY vt1.c2, rt1.c1, vt1.c0, vt1.c3, rt1.c2, vt1.c1, rt1.c0;
SELECT * FROM vt0, rt1;
SELECT ALL * FROM vt0, rt1 WHERE (STRFTIME(rt1.c0 COLLATE RTRIM, ((rt1.c1)||(vt0.c0)), rt1.c0)) UNION ALL SELECT * FROM vt0, rt1 WHERE ((NOT (STRFTIME(rt1.c0 COLLATE RTRIM, ((rt1.c1)||(vt0.c0)), rt1.c0)))) UNION ALL SELECT * FROM vt0, rt1 WHERE (((STRFTIME(rt1.c0 COLLATE RTRIM, ((rt1.c1)||(vt0.c0)), rt1.c0)) ISNULL));
SELECT * FROM vt0, rt1;
SELECT DISTINCT * FROM rt1, vt1;
SELECT DISTINCT * FROM rt1, vt1 WHERE (((rt1.c0)=(rt1.c0)) COLLATE RTRIM) UNION SELECT DISTINCT * FROM rt1, vt1 WHERE ((NOT (((rt1.c0)=(rt1.c0)) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM rt1, vt1 WHERE (((((rt1.c0)=(rt1.c0)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM rt1, vt1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((+ ((('收7') NOT BETWEEN (vt0.c0) AND (vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 NOT INDEXED WHERE ((NOT ((+ ((('收7') NOT BETWEEN (vt0.c0) AND (vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((+ ((('收7') NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt1.c0, vt1.c1, rt0.c0, rt0.c1, vt1.c3 FROM rt0, vt1 GROUP BY vt1.c0, vt1.c1, rt0.c0, rt0.c1, vt1.c3;
SELECT ALL vt1.c0, vt1.c1, rt0.c0, rt0.c1, vt1.c3 FROM rt0, vt1 GROUP BY vt1.c0, vt1.c1, rt0.c0, rt0.c1, vt1.c3 HAVING ((COUNT(*))IS NOT(NULL)) UNION ALL SELECT vt1.c0, vt1.c1, rt0.c0, rt0.c1, vt1.c3 FROM rt0, vt1 GROUP BY vt1.c0, vt1.c1, rt0.c0, rt0.c1, vt1.c3 HAVING (NOT (((COUNT(*))IS NOT(NULL)))) UNION ALL SELECT vt1.c0, vt1.c1, rt0.c0, rt0.c1, vt1.c3 FROM rt0, vt1 GROUP BY vt1.c0, vt1.c1, rt0.c0, rt0.c1, vt1.c3 HAVING ((((COUNT(*))IS NOT(NULL))) ISNULL);
SELECT vt1.c0, vt1.c1, rt0.c0, rt0.c1, vt1.c3 FROM rt0, vt1 GROUP BY vt1.c0, vt1.c1, rt0.c0, rt0.c1, vt1.c3;
SELECT ALL vt1.c0, vt1.c1, rt0.c0, rt0.c1, vt1.c3 FROM rt0, vt1 GROUP BY vt1.c0, vt1.c1, rt0.c0, rt0.c1, vt1.c3 HAVING ((COUNT(*))IS NOT(NULL)) UNION ALL SELECT vt1.c0, vt1.c1, rt0.c0, rt0.c1, vt1.c3 FROM rt0, vt1 GROUP BY vt1.c0, vt1.c1, rt0.c0, rt0.c1, vt1.c3 HAVING (NOT (((COUNT(*))IS NOT(NULL)))) UNION ALL SELECT vt1.c0, vt1.c1, rt0.c0, rt0.c1, vt1.c3 FROM rt0, vt1 GROUP BY vt1.c0, vt1.c1, rt0.c0, rt0.c1, vt1.c3 HAVING ((((COUNT(*))IS NOT(NULL))) ISNULL);
SELECT vt1.c0, vt1.c1, rt0.c0, rt0.c1, vt1.c3 FROM rt0, vt1 GROUP BY vt1.c0, vt1.c1, rt0.c0, rt0.c1, vt1.c3;
SELECT rt0.c2, rt0.c3, rt1.c0, rt1.c1, rt1.c2, rt0.c0, rt0.c1 FROM rt1, rt0;
SELECT ALL rt0.c2, rt0.c3, rt1.c0, rt1.c1, rt1.c2, rt0.c0, rt0.c1 FROM rt1, rt0 WHERE (CAST(((rt0.c1) NOT BETWEEN (rt1.c1) AND (rt0.c0)) AS NUMERIC)) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt1.c0, rt1.c1, rt1.c2, rt0.c0, rt0.c1 FROM rt1, rt0 WHERE ((NOT (CAST(((rt0.c1) NOT BETWEEN (rt1.c1) AND (rt0.c0)) AS NUMERIC)))) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt1.c0, rt1.c1, rt1.c2, rt0.c0, rt0.c1 FROM rt1, rt0 WHERE (((CAST(((rt0.c1) NOT BETWEEN (rt1.c1) AND (rt0.c0)) AS NUMERIC)) ISNULL));
SELECT rt0.c2, rt0.c3, rt1.c0, rt1.c1, rt1.c2, rt0.c0, rt0.c1 FROM rt1, rt0;
SELECT DISTINCT * FROM vt0, rt0 FULL OUTER JOIN vt1 ON NULL CROSS JOIN rt1 ON (('') NOT NULL);
SELECT DISTINCT * FROM vt0, rt0 FULL OUTER JOIN vt1 ON NULL CROSS JOIN rt1 ON (('') NOT NULL) WHERE ((((vt0.c0 IN ())) IS TRUE)) UNION SELECT DISTINCT * FROM vt0, rt0 FULL OUTER JOIN vt1 ON NULL CROSS JOIN rt1 ON (('') NOT NULL) WHERE ((NOT ((((vt0.c0 IN ())) IS TRUE)))) UNION SELECT DISTINCT * FROM vt0, rt0 FULL OUTER JOIN vt1 ON NULL CROSS JOIN rt1 ON (('') NOT NULL) WHERE ((((((vt0.c0 IN ())) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM vt0, rt0 FULL OUTER JOIN vt1 ON NULL CROSS JOIN rt1 ON (('') NOT NULL);
SELECT ALL rt0.c2, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0;
SELECT rt0.c2, rt0.c3, rt0.c0 FROM rt0 WHERE (0.5786252281045106) GROUP BY rt0.c2, rt0.c3, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c3, rt0.c0 FROM rt0 WHERE ((NOT (0.5786252281045106))) GROUP BY rt0.c2, rt0.c3, rt0.c0 UNION SELECT rt0.c2, rt0.c3, rt0.c0 FROM rt0 WHERE (((0.5786252281045106) ISNULL)) GROUP BY rt0.c2, rt0.c3, rt0.c0;
SELECT ALL rt0.c2, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MIN(MIN(TOTAL(MIN(MIN(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MIN(MIN(TOTAL(MIN(MIN(vt0.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN(MIN(TOTAL(MIN(MIN(vt0.c0)))))) ISNULL);
SELECT ALL TOTAL(((((vt1.c3) IS TRUE)) NOTNULL)) FROM vt1, rt0;
SELECT rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (0.9013642285917536) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (0.9013642285917536))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((0.9013642285917536) ISNULL));
SELECT rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT vt0.c0 FROM vt1, rt0, vt0;
SELECT DISTINCT vt0.c0 FROM vt1, rt0, vt0 WHERE (SUBSTR('T ?\nfB', ((rt0.c0)!=(rt0.c3)))) UNION SELECT DISTINCT vt0.c0 FROM vt1, rt0, vt0 WHERE ((NOT (SUBSTR('T ?\nfB', ((rt0.c0)<>(rt0.c3)))))) UNION SELECT DISTINCT vt0.c0 FROM vt1, rt0, vt0 WHERE (((SUBSTR('T ?\nfB', ((rt0.c0)!=(rt0.c3)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt1, rt0, vt0;
