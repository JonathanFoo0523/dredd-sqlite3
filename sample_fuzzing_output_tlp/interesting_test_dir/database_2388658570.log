-- Time: 2024/06/10 04:30:22
-- Database: database70
-- Database version: 3.40.0
-- seed value: 2388658570
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0); -- 6ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0 UNINDEXED); -- 0ms;
COMMIT; -- 0ms;
PRAGMA cache_spill = -5274271392127011458; -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (0.8285104774716692); -- 1ms;
INSERT OR IGNORE INTO vt1(c0) VALUES ('1985761120'); -- 4ms;
ROLLBACK TRANSACTION; -- 0ms;
CREATE VIEW  IF NOT EXISTS v0(c0) AS SELECT DISTINCT CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE NOCASE COLLATE RTRIM FROM vt0, vt1 WHERE ((NOT ((((x''))<((x'')))))); -- 1ms;
PRAGMA main.default_cache_size = -1878470747; -- 1ms;
REINDEX; -- 0ms;
ANALYZE vt0; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (x''); -- 3ms;
INSERT OR REPLACE INTO vt0 VALUES ('1985761120'); -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES (1.98576112E9); -- 1ms;
ANALYZE; -- 0ms;
VACUUM; -- 1ms;
PRAGMA temp.optimize; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
END; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
REINDEX  vt0; -- 0ms;
ANALYZE v0; -- 1ms;
INSERT OR ABORT INTO vt0(c0) VALUES ('1529502733'); -- 8ms;
PRAGMA temp.wal_autocheckpoint; -- 0ms;
VACUUM main; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM temp; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((NULL)IS('0.8285104774716692')))); -- 0ms;
PRAGMA temp.cell_size_check = false; -- 0ms;
PRAGMA temp.mmap_size; -- 0ms;
INSERT OR FAIL INTO vt1(c0) VALUES (x''); -- 0ms;
INSERT OR ROLLBACK INTO vt1(c0) VALUES (0.26998361817520045), ('568331713'), (''); -- 2ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (''); -- 1ms;
REINDEX  vt0; -- 2ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (x'2101'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.8285104774716692); -- 0ms;
PRAGMA wal_checkpoint(TRUNCATE); -- 0ms;
PRAGMA recursive_triggers = false; -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES (x'f62b'), ('-144035683'), (NULL); -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
ANALYZE; -- 0ms;
ROLLBACK TRANSACTION; -- 18ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 602395543);\n; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', '-1060231684 -1362892299 sz=-144035683'); -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES (''); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX  vt1; -- 0ms;
PRAGMA temp.integrity_check; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
REINDEX  vt1; -- 0ms;
PRAGMA threads = -5853655097722755665; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=2088001480'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES ('-144035683'); -- 0ms;
ROLLBACK TRANSACTION; -- 10ms;
INSERT OR IGNORE INTO vt1 VALUES (''); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO vt1(c0) VALUES (x''); -- 0ms;
REINDEX  vt0; -- 0ms;
REINDEX  vt1; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES ('-1450742967'); -- 8ms;
PRAGMA temp.defer_foreign_keys = false; -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES ('568331713'); -- 1ms;
CREATE VIRTUAL TABLE vt2 USING fts5(c0 UNINDEXED); -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES (x''); -- 10ms;
PRAGMA main.cell_size_check = true; -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES (0.4628172941061406); -- 13ms;
INSERT OR FAIL INTO vt0(c0) VALUES (0.4628172941061406); -- 1ms;
PRAGMA recursive_triggers = false; -- 0ms;
PRAGMA locking_mode = EXCLUSIVE; -- 0ms;
REINDEX; -- 0ms;
INSERT INTO vt2(vt2, rank) VALUES('crisismerge', 784415847); -- 0ms;
INSERT OR ROLLBACK INTO vt1 VALUES (0Xffffffffcf23bc44); -- 4ms;
ANALYZE; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM v0, vt1;
SELECT * FROM v0, vt1 WHERE ((((vt1.c0, v0.c0, vt1.c0)) NOT BETWEEN ((((NULL) BETWEEN (v0.c0) AND (v0.c0)), NULL, CAST(v0.c0 AS REAL))) AND ((((v0.c0)<=(vt1.c0)), ((vt1.c0)/(vt1.c0)), ((v0.c0)GLOB(vt1.c0)))))) UNION ALL SELECT ALL * FROM v0, vt1 WHERE ((NOT ((((vt1.c0, v0.c0, vt1.c0)) NOT BETWEEN ((((NULL) BETWEEN (v0.c0) AND (v0.c0)), NULL, CAST(v0.c0 AS REAL))) AND ((((v0.c0)<=(vt1.c0)), ((vt1.c0)/(vt1.c0)), ((v0.c0)GLOB(vt1.c0)))))))) UNION ALL SELECT ALL * FROM v0, vt1 WHERE ((((((vt1.c0, v0.c0, vt1.c0)) NOT BETWEEN ((((NULL) BETWEEN (v0.c0) AND (v0.c0)), NULL, CAST(v0.c0 AS REAL))) AND ((((v0.c0)<=(vt1.c0)), ((vt1.c0)/(vt1.c0)), ((v0.c0)GLOB(vt1.c0)))))) ISNULL));
SELECT ALL * FROM v0, vt1;
SELECT DISTINCT * FROM v0 INNER JOIN vt2 ON (((v0.c0 COLLATE BINARY, ((((v0.c0)OR(v0.c0)))OR(v0.c0)), ((v0.c0)<<(v0.c0))))>((CASE x''  WHEN vt2.c0 THEN v0.c0 WHEN vt2.c0 THEN v0.c0 WHEN v0.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN v0.c0 END, ((vt2.c0) BETWEEN (vt2.c0) AND (v0.c0)), (vt2.c0 IN ()))));
SELECT DISTINCT * FROM v0 INNER JOIN vt2 ON (((v0.c0 COLLATE BINARY, ((((v0.c0)OR(v0.c0)))OR(v0.c0)), ((v0.c0)<<(v0.c0))))>((CASE x''  WHEN vt2.c0 THEN v0.c0 WHEN vt2.c0 THEN v0.c0 WHEN v0.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN v0.c0 END, ((vt2.c0) BETWEEN (vt2.c0) AND (v0.c0)), (vt2.c0 IN ())))) WHERE ((LTRIM(vt2.c0) IN ((((v0.c0)) NOT BETWEEN ((vt2.c0)) AND ((vt2.c0))), ((vt2.c0) NOTNULL)))) UNION SELECT DISTINCT * FROM v0 INNER JOIN vt2 ON (((v0.c0 COLLATE BINARY, ((((v0.c0)OR(v0.c0)))OR(v0.c0)), ((v0.c0)<<(v0.c0))))>((CASE x''  WHEN vt2.c0 THEN v0.c0 WHEN vt2.c0 THEN v0.c0 WHEN v0.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN v0.c0 END, ((vt2.c0) BETWEEN (vt2.c0) AND (v0.c0)), (vt2.c0 IN ())))) WHERE ((NOT ((LTRIM(vt2.c0) IN ((((v0.c0)) NOT BETWEEN ((vt2.c0)) AND ((vt2.c0))), ((vt2.c0) NOTNULL)))))) UNION SELECT DISTINCT * FROM v0 INNER JOIN vt2 ON (((v0.c0 COLLATE BINARY, ((((v0.c0)OR(v0.c0)))OR(v0.c0)), ((v0.c0)<<(v0.c0))))>((CASE x''  WHEN vt2.c0 THEN v0.c0 WHEN vt2.c0 THEN v0.c0 WHEN v0.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN v0.c0 END, ((vt2.c0) BETWEEN (vt2.c0) AND (v0.c0)), (vt2.c0 IN ())))) WHERE ((((LTRIM(vt2.c0) IN ((((v0.c0)) NOT BETWEEN ((vt2.c0)) AND ((vt2.c0))), ((vt2.c0) NOTNULL)))) ISNULL));
SELECT DISTINCT * FROM v0 INNER JOIN vt2 ON (((v0.c0 COLLATE BINARY, ((((v0.c0)OR(v0.c0)))OR(v0.c0)), ((v0.c0)<<(v0.c0))))>((CASE x''  WHEN vt2.c0 THEN v0.c0 WHEN vt2.c0 THEN v0.c0 WHEN v0.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN v0.c0 END, ((vt2.c0) BETWEEN (vt2.c0) AND (v0.c0)), (vt2.c0 IN ()))));
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 WHERE (CASE ((vt2.c0)<>(vt2.c0))  WHEN vt2.c0 THEN ((((vt2.c0)OR(vt2.c0)))OR(vt2.c0)) ELSE ((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)) END) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2 WHERE ((NOT (CASE ((vt2.c0)!=(vt2.c0))  WHEN vt2.c0 THEN ((((vt2.c0)OR(vt2.c0)))OR(vt2.c0)) ELSE ((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)) END))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE (((CASE ((vt2.c0)!=(vt2.c0))  WHEN vt2.c0 THEN ((((vt2.c0)OR(vt2.c0)))OR(vt2.c0)) ELSE ((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)) END) ISNULL)) GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0, vt1.c0 FROM vt2, vt1 GROUP BY vt2.c0, vt1.c0;
SELECT ALL vt2.c0, vt1.c0 FROM vt2, vt1 GROUP BY vt2.c0, vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt2.c0, vt1.c0 FROM vt2, vt1 GROUP BY vt2.c0, vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt2.c0, vt1.c0 FROM vt2, vt1 GROUP BY vt2.c0, vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt2.c0, vt1.c0 FROM vt2, vt1 GROUP BY vt2.c0, vt1.c0;
SELECT ALL vt2.c0, vt1.c0 FROM vt2, vt1 GROUP BY vt2.c0, vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt2.c0, vt1.c0 FROM vt2, vt1 GROUP BY vt2.c0, vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt2.c0, vt1.c0 FROM vt2, vt1 GROUP BY vt2.c0, vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt2.c0, vt1.c0 FROM vt2, vt1 GROUP BY vt2.c0, vt1.c0;
SELECT v0.c0 FROM v0, vt0;
SELECT v0.c0 FROM v0, vt0 WHERE (CAST(((vt0.c0) IS TRUE) AS BLOB)) UNION ALL SELECT ALL v0.c0 FROM v0, vt0 WHERE ((NOT (CAST(((vt0.c0) IS TRUE) AS BLOB)))) UNION ALL SELECT v0.c0 FROM v0, vt0 WHERE (((CAST(((vt0.c0) IS TRUE) AS BLOB)) ISNULL));
SELECT v0.c0 FROM v0, vt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((((TOTAL_CHANGES()))<(((vt1.c0 IN ('-453114472')))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((((TOTAL_CHANGES()))<(((vt1.c0 IN ('-453114472')))))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((((TOTAL_CHANGES()))<(((vt1.c0 IN ('-453114472')))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt0.c0 FROM vt2 INNER JOIN vt0 ON (vt0.c0 COLLATE RTRIM IN ()) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt2 INNER JOIN vt0 ON (vt0.c0 COLLATE RTRIM IN ()) WHERE ((((((vt2.c0)) BETWEEN ((vt2.c0)) AND ((vt0.c0))))<(CASE WHEN '郐^জ' THEN vt2.c0 ELSE vt2.c0 END))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt2 INNER JOIN vt0 ON (vt0.c0 COLLATE RTRIM IN ()) WHERE ((NOT ((((((vt2.c0)) BETWEEN ((vt2.c0)) AND ((vt0.c0))))<(CASE WHEN '郐^জ' THEN vt2.c0 ELSE vt2.c0 END))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt2 INNER JOIN vt0 ON (vt0.c0 COLLATE RTRIM IN ()) WHERE ((((((((vt2.c0)) BETWEEN ((vt2.c0)) AND ((vt0.c0))))<(CASE WHEN '郐^জ' THEN vt2.c0 ELSE vt2.c0 END))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt2 INNER JOIN vt0 ON (vt0.c0 COLLATE RTRIM IN ()) GROUP BY vt0.c0;
SELECT ALL vt1.c0, vt2.c0, vt0.c0, v0.c0 FROM vt1, v0, vt0 CROSS JOIN vt2 ON (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END IN ()) GROUP BY vt1.c0, vt2.c0, vt0.c0, v0.c0;
SELECT ALL vt1.c0, vt2.c0, vt0.c0, v0.c0 FROM vt1, v0, vt0 CROSS JOIN vt2 ON (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END IN ()) GROUP BY vt1.c0, vt2.c0, vt0.c0, v0.c0 HAVING TOTAL(vt2.c0) COLLATE RTRIM UNION ALL SELECT ALL vt1.c0, vt2.c0, vt0.c0, v0.c0 FROM vt1, v0, vt0 CROSS JOIN vt2 ON (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END IN ()) GROUP BY vt1.c0, vt2.c0, vt0.c0, v0.c0 HAVING (NOT (TOTAL(vt2.c0) COLLATE RTRIM)) UNION ALL SELECT vt1.c0, vt2.c0, vt0.c0, v0.c0 FROM vt1, v0, vt0 CROSS JOIN vt2 ON (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END IN ()) GROUP BY vt1.c0, vt2.c0, vt0.c0, v0.c0 HAVING ((TOTAL(vt2.c0) COLLATE RTRIM) ISNULL);
SELECT ALL vt1.c0, vt2.c0, vt0.c0, v0.c0 FROM vt1, v0, vt0 CROSS JOIN vt2 ON (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END IN ()) GROUP BY vt1.c0, vt2.c0, vt0.c0, v0.c0;
SELECT ALL vt1.c0, vt2.c0, vt0.c0, v0.c0 FROM vt1, v0, vt0 CROSS JOIN vt2 ON (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END IN ()) GROUP BY vt1.c0, vt2.c0, vt0.c0, v0.c0 HAVING TOTAL(vt2.c0) COLLATE RTRIM UNION ALL SELECT ALL vt1.c0, vt2.c0, vt0.c0, v0.c0 FROM vt1, v0, vt0 CROSS JOIN vt2 ON (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END IN ()) GROUP BY vt1.c0, vt2.c0, vt0.c0, v0.c0 HAVING (NOT (TOTAL(vt2.c0) COLLATE RTRIM)) UNION ALL SELECT vt1.c0, vt2.c0, vt0.c0, v0.c0 FROM vt1, v0, vt0 CROSS JOIN vt2 ON (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END IN ()) GROUP BY vt1.c0, vt2.c0, vt0.c0, v0.c0 HAVING ((TOTAL(vt2.c0) COLLATE RTRIM) ISNULL);
SELECT ALL vt1.c0, vt2.c0, vt0.c0, v0.c0 FROM vt1, v0, vt0 CROSS JOIN vt2 ON (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END IN ()) GROUP BY vt1.c0, vt2.c0, vt0.c0, v0.c0;
SELECT ALL * FROM vt2, v0, vt1, vt0;
SELECT ALL * FROM vt2, v0, vt1, vt0 WHERE (((NULL) NOT BETWEEN ((- (v0.c0))) AND ((- (0Xffffffffe8da4829))))) UNION ALL SELECT ALL * FROM vt2, v0, vt1, vt0 WHERE ((NOT (((NULL) NOT BETWEEN ((- (v0.c0))) AND ((- (0Xffffffffe8da4829))))))) UNION ALL SELECT * FROM vt2, v0, vt1, vt0 WHERE (((((NULL) NOT BETWEEN ((- (v0.c0))) AND ((- (0xffffffffe8da4829))))) ISNULL));
SELECT ALL * FROM vt2, v0, vt1, vt0;
SELECT DISTINCT v0.c0, vt1.c0 FROM vt1, v0;
SELECT DISTINCT v0.c0, vt1.c0 FROM vt1, v0 NOT INDEXED WHERE ((((v0.c0 IN (vt1.c0)))<(((v0.c0)/(v0.c0))))) UNION SELECT DISTINCT v0.c0, vt1.c0 FROM vt1, v0 WHERE ((NOT ((((v0.c0 IN (vt1.c0)))<(((v0.c0)/(v0.c0))))))) UNION SELECT DISTINCT v0.c0, vt1.c0 FROM vt1, v0 WHERE ((((((v0.c0 IN (vt1.c0)))<(((v0.c0)/(v0.c0))))) ISNULL));
SELECT DISTINCT v0.c0, vt1.c0 FROM vt1, v0;
SELECT vt0.c0, vt1.c0 FROM vt1 CROSS JOIN vt0 ON CAST((vt0.c0 IN ()) AS BLOB) GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt1 CROSS JOIN vt0 ON CAST((vt0.c0 IN ()) AS BLOB) WHERE ((('1585376280')<>(vt1.c0))) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt1 CROSS JOIN vt0 ON CAST((vt0.c0 IN ()) AS BLOB) WHERE ((NOT ((('1585376280')<>(vt1.c0))))) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt1 CROSS JOIN vt0 ON CAST((vt0.c0 IN ()) AS BLOB) WHERE ((((('1585376280')!=(vt1.c0))) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt1 CROSS JOIN vt0 ON CAST((vt0.c0 IN ()) AS BLOB) GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, v0.c0, vt1.c0 FROM v0, vt1 INNER JOIN vt0 ON 0.711185956437142 GROUP BY vt0.c0, v0.c0, vt1.c0;
SELECT vt0.c0, v0.c0, vt1.c0 FROM v0, vt1 INNER JOIN vt0 ON 0.711185956437142 GROUP BY vt0.c0, v0.c0, vt1.c0 HAVING (- (((COUNT(TOTAL(v0.c0)))>=(SUM(vt0.c0))))) UNION ALL SELECT vt0.c0, v0.c0, vt1.c0 FROM v0, vt1 INNER JOIN vt0 ON 0.711185956437142 GROUP BY vt0.c0, v0.c0, vt1.c0 HAVING (NOT ((- (((COUNT(TOTAL(v0.c0)))>=(SUM(vt0.c0))))))) UNION ALL SELECT vt0.c0, v0.c0, vt1.c0 FROM v0, vt1 INNER JOIN vt0 ON 0.711185956437142 GROUP BY vt0.c0, v0.c0, vt1.c0 HAVING (((- (((COUNT(TOTAL(v0.c0)))>=(SUM(vt0.c0)))))) ISNULL);
SELECT * FROM v0, vt0, vt2;
SELECT * FROM v0, vt0, vt2 WHERE (((((vt0.c0) IS TRUE)) NOTNULL)) UNION ALL SELECT * FROM v0, vt0, vt2 WHERE ((NOT (((((vt0.c0) IS TRUE)) NOTNULL)))) UNION ALL SELECT * FROM v0, vt0, vt2 WHERE (((((((vt0.c0) IS TRUE)) NOTNULL)) ISNULL));
SELECT * FROM v0, vt0, vt2;
SELECT DISTINCT * FROM v0, vt0, vt2, vt1;
SELECT DISTINCT * FROM v0, vt0, vt2, vt1 WHERE ((((((vt0.c0, vt2.c0, v0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt2.c0)) AND ((v0.c0, v0.c0, vt2.c0)))) BETWEEN (((vt1.c0) NOT BETWEEN ('-388347863') AND (vt0.c0))) AND (0.5842797529413359))) UNION SELECT DISTINCT * FROM v0, vt0, vt2, vt1 WHERE ((NOT ((((((vt0.c0, vt2.c0, v0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt2.c0)) AND ((v0.c0, v0.c0, vt2.c0)))) BETWEEN (((vt1.c0) NOT BETWEEN ('-388347863') AND (vt0.c0))) AND (0.5842797529413359))))) UNION SELECT DISTINCT * FROM v0, vt0, vt2, vt1 WHERE ((((((((vt0.c0, vt2.c0, v0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt2.c0)) AND ((v0.c0, v0.c0, vt2.c0)))) BETWEEN (((vt1.c0) NOT BETWEEN ('-388347863') AND (vt0.c0))) AND (0.5842797529413359))) ISNULL));
SELECT DISTINCT * FROM v0, vt0, vt2, vt1;
SELECT ALL v0.c0, vt1.c0, vt0.c0, vt2.c0 FROM v0, vt0, vt2, vt1 GROUP BY v0.c0, vt1.c0, vt0.c0, vt2.c0;
SELECT v0.c0, vt1.c0, vt0.c0, vt2.c0 FROM v0, vt0, vt2, vt1 WHERE ('0.711185956437142') GROUP BY v0.c0, vt1.c0, vt0.c0, vt2.c0 UNION SELECT ALL v0.c0, vt1.c0, vt0.c0, vt2.c0 FROM v0, vt0, vt2, vt1 WHERE ((NOT ('0.711185956437142'))) GROUP BY v0.c0, vt1.c0, vt0.c0, vt2.c0 UNION SELECT v0.c0, vt1.c0, vt0.c0, vt2.c0 FROM v0, vt0, vt2, vt1 WHERE ((('0.711185956437142') ISNULL)) GROUP BY v0.c0, vt1.c0, vt0.c0, vt2.c0;
SELECT ALL v0.c0, vt1.c0, vt0.c0, vt2.c0 FROM v0, vt0, vt2, vt1 GROUP BY v0.c0, vt1.c0, vt0.c0, vt2.c0;
SELECT ALL v0.c0 FROM vt1, vt2, v0 CROSS JOIN vt0 ON (((vt0.c0)<>(v0.c0)) IN ()) GROUP BY v0.c0;
SELECT v0.c0 FROM vt1, vt2, v0 CROSS JOIN vt0 ON (((vt0.c0)<>(v0.c0)) IN ()) GROUP BY v0.c0 HAVING (~ (GROUP_CONCAT(SUM(vt0.c0)))) UNION ALL SELECT v0.c0 FROM vt1, vt2, v0 CROSS JOIN vt0 ON (((vt0.c0)<>(v0.c0)) IN ()) GROUP BY v0.c0 HAVING (NOT ((~ (GROUP_CONCAT(SUM(vt0.c0)))))) UNION ALL SELECT ALL v0.c0 FROM vt1, vt2 NOT INDEXED, v0 CROSS JOIN vt0 ON (((vt0.c0)!=(v0.c0)) IN ()) GROUP BY v0.c0 HAVING (((~ (GROUP_CONCAT(SUM(vt0.c0))))) ISNULL);
SELECT ALL TOTAL(v0.c0) FROM v0, vt2;
SELECT ALL v0.c0 FROM vt0, v0 FULL OUTER JOIN vt2 ON (((((vt0.c0, vt1.c0, v0.c0, v0.c0, vt2.c0)) NOT BETWEEN ((v0.c0, vt0.c0, vt1.c0, vt1.c0, vt2.c0)) AND ((vt1.c0, vt2.c0, vt1.c0, vt0.c0, vt2.c0))))<=((vt2.c0 IN ()))) RIGHT OUTER JOIN vt1 ON ((vt0.c0)GLOB(CASE WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN x'' WHEN 558012599 THEN vt0.c0 END));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN ((~ (vt0.c0))) AND (CASE WHEN vt0.c0 THEN 0.6229160907536291 END))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN ((~ (vt0.c0))) AND (CASE WHEN vt0.c0 THEN 0.6229160907536291 END))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN ((~ (vt0.c0))) AND (CASE WHEN vt0.c0 THEN 0.6229160907536291 END))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((CAST(vt1.c0 AS BLOB))AND(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))))AND(CAST(vt1.c0 AS TEXT)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((CAST(vt1.c0 AS BLOB))AND(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))))AND(CAST(vt1.c0 AS TEXT)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((((CAST(vt1.c0 AS BLOB))AND(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))))AND(CAST(vt1.c0 AS TEXT)))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0, vt0.c0, vt2.c0, v0.c0 FROM v0, vt2, vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt2.c0, v0.c0;
SELECT ALL vt1.c0, vt0.c0, vt2.c0, v0.c0 FROM v0, vt2, vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt2.c0, v0.c0 HAVING x'' UNION ALL SELECT vt1.c0, vt0.c0, vt2.c0, v0.c0 FROM v0, vt2, vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt2.c0, v0.c0 HAVING (NOT (x'')) UNION ALL SELECT vt1.c0, vt0.c0, vt2.c0, v0.c0 FROM v0, vt2, vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt2.c0, v0.c0 HAVING ((x'') ISNULL);
SELECT ALL vt1.c0, vt0.c0, vt2.c0, v0.c0 FROM v0, vt2, vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt2.c0, v0.c0;
SELECT ALL vt1.c0, vt0.c0, vt2.c0, v0.c0 FROM v0, vt2, vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt2.c0, v0.c0 HAVING x'' UNION ALL SELECT vt1.c0, vt0.c0, vt2.c0, v0.c0 FROM v0, vt2, vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt2.c0, v0.c0 HAVING (NOT (x'')) UNION ALL SELECT vt1.c0, vt0.c0, vt2.c0, v0.c0 FROM v0, vt2, vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt2.c0, v0.c0 HAVING ((x'') ISNULL);
SELECT ALL vt1.c0, vt0.c0, vt2.c0, v0.c0 FROM v0, vt2, vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt2.c0, v0.c0;
SELECT * FROM vt1;
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)<>(vt1.c0))) NOTNULL)) UNION ALL SELECT * FROM vt1 WHERE ((NOT (((((vt1.c0)<>(vt1.c0))) NOTNULL)))) UNION ALL SELECT ALL * FROM vt1 WHERE (((((((vt1.c0)<>(vt1.c0))) NOTNULL)) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((~ (vt1.c0 COLLATE BINARY))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((~ (vt1.c0 COLLATE BINARY))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((~ (vt1.c0 COLLATE BINARY))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt0.c0, vt2.c0 FROM vt2, vt0, vt1 GROUP BY vt0.c0, vt2.c0;
SELECT ALL vt0.c0, vt2.c0 FROM vt2, vt0, vt1 WHERE (CAST(vt0.c0 AS INTEGER)) GROUP BY vt0.c0, vt2.c0 UNION SELECT ALL vt0.c0, vt2.c0 FROM vt2, vt0, vt1 WHERE ((NOT (CAST(vt0.c0 AS INTEGER)))) GROUP BY vt0.c0, vt2.c0 UNION SELECT vt0.c0, vt2.c0 FROM vt2, vt0, vt1 WHERE (((CAST(vt0.c0 AS INTEGER)) ISNULL)) GROUP BY vt0.c0, vt2.c0;
SELECT vt0.c0, vt2.c0 FROM vt2, vt0, vt1 GROUP BY vt0.c0, vt2.c0;
SELECT ALL vt0.c0 FROM vt2, v0, vt0, vt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt2, v0, vt0, vt1 GROUP BY vt0.c0 HAVING (~ (IFNULL(DISTINCT COUNT(*), COUNT(*)))) UNION ALL SELECT ALL vt0.c0 FROM vt2, v0, vt0, vt1 GROUP BY vt0.c0 HAVING (NOT ((~ (IFNULL(DISTINCT COUNT(*), COUNT(*)))))) UNION ALL SELECT ALL vt0.c0 FROM vt2, v0, vt0, vt1 GROUP BY vt0.c0 HAVING (((~ (IFNULL(DISTINCT COUNT(*), COUNT(*))))) ISNULL);
SELECT ALL vt0.c0 FROM vt2, v0, vt0, vt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt2, v0, vt0, vt1 GROUP BY vt0.c0 HAVING (~ (IFNULL(DISTINCT COUNT(*), COUNT(*)))) UNION ALL SELECT ALL vt0.c0 FROM vt2, v0, vt0, vt1 GROUP BY vt0.c0 HAVING (NOT ((~ (IFNULL(DISTINCT COUNT(*), COUNT(*)))))) UNION ALL SELECT ALL vt0.c0 FROM vt2, v0, vt0, vt1 GROUP BY vt0.c0 HAVING (((~ (IFNULL(DISTINCT COUNT(*), COUNT(*))))) ISNULL);
SELECT ALL vt0.c0 FROM vt2, v0, vt0, vt1 GROUP BY vt0.c0;
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE ('0.4628172941061406') UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT ('0.4628172941061406'))) UNION ALL SELECT ALL * FROM vt1 WHERE ((('0.4628172941061406') ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM vt1, vt2, v0, vt0;
SELECT DISTINCT * FROM vt1, vt2, v0, vt0 WHERE ((vt0.c0 IN (CAST(vt0.c0 AS TEXT)))) UNION SELECT DISTINCT * FROM vt1, vt2, v0, vt0 WHERE ((NOT ((vt0.c0 IN (CAST(vt0.c0 AS TEXT)))))) UNION SELECT DISTINCT * FROM vt1, vt2, v0, vt0 WHERE ((((vt0.c0 IN (CAST(vt0.c0 AS TEXT)))) ISNULL));
SELECT DISTINCT * FROM vt1, vt2, v0, vt0;
SELECT ALL vt0.c0, vt2.c0 FROM vt2 NATURAL JOIN vt0 GROUP BY vt0.c0, vt2.c0;
SELECT ALL vt0.c0, vt2.c0 FROM vt2 NATURAL JOIN vt0 WHERE ((vt0.c0 IN (vt2.c0)) COLLATE RTRIM) GROUP BY vt0.c0, vt2.c0 UNION SELECT vt0.c0, vt2.c0 FROM vt2 NATURAL JOIN vt0 WHERE ((NOT ((vt0.c0 IN (vt2.c0)) COLLATE RTRIM))) GROUP BY vt0.c0, vt2.c0 UNION SELECT vt0.c0, vt2.c0 FROM vt2 NATURAL JOIN vt0 WHERE ((((vt0.c0 IN (vt2.c0)) COLLATE RTRIM) ISNULL)) GROUP BY vt0.c0, vt2.c0;
SELECT ALL vt0.c0, vt2.c0 FROM vt2 NATURAL JOIN vt0 GROUP BY vt0.c0, vt2.c0;
SELECT vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON ((((((0Xffffffffab0fadc5)AND(v0.c0)))AND(vt1.c0)))-(((vt1.c0)OR(vt0.c0)))) RIGHT OUTER JOIN vt1 ON (((+ (vt0.c0))) IS FALSE) GROUP BY vt0.c0;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (((((((vt0.c0) NOTNULL))AND(CAST(vt0.c0 AS NUMERIC))))OR(((NULL) BETWEEN (vt0.c0) AND (vt0.c0))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((((((vt0.c0) NOTNULL))AND(CAST(vt0.c0 AS NUMERIC))))OR(((NULL) BETWEEN (vt0.c0) AND (vt0.c0))))))) UNION ALL SELECT * FROM vt0 WHERE (((((((((vt0.c0) NOTNULL))AND(CAST(vt0.c0 AS NUMERIC))))OR(((NULL) BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt1.c0, vt2.c0 FROM vt1, vt2;
SELECT DISTINCT vt1.c0, vt2.c0 FROM vt1, vt2 WHERE (CAST(((((vt2.c0)OR(vt1.c0)))AND(vt1.c0)) AS BLOB)) UNION SELECT DISTINCT vt1.c0, vt2.c0 FROM vt1, vt2 WHERE ((NOT (CAST(((((vt2.c0)OR(vt1.c0)))AND(vt1.c0)) AS BLOB)))) UNION SELECT DISTINCT vt1.c0, vt2.c0 FROM vt1, vt2 WHERE (((CAST(((((vt2.c0)OR(vt1.c0)))AND(vt1.c0)) AS BLOB)) ISNULL));
SELECT DISTINCT vt1.c0, vt2.c0 FROM vt1, vt2;
SELECT ALL vt2.c0 FROM v0, vt0, vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM v0, vt0, vt2 WHERE (((vt2.c0) IS FALSE)) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM v0, vt0, vt2 WHERE ((NOT (((vt2.c0) IS FALSE)))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM v0, vt0, vt2 WHERE (((((vt2.c0) IS FALSE)) ISNULL)) GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM v0, vt0, vt2 GROUP BY vt2.c0;
SELECT ALL vt1.c0 FROM vt1, vt2 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt2 GROUP BY vt1.c0 HAVING GROUP_CONCAT(UNICODE(vt2.c0)) UNION ALL SELECT vt1.c0 FROM vt1, vt2 GROUP BY vt1.c0 HAVING (NOT (GROUP_CONCAT(UNICODE(vt2.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt2 GROUP BY vt1.c0 HAVING ((GROUP_CONCAT(UNICODE(vt2.c0))) ISNULL);
SELECT ALL vt1.c0 FROM vt1, vt2 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt2 GROUP BY vt1.c0 HAVING GROUP_CONCAT(UNICODE(vt2.c0)) UNION ALL SELECT vt1.c0 FROM vt1, vt2 GROUP BY vt1.c0 HAVING (NOT (GROUP_CONCAT(UNICODE(vt2.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt2 GROUP BY vt1.c0 HAVING ((GROUP_CONCAT(UNICODE(vt2.c0))) ISNULL);
SELECT ALL vt1.c0 FROM vt1, vt2 GROUP BY vt1.c0;
SELECT * FROM v0, vt0;
SELECT ALL * FROM v0, vt0 WHERE (CASE CAST(v0.c0 AS NUMERIC)  WHEN vt0.c0 THEN NULL ELSE CAST(vt0.c0 AS TEXT) END) UNION ALL SELECT * FROM v0, vt0 WHERE ((NOT (CASE CAST(v0.c0 AS NUMERIC)  WHEN vt0.c0 THEN NULL ELSE CAST(vt0.c0 AS TEXT) END))) UNION ALL SELECT * FROM v0, vt0 WHERE (((CASE CAST(v0.c0 AS NUMERIC)  WHEN vt0.c0 THEN NULL ELSE CAST(vt0.c0 AS TEXT) END) ISNULL));
SELECT * FROM v0, vt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (CASE WHEN ((((v0.c0)AND(v0.c0)))AND('-716371556')) THEN ((v0.c0) NOTNULL) END) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (CASE WHEN ((((v0.c0)AND(v0.c0)))AND('-716371556')) THEN ((v0.c0) NOTNULL) END))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((CASE WHEN ((((v0.c0)AND(v0.c0)))AND('-716371556')) THEN ((v0.c0) NOTNULL) END) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0, vt0, vt1 LEFT OUTER JOIN vt2 ON ((~ (vt2.c0)) IN (rtreenode(NULL, vt1.c0), ((vt1.c0)-(vt2.c0)))) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0, vt1 LEFT OUTER JOIN vt2 ON ((~ (vt2.c0)) IN (rtreenode(NULL, vt1.c0), ((vt1.c0)-(vt2.c0)))) WHERE ((NOT (((((vt1.c0)OR(v0.c0)))AND(v0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, vt0, vt1 LEFT OUTER JOIN vt2 ON ((~ (vt2.c0)) IN (rtreenode(NULL, vt1.c0), ((vt1.c0)-(vt2.c0)))) WHERE ((NOT ((NOT (((((vt1.c0)OR(v0.c0)))AND(v0.c0))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, vt0, vt1 LEFT OUTER JOIN vt2 ON ((~ (vt2.c0)) IN (rtreenode(NULL, vt1.c0), ((vt1.c0)-(vt2.c0)))) WHERE ((((NOT (((((vt1.c0)OR(v0.c0)))AND(v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0, vt1 LEFT OUTER JOIN vt2 ON ((~ (vt2.c0)) IN (rtreenode(NULL, vt1.c0), ((vt1.c0)-(vt2.c0)))) GROUP BY v0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING vt1.c0 UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (vt1.c0)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((vt1.c0) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING vt1.c0 UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (vt1.c0)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((vt1.c0) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT * FROM v0, vt0, vt1;
SELECT ALL * FROM v0, vt0, vt1 WHERE ((CAST(vt1.c0 AS INTEGER) IN ())) UNION ALL SELECT ALL * FROM v0, vt0, vt1 WHERE ((NOT ((CAST(vt1.c0 AS INTEGER) IN ())))) UNION ALL SELECT ALL * FROM v0, vt0, vt1 WHERE ((((CAST(vt1.c0 AS INTEGER) IN ())) ISNULL));
SELECT * FROM v0, vt0, vt1;
SELECT DISTINCT * FROM vt1 FULL OUTER JOIN vt0 ON (- (vt0.c0)) COLLATE NOCASE RIGHT OUTER JOIN v0 ON CAST((- (vt0.c0)) AS REAL);
SELECT DISTINCT * FROM vt1 FULL OUTER JOIN vt0 ON (- (vt0.c0)) COLLATE NOCASE RIGHT OUTER JOIN v0 ON CAST((- (vt0.c0)) AS REAL) WHERE (((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)) COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt1 FULL OUTER JOIN vt0 ON (- (vt0.c0)) COLLATE NOCASE RIGHT OUTER JOIN v0 ON CAST((- (vt0.c0)) AS REAL) WHERE ((NOT (((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt1 FULL OUTER JOIN vt0 ON (- (vt0.c0)) COLLATE NOCASE RIGHT OUTER JOIN v0 ON CAST((- (vt0.c0)) AS REAL) WHERE (((((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt1 FULL OUTER JOIN vt0 ON (- (vt0.c0)) COLLATE NOCASE RIGHT OUTER JOIN v0 ON CAST((- (vt0.c0)) AS REAL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE BINARY) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((vt0.c0 IN ()) COLLATE BINARY))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((vt0.c0 IN ()) COLLATE BINARY) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((v0.c0) BETWEEN (TOTAL(v0.c0)) AND (v0.c0)))%(MIN(COUNT(GROUP_CONCAT(COUNT(*)))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((((v0.c0) BETWEEN (TOTAL(v0.c0)) AND (v0.c0)))%(MIN(COUNT(GROUP_CONCAT(COUNT(*)))))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((((v0.c0) BETWEEN (TOTAL(v0.c0)) AND (v0.c0)))%(MIN(COUNT(GROUP_CONCAT(COUNT(*))))))) ISNULL);
SELECT * FROM vt0, vt1 CROSS JOIN vt2 ON 0.7441858389004509 RIGHT OUTER JOIN v0 ON CAST(vt1.c0 AS INTEGER);
SELECT * FROM vt0, vt1 CROSS JOIN vt2 ON 0.7441858389004509 RIGHT OUTER JOIN v0 ON CAST(vt1.c0 AS INTEGER) WHERE (((((((((((vt0.c0)AND(v0.c0)))OR(((x'')AND(vt2.c0)))))AND(CASE v0.c0  WHEN vt2.c0 THEN vt0.c0 END)))OR((+ (vt1.c0)))))AND((~ (vt1.c0))))) UNION ALL SELECT ALL * FROM vt0, vt1 CROSS JOIN vt2 ON 0.7441858389004509 RIGHT OUTER JOIN v0 ON CAST(vt1.c0 AS INTEGER) WHERE ((NOT (((((((((((vt0.c0)AND(v0.c0)))OR(((x'')AND(vt2.c0)))))AND(CASE v0.c0  WHEN vt2.c0 THEN vt0.c0 END)))OR((+ (vt1.c0)))))AND((~ (vt1.c0))))))) UNION ALL SELECT * FROM vt0, vt1 CROSS JOIN vt2 ON 0.7441858389004509 RIGHT OUTER JOIN v0 ON CAST(vt1.c0 AS INTEGER) WHERE (((((((((((((vt0.c0)AND(v0.c0)))OR(((x'')AND(vt2.c0)))))AND(CASE v0.c0  WHEN vt2.c0 THEN vt0.c0 END)))OR((+ (vt1.c0)))))AND((~ (vt1.c0))))) ISNULL));
SELECT * FROM vt0, vt1 CROSS JOIN vt2 ON 0.7441858389004509 RIGHT OUTER JOIN v0 ON CAST(vt1.c0 AS INTEGER);
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((vt1.c0)>>(vt1.c0)) COLLATE BINARY) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0)>>(vt1.c0)) COLLATE BINARY))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((vt1.c0)>>(vt1.c0)) COLLATE BINARY) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt0.c0, vt2.c0, v0.c0 FROM v0, vt0, vt2 GROUP BY vt0.c0, vt2.c0, v0.c0;
SELECT ALL vt0.c0, vt2.c0, v0.c0 FROM v0, vt0, vt2 WHERE (CAST(((v0.c0)IS(vt2.c0)) AS BLOB)) GROUP BY vt0.c0, vt2.c0, v0.c0 UNION SELECT ALL vt0.c0, vt2.c0, v0.c0 FROM v0, vt0, vt2 WHERE ((NOT (CAST(((v0.c0)IS(vt2.c0)) AS BLOB)))) GROUP BY vt0.c0, vt2.c0, v0.c0 UNION SELECT ALL vt0.c0, vt2.c0, v0.c0 FROM v0, vt0, vt2 WHERE (((CAST(((v0.c0)IS(vt2.c0)) AS BLOB)) ISNULL)) GROUP BY vt0.c0, vt2.c0, v0.c0;
SELECT vt0.c0, vt2.c0, v0.c0 FROM v0, vt0, vt2 GROUP BY vt0.c0, vt2.c0, v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING v0.c0 UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((v0.c0) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING v0.c0 UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((v0.c0) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL * FROM vt2, v0;
SELECT ALL * FROM vt2, v0 WHERE (x'') UNION ALL SELECT ALL * FROM vt2, v0 WHERE ((NOT (x''))) UNION ALL SELECT * FROM vt2, v0 WHERE (((x'') ISNULL));
SELECT ALL * FROM vt2, v0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (NULL) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (CASE (- (v0.c0))  WHEN v0.c0 THEN (v0.c0 IN ()) ELSE COALESCE(DISTINCT x'14cb', v0.c0, v0.c0, v0.c0) END) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CASE (- (v0.c0))  WHEN v0.c0 THEN (v0.c0 IN ()) ELSE COALESCE(DISTINCT x'14cb', v0.c0, v0.c0, v0.c0) END))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((CASE (- (v0.c0))  WHEN v0.c0 THEN (v0.c0 IN ()) ELSE COALESCE(DISTINCT x'14cb', v0.c0, v0.c0, v0.c0) END) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt1, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt1, v0 GROUP BY v0.c0 HAVING TOTAL(MIN(v0.c0)) UNION ALL SELECT v0.c0 FROM vt1, v0 GROUP BY v0.c0 HAVING (NOT (TOTAL(MIN(v0.c0)))) UNION ALL SELECT v0.c0 FROM vt1, v0 GROUP BY v0.c0 HAVING ((TOTAL(MIN(v0.c0))) ISNULL);
SELECT ALL * FROM v0, vt0;
SELECT ALL * FROM v0, vt0 WHERE (((vt0.c0) NOT NULL) COLLATE BINARY) UNION ALL SELECT * FROM v0, vt0 WHERE ((NOT (((vt0.c0) NOT NULL) COLLATE BINARY))) UNION ALL SELECT * FROM v0, vt0 WHERE (((((vt0.c0) NOT NULL) COLLATE BINARY) ISNULL));
SELECT ALL * FROM v0, vt0;
SELECT DISTINCT * FROM vt2 CROSS JOIN vt1 ON (((vt2.c0, vt2.c0, vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS TEXT), (~ (vt1.c0)), '558012599' COLLATE BINARY)) AND ((((vt1.c0)<<(x'dcaa')), vt2.c0 COLLATE NOCASE, ((vt1.c0)<=(vt1.c0)))));
SELECT DISTINCT * FROM vt2 CROSS JOIN vt1 ON (((vt2.c0, vt2.c0, vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS TEXT), (~ (vt1.c0)), '558012599' COLLATE BINARY)) AND ((((vt1.c0)<<(x'dcaa')), vt2.c0 COLLATE NOCASE, ((vt1.c0)<=(vt1.c0))))) WHERE (((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)) COLLATE NOCASE) UNION SELECT DISTINCT * FROM vt2 CROSS JOIN vt1 ON (((vt2.c0, vt2.c0, vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS TEXT), (~ (vt1.c0)), '558012599' COLLATE BINARY)) AND ((((vt1.c0)<<(x'dcaa')), vt2.c0 COLLATE NOCASE, ((vt1.c0)<=(vt1.c0))))) WHERE ((NOT (((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt2 CROSS JOIN vt1 ON (((vt2.c0, vt2.c0, vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS TEXT), (~ (vt1.c0)), '558012599' COLLATE BINARY)) AND ((((vt1.c0)<<(x'dcaa')), vt2.c0 COLLATE NOCASE, ((vt1.c0)<=(vt1.c0))))) WHERE (((((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM vt2 CROSS JOIN vt1 ON (((vt2.c0, vt2.c0, vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS TEXT), (~ (vt1.c0)), '558012599' COLLATE BINARY)) AND ((((vt1.c0)<<(x'dcaa')), vt2.c0 COLLATE NOCASE, ((vt1.c0)<=(vt1.c0)))));
SELECT vt0.c0, v0.c0 FROM vt0, vt1 LEFT OUTER JOIN v0 ON (((0.004712682398421153, vt1.c0, vt0.c0)) BETWEEN (((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), COALESCE(DISTINCT vt1.c0, vt0.c0, vt0.c0, v0.c0), (((vt0.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((v0.c0, vt0.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, v0.c0))))) AND ((vt1.c0, ((vt1.c0)-(vt1.c0)), SQLITE_VERSION()))) GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, vt1 LEFT OUTER JOIN v0 ON (((0.004712682398421153, vt1.c0, vt0.c0)) BETWEEN (((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), COALESCE(DISTINCT vt1.c0, vt0.c0, vt0.c0, v0.c0), (((vt0.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((v0.c0, vt0.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, v0.c0))))) AND ((vt1.c0, ((vt1.c0)-(vt1.c0)), SQLITE_VERSION()))) WHERE (CASE WHEN CAST(vt1.c0 AS INTEGER) THEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)) END) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM vt0, vt1 LEFT OUTER JOIN v0 ON (((0.004712682398421153, vt1.c0, vt0.c0)) BETWEEN (((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), COALESCE(DISTINCT vt1.c0, vt0.c0, vt0.c0, v0.c0), (((vt0.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((v0.c0, vt0.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, v0.c0))))) AND ((vt1.c0, ((vt1.c0)-(vt1.c0)), SQLITE_VERSION()))) WHERE ((NOT (CASE WHEN CAST(vt1.c0 AS INTEGER) THEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)) END))) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM vt0, vt1 LEFT OUTER JOIN v0 ON (((0.004712682398421153, vt1.c0, vt0.c0)) BETWEEN (((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), COALESCE(DISTINCT vt1.c0, vt0.c0, vt0.c0, v0.c0), (((vt0.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((v0.c0, vt0.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, v0.c0))))) AND ((vt1.c0, ((vt1.c0)-(vt1.c0)), SQLITE_VERSION()))) WHERE (((CASE WHEN CAST(vt1.c0 AS INTEGER) THEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)) END) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0, vt1 LEFT OUTER JOIN v0 ON (((0.004712682398421153, vt1.c0, vt0.c0)) BETWEEN (((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), COALESCE(DISTINCT vt1.c0, vt0.c0, vt0.c0, v0.c0), (((vt0.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((v0.c0, vt0.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, v0.c0))))) AND ((vt1.c0, ((vt1.c0)-(vt1.c0)), SQLITE_VERSION()))) GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, vt1.c0 FROM v0, vt2 RIGHT OUTER JOIN vt1 ON (~ (TRIM(NULL))) CROSS JOIN vt0 ON (~ (UNLIKELY(0.7537421700153527))) GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM v0, vt2 RIGHT OUTER JOIN vt1 ON (~ (TRIM(NULL))) CROSS JOIN vt0 ON (~ (UNLIKELY(0.7537421700153527))) GROUP BY vt0.c0, vt1.c0 HAVING COUNT(COUNT(*)) UNION ALL SELECT vt0.c0, vt1.c0 FROM v0, vt2 RIGHT OUTER JOIN vt1 ON (~ (TRIM(NULL))) CROSS JOIN vt0 ON (~ (UNLIKELY(0.7537421700153527))) GROUP BY vt0.c0, vt1.c0 HAVING (NOT (COUNT(COUNT(*)))) UNION ALL SELECT vt0.c0, vt1.c0 FROM v0, vt2 RIGHT OUTER JOIN vt1 ON (~ (TRIM(NULL))) CROSS JOIN vt0 ON (~ (UNLIKELY(0.7537421700153527))) GROUP BY vt0.c0, vt1.c0 HAVING ((COUNT(COUNT(*))) ISNULL);
SELECT ALL TOTAL((+ (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))) FROM vt1 ORDER BY ((vt1.c0 COLLATE RTRIM)%(SUBSTR(vt1.c0, vt1.c0)));
SELECT * FROM v0, vt1 LEFT OUTER JOIN vt0 ON ((CASE x''  WHEN vt1.c0 THEN 0.23086450622162447 END) NOT BETWEEN (((vt0.c0) NOT NULL)) AND (v0.c0));
SELECT * FROM v0, vt1 LEFT OUTER JOIN vt0 ON ((CASE x''  WHEN vt1.c0 THEN 0.23086450622162447 END) NOT BETWEEN (((vt0.c0) NOT NULL)) AND (v0.c0)) WHERE ((vt0.c0 IN ()) COLLATE RTRIM) UNION ALL SELECT ALL * FROM v0, vt1 LEFT OUTER JOIN vt0 ON ((CASE x''  WHEN vt1.c0 THEN 0.23086450622162447 END) NOT BETWEEN (((vt0.c0) NOT NULL)) AND (v0.c0)) WHERE ((NOT ((vt0.c0 IN ()) COLLATE RTRIM))) UNION ALL SELECT ALL * FROM v0, vt1 LEFT OUTER JOIN vt0 ON ((CASE x''  WHEN vt1.c0 THEN 0.23086450622162447 END) NOT BETWEEN (((vt0.c0) NOT NULL)) AND (v0.c0)) WHERE ((((vt0.c0 IN ()) COLLATE RTRIM) ISNULL));
SELECT * FROM v0, vt1 LEFT OUTER JOIN vt0 ON ((CASE x''  WHEN vt1.c0 THEN 0.23086450622162447 END) NOT BETWEEN (((vt0.c0) NOT NULL)) AND (v0.c0));
SELECT DISTINCT vt0.c0, v0.c0, vt2.c0 FROM vt2, v0, vt0;
SELECT DISTINCT vt0.c0, v0.c0, vt2.c0 FROM vt2, v0, vt0 WHERE (((((vt0.c0) IS TRUE))|(v0.c0 COLLATE BINARY))) UNION SELECT DISTINCT vt0.c0, v0.c0, vt2.c0 FROM vt2, v0, vt0 WHERE ((NOT (((((vt0.c0) IS TRUE))|(v0.c0 COLLATE BINARY))))) UNION SELECT DISTINCT vt0.c0, v0.c0, vt2.c0 FROM vt2, v0, vt0 WHERE (((((((vt0.c0) IS TRUE))|(v0.c0 COLLATE BINARY))) ISNULL));
SELECT DISTINCT vt0.c0, v0.c0, vt2.c0 FROM vt2, v0, vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CASE ((vt0.c0)-(vt0.c0))  WHEN CASE 0.41140143791402384  WHEN vt0.c0 THEN vt0.c0 END THEN (~ (vt0.c0)) ELSE ((vt0.c0) IS TRUE) END) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CASE ((vt0.c0)-(vt0.c0))  WHEN CASE 0.41140143791402384  WHEN vt0.c0 THEN vt0.c0 END THEN (~ (vt0.c0)) ELSE ((vt0.c0) IS TRUE) END))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((CASE ((vt0.c0)-(vt0.c0))  WHEN CASE 0.41140143791402384  WHEN vt0.c0 THEN vt0.c0 END THEN (~ (vt0.c0)) ELSE ((vt0.c0) IS TRUE) END) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt2.c0 FROM vt2 INNER JOIN vt1 ON TRIM(DISTINCT CASE WHEN vt2.c0 THEN v0.c0 END, ((((((((vt2.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt2.c0)))AND(v0.c0))) FULL OUTER JOIN v0 ON (+ (((vt1.c0)>>(vt2.c0)))) GROUP BY vt2.c0;
SELECT * FROM vt2, v0;
SELECT ALL * FROM vt2, v0 WHERE ((~ (CASE WHEN v0.c0 THEN vt2.c0 ELSE v0.c0 END))) UNION ALL SELECT ALL * FROM vt2, v0 WHERE ((NOT ((~ (CASE WHEN v0.c0 THEN vt2.c0 ELSE v0.c0 END))))) UNION ALL SELECT ALL * FROM vt2, v0 WHERE ((((~ (CASE WHEN v0.c0 THEN vt2.c0 ELSE v0.c0 END))) ISNULL));
SELECT * FROM vt2, v0;
SELECT DISTINCT * FROM vt0, vt2 RIGHT OUTER JOIN v0 ON vt0.c0;
SELECT DISTINCT * FROM vt0, vt2 RIGHT OUTER JOIN v0 ON vt0.c0 WHERE ((~ (((v0.c0) IS TRUE)))) UNION SELECT DISTINCT * FROM vt0, vt2 RIGHT OUTER JOIN v0 ON vt0.c0 WHERE ((NOT ((~ (((v0.c0) IS TRUE)))))) UNION SELECT DISTINCT * FROM vt0, vt2 RIGHT OUTER JOIN v0 ON vt0.c0 WHERE ((((~ (((v0.c0) IS TRUE)))) ISNULL));
SELECT DISTINCT * FROM vt0, vt2 RIGHT OUTER JOIN v0 ON vt0.c0;
SELECT vt0.c0, vt2.c0 FROM vt2, v0, vt0, vt1 GROUP BY vt0.c0, vt2.c0;
SELECT ALL vt0.c0, vt2.c0 FROM vt2, v0, vt0, vt1 WHERE ((((vt2.c0)) BETWEEN ((((vt1.c0) BETWEEN (vt0.c0) AND (v0.c0)))) AND (((- (x'')))))) GROUP BY vt0.c0, vt2.c0 UNION SELECT ALL vt0.c0, vt2.c0 FROM vt2, v0, vt0, vt1 WHERE ((NOT ((((vt2.c0)) BETWEEN ((((vt1.c0) BETWEEN (vt0.c0) AND (v0.c0)))) AND (((- (x'')))))))) GROUP BY vt0.c0, vt2.c0 UNION SELECT ALL vt0.c0, vt2.c0 FROM vt2, v0, vt0, vt1 WHERE ((((((vt2.c0)) BETWEEN ((((vt1.c0) BETWEEN (vt0.c0) AND (v0.c0)))) AND (((- (x'')))))) ISNULL)) GROUP BY vt0.c0, vt2.c0;
SELECT vt0.c0, vt2.c0 FROM vt2, v0, vt0, vt1 GROUP BY vt0.c0, vt2.c0;
SELECT ALL vt2.c0, v0.c0, vt0.c0 FROM vt0 CROSS JOIN vt2 ON ((((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt0.c0))) NOT BETWEEN ((- (vt2.c0))) AND (((0.9160699606207503) IS TRUE))) INNER JOIN v0 ON SQLITE_VERSION() GROUP BY vt2.c0, v0.c0, vt0.c0;
SELECT ALL vt2.c0, v0.c0, vt0.c0 FROM vt0 CROSS JOIN vt2 ON ((((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt0.c0))) NOT BETWEEN ((- (vt2.c0))) AND (((0.9160699606207503) IS TRUE))) INNER JOIN v0 ON SQLITE_VERSION() GROUP BY vt2.c0, v0.c0, vt0.c0 HAVING AVG(vt2.c0) UNION ALL SELECT ALL vt2.c0, v0.c0, vt0.c0 FROM vt0 CROSS JOIN vt2 ON ((((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt0.c0))) NOT BETWEEN ((- (vt2.c0))) AND (((0.9160699606207503) IS TRUE))) INNER JOIN v0 ON SQLITE_VERSION() GROUP BY vt2.c0, v0.c0, vt0.c0 HAVING (NOT (AVG(vt2.c0))) UNION ALL SELECT ALL vt2.c0, v0.c0, vt0.c0 FROM vt0 CROSS JOIN vt2 ON ((((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt0.c0))) NOT BETWEEN ((- (vt2.c0))) AND (((0.9160699606207503) IS TRUE))) INNER JOIN v0 ON SQLITE_VERSION() GROUP BY vt2.c0, v0.c0, vt0.c0 HAVING ((AVG(vt2.c0)) ISNULL);
SELECT ALL vt2.c0, v0.c0, vt0.c0 FROM vt0 CROSS JOIN vt2 ON ((((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt0.c0))) NOT BETWEEN ((- (vt2.c0))) AND (((0.9160699606207503) IS TRUE))) INNER JOIN v0 ON SQLITE_VERSION() GROUP BY vt2.c0, v0.c0, vt0.c0;
SELECT ALL vt2.c0, v0.c0, vt0.c0 FROM vt0 CROSS JOIN vt2 ON ((((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt0.c0))) NOT BETWEEN ((- (vt2.c0))) AND (((0.9160699606207503) IS TRUE))) INNER JOIN v0 ON SQLITE_VERSION() GROUP BY vt2.c0, v0.c0, vt0.c0 HAVING AVG(vt2.c0) UNION ALL SELECT ALL vt2.c0, v0.c0, vt0.c0 FROM vt0 CROSS JOIN vt2 ON ((((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt0.c0))) NOT BETWEEN ((- (vt2.c0))) AND (((0.9160699606207503) IS TRUE))) INNER JOIN v0 ON SQLITE_VERSION() GROUP BY vt2.c0, v0.c0, vt0.c0 HAVING (NOT (AVG(vt2.c0))) UNION ALL SELECT ALL vt2.c0, v0.c0, vt0.c0 FROM vt0 CROSS JOIN vt2 ON ((((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt0.c0))) NOT BETWEEN ((- (vt2.c0))) AND (((0.9160699606207503) IS TRUE))) INNER JOIN v0 ON SQLITE_VERSION() GROUP BY vt2.c0, v0.c0, vt0.c0 HAVING ((AVG(vt2.c0)) ISNULL);
SELECT ALL vt2.c0, v0.c0, vt0.c0 FROM vt0 CROSS JOIN vt2 ON ((((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt0.c0))) NOT BETWEEN ((- (vt2.c0))) AND (((0.9160699606207503) IS TRUE))) INNER JOIN v0 ON SQLITE_VERSION() GROUP BY vt2.c0, v0.c0, vt0.c0;
SELECT ALL * FROM v0, vt0;
SELECT ALL * FROM v0, vt0 WHERE (((v0.c0 COLLATE RTRIM)IS NOT(((vt0.c0) ISNULL)))) UNION ALL SELECT * FROM v0, vt0 WHERE ((NOT (((v0.c0 COLLATE RTRIM)IS NOT(((vt0.c0) ISNULL)))))) UNION ALL SELECT * FROM v0, vt0 WHERE (((((v0.c0 COLLATE RTRIM)IS NOT(((vt0.c0) ISNULL)))) ISNULL));
SELECT ALL * FROM v0, vt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (TRIM(DISTINCT ((v0.c0) ISNULL), CAST(v0.c0 AS INTEGER))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (TRIM(DISTINCT ((v0.c0) ISNULL), CAST(v0.c0 AS INTEGER))))) UNION SELECT DISTINCT * FROM v0 WHERE (((TRIM(DISTINCT ((v0.c0) ISNULL), CAST(v0.c0 AS INTEGER))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL vt0.c0, vt1.c0 FROM v0, vt2, vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM v0, vt2, vt1, vt0 WHERE ((((CAST(vt0.c0 AS TEXT)))>=((((vt2.c0) IS FALSE))))) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM v0, vt2, vt1, vt0 WHERE ((NOT ((((CAST(vt0.c0 AS TEXT)))>=((((vt2.c0) IS FALSE))))))) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM v0, vt2, vt1, vt0 WHERE ((((((CAST(vt0.c0 AS TEXT)))>=((((vt2.c0) IS FALSE))))) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM v0, vt2, vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX(COUNT(*)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(COUNT(*)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(COUNT(*))) ISNULL);
SELECT ALL vt0.c0, vt2.c0, vt1.c0 FROM vt2, vt1 CROSS JOIN vt0 ON (((~ (vt1.c0)))>=((((NULL)) BETWEEN ((vt2.c0)) AND ((vt0.c0)))));
SELECT ALL vt0.c0, vt2.c0, vt1.c0 FROM vt2, vt1 CROSS JOIN vt0 ON (((~ (vt1.c0)))>=((((NULL)) BETWEEN ((vt2.c0)) AND ((vt0.c0))))) WHERE (vt0.c0) UNION ALL SELECT ALL vt0.c0, vt2.c0, vt1.c0 FROM vt2, vt1 CROSS JOIN vt0 ON (((~ (vt1.c0)))>=((((NULL)) BETWEEN ((vt2.c0)) AND ((vt0.c0))))) WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL vt0.c0, vt2.c0, vt1.c0 FROM vt2, vt1 CROSS JOIN vt0 ON (((~ (vt1.c0)))>=((((NULL)) BETWEEN ((vt2.c0)) AND ((vt0.c0))))) WHERE (((vt0.c0) ISNULL));
SELECT ALL vt0.c0, vt2.c0, vt1.c0 FROM vt2, vt1 CROSS JOIN vt0 ON (((~ (vt1.c0)))>=((((NULL)) BETWEEN ((vt2.c0)) AND ((vt0.c0)))));
SELECT DISTINCT vt2.c0 FROM vt2;
SELECT DISTINCT vt2.c0 FROM vt2 WHERE (((((vt2.c0) ISNULL))>((((vt2.c0, vt2.c0, vt2.c0)) NOT BETWEEN ((vt2.c0, vt2.c0, vt2.c0)) AND ((vt2.c0, vt2.c0, vt2.c0)))))) UNION SELECT DISTINCT vt2.c0 FROM vt2 WHERE ((NOT (((((vt2.c0) ISNULL))>((((vt2.c0, vt2.c0, vt2.c0)) NOT BETWEEN ((vt2.c0, vt2.c0, vt2.c0)) AND ((vt2.c0, vt2.c0, vt2.c0)))))))) UNION SELECT DISTINCT vt2.c0 FROM vt2 WHERE (((((((vt2.c0) ISNULL))>((((vt2.c0, vt2.c0, vt2.c0)) NOT BETWEEN ((vt2.c0, vt2.c0, vt2.c0)) AND ((vt2.c0, vt2.c0, vt2.c0)))))) ISNULL));
SELECT DISTINCT vt2.c0 FROM vt2;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (CASE WHEN ((v0.c0)+('')) THEN (NOT (v0.c0)) WHEN (0.9907517662133084 IN (v0.c0)) THEN (NULL IN ()) WHEN NULL THEN CAST(v0.c0 AS REAL) ELSE ((v0.c0)LIKE(v0.c0)) END) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (CASE WHEN ((v0.c0)+('')) THEN (NOT (v0.c0)) WHEN (0.9907517662133084 IN (v0.c0)) THEN (NULL IN ()) WHEN NULL THEN CAST(v0.c0 AS REAL) ELSE ((v0.c0)LIKE(v0.c0)) END))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((CASE WHEN ((v0.c0)+('')) THEN (NOT (v0.c0)) WHEN (0.9907517662133084 IN (v0.c0)) THEN (NULL IN ()) WHEN NULL THEN CAST(v0.c0 AS REAL) ELSE ((v0.c0)LIKE(v0.c0)) END) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0, vt2.c0 FROM v0 NOT INDEXED FULL OUTER JOIN vt2 ON v0.c0 GROUP BY v0.c0, vt2.c0;
SELECT v0.c0, vt2.c0 FROM v0 FULL OUTER JOIN vt2 ON v0.c0 GROUP BY v0.c0, vt2.c0 HAVING SUM(MIN(AVG(GROUP_CONCAT(v0.c0)))) UNION ALL SELECT v0.c0, vt2.c0 FROM v0 FULL OUTER JOIN vt2 ON v0.c0 GROUP BY v0.c0, vt2.c0 HAVING (NOT (SUM(MIN(AVG(GROUP_CONCAT(v0.c0)))))) UNION ALL SELECT v0.c0, vt2.c0 FROM v0 FULL OUTER JOIN vt2 ON v0.c0 GROUP BY v0.c0, vt2.c0 HAVING ((SUM(MIN(AVG(GROUP_CONCAT(v0.c0))))) ISNULL);
SELECT * FROM vt1, vt2;
SELECT ALL * FROM vt1, vt2 WHERE (CASE WHEN x'fa88' THEN (~ (vt2.c0)) WHEN CAST(vt1.c0 AS TEXT) THEN (((vt1.c0)) NOT BETWEEN ((vt2.c0)) AND ((vt1.c0))) WHEN ((vt2.c0)&(vt2.c0)) THEN (+ (vt2.c0)) END) UNION ALL SELECT * FROM vt1, vt2 WHERE ((NOT (CASE WHEN x'fa88' THEN (~ (vt2.c0)) WHEN CAST(vt1.c0 AS TEXT) THEN (((vt1.c0)) NOT BETWEEN ((vt2.c0)) AND ((vt1.c0))) WHEN ((vt2.c0)&(vt2.c0)) THEN (+ (vt2.c0)) END))) UNION ALL SELECT * FROM vt1, vt2 WHERE (((CASE WHEN x'fa88' THEN (~ (vt2.c0)) WHEN CAST(vt1.c0 AS TEXT) THEN (((vt1.c0)) NOT BETWEEN ((vt2.c0)) AND ((vt1.c0))) WHEN ((vt2.c0)&(vt2.c0)) THEN (+ (vt2.c0)) END) ISNULL));
SELECT * FROM vt1, vt2;
SELECT DISTINCT vt1.c0, vt2.c0, vt0.c0 FROM vt0, vt2 LEFT OUTER JOIN vt1 ON (((vt1.c0)) NOT BETWEEN ((CASE vt2.c0  WHEN vt2.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND ((CASE WHEN vt2.c0 THEN vt2.c0 WHEN vt1.c0 THEN vt2.c0 WHEN vt0.c0 THEN vt2.c0 ELSE vt0.c0 END)));
SELECT DISTINCT vt1.c0, vt2.c0, vt0.c0 FROM vt0, vt2 LEFT OUTER JOIN vt1 ON (((vt1.c0)) NOT BETWEEN ((CASE vt2.c0  WHEN vt2.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND ((CASE WHEN vt2.c0 THEN vt2.c0 WHEN vt1.c0 THEN vt2.c0 WHEN vt0.c0 THEN vt2.c0 ELSE vt0.c0 END))) WHERE (NULL) UNION SELECT DISTINCT vt1.c0, vt2.c0, vt0.c0 FROM vt0, vt2 LEFT OUTER JOIN vt1 ON (((vt1.c0)) NOT BETWEEN ((CASE vt2.c0  WHEN vt2.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND ((CASE WHEN vt2.c0 THEN vt2.c0 WHEN vt1.c0 THEN vt2.c0 WHEN vt0.c0 THEN vt2.c0 ELSE vt0.c0 END))) WHERE ((NOT (NULL))) UNION SELECT DISTINCT vt1.c0, vt2.c0, vt0.c0 FROM vt0, vt2 LEFT OUTER JOIN vt1 ON (((vt1.c0)) NOT BETWEEN ((CASE vt2.c0  WHEN vt2.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND ((CASE WHEN vt2.c0 THEN vt2.c0 WHEN vt1.c0 THEN vt2.c0 WHEN vt0.c0 THEN vt2.c0 ELSE vt0.c0 END))) WHERE (((NULL) ISNULL));
SELECT DISTINCT vt1.c0, vt2.c0, vt0.c0 FROM vt0, vt2 LEFT OUTER JOIN vt1 ON (((vt1.c0)) NOT BETWEEN ((CASE vt2.c0  WHEN vt2.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND ((CASE WHEN vt2.c0 THEN vt2.c0 WHEN vt1.c0 THEN vt2.c0 WHEN vt0.c0 THEN vt2.c0 ELSE vt0.c0 END)));
SELECT ALL vt0.c0 FROM vt0 LEFT OUTER JOIN vt2 ON vt0.c0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 LEFT OUTER JOIN vt2 ON vt0.c0 WHERE ((((((+ (vt0.c0)))AND(((vt2.c0)<(vt0.c0)))))AND(((vt2.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 LEFT OUTER JOIN vt2 ON vt0.c0 WHERE ((NOT ((((((+ (vt0.c0)))AND(((vt2.c0)<(vt0.c0)))))AND(((vt2.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 LEFT OUTER JOIN vt2 ON vt0.c0 WHERE ((((((((+ (vt0.c0)))AND(((vt2.c0)<(vt0.c0)))))AND(((vt2.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 LEFT OUTER JOIN vt2 ON vt0.c0 GROUP BY vt0.c0;
SELECT ALL v0.c0, vt2.c0 FROM v0, vt2 GROUP BY v0.c0, vt2.c0;
SELECT ALL v0.c0, vt2.c0 FROM v0, vt2 GROUP BY v0.c0, vt2.c0 HAVING MAX(COUNT(vt2.c0)) UNION ALL SELECT ALL v0.c0, vt2.c0 FROM v0, vt2 GROUP BY v0.c0, vt2.c0 HAVING (NOT (MAX(COUNT(vt2.c0)))) UNION ALL SELECT ALL v0.c0, vt2.c0 FROM v0, vt2 GROUP BY v0.c0, vt2.c0 HAVING ((MAX(COUNT(vt2.c0))) ISNULL);
SELECT ALL v0.c0, vt0.c0, vt1.c0 FROM vt1, v0, vt0;
SELECT ALL v0.c0, vt0.c0, vt1.c0 FROM vt1, v0, vt0 WHERE (CAST('' AS REAL)) UNION ALL SELECT ALL v0.c0, vt0.c0, vt1.c0 FROM vt1, v0, vt0 WHERE ((NOT (CAST('' AS REAL)))) UNION ALL SELECT v0.c0, vt0.c0, vt1.c0 FROM vt1, v0, vt0 WHERE (((CAST('' AS REAL)) ISNULL));
SELECT ALL v0.c0, vt0.c0, vt1.c0 FROM vt1, v0, vt0;
SELECT DISTINCT v0.c0 FROM v0, vt2;
SELECT DISTINCT v0.c0 FROM v0, vt2 WHERE (CAST(v0.c0 COLLATE BINARY AS TEXT)) UNION SELECT DISTINCT v0.c0 FROM v0, vt2 WHERE ((NOT (CAST(v0.c0 COLLATE BINARY AS TEXT)))) UNION SELECT DISTINCT v0.c0 FROM v0, vt2 WHERE (((CAST(v0.c0 COLLATE BINARY AS TEXT)) ISNULL));
SELECT DISTINCT v0.c0 FROM v0, vt2;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1, vt2 NOT INDEXED GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt0, vt1, vt2 WHERE (((((((568331713)||(vt0.c0)))AND(((vt1.c0)%('Yb')))))OR(((vt2.c0) NOT NULL)))) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1, vt2 WHERE ((NOT (((((((568331713)||(vt0.c0)))AND(((vt1.c0)%('Yb')))))OR(((vt2.c0) NOT NULL)))))) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1, vt2 WHERE (((((((((568331713)||(vt0.c0)))AND(((vt1.c0)%('Yb')))))OR(((vt2.c0) NOT NULL)))) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1, vt2 NOT INDEXED GROUP BY vt1.c0, vt0.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (x'b0c3' IN ()) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT ((x'b0c3' IN ()))) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (((x'b0c3' IN ())) ISNULL);
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (x'b0c3' IN ()) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT ((x'b0c3' IN ()))) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (((x'b0c3' IN ())) ISNULL);
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT v0.c0 FROM vt1, v0;
SELECT v0.c0 FROM vt1, v0 WHERE (CASE WHEN ((vt1.c0) IS TRUE) THEN v0.c0 COLLATE RTRIM END) UNION ALL SELECT v0.c0 FROM vt1, v0 WHERE ((NOT (CASE WHEN ((vt1.c0) IS TRUE) THEN v0.c0 COLLATE RTRIM END))) UNION ALL SELECT v0.c0 FROM vt1, v0 WHERE (((CASE WHEN ((vt1.c0) IS TRUE) THEN v0.c0 COLLATE RTRIM END) ISNULL));
SELECT v0.c0 FROM vt1, v0;
SELECT DISTINCT v0.c0 FROM vt1, v0;
SELECT DISTINCT v0.c0 FROM vt1, v0 WHERE (UPPER(((0xffffffffcfa5cabc)LIKE(vt1.c0)))) UNION SELECT DISTINCT v0.c0 FROM vt1, v0 WHERE ((NOT (UPPER(((0xffffffffcfa5cabc)LIKE(vt1.c0)))))) UNION SELECT DISTINCT v0.c0 FROM vt1, v0 WHERE (((UPPER(((0xffffffffcfa5cabc)LIKE(vt1.c0)))) ISNULL));
SELECT DISTINCT v0.c0 FROM vt1, v0;
SELECT ALL vt0.c0 FROM vt0, vt2 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, vt2 WHERE ((('-388347863')||(CAST(vt0.c0 AS INTEGER)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, vt2 WHERE ((NOT ((('-388347863')||(CAST(vt0.c0 AS INTEGER)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, vt2 WHERE ((((('-388347863')||(CAST(vt0.c0 AS INTEGER)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt2 GROUP BY vt0.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING SUM(((GROUP_CONCAT(MAX(MAX(vt2.c0)))) NOT BETWEEN (COUNT(MIN(vt2.c0))) AND (MIN(vt2.c0)))) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (SUM(((GROUP_CONCAT(MAX(MAX(vt2.c0)))) NOT BETWEEN (COUNT(MIN(vt2.c0))) AND (MIN(vt2.c0)))))) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((SUM(((GROUP_CONCAT(MAX(MAX(vt2.c0)))) NOT BETWEEN (COUNT(MIN(vt2.c0))) AND (MIN(vt2.c0))))) ISNULL);
SELECT ALL MAX((+ ((v0.c0 IN ())))) FROM vt2, vt0, v0 ORDER BY ((COALESCE(vt0.c0, vt0.c0)) ISNULL) DESC, (NOT (((vt2.c0) NOT BETWEEN (v0.c0) AND (vt2.c0)))) ASC, ((((vt2.c0) NOTNULL)) NOT BETWEEN (TRIM(DISTINCT vt2.c0, '568331713')) AND (((vt2.c0) BETWEEN (x'') AND (v0.c0)))) ASC;
SELECT ALL * FROM vt2;
SELECT * FROM vt2 WHERE (CAST(((((NULL)OR(vt2.c0)))OR(vt2.c0)) AS NUMERIC)) UNION ALL SELECT ALL * FROM vt2 WHERE ((NOT (CAST(((((NULL)OR(vt2.c0)))OR(vt2.c0)) AS NUMERIC)))) UNION ALL SELECT ALL * FROM vt2 WHERE (((CAST(((((NULL)OR(vt2.c0)))OR(vt2.c0)) AS NUMERIC)) ISNULL));
SELECT ALL * FROM vt2;
SELECT DISTINCT vt2.c0 FROM v0, vt2, vt0;
SELECT DISTINCT vt2.c0 FROM v0, vt2, vt0 WHERE (((((CASE v0.c0  WHEN v0.c0 THEN vt0.c0 END)AND(v0.c0 COLLATE NOCASE)))OR(((vt2.c0) ISNULL)))) UNION SELECT DISTINCT vt2.c0 FROM v0, vt2, vt0 WHERE ((NOT (((((CASE v0.c0  WHEN v0.c0 THEN vt0.c0 END)AND(v0.c0 COLLATE NOCASE)))OR(((vt2.c0) ISNULL)))))) UNION SELECT DISTINCT vt2.c0 FROM v0, vt2, vt0 WHERE (((((((CASE v0.c0  WHEN v0.c0 THEN vt0.c0 END)AND(v0.c0 COLLATE NOCASE)))OR(((vt2.c0) ISNULL)))) ISNULL));
SELECT DISTINCT vt2.c0 FROM v0, vt2, vt0;
SELECT v0.c0, vt1.c0 FROM vt1, v0 GROUP BY v0.c0, vt1.c0;
SELECT ALL v0.c0, vt1.c0 FROM vt1, v0 WHERE (((v0.c0)IS NOT(0.3487516898850962)) COLLATE BINARY) GROUP BY v0.c0, vt1.c0 UNION SELECT ALL v0.c0, vt1.c0 FROM vt1, v0 WHERE ((NOT (((v0.c0)IS NOT(0.3487516898850962)) COLLATE BINARY))) GROUP BY v0.c0, vt1.c0 UNION SELECT ALL v0.c0, vt1.c0 FROM vt1, v0 WHERE (((((v0.c0)IS NOT(0.3487516898850962)) COLLATE BINARY) ISNULL)) GROUP BY v0.c0, vt1.c0;
SELECT v0.c0, vt1.c0 FROM vt1, v0 GROUP BY v0.c0, vt1.c0;
SELECT v0.c0, vt2.c0 FROM vt2, v0, vt1 GROUP BY v0.c0, vt2.c0;
SELECT v0.c0, vt2.c0 FROM vt2, v0, vt1 GROUP BY v0.c0, vt2.c0 HAVING COUNT(MIN(TOTAL(v0.c0))) UNION ALL SELECT v0.c0, vt2.c0 FROM vt2, v0, vt1 GROUP BY v0.c0, vt2.c0 HAVING (NOT (COUNT(MIN(TOTAL(v0.c0))))) UNION ALL SELECT ALL v0.c0, vt2.c0 FROM vt2, v0, vt1 GROUP BY v0.c0, vt2.c0 HAVING ((COUNT(MIN(TOTAL(v0.c0)))) ISNULL);
SELECT v0.c0 FROM vt1, v0;
SELECT ALL v0.c0 FROM vt1, v0 WHERE (NULL) UNION ALL SELECT ALL v0.c0 FROM vt1, v0 WHERE ((NOT (NULL))) UNION ALL SELECT ALL v0.c0 FROM vt1, v0 WHERE (((NULL) ISNULL));
SELECT v0.c0 FROM vt1, v0;
SELECT DISTINCT vt0.c0, v0.c0, vt1.c0, vt2.c0 FROM vt0, v0, vt2 RIGHT OUTER JOIN vt1 ON ((CAST(vt1.c0 AS INTEGER))|((vt2.c0 IN ())));
SELECT DISTINCT vt0.c0, v0.c0, vt1.c0, vt2.c0 FROM vt0, v0, vt2 RIGHT OUTER JOIN vt1 ON ((CAST(vt1.c0 AS INTEGER))|((vt2.c0 IN ()))) WHERE (CAST(CASE vt1.c0  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END AS NUMERIC)) UNION SELECT DISTINCT vt0.c0, v0.c0, vt1.c0, vt2.c0 FROM vt0, v0, vt2 RIGHT OUTER JOIN vt1 ON ((CAST(vt1.c0 AS INTEGER))|((vt2.c0 IN ()))) WHERE ((NOT (CAST(CASE vt1.c0  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END AS NUMERIC)))) UNION SELECT DISTINCT vt0.c0, v0.c0, vt1.c0, vt2.c0 FROM vt0, v0, vt2 RIGHT OUTER JOIN vt1 ON ((CAST(vt1.c0 AS INTEGER))|((vt2.c0 IN ()))) WHERE (((CAST(CASE vt1.c0  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END AS NUMERIC)) ISNULL));
SELECT DISTINCT vt0.c0, v0.c0, vt1.c0, vt2.c0 FROM vt0, v0, vt2 RIGHT OUTER JOIN vt1 ON ((CAST(vt1.c0 AS INTEGER))|((vt2.c0 IN ())));
SELECT vt2.c0, vt0.c0, vt1.c0, v0.c0 FROM v0, vt2, vt0, vt1 GROUP BY vt2.c0, vt0.c0, vt1.c0, v0.c0;
SELECT vt2.c0, vt0.c0, vt1.c0, v0.c0 FROM v0, vt2, vt0, vt1 WHERE ((UNLIKELY(vt2.c0) IN ())) GROUP BY vt2.c0, vt0.c0, vt1.c0, v0.c0 UNION SELECT vt2.c0, vt0.c0, vt1.c0, v0.c0 FROM v0, vt2, vt0, vt1 WHERE ((NOT ((UNLIKELY(vt2.c0) IN ())))) GROUP BY vt2.c0, vt0.c0, vt1.c0, v0.c0 UNION SELECT vt2.c0, vt0.c0, vt1.c0, v0.c0 FROM v0, vt2, vt0, vt1 WHERE ((((UNLIKELY(vt2.c0) IN ())) ISNULL)) GROUP BY vt2.c0, vt0.c0, vt1.c0, v0.c0;
SELECT vt2.c0, vt0.c0, vt1.c0, v0.c0 FROM v0, vt2, vt0, vt1 GROUP BY vt2.c0, vt0.c0, vt1.c0, v0.c0;
SELECT vt1.c0, vt2.c0 FROM vt2, vt1 GROUP BY vt1.c0, vt2.c0;
SELECT ALL vt1.c0, vt2.c0 FROM vt2, vt1 GROUP BY vt1.c0, vt2.c0 HAVING (+ (SUM(vt2.c0))) UNION ALL SELECT vt1.c0, vt2.c0 FROM vt2, vt1 GROUP BY vt1.c0, vt2.c0 HAVING (NOT ((+ (SUM(vt2.c0))))) UNION ALL SELECT vt1.c0, vt2.c0 FROM vt2, vt1 GROUP BY vt1.c0, vt2.c0 HAVING (((+ (SUM(vt2.c0)))) ISNULL);
SELECT vt1.c0, vt2.c0 FROM vt2, vt1 GROUP BY vt1.c0, vt2.c0;
SELECT ALL vt1.c0, vt2.c0 FROM vt2, vt1 GROUP BY vt1.c0, vt2.c0 HAVING (+ (SUM(vt2.c0))) UNION ALL SELECT vt1.c0, vt2.c0 FROM vt2, vt1 GROUP BY vt1.c0, vt2.c0 HAVING (NOT ((+ (SUM(vt2.c0))))) UNION ALL SELECT vt1.c0, vt2.c0 FROM vt2, vt1 GROUP BY vt1.c0, vt2.c0 HAVING (((+ (SUM(vt2.c0)))) ISNULL);
SELECT vt1.c0, vt2.c0 FROM vt2, vt1 GROUP BY vt1.c0, vt2.c0;
SELECT ALL MAX((((vt2.c0 IN ())) ISNULL)) FROM vt2, vt0, vt1, v0 ORDER BY CASE v0.c0  WHEN vt1.c0 THEN v0.c0 END COLLATE BINARY ASC;
SELECT vt2.c0 FROM vt0, vt2;
SELECT vt2.c0 FROM vt0, vt2 WHERE (((((vt2.c0)<>(vt0.c0))) NOT BETWEEN (JULIANDAY(vt2.c0, vt0.c0, vt2.c0)) AND ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt2.c0, vt2.c0)) AND ((vt2.c0, vt0.c0, vt2.c0)))))) UNION ALL SELECT vt2.c0 FROM vt0, vt2 WHERE ((NOT (((((vt2.c0)<>(vt0.c0))) NOT BETWEEN (JULIANDAY(vt2.c0, vt0.c0, vt2.c0)) AND ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt2.c0, vt2.c0)) AND ((vt2.c0, vt0.c0, vt2.c0)))))))) UNION ALL SELECT ALL vt2.c0 FROM vt0, vt2 WHERE (((((((vt2.c0)!=(vt0.c0))) NOT BETWEEN (JULIANDAY(vt2.c0, vt0.c0, vt2.c0)) AND ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt2.c0, vt2.c0)) AND ((vt2.c0, vt0.c0, vt2.c0)))))) ISNULL));
SELECT vt2.c0 FROM vt0, vt2;
SELECT DISTINCT * FROM vt2 INNER JOIN v0 ON LIKE((NULL IN ()), ((vt2.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), 'f');
SELECT DISTINCT * FROM vt2 INNER JOIN v0 ON LIKE((NULL IN ()), ((vt2.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), 'f') WHERE (CASE vt2.c0  WHEN 0xffffffffbe5f5610 THEN 0.6714652363619018 END) UNION SELECT DISTINCT * FROM vt2 INNER JOIN v0 ON LIKE((NULL IN ()), ((vt2.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), 'f') WHERE ((NOT (CASE vt2.c0  WHEN 0Xffffffffbe5f5610 THEN 0.6714652363619018 END))) UNION SELECT DISTINCT * FROM vt2 INNER JOIN v0 ON LIKE((NULL IN ()), ((vt2.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), 'f') WHERE (((CASE vt2.c0  WHEN 0Xffffffffbe5f5610 THEN 0.6714652363619018 END) ISNULL));
SELECT DISTINCT * FROM vt2 INNER JOIN v0 ON LIKE((NULL IN ()), ((vt2.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), 'f');
SELECT vt1.c0 FROM vt1, vt0, v0 RIGHT OUTER JOIN vt2 ON MAX((~ (vt0.c0)), ((((NULL)OR(vt1.c0)))AND(vt1.c0))) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 NOT INDEXED, vt0, v0 RIGHT OUTER JOIN vt2 ON MAX((~ (vt0.c0)), ((((NULL)OR(vt1.c0)))AND(vt1.c0))) WHERE (v0.c0) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1, vt0, v0 RIGHT OUTER JOIN vt2 ON MAX((~ (vt0.c0)), ((((NULL)OR(vt1.c0)))AND(vt1.c0))) WHERE ((NOT (v0.c0))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, vt0, v0 RIGHT OUTER JOIN vt2 ON MAX((~ (vt0.c0)), ((((NULL)OR(vt1.c0)))AND(vt1.c0))) WHERE (((v0.c0) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0, v0 RIGHT OUTER JOIN vt2 ON MAX((~ (vt0.c0)), ((((NULL)OR(vt1.c0)))AND(vt1.c0))) GROUP BY vt1.c0;
SELECT v0.c0 FROM v0 LEFT OUTER JOIN vt2 ON (((- (v0.c0)))<(((((v0.c0)OR(vt2.c0)))OR(vt0.c0)))) CROSS JOIN vt0 ON NULL GROUP BY v0.c0;
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE (((((vt1.c0) IS FALSE)) BETWEEN (((vt1.c0)>=(vt1.c0))) AND (((x'')&(vt1.c0))))) UNION ALL SELECT * FROM vt1 WHERE ((NOT (((((vt1.c0) IS FALSE)) BETWEEN (((vt1.c0)>=(vt1.c0))) AND (((x'')&(vt1.c0))))))) UNION ALL SELECT ALL * FROM vt1 WHERE (((((((vt1.c0) IS FALSE)) BETWEEN (((vt1.c0)>=(vt1.c0))) AND (((x'')&(vt1.c0))))) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT vt2.c0 FROM vt2;
SELECT DISTINCT vt2.c0 FROM vt2 WHERE (CAST(CAST('' AS BLOB) AS BLOB)) UNION SELECT DISTINCT vt2.c0 FROM vt2 WHERE ((NOT (CAST(CAST('' AS BLOB) AS BLOB)))) UNION SELECT DISTINCT vt2.c0 FROM vt2 WHERE (((CAST(CAST('' AS BLOB) AS BLOB)) ISNULL));
SELECT DISTINCT vt2.c0 FROM vt2;
SELECT ALL vt1.c0, v0.c0, vt0.c0 FROM vt1, vt0 INNER JOIN vt2 ON HEX(DISTINCT v0.c0 COLLATE NOCASE) FULL OUTER JOIN v0 ON ((((vt1.c0 IN (vt1.c0))))>=(((- (v0.c0))))) GROUP BY vt1.c0, v0.c0, vt0.c0;
SELECT vt0.c0, vt2.c0 FROM vt2, vt0 GROUP BY vt0.c0, vt2.c0;
SELECT vt0.c0, vt2.c0 FROM vt2, vt0 GROUP BY vt0.c0, vt2.c0 HAVING vt2.c0 UNION ALL SELECT vt0.c0, vt2.c0 FROM vt2, vt0 GROUP BY vt0.c0, vt2.c0 HAVING (NOT (vt2.c0)) UNION ALL SELECT vt0.c0, vt2.c0 FROM vt2, vt0 GROUP BY vt0.c0, vt2.c0 HAVING ((vt2.c0) ISNULL);
SELECT vt0.c0, vt2.c0 FROM vt2, vt0 GROUP BY vt0.c0, vt2.c0;
SELECT vt0.c0, vt2.c0 FROM vt2, vt0 GROUP BY vt0.c0, vt2.c0 HAVING vt2.c0 UNION ALL SELECT vt0.c0, vt2.c0 FROM vt2, vt0 GROUP BY vt0.c0, vt2.c0 HAVING (NOT (vt2.c0)) UNION ALL SELECT vt0.c0, vt2.c0 FROM vt2, vt0 GROUP BY vt0.c0, vt2.c0 HAVING ((vt2.c0) ISNULL);
SELECT vt0.c0, vt2.c0 FROM vt2, vt0 GROUP BY vt0.c0, vt2.c0;
SELECT ALL vt0.c0, vt2.c0, vt1.c0 FROM v0, vt0, vt2, vt1;
SELECT vt0.c0, vt2.c0, vt1.c0 FROM v0, vt0, vt2, vt1 WHERE (((vt2.c0)+(CASE v0.c0  WHEN v0.c0 THEN vt1.c0 WHEN vt2.c0 THEN vt1.c0 WHEN v0.c0 THEN vt2.c0 END))) UNION ALL SELECT ALL vt0.c0, vt2.c0, vt1.c0 FROM v0, vt0, vt2, vt1 WHERE ((NOT (((vt2.c0)+(CASE v0.c0  WHEN v0.c0 THEN vt1.c0 WHEN vt2.c0 THEN vt1.c0 WHEN v0.c0 THEN vt2.c0 END))))) UNION ALL SELECT vt0.c0, vt2.c0, vt1.c0 FROM v0, vt0, vt2, vt1 WHERE (((((vt2.c0)+(CASE v0.c0  WHEN v0.c0 THEN vt1.c0 WHEN vt2.c0 THEN vt1.c0 WHEN v0.c0 THEN vt2.c0 END))) ISNULL));
SELECT ALL vt0.c0, vt2.c0, vt1.c0 FROM v0, vt0, vt2, vt1;
SELECT DISTINCT vt2.c0, vt0.c0, v0.c0 FROM vt0, vt2 FULL OUTER JOIN v0 ON 1425454652;
SELECT DISTINCT vt2.c0, vt0.c0, v0.c0 FROM vt0, vt2 FULL OUTER JOIN v0 ON 1425454652 WHERE (TRIM(DISTINCT (v0.c0 IN ()), (((vt2.c0)) BETWEEN ((vt2.c0)) AND ((0.6098733877951741))))) UNION SELECT DISTINCT vt2.c0, vt0.c0, v0.c0 FROM vt0, vt2 FULL OUTER JOIN v0 ON 1425454652 WHERE ((NOT (TRIM(DISTINCT (v0.c0 IN ()), (((vt2.c0)) BETWEEN ((vt2.c0)) AND ((0.6098733877951741))))))) UNION SELECT DISTINCT vt2.c0, vt0.c0, v0.c0 FROM vt0, vt2 FULL OUTER JOIN v0 ON 1425454652 WHERE (((TRIM(DISTINCT (v0.c0 IN ()), (((vt2.c0)) BETWEEN ((vt2.c0)) AND ((0.6098733877951741))))) ISNULL));
SELECT DISTINCT vt2.c0, vt0.c0, v0.c0 FROM vt0, vt2 FULL OUTER JOIN v0 ON 1425454652;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0, v0 WHERE (v0.c0) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt0, v0 WHERE ((NOT (v0.c0))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt0, v0 WHERE (((v0.c0) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT v0.c0, vt0.c0, vt1.c0, vt2.c0 FROM vt1, vt2, v0 CROSS JOIN vt0 ON x'8dfd' GROUP BY v0.c0, vt0.c0, vt1.c0, vt2.c0;
SELECT ALL v0.c0, vt0.c0, vt1.c0, vt2.c0 FROM vt1, vt2, v0 CROSS JOIN vt0 ON x'8dfd' GROUP BY v0.c0, vt0.c0, vt1.c0, vt2.c0 HAVING SUM(AVG(NULL)) UNION ALL SELECT v0.c0, vt0.c0, vt1.c0, vt2.c0 FROM vt1, vt2, v0 CROSS JOIN vt0 ON x'8dfd' GROUP BY v0.c0, vt0.c0, vt1.c0, vt2.c0 HAVING (NOT (SUM(AVG(NULL)))) UNION ALL SELECT v0.c0, vt0.c0, vt1.c0, vt2.c0 FROM vt1, vt2, v0 CROSS JOIN vt0 ON x'8dfd' GROUP BY v0.c0, vt0.c0, vt1.c0, vt2.c0 HAVING ((SUM(AVG(NULL))) ISNULL);
SELECT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE ((('') ISNULL)) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((('') ISNULL)))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((((('') ISNULL)) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT vt2.c0, v0.c0 FROM vt2, v0, vt1;
SELECT DISTINCT vt2.c0, v0.c0 FROM vt2, v0, vt1 WHERE ((~ (CASE WHEN vt1.c0 THEN v0.c0 ELSE vt1.c0 END))) UNION SELECT DISTINCT vt2.c0, v0.c0 FROM vt2, v0, vt1 WHERE ((NOT ((~ (CASE WHEN vt1.c0 THEN v0.c0 ELSE vt1.c0 END))))) UNION SELECT DISTINCT vt2.c0, v0.c0 FROM vt2, v0, vt1 WHERE ((((~ (CASE WHEN vt1.c0 THEN v0.c0 ELSE vt1.c0 END))) ISNULL));
SELECT DISTINCT vt2.c0, v0.c0 FROM vt2, v0, vt1;
SELECT vt2.c0, vt1.c0 FROM vt2, vt1 GROUP BY vt2.c0, vt1.c0;
SELECT vt2.c0, vt1.c0 FROM vt2, vt1 WHERE (ABS(NULL)) GROUP BY vt2.c0, vt1.c0 UNION SELECT ALL vt2.c0, vt1.c0 FROM vt2, vt1 WHERE ((NOT (ABS(NULL)))) GROUP BY vt2.c0, vt1.c0 UNION SELECT vt2.c0, vt1.c0 FROM vt2, vt1 WHERE (((ABS(NULL)) ISNULL)) GROUP BY vt2.c0, vt1.c0;
SELECT vt2.c0, vt1.c0 FROM vt2, vt1 GROUP BY vt2.c0, vt1.c0;
SELECT v0.c0 FROM vt1, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt1, v0 GROUP BY v0.c0 HAVING ((((NULL)OR(COUNT(*))))OR(AVG(vt1.c0))) UNION ALL SELECT v0.c0 FROM vt1, v0 GROUP BY v0.c0 HAVING (NOT (((((NULL)OR(COUNT(*))))OR(AVG(vt1.c0))))) UNION ALL SELECT v0.c0 FROM vt1, v0 GROUP BY v0.c0 HAVING ((((((NULL)OR(COUNT(*))))OR(AVG(vt1.c0)))) ISNULL);
SELECT v0.c0 FROM vt1, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt1, v0 GROUP BY v0.c0 HAVING ((((NULL)OR(COUNT(*))))OR(AVG(vt1.c0))) UNION ALL SELECT v0.c0 FROM vt1, v0 GROUP BY v0.c0 HAVING (NOT (((((NULL)OR(COUNT(*))))OR(AVG(vt1.c0))))) UNION ALL SELECT v0.c0 FROM vt1, v0 GROUP BY v0.c0 HAVING ((((((NULL)OR(COUNT(*))))OR(AVG(vt1.c0)))) ISNULL);
SELECT v0.c0 FROM vt1, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (((((v0.c0)GLOB(v0.c0)))AND(v0.c0))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (((((v0.c0)GLOB(v0.c0)))AND(v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((((((v0.c0)GLOB(v0.c0)))AND(v0.c0))) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT * FROM vt2, vt0;
SELECT DISTINCT * FROM vt2, vt0 WHERE (vt2.c0) UNION SELECT DISTINCT * FROM vt2, vt0 WHERE ((NOT (vt2.c0))) UNION SELECT DISTINCT * FROM vt2, vt0 WHERE (((vt2.c0) ISNULL));
SELECT DISTINCT * FROM vt2, vt0;
SELECT vt0.c0 FROM vt0, vt1, v0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, vt1, v0 WHERE (((((vt1.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, vt1, v0 WHERE ((NOT (((((vt1.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, vt1, v0 WHERE (((((((vt1.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, vt1, v0 GROUP BY vt0.c0;
SELECT vt1.c0, vt2.c0 FROM vt2, vt1 GROUP BY vt1.c0, vt2.c0;
SELECT ALL vt1.c0, vt2.c0 FROM vt2, vt1 GROUP BY vt1.c0, vt2.c0 HAVING GROUP_CONCAT(AVG(vt2.c0) COLLATE RTRIM) UNION ALL SELECT vt1.c0, vt2.c0 FROM vt2, vt1 GROUP BY vt1.c0, vt2.c0 HAVING (NOT (GROUP_CONCAT(AVG(vt2.c0) COLLATE RTRIM))) UNION ALL SELECT vt1.c0, vt2.c0 FROM vt2, vt1 GROUP BY vt1.c0, vt2.c0 HAVING ((GROUP_CONCAT(AVG(vt2.c0) COLLATE RTRIM)) ISNULL);
SELECT vt1.c0 FROM vt2, v0 INNER JOIN vt1 ON ((vt1.c0 IN (vt2.c0, v0.c0)) IN (x'', (vt2.c0 IN ())));
SELECT ALL vt1.c0 FROM vt2, v0 INNER JOIN vt1 ON ((vt1.c0 IN (vt2.c0, v0.c0)) IN (x'', (vt2.c0 IN ()))) WHERE (((((vt2.c0) IS TRUE))GLOB(((v0.c0) NOT BETWEEN (vt2.c0) AND (v0.c0))))) UNION ALL SELECT vt1.c0 FROM vt2, v0 INNER JOIN vt1 ON ((vt1.c0 IN (vt2.c0, v0.c0)) IN (x'', (vt2.c0 IN ()))) WHERE ((NOT (((((vt2.c0) IS TRUE))GLOB(((v0.c0) NOT BETWEEN (vt2.c0) AND (v0.c0))))))) UNION ALL SELECT vt1.c0 FROM vt2, v0 INNER JOIN vt1 ON ((vt1.c0 IN (vt2.c0, v0.c0)) IN (x'', (vt2.c0 IN ()))) WHERE (((((((vt2.c0) IS TRUE))GLOB(((v0.c0) NOT BETWEEN (vt2.c0) AND (v0.c0))))) ISNULL));
SELECT vt1.c0 FROM vt2, v0 INNER JOIN vt1 ON ((vt1.c0 IN (vt2.c0, v0.c0)) IN (x'', (vt2.c0 IN ())));
SELECT DISTINCT * FROM v0, vt2, vt0;
SELECT DISTINCT * FROM v0, vt2, vt0 WHERE ((((vt2.c0)) NOT BETWEEN ((LOWER(vt0.c0))) AND ((((vt0.c0) IS FALSE))))) UNION SELECT DISTINCT * FROM v0, vt2, vt0 WHERE ((NOT ((((vt2.c0)) NOT BETWEEN ((LOWER(vt0.c0))) AND ((((vt0.c0) IS FALSE))))))) UNION SELECT DISTINCT * FROM v0, vt2, vt0 WHERE ((((((vt2.c0)) NOT BETWEEN ((LOWER(vt0.c0))) AND ((((vt0.c0) IS FALSE))))) ISNULL));
SELECT DISTINCT * FROM v0, vt2, vt0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE (CAST(CAST(vt0.c0 AS REAL) AS TEXT)) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((NOT (CAST(CAST(vt0.c0 AS REAL) AS TEXT)))) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE (((CAST(CAST(vt0.c0 AS REAL) AS TEXT)) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt2 INNER JOIN vt0 ON ((((((vt0.c0) NOT NULL))OR(vt2.c0)))AND(((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0)))) FULL OUTER JOIN v0 ON (((v0.c0)) BETWEEN ((v0.c0)) AND ((((vt2.c0)&(v0.c0))))) GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt2 INNER JOIN vt0 ON ((((((vt0.c0) NOT NULL))OR(vt2.c0)))AND(((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0)))) FULL OUTER JOIN v0 ON (((v0.c0)) BETWEEN ((v0.c0)) AND ((((vt2.c0)&(v0.c0))))) GROUP BY v0.c0, vt0.c0 HAVING vt2.c0 UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt2 INNER JOIN vt0 ON ((((((vt0.c0) NOT NULL))OR(vt2.c0)))AND(((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0)))) FULL OUTER JOIN v0 ON (((v0.c0)) BETWEEN ((v0.c0)) AND ((((vt2.c0)&(v0.c0))))) GROUP BY v0.c0, vt0.c0 HAVING (NOT (vt2.c0)) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt2 INNER JOIN vt0 ON ((((((vt0.c0) NOT NULL))OR(vt2.c0)))AND(((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0)))) FULL OUTER JOIN v0 ON (((v0.c0)) BETWEEN ((v0.c0)) AND ((((vt2.c0)&(v0.c0))))) GROUP BY v0.c0, vt0.c0 HAVING ((vt2.c0) ISNULL);
SELECT ALL v0.c0, vt0.c0 FROM vt2 INNER JOIN vt0 ON ((((((vt0.c0) NOT NULL))OR(vt2.c0)))AND(((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0)))) FULL OUTER JOIN v0 ON (((v0.c0)) BETWEEN ((v0.c0)) AND ((((vt2.c0)&(v0.c0))))) GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt2 INNER JOIN vt0 ON ((((((vt0.c0) NOT NULL))OR(vt2.c0)))AND(((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0)))) FULL OUTER JOIN v0 ON (((v0.c0)) BETWEEN ((v0.c0)) AND ((((vt2.c0)&(v0.c0))))) GROUP BY v0.c0, vt0.c0 HAVING vt2.c0 UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt2 INNER JOIN vt0 ON ((((((vt0.c0) NOT NULL))OR(vt2.c0)))AND(((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0)))) FULL OUTER JOIN v0 ON (((v0.c0)) BETWEEN ((v0.c0)) AND ((((vt2.c0)&(v0.c0))))) GROUP BY v0.c0, vt0.c0 HAVING (NOT (vt2.c0)) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt2 INNER JOIN vt0 ON ((((((vt0.c0) NOT NULL))OR(vt2.c0)))AND(((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0)))) FULL OUTER JOIN v0 ON (((v0.c0)) BETWEEN ((v0.c0)) AND ((((vt2.c0)&(v0.c0))))) GROUP BY v0.c0, vt0.c0 HAVING ((vt2.c0) ISNULL);
SELECT ALL v0.c0, vt0.c0 FROM vt2 INNER JOIN vt0 ON ((((((vt0.c0) NOT NULL))OR(vt2.c0)))AND(((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0)))) FULL OUTER JOIN v0 ON (((v0.c0)) BETWEEN ((v0.c0)) AND ((((vt2.c0)&(v0.c0))))) GROUP BY v0.c0, vt0.c0;
SELECT TOTAL((((+ (vt1.c0)))IS((((vt1.c0))==((v0.c0)))))) FROM v0, vt1, vt0 ORDER BY ((((vt1.c0) IS TRUE))/(((vt0.c0)|(v0.c0)))) DESC  NULLS FIRST, (+ (MIN(v0.c0, vt0.c0))) ASC  NULLS LAST;
SELECT ALL vt1.c0, vt2.c0, v0.c0 FROM vt2, v0, vt1;
SELECT vt1.c0, vt2.c0, v0.c0 FROM vt2, v0 NOT INDEXED, vt1 WHERE ((CAST(vt1.c0 AS TEXT) IN ())) UNION ALL SELECT vt1.c0, vt2.c0, v0.c0 FROM vt2, v0 NOT INDEXED, vt1 WHERE ((NOT ((CAST(vt1.c0 AS TEXT) IN ())))) UNION ALL SELECT ALL vt1.c0, vt2.c0, v0.c0 FROM vt2, v0, vt1 WHERE ((((CAST(vt1.c0 AS TEXT) IN ())) ISNULL));
SELECT ALL vt1.c0, vt2.c0, v0.c0 FROM vt2, v0, vt1;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))>(((vt0.c0)/(vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))>(((vt0.c0)/(vt0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))>(((vt0.c0)/(vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 WHERE (NULL) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE ((NOT (NULL))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2 WHERE (((NULL) ISNULL)) GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt0.c0 FROM v0, vt0, vt1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0, vt1 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM v0, vt0, vt1 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM v0, vt0, vt1 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM v0, vt0, vt1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0, vt1 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM v0, vt0, vt1 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM v0, vt0, vt1 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM v0, vt0, vt1 GROUP BY vt0.c0;
SELECT TOTAL(CASE WHEN TYPEOF(DISTINCT 'jy') THEN vt2.c0 ELSE ((((v0.c0)OR(vt2.c0)))OR(vt2.c0)) END) FROM v0, vt2, vt1 ORDER BY (((vt2.c0 IN (vt2.c0, vt1.c0)))>>((v0.c0 IN ()))) ASC;
SELECT * FROM v0;
SELECT * FROM v0 WHERE ((((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, '-716371556', v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))/(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))) UNION ALL SELECT * FROM v0 WHERE ((NOT ((((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, '-716371556', v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))/(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))))) UNION ALL SELECT * FROM v0 WHERE ((((((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, '-716371556', v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))/(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (CASE WHEN v0.c0 THEN CASE WHEN v0.c0 THEN v0.c0 END END) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (CASE WHEN v0.c0 THEN CASE WHEN v0.c0 THEN v0.c0 END END))) UNION SELECT DISTINCT * FROM v0 WHERE (((CASE WHEN v0.c0 THEN CASE WHEN v0.c0 THEN v0.c0 END END) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (LTRIM(vt1.c0 COLLATE RTRIM, ((vt1.c0)<(vt1.c0)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (LTRIM(vt1.c0 COLLATE RTRIM, ((vt1.c0)<(vt1.c0)))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((LTRIM(vt1.c0 COLLATE RTRIM, ((vt1.c0)<(vt1.c0)))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt2.c0, vt0.c0 FROM vt2 CROSS JOIN vt0 ON ((TRIM(vt2.c0, vt0.c0)) BETWEEN ((((vt0.c0, vt0.c0, vt0.c0))>((NULL, vt0.c0, vt2.c0)))) AND (((vt2.c0)<<(vt0.c0)))) GROUP BY vt2.c0, vt0.c0;
SELECT vt2.c0, vt0.c0 FROM vt2 CROSS JOIN vt0 ON ((TRIM(vt2.c0, vt0.c0)) BETWEEN ((((vt0.c0, vt0.c0, vt0.c0))>((NULL, vt0.c0, vt2.c0)))) AND (((vt2.c0)<<(vt0.c0)))) GROUP BY vt2.c0, vt0.c0 HAVING MIN(COUNT(vt2.c0)) UNION ALL SELECT ALL vt2.c0, vt0.c0 FROM vt2 CROSS JOIN vt0 ON ((TRIM(vt2.c0, vt0.c0)) BETWEEN ((((vt0.c0, vt0.c0, vt0.c0))>((NULL, vt0.c0, vt2.c0)))) AND (((vt2.c0)<<(vt0.c0)))) GROUP BY vt2.c0, vt0.c0 HAVING (NOT (MIN(COUNT(vt2.c0)))) UNION ALL SELECT ALL vt2.c0, vt0.c0 FROM vt2 CROSS JOIN vt0 ON ((TRIM(vt2.c0, vt0.c0)) BETWEEN ((((vt0.c0, vt0.c0, vt0.c0))>((NULL, vt0.c0, vt2.c0)))) AND (((vt2.c0)<<(vt0.c0)))) GROUP BY vt2.c0, vt0.c0 HAVING ((MIN(COUNT(vt2.c0))) ISNULL);
SELECT ALL vt2.c0 FROM vt2;
SELECT ALL vt2.c0 FROM vt2 WHERE (CAST(vt2.c0 AS BLOB) COLLATE NOCASE) UNION ALL SELECT ALL vt2.c0 FROM vt2 WHERE ((NOT (CAST(vt2.c0 AS BLOB) COLLATE NOCASE))) UNION ALL SELECT ALL vt2.c0 FROM vt2 WHERE (((CAST(vt2.c0 AS BLOB) COLLATE NOCASE) ISNULL));
SELECT ALL vt2.c0 FROM vt2;
SELECT DISTINCT v0.c0 FROM vt1, vt0, vt2, v0;
SELECT DISTINCT v0.c0 FROM vt1, vt0, vt2, v0 WHERE ((vt2.c0 IN ()) COLLATE NOCASE COLLATE RTRIM) UNION SELECT DISTINCT v0.c0 FROM vt1, vt0, vt2, v0 WHERE ((NOT ((vt2.c0 IN ()) COLLATE NOCASE COLLATE RTRIM))) UNION SELECT DISTINCT v0.c0 FROM vt1, vt0, vt2, v0 WHERE ((((vt2.c0 IN ()) COLLATE NOCASE COLLATE RTRIM) ISNULL));
SELECT DISTINCT v0.c0 FROM vt1, vt0, vt2, v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((((NOT (v0.c0)))>=(((v0.c0)>>(v0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((((NOT (v0.c0)))>=(((v0.c0)>>(v0.c0))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((((NOT (v0.c0)))>=(((v0.c0)>>(v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (((+ (COUNT(*)))) BETWEEN (COUNT(vt2.c0) COLLATE NOCASE) AND (SUM(vt2.c0))) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT ((((+ (COUNT(*)))) BETWEEN (COUNT(vt2.c0) COLLATE NOCASE) AND (SUM(vt2.c0))))) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (((((+ (COUNT(*)))) BETWEEN (COUNT(vt2.c0) COLLATE NOCASE) AND (SUM(vt2.c0)))) ISNULL);
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (((+ (COUNT(*)))) BETWEEN (COUNT(vt2.c0) COLLATE NOCASE) AND (SUM(vt2.c0))) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT ((((+ (COUNT(*)))) BETWEEN (COUNT(vt2.c0) COLLATE NOCASE) AND (SUM(vt2.c0))))) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (((((+ (COUNT(*)))) BETWEEN (COUNT(vt2.c0) COLLATE NOCASE) AND (SUM(vt2.c0)))) ISNULL);
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT * FROM v0, vt1;
SELECT * FROM v0, vt1 WHERE (NULL) UNION ALL SELECT * FROM v0, vt1 WHERE ((NOT (NULL))) UNION ALL SELECT ALL * FROM v0, vt1 WHERE (((NULL) ISNULL));
SELECT * FROM v0, vt1;
SELECT DISTINCT * FROM v0, vt2, vt1, vt0;
SELECT DISTINCT * FROM v0, vt2, vt1, vt0 WHERE ((+ (((((vt0.c0)OR(vt2.c0)))AND(vt0.c0))))) UNION SELECT DISTINCT * FROM v0, vt2, vt1, vt0 WHERE ((NOT ((+ (((((vt0.c0)OR(vt2.c0)))AND(vt0.c0))))))) UNION SELECT DISTINCT * FROM v0, vt2, vt1, vt0 WHERE ((((+ (((((vt0.c0)OR(vt2.c0)))AND(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0, vt2, vt1, vt0;
SELECT ALL vt2.c0, vt1.c0 FROM vt1, vt2 GROUP BY vt2.c0, vt1.c0;
SELECT vt2.c0, vt1.c0 FROM vt1, vt2 WHERE (vt1.c0) GROUP BY vt2.c0, vt1.c0 UNION SELECT ALL vt2.c0, vt1.c0 FROM vt1, vt2 WHERE ((NOT (vt1.c0))) GROUP BY vt2.c0, vt1.c0 UNION SELECT ALL vt2.c0, vt1.c0 FROM vt1, vt2 WHERE (((vt1.c0) ISNULL)) GROUP BY vt2.c0, vt1.c0;
SELECT ALL vt2.c0, vt1.c0 FROM vt1, vt2 GROUP BY vt2.c0, vt1.c0;
SELECT ALL v0.c0, vt0.c0, vt2.c0, vt1.c0 FROM vt2, v0, vt1 LEFT OUTER JOIN vt0 ON '' GROUP BY v0.c0, vt0.c0, vt2.c0, vt1.c0;
SELECT ALL v0.c0, vt0.c0, vt2.c0, vt1.c0 FROM vt2, v0, vt1 LEFT OUTER JOIN vt0 ON '' GROUP BY v0.c0, vt0.c0, vt2.c0, vt1.c0 HAVING GROUP_CONCAT(GROUP_CONCAT(COUNT(vt2.c0))) UNION ALL SELECT ALL v0.c0, vt0.c0, vt2.c0, vt1.c0 FROM vt2, v0, vt1 LEFT OUTER JOIN vt0 ON '' GROUP BY v0.c0, vt0.c0, vt2.c0, vt1.c0 HAVING (NOT (GROUP_CONCAT(GROUP_CONCAT(COUNT(vt2.c0))))) UNION ALL SELECT v0.c0, vt0.c0, vt2.c0, vt1.c0 FROM vt2, v0, vt1 LEFT OUTER JOIN vt0 ON '' GROUP BY v0.c0, vt0.c0, vt2.c0, vt1.c0 HAVING ((GROUP_CONCAT(GROUP_CONCAT(COUNT(vt2.c0)))) ISNULL);
SELECT * FROM v0, vt1;
SELECT ALL * FROM v0, vt1 WHERE ((((v0.c0)) BETWEEN ((vt1.c0 COLLATE BINARY)) AND (((((vt1.c0)) BETWEEN ((v0.c0)) AND ((vt1.c0))))))) UNION ALL SELECT * FROM v0, vt1 WHERE ((NOT ((((v0.c0)) BETWEEN ((vt1.c0 COLLATE BINARY)) AND (((((vt1.c0)) BETWEEN ((v0.c0)) AND ((vt1.c0))))))))) UNION ALL SELECT ALL * FROM v0, vt1 WHERE ((((((v0.c0)) BETWEEN ((vt1.c0 COLLATE BINARY)) AND (((((vt1.c0)) BETWEEN ((v0.c0)) AND ((vt1.c0))))))) ISNULL));
SELECT * FROM v0, vt1;
SELECT DISTINCT * FROM vt1, v0;
SELECT DISTINCT * FROM vt1, v0 WHERE (((v0.c0 COLLATE RTRIM) IS FALSE)) UNION SELECT DISTINCT * FROM vt1, v0 WHERE ((NOT (((v0.c0 COLLATE RTRIM) IS FALSE)))) UNION SELECT DISTINCT * FROM vt1, v0 WHERE (((((v0.c0 COLLATE RTRIM) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM vt1, v0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (vt1.c0) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((vt1.c0) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING CAST((- (MAX(MAX(MIN(SUM(v0.c0)))))) AS NUMERIC) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (CAST((- (MAX(MAX(MIN(SUM(v0.c0)))))) AS NUMERIC))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((CAST((- (MAX(MAX(MIN(SUM(v0.c0)))))) AS NUMERIC)) ISNULL);
SELECT TOTAL(CASE ((vt2.c0)IS NOT(vt0.c0))  WHEN '-1554818697' COLLATE RTRIM THEN (+ (vt0.c0)) WHEN (vt2.c0 IN ()) THEN ((0.15327306591814316)<(vt0.c0)) WHEN ((vt2.c0)>=(vt2.c0)) THEN ((((vt2.c0)AND(vt0.c0)))AND(vt0.c0)) ELSE (((('0.14589604398153155')OR(vt2.c0)))OR(vt0.c0)) END) FROM vt2, vt0;
SELECT ALL v0.c0, vt0.c0 FROM v0 CROSS JOIN vt0 ON (((vt0.c0, v0.c0, vt0.c0))>=((v0.c0, v0.c0, vt0.c0))) COLLATE BINARY;
SELECT ALL v0.c0, vt0.c0 FROM v0 CROSS JOIN vt0 ON (((vt0.c0, v0.c0, vt0.c0))>=((v0.c0, v0.c0, vt0.c0))) COLLATE BINARY WHERE (((vt0.c0) BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (((v0.c0) ISNULL)))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0 CROSS JOIN vt0 ON (((vt0.c0, v0.c0, vt0.c0))>=((v0.c0, v0.c0, vt0.c0))) COLLATE BINARY WHERE ((NOT (((vt0.c0) BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (((v0.c0) ISNULL)))))) UNION ALL SELECT v0.c0, vt0.c0 FROM v0 CROSS JOIN vt0 ON (((vt0.c0, v0.c0, vt0.c0))>=((v0.c0, v0.c0, vt0.c0))) COLLATE BINARY WHERE (((((vt0.c0) BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (((v0.c0) ISNULL)))) ISNULL));
SELECT ALL v0.c0, vt0.c0 FROM v0 CROSS JOIN vt0 ON (((vt0.c0, v0.c0, vt0.c0))>=((v0.c0, v0.c0, vt0.c0))) COLLATE BINARY;
SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN v0 ON ((((((((vt2.c0)OR(v0.c0 COLLATE BINARY)))OR(CASE v0.c0  WHEN '220677584' THEN vt1.c0 ELSE v0.c0 END)))AND((vt1.c0 IN ()))))OR((v0.c0 IN ()))) CROSS JOIN vt2 ON STRFTIME(CAST(vt2.c0 AS NUMERIC), ((((vt2.c0)AND('QIv#9&')))AND(vt2.c0)), ((((vt2.c0)OR(v0.c0)))OR(vt1.c0)));
SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN v0 ON ((((((((vt2.c0)OR(v0.c0 COLLATE BINARY)))OR(CASE v0.c0  WHEN '220677584' THEN vt1.c0 ELSE v0.c0 END)))AND((vt1.c0 IN ()))))OR((v0.c0 IN ()))) CROSS JOIN vt2 ON STRFTIME(CAST(vt2.c0 AS NUMERIC), ((((vt2.c0)AND('QIv#9&')))AND(vt2.c0)), ((((vt2.c0)OR(v0.c0)))OR(vt1.c0))) WHERE (((vt1.c0)LIKE(vt1.c0)) COLLATE NOCASE) UNION SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN v0 ON ((((((((vt2.c0)OR(v0.c0 COLLATE BINARY)))OR(CASE v0.c0  WHEN '220677584' THEN vt1.c0 ELSE v0.c0 END)))AND((vt1.c0 IN ()))))OR((v0.c0 IN ()))) CROSS JOIN vt2 ON STRFTIME(CAST(vt2.c0 AS NUMERIC), ((((vt2.c0)AND('QIv#9&')))AND(vt2.c0)), ((((vt2.c0)OR(v0.c0)))OR(vt1.c0))) WHERE ((NOT (((vt1.c0)LIKE(vt1.c0)) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN v0 ON ((((((((vt2.c0)OR(v0.c0 COLLATE BINARY)))OR(CASE v0.c0  WHEN '220677584' THEN vt1.c0 ELSE v0.c0 END)))AND((vt1.c0 IN ()))))OR((v0.c0 IN ()))) CROSS JOIN vt2 ON STRFTIME(CAST(vt2.c0 AS NUMERIC), ((((vt2.c0)AND('QIv#9&')))AND(vt2.c0)), ((((vt2.c0)OR(v0.c0)))OR(vt1.c0))) WHERE (((((vt1.c0)LIKE(vt1.c0)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN v0 ON ((((((((vt2.c0)OR(v0.c0 COLLATE BINARY)))OR(CASE v0.c0  WHEN '220677584' THEN vt1.c0 ELSE v0.c0 END)))AND((vt1.c0 IN ()))))OR((v0.c0 IN ()))) CROSS JOIN vt2 ON STRFTIME(CAST(vt2.c0 AS NUMERIC), ((((vt2.c0)AND('QIv#9&')))AND(vt2.c0)), ((((vt2.c0)OR(v0.c0)))OR(vt1.c0)));
SELECT vt1.c0 FROM vt1, vt2 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt2 WHERE ((((vt2.c0, ((vt1.c0) IS TRUE), ((vt2.c0) ISNULL)))<=(((((vt2.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt2.c0))), ((vt2.c0)AND(vt1.c0)), ((NULL)AND(vt2.c0)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1, vt2 WHERE ((NOT ((((vt2.c0, ((vt1.c0) IS TRUE), ((vt2.c0) ISNULL)))<=(((((vt2.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt2.c0))), ((vt2.c0)AND(vt1.c0)), ((NULL)AND(vt2.c0)))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, vt2 WHERE ((((((vt2.c0, ((vt1.c0) IS TRUE), ((vt2.c0) ISNULL)))<=(((((vt2.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt2.c0))), ((vt2.c0)AND(vt1.c0)), ((NULL)AND(vt2.c0)))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt2 GROUP BY vt1.c0;
SELECT ALL vt1.c0, vt2.c0, v0.c0 FROM vt2 LEFT OUTER JOIN vt1 ON 0.010606738556802386 FULL OUTER JOIN v0 ON CASE WHEN (- (vt2.c0)) THEN (((vt2.c0)) BETWEEN ((vt1.c0)) AND ((v0.c0))) ELSE (((v0.c0))>=((vt1.c0))) END GROUP BY vt1.c0, vt2.c0, v0.c0;
SELECT vt1.c0, vt2.c0, v0.c0 FROM vt2 LEFT OUTER JOIN vt1 ON 0.010606738556802386 FULL OUTER JOIN v0 ON CASE WHEN (- (vt2.c0)) THEN (((vt2.c0)) BETWEEN ((vt1.c0)) AND ((v0.c0))) ELSE (((v0.c0))>=((vt1.c0))) END GROUP BY vt1.c0, vt2.c0, v0.c0 HAVING AVG(COUNT(SUM(GROUP_CONCAT('597830082')))) UNION ALL SELECT vt1.c0, vt2.c0, v0.c0 FROM vt2 LEFT OUTER JOIN vt1 ON 0.010606738556802386 FULL OUTER JOIN v0 ON CASE WHEN (- (vt2.c0)) THEN (((vt2.c0)) BETWEEN ((vt1.c0)) AND ((v0.c0))) ELSE (((v0.c0))>=((vt1.c0))) END GROUP BY vt1.c0, vt2.c0, v0.c0 HAVING (NOT (AVG(COUNT(SUM(GROUP_CONCAT('597830082')))))) UNION ALL SELECT ALL vt1.c0, vt2.c0, v0.c0 FROM vt2 LEFT OUTER JOIN vt1 ON 0.010606738556802386 FULL OUTER JOIN v0 ON CASE WHEN (- (vt2.c0)) THEN (((vt2.c0)) BETWEEN ((vt1.c0)) AND ((v0.c0))) ELSE (((v0.c0))>=((vt1.c0))) END GROUP BY vt1.c0, vt2.c0, v0.c0 HAVING ((AVG(COUNT(SUM(GROUP_CONCAT('597830082'))))) ISNULL);
SELECT vt0.c0 FROM v0, vt0;
SELECT ALL vt0.c0 FROM v0, vt0 WHERE ((((((vt0.c0) NOT NULL)))<>(((vt0.c0 IN (v0.c0)))))) UNION ALL SELECT vt0.c0 FROM v0, vt0 WHERE ((NOT ((((((vt0.c0) NOT NULL)))<>(((vt0.c0 IN (v0.c0)))))))) UNION ALL SELECT vt0.c0 FROM v0, vt0 WHERE ((((((((vt0.c0) NOT NULL)))!=(((vt0.c0 IN (v0.c0)))))) ISNULL));
SELECT vt0.c0 FROM v0, vt0;
SELECT DISTINCT * FROM vt2;
SELECT DISTINCT * FROM vt2 WHERE (((((((((((vt2.c0)AND(vt2.c0)))AND('0.2419109429056593')))AND(0Xffffffffa913ff6d)))AND(vt2.c0))) BETWEEN (((((((((NULL)AND(vt2.c0)))AND(0.8795147659418863)))AND(vt2.c0)))OR(vt2.c0))) AND (((vt2.c0)<=(vt2.c0))))) UNION SELECT DISTINCT * FROM vt2 WHERE ((NOT (((((((((((vt2.c0)AND(vt2.c0)))AND('0.2419109429056593')))AND(0xffffffffa913ff6d)))AND(vt2.c0))) BETWEEN (((((((((NULL)AND(vt2.c0)))AND(0.8795147659418863)))AND(vt2.c0)))OR(vt2.c0))) AND (((vt2.c0)<=(vt2.c0))))))) UNION SELECT DISTINCT * FROM vt2 WHERE (((((((((((((vt2.c0)AND(vt2.c0)))AND('0.2419109429056593')))AND(0xffffffffa913ff6d)))AND(vt2.c0))) BETWEEN (((((((((NULL)AND(vt2.c0)))AND(0.8795147659418863)))AND(vt2.c0)))OR(vt2.c0))) AND (((vt2.c0)<=(vt2.c0))))) ISNULL));
SELECT DISTINCT * FROM vt2;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (LOWER(DISTINCT (- (vt1.c0)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (LOWER(DISTINCT (- (vt1.c0)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((LOWER(DISTINCT (- (vt1.c0)))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING (((COUNT(AVG(vt1.c0)), -1220007142, vt0.c0)) NOT BETWEEN ((CAST(AVG(MIN(vt0.c0)) AS INTEGER), vt1.c0 COLLATE RTRIM, vt0.c0)) AND (((((MIN(MAX(vt0.c0)), COUNT(vt0.c0), TOTAL(vt1.c0), vt1.c0, vt0.c0))==((vt0.c0, vt1.c0, vt0.c0, vt0.c0, vt1.c0))), SUM(vt0.c0), SUM(vt0.c0)))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING (NOT ((((COUNT(AVG(vt1.c0)), -1220007142, vt0.c0)) NOT BETWEEN ((CAST(AVG(MIN(vt0.c0)) AS INTEGER), vt1.c0 COLLATE RTRIM, vt0.c0)) AND (((((MIN(MAX(vt0.c0)), COUNT(vt0.c0), TOTAL(vt1.c0), vt1.c0, vt0.c0))==((vt0.c0, vt1.c0, vt0.c0, vt0.c0, vt1.c0))), SUM(vt0.c0), SUM(vt0.c0)))))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING (((((COUNT(AVG(vt1.c0)), -1220007142, vt0.c0)) NOT BETWEEN ((CAST(AVG(MIN(vt0.c0)) AS INTEGER), vt1.c0 COLLATE RTRIM, vt0.c0)) AND (((((MIN(MAX(vt0.c0)), COUNT(vt0.c0), TOTAL(vt1.c0), vt1.c0, vt0.c0))=((vt0.c0, vt1.c0, vt0.c0, vt0.c0, vt1.c0))), SUM(vt0.c0), SUM(vt0.c0))))) ISNULL);
SELECT vt0.c0, vt1.c0 FROM vt0 CROSS JOIN vt1 ON 0X5e7eec18;
SELECT vt0.c0, vt1.c0 FROM vt0 CROSS JOIN vt1 ON 0x5e7eec18 WHERE (CAST(vt1.c0 AS REAL) COLLATE NOCASE) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0 CROSS JOIN vt1 ON 0X5e7eec18 WHERE ((NOT (CAST(vt1.c0 AS REAL) COLLATE NOCASE))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0 CROSS JOIN vt1 ON 0X5e7eec18 WHERE (((CAST(vt1.c0 AS REAL) COLLATE NOCASE) ISNULL));
SELECT vt0.c0, vt1.c0 FROM vt0 CROSS JOIN vt1 ON 0X5e7eec18;
SELECT DISTINCT vt1.c0, vt0.c0, vt2.c0 FROM vt1, vt2, v0, vt0;
SELECT DISTINCT vt1.c0, vt0.c0, vt2.c0 FROM vt1, vt2, v0, vt0 WHERE (((0.4875506151764615) ISNULL)) UNION SELECT DISTINCT vt1.c0, vt0.c0, vt2.c0 FROM vt1, vt2, v0, vt0 WHERE ((NOT (((0.4875506151764615) ISNULL)))) UNION SELECT DISTINCT vt1.c0, vt0.c0, vt2.c0 FROM vt1, vt2, v0, vt0 WHERE (((((0.4875506151764615) ISNULL)) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c0, vt2.c0 FROM vt1, vt2, v0, vt0;
SELECT ALL vt0.c0, v0.c0, vt1.c0, vt2.c0 FROM vt0, vt1 CROSS JOIN v0 ON IFNULL(CAST(vt1.c0 AS BLOB), ((vt1.c0)!=(vt1.c0))) RIGHT OUTER JOIN vt2 ON ((MIN(vt1.c0, vt0.c0)) NOT BETWEEN ((- (NULL))) AND ((((NULL))!=((vt1.c0))))) GROUP BY vt0.c0, v0.c0, vt1.c0, vt2.c0;
SELECT ALL vt0.c0, v0.c0, vt1.c0, vt2.c0 FROM vt0, vt1 CROSS JOIN v0 ON IFNULL(CAST(vt1.c0 AS BLOB), ((vt1.c0)<>(vt1.c0))) RIGHT OUTER JOIN vt2 ON ((MIN(vt1.c0, vt0.c0)) NOT BETWEEN ((- (NULL))) AND ((((NULL))!=((vt1.c0))))) WHERE (v0.c0) GROUP BY vt0.c0, v0.c0, vt1.c0, vt2.c0 UNION SELECT ALL vt0.c0, v0.c0, vt1.c0, vt2.c0 FROM vt0, vt1 CROSS JOIN v0 ON IFNULL(CAST(vt1.c0 AS BLOB), ((vt1.c0)!=(vt1.c0))) RIGHT OUTER JOIN vt2 ON ((MIN(vt1.c0, vt0.c0)) NOT BETWEEN ((- (NULL))) AND ((((NULL))<>((vt1.c0))))) WHERE ((NOT (v0.c0))) GROUP BY vt0.c0, v0.c0, vt1.c0, vt2.c0 UNION SELECT vt0.c0, v0.c0, vt1.c0, vt2.c0 FROM vt0, vt1 CROSS JOIN v0 ON IFNULL(CAST(vt1.c0 AS BLOB), ((vt1.c0)!=(vt1.c0))) RIGHT OUTER JOIN vt2 ON ((MIN(vt1.c0, vt0.c0)) NOT BETWEEN ((- (NULL))) AND ((((NULL))<>((vt1.c0))))) WHERE (((v0.c0) ISNULL)) GROUP BY vt0.c0, v0.c0, vt1.c0, vt2.c0;
SELECT ALL vt0.c0, v0.c0, vt1.c0, vt2.c0 FROM vt0, vt1 CROSS JOIN v0 ON IFNULL(CAST(vt1.c0 AS BLOB), ((vt1.c0)!=(vt1.c0))) RIGHT OUTER JOIN vt2 ON ((MIN(vt1.c0, vt0.c0)) NOT BETWEEN ((- (NULL))) AND ((((NULL))!=((vt1.c0))))) GROUP BY vt0.c0, v0.c0, vt1.c0, vt2.c0;
SELECT ALL vt1.c0, v0.c0 FROM v0, vt2, vt1 GROUP BY vt1.c0, v0.c0;
SELECT vt1.c0, v0.c0 FROM v0, vt2, vt1 GROUP BY vt1.c0, v0.c0 HAVING ((((((((((AVG(vt1.c0))<=(TOTAL(TOTAL(COUNT(vt1.c0))))))AND(vt2.c0 COLLATE RTRIM)))AND(MAX(vt1.c0))))OR(((AVG(SUM(COUNT(vt2.c0)))) NOT BETWEEN (vt1.c0) AND (vt2.c0)))))OR(GROUP_CONCAT(GROUP_CONCAT(COUNT(*))))) UNION ALL SELECT vt1.c0, v0.c0 FROM v0, vt2, vt1 GROUP BY vt1.c0, v0.c0 HAVING (NOT (((((((((((AVG(vt1.c0))<=(TOTAL(TOTAL(COUNT(vt1.c0))))))AND(vt2.c0 COLLATE RTRIM)))AND(MAX(vt1.c0))))OR(((AVG(SUM(COUNT(vt2.c0)))) NOT BETWEEN (vt1.c0) AND (vt2.c0)))))OR(GROUP_CONCAT(GROUP_CONCAT(COUNT(*))))))) UNION ALL SELECT vt1.c0, v0.c0 FROM v0, vt2, vt1 GROUP BY vt1.c0, v0.c0 HAVING ((((((((((((AVG(vt1.c0))<=(TOTAL(TOTAL(COUNT(vt1.c0))))))AND(vt2.c0 COLLATE RTRIM)))AND(MAX(vt1.c0))))OR(((AVG(SUM(COUNT(vt2.c0)))) NOT BETWEEN (vt1.c0) AND (vt2.c0)))))OR(GROUP_CONCAT(GROUP_CONCAT(COUNT(*)))))) ISNULL);
SELECT vt1.c0, vt0.c0, vt2.c0, v0.c0 FROM v0 LEFT OUTER JOIN vt2 ON (~ (v0.c0)) COLLATE BINARY CROSS JOIN vt0 ON ((NULL) NOT BETWEEN ((+ (vt2.c0))) AND (vt0.c0 COLLATE BINARY)) CROSS JOIN vt1 ON '-1362892299';
SELECT ALL vt1.c0, vt0.c0, vt2.c0, v0.c0 FROM v0 LEFT OUTER JOIN vt2 ON (~ (v0.c0)) COLLATE BINARY CROSS JOIN vt0 ON ((NULL) NOT BETWEEN ((+ (vt2.c0))) AND (vt0.c0 COLLATE BINARY)) CROSS JOIN vt1 ON '-1362892299' WHERE ((((vt0.c0 IN ())) NOT BETWEEN ((vt1.c0 IN ())) AND (((((v0.c0)AND(vt1.c0)))AND(vt0.c0))))) UNION ALL SELECT ALL vt1.c0, vt0.c0, vt2.c0, v0.c0 FROM v0 LEFT OUTER JOIN vt2 ON (~ (v0.c0)) COLLATE BINARY CROSS JOIN vt0 ON ((NULL) NOT BETWEEN ((+ (vt2.c0))) AND (vt0.c0 COLLATE BINARY)) CROSS JOIN vt1 ON '-1362892299' WHERE ((NOT ((((vt0.c0 IN ())) NOT BETWEEN ((vt1.c0 IN ())) AND (((((v0.c0)AND(vt1.c0)))AND(vt0.c0))))))) UNION ALL SELECT ALL vt1.c0, vt0.c0, vt2.c0, v0.c0 FROM v0 LEFT OUTER JOIN vt2 ON (~ (v0.c0)) COLLATE BINARY CROSS JOIN vt0 ON ((NULL) NOT BETWEEN ((+ (vt2.c0))) AND (vt0.c0 COLLATE BINARY)) CROSS JOIN vt1 ON '-1362892299' WHERE ((((((vt0.c0 IN ())) NOT BETWEEN ((vt1.c0 IN ())) AND (((((v0.c0)AND(vt1.c0)))AND(vt0.c0))))) ISNULL));
SELECT vt1.c0, vt0.c0, vt2.c0, v0.c0 FROM v0 LEFT OUTER JOIN vt2 ON (~ (v0.c0)) COLLATE BINARY CROSS JOIN vt0 ON ((NULL) NOT BETWEEN ((+ (vt2.c0))) AND (vt0.c0 COLLATE BINARY)) CROSS JOIN vt1 ON '-1362892299';
SELECT DISTINCT * FROM vt1, vt2, vt0;
SELECT DISTINCT * FROM vt1, vt2, vt0 WHERE (CAST(((0.7816621602307403)-(vt2.c0)) AS TEXT)) UNION SELECT DISTINCT * FROM vt1, vt2, vt0 WHERE ((NOT (CAST(((0.7816621602307403)-(vt2.c0)) AS TEXT)))) UNION SELECT DISTINCT * FROM vt1, vt2, vt0 WHERE (((CAST(((0.7816621602307403)-(vt2.c0)) AS TEXT)) ISNULL));
SELECT DISTINCT * FROM vt1, vt2, vt0;
SELECT vt1.c0 FROM vt0, vt1 INNER JOIN vt2 ON CAST((((vt0.c0)) BETWEEN ((vt2.c0)) AND ((x''))) AS INTEGER) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, vt1 INNER JOIN vt2 ON CAST((((vt0.c0)) BETWEEN ((vt2.c0)) AND ((x''))) AS INTEGER) WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))) NOT BETWEEN (((vt0.c0)*(vt1.c0))) AND (CASE vt2.c0  WHEN vt2.c0 THEN vt1.c0 END))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt0, vt1 INNER JOIN vt2 ON CAST((((vt0.c0)) BETWEEN ((vt2.c0)) AND ((x''))) AS INTEGER) WHERE ((NOT (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))) NOT BETWEEN (((vt0.c0)*(vt1.c0))) AND (CASE vt2.c0  WHEN vt2.c0 THEN vt1.c0 END))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt0, vt1 INNER JOIN vt2 ON CAST((((vt0.c0)) BETWEEN ((vt2.c0)) AND ((x''))) AS INTEGER) WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))) NOT BETWEEN (((vt0.c0)*(vt1.c0))) AND (CASE vt2.c0  WHEN vt2.c0 THEN vt1.c0 END))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, vt1 INNER JOIN vt2 ON CAST((((vt0.c0)) BETWEEN ((vt2.c0)) AND ((x''))) AS INTEGER) GROUP BY vt1.c0;
SELECT ALL v0.c0, vt1.c0 FROM vt0, vt1, v0 GROUP BY v0.c0, vt1.c0;
SELECT ALL v0.c0, vt1.c0 FROM vt0, vt1, v0 GROUP BY v0.c0, vt1.c0 HAVING (((vt0.c0) BETWEEN (COUNT(COUNT(MAX(COUNT(v0.c0))))) AND (MAX(vt0.c0))) IN (SUM(COUNT(TOTAL(v0.c0))), ((((AVG(MIN(vt0.c0)))OR(0.22912423522289171)))AND(v0.c0)))) UNION ALL SELECT v0.c0, vt1.c0 FROM vt0, vt1, v0 GROUP BY v0.c0, vt1.c0 HAVING (NOT ((((vt0.c0) BETWEEN (COUNT(COUNT(MAX(COUNT(v0.c0))))) AND (MAX(vt0.c0))) IN (SUM(COUNT(TOTAL(v0.c0))), ((((AVG(MIN(vt0.c0)))OR(0.22912423522289171)))AND(v0.c0)))))) UNION ALL SELECT v0.c0, vt1.c0 FROM vt0, vt1, v0 GROUP BY v0.c0, vt1.c0 HAVING (((((vt0.c0) BETWEEN (COUNT(COUNT(MAX(COUNT(v0.c0))))) AND (MAX(vt0.c0))) IN (SUM(COUNT(TOTAL(v0.c0))), ((((AVG(MIN(vt0.c0)))OR(0.22912423522289171)))AND(v0.c0))))) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (CASE ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))  WHEN ((vt0.c0) NOTNULL) THEN ((vt0.c0) ISNULL) END) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (CASE ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))  WHEN ((vt0.c0) NOTNULL) THEN ((vt0.c0) ISNULL) END))) UNION ALL SELECT ALL * FROM vt0 WHERE (((CASE ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))  WHEN ((vt0.c0) NOTNULL) THEN ((vt0.c0) ISNULL) END) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN vt1 ON ((((((vt0.c0)OR(vt1.c0)))OR(vt0.c0))) NOT BETWEEN (CAST(vt1.c0 AS TEXT)) AND (CAST(vt0.c0 AS BLOB)));
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN vt1 ON ((((((vt0.c0)OR(vt1.c0)))OR(vt0.c0))) NOT BETWEEN (CAST(vt1.c0 AS TEXT)) AND (CAST(vt0.c0 AS BLOB))) WHERE ((((LOWER(DISTINCT vt0.c0), ((vt0.c0) NOT BETWEEN ('QIv#9&') AND (vt1.c0)), (('郐^জ')<>(vt1.c0))))>=((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)), ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)), TRIM(DISTINCT NULL, vt1.c0))))) UNION SELECT DISTINCT * FROM vt0 FULL OUTER JOIN vt1 ON ((((((vt0.c0)OR(vt1.c0)))OR(vt0.c0))) NOT BETWEEN (CAST(vt1.c0 AS TEXT)) AND (CAST(vt0.c0 AS BLOB))) WHERE ((NOT ((((LOWER(DISTINCT vt0.c0), ((vt0.c0) NOT BETWEEN ('QIv#9&') AND (vt1.c0)), (('郐^জ')<>(vt1.c0))))>=((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)), ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)), TRIM(DISTINCT NULL, vt1.c0))))))) UNION SELECT DISTINCT * FROM vt0 FULL OUTER JOIN vt1 ON ((((((vt0.c0)OR(vt1.c0)))OR(vt0.c0))) NOT BETWEEN (CAST(vt1.c0 AS TEXT)) AND (CAST(vt0.c0 AS BLOB))) WHERE ((((((LOWER(DISTINCT vt0.c0), ((vt0.c0) NOT BETWEEN ('QIv#9&') AND (vt1.c0)), (('郐^জ')<>(vt1.c0))))>=((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)), ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)), TRIM(DISTINCT NULL, vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN vt1 ON ((((((vt0.c0)OR(vt1.c0)))OR(vt0.c0))) NOT BETWEEN (CAST(vt1.c0 AS TEXT)) AND (CAST(vt0.c0 AS BLOB)));
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (CASE CAST(vt0.c0 AS REAL)  WHEN 't1' THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((vt0.c0)/(vt0.c0)) END) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CASE CAST(vt0.c0 AS REAL)  WHEN 't1' THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((vt0.c0)/(vt0.c0)) END))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((CASE CAST(vt0.c0 AS REAL)  WHEN 't1' THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((vt0.c0)/(vt0.c0)) END) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt1.c0, v0.c0, vt0.c0 FROM vt2 NOT INDEXED, vt1, v0, vt0 GROUP BY vt1.c0, v0.c0, vt0.c0;
SELECT vt1.c0, v0.c0, vt0.c0 FROM vt2, vt1, v0, vt0 GROUP BY vt1.c0, v0.c0, vt0.c0 HAVING SQLITE_COMPILEOPTION_GET(MIN(vt0.c0)) UNION ALL SELECT ALL vt1.c0, v0.c0, vt0.c0 FROM vt2, vt1, v0, vt0 GROUP BY vt1.c0, v0.c0, vt0.c0 HAVING (NOT (SQLITE_COMPILEOPTION_GET(MIN(vt0.c0)))) UNION ALL SELECT vt1.c0, v0.c0, vt0.c0 FROM vt2, vt1, v0, vt0 GROUP BY vt1.c0, v0.c0, vt0.c0 HAVING ((SQLITE_COMPILEOPTION_GET(MIN(vt0.c0))) ISNULL);
SELECT ALL vt1.c0, v0.c0, vt0.c0 FROM vt2 NOT INDEXED, vt1, v0, vt0 GROUP BY vt1.c0, v0.c0, vt0.c0;
SELECT vt1.c0, v0.c0, vt0.c0 FROM vt2, vt1, v0, vt0 GROUP BY vt1.c0, v0.c0, vt0.c0 HAVING SQLITE_COMPILEOPTION_GET(MIN(vt0.c0)) UNION ALL SELECT ALL vt1.c0, v0.c0, vt0.c0 FROM vt2, vt1, v0, vt0 GROUP BY vt1.c0, v0.c0, vt0.c0 HAVING (NOT (SQLITE_COMPILEOPTION_GET(MIN(vt0.c0)))) UNION ALL SELECT vt1.c0, v0.c0, vt0.c0 FROM vt2, vt1, v0, vt0 GROUP BY vt1.c0, v0.c0, vt0.c0 HAVING ((SQLITE_COMPILEOPTION_GET(MIN(vt0.c0))) ISNULL);
SELECT ALL vt1.c0, v0.c0, vt0.c0 FROM vt2 NOT INDEXED, vt1, v0, vt0 GROUP BY vt1.c0, v0.c0, vt0.c0;
SELECT ALL MIN(((((((vt2.c0)AND(vt1.c0)))OR(vt2.c0))) BETWEEN (((vt2.c0) ISNULL)) AND (((vt2.c0)LIKE(NULL))))) FROM vt2, vt1;
SELECT ALL * FROM v0, vt0;
SELECT * FROM v0, vt0 WHERE (CASE WHEN vt0.c0 THEN (vt0.c0 IN ()) ELSE ((((v0.c0)AND(vt0.c0)))AND(v0.c0)) END) UNION ALL SELECT ALL * FROM v0 NOT INDEXED, vt0 WHERE ((NOT (CASE WHEN vt0.c0 THEN (vt0.c0 IN ()) ELSE ((((v0.c0)AND(vt0.c0)))AND(v0.c0)) END))) UNION ALL SELECT ALL * FROM v0, vt0 WHERE (((CASE WHEN vt0.c0 THEN (vt0.c0 IN ()) ELSE ((((v0.c0)AND(vt0.c0)))AND(v0.c0)) END) ISNULL));
SELECT ALL * FROM v0, vt0;
SELECT DISTINCT vt2.c0 FROM vt1, vt2, v0;
SELECT DISTINCT vt2.c0 FROM vt1, vt2, v0 WHERE (((NOT ('w5C')) IN ())) UNION SELECT DISTINCT vt2.c0 FROM vt1, vt2, v0 WHERE ((NOT (((NOT ('w5C')) IN ())))) UNION SELECT DISTINCT vt2.c0 FROM vt1, vt2, v0 WHERE (((((NOT ('w5C')) IN ())) ISNULL));
SELECT DISTINCT vt2.c0 FROM vt1, vt2, v0;
SELECT ALL vt1.c0, vt2.c0, vt0.c0 FROM v0, vt1, vt2, vt0 GROUP BY vt1.c0, vt2.c0, vt0.c0;
SELECT vt1.c0, vt2.c0, vt0.c0 FROM v0, vt1, vt2, vt0 WHERE ((((CAST(vt1.c0 AS BLOB)))<(((NOT (-3.88347863E8)))))) GROUP BY vt1.c0, vt2.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt2.c0, vt0.c0 FROM v0, vt1, vt2, vt0 WHERE ((NOT ((((CAST(vt1.c0 AS BLOB)))<(((NOT (-3.88347863E8)))))))) GROUP BY vt1.c0, vt2.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt2.c0, vt0.c0 FROM v0, vt1, vt2, vt0 WHERE ((((((CAST(vt1.c0 AS BLOB)))<(((NOT (-3.88347863E8)))))) ISNULL)) GROUP BY vt1.c0, vt2.c0, vt0.c0;
SELECT ALL vt1.c0, vt2.c0, vt0.c0 FROM v0, vt1, vt2, vt0 GROUP BY vt1.c0, vt2.c0, vt0.c0;
SELECT v0.c0 FROM vt2, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt2, v0 GROUP BY v0.c0 HAVING NULL UNION ALL SELECT ALL v0.c0 FROM vt2, v0 GROUP BY v0.c0 HAVING (NOT (NULL)) UNION ALL SELECT ALL v0.c0 FROM vt2, v0 GROUP BY v0.c0 HAVING ((NULL) ISNULL);
SELECT v0.c0 FROM vt2, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt2, v0 GROUP BY v0.c0 HAVING NULL UNION ALL SELECT ALL v0.c0 FROM vt2, v0 GROUP BY v0.c0 HAVING (NOT (NULL)) UNION ALL SELECT ALL v0.c0 FROM vt2, v0 GROUP BY v0.c0 HAVING ((NULL) ISNULL);
SELECT v0.c0 FROM vt2, v0 GROUP BY v0.c0;
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) ISNULL))-(0x62a50ee6))) UNION ALL SELECT * FROM vt1 WHERE ((NOT (((((vt1.c0) ISNULL))-(0X62a50ee6))))) UNION ALL SELECT * FROM vt1 WHERE (((((((vt1.c0) ISNULL))-(0X62a50ee6))) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT vt2.c0 FROM vt2;
SELECT DISTINCT vt2.c0 FROM vt2 WHERE (((CAST(vt2.c0 AS BLOB)) BETWEEN (NULL) AND ((- (vt2.c0))))) UNION SELECT DISTINCT vt2.c0 FROM vt2 WHERE ((NOT (((CAST(vt2.c0 AS BLOB)) BETWEEN (NULL) AND ((- (vt2.c0))))))) UNION SELECT DISTINCT vt2.c0 FROM vt2 WHERE (((((CAST(vt2.c0 AS BLOB)) BETWEEN (NULL) AND ((- (vt2.c0))))) ISNULL));
SELECT DISTINCT vt2.c0 FROM vt2;
SELECT vt2.c0, vt0.c0 FROM vt0 NATURAL JOIN vt2 GROUP BY vt2.c0, vt0.c0;
SELECT vt2.c0, vt0.c0 FROM vt0 NATURAL JOIN vt2 WHERE (vt2.c0) GROUP BY vt2.c0, vt0.c0 UNION SELECT vt2.c0, vt0.c0 FROM vt0 NATURAL JOIN vt2 WHERE ((NOT (vt2.c0))) GROUP BY vt2.c0, vt0.c0 UNION SELECT ALL vt2.c0, vt0.c0 FROM vt0 NATURAL JOIN vt2 WHERE (((vt2.c0) ISNULL)) GROUP BY vt2.c0, vt0.c0;
SELECT vt2.c0, vt0.c0 FROM vt0 NATURAL JOIN vt2 GROUP BY vt2.c0, vt0.c0;
SELECT vt1.c0, vt2.c0, v0.c0 FROM vt2, v0, vt1 RIGHT OUTER JOIN vt0 ON vt0.c0 GROUP BY vt1.c0, vt2.c0, v0.c0;
SELECT vt1.c0, vt2.c0, v0.c0 FROM vt2, v0, vt1 RIGHT OUTER JOIN vt0 ON vt0.c0 GROUP BY vt1.c0, vt2.c0, v0.c0 HAVING COUNT(MIN(TOTAL(vt1.c0)) COLLATE NOCASE) UNION ALL SELECT ALL vt1.c0, vt2.c0, v0.c0 FROM vt2, v0, vt1 RIGHT OUTER JOIN vt0 ON vt0.c0 GROUP BY vt1.c0, vt2.c0, v0.c0 HAVING (NOT (COUNT(MIN(TOTAL(vt1.c0)) COLLATE NOCASE))) UNION ALL SELECT vt1.c0, vt2.c0, v0.c0 FROM vt2, v0, vt1 RIGHT OUTER JOIN vt0 ON vt0.c0 GROUP BY vt1.c0, vt2.c0, v0.c0 HAVING ((COUNT(MIN(TOTAL(vt1.c0)) COLLATE NOCASE)) ISNULL);
SELECT ALL vt1.c0, vt0.c0, vt2.c0 FROM vt0, vt1, vt2;
SELECT ALL vt1.c0, vt0.c0, vt2.c0 FROM vt0, vt1, vt2 WHERE ((((NOT (vt1.c0))) NOT BETWEEN ((vt1.c0 IN (vt0.c0, vt1.c0))) AND (((((vt1.c0)AND(vt0.c0)))OR(vt2.c0))))) UNION ALL SELECT vt1.c0, vt0.c0, vt2.c0 FROM vt0, vt1, vt2 WHERE ((NOT ((((NOT (vt1.c0))) NOT BETWEEN ((vt1.c0 IN (vt0.c0, vt1.c0))) AND (((((vt1.c0)AND(vt0.c0)))OR(vt2.c0))))))) UNION ALL SELECT vt1.c0, vt0.c0, vt2.c0 FROM vt0, vt1, vt2 WHERE ((((((NOT (vt1.c0))) NOT BETWEEN ((vt1.c0 IN (vt0.c0, vt1.c0))) AND (((((vt1.c0)AND(vt0.c0)))OR(vt2.c0))))) ISNULL));
SELECT ALL vt1.c0, vt0.c0, vt2.c0 FROM vt0, vt1, vt2;
SELECT DISTINCT v0.c0, vt0.c0, vt1.c0 FROM vt1, v0, vt0;
SELECT DISTINCT v0.c0, vt0.c0, vt1.c0 FROM vt1, v0, vt0 WHERE ((((((((vt0.c0, vt0.c0, vt1.c0)) BETWEEN ((vt0.c0, vt1.c0, 2074705975)) AND ((vt0.c0, v0.c0, vt1.c0))))OR(vt1.c0)))OR(0Xffffffffaef3ee25 COLLATE BINARY))) UNION SELECT DISTINCT v0.c0, vt0.c0, vt1.c0 FROM vt1, v0, vt0 WHERE ((NOT ((((((((vt0.c0, vt0.c0, vt1.c0)) BETWEEN ((vt0.c0, vt1.c0, 2074705975)) AND ((vt0.c0, v0.c0, vt1.c0))))OR(vt1.c0)))OR(0xffffffffaef3ee25 COLLATE BINARY))))) UNION SELECT DISTINCT v0.c0, vt0.c0, vt1.c0 FROM vt1, v0, vt0 WHERE ((((((((((vt0.c0, vt0.c0, vt1.c0)) BETWEEN ((vt0.c0, vt1.c0, 2074705975)) AND ((vt0.c0, v0.c0, vt1.c0))))OR(vt1.c0)))OR(0Xffffffffaef3ee25 COLLATE BINARY))) ISNULL));
SELECT DISTINCT v0.c0, vt0.c0, vt1.c0 FROM vt1, v0, vt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((vt1.c0 COLLATE BINARY)LIKE(CAST(vt1.c0 AS TEXT)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0 COLLATE BINARY)LIKE(CAST(vt1.c0 AS TEXT)))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((vt1.c0 COLLATE BINARY)LIKE(CAST(vt1.c0 AS TEXT)))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0, v0.c0 FROM v0 NATURAL JOIN vt1 GROUP BY vt1.c0, v0.c0;
SELECT vt1.c0, v0.c0 FROM v0 NATURAL JOIN vt1 GROUP BY vt1.c0, v0.c0 HAVING ((((MAX(vt1.c0))&(vt1.c0)))==(((MAX(vt1.c0)) ISNULL))) UNION ALL SELECT vt1.c0, v0.c0 FROM v0 NATURAL JOIN vt1 GROUP BY vt1.c0, v0.c0 HAVING (NOT (((((MAX(vt1.c0))&(vt1.c0)))=(((MAX(vt1.c0)) ISNULL))))) UNION ALL SELECT ALL vt1.c0, v0.c0 FROM v0 NATURAL JOIN vt1 GROUP BY vt1.c0, v0.c0 HAVING ((((((MAX(vt1.c0))&(vt1.c0)))=(((MAX(vt1.c0)) ISNULL)))) ISNULL);
SELECT ALL vt1.c0, v0.c0 FROM v0 NATURAL JOIN vt1 GROUP BY vt1.c0, v0.c0;
SELECT vt1.c0, v0.c0 FROM v0 NATURAL JOIN vt1 GROUP BY vt1.c0, v0.c0 HAVING ((((MAX(vt1.c0))&(vt1.c0)))==(((MAX(vt1.c0)) ISNULL))) UNION ALL SELECT vt1.c0, v0.c0 FROM v0 NATURAL JOIN vt1 GROUP BY vt1.c0, v0.c0 HAVING (NOT (((((MAX(vt1.c0))&(vt1.c0)))=(((MAX(vt1.c0)) ISNULL))))) UNION ALL SELECT ALL vt1.c0, v0.c0 FROM v0 NATURAL JOIN vt1 GROUP BY vt1.c0, v0.c0 HAVING ((((((MAX(vt1.c0))&(vt1.c0)))=(((MAX(vt1.c0)) ISNULL)))) ISNULL);
SELECT ALL vt1.c0, v0.c0 FROM v0 NATURAL JOIN vt1 GROUP BY vt1.c0, v0.c0;
SELECT MIN(((CASE WHEN vt1.c0 THEN vt2.c0 END)*(((vt2.c0)||(vt1.c0))))) FROM vt1, vt2 ORDER BY CAST(((vt1.c0) BETWEEN (vt2.c0) AND (vt2.c0)) AS TEXT) ASC  NULLS LAST;
SELECT ALL vt2.c0 FROM vt2;
SELECT vt2.c0 FROM vt2 WHERE (((((((((vt2.c0)OR(((vt2.c0)<(vt2.c0)))))AND((+ (vt2.c0)))))AND(((((vt2.c0)AND(vt2.c0)))AND(vt2.c0)))))OR(CAST(vt2.c0 AS TEXT)))) UNION ALL SELECT vt2.c0 FROM vt2 WHERE ((NOT (((((((((vt2.c0)OR(((vt2.c0)<(vt2.c0)))))AND((+ (vt2.c0)))))AND(((((vt2.c0)AND(vt2.c0)))AND(vt2.c0)))))OR(CAST(vt2.c0 AS TEXT)))))) UNION ALL SELECT ALL vt2.c0 FROM vt2 WHERE (((((((((((vt2.c0)OR(((vt2.c0)<(vt2.c0)))))AND((+ (vt2.c0)))))AND(((((vt2.c0)AND(vt2.c0)))AND(vt2.c0)))))OR(CAST(vt2.c0 AS TEXT)))) ISNULL));
SELECT ALL vt2.c0 FROM vt2;
SELECT DISTINCT * FROM vt1, vt2 LEFT OUTER JOIN v0 ON (((vt0.c0 IN ())) NOT BETWEEN (((v0.c0) NOT BETWEEN (vt1.c0) AND (NULL))) AND ((((vt1.c0, vt0.c0, v0.c0))<=((v0.c0, v0.c0, vt1.c0))))) FULL OUTER JOIN vt0 ON (((vt2.c0) ISNULL) IN ());
SELECT vt1.c0 FROM v0, vt1 NOT INDEXED GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM v0, vt1 WHERE (v0.c0) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM v0, vt1 WHERE ((NOT (v0.c0))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM v0, vt1 WHERE (((v0.c0) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM v0, vt1 NOT INDEXED GROUP BY vt1.c0;
SELECT vt2.c0, v0.c0, vt0.c0 FROM vt1, vt0, vt2 FULL OUTER JOIN v0 ON vt1.c0 GROUP BY vt2.c0, v0.c0, vt0.c0;
SELECT vt2.c0, v0.c0, vt0.c0 FROM vt1, vt0, vt2 FULL OUTER JOIN v0 ON vt1.c0 GROUP BY vt2.c0, v0.c0, vt0.c0 HAVING 'hR' UNION ALL SELECT vt2.c0, v0.c0, vt0.c0 FROM vt1, vt0, vt2 FULL OUTER JOIN v0 ON vt1.c0 GROUP BY vt2.c0, v0.c0, vt0.c0 HAVING (NOT ('hR')) UNION ALL SELECT vt2.c0, v0.c0, vt0.c0 FROM vt1, vt0, vt2 FULL OUTER JOIN v0 ON vt1.c0 GROUP BY vt2.c0, v0.c0, vt0.c0 HAVING (('hR') ISNULL);
SELECT vt2.c0, v0.c0, vt0.c0 FROM vt1, vt0, vt2 FULL OUTER JOIN v0 ON vt1.c0 GROUP BY vt2.c0, v0.c0, vt0.c0;
SELECT vt2.c0, v0.c0, vt0.c0 FROM vt1, vt0, vt2 FULL OUTER JOIN v0 ON vt1.c0 GROUP BY vt2.c0, v0.c0, vt0.c0 HAVING 'hR' UNION ALL SELECT vt2.c0, v0.c0, vt0.c0 FROM vt1, vt0, vt2 FULL OUTER JOIN v0 ON vt1.c0 GROUP BY vt2.c0, v0.c0, vt0.c0 HAVING (NOT ('hR')) UNION ALL SELECT vt2.c0, v0.c0, vt0.c0 FROM vt1, vt0, vt2 FULL OUTER JOIN v0 ON vt1.c0 GROUP BY vt2.c0, v0.c0, vt0.c0 HAVING (('hR') ISNULL);
SELECT vt2.c0, v0.c0, vt0.c0 FROM vt1, vt0, vt2 FULL OUTER JOIN v0 ON vt1.c0 GROUP BY vt2.c0, v0.c0, vt0.c0;
SELECT MIN('') FROM v0, vt1;
SELECT * FROM vt1, vt2 LEFT OUTER JOIN v0 ON ((((((((vt2.c0)AND(vt1.c0)))OR(vt1.c0)))OR(TRIM(DISTINCT vt2.c0))))AND(((v0.c0)OR(x'77ab'))));
SELECT * FROM vt1, vt2 LEFT OUTER JOIN v0 ON ((((((((vt2.c0)AND(vt1.c0)))OR(vt1.c0)))OR(TRIM(DISTINCT vt2.c0))))AND(((v0.c0)OR(x'77ab')))) WHERE ((~ (((vt2.c0) NOT BETWEEN (vt1.c0) AND (v0.c0))))) UNION ALL SELECT * FROM vt1, vt2 LEFT OUTER JOIN v0 ON ((((((((vt2.c0)AND(vt1.c0)))OR(vt1.c0)))OR(TRIM(DISTINCT vt2.c0))))AND(((v0.c0)OR(x'77ab')))) WHERE ((NOT ((~ (((vt2.c0) NOT BETWEEN (vt1.c0) AND (v0.c0))))))) UNION ALL SELECT * FROM vt1, vt2 LEFT OUTER JOIN v0 ON ((((((((vt2.c0)AND(vt1.c0)))OR(vt1.c0)))OR(TRIM(DISTINCT vt2.c0))))AND(((v0.c0)OR(x'77ab')))) WHERE ((((~ (((vt2.c0) NOT BETWEEN (vt1.c0) AND (v0.c0))))) ISNULL));
SELECT * FROM vt1, vt2 LEFT OUTER JOIN v0 ON ((((((((vt2.c0)AND(vt1.c0)))OR(vt1.c0)))OR(TRIM(DISTINCT vt2.c0))))AND(((v0.c0)OR(x'77ab'))));
SELECT DISTINCT * FROM vt1, vt2;
SELECT DISTINCT * FROM vt1, vt2 WHERE ((((CAST(vt1.c0 AS INTEGER)))<>(((~ (vt1.c0)))))) UNION SELECT DISTINCT * FROM vt1, vt2 WHERE ((NOT ((((CAST(vt1.c0 AS INTEGER)))<>(((~ (vt1.c0)))))))) UNION SELECT DISTINCT * FROM vt1, vt2 WHERE ((((((CAST(vt1.c0 AS INTEGER)))!=(((~ (vt1.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt1, vt2;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 WHERE ((((vt0.c0) ISNULL) IN ())) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt0, v0 WHERE ((NOT ((((vt0.c0) ISNULL) IN ())))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt0, v0 WHERE ((((((vt0.c0) ISNULL) IN ())) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON UPPER(DISTINCT NULL COLLATE NOCASE) GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON UPPER(DISTINCT NULL COLLATE NOCASE) GROUP BY vt0.c0, vt1.c0 HAVING MAX(COUNT(MIN(vt1.c0))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON UPPER(DISTINCT NULL COLLATE NOCASE) GROUP BY vt0.c0, vt1.c0 HAVING (NOT (MAX(COUNT(MIN(vt1.c0))))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON UPPER(DISTINCT NULL COLLATE NOCASE) GROUP BY vt0.c0, vt1.c0 HAVING ((MAX(COUNT(MIN(vt1.c0)))) ISNULL);
SELECT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (UNLIKELY(DISTINCT CASE vt1.c0  WHEN vt1.c0 THEN 'Q' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) UNION ALL SELECT ALL vt1.c0 FROM vt1 NOT INDEXED WHERE ((NOT (UNLIKELY(DISTINCT CASE vt1.c0  WHEN vt1.c0 THEN 'Q' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((UNLIKELY(DISTINCT CASE vt1.c0  WHEN vt1.c0 THEN 'Q' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT vt2.c0 FROM vt2, vt1;
SELECT DISTINCT vt2.c0 FROM vt2, vt1 WHERE ((+ ('X}'))) UNION SELECT DISTINCT vt2.c0 FROM vt2, vt1 WHERE ((NOT ((+ ('X}'))))) UNION SELECT DISTINCT vt2.c0 FROM vt2, vt1 WHERE ((((+ ('X}'))) ISNULL));
SELECT DISTINCT vt2.c0 FROM vt2, vt1;
SELECT ALL v0.c0, vt2.c0 FROM vt0, vt2, v0 GROUP BY v0.c0, vt2.c0;
SELECT v0.c0, vt2.c0 FROM vt0, vt2, v0 WHERE ((((~ (vt2.c0)))=(((v0.c0)!=(vt0.c0))))) GROUP BY v0.c0, vt2.c0 UNION SELECT ALL v0.c0, vt2.c0 FROM vt0, vt2, v0 WHERE ((NOT ((((~ (vt2.c0)))=(((v0.c0)!=(vt0.c0))))))) GROUP BY v0.c0, vt2.c0 UNION SELECT v0.c0, vt2.c0 FROM vt0, vt2, v0 WHERE ((((((~ (vt2.c0)))=(((v0.c0)!=(vt0.c0))))) ISNULL)) GROUP BY v0.c0, vt2.c0;
SELECT ALL v0.c0, vt2.c0 FROM vt0, vt2, v0 GROUP BY v0.c0, vt2.c0;
SELECT vt1.c0, vt0.c0, vt2.c0, v0.c0 FROM v0 LEFT OUTER JOIN vt2 ON CASE WHEN '_' THEN CAST(vt0.c0 AS REAL) END INNER JOIN vt0 ON x'' CROSS JOIN vt1 ON (~ (CAST(v0.c0 AS NUMERIC))) GROUP BY vt1.c0, vt0.c0, vt2.c0, v0.c0;
SELECT vt0.c0, vt2.c0 FROM vt2, vt0;
SELECT ALL vt0.c0, vt2.c0 FROM vt2, vt0 WHERE (CAST(((((vt2.c0)AND(vt0.c0)))AND(vt2.c0)) AS TEXT)) UNION ALL SELECT ALL vt0.c0, vt2.c0 FROM vt2, vt0 WHERE ((NOT (CAST(((((vt2.c0)AND(vt0.c0)))AND(vt2.c0)) AS TEXT)))) UNION ALL SELECT ALL vt0.c0, vt2.c0 FROM vt2, vt0 WHERE (((CAST(((((vt2.c0)AND(vt0.c0)))AND(vt2.c0)) AS TEXT)) ISNULL));
SELECT vt0.c0, vt2.c0 FROM vt2, vt0;
SELECT DISTINCT vt1.c0 FROM vt1, vt0;
SELECT DISTINCT vt1.c0 FROM vt1, vt0 WHERE (((CAST(vt1.c0 AS BLOB))AND((vt0.c0 IN (vt1.c0))))) UNION SELECT DISTINCT vt1.c0 FROM vt1, vt0 WHERE ((NOT (((CAST(vt1.c0 AS BLOB))AND((vt0.c0 IN (vt1.c0))))))) UNION SELECT DISTINCT vt1.c0 FROM vt1, vt0 WHERE (((((CAST(vt1.c0 AS BLOB))AND((vt0.c0 IN (vt1.c0))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1, vt0;
SELECT ALL vt0.c0, vt1.c0, v0.c0 FROM v0, vt0, vt2, vt1 GROUP BY vt0.c0, vt1.c0, v0.c0;
SELECT ALL vt0.c0, vt1.c0, v0.c0 FROM v0, vt0, vt2, vt1 WHERE ((((v0.c0 IN (vt1.c0, vt1.c0)))GLOB(CASE WHEN vt0.c0 THEN vt2.c0 WHEN vt0.c0 THEN vt2.c0 WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt0.c0 WHEN vt1.c0 THEN 0.02836431649592408 ELSE vt2.c0 END))) GROUP BY vt0.c0, vt1.c0, v0.c0 UNION SELECT vt0.c0, vt1.c0, v0.c0 FROM v0, vt0, vt2, vt1 WHERE ((NOT ((((v0.c0 IN (vt1.c0, vt1.c0)))GLOB(CASE WHEN vt0.c0 THEN vt2.c0 WHEN vt0.c0 THEN vt2.c0 WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt0.c0 WHEN vt1.c0 THEN 0.02836431649592408 ELSE vt2.c0 END))))) GROUP BY vt0.c0, vt1.c0, v0.c0 UNION SELECT vt0.c0, vt1.c0, v0.c0 FROM v0, vt0, vt2, vt1 WHERE ((((((v0.c0 IN (vt1.c0, vt1.c0)))GLOB(CASE WHEN vt0.c0 THEN vt2.c0 WHEN vt0.c0 THEN vt2.c0 WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt0.c0 WHEN vt1.c0 THEN 0.02836431649592408 ELSE vt2.c0 END))) ISNULL)) GROUP BY vt0.c0, vt1.c0, v0.c0;
SELECT ALL vt0.c0, vt1.c0, v0.c0 FROM v0, vt0, vt2, vt1 GROUP BY vt0.c0, vt1.c0, v0.c0;
SELECT vt2.c0, vt1.c0, v0.c0, vt0.c0 FROM v0, vt0, vt2, vt1 GROUP BY vt2.c0, vt1.c0, v0.c0, vt0.c0;
SELECT ALL vt2.c0, vt1.c0, v0.c0, vt0.c0 FROM v0, vt0 NOT INDEXED, vt2, vt1 GROUP BY vt2.c0, vt1.c0, v0.c0, vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt2.c0, vt1.c0, v0.c0, vt0.c0 FROM v0, vt0, vt2, vt1 GROUP BY vt2.c0, vt1.c0, v0.c0, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt2.c0, vt1.c0, v0.c0, vt0.c0 FROM v0, vt0, vt2, vt1 GROUP BY vt2.c0, vt1.c0, v0.c0, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt2.c0, vt1.c0, v0.c0, vt0.c0 FROM v0, vt0, vt2, vt1 GROUP BY vt2.c0, vt1.c0, v0.c0, vt0.c0;
SELECT ALL vt2.c0, vt1.c0, v0.c0, vt0.c0 FROM v0, vt0 NOT INDEXED, vt2, vt1 GROUP BY vt2.c0, vt1.c0, v0.c0, vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt2.c0, vt1.c0, v0.c0, vt0.c0 FROM v0, vt0, vt2, vt1 GROUP BY vt2.c0, vt1.c0, v0.c0, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt2.c0, vt1.c0, v0.c0, vt0.c0 FROM v0, vt0, vt2, vt1 GROUP BY vt2.c0, vt1.c0, v0.c0, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt2.c0, vt1.c0, v0.c0, vt0.c0 FROM v0, vt0, vt2, vt1 GROUP BY vt2.c0, vt1.c0, v0.c0, vt0.c0;
SELECT ALL * FROM v0 FULL OUTER JOIN vt1 ON (NOT (((vt1.c0) ISNULL))) RIGHT OUTER JOIN vt0 ON ((0.22341981898816232) BETWEEN (UPPER('傑dk')) AND (v0.c0 COLLATE RTRIM));
SELECT ALL * FROM v0 FULL OUTER JOIN vt1 ON (NOT (((vt1.c0) ISNULL))) RIGHT OUTER JOIN vt0 ON ((0.22341981898816232) BETWEEN (UPPER('傑dk')) AND (v0.c0 COLLATE RTRIM)) WHERE (CAST(CAST(vt1.c0 AS INTEGER) AS REAL)) UNION ALL SELECT ALL * FROM v0 FULL OUTER JOIN vt1 ON (NOT (((vt1.c0) ISNULL))) RIGHT OUTER JOIN vt0 ON ((0.22341981898816232) BETWEEN (UPPER('傑dk')) AND (v0.c0 COLLATE RTRIM)) WHERE ((NOT (CAST(CAST(vt1.c0 AS INTEGER) AS REAL)))) UNION ALL SELECT * FROM v0 FULL OUTER JOIN vt1 ON (NOT (((vt1.c0) ISNULL))) RIGHT OUTER JOIN vt0 ON ((0.22341981898816232) BETWEEN (UPPER('傑dk')) AND (v0.c0 COLLATE RTRIM)) WHERE (((CAST(CAST(vt1.c0 AS INTEGER) AS REAL)) ISNULL));
SELECT ALL * FROM v0 FULL OUTER JOIN vt1 ON (NOT (((vt1.c0) ISNULL))) RIGHT OUTER JOIN vt0 ON ((0.22341981898816232) BETWEEN (UPPER('傑dk')) AND (v0.c0 COLLATE RTRIM));
SELECT DISTINCT * FROM vt2, vt1;
SELECT DISTINCT * FROM vt2, vt1 WHERE ((- (LIKELY(DISTINCT vt2.c0)))) UNION SELECT DISTINCT * FROM vt2, vt1 WHERE ((NOT ((- (LIKELY(DISTINCT vt2.c0)))))) UNION SELECT DISTINCT * FROM vt2, vt1 NOT INDEXED WHERE ((((- (LIKELY(DISTINCT vt2.c0)))) ISNULL));
SELECT DISTINCT * FROM vt2, vt1;
SELECT v0.c0, vt1.c0 FROM v0, vt0 LEFT OUTER JOIN vt2 ON ((((((((((vt2.c0)+(vt2.c0)))OR('')))OR(CAST(vt2.c0 AS TEXT))))AND(((v0.c0)IS NOT(vt2.c0)))))OR((NOT (1425454652)))) RIGHT OUTER JOIN vt1 ON (((+ (v0.c0)))IS NOT(CAST(v0.c0 AS BLOB))) GROUP BY v0.c0, vt1.c0;
SELECT v0.c0, vt1.c0 FROM v0, vt0 LEFT OUTER JOIN vt2 ON ((((((((((vt2.c0)+(vt2.c0)))OR('')))OR(CAST(vt2.c0 AS TEXT))))AND(((v0.c0)IS NOT(vt2.c0)))))OR((NOT (1425454652)))) RIGHT OUTER JOIN vt1 ON (((+ (v0.c0)))IS NOT(CAST(v0.c0 AS BLOB))) WHERE (((((((((CAST(vt0.c0 AS NUMERIC))AND(0.03226151621042672)))OR((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))))))AND((vt1.c0 IN ()))))OR((vt0.c0 IN ())))) GROUP BY v0.c0, vt1.c0 UNION SELECT ALL v0.c0, vt1.c0 FROM v0, vt0 LEFT OUTER JOIN vt2 ON ((((((((((vt2.c0)+(vt2.c0)))OR('')))OR(CAST(vt2.c0 AS TEXT))))AND(((v0.c0)IS NOT(vt2.c0)))))OR((NOT (1425454652)))) RIGHT OUTER JOIN vt1 ON (((+ (v0.c0)))IS NOT(CAST(v0.c0 AS BLOB))) WHERE ((NOT (((((((((CAST(vt0.c0 AS NUMERIC))AND(0.03226151621042672)))OR((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))))))AND((vt1.c0 IN ()))))OR((vt0.c0 IN ())))))) GROUP BY v0.c0, vt1.c0 UNION SELECT v0.c0, vt1.c0 FROM v0, vt0 LEFT OUTER JOIN vt2 ON ((((((((((vt2.c0)+(vt2.c0)))OR('')))OR(CAST(vt2.c0 AS TEXT))))AND(((v0.c0)IS NOT(vt2.c0)))))OR((NOT (1425454652)))) RIGHT OUTER JOIN vt1 ON (((+ (v0.c0)))IS NOT(CAST(v0.c0 AS BLOB))) WHERE (((((((((((CAST(vt0.c0 AS NUMERIC))AND(0.03226151621042672)))OR((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))))))AND((vt1.c0 IN ()))))OR((vt0.c0 IN ())))) ISNULL)) GROUP BY v0.c0, vt1.c0;
SELECT v0.c0, vt1.c0 FROM v0, vt0 LEFT OUTER JOIN vt2 ON ((((((((((vt2.c0)+(vt2.c0)))OR('')))OR(CAST(vt2.c0 AS TEXT))))AND(((v0.c0)IS NOT(vt2.c0)))))OR((NOT (1425454652)))) RIGHT OUTER JOIN vt1 ON (((+ (v0.c0)))IS NOT(CAST(v0.c0 AS BLOB))) GROUP BY v0.c0, vt1.c0;
SELECT vt0.c0, vt2.c0, vt1.c0 FROM vt1, vt0, vt2 GROUP BY vt0.c0, vt2.c0, vt1.c0;
SELECT ALL vt0.c0, vt2.c0, vt1.c0 FROM vt1, vt0, vt2 GROUP BY vt0.c0, vt2.c0, vt1.c0 HAVING TOTAL(AVG(vt1.c0)) UNION ALL SELECT vt0.c0, vt2.c0, vt1.c0 FROM vt1, vt0, vt2 GROUP BY vt0.c0, vt2.c0, vt1.c0 HAVING (NOT (TOTAL(AVG(vt1.c0)))) UNION ALL SELECT ALL vt0.c0, vt2.c0, vt1.c0 FROM vt1, vt0, vt2 GROUP BY vt0.c0, vt2.c0, vt1.c0 HAVING ((TOTAL(AVG(vt1.c0))) ISNULL);
SELECT * FROM v0, vt1;
SELECT * FROM v0, vt1 WHERE (((((NULL) IS FALSE)) ISNULL)) UNION ALL SELECT * FROM v0, vt1 WHERE ((NOT (((((NULL) IS FALSE)) ISNULL)))) UNION ALL SELECT ALL * FROM v0, vt1 WHERE (((((((NULL) IS FALSE)) ISNULL)) ISNULL));
SELECT * FROM v0, vt1;
SELECT DISTINCT vt2.c0, v0.c0, vt0.c0 FROM vt2, vt0, v0;
SELECT DISTINCT vt2.c0, v0.c0, vt0.c0 FROM vt2, vt0, v0 WHERE ((LIKE(v0.c0, vt2.c0) IN ())) UNION SELECT DISTINCT vt2.c0, v0.c0, vt0.c0 FROM vt2, vt0, v0 WHERE ((NOT ((LIKE(v0.c0, vt2.c0) IN ())))) UNION SELECT DISTINCT vt2.c0, v0.c0, vt0.c0 FROM vt2, vt0, v0 WHERE ((((LIKE(v0.c0, vt2.c0) IN ())) ISNULL));
SELECT DISTINCT vt2.c0, v0.c0, vt0.c0 FROM vt2, vt0, v0;
SELECT ALL vt2.c0 FROM vt2, v0 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2, v0 NOT INDEXED WHERE (((((((v0.c0)AND(x'd350')))AND(v0.c0))) NOT BETWEEN (((vt2.c0)IS(vt2.c0))) AND (CAST(v0.c0 AS BLOB)))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2, v0 WHERE ((NOT (((((((v0.c0)AND(x'd350')))AND(v0.c0))) NOT BETWEEN (((vt2.c0)IS(vt2.c0))) AND (CAST(v0.c0 AS BLOB)))))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2, v0 WHERE (((((((((v0.c0)AND(x'd350')))AND(v0.c0))) NOT BETWEEN (((vt2.c0)IS(vt2.c0))) AND (CAST(v0.c0 AS BLOB)))) ISNULL)) GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2, v0 GROUP BY vt2.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(AVG(MIN(MAX(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(AVG(MIN(MAX(v0.c0)))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(AVG(MIN(MAX(v0.c0))))) ISNULL);
SELECT v0.c0 FROM v0, vt0, vt2;
SELECT ALL v0.c0 FROM v0, vt0, vt2 WHERE (x'') UNION ALL SELECT v0.c0 FROM v0, vt0, vt2 WHERE ((NOT (x''))) UNION ALL SELECT ALL v0.c0 FROM v0, vt0, vt2 WHERE (((x'') ISNULL));
SELECT v0.c0 FROM v0, vt0, vt2;
SELECT DISTINCT v0.c0, vt2.c0, vt0.c0, vt1.c0 FROM v0, vt2, vt1, vt0;
SELECT DISTINCT v0.c0, vt2.c0, vt0.c0, vt1.c0 FROM v0, vt2, vt1, vt0 WHERE (CASE NULL COLLATE NOCASE  WHEN CAST(vt2.c0 AS INTEGER) THEN v0.c0 ELSE ((vt2.c0)IS(vt0.c0)) END) UNION SELECT DISTINCT v0.c0, vt2.c0, vt0.c0, vt1.c0 FROM v0, vt2, vt1, vt0 WHERE ((NOT (CASE NULL COLLATE NOCASE  WHEN CAST(vt2.c0 AS INTEGER) THEN v0.c0 ELSE ((vt2.c0)IS(vt0.c0)) END))) UNION SELECT DISTINCT v0.c0, vt2.c0, vt0.c0, vt1.c0 FROM v0, vt2, vt1, vt0 WHERE (((CASE NULL COLLATE NOCASE  WHEN CAST(vt2.c0 AS INTEGER) THEN v0.c0 ELSE ((vt2.c0)IS(vt0.c0)) END) ISNULL));
SELECT DISTINCT v0.c0, vt2.c0, vt0.c0, vt1.c0 FROM v0, vt2, vt1, vt0;
SELECT vt0.c0, v0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON CASE WHEN ABS(vt0.c0) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (x'60a3')) ELSE LIKELIHOOD(v0.c0, 0.11839587721151135) END GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0 NOT INDEXED RIGHT OUTER JOIN v0 ON CASE WHEN ABS(vt0.c0) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (x'60a3')) ELSE LIKELIHOOD(v0.c0, 0.11839587721151135) END WHERE (((((0.23550224038493506)|(vt0.c0))) NOT BETWEEN (((vt0.c0)&(vt0.c0))) AND (((v0.c0)IS(vt0.c0))))) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON CASE WHEN ABS(vt0.c0) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (x'60a3')) ELSE LIKELIHOOD(v0.c0, 0.11839587721151135) END WHERE ((NOT (((((0.23550224038493506)|(vt0.c0))) NOT BETWEEN (((vt0.c0)&(vt0.c0))) AND (((v0.c0)IS(vt0.c0))))))) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON CASE WHEN ABS(vt0.c0) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (x'60a3')) ELSE LIKELIHOOD(v0.c0, 0.11839587721151135) END WHERE (((((((0.23550224038493506)|(vt0.c0))) NOT BETWEEN (((vt0.c0)&(vt0.c0))) AND (((v0.c0)IS(vt0.c0))))) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON CASE WHEN ABS(vt0.c0) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (x'60a3')) ELSE LIKELIHOOD(v0.c0, 0.11839587721151135) END GROUP BY vt0.c0, v0.c0;
SELECT ALL vt2.c0 FROM vt2 INNER JOIN vt1 ON (+ (((((vt1.c0)AND(vt2.c0)))AND(vt2.c0)))) FULL OUTER JOIN v0 ON ((- (v0.c0)) IN ()) GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 INNER JOIN vt1 ON (+ (((((vt1.c0)AND(vt2.c0)))AND(vt2.c0)))) FULL OUTER JOIN v0 ON ((- (v0.c0)) IN ()) GROUP BY vt2.c0 HAVING (- (TOTAL(SUM(v0.c0)))) UNION ALL SELECT vt2.c0 FROM vt2 NOT INDEXED INNER JOIN vt1 ON (+ (((((vt1.c0)AND(vt2.c0)))AND(vt2.c0)))) FULL OUTER JOIN v0 ON ((- (v0.c0)) IN ()) GROUP BY vt2.c0 HAVING (NOT ((- (TOTAL(SUM(v0.c0)))))) UNION ALL SELECT vt2.c0 FROM vt2 INNER JOIN vt1 ON (+ (((((vt1.c0)AND(vt2.c0)))AND(vt2.c0)))) FULL OUTER JOIN v0 ON ((- (v0.c0)) IN ()) GROUP BY vt2.c0 HAVING (((- (TOTAL(SUM(v0.c0))))) ISNULL);
SELECT ALL vt0.c0, vt1.c0, vt2.c0 FROM vt0, vt2, vt1;
SELECT ALL vt0.c0, vt1.c0, vt2.c0 FROM vt0, vt2, vt1 WHERE (((CAST(vt0.c0 AS BLOB))<=(((vt2.c0)<(vt1.c0))))) UNION ALL SELECT vt0.c0, vt1.c0, vt2.c0 FROM vt0, vt2, vt1 WHERE ((NOT (((CAST(vt0.c0 AS BLOB))<=(((vt2.c0)<(vt1.c0))))))) UNION ALL SELECT ALL vt0.c0, vt1.c0, vt2.c0 FROM vt0, vt2, vt1 WHERE (((((CAST(vt0.c0 AS BLOB))<=(((vt2.c0)<(vt1.c0))))) ISNULL));
SELECT ALL vt0.c0, vt1.c0, vt2.c0 FROM vt0, vt2, vt1;
SELECT DISTINCT * FROM vt0 NATURAL JOIN v0;
SELECT DISTINCT * FROM vt0 NATURAL JOIN v0 WHERE (((((((((((((((vt0.c0)AND(0.27300286198703805)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(v0.c0)))OR('')))<>(((v0.c0)+(v0.c0))))) UNION SELECT DISTINCT * FROM vt0 NATURAL JOIN v0 WHERE ((NOT (((((((((((((((vt0.c0)AND(0.27300286198703805)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(v0.c0)))OR('')))!=(((v0.c0)+(v0.c0))))))) UNION SELECT DISTINCT * FROM vt0 NATURAL JOIN v0 WHERE (((((((((((((((((vt0.c0)AND(0.27300286198703805)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(v0.c0)))OR('')))<>(((v0.c0)+(v0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0 NATURAL JOIN v0;
SELECT ALL vt1.c0 FROM vt0, vt1, v0, vt2 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, vt1, v0, vt2 WHERE (vt2.c0) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt0, vt1, v0, vt2 WHERE ((NOT (vt2.c0))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt0, vt1, v0, vt2 WHERE (((vt2.c0) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0, vt1, v0, vt2 GROUP BY vt1.c0;
SELECT ALL vt2.c0, vt1.c0 FROM vt0, vt2, vt1 GROUP BY vt2.c0, vt1.c0;
SELECT ALL vt2.c0, vt1.c0 FROM vt0, vt2, vt1 GROUP BY vt2.c0, vt1.c0 HAVING vt2.c0 UNION ALL SELECT ALL vt2.c0, vt1.c0 FROM vt0, vt2, vt1 GROUP BY vt2.c0, vt1.c0 HAVING (NOT (vt2.c0)) UNION ALL SELECT vt2.c0, vt1.c0 FROM vt0, vt2, vt1 GROUP BY vt2.c0, vt1.c0 HAVING ((vt2.c0) ISNULL);
SELECT ALL vt2.c0, vt1.c0 FROM vt0, vt2, vt1 GROUP BY vt2.c0, vt1.c0;
SELECT ALL vt2.c0, vt1.c0 FROM vt0, vt2, vt1 GROUP BY vt2.c0, vt1.c0 HAVING vt2.c0 UNION ALL SELECT ALL vt2.c0, vt1.c0 FROM vt0, vt2, vt1 GROUP BY vt2.c0, vt1.c0 HAVING (NOT (vt2.c0)) UNION ALL SELECT vt2.c0, vt1.c0 FROM vt0, vt2, vt1 GROUP BY vt2.c0, vt1.c0 HAVING ((vt2.c0) ISNULL);
SELECT ALL vt2.c0, vt1.c0 FROM vt0, vt2, vt1 GROUP BY vt2.c0, vt1.c0;
SELECT ALL * FROM v0, vt1;
SELECT * FROM v0, vt1 WHERE (vt1.c0) UNION ALL SELECT ALL * FROM v0, vt1 WHERE ((NOT (vt1.c0))) UNION ALL SELECT * FROM v0, vt1 WHERE (((vt1.c0) ISNULL));
SELECT ALL * FROM v0, vt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (UNLIKELY((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((NULL))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (UNLIKELY((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((NULL))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((UNLIKELY((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((NULL))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 NOT INDEXED WHERE (((vt2.c0)IS NOT(vt2.c0)) COLLATE NOCASE) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2 WHERE ((NOT (((vt2.c0)IS NOT(vt2.c0)) COLLATE NOCASE))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE (((((vt2.c0)IS NOT(vt2.c0)) COLLATE NOCASE) ISNULL)) GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt0.c0, vt2.c0 FROM vt2 CROSS JOIN vt0 ON ((('-256245808', 0.31969490011278334, v0.c0)) NOT BETWEEN ((((((((((vt0.c0)AND(v0.c0)))AND(v0.c0)))OR(vt0.c0)))OR(vt0.c0)), (- (vt2.c0)), (+ (v0.c0)))) AND ((((v0.c0)GLOB(vt0.c0)), (((v0.c0)) BETWEEN (('0.5581369480521426')) AND ((vt2.c0))), vt0.c0 COLLATE NOCASE))) FULL OUTER JOIN v0 ON ((((((((((x'') NOT BETWEEN (vt2.c0) AND (vt0.c0)))AND('')))AND(((vt0.c0)IS NOT(v0.c0)))))OR(((vt2.c0)==(vt2.c0)))))OR(v0.c0)) GROUP BY vt0.c0, vt2.c0;
SELECT * FROM vt1, v0, vt2 NATURAL JOIN vt0;
SELECT * FROM vt1, v0, vt2 NATURAL JOIN vt0 WHERE ((((vt0.c0 IN ())) NOT BETWEEN (((v0.c0) BETWEEN (vt0.c0) AND (vt1.c0))) AND (-1422156924))) UNION ALL SELECT ALL * FROM vt1, v0, vt2 NATURAL JOIN vt0 WHERE ((NOT ((((vt0.c0 IN ())) NOT BETWEEN (((v0.c0) BETWEEN (vt0.c0) AND (vt1.c0))) AND (-1422156924))))) UNION ALL SELECT ALL * FROM vt1, v0, vt2 NATURAL JOIN vt0 WHERE ((((((vt0.c0 IN ())) NOT BETWEEN (((v0.c0) BETWEEN (vt0.c0) AND (vt1.c0))) AND (-1422156924))) ISNULL));
SELECT * FROM vt1, v0, vt2 NATURAL JOIN vt0;
SELECT DISTINCT * FROM vt0, vt2, vt1, v0;
SELECT DISTINCT * FROM vt0, vt2, vt1, v0 WHERE ((((((((v0.c0)AND(vt1.c0)))OR(v0.c0)), LIKELY(DISTINCT vt2.c0), (+ (0.25947453119927444))))>((v0.c0 COLLATE RTRIM, v0.c0 COLLATE BINARY, ((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0, vt2, vt1, v0 WHERE ((NOT ((((((((v0.c0)AND(vt1.c0)))OR(v0.c0)), LIKELY(DISTINCT vt2.c0), (+ (0.25947453119927444))))>((v0.c0 COLLATE RTRIM, v0.c0 COLLATE BINARY, ((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)))))))) UNION SELECT DISTINCT * FROM vt0, vt2, vt1, v0 WHERE ((((((((((v0.c0)AND(vt1.c0)))OR(v0.c0)), LIKELY(DISTINCT vt2.c0), (+ (0.25947453119927444))))>((v0.c0 COLLATE RTRIM, v0.c0 COLLATE BINARY, ((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt0, vt2, vt1, v0;
SELECT vt2.c0 FROM vt2, v0 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2, v0 WHERE (vt2.c0) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2, v0 WHERE ((NOT (vt2.c0))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2, v0 WHERE (((vt2.c0) ISNULL)) GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2, v0 GROUP BY vt2.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((((((COUNT(*))OR(CAST(v0.c0 AS NUMERIC))))AND((MIN(v0.c0) IN ()))))OR(TOTAL(v0.c0))))AND(MAX(v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((((((((COUNT(*))OR(CAST(v0.c0 AS NUMERIC))))AND((MIN(v0.c0) IN ()))))OR(TOTAL(v0.c0))))AND(MAX(v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((((((((COUNT(*))OR(CAST(v0.c0 AS NUMERIC))))AND((MIN(v0.c0) IN ()))))OR(TOTAL(v0.c0))))AND(MAX(v0.c0)))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((((((COUNT(*))OR(CAST(v0.c0 AS NUMERIC))))AND((MIN(v0.c0) IN ()))))OR(TOTAL(v0.c0))))AND(MAX(v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((((((((COUNT(*))OR(CAST(v0.c0 AS NUMERIC))))AND((MIN(v0.c0) IN ()))))OR(TOTAL(v0.c0))))AND(MAX(v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((((((((COUNT(*))OR(CAST(v0.c0 AS NUMERIC))))AND((MIN(v0.c0) IN ()))))OR(TOTAL(v0.c0))))AND(MAX(v0.c0)))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT * FROM vt0, vt1;
SELECT * FROM vt0, vt1 WHERE ((((0Xffffffffb529a97e))<>((0.19249174452268936)))) UNION ALL SELECT * FROM vt0, vt1 WHERE ((NOT ((((0xffffffffb529a97e))<>((0.19249174452268936)))))) UNION ALL SELECT * FROM vt0, vt1 WHERE ((((((0xffffffffb529a97e))!=((0.19249174452268936)))) ISNULL));
SELECT * FROM vt0, vt1;
SELECT DISTINCT v0.c0, vt0.c0, vt2.c0, vt1.c0 FROM vt2 INNER JOIN vt0 ON ((((((((vt0.c0)AND(vt0.c0)))AND(x'')))OR(CASE v0.c0  WHEN '{-294' THEN vt0.c0 WHEN vt2.c0 THEN vt1.c0 WHEN NULL THEN vt0.c0 WHEN vt2.c0 THEN v0.c0 WHEN '騤(k)' THEN vt2.c0 END)))OR(CAST(vt0.c0 AS TEXT))) FULL OUTER JOIN vt1 ON json_array_length((v0.c0 IN ())) INNER JOIN v0 ON '뙽b';
SELECT ALL vt1.c0, v0.c0 FROM vt2, vt1, vt0, v0 GROUP BY vt1.c0, v0.c0;
SELECT vt1.c0, v0.c0 FROM vt2, vt1, vt0, v0 WHERE ((~ (vt0.c0)) COLLATE RTRIM) GROUP BY vt1.c0, v0.c0 UNION SELECT vt1.c0, v0.c0 FROM vt2, vt1, vt0, v0 WHERE ((NOT ((~ (vt0.c0)) COLLATE RTRIM))) GROUP BY vt1.c0, v0.c0 UNION SELECT ALL vt1.c0, v0.c0 FROM vt2, vt1, vt0, v0 WHERE ((((~ (vt0.c0)) COLLATE RTRIM) ISNULL)) GROUP BY vt1.c0, v0.c0;
SELECT ALL vt1.c0, v0.c0 FROM vt2, vt1, vt0, v0 GROUP BY vt1.c0, v0.c0;
SELECT vt0.c0 FROM vt2, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt2, vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt2, vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt2, vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt2, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt2, vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt2, vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt2, vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt2, vt0 GROUP BY vt0.c0;
SELECT v0.c0, vt2.c0 FROM vt0, vt2, v0;
SELECT v0.c0, vt2.c0 FROM vt0, vt2, v0 WHERE (((vt0.c0) NOT NULL)) UNION ALL SELECT v0.c0, vt2.c0 FROM vt0, vt2, v0 WHERE ((NOT (((vt0.c0) NOT NULL)))) UNION ALL SELECT v0.c0, vt2.c0 FROM vt0, vt2, v0 WHERE (((((vt0.c0) NOT NULL)) ISNULL));
SELECT v0.c0, vt2.c0 FROM vt0, vt2, v0;
SELECT DISTINCT * FROM v0, vt2;
SELECT DISTINCT * FROM v0, vt2 WHERE (((((((((('bTEC*衏2&넛')AND(v0.c0)))AND(vt2.c0)))AND(v0.c0)))AND(vt2.c0)) IN ())) UNION SELECT DISTINCT * FROM v0, vt2 WHERE ((NOT (((((((((('bTEC*衏2&넛')AND(v0.c0)))AND(vt2.c0)))AND(v0.c0)))AND(vt2.c0)) IN ())))) UNION SELECT DISTINCT * FROM v0, vt2 WHERE (((((((((((('bTEC*衏2&넛')AND(v0.c0)))AND(vt2.c0)))AND(v0.c0)))AND(vt2.c0)) IN ())) ISNULL));
SELECT DISTINCT * FROM v0, vt2;
SELECT vt0.c0, vt1.c0 FROM v0, vt1 LEFT OUTER JOIN vt0 ON (((UNLIKELY(DISTINCT vt0.c0), ((v0.c0)IS(v0.c0)), CASE WHEN vt1.c0 THEN vt0.c0 END, (NOT (vt1.c0)), CAST(vt1.c0 AS BLOB)))<>((((x'')>>(vt1.c0)), v0.c0, NULL, NULL COLLATE BINARY, v0.c0 COLLATE BINARY))) GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM v0, vt1 LEFT OUTER JOIN vt0 ON (((UNLIKELY(DISTINCT vt0.c0), ((v0.c0)IS(v0.c0)), CASE WHEN vt1.c0 THEN vt0.c0 END, (NOT (vt1.c0)), CAST(vt1.c0 AS BLOB)))<>((((x'')>>(vt1.c0)), v0.c0, NULL, NULL COLLATE BINARY, v0.c0 COLLATE BINARY))) WHERE (((v0.c0 COLLATE NOCASE) BETWEEN (((vt1.c0) BETWEEN (v0.c0) AND (vt1.c0))) AND (((((v0.c0)OR(v0.c0)))OR(vt0.c0))))) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM v0, vt1 LEFT OUTER JOIN vt0 ON (((UNLIKELY(DISTINCT vt0.c0), ((v0.c0)IS(v0.c0)), CASE WHEN vt1.c0 THEN vt0.c0 END, (NOT (vt1.c0)), CAST(vt1.c0 AS BLOB)))<>((((x'')>>(vt1.c0)), v0.c0, NULL, NULL COLLATE BINARY, v0.c0 COLLATE BINARY))) WHERE ((NOT (((v0.c0 COLLATE NOCASE) BETWEEN (((vt1.c0) BETWEEN (v0.c0) AND (vt1.c0))) AND (((((v0.c0)OR(v0.c0)))OR(vt0.c0))))))) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM v0, vt1 LEFT OUTER JOIN vt0 ON (((UNLIKELY(DISTINCT vt0.c0), ((v0.c0)IS(v0.c0)), CASE WHEN vt1.c0 THEN vt0.c0 END, (NOT (vt1.c0)), CAST(vt1.c0 AS BLOB)))<>((((x'')>>(vt1.c0)), v0.c0, NULL, NULL COLLATE BINARY, v0.c0 COLLATE BINARY))) WHERE (((((v0.c0 COLLATE NOCASE) BETWEEN (((vt1.c0) BETWEEN (v0.c0) AND (vt1.c0))) AND (((((v0.c0)OR(v0.c0)))OR(vt0.c0))))) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM v0, vt1 LEFT OUTER JOIN vt0 ON (((UNLIKELY(DISTINCT vt0.c0), ((v0.c0)IS(v0.c0)), CASE WHEN vt1.c0 THEN vt0.c0 END, (NOT (vt1.c0)), CAST(vt1.c0 AS BLOB)))<>((((x'')>>(vt1.c0)), v0.c0, NULL, NULL COLLATE BINARY, v0.c0 COLLATE BINARY))) GROUP BY vt0.c0, vt1.c0;
SELECT ALL v0.c0 FROM v0, vt2 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt2 GROUP BY v0.c0 HAVING ((GROUP_CONCAT(v0.c0))+((- (TOTAL(v0.c0))))) UNION ALL SELECT v0.c0 FROM v0, vt2 GROUP BY v0.c0 HAVING (NOT (((GROUP_CONCAT(v0.c0))+((- (TOTAL(v0.c0))))))) UNION ALL SELECT v0.c0 FROM v0, vt2 GROUP BY v0.c0 HAVING ((((GROUP_CONCAT(v0.c0))+((- (TOTAL(v0.c0)))))) ISNULL);
SELECT ALL v0.c0 FROM v0, vt2 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt2 GROUP BY v0.c0 HAVING ((GROUP_CONCAT(v0.c0))+((- (TOTAL(v0.c0))))) UNION ALL SELECT v0.c0 FROM v0, vt2 GROUP BY v0.c0 HAVING (NOT (((GROUP_CONCAT(v0.c0))+((- (TOTAL(v0.c0))))))) UNION ALL SELECT v0.c0 FROM v0, vt2 GROUP BY v0.c0 HAVING ((((GROUP_CONCAT(v0.c0))+((- (TOTAL(v0.c0)))))) ISNULL);
SELECT ALL v0.c0 FROM v0, vt2 GROUP BY v0.c0;
SELECT vt2.c0 FROM vt2;
SELECT ALL vt2.c0 FROM vt2 WHERE (CAST(x'' AS INTEGER)) UNION ALL SELECT vt2.c0 FROM vt2 WHERE ((NOT (CAST(x'' AS INTEGER)))) UNION ALL SELECT ALL vt2.c0 FROM vt2 WHERE (((CAST(x'' AS INTEGER)) ISNULL));
SELECT vt2.c0 FROM vt2;
SELECT DISTINCT v0.c0 FROM v0, vt2, vt1;
SELECT DISTINCT v0.c0 FROM v0, vt2, vt1 WHERE ((((vt2.c0)) NOT BETWEEN (((vt2.c0 IN ()))) AND ((((0.12987813023739048)>>(NULL)))))) UNION SELECT DISTINCT v0.c0 FROM v0, vt2, vt1 WHERE ((NOT ((((vt2.c0)) NOT BETWEEN (((vt2.c0 IN ()))) AND ((((0.12987813023739048)>>(NULL)))))))) UNION SELECT DISTINCT v0.c0 FROM v0, vt2, vt1 WHERE ((((((vt2.c0)) NOT BETWEEN (((vt2.c0 IN ()))) AND ((((0.12987813023739048)>>(NULL)))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0, vt2, vt1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0) NOTNULL)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((NOT (((vt0.c0) NOTNULL)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((NOT (((vt0.c0) NOTNULL)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING MAX(SUM(vt0.c0)) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (MAX(SUM(vt0.c0)))) UNION ALL SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING ((MAX(SUM(vt0.c0))) ISNULL);
SELECT vt2.c0, vt0.c0 FROM vt2, vt0;
SELECT ALL vt2.c0, vt0.c0 FROM vt2, vt0 WHERE (NULL) UNION ALL SELECT vt2.c0, vt0.c0 FROM vt2, vt0 WHERE ((NOT (NULL))) UNION ALL SELECT vt2.c0, vt0.c0 FROM vt2, vt0 WHERE (((NULL) ISNULL));
SELECT vt2.c0, vt0.c0 FROM vt2, vt0;
SELECT DISTINCT v0.c0 FROM v0, vt0, vt2;
SELECT DISTINCT v0.c0 FROM v0 NOT INDEXED, vt0, vt2 WHERE ((((((~ (vt2.c0)))AND(((((vt2.c0)OR(vt0.c0)))OR(vt0.c0)))))OR(((v0.c0) ISNULL)))) UNION SELECT DISTINCT v0.c0 FROM v0, vt0, vt2 WHERE ((NOT ((((((~ (vt2.c0)))AND(((((vt2.c0)OR(vt0.c0)))OR(vt0.c0)))))OR(((v0.c0) ISNULL)))))) UNION SELECT DISTINCT v0.c0 FROM v0, vt0, vt2 WHERE ((((((((~ (vt2.c0)))AND(((((vt2.c0)OR(vt0.c0)))OR(vt0.c0)))))OR(((v0.c0) ISNULL)))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0, vt0, vt2;
SELECT vt2.c0 FROM vt2, vt0 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((0.8347803546955352 COLLATE RTRIM)) AND ((((vt2.c0) NOTNULL))))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2, vt0 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN ((0.8347803546955352 COLLATE RTRIM)) AND ((((vt2.c0) NOTNULL))))))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2, vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((0.8347803546955352 COLLATE RTRIM)) AND ((((vt2.c0) NOTNULL))))) ISNULL)) GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2, vt0 GROUP BY vt2.c0;
SELECT ALL vt1.c0, vt0.c0, vt2.c0 FROM v0, vt0 LEFT OUTER JOIN vt2 ON ((((vt1.c0)<=(vt2.c0))) BETWEEN (vt1.c0) AND (CAST(vt2.c0 AS BLOB))) INNER JOIN vt1 ON ((((((((vt2.c0)AND(v0.c0 COLLATE NOCASE)))OR((('')||(vt1.c0)))))OR(((vt1.c0) NOT BETWEEN (v0.c0) AND ('-1255560834')))))AND(CASE WHEN vt2.c0 THEN vt0.c0 END)) GROUP BY vt1.c0, vt0.c0, vt2.c0;
SELECT * FROM v0;
SELECT * FROM v0 WHERE ((((v0.c0))<=((v0.c0))) COLLATE NOCASE) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT ((((v0.c0))<=((v0.c0))) COLLATE NOCASE))) UNION ALL SELECT * FROM v0 WHERE ((((((v0.c0))<=((v0.c0))) COLLATE NOCASE) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM vt2, vt0;
SELECT DISTINCT * FROM vt2, vt0 WHERE ((((((0.02836431649592408)+(vt2.c0)), ((vt0.c0)OR(vt0.c0)), ((vt2.c0)GLOB(vt2.c0))))=((CAST(vt2.c0 AS BLOB), vt2.c0, ((vt0.c0) IS TRUE))))) UNION SELECT DISTINCT * FROM vt2, vt0 WHERE ((NOT ((((((0.02836431649592408)+(vt2.c0)), ((vt0.c0)OR(vt0.c0)), ((vt2.c0)GLOB(vt2.c0))))==((CAST(vt2.c0 AS BLOB), vt2.c0, ((vt0.c0) IS TRUE))))))) UNION SELECT DISTINCT * FROM vt2, vt0 WHERE ((((((((0.02836431649592408)+(vt2.c0)), ((vt0.c0)OR(vt0.c0)), ((vt2.c0)GLOB(vt2.c0))))==((CAST(vt2.c0 AS BLOB), vt2.c0, ((vt0.c0) IS TRUE))))) ISNULL));
SELECT DISTINCT * FROM vt2, vt0;
SELECT vt2.c0, vt1.c0, vt0.c0 FROM vt0, vt2 LEFT OUTER JOIN vt1 ON (((((vt0.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt2.c0, '0.4628172941061406')) AND ((vt1.c0, vt0.c0, vt1.c0)))) NOT BETWEEN (vt0.c0) AND (((vt2.c0)AND(vt0.c0)))) GROUP BY vt2.c0, vt1.c0, vt0.c0;
SELECT ALL vt2.c0, vt1.c0, vt0.c0 FROM vt0, vt2 LEFT OUTER JOIN vt1 ON (((((vt0.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt2.c0, '0.4628172941061406')) AND ((vt1.c0, vt0.c0, vt1.c0)))) NOT BETWEEN (vt0.c0) AND (((vt2.c0)AND(vt0.c0)))) WHERE (((x'') NOT BETWEEN (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND ((((vt1.c0, vt0.c0, vt2.c0))=((vt2.c0, vt2.c0, vt1.c0)))))) GROUP BY vt2.c0, vt1.c0, vt0.c0 UNION SELECT ALL vt2.c0, vt1.c0, vt0.c0 FROM vt0, vt2 LEFT OUTER JOIN vt1 ON (((((vt0.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt2.c0, '0.4628172941061406')) AND ((vt1.c0, vt0.c0, vt1.c0)))) NOT BETWEEN (vt0.c0) AND (((vt2.c0)AND(vt0.c0)))) WHERE ((NOT (((x'') NOT BETWEEN (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND ((((vt1.c0, vt0.c0, vt2.c0))==((vt2.c0, vt2.c0, vt1.c0)))))))) GROUP BY vt2.c0, vt1.c0, vt0.c0 UNION SELECT vt2.c0, vt1.c0, vt0.c0 FROM vt0, vt2 LEFT OUTER JOIN vt1 ON (((((vt0.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt2.c0, '0.4628172941061406')) AND ((vt1.c0, vt0.c0, vt1.c0)))) NOT BETWEEN (vt0.c0) AND (((vt2.c0)AND(vt0.c0)))) WHERE (((((x'') NOT BETWEEN (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND ((((vt1.c0, vt0.c0, vt2.c0))==((vt2.c0, vt2.c0, vt1.c0)))))) ISNULL)) GROUP BY vt2.c0, vt1.c0, vt0.c0;
SELECT vt2.c0, vt1.c0, vt0.c0 FROM vt0, vt2 LEFT OUTER JOIN vt1 ON (((((vt0.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt2.c0, '0.4628172941061406')) AND ((vt1.c0, vt0.c0, vt1.c0)))) NOT BETWEEN (vt0.c0) AND (((vt2.c0)AND(vt0.c0)))) GROUP BY vt2.c0, vt1.c0, vt0.c0;
SELECT vt0.c0, vt1.c0, vt2.c0, v0.c0 FROM v0, vt2, vt1, vt0 GROUP BY vt0.c0, vt1.c0, vt2.c0, v0.c0;
SELECT vt0.c0, vt1.c0, vt2.c0, v0.c0 FROM v0, vt2, vt1, vt0 GROUP BY vt0.c0, vt1.c0, vt2.c0, v0.c0 HAVING ((((MIN(vt1.c0))AND(x'')))OR(x'' COLLATE NOCASE)) UNION ALL SELECT vt0.c0, vt1.c0, vt2.c0, v0.c0 FROM v0, vt2, vt1, vt0 GROUP BY vt0.c0, vt1.c0, vt2.c0, v0.c0 HAVING (NOT (((((MIN(vt1.c0))AND(x'')))OR(x'' COLLATE NOCASE)))) UNION ALL SELECT ALL vt0.c0, vt1.c0, vt2.c0, v0.c0 FROM v0, vt2, vt1, vt0 GROUP BY vt0.c0, vt1.c0, vt2.c0, v0.c0 HAVING ((((((MIN(vt1.c0))AND(x'')))OR(x'' COLLATE NOCASE))) ISNULL);
SELECT vt0.c0, vt1.c0, vt2.c0, v0.c0 FROM v0, vt2, vt1, vt0 GROUP BY vt0.c0, vt1.c0, vt2.c0, v0.c0;
SELECT vt0.c0, vt1.c0, vt2.c0, v0.c0 FROM v0, vt2, vt1, vt0 GROUP BY vt0.c0, vt1.c0, vt2.c0, v0.c0 HAVING ((((MIN(vt1.c0))AND(x'')))OR(x'' COLLATE NOCASE)) UNION ALL SELECT vt0.c0, vt1.c0, vt2.c0, v0.c0 FROM v0, vt2, vt1, vt0 GROUP BY vt0.c0, vt1.c0, vt2.c0, v0.c0 HAVING (NOT (((((MIN(vt1.c0))AND(x'')))OR(x'' COLLATE NOCASE)))) UNION ALL SELECT ALL vt0.c0, vt1.c0, vt2.c0, v0.c0 FROM v0, vt2, vt1, vt0 GROUP BY vt0.c0, vt1.c0, vt2.c0, v0.c0 HAVING ((((((MIN(vt1.c0))AND(x'')))OR(x'' COLLATE NOCASE))) ISNULL);
SELECT vt0.c0, vt1.c0, vt2.c0, v0.c0 FROM v0, vt2, vt1, vt0 GROUP BY vt0.c0, vt1.c0, vt2.c0, v0.c0;
SELECT ALL TOTAL(CAST((((vt0.c0, vt1.c0, v0.c0))<=((v0.c0, v0.c0, v0.c0))) AS BLOB)) FROM vt0, vt1, v0;
SELECT * FROM vt1 FULL OUTER JOIN v0 ON (((vt1.c0)) BETWEEN ((vt1.c0)) AND (((v0.c0 IN ()))));
SELECT ALL * FROM vt1 FULL OUTER JOIN v0 ON (((vt1.c0)) BETWEEN ((vt1.c0)) AND (((v0.c0 IN ())))) WHERE (x'') UNION ALL SELECT * FROM vt1 FULL OUTER JOIN v0 ON (((vt1.c0)) BETWEEN ((vt1.c0)) AND (((v0.c0 IN ())))) WHERE ((NOT (x''))) UNION ALL SELECT * FROM vt1 FULL OUTER JOIN v0 ON (((vt1.c0)) BETWEEN ((vt1.c0)) AND (((v0.c0 IN ())))) WHERE (((x'') ISNULL));
SELECT * FROM vt1 FULL OUTER JOIN v0 ON (((vt1.c0)) BETWEEN ((vt1.c0)) AND (((v0.c0 IN ()))));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((NOT (vt1.c0))) NOT BETWEEN (((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(NULL))) AND (((vt1.c0)<<(vt1.c0))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((((NOT (vt1.c0))) NOT BETWEEN (((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(NULL))) AND (((vt1.c0)<<(vt1.c0))))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((((NOT (vt1.c0))) NOT BETWEEN (((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(NULL))) AND (((vt1.c0)<<(vt1.c0))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((TRIM(DISTINCT vt0.c0, vt0.c0) IN ())) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((TRIM(DISTINCT vt0.c0, vt0.c0) IN ())))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((TRIM(DISTINCT vt0.c0, vt0.c0) IN ())) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0, vt2 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0, vt2 GROUP BY vt0.c0, vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt1, vt0, vt2 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt1, vt0, vt2 GROUP BY vt0.c0, vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0, vt2 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0, vt2 GROUP BY vt0.c0, vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt1, vt0, vt2 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt1, vt0, vt2 GROUP BY vt0.c0, vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0, vt2 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0 FROM v0, vt2, vt1, vt0;
SELECT ALL vt0.c0 FROM v0, vt2, vt1, vt0 WHERE (((v0.c0 COLLATE RTRIM)>>(((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) UNION ALL SELECT vt0.c0 FROM v0, vt2, vt1, vt0 WHERE ((NOT (((v0.c0 COLLATE RTRIM)>>(((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM v0, vt2, vt1, vt0 WHERE (((((v0.c0 COLLATE RTRIM)>>(((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL));
SELECT ALL vt0.c0 FROM v0, vt2, vt1, vt0;
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT ((NOT (vt1.c0))))) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((((NOT (vt1.c0))) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT vt2.c0, vt0.c0, vt1.c0, v0.c0 FROM v0, vt0, vt1, vt2 GROUP BY vt2.c0, vt0.c0, vt1.c0, v0.c0;
SELECT ALL vt2.c0, vt0.c0, vt1.c0, v0.c0 FROM v0, vt0, vt1, vt2 WHERE (((vt1.c0)||(((((((((x'27d0')AND(vt1.c0)))AND(v0.c0)))OR(vt0.c0)))AND(vt0.c0))))) GROUP BY vt2.c0, vt0.c0, vt1.c0, v0.c0 UNION SELECT vt2.c0, vt0.c0, vt1.c0, v0.c0 FROM v0, vt0, vt1, vt2 WHERE ((NOT (((vt1.c0)||(((((((((x'27d0')AND(vt1.c0)))AND(v0.c0)))OR(vt0.c0)))AND(vt0.c0))))))) GROUP BY vt2.c0, vt0.c0, vt1.c0, v0.c0 UNION SELECT vt2.c0, vt0.c0, vt1.c0, v0.c0 FROM v0, vt0, vt1, vt2 WHERE (((((vt1.c0)||(((((((((x'27d0')AND(vt1.c0)))AND(v0.c0)))OR(vt0.c0)))AND(vt0.c0))))) ISNULL)) GROUP BY vt2.c0, vt0.c0, vt1.c0, v0.c0;
SELECT vt2.c0, vt0.c0, vt1.c0, v0.c0 FROM v0, vt0, vt1, vt2 GROUP BY vt2.c0, vt0.c0, vt1.c0, v0.c0;
SELECT ALL vt0.c0 FROM v0, vt1 NOT INDEXED, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt1, vt0 GROUP BY vt0.c0 HAVING CAST(MIN(GROUP_CONCAT(COUNT(AVG(SUM(MAX(MIN(vt0.c0))))))) AS INTEGER) UNION ALL SELECT vt0.c0 FROM v0, vt1, vt0 GROUP BY vt0.c0 HAVING (NOT (CAST(MIN(GROUP_CONCAT(COUNT(AVG(SUM(MAX(MIN(vt0.c0))))))) AS INTEGER))) UNION ALL SELECT vt0.c0 FROM v0, vt1, vt0 GROUP BY vt0.c0 HAVING ((CAST(MIN(GROUP_CONCAT(COUNT(AVG(SUM(MAX(MIN(vt0.c0))))))) AS INTEGER)) ISNULL);
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0, vt1;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0, vt1 WHERE (((CASE WHEN v0.c0 THEN v0.c0 ELSE NULL END)+(CAST(v0.c0 AS NUMERIC)))) UNION ALL SELECT v0.c0, vt0.c0 FROM v0, vt0, vt1 WHERE ((NOT (((CASE WHEN v0.c0 THEN v0.c0 ELSE NULL END)+(CAST(v0.c0 AS NUMERIC)))))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0, vt0, vt1 WHERE (((((CASE WHEN v0.c0 THEN v0.c0 ELSE NULL END)+(CAST(v0.c0 AS NUMERIC)))) ISNULL));
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0, vt1;
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN vt2 ON (((vt2.c0)) NOT BETWEEN ((LIKELY(x'b554'))) AND (((vt2.c0 IN ()))));
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN vt2 ON (((vt2.c0)) NOT BETWEEN ((LIKELY(x'b554'))) AND (((vt2.c0 IN ())))) WHERE (vt0.c0) UNION SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN vt2 ON (((vt2.c0)) NOT BETWEEN ((LIKELY(x'b554'))) AND (((vt2.c0 IN ())))) WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN vt2 ON (((vt2.c0)) NOT BETWEEN ((LIKELY(x'b554'))) AND (((vt2.c0 IN ())))) WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN vt2 ON (((vt2.c0)) NOT BETWEEN ((LIKELY(x'b554'))) AND (((vt2.c0 IN ()))));
SELECT ALL vt2.c0, vt0.c0, v0.c0 FROM vt0, v0, vt2 GROUP BY vt2.c0, vt0.c0, v0.c0;
SELECT ALL vt2.c0, vt0.c0, v0.c0 FROM vt0, v0, vt2 WHERE ((NOT ((~ (vt0.c0))))) GROUP BY vt2.c0, vt0.c0, v0.c0 UNION SELECT ALL vt2.c0, vt0.c0, v0.c0 FROM vt0, v0, vt2 WHERE ((NOT ((NOT ((~ (vt0.c0))))))) GROUP BY vt2.c0, vt0.c0, v0.c0 UNION SELECT vt2.c0, vt0.c0, v0.c0 FROM vt0, v0, vt2 WHERE ((((NOT ((~ (vt0.c0))))) ISNULL)) GROUP BY vt2.c0, vt0.c0, v0.c0;
SELECT ALL vt2.c0, vt0.c0, v0.c0 FROM vt0, v0, vt2 GROUP BY vt2.c0, vt0.c0, v0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING ((((((((((vt0.c0)/(MIN(COUNT(vt0.c0)))))AND(COUNT(SUM(MAX(v0.c0))))))OR(TOTAL(vt0.c0) COLLATE NOCASE)))OR(((((vt0.c0)OR(v0.c0)))OR(AVG(vt0.c0))))))OR(CASE WHEN vt0.c0 THEN MIN(COUNT(*)) ELSE SUM(COUNT(v0.c0)) END)) UNION ALL SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING (NOT (((((((((((vt0.c0)/(MIN(COUNT(vt0.c0)))))AND(COUNT(SUM(MAX(v0.c0))))))OR(TOTAL(vt0.c0) COLLATE NOCASE)))OR(((((vt0.c0)OR(v0.c0)))OR(AVG(vt0.c0))))))OR(CASE WHEN vt0.c0 THEN MIN(COUNT(*)) ELSE SUM(COUNT(v0.c0)) END)))) UNION ALL SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING ((((((((((((vt0.c0)/(MIN(COUNT(vt0.c0)))))AND(COUNT(SUM(MAX(v0.c0))))))OR(TOTAL(vt0.c0) COLLATE NOCASE)))OR(((((vt0.c0)OR(v0.c0)))OR(AVG(vt0.c0))))))OR(CASE WHEN vt0.c0 THEN MIN(COUNT(*)) ELSE SUM(COUNT(v0.c0)) END))) ISNULL);
SELECT ALL * FROM v0, vt0;
SELECT * FROM v0, vt0 WHERE (CASE WHEN CAST(v0.c0 AS INTEGER) THEN v0.c0 COLLATE NOCASE END) UNION ALL SELECT * FROM v0, vt0 WHERE ((NOT (CASE WHEN CAST(v0.c0 AS INTEGER) THEN v0.c0 COLLATE NOCASE END))) UNION ALL SELECT ALL * FROM v0, vt0 WHERE (((CASE WHEN CAST(v0.c0 AS INTEGER) THEN v0.c0 COLLATE NOCASE END) ISNULL));
SELECT ALL * FROM v0, vt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (CASE WHEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) THEN json_quote(vt1.c0) WHEN (vt1.c0 IN ()) THEN (~ (vt1.c0)) WHEN ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) THEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) WHEN ((vt1.c0) NOTNULL) THEN (((vt1.c0))<=((0.21956946929493648))) WHEN CAST(vt1.c0 AS REAL) THEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) END) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (CASE WHEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) THEN json_quote(vt1.c0) WHEN (vt1.c0 IN ()) THEN (~ (vt1.c0)) WHEN ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) THEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) WHEN ((vt1.c0) NOTNULL) THEN (((vt1.c0))<=((0.21956946929493648))) WHEN CAST(vt1.c0 AS REAL) THEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) END))) UNION SELECT DISTINCT * FROM vt1 WHERE (((CASE WHEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) THEN json_quote(vt1.c0) WHEN (vt1.c0 IN ()) THEN (~ (vt1.c0)) WHEN ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) THEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) WHEN ((vt1.c0) NOTNULL) THEN (((vt1.c0))<=((0.21956946929493648))) WHEN CAST(vt1.c0 AS REAL) THEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) END) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt2.c0, vt1.c0 FROM vt1, vt2 GROUP BY vt2.c0, vt1.c0;
SELECT vt2.c0, vt1.c0 FROM vt1, vt2 WHERE (((((LIKELY(DISTINCT vt1.c0))AND('-397083018')))AND(((((((((vt2.c0)OR(vt2.c0)))OR(vt2.c0)))AND(vt2.c0)))AND(vt2.c0))))) GROUP BY vt2.c0, vt1.c0 UNION SELECT ALL vt2.c0, vt1.c0 FROM vt1, vt2 WHERE ((NOT (((((LIKELY(DISTINCT vt1.c0))AND('-397083018')))AND(((((((((vt2.c0)OR(vt2.c0)))OR(vt2.c0)))AND(vt2.c0)))AND(vt2.c0))))))) GROUP BY vt2.c0, vt1.c0 UNION SELECT vt2.c0, vt1.c0 FROM vt1, vt2 WHERE (((((((LIKELY(DISTINCT vt1.c0))AND('-397083018')))AND(((((((((vt2.c0)OR(vt2.c0)))OR(vt2.c0)))AND(vt2.c0)))AND(vt2.c0))))) ISNULL)) GROUP BY vt2.c0, vt1.c0;
SELECT vt2.c0, vt1.c0 FROM vt1, vt2 GROUP BY vt2.c0, vt1.c0;
SELECT ALL vt1.c0, vt2.c0, v0.c0 FROM vt2, vt1, v0 GROUP BY vt1.c0, vt2.c0, v0.c0;
SELECT vt1.c0, vt2.c0, v0.c0 FROM vt2, vt1, v0 GROUP BY vt1.c0, vt2.c0, v0.c0 HAVING ((((v0.c0) NOTNULL)) IS TRUE) UNION ALL SELECT ALL vt1.c0, vt2.c0, v0.c0 FROM vt2, vt1, v0 GROUP BY vt1.c0, vt2.c0, v0.c0 HAVING (NOT (((((v0.c0) NOTNULL)) IS TRUE))) UNION ALL SELECT ALL vt1.c0, vt2.c0, v0.c0 FROM vt2, vt1, v0 GROUP BY vt1.c0, vt2.c0, v0.c0 HAVING ((((((v0.c0) NOTNULL)) IS TRUE)) ISNULL);
SELECT ALL vt1.c0, vt2.c0, v0.c0 FROM vt2, vt1, v0 GROUP BY vt1.c0, vt2.c0, v0.c0;
SELECT vt1.c0, vt2.c0, v0.c0 FROM vt2, vt1, v0 GROUP BY vt1.c0, vt2.c0, v0.c0 HAVING ((((v0.c0) NOTNULL)) IS TRUE) UNION ALL SELECT ALL vt1.c0, vt2.c0, v0.c0 FROM vt2, vt1, v0 GROUP BY vt1.c0, vt2.c0, v0.c0 HAVING (NOT (((((v0.c0) NOTNULL)) IS TRUE))) UNION ALL SELECT ALL vt1.c0, vt2.c0, v0.c0 FROM vt2, vt1, v0 GROUP BY vt1.c0, vt2.c0, v0.c0 HAVING ((((((v0.c0) NOTNULL)) IS TRUE)) ISNULL);
SELECT ALL vt1.c0, vt2.c0, v0.c0 FROM vt2, vt1, v0 GROUP BY vt1.c0, vt2.c0, v0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 WHERE ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))) COLLATE RTRIM) UNION ALL SELECT v0.c0, vt0.c0 FROM v0, vt0 WHERE ((NOT ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))) COLLATE RTRIM))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 WHERE ((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))) COLLATE RTRIM) ISNULL));
SELECT v0.c0, vt0.c0 FROM v0, vt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((vt1.c0) ISNULL) COLLATE BINARY COLLATE RTRIM) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0) ISNULL) COLLATE BINARY COLLATE RTRIM))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((vt1.c0) ISNULL) COLLATE BINARY COLLATE RTRIM) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 NOT INDEXED WHERE (CAST(((vt1.c0)*('f\!h~')) AS TEXT)) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (CAST(((vt1.c0)*('f\!h~')) AS TEXT)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((CAST(((vt1.c0)*('f\!h~')) AS TEXT)) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt2.c0 FROM vt0, vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt0, vt2 GROUP BY vt2.c0 HAVING (((TOTAL('-䐀*)') IN (vt0.c0)))|(AVG(TOTAL(vt2.c0)))) UNION ALL SELECT vt2.c0 FROM vt0, vt2 GROUP BY vt2.c0 HAVING (NOT ((((TOTAL('-䐀*)') IN (vt0.c0)))|(AVG(TOTAL(vt2.c0)))))) UNION ALL SELECT ALL vt2.c0 FROM vt0, vt2 GROUP BY vt2.c0 HAVING (((((TOTAL('-䐀*)') IN (vt0.c0)))|(AVG(TOTAL(vt2.c0))))) ISNULL);
SELECT ALL TOTAL(((((((vt2.c0) NOTNULL))OR(CAST(vt2.c0 AS REAL))))AND(vt2.c0))) FROM vt2 ORDER BY ((((((((CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 END)AND(CAST(vt2.c0 AS REAL))))AND(CAST(vt2.c0 AS TEXT))))OR(vt2.c0 COLLATE NOCASE)))AND(CAST(vt2.c0 AS REAL))) DESC;
SELECT ALL vt2.c0 FROM vt0, vt2, v0;
SELECT ALL vt2.c0 FROM vt0, vt2, v0 WHERE ((((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))))AND(CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 END))) UNION ALL SELECT vt2.c0 FROM vt0, vt2, v0 WHERE ((NOT ((((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))))AND(CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 END))))) UNION ALL SELECT ALL vt2.c0 FROM vt0, vt2, v0 WHERE ((((((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))))AND(CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 END))) ISNULL));
SELECT ALL vt2.c0 FROM vt0, vt2, v0;
SELECT DISTINCT vt0.c0 FROM vt0 INNER JOIN vt2 ON CAST((+ (vt2.c0)) AS NUMERIC);
SELECT DISTINCT vt0.c0 FROM vt0 INNER JOIN vt2 ON CAST((+ (vt2.c0)) AS NUMERIC) WHERE (CASE WHEN (- (vt0.c0)) THEN (vt0.c0 IN (vt0.c0)) WHEN ((vt2.c0)%(-325612841)) THEN ((vt2.c0) IS TRUE) WHEN CAST(vt2.c0 AS TEXT) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt2.c0)) WHEN (~ ('-1068646066')) THEN ((vt0.c0)>=(vt0.c0)) WHEN ((((((((vt2.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt2.c0)) THEN SQLITE_COMPILEOPTION_USED(vt0.c0) END) UNION SELECT DISTINCT vt0.c0 FROM vt0 INNER JOIN vt2 ON CAST((+ (vt2.c0)) AS NUMERIC) WHERE ((NOT (CASE WHEN (- (vt0.c0)) THEN (vt0.c0 IN (vt0.c0)) WHEN ((vt2.c0)%(-325612841)) THEN ((vt2.c0) IS TRUE) WHEN CAST(vt2.c0 AS TEXT) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt2.c0)) WHEN (~ ('-1068646066')) THEN ((vt0.c0)>=(vt0.c0)) WHEN ((((((((vt2.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt2.c0)) THEN SQLITE_COMPILEOPTION_USED(vt0.c0) END))) UNION SELECT DISTINCT vt0.c0 FROM vt0 INNER JOIN vt2 ON CAST((+ (vt2.c0)) AS NUMERIC) WHERE (((CASE WHEN (- (vt0.c0)) THEN (vt0.c0 IN (vt0.c0)) WHEN ((vt2.c0)%(-325612841)) THEN ((vt2.c0) IS TRUE) WHEN CAST(vt2.c0 AS TEXT) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt2.c0)) WHEN (~ ('-1068646066')) THEN ((vt0.c0)>=(vt0.c0)) WHEN ((((((((vt2.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt2.c0)) THEN SQLITE_COMPILEOPTION_USED(vt0.c0) END) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0 INNER JOIN vt2 ON CAST((+ (vt2.c0)) AS NUMERIC);
SELECT ALL vt2.c0, vt1.c0 FROM vt2, v0, vt0 INNER JOIN vt1 ON vt0.c0 GROUP BY vt2.c0, vt1.c0;
SELECT ALL vt2.c0, vt1.c0 FROM vt2, v0, vt0 INNER JOIN vt1 ON vt0.c0 WHERE (vt1.c0) GROUP BY vt2.c0, vt1.c0 UNION SELECT ALL vt2.c0, vt1.c0 FROM vt2, v0, vt0 INNER JOIN vt1 ON vt0.c0 WHERE ((NOT (vt1.c0))) GROUP BY vt2.c0, vt1.c0 UNION SELECT vt2.c0, vt1.c0 FROM vt2, v0, vt0 INNER JOIN vt1 ON vt0.c0 WHERE (((vt1.c0) ISNULL)) GROUP BY vt2.c0, vt1.c0;
SELECT ALL vt2.c0, vt1.c0 FROM vt2, v0, vt0 INNER JOIN vt1 ON vt0.c0 GROUP BY vt2.c0, vt1.c0;
SELECT vt0.c0, vt1.c0, v0.c0 FROM vt1, v0, vt0 GROUP BY vt0.c0, vt1.c0, v0.c0;
SELECT vt0.c0, vt1.c0, v0.c0 FROM vt1, v0, vt0 GROUP BY vt0.c0, vt1.c0, v0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0, vt1.c0, v0.c0 FROM vt1, v0, vt0 GROUP BY vt0.c0, vt1.c0, v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0, vt1.c0, v0.c0 FROM vt1, v0, vt0 GROUP BY vt0.c0, vt1.c0, v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0, vt1.c0, v0.c0 FROM vt1, v0, vt0 GROUP BY vt0.c0, vt1.c0, v0.c0;
SELECT vt0.c0, vt1.c0, v0.c0 FROM vt1, v0, vt0 GROUP BY vt0.c0, vt1.c0, v0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0, vt1.c0, v0.c0 FROM vt1, v0, vt0 GROUP BY vt0.c0, vt1.c0, v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0, vt1.c0, v0.c0 FROM vt1, v0, vt0 GROUP BY vt0.c0, vt1.c0, v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0, vt1.c0, v0.c0 FROM vt1, v0, vt0 GROUP BY vt0.c0, vt1.c0, v0.c0;
SELECT vt2.c0 FROM vt2, v0, vt1;
SELECT vt2.c0 FROM vt2, v0, vt1 WHERE (CAST(((vt2.c0) NOT BETWEEN (v0.c0) AND (vt2.c0)) AS TEXT)) UNION ALL SELECT vt2.c0 FROM vt2, v0, vt1 WHERE ((NOT (CAST(((vt2.c0) NOT BETWEEN (v0.c0) AND (vt2.c0)) AS TEXT)))) UNION ALL SELECT ALL vt2.c0 FROM vt2, v0, vt1 WHERE (((CAST(((vt2.c0) NOT BETWEEN (v0.c0) AND (vt2.c0)) AS TEXT)) ISNULL));
SELECT vt2.c0 FROM vt2, v0, vt1;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (NULL) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM v0 NOT INDEXED WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT vt0.c0, v0.c0 FROM vt0, vt1, v0, vt2 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, vt1, v0, vt2 WHERE ((NOT ((~ (vt0.c0))))) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM vt0, vt1, v0, vt2 WHERE ((NOT ((NOT ((~ (vt0.c0))))))) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM vt0, vt1, v0, vt2 WHERE ((((NOT ((~ (vt0.c0))))) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0, vt1, v0, vt2 GROUP BY vt0.c0, v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING MIN(((NULL) IS TRUE)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MIN(((NULL) IS TRUE)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MIN(((NULL) IS TRUE))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING MIN(((NULL) IS TRUE)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MIN(((NULL) IS TRUE)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MIN(((NULL) IS TRUE))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt0.c0 FROM v0 NATURAL JOIN vt0;
SELECT vt0.c0 FROM v0 NATURAL JOIN vt0 WHERE ((- (UNICODE(1449245329)))) UNION ALL SELECT vt0.c0 FROM v0 NATURAL JOIN vt0 WHERE ((NOT ((- (UNICODE(1449245329)))))) UNION ALL SELECT ALL vt0.c0 FROM v0 NATURAL JOIN vt0 WHERE ((((- (UNICODE(1449245329)))) ISNULL));
SELECT vt0.c0 FROM v0 NATURAL JOIN vt0;
SELECT DISTINCT * FROM vt2 NOT INDEXED;
SELECT DISTINCT * FROM vt2 WHERE ((((+ (vt2.c0)))<=(CAST(vt2.c0 AS BLOB)))) UNION SELECT DISTINCT * FROM vt2 WHERE ((NOT ((((+ (vt2.c0)))<=(CAST(vt2.c0 AS BLOB)))))) UNION SELECT DISTINCT * FROM vt2 WHERE ((((((+ (vt2.c0)))<=(CAST(vt2.c0 AS BLOB)))) ISNULL));
SELECT DISTINCT * FROM vt2 NOT INDEXED;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (x'844e33cf') GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (x'844e33cf'))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((x'844e33cf') ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0, vt0.c0 FROM v0, vt2, vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM v0, vt2, vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING NULL UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM v0, vt2, vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING (NOT (NULL)) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM v0, vt2, vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING ((NULL) ISNULL);
SELECT ALL vt1.c0, vt0.c0 FROM v0, vt2, vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM v0, vt2, vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING NULL UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM v0, vt2, vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING (NOT (NULL)) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM v0, vt2, vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING ((NULL) ISNULL);
SELECT ALL vt1.c0, vt0.c0 FROM v0, vt2, vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt2.c0, vt0.c0 FROM vt0 NOT INDEXED, vt2, v0;
SELECT ALL vt2.c0, vt0.c0 FROM vt0, vt2, v0 WHERE (((vt0.c0)LIKE(v0.c0)) COLLATE RTRIM) UNION ALL SELECT vt2.c0, vt0.c0 FROM vt0, vt2, v0 WHERE ((NOT (((vt0.c0)LIKE(v0.c0)) COLLATE RTRIM))) UNION ALL SELECT vt2.c0, vt0.c0 FROM vt0, vt2, v0 WHERE (((((vt0.c0)LIKE(v0.c0)) COLLATE RTRIM) ISNULL));
SELECT ALL vt2.c0, vt0.c0 FROM vt0 NOT INDEXED, vt2, v0;
SELECT DISTINCT vt2.c0, vt0.c0 FROM vt0, vt2;
SELECT DISTINCT vt2.c0, vt0.c0 FROM vt0, vt2 WHERE ((((((((('730934726')OR(vt2.c0)))AND(vt0.c0)))OR(CAST(vt2.c0 AS NUMERIC))))AND(x''))) UNION SELECT DISTINCT vt2.c0, vt0.c0 FROM vt0, vt2 WHERE ((NOT ((((((((('730934726')OR(vt2.c0)))AND(vt0.c0)))OR(CAST(vt2.c0 AS NUMERIC))))AND(x''))))) UNION SELECT DISTINCT vt2.c0, vt0.c0 FROM vt0, vt2 WHERE ((((((((((('730934726')OR(vt2.c0)))AND(vt0.c0)))OR(CAST(vt2.c0 AS NUMERIC))))AND(x''))) ISNULL));
SELECT DISTINCT vt2.c0, vt0.c0 FROM vt0, vt2;
SELECT vt2.c0 FROM vt1, vt0, vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt1, vt0, vt2 WHERE (CAST(((vt1.c0) NOT BETWEEN (vt2.c0) AND (vt1.c0)) AS INTEGER)) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt1, vt0, vt2 WHERE ((NOT (CAST(((vt1.c0) NOT BETWEEN (vt2.c0) AND (vt1.c0)) AS INTEGER)))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt1, vt0, vt2 WHERE (((CAST(((vt1.c0) NOT BETWEEN (vt2.c0) AND (vt1.c0)) AS INTEGER)) ISNULL)) GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt1, vt0, vt2 GROUP BY vt2.c0;
SELECT v0.c0, vt0.c0, vt2.c0 FROM vt0, v0, vt2 GROUP BY v0.c0, vt0.c0, vt2.c0;
SELECT ALL v0.c0, vt0.c0, vt2.c0 FROM vt0, v0, vt2 GROUP BY v0.c0, vt0.c0, vt2.c0 HAVING AVG(vt0.c0) UNION ALL SELECT ALL v0.c0, vt0.c0, vt2.c0 FROM vt0, v0, vt2 GROUP BY v0.c0, vt0.c0, vt2.c0 HAVING (NOT (AVG(vt0.c0))) UNION ALL SELECT v0.c0, vt0.c0, vt2.c0 FROM vt0, v0, vt2 GROUP BY v0.c0, vt0.c0, vt2.c0 HAVING ((AVG(vt0.c0)) ISNULL);
SELECT v0.c0, vt0.c0, vt2.c0 FROM vt0, v0, vt2 GROUP BY v0.c0, vt0.c0, vt2.c0;
SELECT ALL v0.c0, vt0.c0, vt2.c0 FROM vt0, v0, vt2 GROUP BY v0.c0, vt0.c0, vt2.c0 HAVING AVG(vt0.c0) UNION ALL SELECT ALL v0.c0, vt0.c0, vt2.c0 FROM vt0, v0, vt2 GROUP BY v0.c0, vt0.c0, vt2.c0 HAVING (NOT (AVG(vt0.c0))) UNION ALL SELECT v0.c0, vt0.c0, vt2.c0 FROM vt0, v0, vt2 GROUP BY v0.c0, vt0.c0, vt2.c0 HAVING ((AVG(vt0.c0)) ISNULL);
SELECT v0.c0, vt0.c0, vt2.c0 FROM vt0, v0, vt2 GROUP BY v0.c0, vt0.c0, vt2.c0;
SELECT ALL * FROM vt0, vt1;
SELECT * FROM vt0, vt1 WHERE (0.19081506273089566) UNION ALL SELECT * FROM vt0, vt1 WHERE ((NOT (0.19081506273089566))) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE (((0.19081506273089566) ISNULL));
SELECT ALL * FROM vt0, vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (TIME(x'', x'38ac', (+ (vt1.c0)), CASE WHEN '-579289867' THEN vt1.c0 END, LIKELY(DISTINCT vt1.c0), (vt1.c0 IN ()), (((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (TIME(x'', x'38ac', (+ (vt1.c0)), CASE WHEN '-579289867' THEN vt1.c0 END, LIKELY(DISTINCT vt1.c0), (vt1.c0 IN ()), (((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((TIME(x'', x'38ac', (+ (vt1.c0)), CASE WHEN '-579289867' THEN vt1.c0 END, LIKELY(DISTINCT vt1.c0), (vt1.c0 IN ()), (((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT v0.c0, vt2.c0 FROM v0 NATURAL JOIN vt2 GROUP BY v0.c0, vt2.c0;
SELECT ALL v0.c0, vt2.c0 FROM v0 NATURAL JOIN vt2 WHERE (((((((vt2.c0)AND(vt2.c0)))AND(vt2.c0)))|(0.14010454095965819))) GROUP BY v0.c0, vt2.c0 UNION SELECT v0.c0, vt2.c0 FROM v0 NATURAL JOIN vt2 WHERE ((NOT (((((((vt2.c0)AND(vt2.c0)))AND(vt2.c0)))|(0.14010454095965819))))) GROUP BY v0.c0, vt2.c0 UNION SELECT ALL v0.c0, vt2.c0 FROM v0 NATURAL JOIN vt2 WHERE (((((((((vt2.c0)AND(vt2.c0)))AND(vt2.c0)))|(0.14010454095965819))) ISNULL)) GROUP BY v0.c0, vt2.c0;
SELECT v0.c0, vt2.c0 FROM v0 NATURAL JOIN vt2 GROUP BY v0.c0, vt2.c0;
SELECT vt0.c0 FROM vt2, v0, vt1, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt2, v0, vt1, vt0 GROUP BY vt0.c0 HAVING CAST(vt0.c0 AS NUMERIC) UNION ALL SELECT ALL vt0.c0 FROM vt2, v0, vt1, vt0 GROUP BY vt0.c0 HAVING (NOT (CAST(vt0.c0 AS NUMERIC))) UNION ALL SELECT ALL vt0.c0 FROM vt2, v0, vt1, vt0 GROUP BY vt0.c0 HAVING ((CAST(vt0.c0 AS NUMERIC)) ISNULL);
SELECT vt0.c0 FROM vt2, v0, vt1, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt2, v0, vt1, vt0 GROUP BY vt0.c0 HAVING CAST(vt0.c0 AS NUMERIC) UNION ALL SELECT ALL vt0.c0 FROM vt2, v0, vt1, vt0 GROUP BY vt0.c0 HAVING (NOT (CAST(vt0.c0 AS NUMERIC))) UNION ALL SELECT ALL vt0.c0 FROM vt2, v0, vt1, vt0 GROUP BY vt0.c0 HAVING ((CAST(vt0.c0 AS NUMERIC)) ISNULL);
SELECT vt0.c0 FROM vt2, v0, vt1, vt0 GROUP BY vt0.c0;
SELECT ALL * FROM vt0, v0;
SELECT ALL * FROM vt0, v0 WHERE ((~ (CASE 0.8872849512858882  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 END))) UNION ALL SELECT * FROM vt0, v0 WHERE ((NOT ((~ (CASE 0.8872849512858882  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 END))))) UNION ALL SELECT * FROM vt0, v0 WHERE ((((~ (CASE 0.8872849512858882  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 END))) ISNULL));
SELECT ALL * FROM vt0, v0;
SELECT DISTINCT vt0.c0 FROM v0, vt2, vt0;
SELECT DISTINCT vt0.c0 FROM v0, vt2, vt0 WHERE (CAST(((v0.c0) NOTNULL) AS BLOB)) UNION SELECT DISTINCT vt0.c0 FROM v0, vt2, vt0 WHERE ((NOT (CAST(((v0.c0) NOTNULL) AS BLOB)))) UNION SELECT DISTINCT vt0.c0 FROM v0, vt2, vt0 WHERE (((CAST(((v0.c0) NOTNULL) AS BLOB)) ISNULL));
SELECT DISTINCT vt0.c0 FROM v0, vt2, vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)-(((vt0.c0)IS(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)-(((vt0.c0)IS(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)-(((vt0.c0)IS(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING TOTAL(((COUNT(*))*(vt2.c0))) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (TOTAL(((COUNT(*))*(vt2.c0))))) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((TOTAL(((COUNT(*))*(vt2.c0)))) ISNULL);
SELECT * FROM vt1, v0;
SELECT ALL * FROM vt1, v0 WHERE ((CASE v0.c0  WHEN vt1.c0 THEN v0.c0 END IN ())) UNION ALL SELECT * FROM vt1, v0 WHERE ((NOT ((CASE v0.c0  WHEN vt1.c0 THEN v0.c0 END IN ())))) UNION ALL SELECT * FROM vt1, v0 WHERE ((((CASE v0.c0  WHEN vt1.c0 THEN v0.c0 END IN ())) ISNULL));
SELECT * FROM vt1, v0;
SELECT DISTINCT vt0.c0, v0.c0 FROM vt0 FULL OUTER JOIN v0 ON (+ (((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT DISTINCT vt0.c0, v0.c0 FROM vt0 FULL OUTER JOIN v0 ON (+ (((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) WHERE (-1343735886) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM vt0 FULL OUTER JOIN v0 ON (+ (((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) WHERE ((NOT (-1343735886))) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM vt0 FULL OUTER JOIN v0 ON (+ (((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) WHERE (((-1343735886) ISNULL));
SELECT DISTINCT vt0.c0, v0.c0 FROM vt0 FULL OUTER JOIN v0 ON (+ (((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT vt1.c0 FROM v0, vt2, vt1, vt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM v0, vt2, vt1, vt0 WHERE ((CAST(v0.c0 AS TEXT) IN ())) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM v0, vt2, vt1, vt0 WHERE ((NOT ((CAST(v0.c0 AS TEXT) IN ())))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM v0, vt2, vt1, vt0 WHERE ((((CAST(v0.c0 AS TEXT) IN ())) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM v0, vt2, vt1, vt0 GROUP BY vt1.c0;
SELECT vt0.c0 FROM vt2, vt0, v0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt2, vt0, v0 GROUP BY vt0.c0 HAVING NULL UNION ALL SELECT vt0.c0 FROM vt2, vt0, v0 GROUP BY vt0.c0 HAVING (NOT (NULL)) UNION ALL SELECT vt0.c0 FROM vt2, vt0, v0 GROUP BY vt0.c0 HAVING ((NULL) ISNULL);
SELECT vt0.c0 FROM vt2, vt0, v0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt2, vt0, v0 GROUP BY vt0.c0 HAVING NULL UNION ALL SELECT vt0.c0 FROM vt2, vt0, v0 GROUP BY vt0.c0 HAVING (NOT (NULL)) UNION ALL SELECT vt0.c0 FROM vt2, vt0, v0 GROUP BY vt0.c0 HAVING ((NULL) ISNULL);
SELECT vt0.c0 FROM vt2, vt0, v0 GROUP BY vt0.c0;
SELECT * FROM vt1, vt0, v0;
SELECT ALL * FROM vt1, vt0, v0 NOT INDEXED WHERE (CASE WHEN v0.c0 THEN 0xffffffff9d7f89f2 END COLLATE BINARY) UNION ALL SELECT * FROM vt1, vt0, v0 WHERE ((NOT (CASE WHEN v0.c0 THEN 0xffffffff9d7f89f2 END COLLATE BINARY))) UNION ALL SELECT * FROM vt1, vt0, v0 WHERE (((CASE WHEN v0.c0 THEN 0xffffffff9d7f89f2 END COLLATE BINARY) ISNULL));
SELECT * FROM vt1, vt0, v0;
SELECT DISTINCT * FROM vt0, v0, vt2, vt1;
SELECT DISTINCT * FROM vt0, v0, vt2, vt1 WHERE (((((((vt1.c0)OR(vt2.c0)))AND(vt0.c0)))OR(v0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt0, v0, vt2, vt1 WHERE ((NOT (((((((vt1.c0)OR(vt2.c0)))AND(vt0.c0)))OR(v0.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT * FROM vt0, v0, vt2, vt1 WHERE (((((((((vt1.c0)OR(vt2.c0)))AND(vt0.c0)))OR(v0.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT * FROM vt0, v0, vt2, vt1;
SELECT ALL v0.c0, vt1.c0, vt0.c0, vt2.c0 FROM v0, vt1, vt0, vt2 GROUP BY v0.c0, vt1.c0, vt0.c0, vt2.c0;
SELECT v0.c0, vt1.c0, vt0.c0, vt2.c0 FROM v0, vt1, vt0, vt2 WHERE (CAST(((vt0.c0) NOT NULL) AS TEXT)) GROUP BY v0.c0, vt1.c0, vt0.c0, vt2.c0 UNION SELECT v0.c0, vt1.c0, vt0.c0, vt2.c0 FROM v0, vt1, vt0, vt2 WHERE ((NOT (CAST(((vt0.c0) NOT NULL) AS TEXT)))) GROUP BY v0.c0, vt1.c0, vt0.c0, vt2.c0 UNION SELECT ALL v0.c0, vt1.c0, vt0.c0, vt2.c0 FROM v0, vt1, vt0, vt2 WHERE (((CAST(((vt0.c0) NOT NULL) AS TEXT)) ISNULL)) GROUP BY v0.c0, vt1.c0, vt0.c0, vt2.c0;
SELECT ALL v0.c0, vt1.c0, vt0.c0, vt2.c0 FROM v0, vt1, vt0, vt2 GROUP BY v0.c0, vt1.c0, vt0.c0, vt2.c0;
SELECT ALL v0.c0, vt1.c0 FROM v0, vt1 GROUP BY v0.c0, vt1.c0;
SELECT v0.c0, vt1.c0 FROM v0, vt1 GROUP BY v0.c0, vt1.c0 HAVING MAX(CAST(GROUP_CONCAT(MAX(SUM(v0.c0))) AS TEXT)) UNION ALL SELECT v0.c0, vt1.c0 FROM v0, vt1 GROUP BY v0.c0, vt1.c0 HAVING (NOT (MAX(CAST(GROUP_CONCAT(MAX(SUM(v0.c0))) AS TEXT)))) UNION ALL SELECT ALL v0.c0, vt1.c0 FROM v0, vt1 GROUP BY v0.c0, vt1.c0 HAVING ((MAX(CAST(GROUP_CONCAT(MAX(SUM(v0.c0))) AS TEXT))) ISNULL);
SELECT ALL vt0.c0, vt2.c0 FROM vt2, v0, vt0, vt1;
SELECT vt0.c0, vt2.c0 FROM vt2, v0, vt0, vt1 WHERE (((((((vt0.c0)AND(0.10365979757908617)))OR(vt0.c0)))%(((vt1.c0) IS TRUE)))) UNION ALL SELECT vt0.c0, vt2.c0 FROM vt2, v0, vt0, vt1 WHERE ((NOT (((((((vt0.c0)AND(0.10365979757908617)))OR(vt0.c0)))%(((vt1.c0) IS TRUE)))))) UNION ALL SELECT vt0.c0, vt2.c0 FROM vt2, v0, vt0, vt1 WHERE (((((((((vt0.c0)AND(0.10365979757908617)))OR(vt0.c0)))%(((vt1.c0) IS TRUE)))) ISNULL));
SELECT ALL vt0.c0, vt2.c0 FROM vt2, v0, vt0, vt1;
SELECT DISTINCT vt2.c0 FROM vt2, v0, vt0, vt1;
SELECT DISTINCT vt2.c0 FROM vt2, v0, vt0, vt1 WHERE (((CASE WHEN vt2.c0 THEN v0.c0 ELSE vt1.c0 END) NOTNULL)) UNION SELECT DISTINCT vt2.c0 FROM vt2, v0, vt0, vt1 WHERE ((NOT (((CASE WHEN vt2.c0 THEN v0.c0 ELSE vt1.c0 END) NOTNULL)))) UNION SELECT DISTINCT vt2.c0 FROM vt2, v0, vt0, vt1 WHERE (((((CASE WHEN vt2.c0 THEN v0.c0 ELSE vt1.c0 END) NOTNULL)) ISNULL));
SELECT DISTINCT vt2.c0 FROM vt2, v0, vt0, vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (CAST(CAST(vt1.c0 AS NUMERIC) AS REAL)) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (CAST(CAST(vt1.c0 AS NUMERIC) AS REAL)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((CAST(CAST(vt1.c0 AS NUMERIC) AS REAL)) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c0 FROM v0, vt0, vt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, vt0, vt1 GROUP BY vt0.c0 HAVING ((COUNT(*)) BETWEEN (COUNT(*) COLLATE NOCASE) AND (((AVG(v0.c0)) NOTNULL))) UNION ALL SELECT ALL vt0.c0 FROM v0, vt0, vt1 GROUP BY vt0.c0 HAVING (NOT (((COUNT(*)) BETWEEN (COUNT(*) COLLATE NOCASE) AND (((AVG(v0.c0)) NOTNULL))))) UNION ALL SELECT ALL vt0.c0 FROM v0, vt0, vt1 GROUP BY vt0.c0 HAVING ((((COUNT(*)) BETWEEN (COUNT(*) COLLATE NOCASE) AND (((AVG(v0.c0)) NOTNULL)))) ISNULL);
SELECT vt0.c0 FROM v0, vt0, vt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, vt0, vt1 GROUP BY vt0.c0 HAVING ((COUNT(*)) BETWEEN (COUNT(*) COLLATE NOCASE) AND (((AVG(v0.c0)) NOTNULL))) UNION ALL SELECT ALL vt0.c0 FROM v0, vt0, vt1 GROUP BY vt0.c0 HAVING (NOT (((COUNT(*)) BETWEEN (COUNT(*) COLLATE NOCASE) AND (((AVG(v0.c0)) NOTNULL))))) UNION ALL SELECT ALL vt0.c0 FROM v0, vt0, vt1 GROUP BY vt0.c0 HAVING ((((COUNT(*)) BETWEEN (COUNT(*) COLLATE NOCASE) AND (((AVG(v0.c0)) NOTNULL)))) ISNULL);
SELECT vt0.c0 FROM v0, vt0, vt1 GROUP BY vt0.c0;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE ((~ (((vt0.c0) NOT NULL)))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((~ (((vt0.c0) NOT NULL)))))) UNION ALL SELECT * FROM vt0 WHERE ((((~ (((vt0.c0) NOT NULL)))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt1.c0, v0.c0, vt2.c0 FROM vt2, vt1, v0, vt0 NOT INDEXED;
SELECT DISTINCT vt1.c0, v0.c0, vt2.c0 FROM vt2, vt1, v0, vt0 WHERE ((~ (((v0.c0) IS TRUE)))) UNION SELECT DISTINCT vt1.c0, v0.c0, vt2.c0 FROM vt2, vt1, v0, vt0 WHERE ((NOT ((~ (((v0.c0) IS TRUE)))))) UNION SELECT DISTINCT vt1.c0, v0.c0, vt2.c0 FROM vt2, vt1, v0, vt0 WHERE ((((~ (((v0.c0) IS TRUE)))) ISNULL));
SELECT DISTINCT vt1.c0, v0.c0, vt2.c0 FROM vt2, vt1, v0, vt0 NOT INDEXED;
SELECT ALL vt2.c0 FROM vt2, vt0, vt1, v0 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2, vt0, vt1, v0 WHERE ((- (((vt2.c0) IS TRUE)))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2, vt0, vt1, v0 WHERE ((NOT ((- (((vt2.c0) IS TRUE)))))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2, vt0, vt1, v0 WHERE ((((- (((vt2.c0) IS TRUE)))) ISNULL)) GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2, vt0, vt1, v0 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 INNER JOIN v0 ON vt2.c0 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 INNER JOIN v0 ON vt2.c0 GROUP BY vt2.c0 HAVING MAX(GROUP_CONCAT(COUNT(v0.c0))) UNION ALL SELECT ALL vt2.c0 FROM vt2 INNER JOIN v0 ON vt2.c0 GROUP BY vt2.c0 HAVING (NOT (MAX(GROUP_CONCAT(COUNT(v0.c0))))) UNION ALL SELECT ALL vt2.c0 FROM vt2 INNER JOIN v0 ON vt2.c0 GROUP BY vt2.c0 HAVING ((MAX(GROUP_CONCAT(COUNT(v0.c0)))) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE ((((x'')) NOT BETWEEN ((((((v0.c0)OR(v0.c0)))AND(v0.c0)))) AND ((((v0.c0) IS TRUE))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((x'')) NOT BETWEEN ((((((v0.c0)OR(v0.c0)))AND(v0.c0)))) AND ((((v0.c0) IS TRUE))))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((((((x'')) NOT BETWEEN ((((((v0.c0)OR(v0.c0)))AND(v0.c0)))) AND ((((v0.c0) IS TRUE))))) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT * FROM vt2, vt1 NOT INDEXED, vt0;
SELECT DISTINCT * FROM vt2, vt1, vt0 WHERE ('') UNION SELECT DISTINCT * FROM vt2, vt1, vt0 WHERE ((NOT (''))) UNION SELECT DISTINCT * FROM vt2, vt1, vt0 WHERE ((('') ISNULL));
SELECT DISTINCT * FROM vt2, vt1 NOT INDEXED, vt0;
SELECT v0.c0, vt1.c0, vt0.c0 FROM vt2, vt0, vt1, v0 GROUP BY v0.c0, vt1.c0, vt0.c0;
SELECT ALL v0.c0, vt1.c0, vt0.c0 FROM vt2, vt0, vt1, v0 WHERE (((((NOT (vt2.c0))))==((((vt1.c0)+(vt2.c0)))))) GROUP BY v0.c0, vt1.c0, vt0.c0 UNION SELECT ALL v0.c0, vt1.c0, vt0.c0 FROM vt2, vt0, vt1, v0 WHERE ((NOT (((((NOT (vt2.c0))))=((((vt1.c0)+(vt2.c0)))))))) GROUP BY v0.c0, vt1.c0, vt0.c0 UNION SELECT v0.c0, vt1.c0, vt0.c0 FROM vt2, vt0, vt1, v0 WHERE (((((((NOT (vt2.c0))))=((((vt1.c0)+(vt2.c0)))))) ISNULL)) GROUP BY v0.c0, vt1.c0, vt0.c0;
SELECT v0.c0, vt1.c0, vt0.c0 FROM vt2, vt0, vt1, v0 GROUP BY v0.c0, vt1.c0, vt0.c0;
SELECT ALL vt1.c0 FROM vt1, v0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, v0 GROUP BY vt1.c0 HAVING (((COUNT(TOTAL(COUNT(*)))))!=((TOTAL(COUNT(*))))) UNION ALL SELECT ALL vt1.c0 FROM vt1, v0 GROUP BY vt1.c0 HAVING (NOT ((((COUNT(TOTAL(COUNT(*)))))<>((TOTAL(COUNT(*))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1, v0 GROUP BY vt1.c0 HAVING (((((COUNT(TOTAL(COUNT(*)))))!=((TOTAL(COUNT(*)))))) ISNULL);
SELECT ALL vt0.c0, vt1.c0, vt2.c0, v0.c0 FROM vt2, vt0, v0, vt1;
SELECT vt0.c0, vt1.c0, vt2.c0, v0.c0 FROM vt2, vt0, v0, vt1 WHERE (((((x'45581221')=(vt2.c0)))>>((('') IS FALSE)))) UNION ALL SELECT vt0.c0, vt1.c0, vt2.c0, v0.c0 FROM vt2, vt0, v0, vt1 WHERE ((NOT (((((x'45581221')==(vt2.c0)))>>((('') IS FALSE)))))) UNION ALL SELECT vt0.c0, vt1.c0, vt2.c0, v0.c0 FROM vt2, vt0, v0, vt1 WHERE (((((((x'45581221')=(vt2.c0)))>>((('') IS FALSE)))) ISNULL));
SELECT ALL vt0.c0, vt1.c0, vt2.c0, v0.c0 FROM vt2, vt0, v0, vt1;
SELECT DISTINCT vt1.c0 FROM v0, vt0, vt1, vt2;
SELECT DISTINCT vt1.c0 FROM v0, vt0, vt1, vt2 WHERE ((NOT (vt1.c0 COLLATE NOCASE))) UNION SELECT DISTINCT vt1.c0 FROM v0, vt0, vt1, vt2 WHERE ((NOT ((NOT (vt1.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT vt1.c0 FROM v0, vt0, vt1, vt2 WHERE ((((NOT (vt1.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT vt1.c0 FROM v0, vt0, vt1, vt2;
SELECT vt0.c0 FROM vt0, vt2 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, vt2 WHERE ((~ (CAST(vt0.c0 AS NUMERIC)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, vt2 WHERE ((NOT ((~ (CAST(vt0.c0 AS NUMERIC)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, vt2 WHERE ((((~ (CAST(vt0.c0 AS NUMERIC)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, vt2 GROUP BY vt0.c0;
SELECT vt2.c0, vt0.c0, vt1.c0 FROM vt2, vt1, vt0 GROUP BY vt2.c0, vt0.c0, vt1.c0;
SELECT ALL vt2.c0, vt0.c0, vt1.c0 FROM vt2, vt1, vt0 GROUP BY vt2.c0, vt0.c0, vt1.c0 HAVING CASE ((vt1.c0) NOT BETWEEN (MAX(vt2.c0)) AND (GROUP_CONCAT(vt2.c0)))  WHEN ((MIN(TOTAL(AVG(AVG(SUM(TOTAL(vt0.c0)))))))<(vt1.c0)) THEN SUM(COUNT(*)) END UNION ALL SELECT ALL vt2.c0, vt0.c0, vt1.c0 FROM vt2, vt1, vt0 GROUP BY vt2.c0, vt0.c0, vt1.c0 HAVING (NOT (CASE ((vt1.c0) NOT BETWEEN (MAX(vt2.c0)) AND (GROUP_CONCAT(vt2.c0)))  WHEN ((MIN(TOTAL(AVG(AVG(SUM(TOTAL(vt0.c0)))))))<(vt1.c0)) THEN SUM(COUNT(*)) END)) UNION ALL SELECT vt2.c0, vt0.c0, vt1.c0 FROM vt2, vt1, vt0 GROUP BY vt2.c0, vt0.c0, vt1.c0 HAVING ((CASE ((vt1.c0) NOT BETWEEN (MAX(vt2.c0)) AND (GROUP_CONCAT(vt2.c0)))  WHEN ((MIN(TOTAL(AVG(AVG(SUM(TOTAL(vt0.c0)))))))<(vt1.c0)) THEN SUM(COUNT(*)) END) ISNULL);
SELECT vt2.c0, vt0.c0, vt1.c0 FROM vt0, vt1, v0, vt2;
SELECT ALL vt2.c0, vt0.c0, vt1.c0 FROM vt0, vt1, v0, vt2 WHERE ((((((v0.c0))>((x'398d'))))|(((vt0.c0) NOT NULL)))) UNION ALL SELECT vt2.c0, vt0.c0, vt1.c0 FROM vt0, vt1, v0, vt2 WHERE ((NOT ((((((v0.c0))>((x'398d'))))|(((vt0.c0) NOT NULL)))))) UNION ALL SELECT vt2.c0, vt0.c0, vt1.c0 FROM vt0, vt1, v0, vt2 WHERE ((((((((v0.c0))>((x'398d'))))|(((vt0.c0) NOT NULL)))) ISNULL));
SELECT vt2.c0, vt0.c0, vt1.c0 FROM vt0, vt1, v0, vt2;
SELECT DISTINCT vt2.c0 FROM vt2;
SELECT DISTINCT vt2.c0 FROM vt2 WHERE ((CASE WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END IN ())) UNION SELECT DISTINCT vt2.c0 FROM vt2 WHERE ((NOT ((CASE WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END IN ())))) UNION SELECT DISTINCT vt2.c0 FROM vt2 WHERE ((((CASE WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END IN ())) ISNULL));
SELECT DISTINCT vt2.c0 FROM vt2;
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 WHERE ((vt0.c0 IN ())) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, v0 WHERE ((NOT ((vt0.c0 IN ())))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, v0 WHERE ((((vt0.c0 IN ())) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT ALL v0.c0 FROM v0, vt0, vt2, vt1 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0, vt2, vt1 GROUP BY v0.c0 HAVING SUM(COUNT(*)) UNION ALL SELECT ALL v0.c0 FROM v0, vt0, vt2, vt1 GROUP BY v0.c0 HAVING (NOT (SUM(COUNT(*)))) UNION ALL SELECT v0.c0 FROM v0, vt0, vt2, vt1 GROUP BY v0.c0 HAVING ((SUM(COUNT(*))) ISNULL);
SELECT ALL MIN((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) IN ())) FROM vt0 ORDER BY x'', CHAR((vt0.c0 IN ()))  NULLS LAST;
SELECT * FROM vt1, vt2;
SELECT ALL * FROM vt1, vt2 WHERE (((((vt1.c0) BETWEEN (vt2.c0) AND (vt2.c0)))>>(((vt2.c0)AND(vt1.c0))))) UNION ALL SELECT * FROM vt1, vt2 WHERE ((NOT (((((vt1.c0) BETWEEN (vt2.c0) AND (vt2.c0)))>>(((vt2.c0)AND(vt1.c0))))))) UNION ALL SELECT ALL * FROM vt1, vt2 WHERE (((((((vt1.c0) BETWEEN (vt2.c0) AND (vt2.c0)))>>(((vt2.c0)AND(vt1.c0))))) ISNULL));
SELECT * FROM vt1, vt2;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (vt1.c0) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT * FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL v0.c0 FROM vt2, vt1, v0, vt0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt2, vt1, v0, vt0 WHERE ((((((vt0.c0))==((v0.c0)))) NOT BETWEEN ((vt1.c0 IN ())) AND ((+ (vt0.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt2, vt1, v0, vt0 WHERE ((NOT ((((((vt0.c0))==((v0.c0)))) NOT BETWEEN ((vt1.c0 IN ())) AND ((+ (vt0.c0))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt2, vt1, v0, vt0 WHERE ((((((((vt0.c0))=((v0.c0)))) NOT BETWEEN ((vt1.c0 IN ())) AND ((+ (vt0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt2, vt1, v0, vt0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING GROUP_CONCAT(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN SUM(v0.c0) THEN v0.c0 WHEN MAX(v0.c0) THEN COUNT(x'') ELSE SUM(v0.c0) END) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (GROUP_CONCAT(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN SUM(v0.c0) THEN v0.c0 WHEN MAX(v0.c0) THEN COUNT(x'') ELSE SUM(v0.c0) END))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((GROUP_CONCAT(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN SUM(v0.c0) THEN v0.c0 WHEN MAX(v0.c0) THEN COUNT(x'') ELSE SUM(v0.c0) END)) ISNULL);
SELECT ALL v0.c0, vt1.c0 FROM vt1, v0;
SELECT v0.c0, vt1.c0 FROM vt1, v0 WHERE ('RN2ᴪ8xl&') UNION ALL SELECT ALL v0.c0, vt1.c0 FROM vt1, v0 WHERE ((NOT ('RN2ᴪ8xl&'))) UNION ALL SELECT ALL v0.c0, vt1.c0 FROM vt1, v0 WHERE ((('RN2ᴪ8xl&') ISNULL));
SELECT ALL v0.c0, vt1.c0 FROM vt1, v0;
SELECT DISTINCT vt1.c0, vt2.c0, vt0.c0, v0.c0 FROM v0, vt0, vt1, vt2;
SELECT DISTINCT vt1.c0, vt2.c0, vt0.c0, v0.c0 FROM v0, vt0, vt1, vt2 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (v0.c0)))>=(vt2.c0))) UNION SELECT DISTINCT vt1.c0, vt2.c0, vt0.c0, v0.c0 FROM v0, vt0, vt1, vt2 WHERE ((NOT (((((vt1.c0) BETWEEN (vt1.c0) AND (v0.c0)))>=(vt2.c0))))) UNION SELECT DISTINCT vt1.c0, vt2.c0, vt0.c0, v0.c0 FROM v0, vt0, vt1, vt2 WHERE (((((((vt1.c0) BETWEEN (vt1.c0) AND (v0.c0)))>=(vt2.c0))) ISNULL));
SELECT DISTINCT vt1.c0, vt2.c0, vt0.c0, v0.c0 FROM v0, vt0, vt1, vt2;
SELECT v0.c0, vt0.c0, vt2.c0 FROM vt0, vt2, v0 GROUP BY v0.c0, vt0.c0, vt2.c0;
SELECT ALL v0.c0, vt0.c0, vt2.c0 FROM vt0, vt2, v0 WHERE (CASE vt2.c0 COLLATE NOCASE  WHEN ((vt0.c0) NOTNULL) THEN ((vt2.c0)GLOB(vt2.c0)) ELSE CAST(x'' AS BLOB) END) GROUP BY v0.c0, vt0.c0, vt2.c0 UNION SELECT v0.c0, vt0.c0, vt2.c0 FROM vt0, vt2, v0 WHERE ((NOT (CASE vt2.c0 COLLATE NOCASE  WHEN ((vt0.c0) NOTNULL) THEN ((vt2.c0)GLOB(vt2.c0)) ELSE CAST(x'' AS BLOB) END))) GROUP BY v0.c0, vt0.c0, vt2.c0 UNION SELECT ALL v0.c0, vt0.c0, vt2.c0 FROM vt0, vt2, v0 WHERE (((CASE vt2.c0 COLLATE NOCASE  WHEN ((vt0.c0) NOTNULL) THEN ((vt2.c0)GLOB(vt2.c0)) ELSE CAST(x'' AS BLOB) END) ISNULL)) GROUP BY v0.c0, vt0.c0, vt2.c0;
SELECT v0.c0, vt0.c0, vt2.c0 FROM vt0, vt2, v0 GROUP BY v0.c0, vt0.c0, vt2.c0;
SELECT ALL vt1.c0, v0.c0 FROM vt1, v0, vt0 GROUP BY vt1.c0, v0.c0;
SELECT ALL vt1.c0, v0.c0 FROM vt1, v0, vt0 GROUP BY vt1.c0, v0.c0 HAVING CAST(v0.c0 AS INTEGER) UNION ALL SELECT vt1.c0, v0.c0 FROM vt1, v0, vt0 GROUP BY vt1.c0, v0.c0 HAVING (NOT (CAST(v0.c0 AS INTEGER))) UNION ALL SELECT vt1.c0, v0.c0 FROM vt1, v0, vt0 GROUP BY vt1.c0, v0.c0 HAVING ((CAST(v0.c0 AS INTEGER)) ISNULL);
SELECT ALL vt1.c0, v0.c0 FROM vt1, v0, vt0 GROUP BY vt1.c0, v0.c0;
SELECT ALL vt1.c0, v0.c0 FROM vt1, v0, vt0 GROUP BY vt1.c0, v0.c0 HAVING CAST(v0.c0 AS INTEGER) UNION ALL SELECT vt1.c0, v0.c0 FROM vt1, v0, vt0 GROUP BY vt1.c0, v0.c0 HAVING (NOT (CAST(v0.c0 AS INTEGER))) UNION ALL SELECT vt1.c0, v0.c0 FROM vt1, v0, vt0 GROUP BY vt1.c0, v0.c0 HAVING ((CAST(v0.c0 AS INTEGER)) ISNULL);
SELECT ALL vt1.c0, v0.c0 FROM vt1, v0, vt0 GROUP BY vt1.c0, v0.c0;
SELECT ALL * FROM vt2 LEFT OUTER JOIN vt0 ON ((CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 ELSE vt2.c0 END)*(json_array_length(vt2.c0, v0.c0))) FULL OUTER JOIN v0 ON (SQLITE_COMPILEOPTION_GET(v0.c0) IN ());
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE ((((((((1817222597))<((v0.c0))))AND(x'')))AND((0.7597814000840483 IN (-639719078, v0.c0))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT ((((((((1817222597))<((v0.c0))))AND(x'')))AND((0.7597814000840483 IN (-639719078, v0.c0))))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((((((((((1817222597))<((v0.c0))))AND(x'')))AND((0.7597814000840483 IN (-639719078, v0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT vt2.c0, v0.c0 FROM v0, vt2, vt1 GROUP BY vt2.c0, v0.c0;
SELECT vt2.c0, v0.c0 FROM v0, vt2, vt1 WHERE (x'ce2e') GROUP BY vt2.c0, v0.c0 UNION SELECT vt2.c0, v0.c0 FROM v0, vt2, vt1 WHERE ((NOT (x'ce2e'))) GROUP BY vt2.c0, v0.c0 UNION SELECT vt2.c0, v0.c0 FROM v0, vt2, vt1 WHERE (((x'ce2e') ISNULL)) GROUP BY vt2.c0, v0.c0;
SELECT vt2.c0, v0.c0 FROM v0, vt2, vt1 GROUP BY vt2.c0, v0.c0;
SELECT v0.c0 FROM v0 NATURAL JOIN vt0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 NATURAL JOIN vt0 GROUP BY v0.c0 HAVING (AVG(COUNT(*)) IN ()) UNION ALL SELECT v0.c0 FROM v0 NATURAL JOIN vt0 GROUP BY v0.c0 HAVING (NOT ((AVG(COUNT(*)) IN ()))) UNION ALL SELECT v0.c0 FROM v0 NATURAL JOIN vt0 GROUP BY v0.c0 HAVING (((AVG(COUNT(*)) IN ())) ISNULL);
SELECT v0.c0 FROM v0 NATURAL JOIN vt0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 NATURAL JOIN vt0 GROUP BY v0.c0 HAVING (AVG(COUNT(*)) IN ()) UNION ALL SELECT v0.c0 FROM v0 NATURAL JOIN vt0 GROUP BY v0.c0 HAVING (NOT ((AVG(COUNT(*)) IN ()))) UNION ALL SELECT v0.c0 FROM v0 NATURAL JOIN vt0 GROUP BY v0.c0 HAVING (((AVG(COUNT(*)) IN ())) ISNULL);
SELECT v0.c0 FROM v0 NATURAL JOIN vt0 GROUP BY v0.c0;
SELECT ALL vt2.c0 FROM v0, vt2;
SELECT ALL vt2.c0 FROM v0, vt2 WHERE ((+ (((v0.c0) IS FALSE)))) UNION ALL SELECT ALL vt2.c0 FROM v0, vt2 WHERE ((NOT ((+ (((v0.c0) IS FALSE)))))) UNION ALL SELECT ALL vt2.c0 FROM v0, vt2 WHERE ((((+ (((v0.c0) IS FALSE)))) ISNULL));
SELECT ALL vt2.c0 FROM v0, vt2;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (NULLIF(DISTINCT vt0.c0, vt0.c0) COLLATE BINARY) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (NULLIF(DISTINCT vt0.c0, vt0.c0) COLLATE BINARY))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((NULLIF(DISTINCT vt0.c0, vt0.c0) COLLATE BINARY) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt2.c0, vt0.c0 FROM vt2, vt0 GROUP BY vt2.c0, vt0.c0;
SELECT ALL vt2.c0, vt0.c0 FROM vt2, vt0 WHERE (((CASE vt2.c0  WHEN vt0.c0 THEN vt0.c0 WHEN '1345673970' THEN vt2.c0 WHEN vt2.c0 THEN 0.8285104774716692 END)LIKE(CAST(-3.97083018E8 AS REAL)))) GROUP BY vt2.c0, vt0.c0 UNION SELECT ALL vt2.c0, vt0.c0 FROM vt2, vt0 WHERE ((NOT (((CASE vt2.c0  WHEN vt0.c0 THEN vt0.c0 WHEN '1345673970' THEN vt2.c0 WHEN vt2.c0 THEN 0.8285104774716692 END)LIKE(CAST(-3.97083018E8 AS REAL)))))) GROUP BY vt2.c0, vt0.c0 UNION SELECT vt2.c0, vt0.c0 FROM vt2, vt0 WHERE (((((CASE vt2.c0  WHEN vt0.c0 THEN vt0.c0 WHEN '1345673970' THEN vt2.c0 WHEN vt2.c0 THEN 0.8285104774716692 END)LIKE(CAST(-3.97083018E8 AS REAL)))) ISNULL)) GROUP BY vt2.c0, vt0.c0;
SELECT vt2.c0, vt0.c0 FROM vt2, vt0 GROUP BY vt2.c0, vt0.c0;
SELECT vt2.c0 FROM vt2, vt0 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2, vt0 NOT INDEXED GROUP BY vt2.c0 HAVING ((SUM(vt0.c0))OR(COUNT(GROUP_CONCAT(vt2.c0)))) UNION ALL SELECT vt2.c0 FROM vt2, vt0 GROUP BY vt2.c0 HAVING (NOT (((SUM(vt0.c0))OR(COUNT(GROUP_CONCAT(vt2.c0)))))) UNION ALL SELECT vt2.c0 FROM vt2, vt0 GROUP BY vt2.c0 HAVING ((((SUM(vt0.c0))OR(COUNT(GROUP_CONCAT(vt2.c0))))) ISNULL);
SELECT * FROM vt1, vt2, v0;
SELECT ALL * FROM vt1, vt2, v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN vt2.c0 END)OR(((((v0.c0)OR(vt1.c0)))AND(vt2.c0))))) UNION ALL SELECT ALL * FROM vt1, vt2, v0 WHERE ((NOT (((CASE v0.c0  WHEN v0.c0 THEN vt2.c0 END)OR(((((v0.c0)OR(vt1.c0)))AND(vt2.c0))))))) UNION ALL SELECT * FROM vt1, vt2, v0 WHERE (((((CASE v0.c0  WHEN v0.c0 THEN vt2.c0 END)OR(((((v0.c0)OR(vt1.c0)))AND(vt2.c0))))) ISNULL));
SELECT * FROM vt1, vt2, v0;
SELECT DISTINCT v0.c0 FROM vt1 FULL OUTER JOIN vt2 ON ((vt1.c0) ISNULL) COLLATE BINARY RIGHT OUTER JOIN v0 ON ((((vt2.c0) IS FALSE)) NOT BETWEEN (((v0.c0) NOTNULL)) AND ((~ (v0.c0))));
SELECT DISTINCT v0.c0 FROM vt1 FULL OUTER JOIN vt2 ON ((vt1.c0) ISNULL) COLLATE BINARY RIGHT OUTER JOIN v0 ON ((((vt2.c0) IS FALSE)) NOT BETWEEN (((v0.c0) NOTNULL)) AND ((~ (v0.c0)))) WHERE (DATETIME(((v0.c0)|(v0.c0)), vt1.c0, ((vt1.c0) NOT NULL))) UNION SELECT DISTINCT v0.c0 FROM vt1 FULL OUTER JOIN vt2 ON ((vt1.c0) ISNULL) COLLATE BINARY RIGHT OUTER JOIN v0 ON ((((vt2.c0) IS FALSE)) NOT BETWEEN (((v0.c0) NOTNULL)) AND ((~ (v0.c0)))) WHERE ((NOT (DATETIME(((v0.c0)|(v0.c0)), vt1.c0, ((vt1.c0) NOT NULL))))) UNION SELECT DISTINCT v0.c0 FROM vt1 FULL OUTER JOIN vt2 ON ((vt1.c0) ISNULL) COLLATE BINARY RIGHT OUTER JOIN v0 ON ((((vt2.c0) IS FALSE)) NOT BETWEEN (((v0.c0) NOTNULL)) AND ((~ (v0.c0)))) WHERE (((DATETIME(((v0.c0)|(v0.c0)), vt1.c0, ((vt1.c0) NOT NULL))) ISNULL));
SELECT DISTINCT v0.c0 FROM vt1 FULL OUTER JOIN vt2 ON ((vt1.c0) ISNULL) COLLATE BINARY RIGHT OUTER JOIN v0 ON ((((vt2.c0) IS FALSE)) NOT BETWEEN (((v0.c0) NOTNULL)) AND ((~ (v0.c0))));
SELECT ALL vt0.c0 FROM vt1, vt0, vt2 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, vt0, vt2 WHERE (TYPEOF(vt0.c0) COLLATE BINARY) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt1, vt0, vt2 WHERE ((NOT (TYPEOF(vt0.c0) COLLATE BINARY))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt1, vt0, vt2 WHERE (((TYPEOF(vt0.c0) COLLATE BINARY) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, vt0, vt2 GROUP BY vt0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING TOTAL((((COUNT(COUNT(SUM(vt1.c0))), vt1.c0, MIN(vt1.c0))) BETWEEN ((AVG(TOTAL(vt1.c0)), vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, COUNT(*))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (TOTAL((((COUNT(COUNT(SUM(vt1.c0))), vt1.c0, MIN(vt1.c0))) BETWEEN ((AVG(TOTAL(vt1.c0)), vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, COUNT(*))))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((TOTAL((((COUNT(COUNT(SUM(vt1.c0))), vt1.c0, MIN(vt1.c0))) BETWEEN ((AVG(TOTAL(vt1.c0)), vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, COUNT(*)))))) ISNULL);
SELECT ALL * FROM vt0, v0, vt2, vt1;
SELECT ALL * FROM vt0, v0, vt2, vt1 WHERE (((((vt1.c0 IN (vt0.c0))))>=(((((vt1.c0))<=((vt2.c0))))))) UNION ALL SELECT ALL * FROM vt0, v0, vt2, vt1 WHERE ((NOT (((((vt1.c0 IN (vt0.c0))))>=(((((vt1.c0))<=((vt2.c0))))))))) UNION ALL SELECT ALL * FROM vt0, v0, vt2, vt1 WHERE (((((((vt1.c0 IN (vt0.c0))))>=(((((vt1.c0))<=((vt2.c0))))))) ISNULL));
SELECT ALL * FROM vt0, v0, vt2, vt1;
SELECT DISTINCT * FROM v0, vt1, vt2;
SELECT DISTINCT * FROM v0, vt1, vt2 WHERE ((((vt2.c0, vt1.c0, vt1.c0, v0.c0, vt2.c0)) NOT BETWEEN (((NOT (v0.c0)), v0.c0, ((((v0.c0)AND('SgL*')))AND(0.7042406436576124)), (((vt2.c0, vt1.c0, vt2.c0)) NOT BETWEEN ((vt2.c0, vt2.c0, vt1.c0)) AND ((x'2260', vt1.c0, vt2.c0))), LIKELIHOOD(DISTINCT vt1.c0, 0.591475886360439))) AND ((vt2.c0 COLLATE BINARY, ((vt2.c0)*(vt2.c0)), (NOT (vt1.c0)), (+ (vt1.c0)), ((vt2.c0) ISNULL))))) UNION SELECT DISTINCT * FROM v0, vt1, vt2 WHERE ((NOT ((((vt2.c0, vt1.c0, vt1.c0, v0.c0, vt2.c0)) NOT BETWEEN (((NOT (v0.c0)), v0.c0, ((((v0.c0)AND('SgL*')))AND(0.7042406436576124)), (((vt2.c0, vt1.c0, vt2.c0)) NOT BETWEEN ((vt2.c0, vt2.c0, vt1.c0)) AND ((x'2260', vt1.c0, vt2.c0))), LIKELIHOOD(DISTINCT vt1.c0, 0.591475886360439))) AND ((vt2.c0 COLLATE BINARY, ((vt2.c0)*(vt2.c0)), (NOT (vt1.c0)), (+ (vt1.c0)), ((vt2.c0) ISNULL))))))) UNION SELECT DISTINCT * FROM v0, vt1, vt2 NOT INDEXED WHERE ((((((vt2.c0, vt1.c0, vt1.c0, v0.c0, vt2.c0)) NOT BETWEEN (((NOT (v0.c0)), v0.c0, ((((v0.c0)AND('SgL*')))AND(0.7042406436576124)), (((vt2.c0, vt1.c0, vt2.c0)) NOT BETWEEN ((vt2.c0, vt2.c0, vt1.c0)) AND ((x'2260', vt1.c0, vt2.c0))), LIKELIHOOD(DISTINCT vt1.c0, 0.591475886360439))) AND ((vt2.c0 COLLATE BINARY, ((vt2.c0)*(vt2.c0)), (NOT (vt1.c0)), (+ (vt1.c0)), ((vt2.c0) ISNULL))))) ISNULL));
SELECT DISTINCT * FROM v0, vt1, vt2;
SELECT vt2.c0, vt1.c0 FROM vt1, vt2 GROUP BY vt2.c0, vt1.c0;
SELECT ALL vt2.c0, vt1.c0 FROM vt1, vt2 WHERE (((((vt2.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))OR(((((vt2.c0)AND(vt2.c0)))AND(vt2.c0))))) GROUP BY vt2.c0, vt1.c0 UNION SELECT ALL vt2.c0, vt1.c0 FROM vt1, vt2 WHERE ((NOT (((((vt2.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))OR(((((vt2.c0)AND(vt2.c0)))AND(vt2.c0))))))) GROUP BY vt2.c0, vt1.c0 UNION SELECT vt2.c0, vt1.c0 FROM vt1, vt2 WHERE (((((((vt2.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))OR(((((vt2.c0)AND(vt2.c0)))AND(vt2.c0))))) ISNULL)) GROUP BY vt2.c0, vt1.c0;
SELECT vt2.c0, vt1.c0 FROM vt1, vt2 GROUP BY vt2.c0, vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL * FROM vt1 INNER JOIN vt0 ON ((((((((((((vt2.c0 COLLATE BINARY)OR(((vt0.c0)<>(vt2.c0)))))OR(vt0.c0)))AND((vt0.c0 IN ()))))AND((NOT (vt0.c0)))))OR(vt1.c0 COLLATE BINARY)))AND(CAST(vt2.c0 AS TEXT))) RIGHT OUTER JOIN vt2 ON (+ ((~ (vt1.c0))));
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((- (((((((((((((v0.c0)OR(v0.c0)))OR(NULL)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((- (((((((((((((v0.c0)OR(v0.c0)))OR(NULL)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0))))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((- (((((((((((((v0.c0)OR(v0.c0)))OR(NULL)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT vt1.c0, vt2.c0, v0.c0 FROM vt2 CROSS JOIN vt1 ON NULLIF((NOT (vt0.c0)), CAST(v0.c0 AS BLOB)) INNER JOIN v0 ON (((vt1.c0, vt1.c0, vt2.c0)) NOT BETWEEN (((vt2.c0 IN ('-232352064')), (((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))), vt2.c0 COLLATE NOCASE)) AND (((((vt0.c0)) NOT BETWEEN ((vt2.c0)) AND ((v0.c0))), ((vt0.c0)>=(vt2.c0)), vt1.c0 COLLATE NOCASE))) INNER JOIN vt0 ON '-858410118' GROUP BY vt1.c0, vt2.c0, v0.c0;
SELECT vt1.c0, vt2.c0, v0.c0 FROM vt2 CROSS JOIN vt1 ON NULLIF((NOT (vt0.c0)), CAST(v0.c0 AS BLOB)) INNER JOIN v0 ON (((vt1.c0, vt1.c0, vt2.c0)) NOT BETWEEN (((vt2.c0 IN ('-232352064')), (((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))), vt2.c0 COLLATE NOCASE)) AND (((((vt0.c0)) NOT BETWEEN ((vt2.c0)) AND ((v0.c0))), ((vt0.c0)>=(vt2.c0)), vt1.c0 COLLATE NOCASE))) INNER JOIN vt0 ON '-858410118' WHERE (CASE ((NULL)|(vt2.c0))  WHEN (NOT (vt1.c0)) THEN v0.c0 WHEN vt2.c0 COLLATE BINARY THEN '0.7816621602307403' WHEN NULL THEN CAST(v0.c0 AS BLOB) ELSE LIKELY(DISTINCT vt1.c0) END) GROUP BY vt1.c0, vt2.c0, v0.c0 UNION SELECT ALL vt1.c0, vt2.c0, v0.c0 FROM vt2 CROSS JOIN vt1 ON NULLIF((NOT (vt0.c0)), CAST(v0.c0 AS BLOB)) INNER JOIN v0 ON (((vt1.c0, vt1.c0, vt2.c0)) NOT BETWEEN (((vt2.c0 IN ('-232352064')), (((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))), vt2.c0 COLLATE NOCASE)) AND (((((vt0.c0)) NOT BETWEEN ((vt2.c0)) AND ((v0.c0))), ((vt0.c0)>=(vt2.c0)), vt1.c0 COLLATE NOCASE))) INNER JOIN vt0 ON '-858410118' WHERE ((NOT (CASE ((NULL)|(vt2.c0))  WHEN (NOT (vt1.c0)) THEN v0.c0 WHEN vt2.c0 COLLATE BINARY THEN '0.7816621602307403' WHEN NULL THEN CAST(v0.c0 AS BLOB) ELSE LIKELY(DISTINCT vt1.c0) END))) GROUP BY vt1.c0, vt2.c0, v0.c0 UNION SELECT vt1.c0, vt2.c0, v0.c0 FROM vt2 CROSS JOIN vt1 ON NULLIF((NOT (vt0.c0)), CAST(v0.c0 AS BLOB)) INNER JOIN v0 ON (((vt1.c0, vt1.c0, vt2.c0)) NOT BETWEEN (((vt2.c0 IN ('-232352064')), (((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))), vt2.c0 COLLATE NOCASE)) AND (((((vt0.c0)) NOT BETWEEN ((vt2.c0)) AND ((v0.c0))), ((vt0.c0)>=(vt2.c0)), vt1.c0 COLLATE NOCASE))) INNER JOIN vt0 ON '-858410118' WHERE (((CASE ((NULL)|(vt2.c0))  WHEN (NOT (vt1.c0)) THEN v0.c0 WHEN vt2.c0 COLLATE BINARY THEN '0.7816621602307403' WHEN NULL THEN CAST(v0.c0 AS BLOB) ELSE LIKELY(DISTINCT vt1.c0) END) ISNULL)) GROUP BY vt1.c0, vt2.c0, v0.c0;
SELECT vt1.c0, vt2.c0, v0.c0 FROM vt2 CROSS JOIN vt1 ON NULLIF((NOT (vt0.c0)), CAST(v0.c0 AS BLOB)) INNER JOIN v0 ON (((vt1.c0, vt1.c0, vt2.c0)) NOT BETWEEN (((vt2.c0 IN ('-232352064')), (((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))), vt2.c0 COLLATE NOCASE)) AND (((((vt0.c0)) NOT BETWEEN ((vt2.c0)) AND ((v0.c0))), ((vt0.c0)>=(vt2.c0)), vt1.c0 COLLATE NOCASE))) INNER JOIN vt0 ON '-858410118' GROUP BY vt1.c0, vt2.c0, v0.c0;
SELECT vt0.c0, vt2.c0, v0.c0, vt1.c0 FROM v0, vt0, vt1, vt2 GROUP BY vt0.c0, vt2.c0, v0.c0, vt1.c0;
SELECT vt0.c0, vt2.c0, v0.c0, vt1.c0 FROM v0, vt0, vt1, vt2 GROUP BY vt0.c0, vt2.c0, v0.c0, vt1.c0 HAVING (TOTAL(vt2.c0) IN ()) UNION ALL SELECT vt0.c0, vt2.c0, v0.c0, vt1.c0 FROM v0, vt0, vt1, vt2 GROUP BY vt0.c0, vt2.c0, v0.c0, vt1.c0 HAVING (NOT ((TOTAL(vt2.c0) IN ()))) UNION ALL SELECT ALL vt0.c0, vt2.c0, v0.c0, vt1.c0 FROM v0, vt0, vt1, vt2 GROUP BY vt0.c0, vt2.c0, v0.c0, vt1.c0 HAVING (((TOTAL(vt2.c0) IN ())) ISNULL);
SELECT vt0.c0, vt2.c0, v0.c0, vt1.c0 FROM v0, vt0, vt1, vt2 GROUP BY vt0.c0, vt2.c0, v0.c0, vt1.c0;
SELECT vt0.c0, vt2.c0, v0.c0, vt1.c0 FROM v0, vt0, vt1, vt2 GROUP BY vt0.c0, vt2.c0, v0.c0, vt1.c0 HAVING (TOTAL(vt2.c0) IN ()) UNION ALL SELECT vt0.c0, vt2.c0, v0.c0, vt1.c0 FROM v0, vt0, vt1, vt2 GROUP BY vt0.c0, vt2.c0, v0.c0, vt1.c0 HAVING (NOT ((TOTAL(vt2.c0) IN ()))) UNION ALL SELECT ALL vt0.c0, vt2.c0, v0.c0, vt1.c0 FROM v0, vt0, vt1, vt2 GROUP BY vt0.c0, vt2.c0, v0.c0, vt1.c0 HAVING (((TOTAL(vt2.c0) IN ())) ISNULL);
SELECT vt0.c0, vt2.c0, v0.c0, vt1.c0 FROM v0, vt0, vt1, vt2 GROUP BY vt0.c0, vt2.c0, v0.c0, vt1.c0;
SELECT ALL * FROM vt0, v0, vt2;
SELECT * FROM vt0, v0, vt2 WHERE (((((vt2.c0) NOT NULL)) IS FALSE)) UNION ALL SELECT ALL * FROM vt0, v0, vt2 WHERE ((NOT (((((vt2.c0) NOT NULL)) IS FALSE)))) UNION ALL SELECT * FROM vt0, v0, vt2 WHERE (((((((vt2.c0) NOT NULL)) IS FALSE)) ISNULL));
SELECT ALL * FROM vt0, v0, vt2;
SELECT DISTINCT * FROM vt1, v0;
SELECT DISTINCT * FROM vt1, v0 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN v0.c0 WHEN NULL THEN vt1.c0 WHEN vt1.c0 THEN v0.c0 END)||('-1292290148'))) UNION SELECT DISTINCT * FROM vt1, v0 WHERE ((NOT (((CASE vt1.c0  WHEN vt1.c0 THEN v0.c0 WHEN NULL THEN vt1.c0 WHEN vt1.c0 THEN v0.c0 END)||('-1292290148'))))) UNION SELECT DISTINCT * FROM vt1, v0 WHERE (((((CASE vt1.c0  WHEN vt1.c0 THEN v0.c0 WHEN NULL THEN vt1.c0 WHEN vt1.c0 THEN v0.c0 END)||('-1292290148'))) ISNULL));
SELECT DISTINCT * FROM vt1, v0;
SELECT vt1.c0, vt0.c0, vt2.c0, v0.c0 FROM v0, vt2, vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt2.c0, v0.c0;
SELECT vt1.c0, vt0.c0, vt2.c0, v0.c0 FROM v0, vt2, vt1, vt0 WHERE (((vt0.c0)/((vt2.c0 IN (v0.c0))))) GROUP BY vt1.c0, vt0.c0, vt2.c0, v0.c0 UNION SELECT ALL vt1.c0, vt0.c0, vt2.c0, v0.c0 FROM v0, vt2, vt1, vt0 WHERE ((NOT (((vt0.c0)/((vt2.c0 IN (v0.c0))))))) GROUP BY vt1.c0, vt0.c0, vt2.c0, v0.c0 UNION SELECT vt1.c0, vt0.c0, vt2.c0, v0.c0 FROM v0, vt2, vt1, vt0 WHERE (((((vt0.c0)/((vt2.c0 IN (v0.c0))))) ISNULL)) GROUP BY vt1.c0, vt0.c0, vt2.c0, v0.c0;
SELECT vt1.c0, vt0.c0, vt2.c0, v0.c0 FROM v0, vt2, vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt2.c0, v0.c0;
SELECT ALL vt0.c0, vt2.c0 FROM vt0, vt2 GROUP BY vt0.c0, vt2.c0;
SELECT ALL vt0.c0, vt2.c0 FROM vt0, vt2 GROUP BY vt0.c0, vt2.c0 HAVING UPPER(CASE vt2.c0  WHEN MAX('-1996846667') THEN vt2.c0 ELSE vt0.c0 END) UNION ALL SELECT ALL vt0.c0, vt2.c0 FROM vt0, vt2 GROUP BY vt0.c0, vt2.c0 HAVING (NOT (UPPER(CASE vt2.c0  WHEN MAX('-1996846667') THEN vt2.c0 ELSE vt0.c0 END))) UNION ALL SELECT vt0.c0, vt2.c0 FROM vt0, vt2 GROUP BY vt0.c0, vt2.c0 HAVING ((UPPER(CASE vt2.c0  WHEN MAX('-1996846667') THEN vt2.c0 ELSE vt0.c0 END)) ISNULL);
SELECT ALL vt0.c0, vt2.c0 FROM vt0, vt2 GROUP BY vt0.c0, vt2.c0;
SELECT ALL vt0.c0, vt2.c0 FROM vt0, vt2 GROUP BY vt0.c0, vt2.c0 HAVING UPPER(CASE vt2.c0  WHEN MAX('-1996846667') THEN vt2.c0 ELSE vt0.c0 END) UNION ALL SELECT ALL vt0.c0, vt2.c0 FROM vt0, vt2 GROUP BY vt0.c0, vt2.c0 HAVING (NOT (UPPER(CASE vt2.c0  WHEN MAX('-1996846667') THEN vt2.c0 ELSE vt0.c0 END))) UNION ALL SELECT vt0.c0, vt2.c0 FROM vt0, vt2 GROUP BY vt0.c0, vt2.c0 HAVING ((UPPER(CASE vt2.c0  WHEN MAX('-1996846667') THEN vt2.c0 ELSE vt0.c0 END)) ISNULL);
SELECT ALL vt0.c0, vt2.c0 FROM vt0, vt2 GROUP BY vt0.c0, vt2.c0;
SELECT ALL vt1.c0, vt2.c0, v0.c0, vt0.c0 FROM v0, vt2, vt0 NATURAL JOIN vt1;
SELECT ALL vt1.c0, vt2.c0, v0.c0, vt0.c0 FROM v0, vt2, vt0 NATURAL JOIN vt1 WHERE (((vt1.c0)GLOB(vt2.c0)) COLLATE RTRIM) UNION ALL SELECT vt1.c0, vt2.c0, v0.c0, vt0.c0 FROM v0, vt2, vt0 NATURAL JOIN vt1 WHERE ((NOT (((vt1.c0)GLOB(vt2.c0)) COLLATE RTRIM))) UNION ALL SELECT ALL vt1.c0, vt2.c0, v0.c0, vt0.c0 FROM v0, vt2, vt0 NATURAL JOIN vt1 WHERE (((((vt1.c0)GLOB(vt2.c0)) COLLATE RTRIM) ISNULL));
SELECT ALL vt1.c0, vt2.c0, v0.c0, vt0.c0 FROM v0, vt2, vt0 NATURAL JOIN vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (vt1.c0) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT * FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT v0.c0, vt0.c0 FROM v0, vt1, vt2, vt0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt1, vt2, vt0 WHERE (((((((vt2.c0) NOT BETWEEN (v0.c0) AND (vt2.c0)))AND(((v0.c0) NOT BETWEEN (vt2.c0) AND (vt0.c0)))))OR(((v0.c0) NOT NULL)))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM v0, vt1, vt2, vt0 WHERE ((NOT (((((((vt2.c0) NOT BETWEEN (v0.c0) AND (vt2.c0)))AND(((v0.c0) NOT BETWEEN (vt2.c0) AND (vt0.c0)))))OR(((v0.c0) NOT NULL)))))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM v0, vt1, vt2, vt0 WHERE (((((((((vt2.c0) NOT BETWEEN (v0.c0) AND (vt2.c0)))AND(((v0.c0) NOT BETWEEN (vt2.c0) AND (vt0.c0)))))OR(((v0.c0) NOT NULL)))) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt1, vt2, vt0 GROUP BY v0.c0, vt0.c0;
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING TOTAL(GROUP_CONCAT(MAX(AVG(GROUP_CONCAT(v0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(GROUP_CONCAT(MAX(AVG(GROUP_CONCAT(v0.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING ((TOTAL(GROUP_CONCAT(MAX(AVG(GROUP_CONCAT(v0.c0)))))) ISNULL);
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, NULL, vt1.c0)) AND ((vt1.c0, -173151252, vt1.c0))) COLLATE RTRIM) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, NULL, vt1.c0)) AND ((vt1.c0, -173151252, vt1.c0))) COLLATE RTRIM))) UNION ALL SELECT * FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, NULL, vt1.c0)) AND ((vt1.c0, -173151252, vt1.c0))) COLLATE RTRIM) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM vt1, v0, vt0;
SELECT DISTINCT * FROM vt1, v0, vt0 WHERE (UPPER(vt0.c0 COLLATE NOCASE)) UNION SELECT DISTINCT * FROM vt1, v0, vt0 WHERE ((NOT (UPPER(vt0.c0 COLLATE NOCASE)))) UNION SELECT DISTINCT * FROM vt1, v0, vt0 WHERE (((UPPER(vt0.c0 COLLATE NOCASE)) ISNULL));
SELECT DISTINCT * FROM vt1, v0, vt0;
SELECT v0.c0, vt1.c0 FROM vt1 CROSS JOIN vt2 ON ((((NULL)AND(vt1.c0 COLLATE RTRIM)))OR((v0.c0 IN ()))) FULL OUTER JOIN v0 ON ((((((((((v0.c0)||(vt1.c0)))AND((NOT (vt2.c0)))))AND(NULL)))AND(((vt1.c0) BETWEEN ('U9WnCY') AND (vt2.c0)))))OR(((vt1.c0)>(vt2.c0)))) GROUP BY v0.c0, vt1.c0;
SELECT v0.c0, vt1.c0 FROM vt1 CROSS JOIN vt2 ON ((((NULL)AND(vt1.c0 COLLATE RTRIM)))OR((v0.c0 IN ()))) FULL OUTER JOIN v0 ON ((((((((((v0.c0)||(vt1.c0)))AND((NOT (vt2.c0)))))AND(NULL)))AND(((vt1.c0) BETWEEN ('U9WnCY') AND (vt2.c0)))))OR(((vt1.c0)>(vt2.c0)))) WHERE ((v0.c0 COLLATE BINARY IN ())) GROUP BY v0.c0, vt1.c0 UNION SELECT ALL v0.c0, vt1.c0 FROM vt1 CROSS JOIN vt2 ON ((((NULL)AND(vt1.c0 COLLATE RTRIM)))OR((v0.c0 IN ()))) FULL OUTER JOIN v0 ON ((((((((((v0.c0)||(vt1.c0)))AND((NOT (vt2.c0)))))AND(NULL)))AND(((vt1.c0) BETWEEN ('U9WnCY') AND (vt2.c0)))))OR(((vt1.c0)>(vt2.c0)))) WHERE ((NOT ((v0.c0 COLLATE BINARY IN ())))) GROUP BY v0.c0, vt1.c0 UNION SELECT v0.c0, vt1.c0 FROM vt1 CROSS JOIN vt2 ON ((((NULL)AND(vt1.c0 COLLATE RTRIM)))OR((v0.c0 IN ()))) FULL OUTER JOIN v0 ON ((((((((((v0.c0)||(vt1.c0)))AND((NOT (vt2.c0)))))AND(NULL)))AND(((vt1.c0) BETWEEN ('U9WnCY') AND (vt2.c0)))))OR(((vt1.c0)>(vt2.c0)))) WHERE ((((v0.c0 COLLATE BINARY IN ())) ISNULL)) GROUP BY v0.c0, vt1.c0;
SELECT v0.c0, vt1.c0 FROM vt1 CROSS JOIN vt2 ON ((((NULL)AND(vt1.c0 COLLATE RTRIM)))OR((v0.c0 IN ()))) FULL OUTER JOIN v0 ON ((((((((((v0.c0)||(vt1.c0)))AND((NOT (vt2.c0)))))AND(NULL)))AND(((vt1.c0) BETWEEN ('U9WnCY') AND (vt2.c0)))))OR(((vt1.c0)>(vt2.c0)))) GROUP BY v0.c0, vt1.c0;
SELECT ALL v0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON (NOT (TRIM(v0.c0))) INNER JOIN vt1 ON ((CASE WHEN vt0.c0 THEN vt0.c0 END)-((((v0.c0, vt1.c0, v0.c0)) BETWEEN ((v0.c0, vt1.c0, vt0.c0)) AND ((vt1.c0, vt0.c0, v0.c0))))) GROUP BY v0.c0;
SELECT v0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON (NOT (TRIM(v0.c0))) INNER JOIN vt1 ON ((CASE WHEN vt0.c0 THEN vt0.c0 END)-((((v0.c0, vt1.c0, v0.c0)) BETWEEN ((v0.c0, vt1.c0, vt0.c0)) AND ((vt1.c0, vt0.c0, v0.c0))))) GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT v0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON (NOT (TRIM(v0.c0))) INNER JOIN vt1 ON ((CASE WHEN vt0.c0 THEN vt0.c0 END)-((((v0.c0, vt1.c0, v0.c0)) BETWEEN ((v0.c0, vt1.c0, vt0.c0)) AND ((vt1.c0, vt0.c0, v0.c0))))) GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON (NOT (TRIM(v0.c0))) INNER JOIN vt1 ON ((CASE WHEN vt0.c0 THEN vt0.c0 END)-((((v0.c0, vt1.c0, v0.c0)) BETWEEN ((v0.c0, vt1.c0, vt0.c0)) AND ((vt1.c0, vt0.c0, v0.c0))))) GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON (NOT (TRIM(v0.c0))) INNER JOIN vt1 ON ((CASE WHEN vt0.c0 THEN vt0.c0 END)-((((v0.c0, vt1.c0, v0.c0)) BETWEEN ((v0.c0, vt1.c0, vt0.c0)) AND ((vt1.c0, vt0.c0, v0.c0))))) GROUP BY v0.c0;
SELECT v0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON (NOT (TRIM(v0.c0))) INNER JOIN vt1 ON ((CASE WHEN vt0.c0 THEN vt0.c0 END)-((((v0.c0, vt1.c0, v0.c0)) BETWEEN ((v0.c0, vt1.c0, vt0.c0)) AND ((vt1.c0, vt0.c0, v0.c0))))) GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT v0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON (NOT (TRIM(v0.c0))) INNER JOIN vt1 ON ((CASE WHEN vt0.c0 THEN vt0.c0 END)-((((v0.c0, vt1.c0, v0.c0)) BETWEEN ((v0.c0, vt1.c0, vt0.c0)) AND ((vt1.c0, vt0.c0, v0.c0))))) GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON (NOT (TRIM(v0.c0))) INNER JOIN vt1 ON ((CASE WHEN vt0.c0 THEN vt0.c0 END)-((((v0.c0, vt1.c0, v0.c0)) BETWEEN ((v0.c0, vt1.c0, vt0.c0)) AND ((vt1.c0, vt0.c0, v0.c0))))) GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON (NOT (TRIM(v0.c0))) INNER JOIN vt1 ON ((CASE WHEN vt0.c0 THEN vt0.c0 END)-((((v0.c0, vt1.c0, v0.c0)) BETWEEN ((v0.c0, vt1.c0, vt0.c0)) AND ((vt1.c0, vt0.c0, v0.c0))))) GROUP BY v0.c0;
SELECT v0.c0, vt1.c0, vt0.c0 FROM vt0, v0 RIGHT OUTER JOIN vt1 ON CASE -1671639642 COLLATE RTRIM  WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN ((v0.c0)>>(vt0.c0)) WHEN (((v0.c0, v0.c0, '~Y'))=((vt0.c0, v0.c0, vt0.c0))) THEN 0.42469211936858675 WHEN vt1.c0 COLLATE BINARY THEN x'07dd' ELSE (vt1.c0 IN ()) END;
SELECT ALL v0.c0, vt1.c0, vt0.c0 FROM vt0, v0 RIGHT OUTER JOIN vt1 ON CASE -1671639642 COLLATE RTRIM  WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN ((v0.c0)>>(vt0.c0)) WHEN (((v0.c0, v0.c0, '~Y'))=((vt0.c0, v0.c0, vt0.c0))) THEN 0.42469211936858675 WHEN vt1.c0 COLLATE BINARY THEN x'07dd' ELSE (vt1.c0 IN ()) END WHERE ((((0xffffffffd160726c)*(vt0.c0)) IN ())) UNION ALL SELECT ALL v0.c0, vt1.c0, vt0.c0 FROM vt0, v0 RIGHT OUTER JOIN vt1 ON CASE -1671639642 COLLATE RTRIM  WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN ((v0.c0)>>(vt0.c0)) WHEN (((v0.c0, v0.c0, '~Y'))=((vt0.c0, v0.c0, vt0.c0))) THEN 0.42469211936858675 WHEN vt1.c0 COLLATE BINARY THEN x'07dd' ELSE (vt1.c0 IN ()) END WHERE ((NOT ((((0Xffffffffd160726c)*(vt0.c0)) IN ())))) UNION ALL SELECT v0.c0, vt1.c0, vt0.c0 FROM vt0, v0 RIGHT OUTER JOIN vt1 ON CASE -1671639642 COLLATE RTRIM  WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN ((v0.c0)>>(vt0.c0)) WHEN (((v0.c0, v0.c0, '~Y'))==((vt0.c0, v0.c0, vt0.c0))) THEN 0.42469211936858675 WHEN vt1.c0 COLLATE BINARY THEN x'07dd' ELSE (vt1.c0 IN ()) END WHERE ((((((0Xffffffffd160726c)*(vt0.c0)) IN ())) ISNULL));
SELECT v0.c0, vt1.c0, vt0.c0 FROM vt0, v0 RIGHT OUTER JOIN vt1 ON CASE -1671639642 COLLATE RTRIM  WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN ((v0.c0)>>(vt0.c0)) WHEN (((v0.c0, v0.c0, '~Y'))=((vt0.c0, v0.c0, vt0.c0))) THEN 0.42469211936858675 WHEN vt1.c0 COLLATE BINARY THEN x'07dd' ELSE (vt1.c0 IN ()) END;
SELECT DISTINCT vt1.c0 FROM v0, vt1, vt2;
SELECT DISTINCT vt1.c0 FROM v0, vt1, vt2 WHERE (CAST(v0.c0 AS BLOB)) UNION SELECT DISTINCT vt1.c0 FROM v0, vt1, vt2 WHERE ((NOT (CAST(v0.c0 AS BLOB)))) UNION SELECT DISTINCT vt1.c0 FROM v0, vt1, vt2 WHERE (((CAST(v0.c0 AS BLOB)) ISNULL));
SELECT DISTINCT vt1.c0 FROM v0, vt1, vt2;
SELECT ALL vt1.c0, vt2.c0 FROM vt2, vt1 GROUP BY vt1.c0, vt2.c0;
SELECT vt1.c0, vt2.c0 FROM vt2, vt1 WHERE ((((((vt1.c0)<(vt1.c0))))=(((((vt2.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))) GROUP BY vt1.c0, vt2.c0 UNION SELECT vt1.c0, vt2.c0 FROM vt2, vt1 WHERE ((NOT ((((((vt1.c0)<(vt1.c0))))==(((((vt2.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))))) GROUP BY vt1.c0, vt2.c0 UNION SELECT vt1.c0, vt2.c0 FROM vt2, vt1 WHERE ((((((((vt1.c0)<(vt1.c0))))=(((((vt2.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))) ISNULL)) GROUP BY vt1.c0, vt2.c0;
SELECT ALL vt1.c0, vt2.c0 FROM vt2, vt1 GROUP BY vt1.c0, vt2.c0;
SELECT v0.c0 FROM vt0 FULL OUTER JOIN v0 ON ((vt0.c0 COLLATE NOCASE) BETWEEN (((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))) AND (((v0.c0)<=(v0.c0)))) GROUP BY v0.c0;
SELECT v0.c0 FROM vt0 FULL OUTER JOIN v0 ON ((vt0.c0 COLLATE NOCASE) BETWEEN (((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))) AND (((v0.c0)<=(v0.c0)))) GROUP BY v0.c0 HAVING (json_valid(v0.c0) IN ()) UNION ALL SELECT v0.c0 FROM vt0 FULL OUTER JOIN v0 ON ((vt0.c0 COLLATE NOCASE) BETWEEN (((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))) AND (((v0.c0)<=(v0.c0)))) GROUP BY v0.c0 HAVING (NOT ((json_valid(v0.c0) IN ()))) UNION ALL SELECT v0.c0 FROM vt0 FULL OUTER JOIN v0 ON ((vt0.c0 COLLATE NOCASE) BETWEEN (((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))) AND (((v0.c0)<=(v0.c0)))) GROUP BY v0.c0 HAVING (((json_valid(v0.c0) IN ())) ISNULL);
SELECT v0.c0 FROM vt0 FULL OUTER JOIN v0 ON ((vt0.c0 COLLATE NOCASE) BETWEEN (((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))) AND (((v0.c0)<=(v0.c0)))) GROUP BY v0.c0;
SELECT v0.c0 FROM vt0 FULL OUTER JOIN v0 ON ((vt0.c0 COLLATE NOCASE) BETWEEN (((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))) AND (((v0.c0)<=(v0.c0)))) GROUP BY v0.c0 HAVING (json_valid(v0.c0) IN ()) UNION ALL SELECT v0.c0 FROM vt0 FULL OUTER JOIN v0 ON ((vt0.c0 COLLATE NOCASE) BETWEEN (((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))) AND (((v0.c0)<=(v0.c0)))) GROUP BY v0.c0 HAVING (NOT ((json_valid(v0.c0) IN ()))) UNION ALL SELECT v0.c0 FROM vt0 FULL OUTER JOIN v0 ON ((vt0.c0 COLLATE NOCASE) BETWEEN (((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))) AND (((v0.c0)<=(v0.c0)))) GROUP BY v0.c0 HAVING (((json_valid(v0.c0) IN ())) ISNULL);
SELECT v0.c0 FROM vt0 FULL OUTER JOIN v0 ON ((vt0.c0 COLLATE NOCASE) BETWEEN (((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))) AND (((v0.c0)<=(v0.c0)))) GROUP BY v0.c0;
SELECT vt2.c0 FROM vt2, vt0;
SELECT vt2.c0 FROM vt2, vt0 WHERE (CAST(((vt0.c0) IS FALSE) AS NUMERIC)) UNION ALL SELECT ALL vt2.c0 FROM vt2, vt0 WHERE ((NOT (CAST(((vt0.c0) IS FALSE) AS NUMERIC)))) UNION ALL SELECT vt2.c0 FROM vt2, vt0 WHERE (((CAST(((vt0.c0) IS FALSE) AS NUMERIC)) ISNULL));
SELECT vt2.c0 FROM vt2, vt0;
SELECT DISTINCT vt2.c0, vt1.c0 FROM vt1 RIGHT OUTER JOIN vt2 ON ((CAST(0.6107236233746444 AS REAL)) BETWEEN (((((vt2.c0)OR(vt2.c0)))AND(vt2.c0))) AND ((vt1.c0 IN (vt2.c0))));
SELECT DISTINCT vt2.c0, vt1.c0 FROM vt1 RIGHT OUTER JOIN vt2 ON ((CAST(0.6107236233746444 AS REAL)) BETWEEN (((((vt2.c0)OR(vt2.c0)))AND(vt2.c0))) AND ((vt1.c0 IN (vt2.c0)))) WHERE ('-1060231684') UNION SELECT DISTINCT vt2.c0, vt1.c0 FROM vt1 RIGHT OUTER JOIN vt2 ON ((CAST(0.6107236233746444 AS REAL)) BETWEEN (((((vt2.c0)OR(vt2.c0)))AND(vt2.c0))) AND ((vt1.c0 IN (vt2.c0)))) WHERE ((NOT ('-1060231684'))) UNION SELECT DISTINCT vt2.c0, vt1.c0 FROM vt1 RIGHT OUTER JOIN vt2 ON ((CAST(0.6107236233746444 AS REAL)) BETWEEN (((((vt2.c0)OR(vt2.c0)))AND(vt2.c0))) AND ((vt1.c0 IN (vt2.c0)))) WHERE ((('-1060231684') ISNULL));
SELECT DISTINCT vt2.c0, vt1.c0 FROM vt1 RIGHT OUTER JOIN vt2 ON ((CAST(0.6107236233746444 AS REAL)) BETWEEN (((((vt2.c0)OR(vt2.c0)))AND(vt2.c0))) AND ((vt1.c0 IN (vt2.c0))));
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((((NOT (v0.c0))) BETWEEN (((v0.c0)==(v0.c0))) AND (CAST(v0.c0 AS NUMERIC)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((((NOT (v0.c0))) BETWEEN (((v0.c0)=(v0.c0))) AND (CAST(v0.c0 AS NUMERIC)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((((NOT (v0.c0))) BETWEEN (((v0.c0)=(v0.c0))) AND (CAST(v0.c0 AS NUMERIC)))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT(vt0.c0) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(vt0.c0)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT(vt0.c0) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(vt0.c0)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt2.c0 FROM vt2;
SELECT vt2.c0 FROM vt2 WHERE (CASE WHEN vt2.c0 COLLATE NOCASE THEN UNLIKELY(DISTINCT vt2.c0) ELSE vt2.c0 COLLATE BINARY END) UNION ALL SELECT vt2.c0 FROM vt2 WHERE ((NOT (CASE WHEN vt2.c0 COLLATE NOCASE THEN UNLIKELY(DISTINCT vt2.c0) ELSE vt2.c0 COLLATE BINARY END))) UNION ALL SELECT ALL vt2.c0 FROM vt2 WHERE (((CASE WHEN vt2.c0 COLLATE NOCASE THEN UNLIKELY(DISTINCT vt2.c0) ELSE vt2.c0 COLLATE BINARY END) ISNULL));
SELECT ALL vt2.c0 FROM vt2;
SELECT DISTINCT * FROM v0, vt2, vt1;
SELECT DISTINCT * FROM v0, vt2, vt1 WHERE (vt1.c0) UNION SELECT DISTINCT * FROM v0, vt2, vt1 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT * FROM v0, vt2, vt1 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT * FROM v0, vt2, vt1;
SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 WHERE (v0.c0) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt0, v0 WHERE ((NOT (v0.c0))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt0, v0 WHERE (((v0.c0) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT ALL vt1.c0, vt2.c0 FROM vt2 FULL OUTER JOIN v0 ON (((vt2.c0 IN ()))LIKE(((vt2.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) RIGHT OUTER JOIN vt1 ON 1570420092 LEFT OUTER JOIN vt0 ON ((TOTAL_CHANGES())*(((v0.c0)<(vt0.c0)))) GROUP BY vt1.c0, vt2.c0;
SELECT vt1.c0 FROM vt1, vt2;
SELECT vt1.c0 FROM vt1, vt2 WHERE (CAST(((vt1.c0)<(vt1.c0)) AS TEXT)) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt2 WHERE ((NOT (CAST(((vt1.c0)<(vt1.c0)) AS TEXT)))) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt2 WHERE (((CAST(((vt1.c0)<(vt1.c0)) AS TEXT)) ISNULL));
SELECT vt1.c0 FROM vt1, vt2;
SELECT DISTINCT * FROM vt2, vt1, v0;
SELECT DISTINCT * FROM vt2, vt1, v0 WHERE (x'24bd' COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt2, vt1, v0 WHERE ((NOT (x'24bd' COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt2, vt1, v0 WHERE (((x'24bd' COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt2, vt1, v0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 WHERE (((CAST(vt2.c0 AS TEXT)) BETWEEN (CAST(vt2.c0 AS BLOB)) AND (vt2.c0))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE ((NOT (((CAST(vt2.c0 AS TEXT)) BETWEEN (CAST(vt2.c0 AS BLOB)) AND (vt2.c0))))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2 WHERE (((((CAST(vt2.c0 AS TEXT)) BETWEEN (CAST(vt2.c0 AS BLOB)) AND (vt2.c0))) ISNULL)) GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING GROUP_CONCAT(vt1.c0) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (GROUP_CONCAT(vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((GROUP_CONCAT(vt1.c0)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING GROUP_CONCAT(vt1.c0) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (GROUP_CONCAT(vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((GROUP_CONCAT(vt1.c0)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT * FROM v0, vt1;
SELECT ALL * FROM v0, vt1 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)))AND((NULL IN ())))) UNION ALL SELECT ALL * FROM v0, vt1 WHERE ((NOT (((((v0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)))AND((NULL IN ())))))) UNION ALL SELECT * FROM v0, vt1 WHERE (((((((v0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)))AND((NULL IN ())))) ISNULL));
SELECT * FROM v0, vt1;
SELECT DISTINCT vt1.c0 FROM vt0, vt1, v0;
SELECT DISTINCT vt1.c0 FROM vt0, vt1, v0 WHERE (v0.c0) UNION SELECT DISTINCT vt1.c0 FROM vt0, vt1, v0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT vt1.c0 FROM vt0, vt1, v0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt0, vt1, v0;
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, vt1 WHERE (vt0.c0) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt0, vt1 WHERE ((NOT (vt0.c0))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt0, vt1 WHERE (((vt0.c0) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT v0.c0 FROM vt2, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt2, v0 GROUP BY v0.c0 HAVING ((COUNT(*))/(((vt2.c0) BETWEEN (COUNT(TOTAL(MAX(COUNT(*))))) AND (x'')))) UNION ALL SELECT v0.c0 FROM vt2, v0 GROUP BY v0.c0 HAVING (NOT (((COUNT(*))/(((vt2.c0) BETWEEN (COUNT(TOTAL(MAX(COUNT(*))))) AND (x'')))))) UNION ALL SELECT ALL v0.c0 FROM vt2, v0 GROUP BY v0.c0 HAVING ((((COUNT(*))/(((vt2.c0) BETWEEN (COUNT(TOTAL(MAX(COUNT(*))))) AND (x''))))) ISNULL);
SELECT vt1.c0, vt2.c0, vt0.c0 FROM vt1, vt2 NATURAL JOIN vt0;
SELECT ALL vt1.c0, vt2.c0, vt0.c0 FROM vt1, vt2 NATURAL JOIN vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt2.c0) AND (vt1.c0))) BETWEEN (vt1.c0) AND (((vt1.c0)>>(vt1.c0))))) UNION ALL SELECT ALL vt1.c0, vt2.c0, vt0.c0 FROM vt1, vt2 NATURAL JOIN vt0 WHERE ((NOT (((((vt0.c0) NOT BETWEEN (vt2.c0) AND (vt1.c0))) BETWEEN (vt1.c0) AND (((vt1.c0)>>(vt1.c0))))))) UNION ALL SELECT vt1.c0, vt2.c0, vt0.c0 FROM vt1, vt2 NATURAL JOIN vt0 WHERE (((((((vt0.c0) NOT BETWEEN (vt2.c0) AND (vt1.c0))) BETWEEN (vt1.c0) AND (((vt1.c0)>>(vt1.c0))))) ISNULL));
SELECT vt1.c0, vt2.c0, vt0.c0 FROM vt1, vt2 NATURAL JOIN vt0;
SELECT DISTINCT * FROM v0 INNER JOIN vt1 ON LOWER(DISTINCT CAST(vt0.c0 AS REAL)) LEFT OUTER JOIN vt0 ON (((vt1.c0)) NOT BETWEEN ((0.23849960361149103)) AND ((TRIM(DISTINCT vt0.c0, vt1.c0))));
SELECT DISTINCT * FROM v0 INNER JOIN vt1 ON LOWER(DISTINCT CAST(vt0.c0 AS REAL)) LEFT OUTER JOIN vt0 ON (((vt1.c0)) NOT BETWEEN ((0.23849960361149103)) AND ((TRIM(DISTINCT vt0.c0, vt1.c0)))) WHERE (SQLITE_VERSION()) UNION SELECT DISTINCT * FROM v0 INNER JOIN vt1 ON LOWER(DISTINCT CAST(vt0.c0 AS REAL)) LEFT OUTER JOIN vt0 ON (((vt1.c0)) NOT BETWEEN ((0.23849960361149103)) AND ((TRIM(DISTINCT vt0.c0, vt1.c0)))) WHERE ((NOT (SQLITE_VERSION()))) UNION SELECT DISTINCT * FROM v0 INNER JOIN vt1 ON LOWER(DISTINCT CAST(vt0.c0 AS REAL)) LEFT OUTER JOIN vt0 ON (((vt1.c0)) NOT BETWEEN ((0.23849960361149103)) AND ((TRIM(DISTINCT vt0.c0, vt1.c0)))) WHERE (((SQLITE_VERSION()) ISNULL));
SELECT DISTINCT * FROM v0 INNER JOIN vt1 ON LOWER(DISTINCT CAST(vt0.c0 AS REAL)) LEFT OUTER JOIN vt0 ON (((vt1.c0)) NOT BETWEEN ((0.23849960361149103)) AND ((TRIM(DISTINCT vt0.c0, vt1.c0))));
SELECT ALL vt1.c0 FROM vt2, vt0, v0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt2, vt0, v0, vt1 WHERE (x'') GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt2, vt0, v0, vt1 WHERE ((NOT (x''))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt2, vt0, v0, vt1 WHERE (((x'') ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt2, vt0, v0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING -141911349 UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (-141911349)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((-141911349) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING -141911349 UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (-141911349)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((-141911349) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE (CAST(((vt1.c0) BETWEEN (vt1.c0) AND (x'')) AS TEXT)) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (CAST(((vt1.c0) BETWEEN (vt1.c0) AND (x'')) AS TEXT)))) UNION ALL SELECT * FROM vt1 WHERE (((CAST(((vt1.c0) BETWEEN (vt1.c0) AND (x'')) AS TEXT)) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT vt1.c0, vt0.c0 FROM v0 NOT INDEXED, vt0, vt1, vt2;
SELECT DISTINCT vt1.c0, vt0.c0 FROM v0, vt0, vt1, vt2 WHERE ((((((vt0.c0) BETWEEN (vt2.c0) AND (NULL))))<((json_type(v0.c0))))) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM v0, vt0, vt1, vt2 WHERE ((NOT ((((((vt0.c0) BETWEEN (vt2.c0) AND (NULL))))<((json_type(v0.c0))))))) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM v0, vt0, vt1, vt2 WHERE ((((((((vt0.c0) BETWEEN (vt2.c0) AND (NULL))))<((json_type(v0.c0))))) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c0 FROM v0 NOT INDEXED, vt0, vt1, vt2;
SELECT ALL vt2.c0, vt1.c0, vt0.c0 FROM vt1, v0 RIGHT OUTER JOIN vt2 ON LIKELIHOOD(SQLITE_VERSION(), 0.9273054923778511) CROSS JOIN vt0 ON CASE (NOT (x''))  WHEN ((vt2.c0) NOTNULL) THEN (+ (vt0.c0)) END GROUP BY vt2.c0, vt1.c0, vt0.c0;
SELECT vt2.c0, vt1.c0, vt0.c0 FROM vt1, v0 RIGHT OUTER JOIN vt2 ON LIKELIHOOD(SQLITE_VERSION(), 0.9273054923778511) CROSS JOIN vt0 ON CASE (NOT (x''))  WHEN ((vt2.c0) NOTNULL) THEN (+ (vt0.c0)) END WHERE ((- (((vt2.c0)&(vt1.c0))))) GROUP BY vt2.c0, vt1.c0, vt0.c0 UNION SELECT ALL vt2.c0, vt1.c0, vt0.c0 FROM vt1, v0 RIGHT OUTER JOIN vt2 ON LIKELIHOOD(SQLITE_VERSION(), 0.9273054923778511) CROSS JOIN vt0 ON CASE (NOT (x''))  WHEN ((vt2.c0) NOTNULL) THEN (+ (vt0.c0)) END WHERE ((NOT ((- (((vt2.c0)&(vt1.c0))))))) GROUP BY vt2.c0, vt1.c0, vt0.c0 UNION SELECT ALL vt2.c0, vt1.c0, vt0.c0 FROM vt1, v0 RIGHT OUTER JOIN vt2 ON LIKELIHOOD(SQLITE_VERSION(), 0.9273054923778511) CROSS JOIN vt0 ON CASE (NOT (x''))  WHEN ((vt2.c0) NOTNULL) THEN (+ (vt0.c0)) END WHERE ((((- (((vt2.c0)&(vt1.c0))))) ISNULL)) GROUP BY vt2.c0, vt1.c0, vt0.c0;
SELECT ALL vt2.c0, vt1.c0, vt0.c0 FROM vt1, v0 RIGHT OUTER JOIN vt2 ON LIKELIHOOD(SQLITE_VERSION(), 0.9273054923778511) CROSS JOIN vt0 ON CASE (NOT (x''))  WHEN ((vt2.c0) NOTNULL) THEN (+ (vt0.c0)) END GROUP BY vt2.c0, vt1.c0, vt0.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING MAX(vt2.c0) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (MAX(vt2.c0))) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((MAX(vt2.c0)) ISNULL);
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING MAX(vt2.c0) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (MAX(vt2.c0))) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((MAX(vt2.c0)) ISNULL);
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 INNER JOIN v0 ON vt2.c0;
SELECT vt2.c0 FROM vt2 INNER JOIN v0 ON vt2.c0 WHERE (LIKELIHOOD(DISTINCT 'U', 0.8248666111984159)) UNION ALL SELECT vt2.c0 FROM vt2 NOT INDEXED INNER JOIN v0 ON vt2.c0 WHERE ((NOT (LIKELIHOOD(DISTINCT 'U', 0.8248666111984159)))) UNION ALL SELECT ALL vt2.c0 FROM vt2 INNER JOIN v0 ON vt2.c0 WHERE (((LIKELIHOOD(DISTINCT 'U', 0.8248666111984159)) ISNULL));
SELECT ALL vt2.c0 FROM vt2 INNER JOIN v0 ON vt2.c0;
SELECT DISTINCT * FROM v0, vt1;
SELECT DISTINCT * FROM v0, vt1 WHERE (((((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR((+ (v0.c0)))))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 END)))AND(v0.c0 COLLATE RTRIM)))OR(v0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM v0, vt1 WHERE ((NOT (((((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR((+ (v0.c0)))))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 END)))AND(v0.c0 COLLATE RTRIM)))OR(v0.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT * FROM v0, vt1 WHERE (((((((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR((+ (v0.c0)))))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 END)))AND(v0.c0 COLLATE RTRIM)))OR(v0.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT * FROM v0, vt1;
SELECT vt2.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN vt2 ON CASE ((vt2.c0) NOT NULL)  WHEN json(NULL) THEN ((vt2.c0)/(x'6371')) ELSE (vt0.c0 IN ()) END GROUP BY vt2.c0, vt0.c0;
SELECT vt2.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN vt2 ON CASE ((vt2.c0) NOT NULL)  WHEN json(NULL) THEN ((vt2.c0)/(x'6371')) ELSE (vt0.c0 IN ()) END WHERE ((((CASE vt0.c0  WHEN vt2.c0 THEN vt2.c0 END, 0.0553460055140339, (- (vt2.c0))))<=((((vt0.c0)GLOB(vt0.c0)), CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 ELSE vt0.c0 END, ((vt0.c0) NOT BETWEEN (vt2.c0) AND (vt0.c0)))))) GROUP BY vt2.c0, vt0.c0 UNION SELECT ALL vt2.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN vt2 ON CASE ((vt2.c0) NOT NULL)  WHEN json(NULL) THEN ((vt2.c0)/(x'6371')) ELSE (vt0.c0 IN ()) END WHERE ((NOT ((((CASE vt0.c0  WHEN vt2.c0 THEN vt2.c0 END, 0.0553460055140339, (- (vt2.c0))))<=((((vt0.c0)GLOB(vt0.c0)), CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 ELSE vt0.c0 END, ((vt0.c0) NOT BETWEEN (vt2.c0) AND (vt0.c0)))))))) GROUP BY vt2.c0, vt0.c0 UNION SELECT ALL vt2.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN vt2 ON CASE ((vt2.c0) NOT NULL)  WHEN json(NULL) THEN ((vt2.c0)/(x'6371')) ELSE (vt0.c0 IN ()) END WHERE ((((((CASE vt0.c0  WHEN vt2.c0 THEN vt2.c0 END, 0.0553460055140339, (- (vt2.c0))))<=((((vt0.c0)GLOB(vt0.c0)), CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 ELSE vt0.c0 END, ((vt0.c0) NOT BETWEEN (vt2.c0) AND (vt0.c0)))))) ISNULL)) GROUP BY vt2.c0, vt0.c0;
SELECT vt2.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN vt2 ON CASE ((vt2.c0) NOT NULL)  WHEN json(NULL) THEN ((vt2.c0)/(x'6371')) ELSE (vt0.c0 IN ()) END GROUP BY vt2.c0, vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(GROUP_CONCAT(vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(GROUP_CONCAT(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(GROUP_CONCAT(vt0.c0))) ISNULL);
SELECT ALL * FROM vt0, v0, vt1 CROSS JOIN vt2 ON ((json(v0.c0)) NOT BETWEEN (((0.8794246345510836)+(vt0.c0))) AND (v0.c0));
SELECT DISTINCT * FROM vt2, vt0, vt1;
SELECT DISTINCT * FROM vt2, vt0, vt1 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(vt1.c0))) IS TRUE)) UNION SELECT DISTINCT * FROM vt2, vt0, vt1 WHERE ((NOT (((((((vt0.c0)AND(vt0.c0)))AND(vt1.c0))) IS TRUE)))) UNION SELECT DISTINCT * FROM vt2, vt0, vt1 WHERE (((((((((vt0.c0)AND(vt0.c0)))AND(vt1.c0))) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM vt2, vt0, vt1;
SELECT vt0.c0, v0.c0 FROM vt2, vt1, vt0 FULL OUTER JOIN v0 ON CASE WHEN (+ (vt2.c0)) THEN ((vt1.c0)LIKE(v0.c0)) ELSE (NOT (v0.c0)) END GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt2, vt1, vt0 FULL OUTER JOIN v0 ON CASE WHEN (+ (vt2.c0)) THEN ((vt1.c0)LIKE(v0.c0)) ELSE (NOT (v0.c0)) END WHERE (vt2.c0) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM vt2, vt1, vt0 FULL OUTER JOIN v0 ON CASE WHEN (+ (vt2.c0)) THEN ((vt1.c0)LIKE(v0.c0)) ELSE (NOT (v0.c0)) END WHERE ((NOT (vt2.c0))) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM vt2, vt1, vt0 FULL OUTER JOIN v0 ON CASE WHEN (+ (vt2.c0)) THEN ((vt1.c0)LIKE(v0.c0)) ELSE (NOT (v0.c0)) END WHERE (((vt2.c0) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt2, vt1, vt0 FULL OUTER JOIN v0 ON CASE WHEN (+ (vt2.c0)) THEN ((vt1.c0)LIKE(v0.c0)) ELSE (NOT (v0.c0)) END GROUP BY vt0.c0, v0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING AVG(((vt0.c0)+(vt0.c0))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (AVG(((vt0.c0)+(vt0.c0))))) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING ((AVG(((vt0.c0)+(vt0.c0)))) ISNULL);
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING AVG(((vt0.c0)+(vt0.c0))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (AVG(((vt0.c0)+(vt0.c0))))) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING ((AVG(((vt0.c0)+(vt0.c0)))) ISNULL);
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT * FROM vt1, vt2 LEFT OUTER JOIN vt0 ON (((vt1.c0) IS FALSE) IN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt2.c0))))) RIGHT OUTER JOIN v0 ON ((CASE NULL  WHEN vt0.c0 THEN vt1.c0 END) IS TRUE);
SELECT * FROM vt1, vt2 LEFT OUTER JOIN vt0 ON (((vt1.c0) IS FALSE) IN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt2.c0))))) RIGHT OUTER JOIN v0 ON ((CASE NULL  WHEN vt0.c0 THEN vt1.c0 END) IS TRUE) WHERE ((x'72bf' IN (vt1.c0)) COLLATE BINARY) UNION ALL SELECT ALL * FROM vt1, vt2 LEFT OUTER JOIN vt0 ON (((vt1.c0) IS FALSE) IN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt2.c0))))) RIGHT OUTER JOIN v0 ON ((CASE NULL  WHEN vt0.c0 THEN vt1.c0 END) IS TRUE) WHERE ((NOT ((x'72bf' IN (vt1.c0)) COLLATE BINARY))) UNION ALL SELECT ALL * FROM vt1, vt2 LEFT OUTER JOIN vt0 ON (((vt1.c0) IS FALSE) IN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt2.c0))))) RIGHT OUTER JOIN v0 ON ((CASE NULL  WHEN vt0.c0 THEN vt1.c0 END) IS TRUE) WHERE ((((x'72bf' IN (vt1.c0)) COLLATE BINARY) ISNULL));
SELECT * FROM vt1, vt2 LEFT OUTER JOIN vt0 ON (((vt1.c0) IS FALSE) IN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt2.c0))))) RIGHT OUTER JOIN v0 ON ((CASE NULL  WHEN vt0.c0 THEN vt1.c0 END) IS TRUE);
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CAST(((vt0.c0) IS TRUE) AS REAL)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CAST(((vt0.c0) IS TRUE) AS REAL)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CAST(((vt0.c0) IS TRUE) AS REAL)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt2.c0, vt1.c0 FROM vt2, vt1 GROUP BY vt2.c0, vt1.c0;
SELECT ALL vt2.c0, vt1.c0 FROM vt2, vt1 WHERE ((+ ('?' COLLATE NOCASE))) GROUP BY vt2.c0, vt1.c0 UNION SELECT ALL vt2.c0, vt1.c0 FROM vt2, vt1 WHERE ((NOT ((+ ('?' COLLATE NOCASE))))) GROUP BY vt2.c0, vt1.c0 UNION SELECT vt2.c0, vt1.c0 FROM vt2, vt1 WHERE ((((+ ('?' COLLATE NOCASE))) ISNULL)) GROUP BY vt2.c0, vt1.c0;
SELECT vt2.c0, vt1.c0 FROM vt2, vt1 GROUP BY vt2.c0, vt1.c0;
SELECT vt0.c0 FROM vt0, v0, vt2, vt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, v0, vt2, vt1 GROUP BY vt0.c0 HAVING CASE NULL  WHEN ((((SUM(vt1.c0))AND(vt1.c0)))AND('A\n?')) THEN ((((((((((((v0.c0)AND(v0.c0)))AND(vt1.c0)))OR(GROUP_CONCAT(v0.c0))))AND(v0.c0)))OR(TOTAL(vt2.c0))))OR(COUNT(*))) ELSE MAX(COUNT(*)) END UNION ALL SELECT vt0.c0 FROM vt0, v0, vt2, vt1 GROUP BY vt0.c0 HAVING (NOT (CASE NULL  WHEN ((((SUM(vt1.c0))AND(vt1.c0)))AND('A\n?')) THEN ((((((((((((v0.c0)AND(v0.c0)))AND(vt1.c0)))OR(GROUP_CONCAT(v0.c0))))AND(v0.c0)))OR(TOTAL(vt2.c0))))OR(COUNT(*))) ELSE MAX(COUNT(*)) END)) UNION ALL SELECT ALL vt0.c0 FROM vt0, v0, vt2, vt1 GROUP BY vt0.c0 HAVING ((CASE NULL  WHEN ((((SUM(vt1.c0))AND(vt1.c0)))AND('A\n?')) THEN ((((((((((((v0.c0)AND(v0.c0)))AND(vt1.c0)))OR(GROUP_CONCAT(v0.c0))))AND(v0.c0)))OR(TOTAL(vt2.c0))))OR(COUNT(*))) ELSE MAX(COUNT(*)) END) ISNULL);
SELECT v0.c0 FROM vt0, v0;
SELECT v0.c0 FROM vt0, v0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(v0.c0)))|(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) UNION ALL SELECT v0.c0 FROM vt0, v0 WHERE ((NOT (((((((vt0.c0)AND(vt0.c0)))AND(v0.c0)))|(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))))) UNION ALL SELECT ALL v0.c0 FROM vt0, v0 WHERE (((((((((vt0.c0)AND(vt0.c0)))AND(v0.c0)))|(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) ISNULL));
SELECT v0.c0 FROM vt0, v0;
SELECT DISTINCT * FROM vt0, vt1, vt2 LEFT OUTER JOIN v0 ON ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt2.c0)))>>(CASE WHEN vt2.c0 THEN vt1.c0 ELSE x'' END));
SELECT DISTINCT * FROM vt0, vt1, vt2 LEFT OUTER JOIN v0 ON ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt2.c0)))>>(CASE WHEN vt2.c0 THEN vt1.c0 ELSE x'' END)) WHERE (1.817222597E9) UNION SELECT DISTINCT * FROM vt0, vt1, vt2 LEFT OUTER JOIN v0 ON ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt2.c0)))>>(CASE WHEN vt2.c0 THEN vt1.c0 ELSE x'' END)) WHERE ((NOT (1.817222597E9))) UNION SELECT DISTINCT * FROM vt0, vt1, vt2 LEFT OUTER JOIN v0 ON ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt2.c0)))>>(CASE WHEN vt2.c0 THEN vt1.c0 ELSE x'' END)) WHERE (((1.817222597E9) ISNULL));
SELECT DISTINCT * FROM vt0, vt1, vt2 LEFT OUTER JOIN v0 ON ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt2.c0)))>>(CASE WHEN vt2.c0 THEN vt1.c0 ELSE x'' END));
SELECT v0.c0 FROM vt1 NATURAL JOIN v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt1 NATURAL JOIN v0 WHERE (((((((((((((((((((((NULL)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR((~ (vt1.c0)))))AND(((v0.c0)/(vt1.c0)))))AND(((((v0.c0)AND(v0.c0)))OR(vt1.c0)))))AND((v0.c0 IN ()))))AND(LIKELIHOOD(DISTINCT vt1.c0, 0.2926786563772338))))AND(((((-104059888)AND(v0.c0)))AND(vt1.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt1 NATURAL JOIN v0 WHERE ((NOT (((((((((((((((((((((NULL)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR((~ (vt1.c0)))))AND(((v0.c0)/(vt1.c0)))))AND(((((v0.c0)AND(v0.c0)))OR(vt1.c0)))))AND((v0.c0 IN ()))))AND(LIKELIHOOD(DISTINCT vt1.c0, 0.2926786563772338))))AND(((((-104059888)AND(v0.c0)))AND(vt1.c0))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt1 NATURAL JOIN v0 WHERE (((((((((((((((((((((((NULL)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR((~ (vt1.c0)))))AND(((v0.c0)/(vt1.c0)))))AND(((((v0.c0)AND(v0.c0)))OR(vt1.c0)))))AND((v0.c0 IN ()))))AND(LIKELIHOOD(DISTINCT vt1.c0, 0.2926786563772338))))AND(((((-104059888)AND(v0.c0)))AND(vt1.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM vt1 NATURAL JOIN v0 GROUP BY v0.c0;
SELECT vt1.c0, vt2.c0 FROM vt0, vt2, v0, vt1 GROUP BY vt1.c0, vt2.c0;
SELECT vt1.c0, vt2.c0 FROM vt0, vt2, v0, vt1 GROUP BY vt1.c0, vt2.c0 HAVING ((- (TOTAL(SUM(COUNT(COUNT(vt0.c0)))))) IN ()) UNION ALL SELECT vt1.c0, vt2.c0 FROM vt0, vt2, v0, vt1 GROUP BY vt1.c0, vt2.c0 HAVING (NOT (((- (TOTAL(SUM(COUNT(COUNT(vt0.c0)))))) IN ()))) UNION ALL SELECT vt1.c0, vt2.c0 FROM vt0, vt2, v0, vt1 GROUP BY vt1.c0, vt2.c0 HAVING ((((- (TOTAL(SUM(COUNT(COUNT(vt0.c0)))))) IN ())) ISNULL);
SELECT vt1.c0, vt2.c0 FROM vt0, vt2, v0, vt1 GROUP BY vt1.c0, vt2.c0;
SELECT vt1.c0, vt2.c0 FROM vt0, vt2, v0, vt1 GROUP BY vt1.c0, vt2.c0 HAVING ((- (TOTAL(SUM(COUNT(COUNT(vt0.c0)))))) IN ()) UNION ALL SELECT vt1.c0, vt2.c0 FROM vt0, vt2, v0, vt1 GROUP BY vt1.c0, vt2.c0 HAVING (NOT (((- (TOTAL(SUM(COUNT(COUNT(vt0.c0)))))) IN ()))) UNION ALL SELECT vt1.c0, vt2.c0 FROM vt0, vt2, v0, vt1 GROUP BY vt1.c0, vt2.c0 HAVING ((((- (TOTAL(SUM(COUNT(COUNT(vt0.c0)))))) IN ())) ISNULL);
SELECT vt1.c0, vt2.c0 FROM vt0, vt2, v0, vt1 GROUP BY vt1.c0, vt2.c0;
SELECT ALL MAX((CASE WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN 696023635 THEN 0.22912423522289171 ELSE vt2.c0 END IN (((NULL) IS FALSE)))) FROM vt2 ORDER BY CASE (((vt2.c0, vt2.c0, vt2.c0)) NOT BETWEEN ((vt2.c0, vt2.c0, vt2.c0)) AND ((vt2.c0, '-1876485148', vt2.c0)))  WHEN ((vt2.c0) NOTNULL) THEN ((vt2.c0)*(vt2.c0)) WHEN ((vt2.c0)AND(vt2.c0)) THEN '4928124818278182383T-4210992452589581631:1198 1952914903939873563 Pe' WHEN CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 END THEN vt2.c0 COLLATE NOCASE ELSE ABS(vt2.c0) END  NULLS FIRST;
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((((((((vt0.c0)<<(vt0.c0)))OR(TRIM(vt0.c0))))AND(((vt0.c0) IS FALSE))))AND((NOT (vt0.c0)))))OR((vt0.c0 IN ('10861681', x'7cfa', vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((((((((vt0.c0)<<(vt0.c0)))OR(TRIM(vt0.c0))))AND(((vt0.c0) IS FALSE))))AND((NOT (vt0.c0)))))OR((vt0.c0 IN ('10861681', x'7cfa', vt0.c0))))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((((((((((vt0.c0)<<(vt0.c0)))OR(TRIM(vt0.c0))))AND(((vt0.c0) IS FALSE))))AND((NOT (vt0.c0)))))OR((vt0.c0 IN ('10861681', x'7cfa', vt0.c0))))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN NULL THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) AND ((((v0.c0) BETWEEN (v0.c0) AND ('')))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((((v0.c0)) NOT BETWEEN ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN NULL THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) AND ((((v0.c0) BETWEEN (v0.c0) AND ('')))))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((v0.c0)) NOT BETWEEN ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN NULL THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) AND ((((v0.c0) BETWEEN (v0.c0) AND ('')))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT v0.c0, vt2.c0 FROM v0, vt2 GROUP BY v0.c0, vt2.c0;
SELECT ALL v0.c0, vt2.c0 FROM v0, vt2 WHERE (((((v0.c0)>>(v0.c0)))>=(((((((((v0.c0)OR(vt2.c0)))OR(vt2.c0)))AND(v0.c0)))AND(v0.c0))))) GROUP BY v0.c0, vt2.c0 UNION SELECT v0.c0, vt2.c0 FROM v0, vt2 WHERE ((NOT (((((v0.c0)>>(v0.c0)))>=(((((((((v0.c0)OR(vt2.c0)))OR(vt2.c0)))AND(v0.c0)))AND(v0.c0))))))) GROUP BY v0.c0, vt2.c0 UNION SELECT v0.c0, vt2.c0 FROM v0, vt2 WHERE (((((((v0.c0)>>(v0.c0)))>=(((((((((v0.c0)OR(vt2.c0)))OR(vt2.c0)))AND(v0.c0)))AND(v0.c0))))) ISNULL)) GROUP BY v0.c0, vt2.c0;
SELECT v0.c0, vt2.c0 FROM v0, vt2 GROUP BY v0.c0, vt2.c0;
SELECT vt1.c0, vt0.c0, vt2.c0 FROM v0, vt0, vt1, vt2 GROUP BY vt1.c0, vt0.c0, vt2.c0;
SELECT vt1.c0, vt0.c0, vt2.c0 FROM v0, vt0, vt1, vt2 GROUP BY vt1.c0, vt0.c0, vt2.c0 HAVING COUNT(AVG(AVG(vt0.c0))) UNION ALL SELECT ALL vt1.c0, vt0.c0, vt2.c0 FROM v0, vt0, vt1, vt2 GROUP BY vt1.c0, vt0.c0, vt2.c0 HAVING (NOT (COUNT(AVG(AVG(vt0.c0))))) UNION ALL SELECT vt1.c0, vt0.c0, vt2.c0 FROM v0, vt0, vt1, vt2 GROUP BY vt1.c0, vt0.c0, vt2.c0 HAVING ((COUNT(AVG(AVG(vt0.c0)))) ISNULL);
SELECT * FROM vt2, vt1, vt0, v0;
SELECT * FROM vt2, vt1, vt0, v0 WHERE (0.7843079224725333) ORDER BY TRIM(DISTINCT SQLITE_VERSION()) ASC  NULLS FIRST, (((v0.c0) BETWEEN (vt1.c0) AND (vt0.c0)) IN ((((vt2.c0))>=((vt0.c0)))));
SELECT * FROM vt2, vt1, vt0, v0 WHERE ((NOT (0.7843079224725333))) ORDER BY TRIM(DISTINCT SQLITE_VERSION()) ASC  NULLS FIRST, (((v0.c0) BETWEEN (vt1.c0) AND (vt0.c0)) IN ((((vt2.c0))>=((vt0.c0)))));
SELECT * FROM vt2, vt1, vt0, v0 WHERE (((0.7843079224725333) ISNULL)) ORDER BY TRIM(DISTINCT SQLITE_VERSION()) ASC  NULLS FIRST, (((v0.c0) BETWEEN (vt1.c0) AND (vt0.c0)) IN ((((vt2.c0))>=((vt0.c0)))));
SELECT * FROM vt2, vt1, vt0, v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((((CAST(v0.c0 AS INTEGER))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))AND(CAST(v0.c0 AS NUMERIC)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((((CAST(v0.c0 AS INTEGER))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))AND(CAST(v0.c0 AS NUMERIC)))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((CAST(v0.c0 AS INTEGER))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))AND(CAST(v0.c0 AS NUMERIC)))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL vt1.c0, v0.c0 FROM v0 INNER JOIN vt1 ON (((CAST(vt1.c0 AS REAL)))>=((v0.c0))) GROUP BY vt1.c0, v0.c0;
SELECT ALL vt1.c0, v0.c0 FROM v0 INNER JOIN vt1 ON (((CAST(vt1.c0 AS REAL)))>=((v0.c0))) WHERE (((((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 END)AND(((((vt1.c0)AND('')))AND(v0.c0)))))OR(((vt1.c0) BETWEEN (v0.c0) AND (v0.c0))))) GROUP BY vt1.c0, v0.c0 UNION SELECT vt1.c0, v0.c0 FROM v0 INNER JOIN vt1 ON (((CAST(vt1.c0 AS REAL)))>=((v0.c0))) WHERE ((NOT (((((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 END)AND(((((vt1.c0)AND('')))AND(v0.c0)))))OR(((vt1.c0) BETWEEN (v0.c0) AND (v0.c0))))))) GROUP BY vt1.c0, v0.c0 UNION SELECT ALL vt1.c0, v0.c0 FROM v0 INNER JOIN vt1 ON (((CAST(vt1.c0 AS REAL)))>=((v0.c0))) WHERE (((((((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 END)AND(((((vt1.c0)AND('')))AND(v0.c0)))))OR(((vt1.c0) BETWEEN (v0.c0) AND (v0.c0))))) ISNULL)) GROUP BY vt1.c0, v0.c0;
SELECT ALL vt1.c0, v0.c0 FROM v0 INNER JOIN vt1 ON (((CAST(vt1.c0 AS REAL)))>=((v0.c0))) GROUP BY vt1.c0, v0.c0;
SELECT vt2.c0, v0.c0, vt0.c0, vt1.c0 FROM v0, vt1, vt2, vt0 GROUP BY vt2.c0, v0.c0, vt0.c0, vt1.c0;
SELECT vt2.c0, v0.c0, vt0.c0, vt1.c0 FROM v0, vt1, vt2, vt0 GROUP BY vt2.c0, v0.c0, vt0.c0, vt1.c0 HAVING COUNT(CAST(SUM(v0.c0) AS TEXT)) UNION ALL SELECT ALL vt2.c0, v0.c0, vt0.c0, vt1.c0 FROM v0, vt1, vt2, vt0 GROUP BY vt2.c0, v0.c0, vt0.c0, vt1.c0 HAVING (NOT (COUNT(CAST(SUM(v0.c0) AS TEXT)))) UNION ALL SELECT ALL vt2.c0, v0.c0, vt0.c0, vt1.c0 FROM v0, vt1, vt2, vt0 GROUP BY vt2.c0, v0.c0, vt0.c0, vt1.c0 HAVING ((COUNT(CAST(SUM(v0.c0) AS TEXT))) ISNULL);
SELECT ALL MIN(vt1.c0) FROM vt1, vt2, vt0, v0 ORDER BY ((v0.c0) BETWEEN (CASE vt2.c0  WHEN vt0.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN '1985761120' THEN '' END) AND ((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0))))) DESC  NULLS LAST;
SELECT ALL vt2.c0, vt1.c0 FROM vt1, vt2, v0;
SELECT vt2.c0, vt1.c0 FROM vt1, vt2, v0 WHERE (vt2.c0) UNION ALL SELECT ALL vt2.c0, vt1.c0 FROM vt1, vt2, v0 WHERE ((NOT (vt2.c0))) UNION ALL SELECT ALL vt2.c0, vt1.c0 FROM vt1, vt2, v0 WHERE (((vt2.c0) ISNULL));
SELECT ALL vt2.c0, vt1.c0 FROM vt1, vt2, v0;
SELECT DISTINCT * FROM vt1, vt2 CROSS JOIN vt0 ON ((0.5842797529413359) NOT NULL) FULL OUTER JOIN v0 ON ((CAST(vt1.c0 AS NUMERIC)) NOT BETWEEN (((v0.c0) BETWEEN (vt2.c0) AND (vt1.c0))) AND (((((((((v0.c0)OR(v0.c0)))AND(vt1.c0)))AND(vt2.c0)))OR(vt1.c0))));
SELECT DISTINCT * FROM vt1 NOT INDEXED, vt2 CROSS JOIN vt0 ON ((0.5842797529413359) NOT NULL) FULL OUTER JOIN v0 ON ((CAST(vt1.c0 AS NUMERIC)) NOT BETWEEN (((v0.c0) BETWEEN (vt2.c0) AND (vt1.c0))) AND (((((((((v0.c0)OR(v0.c0)))AND(vt1.c0)))AND(vt2.c0)))OR(vt1.c0)))) WHERE (((((vt1.c0))<((v0.c0))) IN ())) UNION SELECT DISTINCT * FROM vt1, vt2 NOT INDEXED CROSS JOIN vt0 ON ((0.5842797529413359) NOT NULL) FULL OUTER JOIN v0 ON ((CAST(vt1.c0 AS NUMERIC)) NOT BETWEEN (((v0.c0) BETWEEN (vt2.c0) AND (vt1.c0))) AND (((((((((v0.c0)OR(v0.c0)))AND(vt1.c0)))AND(vt2.c0)))OR(vt1.c0)))) WHERE ((NOT (((((vt1.c0))<((v0.c0))) IN ())))) UNION SELECT DISTINCT * FROM vt1, vt2 CROSS JOIN vt0 ON ((0.5842797529413359) NOT NULL) FULL OUTER JOIN v0 ON ((CAST(vt1.c0 AS NUMERIC)) NOT BETWEEN (((v0.c0) BETWEEN (vt2.c0) AND (vt1.c0))) AND (((((((((v0.c0)OR(v0.c0)))AND(vt1.c0)))AND(vt2.c0)))OR(vt1.c0)))) WHERE (((((((vt1.c0))<((v0.c0))) IN ())) ISNULL));
SELECT DISTINCT * FROM vt1, vt2 CROSS JOIN vt0 ON ((0.5842797529413359) NOT NULL) FULL OUTER JOIN v0 ON ((CAST(vt1.c0 AS NUMERIC)) NOT BETWEEN (((v0.c0) BETWEEN (vt2.c0) AND (vt1.c0))) AND (((((((((v0.c0)OR(v0.c0)))AND(vt1.c0)))AND(vt2.c0)))OR(vt1.c0))));
SELECT vt1.c0, vt2.c0, v0.c0 FROM vt0, v0 RIGHT OUTER JOIN vt1 ON (((((vt2.c0) IS TRUE)))=(((vt2.c0 IN ())))) LEFT OUTER JOIN vt2 ON (~ (vt0.c0)) COLLATE RTRIM GROUP BY vt1.c0, vt2.c0, v0.c0;
SELECT ALL vt1.c0 FROM vt1, vt0, vt2 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0, vt2 GROUP BY vt1.c0 HAVING CAST((- (MAX(vt1.c0))) AS REAL) UNION ALL SELECT vt1.c0 FROM vt1, vt0, vt2 GROUP BY vt1.c0 HAVING (NOT (CAST((- (MAX(vt1.c0))) AS REAL))) UNION ALL SELECT vt1.c0 FROM vt1, vt0, vt2 GROUP BY vt1.c0 HAVING ((CAST((- (MAX(vt1.c0))) AS REAL)) ISNULL);
SELECT ALL vt1.c0 FROM vt1, vt0, vt2 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0, vt2 GROUP BY vt1.c0 HAVING CAST((- (MAX(vt1.c0))) AS REAL) UNION ALL SELECT vt1.c0 FROM vt1, vt0, vt2 GROUP BY vt1.c0 HAVING (NOT (CAST((- (MAX(vt1.c0))) AS REAL))) UNION ALL SELECT vt1.c0 FROM vt1, vt0, vt2 GROUP BY vt1.c0 HAVING ((CAST((- (MAX(vt1.c0))) AS REAL)) ISNULL);
SELECT ALL vt1.c0 FROM vt1, vt0, vt2 GROUP BY vt1.c0;
SELECT ALL v0.c0, vt1.c0, vt0.c0 FROM v0, vt1, vt0;
SELECT ALL v0.c0, vt1.c0, vt0.c0 FROM v0, vt1, vt0 WHERE (((((v0.c0)IS NOT(vt0.c0))) IS FALSE)) UNION ALL SELECT v0.c0, vt1.c0, vt0.c0 FROM v0, vt1, vt0 WHERE ((NOT (((((v0.c0)IS NOT(vt0.c0))) IS FALSE)))) UNION ALL SELECT v0.c0, vt1.c0, vt0.c0 FROM v0, vt1, vt0 WHERE (((((((v0.c0)IS NOT(vt0.c0))) IS FALSE)) ISNULL));
SELECT ALL v0.c0, vt1.c0, vt0.c0 FROM v0, vt1, vt0;
SELECT DISTINCT vt2.c0 FROM vt2;
SELECT DISTINCT vt2.c0 FROM vt2 WHERE ((((NOT (vt2.c0)))AND(NULL))) UNION SELECT DISTINCT vt2.c0 FROM vt2 WHERE ((NOT ((((NOT (vt2.c0)))AND(NULL))))) UNION SELECT DISTINCT vt2.c0 FROM vt2 WHERE ((((((NOT (vt2.c0)))AND(NULL))) ISNULL));
SELECT DISTINCT vt2.c0 FROM vt2;
SELECT ALL vt2.c0, vt0.c0 FROM vt2, vt0 GROUP BY vt2.c0, vt0.c0;
SELECT ALL vt2.c0, vt0.c0 FROM vt2, vt0 WHERE (vt0.c0) GROUP BY vt2.c0, vt0.c0 UNION SELECT vt2.c0, vt0.c0 FROM vt2, vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt2.c0, vt0.c0 UNION SELECT ALL vt2.c0, vt0.c0 FROM vt2, vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt2.c0, vt0.c0;
SELECT ALL vt2.c0, vt0.c0 FROM vt2, vt0 GROUP BY vt2.c0, vt0.c0;
SELECT ALL vt0.c0, vt1.c0, vt2.c0 FROM vt2, vt1, vt0, v0 GROUP BY vt0.c0, vt1.c0, vt2.c0;
SELECT ALL vt0.c0, vt1.c0, vt2.c0 FROM vt2, vt1, vt0, v0 GROUP BY vt0.c0, vt1.c0, vt2.c0 HAVING TOTAL(((SUM(v0.c0)) IS TRUE)) UNION ALL SELECT ALL vt0.c0, vt1.c0, vt2.c0 FROM vt2, vt1, vt0, v0 GROUP BY vt0.c0, vt1.c0, vt2.c0 HAVING (NOT (TOTAL(((SUM(v0.c0)) IS TRUE)))) UNION ALL SELECT ALL vt0.c0, vt1.c0, vt2.c0 FROM vt2, vt1, vt0, v0 GROUP BY vt0.c0, vt1.c0, vt2.c0 HAVING ((TOTAL(((SUM(v0.c0)) IS TRUE))) ISNULL);
SELECT * FROM v0, vt1, vt2, vt0;
SELECT * FROM v0, vt1, vt2, vt0 WHERE ((((((v0.c0)OR(vt2.c0)))OR(vt1.c0)) IN ())) UNION ALL SELECT * FROM v0, vt1, vt2, vt0 WHERE ((NOT ((((((v0.c0)OR(vt2.c0)))OR(vt1.c0)) IN ())))) UNION ALL SELECT * FROM v0, vt1, vt2, vt0 WHERE ((((((((v0.c0)OR(vt2.c0)))OR(vt1.c0)) IN ())) ISNULL));
SELECT * FROM v0, vt1, vt2, vt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((((vt1.c0) ISNULL)))>((((NULL)IS(vt1.c0)))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((((((vt1.c0) ISNULL)))>((((NULL)IS(vt1.c0)))))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((((((vt1.c0) ISNULL)))>((((NULL)IS(vt1.c0)))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt1.c0, vt2.c0, vt0.c0 FROM vt2, vt0, vt1, v0 GROUP BY vt1.c0, vt2.c0, vt0.c0;
SELECT ALL vt1.c0, vt2.c0, vt0.c0 FROM vt2, vt0, vt1, v0 WHERE (NULL) GROUP BY vt1.c0, vt2.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt2.c0, vt0.c0 FROM vt2 NOT INDEXED, vt0, vt1, v0 WHERE ((NOT (NULL))) GROUP BY vt1.c0, vt2.c0, vt0.c0 UNION SELECT vt1.c0, vt2.c0, vt0.c0 FROM vt2, vt0, vt1, v0 WHERE (((NULL) ISNULL)) GROUP BY vt1.c0, vt2.c0, vt0.c0;
SELECT vt1.c0, vt2.c0, vt0.c0 FROM vt2, vt0, vt1, v0 GROUP BY vt1.c0, vt2.c0, vt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING v0.c0 UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((v0.c0) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING v0.c0 UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((v0.c0) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c0)>>(vt0.c0)) THEN ((vt0.c0)!=(vt0.c0)) END) UNION ALL SELECT * FROM vt0 WHERE ((NOT (CASE WHEN ((vt0.c0)>>(vt0.c0)) THEN ((vt0.c0)<>(vt0.c0)) END))) UNION ALL SELECT ALL * FROM vt0 WHERE (((CASE WHEN ((vt0.c0)>>(vt0.c0)) THEN ((vt0.c0)!=(vt0.c0)) END) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt1.c0, v0.c0 FROM vt1, v0, vt0;
SELECT DISTINCT vt1.c0, v0.c0 FROM vt1, v0, vt0 WHERE (x'a9d6') UNION SELECT DISTINCT vt1.c0, v0.c0 FROM vt1, v0, vt0 WHERE ((NOT (x'a9d6'))) UNION SELECT DISTINCT vt1.c0, v0.c0 FROM vt1, v0, vt0 WHERE (((x'a9d6') ISNULL));
SELECT DISTINCT vt1.c0, v0.c0 FROM vt1, v0, vt0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 WHERE ((0.5563823773211072 IN ())) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2 WHERE ((NOT ((0.5563823773211072 IN ())))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE ((((0.5563823773211072 IN ())) ISNULL)) GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING CAST(v0.c0 AS TEXT) COLLATE BINARY UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (CAST(v0.c0 AS TEXT) COLLATE BINARY)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((CAST(v0.c0 AS TEXT) COLLATE BINARY) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING CAST(v0.c0 AS TEXT) COLLATE BINARY UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (CAST(v0.c0 AS TEXT) COLLATE BINARY)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((CAST(v0.c0 AS TEXT) COLLATE BINARY) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt2.c0, vt1.c0, v0.c0 FROM vt2, v0, vt0, vt1;
SELECT ALL vt2.c0, vt1.c0, v0.c0 FROM vt2, v0, vt0, vt1 WHERE ((((vt1.c0 IN ())) NOT BETWEEN (((vt2.c0)>(vt1.c0))) AND (((((x'')OR(vt2.c0)))OR(vt1.c0))))) UNION ALL SELECT vt2.c0, vt1.c0, v0.c0 FROM vt2, v0, vt0, vt1 NOT INDEXED WHERE ((NOT ((((vt1.c0 IN ())) NOT BETWEEN (((vt2.c0)>(vt1.c0))) AND (((((x'')OR(vt2.c0)))OR(vt1.c0))))))) UNION ALL SELECT vt2.c0, vt1.c0, v0.c0 FROM vt2, v0, vt0, vt1 WHERE ((((((vt1.c0 IN ())) NOT BETWEEN (((vt2.c0)>(vt1.c0))) AND (((((x'')OR(vt2.c0)))OR(vt1.c0))))) ISNULL));
SELECT ALL vt2.c0, vt1.c0, v0.c0 FROM vt2, v0, vt0, vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))<=(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))<=(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))<=(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL v0.c0 FROM vt0, vt1, vt2, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0, vt1, vt2, v0 NOT INDEXED WHERE (((((v0.c0)OR(vt1.c0))) BETWEEN ((NOT (vt2.c0))) AND (LIKELIHOOD(v0.c0, 0.4483240295826135)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt0, vt1, vt2, v0 WHERE ((NOT (((((v0.c0)OR(vt1.c0))) BETWEEN ((NOT (vt2.c0))) AND (LIKELIHOOD(v0.c0, 0.4483240295826135)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt0, vt1, vt2, v0 WHERE (((((((v0.c0)OR(vt1.c0))) BETWEEN ((NOT (vt2.c0))) AND (LIKELIHOOD(v0.c0, 0.4483240295826135)))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0, vt1, vt2, v0 GROUP BY v0.c0;
SELECT ALL vt0.c0 FROM vt0, v0, vt2 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, v0, vt2 GROUP BY vt0.c0 HAVING SUM(((((((((GROUP_CONCAT(MIN(SUM(v0.c0))))AND(vt2.c0)))AND(v0.c0)))OR(AVG(vt2.c0))))AND(0x637b41a9))) UNION ALL SELECT ALL vt0.c0 FROM vt0, v0, vt2 GROUP BY vt0.c0 HAVING (NOT (SUM(((((((((GROUP_CONCAT(MIN(SUM(v0.c0))))AND(vt2.c0)))AND(v0.c0)))OR(AVG(vt2.c0))))AND(0x637b41a9))))) UNION ALL SELECT ALL vt0.c0 FROM vt0, v0, vt2 GROUP BY vt0.c0 HAVING ((SUM(((((((((GROUP_CONCAT(MIN(SUM(v0.c0))))AND(vt2.c0)))AND(v0.c0)))OR(AVG(vt2.c0))))AND(0X637b41a9)))) ISNULL);
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0, vt2;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0, vt2 WHERE (x'') UNION ALL SELECT v0.c0, vt0.c0 FROM v0, vt0, vt2 WHERE ((NOT (x''))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0, vt0, vt2 WHERE (((x'') ISNULL));
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0, vt2;
SELECT DISTINCT vt0.c0, vt2.c0, vt1.c0 FROM vt1, vt0, vt2;
SELECT DISTINCT vt0.c0, vt2.c0, vt1.c0 FROM vt1, vt0, vt2 NOT INDEXED WHERE (vt1.c0) UNION SELECT DISTINCT vt0.c0, vt2.c0, vt1.c0 FROM vt1, vt0, vt2 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT vt0.c0, vt2.c0, vt1.c0 FROM vt1, vt0, vt2 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT vt0.c0, vt2.c0, vt1.c0 FROM vt1, vt0, vt2;
SELECT ALL vt2.c0 FROM vt0, vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt0, vt2 WHERE ((((NOT (vt2.c0)))<>('+VdDh'))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt0, vt2 WHERE ((NOT ((((NOT (vt2.c0)))!=('+VdDh'))))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt0, vt2 WHERE ((((((NOT (vt2.c0)))!=('+VdDh'))) ISNULL)) GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt0, vt2 GROUP BY vt2.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (- ((((AVG(vt1.c0), GROUP_CONCAT(vt1.c0), MIN(COUNT(AVG(vt1.c0)))))<=((vt1.c0, vt1.c0, vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((- ((((AVG(vt1.c0), GROUP_CONCAT(vt1.c0), MIN(COUNT(AVG(vt1.c0)))))<=((vt1.c0, vt1.c0, vt1.c0))))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((- ((((AVG(vt1.c0), GROUP_CONCAT(vt1.c0), MIN(COUNT(AVG(vt1.c0)))))<=((vt1.c0, vt1.c0, vt1.c0)))))) ISNULL);
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (CASE WHEN ((v0.c0)>(v0.c0)) THEN 0.6824382203227491 ELSE ((v0.c0)&(v0.c0)) END) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CASE WHEN ((v0.c0)>(v0.c0)) THEN 0.6824382203227491 ELSE ((v0.c0)&(v0.c0)) END))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((CASE WHEN ((v0.c0)>(v0.c0)) THEN 0.6824382203227491 ELSE ((v0.c0)&(v0.c0)) END) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT v0.c0, vt1.c0 FROM vt1 LEFT OUTER JOIN v0 ON ((((vt1.c0)*(vt1.c0))) BETWEEN (((vt1.c0) NOT BETWEEN (x'') AND (0.590025158716741))) AND ((+ (v0.c0))));
SELECT DISTINCT v0.c0, vt1.c0 FROM vt1 LEFT OUTER JOIN v0 ON ((((vt1.c0)*(vt1.c0))) BETWEEN (((vt1.c0) NOT BETWEEN (x'') AND (0.590025158716741))) AND ((+ (v0.c0)))) WHERE ((((NOT (vt1.c0))) IS TRUE)) UNION SELECT DISTINCT v0.c0, vt1.c0 FROM vt1 LEFT OUTER JOIN v0 ON ((((vt1.c0)*(vt1.c0))) BETWEEN (((vt1.c0) NOT BETWEEN (x'') AND (0.590025158716741))) AND ((+ (v0.c0)))) WHERE ((NOT ((((NOT (vt1.c0))) IS TRUE)))) UNION SELECT DISTINCT v0.c0, vt1.c0 FROM vt1 LEFT OUTER JOIN v0 ON ((((vt1.c0)*(vt1.c0))) BETWEEN (((vt1.c0) NOT BETWEEN (x'') AND (0.590025158716741))) AND ((+ (v0.c0)))) WHERE ((((((NOT (vt1.c0))) IS TRUE)) ISNULL));
SELECT DISTINCT v0.c0, vt1.c0 FROM vt1 LEFT OUTER JOIN v0 ON ((((vt1.c0)*(vt1.c0))) BETWEEN (((vt1.c0) NOT BETWEEN (x'') AND (0.590025158716741))) AND ((+ (v0.c0))));
SELECT ALL vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c0, v0.c0;
SELECT vt1.c0, v0.c0 FROM v0, vt1 WHERE (((CASE NULL  WHEN v0.c0 THEN v0.c0 END) IS TRUE)) GROUP BY vt1.c0, v0.c0 UNION SELECT ALL vt1.c0, v0.c0 FROM v0, vt1 WHERE ((NOT (((CASE NULL  WHEN v0.c0 THEN v0.c0 END) IS TRUE)))) GROUP BY vt1.c0, v0.c0 UNION SELECT ALL vt1.c0, v0.c0 FROM v0, vt1 WHERE (((((CASE NULL  WHEN v0.c0 THEN v0.c0 END) IS TRUE)) ISNULL)) GROUP BY vt1.c0, v0.c0;
SELECT ALL vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c0, v0.c0;
SELECT vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c0, v0.c0;
SELECT ALL vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c0, v0.c0 HAVING v0.c0 UNION ALL SELECT vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c0, v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c0, v0.c0 HAVING ((v0.c0) ISNULL);
SELECT vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c0, v0.c0;
SELECT ALL vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c0, v0.c0 HAVING v0.c0 UNION ALL SELECT vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c0, v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c0, v0.c0 HAVING ((v0.c0) ISNULL);
SELECT vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c0, v0.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt2, vt0, vt1;
SELECT ALL vt0.c0, vt1.c0 FROM vt2, vt0, vt1 WHERE (CASE WHEN ((vt2.c0)*(vt1.c0)) THEN (((vt2.c0)) NOT BETWEEN ((vt2.c0)) AND ((vt2.c0))) ELSE ((((vt2.c0)OR(NULL)))OR(vt0.c0)) END) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt2, vt0, vt1 WHERE ((NOT (CASE WHEN ((vt2.c0)*(vt1.c0)) THEN (((vt2.c0)) NOT BETWEEN ((vt2.c0)) AND ((vt2.c0))) ELSE ((((vt2.c0)OR(NULL)))OR(vt0.c0)) END))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt2, vt0, vt1 WHERE (((CASE WHEN ((vt2.c0)*(vt1.c0)) THEN (((vt2.c0)) NOT BETWEEN ((vt2.c0)) AND ((vt2.c0))) ELSE ((((vt2.c0)OR(NULL)))OR(vt0.c0)) END) ISNULL));
SELECT ALL vt0.c0, vt1.c0 FROM vt2, vt0, vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((vt1.c0) ISNULL)) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0) ISNULL)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((vt1.c0) ISNULL)) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt2.c0, vt0.c0, vt1.c0 FROM vt0, vt2, vt1 GROUP BY vt2.c0, vt0.c0, vt1.c0;
SELECT vt2.c0, vt0.c0, vt1.c0 FROM vt0, vt2, vt1 WHERE ((NOT ((((vt1.c0, vt0.c0, vt1.c0)) BETWEEN ((vt1.c0, vt2.c0, vt1.c0)) AND ((vt0.c0, vt2.c0, vt0.c0)))))) GROUP BY vt2.c0, vt0.c0, vt1.c0 UNION SELECT ALL vt2.c0, vt0.c0, vt1.c0 FROM vt0, vt2, vt1 WHERE ((NOT ((NOT ((((vt1.c0, vt0.c0, vt1.c0)) BETWEEN ((vt1.c0, vt2.c0, vt1.c0)) AND ((vt0.c0, vt2.c0, vt0.c0)))))))) GROUP BY vt2.c0, vt0.c0, vt1.c0 UNION SELECT vt2.c0, vt0.c0, vt1.c0 FROM vt0, vt2, vt1 WHERE ((((NOT ((((vt1.c0, vt0.c0, vt1.c0)) BETWEEN ((vt1.c0, vt2.c0, vt1.c0)) AND ((vt0.c0, vt2.c0, vt0.c0)))))) ISNULL)) GROUP BY vt2.c0, vt0.c0, vt1.c0;
SELECT ALL vt2.c0, vt0.c0, vt1.c0 FROM vt0, vt2, vt1 GROUP BY vt2.c0, vt0.c0, vt1.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING GROUP_CONCAT(v0.c0) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (GROUP_CONCAT(v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((GROUP_CONCAT(v0.c0)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING GROUP_CONCAT(v0.c0) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (GROUP_CONCAT(v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((GROUP_CONCAT(v0.c0)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt1.c0 FROM vt2, vt1;
SELECT ALL vt1.c0 FROM vt2, vt1 WHERE ((vt2.c0 COLLATE NOCASE IN ())) UNION ALL SELECT vt1.c0 FROM vt2, vt1 WHERE ((NOT ((vt2.c0 COLLATE NOCASE IN ())))) UNION ALL SELECT ALL vt1.c0 FROM vt2, vt1 WHERE ((((vt2.c0 COLLATE NOCASE IN ())) ISNULL));
SELECT vt1.c0 FROM vt2, vt1;
SELECT DISTINCT vt1.c0, vt2.c0 FROM v0, vt2, vt1, vt0;
SELECT DISTINCT vt1.c0, vt2.c0 FROM v0, vt2, vt1, vt0 WHERE ((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt2.c0))) COLLATE BINARY) UNION SELECT DISTINCT vt1.c0, vt2.c0 FROM v0, vt2, vt1, vt0 WHERE ((NOT ((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt2.c0))) COLLATE BINARY))) UNION SELECT DISTINCT vt1.c0, vt2.c0 FROM v0, vt2, vt1, vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt2.c0))) COLLATE BINARY) ISNULL));
SELECT DISTINCT vt1.c0, vt2.c0 FROM v0, vt2, vt1, vt0;
SELECT ALL v0.c0 FROM vt2, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt2, v0 WHERE ('-759077306') GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt2, v0 WHERE ((NOT ('-759077306'))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt2, v0 WHERE ((('-759077306') ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt2, v0 GROUP BY v0.c0;
SELECT vt1.c0 FROM v0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM v0, vt1 GROUP BY vt1.c0 HAVING GROUP_CONCAT(CASE TOTAL(vt1.c0)  WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN MAX(vt1.c0) WHEN COUNT(v0.c0) THEN vt1.c0 END) UNION ALL SELECT vt1.c0 FROM v0, vt1 GROUP BY vt1.c0 HAVING (NOT (GROUP_CONCAT(CASE TOTAL(vt1.c0)  WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN MAX(vt1.c0) WHEN COUNT(v0.c0) THEN vt1.c0 END))) UNION ALL SELECT ALL vt1.c0 FROM v0, vt1 GROUP BY vt1.c0 HAVING ((GROUP_CONCAT(CASE TOTAL(vt1.c0)  WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN MAX(vt1.c0) WHEN COUNT(v0.c0) THEN vt1.c0 END)) ISNULL);
SELECT ALL * FROM v0, vt1, vt0, vt2;
SELECT * FROM v0, vt1, vt0, vt2 WHERE (vt0.c0) UNION ALL SELECT ALL * FROM v0, vt1, vt0, vt2 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL * FROM v0, vt1, vt0, vt2 WHERE (((vt0.c0) ISNULL));
SELECT ALL * FROM v0, vt1, vt0, vt2;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (7.30934726E8) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (7.30934726E8))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((7.30934726E8) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt0 FULL OUTER JOIN vt1 ON vt1.c0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0 FULL OUTER JOIN vt1 ON vt1.c0 WHERE (0x2b912dc6) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt0 FULL OUTER JOIN vt1 ON vt1.c0 WHERE ((NOT (0X2b912dc6))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt0 FULL OUTER JOIN vt1 ON vt1.c0 WHERE (((0x2b912dc6) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0 FULL OUTER JOIN vt1 ON vt1.c0 GROUP BY vt1.c0;
SELECT ALL vt0.c0 FROM vt2, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt2, vt0 GROUP BY vt0.c0 HAVING TOTAL(MAX(vt2.c0)) COLLATE BINARY UNION ALL SELECT vt0.c0 FROM vt2, vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(MAX(vt2.c0)) COLLATE BINARY)) UNION ALL SELECT vt0.c0 FROM vt2, vt0 GROUP BY vt0.c0 HAVING ((TOTAL(MAX(vt2.c0)) COLLATE BINARY) ISNULL);
SELECT ALL * FROM vt0, vt2, vt1, v0;
SELECT * FROM vt0, vt2, vt1, v0 WHERE ((((((((v0.c0))<((vt0.c0))))OR(730934726)))AND(((vt2.c0)&(vt2.c0))))) UNION ALL SELECT * FROM vt0, vt2, vt1, v0 WHERE ((NOT ((((((((v0.c0))<((vt0.c0))))OR(730934726)))AND(((vt2.c0)&(vt2.c0))))))) UNION ALL SELECT * FROM vt0, vt2, vt1, v0 WHERE ((((((((((v0.c0))<((vt0.c0))))OR(730934726)))AND(((vt2.c0)&(vt2.c0))))) ISNULL));
SELECT ALL * FROM vt0, vt2, vt1, v0;
SELECT DISTINCT vt2.c0, vt0.c0 FROM vt0 FULL OUTER JOIN vt2 ON ((vt2.c0 IN ()) IN (((vt0.c0)AND(vt0.c0)), (+ (vt0.c0))));
SELECT DISTINCT vt2.c0, vt0.c0 FROM vt0 FULL OUTER JOIN vt2 ON ((vt2.c0 IN ()) IN (((vt0.c0)AND(vt0.c0)), (+ (vt0.c0)))) WHERE (CAST(((vt2.c0) BETWEEN (vt2.c0) AND (vt0.c0)) AS INTEGER)) UNION SELECT DISTINCT vt2.c0, vt0.c0 FROM vt0 FULL OUTER JOIN vt2 ON ((vt2.c0 IN ()) IN (((vt0.c0)AND(vt0.c0)), (+ (vt0.c0)))) WHERE ((NOT (CAST(((vt2.c0) BETWEEN (vt2.c0) AND (vt0.c0)) AS INTEGER)))) UNION SELECT DISTINCT vt2.c0, vt0.c0 FROM vt0 FULL OUTER JOIN vt2 ON ((vt2.c0 IN ()) IN (((vt0.c0)AND(vt0.c0)), (+ (vt0.c0)))) WHERE (((CAST(((vt2.c0) BETWEEN (vt2.c0) AND (vt0.c0)) AS INTEGER)) ISNULL));
SELECT DISTINCT vt2.c0, vt0.c0 FROM vt0 FULL OUTER JOIN vt2 ON ((vt2.c0 IN ()) IN (((vt0.c0)AND(vt0.c0)), (+ (vt0.c0))));
SELECT vt1.c0 FROM vt1, v0, vt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, v0, vt0 WHERE (SQLITE_SOURCE_ID() COLLATE RTRIM COLLATE BINARY) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1, v0, vt0 WHERE ((NOT (SQLITE_SOURCE_ID() COLLATE RTRIM COLLATE BINARY))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1, v0, vt0 WHERE (((SQLITE_SOURCE_ID() COLLATE RTRIM COLLATE BINARY) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, v0, vt0 GROUP BY vt1.c0;
SELECT vt2.c0, vt0.c0, v0.c0 FROM vt2, v0, vt0 GROUP BY vt2.c0, vt0.c0, v0.c0;
SELECT ALL vt2.c0, vt0.c0, v0.c0 FROM vt2, v0, vt0 GROUP BY vt2.c0, vt0.c0, v0.c0 HAVING ((TOTAL(vt0.c0)) NOT BETWEEN (CAST(vt2.c0 AS TEXT)) AND (x'')) UNION ALL SELECT ALL vt2.c0, vt0.c0, v0.c0 FROM vt2, v0, vt0 GROUP BY vt2.c0, vt0.c0, v0.c0 HAVING (NOT (((TOTAL(vt0.c0)) NOT BETWEEN (CAST(vt2.c0 AS TEXT)) AND (x'')))) UNION ALL SELECT vt2.c0, vt0.c0, v0.c0 FROM vt2, v0, vt0 GROUP BY vt2.c0, vt0.c0, v0.c0 HAVING ((((TOTAL(vt0.c0)) NOT BETWEEN (CAST(vt2.c0 AS TEXT)) AND (x''))) ISNULL);
SELECT vt2.c0, vt0.c0, v0.c0 FROM vt2, v0, vt0 GROUP BY vt2.c0, vt0.c0, v0.c0;
SELECT ALL vt2.c0, vt0.c0, v0.c0 FROM vt2, v0, vt0 GROUP BY vt2.c0, vt0.c0, v0.c0 HAVING ((TOTAL(vt0.c0)) NOT BETWEEN (CAST(vt2.c0 AS TEXT)) AND (x'')) UNION ALL SELECT ALL vt2.c0, vt0.c0, v0.c0 FROM vt2, v0, vt0 GROUP BY vt2.c0, vt0.c0, v0.c0 HAVING (NOT (((TOTAL(vt0.c0)) NOT BETWEEN (CAST(vt2.c0 AS TEXT)) AND (x'')))) UNION ALL SELECT vt2.c0, vt0.c0, v0.c0 FROM vt2, v0, vt0 GROUP BY vt2.c0, vt0.c0, v0.c0 HAVING ((((TOTAL(vt0.c0)) NOT BETWEEN (CAST(vt2.c0 AS TEXT)) AND (x''))) ISNULL);
SELECT vt2.c0, vt0.c0, v0.c0 FROM vt2, v0, vt0 GROUP BY vt2.c0, vt0.c0, v0.c0;
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE (CASE WHEN LTRIM(-397083018, vt1.c0) THEN vt1.c0 WHEN CAST(vt1.c0 AS BLOB) THEN ((vt1.c0)==(vt1.c0)) WHEN ((vt1.c0)IS(vt1.c0)) THEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END ELSE TRIM(vt1.c0, vt1.c0) END) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (CASE WHEN LTRIM(-397083018, vt1.c0) THEN vt1.c0 WHEN CAST(vt1.c0 AS BLOB) THEN ((vt1.c0)=(vt1.c0)) WHEN ((vt1.c0)IS(vt1.c0)) THEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END ELSE TRIM(vt1.c0, vt1.c0) END))) UNION ALL SELECT * FROM vt1 WHERE (((CASE WHEN LTRIM(-397083018, vt1.c0) THEN vt1.c0 WHEN CAST(vt1.c0 AS BLOB) THEN ((vt1.c0)=(vt1.c0)) WHEN ((vt1.c0)IS(vt1.c0)) THEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END ELSE TRIM(vt1.c0, vt1.c0) END) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT vt2.c0 FROM vt2;
SELECT DISTINCT vt2.c0 FROM vt2 WHERE (CASE WHEN ((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)) THEN vt2.c0 COLLATE BINARY END) UNION SELECT DISTINCT vt2.c0 FROM vt2 WHERE ((NOT (CASE WHEN ((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)) THEN vt2.c0 COLLATE BINARY END))) UNION SELECT DISTINCT vt2.c0 FROM vt2 WHERE (((CASE WHEN ((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)) THEN vt2.c0 COLLATE BINARY END) ISNULL));
SELECT DISTINCT vt2.c0 FROM vt2;
SELECT vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c0, v0.c0;
SELECT ALL vt1.c0, v0.c0 FROM v0, vt1 WHERE (ABS(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) GROUP BY vt1.c0, v0.c0 UNION SELECT vt1.c0, v0.c0 FROM v0, vt1 WHERE ((NOT (ABS(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))) GROUP BY vt1.c0, v0.c0 UNION SELECT vt1.c0, v0.c0 FROM v0, vt1 WHERE (((ABS(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) ISNULL)) GROUP BY vt1.c0, v0.c0;
SELECT vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c0, v0.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (+ (MIN(vt2.c0))) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT ((+ (MIN(vt2.c0))))) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (((+ (MIN(vt2.c0)))) ISNULL);
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (+ (MIN(vt2.c0))) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT ((+ (MIN(vt2.c0))))) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (((+ (MIN(vt2.c0)))) ISNULL);
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL * FROM vt1, v0;
SELECT ALL * FROM vt1, v0 WHERE (CAST(0.14010454095965819 AS INTEGER)) UNION ALL SELECT * FROM vt1, v0 WHERE ((NOT (CAST(0.14010454095965819 AS INTEGER)))) UNION ALL SELECT ALL * FROM vt1, v0 WHERE (((CAST(0.14010454095965819 AS INTEGER)) ISNULL));
SELECT ALL * FROM vt1, v0;
SELECT DISTINCT vt1.c0 FROM vt1, vt0, vt2;
SELECT DISTINCT vt1.c0 FROM vt1, vt0, vt2 WHERE (IFNULL(DISTINCT (+ (x'')), ((((((((vt2.c0)AND(vt1.c0)))AND(vt2.c0)))OR(vt2.c0)))OR(vt0.c0)))) UNION SELECT DISTINCT vt1.c0 FROM vt1, vt0, vt2 WHERE ((NOT (IFNULL(DISTINCT (+ (x'')), ((((((((vt2.c0)AND(vt1.c0)))AND(vt2.c0)))OR(vt2.c0)))OR(vt0.c0)))))) UNION SELECT DISTINCT vt1.c0 FROM vt1, vt0, vt2 WHERE (((IFNULL(DISTINCT (+ (x'')), ((((((((vt2.c0)AND(vt1.c0)))AND(vt2.c0)))OR(vt2.c0)))OR(vt0.c0)))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1, vt0, vt2;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (CAST(LOWER(vt0.c0) AS NUMERIC)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CAST(LOWER(vt0.c0) AS NUMERIC)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST(LOWER(vt0.c0) AS NUMERIC)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, v0, vt0, vt2 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, v0, vt0, vt2 GROUP BY vt0.c0 HAVING SUM(SUM(SUM('-1362892299'))) UNION ALL SELECT ALL vt0.c0 FROM vt1, v0, vt0, vt2 GROUP BY vt0.c0 HAVING (NOT (SUM(SUM(SUM('-1362892299'))))) UNION ALL SELECT ALL vt0.c0 FROM vt1, v0, vt0, vt2 GROUP BY vt0.c0 HAVING ((SUM(SUM(SUM('-1362892299')))) ISNULL);
SELECT vt2.c0 FROM vt2;
SELECT ALL vt2.c0 FROM vt2 WHERE ((~ ((('') NOT BETWEEN (vt2.c0) AND (vt2.c0))))) UNION ALL SELECT ALL vt2.c0 FROM vt2 WHERE ((NOT ((~ ((('') NOT BETWEEN (vt2.c0) AND (vt2.c0))))))) UNION ALL SELECT ALL vt2.c0 FROM vt2 WHERE ((((~ ((('') NOT BETWEEN (vt2.c0) AND (vt2.c0))))) ISNULL));
SELECT vt2.c0 FROM vt2;
SELECT DISTINCT * FROM vt2;
SELECT DISTINCT * FROM vt2 WHERE (HEX(DISTINCT vt2.c0) COLLATE BINARY) UNION SELECT DISTINCT * FROM vt2 WHERE ((NOT (HEX(DISTINCT vt2.c0) COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt2 WHERE (((HEX(DISTINCT vt2.c0) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM vt2;
SELECT v0.c0 FROM vt0, v0, vt1, vt2 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0, vt1, vt2 WHERE ((((vt0.c0 IN ())) IS FALSE)) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt0, v0, vt1, vt2 WHERE ((NOT ((((vt0.c0 IN ())) IS FALSE)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt0, v0, vt1, vt2 WHERE ((((((vt0.c0 IN ())) IS FALSE)) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0, vt1, vt2 GROUP BY v0.c0;
SELECT vt0.c0 FROM v0, vt0, vt1, vt2 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0, vt1, vt2 GROUP BY vt0.c0 HAVING (((COUNT(*)))<(((((SUM(vt1.c0)))>=((vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM v0, vt0, vt1, vt2 GROUP BY vt0.c0 HAVING (NOT ((((COUNT(*)))<(((((SUM(vt1.c0)))>=((vt0.c0)))))))) UNION ALL SELECT ALL vt0.c0 FROM v0, vt0, vt1, vt2 GROUP BY vt0.c0 HAVING (((((COUNT(*)))<(((((SUM(vt1.c0)))>=((vt0.c0))))))) ISNULL);
SELECT vt0.c0 FROM v0, vt0, vt1, vt2 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0, vt1, vt2 GROUP BY vt0.c0 HAVING (((COUNT(*)))<(((((SUM(vt1.c0)))>=((vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM v0, vt0, vt1, vt2 GROUP BY vt0.c0 HAVING (NOT ((((COUNT(*)))<(((((SUM(vt1.c0)))>=((vt0.c0)))))))) UNION ALL SELECT ALL vt0.c0 FROM v0, vt0, vt1, vt2 GROUP BY vt0.c0 HAVING (((((COUNT(*)))<(((((SUM(vt1.c0)))>=((vt0.c0))))))) ISNULL);
SELECT vt0.c0 FROM v0, vt0, vt1, vt2 GROUP BY vt0.c0;
SELECT * FROM vt2;
SELECT ALL * FROM vt2 WHERE (SQLITE_VERSION()) UNION ALL SELECT ALL * FROM vt2 WHERE ((NOT (SQLITE_VERSION()))) UNION ALL SELECT ALL * FROM vt2 WHERE (((SQLITE_VERSION()) ISNULL));
SELECT * FROM vt2;
SELECT DISTINCT * FROM v0, vt1, vt0 LEFT OUTER JOIN vt2 ON (((vt1.c0)) BETWEEN (((NOT (vt2.c0)))) AND ((((vt2.c0) NOTNULL))));
SELECT DISTINCT * FROM v0, vt1, vt0 LEFT OUTER JOIN vt2 ON (((vt1.c0)) BETWEEN (((NOT (vt2.c0)))) AND ((((vt2.c0) NOTNULL)))) WHERE (((((x'c295')OR((vt1.c0 IN ()))))OR((((vt1.c0, v0.c0, vt2.c0)) NOT BETWEEN ((vt0.c0, v0.c0, vt2.c0)) AND ((vt2.c0, vt0.c0, vt1.c0)))))) UNION SELECT DISTINCT * FROM v0, vt1, vt0 LEFT OUTER JOIN vt2 ON (((vt1.c0)) BETWEEN (((NOT (vt2.c0)))) AND ((((vt2.c0) NOTNULL)))) WHERE ((NOT (((((x'c295')OR((vt1.c0 IN ()))))OR((((vt1.c0, v0.c0, vt2.c0)) NOT BETWEEN ((vt0.c0, v0.c0, vt2.c0)) AND ((vt2.c0, vt0.c0, vt1.c0)))))))) UNION SELECT DISTINCT * FROM v0, vt1, vt0 LEFT OUTER JOIN vt2 ON (((vt1.c0)) BETWEEN (((NOT (vt2.c0)))) AND ((((vt2.c0) NOTNULL)))) WHERE (((((((x'c295')OR((vt1.c0 IN ()))))OR((((vt1.c0, v0.c0, vt2.c0)) NOT BETWEEN ((vt0.c0, v0.c0, vt2.c0)) AND ((vt2.c0, vt0.c0, vt1.c0)))))) ISNULL));
SELECT DISTINCT * FROM v0, vt1, vt0 LEFT OUTER JOIN vt2 ON (((vt1.c0)) BETWEEN (((NOT (vt2.c0)))) AND ((((vt2.c0) NOTNULL))));
SELECT vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON COALESCE(DISTINCT vt0.c0, ((vt1.c0) IS TRUE)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON COALESCE(DISTINCT vt0.c0, ((vt1.c0) IS TRUE)) WHERE ((((((vt0.c0)<<(vt1.c0))))>=(((NOT (vt1.c0)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON COALESCE(DISTINCT vt0.c0, ((vt1.c0) IS TRUE)) WHERE ((NOT ((((((vt0.c0)<<(vt1.c0))))>=(((NOT (vt1.c0)))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON COALESCE(DISTINCT vt0.c0, ((vt1.c0) IS TRUE)) WHERE ((((((((vt0.c0)<<(vt1.c0))))>=(((NOT (vt1.c0)))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON COALESCE(DISTINCT vt0.c0, ((vt1.c0) IS TRUE)) GROUP BY vt0.c0;
SELECT ALL vt2.c0, vt1.c0 FROM vt1, vt2 NATURAL JOIN v0 GROUP BY vt2.c0, vt1.c0;
SELECT ALL vt2.c0, vt1.c0 FROM vt1, vt2 NATURAL JOIN v0 GROUP BY vt2.c0, vt1.c0 HAVING MAX(((COUNT(MAX(AVG(AVG(TOTAL(GROUP_CONCAT(vt2.c0))))))) IS FALSE)) UNION ALL SELECT ALL vt2.c0, vt1.c0 FROM vt1, vt2 NATURAL JOIN v0 GROUP BY vt2.c0, vt1.c0 HAVING (NOT (MAX(((COUNT(MAX(AVG(AVG(TOTAL(GROUP_CONCAT(vt2.c0))))))) IS FALSE)))) UNION ALL SELECT vt2.c0, vt1.c0 FROM vt1, vt2 NATURAL JOIN v0 GROUP BY vt2.c0, vt1.c0 HAVING ((MAX(((COUNT(MAX(AVG(AVG(TOTAL(GROUP_CONCAT(vt2.c0))))))) IS FALSE))) ISNULL);
SELECT ALL vt2.c0 FROM v0, vt2;
SELECT ALL vt2.c0 FROM v0, vt2 WHERE ('rM%') UNION ALL SELECT vt2.c0 FROM v0, vt2 WHERE ((NOT ('rM%'))) UNION ALL SELECT vt2.c0 FROM v0, vt2 WHERE ((('rM%') ISNULL));
SELECT ALL vt2.c0 FROM v0, vt2;
SELECT DISTINCT * FROM v0, vt2;
SELECT DISTINCT * FROM v0, vt2 WHERE ((LIKELY(vt2.c0) IN (((x'') NOTNULL)))) UNION SELECT DISTINCT * FROM v0, vt2 WHERE ((NOT ((LIKELY(vt2.c0) IN (((x'') NOTNULL)))))) UNION SELECT DISTINCT * FROM v0, vt2 WHERE ((((LIKELY(vt2.c0) IN (((x'') NOTNULL)))) ISNULL));
SELECT DISTINCT * FROM v0, vt2;
SELECT ALL vt1.c0, v0.c0, vt0.c0 FROM vt0, v0 LEFT OUTER JOIN vt1 ON CASE WHEN ((((((((vt0.c0)OR(vt1.c0)))AND(v0.c0)))OR(vt1.c0)))OR(v0.c0)) THEN CAST(v0.c0 AS INTEGER) END GROUP BY vt1.c0, v0.c0, vt0.c0;
SELECT vt1.c0, v0.c0, vt0.c0 FROM vt0, v0 LEFT OUTER JOIN vt1 ON CASE WHEN ((((((((vt0.c0)OR(vt1.c0)))AND(v0.c0)))OR(vt1.c0)))OR(v0.c0)) THEN CAST(v0.c0 AS INTEGER) END WHERE (CAST(vt1.c0 AS BLOB)) GROUP BY vt1.c0, v0.c0, vt0.c0 UNION SELECT ALL vt1.c0, v0.c0, vt0.c0 FROM vt0, v0 LEFT OUTER JOIN vt1 ON CASE WHEN ((((((((vt0.c0)OR(vt1.c0)))AND(v0.c0)))OR(vt1.c0)))OR(v0.c0)) THEN CAST(v0.c0 AS INTEGER) END WHERE ((NOT (CAST(vt1.c0 AS BLOB)))) GROUP BY vt1.c0, v0.c0, vt0.c0 UNION SELECT ALL vt1.c0, v0.c0, vt0.c0 FROM vt0, v0 LEFT OUTER JOIN vt1 ON CASE WHEN ((((((((vt0.c0)OR(vt1.c0)))AND(v0.c0)))OR(vt1.c0)))OR(v0.c0)) THEN CAST(v0.c0 AS INTEGER) END WHERE (((CAST(vt1.c0 AS BLOB)) ISNULL)) GROUP BY vt1.c0, v0.c0, vt0.c0;
SELECT ALL vt1.c0, v0.c0, vt0.c0 FROM vt0, v0 LEFT OUTER JOIN vt1 ON CASE WHEN ((((((((vt0.c0)OR(vt1.c0)))AND(v0.c0)))OR(vt1.c0)))OR(v0.c0)) THEN CAST(v0.c0 AS INTEGER) END GROUP BY vt1.c0, v0.c0, vt0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING TOTAL(((((vt1.c0)AND(TOTAL(vt1.c0))))AND(GROUP_CONCAT(vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (TOTAL(((((vt1.c0)AND(TOTAL(vt1.c0))))AND(GROUP_CONCAT(vt1.c0)))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((TOTAL(((((vt1.c0)AND(TOTAL(vt1.c0))))AND(GROUP_CONCAT(vt1.c0))))) ISNULL);
SELECT MAX((+ ((((vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, vt1.c0)))))) FROM vt1 ORDER BY ((vt1.c0 COLLATE BINARY)>((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))))  NULLS LAST;
SELECT ALL * FROM vt1, vt2, v0, vt0;
SELECT * FROM vt1, vt2, v0, vt0 WHERE ((((v0.c0 IN (v0.c0, vt2.c0))) NOT NULL)) UNION ALL SELECT * FROM vt1, vt2, v0, vt0 WHERE ((NOT ((((v0.c0 IN (v0.c0, vt2.c0))) NOT NULL)))) UNION ALL SELECT * FROM vt1, vt2, v0, vt0 WHERE ((((((v0.c0 IN (v0.c0, vt2.c0))) NOT NULL)) ISNULL));
SELECT ALL * FROM vt1, vt2, v0, vt0;
SELECT DISTINCT vt2.c0, vt0.c0 FROM vt2, vt0, vt1;
SELECT DISTINCT vt2.c0, vt0.c0 FROM vt2, vt0, vt1 WHERE (((((vt1.c0 IN ())))=((LAST_INSERT_ROWID())))) UNION SELECT DISTINCT vt2.c0, vt0.c0 FROM vt2, vt0, vt1 WHERE ((NOT (((((vt1.c0 IN ())))=((LAST_INSERT_ROWID())))))) UNION SELECT DISTINCT vt2.c0, vt0.c0 FROM vt2, vt0, vt1 WHERE (((((((vt1.c0 IN ())))=((LAST_INSERT_ROWID())))) ISNULL));
SELECT DISTINCT vt2.c0, vt0.c0 FROM vt2, vt0, vt1;
SELECT ALL vt0.c0 FROM vt0, vt2 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt2 WHERE ((+ ((((vt0.c0))<>((vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, vt2 WHERE ((NOT ((+ ((((vt0.c0))<>((vt0.c0)))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, vt2 WHERE ((((+ ((((vt0.c0))<>((vt0.c0)))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt2 GROUP BY vt0.c0;
SELECT vt1.c0, vt2.c0, vt0.c0 FROM vt2, vt1, vt0 GROUP BY vt1.c0, vt2.c0, vt0.c0;
SELECT ALL vt1.c0, vt2.c0, vt0.c0 FROM vt2, vt1, vt0 GROUP BY vt1.c0, vt2.c0, vt0.c0 HAVING TOTAL(AVG(COUNT(*))) UNION ALL SELECT ALL vt1.c0, vt2.c0, vt0.c0 FROM vt2, vt1, vt0 GROUP BY vt1.c0, vt2.c0, vt0.c0 HAVING (NOT (TOTAL(AVG(COUNT(*))))) UNION ALL SELECT vt1.c0, vt2.c0, vt0.c0 FROM vt2, vt1, vt0 GROUP BY vt1.c0, vt2.c0, vt0.c0 HAVING ((TOTAL(AVG(COUNT(*)))) ISNULL);
SELECT * FROM vt1 INNER JOIN vt0 ON CAST((((vt0.c0, v0.c0, vt1.c0))>=((v0.c0, 'F\!H~', x''))) AS TEXT) INNER JOIN vt2 ON ((CAST(v0.c0 AS TEXT)) BETWEEN (0.8780975263442216 COLLATE NOCASE) AND ((NOT (vt2.c0)))) LEFT OUTER JOIN v0 ON NULL;
SELECT * FROM vt1 INNER JOIN vt0 ON CAST((((vt0.c0, v0.c0, vt1.c0))>=((v0.c0, 'F\!H~', x''))) AS TEXT) INNER JOIN vt2 ON ((CAST(v0.c0 AS TEXT)) BETWEEN (0.8780975263442216 COLLATE NOCASE) AND ((NOT (vt2.c0)))) LEFT OUTER JOIN v0 ON NULL WHERE (((((v0.c0 IN ())))>=((((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)))))) UNION ALL SELECT * FROM vt1 INNER JOIN vt0 ON CAST((((vt0.c0, v0.c0, vt1.c0))>=((v0.c0, 'F\!H~', x''))) AS TEXT) INNER JOIN vt2 ON ((CAST(v0.c0 AS TEXT)) BETWEEN (0.8780975263442216 COLLATE NOCASE) AND ((NOT (vt2.c0)))) LEFT OUTER JOIN v0 ON NULL WHERE ((NOT (((((v0.c0 IN ())))>=((((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)))))))) UNION ALL SELECT ALL * FROM vt1 INNER JOIN vt0 ON CAST((((vt0.c0, v0.c0, vt1.c0))>=((v0.c0, 'F\!H~', x''))) AS TEXT) INNER JOIN vt2 ON ((CAST(v0.c0 AS TEXT)) BETWEEN (0.8780975263442216 COLLATE NOCASE) AND ((NOT (vt2.c0)))) LEFT OUTER JOIN v0 ON NULL WHERE (((((((v0.c0 IN ())))>=((((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)))))) ISNULL));
SELECT * FROM vt1 INNER JOIN vt0 ON CAST((((vt0.c0, v0.c0, vt1.c0))>=((v0.c0, 'F\!H~', x''))) AS TEXT) INNER JOIN vt2 ON ((CAST(v0.c0 AS TEXT)) BETWEEN (0.8780975263442216 COLLATE NOCASE) AND ((NOT (vt2.c0)))) LEFT OUTER JOIN v0 ON NULL;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (CAST(((((vt1.c0)OR(vt1.c0)))OR(NULL)) AS INTEGER)) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (CAST(((((vt1.c0)OR(vt1.c0)))OR(NULL)) AS INTEGER)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((CAST(((((vt1.c0)OR(vt1.c0)))OR(NULL)) AS INTEGER)) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CAST((+ (vt0.c0)) AS NUMERIC)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CAST((+ (vt0.c0)) AS NUMERIC)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST((+ (vt0.c0)) AS NUMERIC)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT ALL MIN(CASE ((((v0.c0)OR(164450449)))AND(x''))  WHEN (((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) THEN vt1.c0 WHEN CAST(vt1.c0 AS NUMERIC) THEN ((vt1.c0) BETWEEN (vt0.c0) AND (v0.c0)) WHEN ((vt1.c0)<=('M0z')) THEN vt1.c0 END) FROM vt0, v0, vt1, vt2 ORDER BY CASE MAX(vt2.c0, 'TE4P+(')  WHEN ((v0.c0)AND(vt2.c0)) THEN (((vt1.c0))<=((vt0.c0))) WHEN (((vt2.c0, vt0.c0, v0.c0))<((vt1.c0, vt0.c0, v0.c0))) THEN (~ (vt1.c0)) WHEN ((vt2.c0) IS FALSE) THEN (((vt0.c0, vt2.c0, 0.25947453119927444))<>((v0.c0, 0.4997476252158236, vt1.c0))) END DESC  NULLS FIRST, CASE 0.20243585798922714 COLLATE RTRIM  WHEN vt0.c0 COLLATE RTRIM THEN ((vt1.c0)IS NOT(vt1.c0)) WHEN ((((vt2.c0)OR(vt0.c0)))OR(vt0.c0)) THEN CAST(vt1.c0 AS INTEGER) WHEN vt0.c0 COLLATE BINARY THEN ((((v0.c0)AND(vt0.c0)))OR(vt1.c0)) ELSE rtreenode(v0.c0, vt2.c0) END DESC  NULLS FIRST;
SELECT * FROM vt0 INNER JOIN vt1 ON ((((vt1.c0)GLOB(vt2.c0))) ISNULL) INNER JOIN vt2 ON ABS((vt0.c0 IN ())) RIGHT OUTER JOIN v0 ON (((((('_C<AOu') NOT BETWEEN (vt0.c0) AND (vt1.c0)))AND(vt1.c0 COLLATE NOCASE)))AND((('O&')|(vt0.c0))));
SELECT DISTINCT v0.c0, vt1.c0, vt0.c0 FROM vt0, vt2, v0, vt1;
SELECT DISTINCT v0.c0, vt1.c0, vt0.c0 FROM vt0, vt2, v0, vt1 WHERE (0.8194382388661121) UNION SELECT DISTINCT v0.c0, vt1.c0, vt0.c0 FROM vt0, vt2, v0, vt1 WHERE ((NOT (0.8194382388661121))) UNION SELECT DISTINCT v0.c0, vt1.c0, vt0.c0 FROM vt0, vt2, v0, vt1 WHERE (((0.8194382388661121) ISNULL));
SELECT DISTINCT v0.c0, vt1.c0, vt0.c0 FROM vt0, vt2, v0, vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (UPPER(DISTINCT ((vt1.c0)!=(vt1.c0)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (UPPER(DISTINCT ((vt1.c0)<>(vt1.c0)))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((UPPER(DISTINCT ((vt1.c0)!=(vt1.c0)))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c0, vt2.c0 FROM vt1, vt0 RIGHT OUTER JOIN vt2 ON '' GROUP BY vt0.c0, vt2.c0;
SELECT vt0.c0, vt2.c0 FROM vt1, vt0 RIGHT OUTER JOIN vt2 ON '' GROUP BY vt0.c0, vt2.c0 HAVING ((-2032775170)&(GROUP_CONCAT(vt0.c0))) UNION ALL SELECT vt0.c0, vt2.c0 FROM vt1, vt0 RIGHT OUTER JOIN vt2 ON '' GROUP BY vt0.c0, vt2.c0 HAVING (NOT (((-2032775170)&(GROUP_CONCAT(vt0.c0))))) UNION ALL SELECT vt0.c0, vt2.c0 FROM vt1, vt0 RIGHT OUTER JOIN vt2 ON '' GROUP BY vt0.c0, vt2.c0 HAVING ((((-2032775170)&(GROUP_CONCAT(vt0.c0)))) ISNULL);
SELECT ALL vt0.c0, vt2.c0 FROM vt1, vt0 RIGHT OUTER JOIN vt2 ON '' GROUP BY vt0.c0, vt2.c0;
SELECT vt0.c0, vt2.c0 FROM vt1, vt0 RIGHT OUTER JOIN vt2 ON '' GROUP BY vt0.c0, vt2.c0 HAVING ((-2032775170)&(GROUP_CONCAT(vt0.c0))) UNION ALL SELECT vt0.c0, vt2.c0 FROM vt1, vt0 RIGHT OUTER JOIN vt2 ON '' GROUP BY vt0.c0, vt2.c0 HAVING (NOT (((-2032775170)&(GROUP_CONCAT(vt0.c0))))) UNION ALL SELECT vt0.c0, vt2.c0 FROM vt1, vt0 RIGHT OUTER JOIN vt2 ON '' GROUP BY vt0.c0, vt2.c0 HAVING ((((-2032775170)&(GROUP_CONCAT(vt0.c0)))) ISNULL);
SELECT ALL vt0.c0, vt2.c0 FROM vt1, vt0 RIGHT OUTER JOIN vt2 ON '' GROUP BY vt0.c0, vt2.c0;
SELECT ALL vt2.c0 FROM vt0, vt2, vt1 NATURAL JOIN v0;
SELECT vt2.c0 FROM vt0, vt2 NOT INDEXED, vt1 NATURAL JOIN v0 WHERE (CAST(SQLITE_COMPILEOPTION_GET(v0.c0) AS INTEGER)) UNION ALL SELECT ALL vt2.c0 FROM vt0 NOT INDEXED, vt2, vt1 NATURAL JOIN v0 WHERE ((NOT (CAST(SQLITE_COMPILEOPTION_GET(v0.c0) AS INTEGER)))) UNION ALL SELECT vt2.c0 FROM vt0, vt2, vt1 NATURAL JOIN v0 WHERE (((CAST(SQLITE_COMPILEOPTION_GET(v0.c0) AS INTEGER)) ISNULL));
SELECT ALL vt2.c0 FROM vt0, vt2, vt1 NATURAL JOIN v0;
SELECT DISTINCT vt1.c0 FROM v0, vt1;
SELECT DISTINCT vt1.c0 FROM v0, vt1 WHERE (CASE WHEN ((((v0.c0)OR(vt1.c0)))AND(v0.c0)) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (v0.c0)) END) UNION SELECT DISTINCT vt1.c0 FROM v0, vt1 WHERE ((NOT (CASE WHEN ((((v0.c0)OR(vt1.c0)))AND(v0.c0)) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (v0.c0)) END))) UNION SELECT DISTINCT vt1.c0 FROM v0, vt1 WHERE (((CASE WHEN ((((v0.c0)OR(vt1.c0)))AND(v0.c0)) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (v0.c0)) END) ISNULL));
SELECT DISTINCT vt1.c0 FROM v0, vt1;
SELECT vt2.c0, vt1.c0 FROM vt1 LEFT OUTER JOIN vt2 ON CASE vt2.c0  WHEN vt1.c0 THEN vt2.c0 END COLLATE BINARY GROUP BY vt2.c0, vt1.c0;
SELECT ALL vt2.c0, vt1.c0 FROM vt1 LEFT OUTER JOIN vt2 ON CASE vt2.c0  WHEN vt1.c0 THEN vt2.c0 END COLLATE BINARY WHERE (((((vt1.c0) BETWEEN (0.615789820514346) AND ('-1e500')))IS NOT((~ (vt1.c0))))) GROUP BY vt2.c0, vt1.c0 UNION SELECT ALL vt2.c0, vt1.c0 FROM vt1 LEFT OUTER JOIN vt2 ON CASE vt2.c0  WHEN vt1.c0 THEN vt2.c0 END COLLATE BINARY WHERE ((NOT (((((vt1.c0) BETWEEN (0.615789820514346) AND ('-1e500')))IS NOT((~ (vt1.c0))))))) GROUP BY vt2.c0, vt1.c0 UNION SELECT vt2.c0, vt1.c0 FROM vt1 LEFT OUTER JOIN vt2 ON CASE vt2.c0  WHEN vt1.c0 THEN vt2.c0 END COLLATE BINARY WHERE (((((((vt1.c0) BETWEEN (0.615789820514346) AND ('-1e500')))IS NOT((~ (vt1.c0))))) ISNULL)) GROUP BY vt2.c0, vt1.c0;
SELECT vt2.c0, vt1.c0 FROM vt1 LEFT OUTER JOIN vt2 ON CASE vt2.c0  WHEN vt1.c0 THEN vt2.c0 END COLLATE BINARY GROUP BY vt2.c0, vt1.c0;
SELECT ALL v0.c0 FROM vt2, vt1, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt2, vt1, v0 GROUP BY v0.c0 HAVING SUM(MAX(vt2.c0)) UNION ALL SELECT v0.c0 FROM vt2, vt1, v0 GROUP BY v0.c0 HAVING (NOT (SUM(MAX(vt2.c0)))) UNION ALL SELECT v0.c0 FROM vt2, vt1, v0 GROUP BY v0.c0 HAVING ((SUM(MAX(vt2.c0))) ISNULL);
SELECT vt2.c0, vt0.c0, v0.c0 FROM vt2, v0, vt1, vt0;
SELECT ALL vt2.c0, vt0.c0, v0.c0 FROM vt2, v0, vt1, vt0 WHERE ((~ (CASE v0.c0  WHEN vt1.c0 THEN 563072119 END))) UNION ALL SELECT ALL vt2.c0, vt0.c0, v0.c0 FROM vt2, v0, vt1, vt0 WHERE ((NOT ((~ (CASE v0.c0  WHEN vt1.c0 THEN 563072119 END))))) UNION ALL SELECT ALL vt2.c0, vt0.c0, v0.c0 FROM vt2, v0, vt1, vt0 WHERE ((((~ (CASE v0.c0  WHEN vt1.c0 THEN 563072119 END))) ISNULL));
SELECT vt2.c0, vt0.c0, v0.c0 FROM vt2, v0, vt1, vt0;
SELECT DISTINCT vt1.c0, v0.c0, vt2.c0, vt0.c0 FROM vt0, vt1 NOT INDEXED, v0 CROSS JOIN vt2 ON NULLIF(DISTINCT CASE WHEN vt0.c0 THEN vt0.c0 END, (vt0.c0 IN ()));
SELECT DISTINCT vt1.c0, v0.c0, vt2.c0, vt0.c0 FROM vt0, vt1, v0 CROSS JOIN vt2 ON NULLIF(DISTINCT CASE WHEN vt0.c0 THEN vt0.c0 END, (vt0.c0 IN ())) WHERE ((((vt0.c0, vt2.c0, vt0.c0)) NOT BETWEEN ((UNLIKELY(vt2.c0), ((vt0.c0)%(vt2.c0)), LENGTH(vt2.c0))) AND ((CAST('896340772' AS BLOB), ((v0.c0)IS NOT(vt0.c0)), (vt2.c0 IN ()))))) UNION SELECT DISTINCT vt1.c0, v0.c0, vt2.c0, vt0.c0 FROM vt0, vt1, v0 CROSS JOIN vt2 ON NULLIF(DISTINCT CASE WHEN vt0.c0 THEN vt0.c0 END, (vt0.c0 IN ())) WHERE ((NOT ((((vt0.c0, vt2.c0, vt0.c0)) NOT BETWEEN ((UNLIKELY(vt2.c0), ((vt0.c0)%(vt2.c0)), LENGTH(vt2.c0))) AND ((CAST('896340772' AS BLOB), ((v0.c0)IS NOT(vt0.c0)), (vt2.c0 IN ()))))))) UNION SELECT DISTINCT vt1.c0, v0.c0, vt2.c0, vt0.c0 FROM vt0, vt1, v0 CROSS JOIN vt2 ON NULLIF(DISTINCT CASE WHEN vt0.c0 THEN vt0.c0 END, (vt0.c0 IN ())) WHERE ((((((vt0.c0, vt2.c0, vt0.c0)) NOT BETWEEN ((UNLIKELY(vt2.c0), ((vt0.c0)%(vt2.c0)), LENGTH(vt2.c0))) AND ((CAST('896340772' AS BLOB), ((v0.c0)IS NOT(vt0.c0)), (vt2.c0 IN ()))))) ISNULL));
SELECT DISTINCT vt1.c0, v0.c0, vt2.c0, vt0.c0 FROM vt0, vt1 NOT INDEXED, v0 CROSS JOIN vt2 ON NULLIF(DISTINCT CASE WHEN vt0.c0 THEN vt0.c0 END, (vt0.c0 IN ()));
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 WHERE (DATE(CASE WHEN vt2.c0 THEN vt2.c0 END, ((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)), (x'' IN ()), ((vt2.c0)<=(vt2.c0)), CASE WHEN vt2.c0 THEN vt2.c0 END)) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2 WHERE ((NOT (DATE(CASE WHEN vt2.c0 THEN vt2.c0 END, ((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)), (x'' IN ()), ((vt2.c0)<=(vt2.c0)), CASE WHEN vt2.c0 THEN vt2.c0 END)))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE (((DATE(CASE WHEN vt2.c0 THEN vt2.c0 END, ((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)), (x'' IN ()), ((vt2.c0)<=(vt2.c0)), CASE WHEN vt2.c0 THEN vt2.c0 END)) ISNULL)) GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM v0, vt1, vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM v0, vt1, vt2 GROUP BY vt2.c0 HAVING LIKE(CAST(vt1.c0 AS INTEGER), (COUNT(MIN(AVG(COUNT(*)))) IN ())) UNION ALL SELECT ALL vt2.c0 FROM v0, vt1, vt2 GROUP BY vt2.c0 HAVING (NOT (LIKE(CAST(vt1.c0 AS INTEGER), (COUNT(MIN(AVG(COUNT(*)))) IN ())))) UNION ALL SELECT vt2.c0 FROM v0 NOT INDEXED, vt1, vt2 GROUP BY vt2.c0 HAVING ((LIKE(CAST(vt1.c0 AS INTEGER), (COUNT(MIN(AVG(COUNT(*)))) IN ()))) ISNULL);
SELECT ALL vt2.c0 FROM v0, vt1, vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM v0, vt1, vt2 GROUP BY vt2.c0 HAVING LIKE(CAST(vt1.c0 AS INTEGER), (COUNT(MIN(AVG(COUNT(*)))) IN ())) UNION ALL SELECT ALL vt2.c0 FROM v0, vt1, vt2 GROUP BY vt2.c0 HAVING (NOT (LIKE(CAST(vt1.c0 AS INTEGER), (COUNT(MIN(AVG(COUNT(*)))) IN ())))) UNION ALL SELECT vt2.c0 FROM v0 NOT INDEXED, vt1, vt2 GROUP BY vt2.c0 HAVING ((LIKE(CAST(vt1.c0 AS INTEGER), (COUNT(MIN(AVG(COUNT(*)))) IN ()))) ISNULL);
SELECT ALL vt2.c0 FROM v0, vt1, vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2;
SELECT ALL vt2.c0 FROM vt2 WHERE ((((vt2.c0 IN (vt2.c0)))>=(((vt2.c0)LIKE(vt2.c0))))) UNION ALL SELECT vt2.c0 FROM vt2 WHERE ((NOT ((((vt2.c0 IN (vt2.c0)))>=(((vt2.c0)LIKE(vt2.c0))))))) UNION ALL SELECT vt2.c0 FROM vt2 WHERE ((((((vt2.c0 IN (vt2.c0)))>=(((vt2.c0)LIKE(vt2.c0))))) ISNULL));
SELECT vt2.c0 FROM vt2;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (CAST(CAST(v0.c0 AS TEXT) AS NUMERIC)) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (CAST(CAST(v0.c0 AS TEXT) AS NUMERIC)))) UNION SELECT DISTINCT * FROM v0 WHERE (((CAST(CAST(v0.c0 AS TEXT) AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((((((0.6373715571618548)/(v0.c0)))AND(v0.c0 COLLATE BINARY)))AND(v0.c0))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((((0.6373715571618548)/(v0.c0)))AND(v0.c0 COLLATE BINARY)))AND(v0.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((((((0.6373715571618548)/(v0.c0)))AND(v0.c0 COLLATE BINARY)))AND(v0.c0))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt0.c0, v0.c0, vt2.c0 FROM vt0, vt2, v0 GROUP BY vt0.c0, v0.c0, vt2.c0;
SELECT vt0.c0, v0.c0, vt2.c0 FROM vt0, vt2, v0 GROUP BY vt0.c0, v0.c0, vt2.c0 HAVING 'u' UNION ALL SELECT vt0.c0, v0.c0, vt2.c0 FROM vt0, vt2, v0 GROUP BY vt0.c0, v0.c0, vt2.c0 HAVING (NOT ('u')) UNION ALL SELECT vt0.c0, v0.c0, vt2.c0 FROM vt0, vt2, v0 GROUP BY vt0.c0, v0.c0, vt2.c0 HAVING (('u') ISNULL);
SELECT vt0.c0, v0.c0, vt2.c0 FROM vt0, vt2, v0 GROUP BY vt0.c0, v0.c0, vt2.c0;
SELECT vt0.c0, v0.c0, vt2.c0 FROM vt0, vt2, v0 GROUP BY vt0.c0, v0.c0, vt2.c0 HAVING 'u' UNION ALL SELECT vt0.c0, v0.c0, vt2.c0 FROM vt0, vt2, v0 GROUP BY vt0.c0, v0.c0, vt2.c0 HAVING (NOT ('u')) UNION ALL SELECT vt0.c0, v0.c0, vt2.c0 FROM vt0, vt2, v0 GROUP BY vt0.c0, v0.c0, vt2.c0 HAVING (('u') ISNULL);
SELECT vt0.c0, v0.c0, vt2.c0 FROM vt0, vt2, v0 GROUP BY vt0.c0, v0.c0, vt2.c0;
SELECT ALL TOTAL(((((vt1.c0)<<(vt1.c0)))|(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) FROM vt1, vt0 ORDER BY CASE WHEN CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END THEN (+ (vt1.c0)) END;
SELECT v0.c0 FROM v0 FULL OUTER JOIN vt1 ON v0.c0;
SELECT ALL v0.c0 FROM v0 FULL OUTER JOIN vt1 ON v0.c0 WHERE ((((SQLITE_COMPILEOPTION_GET(x'')))<((CAST(vt1.c0 AS NUMERIC))))) UNION ALL SELECT v0.c0 FROM v0 FULL OUTER JOIN vt1 ON v0.c0 WHERE ((NOT ((((SQLITE_COMPILEOPTION_GET(x'')))<((CAST(vt1.c0 AS NUMERIC))))))) UNION ALL SELECT v0.c0 FROM v0 FULL OUTER JOIN vt1 ON v0.c0 WHERE ((((((SQLITE_COMPILEOPTION_GET(x'')))<((CAST(vt1.c0 AS NUMERIC))))) ISNULL));
SELECT v0.c0 FROM v0 FULL OUTER JOIN vt1 ON v0.c0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (CAST((~ (0X38d2f80e)) AS TEXT)) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (CAST((~ (0X38d2f80e)) AS TEXT)))) UNION SELECT DISTINCT * FROM v0 WHERE (((CAST((~ (0x38d2f80e)) AS TEXT)) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT v0.c0, vt0.c0 FROM vt0, vt2, v0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, vt2, v0 WHERE ('1449245329') GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM vt0, vt2, v0 WHERE ((NOT ('1449245329'))) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM vt0, vt2, v0 WHERE ((('1449245329') ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, vt2, v0 GROUP BY v0.c0, vt0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL * FROM vt1, vt0, v0;
SELECT ALL * FROM vt1, vt0, v0 WHERE ((((((v0.c0))=((v0.c0))))IS(((vt1.c0)LIKE(v0.c0))))) UNION ALL SELECT * FROM vt1, vt0, v0 WHERE ((NOT ((((((v0.c0))==((v0.c0))))IS(((vt1.c0)LIKE(v0.c0))))))) UNION ALL SELECT * FROM vt1, vt0, v0 WHERE ((((((((v0.c0))==((v0.c0))))IS(((vt1.c0)LIKE(v0.c0))))) ISNULL));
SELECT ALL * FROM vt1, vt0, v0;
SELECT DISTINCT vt2.c0, v0.c0 FROM v0, vt2;
SELECT DISTINCT vt2.c0, v0.c0 FROM v0, vt2 WHERE (CAST(((vt2.c0) ISNULL) AS REAL)) UNION SELECT DISTINCT vt2.c0, v0.c0 FROM v0, vt2 WHERE ((NOT (CAST(((vt2.c0) ISNULL) AS REAL)))) UNION SELECT DISTINCT vt2.c0, v0.c0 FROM v0, vt2 WHERE (((CAST(((vt2.c0) ISNULL) AS REAL)) ISNULL));
SELECT DISTINCT vt2.c0, v0.c0 FROM v0, vt2;
SELECT vt2.c0 FROM vt2, vt0, v0 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2, vt0, v0 WHERE ('Mq' COLLATE NOCASE) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2, vt0, v0 WHERE ((NOT ('Mq' COLLATE NOCASE))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2, vt0, v0 WHERE ((('Mq' COLLATE NOCASE) ISNULL)) GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2, vt0, v0 GROUP BY vt2.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG((NOT (vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (AVG((NOT (vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG((NOT (vt0.c0)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG((NOT (vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (AVG((NOT (vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG((NOT (vt0.c0)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt1.c0 FROM vt1, vt0, vt2;
SELECT ALL vt1.c0 FROM vt1, vt0, vt2 WHERE ((((((((((((((- (vt1.c0)))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (0.6925806546799093)))))AND(CASE vt2.c0  WHEN vt2.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(LIKELIHOOD(vt2.c0, 0.6444949267727988))))OR(vt1.c0)))OR(CASE vt2.c0  WHEN vt2.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 END)))OR(((vt2.c0)>=(vt0.c0))))) UNION ALL SELECT vt1.c0 FROM vt1, vt0, vt2 WHERE ((NOT ((((((((((((((- (vt1.c0)))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (0.6925806546799093)))))AND(CASE vt2.c0  WHEN vt2.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(LIKELIHOOD(vt2.c0, 0.6444949267727988))))OR(vt1.c0)))OR(CASE vt2.c0  WHEN vt2.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 END)))OR(((vt2.c0)>=(vt0.c0))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt0, vt2 WHERE ((((((((((((((((- (vt1.c0)))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (0.6925806546799093)))))AND(CASE vt2.c0  WHEN vt2.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(LIKELIHOOD(vt2.c0, 0.6444949267727988))))OR(vt1.c0)))OR(CASE vt2.c0  WHEN vt2.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 END)))OR(((vt2.c0)>=(vt0.c0))))) ISNULL));
SELECT ALL vt1.c0 FROM vt1, vt0, vt2;
SELECT DISTINCT * FROM v0, vt1, vt0, vt2;
SELECT DISTINCT * FROM v0, vt1, vt0 NOT INDEXED, vt2 WHERE (CASE WHEN -2.32352064E8 THEN (vt2.c0 IN ()) WHEN (((v0.c0))==((x''))) THEN CAST(v0.c0 AS REAL) WHEN CASE vt1.c0  WHEN vt2.c0 THEN vt1.c0 ELSE vt1.c0 END THEN ((vt2.c0) BETWEEN (vt0.c0) AND ('-31068172')) ELSE ((vt2.c0)GLOB(vt2.c0)) END) UNION SELECT DISTINCT * FROM v0, vt1, vt0, vt2 WHERE ((NOT (CASE WHEN -2.32352064E8 THEN (vt2.c0 IN ()) WHEN (((v0.c0))=((x''))) THEN CAST(v0.c0 AS REAL) WHEN CASE vt1.c0  WHEN vt2.c0 THEN vt1.c0 ELSE vt1.c0 END THEN ((vt2.c0) BETWEEN (vt0.c0) AND ('-31068172')) ELSE ((vt2.c0)GLOB(vt2.c0)) END))) UNION SELECT DISTINCT * FROM v0, vt1, vt0, vt2 WHERE (((CASE WHEN -2.32352064E8 THEN (vt2.c0 IN ()) WHEN (((v0.c0))=((x''))) THEN CAST(v0.c0 AS REAL) WHEN CASE vt1.c0  WHEN vt2.c0 THEN vt1.c0 ELSE vt1.c0 END THEN ((vt2.c0) BETWEEN (vt0.c0) AND ('-31068172')) ELSE ((vt2.c0)GLOB(vt2.c0)) END) ISNULL));
SELECT DISTINCT * FROM v0, vt1, vt0, vt2;
SELECT ALL vt2.c0, vt0.c0 FROM vt0, vt2 GROUP BY vt2.c0, vt0.c0;
SELECT vt2.c0, vt0.c0 FROM vt0, vt2 WHERE (((((((vt2.c0)OR(vt2.c0)))AND(vt2.c0)))&((vt2.c0 IN ())))) GROUP BY vt2.c0, vt0.c0 UNION SELECT ALL vt2.c0, vt0.c0 FROM vt0, vt2 WHERE ((NOT (((((((vt2.c0)OR(vt2.c0)))AND(vt2.c0)))&((vt2.c0 IN ())))))) GROUP BY vt2.c0, vt0.c0 UNION SELECT vt2.c0, vt0.c0 FROM vt0, vt2 WHERE (((((((((vt2.c0)OR(vt2.c0)))AND(vt2.c0)))&((vt2.c0 IN ())))) ISNULL)) GROUP BY vt2.c0, vt0.c0;
SELECT ALL vt2.c0, vt0.c0 FROM vt0, vt2 GROUP BY vt2.c0, vt0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING AVG(TOTAL(v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (AVG(TOTAL(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((AVG(TOTAL(v0.c0))) ISNULL);
SELECT * FROM vt0, vt1 FULL OUTER JOIN v0 ON ((vt1.c0 IN (vt0.c0)) IN (vt0.c0));
SELECT ALL * FROM vt0, vt1 FULL OUTER JOIN v0 ON ((vt1.c0 IN (vt0.c0)) IN (vt0.c0)) WHERE (CASE WHEN ((vt1.c0)>>(vt1.c0)) THEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) WHEN CAST(vt1.c0 AS REAL) THEN (((vt0.c0, v0.c0, v0.c0))>=((vt1.c0, vt1.c0, vt1.c0))) WHEN vt0.c0 COLLATE NOCASE THEN 'aK' ELSE (vt0.c0 IN ('Uq')) END) UNION ALL SELECT * FROM vt0, vt1 FULL OUTER JOIN v0 ON ((vt1.c0 IN (vt0.c0)) IN (vt0.c0)) WHERE ((NOT (CASE WHEN ((vt1.c0)>>(vt1.c0)) THEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) WHEN CAST(vt1.c0 AS REAL) THEN (((vt0.c0, v0.c0, v0.c0))>=((vt1.c0, vt1.c0, vt1.c0))) WHEN vt0.c0 COLLATE NOCASE THEN 'aK' ELSE (vt0.c0 IN ('Uq')) END))) UNION ALL SELECT ALL * FROM vt0, vt1 FULL OUTER JOIN v0 ON ((vt1.c0 IN (vt0.c0)) IN (vt0.c0)) WHERE (((CASE WHEN ((vt1.c0)>>(vt1.c0)) THEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) WHEN CAST(vt1.c0 AS REAL) THEN (((vt0.c0, v0.c0, v0.c0))>=((vt1.c0, vt1.c0, vt1.c0))) WHEN vt0.c0 COLLATE NOCASE THEN 'aK' ELSE (vt0.c0 IN ('Uq')) END) ISNULL));
SELECT * FROM vt0, vt1 FULL OUTER JOIN v0 ON ((vt1.c0 IN (vt0.c0)) IN (vt0.c0));
SELECT DISTINCT vt1.c0, v0.c0 FROM vt1, v0, vt2;
SELECT DISTINCT vt1.c0, v0.c0 FROM vt1, v0, vt2 WHERE (CASE TRIM(vt2.c0)  WHEN ((vt2.c0)<=(vt1.c0)) THEN 0.11297862815805315 ELSE ((vt1.c0)AND(vt2.c0)) END) UNION SELECT DISTINCT vt1.c0, v0.c0 FROM vt1, v0, vt2 WHERE ((NOT (CASE TRIM(vt2.c0)  WHEN ((vt2.c0)<=(vt1.c0)) THEN 0.11297862815805315 ELSE ((vt1.c0)AND(vt2.c0)) END))) UNION SELECT DISTINCT vt1.c0, v0.c0 FROM vt1, v0, vt2 WHERE (((CASE TRIM(vt2.c0)  WHEN ((vt2.c0)<=(vt1.c0)) THEN 0.11297862815805315 ELSE ((vt1.c0)AND(vt2.c0)) END) ISNULL));
SELECT DISTINCT vt1.c0, v0.c0 FROM vt1, v0, vt2;
SELECT vt0.c0 FROM vt0, vt1, vt2 FULL OUTER JOIN v0 ON ((HEX(vt0.c0))LIKE(CAST(vt1.c0 AS INTEGER))) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1, vt2 FULL OUTER JOIN v0 ON ((HEX(vt0.c0))LIKE(CAST(vt1.c0 AS INTEGER))) WHERE (((0.39122795456848725)AND(((v0.c0)<(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, vt1, vt2 FULL OUTER JOIN v0 ON ((HEX(vt0.c0))LIKE(CAST(vt1.c0 AS INTEGER))) WHERE ((NOT (((0.39122795456848725)AND(((v0.c0)<(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, vt1, vt2 FULL OUTER JOIN v0 ON ((HEX(vt0.c0))LIKE(CAST(vt1.c0 AS INTEGER))) WHERE (((((0.39122795456848725)AND(((v0.c0)<(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, vt1, vt2 FULL OUTER JOIN v0 ON ((HEX(vt0.c0))LIKE(CAST(vt1.c0 AS INTEGER))) GROUP BY vt0.c0;
SELECT vt1.c0, vt2.c0 FROM vt1, vt2 GROUP BY vt1.c0, vt2.c0;
SELECT ALL vt1.c0, vt2.c0 FROM vt1, vt2 GROUP BY vt1.c0, vt2.c0 HAVING SUM(COUNT(vt2.c0)) UNION ALL SELECT ALL vt1.c0, vt2.c0 FROM vt1, vt2 GROUP BY vt1.c0, vt2.c0 HAVING (NOT (SUM(COUNT(vt2.c0)))) UNION ALL SELECT vt1.c0, vt2.c0 FROM vt1, vt2 GROUP BY vt1.c0, vt2.c0 HAVING ((SUM(COUNT(vt2.c0))) ISNULL);
SELECT ALL * FROM v0, vt0;
SELECT * FROM v0, vt0 WHERE (CASE vt0.c0 COLLATE BINARY  WHEN ((vt0.c0) IS FALSE) THEN ((v0.c0)>=(vt0.c0)) END) UNION ALL SELECT * FROM v0, vt0 WHERE ((NOT (CASE vt0.c0 COLLATE BINARY  WHEN ((vt0.c0) IS FALSE) THEN ((v0.c0)>=(vt0.c0)) END))) UNION ALL SELECT * FROM v0, vt0 WHERE (((CASE vt0.c0 COLLATE BINARY  WHEN ((vt0.c0) IS FALSE) THEN ((v0.c0)>=(vt0.c0)) END) ISNULL));
SELECT ALL * FROM v0, vt0;
SELECT DISTINCT * FROM vt1, v0, vt2;
SELECT DISTINCT * FROM vt1, v0, vt2 WHERE ((((((vt1.c0)OR(v0.c0)))AND(v0.c0)) IN ((+ (vt1.c0))))) UNION SELECT DISTINCT * FROM vt1, v0, vt2 WHERE ((NOT ((((((vt1.c0)OR(v0.c0)))AND(v0.c0)) IN ((+ (vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1, v0, vt2 WHERE ((((((((vt1.c0)OR(v0.c0)))AND(v0.c0)) IN ((+ (vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1, v0, vt2;
SELECT ALL vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON vt1.c0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON vt1.c0 WHERE (((((vt1.c0)>=(vt0.c0)))AND(PRINTF(vt0.c0)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON vt1.c0 WHERE ((NOT (((((vt1.c0)>=(vt0.c0)))AND(PRINTF(vt0.c0)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON vt1.c0 WHERE (((((((vt1.c0)>=(vt0.c0)))AND(PRINTF(vt0.c0)))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON vt1.c0 GROUP BY vt1.c0;
SELECT vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON (((vt2.c0)) BETWEEN ((CAST(vt0.c0 AS BLOB))) AND ((LOWER(vt1.c0)))) INNER JOIN vt2 ON ((x'851b')GLOB(((vt0.c0)LIKE(vt0.c0)))) GROUP BY vt0.c0;
SELECT ALL vt2.c0 FROM vt2;
SELECT ALL vt2.c0 FROM vt2 WHERE ((- (vt2.c0))) UNION ALL SELECT ALL vt2.c0 FROM vt2 WHERE ((NOT ((- (vt2.c0))))) UNION ALL SELECT vt2.c0 FROM vt2 WHERE ((((- (vt2.c0))) ISNULL));
SELECT ALL vt2.c0 FROM vt2;
SELECT DISTINCT * FROM vt2, vt0 CROSS JOIN vt1 ON CASE WHEN SUBSTR(vt0.c0, vt1.c0) THEN (NOT (v0.c0)) ELSE (v0.c0 IN ()) END LEFT OUTER JOIN v0 ON (((vt2.c0)) NOT BETWEEN ((vt2.c0)) AND ((0.17619606397797916 COLLATE NOCASE)));
SELECT DISTINCT * FROM vt2, vt0 CROSS JOIN vt1 ON CASE WHEN SUBSTR(vt0.c0, vt1.c0) THEN (NOT (v0.c0)) ELSE (v0.c0 IN ()) END LEFT OUTER JOIN v0 ON (((vt2.c0)) NOT BETWEEN ((vt2.c0)) AND ((0.17619606397797916 COLLATE NOCASE))) WHERE (vt0.c0) UNION SELECT DISTINCT * FROM vt2, vt0 CROSS JOIN vt1 ON CASE WHEN SUBSTR(vt0.c0, vt1.c0) THEN (NOT (v0.c0)) ELSE (v0.c0 IN ()) END LEFT OUTER JOIN v0 ON (((vt2.c0)) NOT BETWEEN ((vt2.c0)) AND ((0.17619606397797916 COLLATE NOCASE))) WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM vt2, vt0 CROSS JOIN vt1 ON CASE WHEN SUBSTR(vt0.c0, vt1.c0) THEN (NOT (v0.c0)) ELSE (v0.c0 IN ()) END LEFT OUTER JOIN v0 ON (((vt2.c0)) NOT BETWEEN ((vt2.c0)) AND ((0.17619606397797916 COLLATE NOCASE))) WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM vt2, vt0 CROSS JOIN vt1 ON CASE WHEN SUBSTR(vt0.c0, vt1.c0) THEN (NOT (v0.c0)) ELSE (v0.c0 IN ()) END LEFT OUTER JOIN v0 ON (((vt2.c0)) NOT BETWEEN ((vt2.c0)) AND ((0.17619606397797916 COLLATE NOCASE)));
SELECT vt1.c0 FROM vt1 CROSS JOIN vt2 ON ((((1376894943)AND(((vt1.c0)||(vt1.c0)))))AND(((vt1.c0) BETWEEN (vt2.c0) AND (vt1.c0)))) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 CROSS JOIN vt2 ON ((((1376894943)AND(((vt1.c0)||(vt1.c0)))))AND(((vt1.c0) BETWEEN (vt2.c0) AND (vt1.c0)))) WHERE (vt2.c0) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 CROSS JOIN vt2 ON ((((1376894943)AND(((vt1.c0)||(vt1.c0)))))AND(((vt1.c0) BETWEEN (vt2.c0) AND (vt1.c0)))) WHERE ((NOT (vt2.c0))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 CROSS JOIN vt2 ON ((((1376894943)AND(((vt1.c0)||(vt1.c0)))))AND(((vt1.c0) BETWEEN (vt2.c0) AND (vt1.c0)))) WHERE (((vt2.c0) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 CROSS JOIN vt2 ON ((((1376894943)AND(((vt1.c0)||(vt1.c0)))))AND(((vt1.c0) BETWEEN (vt2.c0) AND (vt1.c0)))) GROUP BY vt1.c0;
SELECT ALL vt2.c0 FROM vt2 INNER JOIN vt0 ON CAST(vt1.c0 AS BLOB) LEFT OUTER JOIN vt1 ON CASE WHEN NULL COLLATE NOCASE THEN -585190277 WHEN vt2.c0 THEN (~ (vt1.c0)) WHEN ((vt0.c0) NOT BETWEEN (NULL) AND (vt1.c0)) THEN (- (vt0.c0)) ELSE LIKELIHOOD(DISTINCT vt2.c0, 0.010719783717670128) END GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 INNER JOIN vt0 ON CAST(vt1.c0 AS BLOB) LEFT OUTER JOIN vt1 ON CASE WHEN NULL COLLATE NOCASE THEN -585190277 WHEN vt2.c0 THEN (~ (vt1.c0)) WHEN ((vt0.c0) NOT BETWEEN (NULL) AND (vt1.c0)) THEN (- (vt0.c0)) ELSE LIKELIHOOD(DISTINCT vt2.c0, 0.010719783717670128) END GROUP BY vt2.c0 HAVING AVG(((vt2.c0)IS(vt0.c0))) UNION ALL SELECT ALL vt2.c0 FROM vt2 INNER JOIN vt0 ON CAST(vt1.c0 AS BLOB) LEFT OUTER JOIN vt1 ON CASE WHEN NULL COLLATE NOCASE THEN -585190277 WHEN vt2.c0 THEN (~ (vt1.c0)) WHEN ((vt0.c0) NOT BETWEEN (NULL) AND (vt1.c0)) THEN (- (vt0.c0)) ELSE LIKELIHOOD(DISTINCT vt2.c0, 0.010719783717670128) END GROUP BY vt2.c0 HAVING (NOT (AVG(((vt2.c0)IS(vt0.c0))))) UNION ALL SELECT vt2.c0 FROM vt2 INNER JOIN vt0 ON CAST(vt1.c0 AS BLOB) LEFT OUTER JOIN vt1 ON CASE WHEN NULL COLLATE NOCASE THEN -585190277 WHEN vt2.c0 THEN (~ (vt1.c0)) WHEN ((vt0.c0) NOT BETWEEN (NULL) AND (vt1.c0)) THEN (- (vt0.c0)) ELSE LIKELIHOOD(DISTINCT vt2.c0, 0.010719783717670128) END GROUP BY vt2.c0 HAVING ((AVG(((vt2.c0)IS(vt0.c0)))) ISNULL);
SELECT ALL vt2.c0 FROM vt2 INNER JOIN vt0 ON CAST(vt1.c0 AS BLOB) LEFT OUTER JOIN vt1 ON CASE WHEN NULL COLLATE NOCASE THEN -585190277 WHEN vt2.c0 THEN (~ (vt1.c0)) WHEN ((vt0.c0) NOT BETWEEN (NULL) AND (vt1.c0)) THEN (- (vt0.c0)) ELSE LIKELIHOOD(DISTINCT vt2.c0, 0.010719783717670128) END GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 INNER JOIN vt0 ON CAST(vt1.c0 AS BLOB) LEFT OUTER JOIN vt1 ON CASE WHEN NULL COLLATE NOCASE THEN -585190277 WHEN vt2.c0 THEN (~ (vt1.c0)) WHEN ((vt0.c0) NOT BETWEEN (NULL) AND (vt1.c0)) THEN (- (vt0.c0)) ELSE LIKELIHOOD(DISTINCT vt2.c0, 0.010719783717670128) END GROUP BY vt2.c0 HAVING AVG(((vt2.c0)IS(vt0.c0))) UNION ALL SELECT ALL vt2.c0 FROM vt2 INNER JOIN vt0 ON CAST(vt1.c0 AS BLOB) LEFT OUTER JOIN vt1 ON CASE WHEN NULL COLLATE NOCASE THEN -585190277 WHEN vt2.c0 THEN (~ (vt1.c0)) WHEN ((vt0.c0) NOT BETWEEN (NULL) AND (vt1.c0)) THEN (- (vt0.c0)) ELSE LIKELIHOOD(DISTINCT vt2.c0, 0.010719783717670128) END GROUP BY vt2.c0 HAVING (NOT (AVG(((vt2.c0)IS(vt0.c0))))) UNION ALL SELECT vt2.c0 FROM vt2 INNER JOIN vt0 ON CAST(vt1.c0 AS BLOB) LEFT OUTER JOIN vt1 ON CASE WHEN NULL COLLATE NOCASE THEN -585190277 WHEN vt2.c0 THEN (~ (vt1.c0)) WHEN ((vt0.c0) NOT BETWEEN (NULL) AND (vt1.c0)) THEN (- (vt0.c0)) ELSE LIKELIHOOD(DISTINCT vt2.c0, 0.010719783717670128) END GROUP BY vt2.c0 HAVING ((AVG(((vt2.c0)IS(vt0.c0)))) ISNULL);
SELECT ALL vt2.c0 FROM vt2 INNER JOIN vt0 ON CAST(vt1.c0 AS BLOB) LEFT OUTER JOIN vt1 ON CASE WHEN NULL COLLATE NOCASE THEN -585190277 WHEN vt2.c0 THEN (~ (vt1.c0)) WHEN ((vt0.c0) NOT BETWEEN (NULL) AND (vt1.c0)) THEN (- (vt0.c0)) ELSE LIKELIHOOD(DISTINCT vt2.c0, 0.010719783717670128) END GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt1, vt2, vt0;
SELECT vt2.c0 FROM vt1, vt2, vt0 WHERE (DATETIME(CAST(0.8228908196905514 AS BLOB), ((vt2.c0) NOTNULL), CASE WHEN vt2.c0 THEN vt1.c0 ELSE vt1.c0 END)) UNION ALL SELECT ALL vt2.c0 FROM vt1, vt2, vt0 WHERE ((NOT (DATETIME(CAST(0.8228908196905514 AS BLOB), ((vt2.c0) NOTNULL), CASE WHEN vt2.c0 THEN vt1.c0 ELSE vt1.c0 END)))) UNION ALL SELECT vt2.c0 FROM vt1, vt2, vt0 WHERE (((DATETIME(CAST(0.8228908196905514 AS BLOB), ((vt2.c0) NOTNULL), CASE WHEN vt2.c0 THEN vt1.c0 ELSE vt1.c0 END)) ISNULL));
SELECT ALL vt2.c0 FROM vt1, vt2, vt0;
SELECT DISTINCT * FROM vt2, vt0;
SELECT DISTINCT * FROM vt2, vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt2.c0 END) NOT NULL)) UNION SELECT DISTINCT * FROM vt2, vt0 WHERE ((NOT (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt2.c0 END) NOT NULL)))) UNION SELECT DISTINCT * FROM vt2, vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt2.c0 END) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM vt2, vt0;
SELECT ALL vt1.c0 FROM v0, vt2 RIGHT OUTER JOIN vt0 ON ((v0.c0) ISNULL) LEFT OUTER JOIN vt1 ON json_quote(CAST(vt0.c0 AS TEXT)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM v0, vt2 RIGHT OUTER JOIN vt0 ON ((v0.c0) ISNULL) LEFT OUTER JOIN vt1 ON json_quote(CAST(vt0.c0 AS TEXT)) WHERE (CASE ((0.04754240406303656) BETWEEN (vt2.c0) AND (v0.c0))  WHEN ((NULL) BETWEEN (v0.c0) AND ('1516547724')) THEN json_array_length(v0.c0) ELSE ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) END) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM v0, vt2 RIGHT OUTER JOIN vt0 ON ((v0.c0) ISNULL) LEFT OUTER JOIN vt1 ON json_quote(CAST(vt0.c0 AS TEXT)) WHERE ((NOT (CASE ((0.04754240406303656) BETWEEN (vt2.c0) AND (v0.c0))  WHEN ((NULL) BETWEEN (v0.c0) AND ('1516547724')) THEN json_array_length(v0.c0) ELSE ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) END))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM v0, vt2 RIGHT OUTER JOIN vt0 ON ((v0.c0) ISNULL) LEFT OUTER JOIN vt1 ON json_quote(CAST(vt0.c0 AS TEXT)) WHERE (((CASE ((0.04754240406303656) BETWEEN (vt2.c0) AND (v0.c0))  WHEN ((NULL) BETWEEN (v0.c0) AND ('1516547724')) THEN json_array_length(v0.c0) ELSE ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) END) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM v0, vt2 RIGHT OUTER JOIN vt0 ON ((v0.c0) ISNULL) LEFT OUTER JOIN vt1 ON json_quote(CAST(vt0.c0 AS TEXT)) GROUP BY vt1.c0;
SELECT v0.c0, vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON CAST(v0.c0 AS BLOB) COLLATE BINARY GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON CAST(v0.c0 AS BLOB) COLLATE BINARY GROUP BY v0.c0, vt0.c0 HAVING MIN(MAX(TOTAL(v0.c0))) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON CAST(v0.c0 AS BLOB) COLLATE BINARY GROUP BY v0.c0, vt0.c0 HAVING (NOT (MIN(MAX(TOTAL(v0.c0))))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON CAST(v0.c0 AS BLOB) COLLATE BINARY GROUP BY v0.c0, vt0.c0 HAVING ((MIN(MAX(TOTAL(v0.c0)))) ISNULL);
SELECT vt1.c0 FROM vt1, vt2;
SELECT ALL vt1.c0 FROM vt1, vt2 WHERE ((((~ (vt2.c0))) BETWEEN (vt1.c0 COLLATE NOCASE) AND (QUOTE('-1237096053')))) UNION ALL SELECT vt1.c0 FROM vt1, vt2 WHERE ((NOT ((((~ (vt2.c0))) BETWEEN (vt1.c0 COLLATE NOCASE) AND (QUOTE('-1237096053')))))) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt2 WHERE ((((((~ (vt2.c0))) BETWEEN (vt1.c0 COLLATE NOCASE) AND (QUOTE('-1237096053')))) ISNULL));
SELECT vt1.c0 FROM vt1, vt2;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c0)>=(vt1.c0)))IS(vt1.c0 COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((((vt1.c0)>=(vt1.c0)))IS(vt1.c0 COLLATE BINARY))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((((vt1.c0)>=(vt1.c0)))IS(vt1.c0 COLLATE BINARY))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((((((((vt0.c0, vt1.c0, vt0.c0)) NOT BETWEEN (('1449245329', vt0.c0, vt1.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))OR((vt1.c0 IN ()))))AND(((((vt1.c0)OR(0.8812972406836707)))OR(vt0.c0))))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT ((((((((vt0.c0, vt1.c0, vt0.c0)) NOT BETWEEN (('1449245329', vt0.c0, vt1.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))OR((vt1.c0 IN ()))))AND(((((vt1.c0)OR(0.8812972406836707)))OR(vt0.c0))))))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((((((((((vt0.c0, vt1.c0, vt0.c0)) NOT BETWEEN (('1449245329', vt0.c0, vt1.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))OR((vt1.c0 IN ()))))AND(((((vt1.c0)OR(0.8812972406836707)))OR(vt0.c0))))) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING MAX(vt0.c0 COLLATE RTRIM) UNION ALL SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (MAX(vt0.c0 COLLATE RTRIM))) UNION ALL SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING ((MAX(vt0.c0 COLLATE RTRIM)) ISNULL);
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING MAX(vt0.c0 COLLATE RTRIM) UNION ALL SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (MAX(vt0.c0 COLLATE RTRIM))) UNION ALL SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING ((MAX(vt0.c0 COLLATE RTRIM)) ISNULL);
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT ALL * FROM vt1, vt2;
SELECT * FROM vt1, vt2 WHERE ((('1506946265') ISNULL) COLLATE BINARY) UNION ALL SELECT * FROM vt1, vt2 WHERE ((NOT ((('1506946265') ISNULL) COLLATE BINARY))) UNION ALL SELECT ALL * FROM vt1, vt2 WHERE ((((('1506946265') ISNULL) COLLATE BINARY) ISNULL));
SELECT ALL * FROM vt1, vt2;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) AND ((CAST(vt0.c0 AS TEXT))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0)) BETWEEN ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) AND ((CAST(vt0.c0 AS TEXT))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) AND ((CAST(vt0.c0 AS TEXT))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT v0.c0, vt2.c0, vt0.c0 FROM vt2 FULL OUTER JOIN v0 ON ((vt2.c0)=(v0.c0)) COLLATE NOCASE FULL OUTER JOIN vt0 ON v0.c0 GROUP BY v0.c0, vt2.c0, vt0.c0;
SELECT v0.c0, vt2.c0, vt0.c0 FROM vt2 FULL OUTER JOIN v0 ON ((vt2.c0)=(v0.c0)) COLLATE NOCASE FULL OUTER JOIN vt0 ON v0.c0 WHERE ((+ ('fq|Vk5~&'))) GROUP BY v0.c0, vt2.c0, vt0.c0 UNION SELECT v0.c0, vt2.c0, vt0.c0 FROM vt2 FULL OUTER JOIN v0 ON ((vt2.c0)=(v0.c0)) COLLATE NOCASE FULL OUTER JOIN vt0 ON v0.c0 WHERE ((NOT ((+ ('fq|Vk5~&'))))) GROUP BY v0.c0, vt2.c0, vt0.c0 UNION SELECT v0.c0, vt2.c0, vt0.c0 FROM vt2 FULL OUTER JOIN v0 ON ((vt2.c0)==(v0.c0)) COLLATE NOCASE FULL OUTER JOIN vt0 ON v0.c0 WHERE ((((+ ('fq|Vk5~&'))) ISNULL)) GROUP BY v0.c0, vt2.c0, vt0.c0;
SELECT v0.c0, vt2.c0, vt0.c0 FROM vt2 FULL OUTER JOIN v0 ON ((vt2.c0)=(v0.c0)) COLLATE NOCASE FULL OUTER JOIN vt0 ON v0.c0 GROUP BY v0.c0, vt2.c0, vt0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT * FROM v0;
SELECT * FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0)) BETWEEN ((((v0.c0)>(v0.c0)), (((v0.c0)) BETWEEN ((v0.c0)) AND ((0.6964182839105726))), (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))) AND (((+ (v0.c0)), v0.c0 COLLATE NOCASE, COALESCE(v0.c0, v0.c0))))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT ((((v0.c0, v0.c0, v0.c0)) BETWEEN ((((v0.c0)>(v0.c0)), (((v0.c0)) BETWEEN ((v0.c0)) AND ((0.6964182839105726))), (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))) AND (((+ (v0.c0)), v0.c0 COLLATE NOCASE, COALESCE(v0.c0, v0.c0))))))) UNION ALL SELECT * FROM v0 WHERE ((((((v0.c0, v0.c0, v0.c0)) BETWEEN ((((v0.c0)>(v0.c0)), (((v0.c0)) BETWEEN ((v0.c0)) AND ((0.6964182839105726))), (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))) AND (((+ (v0.c0)), v0.c0 COLLATE NOCASE, COALESCE(v0.c0, v0.c0))))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM vt1, vt2;
SELECT DISTINCT * FROM vt1, vt2 WHERE (NULL) UNION SELECT DISTINCT * FROM vt1, vt2 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM vt1, vt2 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM vt1, vt2;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 WHERE (vt2.c0) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2 WHERE ((NOT (vt2.c0))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE (((vt2.c0) ISNULL)) GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0, vt1.c0 FROM vt1, vt2, v0 GROUP BY vt2.c0, vt1.c0;
SELECT ALL vt2.c0, vt1.c0 FROM vt1, vt2, v0 GROUP BY vt2.c0, vt1.c0 HAVING COUNT(AVG('-716371556')) UNION ALL SELECT ALL vt2.c0, vt1.c0 FROM vt1, vt2, v0 GROUP BY vt2.c0, vt1.c0 HAVING (NOT (COUNT(AVG('-716371556')))) UNION ALL SELECT vt2.c0, vt1.c0 FROM vt1, vt2, v0 GROUP BY vt2.c0, vt1.c0 HAVING ((COUNT(AVG('-716371556'))) ISNULL);
SELECT ALL vt0.c0, v0.c0 FROM vt0 FULL OUTER JOIN v0 ON ((((vt0.c0)-(v0.c0))) BETWEEN (v0.c0 COLLATE NOCASE) AND (NULL)) RIGHT OUTER JOIN vt1 ON ((((load_extension(v0.c0))AND(((vt0.c0)IS NOT(vt1.c0)))))AND(vt1.c0 COLLATE NOCASE));
SELECT DISTINCT * FROM vt1, v0, vt0;
SELECT DISTINCT * FROM vt1, v0, vt0 WHERE ((((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) IN ((((vt1.c0))<=((v0.c0)))))) UNION SELECT DISTINCT * FROM vt1, v0, vt0 WHERE ((NOT ((((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) IN ((((vt1.c0))<=((v0.c0)))))))) UNION SELECT DISTINCT * FROM vt1, v0, vt0 WHERE ((((((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) IN ((((vt1.c0))<=((v0.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt1, v0, vt0;
SELECT vt0.c0 FROM vt1, v0 FULL OUTER JOIN vt0 ON ((CASE x''  WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END)<=(0.15719508493501322)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, v0 FULL OUTER JOIN vt0 ON ((CASE x''  WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END)<=(0.15719508493501322)) WHERE ((((v0.c0)<(v0.c0)) IN ())) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt1, v0 FULL OUTER JOIN vt0 ON ((CASE x''  WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END)<=(0.15719508493501322)) WHERE ((NOT ((((v0.c0)<(v0.c0)) IN ())))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt1, v0 FULL OUTER JOIN vt0 ON ((CASE x''  WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END)<=(0.15719508493501322)) WHERE ((((((v0.c0)<(v0.c0)) IN ())) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, v0 FULL OUTER JOIN vt0 ON ((CASE x''  WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END)<=(0.15719508493501322)) GROUP BY vt0.c0;
SELECT ALL v0.c0 FROM vt0, vt2, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0, vt2, v0 GROUP BY v0.c0 HAVING ((v0.c0 COLLATE NOCASE) IS TRUE) UNION ALL SELECT ALL v0.c0 FROM vt0, vt2, v0 GROUP BY v0.c0 HAVING (NOT (((v0.c0 COLLATE NOCASE) IS TRUE))) UNION ALL SELECT v0.c0 FROM vt0, vt2, v0 GROUP BY v0.c0 HAVING ((((v0.c0 COLLATE NOCASE) IS TRUE)) ISNULL);
SELECT ALL v0.c0 FROM vt0, vt2, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0, vt2, v0 GROUP BY v0.c0 HAVING ((v0.c0 COLLATE NOCASE) IS TRUE) UNION ALL SELECT ALL v0.c0 FROM vt0, vt2, v0 GROUP BY v0.c0 HAVING (NOT (((v0.c0 COLLATE NOCASE) IS TRUE))) UNION ALL SELECT v0.c0 FROM vt0, vt2, v0 GROUP BY v0.c0 HAVING ((((v0.c0 COLLATE NOCASE) IS TRUE)) ISNULL);
SELECT ALL v0.c0 FROM vt0, vt2, v0 GROUP BY v0.c0;
SELECT ALL * FROM vt1, vt2, vt0, v0;
SELECT * FROM vt1, vt2, vt0, v0 WHERE (highlight(((vt1.c0) NOT BETWEEN (v0.c0) AND (vt2.c0)), UNLIKELY(vt0.c0), ((vt0.c0) NOT NULL), ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))) UNION ALL SELECT ALL * FROM vt1, vt2, vt0, v0 WHERE ((NOT (highlight(((vt1.c0) NOT BETWEEN (v0.c0) AND (vt2.c0)), UNLIKELY(vt0.c0), ((vt0.c0) NOT NULL), ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))))) UNION ALL SELECT ALL * FROM vt1, vt2, vt0, v0 WHERE (((highlight(((vt1.c0) NOT BETWEEN (v0.c0) AND (vt2.c0)), UNLIKELY(vt0.c0), ((vt0.c0) NOT NULL), ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))) ISNULL));
SELECT ALL * FROM vt1, vt2, vt0, v0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((SQLITE_COMPILEOPTION_USED(vt1.c0)) IS FALSE)) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((SQLITE_COMPILEOPTION_USED(vt1.c0)) IS FALSE)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((SQLITE_COMPILEOPTION_USED(vt1.c0)) IS FALSE)) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt0.c0 FROM vt0, v0 CROSS JOIN vt2 ON ((((vt0.c0) IS FALSE))<=(CASE WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 CROSS JOIN vt2 ON ((((vt0.c0) IS FALSE))<=(CASE WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END)) WHERE ((CASE vt0.c0  WHEN vt2.c0 THEN v0.c0 WHEN vt0.c0 THEN x'' WHEN vt2.c0 THEN vt0.c0 ELSE vt0.c0 END IN ())) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, v0 CROSS JOIN vt2 ON ((((vt0.c0) IS FALSE))<=(CASE WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END)) WHERE ((NOT ((CASE vt0.c0  WHEN vt2.c0 THEN v0.c0 WHEN vt0.c0 THEN x'' WHEN vt2.c0 THEN vt0.c0 ELSE vt0.c0 END IN ())))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, v0 CROSS JOIN vt2 ON ((((vt0.c0) IS FALSE))<=(CASE WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END)) WHERE ((((CASE vt0.c0  WHEN vt2.c0 THEN v0.c0 WHEN vt0.c0 THEN x'' WHEN vt2.c0 THEN vt0.c0 ELSE vt0.c0 END IN ())) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, v0 CROSS JOIN vt2 ON ((((vt0.c0) IS FALSE))<=(CASE WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT SUM(((IFNULL(DISTINCT v0.c0, v0.c0)) NOT NULL)) FROM v0;
SELECT ALL vt2.c0 FROM vt2, v0;
SELECT ALL vt2.c0 FROM vt2, v0 WHERE (((('(M1⪮')>>(vt2.c0)) IN ())) UNION ALL SELECT ALL vt2.c0 FROM vt2, v0 WHERE ((NOT (((('(M1⪮')>>(vt2.c0)) IN ())))) UNION ALL SELECT ALL vt2.c0 FROM vt2, v0 WHERE (((((('(M1⪮')>>(vt2.c0)) IN ())) ISNULL));
SELECT ALL vt2.c0 FROM vt2, v0;
SELECT DISTINCT vt2.c0, v0.c0, vt0.c0 FROM vt2, v0, vt0;
SELECT DISTINCT vt2.c0, v0.c0, vt0.c0 FROM vt2, v0, vt0 WHERE (CAST(ABS(vt2.c0) AS BLOB)) UNION SELECT DISTINCT vt2.c0, v0.c0, vt0.c0 FROM vt2, v0, vt0 WHERE ((NOT (CAST(ABS(vt2.c0) AS BLOB)))) UNION SELECT DISTINCT vt2.c0, v0.c0, vt0.c0 FROM vt2, v0, vt0 WHERE (((CAST(ABS(vt2.c0) AS BLOB)) ISNULL));
SELECT DISTINCT vt2.c0, v0.c0, vt0.c0 FROM vt2, v0, vt0;
SELECT ALL v0.c0, vt2.c0 FROM vt2 CROSS JOIN v0 ON ((~ (vt2.c0)) IN ()) GROUP BY v0.c0, vt2.c0;
SELECT ALL v0.c0, vt2.c0 FROM vt2 CROSS JOIN v0 ON ((~ (vt2.c0)) IN ()) WHERE (((((vt2.c0)*(v0.c0)))-(ABS(DISTINCT v0.c0)))) GROUP BY v0.c0, vt2.c0 UNION SELECT ALL v0.c0, vt2.c0 FROM vt2 CROSS JOIN v0 ON ((~ (vt2.c0)) IN ()) WHERE ((NOT (((((vt2.c0)*(v0.c0)))-(ABS(DISTINCT v0.c0)))))) GROUP BY v0.c0, vt2.c0 UNION SELECT v0.c0, vt2.c0 FROM vt2 CROSS JOIN v0 ON ((~ (vt2.c0)) IN ()) WHERE (((((((vt2.c0)*(v0.c0)))-(ABS(DISTINCT v0.c0)))) ISNULL)) GROUP BY v0.c0, vt2.c0;
SELECT ALL v0.c0, vt2.c0 FROM vt2 CROSS JOIN v0 ON ((~ (vt2.c0)) IN ()) GROUP BY v0.c0, vt2.c0;
SELECT vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON (+ (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON (+ (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))) GROUP BY vt1.c0 HAVING MAX(MAX(TOTAL(TOTAL(vt0.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON (+ (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))) GROUP BY vt1.c0 HAVING (NOT (MAX(MAX(TOTAL(TOTAL(vt0.c0)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON (+ (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))) GROUP BY vt1.c0 HAVING ((MAX(MAX(TOTAL(TOTAL(vt0.c0))))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0 COLLATE BINARY)/((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0 COLLATE BINARY)/((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0 COLLATE BINARY)/((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT vt1.c0, vt2.c0, v0.c0, vt0.c0 FROM vt0, v0, vt1 FULL OUTER JOIN vt2 ON ((ABS(vt0.c0))/(CAST(vt2.c0 AS BLOB)));
SELECT DISTINCT vt1.c0, vt2.c0, v0.c0, vt0.c0 FROM vt0, v0, vt1 FULL OUTER JOIN vt2 ON ((ABS(vt0.c0))/(CAST(vt2.c0 AS BLOB))) WHERE ((((((v0.c0)AND(v0.c0)))AND(v0.c0)) IN ((((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))) UNION SELECT DISTINCT vt1.c0, vt2.c0, v0.c0, vt0.c0 FROM vt0, v0, vt1 FULL OUTER JOIN vt2 ON ((ABS(vt0.c0))/(CAST(vt2.c0 AS BLOB))) WHERE ((NOT ((((((v0.c0)AND(v0.c0)))AND(v0.c0)) IN ((((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))))) UNION SELECT DISTINCT vt1.c0, vt2.c0, v0.c0, vt0.c0 FROM vt0, v0, vt1 FULL OUTER JOIN vt2 ON ((ABS(vt0.c0))/(CAST(vt2.c0 AS BLOB))) WHERE ((((((((v0.c0)AND(v0.c0)))AND(v0.c0)) IN ((((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))) ISNULL));
SELECT DISTINCT vt1.c0, vt2.c0, v0.c0, vt0.c0 FROM vt0, v0, vt1 FULL OUTER JOIN vt2 ON ((ABS(vt0.c0))/(CAST(vt2.c0 AS BLOB)));
SELECT vt1.c0, v0.c0, vt2.c0 FROM vt2, v0, vt1 GROUP BY vt1.c0, v0.c0, vt2.c0;
SELECT ALL vt1.c0, v0.c0, vt2.c0 FROM vt2, v0, vt1 WHERE ((NOT (((((v0.c0)AND(v0.c0)))OR(v0.c0))))) GROUP BY vt1.c0, v0.c0, vt2.c0 UNION SELECT vt1.c0, v0.c0, vt2.c0 FROM vt2, v0, vt1 WHERE ((NOT ((NOT (((((v0.c0)AND(v0.c0)))OR(v0.c0))))))) GROUP BY vt1.c0, v0.c0, vt2.c0 UNION SELECT ALL vt1.c0, v0.c0, vt2.c0 FROM vt2, v0, vt1 WHERE ((((NOT (((((v0.c0)AND(v0.c0)))OR(v0.c0))))) ISNULL)) GROUP BY vt1.c0, v0.c0, vt2.c0;
SELECT vt1.c0, v0.c0, vt2.c0 FROM vt2, v0, vt1 GROUP BY vt1.c0, v0.c0, vt2.c0;
SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING AVG(((((((((vt0.c0)AND(COUNT(MAX(vt0.c0)))))AND(vt1.c0)))OR(vt0.c0)))AND(AVG(vt0.c0)))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING (NOT (AVG(((((((((vt0.c0)AND(COUNT(MAX(vt0.c0)))))AND(vt1.c0)))OR(vt0.c0)))AND(AVG(vt0.c0)))))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING ((AVG(((((((((vt0.c0)AND(COUNT(MAX(vt0.c0)))))AND(vt1.c0)))OR(vt0.c0)))AND(AVG(vt0.c0))))) ISNULL);
SELECT ALL * FROM vt0, vt1, v0, vt2;
SELECT ALL * FROM vt0, vt1, v0, vt2 WHERE (0x362a54e7) UNION ALL SELECT ALL * FROM vt0, vt1, v0, vt2 WHERE ((NOT (0X362a54e7))) UNION ALL SELECT * FROM vt0, vt1, v0, vt2 WHERE (((0X362a54e7) ISNULL));
SELECT ALL * FROM vt0, vt1, v0, vt2;
SELECT DISTINCT vt0.c0 FROM vt2, v0 INNER JOIN vt1 ON (((((vt2.c0) BETWEEN (vt0.c0) AND (vt2.c0))))<((v0.c0 COLLATE RTRIM))) LEFT OUTER JOIN vt0 ON ((TYPEOF(vt0.c0))%(json(vt0.c0)));
SELECT DISTINCT vt0.c0 FROM vt2, v0 INNER JOIN vt1 ON (((((vt2.c0) BETWEEN (vt0.c0) AND (vt2.c0))))<((v0.c0 COLLATE RTRIM))) LEFT OUTER JOIN vt0 ON ((TYPEOF(vt0.c0))%(json(vt0.c0))) WHERE (CASE json_quote(vt2.c0)  WHEN (((v0.c0, v0.c0, vt0.c0))<((v0.c0, vt1.c0, vt1.c0))) THEN CAST(vt1.c0 AS NUMERIC) ELSE ((v0.c0) NOT NULL) END) UNION SELECT DISTINCT vt0.c0 FROM vt2, v0 INNER JOIN vt1 ON (((((vt2.c0) BETWEEN (vt0.c0) AND (vt2.c0))))<((v0.c0 COLLATE RTRIM))) LEFT OUTER JOIN vt0 ON ((TYPEOF(vt0.c0))%(json(vt0.c0))) WHERE ((NOT (CASE json_quote(vt2.c0)  WHEN (((v0.c0, v0.c0, vt0.c0))<((v0.c0, vt1.c0, vt1.c0))) THEN CAST(vt1.c0 AS NUMERIC) ELSE ((v0.c0) NOT NULL) END))) UNION SELECT DISTINCT vt0.c0 FROM vt2, v0 INNER JOIN vt1 ON (((((vt2.c0) BETWEEN (vt0.c0) AND (vt2.c0))))<((v0.c0 COLLATE RTRIM))) LEFT OUTER JOIN vt0 ON ((TYPEOF(vt0.c0))%(json(vt0.c0))) WHERE (((CASE json_quote(vt2.c0)  WHEN (((v0.c0, v0.c0, vt0.c0))<((v0.c0, vt1.c0, vt1.c0))) THEN CAST(vt1.c0 AS NUMERIC) ELSE ((v0.c0) NOT NULL) END) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt2, v0 INNER JOIN vt1 ON (((((vt2.c0) BETWEEN (vt0.c0) AND (vt2.c0))))<((v0.c0 COLLATE RTRIM))) LEFT OUTER JOIN vt0 ON ((TYPEOF(vt0.c0))%(json(vt0.c0)));
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((((((((((v0.c0)GLOB(v0.c0)))OR((v0.c0 IN ()))))AND(CASE WHEN NULL THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)))AND((NOT (v0.c0)))))AND((v0.c0 IN ())))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((((((((v0.c0)GLOB(v0.c0)))OR((v0.c0 IN ()))))AND(CASE WHEN NULL THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)))AND((NOT (v0.c0)))))AND((v0.c0 IN ())))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((((((((((v0.c0)GLOB(v0.c0)))OR((v0.c0 IN ()))))AND(CASE WHEN NULL THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)))AND((NOT (v0.c0)))))AND((v0.c0 IN ())))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0, vt2.c0, vt0.c0 FROM vt2, vt0, v0, vt1 GROUP BY v0.c0, vt2.c0, vt0.c0;
SELECT v0.c0, vt2.c0, vt0.c0 FROM vt2, vt0, v0 NOT INDEXED, vt1 GROUP BY v0.c0, vt2.c0, vt0.c0 HAVING (((((vt2.c0)<=(vt1.c0))))<=((COUNT(*)))) UNION ALL SELECT ALL v0.c0, vt2.c0, vt0.c0 FROM vt2, vt0, v0, vt1 GROUP BY v0.c0, vt2.c0, vt0.c0 HAVING (NOT ((((((vt2.c0)<=(vt1.c0))))<=((COUNT(*)))))) UNION ALL SELECT ALL v0.c0, vt2.c0, vt0.c0 FROM vt2, vt0, v0, vt1 GROUP BY v0.c0, vt2.c0, vt0.c0 HAVING (((((((vt2.c0)<=(vt1.c0))))<=((COUNT(*))))) ISNULL);
SELECT ALL v0.c0, vt2.c0, vt0.c0 FROM vt2, vt0, v0, vt1 GROUP BY v0.c0, vt2.c0, vt0.c0;
SELECT v0.c0, vt2.c0, vt0.c0 FROM vt2, vt0, v0 NOT INDEXED, vt1 GROUP BY v0.c0, vt2.c0, vt0.c0 HAVING (((((vt2.c0)<=(vt1.c0))))<=((COUNT(*)))) UNION ALL SELECT ALL v0.c0, vt2.c0, vt0.c0 FROM vt2, vt0, v0, vt1 GROUP BY v0.c0, vt2.c0, vt0.c0 HAVING (NOT ((((((vt2.c0)<=(vt1.c0))))<=((COUNT(*)))))) UNION ALL SELECT ALL v0.c0, vt2.c0, vt0.c0 FROM vt2, vt0, v0, vt1 GROUP BY v0.c0, vt2.c0, vt0.c0 HAVING (((((((vt2.c0)<=(vt1.c0))))<=((COUNT(*))))) ISNULL);
SELECT ALL v0.c0, vt2.c0, vt0.c0 FROM vt2, vt0, v0, vt1 GROUP BY v0.c0, vt2.c0, vt0.c0;
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE (CASE WHEN (~ (vt1.c0)) THEN CAST(vt1.c0 AS BLOB) WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN (vt1.c0 IN ()) WHEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) THEN (((vt1.c0))=((vt1.c0))) ELSE json_valid(vt1.c0) END) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (CASE WHEN (~ (vt1.c0)) THEN CAST(vt1.c0 AS BLOB) WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN (vt1.c0 IN ()) WHEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) THEN (((vt1.c0))=((vt1.c0))) ELSE json_valid(vt1.c0) END))) UNION ALL SELECT ALL * FROM vt1 WHERE (((CASE WHEN (~ (vt1.c0)) THEN CAST(vt1.c0 AS BLOB) WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN (vt1.c0 IN ()) WHEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) THEN (((vt1.c0))=((vt1.c0))) ELSE json_valid(vt1.c0) END) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM vt2, vt0;
SELECT DISTINCT * FROM vt2, vt0 WHERE (((vt2.c0) IS TRUE) COLLATE NOCASE) UNION SELECT DISTINCT * FROM vt2, vt0 WHERE ((NOT (((vt2.c0) IS TRUE) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt2, vt0 WHERE (((((vt2.c0) IS TRUE) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM vt2, vt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ('c|Ma57') GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ('c|Ma57'))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((('c|Ma57') ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING SUM((MAX(vt1.c0) IN ())) UNION ALL SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING (NOT (SUM((MAX(vt1.c0) IN ())))) UNION ALL SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING ((SUM((MAX(vt1.c0) IN ()))) ISNULL);
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING SUM((MAX(vt1.c0) IN ())) UNION ALL SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING (NOT (SUM((MAX(vt1.c0) IN ())))) UNION ALL SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING ((SUM((MAX(vt1.c0) IN ()))) ISNULL);
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT ALL * FROM vt2;
SELECT ALL * FROM vt2 WHERE (1570420092) UNION ALL SELECT * FROM vt2 WHERE ((NOT (1570420092))) UNION ALL SELECT ALL * FROM vt2 WHERE (((1570420092) ISNULL));
SELECT ALL * FROM vt2;
SELECT DISTINCT * FROM vt1, vt0, v0, vt2;
SELECT DISTINCT * FROM vt1, vt0, v0, vt2 WHERE (TRIM(DISTINCT vt2.c0 COLLATE RTRIM, '-1206863421')) UNION SELECT DISTINCT * FROM vt1, vt0 NOT INDEXED, v0, vt2 WHERE ((NOT (TRIM(DISTINCT vt2.c0 COLLATE RTRIM, '-1206863421')))) UNION SELECT DISTINCT * FROM vt1, vt0, v0, vt2 WHERE (((TRIM(DISTINCT vt2.c0 COLLATE RTRIM, '-1206863421')) ISNULL));
SELECT DISTINCT * FROM vt1, vt0, v0, vt2;
SELECT v0.c0, vt1.c0, vt2.c0 FROM v0, vt2, vt1 GROUP BY v0.c0, vt1.c0, vt2.c0;
SELECT v0.c0, vt1.c0, vt2.c0 FROM v0, vt2, vt1 WHERE (CASE CASE vt1.c0  WHEN v0.c0 THEN vt1.c0 WHEN vt2.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 ELSE vt1.c0 END  WHEN CAST(v0.c0 AS REAL) THEN vt1.c0 COLLATE NOCASE ELSE (~ (vt1.c0)) END) GROUP BY v0.c0, vt1.c0, vt2.c0 UNION SELECT v0.c0, vt1.c0, vt2.c0 FROM v0, vt2, vt1 WHERE ((NOT (CASE CASE vt1.c0  WHEN v0.c0 THEN vt1.c0 WHEN vt2.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 ELSE vt1.c0 END  WHEN CAST(v0.c0 AS REAL) THEN vt1.c0 COLLATE NOCASE ELSE (~ (vt1.c0)) END))) GROUP BY v0.c0, vt1.c0, vt2.c0 UNION SELECT ALL v0.c0, vt1.c0, vt2.c0 FROM v0, vt2, vt1 WHERE (((CASE CASE vt1.c0  WHEN v0.c0 THEN vt1.c0 WHEN vt2.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 ELSE vt1.c0 END  WHEN CAST(v0.c0 AS REAL) THEN vt1.c0 COLLATE NOCASE ELSE (~ (vt1.c0)) END) ISNULL)) GROUP BY v0.c0, vt1.c0, vt2.c0;
SELECT v0.c0, vt1.c0, vt2.c0 FROM v0, vt2, vt1 GROUP BY v0.c0, vt1.c0, vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING NULL UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (NULL)) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((NULL) ISNULL);
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING NULL UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (NULL)) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((NULL) ISNULL);
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT v0.c0, vt2.c0 FROM vt0, vt1, vt2, v0;
SELECT ALL v0.c0, vt2.c0 FROM vt0, vt1, vt2, v0 WHERE ((vt0.c0 IN ())) UNION ALL SELECT v0.c0, vt2.c0 FROM vt0, vt1, vt2, v0 WHERE ((NOT ((vt0.c0 IN ())))) UNION ALL SELECT v0.c0, vt2.c0 FROM vt0, vt1, vt2, v0 WHERE ((((vt0.c0 IN ())) ISNULL));
SELECT v0.c0, vt2.c0 FROM vt0, vt1, vt2, v0;
SELECT DISTINCT * FROM vt2 INNER JOIN vt1 ON ((((vt2.c0)!=(vt1.c0)))==(((vt0.c0) NOT NULL))) INNER JOIN vt0 ON ((CAST(vt0.c0 AS BLOB))<>(LOWER(vt2.c0)));
SELECT DISTINCT * FROM vt2 INNER JOIN vt1 ON ((((vt2.c0)!=(vt1.c0)))==(((vt0.c0) NOT NULL))) INNER JOIN vt0 ON ((CAST(vt0.c0 AS BLOB))<>(LOWER(vt2.c0))) WHERE (((((x'')&(vt0.c0))) NOT BETWEEN ((((x''))!=((vt0.c0)))) AND ((vt0.c0 IN ())))) UNION SELECT DISTINCT * FROM vt2 INNER JOIN vt1 ON ((((vt2.c0)!=(vt1.c0)))=(((vt0.c0) NOT NULL))) INNER JOIN vt0 ON ((CAST(vt0.c0 AS BLOB))<>(LOWER(vt2.c0))) WHERE ((NOT (((((x'')&(vt0.c0))) NOT BETWEEN ((((x''))<>((vt0.c0)))) AND ((vt0.c0 IN ())))))) UNION SELECT DISTINCT * FROM vt2 INNER JOIN vt1 ON ((((vt2.c0)!=(vt1.c0)))=(((vt0.c0) NOT NULL))) INNER JOIN vt0 ON ((CAST(vt0.c0 AS BLOB))<>(LOWER(vt2.c0))) WHERE (((((((x'')&(vt0.c0))) NOT BETWEEN ((((x''))!=((vt0.c0)))) AND ((vt0.c0 IN ())))) ISNULL));
SELECT DISTINCT * FROM vt2 INNER JOIN vt1 ON ((((vt2.c0)!=(vt1.c0)))==(((vt0.c0) NOT NULL))) INNER JOIN vt0 ON ((CAST(vt0.c0 AS BLOB))<>(LOWER(vt2.c0)));
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))>>(((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM v0, vt0 WHERE ((NOT ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))>>(((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM v0, vt0 WHERE ((((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))>>(((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT vt1.c0, vt0.c0, v0.c0 FROM vt0, vt1, vt2, v0 GROUP BY vt1.c0, vt0.c0, v0.c0;
SELECT vt1.c0, vt0.c0, v0.c0 FROM vt0, vt1, vt2, v0 GROUP BY vt1.c0, vt0.c0, v0.c0 HAVING (~ (((((vt0.c0)OR(vt0.c0)))AND(COUNT(vt0.c0))))) UNION ALL SELECT vt1.c0, vt0.c0, v0.c0 FROM vt0, vt1, vt2, v0 GROUP BY vt1.c0, vt0.c0, v0.c0 HAVING (NOT ((~ (((((vt0.c0)OR(vt0.c0)))AND(COUNT(vt0.c0))))))) UNION ALL SELECT ALL vt1.c0, vt0.c0, v0.c0 FROM vt0, vt1, vt2, v0 GROUP BY vt1.c0, vt0.c0, v0.c0 HAVING (((~ (((((vt0.c0)OR(vt0.c0)))AND(COUNT(vt0.c0)))))) ISNULL);
SELECT vt1.c0, vt0.c0, v0.c0 FROM vt0, vt1, vt2, v0 GROUP BY vt1.c0, vt0.c0, v0.c0;
SELECT vt1.c0, vt0.c0, v0.c0 FROM vt0, vt1, vt2, v0 GROUP BY vt1.c0, vt0.c0, v0.c0 HAVING (~ (((((vt0.c0)OR(vt0.c0)))AND(COUNT(vt0.c0))))) UNION ALL SELECT vt1.c0, vt0.c0, v0.c0 FROM vt0, vt1, vt2, v0 GROUP BY vt1.c0, vt0.c0, v0.c0 HAVING (NOT ((~ (((((vt0.c0)OR(vt0.c0)))AND(COUNT(vt0.c0))))))) UNION ALL SELECT ALL vt1.c0, vt0.c0, v0.c0 FROM vt0, vt1, vt2, v0 GROUP BY vt1.c0, vt0.c0, v0.c0 HAVING (((~ (((((vt0.c0)OR(vt0.c0)))AND(COUNT(vt0.c0)))))) ISNULL);
SELECT vt1.c0, vt0.c0, v0.c0 FROM vt0, vt1, vt2, v0 GROUP BY vt1.c0, vt0.c0, v0.c0;
SELECT ALL vt2.c0 FROM vt1, v0, vt2;
SELECT ALL vt2.c0 FROM vt1, v0, vt2 WHERE (((CAST(v0.c0 AS TEXT)) NOT BETWEEN (CASE WHEN 'JM' THEN vt1.c0 ELSE vt2.c0 END) AND (('-1726541008' IN (vt1.c0))))) UNION ALL SELECT vt2.c0 FROM vt1, v0, vt2 WHERE ((NOT (((CAST(v0.c0 AS TEXT)) NOT BETWEEN (CASE WHEN 'JM' THEN vt1.c0 ELSE vt2.c0 END) AND (('-1726541008' IN (vt1.c0))))))) UNION ALL SELECT ALL vt2.c0 FROM vt1 NOT INDEXED, v0 NOT INDEXED, vt2 WHERE (((((CAST(v0.c0 AS TEXT)) NOT BETWEEN (CASE WHEN 'JM' THEN vt1.c0 ELSE vt2.c0 END) AND (('-1726541008' IN (vt1.c0))))) ISNULL));
SELECT ALL vt2.c0 FROM vt1, v0, vt2;
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE (CASE WHEN vt0.c0 THEN 0.29034908468943477 END) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT (CASE WHEN vt0.c0 THEN 0.29034908468943477 END))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE (((CASE WHEN vt0.c0 THEN 0.29034908468943477 END) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT v0.c0 FROM v0 LEFT OUTER JOIN vt0 ON ((CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END) NOT BETWEEN (((vt0.c0) BETWEEN (v0.c0) AND (v0.c0))) AND (((NULL) IS FALSE))) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 LEFT OUTER JOIN vt0 ON ((CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END) NOT BETWEEN (((vt0.c0) BETWEEN (v0.c0) AND (v0.c0))) AND (((NULL) IS FALSE))) WHERE (v0.c0) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 LEFT OUTER JOIN vt0 ON ((CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END) NOT BETWEEN (((vt0.c0) BETWEEN (v0.c0) AND (v0.c0))) AND (((NULL) IS FALSE))) WHERE ((NOT (v0.c0))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 LEFT OUTER JOIN vt0 ON ((CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END) NOT BETWEEN (((vt0.c0) BETWEEN (v0.c0) AND (v0.c0))) AND (((NULL) IS FALSE))) WHERE (((v0.c0) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 LEFT OUTER JOIN vt0 ON ((CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END) NOT BETWEEN (((vt0.c0) BETWEEN (v0.c0) AND (v0.c0))) AND (((NULL) IS FALSE))) GROUP BY v0.c0;
SELECT ALL vt1.c0 FROM vt0, vt2, vt1, v0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0, vt2, vt1, v0 GROUP BY vt1.c0 HAVING AVG(MIN(vt0.c0) COLLATE BINARY) UNION ALL SELECT vt1.c0 FROM vt0, vt2, vt1, v0 GROUP BY vt1.c0 HAVING (NOT (AVG(MIN(vt0.c0) COLLATE BINARY))) UNION ALL SELECT ALL vt1.c0 FROM vt0, vt2, vt1, v0 GROUP BY vt1.c0 HAVING ((AVG(MIN(vt0.c0) COLLATE BINARY)) ISNULL);
SELECT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE ((((((vt1.c0)) BETWEEN ((0.23849960361149103)) AND ((vt1.c0))))LIKE(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((((vt1.c0)) BETWEEN ((0.23849960361149103)) AND ((vt1.c0))))LIKE(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((((((((vt1.c0)) BETWEEN ((0.23849960361149103)) AND ((vt1.c0))))LIKE(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END))) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT * FROM v0, vt1;
SELECT DISTINCT * FROM v0, vt1 WHERE ((((- (vt1.c0)))IS(CASE WHEN vt1.c0 THEN v0.c0 END))) UNION SELECT DISTINCT * FROM v0, vt1 WHERE ((NOT ((((- (vt1.c0)))IS(CASE WHEN vt1.c0 THEN v0.c0 END))))) UNION SELECT DISTINCT * FROM v0, vt1 WHERE ((((((- (vt1.c0)))IS(CASE WHEN vt1.c0 THEN v0.c0 END))) ISNULL));
SELECT DISTINCT * FROM v0, vt1;
SELECT ALL v0.c0 FROM v0 NOT INDEXED, vt1 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt1 WHERE ((~ (CASE v0.c0  WHEN '-1060231684' THEN vt1.c0 ELSE v0.c0 END))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, vt1 WHERE ((NOT ((~ (CASE v0.c0  WHEN '-1060231684' THEN vt1.c0 ELSE v0.c0 END))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, vt1 WHERE ((((~ (CASE v0.c0  WHEN '-1060231684' THEN vt1.c0 ELSE v0.c0 END))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 NOT INDEXED, vt1 GROUP BY v0.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (((((vt2.c0)OR(TOTAL(x''))))OR(MAX(MAX(COUNT(COUNT(*)))))) IN ()) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT ((((((vt2.c0)OR(TOTAL(x''))))OR(MAX(MAX(COUNT(COUNT(*)))))) IN ()))) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (((((((vt2.c0)OR(TOTAL(x''))))OR(MAX(MAX(COUNT(COUNT(*)))))) IN ())) ISNULL);
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (((((vt2.c0)OR(TOTAL(x''))))OR(MAX(MAX(COUNT(COUNT(*)))))) IN ()) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT ((((((vt2.c0)OR(TOTAL(x''))))OR(MAX(MAX(COUNT(COUNT(*)))))) IN ()))) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (((((((vt2.c0)OR(TOTAL(x''))))OR(MAX(MAX(COUNT(COUNT(*)))))) IN ())) ISNULL);
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT SUM(CASE ((vt2.c0)-(vt2.c0))  WHEN x'' THEN ((v0.c0)*(vt1.c0)) END) FROM vt0, v0, vt2, vt1;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((((((((vt1.c0 COLLATE RTRIM)OR((vt1.c0 IN ()))))OR(((vt0.c0)IS NOT(vt0.c0)))))OR((vt1.c0 IN ()))))OR(COALESCE(DISTINCT vt1.c0, vt0.c0, vt1.c0, 0.1485714572520247)))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT (((((((((vt1.c0 COLLATE RTRIM)OR((vt1.c0 IN ()))))OR(((vt0.c0)IS NOT(vt0.c0)))))OR((vt1.c0 IN ()))))OR(COALESCE(DISTINCT vt1.c0, vt0.c0, vt1.c0, 0.1485714572520247)))))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((((((((((vt1.c0 COLLATE RTRIM)OR((vt1.c0 IN ()))))OR(((vt0.c0)IS NOT(vt0.c0)))))OR((vt1.c0 IN ()))))OR(COALESCE(DISTINCT vt1.c0, vt0.c0, vt1.c0, 0.1485714572520247)))) ISNULL));
SELECT vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT DISTINCT * FROM v0, vt1;
SELECT DISTINCT * FROM v0, vt1 WHERE (TYPEOF(DISTINCT (v0.c0 IN ()))) UNION SELECT DISTINCT * FROM v0, vt1 WHERE ((NOT (TYPEOF(DISTINCT (v0.c0 IN ()))))) UNION SELECT DISTINCT * FROM v0 NOT INDEXED, vt1 NOT INDEXED WHERE (((TYPEOF(DISTINCT (v0.c0 IN ()))) ISNULL));
SELECT DISTINCT * FROM v0, vt1;
