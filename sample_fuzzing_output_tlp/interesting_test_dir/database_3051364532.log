-- Time: 2024/06/09 12:47:01
-- Database: database32
-- Database version: 3.40.0
-- seed value: 3051364532
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-8'; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2, c3, c4); -- 0ms;
UPDATE OR IGNORE rt0 SET c3=x''; -- 0ms;
REINDEX; -- 0ms;
UPDATE OR REPLACE rt0 SET c0='' WHERE ((COALESCE(DISTINCT rt0.c1, rt0.c4, rt0.c4, rt0.c4, rt0.c4, rt0.c4))AND(rt0.c0)); -- 0ms;
UPDATE OR ROLLBACK rt0 SET c0='304529102', c0=3.04529102E8; -- 0ms;
REINDEX BINARY; -- 0ms;
DELETE FROM rt0; -- 1ms;
REINDEX; -- 0ms;
UPDATE rt0 SET (c2)=(NULL); -- 0ms;
REINDEX; -- 0ms;
UPDATE OR FAIL rt0 SET c1=x'c771'; -- 0ms;
INSERT OR ABORT INTO rt0(c2) VALUES (0X3c4821cd); -- 0ms;
PRAGMA reverse_unordered_selects; -- 0ms;
UPDATE OR FAIL rt0 SET c2=NULL, c4=3.04529102E8; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
UPDATE OR IGNORE rt0 SET (c2, c3, c4)=(0.0673642007728451, NULL, 'kNEb<7'); -- 0ms;
INSERT OR REPLACE INTO rt0(c3, c1, c4) VALUES (0.3657299496653551, '1481638439', 0.09401101898416941); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c1, c2, c4, c3) VALUES ('VLC', 0X58500227, 304529102, 0.6138169823186076, '-1826873377'); -- 0ms;
PRAGMA ignore_check_constraints = false; -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c2, c1) VALUES (x'035979e88cff', 0.38290826771580266, '\]쥒3HT⇍3 '), (0.8362374848891467, '1772872067', 0.3926256750717544), ('{', '', 1481638439), (0.37491408698723205, x'c60af3f2', '-1826873377'), (x'', 0.09401101898416941, NULL); -- 0ms;
CREATE TEMP VIEW  IF NOT EXISTS v0(c0) AS SELECT ALL CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c2 END COLLATE BINARY FROM rt0; -- 0ms;
PRAGMA main.secure_delete; -- 0ms;
INSERT OR FAIL INTO rt0(c4) VALUES (-1826873377); -- 0ms;
INSERT OR ABORT INTO rt0(c1) VALUES (''); -- 1ms;
ANALYZE rt0; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
VACUUM; -- 1ms;
ANALYZE; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
REINDEX  rt0; -- 0ms;
UPDATE OR ROLLBACK rt0 SET (c1, c4, c1)=(0X6112e496, x'', 'j	t[P쥒0z*') WHERE (((rt0.c0, rt0.c1, rt0.c3)) NOT BETWEEN ((NULL, rt0.c3, rt0.c3)) AND ((rt0.c3, rt0.c2, rt0.c2))) COLLATE RTRIM; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET (c2, c3, c3)=('304529102', '', '-1745823373'); -- 0ms;
INSERT OR IGNORE INTO rt0(c4, c2, c1, c0) VALUES (1617932666, 0.479609735023793, ((((('1772872067'))>=((NULL)))) IS FALSE), '1481638439'); -- 0ms;
UPDATE rt0 SET c4=1.628628118E9 WHERE (((('0.37491408698723205')AND(((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))AND(((((rt0.c3)AND(rt0.c0)))OR(rt0.c2)))); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
UPDATE rt0 SET (c2)=('633952382'); -- 0ms;
UPDATE rt0 SET (c3)=(NULL) WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0, c1, c2, languageid="lid", compress=likely, uncompress=likely); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1164963389); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 12); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '40445'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 12); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=1'); -- 0ms;
ANALYZE; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
VACUUM; -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 358676459); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
PRAGMA journal_mode = MEMORY; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA temp.cell_size_check = false; -- 0ms;
PRAGMA temp.journal_mode; -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE ((((0.3692093895869597 IN (vt0.c0, vt0.c2)))LIKE(((vt0.c2)IS(vt0.c0))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((((0.3692093895869597 IN (vt0.c0, vt0.c2)))LIKE(((vt0.c2)IS(vt0.c0))))))) UNION ALL SELECT * FROM vt0 WHERE ((((((0.3692093895869597 IN (vt0.c0, vt0.c2)))LIKE(((vt0.c2)IS(vt0.c0))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT rt0.c1, vt0.c0, rt0.c0, v0.c0, vt0.c1, rt0.c2, rt0.c4 FROM rt0, v0 INNER JOIN vt0 ON ((0.47947656741259137)<=(((v0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c2))));
SELECT DISTINCT rt0.c1, vt0.c0, rt0.c0, v0.c0, vt0.c1, rt0.c2, rt0.c4 FROM rt0, v0 INNER JOIN vt0 ON ((0.47947656741259137)<=(((v0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c2)))) WHERE ((~ (vt0.lid))) UNION SELECT DISTINCT rt0.c1, vt0.c0, rt0.c0, v0.c0, vt0.c1, rt0.c2, rt0.c4 FROM rt0, v0 INNER JOIN vt0 ON ((0.47947656741259137)<=(((v0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c2)))) WHERE ((NOT ((~ (vt0.lid))))) UNION SELECT DISTINCT rt0.c1, vt0.c0, rt0.c0, v0.c0, vt0.c1, rt0.c2, rt0.c4 FROM rt0, v0 INNER JOIN vt0 ON ((0.47947656741259137)<=(((v0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c2)))) WHERE ((((~ (vt0.lid))) ISNULL));
SELECT DISTINCT rt0.c1, vt0.c0, rt0.c0, v0.c0, vt0.c1, rt0.c2, rt0.c4 FROM rt0, v0 INNER JOIN vt0 ON ((0.47947656741259137)<=(((v0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c2))));
SELECT rt0.c0, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c4;
SELECT rt0.c0, rt0.c3, rt0.c4 FROM rt0 WHERE (((CAST(0.9679825233497955 AS BLOB))IS NOT(((rt0.c0)GLOB(rt0.c0))))) GROUP BY rt0.c0, rt0.c3, rt0.c4 UNION SELECT rt0.c0, rt0.c3, rt0.c4 FROM rt0 WHERE ((NOT (((CAST(0.9679825233497955 AS BLOB))IS NOT(((rt0.c0)GLOB(rt0.c0))))))) GROUP BY rt0.c0, rt0.c3, rt0.c4 UNION SELECT rt0.c0, rt0.c3, rt0.c4 FROM rt0 WHERE (((((CAST(0.9679825233497955 AS BLOB))IS NOT(((rt0.c0)GLOB(rt0.c0))))) ISNULL)) GROUP BY rt0.c0, rt0.c3, rt0.c4;
SELECT rt0.c0, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c4;
SELECT ALL rt0.c1, vt0.c1 FROM v0, vt0 RIGHT OUTER JOIN rt0 ON LTRIM(((v0.c0)<<(vt0.c1))) GROUP BY rt0.c1, vt0.c1;
SELECT rt0.c1, vt0.c1 FROM v0, vt0 RIGHT OUTER JOIN rt0 ON LTRIM(((v0.c0)<<(vt0.c1))) GROUP BY rt0.c1, vt0.c1 HAVING vt0.lid UNION ALL SELECT rt0.c1, vt0.c1 FROM v0, vt0 RIGHT OUTER JOIN rt0 ON LTRIM(((v0.c0)<<(vt0.c1))) GROUP BY rt0.c1, vt0.c1 HAVING (NOT (vt0.lid)) UNION ALL SELECT ALL rt0.c1, vt0.c1 FROM v0, vt0 RIGHT OUTER JOIN rt0 ON LTRIM(((v0.c0)<<(vt0.c1))) GROUP BY rt0.c1, vt0.c1 HAVING ((vt0.lid) ISNULL);
SELECT ALL rt0.c1, vt0.c1 FROM v0, vt0 RIGHT OUTER JOIN rt0 ON LTRIM(((v0.c0)<<(vt0.c1))) GROUP BY rt0.c1, vt0.c1;
SELECT rt0.c1, vt0.c1 FROM v0, vt0 RIGHT OUTER JOIN rt0 ON LTRIM(((v0.c0)<<(vt0.c1))) GROUP BY rt0.c1, vt0.c1 HAVING vt0.lid UNION ALL SELECT rt0.c1, vt0.c1 FROM v0, vt0 RIGHT OUTER JOIN rt0 ON LTRIM(((v0.c0)<<(vt0.c1))) GROUP BY rt0.c1, vt0.c1 HAVING (NOT (vt0.lid)) UNION ALL SELECT ALL rt0.c1, vt0.c1 FROM v0, vt0 RIGHT OUTER JOIN rt0 ON LTRIM(((v0.c0)<<(vt0.c1))) GROUP BY rt0.c1, vt0.c1 HAVING ((vt0.lid) ISNULL);
SELECT ALL rt0.c1, vt0.c1 FROM v0, vt0 RIGHT OUTER JOIN rt0 ON LTRIM(((v0.c0)<<(vt0.c1))) GROUP BY rt0.c1, vt0.c1;
SELECT * FROM rt0, vt0, v0;
SELECT ALL * FROM rt0, vt0, v0 WHERE (((1.481638439E9) NOT NULL)) UNION ALL SELECT ALL * FROM rt0, vt0, v0 WHERE ((NOT (((1.481638439E9) NOT NULL)))) UNION ALL SELECT * FROM rt0, vt0, v0 WHERE (((((1.481638439E9) NOT NULL)) ISNULL));
SELECT * FROM rt0, vt0, v0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((((((rt0.c2 COLLATE BINARY)AND(CASE rt0.c4  WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c2 END)))AND(((((rt0.c2)AND(rt0.c1)))AND(rt0.c4)))))AND(CAST(rt0.c1 AS REAL))))OR(UPPER(rt0.c2)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((((((rt0.c2 COLLATE BINARY)AND(CASE rt0.c4  WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c2 END)))AND(((((rt0.c2)AND(rt0.c1)))AND(rt0.c4)))))AND(CAST(rt0.c1 AS REAL))))OR(UPPER(rt0.c2)))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((((((rt0.c2 COLLATE BINARY)AND(CASE rt0.c4  WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c2 END)))AND(((((rt0.c2)AND(rt0.c1)))AND(rt0.c4)))))AND(CAST(rt0.c1 AS REAL))))OR(UPPER(rt0.c2)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c4, vt0.c2, vt0.lid, vt0.c0, rt0.c0 FROM vt0, rt0, v0 GROUP BY rt0.c4, vt0.c2, vt0.lid, vt0.c0, rt0.c0;
SELECT rt0.c4, vt0.c2, vt0.lid, vt0.c0, rt0.c0 FROM vt0, rt0, v0 WHERE ((((((rt0.c0))>=((v0.c0))))OR(rt0.c4 COLLATE NOCASE))) GROUP BY rt0.c4, vt0.c2, vt0.lid, vt0.c0, rt0.c0 UNION SELECT rt0.c4, vt0.c2, vt0.lid, vt0.c0, rt0.c0 FROM vt0, rt0, v0 WHERE ((NOT ((((((rt0.c0))>=((v0.c0))))OR(rt0.c4 COLLATE NOCASE))))) GROUP BY rt0.c4, vt0.c2, vt0.lid, vt0.c0, rt0.c0 UNION SELECT rt0.c4, vt0.c2, vt0.lid, vt0.c0, rt0.c0 FROM vt0, rt0, v0 WHERE ((((((((rt0.c0))>=((v0.c0))))OR(rt0.c4 COLLATE NOCASE))) ISNULL)) GROUP BY rt0.c4, vt0.c2, vt0.lid, vt0.c0, rt0.c0;
SELECT rt0.c4, vt0.c2, vt0.lid, vt0.c0, rt0.c0 FROM vt0, rt0, v0 GROUP BY rt0.c4, vt0.c2, vt0.lid, vt0.c0, rt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING MAX(MIN(TOTAL(GROUP_CONCAT(COUNT(vt0.lid))))) COLLATE RTRIM UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (MAX(MIN(TOTAL(GROUP_CONCAT(COUNT(vt0.lid))))) COLLATE RTRIM)) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((MAX(MIN(TOTAL(GROUP_CONCAT(COUNT(vt0.lid))))) COLLATE RTRIM) ISNULL);
SELECT ALL * FROM rt0, vt0;
SELECT ALL * FROM rt0, vt0 WHERE (UNLIKELY(DISTINCT (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c1))))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((NOT (UNLIKELY(DISTINCT (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c1))))))) UNION ALL SELECT * FROM rt0, vt0 WHERE (((UNLIKELY(DISTINCT (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c1))))) ISNULL));
SELECT ALL * FROM rt0, vt0;
SELECT DISTINCT v0.c0, vt0.c2, vt0.lid, rt0.c0, vt0.c0, rt0.c1, vt0.c1, rt0.c3, rt0.c2, rt0.c4 FROM rt0, v0 CROSS JOIN vt0 ON ((((x'')AND(((rt0.c1)<(vt0.c0)))))AND(((((v0.c0)OR(rt0.c3)))OR(0.013061229726757828))));
SELECT DISTINCT v0.c0, vt0.c2, vt0.lid, rt0.c0, vt0.c0, rt0.c1, vt0.c1, rt0.c3, rt0.c2, rt0.c4 FROM rt0, v0 CROSS JOIN vt0 ON ((((x'')AND(((rt0.c1)<(vt0.c0)))))AND(((((v0.c0)OR(rt0.c3)))OR(0.013061229726757828)))) WHERE (vt0.c1) UNION SELECT DISTINCT v0.c0, vt0.c2, vt0.lid, rt0.c0, vt0.c0, rt0.c1, vt0.c1, rt0.c3, rt0.c2, rt0.c4 FROM rt0, v0 CROSS JOIN vt0 ON ((((x'')AND(((rt0.c1)<(vt0.c0)))))AND(((((v0.c0)OR(rt0.c3)))OR(0.013061229726757828)))) WHERE ((NOT (vt0.c1))) UNION SELECT DISTINCT v0.c0, vt0.c2, vt0.lid, rt0.c0, vt0.c0, rt0.c1, vt0.c1, rt0.c3, rt0.c2, rt0.c4 FROM rt0, v0 CROSS JOIN vt0 ON ((((x'')AND(((rt0.c1)<(vt0.c0)))))AND(((((v0.c0)OR(rt0.c3)))OR(0.013061229726757828)))) WHERE (((vt0.c1) ISNULL));
SELECT DISTINCT v0.c0, vt0.c2, vt0.lid, rt0.c0, vt0.c0, rt0.c1, vt0.c1, rt0.c3, rt0.c2, rt0.c4 FROM rt0, v0 CROSS JOIN vt0 ON ((((x'')AND(((rt0.c1)<(vt0.c0)))))AND(((((v0.c0)OR(rt0.c3)))OR(0.013061229726757828))));
SELECT vt0.c0, vt0.c1, vt0.lid, vt0.c2 FROM vt0, v0 GROUP BY vt0.c0, vt0.c1, vt0.lid, vt0.c2;
SELECT vt0.c0, vt0.c1, vt0.lid, vt0.c2 FROM vt0, v0 WHERE ((((~ (vt0.c2))) BETWEEN (vt0.c2 COLLATE BINARY) AND (vt0.c0 COLLATE RTRIM))) GROUP BY vt0.c0, vt0.c1, vt0.lid, vt0.c2 UNION SELECT ALL vt0.c0, vt0.c1, vt0.lid, vt0.c2 FROM vt0, v0 WHERE ((NOT ((((~ (vt0.c2))) BETWEEN (vt0.c2 COLLATE BINARY) AND (vt0.c0 COLLATE RTRIM))))) GROUP BY vt0.c0, vt0.c1, vt0.lid, vt0.c2 UNION SELECT vt0.c0, vt0.c1, vt0.lid, vt0.c2 FROM vt0, v0 WHERE ((((((~ (vt0.c2))) BETWEEN (vt0.c2 COLLATE BINARY) AND (vt0.c0 COLLATE RTRIM))) ISNULL)) GROUP BY vt0.c0, vt0.c1, vt0.lid, vt0.c2;
SELECT vt0.c0, vt0.c1, vt0.lid, vt0.c2 FROM vt0, v0 GROUP BY vt0.c0, vt0.c1, vt0.lid, vt0.c2;
SELECT rt0.c4 FROM v0, vt0, rt0 GROUP BY rt0.c4;
SELECT rt0.c4 FROM v0, vt0, rt0 GROUP BY rt0.c4 HAVING MAX(AVG(rt0.c3)) UNION ALL SELECT rt0.c4 FROM v0, vt0, rt0 GROUP BY rt0.c4 HAVING (NOT (MAX(AVG(rt0.c3)))) UNION ALL SELECT rt0.c4 FROM v0, vt0, rt0 GROUP BY rt0.c4 HAVING ((MAX(AVG(rt0.c3))) ISNULL);
SELECT rt0.c3, v0.c0, vt0.c2, rt0.c2 FROM rt0, v0, vt0;
SELECT ALL rt0.c3, v0.c0, vt0.c2, rt0.c2 FROM rt0, v0, vt0 WHERE ((NOT ((vt0.c1 IN ())))) UNION ALL SELECT rt0.c3, v0.c0, vt0.c2, rt0.c2 FROM rt0, v0, vt0 WHERE ((NOT ((NOT ((vt0.c1 IN ())))))) UNION ALL SELECT ALL rt0.c3, v0.c0, vt0.c2, rt0.c2 FROM rt0, v0, vt0 WHERE ((((NOT ((vt0.c1 IN ())))) ISNULL));
SELECT rt0.c3, v0.c0, vt0.c2, rt0.c2 FROM rt0, v0, vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c1))<((rt0.c0))) COLLATE NOCASE) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((rt0.c1))<((rt0.c0))) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c1))<((rt0.c0))) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0, rt0.c3, rt0.c4, vt0.c2, rt0.c1 FROM rt0, vt0, v0 GROUP BY rt0.c0, rt0.c3, rt0.c4, vt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c3, rt0.c4, vt0.c2, rt0.c1 FROM rt0, vt0, v0 WHERE (x'') GROUP BY rt0.c0, rt0.c3, rt0.c4, vt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c3, rt0.c4, vt0.c2, rt0.c1 FROM rt0, vt0, v0 WHERE ((NOT (x''))) GROUP BY rt0.c0, rt0.c3, rt0.c4, vt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c3, rt0.c4, vt0.c2, rt0.c1 FROM rt0, vt0, v0 WHERE (((x'') ISNULL)) GROUP BY rt0.c0, rt0.c3, rt0.c4, vt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c3, rt0.c4, vt0.c2, rt0.c1 FROM rt0, vt0, v0 GROUP BY rt0.c0, rt0.c3, rt0.c4, vt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1, rt0.c3, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c3, rt0.c0, rt0.c4;
SELECT ALL rt0.c2, rt0.c1, rt0.c3, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c3, rt0.c0, rt0.c4 HAVING SUM(((((((((((((MAX(rt0.c3))AND(rt0.c4)))OR(rt0.c0)))AND(TOTAL(rt0.c3))))AND(rt0.c1)))AND(rt0.c3)))OR(rt0.c0))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c3, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c3, rt0.c0, rt0.c4 HAVING (NOT (SUM(((((((((((((MAX(rt0.c3))AND(rt0.c4)))OR(rt0.c0)))AND(TOTAL(rt0.c3))))AND(rt0.c1)))AND(rt0.c3)))OR(rt0.c0))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c3, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c3, rt0.c0, rt0.c4 HAVING ((SUM(((((((((((((MAX(rt0.c3))AND(rt0.c4)))OR(rt0.c0)))AND(TOTAL(rt0.c3))))AND(rt0.c1)))AND(rt0.c3)))OR(rt0.c0)))) ISNULL);
SELECT * FROM rt0 CROSS JOIN vt0 ON vt0.c2;
SELECT * FROM rt0 CROSS JOIN vt0 ON vt0.c2 WHERE (CAST(CASE rt0.c3  WHEN rt0.c1 THEN rt0.c4 WHEN vt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN vt0.c2 END AS REAL)) UNION ALL SELECT * FROM rt0 CROSS JOIN vt0 ON vt0.c2 WHERE ((NOT (CAST(CASE rt0.c3  WHEN rt0.c1 THEN rt0.c4 WHEN vt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN vt0.c2 END AS REAL)))) UNION ALL SELECT ALL * FROM rt0 CROSS JOIN vt0 ON vt0.c2 WHERE (((CAST(CASE rt0.c3  WHEN rt0.c1 THEN rt0.c4 WHEN vt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN vt0.c2 END AS REAL)) ISNULL));
SELECT * FROM rt0 CROSS JOIN vt0 ON vt0.c2;
SELECT DISTINCT rt0.c3, rt0.c4, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c3, rt0.c4, rt0.c2, rt0.c0 FROM rt0 WHERE (((rt0.c2)GLOB(((rt0.c3)/(rt0.c0))))) UNION SELECT DISTINCT rt0.c3, rt0.c4, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((rt0.c2)GLOB(((rt0.c3)/(rt0.c0))))))) UNION SELECT DISTINCT rt0.c3, rt0.c4, rt0.c2, rt0.c0 FROM rt0 WHERE (((((rt0.c2)GLOB(((rt0.c3)/(rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c4, rt0.c2, rt0.c0 FROM rt0;
SELECT ALL rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c2;
SELECT rt0.c4, rt0.c2 FROM rt0 WHERE ((('') NOT BETWEEN (rt0.c3) AND (CASE WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c4 END))) GROUP BY rt0.c4, rt0.c2 UNION SELECT ALL rt0.c4, rt0.c2 FROM rt0 WHERE ((NOT ((('') NOT BETWEEN (rt0.c3) AND (CASE WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c4 END))))) GROUP BY rt0.c4, rt0.c2 UNION SELECT rt0.c4, rt0.c2 FROM rt0 WHERE ((((('') NOT BETWEEN (rt0.c3) AND (CASE WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c4 END))) ISNULL)) GROUP BY rt0.c4, rt0.c2;
SELECT ALL rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c2;
SELECT ALL vt0.c2, vt0.lid, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.lid, vt0.c1, vt0.c0;
SELECT vt0.c2, vt0.lid, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.lid, vt0.c1, vt0.c0 HAVING CASE WHEN COUNT(*) THEN ((MIN(AVG(vt0.lid)))<>(0.05087244920666989)) ELSE MIN(COUNT(*)) END UNION ALL SELECT vt0.c2, vt0.lid, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.lid, vt0.c1, vt0.c0 HAVING (NOT (CASE WHEN COUNT(*) THEN ((MIN(AVG(vt0.lid)))!=(0.05087244920666989)) ELSE MIN(COUNT(*)) END)) UNION ALL SELECT vt0.c2, vt0.lid, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.lid, vt0.c1, vt0.c0 HAVING ((CASE WHEN COUNT(*) THEN ((MIN(AVG(vt0.lid)))!=(0.05087244920666989)) ELSE MIN(COUNT(*)) END) ISNULL);
SELECT ALL * FROM vt0, v0;
SELECT * FROM vt0, v0 WHERE (0.19168924803762832) UNION ALL SELECT ALL * FROM vt0, v0 NOT INDEXED WHERE ((NOT (0.19168924803762832))) UNION ALL SELECT * FROM vt0, v0 WHERE (((0.19168924803762832) ISNULL));
SELECT ALL * FROM vt0, v0;
SELECT DISTINCT * FROM v0, rt0, vt0;
SELECT DISTINCT * FROM v0, rt0, vt0 WHERE (rt0.c2) UNION SELECT DISTINCT * FROM v0, rt0, vt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT * FROM v0 NOT INDEXED, rt0, vt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT * FROM v0, rt0, vt0;
SELECT ALL rt0.c3, rt0.c1, rt0.c4, rt0.c2, vt0.c2 FROM rt0 RIGHT OUTER JOIN v0 ON ((((vt0.c2)||(rt0.c3)))<>(LIKELIHOOD(vt0.c2, 0.8832452471983026))) LEFT OUTER JOIN vt0 ON CAST(CASE vt0.c1  WHEN vt0.lid THEN vt0.c2 ELSE rt0.c1 END AS REAL) GROUP BY rt0.c3, rt0.c1, rt0.c4, rt0.c2, vt0.c2;
SELECT ALL vt0.lid, vt0.c0, vt0.c1 FROM vt0, v0 GROUP BY vt0.lid, vt0.c0, vt0.c1;
SELECT vt0.lid, vt0.c0, vt0.c1 FROM vt0, v0 GROUP BY vt0.lid, vt0.c0, vt0.c1 HAVING (((vt0.lid)) BETWEEN ((((NULL)AND(MAX(TOTAL(vt0.c2)))))) AND (('CLF,'))) UNION ALL SELECT vt0.lid, vt0.c0, vt0.c1 FROM vt0, v0 GROUP BY vt0.lid, vt0.c0, vt0.c1 HAVING (NOT ((((vt0.lid)) BETWEEN ((((NULL)AND(MAX(TOTAL(vt0.c2)))))) AND (('CLF,'))))) UNION ALL SELECT ALL vt0.lid, vt0.c0, vt0.c1 FROM vt0, v0 GROUP BY vt0.lid, vt0.c0, vt0.c1 HAVING (((((vt0.lid)) BETWEEN ((((NULL)AND(MAX(TOTAL(vt0.c2)))))) AND (('CLF,')))) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (LIKE(((((vt0.c2)AND(vt0.c2)))AND(vt0.lid)), ((vt0.lid) ISNULL))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (LIKE(((((vt0.c2)AND(vt0.c2)))AND(vt0.lid)), ((vt0.lid) ISNULL))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((LIKE(((((vt0.c2)AND(vt0.c2)))AND(vt0.lid)), ((vt0.lid) ISNULL))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN v0 ON CASE WHEN ((((vt0.c0)OR(v0.c0)))OR(vt0.c1)) THEN rt0.c1 COLLATE NOCASE END RIGHT OUTER JOIN vt0 ON CASE WHEN TYPEOF(DISTINCT rt0.c1) THEN CASE WHEN rt0.c4 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.lid THEN vt0.c1 END END;
SELECT ALL vt0.lid, vt0.c0, rt0.c0, rt0.c2, rt0.c4, vt0.c1, rt0.c3, vt0.c2, rt0.c1 FROM rt0, vt0 GROUP BY vt0.lid, vt0.c0, rt0.c0, rt0.c2, rt0.c4, vt0.c1, rt0.c3, vt0.c2, rt0.c1;
SELECT vt0.lid, vt0.c0, rt0.c0, rt0.c2, rt0.c4, vt0.c1, rt0.c3, vt0.c2, rt0.c1 FROM rt0, vt0 WHERE (((CASE WHEN rt0.c4 THEN rt0.c2 END)=(vt0.lid))) GROUP BY vt0.lid, vt0.c0, rt0.c0, rt0.c2, rt0.c4, vt0.c1, rt0.c3, vt0.c2, rt0.c1 UNION SELECT vt0.lid, vt0.c0, rt0.c0, rt0.c2, rt0.c4, vt0.c1, rt0.c3, vt0.c2, rt0.c1 FROM rt0, vt0 WHERE ((NOT (((CASE WHEN rt0.c4 THEN rt0.c2 END)==(vt0.lid))))) GROUP BY vt0.lid, vt0.c0, rt0.c0, rt0.c2, rt0.c4, vt0.c1, rt0.c3, vt0.c2, rt0.c1 UNION SELECT ALL vt0.lid, vt0.c0, rt0.c0, rt0.c2, rt0.c4, vt0.c1, rt0.c3, vt0.c2, rt0.c1 FROM rt0, vt0 WHERE (((((CASE WHEN rt0.c4 THEN rt0.c2 END)==(vt0.lid))) ISNULL)) GROUP BY vt0.lid, vt0.c0, rt0.c0, rt0.c2, rt0.c4, vt0.c1, rt0.c3, vt0.c2, rt0.c1;
SELECT ALL vt0.lid, vt0.c0, rt0.c0, rt0.c2, rt0.c4, vt0.c1, rt0.c3, vt0.c2, rt0.c1 FROM rt0, vt0 GROUP BY vt0.lid, vt0.c0, rt0.c0, rt0.c2, rt0.c4, vt0.c1, rt0.c3, vt0.c2, rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING TOTAL(GROUP_CONCAT(COUNT(*))) COLLATE BINARY COLLATE BINARY UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (TOTAL(GROUP_CONCAT(COUNT(*))) COLLATE BINARY COLLATE BINARY)) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((TOTAL(GROUP_CONCAT(COUNT(*))) COLLATE BINARY COLLATE BINARY) ISNULL);
SELECT * FROM rt0, vt0;
SELECT ALL * FROM rt0, vt0 WHERE (CAST(NULL AS TEXT)) UNION ALL SELECT * FROM rt0, vt0 WHERE ((NOT (CAST(NULL AS TEXT)))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE (((CAST(NULL AS TEXT)) ISNULL));
SELECT * FROM rt0, vt0;
SELECT DISTINCT * FROM v0 NOT INDEXED, vt0, rt0;
SELECT DISTINCT * FROM v0, vt0, rt0 WHERE (TOTAL_CHANGES()) UNION SELECT DISTINCT * FROM v0, vt0, rt0 WHERE ((NOT (TOTAL_CHANGES()))) UNION SELECT DISTINCT * FROM v0, vt0, rt0 WHERE (((TOTAL_CHANGES()) ISNULL));
SELECT DISTINCT * FROM v0 NOT INDEXED, vt0, rt0;
SELECT ALL rt0.c1, rt0.c4, rt0.c2, rt0.c3, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c3, rt0.c0;
SELECT rt0.c1, rt0.c4, rt0.c2, rt0.c3, rt0.c0 FROM v0, rt0 WHERE (((json_array_length(rt0.c1, rt0.c4))%((((rt0.c3, rt0.c1, rt0.c3))>=((NULL, rt0.c4, rt0.c1)))))) GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c3, rt0.c0 UNION SELECT rt0.c1, rt0.c4, rt0.c2, rt0.c3, rt0.c0 FROM v0, rt0 WHERE ((NOT (((json_array_length(rt0.c1, rt0.c4))%((((rt0.c3, rt0.c1, rt0.c3))>=((NULL, rt0.c4, rt0.c1)))))))) GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c3, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c4, rt0.c2, rt0.c3, rt0.c0 FROM v0, rt0 WHERE (((((json_array_length(rt0.c1, rt0.c4))%((((rt0.c3, rt0.c1, rt0.c3))>=((NULL, rt0.c4, rt0.c1)))))) ISNULL)) GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c3, rt0.c0;
SELECT vt0.c1, vt0.lid FROM vt0, v0 GROUP BY vt0.c1, vt0.lid;
SELECT vt0.c1, vt0.lid FROM vt0, v0 GROUP BY vt0.c1, vt0.lid HAVING COUNT(x'a779') UNION ALL SELECT ALL vt0.c1, vt0.lid FROM vt0, v0 GROUP BY vt0.c1, vt0.lid HAVING (NOT (COUNT(x'a779'))) UNION ALL SELECT vt0.c1, vt0.lid FROM vt0, v0 GROUP BY vt0.c1, vt0.lid HAVING ((COUNT(x'a779')) ISNULL);
SELECT vt0.c1, vt0.lid FROM vt0, v0 GROUP BY vt0.c1, vt0.lid;
SELECT vt0.c1, vt0.lid FROM vt0, v0 GROUP BY vt0.c1, vt0.lid HAVING COUNT(x'a779') UNION ALL SELECT ALL vt0.c1, vt0.lid FROM vt0, v0 GROUP BY vt0.c1, vt0.lid HAVING (NOT (COUNT(x'a779'))) UNION ALL SELECT vt0.c1, vt0.lid FROM vt0, v0 GROUP BY vt0.c1, vt0.lid HAVING ((COUNT(x'a779')) ISNULL);
SELECT vt0.c1, vt0.lid FROM vt0, v0 GROUP BY vt0.c1, vt0.lid;
SELECT * FROM rt0, vt0 FULL OUTER JOIN v0 ON CAST(rt0.c3 AS TEXT);
SELECT * FROM rt0, vt0 FULL OUTER JOIN v0 ON CAST(rt0.c3 AS TEXT) WHERE (((rt0.c3 COLLATE NOCASE)==(rt0.c3 COLLATE BINARY))) UNION ALL SELECT ALL * FROM rt0, vt0 FULL OUTER JOIN v0 ON CAST(rt0.c3 AS TEXT) WHERE ((NOT (((rt0.c3 COLLATE NOCASE)==(rt0.c3 COLLATE BINARY))))) UNION ALL SELECT ALL * FROM rt0, vt0 FULL OUTER JOIN v0 ON CAST(rt0.c3 AS TEXT) WHERE (((((rt0.c3 COLLATE NOCASE)==(rt0.c3 COLLATE BINARY))) ISNULL));
SELECT * FROM rt0, vt0 FULL OUTER JOIN v0 ON CAST(rt0.c3 AS TEXT);
SELECT DISTINCT * FROM vt0, v0, rt0;
SELECT DISTINCT * FROM vt0, v0, rt0 WHERE (((rt0.c3)%(vt0.lid)) COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt0, v0, rt0 WHERE ((NOT (((rt0.c3)%(vt0.lid)) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt0, v0, rt0 WHERE (((((rt0.c3)%(vt0.lid)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt0, v0, rt0;
SELECT rt0.c2, rt0.c0, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c4, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c4, rt0.c1 FROM rt0 WHERE (json_object(((rt0.c2)*(rt0.c3)), ((rt0.c3)>>(rt0.c1)))) GROUP BY rt0.c2, rt0.c0, rt0.c4, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c4, rt0.c1 FROM rt0 WHERE ((NOT (json_object(((rt0.c2)*(rt0.c3)), ((rt0.c3)>>(rt0.c1)))))) GROUP BY rt0.c2, rt0.c0, rt0.c4, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c4, rt0.c1 FROM rt0 WHERE (((json_object(((rt0.c2)*(rt0.c3)), ((rt0.c3)>>(rt0.c1)))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c4, rt0.c1;
SELECT ALL rt0.c3, rt0.c1, vt0.c0 FROM v0 LEFT OUTER JOIN vt0 ON CASE WHEN CAST(rt0.c3 AS NUMERIC) THEN CAST(rt0.c1 AS BLOB) ELSE rt0.c3 END INNER JOIN rt0 ON (((v0.c0)) BETWEEN ((((rt0.c1)/(v0.c0)))) AND ((((((rt0.c4)AND(vt0.c1)))AND(rt0.c2))))) GROUP BY rt0.c3, rt0.c1, vt0.c0;
SELECT ALL vt0.c1 FROM vt0, v0;
SELECT ALL vt0.c1 FROM vt0, v0 WHERE (((((((v0.c0)OR(v0.c0)))OR(v0.c0)))<>((vt0.c1 IN (v0.c0))))) UNION ALL SELECT vt0.c1 FROM vt0, v0 WHERE ((NOT (((((((v0.c0)OR(v0.c0)))OR(v0.c0)))<>((vt0.c1 IN (v0.c0))))))) UNION ALL SELECT vt0.c1 FROM vt0, v0 WHERE (((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))<>((vt0.c1 IN (v0.c0))))) ISNULL));
SELECT ALL vt0.c1 FROM vt0, v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0 COLLATE NOCASE, STRFTIME(v0.c0, v0.c0, v0.c0, v0.c0, v0.c0), ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))) AND ((CASE WHEN v0.c0 THEN v0.c0 END, ((v0.c0)||(v0.c0)), ((v0.c0)LIKE(v0.c0)))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0 COLLATE NOCASE, STRFTIME(v0.c0, v0.c0, v0.c0, v0.c0, v0.c0), ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))) AND ((CASE WHEN v0.c0 THEN v0.c0 END, ((v0.c0)||(v0.c0)), ((v0.c0)LIKE(v0.c0)))))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0 COLLATE NOCASE, STRFTIME(v0.c0, v0.c0, v0.c0, v0.c0, v0.c0), ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))) AND ((CASE WHEN v0.c0 THEN v0.c0 END, ((v0.c0)||(v0.c0)), ((v0.c0)LIKE(v0.c0)))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL vt0.lid FROM rt0, vt0, v0 GROUP BY vt0.lid;
SELECT ALL vt0.lid FROM rt0, vt0, v0 WHERE ((((((rt0.c0 IN (v0.c0, vt0.c0)))OR(((v0.c0)<<(rt0.c3)))))AND(((((((((rt0.c3)AND(vt0.c2)))AND(rt0.c2)))AND(vt0.c2)))OR(rt0.c0))))) GROUP BY vt0.lid UNION SELECT ALL vt0.lid FROM rt0, vt0, v0 WHERE ((NOT ((((((rt0.c0 IN (v0.c0, vt0.c0)))OR(((v0.c0)<<(rt0.c3)))))AND(((((((((rt0.c3)AND(vt0.c2)))AND(rt0.c2)))AND(vt0.c2)))OR(rt0.c0))))))) GROUP BY vt0.lid UNION SELECT ALL vt0.lid FROM rt0, vt0, v0 WHERE ((((((((rt0.c0 IN (v0.c0, vt0.c0)))OR(((v0.c0)<<(rt0.c3)))))AND(((((((((rt0.c3)AND(vt0.c2)))AND(rt0.c2)))AND(vt0.c2)))OR(rt0.c0))))) ISNULL)) GROUP BY vt0.lid;
SELECT ALL vt0.lid FROM rt0, vt0, v0 GROUP BY vt0.lid;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(AVG(v0.c0)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(AVG(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(AVG(v0.c0))) ISNULL);
SELECT ALL * FROM rt0, vt0, v0;
SELECT * FROM rt0, vt0, v0 WHERE ((vt0.lid COLLATE NOCASE IN ((((rt0.c3)) BETWEEN ((vt0.lid)) AND ((vt0.c2))), CAST(rt0.c1 AS INTEGER), -1.826873377E9))) UNION ALL SELECT ALL * FROM rt0, vt0, v0 WHERE ((NOT ((vt0.lid COLLATE NOCASE IN ((((rt0.c3)) BETWEEN ((vt0.lid)) AND ((vt0.c2))), CAST(rt0.c1 AS INTEGER), -1.826873377E9))))) UNION ALL SELECT ALL * FROM rt0, vt0, v0 WHERE ((((vt0.lid COLLATE NOCASE IN ((((rt0.c3)) BETWEEN ((vt0.lid)) AND ((vt0.c2))), CAST(rt0.c1 AS INTEGER), -1.826873377E9))) ISNULL));
SELECT ALL * FROM rt0, vt0, v0;
SELECT DISTINCT * FROM v0, rt0 FULL OUTER JOIN vt0 ON (((vt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c3))) COLLATE BINARY;
SELECT DISTINCT * FROM v0, rt0 FULL OUTER JOIN vt0 ON (((vt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c3))) COLLATE BINARY WHERE (((UNLIKELY(v0.c0))>(json_type(vt0.c0)))) UNION SELECT DISTINCT * FROM v0, rt0 FULL OUTER JOIN vt0 ON (((vt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c3))) COLLATE BINARY WHERE ((NOT (((UNLIKELY(v0.c0))>(json_type(vt0.c0)))))) UNION SELECT DISTINCT * FROM v0, rt0 FULL OUTER JOIN vt0 ON (((vt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c3))) COLLATE BINARY WHERE (((((UNLIKELY(v0.c0))>(json_type(vt0.c0)))) ISNULL));
SELECT DISTINCT * FROM v0, rt0 FULL OUTER JOIN vt0 ON (((vt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c3))) COLLATE BINARY;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((+ (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((+ (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((+ (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((NOT (COUNT(*))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((NOT (COUNT(*)))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((NOT (COUNT(*))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((NOT (COUNT(*)))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c0, rt0.c2 FROM rt0, v0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0, v0 WHERE (load_extension(((rt0.c1)OR(rt0.c1)), (((v0.c0, rt0.c0, v0.c0))==((v0.c0, rt0.c0, 0.38290826771580266))))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0, v0 WHERE ((NOT (load_extension(((rt0.c1)OR(rt0.c1)), (((v0.c0, rt0.c0, v0.c0))=((v0.c0, rt0.c0, 0.38290826771580266))))))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0, v0 WHERE (((load_extension(((rt0.c1)OR(rt0.c1)), (((v0.c0, rt0.c0, v0.c0))==((v0.c0, rt0.c0, 0.38290826771580266))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CASE WHEN ((((rt0.c1)AND(0.598084212103551)))AND(rt0.c4)) THEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c4 END ELSE ((0.85629149630989)IS NOT(rt0.c0)) END) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CASE WHEN ((((rt0.c1)AND(0.598084212103551)))AND(rt0.c4)) THEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c4 END ELSE ((0.85629149630989)IS NOT(rt0.c0)) END))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CASE WHEN ((((rt0.c1)AND(0.598084212103551)))AND(rt0.c4)) THEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c4 END ELSE ((0.85629149630989)IS NOT(rt0.c0)) END) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL vt0.lid, vt0.c2 FROM v0, rt0, vt0 GROUP BY vt0.lid, vt0.c2;
SELECT ALL vt0.lid, vt0.c2 FROM v0, rt0, vt0 WHERE ((((~ (rt0.c1))) BETWEEN ('pALtO&iv' COLLATE BINARY) AND (vt0.c0 COLLATE BINARY))) GROUP BY vt0.lid, vt0.c2 UNION SELECT ALL vt0.lid, vt0.c2 FROM v0, rt0, vt0 WHERE ((NOT ((((~ (rt0.c1))) BETWEEN ('pALtO&iv' COLLATE BINARY) AND (vt0.c0 COLLATE BINARY))))) GROUP BY vt0.lid, vt0.c2 UNION SELECT ALL vt0.lid, vt0.c2 FROM v0, rt0, vt0 WHERE ((((((~ (rt0.c1))) BETWEEN ('pALtO&iv' COLLATE BINARY) AND (vt0.c0 COLLATE BINARY))) ISNULL)) GROUP BY vt0.lid, vt0.c2;
SELECT ALL vt0.lid, vt0.c2 FROM v0, rt0, vt0 GROUP BY vt0.lid, vt0.c2;
SELECT ALL rt0.c0, rt0.c4, rt0.c3, vt0.c1, v0.c0, vt0.c2 FROM vt0 INNER JOIN v0 ON CASE v0.c0 COLLATE RTRIM  WHEN ((0.9679825233497955)>(rt0.c3)) THEN (vt0.lid IN ()) ELSE ((((vt0.c1)OR(rt0.c1)))AND(rt0.c0)) END INNER JOIN rt0 ON ((((vt0.c2)IS NOT('n4S')))&(((v0.c0) ISNULL))) GROUP BY rt0.c0, rt0.c4, rt0.c3, vt0.c1, v0.c0, vt0.c2;
SELECT rt0.c0, rt0.c4, rt0.c3, vt0.c1, v0.c0, vt0.c2 FROM vt0 INNER JOIN v0 ON CASE v0.c0 COLLATE RTRIM  WHEN ((0.9679825233497955)>(rt0.c3)) THEN (vt0.lid IN ()) ELSE ((((vt0.c1)OR(rt0.c1)))AND(rt0.c0)) END INNER JOIN rt0 ON ((((vt0.c2)IS NOT('n4S')))&(((v0.c0) ISNULL))) GROUP BY rt0.c0, rt0.c4, rt0.c3, vt0.c1, v0.c0, vt0.c2 HAVING ((((MAX(GROUP_CONCAT(GROUP_CONCAT(AVG(rt0.c4)))))OR(SUM(TOTAL(AVG(SUM(AVG(rt0.c2))))))))AND(0.7638578056145681)) COLLATE BINARY UNION ALL SELECT ALL rt0.c0, rt0.c4, rt0.c3, vt0.c1, v0.c0, vt0.c2 FROM vt0 INNER JOIN v0 ON CASE v0.c0 COLLATE RTRIM  WHEN ((0.9679825233497955)>(rt0.c3)) THEN (vt0.lid IN ()) ELSE ((((vt0.c1)OR(rt0.c1)))AND(rt0.c0)) END INNER JOIN rt0 ON ((((vt0.c2)IS NOT('n4S')))&(((v0.c0) ISNULL))) GROUP BY rt0.c0, rt0.c4, rt0.c3, vt0.c1, v0.c0, vt0.c2 HAVING (NOT (((((MAX(GROUP_CONCAT(GROUP_CONCAT(AVG(rt0.c4)))))OR(SUM(TOTAL(AVG(SUM(AVG(rt0.c2))))))))AND(0.7638578056145681)) COLLATE BINARY)) UNION ALL SELECT ALL rt0.c0, rt0.c4, rt0.c3, vt0.c1, v0.c0, vt0.c2 FROM vt0 INNER JOIN v0 ON CASE v0.c0 COLLATE RTRIM  WHEN ((0.9679825233497955)>(rt0.c3)) THEN (vt0.lid IN ()) ELSE ((((vt0.c1)OR(rt0.c1)))AND(rt0.c0)) END INNER JOIN rt0 ON ((((vt0.c2)IS NOT('n4S')))&(((v0.c0) ISNULL))) GROUP BY rt0.c0, rt0.c4, rt0.c3, vt0.c1, v0.c0, vt0.c2 HAVING ((((((MAX(GROUP_CONCAT(GROUP_CONCAT(AVG(rt0.c4)))))OR(SUM(TOTAL(AVG(SUM(AVG(rt0.c2))))))))AND(0.7638578056145681)) COLLATE BINARY) ISNULL);
SELECT ALL rt0.c0 FROM vt0, v0, rt0;
SELECT rt0.c0 FROM vt0, v0, rt0 WHERE (LIKELIHOOD(DISTINCT ((vt0.lid) NOT BETWEEN (rt0.c4) AND (rt0.c3)), 0.9882774943813134)) UNION ALL SELECT rt0.c0 FROM vt0, v0 NOT INDEXED, rt0 WHERE ((NOT (LIKELIHOOD(DISTINCT ((vt0.lid) NOT BETWEEN (rt0.c4) AND (rt0.c3)), 0.9882774943813134)))) UNION ALL SELECT ALL rt0.c0 FROM vt0, v0, rt0 WHERE (((LIKELIHOOD(DISTINCT ((vt0.lid) NOT BETWEEN (rt0.c4) AND (rt0.c3)), 0.9882774943813134)) ISNULL));
SELECT ALL rt0.c0 FROM vt0, v0, rt0;
SELECT DISTINCT rt0.c1, rt0.c3 FROM v0 LEFT OUTER JOIN rt0 ON (((('')AND(v0.c0)))AND(rt0.c2)) COLLATE BINARY;
SELECT DISTINCT rt0.c1, rt0.c3 FROM v0 LEFT OUTER JOIN rt0 ON (((('')AND(v0.c0)))AND(rt0.c2)) COLLATE BINARY WHERE (((((((((((rt0.c1)|(rt0.c2)))AND(((rt0.c4)+(rt0.c2)))))AND(v0.c0)))AND(CASE rt0.c3  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c4 ELSE v0.c0 END)))OR(((NULL)+(rt0.c2))))) UNION SELECT DISTINCT rt0.c1, rt0.c3 FROM v0 LEFT OUTER JOIN rt0 ON (((('')AND(v0.c0)))AND(rt0.c2)) COLLATE BINARY WHERE ((NOT (((((((((((rt0.c1)|(rt0.c2)))AND(((rt0.c4)+(rt0.c2)))))AND(v0.c0)))AND(CASE rt0.c3  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c4 ELSE v0.c0 END)))OR(((NULL)+(rt0.c2))))))) UNION SELECT DISTINCT rt0.c1, rt0.c3 FROM v0 LEFT OUTER JOIN rt0 ON (((('')AND(v0.c0)))AND(rt0.c2)) COLLATE BINARY WHERE (((((((((((((rt0.c1)|(rt0.c2)))AND(((rt0.c4)+(rt0.c2)))))AND(v0.c0)))AND(CASE rt0.c3  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c4 ELSE v0.c0 END)))OR(((NULL)+(rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c3 FROM v0 LEFT OUTER JOIN rt0 ON (((('')AND(v0.c0)))AND(rt0.c2)) COLLATE BINARY;
SELECT rt0.c2, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1;
SELECT ALL rt0.c2, rt0.c3, rt0.c1 FROM rt0 WHERE (CAST(rt0.c3 AS NUMERIC)) GROUP BY rt0.c2, rt0.c3, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c3, rt0.c1 FROM rt0 WHERE ((NOT (CAST(rt0.c3 AS NUMERIC)))) GROUP BY rt0.c2, rt0.c3, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c3, rt0.c1 FROM rt0 WHERE (((CAST(rt0.c3 AS NUMERIC)) ISNULL)) GROUP BY rt0.c2, rt0.c3, rt0.c1;
SELECT rt0.c2, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1;
SELECT rt0.c3, rt0.c1, rt0.c2, rt0.c4, rt0.c0, vt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2, rt0.c4, rt0.c0, vt0.c2, vt0.c0;
SELECT ALL rt0.c3, rt0.c1, rt0.c2, rt0.c4, rt0.c0, vt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2, rt0.c4, rt0.c0, vt0.c2, vt0.c0 HAVING COUNT(((COUNT(*))IS NOT(vt0.c0))) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c2, rt0.c4, rt0.c0, vt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2, rt0.c4, rt0.c0, vt0.c2, vt0.c0 HAVING (NOT (COUNT(((COUNT(*))IS NOT(vt0.c0))))) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c2, rt0.c4, rt0.c0, vt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2, rt0.c4, rt0.c0, vt0.c2, vt0.c0 HAVING ((COUNT(((COUNT(*))IS NOT(vt0.c0)))) ISNULL);
SELECT * FROM v0 INNER JOIN rt0 ON ((((((((((rt0.c4)+(vt0.c1)))AND(vt0.c1 COLLATE NOCASE)))OR(ABS(DISTINCT rt0.c1))))OR(rt0.c0)))OR(NULL)) CROSS JOIN vt0 ON ((CASE vt0.c0  WHEN vt0.c2 THEN rt0.c4 ELSE rt0.c1 END)<>(((vt0.lid)>=(0.6541968298288927))));
SELECT ALL * FROM v0 INNER JOIN rt0 ON ((((((((((rt0.c4)+(vt0.c1)))AND(vt0.c1 COLLATE NOCASE)))OR(ABS(DISTINCT rt0.c1))))OR(rt0.c0)))OR(NULL)) CROSS JOIN vt0 ON ((CASE vt0.c0  WHEN vt0.c2 THEN rt0.c4 ELSE rt0.c1 END)!=(((vt0.lid)>=(0.6541968298288927)))) WHERE (((CASE vt0.lid  WHEN -466612154 THEN x'1a77' END) NOT BETWEEN ((+ (vt0.c1))) AND (TYPEOF(DISTINCT rt0.c3)))) UNION ALL SELECT ALL * FROM v0 INNER JOIN rt0 ON ((((((((((rt0.c4)+(vt0.c1)))AND(vt0.c1 COLLATE NOCASE)))OR(ABS(DISTINCT rt0.c1))))OR(rt0.c0)))OR(NULL)) CROSS JOIN vt0 ON ((CASE vt0.c0  WHEN vt0.c2 THEN rt0.c4 ELSE rt0.c1 END)<>(((vt0.lid)>=(0.6541968298288927)))) WHERE ((NOT (((CASE vt0.lid  WHEN -466612154 THEN x'1a77' END) NOT BETWEEN ((+ (vt0.c1))) AND (TYPEOF(DISTINCT rt0.c3)))))) UNION ALL SELECT * FROM v0 INNER JOIN rt0 ON ((((((((((rt0.c4)+(vt0.c1)))AND(vt0.c1 COLLATE NOCASE)))OR(ABS(DISTINCT rt0.c1))))OR(rt0.c0)))OR(NULL)) CROSS JOIN vt0 ON ((CASE vt0.c0  WHEN vt0.c2 THEN rt0.c4 ELSE rt0.c1 END)!=(((vt0.lid)>=(0.6541968298288927)))) WHERE (((((CASE vt0.lid  WHEN -466612154 THEN x'1a77' END) NOT BETWEEN ((+ (vt0.c1))) AND (TYPEOF(DISTINCT rt0.c3)))) ISNULL));
SELECT * FROM v0 INNER JOIN rt0 ON ((((((((((rt0.c4)+(vt0.c1)))AND(vt0.c1 COLLATE NOCASE)))OR(ABS(DISTINCT rt0.c1))))OR(rt0.c0)))OR(NULL)) CROSS JOIN vt0 ON ((CASE vt0.c0  WHEN vt0.c2 THEN rt0.c4 ELSE rt0.c1 END)<>(((vt0.lid)>=(0.6541968298288927))));
SELECT DISTINCT rt0.c3, rt0.c4, rt0.c0, rt0.c2, rt0.c1, v0.c0 FROM v0, rt0;
SELECT DISTINCT rt0.c3, rt0.c4, rt0.c0, rt0.c2, rt0.c1, v0.c0 FROM v0, rt0 WHERE (((((((((CASE WHEN rt0.c4 THEN v0.c0 END)OR(((rt0.c1)/(rt0.c2)))))AND((~ (rt0.c2)))))OR((rt0.c0 IN ()))))OR((((rt0.c1, rt0.c3, rt0.c3))<=((rt0.c3, rt0.c4, rt0.c4)))))) UNION SELECT DISTINCT rt0.c3, rt0.c4, rt0.c0, rt0.c2, rt0.c1, v0.c0 FROM v0, rt0 WHERE ((NOT (((((((((CASE WHEN rt0.c4 THEN v0.c0 END)OR(((rt0.c1)/(rt0.c2)))))AND((~ (rt0.c2)))))OR((rt0.c0 IN ()))))OR((((rt0.c1, rt0.c3, rt0.c3))<=((rt0.c3, rt0.c4, rt0.c4)))))))) UNION SELECT DISTINCT rt0.c3, rt0.c4, rt0.c0, rt0.c2, rt0.c1, v0.c0 FROM v0, rt0 WHERE (((((((((((CASE WHEN rt0.c4 THEN v0.c0 END)OR(((rt0.c1)/(rt0.c2)))))AND((~ (rt0.c2)))))OR((rt0.c0 IN ()))))OR((((rt0.c1, rt0.c3, rt0.c3))<=((rt0.c3, rt0.c4, rt0.c4)))))) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c4, rt0.c0, rt0.c2, rt0.c1, v0.c0 FROM v0, rt0;
SELECT ALL rt0.c4, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c2;
SELECT ALL rt0.c4, rt0.c1, rt0.c2 FROM rt0 WHERE (((CASE rt0.c4  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c3 END) IS FALSE)) GROUP BY rt0.c4, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c4, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((CASE rt0.c4  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c3 END) IS FALSE)))) GROUP BY rt0.c4, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c4, rt0.c1, rt0.c2 FROM rt0 WHERE (((((CASE rt0.c4  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c3 END) IS FALSE)) ISNULL)) GROUP BY rt0.c4, rt0.c1, rt0.c2;
SELECT ALL rt0.c4, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c2;
SELECT ALL v0.c0, vt0.c2, vt0.c0, rt0.c3, vt0.lid, rt0.c1 FROM vt0 RIGHT OUTER JOIN v0 ON (((vt0.c2)||(rt0.c1)) IN ()) INNER JOIN rt0 ON ((NULL)>=(((vt0.c1)&(rt0.c4)))) GROUP BY v0.c0, vt0.c2, vt0.c0, rt0.c3, vt0.lid, rt0.c1;
SELECT v0.c0, vt0.c2, vt0.c0, rt0.c3, vt0.lid, rt0.c1 FROM vt0 RIGHT OUTER JOIN v0 ON (((vt0.c2)||(rt0.c1)) IN ()) INNER JOIN rt0 ON ((NULL)>=(((vt0.c1)&(rt0.c4)))) GROUP BY v0.c0, vt0.c2, vt0.c0, rt0.c3, vt0.lid, rt0.c1 HAVING ((MAX(rt0.c2))<>(COUNT(v0.c0))) UNION ALL SELECT ALL v0.c0, vt0.c2, vt0.c0, rt0.c3, vt0.lid, rt0.c1 FROM vt0 RIGHT OUTER JOIN v0 ON (((vt0.c2)||(rt0.c1)) IN ()) INNER JOIN rt0 ON ((NULL)>=(((vt0.c1)&(rt0.c4)))) GROUP BY v0.c0, vt0.c2, vt0.c0, rt0.c3, vt0.lid, rt0.c1 HAVING (NOT (((MAX(rt0.c2))<>(COUNT(v0.c0))))) UNION ALL SELECT v0.c0, vt0.c2, vt0.c0, rt0.c3, vt0.lid, rt0.c1 FROM vt0 RIGHT OUTER JOIN v0 ON (((vt0.c2)||(rt0.c1)) IN ()) INNER JOIN rt0 ON ((NULL)>=(((vt0.c1)&(rt0.c4)))) GROUP BY v0.c0, vt0.c2, vt0.c0, rt0.c3, vt0.lid, rt0.c1 HAVING ((((MAX(rt0.c2))<>(COUNT(v0.c0)))) ISNULL);
SELECT ALL v0.c0, vt0.c2, vt0.c0, rt0.c3, vt0.lid, rt0.c1 FROM vt0 RIGHT OUTER JOIN v0 ON (((vt0.c2)||(rt0.c1)) IN ()) INNER JOIN rt0 ON ((NULL)>=(((vt0.c1)&(rt0.c4)))) GROUP BY v0.c0, vt0.c2, vt0.c0, rt0.c3, vt0.lid, rt0.c1;
SELECT v0.c0, vt0.c2, vt0.c0, rt0.c3, vt0.lid, rt0.c1 FROM vt0 RIGHT OUTER JOIN v0 ON (((vt0.c2)||(rt0.c1)) IN ()) INNER JOIN rt0 ON ((NULL)>=(((vt0.c1)&(rt0.c4)))) GROUP BY v0.c0, vt0.c2, vt0.c0, rt0.c3, vt0.lid, rt0.c1 HAVING ((MAX(rt0.c2))<>(COUNT(v0.c0))) UNION ALL SELECT ALL v0.c0, vt0.c2, vt0.c0, rt0.c3, vt0.lid, rt0.c1 FROM vt0 RIGHT OUTER JOIN v0 ON (((vt0.c2)||(rt0.c1)) IN ()) INNER JOIN rt0 ON ((NULL)>=(((vt0.c1)&(rt0.c4)))) GROUP BY v0.c0, vt0.c2, vt0.c0, rt0.c3, vt0.lid, rt0.c1 HAVING (NOT (((MAX(rt0.c2))<>(COUNT(v0.c0))))) UNION ALL SELECT v0.c0, vt0.c2, vt0.c0, rt0.c3, vt0.lid, rt0.c1 FROM vt0 RIGHT OUTER JOIN v0 ON (((vt0.c2)||(rt0.c1)) IN ()) INNER JOIN rt0 ON ((NULL)>=(((vt0.c1)&(rt0.c4)))) GROUP BY v0.c0, vt0.c2, vt0.c0, rt0.c3, vt0.lid, rt0.c1 HAVING ((((MAX(rt0.c2))<>(COUNT(v0.c0)))) ISNULL);
SELECT ALL v0.c0, vt0.c2, vt0.c0, rt0.c3, vt0.lid, rt0.c1 FROM vt0 RIGHT OUTER JOIN v0 ON (((vt0.c2)||(rt0.c1)) IN ()) INNER JOIN rt0 ON ((NULL)>=(((vt0.c1)&(rt0.c4)))) GROUP BY v0.c0, vt0.c2, vt0.c0, rt0.c3, vt0.lid, rt0.c1;
SELECT rt0.c3 FROM rt0;
SELECT rt0.c3 FROM rt0 WHERE (0.786893475208039) UNION ALL SELECT ALL rt0.c3 FROM rt0 WHERE ((NOT (0.786893475208039))) UNION ALL SELECT rt0.c3 FROM rt0 WHERE (((0.786893475208039) ISNULL));
SELECT rt0.c3 FROM rt0;
SELECT DISTINCT vt0.c2, rt0.c3, rt0.c2, vt0.lid, vt0.c0, v0.c0, rt0.c0, rt0.c4, rt0.c1, vt0.c1 FROM v0, rt0, vt0;
SELECT DISTINCT vt0.c2, rt0.c3, rt0.c2, vt0.lid, vt0.c0, v0.c0, rt0.c0, rt0.c4, rt0.c1, vt0.c1 FROM v0, rt0, vt0 WHERE (CAST(((rt0.c0)/(vt0.c2)) AS INTEGER)) UNION SELECT DISTINCT vt0.c2, rt0.c3, rt0.c2, vt0.lid, vt0.c0, v0.c0, rt0.c0, rt0.c4, rt0.c1, vt0.c1 FROM v0, rt0, vt0 WHERE ((NOT (CAST(((rt0.c0)/(vt0.c2)) AS INTEGER)))) UNION SELECT DISTINCT vt0.c2, rt0.c3, rt0.c2, vt0.lid, vt0.c0, v0.c0, rt0.c0, rt0.c4, rt0.c1, vt0.c1 FROM v0, rt0, vt0 WHERE (((CAST(((rt0.c0)/(vt0.c2)) AS INTEGER)) ISNULL));
SELECT DISTINCT vt0.c2, rt0.c3, rt0.c2, vt0.lid, vt0.c0, v0.c0, rt0.c0, rt0.c4, rt0.c1, vt0.c1 FROM v0, rt0, vt0;
SELECT v0.c0, rt0.c4, rt0.c0, rt0.c3 FROM vt0, v0 INNER JOIN rt0 ON LOWER(DISTINCT vt0.c0) COLLATE NOCASE GROUP BY v0.c0, rt0.c4, rt0.c0, rt0.c3;
SELECT ALL v0.c0, rt0.c4, rt0.c0, rt0.c3 FROM vt0, v0 INNER JOIN rt0 ON LOWER(DISTINCT vt0.c0) COLLATE NOCASE WHERE (rt0.c0) GROUP BY v0.c0, rt0.c4, rt0.c0, rt0.c3 UNION SELECT v0.c0, rt0.c4, rt0.c0, rt0.c3 FROM vt0, v0 INNER JOIN rt0 ON LOWER(DISTINCT vt0.c0) COLLATE NOCASE WHERE ((NOT (rt0.c0))) GROUP BY v0.c0, rt0.c4, rt0.c0, rt0.c3 UNION SELECT ALL v0.c0, rt0.c4, rt0.c0, rt0.c3 FROM vt0, v0 INNER JOIN rt0 ON LOWER(DISTINCT vt0.c0) COLLATE NOCASE WHERE (((rt0.c0) ISNULL)) GROUP BY v0.c0, rt0.c4, rt0.c0, rt0.c3;
SELECT v0.c0, rt0.c4, rt0.c0, rt0.c3 FROM vt0, v0 INNER JOIN rt0 ON LOWER(DISTINCT vt0.c0) COLLATE NOCASE GROUP BY v0.c0, rt0.c4, rt0.c0, rt0.c3;
SELECT vt0.lid, vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.lid, vt0.c0;
SELECT ALL vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c0 HAVING ((AVG(MAX(vt0.lid))) NOT NULL) UNION ALL SELECT vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c0 HAVING (NOT (((AVG(MAX(vt0.lid))) NOT NULL))) UNION ALL SELECT vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c0 HAVING ((((AVG(MAX(vt0.lid))) NOT NULL)) ISNULL);
SELECT vt0.lid FROM v0 RIGHT OUTER JOIN vt0 ON (((x''))<>((CAST(rt0.c1 AS REAL)))) CROSS JOIN rt0 ON TYPEOF(((rt0.c3) NOTNULL));
SELECT DISTINCT vt0.c2, rt0.c0, rt0.c2 FROM rt0, vt0, v0;
SELECT DISTINCT vt0.c2, rt0.c0, rt0.c2 FROM rt0, vt0, v0 WHERE (LENGTH(CASE WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c1 END)) UNION SELECT DISTINCT vt0.c2, rt0.c0, rt0.c2 FROM rt0, vt0, v0 WHERE ((NOT (LENGTH(CASE WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c1 END)))) UNION SELECT DISTINCT vt0.c2, rt0.c0, rt0.c2 FROM rt0, vt0, v0 WHERE (((LENGTH(CASE WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c1 END)) ISNULL));
SELECT DISTINCT vt0.c2, rt0.c0, rt0.c2 FROM rt0, vt0, v0;
SELECT rt0.c3, rt0.c2, vt0.c0, vt0.lid FROM rt0, vt0 GROUP BY rt0.c3, rt0.c2, vt0.c0, vt0.lid;
SELECT rt0.c3, rt0.c2, vt0.c0, vt0.lid FROM rt0, vt0 WHERE (((((rt0.c3)AND(rt0.c2))) BETWEEN (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c3))) AND (LIKELIHOOD(rt0.c3, 0.6201679965952921)))) GROUP BY rt0.c3, rt0.c2, vt0.c0, vt0.lid UNION SELECT ALL rt0.c3, rt0.c2, vt0.c0, vt0.lid FROM rt0, vt0 NOT INDEXED WHERE ((NOT (((((rt0.c3)AND(rt0.c2))) BETWEEN (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c3))) AND (LIKELIHOOD(rt0.c3, 0.6201679965952921)))))) GROUP BY rt0.c3, rt0.c2, vt0.c0, vt0.lid UNION SELECT rt0.c3, rt0.c2, vt0.c0, vt0.lid FROM rt0, vt0 WHERE (((((((rt0.c3)AND(rt0.c2))) BETWEEN (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c3))) AND (LIKELIHOOD(rt0.c3, 0.6201679965952921)))) ISNULL)) GROUP BY rt0.c3, rt0.c2, vt0.c0, vt0.lid;
SELECT rt0.c3, rt0.c2, vt0.c0, vt0.lid FROM rt0, vt0 GROUP BY rt0.c3, rt0.c2, vt0.c0, vt0.lid;
SELECT ALL vt0.c0, vt0.lid FROM v0, vt0 GROUP BY vt0.c0, vt0.lid;
SELECT ALL vt0.c0, vt0.lid FROM v0, vt0 GROUP BY vt0.c0, vt0.lid HAVING ((CASE GROUP_CONCAT(vt0.c2)  WHEN COUNT(vt0.c2) THEN vt0.c1 ELSE vt0.c0 END) ISNULL) UNION ALL SELECT vt0.c0, vt0.lid FROM v0, vt0 GROUP BY vt0.c0, vt0.lid HAVING (NOT (((CASE GROUP_CONCAT(vt0.c2)  WHEN COUNT(vt0.c2) THEN vt0.c1 ELSE vt0.c0 END) ISNULL))) UNION ALL SELECT vt0.c0, vt0.lid FROM v0, vt0 GROUP BY vt0.c0, vt0.lid HAVING ((((CASE GROUP_CONCAT(vt0.c2)  WHEN COUNT(vt0.c2) THEN vt0.c1 ELSE vt0.c0 END) ISNULL)) ISNULL);
SELECT ALL vt0.c0, vt0.lid FROM v0, vt0 GROUP BY vt0.c0, vt0.lid;
SELECT ALL vt0.c0, vt0.lid FROM v0, vt0 GROUP BY vt0.c0, vt0.lid HAVING ((CASE GROUP_CONCAT(vt0.c2)  WHEN COUNT(vt0.c2) THEN vt0.c1 ELSE vt0.c0 END) ISNULL) UNION ALL SELECT vt0.c0, vt0.lid FROM v0, vt0 GROUP BY vt0.c0, vt0.lid HAVING (NOT (((CASE GROUP_CONCAT(vt0.c2)  WHEN COUNT(vt0.c2) THEN vt0.c1 ELSE vt0.c0 END) ISNULL))) UNION ALL SELECT vt0.c0, vt0.lid FROM v0, vt0 GROUP BY vt0.c0, vt0.lid HAVING ((((CASE GROUP_CONCAT(vt0.c2)  WHEN COUNT(vt0.c2) THEN vt0.c1 ELSE vt0.c0 END) ISNULL)) ISNULL);
SELECT ALL vt0.c0, vt0.lid FROM v0, vt0 GROUP BY vt0.c0, vt0.lid;
SELECT * FROM v0 CROSS JOIN vt0 ON (- (vt0.c1 COLLATE RTRIM));
SELECT ALL * FROM v0 CROSS JOIN vt0 ON (- (vt0.c1 COLLATE RTRIM)) WHERE (((((0.45058843421735895)>=(vt0.c2))) BETWEEN (((((x'8617')AND(v0.c0)))OR(vt0.lid))) AND ((~ (vt0.c1))))) UNION ALL SELECT * FROM v0 CROSS JOIN vt0 ON (- (vt0.c1 COLLATE RTRIM)) WHERE ((NOT (((((0.45058843421735895)>=(vt0.c2))) BETWEEN (((((x'8617')AND(v0.c0)))OR(vt0.lid))) AND ((~ (vt0.c1))))))) UNION ALL SELECT ALL * FROM v0 CROSS JOIN vt0 ON (- (vt0.c1 COLLATE RTRIM)) WHERE (((((((0.45058843421735895)>=(vt0.c2))) BETWEEN (((((x'8617')AND(v0.c0)))OR(vt0.lid))) AND ((~ (vt0.c1))))) ISNULL));
SELECT * FROM v0 CROSS JOIN vt0 ON (- (vt0.c1 COLLATE RTRIM));
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE ('1011360205') UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT ('1011360205'))) UNION SELECT DISTINCT * FROM vt0, v0 NOT INDEXED WHERE ((('1011360205') ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (NULL) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (NULL))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((NULL) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((CAST(v0.c0 AS NUMERIC)) NOT BETWEEN (GROUP_CONCAT(AVG(v0.c0))) AND (CAST(COUNT(*) AS NUMERIC))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((CAST(v0.c0 AS NUMERIC)) NOT BETWEEN (GROUP_CONCAT(AVG(v0.c0))) AND (CAST(COUNT(*) AS NUMERIC))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((CAST(v0.c0 AS NUMERIC)) NOT BETWEEN (GROUP_CONCAT(AVG(v0.c0))) AND (CAST(COUNT(*) AS NUMERIC)))) ISNULL);
SELECT ALL * FROM rt0 INNER JOIN v0 ON CAST((((rt0.c2, rt0.c4, rt0.c2, rt0.c3, rt0.c2))<=((rt0.c3, rt0.c1, rt0.c0, rt0.c0, rt0.c2))) AS BLOB);
SELECT * FROM rt0 INNER JOIN v0 ON CAST((((rt0.c2, rt0.c4, rt0.c2, rt0.c3, rt0.c2))<=((rt0.c3, rt0.c1, rt0.c0, rt0.c0, rt0.c2))) AS BLOB) WHERE (DATE(HEX(rt0.c1), rt0.c1, rt0.c1)) UNION ALL SELECT ALL * FROM rt0 INNER JOIN v0 ON CAST((((rt0.c2, rt0.c4, rt0.c2, rt0.c3, rt0.c2))<=((rt0.c3, rt0.c1, rt0.c0, rt0.c0, rt0.c2))) AS BLOB) WHERE ((NOT (DATE(HEX(rt0.c1), rt0.c1, rt0.c1)))) UNION ALL SELECT * FROM rt0 INNER JOIN v0 ON CAST((((rt0.c2, rt0.c4, rt0.c2, rt0.c3, rt0.c2))<=((rt0.c3, rt0.c1, rt0.c0, rt0.c0, rt0.c2))) AS BLOB) WHERE (((DATE(HEX(rt0.c1), rt0.c1, rt0.c1)) ISNULL));
SELECT ALL * FROM rt0 INNER JOIN v0 ON CAST((((rt0.c2, rt0.c4, rt0.c2, rt0.c3, rt0.c2))<=((rt0.c3, rt0.c1, rt0.c0, rt0.c0, rt0.c2))) AS BLOB);
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((~ ((+ (vt0.lid))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((~ ((+ (vt0.lid))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((~ ((+ (vt0.lid))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.lid, vt0.c1 FROM v0 FULL OUTER JOIN vt0 ON LOWER(DISTINCT ((((NULL)AND(vt0.c0)))OR(vt0.c1))) GROUP BY vt0.lid, vt0.c1;
SELECT ALL vt0.lid, vt0.c1 FROM v0 FULL OUTER JOIN vt0 ON LOWER(DISTINCT ((((NULL)AND(vt0.c0)))OR(vt0.c1))) WHERE (((vt0.lid) ISNULL) COLLATE NOCASE) GROUP BY vt0.lid, vt0.c1 UNION SELECT vt0.lid, vt0.c1 FROM v0 FULL OUTER JOIN vt0 ON LOWER(DISTINCT ((((NULL)AND(vt0.c0)))OR(vt0.c1))) WHERE ((NOT (((vt0.lid) ISNULL) COLLATE NOCASE))) GROUP BY vt0.lid, vt0.c1 UNION SELECT vt0.lid, vt0.c1 FROM v0 FULL OUTER JOIN vt0 ON LOWER(DISTINCT ((((NULL)AND(vt0.c0)))OR(vt0.c1))) WHERE (((((vt0.lid) ISNULL) COLLATE NOCASE) ISNULL)) GROUP BY vt0.lid, vt0.c1;
SELECT vt0.lid, vt0.c1 FROM v0 FULL OUTER JOIN vt0 ON LOWER(DISTINCT ((((NULL)AND(vt0.c0)))OR(vt0.c1))) GROUP BY vt0.lid, vt0.c1;
SELECT ALL vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c1;
SELECT vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c1 HAVING ((MIN(GROUP_CONCAT(MIN(vt0.lid)))) NOT NULL) UNION ALL SELECT vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c1 HAVING (NOT (((MIN(GROUP_CONCAT(MIN(vt0.lid)))) NOT NULL))) UNION ALL SELECT vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c1 HAVING ((((MIN(GROUP_CONCAT(MIN(vt0.lid)))) NOT NULL)) ISNULL);
SELECT vt0.c2 FROM vt0, rt0 CROSS JOIN v0 ON ((rt0.c0 COLLATE BINARY) BETWEEN (((v0.c0)>>(v0.c0))) AND (((((vt0.lid)AND(vt0.lid)))AND(vt0.lid))));
SELECT ALL vt0.c2 FROM vt0, rt0 CROSS JOIN v0 ON ((rt0.c0 COLLATE BINARY) BETWEEN (((v0.c0)>>(v0.c0))) AND (((((vt0.lid)AND(vt0.lid)))AND(vt0.lid)))) WHERE ((rt0.c0 IN ())) UNION ALL SELECT ALL vt0.c2 FROM vt0, rt0 CROSS JOIN v0 ON ((rt0.c0 COLLATE BINARY) BETWEEN (((v0.c0)>>(v0.c0))) AND (((((vt0.lid)AND(vt0.lid)))AND(vt0.lid)))) WHERE ((NOT ((rt0.c0 IN ())))) UNION ALL SELECT ALL vt0.c2 FROM vt0, rt0 CROSS JOIN v0 ON ((rt0.c0 COLLATE BINARY) BETWEEN (((v0.c0)>>(v0.c0))) AND (((((vt0.lid)AND(vt0.lid)))AND(vt0.lid)))) WHERE ((((rt0.c0 IN ())) ISNULL));
SELECT vt0.c2 FROM vt0, rt0 CROSS JOIN v0 ON ((rt0.c0 COLLATE BINARY) BETWEEN (((v0.c0)>>(v0.c0))) AND (((((vt0.lid)AND(vt0.lid)))AND(vt0.lid))));
SELECT DISTINCT vt0.c0, v0.c0, vt0.lid, vt0.c1, vt0.c2 FROM v0 INNER JOIN vt0 ON (((vt0.c1, vt0.lid, 1425957025)) BETWEEN ((CASE vt0.c1  WHEN NULL THEN v0.c0 END, vt0.lid COLLATE NOCASE, CAST(vt0.c2 AS INTEGER))) AND ((NULLIF(v0.c0, vt0.lid), ((vt0.c1) NOTNULL), CASE WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN vt0.lid WHEN vt0.c1 THEN vt0.c1 END)));
SELECT DISTINCT vt0.c0, v0.c0, vt0.lid, vt0.c1, vt0.c2 FROM v0 INNER JOIN vt0 ON (((vt0.c1, vt0.lid, 1425957025)) BETWEEN ((CASE vt0.c1  WHEN NULL THEN v0.c0 END, vt0.lid COLLATE NOCASE, CAST(vt0.c2 AS INTEGER))) AND ((NULLIF(v0.c0, vt0.lid), ((vt0.c1) NOTNULL), CASE WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN vt0.lid WHEN vt0.c1 THEN vt0.c1 END))) WHERE (CAST(vt0.c0 AS TEXT)) UNION SELECT DISTINCT vt0.c0, v0.c0, vt0.lid, vt0.c1, vt0.c2 FROM v0 INNER JOIN vt0 ON (((vt0.c1, vt0.lid, 1425957025)) BETWEEN ((CASE vt0.c1  WHEN NULL THEN v0.c0 END, vt0.lid COLLATE NOCASE, CAST(vt0.c2 AS INTEGER))) AND ((NULLIF(v0.c0, vt0.lid), ((vt0.c1) NOTNULL), CASE WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN vt0.lid WHEN vt0.c1 THEN vt0.c1 END))) WHERE ((NOT (CAST(vt0.c0 AS TEXT)))) UNION SELECT DISTINCT vt0.c0, v0.c0, vt0.lid, vt0.c1, vt0.c2 FROM v0 INNER JOIN vt0 ON (((vt0.c1, vt0.lid, 1425957025)) BETWEEN ((CASE vt0.c1  WHEN NULL THEN v0.c0 END, vt0.lid COLLATE NOCASE, CAST(vt0.c2 AS INTEGER))) AND ((NULLIF(v0.c0, vt0.lid), ((vt0.c1) NOTNULL), CASE WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN vt0.lid WHEN vt0.c1 THEN vt0.c1 END))) WHERE (((CAST(vt0.c0 AS TEXT)) ISNULL));
SELECT DISTINCT vt0.c0, v0.c0, vt0.lid, vt0.c1, vt0.c2 FROM v0 INNER JOIN vt0 ON (((vt0.c1, vt0.lid, 1425957025)) BETWEEN ((CASE vt0.c1  WHEN NULL THEN v0.c0 END, vt0.lid COLLATE NOCASE, CAST(vt0.c2 AS INTEGER))) AND ((NULLIF(v0.c0, vt0.lid), ((vt0.c1) NOTNULL), CASE WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN vt0.lid WHEN vt0.c1 THEN vt0.c1 END)));
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (UPPER(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (UPPER(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((UPPER(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c2 FROM rt0, v0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0, v0 GROUP BY rt0.c2 HAVING ((COUNT(rt0.c2)) IS FALSE) UNION ALL SELECT ALL rt0.c2 FROM rt0, v0 GROUP BY rt0.c2 HAVING (NOT (((COUNT(rt0.c2)) IS FALSE))) UNION ALL SELECT ALL rt0.c2 FROM rt0, v0 GROUP BY rt0.c2 HAVING ((((COUNT(rt0.c2)) IS FALSE)) ISNULL);
SELECT ALL rt0.c2 FROM rt0, v0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0, v0 GROUP BY rt0.c2 HAVING ((COUNT(rt0.c2)) IS FALSE) UNION ALL SELECT ALL rt0.c2 FROM rt0, v0 GROUP BY rt0.c2 HAVING (NOT (((COUNT(rt0.c2)) IS FALSE))) UNION ALL SELECT ALL rt0.c2 FROM rt0, v0 GROUP BY rt0.c2 HAVING ((((COUNT(rt0.c2)) IS FALSE)) ISNULL);
SELECT ALL rt0.c2 FROM rt0, v0 GROUP BY rt0.c2;
SELECT ALL vt0.c2, vt0.c0, v0.c0, vt0.lid, vt0.c1 FROM v0, vt0;
SELECT ALL vt0.c2, vt0.c0, v0.c0, vt0.lid, vt0.c1 FROM v0, vt0 WHERE (((CASE WHEN vt0.lid THEN vt0.lid WHEN vt0.c2 THEN NULL WHEN 0.30853911634734754 THEN vt0.c0 ELSE vt0.c0 END)*(((((((((vt0.c2)OR(vt0.lid)))AND(vt0.c2)))OR(vt0.c0)))AND(v0.c0))))) UNION ALL SELECT ALL vt0.c2, vt0.c0, v0.c0, vt0.lid, vt0.c1 FROM v0, vt0 WHERE ((NOT (((CASE WHEN vt0.lid THEN vt0.lid WHEN vt0.c2 THEN NULL WHEN 0.30853911634734754 THEN vt0.c0 ELSE vt0.c0 END)*(((((((((vt0.c2)OR(vt0.lid)))AND(vt0.c2)))OR(vt0.c0)))AND(v0.c0))))))) UNION ALL SELECT ALL vt0.c2, vt0.c0, v0.c0, vt0.lid, vt0.c1 FROM v0, vt0 WHERE (((((CASE WHEN vt0.lid THEN vt0.lid WHEN vt0.c2 THEN NULL WHEN 0.30853911634734754 THEN vt0.c0 ELSE vt0.c0 END)*(((((((((vt0.c2)OR(vt0.lid)))AND(vt0.c2)))OR(vt0.c0)))AND(v0.c0))))) ISNULL));
SELECT ALL vt0.c2, vt0.c0, v0.c0, vt0.lid, vt0.c1 FROM v0, vt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE ((+ (vt0.c0 COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT ((+ (vt0.c0 COLLATE RTRIM))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((((+ (vt0.c0 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT vt0.c1, rt0.c0, rt0.c2, vt0.lid FROM vt0, rt0, v0 GROUP BY vt0.c1, rt0.c0, rt0.c2, vt0.lid;
SELECT ALL vt0.c1, rt0.c0, rt0.c2, vt0.lid FROM vt0, rt0, v0 WHERE (((((rt0.c3))<>((vt0.c0))) IN ())) GROUP BY vt0.c1, rt0.c0, rt0.c2, vt0.lid UNION SELECT ALL vt0.c1, rt0.c0, rt0.c2, vt0.lid FROM vt0, rt0, v0 WHERE ((NOT (((((rt0.c3))<>((vt0.c0))) IN ())))) GROUP BY vt0.c1, rt0.c0, rt0.c2, vt0.lid UNION SELECT vt0.c1, rt0.c0, rt0.c2, vt0.lid FROM vt0, rt0, v0 WHERE (((((((rt0.c3))!=((vt0.c0))) IN ())) ISNULL)) GROUP BY vt0.c1, rt0.c0, rt0.c2, vt0.lid;
SELECT vt0.c1, rt0.c0, rt0.c2, vt0.lid FROM vt0, rt0, v0 GROUP BY vt0.c1, rt0.c0, rt0.c2, vt0.lid;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING TRIM(((v0.c0) ISNULL)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TRIM(((v0.c0) ISNULL)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TRIM(((v0.c0) ISNULL))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING TRIM(((v0.c0) ISNULL)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TRIM(((v0.c0) ISNULL)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TRIM(((v0.c0) ISNULL))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c2, rt0.c0, rt0.c1, vt0.lid FROM rt0, v0, vt0;
SELECT ALL vt0.c2, rt0.c0, rt0.c1, vt0.lid FROM rt0, v0, vt0 WHERE (((CASE vt0.c0  WHEN vt0.lid THEN rt0.c2 WHEN vt0.c1 THEN rt0.c0 WHEN vt0.c1 THEN rt0.c0 END)<(TRIM(DISTINCT rt0.c1, vt0.c1)))) UNION ALL SELECT vt0.c2, rt0.c0, rt0.c1, vt0.lid FROM rt0, v0, vt0 WHERE ((NOT (((CASE vt0.c0  WHEN vt0.lid THEN rt0.c2 WHEN vt0.c1 THEN rt0.c0 WHEN vt0.c1 THEN rt0.c0 END)<(TRIM(DISTINCT rt0.c1, vt0.c1)))))) UNION ALL SELECT ALL vt0.c2, rt0.c0, rt0.c1, vt0.lid FROM rt0, v0, vt0 WHERE (((((CASE vt0.c0  WHEN vt0.lid THEN rt0.c2 WHEN vt0.c1 THEN rt0.c0 WHEN vt0.c1 THEN rt0.c0 END)<(TRIM(DISTINCT rt0.c1, vt0.c1)))) ISNULL));
SELECT ALL vt0.c2, rt0.c0, rt0.c1, vt0.lid FROM rt0, v0, vt0;
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE ((((v0.c0)>(vt0.c1)) IN ((v0.c0 IN (vt0.c2, v0.c0))))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT ((((v0.c0)>(vt0.c1)) IN ((v0.c0 IN (vt0.c2, v0.c0))))))) UNION SELECT DISTINCT * FROM v0 NOT INDEXED, vt0 WHERE ((((((v0.c0)>(vt0.c1)) IN ((v0.c0 IN (vt0.c2, v0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT ALL vt0.lid, rt0.c4, rt0.c1 FROM rt0, vt0 GROUP BY vt0.lid, rt0.c4, rt0.c1;
SELECT ALL vt0.lid, rt0.c4, rt0.c1 FROM rt0, vt0 WHERE (CASE ((((((((rt0.c4)AND(rt0.c4)))OR(vt0.c2)))AND(rt0.c3)))OR(vt0.lid))  WHEN ((((((((vt0.c1)AND(rt0.c4)))OR(rt0.c3)))OR(rt0.c2)))OR(0.08597642098234637)) THEN vt0.c1 ELSE ((rt0.c1)GLOB(rt0.c0)) END) GROUP BY vt0.lid, rt0.c4, rt0.c1 UNION SELECT vt0.lid, rt0.c4, rt0.c1 FROM rt0, vt0 WHERE ((NOT (CASE ((((((((rt0.c4)AND(rt0.c4)))OR(vt0.c2)))AND(rt0.c3)))OR(vt0.lid))  WHEN ((((((((vt0.c1)AND(rt0.c4)))OR(rt0.c3)))OR(rt0.c2)))OR(0.08597642098234637)) THEN vt0.c1 ELSE ((rt0.c1)GLOB(rt0.c0)) END))) GROUP BY vt0.lid, rt0.c4, rt0.c1 UNION SELECT vt0.lid, rt0.c4, rt0.c1 FROM rt0, vt0 WHERE (((CASE ((((((((rt0.c4)AND(rt0.c4)))OR(vt0.c2)))AND(rt0.c3)))OR(vt0.lid))  WHEN ((((((((vt0.c1)AND(rt0.c4)))OR(rt0.c3)))OR(rt0.c2)))OR(0.08597642098234637)) THEN vt0.c1 ELSE ((rt0.c1)GLOB(rt0.c0)) END) ISNULL)) GROUP BY vt0.lid, rt0.c4, rt0.c1;
SELECT ALL vt0.lid, rt0.c4, rt0.c1 FROM rt0, vt0 GROUP BY vt0.lid, rt0.c4, rt0.c1;
SELECT v0.c0, rt0.c2, rt0.c0, rt0.c1 FROM v0 RIGHT OUTER JOIN rt0 ON (((rt0.c1)) NOT BETWEEN ((CAST(rt0.c3 AS NUMERIC))) AND (((v0.c0 IN ())))) GROUP BY v0.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT v0.c0, rt0.c2, rt0.c0, rt0.c1 FROM v0 RIGHT OUTER JOIN rt0 ON (((rt0.c1)) NOT BETWEEN ((CAST(rt0.c3 AS NUMERIC))) AND (((v0.c0 IN ())))) GROUP BY v0.c0, rt0.c2, rt0.c0, rt0.c1 HAVING (((GROUP_CONCAT(rt0.c4))) NOT BETWEEN ((((rt0.c0)IS(SUM(rt0.c1))))) AND ((CAST(COUNT(rt0.c3) AS REAL)))) UNION ALL SELECT v0.c0, rt0.c2, rt0.c0, rt0.c1 FROM v0 RIGHT OUTER JOIN rt0 ON (((rt0.c1)) NOT BETWEEN ((CAST(rt0.c3 AS NUMERIC))) AND (((v0.c0 IN ())))) GROUP BY v0.c0, rt0.c2, rt0.c0, rt0.c1 HAVING (NOT ((((GROUP_CONCAT(rt0.c4))) NOT BETWEEN ((((rt0.c0)IS(SUM(rt0.c1))))) AND ((CAST(COUNT(rt0.c3) AS REAL)))))) UNION ALL SELECT v0.c0, rt0.c2, rt0.c0, rt0.c1 FROM v0 RIGHT OUTER JOIN rt0 ON (((rt0.c1)) NOT BETWEEN ((CAST(rt0.c3 AS NUMERIC))) AND (((v0.c0 IN ())))) GROUP BY v0.c0, rt0.c2, rt0.c0, rt0.c1 HAVING (((((GROUP_CONCAT(rt0.c4))) NOT BETWEEN ((((rt0.c0)IS(SUM(rt0.c1))))) AND ((CAST(COUNT(rt0.c3) AS REAL))))) ISNULL);
SELECT v0.c0, rt0.c2, rt0.c0, rt0.c1 FROM v0 RIGHT OUTER JOIN rt0 ON (((rt0.c1)) NOT BETWEEN ((CAST(rt0.c3 AS NUMERIC))) AND (((v0.c0 IN ())))) GROUP BY v0.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT v0.c0, rt0.c2, rt0.c0, rt0.c1 FROM v0 RIGHT OUTER JOIN rt0 ON (((rt0.c1)) NOT BETWEEN ((CAST(rt0.c3 AS NUMERIC))) AND (((v0.c0 IN ())))) GROUP BY v0.c0, rt0.c2, rt0.c0, rt0.c1 HAVING (((GROUP_CONCAT(rt0.c4))) NOT BETWEEN ((((rt0.c0)IS(SUM(rt0.c1))))) AND ((CAST(COUNT(rt0.c3) AS REAL)))) UNION ALL SELECT v0.c0, rt0.c2, rt0.c0, rt0.c1 FROM v0 RIGHT OUTER JOIN rt0 ON (((rt0.c1)) NOT BETWEEN ((CAST(rt0.c3 AS NUMERIC))) AND (((v0.c0 IN ())))) GROUP BY v0.c0, rt0.c2, rt0.c0, rt0.c1 HAVING (NOT ((((GROUP_CONCAT(rt0.c4))) NOT BETWEEN ((((rt0.c0)IS(SUM(rt0.c1))))) AND ((CAST(COUNT(rt0.c3) AS REAL)))))) UNION ALL SELECT v0.c0, rt0.c2, rt0.c0, rt0.c1 FROM v0 RIGHT OUTER JOIN rt0 ON (((rt0.c1)) NOT BETWEEN ((CAST(rt0.c3 AS NUMERIC))) AND (((v0.c0 IN ())))) GROUP BY v0.c0, rt0.c2, rt0.c0, rt0.c1 HAVING (((((GROUP_CONCAT(rt0.c4))) NOT BETWEEN ((((rt0.c0)IS(SUM(rt0.c1))))) AND ((CAST(COUNT(rt0.c3) AS REAL))))) ISNULL);
SELECT v0.c0, rt0.c2, rt0.c0, rt0.c1 FROM v0 RIGHT OUTER JOIN rt0 ON (((rt0.c1)) NOT BETWEEN ((CAST(rt0.c3 AS NUMERIC))) AND (((v0.c0 IN ())))) GROUP BY v0.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT ALL vt0.lid FROM rt0, v0, vt0;
SELECT ALL vt0.lid FROM rt0, v0, vt0 WHERE ((((rt0.c1)>(vt0.c2)) IN ())) UNION ALL SELECT vt0.lid FROM rt0, v0, vt0 WHERE ((NOT ((((rt0.c1)>(vt0.c2)) IN ())))) UNION ALL SELECT ALL vt0.lid FROM rt0, v0, vt0 WHERE ((((((rt0.c1)>(vt0.c2)) IN ())) ISNULL));
SELECT ALL vt0.lid FROM rt0, v0, vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c4 END) ISNULL)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((CASE WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c4 END) ISNULL)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((CASE WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c4 END) ISNULL)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c3;
SELECT rt0.c0, rt0.c3 FROM rt0 WHERE (NULL COLLATE RTRIM) GROUP BY rt0.c0, rt0.c3 UNION SELECT rt0.c0, rt0.c3 FROM rt0 WHERE ((NOT (NULL COLLATE RTRIM))) GROUP BY rt0.c0, rt0.c3 UNION SELECT ALL rt0.c0, rt0.c3 FROM rt0 WHERE (((NULL COLLATE RTRIM) ISNULL)) GROUP BY rt0.c0, rt0.c3;
SELECT ALL rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c3;
SELECT ALL rt0.c0, rt0.c1, rt0.c2, rt0.c4 FROM v0 NATURAL JOIN rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c4;
SELECT rt0.c0, rt0.c1, rt0.c2, rt0.c4 FROM v0 NATURAL JOIN rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c4 HAVING SUM(TOTAL(rt0.c4)) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2, rt0.c4 FROM v0 NATURAL JOIN rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c4 HAVING (NOT (SUM(TOTAL(rt0.c4)))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2, rt0.c4 FROM v0 NATURAL JOIN rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c4 HAVING ((SUM(TOTAL(rt0.c4))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (((CAST(rt0.c2 AS REAL))|(((rt0.c1)==('0.4104467977869495'))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((CAST(rt0.c2 AS REAL))|(((rt0.c1)=('0.4104467977869495'))))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((CAST(rt0.c2 AS REAL))|(((rt0.c1)=('0.4104467977869495'))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (-1144558977) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (-1144558977))) UNION SELECT DISTINCT * FROM v0 WHERE (((-1144558977) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL v0.c0, rt0.c4 FROM vt0, rt0, v0 GROUP BY v0.c0, rt0.c4;
SELECT ALL v0.c0, rt0.c4 FROM vt0, rt0, v0 WHERE ((+ ((((vt0.lid))>=((vt0.lid)))))) GROUP BY v0.c0, rt0.c4 UNION SELECT v0.c0, rt0.c4 FROM vt0, rt0, v0 WHERE ((NOT ((+ ((((vt0.lid))>=((vt0.lid)))))))) GROUP BY v0.c0, rt0.c4 UNION SELECT v0.c0, rt0.c4 FROM vt0, rt0, v0 WHERE ((((+ ((((vt0.lid))>=((vt0.lid)))))) ISNULL)) GROUP BY v0.c0, rt0.c4;
SELECT ALL v0.c0, rt0.c4 FROM vt0, rt0, v0 GROUP BY v0.c0, rt0.c4;
SELECT ALL vt0.c0, vt0.c2, vt0.lid FROM v0, vt0 GROUP BY vt0.c0, vt0.c2, vt0.lid;
SELECT ALL vt0.c0, vt0.c2, vt0.lid FROM v0, vt0 GROUP BY vt0.c0, vt0.c2, vt0.lid HAVING ((COUNT('0.025773978961176947') COLLATE NOCASE) NOT BETWEEN (((vt0.lid)>>(COUNT(*)))) AND (((v0.c0) BETWEEN (vt0.c1) AND (MAX(NULL))))) UNION ALL SELECT ALL vt0.c0, vt0.c2, vt0.lid FROM v0, vt0 GROUP BY vt0.c0, vt0.c2, vt0.lid HAVING (NOT (((COUNT('0.025773978961176947') COLLATE NOCASE) NOT BETWEEN (((vt0.lid)>>(COUNT(*)))) AND (((v0.c0) BETWEEN (vt0.c1) AND (MAX(NULL))))))) UNION ALL SELECT vt0.c0, vt0.c2, vt0.lid FROM v0, vt0 GROUP BY vt0.c0, vt0.c2, vt0.lid HAVING ((((COUNT('0.025773978961176947') COLLATE NOCASE) NOT BETWEEN (((vt0.lid)>>(COUNT(*)))) AND (((v0.c0) BETWEEN (vt0.c1) AND (MAX(NULL)))))) ISNULL);
SELECT ALL vt0.c0, vt0.c2, vt0.lid FROM v0, vt0 GROUP BY vt0.c0, vt0.c2, vt0.lid;
SELECT ALL vt0.c0, vt0.c2, vt0.lid FROM v0, vt0 GROUP BY vt0.c0, vt0.c2, vt0.lid HAVING ((COUNT('0.025773978961176947') COLLATE NOCASE) NOT BETWEEN (((vt0.lid)>>(COUNT(*)))) AND (((v0.c0) BETWEEN (vt0.c1) AND (MAX(NULL))))) UNION ALL SELECT ALL vt0.c0, vt0.c2, vt0.lid FROM v0, vt0 GROUP BY vt0.c0, vt0.c2, vt0.lid HAVING (NOT (((COUNT('0.025773978961176947') COLLATE NOCASE) NOT BETWEEN (((vt0.lid)>>(COUNT(*)))) AND (((v0.c0) BETWEEN (vt0.c1) AND (MAX(NULL))))))) UNION ALL SELECT vt0.c0, vt0.c2, vt0.lid FROM v0, vt0 GROUP BY vt0.c0, vt0.c2, vt0.lid HAVING ((((COUNT('0.025773978961176947') COLLATE NOCASE) NOT BETWEEN (((vt0.lid)>>(COUNT(*)))) AND (((v0.c0) BETWEEN (vt0.c1) AND (MAX(NULL)))))) ISNULL);
SELECT ALL vt0.c0, vt0.c2, vt0.lid FROM v0, vt0 GROUP BY vt0.c0, vt0.c2, vt0.lid;
SELECT rt0.c3, rt0.c4, rt0.c1 FROM rt0 RIGHT OUTER JOIN v0 ON '';
SELECT rt0.c3, rt0.c4, rt0.c1 FROM rt0 RIGHT OUTER JOIN v0 ON '' WHERE (CASE x''  WHEN CASE WHEN rt0.c3 THEN rt0.c3 END THEN rt0.c0 WHEN CASE rt0.c2  WHEN x'' THEN v0.c0 END THEN (rt0.c3 IN (rt0.c1)) WHEN ((v0.c0) NOTNULL) THEN (((rt0.c0)) NOT BETWEEN (('j	t[p쥒0z*')) AND ((v0.c0))) WHEN ABS(DISTINCT v0.c0) THEN (rt0.c3 IN ()) WHEN rt0.c1 THEN '' ELSE ((rt0.c1) BETWEEN (rt0.c3) AND (x'c2a558de')) END) UNION ALL SELECT ALL rt0.c3, rt0.c4, rt0.c1 FROM rt0 RIGHT OUTER JOIN v0 ON '' WHERE ((NOT (CASE x''  WHEN CASE WHEN rt0.c3 THEN rt0.c3 END THEN rt0.c0 WHEN CASE rt0.c2  WHEN x'' THEN v0.c0 END THEN (rt0.c3 IN (rt0.c1)) WHEN ((v0.c0) NOTNULL) THEN (((rt0.c0)) NOT BETWEEN (('j	t[p쥒0z*')) AND ((v0.c0))) WHEN ABS(DISTINCT v0.c0) THEN (rt0.c3 IN ()) WHEN rt0.c1 THEN '' ELSE ((rt0.c1) BETWEEN (rt0.c3) AND (x'c2a558de')) END))) UNION ALL SELECT ALL rt0.c3, rt0.c4, rt0.c1 FROM rt0 RIGHT OUTER JOIN v0 ON '' WHERE (((CASE x''  WHEN CASE WHEN rt0.c3 THEN rt0.c3 END THEN rt0.c0 WHEN CASE rt0.c2  WHEN x'' THEN v0.c0 END THEN (rt0.c3 IN (rt0.c1)) WHEN ((v0.c0) NOTNULL) THEN (((rt0.c0)) NOT BETWEEN (('j	t[p쥒0z*')) AND ((v0.c0))) WHEN ABS(DISTINCT v0.c0) THEN (rt0.c3 IN ()) WHEN rt0.c1 THEN '' ELSE ((rt0.c1) BETWEEN (rt0.c3) AND (x'c2a558de')) END) ISNULL));
SELECT rt0.c3, rt0.c4, rt0.c1 FROM rt0 RIGHT OUTER JOIN v0 ON '';
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (((CASE WHEN vt0.lid THEN rt0.c2 ELSE rt0.c3 END) NOTNULL)) UNION SELECT DISTINCT * FROM rt0 NOT INDEXED, vt0 WHERE ((NOT (((CASE WHEN vt0.lid THEN rt0.c2 ELSE rt0.c3 END) NOTNULL)))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((((CASE WHEN vt0.lid THEN rt0.c2 ELSE rt0.c3 END) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0, v0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0, v0 WHERE (((vt0.c1 COLLATE BINARY)>=(CAST(vt0.lid AS TEXT)))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0, v0 WHERE ((NOT (((vt0.c1 COLLATE BINARY)>=(CAST(vt0.lid AS TEXT)))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0, v0 WHERE (((((vt0.c1 COLLATE BINARY)>=(CAST(vt0.lid AS TEXT)))) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0, v0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.lid, rt0.c0 FROM rt0, v0, vt0 GROUP BY vt0.lid, rt0.c0;
SELECT vt0.lid, rt0.c0 FROM rt0, v0, vt0 GROUP BY vt0.lid, rt0.c0 HAVING NULL UNION ALL SELECT vt0.lid, rt0.c0 FROM rt0, v0, vt0 GROUP BY vt0.lid, rt0.c0 HAVING (NOT (NULL)) UNION ALL SELECT ALL vt0.lid, rt0.c0 FROM rt0, v0, vt0 GROUP BY vt0.lid, rt0.c0 HAVING ((NULL) ISNULL);
SELECT ALL vt0.lid, rt0.c0 FROM rt0, v0, vt0 GROUP BY vt0.lid, rt0.c0;
SELECT vt0.lid, rt0.c0 FROM rt0, v0, vt0 GROUP BY vt0.lid, rt0.c0 HAVING NULL UNION ALL SELECT vt0.lid, rt0.c0 FROM rt0, v0, vt0 GROUP BY vt0.lid, rt0.c0 HAVING (NOT (NULL)) UNION ALL SELECT ALL vt0.lid, rt0.c0 FROM rt0, v0, vt0 GROUP BY vt0.lid, rt0.c0 HAVING ((NULL) ISNULL);
SELECT ALL vt0.lid, rt0.c0 FROM rt0, v0, vt0 GROUP BY vt0.lid, rt0.c0;
SELECT MAX((CASE '1481638439'  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END IN ())) FROM vt0, v0;
SELECT ALL * FROM v0, rt0;
SELECT * FROM v0, rt0 WHERE (x'') UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((NOT (x''))) UNION ALL SELECT * FROM v0, rt0 WHERE (((x'') ISNULL));
SELECT ALL * FROM v0, rt0;
SELECT DISTINCT * FROM vt0, v0, rt0;
SELECT DISTINCT * FROM vt0, v0, rt0 WHERE (CASE ((((((((rt0.c0)AND(rt0.c4)))OR(vt0.c0)))OR(rt0.c2)))OR(rt0.c0))  WHEN (((vt0.c2)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))) THEN ((vt0.c2) NOTNULL) END) UNION SELECT DISTINCT * FROM vt0, v0, rt0 WHERE ((NOT (CASE ((((((((rt0.c0)AND(rt0.c4)))OR(vt0.c0)))OR(rt0.c2)))OR(rt0.c0))  WHEN (((vt0.c2)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))) THEN ((vt0.c2) NOTNULL) END))) UNION SELECT DISTINCT * FROM vt0, v0, rt0 WHERE (((CASE ((((((((rt0.c0)AND(rt0.c4)))OR(vt0.c0)))OR(rt0.c2)))OR(rt0.c0))  WHEN (((vt0.c2)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))) THEN ((vt0.c2) NOTNULL) END) ISNULL));
SELECT DISTINCT * FROM vt0, v0, rt0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ('v?p솵L+&B') GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ('v?p솵L+&B'))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((('v?p솵L+&B') ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL vt0.lid FROM rt0, vt0 GROUP BY vt0.lid;
SELECT vt0.lid FROM rt0, vt0 GROUP BY vt0.lid HAVING MIN(CAST(vt0.lid AS REAL)) UNION ALL SELECT ALL vt0.lid FROM rt0, vt0 GROUP BY vt0.lid HAVING (NOT (MIN(CAST(vt0.lid AS REAL)))) UNION ALL SELECT ALL vt0.lid FROM rt0, vt0 GROUP BY vt0.lid HAVING ((MIN(CAST(vt0.lid AS REAL))) ISNULL);
SELECT ALL vt0.lid FROM rt0, vt0 GROUP BY vt0.lid;
SELECT vt0.lid FROM rt0, vt0 GROUP BY vt0.lid HAVING MIN(CAST(vt0.lid AS REAL)) UNION ALL SELECT ALL vt0.lid FROM rt0, vt0 GROUP BY vt0.lid HAVING (NOT (MIN(CAST(vt0.lid AS REAL)))) UNION ALL SELECT ALL vt0.lid FROM rt0, vt0 GROUP BY vt0.lid HAVING ((MIN(CAST(vt0.lid AS REAL))) ISNULL);
SELECT ALL vt0.lid FROM rt0, vt0 GROUP BY vt0.lid;
SELECT ALL rt0.c1, v0.c0, vt0.c0, rt0.c3, vt0.c1, vt0.c2, rt0.c4 FROM vt0, v0 NATURAL JOIN rt0;
SELECT rt0.c1, v0.c0, vt0.c0, rt0.c3, vt0.c1, vt0.c2, rt0.c4 FROM vt0, v0 NATURAL JOIN rt0 WHERE (CAST(((rt0.c2)<<(-1545319155)) AS BLOB)) ORDER BY ((((rt0.c0)+(v0.c0)))LIKE((- (rt0.c4)))), ((((rt0.c3) IS FALSE))<(vt0.lid COLLATE NOCASE)) ASC  NULLS LAST, NULL DESC  NULLS LAST;
SELECT ALL rt0.c1, v0.c0, vt0.c0, rt0.c3, vt0.c1, vt0.c2, rt0.c4 FROM vt0, v0 NATURAL JOIN rt0 WHERE ((NOT (CAST(((rt0.c2)<<(-1545319155)) AS BLOB)))) ORDER BY ((((rt0.c0)+(v0.c0)))LIKE((- (rt0.c4)))), ((((rt0.c3) IS FALSE))<(vt0.lid COLLATE NOCASE)) ASC  NULLS LAST, NULL DESC  NULLS LAST;
SELECT ALL rt0.c1, v0.c0, vt0.c0, rt0.c3, vt0.c1, vt0.c2, rt0.c4 FROM vt0, v0 NATURAL JOIN rt0 WHERE (((CAST(((rt0.c2)<<(-1545319155)) AS BLOB)) ISNULL)) ORDER BY ((((rt0.c0)+(v0.c0)))LIKE((- (rt0.c4)))), ((((rt0.c3) IS FALSE))<(vt0.lid COLLATE NOCASE)) ASC  NULLS LAST, NULL DESC  NULLS LAST;
SELECT ALL rt0.c1, v0.c0, vt0.c0, rt0.c3, vt0.c1, vt0.c2, rt0.c4 FROM vt0, v0 NATURAL JOIN rt0;
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE (NULL) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT ALL rt0.c3, rt0.c2, vt0.c0, vt0.c1, vt0.lid, rt0.c0, v0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c3, rt0.c2, vt0.c0, vt0.c1, vt0.lid, rt0.c0, v0.c0;
SELECT rt0.c3, rt0.c2, vt0.c0, vt0.c1, vt0.lid, rt0.c0, v0.c0 FROM rt0, vt0, v0 WHERE (CASE WHEN CAST(rt0.c0 AS INTEGER) THEN CASE WHEN rt0.c3 THEN vt0.c1 END WHEN (((v0.c0)) BETWEEN ((vt0.lid)) AND ((rt0.c2))) THEN json_array_length(rt0.c1) WHEN (((0.6471701288469598, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, rt0.c2, vt0.c0)) AND ((vt0.c2, 'K''0<', v0.c0))) THEN CASE rt0.c0  WHEN rt0.c4 THEN vt0.c1 END END) GROUP BY rt0.c3, rt0.c2, vt0.c0, vt0.c1, vt0.lid, rt0.c0, v0.c0 UNION SELECT ALL rt0.c3, rt0.c2, vt0.c0, vt0.c1, vt0.lid, rt0.c0, v0.c0 FROM rt0, vt0, v0 WHERE ((NOT (CASE WHEN CAST(rt0.c0 AS INTEGER) THEN CASE WHEN rt0.c3 THEN vt0.c1 END WHEN (((v0.c0)) BETWEEN ((vt0.lid)) AND ((rt0.c2))) THEN json_array_length(rt0.c1) WHEN (((0.6471701288469598, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, rt0.c2, vt0.c0)) AND ((vt0.c2, 'K''0<', v0.c0))) THEN CASE rt0.c0  WHEN rt0.c4 THEN vt0.c1 END END))) GROUP BY rt0.c3, rt0.c2, vt0.c0, vt0.c1, vt0.lid, rt0.c0, v0.c0 UNION SELECT rt0.c3, rt0.c2, vt0.c0, vt0.c1, vt0.lid, rt0.c0, v0.c0 FROM rt0, vt0, v0 WHERE (((CASE WHEN CAST(rt0.c0 AS INTEGER) THEN CASE WHEN rt0.c3 THEN vt0.c1 END WHEN (((v0.c0)) BETWEEN ((vt0.lid)) AND ((rt0.c2))) THEN json_array_length(rt0.c1) WHEN (((0.6471701288469598, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, rt0.c2, vt0.c0)) AND ((vt0.c2, 'K''0<', v0.c0))) THEN CASE rt0.c0  WHEN rt0.c4 THEN vt0.c1 END END) ISNULL)) GROUP BY rt0.c3, rt0.c2, vt0.c0, vt0.c1, vt0.lid, rt0.c0, v0.c0;
SELECT ALL rt0.c3, rt0.c2, vt0.c0, vt0.c1, vt0.lid, rt0.c0, v0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c3, rt0.c2, vt0.c0, vt0.c1, vt0.lid, rt0.c0, v0.c0;
SELECT rt0.c1, rt0.c2, rt0.c3, vt0.c2, vt0.c1, rt0.c4, vt0.lid, v0.c0, vt0.c0 FROM rt0, vt0 CROSS JOIN v0 ON ((((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c4))) NOTNULL) GROUP BY rt0.c1, rt0.c2, rt0.c3, vt0.c2, vt0.c1, rt0.c4, vt0.lid, v0.c0, vt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c3, vt0.c2, vt0.c1, rt0.c4, vt0.lid, v0.c0, vt0.c0 FROM rt0, vt0 CROSS JOIN v0 ON ((((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c4))) NOTNULL) GROUP BY rt0.c1, rt0.c2, rt0.c3, vt0.c2, vt0.c1, rt0.c4, vt0.lid, v0.c0, vt0.c0 HAVING (MIN(v0.c0) IN ()) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c3, vt0.c2, vt0.c1, rt0.c4, vt0.lid, v0.c0, vt0.c0 FROM rt0, vt0 CROSS JOIN v0 ON ((((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c4))) NOTNULL) GROUP BY rt0.c1, rt0.c2, rt0.c3, vt0.c2, vt0.c1, rt0.c4, vt0.lid, v0.c0, vt0.c0 HAVING (NOT ((MIN(v0.c0) IN ()))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c3, vt0.c2, vt0.c1, rt0.c4, vt0.lid, v0.c0, vt0.c0 FROM rt0, vt0 CROSS JOIN v0 ON ((((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c4))) NOTNULL) GROUP BY rt0.c1, rt0.c2, rt0.c3, vt0.c2, vt0.c1, rt0.c4, vt0.lid, v0.c0, vt0.c0 HAVING (((MIN(v0.c0) IN ())) ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c3, vt0.c2, vt0.c1, rt0.c4, vt0.lid, v0.c0, vt0.c0 FROM rt0, vt0 CROSS JOIN v0 ON ((((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c4))) NOTNULL) GROUP BY rt0.c1, rt0.c2, rt0.c3, vt0.c2, vt0.c1, rt0.c4, vt0.lid, v0.c0, vt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c3, vt0.c2, vt0.c1, rt0.c4, vt0.lid, v0.c0, vt0.c0 FROM rt0, vt0 CROSS JOIN v0 ON ((((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c4))) NOTNULL) GROUP BY rt0.c1, rt0.c2, rt0.c3, vt0.c2, vt0.c1, rt0.c4, vt0.lid, v0.c0, vt0.c0 HAVING (MIN(v0.c0) IN ()) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c3, vt0.c2, vt0.c1, rt0.c4, vt0.lid, v0.c0, vt0.c0 FROM rt0, vt0 CROSS JOIN v0 ON ((((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c4))) NOTNULL) GROUP BY rt0.c1, rt0.c2, rt0.c3, vt0.c2, vt0.c1, rt0.c4, vt0.lid, v0.c0, vt0.c0 HAVING (NOT ((MIN(v0.c0) IN ()))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c3, vt0.c2, vt0.c1, rt0.c4, vt0.lid, v0.c0, vt0.c0 FROM rt0, vt0 CROSS JOIN v0 ON ((((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c4))) NOTNULL) GROUP BY rt0.c1, rt0.c2, rt0.c3, vt0.c2, vt0.c1, rt0.c4, vt0.lid, v0.c0, vt0.c0 HAVING (((MIN(v0.c0) IN ())) ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c3, vt0.c2, vt0.c1, rt0.c4, vt0.lid, v0.c0, vt0.c0 FROM rt0, vt0 CROSS JOIN v0 ON ((((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c4))) NOTNULL) GROUP BY rt0.c1, rt0.c2, rt0.c3, vt0.c2, vt0.c1, rt0.c4, vt0.lid, v0.c0, vt0.c0;
SELECT rt0.c4, rt0.c3, rt0.c1 FROM v0 INNER JOIN rt0 ON (((NULLIF(rt0.c3, rt0.c2), (- (v0.c0)), CASE WHEN rt0.c1 THEN rt0.c3 END))<((CASE WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 END, ((rt0.c1) NOT BETWEEN (rt0.c0) AND (v0.c0)), CAST(v0.c0 AS NUMERIC))));
SELECT ALL rt0.c4, rt0.c3, rt0.c1 FROM v0 INNER JOIN rt0 ON (((NULLIF(rt0.c3, rt0.c2), (- (v0.c0)), CASE WHEN rt0.c1 THEN rt0.c3 END))<((CASE WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 END, ((rt0.c1) NOT BETWEEN (rt0.c0) AND (v0.c0)), CAST(v0.c0 AS NUMERIC)))) WHERE (-1.950868088E9) UNION ALL SELECT ALL rt0.c4, rt0.c3, rt0.c1 FROM v0 INNER JOIN rt0 ON (((NULLIF(rt0.c3, rt0.c2), (- (v0.c0)), CASE WHEN rt0.c1 THEN rt0.c3 END))<((CASE WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 END, ((rt0.c1) NOT BETWEEN (rt0.c0) AND (v0.c0)), CAST(v0.c0 AS NUMERIC)))) WHERE ((NOT (-1.950868088E9))) UNION ALL SELECT rt0.c4, rt0.c3, rt0.c1 FROM v0 INNER JOIN rt0 ON (((NULLIF(rt0.c3, rt0.c2), (- (v0.c0)), CASE WHEN rt0.c1 THEN rt0.c3 END))<((CASE WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 END, ((rt0.c1) NOT BETWEEN (rt0.c0) AND (v0.c0)), CAST(v0.c0 AS NUMERIC)))) WHERE (((-1.950868088E9) ISNULL));
SELECT rt0.c4, rt0.c3, rt0.c1 FROM v0 INNER JOIN rt0 ON (((NULLIF(rt0.c3, rt0.c2), (- (v0.c0)), CASE WHEN rt0.c1 THEN rt0.c3 END))<((CASE WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 END, ((rt0.c1) NOT BETWEEN (rt0.c0) AND (v0.c0)), CAST(v0.c0 AS NUMERIC))));
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (((((((rt0.c3) BETWEEN (v0.c0) AND (v0.c0)))OR(rt0.c4 COLLATE BINARY)))AND(CAST(rt0.c1 AS TEXT)))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (((((((rt0.c3) BETWEEN (v0.c0) AND (v0.c0)))OR(rt0.c4 COLLATE BINARY)))AND(CAST(rt0.c1 AS TEXT)))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((((((((rt0.c3) BETWEEN (v0.c0) AND (v0.c0)))OR(rt0.c4 COLLATE BINARY)))AND(CAST(rt0.c1 AS TEXT)))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT ALL vt0.c2, rt0.c0, rt0.c3, rt0.c2, rt0.c4, vt0.lid, vt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY vt0.c2, rt0.c0, rt0.c3, rt0.c2, rt0.c4, vt0.lid, vt0.c1, vt0.c0;
SELECT vt0.c2, rt0.c0, rt0.c3, rt0.c2, rt0.c4, vt0.lid, vt0.c1, vt0.c0 FROM rt0, vt0 WHERE ((((vt0.c0)) BETWEEN ((((rt0.c0) NOTNULL))) AND ((-1.144558977E9)))) GROUP BY vt0.c2, rt0.c0, rt0.c3, rt0.c2, rt0.c4, vt0.lid, vt0.c1, vt0.c0 UNION SELECT ALL vt0.c2, rt0.c0, rt0.c3, rt0.c2, rt0.c4, vt0.lid, vt0.c1, vt0.c0 FROM rt0, vt0 WHERE ((NOT ((((vt0.c0)) BETWEEN ((((rt0.c0) NOTNULL))) AND ((-1.144558977E9)))))) GROUP BY vt0.c2, rt0.c0, rt0.c3, rt0.c2, rt0.c4, vt0.lid, vt0.c1, vt0.c0 UNION SELECT ALL vt0.c2, rt0.c0, rt0.c3, rt0.c2, rt0.c4, vt0.lid, vt0.c1, vt0.c0 FROM rt0, vt0 WHERE ((((((vt0.c0)) BETWEEN ((((rt0.c0) NOTNULL))) AND ((-1.144558977E9)))) ISNULL)) GROUP BY vt0.c2, rt0.c0, rt0.c3, rt0.c2, rt0.c4, vt0.lid, vt0.c1, vt0.c0;
SELECT ALL vt0.c2, rt0.c0, rt0.c3, rt0.c2, rt0.c4, vt0.lid, vt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY vt0.c2, rt0.c0, rt0.c3, rt0.c2, rt0.c4, vt0.lid, vt0.c1, vt0.c0;
SELECT ALL vt0.lid, v0.c0 FROM v0, rt0, vt0 GROUP BY vt0.lid, v0.c0;
SELECT vt0.lid, v0.c0 FROM v0, rt0, vt0 GROUP BY vt0.lid, v0.c0 HAVING SUM(COUNT(*)) UNION ALL SELECT ALL vt0.lid, v0.c0 FROM v0, rt0, vt0 GROUP BY vt0.lid, v0.c0 HAVING (NOT (SUM(COUNT(*)))) UNION ALL SELECT ALL vt0.lid, v0.c0 FROM v0, rt0, vt0 GROUP BY vt0.lid, v0.c0 HAVING ((SUM(COUNT(*))) ISNULL);
SELECT * FROM vt0, v0;
SELECT ALL * FROM vt0, v0 WHERE (json_insert(TRIM(DISTINCT vt0.c1, vt0.c2), ((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2)), CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c2 END)) UNION ALL SELECT * FROM vt0, v0 WHERE ((NOT (json_insert(TRIM(DISTINCT vt0.c1, vt0.c2), ((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2)), CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c2 END)))) UNION ALL SELECT * FROM vt0, v0 WHERE (((json_insert(TRIM(DISTINCT vt0.c1, vt0.c2), ((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2)), CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c2 END)) ISNULL));
SELECT * FROM vt0, v0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (CAST(CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN 0.11407268574176699 WHEN rt0.c3 THEN 0.6299794521014459 ELSE rt0.c3 END AS BLOB)) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (CAST(CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN 0.11407268574176699 WHEN rt0.c3 THEN 0.6299794521014459 ELSE rt0.c3 END AS BLOB)))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((CAST(CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN 0.11407268574176699 WHEN rt0.c3 THEN 0.6299794521014459 ELSE rt0.c3 END AS BLOB)) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT vt0.c2, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c1, vt0.c0;
SELECT ALL vt0.c2, vt0.c1, vt0.c0 FROM vt0 WHERE (CAST(((vt0.c2) IS TRUE) AS BLOB)) GROUP BY vt0.c2, vt0.c1, vt0.c0 UNION SELECT ALL vt0.c2, vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (CAST(((vt0.c2) IS TRUE) AS BLOB)))) GROUP BY vt0.c2, vt0.c1, vt0.c0 UNION SELECT ALL vt0.c2, vt0.c1, vt0.c0 FROM vt0 WHERE (((CAST(((vt0.c2) IS TRUE) AS BLOB)) ISNULL)) GROUP BY vt0.c2, vt0.c1, vt0.c0;
SELECT vt0.c2, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c1, vt0.c0;
SELECT rt0.c0, rt0.c4, rt0.c1, vt0.c0, vt0.c2, rt0.c3 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c4, rt0.c1, vt0.c0, vt0.c2, rt0.c3;
SELECT ALL rt0.c0, rt0.c4, rt0.c1, vt0.c0, vt0.c2, rt0.c3 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c4, rt0.c1, vt0.c0, vt0.c2, rt0.c3 HAVING AVG(SUM(SUM(rt0.c4))) UNION ALL SELECT rt0.c0, rt0.c4, rt0.c1, vt0.c0, vt0.c2, rt0.c3 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c4, rt0.c1, vt0.c0, vt0.c2, rt0.c3 HAVING (NOT (AVG(SUM(SUM(rt0.c4))))) UNION ALL SELECT rt0.c0, rt0.c4, rt0.c1, vt0.c0, vt0.c2, rt0.c3 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c4, rt0.c1, vt0.c0, vt0.c2, rt0.c3 HAVING ((AVG(SUM(SUM(rt0.c4)))) ISNULL);
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON NULL CROSS JOIN vt0 ON ((SQLITE_COMPILEOPTION_GET(rt0.c3)) BETWEEN (((((((((rt0.c1)OR(vt0.lid)))AND(rt0.c3)))OR(rt0.c2)))AND(0.45058843421735895))) AND ('-1716207029'));
SELECT ALL * FROM rt0 LEFT OUTER JOIN v0 ON NULL CROSS JOIN vt0 ON ((SQLITE_COMPILEOPTION_GET(rt0.c3)) BETWEEN (((((((((rt0.c1)OR(vt0.lid)))AND(rt0.c3)))OR(rt0.c2)))AND(0.45058843421735895))) AND ('-1716207029')) WHERE ((((rt0.c2, vt0.c0, vt0.c1)) NOT BETWEEN ((((((((((v0.c0)OR(vt0.c2)))OR(x'')))OR(rt0.c0)))AND(v0.c0)), ((0.715156837643947)LIKE(rt0.c0)), x'')) AND (((((vt0.c0))>((rt0.c3))), CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 END, ((rt0.c3) BETWEEN (v0.c0) AND (rt0.c1)))))) UNION ALL SELECT * FROM rt0 LEFT OUTER JOIN v0 ON NULL CROSS JOIN vt0 ON ((SQLITE_COMPILEOPTION_GET(rt0.c3)) BETWEEN (((((((((rt0.c1)OR(vt0.lid)))AND(rt0.c3)))OR(rt0.c2)))AND(0.45058843421735895))) AND ('-1716207029')) WHERE ((NOT ((((rt0.c2, vt0.c0, vt0.c1)) NOT BETWEEN ((((((((((v0.c0)OR(vt0.c2)))OR(x'')))OR(rt0.c0)))AND(v0.c0)), ((0.715156837643947)LIKE(rt0.c0)), x'')) AND (((((vt0.c0))>((rt0.c3))), CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 END, ((rt0.c3) BETWEEN (v0.c0) AND (rt0.c1)))))))) UNION ALL SELECT ALL * FROM rt0 LEFT OUTER JOIN v0 ON NULL CROSS JOIN vt0 ON ((SQLITE_COMPILEOPTION_GET(rt0.c3)) BETWEEN (((((((((rt0.c1)OR(vt0.lid)))AND(rt0.c3)))OR(rt0.c2)))AND(0.45058843421735895))) AND ('-1716207029')) WHERE ((((((rt0.c2, vt0.c0, vt0.c1)) NOT BETWEEN ((((((((((v0.c0)OR(vt0.c2)))OR(x'')))OR(rt0.c0)))AND(v0.c0)), ((0.715156837643947)LIKE(rt0.c0)), x'')) AND (((((vt0.c0))>((rt0.c3))), CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 END, ((rt0.c3) BETWEEN (v0.c0) AND (rt0.c1)))))) ISNULL));
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON NULL CROSS JOIN vt0 ON ((SQLITE_COMPILEOPTION_GET(rt0.c3)) BETWEEN (((((((((rt0.c1)OR(vt0.lid)))AND(rt0.c3)))OR(rt0.c2)))AND(0.45058843421735895))) AND ('-1716207029'));
SELECT DISTINCT * FROM v0 CROSS JOIN vt0 ON (((((vt0.c1)<>(vt0.c0)), ((vt0.c0)GLOB(v0.c0)), ((vt0.lid) NOT BETWEEN (vt0.lid) AND (vt0.lid))))<((CASE vt0.c2  WHEN vt0.c2 THEN vt0.lid END, ((vt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c1)), v0.c0)));
SELECT DISTINCT * FROM v0 CROSS JOIN vt0 ON (((((vt0.c1)<>(vt0.c0)), ((vt0.c0)GLOB(v0.c0)), ((vt0.lid) NOT BETWEEN (vt0.lid) AND (vt0.lid))))<((CASE vt0.c2  WHEN vt0.c2 THEN vt0.lid END, ((vt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c1)), v0.c0))) WHERE (((((v0.c0)%(vt0.c1))) NOT NULL)) UNION SELECT DISTINCT * FROM v0 CROSS JOIN vt0 ON (((((vt0.c1)!=(vt0.c0)), ((vt0.c0)GLOB(v0.c0)), ((vt0.lid) NOT BETWEEN (vt0.lid) AND (vt0.lid))))<((CASE vt0.c2  WHEN vt0.c2 THEN vt0.lid END, ((vt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c1)), v0.c0))) WHERE ((NOT (((((v0.c0)%(vt0.c1))) NOT NULL)))) UNION SELECT DISTINCT * FROM v0 CROSS JOIN vt0 ON (((((vt0.c1)!=(vt0.c0)), ((vt0.c0)GLOB(v0.c0)), ((vt0.lid) NOT BETWEEN (vt0.lid) AND (vt0.lid))))<((CASE vt0.c2  WHEN vt0.c2 THEN vt0.lid END, ((vt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c1)), v0.c0))) WHERE (((((((v0.c0)%(vt0.c1))) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM v0 CROSS JOIN vt0 ON (((((vt0.c1)<>(vt0.c0)), ((vt0.c0)GLOB(v0.c0)), ((vt0.lid) NOT BETWEEN (vt0.lid) AND (vt0.lid))))<((CASE vt0.c2  WHEN vt0.c2 THEN vt0.lid END, ((vt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c1)), v0.c0)));
SELECT rt0.c1, rt0.c0, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, rt0.c3;
SELECT rt0.c1, rt0.c0, rt0.c2, rt0.c3 FROM rt0 WHERE ((((((rt0.c2, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c4, rt0.c1, rt0.c1)) AND ((rt0.c0, rt0.c2, rt0.c1))))+(((rt0.c3)|(rt0.c2))))) GROUP BY rt0.c1, rt0.c0, rt0.c2, rt0.c3 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2, rt0.c3 FROM rt0 WHERE ((NOT ((((((rt0.c2, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c4, rt0.c1, rt0.c1)) AND ((rt0.c0, rt0.c2, rt0.c1))))+(((rt0.c3)|(rt0.c2))))))) GROUP BY rt0.c1, rt0.c0, rt0.c2, rt0.c3 UNION SELECT rt0.c1, rt0.c0, rt0.c2, rt0.c3 FROM rt0 WHERE ((((((((rt0.c2, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c4, rt0.c1, rt0.c1)) AND ((rt0.c0, rt0.c2, rt0.c1))))+(((rt0.c3)|(rt0.c2))))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2, rt0.c3;
SELECT rt0.c1, rt0.c0, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, rt0.c3;
SELECT rt0.c3, rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c3, rt0.c1, v0.c0;
SELECT rt0.c3, rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c3, rt0.c1, v0.c0 HAVING rt0.c3 UNION ALL SELECT ALL rt0.c3, rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c3, rt0.c1, v0.c0 HAVING (NOT (rt0.c3)) UNION ALL SELECT ALL rt0.c3, rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c3, rt0.c1, v0.c0 HAVING ((rt0.c3) ISNULL);
SELECT rt0.c3, rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c3, rt0.c1, v0.c0;
SELECT rt0.c3, rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c3, rt0.c1, v0.c0 HAVING rt0.c3 UNION ALL SELECT ALL rt0.c3, rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c3, rt0.c1, v0.c0 HAVING (NOT (rt0.c3)) UNION ALL SELECT ALL rt0.c3, rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c3, rt0.c1, v0.c0 HAVING ((rt0.c3) ISNULL);
SELECT rt0.c3, rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c3, rt0.c1, v0.c0;
SELECT SUM((((((vt0.c2))>((rt0.c0)))) BETWEEN ((~ (v0.c0))) AND (rt0.c0 COLLATE BINARY))) FROM vt0, v0, rt0 ORDER BY (rt0.c1 IN ()) ASC, (((rt0.c3) NOT BETWEEN (vt0.c2) AND (rt0.c3)) IN ())  NULLS FIRST;
SELECT ALL rt0.c0, rt0.c4, rt0.c3 FROM rt0;
SELECT ALL rt0.c0, rt0.c4, rt0.c3 FROM rt0 WHERE (((((0.6869493797439757)<<(rt0.c4)))GLOB(rt0.c1))) UNION ALL SELECT rt0.c0, rt0.c4, rt0.c3 FROM rt0 WHERE ((NOT (((((0.6869493797439757)<<(rt0.c4)))GLOB(rt0.c1))))) UNION ALL SELECT rt0.c0, rt0.c4, rt0.c3 FROM rt0 WHERE (((((((0.6869493797439757)<<(rt0.c4)))GLOB(rt0.c1))) ISNULL));
SELECT ALL rt0.c0, rt0.c4, rt0.c3 FROM rt0;
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE (CAST(((vt0.lid) BETWEEN (vt0.c2) AND (v0.c0)) AS TEXT)) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT (CAST(((vt0.lid) BETWEEN (vt0.c2) AND (v0.c0)) AS TEXT)))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE (((CAST(((vt0.lid) BETWEEN (vt0.c2) AND (v0.c0)) AS TEXT)) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT v0.c0 FROM vt0 FULL OUTER JOIN v0 ON NULL GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0 FULL OUTER JOIN v0 ON NULL WHERE ('673499371') GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt0 FULL OUTER JOIN v0 ON NULL WHERE ((NOT ('673499371'))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt0 FULL OUTER JOIN v0 ON NULL WHERE ((('673499371') ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM vt0 FULL OUTER JOIN v0 ON NULL GROUP BY v0.c0;
SELECT rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 HAVING CASE WHEN MIN(rt0.c3) THEN (rt0.c3 IN ()) ELSE ((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c3)) END UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 HAVING (NOT (CASE WHEN MIN(rt0.c3) THEN (rt0.c3 IN ()) ELSE ((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c3)) END)) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 HAVING ((CASE WHEN MIN(rt0.c3) THEN (rt0.c3 IN ()) ELSE ((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c3)) END) ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 HAVING CASE WHEN MIN(rt0.c3) THEN (rt0.c3 IN ()) ELSE ((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c3)) END UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 HAVING (NOT (CASE WHEN MIN(rt0.c3) THEN (rt0.c3 IN ()) ELSE ((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c3)) END)) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 HAVING ((CASE WHEN MIN(rt0.c3) THEN (rt0.c3 IN ()) ELSE ((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c3)) END) ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2;
SELECT ALL rt0.c2, rt0.c3, vt0.c0 FROM vt0 NATURAL JOIN rt0;
SELECT ALL rt0.c2, rt0.c3, vt0.c0 FROM vt0 NATURAL JOIN rt0 WHERE ((((((rt0.c1)IS(rt0.c3))))<((vt0.c2)))) UNION ALL SELECT rt0.c2, rt0.c3, vt0.c0 FROM vt0 NATURAL JOIN rt0 WHERE ((NOT ((((((rt0.c1)IS(rt0.c3))))<((vt0.c2)))))) UNION ALL SELECT rt0.c2, rt0.c3, vt0.c0 FROM vt0 NATURAL JOIN rt0 WHERE ((((((((rt0.c1)IS(rt0.c3))))<((vt0.c2)))) ISNULL));
SELECT ALL rt0.c2, rt0.c3, vt0.c0 FROM vt0 NATURAL JOIN rt0;
SELECT DISTINCT vt0.c0, rt0.c3, rt0.c2, rt0.c4, vt0.c1 FROM vt0, rt0, v0 NOT INDEXED;
SELECT DISTINCT vt0.c0, rt0.c3, rt0.c2, rt0.c4, vt0.c1 FROM vt0, rt0, v0 WHERE (((vt0.c2 COLLATE RTRIM) BETWEEN (((vt0.c1) NOTNULL)) AND (((((rt0.c4)OR(rt0.c3)))OR(vt0.c0))))) UNION SELECT DISTINCT vt0.c0, rt0.c3, rt0.c2, rt0.c4, vt0.c1 FROM vt0, rt0, v0 WHERE ((NOT (((vt0.c2 COLLATE RTRIM) BETWEEN (((vt0.c1) NOTNULL)) AND (((((rt0.c4)OR(rt0.c3)))OR(vt0.c0))))))) UNION SELECT DISTINCT vt0.c0, rt0.c3, rt0.c2, rt0.c4, vt0.c1 FROM vt0, rt0, v0 WHERE (((((vt0.c2 COLLATE RTRIM) BETWEEN (((vt0.c1) NOTNULL)) AND (((((rt0.c4)OR(rt0.c3)))OR(vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c3, rt0.c2, rt0.c4, vt0.c1 FROM vt0, rt0, v0 NOT INDEXED;
SELECT vt0.lid, v0.c0, vt0.c1, rt0.c2, vt0.c2, rt0.c4, rt0.c1, rt0.c3 FROM v0, vt0, rt0 GROUP BY vt0.lid, v0.c0, vt0.c1, rt0.c2, vt0.c2, rt0.c4, rt0.c1, rt0.c3;
SELECT ALL vt0.lid, v0.c0, vt0.c1, rt0.c2, vt0.c2, rt0.c4, rt0.c1, rt0.c3 FROM v0, vt0, rt0 WHERE ((((vt0.lid)) BETWEEN ((CAST(vt0.c2 AS INTEGER))) AND (((((vt0.c0))<((0Xffffffff895d20d0))))))) GROUP BY vt0.lid, v0.c0, vt0.c1, rt0.c2, vt0.c2, rt0.c4, rt0.c1, rt0.c3 UNION SELECT vt0.lid, v0.c0, vt0.c1, rt0.c2, vt0.c2, rt0.c4, rt0.c1, rt0.c3 FROM v0, vt0, rt0 WHERE ((NOT ((((vt0.lid)) BETWEEN ((CAST(vt0.c2 AS INTEGER))) AND (((((vt0.c0))<((0Xffffffff895d20d0))))))))) GROUP BY vt0.lid, v0.c0, vt0.c1, rt0.c2, vt0.c2, rt0.c4, rt0.c1, rt0.c3 UNION SELECT vt0.lid, v0.c0, vt0.c1, rt0.c2, vt0.c2, rt0.c4, rt0.c1, rt0.c3 FROM v0, vt0, rt0 WHERE ((((((vt0.lid)) BETWEEN ((CAST(vt0.c2 AS INTEGER))) AND (((((vt0.c0))<((0Xffffffff895d20d0))))))) ISNULL)) GROUP BY vt0.lid, v0.c0, vt0.c1, rt0.c2, vt0.c2, rt0.c4, rt0.c1, rt0.c3;
SELECT vt0.lid, v0.c0, vt0.c1, rt0.c2, vt0.c2, rt0.c4, rt0.c1, rt0.c3 FROM v0, vt0, rt0 GROUP BY vt0.lid, v0.c0, vt0.c1, rt0.c2, vt0.c2, rt0.c4, rt0.c1, rt0.c3;
SELECT ALL rt0.c4, rt0.c1, rt0.c0, rt0.c2, vt0.c2, vt0.lid, v0.c0, rt0.c3 FROM vt0, rt0 INNER JOIN v0 ON ((CASE rt0.c3  WHEN rt0.c4 THEN vt0.c0 END)>=(x'')) GROUP BY rt0.c4, rt0.c1, rt0.c0, rt0.c2, vt0.c2, vt0.lid, v0.c0, rt0.c3;
SELECT ALL rt0.c4, rt0.c1, rt0.c0, rt0.c2, vt0.c2, vt0.lid, v0.c0, rt0.c3 FROM vt0, rt0 INNER JOIN v0 ON ((CASE rt0.c3  WHEN rt0.c4 THEN vt0.c0 END)>=(x'')) GROUP BY rt0.c4, rt0.c1, rt0.c0, rt0.c2, vt0.c2, vt0.lid, v0.c0, rt0.c3 HAVING MAX((vt0.c2 IN ())) UNION ALL SELECT rt0.c4, rt0.c1, rt0.c0, rt0.c2, vt0.c2, vt0.lid, v0.c0, rt0.c3 FROM vt0, rt0 INNER JOIN v0 ON ((CASE rt0.c3  WHEN rt0.c4 THEN vt0.c0 END)>=(x'')) GROUP BY rt0.c4, rt0.c1, rt0.c0, rt0.c2, vt0.c2, vt0.lid, v0.c0, rt0.c3 HAVING (NOT (MAX((vt0.c2 IN ())))) UNION ALL SELECT rt0.c4, rt0.c1, rt0.c0, rt0.c2, vt0.c2, vt0.lid, v0.c0, rt0.c3 FROM vt0, rt0 INNER JOIN v0 ON ((CASE rt0.c3  WHEN rt0.c4 THEN vt0.c0 END)>=(x'')) GROUP BY rt0.c4, rt0.c1, rt0.c0, rt0.c2, vt0.c2, vt0.lid, v0.c0, rt0.c3 HAVING ((MAX((vt0.c2 IN ()))) ISNULL);
SELECT ALL rt0.c4, rt0.c1, rt0.c0, rt0.c2, vt0.c2, vt0.lid, v0.c0, rt0.c3 FROM vt0, rt0 INNER JOIN v0 ON ((CASE rt0.c3  WHEN rt0.c4 THEN vt0.c0 END)>=(x'')) GROUP BY rt0.c4, rt0.c1, rt0.c0, rt0.c2, vt0.c2, vt0.lid, v0.c0, rt0.c3;
SELECT ALL rt0.c4, rt0.c1, rt0.c0, rt0.c2, vt0.c2, vt0.lid, v0.c0, rt0.c3 FROM vt0, rt0 INNER JOIN v0 ON ((CASE rt0.c3  WHEN rt0.c4 THEN vt0.c0 END)>=(x'')) GROUP BY rt0.c4, rt0.c1, rt0.c0, rt0.c2, vt0.c2, vt0.lid, v0.c0, rt0.c3 HAVING MAX((vt0.c2 IN ())) UNION ALL SELECT rt0.c4, rt0.c1, rt0.c0, rt0.c2, vt0.c2, vt0.lid, v0.c0, rt0.c3 FROM vt0, rt0 INNER JOIN v0 ON ((CASE rt0.c3  WHEN rt0.c4 THEN vt0.c0 END)>=(x'')) GROUP BY rt0.c4, rt0.c1, rt0.c0, rt0.c2, vt0.c2, vt0.lid, v0.c0, rt0.c3 HAVING (NOT (MAX((vt0.c2 IN ())))) UNION ALL SELECT rt0.c4, rt0.c1, rt0.c0, rt0.c2, vt0.c2, vt0.lid, v0.c0, rt0.c3 FROM vt0, rt0 INNER JOIN v0 ON ((CASE rt0.c3  WHEN rt0.c4 THEN vt0.c0 END)>=(x'')) GROUP BY rt0.c4, rt0.c1, rt0.c0, rt0.c2, vt0.c2, vt0.lid, v0.c0, rt0.c3 HAVING ((MAX((vt0.c2 IN ()))) ISNULL);
SELECT ALL rt0.c4, rt0.c1, rt0.c0, rt0.c2, vt0.c2, vt0.lid, v0.c0, rt0.c3 FROM vt0, rt0 INNER JOIN v0 ON ((CASE rt0.c3  WHEN rt0.c4 THEN vt0.c0 END)>=(x'')) GROUP BY rt0.c4, rt0.c1, rt0.c0, rt0.c2, vt0.c2, vt0.lid, v0.c0, rt0.c3;
SELECT * FROM v0, vt0, rt0;
SELECT ALL * FROM v0, vt0, rt0 WHERE ((((((0x606fb17a) IS TRUE)))=((rt0.c3 COLLATE RTRIM)))) UNION ALL SELECT * FROM v0, vt0, rt0 WHERE ((NOT ((((((0X606fb17a) IS TRUE)))==((rt0.c3 COLLATE RTRIM)))))) UNION ALL SELECT * FROM v0, vt0, rt0 WHERE ((((((((0x606fb17a) IS TRUE)))==((rt0.c3 COLLATE RTRIM)))) ISNULL));
SELECT * FROM v0, vt0, rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2, v0.c0 FROM v0, rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2, v0.c0 FROM v0, rt0 WHERE (((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c3 END) NOT BETWEEN ((((rt0.c0))>((rt0.c4)))) AND (((rt0.c3)GLOB(rt0.c4))))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2, v0.c0 FROM v0, rt0 WHERE ((NOT (((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c3 END) NOT BETWEEN ((((rt0.c0))>((rt0.c4)))) AND (((rt0.c3)GLOB(rt0.c4))))))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2, v0.c0 FROM v0, rt0 WHERE (((((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c3 END) NOT BETWEEN ((((rt0.c0))>((rt0.c4)))) AND (((rt0.c3)GLOB(rt0.c4))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2, v0.c0 FROM v0, rt0;
SELECT ALL vt0.lid, v0.c0, vt0.c0 FROM v0, vt0 GROUP BY vt0.lid, v0.c0, vt0.c0;
SELECT vt0.lid, v0.c0, vt0.c0 FROM v0, vt0 WHERE (IFNULL(DISTINCT UNLIKELY(vt0.c1), (NOT (v0.c0)))) GROUP BY vt0.lid, v0.c0, vt0.c0 UNION SELECT ALL vt0.lid, v0.c0, vt0.c0 FROM v0, vt0 WHERE ((NOT (IFNULL(DISTINCT UNLIKELY(vt0.c1), (NOT (v0.c0)))))) GROUP BY vt0.lid, v0.c0, vt0.c0 UNION SELECT vt0.lid, v0.c0, vt0.c0 FROM v0, vt0 WHERE (((IFNULL(DISTINCT UNLIKELY(vt0.c1), (NOT (v0.c0)))) ISNULL)) GROUP BY vt0.lid, v0.c0, vt0.c0;
SELECT ALL vt0.lid, v0.c0, vt0.c0 FROM v0, vt0 GROUP BY vt0.lid, v0.c0, vt0.c0;
SELECT ALL rt0.c2, vt0.lid, v0.c0, rt0.c1, vt0.c0, rt0.c3 FROM v0, rt0, vt0 GROUP BY rt0.c2, vt0.lid, v0.c0, rt0.c1, vt0.c0, rt0.c3;
SELECT rt0.c2, vt0.lid, v0.c0, rt0.c1, vt0.c0, rt0.c3 FROM v0, rt0, vt0 GROUP BY rt0.c2, vt0.lid, v0.c0, rt0.c1, vt0.c0, rt0.c3 HAVING (NOT (MIN(rt0.c4) COLLATE NOCASE)) UNION ALL SELECT ALL rt0.c2, vt0.lid, v0.c0, rt0.c1, vt0.c0, rt0.c3 FROM v0, rt0, vt0 GROUP BY rt0.c2, vt0.lid, v0.c0, rt0.c1, vt0.c0, rt0.c3 HAVING (NOT ((NOT (MIN(rt0.c4) COLLATE NOCASE)))) UNION ALL SELECT rt0.c2, vt0.lid, v0.c0, rt0.c1, vt0.c0, rt0.c3 FROM v0, rt0, vt0 GROUP BY rt0.c2, vt0.lid, v0.c0, rt0.c1, vt0.c0, rt0.c3 HAVING (((NOT (MIN(rt0.c4) COLLATE NOCASE))) ISNULL);
SELECT ALL rt0.c2, vt0.lid, v0.c0, rt0.c1, vt0.c0, rt0.c3 FROM v0, rt0, vt0 GROUP BY rt0.c2, vt0.lid, v0.c0, rt0.c1, vt0.c0, rt0.c3;
SELECT rt0.c2, vt0.lid, v0.c0, rt0.c1, vt0.c0, rt0.c3 FROM v0, rt0, vt0 GROUP BY rt0.c2, vt0.lid, v0.c0, rt0.c1, vt0.c0, rt0.c3 HAVING (NOT (MIN(rt0.c4) COLLATE NOCASE)) UNION ALL SELECT ALL rt0.c2, vt0.lid, v0.c0, rt0.c1, vt0.c0, rt0.c3 FROM v0, rt0, vt0 GROUP BY rt0.c2, vt0.lid, v0.c0, rt0.c1, vt0.c0, rt0.c3 HAVING (NOT ((NOT (MIN(rt0.c4) COLLATE NOCASE)))) UNION ALL SELECT rt0.c2, vt0.lid, v0.c0, rt0.c1, vt0.c0, rt0.c3 FROM v0, rt0, vt0 GROUP BY rt0.c2, vt0.lid, v0.c0, rt0.c1, vt0.c0, rt0.c3 HAVING (((NOT (MIN(rt0.c4) COLLATE NOCASE))) ISNULL);
SELECT ALL rt0.c2, vt0.lid, v0.c0, rt0.c1, vt0.c0, rt0.c3 FROM v0, rt0, vt0 GROUP BY rt0.c2, vt0.lid, v0.c0, rt0.c1, vt0.c0, rt0.c3;
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (0.6084251581299764) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (0.6084251581299764))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((0.6084251581299764) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (UPPER(DISTINCT v0.c0) COLLATE BINARY) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (UPPER(DISTINCT v0.c0) COLLATE BINARY))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((UPPER(DISTINCT v0.c0) COLLATE BINARY) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT vt0.c0, rt0.c0 FROM rt0, v0 CROSS JOIN vt0 ON ((((rt0.c3)|(v0.c0)))-(UPPER(rt0.c1))) GROUP BY vt0.c0, rt0.c0;
SELECT vt0.c0, rt0.c0 FROM rt0, v0 CROSS JOIN vt0 ON ((((rt0.c3)|(v0.c0)))-(UPPER(rt0.c1))) WHERE (rt0.c1) GROUP BY vt0.c0, rt0.c0 UNION SELECT vt0.c0, rt0.c0 FROM rt0, v0 CROSS JOIN vt0 ON ((((rt0.c3)|(v0.c0)))-(UPPER(rt0.c1))) WHERE ((NOT (rt0.c1))) GROUP BY vt0.c0, rt0.c0 UNION SELECT vt0.c0, rt0.c0 FROM rt0, v0 CROSS JOIN vt0 ON ((((rt0.c3)|(v0.c0)))-(UPPER(rt0.c1))) WHERE (((rt0.c1) ISNULL)) GROUP BY vt0.c0, rt0.c0;
SELECT vt0.c0, rt0.c0 FROM rt0, v0 CROSS JOIN vt0 ON ((((rt0.c3)|(v0.c0)))-(UPPER(rt0.c1))) GROUP BY vt0.c0, rt0.c0;
SELECT ALL rt0.c3, rt0.c4, rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c3, rt0.c4, rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c0, rt0.c2, rt0.c1 HAVING TOTAL((- (MIN(rt0.c3)))) UNION ALL SELECT ALL rt0.c3, rt0.c4, rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (TOTAL((- (MIN(rt0.c3)))))) UNION ALL SELECT rt0.c3, rt0.c4, rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c0, rt0.c2, rt0.c1 HAVING ((TOTAL((- (MIN(rt0.c3))))) ISNULL);
SELECT rt0.c0, vt0.c2, rt0.c1, rt0.c2 FROM v0, rt0, vt0;
SELECT rt0.c0, vt0.c2, rt0.c1, rt0.c2 FROM v0, rt0, vt0 WHERE (((vt0.c2 IN ()) IN ())) UNION ALL SELECT rt0.c0, vt0.c2, rt0.c1, rt0.c2 FROM v0, rt0, vt0 WHERE ((NOT (((vt0.c2 IN ()) IN ())))) UNION ALL SELECT rt0.c0, vt0.c2, rt0.c1, rt0.c2 FROM v0, rt0, vt0 WHERE (((((vt0.c2 IN ()) IN ())) ISNULL));
SELECT rt0.c0, vt0.c2, rt0.c1, rt0.c2 FROM v0, rt0, vt0;
SELECT DISTINCT rt0.c3, vt0.c0, rt0.c0, vt0.c1, v0.c0, vt0.lid FROM v0, vt0, rt0;
SELECT DISTINCT rt0.c3, vt0.c0, rt0.c0, vt0.c1, v0.c0, vt0.lid FROM v0, vt0, rt0 WHERE ((~ (((vt0.c0) IS TRUE)))) UNION SELECT DISTINCT rt0.c3, vt0.c0, rt0.c0, vt0.c1, v0.c0, vt0.lid FROM v0, vt0, rt0 WHERE ((NOT ((~ (((vt0.c0) IS TRUE)))))) UNION SELECT DISTINCT rt0.c3, vt0.c0, rt0.c0, vt0.c1, v0.c0, vt0.lid FROM v0, vt0, rt0 WHERE ((((~ (((vt0.c0) IS TRUE)))) ISNULL));
SELECT DISTINCT rt0.c3, vt0.c0, rt0.c0, vt0.c1, v0.c0, vt0.lid FROM v0, vt0, rt0;
SELECT vt0.c2, vt0.lid, vt0.c0 FROM vt0, v0 GROUP BY vt0.c2, vt0.lid, vt0.c0;
SELECT vt0.c2, vt0.lid, vt0.c0 FROM vt0, v0 WHERE (CAST(COALESCE(vt0.c2, vt0.c2, vt0.lid, vt0.c1) AS INTEGER)) GROUP BY vt0.c2, vt0.lid, vt0.c0 UNION SELECT vt0.c2, vt0.lid, vt0.c0 FROM vt0, v0 WHERE ((NOT (CAST(COALESCE(vt0.c2, vt0.c2, vt0.lid, vt0.c1) AS INTEGER)))) GROUP BY vt0.c2, vt0.lid, vt0.c0 UNION SELECT ALL vt0.c2, vt0.lid, vt0.c0 FROM vt0, v0 WHERE (((CAST(COALESCE(vt0.c2, vt0.c2, vt0.lid, vt0.c1) AS INTEGER)) ISNULL)) GROUP BY vt0.c2, vt0.lid, vt0.c0;
SELECT vt0.c2, vt0.lid, vt0.c0 FROM vt0, v0 GROUP BY vt0.c2, vt0.lid, vt0.c0;
SELECT rt0.c4, rt0.c3, rt0.c2, vt0.lid, rt0.c0, v0.c0, vt0.c1, rt0.c1, vt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c2) ISNULL)) BETWEEN (rt0.c2 COLLATE RTRIM) AND (((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c3)))) LEFT OUTER JOIN v0 ON CASE (((vt0.c2, rt0.c3, vt0.lid)) NOT BETWEEN ((rt0.c1, '', rt0.c0)) AND ((rt0.c1, rt0.c1, v0.c0)))  WHEN v0.c0 COLLATE NOCASE THEN v0.c0 COLLATE BINARY END GROUP BY rt0.c4, rt0.c3, rt0.c2, vt0.lid, rt0.c0, v0.c0, vt0.c1, rt0.c1, vt0.c2;
SELECT ALL rt0.c4, rt0.c3, rt0.c2, vt0.lid, rt0.c0, v0.c0, vt0.c1, rt0.c1, vt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c2) ISNULL)) BETWEEN (rt0.c2 COLLATE RTRIM) AND (((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c3)))) LEFT OUTER JOIN v0 ON CASE (((vt0.c2, rt0.c3, vt0.lid)) NOT BETWEEN ((rt0.c1, '', rt0.c0)) AND ((rt0.c1, rt0.c1, v0.c0)))  WHEN v0.c0 COLLATE NOCASE THEN v0.c0 COLLATE BINARY END GROUP BY rt0.c4, rt0.c3, rt0.c2, vt0.lid, rt0.c0, v0.c0, vt0.c1, rt0.c1, vt0.c2 HAVING COUNT(*) UNION ALL SELECT rt0.c4, rt0.c3, rt0.c2, vt0.lid, rt0.c0, v0.c0, vt0.c1, rt0.c1, vt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c2) ISNULL)) BETWEEN (rt0.c2 COLLATE RTRIM) AND (((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c3)))) LEFT OUTER JOIN v0 ON CASE (((vt0.c2, rt0.c3, vt0.lid)) NOT BETWEEN ((rt0.c1, '', rt0.c0)) AND ((rt0.c1, rt0.c1, v0.c0)))  WHEN v0.c0 COLLATE NOCASE THEN v0.c0 COLLATE BINARY END GROUP BY rt0.c4, rt0.c3, rt0.c2, vt0.lid, rt0.c0, v0.c0, vt0.c1, rt0.c1, vt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c4, rt0.c3, rt0.c2, vt0.lid, rt0.c0, v0.c0, vt0.c1, rt0.c1, vt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c2) ISNULL)) BETWEEN (rt0.c2 COLLATE RTRIM) AND (((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c3)))) LEFT OUTER JOIN v0 ON CASE (((vt0.c2, rt0.c3, vt0.lid)) NOT BETWEEN ((rt0.c1, '', rt0.c0)) AND ((rt0.c1, rt0.c1, v0.c0)))  WHEN v0.c0 COLLATE NOCASE THEN v0.c0 COLLATE BINARY END GROUP BY rt0.c4, rt0.c3, rt0.c2, vt0.lid, rt0.c0, v0.c0, vt0.c1, rt0.c1, vt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c4, rt0.c3, rt0.c2, vt0.lid, rt0.c0, v0.c0, vt0.c1, rt0.c1, vt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c2) ISNULL)) BETWEEN (rt0.c2 COLLATE RTRIM) AND (((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c3)))) LEFT OUTER JOIN v0 ON CASE (((vt0.c2, rt0.c3, vt0.lid)) NOT BETWEEN ((rt0.c1, '', rt0.c0)) AND ((rt0.c1, rt0.c1, v0.c0)))  WHEN v0.c0 COLLATE NOCASE THEN v0.c0 COLLATE BINARY END GROUP BY rt0.c4, rt0.c3, rt0.c2, vt0.lid, rt0.c0, v0.c0, vt0.c1, rt0.c1, vt0.c2;
SELECT ALL rt0.c4, rt0.c3, rt0.c2, vt0.lid, rt0.c0, v0.c0, vt0.c1, rt0.c1, vt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c2) ISNULL)) BETWEEN (rt0.c2 COLLATE RTRIM) AND (((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c3)))) LEFT OUTER JOIN v0 ON CASE (((vt0.c2, rt0.c3, vt0.lid)) NOT BETWEEN ((rt0.c1, '', rt0.c0)) AND ((rt0.c1, rt0.c1, v0.c0)))  WHEN v0.c0 COLLATE NOCASE THEN v0.c0 COLLATE BINARY END GROUP BY rt0.c4, rt0.c3, rt0.c2, vt0.lid, rt0.c0, v0.c0, vt0.c1, rt0.c1, vt0.c2 HAVING COUNT(*) UNION ALL SELECT rt0.c4, rt0.c3, rt0.c2, vt0.lid, rt0.c0, v0.c0, vt0.c1, rt0.c1, vt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c2) ISNULL)) BETWEEN (rt0.c2 COLLATE RTRIM) AND (((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c3)))) LEFT OUTER JOIN v0 ON CASE (((vt0.c2, rt0.c3, vt0.lid)) NOT BETWEEN ((rt0.c1, '', rt0.c0)) AND ((rt0.c1, rt0.c1, v0.c0)))  WHEN v0.c0 COLLATE NOCASE THEN v0.c0 COLLATE BINARY END GROUP BY rt0.c4, rt0.c3, rt0.c2, vt0.lid, rt0.c0, v0.c0, vt0.c1, rt0.c1, vt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c4, rt0.c3, rt0.c2, vt0.lid, rt0.c0, v0.c0, vt0.c1, rt0.c1, vt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c2) ISNULL)) BETWEEN (rt0.c2 COLLATE RTRIM) AND (((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c3)))) LEFT OUTER JOIN v0 ON CASE (((vt0.c2, rt0.c3, vt0.lid)) NOT BETWEEN ((rt0.c1, '', rt0.c0)) AND ((rt0.c1, rt0.c1, v0.c0)))  WHEN v0.c0 COLLATE NOCASE THEN v0.c0 COLLATE BINARY END GROUP BY rt0.c4, rt0.c3, rt0.c2, vt0.lid, rt0.c0, v0.c0, vt0.c1, rt0.c1, vt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c4, rt0.c3, rt0.c2, vt0.lid, rt0.c0, v0.c0, vt0.c1, rt0.c1, vt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c2) ISNULL)) BETWEEN (rt0.c2 COLLATE RTRIM) AND (((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c3)))) LEFT OUTER JOIN v0 ON CASE (((vt0.c2, rt0.c3, vt0.lid)) NOT BETWEEN ((rt0.c1, '', rt0.c0)) AND ((rt0.c1, rt0.c1, v0.c0)))  WHEN v0.c0 COLLATE NOCASE THEN v0.c0 COLLATE BINARY END GROUP BY rt0.c4, rt0.c3, rt0.c2, vt0.lid, rt0.c0, v0.c0, vt0.c1, rt0.c1, vt0.c2;
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (LIKELY(DISTINCT CAST(v0.c0 AS REAL))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (LIKELY(DISTINCT CAST(v0.c0 AS REAL))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((LIKELY(DISTINCT CAST(v0.c0 AS REAL))) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE (TRIM(DISTINCT ((v0.c0)>=(0.39378638447496395)))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT (TRIM(DISTINCT ((v0.c0)>=(0.39378638447496395)))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE (((TRIM(DISTINCT ((v0.c0)>=(0.39378638447496395)))) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT ALL rt0.c1, rt0.c4, rt0.c0, vt0.c2, v0.c0, vt0.c1, rt0.c3, rt0.c2, vt0.c0, vt0.lid FROM v0, rt0 NATURAL JOIN vt0 GROUP BY rt0.c1, rt0.c4, rt0.c0, vt0.c2, v0.c0, vt0.c1, rt0.c3, rt0.c2, vt0.c0, vt0.lid;
SELECT ALL rt0.c1, rt0.c4, rt0.c0, vt0.c2, v0.c0, vt0.c1, rt0.c3, rt0.c2, vt0.c0, vt0.lid FROM v0, rt0 NATURAL JOIN vt0 WHERE (CAST(rt0.c1 AS TEXT)) GROUP BY rt0.c1, rt0.c4, rt0.c0, vt0.c2, v0.c0, vt0.c1, rt0.c3, rt0.c2, vt0.c0, vt0.lid UNION SELECT rt0.c1, rt0.c4, rt0.c0, vt0.c2, v0.c0, vt0.c1, rt0.c3, rt0.c2, vt0.c0, vt0.lid FROM v0, rt0 NATURAL JOIN vt0 WHERE ((NOT (CAST(rt0.c1 AS TEXT)))) GROUP BY rt0.c1, rt0.c4, rt0.c0, vt0.c2, v0.c0, vt0.c1, rt0.c3, rt0.c2, vt0.c0, vt0.lid UNION SELECT rt0.c1, rt0.c4, rt0.c0, vt0.c2, v0.c0, vt0.c1, rt0.c3, rt0.c2, vt0.c0, vt0.lid FROM v0, rt0 NATURAL JOIN vt0 WHERE (((CAST(rt0.c1 AS TEXT)) ISNULL)) GROUP BY rt0.c1, rt0.c4, rt0.c0, vt0.c2, v0.c0, vt0.c1, rt0.c3, rt0.c2, vt0.c0, vt0.lid;
SELECT ALL rt0.c1, rt0.c4, rt0.c0, vt0.c2, v0.c0, vt0.c1, rt0.c3, rt0.c2, vt0.c0, vt0.lid FROM v0, rt0 NATURAL JOIN vt0 GROUP BY rt0.c1, rt0.c4, rt0.c0, vt0.c2, v0.c0, vt0.c1, rt0.c3, rt0.c2, vt0.c0, vt0.lid;
SELECT vt0.c1 FROM rt0, vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM rt0, vt0 GROUP BY vt0.c1 HAVING GROUP_CONCAT(MIN(rt0.c2)) UNION ALL SELECT ALL vt0.c1 FROM rt0, vt0 GROUP BY vt0.c1 HAVING (NOT (GROUP_CONCAT(MIN(rt0.c2)))) UNION ALL SELECT vt0.c1 FROM rt0, vt0 GROUP BY vt0.c1 HAVING ((GROUP_CONCAT(MIN(rt0.c2))) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((((~ (vt0.c1)))IS NOT(((((-4.66612154E8)OR(vt0.lid)))OR(''))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((((~ (vt0.c1)))IS NOT(((((-4.66612154E8)OR(vt0.lid)))OR(''))))))) UNION ALL SELECT * FROM vt0 WHERE ((((((~ (vt0.c1)))IS NOT(((((-4.66612154E8)OR(vt0.lid)))OR(''))))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN rt0 ON ((((((((((rt0.c4)OR(vt0.c1)))OR(((rt0.c2)LIKE(rt0.c0)))))OR(CAST(rt0.c0 AS REAL))))OR(((vt0.lid)-(rt0.c0)))))AND(CASE vt0.c0  WHEN rt0.c3 THEN rt0.c1 END));
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN rt0 ON ((((((((((rt0.c4)OR(vt0.c1)))OR(((rt0.c2)LIKE(rt0.c0)))))OR(CAST(rt0.c0 AS REAL))))OR(((vt0.lid)-(rt0.c0)))))AND(CASE vt0.c0  WHEN rt0.c3 THEN rt0.c1 END)) WHERE (((('-466612154' IN ()))LIKE((NOT (rt0.c0))))) UNION SELECT DISTINCT * FROM vt0 FULL OUTER JOIN rt0 ON ((((((((((rt0.c4)OR(vt0.c1)))OR(((rt0.c2)LIKE(rt0.c0)))))OR(CAST(rt0.c0 AS REAL))))OR(((vt0.lid)-(rt0.c0)))))AND(CASE vt0.c0  WHEN rt0.c3 THEN rt0.c1 END)) WHERE ((NOT (((('-466612154' IN ()))LIKE((NOT (rt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 FULL OUTER JOIN rt0 ON ((((((((((rt0.c4)OR(vt0.c1)))OR(((rt0.c2)LIKE(rt0.c0)))))OR(CAST(rt0.c0 AS REAL))))OR(((vt0.lid)-(rt0.c0)))))AND(CASE vt0.c0  WHEN rt0.c3 THEN rt0.c1 END)) WHERE (((((('-466612154' IN ()))LIKE((NOT (rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN rt0 ON ((((((((((rt0.c4)OR(vt0.c1)))OR(((rt0.c2)LIKE(rt0.c0)))))OR(CAST(rt0.c0 AS REAL))))OR(((vt0.lid)-(rt0.c0)))))AND(CASE vt0.c0  WHEN rt0.c3 THEN rt0.c1 END));
SELECT ALL vt0.lid, rt0.c0, vt0.c2, v0.c0, rt0.c1, vt0.c0, vt0.c1, rt0.c2 FROM rt0 INNER JOIN vt0 ON ((0.007973917971206612)<=(((vt0.c1)LIKE(rt0.c3)))) LEFT OUTER JOIN v0 ON ((v0.c0)IS NOT(vt0.lid)) COLLATE RTRIM GROUP BY vt0.lid, rt0.c0, vt0.c2, v0.c0, rt0.c1, vt0.c0, vt0.c1, rt0.c2;
SELECT ALL vt0.lid, rt0.c0, vt0.c2, v0.c0, rt0.c1, vt0.c0, vt0.c1, rt0.c2 FROM rt0 INNER JOIN vt0 ON ((0.007973917971206612)<=(((vt0.c1)LIKE(rt0.c3)))) LEFT OUTER JOIN v0 ON ((v0.c0)IS NOT(vt0.lid)) COLLATE RTRIM WHERE (((x'')/(CASE WHEN rt0.c3 THEN rt0.c2 END))) GROUP BY vt0.lid, rt0.c0, vt0.c2, v0.c0, rt0.c1, vt0.c0, vt0.c1, rt0.c2 UNION SELECT ALL vt0.lid, rt0.c0, vt0.c2, v0.c0, rt0.c1, vt0.c0, vt0.c1, rt0.c2 FROM rt0 INNER JOIN vt0 ON ((0.007973917971206612)<=(((vt0.c1)LIKE(rt0.c3)))) LEFT OUTER JOIN v0 ON ((v0.c0)IS NOT(vt0.lid)) COLLATE RTRIM WHERE ((NOT (((x'')/(CASE WHEN rt0.c3 THEN rt0.c2 END))))) GROUP BY vt0.lid, rt0.c0, vt0.c2, v0.c0, rt0.c1, vt0.c0, vt0.c1, rt0.c2 UNION SELECT ALL vt0.lid, rt0.c0, vt0.c2, v0.c0, rt0.c1, vt0.c0, vt0.c1, rt0.c2 FROM rt0 INNER JOIN vt0 ON ((0.007973917971206612)<=(((vt0.c1)LIKE(rt0.c3)))) LEFT OUTER JOIN v0 ON ((v0.c0)IS NOT(vt0.lid)) COLLATE RTRIM WHERE (((((x'')/(CASE WHEN rt0.c3 THEN rt0.c2 END))) ISNULL)) GROUP BY vt0.lid, rt0.c0, vt0.c2, v0.c0, rt0.c1, vt0.c0, vt0.c1, rt0.c2;
SELECT ALL vt0.lid, rt0.c0, vt0.c2, v0.c0, rt0.c1, vt0.c0, vt0.c1, rt0.c2 FROM rt0 INNER JOIN vt0 ON ((0.007973917971206612)<=(((vt0.c1)LIKE(rt0.c3)))) LEFT OUTER JOIN v0 ON ((v0.c0)IS NOT(vt0.lid)) COLLATE RTRIM GROUP BY vt0.lid, rt0.c0, vt0.c2, v0.c0, rt0.c1, vt0.c0, vt0.c1, rt0.c2;
SELECT vt0.c1, rt0.c2, v0.c0, vt0.c0 FROM v0, rt0, vt0 GROUP BY vt0.c1, rt0.c2, v0.c0, vt0.c0;
SELECT ALL vt0.c1, rt0.c2, v0.c0, vt0.c0 FROM v0, rt0, vt0 GROUP BY vt0.c1, rt0.c2, v0.c0, vt0.c0 HAVING TOTAL(rt0.c2) COLLATE BINARY UNION ALL SELECT vt0.c1, rt0.c2, v0.c0, vt0.c0 FROM v0, rt0, vt0 GROUP BY vt0.c1, rt0.c2, v0.c0, vt0.c0 HAVING (NOT (TOTAL(rt0.c2) COLLATE BINARY)) UNION ALL SELECT vt0.c1, rt0.c2, v0.c0, vt0.c0 FROM v0, rt0, vt0 GROUP BY vt0.c1, rt0.c2, v0.c0, vt0.c0 HAVING ((TOTAL(rt0.c2) COLLATE BINARY) ISNULL);
SELECT vt0.c1, rt0.c2, v0.c0, vt0.c0 FROM v0, rt0, vt0 GROUP BY vt0.c1, rt0.c2, v0.c0, vt0.c0;
SELECT ALL vt0.c1, rt0.c2, v0.c0, vt0.c0 FROM v0, rt0, vt0 GROUP BY vt0.c1, rt0.c2, v0.c0, vt0.c0 HAVING TOTAL(rt0.c2) COLLATE BINARY UNION ALL SELECT vt0.c1, rt0.c2, v0.c0, vt0.c0 FROM v0, rt0, vt0 GROUP BY vt0.c1, rt0.c2, v0.c0, vt0.c0 HAVING (NOT (TOTAL(rt0.c2) COLLATE BINARY)) UNION ALL SELECT vt0.c1, rt0.c2, v0.c0, vt0.c0 FROM v0, rt0, vt0 GROUP BY vt0.c1, rt0.c2, v0.c0, vt0.c0 HAVING ((TOTAL(rt0.c2) COLLATE BINARY) ISNULL);
SELECT vt0.c1, rt0.c2, v0.c0, vt0.c0 FROM v0, rt0, vt0 GROUP BY vt0.c1, rt0.c2, v0.c0, vt0.c0;
SELECT * FROM vt0, rt0, v0;
SELECT * FROM vt0, rt0, v0 WHERE (((((vt0.lid)!=(v0.c0)))+((~ (NULL))))) UNION ALL SELECT ALL * FROM vt0, rt0, v0 WHERE ((NOT (((((vt0.lid)!=(v0.c0)))+((~ (NULL))))))) UNION ALL SELECT ALL * FROM vt0, rt0, v0 NOT INDEXED WHERE (((((((vt0.lid)<>(v0.c0)))+((~ (NULL))))) ISNULL));
SELECT * FROM vt0, rt0, v0;
SELECT DISTINCT vt0.lid, vt0.c2, vt0.c1, v0.c0 FROM vt0 CROSS JOIN v0 ON (((vt0.c2)) NOT BETWEEN ((((vt0.c2)LIKE(vt0.lid)))) AND ((((v0.c0) IS TRUE))));
SELECT DISTINCT vt0.lid, vt0.c2, vt0.c1, v0.c0 FROM vt0 CROSS JOIN v0 ON (((vt0.c2)) NOT BETWEEN ((((vt0.c2)LIKE(vt0.lid)))) AND ((((v0.c0) IS TRUE)))) WHERE (((((((vt0.c2) NOTNULL))AND(((v0.c0) NOT BETWEEN (vt0.c1) AND ('+!')))))AND(vt0.c0 COLLATE RTRIM))) UNION SELECT DISTINCT vt0.lid, vt0.c2, vt0.c1, v0.c0 FROM vt0 CROSS JOIN v0 ON (((vt0.c2)) NOT BETWEEN ((((vt0.c2)LIKE(vt0.lid)))) AND ((((v0.c0) IS TRUE)))) WHERE ((NOT (((((((vt0.c2) NOTNULL))AND(((v0.c0) NOT BETWEEN (vt0.c1) AND ('+!')))))AND(vt0.c0 COLLATE RTRIM))))) UNION SELECT DISTINCT vt0.lid, vt0.c2, vt0.c1, v0.c0 FROM vt0 CROSS JOIN v0 ON (((vt0.c2)) NOT BETWEEN ((((vt0.c2)LIKE(vt0.lid)))) AND ((((v0.c0) IS TRUE)))) WHERE (((((((((vt0.c2) NOTNULL))AND(((v0.c0) NOT BETWEEN (vt0.c1) AND ('+!')))))AND(vt0.c0 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT vt0.lid, vt0.c2, vt0.c1, v0.c0 FROM vt0 CROSS JOIN v0 ON (((vt0.c2)) NOT BETWEEN ((((vt0.c2)LIKE(vt0.lid)))) AND ((((v0.c0) IS TRUE))));
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((((((v0.c0)AND(v0.c0)))AND(v0.c0))) IS TRUE)) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((((((v0.c0)AND(v0.c0)))AND(v0.c0))) IS TRUE)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((((((v0.c0)AND(v0.c0)))AND(v0.c0))) IS TRUE)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2 HAVING rt0.c0 UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2 HAVING (NOT (rt0.c0)) UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2 HAVING ((rt0.c0) ISNULL);
SELECT ALL rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2 HAVING rt0.c0 UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2 HAVING (NOT (rt0.c0)) UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2 HAVING ((rt0.c0) ISNULL);
SELECT ALL rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2;
SELECT ALL vt0.c2, rt0.c1, rt0.c4, rt0.c0, rt0.c3, rt0.c2 FROM rt0, vt0;
SELECT ALL vt0.c2, rt0.c1, rt0.c4, rt0.c0, rt0.c3, rt0.c2 FROM rt0, vt0 WHERE (((rt0.c1)/(vt0.lid)) COLLATE RTRIM COLLATE NOCASE) UNION ALL SELECT vt0.c2, rt0.c1, rt0.c4, rt0.c0, rt0.c3, rt0.c2 FROM rt0, vt0 WHERE ((NOT (((rt0.c1)/(vt0.lid)) COLLATE RTRIM COLLATE NOCASE))) UNION ALL SELECT vt0.c2, rt0.c1, rt0.c4, rt0.c0, rt0.c3, rt0.c2 FROM rt0, vt0 WHERE (((((rt0.c1)/(vt0.lid)) COLLATE RTRIM COLLATE NOCASE) ISNULL));
SELECT ALL vt0.c2, rt0.c1, rt0.c4, rt0.c0, rt0.c3, rt0.c2 FROM rt0, vt0;
SELECT DISTINCT vt0.lid, rt0.c3, rt0.c4 FROM vt0, rt0, v0;
SELECT DISTINCT vt0.lid, rt0.c3, rt0.c4 FROM vt0, rt0, v0 WHERE (((((vt0.c0) NOT BETWEEN ('') AND (rt0.c3))) NOT NULL)) UNION SELECT DISTINCT vt0.lid, rt0.c3, rt0.c4 FROM vt0, rt0, v0 WHERE ((NOT (((((vt0.c0) NOT BETWEEN ('') AND (rt0.c3))) NOT NULL)))) UNION SELECT DISTINCT vt0.lid, rt0.c3, rt0.c4 FROM vt0, rt0, v0 WHERE (((((((vt0.c0) NOT BETWEEN ('') AND (rt0.c3))) NOT NULL)) ISNULL));
SELECT DISTINCT vt0.lid, rt0.c3, rt0.c4 FROM vt0, rt0, v0;
SELECT ALL vt0.c1, vt0.c2, rt0.c4 FROM v0, rt0, vt0 GROUP BY vt0.c1, vt0.c2, rt0.c4;
SELECT ALL vt0.c1, vt0.c2, rt0.c4 FROM v0, rt0, vt0 WHERE (rt0.c1) GROUP BY vt0.c1, vt0.c2, rt0.c4 UNION SELECT ALL vt0.c1, vt0.c2, rt0.c4 FROM v0, rt0, vt0 WHERE ((NOT (rt0.c1))) GROUP BY vt0.c1, vt0.c2, rt0.c4 UNION SELECT ALL vt0.c1, vt0.c2, rt0.c4 FROM v0, rt0, vt0 WHERE (((rt0.c1) ISNULL)) GROUP BY vt0.c1, vt0.c2, rt0.c4;
SELECT ALL vt0.c1, vt0.c2, rt0.c4 FROM v0, rt0, vt0 GROUP BY vt0.c1, vt0.c2, rt0.c4;
SELECT rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c3;
SELECT ALL rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c3 HAVING CASE SUM(MIN(MAX(MAX(rt0.c2))))  WHEN COUNT(rt0.c2) THEN COUNT(MAX(rt0.c4)) ELSE TOTAL(0.4636327381400991) END UNION ALL SELECT rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c3 HAVING (NOT (CASE SUM(MIN(MAX(MAX(rt0.c2))))  WHEN COUNT(rt0.c2) THEN COUNT(MAX(rt0.c4)) ELSE TOTAL(0.4636327381400991) END)) UNION ALL SELECT rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c3 HAVING ((CASE SUM(MIN(MAX(MAX(rt0.c2))))  WHEN COUNT(rt0.c2) THEN COUNT(MAX(rt0.c4)) ELSE TOTAL(0.4636327381400991) END) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((~ (CAST(vt0.c0 AS TEXT)))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((~ (CAST(vt0.c0 AS TEXT)))))) UNION ALL SELECT * FROM vt0 WHERE ((((~ (CAST(vt0.c0 AS TEXT)))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c3 FROM rt0 WHERE (rt0.c0) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c3 FROM rt0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c3 FROM rt0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c3 FROM rt0;
SELECT ALL vt0.c2 FROM v0, vt0 GROUP BY vt0.c2;
SELECT ALL vt0.c2 FROM v0, vt0 WHERE (vt0.c0) GROUP BY vt0.c2 UNION SELECT vt0.c2 FROM v0, vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c2 UNION SELECT vt0.c2 FROM v0, vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c2;
SELECT ALL vt0.c2 FROM v0, vt0 GROUP BY vt0.c2;
SELECT rt0.c4, rt0.c3, rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c4, rt0.c3, rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c0, rt0.c2, rt0.c1 HAVING COUNT(*) UNION ALL SELECT rt0.c4, rt0.c3, rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c4, rt0.c3, rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c0, rt0.c2, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c4, rt0.c3, rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c4, rt0.c3, rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c0, rt0.c2, rt0.c1 HAVING COUNT(*) UNION ALL SELECT rt0.c4, rt0.c3, rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c4, rt0.c3, rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c0, rt0.c2, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c4, rt0.c3, rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c0, rt0.c2, rt0.c1;
SELECT ALL vt0.c0 FROM v0, vt0;
SELECT vt0.c0 FROM v0, vt0 WHERE (((((vt0.c2)OR(((v0.c0) BETWEEN (vt0.c2) AND (vt0.c0)))))AND(vt0.lid))) UNION ALL SELECT vt0.c0 FROM v0, vt0 WHERE ((NOT (((((vt0.c2)OR(((v0.c0) BETWEEN (vt0.c2) AND (vt0.c0)))))AND(vt0.lid))))) UNION ALL SELECT ALL vt0.c0 FROM v0, vt0 WHERE (((((((vt0.c2)OR(((v0.c0) BETWEEN (vt0.c2) AND (vt0.c0)))))AND(vt0.lid))) ISNULL));
SELECT ALL vt0.c0 FROM v0, vt0;
SELECT DISTINCT vt0.c1, rt0.c3, vt0.c2, rt0.c1, rt0.c0 FROM v0, rt0, vt0;
SELECT DISTINCT vt0.c1, rt0.c3, vt0.c2, rt0.c1, rt0.c0 FROM v0, rt0, vt0 WHERE (CAST(((vt0.c0) IS FALSE) AS INTEGER)) UNION SELECT DISTINCT vt0.c1, rt0.c3, vt0.c2, rt0.c1, rt0.c0 FROM v0, rt0, vt0 WHERE ((NOT (CAST(((vt0.c0) IS FALSE) AS INTEGER)))) UNION SELECT DISTINCT vt0.c1, rt0.c3, vt0.c2, rt0.c1, rt0.c0 FROM v0, rt0, vt0 WHERE (((CAST(((vt0.c0) IS FALSE) AS INTEGER)) ISNULL));
SELECT DISTINCT vt0.c1, rt0.c3, vt0.c2, rt0.c1, rt0.c0 FROM v0, rt0, vt0;
SELECT ALL vt0.c1, vt0.lid, v0.c0, vt0.c2 FROM vt0 INNER JOIN v0 ON ((((v0.c0) IS TRUE)) NOTNULL) GROUP BY vt0.c1, vt0.lid, v0.c0, vt0.c2;
SELECT vt0.c1, vt0.lid, v0.c0, vt0.c2 FROM vt0 INNER JOIN v0 ON ((((v0.c0) IS TRUE)) NOTNULL) WHERE (((((vt0.c0)IS NOT(vt0.c2)))|(vt0.lid COLLATE RTRIM))) GROUP BY vt0.c1, vt0.lid, v0.c0, vt0.c2 UNION SELECT vt0.c1, vt0.lid, v0.c0, vt0.c2 FROM vt0 INNER JOIN v0 ON ((((v0.c0) IS TRUE)) NOTNULL) WHERE ((NOT (((((vt0.c0)IS NOT(vt0.c2)))|(vt0.lid COLLATE RTRIM))))) GROUP BY vt0.c1, vt0.lid, v0.c0, vt0.c2 UNION SELECT vt0.c1, vt0.lid, v0.c0, vt0.c2 FROM vt0 INNER JOIN v0 ON ((((v0.c0) IS TRUE)) NOTNULL) WHERE (((((((vt0.c0)IS NOT(vt0.c2)))|(vt0.lid COLLATE RTRIM))) ISNULL)) GROUP BY vt0.c1, vt0.lid, v0.c0, vt0.c2;
SELECT ALL vt0.c1, vt0.lid, v0.c0, vt0.c2 FROM vt0 INNER JOIN v0 ON ((((v0.c0) IS TRUE)) NOTNULL) GROUP BY vt0.c1, vt0.lid, v0.c0, vt0.c2;
SELECT vt0.c2, rt0.c3, rt0.c1, rt0.c4, v0.c0, vt0.c1, vt0.c0, rt0.c2 FROM v0, rt0, vt0 GROUP BY vt0.c2, rt0.c3, rt0.c1, rt0.c4, v0.c0, vt0.c1, vt0.c0, rt0.c2;
SELECT ALL vt0.c2, rt0.c3, rt0.c1, rt0.c4, v0.c0, vt0.c1, vt0.c0, rt0.c2 FROM v0, rt0, vt0 GROUP BY vt0.c2, rt0.c3, rt0.c1, rt0.c4, v0.c0, vt0.c1, vt0.c0, rt0.c2 HAVING TOTAL(((v0.c0) NOTNULL)) UNION ALL SELECT vt0.c2, rt0.c3, rt0.c1, rt0.c4, v0.c0, vt0.c1, vt0.c0, rt0.c2 FROM v0, rt0, vt0 GROUP BY vt0.c2, rt0.c3, rt0.c1, rt0.c4, v0.c0, vt0.c1, vt0.c0, rt0.c2 HAVING (NOT (TOTAL(((v0.c0) NOTNULL)))) UNION ALL SELECT ALL vt0.c2, rt0.c3, rt0.c1, rt0.c4, v0.c0, vt0.c1, vt0.c0, rt0.c2 FROM v0, rt0, vt0 GROUP BY vt0.c2, rt0.c3, rt0.c1, rt0.c4, v0.c0, vt0.c1, vt0.c0, rt0.c2 HAVING ((TOTAL(((v0.c0) NOTNULL))) ISNULL);
SELECT vt0.c2, rt0.c3, rt0.c1, rt0.c4, v0.c0, vt0.c1, vt0.c0, rt0.c2 FROM v0, rt0, vt0 GROUP BY vt0.c2, rt0.c3, rt0.c1, rt0.c4, v0.c0, vt0.c1, vt0.c0, rt0.c2;
SELECT ALL vt0.c2, rt0.c3, rt0.c1, rt0.c4, v0.c0, vt0.c1, vt0.c0, rt0.c2 FROM v0, rt0, vt0 GROUP BY vt0.c2, rt0.c3, rt0.c1, rt0.c4, v0.c0, vt0.c1, vt0.c0, rt0.c2 HAVING TOTAL(((v0.c0) NOTNULL)) UNION ALL SELECT vt0.c2, rt0.c3, rt0.c1, rt0.c4, v0.c0, vt0.c1, vt0.c0, rt0.c2 FROM v0, rt0, vt0 GROUP BY vt0.c2, rt0.c3, rt0.c1, rt0.c4, v0.c0, vt0.c1, vt0.c0, rt0.c2 HAVING (NOT (TOTAL(((v0.c0) NOTNULL)))) UNION ALL SELECT ALL vt0.c2, rt0.c3, rt0.c1, rt0.c4, v0.c0, vt0.c1, vt0.c0, rt0.c2 FROM v0, rt0, vt0 GROUP BY vt0.c2, rt0.c3, rt0.c1, rt0.c4, v0.c0, vt0.c1, vt0.c0, rt0.c2 HAVING ((TOTAL(((v0.c0) NOTNULL))) ISNULL);
SELECT vt0.c2, rt0.c3, rt0.c1, rt0.c4, v0.c0, vt0.c1, vt0.c0, rt0.c2 FROM v0, rt0, vt0 GROUP BY vt0.c2, rt0.c3, rt0.c1, rt0.c4, v0.c0, vt0.c1, vt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, vt0.lid, vt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON NULL;
SELECT rt0.c1, rt0.c0, vt0.lid, vt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON NULL WHERE (((((rt0.c0) NOTNULL))=((rt0.c2 IN ())))) UNION ALL SELECT rt0.c1, rt0.c0, vt0.lid, vt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON NULL WHERE ((NOT (((((rt0.c0) NOTNULL))==((rt0.c2 IN ())))))) UNION ALL SELECT rt0.c1, rt0.c0, vt0.lid, vt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON NULL WHERE (((((((rt0.c0) NOTNULL))=((rt0.c2 IN ())))) ISNULL));
SELECT ALL rt0.c1, rt0.c0, vt0.lid, vt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON NULL;
SELECT DISTINCT * FROM v0 FULL OUTER JOIN vt0 ON ((LTRIM(-4.66612154E8)) IS TRUE) LEFT OUTER JOIN rt0 ON 0.6754175057445785;
SELECT DISTINCT * FROM v0 FULL OUTER JOIN vt0 ON ((LTRIM(-4.66612154E8)) IS TRUE) LEFT OUTER JOIN rt0 ON 0.6754175057445785 WHERE ('673499371') UNION SELECT DISTINCT * FROM v0 FULL OUTER JOIN vt0 ON ((LTRIM(-4.66612154E8)) IS TRUE) LEFT OUTER JOIN rt0 ON 0.6754175057445785 WHERE ((NOT ('673499371'))) UNION SELECT DISTINCT * FROM v0 FULL OUTER JOIN vt0 ON ((LTRIM(-4.66612154E8)) IS TRUE) LEFT OUTER JOIN rt0 ON 0.6754175057445785 WHERE ((('673499371') ISNULL));
SELECT DISTINCT * FROM v0 FULL OUTER JOIN vt0 ON ((LTRIM(-4.66612154E8)) IS TRUE) LEFT OUTER JOIN rt0 ON 0.6754175057445785;
SELECT vt0.c0, rt0.c2, vt0.c1 FROM v0, vt0, rt0 GROUP BY vt0.c0, rt0.c2, vt0.c1;
SELECT ALL vt0.c0, rt0.c2, vt0.c1 FROM v0, vt0, rt0 WHERE (623204635 COLLATE BINARY) GROUP BY vt0.c0, rt0.c2, vt0.c1 UNION SELECT vt0.c0, rt0.c2, vt0.c1 FROM v0, vt0, rt0 WHERE ((NOT (623204635 COLLATE BINARY))) GROUP BY vt0.c0, rt0.c2, vt0.c1 UNION SELECT ALL vt0.c0, rt0.c2, vt0.c1 FROM v0, vt0, rt0 WHERE (((623204635 COLLATE BINARY) ISNULL)) GROUP BY vt0.c0, rt0.c2, vt0.c1;
SELECT vt0.c0, rt0.c2, vt0.c1 FROM v0, vt0, rt0 GROUP BY vt0.c0, rt0.c2, vt0.c1;
SELECT vt0.lid, v0.c0, vt0.c1, vt0.c2, vt0.c0 FROM vt0, v0 GROUP BY vt0.lid, v0.c0, vt0.c1, vt0.c2, vt0.c0;
SELECT vt0.lid, v0.c0, vt0.c1, vt0.c2, vt0.c0 FROM vt0, v0 GROUP BY vt0.lid, v0.c0, vt0.c1, vt0.c2, vt0.c0 HAVING HEX(MAX(AVG(MIN(AVG(vt0.c1))))) UNION ALL SELECT vt0.lid, v0.c0, vt0.c1, vt0.c2, vt0.c0 FROM vt0, v0 GROUP BY vt0.lid, v0.c0, vt0.c1, vt0.c2, vt0.c0 HAVING (NOT (HEX(MAX(AVG(MIN(AVG(vt0.c1))))))) UNION ALL SELECT vt0.lid, v0.c0, vt0.c1, vt0.c2, vt0.c0 FROM vt0, v0 GROUP BY vt0.lid, v0.c0, vt0.c1, vt0.c2, vt0.c0 HAVING ((HEX(MAX(AVG(MIN(AVG(vt0.c1)))))) ISNULL);
SELECT ALL * FROM v0, vt0, rt0;
SELECT * FROM v0, vt0, rt0 WHERE (((((ABS(DISTINCT vt0.c0))AND((+ (rt0.c0)))))OR(((rt0.c4)IS NOT(rt0.c0))))) UNION ALL SELECT ALL * FROM v0, vt0, rt0 WHERE ((NOT (((((ABS(DISTINCT vt0.c0))AND((+ (rt0.c0)))))OR(((rt0.c4)IS NOT(rt0.c0))))))) UNION ALL SELECT ALL * FROM v0, vt0, rt0 WHERE (((((((ABS(DISTINCT vt0.c0))AND((+ (rt0.c0)))))OR(((rt0.c4)IS NOT(rt0.c0))))) ISNULL));
SELECT ALL * FROM v0, vt0, rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (x'') UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (x''))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((x'') ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL vt0.lid, vt0.c1, v0.c0, vt0.c2 FROM v0, vt0 GROUP BY vt0.lid, vt0.c1, v0.c0, vt0.c2;
SELECT ALL vt0.lid, vt0.c1, v0.c0, vt0.c2 FROM v0, vt0 WHERE ('-1990385456') GROUP BY vt0.lid, vt0.c1, v0.c0, vt0.c2 UNION SELECT vt0.lid, vt0.c1, v0.c0, vt0.c2 FROM v0, vt0 WHERE ((NOT ('-1990385456'))) GROUP BY vt0.lid, vt0.c1, v0.c0, vt0.c2 UNION SELECT vt0.lid, vt0.c1, v0.c0, vt0.c2 FROM v0, vt0 WHERE ((('-1990385456') ISNULL)) GROUP BY vt0.lid, vt0.c1, v0.c0, vt0.c2;
SELECT ALL vt0.lid, vt0.c1, v0.c0, vt0.c2 FROM v0, vt0 GROUP BY vt0.lid, vt0.c1, v0.c0, vt0.c2;
SELECT ALL v0.c0, rt0.c1 FROM v0 CROSS JOIN rt0 ON ((((CAST(rt0.c4 AS REAL))OR(json_patch(vt0.c0, vt0.c2))))OR(rt0.c3 COLLATE RTRIM)) INNER JOIN vt0 ON MAX(((vt0.lid) NOT NULL), CASE rt0.c1  WHEN v0.c0 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c2 WHEN vt0.lid THEN 0x4193294d END, ((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c3)), (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((v0.c0)))) GROUP BY v0.c0, rt0.c1;
SELECT v0.c0, rt0.c1 FROM v0 CROSS JOIN rt0 ON ((((CAST(rt0.c4 AS REAL))OR(json_patch(vt0.c0, vt0.c2))))OR(rt0.c3 COLLATE RTRIM)) INNER JOIN vt0 ON MAX(((vt0.lid) NOT NULL), CASE rt0.c1  WHEN v0.c0 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c2 WHEN vt0.lid THEN 0X4193294d END, ((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c3)), (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((v0.c0)))) GROUP BY v0.c0, rt0.c1 HAVING ((COUNT(*))LIKE((((((((('')OR(vt0.c1)))AND(SUM(vt0.lid))))AND(TOTAL(MIN(rt0.c4)))))AND(vt0.lid)))) UNION ALL SELECT ALL v0.c0, rt0.c1 FROM v0 CROSS JOIN rt0 ON ((((CAST(rt0.c4 AS REAL))OR(json_patch(vt0.c0, vt0.c2))))OR(rt0.c3 COLLATE RTRIM)) INNER JOIN vt0 ON MAX(((vt0.lid) NOT NULL), CASE rt0.c1  WHEN v0.c0 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c2 WHEN vt0.lid THEN 0x4193294d END, ((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c3)), (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((v0.c0)))) GROUP BY v0.c0, rt0.c1 HAVING (NOT (((COUNT(*))LIKE((((((((('')OR(vt0.c1)))AND(SUM(vt0.lid))))AND(TOTAL(MIN(rt0.c4)))))AND(vt0.lid)))))) UNION ALL SELECT ALL v0.c0, rt0.c1 FROM v0 CROSS JOIN rt0 ON ((((CAST(rt0.c4 AS REAL))OR(json_patch(vt0.c0, vt0.c2))))OR(rt0.c3 COLLATE RTRIM)) INNER JOIN vt0 ON MAX(((vt0.lid) NOT NULL), CASE rt0.c1  WHEN v0.c0 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c2 WHEN vt0.lid THEN 0X4193294d END, ((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c3)), (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((v0.c0)))) GROUP BY v0.c0, rt0.c1 HAVING ((((COUNT(*))LIKE((((((((('')OR(vt0.c1)))AND(SUM(vt0.lid))))AND(TOTAL(MIN(rt0.c4)))))AND(vt0.lid))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE ((NOT ((rt0.c1 IN ())))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((NOT ((rt0.c1 IN ())))))) UNION ALL SELECT * FROM rt0 WHERE ((((NOT ((rt0.c1 IN ())))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE (((HEX(vt0.c0)) IS FALSE)) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT (((HEX(vt0.c0)) IS FALSE)))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE (((((HEX(vt0.c0)) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT ALL rt0.c3, vt0.lid, vt0.c1 FROM vt0, v0, rt0 GROUP BY rt0.c3, vt0.lid, vt0.c1;
SELECT ALL rt0.c3, vt0.lid, vt0.c1 FROM vt0, v0, rt0 WHERE ((((rt0.c3 IN (vt0.c2)))/(NULLIF(rt0.c2, rt0.c2)))) GROUP BY rt0.c3, vt0.lid, vt0.c1 UNION SELECT rt0.c3, vt0.lid, vt0.c1 FROM vt0, v0, rt0 WHERE ((NOT ((((rt0.c3 IN (vt0.c2)))/(NULLIF(rt0.c2, rt0.c2)))))) GROUP BY rt0.c3, vt0.lid, vt0.c1 UNION SELECT ALL rt0.c3, vt0.lid, vt0.c1 FROM vt0, v0, rt0 WHERE ((((((rt0.c3 IN (vt0.c2)))/(NULLIF(rt0.c2, rt0.c2)))) ISNULL)) GROUP BY rt0.c3, vt0.lid, vt0.c1;
SELECT ALL rt0.c3, vt0.lid, vt0.c1 FROM vt0, v0, rt0 GROUP BY rt0.c3, vt0.lid, vt0.c1;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((+ (SUM(TOTAL(v0.c0))))) NOT BETWEEN (((((v0.c0)OR(v0.c0)))AND(GROUP_CONCAT(v0.c0)))) AND (((MIN(COUNT(*)))%(v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((((+ (SUM(TOTAL(v0.c0))))) NOT BETWEEN (((((v0.c0)OR(v0.c0)))AND(GROUP_CONCAT(v0.c0)))) AND (((MIN(COUNT(*)))%(v0.c0)))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((+ (SUM(TOTAL(v0.c0))))) NOT BETWEEN (((((v0.c0)OR(v0.c0)))AND(GROUP_CONCAT(v0.c0)))) AND (((MIN(COUNT(*)))%(v0.c0))))) ISNULL);
SELECT ALL vt0.c2, rt0.c4, rt0.c3, rt0.c0, vt0.c0, rt0.c1, vt0.c1, vt0.lid FROM rt0, vt0 NOT INDEXED, v0;
SELECT vt0.c2, rt0.c4, rt0.c3, rt0.c0, vt0.c0, rt0.c1, vt0.c1, vt0.lid FROM rt0, vt0, v0 WHERE ((((- (rt0.c2)))LIKE(CASE WHEN rt0.c1 THEN vt0.c1 END))) UNION ALL SELECT ALL vt0.c2, rt0.c4, rt0.c3, rt0.c0, vt0.c0, rt0.c1, vt0.c1, vt0.lid FROM rt0, vt0, v0 WHERE ((NOT ((((- (rt0.c2)))LIKE(CASE WHEN rt0.c1 THEN vt0.c1 END))))) UNION ALL SELECT vt0.c2, rt0.c4, rt0.c3, rt0.c0, vt0.c0, rt0.c1, vt0.c1, vt0.lid FROM rt0, vt0, v0 WHERE ((((((- (rt0.c2)))LIKE(CASE WHEN rt0.c1 THEN vt0.c1 END))) ISNULL));
SELECT ALL vt0.c2, rt0.c4, rt0.c3, rt0.c0, vt0.c0, rt0.c1, vt0.c1, vt0.lid FROM rt0, vt0 NOT INDEXED, v0;
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE (((((((((((((((vt0.lid)|(v0.c0)))AND(CASE WHEN v0.c0 THEN vt0.c2 ELSE vt0.c2 END)))OR(vt0.c2)))AND((~ (vt0.c2)))))AND(CAST(vt0.c0 AS TEXT))))AND((vt0.lid IN ()))))OR(((((((((vt0.c0)AND(vt0.c2)))OR(v0.c0)))AND(vt0.lid)))AND(vt0.lid))))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT (((((((((((((((vt0.lid)|(v0.c0)))AND(CASE WHEN v0.c0 THEN vt0.c2 ELSE vt0.c2 END)))OR(vt0.c2)))AND((~ (vt0.c2)))))AND(CAST(vt0.c0 AS TEXT))))AND((vt0.lid IN ()))))OR(((((((((vt0.c0)AND(vt0.c2)))OR(v0.c0)))AND(vt0.lid)))AND(vt0.lid))))))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE (((((((((((((((((vt0.lid)|(v0.c0)))AND(CASE WHEN v0.c0 THEN vt0.c2 ELSE vt0.c2 END)))OR(vt0.c2)))AND((~ (vt0.c2)))))AND(CAST(vt0.c0 AS TEXT))))AND((vt0.lid IN ()))))OR(((((((((vt0.c0)AND(vt0.c2)))OR(v0.c0)))AND(vt0.lid)))AND(vt0.lid))))) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, ((v0.c0) NOT NULL), (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))))!=(((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))), CAST(v0.c0 AS INTEGER), v0.c0)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, ((v0.c0) NOT NULL), (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))))!=(((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))), CAST(v0.c0 AS INTEGER), v0.c0)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, ((v0.c0) NOT NULL), (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))))!=(((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))), CAST(v0.c0 AS INTEGER), v0.c0)))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c2, rt0.c4, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c1, rt0.c3;
SELECT rt0.c2, rt0.c4, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c1, rt0.c3 HAVING COUNT(*) UNION ALL SELECT rt0.c2, rt0.c4, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c1, rt0.c3 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c2, rt0.c4, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c1, rt0.c3 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c2, rt0.c4, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c1, rt0.c3;
SELECT rt0.c2, rt0.c4, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c1, rt0.c3 HAVING COUNT(*) UNION ALL SELECT rt0.c2, rt0.c4, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c1, rt0.c3 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c2, rt0.c4, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c1, rt0.c3 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c2, rt0.c4, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c1, rt0.c3;
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (NULL) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (NULL))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((NULL) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CASE WHEN 2.144412601E9 COLLATE NOCASE THEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)) WHEN NULL THEN TRIM(DISTINCT rt0.c0) WHEN ((rt0.c1)GLOB(rt0.c4)) THEN NULL WHEN NULL THEN CASE rt0.c4  WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c4 END WHEN ((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c0)) THEN ((x'c6ad')<>(rt0.c2)) END) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CASE WHEN 2.144412601E9 COLLATE NOCASE THEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)) WHEN NULL THEN TRIM(DISTINCT rt0.c0) WHEN ((rt0.c1)GLOB(rt0.c4)) THEN NULL WHEN NULL THEN CASE rt0.c4  WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c4 END WHEN ((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c0)) THEN ((x'c6ad')!=(rt0.c2)) END))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CASE WHEN 2.144412601E9 COLLATE NOCASE THEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)) WHEN NULL THEN TRIM(DISTINCT rt0.c0) WHEN ((rt0.c1)GLOB(rt0.c4)) THEN NULL WHEN NULL THEN CASE rt0.c4  WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c4 END WHEN ((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c0)) THEN ((x'c6ad')!=(rt0.c2)) END) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT vt0.lid FROM vt0 GROUP BY vt0.lid;
SELECT ALL vt0.lid FROM vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.lid)))-(((vt0.c2)+(vt0.c0))))) GROUP BY vt0.lid UNION SELECT vt0.lid FROM vt0 WHERE ((NOT (((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.lid)))-(((vt0.c2)+(vt0.c0))))))) GROUP BY vt0.lid UNION SELECT ALL vt0.lid FROM vt0 WHERE (((((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.lid)))-(((vt0.c2)+(vt0.c0))))) ISNULL)) GROUP BY vt0.lid;
SELECT vt0.lid FROM vt0 GROUP BY vt0.lid;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (CAST(v0.c0 AS INTEGER))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((NOT (CAST(v0.c0 AS INTEGER))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((NOT (CAST(v0.c0 AS INTEGER)))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (CAST(v0.c0 AS INTEGER))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((NOT (CAST(v0.c0 AS INTEGER))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((NOT (CAST(v0.c0 AS INTEGER)))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT MIN((((0.3745147100064756))<=((CASE vt0.c0  WHEN rt0.c0 THEN vt0.lid WHEN 0.14767580009615922 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c3 END)))) FROM v0, rt0, vt0;
SELECT rt0.c4, rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c4, rt0.c2, rt0.c1 FROM rt0 WHERE (CASE WHEN ((((rt0.c0)OR(-1.950868088E9)))AND(rt0.c1)) THEN UPPER(rt0.c0) WHEN (- (rt0.c1)) THEN (((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))) WHEN rt0.c0 COLLATE BINARY THEN rt0.c4 COLLATE RTRIM ELSE ((rt0.c0)*(rt0.c2)) END) UNION ALL SELECT rt0.c4, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (CASE WHEN ((((rt0.c0)OR(-1.950868088E9)))AND(rt0.c1)) THEN UPPER(rt0.c0) WHEN (- (rt0.c1)) THEN (((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))) WHEN rt0.c0 COLLATE BINARY THEN rt0.c4 COLLATE RTRIM ELSE ((rt0.c0)*(rt0.c2)) END))) UNION ALL SELECT rt0.c4, rt0.c2, rt0.c1 FROM rt0 WHERE (((CASE WHEN ((((rt0.c0)OR(-1.950868088E9)))AND(rt0.c1)) THEN UPPER(rt0.c0) WHEN (- (rt0.c1)) THEN (((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))) WHEN rt0.c0 COLLATE BINARY THEN rt0.c4 COLLATE RTRIM ELSE ((rt0.c0)*(rt0.c2)) END) ISNULL));
SELECT rt0.c4, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c3, v0.c0 FROM v0, rt0;
SELECT DISTINCT rt0.c2, rt0.c3, v0.c0 FROM v0, rt0 WHERE ((((rt0.c1 IN ()))||(CASE v0.c0  WHEN '!vo' THEN rt0.c3 ELSE v0.c0 END))) UNION SELECT DISTINCT rt0.c2, rt0.c3, v0.c0 FROM v0, rt0 WHERE ((NOT ((((rt0.c1 IN ()))||(CASE v0.c0  WHEN '!vo' THEN rt0.c3 ELSE v0.c0 END))))) UNION SELECT DISTINCT rt0.c2, rt0.c3, v0.c0 FROM v0, rt0 WHERE ((((((rt0.c1 IN ()))||(CASE v0.c0  WHEN '!vo' THEN rt0.c3 ELSE v0.c0 END))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c3, v0.c0 FROM v0, rt0;
SELECT rt0.c2, rt0.c3, rt0.c4, rt0.c0, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c3, rt0.c4, rt0.c0, rt0.c1, v0.c0;
SELECT rt0.c2, rt0.c3, rt0.c4, rt0.c0, rt0.c1, v0.c0 FROM v0, rt0 WHERE (CASE WHEN (((rt0.c0, rt0.c3, rt0.c3))>=((v0.c0, x'1908', rt0.c2))) THEN 'pALtO&iv' WHEN CAST(rt0.c4 AS NUMERIC) THEN ((rt0.c2)IS NOT(rt0.c3)) WHEN x'4b0e' THEN rt0.c4 COLLATE NOCASE ELSE ((((v0.c0)OR(rt0.c2)))AND(v0.c0)) END) GROUP BY rt0.c2, rt0.c3, rt0.c4, rt0.c0, rt0.c1, v0.c0 UNION SELECT rt0.c2, rt0.c3, rt0.c4, rt0.c0, rt0.c1, v0.c0 FROM v0, rt0 WHERE ((NOT (CASE WHEN (((rt0.c0, rt0.c3, rt0.c3))>=((v0.c0, x'1908', rt0.c2))) THEN 'pALtO&iv' WHEN CAST(rt0.c4 AS NUMERIC) THEN ((rt0.c2)IS NOT(rt0.c3)) WHEN x'4b0e' THEN rt0.c4 COLLATE NOCASE ELSE ((((v0.c0)OR(rt0.c2)))AND(v0.c0)) END))) GROUP BY rt0.c2, rt0.c3, rt0.c4, rt0.c0, rt0.c1, v0.c0 UNION SELECT ALL rt0.c2, rt0.c3, rt0.c4, rt0.c0, rt0.c1, v0.c0 FROM v0, rt0 WHERE (((CASE WHEN (((rt0.c0, rt0.c3, rt0.c3))>=((v0.c0, x'1908', rt0.c2))) THEN 'pALtO&iv' WHEN CAST(rt0.c4 AS NUMERIC) THEN ((rt0.c2)IS NOT(rt0.c3)) WHEN x'4b0e' THEN rt0.c4 COLLATE NOCASE ELSE ((((v0.c0)OR(rt0.c2)))AND(v0.c0)) END) ISNULL)) GROUP BY rt0.c2, rt0.c3, rt0.c4, rt0.c0, rt0.c1, v0.c0;
SELECT rt0.c2, rt0.c3, rt0.c4, rt0.c0, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c3, rt0.c4, rt0.c0, rt0.c1, v0.c0;
SELECT vt0.c0, vt0.lid FROM vt0 FULL OUTER JOIN v0 ON (((vt0.c2 IN ()))/((((vt0.c1))<=((vt0.c2))))) GROUP BY vt0.c0, vt0.lid;
SELECT ALL vt0.c0, vt0.lid FROM vt0 FULL OUTER JOIN v0 ON (((vt0.c2 IN ()))/((((vt0.c1))<=((vt0.c2))))) GROUP BY vt0.c0, vt0.lid HAVING ((SUM(GROUP_CONCAT(vt0.c2))) BETWEEN (CASE WHEN vt0.lid THEN AVG('689242998') ELSE TOTAL(0.8780711440313692) END) AND (((((AVG(AVG(TOTAL(COUNT(AVG(SUM(AVG(SUM(COUNT(MIN(vt0.lid)))))))))))OR(TOTAL(MAX(vt0.lid)))))OR(vt0.lid)))) UNION ALL SELECT vt0.c0, vt0.lid FROM vt0 FULL OUTER JOIN v0 ON (((vt0.c2 IN ()))/((((vt0.c1))<=((vt0.c2))))) GROUP BY vt0.c0, vt0.lid HAVING (NOT (((SUM(GROUP_CONCAT(vt0.c2))) BETWEEN (CASE WHEN vt0.lid THEN AVG('689242998') ELSE TOTAL(0.8780711440313692) END) AND (((((AVG(AVG(TOTAL(COUNT(AVG(SUM(AVG(SUM(COUNT(MIN(vt0.lid)))))))))))OR(TOTAL(MAX(vt0.lid)))))OR(vt0.lid)))))) UNION ALL SELECT vt0.c0, vt0.lid FROM vt0 FULL OUTER JOIN v0 ON (((vt0.c2 IN ()))/((((vt0.c1))<=((vt0.c2))))) GROUP BY vt0.c0, vt0.lid HAVING ((((SUM(GROUP_CONCAT(vt0.c2))) BETWEEN (CASE WHEN vt0.lid THEN AVG('689242998') ELSE TOTAL(0.8780711440313692) END) AND (((((AVG(AVG(TOTAL(COUNT(AVG(SUM(AVG(SUM(COUNT(MIN(vt0.lid)))))))))))OR(TOTAL(MAX(vt0.lid)))))OR(vt0.lid))))) ISNULL);
SELECT ALL * FROM vt0, rt0, v0;
SELECT * FROM vt0, rt0, v0 WHERE (vt0.c2) UNION ALL SELECT * FROM vt0, rt0, v0 WHERE ((NOT (vt0.c2))) UNION ALL SELECT ALL * FROM vt0, rt0, v0 WHERE (((vt0.c2) ISNULL));
SELECT ALL * FROM vt0, rt0, v0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((((((vt0.c2)AND(vt0.c2)))OR(vt0.lid)))OR(vt0.c1)))OR(((vt0.lid)GLOB(vt0.c2))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((((((vt0.c2)AND(vt0.c2)))OR(vt0.lid)))OR(vt0.c1)))OR(((vt0.lid)GLOB(vt0.c2))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((((((vt0.c2)AND(vt0.c2)))OR(vt0.lid)))OR(vt0.c1)))OR(((vt0.lid)GLOB(vt0.c2))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((((v0.c0 IN ()))+(CAST(v0.c0 AS REAL)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((((v0.c0 IN ()))+(CAST(v0.c0 AS REAL)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((((v0.c0 IN ()))+(CAST(v0.c0 AS REAL)))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c1, rt0.c4, v0.c0, vt0.c0, vt0.c1, rt0.c3, vt0.lid, rt0.c2, rt0.c0, vt0.c2 FROM v0, rt0, vt0 GROUP BY rt0.c1, rt0.c4, v0.c0, vt0.c0, vt0.c1, rt0.c3, vt0.lid, rt0.c2, rt0.c0, vt0.c2;
SELECT ALL rt0.c1, rt0.c4, v0.c0, vt0.c0, vt0.c1, rt0.c3, vt0.lid, rt0.c2, rt0.c0, vt0.c2 FROM v0, rt0, vt0 GROUP BY rt0.c1, rt0.c4, v0.c0, vt0.c0, vt0.c1, rt0.c3, vt0.lid, rt0.c2, rt0.c0, vt0.c2 HAVING CAST(TOTAL(rt0.c3) AS BLOB) UNION ALL SELECT ALL rt0.c1, rt0.c4, v0.c0, vt0.c0, vt0.c1, rt0.c3, vt0.lid, rt0.c2, rt0.c0, vt0.c2 FROM v0, rt0, vt0 GROUP BY rt0.c1, rt0.c4, v0.c0, vt0.c0, vt0.c1, rt0.c3, vt0.lid, rt0.c2, rt0.c0, vt0.c2 HAVING (NOT (CAST(TOTAL(rt0.c3) AS BLOB))) UNION ALL SELECT ALL rt0.c1, rt0.c4, v0.c0, vt0.c0, vt0.c1, rt0.c3, vt0.lid, rt0.c2, rt0.c0, vt0.c2 FROM v0, rt0, vt0 GROUP BY rt0.c1, rt0.c4, v0.c0, vt0.c0, vt0.c1, rt0.c3, vt0.lid, rt0.c2, rt0.c0, vt0.c2 HAVING ((CAST(TOTAL(rt0.c3) AS BLOB)) ISNULL);
SELECT ALL rt0.c1, rt0.c4, v0.c0, vt0.c0, vt0.c1, rt0.c3, vt0.lid, rt0.c2, rt0.c0, vt0.c2 FROM v0, rt0, vt0 GROUP BY rt0.c1, rt0.c4, v0.c0, vt0.c0, vt0.c1, rt0.c3, vt0.lid, rt0.c2, rt0.c0, vt0.c2;
SELECT ALL rt0.c1, rt0.c4, v0.c0, vt0.c0, vt0.c1, rt0.c3, vt0.lid, rt0.c2, rt0.c0, vt0.c2 FROM v0, rt0, vt0 GROUP BY rt0.c1, rt0.c4, v0.c0, vt0.c0, vt0.c1, rt0.c3, vt0.lid, rt0.c2, rt0.c0, vt0.c2 HAVING CAST(TOTAL(rt0.c3) AS BLOB) UNION ALL SELECT ALL rt0.c1, rt0.c4, v0.c0, vt0.c0, vt0.c1, rt0.c3, vt0.lid, rt0.c2, rt0.c0, vt0.c2 FROM v0, rt0, vt0 GROUP BY rt0.c1, rt0.c4, v0.c0, vt0.c0, vt0.c1, rt0.c3, vt0.lid, rt0.c2, rt0.c0, vt0.c2 HAVING (NOT (CAST(TOTAL(rt0.c3) AS BLOB))) UNION ALL SELECT ALL rt0.c1, rt0.c4, v0.c0, vt0.c0, vt0.c1, rt0.c3, vt0.lid, rt0.c2, rt0.c0, vt0.c2 FROM v0, rt0, vt0 GROUP BY rt0.c1, rt0.c4, v0.c0, vt0.c0, vt0.c1, rt0.c3, vt0.lid, rt0.c2, rt0.c0, vt0.c2 HAVING ((CAST(TOTAL(rt0.c3) AS BLOB)) ISNULL);
SELECT ALL rt0.c1, rt0.c4, v0.c0, vt0.c0, vt0.c1, rt0.c3, vt0.lid, rt0.c2, rt0.c0, vt0.c2 FROM v0, rt0, vt0 GROUP BY rt0.c1, rt0.c4, v0.c0, vt0.c0, vt0.c1, rt0.c3, vt0.lid, rt0.c2, rt0.c0, vt0.c2;
SELECT rt0.c4, v0.c0, rt0.c1 FROM v0 NATURAL JOIN rt0;
SELECT rt0.c4, v0.c0, rt0.c1 FROM v0 NATURAL JOIN rt0 WHERE ((~ (((v0.c0)LIKE(v0.c0))))) UNION ALL SELECT ALL rt0.c4, v0.c0, rt0.c1 FROM v0 NATURAL JOIN rt0 WHERE ((NOT ((~ (((v0.c0)LIKE(v0.c0))))))) UNION ALL SELECT rt0.c4, v0.c0, rt0.c1 FROM v0 NATURAL JOIN rt0 WHERE ((((~ (((v0.c0)LIKE(v0.c0))))) ISNULL));
SELECT rt0.c4, v0.c0, rt0.c1 FROM v0 NATURAL JOIN rt0;
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE (((((((((((((vt0.c2)OR(vt0.c0)))OR(v0.c0)))OR(vt0.c2 COLLATE NOCASE)))OR(((vt0.c1) NOT BETWEEN (v0.c0) AND (x'')))))AND(CAST(vt0.c0 AS REAL))))AND(v0.c0 COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT (((((((((((((vt0.c2)OR(vt0.c0)))OR(v0.c0)))OR(vt0.c2 COLLATE NOCASE)))OR(((vt0.c1) NOT BETWEEN (v0.c0) AND (x'')))))AND(CAST(vt0.c0 AS REAL))))AND(v0.c0 COLLATE RTRIM))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE (((((((((((((((vt0.c2)OR(vt0.c0)))OR(v0.c0)))OR(vt0.c2 COLLATE NOCASE)))OR(((vt0.c1) NOT BETWEEN (v0.c0) AND (x'')))))AND(CAST(vt0.c0 AS REAL))))AND(v0.c0 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT rt0.c1, v0.c0, rt0.c3 FROM rt0, v0 GROUP BY rt0.c1, v0.c0, rt0.c3;
SELECT rt0.c1, v0.c0, rt0.c3 FROM rt0, v0 WHERE (CAST(((0.8004935085920641)IS NOT(rt0.c1)) AS REAL)) GROUP BY rt0.c1, v0.c0, rt0.c3 UNION SELECT rt0.c1, v0.c0, rt0.c3 FROM rt0, v0 WHERE ((NOT (CAST(((0.8004935085920641)IS NOT(rt0.c1)) AS REAL)))) GROUP BY rt0.c1, v0.c0, rt0.c3 UNION SELECT rt0.c1, v0.c0, rt0.c3 FROM rt0, v0 WHERE (((CAST(((0.8004935085920641)IS NOT(rt0.c1)) AS REAL)) ISNULL)) GROUP BY rt0.c1, v0.c0, rt0.c3;
SELECT rt0.c1, v0.c0, rt0.c3 FROM rt0, v0 GROUP BY rt0.c1, v0.c0, rt0.c3;
SELECT ALL vt0.c2, vt0.lid, rt0.c0, vt0.c0, rt0.c3, rt0.c2 FROM v0, vt0, rt0 GROUP BY vt0.c2, vt0.lid, rt0.c0, vt0.c0, rt0.c3, rt0.c2;
SELECT vt0.c2, vt0.lid, rt0.c0, vt0.c0, rt0.c3, rt0.c2 FROM v0, vt0, rt0 GROUP BY vt0.c2, vt0.lid, rt0.c0, vt0.c0, rt0.c3, rt0.c2 HAVING GROUP_CONCAT(MIN(TOTAL(vt0.lid))) UNION ALL SELECT ALL vt0.c2, vt0.lid, rt0.c0, vt0.c0, rt0.c3, rt0.c2 FROM v0, vt0, rt0 GROUP BY vt0.c2, vt0.lid, rt0.c0, vt0.c0, rt0.c3, rt0.c2 HAVING (NOT (GROUP_CONCAT(MIN(TOTAL(vt0.lid))))) UNION ALL SELECT ALL vt0.c2, vt0.lid, rt0.c0, vt0.c0, rt0.c3, rt0.c2 FROM v0, vt0, rt0 GROUP BY vt0.c2, vt0.lid, rt0.c0, vt0.c0, rt0.c3, rt0.c2 HAVING ((GROUP_CONCAT(MIN(TOTAL(vt0.lid)))) ISNULL);
SELECT ALL * FROM rt0, v0;
SELECT ALL * FROM rt0, v0 WHERE ((((x'f4ca' IN (rt0.c2, rt0.c3))) ISNULL)) UNION ALL SELECT * FROM rt0, v0 WHERE ((NOT ((((x'f4ca' IN (rt0.c2, rt0.c3))) ISNULL)))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((((((x'f4ca' IN (rt0.c2, rt0.c3))) ISNULL)) ISNULL));
SELECT ALL * FROM rt0, v0;
SELECT DISTINCT * FROM rt0 CROSS JOIN vt0 ON (~ (((rt0.c2)AND(rt0.c0))));
SELECT DISTINCT * FROM rt0 CROSS JOIN vt0 ON (~ (((rt0.c2)AND(rt0.c0)))) WHERE (ROUND((((vt0.c1)) BETWEEN ((rt0.c4)) AND ((rt0.c4))), (rt0.c4 IN ()))) UNION SELECT DISTINCT * FROM rt0 CROSS JOIN vt0 ON (~ (((rt0.c2)AND(rt0.c0)))) WHERE ((NOT (ROUND((((vt0.c1)) BETWEEN ((rt0.c4)) AND ((rt0.c4))), (rt0.c4 IN ()))))) UNION SELECT DISTINCT * FROM rt0 CROSS JOIN vt0 ON (~ (((rt0.c2)AND(rt0.c0)))) WHERE (((ROUND((((vt0.c1)) BETWEEN ((rt0.c4)) AND ((rt0.c4))), (rt0.c4 IN ()))) ISNULL));
SELECT DISTINCT * FROM rt0 CROSS JOIN vt0 ON (~ (((rt0.c2)AND(rt0.c0))));
SELECT rt0.c4, rt0.c0, rt0.c1 FROM v0, rt0 NATURAL JOIN vt0 GROUP BY rt0.c4, rt0.c0, rt0.c1;
SELECT rt0.c4, rt0.c0, rt0.c1 FROM v0, rt0 NATURAL JOIN vt0 WHERE (LOWER(((vt0.c0)*(vt0.lid)))) GROUP BY rt0.c4, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c4, rt0.c0, rt0.c1 FROM v0, rt0 NATURAL JOIN vt0 WHERE ((NOT (LOWER(((vt0.c0)*(vt0.lid)))))) GROUP BY rt0.c4, rt0.c0, rt0.c1 UNION SELECT rt0.c4, rt0.c0, rt0.c1 FROM v0, rt0 NATURAL JOIN vt0 WHERE (((LOWER(((vt0.c0)*(vt0.lid)))) ISNULL)) GROUP BY rt0.c4, rt0.c0, rt0.c1;
SELECT rt0.c4, rt0.c0, rt0.c1 FROM v0, rt0 NATURAL JOIN vt0 GROUP BY rt0.c4, rt0.c0, rt0.c1;
SELECT ALL vt0.c1, rt0.c4, vt0.c0, vt0.c2, vt0.lid, rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c1, rt0.c4, vt0.c0, vt0.c2, vt0.lid, rt0.c2, rt0.c0;
SELECT vt0.c1, rt0.c4, vt0.c0, vt0.c2, vt0.lid, rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c1, rt0.c4, vt0.c0, vt0.c2, vt0.lid, rt0.c2, rt0.c0 HAVING MIN(SUM(vt0.lid)) UNION ALL SELECT vt0.c1, rt0.c4, vt0.c0, vt0.c2, vt0.lid, rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c1, rt0.c4, vt0.c0, vt0.c2, vt0.lid, rt0.c2, rt0.c0 HAVING (NOT (MIN(SUM(vt0.lid)))) UNION ALL SELECT ALL vt0.c1, rt0.c4, vt0.c0, vt0.c2, vt0.lid, rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c1, rt0.c4, vt0.c0, vt0.c2, vt0.lid, rt0.c2, rt0.c0 HAVING ((MIN(SUM(vt0.lid))) ISNULL);
SELECT ALL rt0.c0 FROM rt0, vt0 FULL OUTER JOIN v0 ON ((CAST(rt0.c1 AS BLOB))<((((vt0.lid))<((rt0.c4)))));
SELECT ALL rt0.c0 FROM rt0, vt0 FULL OUTER JOIN v0 ON ((CAST(rt0.c1 AS BLOB))<((((vt0.lid))<((rt0.c4))))) WHERE (((((rt0.c4)OR(ABS(rt0.c0))))AND(((rt0.c4) IS FALSE)))) UNION ALL SELECT rt0.c0 FROM rt0, vt0 FULL OUTER JOIN v0 ON ((CAST(rt0.c1 AS BLOB))<((((vt0.lid))<((rt0.c4))))) WHERE ((NOT (((((rt0.c4)OR(ABS(rt0.c0))))AND(((rt0.c4) IS FALSE)))))) UNION ALL SELECT rt0.c0 FROM rt0, vt0 FULL OUTER JOIN v0 ON ((CAST(rt0.c1 AS BLOB))<((((vt0.lid))<((rt0.c4))))) WHERE (((((((rt0.c4)OR(ABS(rt0.c0))))AND(((rt0.c4) IS FALSE)))) ISNULL));
SELECT ALL rt0.c0 FROM rt0, vt0 FULL OUTER JOIN v0 ON ((CAST(rt0.c1 AS BLOB))<((((vt0.lid))<((rt0.c4)))));
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((((v0.c0)AND((((v0.c0))<>((v0.c0))))))AND(((((((((0.4552763635622554)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((v0.c0)AND((((v0.c0))!=((v0.c0))))))AND(((((((((0.4552763635622554)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0))))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((v0.c0)AND((((v0.c0))<>((v0.c0))))))AND(((((((((0.4552763635622554)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT rt0.c0 FROM rt0, v0 CROSS JOIN vt0 ON (((CASE WHEN rt0.c1 THEN 0.38994985109204383 END))<>((((rt0.c3) NOT BETWEEN (v0.c0) AND (vt0.c0))))) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, v0 CROSS JOIN vt0 ON (((CASE WHEN rt0.c1 THEN 0.38994985109204383 END))!=((((rt0.c3) NOT BETWEEN (v0.c0) AND (vt0.c0))))) WHERE (0.14851230828424178 COLLATE RTRIM) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0, v0 CROSS JOIN vt0 ON (((CASE WHEN rt0.c1 THEN 0.38994985109204383 END))<>((((rt0.c3) NOT BETWEEN (v0.c0) AND (vt0.c0))))) WHERE ((NOT (0.14851230828424178 COLLATE RTRIM))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0, v0 CROSS JOIN vt0 ON (((CASE WHEN rt0.c1 THEN 0.38994985109204383 END))<>((((rt0.c3) NOT BETWEEN (v0.c0) AND (vt0.c0))))) WHERE (((0.14851230828424178 COLLATE RTRIM) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, v0 CROSS JOIN vt0 ON (((CASE WHEN rt0.c1 THEN 0.38994985109204383 END))<>((((rt0.c3) NOT BETWEEN (v0.c0) AND (vt0.c0))))) GROUP BY rt0.c0;
SELECT ALL rt0.c4, v0.c0, vt0.c0, rt0.c2, rt0.c0, rt0.c1, vt0.lid, rt0.c3 FROM rt0, vt0, v0 GROUP BY rt0.c4, v0.c0, vt0.c0, rt0.c2, rt0.c0, rt0.c1, vt0.lid, rt0.c3;
SELECT ALL rt0.c4, v0.c0, vt0.c0, rt0.c2, rt0.c0, rt0.c1, vt0.lid, rt0.c3 FROM rt0, vt0, v0 GROUP BY rt0.c4, v0.c0, vt0.c0, rt0.c2, rt0.c0, rt0.c1, vt0.lid, rt0.c3 HAVING MAX(GROUP_CONCAT(GROUP_CONCAT(MIN(rt0.c4)))) UNION ALL SELECT ALL rt0.c4, v0.c0, vt0.c0, rt0.c2, rt0.c0, rt0.c1, vt0.lid, rt0.c3 FROM rt0, vt0, v0 GROUP BY rt0.c4, v0.c0, vt0.c0, rt0.c2, rt0.c0, rt0.c1, vt0.lid, rt0.c3 HAVING (NOT (MAX(GROUP_CONCAT(GROUP_CONCAT(MIN(rt0.c4)))))) UNION ALL SELECT ALL rt0.c4, v0.c0, vt0.c0, rt0.c2, rt0.c0, rt0.c1, vt0.lid, rt0.c3 FROM rt0 NOT INDEXED, vt0, v0 GROUP BY rt0.c4, v0.c0, vt0.c0, rt0.c2, rt0.c0, rt0.c1, vt0.lid, rt0.c3 HAVING ((MAX(GROUP_CONCAT(GROUP_CONCAT(MIN(rt0.c4))))) ISNULL);
SELECT ALL rt0.c2, v0.c0 FROM rt0 NATURAL JOIN v0;
SELECT rt0.c2, v0.c0 FROM rt0 NATURAL JOIN v0 WHERE (((((rt0.c4)||(rt0.c2)))IS NOT((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((NULL)))))) UNION ALL SELECT ALL rt0.c2, v0.c0 FROM rt0 NATURAL JOIN v0 WHERE ((NOT (((((rt0.c4)||(rt0.c2)))IS NOT((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((NULL)))))))) UNION ALL SELECT ALL rt0.c2, v0.c0 FROM rt0 NATURAL JOIN v0 WHERE (((((((rt0.c4)||(rt0.c2)))IS NOT((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((NULL)))))) ISNULL));
SELECT ALL rt0.c2, v0.c0 FROM rt0 NATURAL JOIN v0;
SELECT DISTINCT rt0.c0, vt0.c0, rt0.c2, rt0.c3, rt0.c4 FROM rt0 RIGHT OUTER JOIN vt0 ON ((rt0.c2 COLLATE BINARY) NOT BETWEEN (((rt0.c0) NOT NULL)) AND (CASE '372346180'  WHEN rt0.c2 THEN 'roVT\~' WHEN rt0.c1 THEN x'' WHEN vt0.c0 THEN rt0.c4 WHEN rt0.c3 THEN vt0.c2 WHEN rt0.c0 THEN v0.c0 END)) RIGHT OUTER JOIN v0 ON '-2047826085';
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN 0X77aece90 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) NOT BETWEEN (CAST(v0.c0 AS REAL)) AND (CAST(v0.c0 AS INTEGER)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN 0x77aece90 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) NOT BETWEEN (CAST(v0.c0 AS REAL)) AND (CAST(v0.c0 AS INTEGER)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN 0x77aece90 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) NOT BETWEEN (CAST(v0.c0 AS REAL)) AND (CAST(v0.c0 AS INTEGER)))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c0 FROM rt0 CROSS JOIN v0 ON (NOT (((((vt0.c0)OR(rt0.c2)))OR(rt0.c4)))) FULL OUTER JOIN vt0 ON ((0.3597594860204051) NOT BETWEEN (((vt0.lid)|(-1.990385456E9))) AND (rt0.c1)) GROUP BY vt0.c0;
SELECT vt0.c2 FROM vt0;
SELECT vt0.c2 FROM vt0 WHERE ((- (vt0.c0)) COLLATE NOCASE) UNION ALL SELECT ALL vt0.c2 FROM vt0 WHERE ((NOT ((- (vt0.c0)) COLLATE NOCASE))) UNION ALL SELECT vt0.c2 FROM vt0 WHERE ((((- (vt0.c0)) COLLATE NOCASE) ISNULL));
SELECT vt0.c2 FROM vt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (((PRINTF(rt0.c2)) NOT NULL)) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (((PRINTF(rt0.c2)) NOT NULL)))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((((PRINTF(rt0.c2)) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c4, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c4, rt0.c2, rt0.c3;
SELECT ALL rt0.c0, rt0.c1, rt0.c4, rt0.c2, rt0.c3 FROM rt0 WHERE (CAST(((rt0.c4)-(rt0.c3)) AS INTEGER)) GROUP BY rt0.c0, rt0.c1, rt0.c4, rt0.c2, rt0.c3 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c4, rt0.c2, rt0.c3 FROM rt0 WHERE ((NOT (CAST(((rt0.c4)-(rt0.c3)) AS INTEGER)))) GROUP BY rt0.c0, rt0.c1, rt0.c4, rt0.c2, rt0.c3 UNION SELECT rt0.c0, rt0.c1, rt0.c4, rt0.c2, rt0.c3 FROM rt0 WHERE (((CAST(((rt0.c4)-(rt0.c3)) AS INTEGER)) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c4, rt0.c2, rt0.c3;
SELECT ALL rt0.c0, rt0.c1, rt0.c4, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c4, rt0.c2, rt0.c3;
SELECT vt0.lid, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c1, vt0.c0;
SELECT ALL vt0.lid, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c1, vt0.c0 HAVING GROUP_CONCAT((((TOTAL(MIN(vt0.c0)))) BETWEEN ((AVG(vt0.c0))) AND ((vt0.c0)))) UNION ALL SELECT ALL vt0.lid, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c1, vt0.c0 HAVING (NOT (GROUP_CONCAT((((TOTAL(MIN(vt0.c0)))) BETWEEN ((AVG(vt0.c0))) AND ((vt0.c0)))))) UNION ALL SELECT ALL vt0.lid, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c1, vt0.c0 HAVING ((GROUP_CONCAT((((TOTAL(MIN(vt0.c0)))) BETWEEN ((AVG(vt0.c0))) AND ((vt0.c0))))) ISNULL);
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON CAST((~ (rt0.c0)) AS TEXT);
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON CAST((~ (rt0.c0)) AS TEXT) WHERE (NULL) UNION ALL SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON CAST((~ (rt0.c0)) AS TEXT) WHERE ((NOT (NULL))) UNION ALL SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON CAST((~ (rt0.c0)) AS TEXT) WHERE (((NULL) ISNULL));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON CAST((~ (rt0.c0)) AS TEXT);
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c1 COLLATE NOCASE) IS TRUE)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c1 COLLATE NOCASE) IS TRUE)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c1 COLLATE NOCASE) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, vt0.c1, rt0.c2, rt0.c4, rt0.c3, vt0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c1, vt0.c1, rt0.c2, rt0.c4, rt0.c3, vt0.c0;
SELECT rt0.c1, vt0.c1, rt0.c2, rt0.c4, rt0.c3, vt0.c0 FROM rt0, vt0, v0 WHERE (((((vt0.c1 COLLATE BINARY)AND(CASE WHEN vt0.c2 THEN rt0.c1 ELSE v0.c0 END)))OR(LIKELIHOOD(vt0.lid, 0.18316665132189702)))) GROUP BY rt0.c1, vt0.c1, rt0.c2, rt0.c4, rt0.c3, vt0.c0 UNION SELECT rt0.c1, vt0.c1, rt0.c2, rt0.c4, rt0.c3, vt0.c0 FROM rt0, vt0, v0 WHERE ((NOT (((((vt0.c1 COLLATE BINARY)AND(CASE WHEN vt0.c2 THEN rt0.c1 ELSE v0.c0 END)))OR(LIKELIHOOD(vt0.lid, 0.18316665132189702)))))) GROUP BY rt0.c1, vt0.c1, rt0.c2, rt0.c4, rt0.c3, vt0.c0 UNION SELECT rt0.c1, vt0.c1, rt0.c2, rt0.c4, rt0.c3, vt0.c0 FROM rt0, vt0, v0 WHERE (((((((vt0.c1 COLLATE BINARY)AND(CASE WHEN vt0.c2 THEN rt0.c1 ELSE v0.c0 END)))OR(LIKELIHOOD(vt0.lid, 0.18316665132189702)))) ISNULL)) GROUP BY rt0.c1, vt0.c1, rt0.c2, rt0.c4, rt0.c3, vt0.c0;
SELECT ALL rt0.c1, vt0.c1, rt0.c2, rt0.c4, rt0.c3, vt0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c1, vt0.c1, rt0.c2, rt0.c4, rt0.c3, vt0.c0;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((CASE WHEN TOTAL(vt0.c0) THEN COUNT(*) WHEN GROUP_CONCAT(74258333) THEN AVG(vt0.lid) WHEN COUNT(COUNT(*)) THEN vt0.c1 ELSE 0.7764741485711139 END) BETWEEN ((vt0.c2 IN ())) AND (((((vt0.c0)AND(SUM(AVG(MIN(vt0.lid))))))OR(vt0.c1)))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (((CASE WHEN TOTAL(vt0.c0) THEN COUNT(*) WHEN GROUP_CONCAT(74258333) THEN AVG(vt0.lid) WHEN COUNT(COUNT(*)) THEN vt0.c1 ELSE 0.7764741485711139 END) BETWEEN ((vt0.c2 IN ())) AND (((((vt0.c0)AND(SUM(AVG(MIN(vt0.lid))))))OR(vt0.c1)))))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((((CASE WHEN TOTAL(vt0.c0) THEN COUNT(*) WHEN GROUP_CONCAT(74258333) THEN AVG(vt0.lid) WHEN COUNT(COUNT(*)) THEN vt0.c1 ELSE 0.7764741485711139 END) BETWEEN ((vt0.c2 IN ())) AND (((((vt0.c0)AND(SUM(AVG(MIN(vt0.lid))))))OR(vt0.c1))))) ISNULL);
SELECT ALL * FROM vt0, v0 RIGHT OUTER JOIN rt0 ON (((NOT (vt0.lid))) BETWEEN (((rt0.c0)*(vt0.c1))) AND (-1261376680));
SELECT ALL * FROM vt0, v0 RIGHT OUTER JOIN rt0 ON (((NOT (vt0.lid))) BETWEEN (((rt0.c0)*(vt0.c1))) AND (-1261376680)) WHERE (((vt0.lid IN ()) IN (LTRIM(rt0.c3, rt0.c4), rt0.c4 COLLATE NOCASE))) UNION ALL SELECT ALL * FROM vt0, v0 RIGHT OUTER JOIN rt0 ON (((NOT (vt0.lid))) BETWEEN (((rt0.c0)*(vt0.c1))) AND (-1261376680)) WHERE ((NOT (((vt0.lid IN ()) IN (LTRIM(rt0.c3, rt0.c4), rt0.c4 COLLATE NOCASE))))) UNION ALL SELECT ALL * FROM vt0, v0 RIGHT OUTER JOIN rt0 ON (((NOT (vt0.lid))) BETWEEN (((rt0.c0)*(vt0.c1))) AND (-1261376680)) WHERE (((((vt0.lid IN ()) IN (LTRIM(rt0.c3, rt0.c4), rt0.c4 COLLATE NOCASE))) ISNULL));
SELECT ALL * FROM vt0, v0 RIGHT OUTER JOIN rt0 ON (((NOT (vt0.lid))) BETWEEN (((rt0.c0)*(vt0.c1))) AND (-1261376680));
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CAST(rt0.c3 AS TEXT) COLLATE BINARY) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CAST(rt0.c3 AS TEXT) COLLATE BINARY))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CAST(rt0.c3 AS TEXT) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL vt0.c1, rt0.c0, vt0.c2, rt0.c3, vt0.c0, rt0.c1, rt0.c2, rt0.c4, vt0.lid FROM rt0, vt0 GROUP BY vt0.c1, rt0.c0, vt0.c2, rt0.c3, vt0.c0, rt0.c1, rt0.c2, rt0.c4, vt0.lid;
SELECT ALL vt0.c1, rt0.c0, vt0.c2, rt0.c3, vt0.c0, rt0.c1, rt0.c2, rt0.c4, vt0.lid FROM rt0, vt0 WHERE (CASE WHEN (~ (rt0.c2)) THEN (~ (vt0.c2)) WHEN (vt0.c0 IN (rt0.c0, vt0.c1)) THEN CASE WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c4 THEN vt0.c2 WHEN NULL THEN vt0.c1 END WHEN rt0.c4 COLLATE RTRIM THEN ((vt0.c0) IS FALSE) END) GROUP BY vt0.c1, rt0.c0, vt0.c2, rt0.c3, vt0.c0, rt0.c1, rt0.c2, rt0.c4, vt0.lid UNION SELECT vt0.c1, rt0.c0, vt0.c2, rt0.c3, vt0.c0, rt0.c1, rt0.c2, rt0.c4, vt0.lid FROM rt0, vt0 WHERE ((NOT (CASE WHEN (~ (rt0.c2)) THEN (~ (vt0.c2)) WHEN (vt0.c0 IN (rt0.c0, vt0.c1)) THEN CASE WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c4 THEN vt0.c2 WHEN NULL THEN vt0.c1 END WHEN rt0.c4 COLLATE RTRIM THEN ((vt0.c0) IS FALSE) END))) GROUP BY vt0.c1, rt0.c0, vt0.c2, rt0.c3, vt0.c0, rt0.c1, rt0.c2, rt0.c4, vt0.lid UNION SELECT vt0.c1, rt0.c0, vt0.c2, rt0.c3, vt0.c0, rt0.c1, rt0.c2, rt0.c4, vt0.lid FROM rt0, vt0 WHERE (((CASE WHEN (~ (rt0.c2)) THEN (~ (vt0.c2)) WHEN (vt0.c0 IN (rt0.c0, vt0.c1)) THEN CASE WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c4 THEN vt0.c2 WHEN NULL THEN vt0.c1 END WHEN rt0.c4 COLLATE RTRIM THEN ((vt0.c0) IS FALSE) END) ISNULL)) GROUP BY vt0.c1, rt0.c0, vt0.c2, rt0.c3, vt0.c0, rt0.c1, rt0.c2, rt0.c4, vt0.lid;
SELECT ALL vt0.c1, rt0.c0, vt0.c2, rt0.c3, vt0.c0, rt0.c1, rt0.c2, rt0.c4, vt0.lid FROM rt0, vt0 GROUP BY vt0.c1, rt0.c0, vt0.c2, rt0.c3, vt0.c0, rt0.c1, rt0.c2, rt0.c4, vt0.lid;
SELECT ALL vt0.c2, vt0.lid FROM vt0 GROUP BY vt0.c2, vt0.lid;
SELECT vt0.c2, vt0.lid FROM vt0 GROUP BY vt0.c2, vt0.lid HAVING COUNT(COUNT(vt0.lid)) UNION ALL SELECT ALL vt0.c2, vt0.lid FROM vt0 GROUP BY vt0.c2, vt0.lid HAVING (NOT (COUNT(COUNT(vt0.lid)))) UNION ALL SELECT ALL vt0.c2, vt0.lid FROM vt0 GROUP BY vt0.c2, vt0.lid HAVING ((COUNT(COUNT(vt0.lid))) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c4, rt0.c0 FROM rt0;
SELECT ALL rt0.c1, rt0.c2, rt0.c4, rt0.c0 FROM rt0 WHERE (((((((rt0.c2)IS NOT(rt0.c4)))OR(LIKELY(DISTINCT rt0.c0))))AND(((rt0.c0)<<(rt0.c0))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c4, rt0.c0 FROM rt0 WHERE ((NOT (((((((rt0.c2)IS NOT(rt0.c4)))OR(LIKELY(DISTINCT rt0.c0))))AND(((rt0.c0)<<(rt0.c0))))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c4, rt0.c0 FROM rt0 WHERE (((((((((rt0.c2)IS NOT(rt0.c4)))OR(LIKELY(DISTINCT rt0.c0))))AND(((rt0.c0)<<(rt0.c0))))) ISNULL));
SELECT ALL rt0.c1, rt0.c2, rt0.c4, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c4, rt0.c3, rt0.c0, v0.c0 FROM v0, rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c4, rt0.c3, rt0.c0, v0.c0 FROM v0, rt0 WHERE ((((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c1)) IN ())) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c4, rt0.c3, rt0.c0, v0.c0 FROM v0, rt0 WHERE ((NOT ((((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c1)) IN ())))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c4, rt0.c3, rt0.c0, v0.c0 FROM v0, rt0 WHERE ((((((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c1)) IN ())) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c4, rt0.c3, rt0.c0, v0.c0 FROM v0, rt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ('') GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (''))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((('') ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c4, v0.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM v0, rt0 GROUP BY rt0.c4, v0.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c2;
SELECT rt0.c4, v0.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM v0, rt0 GROUP BY rt0.c4, v0.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c2 HAVING (~ (GROUP_CONCAT(rt0.c1))) UNION ALL SELECT ALL rt0.c4, v0.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM v0, rt0 GROUP BY rt0.c4, v0.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c2 HAVING (NOT ((~ (GROUP_CONCAT(rt0.c1))))) UNION ALL SELECT rt0.c4, v0.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM v0, rt0 GROUP BY rt0.c4, v0.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c2 HAVING (((~ (GROUP_CONCAT(rt0.c1)))) ISNULL);
SELECT ALL rt0.c4, v0.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM v0, rt0 GROUP BY rt0.c4, v0.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c2;
SELECT rt0.c4, v0.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM v0, rt0 GROUP BY rt0.c4, v0.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c2 HAVING (~ (GROUP_CONCAT(rt0.c1))) UNION ALL SELECT ALL rt0.c4, v0.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM v0, rt0 GROUP BY rt0.c4, v0.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c2 HAVING (NOT ((~ (GROUP_CONCAT(rt0.c1))))) UNION ALL SELECT rt0.c4, v0.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM v0, rt0 GROUP BY rt0.c4, v0.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c2 HAVING (((~ (GROUP_CONCAT(rt0.c1)))) ISNULL);
SELECT ALL rt0.c4, v0.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM v0, rt0 GROUP BY rt0.c4, v0.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c2;
SELECT rt0.c0, vt0.c0, rt0.c4, rt0.c2, vt0.c1, rt0.c1 FROM rt0 RIGHT OUTER JOIN v0 ON ((rt0.c1) NOT BETWEEN (0.14378496804700236) AND ((~ (vt0.lid)))) LEFT OUTER JOIN vt0 ON ((((vt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c1)))LIKE(((rt0.c1) ISNULL)));
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c4)) IN (((rt0.c3) IS TRUE)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c4)) IN (((rt0.c3) IS TRUE)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c4)) IN (((rt0.c3) IS TRUE)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c4, rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c4, rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((CASE rt0.c0  WHEN rt0.c4 THEN rt0.c2 END)OR((((rt0.c3, rt0.c4, rt0.c2)) BETWEEN ((0.758414003012832, rt0.c1, rt0.c2)) AND ((rt0.c0, rt0.c1, rt0.c0))))))AND(rt0.c2))) GROUP BY rt0.c4, rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c4, rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((((CASE rt0.c0  WHEN rt0.c4 THEN rt0.c2 END)OR((((rt0.c3, rt0.c4, rt0.c2)) BETWEEN ((0.758414003012832, rt0.c1, rt0.c2)) AND ((rt0.c0, rt0.c1, rt0.c0))))))AND(rt0.c2))))) GROUP BY rt0.c4, rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c4, rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((((CASE rt0.c0  WHEN rt0.c4 THEN rt0.c2 END)OR((((rt0.c3, rt0.c4, rt0.c2)) BETWEEN ((0.758414003012832, rt0.c1, rt0.c2)) AND ((rt0.c0, rt0.c1, rt0.c0))))))AND(rt0.c2))) ISNULL)) GROUP BY rt0.c4, rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c4, rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c2, rt0.c0, rt0.c1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING MIN(SUM(MIN(v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MIN(SUM(MIN(v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MIN(SUM(MIN(v0.c0)))) ISNULL);
SELECT ALL vt0.c1, vt0.c0, vt0.lid, vt0.c2 FROM vt0;
SELECT vt0.c1, vt0.c0, vt0.lid, vt0.c2 FROM vt0 WHERE (CASE vt0.c1  WHEN ((vt0.c0) ISNULL) THEN (((vt0.lid, vt0.lid, vt0.lid)) NOT BETWEEN ((vt0.lid, vt0.lid, vt0.c0)) AND ((x'', vt0.c2, 0x29625813))) END) UNION ALL SELECT vt0.c1, vt0.c0, vt0.lid, vt0.c2 FROM vt0 WHERE ((NOT (CASE vt0.c1  WHEN ((vt0.c0) ISNULL) THEN (((vt0.lid, vt0.lid, vt0.lid)) NOT BETWEEN ((vt0.lid, vt0.lid, vt0.c0)) AND ((x'', vt0.c2, 0x29625813))) END))) UNION ALL SELECT vt0.c1, vt0.c0, vt0.lid, vt0.c2 FROM vt0 WHERE (((CASE vt0.c1  WHEN ((vt0.c0) ISNULL) THEN (((vt0.lid, vt0.lid, vt0.lid)) NOT BETWEEN ((vt0.lid, vt0.lid, vt0.c0)) AND ((x'', vt0.c2, 0x29625813))) END) ISNULL));
SELECT ALL vt0.c1, vt0.c0, vt0.lid, vt0.c2 FROM vt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE (CAST(rt0.c4 AS REAL)) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (CAST(rt0.c4 AS REAL)))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE (((CAST(rt0.c4 AS REAL)) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT vt0.c2, vt0.lid, v0.c0, rt0.c0, vt0.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1, vt0.c1 FROM rt0, v0, vt0 GROUP BY vt0.c2, vt0.lid, v0.c0, rt0.c0, vt0.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1, vt0.c1;
SELECT ALL vt0.c2, vt0.lid, v0.c0, rt0.c0, vt0.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1, vt0.c1 FROM rt0, v0, vt0 WHERE (((((CASE WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN vt0.lid ELSE rt0.c3 END)AND((+ (v0.c0)))))AND((- (x'b3b4'))))) GROUP BY vt0.c2, vt0.lid, v0.c0, rt0.c0, vt0.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1, vt0.c1 UNION SELECT ALL vt0.c2, vt0.lid, v0.c0, rt0.c0, vt0.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1, vt0.c1 FROM rt0, v0, vt0 WHERE ((NOT (((((CASE WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN vt0.lid ELSE rt0.c3 END)AND((+ (v0.c0)))))AND((- (x'b3b4'))))))) GROUP BY vt0.c2, vt0.lid, v0.c0, rt0.c0, vt0.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1, vt0.c1 UNION SELECT ALL vt0.c2, vt0.lid, v0.c0, rt0.c0, vt0.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1, vt0.c1 FROM rt0, v0, vt0 WHERE (((((((CASE WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN vt0.lid ELSE rt0.c3 END)AND((+ (v0.c0)))))AND((- (x'b3b4'))))) ISNULL)) GROUP BY vt0.c2, vt0.lid, v0.c0, rt0.c0, vt0.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1, vt0.c1;
SELECT vt0.c2, vt0.lid, v0.c0, rt0.c0, vt0.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1, vt0.c1 FROM rt0, v0, vt0 GROUP BY vt0.c2, vt0.lid, v0.c0, rt0.c0, vt0.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1, vt0.c1;
SELECT ALL v0.c0, vt0.lid, rt0.c2, rt0.c4 FROM rt0, vt0, v0 GROUP BY v0.c0, vt0.lid, rt0.c2, rt0.c4;
SELECT v0.c0, vt0.lid, rt0.c2, rt0.c4 FROM rt0, vt0, v0 GROUP BY v0.c0, vt0.lid, rt0.c2, rt0.c4 HAVING MAX(((COUNT(*))>=(SUM(TOTAL(0.27986602810475225))))) UNION ALL SELECT ALL v0.c0, vt0.lid, rt0.c2, rt0.c4 FROM rt0, vt0, v0 GROUP BY v0.c0, vt0.lid, rt0.c2, rt0.c4 HAVING (NOT (MAX(((COUNT(*))>=(SUM(TOTAL(0.27986602810475225))))))) UNION ALL SELECT ALL v0.c0, vt0.lid, rt0.c2, rt0.c4 FROM rt0, vt0, v0 GROUP BY v0.c0, vt0.lid, rt0.c2, rt0.c4 HAVING ((MAX(((COUNT(*))>=(SUM(TOTAL(0.27986602810475225)))))) ISNULL);
SELECT rt0.c0, rt0.c1, v0.c0, rt0.c4 FROM v0, rt0;
SELECT ALL rt0.c0, rt0.c1, v0.c0, rt0.c4 FROM v0, rt0 WHERE (((CAST(rt0.c0 AS TEXT)) NOT BETWEEN ((('155683935') NOT NULL)) AND (v0.c0 COLLATE BINARY))) UNION ALL SELECT ALL rt0.c0, rt0.c1, v0.c0, rt0.c4 FROM v0, rt0 WHERE ((NOT (((CAST(rt0.c0 AS TEXT)) NOT BETWEEN ((('155683935') NOT NULL)) AND (v0.c0 COLLATE BINARY))))) UNION ALL SELECT rt0.c0, rt0.c1, v0.c0, rt0.c4 FROM v0, rt0 WHERE (((((CAST(rt0.c0 AS TEXT)) NOT BETWEEN ((('155683935') NOT NULL)) AND (v0.c0 COLLATE BINARY))) ISNULL));
SELECT rt0.c0, rt0.c1, v0.c0, rt0.c4 FROM v0, rt0;
SELECT DISTINCT * FROM rt0 INNER JOIN vt0 ON ((((((((((rt0.c0)AND(rt0.c4)))AND(vt0.c0)))OR(NULL)))OR(v0.c0)))-(-2.047826085E9 COLLATE RTRIM)) RIGHT OUTER JOIN v0 ON (NOT (CAST(vt0.c2 AS REAL)));
SELECT ALL vt0.c0, rt0.c4, vt0.c1, rt0.c2, rt0.c0 FROM vt0, rt0, v0 GROUP BY vt0.c0, rt0.c4, vt0.c1, rt0.c2, rt0.c0;
SELECT vt0.c0, rt0.c4, vt0.c1, rt0.c2, rt0.c0 FROM vt0, rt0, v0 WHERE (((((((((v0.c0 COLLATE RTRIM)AND(CAST(rt0.c3 AS TEXT))))AND((0.593797213719697 IN ()))))AND(CAST('' AS INTEGER))))OR(vt0.c2 COLLATE BINARY))) GROUP BY vt0.c0, rt0.c4, vt0.c1, rt0.c2, rt0.c0 UNION SELECT vt0.c0, rt0.c4, vt0.c1, rt0.c2, rt0.c0 FROM vt0, rt0, v0 WHERE ((NOT (((((((((v0.c0 COLLATE RTRIM)AND(CAST(rt0.c3 AS TEXT))))AND((0.593797213719697 IN ()))))AND(CAST('' AS INTEGER))))OR(vt0.c2 COLLATE BINARY))))) GROUP BY vt0.c0, rt0.c4, vt0.c1, rt0.c2, rt0.c0 UNION SELECT vt0.c0, rt0.c4, vt0.c1, rt0.c2, rt0.c0 FROM vt0, rt0 NOT INDEXED, v0 WHERE (((((((((((v0.c0 COLLATE RTRIM)AND(CAST(rt0.c3 AS TEXT))))AND((0.593797213719697 IN ()))))AND(CAST('' AS INTEGER))))OR(vt0.c2 COLLATE BINARY))) ISNULL)) GROUP BY vt0.c0, rt0.c4, vt0.c1, rt0.c2, rt0.c0;
SELECT ALL vt0.c0, rt0.c4, vt0.c1, rt0.c2, rt0.c0 FROM vt0, rt0, v0 GROUP BY vt0.c0, rt0.c4, vt0.c1, rt0.c2, rt0.c0;
SELECT ALL v0.c0, rt0.c4, vt0.c1, vt0.c0 FROM vt0 CROSS JOIN rt0 ON ((((1.414029918E9) BETWEEN (0.7372696026206979) AND (x'0b7ed62b'))) NOT BETWEEN (1400788165) AND (((((vt0.c2)AND(rt0.c2)))AND(vt0.c2)))) CROSS JOIN v0 ON ((((rt0.c1)%(rt0.c1))) NOTNULL) GROUP BY v0.c0, rt0.c4, vt0.c1, vt0.c0;
SELECT v0.c0, rt0.c4, vt0.c1, vt0.c0 FROM vt0 CROSS JOIN rt0 ON ((((1.414029918E9) BETWEEN (0.7372696026206979) AND (x'0b7ed62b'))) NOT BETWEEN (1400788165) AND (((((vt0.c2)AND(rt0.c2)))AND(vt0.c2)))) CROSS JOIN v0 ON ((((rt0.c1)%(rt0.c1))) NOTNULL) GROUP BY v0.c0, rt0.c4, vt0.c1, vt0.c0 HAVING MAX(MAX(COUNT(*))) UNION ALL SELECT ALL v0.c0, rt0.c4, vt0.c1, vt0.c0 FROM vt0 CROSS JOIN rt0 ON ((((1.414029918E9) BETWEEN (0.7372696026206979) AND (x'0b7ed62b'))) NOT BETWEEN (1400788165) AND (((((vt0.c2)AND(rt0.c2)))AND(vt0.c2)))) CROSS JOIN v0 ON ((((rt0.c1)%(rt0.c1))) NOTNULL) GROUP BY v0.c0, rt0.c4, vt0.c1, vt0.c0 HAVING (NOT (MAX(MAX(COUNT(*))))) UNION ALL SELECT ALL v0.c0, rt0.c4, vt0.c1, vt0.c0 FROM vt0 CROSS JOIN rt0 ON ((((1.414029918E9) BETWEEN (0.7372696026206979) AND (x'0b7ed62b'))) NOT BETWEEN (1400788165) AND (((((vt0.c2)AND(rt0.c2)))AND(vt0.c2)))) CROSS JOIN v0 ON ((((rt0.c1)%(rt0.c1))) NOTNULL) GROUP BY v0.c0, rt0.c4, vt0.c1, vt0.c0 HAVING ((MAX(MAX(COUNT(*)))) ISNULL);
SELECT ALL rt0.c1, vt0.c2, vt0.c1, rt0.c3 FROM vt0, v0, rt0;
SELECT ALL rt0.c1, vt0.c2, vt0.c1, rt0.c3 FROM vt0, v0, rt0 WHERE (NULL) UNION ALL SELECT ALL rt0.c1, vt0.c2, vt0.c1, rt0.c3 FROM vt0, v0, rt0 WHERE ((NOT (NULL))) UNION ALL SELECT rt0.c1, vt0.c2, vt0.c1, rt0.c3 FROM vt0, v0, rt0 WHERE (((NULL) ISNULL));
SELECT ALL rt0.c1, vt0.c2, vt0.c1, rt0.c3 FROM vt0, v0, rt0;
SELECT DISTINCT vt0.lid FROM vt0;
SELECT DISTINCT vt0.lid FROM vt0 WHERE (CAST('983884681' AS TEXT)) UNION SELECT DISTINCT vt0.lid FROM vt0 WHERE ((NOT (CAST('983884681' AS TEXT)))) UNION SELECT DISTINCT vt0.lid FROM vt0 WHERE (((CAST('983884681' AS TEXT)) ISNULL));
SELECT DISTINCT vt0.lid FROM vt0;
SELECT ALL rt0.c0, rt0.c3, vt0.c2, rt0.c1, vt0.c1 FROM rt0, vt0, v0 GROUP BY rt0.c0, rt0.c3, vt0.c2, rt0.c1, vt0.c1;
SELECT rt0.c0, rt0.c3, vt0.c2, rt0.c1, vt0.c1 FROM rt0, vt0, v0 WHERE (CAST(NULL AS INTEGER)) GROUP BY rt0.c0, rt0.c3, vt0.c2, rt0.c1, vt0.c1 UNION SELECT ALL rt0.c0, rt0.c3, vt0.c2, rt0.c1, vt0.c1 FROM rt0, vt0, v0 WHERE ((NOT (CAST(NULL AS INTEGER)))) GROUP BY rt0.c0, rt0.c3, vt0.c2, rt0.c1, vt0.c1 UNION SELECT rt0.c0, rt0.c3, vt0.c2, rt0.c1, vt0.c1 FROM rt0, vt0, v0 WHERE (((CAST(NULL AS INTEGER)) ISNULL)) GROUP BY rt0.c0, rt0.c3, vt0.c2, rt0.c1, vt0.c1;
SELECT ALL rt0.c0, rt0.c3, vt0.c2, rt0.c1, vt0.c1 FROM rt0, vt0, v0 GROUP BY rt0.c0, rt0.c3, vt0.c2, rt0.c1, vt0.c1;
SELECT ALL rt0.c4, vt0.lid, rt0.c3 FROM rt0, v0, vt0 GROUP BY rt0.c4, vt0.lid, rt0.c3;
SELECT rt0.c4, vt0.lid, rt0.c3 FROM rt0, v0, vt0 GROUP BY rt0.c4, vt0.lid, rt0.c3 HAVING MAX(HEX(AVG(vt0.c0))) UNION ALL SELECT ALL rt0.c4, vt0.lid, rt0.c3 FROM rt0, v0, vt0 GROUP BY rt0.c4, vt0.lid, rt0.c3 HAVING (NOT (MAX(HEX(AVG(vt0.c0))))) UNION ALL SELECT rt0.c4, vt0.lid, rt0.c3 FROM rt0, v0, vt0 GROUP BY rt0.c4, vt0.lid, rt0.c3 HAVING ((MAX(HEX(AVG(vt0.c0)))) ISNULL);
SELECT vt0.c2, vt0.lid FROM vt0;
SELECT vt0.c2, vt0.lid FROM vt0 WHERE (((vt0.c0) IS FALSE) COLLATE BINARY) UNION ALL SELECT ALL vt0.c2, vt0.lid FROM vt0 WHERE ((NOT (((vt0.c0) IS FALSE) COLLATE BINARY))) UNION ALL SELECT ALL vt0.c2, vt0.lid FROM vt0 WHERE (((((vt0.c0) IS FALSE) COLLATE BINARY) ISNULL));
SELECT vt0.c2, vt0.lid FROM vt0;
SELECT DISTINCT rt0.c0 FROM v0 CROSS JOIN vt0 ON CASE WHEN ((v0.c0) BETWEEN (rt0.c1) AND (vt0.c0)) THEN ((vt0.c0) ISNULL) END RIGHT OUTER JOIN rt0 ON rt0.c4;
SELECT rt0.c4, v0.c0, rt0.c3 FROM v0, rt0 GROUP BY rt0.c4, v0.c0, rt0.c3;
SELECT ALL rt0.c4, v0.c0, rt0.c3 FROM v0, rt0 WHERE (((((v0.c0)<=(rt0.c0)))<=(((rt0.c2)<(v0.c0))))) GROUP BY rt0.c4, v0.c0, rt0.c3 UNION SELECT ALL rt0.c4, v0.c0, rt0.c3 FROM v0, rt0 WHERE ((NOT (((((v0.c0)<=(rt0.c0)))<=(((rt0.c2)<(v0.c0))))))) GROUP BY rt0.c4, v0.c0, rt0.c3 UNION SELECT ALL rt0.c4, v0.c0, rt0.c3 FROM v0, rt0 NOT INDEXED WHERE (((((((v0.c0)<=(rt0.c0)))<=(((rt0.c2)<(v0.c0))))) ISNULL)) GROUP BY rt0.c4, v0.c0, rt0.c3;
SELECT rt0.c4, v0.c0, rt0.c3 FROM v0, rt0 GROUP BY rt0.c4, v0.c0, rt0.c3;
SELECT ALL vt0.c2, v0.c0, vt0.lid, rt0.c1, rt0.c4, rt0.c0, rt0.c2 FROM vt0, rt0 NATURAL JOIN v0 GROUP BY vt0.c2, v0.c0, vt0.lid, rt0.c1, rt0.c4, rt0.c0, rt0.c2;
SELECT vt0.c2, v0.c0, vt0.lid, rt0.c1, rt0.c4, rt0.c0, rt0.c2 FROM vt0, rt0 NATURAL JOIN v0 GROUP BY vt0.c2, v0.c0, vt0.lid, rt0.c1, rt0.c4, rt0.c0, rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c2, v0.c0, vt0.lid, rt0.c1, rt0.c4, rt0.c0, rt0.c2 FROM vt0, rt0 NATURAL JOIN v0 GROUP BY vt0.c2, v0.c0, vt0.lid, rt0.c1, rt0.c4, rt0.c0, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c2, v0.c0, vt0.lid, rt0.c1, rt0.c4, rt0.c0, rt0.c2 FROM vt0, rt0 NATURAL JOIN v0 GROUP BY vt0.c2, v0.c0, vt0.lid, rt0.c1, rt0.c4, rt0.c0, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c2, v0.c0, vt0.lid, rt0.c1, rt0.c4, rt0.c0, rt0.c2 FROM vt0, rt0 NATURAL JOIN v0 GROUP BY vt0.c2, v0.c0, vt0.lid, rt0.c1, rt0.c4, rt0.c0, rt0.c2;
SELECT vt0.c2, v0.c0, vt0.lid, rt0.c1, rt0.c4, rt0.c0, rt0.c2 FROM vt0, rt0 NATURAL JOIN v0 GROUP BY vt0.c2, v0.c0, vt0.lid, rt0.c1, rt0.c4, rt0.c0, rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c2, v0.c0, vt0.lid, rt0.c1, rt0.c4, rt0.c0, rt0.c2 FROM vt0, rt0 NATURAL JOIN v0 GROUP BY vt0.c2, v0.c0, vt0.lid, rt0.c1, rt0.c4, rt0.c0, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c2, v0.c0, vt0.lid, rt0.c1, rt0.c4, rt0.c0, rt0.c2 FROM vt0, rt0 NATURAL JOIN v0 GROUP BY vt0.c2, v0.c0, vt0.lid, rt0.c1, rt0.c4, rt0.c0, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c2, v0.c0, vt0.lid, rt0.c1, rt0.c4, rt0.c0, rt0.c2 FROM vt0, rt0 NATURAL JOIN v0 GROUP BY vt0.c2, v0.c0, vt0.lid, rt0.c1, rt0.c4, rt0.c0, rt0.c2;
SELECT ALL * FROM vt0, rt0, v0;
SELECT * FROM vt0, rt0, v0 WHERE ((((vt0.c1)) BETWEEN ((0.6541968298288927)) AND ((((((rt0.c2)AND(rt0.c0)))OR('-1716207029')))))) UNION ALL SELECT ALL * FROM vt0, rt0, v0 WHERE ((NOT ((((vt0.c1)) BETWEEN ((0.6541968298288927)) AND ((((((rt0.c2)AND(rt0.c0)))OR('-1716207029')))))))) UNION ALL SELECT * FROM vt0, rt0, v0 WHERE ((((((vt0.c1)) BETWEEN ((0.6541968298288927)) AND ((((((rt0.c2)AND(rt0.c0)))OR('-1716207029')))))) ISNULL));
SELECT ALL * FROM vt0, rt0, v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((NULL) BETWEEN (CASE 0.7433274160638585  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) AND (CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((NULL) BETWEEN (CASE 0.7433274160638585  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) AND (CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((NULL) BETWEEN (CASE 0.7433274160638585  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) AND (CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL vt0.lid FROM vt0 LEFT OUTER JOIN v0 ON ((+ (-134700658)) IN ()) GROUP BY vt0.lid;
SELECT ALL vt0.lid FROM vt0 LEFT OUTER JOIN v0 ON ((+ (-134700658)) IN ()) WHERE (((LOWER(DISTINCT vt0.c0)) BETWEEN (CASE WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END) AND (CAST(vt0.c1 AS REAL)))) GROUP BY vt0.lid UNION SELECT ALL vt0.lid FROM vt0 LEFT OUTER JOIN v0 ON ((+ (-134700658)) IN ()) WHERE ((NOT (((LOWER(DISTINCT vt0.c0)) BETWEEN (CASE WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END) AND (CAST(vt0.c1 AS REAL)))))) GROUP BY vt0.lid UNION SELECT ALL vt0.lid FROM vt0 LEFT OUTER JOIN v0 ON ((+ (-134700658)) IN ()) WHERE (((((LOWER(DISTINCT vt0.c0)) BETWEEN (CASE WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END) AND (CAST(vt0.c1 AS REAL)))) ISNULL)) GROUP BY vt0.lid;
SELECT ALL vt0.lid FROM vt0 LEFT OUTER JOIN v0 ON ((+ (-134700658)) IN ()) GROUP BY vt0.lid;
SELECT ALL rt0.c2, rt0.c4, rt0.c0, vt0.lid, rt0.c1, rt0.c3 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c4, rt0.c0, vt0.lid, rt0.c1, rt0.c3;
SELECT rt0.c2, rt0.c4, rt0.c0, vt0.lid, rt0.c1, rt0.c3 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c4, rt0.c0, vt0.lid, rt0.c1, rt0.c3 HAVING ((MIN(rt0.c1))LIKE(AVG(GROUP_CONCAT('U6Q')))) UNION ALL SELECT ALL rt0.c2, rt0.c4, rt0.c0, vt0.lid, rt0.c1, rt0.c3 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c4, rt0.c0, vt0.lid, rt0.c1, rt0.c3 HAVING (NOT (((MIN(rt0.c1))LIKE(AVG(GROUP_CONCAT('U6Q')))))) UNION ALL SELECT rt0.c2, rt0.c4, rt0.c0, vt0.lid, rt0.c1, rt0.c3 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c4, rt0.c0, vt0.lid, rt0.c1, rt0.c3 HAVING ((((MIN(rt0.c1))LIKE(AVG(GROUP_CONCAT('U6Q'))))) ISNULL);
SELECT ALL v0.c0, rt0.c2, rt0.c0, vt0.c0, rt0.c4 FROM rt0, v0, vt0;
SELECT ALL v0.c0, rt0.c2, rt0.c0, vt0.c0, rt0.c4 FROM rt0, v0, vt0 WHERE (((((((vt0.lid)) BETWEEN ((rt0.c1)) AND ((vt0.c1)))))<=((0.41864206681095006)))) UNION ALL SELECT v0.c0, rt0.c2, rt0.c0, vt0.c0, rt0.c4 FROM rt0, v0, vt0 WHERE ((NOT (((((((vt0.lid)) BETWEEN ((rt0.c1)) AND ((vt0.c1)))))<=((0.41864206681095006)))))) UNION ALL SELECT ALL v0.c0, rt0.c2, rt0.c0, vt0.c0, rt0.c4 FROM rt0, v0, vt0 WHERE (((((((((vt0.lid)) BETWEEN ((rt0.c1)) AND ((vt0.c1)))))<=((0.41864206681095006)))) ISNULL));
SELECT ALL v0.c0, rt0.c2, rt0.c0, vt0.c0, rt0.c4 FROM rt0, v0, vt0;
SELECT DISTINCT rt0.c3, rt0.c1, rt0.c0 FROM v0, vt0, rt0;
SELECT DISTINCT rt0.c3, rt0.c1, rt0.c0 FROM v0, vt0, rt0 WHERE (((((rt0.c3)%(rt0.c2)))<<(rt0.c4 COLLATE NOCASE))) UNION SELECT DISTINCT rt0.c3, rt0.c1, rt0.c0 FROM v0, vt0, rt0 WHERE ((NOT (((((rt0.c3)%(rt0.c2)))<<(rt0.c4 COLLATE NOCASE))))) UNION SELECT DISTINCT rt0.c3, rt0.c1, rt0.c0 FROM v0, vt0, rt0 WHERE (((((((rt0.c3)%(rt0.c2)))<<(rt0.c4 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c1, rt0.c0 FROM v0, vt0, rt0;
SELECT ALL vt0.c0, rt0.c4, v0.c0 FROM v0 FULL OUTER JOIN vt0 ON CAST(((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c0)) AS BLOB) CROSS JOIN rt0 ON CASE WHEN ((rt0.c3) NOT NULL) THEN (((rt0.c4))>=((NULL))) ELSE ((rt0.c2)IS NOT(v0.c0)) END GROUP BY vt0.c0, rt0.c4, v0.c0;
SELECT vt0.c0, vt0.c1, rt0.c1 FROM rt0, vt0, v0 GROUP BY vt0.c0, vt0.c1, rt0.c1;
SELECT ALL vt0.c0, vt0.c1, rt0.c1 FROM rt0, vt0, v0 GROUP BY vt0.c0, vt0.c1, rt0.c1 HAVING COUNT(*) UNION ALL SELECT vt0.c0, vt0.c1, rt0.c1 FROM rt0, vt0, v0 GROUP BY vt0.c0, vt0.c1, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0, vt0.c1, rt0.c1 FROM rt0, vt0, v0 GROUP BY vt0.c0, vt0.c1, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0, vt0.c1, rt0.c1 FROM rt0, vt0, v0 GROUP BY vt0.c0, vt0.c1, rt0.c1;
SELECT ALL vt0.c0, vt0.c1, rt0.c1 FROM rt0, vt0, v0 GROUP BY vt0.c0, vt0.c1, rt0.c1 HAVING COUNT(*) UNION ALL SELECT vt0.c0, vt0.c1, rt0.c1 FROM rt0, vt0, v0 GROUP BY vt0.c0, vt0.c1, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0, vt0.c1, rt0.c1 FROM rt0, vt0, v0 GROUP BY vt0.c0, vt0.c1, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0, vt0.c1, rt0.c1 FROM rt0, vt0, v0 GROUP BY vt0.c0, vt0.c1, rt0.c1;
SELECT ALL rt0.c2, vt0.c2, rt0.c3, rt0.c0 FROM v0, rt0, vt0;
SELECT rt0.c2, vt0.c2, rt0.c3, rt0.c0 FROM v0, rt0, vt0 WHERE ((((((rt0.c0, rt0.c2, vt0.c0)) NOT BETWEEN ((0Xffffffffc31d9c5c, v0.c0, rt0.c0)) AND ((rt0.c0, vt0.c0, rt0.c4))))>=(((((rt0.c0)AND(rt0.c1)))OR(0.007451646386443578))))) UNION ALL SELECT ALL rt0.c2, vt0.c2, rt0.c3, rt0.c0 FROM v0, rt0, vt0 WHERE ((NOT ((((((rt0.c0, rt0.c2, vt0.c0)) NOT BETWEEN ((0Xffffffffc31d9c5c, v0.c0, rt0.c0)) AND ((rt0.c0, vt0.c0, rt0.c4))))>=(((((rt0.c0)AND(rt0.c1)))OR(0.007451646386443578))))))) UNION ALL SELECT ALL rt0.c2, vt0.c2, rt0.c3, rt0.c0 FROM v0, rt0, vt0 WHERE ((((((((rt0.c0, rt0.c2, vt0.c0)) NOT BETWEEN ((0xffffffffc31d9c5c, v0.c0, rt0.c0)) AND ((rt0.c0, vt0.c0, rt0.c4))))>=(((((rt0.c0)AND(rt0.c1)))OR(0.007451646386443578))))) ISNULL));
SELECT ALL rt0.c2, vt0.c2, rt0.c3, rt0.c0 FROM v0, rt0, vt0;
SELECT DISTINCT rt0.c3, v0.c0, rt0.c1 FROM rt0, v0;
SELECT DISTINCT rt0.c3, v0.c0, rt0.c1 FROM rt0, v0 WHERE ((((((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3))))&(((v0.c0)>>(rt0.c3))))) UNION SELECT DISTINCT rt0.c3, v0.c0, rt0.c1 FROM rt0, v0 WHERE ((NOT ((((((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3))))&(((v0.c0)>>(rt0.c3))))))) UNION SELECT DISTINCT rt0.c3, v0.c0, rt0.c1 FROM rt0, v0 WHERE ((((((((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3))))&(((v0.c0)>>(rt0.c3))))) ISNULL));
SELECT DISTINCT rt0.c3, v0.c0, rt0.c1 FROM rt0, v0;
SELECT ALL rt0.c4, vt0.c0, rt0.c3 FROM v0 LEFT OUTER JOIN rt0 ON ((((v0.c0) NOTNULL)) ISNULL) LEFT OUTER JOIN vt0 ON CAST((((v0.c0)) NOT BETWEEN ((vt0.c2)) AND ((rt0.c4))) AS TEXT) GROUP BY rt0.c4, vt0.c0, rt0.c3;
SELECT ALL rt0.c4, vt0.c0, rt0.c3 FROM v0 LEFT OUTER JOIN rt0 ON ((((v0.c0) NOTNULL)) ISNULL) LEFT OUTER JOIN vt0 ON CAST((((v0.c0)) NOT BETWEEN ((vt0.c2)) AND ((rt0.c4))) AS TEXT) WHERE (CASE WHEN x'' THEN CASE WHEN rt0.c4 THEN 0.32853623230811035 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 ELSE vt0.c2 END ELSE ((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c4)) END) GROUP BY rt0.c4, vt0.c0, rt0.c3 UNION SELECT rt0.c4, vt0.c0, rt0.c3 FROM v0 LEFT OUTER JOIN rt0 ON ((((v0.c0) NOTNULL)) ISNULL) LEFT OUTER JOIN vt0 ON CAST((((v0.c0)) NOT BETWEEN ((vt0.c2)) AND ((rt0.c4))) AS TEXT) WHERE ((NOT (CASE WHEN x'' THEN CASE WHEN rt0.c4 THEN 0.32853623230811035 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 ELSE vt0.c2 END ELSE ((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c4)) END))) GROUP BY rt0.c4, vt0.c0, rt0.c3 UNION SELECT ALL rt0.c4, vt0.c0, rt0.c3 FROM v0 LEFT OUTER JOIN rt0 ON ((((v0.c0) NOTNULL)) ISNULL) LEFT OUTER JOIN vt0 ON CAST((((v0.c0)) NOT BETWEEN ((vt0.c2)) AND ((rt0.c4))) AS TEXT) WHERE (((CASE WHEN x'' THEN CASE WHEN rt0.c4 THEN 0.32853623230811035 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 ELSE vt0.c2 END ELSE ((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c4)) END) ISNULL)) GROUP BY rt0.c4, vt0.c0, rt0.c3;
SELECT ALL rt0.c4, vt0.c0, rt0.c3 FROM v0 LEFT OUTER JOIN rt0 ON ((((v0.c0) NOTNULL)) ISNULL) LEFT OUTER JOIN vt0 ON CAST((((v0.c0)) NOT BETWEEN ((vt0.c2)) AND ((rt0.c4))) AS TEXT) GROUP BY rt0.c4, vt0.c0, rt0.c3;
SELECT ALL vt0.lid, vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c2, vt0.c1;
SELECT ALL vt0.lid, vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c2, vt0.c1 HAVING AVG(vt0.lid) UNION ALL SELECT ALL vt0.lid, vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c2, vt0.c1 HAVING (NOT (AVG(vt0.lid))) UNION ALL SELECT ALL vt0.lid, vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c2, vt0.c1 HAVING ((AVG(vt0.lid)) ISNULL);
SELECT ALL vt0.lid, vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c2, vt0.c1;
SELECT ALL vt0.lid, vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c2, vt0.c1 HAVING AVG(vt0.lid) UNION ALL SELECT ALL vt0.lid, vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c2, vt0.c1 HAVING (NOT (AVG(vt0.lid))) UNION ALL SELECT ALL vt0.lid, vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c2, vt0.c1 HAVING ((AVG(vt0.lid)) ISNULL);
SELECT ALL vt0.lid, vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c2, vt0.c1;
SELECT vt0.c1, vt0.c2, rt0.c0, rt0.c1, vt0.lid, rt0.c4 FROM rt0, vt0;
SELECT vt0.c1, vt0.c2, rt0.c0, rt0.c1, vt0.lid, rt0.c4 FROM rt0, vt0 WHERE ((((((- (vt0.c0)))AND((((vt0.lid)) BETWEEN ((vt0.c2)) AND ((rt0.c0))))))OR(x''))) UNION ALL SELECT vt0.c1, vt0.c2, rt0.c0, rt0.c1, vt0.lid, rt0.c4 FROM rt0, vt0 WHERE ((NOT ((((((- (vt0.c0)))AND((((vt0.lid)) BETWEEN ((vt0.c2)) AND ((rt0.c0))))))OR(x''))))) UNION ALL SELECT vt0.c1, vt0.c2, rt0.c0, rt0.c1, vt0.lid, rt0.c4 FROM rt0, vt0 WHERE ((((((((- (vt0.c0)))AND((((vt0.lid)) BETWEEN ((vt0.c2)) AND ((rt0.c0))))))OR(x''))) ISNULL));
SELECT vt0.c1, vt0.c2, rt0.c0, rt0.c1, vt0.lid, rt0.c4 FROM rt0, vt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (CASE WHEN HEX(DISTINCT v0.c0) THEN v0.c0 WHEN (- (v0.c0)) THEN (((v0.c0, v0.c0, 0x606fb17a))>((v0.c0, v0.c0, v0.c0))) WHEN (((v0.c0, v0.c0, v0.c0))>((v0.c0, v0.c0, x''))) THEN (v0.c0 IN ()) END) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (CASE WHEN HEX(DISTINCT v0.c0) THEN v0.c0 WHEN (- (v0.c0)) THEN (((v0.c0, v0.c0, 0x606fb17a))>((v0.c0, v0.c0, v0.c0))) WHEN (((v0.c0, v0.c0, v0.c0))>((v0.c0, v0.c0, x''))) THEN (v0.c0 IN ()) END))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((CASE WHEN HEX(DISTINCT v0.c0) THEN v0.c0 WHEN (- (v0.c0)) THEN (((v0.c0, v0.c0, 0X606fb17a))>((v0.c0, v0.c0, v0.c0))) WHEN (((v0.c0, v0.c0, v0.c0))>((v0.c0, v0.c0, x''))) THEN (v0.c0 IN ()) END) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM v0, rt0 WHERE (rt0.c4 COLLATE RTRIM) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM v0, rt0 WHERE ((NOT (rt0.c4 COLLATE RTRIM))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM v0, rt0 WHERE (((rt0.c4 COLLATE RTRIM) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2;
SELECT vt0.lid, v0.c0 FROM v0, vt0 GROUP BY vt0.lid, v0.c0;
SELECT ALL vt0.lid, v0.c0 FROM v0, vt0 GROUP BY vt0.lid, v0.c0 HAVING TOTAL(((((COUNT(SUM(AVG(vt0.lid))))AND(SUM(x''))))AND(MAX(COUNT(*))))) UNION ALL SELECT ALL vt0.lid, v0.c0 FROM v0, vt0 GROUP BY vt0.lid, v0.c0 HAVING (NOT (TOTAL(((((COUNT(SUM(AVG(vt0.lid))))AND(SUM(x''))))AND(MAX(COUNT(*))))))) UNION ALL SELECT ALL vt0.lid, v0.c0 FROM v0, vt0 GROUP BY vt0.lid, v0.c0 HAVING ((TOTAL(((((COUNT(SUM(AVG(vt0.lid))))AND(SUM(x''))))AND(MAX(COUNT(*)))))) ISNULL);
SELECT ALL vt0.lid, vt0.c2, vt0.c1, vt0.c0 FROM vt0;
SELECT vt0.lid, vt0.c2, vt0.c1, vt0.c0 FROM vt0 WHERE (IFNULL(DISTINCT (((vt0.c2))<=((vt0.c0))), vt0.lid COLLATE RTRIM)) UNION ALL SELECT ALL vt0.lid, vt0.c2, vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (IFNULL(DISTINCT (((vt0.c2))<=((vt0.c0))), vt0.lid COLLATE RTRIM)))) UNION ALL SELECT ALL vt0.lid, vt0.c2, vt0.c1, vt0.c0 FROM vt0 WHERE (((IFNULL(DISTINCT (((vt0.c2))<=((vt0.c0))), vt0.lid COLLATE RTRIM)) ISNULL));
SELECT ALL vt0.lid, vt0.c2, vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c1, vt0.lid FROM rt0, vt0, v0;
SELECT DISTINCT vt0.c1, vt0.lid FROM rt0, vt0, v0 WHERE (((((((((((((rt0.c4)AND(vt0.c2)))AND(vt0.c1)))AND(rt0.c4)))OR(v0.c0)))AND(CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 ELSE rt0.c1 END)))OR(((rt0.c0) IS TRUE)))) UNION SELECT DISTINCT vt0.c1, vt0.lid FROM rt0, vt0, v0 WHERE ((NOT (((((((((((((rt0.c4)AND(vt0.c2)))AND(vt0.c1)))AND(rt0.c4)))OR(v0.c0)))AND(CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 ELSE rt0.c1 END)))OR(((rt0.c0) IS TRUE)))))) UNION SELECT DISTINCT vt0.c1, vt0.lid FROM rt0, vt0, v0 WHERE (((((((((((((((rt0.c4)AND(vt0.c2)))AND(vt0.c1)))AND(rt0.c4)))OR(v0.c0)))AND(CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 ELSE rt0.c1 END)))OR(((rt0.c0) IS TRUE)))) ISNULL));
SELECT DISTINCT vt0.c1, vt0.lid FROM rt0, vt0, v0;
SELECT ALL rt0.c3, rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1;
SELECT rt0.c3, rt0.c0, rt0.c1 FROM v0, rt0 WHERE (CASE WHEN ((rt0.c3)|(rt0.c4)) THEN (- (v0.c0)) WHEN ((rt0.c0)!=(rt0.c1)) THEN ((rt0.c0)>>(rt0.c4)) WHEN (rt0.c4 IN ()) THEN ((((rt0.c0)OR(rt0.c3)))AND(rt0.c3)) WHEN CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 WHEN v0.c0 THEN 0Xffffffffb0ce4a3d WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END THEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)) WHEN rt0.c4 THEN ((rt0.c3) NOT NULL) END) GROUP BY rt0.c3, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c3, rt0.c0, rt0.c1 FROM v0, rt0 WHERE ((NOT (CASE WHEN ((rt0.c3)|(rt0.c4)) THEN (- (v0.c0)) WHEN ((rt0.c0)<>(rt0.c1)) THEN ((rt0.c0)>>(rt0.c4)) WHEN (rt0.c4 IN ()) THEN ((((rt0.c0)OR(rt0.c3)))AND(rt0.c3)) WHEN CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 WHEN v0.c0 THEN 0xffffffffb0ce4a3d WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END THEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)) WHEN rt0.c4 THEN ((rt0.c3) NOT NULL) END))) GROUP BY rt0.c3, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c3, rt0.c0, rt0.c1 FROM v0, rt0 WHERE (((CASE WHEN ((rt0.c3)|(rt0.c4)) THEN (- (v0.c0)) WHEN ((rt0.c0)!=(rt0.c1)) THEN ((rt0.c0)>>(rt0.c4)) WHEN (rt0.c4 IN ()) THEN ((((rt0.c0)OR(rt0.c3)))AND(rt0.c3)) WHEN CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 WHEN v0.c0 THEN 0xffffffffb0ce4a3d WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END THEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)) WHEN rt0.c4 THEN ((rt0.c3) NOT NULL) END) ISNULL)) GROUP BY rt0.c3, rt0.c0, rt0.c1;
SELECT ALL rt0.c3, rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1;
SELECT vt0.c2, rt0.c2 FROM rt0, vt0, v0 GROUP BY vt0.c2, rt0.c2;
SELECT vt0.c2, rt0.c2 FROM rt0, vt0, v0 GROUP BY vt0.c2, rt0.c2 HAVING CASE '132064498'  WHEN AVG(COUNT(*)) THEN ((rt0.c4)!=(vt0.c2)) WHEN ((MAX(COUNT(*))) BETWEEN (TOTAL(AVG(COUNT(*)))) AND (MAX(SUM(rt0.c2)))) THEN ((rt0.c0) NOT BETWEEN (AVG(rt0.c4)) AND (v0.c0)) WHEN (SUM(TOTAL(GROUP_CONCAT(rt0.c2))) IN ()) THEN GROUP_CONCAT(COUNT(COUNT(*))) END UNION ALL SELECT ALL vt0.c2, rt0.c2 FROM rt0, vt0, v0 GROUP BY vt0.c2, rt0.c2 HAVING (NOT (CASE '132064498'  WHEN AVG(COUNT(*)) THEN ((rt0.c4)!=(vt0.c2)) WHEN ((MAX(COUNT(*))) BETWEEN (TOTAL(AVG(COUNT(*)))) AND (MAX(SUM(rt0.c2)))) THEN ((rt0.c0) NOT BETWEEN (AVG(rt0.c4)) AND (v0.c0)) WHEN (SUM(TOTAL(GROUP_CONCAT(rt0.c2))) IN ()) THEN GROUP_CONCAT(COUNT(COUNT(*))) END)) UNION ALL SELECT vt0.c2, rt0.c2 FROM rt0, vt0, v0 GROUP BY vt0.c2, rt0.c2 HAVING ((CASE '132064498'  WHEN AVG(COUNT(*)) THEN ((rt0.c4)!=(vt0.c2)) WHEN ((MAX(COUNT(*))) BETWEEN (TOTAL(AVG(COUNT(*)))) AND (MAX(SUM(rt0.c2)))) THEN ((rt0.c0) NOT BETWEEN (AVG(rt0.c4)) AND (v0.c0)) WHEN (SUM(TOTAL(GROUP_CONCAT(rt0.c2))) IN ()) THEN GROUP_CONCAT(COUNT(COUNT(*))) END) ISNULL);
SELECT ALL TOTAL(CASE CASE vt0.c0  WHEN 0xffffffffad879e07 THEN rt0.c1 END  WHEN ((vt0.c2)>>(rt0.c1)) THEN CASE WHEN x'' THEN vt0.c2 END WHEN ((rt0.c2)=(vt0.c0)) THEN CAST(rt0.c4 AS BLOB) WHEN ((vt0.c2)<<(vt0.c1)) THEN UNLIKELY(rt0.c1) END) FROM vt0, rt0 ORDER BY (((((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c4))))<>(vt0.lid COLLATE BINARY)) DESC;
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE (CASE WHEN v0.c0 THEN v0.c0 END) UNION ALL SELECT * FROM v0 WHERE ((NOT (CASE WHEN v0.c0 THEN v0.c0 END))) UNION ALL SELECT * FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 END) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN v0 ON ((((((((((rt0.c3)LIKE(rt0.c2)))AND(CASE WHEN v0.c0 THEN rt0.c1 END)))AND((rt0.c0 IN ()))))OR((((rt0.c2, rt0.c0, rt0.c4)) NOT BETWEEN ((rt0.c4, rt0.c3, NULL)) AND ((rt0.c0, v0.c0, rt0.c0))))))OR(((((((((((((rt0.c4)OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c1))));
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN v0 ON ((((((((((rt0.c3)LIKE(rt0.c2)))AND(CASE WHEN v0.c0 THEN rt0.c1 END)))AND((rt0.c0 IN ()))))OR((((rt0.c2, rt0.c0, rt0.c4)) NOT BETWEEN ((rt0.c4, rt0.c3, NULL)) AND ((rt0.c0, v0.c0, rt0.c0))))))OR(((((((((((((rt0.c4)OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))) WHERE ((((((rt0.c3)) BETWEEN ((rt0.c0)) AND ((v0.c0)))) NOT NULL)) UNION SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN v0 ON ((((((((((rt0.c3)LIKE(rt0.c2)))AND(CASE WHEN v0.c0 THEN rt0.c1 END)))AND((rt0.c0 IN ()))))OR((((rt0.c2, rt0.c0, rt0.c4)) NOT BETWEEN ((rt0.c4, rt0.c3, NULL)) AND ((rt0.c0, v0.c0, rt0.c0))))))OR(((((((((((((rt0.c4)OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))) WHERE ((NOT ((((((rt0.c3)) BETWEEN ((rt0.c0)) AND ((v0.c0)))) NOT NULL)))) UNION SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN v0 ON ((((((((((rt0.c3)LIKE(rt0.c2)))AND(CASE WHEN v0.c0 THEN rt0.c1 END)))AND((rt0.c0 IN ()))))OR((((rt0.c2, rt0.c0, rt0.c4)) NOT BETWEEN ((rt0.c4, rt0.c3, NULL)) AND ((rt0.c0, v0.c0, rt0.c0))))))OR(((((((((((((rt0.c4)OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))) WHERE ((((((((rt0.c3)) BETWEEN ((rt0.c0)) AND ((v0.c0)))) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN v0 ON ((((((((((rt0.c3)LIKE(rt0.c2)))AND(CASE WHEN v0.c0 THEN rt0.c1 END)))AND((rt0.c0 IN ()))))OR((((rt0.c2, rt0.c0, rt0.c4)) NOT BETWEEN ((rt0.c4, rt0.c3, NULL)) AND ((rt0.c0, v0.c0, rt0.c0))))))OR(((((((((((((rt0.c4)OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c1))));
SELECT rt0.c1, rt0.c4, rt0.c2, rt0.c3, v0.c0 FROM v0 CROSS JOIN rt0 ON CASE WHEN CASE WHEN rt0.c4 THEN rt0.c3 WHEN '' THEN rt0.c2 WHEN rt0.c4 THEN rt0.c1 ELSE v0.c0 END THEN rt0.c0 COLLATE BINARY ELSE (rt0.c3 IN ()) END GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c3, v0.c0;
SELECT rt0.c1, rt0.c4, rt0.c2, rt0.c3, v0.c0 FROM v0 CROSS JOIN rt0 ON CASE WHEN CASE WHEN rt0.c4 THEN rt0.c3 WHEN '' THEN rt0.c2 WHEN rt0.c4 THEN rt0.c1 ELSE v0.c0 END THEN rt0.c0 COLLATE BINARY ELSE (rt0.c3 IN ()) END WHERE (RTRIM(((((rt0.c1)AND(v0.c0)))AND(rt0.c2)))) GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c3, v0.c0 UNION SELECT rt0.c1, rt0.c4, rt0.c2, rt0.c3, v0.c0 FROM v0 CROSS JOIN rt0 ON CASE WHEN CASE WHEN rt0.c4 THEN rt0.c3 WHEN '' THEN rt0.c2 WHEN rt0.c4 THEN rt0.c1 ELSE v0.c0 END THEN rt0.c0 COLLATE BINARY ELSE (rt0.c3 IN ()) END WHERE ((NOT (RTRIM(((((rt0.c1)AND(v0.c0)))AND(rt0.c2)))))) GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c3, v0.c0 UNION SELECT rt0.c1, rt0.c4, rt0.c2, rt0.c3, v0.c0 FROM v0 CROSS JOIN rt0 ON CASE WHEN CASE WHEN rt0.c4 THEN rt0.c3 WHEN '' THEN rt0.c2 WHEN rt0.c4 THEN rt0.c1 ELSE v0.c0 END THEN rt0.c0 COLLATE BINARY ELSE (rt0.c3 IN ()) END WHERE (((RTRIM(((((rt0.c1)AND(v0.c0)))AND(rt0.c2)))) ISNULL)) GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c3, v0.c0;
SELECT rt0.c1, rt0.c4, rt0.c2, rt0.c3, v0.c0 FROM v0 CROSS JOIN rt0 ON CASE WHEN CASE WHEN rt0.c4 THEN rt0.c3 WHEN '' THEN rt0.c2 WHEN rt0.c4 THEN rt0.c1 ELSE v0.c0 END THEN rt0.c0 COLLATE BINARY ELSE (rt0.c3 IN ()) END GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c3, v0.c0;
SELECT ALL rt0.c0, vt0.lid FROM rt0, v0, vt0 GROUP BY rt0.c0, vt0.lid;
SELECT ALL rt0.c0, vt0.lid FROM rt0, v0, vt0 GROUP BY rt0.c0, vt0.lid HAVING ((+ (GROUP_CONCAT(COUNT(*)))) IN ()) UNION ALL SELECT ALL rt0.c0, vt0.lid FROM rt0, v0, vt0 GROUP BY rt0.c0, vt0.lid HAVING (NOT (((+ (GROUP_CONCAT(COUNT(*)))) IN ()))) UNION ALL SELECT rt0.c0, vt0.lid FROM rt0, v0, vt0 GROUP BY rt0.c0, vt0.lid HAVING ((((+ (GROUP_CONCAT(COUNT(*)))) IN ())) ISNULL);
SELECT ALL rt0.c0, vt0.lid FROM rt0, v0, vt0 GROUP BY rt0.c0, vt0.lid;
SELECT ALL rt0.c0, vt0.lid FROM rt0, v0, vt0 GROUP BY rt0.c0, vt0.lid HAVING ((+ (GROUP_CONCAT(COUNT(*)))) IN ()) UNION ALL SELECT ALL rt0.c0, vt0.lid FROM rt0, v0, vt0 GROUP BY rt0.c0, vt0.lid HAVING (NOT (((+ (GROUP_CONCAT(COUNT(*)))) IN ()))) UNION ALL SELECT rt0.c0, vt0.lid FROM rt0, v0, vt0 GROUP BY rt0.c0, vt0.lid HAVING ((((+ (GROUP_CONCAT(COUNT(*)))) IN ())) ISNULL);
SELECT ALL rt0.c0, vt0.lid FROM rt0, v0, vt0 GROUP BY rt0.c0, vt0.lid;
SELECT ALL vt0.lid, vt0.c2 FROM vt0;
SELECT vt0.lid, vt0.c2 FROM vt0 WHERE (CASE WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c2 ELSE vt0.lid END COLLATE RTRIM) UNION ALL SELECT vt0.lid, vt0.c2 FROM vt0 WHERE ((NOT (CASE WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c2 ELSE vt0.lid END COLLATE RTRIM))) UNION ALL SELECT vt0.lid, vt0.c2 FROM vt0 WHERE (((CASE WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c2 ELSE vt0.lid END COLLATE RTRIM) ISNULL));
SELECT ALL vt0.lid, vt0.c2 FROM vt0;
SELECT DISTINCT rt0.c4, rt0.c0, rt0.c2, rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c4, rt0.c0, rt0.c2, rt0.c3 FROM rt0 WHERE (rt0.c3) UNION SELECT DISTINCT rt0.c4, rt0.c0, rt0.c2, rt0.c3 FROM rt0 WHERE ((NOT (rt0.c3))) UNION SELECT DISTINCT rt0.c4, rt0.c0, rt0.c2, rt0.c3 FROM rt0 WHERE (((rt0.c3) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c0, rt0.c2, rt0.c3 FROM rt0;
SELECT ALL rt0.c1, rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c0;
SELECT rt0.c1, rt0.c4, rt0.c0 FROM rt0 WHERE (x'') GROUP BY rt0.c1, rt0.c4, rt0.c0 UNION SELECT rt0.c1, rt0.c4, rt0.c0 FROM rt0 WHERE ((NOT (x''))) GROUP BY rt0.c1, rt0.c4, rt0.c0 UNION SELECT rt0.c1, rt0.c4, rt0.c0 FROM rt0 WHERE (((x'') ISNULL)) GROUP BY rt0.c1, rt0.c4, rt0.c0;
SELECT ALL rt0.c1, rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c0;
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT v0.c0, vt0.lid, vt0.c0, rt0.c4, rt0.c2 FROM v0, vt0 CROSS JOIN rt0 ON ((((((((((vt0.c0) NOT NULL))AND((rt0.c2 IN ()))))AND(((((v0.c0)OR(rt0.c4)))OR(vt0.c1)))))AND((rt0.c3 IN ()))))AND((v0.c0 IN ())));
SELECT ALL v0.c0, vt0.lid, vt0.c0, rt0.c4, rt0.c2 FROM v0, vt0 CROSS JOIN rt0 ON ((((((((((vt0.c0) NOT NULL))AND((rt0.c2 IN ()))))AND(((((v0.c0)OR(rt0.c4)))OR(vt0.c1)))))AND((rt0.c3 IN ()))))AND((v0.c0 IN ()))) WHERE (((((vt0.lid)AND(vt0.c1)))AND(vt0.c1)) COLLATE RTRIM) UNION ALL SELECT v0.c0, vt0.lid, vt0.c0, rt0.c4, rt0.c2 FROM v0, vt0 CROSS JOIN rt0 ON ((((((((((vt0.c0) NOT NULL))AND((rt0.c2 IN ()))))AND(((((v0.c0)OR(rt0.c4)))OR(vt0.c1)))))AND((rt0.c3 IN ()))))AND((v0.c0 IN ()))) WHERE ((NOT (((((vt0.lid)AND(vt0.c1)))AND(vt0.c1)) COLLATE RTRIM))) UNION ALL SELECT v0.c0, vt0.lid, vt0.c0, rt0.c4, rt0.c2 FROM v0, vt0 CROSS JOIN rt0 ON ((((((((((vt0.c0) NOT NULL))AND((rt0.c2 IN ()))))AND(((((v0.c0)OR(rt0.c4)))OR(vt0.c1)))))AND((rt0.c3 IN ()))))AND((v0.c0 IN ()))) WHERE (((((((vt0.lid)AND(vt0.c1)))AND(vt0.c1)) COLLATE RTRIM) ISNULL));
SELECT v0.c0, vt0.lid, vt0.c0, rt0.c4, rt0.c2 FROM v0, vt0 CROSS JOIN rt0 ON ((((((((((vt0.c0) NOT NULL))AND((rt0.c2 IN ()))))AND(((((v0.c0)OR(rt0.c4)))OR(vt0.c1)))))AND((rt0.c3 IN ()))))AND((v0.c0 IN ())));
SELECT DISTINCT rt0.c2, rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c3 FROM rt0 WHERE (rt0.c1) UNION SELECT DISTINCT rt0.c2, rt0.c3 FROM rt0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT rt0.c2, rt0.c3 FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c3 FROM rt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (v0.c0) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (v0.c0))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((v0.c0) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt0.c1, rt0.c3 FROM v0, vt0 INNER JOIN rt0 ON (((vt0.c2)) NOT BETWEEN ((((v0.c0) NOT BETWEEN (rt0.c0) AND (v0.c0)))) AND ((((vt0.c2)|(rt0.c3))))) GROUP BY vt0.c1, rt0.c3;
SELECT ALL vt0.c1, rt0.c3 FROM v0, vt0 INNER JOIN rt0 ON (((vt0.c2)) NOT BETWEEN ((((v0.c0) NOT BETWEEN (rt0.c0) AND (v0.c0)))) AND ((((vt0.c2)|(rt0.c3))))) GROUP BY vt0.c1, rt0.c3 HAVING ((MIN(AVG(MAX(COUNT(*)))))*(GROUP_CONCAT(COUNT(MAX(COUNT(*)))))) UNION ALL SELECT vt0.c1, rt0.c3 FROM v0, vt0 INNER JOIN rt0 ON (((vt0.c2)) NOT BETWEEN ((((v0.c0) NOT BETWEEN (rt0.c0) AND (v0.c0)))) AND ((((vt0.c2)|(rt0.c3))))) GROUP BY vt0.c1, rt0.c3 HAVING (NOT (((MIN(AVG(MAX(COUNT(*)))))*(GROUP_CONCAT(COUNT(MAX(COUNT(*)))))))) UNION ALL SELECT vt0.c1, rt0.c3 FROM v0, vt0 INNER JOIN rt0 ON (((vt0.c2)) NOT BETWEEN ((((v0.c0) NOT BETWEEN (rt0.c0) AND (v0.c0)))) AND ((((vt0.c2)|(rt0.c3))))) GROUP BY vt0.c1, rt0.c3 HAVING ((((MIN(AVG(MAX(COUNT(*)))))*(GROUP_CONCAT(COUNT(MAX(COUNT(*))))))) ISNULL);
SELECT ALL MIN(v0.c0) FROM v0 ORDER BY ((LIKE(v0.c0, v0.c0, '<'))|(TYPEOF(v0.c0))) ASC;
SELECT vt0.c1, vt0.c0 FROM vt0;
SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (((TYPEOF(vt0.c0))IS NOT(((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c0))))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((TYPEOF(vt0.c0))IS NOT(((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c0))))))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (((((TYPEOF(vt0.c0))IS NOT(((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c0))))) ISNULL));
SELECT vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT * FROM rt0, vt0, v0;
SELECT DISTINCT * FROM rt0, vt0, v0 WHERE (((vt0.c0)>=(((v0.c0)%(rt0.c0))))) UNION SELECT DISTINCT * FROM rt0, vt0, v0 WHERE ((NOT (((vt0.c0)>=(((v0.c0)%(rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0, vt0, v0 WHERE (((((vt0.c0)>=(((v0.c0)%(rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0, v0;
SELECT vt0.lid, vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.lid, vt0.c0, vt0.c2;
SELECT ALL vt0.lid, vt0.c0, vt0.c2 FROM vt0 WHERE ((((((vt0.c1))<=((vt0.lid)))) NOT NULL)) GROUP BY vt0.lid, vt0.c0, vt0.c2 UNION SELECT ALL vt0.lid, vt0.c0, vt0.c2 FROM vt0 WHERE ((NOT ((((((vt0.c1))<=((vt0.lid)))) NOT NULL)))) GROUP BY vt0.lid, vt0.c0, vt0.c2 UNION SELECT ALL vt0.lid, vt0.c0, vt0.c2 FROM vt0 WHERE ((((((((vt0.c1))<=((vt0.lid)))) NOT NULL)) ISNULL)) GROUP BY vt0.lid, vt0.c0, vt0.c2;
SELECT vt0.lid, vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.lid, vt0.c0, vt0.c2;
SELECT vt0.c2 FROM vt0, v0 GROUP BY vt0.c2;
SELECT vt0.c2 FROM vt0, v0 GROUP BY vt0.c2 HAVING GROUP_CONCAT((NOT (COUNT(v0.c0)))) UNION ALL SELECT ALL vt0.c2 FROM vt0, v0 GROUP BY vt0.c2 HAVING (NOT (GROUP_CONCAT((NOT (COUNT(v0.c0)))))) UNION ALL SELECT vt0.c2 FROM vt0, v0 GROUP BY vt0.c2 HAVING ((GROUP_CONCAT((NOT (COUNT(v0.c0))))) ISNULL);
SELECT ALL vt0.c1, vt0.lid FROM vt0;
SELECT ALL vt0.c1, vt0.lid FROM vt0 WHERE ((((((((((vt0.lid IN ()))OR((vt0.c1 IN ()))))AND(CASE vt0.lid  WHEN vt0.c2 THEN vt0.c0 WHEN vt0.lid THEN vt0.lid WHEN vt0.c0 THEN vt0.lid ELSE vt0.c2 END)))AND(((vt0.c1)GLOB(vt0.c0)))))AND(x''))) UNION ALL SELECT ALL vt0.c1, vt0.lid FROM vt0 WHERE ((NOT ((((((((((vt0.lid IN ()))OR((vt0.c1 IN ()))))AND(CASE vt0.lid  WHEN vt0.c2 THEN vt0.c0 WHEN vt0.lid THEN vt0.lid WHEN vt0.c0 THEN vt0.lid ELSE vt0.c2 END)))AND(((vt0.c1)GLOB(vt0.c0)))))AND(x''))))) UNION ALL SELECT vt0.c1, vt0.lid FROM vt0 WHERE ((((((((((((vt0.lid IN ()))OR((vt0.c1 IN ()))))AND(CASE vt0.lid  WHEN vt0.c2 THEN vt0.c0 WHEN vt0.lid THEN vt0.lid WHEN vt0.c0 THEN vt0.lid ELSE vt0.c2 END)))AND(((vt0.c1)GLOB(vt0.c0)))))AND(x''))) ISNULL));
SELECT ALL vt0.c1, vt0.lid FROM vt0;
SELECT DISTINCT vt0.c2, rt0.c0, rt0.c1, vt0.c0, v0.c0, vt0.c1, vt0.lid, rt0.c3, rt0.c4, rt0.c2 FROM vt0, v0, rt0;
SELECT DISTINCT vt0.c2, rt0.c0, rt0.c1, vt0.c0, v0.c0, vt0.c1, vt0.lid, rt0.c3, rt0.c4, rt0.c2 FROM vt0, v0, rt0 WHERE ('') UNION SELECT DISTINCT vt0.c2, rt0.c0, rt0.c1, vt0.c0, v0.c0, vt0.c1, vt0.lid, rt0.c3, rt0.c4, rt0.c2 FROM vt0, v0, rt0 WHERE ((NOT (''))) UNION SELECT DISTINCT vt0.c2, rt0.c0, rt0.c1, vt0.c0, v0.c0, vt0.c1, vt0.lid, rt0.c3, rt0.c4, rt0.c2 FROM vt0, v0, rt0 WHERE ((('') ISNULL));
SELECT DISTINCT vt0.c2, rt0.c0, rt0.c1, vt0.c0, v0.c0, vt0.c1, vt0.lid, rt0.c3, rt0.c4, rt0.c2 FROM vt0, v0, rt0;
SELECT ALL rt0.c3, rt0.c4, rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c3, rt0.c4, rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((rt0.c3 IN ())) ISNULL)) GROUP BY rt0.c3, rt0.c4, rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c3, rt0.c4, rt0.c2, rt0.c1, rt0.c0 FROM rt0 NOT INDEXED WHERE ((NOT ((((rt0.c3 IN ())) ISNULL)))) GROUP BY rt0.c3, rt0.c4, rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c3, rt0.c4, rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((((rt0.c3 IN ())) ISNULL)) ISNULL)) GROUP BY rt0.c3, rt0.c4, rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c3, rt0.c4, rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c2, rt0.c1, rt0.c0;
SELECT ALL vt0.c1, vt0.lid, vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.lid, vt0.c2, vt0.c0;
SELECT vt0.c1, vt0.lid, vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.lid, vt0.c2, vt0.c0 HAVING TYPEOF(AVG(vt0.c1)) UNION ALL SELECT vt0.c1, vt0.lid, vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.lid, vt0.c2, vt0.c0 HAVING (NOT (TYPEOF(AVG(vt0.c1)))) UNION ALL SELECT vt0.c1, vt0.lid, vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.lid, vt0.c2, vt0.c0 HAVING ((TYPEOF(AVG(vt0.c1))) ISNULL);
SELECT ALL vt0.c1, vt0.lid, vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.lid, vt0.c2, vt0.c0;
SELECT vt0.c1, vt0.lid, vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.lid, vt0.c2, vt0.c0 HAVING TYPEOF(AVG(vt0.c1)) UNION ALL SELECT vt0.c1, vt0.lid, vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.lid, vt0.c2, vt0.c0 HAVING (NOT (TYPEOF(AVG(vt0.c1)))) UNION ALL SELECT vt0.c1, vt0.lid, vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.lid, vt0.c2, vt0.c0 HAVING ((TYPEOF(AVG(vt0.c1))) ISNULL);
SELECT ALL vt0.c1, vt0.lid, vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.lid, vt0.c2, vt0.c0;
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE ((+ (v0.c0))) UNION ALL SELECT * FROM v0 WHERE ((NOT ((+ (v0.c0))))) UNION ALL SELECT * FROM v0 WHERE ((((+ (v0.c0))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (CASE ((rt0.c2)<(vt0.lid))  WHEN (((vt0.c1, vt0.c1, vt0.c1))<>((rt0.c4, vt0.lid, vt0.c2))) THEN ((vt0.lid)/(vt0.c2)) WHEN ((vt0.c1) ISNULL) THEN TRIM(DISTINCT rt0.c4) WHEN CASE vt0.c2  WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c4 END THEN ((((vt0.c1)AND(rt0.c0)))OR(vt0.c0)) WHEN x'' THEN ((((vt0.c2)OR(vt0.c1)))OR(x'')) WHEN ((rt0.c3) ISNULL) THEN CASE rt0.c3  WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN vt0.lid ELSE rt0.c4 END END) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (CASE ((rt0.c2)<(vt0.lid))  WHEN (((vt0.c1, vt0.c1, vt0.c1))!=((rt0.c4, vt0.lid, vt0.c2))) THEN ((vt0.lid)/(vt0.c2)) WHEN ((vt0.c1) ISNULL) THEN TRIM(DISTINCT rt0.c4) WHEN CASE vt0.c2  WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c4 END THEN ((((vt0.c1)AND(rt0.c0)))OR(vt0.c0)) WHEN x'' THEN ((((vt0.c2)OR(vt0.c1)))OR(x'')) WHEN ((rt0.c3) ISNULL) THEN CASE rt0.c3  WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN vt0.lid ELSE rt0.c4 END END))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((CASE ((rt0.c2)<(vt0.lid))  WHEN (((vt0.c1, vt0.c1, vt0.c1))!=((rt0.c4, vt0.lid, vt0.c2))) THEN ((vt0.lid)/(vt0.c2)) WHEN ((vt0.c1) ISNULL) THEN TRIM(DISTINCT rt0.c4) WHEN CASE vt0.c2  WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c4 END THEN ((((vt0.c1)AND(rt0.c0)))OR(vt0.c0)) WHEN x'' THEN ((((vt0.c2)OR(vt0.c1)))OR(x'')) WHEN ((rt0.c3) ISNULL) THEN CASE rt0.c3  WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN vt0.lid ELSE rt0.c4 END END) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT ALL rt0.c1, vt0.c1, vt0.lid, rt0.c4, rt0.c0, rt0.c2, rt0.c3, vt0.c0 FROM rt0 CROSS JOIN vt0 ON CAST(rt0.c3 COLLATE BINARY AS BLOB) INNER JOIN v0 ON ((((((v0.c0)AND(rt0.c2)))OR(rt0.c3)))=((((v0.c0))>=((rt0.c2))))) GROUP BY rt0.c1, vt0.c1, vt0.lid, rt0.c4, rt0.c0, rt0.c2, rt0.c3, vt0.c0;
SELECT ALL rt0.c1, vt0.c1, vt0.lid, rt0.c4, rt0.c0, rt0.c2, rt0.c3, vt0.c0 FROM rt0 CROSS JOIN vt0 ON CAST(rt0.c3 COLLATE BINARY AS BLOB) INNER JOIN v0 ON ((((((v0.c0)AND(rt0.c2)))OR(rt0.c3)))=((((v0.c0))>=((rt0.c2))))) WHERE (SQLITE_COMPILEOPTION_GET(((vt0.c1) IS FALSE))) GROUP BY rt0.c1, vt0.c1, vt0.lid, rt0.c4, rt0.c0, rt0.c2, rt0.c3, vt0.c0 UNION SELECT ALL rt0.c1, vt0.c1, vt0.lid, rt0.c4, rt0.c0, rt0.c2, rt0.c3, vt0.c0 FROM rt0 CROSS JOIN vt0 ON CAST(rt0.c3 COLLATE BINARY AS BLOB) INNER JOIN v0 ON ((((((v0.c0)AND(rt0.c2)))OR(rt0.c3)))=((((v0.c0))>=((rt0.c2))))) WHERE ((NOT (SQLITE_COMPILEOPTION_GET(((vt0.c1) IS FALSE))))) GROUP BY rt0.c1, vt0.c1, vt0.lid, rt0.c4, rt0.c0, rt0.c2, rt0.c3, vt0.c0 UNION SELECT ALL rt0.c1, vt0.c1, vt0.lid, rt0.c4, rt0.c0, rt0.c2, rt0.c3, vt0.c0 FROM rt0 CROSS JOIN vt0 ON CAST(rt0.c3 COLLATE BINARY AS BLOB) INNER JOIN v0 ON ((((((v0.c0)AND(rt0.c2)))OR(rt0.c3)))=((((v0.c0))>=((rt0.c2))))) WHERE (((SQLITE_COMPILEOPTION_GET(((vt0.c1) IS FALSE))) ISNULL)) GROUP BY rt0.c1, vt0.c1, vt0.lid, rt0.c4, rt0.c0, rt0.c2, rt0.c3, vt0.c0;
SELECT ALL rt0.c1, vt0.c1, vt0.lid, rt0.c4, rt0.c0, rt0.c2, rt0.c3, vt0.c0 FROM rt0 CROSS JOIN vt0 ON CAST(rt0.c3 COLLATE BINARY AS BLOB) INNER JOIN v0 ON ((((((v0.c0)AND(rt0.c2)))OR(rt0.c3)))=((((v0.c0))>=((rt0.c2))))) GROUP BY rt0.c1, vt0.c1, vt0.lid, rt0.c4, rt0.c0, rt0.c2, rt0.c3, vt0.c0;
SELECT vt0.c2 FROM vt0 GROUP BY vt0.c2;
SELECT ALL vt0.c2 FROM vt0 GROUP BY vt0.c2 HAVING ((((((((TOTAL(AVG(x'')))AND(vt0.c0)))AND(MIN(vt0.lid))))AND(vt0.c1)))OR(MIN(TOTAL(MIN(vt0.c1))))) UNION ALL SELECT ALL vt0.c2 FROM vt0 GROUP BY vt0.c2 HAVING (NOT (((((((((TOTAL(AVG(x'')))AND(vt0.c0)))AND(MIN(vt0.lid))))AND(vt0.c1)))OR(MIN(TOTAL(MIN(vt0.c1))))))) UNION ALL SELECT vt0.c2 FROM vt0 GROUP BY vt0.c2 HAVING ((((((((((TOTAL(AVG(x'')))AND(vt0.c0)))AND(MIN(vt0.lid))))AND(vt0.c1)))OR(MIN(TOTAL(MIN(vt0.c1)))))) ISNULL);
SELECT vt0.lid, vt0.c1, rt0.c3, rt0.c4, vt0.c2, rt0.c1, rt0.c2 FROM v0, rt0, vt0;
SELECT vt0.lid, vt0.c1, rt0.c3, rt0.c4, vt0.c2, rt0.c1, rt0.c2 FROM v0, rt0, vt0 WHERE (CAST(((vt0.c2)LIKE(vt0.lid)) AS INTEGER)) UNION ALL SELECT ALL vt0.lid, vt0.c1, rt0.c3, rt0.c4, vt0.c2, rt0.c1, rt0.c2 FROM v0, rt0, vt0 WHERE ((NOT (CAST(((vt0.c2)LIKE(vt0.lid)) AS INTEGER)))) UNION ALL SELECT ALL vt0.lid, vt0.c1, rt0.c3, rt0.c4, vt0.c2, rt0.c1, rt0.c2 FROM v0, rt0, vt0 WHERE (((CAST(((vt0.c2)LIKE(vt0.lid)) AS INTEGER)) ISNULL));
SELECT vt0.lid, vt0.c1, rt0.c3, rt0.c4, vt0.c2, rt0.c1, rt0.c2 FROM v0, rt0, vt0;
SELECT DISTINCT vt0.lid FROM vt0 CROSS JOIN rt0 ON CASE (rt0.c0 IN ())  WHEN rt0.c1 THEN -1.545319155E9 END;
SELECT DISTINCT vt0.lid FROM vt0 CROSS JOIN rt0 ON CASE (rt0.c0 IN ())  WHEN rt0.c1 THEN -1.545319155E9 END WHERE (CASE CASE WHEN -134700658 THEN x'' WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c4 THEN rt0.c2 END  WHEN ((((rt0.c4)AND(rt0.c4)))AND(rt0.c3)) THEN (- (rt0.c1)) END) UNION SELECT DISTINCT vt0.lid FROM vt0 CROSS JOIN rt0 ON CASE (rt0.c0 IN ())  WHEN rt0.c1 THEN -1.545319155E9 END WHERE ((NOT (CASE CASE WHEN -134700658 THEN x'' WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c4 THEN rt0.c2 END  WHEN ((((rt0.c4)AND(rt0.c4)))AND(rt0.c3)) THEN (- (rt0.c1)) END))) UNION SELECT DISTINCT vt0.lid FROM vt0 CROSS JOIN rt0 ON CASE (rt0.c0 IN ())  WHEN rt0.c1 THEN -1.545319155E9 END WHERE (((CASE CASE WHEN -134700658 THEN x'' WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c4 THEN rt0.c2 END  WHEN ((((rt0.c4)AND(rt0.c4)))AND(rt0.c3)) THEN (- (rt0.c1)) END) ISNULL));
SELECT DISTINCT vt0.lid FROM vt0 CROSS JOIN rt0 ON CASE (rt0.c0 IN ())  WHEN rt0.c1 THEN -1.545319155E9 END;
SELECT ALL vt0.c2 FROM vt0 GROUP BY vt0.c2;
SELECT vt0.c2 FROM vt0 WHERE (CASE WHEN (('')=(vt0.lid)) THEN ((((((((vt0.c2)OR(vt0.c0)))AND('YL')))OR(vt0.c0)))AND(0.36082761000830144)) ELSE INSTR(vt0.c1, -47396080) END) GROUP BY vt0.c2 UNION SELECT ALL vt0.c2 FROM vt0 WHERE ((NOT (CASE WHEN (('')=(vt0.lid)) THEN ((((((((vt0.c2)OR(vt0.c0)))AND('YL')))OR(vt0.c0)))AND(0.36082761000830144)) ELSE INSTR(vt0.c1, -47396080) END))) GROUP BY vt0.c2 UNION SELECT vt0.c2 FROM vt0 WHERE (((CASE WHEN (('')==(vt0.lid)) THEN ((((((((vt0.c2)OR(vt0.c0)))AND('YL')))OR(vt0.c0)))AND(0.36082761000830144)) ELSE INSTR(vt0.c1, -47396080) END) ISNULL)) GROUP BY vt0.c2;
SELECT ALL vt0.c2 FROM vt0 GROUP BY vt0.c2;
SELECT ALL vt0.c0, vt0.c1, rt0.c0 FROM rt0 INNER JOIN vt0 ON CASE ((rt0.c3) BETWEEN (vt0.c2) AND (vt0.c0))  WHEN rt0.c1 COLLATE RTRIM THEN ((rt0.c4)IS NOT(-891610373)) ELSE (((vt0.c1)) NOT BETWEEN ((vt0.c2)) AND ((rt0.c3))) END GROUP BY vt0.c0, vt0.c1, rt0.c0;
SELECT vt0.c0, vt0.c1, rt0.c0 FROM rt0 INNER JOIN vt0 ON CASE ((rt0.c3) BETWEEN (vt0.c2) AND (vt0.c0))  WHEN rt0.c1 COLLATE RTRIM THEN ((rt0.c4)IS NOT(-891610373)) ELSE (((vt0.c1)) NOT BETWEEN ((vt0.c2)) AND ((rt0.c3))) END GROUP BY vt0.c0, vt0.c1, rt0.c0 HAVING SUM(GROUP_CONCAT(rt0.c2)) UNION ALL SELECT ALL vt0.c0, vt0.c1, rt0.c0 FROM rt0 INNER JOIN vt0 ON CASE ((rt0.c3) BETWEEN (vt0.c2) AND (vt0.c0))  WHEN rt0.c1 COLLATE RTRIM THEN ((rt0.c4)IS NOT(-891610373)) ELSE (((vt0.c1)) NOT BETWEEN ((vt0.c2)) AND ((rt0.c3))) END GROUP BY vt0.c0, vt0.c1, rt0.c0 HAVING (NOT (SUM(GROUP_CONCAT(rt0.c2)))) UNION ALL SELECT vt0.c0, vt0.c1, rt0.c0 FROM rt0 INNER JOIN vt0 ON CASE ((rt0.c3) BETWEEN (vt0.c2) AND (vt0.c0))  WHEN rt0.c1 COLLATE RTRIM THEN ((rt0.c4)IS NOT(-891610373)) ELSE (((vt0.c1)) NOT BETWEEN ((vt0.c2)) AND ((rt0.c3))) END GROUP BY vt0.c0, vt0.c1, rt0.c0 HAVING ((SUM(GROUP_CONCAT(rt0.c2))) ISNULL);
SELECT rt0.c2, vt0.c0, vt0.lid, rt0.c4, vt0.c2, rt0.c1, rt0.c3, rt0.c0, vt0.c1 FROM vt0 NATURAL JOIN rt0;
SELECT ALL rt0.c2, vt0.c0, vt0.lid, rt0.c4, vt0.c2, rt0.c1, rt0.c3, rt0.c0, vt0.c1 FROM vt0 NATURAL JOIN rt0 WHERE (((HEX(rt0.c2))LIKE(CASE rt0.c1  WHEN vt0.c2 THEN vt0.lid ELSE vt0.lid END))) UNION ALL SELECT rt0.c2, vt0.c0, vt0.lid, rt0.c4, vt0.c2, rt0.c1, rt0.c3, rt0.c0, vt0.c1 FROM vt0 NATURAL JOIN rt0 WHERE ((NOT (((HEX(rt0.c2))LIKE(CASE rt0.c1  WHEN vt0.c2 THEN vt0.lid ELSE vt0.lid END))))) UNION ALL SELECT rt0.c2, vt0.c0, vt0.lid, rt0.c4, vt0.c2, rt0.c1, rt0.c3, rt0.c0, vt0.c1 FROM vt0 NATURAL JOIN rt0 WHERE (((((HEX(rt0.c2))LIKE(CASE rt0.c1  WHEN vt0.c2 THEN vt0.lid ELSE vt0.lid END))) ISNULL));
SELECT rt0.c2, vt0.c0, vt0.lid, rt0.c4, vt0.c2, rt0.c1, rt0.c3, rt0.c0, vt0.c1 FROM vt0 NATURAL JOIN rt0;
SELECT DISTINCT rt0.c0, rt0.c4, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c4, rt0.c2 FROM rt0 WHERE (((((rt0.c3)==(rt0.c1)))||(((rt0.c3)&(rt0.c0))))) UNION SELECT DISTINCT rt0.c0, rt0.c4, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c3)=(rt0.c1)))||(((rt0.c3)&(rt0.c0))))))) UNION SELECT DISTINCT rt0.c0, rt0.c4, rt0.c2 FROM rt0 WHERE (((((((rt0.c3)=(rt0.c1)))||(((rt0.c3)&(rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c4, rt0.c2 FROM rt0;
SELECT ALL vt0.c2 FROM v0, vt0 GROUP BY vt0.c2;
SELECT ALL vt0.c2 FROM v0, vt0 WHERE (CAST(CAST(v0.c0 AS BLOB) AS NUMERIC)) GROUP BY vt0.c2 UNION SELECT ALL vt0.c2 FROM v0, vt0 WHERE ((NOT (CAST(CAST(v0.c0 AS BLOB) AS NUMERIC)))) GROUP BY vt0.c2 UNION SELECT ALL vt0.c2 FROM v0, vt0 WHERE (((CAST(CAST(v0.c0 AS BLOB) AS NUMERIC)) ISNULL)) GROUP BY vt0.c2;
SELECT ALL vt0.c2 FROM v0, vt0 GROUP BY vt0.c2;
SELECT ALL rt0.c1, vt0.c2, rt0.c4, vt0.lid, vt0.c1, v0.c0, rt0.c2, rt0.c0, vt0.c0, rt0.c3 FROM v0, vt0, rt0 GROUP BY rt0.c1, vt0.c2, rt0.c4, vt0.lid, vt0.c1, v0.c0, rt0.c2, rt0.c0, vt0.c0, rt0.c3;
SELECT rt0.c1, vt0.c2, rt0.c4, vt0.lid, vt0.c1, v0.c0, rt0.c2, rt0.c0, vt0.c0, rt0.c3 FROM v0, vt0, rt0 GROUP BY rt0.c1, vt0.c2, rt0.c4, vt0.lid, vt0.c1, v0.c0, rt0.c2, rt0.c0, vt0.c0, rt0.c3 HAVING (+ (COUNT(*))) UNION ALL SELECT ALL rt0.c1, vt0.c2, rt0.c4, vt0.lid, vt0.c1, v0.c0, rt0.c2, rt0.c0, vt0.c0, rt0.c3 FROM v0, vt0, rt0 GROUP BY rt0.c1, vt0.c2, rt0.c4, vt0.lid, vt0.c1, v0.c0, rt0.c2, rt0.c0, vt0.c0, rt0.c3 HAVING (NOT ((+ (COUNT(*))))) UNION ALL SELECT rt0.c1, vt0.c2, rt0.c4, vt0.lid, vt0.c1, v0.c0, rt0.c2, rt0.c0, vt0.c0, rt0.c3 FROM v0, vt0, rt0 GROUP BY rt0.c1, vt0.c2, rt0.c4, vt0.lid, vt0.c1, v0.c0, rt0.c2, rt0.c0, vt0.c0, rt0.c3 HAVING (((+ (COUNT(*)))) ISNULL);
SELECT ALL rt0.c1, vt0.c2, rt0.c4, vt0.lid, vt0.c1, v0.c0, rt0.c2, rt0.c0, vt0.c0, rt0.c3 FROM v0, vt0, rt0 GROUP BY rt0.c1, vt0.c2, rt0.c4, vt0.lid, vt0.c1, v0.c0, rt0.c2, rt0.c0, vt0.c0, rt0.c3;
SELECT rt0.c1, vt0.c2, rt0.c4, vt0.lid, vt0.c1, v0.c0, rt0.c2, rt0.c0, vt0.c0, rt0.c3 FROM v0, vt0, rt0 GROUP BY rt0.c1, vt0.c2, rt0.c4, vt0.lid, vt0.c1, v0.c0, rt0.c2, rt0.c0, vt0.c0, rt0.c3 HAVING (+ (COUNT(*))) UNION ALL SELECT ALL rt0.c1, vt0.c2, rt0.c4, vt0.lid, vt0.c1, v0.c0, rt0.c2, rt0.c0, vt0.c0, rt0.c3 FROM v0, vt0, rt0 GROUP BY rt0.c1, vt0.c2, rt0.c4, vt0.lid, vt0.c1, v0.c0, rt0.c2, rt0.c0, vt0.c0, rt0.c3 HAVING (NOT ((+ (COUNT(*))))) UNION ALL SELECT rt0.c1, vt0.c2, rt0.c4, vt0.lid, vt0.c1, v0.c0, rt0.c2, rt0.c0, vt0.c0, rt0.c3 FROM v0, vt0, rt0 GROUP BY rt0.c1, vt0.c2, rt0.c4, vt0.lid, vt0.c1, v0.c0, rt0.c2, rt0.c0, vt0.c0, rt0.c3 HAVING (((+ (COUNT(*)))) ISNULL);
SELECT ALL rt0.c1, vt0.c2, rt0.c4, vt0.lid, vt0.c1, v0.c0, rt0.c2, rt0.c0, vt0.c0, rt0.c3 FROM v0, vt0, rt0 GROUP BY rt0.c1, vt0.c2, rt0.c4, vt0.lid, vt0.c1, v0.c0, rt0.c2, rt0.c0, vt0.c0, rt0.c3;
SELECT * FROM vt0 LEFT OUTER JOIN v0 ON ((((CASE vt0.c1  WHEN vt0.c2 THEN vt0.c2 END)OR(x'')))OR((NOT (vt0.c2))));
SELECT * FROM vt0 LEFT OUTER JOIN v0 ON ((((CASE vt0.c1  WHEN vt0.c2 THEN vt0.c2 END)OR(x'')))OR((NOT (vt0.c2)))) WHERE (((vt0.c2) NOT BETWEEN (CASE WHEN vt0.c2 THEN vt0.c2 ELSE vt0.lid END) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((v0.c0)))))) UNION ALL SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON ((((CASE vt0.c1  WHEN vt0.c2 THEN vt0.c2 END)OR(x'')))OR((NOT (vt0.c2)))) WHERE ((NOT (((vt0.c2) NOT BETWEEN (CASE WHEN vt0.c2 THEN vt0.c2 ELSE vt0.lid END) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((v0.c0)))))))) UNION ALL SELECT * FROM vt0 LEFT OUTER JOIN v0 ON ((((CASE vt0.c1  WHEN vt0.c2 THEN vt0.c2 END)OR(x'')))OR((NOT (vt0.c2)))) WHERE (((((vt0.c2) NOT BETWEEN (CASE WHEN vt0.c2 THEN vt0.c2 ELSE vt0.lid END) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((v0.c0)))))) ISNULL));
SELECT * FROM vt0 LEFT OUTER JOIN v0 ON ((((CASE vt0.c1  WHEN vt0.c2 THEN vt0.c2 END)OR(x'')))OR((NOT (vt0.c2))));
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((((v0.c0)) BETWEEN ((CAST(v0.c0 AS NUMERIC))) AND ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((((v0.c0)) BETWEEN ((CAST(v0.c0 AS NUMERIC))) AND ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((v0.c0)) BETWEEN ((CAST(v0.c0 AS NUMERIC))) AND ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT rt0.c0, vt0.c1, rt0.c1, vt0.lid, rt0.c4 FROM vt0, v0 LEFT OUTER JOIN rt0 ON ((0.479609735023793 COLLATE NOCASE) NOT BETWEEN ((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2)))) AND (CAST(rt0.c1 AS TEXT))) GROUP BY rt0.c0, vt0.c1, rt0.c1, vt0.lid, rt0.c4;
SELECT ALL rt0.c0, vt0.c1, rt0.c1, vt0.lid, rt0.c4 FROM vt0, v0 LEFT OUTER JOIN rt0 ON ((0.479609735023793 COLLATE NOCASE) NOT BETWEEN ((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2)))) AND (CAST(rt0.c1 AS TEXT))) WHERE (0.5733619215836898) GROUP BY rt0.c0, vt0.c1, rt0.c1, vt0.lid, rt0.c4 UNION SELECT rt0.c0, vt0.c1, rt0.c1, vt0.lid, rt0.c4 FROM vt0, v0 LEFT OUTER JOIN rt0 ON ((0.479609735023793 COLLATE NOCASE) NOT BETWEEN ((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2)))) AND (CAST(rt0.c1 AS TEXT))) WHERE ((NOT (0.5733619215836898))) GROUP BY rt0.c0, vt0.c1, rt0.c1, vt0.lid, rt0.c4 UNION SELECT ALL rt0.c0, vt0.c1, rt0.c1, vt0.lid, rt0.c4 FROM vt0, v0 LEFT OUTER JOIN rt0 ON ((0.479609735023793 COLLATE NOCASE) NOT BETWEEN ((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2)))) AND (CAST(rt0.c1 AS TEXT))) WHERE (((0.5733619215836898) ISNULL)) GROUP BY rt0.c0, vt0.c1, rt0.c1, vt0.lid, rt0.c4;
SELECT rt0.c0, vt0.c1, rt0.c1, vt0.lid, rt0.c4 FROM vt0, v0 LEFT OUTER JOIN rt0 ON ((0.479609735023793 COLLATE NOCASE) NOT BETWEEN ((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2)))) AND (CAST(rt0.c1 AS TEXT))) GROUP BY rt0.c0, vt0.c1, rt0.c1, vt0.lid, rt0.c4;
SELECT ALL vt0.c0, vt0.c2 FROM v0, vt0, rt0 GROUP BY vt0.c0, vt0.c2;
SELECT ALL vt0.c0, vt0.c2 FROM v0, vt0, rt0 GROUP BY vt0.c0, vt0.c2 HAVING COUNT(*) UNION ALL SELECT vt0.c0, vt0.c2 FROM v0, vt0, rt0 GROUP BY vt0.c0, vt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0, vt0.c2 FROM v0, vt0, rt0 GROUP BY vt0.c0, vt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0, vt0.c2 FROM v0, vt0, rt0 GROUP BY vt0.c0, vt0.c2;
SELECT ALL vt0.c0, vt0.c2 FROM v0, vt0, rt0 GROUP BY vt0.c0, vt0.c2 HAVING COUNT(*) UNION ALL SELECT vt0.c0, vt0.c2 FROM v0, vt0, rt0 GROUP BY vt0.c0, vt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0, vt0.c2 FROM v0, vt0, rt0 GROUP BY vt0.c0, vt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0, vt0.c2 FROM v0, vt0, rt0 GROUP BY vt0.c0, vt0.c2;
SELECT ALL MAX(vt0.c0) FROM v0, vt0 ORDER BY CAST((((vt0.lid, vt0.c0, vt0.lid)) NOT BETWEEN ((v0.c0, vt0.lid, vt0.c0)) AND (('', vt0.lid, vt0.c1))) AS NUMERIC) DESC  NULLS FIRST;
SELECT vt0.c2, vt0.c0, vt0.c1, v0.c0 FROM v0 INNER JOIN vt0 ON ((((vt0.c2) NOT BETWEEN (v0.c0) AND (vt0.lid))) NOT NULL);
SELECT vt0.c2, vt0.c0, vt0.c1, v0.c0 FROM v0 INNER JOIN vt0 ON ((((vt0.c2) NOT BETWEEN (v0.c0) AND (vt0.lid))) NOT NULL) WHERE (((((((((((vt0.c2) IS TRUE))AND(((((vt0.lid)OR(vt0.c1)))OR(vt0.c2)))))OR(0.30853723660621357)))OR(v0.c0)))OR(((((((((vt0.c2)OR(v0.c0)))OR(NULL)))OR(vt0.c1)))OR(vt0.c0))))) UNION ALL SELECT vt0.c2, vt0.c0, vt0.c1, v0.c0 FROM v0 INNER JOIN vt0 ON ((((vt0.c2) NOT BETWEEN (v0.c0) AND (vt0.lid))) NOT NULL) WHERE ((NOT (((((((((((vt0.c2) IS TRUE))AND(((((vt0.lid)OR(vt0.c1)))OR(vt0.c2)))))OR(0.30853723660621357)))OR(v0.c0)))OR(((((((((vt0.c2)OR(v0.c0)))OR(NULL)))OR(vt0.c1)))OR(vt0.c0))))))) UNION ALL SELECT ALL vt0.c2, vt0.c0, vt0.c1, v0.c0 FROM v0 INNER JOIN vt0 ON ((((vt0.c2) NOT BETWEEN (v0.c0) AND (vt0.lid))) NOT NULL) WHERE (((((((((((((vt0.c2) IS TRUE))AND(((((vt0.lid)OR(vt0.c1)))OR(vt0.c2)))))OR(0.30853723660621357)))OR(v0.c0)))OR(((((((((vt0.c2)OR(v0.c0)))OR(NULL)))OR(vt0.c1)))OR(vt0.c0))))) ISNULL));
SELECT vt0.c2, vt0.c0, vt0.c1, v0.c0 FROM v0 INNER JOIN vt0 ON ((((vt0.c2) NOT BETWEEN (v0.c0) AND (vt0.lid))) NOT NULL);
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN v0 ON NULL FULL OUTER JOIN rt0 ON (((CASE rt0.c3  WHEN vt0.c2 THEN vt0.lid END))==((((vt0.c0)GLOB(vt0.c1)))));
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN v0 ON NULL FULL OUTER JOIN rt0 ON (((CASE rt0.c3  WHEN vt0.c2 THEN vt0.lid END))==((((vt0.c0)GLOB(vt0.c1))))) WHERE (CASE WHEN (~ (NULL)) THEN (rt0.c4 IN ()) END) UNION SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN v0 ON NULL FULL OUTER JOIN rt0 ON (((CASE rt0.c3  WHEN vt0.c2 THEN vt0.lid END))=((((vt0.c0)GLOB(vt0.c1))))) WHERE ((NOT (CASE WHEN (~ (NULL)) THEN (rt0.c4 IN ()) END))) UNION SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN v0 ON NULL FULL OUTER JOIN rt0 ON (((CASE rt0.c3  WHEN vt0.c2 THEN vt0.lid END))=((((vt0.c0)GLOB(vt0.c1))))) WHERE (((CASE WHEN (~ (NULL)) THEN (rt0.c4 IN ()) END) ISNULL));
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN v0 ON NULL FULL OUTER JOIN rt0 ON (((CASE rt0.c3  WHEN vt0.c2 THEN vt0.lid END))==((((vt0.c0)GLOB(vt0.c1)))));
SELECT ALL vt0.lid, rt0.c3, rt0.c0, rt0.c4, vt0.c2 FROM rt0, vt0 GROUP BY vt0.lid, rt0.c3, rt0.c0, rt0.c4, vt0.c2;
SELECT ALL vt0.lid, rt0.c3, rt0.c0, rt0.c4, vt0.c2 FROM rt0, vt0 WHERE (rt0.c2) GROUP BY vt0.lid, rt0.c3, rt0.c0, rt0.c4, vt0.c2 UNION SELECT vt0.lid, rt0.c3, rt0.c0, rt0.c4, vt0.c2 FROM rt0, vt0 WHERE ((NOT (rt0.c2))) GROUP BY vt0.lid, rt0.c3, rt0.c0, rt0.c4, vt0.c2 UNION SELECT ALL vt0.lid, rt0.c3, rt0.c0, rt0.c4, vt0.c2 FROM rt0, vt0 WHERE (((rt0.c2) ISNULL)) GROUP BY vt0.lid, rt0.c3, rt0.c0, rt0.c4, vt0.c2;
SELECT ALL vt0.lid, rt0.c3, rt0.c0, rt0.c4, vt0.c2 FROM rt0, vt0 GROUP BY vt0.lid, rt0.c3, rt0.c0, rt0.c4, vt0.c2;
SELECT ALL vt0.c1, vt0.c0, rt0.c1, rt0.c3, v0.c0, vt0.c2, rt0.c4, vt0.lid, rt0.c2 FROM v0, vt0, rt0 GROUP BY vt0.c1, vt0.c0, rt0.c1, rt0.c3, v0.c0, vt0.c2, rt0.c4, vt0.lid, rt0.c2;
SELECT vt0.c1, vt0.c0, rt0.c1, rt0.c3, v0.c0, vt0.c2, rt0.c4, vt0.lid, rt0.c2 FROM v0, vt0, rt0 GROUP BY vt0.c1, vt0.c0, rt0.c1, rt0.c3, v0.c0, vt0.c2, rt0.c4, vt0.lid, rt0.c2 HAVING TOTAL(vt0.c0) UNION ALL SELECT ALL vt0.c1, vt0.c0, rt0.c1, rt0.c3, v0.c0, vt0.c2, rt0.c4, vt0.lid, rt0.c2 FROM v0, vt0, rt0 GROUP BY vt0.c1, vt0.c0, rt0.c1, rt0.c3, v0.c0, vt0.c2, rt0.c4, vt0.lid, rt0.c2 HAVING (NOT (TOTAL(vt0.c0))) UNION ALL SELECT vt0.c1, vt0.c0, rt0.c1, rt0.c3, v0.c0, vt0.c2, rt0.c4, vt0.lid, rt0.c2 FROM v0, vt0, rt0 GROUP BY vt0.c1, vt0.c0, rt0.c1, rt0.c3, v0.c0, vt0.c2, rt0.c4, vt0.lid, rt0.c2 HAVING ((TOTAL(vt0.c0)) ISNULL);
SELECT ALL vt0.c1, vt0.c0, rt0.c1, rt0.c3, v0.c0, vt0.c2, rt0.c4, vt0.lid, rt0.c2 FROM v0, vt0, rt0 GROUP BY vt0.c1, vt0.c0, rt0.c1, rt0.c3, v0.c0, vt0.c2, rt0.c4, vt0.lid, rt0.c2;
SELECT vt0.c1, vt0.c0, rt0.c1, rt0.c3, v0.c0, vt0.c2, rt0.c4, vt0.lid, rt0.c2 FROM v0, vt0, rt0 GROUP BY vt0.c1, vt0.c0, rt0.c1, rt0.c3, v0.c0, vt0.c2, rt0.c4, vt0.lid, rt0.c2 HAVING TOTAL(vt0.c0) UNION ALL SELECT ALL vt0.c1, vt0.c0, rt0.c1, rt0.c3, v0.c0, vt0.c2, rt0.c4, vt0.lid, rt0.c2 FROM v0, vt0, rt0 GROUP BY vt0.c1, vt0.c0, rt0.c1, rt0.c3, v0.c0, vt0.c2, rt0.c4, vt0.lid, rt0.c2 HAVING (NOT (TOTAL(vt0.c0))) UNION ALL SELECT vt0.c1, vt0.c0, rt0.c1, rt0.c3, v0.c0, vt0.c2, rt0.c4, vt0.lid, rt0.c2 FROM v0, vt0, rt0 GROUP BY vt0.c1, vt0.c0, rt0.c1, rt0.c3, v0.c0, vt0.c2, rt0.c4, vt0.lid, rt0.c2 HAVING ((TOTAL(vt0.c0)) ISNULL);
SELECT ALL vt0.c1, vt0.c0, rt0.c1, rt0.c3, v0.c0, vt0.c2, rt0.c4, vt0.lid, rt0.c2 FROM v0, vt0, rt0 GROUP BY vt0.c1, vt0.c0, rt0.c1, rt0.c3, v0.c0, vt0.c2, rt0.c4, vt0.lid, rt0.c2;
SELECT rt0.c2, rt0.c1, rt0.c3, rt0.c4, v0.c0, rt0.c0 FROM rt0 RIGHT OUTER JOIN v0 ON LIKELY(DISTINCT ((rt0.c0)IS(rt0.c4)));
SELECT ALL rt0.c2, rt0.c1, rt0.c3, rt0.c4, v0.c0, rt0.c0 FROM rt0 RIGHT OUTER JOIN v0 ON LIKELY(DISTINCT ((rt0.c0)IS(rt0.c4))) WHERE (((((v0.c0)/(rt0.c4))) NOTNULL)) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c3, rt0.c4, v0.c0, rt0.c0 FROM rt0 RIGHT OUTER JOIN v0 ON LIKELY(DISTINCT ((rt0.c0)IS(rt0.c4))) WHERE ((NOT (((((v0.c0)/(rt0.c4))) NOTNULL)))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c3, rt0.c4, v0.c0, rt0.c0 FROM rt0 RIGHT OUTER JOIN v0 ON LIKELY(DISTINCT ((rt0.c0)IS(rt0.c4))) WHERE (((((((v0.c0)/(rt0.c4))) NOTNULL)) ISNULL));
SELECT rt0.c2, rt0.c1, rt0.c3, rt0.c4, v0.c0, rt0.c0 FROM rt0 RIGHT OUTER JOIN v0 ON LIKELY(DISTINCT ((rt0.c0)IS(rt0.c4)));
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (rt0.c0 COLLATE NOCASE) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (rt0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((rt0.c0 COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE (CAST((NULL IN ()) AS REAL)) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT (CAST((NULL IN ()) AS REAL)))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE (((CAST((NULL IN ()) AS REAL)) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT vt0.c0, rt0.c2, vt0.c2 FROM rt0, vt0, v0 GROUP BY vt0.c0, rt0.c2, vt0.c2;
SELECT ALL vt0.c0, rt0.c2, vt0.c2 FROM rt0, vt0, v0 GROUP BY vt0.c0, rt0.c2, vt0.c2 HAVING COUNT((- (v0.c0))) UNION ALL SELECT ALL vt0.c0, rt0.c2, vt0.c2 FROM rt0, vt0 NOT INDEXED, v0 GROUP BY vt0.c0, rt0.c2, vt0.c2 HAVING (NOT (COUNT((- (v0.c0))))) UNION ALL SELECT ALL vt0.c0, rt0.c2, vt0.c2 FROM rt0, vt0, v0 GROUP BY vt0.c0, rt0.c2, vt0.c2 HAVING ((COUNT((- (v0.c0)))) ISNULL);
SELECT vt0.c0, rt0.c2, vt0.c2 FROM rt0, vt0, v0 GROUP BY vt0.c0, rt0.c2, vt0.c2;
SELECT ALL vt0.c0, rt0.c2, vt0.c2 FROM rt0, vt0, v0 GROUP BY vt0.c0, rt0.c2, vt0.c2 HAVING COUNT((- (v0.c0))) UNION ALL SELECT ALL vt0.c0, rt0.c2, vt0.c2 FROM rt0, vt0 NOT INDEXED, v0 GROUP BY vt0.c0, rt0.c2, vt0.c2 HAVING (NOT (COUNT((- (v0.c0))))) UNION ALL SELECT ALL vt0.c0, rt0.c2, vt0.c2 FROM rt0, vt0, v0 GROUP BY vt0.c0, rt0.c2, vt0.c2 HAVING ((COUNT((- (v0.c0)))) ISNULL);
SELECT vt0.c0, rt0.c2, vt0.c2 FROM rt0, vt0, v0 GROUP BY vt0.c0, rt0.c2, vt0.c2;
SELECT * FROM v0 NOT INDEXED, rt0;
SELECT ALL * FROM v0, rt0 WHERE ((((rt0.c3, rt0.c1, rt0.c2)) BETWEEN ((rt0.c4, x'', '1544613709')) AND ((v0.c0, rt0.c3, rt0.c3))) COLLATE NOCASE) UNION ALL SELECT * FROM v0, rt0 WHERE ((NOT ((((rt0.c3, rt0.c1, rt0.c2)) BETWEEN ((rt0.c4, x'', '1544613709')) AND ((v0.c0, rt0.c3, rt0.c3))) COLLATE NOCASE))) UNION ALL SELECT * FROM v0, rt0 WHERE ((((((rt0.c3, rt0.c1, rt0.c2)) BETWEEN ((rt0.c4, x'', '1544613709')) AND ((v0.c0, rt0.c3, rt0.c3))) COLLATE NOCASE) ISNULL));
SELECT * FROM v0 NOT INDEXED, rt0;
SELECT DISTINCT vt0.lid, vt0.c0, vt0.c2, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.lid, vt0.c0, vt0.c2, vt0.c1 FROM vt0 WHERE (((3.04529102E8) IS FALSE) COLLATE BINARY) UNION SELECT DISTINCT vt0.lid, vt0.c0, vt0.c2, vt0.c1 FROM vt0 WHERE ((NOT (((3.04529102E8) IS FALSE) COLLATE BINARY))) UNION SELECT DISTINCT vt0.lid, vt0.c0, vt0.c2, vt0.c1 FROM vt0 WHERE (((((3.04529102E8) IS FALSE) COLLATE BINARY) ISNULL));
SELECT DISTINCT vt0.lid, vt0.c0, vt0.c2, vt0.c1 FROM vt0;
SELECT ALL vt0.c0, vt0.c1, v0.c0, vt0.lid FROM vt0 RIGHT OUTER JOIN v0 ON ((((vt0.c1) ISNULL)) NOTNULL) GROUP BY vt0.c0, vt0.c1, v0.c0, vt0.lid;
SELECT vt0.c0, vt0.c1, v0.c0, vt0.lid FROM vt0 RIGHT OUTER JOIN v0 ON ((((vt0.c1) ISNULL)) NOTNULL) WHERE (vt0.c2) GROUP BY vt0.c0, vt0.c1, v0.c0, vt0.lid UNION SELECT ALL vt0.c0, vt0.c1, v0.c0, vt0.lid FROM vt0 RIGHT OUTER JOIN v0 ON ((((vt0.c1) ISNULL)) NOTNULL) WHERE ((NOT (vt0.c2))) GROUP BY vt0.c0, vt0.c1, v0.c0, vt0.lid UNION SELECT ALL vt0.c0, vt0.c1, v0.c0, vt0.lid FROM vt0 RIGHT OUTER JOIN v0 ON ((((vt0.c1) ISNULL)) NOTNULL) WHERE (((vt0.c2) ISNULL)) GROUP BY vt0.c0, vt0.c1, v0.c0, vt0.lid;
SELECT ALL vt0.c0, vt0.c1, v0.c0, vt0.lid FROM vt0 RIGHT OUTER JOIN v0 ON ((((vt0.c1) ISNULL)) NOTNULL) GROUP BY vt0.c0, vt0.c1, v0.c0, vt0.lid;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING SUM(v0.c0) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (SUM(v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((SUM(v0.c0)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING SUM(v0.c0) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (SUM(v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((SUM(v0.c0)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt0.c1, vt0.c2, vt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON ((1573710272) BETWEEN (((rt0.c2)IS(rt0.c1))) AND ((NOT (rt0.c1))));
SELECT vt0.c1, vt0.c2, vt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON ((1573710272) BETWEEN (((rt0.c2)IS(rt0.c1))) AND ((NOT (rt0.c1)))) WHERE (((((vt0.c1) IS TRUE)) IS FALSE)) UNION ALL SELECT vt0.c1, vt0.c2, vt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON ((1573710272) BETWEEN (((rt0.c2)IS(rt0.c1))) AND ((NOT (rt0.c1)))) WHERE ((NOT (((((vt0.c1) IS TRUE)) IS FALSE)))) UNION ALL SELECT ALL vt0.c1, vt0.c2, vt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON ((1573710272) BETWEEN (((rt0.c2)IS(rt0.c1))) AND ((NOT (rt0.c1)))) WHERE (((((((vt0.c1) IS TRUE)) IS FALSE)) ISNULL));
SELECT vt0.c1, vt0.c2, vt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON ((1573710272) BETWEEN (((rt0.c2)IS(rt0.c1))) AND ((NOT (rt0.c1))));
SELECT DISTINCT * FROM v0, rt0 CROSS JOIN vt0 ON v0.c0;
SELECT DISTINCT * FROM v0, rt0 CROSS JOIN vt0 ON v0.c0 WHERE (CASE CAST(v0.c0 AS INTEGER)  WHEN (vt0.lid IN ()) THEN ((vt0.c2) IS FALSE) WHEN json_quote(vt0.c1) THEN (+ (vt0.c0)) WHEN ((rt0.c0)==(v0.c0)) THEN CASE WHEN rt0.c3 THEN vt0.lid ELSE rt0.c3 END WHEN vt0.c0 COLLATE NOCASE THEN ((rt0.c1)<(vt0.lid)) WHEN ((rt0.c4) BETWEEN (v0.c0) AND (rt0.c0)) THEN json_array_length(rt0.c1, v0.c0) END) UNION SELECT DISTINCT * FROM v0, rt0 CROSS JOIN vt0 ON v0.c0 WHERE ((NOT (CASE CAST(v0.c0 AS INTEGER)  WHEN (vt0.lid IN ()) THEN ((vt0.c2) IS FALSE) WHEN json_quote(vt0.c1) THEN (+ (vt0.c0)) WHEN ((rt0.c0)=(v0.c0)) THEN CASE WHEN rt0.c3 THEN vt0.lid ELSE rt0.c3 END WHEN vt0.c0 COLLATE NOCASE THEN ((rt0.c1)<(vt0.lid)) WHEN ((rt0.c4) BETWEEN (v0.c0) AND (rt0.c0)) THEN json_array_length(rt0.c1, v0.c0) END))) UNION SELECT DISTINCT * FROM v0, rt0 CROSS JOIN vt0 ON v0.c0 WHERE (((CASE CAST(v0.c0 AS INTEGER)  WHEN (vt0.lid IN ()) THEN ((vt0.c2) IS FALSE) WHEN json_quote(vt0.c1) THEN (+ (vt0.c0)) WHEN ((rt0.c0)=(v0.c0)) THEN CASE WHEN rt0.c3 THEN vt0.lid ELSE rt0.c3 END WHEN vt0.c0 COLLATE NOCASE THEN ((rt0.c1)<(vt0.lid)) WHEN ((rt0.c4) BETWEEN (v0.c0) AND (rt0.c0)) THEN json_array_length(rt0.c1, v0.c0) END) ISNULL));
SELECT DISTINCT * FROM v0, rt0 CROSS JOIN vt0 ON v0.c0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c0, rt0.c1, v0.c0;
SELECT rt0.c2, rt0.c0, rt0.c1, v0.c0 FROM rt0, v0 WHERE (((0.51675227700613) IS TRUE)) GROUP BY rt0.c2, rt0.c0, rt0.c1, v0.c0 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1, v0.c0 FROM rt0, v0 WHERE ((NOT (((0.51675227700613) IS TRUE)))) GROUP BY rt0.c2, rt0.c0, rt0.c1, v0.c0 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1, v0.c0 FROM rt0, v0 WHERE (((((0.51675227700613) IS TRUE)) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1, v0.c0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c0, rt0.c1, v0.c0;
SELECT ALL vt0.lid, v0.c0, vt0.c2, rt0.c3, vt0.c0 FROM v0, rt0, vt0 GROUP BY vt0.lid, v0.c0, vt0.c2, rt0.c3, vt0.c0;
SELECT ALL vt0.lid, v0.c0, vt0.c2, rt0.c3, vt0.c0 FROM v0, rt0, vt0 GROUP BY vt0.lid, v0.c0, vt0.c2, rt0.c3, vt0.c0 HAVING ((((vt0.c0 COLLATE RTRIM)AND(((vt0.lid)GLOB(vt0.lid)))))AND(COUNT(*))) UNION ALL SELECT vt0.lid, v0.c0, vt0.c2, rt0.c3, vt0.c0 FROM v0, rt0, vt0 GROUP BY vt0.lid, v0.c0, vt0.c2, rt0.c3, vt0.c0 HAVING (NOT (((((vt0.c0 COLLATE RTRIM)AND(((vt0.lid)GLOB(vt0.lid)))))AND(COUNT(*))))) UNION ALL SELECT vt0.lid, v0.c0, vt0.c2, rt0.c3, vt0.c0 FROM v0, rt0, vt0 GROUP BY vt0.lid, v0.c0, vt0.c2, rt0.c3, vt0.c0 HAVING ((((((vt0.c0 COLLATE RTRIM)AND(((vt0.lid)GLOB(vt0.lid)))))AND(COUNT(*)))) ISNULL);
SELECT ALL vt0.lid, v0.c0, vt0.c2, rt0.c3, vt0.c0 FROM v0, rt0, vt0 GROUP BY vt0.lid, v0.c0, vt0.c2, rt0.c3, vt0.c0;
SELECT ALL vt0.lid, v0.c0, vt0.c2, rt0.c3, vt0.c0 FROM v0, rt0, vt0 GROUP BY vt0.lid, v0.c0, vt0.c2, rt0.c3, vt0.c0 HAVING ((((vt0.c0 COLLATE RTRIM)AND(((vt0.lid)GLOB(vt0.lid)))))AND(COUNT(*))) UNION ALL SELECT vt0.lid, v0.c0, vt0.c2, rt0.c3, vt0.c0 FROM v0, rt0, vt0 GROUP BY vt0.lid, v0.c0, vt0.c2, rt0.c3, vt0.c0 HAVING (NOT (((((vt0.c0 COLLATE RTRIM)AND(((vt0.lid)GLOB(vt0.lid)))))AND(COUNT(*))))) UNION ALL SELECT vt0.lid, v0.c0, vt0.c2, rt0.c3, vt0.c0 FROM v0, rt0, vt0 GROUP BY vt0.lid, v0.c0, vt0.c2, rt0.c3, vt0.c0 HAVING ((((((vt0.c0 COLLATE RTRIM)AND(((vt0.lid)GLOB(vt0.lid)))))AND(COUNT(*)))) ISNULL);
SELECT ALL vt0.lid, v0.c0, vt0.c2, rt0.c3, vt0.c0 FROM v0, rt0, vt0 GROUP BY vt0.lid, v0.c0, vt0.c2, rt0.c3, vt0.c0;
SELECT * FROM v0;
SELECT * FROM v0 WHERE (((v0.c0) NOTNULL) COLLATE BINARY) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (((v0.c0) NOTNULL) COLLATE BINARY))) UNION ALL SELECT ALL * FROM v0 WHERE (((((v0.c0) NOTNULL) COLLATE BINARY) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (((v0.c0) NOT NULL) COLLATE BINARY) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (((v0.c0) NOT NULL) COLLATE BINARY))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((((v0.c0) NOT NULL) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT rt0.c2 FROM vt0, rt0 RIGHT OUTER JOIN v0 ON CASE ((((rt0.c2)OR(rt0.c0)))OR(vt0.c2))  WHEN rt0.c0 COLLATE RTRIM THEN ((rt0.c2) IS TRUE) END GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt0, rt0 RIGHT OUTER JOIN v0 ON CASE ((((rt0.c2)OR(rt0.c0)))OR(vt0.c2))  WHEN rt0.c0 COLLATE RTRIM THEN ((rt0.c2) IS TRUE) END WHERE (((NULL)AND(json_array(rt0.c4, vt0.lid)))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM vt0, rt0 RIGHT OUTER JOIN v0 ON CASE ((((rt0.c2)OR(rt0.c0)))OR(vt0.c2))  WHEN rt0.c0 COLLATE RTRIM THEN ((rt0.c2) IS TRUE) END WHERE ((NOT (((NULL)AND(json_array(rt0.c4, vt0.lid)))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM vt0, rt0 NOT INDEXED RIGHT OUTER JOIN v0 ON CASE ((((rt0.c2)OR(rt0.c0)))OR(vt0.c2))  WHEN rt0.c0 COLLATE RTRIM THEN ((rt0.c2) IS TRUE) END WHERE (((((NULL)AND(json_array(rt0.c4, vt0.lid)))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM vt0, rt0 RIGHT OUTER JOIN v0 ON CASE ((((rt0.c2)OR(rt0.c0)))OR(vt0.c2))  WHEN rt0.c0 COLLATE RTRIM THEN ((rt0.c2) IS TRUE) END GROUP BY rt0.c2;
SELECT rt0.c2, v0.c0, rt0.c3 FROM v0, rt0 GROUP BY rt0.c2, v0.c0, rt0.c3;
SELECT rt0.c2, v0.c0, rt0.c3 FROM v0, rt0 GROUP BY rt0.c2, v0.c0, rt0.c3 HAVING CASE COUNT(COUNT(MAX(TOTAL(AVG(MAX(AVG(TOTAL(rt0.c3))))))))  WHEN CAST(SUM(MIN(COUNT(*))) AS TEXT) THEN TOTAL(SUM(MIN(AVG(COUNT(MAX(rt0.c4)))))) END UNION ALL SELECT ALL rt0.c2, v0.c0, rt0.c3 FROM v0, rt0 GROUP BY rt0.c2, v0.c0, rt0.c3 HAVING (NOT (CASE COUNT(COUNT(MAX(TOTAL(AVG(MAX(AVG(TOTAL(rt0.c3))))))))  WHEN CAST(SUM(MIN(COUNT(*))) AS TEXT) THEN TOTAL(SUM(MIN(AVG(COUNT(MAX(rt0.c4)))))) END)) UNION ALL SELECT ALL rt0.c2, v0.c0, rt0.c3 FROM v0, rt0 GROUP BY rt0.c2, v0.c0, rt0.c3 HAVING ((CASE COUNT(COUNT(MAX(TOTAL(AVG(MAX(AVG(TOTAL(rt0.c3))))))))  WHEN CAST(SUM(MIN(COUNT(*))) AS TEXT) THEN TOTAL(SUM(MIN(AVG(COUNT(MAX(rt0.c4)))))) END) ISNULL);
SELECT ALL vt0.c2 FROM vt0, v0, rt0;
SELECT vt0.c2 FROM vt0, v0, rt0 WHERE (((((((((vt0.lid)OR(((rt0.c3) BETWEEN (v0.c0) AND (rt0.c1)))))AND(GLOB(rt0.c4, 0.8680282292784834))))AND(vt0.lid COLLATE NOCASE)))OR(CAST(vt0.c2 AS TEXT)))) UNION ALL SELECT vt0.c2 FROM vt0, v0, rt0 WHERE ((NOT (((((((((vt0.lid)OR(((rt0.c3) BETWEEN (v0.c0) AND (rt0.c1)))))AND(GLOB(rt0.c4, 0.8680282292784834))))AND(vt0.lid COLLATE NOCASE)))OR(CAST(vt0.c2 AS TEXT)))))) UNION ALL SELECT ALL vt0.c2 FROM vt0, v0, rt0 WHERE (((((((((((vt0.lid)OR(((rt0.c3) BETWEEN (v0.c0) AND (rt0.c1)))))AND(GLOB(rt0.c4, 0.8680282292784834))))AND(vt0.lid COLLATE NOCASE)))OR(CAST(vt0.c2 AS TEXT)))) ISNULL));
SELECT ALL vt0.c2 FROM vt0, v0, rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (highlight(((v0.c0) BETWEEN (NULL) AND (v0.c0)), ((v0.c0)+(v0.c0)), ((((v0.c0)OR(v0.c0)))OR(v0.c0)), x'')) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (highlight(((v0.c0) BETWEEN (NULL) AND (v0.c0)), ((v0.c0)+(v0.c0)), ((((v0.c0)OR(v0.c0)))OR(v0.c0)), x'')))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((highlight(((v0.c0) BETWEEN (NULL) AND (v0.c0)), ((v0.c0)+(v0.c0)), ((((v0.c0)OR(v0.c0)))OR(v0.c0)), x'')) ISNULL));
SELECT rt0.c3, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c3, v0.c0, rt0.c0;
SELECT ALL rt0.c3, v0.c0, rt0.c0 FROM v0, rt0 WHERE (((((((x'')<<(v0.c0)))AND((rt0.c2 IN (rt0.c3)))))AND(rt0.c3))) GROUP BY rt0.c3, v0.c0, rt0.c0 UNION SELECT ALL rt0.c3, v0.c0, rt0.c0 FROM v0, rt0 WHERE ((NOT (((((((x'')<<(v0.c0)))AND((rt0.c2 IN (rt0.c3)))))AND(rt0.c3))))) GROUP BY rt0.c3, v0.c0, rt0.c0 UNION SELECT ALL rt0.c3, v0.c0, rt0.c0 FROM v0, rt0 WHERE (((((((((x'')<<(v0.c0)))AND((rt0.c2 IN (rt0.c3)))))AND(rt0.c3))) ISNULL)) GROUP BY rt0.c3, v0.c0, rt0.c0;
SELECT rt0.c3, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c3, v0.c0, rt0.c0;
SELECT v0.c0, vt0.c1, vt0.c0, vt0.c2 FROM rt0, v0 RIGHT OUTER JOIN vt0 ON ((('ꝛePu'))<((MAX(vt0.c2, vt0.c2, rt0.c1, v0.c0)))) GROUP BY v0.c0, vt0.c1, vt0.c0, vt0.c2;
SELECT v0.c0, vt0.c1, vt0.c0, vt0.c2 FROM rt0, v0 RIGHT OUTER JOIN vt0 ON ((('ꝛePu'))<((MAX(vt0.c2, vt0.c2, rt0.c1, v0.c0)))) GROUP BY v0.c0, vt0.c1, vt0.c0, vt0.c2 HAVING MAX(((rt0.c4)*(vt0.lid))) UNION ALL SELECT v0.c0, vt0.c1, vt0.c0, vt0.c2 FROM rt0, v0 RIGHT OUTER JOIN vt0 ON ((('ꝛePu'))<((MAX(vt0.c2, vt0.c2, rt0.c1, v0.c0)))) GROUP BY v0.c0, vt0.c1, vt0.c0, vt0.c2 HAVING (NOT (MAX(((rt0.c4)*(vt0.lid))))) UNION ALL SELECT v0.c0, vt0.c1, vt0.c0, vt0.c2 FROM rt0, v0 RIGHT OUTER JOIN vt0 ON ((('ꝛePu'))<((MAX(vt0.c2, vt0.c2, rt0.c1, v0.c0)))) GROUP BY v0.c0, vt0.c1, vt0.c0, vt0.c2 HAVING ((MAX(((rt0.c4)*(vt0.lid)))) ISNULL);
SELECT v0.c0, vt0.c1, vt0.c0, vt0.c2 FROM rt0, v0 RIGHT OUTER JOIN vt0 ON ((('ꝛePu'))<((MAX(vt0.c2, vt0.c2, rt0.c1, v0.c0)))) GROUP BY v0.c0, vt0.c1, vt0.c0, vt0.c2;
SELECT v0.c0, vt0.c1, vt0.c0, vt0.c2 FROM rt0, v0 RIGHT OUTER JOIN vt0 ON ((('ꝛePu'))<((MAX(vt0.c2, vt0.c2, rt0.c1, v0.c0)))) GROUP BY v0.c0, vt0.c1, vt0.c0, vt0.c2 HAVING MAX(((rt0.c4)*(vt0.lid))) UNION ALL SELECT v0.c0, vt0.c1, vt0.c0, vt0.c2 FROM rt0, v0 RIGHT OUTER JOIN vt0 ON ((('ꝛePu'))<((MAX(vt0.c2, vt0.c2, rt0.c1, v0.c0)))) GROUP BY v0.c0, vt0.c1, vt0.c0, vt0.c2 HAVING (NOT (MAX(((rt0.c4)*(vt0.lid))))) UNION ALL SELECT v0.c0, vt0.c1, vt0.c0, vt0.c2 FROM rt0, v0 RIGHT OUTER JOIN vt0 ON ((('ꝛePu'))<((MAX(vt0.c2, vt0.c2, rt0.c1, v0.c0)))) GROUP BY v0.c0, vt0.c1, vt0.c0, vt0.c2 HAVING ((MAX(((rt0.c4)*(vt0.lid)))) ISNULL);
SELECT v0.c0, vt0.c1, vt0.c0, vt0.c2 FROM rt0, v0 RIGHT OUTER JOIN vt0 ON ((('ꝛePu'))<((MAX(vt0.c2, vt0.c2, rt0.c1, v0.c0)))) GROUP BY v0.c0, vt0.c1, vt0.c0, vt0.c2;
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (((v0.c0 COLLATE BINARY)*(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (((v0.c0 COLLATE BINARY)*(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))))) UNION ALL SELECT ALL * FROM v0 WHERE (((((v0.c0 COLLATE BINARY)*(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((~ ((((vt0.c1)) NOT BETWEEN ((vt0.lid)) AND ((vt0.lid)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((~ ((((vt0.c1)) NOT BETWEEN ((vt0.lid)) AND ((vt0.lid)))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((~ ((((vt0.c1)) NOT BETWEEN ((vt0.lid)) AND ((vt0.lid)))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL rt0.c4 FROM rt0 GROUP BY rt0.c4;
SELECT rt0.c4 FROM rt0 WHERE (rt0.c0) GROUP BY rt0.c4 UNION SELECT ALL rt0.c4 FROM rt0 WHERE ((NOT (rt0.c0))) GROUP BY rt0.c4 UNION SELECT ALL rt0.c4 FROM rt0 WHERE (((rt0.c0) ISNULL)) GROUP BY rt0.c4;
SELECT ALL rt0.c4 FROM rt0 GROUP BY rt0.c4;
SELECT rt0.c2, vt0.c1, rt0.c4, vt0.lid, rt0.c3, vt0.c0, rt0.c0, rt0.c1, vt0.c2 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c1, rt0.c4, vt0.lid, rt0.c3, vt0.c0, rt0.c0, rt0.c1, vt0.c2;
SELECT ALL rt0.c2, vt0.c1, rt0.c4, vt0.lid, rt0.c3, vt0.c0, rt0.c0, rt0.c1, vt0.c2 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c1, rt0.c4, vt0.lid, rt0.c3, vt0.c0, rt0.c0, rt0.c1, vt0.c2 HAVING MAX(MIN(MIN(rt0.c1))) UNION ALL SELECT ALL rt0.c2, vt0.c1, rt0.c4, vt0.lid, rt0.c3, vt0.c0, rt0.c0, rt0.c1, vt0.c2 FROM vt0 NOT INDEXED, rt0 GROUP BY rt0.c2, vt0.c1, rt0.c4, vt0.lid, rt0.c3, vt0.c0, rt0.c0, rt0.c1, vt0.c2 HAVING (NOT (MAX(MIN(MIN(rt0.c1))))) UNION ALL SELECT ALL rt0.c2, vt0.c1, rt0.c4, vt0.lid, rt0.c3, vt0.c0, rt0.c0, rt0.c1, vt0.c2 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c1, rt0.c4, vt0.lid, rt0.c3, vt0.c0, rt0.c0, rt0.c1, vt0.c2 HAVING ((MAX(MIN(MIN(rt0.c1)))) ISNULL);
SELECT vt0.c1, rt0.c4, rt0.c3, vt0.lid, vt0.c0, v0.c0, rt0.c1, vt0.c2, rt0.c2 FROM rt0, vt0 LEFT OUTER JOIN v0 ON (NULL IN (vt0.c1)) COLLATE NOCASE;
SELECT ALL vt0.c1, rt0.c4, rt0.c3, vt0.lid, vt0.c0, v0.c0, rt0.c1, vt0.c2, rt0.c2 FROM rt0, vt0 LEFT OUTER JOIN v0 ON (NULL IN (vt0.c1)) COLLATE NOCASE WHERE (((rt0.c4)!=(((vt0.c2)IS NOT(rt0.c2))))) UNION ALL SELECT ALL vt0.c1, rt0.c4, rt0.c3, vt0.lid, vt0.c0, v0.c0, rt0.c1, vt0.c2, rt0.c2 FROM rt0, vt0 LEFT OUTER JOIN v0 ON (NULL IN (vt0.c1)) COLLATE NOCASE WHERE ((NOT (((rt0.c4)!=(((vt0.c2)IS NOT(rt0.c2))))))) UNION ALL SELECT vt0.c1, rt0.c4, rt0.c3, vt0.lid, vt0.c0, v0.c0, rt0.c1, vt0.c2, rt0.c2 FROM rt0, vt0 LEFT OUTER JOIN v0 ON (NULL IN (vt0.c1)) COLLATE NOCASE WHERE (((((rt0.c4)!=(((vt0.c2)IS NOT(rt0.c2))))) ISNULL));
SELECT vt0.c1, rt0.c4, rt0.c3, vt0.lid, vt0.c0, v0.c0, rt0.c1, vt0.c2, rt0.c2 FROM rt0, vt0 LEFT OUTER JOIN v0 ON (NULL IN (vt0.c1)) COLLATE NOCASE;
SELECT DISTINCT rt0.c4, rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c4, rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0 WHERE (rt0.c2) UNION SELECT DISTINCT rt0.c4, rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT rt0.c4, rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0;
SELECT ALL v0.c0, rt0.c0, rt0.c2, vt0.c2, vt0.c0, vt0.lid, vt0.c1 FROM vt0 CROSS JOIN rt0 ON rt0.c2 CROSS JOIN v0 ON ((((rt0.c1)<=(x'5d5b'))) NOT BETWEEN (CASE WHEN rt0.c3 THEN rt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.lid END) AND (vt0.lid COLLATE RTRIM)) GROUP BY v0.c0, rt0.c0, rt0.c2, vt0.c2, vt0.c0, vt0.lid, vt0.c1;
SELECT ALL v0.c0, rt0.c0, rt0.c2, vt0.c2, vt0.c0, vt0.lid, vt0.c1 FROM vt0 CROSS JOIN rt0 ON rt0.c2 CROSS JOIN v0 ON ((((rt0.c1)<=(x'5d5b'))) NOT BETWEEN (CASE WHEN rt0.c3 THEN rt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.lid END) AND (vt0.lid COLLATE RTRIM)) WHERE (((((((vt0.c0)OR(0.19800811943038332)))AND(v0.c0)))/(((vt0.c0)/(rt0.c1))))) GROUP BY v0.c0, rt0.c0, rt0.c2, vt0.c2, vt0.c0, vt0.lid, vt0.c1 UNION SELECT v0.c0, rt0.c0, rt0.c2, vt0.c2, vt0.c0, vt0.lid, vt0.c1 FROM vt0 CROSS JOIN rt0 ON rt0.c2 CROSS JOIN v0 ON ((((rt0.c1)<=(x'5d5b'))) NOT BETWEEN (CASE WHEN rt0.c3 THEN rt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.lid END) AND (vt0.lid COLLATE RTRIM)) WHERE ((NOT (((((((vt0.c0)OR(0.19800811943038332)))AND(v0.c0)))/(((vt0.c0)/(rt0.c1))))))) GROUP BY v0.c0, rt0.c0, rt0.c2, vt0.c2, vt0.c0, vt0.lid, vt0.c1 UNION SELECT v0.c0, rt0.c0, rt0.c2, vt0.c2, vt0.c0, vt0.lid, vt0.c1 FROM vt0 CROSS JOIN rt0 ON rt0.c2 CROSS JOIN v0 ON ((((rt0.c1)<=(x'5d5b'))) NOT BETWEEN (CASE WHEN rt0.c3 THEN rt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.lid END) AND (vt0.lid COLLATE RTRIM)) WHERE (((((((((vt0.c0)OR(0.19800811943038332)))AND(v0.c0)))/(((vt0.c0)/(rt0.c1))))) ISNULL)) GROUP BY v0.c0, rt0.c0, rt0.c2, vt0.c2, vt0.c0, vt0.lid, vt0.c1;
SELECT ALL v0.c0, rt0.c0, rt0.c2, vt0.c2, vt0.c0, vt0.lid, vt0.c1 FROM vt0 CROSS JOIN rt0 ON rt0.c2 CROSS JOIN v0 ON ((((rt0.c1)<=(x'5d5b'))) NOT BETWEEN (CASE WHEN rt0.c3 THEN rt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.lid END) AND (vt0.lid COLLATE RTRIM)) GROUP BY v0.c0, rt0.c0, rt0.c2, vt0.c2, vt0.c0, vt0.lid, vt0.c1;
SELECT ALL rt0.c0, rt0.c4, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, rt0.c4, rt0.c1;
SELECT rt0.c0, rt0.c4, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, rt0.c4, rt0.c1 HAVING MAX(MIN(MAX(MIN(rt0.c2)))) UNION ALL SELECT ALL rt0.c0, rt0.c4, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, rt0.c4, rt0.c1 HAVING (NOT (MAX(MIN(MAX(MIN(rt0.c2)))))) UNION ALL SELECT ALL rt0.c0, rt0.c4, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, rt0.c4, rt0.c1 HAVING ((MAX(MIN(MAX(MIN(rt0.c2))))) ISNULL);
SELECT * FROM rt0 FULL OUTER JOIN v0 ON NULL;
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON NULL WHERE (CASE (('-995470790') NOTNULL)  WHEN (+ (v0.c0)) THEN load_extension(rt0.c2) ELSE (- (rt0.c4)) END) UNION ALL SELECT * FROM rt0 FULL OUTER JOIN v0 ON NULL WHERE ((NOT (CASE (('-995470790') NOTNULL)  WHEN (+ (v0.c0)) THEN load_extension(rt0.c2) ELSE (- (rt0.c4)) END))) UNION ALL SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON NULL WHERE (((CASE (('-995470790') NOTNULL)  WHEN (+ (v0.c0)) THEN load_extension(rt0.c2) ELSE (- (rt0.c4)) END) ISNULL));
SELECT * FROM rt0 FULL OUTER JOIN v0 ON NULL;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((CAST(vt0.c2 AS TEXT)))=((CAST(vt0.c2 AS INTEGER))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((((CAST(vt0.c2 AS TEXT)))==((CAST(vt0.c2 AS INTEGER))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((CAST(vt0.c2 AS TEXT)))=((CAST(vt0.c2 AS INTEGER))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT rt0.c2, rt0.c4, rt0.c3, rt0.c0, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c4, rt0.c3, rt0.c0, rt0.c1, v0.c0;
SELECT rt0.c2, rt0.c4, rt0.c3, rt0.c0, rt0.c1, v0.c0 FROM v0, rt0 WHERE (0.3252499120275725) GROUP BY rt0.c2, rt0.c4, rt0.c3, rt0.c0, rt0.c1, v0.c0 UNION SELECT rt0.c2, rt0.c4, rt0.c3, rt0.c0, rt0.c1, v0.c0 FROM v0, rt0 WHERE ((NOT (0.3252499120275725))) GROUP BY rt0.c2, rt0.c4, rt0.c3, rt0.c0, rt0.c1, v0.c0 UNION SELECT ALL rt0.c2, rt0.c4, rt0.c3, rt0.c0, rt0.c1, v0.c0 FROM v0, rt0 WHERE (((0.3252499120275725) ISNULL)) GROUP BY rt0.c2, rt0.c4, rt0.c3, rt0.c0, rt0.c1, v0.c0;
SELECT rt0.c2, rt0.c4, rt0.c3, rt0.c0, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c4, rt0.c3, rt0.c0, rt0.c1, v0.c0;
SELECT ALL rt0.c3, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1;
SELECT rt0.c3, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1 HAVING ((((COUNT(rt0.c3))+(rt0.c2))) ISNULL) UNION ALL SELECT ALL rt0.c3, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1 HAVING (NOT (((((COUNT(rt0.c3))+(rt0.c2))) ISNULL))) UNION ALL SELECT rt0.c3, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1 HAVING ((((((COUNT(rt0.c3))+(rt0.c2))) ISNULL)) ISNULL);
SELECT ALL rt0.c3, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1;
SELECT rt0.c3, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1 HAVING ((((COUNT(rt0.c3))+(rt0.c2))) ISNULL) UNION ALL SELECT ALL rt0.c3, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1 HAVING (NOT (((((COUNT(rt0.c3))+(rt0.c2))) ISNULL))) UNION ALL SELECT rt0.c3, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1 HAVING ((((((COUNT(rt0.c3))+(rt0.c2))) ISNULL)) ISNULL);
SELECT ALL rt0.c3, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1;
SELECT ALL vt0.c2, vt0.c1, vt0.lid, vt0.c0 FROM vt0;
SELECT ALL vt0.c2, vt0.c1, vt0.lid, vt0.c0 FROM vt0 WHERE ((((((((('-1605411005')OR(CAST(vt0.c1 AS TEXT))))AND(((vt0.lid) IS TRUE))))AND(x'')))AND((vt0.lid IN ())))) UNION ALL SELECT vt0.c2, vt0.c1, vt0.lid, vt0.c0 FROM vt0 WHERE ((NOT ((((((((('-1605411005')OR(CAST(vt0.c1 AS TEXT))))AND(((vt0.lid) IS TRUE))))AND(x'')))AND((vt0.lid IN ())))))) UNION ALL SELECT ALL vt0.c2, vt0.c1, vt0.lid, vt0.c0 FROM vt0 WHERE ((((((((((('-1605411005')OR(CAST(vt0.c1 AS TEXT))))AND(((vt0.lid) IS TRUE))))AND(x'')))AND((vt0.lid IN ())))) ISNULL));
SELECT ALL vt0.c2, vt0.c1, vt0.lid, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c2, vt0.c1, rt0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c4, vt0.c0 FROM rt0, vt0;
SELECT DISTINCT vt0.c2, vt0.c1, rt0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c4, vt0.c0 FROM rt0, vt0 WHERE (((json(vt0.c0)) BETWEEN ((rt0.c2 IN ())) AND ((vt0.c1 IN ())))) UNION SELECT DISTINCT vt0.c2, vt0.c1, rt0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c4, vt0.c0 FROM rt0, vt0 WHERE ((NOT (((json(vt0.c0)) BETWEEN ((rt0.c2 IN ())) AND ((vt0.c1 IN ())))))) UNION SELECT DISTINCT vt0.c2, vt0.c1, rt0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c4, vt0.c0 FROM rt0, vt0 WHERE (((((json(vt0.c0)) BETWEEN ((rt0.c2 IN ())) AND ((vt0.c1 IN ())))) ISNULL));
SELECT DISTINCT vt0.c2, vt0.c1, rt0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c4, vt0.c0 FROM rt0, vt0;
SELECT rt0.c2, rt0.c3, rt0.c1, rt0.c4, rt0.c0, vt0.lid, vt0.c1, vt0.c0, vt0.c2 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c4, rt0.c0, vt0.lid, vt0.c1, vt0.c0, vt0.c2;
SELECT rt0.c2, rt0.c3, rt0.c1, rt0.c4, rt0.c0, vt0.lid, vt0.c1, vt0.c0, vt0.c2 FROM rt0, vt0 WHERE (CAST((vt0.lid IN ()) AS TEXT)) GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c4, rt0.c0, vt0.lid, vt0.c1, vt0.c0, vt0.c2 UNION SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c4, rt0.c0, vt0.lid, vt0.c1, vt0.c0, vt0.c2 FROM rt0, vt0 WHERE ((NOT (CAST((vt0.lid IN ()) AS TEXT)))) GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c4, rt0.c0, vt0.lid, vt0.c1, vt0.c0, vt0.c2 UNION SELECT rt0.c2, rt0.c3, rt0.c1, rt0.c4, rt0.c0, vt0.lid, vt0.c1, vt0.c0, vt0.c2 FROM rt0, vt0 WHERE (((CAST((vt0.lid IN ()) AS TEXT)) ISNULL)) GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c4, rt0.c0, vt0.lid, vt0.c1, vt0.c0, vt0.c2;
SELECT rt0.c2, rt0.c3, rt0.c1, rt0.c4, rt0.c0, vt0.lid, vt0.c1, vt0.c0, vt0.c2 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c4, rt0.c0, vt0.lid, vt0.c1, vt0.c0, vt0.c2;
SELECT rt0.c1, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c2;
SELECT ALL rt0.c1, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c2 HAVING ((COUNT(*))<=(AVG(TOTAL(rt0.c2)))) UNION ALL SELECT rt0.c1, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c2 HAVING (NOT (((COUNT(*))<=(AVG(TOTAL(rt0.c2)))))) UNION ALL SELECT rt0.c1, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c2 HAVING ((((COUNT(*))<=(AVG(TOTAL(rt0.c2))))) ISNULL);
SELECT ALL rt0.c3, vt0.lid, v0.c0, rt0.c2, vt0.c0 FROM v0, vt0, rt0;
SELECT rt0.c3, vt0.lid, v0.c0, rt0.c2, vt0.c0 FROM v0, vt0, rt0 WHERE (json_extract(((((((((0.30853723660621357)OR(0.8689394748277043)))AND(vt0.c0)))OR(v0.c0)))AND(v0.c0)), CASE rt0.c0  WHEN v0.c0 THEN rt0.c4 END)) UNION ALL SELECT ALL rt0.c3, vt0.lid, v0.c0, rt0.c2, vt0.c0 FROM v0, vt0, rt0 WHERE ((NOT (json_extract(((((((((0.30853723660621357)OR(0.8689394748277043)))AND(vt0.c0)))OR(v0.c0)))AND(v0.c0)), CASE rt0.c0  WHEN v0.c0 THEN rt0.c4 END)))) UNION ALL SELECT ALL rt0.c3, vt0.lid, v0.c0, rt0.c2, vt0.c0 FROM v0, vt0, rt0 WHERE (((json_extract(((((((((0.30853723660621357)OR(0.8689394748277043)))AND(vt0.c0)))OR(v0.c0)))AND(v0.c0)), CASE rt0.c0  WHEN v0.c0 THEN rt0.c4 END)) ISNULL));
SELECT ALL rt0.c3, vt0.lid, v0.c0, rt0.c2, vt0.c0 FROM v0, vt0, rt0;
SELECT DISTINCT rt0.c2, vt0.c0, rt0.c4, v0.c0, rt0.c0, vt0.lid, vt0.c1, rt0.c3, rt0.c1 FROM v0, rt0, vt0;
SELECT DISTINCT rt0.c2, vt0.c0, rt0.c4, v0.c0, rt0.c0, vt0.lid, vt0.c1, rt0.c3, rt0.c1 FROM v0 NOT INDEXED, rt0, vt0 WHERE (rt0.c2 COLLATE NOCASE) UNION SELECT DISTINCT rt0.c2, vt0.c0, rt0.c4, v0.c0, rt0.c0, vt0.lid, vt0.c1, rt0.c3, rt0.c1 FROM v0, rt0, vt0 WHERE ((NOT (rt0.c2 COLLATE NOCASE))) UNION SELECT DISTINCT rt0.c2, vt0.c0, rt0.c4, v0.c0, rt0.c0, vt0.lid, vt0.c1, rt0.c3, rt0.c1 FROM v0, rt0, vt0 WHERE (((rt0.c2 COLLATE NOCASE) ISNULL));
SELECT DISTINCT rt0.c2, vt0.c0, rt0.c4, v0.c0, rt0.c0, vt0.lid, vt0.c1, rt0.c3, rt0.c1 FROM v0, rt0, vt0;
SELECT rt0.c4, rt0.c3, rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c4, rt0.c3, rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((((((((rt0.c3)OR(rt0.c2)))AND(rt0.c4)))AND(rt0.c0)))AND(rt0.c0)))IS NOT(CASE '-978627388'  WHEN rt0.c4 THEN rt0.c3 END))) GROUP BY rt0.c4, rt0.c3, rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c4, rt0.c3, rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((((((((((rt0.c3)OR(rt0.c2)))AND(rt0.c4)))AND(rt0.c0)))AND(rt0.c0)))IS NOT(CASE '-978627388'  WHEN rt0.c4 THEN rt0.c3 END))))) GROUP BY rt0.c4, rt0.c3, rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c4, rt0.c3, rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((((((((((rt0.c3)OR(rt0.c2)))AND(rt0.c4)))AND(rt0.c0)))AND(rt0.c0)))IS NOT(CASE '-978627388'  WHEN rt0.c4 THEN rt0.c3 END))) ISNULL)) GROUP BY rt0.c4, rt0.c3, rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c4, rt0.c3, rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c0, rt0.c2, rt0.c1;
SELECT ALL vt0.c2 FROM vt0, v0 NATURAL JOIN rt0 GROUP BY vt0.c2;
SELECT vt0.c2 FROM vt0, v0 NATURAL JOIN rt0 GROUP BY vt0.c2 HAVING TOTAL(vt0.c1) COLLATE BINARY UNION ALL SELECT vt0.c2 FROM vt0, v0 NATURAL JOIN rt0 GROUP BY vt0.c2 HAVING (NOT (TOTAL(vt0.c1) COLLATE BINARY)) UNION ALL SELECT ALL vt0.c2 FROM vt0, v0 NATURAL JOIN rt0 GROUP BY vt0.c2 HAVING ((TOTAL(vt0.c1) COLLATE BINARY) ISNULL);
SELECT ALL vt0.c2 FROM vt0, v0 NATURAL JOIN rt0 GROUP BY vt0.c2;
SELECT vt0.c2 FROM vt0, v0 NATURAL JOIN rt0 GROUP BY vt0.c2 HAVING TOTAL(vt0.c1) COLLATE BINARY UNION ALL SELECT vt0.c2 FROM vt0, v0 NATURAL JOIN rt0 GROUP BY vt0.c2 HAVING (NOT (TOTAL(vt0.c1) COLLATE BINARY)) UNION ALL SELECT ALL vt0.c2 FROM vt0, v0 NATURAL JOIN rt0 GROUP BY vt0.c2 HAVING ((TOTAL(vt0.c1) COLLATE BINARY) ISNULL);
SELECT ALL vt0.c2 FROM vt0, v0 NATURAL JOIN rt0 GROUP BY vt0.c2;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE ((+ (CAST(vt0.c0 AS TEXT)))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((+ (CAST(vt0.c0 AS TEXT)))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((+ (CAST(vt0.c0 AS TEXT)))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CASE WHEN rt0.c0 THEN '-1545319155' END) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CASE WHEN rt0.c0 THEN '-1545319155' END))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CASE WHEN rt0.c0 THEN '-1545319155' END) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (NULLIF(((('204290067')) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (NULLIF(((('204290067')) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((NULLIF(((('204290067')) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING GROUP_CONCAT(CAST(v0.c0 AS TEXT)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (GROUP_CONCAT(CAST(v0.c0 AS TEXT)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((GROUP_CONCAT(CAST(v0.c0 AS TEXT))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING GROUP_CONCAT(CAST(v0.c0 AS TEXT)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (GROUP_CONCAT(CAST(v0.c0 AS TEXT)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((GROUP_CONCAT(CAST(v0.c0 AS TEXT))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT * FROM v0 NATURAL JOIN rt0;
SELECT * FROM v0 NATURAL JOIN rt0 WHERE ((((rt0.c2) BETWEEN (rt0.c4) AND (-1290679581)) IN ())) UNION ALL SELECT * FROM v0 NATURAL JOIN rt0 WHERE ((NOT ((((rt0.c2) BETWEEN (rt0.c4) AND (-1290679581)) IN ())))) UNION ALL SELECT * FROM v0 NATURAL JOIN rt0 WHERE ((((((rt0.c2) BETWEEN (rt0.c4) AND (-1290679581)) IN ())) ISNULL));
SELECT * FROM v0 NATURAL JOIN rt0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE ((- (TYPEOF(DISTINCT rt0.c2)))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT ((- (TYPEOF(DISTINCT rt0.c2)))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((((- (TYPEOF(DISTINCT rt0.c2)))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT ALL vt0.lid, vt0.c0, v0.c0, rt0.c2, rt0.c4, vt0.c2, rt0.c0, vt0.c1 FROM v0, rt0, vt0 GROUP BY vt0.lid, vt0.c0, v0.c0, rt0.c2, rt0.c4, vt0.c2, rt0.c0, vt0.c1;
SELECT ALL vt0.lid, vt0.c0, v0.c0, rt0.c2, rt0.c4, vt0.c2, rt0.c0, vt0.c1 FROM v0, rt0, vt0 WHERE (((((((((NULL)OR(((rt0.c3) BETWEEN (vt0.c1) AND (rt0.c3)))))AND(((rt0.c3)&(vt0.c0)))))AND(((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c2)))))OR((~ (rt0.c2))))) GROUP BY vt0.lid, vt0.c0, v0.c0, rt0.c2, rt0.c4, vt0.c2, rt0.c0, vt0.c1 UNION SELECT ALL vt0.lid, vt0.c0, v0.c0, rt0.c2, rt0.c4, vt0.c2, rt0.c0, vt0.c1 FROM v0, rt0, vt0 WHERE ((NOT (((((((((NULL)OR(((rt0.c3) BETWEEN (vt0.c1) AND (rt0.c3)))))AND(((rt0.c3)&(vt0.c0)))))AND(((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c2)))))OR((~ (rt0.c2))))))) GROUP BY vt0.lid, vt0.c0, v0.c0, rt0.c2, rt0.c4, vt0.c2, rt0.c0, vt0.c1 UNION SELECT vt0.lid, vt0.c0, v0.c0, rt0.c2, rt0.c4, vt0.c2, rt0.c0, vt0.c1 FROM v0, rt0, vt0 WHERE (((((((((((NULL)OR(((rt0.c3) BETWEEN (vt0.c1) AND (rt0.c3)))))AND(((rt0.c3)&(vt0.c0)))))AND(((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c2)))))OR((~ (rt0.c2))))) ISNULL)) GROUP BY vt0.lid, vt0.c0, v0.c0, rt0.c2, rt0.c4, vt0.c2, rt0.c0, vt0.c1;
SELECT ALL vt0.lid, vt0.c0, v0.c0, rt0.c2, rt0.c4, vt0.c2, rt0.c0, vt0.c1 FROM v0, rt0, vt0 GROUP BY vt0.lid, vt0.c0, v0.c0, rt0.c2, rt0.c4, vt0.c2, rt0.c0, vt0.c1;
SELECT ALL vt0.lid, vt0.c1 FROM vt0, rt0, v0 GROUP BY vt0.lid, vt0.c1;
SELECT ALL vt0.lid, vt0.c1 FROM vt0, rt0, v0 GROUP BY vt0.lid, vt0.c1 HAVING (((((((MIN(AVG(COUNT(*)))))<((vt0.c1))))AND(GROUP_CONCAT(v0.c0))))OR(((vt0.lid)||(GROUP_CONCAT(NULL))))) UNION ALL SELECT ALL vt0.lid, vt0.c1 FROM vt0, rt0, v0 GROUP BY vt0.lid, vt0.c1 HAVING (NOT ((((((((MIN(AVG(COUNT(*)))))<((vt0.c1))))AND(GROUP_CONCAT(v0.c0))))OR(((vt0.lid)||(GROUP_CONCAT(NULL))))))) UNION ALL SELECT vt0.lid, vt0.c1 FROM vt0, rt0, v0 GROUP BY vt0.lid, vt0.c1 HAVING (((((((((MIN(AVG(COUNT(*)))))<((vt0.c1))))AND(GROUP_CONCAT(v0.c0))))OR(((vt0.lid)||(GROUP_CONCAT(NULL)))))) ISNULL);
SELECT MIN(((HEX(vt0.lid)) NOT BETWEEN (0.0496754753434403) AND (((vt0.lid)IS(v0.c0))))) FROM vt0, v0;
SELECT ALL * FROM v0, rt0;
SELECT ALL * FROM v0, rt0 WHERE (((((((rt0.c1)-(rt0.c1)))OR(NULL)))OR(((NULL)>=(0x6f584fa2))))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((NOT (((((((rt0.c1)-(rt0.c1)))OR(NULL)))OR(((NULL)>=(0x6f584fa2))))))) UNION ALL SELECT * FROM v0, rt0 WHERE (((((((((rt0.c1)-(rt0.c1)))OR(NULL)))OR(((NULL)>=(0x6f584fa2))))) ISNULL));
SELECT ALL * FROM v0, rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM vt0, v0, rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM vt0, v0, rt0 WHERE (((SQLITE_VERSION()) BETWEEN (((((v0.c0)AND(rt0.c0)))OR(vt0.c1))) AND (((rt0.c4)|(vt0.c2))))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM vt0, v0, rt0 WHERE ((NOT (((SQLITE_VERSION()) BETWEEN (((((v0.c0)AND(rt0.c0)))OR(vt0.c1))) AND (((rt0.c4)|(vt0.c2))))))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM vt0, v0, rt0 WHERE (((((SQLITE_VERSION()) BETWEEN (((((v0.c0)AND(rt0.c0)))OR(vt0.c1))) AND (((rt0.c4)|(vt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2 FROM vt0, v0, rt0;
SELECT v0.c0, vt0.c2 FROM v0, vt0, rt0 NOT INDEXED GROUP BY v0.c0, vt0.c2;
SELECT v0.c0, vt0.c2 FROM v0, vt0, rt0 NOT INDEXED WHERE (((rt0.c0)||(CASE WHEN vt0.c2 THEN rt0.c2 WHEN rt0.c4 THEN vt0.lid WHEN rt0.c1 THEN vt0.c2 ELSE vt0.c1 END))) GROUP BY v0.c0, vt0.c2 UNION SELECT v0.c0, vt0.c2 FROM v0, vt0, rt0 WHERE ((NOT (((rt0.c0)||(CASE WHEN vt0.c2 THEN rt0.c2 WHEN rt0.c4 THEN vt0.lid WHEN rt0.c1 THEN vt0.c2 ELSE vt0.c1 END))))) GROUP BY v0.c0, vt0.c2 UNION SELECT v0.c0, vt0.c2 FROM v0, vt0, rt0 WHERE (((((rt0.c0)||(CASE WHEN vt0.c2 THEN rt0.c2 WHEN rt0.c4 THEN vt0.lid WHEN rt0.c1 THEN vt0.c2 ELSE vt0.c1 END))) ISNULL)) GROUP BY v0.c0, vt0.c2;
SELECT v0.c0, vt0.c2 FROM v0, vt0, rt0 NOT INDEXED GROUP BY v0.c0, vt0.c2;
SELECT ALL v0.c0, rt0.c4 FROM v0, rt0 NOT INDEXED GROUP BY v0.c0, rt0.c4;
SELECT v0.c0, rt0.c4 FROM v0, rt0 GROUP BY v0.c0, rt0.c4 HAVING COUNT(CASE MAX(MAX(rt0.c0))  WHEN AVG(MIN(COUNT(rt0.c0))) THEN rt0.c1 END) UNION ALL SELECT ALL v0.c0, rt0.c4 FROM v0, rt0 GROUP BY v0.c0, rt0.c4 HAVING (NOT (COUNT(CASE MAX(MAX(rt0.c0))  WHEN AVG(MIN(COUNT(rt0.c0))) THEN rt0.c1 END))) UNION ALL SELECT v0.c0, rt0.c4 FROM v0, rt0 GROUP BY v0.c0, rt0.c4 HAVING ((COUNT(CASE MAX(MAX(rt0.c0))  WHEN AVG(MIN(COUNT(rt0.c0))) THEN rt0.c1 END)) ISNULL);
SELECT vt0.c2, vt0.lid, vt0.c1 FROM v0, vt0;
SELECT ALL vt0.c2, vt0.lid, vt0.c1 FROM v0, vt0 WHERE ((vt0.lid IN ())) UNION ALL SELECT vt0.c2, vt0.lid, vt0.c1 FROM v0, vt0 WHERE ((NOT ((vt0.lid IN ())))) UNION ALL SELECT vt0.c2, vt0.lid, vt0.c1 FROM v0, vt0 WHERE ((((vt0.lid IN ())) ISNULL));
SELECT vt0.c2, vt0.lid, vt0.c1 FROM v0, vt0;
SELECT DISTINCT * FROM vt0, rt0, v0;
SELECT DISTINCT * FROM vt0, rt0, v0 WHERE (((rt0.c4)!=(vt0.c2)) COLLATE BINARY) UNION SELECT DISTINCT * FROM vt0, rt0, v0 WHERE ((NOT (((rt0.c4)!=(vt0.c2)) COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt0, rt0, v0 WHERE (((((rt0.c4)<>(vt0.c2)) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM vt0, rt0, v0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.lid)) NOT BETWEEN ((x'f89c')) AND ((vt0.c1)))) NOT BETWEEN (1792551697) AND (CAST(vt0.c0 AS TEXT)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((((vt0.lid)) NOT BETWEEN ((x'f89c')) AND ((vt0.c1)))) NOT BETWEEN (1792551697) AND (CAST(vt0.c0 AS TEXT)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((((vt0.lid)) NOT BETWEEN ((x'f89c')) AND ((vt0.c1)))) NOT BETWEEN (1792551697) AND (CAST(vt0.c0 AS TEXT)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((v0.c0) BETWEEN (v0.c0) AND (COUNT(v0.c0))) COLLATE RTRIM UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((v0.c0) BETWEEN (v0.c0) AND (COUNT(v0.c0))) COLLATE RTRIM)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((v0.c0) BETWEEN (v0.c0) AND (COUNT(v0.c0))) COLLATE RTRIM) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((v0.c0) BETWEEN (v0.c0) AND (COUNT(v0.c0))) COLLATE RTRIM UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((v0.c0) BETWEEN (v0.c0) AND (COUNT(v0.c0))) COLLATE RTRIM)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((v0.c0) BETWEEN (v0.c0) AND (COUNT(v0.c0))) COLLATE RTRIM) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (LIKELY(DISTINCT ((vt0.c1)|(vt0.lid)))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (LIKELY(DISTINCT ((vt0.c1)|(vt0.lid)))))) UNION ALL SELECT * FROM vt0 WHERE (((LIKELY(DISTINCT ((vt0.c1)|(vt0.lid)))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT rt0.c0, rt0.c3, vt0.c1 FROM vt0, rt0, v0;
SELECT DISTINCT rt0.c0, rt0.c3, vt0.c1 FROM vt0, rt0, v0 WHERE (((((((((CAST(v0.c0 AS REAL))OR((((vt0.lid))=((vt0.lid))))))OR(rt0.c1)))OR(vt0.lid)))OR((rt0.c2 IN ())))) UNION SELECT DISTINCT rt0.c0, rt0.c3, vt0.c1 FROM vt0, rt0, v0 WHERE ((NOT (((((((((CAST(v0.c0 AS REAL))OR((((vt0.lid))==((vt0.lid))))))OR(rt0.c1)))OR(vt0.lid)))OR((rt0.c2 IN ())))))) UNION SELECT DISTINCT rt0.c0, rt0.c3, vt0.c1 FROM vt0, rt0, v0 WHERE (((((((((((CAST(v0.c0 AS REAL))OR((((vt0.lid))=((vt0.lid))))))OR(rt0.c1)))OR(vt0.lid)))OR((rt0.c2 IN ())))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c3, vt0.c1 FROM vt0, rt0, v0;
SELECT ALL v0.c0, rt0.c0, rt0.c4, rt0.c2 FROM v0, rt0 GROUP BY v0.c0, rt0.c0, rt0.c4, rt0.c2;
SELECT ALL v0.c0, rt0.c0, rt0.c4, rt0.c2 FROM v0, rt0 WHERE ((~ (((((((((v0.c0)OR(rt0.c2)))OR(rt0.c4)))OR(rt0.c0)))AND(rt0.c1))))) GROUP BY v0.c0, rt0.c0, rt0.c4, rt0.c2 UNION SELECT v0.c0, rt0.c0, rt0.c4, rt0.c2 FROM v0, rt0 WHERE ((NOT ((~ (((((((((v0.c0)OR(rt0.c2)))OR(rt0.c4)))OR(rt0.c0)))AND(rt0.c1))))))) GROUP BY v0.c0, rt0.c0, rt0.c4, rt0.c2 UNION SELECT v0.c0, rt0.c0, rt0.c4, rt0.c2 FROM v0 NOT INDEXED, rt0 WHERE ((((~ (((((((((v0.c0)OR(rt0.c2)))OR(rt0.c4)))OR(rt0.c0)))AND(rt0.c1))))) ISNULL)) GROUP BY v0.c0, rt0.c0, rt0.c4, rt0.c2;
SELECT ALL v0.c0, rt0.c0, rt0.c4, rt0.c2 FROM v0, rt0 GROUP BY v0.c0, rt0.c0, rt0.c4, rt0.c2;
SELECT ALL rt0.c0, vt0.c0, rt0.c2, vt0.lid, vt0.c2, rt0.c3, rt0.c1, vt0.c1, v0.c0 FROM rt0, v0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c2, vt0.lid, vt0.c2, rt0.c3, rt0.c1, vt0.c1, v0.c0;
SELECT rt0.c0, vt0.c0, rt0.c2, vt0.lid, vt0.c2, rt0.c3, rt0.c1, vt0.c1, v0.c0 FROM rt0, v0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c2, vt0.lid, vt0.c2, rt0.c3, rt0.c1, vt0.c1, v0.c0 HAVING TOTAL((MIN(rt0.c2) IN (vt0.lid))) UNION ALL SELECT rt0.c0, vt0.c0, rt0.c2, vt0.lid, vt0.c2, rt0.c3, rt0.c1, vt0.c1, v0.c0 FROM rt0, v0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c2, vt0.lid, vt0.c2, rt0.c3, rt0.c1, vt0.c1, v0.c0 HAVING (NOT (TOTAL((MIN(rt0.c2) IN (vt0.lid))))) UNION ALL SELECT rt0.c0, vt0.c0, rt0.c2, vt0.lid, vt0.c2, rt0.c3, rt0.c1, vt0.c1, v0.c0 FROM rt0, v0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c2, vt0.lid, vt0.c2, rt0.c3, rt0.c1, vt0.c1, v0.c0 HAVING ((TOTAL((MIN(rt0.c2) IN (vt0.lid)))) ISNULL);
SELECT ALL * FROM v0, rt0, vt0;
SELECT ALL * FROM v0, rt0, vt0 WHERE (((((rt0.c2) NOT NULL)) NOT BETWEEN (CAST(rt0.c3 AS BLOB)) AND (GLOB(rt0.c3, vt0.c0)))) UNION ALL SELECT ALL * FROM v0, rt0, vt0 WHERE ((NOT (((((rt0.c2) NOT NULL)) NOT BETWEEN (CAST(rt0.c3 AS BLOB)) AND (GLOB(rt0.c3, vt0.c0)))))) UNION ALL SELECT ALL * FROM v0, rt0, vt0 WHERE (((((((rt0.c2) NOT NULL)) NOT BETWEEN (CAST(rt0.c3 AS BLOB)) AND (GLOB(rt0.c3, vt0.c0)))) ISNULL));
SELECT ALL * FROM v0, rt0, vt0;
SELECT DISTINCT vt0.lid FROM vt0;
SELECT DISTINCT vt0.lid FROM vt0 WHERE (CAST(((vt0.c0)GLOB(vt0.c2)) AS TEXT)) UNION SELECT DISTINCT vt0.lid FROM vt0 WHERE ((NOT (CAST(((vt0.c0)GLOB(vt0.c2)) AS TEXT)))) UNION SELECT DISTINCT vt0.lid FROM vt0 WHERE (((CAST(((vt0.c0)GLOB(vt0.c2)) AS TEXT)) ISNULL));
SELECT DISTINCT vt0.lid FROM vt0;
SELECT ALL vt0.c1, vt0.lid, vt0.c0 FROM v0, vt0 GROUP BY vt0.c1, vt0.lid, vt0.c0;
SELECT ALL vt0.c1, vt0.lid, vt0.c0 FROM v0, vt0 WHERE (((((vt0.c1)&(vt0.c1)))<(((((v0.c0)OR(vt0.c2)))AND(vt0.c1))))) GROUP BY vt0.c1, vt0.lid, vt0.c0 UNION SELECT vt0.c1, vt0.lid, vt0.c0 FROM v0, vt0 WHERE ((NOT (((((vt0.c1)&(vt0.c1)))<(((((v0.c0)OR(vt0.c2)))AND(vt0.c1))))))) GROUP BY vt0.c1, vt0.lid, vt0.c0 UNION SELECT ALL vt0.c1, vt0.lid, vt0.c0 FROM v0, vt0 WHERE (((((((vt0.c1)&(vt0.c1)))<(((((v0.c0)OR(vt0.c2)))AND(vt0.c1))))) ISNULL)) GROUP BY vt0.c1, vt0.lid, vt0.c0;
SELECT ALL vt0.c1, vt0.lid, vt0.c0 FROM v0, vt0 GROUP BY vt0.c1, vt0.lid, vt0.c0;
SELECT ALL v0.c0, rt0.c0 FROM rt0, v0 GROUP BY v0.c0, rt0.c0;
SELECT ALL v0.c0, rt0.c0 FROM rt0, v0 GROUP BY v0.c0, rt0.c0 HAVING CAST(TOTAL(AVG(COUNT(COUNT(MIN(rt0.c4))))) AS REAL) UNION ALL SELECT v0.c0, rt0.c0 FROM rt0, v0 GROUP BY v0.c0, rt0.c0 HAVING (NOT (CAST(TOTAL(AVG(COUNT(COUNT(MIN(rt0.c4))))) AS REAL))) UNION ALL SELECT v0.c0, rt0.c0 FROM rt0, v0 GROUP BY v0.c0, rt0.c0 HAVING ((CAST(TOTAL(AVG(COUNT(COUNT(MIN(rt0.c4))))) AS REAL)) ISNULL);
SELECT * FROM rt0, v0, vt0;
SELECT ALL * FROM rt0, v0, vt0 WHERE ((((vt0.c1, rt0.c3, vt0.c1)) NOT BETWEEN (((('') ISNULL), ((vt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c4)), ((vt0.c0)!=(vt0.c0)))) AND ((CASE WHEN vt0.c2 THEN vt0.c0 WHEN rt0.c3 THEN vt0.c1 WHEN rt0.c1 THEN rt0.c3 END, vt0.c2, x'')))) UNION ALL SELECT ALL * FROM rt0, v0, vt0 WHERE ((NOT ((((vt0.c1, rt0.c3, vt0.c1)) NOT BETWEEN (((('') ISNULL), ((vt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c4)), ((vt0.c0)!=(vt0.c0)))) AND ((CASE WHEN vt0.c2 THEN vt0.c0 WHEN rt0.c3 THEN vt0.c1 WHEN rt0.c1 THEN rt0.c3 END, vt0.c2, x'')))))) UNION ALL SELECT ALL * FROM rt0, v0, vt0 WHERE ((((((vt0.c1, rt0.c3, vt0.c1)) NOT BETWEEN (((('') ISNULL), ((vt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c4)), ((vt0.c0)<>(vt0.c0)))) AND ((CASE WHEN vt0.c2 THEN vt0.c0 WHEN rt0.c3 THEN vt0.c1 WHEN rt0.c1 THEN rt0.c3 END, vt0.c2, x'')))) ISNULL));
SELECT * FROM rt0, v0, vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((INSTR(rt0.c4, rt0.c1)) NOT BETWEEN ((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))) AND (((rt0.c0) IS FALSE)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((INSTR(rt0.c4, rt0.c1)) NOT BETWEEN ((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))) AND (((rt0.c0) IS FALSE)))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((INSTR(rt0.c4, rt0.c1)) NOT BETWEEN ((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))) AND (((rt0.c0) IS FALSE)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0 FROM v0, rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM v0, rt0 WHERE ((((0.013061229726757828)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) COLLATE BINARY) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM v0, rt0 WHERE ((NOT ((((0.013061229726757828)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) COLLATE BINARY))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM v0, rt0 WHERE ((((((0.013061229726757828)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) COLLATE BINARY) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM v0, rt0 GROUP BY rt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL SUM(((CASE vt0.lid  WHEN vt0.lid THEN rt0.c1 END)>>(CASE vt0.c1  WHEN vt0.c1 THEN rt0.c0 WHEN 204290067 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE vt0.lid END))) FROM vt0, rt0 ORDER BY vt0.c2 ASC;
SELECT * FROM v0, vt0;
SELECT * FROM v0, vt0 WHERE ((((vt0.c0 IN ())) NOT NULL)) UNION ALL SELECT * FROM v0, vt0 WHERE ((NOT ((((vt0.c0 IN ())) NOT NULL)))) UNION ALL SELECT * FROM v0, vt0 WHERE ((((((vt0.c0 IN ())) NOT NULL)) ISNULL));
SELECT * FROM v0, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((TYPEOF(vt0.lid), ((vt0.c2) ISNULL), (vt0.lid IN ()))) AND ((((vt0.c1)>(vt0.c2)), (vt0.c0 IN ()), ((vt0.lid) NOT NULL))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((TYPEOF(vt0.lid), ((vt0.c2) ISNULL), (vt0.lid IN ()))) AND ((((vt0.c1)>(vt0.c2)), (vt0.c0 IN ()), ((vt0.lid) NOT NULL))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((TYPEOF(vt0.lid), ((vt0.c2) ISNULL), (vt0.lid IN ()))) AND ((((vt0.c1)>(vt0.c2)), (vt0.c0 IN ()), ((vt0.lid) NOT NULL))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL v0.c0, rt0.c4, rt0.c3 FROM rt0, v0, vt0 GROUP BY v0.c0, rt0.c4, rt0.c3;
SELECT v0.c0, rt0.c4, rt0.c3 FROM rt0, v0, vt0 WHERE (((((((rt0.c2)AND(vt0.c0)))AND(rt0.c2)))*(((rt0.c2) ISNULL)))) GROUP BY v0.c0, rt0.c4, rt0.c3 UNION SELECT ALL v0.c0, rt0.c4, rt0.c3 FROM rt0, v0, vt0 WHERE ((NOT (((((((rt0.c2)AND(vt0.c0)))AND(rt0.c2)))*(((rt0.c2) ISNULL)))))) GROUP BY v0.c0, rt0.c4, rt0.c3 UNION SELECT v0.c0, rt0.c4, rt0.c3 FROM rt0, v0, vt0 WHERE (((((((((rt0.c2)AND(vt0.c0)))AND(rt0.c2)))*(((rt0.c2) ISNULL)))) ISNULL)) GROUP BY v0.c0, rt0.c4, rt0.c3;
SELECT ALL v0.c0, rt0.c4, rt0.c3 FROM rt0, v0, vt0 GROUP BY v0.c0, rt0.c4, rt0.c3;
SELECT ALL vt0.c2, vt0.lid, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.lid, vt0.c0, vt0.c1;
SELECT vt0.c2, vt0.lid, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.lid, vt0.c0, vt0.c1 HAVING (((vt0.c0, vt0.c2, COUNT(AVG(COUNT(TOTAL(COUNT(*))))))) BETWEEN ((((SUM(vt0.c1))+(vt0.c1)), (('186684702')IS NOT(AVG(TOTAL(GROUP_CONCAT(vt0.c2))))), AVG(COUNT(*)))) AND ((COUNT(AVG(vt0.c0)), TOTAL(COUNT(*)), TOTAL(vt0.c2)))) UNION ALL SELECT ALL vt0.c2, vt0.lid, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.lid, vt0.c0, vt0.c1 HAVING (NOT ((((vt0.c0, vt0.c2, COUNT(AVG(COUNT(TOTAL(COUNT(*))))))) BETWEEN ((((SUM(vt0.c1))+(vt0.c1)), (('186684702')IS NOT(AVG(TOTAL(GROUP_CONCAT(vt0.c2))))), AVG(COUNT(*)))) AND ((COUNT(AVG(vt0.c0)), TOTAL(COUNT(*)), TOTAL(vt0.c2)))))) UNION ALL SELECT ALL vt0.c2, vt0.lid, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.lid, vt0.c0, vt0.c1 HAVING (((((vt0.c0, vt0.c2, COUNT(AVG(COUNT(TOTAL(COUNT(*))))))) BETWEEN ((((SUM(vt0.c1))+(vt0.c1)), (('186684702')IS NOT(AVG(TOTAL(GROUP_CONCAT(vt0.c2))))), AVG(COUNT(*)))) AND ((COUNT(AVG(vt0.c0)), TOTAL(COUNT(*)), TOTAL(vt0.c2))))) ISNULL);
SELECT * FROM vt0, v0 LEFT OUTER JOIN rt0 ON (0.7922702499550772 IN ());
SELECT ALL * FROM vt0, v0 LEFT OUTER JOIN rt0 ON (0.7922702499550772 IN ()) WHERE (((NULL) ISNULL)) UNION ALL SELECT ALL * FROM vt0, v0 LEFT OUTER JOIN rt0 ON (0.7922702499550772 IN ()) WHERE ((NOT (((NULL) ISNULL)))) UNION ALL SELECT ALL * FROM vt0, v0 LEFT OUTER JOIN rt0 ON (0.7922702499550772 IN ()) WHERE (((((NULL) ISNULL)) ISNULL));
SELECT * FROM vt0, v0 LEFT OUTER JOIN rt0 ON (0.7922702499550772 IN ());
SELECT DISTINCT vt0.c1, rt0.c3, vt0.c2, rt0.c4, rt0.c1, rt0.c2 FROM vt0, rt0;
SELECT DISTINCT vt0.c1, rt0.c3, vt0.c2, rt0.c4, rt0.c1, rt0.c2 FROM vt0, rt0 WHERE ((((((vt0.c0, 0.1971060596313935, vt0.c2))<=((rt0.c0, 'n', vt0.c1))))AND(NULLIF(rt0.c1, rt0.c3)))) UNION SELECT DISTINCT vt0.c1, rt0.c3, vt0.c2, rt0.c4, rt0.c1, rt0.c2 FROM vt0, rt0 WHERE ((NOT ((((((vt0.c0, 0.1971060596313935, vt0.c2))<=((rt0.c0, 'n', vt0.c1))))AND(NULLIF(rt0.c1, rt0.c3)))))) UNION SELECT DISTINCT vt0.c1, rt0.c3, vt0.c2, rt0.c4, rt0.c1, rt0.c2 FROM vt0, rt0 WHERE ((((((((vt0.c0, 0.1971060596313935, vt0.c2))<=((rt0.c0, 'n', vt0.c1))))AND(NULLIF(rt0.c1, rt0.c3)))) ISNULL));
SELECT DISTINCT vt0.c1, rt0.c3, vt0.c2, rt0.c4, rt0.c1, rt0.c2 FROM vt0, rt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((~ (CASE WHEN vt0.c2 THEN vt0.c0 WHEN vt0.lid THEN vt0.c1 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN '-309362547' END))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((~ (CASE WHEN vt0.c2 THEN vt0.c0 WHEN vt0.lid THEN vt0.c1 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN '-309362547' END))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((~ (CASE WHEN vt0.c2 THEN vt0.c0 WHEN vt0.lid THEN vt0.c1 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN '-309362547' END))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c1, rt0.c3, vt0.lid, rt0.c0, vt0.c0, rt0.c4, rt0.c2, rt0.c1, vt0.c2 FROM v0, vt0, rt0 GROUP BY vt0.c1, rt0.c3, vt0.lid, rt0.c0, vt0.c0, rt0.c4, rt0.c2, rt0.c1, vt0.c2;
SELECT vt0.c1, rt0.c3, vt0.lid, rt0.c0, vt0.c0, rt0.c4, rt0.c2, rt0.c1, vt0.c2 FROM v0, vt0, rt0 GROUP BY vt0.c1, rt0.c3, vt0.lid, rt0.c0, vt0.c0, rt0.c4, rt0.c2, rt0.c1, vt0.c2 HAVING ((((rt0.c3) IS TRUE)) ISNULL) UNION ALL SELECT ALL vt0.c1, rt0.c3, vt0.lid, rt0.c0, vt0.c0, rt0.c4, rt0.c2, rt0.c1, vt0.c2 FROM v0 NOT INDEXED, vt0, rt0 GROUP BY vt0.c1, rt0.c3, vt0.lid, rt0.c0, vt0.c0, rt0.c4, rt0.c2, rt0.c1, vt0.c2 HAVING (NOT (((((rt0.c3) IS TRUE)) ISNULL))) UNION ALL SELECT vt0.c1, rt0.c3, vt0.lid, rt0.c0, vt0.c0, rt0.c4, rt0.c2, rt0.c1, vt0.c2 FROM v0, vt0, rt0 GROUP BY vt0.c1, rt0.c3, vt0.lid, rt0.c0, vt0.c0, rt0.c4, rt0.c2, rt0.c1, vt0.c2 HAVING ((((((rt0.c3) IS TRUE)) ISNULL)) ISNULL);
SELECT vt0.c1, rt0.c3, vt0.lid, rt0.c0, vt0.c0, rt0.c4, rt0.c2, rt0.c1, vt0.c2 FROM v0, vt0, rt0 GROUP BY vt0.c1, rt0.c3, vt0.lid, rt0.c0, vt0.c0, rt0.c4, rt0.c2, rt0.c1, vt0.c2;
SELECT vt0.c1, rt0.c3, vt0.lid, rt0.c0, vt0.c0, rt0.c4, rt0.c2, rt0.c1, vt0.c2 FROM v0, vt0, rt0 GROUP BY vt0.c1, rt0.c3, vt0.lid, rt0.c0, vt0.c0, rt0.c4, rt0.c2, rt0.c1, vt0.c2 HAVING ((((rt0.c3) IS TRUE)) ISNULL) UNION ALL SELECT ALL vt0.c1, rt0.c3, vt0.lid, rt0.c0, vt0.c0, rt0.c4, rt0.c2, rt0.c1, vt0.c2 FROM v0 NOT INDEXED, vt0, rt0 GROUP BY vt0.c1, rt0.c3, vt0.lid, rt0.c0, vt0.c0, rt0.c4, rt0.c2, rt0.c1, vt0.c2 HAVING (NOT (((((rt0.c3) IS TRUE)) ISNULL))) UNION ALL SELECT vt0.c1, rt0.c3, vt0.lid, rt0.c0, vt0.c0, rt0.c4, rt0.c2, rt0.c1, vt0.c2 FROM v0, vt0, rt0 GROUP BY vt0.c1, rt0.c3, vt0.lid, rt0.c0, vt0.c0, rt0.c4, rt0.c2, rt0.c1, vt0.c2 HAVING ((((((rt0.c3) IS TRUE)) ISNULL)) ISNULL);
SELECT vt0.c1, rt0.c3, vt0.lid, rt0.c0, vt0.c0, rt0.c4, rt0.c2, rt0.c1, vt0.c2 FROM v0, vt0, rt0 GROUP BY vt0.c1, rt0.c3, vt0.lid, rt0.c0, vt0.c0, rt0.c4, rt0.c2, rt0.c1, vt0.c2;
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (v0.c0) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((v0.c0) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT * FROM vt0, rt0, v0;
SELECT DISTINCT * FROM vt0, rt0, v0 WHERE ((((((vt0.lid, vt0.c1, vt0.c2)) BETWEEN ((rt0.c2, NULL, rt0.c0)) AND ((vt0.c1, rt0.c2, vt0.c1)))) IS FALSE)) UNION SELECT DISTINCT * FROM vt0, rt0, v0 WHERE ((NOT ((((((vt0.lid, vt0.c1, vt0.c2)) BETWEEN ((rt0.c2, NULL, rt0.c0)) AND ((vt0.c1, rt0.c2, vt0.c1)))) IS FALSE)))) UNION SELECT DISTINCT * FROM vt0, rt0, v0 WHERE ((((((((vt0.lid, vt0.c1, vt0.c2)) BETWEEN ((rt0.c2, NULL, rt0.c0)) AND ((vt0.c1, rt0.c2, vt0.c1)))) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM vt0, rt0, v0;
SELECT ALL rt0.c1, vt0.lid, vt0.c0, v0.c0, vt0.c2, rt0.c4, vt0.c1 FROM v0, rt0, vt0 GROUP BY rt0.c1, vt0.lid, vt0.c0, v0.c0, vt0.c2, rt0.c4, vt0.c1;
SELECT rt0.c1, vt0.lid, vt0.c0, v0.c0, vt0.c2, rt0.c4, vt0.c1 FROM v0, rt0, vt0 WHERE ((NOT (((rt0.c4) BETWEEN (vt0.c0) AND (vt0.c1))))) GROUP BY rt0.c1, vt0.lid, vt0.c0, v0.c0, vt0.c2, rt0.c4, vt0.c1 UNION SELECT rt0.c1, vt0.lid, vt0.c0, v0.c0, vt0.c2, rt0.c4, vt0.c1 FROM v0, rt0, vt0 WHERE ((NOT ((NOT (((rt0.c4) BETWEEN (vt0.c0) AND (vt0.c1))))))) GROUP BY rt0.c1, vt0.lid, vt0.c0, v0.c0, vt0.c2, rt0.c4, vt0.c1 UNION SELECT ALL rt0.c1, vt0.lid, vt0.c0, v0.c0, vt0.c2, rt0.c4, vt0.c1 FROM v0, rt0, vt0 WHERE ((((NOT (((rt0.c4) BETWEEN (vt0.c0) AND (vt0.c1))))) ISNULL)) GROUP BY rt0.c1, vt0.lid, vt0.c0, v0.c0, vt0.c2, rt0.c4, vt0.c1;
SELECT ALL rt0.c1, vt0.lid, vt0.c0, v0.c0, vt0.c2, rt0.c4, vt0.c1 FROM v0, rt0, vt0 GROUP BY rt0.c1, vt0.lid, vt0.c0, v0.c0, vt0.c2, rt0.c4, vt0.c1;
SELECT rt0.c4, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c0;
SELECT rt0.c4, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c4, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c4, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c4, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c0;
SELECT rt0.c4, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c4, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c4, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c4, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c0;
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE ((CASE WHEN v0.c0 THEN v0.c0 WHEN 'FALSE' THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END IN ())) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((CASE WHEN v0.c0 THEN v0.c0 WHEN 'FALSE' THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END IN ())))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((((CASE WHEN v0.c0 THEN v0.c0 WHEN 'FALSE' THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END IN ())) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (v0.c0) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT * FROM v0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (CASE WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN ((((v0.c0)AND(v0.c0)))OR(v0.c0)) END) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (CASE WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN ((((v0.c0)AND(v0.c0)))OR(v0.c0)) END))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((CASE WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN ((((v0.c0)AND(v0.c0)))OR(v0.c0)) END) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c1, vt0.c2, vt0.lid, v0.c0, vt0.c0 FROM v0, vt0 GROUP BY vt0.c1, vt0.c2, vt0.lid, v0.c0, vt0.c0;
SELECT vt0.c1, vt0.c2, vt0.lid, v0.c0, vt0.c0 FROM v0, vt0 GROUP BY vt0.c1, vt0.c2, vt0.lid, v0.c0, vt0.c0 HAVING MIN(MIN(COUNT(*))) UNION ALL SELECT vt0.c1, vt0.c2, vt0.lid, v0.c0, vt0.c0 FROM v0, vt0 GROUP BY vt0.c1, vt0.c2, vt0.lid, v0.c0, vt0.c0 HAVING (NOT (MIN(MIN(COUNT(*))))) UNION ALL SELECT vt0.c1, vt0.c2, vt0.lid, v0.c0, vt0.c0 FROM v0, vt0 GROUP BY vt0.c1, vt0.c2, vt0.lid, v0.c0, vt0.c0 HAVING ((MIN(MIN(COUNT(*)))) ISNULL);
SELECT v0.c0 FROM v0, rt0;
SELECT ALL v0.c0 FROM v0, rt0 WHERE (((rt0.c4) NOTNULL)) UNION ALL SELECT ALL v0.c0 FROM v0, rt0 WHERE ((NOT (((rt0.c4) NOTNULL)))) UNION ALL SELECT v0.c0 FROM v0, rt0 WHERE (((((rt0.c4) NOTNULL)) ISNULL));
SELECT v0.c0 FROM v0, rt0;
SELECT DISTINCT * FROM v0, vt0, rt0;
SELECT DISTINCT * FROM v0, vt0, rt0 WHERE (json_array_length(CAST(rt0.c1 AS BLOB), ((rt0.c2)/(vt0.c1)))) UNION SELECT DISTINCT * FROM v0, vt0, rt0 WHERE ((NOT (json_array_length(CAST(rt0.c1 AS BLOB), ((rt0.c2)/(vt0.c1)))))) UNION SELECT DISTINCT * FROM v0, vt0, rt0 WHERE (((json_array_length(CAST(rt0.c1 AS BLOB), ((rt0.c2)/(vt0.c1)))) ISNULL));
SELECT DISTINCT * FROM v0, vt0, rt0;
SELECT rt0.c3, vt0.c0, vt0.lid FROM v0, vt0, rt0 GROUP BY rt0.c3, vt0.c0, vt0.lid;
SELECT rt0.c3, vt0.c0, vt0.lid FROM v0, vt0, rt0 WHERE ((((((rt0.c0))<((vt0.lid)))) NOT NULL)) GROUP BY rt0.c3, vt0.c0, vt0.lid UNION SELECT rt0.c3, vt0.c0, vt0.lid FROM v0, vt0, rt0 WHERE ((NOT ((((((rt0.c0))<((vt0.lid)))) NOT NULL)))) GROUP BY rt0.c3, vt0.c0, vt0.lid UNION SELECT rt0.c3, vt0.c0, vt0.lid FROM v0, vt0, rt0 WHERE ((((((((rt0.c0))<((vt0.lid)))) NOT NULL)) ISNULL)) GROUP BY rt0.c3, vt0.c0, vt0.lid;
SELECT rt0.c3, vt0.c0, vt0.lid FROM v0, vt0, rt0 GROUP BY rt0.c3, vt0.c0, vt0.lid;
SELECT ALL rt0.c3, rt0.c0, v0.c0 FROM rt0, v0 GROUP BY rt0.c3, rt0.c0, v0.c0;
SELECT rt0.c3, rt0.c0, v0.c0 FROM rt0, v0 GROUP BY rt0.c3, rt0.c0, v0.c0 HAVING SUM(((rt0.c4) IS TRUE)) UNION ALL SELECT rt0.c3, rt0.c0, v0.c0 FROM rt0, v0 GROUP BY rt0.c3, rt0.c0, v0.c0 HAVING (NOT (SUM(((rt0.c4) IS TRUE)))) UNION ALL SELECT rt0.c3, rt0.c0, v0.c0 FROM rt0, v0 GROUP BY rt0.c3, rt0.c0, v0.c0 HAVING ((SUM(((rt0.c4) IS TRUE))) ISNULL);
SELECT ALL rt0.c3, rt0.c0, v0.c0 FROM rt0, v0 GROUP BY rt0.c3, rt0.c0, v0.c0;
SELECT rt0.c3, rt0.c0, v0.c0 FROM rt0, v0 GROUP BY rt0.c3, rt0.c0, v0.c0 HAVING SUM(((rt0.c4) IS TRUE)) UNION ALL SELECT rt0.c3, rt0.c0, v0.c0 FROM rt0, v0 GROUP BY rt0.c3, rt0.c0, v0.c0 HAVING (NOT (SUM(((rt0.c4) IS TRUE)))) UNION ALL SELECT rt0.c3, rt0.c0, v0.c0 FROM rt0, v0 GROUP BY rt0.c3, rt0.c0, v0.c0 HAVING ((SUM(((rt0.c4) IS TRUE))) ISNULL);
SELECT ALL rt0.c3, rt0.c0, v0.c0 FROM rt0, v0 GROUP BY rt0.c3, rt0.c0, v0.c0;
SELECT ALL rt0.c3, rt0.c4 FROM rt0;
SELECT ALL rt0.c3, rt0.c4 FROM rt0 WHERE (NULLIF(DISTINCT (rt0.c1 IN (rt0.c4)), ((((((((rt0.c3)AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)))) UNION ALL SELECT rt0.c3, rt0.c4 FROM rt0 WHERE ((NOT (NULLIF(DISTINCT (rt0.c1 IN (rt0.c4)), ((((((((rt0.c3)AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)))))) UNION ALL SELECT rt0.c3, rt0.c4 FROM rt0 WHERE (((NULLIF(DISTINCT (rt0.c1 IN (rt0.c4)), ((((((((rt0.c3)AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)))) ISNULL));
SELECT ALL rt0.c3, rt0.c4 FROM rt0;
SELECT DISTINCT rt0.c4, vt0.c1, vt0.c2 FROM rt0, v0, vt0;
SELECT DISTINCT rt0.c4, vt0.c1, vt0.c2 FROM rt0, v0, vt0 WHERE ((((rt0.c2)>=(vt0.lid)) IN ())) UNION SELECT DISTINCT rt0.c4, vt0.c1, vt0.c2 FROM rt0, v0, vt0 WHERE ((NOT ((((rt0.c2)>=(vt0.lid)) IN ())))) UNION SELECT DISTINCT rt0.c4, vt0.c1, vt0.c2 FROM rt0, v0, vt0 WHERE ((((((rt0.c2)>=(vt0.lid)) IN ())) ISNULL));
SELECT DISTINCT rt0.c4, vt0.c1, vt0.c2 FROM rt0, v0, vt0;
SELECT vt0.c2, rt0.c1, rt0.c3, rt0.c2, vt0.c0 FROM v0, vt0, rt0 GROUP BY vt0.c2, rt0.c1, rt0.c3, rt0.c2, vt0.c0;
SELECT ALL vt0.c2, rt0.c1, rt0.c3, rt0.c2, vt0.c0 FROM v0, vt0, rt0 WHERE (CASE WHEN ((vt0.c1) NOT BETWEEN (rt0.c3) AND (vt0.lid)) THEN TRIM(vt0.c0) ELSE rt0.c0 END) GROUP BY vt0.c2, rt0.c1, rt0.c3, rt0.c2, vt0.c0 UNION SELECT ALL vt0.c2, rt0.c1, rt0.c3, rt0.c2, vt0.c0 FROM v0, vt0, rt0 WHERE ((NOT (CASE WHEN ((vt0.c1) NOT BETWEEN (rt0.c3) AND (vt0.lid)) THEN TRIM(vt0.c0) ELSE rt0.c0 END))) GROUP BY vt0.c2, rt0.c1, rt0.c3, rt0.c2, vt0.c0 UNION SELECT vt0.c2, rt0.c1, rt0.c3, rt0.c2, vt0.c0 FROM v0, vt0, rt0 WHERE (((CASE WHEN ((vt0.c1) NOT BETWEEN (rt0.c3) AND (vt0.lid)) THEN TRIM(vt0.c0) ELSE rt0.c0 END) ISNULL)) GROUP BY vt0.c2, rt0.c1, rt0.c3, rt0.c2, vt0.c0;
SELECT vt0.c2, rt0.c1, rt0.c3, rt0.c2, vt0.c0 FROM v0, vt0, rt0 GROUP BY vt0.c2, rt0.c1, rt0.c3, rt0.c2, vt0.c0;
SELECT vt0.lid, v0.c0 FROM v0 INNER JOIN vt0 ON NULL GROUP BY vt0.lid, v0.c0;
SELECT ALL vt0.lid, v0.c0 FROM v0 INNER JOIN vt0 ON NULL GROUP BY vt0.lid, v0.c0 HAVING vt0.c0 UNION ALL SELECT ALL vt0.lid, v0.c0 FROM v0 INNER JOIN vt0 ON NULL GROUP BY vt0.lid, v0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL vt0.lid, v0.c0 FROM v0 INNER JOIN vt0 ON NULL GROUP BY vt0.lid, v0.c0 HAVING ((vt0.c0) ISNULL);
SELECT vt0.lid, v0.c0 FROM v0 INNER JOIN vt0 ON NULL GROUP BY vt0.lid, v0.c0;
SELECT ALL vt0.lid, v0.c0 FROM v0 INNER JOIN vt0 ON NULL GROUP BY vt0.lid, v0.c0 HAVING vt0.c0 UNION ALL SELECT ALL vt0.lid, v0.c0 FROM v0 INNER JOIN vt0 ON NULL GROUP BY vt0.lid, v0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL vt0.lid, v0.c0 FROM v0 INNER JOIN vt0 ON NULL GROUP BY vt0.lid, v0.c0 HAVING ((vt0.c0) ISNULL);
SELECT vt0.lid, v0.c0 FROM v0 INNER JOIN vt0 ON NULL GROUP BY vt0.lid, v0.c0;
SELECT ALL rt0.c4, rt0.c3, vt0.lid, rt0.c0, rt0.c2, v0.c0, vt0.c0 FROM vt0, v0, rt0;
SELECT rt0.c4, rt0.c3, vt0.lid, rt0.c0, rt0.c2, v0.c0, vt0.c0 FROM vt0, v0, rt0 WHERE ((((vt0.c1)<=(rt0.c0)) IN ())) UNION ALL SELECT rt0.c4, rt0.c3, vt0.lid, rt0.c0, rt0.c2, v0.c0, vt0.c0 FROM vt0, v0, rt0 WHERE ((NOT ((((vt0.c1)<=(rt0.c0)) IN ())))) UNION ALL SELECT rt0.c4, rt0.c3, vt0.lid, rt0.c0, rt0.c2, v0.c0, vt0.c0 FROM vt0, v0, rt0 WHERE ((((((vt0.c1)<=(rt0.c0)) IN ())) ISNULL));
SELECT ALL rt0.c4, rt0.c3, vt0.lid, rt0.c0, rt0.c2, v0.c0, vt0.c0 FROM vt0, v0, rt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (CAST(x'' AS INTEGER)) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (CAST(x'' AS INTEGER)))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((CAST(x'' AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt0.lid, vt0.c0, rt0.c4, vt0.c2, v0.c0, rt0.c3 FROM v0 LEFT OUTER JOIN vt0 ON (- (((rt0.c0)-(vt0.lid)))) LEFT OUTER JOIN rt0 ON CASE CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c2 END  WHEN ((rt0.c2)/(v0.c0)) THEN LOWER(v0.c0) ELSE CASE WHEN v0.c0 THEN vt0.lid WHEN vt0.c1 THEN v0.c0 WHEN vt0.c0 THEN vt0.lid ELSE vt0.c1 END END GROUP BY rt0.c2, rt0.c1, rt0.c0, vt0.lid, vt0.c0, rt0.c4, vt0.c2, v0.c0, rt0.c3;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING SUM(CAST(rt0.c0 AS REAL)) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (SUM(CAST(rt0.c0 AS REAL)))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((SUM(CAST(rt0.c0 AS REAL))) ISNULL);
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING SUM(CAST(rt0.c0 AS REAL)) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (SUM(CAST(rt0.c0 AS REAL)))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((SUM(CAST(rt0.c0 AS REAL))) ISNULL);
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (JULIANDAY(CASE vt0.lid  WHEN vt0.c0 THEN vt0.lid END, ((x'') IS FALSE), NULL)) UNION ALL SELECT * FROM vt0 WHERE ((NOT (JULIANDAY(CASE vt0.lid  WHEN vt0.c0 THEN vt0.lid END, ((x'') IS FALSE), NULL)))) UNION ALL SELECT ALL * FROM vt0 WHERE (((JULIANDAY(CASE vt0.lid  WHEN vt0.c0 THEN vt0.lid END, ((x'') IS FALSE), NULL)) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.lid) BETWEEN (vt0.c2) AND (vt0.lid))) NOT BETWEEN (CASE vt0.c2  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.lid THEN vt0.c1 WHEN vt0.c2 THEN vt0.lid END) AND (0Xffffffffb8429d11 COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.lid) BETWEEN (vt0.c2) AND (vt0.lid))) NOT BETWEEN (CASE vt0.c2  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.lid THEN vt0.c1 WHEN vt0.c2 THEN vt0.lid END) AND (0xffffffffb8429d11 COLLATE BINARY))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.lid) BETWEEN (vt0.c2) AND (vt0.lid))) NOT BETWEEN (CASE vt0.c2  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.lid THEN vt0.c1 WHEN vt0.c2 THEN vt0.lid END) AND (0Xffffffffb8429d11 COLLATE BINARY))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT rt0.c1 FROM rt0, v0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, v0 WHERE ((((rt0.c2, NULL, rt0.c4)) NOT BETWEEN ((CAST(rt0.c3 AS REAL), CASE WHEN rt0.c4 THEN rt0.c3 ELSE v0.c0 END, CAST(v0.c0 AS BLOB))) AND ((((v0.c0)<(rt0.c2)), (rt0.c4 IN (689242998)), ((rt0.c0)<=(rt0.c3)))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0, v0 WHERE ((NOT ((((rt0.c2, NULL, rt0.c4)) NOT BETWEEN ((CAST(rt0.c3 AS REAL), CASE WHEN rt0.c4 THEN rt0.c3 ELSE v0.c0 END, CAST(v0.c0 AS BLOB))) AND ((((v0.c0)<(rt0.c2)), (rt0.c4 IN (689242998)), ((rt0.c0)<=(rt0.c3)))))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0, v0 WHERE ((((((rt0.c2, NULL, rt0.c4)) NOT BETWEEN ((CAST(rt0.c3 AS REAL), CASE WHEN rt0.c4 THEN rt0.c3 ELSE v0.c0 END, CAST(v0.c0 AS BLOB))) AND ((((v0.c0)<(rt0.c2)), (rt0.c4 IN (689242998)), ((rt0.c0)<=(rt0.c3)))))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0, v0 GROUP BY rt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING CASE (- ('0.007973917971206612'))  WHEN MIN(vt0.c0) THEN ((vt0.c2) BETWEEN (vt0.c1) AND (TOTAL(vt0.lid))) END UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (CASE (- ('0.007973917971206612'))  WHEN MIN(vt0.c0) THEN ((vt0.c2) BETWEEN (vt0.c1) AND (TOTAL(vt0.lid))) END)) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((CASE (- ('0.007973917971206612'))  WHEN MIN(vt0.c0) THEN ((vt0.c2) BETWEEN (vt0.c1) AND (TOTAL(vt0.lid))) END) ISNULL);
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING CASE (- ('0.007973917971206612'))  WHEN MIN(vt0.c0) THEN ((vt0.c2) BETWEEN (vt0.c1) AND (TOTAL(vt0.lid))) END UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (CASE (- ('0.007973917971206612'))  WHEN MIN(vt0.c0) THEN ((vt0.c2) BETWEEN (vt0.c1) AND (TOTAL(vt0.lid))) END)) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((CASE (- ('0.007973917971206612'))  WHEN MIN(vt0.c0) THEN ((vt0.c2) BETWEEN (vt0.c1) AND (TOTAL(vt0.lid))) END) ISNULL);
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((CAST(rt0.c3 AS TEXT)) NOTNULL)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((CAST(rt0.c3 AS TEXT)) NOTNULL)))) UNION ALL SELECT * FROM rt0 WHERE (((((CAST(rt0.c3 AS TEXT)) NOTNULL)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM vt0 INNER JOIN v0 ON (((vt0.lid) NOT BETWEEN (rt0.c1) AND (rt0.c4)) IN (((((vt0.c1)OR(vt0.lid)))AND(v0.c0)))) FULL OUTER JOIN rt0 ON ((((rt0.c4) IS FALSE))OR(IFNULL(DISTINCT rt0.c1, vt0.c1)));
SELECT ALL vt0.c1, rt0.c3, vt0.c0, rt0.c4, rt0.c2, vt0.lid FROM vt0, rt0 GROUP BY vt0.c1, rt0.c3, vt0.c0, rt0.c4, rt0.c2, vt0.lid;
SELECT vt0.c1, rt0.c3, vt0.c0, rt0.c4, rt0.c2, vt0.lid FROM vt0, rt0 WHERE ('Q*~<') GROUP BY vt0.c1, rt0.c3, vt0.c0, rt0.c4, rt0.c2, vt0.lid UNION SELECT ALL vt0.c1, rt0.c3, vt0.c0, rt0.c4, rt0.c2, vt0.lid FROM vt0, rt0 WHERE ((NOT ('Q*~<'))) GROUP BY vt0.c1, rt0.c3, vt0.c0, rt0.c4, rt0.c2, vt0.lid UNION SELECT ALL vt0.c1, rt0.c3, vt0.c0, rt0.c4, rt0.c2, vt0.lid FROM vt0, rt0 WHERE ((('Q*~<') ISNULL)) GROUP BY vt0.c1, rt0.c3, vt0.c0, rt0.c4, rt0.c2, vt0.lid;
SELECT ALL vt0.c1, rt0.c3, vt0.c0, rt0.c4, rt0.c2, vt0.lid FROM vt0, rt0 GROUP BY vt0.c1, rt0.c3, vt0.c0, rt0.c4, rt0.c2, vt0.lid;
SELECT ALL rt0.c4, rt0.c0, rt0.c2, vt0.lid FROM rt0, vt0 NATURAL JOIN v0 GROUP BY rt0.c4, rt0.c0, rt0.c2, vt0.lid;
SELECT ALL rt0.c4, rt0.c0, rt0.c2, vt0.lid FROM rt0, vt0 NATURAL JOIN v0 GROUP BY rt0.c4, rt0.c0, rt0.c2, vt0.lid HAVING COUNT(*) UNION ALL SELECT rt0.c4, rt0.c0, rt0.c2, vt0.lid FROM rt0, vt0 NATURAL JOIN v0 GROUP BY rt0.c4, rt0.c0, rt0.c2, vt0.lid HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c4, rt0.c0, rt0.c2, vt0.lid FROM rt0, vt0 NATURAL JOIN v0 GROUP BY rt0.c4, rt0.c0, rt0.c2, vt0.lid HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c4, rt0.c0, rt0.c2, vt0.lid FROM rt0, vt0 NATURAL JOIN v0 GROUP BY rt0.c4, rt0.c0, rt0.c2, vt0.lid;
SELECT ALL rt0.c4, rt0.c0, rt0.c2, vt0.lid FROM rt0, vt0 NATURAL JOIN v0 GROUP BY rt0.c4, rt0.c0, rt0.c2, vt0.lid HAVING COUNT(*) UNION ALL SELECT rt0.c4, rt0.c0, rt0.c2, vt0.lid FROM rt0, vt0 NATURAL JOIN v0 GROUP BY rt0.c4, rt0.c0, rt0.c2, vt0.lid HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c4, rt0.c0, rt0.c2, vt0.lid FROM rt0, vt0 NATURAL JOIN v0 GROUP BY rt0.c4, rt0.c0, rt0.c2, vt0.lid HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c4, rt0.c0, rt0.c2, vt0.lid FROM rt0, vt0 NATURAL JOIN v0 GROUP BY rt0.c4, rt0.c0, rt0.c2, vt0.lid;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (CAST(MAX(0.35437423743215835, 'b', vt0.c2, vt0.lid) AS BLOB)) UNION ALL SELECT * FROM vt0 WHERE ((NOT (CAST(MAX(0.35437423743215835, 'b', vt0.c2, vt0.lid) AS BLOB)))) UNION ALL SELECT ALL * FROM vt0 WHERE (((CAST(MAX(0.35437423743215835, 'b', vt0.c2, vt0.lid) AS BLOB)) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0, v0, rt0;
SELECT DISTINCT * FROM vt0, v0, rt0 WHERE (json_patch('1868058530', (vt0.c1 IN ()))) UNION SELECT DISTINCT * FROM vt0, v0, rt0 WHERE ((NOT (json_patch('1868058530', (vt0.c1 IN ()))))) UNION SELECT DISTINCT * FROM vt0, v0, rt0 WHERE (((json_patch('1868058530', (vt0.c1 IN ()))) ISNULL));
SELECT DISTINCT * FROM vt0, v0, rt0;
SELECT vt0.c2, rt0.c0, vt0.c1, vt0.lid, rt0.c3, rt0.c4, rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY vt0.c2, rt0.c0, vt0.c1, vt0.lid, rt0.c3, rt0.c4, rt0.c1, rt0.c2;
SELECT vt0.c2, rt0.c0, vt0.c1, vt0.lid, rt0.c3, rt0.c4, rt0.c1, rt0.c2 FROM vt0, rt0 WHERE (((rt0.c3 COLLATE NOCASE)IS NOT(TYPEOF(vt0.c1)))) GROUP BY vt0.c2, rt0.c0, vt0.c1, vt0.lid, rt0.c3, rt0.c4, rt0.c1, rt0.c2 UNION SELECT vt0.c2, rt0.c0, vt0.c1, vt0.lid, rt0.c3, rt0.c4, rt0.c1, rt0.c2 FROM vt0, rt0 WHERE ((NOT (((rt0.c3 COLLATE NOCASE)IS NOT(TYPEOF(vt0.c1)))))) GROUP BY vt0.c2, rt0.c0, vt0.c1, vt0.lid, rt0.c3, rt0.c4, rt0.c1, rt0.c2 UNION SELECT vt0.c2, rt0.c0, vt0.c1, vt0.lid, rt0.c3, rt0.c4, rt0.c1, rt0.c2 FROM vt0, rt0 WHERE (((((rt0.c3 COLLATE NOCASE)IS NOT(TYPEOF(vt0.c1)))) ISNULL)) GROUP BY vt0.c2, rt0.c0, vt0.c1, vt0.lid, rt0.c3, rt0.c4, rt0.c1, rt0.c2;
SELECT vt0.c2, rt0.c0, vt0.c1, vt0.lid, rt0.c3, rt0.c4, rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY vt0.c2, rt0.c0, vt0.c1, vt0.lid, rt0.c3, rt0.c4, rt0.c1, rt0.c2;
SELECT vt0.c1, vt0.lid, vt0.c2, v0.c0 FROM vt0, v0 GROUP BY vt0.c1, vt0.lid, vt0.c2, v0.c0;
SELECT vt0.c1, vt0.lid, vt0.c2, v0.c0 FROM vt0, v0 GROUP BY vt0.c1, vt0.lid, vt0.c2, v0.c0 HAVING ((((vt0.c0) IS TRUE)) BETWEEN (TOTAL(vt0.c0)) AND (GROUP_CONCAT(GROUP_CONCAT(GROUP_CONCAT(vt0.lid))))) UNION ALL SELECT vt0.c1, vt0.lid, vt0.c2, v0.c0 FROM vt0, v0 GROUP BY vt0.c1, vt0.lid, vt0.c2, v0.c0 HAVING (NOT (((((vt0.c0) IS TRUE)) BETWEEN (TOTAL(vt0.c0)) AND (GROUP_CONCAT(GROUP_CONCAT(GROUP_CONCAT(vt0.lid))))))) UNION ALL SELECT vt0.c1, vt0.lid, vt0.c2, v0.c0 FROM vt0, v0 GROUP BY vt0.c1, vt0.lid, vt0.c2, v0.c0 HAVING ((((((vt0.c0) IS TRUE)) BETWEEN (TOTAL(vt0.c0)) AND (GROUP_CONCAT(GROUP_CONCAT(GROUP_CONCAT(vt0.lid)))))) ISNULL);
SELECT ALL * FROM vt0, v0;
SELECT ALL * FROM vt0, v0 WHERE (COALESCE(vt0.c1, vt0.c1) COLLATE RTRIM) UNION ALL SELECT ALL * FROM vt0, v0 WHERE ((NOT (COALESCE(vt0.c1, vt0.c1) COLLATE RTRIM))) UNION ALL SELECT ALL * FROM vt0, v0 WHERE (((COALESCE(vt0.c1, vt0.c1) COLLATE RTRIM) ISNULL));
SELECT ALL * FROM vt0, v0;
SELECT DISTINCT vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON vt0.c0;
SELECT DISTINCT vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON vt0.c0 WHERE (NULLIF(CASE vt0.lid  WHEN v0.c0 THEN vt0.lid ELSE vt0.c2 END, (((vt0.c0))==((vt0.c1))))) UNION SELECT DISTINCT vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON vt0.c0 WHERE ((NOT (NULLIF(CASE vt0.lid  WHEN v0.c0 THEN vt0.lid ELSE vt0.c2 END, (((vt0.c0))==((vt0.c1))))))) UNION SELECT DISTINCT vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON vt0.c0 WHERE (((NULLIF(CASE vt0.lid  WHEN v0.c0 THEN vt0.lid ELSE vt0.c2 END, (((vt0.c0))=((vt0.c1))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON vt0.c0;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c2 END)IS(((((rt0.c1)AND(rt0.c1)))OR(rt0.c2))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c2 END)IS(((((rt0.c1)AND(rt0.c1)))OR(rt0.c2))))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (((((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c2 END)IS(((((rt0.c1)AND(rt0.c1)))OR(rt0.c2))))) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL v0.c0, vt0.c0, rt0.c0, vt0.c2, rt0.c2, rt0.c3, vt0.lid FROM rt0, v0 INNER JOIN vt0 ON ((CASE WHEN v0.c0 THEN rt0.c1 WHEN NULL THEN rt0.c3 WHEN vt0.c1 THEN -1.290679581E9 ELSE rt0.c1 END)IS((~ (rt0.c3)))) GROUP BY v0.c0, vt0.c0, rt0.c0, vt0.c2, rt0.c2, rt0.c3, vt0.lid;
SELECT v0.c0, vt0.c0, rt0.c0, vt0.c2, rt0.c2, rt0.c3, vt0.lid FROM rt0, v0 INNER JOIN vt0 ON ((CASE WHEN v0.c0 THEN rt0.c1 WHEN NULL THEN rt0.c3 WHEN vt0.c1 THEN -1.290679581E9 ELSE rt0.c1 END)IS((~ (rt0.c3)))) GROUP BY v0.c0, vt0.c0, rt0.c0, vt0.c2, rt0.c2, rt0.c3, vt0.lid HAVING AVG(COUNT(*)) UNION ALL SELECT ALL v0.c0, vt0.c0, rt0.c0, vt0.c2, rt0.c2, rt0.c3, vt0.lid FROM rt0, v0 INNER JOIN vt0 ON ((CASE WHEN v0.c0 THEN rt0.c1 WHEN NULL THEN rt0.c3 WHEN vt0.c1 THEN -1.290679581E9 ELSE rt0.c1 END)IS((~ (rt0.c3)))) GROUP BY v0.c0, vt0.c0, rt0.c0, vt0.c2, rt0.c2, rt0.c3, vt0.lid HAVING (NOT (AVG(COUNT(*)))) UNION ALL SELECT ALL v0.c0, vt0.c0, rt0.c0, vt0.c2, rt0.c2, rt0.c3, vt0.lid FROM rt0, v0 INNER JOIN vt0 ON ((CASE WHEN v0.c0 THEN rt0.c1 WHEN NULL THEN rt0.c3 WHEN vt0.c1 THEN -1.290679581E9 ELSE rt0.c1 END)IS((~ (rt0.c3)))) GROUP BY v0.c0, vt0.c0, rt0.c0, vt0.c2, rt0.c2, rt0.c3, vt0.lid HAVING ((AVG(COUNT(*))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (NULL) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (NULL))) UNION ALL SELECT ALL * FROM rt0 WHERE (((NULL) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM vt0, rt0, v0;
SELECT DISTINCT * FROM vt0, rt0, v0 WHERE (vt0.c1) UNION SELECT DISTINCT * FROM vt0, rt0, v0 WHERE ((NOT (vt0.c1))) UNION SELECT DISTINCT * FROM vt0, rt0, v0 WHERE (((vt0.c1) ISNULL));
SELECT DISTINCT * FROM vt0, rt0, v0;
SELECT ALL vt0.lid, vt0.c1 FROM v0, vt0, rt0 GROUP BY vt0.lid, vt0.c1;
SELECT vt0.lid, vt0.c1 FROM v0, vt0, rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((UPPER(DISTINCT vt0.c0))) AND ((CASE x''  WHEN rt0.c1 THEN rt0.c0 ELSE vt0.c0 END)))) GROUP BY vt0.lid, vt0.c1 UNION SELECT vt0.lid, vt0.c1 FROM v0, vt0, rt0 WHERE ((NOT ((((rt0.c2)) NOT BETWEEN ((UPPER(DISTINCT vt0.c0))) AND ((CASE x''  WHEN rt0.c1 THEN rt0.c0 ELSE vt0.c0 END)))))) GROUP BY vt0.lid, vt0.c1 UNION SELECT ALL vt0.lid, vt0.c1 FROM v0, vt0, rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((UPPER(DISTINCT vt0.c0))) AND ((CASE x''  WHEN rt0.c1 THEN rt0.c0 ELSE vt0.c0 END)))) ISNULL)) GROUP BY vt0.lid, vt0.c1;
SELECT ALL vt0.lid, vt0.c1 FROM v0, vt0, rt0 GROUP BY vt0.lid, vt0.c1;
SELECT ALL vt0.c1, rt0.c2, rt0.c4, vt0.c2, vt0.c0 FROM v0, rt0, vt0 GROUP BY vt0.c1, rt0.c2, rt0.c4, vt0.c2, vt0.c0;
SELECT ALL vt0.c1, rt0.c2, rt0.c4, vt0.c2, vt0.c0 FROM v0, rt0, vt0 GROUP BY vt0.c1, rt0.c2, rt0.c4, vt0.c2, vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c1, rt0.c2, rt0.c4, vt0.c2, vt0.c0 FROM v0, rt0, vt0 GROUP BY vt0.c1, rt0.c2, rt0.c4, vt0.c2, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c1, rt0.c2, rt0.c4, vt0.c2, vt0.c0 FROM v0, rt0, vt0 GROUP BY vt0.c1, rt0.c2, rt0.c4, vt0.c2, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c1, rt0.c2, rt0.c4, vt0.c2, vt0.c0 FROM v0, rt0, vt0 GROUP BY vt0.c1, rt0.c2, rt0.c4, vt0.c2, vt0.c0;
SELECT ALL vt0.c1, rt0.c2, rt0.c4, vt0.c2, vt0.c0 FROM v0, rt0, vt0 GROUP BY vt0.c1, rt0.c2, rt0.c4, vt0.c2, vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c1, rt0.c2, rt0.c4, vt0.c2, vt0.c0 FROM v0, rt0, vt0 GROUP BY vt0.c1, rt0.c2, rt0.c4, vt0.c2, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c1, rt0.c2, rt0.c4, vt0.c2, vt0.c0 FROM v0, rt0, vt0 GROUP BY vt0.c1, rt0.c2, rt0.c4, vt0.c2, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c1, rt0.c2, rt0.c4, vt0.c2, vt0.c0 FROM v0, rt0, vt0 GROUP BY vt0.c1, rt0.c2, rt0.c4, vt0.c2, vt0.c0;
SELECT * FROM vt0, rt0, v0;
SELECT ALL * FROM vt0, rt0 NOT INDEXED, v0 WHERE ((CASE WHEN rt0.c1 THEN vt0.c2 ELSE rt0.c1 END IN (CAST(vt0.lid AS NUMERIC)))) UNION ALL SELECT ALL * FROM vt0, rt0, v0 WHERE ((NOT ((CASE WHEN rt0.c1 THEN vt0.c2 ELSE rt0.c1 END IN (CAST(vt0.lid AS NUMERIC)))))) UNION ALL SELECT ALL * FROM vt0, rt0, v0 WHERE ((((CASE WHEN rt0.c1 THEN vt0.c2 ELSE rt0.c1 END IN (CAST(vt0.lid AS NUMERIC)))) ISNULL));
SELECT * FROM vt0, rt0, v0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c4, rt0.c1, rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c4, rt0.c1, rt0.c3 FROM rt0 WHERE ((((rt0.c4) IS FALSE) IN ())) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c4, rt0.c1, rt0.c3 FROM rt0 WHERE ((NOT ((((rt0.c4) IS FALSE) IN ())))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c4, rt0.c1, rt0.c3 FROM rt0 WHERE ((((((rt0.c4) IS FALSE) IN ())) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c4, rt0.c1, rt0.c3 FROM rt0;
SELECT ALL vt0.c1, v0.c0, vt0.c0, rt0.c4, rt0.c0, rt0.c1, rt0.c2 FROM v0 CROSS JOIN vt0 ON CAST(((v0.c0) IS TRUE) AS REAL) FULL OUTER JOIN rt0 ON 'EQ,8y]' GROUP BY vt0.c1, v0.c0, vt0.c0, rt0.c4, rt0.c0, rt0.c1, rt0.c2;
SELECT vt0.c1, v0.c0, vt0.c0, rt0.c4, rt0.c0, rt0.c1, rt0.c2 FROM v0 CROSS JOIN vt0 ON CAST(((v0.c0) IS TRUE) AS REAL) FULL OUTER JOIN rt0 ON 'EQ,8y]' WHERE ((((v0.c0, rt0.c0, rt0.c0, vt0.c0, rt0.c4)) NOT BETWEEN (((+ (vt0.c1)), ((((rt0.c3)OR(rt0.c1)))AND(vt0.lid)), vt0.c1 COLLATE NOCASE, -1.7976931348623157E308 COLLATE BINARY, CASE vt0.c1  WHEN rt0.c0 THEN vt0.c0 ELSE v0.c0 END)) AND ((((rt0.c2) ISNULL), CASE vt0.c1  WHEN vt0.c2 THEN vt0.lid WHEN vt0.c2 THEN v0.c0 WHEN v0.c0 THEN rt0.c3 ELSE vt0.c0 END, CASE vt0.c0  WHEN vt0.c2 THEN rt0.c0 WHEN vt0.lid THEN v0.c0 WHEN vt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN -2004643136 WHEN vt0.c2 THEN vt0.c0 ELSE rt0.c4 END, rt0.c0, (((rt0.c3))=((rt0.c0))))))) GROUP BY vt0.c1, v0.c0, vt0.c0, rt0.c4, rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL vt0.c1, v0.c0, vt0.c0, rt0.c4, rt0.c0, rt0.c1, rt0.c2 FROM v0 CROSS JOIN vt0 ON CAST(((v0.c0) IS TRUE) AS REAL) FULL OUTER JOIN rt0 ON 'EQ,8y]' WHERE ((NOT ((((v0.c0, rt0.c0, rt0.c0, vt0.c0, rt0.c4)) NOT BETWEEN (((+ (vt0.c1)), ((((rt0.c3)OR(rt0.c1)))AND(vt0.lid)), vt0.c1 COLLATE NOCASE, -1.7976931348623157E308 COLLATE BINARY, CASE vt0.c1  WHEN rt0.c0 THEN vt0.c0 ELSE v0.c0 END)) AND ((((rt0.c2) ISNULL), CASE vt0.c1  WHEN vt0.c2 THEN vt0.lid WHEN vt0.c2 THEN v0.c0 WHEN v0.c0 THEN rt0.c3 ELSE vt0.c0 END, CASE vt0.c0  WHEN vt0.c2 THEN rt0.c0 WHEN vt0.lid THEN v0.c0 WHEN vt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN -2004643136 WHEN vt0.c2 THEN vt0.c0 ELSE rt0.c4 END, rt0.c0, (((rt0.c3))==((rt0.c0))))))))) GROUP BY vt0.c1, v0.c0, vt0.c0, rt0.c4, rt0.c0, rt0.c1, rt0.c2 UNION SELECT vt0.c1, v0.c0, vt0.c0, rt0.c4, rt0.c0, rt0.c1, rt0.c2 FROM v0 CROSS JOIN vt0 ON CAST(((v0.c0) IS TRUE) AS REAL) FULL OUTER JOIN rt0 ON 'EQ,8y]' WHERE ((((((v0.c0, rt0.c0, rt0.c0, vt0.c0, rt0.c4)) NOT BETWEEN (((+ (vt0.c1)), ((((rt0.c3)OR(rt0.c1)))AND(vt0.lid)), vt0.c1 COLLATE NOCASE, -1.7976931348623157E308 COLLATE BINARY, CASE vt0.c1  WHEN rt0.c0 THEN vt0.c0 ELSE v0.c0 END)) AND ((((rt0.c2) ISNULL), CASE vt0.c1  WHEN vt0.c2 THEN vt0.lid WHEN vt0.c2 THEN v0.c0 WHEN v0.c0 THEN rt0.c3 ELSE vt0.c0 END, CASE vt0.c0  WHEN vt0.c2 THEN rt0.c0 WHEN vt0.lid THEN v0.c0 WHEN vt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN -2004643136 WHEN vt0.c2 THEN vt0.c0 ELSE rt0.c4 END, rt0.c0, (((rt0.c3))=((rt0.c0))))))) ISNULL)) GROUP BY vt0.c1, v0.c0, vt0.c0, rt0.c4, rt0.c0, rt0.c1, rt0.c2;
SELECT ALL vt0.c1, v0.c0, vt0.c0, rt0.c4, rt0.c0, rt0.c1, rt0.c2 FROM v0 CROSS JOIN vt0 ON CAST(((v0.c0) IS TRUE) AS REAL) FULL OUTER JOIN rt0 ON 'EQ,8y]' GROUP BY vt0.c1, v0.c0, vt0.c0, rt0.c4, rt0.c0, rt0.c1, rt0.c2;
SELECT ALL vt0.c2, rt0.c3, rt0.c2, rt0.c4 FROM vt0, rt0 GROUP BY vt0.c2, rt0.c3, rt0.c2, rt0.c4;
SELECT ALL vt0.c2, rt0.c3, rt0.c2, rt0.c4 FROM vt0, rt0 GROUP BY vt0.c2, rt0.c3, rt0.c2, rt0.c4 HAVING MAX(((rt0.c4)!=(vt0.c1))) UNION ALL SELECT ALL vt0.c2, rt0.c3, rt0.c2, rt0.c4 FROM vt0, rt0 GROUP BY vt0.c2, rt0.c3, rt0.c2, rt0.c4 HAVING (NOT (MAX(((rt0.c4)<>(vt0.c1))))) UNION ALL SELECT ALL vt0.c2, rt0.c3, rt0.c2, rt0.c4 FROM vt0, rt0 GROUP BY vt0.c2, rt0.c3, rt0.c2, rt0.c4 HAVING ((MAX(((rt0.c4)<>(vt0.c1)))) ISNULL);
SELECT ALL vt0.c2, rt0.c3, rt0.c2, rt0.c4 FROM vt0, rt0 GROUP BY vt0.c2, rt0.c3, rt0.c2, rt0.c4;
SELECT ALL vt0.c2, rt0.c3, rt0.c2, rt0.c4 FROM vt0, rt0 GROUP BY vt0.c2, rt0.c3, rt0.c2, rt0.c4 HAVING MAX(((rt0.c4)!=(vt0.c1))) UNION ALL SELECT ALL vt0.c2, rt0.c3, rt0.c2, rt0.c4 FROM vt0, rt0 GROUP BY vt0.c2, rt0.c3, rt0.c2, rt0.c4 HAVING (NOT (MAX(((rt0.c4)<>(vt0.c1))))) UNION ALL SELECT ALL vt0.c2, rt0.c3, rt0.c2, rt0.c4 FROM vt0, rt0 GROUP BY vt0.c2, rt0.c3, rt0.c2, rt0.c4 HAVING ((MAX(((rt0.c4)<>(vt0.c1)))) ISNULL);
SELECT ALL vt0.c2, rt0.c3, rt0.c2, rt0.c4 FROM vt0, rt0 GROUP BY vt0.c2, rt0.c3, rt0.c2, rt0.c4;
SELECT ALL v0.c0, rt0.c0, rt0.c3, rt0.c4, vt0.c2, rt0.c2, rt0.c1 FROM v0, vt0, rt0;
SELECT v0.c0, rt0.c0, rt0.c3, rt0.c4, vt0.c2, rt0.c2, rt0.c1 FROM v0, vt0, rt0 WHERE ('w%N^eP') UNION ALL SELECT v0.c0, rt0.c0, rt0.c3, rt0.c4, vt0.c2, rt0.c2, rt0.c1 FROM v0, vt0, rt0 WHERE ((NOT ('w%N^eP'))) UNION ALL SELECT v0.c0, rt0.c0, rt0.c3, rt0.c4, vt0.c2, rt0.c2, rt0.c1 FROM v0, vt0, rt0 WHERE ((('w%N^eP') ISNULL));
SELECT ALL v0.c0, rt0.c0, rt0.c3, rt0.c4, vt0.c2, rt0.c2, rt0.c1 FROM v0, vt0, rt0;
SELECT DISTINCT vt0.c1, vt0.c0, rt0.c0, rt0.c3, vt0.c2 FROM rt0, vt0, v0;
SELECT DISTINCT vt0.c1, vt0.c0, rt0.c0, rt0.c3, vt0.c2 FROM rt0, vt0, v0 WHERE ((~ ('	Zz\nD'))) UNION SELECT DISTINCT vt0.c1, vt0.c0, rt0.c0, rt0.c3, vt0.c2 FROM rt0, vt0, v0 WHERE ((NOT ((~ ('	Zz\nD'))))) UNION SELECT DISTINCT vt0.c1, vt0.c0, rt0.c0, rt0.c3, vt0.c2 FROM rt0, vt0, v0 WHERE ((((~ ('	Zz\nD'))) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0, rt0.c0, rt0.c3, vt0.c2 FROM rt0, vt0, v0;
SELECT ALL vt0.c1, vt0.lid, rt0.c1, rt0.c0, rt0.c2 FROM v0, vt0, rt0 GROUP BY vt0.c1, vt0.lid, rt0.c1, rt0.c0, rt0.c2;
SELECT vt0.c1, vt0.lid, rt0.c1, rt0.c0, rt0.c2 FROM v0, vt0, rt0 WHERE (rt0.c3) GROUP BY vt0.c1, vt0.lid, rt0.c1, rt0.c0, rt0.c2 UNION SELECT vt0.c1, vt0.lid, rt0.c1, rt0.c0, rt0.c2 FROM v0, vt0, rt0 WHERE ((NOT (rt0.c3))) GROUP BY vt0.c1, vt0.lid, rt0.c1, rt0.c0, rt0.c2 UNION SELECT vt0.c1, vt0.lid, rt0.c1, rt0.c0, rt0.c2 FROM v0, vt0, rt0 WHERE (((rt0.c3) ISNULL)) GROUP BY vt0.c1, vt0.lid, rt0.c1, rt0.c0, rt0.c2;
SELECT ALL vt0.c1, vt0.lid, rt0.c1, rt0.c0, rt0.c2 FROM v0, vt0, rt0 GROUP BY vt0.c1, vt0.lid, rt0.c1, rt0.c0, rt0.c2;
SELECT vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c1;
SELECT ALL vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c1 HAVING ((COUNT(*)) NOT BETWEEN (TOTAL(vt0.lid)) AND (COUNT(*))) UNION ALL SELECT ALL vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c1 HAVING (NOT (((COUNT(*)) NOT BETWEEN (TOTAL(vt0.lid)) AND (COUNT(*))))) UNION ALL SELECT ALL vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c1 HAVING ((((COUNT(*)) NOT BETWEEN (TOTAL(vt0.lid)) AND (COUNT(*)))) ISNULL);
SELECT vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c1;
SELECT ALL vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c1 HAVING ((COUNT(*)) NOT BETWEEN (TOTAL(vt0.lid)) AND (COUNT(*))) UNION ALL SELECT ALL vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c1 HAVING (NOT (((COUNT(*)) NOT BETWEEN (TOTAL(vt0.lid)) AND (COUNT(*))))) UNION ALL SELECT ALL vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c1 HAVING ((((COUNT(*)) NOT BETWEEN (TOTAL(vt0.lid)) AND (COUNT(*)))) ISNULL);
SELECT vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c1;
SELECT * FROM vt0, v0 FULL OUTER JOIN rt0 ON ROUND(((vt0.c0)*(rt0.c1)), CAST(NULL AS INTEGER));
SELECT * FROM vt0, v0 FULL OUTER JOIN rt0 ON ROUND(((vt0.c0)*(rt0.c1)), CAST(NULL AS INTEGER)) WHERE (CAST((+ (rt0.c2)) AS TEXT)) UNION ALL SELECT ALL * FROM vt0, v0 FULL OUTER JOIN rt0 ON ROUND(((vt0.c0)*(rt0.c1)), CAST(NULL AS INTEGER)) WHERE ((NOT (CAST((+ (rt0.c2)) AS TEXT)))) UNION ALL SELECT ALL * FROM vt0, v0 FULL OUTER JOIN rt0 ON ROUND(((vt0.c0)*(rt0.c1)), CAST(NULL AS INTEGER)) WHERE (((CAST((+ (rt0.c2)) AS TEXT)) ISNULL));
SELECT * FROM vt0, v0 FULL OUTER JOIN rt0 ON ROUND(((vt0.c0)*(rt0.c1)), CAST(NULL AS INTEGER));
SELECT DISTINCT vt0.c0, vt0.lid, vt0.c1, rt0.c1 FROM vt0, rt0 CROSS JOIN v0 ON (LTRIM(rt0.c2) IN ());
SELECT DISTINCT vt0.c0, vt0.lid, vt0.c1, rt0.c1 FROM vt0, rt0 CROSS JOIN v0 ON (LTRIM(rt0.c2) IN ()) WHERE (((((x'634c') ISNULL)) NOT BETWEEN (HEX(DISTINCT vt0.c1)) AND (((((rt0.c1)OR(vt0.c0)))OR(vt0.lid))))) UNION SELECT DISTINCT vt0.c0, vt0.lid, vt0.c1, rt0.c1 FROM vt0, rt0 CROSS JOIN v0 ON (LTRIM(rt0.c2) IN ()) WHERE ((NOT (((((x'634c') ISNULL)) NOT BETWEEN (HEX(DISTINCT vt0.c1)) AND (((((rt0.c1)OR(vt0.c0)))OR(vt0.lid))))))) UNION SELECT DISTINCT vt0.c0, vt0.lid, vt0.c1, rt0.c1 FROM vt0, rt0 CROSS JOIN v0 ON (LTRIM(rt0.c2) IN ()) WHERE (((((((x'634c') ISNULL)) NOT BETWEEN (HEX(DISTINCT vt0.c1)) AND (((((rt0.c1)OR(vt0.c0)))OR(vt0.lid))))) ISNULL));
SELECT DISTINCT vt0.c0, vt0.lid, vt0.c1, rt0.c1 FROM vt0, rt0 CROSS JOIN v0 ON (LTRIM(rt0.c2) IN ());
SELECT ALL rt0.c3, rt0.c1, rt0.c4, v0.c0, vt0.c0, vt0.lid, rt0.c2 FROM vt0, rt0 RIGHT OUTER JOIN v0 ON (0x7e8e4ba3 IN ()) GROUP BY rt0.c3, rt0.c1, rt0.c4, v0.c0, vt0.c0, vt0.lid, rt0.c2;
SELECT rt0.c3, rt0.c1, rt0.c4, v0.c0, vt0.c0, vt0.lid, rt0.c2 FROM vt0, rt0 RIGHT OUTER JOIN v0 ON (0X7e8e4ba3 IN ()) WHERE (((((((rt0.c3))<=((rt0.c3)))))<((((rt0.c4) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))) GROUP BY rt0.c3, rt0.c1, rt0.c4, v0.c0, vt0.c0, vt0.lid, rt0.c2 UNION SELECT rt0.c3, rt0.c1, rt0.c4, v0.c0, vt0.c0, vt0.lid, rt0.c2 FROM vt0, rt0 RIGHT OUTER JOIN v0 ON (0x7e8e4ba3 IN ()) WHERE ((NOT (((((((rt0.c3))<=((rt0.c3)))))<((((rt0.c4) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))))) GROUP BY rt0.c3, rt0.c1, rt0.c4, v0.c0, vt0.c0, vt0.lid, rt0.c2 UNION SELECT rt0.c3, rt0.c1, rt0.c4, v0.c0, vt0.c0, vt0.lid, rt0.c2 FROM vt0, rt0 RIGHT OUTER JOIN v0 ON (0X7e8e4ba3 IN ()) WHERE (((((((((rt0.c3))<=((rt0.c3)))))<((((rt0.c4) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))) ISNULL)) GROUP BY rt0.c3, rt0.c1, rt0.c4, v0.c0, vt0.c0, vt0.lid, rt0.c2;
SELECT ALL rt0.c3, rt0.c1, rt0.c4, v0.c0, vt0.c0, vt0.lid, rt0.c2 FROM vt0, rt0 RIGHT OUTER JOIN v0 ON (0x7e8e4ba3 IN ()) GROUP BY rt0.c3, rt0.c1, rt0.c4, v0.c0, vt0.c0, vt0.lid, rt0.c2;
SELECT ALL vt0.c0, vt0.c1, vt0.lid, v0.c0, vt0.c2 FROM vt0, v0 GROUP BY vt0.c0, vt0.c1, vt0.lid, v0.c0, vt0.c2;
SELECT vt0.c0, vt0.c1, vt0.lid, v0.c0, vt0.c2 FROM vt0, v0 GROUP BY vt0.c0, vt0.c1, vt0.lid, v0.c0, vt0.c2 HAVING (NOT (0x0)) COLLATE RTRIM UNION ALL SELECT vt0.c0, vt0.c1, vt0.lid, v0.c0, vt0.c2 FROM vt0, v0 GROUP BY vt0.c0, vt0.c1, vt0.lid, v0.c0, vt0.c2 HAVING (NOT ((NOT (0X0)) COLLATE RTRIM)) UNION ALL SELECT ALL vt0.c0, vt0.c1, vt0.lid, v0.c0, vt0.c2 FROM vt0, v0 GROUP BY vt0.c0, vt0.c1, vt0.lid, v0.c0, vt0.c2 HAVING (((NOT (0x0)) COLLATE RTRIM) ISNULL);
SELECT ALL vt0.c0, vt0.c1, vt0.lid, v0.c0, vt0.c2 FROM vt0, v0 GROUP BY vt0.c0, vt0.c1, vt0.lid, v0.c0, vt0.c2;
SELECT vt0.c0, vt0.c1, vt0.lid, v0.c0, vt0.c2 FROM vt0, v0 GROUP BY vt0.c0, vt0.c1, vt0.lid, v0.c0, vt0.c2 HAVING (NOT (0x0)) COLLATE RTRIM UNION ALL SELECT vt0.c0, vt0.c1, vt0.lid, v0.c0, vt0.c2 FROM vt0, v0 GROUP BY vt0.c0, vt0.c1, vt0.lid, v0.c0, vt0.c2 HAVING (NOT ((NOT (0X0)) COLLATE RTRIM)) UNION ALL SELECT ALL vt0.c0, vt0.c1, vt0.lid, v0.c0, vt0.c2 FROM vt0, v0 GROUP BY vt0.c0, vt0.c1, vt0.lid, v0.c0, vt0.c2 HAVING (((NOT (0x0)) COLLATE RTRIM) ISNULL);
SELECT ALL vt0.c0, vt0.c1, vt0.lid, v0.c0, vt0.c2 FROM vt0, v0 GROUP BY vt0.c0, vt0.c1, vt0.lid, v0.c0, vt0.c2;
SELECT ALL v0.c0, vt0.c1, rt0.c2 FROM v0, rt0, vt0;
SELECT ALL v0.c0, vt0.c1, rt0.c2 FROM v0, rt0, vt0 WHERE (((((v0.c0)/(v0.c0)))=((- (rt0.c1))))) UNION ALL SELECT ALL v0.c0, vt0.c1, rt0.c2 FROM v0, rt0, vt0 WHERE ((NOT (((((v0.c0)/(v0.c0)))=((- (rt0.c1))))))) UNION ALL SELECT v0.c0, vt0.c1, rt0.c2 FROM v0, rt0, vt0 WHERE (((((((v0.c0)/(v0.c0)))=((- (rt0.c1))))) ISNULL));
SELECT ALL v0.c0, vt0.c1, rt0.c2 FROM v0, rt0, vt0;
SELECT DISTINCT rt0.c2, rt0.c0, vt0.lid, rt0.c4, rt0.c3, rt0.c1, v0.c0, vt0.c2 FROM vt0, v0, rt0;
SELECT DISTINCT rt0.c2, rt0.c0, vt0.lid, rt0.c4, rt0.c3, rt0.c1, v0.c0, vt0.c2 FROM vt0, v0, rt0 WHERE (((((vt0.c0)OR(rt0.c4)))OR(vt0.lid)) COLLATE RTRIM) UNION SELECT DISTINCT rt0.c2, rt0.c0, vt0.lid, rt0.c4, rt0.c3, rt0.c1, v0.c0, vt0.c2 FROM vt0, v0, rt0 WHERE ((NOT (((((vt0.c0)OR(rt0.c4)))OR(vt0.lid)) COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c2, rt0.c0, vt0.lid, rt0.c4, rt0.c3, rt0.c1, v0.c0, vt0.c2 FROM vt0, v0, rt0 WHERE (((((((vt0.c0)OR(rt0.c4)))OR(vt0.lid)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, vt0.lid, rt0.c4, rt0.c3, rt0.c1, v0.c0, vt0.c2 FROM vt0, v0, rt0;
SELECT vt0.c0, v0.c0, rt0.c1, vt0.c1, vt0.c2, rt0.c2, rt0.c0, rt0.c4 FROM vt0, v0 INNER JOIN rt0 ON ((((((((((((((vt0.c1)/(rt0.c0)))AND(((((((((vt0.lid)OR(vt0.c2)))AND(vt0.c0)))OR(vt0.c1)))AND(NULL)))))AND(v0.c0 COLLATE RTRIM)))OR(rt0.c3 COLLATE NOCASE)))OR((rt0.c2 IN ()))))AND((vt0.c2 IN ()))))AND(CASE WHEN vt0.lid THEN vt0.c1 ELSE rt0.c1 END)) GROUP BY vt0.c0, v0.c0, rt0.c1, vt0.c1, vt0.c2, rt0.c2, rt0.c0, rt0.c4;
SELECT vt0.c0, v0.c0, rt0.c1, vt0.c1, vt0.c2, rt0.c2, rt0.c0, rt0.c4 FROM vt0, v0 INNER JOIN rt0 ON ((((((((((((((vt0.c1)/(rt0.c0)))AND(((((((((vt0.lid)OR(vt0.c2)))AND(vt0.c0)))OR(vt0.c1)))AND(NULL)))))AND(v0.c0 COLLATE RTRIM)))OR(rt0.c3 COLLATE NOCASE)))OR((rt0.c2 IN ()))))AND((vt0.c2 IN ()))))AND(CASE WHEN vt0.lid THEN vt0.c1 ELSE rt0.c1 END)) WHERE ((((((vt0.c1)*(rt0.c3)), ((v0.c0)<<(rt0.c1)), ((vt0.c2)GLOB(rt0.c3))))>((((vt0.c2) NOT BETWEEN (vt0.c1) AND (rt0.c1)), ((('0.715156837643947'))>=((rt0.c1))), ((rt0.c3) NOT BETWEEN (vt0.lid) AND (vt0.c1)))))) GROUP BY vt0.c0, v0.c0, rt0.c1, vt0.c1, vt0.c2, rt0.c2, rt0.c0, rt0.c4 UNION SELECT ALL vt0.c0, v0.c0, rt0.c1, vt0.c1, vt0.c2, rt0.c2, rt0.c0, rt0.c4 FROM vt0, v0 INNER JOIN rt0 ON ((((((((((((((vt0.c1)/(rt0.c0)))AND(((((((((vt0.lid)OR(vt0.c2)))AND(vt0.c0)))OR(vt0.c1)))AND(NULL)))))AND(v0.c0 COLLATE RTRIM)))OR(rt0.c3 COLLATE NOCASE)))OR((rt0.c2 IN ()))))AND((vt0.c2 IN ()))))AND(CASE WHEN vt0.lid THEN vt0.c1 ELSE rt0.c1 END)) WHERE ((NOT ((((((vt0.c1)*(rt0.c3)), ((v0.c0)<<(rt0.c1)), ((vt0.c2)GLOB(rt0.c3))))>((((vt0.c2) NOT BETWEEN (vt0.c1) AND (rt0.c1)), ((('0.715156837643947'))>=((rt0.c1))), ((rt0.c3) NOT BETWEEN (vt0.lid) AND (vt0.c1)))))))) GROUP BY vt0.c0, v0.c0, rt0.c1, vt0.c1, vt0.c2, rt0.c2, rt0.c0, rt0.c4 UNION SELECT vt0.c0, v0.c0, rt0.c1, vt0.c1, vt0.c2, rt0.c2, rt0.c0, rt0.c4 FROM vt0, v0 INNER JOIN rt0 ON ((((((((((((((vt0.c1)/(rt0.c0)))AND(((((((((vt0.lid)OR(vt0.c2)))AND(vt0.c0)))OR(vt0.c1)))AND(NULL)))))AND(v0.c0 COLLATE RTRIM)))OR(rt0.c3 COLLATE NOCASE)))OR((rt0.c2 IN ()))))AND((vt0.c2 IN ()))))AND(CASE WHEN vt0.lid THEN vt0.c1 ELSE rt0.c1 END)) WHERE ((((((((vt0.c1)*(rt0.c3)), ((v0.c0)<<(rt0.c1)), ((vt0.c2)GLOB(rt0.c3))))>((((vt0.c2) NOT BETWEEN (vt0.c1) AND (rt0.c1)), ((('0.715156837643947'))>=((rt0.c1))), ((rt0.c3) NOT BETWEEN (vt0.lid) AND (vt0.c1)))))) ISNULL)) GROUP BY vt0.c0, v0.c0, rt0.c1, vt0.c1, vt0.c2, rt0.c2, rt0.c0, rt0.c4;
SELECT vt0.c0, v0.c0, rt0.c1, vt0.c1, vt0.c2, rt0.c2, rt0.c0, rt0.c4 FROM vt0, v0 INNER JOIN rt0 ON ((((((((((((((vt0.c1)/(rt0.c0)))AND(((((((((vt0.lid)OR(vt0.c2)))AND(vt0.c0)))OR(vt0.c1)))AND(NULL)))))AND(v0.c0 COLLATE RTRIM)))OR(rt0.c3 COLLATE NOCASE)))OR((rt0.c2 IN ()))))AND((vt0.c2 IN ()))))AND(CASE WHEN vt0.lid THEN vt0.c1 ELSE rt0.c1 END)) GROUP BY vt0.c0, v0.c0, rt0.c1, vt0.c1, vt0.c2, rt0.c2, rt0.c0, rt0.c4;
SELECT vt0.lid, rt0.c4, vt0.c1, v0.c0, rt0.c0, vt0.c2, rt0.c3, vt0.c0, rt0.c1 FROM v0, rt0, vt0 GROUP BY vt0.lid, rt0.c4, vt0.c1, v0.c0, rt0.c0, vt0.c2, rt0.c3, vt0.c0, rt0.c1;
SELECT ALL vt0.lid, rt0.c4, vt0.c1, v0.c0, rt0.c0, vt0.c2, rt0.c3, vt0.c0, rt0.c1 FROM v0, rt0, vt0 GROUP BY vt0.lid, rt0.c4, vt0.c1, v0.c0, rt0.c0, vt0.c2, rt0.c3, vt0.c0, rt0.c1 HAVING GROUP_CONCAT((GROUP_CONCAT(vt0.lid) IN (TOTAL(SUM(rt0.c0))))) UNION ALL SELECT ALL vt0.lid, rt0.c4, vt0.c1, v0.c0, rt0.c0, vt0.c2, rt0.c3, vt0.c0, rt0.c1 FROM v0, rt0 NOT INDEXED, vt0 GROUP BY vt0.lid, rt0.c4, vt0.c1, v0.c0, rt0.c0, vt0.c2, rt0.c3, vt0.c0, rt0.c1 HAVING (NOT (GROUP_CONCAT((GROUP_CONCAT(vt0.lid) IN (TOTAL(SUM(rt0.c0))))))) UNION ALL SELECT vt0.lid, rt0.c4, vt0.c1, v0.c0, rt0.c0, vt0.c2, rt0.c3, vt0.c0, rt0.c1 FROM v0, rt0, vt0 GROUP BY vt0.lid, rt0.c4, vt0.c1, v0.c0, rt0.c0, vt0.c2, rt0.c3, vt0.c0, rt0.c1 HAVING ((GROUP_CONCAT((GROUP_CONCAT(vt0.lid) IN (TOTAL(SUM(rt0.c0)))))) ISNULL);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN v0 ON (~ (MIN(rt0.c0, rt0.c3)));
SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON (~ (MIN(rt0.c0, rt0.c3))) WHERE (((rt0.c4)|(-878002353)) COLLATE NOCASE) UNION ALL SELECT ALL * FROM rt0 RIGHT OUTER JOIN v0 ON (~ (MIN(rt0.c0, rt0.c3))) WHERE ((NOT (((rt0.c4)|(-878002353)) COLLATE NOCASE))) UNION ALL SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON (~ (MIN(rt0.c0, rt0.c3))) WHERE (((((rt0.c4)|(-878002353)) COLLATE NOCASE) ISNULL));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN v0 ON (~ (MIN(rt0.c0, rt0.c3)));
SELECT DISTINCT * FROM v0, vt0, rt0;
SELECT DISTINCT * FROM v0, vt0, rt0 WHERE ((- (((rt0.c2)IS NOT(vt0.lid))))) UNION SELECT DISTINCT * FROM v0, vt0, rt0 WHERE ((NOT ((- (((rt0.c2)IS NOT(vt0.lid))))))) UNION SELECT DISTINCT * FROM v0, vt0 NOT INDEXED, rt0 WHERE ((((- (((rt0.c2)IS NOT(vt0.lid))))) ISNULL));
SELECT DISTINCT * FROM v0, vt0, rt0;
SELECT vt0.lid FROM vt0, v0 GROUP BY vt0.lid;
SELECT ALL vt0.lid FROM vt0, v0 WHERE (ABS(DISTINCT CAST(vt0.lid AS INTEGER))) GROUP BY vt0.lid UNION SELECT ALL vt0.lid FROM vt0, v0 WHERE ((NOT (ABS(DISTINCT CAST(vt0.lid AS INTEGER))))) GROUP BY vt0.lid UNION SELECT vt0.lid FROM vt0, v0 WHERE (((ABS(DISTINCT CAST(vt0.lid AS INTEGER))) ISNULL)) GROUP BY vt0.lid;
SELECT vt0.lid FROM vt0, v0 GROUP BY vt0.lid;
SELECT vt0.c0, rt0.c0, rt0.c4 FROM rt0 RIGHT OUTER JOIN vt0 ON (rt0.c0 IN (((vt0.c0) IS FALSE))) INNER JOIN v0 ON (('1肍''畾1Ym') ISNULL) GROUP BY vt0.c0, rt0.c0, rt0.c4;
SELECT ALL vt0.c0, rt0.c0, rt0.c4 FROM rt0 RIGHT OUTER JOIN vt0 ON (rt0.c0 IN (((vt0.c0) IS FALSE))) INNER JOIN v0 ON (('1肍''畾1Ym') ISNULL) GROUP BY vt0.c0, rt0.c0, rt0.c4 HAVING SUM(GROUP_CONCAT(rt0.c0)) UNION ALL SELECT ALL vt0.c0, rt0.c0, rt0.c4 FROM rt0 RIGHT OUTER JOIN vt0 ON (rt0.c0 IN (((vt0.c0) IS FALSE))) INNER JOIN v0 ON (('1肍''畾1Ym') ISNULL) GROUP BY vt0.c0, rt0.c0, rt0.c4 HAVING (NOT (SUM(GROUP_CONCAT(rt0.c0)))) UNION ALL SELECT vt0.c0, rt0.c0, rt0.c4 FROM rt0 RIGHT OUTER JOIN vt0 ON (rt0.c0 IN (((vt0.c0) IS FALSE))) INNER JOIN v0 ON (('1肍''畾1Ym') ISNULL) GROUP BY vt0.c0, rt0.c0, rt0.c4 HAVING ((SUM(GROUP_CONCAT(rt0.c0))) ISNULL);
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (((CAST(v0.c0 AS REAL))GLOB(0.754710726285273))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (((CAST(v0.c0 AS REAL))GLOB(0.754710726285273))))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((((CAST(v0.c0 AS REAL))GLOB(0.754710726285273))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN v0 ON (((rt0.c2 IN ()))=(((vt0.lid)==(vt0.lid)))) FULL OUTER JOIN vt0 ON (NOT (((rt0.c0) IS FALSE)));
SELECT ALL v0.c0, vt0.c2, rt0.c0, rt0.c2, rt0.c4, vt0.lid, vt0.c0, rt0.c3, rt0.c1 FROM vt0, v0, rt0 GROUP BY v0.c0, vt0.c2, rt0.c0, rt0.c2, rt0.c4, vt0.lid, vt0.c0, rt0.c3, rt0.c1;
SELECT ALL v0.c0, vt0.c2, rt0.c0, rt0.c2, rt0.c4, vt0.lid, vt0.c0, rt0.c3, rt0.c1 FROM vt0, v0, rt0 WHERE ('-796640736') GROUP BY v0.c0, vt0.c2, rt0.c0, rt0.c2, rt0.c4, vt0.lid, vt0.c0, rt0.c3, rt0.c1 UNION SELECT ALL v0.c0, vt0.c2, rt0.c0, rt0.c2, rt0.c4, vt0.lid, vt0.c0, rt0.c3, rt0.c1 FROM vt0, v0, rt0 WHERE ((NOT ('-796640736'))) GROUP BY v0.c0, vt0.c2, rt0.c0, rt0.c2, rt0.c4, vt0.lid, vt0.c0, rt0.c3, rt0.c1 UNION SELECT ALL v0.c0, vt0.c2, rt0.c0, rt0.c2, rt0.c4, vt0.lid, vt0.c0, rt0.c3, rt0.c1 FROM vt0, v0, rt0 WHERE ((('-796640736') ISNULL)) GROUP BY v0.c0, vt0.c2, rt0.c0, rt0.c2, rt0.c4, vt0.lid, vt0.c0, rt0.c3, rt0.c1;
SELECT ALL v0.c0, vt0.c2, rt0.c0, rt0.c2, rt0.c4, vt0.lid, vt0.c0, rt0.c3, rt0.c1 FROM vt0, v0, rt0 GROUP BY v0.c0, vt0.c2, rt0.c0, rt0.c2, rt0.c4, vt0.lid, vt0.c0, rt0.c3, rt0.c1;
SELECT rt0.c4, rt0.c0, vt0.c2 FROM rt0, v0, vt0 GROUP BY rt0.c4, rt0.c0, vt0.c2;
SELECT rt0.c4, rt0.c0, vt0.c2 FROM rt0 NOT INDEXED, v0, vt0 GROUP BY rt0.c4, rt0.c0, vt0.c2 HAVING CASE AVG(rt0.c3)  WHEN TRIM(DISTINCT vt0.lid) THEN ((COUNT(*))<=(COUNT(*))) END UNION ALL SELECT ALL rt0.c4, rt0.c0, vt0.c2 FROM rt0, v0, vt0 GROUP BY rt0.c4, rt0.c0, vt0.c2 HAVING (NOT (CASE AVG(rt0.c3)  WHEN TRIM(DISTINCT vt0.lid) THEN ((COUNT(*))<=(COUNT(*))) END)) UNION ALL SELECT ALL rt0.c4, rt0.c0, vt0.c2 FROM rt0, v0, vt0 GROUP BY rt0.c4, rt0.c0, vt0.c2 HAVING ((CASE AVG(rt0.c3)  WHEN TRIM(DISTINCT vt0.lid) THEN ((COUNT(*))<=(COUNT(*))) END) ISNULL);
SELECT rt0.c4, rt0.c0, vt0.c2 FROM rt0, v0, vt0 GROUP BY rt0.c4, rt0.c0, vt0.c2;
SELECT rt0.c4, rt0.c0, vt0.c2 FROM rt0 NOT INDEXED, v0, vt0 GROUP BY rt0.c4, rt0.c0, vt0.c2 HAVING CASE AVG(rt0.c3)  WHEN TRIM(DISTINCT vt0.lid) THEN ((COUNT(*))<=(COUNT(*))) END UNION ALL SELECT ALL rt0.c4, rt0.c0, vt0.c2 FROM rt0, v0, vt0 GROUP BY rt0.c4, rt0.c0, vt0.c2 HAVING (NOT (CASE AVG(rt0.c3)  WHEN TRIM(DISTINCT vt0.lid) THEN ((COUNT(*))<=(COUNT(*))) END)) UNION ALL SELECT ALL rt0.c4, rt0.c0, vt0.c2 FROM rt0, v0, vt0 GROUP BY rt0.c4, rt0.c0, vt0.c2 HAVING ((CASE AVG(rt0.c3)  WHEN TRIM(DISTINCT vt0.lid) THEN ((COUNT(*))<=(COUNT(*))) END) ISNULL);
SELECT rt0.c4, rt0.c0, vt0.c2 FROM rt0, v0, vt0 GROUP BY rt0.c4, rt0.c0, vt0.c2;
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE ((((+ (v0.c0))) IS TRUE)) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((+ (v0.c0))) IS TRUE)))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((((((+ (v0.c0))) IS TRUE)) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT rt0.c4, v0.c0 FROM rt0, v0, vt0;
SELECT DISTINCT rt0.c4, v0.c0 FROM rt0, v0, vt0 WHERE (((LIKELY(rt0.c2)) NOT NULL)) UNION SELECT DISTINCT rt0.c4, v0.c0 FROM rt0, v0, vt0 WHERE ((NOT (((LIKELY(rt0.c2)) NOT NULL)))) UNION SELECT DISTINCT rt0.c4, v0.c0 FROM rt0, v0, vt0 WHERE (((((LIKELY(rt0.c2)) NOT NULL)) ISNULL));
SELECT DISTINCT rt0.c4, v0.c0 FROM rt0, v0, vt0;
SELECT rt0.c4, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c4, rt0.c0, rt0.c2;
SELECT rt0.c4, rt0.c0, rt0.c2 FROM v0, rt0 WHERE ((+ ((NOT (rt0.c0))))) GROUP BY rt0.c4, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c4, rt0.c0, rt0.c2 FROM v0, rt0 WHERE ((NOT ((+ ((NOT (rt0.c0))))))) GROUP BY rt0.c4, rt0.c0, rt0.c2 UNION SELECT rt0.c4, rt0.c0, rt0.c2 FROM v0, rt0 WHERE ((((+ ((NOT (rt0.c0))))) ISNULL)) GROUP BY rt0.c4, rt0.c0, rt0.c2;
SELECT rt0.c4, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c4, rt0.c0, rt0.c2;
SELECT rt0.c1, v0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c1, v0.c0;
SELECT ALL rt0.c1, v0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c1, v0.c0 HAVING SUM(MIN(vt0.c0)) UNION ALL SELECT ALL rt0.c1, v0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c1, v0.c0 HAVING (NOT (SUM(MIN(vt0.c0)))) UNION ALL SELECT rt0.c1, v0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c1, v0.c0 HAVING ((SUM(MIN(vt0.c0))) ISNULL);
SELECT vt0.c0, vt0.c2, vt0.lid, rt0.c2, rt0.c0, rt0.c1, vt0.c1, rt0.c3 FROM rt0, vt0;
SELECT vt0.c0, vt0.c2, vt0.lid, rt0.c2, rt0.c0, rt0.c1, vt0.c1, rt0.c3 FROM rt0, vt0 WHERE (CAST(((rt0.c0) NOT BETWEEN (rt0.c3) AND (vt0.c1)) AS NUMERIC)) UNION ALL SELECT vt0.c0, vt0.c2, vt0.lid, rt0.c2, rt0.c0, rt0.c1, vt0.c1, rt0.c3 FROM rt0, vt0 WHERE ((NOT (CAST(((rt0.c0) NOT BETWEEN (rt0.c3) AND (vt0.c1)) AS NUMERIC)))) UNION ALL SELECT vt0.c0, vt0.c2, vt0.lid, rt0.c2, rt0.c0, rt0.c1, vt0.c1, rt0.c3 FROM rt0, vt0 WHERE (((CAST(((rt0.c0) NOT BETWEEN (rt0.c3) AND (vt0.c1)) AS NUMERIC)) ISNULL));
SELECT vt0.c0, vt0.c2, vt0.lid, rt0.c2, rt0.c0, rt0.c1, vt0.c1, rt0.c3 FROM rt0, vt0;
SELECT DISTINCT rt0.c0, vt0.lid, v0.c0, rt0.c3 FROM vt0, v0, rt0;
SELECT DISTINCT rt0.c0, vt0.lid, v0.c0, rt0.c3 FROM vt0, v0, rt0 WHERE (CASE UNLIKELY(DISTINCT rt0.c2)  WHEN vt0.c0 THEN ((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3)) ELSE (((vt0.c2)) NOT BETWEEN ((vt0.lid)) AND ((vt0.c1))) END) UNION SELECT DISTINCT rt0.c0, vt0.lid, v0.c0, rt0.c3 FROM vt0, v0, rt0 WHERE ((NOT (CASE UNLIKELY(DISTINCT rt0.c2)  WHEN vt0.c0 THEN ((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3)) ELSE (((vt0.c2)) NOT BETWEEN ((vt0.lid)) AND ((vt0.c1))) END))) UNION SELECT DISTINCT rt0.c0, vt0.lid, v0.c0, rt0.c3 FROM vt0, v0, rt0 WHERE (((CASE UNLIKELY(DISTINCT rt0.c2)  WHEN vt0.c0 THEN ((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3)) ELSE (((vt0.c2)) NOT BETWEEN ((vt0.lid)) AND ((vt0.c1))) END) ISNULL));
SELECT DISTINCT rt0.c0, vt0.lid, v0.c0, rt0.c3 FROM vt0, v0, rt0;
SELECT ALL vt0.lid, vt0.c1, vt0.c2, rt0.c2, rt0.c4 FROM vt0, v0, rt0 GROUP BY vt0.lid, vt0.c1, vt0.c2, rt0.c2, rt0.c4;
SELECT vt0.lid, vt0.c1, vt0.c2, rt0.c2, rt0.c4 FROM vt0, v0, rt0 WHERE (((v0.c0 COLLATE RTRIM) NOT BETWEEN (CASE rt0.c4  WHEN rt0.c4 THEN vt0.c0 END) AND (vt0.c2))) GROUP BY vt0.lid, vt0.c1, vt0.c2, rt0.c2, rt0.c4 UNION SELECT vt0.lid, vt0.c1, vt0.c2, rt0.c2, rt0.c4 FROM vt0, v0, rt0 WHERE ((NOT (((v0.c0 COLLATE RTRIM) NOT BETWEEN (CASE rt0.c4  WHEN rt0.c4 THEN vt0.c0 END) AND (vt0.c2))))) GROUP BY vt0.lid, vt0.c1, vt0.c2, rt0.c2, rt0.c4 UNION SELECT vt0.lid, vt0.c1, vt0.c2, rt0.c2, rt0.c4 FROM vt0, v0, rt0 WHERE (((((v0.c0 COLLATE RTRIM) NOT BETWEEN (CASE rt0.c4  WHEN rt0.c4 THEN vt0.c0 END) AND (vt0.c2))) ISNULL)) GROUP BY vt0.lid, vt0.c1, vt0.c2, rt0.c2, rt0.c4;
SELECT ALL vt0.lid, vt0.c1, vt0.c2, rt0.c2, rt0.c4 FROM vt0, v0, rt0 GROUP BY vt0.lid, vt0.c1, vt0.c2, rt0.c2, rt0.c4;
SELECT vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c0;
SELECT ALL vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c0;
SELECT ALL vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c0;
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt0 ON LIKELY(((rt0.c1)<=(rt0.c3)));
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt0 ON LIKELY(((rt0.c1)<=(rt0.c3))) WHERE (((0.6098090834740989)-(CASE WHEN v0.c0 THEN rt0.c1 WHEN rt0.c2 THEN '758397378' WHEN rt0.c4 THEN rt0.c0 END))) UNION ALL SELECT ALL * FROM v0 RIGHT OUTER JOIN rt0 ON LIKELY(((rt0.c1)<=(rt0.c3))) WHERE ((NOT (((0.6098090834740989)-(CASE WHEN v0.c0 THEN rt0.c1 WHEN rt0.c2 THEN '758397378' WHEN rt0.c4 THEN rt0.c0 END))))) UNION ALL SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON LIKELY(((rt0.c1)<=(rt0.c3))) WHERE (((((0.6098090834740989)-(CASE WHEN v0.c0 THEN rt0.c1 WHEN rt0.c2 THEN '758397378' WHEN rt0.c4 THEN rt0.c0 END))) ISNULL));
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt0 ON LIKELY(((rt0.c1)<=(rt0.c3)));
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) COLLATE RTRIM) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) COLLATE RTRIM))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) COLLATE RTRIM) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL rt0.c0, v0.c0 FROM rt0, v0, vt0 GROUP BY rt0.c0, v0.c0;
SELECT ALL rt0.c0, v0.c0 FROM rt0, v0, vt0 WHERE (((vt0.lid) ISNULL)) GROUP BY rt0.c0, v0.c0 UNION SELECT rt0.c0, v0.c0 FROM rt0, v0, vt0 WHERE ((NOT (((vt0.lid) ISNULL)))) GROUP BY rt0.c0, v0.c0 UNION SELECT ALL rt0.c0, v0.c0 FROM rt0, v0, vt0 WHERE (((((vt0.lid) ISNULL)) ISNULL)) GROUP BY rt0.c0, v0.c0;
SELECT ALL rt0.c0, v0.c0 FROM rt0, v0, vt0 GROUP BY rt0.c0, v0.c0;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING x'7ae1' UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (x'7ae1')) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((x'7ae1') ISNULL);
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING x'7ae1' UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (x'7ae1')) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((x'7ae1') ISNULL);
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c0, vt0.c2, rt0.c3, rt0.c4, vt0.lid, rt0.c1, rt0.c2, v0.c0, vt0.c1, vt0.c0 FROM v0, vt0, rt0;
SELECT ALL rt0.c0, vt0.c2, rt0.c3, rt0.c4, vt0.lid, rt0.c1, rt0.c2, v0.c0, vt0.c1, vt0.c0 FROM v0, vt0, rt0 WHERE (CAST(((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c1)) AS REAL)) UNION ALL SELECT ALL rt0.c0, vt0.c2, rt0.c3, rt0.c4, vt0.lid, rt0.c1, rt0.c2, v0.c0, vt0.c1, vt0.c0 FROM v0, vt0, rt0 WHERE ((NOT (CAST(((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c1)) AS REAL)))) UNION ALL SELECT rt0.c0, vt0.c2, rt0.c3, rt0.c4, vt0.lid, rt0.c1, rt0.c2, v0.c0, vt0.c1, vt0.c0 FROM v0, vt0, rt0 WHERE (((CAST(((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c1)) AS REAL)) ISNULL));
SELECT rt0.c0, vt0.c2, rt0.c3, rt0.c4, vt0.lid, rt0.c1, rt0.c2, v0.c0, vt0.c1, vt0.c0 FROM v0, vt0, rt0;
SELECT DISTINCT * FROM rt0, vt0, v0;
SELECT DISTINCT * FROM rt0, vt0, v0 WHERE ((((CAST(rt0.c2 AS NUMERIC)))<=((((vt0.c2) BETWEEN ('') AND (x'')))))) UNION SELECT DISTINCT * FROM rt0, vt0, v0 WHERE ((NOT ((((CAST(rt0.c2 AS NUMERIC)))<=((((vt0.c2) BETWEEN ('') AND (x'')))))))) UNION SELECT DISTINCT * FROM rt0, vt0, v0 WHERE ((((((CAST(rt0.c2 AS NUMERIC)))<=((((vt0.c2) BETWEEN ('') AND (x'')))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0, v0;
SELECT vt0.lid, rt0.c1, rt0.c4 FROM vt0, rt0 GROUP BY vt0.lid, rt0.c1, rt0.c4;
SELECT ALL vt0.lid, rt0.c1, rt0.c4 FROM vt0, rt0 WHERE (rt0.c0) GROUP BY vt0.lid, rt0.c1, rt0.c4 UNION SELECT ALL vt0.lid, rt0.c1, rt0.c4 FROM vt0, rt0 WHERE ((NOT (rt0.c0))) GROUP BY vt0.lid, rt0.c1, rt0.c4 UNION SELECT ALL vt0.lid, rt0.c1, rt0.c4 FROM vt0, rt0 WHERE (((rt0.c0) ISNULL)) GROUP BY vt0.lid, rt0.c1, rt0.c4;
SELECT vt0.lid, rt0.c1, rt0.c4 FROM vt0, rt0 GROUP BY vt0.lid, rt0.c1, rt0.c4;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING SUM((v0.c0 IN ())) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (SUM((v0.c0 IN ())))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((SUM((v0.c0 IN ()))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING SUM((v0.c0 IN ())) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (SUM((v0.c0 IN ())))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((SUM((v0.c0 IN ()))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT TOTAL(((((((vt0.c2)AND(x'7b33')))AND(rt0.c2)))/(vt0.c1 COLLATE RTRIM))) FROM vt0, rt0, v0 ORDER BY CASE WHEN x'3639' THEN CAST(NULL AS TEXT) END ASC  NULLS FIRST;
SELECT * FROM v0 CROSS JOIN rt0 ON x'';
SELECT ALL * FROM v0 CROSS JOIN rt0 ON x'' WHERE ((((((rt0.c2)OR(rt0.c3)))OR(rt0.c1)) IN (LIKELY(rt0.c3), 'I'))) UNION ALL SELECT * FROM v0 CROSS JOIN rt0 ON x'' WHERE ((NOT ((((((rt0.c2)OR(rt0.c3)))OR(rt0.c1)) IN (LIKELY(rt0.c3), 'I'))))) UNION ALL SELECT * FROM v0 CROSS JOIN rt0 ON x'' WHERE ((((((((rt0.c2)OR(rt0.c3)))OR(rt0.c1)) IN (LIKELY(rt0.c3), 'I'))) ISNULL));
SELECT * FROM v0 CROSS JOIN rt0 ON x'';
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ((((rt0.c2 IN ())) NOT NULL)) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c2 IN ())) NOT NULL)))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ((((((rt0.c2 IN ())) NOT NULL)) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT vt0.c1, vt0.c2, v0.c0 FROM vt0, v0 GROUP BY vt0.c1, vt0.c2, v0.c0;
SELECT ALL vt0.c1, vt0.c2, v0.c0 FROM vt0, v0 WHERE (CASE CASE WHEN v0.c0 THEN vt0.lid WHEN vt0.c2 THEN v0.c0 WHEN 'GgjQw+k' THEN v0.c0 WHEN v0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c2 END  WHEN ((vt0.lid)LIKE(NULL)) THEN (+ (vt0.lid)) END) GROUP BY vt0.c1, vt0.c2, v0.c0 UNION SELECT vt0.c1, vt0.c2, v0.c0 FROM vt0, v0 WHERE ((NOT (CASE CASE WHEN v0.c0 THEN vt0.lid WHEN vt0.c2 THEN v0.c0 WHEN 'GgjQw+k' THEN v0.c0 WHEN v0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c2 END  WHEN ((vt0.lid)LIKE(NULL)) THEN (+ (vt0.lid)) END))) GROUP BY vt0.c1, vt0.c2, v0.c0 UNION SELECT ALL vt0.c1, vt0.c2, v0.c0 FROM vt0, v0 WHERE (((CASE CASE WHEN v0.c0 THEN vt0.lid WHEN vt0.c2 THEN v0.c0 WHEN 'GgjQw+k' THEN v0.c0 WHEN v0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c2 END  WHEN ((vt0.lid)LIKE(NULL)) THEN (+ (vt0.lid)) END) ISNULL)) GROUP BY vt0.c1, vt0.c2, v0.c0;
SELECT vt0.c1, vt0.c2, v0.c0 FROM vt0, v0 GROUP BY vt0.c1, vt0.c2, v0.c0;
SELECT rt0.c0, rt0.c4 FROM rt0, v0 GROUP BY rt0.c0, rt0.c4;
SELECT ALL rt0.c0, rt0.c4 FROM rt0, v0 GROUP BY rt0.c0, rt0.c4 HAVING rt0.c0 UNION ALL SELECT ALL rt0.c0, rt0.c4 FROM rt0, v0 GROUP BY rt0.c0, rt0.c4 HAVING (NOT (rt0.c0)) UNION ALL SELECT ALL rt0.c0, rt0.c4 FROM rt0, v0 GROUP BY rt0.c0, rt0.c4 HAVING ((rt0.c0) ISNULL);
SELECT rt0.c0, rt0.c4 FROM rt0, v0 GROUP BY rt0.c0, rt0.c4;
SELECT ALL rt0.c0, rt0.c4 FROM rt0, v0 GROUP BY rt0.c0, rt0.c4 HAVING rt0.c0 UNION ALL SELECT ALL rt0.c0, rt0.c4 FROM rt0, v0 GROUP BY rt0.c0, rt0.c4 HAVING (NOT (rt0.c0)) UNION ALL SELECT ALL rt0.c0, rt0.c4 FROM rt0, v0 GROUP BY rt0.c0, rt0.c4 HAVING ((rt0.c0) ISNULL);
SELECT rt0.c0, rt0.c4 FROM rt0, v0 GROUP BY rt0.c0, rt0.c4;
SELECT vt0.lid, vt0.c0, v0.c0, vt0.c2, vt0.c1 FROM vt0, v0;
SELECT ALL vt0.lid, vt0.c0, v0.c0, vt0.c2, vt0.c1 FROM vt0, v0 WHERE (CAST(vt0.c2 COLLATE NOCASE AS TEXT)) UNION ALL SELECT ALL vt0.lid, vt0.c0, v0.c0, vt0.c2, vt0.c1 FROM vt0, v0 WHERE ((NOT (CAST(vt0.c2 COLLATE NOCASE AS TEXT)))) UNION ALL SELECT ALL vt0.lid, vt0.c0, v0.c0, vt0.c2, vt0.c1 FROM vt0, v0 WHERE (((CAST(vt0.c2 COLLATE NOCASE AS TEXT)) ISNULL));
SELECT vt0.lid, vt0.c0, v0.c0, vt0.c2, vt0.c1 FROM vt0, v0;
SELECT DISTINCT vt0.c2, rt0.c1, rt0.c0, v0.c0, rt0.c3 FROM vt0 FULL OUTER JOIN v0 ON CAST(((vt0.c0)<<(rt0.c1)) AS BLOB) CROSS JOIN rt0 ON (CASE v0.c0  WHEN vt0.lid THEN vt0.c2 WHEN 0.7008033343046403 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c4 WHEN vt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN x'3f47' ELSE rt0.c0 END IN ());
SELECT DISTINCT vt0.c2, rt0.c1, rt0.c0, v0.c0, rt0.c3 FROM vt0 FULL OUTER JOIN v0 ON CAST(((vt0.c0)<<(rt0.c1)) AS BLOB) CROSS JOIN rt0 ON (CASE v0.c0  WHEN vt0.lid THEN vt0.c2 WHEN 0.7008033343046403 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c4 WHEN vt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN x'3f47' ELSE rt0.c0 END IN ()) WHERE (MAX(CASE WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c2 END, ((rt0.c3) NOTNULL))) UNION SELECT DISTINCT vt0.c2, rt0.c1, rt0.c0, v0.c0, rt0.c3 FROM vt0 FULL OUTER JOIN v0 ON CAST(((vt0.c0)<<(rt0.c1)) AS BLOB) CROSS JOIN rt0 ON (CASE v0.c0  WHEN vt0.lid THEN vt0.c2 WHEN 0.7008033343046403 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c4 WHEN vt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN x'3f47' ELSE rt0.c0 END IN ()) WHERE ((NOT (MAX(CASE WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c2 END, ((rt0.c3) NOTNULL))))) UNION SELECT DISTINCT vt0.c2, rt0.c1, rt0.c0, v0.c0, rt0.c3 FROM vt0 FULL OUTER JOIN v0 ON CAST(((vt0.c0)<<(rt0.c1)) AS BLOB) CROSS JOIN rt0 ON (CASE v0.c0  WHEN vt0.lid THEN vt0.c2 WHEN 0.7008033343046403 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c4 WHEN vt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN x'3f47' ELSE rt0.c0 END IN ()) WHERE (((MAX(CASE WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c2 END, ((rt0.c3) NOTNULL))) ISNULL));
SELECT DISTINCT vt0.c2, rt0.c1, rt0.c0, v0.c0, rt0.c3 FROM vt0 FULL OUTER JOIN v0 ON CAST(((vt0.c0)<<(rt0.c1)) AS BLOB) CROSS JOIN rt0 ON (CASE v0.c0  WHEN vt0.lid THEN vt0.c2 WHEN 0.7008033343046403 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c4 WHEN vt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN x'3f47' ELSE rt0.c0 END IN ());
SELECT ALL vt0.c0, vt0.c2, v0.c0, vt0.lid FROM v0, vt0 GROUP BY vt0.c0, vt0.c2, v0.c0, vt0.lid;
SELECT ALL vt0.c0, vt0.c2, v0.c0, vt0.lid FROM v0, vt0 WHERE (CAST((v0.c0 IN ()) AS NUMERIC)) GROUP BY vt0.c0, vt0.c2, v0.c0, vt0.lid UNION SELECT ALL vt0.c0, vt0.c2, v0.c0, vt0.lid FROM v0, vt0 WHERE ((NOT (CAST((v0.c0 IN ()) AS NUMERIC)))) GROUP BY vt0.c0, vt0.c2, v0.c0, vt0.lid UNION SELECT vt0.c0, vt0.c2, v0.c0, vt0.lid FROM v0, vt0 WHERE (((CAST((v0.c0 IN ()) AS NUMERIC)) ISNULL)) GROUP BY vt0.c0, vt0.c2, v0.c0, vt0.lid;
SELECT ALL vt0.c0, vt0.c2, v0.c0, vt0.lid FROM v0, vt0 GROUP BY vt0.c0, vt0.c2, v0.c0, vt0.lid;
SELECT rt0.c1 FROM v0, rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM v0, rt0 GROUP BY rt0.c1 HAVING CASE WHEN GROUP_CONCAT(rt0.c4) THEN (((rt0.c3))<((rt0.c2))) ELSE SUM(rt0.c1) END UNION ALL SELECT ALL rt0.c1 FROM v0, rt0 GROUP BY rt0.c1 HAVING (NOT (CASE WHEN GROUP_CONCAT(rt0.c4) THEN (((rt0.c3))<((rt0.c2))) ELSE SUM(rt0.c1) END)) UNION ALL SELECT rt0.c1 FROM v0, rt0 GROUP BY rt0.c1 HAVING ((CASE WHEN GROUP_CONCAT(rt0.c4) THEN (((rt0.c3))<((rt0.c2))) ELSE SUM(rt0.c1) END) ISNULL);
SELECT rt0.c1 FROM v0, rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM v0, rt0 GROUP BY rt0.c1 HAVING CASE WHEN GROUP_CONCAT(rt0.c4) THEN (((rt0.c3))<((rt0.c2))) ELSE SUM(rt0.c1) END UNION ALL SELECT ALL rt0.c1 FROM v0, rt0 GROUP BY rt0.c1 HAVING (NOT (CASE WHEN GROUP_CONCAT(rt0.c4) THEN (((rt0.c3))<((rt0.c2))) ELSE SUM(rt0.c1) END)) UNION ALL SELECT rt0.c1 FROM v0, rt0 GROUP BY rt0.c1 HAVING ((CASE WHEN GROUP_CONCAT(rt0.c4) THEN (((rt0.c3))<((rt0.c2))) ELSE SUM(rt0.c1) END) ISNULL);
SELECT rt0.c1 FROM v0, rt0 GROUP BY rt0.c1;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE ((((- (rt0.c3))) NOT BETWEEN ((((rt0.c1))<=((rt0.c0)))) AND (LIKELIHOOD(rt0.c0, 0.05842202041783284)))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((- (rt0.c3))) NOT BETWEEN ((((rt0.c1))<=((rt0.c0)))) AND (LIKELIHOOD(rt0.c0, 0.05842202041783284)))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((((- (rt0.c3))) NOT BETWEEN ((((rt0.c1))<=((rt0.c0)))) AND (LIKELIHOOD(rt0.c0, 0.05842202041783284)))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT vt0.lid, v0.c0, vt0.c1, vt0.c0, vt0.c2 FROM v0, vt0;
SELECT DISTINCT vt0.lid, v0.c0, vt0.c1, vt0.c0, vt0.c2 FROM v0, vt0 WHERE (((vt0.c1 COLLATE RTRIM)>(((vt0.lid) BETWEEN (NULL) AND ('-878002353'))))) UNION SELECT DISTINCT vt0.lid, v0.c0, vt0.c1, vt0.c0, vt0.c2 FROM v0, vt0 WHERE ((NOT (((vt0.c1 COLLATE RTRIM)>(((vt0.lid) BETWEEN (NULL) AND ('-878002353'))))))) UNION SELECT DISTINCT vt0.lid, v0.c0, vt0.c1, vt0.c0, vt0.c2 FROM v0, vt0 WHERE (((((vt0.c1 COLLATE RTRIM)>(((vt0.lid) BETWEEN (NULL) AND ('-878002353'))))) ISNULL));
SELECT DISTINCT vt0.lid, v0.c0, vt0.c1, vt0.c0, vt0.c2 FROM v0, vt0;
SELECT rt0.c2, rt0.c1, rt0.c4, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c4, rt0.c3, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c4, rt0.c3, rt0.c0 FROM rt0 WHERE (((HEX(DISTINCT rt0.c4)) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c4, rt0.c3, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c4, rt0.c3, rt0.c0 FROM rt0 WHERE ((NOT (((HEX(DISTINCT rt0.c4)) ISNULL)))) GROUP BY rt0.c2, rt0.c1, rt0.c4, rt0.c3, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c4, rt0.c3, rt0.c0 FROM rt0 WHERE (((((HEX(DISTINCT rt0.c4)) ISNULL)) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c4, rt0.c3, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c4, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c4, rt0.c3, rt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING '0Z' COLLATE RTRIM UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ('0Z' COLLATE RTRIM)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (('0Z' COLLATE RTRIM) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING '0Z' COLLATE RTRIM UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ('0Z' COLLATE RTRIM)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (('0Z' COLLATE RTRIM) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((NOT ((~ (rt0.c3))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((NOT ((~ (rt0.c3))))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((NOT ((~ (rt0.c3))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((- (((v0.c0)IS NOT(v0.c0))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((- (((v0.c0)IS NOT(v0.c0))))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((- (((v0.c0)IS NOT(v0.c0))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 WHERE (((vt0.c0)>((((vt0.c1, vt0.c2, vt0.c1)) BETWEEN ((vt0.lid, vt0.c0, x'')) AND ((vt0.c0, vt0.c1, vt0.c1)))))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE ((NOT (((vt0.c0)>((((vt0.c1, vt0.c2, vt0.c1)) BETWEEN ((vt0.lid, vt0.c0, x'')) AND ((vt0.c0, vt0.c1, vt0.c1)))))))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE (((((vt0.c0)>((((vt0.c1, vt0.c2, vt0.c1)) BETWEEN ((vt0.lid, vt0.c0, x'')) AND ((vt0.c0, vt0.c1, vt0.c1)))))) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL v0.c0, rt0.c2 FROM vt0, rt0, v0 GROUP BY v0.c0, rt0.c2;
SELECT ALL v0.c0, rt0.c2 FROM vt0, rt0, v0 GROUP BY v0.c0, rt0.c2 HAVING GROUP_CONCAT(rt0.c4) UNION ALL SELECT ALL v0.c0, rt0.c2 FROM vt0, rt0, v0 GROUP BY v0.c0, rt0.c2 HAVING (NOT (GROUP_CONCAT(rt0.c4))) UNION ALL SELECT ALL v0.c0, rt0.c2 FROM vt0, rt0, v0 GROUP BY v0.c0, rt0.c2 HAVING ((GROUP_CONCAT(rt0.c4)) ISNULL);
SELECT ALL v0.c0, rt0.c2 FROM vt0, rt0, v0 GROUP BY v0.c0, rt0.c2;
SELECT ALL v0.c0, rt0.c2 FROM vt0, rt0, v0 GROUP BY v0.c0, rt0.c2 HAVING GROUP_CONCAT(rt0.c4) UNION ALL SELECT ALL v0.c0, rt0.c2 FROM vt0, rt0, v0 GROUP BY v0.c0, rt0.c2 HAVING (NOT (GROUP_CONCAT(rt0.c4))) UNION ALL SELECT ALL v0.c0, rt0.c2 FROM vt0, rt0, v0 GROUP BY v0.c0, rt0.c2 HAVING ((GROUP_CONCAT(rt0.c4)) ISNULL);
SELECT ALL v0.c0, rt0.c2 FROM vt0, rt0, v0 GROUP BY v0.c0, rt0.c2;
SELECT ALL rt0.c3, vt0.c1, rt0.c2, vt0.c0, vt0.c2, vt0.lid, rt0.c0, v0.c0, rt0.c4, rt0.c1 FROM v0, rt0, vt0;
SELECT ALL rt0.c3, vt0.c1, rt0.c2, vt0.c0, vt0.c2, vt0.lid, rt0.c0, v0.c0, rt0.c4, rt0.c1 FROM v0, rt0, vt0 WHERE ((((CASE v0.c0  WHEN v0.c0 THEN vt0.c0 ELSE rt0.c0 END, ((NULL) ISNULL), '796470545'))>=((((((rt0.c0)AND(rt0.c1)))OR(rt0.c3)), '820770053' COLLATE NOCASE, ((vt0.c2) IS FALSE))))) UNION ALL SELECT rt0.c3, vt0.c1, rt0.c2, vt0.c0, vt0.c2, vt0.lid, rt0.c0, v0.c0, rt0.c4, rt0.c1 FROM v0, rt0, vt0 WHERE ((NOT ((((CASE v0.c0  WHEN v0.c0 THEN vt0.c0 ELSE rt0.c0 END, ((NULL) ISNULL), '796470545'))>=((((((rt0.c0)AND(rt0.c1)))OR(rt0.c3)), '820770053' COLLATE NOCASE, ((vt0.c2) IS FALSE))))))) UNION ALL SELECT rt0.c3, vt0.c1, rt0.c2, vt0.c0, vt0.c2, vt0.lid, rt0.c0, v0.c0, rt0.c4, rt0.c1 FROM v0, rt0, vt0 WHERE ((((((CASE v0.c0  WHEN v0.c0 THEN vt0.c0 ELSE rt0.c0 END, ((NULL) ISNULL), '796470545'))>=((((((rt0.c0)AND(rt0.c1)))OR(rt0.c3)), '820770053' COLLATE NOCASE, ((vt0.c2) IS FALSE))))) ISNULL));
SELECT ALL rt0.c3, vt0.c1, rt0.c2, vt0.c0, vt0.c2, vt0.lid, rt0.c0, v0.c0, rt0.c4, rt0.c1 FROM v0, rt0, vt0;
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE (CAST(((((vt0.c0)OR(v0.c0)))OR(vt0.c0)) AS BLOB)) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT (CAST(((((vt0.c0)OR(v0.c0)))OR(vt0.c0)) AS BLOB)))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE (((CAST(((((vt0.c0)OR(v0.c0)))OR(vt0.c0)) AS BLOB)) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT rt0.c0, rt0.c4, rt0.c1, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c4, rt0.c1, vt0.c1;
SELECT rt0.c0, rt0.c4, rt0.c1, vt0.c1 FROM rt0, vt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.lid))) NOTNULL)) GROUP BY rt0.c0, rt0.c4, rt0.c1, vt0.c1 UNION SELECT rt0.c0, rt0.c4, rt0.c1, vt0.c1 FROM rt0, vt0 WHERE ((NOT (((((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.lid))) NOTNULL)))) GROUP BY rt0.c0, rt0.c4, rt0.c1, vt0.c1 UNION SELECT ALL rt0.c0, rt0.c4, rt0.c1, vt0.c1 FROM rt0, vt0 WHERE (((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.lid))) NOTNULL)) ISNULL)) GROUP BY rt0.c0, rt0.c4, rt0.c1, vt0.c1;
SELECT rt0.c0, rt0.c4, rt0.c1, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c4, rt0.c1, vt0.c1;
SELECT ALL rt0.c2, rt0.c4, rt0.c3, rt0.c1, rt0.c0, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c4, rt0.c3, rt0.c1, rt0.c0, v0.c0;
SELECT ALL rt0.c2, rt0.c4, rt0.c3, rt0.c1, rt0.c0, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c4, rt0.c3, rt0.c1, rt0.c0, v0.c0 HAVING CHANGES() COLLATE NOCASE UNION ALL SELECT rt0.c2, rt0.c4, rt0.c3, rt0.c1, rt0.c0, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c4, rt0.c3, rt0.c1, rt0.c0, v0.c0 HAVING (NOT (CHANGES() COLLATE NOCASE)) UNION ALL SELECT ALL rt0.c2, rt0.c4, rt0.c3, rt0.c1, rt0.c0, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c4, rt0.c3, rt0.c1, rt0.c0, v0.c0 HAVING ((CHANGES() COLLATE NOCASE) ISNULL);
SELECT ALL rt0.c2, rt0.c4, rt0.c3, rt0.c1, rt0.c0, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c4, rt0.c3, rt0.c1, rt0.c0, v0.c0;
SELECT ALL rt0.c2, rt0.c4, rt0.c3, rt0.c1, rt0.c0, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c4, rt0.c3, rt0.c1, rt0.c0, v0.c0 HAVING CHANGES() COLLATE NOCASE UNION ALL SELECT rt0.c2, rt0.c4, rt0.c3, rt0.c1, rt0.c0, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c4, rt0.c3, rt0.c1, rt0.c0, v0.c0 HAVING (NOT (CHANGES() COLLATE NOCASE)) UNION ALL SELECT ALL rt0.c2, rt0.c4, rt0.c3, rt0.c1, rt0.c0, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c4, rt0.c3, rt0.c1, rt0.c0, v0.c0 HAVING ((CHANGES() COLLATE NOCASE) ISNULL);
SELECT ALL rt0.c2, rt0.c4, rt0.c3, rt0.c1, rt0.c0, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c4, rt0.c3, rt0.c1, rt0.c0, v0.c0;
SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt0.c1, v0.c0, rt0.c4, vt0.c0, vt0.lid, vt0.c1 FROM rt0 INNER JOIN v0 ON ((((rt0.c4)<(rt0.c4)))<=(CAST(v0.c0 AS REAL))) CROSS JOIN vt0 ON (((v0.c0, rt0.c1, rt0.c3, rt0.c1, v0.c0)) NOT BETWEEN ((NULL, ((((rt0.c0)AND(vt0.lid)))OR(vt0.c2)), ((vt0.c2)|(vt0.c1)), ((((vt0.c2)AND(rt0.c3)))OR(rt0.c3)), ((vt0.lid)AND(v0.c0)))) AND (((((('0.007451646386443578')AND(rt0.c2)))AND(vt0.c2)), rt0.c3, '-1360869971', rt0.c0 COLLATE RTRIM, (((rt0.c3, vt0.c2, v0.c0))<>((-1714259499, rt0.c3, NULL))))));
SELECT rt0.c3, rt0.c2, rt0.c0, rt0.c1, v0.c0, rt0.c4, vt0.c0, vt0.lid, vt0.c1 FROM rt0 INNER JOIN v0 ON ((((rt0.c4)<(rt0.c4)))<=(CAST(v0.c0 AS REAL))) CROSS JOIN vt0 ON (((v0.c0, rt0.c1, rt0.c3, rt0.c1, v0.c0)) NOT BETWEEN ((NULL, ((((rt0.c0)AND(vt0.lid)))OR(vt0.c2)), ((vt0.c2)|(vt0.c1)), ((((vt0.c2)AND(rt0.c3)))OR(rt0.c3)), ((vt0.lid)AND(v0.c0)))) AND (((((('0.007451646386443578')AND(rt0.c2)))AND(vt0.c2)), rt0.c3, '-1360869971', rt0.c0 COLLATE RTRIM, (((rt0.c3, vt0.c2, v0.c0))!=((-1714259499, rt0.c3, NULL)))))) WHERE ((NOT (CAST(rt0.c1 AS REAL)))) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt0.c1, v0.c0, rt0.c4, vt0.c0, vt0.lid, vt0.c1 FROM rt0 INNER JOIN v0 ON ((((rt0.c4)<(rt0.c4)))<=(CAST(v0.c0 AS REAL))) CROSS JOIN vt0 ON (((v0.c0, rt0.c1, rt0.c3, rt0.c1, v0.c0)) NOT BETWEEN ((NULL, ((((rt0.c0)AND(vt0.lid)))OR(vt0.c2)), ((vt0.c2)|(vt0.c1)), ((((vt0.c2)AND(rt0.c3)))OR(rt0.c3)), ((vt0.lid)AND(v0.c0)))) AND (((((('0.007451646386443578')AND(rt0.c2)))AND(vt0.c2)), rt0.c3, '-1360869971', rt0.c0 COLLATE RTRIM, (((rt0.c3, vt0.c2, v0.c0))!=((-1714259499, rt0.c3, NULL)))))) WHERE ((NOT ((NOT (CAST(rt0.c1 AS REAL)))))) UNION ALL SELECT rt0.c3, rt0.c2, rt0.c0, rt0.c1, v0.c0, rt0.c4, vt0.c0, vt0.lid, vt0.c1 FROM rt0 INNER JOIN v0 ON ((((rt0.c4)<(rt0.c4)))<=(CAST(v0.c0 AS REAL))) CROSS JOIN vt0 ON (((v0.c0, rt0.c1, rt0.c3, rt0.c1, v0.c0)) NOT BETWEEN ((NULL, ((((rt0.c0)AND(vt0.lid)))OR(vt0.c2)), ((vt0.c2)|(vt0.c1)), ((((vt0.c2)AND(rt0.c3)))OR(rt0.c3)), ((vt0.lid)AND(v0.c0)))) AND (((((('0.007451646386443578')AND(rt0.c2)))AND(vt0.c2)), rt0.c3, '-1360869971', rt0.c0 COLLATE RTRIM, (((rt0.c3, vt0.c2, v0.c0))<>((-1714259499, rt0.c3, NULL)))))) WHERE ((((NOT (CAST(rt0.c1 AS REAL)))) ISNULL));
SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt0.c1, v0.c0, rt0.c4, vt0.c0, vt0.lid, vt0.c1 FROM rt0 INNER JOIN v0 ON ((((rt0.c4)<(rt0.c4)))<=(CAST(v0.c0 AS REAL))) CROSS JOIN vt0 ON (((v0.c0, rt0.c1, rt0.c3, rt0.c1, v0.c0)) NOT BETWEEN ((NULL, ((((rt0.c0)AND(vt0.lid)))OR(vt0.c2)), ((vt0.c2)|(vt0.c1)), ((((vt0.c2)AND(rt0.c3)))OR(rt0.c3)), ((vt0.lid)AND(v0.c0)))) AND (((((('0.007451646386443578')AND(rt0.c2)))AND(vt0.c2)), rt0.c3, '-1360869971', rt0.c0 COLLATE RTRIM, (((rt0.c3, vt0.c2, v0.c0))<>((-1714259499, rt0.c3, NULL))))));
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, rt0.c4 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, rt0.c4 FROM rt0 WHERE ((((rt0.c2) NOT NULL) IN ())) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, rt0.c4 FROM rt0 WHERE ((NOT ((((rt0.c2) NOT NULL) IN ())))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, rt0.c4 FROM rt0 WHERE ((((((rt0.c2) NOT NULL) IN ())) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, rt0.c4 FROM rt0;
SELECT v0.c0, vt0.c2 FROM vt0, v0 GROUP BY v0.c0, vt0.c2;
SELECT ALL v0.c0, vt0.c2 FROM vt0, v0 WHERE (((((vt0.lid)/(vt0.c2))) NOT NULL)) GROUP BY v0.c0, vt0.c2 UNION SELECT ALL v0.c0, vt0.c2 FROM vt0, v0 WHERE ((NOT (((((vt0.lid)/(vt0.c2))) NOT NULL)))) GROUP BY v0.c0, vt0.c2 UNION SELECT v0.c0, vt0.c2 FROM vt0, v0 WHERE (((((((vt0.lid)/(vt0.c2))) NOT NULL)) ISNULL)) GROUP BY v0.c0, vt0.c2;
SELECT v0.c0, vt0.c2 FROM vt0, v0 GROUP BY v0.c0, vt0.c2;
SELECT ALL rt0.c4, rt0.c0, vt0.c2, rt0.c2, vt0.c1 FROM vt0 LEFT OUTER JOIN v0 ON (~ (v0.c0)) FULL OUTER JOIN rt0 ON ((((rt0.c2) ISNULL)) IS FALSE) GROUP BY rt0.c4, rt0.c0, vt0.c2, rt0.c2, vt0.c1;
SELECT ALL rt0.c4, rt0.c0, vt0.c2, rt0.c2, vt0.c1 FROM vt0 LEFT OUTER JOIN v0 ON (~ (v0.c0)) FULL OUTER JOIN rt0 ON ((((rt0.c2) ISNULL)) IS FALSE) GROUP BY rt0.c4, rt0.c0, vt0.c2, rt0.c2, vt0.c1 HAVING ((((((v0.c0)>=(rt0.c3)))OR(0.07147164657735416)))OR(SUM(vt0.c1))) UNION ALL SELECT ALL rt0.c4, rt0.c0, vt0.c2, rt0.c2, vt0.c1 FROM vt0 LEFT OUTER JOIN v0 ON (~ (v0.c0)) FULL OUTER JOIN rt0 ON ((((rt0.c2) ISNULL)) IS FALSE) GROUP BY rt0.c4, rt0.c0, vt0.c2, rt0.c2, vt0.c1 HAVING (NOT (((((((v0.c0)>=(rt0.c3)))OR(0.07147164657735416)))OR(SUM(vt0.c1))))) UNION ALL SELECT rt0.c4, rt0.c0, vt0.c2, rt0.c2, vt0.c1 FROM vt0 LEFT OUTER JOIN v0 ON (~ (v0.c0)) FULL OUTER JOIN rt0 ON ((((rt0.c2) ISNULL)) IS FALSE) GROUP BY rt0.c4, rt0.c0, vt0.c2, rt0.c2, vt0.c1 HAVING ((((((((v0.c0)>=(rt0.c3)))OR(0.07147164657735416)))OR(SUM(vt0.c1)))) ISNULL);
SELECT ALL rt0.c4, rt0.c0, vt0.c2, rt0.c2, vt0.c1 FROM vt0 LEFT OUTER JOIN v0 ON (~ (v0.c0)) FULL OUTER JOIN rt0 ON ((((rt0.c2) ISNULL)) IS FALSE) GROUP BY rt0.c4, rt0.c0, vt0.c2, rt0.c2, vt0.c1;
SELECT ALL rt0.c4, rt0.c0, vt0.c2, rt0.c2, vt0.c1 FROM vt0 LEFT OUTER JOIN v0 ON (~ (v0.c0)) FULL OUTER JOIN rt0 ON ((((rt0.c2) ISNULL)) IS FALSE) GROUP BY rt0.c4, rt0.c0, vt0.c2, rt0.c2, vt0.c1 HAVING ((((((v0.c0)>=(rt0.c3)))OR(0.07147164657735416)))OR(SUM(vt0.c1))) UNION ALL SELECT ALL rt0.c4, rt0.c0, vt0.c2, rt0.c2, vt0.c1 FROM vt0 LEFT OUTER JOIN v0 ON (~ (v0.c0)) FULL OUTER JOIN rt0 ON ((((rt0.c2) ISNULL)) IS FALSE) GROUP BY rt0.c4, rt0.c0, vt0.c2, rt0.c2, vt0.c1 HAVING (NOT (((((((v0.c0)>=(rt0.c3)))OR(0.07147164657735416)))OR(SUM(vt0.c1))))) UNION ALL SELECT rt0.c4, rt0.c0, vt0.c2, rt0.c2, vt0.c1 FROM vt0 LEFT OUTER JOIN v0 ON (~ (v0.c0)) FULL OUTER JOIN rt0 ON ((((rt0.c2) ISNULL)) IS FALSE) GROUP BY rt0.c4, rt0.c0, vt0.c2, rt0.c2, vt0.c1 HAVING ((((((((v0.c0)>=(rt0.c3)))OR(0.07147164657735416)))OR(SUM(vt0.c1)))) ISNULL);
SELECT ALL rt0.c4, rt0.c0, vt0.c2, rt0.c2, vt0.c1 FROM vt0 LEFT OUTER JOIN v0 ON (~ (v0.c0)) FULL OUTER JOIN rt0 ON ((((rt0.c2) ISNULL)) IS FALSE) GROUP BY rt0.c4, rt0.c0, vt0.c2, rt0.c2, vt0.c1;
SELECT ALL MIN((((vt0.c2 IN (vt0.c1)))GLOB((vt0.lid IN ())))) FROM vt0, v0, rt0 ORDER BY '-1716207029' DESC;
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE (((v0.c0 COLLATE BINARY) BETWEEN (CAST(NULL AS BLOB)) AND (((v0.c0) ISNULL)))) UNION ALL SELECT * FROM v0 WHERE ((NOT (((v0.c0 COLLATE BINARY) BETWEEN (CAST(NULL AS BLOB)) AND (((v0.c0) ISNULL)))))) UNION ALL SELECT * FROM v0 WHERE (((((v0.c0 COLLATE BINARY) BETWEEN (CAST(NULL AS BLOB)) AND (((v0.c0) ISNULL)))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE ((rt0.c2 IN ())) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT ((rt0.c2 IN ())))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((((rt0.c2 IN ())) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT rt0.c2, rt0.c1, rt0.c4, v0.c0 FROM rt0 RIGHT OUTER JOIN v0 ON ((CAST(rt0.c0 AS INTEGER))<(CAST(rt0.c4 AS BLOB))) GROUP BY rt0.c2, rt0.c1, rt0.c4, v0.c0;
SELECT rt0.c2, rt0.c1, rt0.c4, v0.c0 FROM rt0 RIGHT OUTER JOIN v0 ON ((CAST(rt0.c0 AS INTEGER))<(CAST(rt0.c4 AS BLOB))) WHERE (rt0.c2) GROUP BY rt0.c2, rt0.c1, rt0.c4, v0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c4, v0.c0 FROM rt0 RIGHT OUTER JOIN v0 ON ((CAST(rt0.c0 AS INTEGER))<(CAST(rt0.c4 AS BLOB))) WHERE ((NOT (rt0.c2))) GROUP BY rt0.c2, rt0.c1, rt0.c4, v0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c4, v0.c0 FROM rt0 RIGHT OUTER JOIN v0 ON ((CAST(rt0.c0 AS INTEGER))<(CAST(rt0.c4 AS BLOB))) WHERE (((rt0.c2) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c4, v0.c0;
SELECT rt0.c2, rt0.c1, rt0.c4, v0.c0 FROM rt0 RIGHT OUTER JOIN v0 ON ((CAST(rt0.c0 AS INTEGER))<(CAST(rt0.c4 AS BLOB))) GROUP BY rt0.c2, rt0.c1, rt0.c4, v0.c0;
SELECT ALL vt0.c1, vt0.lid FROM vt0, rt0 CROSS JOIN v0 ON ((rt0.c3)>(rt0.c2)) COLLATE BINARY GROUP BY vt0.c1, vt0.lid;
SELECT ALL vt0.c1, vt0.lid FROM vt0, rt0 CROSS JOIN v0 ON ((rt0.c3)>(rt0.c2)) COLLATE BINARY GROUP BY vt0.c1, vt0.lid HAVING CASE (((rt0.c0)) NOT BETWEEN ((TOTAL(SUM(1.680432894E9)))) AND ((v0.c0)))  WHEN GROUP_CONCAT(COUNT(COUNT(*))) THEN vt0.lid COLLATE RTRIM ELSE MIN(GROUP_CONCAT(TOTAL(vt0.c1))) END UNION ALL SELECT ALL vt0.c1, vt0.lid FROM vt0, rt0 CROSS JOIN v0 ON ((rt0.c3)>(rt0.c2)) COLLATE BINARY GROUP BY vt0.c1, vt0.lid HAVING (NOT (CASE (((rt0.c0)) NOT BETWEEN ((TOTAL(SUM(1.680432894E9)))) AND ((v0.c0)))  WHEN GROUP_CONCAT(COUNT(COUNT(*))) THEN vt0.lid COLLATE RTRIM ELSE MIN(GROUP_CONCAT(TOTAL(vt0.c1))) END)) UNION ALL SELECT ALL vt0.c1, vt0.lid FROM vt0, rt0 CROSS JOIN v0 ON ((rt0.c3)>(rt0.c2)) COLLATE BINARY GROUP BY vt0.c1, vt0.lid HAVING ((CASE (((rt0.c0)) NOT BETWEEN ((TOTAL(SUM(1.680432894E9)))) AND ((v0.c0)))  WHEN GROUP_CONCAT(COUNT(COUNT(*))) THEN vt0.lid COLLATE RTRIM ELSE MIN(GROUP_CONCAT(TOTAL(vt0.c1))) END) ISNULL);
SELECT ALL SUM((- ((vt0.c0 IN ())))) FROM v0, vt0 ORDER BY CAST(((vt0.c1)%(vt0.c0)) AS NUMERIC);
SELECT rt0.c4, rt0.c0, rt0.c1 FROM rt0, v0;
SELECT rt0.c4, rt0.c0, rt0.c1 FROM rt0, v0 WHERE (((rt0.c2 IN ()) IN ())) UNION ALL SELECT rt0.c4, rt0.c0, rt0.c1 FROM rt0, v0 WHERE ((NOT (((rt0.c2 IN ()) IN ())))) UNION ALL SELECT rt0.c4, rt0.c0, rt0.c1 FROM rt0, v0 WHERE (((((rt0.c2 IN ()) IN ())) ISNULL));
SELECT rt0.c4, rt0.c0, rt0.c1 FROM rt0, v0;
SELECT DISTINCT vt0.c1, vt0.c2, vt0.lid, v0.c0, vt0.c0 FROM vt0, v0;
SELECT DISTINCT vt0.c1, vt0.c2, vt0.lid, v0.c0, vt0.c0 FROM vt0, v0 WHERE (((TRIM(vt0.c2)) BETWEEN (x'') AND ((vt0.lid IN ())))) UNION SELECT DISTINCT vt0.c1, vt0.c2, vt0.lid, v0.c0, vt0.c0 FROM vt0, v0 WHERE ((NOT (((TRIM(vt0.c2)) BETWEEN (x'') AND ((vt0.lid IN ())))))) UNION SELECT DISTINCT vt0.c1, vt0.c2, vt0.lid, v0.c0, vt0.c0 FROM vt0, v0 WHERE (((((TRIM(vt0.c2)) BETWEEN (x'') AND ((vt0.lid IN ())))) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c2, vt0.lid, v0.c0, vt0.c0 FROM vt0, v0;
SELECT rt0.c0 FROM v0, rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM v0, rt0 WHERE (NULL) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM v0, rt0 WHERE ((NOT (NULL))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM v0, rt0 WHERE (((NULL) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM v0, rt0 GROUP BY rt0.c0;
SELECT rt0.c2, vt0.c1, rt0.c3, vt0.c2, vt0.c0, v0.c0, rt0.c4, vt0.lid, rt0.c1, rt0.c0 FROM vt0 INNER JOIN v0 ON CASE (vt0.c2 IN (rt0.c1, rt0.c3))  WHEN (0X29150376 IN ()) THEN ((v0.c0) IS TRUE) END INNER JOIN rt0 ON ((((((((((vt0.lid)OR(rt0.c3)))AND(v0.c0)))AND(rt0.c4)))OR(v0.c0)))/((NOT (rt0.c4)))) GROUP BY rt0.c2, vt0.c1, rt0.c3, vt0.c2, vt0.c0, v0.c0, rt0.c4, vt0.lid, rt0.c1, rt0.c0;
SELECT rt0.c2, vt0.c1, rt0.c3, vt0.c2, vt0.c0, v0.c0, rt0.c4, vt0.lid, rt0.c1, rt0.c0 FROM vt0 INNER JOIN v0 ON CASE (vt0.c2 IN (rt0.c1, rt0.c3))  WHEN (0x29150376 IN ()) THEN ((v0.c0) IS TRUE) END INNER JOIN rt0 ON ((((((((((vt0.lid)OR(rt0.c3)))AND(v0.c0)))AND(rt0.c4)))OR(v0.c0)))/((NOT (rt0.c4)))) GROUP BY rt0.c2, vt0.c1, rt0.c3, vt0.c2, vt0.c0, v0.c0, rt0.c4, vt0.lid, rt0.c1, rt0.c0 HAVING AVG(COUNT(GROUP_CONCAT(0xffffffffb311cae3))) UNION ALL SELECT rt0.c2, vt0.c1, rt0.c3, vt0.c2, vt0.c0, v0.c0, rt0.c4, vt0.lid, rt0.c1, rt0.c0 FROM vt0 INNER JOIN v0 ON CASE (vt0.c2 IN (rt0.c1, rt0.c3))  WHEN (0X29150376 IN ()) THEN ((v0.c0) IS TRUE) END INNER JOIN rt0 ON ((((((((((vt0.lid)OR(rt0.c3)))AND(v0.c0)))AND(rt0.c4)))OR(v0.c0)))/((NOT (rt0.c4)))) GROUP BY rt0.c2, vt0.c1, rt0.c3, vt0.c2, vt0.c0, v0.c0, rt0.c4, vt0.lid, rt0.c1, rt0.c0 HAVING (NOT (AVG(COUNT(GROUP_CONCAT(0xffffffffb311cae3))))) UNION ALL SELECT ALL rt0.c2, vt0.c1, rt0.c3, vt0.c2, vt0.c0, v0.c0, rt0.c4, vt0.lid, rt0.c1, rt0.c0 FROM vt0 INNER JOIN v0 ON CASE (vt0.c2 IN (rt0.c1, rt0.c3))  WHEN (0X29150376 IN ()) THEN ((v0.c0) IS TRUE) END INNER JOIN rt0 ON ((((((((((vt0.lid)OR(rt0.c3)))AND(v0.c0)))AND(rt0.c4)))OR(v0.c0)))/((NOT (rt0.c4)))) GROUP BY rt0.c2, vt0.c1, rt0.c3, vt0.c2, vt0.c0, v0.c0, rt0.c4, vt0.lid, rt0.c1, rt0.c0 HAVING ((AVG(COUNT(GROUP_CONCAT(0Xffffffffb311cae3)))) ISNULL);
SELECT * FROM v0, rt0, vt0;
SELECT * FROM v0, rt0, vt0 WHERE (((vt0.c2)LIKE(((v0.c0) BETWEEN (0.07183388405854974) AND (rt0.c4))))) UNION ALL SELECT ALL * FROM v0, rt0, vt0 WHERE ((NOT (((vt0.c2)LIKE(((v0.c0) BETWEEN (0.07183388405854974) AND (rt0.c4))))))) UNION ALL SELECT ALL * FROM v0, rt0, vt0 WHERE (((((vt0.c2)LIKE(((v0.c0) BETWEEN (0.07183388405854974) AND (rt0.c4))))) ISNULL));
SELECT * FROM v0, rt0, vt0;
SELECT DISTINCT rt0.c1, vt0.c2, vt0.c1, vt0.c0 FROM vt0, rt0;
SELECT DISTINCT rt0.c1, vt0.c2, vt0.c1, vt0.c0 FROM vt0, rt0 WHERE ((IFNULL(DISTINCT vt0.lid, vt0.lid) IN ())) UNION SELECT DISTINCT rt0.c1, vt0.c2, vt0.c1, vt0.c0 FROM vt0, rt0 WHERE ((NOT ((IFNULL(DISTINCT vt0.lid, vt0.lid) IN ())))) UNION SELECT DISTINCT rt0.c1, vt0.c2, vt0.c1, vt0.c0 FROM vt0, rt0 WHERE ((((IFNULL(DISTINCT vt0.lid, vt0.lid) IN ())) ISNULL));
SELECT DISTINCT rt0.c1, vt0.c2, vt0.c1, vt0.c0 FROM vt0, rt0;
SELECT vt0.c0, vt0.c2, vt0.lid FROM v0 NATURAL JOIN vt0 GROUP BY vt0.c0, vt0.c2, vt0.lid;
SELECT ALL vt0.c0, vt0.c2, vt0.lid FROM v0 NATURAL JOIN vt0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.lid WHEN vt0.c1 THEN vt0.c1 END) NOT BETWEEN (CAST(vt0.lid AS BLOB)) AND (((vt0.c2)||(0x222593ba))))) GROUP BY vt0.c0, vt0.c2, vt0.lid UNION SELECT ALL vt0.c0, vt0.c2, vt0.lid FROM v0 NATURAL JOIN vt0 WHERE ((NOT (((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.lid WHEN vt0.c1 THEN vt0.c1 END) NOT BETWEEN (CAST(vt0.lid AS BLOB)) AND (((vt0.c2)||(0X222593ba))))))) GROUP BY vt0.c0, vt0.c2, vt0.lid UNION SELECT vt0.c0, vt0.c2, vt0.lid FROM v0 NATURAL JOIN vt0 WHERE (((((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.lid WHEN vt0.c1 THEN vt0.c1 END) NOT BETWEEN (CAST(vt0.lid AS BLOB)) AND (((vt0.c2)||(0x222593ba))))) ISNULL)) GROUP BY vt0.c0, vt0.c2, vt0.lid;
SELECT vt0.c0, vt0.c2, vt0.lid FROM v0 NATURAL JOIN vt0 GROUP BY vt0.c0, vt0.c2, vt0.lid;
SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0, rt0.c4;
SELECT rt0.c2, rt0.c3, rt0.c1, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0, rt0.c4 HAVING MAX(COUNT(rt0.c0)) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0, rt0.c4 HAVING (NOT (MAX(COUNT(rt0.c0)))) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c1, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0, rt0.c4 HAVING ((MAX(COUNT(rt0.c0))) ISNULL);
SELECT SUM((rt0.c3 IN ())) FROM rt0, v0, vt0 ORDER BY CAST(TRIM(vt0.c2, vt0.c2) AS TEXT) DESC  NULLS FIRST;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (vt0.lid) UNION ALL SELECT * FROM vt0 WHERE ((NOT (vt0.lid))) UNION ALL SELECT * FROM vt0 WHERE (((vt0.lid) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (0.9705699810982817) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (0.9705699810982817))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((0.9705699810982817) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((((v0.c0)) BETWEEN ((((((v0.c0)OR(v0.c0)))OR(v0.c0)))) AND ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((((v0.c0)) BETWEEN ((((((v0.c0)OR(v0.c0)))OR(v0.c0)))) AND ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((((v0.c0)) BETWEEN ((((((v0.c0)OR(v0.c0)))OR(v0.c0)))) AND ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c3, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1;
SELECT ALL rt0.c3, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1 HAVING ((COUNT(rt0.c4)) BETWEEN (SUM(rt0.c4)) AND (((((((((MAX(rt0.c3))AND(rt0.c4)))AND(rt0.c3)))OR(SUM(rt0.c3))))AND(x'')))) UNION ALL SELECT rt0.c3, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1 HAVING (NOT (((COUNT(rt0.c4)) BETWEEN (SUM(rt0.c4)) AND (((((((((MAX(rt0.c3))AND(rt0.c4)))AND(rt0.c3)))OR(SUM(rt0.c3))))AND(x'')))))) UNION ALL SELECT ALL rt0.c3, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1 HAVING ((((COUNT(rt0.c4)) BETWEEN (SUM(rt0.c4)) AND (((((((((MAX(rt0.c3))AND(rt0.c4)))AND(rt0.c3)))OR(SUM(rt0.c3))))AND(x''))))) ISNULL);
SELECT rt0.c3, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1;
SELECT ALL rt0.c3, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1 HAVING ((COUNT(rt0.c4)) BETWEEN (SUM(rt0.c4)) AND (((((((((MAX(rt0.c3))AND(rt0.c4)))AND(rt0.c3)))OR(SUM(rt0.c3))))AND(x'')))) UNION ALL SELECT rt0.c3, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1 HAVING (NOT (((COUNT(rt0.c4)) BETWEEN (SUM(rt0.c4)) AND (((((((((MAX(rt0.c3))AND(rt0.c4)))AND(rt0.c3)))OR(SUM(rt0.c3))))AND(x'')))))) UNION ALL SELECT ALL rt0.c3, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1 HAVING ((((COUNT(rt0.c4)) BETWEEN (SUM(rt0.c4)) AND (((((((((MAX(rt0.c3))AND(rt0.c4)))AND(rt0.c3)))OR(SUM(rt0.c3))))AND(x''))))) ISNULL);
SELECT rt0.c3, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1;
SELECT ALL * FROM rt0, vt0;
SELECT ALL * FROM rt0, vt0 WHERE (((rt0.c2 COLLATE NOCASE) IS TRUE)) UNION ALL SELECT ALL * FROM rt0 NOT INDEXED, vt0 WHERE ((NOT (((rt0.c2 COLLATE NOCASE) IS TRUE)))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c2 COLLATE NOCASE) IS TRUE)) ISNULL));
SELECT ALL * FROM rt0, vt0;
SELECT DISTINCT rt0.c4, rt0.c1, rt0.c3, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c4, rt0.c1, rt0.c3, rt0.c0, rt0.c2 FROM rt0 WHERE (((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c4 END)LIKE(((rt0.c3)|(rt0.c1))))) UNION SELECT DISTINCT rt0.c4, rt0.c1, rt0.c3, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c4 END)LIKE(((rt0.c3)|(rt0.c1))))))) UNION SELECT DISTINCT rt0.c4, rt0.c1, rt0.c3, rt0.c0, rt0.c2 FROM rt0 WHERE (((((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c4 END)LIKE(((rt0.c3)|(rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c1, rt0.c3, rt0.c0, rt0.c2 FROM rt0;
SELECT ALL vt0.c1, rt0.c0, rt0.c1, rt0.c2, v0.c0, rt0.c3, vt0.c0, rt0.c4, vt0.lid, vt0.c2 FROM vt0, rt0, v0 GROUP BY vt0.c1, rt0.c0, rt0.c1, rt0.c2, v0.c0, rt0.c3, vt0.c0, rt0.c4, vt0.lid, vt0.c2;
SELECT vt0.c1, rt0.c0, rt0.c1, rt0.c2, v0.c0, rt0.c3, vt0.c0, rt0.c4, vt0.lid, vt0.c2 FROM vt0, rt0, v0 WHERE ((((((vt0.lid)OR(rt0.c1)))AND(rt0.c1)) IN ())) GROUP BY vt0.c1, rt0.c0, rt0.c1, rt0.c2, v0.c0, rt0.c3, vt0.c0, rt0.c4, vt0.lid, vt0.c2 UNION SELECT vt0.c1, rt0.c0, rt0.c1, rt0.c2, v0.c0, rt0.c3, vt0.c0, rt0.c4, vt0.lid, vt0.c2 FROM vt0, rt0, v0 WHERE ((NOT ((((((vt0.lid)OR(rt0.c1)))AND(rt0.c1)) IN ())))) GROUP BY vt0.c1, rt0.c0, rt0.c1, rt0.c2, v0.c0, rt0.c3, vt0.c0, rt0.c4, vt0.lid, vt0.c2 UNION SELECT vt0.c1, rt0.c0, rt0.c1, rt0.c2, v0.c0, rt0.c3, vt0.c0, rt0.c4, vt0.lid, vt0.c2 FROM vt0, rt0, v0 WHERE ((((((((vt0.lid)OR(rt0.c1)))AND(rt0.c1)) IN ())) ISNULL)) GROUP BY vt0.c1, rt0.c0, rt0.c1, rt0.c2, v0.c0, rt0.c3, vt0.c0, rt0.c4, vt0.lid, vt0.c2;
SELECT ALL vt0.c1, rt0.c0, rt0.c1, rt0.c2, v0.c0, rt0.c3, vt0.c0, rt0.c4, vt0.lid, vt0.c2 FROM vt0, rt0, v0 GROUP BY vt0.c1, rt0.c0, rt0.c1, rt0.c2, v0.c0, rt0.c3, vt0.c0, rt0.c4, vt0.lid, vt0.c2;
SELECT ALL vt0.c1 FROM v0, vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM v0, vt0 GROUP BY vt0.c1 HAVING SUM(AVG(AVG(GROUP_CONCAT(vt0.lid)))) UNION ALL SELECT vt0.c1 FROM v0, vt0 GROUP BY vt0.c1 HAVING (NOT (SUM(AVG(AVG(GROUP_CONCAT(vt0.lid)))))) UNION ALL SELECT ALL vt0.c1 FROM v0, vt0 GROUP BY vt0.c1 HAVING ((SUM(AVG(AVG(GROUP_CONCAT(vt0.lid))))) ISNULL);
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE (NULL) UNION ALL SELECT * FROM v0 NOT INDEXED WHERE ((NOT (NULL))) UNION ALL SELECT * FROM v0 WHERE (((NULL) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (NULLIF(((v0.c0) ISNULL), ((v0.c0)OR(v0.c0)))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (NULLIF(((v0.c0) ISNULL), ((v0.c0)OR(v0.c0)))))) UNION SELECT DISTINCT * FROM v0 WHERE (((NULLIF(((v0.c0) ISNULL), ((v0.c0)OR(v0.c0)))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT rt0.c4, rt0.c3, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c4, rt0.c3, v0.c0, rt0.c0;
SELECT ALL rt0.c4, rt0.c3, v0.c0, rt0.c0 FROM v0, rt0 WHERE (((((rt0.c4) NOTNULL)) NOT BETWEEN ((v0.c0 IN (v0.c0))) AND (((v0.c0) IS TRUE)))) GROUP BY rt0.c4, rt0.c3, v0.c0, rt0.c0 UNION SELECT rt0.c4, rt0.c3, v0.c0, rt0.c0 FROM v0, rt0 WHERE ((NOT (((((rt0.c4) NOTNULL)) NOT BETWEEN ((v0.c0 IN (v0.c0))) AND (((v0.c0) IS TRUE)))))) GROUP BY rt0.c4, rt0.c3, v0.c0, rt0.c0 UNION SELECT ALL rt0.c4, rt0.c3, v0.c0, rt0.c0 FROM v0, rt0 WHERE (((((((rt0.c4) NOTNULL)) NOT BETWEEN ((v0.c0 IN (v0.c0))) AND (((v0.c0) IS TRUE)))) ISNULL)) GROUP BY rt0.c4, rt0.c3, v0.c0, rt0.c0;
SELECT rt0.c4, rt0.c3, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c4, rt0.c3, v0.c0, rt0.c0;
SELECT vt0.c0 FROM rt0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM rt0, vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM rt0, vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM rt0, vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM rt0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM rt0, vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM rt0, vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM rt0, vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM rt0, vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c0, rt0.c4, rt0.c1, vt0.c0, vt0.c1, v0.c0, rt0.c3, vt0.lid, vt0.c2 FROM rt0, vt0, v0;
SELECT ALL rt0.c0, rt0.c4, rt0.c1, vt0.c0, vt0.c1, v0.c0, rt0.c3, vt0.lid, vt0.c2 FROM rt0, vt0, v0 WHERE (rt0.c1) UNION ALL SELECT ALL rt0.c0, rt0.c4, rt0.c1, vt0.c0, vt0.c1, v0.c0, rt0.c3, vt0.lid, vt0.c2 FROM rt0, vt0, v0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT rt0.c0, rt0.c4, rt0.c1, vt0.c0, vt0.c1, v0.c0, rt0.c3, vt0.lid, vt0.c2 FROM rt0, vt0, v0 WHERE (((rt0.c1) ISNULL));
SELECT ALL rt0.c0, rt0.c4, rt0.c1, vt0.c0, vt0.c1, v0.c0, rt0.c3, vt0.lid, vt0.c2 FROM rt0, vt0, v0;
SELECT DISTINCT * FROM v0 LEFT OUTER JOIN rt0 ON (((0.8289693260010791) NOT BETWEEN (rt0.c2) AND (vt0.lid)) IN (x'', load_extension(vt0.c2))) INNER JOIN vt0 ON ((CASE rt0.c2  WHEN vt0.c1 THEN vt0.c0 WHEN rt0.c3 THEN vt0.c1 WHEN rt0.c2 THEN 0.0 ELSE NULL END)*(((rt0.c1) ISNULL)));
SELECT ALL rt0.c3, rt0.c2, rt0.c1, vt0.lid, vt0.c1, v0.c0, vt0.c0, rt0.c4 FROM vt0, v0, rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1, vt0.lid, vt0.c1, v0.c0, vt0.c0, rt0.c4;
SELECT ALL rt0.c3, rt0.c2, rt0.c1, vt0.lid, vt0.c1, v0.c0, vt0.c0, rt0.c4 FROM vt0 NOT INDEXED, v0, rt0 WHERE (rt0.c3) GROUP BY rt0.c3, rt0.c2, rt0.c1, vt0.lid, vt0.c1, v0.c0, vt0.c0, rt0.c4 UNION SELECT rt0.c3, rt0.c2, rt0.c1, vt0.lid, vt0.c1, v0.c0, vt0.c0, rt0.c4 FROM vt0, v0, rt0 WHERE ((NOT (rt0.c3))) GROUP BY rt0.c3, rt0.c2, rt0.c1, vt0.lid, vt0.c1, v0.c0, vt0.c0, rt0.c4 UNION SELECT ALL rt0.c3, rt0.c2, rt0.c1, vt0.lid, vt0.c1, v0.c0, vt0.c0, rt0.c4 FROM vt0, v0, rt0 WHERE (((rt0.c3) ISNULL)) GROUP BY rt0.c3, rt0.c2, rt0.c1, vt0.lid, vt0.c1, v0.c0, vt0.c0, rt0.c4;
SELECT ALL rt0.c3, rt0.c2, rt0.c1, vt0.lid, vt0.c1, v0.c0, vt0.c0, rt0.c4 FROM vt0, v0, rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1, vt0.lid, vt0.c1, v0.c0, vt0.c0, rt0.c4;
SELECT ALL rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c4;
SELECT rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c4 HAVING COUNT(CASE rt0.c1  WHEN rt0.c4 THEN MAX(rt0.c4) WHEN rt0.c1 THEN rt0.c4 WHEN AVG(rt0.c1) THEN AVG(COUNT(*)) ELSE 0.2693626739871209 END) UNION ALL SELECT rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c4 HAVING (NOT (COUNT(CASE rt0.c1  WHEN rt0.c4 THEN MAX(rt0.c4) WHEN rt0.c1 THEN rt0.c4 WHEN AVG(rt0.c1) THEN AVG(COUNT(*)) ELSE 0.2693626739871209 END))) UNION ALL SELECT ALL rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c4 HAVING ((COUNT(CASE rt0.c1  WHEN rt0.c4 THEN MAX(rt0.c4) WHEN rt0.c1 THEN rt0.c4 WHEN AVG(rt0.c1) THEN AVG(COUNT(*)) ELSE 0.2693626739871209 END)) ISNULL);
SELECT vt0.c1, vt0.lid FROM vt0, v0;
SELECT vt0.c1, vt0.lid FROM vt0, v0 WHERE (NULLIF(((((vt0.c1)OR(v0.c0)))OR(v0.c0)), (((vt0.c0))>((vt0.c2))))) UNION ALL SELECT ALL vt0.c1, vt0.lid FROM vt0, v0 WHERE ((NOT (NULLIF(((((vt0.c1)OR(v0.c0)))OR(v0.c0)), (((vt0.c0))>((vt0.c2))))))) UNION ALL SELECT vt0.c1, vt0.lid FROM vt0, v0 WHERE (((NULLIF(((((vt0.c1)OR(v0.c0)))OR(v0.c0)), (((vt0.c0))>((vt0.c2))))) ISNULL));
SELECT vt0.c1, vt0.lid FROM vt0, v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((((v0.c0)AND(v0.c0))) BETWEEN ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) AND (v0.c0 COLLATE BINARY))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((v0.c0)AND(v0.c0))) BETWEEN ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) AND (v0.c0 COLLATE BINARY))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((v0.c0)AND(v0.c0))) BETWEEN ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) AND (v0.c0 COLLATE BINARY))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL rt0.c0, vt0.c2, vt0.c1, rt0.c2 FROM vt0, rt0, v0 GROUP BY rt0.c0, vt0.c2, vt0.c1, rt0.c2;
SELECT ALL rt0.c0, vt0.c2, vt0.c1, rt0.c2 FROM vt0, rt0, v0 WHERE ('459456858' COLLATE NOCASE) GROUP BY rt0.c0, vt0.c2, vt0.c1, rt0.c2 UNION SELECT rt0.c0, vt0.c2, vt0.c1, rt0.c2 FROM vt0, rt0, v0 WHERE ((NOT ('459456858' COLLATE NOCASE))) GROUP BY rt0.c0, vt0.c2, vt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, vt0.c2, vt0.c1, rt0.c2 FROM vt0, rt0, v0 WHERE ((('459456858' COLLATE NOCASE) ISNULL)) GROUP BY rt0.c0, vt0.c2, vt0.c1, rt0.c2;
SELECT ALL rt0.c0, vt0.c2, vt0.c1, rt0.c2 FROM vt0, rt0, v0 GROUP BY rt0.c0, vt0.c2, vt0.c1, rt0.c2;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(AVG(COUNT(SUM(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(AVG(COUNT(SUM(v0.c0)))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(AVG(COUNT(SUM(v0.c0))))) ISNULL);
SELECT ALL * FROM vt0, rt0, v0;
SELECT * FROM vt0, rt0, v0 WHERE (((rt0.c4)>(rt0.c3)) COLLATE BINARY) UNION ALL SELECT ALL * FROM vt0, rt0, v0 WHERE ((NOT (((rt0.c4)>(rt0.c3)) COLLATE BINARY))) UNION ALL SELECT * FROM vt0, rt0, v0 WHERE (((((rt0.c4)>(rt0.c3)) COLLATE BINARY) ISNULL));
SELECT ALL * FROM vt0, rt0, v0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c4, vt0.c0, v0.c0, rt0.c3, vt0.c1, vt0.lid FROM vt0, v0, rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c4, vt0.c0, v0.c0, rt0.c3, vt0.c1, vt0.lid FROM vt0, v0, rt0 WHERE ((NOT (CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c2 END))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c4, vt0.c0, v0.c0, rt0.c3, vt0.c1, vt0.lid FROM vt0, v0, rt0 WHERE ((NOT ((NOT (CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c2 END))))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c4, vt0.c0, v0.c0, rt0.c3, vt0.c1, vt0.lid FROM vt0, v0, rt0 WHERE ((((NOT (CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c2 END))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c4, vt0.c0, v0.c0, rt0.c3, vt0.c1, vt0.lid FROM vt0, v0, rt0;
SELECT ALL rt0.c1 FROM v0, rt0, vt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM v0, rt0, vt0 WHERE ((~ (((vt0.c1)<<(vt0.c0))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM v0, rt0, vt0 WHERE ((NOT ((~ (((vt0.c1)<<(vt0.c0))))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM v0, rt0, vt0 WHERE ((((~ (((vt0.c1)<<(vt0.c0))))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM v0, rt0, vt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1, vt0.lid, vt0.c2, rt0.c4, rt0.c3, v0.c0, vt0.c1, vt0.c0 FROM rt0, v0, vt0 GROUP BY rt0.c1, vt0.lid, vt0.c2, rt0.c4, rt0.c3, v0.c0, vt0.c1, vt0.c0;
SELECT rt0.c1, vt0.lid, vt0.c2, rt0.c4, rt0.c3, v0.c0, vt0.c1, vt0.c0 FROM rt0, v0, vt0 GROUP BY rt0.c1, vt0.lid, vt0.c2, rt0.c4, rt0.c3, v0.c0, vt0.c1, vt0.c0 HAVING ((((TOTAL(AVG(vt0.c1)))OR(COUNT(*))))OR(vt0.lid)) UNION ALL SELECT rt0.c1, vt0.lid, vt0.c2, rt0.c4, rt0.c3, v0.c0, vt0.c1, vt0.c0 FROM rt0, v0, vt0 GROUP BY rt0.c1, vt0.lid, vt0.c2, rt0.c4, rt0.c3, v0.c0, vt0.c1, vt0.c0 HAVING (NOT (((((TOTAL(AVG(vt0.c1)))OR(COUNT(*))))OR(vt0.lid)))) UNION ALL SELECT rt0.c1, vt0.lid, vt0.c2, rt0.c4, rt0.c3, v0.c0, vt0.c1, vt0.c0 FROM rt0, v0, vt0 GROUP BY rt0.c1, vt0.lid, vt0.c2, rt0.c4, rt0.c3, v0.c0, vt0.c1, vt0.c0 HAVING ((((((TOTAL(AVG(vt0.c1)))OR(COUNT(*))))OR(vt0.lid))) ISNULL);
SELECT * FROM vt0, v0 NATURAL JOIN rt0;
SELECT * FROM vt0, v0 NATURAL JOIN rt0 WHERE (CASE CASE WHEN v0.c0 THEN vt0.c1 ELSE '' END  WHEN ((v0.c0) BETWEEN (rt0.c0) AND (rt0.c0)) THEN rt0.c1 COLLATE NOCASE ELSE (((rt0.c3, '0.7372696026206979', rt0.c1)) NOT BETWEEN ((vt0.c2, rt0.c0, NULL)) AND ((0.42662157147810054, rt0.c2, rt0.c0))) END) UNION ALL SELECT ALL * FROM vt0, v0 NATURAL JOIN rt0 WHERE ((NOT (CASE CASE WHEN v0.c0 THEN vt0.c1 ELSE '' END  WHEN ((v0.c0) BETWEEN (rt0.c0) AND (rt0.c0)) THEN rt0.c1 COLLATE NOCASE ELSE (((rt0.c3, '0.7372696026206979', rt0.c1)) NOT BETWEEN ((vt0.c2, rt0.c0, NULL)) AND ((0.42662157147810054, rt0.c2, rt0.c0))) END))) UNION ALL SELECT ALL * FROM vt0, v0 NATURAL JOIN rt0 WHERE (((CASE CASE WHEN v0.c0 THEN vt0.c1 ELSE '' END  WHEN ((v0.c0) BETWEEN (rt0.c0) AND (rt0.c0)) THEN rt0.c1 COLLATE NOCASE ELSE (((rt0.c3, '0.7372696026206979', rt0.c1)) NOT BETWEEN ((vt0.c2, rt0.c0, NULL)) AND ((0.42662157147810054, rt0.c2, rt0.c0))) END) ISNULL));
SELECT * FROM vt0, v0 NATURAL JOIN rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((v0.c0) IS TRUE) IN ())) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((v0.c0) IS TRUE) IN ())))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((v0.c0) IS TRUE) IN ())) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3;
SELECT ALL rt0.c2, rt0.c3 FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c4)))>((- (rt0.c3))))) GROUP BY rt0.c2, rt0.c3 UNION SELECT rt0.c2, rt0.c3 FROM rt0 WHERE ((NOT (((((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c4)))>((- (rt0.c3))))))) GROUP BY rt0.c2, rt0.c3 UNION SELECT rt0.c2, rt0.c3 FROM rt0 WHERE (((((((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c4)))>((- (rt0.c3))))) ISNULL)) GROUP BY rt0.c2, rt0.c3;
SELECT rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3;
SELECT rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c4;
SELECT rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c4 HAVING 0Xffffffffa3e44d0d UNION ALL SELECT ALL rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c4 HAVING (NOT (0Xffffffffa3e44d0d)) UNION ALL SELECT rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c4 HAVING ((0xffffffffa3e44d0d) ISNULL);
SELECT rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c4;
SELECT rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c4 HAVING 0Xffffffffa3e44d0d UNION ALL SELECT ALL rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c4 HAVING (NOT (0Xffffffffa3e44d0d)) UNION ALL SELECT rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c4 HAVING ((0xffffffffa3e44d0d) ISNULL);
SELECT rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c4;
SELECT * FROM v0, vt0;
SELECT ALL * FROM v0, vt0 WHERE (CASE (((vt0.lid)) NOT BETWEEN ((vt0.c1)) AND ((v0.c0)))  WHEN CASE WHEN vt0.c2 THEN vt0.c1 END THEN (vt0.c2 IN (vt0.c0, v0.c0)) WHEN (NOT (vt0.c1)) THEN ((vt0.c1)&(vt0.c1)) WHEN CAST(-9.71429362E8 AS NUMERIC) THEN vt0.c1 COLLATE NOCASE WHEN ((((vt0.c2)OR(vt0.lid)))OR(vt0.c1)) THEN ((vt0.lid)>=(vt0.c2)) WHEN 'r.t琿l[0>' THEN (~ (vt0.c2)) ELSE (v0.c0 IN (vt0.lid, vt0.c1)) END) UNION ALL SELECT ALL * FROM v0, vt0 WHERE ((NOT (CASE (((vt0.lid)) NOT BETWEEN ((vt0.c1)) AND ((v0.c0)))  WHEN CASE WHEN vt0.c2 THEN vt0.c1 END THEN (vt0.c2 IN (vt0.c0, v0.c0)) WHEN (NOT (vt0.c1)) THEN ((vt0.c1)&(vt0.c1)) WHEN CAST(-9.71429362E8 AS NUMERIC) THEN vt0.c1 COLLATE NOCASE WHEN ((((vt0.c2)OR(vt0.lid)))OR(vt0.c1)) THEN ((vt0.lid)>=(vt0.c2)) WHEN 'r.t琿l[0>' THEN (~ (vt0.c2)) ELSE (v0.c0 IN (vt0.lid, vt0.c1)) END))) UNION ALL SELECT ALL * FROM v0, vt0 WHERE (((CASE (((vt0.lid)) NOT BETWEEN ((vt0.c1)) AND ((v0.c0)))  WHEN CASE WHEN vt0.c2 THEN vt0.c1 END THEN (vt0.c2 IN (vt0.c0, v0.c0)) WHEN (NOT (vt0.c1)) THEN ((vt0.c1)&(vt0.c1)) WHEN CAST(-9.71429362E8 AS NUMERIC) THEN vt0.c1 COLLATE NOCASE WHEN ((((vt0.c2)OR(vt0.lid)))OR(vt0.c1)) THEN ((vt0.lid)>=(vt0.c2)) WHEN 'r.t琿l[0>' THEN (~ (vt0.c2)) ELSE (v0.c0 IN (vt0.lid, vt0.c1)) END) ISNULL));
SELECT * FROM v0, vt0;
SELECT DISTINCT rt0.c0, v0.c0, vt0.c2, rt0.c3 FROM vt0, v0, rt0;
SELECT DISTINCT rt0.c0, v0.c0, vt0.c2, rt0.c3 FROM vt0, v0, rt0 WHERE (((x'')-((x'' IN ())))) UNION SELECT DISTINCT rt0.c0, v0.c0, vt0.c2, rt0.c3 FROM vt0, v0, rt0 WHERE ((NOT (((x'')-((x'' IN ())))))) UNION SELECT DISTINCT rt0.c0, v0.c0, vt0.c2, rt0.c3 FROM vt0, v0, rt0 WHERE (((((x'')-((x'' IN ())))) ISNULL));
SELECT DISTINCT rt0.c0, v0.c0, vt0.c2, rt0.c3 FROM vt0, v0, rt0;
SELECT ALL rt0.c2, rt0.c1, vt0.c1, vt0.c2, rt0.c3, rt0.c0, v0.c0, vt0.lid, vt0.c0, rt0.c4 FROM rt0, vt0 LEFT OUTER JOIN v0 ON vt0.c0 GROUP BY rt0.c2, rt0.c1, vt0.c1, vt0.c2, rt0.c3, rt0.c0, v0.c0, vt0.lid, vt0.c0, rt0.c4;
SELECT ALL rt0.c2, rt0.c1, vt0.c1, vt0.c2, rt0.c3, rt0.c0, v0.c0, vt0.lid, vt0.c0, rt0.c4 FROM rt0, vt0 LEFT OUTER JOIN v0 ON vt0.c0 WHERE ((((rt0.c4 IN ())) NOT NULL)) GROUP BY rt0.c2, rt0.c1, vt0.c1, vt0.c2, rt0.c3, rt0.c0, v0.c0, vt0.lid, vt0.c0, rt0.c4 UNION SELECT ALL rt0.c2, rt0.c1, vt0.c1, vt0.c2, rt0.c3, rt0.c0, v0.c0, vt0.lid, vt0.c0, rt0.c4 FROM rt0, vt0 LEFT OUTER JOIN v0 ON vt0.c0 WHERE ((NOT ((((rt0.c4 IN ())) NOT NULL)))) GROUP BY rt0.c2, rt0.c1, vt0.c1, vt0.c2, rt0.c3, rt0.c0, v0.c0, vt0.lid, vt0.c0, rt0.c4 UNION SELECT rt0.c2, rt0.c1, vt0.c1, vt0.c2, rt0.c3, rt0.c0, v0.c0, vt0.lid, vt0.c0, rt0.c4 FROM rt0, vt0 LEFT OUTER JOIN v0 ON vt0.c0 WHERE ((((((rt0.c4 IN ())) NOT NULL)) ISNULL)) GROUP BY rt0.c2, rt0.c1, vt0.c1, vt0.c2, rt0.c3, rt0.c0, v0.c0, vt0.lid, vt0.c0, rt0.c4;
SELECT ALL rt0.c2, rt0.c1, vt0.c1, vt0.c2, rt0.c3, rt0.c0, v0.c0, vt0.lid, vt0.c0, rt0.c4 FROM rt0, vt0 LEFT OUTER JOIN v0 ON vt0.c0 GROUP BY rt0.c2, rt0.c1, vt0.c1, vt0.c2, rt0.c3, rt0.c0, v0.c0, vt0.lid, vt0.c0, rt0.c4;
SELECT rt0.c2, vt0.c2, vt0.c0, rt0.c3, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c2, vt0.c0, rt0.c3, vt0.c1;
SELECT rt0.c2, vt0.c2, vt0.c0, rt0.c3, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c2, vt0.c0, rt0.c3, vt0.c1 HAVING TOTAL(MAX(vt0.c1)) UNION ALL SELECT rt0.c2, vt0.c2, vt0.c0, rt0.c3, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c2, vt0.c0, rt0.c3, vt0.c1 HAVING (NOT (TOTAL(MAX(vt0.c1)))) UNION ALL SELECT rt0.c2, vt0.c2, vt0.c0, rt0.c3, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c2, vt0.c0, rt0.c3, vt0.c1 HAVING ((TOTAL(MAX(vt0.c1))) ISNULL);
SELECT rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM v0, rt0;
SELECT rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM v0, rt0 WHERE (((rt0.c4)>=((rt0.c0 IN ())))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM v0, rt0 WHERE ((NOT (((rt0.c4)>=((rt0.c0 IN ())))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM v0, rt0 WHERE (((((rt0.c4)>=((rt0.c0 IN ())))) ISNULL));
SELECT rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM v0, rt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (((CAST(rt0.c4 AS REAL)) NOT NULL)) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (((CAST(rt0.c4 AS REAL)) NOT NULL)))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((((CAST(rt0.c4 AS REAL)) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT ALL rt0.c1, rt0.c2, v0.c0, rt0.c0, rt0.c4 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, v0.c0, rt0.c0, rt0.c4;
SELECT rt0.c1, rt0.c2, v0.c0, rt0.c0, rt0.c4 FROM v0, rt0 NOT INDEXED WHERE (((((rt0.c4)OR(rt0.c2)))AND(rt0.c1)) COLLATE BINARY) GROUP BY rt0.c1, rt0.c2, v0.c0, rt0.c0, rt0.c4 UNION SELECT ALL rt0.c1, rt0.c2, v0.c0, rt0.c0, rt0.c4 FROM v0, rt0 WHERE ((NOT (((((rt0.c4)OR(rt0.c2)))AND(rt0.c1)) COLLATE BINARY))) GROUP BY rt0.c1, rt0.c2, v0.c0, rt0.c0, rt0.c4 UNION SELECT ALL rt0.c1, rt0.c2, v0.c0, rt0.c0, rt0.c4 FROM v0, rt0 WHERE (((((((rt0.c4)OR(rt0.c2)))AND(rt0.c1)) COLLATE BINARY) ISNULL)) GROUP BY rt0.c1, rt0.c2, v0.c0, rt0.c0, rt0.c4;
SELECT ALL rt0.c1, rt0.c2, v0.c0, rt0.c0, rt0.c4 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, v0.c0, rt0.c0, rt0.c4;
SELECT ALL vt0.lid, vt0.c2, rt0.c2, vt0.c1, vt0.c0 FROM rt0, vt0, v0 GROUP BY vt0.lid, vt0.c2, rt0.c2, vt0.c1, vt0.c0;
SELECT ALL vt0.lid, vt0.c2, rt0.c2, vt0.c1, vt0.c0 FROM rt0, vt0, v0 GROUP BY vt0.lid, vt0.c2, rt0.c2, vt0.c1, vt0.c0 HAVING MAX(AVG(vt0.c1)) UNION ALL SELECT ALL vt0.lid, vt0.c2, rt0.c2, vt0.c1, vt0.c0 FROM rt0, vt0, v0 GROUP BY vt0.lid, vt0.c2, rt0.c2, vt0.c1, vt0.c0 HAVING (NOT (MAX(AVG(vt0.c1)))) UNION ALL SELECT ALL vt0.lid, vt0.c2, rt0.c2, vt0.c1, vt0.c0 FROM rt0, vt0, v0 GROUP BY vt0.lid, vt0.c2, rt0.c2, vt0.c1, vt0.c0 HAVING ((MAX(AVG(vt0.c1))) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE ((CAST(v0.c0 AS NUMERIC) IN ())) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((CAST(v0.c0 AS NUMERIC) IN ())))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((((CAST(v0.c0 AS NUMERIC) IN ())) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT rt0.c0, vt0.lid, vt0.c0, rt0.c2, rt0.c4, rt0.c1, vt0.c2 FROM rt0, vt0;
SELECT DISTINCT rt0.c0, vt0.lid, vt0.c0, rt0.c2, rt0.c4, rt0.c1, vt0.c2 FROM rt0, vt0 WHERE (CAST(((((vt0.c0)AND(vt0.c0)))AND(rt0.c3)) AS INTEGER)) UNION SELECT DISTINCT rt0.c0, vt0.lid, vt0.c0, rt0.c2, rt0.c4, rt0.c1, vt0.c2 FROM rt0, vt0 WHERE ((NOT (CAST(((((vt0.c0)AND(vt0.c0)))AND(rt0.c3)) AS INTEGER)))) UNION SELECT DISTINCT rt0.c0, vt0.lid, vt0.c0, rt0.c2, rt0.c4, rt0.c1, vt0.c2 FROM rt0, vt0 WHERE (((CAST(((((vt0.c0)AND(vt0.c0)))AND(rt0.c3)) AS INTEGER)) ISNULL));
SELECT DISTINCT rt0.c0, vt0.lid, vt0.c0, rt0.c2, rt0.c4, rt0.c1, vt0.c2 FROM rt0, vt0;
SELECT rt0.c4, v0.c0 FROM rt0 CROSS JOIN vt0 ON 0.9394443942368141 CROSS JOIN v0 ON ((((rt0.c3) NOTNULL)) NOT BETWEEN (0.5528297708070332) AND (CAST(vt0.lid AS BLOB))) GROUP BY rt0.c4, v0.c0;
SELECT rt0.c4, v0.c0 FROM rt0 CROSS JOIN vt0 ON 0.9394443942368141 CROSS JOIN v0 ON ((((rt0.c3) NOTNULL)) NOT BETWEEN (0.5528297708070332) AND (CAST(vt0.lid AS BLOB))) WHERE ((((((((((vt0.c2)AND(NULL)))AND(vt0.c1)))OR(vt0.c0)))OR(v0.c0)) IN ())) GROUP BY rt0.c4, v0.c0 UNION SELECT rt0.c4, v0.c0 FROM rt0 CROSS JOIN vt0 ON 0.9394443942368141 CROSS JOIN v0 ON ((((rt0.c3) NOTNULL)) NOT BETWEEN (0.5528297708070332) AND (CAST(vt0.lid AS BLOB))) WHERE ((NOT ((((((((((vt0.c2)AND(NULL)))AND(vt0.c1)))OR(vt0.c0)))OR(v0.c0)) IN ())))) GROUP BY rt0.c4, v0.c0 UNION SELECT ALL rt0.c4, v0.c0 FROM rt0 CROSS JOIN vt0 ON 0.9394443942368141 CROSS JOIN v0 ON ((((rt0.c3) NOTNULL)) NOT BETWEEN (0.5528297708070332) AND (CAST(vt0.lid AS BLOB))) WHERE ((((((((((((vt0.c2)AND(NULL)))AND(vt0.c1)))OR(vt0.c0)))OR(v0.c0)) IN ())) ISNULL)) GROUP BY rt0.c4, v0.c0;
SELECT rt0.c4, v0.c0 FROM rt0 CROSS JOIN vt0 ON 0.9394443942368141 CROSS JOIN v0 ON ((((rt0.c3) NOTNULL)) NOT BETWEEN (0.5528297708070332) AND (CAST(vt0.lid AS BLOB))) GROUP BY rt0.c4, v0.c0;
SELECT ALL rt0.c2, vt0.c0, rt0.c0, rt0.c1, vt0.c1, v0.c0, rt0.c4, rt0.c3 FROM v0, vt0, rt0 GROUP BY rt0.c2, vt0.c0, rt0.c0, rt0.c1, vt0.c1, v0.c0, rt0.c4, rt0.c3;
SELECT rt0.c2, vt0.c0, rt0.c0, rt0.c1, vt0.c1, v0.c0, rt0.c4, rt0.c3 FROM v0, vt0, rt0 GROUP BY rt0.c2, vt0.c0, rt0.c0, rt0.c1, vt0.c1, v0.c0, rt0.c4, rt0.c3 HAVING (NOT (TOTAL(SUM(COUNT(*))))) UNION ALL SELECT rt0.c2, vt0.c0, rt0.c0, rt0.c1, vt0.c1, v0.c0, rt0.c4, rt0.c3 FROM v0, vt0, rt0 GROUP BY rt0.c2, vt0.c0, rt0.c0, rt0.c1, vt0.c1, v0.c0, rt0.c4, rt0.c3 HAVING (NOT ((NOT (TOTAL(SUM(COUNT(*))))))) UNION ALL SELECT rt0.c2, vt0.c0, rt0.c0, rt0.c1, vt0.c1, v0.c0, rt0.c4, rt0.c3 FROM v0, vt0, rt0 GROUP BY rt0.c2, vt0.c0, rt0.c0, rt0.c1, vt0.c1, v0.c0, rt0.c4, rt0.c3 HAVING (((NOT (TOTAL(SUM(COUNT(*)))))) ISNULL);
SELECT ALL * FROM vt0, v0;
SELECT ALL * FROM vt0, v0 WHERE (((vt0.c2 COLLATE RTRIM)&(CAST(v0.c0 AS INTEGER)))) UNION ALL SELECT ALL * FROM vt0, v0 WHERE ((NOT (((vt0.c2 COLLATE RTRIM)&(CAST(v0.c0 AS INTEGER)))))) UNION ALL SELECT ALL * FROM vt0, v0 WHERE (((((vt0.c2 COLLATE RTRIM)&(CAST(v0.c0 AS INTEGER)))) ISNULL));
SELECT ALL * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (TRIM(((vt0.c0) NOT BETWEEN ('BOH?I') AND (vt0.c2)))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (TRIM(((vt0.c0) NOT BETWEEN ('BOH?I') AND (vt0.c2)))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((TRIM(((vt0.c0) NOT BETWEEN ('BOH?I') AND (vt0.c2)))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT ALL vt0.c2 FROM vt0 GROUP BY vt0.c2;
SELECT vt0.c2 FROM vt0 WHERE (((((((((x'79b1')OR(((vt0.c2)<<(vt0.c2)))))OR(((vt0.c2) IS FALSE))))AND(NULL)))OR(((((vt0.c2)AND(vt0.c2)))OR(vt0.c0))))) GROUP BY vt0.c2 UNION SELECT vt0.c2 FROM vt0 WHERE ((NOT (((((((((x'79b1')OR(((vt0.c2)<<(vt0.c2)))))OR(((vt0.c2) IS FALSE))))AND(NULL)))OR(((((vt0.c2)AND(vt0.c2)))OR(vt0.c0))))))) GROUP BY vt0.c2 UNION SELECT ALL vt0.c2 FROM vt0 WHERE (((((((((((x'79b1')OR(((vt0.c2)<<(vt0.c2)))))OR(((vt0.c2) IS FALSE))))AND(NULL)))OR(((((vt0.c2)AND(vt0.c2)))OR(vt0.c0))))) ISNULL)) GROUP BY vt0.c2;
SELECT ALL vt0.c2 FROM vt0 GROUP BY vt0.c2;
SELECT ALL rt0.c1, rt0.c4, vt0.c1, vt0.c0, vt0.c2, v0.c0, rt0.c3 FROM v0, rt0, vt0 GROUP BY rt0.c1, rt0.c4, vt0.c1, vt0.c0, vt0.c2, v0.c0, rt0.c3;
SELECT rt0.c1, rt0.c4, vt0.c1, vt0.c0, vt0.c2, v0.c0, rt0.c3 FROM v0, rt0, vt0 GROUP BY rt0.c1, rt0.c4, vt0.c1, vt0.c0, vt0.c2, v0.c0, rt0.c3 HAVING x'' UNION ALL SELECT ALL rt0.c1, rt0.c4, vt0.c1, vt0.c0, vt0.c2, v0.c0, rt0.c3 FROM v0, rt0, vt0 GROUP BY rt0.c1, rt0.c4, vt0.c1, vt0.c0, vt0.c2, v0.c0, rt0.c3 HAVING (NOT (x'')) UNION ALL SELECT rt0.c1, rt0.c4, vt0.c1, vt0.c0, vt0.c2, v0.c0, rt0.c3 FROM v0, rt0, vt0 GROUP BY rt0.c1, rt0.c4, vt0.c1, vt0.c0, vt0.c2, v0.c0, rt0.c3 HAVING ((x'') ISNULL);
SELECT ALL rt0.c1, rt0.c4, vt0.c1, vt0.c0, vt0.c2, v0.c0, rt0.c3 FROM v0, rt0, vt0 GROUP BY rt0.c1, rt0.c4, vt0.c1, vt0.c0, vt0.c2, v0.c0, rt0.c3;
SELECT rt0.c1, rt0.c4, vt0.c1, vt0.c0, vt0.c2, v0.c0, rt0.c3 FROM v0, rt0, vt0 GROUP BY rt0.c1, rt0.c4, vt0.c1, vt0.c0, vt0.c2, v0.c0, rt0.c3 HAVING x'' UNION ALL SELECT ALL rt0.c1, rt0.c4, vt0.c1, vt0.c0, vt0.c2, v0.c0, rt0.c3 FROM v0, rt0, vt0 GROUP BY rt0.c1, rt0.c4, vt0.c1, vt0.c0, vt0.c2, v0.c0, rt0.c3 HAVING (NOT (x'')) UNION ALL SELECT rt0.c1, rt0.c4, vt0.c1, vt0.c0, vt0.c2, v0.c0, rt0.c3 FROM v0, rt0, vt0 GROUP BY rt0.c1, rt0.c4, vt0.c1, vt0.c0, vt0.c2, v0.c0, rt0.c3 HAVING ((x'') ISNULL);
SELECT ALL rt0.c1, rt0.c4, vt0.c1, vt0.c0, vt0.c2, v0.c0, rt0.c3 FROM v0, rt0, vt0 GROUP BY rt0.c1, rt0.c4, vt0.c1, vt0.c0, vt0.c2, v0.c0, rt0.c3;
SELECT rt0.c1, rt0.c4, rt0.c0 FROM rt0;
SELECT ALL rt0.c1, rt0.c4, rt0.c0 FROM rt0 NOT INDEXED WHERE ((((((rt0.c2) NOT NULL)))!=((rt0.c1)))) UNION ALL SELECT rt0.c1, rt0.c4, rt0.c0 FROM rt0 WHERE ((NOT ((((((rt0.c2) NOT NULL)))<>((rt0.c1)))))) UNION ALL SELECT ALL rt0.c1, rt0.c4, rt0.c0 FROM rt0 WHERE ((((((((rt0.c2) NOT NULL)))!=((rt0.c1)))) ISNULL));
SELECT rt0.c1, rt0.c4, rt0.c0 FROM rt0;
SELECT DISTINCT vt0.c1, rt0.c0, rt0.c1, v0.c0, rt0.c4, rt0.c2, vt0.lid, rt0.c3 FROM v0, rt0, vt0;
SELECT DISTINCT vt0.c1, rt0.c0, rt0.c1, v0.c0, rt0.c4, rt0.c2, vt0.lid, rt0.c3 FROM v0, rt0, vt0 WHERE (((x'') NOT BETWEEN (vt0.c1) AND (((vt0.c1) IS TRUE)))) UNION SELECT DISTINCT vt0.c1, rt0.c0, rt0.c1, v0.c0, rt0.c4, rt0.c2, vt0.lid, rt0.c3 FROM v0, rt0, vt0 WHERE ((NOT (((x'') NOT BETWEEN (vt0.c1) AND (((vt0.c1) IS TRUE)))))) UNION SELECT DISTINCT vt0.c1, rt0.c0, rt0.c1, v0.c0, rt0.c4, rt0.c2, vt0.lid, rt0.c3 FROM v0, rt0, vt0 WHERE (((((x'') NOT BETWEEN (vt0.c1) AND (((vt0.c1) IS TRUE)))) ISNULL));
SELECT DISTINCT vt0.c1, rt0.c0, rt0.c1, v0.c0, rt0.c4, rt0.c2, vt0.lid, rt0.c3 FROM v0, rt0, vt0;
SELECT vt0.lid, vt0.c0, vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c0, vt0.c2, vt0.c1;
SELECT ALL vt0.lid, vt0.c0, vt0.c2, vt0.c1 FROM vt0 WHERE (((((((vt0.lid)/(vt0.c2)))OR(CAST(vt0.c0 AS NUMERIC))))OR(vt0.c0 COLLATE RTRIM))) GROUP BY vt0.lid, vt0.c0, vt0.c2, vt0.c1 UNION SELECT vt0.lid, vt0.c0, vt0.c2, vt0.c1 FROM vt0 WHERE ((NOT (((((((vt0.lid)/(vt0.c2)))OR(CAST(vt0.c0 AS NUMERIC))))OR(vt0.c0 COLLATE RTRIM))))) GROUP BY vt0.lid, vt0.c0, vt0.c2, vt0.c1 UNION SELECT vt0.lid, vt0.c0, vt0.c2, vt0.c1 FROM vt0 WHERE (((((((((vt0.lid)/(vt0.c2)))OR(CAST(vt0.c0 AS NUMERIC))))OR(vt0.c0 COLLATE RTRIM))) ISNULL)) GROUP BY vt0.lid, vt0.c0, vt0.c2, vt0.c1;
SELECT vt0.lid, vt0.c0, vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c0, vt0.c2, vt0.c1;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING GROUP_CONCAT(((((((((SUM(MAX(SUM(MIN(COUNT(*))))))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(x'b953'))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (GROUP_CONCAT(((((((((SUM(MAX(SUM(MIN(COUNT(*))))))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(x'b953'))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((GROUP_CONCAT(((((((((SUM(MAX(SUM(MIN(COUNT(*))))))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(x'b953')))) ISNULL);
SELECT ALL rt0.c4, vt0.c2, vt0.c1, rt0.c0, vt0.c0, vt0.lid, rt0.c3, rt0.c1, v0.c0, rt0.c2 FROM v0, vt0, rt0;
SELECT rt0.c4, vt0.c2, vt0.c1, rt0.c0, vt0.c0, vt0.lid, rt0.c3, rt0.c1, v0.c0, rt0.c2 FROM v0, vt0, rt0 WHERE (((((v0.c0, '', '757710912', rt0.c2, rt0.c2))<=((vt0.c1, vt0.c1, vt0.c0, '1459136266', ''))) IN ())) UNION ALL SELECT rt0.c4, vt0.c2, vt0.c1, rt0.c0, vt0.c0, vt0.lid, rt0.c3, rt0.c1, v0.c0, rt0.c2 FROM v0, vt0, rt0 WHERE ((NOT (((((v0.c0, '', '757710912', rt0.c2, rt0.c2))<=((vt0.c1, vt0.c1, vt0.c0, '1459136266', ''))) IN ())))) UNION ALL SELECT ALL rt0.c4, vt0.c2, vt0.c1, rt0.c0, vt0.c0, vt0.lid, rt0.c3, rt0.c1, v0.c0, rt0.c2 FROM v0, vt0, rt0 WHERE (((((((v0.c0, '', '757710912', rt0.c2, rt0.c2))<=((vt0.c1, vt0.c1, vt0.c0, '1459136266', ''))) IN ())) ISNULL));
SELECT ALL rt0.c4, vt0.c2, vt0.c1, rt0.c0, vt0.c0, vt0.lid, rt0.c3, rt0.c1, v0.c0, rt0.c2 FROM v0, vt0, rt0;
SELECT DISTINCT vt0.c0, rt0.c4, vt0.c2 FROM v0, rt0 CROSS JOIN vt0 ON (~ ((((rt0.c2, 155683935, vt0.c2)) BETWEEN ((rt0.c3, rt0.c4, NULL)) AND ((vt0.c2, v0.c0, rt0.c4)))));
SELECT DISTINCT vt0.c0, rt0.c4, vt0.c2 FROM v0, rt0 CROSS JOIN vt0 ON (~ ((((rt0.c2, 155683935, vt0.c2)) BETWEEN ((rt0.c3, rt0.c4, NULL)) AND ((vt0.c2, v0.c0, rt0.c4))))) WHERE ((+ (((0.9211071456208156)>=(v0.c0))))) UNION SELECT DISTINCT vt0.c0, rt0.c4, vt0.c2 FROM v0, rt0 CROSS JOIN vt0 ON (~ ((((rt0.c2, 155683935, vt0.c2)) BETWEEN ((rt0.c3, rt0.c4, NULL)) AND ((vt0.c2, v0.c0, rt0.c4))))) WHERE ((NOT ((+ (((0.9211071456208156)>=(v0.c0))))))) UNION SELECT DISTINCT vt0.c0, rt0.c4, vt0.c2 FROM v0, rt0 CROSS JOIN vt0 ON (~ ((((rt0.c2, 155683935, vt0.c2)) BETWEEN ((rt0.c3, rt0.c4, NULL)) AND ((vt0.c2, v0.c0, rt0.c4))))) WHERE ((((+ (((0.9211071456208156)>=(v0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c4, vt0.c2 FROM v0, rt0 CROSS JOIN vt0 ON (~ ((((rt0.c2, 155683935, vt0.c2)) BETWEEN ((rt0.c3, rt0.c4, NULL)) AND ((vt0.c2, v0.c0, rt0.c4)))));
SELECT rt0.c1, v0.c0, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c1, v0.c0, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, v0.c0, rt0.c0, rt0.c2 FROM v0, rt0 WHERE (CASE WHEN 0.21218953286846698 THEN (~ (rt0.c2)) ELSE (+ (rt0.c4)) END) GROUP BY rt0.c1, v0.c0, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, v0.c0, rt0.c0, rt0.c2 FROM v0, rt0 WHERE ((NOT (CASE WHEN 0.21218953286846698 THEN (~ (rt0.c2)) ELSE (+ (rt0.c4)) END))) GROUP BY rt0.c1, v0.c0, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, v0.c0, rt0.c0, rt0.c2 FROM v0, rt0 WHERE (((CASE WHEN 0.21218953286846698 THEN (~ (rt0.c2)) ELSE (+ (rt0.c4)) END) ISNULL)) GROUP BY rt0.c1, v0.c0, rt0.c0, rt0.c2;
SELECT rt0.c1, v0.c0, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c1, v0.c0, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c3, rt0.c2 FROM rt0 INNER JOIN v0 ON (~ (NULL)) GROUP BY rt0.c1, rt0.c3, rt0.c2;
SELECT ALL rt0.c1, rt0.c3, rt0.c2 FROM rt0 INNER JOIN v0 ON (~ (NULL)) GROUP BY rt0.c1, rt0.c3, rt0.c2 HAVING (~ (MIN(COUNT(*)))) UNION ALL SELECT rt0.c1, rt0.c3, rt0.c2 FROM rt0 INNER JOIN v0 ON (~ (NULL)) GROUP BY rt0.c1, rt0.c3, rt0.c2 HAVING (NOT ((~ (MIN(COUNT(*)))))) UNION ALL SELECT rt0.c1, rt0.c3, rt0.c2 FROM rt0 INNER JOIN v0 ON (~ (NULL)) GROUP BY rt0.c1, rt0.c3, rt0.c2 HAVING (((~ (MIN(COUNT(*))))) ISNULL);
SELECT rt0.c2, rt0.c0, rt0.c1, vt0.lid FROM vt0 INNER JOIN rt0 ON ((vt0.lid) NOT BETWEEN (rt0.c4) AND (load_extension(rt0.c1, vt0.lid)));
SELECT rt0.c2, rt0.c0, rt0.c1, vt0.lid FROM vt0 INNER JOIN rt0 ON ((vt0.lid) NOT BETWEEN (rt0.c4) AND (load_extension(rt0.c1, vt0.lid))) WHERE ((CAST(rt0.c3 AS BLOB) IN ())) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1, vt0.lid FROM vt0 INNER JOIN rt0 ON ((vt0.lid) NOT BETWEEN (rt0.c4) AND (load_extension(rt0.c1, vt0.lid))) WHERE ((NOT ((CAST(rt0.c3 AS BLOB) IN ())))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt0.lid FROM vt0 INNER JOIN rt0 ON ((vt0.lid) NOT BETWEEN (rt0.c4) AND (load_extension(rt0.c1, vt0.lid))) WHERE ((((CAST(rt0.c3 AS BLOB) IN ())) ISNULL));
SELECT rt0.c2, rt0.c0, rt0.c1, vt0.lid FROM vt0 INNER JOIN rt0 ON ((vt0.lid) NOT BETWEEN (rt0.c4) AND (load_extension(rt0.c1, vt0.lid)));
SELECT DISTINCT vt0.c1, vt0.lid, vt0.c2 FROM vt0;
SELECT DISTINCT vt0.c1, vt0.lid, vt0.c2 FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) NOT BETWEEN ((vt0.lid IN ())) AND (vt0.lid COLLATE NOCASE))) UNION SELECT DISTINCT vt0.c1, vt0.lid, vt0.c2 FROM vt0 WHERE ((NOT (((vt0.c0 COLLATE NOCASE) NOT BETWEEN ((vt0.lid IN ())) AND (vt0.lid COLLATE NOCASE))))) UNION SELECT DISTINCT vt0.c1, vt0.lid, vt0.c2 FROM vt0 WHERE (((((vt0.c0 COLLATE NOCASE) NOT BETWEEN ((vt0.lid IN ())) AND (vt0.lid COLLATE NOCASE))) ISNULL));
SELECT DISTINCT vt0.c1, vt0.lid, vt0.c2 FROM vt0;
SELECT vt0.c0, v0.c0, rt0.c2, rt0.c3, vt0.c1 FROM rt0, v0, vt0 GROUP BY vt0.c0, v0.c0, rt0.c2, rt0.c3, vt0.c1;
SELECT ALL vt0.c0, v0.c0, rt0.c2, rt0.c3, vt0.c1 FROM rt0, v0, vt0 WHERE (CASE WHEN CASE NULL  WHEN x'' THEN rt0.c3 END THEN ((vt0.c1)<(vt0.c2)) ELSE (NOT (vt0.lid)) END) GROUP BY vt0.c0, v0.c0, rt0.c2, rt0.c3, vt0.c1 UNION SELECT vt0.c0, v0.c0, rt0.c2, rt0.c3, vt0.c1 FROM rt0, v0, vt0 WHERE ((NOT (CASE WHEN CASE NULL  WHEN x'' THEN rt0.c3 END THEN ((vt0.c1)<(vt0.c2)) ELSE (NOT (vt0.lid)) END))) GROUP BY vt0.c0, v0.c0, rt0.c2, rt0.c3, vt0.c1 UNION SELECT vt0.c0, v0.c0, rt0.c2, rt0.c3, vt0.c1 FROM rt0, v0, vt0 WHERE (((CASE WHEN CASE NULL  WHEN x'' THEN rt0.c3 END THEN ((vt0.c1)<(vt0.c2)) ELSE (NOT (vt0.lid)) END) ISNULL)) GROUP BY vt0.c0, v0.c0, rt0.c2, rt0.c3, vt0.c1;
SELECT vt0.c0, v0.c0, rt0.c2, rt0.c3, vt0.c1 FROM rt0, v0, vt0 GROUP BY vt0.c0, v0.c0, rt0.c2, rt0.c3, vt0.c1;
SELECT vt0.c1, rt0.c3, vt0.c0, rt0.c4, v0.c0, rt0.c1, vt0.lid, vt0.c2, rt0.c0 FROM v0, vt0, rt0 GROUP BY vt0.c1, rt0.c3, vt0.c0, rt0.c4, v0.c0, rt0.c1, vt0.lid, vt0.c2, rt0.c0;
SELECT ALL vt0.c1, rt0.c3, vt0.c0, rt0.c4, v0.c0, rt0.c1, vt0.lid, vt0.c2, rt0.c0 FROM v0, vt0, rt0 GROUP BY vt0.c1, rt0.c3, vt0.c0, rt0.c4, v0.c0, rt0.c1, vt0.lid, vt0.c2, rt0.c0 HAVING TOTAL(GROUP_CONCAT(COUNT(*))) UNION ALL SELECT ALL vt0.c1, rt0.c3, vt0.c0, rt0.c4, v0.c0, rt0.c1, vt0.lid, vt0.c2, rt0.c0 FROM v0, vt0, rt0 GROUP BY vt0.c1, rt0.c3, vt0.c0, rt0.c4, v0.c0, rt0.c1, vt0.lid, vt0.c2, rt0.c0 HAVING (NOT (TOTAL(GROUP_CONCAT(COUNT(*))))) UNION ALL SELECT vt0.c1, rt0.c3, vt0.c0, rt0.c4, v0.c0, rt0.c1, vt0.lid, vt0.c2, rt0.c0 FROM v0, vt0 NOT INDEXED, rt0 GROUP BY vt0.c1, rt0.c3, vt0.c0, rt0.c4, v0.c0, rt0.c1, vt0.lid, vt0.c2, rt0.c0 HAVING ((TOTAL(GROUP_CONCAT(COUNT(*)))) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (x'') UNION ALL SELECT * FROM vt0 WHERE ((NOT (x''))) UNION ALL SELECT * FROM vt0 WHERE (((x'') ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM v0, vt0, rt0;
SELECT DISTINCT * FROM v0, vt0, rt0 WHERE ('') UNION SELECT DISTINCT * FROM v0, vt0 NOT INDEXED, rt0 WHERE ((NOT (''))) UNION SELECT DISTINCT * FROM v0, vt0, rt0 WHERE ((('') ISNULL));
SELECT DISTINCT * FROM v0, vt0, rt0;
SELECT ALL rt0.c4, vt0.c2 FROM rt0, vt0, v0 GROUP BY rt0.c4, vt0.c2;
SELECT rt0.c4, vt0.c2 FROM rt0, vt0, v0 WHERE (((CAST(vt0.c0 AS BLOB))&(CASE vt0.c2  WHEN rt0.c2 THEN rt0.c3 WHEN NULL THEN vt0.lid WHEN vt0.c2 THEN rt0.c2 END))) GROUP BY rt0.c4, vt0.c2 UNION SELECT rt0.c4, vt0.c2 FROM rt0, vt0, v0 WHERE ((NOT (((CAST(vt0.c0 AS BLOB))&(CASE vt0.c2  WHEN rt0.c2 THEN rt0.c3 WHEN NULL THEN vt0.lid WHEN vt0.c2 THEN rt0.c2 END))))) GROUP BY rt0.c4, vt0.c2 UNION SELECT ALL rt0.c4, vt0.c2 FROM rt0, vt0, v0 WHERE (((((CAST(vt0.c0 AS BLOB))&(CASE vt0.c2  WHEN rt0.c2 THEN rt0.c3 WHEN NULL THEN vt0.lid WHEN vt0.c2 THEN rt0.c2 END))) ISNULL)) GROUP BY rt0.c4, vt0.c2;
SELECT ALL rt0.c4, vt0.c2 FROM rt0, vt0, v0 GROUP BY rt0.c4, vt0.c2;
SELECT rt0.c3, rt0.c0, rt0.c2, vt0.c0 FROM vt0 CROSS JOIN rt0 ON ((vt0.c1)IS(rt0.c0)) COLLATE NOCASE GROUP BY rt0.c3, rt0.c0, rt0.c2, vt0.c0;
SELECT rt0.c3, rt0.c0, rt0.c2, vt0.c0 FROM vt0 CROSS JOIN rt0 ON ((vt0.c1)IS(rt0.c0)) COLLATE NOCASE GROUP BY rt0.c3, rt0.c0, rt0.c2, vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c2, vt0.c0 FROM vt0 CROSS JOIN rt0 ON ((vt0.c1)IS(rt0.c0)) COLLATE NOCASE GROUP BY rt0.c3, rt0.c0, rt0.c2, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c2, vt0.c0 FROM vt0 CROSS JOIN rt0 ON ((vt0.c1)IS(rt0.c0)) COLLATE NOCASE GROUP BY rt0.c3, rt0.c0, rt0.c2, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c3, rt0.c0, rt0.c2, vt0.c0 FROM vt0 CROSS JOIN rt0 ON ((vt0.c1)IS(rt0.c0)) COLLATE NOCASE GROUP BY rt0.c3, rt0.c0, rt0.c2, vt0.c0;
SELECT rt0.c3, rt0.c0, rt0.c2, vt0.c0 FROM vt0 CROSS JOIN rt0 ON ((vt0.c1)IS(rt0.c0)) COLLATE NOCASE GROUP BY rt0.c3, rt0.c0, rt0.c2, vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c2, vt0.c0 FROM vt0 CROSS JOIN rt0 ON ((vt0.c1)IS(rt0.c0)) COLLATE NOCASE GROUP BY rt0.c3, rt0.c0, rt0.c2, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c2, vt0.c0 FROM vt0 CROSS JOIN rt0 ON ((vt0.c1)IS(rt0.c0)) COLLATE NOCASE GROUP BY rt0.c3, rt0.c0, rt0.c2, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c3, rt0.c0, rt0.c2, vt0.c0 FROM vt0 CROSS JOIN rt0 ON ((vt0.c1)IS(rt0.c0)) COLLATE NOCASE GROUP BY rt0.c3, rt0.c0, rt0.c2, vt0.c0;
SELECT ALL vt0.c1, vt0.c2, vt0.c0, vt0.lid FROM vt0;
SELECT vt0.c1, vt0.c2, vt0.c0, vt0.lid FROM vt0 WHERE (CAST(((vt0.c2) BETWEEN (vt0.c0) AND (vt0.lid)) AS TEXT)) UNION ALL SELECT vt0.c1, vt0.c2, vt0.c0, vt0.lid FROM vt0 WHERE ((NOT (CAST(((vt0.c2) BETWEEN (vt0.c0) AND (vt0.lid)) AS TEXT)))) UNION ALL SELECT vt0.c1, vt0.c2, vt0.c0, vt0.lid FROM vt0 WHERE (((CAST(((vt0.c2) BETWEEN (vt0.c0) AND (vt0.lid)) AS TEXT)) ISNULL));
SELECT ALL vt0.c1, vt0.c2, vt0.c0, vt0.lid FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c2 FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c2 FROM vt0 WHERE ((- ((((vt0.lid, vt0.c0, vt0.lid, vt0.lid, vt0.c1))>=((vt0.lid, vt0.c1, vt0.c2, x'5ce0', vt0.lid)))))) UNION SELECT DISTINCT vt0.c1, vt0.c2 FROM vt0 WHERE ((NOT ((- ((((vt0.lid, vt0.c0, vt0.lid, vt0.lid, vt0.c1))>=((vt0.lid, vt0.c1, vt0.c2, x'5ce0', vt0.lid)))))))) UNION SELECT DISTINCT vt0.c1, vt0.c2 FROM vt0 WHERE ((((- ((((vt0.lid, vt0.c0, vt0.lid, vt0.lid, vt0.c1))>=((vt0.lid, vt0.c1, vt0.c2, x'5ce0', vt0.lid)))))) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c2 FROM vt0;
SELECT rt0.c1, vt0.c0, rt0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c1, vt0.c0, rt0.c0;
SELECT ALL rt0.c1, vt0.c0, rt0.c0 FROM rt0, vt0, v0 WHERE (CAST((NOT (rt0.c2)) AS NUMERIC)) GROUP BY rt0.c1, vt0.c0, rt0.c0 UNION SELECT ALL rt0.c1, vt0.c0, rt0.c0 FROM rt0, vt0, v0 WHERE ((NOT (CAST((NOT (rt0.c2)) AS NUMERIC)))) GROUP BY rt0.c1, vt0.c0, rt0.c0 UNION SELECT ALL rt0.c1, vt0.c0, rt0.c0 FROM rt0, vt0, v0 WHERE (((CAST((NOT (rt0.c2)) AS NUMERIC)) ISNULL)) GROUP BY rt0.c1, vt0.c0, rt0.c0;
SELECT rt0.c1, vt0.c0, rt0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c1, vt0.c0, rt0.c0;
SELECT ALL rt0.c3, rt0.c1, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c4;
SELECT rt0.c3, rt0.c1, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c4 HAVING TRIM(DISTINCT (MIN(SUM(rt0.c3)) IN (rt0.c4))) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c4 HAVING (NOT (TRIM(DISTINCT (MIN(SUM(rt0.c3)) IN (rt0.c4))))) UNION ALL SELECT rt0.c3, rt0.c1, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c4 HAVING ((TRIM(DISTINCT (MIN(SUM(rt0.c3)) IN (rt0.c4)))) ISNULL);
SELECT * FROM v0, rt0;
SELECT * FROM v0, rt0 WHERE (((((((v0.c0) NOTNULL))OR(CASE WHEN rt0.c0 THEN v0.c0 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c0 END)))OR(rt0.c2))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((NOT (((((((v0.c0) NOTNULL))OR(CASE WHEN rt0.c0 THEN v0.c0 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c0 END)))OR(rt0.c2))))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE (((((((((v0.c0) NOTNULL))OR(CASE WHEN rt0.c0 THEN v0.c0 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c0 END)))OR(rt0.c2))) ISNULL));
SELECT * FROM v0, rt0;
SELECT DISTINCT rt0.c4 FROM rt0;
SELECT DISTINCT rt0.c4 FROM rt0 WHERE (CASE WHEN HEX(rt0.c0) THEN (- (rt0.c3)) WHEN rt0.c2 COLLATE BINARY THEN rt0.c2 WHEN rt0.c3 COLLATE RTRIM THEN rt0.c0 COLLATE RTRIM END) UNION SELECT DISTINCT rt0.c4 FROM rt0 WHERE ((NOT (CASE WHEN HEX(rt0.c0) THEN (- (rt0.c3)) WHEN rt0.c2 COLLATE BINARY THEN rt0.c2 WHEN rt0.c3 COLLATE RTRIM THEN rt0.c0 COLLATE RTRIM END))) UNION SELECT DISTINCT rt0.c4 FROM rt0 WHERE (((CASE WHEN HEX(rt0.c0) THEN (- (rt0.c3)) WHEN rt0.c2 COLLATE BINARY THEN rt0.c2 WHEN rt0.c3 COLLATE RTRIM THEN rt0.c0 COLLATE RTRIM END) ISNULL));
SELECT DISTINCT rt0.c4 FROM rt0;
SELECT ALL rt0.c2, rt0.c1, vt0.c1, rt0.c0, rt0.c4 FROM v0, vt0, rt0 GROUP BY rt0.c2, rt0.c1, vt0.c1, rt0.c0, rt0.c4;
SELECT ALL rt0.c2, rt0.c1, vt0.c1, rt0.c0, rt0.c4 FROM v0, vt0, rt0 WHERE (rt0.c0) GROUP BY rt0.c2, rt0.c1, vt0.c1, rt0.c0, rt0.c4 UNION SELECT rt0.c2, rt0.c1, vt0.c1, rt0.c0, rt0.c4 FROM v0, vt0, rt0 WHERE ((NOT (rt0.c0))) GROUP BY rt0.c2, rt0.c1, vt0.c1, rt0.c0, rt0.c4 UNION SELECT ALL rt0.c2, rt0.c1, vt0.c1, rt0.c0, rt0.c4 FROM v0, vt0, rt0 WHERE (((rt0.c0) ISNULL)) GROUP BY rt0.c2, rt0.c1, vt0.c1, rt0.c0, rt0.c4;
SELECT ALL rt0.c2, rt0.c1, vt0.c1, rt0.c0, rt0.c4 FROM v0, vt0, rt0 GROUP BY rt0.c2, rt0.c1, vt0.c1, rt0.c0, rt0.c4;
SELECT ALL rt0.c4, rt0.c2, vt0.lid, rt0.c3, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c4, rt0.c2, vt0.lid, rt0.c3, vt0.c0;
SELECT rt0.c4, rt0.c2, vt0.lid, rt0.c3, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c4, rt0.c2, vt0.lid, rt0.c3, vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c4, rt0.c2, vt0.lid, rt0.c3, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c4, rt0.c2, vt0.lid, rt0.c3, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c4, rt0.c2, vt0.lid, rt0.c3, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c4, rt0.c2, vt0.lid, rt0.c3, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c4, rt0.c2, vt0.lid, rt0.c3, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c4, rt0.c2, vt0.lid, rt0.c3, vt0.c0;
SELECT rt0.c4, rt0.c2, vt0.lid, rt0.c3, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c4, rt0.c2, vt0.lid, rt0.c3, vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c4, rt0.c2, vt0.lid, rt0.c3, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c4, rt0.c2, vt0.lid, rt0.c3, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c4, rt0.c2, vt0.lid, rt0.c3, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c4, rt0.c2, vt0.lid, rt0.c3, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c4, rt0.c2, vt0.lid, rt0.c3, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c4, rt0.c2, vt0.lid, rt0.c3, vt0.c0;
SELECT ALL vt0.c1, vt0.lid, rt0.c4, rt0.c1, rt0.c0, vt0.c2 FROM rt0 LEFT OUTER JOIN vt0 ON (((((vt0.lid))<=((rt0.c3)))) BETWEEN (CASE WHEN rt0.c1 THEN vt0.lid ELSE rt0.c4 END) AND (((rt0.c0)||(vt0.c2))));
SELECT vt0.c1, vt0.lid, rt0.c4, rt0.c1, rt0.c0, vt0.c2 FROM rt0 LEFT OUTER JOIN vt0 ON (((((vt0.lid))<=((rt0.c3)))) BETWEEN (CASE WHEN rt0.c1 THEN vt0.lid ELSE rt0.c4 END) AND (((rt0.c0)||(vt0.c2)))) WHERE (0.9153179662870351) UNION ALL SELECT vt0.c1, vt0.lid, rt0.c4, rt0.c1, rt0.c0, vt0.c2 FROM rt0 LEFT OUTER JOIN vt0 ON (((((vt0.lid))<=((rt0.c3)))) BETWEEN (CASE WHEN rt0.c1 THEN vt0.lid ELSE rt0.c4 END) AND (((rt0.c0)||(vt0.c2)))) WHERE ((NOT (0.9153179662870351))) UNION ALL SELECT vt0.c1, vt0.lid, rt0.c4, rt0.c1, rt0.c0, vt0.c2 FROM rt0 LEFT OUTER JOIN vt0 ON (((((vt0.lid))<=((rt0.c3)))) BETWEEN (CASE WHEN rt0.c1 THEN vt0.lid ELSE rt0.c4 END) AND (((rt0.c0)||(vt0.c2)))) WHERE (((0.9153179662870351) ISNULL));
SELECT ALL vt0.c1, vt0.lid, rt0.c4, rt0.c1, rt0.c0, vt0.c2 FROM rt0 LEFT OUTER JOIN vt0 ON (((((vt0.lid))<=((rt0.c3)))) BETWEEN (CASE WHEN rt0.c1 THEN vt0.lid ELSE rt0.c4 END) AND (((rt0.c0)||(vt0.c2))));
SELECT DISTINCT rt0.c0, vt0.c1, rt0.c3, v0.c0 FROM vt0, v0, rt0;
SELECT DISTINCT rt0.c0, vt0.c1, rt0.c3, v0.c0 FROM vt0, v0, rt0 WHERE (((((('-1950868088'))<((vt0.c0)))) IS TRUE)) UNION SELECT DISTINCT rt0.c0, vt0.c1, rt0.c3, v0.c0 FROM vt0, v0, rt0 WHERE ((NOT (((((('-1950868088'))<((vt0.c0)))) IS TRUE)))) UNION SELECT DISTINCT rt0.c0, vt0.c1, rt0.c3, v0.c0 FROM vt0, v0, rt0 WHERE (((((((('-1950868088'))<((vt0.c0)))) IS TRUE)) ISNULL));
SELECT DISTINCT rt0.c0, vt0.c1, rt0.c3, v0.c0 FROM vt0, v0, rt0;
SELECT vt0.lid FROM vt0 GROUP BY vt0.lid;
SELECT vt0.lid FROM vt0 WHERE (CAST(vt0.c1 COLLATE NOCASE AS BLOB)) GROUP BY vt0.lid UNION SELECT vt0.lid FROM vt0 WHERE ((NOT (CAST(vt0.c1 COLLATE NOCASE AS BLOB)))) GROUP BY vt0.lid UNION SELECT ALL vt0.lid FROM vt0 WHERE (((CAST(vt0.c1 COLLATE NOCASE AS BLOB)) ISNULL)) GROUP BY vt0.lid;
SELECT vt0.lid FROM vt0 GROUP BY vt0.lid;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MIN(v0.c0)) NOTNULL) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((MIN(v0.c0)) NOTNULL))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((MIN(v0.c0)) NOTNULL)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MIN(v0.c0)) NOTNULL) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((MIN(v0.c0)) NOTNULL))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((MIN(v0.c0)) NOTNULL)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (vt0.lid) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (vt0.lid))) UNION ALL SELECT * FROM vt0 WHERE (((vt0.lid) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM v0 LEFT OUTER JOIN rt0 ON (('723201554')*(x''));
SELECT DISTINCT * FROM v0 LEFT OUTER JOIN rt0 ON (('723201554')*(x'')) WHERE (((((((rt0.c3)AND(rt0.c0)))OR(rt0.c2)))AND((rt0.c3 IN ())))) UNION SELECT DISTINCT * FROM v0 LEFT OUTER JOIN rt0 ON (('723201554')*(x'')) WHERE ((NOT (((((((rt0.c3)AND(rt0.c0)))OR(rt0.c2)))AND((rt0.c3 IN ())))))) UNION SELECT DISTINCT * FROM v0 LEFT OUTER JOIN rt0 ON (('723201554')*(x'')) WHERE (((((((((rt0.c3)AND(rt0.c0)))OR(rt0.c2)))AND((rt0.c3 IN ())))) ISNULL));
SELECT DISTINCT * FROM v0 LEFT OUTER JOIN rt0 ON (('723201554')*(x''));
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((((v0.c0)) NOT BETWEEN (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))) AND (((v0.c0 IN ()))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((v0.c0)) NOT BETWEEN (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))) AND (((v0.c0 IN ()))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((((v0.c0)) NOT BETWEEN (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))) AND (((v0.c0 IN ()))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c2, rt0.c4, rt0.c0, rt0.c1, rt0.c3 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c4, rt0.c0, rt0.c1, rt0.c3;
SELECT rt0.c2, rt0.c4, rt0.c0, rt0.c1, rt0.c3 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c4, rt0.c0, rt0.c1, rt0.c3 HAVING AVG(((((((((GROUP_CONCAT(NULL))OR(MAX(rt0.c4))))OR(rt0.c1)))OR(SUM(vt0.lid))))AND(NULL))) UNION ALL SELECT rt0.c2, rt0.c4, rt0.c0, rt0.c1, rt0.c3 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c4, rt0.c0, rt0.c1, rt0.c3 HAVING (NOT (AVG(((((((((GROUP_CONCAT(NULL))OR(MAX(rt0.c4))))OR(rt0.c1)))OR(SUM(vt0.lid))))AND(NULL))))) UNION ALL SELECT ALL rt0.c2, rt0.c4, rt0.c0, rt0.c1, rt0.c3 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c4, rt0.c0, rt0.c1, rt0.c3 HAVING ((AVG(((((((((GROUP_CONCAT(NULL))OR(MAX(rt0.c4))))OR(rt0.c1)))OR(SUM(vt0.lid))))AND(NULL)))) ISNULL);
SELECT ALL vt0.c1, rt0.c1, vt0.c0, rt0.c3, rt0.c0, vt0.lid, rt0.c4, rt0.c2 FROM vt0 INNER JOIN rt0 ON ((((rt0.c3 IN ())))<((rt0.c0)));
SELECT vt0.c1, rt0.c1, vt0.c0, rt0.c3, rt0.c0, vt0.lid, rt0.c4, rt0.c2 FROM vt0 INNER JOIN rt0 ON ((((rt0.c3 IN ())))<((rt0.c0))) WHERE (NULL) UNION ALL SELECT vt0.c1, rt0.c1, vt0.c0, rt0.c3, rt0.c0, vt0.lid, rt0.c4, rt0.c2 FROM vt0 INNER JOIN rt0 ON ((((rt0.c3 IN ())))<((rt0.c0))) WHERE ((NOT (NULL))) UNION ALL SELECT vt0.c1, rt0.c1, vt0.c0, rt0.c3, rt0.c0, vt0.lid, rt0.c4, rt0.c2 FROM vt0 INNER JOIN rt0 ON ((((rt0.c3 IN ())))<((rt0.c0))) WHERE (((NULL) ISNULL));
SELECT ALL vt0.c1, rt0.c1, vt0.c0, rt0.c3, rt0.c0, vt0.lid, rt0.c4, rt0.c2 FROM vt0 INNER JOIN rt0 ON ((((rt0.c3 IN ())))<((rt0.c0)));
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((- (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((- (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((- (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((~ (v0.c0 COLLATE RTRIM))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((~ (v0.c0 COLLATE RTRIM))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((~ (v0.c0 COLLATE RTRIM))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c0, rt0.c4 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c4;
SELECT rt0.c0, rt0.c4 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c4 HAVING GROUP_CONCAT(CASE AVG(MAX(TOTAL(COUNT(TOTAL(COUNT(*))))))  WHEN COUNT(*) THEN SUM(SUM(GROUP_CONCAT(MIN(NULL)))) END) UNION ALL SELECT rt0.c0, rt0.c4 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c4 HAVING (NOT (GROUP_CONCAT(CASE AVG(MAX(TOTAL(COUNT(TOTAL(COUNT(*))))))  WHEN COUNT(*) THEN SUM(SUM(GROUP_CONCAT(MIN(NULL)))) END))) UNION ALL SELECT rt0.c0, rt0.c4 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c4 HAVING ((GROUP_CONCAT(CASE AVG(MAX(TOTAL(COUNT(TOTAL(COUNT(*))))))  WHEN COUNT(*) THEN SUM(SUM(GROUP_CONCAT(MIN(NULL)))) END)) ISNULL);
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (((x'e5f3')GLOB((v0.c0 IN ())))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((x'e5f3')GLOB((v0.c0 IN ())))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((((x'e5f3')GLOB((v0.c0 IN ())))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE (CAST(v0.c0 AS NUMERIC) COLLATE BINARY) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT (CAST(v0.c0 AS NUMERIC) COLLATE BINARY))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE (((CAST(v0.c0 AS NUMERIC) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT rt0.c4, vt0.c2, rt0.c0, vt0.lid, rt0.c2, vt0.c0, v0.c0, rt0.c1, vt0.c1 FROM rt0, v0, vt0 GROUP BY rt0.c4, vt0.c2, rt0.c0, vt0.lid, rt0.c2, vt0.c0, v0.c0, rt0.c1, vt0.c1;
SELECT rt0.c4, vt0.c2, rt0.c0, vt0.lid, rt0.c2, vt0.c0, v0.c0, rt0.c1, vt0.c1 FROM rt0, v0, vt0 WHERE (((((v0.c0) NOTNULL)) NOT BETWEEN ((vt0.c2 IN ())) AND (x''))) GROUP BY rt0.c4, vt0.c2, rt0.c0, vt0.lid, rt0.c2, vt0.c0, v0.c0, rt0.c1, vt0.c1 UNION SELECT rt0.c4, vt0.c2, rt0.c0, vt0.lid, rt0.c2, vt0.c0, v0.c0, rt0.c1, vt0.c1 FROM rt0, v0, vt0 WHERE ((NOT (((((v0.c0) NOTNULL)) NOT BETWEEN ((vt0.c2 IN ())) AND (x''))))) GROUP BY rt0.c4, vt0.c2, rt0.c0, vt0.lid, rt0.c2, vt0.c0, v0.c0, rt0.c1, vt0.c1 UNION SELECT ALL rt0.c4, vt0.c2, rt0.c0, vt0.lid, rt0.c2, vt0.c0, v0.c0, rt0.c1, vt0.c1 FROM rt0, v0, vt0 WHERE (((((((v0.c0) NOTNULL)) NOT BETWEEN ((vt0.c2 IN ())) AND (x''))) ISNULL)) GROUP BY rt0.c4, vt0.c2, rt0.c0, vt0.lid, rt0.c2, vt0.c0, v0.c0, rt0.c1, vt0.c1;
SELECT rt0.c4, vt0.c2, rt0.c0, vt0.lid, rt0.c2, vt0.c0, v0.c0, rt0.c1, vt0.c1 FROM rt0, v0, vt0 GROUP BY rt0.c4, vt0.c2, rt0.c0, vt0.lid, rt0.c2, vt0.c0, v0.c0, rt0.c1, vt0.c1;
SELECT ALL v0.c0, rt0.c2, rt0.c1, rt0.c3, rt0.c4 FROM v0 RIGHT OUTER JOIN rt0 ON rt0.c1 GROUP BY v0.c0, rt0.c2, rt0.c1, rt0.c3, rt0.c4;
SELECT v0.c0, rt0.c2, rt0.c1, rt0.c3, rt0.c4 FROM v0 RIGHT OUTER JOIN rt0 ON rt0.c1 GROUP BY v0.c0, rt0.c2, rt0.c1, rt0.c3, rt0.c4 HAVING TOTAL(x'') UNION ALL SELECT ALL v0.c0, rt0.c2, rt0.c1, rt0.c3, rt0.c4 FROM v0 RIGHT OUTER JOIN rt0 ON rt0.c1 GROUP BY v0.c0, rt0.c2, rt0.c1, rt0.c3, rt0.c4 HAVING (NOT (TOTAL(x''))) UNION ALL SELECT ALL v0.c0, rt0.c2, rt0.c1, rt0.c3, rt0.c4 FROM v0 RIGHT OUTER JOIN rt0 ON rt0.c1 GROUP BY v0.c0, rt0.c2, rt0.c1, rt0.c3, rt0.c4 HAVING ((TOTAL(x'')) ISNULL);
SELECT ALL v0.c0, rt0.c2, rt0.c1, rt0.c3, rt0.c4 FROM v0 RIGHT OUTER JOIN rt0 ON rt0.c1 GROUP BY v0.c0, rt0.c2, rt0.c1, rt0.c3, rt0.c4;
SELECT v0.c0, rt0.c2, rt0.c1, rt0.c3, rt0.c4 FROM v0 RIGHT OUTER JOIN rt0 ON rt0.c1 GROUP BY v0.c0, rt0.c2, rt0.c1, rt0.c3, rt0.c4 HAVING TOTAL(x'') UNION ALL SELECT ALL v0.c0, rt0.c2, rt0.c1, rt0.c3, rt0.c4 FROM v0 RIGHT OUTER JOIN rt0 ON rt0.c1 GROUP BY v0.c0, rt0.c2, rt0.c1, rt0.c3, rt0.c4 HAVING (NOT (TOTAL(x''))) UNION ALL SELECT ALL v0.c0, rt0.c2, rt0.c1, rt0.c3, rt0.c4 FROM v0 RIGHT OUTER JOIN rt0 ON rt0.c1 GROUP BY v0.c0, rt0.c2, rt0.c1, rt0.c3, rt0.c4 HAVING ((TOTAL(x'')) ISNULL);
SELECT ALL v0.c0, rt0.c2, rt0.c1, rt0.c3, rt0.c4 FROM v0 RIGHT OUTER JOIN rt0 ON rt0.c1 GROUP BY v0.c0, rt0.c2, rt0.c1, rt0.c3, rt0.c4;
