-- Time: 2024/06/09 16:09:26
-- Database: database59
-- Database version: 3.40.0
-- seed value: 4240188359
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED, prefix = 158); -- 25ms;
INSERT INTO vt0(vt0) VALUES('merge=718031679,15');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1184649208); -- 21ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 6); -- 24ms;
INSERT OR IGNORE INTO vt0 VALUES (x'9a11'); -- 18ms;
INSERT OR IGNORE INTO vt0 VALUES ('&r>r*(*'); -- 31ms;
PRAGMA main.cell_size_check; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (x''); -- 21ms;
INSERT OR IGNORE INTO vt0 VALUES (x''); -- 22ms;
UPDATE OR IGNORE vt0 SET (c0, c0)=('718031679', 0x2acc4b3f) WHERE ((('718031679')>(vt0.c0)) IN ()); -- 0ms;
PRAGMA main.cache_spill = false; -- 0ms;
ANALYZE; -- 28ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x'47c6'); -- 30ms;
ROLLBACK TRANSACTION; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES (NULL); -- 30ms;
UPDATE OR IGNORE vt0 SET c0=NULL, c0=0.004374221547051804; -- 17ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 1); -- 11ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (7.18031679E8); -- 27ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (NULL); -- 14ms;
DELETE FROM vt0; -- 11ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.cache_spill; -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES (7.18031679E8), (NULL), (x''); -- 24ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 875314915); -- 22ms;
INSERT OR REPLACE INTO vt0 VALUES (''); -- 16ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
UPDATE OR IGNORE vt0 SET c0=0Xffffffff8a789714 WHERE CAST((~ (vt0.c0)) AS TEXT); -- 15ms;
INSERT OR IGNORE INTO vt0 VALUES (x''); -- 13ms;
UPDATE vt0 SET c0=NULL, c0=NULL; -- 14ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 0); -- 19ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 0); -- 15ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 372424542); -- 27ms;
PRAGMA temp.optimize; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x''), (NULL), (x''); -- 20ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 26ms;
INSERT INTO vt0(vt0) VALUES('merge=-1929191019,6');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 151847470); -- 20ms;
REINDEX NOCASE; -- 0ms;
INSERT OR FAIL INTO vt0 VALUES ('9}C!'); -- 11ms;
PRAGMA cache_spill; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1176547538); -- 21ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 14ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 14ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 16ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET c2=NULL, c0='-1971808492', c0=x'' WHERE ((CAST(rt0.c0 AS BLOB)) NOT BETWEEN ((rt0.c2 IN (rt0.c0))) AND (CAST(rt0.c2 AS INTEGER))); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c1, c2) VALUES (0.8102421401211249, x''), (0.6337203071117316, 718031679), (0.08081690940098152, NULL); -- 1ms;
INSERT OR ROLLBACK INTO rt0(c2, c0) VALUES (NULL, NULL); -- 16ms;
UPDATE OR ABORT rt0 SET c2=0.7824849768464466 WHERE '&r>r*(*'; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
COMMIT; -- 20ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE; -- 18ms;
INSERT OR IGNORE INTO vt0 VALUES ('869096206'); -- 15ms;
INSERT OR REPLACE INTO rt0 VALUES (NULL, 444269031, x''); -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES ('YL-'); -- 17ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=0.08081690940098152, c0=0.08081690940098152 WHERE ((x'') BETWEEN ('G') AND (((((((((x'')OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))); -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES (0.7824849768464466); -- 14ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 15); -- 14ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (x''); -- 11ms;
UPDATE OR IGNORE rt0 SET c1=0.19682255353179057; -- 0ms;
UPDATE OR REPLACE rt0 SET (c2)=(0.13124948636843148); -- 13ms;
ANALYZE; -- 12ms;
REINDEX RTRIM; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((((((CAST(rt0.c1 AS BLOB))OR((~ ('444269031')))))AND(((rt0.c0)AND(rt0.c2)))))OR(((rt0.c0) IS TRUE))))AND(CAST(rt0.c0 AS NUMERIC)))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((((((((CAST(rt0.c1 AS BLOB))OR((~ ('444269031')))))AND(((rt0.c0)AND(rt0.c2)))))OR(((rt0.c0) IS TRUE))))AND(CAST(rt0.c0 AS NUMERIC)))))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((((((((CAST(rt0.c1 AS BLOB))OR((~ ('444269031')))))AND(((rt0.c0)AND(rt0.c2)))))OR(((rt0.c0) IS TRUE))))AND(CAST(rt0.c0 AS NUMERIC)))) ISNULL));
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0 WHERE ((((((vt0.c0)) BETWEEN ((rt0.c2)) AND ((vt0.c0))))|((((vt0.c0, rt0.c0, rt0.c0)) NOT BETWEEN ((vt0.c0, rt0.c2, rt0.c1)) AND ((vt0.c0, vt0.c0, rt0.c0)))))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0 WHERE ((NOT ((((((vt0.c0)) BETWEEN ((rt0.c2)) AND ((vt0.c0))))|((((vt0.c0, rt0.c0, rt0.c0)) NOT BETWEEN ((vt0.c0, rt0.c2, rt0.c1)) AND ((vt0.c0, vt0.c0, rt0.c0)))))))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0 WHERE ((((((((vt0.c0)) BETWEEN ((rt0.c2)) AND ((vt0.c0))))|((((vt0.c0, rt0.c0, rt0.c0)) NOT BETWEEN ((vt0.c0, rt0.c2, rt0.c1)) AND ((vt0.c0, vt0.c0, rt0.c0)))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c0;
SELECT rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c0 HAVING TOTAL((rt0.c0 IN (MIN(rt0.c1), vt0.c0))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c0 HAVING (NOT (TOTAL((rt0.c0 IN (MIN(rt0.c1), vt0.c0))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c0 HAVING ((TOTAL((rt0.c0 IN (MIN(rt0.c1), vt0.c0)))) ISNULL);
SELECT ALL rt0.c0 FROM rt0;
SELECT ALL rt0.c0 FROM rt0 WHERE (CAST(rt0.c1 AS NUMERIC) COLLATE RTRIM) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (CAST(rt0.c1 AS NUMERIC) COLLATE RTRIM))) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE (((CAST(rt0.c1 AS NUMERIC) COLLATE RTRIM) ISNULL));
SELECT ALL rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE ((((rt0.c1)%(rt0.c0)) IN (((rt0.c0)=(rt0.c0))))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c1)%(rt0.c0)) IN (((rt0.c0)=(rt0.c0))))))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE ((((((rt0.c1)%(rt0.c0)) IN (((rt0.c0)==(rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (((vt0.c0)-(0.6337203071117316))) AND (((vt0.c0)OR(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (((vt0.c0)-(0.6337203071117316))) AND (((vt0.c0)OR(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (((vt0.c0)-(0.6337203071117316))) AND (((vt0.c0)OR(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING '#oPPuq' UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT ('#oPPuq')) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (('#oPPuq') ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING '#oPPuq' UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT ('#oPPuq')) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (('#oPPuq') ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL TOTAL(CAST(((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)) AS BLOB)) FROM rt0;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT))*(((vt0.c0) IS FALSE)))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((CAST(vt0.c0 AS TEXT))*(((vt0.c0) IS FALSE)))))) UNION ALL SELECT * FROM vt0 WHERE (((((CAST(vt0.c0 AS TEXT))*(((vt0.c0) IS FALSE)))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0 INNER JOIN vt0 ON CASE WHEN CASE WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END THEN (x'' IN ()) WHEN vt0.c0 THEN 869096206 WHEN (((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND (('869096206'))) THEN rt0.c1 COLLATE RTRIM ELSE ((rt0.c1)LIKE(rt0.c0)) END;
SELECT DISTINCT vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0 INNER JOIN vt0 ON CASE WHEN CASE WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END THEN (x'' IN ()) WHEN vt0.c0 THEN 869096206 WHEN (((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND (('869096206'))) THEN rt0.c1 COLLATE RTRIM ELSE ((rt0.c1)LIKE(rt0.c0)) END WHERE (TRIM(DISTINCT ((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)), (('2&')IS(0Xfffffffff9d40fbf)))) UNION SELECT DISTINCT vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0 INNER JOIN vt0 ON CASE WHEN CASE WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END THEN (x'' IN ()) WHEN vt0.c0 THEN 869096206 WHEN (((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND (('869096206'))) THEN rt0.c1 COLLATE RTRIM ELSE ((rt0.c1)LIKE(rt0.c0)) END WHERE ((NOT (TRIM(DISTINCT ((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)), (('2&')IS(0Xfffffffff9d40fbf)))))) UNION SELECT DISTINCT vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0 INNER JOIN vt0 ON CASE WHEN CASE WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END THEN (x'' IN ()) WHEN vt0.c0 THEN 869096206 WHEN (((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND (('869096206'))) THEN rt0.c1 COLLATE RTRIM ELSE ((rt0.c1)LIKE(rt0.c0)) END WHERE (((TRIM(DISTINCT ((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)), (('2&')IS(0xfffffffff9d40fbf)))) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0 INNER JOIN vt0 ON CASE WHEN CASE WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END THEN (x'' IN ()) WHEN vt0.c0 THEN 869096206 WHEN (((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND (('869096206'))) THEN rt0.c1 COLLATE RTRIM ELSE ((rt0.c1)LIKE(rt0.c0)) END;
SELECT vt0.c0, rt0.c1, rt0.c2, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c1, rt0.c2, rt0.c0;
SELECT vt0.c0, rt0.c1, rt0.c2, rt0.c0 FROM vt0, rt0 WHERE ('') GROUP BY vt0.c0, rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL vt0.c0, rt0.c1, rt0.c2, rt0.c0 FROM vt0, rt0 WHERE ((NOT (''))) GROUP BY vt0.c0, rt0.c1, rt0.c2, rt0.c0 UNION SELECT vt0.c0, rt0.c1, rt0.c2, rt0.c0 FROM vt0, rt0 WHERE ((('') ISNULL)) GROUP BY vt0.c0, rt0.c1, rt0.c2, rt0.c0;
SELECT vt0.c0, rt0.c1, rt0.c2, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0 HAVING COUNT(SUM(TOTAL(vt0.c0))) UNION ALL SELECT rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (COUNT(SUM(TOTAL(vt0.c0))))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((COUNT(SUM(TOTAL(vt0.c0)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) NOT NULL)) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) NOT NULL)))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) NOT NULL)) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (LTRIM(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), (((vt0.c0, vt0.c0, 0.0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (LTRIM(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), (((vt0.c0, vt0.c0, 0.0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((LTRIM(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), (((vt0.c0, vt0.c0, 0.0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((NULL)IS(((vt0.c0)=(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((NULL)IS(((vt0.c0)=(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((NULL)IS(((vt0.c0)==(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c2, vt0.c0, rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c0, rt0.c1;
SELECT rt0.c2, vt0.c0, rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c0, rt0.c1 HAVING MAX(((GROUP_CONCAT(AVG(rt0.c0)))IS NOT(MIN(rt0.c0)))) UNION ALL SELECT rt0.c2, vt0.c0, rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c0, rt0.c1 HAVING (NOT (MAX(((GROUP_CONCAT(AVG(rt0.c0)))IS NOT(MIN(rt0.c0)))))) UNION ALL SELECT ALL rt0.c2, vt0.c0, rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c0, rt0.c1 HAVING ((MAX(((GROUP_CONCAT(AVG(rt0.c0)))IS NOT(MIN(rt0.c0))))) ISNULL);
SELECT ALL rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (CAST(CAST(rt0.c0 AS BLOB) AS TEXT)) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (CAST(CAST(rt0.c0 AS BLOB) AS TEXT)))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((CAST(CAST(rt0.c0 AS BLOB) AS TEXT)) ISNULL));
SELECT ALL rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM vt0 CROSS JOIN rt0 ON UNLIKELY(DISTINCT ((rt0.c2)-(x'')));
SELECT DISTINCT * FROM vt0 CROSS JOIN rt0 ON UNLIKELY(DISTINCT ((rt0.c2)-(x''))) WHERE (CASE CAST(vt0.c0 AS INTEGER)  WHEN ((rt0.c1) ISNULL) THEN CASE vt0.c0  WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c0 END WHEN (((('2&')AND(rt0.c0)))AND(rt0.c1)) THEN (+ (rt0.c1)) WHEN (((rt0.c0, 0x6c0f20d4, rt0.c1))>((rt0.c2, rt0.c1, rt0.c0))) THEN CAST(vt0.c0 AS NUMERIC) ELSE CASE vt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c1 END END) UNION SELECT DISTINCT * FROM vt0 CROSS JOIN rt0 ON UNLIKELY(DISTINCT ((rt0.c2)-(x''))) WHERE ((NOT (CASE CAST(vt0.c0 AS INTEGER)  WHEN ((rt0.c1) ISNULL) THEN CASE vt0.c0  WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c0 END WHEN (((('2&')AND(rt0.c0)))AND(rt0.c1)) THEN (+ (rt0.c1)) WHEN (((rt0.c0, 0x6c0f20d4, rt0.c1))>((rt0.c2, rt0.c1, rt0.c0))) THEN CAST(vt0.c0 AS NUMERIC) ELSE CASE vt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c1 END END))) UNION SELECT DISTINCT * FROM vt0 CROSS JOIN rt0 ON UNLIKELY(DISTINCT ((rt0.c2)-(x''))) WHERE (((CASE CAST(vt0.c0 AS INTEGER)  WHEN ((rt0.c1) ISNULL) THEN CASE vt0.c0  WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c0 END WHEN (((('2&')AND(rt0.c0)))AND(rt0.c1)) THEN (+ (rt0.c1)) WHEN (((rt0.c0, 0x6c0f20d4, rt0.c1))>((rt0.c2, rt0.c1, rt0.c0))) THEN CAST(vt0.c0 AS NUMERIC) ELSE CASE vt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c1 END END) ISNULL));
SELECT DISTINCT * FROM vt0 CROSS JOIN rt0 ON UNLIKELY(DISTINCT ((rt0.c2)-(x'')));
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE (((CAST(rt0.c0 AS INTEGER)) ISNULL)) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (((CAST(rt0.c0 AS INTEGER)) ISNULL)))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE (((((CAST(rt0.c0 AS INTEGER)) ISNULL)) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1 HAVING ((COUNT(*)) NOT NULL) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (((COUNT(*)) NOT NULL))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1 HAVING ((((COUNT(*)) NOT NULL)) ISNULL);
SELECT rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1 HAVING ((COUNT(*)) NOT NULL) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (((COUNT(*)) NOT NULL))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1 HAVING ((((COUNT(*)) NOT NULL)) ISNULL);
SELECT rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL * FROM vt0, rt0;
SELECT ALL * FROM vt0, rt0 WHERE (((TYPEOF(rt0.c0)) NOT BETWEEN (((rt0.c1) NOTNULL)) AND (CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE ((NOT (((TYPEOF(rt0.c0)) NOT BETWEEN (((rt0.c1) NOTNULL)) AND (CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END))))) UNION ALL SELECT * FROM vt0, rt0 WHERE (((((TYPEOF(rt0.c0)) NOT BETWEEN (((rt0.c1) NOTNULL)) AND (CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END))) ISNULL));
SELECT ALL * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0)IS(vt0.c0)))>>(((vt0.c0)IS(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.c0)IS(vt0.c0)))>>(((vt0.c0)IS(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0)IS(vt0.c0)))>>(((vt0.c0)IS(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((((- (rt0.c1)))<=((((rt0.c2, rt0.c1, rt0.c1))<=((rt0.c0, rt0.c2, rt0.c2)))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((((- (rt0.c1)))<=((((rt0.c2, rt0.c1, rt0.c1))<=((rt0.c0, rt0.c2, rt0.c2)))))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((((((- (rt0.c1)))<=((((rt0.c2, rt0.c1, rt0.c1))<=((rt0.c0, rt0.c2, rt0.c2)))))) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((TOTAL(MAX(rt0.c0))) NOT BETWEEN (MAX(TOTAL(rt0.c0))) AND (json_quote(SUM(SUM(rt0.c0))))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (((TOTAL(MAX(rt0.c0))) NOT BETWEEN (MAX(TOTAL(rt0.c0))) AND (json_quote(SUM(SUM(rt0.c0))))))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((((TOTAL(MAX(rt0.c0))) NOT BETWEEN (MAX(TOTAL(rt0.c0))) AND (json_quote(SUM(SUM(rt0.c0)))))) ISNULL);
SELECT rt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0;
SELECT rt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 WHERE (json_remove(vt0.c0, rt0.c0, '1501665273', rt0.c2, vt0.c0, '-103542849') COLLATE RTRIM) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 WHERE ((NOT (json_remove(vt0.c0, rt0.c0, '1501665273', rt0.c2, vt0.c0, '-103542849') COLLATE RTRIM))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 WHERE (((json_remove(vt0.c0, rt0.c0, '1501665273', rt0.c2, vt0.c0, '-103542849') COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (CAST(NULL COLLATE BINARY AS NUMERIC)) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (CAST(NULL COLLATE BINARY AS NUMERIC)))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((CAST(NULL COLLATE BINARY AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE (0Xffffffff8a789714) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (0Xffffffff8a789714))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE (((0xffffffff8a789714) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c0, vt0.c0, rt0.c2 FROM vt0 CROSS JOIN rt0 ON TRIM(((((vt0.c0)AND(rt0.c1)))OR(rt0.c0))) GROUP BY rt0.c0, vt0.c0, rt0.c2;
SELECT ALL rt0.c0, vt0.c0, rt0.c2 FROM vt0 CROSS JOIN rt0 ON TRIM(((((vt0.c0)AND(rt0.c1)))OR(rt0.c0))) GROUP BY rt0.c0, vt0.c0, rt0.c2 HAVING AVG(((vt0.c0) NOT BETWEEN (SUM(rt0.c1)) AND (rt0.c0))) UNION ALL SELECT ALL rt0.c0, vt0.c0, rt0.c2 FROM vt0 CROSS JOIN rt0 ON TRIM(((((vt0.c0)AND(rt0.c1)))OR(rt0.c0))) GROUP BY rt0.c0, vt0.c0, rt0.c2 HAVING (NOT (AVG(((vt0.c0) NOT BETWEEN (SUM(rt0.c1)) AND (rt0.c0))))) UNION ALL SELECT ALL rt0.c0, vt0.c0, rt0.c2 FROM vt0 CROSS JOIN rt0 ON TRIM(((((vt0.c0)AND(rt0.c1)))OR(rt0.c0))) GROUP BY rt0.c0, vt0.c0, rt0.c2 HAVING ((AVG(((vt0.c0) NOT BETWEEN (SUM(rt0.c1)) AND (rt0.c0)))) ISNULL);
SELECT ALL MIN(((LOWER(DISTINCT 0xffffffff8b2b45d3)) BETWEEN (rt0.c2) AND ((NOT (rt0.c0))))) FROM rt0, vt0;
SELECT rt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM vt0, rt0;
SELECT rt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM vt0, rt0 WHERE ((+ ((((rt0.c0, x'', rt0.c1))<((rt0.c0, 0.44105454602576677, rt0.c0)))))) UNION ALL SELECT rt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM vt0, rt0 WHERE ((NOT ((+ ((((rt0.c0, x'', rt0.c1))<((rt0.c0, 0.44105454602576677, rt0.c0)))))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM vt0, rt0 WHERE ((((+ ((((rt0.c0, x'', rt0.c1))<((rt0.c0, 0.44105454602576677, rt0.c0)))))) ISNULL));
SELECT rt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM vt0, rt0;
SELECT DISTINCT * FROM rt0 CROSS JOIN vt0 ON ((HEX(DISTINCT rt0.c0)) BETWEEN ((+ (rt0.c1))) AND (((rt0.c0) NOTNULL)));
SELECT DISTINCT * FROM rt0 CROSS JOIN vt0 ON ((HEX(DISTINCT rt0.c0)) BETWEEN ((+ (rt0.c1))) AND (((rt0.c0) NOTNULL))) WHERE ((((rt0.c0)) BETWEEN ((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))) AND (((rt0.c1 IN ()))))) UNION SELECT DISTINCT * FROM rt0 CROSS JOIN vt0 ON ((HEX(DISTINCT rt0.c0)) BETWEEN ((+ (rt0.c1))) AND (((rt0.c0) NOTNULL))) WHERE ((NOT ((((rt0.c0)) BETWEEN ((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))) AND (((rt0.c1 IN ()))))))) UNION SELECT DISTINCT * FROM rt0 CROSS JOIN vt0 ON ((HEX(DISTINCT rt0.c0)) BETWEEN ((+ (rt0.c1))) AND (((rt0.c0) NOTNULL))) WHERE ((((((rt0.c0)) BETWEEN ((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))) AND (((rt0.c1 IN ()))))) ISNULL));
SELECT DISTINCT * FROM rt0 CROSS JOIN vt0 ON ((HEX(DISTINCT rt0.c0)) BETWEEN ((+ (rt0.c1))) AND (((rt0.c0) NOTNULL)));
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((CASE WHEN 0.7824849768464466 THEN vt0.c0 END)) AND ((((vt0.c0)<<(vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0)) BETWEEN ((CASE WHEN 0.7824849768464466 THEN vt0.c0 END)) AND ((((vt0.c0)<<(vt0.c0)))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((CASE WHEN 0.7824849768464466 THEN vt0.c0 END)) AND ((((vt0.c0)<<(vt0.c0)))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(vt0.c0)) BETWEEN (CASE COUNT(GROUP_CONCAT(vt0.c0))  WHEN MAX(MAX(SUM(COUNT(*)))) THEN vt0.c0 ELSE vt0.c0 END) AND (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c0 HAVING (NOT (((COUNT(vt0.c0)) BETWEEN (CASE COUNT(GROUP_CONCAT(vt0.c0))  WHEN MAX(MAX(SUM(COUNT(*)))) THEN vt0.c0 ELSE vt0.c0 END) AND (COUNT(*))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((COUNT(vt0.c0)) BETWEEN (CASE COUNT(GROUP_CONCAT(vt0.c0))  WHEN MAX(MAX(SUM(COUNT(*)))) THEN vt0.c0 ELSE vt0.c0 END) AND (COUNT(*)))) ISNULL);
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON ((rt0.c1 COLLATE BINARY)&((NOT (rt0.c2))));
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON ((rt0.c1 COLLATE BINARY)&((NOT (rt0.c2)))) WHERE ('1501665273') UNION ALL SELECT * FROM vt0 CROSS JOIN rt0 ON ((rt0.c1 COLLATE BINARY)&((NOT (rt0.c2)))) WHERE ((NOT ('1501665273'))) UNION ALL SELECT ALL * FROM vt0 CROSS JOIN rt0 ON ((rt0.c1 COLLATE BINARY)&((NOT (rt0.c2)))) WHERE ((('1501665273') ISNULL));
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON ((rt0.c1 COLLATE BINARY)&((NOT (rt0.c2))));
SELECT DISTINCT * FROM rt0 NATURAL JOIN vt0;
SELECT DISTINCT * FROM rt0 NATURAL JOIN vt0 WHERE (((CAST(vt0.c0 AS INTEGER))IS NOT(((rt0.c1)IS NOT(rt0.c0))))) UNION SELECT DISTINCT * FROM rt0 NATURAL JOIN vt0 WHERE ((NOT (((CAST(vt0.c0 AS INTEGER))IS NOT(((rt0.c1)IS NOT(rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0 NATURAL JOIN vt0 WHERE (((((CAST(vt0.c0 AS INTEGER))IS NOT(((rt0.c1)IS NOT(rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0 NATURAL JOIN vt0;
SELECT ALL vt0.c0, rt0.c0, rt0.c2, rt0.c1 FROM vt0 CROSS JOIN rt0 ON ((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)*(((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)))) GROUP BY vt0.c0, rt0.c0, rt0.c2, rt0.c1;
SELECT ALL vt0.c0, rt0.c0, rt0.c2, rt0.c1 FROM vt0 CROSS JOIN rt0 ON ((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)*(((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)))) WHERE (((((((((CAST(rt0.c0 AS BLOB))OR(((((((((vt0.c0)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c1)))))AND(rt0.c0 COLLATE NOCASE)))OR(rt0.c2)))OR(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) GROUP BY vt0.c0, rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL vt0.c0, rt0.c0, rt0.c2, rt0.c1 FROM vt0 CROSS JOIN rt0 ON ((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)*(((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)))) WHERE ((NOT (((((((((CAST(rt0.c0 AS BLOB))OR(((((((((vt0.c0)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c1)))))AND(rt0.c0 COLLATE NOCASE)))OR(rt0.c2)))OR(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))))))) GROUP BY vt0.c0, rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL vt0.c0, rt0.c0, rt0.c2, rt0.c1 FROM vt0 CROSS JOIN rt0 ON ((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)*(((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)))) WHERE (((((((((((CAST(rt0.c0 AS BLOB))OR(((((((((vt0.c0)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c1)))))AND(rt0.c0 COLLATE NOCASE)))OR(rt0.c2)))OR(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) ISNULL)) GROUP BY vt0.c0, rt0.c0, rt0.c2, rt0.c1;
SELECT ALL vt0.c0, rt0.c0, rt0.c2, rt0.c1 FROM vt0 CROSS JOIN rt0 ON ((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)*(((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)))) GROUP BY vt0.c0, rt0.c0, rt0.c2, rt0.c1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX((((COUNT(*), COUNT(vt0.c0), GROUP_CONCAT(TOTAL(AVG(TOTAL(x'')))))) BETWEEN ((vt0.c0, TOTAL(vt0.c0), MAX(vt0.c0))) AND ((vt0.c0, vt0.c0, vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX((((COUNT(*), COUNT(vt0.c0), GROUP_CONCAT(TOTAL(AVG(TOTAL(x'')))))) BETWEEN ((vt0.c0, TOTAL(vt0.c0), MAX(vt0.c0))) AND ((vt0.c0, vt0.c0, vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX((((COUNT(*), COUNT(vt0.c0), GROUP_CONCAT(TOTAL(AVG(TOTAL(x'')))))) BETWEEN ((vt0.c0, TOTAL(vt0.c0), MAX(vt0.c0))) AND ((vt0.c0, vt0.c0, vt0.c0))))) ISNULL);
SELECT * FROM rt0, vt0;
SELECT * FROM rt0, vt0 WHERE (((CAST(rt0.c1 AS TEXT))>>(rt0.c1))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((NOT (((CAST(rt0.c1 AS TEXT))>>(rt0.c1))))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE (((((CAST(rt0.c1 AS TEXT))>>(rt0.c1))) ISNULL));
SELECT * FROM rt0, vt0;
SELECT DISTINCT vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0;
SELECT DISTINCT vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 WHERE (((((rt0.c2) IS FALSE)) BETWEEN (((((((((rt0.c0)AND(vt0.c0)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c2))) AND (((x'') BETWEEN (vt0.c0) AND (vt0.c0))))) UNION SELECT DISTINCT vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 WHERE ((NOT (((((rt0.c2) IS FALSE)) BETWEEN (((((((((rt0.c0)AND(vt0.c0)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c2))) AND (((x'') BETWEEN (vt0.c0) AND (vt0.c0))))))) UNION SELECT DISTINCT vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 WHERE (((((((rt0.c2) IS FALSE)) BETWEEN (((((((((rt0.c0)AND(vt0.c0)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c2))) AND (((x'') BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0;
SELECT rt0.c0, vt0.c0, rt0.c1, rt0.c2 FROM vt0 CROSS JOIN rt0 ON CAST((rt0.c1 IN ()) AS INTEGER) GROUP BY rt0.c0, vt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, vt0.c0, rt0.c1, rt0.c2 FROM vt0 CROSS JOIN rt0 ON CAST((rt0.c1 IN ()) AS INTEGER) WHERE (CASE WHEN ((rt0.c0)|(rt0.c1)) THEN ((rt0.c0) IS TRUE) ELSE ((rt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END) GROUP BY rt0.c0, vt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, vt0.c0, rt0.c1, rt0.c2 FROM vt0 CROSS JOIN rt0 ON CAST((rt0.c1 IN ()) AS INTEGER) WHERE ((NOT (CASE WHEN ((rt0.c0)|(rt0.c1)) THEN ((rt0.c0) IS TRUE) ELSE ((rt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END))) GROUP BY rt0.c0, vt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, vt0.c0, rt0.c1, rt0.c2 FROM vt0 CROSS JOIN rt0 ON CAST((rt0.c1 IN ()) AS INTEGER) WHERE (((CASE WHEN ((rt0.c0)|(rt0.c1)) THEN ((rt0.c0) IS TRUE) ELSE ((rt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END) ISNULL)) GROUP BY rt0.c0, vt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, vt0.c0, rt0.c1, rt0.c2 FROM vt0 CROSS JOIN rt0 ON CAST((rt0.c1 IN ()) AS INTEGER) GROUP BY rt0.c0, vt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING GROUP_CONCAT(load_extension(MAX(COUNT(*)))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (GROUP_CONCAT(load_extension(MAX(COUNT(*)))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((GROUP_CONCAT(load_extension(MAX(COUNT(*))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ())))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0)+((((1197649593))<=((vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((vt0.c0)+((((1197649593))<=((vt0.c0)))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0)+((((1197649593))<=((vt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE (PRINTF(((rt0.c0)LIKE(rt0.c1)))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (PRINTF(((rt0.c0)LIKE(rt0.c1)))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE (((PRINTF(((rt0.c0)LIKE(rt0.c1)))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 NOT INDEXED GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING SUM(SUM(MAX(SUM(COUNT(rt0.c1))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (SUM(SUM(MAX(SUM(COUNT(rt0.c1))))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((SUM(SUM(MAX(SUM(COUNT(rt0.c1)))))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((rt0.c1, LAST_INSERT_ROWID(), ((rt0.c1)>=(rt0.c2))))>((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)), ((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)), ((rt0.c0)GLOB(rt0.c1)))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((((rt0.c1, LAST_INSERT_ROWID(), ((rt0.c1)>=(rt0.c2))))>((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)), ((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)), ((rt0.c0)GLOB(rt0.c1)))))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((((rt0.c1, LAST_INSERT_ROWID(), ((rt0.c1)>=(rt0.c2))))>((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)), ((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)), ((rt0.c0)GLOB(rt0.c1)))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (CASE WHEN ((rt0.c1) IS TRUE) THEN ((rt0.c1)LIKE(rt0.c2)) END) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (CASE WHEN ((rt0.c1) IS TRUE) THEN ((rt0.c1)LIKE(rt0.c2)) END))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((CASE WHEN ((rt0.c1) IS TRUE) THEN ((rt0.c1)LIKE(rt0.c2)) END) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ('932316334') GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ('932316334'))) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((('932316334') ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (TOTAL(GROUP_CONCAT(rt0.c2)) IN (SUM(COUNT(*)), HEX(DISTINCT rt0.c0))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT ((TOTAL(GROUP_CONCAT(rt0.c2)) IN (SUM(COUNT(*)), HEX(DISTINCT rt0.c0))))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (((TOTAL(GROUP_CONCAT(rt0.c2)) IN (SUM(COUNT(*)), HEX(DISTINCT rt0.c0)))) ISNULL);
SELECT MIN(0.004374221547051804 COLLATE BINARY) FROM vt0 ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))-(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))) ASC  NULLS LAST;
SELECT ALL * FROM rt0, vt0;
SELECT * FROM rt0, vt0 WHERE (TRIM(DISTINCT ((rt0.c2)<(vt0.c0)))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((NOT (TRIM(DISTINCT ((rt0.c2)<(vt0.c0)))))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE (((TRIM(DISTINCT ((rt0.c2)<(vt0.c0)))) ISNULL));
SELECT ALL * FROM rt0, vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (0.7824849768464466) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (0.7824849768464466))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((0.7824849768464466) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (LIKELIHOOD(CAST(rt0.c2 AS NUMERIC), 0.25645253029531323)) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (LIKELIHOOD(CAST(rt0.c2 AS NUMERIC), 0.25645253029531323)))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (((LIKELIHOOD(CAST(rt0.c2 AS NUMERIC), 0.25645253029531323)) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL vt0.c0 FROM rt0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM rt0, vt0 GROUP BY vt0.c0 HAVING MIN(((rt0.c1)%(AVG(AVG(rt0.c2))))) UNION ALL SELECT ALL vt0.c0 FROM rt0, vt0 GROUP BY vt0.c0 HAVING (NOT (MIN(((rt0.c1)%(AVG(AVG(rt0.c2))))))) UNION ALL SELECT ALL vt0.c0 FROM rt0, vt0 GROUP BY vt0.c0 HAVING ((MIN(((rt0.c1)%(AVG(AVG(rt0.c2)))))) ISNULL);
SELECT MIN(((((((((((rt0.c2) NOT NULL))OR(((rt0.c0)<<(1727502717)))))OR(((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c2)))))OR(CAST(rt0.c0 AS TEXT))))AND(LAST_INSERT_ROWID()))) FROM rt0, vt0 ORDER BY (rt0.c2 IN ());
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (vt0.c0 COLLATE NOCASE) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0 COLLATE NOCASE))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN rt0 ON (((((x'1824') ISNULL)))>((rt0.c2)));
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN rt0 ON (((((x'1824') ISNULL)))>((rt0.c2))) WHERE (((rt0.c0)==(x'')) COLLATE BINARY) UNION SELECT DISTINCT * FROM vt0 FULL OUTER JOIN rt0 ON (((((x'1824') ISNULL)))>((rt0.c2))) WHERE ((NOT (((rt0.c0)==(x'')) COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt0 FULL OUTER JOIN rt0 ON (((((x'1824') ISNULL)))>((rt0.c2))) WHERE (((((rt0.c0)=(x'')) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN rt0 ON (((((x'1824') ISNULL)))>((rt0.c2)));
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 WHERE (ABS(((rt0.c1) ISNULL))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (ABS(((rt0.c1) ISNULL))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 NOT INDEXED WHERE (((ABS(((rt0.c1) ISNULL))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1 HAVING (~ (COUNT(*))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT ((~ (COUNT(*))))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1 HAVING (((~ (COUNT(*)))) ISNULL);
SELECT rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1 HAVING (~ (COUNT(*))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT ((~ (COUNT(*))))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1 HAVING (((~ (COUNT(*)))) ISNULL);
SELECT rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c0 END) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c0 END))) UNION ALL SELECT * FROM vt0 WHERE (((CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c0 END) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (CASE WHEN rt0.c2 THEN ((rt0.c0)<<(-1328359331)) END) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (CASE WHEN rt0.c2 THEN ((rt0.c0)<<(-1328359331)) END))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((CASE WHEN rt0.c2 THEN ((rt0.c0)<<(-1328359331)) END) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0 WHERE ((NOT ((~ (NULL))))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0 WHERE ((NOT ((NOT ((~ (NULL))))))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0 WHERE ((((NOT ((~ (NULL))))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((COUNT(MIN(SUM(COUNT(*)))))) NOT BETWEEN ((SUM(COUNT(SUM(vt0.c0))))) AND ((SUM(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((COUNT(MIN(SUM(COUNT(*)))))) NOT BETWEEN ((SUM(COUNT(SUM(vt0.c0))))) AND ((SUM(vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((COUNT(MIN(SUM(COUNT(*)))))) NOT BETWEEN ((SUM(COUNT(SUM(vt0.c0))))) AND ((SUM(vt0.c0))))) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))AND((((rt0.c2))<=((rt0.c0))))))AND(CASE WHEN rt0.c0 THEN NULL END))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((((((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))AND((((rt0.c2))<=((rt0.c0))))))AND(CASE WHEN rt0.c0 THEN NULL END))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((((((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))AND((((rt0.c2))<=((rt0.c0))))))AND(CASE WHEN rt0.c0 THEN NULL END))) ISNULL));
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, vt0.c0 FROM rt0, vt0;
SELECT DISTINCT rt0.c0, rt0.c1, vt0.c0 FROM rt0, vt0 WHERE (((((((((((rt0.c2)>=(rt0.c1)))OR((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))))AND((~ (vt0.c0)))))OR(NULL)))AND(CASE rt0.c2  WHEN vt0.c0 THEN rt0.c1 END))) UNION SELECT DISTINCT rt0.c0, rt0.c1, vt0.c0 FROM rt0, vt0 WHERE ((NOT (((((((((((rt0.c2)>=(rt0.c1)))OR((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))))AND((~ (vt0.c0)))))OR(NULL)))AND(CASE rt0.c2  WHEN vt0.c0 THEN rt0.c1 END))))) UNION SELECT DISTINCT rt0.c0, rt0.c1, vt0.c0 FROM rt0, vt0 WHERE (((((((((((((rt0.c2)>=(rt0.c1)))OR((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))))AND((~ (vt0.c0)))))OR(NULL)))AND(CASE rt0.c2  WHEN vt0.c0 THEN rt0.c1 END))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, vt0.c0 FROM rt0, vt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE (CASE (rt0.c0 IN ())  WHEN CAST(rt0.c2 AS REAL) THEN (- (rt0.c0)) END) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (CASE (rt0.c0 IN ())  WHEN CAST(rt0.c2 AS REAL) THEN (- (rt0.c0)) END))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE (((CASE (rt0.c0 IN ())  WHEN CAST(rt0.c2 AS REAL) THEN (- (rt0.c0)) END) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (COUNT(*) IN (((SUM(GROUP_CONCAT(vt0.c0))) ISNULL))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((COUNT(*) IN (((SUM(GROUP_CONCAT(vt0.c0))) ISNULL))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((COUNT(*) IN (((SUM(GROUP_CONCAT(vt0.c0))) ISNULL)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CASE CAST(vt0.c0 AS NUMERIC)  WHEN ((vt0.c0)IS(vt0.c0)) THEN ((vt0.c0) NOTNULL) WHEN GLOB(vt0.c0, vt0.c0) THEN (vt0.c0 IN ()) WHEN ((x'4ca8') NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) ELSE json_patch(0.7887729727284561, vt0.c0) END) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (CASE CAST(vt0.c0 AS NUMERIC)  WHEN ((vt0.c0)IS(vt0.c0)) THEN ((vt0.c0) NOTNULL) WHEN GLOB(vt0.c0, vt0.c0) THEN (vt0.c0 IN ()) WHEN ((x'4ca8') NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) ELSE json_patch(0.7887729727284561, vt0.c0) END))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((CASE CAST(vt0.c0 AS NUMERIC)  WHEN ((vt0.c0)IS(vt0.c0)) THEN ((vt0.c0) NOTNULL) WHEN GLOB(vt0.c0, vt0.c0) THEN (vt0.c0 IN ()) WHEN ((x'4ca8') NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) ELSE json_patch(0.7887729727284561, vt0.c0) END) ISNULL));
SELECT DISTINCT vt0.c0 FROM rt0 CROSS JOIN vt0 ON rt0.c0;
SELECT DISTINCT vt0.c0 FROM rt0 CROSS JOIN vt0 ON rt0.c0 WHERE ((((+ (vt0.c0))) BETWEEN ((- (vt0.c0))) AND ((rt0.c1 IN ())))) UNION SELECT DISTINCT vt0.c0 FROM rt0 CROSS JOIN vt0 ON rt0.c0 WHERE ((NOT ((((+ (vt0.c0))) BETWEEN ((- (vt0.c0))) AND ((rt0.c1 IN ())))))) UNION SELECT DISTINCT vt0.c0 FROM rt0 CROSS JOIN vt0 ON rt0.c0 WHERE ((((((+ (vt0.c0))) BETWEEN ((- (vt0.c0))) AND ((rt0.c1 IN ())))) ISNULL));
SELECT DISTINCT vt0.c0 FROM rt0 CROSS JOIN vt0 ON rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE (TRIM(DISTINCT rt0.c2)) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT (TRIM(DISTINCT rt0.c2)))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE (((TRIM(DISTINCT rt0.c2)) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c2 HAVING TOTAL(MAX(AVG(SUM(rt0.c1)))) UNION ALL SELECT rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (TOTAL(MAX(AVG(SUM(rt0.c1)))))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((TOTAL(MAX(AVG(SUM(rt0.c1))))) ISNULL);
SELECT * FROM vt0, rt0;
SELECT * FROM vt0, rt0 WHERE (((rt0.c0) ISNULL)) UNION ALL SELECT ALL * FROM vt0, rt0 NOT INDEXED WHERE ((NOT (((rt0.c0) ISNULL)))) UNION ALL SELECT * FROM vt0, rt0 NOT INDEXED WHERE (((((rt0.c0) ISNULL)) ISNULL));
SELECT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c0 IN ()))%(vt0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((vt0.c0 IN ()))%(vt0.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c0 IN ()))%(vt0.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM) NOTNULL)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0 COLLATE RTRIM) NOTNULL)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0 COLLATE RTRIM) NOTNULL)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0 HAVING AVG(((GROUP_CONCAT(rt0.c2))!=(GROUP_CONCAT(COUNT(*))))) UNION ALL SELECT ALL vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0 HAVING (NOT (AVG(((GROUP_CONCAT(rt0.c2))!=(GROUP_CONCAT(COUNT(*))))))) UNION ALL SELECT vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0 HAVING ((AVG(((GROUP_CONCAT(rt0.c2))!=(GROUP_CONCAT(COUNT(*)))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (CASE ((rt0.c0) NOT NULL)  WHEN rt0.c2 COLLATE RTRIM THEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END END) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CASE ((rt0.c0) NOT NULL)  WHEN rt0.c2 COLLATE RTRIM THEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END END))) UNION ALL SELECT ALL * FROM rt0 WHERE (((CASE ((rt0.c0) NOT NULL)  WHEN rt0.c2 COLLATE RTRIM THEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END END) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0;
SELECT DISTINCT vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE ((+ ((((0.8478882862475751, '-1811911870', rt0.c1))>((vt0.c0, rt0.c2, vt0.c0)))))) UNION SELECT DISTINCT vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE ((NOT ((+ ((((0.8478882862475751, '-1811911870', rt0.c1))>((vt0.c0, rt0.c2, vt0.c0)))))))) UNION SELECT DISTINCT vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE ((((+ ((((0.8478882862475751, '-1811911870', rt0.c1))>((vt0.c0, rt0.c2, vt0.c0)))))) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0;
SELECT vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c1;
SELECT vt0.c0, rt0.c1 FROM rt0, vt0 WHERE ((CAST(rt0.c0 AS TEXT) IN ())) GROUP BY vt0.c0, rt0.c1 UNION SELECT ALL vt0.c0, rt0.c1 FROM rt0, vt0 WHERE ((NOT ((CAST(rt0.c0 AS TEXT) IN ())))) GROUP BY vt0.c0, rt0.c1 UNION SELECT vt0.c0, rt0.c1 FROM rt0, vt0 WHERE ((((CAST(rt0.c0 AS TEXT) IN ())) ISNULL)) GROUP BY vt0.c0, rt0.c1;
SELECT vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c1;
SELECT vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0)>=(SUM(SUM(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((vt0.c0)>=(SUM(SUM(vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((vt0.c0)>=(SUM(SUM(vt0.c0))))) ISNULL);
SELECT ALL rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((CASE rt0.c0  WHEN x'6507' THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END IN ())) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((CASE rt0.c0  WHEN x'6507' THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END IN ())))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((((CASE rt0.c0  WHEN x'6507' THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END IN ())) ISNULL));
SELECT ALL rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE (CAST(rt0.c0 AS REAL)) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT (CAST(rt0.c0 AS REAL)))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((CAST(rt0.c0 AS REAL)) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT ALL rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0, vt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM vt0, rt0 WHERE (vt0.c0) GROUP BY rt0.c2, rt0.c0, vt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM vt0, rt0 WHERE ((NOT (vt0.c0))) GROUP BY rt0.c2, rt0.c0, vt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM vt0, rt0 WHERE (((vt0.c0) ISNULL)) GROUP BY rt0.c2, rt0.c0, vt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0, vt0.c0, rt0.c1;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING CASE WHEN MIN(MAX(rt0.c1)) THEN x'' ELSE ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)) END UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (CASE WHEN MIN(MAX(rt0.c1)) THEN x'' ELSE ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)) END)) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((CASE WHEN MIN(MAX(rt0.c1)) THEN x'' ELSE ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)) END) ISNULL);
SELECT * FROM rt0 NATURAL JOIN vt0;
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE (vt0.c0) UNION ALL SELECT * FROM rt0 NATURAL JOIN vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE (((vt0.c0) ISNULL));
SELECT * FROM rt0 NATURAL JOIN vt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (((((rt0.c2)<(rt0.c2)))%(CAST(rt0.c2 AS TEXT)))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (((((rt0.c2)<(rt0.c2)))%(CAST(rt0.c2 AS TEXT)))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((((((rt0.c2)<(rt0.c2)))%(CAST(rt0.c2 AS TEXT)))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (json_array(((rt0.c0) ISNULL), ((rt0.c0) IS FALSE))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (json_array(((rt0.c0) ISNULL), ((rt0.c0) IS FALSE))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((json_array(((rt0.c0) ISNULL), ((rt0.c0) IS FALSE))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((((SUM(GROUP_CONCAT(MAX(TOTAL(MIN(COUNT(rt0.c2)))))))OR(MAX(MAX(rt0.c0)))))OR(MIN(rt0.c2))) COLLATE NOCASE UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (((((SUM(GROUP_CONCAT(MAX(TOTAL(MIN(COUNT(rt0.c2)))))))OR(MAX(MAX(rt0.c0)))))OR(MIN(rt0.c2))) COLLATE NOCASE)) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((((((SUM(GROUP_CONCAT(MAX(TOTAL(MIN(COUNT(rt0.c2)))))))OR(MAX(MAX(rt0.c0)))))OR(MIN(rt0.c2))) COLLATE NOCASE) ISNULL);
SELECT ALL TOTAL((((((((x'97cfa10c')AND(rt0.c1)))AND(rt0.c0)), 0.32294390109280013, NULLIF(rt0.c2, rt0.c0)))<=((rt0.c2, CAST(rt0.c2 AS BLOB), ((rt0.c0) NOTNULL))))) FROM vt0, rt0;
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON CASE WHEN CASE WHEN rt0.c1 THEN ' #zVE' WHEN rt0.c0 THEN rt0.c2 WHEN -816311258 THEN vt0.c0 ELSE x'93d2' END THEN (+ (rt0.c0)) ELSE ((rt0.c1)=(vt0.c0)) END;
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON CASE WHEN CASE WHEN rt0.c1 THEN ' #zVE' WHEN rt0.c0 THEN rt0.c2 WHEN -816311258 THEN vt0.c0 ELSE x'93d2' END THEN (+ (rt0.c0)) ELSE ((rt0.c1)=(vt0.c0)) END WHERE (((NULLIF(rt0.c2, rt0.c2)) BETWEEN ((- (rt0.c1))) AND (rt0.c1))) UNION ALL SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON CASE WHEN CASE WHEN rt0.c1 THEN ' #zVE' WHEN rt0.c0 THEN rt0.c2 WHEN -816311258 THEN vt0.c0 ELSE x'93d2' END THEN (+ (rt0.c0)) ELSE ((rt0.c1)=(vt0.c0)) END WHERE ((NOT (((NULLIF(rt0.c2, rt0.c2)) BETWEEN ((- (rt0.c1))) AND (rt0.c1))))) UNION ALL SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON CASE WHEN CASE WHEN rt0.c1 THEN ' #zVE' WHEN rt0.c0 THEN rt0.c2 WHEN -816311258 THEN vt0.c0 ELSE x'93d2' END THEN (+ (rt0.c0)) ELSE ((rt0.c1)==(vt0.c0)) END WHERE (((((NULLIF(rt0.c2, rt0.c2)) BETWEEN ((- (rt0.c1))) AND (rt0.c1))) ISNULL));
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON CASE WHEN CASE WHEN rt0.c1 THEN ' #zVE' WHEN rt0.c0 THEN rt0.c2 WHEN -816311258 THEN vt0.c0 ELSE x'93d2' END THEN (+ (rt0.c0)) ELSE ((rt0.c1)=(vt0.c0)) END;
SELECT DISTINCT vt0.c0 FROM vt0, rt0;
SELECT DISTINCT vt0.c0 FROM vt0, rt0 WHERE (((((((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(((0xffffffff8a789714)==(rt0.c2)))))OR(NULLIF(rt0.c2, vt0.c0)))) UNION SELECT DISTINCT vt0.c0 FROM vt0, rt0 WHERE ((NOT (((((((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(((0xffffffff8a789714)==(rt0.c2)))))OR(NULLIF(rt0.c2, vt0.c0)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0, rt0 WHERE (((((((((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(((0Xffffffff8a789714)==(rt0.c2)))))OR(NULLIF(rt0.c2, vt0.c0)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0, rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (0x25903b5) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (0X25903b5))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((0x25903b5) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((((rt0.c0)OR(COUNT(rt0.c2))))OR(rt0.c2)) COLLATE RTRIM UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (((((rt0.c0)OR(COUNT(rt0.c2))))OR(rt0.c2)) COLLATE RTRIM)) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((((((rt0.c0)OR(COUNT(rt0.c2))))OR(rt0.c2)) COLLATE RTRIM) ISNULL);
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((((rt0.c0)OR(COUNT(rt0.c2))))OR(rt0.c2)) COLLATE RTRIM UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (((((rt0.c0)OR(COUNT(rt0.c2))))OR(rt0.c2)) COLLATE RTRIM)) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((((((rt0.c0)OR(COUNT(rt0.c2))))OR(rt0.c2)) COLLATE RTRIM) ISNULL);
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (rt0.c2 COLLATE RTRIM) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (rt0.c2 COLLATE RTRIM))) UNION ALL SELECT * FROM rt0 WHERE (((rt0.c2 COLLATE RTRIM) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE ((+ (((rt0.c1)AND(0.6381352865666905))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT ((+ (((rt0.c1)AND(0.6381352865666905))))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((((+ (((rt0.c1)AND(0.6381352865666905))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM vt0, rt0 WHERE (CAST(rt0.c0 AS INTEGER)) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM vt0, rt0 WHERE ((NOT (CAST(rt0.c0 AS INTEGER)))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM vt0, rt0 WHERE (((CAST(rt0.c0 AS INTEGER)) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0;
SELECT ALL rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE (CAST(ABS(rt0.c1) AS BLOB)) UNION ALL SELECT ALL rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE ((NOT (CAST(ABS(rt0.c1) AS BLOB)))) UNION ALL SELECT rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE (((CAST(ABS(rt0.c1) AS BLOB)) ISNULL));
SELECT ALL rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (((((CAST(rt0.c0 AS BLOB))OR(((rt0.c0) NOTNULL))))AND(((((((((vt0.c0)AND(vt0.c0)))AND(rt0.c1)))AND(rt0.c0)))OR(''))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (((((CAST(rt0.c0 AS BLOB))OR(((rt0.c0) NOTNULL))))AND(((((((((vt0.c0)AND(vt0.c0)))AND(rt0.c1)))AND(rt0.c0)))OR(''))))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((((((CAST(rt0.c0 AS BLOB))OR(((rt0.c0) NOTNULL))))AND(((((((((vt0.c0)AND(vt0.c0)))AND(rt0.c1)))AND(rt0.c0)))OR(''))))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING TOTAL(TOTAL(COUNT(*))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (TOTAL(TOTAL(COUNT(*))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((TOTAL(TOTAL(COUNT(*)))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE ((((rt0.c1) ISNULL) IN ())) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((rt0.c1) ISNULL) IN ())))) UNION ALL SELECT * FROM rt0 WHERE ((((((rt0.c1) ISNULL) IN ())) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c2, vt0.c0 FROM vt0, rt0;
SELECT DISTINCT rt0.c2, vt0.c0 FROM vt0, rt0 WHERE (((0.7901973815616645) IS TRUE) COLLATE NOCASE) UNION SELECT DISTINCT rt0.c2, vt0.c0 FROM vt0, rt0 WHERE ((NOT (((0.7901973815616645) IS TRUE) COLLATE NOCASE))) UNION SELECT DISTINCT rt0.c2, vt0.c0 FROM vt0, rt0 WHERE (((((0.7901973815616645) IS TRUE) COLLATE NOCASE) ISNULL));
SELECT DISTINCT rt0.c2, vt0.c0 FROM vt0, rt0;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((((rt0.c2)<<(rt0.c1)))=(((((((((x'')AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c2))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c2)<<(rt0.c1)))=(((((((((x'')AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c2))))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((((((rt0.c2)<<(rt0.c1)))=(((((((((x'')AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c2))))) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0 HAVING LIKELIHOOD(((GROUP_CONCAT(MIN(vt0.c0)))>>(TOTAL(rt0.c2))), 0.5196028184785965) UNION ALL SELECT ALL rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0 HAVING (NOT (LIKELIHOOD(((GROUP_CONCAT(MIN(vt0.c0)))>>(TOTAL(rt0.c2))), 0.5196028184785965))) UNION ALL SELECT rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0 HAVING ((LIKELIHOOD(((GROUP_CONCAT(MIN(vt0.c0)))>>(TOTAL(rt0.c2))), 0.5196028184785965)) ISNULL);
SELECT SUM(((((vt0.c0) BETWEEN (vt0.c0) AND (x'')))OR((((vt0.c0))>((vt0.c0)))))) FROM vt0 ORDER BY CASE (vt0.c0 IN ())  WHEN 0xfffffffff7a6ca2c THEN LIKELY(vt0.c0) WHEN ((0.9409003384469572) IS FALSE) THEN TRIM(DISTINCT vt0.c0, vt0.c0) WHEN vt0.c0 COLLATE BINARY THEN (vt0.c0 IN (vt0.c0, vt0.c0)) WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN 1.929890973E9 WHEN vt0.c0 THEN (vt0.c0 IN (vt0.c0)) END DESC;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (vt0.c0) UNION ALL SELECT * FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON MAX((((vt0.c0, rt0.c0, rt0.c1, vt0.c0, rt0.c1))>=((rt0.c0, rt0.c2, rt0.c1, rt0.c2, rt0.c0))), ((rt0.c1) BETWEEN (x'08e1') AND (rt0.c2)));
SELECT DISTINCT vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON MAX((((vt0.c0, rt0.c0, rt0.c1, vt0.c0, rt0.c1))>=((rt0.c0, rt0.c2, rt0.c1, rt0.c2, rt0.c0))), ((rt0.c1) BETWEEN (x'08e1') AND (rt0.c2))) WHERE (((((((((((vt0.c0)AND(vt0.c0)))OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c2)))<<('kq'))) UNION SELECT DISTINCT vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON MAX((((vt0.c0, rt0.c0, rt0.c1, vt0.c0, rt0.c1))>=((rt0.c0, rt0.c2, rt0.c1, rt0.c2, rt0.c0))), ((rt0.c1) BETWEEN (x'08e1') AND (rt0.c2))) WHERE ((NOT (((((((((((vt0.c0)AND(vt0.c0)))OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c2)))<<('kq'))))) UNION SELECT DISTINCT vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON MAX((((vt0.c0, rt0.c0, rt0.c1, vt0.c0, rt0.c1))>=((rt0.c0, rt0.c2, rt0.c1, rt0.c2, rt0.c0))), ((rt0.c1) BETWEEN (x'08e1') AND (rt0.c2))) WHERE (((((((((((((vt0.c0)AND(vt0.c0)))OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c2)))<<('kq'))) ISNULL));
SELECT DISTINCT vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON MAX((((vt0.c0, rt0.c0, rt0.c1, vt0.c0, rt0.c1))>=((rt0.c0, rt0.c2, rt0.c1, rt0.c2, rt0.c0))), ((rt0.c1) BETWEEN (x'08e1') AND (rt0.c2)));
SELECT ALL rt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON ((rt0.c2) NOT BETWEEN (LIKELY(DISTINCT rt0.c2)) AND (-8.4112354E8)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON ((rt0.c2) NOT BETWEEN (LIKELY(DISTINCT rt0.c2)) AND (-8.4112354E8)) WHERE ((((rt0.c1 IN ())) BETWEEN (((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c0))) AND ((+ (rt0.c1))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON ((rt0.c2) NOT BETWEEN (LIKELY(DISTINCT rt0.c2)) AND (-8.4112354E8)) WHERE ((NOT ((((rt0.c1 IN ())) BETWEEN (((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c0))) AND ((+ (rt0.c1))))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON ((rt0.c2) NOT BETWEEN (LIKELY(DISTINCT rt0.c2)) AND (-8.4112354E8)) WHERE ((((((rt0.c1 IN ())) BETWEEN (((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c0))) AND ((+ (rt0.c1))))) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON ((rt0.c2) NOT BETWEEN (LIKELY(DISTINCT rt0.c2)) AND (-8.4112354E8)) GROUP BY rt0.c0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING SUM(AVG(MAX(x''))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (SUM(AVG(MAX(x''))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((SUM(AVG(MAX(x'')))) ISNULL);
SELECT ALL vt0.c0, rt0.c0, rt0.c2 FROM vt0, rt0;
SELECT vt0.c0, rt0.c0, rt0.c2 FROM vt0, rt0 WHERE ((((rt0.c0 IN (vt0.c0)))GLOB(((rt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) UNION ALL SELECT ALL vt0.c0, rt0.c0, rt0.c2 FROM vt0, rt0 WHERE ((NOT ((((rt0.c0 IN (vt0.c0)))GLOB(((rt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0))))))) UNION ALL SELECT ALL vt0.c0, rt0.c0, rt0.c2 FROM vt0, rt0 WHERE ((((((rt0.c0 IN (vt0.c0)))GLOB(((rt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL));
SELECT ALL vt0.c0, rt0.c0, rt0.c2 FROM vt0, rt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE ((((~ (rt0.c0))) NOTNULL)) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT ((((~ (rt0.c0))) NOTNULL)))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((((((~ (rt0.c0))) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (0.8043036875718103) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (0.8043036875718103))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 NOT INDEXED WHERE (((0.8043036875718103) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, rt0.c2, rt0.c1 HAVING ((((COUNT(rt0.c1))AND(((MAX(x''))%(rt0.c0)))))OR(COUNT(rt0.c1))) UNION ALL SELECT rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, rt0.c2, rt0.c1 HAVING (NOT (((((COUNT(rt0.c1))AND(((MAX(x''))%(rt0.c0)))))OR(COUNT(rt0.c1))))) UNION ALL SELECT ALL rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, rt0.c2, rt0.c1 HAVING ((((((COUNT(rt0.c1))AND(((MAX(x''))%(rt0.c0)))))OR(COUNT(rt0.c1)))) ISNULL);
SELECT rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, rt0.c2, rt0.c1 HAVING ((((COUNT(rt0.c1))AND(((MAX(x''))%(rt0.c0)))))OR(COUNT(rt0.c1))) UNION ALL SELECT rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, rt0.c2, rt0.c1 HAVING (NOT (((((COUNT(rt0.c1))AND(((MAX(x''))%(rt0.c0)))))OR(COUNT(rt0.c1))))) UNION ALL SELECT ALL rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, rt0.c2, rt0.c1 HAVING ((((((COUNT(rt0.c1))AND(((MAX(x''))%(rt0.c0)))))OR(COUNT(rt0.c1)))) ISNULL);
SELECT rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c2 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 WHERE (NULLIF(((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)), rt0.c0)) UNION ALL SELECT rt0.c2 FROM rt0 WHERE ((NOT (NULLIF(((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)), rt0.c0)))) UNION ALL SELECT rt0.c2 FROM rt0 WHERE (((NULLIF(((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)), rt0.c0)) ISNULL));
SELECT rt0.c2 FROM rt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (((vt0.c0)%(((rt0.c0) NOT NULL)))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (((vt0.c0)%(((rt0.c0) NOT NULL)))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((((vt0.c0)%(((rt0.c0) NOT NULL)))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0;
SELECT rt0.c0, vt0.c0 FROM rt0, vt0 WHERE (NULL) GROUP BY rt0.c0, vt0.c0 UNION SELECT ALL rt0.c0, vt0.c0 FROM rt0, vt0 NOT INDEXED WHERE ((NOT (NULL))) GROUP BY rt0.c0, vt0.c0 UNION SELECT ALL rt0.c0, vt0.c0 FROM rt0, vt0 WHERE (((NULL) ISNULL)) GROUP BY rt0.c0, vt0.c0;
SELECT rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (((rt0.c0))>=(((((COUNT(*), 0.895252522004446, NULL))<((SUM(TOTAL(AVG(COUNT(AVG(TOTAL(rt0.c1)))))), COUNT(*), MAX(COUNT(rt0.c0)))))))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT ((((rt0.c0))>=(((((COUNT(*), 0.895252522004446, NULL))<((SUM(TOTAL(AVG(COUNT(AVG(TOTAL(rt0.c1)))))), COUNT(*), MAX(COUNT(rt0.c0)))))))))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (((((rt0.c0))>=(((((COUNT(*), 0.895252522004446, NULL))<((SUM(TOTAL(AVG(COUNT(AVG(TOTAL(rt0.c1)))))), COUNT(*), MAX(COUNT(rt0.c0))))))))) ISNULL);
SELECT ALL * FROM rt0, vt0;
SELECT ALL * FROM rt0, vt0 WHERE ((((vt0.c0 IN ())) BETWEEN (((rt0.c1) BETWEEN (rt0.c1) AND (''))) AND ('1182279738' COLLATE RTRIM))) UNION ALL SELECT * FROM rt0, vt0 WHERE ((NOT ((((vt0.c0 IN ())) BETWEEN (((rt0.c1) BETWEEN (rt0.c1) AND (''))) AND ('1182279738' COLLATE RTRIM))))) UNION ALL SELECT * FROM rt0, vt0 WHERE ((((((vt0.c0 IN ())) BETWEEN (((rt0.c1) BETWEEN (rt0.c1) AND (''))) AND ('1182279738' COLLATE RTRIM))) ISNULL));
SELECT ALL * FROM rt0, vt0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((CAST(rt0.c1 AS NUMERIC))*(((rt0.c2)<<(rt0.c1))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT (((CAST(rt0.c1 AS NUMERIC))*(((rt0.c2)<<(rt0.c1))))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((((CAST(rt0.c1 AS NUMERIC))*(((rt0.c2)<<(rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((((x'') BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (vt0.c0 COLLATE NOCASE) AND (CAST(vt0.c0 AS INTEGER)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((x'') BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (vt0.c0 COLLATE NOCASE) AND (CAST(vt0.c0 AS INTEGER)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((x'') BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (vt0.c0 COLLATE NOCASE) AND (CAST(vt0.c0 AS INTEGER)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0 HAVING TOTAL(CASE WHEN COUNT(COUNT(vt0.c0)) THEN rt0.c1 ELSE COUNT(*) END) UNION ALL SELECT rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0 HAVING (NOT (TOTAL(CASE WHEN COUNT(COUNT(vt0.c0)) THEN rt0.c1 ELSE COUNT(*) END))) UNION ALL SELECT rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0 HAVING ((TOTAL(CASE WHEN COUNT(COUNT(vt0.c0)) THEN rt0.c1 ELSE COUNT(*) END)) ISNULL);
SELECT * FROM vt0, rt0;
SELECT * FROM vt0, rt0 WHERE (INSTR(vt0.c0, (((vt0.c0))>=((vt0.c0))))) UNION ALL SELECT * FROM vt0, rt0 WHERE ((NOT (INSTR(vt0.c0, (((vt0.c0))>=((vt0.c0))))))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE (((INSTR(vt0.c0, (((vt0.c0))>=((vt0.c0))))) ISNULL));
SELECT * FROM vt0, rt0;
SELECT DISTINCT vt0.c0 FROM vt0, rt0;
SELECT DISTINCT vt0.c0 FROM vt0, rt0 WHERE ((((vt0.c0) IS FALSE) IN ())) UNION SELECT DISTINCT vt0.c0 FROM vt0, rt0 WHERE ((NOT ((((vt0.c0) IS FALSE) IN ())))) UNION SELECT DISTINCT vt0.c0 FROM vt0 NOT INDEXED, rt0 WHERE ((((((vt0.c0) IS FALSE) IN ())) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0, rt0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((rt0.c0 IN ())) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((rt0.c0 IN ())))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((((rt0.c0 IN ())) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT((- (vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT((- (vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT((- (vt0.c0)))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT((- (vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT((- (vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT((- (vt0.c0)))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM rt0, vt0;
SELECT ALL * FROM rt0, vt0 WHERE (((((((rt0.c1)OR(rt0.c1)))AND(vt0.c0))) NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))) AND (NULLIF(rt0.c1, vt0.c0)))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((NOT (((((((rt0.c1)OR(rt0.c1)))AND(vt0.c0))) NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))) AND (NULLIF(rt0.c1, vt0.c0)))))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE (((((((((rt0.c1)OR(rt0.c1)))AND(vt0.c0))) NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))) AND (NULLIF(rt0.c1, vt0.c0)))) ISNULL));
SELECT * FROM rt0, vt0;
SELECT DISTINCT vt0.c0, rt0.c2, rt0.c0 FROM vt0, rt0;
SELECT DISTINCT vt0.c0, rt0.c2, rt0.c0 FROM vt0, rt0 WHERE (UPPER(DISTINCT (+ (rt0.c2)))) UNION SELECT DISTINCT vt0.c0, rt0.c2, rt0.c0 FROM vt0, rt0 WHERE ((NOT (UPPER(DISTINCT (+ (rt0.c2)))))) UNION SELECT DISTINCT vt0.c0, rt0.c2, rt0.c0 FROM vt0 NOT INDEXED, rt0 WHERE (((UPPER(DISTINCT (+ (rt0.c2)))) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c2, rt0.c0 FROM vt0, rt0;
SELECT ALL vt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c2;
SELECT vt0.c0, rt0.c2 FROM vt0, rt0 WHERE ((((~ (vt0.c0))) NOT NULL)) GROUP BY vt0.c0, rt0.c2 UNION SELECT vt0.c0, rt0.c2 FROM vt0, rt0 WHERE ((NOT ((((~ (vt0.c0))) NOT NULL)))) GROUP BY vt0.c0, rt0.c2 UNION SELECT vt0.c0, rt0.c2 FROM vt0, rt0 WHERE ((((((~ (vt0.c0))) NOT NULL)) ISNULL)) GROUP BY vt0.c0, rt0.c2;
SELECT ALL vt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c2;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(TOTAL(vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(TOTAL(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(TOTAL(vt0.c0))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0) IS FALSE) AS TEXT)) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (CAST(((vt0.c0) IS FALSE) AS TEXT)))) UNION ALL SELECT * FROM vt0 WHERE (((CAST(((vt0.c0) IS FALSE) AS TEXT)) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE ((- (((rt0.c2)+(rt0.c1))))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((- (((rt0.c2)+(rt0.c1))))))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE ((((- (((rt0.c2)+(rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c1 FROM vt0, rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM vt0, rt0 WHERE (((rt0.c1 COLLATE BINARY)!=((~ (rt0.c2))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM vt0, rt0 WHERE ((NOT (((rt0.c1 COLLATE BINARY)!=((~ (rt0.c2))))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM vt0, rt0 WHERE (((((rt0.c1 COLLATE BINARY)<>((~ (rt0.c2))))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM vt0, rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM vt0, rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM vt0, rt0 GROUP BY rt0.c1 HAVING ((((((((rt0.c2)AND(SUM(rt0.c1) COLLATE RTRIM)))OR(COUNT(rt0.c1))))AND(CASE WHEN SUM(MAX(rt0.c1)) THEN MAX(rt0.c1) END)))AND(MAX(rt0.c2))) UNION ALL SELECT ALL rt0.c1 FROM vt0, rt0 GROUP BY rt0.c1 HAVING (NOT (((((((((rt0.c2)AND(SUM(rt0.c1) COLLATE RTRIM)))OR(COUNT(rt0.c1))))AND(CASE WHEN SUM(MAX(rt0.c1)) THEN MAX(rt0.c1) END)))AND(MAX(rt0.c2))))) UNION ALL SELECT rt0.c1 FROM vt0, rt0 GROUP BY rt0.c1 HAVING ((((((((((rt0.c2)AND(SUM(rt0.c1) COLLATE RTRIM)))OR(COUNT(rt0.c1))))AND(CASE WHEN SUM(MAX(rt0.c1)) THEN MAX(rt0.c1) END)))AND(MAX(rt0.c2)))) ISNULL);
SELECT rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((- (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((- (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))))))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((((- (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) ISNULL));
SELECT rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (((rt0.c2 COLLATE BINARY)||(CAST(rt0.c0 AS BLOB)))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (((rt0.c2 COLLATE BINARY)||(CAST(rt0.c0 AS BLOB)))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((((rt0.c2 COLLATE BINARY)||(CAST(rt0.c0 AS BLOB)))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, vt0.c0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0 WHERE (CASE rt0.c0  WHEN 0.16174496442260344 THEN CASE NULL  WHEN rt0.c1 THEN rt0.c0 END WHEN LIKELIHOOD(DISTINCT rt0.c0, 0.10098988732798697) THEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END WHEN (vt0.c0 IN ()) THEN ((rt0.c0)>(rt0.c2)) ELSE ((vt0.c0)>=(x'')) END) GROUP BY rt0.c0, rt0.c2, rt0.c1, vt0.c0 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0 WHERE ((NOT (CASE rt0.c0  WHEN 0.16174496442260344 THEN CASE NULL  WHEN rt0.c1 THEN rt0.c0 END WHEN LIKELIHOOD(DISTINCT rt0.c0, 0.10098988732798697) THEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END WHEN (vt0.c0 IN ()) THEN ((rt0.c0)>(rt0.c2)) ELSE ((vt0.c0)>=(x'')) END))) GROUP BY rt0.c0, rt0.c2, rt0.c1, vt0.c0 UNION SELECT rt0.c0, rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0 WHERE (((CASE rt0.c0  WHEN 0.16174496442260344 THEN CASE NULL  WHEN rt0.c1 THEN rt0.c0 END WHEN LIKELIHOOD(DISTINCT rt0.c0, 0.10098988732798697) THEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END WHEN (vt0.c0 IN ()) THEN ((rt0.c0)>(rt0.c2)) ELSE ((vt0.c0)>=(x'')) END) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1, vt0.c0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((SUM(vt0.c0)) NOT NULL) IN ()) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((SUM(vt0.c0)) NOT NULL) IN ()))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((SUM(vt0.c0)) NOT NULL) IN ())) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((SUM(vt0.c0)) NOT NULL) IN ()) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((SUM(vt0.c0)) NOT NULL) IN ()))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((SUM(vt0.c0)) NOT NULL) IN ())) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0)<(vt0.c0))  WHEN (((vt0.c0))<=((''))) THEN (+ (x'')) END) UNION ALL SELECT * FROM vt0 WHERE ((NOT (CASE ((vt0.c0)<(vt0.c0))  WHEN (((vt0.c0))<=((''))) THEN (+ (x'')) END))) UNION ALL SELECT * FROM vt0 WHERE (((CASE ((vt0.c0)<(vt0.c0))  WHEN (((vt0.c0))<=((''))) THEN (+ (x'')) END) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (json(((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (json(((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((json(((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 END))<=((((((rt0.c2)AND(x'6e62')))AND(rt0.c1)))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 END))<=((((((rt0.c2)AND(x'6e62')))AND(rt0.c1)))))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 END))<=((((((rt0.c2)AND(x'6e62')))AND(rt0.c1)))))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c1, rt0.c0;
SELECT rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c1, rt0.c0 HAVING MIN(CASE rt0.c2  WHEN COUNT(MIN(rt0.c2)) THEN rt0.c0 END) UNION ALL SELECT ALL rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c1, rt0.c0 HAVING (NOT (MIN(CASE rt0.c2  WHEN COUNT(MIN(rt0.c2)) THEN rt0.c0 END))) UNION ALL SELECT ALL rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c1, rt0.c0 HAVING ((MIN(CASE rt0.c2  WHEN COUNT(MIN(rt0.c2)) THEN rt0.c0 END)) ISNULL);
SELECT ALL * FROM rt0, vt0;
SELECT * FROM rt0, vt0 WHERE ((((rt0.c2 IN ()))=(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((NOT ((((rt0.c2 IN ()))=(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))))))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((((((rt0.c2 IN ()))==(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) ISNULL));
SELECT ALL * FROM rt0, vt0;
SELECT DISTINCT rt0.c2 FROM rt0, vt0;
SELECT DISTINCT rt0.c2 FROM rt0, vt0 WHERE ('2028940859') UNION SELECT DISTINCT rt0.c2 FROM rt0, vt0 WHERE ((NOT ('2028940859'))) UNION SELECT DISTINCT rt0.c2 FROM rt0, vt0 WHERE ((('2028940859') ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0, vt0;
SELECT ALL rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0;
SELECT rt0.c1, vt0.c0 FROM rt0, vt0 WHERE (((rt0.c0)>>(vt0.c0)) COLLATE RTRIM) GROUP BY rt0.c1, vt0.c0 UNION SELECT ALL rt0.c1, vt0.c0 FROM rt0, vt0 WHERE ((NOT (((rt0.c0)>>(vt0.c0)) COLLATE RTRIM))) GROUP BY rt0.c1, vt0.c0 UNION SELECT ALL rt0.c1, vt0.c0 FROM rt0, vt0 WHERE (((((rt0.c0)>>(vt0.c0)) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c1, vt0.c0;
SELECT ALL rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0;
SELECT vt0.c0, rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c1, rt0.c0;
SELECT vt0.c0, rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c1, rt0.c0 HAVING SUM(MIN(COUNT(rt0.c1))) UNION ALL SELECT ALL vt0.c0, rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c1, rt0.c0 HAVING (NOT (SUM(MIN(COUNT(rt0.c1))))) UNION ALL SELECT vt0.c0, rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c1, rt0.c0 HAVING ((SUM(MIN(COUNT(rt0.c1)))) ISNULL);
SELECT vt0.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0;
SELECT ALL vt0.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0 WHERE (ROUND(rt0.c2, NULL)) UNION ALL SELECT ALL vt0.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0 WHERE ((NOT (ROUND(rt0.c2, NULL)))) UNION ALL SELECT ALL vt0.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0 WHERE (((ROUND(rt0.c2, NULL)) ISNULL));
SELECT vt0.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0;
SELECT DISTINCT * FROM rt0 CROSS JOIN vt0 ON (((rt0.c1, vt0.c0, rt0.c2)) BETWEEN ((((rt0.c2) ISNULL), ((rt0.c2)LIKE(vt0.c0)), ((NULL) BETWEEN (rt0.c1) AND (vt0.c0)))) AND ((((((vt0.c0)OR(vt0.c0)))AND(rt0.c0)), ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)), ((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT DISTINCT * FROM rt0 CROSS JOIN vt0 ON (((rt0.c1, vt0.c0, rt0.c2)) BETWEEN ((((rt0.c2) ISNULL), ((rt0.c2)LIKE(vt0.c0)), ((NULL) BETWEEN (rt0.c1) AND (vt0.c0)))) AND ((((((vt0.c0)OR(vt0.c0)))AND(rt0.c0)), ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)), ((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) WHERE (((NULL)|(vt0.c0))) UNION SELECT DISTINCT * FROM rt0 CROSS JOIN vt0 ON (((rt0.c1, vt0.c0, rt0.c2)) BETWEEN ((((rt0.c2) ISNULL), ((rt0.c2)LIKE(vt0.c0)), ((NULL) BETWEEN (rt0.c1) AND (vt0.c0)))) AND ((((((vt0.c0)OR(vt0.c0)))AND(rt0.c0)), ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)), ((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) WHERE ((NOT (((NULL)|(vt0.c0))))) UNION SELECT DISTINCT * FROM rt0 CROSS JOIN vt0 ON (((rt0.c1, vt0.c0, rt0.c2)) BETWEEN ((((rt0.c2) ISNULL), ((rt0.c2)LIKE(vt0.c0)), ((NULL) BETWEEN (rt0.c1) AND (vt0.c0)))) AND ((((((vt0.c0)OR(vt0.c0)))AND(rt0.c0)), ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)), ((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) WHERE (((((NULL)|(vt0.c0))) ISNULL));
SELECT DISTINCT * FROM rt0 CROSS JOIN vt0 ON (((rt0.c1, vt0.c0, rt0.c2)) BETWEEN ((((rt0.c2) ISNULL), ((rt0.c2)LIKE(vt0.c0)), ((NULL) BETWEEN (rt0.c1) AND (vt0.c0)))) AND ((((((vt0.c0)OR(vt0.c0)))AND(rt0.c0)), ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)), ((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0))<=((vt0.c0))))>=(vt0.c0 COLLATE NOCASE))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((((vt0.c0))<=((vt0.c0))))>=(vt0.c0 COLLATE NOCASE))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((((vt0.c0))<=((vt0.c0))))>=(vt0.c0 COLLATE NOCASE))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c0;
SELECT ALL vt0.c0, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c0 HAVING AVG(rt0.c2) COLLATE BINARY UNION ALL SELECT vt0.c0, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c0 HAVING (NOT (AVG(rt0.c2) COLLATE BINARY)) UNION ALL SELECT ALL vt0.c0, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c0 HAVING ((AVG(rt0.c2) COLLATE BINARY) ISNULL);
SELECT vt0.c0, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c0;
SELECT ALL vt0.c0, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c0 HAVING AVG(rt0.c2) COLLATE BINARY UNION ALL SELECT vt0.c0, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c0 HAVING (NOT (AVG(rt0.c2) COLLATE BINARY)) UNION ALL SELECT ALL vt0.c0, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c0 HAVING ((AVG(rt0.c2) COLLATE BINARY) ISNULL);
SELECT vt0.c0, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c0;
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON (- (((vt0.c0)+(rt0.c2))));
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON (- (((vt0.c0)+(rt0.c2)))) WHERE (((CAST(rt0.c0 AS BLOB))&(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END))) UNION ALL SELECT * FROM vt0 FULL OUTER JOIN rt0 ON (- (((vt0.c0)+(rt0.c2)))) WHERE ((NOT (((CAST(rt0.c0 AS BLOB))&(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END))))) UNION ALL SELECT * FROM vt0 FULL OUTER JOIN rt0 ON (- (((vt0.c0)+(rt0.c2)))) WHERE (((((CAST(rt0.c0 AS BLOB))&(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END))) ISNULL));
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON (- (((vt0.c0)+(rt0.c2))));
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (rt0.c0) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((~ (vt0.c0)))%((- (vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((~ (vt0.c0)))%((- (vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((~ (vt0.c0)))%((- (vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING COUNT(((((0.236128647292146)AND(rt0.c2)))OR(MAX(rt0.c0)))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (COUNT(((((0.236128647292146)AND(rt0.c2)))OR(MAX(rt0.c0)))))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((COUNT(((((0.236128647292146)AND(rt0.c2)))OR(MAX(rt0.c0))))) ISNULL);
SELECT rt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c2) IS FALSE)) BETWEEN (((((((((rt0.c1)OR(rt0.c1)))AND(0.5251383092387791)))AND(1.727502717E9)))AND(NULL))) AND (CASE WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c1 END));
SELECT rt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c2) IS FALSE)) BETWEEN (((((((((rt0.c1)OR(rt0.c1)))AND(0.5251383092387791)))AND(1.727502717E9)))AND(NULL))) AND (CASE WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c1 END)) WHERE ((((vt0.c0)<<(rt0.c0)) IN ())) UNION ALL SELECT ALL rt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c2) IS FALSE)) BETWEEN (((((((((rt0.c1)OR(rt0.c1)))AND(0.5251383092387791)))AND(1.727502717E9)))AND(NULL))) AND (CASE WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c1 END)) WHERE ((NOT ((((vt0.c0)<<(rt0.c0)) IN ())))) UNION ALL SELECT rt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c2) IS FALSE)) BETWEEN (((((((((rt0.c1)OR(rt0.c1)))AND(0.5251383092387791)))AND(1.727502717E9)))AND(NULL))) AND (CASE WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c1 END)) WHERE ((((((vt0.c0)<<(rt0.c0)) IN ())) ISNULL));
SELECT rt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c2) IS FALSE)) BETWEEN (((((((((rt0.c1)OR(rt0.c1)))AND(0.5251383092387791)))AND(1.727502717E9)))AND(NULL))) AND (CASE WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c1 END));
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (rt0.c2) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT * FROM rt0, vt0 NOT INDEXED WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE (((-1595376353) NOT BETWEEN ((rt0.c2 IN ())) AND (((rt0.c2)>=(rt0.c2))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT (((-1595376353) NOT BETWEEN ((rt0.c2 IN ())) AND (((rt0.c2)>=(rt0.c2))))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE (((((-1595376353) NOT BETWEEN ((rt0.c2 IN ())) AND (((rt0.c2)>=(rt0.c2))))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING TOTAL(((rt0.c1)>>(rt0.c1))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (TOTAL(((rt0.c1)>>(rt0.c1))))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((TOTAL(((rt0.c1)>>(rt0.c1)))) ISNULL);
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING TOTAL(((rt0.c1)>>(rt0.c1))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (TOTAL(((rt0.c1)>>(rt0.c1))))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((TOTAL(((rt0.c1)>>(rt0.c1)))) ISNULL);
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE ((((NOT (vt0.c0))) NOT NULL)) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((((NOT (vt0.c0))) NOT NULL)))) UNION ALL SELECT * FROM vt0 WHERE ((((((NOT (vt0.c0))) NOT NULL)) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c0 IN (rt0.c0)))IS NOT(DATE(rt0.c0, rt0.c0, '', rt0.c0, rt0.c1)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((rt0.c0 IN (rt0.c0)))IS NOT(DATE(rt0.c0, rt0.c0, '', rt0.c0, rt0.c1)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c0 IN (rt0.c0)))IS NOT(DATE(rt0.c0, rt0.c0, '', rt0.c0, rt0.c1)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM vt0, rt0 WHERE (rt0.c1) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM vt0, rt0 WHERE ((NOT (rt0.c1))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM vt0, rt0 WHERE (((rt0.c1) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING MIN(MIN(COUNT(*))) COLLATE RTRIM UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (MIN(MIN(COUNT(*))) COLLATE RTRIM)) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((MIN(MIN(COUNT(*))) COLLATE RTRIM) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((+ (TRIM(vt0.c0, vt0.c0)))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((+ (TRIM(vt0.c0, vt0.c0)))))) UNION ALL SELECT * FROM vt0 WHERE ((((+ (TRIM(vt0.c0, vt0.c0)))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (CASE CASE WHEN rt0.c0 THEN rt0.c0 END  WHEN (vt0.c0 IN ()) THEN CASE WHEN rt0.c2 THEN rt0.c2 END ELSE ((rt0.c0)<=(vt0.c0)) END) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (CASE CASE WHEN rt0.c0 THEN rt0.c0 END  WHEN (vt0.c0 IN ()) THEN CASE WHEN rt0.c2 THEN rt0.c2 END ELSE ((rt0.c0)<=(vt0.c0)) END))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((CASE CASE WHEN rt0.c0 THEN rt0.c0 END  WHEN (vt0.c0 IN ()) THEN CASE WHEN rt0.c2 THEN rt0.c2 END ELSE ((rt0.c0)<=(vt0.c0)) END) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT rt0.c2 FROM rt0 CROSS JOIN vt0 ON rt0.c1 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 CROSS JOIN vt0 ON rt0.c1 WHERE ((((((((rt0.c2, rt0.c1, rt0.c1)) BETWEEN ((rt0.c0, rt0.c1, vt0.c0)) AND ((rt0.c1, rt0.c2, rt0.c2))))AND(((vt0.c0) IS TRUE))))AND(CASE WHEN rt0.c2 THEN rt0.c1 END))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 CROSS JOIN vt0 ON rt0.c1 WHERE ((NOT ((((((((rt0.c2, rt0.c1, rt0.c1)) BETWEEN ((rt0.c0, rt0.c1, vt0.c0)) AND ((rt0.c1, rt0.c2, rt0.c2))))AND(((vt0.c0) IS TRUE))))AND(CASE WHEN rt0.c2 THEN rt0.c1 END))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 CROSS JOIN vt0 ON rt0.c1 WHERE ((((((((((rt0.c2, rt0.c1, rt0.c1)) BETWEEN ((rt0.c0, rt0.c1, vt0.c0)) AND ((rt0.c1, rt0.c2, rt0.c2))))AND(((vt0.c0) IS TRUE))))AND(CASE WHEN rt0.c2 THEN rt0.c1 END))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 CROSS JOIN vt0 ON rt0.c1 GROUP BY rt0.c2;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX(SUM(TOTAL(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(SUM(TOTAL(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(SUM(TOTAL(vt0.c0)))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((((((((((((((rt0.c2) NOTNULL))AND(rt0.c0 COLLATE RTRIM)))AND((NULL IN (rt0.c1)))))AND(((rt0.c2) IS FALSE))))OR(LAST_INSERT_ROWID())))AND((((NULL))!=((rt0.c2))))))AND(TYPEOF(DISTINCT rt0.c2)))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((((((((((((rt0.c2) NOTNULL))AND(rt0.c0 COLLATE RTRIM)))AND((NULL IN (rt0.c1)))))AND(((rt0.c2) IS FALSE))))OR(LAST_INSERT_ROWID())))AND((((NULL))!=((rt0.c2))))))AND(TYPEOF(DISTINCT rt0.c2)))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((((((((((((rt0.c2) NOTNULL))AND(rt0.c0 COLLATE RTRIM)))AND((NULL IN (rt0.c1)))))AND(((rt0.c2) IS FALSE))))OR(LAST_INSERT_ROWID())))AND((((NULL))!=((rt0.c2))))))AND(TYPEOF(DISTINCT rt0.c2)))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0, vt0.c0 FROM rt0, vt0;
SELECT DISTINCT rt0.c2, rt0.c0, vt0.c0 FROM rt0, vt0 WHERE (((((((rt0.c0)AND(rt0.c0)))OR(vt0.c0))) IS FALSE)) UNION SELECT DISTINCT rt0.c2, rt0.c0, vt0.c0 FROM rt0, vt0 WHERE ((NOT (((((((rt0.c0)AND(rt0.c0)))OR(vt0.c0))) IS FALSE)))) UNION SELECT DISTINCT rt0.c2, rt0.c0, vt0.c0 FROM rt0, vt0 WHERE (((((((((rt0.c0)AND(rt0.c0)))OR(vt0.c0))) IS FALSE)) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, vt0.c0 FROM rt0, vt0;
SELECT vt0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT vt0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0 WHERE (((rt0.c2)GLOB('-103542849')) COLLATE RTRIM) GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c0 UNION SELECT vt0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0 WHERE ((NOT (((rt0.c2)GLOB('-103542849')) COLLATE RTRIM))) GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL vt0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0 WHERE (((((rt0.c2)GLOB('-103542849')) COLLATE RTRIM) ISNULL)) GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT vt0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING SUM(((rt0.c0) IS FALSE)) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (SUM(((rt0.c0) IS FALSE)))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((SUM(((rt0.c0) IS FALSE))) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING SUM(((rt0.c0) IS FALSE)) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (SUM(((rt0.c0) IS FALSE)))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((SUM(((rt0.c0) IS FALSE))) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT * FROM vt0 NOT INDEXED, rt0;
SELECT * FROM vt0, rt0 WHERE ('1812930772') UNION ALL SELECT * FROM vt0, rt0 WHERE ((NOT ('1812930772'))) UNION ALL SELECT * FROM vt0, rt0 WHERE ((('1812930772') ISNULL));
SELECT * FROM vt0 NOT INDEXED, rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON (- ((rt0.c0 IN ())));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON (- ((rt0.c0 IN ()))) WHERE (CAST((((rt0.c2, rt0.c0, rt0.c0)) BETWEEN ((vt0.c0, 's78^wUH拾', rt0.c2)) AND ((rt0.c0, rt0.c2, rt0.c1))) AS REAL)) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON (- ((rt0.c0 IN ()))) WHERE ((NOT (CAST((((rt0.c2, rt0.c0, rt0.c0)) BETWEEN ((vt0.c0, 's78^wUH拾', rt0.c2)) AND ((rt0.c0, rt0.c2, rt0.c1))) AS REAL)))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON (- ((rt0.c0 IN ()))) WHERE (((CAST((((rt0.c2, rt0.c0, rt0.c0)) BETWEEN ((vt0.c0, 's78^wUH拾', rt0.c2)) AND ((rt0.c0, rt0.c2, rt0.c1))) AS REAL)) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON (- ((rt0.c0 IN ())));
SELECT ALL rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM vt0, rt0 WHERE (((UPPER(rt0.c2))-((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0)))))) GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM vt0, rt0 WHERE ((NOT (((UPPER(rt0.c2))-((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0)))))))) GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM vt0, rt0 WHERE (((((UPPER(rt0.c2))-((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0)))))) ISNULL)) GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((CAST(rt0.c0 AS REAL)) NOTNULL) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (((CAST(rt0.c0 AS REAL)) NOTNULL))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((((CAST(rt0.c0 AS REAL)) NOTNULL)) ISNULL);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((CAST(rt0.c0 AS REAL)) NOTNULL) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (((CAST(rt0.c0 AS REAL)) NOTNULL))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((((CAST(rt0.c0 AS REAL)) NOTNULL)) ISNULL);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL * FROM vt0, rt0;
SELECT * FROM vt0, rt0 WHERE (NULL) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE ((NOT (NULL))) UNION ALL SELECT * FROM vt0, rt0 WHERE (((NULL) ISNULL));
SELECT ALL * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (load_extension(vt0.c0, CASE WHEN 918728067 THEN vt0.c0 END)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (load_extension(vt0.c0, CASE WHEN 918728067 THEN vt0.c0 END)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((load_extension(vt0.c0, CASE WHEN 918728067 THEN vt0.c0 END)) ISNULL));
SELECT vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c1, rt0.c0;
SELECT ALL vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE (((((rt0.c2) NOTNULL))|(rt0.c0))) GROUP BY vt0.c0, rt0.c1, rt0.c0 UNION SELECT ALL vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE ((NOT (((((rt0.c2) NOTNULL))|(rt0.c0))))) GROUP BY vt0.c0, rt0.c1, rt0.c0 UNION SELECT ALL vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE (((((((rt0.c2) NOTNULL))|(rt0.c0))) ISNULL)) GROUP BY vt0.c0, rt0.c1, rt0.c0;
SELECT vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c1, rt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(0X58e7d66c)) NOT BETWEEN (GROUP_CONCAT(SUM(vt0.c0))) AND (COUNT(SUM(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((TOTAL(0x58e7d66c)) NOT BETWEEN (GROUP_CONCAT(SUM(vt0.c0))) AND (COUNT(SUM(vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((TOTAL(0X58e7d66c)) NOT BETWEEN (GROUP_CONCAT(SUM(vt0.c0))) AND (COUNT(SUM(vt0.c0))))) ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((x'' IN ())) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((x'' IN ())))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((x'' IN ())) ISNULL));
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))==(((((NULL)OR(rt0.c1)))AND(rt0.c1))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))=(((((NULL)OR(rt0.c1)))AND(rt0.c1))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))=(((((NULL)OR(rt0.c1)))AND(rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT vt0.c0, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c0;
SELECT vt0.c0, rt0.c0 FROM rt0, vt0 WHERE ((~ (vt0.c0 COLLATE RTRIM))) GROUP BY vt0.c0, rt0.c0 UNION SELECT vt0.c0, rt0.c0 FROM rt0, vt0 WHERE ((NOT ((~ (vt0.c0 COLLATE RTRIM))))) GROUP BY vt0.c0, rt0.c0 UNION SELECT ALL vt0.c0, rt0.c0 FROM rt0, vt0 WHERE ((((~ (vt0.c0 COLLATE RTRIM))) ISNULL)) GROUP BY vt0.c0, rt0.c0;
SELECT vt0.c0, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c0;
SELECT ALL rt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON ((((((((rt0.c0)AND(rt0.c0)))AND(vt0.c0)))AND(x'')))OR(vt0.c0)) COLLATE BINARY GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON ((((((((rt0.c0)AND(rt0.c0)))AND(vt0.c0)))AND(x'')))OR(vt0.c0)) COLLATE BINARY GROUP BY rt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON ((((((((rt0.c0)AND(rt0.c0)))AND(vt0.c0)))AND(x'')))OR(vt0.c0)) COLLATE BINARY GROUP BY rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON ((((((((rt0.c0)AND(rt0.c0)))AND(vt0.c0)))AND(x'')))OR(vt0.c0)) COLLATE BINARY GROUP BY rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON ((((((((rt0.c0)AND(rt0.c0)))AND(vt0.c0)))AND(x'')))OR(vt0.c0)) COLLATE BINARY GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON ((((((((rt0.c0)AND(rt0.c0)))AND(vt0.c0)))AND(x'')))OR(vt0.c0)) COLLATE BINARY GROUP BY rt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON ((((((((rt0.c0)AND(rt0.c0)))AND(vt0.c0)))AND(x'')))OR(vt0.c0)) COLLATE BINARY GROUP BY rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON ((((((((rt0.c0)AND(rt0.c0)))AND(vt0.c0)))AND(x'')))OR(vt0.c0)) COLLATE BINARY GROUP BY rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON ((((((((rt0.c0)AND(rt0.c0)))AND(vt0.c0)))AND(x'')))OR(vt0.c0)) COLLATE BINARY GROUP BY rt0.c0;
SELECT ALL MAX(((rt0.c2)<<(rt0.c2)) COLLATE NOCASE) FROM rt0 ORDER BY x'' ASC  NULLS FIRST;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c0 AS TEXT) COLLATE BINARY) UNION ALL SELECT * FROM vt0 WHERE ((NOT (CAST(vt0.c0 AS TEXT) COLLATE BINARY))) UNION ALL SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT) COLLATE BINARY) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c2) NOT NULL) IN (PRINTF(rt0.c2)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((rt0.c2) NOT NULL) IN (PRINTF(rt0.c2)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c2) NOT NULL) IN (PRINTF(rt0.c2)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT vt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c1, rt0.c2;
SELECT ALL vt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 WHERE ((- (((vt0.c0)<(rt0.c2))))) GROUP BY vt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL vt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 WHERE ((NOT ((- (((vt0.c0)<(rt0.c2))))))) GROUP BY vt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL vt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 WHERE ((((- (((vt0.c0)<(rt0.c2))))) ISNULL)) GROUP BY vt0.c0, rt0.c1, rt0.c2;
SELECT vt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c2 HAVING CASE WHEN COUNT(*) THEN MAX(rt0.c2) END UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (CASE WHEN COUNT(*) THEN MAX(rt0.c2) END)) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 NOT INDEXED, vt0 GROUP BY rt0.c0, rt0.c2 HAVING ((CASE WHEN COUNT(*) THEN MAX(rt0.c2) END) ISNULL);
SELECT rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c2 HAVING CASE WHEN COUNT(*) THEN MAX(rt0.c2) END UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (CASE WHEN COUNT(*) THEN MAX(rt0.c2) END)) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 NOT INDEXED, vt0 GROUP BY rt0.c0, rt0.c2 HAVING ((CASE WHEN COUNT(*) THEN MAX(rt0.c2) END) ISNULL);
SELECT rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c2;
SELECT * FROM vt0, rt0;
SELECT ALL * FROM vt0, rt0 WHERE (((0.8043036875718103)<(json_quote(vt0.c0)))) UNION ALL SELECT * FROM vt0, rt0 WHERE ((NOT (((0.8043036875718103)<(json_quote(vt0.c0)))))) UNION ALL SELECT * FROM vt0, rt0 WHERE (((((0.8043036875718103)<(json_quote(vt0.c0)))) ISNULL));
SELECT DISTINCT * FROM rt0 NATURAL JOIN vt0;
SELECT DISTINCT * FROM rt0 NATURAL JOIN vt0 WHERE (((('-1328359331') NOTNULL) IN (CAST(rt0.c2 AS REAL)))) UNION SELECT DISTINCT * FROM rt0 NATURAL JOIN vt0 WHERE ((NOT (((('-1328359331') NOTNULL) IN (CAST(rt0.c2 AS REAL)))))) UNION SELECT DISTINCT * FROM rt0 NATURAL JOIN vt0 WHERE (((((('-1328359331') NOTNULL) IN (CAST(rt0.c2 AS REAL)))) ISNULL));
SELECT DISTINCT * FROM rt0 NATURAL JOIN vt0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (CASE WHEN rt0.c1 THEN ((rt0.c2)|(rt0.c2)) END) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (CASE WHEN rt0.c1 THEN ((rt0.c2)|(rt0.c2)) END))) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN ((rt0.c2)|(rt0.c2)) END) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT((vt0.c0 IN ())) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT((vt0.c0 IN ())))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT((vt0.c0 IN ()))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT((vt0.c0 IN ())) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT((vt0.c0 IN ())))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT((vt0.c0 IN ()))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0 WHERE (((rt0.c0)IS(vt0.c0)) COLLATE NOCASE) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0 WHERE ((NOT (((rt0.c0)IS(vt0.c0)) COLLATE NOCASE))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0 WHERE (((((rt0.c0)IS(vt0.c0)) COLLATE NOCASE) ISNULL));
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (((((rt0.c2)||(vt0.c0))) NOT BETWEEN (((rt0.c0)/(rt0.c1))) AND ((NULL IN (rt0.c1))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (((((rt0.c2)||(vt0.c0))) NOT BETWEEN (((rt0.c0)/(rt0.c1))) AND ((NULL IN (rt0.c1))))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((((((rt0.c2)||(vt0.c0))) NOT BETWEEN (((rt0.c0)/(rt0.c1))) AND ((NULL IN (rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT ALL vt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON ((((((((((((rt0.c0)AND(rt0.c2)))AND(-1.328359331E9)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c2)) COLLATE RTRIM GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON ((((((((((((rt0.c0)AND(rt0.c2)))AND(-1.328359331E9)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c2)) COLLATE RTRIM WHERE (TYPEOF(DISTINCT (('-952370971') BETWEEN (vt0.c0) AND (rt0.c2)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON ((((((((((((rt0.c0)AND(rt0.c2)))AND(-1.328359331E9)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c2)) COLLATE RTRIM WHERE ((NOT (TYPEOF(DISTINCT (('-952370971') BETWEEN (vt0.c0) AND (rt0.c2)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON ((((((((((((rt0.c0)AND(rt0.c2)))AND(-1.328359331E9)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c2)) COLLATE RTRIM WHERE (((TYPEOF(DISTINCT (('-952370971') BETWEEN (vt0.c0) AND (rt0.c2)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON ((((((((((((rt0.c0)AND(rt0.c2)))AND(-1.328359331E9)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c2)) COLLATE RTRIM GROUP BY vt0.c0;
SELECT ALL vt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c1;
SELECT ALL vt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c1 HAVING MAX(((rt0.c0)*(rt0.c2))) UNION ALL SELECT ALL vt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c1 HAVING (NOT (MAX(((rt0.c0)*(rt0.c2))))) UNION ALL SELECT ALL vt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c1 HAVING ((MAX(((rt0.c0)*(rt0.c2)))) ISNULL);
SELECT ALL vt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c1;
SELECT ALL vt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c1 HAVING MAX(((rt0.c0)*(rt0.c2))) UNION ALL SELECT ALL vt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c1 HAVING (NOT (MAX(((rt0.c0)*(rt0.c2))))) UNION ALL SELECT ALL vt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c1 HAVING ((MAX(((rt0.c0)*(rt0.c2)))) ISNULL);
SELECT ALL vt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c1;
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c0))>=((NULL)))) ISNULL)) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((((vt0.c0))>=((NULL)))) ISNULL)))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((((((vt0.c0))>=((NULL)))) ISNULL)) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((vt0.c0)IS(vt0.c0)))OR(((vt0.c0)>>(vt0.c0)))))AND(vt0.c0 COLLATE RTRIM))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((((vt0.c0)IS(vt0.c0)))OR(((vt0.c0)>>(vt0.c0)))))AND(vt0.c0 COLLATE RTRIM))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((((vt0.c0)IS(vt0.c0)))OR(((vt0.c0)>>(vt0.c0)))))AND(vt0.c0 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 NOT INDEXED WHERE ((- (CAST(vt0.c0 AS INTEGER)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((- (CAST(vt0.c0 AS INTEGER)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((- (CAST(vt0.c0 AS INTEGER)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG(TOTAL(vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c0 HAVING (NOT (AVG(TOTAL(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG(TOTAL(vt0.c0))) ISNULL);
SELECT SUM(((((((rt0.c2)AND(rt0.c0)))OR(0.9555638210245244))) NOT BETWEEN ((- (x'75e15028'))) AND (CASE rt0.c2  WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END))) FROM rt0, vt0 ORDER BY NULL  NULLS FIRST;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CASE 458860306  WHEN rt0.c0 THEN (((rt0.c1, rt0.c0, rt0.c0)) BETWEEN ((rt0.c2, rt0.c1, rt0.c1)) AND ((rt0.c1, rt0.c0, rt0.c1))) WHEN ((rt0.c1)IS(rt0.c0)) THEN x'' WHEN LIKE(rt0.c1, rt0.c2) THEN rt0.c0 COLLATE RTRIM ELSE (+ (rt0.c1)) END) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (CASE 458860306  WHEN rt0.c0 THEN (((rt0.c1, rt0.c0, rt0.c0)) BETWEEN ((rt0.c2, rt0.c1, rt0.c1)) AND ((rt0.c1, rt0.c0, rt0.c1))) WHEN ((rt0.c1)IS(rt0.c0)) THEN x'' WHEN LIKE(rt0.c1, rt0.c2) THEN rt0.c0 COLLATE RTRIM ELSE (+ (rt0.c1)) END))) UNION ALL SELECT * FROM rt0 WHERE (((CASE 458860306  WHEN rt0.c0 THEN (((rt0.c1, rt0.c0, rt0.c0)) BETWEEN ((rt0.c2, rt0.c1, rt0.c1)) AND ((rt0.c1, rt0.c0, rt0.c1))) WHEN ((rt0.c1)IS(rt0.c0)) THEN x'' WHEN LIKE(rt0.c1, rt0.c2) THEN rt0.c0 COLLATE RTRIM ELSE (+ (rt0.c1)) END) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (0.3628077793613821) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (0.3628077793613821))) UNION SELECT DISTINCT * FROM vt0 WHERE (((0.3628077793613821) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, vt0 WHERE (rt0.c2) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0, vt0 WHERE ((NOT (rt0.c2))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0, vt0 WHERE (((rt0.c2) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING MAX(((MIN(COUNT(rt0.c2)))IS NOT(rt0.c2))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (MAX(((MIN(COUNT(rt0.c2)))IS NOT(rt0.c2))))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((MAX(((MIN(COUNT(rt0.c2)))IS NOT(rt0.c2)))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (json_remove(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), SQLITE_VERSION())) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (json_remove(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), SQLITE_VERSION())))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((json_remove(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), SQLITE_VERSION())) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c1, rt0.c0 FROM vt0 INNER JOIN rt0 ON ((x'9523') BETWEEN (((rt0.c2) ISNULL)) AND (NULLIF(DISTINCT rt0.c1, rt0.c1)));
SELECT DISTINCT vt0.c0, rt0.c1, rt0.c0 FROM vt0 INNER JOIN rt0 ON ((x'9523') BETWEEN (((rt0.c2) ISNULL)) AND (NULLIF(DISTINCT rt0.c1, rt0.c1))) WHERE ((~ (vt0.c0)) COLLATE RTRIM) UNION SELECT DISTINCT vt0.c0, rt0.c1, rt0.c0 FROM vt0 INNER JOIN rt0 ON ((x'9523') BETWEEN (((rt0.c2) ISNULL)) AND (NULLIF(DISTINCT rt0.c1, rt0.c1))) WHERE ((NOT ((~ (vt0.c0)) COLLATE RTRIM))) UNION SELECT DISTINCT vt0.c0, rt0.c1, rt0.c0 FROM vt0 INNER JOIN rt0 ON ((x'9523') BETWEEN (((rt0.c2) ISNULL)) AND (NULLIF(DISTINCT rt0.c1, rt0.c1))) WHERE ((((~ (vt0.c0)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c1, rt0.c0 FROM vt0 INNER JOIN rt0 ON ((x'9523') BETWEEN (((rt0.c2) ISNULL)) AND (NULLIF(DISTINCT rt0.c1, rt0.c1)));
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((((rt0.c0) NOTNULL))IS NOT(((-264114941) BETWEEN (rt0.c0) AND (rt0.c1))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c0) NOTNULL))IS NOT(((-264114941) BETWEEN (rt0.c0) AND (rt0.c1))))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((((((rt0.c0) NOTNULL))IS NOT(((-264114941) BETWEEN (rt0.c0) AND (rt0.c1))))) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c2 FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c0) NOT BETWEEN ('1501665273') AND (CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c0 END)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c0) NOT BETWEEN ('1501665273') AND (CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c0 END)) GROUP BY rt0.c2 HAVING ((COUNT(*)) IS TRUE) UNION ALL SELECT ALL rt0.c2 FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c0) NOT BETWEEN ('1501665273') AND (CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c0 END)) GROUP BY rt0.c2 HAVING (NOT (((COUNT(*)) IS TRUE))) UNION ALL SELECT rt0.c2 FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c0) NOT BETWEEN ('1501665273') AND (CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c0 END)) GROUP BY rt0.c2 HAVING ((((COUNT(*)) IS TRUE)) ISNULL);
SELECT rt0.c2 FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c0) NOT BETWEEN ('1501665273') AND (CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c0 END)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c0) NOT BETWEEN ('1501665273') AND (CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c0 END)) GROUP BY rt0.c2 HAVING ((COUNT(*)) IS TRUE) UNION ALL SELECT ALL rt0.c2 FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c0) NOT BETWEEN ('1501665273') AND (CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c0 END)) GROUP BY rt0.c2 HAVING (NOT (((COUNT(*)) IS TRUE))) UNION ALL SELECT rt0.c2 FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c0) NOT BETWEEN ('1501665273') AND (CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c0 END)) GROUP BY rt0.c2 HAVING ((((COUNT(*)) IS TRUE)) ISNULL);
SELECT rt0.c2 FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c0) NOT BETWEEN ('1501665273') AND (CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c0 END)) GROUP BY rt0.c2;
SELECT TOTAL(rt0.c0) FROM rt0, vt0 ORDER BY CAST(((rt0.c2)|(NULL)) AS BLOB)  NULLS FIRST;
SELECT * FROM vt0, rt0;
SELECT ALL * FROM vt0, rt0 WHERE ((((rt0.c0)) BETWEEN ((CAST(rt0.c1 AS BLOB))) AND (((- ('zI')))))) UNION ALL SELECT * FROM vt0, rt0 WHERE ((NOT ((((rt0.c0)) BETWEEN ((CAST(rt0.c1 AS BLOB))) AND (((- ('zI')))))))) UNION ALL SELECT * FROM vt0, rt0 WHERE ((((((rt0.c0)) BETWEEN ((CAST(rt0.c1 AS BLOB))) AND (((- ('zI')))))) ISNULL));
SELECT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0)=(vt0.c0)) COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((vt0.c0)==(vt0.c0)) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0)==(vt0.c0)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((CAST(rt0.c1 AS BLOB))) AND ((rt0.c2 COLLATE NOCASE)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, rt0 WHERE ((NOT ((((rt0.c1)) NOT BETWEEN ((CAST(rt0.c1 AS BLOB))) AND ((rt0.c2 COLLATE NOCASE)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, rt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((CAST(rt0.c1 AS BLOB))) AND ((rt0.c2 COLLATE NOCASE)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0;
SELECT rt0.c1 FROM vt0, rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM vt0, rt0 GROUP BY rt0.c1 HAVING (+ (AVG(rt0.c0))) UNION ALL SELECT ALL rt0.c1 FROM vt0, rt0 GROUP BY rt0.c1 HAVING (NOT ((+ (AVG(rt0.c0))))) UNION ALL SELECT rt0.c1 FROM vt0, rt0 GROUP BY rt0.c1 HAVING (((+ (AVG(rt0.c0)))) ISNULL);
SELECT rt0.c1 FROM vt0, rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM vt0, rt0 GROUP BY rt0.c1 HAVING (+ (AVG(rt0.c0))) UNION ALL SELECT ALL rt0.c1 FROM vt0, rt0 GROUP BY rt0.c1 HAVING (NOT ((+ (AVG(rt0.c0))))) UNION ALL SELECT rt0.c1 FROM vt0, rt0 GROUP BY rt0.c1 HAVING (((+ (AVG(rt0.c0)))) ISNULL);
SELECT rt0.c1 FROM vt0, rt0 GROUP BY rt0.c1;
SELECT ALL * FROM vt0, rt0;
SELECT * FROM vt0, rt0 WHERE (((((rt0.c0) ISNULL)) BETWEEN (CAST(rt0.c2 AS BLOB)) AND (CAST(rt0.c0 AS BLOB)))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE ((NOT (((((rt0.c0) ISNULL)) BETWEEN (CAST(rt0.c2 AS BLOB)) AND (CAST(rt0.c0 AS BLOB)))))) UNION ALL SELECT * FROM vt0, rt0 WHERE (((((((rt0.c0) ISNULL)) BETWEEN (CAST(rt0.c2 AS BLOB)) AND (CAST(rt0.c0 AS BLOB)))) ISNULL));
SELECT ALL * FROM vt0, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((rt0.c1 IN ())) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((rt0.c1 IN ())))) UNION SELECT DISTINCT * FROM rt0 NOT INDEXED WHERE ((((rt0.c1 IN ())) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c0)&(vt0.c0)))AND(vt0.c0)))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((((vt0.c0)&(vt0.c0)))AND(vt0.c0)))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((((vt0.c0)&(vt0.c0)))AND(vt0.c0)))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c1, rt0.c0, vt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON rt0.c2 GROUP BY rt0.c1, rt0.c0, vt0.c0;
SELECT ALL rt0.c1, rt0.c0, vt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON rt0.c2 GROUP BY rt0.c1, rt0.c0, vt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c1, rt0.c0, vt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON rt0.c2 GROUP BY rt0.c1, rt0.c0, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c1, rt0.c0, vt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON rt0.c2 GROUP BY rt0.c1, rt0.c0, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, rt0.c0, vt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON rt0.c2 GROUP BY rt0.c1, rt0.c0, vt0.c0;
SELECT ALL rt0.c1, rt0.c0, vt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON rt0.c2 GROUP BY rt0.c1, rt0.c0, vt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c1, rt0.c0, vt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON rt0.c2 GROUP BY rt0.c1, rt0.c0, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c1, rt0.c0, vt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON rt0.c2 GROUP BY rt0.c1, rt0.c0, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, rt0.c0, vt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON rt0.c2 GROUP BY rt0.c1, rt0.c0, vt0.c0;
SELECT MAX(CASE DATE(NULL, rt0.c2, rt0.c2)  WHEN x'' THEN (rt0.c1 IN ()) ELSE (((rt0.c0)) NOT BETWEEN ((0x598197f9)) AND ((rt0.c2))) END) FROM rt0, vt0 ORDER BY CASE WHEN ((vt0.c0)<=(vt0.c0)) THEN (NOT (rt0.c1)) WHEN UPPER(rt0.c0) THEN rt0.c2 COLLATE BINARY WHEN rt0.c0 THEN (- (0x23aaabf9)) ELSE (rt0.c2 IN (rt0.c2)) END ASC  NULLS FIRST;
SELECT ALL * FROM rt0, vt0;
SELECT * FROM rt0, vt0 WHERE ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)) IN ())) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((NOT ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)) IN ())))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)) IN ())) ISNULL));
SELECT ALL * FROM rt0, vt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM vt0, rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM vt0, rt0 WHERE (0.18176124453794917) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM vt0, rt0 WHERE ((NOT (0.18176124453794917))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM vt0, rt0 WHERE (((0.18176124453794917) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2 FROM vt0, rt0;
SELECT ALL vt0.c0, rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c0, rt0.c1;
SELECT ALL vt0.c0, rt0.c0, rt0.c1 FROM rt0, vt0 WHERE (((rt0.c0)>(CAST(rt0.c2 AS BLOB)))) GROUP BY vt0.c0, rt0.c0, rt0.c1 UNION SELECT ALL vt0.c0, rt0.c0, rt0.c1 FROM rt0, vt0 WHERE ((NOT (((rt0.c0)>(CAST(rt0.c2 AS BLOB)))))) GROUP BY vt0.c0, rt0.c0, rt0.c1 UNION SELECT ALL vt0.c0, rt0.c0, rt0.c1 FROM rt0, vt0 WHERE (((((rt0.c0)>(CAST(rt0.c2 AS BLOB)))) ISNULL)) GROUP BY vt0.c0, rt0.c0, rt0.c1;
SELECT ALL vt0.c0, rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c0, rt0.c1;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING COUNT((~ (MAX(rt0.c1)))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (COUNT((~ (MAX(rt0.c1)))))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((COUNT((~ (MAX(rt0.c1))))) ISNULL);
SELECT TOTAL(((rt0.c0 COLLATE BINARY) BETWEEN (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 END) AND (rt0.c1))) FROM rt0;
SELECT * FROM vt0, rt0;
SELECT ALL * FROM vt0, rt0 WHERE (((((CAST(vt0.c0 AS BLOB))AND(vt0.c0 COLLATE RTRIM)))OR(((vt0.c0)IS NOT(vt0.c0))))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE ((NOT (((((CAST(vt0.c0 AS BLOB))AND(vt0.c0 COLLATE RTRIM)))OR(((vt0.c0)IS NOT(vt0.c0))))))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE (((((((CAST(vt0.c0 AS BLOB))AND(vt0.c0 COLLATE RTRIM)))OR(((vt0.c0)IS NOT(vt0.c0))))) ISNULL));
SELECT * FROM vt0, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c2) IS FALSE)) BETWEEN (9.18728067E8) AND (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c2) IS FALSE)) BETWEEN (9.18728067E8) AND (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c2) IS FALSE)) BETWEEN (9.18728067E8) AND (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (('675758481' IN ()) COLLATE NOCASE COLLATE BINARY) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (('675758481' IN ()) COLLATE NOCASE COLLATE BINARY))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (((('675758481' IN ()) COLLATE NOCASE COLLATE BINARY) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, vt0.c0;
SELECT rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, vt0.c0 HAVING MAX(MAX(AVG(vt0.c0))) UNION ALL SELECT ALL rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, vt0.c0 HAVING (NOT (MAX(MAX(AVG(vt0.c0))))) UNION ALL SELECT rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, vt0.c0 HAVING ((MAX(MAX(AVG(vt0.c0)))) ISNULL);
SELECT rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))) IS FALSE)) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))) IS FALSE)))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (((((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))) IS FALSE)) ISNULL));
SELECT rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0) IS FALSE)) BETWEEN (((vt0.c0)GLOB(vt0.c0))) AND ((vt0.c0 IN (vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.c0) IS FALSE)) BETWEEN (((vt0.c0)GLOB(vt0.c0))) AND ((vt0.c0 IN (vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0) IS FALSE)) BETWEEN (((vt0.c0)GLOB(vt0.c0))) AND ((vt0.c0 IN (vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM vt0, rt0 WHERE (vt0.c0) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM vt0, rt0 WHERE ((NOT (vt0.c0))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM vt0, rt0 WHERE (((vt0.c0) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (~ (((-46919325) NOTNULL))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((~ (((-46919325) NOTNULL))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((~ (((-46919325) NOTNULL)))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (~ (((-46919325) NOTNULL))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((~ (((-46919325) NOTNULL))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((~ (((-46919325) NOTNULL)))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM rt0, vt0;
SELECT * FROM rt0, vt0 WHERE (CASE WHEN (((vt0.c0))<((rt0.c2))) THEN (NOT (rt0.c1)) END) UNION ALL SELECT * FROM rt0, vt0 WHERE ((NOT (CASE WHEN (((vt0.c0))<((rt0.c2))) THEN (NOT (rt0.c1)) END))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE (((CASE WHEN (((vt0.c0))<((rt0.c2))) THEN (NOT (rt0.c1)) END) ISNULL));
SELECT ALL * FROM rt0, vt0;
SELECT DISTINCT * FROM vt0 NATURAL JOIN rt0;
SELECT DISTINCT * FROM vt0 NATURAL JOIN rt0 WHERE ((((((('E儑mPu_ญA')AND(vt0.c0)))AND(rt0.c1)))>(' #zVE'))) UNION SELECT DISTINCT * FROM vt0 NATURAL JOIN rt0 WHERE ((NOT ((((((('E儑mPu_ญA')AND(vt0.c0)))AND(rt0.c1)))>(' #zVE'))))) UNION SELECT DISTINCT * FROM vt0 NATURAL JOIN rt0 WHERE ((((((((('E儑mPu_ญA')AND(vt0.c0)))AND(rt0.c1)))>(' #zVE'))) ISNULL));
SELECT DISTINCT * FROM vt0 NATURAL JOIN rt0;
SELECT ALL rt0.c0, vt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, vt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 WHERE (((((rt0.c2 COLLATE RTRIM)OR((+ (rt0.c0)))))OR(CASE rt0.c0  WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c0 END))) GROUP BY rt0.c0, vt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, vt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 WHERE ((NOT (((((rt0.c2 COLLATE RTRIM)OR((+ (rt0.c0)))))OR(CASE rt0.c0  WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c0 END))))) GROUP BY rt0.c0, vt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, vt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 WHERE (((((((rt0.c2 COLLATE RTRIM)OR((+ (rt0.c0)))))OR(CASE rt0.c0  WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c0 END))) ISNULL)) GROUP BY rt0.c0, vt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, vt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((((x'2da1')>=(rt0.c0))) ISNULL) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (((((x'2da1')>=(rt0.c0))) ISNULL))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((((((x'2da1')>=(rt0.c0))) ISNULL)) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((((x'2da1')>=(rt0.c0))) ISNULL) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (((((x'2da1')>=(rt0.c0))) ISNULL))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((((((x'2da1')>=(rt0.c0))) ISNULL)) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2, vt0.c0, rt0.c1 FROM rt0, vt0;
SELECT rt0.c0, rt0.c2, vt0.c0, rt0.c1 FROM rt0, vt0 WHERE (((TYPEOF(DISTINCT rt0.c2))<=(((rt0.c1) ISNULL)))) UNION ALL SELECT ALL rt0.c0, rt0.c2, vt0.c0, rt0.c1 FROM rt0, vt0 WHERE ((NOT (((TYPEOF(DISTINCT rt0.c2))<=(((rt0.c1) ISNULL)))))) UNION ALL SELECT rt0.c0, rt0.c2, vt0.c0, rt0.c1 FROM rt0, vt0 WHERE (((((TYPEOF(DISTINCT rt0.c2))<=(((rt0.c1) ISNULL)))) ISNULL));
SELECT ALL rt0.c0, rt0.c2, vt0.c0, rt0.c1 FROM rt0, vt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM vt0 INNER JOIN rt0 ON (((((0Xffffffffbe49a93f))==((rt0.c0))))<=((NOT (rt0.c0))));
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM vt0 INNER JOIN rt0 ON (((((0Xffffffffbe49a93f))=((rt0.c0))))<=((NOT (rt0.c0)))) WHERE (CAST(rt0.c0 COLLATE NOCASE AS INTEGER)) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM vt0 INNER JOIN rt0 ON (((((0Xffffffffbe49a93f))=((rt0.c0))))<=((NOT (rt0.c0)))) WHERE ((NOT (CAST(rt0.c0 COLLATE NOCASE AS INTEGER)))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM vt0 INNER JOIN rt0 ON (((((0Xffffffffbe49a93f))==((rt0.c0))))<=((NOT (rt0.c0)))) WHERE (((CAST(rt0.c0 COLLATE NOCASE AS INTEGER)) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM vt0 INNER JOIN rt0 ON (((((0Xffffffffbe49a93f))==((rt0.c0))))<=((NOT (rt0.c0))));
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (LOWER((vt0.c0 IN ()))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (LOWER((vt0.c0 IN ()))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((LOWER((vt0.c0 IN ()))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(vt0.c0))-((((SUM(vt0.c0))) NOT BETWEEN ((vt0.c0)) AND ((COUNT(*)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((MAX(vt0.c0))-((((SUM(vt0.c0))) NOT BETWEEN ((vt0.c0)) AND ((COUNT(*)))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((MAX(vt0.c0))-((((SUM(vt0.c0))) NOT BETWEEN ((vt0.c0)) AND ((COUNT(*))))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(vt0.c0))-((((SUM(vt0.c0))) NOT BETWEEN ((vt0.c0)) AND ((COUNT(*)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((MAX(vt0.c0))-((((SUM(vt0.c0))) NOT BETWEEN ((vt0.c0)) AND ((COUNT(*)))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((MAX(vt0.c0))-((((SUM(vt0.c0))) NOT BETWEEN ((vt0.c0)) AND ((COUNT(*))))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (CAST((NOT (vt0.c0)) AS INTEGER)) UNION ALL SELECT * FROM vt0 WHERE ((NOT (CAST((NOT (vt0.c0)) AS INTEGER)))) UNION ALL SELECT ALL * FROM vt0 WHERE (((CAST((NOT (vt0.c0)) AS INTEGER)) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 NOT INDEXED WHERE ((((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))) IS TRUE)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))) IS TRUE)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, vt0.c0 FROM vt0 NATURAL JOIN rt0 GROUP BY rt0.c0, vt0.c0;
SELECT rt0.c0, vt0.c0 FROM vt0 NATURAL JOIN rt0 WHERE (((((((0.5754917910671322)*(vt0.c0)))OR((vt0.c0 IN (rt0.c1, rt0.c0)))))AND(((vt0.c0) IS TRUE)))) GROUP BY rt0.c0, vt0.c0 UNION SELECT rt0.c0, vt0.c0 FROM vt0 NATURAL JOIN rt0 WHERE ((NOT (((((((0.5754917910671322)*(vt0.c0)))OR((vt0.c0 IN (rt0.c1, rt0.c0)))))AND(((vt0.c0) IS TRUE)))))) GROUP BY rt0.c0, vt0.c0 UNION SELECT ALL rt0.c0, vt0.c0 FROM vt0 NATURAL JOIN rt0 WHERE (((((((((0.5754917910671322)*(vt0.c0)))OR((vt0.c0 IN (rt0.c1, rt0.c0)))))AND(((vt0.c0) IS TRUE)))) ISNULL)) GROUP BY rt0.c0, vt0.c0;
SELECT ALL rt0.c0, vt0.c0 FROM vt0 NATURAL JOIN rt0 GROUP BY rt0.c0, vt0.c0;
SELECT vt0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT ALL vt0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c0 HAVING ((SUM(rt0.c0)) NOT NULL) UNION ALL SELECT vt0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (((SUM(rt0.c0)) NOT NULL))) UNION ALL SELECT ALL vt0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c0 HAVING ((((SUM(rt0.c0)) NOT NULL)) ISNULL);
SELECT vt0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT ALL vt0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c0 HAVING ((SUM(rt0.c0)) NOT NULL) UNION ALL SELECT vt0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (((SUM(rt0.c0)) NOT NULL))) UNION ALL SELECT ALL vt0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c0 HAVING ((((SUM(rt0.c0)) NOT NULL)) ISNULL);
SELECT vt0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON rt0.c2;
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON rt0.c2 WHERE ('-78077611') UNION ALL SELECT * FROM vt0 NOT INDEXED LEFT OUTER JOIN rt0 ON rt0.c2 WHERE ((NOT ('-78077611'))) UNION ALL SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON rt0.c2 WHERE ((('-78077611') ISNULL));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON rt0.c2;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (((TRIM(vt0.c0)) IS TRUE)) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (((TRIM(vt0.c0)) IS TRUE)))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((((TRIM(vt0.c0)) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((((CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END))<((((rt0.c0)OR(rt0.c2)))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((((CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END))<((((rt0.c0)OR(rt0.c2)))))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((((((CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END))<((((rt0.c0)OR(rt0.c2)))))) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c1 FROM vt0 RIGHT OUTER JOIN rt0 ON (+ (((rt0.c0) IS FALSE))) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM vt0 RIGHT OUTER JOIN rt0 ON (+ (((rt0.c0) IS FALSE))) GROUP BY rt0.c1 HAVING (~ (SUM(rt0.c1))) UNION ALL SELECT ALL rt0.c1 FROM vt0 RIGHT OUTER JOIN rt0 ON (+ (((rt0.c0) IS FALSE))) GROUP BY rt0.c1 HAVING (NOT ((~ (SUM(rt0.c1))))) UNION ALL SELECT rt0.c1 FROM vt0 RIGHT OUTER JOIN rt0 ON (+ (((rt0.c0) IS FALSE))) GROUP BY rt0.c1 HAVING (((~ (SUM(rt0.c1)))) ISNULL);
SELECT ALL rt0.c1 FROM vt0 RIGHT OUTER JOIN rt0 ON (+ (((rt0.c0) IS FALSE))) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM vt0 RIGHT OUTER JOIN rt0 ON (+ (((rt0.c0) IS FALSE))) GROUP BY rt0.c1 HAVING (~ (SUM(rt0.c1))) UNION ALL SELECT ALL rt0.c1 FROM vt0 RIGHT OUTER JOIN rt0 ON (+ (((rt0.c0) IS FALSE))) GROUP BY rt0.c1 HAVING (NOT ((~ (SUM(rt0.c1))))) UNION ALL SELECT rt0.c1 FROM vt0 RIGHT OUTER JOIN rt0 ON (+ (((rt0.c0) IS FALSE))) GROUP BY rt0.c1 HAVING (((~ (SUM(rt0.c1)))) ISNULL);
SELECT ALL rt0.c1 FROM vt0 RIGHT OUTER JOIN rt0 ON (+ (((rt0.c0) IS FALSE))) GROUP BY rt0.c1;
SELECT ALL rt0.c0, rt0.c2, vt0.c0, rt0.c1 FROM vt0, rt0;
SELECT ALL rt0.c0, rt0.c2, vt0.c0, rt0.c1 FROM vt0, rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c2) AND (vt0.c0))) BETWEEN (0.6626934611186857) AND (CAST(rt0.c1 AS NUMERIC)))) UNION ALL SELECT ALL rt0.c0, rt0.c2, vt0.c0, rt0.c1 FROM vt0, rt0 WHERE ((NOT (((((rt0.c2) BETWEEN (rt0.c2) AND (vt0.c0))) BETWEEN (0.6626934611186857) AND (CAST(rt0.c1 AS NUMERIC)))))) UNION ALL SELECT rt0.c0, rt0.c2, vt0.c0, rt0.c1 FROM vt0, rt0 WHERE (((((((rt0.c2) BETWEEN (rt0.c2) AND (vt0.c0))) BETWEEN (0.6626934611186857) AND (CAST(rt0.c1 AS NUMERIC)))) ISNULL));
SELECT ALL rt0.c0, rt0.c2, vt0.c0, rt0.c1 FROM vt0, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (ABS(((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (ABS(((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((ABS(((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((vt0.c0 IN ())) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((vt0.c0 IN ())))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((vt0.c0 IN ())) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((TOTAL(NULL)) ISNULL) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (((TOTAL(NULL)) ISNULL))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((((TOTAL(NULL)) ISNULL)) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((TOTAL(NULL)) ISNULL) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (((TOTAL(NULL)) ISNULL))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((((TOTAL(NULL)) ISNULL)) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL * FROM rt0, vt0;
SELECT * FROM rt0, vt0 WHERE ((((+ (rt0.c1))) NOT BETWEEN (((vt0.c0)>(rt0.c1))) AND (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) UNION ALL SELECT * FROM rt0, vt0 WHERE ((NOT ((((+ (rt0.c1))) NOT BETWEEN (((vt0.c0)>(rt0.c1))) AND (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1))))))) UNION ALL SELECT * FROM rt0, vt0 WHERE ((((((+ (rt0.c1))) NOT BETWEEN (((vt0.c0)>(rt0.c1))) AND (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) ISNULL));
SELECT ALL * FROM rt0, vt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (CASE vt0.c0  WHEN CASE WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c1 END THEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)) WHEN ((vt0.c0)<(rt0.c1)) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c1))) WHEN ((x'a276ef4b')+(rt0.c0)) THEN CAST(0X438c6e2a AS NUMERIC) WHEN ((rt0.c2)IS(-952370971)) THEN ((rt0.c1)*(rt0.c2)) WHEN ((rt0.c2)*(rt0.c0)) THEN ((((rt0.c1)OR(vt0.c0)))OR(rt0.c0)) WHEN ((rt0.c1)||(rt0.c1)) THEN (rt0.c1 IN ()) WHEN (((rt0.c2, NULL, vt0.c0))!=((rt0.c1, rt0.c0, 0X180c1eba))) THEN COALESCE(vt0.c0, rt0.c0, vt0.c0, rt0.c1) END) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (CASE vt0.c0  WHEN CASE WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c1 END THEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)) WHEN ((vt0.c0)<(rt0.c1)) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c1))) WHEN ((x'a276ef4b')+(rt0.c0)) THEN CAST(0x438c6e2a AS NUMERIC) WHEN ((rt0.c2)IS(-952370971)) THEN ((rt0.c1)*(rt0.c2)) WHEN ((rt0.c2)*(rt0.c0)) THEN ((((rt0.c1)OR(vt0.c0)))OR(rt0.c0)) WHEN ((rt0.c1)||(rt0.c1)) THEN (rt0.c1 IN ()) WHEN (((rt0.c2, NULL, vt0.c0))<>((rt0.c1, rt0.c0, 0x180c1eba))) THEN COALESCE(vt0.c0, rt0.c0, vt0.c0, rt0.c1) END))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((CASE vt0.c0  WHEN CASE WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c1 END THEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)) WHEN ((vt0.c0)<(rt0.c1)) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c1))) WHEN ((x'a276ef4b')+(rt0.c0)) THEN CAST(0X438c6e2a AS NUMERIC) WHEN ((rt0.c2)IS(-952370971)) THEN ((rt0.c1)*(rt0.c2)) WHEN ((rt0.c2)*(rt0.c0)) THEN ((((rt0.c1)OR(vt0.c0)))OR(rt0.c0)) WHEN ((rt0.c1)||(rt0.c1)) THEN (rt0.c1 IN ()) WHEN (((rt0.c2, NULL, vt0.c0))<>((rt0.c1, rt0.c0, 0X180c1eba))) THEN COALESCE(vt0.c0, rt0.c0, vt0.c0, rt0.c1) END) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((x'', vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, ((vt0.c0)<(vt0.c0)), ((0X4678283a) NOT NULL))) AND ((((vt0.c0) IS FALSE), CASE WHEN vt0.c0 THEN vt0.c0 END, CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((x'', vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, ((vt0.c0)<(vt0.c0)), ((0x4678283a) NOT NULL))) AND ((((vt0.c0) IS FALSE), CASE WHEN vt0.c0 THEN vt0.c0 END, CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((x'', vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, ((vt0.c0)<(vt0.c0)), ((0X4678283a) NOT NULL))) AND ((((vt0.c0) IS FALSE), CASE WHEN vt0.c0 THEN vt0.c0 END, CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c0, rt0.c1, rt0.c2;
SELECT vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c0, rt0.c1, rt0.c2 HAVING MIN(MIN(MIN(rt0.c2)), ((GROUP_CONCAT(TOTAL(rt0.c0)))=(rt0.c0))) UNION ALL SELECT vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (MIN(MIN(MIN(rt0.c2)), ((GROUP_CONCAT(TOTAL(rt0.c0)))==(rt0.c0))))) UNION ALL SELECT ALL vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c0, rt0.c1, rt0.c2 HAVING ((MIN(MIN(MIN(rt0.c2)), ((GROUP_CONCAT(TOTAL(rt0.c0)))==(rt0.c0)))) ISNULL);
SELECT ALL SUM(vt0.c0) FROM vt0;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (rt0.c0) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (rt0.c0))) UNION ALL SELECT * FROM rt0 WHERE (((rt0.c0) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))<((((vt0.c0)<<(vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))<((((vt0.c0)<<(vt0.c0)))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))<((((vt0.c0)<<(vt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE ('') GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (''))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 NOT INDEXED WHERE ((('') ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING rt0.c2 UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (rt0.c2)) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((rt0.c2) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING rt0.c2 UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (rt0.c2)) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((rt0.c2) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (CASE WHEN (~ (NULL)) THEN (- (vt0.c0)) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((0.8102421401211249)>=(vt0.c0)) WHEN (~ (vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END ELSE (- (vt0.c0)) END) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN (~ (NULL)) THEN (- (vt0.c0)) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((0.8102421401211249)>=(vt0.c0)) WHEN (~ (vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END ELSE (- (vt0.c0)) END))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((CASE WHEN (~ (NULL)) THEN (- (vt0.c0)) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((0.8102421401211249)>=(vt0.c0)) WHEN (~ (vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END ELSE (- (vt0.c0)) END) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM rt0, vt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM rt0, vt0 WHERE (CASE WHEN NULLIF(rt0.c1, vt0.c0) THEN vt0.c0 WHEN (((rt0.c0, rt0.c2, NULL))>=((vt0.c0, rt0.c2, rt0.c2))) THEN ((rt0.c1) IS TRUE) WHEN rt0.c0 COLLATE RTRIM THEN INSTR(rt0.c2, vt0.c0) WHEN ((rt0.c1)%(rt0.c2)) THEN x'' WHEN 'qࡍ2ﴢK癈Ẻ?^' THEN ((rt0.c0)>(vt0.c0)) END) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM rt0, vt0 WHERE ((NOT (CASE WHEN NULLIF(rt0.c1, vt0.c0) THEN vt0.c0 WHEN (((rt0.c0, rt0.c2, NULL))>=((vt0.c0, rt0.c2, rt0.c2))) THEN ((rt0.c1) IS TRUE) WHEN rt0.c0 COLLATE RTRIM THEN INSTR(rt0.c2, vt0.c0) WHEN ((rt0.c1)%(rt0.c2)) THEN x'' WHEN 'qࡍ2ﴢK癈Ẻ?^' THEN ((rt0.c0)>(vt0.c0)) END))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM rt0, vt0 WHERE (((CASE WHEN NULLIF(rt0.c1, vt0.c0) THEN vt0.c0 WHEN (((rt0.c0, rt0.c2, NULL))>=((vt0.c0, rt0.c2, rt0.c2))) THEN ((rt0.c1) IS TRUE) WHEN rt0.c0 COLLATE RTRIM THEN INSTR(rt0.c2, vt0.c0) WHEN ((rt0.c1)%(rt0.c2)) THEN x'' WHEN 'qࡍ2ﴢK癈Ẻ?^' THEN ((rt0.c0)>(vt0.c0)) END) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM rt0, vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((UNLIKELY(vt0.c0))OR(TRIM(DISTINCT vt0.c0))))OR(CAST(vt0.c0 AS BLOB)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((UNLIKELY(vt0.c0))OR(TRIM(DISTINCT vt0.c0))))OR(CAST(vt0.c0 AS BLOB)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((UNLIKELY(vt0.c0))OR(TRIM(DISTINCT vt0.c0))))OR(CAST(vt0.c0 AS BLOB)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING CASE rt0.c0  WHEN GROUP_CONCAT(rt0.c1) THEN COUNT(*) END UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (CASE rt0.c0  WHEN GROUP_CONCAT(rt0.c1) THEN COUNT(*) END)) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((CASE rt0.c0  WHEN GROUP_CONCAT(rt0.c1) THEN COUNT(*) END) ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING CASE rt0.c0  WHEN GROUP_CONCAT(rt0.c1) THEN COUNT(*) END UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (CASE rt0.c0  WHEN GROUP_CONCAT(rt0.c1) THEN COUNT(*) END)) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((CASE rt0.c0  WHEN GROUP_CONCAT(rt0.c1) THEN COUNT(*) END) ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL SUM(x'5ca1') FROM vt0, rt0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((- (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2))))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((- (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2))))))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((- (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2))))) ISNULL));
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((NULL) NOT NULL)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((NULL) NOT NULL)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((NULL) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((CAST(vt0.c0 AS REAL) IN ())) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((CAST(vt0.c0 AS REAL) IN ())))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((CAST(vt0.c0 AS REAL) IN ())) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (((rt0.c1)) NOT BETWEEN ((MAX(rt0.c0))) AND ((COUNT(*)))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT ((((rt0.c1)) NOT BETWEEN ((MAX(rt0.c0))) AND ((COUNT(*)))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (((((rt0.c1)) NOT BETWEEN ((MAX(rt0.c0))) AND ((COUNT(*))))) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (((rt0.c1)) NOT BETWEEN ((MAX(rt0.c0))) AND ((COUNT(*)))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT ((((rt0.c1)) NOT BETWEEN ((MAX(rt0.c0))) AND ((COUNT(*)))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (((((rt0.c1)) NOT BETWEEN ((MAX(rt0.c0))) AND ((COUNT(*))))) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT * FROM vt0, rt0;
SELECT ALL * FROM vt0, rt0 WHERE (NULL) UNION ALL SELECT * FROM vt0, rt0 WHERE ((NOT (NULL))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE (((NULL) ISNULL));
SELECT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ('227370387') UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ('227370387'))) UNION SELECT DISTINCT * FROM vt0 WHERE ((('227370387') ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (LTRIM((+ (rt0.c0)), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (LTRIM((+ (rt0.c0)), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 NOT INDEXED WHERE (((LTRIM((+ (rt0.c0)), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM vt0 LEFT OUTER JOIN rt0 ON (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((vt0.c0)))) NOT BETWEEN (((((rt0.c2)AND(rt0.c1)))AND(vt0.c0))) AND ((((rt0.c2))>(('⠺'))))) GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM vt0 LEFT OUTER JOIN rt0 ON (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((vt0.c0)))) NOT BETWEEN (((((rt0.c2)AND(rt0.c1)))AND(vt0.c0))) AND ((((rt0.c2))>(('⠺'))))) GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c2 HAVING ((SUM(vt0.c0)) BETWEEN (((rt0.c2) IS TRUE)) AND (GROUP_CONCAT(rt0.c1))) UNION ALL SELECT rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM vt0 LEFT OUTER JOIN rt0 ON (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((vt0.c0)))) NOT BETWEEN (((((rt0.c2)AND(rt0.c1)))AND(vt0.c0))) AND ((((rt0.c2))>(('⠺'))))) GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c2 HAVING (NOT (((SUM(vt0.c0)) BETWEEN (((rt0.c2) IS TRUE)) AND (GROUP_CONCAT(rt0.c1))))) UNION ALL SELECT rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM vt0 LEFT OUTER JOIN rt0 ON (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((vt0.c0)))) NOT BETWEEN (((((rt0.c2)AND(rt0.c1)))AND(vt0.c0))) AND ((((rt0.c2))>(('⠺'))))) GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c2 HAVING ((((SUM(vt0.c0)) BETWEEN (((rt0.c2) IS TRUE)) AND (GROUP_CONCAT(rt0.c1)))) ISNULL);
SELECT rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM vt0 LEFT OUTER JOIN rt0 ON (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((vt0.c0)))) NOT BETWEEN (((((rt0.c2)AND(rt0.c1)))AND(vt0.c0))) AND ((((rt0.c2))>(('⠺'))))) GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM vt0 LEFT OUTER JOIN rt0 ON (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((vt0.c0)))) NOT BETWEEN (((((rt0.c2)AND(rt0.c1)))AND(vt0.c0))) AND ((((rt0.c2))>(('⠺'))))) GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c2 HAVING ((SUM(vt0.c0)) BETWEEN (((rt0.c2) IS TRUE)) AND (GROUP_CONCAT(rt0.c1))) UNION ALL SELECT rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM vt0 LEFT OUTER JOIN rt0 ON (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((vt0.c0)))) NOT BETWEEN (((((rt0.c2)AND(rt0.c1)))AND(vt0.c0))) AND ((((rt0.c2))>(('⠺'))))) GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c2 HAVING (NOT (((SUM(vt0.c0)) BETWEEN (((rt0.c2) IS TRUE)) AND (GROUP_CONCAT(rt0.c1))))) UNION ALL SELECT rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM vt0 LEFT OUTER JOIN rt0 ON (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((vt0.c0)))) NOT BETWEEN (((((rt0.c2)AND(rt0.c1)))AND(vt0.c0))) AND ((((rt0.c2))>(('⠺'))))) GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c2 HAVING ((((SUM(vt0.c0)) BETWEEN (((rt0.c2) IS TRUE)) AND (GROUP_CONCAT(rt0.c1)))) ISNULL);
SELECT rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM vt0 LEFT OUTER JOIN rt0 ON (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((vt0.c0)))) NOT BETWEEN (((((rt0.c2)AND(rt0.c1)))AND(vt0.c0))) AND ((((rt0.c2))>(('⠺'))))) GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c2;
SELECT * FROM rt0, vt0;
SELECT * FROM rt0, vt0 WHERE (((((vt0.c0)>(rt0.c2))) NOT NULL)) UNION ALL SELECT * FROM rt0, vt0 WHERE ((NOT (((((vt0.c0)>(rt0.c2))) NOT NULL)))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE (((((((vt0.c0)>(rt0.c2))) NOT NULL)) ISNULL));
SELECT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (((CASE WHEN x'' THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c2 END)GLOB(((vt0.c0)IS NOT(rt0.c1))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (((CASE WHEN x'' THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c2 END)GLOB(((vt0.c0)IS NOT(rt0.c1))))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((((CASE WHEN x'' THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c2 END)GLOB(((vt0.c0)IS NOT(rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE ((CAST(rt0.c2 AS INTEGER) IN ())) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT ((CAST(rt0.c2 AS INTEGER) IN ())))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((((CAST(rt0.c2 AS INTEGER) IN ())) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0 HAVING COUNT(GROUP_CONCAT(TOTAL(rt0.c0))) UNION ALL SELECT rt0.c0 FROM vt0, rt0 NOT INDEXED GROUP BY rt0.c0 HAVING (NOT (COUNT(GROUP_CONCAT(TOTAL(rt0.c0))))) UNION ALL SELECT ALL rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0 HAVING ((COUNT(GROUP_CONCAT(TOTAL(rt0.c0)))) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (((NULL) NOT BETWEEN (((vt0.c0)LIKE(vt0.c0))) AND (CAST(vt0.c0 AS INTEGER)))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((NULL) NOT BETWEEN (((vt0.c0)LIKE(vt0.c0))) AND (CAST(vt0.c0 AS INTEGER)))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((NULL) NOT BETWEEN (((vt0.c0)LIKE(vt0.c0))) AND (CAST(vt0.c0 AS INTEGER)))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((vt0.c0)IS NOT(rtreenode(NULL, vt0.c0)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0)IS NOT(rtreenode(NULL, vt0.c0)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((vt0.c0)IS NOT(rtreenode(NULL, vt0.c0)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 NOT INDEXED WHERE (CAST(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) AS NUMERIC)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CAST(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) AS NUMERIC)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) AS NUMERIC)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, vt0.c0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, vt0.c0 HAVING TOTAL(COUNT(*)) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, vt0.c0 HAVING (NOT (TOTAL(COUNT(*)))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, vt0.c0 HAVING ((TOTAL(COUNT(*))) ISNULL);
SELECT ALL rt0.c2 FROM vt0, rt0;
SELECT ALL rt0.c2 FROM vt0, rt0 WHERE (LIKELIHOOD(DISTINCT (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))), 0.6484112251412125)) UNION ALL SELECT rt0.c2 FROM vt0, rt0 WHERE ((NOT (LIKELIHOOD(DISTINCT (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))), 0.6484112251412125)))) UNION ALL SELECT rt0.c2 FROM vt0, rt0 WHERE (((LIKELIHOOD(DISTINCT (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))), 0.6484112251412125)) ISNULL));
SELECT ALL rt0.c2 FROM vt0, rt0;
SELECT DISTINCT rt0.c2, vt0.c0 FROM rt0, vt0;
SELECT DISTINCT rt0.c2, vt0.c0 FROM rt0, vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((0.3932388333674617))))OR((rt0.c2 IN ())))) UNION SELECT DISTINCT rt0.c2, vt0.c0 FROM rt0, vt0 WHERE ((NOT ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((0.3932388333674617))))OR((rt0.c2 IN ())))))) UNION SELECT DISTINCT rt0.c2, vt0.c0 FROM rt0, vt0 WHERE ((((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((0.3932388333674617))))OR((rt0.c2 IN ())))) ISNULL));
SELECT DISTINCT rt0.c2, vt0.c0 FROM rt0, vt0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 WHERE ((- ((rt0.c0 IN (NULL))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 WHERE ((NOT ((- ((rt0.c0 IN (NULL))))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 WHERE ((((- ((rt0.c0 IN (NULL))))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((vt0.c0) BETWEEN (GROUP_CONCAT(0.3893484501498421)) AND (COUNT(*))))AND(AVG(vt0.c0))))AND(vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((((((vt0.c0) BETWEEN (GROUP_CONCAT(0.3893484501498421)) AND (COUNT(*))))AND(AVG(vt0.c0))))AND(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((((vt0.c0) BETWEEN (GROUP_CONCAT(0.3893484501498421)) AND (COUNT(*))))AND(AVG(vt0.c0))))AND(vt0.c0))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((vt0.c0) BETWEEN (GROUP_CONCAT(0.3893484501498421)) AND (COUNT(*))))AND(AVG(vt0.c0))))AND(vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((((((vt0.c0) BETWEEN (GROUP_CONCAT(0.3893484501498421)) AND (COUNT(*))))AND(AVG(vt0.c0))))AND(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((((vt0.c0) BETWEEN (GROUP_CONCAT(0.3893484501498421)) AND (COUNT(*))))AND(AVG(vt0.c0))))AND(vt0.c0))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CAST(TRIM(DISTINCT vt0.c0) AS REAL)) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (CAST(TRIM(DISTINCT vt0.c0) AS REAL)))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((CAST(TRIM(DISTINCT vt0.c0) AS REAL)) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE ((('|4')>=((- (rt0.c0))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT ((('|4')>=((- (rt0.c0))))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((((('|4')>=((- (rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (CAST((rt0.c2 IN ()) AS INTEGER)) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (CAST((rt0.c2 IN ()) AS INTEGER)))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((CAST((rt0.c2 IN ()) AS INTEGER)) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CAST(TOTAL(vt0.c0) AS TEXT) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CAST(TOTAL(vt0.c0) AS TEXT))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CAST(TOTAL(vt0.c0) AS TEXT)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CAST(TOTAL(vt0.c0) AS TEXT) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CAST(TOTAL(vt0.c0) AS TEXT))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CAST(TOTAL(vt0.c0) AS TEXT)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((~ (((rt0.c0)||(rt0.c1))))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((~ (((rt0.c0)||(rt0.c1))))))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((((~ (((rt0.c0)||(rt0.c1))))) ISNULL));
SELECT rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0, vt0;
SELECT DISTINCT rt0.c0 FROM rt0, vt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)))<(((vt0.c0)IS NOT(rt0.c2))))) UNION SELECT DISTINCT rt0.c0 FROM rt0, vt0 WHERE ((NOT (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)))<(((vt0.c0)IS NOT(rt0.c2))))))) UNION SELECT DISTINCT rt0.c0 FROM rt0, vt0 WHERE (((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)))<(((vt0.c0)IS NOT(rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0, vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CAST((vt0.c0 IN ()) AS TEXT)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CAST((vt0.c0 IN ()) AS TEXT)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST((vt0.c0 IN ()) AS TEXT)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING SUM(((COUNT(*)) BETWEEN (COUNT(*)) AND (COUNT(NULL)))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (SUM(((COUNT(*)) BETWEEN (COUNT(*)) AND (COUNT(NULL)))))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((SUM(((COUNT(*)) BETWEEN (COUNT(*)) AND (COUNT(NULL))))) ISNULL);
SELECT TOTAL((NOT (((rt0.c0) NOTNULL)))) FROM rt0 ORDER BY ((CAST(rt0.c2 AS TEXT)) IS TRUE) DESC  NULLS FIRST;
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN (((vt0.c0)<<(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN (((vt0.c0)<<(vt0.c0))))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN (((vt0.c0)<<(vt0.c0))))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0, rt0.c0, rt0.c1 FROM rt0, vt0;
SELECT DISTINCT vt0.c0, rt0.c0, rt0.c1 FROM rt0, vt0 WHERE ('csx') UNION SELECT DISTINCT vt0.c0, rt0.c0, rt0.c1 FROM rt0, vt0 WHERE ((NOT ('csx'))) UNION SELECT DISTINCT vt0.c0, rt0.c0, rt0.c1 FROM rt0, vt0 WHERE ((('csx') ISNULL));
SELECT DISTINCT vt0.c0, rt0.c0, rt0.c1 FROM rt0, vt0;
SELECT ALL vt0.c0 FROM vt0 INNER JOIN rt0 ON (~ (((rt0.c0) IS TRUE))) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 INNER JOIN rt0 ON (~ (((rt0.c0) IS TRUE))) WHERE (((((rt0.c2) NOTNULL))/(CAST(rt0.c2 AS REAL)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 INNER JOIN rt0 ON (~ (((rt0.c0) IS TRUE))) WHERE ((NOT (((((rt0.c2) NOTNULL))/(CAST(rt0.c2 AS REAL)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 INNER JOIN rt0 ON (~ (((rt0.c0) IS TRUE))) WHERE (((((((rt0.c2) NOTNULL))/(CAST(rt0.c2 AS REAL)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 INNER JOIN rt0 ON (~ (((rt0.c0) IS TRUE))) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(((((vt0.c0)OR(vt0.c0)))AND(COUNT(*)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(((((vt0.c0)OR(vt0.c0)))AND(COUNT(*)))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(((((vt0.c0)OR(vt0.c0)))AND(COUNT(*))))) ISNULL);
SELECT ALL * FROM vt0, rt0;
SELECT ALL * FROM vt0, rt0 WHERE ((TYPEOF(DISTINCT rt0.c2) IN ())) UNION ALL SELECT * FROM vt0, rt0 WHERE ((NOT ((TYPEOF(DISTINCT rt0.c2) IN ())))) UNION ALL SELECT * FROM vt0, rt0 WHERE ((((TYPEOF(DISTINCT rt0.c2) IN ())) ISNULL));
SELECT ALL * FROM vt0, rt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (vt0.c0) AND (vt0.c0 COLLATE BINARY))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (vt0.c0) AND (vt0.c0 COLLATE BINARY))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (vt0.c0) AND (vt0.c0 COLLATE BINARY))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (675758481) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (675758481))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((675758481) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING MIN(rt0.c2) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (MIN(rt0.c2))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((MIN(rt0.c2)) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING MIN(rt0.c2) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (MIN(rt0.c2))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((MIN(rt0.c2)) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT vt0.c0 FROM rt0, vt0;
SELECT ALL vt0.c0 FROM rt0, vt0 WHERE (json_array((rt0.c0 IN ()), CASE rt0.c0  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 END)) UNION ALL SELECT vt0.c0 FROM rt0, vt0 WHERE ((NOT (json_array((rt0.c0 IN ()), CASE rt0.c0  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 END)))) UNION ALL SELECT vt0.c0 FROM rt0, vt0 WHERE (((json_array((rt0.c0 IN ()), CASE rt0.c0  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 END)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((x'')OR(vt0.c0)))LIKE(x''))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((x'')OR(vt0.c0)))LIKE(x''))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((x'')OR(vt0.c0)))LIKE(x''))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((0.05467801160759034)*(vt0.c0)) IN ())) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((0.05467801160759034)*(vt0.c0)) IN ())))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((0.05467801160759034)*(vt0.c0)) IN ())) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING MAX(GROUP_CONCAT(GROUP_CONCAT(AVG(GROUP_CONCAT(0.7273588035239116))))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (MAX(GROUP_CONCAT(GROUP_CONCAT(AVG(GROUP_CONCAT(0.7273588035239116))))))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((MAX(GROUP_CONCAT(GROUP_CONCAT(AVG(GROUP_CONCAT(0.7273588035239116)))))) ISNULL);
SELECT ALL TOTAL(((((rt0.c0)+(rt0.c2))) IS FALSE)) FROM rt0;
SELECT rt0.c2, rt0.c1, vt0.c0, rt0.c0 FROM vt0, rt0;
SELECT rt0.c2, rt0.c1, vt0.c0, rt0.c0 FROM vt0, rt0 WHERE (rt0.c0) UNION ALL SELECT rt0.c2, rt0.c1, vt0.c0, rt0.c0 FROM vt0, rt0 WHERE ((NOT (rt0.c0))) UNION ALL SELECT ALL rt0.c2, rt0.c1, vt0.c0, rt0.c0 FROM vt0, rt0 WHERE (((rt0.c0) ISNULL));
SELECT rt0.c2, rt0.c1, vt0.c0, rt0.c0 FROM vt0, rt0;
SELECT DISTINCT rt0.c1, vt0.c0, rt0.c0, rt0.c2 FROM rt0, vt0;
SELECT DISTINCT rt0.c1, vt0.c0, rt0.c0, rt0.c2 FROM rt0, vt0 WHERE ((+ (rt0.c2 COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c1, vt0.c0, rt0.c0, rt0.c2 FROM rt0, vt0 WHERE ((NOT ((+ (rt0.c2 COLLATE RTRIM))))) UNION SELECT DISTINCT rt0.c1, vt0.c0, rt0.c0, rt0.c2 FROM rt0, vt0 WHERE ((((+ (rt0.c2 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT rt0.c1, vt0.c0, rt0.c0, rt0.c2 FROM rt0, vt0;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((~ (((rt0.c0) BETWEEN ('E>w}<<') AND (rt0.c2))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((~ (((rt0.c0) BETWEEN ('E>w}<<') AND (rt0.c2))))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((((~ (((rt0.c0) BETWEEN ('E>w}<<') AND (rt0.c2))))) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((MAX(GROUP_CONCAT(GROUP_CONCAT(vt0.c0)))) NOTNULL))AND(((AVG(vt0.c0)) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(CASE WHEN COUNT(vt0.c0) THEN vt0.c0 ELSE TOTAL(COUNT(*)) END)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((((((MAX(GROUP_CONCAT(GROUP_CONCAT(vt0.c0)))) NOTNULL))AND(((AVG(vt0.c0)) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(CASE WHEN COUNT(vt0.c0) THEN vt0.c0 ELSE TOTAL(COUNT(*)) END)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((((MAX(GROUP_CONCAT(GROUP_CONCAT(vt0.c0)))) NOTNULL))AND(((AVG(vt0.c0)) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(CASE WHEN COUNT(vt0.c0) THEN vt0.c0 ELSE TOTAL(COUNT(*)) END))) ISNULL);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON (((((rt0.c1, rt0.c0, rt0.c1))>((rt0.c0, rt0.c2, rt0.c1))))IS(((vt0.c0)LIKE(rt0.c2))));
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON (((((rt0.c1, rt0.c0, rt0.c1))>((rt0.c0, rt0.c2, rt0.c1))))IS(((vt0.c0)LIKE(rt0.c2)))) WHERE ((((~ (rt0.c0)))>>(((((rt0.c1)OR(rt0.c1)))OR('-556336654'))))) UNION ALL SELECT * FROM rt0 FULL OUTER JOIN vt0 ON (((((rt0.c1, rt0.c0, rt0.c1))>((rt0.c0, rt0.c2, rt0.c1))))IS(((vt0.c0)LIKE(rt0.c2)))) WHERE ((NOT ((((~ (rt0.c0)))>>(((((rt0.c1)OR(rt0.c1)))OR('-556336654'))))))) UNION ALL SELECT * FROM rt0 FULL OUTER JOIN vt0 ON (((((rt0.c1, rt0.c0, rt0.c1))>((rt0.c0, rt0.c2, rt0.c1))))IS(((vt0.c0)LIKE(rt0.c2)))) WHERE ((((((~ (rt0.c0)))>>(((((rt0.c1)OR(rt0.c1)))OR('-556336654'))))) ISNULL));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON (((((rt0.c1, rt0.c0, rt0.c1))>((rt0.c0, rt0.c2, rt0.c1))))IS(((vt0.c0)LIKE(rt0.c2))));
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c1)GLOB(rt0.c2))) NOT NULL)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c1)GLOB(rt0.c2))) NOT NULL)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c1)GLOB(rt0.c2))) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt0, rt0 WHERE (((((rt0.c1 COLLATE RTRIM)OR(CASE vt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END)))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((x'59a7')))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM vt0, rt0 WHERE ((NOT (((((rt0.c1 COLLATE RTRIM)OR(CASE vt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END)))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((x'59a7')))))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM vt0, rt0 WHERE (((((((rt0.c1 COLLATE RTRIM)OR(CASE vt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END)))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((x'59a7')))))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING GROUP_CONCAT(TOTAL(rt0.c0)) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (GROUP_CONCAT(TOTAL(rt0.c0)))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((GROUP_CONCAT(TOTAL(rt0.c0))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((rt0.c0 COLLATE BINARY, CAST(rt0.c2 AS TEXT), COALESCE(rt0.c2, x'09da', rt0.c2, rt0.c0)))>((((rt0.c1) IS FALSE), rt0.c0, CAST(rt0.c2 AS INTEGER))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((rt0.c0 COLLATE BINARY, CAST(rt0.c2 AS TEXT), COALESCE(rt0.c2, x'09da', rt0.c2, rt0.c0)))>((((rt0.c1) IS FALSE), rt0.c0, CAST(rt0.c2 AS INTEGER))))))) UNION ALL SELECT * FROM rt0 WHERE ((((((rt0.c0 COLLATE BINARY, CAST(rt0.c2 AS TEXT), COALESCE(rt0.c2, x'09da', rt0.c2, rt0.c0)))>((((rt0.c1) IS FALSE), rt0.c0, CAST(rt0.c2 AS INTEGER))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT vt0.c0, rt0.c2, rt0.c0 FROM vt0, rt0;
SELECT DISTINCT vt0.c0, rt0.c2, rt0.c0 FROM vt0, rt0 WHERE (((NULL) ISNULL)) UNION SELECT DISTINCT vt0.c0, rt0.c2, rt0.c0 FROM vt0, rt0 WHERE ((NOT (((NULL) ISNULL)))) UNION SELECT DISTINCT vt0.c0, rt0.c2, rt0.c0 FROM vt0, rt0 WHERE (((((NULL) ISNULL)) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c2, rt0.c0 FROM vt0, rt0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))) BETWEEN (vt0.c0) AND (NULLIF(rt0.c2, rt0.c1)))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 WHERE ((NOT (((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))) BETWEEN (vt0.c0) AND (NULLIF(rt0.c2, rt0.c1)))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 WHERE (((((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))) BETWEEN (vt0.c0) AND (NULLIF(rt0.c2, rt0.c1)))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0 HAVING (((((((((((((MIN(COUNT(rt0.c0)))AND(MAX(''))))AND(NULL)))OR(vt0.c0)))OR(vt0.c0)))AND(rt0.c1)))AND(vt0.c0)) IN ()) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0 HAVING (NOT ((((((((((((((MIN(COUNT(rt0.c0)))AND(MAX(''))))AND(NULL)))OR(vt0.c0)))OR(vt0.c0)))AND(rt0.c1)))AND(vt0.c0)) IN ()))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0 HAVING (((((((((((((((MIN(COUNT(rt0.c0)))AND(MAX(''))))AND(NULL)))OR(vt0.c0)))OR(vt0.c0)))AND(rt0.c1)))AND(vt0.c0)) IN ())) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0 HAVING (((((((((((((MIN(COUNT(rt0.c0)))AND(MAX(''))))AND(NULL)))OR(vt0.c0)))OR(vt0.c0)))AND(rt0.c1)))AND(vt0.c0)) IN ()) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0 HAVING (NOT ((((((((((((((MIN(COUNT(rt0.c0)))AND(MAX(''))))AND(NULL)))OR(vt0.c0)))OR(vt0.c0)))AND(rt0.c1)))AND(vt0.c0)) IN ()))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0 HAVING (((((((((((((((MIN(COUNT(rt0.c0)))AND(MAX(''))))AND(NULL)))OR(vt0.c0)))OR(vt0.c0)))AND(rt0.c1)))AND(vt0.c0)) IN ())) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0;
SELECT * FROM rt0, vt0;
SELECT * FROM rt0, vt0 WHERE (TRIM(TRIM(rt0.c2))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((NOT (TRIM(TRIM(rt0.c2))))) UNION ALL SELECT * FROM rt0, vt0 WHERE (((TRIM(TRIM(rt0.c2))) ISNULL));
SELECT * FROM rt0, vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0, vt0 WHERE (CASE CAST(vt0.c0 AS BLOB)  WHEN ((0.5940994896774855) NOTNULL) THEN rt0.c2 WHEN vt0.c0 COLLATE NOCASE THEN ((rt0.c1)GLOB(vt0.c0)) WHEN (rt0.c0 IN (rt0.c0)) THEN json_extract(rt0.c2, rt0.c1, rt0.c1, rt0.c0) WHEN rt0.c2 COLLATE RTRIM THEN (rt0.c2 IN ()) WHEN ((-7.8077611E7) BETWEEN (rt0.c2) AND (x'2ec6')) THEN CASE WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c1 END END) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0, vt0 WHERE ((NOT (CASE CAST(vt0.c0 AS BLOB)  WHEN ((0.5940994896774855) NOTNULL) THEN rt0.c2 WHEN vt0.c0 COLLATE NOCASE THEN ((rt0.c1)GLOB(vt0.c0)) WHEN (rt0.c0 IN (rt0.c0)) THEN json_extract(rt0.c2, rt0.c1, rt0.c1, rt0.c0) WHEN rt0.c2 COLLATE RTRIM THEN (rt0.c2 IN ()) WHEN ((-7.8077611E7) BETWEEN (rt0.c2) AND (x'2ec6')) THEN CASE WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c1 END END))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0, vt0 WHERE (((CASE CAST(vt0.c0 AS BLOB)  WHEN ((0.5940994896774855) NOTNULL) THEN rt0.c2 WHEN vt0.c0 COLLATE NOCASE THEN ((rt0.c1)GLOB(vt0.c0)) WHEN (rt0.c0 IN (rt0.c0)) THEN json_extract(rt0.c2, rt0.c1, rt0.c1, rt0.c0) WHEN rt0.c2 COLLATE RTRIM THEN (rt0.c2 IN ()) WHEN ((-7.8077611E7) BETWEEN (rt0.c2) AND (x'2ec6')) THEN CASE WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c1 END END) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0;
SELECT ALL rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0 HAVING TOTAL(SUM(rt0.c0)) UNION ALL SELECT rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0 HAVING (NOT (TOTAL(SUM(rt0.c0)))) UNION ALL SELECT rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0 HAVING ((TOTAL(SUM(rt0.c0))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (((NULL) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (CASE vt0.c0  WHEN '-1102468801' THEN vt0.c0 ELSE vt0.c0 END))) UNION ALL SELECT vt0.c0 FROM vt0 NOT INDEXED WHERE ((NOT (((NULL) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (CASE vt0.c0  WHEN '-1102468801' THEN vt0.c0 ELSE vt0.c0 END))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((NULL) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (CASE vt0.c0  WHEN '-1102468801' THEN vt0.c0 ELSE vt0.c0 END))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (vt0.c0 COLLATE BINARY) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0 COLLATE BINARY))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, vt0 WHERE ((((((rt0.c2 IN (vt0.c0)))AND(((vt0.c0) IS FALSE))))OR((((('-78077611')AND(NULL)))AND(vt0.c0))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0, vt0 WHERE ((NOT ((((((rt0.c2 IN (vt0.c0)))AND(((vt0.c0) IS FALSE))))OR((((('-78077611')AND(NULL)))AND(vt0.c0))))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0, vt0 WHERE ((((((((rt0.c2 IN (vt0.c0)))AND(((vt0.c0) IS FALSE))))OR((((('-78077611')AND(NULL)))AND(vt0.c0))))) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ABS(GROUP_CONCAT(rt0.c0)) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (ABS(GROUP_CONCAT(rt0.c0)))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((ABS(GROUP_CONCAT(rt0.c0))) ISNULL);
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ABS(GROUP_CONCAT(rt0.c0)) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (ABS(GROUP_CONCAT(rt0.c0)))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((ABS(GROUP_CONCAT(rt0.c0))) ISNULL);
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT vt0.c0, rt0.c2 FROM rt0 LEFT OUTER JOIN vt0 ON rt0.c1;
SELECT vt0.c0, rt0.c2 FROM rt0 LEFT OUTER JOIN vt0 ON rt0.c1 WHERE (((vt0.c0 IN ()) IN ())) UNION ALL SELECT ALL vt0.c0, rt0.c2 FROM rt0 LEFT OUTER JOIN vt0 ON rt0.c1 WHERE ((NOT (((vt0.c0 IN ()) IN ())))) UNION ALL SELECT ALL vt0.c0, rt0.c2 FROM rt0 LEFT OUTER JOIN vt0 ON rt0.c1 WHERE (((((vt0.c0 IN ()) IN ())) ISNULL));
SELECT vt0.c0, rt0.c2 FROM rt0 LEFT OUTER JOIN vt0 ON rt0.c1;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (rt0.c2) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0;
SELECT rt0.c1, vt0.c0 FROM rt0, vt0 WHERE (((rt0.c0)-(vt0.c0)) COLLATE NOCASE) GROUP BY rt0.c1, vt0.c0 UNION SELECT ALL rt0.c1, vt0.c0 FROM rt0, vt0 WHERE ((NOT (((rt0.c0)-(vt0.c0)) COLLATE NOCASE))) GROUP BY rt0.c1, vt0.c0 UNION SELECT rt0.c1, vt0.c0 FROM rt0, vt0 WHERE (((((rt0.c0)-(vt0.c0)) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c1, vt0.c0;
SELECT ALL rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0;
SELECT rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0 HAVING MIN(GROUP_CONCAT(rt0.c2)) UNION ALL SELECT rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0 HAVING (NOT (MIN(GROUP_CONCAT(rt0.c2)))) UNION ALL SELECT ALL rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0 HAVING ((MIN(GROUP_CONCAT(rt0.c2))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((CASE rt0.c1  WHEN x'' THEN rt0.c2 ELSE rt0.c1 END)IS(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((CASE rt0.c1  WHEN x'' THEN rt0.c2 ELSE rt0.c1 END)IS(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1))))))) UNION ALL SELECT * FROM rt0 WHERE (((((CASE rt0.c1  WHEN x'' THEN rt0.c2 ELSE rt0.c1 END)IS(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (((((rt0.c1)LIKE(rt0.c0)))||(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (((((rt0.c1)LIKE(rt0.c0)))||(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2))))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((((((rt0.c1)LIKE(rt0.c0)))||(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE (((rt0.c0 COLLATE NOCASE)<<((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT (((rt0.c0 COLLATE NOCASE)<<((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE (((((rt0.c0 COLLATE NOCASE)<<((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING AVG(COUNT(rt0.c0)) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (AVG(COUNT(rt0.c0)))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((AVG(COUNT(rt0.c0))) ISNULL);
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON (+ ((((rt0.c1))>((rt0.c0)))));
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON (+ ((((rt0.c1))>((rt0.c0))))) WHERE ((~ ((vt0.c0 IN (vt0.c0, vt0.c0))))) UNION ALL SELECT ALL * FROM rt0 CROSS JOIN vt0 ON (+ ((((rt0.c1))>((rt0.c0))))) WHERE ((NOT ((~ ((vt0.c0 IN (vt0.c0, vt0.c0))))))) UNION ALL SELECT * FROM rt0 CROSS JOIN vt0 ON (+ ((((rt0.c1))>((rt0.c0))))) WHERE ((((~ ((vt0.c0 IN (vt0.c0, vt0.c0))))) ISNULL));
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON (+ ((((rt0.c1))>((rt0.c0)))));
SELECT DISTINCT vt0.c0 FROM rt0, vt0;
SELECT DISTINCT vt0.c0 FROM rt0, vt0 WHERE ((((((rt0.c1))==((rt0.c1))))<>(((((((((rt0.c1)AND(NULL)))AND(NULL)))AND(rt0.c2)))OR(rt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM rt0, vt0 WHERE ((NOT ((((((rt0.c1))=((rt0.c1))))<>(((((((((rt0.c1)AND(NULL)))AND(NULL)))AND(rt0.c2)))OR(rt0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM rt0, vt0 WHERE ((((((((rt0.c1))=((rt0.c1))))!=(((((((((rt0.c1)AND(NULL)))AND(NULL)))AND(rt0.c2)))OR(rt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM rt0, vt0;
SELECT rt0.c2, vt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON ((((((((CAST(vt0.c0 AS TEXT))AND(CAST(rt0.c2 AS BLOB))))AND(COALESCE(rt0.c2, rt0.c0))))OR((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))))AND(x'')) GROUP BY rt0.c2, vt0.c0;
SELECT rt0.c2, vt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON ((((((((CAST(vt0.c0 AS TEXT))AND(CAST(rt0.c2 AS BLOB))))AND(COALESCE(rt0.c2, rt0.c0))))OR((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))))AND(x'')) WHERE ((NOT (CAST(rt0.c0 AS TEXT)))) GROUP BY rt0.c2, vt0.c0 UNION SELECT rt0.c2, vt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON ((((((((CAST(vt0.c0 AS TEXT))AND(CAST(rt0.c2 AS BLOB))))AND(COALESCE(rt0.c2, rt0.c0))))OR((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))))AND(x'')) WHERE ((NOT ((NOT (CAST(rt0.c0 AS TEXT)))))) GROUP BY rt0.c2, vt0.c0 UNION SELECT rt0.c2, vt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON ((((((((CAST(vt0.c0 AS TEXT))AND(CAST(rt0.c2 AS BLOB))))AND(COALESCE(rt0.c2, rt0.c0))))OR((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))))AND(x'')) WHERE ((((NOT (CAST(rt0.c0 AS TEXT)))) ISNULL)) GROUP BY rt0.c2, vt0.c0;
SELECT rt0.c2, vt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON ((((((((CAST(vt0.c0 AS TEXT))AND(CAST(rt0.c2 AS BLOB))))AND(COALESCE(rt0.c2, rt0.c0))))OR((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))))AND(x'')) GROUP BY rt0.c2, vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MIN((+ (TOTAL(AVG(MIN(TOTAL(MAX(TOTAL(vt0.c0))))))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MIN((+ (TOTAL(AVG(MIN(TOTAL(MAX(TOTAL(vt0.c0))))))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN((+ (TOTAL(AVG(MIN(TOTAL(MAX(TOTAL(vt0.c0)))))))))) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (CASE CAST(vt0.c0 AS NUMERIC)  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN (NOT (vt0.c0)) WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN '0.13124948636843148' THEN vt0.c0 ELSE vt0.c0 END THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) WHEN CAST(vt0.c0 AS TEXT) THEN CAST(vt0.c0 AS BLOB) ELSE json_object(vt0.c0, vt0.c0) END) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (CASE CAST(vt0.c0 AS NUMERIC)  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN (NOT (vt0.c0)) WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN '0.13124948636843148' THEN vt0.c0 ELSE vt0.c0 END THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) WHEN CAST(vt0.c0 AS TEXT) THEN CAST(vt0.c0 AS BLOB) ELSE json_object(vt0.c0, vt0.c0) END))) UNION ALL SELECT * FROM vt0 WHERE (((CASE CAST(vt0.c0 AS NUMERIC)  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN (NOT (vt0.c0)) WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN '0.13124948636843148' THEN vt0.c0 ELSE vt0.c0 END THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) WHEN CAST(vt0.c0 AS TEXT) THEN CAST(vt0.c0 AS BLOB) ELSE json_object(vt0.c0, vt0.c0) END) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0)!=(vt0.c0)))<<(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.c0)!=(vt0.c0)))<<(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0)!=(vt0.c0)))<<(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT rt0.c2, vt0.c0, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c0;
SELECT rt0.c2, vt0.c0, rt0.c0 FROM rt0, vt0 WHERE (((((rt0.c2)<=(NULL)))&(((rt0.c2) BETWEEN (rt0.c1) AND (vt0.c0))))) GROUP BY rt0.c2, vt0.c0, rt0.c0 UNION SELECT rt0.c2, vt0.c0, rt0.c0 FROM rt0, vt0 WHERE ((NOT (((((rt0.c2)<=(NULL)))&(((rt0.c2) BETWEEN (rt0.c1) AND (vt0.c0))))))) GROUP BY rt0.c2, vt0.c0, rt0.c0 UNION SELECT rt0.c2, vt0.c0, rt0.c0 FROM rt0, vt0 WHERE (((((((rt0.c2)<=(NULL)))&(((rt0.c2) BETWEEN (rt0.c1) AND (vt0.c0))))) ISNULL)) GROUP BY rt0.c2, vt0.c0, rt0.c0;
SELECT rt0.c2, vt0.c0, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((TOTAL(MIN(GROUP_CONCAT(rt0.c1))))<=(TOTAL(AVG(rt0.c0)))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (((TOTAL(MIN(GROUP_CONCAT(rt0.c1))))<=(TOTAL(AVG(rt0.c0)))))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((((TOTAL(MIN(GROUP_CONCAT(rt0.c1))))<=(TOTAL(AVG(rt0.c0))))) ISNULL);
SELECT * FROM vt0, rt0;
SELECT ALL * FROM vt0, rt0 WHERE (CAST(rt0.c1 COLLATE NOCASE AS INTEGER)) UNION ALL SELECT * FROM vt0, rt0 WHERE ((NOT (CAST(rt0.c1 COLLATE NOCASE AS INTEGER)))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE (((CAST(rt0.c1 COLLATE NOCASE AS INTEGER)) ISNULL));
SELECT * FROM vt0, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)) IN ())) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)) IN ())))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)) IN ())) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1, rt0.c0, vt0.c0 FROM vt0 NOT INDEXED, rt0 GROUP BY rt0.c1, rt0.c0, vt0.c0;
SELECT ALL rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 WHERE ((~ (((rt0.c1) BETWEEN (rt0.c2) AND (-1.281132984E9))))) GROUP BY rt0.c1, rt0.c0, vt0.c0 UNION SELECT ALL rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 WHERE ((NOT ((~ (((rt0.c1) BETWEEN (rt0.c2) AND (-1.281132984E9))))))) GROUP BY rt0.c1, rt0.c0, vt0.c0 UNION SELECT rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 WHERE ((((~ (((rt0.c1) BETWEEN (rt0.c2) AND (-1.281132984E9))))) ISNULL)) GROUP BY rt0.c1, rt0.c0, vt0.c0;
SELECT rt0.c1, rt0.c0, vt0.c0 FROM vt0 NOT INDEXED, rt0 GROUP BY rt0.c1, rt0.c0, vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TOTAL(COUNT(TOTAL(SUM(COUNT(*))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(COUNT(TOTAL(SUM(COUNT(*))))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(COUNT(TOTAL(SUM(COUNT(*)))))) ISNULL);
SELECT ALL rt0.c0, vt0.c0, rt0.c1, rt0.c2 FROM vt0 CROSS JOIN rt0 ON (((rt0.c2 IN (rt0.c2))) NOT BETWEEN ((rt0.c0 IN ())) AND (CAST(rt0.c2 AS NUMERIC)));
SELECT rt0.c0, vt0.c0, rt0.c1, rt0.c2 FROM vt0 CROSS JOIN rt0 ON (((rt0.c2 IN (rt0.c2))) NOT BETWEEN ((rt0.c0 IN ())) AND (CAST(rt0.c2 AS NUMERIC))) WHERE ((((((rt0.c0))>=(('~A%')))) NOT NULL)) UNION ALL SELECT rt0.c0, vt0.c0, rt0.c1, rt0.c2 FROM vt0 CROSS JOIN rt0 ON (((rt0.c2 IN (rt0.c2))) NOT BETWEEN ((rt0.c0 IN ())) AND (CAST(rt0.c2 AS NUMERIC))) WHERE ((NOT ((((((rt0.c0))>=(('~A%')))) NOT NULL)))) UNION ALL SELECT rt0.c0, vt0.c0, rt0.c1, rt0.c2 FROM vt0 CROSS JOIN rt0 ON (((rt0.c2 IN (rt0.c2))) NOT BETWEEN ((rt0.c0 IN ())) AND (CAST(rt0.c2 AS NUMERIC))) WHERE ((((((((rt0.c0))>=(('~A%')))) NOT NULL)) ISNULL));
SELECT ALL rt0.c0, vt0.c0, rt0.c1, rt0.c2 FROM vt0 CROSS JOIN rt0 ON (((rt0.c2 IN (rt0.c2))) NOT BETWEEN ((rt0.c0 IN ())) AND (CAST(rt0.c2 AS NUMERIC)));
SELECT DISTINCT rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM rt0 CROSS JOIN vt0 ON ((((rt0.c1) NOTNULL)) NOT BETWEEN ((NOT (rt0.c0))) AND (((rt0.c0) NOT NULL)));
SELECT DISTINCT rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM rt0 CROSS JOIN vt0 ON ((((rt0.c1) NOTNULL)) NOT BETWEEN ((NOT (rt0.c0))) AND (((rt0.c0) NOT NULL))) WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c0))) BETWEEN (((((((((rt0.c0)AND(rt0.c2)))OR(0x2da9fd22)))OR(vt0.c0)))AND(x''))) AND (((rt0.c0)-(vt0.c0))))) UNION SELECT DISTINCT rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM rt0 CROSS JOIN vt0 ON ((((rt0.c1) NOTNULL)) NOT BETWEEN ((NOT (rt0.c0))) AND (((rt0.c0) NOT NULL))) WHERE ((NOT (((((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c0))) BETWEEN (((((((((rt0.c0)AND(rt0.c2)))OR(0x2da9fd22)))OR(vt0.c0)))AND(x''))) AND (((rt0.c0)-(vt0.c0))))))) UNION SELECT DISTINCT rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM rt0 CROSS JOIN vt0 ON ((((rt0.c1) NOTNULL)) NOT BETWEEN ((NOT (rt0.c0))) AND (((rt0.c0) NOT NULL))) WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c0))) BETWEEN (((((((((rt0.c0)AND(rt0.c2)))OR(0X2da9fd22)))OR(vt0.c0)))AND(x''))) AND (((rt0.c0)-(vt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM rt0 CROSS JOIN vt0 ON ((((rt0.c1) NOTNULL)) NOT BETWEEN ((NOT (rt0.c0))) AND (((rt0.c0) NOT NULL)));
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((COUNT(vt0.c0))OR(COUNT(x''))))OR(TOTAL(MAX(AVG(TOTAL(vt0.c0)))))) IN (((vt0.c0)|(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((((COUNT(vt0.c0))OR(COUNT(x''))))OR(TOTAL(MAX(AVG(TOTAL(vt0.c0)))))) IN (((vt0.c0)|(vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((((COUNT(vt0.c0))OR(COUNT(x''))))OR(TOTAL(MAX(AVG(TOTAL(vt0.c0)))))) IN (((vt0.c0)|(vt0.c0))))) ISNULL);
SELECT * FROM rt0 CROSS JOIN vt0 ON (NOT (((((rt0.c0)OR(rt0.c2)))AND(rt0.c2))));
SELECT * FROM rt0 CROSS JOIN vt0 ON (NOT (((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))) WHERE ((((((('')%(vt0.c0)))AND(vt0.c0)))OR('-1265747579'))) UNION ALL SELECT ALL * FROM rt0 CROSS JOIN vt0 ON (NOT (((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))) WHERE ((NOT ((((((('')%(vt0.c0)))AND(vt0.c0)))OR('-1265747579'))))) UNION ALL SELECT * FROM rt0 CROSS JOIN vt0 ON (NOT (((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))) WHERE ((((((((('')%(vt0.c0)))AND(vt0.c0)))OR('-1265747579'))) ISNULL));
SELECT * FROM rt0 CROSS JOIN vt0 ON (NOT (((((rt0.c0)OR(rt0.c2)))AND(rt0.c2))));
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (((LTRIM(rt0.c1, 0xffffffff874c80a4)) BETWEEN (CASE WHEN vt0.c0 THEN rt0.c2 END) AND (((NULL)IS NOT(rt0.c1))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (((LTRIM(rt0.c1, 0xffffffff874c80a4)) BETWEEN (CASE WHEN vt0.c0 THEN rt0.c2 END) AND (((NULL)IS NOT(rt0.c1))))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((((LTRIM(rt0.c1, 0Xffffffff874c80a4)) BETWEEN (CASE WHEN vt0.c0 THEN rt0.c2 END) AND (((NULL)IS NOT(rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE (CAST(HEX(rt0.c1) AS NUMERIC)) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (CAST(HEX(rt0.c1) AS NUMERIC)))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE (((CAST(HEX(rt0.c1) AS NUMERIC)) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1, vt0.c0, rt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON ((rt0.c0 COLLATE NOCASE)>((~ ('1731962491')))) GROUP BY rt0.c1, vt0.c0, rt0.c0;
SELECT rt0.c1, vt0.c0, rt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON ((rt0.c0 COLLATE NOCASE)>((~ ('1731962491')))) GROUP BY rt0.c1, vt0.c0, rt0.c0 HAVING AVG(MIN(rt0.c2)) UNION ALL SELECT rt0.c1, vt0.c0, rt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON ((rt0.c0 COLLATE NOCASE)>((~ ('1731962491')))) GROUP BY rt0.c1, vt0.c0, rt0.c0 HAVING (NOT (AVG(MIN(rt0.c2)))) UNION ALL SELECT ALL rt0.c1, vt0.c0, rt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON ((rt0.c0 COLLATE NOCASE)>((~ ('1731962491')))) GROUP BY rt0.c1, vt0.c0, rt0.c0 HAVING ((AVG(MIN(rt0.c2))) ISNULL);
SELECT rt0.c1 FROM vt0, rt0;
SELECT rt0.c1 FROM vt0, rt0 WHERE ((((rt0.c2 IN ())) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c2 END) AND (((rt0.c0)<>(rt0.c2))))) UNION ALL SELECT ALL rt0.c1 FROM vt0, rt0 WHERE ((NOT ((((rt0.c2 IN ())) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c2 END) AND (((rt0.c0)<>(rt0.c2))))))) UNION ALL SELECT ALL rt0.c1 FROM vt0, rt0 WHERE ((((((rt0.c2 IN ())) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c2 END) AND (((rt0.c0)<>(rt0.c2))))) ISNULL));
SELECT rt0.c1 FROM vt0, rt0;
SELECT DISTINCT rt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON (((((vt0.c0)AND(rt0.c1)))OR(vt0.c0)) IN ());
SELECT DISTINCT rt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON (((((vt0.c0)AND(rt0.c1)))OR(vt0.c0)) IN ()) WHERE (((((((((((((((rt0.c0)OR(rt0.c1)))OR(vt0.c0)))AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c1)))OR('(~')))-(((rt0.c1) IS TRUE)))) UNION SELECT DISTINCT rt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON (((((vt0.c0)AND(rt0.c1)))OR(vt0.c0)) IN ()) WHERE ((NOT (((((((((((((((rt0.c0)OR(rt0.c1)))OR(vt0.c0)))AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c1)))OR('(~')))-(((rt0.c1) IS TRUE)))))) UNION SELECT DISTINCT rt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON (((((vt0.c0)AND(rt0.c1)))OR(vt0.c0)) IN ()) WHERE (((((((((((((((((rt0.c0)OR(rt0.c1)))OR(vt0.c0)))AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c1)))OR('(~')))-(((rt0.c1) IS TRUE)))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON (((((vt0.c0)AND(rt0.c1)))OR(vt0.c0)) IN ());
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 END) IS TRUE)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((CASE WHEN vt0.c0 THEN vt0.c0 END) IS TRUE)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 END) IS TRUE)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c0, rt0.c1 FROM rt0 NOT INDEXED GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING AVG(AVG(rt0.c0)) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (AVG(AVG(rt0.c0)))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((AVG(AVG(rt0.c0))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (TRIM(DISTINCT '0.8797038684905868', ((vt0.c0)GLOB(vt0.c0)))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (TRIM(DISTINCT '0.8797038684905868', ((vt0.c0)GLOB(vt0.c0)))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((TRIM(DISTINCT '0.8797038684905868', ((vt0.c0)GLOB(vt0.c0)))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((vt0.c0) IS TRUE)) NOTNULL)) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) IS TRUE)) NOTNULL)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((vt0.c0) IS TRUE)) NOTNULL)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE ((((x''))==((LIKELY(rt0.c1))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT ((((x''))=((LIKELY(rt0.c1))))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((((((x''))==((LIKELY(rt0.c1))))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, vt0.c0;
SELECT rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, vt0.c0 HAVING CAST(SUM(MAX(rt0.c1)) AS BLOB) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, vt0.c0 HAVING (NOT (CAST(SUM(MAX(rt0.c1)) AS BLOB))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, vt0.c0 HAVING ((CAST(SUM(MAX(rt0.c1)) AS BLOB)) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE ((((((rt0.c1))=((rt0.c1)))) BETWEEN (((((rt0.c2)OR(rt0.c0)))OR(rt0.c0))) AND (rt0.c2))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((((rt0.c1))==((rt0.c1)))) BETWEEN (((((rt0.c2)OR(rt0.c0)))OR(rt0.c0))) AND (rt0.c2))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((((((rt0.c1))==((rt0.c1)))) BETWEEN (((((rt0.c2)OR(rt0.c0)))OR(rt0.c0))) AND (rt0.c2))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE (UNLIKELY(HEX(DISTINCT rt0.c2))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT (UNLIKELY(HEX(DISTINCT rt0.c2))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((UNLIKELY(HEX(DISTINCT rt0.c2))) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON ((((rt0.c2)%(rt0.c0))) NOT BETWEEN (ABS(rt0.c2)) AND (NULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON ((((rt0.c2)%(rt0.c0))) NOT BETWEEN (ABS(rt0.c2)) AND (NULL)) WHERE (((((rt0.c1) IS TRUE)) NOT NULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON ((((rt0.c2)%(rt0.c0))) NOT BETWEEN (ABS(rt0.c2)) AND (NULL)) WHERE ((NOT (((((rt0.c1) IS TRUE)) NOT NULL)))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON ((((rt0.c2)%(rt0.c0))) NOT BETWEEN (ABS(rt0.c2)) AND (NULL)) WHERE (((((((rt0.c1) IS TRUE)) NOT NULL)) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON ((((rt0.c2)%(rt0.c0))) NOT BETWEEN (ABS(rt0.c2)) AND (NULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING x'' UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (x'')) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((x'') ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING x'' UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (x'')) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((x'') ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))%((vt0.c0 IN (x'b743af8b'))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))%((vt0.c0 IN (x'b743af8b'))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))%((vt0.c0 IN (x'b743af8b'))))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT rt0.c0, rt0.c2, vt0.c0, rt0.c1 FROM vt0, rt0;
SELECT DISTINCT rt0.c0, rt0.c2, vt0.c0, rt0.c1 FROM vt0, rt0 WHERE (((NULL)||(rt0.c0))) UNION SELECT DISTINCT rt0.c0, rt0.c2, vt0.c0, rt0.c1 FROM vt0, rt0 WHERE ((NOT (((NULL)||(rt0.c0))))) UNION SELECT DISTINCT rt0.c0, rt0.c2, vt0.c0, rt0.c1 FROM vt0, rt0 WHERE (((((NULL)||(rt0.c0))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, vt0.c0, rt0.c1 FROM vt0, rt0;
SELECT rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0, vt0 WHERE ((((((((((((x''))<=((rt0.c2))))OR(rt0.c1 COLLATE BINARY)))AND((rt0.c0 IN ()))))AND((rt0.c2 IN (rt0.c1, vt0.c0)))))AND(x'968a'))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0, vt0 WHERE ((NOT ((((((((((((x''))<=((rt0.c2))))OR(rt0.c1 COLLATE BINARY)))AND((rt0.c0 IN ()))))AND((rt0.c2 IN (rt0.c1, vt0.c0)))))AND(x'968a'))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0, vt0 WHERE ((((((((((((((x''))<=((rt0.c2))))OR(rt0.c1 COLLATE BINARY)))AND((rt0.c0 IN ()))))AND((rt0.c2 IN (rt0.c1, vt0.c0)))))AND(x'968a'))) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING COUNT(((MIN(TOTAL(AVG(MAX(COUNT(*)))))) NOT NULL)) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (COUNT(((MIN(TOTAL(AVG(MAX(COUNT(*)))))) NOT NULL)))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((COUNT(((MIN(TOTAL(AVG(MAX(COUNT(*)))))) NOT NULL))) ISNULL);
SELECT ALL TOTAL(((((rt0.c0 COLLATE RTRIM)AND(((rt0.c0)&(rt0.c1)))))AND((((rt0.c0))=((rt0.c0)))))) FROM rt0;
SELECT * FROM vt0, rt0;
SELECT * FROM vt0, rt0 WHERE (((((((((rt0.c0)OR(vt0.c0)))OR(rt0.c1)))OR(vt0.c0)))AND(rt0.c2)) COLLATE RTRIM) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE ((NOT (((((((((rt0.c0)OR(vt0.c0)))OR(rt0.c1)))OR(vt0.c0)))AND(rt0.c2)) COLLATE RTRIM))) UNION ALL SELECT * FROM vt0, rt0 WHERE (((((((((((rt0.c0)OR(vt0.c0)))OR(rt0.c1)))OR(vt0.c0)))AND(rt0.c2)) COLLATE RTRIM) ISNULL));
SELECT * FROM vt0, rt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT rt0.c2 FROM rt0, vt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, vt0 WHERE (CAST((((rt0.c0))<=((vt0.c0))) AS INTEGER)) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0, vt0 WHERE ((NOT (CAST((((rt0.c0))<=((vt0.c0))) AS INTEGER)))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0, vt0 WHERE (((CAST((((rt0.c0))<=((vt0.c0))) AS INTEGER)) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, vt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((COUNT(*))==(COUNT(*))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (((COUNT(*))==(COUNT(*))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((((COUNT(*))=(COUNT(*)))) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((COUNT(*))==(COUNT(*))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (((COUNT(*))==(COUNT(*))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((((COUNT(*))=(COUNT(*)))) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((+ ((NOT (vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((+ ((NOT (vt0.c0))))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((+ ((NOT (vt0.c0))))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (((json_patch(rt0.c1, vt0.c0))|(((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (((json_patch(rt0.c1, vt0.c0))|(((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((((json_patch(rt0.c1, vt0.c0))|(((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))))) ISNULL));
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0)/('y䯛	쨬|yJC')) COLLATE RTRIM) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0)/('y䯛	쨬|yJC')) COLLATE RTRIM))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0)/('y䯛	쨬|yJC')) COLLATE RTRIM) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((((TOTAL(SUM(rt0.c2)))AND(((rt0.c0) NOT BETWEEN (COUNT(*)) AND (MAX(rt0.c1))))))AND(COUNT(*))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (((((TOTAL(SUM(rt0.c2)))AND(((rt0.c0) NOT BETWEEN (COUNT(*)) AND (MAX(rt0.c1))))))AND(COUNT(*))))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((((((TOTAL(SUM(rt0.c2)))AND(((rt0.c0) NOT BETWEEN (COUNT(*)) AND (MAX(rt0.c1))))))AND(COUNT(*)))) ISNULL);
SELECT ALL * FROM rt0, vt0;
SELECT * FROM rt0, vt0 WHERE (CASE WHEN CAST(rt0.c1 AS BLOB) THEN rt0.c0 ELSE (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) END) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((NOT (CASE WHEN CAST(rt0.c1 AS BLOB) THEN rt0.c0 ELSE (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) END))) UNION ALL SELECT * FROM rt0, vt0 WHERE (((CASE WHEN CAST(rt0.c1 AS BLOB) THEN rt0.c0 ELSE (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) END) ISNULL));
SELECT ALL * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((((((rt0.c2)AND(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))))OR((((rt0.c1))>((rt0.c0))))))AND((rt0.c0 IN ()))))OR(CASE WHEN rt0.c2 THEN rt0.c2 END))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((((((rt0.c2)AND(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))))OR((((rt0.c1))>((rt0.c0))))))AND((rt0.c0 IN ()))))OR(CASE WHEN rt0.c2 THEN rt0.c2 END))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((((((rt0.c2)AND(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))))OR((((rt0.c1))>((rt0.c0))))))AND((rt0.c0 IN ()))))OR(CASE WHEN rt0.c2 THEN rt0.c2 END))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((CASE WHEN rt0.c1 THEN rt0.c2 END IN ())) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((CASE WHEN rt0.c1 THEN rt0.c2 END IN ())))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((CASE WHEN rt0.c1 THEN rt0.c2 END IN ())) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (((+ (rt0.c1))) NOTNULL) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT ((((+ (rt0.c1))) NOTNULL))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (((((+ (rt0.c1))) NOTNULL)) ISNULL);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (((+ (rt0.c1))) NOTNULL) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT ((((+ (rt0.c1))) NOTNULL))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (((((+ (rt0.c1))) NOTNULL)) ISNULL);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (((((rt0.c0)GLOB(rt0.c2))) NOT BETWEEN (((rt0.c2)<('1216210130'))) AND (((rt0.c2) IS FALSE)))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((rt0.c0)GLOB(rt0.c2))) NOT BETWEEN (((rt0.c2)<('1216210130'))) AND (((rt0.c2) IS FALSE)))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((rt0.c0)GLOB(rt0.c2))) NOT BETWEEN (((rt0.c2)<('1216210130'))) AND (((rt0.c2) IS FALSE)))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt0 ON (UPPER(DISTINCT rt0.c1) IN ());
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt0 ON (UPPER(DISTINCT rt0.c1) IN ()) WHERE ((json_insert(rt0.c2, rt0.c2, vt0.c0) IN ())) UNION SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt0 ON (UPPER(DISTINCT rt0.c1) IN ()) WHERE ((NOT ((json_insert(rt0.c2, rt0.c2, vt0.c0) IN ())))) UNION SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt0 ON (UPPER(DISTINCT rt0.c1) IN ()) WHERE ((((json_insert(rt0.c2, rt0.c2, vt0.c0) IN ())) ISNULL));
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt0 ON (UPPER(DISTINCT rt0.c1) IN ());
SELECT ALL rt0.c0, vt0.c0 FROM rt0 CROSS JOIN vt0 ON ((((0.3570460628197054 COLLATE NOCASE)OR(rt0.c0 COLLATE RTRIM)))OR(rt0.c0 COLLATE RTRIM)) GROUP BY rt0.c0, vt0.c0;
SELECT ALL rt0.c0, vt0.c0 FROM rt0 CROSS JOIN vt0 ON ((((0.3570460628197054 COLLATE NOCASE)OR(rt0.c0 COLLATE RTRIM)))OR(rt0.c0 COLLATE RTRIM)) WHERE (((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)))AND(ROUND(rt0.c0, rt0.c1))))AND((vt0.c0 IN (rt0.c0))))) GROUP BY rt0.c0, vt0.c0 UNION SELECT rt0.c0, vt0.c0 FROM rt0 CROSS JOIN vt0 ON ((((0.3570460628197054 COLLATE NOCASE)OR(rt0.c0 COLLATE RTRIM)))OR(rt0.c0 COLLATE RTRIM)) WHERE ((NOT (((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)))AND(ROUND(rt0.c0, rt0.c1))))AND((vt0.c0 IN (rt0.c0))))))) GROUP BY rt0.c0, vt0.c0 UNION SELECT ALL rt0.c0, vt0.c0 FROM rt0 CROSS JOIN vt0 ON ((((0.3570460628197054 COLLATE NOCASE)OR(rt0.c0 COLLATE RTRIM)))OR(rt0.c0 COLLATE RTRIM)) WHERE (((((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)))AND(ROUND(rt0.c0, rt0.c1))))AND((vt0.c0 IN (rt0.c0))))) ISNULL)) GROUP BY rt0.c0, vt0.c0;
SELECT ALL rt0.c0, vt0.c0 FROM rt0 CROSS JOIN vt0 ON ((((0.3570460628197054 COLLATE NOCASE)OR(rt0.c0 COLLATE RTRIM)))OR(rt0.c0 COLLATE RTRIM)) GROUP BY rt0.c0, vt0.c0;
SELECT rt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON 'nks苩' GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON 'nks苩' GROUP BY rt0.c0 HAVING MAX(COUNT(*)) UNION ALL SELECT rt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON 'nks苩' GROUP BY rt0.c0 HAVING (NOT (MAX(COUNT(*)))) UNION ALL SELECT ALL rt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON 'nks苩' GROUP BY rt0.c0 HAVING ((MAX(COUNT(*))) ISNULL);
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON vt0.c0;
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON vt0.c0 WHERE ((((0.5547647839937729 IN ())) NOT BETWEEN (rt0.c2) AND (((rt0.c2)%(rt0.c0))))) UNION ALL SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON vt0.c0 WHERE ((NOT ((((0.5547647839937729 IN ())) NOT BETWEEN (rt0.c2) AND (((rt0.c2)%(rt0.c0))))))) UNION ALL SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON vt0.c0 WHERE ((((((0.5547647839937729 IN ())) NOT BETWEEN (rt0.c2) AND (((rt0.c2)%(rt0.c0))))) ISNULL));
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON vt0.c0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (CAST(((rt0.c1)<<(rt0.c2)) AS REAL)) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (CAST(((rt0.c1)<<(rt0.c2)) AS REAL)))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((CAST(((rt0.c1)<<(rt0.c2)) AS REAL)) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, vt0 WHERE ((CAST(rt0.c1 AS BLOB) IN (TYPEOF(vt0.c0)))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0, vt0 WHERE ((NOT ((CAST(rt0.c1 AS BLOB) IN (TYPEOF(vt0.c0)))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0, vt0 WHERE ((((CAST(rt0.c1 AS BLOB) IN (TYPEOF(vt0.c0)))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING json_array_length(MAX(MAX(SUM(rt0.c1)))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (json_array_length(MAX(MAX(SUM(rt0.c1)))))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((json_array_length(MAX(MAX(SUM(rt0.c1))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE ((((((rt0.c0)IS NOT(rt0.c0))))>=(((((rt0.c2, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c2, rt0.c1))))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((((((rt0.c0)IS NOT(rt0.c0))))>=(((((rt0.c2, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c2, rt0.c1))))))))) UNION ALL SELECT * FROM rt0 WHERE ((((((((rt0.c0)IS NOT(rt0.c0))))>=(((((rt0.c2, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c2, rt0.c1))))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0) NOT NULL) COLLATE NOCASE) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((vt0.c0) NOT NULL) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0) NOT NULL) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c0)>>(0.19595946208648718)))OR(0.036718044867229516)))OR(CAST(vt0.c0 AS REAL)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((((vt0.c0)>>(0.19595946208648718)))OR(0.036718044867229516)))OR(CAST(vt0.c0 AS REAL)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((((vt0.c0)>>(0.19595946208648718)))OR(0.036718044867229516)))OR(CAST(vt0.c0 AS REAL)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(TOTAL(vt0.c0)))LIKE(('Pa+6oCCA' IN (GROUP_CONCAT(GROUP_CONCAT(MAX(MIN(TOTAL(vt0.c0))))), COUNT(*))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((GROUP_CONCAT(TOTAL(vt0.c0)))LIKE(('Pa+6oCCA' IN (GROUP_CONCAT(GROUP_CONCAT(MAX(MIN(TOTAL(vt0.c0))))), COUNT(*))))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((GROUP_CONCAT(TOTAL(vt0.c0)))LIKE(('Pa+6oCCA' IN (GROUP_CONCAT(GROUP_CONCAT(MAX(MIN(TOTAL(vt0.c0))))), COUNT(*)))))) ISNULL);
SELECT ALL rt0.c1, rt0.c0 FROM vt0, rt0;
SELECT rt0.c1, rt0.c0 FROM vt0, rt0 WHERE (((((vt0.c0) IS TRUE)) NOT NULL)) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM vt0, rt0 WHERE ((NOT (((((vt0.c0) IS TRUE)) NOT NULL)))) UNION ALL SELECT rt0.c1, rt0.c0 FROM vt0, rt0 WHERE (((((((vt0.c0) IS TRUE)) NOT NULL)) ISNULL));
SELECT ALL rt0.c1, rt0.c0 FROM vt0, rt0;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE (CAST((rt0.c0 IN ()) AS TEXT)) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT (CAST((rt0.c0 IN ()) AS TEXT)))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((CAST((rt0.c0 IN ()) AS TEXT)) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE (LIKELIHOOD(DISTINCT ((rt0.c1)>=(rt0.c2)), 0.299272011834129)) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (LIKELIHOOD(DISTINCT ((rt0.c1)>=(rt0.c2)), 0.299272011834129)))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE (((LIKELIHOOD(DISTINCT ((rt0.c1)>=(rt0.c2)), 0.299272011834129)) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0 HAVING (((COUNT(*))) BETWEEN ((ABS(DISTINCT AVG(rt0.c0)))) AND ((MAX(rt0.c1)))) UNION ALL SELECT ALL vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0 HAVING (NOT ((((COUNT(*))) BETWEEN ((ABS(DISTINCT AVG(rt0.c0)))) AND ((MAX(rt0.c1)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0 HAVING (((((COUNT(*))) BETWEEN ((ABS(DISTINCT AVG(rt0.c0)))) AND ((MAX(rt0.c1))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0 HAVING (((COUNT(*))) BETWEEN ((ABS(DISTINCT AVG(rt0.c0)))) AND ((MAX(rt0.c1)))) UNION ALL SELECT ALL vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0 HAVING (NOT ((((COUNT(*))) BETWEEN ((ABS(DISTINCT AVG(rt0.c0)))) AND ((MAX(rt0.c1)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0 HAVING (((((COUNT(*))) BETWEEN ((ABS(DISTINCT AVG(rt0.c0)))) AND ((MAX(rt0.c1))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0;
SELECT TOTAL(rt0.c2) FROM vt0, rt0 ORDER BY ((((vt0.c0) NOTNULL)) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (vt0.c0)) ASC;
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 END)||(((vt0.c0)<=(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (((CASE WHEN vt0.c0 THEN vt0.c0 END)||(((vt0.c0)<=(vt0.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 END)||(((vt0.c0)<=(vt0.c0))))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0;
SELECT DISTINCT rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0 WHERE (((((CAST(vt0.c0 AS TEXT))OR(UNLIKELY(rt0.c2))))OR(CAST(rt0.c2 AS REAL)))) UNION SELECT DISTINCT rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0 WHERE ((NOT (((((CAST(vt0.c0 AS TEXT))OR(UNLIKELY(rt0.c2))))OR(CAST(rt0.c2 AS REAL)))))) UNION SELECT DISTINCT rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0 WHERE (((((((CAST(vt0.c0 AS TEXT))OR(UNLIKELY(rt0.c2))))OR(CAST(rt0.c2 AS REAL)))) ISNULL));
SELECT DISTINCT rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c0;
SELECT rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0 WHERE ((((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c0 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0 WHERE ((NOT ((((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))) ISNULL)))) GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c0 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0 WHERE ((((((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))) ISNULL)) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING AVG(COUNT(rt0.c0)) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (AVG(COUNT(rt0.c0)))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((AVG(COUNT(rt0.c0))) ISNULL);
SELECT ALL rt0.c1 FROM rt0 FULL OUTER JOIN vt0 ON ((json_array_length(rt0.c2, rt0.c0))LIKE(CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN '1103683329' THEN vt0.c0 END));
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((CAST('k.T' AS NUMERIC) IN (vt0.c0))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((CAST('k.T' AS NUMERIC) IN (vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((CAST('k.T' AS NUMERIC) IN (vt0.c0))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((rt0.c2)OR(0.27296190955045296)) COLLATE RTRIM) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c2)OR(0.27296190955045296)) COLLATE RTRIM))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((((rt0.c2)OR(0.27296190955045296)) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c0 COLLATE BINARY UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0 COLLATE BINARY)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0 COLLATE BINARY) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c0 COLLATE BINARY UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0 COLLATE BINARY)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0 COLLATE BINARY) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c2 FROM vt0, rt0;
SELECT ALL rt0.c2 FROM vt0, rt0 WHERE (((LIKE(vt0.c0, rt0.c0))IS(NULL))) UNION ALL SELECT ALL rt0.c2 FROM vt0, rt0 WHERE ((NOT (((LIKE(vt0.c0, rt0.c0))IS(NULL))))) UNION ALL SELECT ALL rt0.c2 FROM vt0, rt0 WHERE (((((LIKE(vt0.c0, rt0.c0))IS(NULL))) ISNULL));
SELECT rt0.c2 FROM vt0, rt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((- (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((- (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((- (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT rt0.c1 FROM vt0 NATURAL JOIN rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM vt0 NATURAL JOIN rt0 WHERE (((((rt0.c2 COLLATE RTRIM)OR(rt0.c0 COLLATE RTRIM)))AND((NOT (rt0.c1))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM vt0 NATURAL JOIN rt0 WHERE ((NOT (((((rt0.c2 COLLATE RTRIM)OR(rt0.c0 COLLATE RTRIM)))AND((NOT (rt0.c1))))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM vt0 NATURAL JOIN rt0 WHERE (((((((rt0.c2 COLLATE RTRIM)OR(rt0.c0 COLLATE RTRIM)))AND((NOT (rt0.c1))))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM vt0 NATURAL JOIN rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((+ (vt0.c0))) IS FALSE)) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((+ (vt0.c0))) IS FALSE)))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((((+ (vt0.c0))) IS FALSE)) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (NULL) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (((((((((NULL)AND(((rt0.c2)<=(7.66115106E8)))))AND(((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)))))AND(((rt0.c1)IS NOT('wm?ꤿ')))))OR(956472914 COLLATE BINARY))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((((((((NULL)AND(((rt0.c2)<=(7.66115106E8)))))AND(((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)))))AND(((rt0.c1)IS NOT('wm?ꤿ')))))OR(956472914 COLLATE BINARY))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (((((((((((NULL)AND(((rt0.c2)<=(7.66115106E8)))))AND(((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)))))AND(((rt0.c1)IS NOT('wm?ꤿ')))))OR(956472914 COLLATE BINARY))) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*))-(TOTAL(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((COUNT(*))-(TOTAL(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((COUNT(*))-(TOTAL(vt0.c0)))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*))-(TOTAL(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((COUNT(*))-(TOTAL(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((COUNT(*))-(TOTAL(vt0.c0)))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (((((vt0.c0) IS FALSE)) NOT BETWEEN (((x'')LIKE('-1102468801'))) AND ((((vt0.c0))<((vt0.c0)))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((((vt0.c0) IS FALSE)) NOT BETWEEN (((x'')LIKE('-1102468801'))) AND ((((vt0.c0))<((vt0.c0)))))))) UNION ALL SELECT * FROM vt0 WHERE (((((((vt0.c0) IS FALSE)) NOT BETWEEN (((x'')LIKE('-1102468801'))) AND ((((vt0.c0))<((vt0.c0)))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((- (CAST(vt0.c0 AS NUMERIC)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((- (CAST(vt0.c0 AS NUMERIC)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((- (CAST(vt0.c0 AS NUMERIC)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT rt0.c2, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM vt0, rt0 WHERE ((((((0.6509213186841862)) BETWEEN ((rt0.c1)) AND ((0.4174372214975999)))) NOT BETWEEN (rt0.c1) AND (CAST(rt0.c2 AS INTEGER)))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM vt0, rt0 WHERE ((NOT ((((((0.6509213186841862)) BETWEEN ((rt0.c1)) AND ((0.4174372214975999)))) NOT BETWEEN (rt0.c1) AND (CAST(rt0.c2 AS INTEGER)))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM vt0, rt0 WHERE ((((((((0.6509213186841862)) BETWEEN ((rt0.c1)) AND ((0.4174372214975999)))) NOT BETWEEN (rt0.c1) AND (CAST(rt0.c2 AS INTEGER)))) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2 HAVING SUM(AVG(rt0.c1)) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (SUM(AVG(rt0.c1)))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2 HAVING ((SUM(AVG(rt0.c1))) ISNULL);
SELECT ALL SUM((((((0.2939262339278075)OR(rt0.c2)))AND(rt0.c2)) IN (((x'')LIKE(rt0.c1))))) FROM rt0, vt0;
SELECT ALL rt0.c1 FROM vt0, rt0;
SELECT ALL rt0.c1 FROM vt0, rt0 WHERE ((((~ (vt0.c0))) NOT BETWEEN (UNLIKELY(rt0.c1)) AND ((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0)))))) UNION ALL SELECT ALL rt0.c1 FROM vt0, rt0 WHERE ((NOT ((((~ (vt0.c0))) NOT BETWEEN (UNLIKELY(rt0.c1)) AND ((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0)))))))) UNION ALL SELECT ALL rt0.c1 FROM vt0, rt0 WHERE ((((((~ (vt0.c0))) NOT BETWEEN (UNLIKELY(rt0.c1)) AND ((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0)))))) ISNULL));
SELECT ALL rt0.c1 FROM vt0, rt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (CAST(vt0.c0 COLLATE NOCASE AS INTEGER)) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (CAST(vt0.c0 COLLATE NOCASE AS INTEGER)))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((CAST(vt0.c0 COLLATE NOCASE AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT ALL rt0.c0, rt0.c1, vt0.c0, rt0.c2 FROM vt0 FULL OUTER JOIN rt0 ON vt0.c0 GROUP BY rt0.c0, rt0.c1, vt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, vt0.c0, rt0.c2 FROM vt0 FULL OUTER JOIN rt0 ON vt0.c0 WHERE (NULL COLLATE RTRIM) GROUP BY rt0.c0, rt0.c1, vt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, vt0.c0, rt0.c2 FROM vt0 FULL OUTER JOIN rt0 ON vt0.c0 WHERE ((NOT (NULL COLLATE RTRIM))) GROUP BY rt0.c0, rt0.c1, vt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c1, vt0.c0, rt0.c2 FROM vt0 FULL OUTER JOIN rt0 ON vt0.c0 WHERE (((NULL COLLATE RTRIM) ISNULL)) GROUP BY rt0.c0, rt0.c1, vt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, vt0.c0, rt0.c2 FROM vt0 FULL OUTER JOIN rt0 ON vt0.c0 GROUP BY rt0.c0, rt0.c1, vt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((SUM(rt0.c0)) NOT NULL) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (((SUM(rt0.c0)) NOT NULL))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((((SUM(rt0.c0)) NOT NULL)) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((SUM(rt0.c0)) NOT NULL) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (((SUM(rt0.c0)) NOT NULL))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((((SUM(rt0.c0)) NOT NULL)) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((NOT (vt0.c0)) IN ())) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((NOT (vt0.c0)) IN ())))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((NOT (vt0.c0)) IN ())) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((vt0.c0) IS FALSE)) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0) IS FALSE)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((vt0.c0) IS FALSE)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0 IN (vt0.c0)) IN ())) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0 IN (vt0.c0)) IN ())))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0 IN (vt0.c0)) IN ())) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TOTAL(((((((((vt0.c0)AND(TOTAL(vt0.c0))))OR(GROUP_CONCAT(COUNT(TOTAL(GROUP_CONCAT(TOTAL(vt0.c0))))))))OR(MIN(vt0.c0))))OR(MAX(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(((((((((vt0.c0)AND(TOTAL(vt0.c0))))OR(GROUP_CONCAT(COUNT(TOTAL(GROUP_CONCAT(TOTAL(vt0.c0))))))))OR(MIN(vt0.c0))))OR(MAX(vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(((((((((vt0.c0)AND(TOTAL(vt0.c0))))OR(GROUP_CONCAT(COUNT(TOTAL(GROUP_CONCAT(TOTAL(vt0.c0))))))))OR(MIN(vt0.c0))))OR(MAX(vt0.c0))))) ISNULL);
SELECT rt0.c0, vt0.c0, rt0.c2 FROM vt0 CROSS JOIN rt0 ON ((json_extract(rt0.c0, rt0.c2))IS(LIKE(vt0.c0, rt0.c1)));
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (0.874330955021783) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (0.874330955021783))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((0.874330955021783) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT ALL vt0.c0 FROM rt0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM rt0, vt0 WHERE ((((vt0.c0)<>(vt0.c0)) IN ())) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM rt0, vt0 WHERE ((NOT ((((vt0.c0)!=(vt0.c0)) IN ())))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM rt0, vt0 WHERE ((((((vt0.c0)<>(vt0.c0)) IN ())) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM rt0, vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0 HAVING GROUP_CONCAT(CAST(COUNT(rt0.c2) AS NUMERIC)) UNION ALL SELECT rt0.c2, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (GROUP_CONCAT(CAST(COUNT(rt0.c2) AS NUMERIC)))) UNION ALL SELECT rt0.c2, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((GROUP_CONCAT(CAST(COUNT(rt0.c2) AS NUMERIC))) ISNULL);
SELECT * FROM rt0, vt0;
SELECT ALL * FROM rt0, vt0 WHERE (((rt0.c2)||((((vt0.c0))<>((rt0.c1)))))) UNION ALL SELECT * FROM rt0, vt0 WHERE ((NOT (((rt0.c2)||((((vt0.c0))<>((rt0.c1)))))))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c2)||((((vt0.c0))<>((rt0.c1)))))) ISNULL));
SELECT * FROM rt0, vt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (rt0.c0) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (vt0.c0 COLLATE RTRIM) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0 COLLATE RTRIM))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0 HAVING COUNT(((MIN(AVG(GROUP_CONCAT(vt0.c0))))==(vt0.c0))) UNION ALL SELECT rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0 HAVING (NOT (COUNT(((MIN(AVG(GROUP_CONCAT(vt0.c0))))=(vt0.c0))))) UNION ALL SELECT rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0 HAVING ((COUNT(((MIN(AVG(GROUP_CONCAT(vt0.c0))))==(vt0.c0)))) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (((vt0.c0)>(x'')) COLLATE NOCASE) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((vt0.c0)>(x'')) COLLATE NOCASE))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((vt0.c0)>(x'')) COLLATE NOCASE) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (NULL) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM vt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM rt0 CROSS JOIN vt0 ON NULL GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM rt0 CROSS JOIN vt0 ON NULL WHERE ((NOT (((vt0.c0) IS FALSE)))) GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM rt0 CROSS JOIN vt0 ON NULL WHERE ((NOT ((NOT (((vt0.c0) IS FALSE)))))) GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0 UNION SELECT rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM rt0 CROSS JOIN vt0 ON NULL WHERE ((((NOT (((vt0.c0) IS FALSE)))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0;
SELECT rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM rt0 CROSS JOIN vt0 ON NULL GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0;
SELECT ALL rt0.c2 FROM rt0 NOT INDEXED GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING CAST(TOTAL(TOTAL(TOTAL(TOTAL(SUM(rt0.c0))))) AS INTEGER) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (CAST(TOTAL(TOTAL(TOTAL(TOTAL(SUM(rt0.c0))))) AS INTEGER))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((CAST(TOTAL(TOTAL(TOTAL(TOTAL(SUM(rt0.c0))))) AS INTEGER)) ISNULL);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON LIKELIHOOD(DISTINCT (- (rt0.c1)), 0.8122187906386533);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON LIKELIHOOD(DISTINCT (- (rt0.c1)), 0.8122187906386533) WHERE ((NULL IN ())) UNION ALL SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON LIKELIHOOD(DISTINCT (- (rt0.c1)), 0.8122187906386533) WHERE ((NOT ((NULL IN ())))) UNION ALL SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON LIKELIHOOD(DISTINCT (- (rt0.c1)), 0.8122187906386533) WHERE ((((NULL IN ())) ISNULL));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON LIKELIHOOD(DISTINCT (- (rt0.c1)), 0.8122187906386533);
SELECT DISTINCT vt0.c0 FROM rt0, vt0;
SELECT DISTINCT vt0.c0 FROM rt0, vt0 WHERE ((((rt0.c0)) NOT BETWEEN ((((rt0.c2)<>(rt0.c2)))) AND ((((rt0.c0)&(vt0.c0)))))) UNION SELECT DISTINCT vt0.c0 FROM rt0, vt0 WHERE ((NOT ((((rt0.c0)) NOT BETWEEN ((((rt0.c2)<>(rt0.c2)))) AND ((((rt0.c0)&(vt0.c0)))))))) UNION SELECT DISTINCT vt0.c0 FROM rt0, vt0 WHERE ((((((rt0.c0)) NOT BETWEEN ((((rt0.c2)!=(rt0.c2)))) AND ((((rt0.c0)&(vt0.c0)))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM rt0, vt0;
SELECT rt0.c1 FROM vt0, rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM vt0 NOT INDEXED, rt0 WHERE ((((rt0.c1 IN ())) NOTNULL)) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM vt0, rt0 WHERE ((NOT ((((rt0.c1 IN ())) NOTNULL)))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM vt0, rt0 WHERE ((((((rt0.c1 IN ())) NOTNULL)) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM vt0, rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1, vt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c0 COLLATE RTRIM) NOTNULL) GROUP BY rt0.c1, vt0.c0;
SELECT rt0.c1, vt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c0 COLLATE RTRIM) NOTNULL) GROUP BY rt0.c1, vt0.c0 HAVING ((AVG(MIN(rt0.c2))) IS TRUE) UNION ALL SELECT rt0.c1, vt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c0 COLLATE RTRIM) NOTNULL) GROUP BY rt0.c1, vt0.c0 HAVING (NOT (((AVG(MIN(rt0.c2))) IS TRUE))) UNION ALL SELECT ALL rt0.c1, vt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c0 COLLATE RTRIM) NOTNULL) GROUP BY rt0.c1, vt0.c0 HAVING ((((AVG(MIN(rt0.c2))) IS TRUE)) ISNULL);
SELECT ALL * FROM vt0, rt0;
SELECT * FROM vt0, rt0 WHERE (UPPER(rt0.c2)) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE ((NOT (UPPER(rt0.c2)))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE (((UPPER(rt0.c2)) ISNULL));
SELECT ALL * FROM vt0, rt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 NOT INDEXED WHERE (vt0.c0) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2;
SELECT vt0.c0, rt0.c2 FROM rt0, vt0 WHERE (((((rt0.c2 COLLATE BINARY)AND(((rt0.c0) NOT NULL))))OR(-1102468801))) GROUP BY vt0.c0, rt0.c2 UNION SELECT vt0.c0, rt0.c2 FROM rt0, vt0 WHERE ((NOT (((((rt0.c2 COLLATE BINARY)AND(((rt0.c0) NOT NULL))))OR(-1102468801))))) GROUP BY vt0.c0, rt0.c2 UNION SELECT vt0.c0, rt0.c2 FROM rt0, vt0 WHERE (((((((rt0.c2 COLLATE BINARY)AND(((rt0.c0) NOT NULL))))OR(-1102468801))) ISNULL)) GROUP BY vt0.c0, rt0.c2;
SELECT vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(AVG('-1094422726'))) NOTNULL) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((TOTAL(AVG('-1094422726'))) NOTNULL))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((TOTAL(AVG('-1094422726'))) NOTNULL)) ISNULL);
SELECT ALL rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (rt0.c1) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT ALL rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT vt0.c0, rt0.c2, rt0.c0 FROM vt0, rt0;
SELECT DISTINCT vt0.c0, rt0.c2, rt0.c0 FROM vt0, rt0 WHERE (((rt0.c2)LIKE(CAST(rt0.c0 AS BLOB)))) UNION SELECT DISTINCT vt0.c0, rt0.c2, rt0.c0 FROM vt0, rt0 WHERE ((NOT (((rt0.c2)LIKE(CAST(rt0.c0 AS BLOB)))))) UNION SELECT DISTINCT vt0.c0, rt0.c2, rt0.c0 FROM vt0, rt0 WHERE (((((rt0.c2)LIKE(CAST(rt0.c0 AS BLOB)))) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c2, rt0.c0 FROM vt0, rt0;
SELECT vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2;
SELECT vt0.c0, rt0.c2 FROM rt0, vt0 WHERE (((rt0.c1) ISNULL)) GROUP BY vt0.c0, rt0.c2 UNION SELECT ALL vt0.c0, rt0.c2 FROM rt0, vt0 WHERE ((NOT (((rt0.c1) ISNULL)))) GROUP BY vt0.c0, rt0.c2 UNION SELECT vt0.c0, rt0.c2 FROM rt0, vt0 WHERE (((((rt0.c1) ISNULL)) ISNULL)) GROUP BY vt0.c0, rt0.c2;
SELECT vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING x'' UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (x'')) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((x'') ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING x'' UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (x'')) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((x'') ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON ((0x3ad82f50) NOT BETWEEN (((rt0.c0) NOT NULL)) AND ((rt0.c2 IN ())));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON ((0x3ad82f50) NOT BETWEEN (((rt0.c0) NOT NULL)) AND ((rt0.c2 IN ()))) WHERE (CAST(vt0.c0 COLLATE NOCASE AS INTEGER)) UNION ALL SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON ((0X3ad82f50) NOT BETWEEN (((rt0.c0) NOT NULL)) AND ((rt0.c2 IN ()))) WHERE ((NOT (CAST(vt0.c0 COLLATE NOCASE AS INTEGER)))) UNION ALL SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON ((0X3ad82f50) NOT BETWEEN (((rt0.c0) NOT NULL)) AND ((rt0.c2 IN ()))) WHERE (((CAST(vt0.c0 COLLATE NOCASE AS INTEGER)) ISNULL));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON ((0x3ad82f50) NOT BETWEEN (((rt0.c0) NOT NULL)) AND ((rt0.c2 IN ())));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((vt0.c0)>(NULL))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0)>(NULL))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((vt0.c0)>(NULL))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((~ (((vt0.c0) IS FALSE)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((~ (((vt0.c0) IS FALSE)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((~ (((vt0.c0) IS FALSE)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c1, vt0.c0, rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, vt0.c0, rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c0, rt0.c2 HAVING MIN((((vt0.c0, rt0.c0, rt0.c2)) BETWEEN ((MAX(COUNT(rt0.c0)), 0.6724629870245519, AVG(MAX(COUNT(*))))) AND ((MIN(rt0.c0), MIN(MAX(rt0.c0)), rt0.c1)))) UNION ALL SELECT ALL rt0.c1, vt0.c0, rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c0, rt0.c2 HAVING (NOT (MIN((((vt0.c0, rt0.c0, rt0.c2)) BETWEEN ((MAX(COUNT(rt0.c0)), 0.6724629870245519, AVG(MAX(COUNT(*))))) AND ((MIN(rt0.c0), MIN(MAX(rt0.c0)), rt0.c1)))))) UNION ALL SELECT ALL rt0.c1, vt0.c0, rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c0, rt0.c2 HAVING ((MIN((((vt0.c0, rt0.c0, rt0.c2)) BETWEEN ((MAX(COUNT(rt0.c0)), 0.6724629870245519, AVG(MAX(COUNT(*))))) AND ((MIN(rt0.c0), MIN(MAX(rt0.c0)), rt0.c1))))) ISNULL);
SELECT rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM vt0 CROSS JOIN rt0 ON (NOT (1153517723));
SELECT rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM vt0 CROSS JOIN rt0 ON (NOT (1153517723)) WHERE (((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1))) NOT BETWEEN (((((rt0.c1)AND(rt0.c2)))AND(vt0.c0))) AND (((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)))OR(0.376988513694101)))OR(rt0.c2))))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM vt0 CROSS JOIN rt0 ON (NOT (1153517723)) WHERE ((NOT (((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1))) NOT BETWEEN (((((rt0.c1)AND(rt0.c2)))AND(vt0.c0))) AND (((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)))OR(0.376988513694101)))OR(rt0.c2))))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM vt0 CROSS JOIN rt0 ON (NOT (1153517723)) WHERE (((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1))) NOT BETWEEN (((((rt0.c1)AND(rt0.c2)))AND(vt0.c0))) AND (((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)))OR(0.376988513694101)))OR(rt0.c2))))) ISNULL));
SELECT rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM vt0 CROSS JOIN rt0 ON (NOT (1153517723));
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0) IS FALSE)) NOTNULL)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.c0) IS FALSE)) NOTNULL)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0) IS FALSE)) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM vt0, rt0 NOT INDEXED GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM vt0, rt0 WHERE (PRINTF((((vt0.c0)) NOT BETWEEN (('7g9j')) AND ((rt0.c2))), ((rt0.c2)GLOB(rt0.c2)), ((rt0.c0) NOT NULL))) GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM vt0, rt0 WHERE ((NOT (PRINTF((((vt0.c0)) NOT BETWEEN (('7g9j')) AND ((rt0.c2))), ((rt0.c2)GLOB(rt0.c2)), ((rt0.c0) NOT NULL))))) GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM vt0, rt0 WHERE (((PRINTF((((vt0.c0)) NOT BETWEEN (('7g9j')) AND ((rt0.c2))), ((rt0.c2)GLOB(rt0.c2)), ((rt0.c0) NOT NULL))) ISNULL)) GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM vt0, rt0 NOT INDEXED GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c2;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT(((TOTAL(SUM(GROUP_CONCAT(vt0.c0))))<=(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(((TOTAL(SUM(GROUP_CONCAT(vt0.c0))))<=(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(((TOTAL(SUM(GROUP_CONCAT(vt0.c0))))<=(vt0.c0)))) ISNULL);
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON ((vt0.c0 IN (rt0.c0)) IN (((rt0.c1)>(rt0.c0)), ((((vt0.c0)AND(rt0.c0)))OR(NULL))));
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON ((vt0.c0 IN (rt0.c0)) IN (((rt0.c1)>(rt0.c0)), ((((vt0.c0)AND(rt0.c0)))OR(NULL)))) WHERE (((vt0.c0 COLLATE RTRIM)<((rt0.c1 IN ())))) UNION ALL SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON ((vt0.c0 IN (rt0.c0)) IN (((rt0.c1)>(rt0.c0)), ((((vt0.c0)AND(rt0.c0)))OR(NULL)))) WHERE ((NOT (((vt0.c0 COLLATE RTRIM)<((rt0.c1 IN ())))))) UNION ALL SELECT * FROM vt0 FULL OUTER JOIN rt0 ON ((vt0.c0 IN (rt0.c0)) IN (((rt0.c1)>(rt0.c0)), ((((vt0.c0)AND(rt0.c0)))OR(NULL)))) WHERE (((((vt0.c0 COLLATE RTRIM)<((rt0.c1 IN ())))) ISNULL));
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON ((vt0.c0 IN (rt0.c0)) IN (((rt0.c1)>(rt0.c0)), ((((vt0.c0)AND(rt0.c0)))OR(NULL))));
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (UPPER(((rt0.c0)LIKE(rt0.c1)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (UPPER(((rt0.c0)LIKE(rt0.c1)))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((UPPER(((rt0.c0)LIKE(rt0.c1)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0, vt0 WHERE (rt0.c1) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0, vt0 WHERE ((NOT (rt0.c1))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0, vt0 WHERE (((rt0.c1) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((vt0.c0, vt0.c0, MIN(MAX(1771761649)))) NOT BETWEEN ((GROUP_CONCAT(vt0.c0), GROUP_CONCAT(COUNT(*)), COUNT(COUNT(*)))) AND ((vt0.c0, CASE WHEN SUM(vt0.c0) THEN COUNT(COUNT(GROUP_CONCAT(AVG(COUNT(TOTAL(COUNT(MIN(vt0.c0)))))))) ELSE MIN(GROUP_CONCAT(COUNT(AVG(TOTAL(COUNT(vt0.c0)))))) END, ((0xffffffffd725a861)+(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((vt0.c0, vt0.c0, MIN(MAX(1771761649)))) NOT BETWEEN ((GROUP_CONCAT(vt0.c0), GROUP_CONCAT(COUNT(*)), COUNT(COUNT(*)))) AND ((vt0.c0, CASE WHEN SUM(vt0.c0) THEN COUNT(COUNT(GROUP_CONCAT(AVG(COUNT(TOTAL(COUNT(MIN(vt0.c0)))))))) ELSE MIN(GROUP_CONCAT(COUNT(AVG(TOTAL(COUNT(vt0.c0)))))) END, ((0xffffffffd725a861)+(vt0.c0))))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((vt0.c0, vt0.c0, MIN(MAX(1771761649)))) NOT BETWEEN ((GROUP_CONCAT(vt0.c0), GROUP_CONCAT(COUNT(*)), COUNT(COUNT(*)))) AND ((vt0.c0, CASE WHEN SUM(vt0.c0) THEN COUNT(COUNT(GROUP_CONCAT(AVG(COUNT(TOTAL(COUNT(MIN(vt0.c0)))))))) ELSE MIN(GROUP_CONCAT(COUNT(AVG(TOTAL(COUNT(vt0.c0)))))) END, ((0Xffffffffd725a861)+(vt0.c0)))))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)) IN ())) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)) IN ())))) UNION ALL SELECT * FROM rt0 WHERE ((((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)) IN ())) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 END) NOTNULL)) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 END) NOTNULL)))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 END) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT ALL rt0.c1, rt0.c0, vt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON NULL GROUP BY rt0.c1, rt0.c0, vt0.c0;
SELECT rt0.c1, rt0.c0, vt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON NULL WHERE (((ABS(rt0.c0))!=(rt0.c2 COLLATE RTRIM))) GROUP BY rt0.c1, rt0.c0, vt0.c0 UNION SELECT ALL rt0.c1, rt0.c0, vt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON NULL WHERE ((NOT (((ABS(rt0.c0))!=(rt0.c2 COLLATE RTRIM))))) GROUP BY rt0.c1, rt0.c0, vt0.c0 UNION SELECT ALL rt0.c1, rt0.c0, vt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON NULL WHERE (((((ABS(rt0.c0))!=(rt0.c2 COLLATE RTRIM))) ISNULL)) GROUP BY rt0.c1, rt0.c0, vt0.c0;
SELECT ALL rt0.c1, rt0.c0, vt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON NULL GROUP BY rt0.c1, rt0.c0, vt0.c0;
SELECT ALL rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0;
SELECT rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0 HAVING MAX(SUM(x'a784')) UNION ALL SELECT ALL rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0 HAVING (NOT (MAX(SUM(x'a784')))) UNION ALL SELECT rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0 HAVING ((MAX(SUM(x'a784'))) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c0) IS FALSE) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) ELSE vt0.c0 END) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (CASE WHEN ((vt0.c0) IS FALSE) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) ELSE vt0.c0 END))) UNION ALL SELECT ALL * FROM vt0 WHERE (((CASE WHEN ((vt0.c0) IS FALSE) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) ELSE vt0.c0 END) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT rt0.c2, vt0.c0, rt0.c0 FROM rt0, vt0;
SELECT DISTINCT rt0.c2, vt0.c0, rt0.c0 FROM rt0, vt0 WHERE (CASE WHEN (NOT (vt0.c0)) THEN CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE vt0.c0 END ELSE (- (rt0.c1)) END) UNION SELECT DISTINCT rt0.c2, vt0.c0, rt0.c0 FROM rt0, vt0 WHERE ((NOT (CASE WHEN (NOT (vt0.c0)) THEN CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE vt0.c0 END ELSE (- (rt0.c1)) END))) UNION SELECT DISTINCT rt0.c2, vt0.c0, rt0.c0 FROM rt0, vt0 WHERE (((CASE WHEN (NOT (vt0.c0)) THEN CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE vt0.c0 END ELSE (- (rt0.c1)) END) ISNULL));
SELECT DISTINCT rt0.c2, vt0.c0, rt0.c0 FROM rt0, vt0;
SELECT vt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2, rt0.c1;
SELECT ALL vt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0 WHERE (((((rt0.c0)-(rt0.c1))) BETWEEN (rtreenode(rt0.c2, rt0.c2)) AND (((rt0.c0) BETWEEN (rt0.c0) AND (x'40f1'))))) GROUP BY vt0.c0, rt0.c2, rt0.c1 UNION SELECT vt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0 WHERE ((NOT (((((rt0.c0)-(rt0.c1))) BETWEEN (rtreenode(rt0.c2, rt0.c2)) AND (((rt0.c0) BETWEEN (rt0.c0) AND (x'40f1'))))))) GROUP BY vt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL vt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0 WHERE (((((((rt0.c0)-(rt0.c1))) BETWEEN (rtreenode(rt0.c2, rt0.c2)) AND (((rt0.c0) BETWEEN (rt0.c0) AND (x'40f1'))))) ISNULL)) GROUP BY vt0.c0, rt0.c2, rt0.c1;
SELECT vt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2, rt0.c1;
SELECT ALL vt0.c0, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c0;
SELECT vt0.c0, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c0 HAVING AVG(MAX('1202647672')) UNION ALL SELECT ALL vt0.c0, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c0 HAVING (NOT (AVG(MAX('1202647672')))) UNION ALL SELECT ALL vt0.c0, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c0 HAVING ((AVG(MAX('1202647672'))) ISNULL);
SELECT ALL vt0.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0;
SELECT ALL vt0.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0 WHERE (CHANGES()) UNION ALL SELECT vt0.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0 WHERE ((NOT (CHANGES()))) UNION ALL SELECT vt0.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0 WHERE (((CHANGES()) ISNULL));
SELECT ALL vt0.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((((((2.6434211E8)OR(0.34320002067077904)))AND(rt0.c0)))+((x'8111' IN ())))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT (((((((2.6434211E8)OR(0.34320002067077904)))AND(rt0.c0)))+((x'8111' IN ())))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((((((((2.6434211E8)OR(0.34320002067077904)))AND(rt0.c0)))+((x'8111' IN ())))) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((NULL IN ())) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((NULL IN ())))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((NULL IN ())) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c2, vt0.c0, rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, vt0.c0, rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c0, rt0.c1 HAVING (((NOT (GROUP_CONCAT(rt0.c1)))) BETWEEN (COUNT(*)) AND (MAX(MAX(vt0.c0)))) UNION ALL SELECT ALL rt0.c2, vt0.c0, rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c0, rt0.c1 HAVING (NOT ((((NOT (GROUP_CONCAT(rt0.c1)))) BETWEEN (COUNT(*)) AND (MAX(MAX(vt0.c0)))))) UNION ALL SELECT ALL rt0.c2, vt0.c0, rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c0, rt0.c1 HAVING (((((NOT (GROUP_CONCAT(rt0.c1)))) BETWEEN (COUNT(*)) AND (MAX(MAX(vt0.c0))))) ISNULL);
SELECT rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c2)))AND(((rt0.c1)&(NULL)))))AND(((rt0.c1) NOTNULL)))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c2)))AND(((rt0.c1)&(NULL)))))AND(((rt0.c1) NOTNULL)))))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (((((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c2)))AND(((rt0.c1)&(NULL)))))AND(((rt0.c1) NOTNULL)))) ISNULL));
SELECT rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE (rt0.c0) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (IFNULL(DISTINCT (((rt0.c0))<((rt0.c1))), ((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (IFNULL(DISTINCT (((rt0.c0))<((rt0.c1))), ((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((IFNULL(DISTINCT (((rt0.c0))<((rt0.c1))), ((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)))) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2;
SELECT ALL vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2 HAVING ((MAX(vt0.c0)) NOTNULL) UNION ALL SELECT ALL vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2 HAVING (NOT (((MAX(vt0.c0)) NOTNULL))) UNION ALL SELECT ALL vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2 HAVING ((((MAX(vt0.c0)) NOTNULL)) ISNULL);
SELECT ALL vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2;
SELECT ALL vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2 HAVING ((MAX(vt0.c0)) NOTNULL) UNION ALL SELECT ALL vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2 HAVING (NOT (((MAX(vt0.c0)) NOTNULL))) UNION ALL SELECT ALL vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2 HAVING ((((MAX(vt0.c0)) NOTNULL)) ISNULL);
SELECT ALL vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2;
SELECT rt0.c0 FROM rt0;
SELECT ALL rt0.c0 FROM rt0 WHERE (((((rt0.c2)/(rt0.c2)))-(rt0.c1))) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c2)/(rt0.c2)))-(rt0.c1))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE (((((((rt0.c2)/(rt0.c2)))-(rt0.c1))) ISNULL));
SELECT rt0.c0 FROM rt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 NOT INDEXED WHERE (((vt0.c0)GLOB(vt0.c0)) COLLATE BINARY) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0)GLOB(vt0.c0)) COLLATE BINARY))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((vt0.c0)GLOB(vt0.c0)) COLLATE BINARY) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM rt0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM rt0, vt0 WHERE (CASE ((vt0.c0) NOT NULL)  WHEN rt0.c0 COLLATE NOCASE THEN 0.7085874487337004 WHEN rt0.c1 COLLATE RTRIM THEN (rt0.c0 IN (rt0.c1, rt0.c2)) WHEN CAST(rt0.c2 AS NUMERIC) THEN CAST(vt0.c0 AS REAL) ELSE rt0.c0 COLLATE NOCASE END) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM rt0, vt0 WHERE ((NOT (CASE ((vt0.c0) NOT NULL)  WHEN rt0.c0 COLLATE NOCASE THEN 0.7085874487337004 WHEN rt0.c1 COLLATE RTRIM THEN (rt0.c0 IN (rt0.c1, rt0.c2)) WHEN CAST(rt0.c2 AS NUMERIC) THEN CAST(vt0.c0 AS REAL) ELSE rt0.c0 COLLATE NOCASE END))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM rt0, vt0 WHERE (((CASE ((vt0.c0) NOT NULL)  WHEN rt0.c0 COLLATE NOCASE THEN 0.7085874487337004 WHEN rt0.c1 COLLATE RTRIM THEN (rt0.c0 IN (rt0.c1, rt0.c2)) WHEN CAST(rt0.c2 AS NUMERIC) THEN CAST(vt0.c0 AS REAL) ELSE rt0.c0 COLLATE NOCASE END) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM rt0, vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c2 FROM rt0, vt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, vt0 NOT INDEXED GROUP BY rt0.c2 HAVING COUNT(MIN(rt0.c1)) UNION ALL SELECT ALL rt0.c2 FROM rt0, vt0 GROUP BY rt0.c2 HAVING (NOT (COUNT(MIN(rt0.c1)))) UNION ALL SELECT rt0.c2 FROM rt0, vt0 GROUP BY rt0.c2 HAVING ((COUNT(MIN(rt0.c1))) ISNULL);
SELECT * FROM rt0, vt0;
SELECT ALL * FROM rt0, vt0 WHERE (((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) COLLATE BINARY COLLATE NOCASE) UNION ALL SELECT * FROM rt0, vt0 WHERE ((NOT (((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) COLLATE BINARY COLLATE NOCASE))) UNION ALL SELECT * FROM rt0, vt0 WHERE (((((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) COLLATE BINARY COLLATE NOCASE) ISNULL));
SELECT * FROM rt0, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((CAST(vt0.c0 AS TEXT), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0)&(vt0.c0)))) AND (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), (NOT (vt0.c0)), vt0.c0)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((CAST(vt0.c0 AS TEXT), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0)&(vt0.c0)))) AND (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), (NOT (vt0.c0)), vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((CAST(vt0.c0 AS TEXT), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0)&(vt0.c0)))) AND (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), (NOT (vt0.c0)), vt0.c0)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM rt0, vt0 WHERE ((((rt0.c2, rt0.c1, x'')) BETWEEN (((rt0.c2 IN ()), rt0.c0, ((rt0.c2)IS(rt0.c2)))) AND ((LIKELY(DISTINCT rt0.c2), rt0.c0 COLLATE BINARY, rt0.c2 COLLATE BINARY)))) GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM rt0, vt0 WHERE ((NOT ((((rt0.c2, rt0.c1, x'')) BETWEEN (((rt0.c2 IN ()), rt0.c0, ((rt0.c2)IS(rt0.c2)))) AND ((LIKELY(DISTINCT rt0.c2), rt0.c0 COLLATE BINARY, rt0.c2 COLLATE BINARY)))))) GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM rt0, vt0 WHERE ((((((rt0.c2, rt0.c1, x'')) BETWEEN (((rt0.c2 IN ()), rt0.c0, ((rt0.c2)IS(rt0.c2)))) AND ((LIKELY(DISTINCT rt0.c2), rt0.c0 COLLATE BINARY, rt0.c2 COLLATE BINARY)))) ISNULL)) GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING CASE WHEN rt0.c2 COLLATE BINARY THEN rt0.c0 ELSE ((rt0.c0)<<(x'd27e')) END UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (CASE WHEN rt0.c2 COLLATE BINARY THEN rt0.c0 ELSE ((rt0.c0)<<(x'd27e')) END)) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((CASE WHEN rt0.c2 COLLATE BINARY THEN rt0.c0 ELSE ((rt0.c0)<<(x'd27e')) END) ISNULL);
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING CASE WHEN rt0.c2 COLLATE BINARY THEN rt0.c0 ELSE ((rt0.c0)<<(x'd27e')) END UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (CASE WHEN rt0.c2 COLLATE BINARY THEN rt0.c0 ELSE ((rt0.c0)<<(x'd27e')) END)) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((CASE WHEN rt0.c2 COLLATE BINARY THEN rt0.c0 ELSE ((rt0.c0)<<(x'd27e')) END) ISNULL);
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL MIN(CASE ((vt0.c0)<=(rt0.c0))  WHEN (((rt0.c2))<>((rt0.c2))) THEN ((NULL)LIKE(rt0.c2)) ELSE CAST(rt0.c1 AS TEXT) END) FROM vt0, rt0;
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (CASE (- (NULL))  WHEN ((vt0.c0) IS FALSE) THEN ((vt0.c0)<(vt0.c0)) ELSE vt0.c0 END) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CASE (- (NULL))  WHEN ((vt0.c0) IS FALSE) THEN ((vt0.c0)<(vt0.c0)) ELSE vt0.c0 END))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((CASE (- (NULL))  WHEN ((vt0.c0) IS FALSE) THEN ((vt0.c0)<(vt0.c0)) ELSE vt0.c0 END) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON '鹒go}*W';
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON '鹒go}*W' WHERE (0xffffffffcef35c73) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON '鹒go}*W' WHERE ((NOT (0xffffffffcef35c73))) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON '鹒go}*W' WHERE (((0Xffffffffcef35c73) ISNULL));
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON '鹒go}*W';
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((+ (vt0.c0 COLLATE BINARY))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((+ (vt0.c0 COLLATE BINARY))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((+ (vt0.c0 COLLATE BINARY))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING COUNT(*) COLLATE BINARY UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (COUNT(*) COLLATE BINARY)) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((COUNT(*) COLLATE BINARY) ISNULL);
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING COUNT(*) COLLATE BINARY UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (COUNT(*) COLLATE BINARY)) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((COUNT(*) COLLATE BINARY) ISNULL);
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL vt0.c0 FROM vt0, rt0;
SELECT ALL vt0.c0 FROM vt0, rt0 WHERE (((rt0.c2)||(rt0.c0)) COLLATE NOCASE) UNION ALL SELECT ALL vt0.c0 FROM vt0, rt0 WHERE ((NOT (((rt0.c2)||(rt0.c0)) COLLATE NOCASE))) UNION ALL SELECT ALL vt0.c0 FROM vt0, rt0 WHERE (((((rt0.c2)||(rt0.c0)) COLLATE NOCASE) ISNULL));
SELECT ALL vt0.c0 FROM vt0, rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((rt0.c2 IN (rt0.c1)) IN ())) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c2 IN (rt0.c1)) IN ())))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((rt0.c2 IN (rt0.c1)) IN ())) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0, vt0 WHERE (CAST((((vt0.c0))>=((vt0.c0))) AS BLOB)) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0, vt0 WHERE ((NOT (CAST((((vt0.c0))>=((vt0.c0))) AS BLOB)))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0, vt0 WHERE (((CAST((((vt0.c0))>=((vt0.c0))) AS BLOB)) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c2;
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (CASE WHEN TYPEOF(vt0.c0) THEN (vt0.c0 IN ()) ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END END) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN TYPEOF(vt0.c0) THEN (vt0.c0 IN ()) ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END END))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((CASE WHEN TYPEOF(vt0.c0) THEN (vt0.c0 IN ()) ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END END) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt0 ON (((+ (rt0.c2)))||('9<i.1F	7Z'));
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt0 ON (((+ (rt0.c2)))||('9<i.1F	7Z')) WHERE (CAST(vt0.c0 AS INTEGER)) UNION SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt0 ON (((+ (rt0.c2)))||('9<i.1F	7Z')) WHERE ((NOT (CAST(vt0.c0 AS INTEGER)))) UNION SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt0 ON (((+ (rt0.c2)))||('9<i.1F	7Z')) WHERE (((CAST(vt0.c0 AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt0 ON (((+ (rt0.c2)))||('9<i.1F	7Z'));
SELECT ALL rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM vt0, rt0 WHERE (((rt0.c0) BETWEEN (0.3377758428435501) AND (((((rt0.c2)AND(vt0.c0)))OR(rt0.c1))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM vt0, rt0 WHERE ((NOT (((rt0.c0) BETWEEN (0.3377758428435501) AND (((((rt0.c2)AND(vt0.c0)))OR(rt0.c1))))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM vt0, rt0 WHERE (((((rt0.c0) BETWEEN (0.3377758428435501) AND (((((rt0.c2)AND(vt0.c0)))OR(rt0.c1))))) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0, rt0.c2 FROM vt0 FULL OUTER JOIN rt0 ON '1393486145' GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM vt0 FULL OUTER JOIN rt0 ON '1393486145' GROUP BY rt0.c0, rt0.c2 HAVING ((((AVG(MIN(rt0.c2)))OR(MIN(GROUP_CONCAT(vt0.c0)))))OR(GROUP_CONCAT(AVG(COUNT(rt0.c0))))) UNION ALL SELECT rt0.c0, rt0.c2 FROM vt0 FULL OUTER JOIN rt0 ON '1393486145' GROUP BY rt0.c0, rt0.c2 HAVING (NOT (((((AVG(MIN(rt0.c2)))OR(MIN(GROUP_CONCAT(vt0.c0)))))OR(GROUP_CONCAT(AVG(COUNT(rt0.c0))))))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM vt0 FULL OUTER JOIN rt0 ON '1393486145' GROUP BY rt0.c0, rt0.c2 HAVING ((((((AVG(MIN(rt0.c2)))OR(MIN(GROUP_CONCAT(vt0.c0)))))OR(GROUP_CONCAT(AVG(COUNT(rt0.c0)))))) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))) BETWEEN ((+ (0.43098996957016167))) AND ((((rt0.c1)) NOT BETWEEN ((x'')) AND ((rt0.c2)))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))) BETWEEN ((+ (0.43098996957016167))) AND ((((rt0.c1)) NOT BETWEEN ((x'')) AND ((rt0.c2)))))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))) BETWEEN ((+ (0.43098996957016167))) AND ((((rt0.c1)) NOT BETWEEN ((x'')) AND ((rt0.c2)))))) ISNULL));
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (NULL COLLATE RTRIM) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (NULL COLLATE RTRIM))) UNION SELECT DISTINCT * FROM rt0 WHERE (((NULL COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 WHERE ((((rt0.c1)) BETWEEN ((CASE WHEN vt0.c0 THEN rt0.c2 END)) AND ((((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c2)))AND(x'')))OR(rt0.c0)))))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 WHERE ((NOT ((((rt0.c1)) BETWEEN ((CASE WHEN vt0.c0 THEN rt0.c2 END)) AND ((((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c2)))AND(x'')))OR(rt0.c0)))))))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 WHERE ((((((rt0.c1)) BETWEEN ((CASE WHEN vt0.c0 THEN rt0.c2 END)) AND ((((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c2)))AND(x'')))OR(rt0.c0)))))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0 HAVING AVG(TYPEOF(GROUP_CONCAT(vt0.c0))) UNION ALL SELECT ALL rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0 HAVING (NOT (AVG(TYPEOF(GROUP_CONCAT(vt0.c0))))) UNION ALL SELECT rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0 HAVING ((AVG(TYPEOF(GROUP_CONCAT(vt0.c0)))) ISNULL);
SELECT ALL rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (((((((rt0.c0)=(rt0.c2)))OR(CAST(rt0.c1 AS NUMERIC))))OR(rt0.c0 COLLATE BINARY))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((((((rt0.c0)==(rt0.c2)))OR(CAST(rt0.c1 AS NUMERIC))))OR(rt0.c0 COLLATE BINARY))))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((((((((rt0.c0)=(rt0.c2)))OR(CAST(rt0.c1 AS NUMERIC))))OR(rt0.c0 COLLATE BINARY))) ISNULL));
SELECT ALL rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0, vt0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0, vt0 WHERE (((((((((rt0.c0)AND(rt0.c0)))OR(NULL)))AND(((((((((vt0.c0)AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c1)))))AND(((vt0.c0)IS NOT(rt0.c2))))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0, vt0 WHERE ((NOT (((((((((rt0.c0)AND(rt0.c0)))OR(NULL)))AND(((((((((vt0.c0)AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c1)))))AND(((vt0.c0)IS NOT(rt0.c2))))))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0, vt0 WHERE (((((((((((rt0.c0)AND(rt0.c0)))OR(NULL)))AND(((((((((vt0.c0)AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c1)))))AND(((vt0.c0)IS NOT(rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0, vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CAST((NOT (vt0.c0)) AS REAL)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CAST((NOT (vt0.c0)) AS REAL)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((CAST((NOT (vt0.c0)) AS REAL)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (- (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((- (COUNT(*))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((- (COUNT(*)))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (- (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((- (COUNT(*))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((- (COUNT(*)))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) IN ())) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) IN ())))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) IN ())) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT rt0.c0, rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1, vt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0 NOT INDEXED WHERE (((CAST(rt0.c2 AS TEXT)) NOT NULL)) GROUP BY rt0.c0, rt0.c1, vt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0 WHERE ((NOT (((CAST(rt0.c2 AS TEXT)) NOT NULL)))) GROUP BY rt0.c0, rt0.c1, vt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0 WHERE (((((CAST(rt0.c2 AS TEXT)) NOT NULL)) ISNULL)) GROUP BY rt0.c0, rt0.c1, vt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1, vt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING AVG((rt0.c2 IN (vt0.c0, vt0.c0))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (AVG((rt0.c2 IN (vt0.c0, vt0.c0))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((AVG((rt0.c2 IN (vt0.c0, vt0.c0)))) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING AVG((rt0.c2 IN (vt0.c0, vt0.c0))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (AVG((rt0.c2 IN (vt0.c0, vt0.c0))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((AVG((rt0.c2 IN (vt0.c0, vt0.c0)))) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (rt0.c0) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (rt0.c0))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((rt0.c0) ISNULL));
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0;
SELECT DISTINCT rt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0 WHERE (CAST(TRIM(DISTINCT vt0.c0, rt0.c2) AS BLOB)) UNION SELECT DISTINCT rt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0 WHERE ((NOT (CAST(TRIM(DISTINCT vt0.c0, rt0.c2) AS BLOB)))) UNION SELECT DISTINCT rt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0 WHERE (((CAST(TRIM(DISTINCT vt0.c0, rt0.c2) AS BLOB)) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 WHERE ((('1305788812')>=('qL?F2t'))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT ((('1305788812')>=('qL?F2t'))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((((('1305788812')>=('qL?F2t'))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0, rt0.c2, vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c2, vt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c2, vt0.c0, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c0, rt0.c2, vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c2, vt0.c0, rt0.c1 HAVING (NOT ((NOT (COUNT(*))))) UNION ALL SELECT rt0.c0, rt0.c2, vt0.c0, rt0.c1 FROM rt0 NOT INDEXED, vt0 GROUP BY rt0.c0, rt0.c2, vt0.c0, rt0.c1 HAVING (((NOT (COUNT(*)))) ISNULL);
SELECT rt0.c0, rt0.c2, vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c2, vt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c2, vt0.c0, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c0, rt0.c2, vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c2, vt0.c0, rt0.c1 HAVING (NOT ((NOT (COUNT(*))))) UNION ALL SELECT rt0.c0, rt0.c2, vt0.c0, rt0.c1 FROM rt0 NOT INDEXED, vt0 GROUP BY rt0.c0, rt0.c2, vt0.c0, rt0.c1 HAVING (((NOT (COUNT(*)))) ISNULL);
SELECT rt0.c0, rt0.c2, vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c2, vt0.c0, rt0.c1;
SELECT rt0.c0 FROM rt0, vt0;
SELECT ALL rt0.c0 FROM rt0, vt0 WHERE ((((rt0.c2, rt0.c1, vt0.c0)) BETWEEN ((CASE 0.6728854249172648  WHEN rt0.c2 THEN 0.17330923418924948 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE vt0.c0 END, ((rt0.c2) NOT BETWEEN (rt0.c2) AND (1494746241)), ((rt0.c2)<>(rt0.c0)))) AND ((((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)), ((rt0.c1)<<(rt0.c2)), '-816311258')))) UNION ALL SELECT rt0.c0 FROM rt0, vt0 WHERE ((NOT ((((rt0.c2, rt0.c1, vt0.c0)) BETWEEN ((CASE 0.6728854249172648  WHEN rt0.c2 THEN 0.17330923418924948 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE vt0.c0 END, ((rt0.c2) NOT BETWEEN (rt0.c2) AND (1494746241)), ((rt0.c2)!=(rt0.c0)))) AND ((((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)), ((rt0.c1)<<(rt0.c2)), '-816311258')))))) UNION ALL SELECT ALL rt0.c0 FROM rt0, vt0 WHERE ((((((rt0.c2, rt0.c1, vt0.c0)) BETWEEN ((CASE 0.6728854249172648  WHEN rt0.c2 THEN 0.17330923418924948 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE vt0.c0 END, ((rt0.c2) NOT BETWEEN (rt0.c2) AND (1494746241)), ((rt0.c2)<>(rt0.c0)))) AND ((((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)), ((rt0.c1)<<(rt0.c2)), '-816311258')))) ISNULL));
SELECT rt0.c0 FROM rt0, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (UPPER(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (UPPER(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((UPPER(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM vt0 INNER JOIN rt0 ON CASE TRIM(DISTINCT vt0.c0)  WHEN rt0.c1 THEN ((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c0)))OR(vt0.c0)))AND(rt0.c0)) ELSE x'' END GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM vt0 INNER JOIN rt0 ON CASE TRIM(DISTINCT vt0.c0)  WHEN rt0.c1 THEN ((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c0)))OR(vt0.c0)))AND(rt0.c0)) ELSE x'' END WHERE (HEX(DISTINCT ((rt0.c1)=(vt0.c0)))) GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM vt0 INNER JOIN rt0 ON CASE TRIM(DISTINCT vt0.c0)  WHEN rt0.c1 THEN ((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c0)))OR(vt0.c0)))AND(rt0.c0)) ELSE x'' END WHERE ((NOT (HEX(DISTINCT ((rt0.c1)=(vt0.c0)))))) GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM vt0 INNER JOIN rt0 ON CASE TRIM(DISTINCT vt0.c0)  WHEN rt0.c1 THEN ((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c0)))OR(vt0.c0)))AND(rt0.c0)) ELSE x'' END WHERE (((HEX(DISTINCT ((rt0.c1)==(vt0.c0)))) ISNULL)) GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM vt0 INNER JOIN rt0 ON CASE TRIM(DISTINCT vt0.c0)  WHEN rt0.c1 THEN ((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c0)))OR(vt0.c0)))AND(rt0.c0)) ELSE x'' END GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c2;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TOTAL(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TOTAL(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (((((('')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) ISNULL)) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((('')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) ISNULL)))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((((('')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) ISNULL)) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0 CROSS JOIN rt0 ON (CASE vt0.c0  WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 END IN ());
SELECT DISTINCT * FROM vt0 CROSS JOIN rt0 ON (CASE vt0.c0  WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 END IN ()) WHERE (((((-1208482544)|(rt0.c1)))||(((rt0.c1)>=(rt0.c1))))) UNION SELECT DISTINCT * FROM vt0 CROSS JOIN rt0 ON (CASE vt0.c0  WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 END IN ()) WHERE ((NOT (((((-1208482544)|(rt0.c1)))||(((rt0.c1)>=(rt0.c1))))))) UNION SELECT DISTINCT * FROM vt0 CROSS JOIN rt0 ON (CASE vt0.c0  WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 END IN ()) WHERE (((((((-1208482544)|(rt0.c1)))||(((rt0.c1)>=(rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM vt0 CROSS JOIN rt0 ON (CASE vt0.c0  WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 END IN ());
SELECT ALL rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM vt0, rt0 WHERE (CAST(CASE WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN 0x4884763e WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 END AS INTEGER)) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM vt0, rt0 WHERE ((NOT (CAST(CASE WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN 0X4884763e WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 END AS INTEGER)))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM vt0, rt0 WHERE (((CAST(CASE WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN 0X4884763e WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 END AS INTEGER)) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING MAX('') UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (MAX(''))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((MAX('')) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING MAX('') UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (MAX(''))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((MAX('')) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (LIKE(((rt0.c2) ISNULL), ((rt0.c0)OR(rt0.c0)), '0')) UNION ALL SELECT * FROM rt0 WHERE ((NOT (LIKE(((rt0.c2) ISNULL), ((rt0.c0)OR(rt0.c0)), '0')))) UNION ALL SELECT ALL * FROM rt0 WHERE (((LIKE(((rt0.c2) ISNULL), ((rt0.c0)OR(rt0.c0)), '0')) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0 NOT INDEXED, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (((((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)))IS NOT(CASE WHEN 0.7537921377332222 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN NULL ELSE 0.5677857283614262 END))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (((((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)))IS NOT(CASE WHEN 0.7537921377332222 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN NULL ELSE 0.5677857283614262 END))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((((((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)))IS NOT(CASE WHEN 0.7537921377332222 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN NULL ELSE 0.5677857283614262 END))) ISNULL));
SELECT DISTINCT * FROM rt0 NOT INDEXED, vt0;
SELECT ALL rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, vt0 WHERE (((((rt0.c0)OR(rt0.c2)))OR(NULL)) COLLATE NOCASE) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0, vt0 WHERE ((NOT (((((rt0.c0)OR(rt0.c2)))OR(NULL)) COLLATE NOCASE))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0, vt0 WHERE (((((((rt0.c0)OR(rt0.c2)))OR(NULL)) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1;
SELECT ALL vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c0, rt0.c1, rt0.c2;
SELECT ALL vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c0, rt0.c1, rt0.c2 HAVING COUNT(SUM(COUNT(TOTAL(COUNT(*))))) COLLATE BINARY UNION ALL SELECT vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (COUNT(SUM(COUNT(TOTAL(COUNT(*))))) COLLATE BINARY)) UNION ALL SELECT vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c0, rt0.c1, rt0.c2 HAVING ((COUNT(SUM(COUNT(TOTAL(COUNT(*))))) COLLATE BINARY) ISNULL);
SELECT rt0.c1 FROM rt0;
SELECT ALL rt0.c1 FROM rt0 WHERE ((~ (CAST(rt0.c1 AS BLOB)))) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT ((~ (CAST(rt0.c1 AS BLOB)))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE ((((~ (CAST(rt0.c1 AS BLOB)))) ISNULL));
SELECT rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c1) NOTNULL)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c1) NOTNULL)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c1) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c2;
SELECT ALL rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0 WHERE (((((rt0.c1)+(rt0.c2))) IS FALSE)) GROUP BY rt0.c1, vt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0 WHERE ((NOT (((((rt0.c1)+(rt0.c2))) IS FALSE)))) GROUP BY rt0.c1, vt0.c0, rt0.c2 UNION SELECT rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0 WHERE (((((((rt0.c1)+(rt0.c2))) IS FALSE)) ISNULL)) GROUP BY rt0.c1, vt0.c0, rt0.c2;
SELECT ALL rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c2;
SELECT rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0;
SELECT rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0 HAVING NULL UNION ALL SELECT ALL rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0 HAVING (NOT (NULL)) UNION ALL SELECT ALL rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0 HAVING ((NULL) ISNULL);
SELECT rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0;
SELECT rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0 HAVING NULL UNION ALL SELECT ALL rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0 HAVING (NOT (NULL)) UNION ALL SELECT ALL rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0 HAVING ((NULL) ISNULL);
SELECT rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0;
SELECT ALL vt0.c0, rt0.c2 FROM vt0, rt0;
SELECT vt0.c0, rt0.c2 FROM vt0, rt0 WHERE (CAST(-4.82652416E8 AS TEXT)) UNION ALL SELECT ALL vt0.c0, rt0.c2 FROM vt0, rt0 WHERE ((NOT (CAST(-4.82652416E8 AS TEXT)))) UNION ALL SELECT vt0.c0, rt0.c2 FROM vt0, rt0 WHERE (((CAST(-4.82652416E8 AS TEXT)) ISNULL));
SELECT ALL vt0.c0, rt0.c2 FROM vt0, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c0))<>(((((rt0.c1)) BETWEEN ((0.49606918368908814)) AND ((1.929890973E9))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((rt0.c0))!=(((((rt0.c1)) BETWEEN ((0.49606918368908814)) AND ((1.929890973E9))))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c0))!=(((((rt0.c1)) BETWEEN ((0.49606918368908814)) AND ((1.929890973E9))))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (UPPER(vt0.c0 COLLATE NOCASE)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (UPPER(vt0.c0 COLLATE NOCASE)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((UPPER(vt0.c0 COLLATE NOCASE)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c0;
SELECT rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c0 HAVING MAX(AVG(rt0.c1)) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c0 HAVING (NOT (MAX(AVG(rt0.c1)))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c0 HAVING ((MAX(AVG(rt0.c1))) ISNULL);
SELECT ALL * FROM vt0, rt0;
SELECT * FROM vt0, rt0 WHERE (UPPER(((((vt0.c0)AND(rt0.c0)))AND(NULL)))) UNION ALL SELECT * FROM vt0, rt0 WHERE ((NOT (UPPER(((((vt0.c0)AND(rt0.c0)))AND(NULL)))))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE (((UPPER(((((vt0.c0)AND(rt0.c0)))AND(NULL)))) ISNULL));
SELECT ALL * FROM vt0, rt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (TYPEOF(rt0.c0)) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (TYPEOF(rt0.c0)))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((TYPEOF(rt0.c0)) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c2, vt0.c0;
SELECT ALL rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0 WHERE (x'') GROUP BY rt0.c0, rt0.c2, vt0.c0 UNION SELECT ALL rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0 WHERE ((NOT (x''))) GROUP BY rt0.c0, rt0.c2, vt0.c0 UNION SELECT rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0 WHERE (((x'') ISNULL)) GROUP BY rt0.c0, rt0.c2, vt0.c0;
SELECT rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c2, vt0.c0;
SELECT rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, vt0.c0;
SELECT rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, vt0.c0 HAVING COALESCE(CAST(rt0.c1 AS NUMERIC), ((rt0.c2) IS TRUE), ((TOTAL(rt0.c0))IS NOT(TOTAL(6363299))), COUNT(*)) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, vt0.c0 HAVING (NOT (COALESCE(CAST(rt0.c1 AS NUMERIC), ((rt0.c2) IS TRUE), ((TOTAL(rt0.c0))IS NOT(TOTAL(6363299))), COUNT(*)))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, vt0.c0 HAVING ((COALESCE(CAST(rt0.c1 AS NUMERIC), ((rt0.c2) IS TRUE), ((TOTAL(rt0.c0))IS NOT(TOTAL(6363299))), COUNT(*))) ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, vt0.c0;
SELECT rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, vt0.c0 HAVING COALESCE(CAST(rt0.c1 AS NUMERIC), ((rt0.c2) IS TRUE), ((TOTAL(rt0.c0))IS NOT(TOTAL(6363299))), COUNT(*)) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, vt0.c0 HAVING (NOT (COALESCE(CAST(rt0.c1 AS NUMERIC), ((rt0.c2) IS TRUE), ((TOTAL(rt0.c0))IS NOT(TOTAL(6363299))), COUNT(*)))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, vt0.c0 HAVING ((COALESCE(CAST(rt0.c1 AS NUMERIC), ((rt0.c2) IS TRUE), ((TOTAL(rt0.c0))IS NOT(TOTAL(6363299))), COUNT(*))) ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, vt0.c0;
SELECT * FROM vt0, rt0;
SELECT * FROM vt0, rt0 WHERE (rt0.c1) UNION ALL SELECT * FROM vt0, rt0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT * FROM vt0, rt0 WHERE (((rt0.c1) ISNULL));
SELECT * FROM vt0, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CAST(rt0.c2 COLLATE RTRIM AS INTEGER)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CAST(rt0.c2 COLLATE RTRIM AS INTEGER)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CAST(rt0.c2 COLLATE RTRIM AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 WHERE ((('-1317581406') NOT NULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 WHERE ((NOT ((('-1317581406') NOT NULL)))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 WHERE ((((('-1317581406') NOT NULL)) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING TOTAL(COUNT(AVG(COUNT(*)))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (TOTAL(COUNT(AVG(COUNT(*)))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((TOTAL(COUNT(AVG(COUNT(*))))) ISNULL);
SELECT ALL MAX(NULL) FROM vt0, rt0;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (CAST(((rt0.c2)LIKE(rt0.c2)) AS REAL)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CAST(((rt0.c2)LIKE(rt0.c2)) AS REAL)))) UNION ALL SELECT * FROM rt0 WHERE (((CAST(((rt0.c2)LIKE(rt0.c2)) AS REAL)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM vt0, rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM vt0, rt0 WHERE (CASE (- (vt0.c0))  WHEN (NOT (vt0.c0)) THEN (((rt0.c1, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c0, vt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c2))) ELSE ((vt0.c0)!=(vt0.c0)) END) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM vt0, rt0 WHERE ((NOT (CASE (- (vt0.c0))  WHEN (NOT (vt0.c0)) THEN (((rt0.c1, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c0, vt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c2))) ELSE ((vt0.c0)<>(vt0.c0)) END))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM vt0, rt0 WHERE (((CASE (- (vt0.c0))  WHEN (NOT (vt0.c0)) THEN (((rt0.c1, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c0, vt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c2))) ELSE ((vt0.c0)!=(vt0.c0)) END) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM vt0, rt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((0.44813296164178573)) AND ((LENGTH(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN ((0.44813296164178573)) AND ((LENGTH(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((0.44813296164178573)) AND ((LENGTH(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (CAST(MAX(AVG(COUNT(vt0.c0))) AS INTEGER) IN ()) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((CAST(MAX(AVG(COUNT(vt0.c0))) AS INTEGER) IN ()))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((CAST(MAX(AVG(COUNT(vt0.c0))) AS INTEGER) IN ())) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (CAST(MAX(AVG(COUNT(vt0.c0))) AS INTEGER) IN ()) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((CAST(MAX(AVG(COUNT(vt0.c0))) AS INTEGER) IN ()))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((CAST(MAX(AVG(COUNT(vt0.c0))) AS INTEGER) IN ())) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c0, vt0.c0 FROM rt0, vt0;
SELECT rt0.c0, vt0.c0 FROM rt0, vt0 WHERE ((- (((((rt0.c1)AND(rt0.c0)))AND(rt0.c2))))) UNION ALL SELECT rt0.c0, vt0.c0 FROM rt0, vt0 WHERE ((NOT ((- (((((rt0.c1)AND(rt0.c0)))AND(rt0.c2))))))) UNION ALL SELECT rt0.c0, vt0.c0 FROM rt0, vt0 WHERE ((((- (((((rt0.c1)AND(rt0.c0)))AND(rt0.c2))))) ISNULL));
SELECT ALL rt0.c0, vt0.c0 FROM rt0, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0))<((vt0.c0)))))>((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((((vt0.c0))<((vt0.c0)))))>((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((((vt0.c0))<((vt0.c0)))))>((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0, vt0 WHERE (((rt0.c1) NOT BETWEEN (rt0.c1 COLLATE NOCASE) AND ((rt0.c1 IN ())))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0, vt0 WHERE ((NOT (((rt0.c1) NOT BETWEEN (rt0.c1 COLLATE NOCASE) AND ((rt0.c1 IN ())))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0, vt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c1 COLLATE NOCASE) AND ((rt0.c1 IN ())))) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING NULL UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (NULL)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((NULL) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING NULL UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (NULL)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((NULL) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM vt0, rt0;
SELECT * FROM vt0, rt0 WHERE (((rt0.c2 COLLATE BINARY)<((+ (vt0.c0))))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE ((NOT (((rt0.c2 COLLATE BINARY)<((+ (vt0.c0))))))) UNION ALL SELECT * FROM vt0, rt0 WHERE (((((rt0.c2 COLLATE BINARY)<((+ (vt0.c0))))) ISNULL));
SELECT ALL * FROM vt0, rt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) NOT BETWEEN (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) AND (vt0.c0))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) NOT BETWEEN (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) AND (vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) NOT BETWEEN (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) AND (vt0.c0))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (CAST((rt0.c1 IN (rt0.c1)) AS NUMERIC)) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (CAST((rt0.c1 IN (rt0.c1)) AS NUMERIC)))) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (((CAST((rt0.c1 IN (rt0.c1)) AS NUMERIC)) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((((((((AVG(GROUP_CONCAT(rt0.c1)))AND(LENGTH(rt0.c1))))AND(AVG(COUNT(*)))))AND(((MAX(COUNT(rt0.c1))) NOT NULL))))AND(COUNT(*))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (((((((((AVG(GROUP_CONCAT(rt0.c1)))AND(LENGTH(rt0.c1))))AND(AVG(COUNT(*)))))AND(((MAX(COUNT(rt0.c1))) NOT NULL))))AND(COUNT(*))))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((((((((((AVG(GROUP_CONCAT(rt0.c1)))AND(LENGTH(rt0.c1))))AND(AVG(COUNT(*)))))AND(((MAX(COUNT(rt0.c1))) NOT NULL))))AND(COUNT(*)))) ISNULL);
SELECT ALL * FROM rt0, vt0;
SELECT * FROM rt0, vt0 WHERE (((((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (rt0.c1))) UNION ALL SELECT * FROM rt0, vt0 WHERE ((NOT (((((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (rt0.c1))))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE (((((((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (rt0.c1))) ISNULL));
SELECT ALL * FROM rt0, vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((+ (vt0.c0))) NOT BETWEEN (((vt0.c0) ISNULL)) AND ((NULL IN ())))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((((+ (vt0.c0))) NOT BETWEEN (((vt0.c0) ISNULL)) AND ((NULL IN ())))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((+ (vt0.c0))) NOT BETWEEN (((vt0.c0) ISNULL)) AND ((NULL IN ())))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((((((((((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))OR(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(0xfffffffff24bc70a)))))OR(CAST(vt0.c0 AS TEXT))))AND(vt0.c0)))OR(x'ce32d82b')))AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))OR((- (vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((((((((((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))OR(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(0Xfffffffff24bc70a)))))OR(CAST(vt0.c0 AS TEXT))))AND(vt0.c0)))OR(x'ce32d82b')))AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))OR((- (vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((((((((((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))OR(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(0Xfffffffff24bc70a)))))OR(CAST(vt0.c0 AS TEXT))))AND(vt0.c0)))OR(x'ce32d82b')))AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))OR((- (vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((('}Sg'))<((('-383250419' IN ())))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (((('}Sg'))<((('-383250419' IN ())))))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((((('}Sg'))<((('-383250419' IN ()))))) ISNULL);
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((('}Sg'))<((('-383250419' IN ())))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (((('}Sg'))<((('-383250419' IN ())))))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((((('}Sg'))<((('-383250419' IN ()))))) ISNULL);
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (SQLITE_VERSION()) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (SQLITE_VERSION()))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (((SQLITE_VERSION()) ISNULL));
SELECT ALL rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (((+ (vt0.c0)) IN (CAST(rt0.c2 AS INTEGER)))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (((+ (vt0.c0)) IN (CAST(rt0.c2 AS INTEGER)))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((((+ (vt0.c0)) IN (CAST(rt0.c2 AS INTEGER)))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT ALL vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, rt0 WHERE ((NOT ((((('DEd!yU}_Q')OR(rt0.c2)))AND(rt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, rt0 WHERE ((NOT ((NOT ((((('DEd!yU}_Q')OR(rt0.c2)))AND(rt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, rt0 WHERE ((((NOT ((((('DEd!yU}_Q')OR(rt0.c2)))AND(rt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0;
SELECT ALL rt0.c2 FROM rt0, vt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0, vt0 GROUP BY rt0.c2 HAVING ((((((AVG(GROUP_CONCAT(MAX(COUNT(*)))))/(vt0.c0)))OR((- (rt0.c1)))))OR(((((((((rt0.c0)OR(rt0.c0)))AND(AVG(x''))))AND(COUNT(*))))OR(NULL)))) UNION ALL SELECT ALL rt0.c2 FROM rt0, vt0 GROUP BY rt0.c2 HAVING (NOT (((((((AVG(GROUP_CONCAT(MAX(COUNT(*)))))/(vt0.c0)))OR((- (rt0.c1)))))OR(((((((((rt0.c0)OR(rt0.c0)))AND(AVG(x''))))AND(COUNT(*))))OR(NULL)))))) UNION ALL SELECT ALL rt0.c2 FROM rt0, vt0 GROUP BY rt0.c2 HAVING ((((((((AVG(GROUP_CONCAT(MAX(COUNT(*)))))/(vt0.c0)))OR((- (rt0.c1)))))OR(((((((((rt0.c0)OR(rt0.c0)))AND(AVG(x''))))AND(COUNT(*))))OR(NULL))))) ISNULL);
SELECT ALL vt0.c0, rt0.c2 FROM vt0, rt0;
SELECT ALL vt0.c0, rt0.c2 FROM vt0, rt0 WHERE (CAST(rt0.c0 AS INTEGER)) UNION ALL SELECT ALL vt0.c0, rt0.c2 FROM vt0, rt0 WHERE ((NOT (CAST(rt0.c0 AS INTEGER)))) UNION ALL SELECT ALL vt0.c0, rt0.c2 FROM vt0, rt0 WHERE (((CAST(rt0.c0 AS INTEGER)) ISNULL));
SELECT ALL vt0.c0, rt0.c2 FROM vt0, rt0;
SELECT DISTINCT rt0.c0 FROM rt0, vt0;
SELECT DISTINCT rt0.c0 FROM rt0, vt0 WHERE ((((rt0.c0 IN ())) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (TRIM(DISTINCT vt0.c0)))) UNION SELECT DISTINCT rt0.c0 FROM rt0, vt0 WHERE ((NOT ((((rt0.c0 IN ())) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (TRIM(DISTINCT vt0.c0)))))) UNION SELECT DISTINCT rt0.c0 FROM rt0, vt0 WHERE ((((((rt0.c0 IN ())) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (TRIM(DISTINCT vt0.c0)))) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0, vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((CAST(vt0.c0 AS NUMERIC) IN ())) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((CAST(vt0.c0 AS NUMERIC) IN ())))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((CAST(vt0.c0 AS NUMERIC) IN ())) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2 HAVING GROUP_CONCAT(SUM(vt0.c0)) UNION ALL SELECT rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2 HAVING (NOT (GROUP_CONCAT(SUM(vt0.c0)))) UNION ALL SELECT ALL rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2 HAVING ((GROUP_CONCAT(SUM(vt0.c0))) ISNULL);
SELECT ALL rt0.c1 FROM rt0;
SELECT rt0.c1 FROM rt0 WHERE (((((rt0.c1)=(rt0.c0))) BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))) AND ((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c1)==(rt0.c0))) BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))) AND ((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))))))) UNION ALL SELECT rt0.c1 FROM rt0 WHERE (((((((rt0.c1)=(rt0.c0))) BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))) AND ((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))))) ISNULL));
SELECT ALL rt0.c1 FROM rt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((0.9663780017104193 COLLATE RTRIM IN ())) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((0.9663780017104193 COLLATE RTRIM IN ())))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((0.9663780017104193 COLLATE RTRIM IN ())) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT rt0.c2 FROM rt0, vt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0, vt0 WHERE (((((((((((']Ho	*')OR(rt0.c2)))AND(vt0.c0)))AND(vt0.c0)))AND(rt0.c0))) BETWEEN (CAST(vt0.c0 AS REAL)) AND (CASE vt0.c0  WHEN vt0.c0 THEN rt0.c0 END))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0, vt0 WHERE ((NOT (((((((((((']Ho	*')OR(rt0.c2)))AND(vt0.c0)))AND(vt0.c0)))AND(rt0.c0))) BETWEEN (CAST(vt0.c0 AS REAL)) AND (CASE vt0.c0  WHEN vt0.c0 THEN rt0.c0 END))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0, vt0 WHERE (((((((((((((']Ho	*')OR(rt0.c2)))AND(vt0.c0)))AND(vt0.c0)))AND(rt0.c0))) BETWEEN (CAST(vt0.c0 AS REAL)) AND (CASE vt0.c0  WHEN vt0.c0 THEN rt0.c0 END))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, vt0 GROUP BY rt0.c2;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CAST(GLOB(vt0.c0, vt0.c0) AS BLOB) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CAST(GLOB(vt0.c0, vt0.c0) AS BLOB))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CAST(GLOB(vt0.c0, vt0.c0) AS BLOB)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CAST(GLOB(vt0.c0, vt0.c0) AS BLOB) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CAST(GLOB(vt0.c0, vt0.c0) AS BLOB))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CAST(GLOB(vt0.c0, vt0.c0) AS BLOB)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM rt0, vt0;
SELECT ALL * FROM rt0, vt0 WHERE (((((vt0.c0)<=(rt0.c1)))%(((((rt0.c0)OR(rt0.c0)))AND(vt0.c0))))) UNION ALL SELECT * FROM rt0, vt0 WHERE ((NOT (((((vt0.c0)<=(rt0.c1)))%(((((rt0.c0)OR(rt0.c0)))AND(vt0.c0))))))) UNION ALL SELECT * FROM rt0, vt0 WHERE (((((((vt0.c0)<=(rt0.c1)))%(((((rt0.c0)OR(rt0.c0)))AND(vt0.c0))))) ISNULL));
SELECT ALL * FROM rt0, vt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 NOT INDEXED, vt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0, vt0 WHERE (((((NULL)OR(rt0.c1)))AND(x'')) COLLATE RTRIM) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0, vt0 WHERE ((NOT (((((NULL)OR(rt0.c1)))AND(x'')) COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0, vt0 WHERE (((((((NULL)OR(rt0.c1)))AND(x'')) COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 NOT INDEXED, vt0;
SELECT ALL rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM vt0, rt0 WHERE (((TRIM(rt0.c1)) IS FALSE)) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM vt0, rt0 WHERE ((NOT (((TRIM(rt0.c1)) IS FALSE)))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM vt0, rt0 WHERE (((((TRIM(rt0.c1)) IS FALSE)) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0;
SELECT ALL vt0.c0, rt0.c0, rt0.c2, rt0.c1 FROM vt0 INNER JOIN rt0 ON rt0.c0 GROUP BY vt0.c0, rt0.c0, rt0.c2, rt0.c1;
SELECT vt0.c0, rt0.c0, rt0.c2, rt0.c1 FROM vt0 INNER JOIN rt0 ON rt0.c0 GROUP BY vt0.c0, rt0.c0, rt0.c2, rt0.c1 HAVING GROUP_CONCAT(MAX(AVG(GROUP_CONCAT(vt0.c0)))) UNION ALL SELECT vt0.c0, rt0.c0, rt0.c2, rt0.c1 FROM vt0 INNER JOIN rt0 ON rt0.c0 GROUP BY vt0.c0, rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (GROUP_CONCAT(MAX(AVG(GROUP_CONCAT(vt0.c0)))))) UNION ALL SELECT ALL vt0.c0, rt0.c0, rt0.c2, rt0.c1 FROM vt0 INNER JOIN rt0 ON rt0.c0 GROUP BY vt0.c0, rt0.c0, rt0.c2, rt0.c1 HAVING ((GROUP_CONCAT(MAX(AVG(GROUP_CONCAT(vt0.c0))))) ISNULL);
SELECT ALL SUM((((('', '', rt0.c2)) BETWEEN ((rt0.c2, rt0.c1, rt0.c1)) AND ((rt0.c2, rt0.c2, rt0.c2))) IN (((rt0.c2) NOT NULL)))) FROM rt0;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE ((vt0.c0 IN (CAST(vt0.c0 AS REAL)))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((vt0.c0 IN (CAST(vt0.c0 AS REAL)))))) UNION ALL SELECT * FROM vt0 WHERE ((((vt0.c0 IN (CAST(vt0.c0 AS REAL)))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0 NOT INDEXED, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (((rt0.c2 COLLATE BINARY)=(((((rt0.c0)AND(rt0.c2)))OR(x''))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (((rt0.c2 COLLATE BINARY)==(((((rt0.c0)AND(rt0.c2)))OR(x''))))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((((rt0.c2 COLLATE BINARY)==(((((rt0.c0)AND(rt0.c2)))OR(x''))))) ISNULL));
SELECT DISTINCT * FROM vt0 NOT INDEXED, rt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0) NOTNULL)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0) NOTNULL)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0) NOTNULL)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c2, rt0.c1, vt0.c0, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, vt0.c0, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, vt0.c0, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, vt0.c0, rt0.c0 HAVING (TOTAL(rt0.c2) IN (LTRIM(TOTAL(MAX('914069227')), vt0.c0))) UNION ALL SELECT rt0.c2, rt0.c1, vt0.c0, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, vt0.c0, rt0.c0 HAVING (NOT ((TOTAL(rt0.c2) IN (LTRIM(TOTAL(MAX('914069227')), vt0.c0))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, vt0.c0, rt0.c0 FROM rt0, vt0 NOT INDEXED GROUP BY rt0.c2, rt0.c1, vt0.c0, rt0.c0 HAVING (((TOTAL(rt0.c2) IN (LTRIM(TOTAL(MAX('914069227')), vt0.c0)))) ISNULL);
SELECT ALL * FROM rt0, vt0;
SELECT * FROM rt0, vt0 WHERE ((((((vt0.c0)||(rt0.c2))))>((((rt0.c0)>>(rt0.c2)))))) UNION ALL SELECT * FROM rt0, vt0 WHERE ((NOT ((((((vt0.c0)||(rt0.c2))))>((((rt0.c0)>>(rt0.c2)))))))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((((((((vt0.c0)||(rt0.c2))))>((((rt0.c0)>>(rt0.c2)))))) ISNULL));
SELECT ALL * FROM rt0, vt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM vt0, rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM vt0, rt0 WHERE (((((HEX(DISTINCT 'z'))AND(((rt0.c0)>>(NULL)))))OR(((rt0.c0)>>(rt0.c0))))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM vt0, rt0 WHERE ((NOT (((((HEX(DISTINCT 'z'))AND(((rt0.c0)>>(NULL)))))OR(((rt0.c0)>>(rt0.c0))))))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM vt0, rt0 WHERE (((((((HEX(DISTINCT 'z'))AND(((rt0.c0)>>(NULL)))))OR(((rt0.c0)>>(rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM vt0, rt0;
SELECT ALL rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, vt0 WHERE ((+ (vt0.c0)) COLLATE BINARY) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0, vt0 WHERE ((NOT ((+ (vt0.c0)) COLLATE BINARY))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0, vt0 WHERE ((((+ (vt0.c0)) COLLATE BINARY) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX(SUM(vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(SUM(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(SUM(vt0.c0))) ISNULL);
SELECT ALL * FROM rt0 NATURAL JOIN vt0;
SELECT * FROM rt0 NATURAL JOIN vt0 WHERE (((((((vt0.c0)>(rt0.c1)))AND(rt0.c0 COLLATE NOCASE)))OR(MIN(vt0.c0, rt0.c0)))) UNION ALL SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE ((NOT (((((((vt0.c0)>(rt0.c1)))AND(rt0.c0 COLLATE NOCASE)))OR(MIN(vt0.c0, rt0.c0)))))) UNION ALL SELECT * FROM rt0 NATURAL JOIN vt0 WHERE (((((((((vt0.c0)>(rt0.c1)))AND(rt0.c0 COLLATE NOCASE)))OR(MIN(vt0.c0, rt0.c0)))) ISNULL));
SELECT ALL * FROM rt0 NATURAL JOIN vt0;
SELECT DISTINCT rt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON load_extension(vt0.c0) COLLATE NOCASE;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(ABS(vt0.c0)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(ABS(vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(ABS(vt0.c0)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING TOTAL(AVG(x'')) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (TOTAL(AVG(x'')))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((TOTAL(AVG(x''))) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((0.664764719717964)<=(x''))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((0.664764719717964)<=(x''))))) UNION ALL SELECT * FROM vt0 WHERE (((((0.664764719717964)<=(x''))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT rt0.c1, vt0.c0, rt0.c0 FROM rt0, vt0;
SELECT DISTINCT rt0.c1, vt0.c0, rt0.c0 FROM rt0, vt0 WHERE ((((- (vt0.c0))) NOT NULL)) UNION SELECT DISTINCT rt0.c1, vt0.c0, rt0.c0 FROM rt0, vt0 WHERE ((NOT ((((- (vt0.c0))) NOT NULL)))) UNION SELECT DISTINCT rt0.c1, vt0.c0, rt0.c0 FROM rt0, vt0 WHERE ((((((- (vt0.c0))) NOT NULL)) ISNULL));
SELECT DISTINCT rt0.c1, vt0.c0, rt0.c0 FROM rt0, vt0;
SELECT rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, vt0 WHERE ('k.T') GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0, vt0 WHERE ((NOT ('k.T'))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0, vt0 WHERE ((('k.T') ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0;
