-- Time: 2024/06/12 04:00:05
-- Database: database72
-- Database version: 3.40.0
-- seed value: 1974176772
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-8'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED, c1 UNINDEXED, c2); -- 1ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0 UNINDEXED, tokenize = "porter ascii", prefix = 220); -- 1ms;
ANALYZE; -- 1ms;
ANALYZE main; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
COMMIT TRANSACTION; -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 4); -- 0ms;
INSERT OR ABORT INTO vt1(c0) VALUES ('T0᫟HYW>/'''), (NULL), (NULL); -- 1ms;
INSERT OR IGNORE INTO vt0(c2, c0) VALUES (NULL, NULL); -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR ROLLBACK vt0 SET c2=NULL, c0='' WHERE CAST(vt0.c1 COLLATE BINARY AS INTEGER); -- 0ms;
INSERT OR REPLACE INTO vt1(c0) VALUES (NULL); -- 0ms;
DROP TABLE vt0; -- 0ms;
INSERT OR REPLACE INTO vt1 VALUES ('1120675686'); -- 0ms;
ANALYZE sqlite_master; -- 1ms;
INSERT OR IGNORE INTO vt1 VALUES (-1401685419), (''), (''); -- 0ms;
UPDATE OR IGNORE vt1 SET (c0, c0)=(0.2215613419690179, '-50259233') WHERE ABS(vt1.c0 COLLATE BINARY); -- 1ms;
PRAGMA main.busy_timeout; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE vt1 SET c0=0x15a0b43 WHERE ((((vt1.c0)<(vt1.c0))) NOT BETWEEN (((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))) AND ((+ (vt1.c0)))); -- 4ms;
INSERT INTO vt1(vt1) VALUES('merge=-802090678,14');\n; -- 0ms;
INSERT INTO vt1(vt1) VALUES('automerge=8'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (x'4740'); -- 1ms;
END TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (0.9628510697775235); -- 0ms;
INSERT OR REPLACE INTO vt1(c0) VALUES ('1120675686'); -- 1ms;
INSERT OR ABORT INTO vt1 VALUES ('Y突ୃy'), (-5.0259233E7), (NULL); -- 0ms;
VACUUM main; -- 1ms;
INSERT OR IGNORE INTO vt1 VALUES (2.2678339E7); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 0); -- 0ms;
UPDATE vt1 SET c0=0X42cc2766; -- 0ms;
UPDATE vt1 SET c0=0.8348857458214134; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (x''); -- 0ms;
UPDATE OR IGNORE vt1 SET (c0)=(0.8060116801085192) WHERE (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) BETWEEN (((((x'')AND(vt1.c0)))AND(vt1.c0))) AND (vt1.c0)); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
VACUUM temp; -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
END TRANSACTION; -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 9); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 2033368933); -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=1831904610,2');\n; -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=-154786204,13');\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('automerge=3'); -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', 766486837);\n; -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt1 SET c0=NULL, c0=NULL WHERE ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) IS TRUE); -- 0ms;
UPDATE OR IGNORE vt1 SET c0=NULL, c0=x'4c09'; -- 1ms;
COMMIT; -- 0ms;
ANALYZE; -- 1ms;
PRAGMA main.threads; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (x''), (x''), ('S_'); -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (0X4bfdfaf3); -- 0ms;
UPDATE vt1 SET (c0, c0)=(0.6122675557675037, NULL); -- 0ms;
ROLLBACK TRANSACTION; -- 4ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=1831904610,9');\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '57223'); -- 1ms;
INSERT OR ABORT INTO vt1(c0) VALUES ('-1401685419'), (NULL), ('608159118'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 4); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', 1173742877);\n; -- 0ms;
END TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.8374853920164277), ('-829698215'), (x''); -- 0ms;
ANALYZE main; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', 441886290);\n; -- 0ms;
INSERT OR ABORT INTO vt1(c0) VALUES (0.948157231879144), ('-1401685419'), ('s_'); -- 4ms;
INSERT OR IGNORE INTO vt1 VALUES (0.5514846837511403); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER(((NULL) ISNULL)); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 2037139271); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '55538'); -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (x'd979'); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt1 SET (c0, c0)=(0.925250274190521, 0x3e7ee1ab) WHERE (((vt1.c0)<(0.2215613419690179)) IN ()); -- 0ms;
PRAGMA shrink_memory; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (766486837); -- 0ms;
PRAGMA temp.checkpoint_fullfsync = true; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1350500842);\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 1ms;
PRAGMA main.default_cache_size = 22678339; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(x'') WHERE vt0.c0; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
ANALYZE; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 1ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT vt0.c0 FROM vt0, vt1;
SELECT vt0.c0 FROM vt0, vt1 WHERE (CAST((((vt0.c0))<>((vt0.c0))) AS TEXT)) UNION ALL SELECT ALL vt0.c0 FROM vt0, vt1 WHERE ((NOT (CAST((((vt0.c0))<>((vt0.c0))) AS TEXT)))) UNION ALL SELECT vt0.c0 FROM vt0, vt1 WHERE (((CAST((((vt0.c0))<>((vt0.c0))) AS TEXT)) ISNULL));
SELECT vt0.c0 FROM vt0, vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((('<ꤵcꙒ!pEQ')>(vt1.c0)), (((vt1.c0))>((vt1.c0))), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))>=((((NULL)IS NOT(vt1.c0)), CASE vt1.c0  WHEN x'' THEN vt1.c0 ELSE vt1.c0 END, (vt1.c0 IN ()))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((((('<ꤵcꙒ!pEQ')>(vt1.c0)), (((vt1.c0))>((vt1.c0))), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))>=((((NULL)IS NOT(vt1.c0)), CASE vt1.c0  WHEN x'' THEN vt1.c0 ELSE vt1.c0 END, (vt1.c0 IN ()))))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((((('<ꤵcꙒ!pEQ')>(vt1.c0)), (((vt1.c0))>((vt1.c0))), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))>=((((NULL)IS NOT(vt1.c0)), CASE vt1.c0  WHEN x'' THEN vt1.c0 ELSE vt1.c0 END, (vt1.c0 IN ()))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN ((+ (vt1.c0))) AND ((((NULL, x'', vt1.c0)) BETWEEN ((vt0.c0, vt0.c0, 1.173742877E9)) AND ((vt1.c0, vt1.c0, vt0.c0)))))) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((NOT (((((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN ((+ (vt1.c0))) AND ((((NULL, x'', vt1.c0)) BETWEEN ((vt0.c0, vt0.c0, 1.173742877E9)) AND ((vt1.c0, vt1.c0, vt0.c0)))))))) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((((((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN ((+ (vt1.c0))) AND ((((NULL, x'', vt1.c0)) BETWEEN ((vt0.c0, vt0.c0, 1.173742877E9)) AND ((vt1.c0, vt1.c0, vt0.c0)))))) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1 NATURAL JOIN vt0 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1 NATURAL JOIN vt0 GROUP BY vt0.c0, vt1.c0 HAVING MIN(CASE WHEN vt0.c0 THEN vt0.c0 END) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt1 NATURAL JOIN vt0 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (MIN(CASE WHEN vt0.c0 THEN vt0.c0 END))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt1 NATURAL JOIN vt0 GROUP BY vt0.c0, vt1.c0 HAVING ((MIN(CASE WHEN vt0.c0 THEN vt0.c0 END)) ISNULL);
SELECT ALL vt0.c0, vt1.c0 FROM vt1 NATURAL JOIN vt0 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1 NATURAL JOIN vt0 GROUP BY vt0.c0, vt1.c0 HAVING MIN(CASE WHEN vt0.c0 THEN vt0.c0 END) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt1 NATURAL JOIN vt0 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (MIN(CASE WHEN vt0.c0 THEN vt0.c0 END))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt1 NATURAL JOIN vt0 GROUP BY vt0.c0, vt1.c0 HAVING ((MIN(CASE WHEN vt0.c0 THEN vt0.c0 END)) ISNULL);
SELECT ALL vt0.c0, vt1.c0 FROM vt1 NATURAL JOIN vt0 GROUP BY vt0.c0, vt1.c0;
SELECT * FROM vt0, vt1;
SELECT * FROM vt0, vt1 WHERE (vt0.c0) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE ((NOT (vt0.c0))) UNION ALL SELECT * FROM vt0, vt1 WHERE (((vt0.c0) ISNULL));
SELECT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (vt1.c0) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT * FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((- (load_extension(x'', x'')))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((- (load_extension(x'', x'')))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((- (load_extension(x'', x'')))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING vt1.c0 UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (vt1.c0)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((vt1.c0) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING vt1.c0 UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (vt1.c0)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((vt1.c0) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c0 FROM vt0, vt1;
SELECT ALL vt0.c0 FROM vt0, vt1 WHERE (((x'')IS NOT(0.5547441107659996))) UNION ALL SELECT vt0.c0 FROM vt0, vt1 WHERE ((NOT (((x'')IS NOT(0.5547441107659996))))) UNION ALL SELECT vt0.c0 FROM vt0, vt1 WHERE (((((x'')IS NOT(0.5547441107659996))) ISNULL));
SELECT ALL vt0.c0 FROM vt0, vt1;
SELECT DISTINCT vt0.c0 FROM vt1, vt0;
SELECT DISTINCT vt0.c0 FROM vt1, vt0 WHERE (vt0.c0) UNION SELECT DISTINCT vt0.c0 FROM vt1, vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.c0 FROM vt1, vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt1, vt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((HEX(vt1.c0), NULL, (- (vt1.c0)))) AND ((LIKELY(vt1.c0), (((vt1.c0, vt1.c0, vt1.c0))<>((vt1.c0, vt1.c0, vt1.c0))), CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((HEX(vt1.c0), NULL, (- (vt1.c0)))) AND ((LIKELY(vt1.c0), (((vt1.c0, vt1.c0, vt1.c0))!=((vt1.c0, vt1.c0, vt1.c0))), CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((HEX(vt1.c0), NULL, (- (vt1.c0)))) AND ((LIKELY(vt1.c0), (((vt1.c0, vt1.c0, vt1.c0))<>((vt1.c0, vt1.c0, vt1.c0))), CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING ((COUNT(*) IN ()) IN ()) UNION ALL SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING (NOT (((COUNT(*) IN ()) IN ()))) UNION ALL SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING ((((COUNT(*) IN ()) IN ())) ISNULL);
SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING ((COUNT(*) IN ()) IN ()) UNION ALL SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING (NOT (((COUNT(*) IN ()) IN ()))) UNION ALL SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING ((((COUNT(*) IN ()) IN ())) ISNULL);
SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (((((((((((vt1.c0)OR(vt1.c0)))OR(NULL)))OR(vt1.c0)))OR(vt1.c0)))GLOB(((vt1.c0) BETWEEN (vt1.c0) AND ('1048502699'))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((((((((vt1.c0)OR(vt1.c0)))OR(NULL)))OR(vt1.c0)))OR(vt1.c0)))GLOB(((vt1.c0) BETWEEN (vt1.c0) AND ('1048502699'))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((((((((((((vt1.c0)OR(vt1.c0)))OR(NULL)))OR(vt1.c0)))OR(vt1.c0)))GLOB(((vt1.c0) BETWEEN (vt1.c0) AND ('1048502699'))))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((UNLIKELY(vt0.c0))-((vt0.c0 IN ())))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((UNLIKELY(vt0.c0))-((vt0.c0 IN ())))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((UNLIKELY(vt0.c0))-((vt0.c0 IN ())))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, vt1 WHERE (CASE WHEN (- (vt0.c0)) THEN 'If\W[5n' END) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, vt1 WHERE ((NOT (CASE WHEN (- (vt0.c0)) THEN 'If\W[5n' END))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, vt1 WHERE (((CASE WHEN (- (vt0.c0)) THEN 'If\W[5n' END) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING x'd14f097e' UNION ALL SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING (NOT (x'd14f097e')) UNION ALL SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING ((x'd14f097e') ISNULL);
SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING x'd14f097e' UNION ALL SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING (NOT (x'd14f097e')) UNION ALL SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING ((x'd14f097e') ISNULL);
SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (json_object(GLOB(vt1.c0, vt1.c0), TYPEOF(DISTINCT vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (json_object(GLOB(vt1.c0, vt1.c0), TYPEOF(DISTINCT vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((json_object(GLOB(vt1.c0, vt1.c0), TYPEOF(DISTINCT vt1.c0))) ISNULL));
SELECT DISTINCT * FROM vt0 NATURAL JOIN vt1;
SELECT DISTINCT * FROM vt0 NATURAL JOIN vt1 WHERE (((('-260677574', vt1.c0, vt1.c0)) BETWEEN ((CAST(vt1.c0 AS INTEGER), (+ ('pr')), vt0.c0 COLLATE BINARY)) AND ((vt0.c0 COLLATE NOCASE, ((((((((vt1.c0)OR(vt0.c0)))OR(vt1.c0)))OR(vt0.c0)))OR(vt0.c0)), (NOT (vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0 NATURAL JOIN vt1 WHERE ((NOT (((('-260677574', vt1.c0, vt1.c0)) BETWEEN ((CAST(vt1.c0 AS INTEGER), (+ ('pr')), vt0.c0 COLLATE BINARY)) AND ((vt0.c0 COLLATE NOCASE, ((((((((vt1.c0)OR(vt0.c0)))OR(vt1.c0)))OR(vt0.c0)))OR(vt0.c0)), (NOT (vt0.c0)))))))) UNION SELECT DISTINCT * FROM vt0 NATURAL JOIN vt1 WHERE (((((('-260677574', vt1.c0, vt1.c0)) BETWEEN ((CAST(vt1.c0 AS INTEGER), (+ ('pr')), vt0.c0 COLLATE BINARY)) AND ((vt0.c0 COLLATE NOCASE, ((((((((vt1.c0)OR(vt0.c0)))OR(vt1.c0)))OR(vt0.c0)))OR(vt0.c0)), (NOT (vt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt0 NATURAL JOIN vt1;
SELECT ALL vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON json_array_length(((vt1.c0)*(vt0.c0))) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON json_array_length(((vt1.c0)*(vt0.c0))) WHERE (CAST(((vt0.c0) NOTNULL) AS REAL)) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON json_array_length(((vt1.c0)*(vt0.c0))) WHERE ((NOT (CAST(((vt0.c0) NOTNULL) AS REAL)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON json_array_length(((vt1.c0)*(vt0.c0))) WHERE (((CAST(((vt0.c0) NOTNULL) AS REAL)) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON json_array_length(((vt1.c0)*(vt0.c0))) GROUP BY vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING (vt1.c0 COLLATE NOCASE IN ()) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING (NOT ((vt1.c0 COLLATE NOCASE IN ()))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING (((vt1.c0 COLLATE NOCASE IN ())) ISNULL);
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING (vt1.c0 COLLATE NOCASE IN ()) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING (NOT ((vt1.c0 COLLATE NOCASE IN ()))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING (((vt1.c0 COLLATE NOCASE IN ())) ISNULL);
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (CAST(vt0.c0 AS REAL) COLLATE NOCASE) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (CAST(vt0.c0 AS REAL) COLLATE NOCASE))) UNION ALL SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS REAL) COLLATE NOCASE) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (LAST_INSERT_ROWID()) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (LAST_INSERT_ROWID()))) UNION SELECT DISTINCT * FROM vt0 WHERE (((LAST_INSERT_ROWID()) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 FULL OUTER JOIN vt1 ON QUOTE(((vt0.c0) BETWEEN (0x653aeff) AND (vt0.c0))) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 FULL OUTER JOIN vt1 ON QUOTE(((vt0.c0) BETWEEN (0x653aeff) AND (vt0.c0))) WHERE (CAST((((vt1.c0))!=((vt1.c0))) AS NUMERIC)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 FULL OUTER JOIN vt1 ON QUOTE(((vt0.c0) BETWEEN (0X653aeff) AND (vt0.c0))) WHERE ((NOT (CAST((((vt1.c0))<>((vt1.c0))) AS NUMERIC)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 FULL OUTER JOIN vt1 ON QUOTE(((vt0.c0) BETWEEN (0X653aeff) AND (vt0.c0))) WHERE (((CAST((((vt1.c0))<>((vt1.c0))) AS NUMERIC)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 FULL OUTER JOIN vt1 ON QUOTE(((vt0.c0) BETWEEN (0x653aeff) AND (vt0.c0))) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING CAST(SUM(SUM(COUNT(*))) AS NUMERIC) UNION ALL SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING (NOT (CAST(SUM(SUM(COUNT(*))) AS NUMERIC))) UNION ALL SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING ((CAST(SUM(SUM(COUNT(*))) AS NUMERIC)) ISNULL);
SELECT vt0.c0, vt1.c0 FROM vt0, vt1;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (CAST(vt0.c0 COLLATE RTRIM AS INTEGER)) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((NOT (CAST(vt0.c0 COLLATE RTRIM AS INTEGER)))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((CAST(vt0.c0 COLLATE RTRIM AS INTEGER)) ISNULL));
SELECT vt0.c0, vt1.c0 FROM vt0, vt1;
SELECT DISTINCT vt1.c0 FROM vt1, vt0;
SELECT DISTINCT vt1.c0 FROM vt1, vt0 WHERE ((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))<<((vt1.c0 IN ())))) UNION SELECT DISTINCT vt1.c0 FROM vt1, vt0 WHERE ((NOT ((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))<<((vt1.c0 IN ())))))) UNION SELECT DISTINCT vt1.c0 FROM vt1, vt0 WHERE ((((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))<<((vt1.c0 IN ())))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1, vt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ('0.8374853920164277') GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ('0.8374853920164277'))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((('0.8374853920164277') ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING SUM(0Xffffffff879423e4) UNION ALL SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING (NOT (SUM(0xffffffff879423e4))) UNION ALL SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING ((SUM(0xffffffff879423e4)) ISNULL);
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING SUM(0Xffffffff879423e4) UNION ALL SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING (NOT (SUM(0xffffffff879423e4))) UNION ALL SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING ((SUM(0xffffffff879423e4)) ISNULL);
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT * FROM vt0, vt1;
SELECT * FROM vt0, vt1 WHERE (0.8514021158421174) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE ((NOT (0.8514021158421174))) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE (((0.8514021158421174) ISNULL));
SELECT * FROM vt0, vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM) NOT NULL)) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0 COLLATE RTRIM) NOT NULL)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((vt1.c0 COLLATE RTRIM) NOT NULL)) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((vt0.c0)&(vt0.c0)) IN ())) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0)&(vt0.c0)) IN ())))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0)&(vt0.c0)) IN ())) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0 NOT INDEXED, vt1 GROUP BY vt0.c0, vt1.c0 HAVING ((CAST(vt0.c0 AS INTEGER))%(COUNT(*))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (((CAST(vt0.c0 AS INTEGER))%(COUNT(*))))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING ((((CAST(vt0.c0 AS INTEGER))%(COUNT(*)))) ISNULL);
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0 NOT INDEXED, vt1 GROUP BY vt0.c0, vt1.c0 HAVING ((CAST(vt0.c0 AS INTEGER))%(COUNT(*))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (((CAST(vt0.c0 AS INTEGER))%(COUNT(*))))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING ((((CAST(vt0.c0 AS INTEGER))%(COUNT(*)))) ISNULL);
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (((((((vt1.c0)AND(x'64893e7d')))OR(vt1.c0)))IS NOT(((vt1.c0)OR(vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((((vt1.c0)AND(x'64893e7d')))OR(vt1.c0)))IS NOT(((vt1.c0)OR(vt1.c0))))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((((((((vt1.c0)AND(x'64893e7d')))OR(vt1.c0)))IS NOT(((vt1.c0)OR(vt1.c0))))) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN vt0 ON LIKELY(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END);
SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN vt0 ON LIKELY(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) WHERE ((((vt0.c0) NOTNULL) IN (json_insert(vt0.c0, vt0.c0, vt0.c0)))) UNION SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN vt0 ON LIKELY(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) WHERE ((NOT ((((vt0.c0) NOTNULL) IN (json_insert(vt0.c0, vt0.c0, vt0.c0)))))) UNION SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN vt0 ON LIKELY(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) WHERE ((((((vt0.c0) NOTNULL) IN (json_insert(vt0.c0, vt0.c0, vt0.c0)))) ISNULL));
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (CASE WHEN (+ (vt1.c0)) THEN ((vt0.c0) NOTNULL) WHEN CAST(vt1.c0 AS INTEGER) THEN ((vt1.c0)IS(vt0.c0)) WHEN vt0.c0 COLLATE BINARY THEN ((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)) ELSE (vt0.c0 IN (vt1.c0, vt0.c0)) END) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((NOT (CASE WHEN (+ (vt1.c0)) THEN ((vt0.c0) NOTNULL) WHEN CAST(vt1.c0 AS INTEGER) THEN ((vt1.c0)IS(vt0.c0)) WHEN vt0.c0 COLLATE BINARY THEN ((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)) ELSE (vt0.c0 IN (vt1.c0, vt0.c0)) END))) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((CASE WHEN (+ (vt1.c0)) THEN ((vt0.c0) NOTNULL) WHEN CAST(vt1.c0 AS INTEGER) THEN ((vt1.c0)IS(vt0.c0)) WHEN vt0.c0 COLLATE BINARY THEN ((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)) ELSE (vt0.c0 IN (vt1.c0, vt0.c0)) END) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT vt1.c0 FROM vt0 FULL OUTER JOIN vt1 ON ((((vt1.c0)|(vt1.c0)))IS NOT(TRIM(vt0.c0))) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0 FULL OUTER JOIN vt1 ON ((((vt1.c0)|(vt1.c0)))IS NOT(TRIM(vt0.c0))) GROUP BY vt1.c0 HAVING SUM(vt1.c0) UNION ALL SELECT ALL vt1.c0 FROM vt0 FULL OUTER JOIN vt1 ON ((((vt1.c0)|(vt1.c0)))IS NOT(TRIM(vt0.c0))) GROUP BY vt1.c0 HAVING (NOT (SUM(vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt0 FULL OUTER JOIN vt1 ON ((((vt1.c0)|(vt1.c0)))IS NOT(TRIM(vt0.c0))) GROUP BY vt1.c0 HAVING ((SUM(vt1.c0)) ISNULL);
SELECT vt1.c0 FROM vt0 FULL OUTER JOIN vt1 ON ((((vt1.c0)|(vt1.c0)))IS NOT(TRIM(vt0.c0))) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0 FULL OUTER JOIN vt1 ON ((((vt1.c0)|(vt1.c0)))IS NOT(TRIM(vt0.c0))) GROUP BY vt1.c0 HAVING SUM(vt1.c0) UNION ALL SELECT ALL vt1.c0 FROM vt0 FULL OUTER JOIN vt1 ON ((((vt1.c0)|(vt1.c0)))IS NOT(TRIM(vt0.c0))) GROUP BY vt1.c0 HAVING (NOT (SUM(vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt0 FULL OUTER JOIN vt1 ON ((((vt1.c0)|(vt1.c0)))IS NOT(TRIM(vt0.c0))) GROUP BY vt1.c0 HAVING ((SUM(vt1.c0)) ISNULL);
SELECT vt1.c0 FROM vt0 FULL OUTER JOIN vt1 ON ((((vt1.c0)|(vt1.c0)))IS NOT(TRIM(vt0.c0))) GROUP BY vt1.c0;
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE ((NOT (((vt1.c0)AND(vt1.c0))))) UNION ALL SELECT * FROM vt1 WHERE ((NOT ((NOT (((vt1.c0)AND(vt1.c0))))))) UNION ALL SELECT * FROM vt1 WHERE ((((NOT (((vt1.c0)AND(vt1.c0))))) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (x'1aee9865') UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (x'1aee9865'))) UNION SELECT DISTINCT * FROM vt1 WHERE (((x'1aee9865') ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE (UPPER((- (vt1.c0)))) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((NOT (UPPER((- (vt1.c0)))))) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt1, vt0 NOT INDEXED WHERE (((UPPER((- (vt1.c0)))) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((vt1.c0)*(MIN(MIN(MAX(vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((vt1.c0)*(MIN(MIN(MAX(vt1.c0))))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((vt1.c0)*(MIN(MIN(MAX(vt1.c0)))))) ISNULL);
SELECT MIN(((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))-(((vt0.c0)LIKE(vt0.c0))))) FROM vt0, vt1;
SELECT * FROM vt1, vt0;
SELECT ALL * FROM vt1, vt0 WHERE (((CASE WHEN vt0.c0 THEN '608159118' ELSE vt0.c0 END) BETWEEN (vt1.c0) AND (CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) UNION ALL SELECT * FROM vt1, vt0 WHERE ((NOT (((CASE WHEN vt0.c0 THEN '608159118' ELSE vt0.c0 END) BETWEEN (vt1.c0) AND (CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))))) UNION ALL SELECT * FROM vt1, vt0 WHERE (((((CASE WHEN vt0.c0 THEN '608159118' ELSE vt0.c0 END) BETWEEN (vt1.c0) AND (CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ISNULL));
SELECT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE ('te') UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT ('te'))) UNION SELECT DISTINCT * FROM vt1 NOT INDEXED, vt0 WHERE ((('te') ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((((vt0.c0) ISNULL)) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0))))) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT (((((vt0.c0) ISNULL)) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0))))))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((((((vt0.c0) ISNULL)) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0))))) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING SUM(MAX(SUM(COUNT(vt1.c0)))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (SUM(MAX(SUM(COUNT(vt1.c0)))))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING ((SUM(MAX(SUM(COUNT(vt1.c0))))) ISNULL);
SELECT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((vt1.c0) ISNULL)) IS TRUE)) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0) ISNULL)) IS TRUE)))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((((((vt1.c0) ISNULL)) IS TRUE)) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0))<=((vt1.c0, vt1.c0, vt1.c0))))&(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((((((vt1.c0, vt1.c0, vt1.c0))<=((vt1.c0, vt1.c0, vt1.c0))))&(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((((((vt1.c0, vt1.c0, vt1.c0))<=((vt1.c0, vt1.c0, vt1.c0))))&(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE (vt0.c0) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING AVG(MIN(vt0.c0) COLLATE RTRIM) UNION ALL SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING (NOT (AVG(MIN(vt0.c0) COLLATE RTRIM))) UNION ALL SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING ((AVG(MIN(vt0.c0) COLLATE RTRIM)) ISNULL);
SELECT ALL * FROM vt0, vt1;
SELECT ALL * FROM vt0, vt1 WHERE (x'') UNION ALL SELECT ALL * FROM vt0, vt1 WHERE ((NOT (x''))) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE (((x'') ISNULL));
SELECT ALL * FROM vt0, vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(CAST(vt1.c0 AS BLOB)))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(CAST(vt1.c0 AS BLOB)))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(CAST(vt1.c0 AS BLOB)))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((((((((vt1.c0)OR(0.861007588119026)))AND(vt1.c0)))AND(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))OR((((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, '', vt1.c0)))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((((((vt1.c0)OR(0.861007588119026)))AND(vt1.c0)))AND(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))OR((((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, '', vt1.c0)))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((((((((vt1.c0)OR(0.861007588119026)))AND(vt1.c0)))AND(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))OR((((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, '', vt1.c0)))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CASE WHEN ((vt0.c0)GLOB(SUM(vt0.c0))) THEN ((x'e267') NOT BETWEEN (MAX(vt0.c0)) AND (MIN(vt0.c0))) WHEN (~ (vt0.c0)) THEN CASE MAX(COUNT(*))  WHEN MIN(AVG(vt0.c0)) THEN vt0.c0 END WHEN AVG(vt0.c0) THEN TOTAL(vt0.c0) WHEN MIN(vt0.c0) THEN MIN(COUNT(vt0.c0)) WHEN ((COUNT(*)) BETWEEN (MIN(MIN(COUNT(vt0.c0)))) AND (vt0.c0)) THEN MIN(vt0.c0) ELSE ((MAX(vt0.c0))LIKE(TOTAL(MAX(vt0.c0)))) END UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CASE WHEN ((vt0.c0)GLOB(SUM(vt0.c0))) THEN ((x'e267') NOT BETWEEN (MAX(vt0.c0)) AND (MIN(vt0.c0))) WHEN (~ (vt0.c0)) THEN CASE MAX(COUNT(*))  WHEN MIN(AVG(vt0.c0)) THEN vt0.c0 END WHEN AVG(vt0.c0) THEN TOTAL(vt0.c0) WHEN MIN(vt0.c0) THEN MIN(COUNT(vt0.c0)) WHEN ((COUNT(*)) BETWEEN (MIN(MIN(COUNT(vt0.c0)))) AND (vt0.c0)) THEN MIN(vt0.c0) ELSE ((MAX(vt0.c0))LIKE(TOTAL(MAX(vt0.c0)))) END)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CASE WHEN ((vt0.c0)GLOB(SUM(vt0.c0))) THEN ((x'e267') NOT BETWEEN (MAX(vt0.c0)) AND (MIN(vt0.c0))) WHEN (~ (vt0.c0)) THEN CASE MAX(COUNT(*))  WHEN MIN(AVG(vt0.c0)) THEN vt0.c0 END WHEN AVG(vt0.c0) THEN TOTAL(vt0.c0) WHEN MIN(vt0.c0) THEN MIN(COUNT(vt0.c0)) WHEN ((COUNT(*)) BETWEEN (MIN(MIN(COUNT(vt0.c0)))) AND (vt0.c0)) THEN MIN(vt0.c0) ELSE ((MAX(vt0.c0))LIKE(TOTAL(MAX(vt0.c0)))) END) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE ((((((vt1.c0) NOTNULL)))<((CASE WHEN vt1.c0 THEN vt1.c0 ELSE 0.6298803439280349 END)))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT ((((((vt1.c0) NOTNULL)))<((CASE WHEN vt1.c0 THEN vt1.c0 ELSE 0.6298803439280349 END)))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((((((((vt1.c0) NOTNULL)))<((CASE WHEN vt1.c0 THEN vt1.c0 ELSE 0.6298803439280349 END)))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE (CASE x''  WHEN ((vt0.c0)&(vt0.c0)) THEN CAST(vt1.c0 AS TEXT) ELSE ((((vt1.c0)OR(vt0.c0)))OR(vt1.c0)) END) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT (CASE x''  WHEN ((vt0.c0)&(vt0.c0)) THEN CAST(vt1.c0 AS TEXT) ELSE ((((vt1.c0)OR(vt0.c0)))OR(vt1.c0)) END))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE (((CASE x''  WHEN ((vt0.c0)&(vt0.c0)) THEN CAST(vt1.c0 AS TEXT) ELSE ((((vt1.c0)OR(vt0.c0)))OR(vt1.c0)) END) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING MIN(MIN(AVG(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING (NOT (MIN(MIN(AVG(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING ((MIN(MIN(AVG(vt0.c0)))) ISNULL);
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)))AND(vt1.c0))) NOT BETWEEN (vt1.c0 COLLATE BINARY) AND (CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 END))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((NOT (((((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)))AND(vt1.c0))) NOT BETWEEN (vt1.c0 COLLATE BINARY) AND (CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 END))))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((((((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)))AND(vt1.c0))) NOT BETWEEN (vt1.c0 COLLATE BINARY) AND (CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 END))) ISNULL));
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1;
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt0.c0)IS NOT(vt1.c0)))<=((- (vt0.c0))));
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt0.c0)IS NOT(vt1.c0)))<=((- (vt0.c0)))) WHERE ((+ ((((vt0.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt0.c0)) AND ((vt1.c0, vt0.c0, vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt0.c0)IS NOT(vt1.c0)))<=((- (vt0.c0)))) WHERE ((NOT ((+ ((((vt0.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt0.c0)) AND ((vt1.c0, vt0.c0, vt0.c0)))))))) UNION SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt0.c0)IS NOT(vt1.c0)))<=((- (vt0.c0)))) WHERE ((((+ ((((vt0.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt0.c0)) AND ((vt1.c0, vt0.c0, vt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt0.c0)IS NOT(vt1.c0)))<=((- (vt0.c0))));
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt0 WHERE ('2062872611') GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 NOT INDEXED, vt0 WHERE ((NOT ('2062872611'))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1, vt0 WHERE ((('2062872611') ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TOTAL(GROUP_CONCAT(COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(GROUP_CONCAT(COUNT(*))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(GROUP_CONCAT(COUNT(*)))) ISNULL);
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (CASE WHEN (NULL IN ()) THEN ((vt1.c0)=(vt0.c0)) END) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT (CASE WHEN (NULL IN ()) THEN ((vt1.c0)=(vt0.c0)) END))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((CASE WHEN (NULL IN ()) THEN ((vt1.c0)==(vt0.c0)) END) ISNULL));
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON CAST((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((x''))) AS TEXT) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON CAST((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((x''))) AS TEXT) WHERE (NULL) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON CAST((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((x''))) AS TEXT) WHERE ((NOT (NULL))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON CAST((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((x''))) AS TEXT) WHERE (((NULL) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON CAST((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((x''))) AS TEXT) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TOTAL(MIN(vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(MIN(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(MIN(vt0.c0))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (NULL))) IS TRUE)) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) BETWEEN (vt0.c0) AND (NULL))) IS TRUE)))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (NULL))) IS TRUE)) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE (((CAST(vt1.c0 AS TEXT))>=(((((vt0.c0)OR(vt1.c0)))OR(vt1.c0))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (((CAST(vt1.c0 AS TEXT))>=(((((vt0.c0)OR(vt1.c0)))OR(vt1.c0))))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE (((((CAST(vt1.c0 AS TEXT))>=(((((vt0.c0)OR(vt1.c0)))OR(vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (x'') GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT (x''))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((x'') ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING MIN(COUNT(vt1.c0)) UNION ALL SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING (NOT (MIN(COUNT(vt1.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 NOT INDEXED, vt1 GROUP BY vt0.c0 HAVING ((MIN(COUNT(vt1.c0))) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))%(vt0.c0 COLLATE RTRIM))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))%(vt0.c0 COLLATE RTRIM))))) UNION ALL SELECT * FROM vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))%(vt0.c0 COLLATE RTRIM))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((vt1.c0 IN ())) NOT BETWEEN (CAST(vt1.c0 AS INTEGER)) AND (vt1.c0))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0 IN ())) NOT BETWEEN (CAST(vt1.c0 AS INTEGER)) AND (vt1.c0))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((((vt1.c0 IN ())) NOT BETWEEN (CAST(vt1.c0 AS INTEGER)) AND (vt1.c0))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, vt1 WHERE (NULL) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, vt1 WHERE ((NOT (NULL))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, vt1 WHERE (((NULL) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING ((GROUP_CONCAT(TOTAL(vt0.c0)))>=((NULL IN ()))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (((GROUP_CONCAT(TOTAL(vt0.c0)))>=((NULL IN ()))))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING ((((GROUP_CONCAT(TOTAL(vt0.c0)))>=((NULL IN ())))) ISNULL);
SELECT SUM(RTRIM(vt0.c0)) FROM vt1, vt0 ORDER BY ((vt1.c0 COLLATE BINARY) NOT NULL) DESC;
SELECT ALL * FROM vt1, vt0;
SELECT ALL * FROM vt1, vt0 WHERE ((+ (((((((((vt1.c0)OR(vt0.c0)))OR(0x1020dd3)))OR(vt0.c0)))OR(vt0.c0))))) UNION ALL SELECT * FROM vt1, vt0 WHERE ((NOT ((+ (((((((((vt1.c0)OR(vt0.c0)))OR(0x1020dd3)))OR(vt0.c0)))OR(vt0.c0))))))) UNION ALL SELECT * FROM vt1, vt0 WHERE ((((+ (((((((((vt1.c0)OR(vt0.c0)))OR(0X1020dd3)))OR(vt0.c0)))OR(vt0.c0))))) ISNULL));
SELECT ALL * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (json_valid(CASE WHEN vt1.c0 THEN vt1.c0 END)) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (json_valid(CASE WHEN vt1.c0 THEN vt1.c0 END)))) UNION SELECT DISTINCT * FROM vt1 WHERE (((json_valid(CASE WHEN vt1.c0 THEN vt1.c0 END)) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt0 WHERE (((CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c0))) AND (((vt0.c0)IS NOT(vt0.c0))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1, vt0 WHERE ((NOT (((CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c0))) AND (((vt0.c0)IS NOT(vt0.c0))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1, vt0 WHERE (((((CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c0))) AND (((vt0.c0)IS NOT(vt0.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0 INNER JOIN vt1 ON (+ (vt1.c0)) COLLATE NOCASE COLLATE NOCASE GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0 INNER JOIN vt1 ON (+ (vt1.c0)) COLLATE NOCASE COLLATE NOCASE GROUP BY vt0.c0, vt1.c0 HAVING MAX(vt1.c0) COLLATE NOCASE UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0 INNER JOIN vt1 ON (+ (vt1.c0)) COLLATE NOCASE COLLATE NOCASE GROUP BY vt0.c0, vt1.c0 HAVING (NOT (MAX(vt1.c0) COLLATE NOCASE)) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0 INNER JOIN vt1 ON (+ (vt1.c0)) COLLATE NOCASE COLLATE NOCASE GROUP BY vt0.c0, vt1.c0 HAVING ((MAX(vt1.c0) COLLATE NOCASE) ISNULL);
SELECT vt0.c0, vt1.c0 FROM vt0 INNER JOIN vt1 ON (+ (vt1.c0)) COLLATE NOCASE COLLATE NOCASE GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0 INNER JOIN vt1 ON (+ (vt1.c0)) COLLATE NOCASE COLLATE NOCASE GROUP BY vt0.c0, vt1.c0 HAVING MAX(vt1.c0) COLLATE NOCASE UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0 INNER JOIN vt1 ON (+ (vt1.c0)) COLLATE NOCASE COLLATE NOCASE GROUP BY vt0.c0, vt1.c0 HAVING (NOT (MAX(vt1.c0) COLLATE NOCASE)) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0 INNER JOIN vt1 ON (+ (vt1.c0)) COLLATE NOCASE COLLATE NOCASE GROUP BY vt0.c0, vt1.c0 HAVING ((MAX(vt1.c0) COLLATE NOCASE) ISNULL);
SELECT vt0.c0, vt1.c0 FROM vt0 INNER JOIN vt1 ON (+ (vt1.c0)) COLLATE NOCASE COLLATE NOCASE GROUP BY vt0.c0, vt1.c0;
SELECT * FROM vt1, vt0;
SELECT ALL * FROM vt1, vt0 WHERE ((('2125563978')AND(((vt1.c0) NOT NULL)))) UNION ALL SELECT * FROM vt1, vt0 WHERE ((NOT ((('2125563978')AND(((vt1.c0) NOT NULL)))))) UNION ALL SELECT ALL * FROM vt1, vt0 WHERE ((((('2125563978')AND(((vt1.c0) NOT NULL)))) ISNULL));
SELECT * FROM vt1, vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((vt0.c0)AND(vt0.c0))))==((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((((((vt0.c0)AND(vt0.c0))))=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((((vt0.c0)AND(vt0.c0))))==((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((((vt1.c0)OR(vt0.c0)))OR(vt1.c0))) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((NOT (((((vt1.c0)OR(vt0.c0)))OR(vt1.c0))))) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((((((vt1.c0)OR(vt0.c0)))OR(vt1.c0))) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON ((((((vt1.c0)GLOB(vt0.c0)))OR(((vt1.c0) ISNULL))))OR(CAST(vt1.c0 AS BLOB))) GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON ((((((vt1.c0)GLOB(vt0.c0)))OR(((vt1.c0) ISNULL))))OR(CAST(vt1.c0 AS BLOB))) GROUP BY vt0.c0, vt1.c0 HAVING GROUP_CONCAT(SUM(vt1.c0)) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON ((((((vt1.c0)GLOB(vt0.c0)))OR(((vt1.c0) ISNULL))))OR(CAST(vt1.c0 AS BLOB))) GROUP BY vt0.c0, vt1.c0 HAVING (NOT (GROUP_CONCAT(SUM(vt1.c0)))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON ((((((vt1.c0)GLOB(vt0.c0)))OR(((vt1.c0) ISNULL))))OR(CAST(vt1.c0 AS BLOB))) GROUP BY vt0.c0, vt1.c0 HAVING ((GROUP_CONCAT(SUM(vt1.c0))) ISNULL);
SELECT ALL vt0.c0 FROM vt0, vt1;
SELECT vt0.c0 FROM vt0, vt1 WHERE (((vt1.c0 COLLATE NOCASE)*((NOT (vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0, vt1 WHERE ((NOT (((vt1.c0 COLLATE NOCASE)*((NOT (vt0.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0, vt1 WHERE (((((vt1.c0 COLLATE NOCASE)*((NOT (vt0.c0))))) ISNULL));
SELECT ALL vt0.c0 FROM vt0, vt1;
SELECT DISTINCT vt1.c0 FROM vt0, vt1;
SELECT DISTINCT vt1.c0 FROM vt0, vt1 WHERE (((0.06372199611767149)-(((vt0.c0) NOT NULL)))) UNION SELECT DISTINCT vt1.c0 FROM vt0, vt1 WHERE ((NOT (((0.06372199611767149)-(((vt0.c0) NOT NULL)))))) UNION SELECT DISTINCT vt1.c0 FROM vt0, vt1 WHERE (((((0.06372199611767149)-(((vt0.c0) NOT NULL)))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt0, vt1;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((vt1.c0) NOT NULL)) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT (((vt1.c0) NOT NULL)))) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((((vt1.c0) NOT NULL)) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING (((vt1.c0)AND(0.49692018008961214)) IN ()) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING (NOT ((((vt1.c0)AND(0.49692018008961214)) IN ()))) UNION ALL SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING (((((vt1.c0)AND(0.49692018008961214)) IN ())) ISNULL);
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING (((vt1.c0)AND(0.49692018008961214)) IN ()) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING (NOT ((((vt1.c0)AND(0.49692018008961214)) IN ()))) UNION ALL SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING (((((vt1.c0)AND(0.49692018008961214)) IN ())) ISNULL);
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT ALL * FROM vt0, vt1;
SELECT * FROM vt0, vt1 WHERE (((((0Xffffffffac72f831)OR(vt1.c0 COLLATE RTRIM)))OR(((vt1.c0)==(vt1.c0))))) UNION ALL SELECT * FROM vt0, vt1 WHERE ((NOT (((((0Xffffffffac72f831)OR(vt1.c0 COLLATE RTRIM)))OR(((vt1.c0)==(vt1.c0))))))) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE (((((((0Xffffffffac72f831)OR(vt1.c0 COLLATE RTRIM)))OR(((vt1.c0)=(vt1.c0))))) ISNULL));
SELECT ALL * FROM vt0, vt1;
SELECT DISTINCT vt1.c0 FROM vt1, vt0;
SELECT DISTINCT vt1.c0 FROM vt1, vt0 WHERE (((vt1.c0 COLLATE NOCASE)>(vt1.c0 COLLATE BINARY))) UNION SELECT DISTINCT vt1.c0 FROM vt1, vt0 WHERE ((NOT (((vt1.c0 COLLATE NOCASE)>(vt1.c0 COLLATE BINARY))))) UNION SELECT DISTINCT vt1.c0 FROM vt1, vt0 WHERE (((((vt1.c0 COLLATE NOCASE)>(vt1.c0 COLLATE BINARY))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1, vt0;
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 WHERE (CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END COLLATE NOCASE) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((NOT (CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END COLLATE NOCASE))) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END COLLATE NOCASE) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MIN(AVG(vt1.c0)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MIN(AVG(vt1.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MIN(AVG(vt1.c0))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND((~ (vt0.c0))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND((~ (vt0.c0))))))) UNION ALL SELECT * FROM vt0 WHERE (((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND((~ (vt0.c0))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0;
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((((vt1.c0)) NOT BETWEEN ((((((((((((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(NULL)))OR(vt0.c0)))OR(vt1.c0)))) AND ((((vt1.c0)%(vt1.c0)))))) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((NOT ((((vt1.c0)) NOT BETWEEN ((((((((((((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(NULL)))OR(vt0.c0)))OR(vt1.c0)))) AND ((((vt1.c0)%(vt1.c0)))))))) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((((((vt1.c0)) NOT BETWEEN ((((((((((((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(NULL)))OR(vt0.c0)))OR(vt1.c0)))) AND ((((vt1.c0)%(vt1.c0)))))) ISNULL));
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (NULLIF(DISTINCT DATETIME(vt1.c0, 6.08159118E8, vt1.c0), (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (NULLIF(DISTINCT DATETIME(vt1.c0, 6.08159118E8, vt1.c0), (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((NULLIF(DISTINCT DATETIME(vt1.c0, 6.08159118E8, vt1.c0), (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(MAX(vt1.c0)))IS((((MIN(vt1.c0))) NOT BETWEEN ((COUNT(TOTAL(MAX(MIN(vt1.c0)))))) AND ((vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((COUNT(MAX(vt1.c0)))IS((((MIN(vt1.c0))) NOT BETWEEN ((COUNT(TOTAL(MAX(MIN(vt1.c0)))))) AND ((vt1.c0))))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((COUNT(MAX(vt1.c0)))IS((((MIN(vt1.c0))) NOT BETWEEN ((COUNT(TOTAL(MAX(MIN(vt1.c0)))))) AND ((vt1.c0)))))) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (vt0.c0) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (CAST(NULL AS REAL)) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (CAST(NULL AS REAL)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((CAST(NULL AS REAL)) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON (CAST(vt1.c0 AS INTEGER) IN ()) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON (CAST(vt1.c0 AS INTEGER) IN ()) WHERE (((vt0.c0) NOTNULL) COLLATE BINARY) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON (CAST(vt1.c0 AS INTEGER) IN ()) WHERE ((NOT (((vt0.c0) NOTNULL) COLLATE BINARY))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON (CAST(vt1.c0 AS INTEGER) IN ()) WHERE (((((vt0.c0) NOTNULL) COLLATE BINARY) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON (CAST(vt1.c0 AS INTEGER) IN ()) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((vt1.c0)) BETWEEN ((COUNT(*))) AND ((((GROUP_CONCAT(vt1.c0)) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((((vt1.c0)) BETWEEN ((COUNT(*))) AND ((((GROUP_CONCAT(vt1.c0)) NOT BETWEEN (vt1.c0) AND (vt1.c0))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((((vt1.c0)) BETWEEN ((COUNT(*))) AND ((((GROUP_CONCAT(vt1.c0)) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((vt1.c0)) BETWEEN ((COUNT(*))) AND ((((GROUP_CONCAT(vt1.c0)) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((((vt1.c0)) BETWEEN ((COUNT(*))) AND ((((GROUP_CONCAT(vt1.c0)) NOT BETWEEN (vt1.c0) AND (vt1.c0))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((((vt1.c0)) BETWEEN ((COUNT(*))) AND ((((GROUP_CONCAT(vt1.c0)) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (vt0.c0) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT (((((0.9564987609633994)AND(vt0.c0)))OR(vt0.c0))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT ((NOT (((((0.9564987609633994)AND(vt0.c0)))OR(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((((NOT (((((0.9564987609633994)AND(vt0.c0)))OR(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))&((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))&((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))&((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (MAX(MAX(TOTAL(vt1.c0))) IN ()) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((MAX(MAX(TOTAL(vt1.c0))) IN ()))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((MAX(MAX(TOTAL(vt1.c0))) IN ())) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (MAX(MAX(TOTAL(vt1.c0))) IN ()) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((MAX(MAX(TOTAL(vt1.c0))) IN ()))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((MAX(MAX(TOTAL(vt1.c0))) IN ())) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE (x'9e6f') UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (x'9e6f'))) UNION ALL SELECT * FROM vt1 WHERE (((x'9e6f') ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((vt1.c0) IS FALSE)) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0) IS FALSE)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((vt1.c0) IS FALSE)) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING COUNT(MIN(SUM(COUNT(vt1.c0)))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (COUNT(MIN(SUM(COUNT(vt1.c0)))))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING ((COUNT(MIN(SUM(COUNT(vt1.c0))))) ISNULL);
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((vt1.c0)-((NOT (vt1.c0))))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT (((vt1.c0)-((NOT (vt1.c0))))))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((((vt1.c0)-((NOT (vt1.c0))))) ISNULL));
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0, vt1;
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((CAST(vt0.c0 AS NUMERIC))LIKE(vt1.c0 COLLATE RTRIM))) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((NOT (((CAST(vt0.c0 AS NUMERIC))LIKE(vt1.c0 COLLATE RTRIM))))) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((((CAST(vt0.c0 AS NUMERIC))LIKE(vt1.c0 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0, vt1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((~ (''))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((~ (''))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((~ (''))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT(COUNT(*)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(COUNT(*))) ISNULL);
SELECT ALL SUM('-1254671810') FROM vt0 ORDER BY (- (((vt0.c0) IS FALSE))), TYPEOF(TRIM(vt0.c0)), ABS(DISTINCT ((vt0.c0)LIKE(vt0.c0)));
SELECT ALL vt1.c0 FROM vt0, vt1;
SELECT ALL vt1.c0 FROM vt0, vt1 WHERE (((((vt0.c0)GLOB(vt1.c0))) ISNULL)) UNION ALL SELECT ALL vt1.c0 FROM vt0, vt1 WHERE ((NOT (((((vt0.c0)GLOB(vt1.c0))) ISNULL)))) UNION ALL SELECT ALL vt1.c0 FROM vt0, vt1 WHERE (((((((vt0.c0)GLOB(vt1.c0))) ISNULL)) ISNULL));
SELECT ALL vt1.c0 FROM vt0, vt1;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE (LIKELIHOOD(DISTINCT (vt0.c0 IN (vt0.c0, vt0.c0)), 0.7299180839712356)) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT (LIKELIHOOD(DISTINCT (vt0.c0 IN (vt0.c0, vt0.c0)), 0.7299180839712356)))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE (((LIKELIHOOD(DISTINCT (vt0.c0 IN (vt0.c0, vt0.c0)), 0.7299180839712356)) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((NOT (vt0.c0)))IS NOT(((vt0.c0)OR(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((NOT (vt0.c0)))IS NOT(((vt0.c0)OR(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((NOT (vt0.c0)))IS NOT(((vt0.c0)OR(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON ((((vt1.c0)<=(vt0.c0)))||(vt1.c0 COLLATE BINARY)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON ((((vt1.c0)<=(vt0.c0)))||(vt1.c0 COLLATE BINARY)) GROUP BY vt1.c0 HAVING CAST(COUNT(*) COLLATE NOCASE AS TEXT) UNION ALL SELECT vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON ((((vt1.c0)<=(vt0.c0)))||(vt1.c0 COLLATE BINARY)) GROUP BY vt1.c0 HAVING (NOT (CAST(COUNT(*) COLLATE NOCASE AS TEXT))) UNION ALL SELECT vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON ((((vt1.c0)<=(vt0.c0)))||(vt1.c0 COLLATE BINARY)) GROUP BY vt1.c0 HAVING ((CAST(COUNT(*) COLLATE NOCASE AS TEXT)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON ((((vt1.c0)<=(vt0.c0)))||(vt1.c0 COLLATE BINARY)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON ((((vt1.c0)<=(vt0.c0)))||(vt1.c0 COLLATE BINARY)) GROUP BY vt1.c0 HAVING CAST(COUNT(*) COLLATE NOCASE AS TEXT) UNION ALL SELECT vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON ((((vt1.c0)<=(vt0.c0)))||(vt1.c0 COLLATE BINARY)) GROUP BY vt1.c0 HAVING (NOT (CAST(COUNT(*) COLLATE NOCASE AS TEXT))) UNION ALL SELECT vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON ((((vt1.c0)<=(vt0.c0)))||(vt1.c0 COLLATE BINARY)) GROUP BY vt1.c0 HAVING ((CAST(COUNT(*) COLLATE NOCASE AS TEXT)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON ((((vt1.c0)<=(vt0.c0)))||(vt1.c0 COLLATE BINARY)) GROUP BY vt1.c0;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (((((vt0.c0 COLLATE BINARY)OR((- ('106147583')))))OR(((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((((vt0.c0 COLLATE BINARY)OR((- ('106147583')))))OR(((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0))))))) UNION ALL SELECT * FROM vt0 WHERE (((((((vt0.c0 COLLATE BINARY)OR((- ('106147583')))))OR(((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt1, vt0;
SELECT DISTINCT vt0.c0 FROM vt1, vt0 WHERE (503881549) UNION SELECT DISTINCT vt0.c0 FROM vt1, vt0 WHERE ((NOT (503881549))) UNION SELECT DISTINCT vt0.c0 FROM vt1, vt0 NOT INDEXED WHERE (((503881549) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt1, vt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE NOCASE) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE NOCASE))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE NOCASE) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING GROUP_CONCAT(GROUP_CONCAT(vt1.c0)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (GROUP_CONCAT(GROUP_CONCAT(vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((GROUP_CONCAT(GROUP_CONCAT(vt1.c0))) ISNULL);
SELECT ALL vt0.c0, vt1.c0 FROM vt0 FULL OUTER JOIN vt1 ON NULL;
SELECT vt0.c0, vt1.c0 FROM vt0 FULL OUTER JOIN vt1 ON NULL WHERE (((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) IN ())) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0 FULL OUTER JOIN vt1 ON NULL WHERE ((NOT (((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) IN ())))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0 FULL OUTER JOIN vt1 ON NULL WHERE (((((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) IN ())) ISNULL));
SELECT ALL vt0.c0, vt1.c0 FROM vt0 FULL OUTER JOIN vt1 ON NULL;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((vt1.c0) IS TRUE) COLLATE BINARY) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0) IS TRUE) COLLATE BINARY))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((vt1.c0) IS TRUE) COLLATE BINARY) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ())) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((NOT ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ())))) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ())) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING vt1.c0 UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (vt1.c0)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((vt1.c0) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING vt1.c0 UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (vt1.c0)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((vt1.c0) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT MAX((- (vt1.c0)) COLLATE NOCASE) FROM vt1, vt0;
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0 COLLATE BINARY, CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, (((vt1.c0))>((vt1.c0))))) AND ((ABS(vt1.c0), (((vt1.c0))<=((vt1.c0))), ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0 COLLATE BINARY, CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, (((vt1.c0))>((vt1.c0))))) AND ((ABS(vt1.c0), (((vt1.c0))<=((vt1.c0))), ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0 COLLATE BINARY, CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, (((vt1.c0))>((vt1.c0))))) AND ((ABS(vt1.c0), (((vt1.c0))<=((vt1.c0))), ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (vt1.c0) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT * FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0)|(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN '' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0)|(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN '' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0)|(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN '' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0 NATURAL JOIN vt1 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt0 NATURAL JOIN vt1 GROUP BY vt1.c0, vt0.c0 HAVING CAST(((COUNT(COUNT(*)))>>(vt1.c0)) AS TEXT) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt0 NATURAL JOIN vt1 GROUP BY vt1.c0, vt0.c0 HAVING (NOT (CAST(((COUNT(COUNT(*)))>>(vt1.c0)) AS TEXT))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt0 NATURAL JOIN vt1 GROUP BY vt1.c0, vt0.c0 HAVING ((CAST(((COUNT(COUNT(*)))>>(vt1.c0)) AS TEXT)) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)LIKE(vt0.c0)) IN ())) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((((vt0.c0)LIKE(vt0.c0)) IN ())))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)LIKE(vt0.c0)) IN ())) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((0X6d30a562)GLOB(vt1.c0)))>((NOT (vt1.c0))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((((0x6d30a562)GLOB(vt1.c0)))>((NOT (vt1.c0))))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((((0x6d30a562)GLOB(vt1.c0)))>((NOT (vt1.c0))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (CASE WHEN vt0.c0 COLLATE RTRIM THEN (((NULL, vt0.c0, 0.390102452565976))<=((vt0.c0, vt0.c0, vt0.c0))) WHEN (vt0.c0 IN ()) THEN (- (vt0.c0)) WHEN ((vt0.c0) IS FALSE) THEN CASE vt0.c0  WHEN x'' THEN vt0.c0 END ELSE (vt0.c0 IN (vt0.c0, vt0.c0)) END) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN vt0.c0 COLLATE RTRIM THEN (((NULL, vt0.c0, 0.390102452565976))<=((vt0.c0, vt0.c0, vt0.c0))) WHEN (vt0.c0 IN ()) THEN (- (vt0.c0)) WHEN ((vt0.c0) IS FALSE) THEN CASE vt0.c0  WHEN x'' THEN vt0.c0 END ELSE (vt0.c0 IN (vt0.c0, vt0.c0)) END))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((CASE WHEN vt0.c0 COLLATE RTRIM THEN (((NULL, vt0.c0, 0.390102452565976))<=((vt0.c0, vt0.c0, vt0.c0))) WHEN (vt0.c0 IN ()) THEN (- (vt0.c0)) WHEN ((vt0.c0) IS FALSE) THEN CASE vt0.c0  WHEN x'' THEN vt0.c0 END ELSE (vt0.c0 IN (vt0.c0, vt0.c0)) END) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((CASE TOTAL(MAX(vt1.c0))  WHEN vt1.c0 THEN vt1.c0 END) NOT BETWEEN (MAX(vt1.c0)) AND (load_extension(vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((CASE TOTAL(MAX(vt1.c0))  WHEN vt1.c0 THEN vt1.c0 END) NOT BETWEEN (MAX(vt1.c0)) AND (load_extension(vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((CASE TOTAL(MAX(vt1.c0))  WHEN vt1.c0 THEN vt1.c0 END) NOT BETWEEN (MAX(vt1.c0)) AND (load_extension(vt1.c0)))) ISNULL);
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE ((- ((NOT (vt1.c0))))) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT ((- ((NOT (vt1.c0))))))) UNION ALL SELECT * FROM vt1 WHERE ((((- ((NOT (vt1.c0))))) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1 CROSS JOIN vt0 ON (+ ((- (vt0.c0))));
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1 CROSS JOIN vt0 ON (+ ((- (vt0.c0)))) WHERE ((- ((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))))) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1 CROSS JOIN vt0 ON (+ ((- (vt0.c0)))) WHERE ((NOT ((- ((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))))))) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1 CROSS JOIN vt0 ON (+ ((- (vt0.c0)))) WHERE ((((- ((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))))) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1 CROSS JOIN vt0 ON (+ ((- (vt0.c0))));
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((((((((((((vt1.c0, vt1.c0, vt1.c0))=((vt1.c0, -613326545, vt0.c0))))AND((((('859696561')OR(vt0.c0)))OR(vt0.c0)))))AND((~ (vt0.c0)))))AND(vt1.c0)))OR(UNICODE(vt0.c0)))) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((NOT ((((((((((((vt1.c0, vt1.c0, vt1.c0))==((vt1.c0, -613326545, vt0.c0))))AND((((('859696561')OR(vt0.c0)))OR(vt0.c0)))))AND((~ (vt0.c0)))))AND(vt1.c0)))OR(UNICODE(vt0.c0)))))) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((((((((((((((vt1.c0, vt1.c0, vt1.c0))==((vt1.c0, -613326545, vt0.c0))))AND((((('859696561')OR(vt0.c0)))OR(vt0.c0)))))AND((~ (vt0.c0)))))AND(vt1.c0)))OR(UNICODE(vt0.c0)))) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING ((((((((vt1.c0)OR(COUNT(*))))OR(AVG(COUNT(*)))))OR(SUM(GROUP_CONCAT(NULL)))))AND(AVG(TOTAL(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING (NOT (((((((((vt1.c0)OR(COUNT(*))))OR(AVG(COUNT(*)))))OR(SUM(GROUP_CONCAT(NULL)))))AND(AVG(TOTAL(vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING ((((((((((vt1.c0)OR(COUNT(*))))OR(AVG(COUNT(*)))))OR(SUM(GROUP_CONCAT(NULL)))))AND(AVG(TOTAL(vt0.c0))))) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 END)AND(CAST(x'' AS TEXT)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((CASE WHEN vt1.c0 THEN vt1.c0 END)AND(CAST(x'' AS TEXT)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((((CASE WHEN vt1.c0 THEN vt1.c0 END)AND(CAST(x'' AS TEXT)))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE ((x'2d2a' IN ()) COLLATE NOCASE) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT ((x'2d2a' IN ()) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((((x'2d2a' IN ()) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1 NOT INDEXED, vt0 WHERE (((CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 END)>(vt0.c0 COLLATE RTRIM))) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT (((CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 END)>(vt0.c0 COLLATE RTRIM))))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((((CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 END)>(vt0.c0 COLLATE RTRIM))) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((TOTAL(COUNT(AVG(vt1.c0)))) NOT BETWEEN (((vt1.c0) NOT BETWEEN (SUM(AVG(vt1.c0))) AND (GROUP_CONCAT(SUM(vt1.c0))))) AND (GROUP_CONCAT(vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((TOTAL(COUNT(AVG(vt1.c0)))) NOT BETWEEN (((vt1.c0) NOT BETWEEN (SUM(AVG(vt1.c0))) AND (GROUP_CONCAT(SUM(vt1.c0))))) AND (GROUP_CONCAT(vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((TOTAL(COUNT(AVG(vt1.c0)))) NOT BETWEEN (((vt1.c0) NOT BETWEEN (SUM(AVG(vt1.c0))) AND (GROUP_CONCAT(SUM(vt1.c0))))) AND (GROUP_CONCAT(vt1.c0)))) ISNULL);
SELECT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE) IS FALSE)) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0 COLLATE NOCASE) IS FALSE)))) UNION ALL SELECT vt1.c0 FROM vt1 NOT INDEXED WHERE (((((vt1.c0 COLLATE NOCASE) IS FALSE)) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) NOT BETWEEN (((1456943543)&(vt0.c0))) AND (vt0.c0))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((vt0.c0 COLLATE BINARY) NOT BETWEEN (((1456943543)&(vt0.c0))) AND (vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0 COLLATE BINARY) NOT BETWEEN (((1456943543)&(vt0.c0))) AND (vt0.c0))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((NULLIF(vt1.c0, '-785459813')) NOT BETWEEN ((vt1.c0 IN ())) AND (CAST(vt1.c0 AS INTEGER)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((NULLIF(vt1.c0, '-785459813')) NOT BETWEEN ((vt1.c0 IN ())) AND (CAST(vt1.c0 AS INTEGER)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((NULLIF(vt1.c0, '-785459813')) NOT BETWEEN ((vt1.c0 IN ())) AND (CAST(vt1.c0 AS INTEGER)))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING GROUP_CONCAT(COUNT(vt0.c0)) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (GROUP_CONCAT(COUNT(vt0.c0)))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING ((GROUP_CONCAT(COUNT(vt0.c0))) ISNULL);
SELECT ALL vt1.c0 FROM vt1, vt0;
SELECT vt1.c0 FROM vt1, vt0 WHERE (((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)))IS(vt0.c0 COLLATE NOCASE))) UNION ALL SELECT vt1.c0 FROM vt1, vt0 WHERE ((NOT (((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)))IS(vt0.c0 COLLATE NOCASE))))) UNION ALL SELECT vt1.c0 FROM vt1, vt0 WHERE (((((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)))IS(vt0.c0 COLLATE NOCASE))) ISNULL));
SELECT ALL vt1.c0 FROM vt1, vt0;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE (((((vt0.c0)<>(vt1.c0))) NOT BETWEEN (((vt1.c0)<(vt1.c0))) AND (CASE vt0.c0  WHEN 0.019349924500961402 THEN vt1.c0 ELSE vt0.c0 END))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (((((vt0.c0)!=(vt1.c0))) NOT BETWEEN (((vt1.c0)<(vt1.c0))) AND (CASE vt0.c0  WHEN 0.019349924500961402 THEN vt1.c0 ELSE vt0.c0 END))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE (((((((vt0.c0)!=(vt1.c0))) NOT BETWEEN (((vt1.c0)<(vt1.c0))) AND (CASE vt0.c0  WHEN 0.019349924500961402 THEN vt1.c0 ELSE vt0.c0 END))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((QUOTE(vt1.c0)) BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND (((vt1.c0)AND(vt1.c0))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((QUOTE(vt1.c0)) BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND (((vt1.c0)AND(vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((QUOTE(vt1.c0)) BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND (((vt1.c0)AND(vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING ((TOTAL(vt0.c0))=(0X7e645b62)) UNION ALL SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING (NOT (((TOTAL(vt0.c0))==(0x7e645b62)))) UNION ALL SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING ((((TOTAL(vt0.c0))=(0x7e645b62))) ISNULL);
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING ((TOTAL(vt0.c0))=(0X7e645b62)) UNION ALL SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING (NOT (((TOTAL(vt0.c0))==(0x7e645b62)))) UNION ALL SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING ((((TOTAL(vt0.c0))=(0x7e645b62))) ISNULL);
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT ALL SUM((((((((('-154786204')OR((vt0.c0 IN (vt0.c0, vt0.c0)))))OR(x'aa56')))AND(vt0.c0 COLLATE NOCASE)))AND(((((vt0.c0)AND(vt0.c0)))AND(NULL))))) FROM vt0 ORDER BY SQLITE_SOURCE_ID() COLLATE RTRIM  NULLS FIRST;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (vt0.c0) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((('^s', vt0.c0, 1.456943543E9))<>((vt0.c0, vt0.c0, vt0.c0))))IS NOT(CAST(vt0.c0 AS TEXT)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((('^s', vt0.c0, 1.456943543E9))<>((vt0.c0, vt0.c0, vt0.c0))))IS NOT(CAST(vt0.c0 AS TEXT)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((('^s', vt0.c0, 1.456943543E9))<>((vt0.c0, vt0.c0, vt0.c0))))IS NOT(CAST(vt0.c0 AS TEXT)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (CASE WHEN CAST(vt1.c0 AS TEXT) THEN ((vt1.c0)%(0Xffffffff889c317f)) ELSE ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) END) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (CASE WHEN CAST(vt1.c0 AS TEXT) THEN ((vt1.c0)%(0Xffffffff889c317f)) ELSE ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) END))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((CASE WHEN CAST(vt1.c0 AS TEXT) THEN ((vt1.c0)%(0xffffffff889c317f)) ELSE ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) END) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON ((ABS(vt0.c0)) NOT BETWEEN (NULL) AND (((vt1.c0) ISNULL))) GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON ((ABS(vt0.c0)) NOT BETWEEN (NULL) AND (((vt1.c0) ISNULL))) GROUP BY vt1.c0, vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON ((ABS(vt0.c0)) NOT BETWEEN (NULL) AND (((vt1.c0) ISNULL))) GROUP BY vt1.c0, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON ((ABS(vt0.c0)) NOT BETWEEN (NULL) AND (((vt1.c0) ISNULL))) GROUP BY vt1.c0, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON ((ABS(vt0.c0)) NOT BETWEEN (NULL) AND (((vt1.c0) ISNULL))) GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON ((ABS(vt0.c0)) NOT BETWEEN (NULL) AND (((vt1.c0) ISNULL))) GROUP BY vt1.c0, vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON ((ABS(vt0.c0)) NOT BETWEEN (NULL) AND (((vt1.c0) ISNULL))) GROUP BY vt1.c0, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON ((ABS(vt0.c0)) NOT BETWEEN (NULL) AND (((vt1.c0) ISNULL))) GROUP BY vt1.c0, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON ((ABS(vt0.c0)) NOT BETWEEN (NULL) AND (((vt1.c0) ISNULL))) GROUP BY vt1.c0, vt0.c0;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (CAST((('F<')+(vt0.c0)) AS NUMERIC)) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (CAST((('F<')+(vt0.c0)) AS NUMERIC)))) UNION ALL SELECT ALL * FROM vt0 WHERE (((CAST((('F<')+(vt0.c0)) AS NUMERIC)) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((((((((((CAST(NULL AS BLOB))AND(((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))))AND((vt1.c0 IN ()))))AND((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))))AND(((vt1.c0) ISNULL))))OR(((NULL) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((((((((((((CAST(NULL AS BLOB))AND(((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))))AND((vt1.c0 IN ()))))AND((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))))AND(((vt1.c0) ISNULL))))OR(((NULL) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((((((((((((CAST(NULL AS BLOB))AND(((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))))AND((vt1.c0 IN ()))))AND((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))))AND(((vt1.c0) ISNULL))))OR(((NULL) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((((vt1.c0))<=((vt1.c0)))) NOT BETWEEN (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))) AND (vt1.c0))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((((((vt1.c0))<=((vt1.c0)))) NOT BETWEEN (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))) AND (vt1.c0))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((((((vt1.c0))<=((vt1.c0)))) NOT BETWEEN (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))) AND (vt1.c0))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM(vt0.c0)) BETWEEN ((TOTAL(vt0.c0) IN (vt0.c0))) AND (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((SUM(vt0.c0)) BETWEEN ((TOTAL(vt0.c0) IN (vt0.c0))) AND (COUNT(*))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((SUM(vt0.c0)) BETWEEN ((TOTAL(vt0.c0) IN (vt0.c0))) AND (COUNT(*)))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM(vt0.c0)) BETWEEN ((TOTAL(vt0.c0) IN (vt0.c0))) AND (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((SUM(vt0.c0)) BETWEEN ((TOTAL(vt0.c0) IN (vt0.c0))) AND (COUNT(*))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((SUM(vt0.c0)) BETWEEN ((TOTAL(vt0.c0) IN (vt0.c0))) AND (COUNT(*)))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE ((+ (CASE WHEN vt1.c0 THEN vt1.c0 WHEN '2124703849' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((+ (CASE WHEN vt1.c0 THEN vt1.c0 WHEN '2124703849' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((((+ (CASE WHEN vt1.c0 THEN vt1.c0 WHEN '2124703849' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN vt1 ON CASE ((0xa3e6738) IS TRUE)  WHEN (+ (vt0.c0)) THEN CASE WHEN vt1.c0 THEN vt1.c0 END END;
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN vt1 ON CASE ((0Xa3e6738) IS TRUE)  WHEN (+ (vt0.c0)) THEN CASE WHEN vt1.c0 THEN vt1.c0 END END WHERE (CHANGES()) UNION SELECT DISTINCT * FROM vt0 FULL OUTER JOIN vt1 ON CASE ((0xa3e6738) IS TRUE)  WHEN (+ (vt0.c0)) THEN CASE WHEN vt1.c0 THEN vt1.c0 END END WHERE ((NOT (CHANGES()))) UNION SELECT DISTINCT * FROM vt0 FULL OUTER JOIN vt1 ON CASE ((0Xa3e6738) IS TRUE)  WHEN (+ (vt0.c0)) THEN CASE WHEN vt1.c0 THEN vt1.c0 END END WHERE (((CHANGES()) ISNULL));
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN vt1 ON CASE ((0xa3e6738) IS TRUE)  WHEN (+ (vt0.c0)) THEN CASE WHEN vt1.c0 THEN vt1.c0 END END;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (0.6759619895768564) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (0.6759619895768564))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((0.6759619895768564) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG(((AVG(vt0.c0)) BETWEEN (vt0.c0) AND (SUM(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (AVG(((AVG(vt0.c0)) BETWEEN (vt0.c0) AND (SUM(vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG(((AVG(vt0.c0)) BETWEEN (vt0.c0) AND (SUM(vt0.c0))))) ISNULL);
SELECT * FROM vt1;
SELECT ALL * FROM vt1 WHERE (((((json_extract(vt1.c0, vt1.c0))OR(vt1.c0)))AND((((NULL))>=((vt1.c0)))))) UNION ALL SELECT * FROM vt1 WHERE ((NOT (((((json_extract(vt1.c0, vt1.c0))OR(vt1.c0)))AND((((NULL))>=((vt1.c0)))))))) UNION ALL SELECT ALL * FROM vt1 WHERE (((((((json_extract(vt1.c0, vt1.c0))OR(vt1.c0)))AND((((NULL))>=((vt1.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (0.8174364093334889 COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (0.8174364093334889 COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt1 WHERE (((0.8174364093334889 COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (vt1.c0) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((NOT (vt1.c0))) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((vt1.c0) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING SQLITE_VERSION() UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (SQLITE_VERSION())) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((SQLITE_VERSION()) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING SQLITE_VERSION() UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (SQLITE_VERSION())) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((SQLITE_VERSION()) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (((((((vt1.c0)|(vt1.c0)))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)))OR(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((((vt1.c0)|(vt1.c0)))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)))OR(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((((((((vt1.c0)|(vt1.c0)))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)))OR(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt0, vt1;
SELECT DISTINCT vt1.c0 FROM vt0, vt1 WHERE (((CAST(vt0.c0 AS BLOB))<=(CAST(vt0.c0 AS TEXT)))) UNION SELECT DISTINCT vt1.c0 FROM vt0, vt1 WHERE ((NOT (((CAST(vt0.c0 AS BLOB))<=(CAST(vt0.c0 AS TEXT)))))) UNION SELECT DISTINCT vt1.c0 FROM vt0, vt1 WHERE (((((CAST(vt0.c0 AS BLOB))<=(CAST(vt0.c0 AS TEXT)))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt0, vt1;
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt0 WHERE (NULL COLLATE RTRIM) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, vt0 WHERE ((NOT (NULL COLLATE RTRIM))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, vt0 WHERE (((NULL COLLATE RTRIM) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING HEX(TOTAL(SUM(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING (NOT (HEX(TOTAL(SUM(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING ((HEX(TOTAL(SUM(vt0.c0)))) ISNULL);
SELECT ALL * FROM vt1, vt0;
SELECT * FROM vt1, vt0 WHERE (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM) UNION ALL SELECT * FROM vt1, vt0 WHERE ((NOT (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM))) UNION ALL SELECT ALL * FROM vt1, vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM) ISNULL));
SELECT ALL * FROM vt1, vt0;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE ((((vt0.c0 IN ('gf')))OR(((vt0.c0)<>(vt1.c0))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT ((((vt0.c0 IN ('gf')))OR(((vt0.c0)!=(vt1.c0))))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((((((vt0.c0 IN ('gf')))OR(((vt0.c0)<>(vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (vt1.c0) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((vt1.c0) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(vt0.c0)) IS TRUE) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((TOTAL(vt0.c0)) IS TRUE))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((TOTAL(vt0.c0)) IS TRUE)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(vt0.c0)) IS TRUE) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((TOTAL(vt0.c0)) IS TRUE))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((TOTAL(vt0.c0)) IS TRUE)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((vt1.c0)%(vt1.c0))) IS FALSE)) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0)%(vt1.c0))) IS FALSE)))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((((((vt1.c0)%(vt1.c0))) IS FALSE)) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))AND(CAST(vt0.c0 AS BLOB)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))AND(CAST(vt0.c0 AS BLOB)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))AND(CAST(vt0.c0 AS BLOB)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, vt1 WHERE ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN ())) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt0, vt1 WHERE ((NOT ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN ())))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt0, vt1 WHERE ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN ())) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((SUM(COUNT(*)))=(MAX(NULL))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((SUM(COUNT(*)))=(MAX(NULL))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((SUM(COUNT(*)))=(MAX(NULL)))) ISNULL);
SELECT vt1.c0 FROM vt0, vt1;
SELECT vt1.c0 FROM vt0, vt1 WHERE (SUBSTR(0X6d30a562, ((vt0.c0)OR(vt0.c0)))) UNION ALL SELECT vt1.c0 FROM vt0, vt1 WHERE ((NOT (SUBSTR(0x6d30a562, ((vt0.c0)OR(vt0.c0)))))) UNION ALL SELECT vt1.c0 FROM vt0, vt1 WHERE (((SUBSTR(0x6d30a562, ((vt0.c0)OR(vt0.c0)))) ISNULL));
SELECT vt1.c0 FROM vt0, vt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CAST(vt0.c0 AS INTEGER) COLLATE NOCASE) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CAST(vt0.c0 AS INTEGER) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt1.c0 FROM vt1 NOT INDEXED, vt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0 WHERE ((((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN (((vt0.c0)-(vt0.c0))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1, vt0 WHERE ((NOT ((((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN (((vt0.c0)-(vt0.c0))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, vt0 WHERE ((((((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN (((vt0.c0)-(vt0.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 NOT INDEXED, vt0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON ((vt0.c0 COLLATE BINARY)%(vt0.c0)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON ((vt0.c0 COLLATE BINARY)%(vt0.c0)) GROUP BY vt1.c0 HAVING ((GROUP_CONCAT(vt0.c0))|(AVG(AVG(vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON ((vt0.c0 COLLATE BINARY)%(vt0.c0)) GROUP BY vt1.c0 HAVING (NOT (((GROUP_CONCAT(vt0.c0))|(AVG(AVG(vt1.c0)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON ((vt0.c0 COLLATE BINARY)%(vt0.c0)) GROUP BY vt1.c0 HAVING ((((GROUP_CONCAT(vt0.c0))|(AVG(AVG(vt1.c0))))) ISNULL);
SELECT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE ((((vt1.c0)<>(vt1.c0)) IN ())) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0)<>(vt1.c0)) IN ())))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((((((vt1.c0)<>(vt1.c0)) IN ())) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE (CAST((vt1.c0 IN ()) AS REAL)) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (CAST((vt1.c0 IN ()) AS REAL)))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE (((CAST((vt1.c0 IN ()) AS REAL)) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 WHERE (((((vt1.c0) NOT NULL))|(CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 END))) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 WHERE ((NOT (((((vt1.c0) NOT NULL))|(CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 END))))) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 WHERE (((((((vt1.c0) NOT NULL))|(CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 END))) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MIN(TOTAL(vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MIN(TOTAL(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN(TOTAL(vt0.c0))) ISNULL);
SELECT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)>(vt1.c0 COLLATE RTRIM))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)>(vt1.c0 COLLATE RTRIM))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)>(vt1.c0 COLLATE RTRIM))) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE (((((vt0.c0) IS TRUE)) ISNULL)) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (((((vt0.c0) IS TRUE)) ISNULL)))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE (((((((vt0.c0) IS TRUE)) ISNULL)) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR((vt1.c0 IN ())))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR((vt1.c0 IN ())))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR((vt1.c0 IN ())))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING 0.5547441107659996 UNION ALL SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING (NOT (0.5547441107659996)) UNION ALL SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING ((0.5547441107659996) ISNULL);
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING 0.5547441107659996 UNION ALL SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING (NOT (0.5547441107659996)) UNION ALL SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING ((0.5547441107659996) ISNULL);
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (vt1.c0) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT (vt1.c0))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((vt1.c0) ISNULL));
SELECT vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT DISTINCT * FROM vt1 INNER JOIN vt0 ON (vt0.c0 IN ()) COLLATE RTRIM COLLATE NOCASE;
SELECT DISTINCT * FROM vt1 INNER JOIN vt0 ON (vt0.c0 IN ()) COLLATE RTRIM COLLATE NOCASE WHERE (((json_array_length(vt1.c0))==((vt1.c0 IN (vt1.c0, vt0.c0))))) UNION SELECT DISTINCT * FROM vt1 INNER JOIN vt0 ON (vt0.c0 IN ()) COLLATE RTRIM COLLATE NOCASE WHERE ((NOT (((json_array_length(vt1.c0))==((vt1.c0 IN (vt1.c0, vt0.c0))))))) UNION SELECT DISTINCT * FROM vt1 INNER JOIN vt0 ON (vt0.c0 IN ()) COLLATE RTRIM COLLATE NOCASE WHERE (((((json_array_length(vt1.c0))=((vt1.c0 IN (vt1.c0, vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1 INNER JOIN vt0 ON (vt0.c0 IN ()) COLLATE RTRIM COLLATE NOCASE;
SELECT ALL vt1.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON ((SUBSTR(vt0.c0, vt0.c0)) IS FALSE) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON ((SUBSTR(vt0.c0, vt0.c0)) IS FALSE) WHERE ((((TYPEOF(vt1.c0), ((vt0.c0) NOT BETWEEN (vt1.c0) AND (0Xffffffffac73fa55)), ((vt0.c0) NOTNULL)))>=((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt1.c0)))OR(vt1.c0)), -2.131940762E9, (~ (vt0.c0)))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON ((SUBSTR(vt0.c0, vt0.c0)) IS FALSE) WHERE ((NOT ((((TYPEOF(vt1.c0), ((vt0.c0) NOT BETWEEN (vt1.c0) AND (0Xffffffffac73fa55)), ((vt0.c0) NOTNULL)))>=((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt1.c0)))OR(vt1.c0)), -2.131940762E9, (~ (vt0.c0)))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON ((SUBSTR(vt0.c0, vt0.c0)) IS FALSE) WHERE ((((((TYPEOF(vt1.c0), ((vt0.c0) NOT BETWEEN (vt1.c0) AND (0Xffffffffac73fa55)), ((vt0.c0) NOTNULL)))>=((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt1.c0)))OR(vt1.c0)), -2.131940762E9, (~ (vt0.c0)))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON ((SUBSTR(vt0.c0, vt0.c0)) IS FALSE) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING GROUP_CONCAT(TOTAL(COUNT(vt1.c0)) COLLATE BINARY) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (GROUP_CONCAT(TOTAL(COUNT(vt1.c0)) COLLATE BINARY))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((GROUP_CONCAT(TOTAL(COUNT(vt1.c0)) COLLATE BINARY)) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((+ ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((+ ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))))) UNION ALL SELECT * FROM vt0 WHERE ((((+ ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0, vt1;
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0, vt1 WHERE ((((vt1.c0) IS TRUE) IN ())) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0, vt1 WHERE ((NOT ((((vt1.c0) IS TRUE) IN ())))) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0, vt1 WHERE ((((((vt1.c0) IS TRUE) IN ())) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0, vt1;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (CAST(vt1.c0 AS TEXT)) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((NOT (CAST(vt1.c0 AS TEXT)))) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((CAST(vt1.c0 AS TEXT)) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MIN(COUNT(MIN(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MIN(COUNT(MIN(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN(COUNT(MIN(vt0.c0)))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((~ (x''))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((~ (x''))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((~ (x''))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0;
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((~ (vt1.c0 COLLATE RTRIM))) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((NOT ((~ (vt1.c0 COLLATE RTRIM))))) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((((~ (vt1.c0 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (NULLIF('503881549', 0.6045208901356679)) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (NULLIF('503881549', 0.6045208901356679)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((NULLIF('503881549', 0.6045208901356679)) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING NULL UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (NULL)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((NULL) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING NULL UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (NULL)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((NULL) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 WHERE (((vt1.c0) BETWEEN (vt0.c0) AND (((vt1.c0)GLOB(-1835198857))))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((NOT (((vt1.c0) BETWEEN (vt0.c0) AND (((vt1.c0)GLOB(-1835198857))))))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 WHERE (((((vt1.c0) BETWEEN (vt0.c0) AND (((vt1.c0)GLOB(-1835198857))))) ISNULL));
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0;
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0, vt1;
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0, vt1 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt1.c0)<(vt1.c0)), (0.6265211862173458 IN (vt0.c0)), ((vt0.c0)<(0.3742773961389909)))) AND (((vt0.c0 IN (vt0.c0, vt0.c0)), TRIM('-1317772139'), vt1.c0 COLLATE NOCASE)))) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0, vt1 WHERE ((NOT ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt1.c0)<(vt1.c0)), (0.6265211862173458 IN (vt0.c0)), ((vt0.c0)<(0.3742773961389909)))) AND (((vt0.c0 IN (vt0.c0, vt0.c0)), TRIM('-1317772139'), vt1.c0 COLLATE NOCASE)))))) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0, vt1 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt1.c0)<(vt1.c0)), (0.6265211862173458 IN (vt0.c0)), ((vt0.c0)<(0.3742773961389909)))) AND (((vt0.c0 IN (vt0.c0, vt0.c0)), TRIM('-1317772139'), vt1.c0 COLLATE NOCASE)))) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0, vt1;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1 WHERE (CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 END AS NUMERIC)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, vt1 WHERE ((NOT (CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 END AS NUMERIC)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, vt1 WHERE (((CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 END AS NUMERIC)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MAX(COUNT(*)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MAX(COUNT(*)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MAX(COUNT(*))) ISNULL);
SELECT ALL vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON ((vt0.c0)>>(((vt1.c0)/(vt1.c0))));
SELECT ALL vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON ((vt0.c0)>>(((vt1.c0)/(vt1.c0)))) WHERE (((vt0.c0 COLLATE RTRIM)&(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON ((vt0.c0)>>(((vt1.c0)/(vt1.c0)))) WHERE ((NOT (((vt0.c0 COLLATE RTRIM)&(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON ((vt0.c0)>>(((vt1.c0)/(vt1.c0)))) WHERE (((((vt0.c0 COLLATE RTRIM)&(vt0.c0))) ISNULL));
SELECT ALL vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON ((vt0.c0)>>(((vt1.c0)/(vt1.c0))));
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0, vt1;
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0, vt1 WHERE (CAST(CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 END AS NUMERIC)) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0, vt1 WHERE ((NOT (CAST(CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 END AS NUMERIC)))) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0, vt1 WHERE (((CAST(CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 END AS NUMERIC)) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0, vt1;
SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, vt0 WHERE (((((vt1.c0)<<(vt1.c0))) NOTNULL)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt1, vt0 WHERE ((NOT (((((vt1.c0)<<(vt1.c0))) NOTNULL)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt1, vt0 WHERE (((((((vt1.c0)<<(vt1.c0))) NOTNULL)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, vt1 NOT INDEXED GROUP BY vt1.c0 HAVING '\n9' UNION ALL SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING (NOT ('\n9')) UNION ALL SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING (('\n9') ISNULL);
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, vt1 NOT INDEXED GROUP BY vt1.c0 HAVING '\n9' UNION ALL SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING (NOT ('\n9')) UNION ALL SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING (('\n9') ISNULL);
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c0 FROM vt0, vt1;
SELECT vt0.c0 FROM vt0, vt1 WHERE (vt1.c0) UNION ALL SELECT vt0.c0 FROM vt0, vt1 WHERE ((NOT (vt1.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0, vt1 WHERE (((vt1.c0) ISNULL));
SELECT ALL vt0.c0 FROM vt0, vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c0 IN ())))>((vt1.c0)))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((((vt1.c0 IN ())))>((vt1.c0)))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((((vt1.c0 IN ())))>((vt1.c0)))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (0.41269990171324733) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (0.41269990171324733))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((0.41269990171324733) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING load_extension(COUNT(MAX(vt1.c0)), ((((COUNT(*))AND(TOTAL(vt1.c0))))OR(MAX(MIN(COUNT(*)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (load_extension(COUNT(MAX(vt1.c0)), ((((COUNT(*))AND(TOTAL(vt1.c0))))OR(MAX(MIN(COUNT(*)))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((load_extension(COUNT(MAX(vt1.c0)), ((((COUNT(*))AND(TOTAL(vt1.c0))))OR(MAX(MIN(COUNT(*))))))) ISNULL);
SELECT ALL * FROM vt0, vt1;
SELECT * FROM vt0, vt1 WHERE (((((vt1.c0)AND(CASE WHEN vt0.c0 THEN vt0.c0 END)))AND(((vt0.c0)-(vt0.c0))))) UNION ALL SELECT * FROM vt0, vt1 WHERE ((NOT (((((vt1.c0)AND(CASE WHEN vt0.c0 THEN vt0.c0 END)))AND(((vt0.c0)-(vt0.c0))))))) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE (((((((vt1.c0)AND(CASE WHEN vt0.c0 THEN vt0.c0 END)))AND(((vt0.c0)-(vt0.c0))))) ISNULL));
SELECT ALL * FROM vt0, vt1;
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0, vt1;
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((((((((((vt0.c0)OR(vt1.c0)))AND(-8.9713022E7)))OR(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (CAST(vt1.c0 AS REAL)) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.20412465293749427 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((NOT (((((((((((vt0.c0)OR(vt1.c0)))AND(-8.9713022E7)))OR(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (CAST(vt1.c0 AS REAL)) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.20412465293749427 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))))) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((((((((((((vt0.c0)OR(vt1.c0)))AND(-8.9713022E7)))OR(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (CAST(vt1.c0 AS REAL)) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.20412465293749427 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ISNULL));
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0, vt1;
SELECT vt0.c0, vt1.c0 FROM vt1 NATURAL JOIN vt0 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt1 NATURAL JOIN vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt1 NATURAL JOIN vt0 WHERE ((NOT ((NOT (vt0.c0))))) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt1 NATURAL JOIN vt0 WHERE ((((NOT (vt0.c0))) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt1 NATURAL JOIN vt0 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(vt0.c0))IS(MAX(TOTAL(MIN(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((GROUP_CONCAT(vt0.c0))IS(MAX(TOTAL(MIN(vt0.c0))))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((GROUP_CONCAT(vt0.c0))IS(MAX(TOTAL(MIN(vt0.c0)))))) ISNULL);
SELECT vt0.c0 FROM vt1, vt0;
SELECT vt0.c0 FROM vt1, vt0 WHERE (((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM) UNION ALL SELECT vt0.c0 FROM vt1 NOT INDEXED, vt0 WHERE ((NOT (((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM))) UNION ALL SELECT vt0.c0 FROM vt1, vt0 WHERE (((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM) ISNULL));
SELECT vt0.c0 FROM vt1, vt0;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE (CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT vt1.c0, vt0.c0 FROM vt0 INNER JOIN vt1 ON vt1.c0 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0 INNER JOIN vt1 ON vt1.c0 WHERE ((((0.37434517294419767, vt1.c0, vt1.c0)) NOT BETWEEN ((((vt1.c0) ISNULL), vt1.c0, NULLIF(DISTINCT 98942110, vt0.c0))) AND ((((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)), 'B]5W?<', CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END)))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt0 NOT INDEXED INNER JOIN vt1 ON vt1.c0 WHERE ((NOT ((((0.37434517294419767, vt1.c0, vt1.c0)) NOT BETWEEN ((((vt1.c0) ISNULL), vt1.c0, NULLIF(DISTINCT 98942110, vt0.c0))) AND ((((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)), 'B]5W?<', CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END)))))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt0 INNER JOIN vt1 ON vt1.c0 WHERE ((((((0.37434517294419767, vt1.c0, vt1.c0)) NOT BETWEEN ((((vt1.c0) ISNULL), vt1.c0, NULLIF(DISTINCT 98942110, vt0.c0))) AND ((((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)), 'B]5W?<', CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END)))) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt0 INNER JOIN vt1 ON vt1.c0 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING TOTAL(((MAX(vt1.c0)) ISNULL)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (TOTAL(((MAX(vt1.c0)) ISNULL)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((TOTAL(((MAX(vt1.c0)) ISNULL))) ISNULL);
SELECT vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((((vt0.c0) IS TRUE))<<(((vt1.c0)*(vt1.c0))))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT (((((vt0.c0) IS TRUE))<<(((vt1.c0)*(vt1.c0))))))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((((((vt0.c0) IS TRUE))<<(((vt1.c0)*(vt1.c0))))) ISNULL));
SELECT vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (0.10142949022009407))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((NOT (0.10142949022009407))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((NOT (0.10142949022009407))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((('-370434478') ISNULL)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((('-370434478') ISNULL)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((('-370434478') ISNULL)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING '-888462890' UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ('-888462890')) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (('-888462890') ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING '-888462890' UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ('-888462890')) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (('-888462890') ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 NOT INDEXED WHERE ('X\\n*NT' COLLATE BINARY) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ('X\\n*NT' COLLATE BINARY))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((('X\\n*NT' COLLATE BINARY) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (CAST(vt1.c0 AS REAL)) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (CAST(vt1.c0 AS REAL)))) UNION SELECT DISTINCT * FROM vt1 WHERE (((CAST(vt1.c0 AS REAL)) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((((vt1.c0)%(NULL)) IN ())) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0)%(NULL)) IN ())))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((((vt1.c0)%(NULL)) IN ())) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING SUM((vt0.c0 IN ())) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (SUM((vt0.c0 IN ())))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM((vt0.c0 IN ()))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING SUM((vt0.c0 IN ())) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (SUM((vt0.c0 IN ())))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM((vt0.c0 IN ()))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (CASE ((vt0.c0)<<(vt0.c0))  WHEN ((vt0.c0)||(vt0.c0)) THEN CAST(vt0.c0 AS TEXT) WHEN '-2131940762' THEN vt0.c0 COLLATE BINARY WHEN (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0, NULL, vt0.c0, 0Xffffffffa9216fa4, vt0.c0))) THEN TYPEOF(vt0.c0) WHEN (vt0.c0 IN ()) THEN vt0.c0 WHEN TRIM(DISTINCT '171861816', '-0.0') THEN '852680611' ELSE (('Qk') IS TRUE) END) UNION ALL SELECT * FROM vt0 WHERE ((NOT (CASE ((vt0.c0)<<(vt0.c0))  WHEN ((vt0.c0)||(vt0.c0)) THEN CAST(vt0.c0 AS TEXT) WHEN '-2131940762' THEN vt0.c0 COLLATE BINARY WHEN (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0, NULL, vt0.c0, 0Xffffffffa9216fa4, vt0.c0))) THEN TYPEOF(vt0.c0) WHEN (vt0.c0 IN ()) THEN vt0.c0 WHEN TRIM(DISTINCT '171861816', '-0.0') THEN '852680611' ELSE (('Qk') IS TRUE) END))) UNION ALL SELECT * FROM vt0 WHERE (((CASE ((vt0.c0)<<(vt0.c0))  WHEN ((vt0.c0)||(vt0.c0)) THEN CAST(vt0.c0 AS TEXT) WHEN '-2131940762' THEN vt0.c0 COLLATE BINARY WHEN (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0, NULL, vt0.c0, 0Xffffffffa9216fa4, vt0.c0))) THEN TYPEOF(vt0.c0) WHEN (vt0.c0 IN ()) THEN vt0.c0 WHEN TRIM(DISTINCT '171861816', '-0.0') THEN '852680611' ELSE (('Qk') IS TRUE) END) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM)<>(((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0 COLLATE RTRIM)<>(((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((vt1.c0 COLLATE RTRIM)!=(((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (vt1.c0) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((vt1.c0) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (AVG(COUNT(*)) IN (TOTAL(TOTAL(AVG(TOTAL(GROUP_CONCAT(vt0.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((AVG(COUNT(*)) IN (TOTAL(TOTAL(AVG(TOTAL(GROUP_CONCAT(vt0.c0))))))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((AVG(COUNT(*)) IN (TOTAL(TOTAL(AVG(TOTAL(GROUP_CONCAT(vt0.c0)))))))) ISNULL);
SELECT vt0.c0, vt1.c0 FROM vt1, vt0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((((NOT (vt0.c0))) BETWEEN (((vt1.c0) IS TRUE)) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (0xffffffffa9624dc1))))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((NOT ((((NOT (vt0.c0))) BETWEEN (((vt1.c0) IS TRUE)) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (0xffffffffa9624dc1))))))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((((((NOT (vt0.c0))) BETWEEN (((vt1.c0) IS TRUE)) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (0Xffffffffa9624dc1))))) ISNULL));
SELECT vt0.c0, vt1.c0 FROM vt1, vt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((vt1.c0 IN (vt1.c0, vt1.c0)))==(((vt1.c0)+(vt1.c0))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0 IN (vt1.c0, vt1.c0)))==(((vt1.c0)+(vt1.c0))))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((((vt1.c0 IN (vt1.c0, vt1.c0)))=(((vt1.c0)+(vt1.c0))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING COUNT(((((((((COUNT(GROUP_CONCAT(-785459813)))OR(AVG(vt0.c0))))OR(vt1.c0)))AND(vt1.c0)))AND(vt0.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING (NOT (COUNT(((((((((COUNT(GROUP_CONCAT(-785459813)))OR(AVG(vt0.c0))))OR(vt1.c0)))AND(vt1.c0)))AND(vt0.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING ((COUNT(((((((((COUNT(GROUP_CONCAT(-785459813)))OR(AVG(vt0.c0))))OR(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)))) ISNULL);
SELECT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (CASE CAST('' AS INTEGER)  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN (vt1.c0 IN (vt1.c0)) END) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (CASE CAST('' AS INTEGER)  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN (vt1.c0 IN (vt1.c0)) END))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((CASE CAST('' AS INTEGER)  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN (vt1.c0 IN (vt1.c0)) END) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((2062872611)<<(((0.6298803439280349)<<(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((2062872611)<<(((0.6298803439280349)<<(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((2062872611)<<(((0.6298803439280349)<<(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((((vt1.c0)) NOT BETWEEN (((NOT (vt1.c0)))) AND (((vt1.c0 IN ()))))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT ((((vt1.c0)) NOT BETWEEN (((NOT (vt1.c0)))) AND (((vt1.c0 IN ()))))))) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((((((vt1.c0)) NOT BETWEEN (((NOT (vt1.c0)))) AND (((vt1.c0 IN ()))))) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING CASE (GROUP_CONCAT(MAX(vt1.c0)) IN ())  WHEN (vt1.c0 IN ()) THEN ((MAX(vt1.c0))&(vt1.c0)) ELSE COUNT(vt1.c0) END UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (CASE (GROUP_CONCAT(MAX(vt1.c0)) IN ())  WHEN (vt1.c0 IN ()) THEN ((MAX(vt1.c0))&(vt1.c0)) ELSE COUNT(vt1.c0) END)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((CASE (GROUP_CONCAT(MAX(vt1.c0)) IN ())  WHEN (vt1.c0 IN ()) THEN ((MAX(vt1.c0))&(vt1.c0)) ELSE COUNT(vt1.c0) END) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING CASE (GROUP_CONCAT(MAX(vt1.c0)) IN ())  WHEN (vt1.c0 IN ()) THEN ((MAX(vt1.c0))&(vt1.c0)) ELSE COUNT(vt1.c0) END UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (CASE (GROUP_CONCAT(MAX(vt1.c0)) IN ())  WHEN (vt1.c0 IN ()) THEN ((MAX(vt1.c0))&(vt1.c0)) ELSE COUNT(vt1.c0) END)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((CASE (GROUP_CONCAT(MAX(vt1.c0)) IN ())  WHEN (vt1.c0 IN ()) THEN ((MAX(vt1.c0))&(vt1.c0)) ELSE COUNT(vt1.c0) END) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0, vt0.c0 FROM vt0, vt1;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 WHERE (NULLIF(vt1.c0, (((NULL, vt0.c0, vt1.c0))==((vt0.c0, vt0.c0, vt1.c0))))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 WHERE ((NOT (NULLIF(vt1.c0, (((NULL, vt0.c0, vt1.c0))==((vt0.c0, vt0.c0, vt1.c0))))))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt0, vt1 WHERE (((NULLIF(vt1.c0, (((NULL, vt0.c0, vt1.c0))=((vt0.c0, vt0.c0, vt1.c0))))) ISNULL));
SELECT vt1.c0, vt0.c0 FROM vt0, vt1;
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0, vt1;
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0, vt1 WHERE (vt0.c0) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0, vt1 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0, vt1 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0, vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((((CAST(vt1.c0 AS TEXT))AND(CAST(vt1.c0 AS NUMERIC))))OR((vt1.c0 IN ())))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((CAST(vt1.c0 AS TEXT))AND(CAST(vt1.c0 AS NUMERIC))))OR((vt1.c0 IN ())))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((((CAST(vt1.c0 AS TEXT))AND(CAST(vt1.c0 AS NUMERIC))))OR((vt1.c0 IN ())))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((TOTAL(vt0.c0)))>((MIN(AVG(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((TOTAL(vt0.c0)))>((MIN(AVG(vt0.c0))))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((TOTAL(vt0.c0)))>((MIN(AVG(vt0.c0)))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 FULL OUTER JOIN vt1 ON ((vt0.c0)>(vt1.c0)) COLLATE RTRIM;
SELECT ALL vt0.c0 FROM vt0 FULL OUTER JOIN vt1 ON ((vt0.c0)>(vt1.c0)) COLLATE RTRIM WHERE (((COALESCE(DISTINCT vt0.c0, vt1.c0))>(CAST(vt0.c0 AS TEXT)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 FULL OUTER JOIN vt1 ON ((vt0.c0)>(vt1.c0)) COLLATE RTRIM WHERE ((NOT (((COALESCE(DISTINCT vt0.c0, vt1.c0))>(CAST(vt0.c0 AS TEXT)))))) UNION ALL SELECT vt0.c0 FROM vt0 FULL OUTER JOIN vt1 ON ((vt0.c0)>(vt1.c0)) COLLATE RTRIM WHERE (((((COALESCE(DISTINCT vt0.c0, vt1.c0))>(CAST(vt0.c0 AS TEXT)))) ISNULL));
SELECT ALL vt0.c0 FROM vt0 FULL OUTER JOIN vt1 ON ((vt0.c0)>(vt1.c0)) COLLATE RTRIM;
SELECT DISTINCT vt1.c0 FROM vt0, vt1;
SELECT DISTINCT vt1.c0 FROM vt0, vt1 WHERE ((vt0.c0 IN ())) UNION SELECT DISTINCT vt1.c0 FROM vt0, vt1 WHERE ((NOT ((vt0.c0 IN ())))) UNION SELECT DISTINCT vt1.c0 FROM vt0, vt1 WHERE ((((vt0.c0 IN ())) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt0, vt1;
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0 WHERE (TYPEOF(((vt0.c0)IS(vt1.c0)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1, vt0 WHERE ((NOT (TYPEOF(((vt0.c0)IS(vt1.c0)))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, vt0 WHERE (((TYPEOF(((vt0.c0)IS(vt1.c0)))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING COUNT((+ (vt1.c0))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING (NOT (COUNT((+ (vt1.c0))))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING ((COUNT((+ (vt1.c0)))) ISNULL);
SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING COUNT((+ (vt1.c0))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING (NOT (COUNT((+ (vt1.c0))))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING ((COUNT((+ (vt1.c0)))) ISNULL);
SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((LIKELY(DISTINCT vt0.c0) IN ())) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((LIKELY(DISTINCT vt0.c0) IN ())))) UNION ALL SELECT * FROM vt0 WHERE ((((LIKELY(DISTINCT vt0.c0) IN ())) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) ISNULL)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) ISNULL)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) ISNULL)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((((((vt1.c0)|(vt1.c0)))OR((+ (vt1.c0)))))AND((vt1.c0 IN ())))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((((vt1.c0)|(vt1.c0)))OR((+ (vt1.c0)))))AND((vt1.c0 IN ())))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((((((vt1.c0)|(vt1.c0)))OR((+ (vt1.c0)))))AND((vt1.c0 IN ())))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, vt0;
SELECT vt0.c0 FROM vt1, vt0 WHERE (((vt1.c0 COLLATE NOCASE)+(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) UNION ALL SELECT vt0.c0 FROM vt1, vt0 WHERE ((NOT (((vt1.c0 COLLATE NOCASE)+(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))))) UNION ALL SELECT vt0.c0 FROM vt1, vt0 WHERE (((((vt1.c0 COLLATE NOCASE)+(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ISNULL));
SELECT ALL vt0.c0 FROM vt1, vt0;
SELECT DISTINCT vt0.c0 FROM vt1, vt0;
SELECT DISTINCT vt0.c0 FROM vt1, vt0 WHERE ((~ ((vt1.c0 IN ())))) UNION SELECT DISTINCT vt0.c0 FROM vt1, vt0 WHERE ((NOT ((~ ((vt1.c0 IN ())))))) UNION SELECT DISTINCT vt0.c0 FROM vt1, vt0 WHERE ((((~ ((vt1.c0 IN ())))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt1, vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC))>((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((CAST(vt0.c0 AS NUMERIC))>((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((CAST(vt0.c0 AS NUMERIC))>((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING COUNT((~ (MAX(vt1.c0)))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (COUNT((~ (MAX(vt1.c0)))))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING ((COUNT((~ (MAX(vt1.c0))))) ISNULL);
SELECT * FROM vt0, vt1;
SELECT * FROM vt0, vt1 WHERE (CAST(vt0.c0 AS TEXT)) UNION ALL SELECT * FROM vt0, vt1 WHERE ((NOT (CAST(vt0.c0 AS TEXT)))) UNION ALL SELECT * FROM vt0, vt1 WHERE (((CAST(vt0.c0 AS TEXT)) ISNULL));
SELECT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((((x''))=((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((((x''))=((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((((x''))==((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (x'9f4a') GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT (x'9f4a'))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((x'9f4a') ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (CAST(x'' AS BLOB)) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CAST(x'' AS BLOB)))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((CAST(x'' AS BLOB)) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (SQLITE_VERSION()) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (SQLITE_VERSION()))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((SQLITE_VERSION()) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING (MIN(COUNT(vt0.c0)) IN ()) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING (NOT ((MIN(COUNT(vt0.c0)) IN ()))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING (((MIN(COUNT(vt0.c0)) IN ())) ISNULL);
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING (MIN(COUNT(vt0.c0)) IN ()) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING (NOT ((MIN(COUNT(vt0.c0)) IN ()))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING (((MIN(COUNT(vt0.c0)) IN ())) ISNULL);
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT * FROM vt0, vt1;
SELECT ALL * FROM vt0, vt1 WHERE (CAST(((vt0.c0)<(8.52680611E8)) AS NUMERIC)) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE ((NOT (CAST(((vt0.c0)<(8.52680611E8)) AS NUMERIC)))) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE (((CAST(((vt0.c0)<(8.52680611E8)) AS NUMERIC)) ISNULL));
SELECT * FROM vt0, vt1;
SELECT DISTINCT vt1.c0 FROM vt1, vt0;
SELECT DISTINCT vt1.c0 FROM vt1, vt0 WHERE (json_valid(((((0.48570365163576934)OR(NULL)))AND(vt0.c0)))) UNION SELECT DISTINCT vt1.c0 FROM vt1, vt0 WHERE ((NOT (json_valid(((((0.48570365163576934)OR(NULL)))AND(vt0.c0)))))) UNION SELECT DISTINCT vt1.c0 FROM vt1, vt0 WHERE (((json_valid(((((0.48570365163576934)OR(NULL)))AND(vt0.c0)))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1, vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (NULL) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (NULL))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((NULL) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING TOTAL(TOTAL(GROUP_CONCAT(MAX(MIN(COUNT(COUNT(*))))))) UNION ALL SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING (NOT (TOTAL(TOTAL(GROUP_CONCAT(MAX(MIN(COUNT(COUNT(*))))))))) UNION ALL SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING ((TOTAL(TOTAL(GROUP_CONCAT(MAX(MIN(COUNT(COUNT(*)))))))) ISNULL);
SELECT SUM((((vt0.c0)) NOT BETWEEN (((+ (vt1.c0)))) AND (((+ (vt1.c0)))))) FROM vt0, vt1 ORDER BY ((vt1.c0)<(CAST('jy⇞' AS REAL)))  NULLS LAST;
SELECT ALL vt1.c0 FROM vt0, vt1;
SELECT vt1.c0 FROM vt0, vt1 WHERE (CASE IFNULL(vt1.c0, vt1.c0)  WHEN CASE WHEN vt1.c0 THEN 0.6969353205450413 ELSE vt1.c0 END THEN IFNULL(vt0.c0, vt1.c0) END) UNION ALL SELECT vt1.c0 FROM vt0, vt1 WHERE ((NOT (CASE IFNULL(vt1.c0, vt1.c0)  WHEN CASE WHEN vt1.c0 THEN 0.6969353205450413 ELSE vt1.c0 END THEN IFNULL(vt0.c0, vt1.c0) END))) UNION ALL SELECT ALL vt1.c0 FROM vt0, vt1 WHERE (((CASE IFNULL(vt1.c0, vt1.c0)  WHEN CASE WHEN vt1.c0 THEN 0.6969353205450413 ELSE vt1.c0 END THEN IFNULL(vt0.c0, vt1.c0) END) ISNULL));
SELECT ALL vt1.c0 FROM vt0, vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND (('w\', vt1.c0, vt1.c0))))IS(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND (('w\', vt1.c0, vt1.c0))))IS(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND (('w\', vt1.c0, vt1.c0))))IS(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, vt0 WHERE (((vt1.c0)/(vt0.c0)) COLLATE BINARY) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt1, vt0 WHERE ((NOT (((vt1.c0)/(vt0.c0)) COLLATE BINARY))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt1, vt0 WHERE (((((vt1.c0)/(vt0.c0)) COLLATE BINARY) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(AVG(vt1.c0)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(AVG(vt1.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(AVG(vt1.c0))) ISNULL);
SELECT ALL * FROM vt0, vt1;
SELECT * FROM vt0, vt1 WHERE (((TRIM(vt0.c0, vt0.c0)) ISNULL)) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE ((NOT (((TRIM(vt0.c0, vt0.c0)) ISNULL)))) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE (((((TRIM(vt0.c0, vt0.c0)) ISNULL)) ISNULL));
SELECT ALL * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0 CROSS JOIN vt1 ON (((((((((vt0.c0)AND(vt1.c0)))AND('417252728')))OR(vt0.c0)))AND(vt0.c0)) IN ());
SELECT DISTINCT * FROM vt0 CROSS JOIN vt1 ON (((((((((vt0.c0)AND(vt1.c0)))AND('417252728')))OR(vt0.c0)))AND(vt0.c0)) IN ()) WHERE (((SQLITE_SOURCE_ID())%((((('-1883422052')OR(vt1.c0)))AND(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 CROSS JOIN vt1 ON (((((((((vt0.c0)AND(vt1.c0)))AND('417252728')))OR(vt0.c0)))AND(vt0.c0)) IN ()) WHERE ((NOT (((SQLITE_SOURCE_ID())%((((('-1883422052')OR(vt1.c0)))AND(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 CROSS JOIN vt1 ON (((((((((vt0.c0)AND(vt1.c0)))AND('417252728')))OR(vt0.c0)))AND(vt0.c0)) IN ()) WHERE (((((SQLITE_SOURCE_ID())%((((('-1883422052')OR(vt1.c0)))AND(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0 CROSS JOIN vt1 ON (((((((((vt0.c0)AND(vt1.c0)))AND('417252728')))OR(vt0.c0)))AND(vt0.c0)) IN ());
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (x'') GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (x''))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((x'') ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((NULL)<>(UNLIKELY(DISTINCT MAX(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((NULL)<>(UNLIKELY(DISTINCT MAX(vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((NULL)!=(UNLIKELY(DISTINCT MAX(vt0.c0))))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((NULL)<>(UNLIKELY(DISTINCT MAX(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((NULL)<>(UNLIKELY(DISTINCT MAX(vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((NULL)!=(UNLIKELY(DISTINCT MAX(vt0.c0))))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 NOT INDEXED WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT NULL)) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT NULL)))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT NULL)) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt1 INNER JOIN vt0 ON LENGTH('2943060592785800633-997089623364602869 1449-8R');
SELECT DISTINCT * FROM vt1 INNER JOIN vt0 ON LENGTH('2943060592785800633-997089623364602869 1449-8R') WHERE ((((vt1.c0)<(vt0.c0)) IN ())) UNION SELECT DISTINCT * FROM vt1 INNER JOIN vt0 ON LENGTH('2943060592785800633-997089623364602869 1449-8R') WHERE ((NOT ((((vt1.c0)<(vt0.c0)) IN ())))) UNION SELECT DISTINCT * FROM vt1 INNER JOIN vt0 ON LENGTH('2943060592785800633-997089623364602869 1449-8R') WHERE ((((((vt1.c0)<(vt0.c0)) IN ())) ISNULL));
SELECT DISTINCT * FROM vt1 INNER JOIN vt0 ON LENGTH('2943060592785800633-997089623364602869 1449-8R');
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (CAST(CASE vt1.c0  WHEN vt1.c0 THEN '386126088' ELSE vt1.c0 END AS TEXT)) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (CAST(CASE vt1.c0  WHEN vt1.c0 THEN '386126088' ELSE vt1.c0 END AS TEXT)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((CAST(CASE vt1.c0  WHEN vt1.c0 THEN '386126088' ELSE vt1.c0 END AS TEXT)) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX(IFNULL(DISTINCT vt0.c0, vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(IFNULL(DISTINCT vt0.c0, vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(IFNULL(DISTINCT vt0.c0, vt0.c0))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX(IFNULL(DISTINCT vt0.c0, vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(IFNULL(DISTINCT vt0.c0, vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(IFNULL(DISTINCT vt0.c0, vt0.c0))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM vt0, vt1;
SELECT * FROM vt0, vt1 WHERE (CASE WHEN ((vt1.c0)|('')) THEN (vt1.c0 IN ()) END) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE ((NOT (CASE WHEN ((vt1.c0)|('')) THEN (vt1.c0 IN ()) END))) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE (((CASE WHEN ((vt1.c0)|('')) THEN (vt1.c0 IN ()) END) ISNULL));
SELECT * FROM vt0, vt1;
SELECT DISTINCT vt0.c0 FROM vt0 CROSS JOIN vt1 ON STRFTIME((((vt0.c0, vt1.c0, vt0.c0))!=((vt1.c0, vt0.c0, vt1.c0))), CAST(vt0.c0 AS TEXT), vt1.c0 COLLATE NOCASE);
SELECT DISTINCT vt0.c0 FROM vt0 CROSS JOIN vt1 ON STRFTIME((((vt0.c0, vt1.c0, vt0.c0))!=((vt1.c0, vt0.c0, vt1.c0))), CAST(vt0.c0 AS TEXT), vt1.c0 COLLATE NOCASE) WHERE (vt1.c0) UNION SELECT DISTINCT vt0.c0 FROM vt0 CROSS JOIN vt1 ON STRFTIME((((vt0.c0, vt1.c0, vt0.c0))<>((vt1.c0, vt0.c0, vt1.c0))), CAST(vt0.c0 AS TEXT), vt1.c0 COLLATE NOCASE) WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT vt0.c0 FROM vt0 CROSS JOIN vt1 ON STRFTIME((((vt0.c0, vt1.c0, vt0.c0))!=((vt1.c0, vt0.c0, vt1.c0))), CAST(vt0.c0 AS TEXT), vt1.c0 COLLATE NOCASE) WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0 CROSS JOIN vt1 ON STRFTIME((((vt0.c0, vt1.c0, vt0.c0))!=((vt1.c0, vt0.c0, vt1.c0))), CAST(vt0.c0 AS TEXT), vt1.c0 COLLATE NOCASE);
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((vt0.c0) NOT BETWEEN (NULL COLLATE RTRIM) AND (((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0))))) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((NOT (((vt0.c0) NOT BETWEEN (NULL COLLATE RTRIM) AND (((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0))))))) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((((vt0.c0) NOT BETWEEN (NULL COLLATE RTRIM) AND (((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0))))) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING CASE (((vt1.c0)) BETWEEN ((GROUP_CONCAT(SUM(TOTAL(AVG(vt1.c0)))))) AND ((TOTAL(AVG(MIN(vt1.c0))))))  WHEN MIN(COUNT(vt1.c0)) THEN vt1.c0 WHEN AVG(vt1.c0) THEN COUNT(MIN(vt1.c0)) WHEN ((NULL) BETWEEN (vt1.c0) AND (MIN(SUM(vt1.c0)))) THEN COUNT(*) END UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (CASE (((vt1.c0)) BETWEEN ((GROUP_CONCAT(SUM(TOTAL(AVG(vt1.c0)))))) AND ((TOTAL(AVG(MIN(vt1.c0))))))  WHEN MIN(COUNT(vt1.c0)) THEN vt1.c0 WHEN AVG(vt1.c0) THEN COUNT(MIN(vt1.c0)) WHEN ((NULL) BETWEEN (vt1.c0) AND (MIN(SUM(vt1.c0)))) THEN COUNT(*) END)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((CASE (((vt1.c0)) BETWEEN ((GROUP_CONCAT(SUM(TOTAL(AVG(vt1.c0)))))) AND ((TOTAL(AVG(MIN(vt1.c0))))))  WHEN MIN(COUNT(vt1.c0)) THEN vt1.c0 WHEN AVG(vt1.c0) THEN COUNT(MIN(vt1.c0)) WHEN ((NULL) BETWEEN (vt1.c0) AND (MIN(SUM(vt1.c0)))) THEN COUNT(*) END) ISNULL);
SELECT ALL vt0.c0 FROM vt0, vt1;
SELECT vt0.c0 FROM vt0, vt1 WHERE (vt0.c0) UNION ALL SELECT vt0.c0 FROM vt0, vt1 WHERE ((NOT (vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0, vt1 WHERE (((vt0.c0) ISNULL));
SELECT ALL vt0.c0 FROM vt0, vt1;
SELECT DISTINCT vt1.c0 FROM vt0, vt1;
SELECT DISTINCT vt1.c0 FROM vt0, vt1 WHERE (((((((((((vt1.c0)AND(vt1.c0)))OR('1403186317')))OR(vt0.c0)))AND(vt1.c0)))>((vt0.c0 IN (vt1.c0))))) UNION SELECT DISTINCT vt1.c0 FROM vt0, vt1 WHERE ((NOT (((((((((((vt1.c0)AND(vt1.c0)))OR('1403186317')))OR(vt0.c0)))AND(vt1.c0)))>((vt0.c0 IN (vt1.c0))))))) UNION SELECT DISTINCT vt1.c0 FROM vt0, vt1 WHERE (((((((((((((vt1.c0)AND(vt1.c0)))OR('1403186317')))OR(vt0.c0)))AND(vt1.c0)))>((vt0.c0 IN (vt1.c0))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt0, vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (CASE WHEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) THEN ((vt1.c0)LIKE(vt1.c0)) WHEN CASE WHEN vt1.c0 THEN vt1.c0 END THEN ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) WHEN CAST(vt1.c0 AS REAL) THEN ('-614196405' IN ()) END) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (CASE WHEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) THEN ((vt1.c0)LIKE(vt1.c0)) WHEN CASE WHEN vt1.c0 THEN vt1.c0 END THEN ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) WHEN CAST(vt1.c0 AS REAL) THEN ('-614196405' IN ()) END))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((CASE WHEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) THEN ((vt1.c0)LIKE(vt1.c0)) WHEN CASE WHEN vt1.c0 THEN vt1.c0 END THEN ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) WHEN CAST(vt1.c0 AS REAL) THEN ('-614196405' IN ()) END) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1 CROSS JOIN vt0 ON ((((((((vt1.c0)AND(3.86126088E8 COLLATE RTRIM)))OR(x'0b19')))AND(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))))AND(0.6118786213770051)) GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1 CROSS JOIN vt0 ON ((((((((vt1.c0)AND(3.86126088E8 COLLATE RTRIM)))OR(x'0b19')))AND(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))))AND(0.6118786213770051)) GROUP BY vt1.c0, vt0.c0 HAVING TOTAL(SUM(TOTAL(vt0.c0))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt1 CROSS JOIN vt0 ON ((((((((vt1.c0)AND(3.86126088E8 COLLATE RTRIM)))OR(x'0b19')))AND(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))))AND(0.6118786213770051)) GROUP BY vt1.c0, vt0.c0 HAVING (NOT (TOTAL(SUM(TOTAL(vt0.c0))))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt1 CROSS JOIN vt0 ON ((((((((vt1.c0)AND(3.86126088E8 COLLATE RTRIM)))OR(x'0b19')))AND(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))))AND(0.6118786213770051)) GROUP BY vt1.c0, vt0.c0 HAVING ((TOTAL(SUM(TOTAL(vt0.c0)))) ISNULL);
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON (0x5c8bb0c8 IN ('1872977320'));
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON (0x5c8bb0c8 IN ('1872977320')) WHERE ((- (vt0.c0)) COLLATE BINARY) UNION ALL SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON (0x5c8bb0c8 IN ('1872977320')) WHERE ((NOT ((- (vt0.c0)) COLLATE BINARY))) UNION ALL SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON (0x5c8bb0c8 IN ('1872977320')) WHERE ((((- (vt0.c0)) COLLATE BINARY) ISNULL));
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON (0x5c8bb0c8 IN ('1872977320'));
SELECT DISTINCT vt0.c0 FROM vt1, vt0 NOT INDEXED;
SELECT DISTINCT vt0.c0 FROM vt1, vt0 WHERE (((((vt1.c0)OR(NULL)))AND(MAX(vt0.c0, NULL, vt1.c0, vt1.c0, vt1.c0, vt0.c0)))) UNION SELECT DISTINCT vt0.c0 FROM vt1, vt0 WHERE ((NOT (((((vt1.c0)OR(NULL)))AND(MAX(vt0.c0, NULL, vt1.c0, vt1.c0, vt1.c0, vt0.c0)))))) UNION SELECT DISTINCT vt0.c0 FROM vt1, vt0 WHERE (((((((vt1.c0)OR(NULL)))AND(MAX(vt0.c0, NULL, vt1.c0, vt1.c0, vt1.c0, vt0.c0)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt1, vt0 NOT INDEXED;
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt0 WHERE (((((vt0.c0) NOT BETWEEN (0Xffffffffc5514bd8) AND (vt0.c0)))-((vt0.c0 IN ())))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, vt0 NOT INDEXED WHERE ((NOT (((((vt0.c0) NOT BETWEEN (0Xffffffffc5514bd8) AND (vt0.c0)))-((vt0.c0 IN ())))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, vt0 WHERE (((((((vt0.c0) NOT BETWEEN (0Xffffffffc5514bd8) AND (vt0.c0)))-((vt0.c0 IN ())))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(CASE WHEN vt1.c0 THEN COUNT(GROUP_CONCAT(MAX(vt1.c0))) WHEN vt1.c0 THEN vt1.c0 WHEN GROUP_CONCAT(MAX(MIN(GROUP_CONCAT(vt1.c0)))) THEN vt1.c0 ELSE vt1.c0 END) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(CASE WHEN vt1.c0 THEN COUNT(GROUP_CONCAT(MAX(vt1.c0))) WHEN vt1.c0 THEN vt1.c0 WHEN GROUP_CONCAT(MAX(MIN(GROUP_CONCAT(vt1.c0)))) THEN vt1.c0 ELSE vt1.c0 END))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(CASE WHEN vt1.c0 THEN COUNT(GROUP_CONCAT(MAX(vt1.c0))) WHEN vt1.c0 THEN vt1.c0 WHEN GROUP_CONCAT(MAX(MIN(GROUP_CONCAT(vt1.c0)))) THEN vt1.c0 ELSE vt1.c0 END)) ISNULL);
SELECT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (json_remove(CAST(vt1.c0 AS TEXT), ((vt1.c0) NOT NULL), ((vt1.c0)>(vt1.c0)), TIME(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (json_remove(CAST(vt1.c0 AS TEXT), ((vt1.c0) NOT NULL), ((vt1.c0)>(vt1.c0)), TIME(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((json_remove(CAST(vt1.c0 AS TEXT), ((vt1.c0) NOT NULL), ((vt1.c0)>(vt1.c0)), TIME(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (SQLITE_COMPILEOPTION_GET(((NULL)==('')))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (SQLITE_COMPILEOPTION_GET(((NULL)=('')))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((SQLITE_COMPILEOPTION_GET(((NULL)==('')))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 WHERE (((CAST(vt0.c0 AS NUMERIC))IS(((vt1.c0) NOT NULL)))) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((NOT (((CAST(vt0.c0 AS NUMERIC))IS(((vt1.c0) NOT NULL)))))) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE (((((CAST(vt0.c0 AS NUMERIC))IS(((vt1.c0) NOT NULL)))) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING x'a315' UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (x'a315')) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((x'a315') ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING x'a315' UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (x'a315')) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((x'a315') ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (((((((((vt0.c0)OR((vt0.c0 IN ()))))OR(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))))OR(((vt0.c0)&(vt0.c0)))))OR(CAST(vt0.c0 AS NUMERIC)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((((((vt0.c0)OR((vt0.c0 IN ()))))OR(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))))OR(((vt0.c0)&(vt0.c0)))))OR(CAST(vt0.c0 AS NUMERIC)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((((((((((vt0.c0)OR((vt0.c0 IN ()))))OR(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))))OR(((vt0.c0)&(vt0.c0)))))OR(CAST(vt0.c0 AS NUMERIC)))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0, vt1;
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0, vt1 WHERE ((((x'', vt0.c0, vt0.c0)) NOT BETWEEN ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), vt1.c0 COLLATE RTRIM, CASE WHEN vt1.c0 THEN vt1.c0 WHEN 0x786285f0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 ELSE 0.4543144267742263 END)) AND (((+ (vt1.c0)), CASE WHEN NULL THEN vt0.c0 ELSE vt1.c0 END, (vt0.c0 IN (vt1.c0, vt1.c0, vt1.c0)))))) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0, vt1 WHERE ((NOT ((((x'', vt0.c0, vt0.c0)) NOT BETWEEN ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), vt1.c0 COLLATE RTRIM, CASE WHEN vt1.c0 THEN vt1.c0 WHEN 0X786285f0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 ELSE 0.4543144267742263 END)) AND (((+ (vt1.c0)), CASE WHEN NULL THEN vt0.c0 ELSE vt1.c0 END, (vt0.c0 IN (vt1.c0, vt1.c0, vt1.c0)))))))) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0, vt1 WHERE ((((((x'', vt0.c0, vt0.c0)) NOT BETWEEN ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), vt1.c0 COLLATE RTRIM, CASE WHEN vt1.c0 THEN vt1.c0 WHEN 0X786285f0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 ELSE 0.4543144267742263 END)) AND (((+ (vt1.c0)), CASE WHEN NULL THEN vt0.c0 ELSE vt1.c0 END, (vt0.c0 IN (vt1.c0, vt1.c0, vt1.c0)))))) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0, vt1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (ROUND(CASE vt0.c0  WHEN x'' THEN 1012702243 END, (+ (NULL)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (ROUND(CASE vt0.c0  WHEN x'' THEN 1012702243 END, (+ (NULL)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((ROUND(CASE vt0.c0  WHEN x'' THEN 1012702243 END, (+ (NULL)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((SUM(MIN(COUNT(vt1.c0)))) NOT BETWEEN (AVG(vt1.c0)) AND ((vt1.c0 IN ()))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((SUM(MIN(COUNT(vt1.c0)))) NOT BETWEEN (AVG(vt1.c0)) AND ((vt1.c0 IN ()))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((SUM(MIN(COUNT(vt1.c0)))) NOT BETWEEN (AVG(vt1.c0)) AND ((vt1.c0 IN ())))) ISNULL);
SELECT * FROM vt0, vt1;
SELECT ALL * FROM vt0, vt1 WHERE (CASE ((vt0.c0)IS NOT(vt0.c0))  WHEN CAST(vt0.c0 AS BLOB) THEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) END) UNION ALL SELECT * FROM vt0, vt1 WHERE ((NOT (CASE ((vt0.c0)IS NOT(vt0.c0))  WHEN CAST(vt0.c0 AS BLOB) THEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) END))) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE (((CASE ((vt0.c0)IS NOT(vt0.c0))  WHEN CAST(vt0.c0 AS BLOB) THEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) END) ISNULL));
SELECT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE (((((vt1.c0)IS(vt1.c0)))%(CAST(vt1.c0 AS INTEGER)))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (((((vt1.c0)IS(vt1.c0)))%(CAST(vt1.c0 AS INTEGER)))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE (((((((vt1.c0)IS(vt1.c0)))%(CAST(vt1.c0 AS INTEGER)))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0) NOTNULL)) BETWEEN ((NOT (vt0.c0))) AND (((x'')/(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) NOTNULL)) BETWEEN ((NOT (vt0.c0))) AND (((x'')/(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((((vt0.c0) NOTNULL)) BETWEEN ((NOT (vt0.c0))) AND (((x'')/(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING LOWER(MIN(COUNT(vt0.c0))) UNION ALL SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING (NOT (LOWER(MIN(COUNT(vt0.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING ((LOWER(MIN(COUNT(vt0.c0)))) ISNULL);
SELECT MAX(CASE WHEN ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0) NOTNULL) ELSE ((vt0.c0) NOTNULL) END) FROM vt0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1;
SELECT vt1.c0, vt0.c0 FROM vt0, vt1 WHERE (((((vt0.c0)GLOB(vt1.c0)))%(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 WHERE ((NOT (((((vt0.c0)GLOB(vt1.c0)))%(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END))))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt0, vt1 WHERE (((((((vt0.c0)GLOB(vt1.c0)))%(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END))) ISNULL));
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1;
SELECT DISTINCT vt0.c0 FROM vt0, vt1;
SELECT DISTINCT vt0.c0 FROM vt0, vt1 WHERE (UNLIKELY(DISTINCT (((vt0.c0))=((vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt0, vt1 WHERE ((NOT (UNLIKELY(DISTINCT (((vt0.c0))==((vt0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 NOT INDEXED, vt1 WHERE (((UNLIKELY(DISTINCT (((vt0.c0))==((vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0, vt1;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (x'325d' COLLATE NOCASE) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT (x'325d' COLLATE NOCASE))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((x'325d' COLLATE NOCASE) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING SUM(((AVG(vt0.c0))GLOB(GROUP_CONCAT(SUM('[]'))))) UNION ALL SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING (NOT (SUM(((AVG(vt0.c0))GLOB(GROUP_CONCAT(SUM('[]'))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING ((SUM(((AVG(vt0.c0))GLOB(GROUP_CONCAT(SUM('[]')))))) ISNULL);
SELECT ALL * FROM vt0 INNER JOIN vt1 ON ((((x'c3fea157')>>('')))-(((vt1.c0)IS NOT(vt1.c0))));
SELECT * FROM vt0 INNER JOIN vt1 ON ((((x'c3fea157')>>('')))-(((vt1.c0)IS NOT(vt1.c0)))) WHERE (NULL COLLATE NOCASE) UNION ALL SELECT * FROM vt0 NOT INDEXED INNER JOIN vt1 ON ((((x'c3fea157')>>('')))-(((vt1.c0)IS NOT(vt1.c0)))) WHERE ((NOT (NULL COLLATE NOCASE))) UNION ALL SELECT ALL * FROM vt0 INNER JOIN vt1 ON ((((x'c3fea157')>>('')))-(((vt1.c0)IS NOT(vt1.c0)))) WHERE (((NULL COLLATE NOCASE) ISNULL));
SELECT ALL * FROM vt0 INNER JOIN vt1 ON ((((x'c3fea157')>>('')))-(((vt1.c0)IS NOT(vt1.c0))));
SELECT DISTINCT vt0.c0 FROM vt1, vt0;
SELECT DISTINCT vt0.c0 FROM vt1, vt0 WHERE ((((((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND(('1872977320' IN (vt0.c0)))))OR(COALESCE(DISTINCT vt1.c0, vt1.c0)))) UNION SELECT DISTINCT vt0.c0 FROM vt1, vt0 WHERE ((NOT ((((((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND(('1872977320' IN (vt0.c0)))))OR(COALESCE(DISTINCT vt1.c0, vt1.c0)))))) UNION SELECT DISTINCT vt0.c0 FROM vt1, vt0 WHERE ((((((((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND(('1872977320' IN (vt0.c0)))))OR(COALESCE(DISTINCT vt1.c0, vt1.c0)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt1, vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0) IS TRUE))-(((vt0.c0) IS TRUE)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) IS TRUE))-(((vt0.c0) IS TRUE)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c0) IS TRUE))-(((vt0.c0) IS TRUE)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING ((MIN(vt1.c0)) ISNULL) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING (NOT (((MIN(vt1.c0)) ISNULL))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING ((((MIN(vt1.c0)) ISNULL)) ISNULL);
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING ((MIN(vt1.c0)) ISNULL) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING (NOT (((MIN(vt1.c0)) ISNULL))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING ((((MIN(vt1.c0)) ISNULL)) ISNULL);
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT ALL * FROM vt0 INNER JOIN vt1 ON ((vt0.c0) BETWEEN ((+ (vt1.c0))) AND (LIKELY(vt1.c0)));
SELECT * FROM vt0 INNER JOIN vt1 ON ((vt0.c0) BETWEEN ((+ (vt1.c0))) AND (LIKELY(vt1.c0))) WHERE (CAST((((vt0.c0, vt1.c0, vt0.c0, vt0.c0, vt0.c0))<=((vt1.c0, vt1.c0, vt0.c0, x'', vt1.c0))) AS INTEGER)) UNION ALL SELECT * FROM vt0 INNER JOIN vt1 ON ((vt0.c0) BETWEEN ((+ (vt1.c0))) AND (LIKELY(vt1.c0))) WHERE ((NOT (CAST((((vt0.c0, vt1.c0, vt0.c0, vt0.c0, vt0.c0))<=((vt1.c0, vt1.c0, vt0.c0, x'', vt1.c0))) AS INTEGER)))) UNION ALL SELECT ALL * FROM vt0 INNER JOIN vt1 ON ((vt0.c0) BETWEEN ((+ (vt1.c0))) AND (LIKELY(vt1.c0))) WHERE (((CAST((((vt0.c0, vt1.c0, vt0.c0, vt0.c0, vt0.c0))<=((vt1.c0, vt1.c0, vt0.c0, x'', vt1.c0))) AS INTEGER)) ISNULL));
SELECT ALL * FROM vt0 INNER JOIN vt1 ON ((vt0.c0) BETWEEN ((+ (vt1.c0))) AND (LIKELY(vt1.c0)));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (CAST(CAST(vt1.c0 AS TEXT) AS TEXT)) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (CAST(CAST(vt1.c0 AS TEXT) AS TEXT)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((CAST(CAST(vt1.c0 AS TEXT) AS TEXT)) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((((vt0.c0)<<(vt1.c0)) IN (((vt0.c0)=(vt0.c0))))) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((NOT ((((vt0.c0)<<(vt1.c0)) IN (((vt0.c0)==(vt0.c0))))))) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((((((vt0.c0)<<(vt1.c0)) IN (((vt0.c0)=(vt0.c0))))) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING MAX(CAST(vt0.c0 AS NUMERIC)) UNION ALL SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING (NOT (MAX(CAST(vt0.c0 AS NUMERIC)))) UNION ALL SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING ((MAX(CAST(vt0.c0 AS NUMERIC))) ISNULL);
SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING MAX(CAST(vt0.c0 AS NUMERIC)) UNION ALL SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING (NOT (MAX(CAST(vt0.c0 AS NUMERIC)))) UNION ALL SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING ((MAX(CAST(vt0.c0 AS NUMERIC))) ISNULL);
SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (x'') UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (x''))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((x'') ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT vt1.c0 FROM vt1, vt0;
SELECT DISTINCT vt1.c0 FROM vt1, vt0 WHERE (x'0ec3') UNION SELECT DISTINCT vt1.c0 FROM vt1, vt0 WHERE ((NOT (x'0ec3'))) UNION SELECT DISTINCT vt1.c0 FROM vt1, vt0 WHERE (((x'0ec3') ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1, vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (CAST(-1.317772139E9 AS NUMERIC)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CAST(-1.317772139E9 AS NUMERIC)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((CAST(-1.317772139E9 AS NUMERIC)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((SUM(GROUP_CONCAT(vt1.c0))))<>((((AVG(GROUP_CONCAT(MAX(MIN(MIN(TOTAL(COUNT(*))))))))IS(TOTAL(SUM(COUNT(MAX(vt1.c0))))))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((((SUM(GROUP_CONCAT(vt1.c0))))<>((((AVG(GROUP_CONCAT(MAX(MIN(MIN(TOTAL(COUNT(*))))))))IS(TOTAL(SUM(COUNT(MAX(vt1.c0))))))))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((((SUM(GROUP_CONCAT(vt1.c0))))!=((((AVG(GROUP_CONCAT(MAX(MIN(MIN(TOTAL(COUNT(*))))))))IS(TOTAL(SUM(COUNT(MAX(vt1.c0)))))))))) ISNULL);
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0;
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((- (CASE WHEN vt1.c0 THEN vt1.c0 END))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((NOT ((- (CASE WHEN vt1.c0 THEN vt1.c0 END))))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((((- (CASE WHEN vt1.c0 THEN vt1.c0 END))) ISNULL));
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((~ (CAST('' AS TEXT)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((~ (CAST('' AS TEXT)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((~ (CAST('' AS TEXT)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (json_insert(vt1.c0, CAST(vt1.c0 AS TEXT), DATE(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (json_insert(vt1.c0, CAST(vt1.c0 AS TEXT), DATE(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((json_insert(vt1.c0, CAST(vt1.c0 AS TEXT), DATE(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0 INNER JOIN vt1 ON x'8780' GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0 INNER JOIN vt1 ON x'8780' GROUP BY vt0.c0, vt1.c0 HAVING CASE AVG(0.37764579778980745)  WHEN NULLIF(AVG(vt1.c0), COUNT(*)) THEN ((MAX(GROUP_CONCAT(vt1.c0)))>(vt0.c0)) ELSE vt0.c0 END UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0 INNER JOIN vt1 ON x'8780' GROUP BY vt0.c0, vt1.c0 HAVING (NOT (CASE AVG(0.37764579778980745)  WHEN NULLIF(AVG(vt1.c0), COUNT(*)) THEN ((MAX(GROUP_CONCAT(vt1.c0)))>(vt0.c0)) ELSE vt0.c0 END)) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0 INNER JOIN vt1 ON x'8780' GROUP BY vt0.c0, vt1.c0 HAVING ((CASE AVG(0.37764579778980745)  WHEN NULLIF(AVG(vt1.c0), COUNT(*)) THEN ((MAX(GROUP_CONCAT(vt1.c0)))>(vt0.c0)) ELSE vt0.c0 END) ISNULL);
SELECT * FROM vt1;
SELECT ALL * FROM vt1 WHERE ((((vt1.c0 IN (vt1.c0)))IS(vt1.c0 COLLATE NOCASE))) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT ((((vt1.c0 IN (vt1.c0)))IS(vt1.c0 COLLATE NOCASE))))) UNION ALL SELECT * FROM vt1 WHERE ((((((vt1.c0 IN (vt1.c0)))IS(vt1.c0 COLLATE NOCASE))) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE ((CAST(vt1.c0 AS REAL) IN (((vt1.c0) BETWEEN (vt0.c0) AND (NULL))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT ((CAST(vt1.c0 AS REAL) IN (((vt1.c0) BETWEEN (vt0.c0) AND (NULL))))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((((CAST(vt1.c0 AS REAL) IN (((vt1.c0) BETWEEN (vt0.c0) AND (NULL))))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((NOT (vt0.c0))) BETWEEN (((vt0.c0)|(vt0.c0))) AND ((361491168 IN (vt0.c0, NULL))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((NOT (vt0.c0))) BETWEEN (((vt0.c0)|(vt0.c0))) AND ((361491168 IN (vt0.c0, NULL))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((NOT (vt0.c0))) BETWEEN (((vt0.c0)|(vt0.c0))) AND ((361491168 IN (vt0.c0, NULL))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING SUM(MIN(MIN(vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (SUM(MIN(MIN(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((SUM(MIN(MIN(vt1.c0)))) ISNULL);
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE (((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))) BETWEEN (((vt1.c0)%(vt1.c0))) AND (vt1.c0))) UNION ALL SELECT * FROM vt1 WHERE ((NOT (((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))) BETWEEN (((vt1.c0)%(vt1.c0))) AND (vt1.c0))))) UNION ALL SELECT ALL * FROM vt1 WHERE (((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))) BETWEEN (((vt1.c0)%(vt1.c0))) AND (vt1.c0))) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE (((((vt1.c0) IS FALSE)) IS TRUE)) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (((((vt1.c0) IS FALSE)) IS TRUE)))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE (((((((vt1.c0) IS FALSE)) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, vt1 WHERE ((((((vt1.c0)AND(vt0.c0)))AND(vt1.c0)) IN ())) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt0, vt1 WHERE ((NOT ((((((vt1.c0)AND(vt0.c0)))AND(vt1.c0)) IN ())))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt0, vt1 WHERE ((((((((vt1.c0)AND(vt0.c0)))AND(vt1.c0)) IN ())) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING SUM(MIN(vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (SUM(MIN(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM(MIN(vt0.c0))) ISNULL);
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE (CASE ((vt1.c0)IS NOT(vt1.c0))  WHEN x'5637' THEN vt1.c0 ELSE vt1.c0 COLLATE BINARY END) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (CASE ((vt1.c0)IS NOT(vt1.c0))  WHEN x'5637' THEN vt1.c0 ELSE vt1.c0 COLLATE BINARY END))) UNION ALL SELECT ALL * FROM vt1 WHERE (((CASE ((vt1.c0)IS NOT(vt1.c0))  WHEN x'5637' THEN vt1.c0 ELSE vt1.c0 COLLATE BINARY END) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (CHANGES()) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (CHANGES()))) UNION SELECT DISTINCT * FROM vt1 WHERE (((CHANGES()) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((((vt0.c0 IN (NULL)))AND(CASE WHEN '171246607' THEN vt0.c0 ELSE vt1.c0 END))) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT ((((vt0.c0 IN (NULL)))AND(CASE WHEN '171246607' THEN vt0.c0 ELSE vt1.c0 END))))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((((((vt0.c0 IN (NULL)))AND(CASE WHEN '171246607' THEN vt0.c0 ELSE vt1.c0 END))) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING ((MAX(vt1.c0))==(((((vt1.c0)OR(COUNT(vt0.c0))))AND(MIN(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING (NOT (((MAX(vt1.c0))==(((((vt1.c0)OR(COUNT(vt0.c0))))AND(MIN(vt0.c0))))))) UNION ALL SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING ((((MAX(vt1.c0))=(((((vt1.c0)OR(COUNT(vt0.c0))))AND(MIN(vt0.c0)))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING ((MAX(vt1.c0))==(((((vt1.c0)OR(COUNT(vt0.c0))))AND(MIN(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING (NOT (((MAX(vt1.c0))==(((((vt1.c0)OR(COUNT(vt0.c0))))AND(MIN(vt0.c0))))))) UNION ALL SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING ((((MAX(vt1.c0))=(((((vt1.c0)OR(COUNT(vt0.c0))))AND(MIN(vt0.c0)))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (NULLIF(DISTINCT (vt0.c0 IN ('')), LOWER(DISTINCT vt0.c0))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (NULLIF(DISTINCT (vt0.c0 IN ('')), LOWER(DISTINCT vt0.c0))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((NULLIF(DISTINCT (vt0.c0 IN ('')), LOWER(DISTINCT vt0.c0))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON CAST((((0.6719712790356336)) NOT BETWEEN ((vt1.c0)) AND ((1.35234403E9))) AS TEXT);
SELECT DISTINCT vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON CAST((((0.6719712790356336)) NOT BETWEEN ((vt1.c0)) AND ((1.35234403E9))) AS TEXT) WHERE (((((vt1.c0)AND((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(((vt1.c0) NOT BETWEEN ('-693475377') AND (vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON CAST((((0.6719712790356336)) NOT BETWEEN ((vt1.c0)) AND ((1.35234403E9))) AS TEXT) WHERE ((NOT (((((vt1.c0)AND((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(((vt1.c0) NOT BETWEEN ('-693475377') AND (vt0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON CAST((((0.6719712790356336)) NOT BETWEEN ((vt1.c0)) AND ((1.35234403E9))) AS TEXT) WHERE (((((((vt1.c0)AND((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(((vt1.c0) NOT BETWEEN ('-693475377') AND (vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON CAST((((0.6719712790356336)) NOT BETWEEN ((vt1.c0)) AND ((1.35234403E9))) AS TEXT);
SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, vt1 WHERE ((~ ((((vt1.c0, vt1.c0, vt0.c0))<=((vt1.c0, vt0.c0, vt0.c0)))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt0, vt1 WHERE ((NOT ((~ ((((vt1.c0, vt1.c0, vt0.c0))<=((vt1.c0, vt0.c0, vt0.c0)))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt0, vt1 WHERE ((((~ ((((vt1.c0, vt1.c0, vt0.c0))<=((vt1.c0, vt0.c0, vt0.c0)))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING x'' UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (x'')) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((x'') ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING x'' UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (x'')) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((x'') ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, NULL))>((vt0.c0, vt0.c0, vt0.c0)))) ISNULL)) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((((((vt0.c0, vt0.c0, NULL))>((vt0.c0, vt0.c0, vt0.c0)))) ISNULL)))) UNION ALL SELECT * FROM vt0 WHERE ((((((((vt0.c0, vt0.c0, NULL))>((vt0.c0, vt0.c0, vt0.c0)))) ISNULL)) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (NULL) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1 WHERE ((((((+ (vt1.c0)))OR(((vt1.c0)LIKE(vt0.c0)))))OR(CAST(vt0.c0 AS BLOB)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, vt1 WHERE ((NOT ((((((+ (vt1.c0)))OR(((vt1.c0)LIKE(vt0.c0)))))OR(CAST(vt0.c0 AS BLOB)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, vt1 WHERE ((((((((+ (vt1.c0)))OR(((vt1.c0)LIKE(vt0.c0)))))OR(CAST(vt0.c0 AS BLOB)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX(SUM(vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(SUM(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(SUM(vt0.c0))) ISNULL);
SELECT ALL MAX(vt1.c0) FROM vt0, vt1 ORDER BY CAST(vt1.c0 COLLATE BINARY AS TEXT) DESC  NULLS FIRST;
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON ((x'')>(((vt1.c0)<>(vt1.c0))));
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON ((x'')>(((vt1.c0)<>(vt1.c0)))) WHERE (((vt1.c0 COLLATE BINARY)LIKE(((vt0.c0)<=('-1762058506'))))) UNION ALL SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON ((x'')>(((vt1.c0)!=(vt1.c0)))) WHERE ((NOT (((vt1.c0 COLLATE BINARY)LIKE(((vt0.c0)<=('-1762058506'))))))) UNION ALL SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON ((x'')>(((vt1.c0)<>(vt1.c0)))) WHERE (((((vt1.c0 COLLATE BINARY)LIKE(((vt0.c0)<=('-1762058506'))))) ISNULL));
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON ((x'')>(((vt1.c0)<>(vt1.c0))));
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE (((((vt1.c0)<<(vt0.c0))) IS TRUE)) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (((((vt1.c0)<<(vt0.c0))) IS TRUE)))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE (((((((vt1.c0)<<(vt0.c0))) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0) NOT BETWEEN (STRFTIME(vt0.c0, vt0.c0, vt0.c0)) AND ((((vt0.c0))<((vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0) NOT BETWEEN (STRFTIME(vt0.c0, vt0.c0, vt0.c0)) AND ((((vt0.c0))<((vt0.c0)))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (STRFTIME(vt0.c0, vt0.c0, vt0.c0)) AND ((((vt0.c0))<((vt0.c0)))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT * FROM vt1;
SELECT ALL * FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) AND ((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))))) UNION ALL SELECT * FROM vt1 WHERE ((NOT ((((vt1.c0)) NOT BETWEEN ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) AND ((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))))))) UNION ALL SELECT * FROM vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) AND ((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))))) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (ROUND(((vt0.c0)IS(vt0.c0)), ((vt0.c0) NOT NULL))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (ROUND(((vt0.c0)IS(vt0.c0)), ((vt0.c0) NOT NULL))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((ROUND(((vt0.c0)IS(vt0.c0)), ((vt0.c0) NOT NULL))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) IS FALSE)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) IS FALSE)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) IS FALSE)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1 NOT INDEXED RIGHT OUTER JOIN vt0 ON vt0.c0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON vt0.c0 GROUP BY vt0.c0 HAVING COUNT(MIN(COUNT(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON vt0.c0 GROUP BY vt0.c0 HAVING (NOT (COUNT(MIN(COUNT(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON vt0.c0 GROUP BY vt0.c0 HAVING ((COUNT(MIN(COUNT(vt0.c0)))) ISNULL);
SELECT vt1.c0 FROM vt0, vt1;
SELECT ALL vt1.c0 FROM vt0, vt1 WHERE (TRIM(IFNULL(vt0.c0, vt0.c0))) UNION ALL SELECT vt1.c0 FROM vt0, vt1 WHERE ((NOT (TRIM(IFNULL(vt0.c0, vt0.c0))))) UNION ALL SELECT vt1.c0 FROM vt0, vt1 WHERE (((TRIM(IFNULL(vt0.c0, vt0.c0))) ISNULL));
SELECT vt1.c0 FROM vt0, vt1;
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN vt1 ON vt0.c0;
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN vt1 ON vt0.c0 WHERE ((((((vt1.c0))<=((vt1.c0)))) NOT NULL)) UNION SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN vt1 ON vt0.c0 WHERE ((NOT ((((((vt1.c0))<=((vt1.c0)))) NOT NULL)))) UNION SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN vt1 ON vt0.c0 WHERE ((((((((vt1.c0))<=((vt1.c0)))) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN vt1 ON vt0.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((((((((vt1.c0)OR(vt0.c0)))AND(vt1.c0)), vt0.c0 COLLATE NOCASE, ((((x'a751')AND(vt0.c0)))AND(vt1.c0)), (- (vt1.c0)), MIN(vt1.c0, vt0.c0)))<(((vt1.c0 IN (vt0.c0)), (NOT (vt0.c0)), LOWER(NULL), ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((NOT ((((((((vt1.c0)OR(vt0.c0)))AND(vt1.c0)), vt0.c0 COLLATE NOCASE, ((((x'a751')AND(vt0.c0)))AND(vt1.c0)), (- (vt1.c0)), MIN(vt1.c0, vt0.c0)))<(((vt1.c0 IN (vt0.c0)), (NOT (vt0.c0)), LOWER(NULL), ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))))) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((((((((((vt1.c0)OR(vt0.c0)))AND(vt1.c0)), vt0.c0 COLLATE NOCASE, ((((x'a751')AND(vt0.c0)))AND(vt1.c0)), (- (vt1.c0)), MIN(vt1.c0, vt0.c0)))<(((vt1.c0 IN (vt0.c0)), (NOT (vt0.c0)), LOWER(NULL), ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT ALL TOTAL(CHAR(CAST(vt1.c0 AS NUMERIC), ((vt1.c0)>>(vt1.c0)), ((0.49319759722174794) IS FALSE))) FROM vt1 ORDER BY (((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) IN ());
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0))>=((vt1.c0)))) IS TRUE)) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT ((((((vt1.c0))>=((vt1.c0)))) IS TRUE)))) UNION ALL SELECT * FROM vt1 WHERE ((((((((vt1.c0))>=((vt1.c0)))) IS TRUE)) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM vt0 NOT INDEXED RIGHT OUTER JOIN vt1 ON ((((vt0.c0)IS NOT(vt0.c0)))LIKE(CAST(vt1.c0 AS TEXT)));
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN vt1 ON ((((vt0.c0)IS NOT(vt0.c0)))LIKE(CAST(vt1.c0 AS TEXT))) WHERE (((((((((CASE WHEN vt1.c0 THEN vt1.c0 END)OR(NULL)))OR(CAST(vt1.c0 AS INTEGER))))AND(vt1.c0)))OR(vt0.c0 COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN vt1 ON ((((vt0.c0)IS NOT(vt0.c0)))LIKE(CAST(vt1.c0 AS TEXT))) WHERE ((NOT (((((((((CASE WHEN vt1.c0 THEN vt1.c0 END)OR(NULL)))OR(CAST(vt1.c0 AS INTEGER))))AND(vt1.c0)))OR(vt0.c0 COLLATE RTRIM))))) UNION SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN vt1 ON ((((vt0.c0)IS NOT(vt0.c0)))LIKE(CAST(vt1.c0 AS TEXT))) WHERE (((((((((((CASE WHEN vt1.c0 THEN vt1.c0 END)OR(NULL)))OR(CAST(vt1.c0 AS INTEGER))))AND(vt1.c0)))OR(vt0.c0 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT * FROM vt0 NOT INDEXED RIGHT OUTER JOIN vt1 ON ((((vt0.c0)IS NOT(vt0.c0)))LIKE(CAST(vt1.c0 AS TEXT)));
SELECT vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON vt1.c0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON vt1.c0 WHERE ('gi~^ ') GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON vt1.c0 WHERE ((NOT ('gi~^ '))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON vt1.c0 WHERE ((('gi~^ ') ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON vt1.c0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MIN(GROUP_CONCAT(MIN(COUNT(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MIN(GROUP_CONCAT(MIN(COUNT(vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN(GROUP_CONCAT(MIN(COUNT(vt0.c0))))) ISNULL);
SELECT ALL SUM(((((NULL)AND(((vt0.c0)>>(vt0.c0)))))AND(((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) FROM vt0, vt1;
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((~ (((x'')%(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((~ (((x'')%(vt0.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((~ (((x'')%(vt0.c0))))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)AND(((((vt1.c0)AND(NULL)))OR(vt0.c0))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT (((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)AND(((((vt1.c0)AND(NULL)))OR(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE (((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)AND(((((vt1.c0)AND(NULL)))OR(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ('-1453175359' COLLATE NOCASE) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT ('-1453175359' COLLATE NOCASE))) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((('-1453175359' COLLATE NOCASE) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TOTAL(vt0.c0) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(vt0.c0)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TOTAL(vt0.c0) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(vt0.c0)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE ((((((vt0.c0 IN ()))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))AND((+ (vt0.c0))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((((((vt0.c0 IN ()))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))AND((+ (vt0.c0))))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((((((vt0.c0 IN ()))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))AND((+ (vt0.c0))))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE ((((vt0.c0) NOT NULL) IN ())) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT ((((vt0.c0) NOT NULL) IN ())))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((((((vt0.c0) NOT NULL) IN ())) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0)!=(vt0.c0))) NOT BETWEEN ((vt0.c0 IN (vt0.c0))) AND (((vt0.c0) NOT NULL)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0)<>(vt0.c0))) NOT BETWEEN ((vt0.c0 IN (vt0.c0))) AND (((vt0.c0) NOT NULL)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((((vt0.c0)<>(vt0.c0))) NOT BETWEEN ((vt0.c0 IN (vt0.c0))) AND (((vt0.c0) NOT NULL)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((COALESCE(AVG(vt1.c0), MIN(AVG(COUNT(vt1.c0))), COUNT(*), vt1.c0, MIN(vt1.c0), vt1.c0))AND(GROUP_CONCAT(TOTAL(AVG(vt1.c0))))))AND(GROUP_CONCAT(MIN(0.8436340409796043)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((((COALESCE(AVG(vt1.c0), MIN(AVG(COUNT(vt1.c0))), COUNT(*), vt1.c0, MIN(vt1.c0), vt1.c0))AND(GROUP_CONCAT(TOTAL(AVG(vt1.c0))))))AND(GROUP_CONCAT(MIN(0.8436340409796043)))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((((COALESCE(AVG(vt1.c0), MIN(AVG(COUNT(vt1.c0))), COUNT(*), vt1.c0, MIN(vt1.c0), vt1.c0))AND(GROUP_CONCAT(TOTAL(AVG(vt1.c0))))))AND(GROUP_CONCAT(MIN(0.8436340409796043))))) ISNULL);
SELECT ALL * FROM vt0, vt1;
SELECT * FROM vt0, vt1 WHERE ((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((x'')))) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE ((NOT ((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((x'')))))) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE ((((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((x'')))) ISNULL));
SELECT ALL * FROM vt0, vt1;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CAST('' AS NUMERIC)) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (CAST('' AS NUMERIC)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CAST('' AS NUMERIC)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (vt1.c0) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((NOT (vt1.c0))) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((vt1.c0) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING vt1.c0 UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (vt1.c0)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((vt1.c0) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING vt1.c0 UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (vt1.c0)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((vt1.c0) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (vt0.c0) UNION ALL SELECT * FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (json_array_length(((vt1.c0)LIKE(vt1.c0)), ((vt1.c0) NOT NULL))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (json_array_length(((vt1.c0)LIKE(vt1.c0)), ((vt1.c0) NOT NULL))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((json_array_length(((vt1.c0)LIKE(vt1.c0)), ((vt1.c0) NOT NULL))) ISNULL));
SELECT ALL vt0.c0, vt1.c0 FROM vt0 FULL OUTER JOIN vt1 ON CASE ((vt1.c0)<>(vt1.c0))  WHEN ((vt0.c0) NOT NULL) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)) END GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0 FULL OUTER JOIN vt1 ON CASE ((vt1.c0)!=(vt1.c0))  WHEN ((vt0.c0) NOT NULL) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)) END WHERE (vt0.c0) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt0 FULL OUTER JOIN vt1 ON CASE ((vt1.c0)<>(vt1.c0))  WHEN ((vt0.c0) NOT NULL) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)) END WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt0 FULL OUTER JOIN vt1 ON CASE ((vt1.c0)<>(vt1.c0))  WHEN ((vt0.c0) NOT NULL) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)) END WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0 FULL OUTER JOIN vt1 ON CASE ((vt1.c0)<>(vt1.c0))  WHEN ((vt0.c0) NOT NULL) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)) END GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG(CASE WHEN vt0.c0 THEN MAX(vt0.c0) END) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (AVG(CASE WHEN vt0.c0 THEN MAX(vt0.c0) END))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG(CASE WHEN vt0.c0 THEN MAX(vt0.c0) END)) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (vt1.c0) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT vt0.c0 FROM vt1, vt0;
SELECT DISTINCT vt0.c0 FROM vt1, vt0 WHERE (((vt0.c0) IS FALSE)) UNION SELECT DISTINCT vt0.c0 FROM vt1, vt0 WHERE ((NOT (((vt0.c0) IS FALSE)))) UNION SELECT DISTINCT vt0.c0 FROM vt1, vt0 WHERE (((((vt0.c0) IS FALSE)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt1, vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (GLOB(NULL COLLATE NOCASE, (NOT (vt0.c0)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (GLOB(NULL COLLATE NOCASE, (NOT (vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((GLOB(NULL COLLATE NOCASE, (NOT (vt0.c0)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING CASE COUNT(x'')  WHEN AVG(vt1.c0) THEN TOTAL(vt1.c0) WHEN COUNT(NULL) THEN json_array(GROUP_CONCAT(vt1.c0), vt1.c0) WHEN ((MAX(MAX(vt1.c0))) IS TRUE) THEN (((0.41525220588625045))<=((GROUP_CONCAT(AVG(vt1.c0))))) WHEN AVG(vt1.c0) THEN ((AVG(COUNT(COUNT(GROUP_CONCAT(vt1.c0)))))=(AVG(vt1.c0))) WHEN vt1.c0 THEN COUNT(*) ELSE ((vt1.c0)AND(COUNT(vt1.c0))) END UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (CASE COUNT(x'')  WHEN AVG(vt1.c0) THEN TOTAL(vt1.c0) WHEN COUNT(NULL) THEN json_array(GROUP_CONCAT(vt1.c0), vt1.c0) WHEN ((MAX(MAX(vt1.c0))) IS TRUE) THEN (((0.41525220588625045))<=((GROUP_CONCAT(AVG(vt1.c0))))) WHEN AVG(vt1.c0) THEN ((AVG(COUNT(COUNT(GROUP_CONCAT(vt1.c0)))))=(AVG(vt1.c0))) WHEN vt1.c0 THEN COUNT(*) ELSE ((vt1.c0)AND(COUNT(vt1.c0))) END)) UNION ALL SELECT vt1.c0 FROM vt1 NOT INDEXED GROUP BY vt1.c0 HAVING ((CASE COUNT(x'')  WHEN AVG(vt1.c0) THEN TOTAL(vt1.c0) WHEN COUNT(NULL) THEN json_array(GROUP_CONCAT(vt1.c0), vt1.c0) WHEN ((MAX(MAX(vt1.c0))) IS TRUE) THEN (((0.41525220588625045))<=((GROUP_CONCAT(AVG(vt1.c0))))) WHEN AVG(vt1.c0) THEN ((AVG(COUNT(COUNT(GROUP_CONCAT(vt1.c0)))))=(AVG(vt1.c0))) WHEN vt1.c0 THEN COUNT(*) ELSE ((vt1.c0)AND(COUNT(vt1.c0))) END) ISNULL);
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE (0.9628510697775235) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (0.9628510697775235))) UNION ALL SELECT ALL * FROM vt1 WHERE (((0.9628510697775235) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (vt1.c0) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT * FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 WHERE (CASE (- (vt1.c0))  WHEN ((vt1.c0)||(vt0.c0)) THEN vt1.c0 ELSE ((vt0.c0)IS NOT(vt1.c0)) END) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((NOT (CASE (- (vt1.c0))  WHEN ((vt1.c0)||(vt0.c0)) THEN vt1.c0 ELSE ((vt0.c0)IS NOT(vt1.c0)) END))) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE (((CASE (- (vt1.c0))  WHEN ((vt1.c0)||(vt0.c0)) THEN vt1.c0 ELSE ((vt0.c0)IS NOT(vt1.c0)) END) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0 FROM vt0 INNER JOIN vt1 ON ((vt1.c0)OR(vt0.c0)) COLLATE BINARY GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 INNER JOIN vt1 ON ((vt1.c0)OR(vt0.c0)) COLLATE BINARY GROUP BY vt0.c0 HAVING AVG(COUNT(AVG(vt1.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 INNER JOIN vt1 ON ((vt1.c0)OR(vt0.c0)) COLLATE BINARY GROUP BY vt0.c0 HAVING (NOT (AVG(COUNT(AVG(vt1.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 INNER JOIN vt1 ON ((vt1.c0)OR(vt0.c0)) COLLATE BINARY GROUP BY vt0.c0 HAVING ((AVG(COUNT(AVG(vt1.c0)))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((NULL)))) ISNULL)) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((NULL)))) ISNULL)))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((NULL)))) ISNULL)) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1 WHERE (CASE WHEN CASE 'e0'  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((vt1.c0)*(vt0.c0)) END) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, vt1 WHERE ((NOT (CASE WHEN CASE 'e0'  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((vt1.c0)*(vt0.c0)) END))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, vt1 WHERE (((CASE WHEN CASE 'e0'  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((vt1.c0)*(vt0.c0)) END) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 INNER JOIN vt1 ON CASE vt0.c0 COLLATE BINARY  WHEN ((((((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)))AND(vt0.c0)) THEN ((vt0.c0) NOT NULL) WHEN vt0.c0 THEN HEX(DISTINCT vt0.c0) WHEN (((vt1.c0, vt0.c0, vt0.c0)) BETWEEN ((vt1.c0, vt1.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, x''))) THEN ((vt0.c0)==(NULL)) END GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 INNER JOIN vt1 ON CASE vt0.c0 COLLATE BINARY  WHEN ((((((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)))AND(vt0.c0)) THEN ((vt0.c0) NOT NULL) WHEN vt0.c0 THEN HEX(DISTINCT vt0.c0) WHEN (((vt1.c0, vt0.c0, vt0.c0)) BETWEEN ((vt1.c0, vt1.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, x''))) THEN ((vt0.c0)==(NULL)) END GROUP BY vt0.c0 HAVING AVG(COUNT(*)) UNION ALL SELECT vt0.c0 FROM vt0 INNER JOIN vt1 ON CASE vt0.c0 COLLATE BINARY  WHEN ((((((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)))AND(vt0.c0)) THEN ((vt0.c0) NOT NULL) WHEN vt0.c0 THEN HEX(DISTINCT vt0.c0) WHEN (((vt1.c0, vt0.c0, vt0.c0)) BETWEEN ((vt1.c0, vt1.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, x''))) THEN ((vt0.c0)=(NULL)) END GROUP BY vt0.c0 HAVING (NOT (AVG(COUNT(*)))) UNION ALL SELECT vt0.c0 FROM vt0 INNER JOIN vt1 ON CASE vt0.c0 COLLATE BINARY  WHEN ((((((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)))AND(vt0.c0)) THEN ((vt0.c0) NOT NULL) WHEN vt0.c0 THEN HEX(DISTINCT vt0.c0) WHEN (((vt1.c0, vt0.c0, vt0.c0)) BETWEEN ((vt1.c0, vt1.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, x''))) THEN ((vt0.c0)==(NULL)) END GROUP BY vt0.c0 HAVING ((AVG(COUNT(*))) ISNULL);
SELECT * FROM vt1, vt0;
SELECT * FROM vt1, vt0 WHERE (((((vt0.c0) IS TRUE))AND(((((vt1.c0)OR(vt1.c0)))OR(vt0.c0))))) UNION ALL SELECT ALL * FROM vt1, vt0 WHERE ((NOT (((((vt0.c0) IS TRUE))AND(((((vt1.c0)OR(vt1.c0)))OR(vt0.c0))))))) UNION ALL SELECT * FROM vt1, vt0 WHERE (((((((vt0.c0) IS TRUE))AND(((((vt1.c0)OR(vt1.c0)))OR(vt0.c0))))) ISNULL));
SELECT * FROM vt1, vt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (CASE ((vt1.c0) IS TRUE)  WHEN (((vt1.c0))<((vt1.c0))) THEN vt1.c0 COLLATE RTRIM WHEN ((vt1.c0)<>(NULL)) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) WHEN ((vt1.c0)<(vt1.c0)) THEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) ELSE ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) END) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (CASE ((vt1.c0) IS TRUE)  WHEN (((vt1.c0))<((vt1.c0))) THEN vt1.c0 COLLATE RTRIM WHEN ((vt1.c0)!=(NULL)) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) WHEN ((vt1.c0)<(vt1.c0)) THEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) ELSE ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) END))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((CASE ((vt1.c0) IS TRUE)  WHEN (((vt1.c0))<((vt1.c0))) THEN vt1.c0 COLLATE RTRIM WHEN ((vt1.c0)<>(NULL)) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) WHEN ((vt1.c0)<(vt1.c0)) THEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) ELSE ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) END) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, vt1 WHERE (CASE (((vt1.c0, vt0.c0, vt0.c0))!=((vt1.c0, vt1.c0, vt0.c0)))  WHEN vt1.c0 COLLATE BINARY THEN ((vt1.c0)IS NOT(vt1.c0)) ELSE '0.3680907444736372' COLLATE BINARY END) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, vt1 WHERE ((NOT (CASE (((vt1.c0, vt0.c0, vt0.c0))<>((vt1.c0, vt1.c0, vt0.c0)))  WHEN vt1.c0 COLLATE BINARY THEN ((vt1.c0)IS NOT(vt1.c0)) ELSE '0.3680907444736372' COLLATE BINARY END))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, vt1 WHERE (((CASE (((vt1.c0, vt0.c0, vt0.c0))!=((vt1.c0, vt1.c0, vt0.c0)))  WHEN vt1.c0 COLLATE BINARY THEN ((vt1.c0)IS NOT(vt1.c0)) ELSE '0.3680907444736372' COLLATE BINARY END) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING TOTAL((+ (COUNT(vt1.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (TOTAL((+ (COUNT(vt1.c0)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((TOTAL((+ (COUNT(vt1.c0))))) ISNULL);
SELECT * FROM vt1;
SELECT ALL * FROM vt1 WHERE (CAST(((vt1.c0)%(vt1.c0)) AS REAL)) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (CAST(((vt1.c0)%(vt1.c0)) AS REAL)))) UNION ALL SELECT ALL * FROM vt1 WHERE (((CAST(((vt1.c0)%(vt1.c0)) AS REAL)) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT vt0.c0 FROM vt0, vt1;
SELECT DISTINCT vt0.c0 FROM vt0, vt1 NOT INDEXED WHERE (CASE 'G!8#ᅊL萪N?'  WHEN CAST(vt1.c0 AS BLOB) THEN LIKELIHOOD(DISTINCT vt0.c0, 0.867613352067361) END) UNION SELECT DISTINCT vt0.c0 FROM vt0, vt1 WHERE ((NOT (CASE 'G!8#ᅊL萪N?'  WHEN CAST(vt1.c0 AS BLOB) THEN LIKELIHOOD(DISTINCT vt0.c0, 0.867613352067361) END))) UNION SELECT DISTINCT vt0.c0 FROM vt0, vt1 WHERE (((CASE 'G!8#ᅊL萪N?'  WHEN CAST(vt1.c0 AS BLOB) THEN LIKELIHOOD(DISTINCT vt0.c0, 0.867613352067361) END) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0, vt1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CASE WHEN ((vt0.c0)-(vt0.c0)) THEN ((vt0.c0) NOTNULL) END) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN ((vt0.c0)-(vt0.c0)) THEN ((vt0.c0) NOTNULL) END))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((CASE WHEN ((vt0.c0)-(vt0.c0)) THEN ((vt0.c0) NOTNULL) END) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MAX(AVG(vt1.c0)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MAX(AVG(vt1.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MAX(AVG(vt1.c0))) ISNULL);
SELECT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((vt1.c0)) BETWEEN ((((vt1.c0) IS TRUE))) AND ((vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0)) BETWEEN ((((vt1.c0) IS TRUE))) AND ((vt1.c0)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((((((vt1.c0)) BETWEEN ((((vt1.c0) IS TRUE))) AND ((vt1.c0)))) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE (x'') UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT (x''))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE (((x'') ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((- (vt0.c0 COLLATE BINARY))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((- (vt0.c0 COLLATE BINARY))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((- (vt0.c0 COLLATE BINARY))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MAX(x''))<(MAX(GROUP_CONCAT(NULL)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((MAX(x''))<(MAX(GROUP_CONCAT(NULL)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((MAX(x''))<(MAX(GROUP_CONCAT(NULL))))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))GLOB(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN -1883422052 THEN vt0.c0 END))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))GLOB(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN -1883422052 THEN vt0.c0 END))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))GLOB(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN -1883422052 THEN vt0.c0 END))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE (((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)))|((((vt0.c0))>((vt1.c0)))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT (((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)))|((((vt0.c0))>((vt1.c0)))))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE (((((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)))|((((vt0.c0))>((vt1.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (x'') GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (x''))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((x'') ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CAST(AVG(vt0.c0) AS TEXT) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CAST(AVG(vt0.c0) AS TEXT))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CAST(AVG(vt0.c0) AS TEXT)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CAST(AVG(vt0.c0) AS TEXT) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CAST(AVG(vt0.c0) AS TEXT))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CAST(AVG(vt0.c0) AS TEXT)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (vt0.c0) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE ((((((vt1.c0) NOTNULL), (((vt0.c0))!=((vt0.c0))), (+ (x'')), (NOT (vt0.c0)), CAST(vt0.c0 AS REAL)))!=((vt0.c0 COLLATE BINARY, ((vt1.c0)LIKE(vt1.c0)), ((((vt0.c0)AND(vt1.c0)))AND(vt0.c0)), -281633551, '1361077338')))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT ((((((vt1.c0) NOTNULL), (((vt0.c0))<>((vt0.c0))), (+ (x'')), (NOT (vt0.c0)), CAST(vt0.c0 AS REAL)))!=((vt0.c0 COLLATE BINARY, ((vt1.c0)LIKE(vt1.c0)), ((((vt0.c0)AND(vt1.c0)))AND(vt0.c0)), -281633551, '1361077338')))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((((((((vt1.c0) NOTNULL), (((vt0.c0))!=((vt0.c0))), (+ (x'')), (NOT (vt0.c0)), CAST(vt0.c0 AS REAL)))<>((vt0.c0 COLLATE BINARY, ((vt1.c0)LIKE(vt1.c0)), ((((vt0.c0)AND(vt1.c0)))AND(vt0.c0)), -281633551, '1361077338')))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((((((NULL)/(vt1.c0)))AND(vt1.c0 COLLATE BINARY)))OR(((vt1.c0)!=(vt1.c0))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((((NULL)/(vt1.c0)))AND(vt1.c0 COLLATE BINARY)))OR(((vt1.c0)!=(vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((((((NULL)/(vt1.c0)))AND(vt1.c0 COLLATE BINARY)))OR(((vt1.c0)<>(vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING TOTAL(GROUP_CONCAT(vt1.c0)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (TOTAL(GROUP_CONCAT(vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((TOTAL(GROUP_CONCAT(vt1.c0))) ISNULL);
SELECT vt0.c0 FROM vt1, vt0;
SELECT ALL vt0.c0 FROM vt1, vt0 WHERE ((((vt1.c0, vt1.c0, x'')) NOT BETWEEN ((x'', ')냡', ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))) AND ((((vt0.c0)>(vt0.c0)), ((vt0.c0)!=(vt1.c0)), ((vt1.c0) NOT NULL))))) UNION ALL SELECT vt0.c0 FROM vt1, vt0 WHERE ((NOT ((((vt1.c0, vt1.c0, x'')) NOT BETWEEN ((x'', ')냡', ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))) AND ((((vt0.c0)>(vt0.c0)), ((vt0.c0)!=(vt1.c0)), ((vt1.c0) NOT NULL))))))) UNION ALL SELECT vt0.c0 FROM vt1, vt0 WHERE ((((((vt1.c0, vt1.c0, x'')) NOT BETWEEN ((x'', ')냡', ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))) AND ((((vt0.c0)>(vt0.c0)), ((vt0.c0)!=(vt1.c0)), ((vt1.c0) NOT NULL))))) ISNULL));
SELECT vt0.c0 FROM vt1, vt0;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE (CASE WHEN ((vt1.c0)|(vt0.c0)) THEN 0.5964769722609204 COLLATE RTRIM WHEN COALESCE(vt0.c0, vt0.c0) THEN LOWER('38062900') WHEN vt0.c0 COLLATE BINARY THEN (+ (vt0.c0)) END) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (CASE WHEN ((vt1.c0)|(vt0.c0)) THEN 0.5964769722609204 COLLATE RTRIM WHEN COALESCE(vt0.c0, vt0.c0) THEN LOWER('38062900') WHEN vt0.c0 COLLATE BINARY THEN (+ (vt0.c0)) END))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE (((CASE WHEN ((vt1.c0)|(vt0.c0)) THEN 0.5964769722609204 COLLATE RTRIM WHEN COALESCE(vt0.c0, vt0.c0) THEN LOWER('38062900') WHEN vt0.c0 COLLATE BINARY THEN (+ (vt0.c0)) END) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((NOT (vt0.c0))) NOTNULL)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((NOT (vt0.c0))) NOTNULL)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((NOT (vt0.c0))) NOTNULL)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING TOTAL((('-v')>=(MAX(vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (TOTAL((('-v')>=(MAX(vt1.c0)))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((TOTAL((('-v')>=(MAX(vt1.c0))))) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (INSTR(CAST(vt0.c0 AS NUMERIC), ((vt0.c0)>>(vt0.c0)))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (INSTR(CAST(vt0.c0 AS NUMERIC), ((vt0.c0)>>(vt0.c0)))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((INSTR(CAST(vt0.c0 AS NUMERIC), ((vt0.c0)>>(vt0.c0)))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ('766486837') UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ('766486837'))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((('766486837') ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 WHERE (((HEX(DISTINCT vt0.c0))IS NOT(((vt1.c0)AND(vt1.c0))))) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 WHERE ((NOT (((HEX(DISTINCT vt0.c0))IS NOT(((vt1.c0)AND(vt1.c0))))))) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 WHERE (((((HEX(DISTINCT vt0.c0))IS NOT(((vt1.c0)AND(vt1.c0))))) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING -1 UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (-1)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((-1) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING -1 UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (-1)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((-1) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 LEFT OUTER JOIN vt0 ON (vt0.c0 COLLATE BINARY IN ());
SELECT ALL vt1.c0 FROM vt1 LEFT OUTER JOIN vt0 ON (vt0.c0 COLLATE BINARY IN ()) WHERE (vt1.c0) UNION ALL SELECT ALL vt1.c0 FROM vt1 LEFT OUTER JOIN vt0 ON (vt0.c0 COLLATE BINARY IN ()) WHERE ((NOT (vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1 LEFT OUTER JOIN vt0 ON (vt0.c0 COLLATE BINARY IN ()) WHERE (((vt1.c0) ISNULL));
SELECT ALL vt1.c0 FROM vt1 LEFT OUTER JOIN vt0 ON (vt0.c0 COLLATE BINARY IN ());
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE (((CAST(vt0.c0 AS REAL))!=(((vt1.c0)AND(vt1.c0))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT (((CAST(vt0.c0 AS REAL))<>(((vt1.c0)AND(vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE (((((CAST(vt0.c0 AS REAL))<>(((vt1.c0)AND(vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, vt0 WHERE (((HEX(NULL))<(CAST(vt1.c0 AS BLOB)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt1, vt0 WHERE ((NOT (((HEX(NULL))<(CAST(vt1.c0 AS BLOB)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt1, vt0 WHERE (((((HEX(NULL))<(CAST(vt1.c0 AS BLOB)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING GROUP_CONCAT(AVG(x'd887')) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (GROUP_CONCAT(AVG(x'd887')))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING ((GROUP_CONCAT(AVG(x'd887'))) ISNULL);
SELECT ALL * FROM vt1 NATURAL JOIN vt0;
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE ((CAST(vt0.c0 AS INTEGER) IN ())) UNION ALL SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE ((NOT ((CAST(vt0.c0 AS INTEGER) IN ())))) UNION ALL SELECT * FROM vt1 NATURAL JOIN vt0 WHERE ((((CAST(vt0.c0 AS INTEGER) IN ())) ISNULL));
SELECT ALL * FROM vt1 NATURAL JOIN vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((vt0.c0)) BETWEEN (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND ((((vt0.c0)|(vt0.c0)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0)) BETWEEN (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND ((((vt0.c0)|(vt0.c0)))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((vt0.c0)) BETWEEN (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND ((((vt0.c0)|(vt0.c0)))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (CAST(vt0.c0 AS REAL)) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((NOT (CAST(vt0.c0 AS REAL)))) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((CAST(vt0.c0 AS REAL)) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MIN(vt1.c0) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MIN(vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MIN(vt1.c0)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MIN(vt1.c0) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MIN(vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MIN(vt1.c0)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (vt1.c0) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt0, vt1;
SELECT DISTINCT vt1.c0 FROM vt0, vt1 WHERE (json_remove(vt1.c0, vt1.c0, vt1.c0, vt0.c0) COLLATE NOCASE) UNION SELECT DISTINCT vt1.c0 FROM vt0, vt1 WHERE ((NOT (json_remove(vt1.c0, vt1.c0, vt1.c0, vt0.c0) COLLATE NOCASE))) UNION SELECT DISTINCT vt1.c0 FROM vt0, vt1 WHERE (((json_remove(vt1.c0, vt1.c0, vt1.c0, vt0.c0) COLLATE NOCASE) ISNULL));
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 WHERE (((((vt1.c0)>(NULL))) IS FALSE)) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((NOT (((((vt1.c0)>(NULL))) IS FALSE)))) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE (((((((vt1.c0)>(NULL))) IS FALSE)) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING AVG(SUM(vt1.c0)) UNION ALL SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING (NOT (AVG(SUM(vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING ((AVG(SUM(vt1.c0))) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (CAST((((vt0.c0, vt0.c0, 0.8436340409796043))<((vt0.c0, vt0.c0, vt0.c0))) AS TEXT)) UNION ALL SELECT * FROM vt0 WHERE ((NOT (CAST((((vt0.c0, vt0.c0, 0.8436340409796043))<((vt0.c0, vt0.c0, vt0.c0))) AS TEXT)))) UNION ALL SELECT ALL * FROM vt0 WHERE (((CAST((((vt0.c0, vt0.c0, 0.8436340409796043))<((vt0.c0, vt0.c0, vt0.c0))) AS TEXT)) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE ((((- (vt1.c0)))>=(((((vt1.c0)OR(vt0.c0)))AND(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT ((((- (vt1.c0)))>=(((((vt1.c0)OR(vt0.c0)))AND(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((((((- (vt1.c0)))>=(((((vt1.c0)OR(vt0.c0)))AND(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (LOWER(DISTINCT ((vt0.c0)OR(vt1.c0)))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT (LOWER(DISTINCT ((vt0.c0)OR(vt1.c0)))))) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((LOWER(DISTINCT ((vt0.c0)OR(vt1.c0)))) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM vt1, vt0;
SELECT ALL * FROM vt1, vt0 WHERE (((((((((((((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR((vt1.c0 IN (vt1.c0)))))AND(((vt1.c0)+(vt1.c0)))))OR(((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)))))AND('-771030788')))OR(CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END)))OR((NULL IN (vt0.c0))))) UNION ALL SELECT * FROM vt1, vt0 WHERE ((NOT (((((((((((((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR((vt1.c0 IN (vt1.c0)))))AND(((vt1.c0)+(vt1.c0)))))OR(((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)))))AND('-771030788')))OR(CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END)))OR((NULL IN (vt0.c0))))))) UNION ALL SELECT ALL * FROM vt1, vt0 WHERE (((((((((((((((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR((vt1.c0 IN (vt1.c0)))))AND(((vt1.c0)+(vt1.c0)))))OR(((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)))))AND('-771030788')))OR(CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END)))OR((NULL IN (vt0.c0))))) ISNULL));
SELECT ALL * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((+ (CAST(vt1.c0 AS BLOB)))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((+ (CAST(vt1.c0 AS BLOB)))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((+ (CAST(vt1.c0 AS BLOB)))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((2076059838)) AND ((vt1.c0))))<>(LIKELY(vt1.c0)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((((((vt1.c0)) NOT BETWEEN ((2076059838)) AND ((vt1.c0))))!=(LIKELY(vt1.c0)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((((((vt1.c0)) NOT BETWEEN ((2076059838)) AND ((vt1.c0))))<>(LIKELY(vt1.c0)))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING TOTAL(COUNT(*)) UNION ALL SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING (NOT (TOTAL(COUNT(*)))) UNION ALL SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING ((TOTAL(COUNT(*))) ISNULL);
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE (CASE WHEN ((vt1.c0)OR(vt1.c0)) THEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) WHEN vt1.c0 THEN ((vt1.c0)/(vt1.c0)) WHEN vt1.c0 THEN (+ (vt1.c0)) ELSE ((vt1.c0)>>(vt1.c0)) END) UNION ALL SELECT * FROM vt1 NOT INDEXED WHERE ((NOT (CASE WHEN ((vt1.c0)OR(vt1.c0)) THEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) WHEN vt1.c0 THEN ((vt1.c0)/(vt1.c0)) WHEN vt1.c0 THEN (+ (vt1.c0)) ELSE ((vt1.c0)>>(vt1.c0)) END))) UNION ALL SELECT ALL * FROM vt1 WHERE (((CASE WHEN ((vt1.c0)OR(vt1.c0)) THEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) WHEN vt1.c0 THEN ((vt1.c0)/(vt1.c0)) WHEN vt1.c0 THEN (+ (vt1.c0)) ELSE ((vt1.c0)>>(vt1.c0)) END) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0)))||('1120675686'))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0 IN (vt0.c0)))||('1120675686'))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((vt0.c0 IN (vt0.c0)))||('1120675686'))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))) AND ((((vt0.c0)<>(vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))) AND ((((vt0.c0)!=(vt0.c0)))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))) AND ((((vt0.c0)!=(vt0.c0)))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MIN(vt0.c0 COLLATE BINARY) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MIN(vt0.c0 COLLATE BINARY))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN(vt0.c0 COLLATE BINARY)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MIN(vt0.c0 COLLATE BINARY) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MIN(vt0.c0 COLLATE BINARY))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN(vt0.c0 COLLATE BINARY)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (((QUOTE(vt0.c0))/(CASE WHEN vt0.c0 THEN vt0.c0 END))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((QUOTE(vt0.c0))/(CASE WHEN vt0.c0 THEN vt0.c0 END))))) UNION ALL SELECT * FROM vt0 WHERE (((((QUOTE(vt0.c0))/(CASE WHEN vt0.c0 THEN vt0.c0 END))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((0Xffffffffb3e96cf2)*((- (vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((0xffffffffb3e96cf2)*((- (vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((0xffffffffb3e96cf2)*((- (vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (CAST(((vt0.c0)IS NOT(vt0.c0)) AS NUMERIC)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CAST(((vt0.c0)IS NOT(vt0.c0)) AS NUMERIC)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST(((vt0.c0)IS NOT(vt0.c0)) AS NUMERIC)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING ((MIN(MAX(vt1.c0)))==(AVG(GROUP_CONCAT(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING (NOT (((MIN(MAX(vt1.c0)))=(AVG(GROUP_CONCAT(vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING ((((MIN(MAX(vt1.c0)))==(AVG(GROUP_CONCAT(vt0.c0))))) ISNULL);
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((~ (NULL))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((NOT ((~ (NULL))))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((((~ (NULL))) ISNULL));
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((((((~ (vt1.c0)))AND((- (1.796876242E9)))))OR(CAST(vt1.c0 AS TEXT)))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((((((~ (vt1.c0)))AND((- (1.796876242E9)))))OR(CAST(vt1.c0 AS TEXT)))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((((((~ (vt1.c0)))AND((- (1.796876242E9)))))OR(CAST(vt1.c0 AS TEXT)))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (0.8304529883902654) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (0.8304529883902654))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((0.8304529883902654) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (CASE CASE vt0.c0  WHEN x'26845a46' THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END  WHEN (((vt1.c0, vt1.c0, vt1.c0))>((vt0.c0, vt0.c0, vt0.c0))) THEN vt1.c0 COLLATE RTRIM END) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT (CASE CASE vt0.c0  WHEN x'26845a46' THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END  WHEN (((vt1.c0, vt1.c0, vt1.c0))>((vt0.c0, vt0.c0, vt0.c0))) THEN vt1.c0 COLLATE RTRIM END))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((CASE CASE vt0.c0  WHEN x'26845a46' THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END  WHEN (((vt1.c0, vt1.c0, vt1.c0))>((vt0.c0, vt0.c0, vt0.c0))) THEN vt1.c0 COLLATE RTRIM END) ISNULL));
SELECT vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0)<(CASE vt0.c0  WHEN 0.03358409933260276 THEN vt0.c0 ELSE vt0.c0 END))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((vt0.c0)<(CASE vt0.c0  WHEN 0.03358409933260276 THEN vt0.c0 ELSE vt0.c0 END))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0)<(CASE vt0.c0  WHEN 0.03358409933260276 THEN vt0.c0 ELSE vt0.c0 END))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((((vt1.c0)>(vt0.c0))) IS TRUE)) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((NOT (((((vt1.c0)>(vt0.c0))) IS TRUE)))) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((((((vt1.c0)>(vt0.c0))) IS TRUE)) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX((GROUP_CONCAT(vt0.c0) IN (vt0.c0, vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX((GROUP_CONCAT(vt0.c0) IN (vt0.c0, vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX((GROUP_CONCAT(vt0.c0) IN (vt0.c0, vt0.c0)))) ISNULL);
SELECT vt1.c0 FROM vt1, vt0;
SELECT vt1.c0 FROM vt1 NOT INDEXED, vt0 WHERE (-7.85459813E8) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt0 WHERE ((NOT (-7.85459813E8))) UNION ALL SELECT vt1.c0 FROM vt1, vt0 WHERE (((-7.85459813E8) ISNULL));
SELECT vt1.c0 FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE (CAST((+ (vt1.c0)) AS BLOB)) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT (CAST((+ (vt1.c0)) AS BLOB)))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE (((CAST((+ (vt1.c0)) AS BLOB)) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((~ (((vt0.c0)+(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((~ (((vt0.c0)+(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((~ (((vt0.c0)+(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1 NATURAL JOIN vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1 NATURAL JOIN vt0 GROUP BY vt0.c0 HAVING CASE WHEN CAST(COUNT(*) AS INTEGER) THEN GROUP_CONCAT(vt0.c0) END UNION ALL SELECT vt0.c0 FROM vt1 NATURAL JOIN vt0 GROUP BY vt0.c0 HAVING (NOT (CASE WHEN CAST(COUNT(*) AS INTEGER) THEN GROUP_CONCAT(vt0.c0) END)) UNION ALL SELECT ALL vt0.c0 FROM vt1 NATURAL JOIN vt0 GROUP BY vt0.c0 HAVING ((CASE WHEN CAST(COUNT(*) AS INTEGER) THEN GROUP_CONCAT(vt0.c0) END) ISNULL);
SELECT ALL vt0.c0 FROM vt1 NATURAL JOIN vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1 NATURAL JOIN vt0 GROUP BY vt0.c0 HAVING CASE WHEN CAST(COUNT(*) AS INTEGER) THEN GROUP_CONCAT(vt0.c0) END UNION ALL SELECT vt0.c0 FROM vt1 NATURAL JOIN vt0 GROUP BY vt0.c0 HAVING (NOT (CASE WHEN CAST(COUNT(*) AS INTEGER) THEN GROUP_CONCAT(vt0.c0) END)) UNION ALL SELECT ALL vt0.c0 FROM vt1 NATURAL JOIN vt0 GROUP BY vt0.c0 HAVING ((CASE WHEN CAST(COUNT(*) AS INTEGER) THEN GROUP_CONCAT(vt0.c0) END) ISNULL);
SELECT ALL vt0.c0 FROM vt1 NATURAL JOIN vt0 GROUP BY vt0.c0;
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE (CAST(((NULL)|(vt1.c0)) AS REAL)) UNION ALL SELECT * FROM vt1 WHERE ((NOT (CAST(((NULL)|(vt1.c0)) AS REAL)))) UNION ALL SELECT * FROM vt1 WHERE (((CAST(((NULL)|(vt1.c0)) AS REAL)) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND ((CAST(vt1.c0 AS NUMERIC))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND ((CAST(vt1.c0 AS NUMERIC))))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND ((CAST(vt1.c0 AS NUMERIC))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (UNICODE(((vt0.c0)>=(vt0.c0)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (UNICODE(((vt0.c0)>=(vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((UNICODE(((vt0.c0)>=(vt0.c0)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING GROUP_CONCAT(AVG(vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(AVG(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(AVG(vt0.c0))) ISNULL);
SELECT SUM((+ (vt0.c0))) FROM vt0, vt1 ORDER BY (NOT (TRIM(vt1.c0))) ASC  NULLS LAST;
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((vt0.c0)OR(vt0.c0)) IN ())) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0)OR(vt0.c0)) IN ())))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0)OR(vt0.c0)) IN ())) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0;
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE (CAST(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) AS REAL)) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((NOT (CAST(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) AS REAL)))) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE (((CAST(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) AS REAL)) ISNULL));
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE (((((CAST(vt0.c0 AS TEXT))AND(((vt0.c0) NOTNULL))))OR(vt1.c0 COLLATE NOCASE))) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((NOT (((((CAST(vt0.c0 AS TEXT))AND(((vt0.c0) NOTNULL))))OR(vt1.c0 COLLATE NOCASE))))) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 WHERE (((((((CAST(vt0.c0 AS TEXT))AND(((vt0.c0) NOTNULL))))OR(vt1.c0 COLLATE NOCASE))) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG(TOTAL(vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (AVG(TOTAL(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG(TOTAL(vt0.c0))) ISNULL);
SELECT vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((UNLIKELY(DISTINCT vt1.c0) IN (((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)), CASE WHEN vt1.c0 THEN vt1.c0 END))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT ((UNLIKELY(DISTINCT vt1.c0) IN (((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)), CASE WHEN vt1.c0 THEN vt1.c0 END))))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((((UNLIKELY(DISTINCT vt1.c0) IN (((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)), CASE WHEN vt1.c0 THEN vt1.c0 END))) ISNULL));
SELECT vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT DISTINCT vt1.c0 FROM vt0, vt1;
SELECT DISTINCT vt1.c0 FROM vt0, vt1 WHERE (NULLIF(DISTINCT ((((vt0.c0)AND(vt1.c0)))OR(0xffffffffa9d310a6)), 0.43451672937793717)) UNION SELECT DISTINCT vt1.c0 FROM vt0, vt1 WHERE ((NOT (NULLIF(DISTINCT ((((vt0.c0)AND(vt1.c0)))OR(0Xffffffffa9d310a6)), 0.43451672937793717)))) UNION SELECT DISTINCT vt1.c0 FROM vt0, vt1 WHERE (((NULLIF(DISTINCT ((((vt0.c0)AND(vt1.c0)))OR(0xffffffffa9d310a6)), 0.43451672937793717)) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt0, vt1;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((~ (TRIM(vt1.c0)))) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT ((~ (TRIM(vt1.c0)))))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((((~ (TRIM(vt1.c0)))) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c0 UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c0 UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM vt0, vt1;
SELECT * FROM vt0, vt1 WHERE ((((NOT (vt0.c0))) BETWEEN (vt0.c0) AND (vt0.c0))) UNION ALL SELECT * FROM vt0, vt1 WHERE ((NOT ((((NOT (vt0.c0))) BETWEEN (vt0.c0) AND (vt0.c0))))) UNION ALL SELECT * FROM vt0, vt1 WHERE ((((((NOT (vt0.c0))) BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL));
SELECT * FROM vt0, vt1;
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0, vt1;
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, 1.545928916E9, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))&((((vt0.c0))<((vt0.c0)))))) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((NOT ((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, 1.545928916E9, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))&((((vt0.c0))<((vt0.c0)))))))) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, 1.545928916E9, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))&((((vt0.c0))<((vt0.c0)))))) ISNULL));
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0, vt1;
SELECT vt1.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON ((((((vt1.c0)OR(vt0.c0)))AND(vt1.c0))) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (NULL COLLATE BINARY)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON ((((((vt1.c0)OR(vt0.c0)))AND(vt1.c0))) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (NULL COLLATE BINARY)) WHERE ((~ (vt0.c0))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON ((((((vt1.c0)OR(vt0.c0)))AND(vt1.c0))) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (NULL COLLATE BINARY)) WHERE ((NOT ((~ (vt0.c0))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON ((((((vt1.c0)OR(vt0.c0)))AND(vt1.c0))) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (NULL COLLATE BINARY)) WHERE ((((~ (vt0.c0))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON ((((((vt1.c0)OR(vt0.c0)))AND(vt1.c0))) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (NULL COLLATE BINARY)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (- (((GROUP_CONCAT(COUNT(COUNT(*)))) BETWEEN (vt1.c0) AND (MAX(GROUP_CONCAT(COUNT(NULL))))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((- (((GROUP_CONCAT(COUNT(COUNT(*)))) BETWEEN (vt1.c0) AND (MAX(GROUP_CONCAT(COUNT(NULL))))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((- (((GROUP_CONCAT(COUNT(COUNT(*)))) BETWEEN (vt1.c0) AND (MAX(GROUP_CONCAT(COUNT(NULL)))))))) ISNULL);
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE ('') UNION ALL SELECT * FROM vt1 WHERE ((NOT (''))) UNION ALL SELECT ALL * FROM vt1 WHERE ((('') ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM vt1 NOT INDEXED, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE (((vt0.c0 COLLATE BINARY)%(0.40415897154567937))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT (((vt0.c0 COLLATE BINARY)%(0.40415897154567937))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE (((((vt0.c0 COLLATE BINARY)%(0.40415897154567937))) ISNULL));
SELECT DISTINCT * FROM vt1 NOT INDEXED, vt0;
SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, vt1 WHERE ((((((vt0.c0)|(vt0.c0))))>=((((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt0, vt1 WHERE ((NOT ((((((vt0.c0)|(vt0.c0))))>=((((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt0, vt1 WHERE ((((((((vt0.c0)|(vt0.c0))))>=((((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING SUM(COUNT(*)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (SUM(COUNT(*)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM(COUNT(*))) ISNULL);
SELECT ALL * FROM vt1, vt0;
SELECT * FROM vt1, vt0 WHERE ((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0)))) IS FALSE)) UNION ALL SELECT * FROM vt1, vt0 WHERE ((NOT ((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0)))) IS FALSE)))) UNION ALL SELECT ALL * FROM vt1, vt0 WHERE ((((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0)))) IS FALSE)) ISNULL));
SELECT ALL * FROM vt1, vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)GLOB(CAST(vt0.c0 AS INTEGER)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)GLOB(CAST(vt0.c0 AS INTEGER)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)GLOB(CAST(vt0.c0 AS INTEGER)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((((((((4.4188629E8)AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(MIN(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, NULL))))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(CAST(vt1.c0 AS INTEGER)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((((((4.4188629E8)AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(MIN(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, NULL))))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(CAST(vt1.c0 AS INTEGER)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((((((((4.4188629E8)AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(MIN(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, NULL))))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(CAST(vt1.c0 AS INTEGER)))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(SUM(vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(SUM(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(SUM(vt0.c0))) ISNULL);
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((- (CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((NOT ((- (CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END))))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((((- (CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END))) ISNULL));
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE (((CASE vt0.c0  WHEN 0.8436340409796043 THEN vt1.c0 END) NOT BETWEEN ((- (vt1.c0))) AND ((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0)))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT (((CASE vt0.c0  WHEN 0.8436340409796043 THEN vt1.c0 END) NOT BETWEEN ((- (vt1.c0))) AND ((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0)))))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE (((((CASE vt0.c0  WHEN 0.8436340409796043 THEN vt1.c0 END) NOT BETWEEN ((- (vt1.c0))) AND ((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0 WHERE ((((((((((((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR('u츴a碏')) IN ())) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, vt0 WHERE ((NOT ((((((((((((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR('u츴a碏')) IN ())))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, vt0 WHERE ((((((((((((((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR('u츴a碏')) IN ())) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING x'cc80' UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING (NOT (x'cc80')) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING ((x'cc80') ISNULL);
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING x'cc80' UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING (NOT (x'cc80')) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING ((x'cc80') ISNULL);
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT vt0.c0 FROM vt0, vt1;
SELECT ALL vt0.c0 FROM vt0, vt1 WHERE (0.9112929398936973) UNION ALL SELECT vt0.c0 FROM vt0, vt1 WHERE ((NOT (0.9112929398936973))) UNION ALL SELECT ALL vt0.c0 FROM vt0, vt1 WHERE (((0.9112929398936973) ISNULL));
SELECT vt0.c0 FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE (vt1.c0) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt0 WHERE (CASE 0.012735393822898344  WHEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN (((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN vt0.c0 THEN ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)) WHEN vt1.c0 COLLATE NOCASE THEN x'' WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN vt0.c0 WHEN (vt0.c0 IN (vt0.c0, vt1.c0)) THEN vt1.c0 ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) END) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1, vt0 WHERE ((NOT (CASE 0.012735393822898344  WHEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN (((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN vt0.c0 THEN ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)) WHEN vt1.c0 COLLATE NOCASE THEN x'' WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN vt0.c0 WHEN (vt0.c0 IN (vt0.c0, vt1.c0)) THEN vt1.c0 ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) END))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, vt0 WHERE (((CASE 0.012735393822898344  WHEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN (((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN vt0.c0 THEN ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)) WHEN vt1.c0 COLLATE NOCASE THEN x'' WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN vt0.c0 WHEN (vt0.c0 IN (vt0.c0, vt1.c0)) THEN vt1.c0 ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) END) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 NOT INDEXED GROUP BY vt1.c0, vt0.c0 HAVING MAX(MAX(vt1.c0)) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING (NOT (MAX(MAX(vt1.c0)))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING ((MAX(MAX(vt1.c0))) ISNULL);
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE (('gf' COLLATE BINARY IN ())) UNION ALL SELECT * FROM vt1 WHERE ((NOT (('gf' COLLATE BINARY IN ())))) UNION ALL SELECT ALL * FROM vt1 WHERE (((('gf' COLLATE BINARY IN ())) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((CAST(vt0.c0 AS REAL) IN ())) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((CAST(vt0.c0 AS REAL) IN ())))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((CAST(vt0.c0 AS REAL) IN ())) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (CASE ((vt1.c0)OR(vt1.c0))  WHEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) THEN LTRIM(vt1.c0) END) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (CASE ((vt1.c0)OR(vt1.c0))  WHEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) THEN LTRIM(vt1.c0) END))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((CASE ((vt1.c0)OR(vt1.c0))  WHEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) THEN LTRIM(vt1.c0) END) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (+ (TYPEOF(DISTINCT TOTAL(vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((+ (TYPEOF(DISTINCT TOTAL(vt1.c0)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((+ (TYPEOF(DISTINCT TOTAL(vt1.c0))))) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (+ (TYPEOF(DISTINCT TOTAL(vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((+ (TYPEOF(DISTINCT TOTAL(vt1.c0)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((+ (TYPEOF(DISTINCT TOTAL(vt1.c0))))) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE ((+ (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT ((+ (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))))) UNION ALL SELECT ALL * FROM vt1 WHERE ((((+ (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON (+ (vt0.c0 COLLATE RTRIM));
SELECT DISTINCT vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON (+ (vt0.c0 COLLATE RTRIM)) WHERE (CAST(vt0.c0 AS NUMERIC)) UNION SELECT DISTINCT vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON (+ (vt0.c0 COLLATE RTRIM)) WHERE ((NOT (CAST(vt0.c0 AS NUMERIC)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON (+ (vt0.c0 COLLATE RTRIM)) WHERE (((CAST(vt0.c0 AS NUMERIC)) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON (+ (vt0.c0 COLLATE RTRIM));
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (0.7620350014393648 COLLATE NOCASE) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT (0.7620350014393648 COLLATE NOCASE))) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((0.7620350014393648 COLLATE NOCASE) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING ((CASE WHEN vt0.c0 THEN GROUP_CONCAT(SUM(AVG(SUM(NULL)))) ELSE vt0.c0 END)IS NOT(COUNT(MIN(AVG(vt1.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING (NOT (((CASE WHEN vt0.c0 THEN GROUP_CONCAT(SUM(AVG(SUM(NULL)))) ELSE vt0.c0 END)IS NOT(COUNT(MIN(AVG(vt1.c0))))))) UNION ALL SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING ((((CASE WHEN vt0.c0 THEN GROUP_CONCAT(SUM(AVG(SUM(NULL)))) ELSE vt0.c0 END)IS NOT(COUNT(MIN(AVG(vt1.c0)))))) ISNULL);
SELECT * FROM vt1;
SELECT ALL * FROM vt1 WHERE ((((+ (vt1.c0)))AND(((vt1.c0) NOT NULL)))) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT ((((+ (vt1.c0)))AND(((vt1.c0) NOT NULL)))))) UNION ALL SELECT * FROM vt1 WHERE ((((((+ (vt1.c0)))AND(((vt1.c0) NOT NULL)))) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT vt0.c0 FROM vt0, vt1;
SELECT DISTINCT vt0.c0 FROM vt0 NOT INDEXED, vt1 WHERE (UNICODE(((vt1.c0) IS FALSE))) UNION SELECT DISTINCT vt0.c0 FROM vt0, vt1 WHERE ((NOT (UNICODE(((vt1.c0) IS FALSE))))) UNION SELECT DISTINCT vt0.c0 FROM vt0, vt1 WHERE (((UNICODE(((vt1.c0) IS FALSE))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0, vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (CASE WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN (vt1.c0 IN ()) ELSE NULL END) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (CASE WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN (vt1.c0 IN ()) ELSE NULL END))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((CASE WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN (vt1.c0 IN ()) ELSE NULL END) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MIN(SUM(COUNT(*)) COLLATE RTRIM) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MIN(SUM(COUNT(*)) COLLATE RTRIM))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MIN(SUM(COUNT(*)) COLLATE RTRIM)) ISNULL);
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((0X18c00d12)))) BETWEEN ((vt1.c0 IN (vt1.c0))) AND (((vt1.c0)-(vt1.c0))))) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT ((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((0x18c00d12)))) BETWEEN ((vt1.c0 IN (vt1.c0))) AND (((vt1.c0)-(vt1.c0))))))) UNION ALL SELECT * FROM vt1 WHERE ((((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((0x18c00d12)))) BETWEEN ((vt1.c0 IN (vt1.c0))) AND (((vt1.c0)-(vt1.c0))))) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE (((UNICODE(vt1.c0))*(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 END))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (((UNICODE(vt1.c0))*(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 END))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE (((((UNICODE(vt1.c0))*(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 END))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 WHERE (((CAST(vt1.c0 AS INTEGER))<=((NOT (vt0.c0))))) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 WHERE ((NOT (((CAST(vt1.c0 AS INTEGER))<=((NOT (vt0.c0))))))) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 WHERE (((((CAST(vt1.c0 AS INTEGER))<=((NOT (vt0.c0))))) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING TOTAL(TYPEOF(DISTINCT COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING (NOT (TOTAL(TYPEOF(DISTINCT COUNT(*))))) UNION ALL SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING ((TOTAL(TYPEOF(DISTINCT COUNT(*)))) ISNULL);
SELECT * FROM vt1;
SELECT ALL * FROM vt1 WHERE ((NOT (x'023c'))) ORDER BY CAST(((0.07270368291048301) NOTNULL) AS REAL)  NULLS FIRST, ((vt1.c0) IS TRUE) ASC  NULLS FIRST, CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END AS REAL) ASC;
SELECT * FROM vt1 WHERE ((NOT ((NOT (x'023c'))))) ORDER BY CAST(((0.07270368291048301) NOTNULL) AS REAL)  NULLS FIRST, ((vt1.c0) IS TRUE) ASC  NULLS FIRST, CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END AS REAL) ASC;
SELECT * FROM vt1 WHERE ((((NOT (x'023c'))) ISNULL)) ORDER BY CAST(((0.07270368291048301) NOTNULL) AS REAL)  NULLS FIRST, ((vt1.c0) IS TRUE) ASC  NULLS FIRST, CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END AS REAL) ASC;
SELECT * FROM vt1;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((vt0.c0 IN (vt0.c0)), vt0.c0 COLLATE NOCASE, ((vt0.c0) ISNULL))) AND ((CAST(vt0.c0 AS INTEGER), CAST(vt0.c0 AS INTEGER), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((vt0.c0 IN (vt0.c0)), vt0.c0 COLLATE NOCASE, ((vt0.c0) ISNULL))) AND ((CAST(vt0.c0 AS INTEGER), CAST(vt0.c0 AS INTEGER), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((vt0.c0 IN (vt0.c0)), vt0.c0 COLLATE NOCASE, ((vt0.c0) ISNULL))) AND ((CAST(vt0.c0 AS INTEGER), CAST(vt0.c0 AS INTEGER), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (CAST(((((vt1.c0)OR(x'a281')))OR(vt1.c0)) AS NUMERIC)) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (CAST(((((vt1.c0)OR(x'a281')))OR(vt1.c0)) AS NUMERIC)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((CAST(((((vt1.c0)OR(x'a281')))OR(vt1.c0)) AS NUMERIC)) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING GROUP_CONCAT(SUM(MIN(vt1.c0)) COLLATE NOCASE) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING (NOT (GROUP_CONCAT(SUM(MIN(vt1.c0)) COLLATE NOCASE))) UNION ALL SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING ((GROUP_CONCAT(SUM(MIN(vt1.c0)) COLLATE NOCASE)) ISNULL);
SELECT ALL * FROM vt0, vt1;
SELECT ALL * FROM vt0, vt1 WHERE (((CASE WHEN vt1.c0 THEN x'' ELSE vt0.c0 END)>=(CASE WHEN NULL THEN vt1.c0 END))) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE ((NOT (((CASE WHEN vt1.c0 THEN x'' ELSE vt0.c0 END)>=(CASE WHEN NULL THEN vt1.c0 END))))) UNION ALL SELECT * FROM vt0, vt1 WHERE (((((CASE WHEN vt1.c0 THEN x'' ELSE vt0.c0 END)>=(CASE WHEN NULL THEN vt1.c0 END))) ISNULL));
SELECT ALL * FROM vt0, vt1;
SELECT DISTINCT vt1.c0 FROM vt0, vt1;
SELECT DISTINCT vt1.c0 FROM vt0, vt1 WHERE (json_type(((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)))) UNION SELECT DISTINCT vt1.c0 FROM vt0, vt1 WHERE ((NOT (json_type(((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)))))) UNION SELECT DISTINCT vt1.c0 FROM vt0, vt1 WHERE (((json_type(((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt0, vt1;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (TRIM(NULL, COALESCE(NULL, vt0.c0))) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((NOT (TRIM(NULL, COALESCE(NULL, vt0.c0))))) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((TRIM(NULL, COALESCE(NULL, vt0.c0))) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING GROUP_CONCAT(CAST(MAX(GROUP_CONCAT(COUNT(vt0.c0))) AS TEXT)) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING (NOT (GROUP_CONCAT(CAST(MAX(GROUP_CONCAT(COUNT(vt0.c0))) AS TEXT)))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING ((GROUP_CONCAT(CAST(MAX(GROUP_CONCAT(COUNT(vt0.c0))) AS TEXT))) ISNULL);
SELECT ALL * FROM vt1, vt0;
SELECT ALL * FROM vt1, vt0 WHERE (CAST(((vt0.c0)OR(vt1.c0)) AS NUMERIC)) UNION ALL SELECT * FROM vt1, vt0 WHERE ((NOT (CAST(((vt0.c0)OR(vt1.c0)) AS NUMERIC)))) UNION ALL SELECT ALL * FROM vt1, vt0 WHERE (((CAST(((vt0.c0)OR(vt1.c0)) AS NUMERIC)) ISNULL));
SELECT ALL * FROM vt1, vt0;
SELECT DISTINCT vt0.c0 FROM vt0, vt1;
SELECT DISTINCT vt0.c0 FROM vt0, vt1 WHERE (((vt0.c0 COLLATE NOCASE)+(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt0, vt1 WHERE ((NOT (((vt0.c0 COLLATE NOCASE)+(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0, vt1 WHERE (((((vt0.c0 COLLATE NOCASE)+(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0, vt1;
SELECT ALL vt0.c0 FROM vt1 INNER JOIN vt0 ON vt0.c0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1 INNER JOIN vt0 ON vt0.c0 WHERE ('859696561' COLLATE RTRIM) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt1 INNER JOIN vt0 ON vt0.c0 WHERE ((NOT ('859696561' COLLATE RTRIM))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt1 INNER JOIN vt0 ON vt0.c0 WHERE ((('859696561' COLLATE RTRIM) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1 INNER JOIN vt0 ON vt0.c0 GROUP BY vt0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING TOTAL((((MIN(vt1.c0)))<=((vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (TOTAL((((MIN(vt1.c0)))<=((vt1.c0)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((TOTAL((((MIN(vt1.c0)))<=((vt1.c0))))) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE ((((vt0.c0)AND(vt0.c0)) IN (vt0.c0 COLLATE RTRIM))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((((vt0.c0)AND(vt0.c0)) IN (vt0.c0 COLLATE RTRIM))))) UNION ALL SELECT * FROM vt0 WHERE ((((((vt0.c0)AND(vt0.c0)) IN (vt0.c0 COLLATE RTRIM))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0, vt1;
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0, vt1 WHERE (UNLIKELY(vt1.c0 COLLATE NOCASE)) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0, vt1 WHERE ((NOT (UNLIKELY(vt1.c0 COLLATE NOCASE)))) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0, vt1 WHERE (((UNLIKELY(vt1.c0 COLLATE NOCASE)) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0, vt1;
SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, vt0 WHERE ((vt0.c0 COLLATE BINARY IN ())) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt1, vt0 WHERE ((NOT ((vt0.c0 COLLATE BINARY IN ())))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt1, vt0 WHERE ((((vt0.c0 COLLATE BINARY IN ())) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON CAST(((vt1.c0) NOT NULL) AS BLOB) GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON CAST(((vt1.c0) NOT NULL) AS BLOB) GROUP BY vt1.c0, vt0.c0 HAVING SQLITE_SOURCE_ID() UNION ALL SELECT vt1.c0, vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON CAST(((vt1.c0) NOT NULL) AS BLOB) GROUP BY vt1.c0, vt0.c0 HAVING (NOT (SQLITE_SOURCE_ID())) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON CAST(((vt1.c0) NOT NULL) AS BLOB) GROUP BY vt1.c0, vt0.c0 HAVING ((SQLITE_SOURCE_ID()) ISNULL);
SELECT vt1.c0, vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON CAST(((vt1.c0) NOT NULL) AS BLOB) GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON CAST(((vt1.c0) NOT NULL) AS BLOB) GROUP BY vt1.c0, vt0.c0 HAVING SQLITE_SOURCE_ID() UNION ALL SELECT vt1.c0, vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON CAST(((vt1.c0) NOT NULL) AS BLOB) GROUP BY vt1.c0, vt0.c0 HAVING (NOT (SQLITE_SOURCE_ID())) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON CAST(((vt1.c0) NOT NULL) AS BLOB) GROUP BY vt1.c0, vt0.c0 HAVING ((SQLITE_SOURCE_ID()) ISNULL);
SELECT vt1.c0, vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON CAST(((vt1.c0) NOT NULL) AS BLOB) GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((NOT (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((((NOT (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE (((((vt0.c0)/(vt1.c0)))IS NOT((vt0.c0 IN ())))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (((((vt0.c0)/(vt1.c0)))IS NOT((vt0.c0 IN ())))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE (((((((vt0.c0)/(vt1.c0)))IS NOT((vt0.c0 IN ())))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0 WHERE (((((0.7900947803422121 IN (vt1.c0, vt0.c0))))=((((vt0.c0) NOTNULL))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1, vt0 WHERE ((NOT (((((0.7900947803422121 IN (vt1.c0, vt0.c0))))=((((vt0.c0) NOTNULL))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1, vt0 WHERE (((((((0.7900947803422121 IN (vt1.c0, vt0.c0))))=((((vt0.c0) NOTNULL))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT ALL vt0.c0 FROM vt0 CROSS JOIN vt1 ON ((((((vt0.c0)!=(vt1.c0)))AND(((vt1.c0)>=(vt1.c0)))))OR(((vt0.c0)&(vt1.c0)))) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 CROSS JOIN vt1 ON ((((((vt0.c0)<>(vt1.c0)))AND(((vt1.c0)>=(vt1.c0)))))OR(((vt0.c0)&(vt1.c0)))) GROUP BY vt0.c0 HAVING MAX(MAX(vt1.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 CROSS JOIN vt1 ON ((((((vt0.c0)!=(vt1.c0)))AND(((vt1.c0)>=(vt1.c0)))))OR(((vt0.c0)&(vt1.c0)))) GROUP BY vt0.c0 HAVING (NOT (MAX(MAX(vt1.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 CROSS JOIN vt1 ON ((((((vt0.c0)!=(vt1.c0)))AND(((vt1.c0)>=(vt1.c0)))))OR(((vt0.c0)&(vt1.c0)))) GROUP BY vt0.c0 HAVING ((MAX(MAX(vt1.c0))) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((LIKELY(DISTINCT vt1.c0))OR((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))))AND((vt1.c0 IN ())))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((LIKELY(DISTINCT vt1.c0))OR((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))))AND((vt1.c0 IN ())))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((((((LIKELY(DISTINCT vt1.c0))OR((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))))AND((vt1.c0 IN ())))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT vt0.c0 FROM vt0 NOT INDEXED;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))<<((('-1540141016')||(vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))<<((('-1540141016')||(vt0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))<<((('-1540141016')||(vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0 NOT INDEXED;
SELECT ALL vt1.c0, vt0.c0 FROM vt0 NATURAL JOIN vt1 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt0 NATURAL JOIN vt1 WHERE (((vt0.c0) IS TRUE)) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt0 NATURAL JOIN vt1 WHERE ((NOT (((vt0.c0) IS TRUE)))) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt0 NATURAL JOIN vt1 WHERE (((((vt0.c0) IS TRUE)) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0 NATURAL JOIN vt1 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING CAST(((SUM(SUM(COUNT(*))))+(vt1.c0)) AS TEXT) UNION ALL SELECT vt1.c0 FROM vt1 NOT INDEXED GROUP BY vt1.c0 HAVING (NOT (CAST(((SUM(SUM(COUNT(*))))+(vt1.c0)) AS TEXT))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((CAST(((SUM(SUM(COUNT(*))))+(vt1.c0)) AS TEXT)) ISNULL);
SELECT TOTAL(CASE vt1.c0  WHEN ((vt1.c0)>=(vt0.c0)) THEN ((vt0.c0) IS TRUE) WHEN (vt1.c0 IN ()) THEN ((vt0.c0) ISNULL) WHEN (vt1.c0 IN (vt1.c0)) THEN vt1.c0 END) FROM vt1, vt0;
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt0.c0 COLLATE RTRIM)AND(CAST(vt0.c0 AS NUMERIC))))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN NULL END));
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt0.c0 COLLATE RTRIM)AND(CAST(vt0.c0 AS NUMERIC))))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN NULL END)) WHERE (((((((vt1.c0)>=(vt0.c0)))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN -778797790 WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END)))OR((- (vt0.c0))))) UNION ALL SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt0.c0 COLLATE RTRIM)AND(CAST(vt0.c0 AS NUMERIC))))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN NULL END)) WHERE ((NOT (((((((vt1.c0)>=(vt0.c0)))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN -778797790 WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END)))OR((- (vt0.c0))))))) UNION ALL SELECT * FROM vt0 NOT INDEXED LEFT OUTER JOIN vt1 ON ((((vt0.c0 COLLATE RTRIM)AND(CAST(vt0.c0 AS NUMERIC))))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN NULL END)) WHERE (((((((((vt1.c0)>=(vt0.c0)))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN -778797790 WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END)))OR((- (vt0.c0))))) ISNULL));
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt0.c0 COLLATE RTRIM)AND(CAST(vt0.c0 AS NUMERIC))))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN NULL END));
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (CAST(((vt1.c0)<=(vt1.c0)) AS INTEGER)) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (CAST(((vt1.c0)<=(vt1.c0)) AS INTEGER)))) UNION SELECT DISTINCT * FROM vt1 WHERE (((CAST(((vt1.c0)<=(vt1.c0)) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 END)>>(((((vt1.c0)OR(vt1.c0)))OR(NULL))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((CASE WHEN vt1.c0 THEN vt1.c0 END)>>(((((vt1.c0)OR(vt1.c0)))OR(NULL))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((CASE WHEN vt1.c0 THEN vt1.c0 END)>>(((((vt1.c0)OR(vt1.c0)))OR(NULL))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING MIN(GROUP_CONCAT(vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING (NOT (MIN(GROUP_CONCAT(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING ((MIN(GROUP_CONCAT(vt0.c0))) ISNULL);
SELECT vt1.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON CAST((((vt0.c0))<((vt0.c0))) AS NUMERIC);
SELECT ALL vt1.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON CAST((((vt0.c0))<((vt0.c0))) AS NUMERIC) WHERE ((SQLITE_VERSION() IN (((vt1.c0) ISNULL)))) UNION ALL SELECT vt1.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON CAST((((vt0.c0))<((vt0.c0))) AS NUMERIC) WHERE ((NOT ((SQLITE_VERSION() IN (((vt1.c0) ISNULL)))))) UNION ALL SELECT ALL vt1.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON CAST((((vt0.c0))<((vt0.c0))) AS NUMERIC) WHERE ((((SQLITE_VERSION() IN (((vt1.c0) ISNULL)))) ISNULL));
SELECT vt1.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON CAST((((vt0.c0))<((vt0.c0))) AS NUMERIC);
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0;
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE (((vt0.c0)IS(((vt1.c0) IS FALSE)))) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((NOT (((vt0.c0)IS(((vt1.c0) IS FALSE)))))) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0 NOT INDEXED WHERE (((((vt0.c0)IS(((vt1.c0) IS FALSE)))) ISNULL));
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0;
SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, vt0 WHERE ((~ ((vt1.c0 IN (vt1.c0, vt1.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt1, vt0 WHERE ((NOT ((~ ((vt1.c0 IN (vt1.c0, vt1.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt1, vt0 WHERE ((((~ ((vt1.c0 IN (vt1.c0, vt1.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING GROUP_CONCAT(TOTAL(vt1.c0)) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (GROUP_CONCAT(TOTAL(vt1.c0)))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING ((GROUP_CONCAT(TOTAL(vt1.c0))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((0.5164969791854629 IN (((((vt0.c0)OR(vt0.c0)))AND(0.2215613419690179)), CAST(vt0.c0 AS INTEGER)))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((0.5164969791854629 IN (((((vt0.c0)OR(vt0.c0)))AND(0.2215613419690179)), CAST(vt0.c0 AS INTEGER)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((0.5164969791854629 IN (((((vt0.c0)OR(vt0.c0)))AND(0.2215613419690179)), CAST(vt0.c0 AS INTEGER)))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (vt0.c0 COLLATE NOCASE COLLATE RTRIM) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0 COLLATE NOCASE COLLATE RTRIM))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE COLLATE RTRIM) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt0, vt1 WHERE (vt0.c0) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 WHERE ((NOT (vt0.c0))) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 WHERE (((vt0.c0) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt0.c0 FROM vt0 INNER JOIN vt1 ON ((json_array_length(vt0.c0, vt0.c0)) NOT BETWEEN (('' IN ('-888462890'))) AND (((((0.20412465293749427)AND(vt1.c0)))AND(vt1.c0)))) GROUP BY vt0.c0;
SELECT * FROM vt1, vt0;
SELECT ALL * FROM vt1, vt0 WHERE (UNLIKELY(DISTINCT TRIM(DISTINCT vt1.c0, vt1.c0))) UNION ALL SELECT ALL * FROM vt1, vt0 WHERE ((NOT (UNLIKELY(DISTINCT TRIM(DISTINCT vt1.c0, vt1.c0))))) UNION ALL SELECT * FROM vt1, vt0 WHERE (((UNLIKELY(DISTINCT TRIM(DISTINCT vt1.c0, vt1.c0))) ISNULL));
SELECT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (CASE (NOT (vt1.c0))  WHEN ((vt1.c0)<=(vt1.c0)) THEN ((vt1.c0) NOT BETWEEN (x'809a') AND (vt1.c0)) END) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (CASE (NOT (vt1.c0))  WHEN ((vt1.c0)<=(vt1.c0)) THEN ((vt1.c0) NOT BETWEEN (x'809a') AND (vt1.c0)) END))) UNION SELECT DISTINCT * FROM vt1 WHERE (((CASE (NOT (vt1.c0))  WHEN ((vt1.c0)<=(vt1.c0)) THEN ((vt1.c0) NOT BETWEEN (x'809a') AND (vt1.c0)) END) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))%(vt1.c0 COLLATE BINARY))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))%(vt1.c0 COLLATE BINARY))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))%(vt1.c0 COLLATE BINARY))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING TOTAL(AVG(vt1.c0)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (TOTAL(AVG(vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((TOTAL(AVG(vt1.c0))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (vt0.c0) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE ((((('995956173')OR(vt0.c0)))AND(vt0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT ((((('995956173')OR(vt0.c0)))AND(vt0.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((((((('995956173')OR(vt0.c0)))AND(vt0.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((vt1.c0) NOTNULL))/(((vt1.c0) NOT BETWEEN (x'3fa5') AND (vt1.c0))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0) NOTNULL))/(((vt1.c0) NOT BETWEEN (x'3fa5') AND (vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((((vt1.c0) NOTNULL))/(((vt1.c0) NOT BETWEEN (x'3fa5') AND (vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING AVG(SUM(0.14379452807520476)) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (AVG(SUM(0.14379452807520476)))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING ((AVG(SUM(0.14379452807520476))) ISNULL);
SELECT ALL * FROM vt1 INNER JOIN vt0 ON (((NOT (vt1.c0)))&((- (vt0.c0))));
SELECT ALL * FROM vt1 INNER JOIN vt0 ON (((NOT (vt1.c0)))&((- (vt0.c0)))) WHERE ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((CASE WHEN vt1.c0 THEN '-65708511' WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 END, UPPER(DISTINCT vt1.c0), vt0.c0)) AND ((CASE WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN NULL THEN vt0.c0 ELSE vt0.c0 END, ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)), (((vt0.c0))<=((vt1.c0))))))) UNION ALL SELECT * FROM vt1 INNER JOIN vt0 ON (((NOT (vt1.c0)))&((- (vt0.c0)))) WHERE ((NOT ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((CASE WHEN vt1.c0 THEN '-65708511' WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 END, UPPER(DISTINCT vt1.c0), vt0.c0)) AND ((CASE WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN NULL THEN vt0.c0 ELSE vt0.c0 END, ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)), (((vt0.c0))<=((vt1.c0))))))))) UNION ALL SELECT * FROM vt1 INNER JOIN vt0 ON (((NOT (vt1.c0)))&((- (vt0.c0)))) WHERE ((((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((CASE WHEN vt1.c0 THEN '-65708511' WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 END, UPPER(DISTINCT vt1.c0), vt0.c0)) AND ((CASE WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN NULL THEN vt0.c0 ELSE vt0.c0 END, ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)), (((vt0.c0))<=((vt1.c0))))))) ISNULL));
SELECT ALL * FROM vt1 INNER JOIN vt0 ON (((NOT (vt1.c0)))&((- (vt0.c0))));
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)IS NOT((vt1.c0 IN (vt1.c0))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)IS NOT((vt1.c0 IN (vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)IS NOT((vt1.c0 IN (vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((('8-6*g' COLLATE RTRIM)IS NOT(IFNULL(vt1.c0, 0.08577465052164801)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((('8-6*g' COLLATE RTRIM)IS NOT(IFNULL(vt1.c0, 0.08577465052164801)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((('8-6*g' COLLATE RTRIM)IS NOT(IFNULL(vt1.c0, 0.08577465052164801)))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING AVG(COALESCE(MIN(TOTAL(vt1.c0)), GROUP_CONCAT(vt1.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING (NOT (AVG(COALESCE(MIN(TOTAL(vt1.c0)), GROUP_CONCAT(vt1.c0))))) UNION ALL SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING ((AVG(COALESCE(MIN(TOTAL(vt1.c0)), GROUP_CONCAT(vt1.c0)))) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (vt0.c0) UNION ALL SELECT * FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0) IS TRUE))>=(((vt0.c0) IS FALSE)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.c0) IS TRUE))>=(((vt0.c0) IS FALSE)))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0) IS TRUE))>=(((vt0.c0) IS FALSE)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((((vt0.c0)||(vt1.c0)))-((vt1.c0 IN ())))) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((NOT (((((vt0.c0)||(vt1.c0)))-((vt1.c0 IN ())))))) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((((((vt0.c0)||(vt1.c0)))-((vt1.c0 IN ())))) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT((~ (SUM(AVG(COUNT(*)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT((~ (SUM(AVG(COUNT(*)))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT((~ (SUM(AVG(COUNT(*))))))) ISNULL);
SELECT * FROM vt1, vt0;
SELECT * FROM vt1, vt0 WHERE (((vt0.c0)IS(vt1.c0)) COLLATE RTRIM) UNION ALL SELECT ALL * FROM vt1 NOT INDEXED, vt0 WHERE ((NOT (((vt0.c0)IS(vt1.c0)) COLLATE RTRIM))) UNION ALL SELECT ALL * FROM vt1, vt0 WHERE (((((vt0.c0)IS(vt1.c0)) COLLATE RTRIM) ISNULL));
SELECT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE (CASE 'iy'  WHEN ((vt0.c0)+(vt1.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND ('覾')) WHEN (NOT (vt0.c0)) THEN CAST(vt0.c0 AS TEXT) WHEN ((vt1.c0)<>(vt1.c0)) THEN (NOT (vt1.c0)) WHEN ((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)) THEN ((vt0.c0)>(vt1.c0)) WHEN ((vt0.c0)IS NOT(vt1.c0)) THEN (('')==(vt1.c0)) END) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT (CASE 'iy'  WHEN ((vt0.c0)+(vt1.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND ('覾')) WHEN (NOT (vt0.c0)) THEN CAST(vt0.c0 AS TEXT) WHEN ((vt1.c0)<>(vt1.c0)) THEN (NOT (vt1.c0)) WHEN ((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)) THEN ((vt0.c0)>(vt1.c0)) WHEN ((vt0.c0)IS NOT(vt1.c0)) THEN (('')=(vt1.c0)) END))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE (((CASE 'iy'  WHEN ((vt0.c0)+(vt1.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND ('覾')) WHEN (NOT (vt0.c0)) THEN CAST(vt0.c0 AS TEXT) WHEN ((vt1.c0)!=(vt1.c0)) THEN (NOT (vt1.c0)) WHEN ((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)) THEN ((vt0.c0)>(vt1.c0)) WHEN ((vt0.c0)IS NOT(vt1.c0)) THEN (('')==(vt1.c0)) END) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((vt1.c0) IS TRUE))/('-1171688551'))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0) IS TRUE))/('-1171688551'))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((((vt1.c0) IS TRUE))/('-1171688551'))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 END AS NUMERIC) GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 END AS NUMERIC) GROUP BY vt1.c0, vt0.c0 HAVING GROUP_CONCAT(TOTAL(vt1.c0)) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 END AS NUMERIC) GROUP BY vt1.c0, vt0.c0 HAVING (NOT (GROUP_CONCAT(TOTAL(vt1.c0)))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 END AS NUMERIC) GROUP BY vt1.c0, vt0.c0 HAVING ((GROUP_CONCAT(TOTAL(vt1.c0))) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (vt0.c0) UNION ALL SELECT * FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE ((~ (RTRIM(vt1.c0)))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT ((~ (RTRIM(vt1.c0)))))) UNION SELECT DISTINCT * FROM vt1 NOT INDEXED, vt0 WHERE ((((~ (RTRIM(vt1.c0)))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0, vt1 WHERE (((CAST(vt0.c0 AS NUMERIC))*(((((vt1.c0)OR(vt1.c0)))AND(vt0.c0))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt0, vt1 WHERE ((NOT (((CAST(vt0.c0 AS NUMERIC))*(((((vt1.c0)OR(vt1.c0)))AND(vt0.c0))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt0, vt1 WHERE (((((CAST(vt0.c0 AS NUMERIC))*(((((vt1.c0)OR(vt1.c0)))AND(vt0.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING MIN(SUM(vt0.c0) COLLATE NOCASE) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (MIN(SUM(vt0.c0) COLLATE NOCASE))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING ((MIN(SUM(vt0.c0) COLLATE NOCASE)) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (((((vt1.c0)AND(vt1.c0)))OR(0.49319759722174794)) COLLATE BINARY) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0)AND(vt1.c0)))OR(0.49319759722174794)) COLLATE BINARY))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c0)))OR(0.49319759722174794)) COLLATE BINARY) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt1.c0)) NOT BETWEEN ((((vt0.c0)-(vt0.c0)))) AND ((((('-2146208103', vt1.c0, vt0.c0))<((vt1.c0, vt1.c0, vt1.c0))))));
SELECT DISTINCT vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt1.c0)) NOT BETWEEN ((((vt0.c0)-(vt0.c0)))) AND ((((('-2146208103', vt1.c0, vt0.c0))<((vt1.c0, vt1.c0, vt1.c0)))))) WHERE (((vt1.c0)<(((vt1.c0) ISNULL)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt1.c0)) NOT BETWEEN ((((vt0.c0)-(vt0.c0)))) AND ((((('-2146208103', vt1.c0, vt0.c0))<((vt1.c0, vt1.c0, vt1.c0)))))) WHERE ((NOT (((vt1.c0)<(((vt1.c0) ISNULL)))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt1.c0)) NOT BETWEEN ((((vt0.c0)-(vt0.c0)))) AND ((((('-2146208103', vt1.c0, vt0.c0))<((vt1.c0, vt1.c0, vt1.c0)))))) WHERE (((((vt1.c0)<(((vt1.c0) ISNULL)))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt1.c0)) NOT BETWEEN ((((vt0.c0)-(vt0.c0)))) AND ((((('-2146208103', vt1.c0, vt0.c0))<((vt1.c0, vt1.c0, vt1.c0))))));
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((~ (vt0.c0)))OR(((NULL)|('<cEA\nyXOm'))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((~ (vt0.c0)))OR(((NULL)|('<cEA\nyXOm'))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((~ (vt0.c0)))OR(((NULL)|('<cEA\nyXOm'))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING SUBSTR(((((COUNT(*))OR(MAX(MAX(vt1.c0)))))AND(vt1.c0)), COUNT(*)) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (SUBSTR(((((COUNT(*))OR(MAX(MAX(vt1.c0)))))AND(vt1.c0)), COUNT(*)))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING ((SUBSTR(((((COUNT(*))OR(MAX(MAX(vt1.c0)))))AND(vt1.c0)), COUNT(*))) ISNULL);
SELECT ALL * FROM vt1, vt0 NOT INDEXED;
SELECT ALL * FROM vt1, vt0 WHERE (((((NULL) IS TRUE))>>((((vt0.c0))>=((vt0.c0)))))) UNION ALL SELECT * FROM vt1, vt0 WHERE ((NOT (((((NULL) IS TRUE))>>((((vt0.c0))>=((vt0.c0)))))))) UNION ALL SELECT * FROM vt1, vt0 WHERE (((((((NULL) IS TRUE))>>((((vt0.c0))>=((vt0.c0)))))) ISNULL));
SELECT ALL * FROM vt1, vt0 NOT INDEXED;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE ((CAST(vt0.c0 AS NUMERIC) IN ())) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT ((CAST(vt0.c0 AS NUMERIC) IN ())))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((((CAST(vt0.c0 AS NUMERIC) IN ())) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt0 WHERE (CAST((NOT ('-1466435313')) AS TEXT)) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, vt0 WHERE ((NOT (CAST((NOT ('-1466435313')) AS TEXT)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, vt0 WHERE (((CAST((NOT ('-1466435313')) AS TEXT)) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING (((CASE WHEN MAX(TOTAL(vt1.c0)) THEN 'h}E' ELSE COUNT(*) END))!=((COUNT(*)))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING (NOT ((((CASE WHEN MAX(TOTAL(vt1.c0)) THEN 'h}E' ELSE COUNT(*) END))!=((COUNT(*)))))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING (((((CASE WHEN MAX(TOTAL(vt1.c0)) THEN 'h}E' ELSE COUNT(*) END))<>((COUNT(*))))) ISNULL);
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (CAST(((vt1.c0) NOT NULL) AS INTEGER)) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((NOT (CAST(((vt1.c0) NOT NULL) AS INTEGER)))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((CAST(((vt1.c0) NOT NULL) AS INTEGER)) ISNULL));
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((vt1.c0 IN ()))IS NOT(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0 IN ()))IS NOT(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((((vt1.c0 IN ()))IS NOT(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((NULL)) AND ((vt0.c0))))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 NOT INDEXED WHERE ((NOT ((((((vt0.c0)) BETWEEN ((NULL)) AND ((vt0.c0))))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((((vt0.c0)) BETWEEN ((NULL)) AND ((vt0.c0))))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (((((vt0.c0)%(vt0.c0)))/((x'' IN ())))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((((vt0.c0)%(vt0.c0)))/((x'' IN ())))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)%(vt0.c0)))/((x'' IN ())))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ('') GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT (''))) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((('') ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG((+ (vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (AVG((+ (vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG((+ (vt0.c0)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG((+ (vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (AVG((+ (vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG((+ (vt0.c0)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL MAX(NULL) FROM vt0, vt1;
SELECT * FROM vt1 INNER JOIN vt0 ON (NOT ((NOT (vt1.c0))));
SELECT ALL * FROM vt1 INNER JOIN vt0 ON (NOT ((NOT (vt1.c0)))) WHERE ('') UNION ALL SELECT * FROM vt1 INNER JOIN vt0 ON (NOT ((NOT (vt1.c0)))) WHERE ((NOT (''))) UNION ALL SELECT * FROM vt1 INNER JOIN vt0 ON (NOT ((NOT (vt1.c0)))) WHERE ((('') ISNULL));
SELECT * FROM vt1 INNER JOIN vt0 ON (NOT ((NOT (vt1.c0))));
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE (((vt1.c0 COLLATE BINARY)&(CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 END))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (((vt1.c0 COLLATE BINARY)&(CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 END))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE (((((vt1.c0 COLLATE BINARY)&(CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 END))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, vt1 WHERE (((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))==(COALESCE(DISTINCT vt0.c0, vt1.c0, vt1.c0, vt1.c0)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, vt1 WHERE ((NOT (((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))=(COALESCE(DISTINCT vt0.c0, vt1.c0, vt1.c0, vt1.c0)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, vt1 WHERE (((((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))=(COALESCE(DISTINCT vt0.c0, vt1.c0, vt1.c0, vt1.c0)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((((vt1.c0))<=((SUM(vt1.c0))))) BETWEEN (COUNT(*)) AND (COUNT(GROUP_CONCAT(COUNT(*))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((((((vt1.c0))<=((SUM(vt1.c0))))) BETWEEN (COUNT(*)) AND (COUNT(GROUP_CONCAT(COUNT(*))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((((((vt1.c0))<=((SUM(vt1.c0))))) BETWEEN (COUNT(*)) AND (COUNT(GROUP_CONCAT(COUNT(*)))))) ISNULL);
SELECT vt0.c0 FROM vt1, vt0;
SELECT vt0.c0 FROM vt1, vt0 WHERE ((~ (((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt1, vt0 WHERE ((NOT ((~ (((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM vt1, vt0 WHERE ((((~ (((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0))))) ISNULL));
SELECT vt0.c0 FROM vt1, vt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (0.034432526453471946) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (0.034432526453471946))) UNION SELECT DISTINCT * FROM vt1 WHERE (((0.034432526453471946) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt1.c0, vt0.c0 FROM vt0 NATURAL JOIN vt1 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt0 NATURAL JOIN vt1 WHERE (vt1.c0) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt0 NATURAL JOIN vt1 WHERE ((NOT (vt1.c0))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt0 NATURAL JOIN vt1 WHERE (((vt1.c0) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0 NATURAL JOIN vt1 GROUP BY vt1.c0, vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT MAX(CAST(x'' AS REAL)) FROM vt0, vt1;
SELECT ALL vt0.c0 FROM vt0, vt1;
SELECT vt0.c0 FROM vt0, vt1 WHERE ('947405878') UNION ALL SELECT vt0.c0 FROM vt0, vt1 WHERE ((NOT ('947405878'))) UNION ALL SELECT vt0.c0 FROM vt0, vt1 WHERE ((('947405878') ISNULL));
SELECT ALL vt0.c0 FROM vt0, vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (vt1.c0) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT * FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT * FROM vt1;
