-- Time: 2024/06/09 21:05:58
-- Database: database85
-- Database version: 3.40.0
-- seed value: 2975825585
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2, c3, c4); -- 6ms;
UPDATE OR IGNORE rt0 SET (c2)=(x'') WHERE ((((rt0.c3) NOT BETWEEN (x'9b94') AND (rt0.c2))) NOT NULL); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR ROLLBACK rt0 SET c3=1025928286; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE rt0 SET (c4, c1, c0)=('汞_', 1.025928286E9, x'') WHERE ((((rt0.c0) NOT NULL))|(CASE rt0.c2  WHEN rt0.c4 THEN NULL WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN NULL ELSE rt0.c3 END)); -- 1ms;
UPDATE OR IGNORE rt0 SET c3='汞_'; -- 0ms;
ANALYZE rt0; -- 5ms;
COMMIT; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 1ms;
INSERT OR FAIL INTO rt0(c3, c2) VALUES (NULL, '1572552521'); -- 1ms;
INSERT OR IGNORE INTO rt0(c0, c2) VALUES (x'', x''), ('-824878154', 0.2719564918830927), ('1025928286', ''); -- 1ms;
INSERT OR ROLLBACK INTO rt0(c0) VALUES (-1889061142); -- 0ms;
UPDATE OR FAIL rt0 SET (c1)=('-1889061142') WHERE CASE WHEN ((rt0.c3)GLOB(rt0.c1)) THEN ((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c1)) ELSE ((rt0.c1)>=(rt0.c0)) END; -- 0ms;
PRAGMA temp.mmap_size = 1165411132456910758; -- 0ms;
INSERT OR REPLACE INTO rt0(c2, c1, c0, c3) VALUES (x'ff22', x'0036', x'', 0.4821499439066066); -- 0ms;
ANALYZE temp; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR REPLACE INTO rt0(c0, c3, c1, c2, c4) VALUES (0.26015324657829797, NULL, 0.974122813075258, 0Xffffffff89f3009c, NULL), (-1980563300, x'', 0.7174058373005315, x'8ac3', 'a0[nwn'), (NULL, '', 0.5722715066970202, NULL, '}Id)ti'); -- 0ms;
INSERT OR ABORT INTO rt0(c0, c4, c3, c2) VALUES (0X7fffffffffffffff, 0.662523897946518, 0.45701530499526966, '{_Fm-un}wb'); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c3, c0, c2, c4) VALUES (0.5722715066970202, 1572552521, 0.5527272258785041, '462904637', '1572552521'), (0X46dbcc81, NULL, 'hK/y)d,V', 1.025928286E9, 0.2023704584955376), (0.7016875239940633, 0.4510350975135745, 1.025928286E9, NULL, '1572552521'); -- 0ms;
PRAGMA main.wal_autocheckpoint = -3533600358282953236; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c2, c3) VALUES (NULL, NULL, x''), ('300900217', NULL, 'YtkbTM'), (-140168044, 0.34347366995651585, NULL); -- 0ms;
UPDATE OR ABORT rt0 SET c4='1572552521'; -- 0ms;
REINDEX BINARY; -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES ('', 'u㒩GXi**', 0.17810581628789168, 0.26015324657829797, 0.11467849870535995); -- 4ms;
COMMIT TRANSACTION; -- 2ms;
PRAGMA default_cache_size = -490147063; -- 0ms;
UPDATE OR IGNORE rt0 SET (c2)=(31472492) WHERE '-674292478'; -- 2ms;
ANALYZE; -- 0ms;
PRAGMA temp.locking_mode = NORMAL; -- 0ms;
DELETE FROM rt0; -- 2ms;
DELETE FROM sqlite_stat1; -- 0ms;
PRAGMA incremental_vacuum(1572552521); -- 0ms;
PRAGMA mmap_size; -- 0ms;
PRAGMA temp.legacy_file_format; -- 0ms;
INSERT OR REPLACE INTO rt0(c3, c4, c0, c1) VALUES (0.4821499439066066, NULL, NULL, 0.5668908391164231); -- 1ms;
REINDEX NOCASE; -- 0ms;
PRAGMA wal_checkpoint(TRUNCATE); -- 0ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (x''), (x''), ('RV'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA short_column_names = true; -- 0ms;
PRAGMA temp.optimize; -- 0ms;
REINDEX; -- 0ms;
END; -- 0ms;
UPDATE OR FAIL rt0 SET c0=x'95fa', c1=NULL; -- 8ms;
UPDATE rt0 SET c0=NULL; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
PRAGMA reverse_unordered_selects = false; -- 1ms;
UPDATE OR IGNORE rt0 SET c3='' WHERE ((rt0.c1 COLLATE NOCASE) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c3, c1, c4) VALUES ('', 0.7205837259210602, NULL); -- 2ms;
ANALYZE; -- 6ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c3, c2, c4) VALUES ('739582697', '', NULL), (NULL, '', NULL), (7.39582697E8, '<I6', 'BkC27Q '); -- 1ms;
INSERT OR IGNORE INTO rt0(c4, c3, c0, c1, c2) VALUES (x'afb3ad28', '', '#\nY/U', NULL, -333992693); -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
PRAGMA temp.integrity_check; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c0, c4) VALUES (NULL, x'ff6d4183'), ('-333992693', 0.6542748150807569), (0.9105903616618367, 0.7602791052943286); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=1188809857 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c3, c1) VALUES ('1gLp', 'P?', '1098777480'); -- 0ms;
UPDATE OR IGNORE rt0 SET c1=0.2719564918830927, c2='}Id)ti', c0=0.9916941907523982; -- 8ms;
INSERT OR IGNORE INTO rt0(c2, c1) VALUES (x'415a', x''); -- 1ms;
UPDATE rt0 SET c3=0.93093312812225, c1=0x3d193dbd; -- 1ms;
UPDATE OR ROLLBACK rt0 SET (c3, c3)=(0.29076136223794524, x'') WHERE rt0.c2; -- 0ms;
UPDATE OR REPLACE rt0 SET (c3)=(x''); -- 0ms;
REINDEX  rt0; -- 0ms;
END; -- 0ms;
REINDEX; -- 0ms;
PRAGMA mmap_size; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c0, c4, c1) VALUES (0X2ffa8338, NULL, x''); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA ignore_check_constraints = true; -- 0ms;
UPDATE OR IGNORE rt0 SET (c4)=(-889870747); -- 1ms;
INSERT OR ABORT INTO rt0 VALUES ('', x'8fb3', '-364895203', x'7b7d5366', NULL), (0.3968113005408205, x'', '1098777480', '1098777480', 0.9008644063320571), (NULL, 'r*{W茸㌪}Q', NULL, '-457464496', x'6728'); -- 1ms;
INSERT OR FAIL INTO rt0(c2) VALUES (NULL); -- 13ms;
INSERT OR ABORT INTO rt0(c0, c1, c3) VALUES (0.9916941907523982, '0.974122813075258', x''); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c4, c3, c0) VALUES (NULL, '-995381438', 'Biz\\r*>'); -- 0ms;
INSERT OR FAIL INTO rt0(c3, c4, c0, c2, c1) VALUES ('Ma', x'8147', NULL, 0.2284321497837044, 'iT'); -- 0ms;
UPDATE OR IGNORE rt0 SET (c1)=('q|	役5役{''m'); -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c1, c0, c4) VALUES (NULL, NULL, 0.9105903616618367, 'LT'); -- 0ms;
INSERT OR FAIL INTO rt0(c4) VALUES ('0I葐D'); -- 0ms;
UPDATE OR ROLLBACK rt0 SET c3=''; -- 4ms;
INSERT OR ABORT INTO rt0(c0, c3, c4) VALUES ('ZK', 0.5539880324967505, 1.025064381E9); -- 0ms;
INSERT OR REPLACE INTO rt0(c3, c1, c0, c2, c4) VALUES (0.03543537523257023, 0.2859253278551419, 0.6414815270058882, x'', x'0a6e'); -- 1ms;
END TRANSACTION; -- 0ms;
PRAGMA wal_autocheckpoint; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET c4=0.4532031223277414; -- 1ms;
INSERT OR IGNORE INTO rt0(c1) VALUES (x''); -- 1ms;
UPDATE OR IGNORE rt0 SET (c0)=('/3dΈs'); -- 1ms;
SELECT rtreecheck('rt0'); -- 1ms;
UPDATE OR IGNORE rt0 SET (c0, c0)=(-95022624, NULL) WHERE LIKELIHOOD(DISTINCT (((rt0.c4, rt0.c2, rt0.c4)) BETWEEN ((rt0.c0, rt0.c4, rt0.c2)) AND ((x'', rt0.c2, rt0.c0))), 0.28217204288336317); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (NULL, 'xJV}&87N', '714668961', 0Xffffffff8290b408, x''); -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE rt0 SET (c1)=('1302822016') WHERE ((((rt0.c2) NOTNULL))+(((((((((rt0.c0)AND(rt0.c4)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c2)))); -- 0ms;
UPDATE OR IGNORE rt0 SET c3=x''; -- 0ms;
CREATE VIEW  IF NOT EXISTS v0(c0) AS SELECT CAST(rt0.c3 AS TEXT) FROM rt0; -- 1ms;
ANALYZE main; -- 2ms;
UPDATE OR REPLACE rt0 SET (c2, c1)=(x'5364', x'') WHERE (((rt0.c2, rt0.c3, rt0.c1)) BETWEEN ((ROUND(rt0.c0, rt0.c3), UNLIKELY(DISTINCT 'y~x뫃'), ((('-1522511608', rt0.c2, rt0.c3)) NOT BETWEEN ((rt0.c2, rt0.c3, rt0.c4)) AND ((rt0.c0, rt0.c2, rt0.c1))))) AND ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)), HEX(DISTINCT rt0.c2), (((rt0.c1))!=((rt0.c4)))))); -- 0ms;
ANALYZE; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET c3='ma' WHERE rt0.c4; -- 0ms;
UPDATE rt0 SET (c4)=(-1.889061142E9); -- 0ms;
UPDATE OR FAIL rt0 SET (c1, c4)=(NULL, 0.93093312812225) WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO rt0(c0) VALUES ('300900217'); -- 0ms;
REINDEX; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
UPDATE rt0 SET (c3, c1)=(NULL, 0.2023704584955376); -- 1ms;
ANALYZE; -- 0ms;
PRAGMA main.application_id = -9107347859360370771; -- 0ms;
REINDEX BINARY; -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT rt0.c0, rt0.c1, rt0.c3, rt0.c4 FROM rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c3, rt0.c4 FROM rt0 WHERE (((CASE WHEN rt0.c4 THEN rt0.c1 ELSE NULL END) NOTNULL)) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c3, rt0.c4 FROM rt0 WHERE ((NOT (((CASE WHEN rt0.c4 THEN rt0.c1 ELSE NULL END) NOTNULL)))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c3, rt0.c4 FROM rt0 WHERE (((((CASE WHEN rt0.c4 THEN rt0.c1 ELSE NULL END) NOTNULL)) ISNULL));
SELECT rt0.c0, rt0.c1, rt0.c3, rt0.c4 FROM rt0;
SELECT DISTINCT rt0.c4, rt0.c1, rt0.c0, rt0.c3 FROM v0, rt0;
SELECT DISTINCT rt0.c4, rt0.c1, rt0.c0, rt0.c3 FROM v0, rt0 WHERE ((rt0.c2 COLLATE RTRIM IN ((rt0.c3 IN ())))) UNION SELECT DISTINCT rt0.c4, rt0.c1, rt0.c0, rt0.c3 FROM v0, rt0 WHERE ((NOT ((rt0.c2 COLLATE RTRIM IN ((rt0.c3 IN ())))))) UNION SELECT DISTINCT rt0.c4, rt0.c1, rt0.c0, rt0.c3 FROM v0, rt0 WHERE ((((rt0.c2 COLLATE RTRIM IN ((rt0.c3 IN ())))) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c1, rt0.c0, rt0.c3 FROM v0, rt0;
SELECT rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c3;
SELECT rt0.c1, rt0.c3 FROM rt0 WHERE (HEX(-1879175502)) GROUP BY rt0.c1, rt0.c3 UNION SELECT ALL rt0.c1, rt0.c3 FROM rt0 WHERE ((NOT (HEX(-1879175502)))) GROUP BY rt0.c1, rt0.c3 UNION SELECT rt0.c1, rt0.c3 FROM rt0 WHERE (((HEX(-1879175502)) ISNULL)) GROUP BY rt0.c1, rt0.c3;
SELECT rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c3;
SELECT ALL rt0.c2, rt0.c0, rt0.c3, rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c0, rt0.c3, rt0.c1, v0.c0;
SELECT ALL rt0.c2, rt0.c0, rt0.c3, rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c0, rt0.c3, rt0.c1, v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c3, rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c0, rt0.c3, rt0.c1, v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c3, rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c0, rt0.c3, rt0.c1, v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c3, rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c0, rt0.c3, rt0.c1, v0.c0;
SELECT ALL rt0.c2, rt0.c0, rt0.c3, rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c0, rt0.c3, rt0.c1, v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c3, rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c0, rt0.c3, rt0.c1, v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c3, rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c0, rt0.c3, rt0.c1, v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c3, rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c0, rt0.c3, rt0.c1, v0.c0;
SELECT ALL rt0.c3, rt0.c0 FROM rt0 NATURAL JOIN v0;
SELECT rt0.c3, rt0.c0 FROM rt0 NATURAL JOIN v0 WHERE ((((((((((- (rt0.c3)))AND(CAST(rt0.c0 AS TEXT))))OR((((rt0.c3))>=((rt0.c3))))))AND(LIKELY(rt0.c2))))AND((((NULL))>=((rt0.c2)))))) UNION ALL SELECT rt0.c3, rt0.c0 FROM rt0 NATURAL JOIN v0 WHERE ((NOT ((((((((((- (rt0.c3)))AND(CAST(rt0.c0 AS TEXT))))OR((((rt0.c3))>=((rt0.c3))))))AND(LIKELY(rt0.c2))))AND((((NULL))>=((rt0.c2)))))))) UNION ALL SELECT ALL rt0.c3, rt0.c0 FROM rt0 NATURAL JOIN v0 WHERE ((((((((((((- (rt0.c3)))AND(CAST(rt0.c0 AS TEXT))))OR((((rt0.c3))>=((rt0.c3))))))AND(LIKELY(rt0.c2))))AND((((NULL))>=((rt0.c2)))))) ISNULL));
SELECT ALL rt0.c3, rt0.c0 FROM rt0 NATURAL JOIN v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((v0.c0)*(v0.c0)) COLLATE BINARY) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((v0.c0)*(v0.c0)) COLLATE BINARY))) UNION SELECT DISTINCT * FROM v0 WHERE (((((v0.c0)*(v0.c0)) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (COALESCE(DISTINCT (- (v0.c0)), (v0.c0 IN ()))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (COALESCE(DISTINCT (- (v0.c0)), (v0.c0 IN ()))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((COALESCE(DISTINCT (- (v0.c0)), (v0.c0 IN ()))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c4 FROM v0, rt0 GROUP BY rt0.c4;
SELECT rt0.c4 FROM v0, rt0 GROUP BY rt0.c4 HAVING ((TOTAL_CHANGES())||(((TOTAL(SUM(COUNT(*)))) IS TRUE))) UNION ALL SELECT ALL rt0.c4 FROM v0, rt0 GROUP BY rt0.c4 HAVING (NOT (((TOTAL_CHANGES())||(((TOTAL(SUM(COUNT(*)))) IS TRUE))))) UNION ALL SELECT rt0.c4 FROM v0, rt0 GROUP BY rt0.c4 HAVING ((((TOTAL_CHANGES())||(((TOTAL(SUM(COUNT(*)))) IS TRUE)))) ISNULL);
SELECT ALL * FROM rt0, v0;
SELECT * FROM rt0, v0 WHERE (((UNLIKELY(rt0.c0)) NOT NULL)) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((NOT (((UNLIKELY(rt0.c0)) NOT NULL)))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE (((((UNLIKELY(rt0.c0)) NOT NULL)) ISNULL));
SELECT ALL * FROM rt0, v0;
SELECT DISTINCT * FROM rt0 NATURAL JOIN v0;
SELECT DISTINCT * FROM rt0 NATURAL JOIN v0 WHERE (rt0.c0) UNION SELECT DISTINCT * FROM rt0 NATURAL JOIN v0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT * FROM rt0 NATURAL JOIN v0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT * FROM rt0 NATURAL JOIN v0;
SELECT ALL rt0.c3, rt0.c1, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c4;
SELECT rt0.c3, rt0.c1, rt0.c0, rt0.c4 FROM rt0 WHERE ((((((((0.6784409471315059, rt0.c0, rt0.c2))<>((rt0.c0, rt0.c3, rt0.c1))))AND((((rt0.c0)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c2))))))AND(((((rt0.c4)OR(rt0.c4)))OR(rt0.c1))))) GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c4 UNION SELECT ALL rt0.c3, rt0.c1, rt0.c0, rt0.c4 FROM rt0 WHERE ((NOT ((((((((0.6784409471315059, rt0.c0, rt0.c2))!=((rt0.c0, rt0.c3, rt0.c1))))AND((((rt0.c0)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c2))))))AND(((((rt0.c4)OR(rt0.c4)))OR(rt0.c1))))))) GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c4 UNION SELECT ALL rt0.c3, rt0.c1, rt0.c0, rt0.c4 FROM rt0 WHERE ((((((((((0.6784409471315059, rt0.c0, rt0.c2))<>((rt0.c0, rt0.c3, rt0.c1))))AND((((rt0.c0)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c2))))))AND(((((rt0.c4)OR(rt0.c4)))OR(rt0.c1))))) ISNULL)) GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c4;
SELECT ALL rt0.c3, rt0.c1, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c4;
SELECT rt0.c0, rt0.c3, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c4, rt0.c1;
SELECT rt0.c0, rt0.c3, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c4, rt0.c1 HAVING rt0.c0 UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c4, rt0.c1 HAVING (NOT (rt0.c0)) UNION ALL SELECT rt0.c0, rt0.c3, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c4, rt0.c1 HAVING ((rt0.c0) ISNULL);
SELECT rt0.c0, rt0.c3, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c4, rt0.c1;
SELECT rt0.c0, rt0.c3, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c4, rt0.c1 HAVING rt0.c0 UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c4, rt0.c1 HAVING (NOT (rt0.c0)) UNION ALL SELECT rt0.c0, rt0.c3, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c4, rt0.c1 HAVING ((rt0.c0) ISNULL);
SELECT rt0.c0, rt0.c3, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c4, rt0.c1;
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE ((- (CAST(v0.c0 AS INTEGER)))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT ((- (CAST(v0.c0 AS INTEGER)))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((((- (CAST(v0.c0 AS INTEGER)))) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) IS FALSE)) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) IS FALSE)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) IS FALSE)) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT v0.c0, rt0.c0, rt0.c3, rt0.c1, rt0.c4 FROM v0, rt0 GROUP BY v0.c0, rt0.c0, rt0.c3, rt0.c1, rt0.c4;
SELECT ALL v0.c0, rt0.c0, rt0.c3, rt0.c1, rt0.c4 FROM v0, rt0 WHERE ((NOT (CAST(rt0.c0 AS INTEGER)))) GROUP BY v0.c0, rt0.c0, rt0.c3, rt0.c1, rt0.c4 UNION SELECT v0.c0, rt0.c0, rt0.c3, rt0.c1, rt0.c4 FROM v0, rt0 WHERE ((NOT ((NOT (CAST(rt0.c0 AS INTEGER)))))) GROUP BY v0.c0, rt0.c0, rt0.c3, rt0.c1, rt0.c4 UNION SELECT v0.c0, rt0.c0, rt0.c3, rt0.c1, rt0.c4 FROM v0, rt0 WHERE ((((NOT (CAST(rt0.c0 AS INTEGER)))) ISNULL)) GROUP BY v0.c0, rt0.c0, rt0.c3, rt0.c1, rt0.c4;
SELECT v0.c0, rt0.c0, rt0.c3, rt0.c1, rt0.c4 FROM v0, rt0 GROUP BY v0.c0, rt0.c0, rt0.c3, rt0.c1, rt0.c4;
SELECT v0.c0, rt0.c0, rt0.c3, rt0.c1, rt0.c4 FROM v0 FULL OUTER JOIN rt0 ON ((CAST(rt0.c0 AS BLOB)) BETWEEN (((rt0.c0)<=(rt0.c4))) AND (CAST(rt0.c0 AS TEXT))) GROUP BY v0.c0, rt0.c0, rt0.c3, rt0.c1, rt0.c4;
SELECT ALL v0.c0, rt0.c0, rt0.c3, rt0.c1, rt0.c4 FROM v0 FULL OUTER JOIN rt0 ON ((CAST(rt0.c0 AS BLOB)) BETWEEN (((rt0.c0)<=(rt0.c4))) AND (CAST(rt0.c0 AS TEXT))) GROUP BY v0.c0, rt0.c0, rt0.c3, rt0.c1, rt0.c4 HAVING ((v0.c0) NOT BETWEEN (AVG(AVG(COUNT(rt0.c4)))) AND (COUNT(GROUP_CONCAT(COUNT(rt0.c0))))) UNION ALL SELECT v0.c0, rt0.c0, rt0.c3, rt0.c1, rt0.c4 FROM v0 FULL OUTER JOIN rt0 ON ((CAST(rt0.c0 AS BLOB)) BETWEEN (((rt0.c0)<=(rt0.c4))) AND (CAST(rt0.c0 AS TEXT))) GROUP BY v0.c0, rt0.c0, rt0.c3, rt0.c1, rt0.c4 HAVING (NOT (((v0.c0) NOT BETWEEN (AVG(AVG(COUNT(rt0.c4)))) AND (COUNT(GROUP_CONCAT(COUNT(rt0.c0))))))) UNION ALL SELECT v0.c0, rt0.c0, rt0.c3, rt0.c1, rt0.c4 FROM v0 FULL OUTER JOIN rt0 ON ((CAST(rt0.c0 AS BLOB)) BETWEEN (((rt0.c0)<=(rt0.c4))) AND (CAST(rt0.c0 AS TEXT))) GROUP BY v0.c0, rt0.c0, rt0.c3, rt0.c1, rt0.c4 HAVING ((((v0.c0) NOT BETWEEN (AVG(AVG(COUNT(rt0.c4)))) AND (COUNT(GROUP_CONCAT(COUNT(rt0.c0)))))) ISNULL);
SELECT rt0.c0, rt0.c1, v0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0, v0;
SELECT ALL rt0.c0, rt0.c1, v0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0, v0 WHERE ((~ (NULL COLLATE BINARY))) UNION ALL SELECT rt0.c0, rt0.c1, v0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0, v0 WHERE ((NOT ((~ (NULL COLLATE BINARY))))) UNION ALL SELECT rt0.c0, rt0.c1, v0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0, v0 WHERE ((((~ (NULL COLLATE BINARY))) ISNULL));
SELECT rt0.c0, rt0.c1, v0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0, v0;
SELECT DISTINCT * FROM v0 CROSS JOIN rt0 ON ((((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c2)))>(((rt0.c3)==(rt0.c4))));
SELECT DISTINCT * FROM v0 CROSS JOIN rt0 ON ((((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c2)))>(((rt0.c3)==(rt0.c4)))) WHERE (((((0.2348802851133407)OR(v0.c0)))OR('')) COLLATE RTRIM) UNION SELECT DISTINCT * FROM v0 CROSS JOIN rt0 ON ((((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c2)))>(((rt0.c3)==(rt0.c4)))) WHERE ((NOT (((((0.2348802851133407)OR(v0.c0)))OR('')) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM v0 CROSS JOIN rt0 ON ((((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c2)))>(((rt0.c3)=(rt0.c4)))) WHERE (((((((0.2348802851133407)OR(v0.c0)))OR('')) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM v0 CROSS JOIN rt0 ON ((((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c2)))>(((rt0.c3)==(rt0.c4))));
SELECT ALL rt0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c1 FROM rt0 WHERE (((((rt0.c2)<(rt0.c4)))>(CAST(rt0.c2 AS BLOB)))) GROUP BY rt0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c2)<(rt0.c4)))>(CAST(rt0.c2 AS BLOB)))))) GROUP BY rt0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c1 FROM rt0 WHERE (((((((rt0.c2)<(rt0.c4)))>(CAST(rt0.c2 AS BLOB)))) ISNULL)) GROUP BY rt0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c1;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (IFNULL(DISTINCT v0.c0, v0.c0) IN ()) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((IFNULL(DISTINCT v0.c0, v0.c0) IN ()))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((IFNULL(DISTINCT v0.c0, v0.c0) IN ())) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (IFNULL(DISTINCT v0.c0, v0.c0) IN ()) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((IFNULL(DISTINCT v0.c0, v0.c0) IN ()))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((IFNULL(DISTINCT v0.c0, v0.c0) IN ())) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c3, rt0.c4 FROM rt0;
SELECT rt0.c3, rt0.c4 FROM rt0 WHERE (CASE WHEN rt0.c4 THEN rt0.c2 ELSE ((rt0.c3) NOT NULL) END) UNION ALL SELECT rt0.c3, rt0.c4 FROM rt0 WHERE ((NOT (CASE WHEN rt0.c4 THEN rt0.c2 ELSE ((rt0.c3) NOT NULL) END))) UNION ALL SELECT rt0.c3, rt0.c4 FROM rt0 WHERE (((CASE WHEN rt0.c4 THEN rt0.c2 ELSE ((rt0.c3) NOT NULL) END) ISNULL));
SELECT ALL rt0.c3, rt0.c4 FROM rt0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE ((((v0.c0)) BETWEEN ((((rt0.c2) NOTNULL))) AND ((CASE WHEN rt0.c2 THEN v0.c0 ELSE rt0.c0 END)))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT ((((v0.c0)) BETWEEN ((((rt0.c2) NOTNULL))) AND ((CASE WHEN rt0.c2 THEN v0.c0 ELSE rt0.c0 END)))))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((((((v0.c0)) BETWEEN ((((rt0.c2) NOTNULL))) AND ((CASE WHEN rt0.c2 THEN v0.c0 ELSE rt0.c0 END)))) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((SQLITE_COMPILEOPTION_USED(v0.c0))OR((- (v0.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((SQLITE_COMPILEOPTION_USED(v0.c0))OR((- (v0.c0))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((SQLITE_COMPILEOPTION_USED(v0.c0))OR((- (v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2 HAVING COUNT(GROUP_CONCAT(AVG(MAX(MAX(AVG(SUM(v0.c0))))))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (COUNT(GROUP_CONCAT(AVG(MAX(MAX(AVG(SUM(v0.c0))))))))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2 HAVING ((COUNT(GROUP_CONCAT(AVG(MAX(MAX(AVG(SUM(v0.c0)))))))) ISNULL);
SELECT * FROM rt0, v0;
SELECT * FROM rt0 NOT INDEXED, v0 WHERE ((CASE WHEN 0.2730568336999416 THEN rt0.c3 END IN ())) UNION ALL SELECT * FROM rt0, v0 WHERE ((NOT ((CASE WHEN 0.2730568336999416 THEN rt0.c3 END IN ())))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((((CASE WHEN 0.2730568336999416 THEN rt0.c3 END IN ())) ISNULL));
SELECT * FROM rt0, v0;
SELECT DISTINCT * FROM v0 NOT INDEXED RIGHT OUTER JOIN rt0 ON ((NULL)IS NOT(((((rt0.c3)OR(rt0.c0)))AND(v0.c0))));
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN rt0 ON ((NULL)IS NOT(((((rt0.c3)OR(rt0.c0)))AND(v0.c0)))) WHERE ((((rt0.c1, rt0.c3, rt0.c3, rt0.c1, rt0.c4)) BETWEEN (((NOT (rt0.c0)), ((rt0.c1) NOT NULL), CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN v0.c0 THEN rt0.c3 ELSE rt0.c1 END, rt0.c3, (rt0.c0 IN ()))) AND ((rt0.c1 COLLATE RTRIM, rt0.c0, ((rt0.c2)<(rt0.c0)), ((rt0.c2) ISNULL), (NOT (rt0.c3)))))) UNION SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN rt0 ON ((NULL)IS NOT(((((rt0.c3)OR(rt0.c0)))AND(v0.c0)))) WHERE ((NOT ((((rt0.c1, rt0.c3, rt0.c3, rt0.c1, rt0.c4)) BETWEEN (((NOT (rt0.c0)), ((rt0.c1) NOT NULL), CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN v0.c0 THEN rt0.c3 ELSE rt0.c1 END, rt0.c3, (rt0.c0 IN ()))) AND ((rt0.c1 COLLATE RTRIM, rt0.c0, ((rt0.c2)<(rt0.c0)), ((rt0.c2) ISNULL), (NOT (rt0.c3)))))))) UNION SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN rt0 ON ((NULL)IS NOT(((((rt0.c3)OR(rt0.c0)))AND(v0.c0)))) WHERE ((((((rt0.c1, rt0.c3, rt0.c3, rt0.c1, rt0.c4)) BETWEEN (((NOT (rt0.c0)), ((rt0.c1) NOT NULL), CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN v0.c0 THEN rt0.c3 ELSE rt0.c1 END, rt0.c3, (rt0.c0 IN ()))) AND ((rt0.c1 COLLATE RTRIM, rt0.c0, ((rt0.c2)<(rt0.c0)), ((rt0.c2) ISNULL), (NOT (rt0.c3)))))) ISNULL));
SELECT DISTINCT * FROM v0 NOT INDEXED RIGHT OUTER JOIN rt0 ON ((NULL)IS NOT(((((rt0.c3)OR(rt0.c0)))AND(v0.c0))));
SELECT rt0.c2, rt0.c4, rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c2, rt0.c4, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c4, rt0.c0, rt0.c1 FROM v0, rt0 WHERE (((((((rt0.c0) IS TRUE))OR(CAST(rt0.c0 AS NUMERIC))))AND((NOT (rt0.c0))))) GROUP BY rt0.c2, rt0.c4, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c4, rt0.c0, rt0.c1 FROM v0, rt0 WHERE ((NOT (((((((rt0.c0) IS TRUE))OR(CAST(rt0.c0 AS NUMERIC))))AND((NOT (rt0.c0))))))) GROUP BY rt0.c2, rt0.c4, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c4, rt0.c0, rt0.c1 FROM v0, rt0 WHERE (((((((((rt0.c0) IS TRUE))OR(CAST(rt0.c0 AS NUMERIC))))AND((NOT (rt0.c0))))) ISNULL)) GROUP BY rt0.c2, rt0.c4, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c4, rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c2, rt0.c4, rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c4, rt0.c3;
SELECT rt0.c0, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c4, rt0.c3 HAVING ((MIN(rt0.c0)) BETWEEN (load_extension(MIN(COUNT(*)), rt0.c0)) AND ((((AVG(SUM(rt0.c2))))<((rt0.c4))))) UNION ALL SELECT ALL rt0.c0, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c4, rt0.c3 HAVING (NOT (((MIN(rt0.c0)) BETWEEN (load_extension(MIN(COUNT(*)), rt0.c0)) AND ((((AVG(SUM(rt0.c2))))<((rt0.c4))))))) UNION ALL SELECT ALL rt0.c0, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c4, rt0.c3 HAVING ((((MIN(rt0.c0)) BETWEEN (load_extension(MIN(COUNT(*)), rt0.c0)) AND ((((AVG(SUM(rt0.c2))))<((rt0.c4)))))) ISNULL);
SELECT * FROM v0, rt0;
SELECT ALL * FROM v0, rt0 WHERE (0Xffffffffd9a5bbc9) UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((NOT (0xffffffffd9a5bbc9))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE (((0xffffffffd9a5bbc9) ISNULL));
SELECT * FROM v0, rt0;
SELECT DISTINCT rt0.c4, rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c4, rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((((rt0.c1))==((rt0.c4)))) IS FALSE)) UNION SELECT DISTINCT rt0.c4, rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((((((rt0.c1))==((rt0.c4)))) IS FALSE)))) UNION SELECT DISTINCT rt0.c4, rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((((((rt0.c1))==((rt0.c4)))) IS FALSE)) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((((((((v0.c0)AND(v0.c0)))AND(v0.c0))))==((v0.c0)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((((((((v0.c0)AND(v0.c0)))AND(v0.c0))))==((v0.c0)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((((((((v0.c0)AND(v0.c0)))AND(v0.c0))))==((v0.c0)))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c4, rt0.c0, rt0.c2, rt0.c3 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c4, rt0.c0, rt0.c2, rt0.c3;
SELECT ALL rt0.c4, rt0.c0, rt0.c2, rt0.c3 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c4, rt0.c0, rt0.c2, rt0.c3 HAVING COUNT(((((((((((((rt0.c0)OR(x'')))AND(MIN(MIN(TOTAL(AVG(rt0.c1)))))))AND(MAX(rt0.c4))))OR(v0.c0)))AND(GROUP_CONCAT(rt0.c1))))AND(TOTAL(rt0.c3)))) UNION ALL SELECT rt0.c4, rt0.c0, rt0.c2, rt0.c3 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c4, rt0.c0, rt0.c2, rt0.c3 HAVING (NOT (COUNT(((((((((((((rt0.c0)OR(x'')))AND(MIN(MIN(TOTAL(AVG(rt0.c1)))))))AND(MAX(rt0.c4))))OR(v0.c0)))AND(GROUP_CONCAT(rt0.c1))))AND(TOTAL(rt0.c3)))))) UNION ALL SELECT rt0.c4, rt0.c0, rt0.c2, rt0.c3 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c4, rt0.c0, rt0.c2, rt0.c3 HAVING ((COUNT(((((((((((((rt0.c0)OR(x'')))AND(MIN(MIN(TOTAL(AVG(rt0.c1)))))))AND(MAX(rt0.c4))))OR(v0.c0)))AND(GROUP_CONCAT(rt0.c1))))AND(TOTAL(rt0.c3))))) ISNULL);
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (((STRFTIME(v0.c0, v0.c0, v0.c0)) NOTNULL)) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (((STRFTIME(v0.c0, v0.c0, v0.c0)) NOTNULL)))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((((STRFTIME(v0.c0, v0.c0, v0.c0)) NOTNULL)) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT rt0.c3, rt0.c4, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c3, rt0.c4, rt0.c2 FROM rt0 WHERE (rt0.c1) UNION SELECT DISTINCT rt0.c3, rt0.c4, rt0.c2 FROM rt0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT rt0.c3, rt0.c4, rt0.c2 FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c4, rt0.c2 FROM rt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((0.7174058373005315) BETWEEN ((- (v0.c0))) AND (PRINTF(v0.c0)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((0.7174058373005315) BETWEEN ((- (v0.c0))) AND (PRINTF(v0.c0)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((0.7174058373005315) BETWEEN ((- (v0.c0))) AND (PRINTF(v0.c0)))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c2, v0.c0, rt0.c0, rt0.c4, rt0.c1 FROM rt0 FULL OUTER JOIN v0 ON ((rt0.c3) IS FALSE) GROUP BY rt0.c2, v0.c0, rt0.c0, rt0.c4, rt0.c1;
SELECT rt0.c2, v0.c0, rt0.c0, rt0.c4, rt0.c1 FROM rt0 FULL OUTER JOIN v0 ON ((rt0.c3) IS FALSE) GROUP BY rt0.c2, v0.c0, rt0.c0, rt0.c4, rt0.c1 HAVING (((rt0.c4)) NOT BETWEEN ((rt0.c2)) AND (((COUNT(*) IN (rt0.c3, rt0.c1))))) UNION ALL SELECT rt0.c2, v0.c0, rt0.c0, rt0.c4, rt0.c1 FROM rt0 FULL OUTER JOIN v0 ON ((rt0.c3) IS FALSE) GROUP BY rt0.c2, v0.c0, rt0.c0, rt0.c4, rt0.c1 HAVING (NOT ((((rt0.c4)) NOT BETWEEN ((rt0.c2)) AND (((COUNT(*) IN (rt0.c3, rt0.c1))))))) UNION ALL SELECT ALL rt0.c2, v0.c0, rt0.c0, rt0.c4, rt0.c1 FROM rt0 FULL OUTER JOIN v0 ON ((rt0.c3) IS FALSE) GROUP BY rt0.c2, v0.c0, rt0.c0, rt0.c4, rt0.c1 HAVING (((((rt0.c4)) NOT BETWEEN ((rt0.c2)) AND (((COUNT(*) IN (rt0.c3, rt0.c1)))))) ISNULL);
SELECT ALL rt0.c2, v0.c0, rt0.c0, rt0.c4, rt0.c1 FROM rt0 FULL OUTER JOIN v0 ON ((rt0.c3) IS FALSE) GROUP BY rt0.c2, v0.c0, rt0.c0, rt0.c4, rt0.c1;
SELECT rt0.c2, v0.c0, rt0.c0, rt0.c4, rt0.c1 FROM rt0 FULL OUTER JOIN v0 ON ((rt0.c3) IS FALSE) GROUP BY rt0.c2, v0.c0, rt0.c0, rt0.c4, rt0.c1 HAVING (((rt0.c4)) NOT BETWEEN ((rt0.c2)) AND (((COUNT(*) IN (rt0.c3, rt0.c1))))) UNION ALL SELECT rt0.c2, v0.c0, rt0.c0, rt0.c4, rt0.c1 FROM rt0 FULL OUTER JOIN v0 ON ((rt0.c3) IS FALSE) GROUP BY rt0.c2, v0.c0, rt0.c0, rt0.c4, rt0.c1 HAVING (NOT ((((rt0.c4)) NOT BETWEEN ((rt0.c2)) AND (((COUNT(*) IN (rt0.c3, rt0.c1))))))) UNION ALL SELECT ALL rt0.c2, v0.c0, rt0.c0, rt0.c4, rt0.c1 FROM rt0 FULL OUTER JOIN v0 ON ((rt0.c3) IS FALSE) GROUP BY rt0.c2, v0.c0, rt0.c0, rt0.c4, rt0.c1 HAVING (((((rt0.c4)) NOT BETWEEN ((rt0.c2)) AND (((COUNT(*) IN (rt0.c3, rt0.c1)))))) ISNULL);
SELECT ALL rt0.c2, v0.c0, rt0.c0, rt0.c4, rt0.c1 FROM rt0 FULL OUTER JOIN v0 ON ((rt0.c3) IS FALSE) GROUP BY rt0.c2, v0.c0, rt0.c0, rt0.c4, rt0.c1;
SELECT ALL rt0.c2, rt0.c0 FROM v0 CROSS JOIN rt0 ON LOWER((- (rt0.c3)));
SELECT ALL rt0.c2, rt0.c0 FROM v0 CROSS JOIN rt0 ON LOWER((- (rt0.c3))) WHERE (((((((rt0.c2)IS(rt0.c1)))AND(((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c1)))))OR((((rt0.c4))!=((rt0.c3)))))) UNION ALL SELECT rt0.c2, rt0.c0 FROM v0 CROSS JOIN rt0 ON LOWER((- (rt0.c3))) WHERE ((NOT (((((((rt0.c2)IS(rt0.c1)))AND(((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c1)))))OR((((rt0.c4))<>((rt0.c3)))))))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM v0 CROSS JOIN rt0 ON LOWER((- (rt0.c3))) WHERE (((((((((rt0.c2)IS(rt0.c1)))AND(((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c1)))))OR((((rt0.c4))<>((rt0.c3)))))) ISNULL));
SELECT ALL rt0.c2, rt0.c0 FROM v0 CROSS JOIN rt0 ON LOWER((- (rt0.c3)));
SELECT DISTINCT * FROM v0 CROSS JOIN rt0 ON rtreenode(v0.c0, rt0.c1) COLLATE RTRIM;
SELECT DISTINCT * FROM v0 CROSS JOIN rt0 ON rtreenode(v0.c0, rt0.c1) COLLATE RTRIM WHERE (LOWER(DISTINCT rt0.c0 COLLATE RTRIM)) UNION SELECT DISTINCT * FROM v0 NOT INDEXED CROSS JOIN rt0 ON rtreenode(v0.c0, rt0.c1) COLLATE RTRIM WHERE ((NOT (LOWER(DISTINCT rt0.c0 COLLATE RTRIM)))) UNION SELECT DISTINCT * FROM v0 CROSS JOIN rt0 ON rtreenode(v0.c0, rt0.c1) COLLATE RTRIM WHERE (((LOWER(DISTINCT rt0.c0 COLLATE RTRIM)) ISNULL));
SELECT DISTINCT * FROM v0 CROSS JOIN rt0 ON rtreenode(v0.c0, rt0.c1) COLLATE RTRIM;
SELECT rt0.c1 FROM v0, rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM v0, rt0 WHERE (((((rt0.c1)&(rt0.c1)))&(rt0.c0))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM v0, rt0 WHERE ((NOT (((((rt0.c1)&(rt0.c1)))&(rt0.c0))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM v0, rt0 WHERE (((((((rt0.c1)&(rt0.c1)))&(rt0.c0))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM v0, rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c4, rt0.c1 FROM rt0, v0 NOT INDEXED GROUP BY rt0.c4, rt0.c1;
SELECT rt0.c4, rt0.c1 FROM rt0, v0 GROUP BY rt0.c4, rt0.c1 HAVING COALESCE(DISTINCT MIN(rt0.c1), ((SUM(SUM(MIN(rt0.c0)))) ISNULL)) UNION ALL SELECT ALL rt0.c4, rt0.c1 FROM rt0, v0 GROUP BY rt0.c4, rt0.c1 HAVING (NOT (COALESCE(DISTINCT MIN(rt0.c1), ((SUM(SUM(MIN(rt0.c0)))) ISNULL)))) UNION ALL SELECT rt0.c4, rt0.c1 FROM rt0, v0 GROUP BY rt0.c4, rt0.c1 HAVING ((COALESCE(DISTINCT MIN(rt0.c1), ((SUM(SUM(MIN(rt0.c0)))) ISNULL))) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c4 FROM rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c4 FROM rt0 WHERE (CASE CASE WHEN rt0.c3 THEN rt0.c0 WHEN '714668961' THEN rt0.c2 WHEN NULL THEN rt0.c2 END  WHEN CAST(rt0.c4 AS REAL) THEN ((rt0.c3) NOT NULL) END) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c4 FROM rt0 WHERE ((NOT (CASE CASE WHEN rt0.c3 THEN rt0.c0 WHEN '714668961' THEN rt0.c2 WHEN NULL THEN rt0.c2 END  WHEN CAST(rt0.c4 AS REAL) THEN ((rt0.c3) NOT NULL) END))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c4 FROM rt0 WHERE (((CASE CASE WHEN rt0.c3 THEN rt0.c0 WHEN '714668961' THEN rt0.c2 WHEN NULL THEN rt0.c2 END  WHEN CAST(rt0.c4 AS REAL) THEN ((rt0.c3) NOT NULL) END) ISNULL));
SELECT rt0.c0, rt0.c1, rt0.c4 FROM rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((v0.c0 IN (v0.c0, v0.c0)))IS NOT(v0.c0))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((v0.c0 IN (v0.c0, v0.c0)))IS NOT(v0.c0))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((v0.c0 IN (v0.c0, v0.c0)))IS NOT(v0.c0))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL rt0.c4, rt0.c1, rt0.c0, rt0.c3, rt0.c2 FROM rt0 CROSS JOIN v0 ON ((((rt0.c0)IS NOT(rt0.c4)))IS((((rt0.c4, rt0.c0, v0.c0)) BETWEEN ((rt0.c2, rt0.c1, rt0.c3)) AND ((rt0.c4, rt0.c4, v0.c0))))) GROUP BY rt0.c4, rt0.c1, rt0.c0, rt0.c3, rt0.c2;
SELECT rt0.c4, rt0.c1, rt0.c0, rt0.c3, rt0.c2 FROM rt0 CROSS JOIN v0 ON ((((rt0.c0)IS NOT(rt0.c4)))IS((((rt0.c4, rt0.c0, v0.c0)) BETWEEN ((rt0.c2, rt0.c1, rt0.c3)) AND ((rt0.c4, rt0.c4, v0.c0))))) WHERE (((((((rt0.c4)+(rt0.c1)))OR((((v0.c0)) NOT BETWEEN ((rt0.c0)) AND ((v0.c0))))))OR(((v0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c4))))) GROUP BY rt0.c4, rt0.c1, rt0.c0, rt0.c3, rt0.c2 UNION SELECT rt0.c4, rt0.c1, rt0.c0, rt0.c3, rt0.c2 FROM rt0 CROSS JOIN v0 ON ((((rt0.c0)IS NOT(rt0.c4)))IS((((rt0.c4, rt0.c0, v0.c0)) BETWEEN ((rt0.c2, rt0.c1, rt0.c3)) AND ((rt0.c4, rt0.c4, v0.c0))))) WHERE ((NOT (((((((rt0.c4)+(rt0.c1)))OR((((v0.c0)) NOT BETWEEN ((rt0.c0)) AND ((v0.c0))))))OR(((v0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c4))))))) GROUP BY rt0.c4, rt0.c1, rt0.c0, rt0.c3, rt0.c2 UNION SELECT rt0.c4, rt0.c1, rt0.c0, rt0.c3, rt0.c2 FROM rt0 CROSS JOIN v0 ON ((((rt0.c0)IS NOT(rt0.c4)))IS((((rt0.c4, rt0.c0, v0.c0)) BETWEEN ((rt0.c2, rt0.c1, rt0.c3)) AND ((rt0.c4, rt0.c4, v0.c0))))) WHERE (((((((((rt0.c4)+(rt0.c1)))OR((((v0.c0)) NOT BETWEEN ((rt0.c0)) AND ((v0.c0))))))OR(((v0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c4))))) ISNULL)) GROUP BY rt0.c4, rt0.c1, rt0.c0, rt0.c3, rt0.c2;
SELECT ALL rt0.c4, rt0.c1, rt0.c0, rt0.c3, rt0.c2 FROM rt0 CROSS JOIN v0 ON ((((rt0.c0)IS NOT(rt0.c4)))IS((((rt0.c4, rt0.c0, v0.c0)) BETWEEN ((rt0.c2, rt0.c1, rt0.c3)) AND ((rt0.c4, rt0.c4, v0.c0))))) GROUP BY rt0.c4, rt0.c1, rt0.c0, rt0.c3, rt0.c2;
SELECT ALL rt0.c2, rt0.c4 FROM rt0 NOT INDEXED, v0 GROUP BY rt0.c2, rt0.c4;
SELECT ALL rt0.c2, rt0.c4 FROM rt0 NOT INDEXED, v0 GROUP BY rt0.c2, rt0.c4 HAVING ((COUNT(MAX(AVG(TOTAL(MIN(AVG(rt0.c0))))))) BETWEEN (GROUP_CONCAT(v0.c0)) AND (SUM(rt0.c3))) UNION ALL SELECT ALL rt0.c2, rt0.c4 FROM rt0, v0 GROUP BY rt0.c2, rt0.c4 HAVING (NOT (((COUNT(MAX(AVG(TOTAL(MIN(AVG(rt0.c0))))))) BETWEEN (GROUP_CONCAT(v0.c0)) AND (SUM(rt0.c3))))) UNION ALL SELECT ALL rt0.c2, rt0.c4 FROM rt0, v0 GROUP BY rt0.c2, rt0.c4 HAVING ((((COUNT(MAX(AVG(TOTAL(MIN(AVG(rt0.c0))))))) BETWEEN (GROUP_CONCAT(v0.c0)) AND (SUM(rt0.c3)))) ISNULL);
SELECT ALL rt0.c3, rt0.c2 FROM v0, rt0;
SELECT ALL rt0.c3, rt0.c2 FROM v0, rt0 WHERE (((0.6700021121759672)<=(UNICODE(v0.c0)))) UNION ALL SELECT ALL rt0.c3, rt0.c2 FROM v0, rt0 WHERE ((NOT (((0.6700021121759672)<=(UNICODE(v0.c0)))))) UNION ALL SELECT ALL rt0.c3, rt0.c2 FROM v0, rt0 WHERE (((((0.6700021121759672)<=(UNICODE(v0.c0)))) ISNULL));
SELECT ALL rt0.c3, rt0.c2 FROM v0, rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2, rt0.c4, v0.c0 FROM v0, rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2, rt0.c4, v0.c0 FROM v0, rt0 WHERE (((rt0.c4 COLLATE BINARY) BETWEEN ((((v0.c0))>((rt0.c4)))) AND (CAST(0.3968113005408205 AS NUMERIC)))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2, rt0.c4, v0.c0 FROM v0, rt0 WHERE ((NOT (((rt0.c4 COLLATE BINARY) BETWEEN ((((v0.c0))>((rt0.c4)))) AND (CAST(0.3968113005408205 AS NUMERIC)))))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2, rt0.c4, v0.c0 FROM v0, rt0 WHERE (((((rt0.c4 COLLATE BINARY) BETWEEN ((((v0.c0))>((rt0.c4)))) AND (CAST(0.3968113005408205 AS NUMERIC)))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2, rt0.c4, v0.c0 FROM v0, rt0;
SELECT ALL rt0.c0, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c4, rt0.c2;
SELECT ALL rt0.c0, rt0.c4, rt0.c2 FROM rt0 WHERE (((((((rt0.c0) IS TRUE))OR(((rt0.c1)<<(rt0.c4)))))OR(-915150847))) GROUP BY rt0.c0, rt0.c4, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c4, rt0.c2 FROM rt0 WHERE ((NOT (((((((rt0.c0) IS TRUE))OR(((rt0.c1)<<(rt0.c4)))))OR(-915150847))))) GROUP BY rt0.c0, rt0.c4, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c4, rt0.c2 FROM rt0 WHERE (((((((((rt0.c0) IS TRUE))OR(((rt0.c1)<<(rt0.c4)))))OR(-915150847))) ISNULL)) GROUP BY rt0.c0, rt0.c4, rt0.c2;
SELECT ALL rt0.c0, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c4, rt0.c2;
SELECT rt0.c3 FROM v0, rt0 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM v0, rt0 GROUP BY rt0.c3 HAVING MAX((+ (MIN(TOTAL(rt0.c2))))) UNION ALL SELECT ALL rt0.c3 FROM v0, rt0 GROUP BY rt0.c3 HAVING (NOT (MAX((+ (MIN(TOTAL(rt0.c2))))))) UNION ALL SELECT ALL rt0.c3 FROM v0, rt0 GROUP BY rt0.c3 HAVING ((MAX((+ (MIN(TOTAL(rt0.c2)))))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((((rt0.c4)>=(rt0.c2))) ISNULL)) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((((rt0.c4)>=(rt0.c2))) ISNULL)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((rt0.c4)>=(rt0.c2))) ISNULL)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((((((v0.c0)|(v0.c0)))OR(CAST(v0.c0 AS INTEGER))))AND(CAST(v0.c0 AS INTEGER)))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((((v0.c0)|(v0.c0)))OR(CAST(v0.c0 AS INTEGER))))AND(CAST(v0.c0 AS INTEGER)))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((((v0.c0)|(v0.c0)))OR(CAST(v0.c0 AS INTEGER))))AND(CAST(v0.c0 AS INTEGER)))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (CAST(CAST(v0.c0 AS TEXT) AS NUMERIC)) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CAST(CAST(v0.c0 AS TEXT) AS NUMERIC)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((CAST(CAST(v0.c0 AS TEXT) AS NUMERIC)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0, rt0.c4, rt0.c3, rt0.c2 FROM v0, rt0 GROUP BY v0.c0, rt0.c4, rt0.c3, rt0.c2;
SELECT v0.c0, rt0.c4, rt0.c3, rt0.c2 FROM v0, rt0 GROUP BY v0.c0, rt0.c4, rt0.c3, rt0.c2 HAVING TOTAL(AVG(rt0.c1)) COLLATE BINARY UNION ALL SELECT v0.c0, rt0.c4, rt0.c3, rt0.c2 FROM v0, rt0 GROUP BY v0.c0, rt0.c4, rt0.c3, rt0.c2 HAVING (NOT (TOTAL(AVG(rt0.c1)) COLLATE BINARY)) UNION ALL SELECT ALL v0.c0, rt0.c4, rt0.c3, rt0.c2 FROM v0, rt0 GROUP BY v0.c0, rt0.c4, rt0.c3, rt0.c2 HAVING ((TOTAL(AVG(rt0.c1)) COLLATE BINARY) ISNULL);
SELECT rt0.c0, rt0.c3 FROM v0 FULL OUTER JOIN rt0 ON CASE (rt0.c3 IN ())  WHEN CASE rt0.c1  WHEN rt0.c3 THEN v0.c0 END THEN v0.c0 COLLATE RTRIM END;
SELECT rt0.c0, rt0.c3 FROM v0 FULL OUTER JOIN rt0 ON CASE (rt0.c3 IN ())  WHEN CASE rt0.c1  WHEN rt0.c3 THEN v0.c0 END THEN v0.c0 COLLATE RTRIM END WHERE (((rt0.c2)+(rt0.c4)) COLLATE RTRIM) UNION ALL SELECT rt0.c0, rt0.c3 FROM v0 FULL OUTER JOIN rt0 ON CASE (rt0.c3 IN ())  WHEN CASE rt0.c1  WHEN rt0.c3 THEN v0.c0 END THEN v0.c0 COLLATE RTRIM END WHERE ((NOT (((rt0.c2)+(rt0.c4)) COLLATE RTRIM))) UNION ALL SELECT rt0.c0, rt0.c3 FROM v0 FULL OUTER JOIN rt0 ON CASE (rt0.c3 IN ())  WHEN CASE rt0.c1  WHEN rt0.c3 THEN v0.c0 END THEN v0.c0 COLLATE RTRIM END WHERE (((((rt0.c2)+(rt0.c4)) COLLATE RTRIM) ISNULL));
SELECT rt0.c0, rt0.c3 FROM v0 FULL OUTER JOIN rt0 ON CASE (rt0.c3 IN ())  WHEN CASE rt0.c1  WHEN rt0.c3 THEN v0.c0 END THEN v0.c0 COLLATE RTRIM END;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((rt0.c2 IN (rt0.c1, rt0.c2)) COLLATE BINARY) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((rt0.c2 IN (rt0.c1, rt0.c2)) COLLATE BINARY))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c2 IN (rt0.c1, rt0.c2)) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c3, rt0.c4, v0.c0, rt0.c0 FROM rt0 RIGHT OUTER JOIN v0 ON x'' COLLATE RTRIM GROUP BY rt0.c3, rt0.c4, v0.c0, rt0.c0;
SELECT rt0.c3, rt0.c4, v0.c0, rt0.c0 FROM rt0 RIGHT OUTER JOIN v0 ON x'' COLLATE RTRIM WHERE (((v0.c0)LIKE(rt0.c1)) COLLATE NOCASE) GROUP BY rt0.c3, rt0.c4, v0.c0, rt0.c0 UNION SELECT ALL rt0.c3, rt0.c4, v0.c0, rt0.c0 FROM rt0 RIGHT OUTER JOIN v0 ON x'' COLLATE RTRIM WHERE ((NOT (((v0.c0)LIKE(rt0.c1)) COLLATE NOCASE))) GROUP BY rt0.c3, rt0.c4, v0.c0, rt0.c0 UNION SELECT rt0.c3, rt0.c4, v0.c0, rt0.c0 FROM rt0 RIGHT OUTER JOIN v0 ON x'' COLLATE RTRIM WHERE (((((v0.c0)LIKE(rt0.c1)) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c3, rt0.c4, v0.c0, rt0.c0;
SELECT rt0.c3, rt0.c4, v0.c0, rt0.c0 FROM rt0 RIGHT OUTER JOIN v0 ON x'' COLLATE RTRIM GROUP BY rt0.c3, rt0.c4, v0.c0, rt0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING v0.c0 UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((v0.c0) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING v0.c0 UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((v0.c0) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c0, v0.c0, rt0.c1, rt0.c3, rt0.c2, rt0.c4 FROM v0 LEFT OUTER JOIN rt0 ON CAST(rt0.c3 COLLATE NOCASE AS TEXT);
SELECT ALL rt0.c0, v0.c0, rt0.c1, rt0.c3, rt0.c2, rt0.c4 FROM v0 LEFT OUTER JOIN rt0 ON CAST(rt0.c3 COLLATE NOCASE AS TEXT) WHERE (NULL COLLATE RTRIM) UNION ALL SELECT rt0.c0, v0.c0, rt0.c1, rt0.c3, rt0.c2, rt0.c4 FROM v0 LEFT OUTER JOIN rt0 ON CAST(rt0.c3 COLLATE NOCASE AS TEXT) WHERE ((NOT (NULL COLLATE RTRIM))) UNION ALL SELECT ALL rt0.c0, v0.c0, rt0.c1, rt0.c3, rt0.c2, rt0.c4 FROM v0 LEFT OUTER JOIN rt0 ON CAST(rt0.c3 COLLATE NOCASE AS TEXT) WHERE (((NULL COLLATE RTRIM) ISNULL));
SELECT ALL rt0.c0, v0.c0, rt0.c1, rt0.c3, rt0.c2, rt0.c4 FROM v0 LEFT OUTER JOIN rt0 ON CAST(rt0.c3 COLLATE NOCASE AS TEXT);
SELECT DISTINCT rt0.c3, v0.c0, rt0.c1 FROM v0, rt0;
SELECT DISTINCT rt0.c3, v0.c0, rt0.c1 FROM v0, rt0 WHERE ((- (((rt0.c4)IS NOT(rt0.c4))))) UNION SELECT DISTINCT rt0.c3, v0.c0, rt0.c1 FROM v0, rt0 WHERE ((NOT ((- (((rt0.c4)IS NOT(rt0.c4))))))) UNION SELECT DISTINCT rt0.c3, v0.c0, rt0.c1 FROM v0, rt0 WHERE ((((- (((rt0.c4)IS NOT(rt0.c4))))) ISNULL));
SELECT DISTINCT rt0.c3, v0.c0, rt0.c1 FROM v0, rt0;
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0 WHERE ((+ (CASE rt0.c0  WHEN rt0.c2 THEN rt0.c4 END))) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM rt0 WHERE ((NOT ((+ (CASE rt0.c0  WHEN rt0.c2 THEN rt0.c4 END))))) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM rt0 WHERE ((((+ (CASE rt0.c0  WHEN rt0.c2 THEN rt0.c4 END))) ISNULL)) GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT ALL rt0.c3, rt0.c4 FROM v0 INNER JOIN rt0 ON CAST(CASE WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN v0.c0 THEN rt0.c3 END AS NUMERIC) GROUP BY rt0.c3, rt0.c4;
SELECT rt0.c3, rt0.c4 FROM v0 INNER JOIN rt0 ON CAST(CASE WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN v0.c0 THEN rt0.c3 END AS NUMERIC) GROUP BY rt0.c3, rt0.c4 HAVING MAX(COUNT(*)) UNION ALL SELECT ALL rt0.c3, rt0.c4 FROM v0 INNER JOIN rt0 ON CAST(CASE WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN v0.c0 THEN rt0.c3 END AS NUMERIC) GROUP BY rt0.c3, rt0.c4 HAVING (NOT (MAX(COUNT(*)))) UNION ALL SELECT ALL rt0.c3, rt0.c4 FROM v0 INNER JOIN rt0 ON CAST(CASE WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN v0.c0 THEN rt0.c3 END AS NUMERIC) GROUP BY rt0.c3, rt0.c4 HAVING ((MAX(COUNT(*))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c4))) COLLATE NOCASE) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((rt0.c0)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c4))) COLLATE NOCASE))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((((rt0.c0)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c4))) COLLATE NOCASE) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c3, rt0.c0 FROM v0, rt0;
SELECT DISTINCT rt0.c1, rt0.c3, rt0.c0 FROM v0, rt0 WHERE ((((((NOT (rt0.c2)))AND((~ (rt0.c0)))))AND((NOT (rt0.c0))))) UNION SELECT DISTINCT rt0.c1, rt0.c3, rt0.c0 FROM v0, rt0 WHERE ((NOT ((((((NOT (rt0.c2)))AND((~ (rt0.c0)))))AND((NOT (rt0.c0))))))) UNION SELECT DISTINCT rt0.c1, rt0.c3, rt0.c0 FROM v0, rt0 WHERE ((((((((NOT (rt0.c2)))AND((~ (rt0.c0)))))AND((NOT (rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c3, rt0.c0 FROM v0, rt0;
SELECT v0.c0, rt0.c1 FROM v0, rt0 GROUP BY v0.c0, rt0.c1;
SELECT v0.c0, rt0.c1 FROM v0, rt0 WHERE (((((((rt0.c3)OR(rt0.c0)))AND(v0.c0))) NOTNULL)) GROUP BY v0.c0, rt0.c1 UNION SELECT ALL v0.c0, rt0.c1 FROM v0, rt0 WHERE ((NOT (((((((rt0.c3)OR(rt0.c0)))AND(v0.c0))) NOTNULL)))) GROUP BY v0.c0, rt0.c1 UNION SELECT v0.c0, rt0.c1 FROM v0, rt0 WHERE (((((((((rt0.c3)OR(rt0.c0)))AND(v0.c0))) NOTNULL)) ISNULL)) GROUP BY v0.c0, rt0.c1;
SELECT v0.c0, rt0.c1 FROM v0, rt0 GROUP BY v0.c0, rt0.c1;
SELECT ALL rt0.c1 FROM rt0, v0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0, v0 GROUP BY rt0.c1 HAVING MAX(COUNT(COUNT(*))) UNION ALL SELECT rt0.c1 FROM rt0, v0 GROUP BY rt0.c1 HAVING (NOT (MAX(COUNT(COUNT(*))))) UNION ALL SELECT ALL rt0.c1 FROM rt0, v0 GROUP BY rt0.c1 HAVING ((MAX(COUNT(COUNT(*)))) ISNULL);
SELECT ALL rt0.c4, rt0.c1 FROM rt0;
SELECT ALL rt0.c4, rt0.c1 FROM rt0 WHERE (((CAST(rt0.c2 AS TEXT)) NOTNULL)) UNION ALL SELECT rt0.c4, rt0.c1 FROM rt0 WHERE ((NOT (((CAST(rt0.c2 AS TEXT)) NOTNULL)))) UNION ALL SELECT ALL rt0.c4, rt0.c1 FROM rt0 WHERE (((((CAST(rt0.c2 AS TEXT)) NOTNULL)) ISNULL));
SELECT ALL rt0.c4, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((0.5070588390554245)) AND ((((v0.c0)>>(v0.c0)))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((v0.c0)) NOT BETWEEN ((0.5070588390554245)) AND ((((v0.c0)>>(v0.c0)))))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((v0.c0)) NOT BETWEEN ((0.5070588390554245)) AND ((((v0.c0)>>(v0.c0)))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c4, v0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c4, v0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c4, v0.c0, rt0.c1 FROM v0, rt0 WHERE (('0.9105903616618367' IN ())) GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c4, v0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c3, rt0.c0, rt0.c4, v0.c0, rt0.c1 FROM v0, rt0 WHERE ((NOT (('0.9105903616618367' IN ())))) GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c4, v0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c3, rt0.c0, rt0.c4, v0.c0, rt0.c1 FROM v0, rt0 WHERE (((('0.9105903616618367' IN ())) ISNULL)) GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c4, v0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c4, v0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c4, v0.c0, rt0.c1;
SELECT rt0.c1, rt0.c3, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c0, rt0.c4;
SELECT ALL rt0.c1, rt0.c3, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c0, rt0.c4 HAVING COUNT(SUM(rt0.c4)) UNION ALL SELECT ALL rt0.c1, rt0.c3, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c0, rt0.c4 HAVING (NOT (COUNT(SUM(rt0.c4)))) UNION ALL SELECT rt0.c1, rt0.c3, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c0, rt0.c4 HAVING ((COUNT(SUM(rt0.c4))) ISNULL);
SELECT ALL MAX(rt0.c1) FROM rt0 ORDER BY ((((NULL)AND(((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c3)))))AND(CAST(rt0.c1 AS BLOB)))  NULLS LAST;
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE (v0.c0) UNION ALL SELECT * FROM v0 WHERE ((NOT (v0.c0))) UNION ALL SELECT * FROM v0 WHERE (((v0.c0) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((0Xffffffffec17ad0b)>(v0.c0 COLLATE RTRIM))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((0xffffffffec17ad0b)>(v0.c0 COLLATE RTRIM))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((0xffffffffec17ad0b)>(v0.c0 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL rt0.c2, rt0.c4, rt0.c0, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c0, rt0.c1, rt0.c3;
SELECT ALL rt0.c2, rt0.c4, rt0.c0, rt0.c1, rt0.c3 FROM rt0 WHERE ((((((rt0.c3))=((rt0.c3))))|(((((rt0.c0)AND(rt0.c4)))AND(rt0.c2))))) GROUP BY rt0.c2, rt0.c4, rt0.c0, rt0.c1, rt0.c3 UNION SELECT rt0.c2, rt0.c4, rt0.c0, rt0.c1, rt0.c3 FROM rt0 WHERE ((NOT ((((((rt0.c3))=((rt0.c3))))|(((((rt0.c0)AND(rt0.c4)))AND(rt0.c2))))))) GROUP BY rt0.c2, rt0.c4, rt0.c0, rt0.c1, rt0.c3 UNION SELECT ALL rt0.c2, rt0.c4, rt0.c0, rt0.c1, rt0.c3 FROM rt0 WHERE ((((((((rt0.c3))=((rt0.c3))))|(((((rt0.c0)AND(rt0.c4)))AND(rt0.c2))))) ISNULL)) GROUP BY rt0.c2, rt0.c4, rt0.c0, rt0.c1, rt0.c3;
SELECT ALL rt0.c2, rt0.c4, rt0.c0, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c0, rt0.c1, rt0.c3;
SELECT ALL rt0.c1 FROM rt0, v0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, v0 GROUP BY rt0.c1 HAVING MAX((+ (MAX(rt0.c2)))) UNION ALL SELECT rt0.c1 FROM rt0, v0 GROUP BY rt0.c1 HAVING (NOT (MAX((+ (MAX(rt0.c2)))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 NOT INDEXED, v0 GROUP BY rt0.c1 HAVING ((MAX((+ (MAX(rt0.c2))))) ISNULL);
SELECT rt0.c4, rt0.c0, rt0.c2, v0.c0, rt0.c1, rt0.c3 FROM v0, rt0;
SELECT ALL rt0.c4, rt0.c0, rt0.c2, v0.c0, rt0.c1, rt0.c3 FROM v0, rt0 WHERE (CASE WHEN (rt0.c1 IN ()) THEN v0.c0 END) UNION ALL SELECT rt0.c4, rt0.c0, rt0.c2, v0.c0, rt0.c1, rt0.c3 FROM v0, rt0 WHERE ((NOT (CASE WHEN (rt0.c1 IN ()) THEN v0.c0 END))) UNION ALL SELECT ALL rt0.c4, rt0.c0, rt0.c2, v0.c0, rt0.c1, rt0.c3 FROM v0, rt0 WHERE (((CASE WHEN (rt0.c1 IN ()) THEN v0.c0 END) ISNULL));
SELECT rt0.c4, rt0.c0, rt0.c2, v0.c0, rt0.c1, rt0.c3 FROM v0, rt0;
SELECT DISTINCT rt0.c2, rt0.c4, rt0.c3, v0.c0 FROM rt0, v0;
SELECT DISTINCT rt0.c2, rt0.c4, rt0.c3, v0.c0 FROM rt0, v0 WHERE ('-1981708643') UNION SELECT DISTINCT rt0.c2, rt0.c4, rt0.c3, v0.c0 FROM rt0, v0 WHERE ((NOT ('-1981708643'))) UNION SELECT DISTINCT rt0.c2, rt0.c4, rt0.c3, v0.c0 FROM rt0, v0 WHERE ((('-1981708643') ISNULL));
SELECT DISTINCT rt0.c2, rt0.c4, rt0.c3, v0.c0 FROM rt0, v0;
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0 WHERE (((rt0.c0)<<((rt0.c2 IN ())))) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM rt0 WHERE ((NOT (((rt0.c0)<<((rt0.c2 IN ())))))) GROUP BY rt0.c3 UNION SELECT rt0.c3 FROM rt0 WHERE (((((rt0.c0)<<((rt0.c2 IN ())))) ISNULL)) GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING v0.c0 UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((v0.c0) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING v0.c0 UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((v0.c0) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c4, v0.c0 FROM rt0 INNER JOIN v0 ON ABS(DISTINCT (((rt0.c4, rt0.c2, x'47d4')) NOT BETWEEN ((v0.c0, rt0.c2, rt0.c3)) AND ((rt0.c2, 1234514682, rt0.c2))));
SELECT ALL rt0.c4, v0.c0 FROM rt0 INNER JOIN v0 ON ABS(DISTINCT (((rt0.c4, rt0.c2, x'47d4')) NOT BETWEEN ((v0.c0, rt0.c2, rt0.c3)) AND ((rt0.c2, 1234514682, rt0.c2)))) WHERE (((((((((((rt0.c4) NOTNULL))OR(((rt0.c3) NOT BETWEEN (0.4992990315943323) AND (rt0.c2)))))OR(((rt0.c0) IS TRUE))))OR((~ (rt0.c2)))))OR(((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c2))))) UNION ALL SELECT ALL rt0.c4, v0.c0 FROM rt0 INNER JOIN v0 ON ABS(DISTINCT (((rt0.c4, rt0.c2, x'47d4')) NOT BETWEEN ((v0.c0, rt0.c2, rt0.c3)) AND ((rt0.c2, 1234514682, rt0.c2)))) WHERE ((NOT (((((((((((rt0.c4) NOTNULL))OR(((rt0.c3) NOT BETWEEN (0.4992990315943323) AND (rt0.c2)))))OR(((rt0.c0) IS TRUE))))OR((~ (rt0.c2)))))OR(((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c2))))))) UNION ALL SELECT ALL rt0.c4, v0.c0 FROM rt0 INNER JOIN v0 ON ABS(DISTINCT (((rt0.c4, rt0.c2, x'47d4')) NOT BETWEEN ((v0.c0, rt0.c2, rt0.c3)) AND ((rt0.c2, 1234514682, rt0.c2)))) WHERE (((((((((((((rt0.c4) NOTNULL))OR(((rt0.c3) NOT BETWEEN (0.4992990315943323) AND (rt0.c2)))))OR(((rt0.c0) IS TRUE))))OR((~ (rt0.c2)))))OR(((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c2))))) ISNULL));
SELECT rt0.c4, v0.c0 FROM rt0 INNER JOIN v0 ON ABS(DISTINCT (((rt0.c4, rt0.c2, x'47d4')) NOT BETWEEN ((v0.c0, rt0.c2, rt0.c3)) AND ((rt0.c2, 1234514682, rt0.c2))));
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((((+ (v0.c0)))|(((v0.c0) IS TRUE)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((((+ (v0.c0)))|(((v0.c0) IS TRUE)))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((+ (v0.c0)))|(((v0.c0) IS TRUE)))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE (CAST(((rt0.c3)*(rt0.c4)) AS NUMERIC)) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT (CAST(((rt0.c3)*(rt0.c4)) AS NUMERIC)))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE (((CAST(((rt0.c3)*(rt0.c4)) AS NUMERIC)) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c4 FROM rt0 GROUP BY rt0.c4;
SELECT ALL rt0.c4 FROM rt0 GROUP BY rt0.c4 HAVING GROUP_CONCAT(rt0.c0) UNION ALL SELECT rt0.c4 FROM rt0 GROUP BY rt0.c4 HAVING (NOT (GROUP_CONCAT(rt0.c0))) UNION ALL SELECT rt0.c4 FROM rt0 GROUP BY rt0.c4 HAVING ((GROUP_CONCAT(rt0.c0)) ISNULL);
SELECT rt0.c4 FROM rt0 GROUP BY rt0.c4;
SELECT ALL rt0.c4 FROM rt0 GROUP BY rt0.c4 HAVING GROUP_CONCAT(rt0.c0) UNION ALL SELECT rt0.c4 FROM rt0 GROUP BY rt0.c4 HAVING (NOT (GROUP_CONCAT(rt0.c0))) UNION ALL SELECT rt0.c4 FROM rt0 GROUP BY rt0.c4 HAVING ((GROUP_CONCAT(rt0.c0)) ISNULL);
SELECT rt0.c4 FROM rt0 GROUP BY rt0.c4;
SELECT ALL rt0.c4, rt0.c2 FROM v0 NATURAL JOIN rt0;
SELECT rt0.c4, rt0.c2 FROM v0 NATURAL JOIN rt0 WHERE (((((rt0.c4)AND(((rt0.c2)>(rt0.c3)))))AND(CASE v0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c3 END))) UNION ALL SELECT ALL rt0.c4, rt0.c2 FROM v0 NOT INDEXED NATURAL JOIN rt0 WHERE ((NOT (((((rt0.c4)AND(((rt0.c2)>(rt0.c3)))))AND(CASE v0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c3 END))))) UNION ALL SELECT rt0.c4, rt0.c2 FROM v0 NATURAL JOIN rt0 WHERE (((((((rt0.c4)AND(((rt0.c2)>(rt0.c3)))))AND(CASE v0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c3 END))) ISNULL));
SELECT ALL rt0.c4, rt0.c2 FROM v0 NATURAL JOIN rt0;
SELECT DISTINCT rt0.c1 FROM v0, rt0;
SELECT DISTINCT rt0.c1 FROM v0, rt0 WHERE (CAST(((((rt0.c3)AND(rt0.c0)))OR(rt0.c0)) AS INTEGER)) UNION SELECT DISTINCT rt0.c1 FROM v0, rt0 WHERE ((NOT (CAST(((((rt0.c3)AND(rt0.c0)))OR(rt0.c0)) AS INTEGER)))) UNION SELECT DISTINCT rt0.c1 FROM v0, rt0 WHERE (((CAST(((((rt0.c3)AND(rt0.c0)))OR(rt0.c0)) AS INTEGER)) ISNULL));
SELECT DISTINCT rt0.c1 FROM v0, rt0;
SELECT ALL rt0.c4 FROM rt0 GROUP BY rt0.c4;
SELECT rt0.c4 FROM rt0 WHERE ((+ ((rt0.c1 IN ())))) GROUP BY rt0.c4 UNION SELECT ALL rt0.c4 FROM rt0 WHERE ((NOT ((+ ((rt0.c1 IN ())))))) GROUP BY rt0.c4 UNION SELECT ALL rt0.c4 FROM rt0 WHERE ((((+ ((rt0.c1 IN ())))) ISNULL)) GROUP BY rt0.c4;
SELECT ALL rt0.c4 FROM rt0 GROUP BY rt0.c4;
SELECT ALL rt0.c1 FROM rt0, v0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, v0 GROUP BY rt0.c1 HAVING rt0.c2 UNION ALL SELECT ALL rt0.c1 FROM rt0, v0 GROUP BY rt0.c1 HAVING (NOT (rt0.c2)) UNION ALL SELECT rt0.c1 FROM rt0, v0 GROUP BY rt0.c1 HAVING ((rt0.c2) ISNULL);
SELECT ALL rt0.c1 FROM rt0, v0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, v0 GROUP BY rt0.c1 HAVING rt0.c2 UNION ALL SELECT ALL rt0.c1 FROM rt0, v0 GROUP BY rt0.c1 HAVING (NOT (rt0.c2)) UNION ALL SELECT rt0.c1 FROM rt0, v0 GROUP BY rt0.c1 HAVING ((rt0.c2) ISNULL);
SELECT ALL rt0.c1 FROM rt0, v0 GROUP BY rt0.c1;
SELECT ALL * FROM rt0 INNER JOIN v0 ON ((((((((v0.c0)OR(rt0.c2)))OR(v0.c0)))OR('')))OR(((rt0.c1) ISNULL)));
SELECT * FROM rt0 INNER JOIN v0 ON ((((((((v0.c0)OR(rt0.c2)))OR(v0.c0)))OR('')))OR(((rt0.c1) ISNULL))) WHERE ((+ (CASE rt0.c2  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c3 END))) UNION ALL SELECT * FROM rt0 INNER JOIN v0 ON ((((((((v0.c0)OR(rt0.c2)))OR(v0.c0)))OR('')))OR(((rt0.c1) ISNULL))) WHERE ((NOT ((+ (CASE rt0.c2  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c3 END))))) UNION ALL SELECT ALL * FROM rt0 INNER JOIN v0 ON ((((((((v0.c0)OR(rt0.c2)))OR(v0.c0)))OR('')))OR(((rt0.c1) ISNULL))) WHERE ((((+ (CASE rt0.c2  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c3 END))) ISNULL));
SELECT ALL * FROM rt0 INNER JOIN v0 ON ((((((((v0.c0)OR(rt0.c2)))OR(v0.c0)))OR('')))OR(((rt0.c1) ISNULL)));
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (x'') UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (x''))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((x'') ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT rt0.c3, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1;
SELECT ALL rt0.c3, rt0.c4, rt0.c1 FROM rt0 WHERE (CASE rt0.c3  WHEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c4 THEN '' WHEN rt0.c4 THEN 0.6776712889221725 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 END END) GROUP BY rt0.c3, rt0.c4, rt0.c1 UNION SELECT rt0.c3, rt0.c4, rt0.c1 FROM rt0 WHERE ((NOT (CASE rt0.c3  WHEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c4 THEN '' WHEN rt0.c4 THEN 0.6776712889221725 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 END END))) GROUP BY rt0.c3, rt0.c4, rt0.c1 UNION SELECT ALL rt0.c3, rt0.c4, rt0.c1 FROM rt0 WHERE (((CASE rt0.c3  WHEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c4 THEN '' WHEN rt0.c4 THEN 0.6776712889221725 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 END END) ISNULL)) GROUP BY rt0.c3, rt0.c4, rt0.c1;
SELECT rt0.c3, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING GROUP_CONCAT(((AVG(v0.c0)) NOT BETWEEN (TOTAL(SUM(NULL))) AND (SUM(v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (GROUP_CONCAT(((AVG(v0.c0)) NOT BETWEEN (TOTAL(SUM(NULL))) AND (SUM(v0.c0)))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((GROUP_CONCAT(((AVG(v0.c0)) NOT BETWEEN (TOTAL(SUM(NULL))) AND (SUM(v0.c0))))) ISNULL);
SELECT ALL rt0.c0, rt0.c2, v0.c0, rt0.c4, rt0.c3 FROM v0, rt0;
SELECT ALL rt0.c0, rt0.c2, v0.c0, rt0.c4, rt0.c3 FROM v0, rt0 WHERE (SQLITE_COMPILEOPTION_GET(((rt0.c1) IS TRUE))) UNION ALL SELECT ALL rt0.c0, rt0.c2, v0.c0, rt0.c4, rt0.c3 FROM v0, rt0 WHERE ((NOT (SQLITE_COMPILEOPTION_GET(((rt0.c1) IS TRUE))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, v0.c0, rt0.c4, rt0.c3 FROM v0, rt0 WHERE (((SQLITE_COMPILEOPTION_GET(((rt0.c1) IS TRUE))) ISNULL));
SELECT ALL rt0.c0, rt0.c2, v0.c0, rt0.c4, rt0.c3 FROM v0, rt0;
SELECT DISTINCT rt0.c1, rt0.c3, rt0.c0, v0.c0, rt0.c4, rt0.c2 FROM v0, rt0;
SELECT DISTINCT rt0.c1, rt0.c3, rt0.c0, v0.c0, rt0.c4, rt0.c2 FROM v0, rt0 WHERE (v0.c0) UNION SELECT DISTINCT rt0.c1, rt0.c3, rt0.c0, v0.c0, rt0.c4, rt0.c2 FROM v0, rt0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT rt0.c1, rt0.c3, rt0.c0, v0.c0, rt0.c4, rt0.c2 FROM v0, rt0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c3, rt0.c0, v0.c0, rt0.c4, rt0.c2 FROM v0, rt0;
SELECT rt0.c1, rt0.c2 FROM rt0 NOT INDEXED GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((CAST(rt0.c2 AS NUMERIC)) BETWEEN ((((rt0.c2, rt0.c2, rt0.c4, NULL, rt0.c3))<=((rt0.c2, rt0.c0, rt0.c1, 0.6784409471315059, rt0.c4)))) AND (rt0.c3))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((CAST(rt0.c2 AS NUMERIC)) BETWEEN ((((rt0.c2, rt0.c2, rt0.c4, NULL, rt0.c3))<=((rt0.c2, rt0.c0, rt0.c1, 0.6784409471315059, rt0.c4)))) AND (rt0.c3))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((((CAST(rt0.c2 AS NUMERIC)) BETWEEN ((((rt0.c2, rt0.c2, rt0.c4, NULL, rt0.c3))<=((rt0.c2, rt0.c0, rt0.c1, 0.6784409471315059, rt0.c4)))) AND (rt0.c3))) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 NOT INDEXED GROUP BY rt0.c1, rt0.c2;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c0, v0.c0, rt0.c1, rt0.c4, rt0.c3, rt0.c2 FROM rt0 FULL OUTER JOIN v0 ON (('2127330950') NOT BETWEEN (rt0.c2) AND (((v0.c0) IS FALSE)));
SELECT ALL rt0.c0, v0.c0, rt0.c1, rt0.c4, rt0.c3, rt0.c2 FROM rt0 FULL OUTER JOIN v0 ON (('2127330950') NOT BETWEEN (rt0.c2) AND (((v0.c0) IS FALSE))) WHERE (((((rt0.c2)<=(v0.c0)))LIKE(CASE v0.c0  WHEN rt0.c0 THEN NULL END))) UNION ALL SELECT ALL rt0.c0, v0.c0, rt0.c1, rt0.c4, rt0.c3, rt0.c2 FROM rt0 FULL OUTER JOIN v0 ON (('2127330950') NOT BETWEEN (rt0.c2) AND (((v0.c0) IS FALSE))) WHERE ((NOT (((((rt0.c2)<=(v0.c0)))LIKE(CASE v0.c0  WHEN rt0.c0 THEN NULL END))))) UNION ALL SELECT rt0.c0, v0.c0, rt0.c1, rt0.c4, rt0.c3, rt0.c2 FROM rt0 FULL OUTER JOIN v0 ON (('2127330950') NOT BETWEEN (rt0.c2) AND (((v0.c0) IS FALSE))) WHERE (((((((rt0.c2)<=(v0.c0)))LIKE(CASE v0.c0  WHEN rt0.c0 THEN NULL END))) ISNULL));
SELECT rt0.c0, v0.c0, rt0.c1, rt0.c4, rt0.c3, rt0.c2 FROM rt0 FULL OUTER JOIN v0 ON (('2127330950') NOT BETWEEN (rt0.c2) AND (((v0.c0) IS FALSE)));
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE ((~ (('b싈' IN ())))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT ((~ (('b싈' IN ())))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((((~ (('b싈' IN ())))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((((v0.c0)) BETWEEN ((((v0.c0) IS TRUE))) AND ((((v0.c0)||(v0.c0)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((((v0.c0)) BETWEEN ((((v0.c0) IS TRUE))) AND ((((v0.c0)||(v0.c0)))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((((v0.c0)) BETWEEN ((((v0.c0) IS TRUE))) AND ((((v0.c0)||(v0.c0)))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL(6.46288755E8))+(TOTAL(v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((TOTAL(6.46288755E8))+(TOTAL(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((TOTAL(6.46288755E8))+(TOTAL(v0.c0)))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL(6.46288755E8))+(TOTAL(v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((TOTAL(6.46288755E8))+(TOTAL(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((TOTAL(6.46288755E8))+(TOTAL(v0.c0)))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT * FROM v0, rt0;
SELECT ALL * FROM v0, rt0 WHERE (((rt0.c0) NOT NULL) COLLATE RTRIM) UNION ALL SELECT ALL * FROM v0, rt0 NOT INDEXED WHERE ((NOT (((rt0.c0) NOT NULL) COLLATE RTRIM))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE (((((rt0.c0) NOT NULL) COLLATE RTRIM) ISNULL));
SELECT * FROM v0, rt0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (((CAST(v0.c0 AS INTEGER)) NOT NULL)) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (((CAST(v0.c0 AS INTEGER)) NOT NULL)))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((((CAST(v0.c0 AS INTEGER)) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT v0.c0 FROM v0, rt0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, rt0 WHERE (TYPEOF(DISTINCT ((rt0.c3) NOT NULL))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, rt0 WHERE ((NOT (TYPEOF(DISTINCT ((rt0.c3) NOT NULL))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, rt0 WHERE (((TYPEOF(DISTINCT ((rt0.c3) NOT NULL))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0, rt0 GROUP BY v0.c0;
SELECT ALL v0.c0, rt0.c4 FROM v0, rt0 GROUP BY v0.c0, rt0.c4;
SELECT ALL v0.c0, rt0.c4 FROM v0, rt0 GROUP BY v0.c0, rt0.c4 HAVING (rt0.c1 COLLATE RTRIM IN ()) UNION ALL SELECT v0.c0, rt0.c4 FROM v0, rt0 GROUP BY v0.c0, rt0.c4 HAVING (NOT ((rt0.c1 COLLATE RTRIM IN ()))) UNION ALL SELECT v0.c0, rt0.c4 FROM v0, rt0 GROUP BY v0.c0, rt0.c4 HAVING (((rt0.c1 COLLATE RTRIM IN ())) ISNULL);
SELECT ALL v0.c0, rt0.c4 FROM v0, rt0 GROUP BY v0.c0, rt0.c4;
SELECT ALL v0.c0, rt0.c4 FROM v0, rt0 GROUP BY v0.c0, rt0.c4 HAVING (rt0.c1 COLLATE RTRIM IN ()) UNION ALL SELECT v0.c0, rt0.c4 FROM v0, rt0 GROUP BY v0.c0, rt0.c4 HAVING (NOT ((rt0.c1 COLLATE RTRIM IN ()))) UNION ALL SELECT v0.c0, rt0.c4 FROM v0, rt0 GROUP BY v0.c0, rt0.c4 HAVING (((rt0.c1 COLLATE RTRIM IN ())) ISNULL);
SELECT ALL v0.c0, rt0.c4 FROM v0, rt0 GROUP BY v0.c0, rt0.c4;
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE ((((CASE WHEN v0.c0 THEN v0.c0 END))==((((v0.c0) IS FALSE))))) UNION ALL SELECT * FROM v0 WHERE ((NOT ((((CASE WHEN v0.c0 THEN v0.c0 END))==((((v0.c0) IS FALSE))))))) UNION ALL SELECT * FROM v0 WHERE ((((((CASE WHEN v0.c0 THEN v0.c0 END))==((((v0.c0) IS FALSE))))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (v0.c0) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT rt0.c2, rt0.c1, rt0.c0, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3, rt0.c4;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, rt0.c3, rt0.c4 FROM rt0 WHERE (((((rt0.c0) IS FALSE)) BETWEEN (((rt0.c1)OR(rt0.c1))) AND ((- (rt0.c4))))) GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3, rt0.c4 UNION SELECT rt0.c2, rt0.c1, rt0.c0, rt0.c3, rt0.c4 FROM rt0 WHERE ((NOT (((((rt0.c0) IS FALSE)) BETWEEN (((rt0.c1)OR(rt0.c1))) AND ((- (rt0.c4))))))) GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3, rt0.c4 UNION SELECT rt0.c2, rt0.c1, rt0.c0, rt0.c3, rt0.c4 FROM rt0 WHERE (((((((rt0.c0) IS FALSE)) BETWEEN (((rt0.c1)OR(rt0.c1))) AND ((- (rt0.c4))))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3, rt0.c4;
SELECT rt0.c2, rt0.c1, rt0.c0, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3, rt0.c4;
SELECT ALL rt0.c4, rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM v0, rt0 GROUP BY rt0.c4, rt0.c0, rt0.c1, rt0.c3, rt0.c2;
SELECT rt0.c4, rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM v0, rt0 GROUP BY rt0.c4, rt0.c0, rt0.c1, rt0.c3, rt0.c2 HAVING ((MAX(v0.c0))<<(((TOTAL(COUNT(COUNT(*)))) IS FALSE))) UNION ALL SELECT rt0.c4, rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM v0, rt0 GROUP BY rt0.c4, rt0.c0, rt0.c1, rt0.c3, rt0.c2 HAVING (NOT (((MAX(v0.c0))<<(((TOTAL(COUNT(COUNT(*)))) IS FALSE))))) UNION ALL SELECT ALL rt0.c4, rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM v0, rt0 GROUP BY rt0.c4, rt0.c0, rt0.c1, rt0.c3, rt0.c2 HAVING ((((MAX(v0.c0))<<(((TOTAL(COUNT(COUNT(*)))) IS FALSE)))) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c3, rt0.c4 FROM rt0;
SELECT rt0.c1, rt0.c0, rt0.c3, rt0.c4 FROM rt0 WHERE (LIKELIHOOD(DISTINCT (NOT (rt0.c2)), 0.10955990692293427)) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c3, rt0.c4 FROM rt0 WHERE ((NOT (LIKELIHOOD(DISTINCT (NOT (rt0.c2)), 0.10955990692293427)))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c3, rt0.c4 FROM rt0 WHERE (((LIKELIHOOD(DISTINCT (NOT (rt0.c2)), 0.10955990692293427)) ISNULL));
SELECT ALL rt0.c1, rt0.c0, rt0.c3, rt0.c4 FROM rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (v0.c0) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT * FROM v0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT v0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c0, rt0.c1 FROM rt0 NATURAL JOIN v0 GROUP BY v0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c0, rt0.c1;
SELECT v0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c0, rt0.c1 FROM rt0 NATURAL JOIN v0 WHERE (rt0.c1) GROUP BY v0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c0, rt0.c1 UNION SELECT ALL v0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c0, rt0.c1 FROM rt0 NATURAL JOIN v0 WHERE ((NOT (rt0.c1))) GROUP BY v0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c0, rt0.c1 UNION SELECT ALL v0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c0, rt0.c1 FROM rt0 NATURAL JOIN v0 WHERE (((rt0.c1) ISNULL)) GROUP BY v0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c0, rt0.c1;
SELECT v0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c0, rt0.c1 FROM rt0 NATURAL JOIN v0 GROUP BY v0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c0, rt0.c1;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((NULL COLLATE BINARY) ISNULL) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((NULL COLLATE BINARY) ISNULL))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((NULL COLLATE BINARY) ISNULL)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((NULL COLLATE BINARY) ISNULL) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((NULL COLLATE BINARY) ISNULL))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((NULL COLLATE BINARY) ISNULL)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (((('1234514682', rt0.c2, rt0.c1)) NOT BETWEEN ((((rt0.c4)AND(rt0.c0)), (0.630539886335464 IN ()), (('Y㋺') NOT NULL))) AND ((((rt0.c3)&('xbN駆*Zvdn')), (~ (x'dbce')), rt0.c0)))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((('1234514682', rt0.c2, rt0.c1)) NOT BETWEEN ((((rt0.c4)AND(rt0.c0)), (0.630539886335464 IN ()), (('Y㋺') NOT NULL))) AND ((((rt0.c3)&('xbN駆*Zvdn')), (~ (x'dbce')), rt0.c0)))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((('1234514682', rt0.c2, rt0.c1)) NOT BETWEEN ((((rt0.c4)AND(rt0.c0)), (0.630539886335464 IN ()), (('Y㋺') NOT NULL))) AND ((((rt0.c3)&('xbN駆*Zvdn')), (~ (x'dbce')), rt0.c0)))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((~ (v0.c0 COLLATE RTRIM))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((~ (v0.c0 COLLATE RTRIM))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((~ (v0.c0 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c4;
SELECT rt0.c1, rt0.c4 FROM rt0 WHERE (((rt0.c3 COLLATE NOCASE)<(((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c4)))AND(rt0.c4)))AND(rt0.c0))))) GROUP BY rt0.c1, rt0.c4 UNION SELECT ALL rt0.c1, rt0.c4 FROM rt0 WHERE ((NOT (((rt0.c3 COLLATE NOCASE)<(((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c4)))AND(rt0.c4)))AND(rt0.c0))))))) GROUP BY rt0.c1, rt0.c4 UNION SELECT rt0.c1, rt0.c4 FROM rt0 WHERE (((((rt0.c3 COLLATE NOCASE)<(((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c4)))AND(rt0.c4)))AND(rt0.c0))))) ISNULL)) GROUP BY rt0.c1, rt0.c4;
SELECT ALL rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c4;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING SUM(((rt0.c1)>(rt0.c0))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (SUM(((rt0.c1)>(rt0.c0))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((SUM(((rt0.c1)>(rt0.c0)))) ISNULL);
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING SUM(((rt0.c1)>(rt0.c0))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (SUM(((rt0.c1)>(rt0.c0))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((SUM(((rt0.c1)>(rt0.c0)))) ISNULL);
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT * FROM rt0 FULL OUTER JOIN v0 ON (((v0.c0)) NOT BETWEEN (('0+' COLLATE BINARY)) AND ((((rt0.c0)<<(rt0.c0)))));
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON (((v0.c0)) NOT BETWEEN (('0+' COLLATE BINARY)) AND ((((rt0.c0)<<(rt0.c0))))) WHERE (((x'' COLLATE NOCASE) NOT BETWEEN (((rt0.c4)!=(rt0.c4))) AND ((NOT (v0.c0))))) UNION ALL SELECT * FROM rt0 FULL OUTER JOIN v0 ON (((v0.c0)) NOT BETWEEN (('0+' COLLATE BINARY)) AND ((((rt0.c0)<<(rt0.c0))))) WHERE ((NOT (((x'' COLLATE NOCASE) NOT BETWEEN (((rt0.c4)<>(rt0.c4))) AND ((NOT (v0.c0))))))) UNION ALL SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON (((v0.c0)) NOT BETWEEN (('0+' COLLATE BINARY)) AND ((((rt0.c0)<<(rt0.c0))))) WHERE (((((x'' COLLATE NOCASE) NOT BETWEEN (((rt0.c4)<>(rt0.c4))) AND ((NOT (v0.c0))))) ISNULL));
SELECT * FROM rt0 FULL OUTER JOIN v0 ON (((v0.c0)) NOT BETWEEN (('0+' COLLATE BINARY)) AND ((((rt0.c0)<<(rt0.c0)))));
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (v0.c0) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT * FROM v0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL rt0.c3, rt0.c0, v0.c0, rt0.c2, rt0.c1, rt0.c4 FROM rt0, v0 GROUP BY rt0.c3, rt0.c0, v0.c0, rt0.c2, rt0.c1, rt0.c4;
SELECT ALL rt0.c3, rt0.c0, v0.c0, rt0.c2, rt0.c1, rt0.c4 FROM rt0, v0 WHERE (CAST(((NULL)GLOB(rt0.c2)) AS INTEGER)) GROUP BY rt0.c3, rt0.c0, v0.c0, rt0.c2, rt0.c1, rt0.c4 UNION SELECT ALL rt0.c3, rt0.c0, v0.c0, rt0.c2, rt0.c1, rt0.c4 FROM rt0, v0 WHERE ((NOT (CAST(((NULL)GLOB(rt0.c2)) AS INTEGER)))) GROUP BY rt0.c3, rt0.c0, v0.c0, rt0.c2, rt0.c1, rt0.c4 UNION SELECT ALL rt0.c3, rt0.c0, v0.c0, rt0.c2, rt0.c1, rt0.c4 FROM rt0, v0 WHERE (((CAST(((NULL)GLOB(rt0.c2)) AS INTEGER)) ISNULL)) GROUP BY rt0.c3, rt0.c0, v0.c0, rt0.c2, rt0.c1, rt0.c4;
SELECT ALL rt0.c3, rt0.c0, v0.c0, rt0.c2, rt0.c1, rt0.c4 FROM rt0, v0 GROUP BY rt0.c3, rt0.c0, v0.c0, rt0.c2, rt0.c1, rt0.c4;
SELECT ALL rt0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c4;
SELECT rt0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c4 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c4 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c4 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c4;
SELECT rt0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c4 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c4 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c4 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c4;
SELECT ALL rt0.c4, rt0.c0, rt0.c1 FROM rt0;
SELECT rt0.c4, rt0.c0, rt0.c1 FROM rt0 WHERE (CASE WHEN ((rt0.c2) BETWEEN (0.5527272258785041) AND (rt0.c4)) THEN ((0Xffffffffcf4a02dc)IS NOT(rt0.c3)) WHEN 0xffffffff90e4b8e8 THEN (rt0.c0 IN (rt0.c0, rt0.c2)) WHEN rt0.c0 THEN (x'' IN ()) ELSE (rt0.c3 IN (rt0.c1)) END) UNION ALL SELECT rt0.c4, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (CASE WHEN ((rt0.c2) BETWEEN (0.5527272258785041) AND (rt0.c4)) THEN ((0xffffffffcf4a02dc)IS NOT(rt0.c3)) WHEN 0Xffffffff90e4b8e8 THEN (rt0.c0 IN (rt0.c0, rt0.c2)) WHEN rt0.c0 THEN (x'' IN ()) ELSE (rt0.c3 IN (rt0.c1)) END))) UNION ALL SELECT rt0.c4, rt0.c0, rt0.c1 FROM rt0 WHERE (((CASE WHEN ((rt0.c2) BETWEEN (0.5527272258785041) AND (rt0.c4)) THEN ((0xffffffffcf4a02dc)IS NOT(rt0.c3)) WHEN 0xffffffff90e4b8e8 THEN (rt0.c0 IN (rt0.c0, rt0.c2)) WHEN rt0.c0 THEN (x'' IN ()) ELSE (rt0.c3 IN (rt0.c1)) END) ISNULL));
SELECT ALL rt0.c4, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CASE WHEN highlight(rt0.c1, rt0.c4, rt0.c2, rt0.c4) THEN ((((rt0.c0)OR(rt0.c3)))OR(rt0.c2)) END) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CASE WHEN highlight(rt0.c1, rt0.c4, rt0.c2, rt0.c4) THEN ((((rt0.c0)OR(rt0.c3)))OR(rt0.c2)) END))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CASE WHEN highlight(rt0.c1, rt0.c4, rt0.c2, rt0.c4) THEN ((((rt0.c0)OR(rt0.c3)))OR(rt0.c2)) END) ISNULL));
SELECT ALL rt0.c1 FROM rt0, v0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0, v0 WHERE ((((CASE 0Xffffffffea40241d  WHEN rt0.c3 THEN v0.c0 WHEN v0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c3 END))=((NULL)))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0, v0 WHERE ((NOT ((((CASE 0xffffffffea40241d  WHEN rt0.c3 THEN v0.c0 WHEN v0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c3 END))==((NULL)))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0, v0 WHERE ((((((CASE 0xffffffffea40241d  WHEN rt0.c3 THEN v0.c0 WHEN v0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c3 END))==((NULL)))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, v0 GROUP BY rt0.c1;
SELECT ALL rt0.c1, rt0.c0, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c3;
SELECT ALL rt0.c1, rt0.c0, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c3 HAVING ((TOTAL(rt0.c1) COLLATE NOCASE) NOT BETWEEN ((+ (rt0.c4))) AND (rt0.c3)) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c3 HAVING (NOT (((TOTAL(rt0.c1) COLLATE NOCASE) NOT BETWEEN ((+ (rt0.c4))) AND (rt0.c3)))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c3 HAVING ((((TOTAL(rt0.c1) COLLATE NOCASE) NOT BETWEEN ((+ (rt0.c4))) AND (rt0.c3))) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c3;
SELECT ALL rt0.c1, rt0.c0, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c3 HAVING ((TOTAL(rt0.c1) COLLATE NOCASE) NOT BETWEEN ((+ (rt0.c4))) AND (rt0.c3)) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c3 HAVING (NOT (((TOTAL(rt0.c1) COLLATE NOCASE) NOT BETWEEN ((+ (rt0.c4))) AND (rt0.c3)))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c3 HAVING ((((TOTAL(rt0.c1) COLLATE NOCASE) NOT BETWEEN ((+ (rt0.c4))) AND (rt0.c3))) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c3;
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (TRIM(DISTINCT CASE WHEN v0.c0 THEN v0.c0 END, MIN(v0.c0, v0.c0))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (TRIM(DISTINCT CASE WHEN v0.c0 THEN v0.c0 END, MIN(v0.c0, v0.c0))))) UNION ALL SELECT * FROM v0 WHERE (((TRIM(DISTINCT CASE WHEN v0.c0 THEN v0.c0 END, MIN(v0.c0, v0.c0))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((v0.c0 IN (x'', v0.c0))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((NOT ((v0.c0 IN (x'', v0.c0))))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((NOT ((v0.c0 IN (x'', v0.c0))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT rt0.c3, rt0.c1 FROM v0 NATURAL JOIN rt0 GROUP BY rt0.c3, rt0.c1;
SELECT rt0.c3, rt0.c1 FROM v0 NATURAL JOIN rt0 WHERE (ABS(DISTINCT CAST(rt0.c3 AS REAL))) GROUP BY rt0.c3, rt0.c1 UNION SELECT rt0.c3, rt0.c1 FROM v0 NATURAL JOIN rt0 WHERE ((NOT (ABS(DISTINCT CAST(rt0.c3 AS REAL))))) GROUP BY rt0.c3, rt0.c1 UNION SELECT rt0.c3, rt0.c1 FROM v0 NATURAL JOIN rt0 WHERE (((ABS(DISTINCT CAST(rt0.c3 AS REAL))) ISNULL)) GROUP BY rt0.c3, rt0.c1;
SELECT rt0.c3, rt0.c1 FROM v0 NATURAL JOIN rt0 GROUP BY rt0.c3, rt0.c1;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING SUM(CAST(SUM(rt0.c2) AS NUMERIC)) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (SUM(CAST(SUM(rt0.c2) AS NUMERIC)))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((SUM(CAST(SUM(rt0.c2) AS NUMERIC))) ISNULL);
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE ((((~ (v0.c0)))<>(((v0.c0) NOT NULL)))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT ((((~ (v0.c0)))!=(((v0.c0) NOT NULL)))))) UNION ALL SELECT * FROM v0 WHERE ((((((~ (v0.c0)))!=(((v0.c0) NOT NULL)))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT rt0.c3, rt0.c2, rt0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON (((rt0.c2)>(rt0.c4)) IN ((((rt0.c4)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))), LENGTH(v0.c0)));
SELECT DISTINCT rt0.c3, rt0.c2, rt0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON (((rt0.c2)>(rt0.c4)) IN ((((rt0.c4)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))), LENGTH(v0.c0))) WHERE (((0x5a898bff COLLATE NOCASE) ISNULL)) UNION SELECT DISTINCT rt0.c3, rt0.c2, rt0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON (((rt0.c2)>(rt0.c4)) IN ((((rt0.c4)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))), LENGTH(v0.c0))) WHERE ((NOT (((0x5a898bff COLLATE NOCASE) ISNULL)))) UNION SELECT DISTINCT rt0.c3, rt0.c2, rt0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON (((rt0.c2)>(rt0.c4)) IN ((((rt0.c4)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))), LENGTH(v0.c0))) WHERE (((((0x5a898bff COLLATE NOCASE) ISNULL)) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c2, rt0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON (((rt0.c2)>(rt0.c4)) IN ((((rt0.c4)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))), LENGTH(v0.c0)));
SELECT ALL v0.c0, rt0.c4, rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM rt0 NATURAL JOIN v0 GROUP BY v0.c0, rt0.c4, rt0.c0, rt0.c1, rt0.c3, rt0.c2;
SELECT ALL v0.c0, rt0.c4, rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM rt0 NATURAL JOIN v0 WHERE ((~ ((- (rt0.c0))))) GROUP BY v0.c0, rt0.c4, rt0.c0, rt0.c1, rt0.c3, rt0.c2 UNION SELECT ALL v0.c0, rt0.c4, rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM rt0 NATURAL JOIN v0 WHERE ((NOT ((~ ((- (rt0.c0))))))) GROUP BY v0.c0, rt0.c4, rt0.c0, rt0.c1, rt0.c3, rt0.c2 UNION SELECT ALL v0.c0, rt0.c4, rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM rt0 NATURAL JOIN v0 WHERE ((((~ ((- (rt0.c0))))) ISNULL)) GROUP BY v0.c0, rt0.c4, rt0.c0, rt0.c1, rt0.c3, rt0.c2;
SELECT ALL v0.c0, rt0.c4, rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM rt0 NATURAL JOIN v0 GROUP BY v0.c0, rt0.c4, rt0.c0, rt0.c1, rt0.c3, rt0.c2;
SELECT v0.c0, rt0.c2, rt0.c1, rt0.c3 FROM v0, rt0 GROUP BY v0.c0, rt0.c2, rt0.c1, rt0.c3;
SELECT v0.c0, rt0.c2, rt0.c1, rt0.c3 FROM v0, rt0 GROUP BY v0.c0, rt0.c2, rt0.c1, rt0.c3 HAVING AVG(CAST(NULL AS REAL)) UNION ALL SELECT ALL v0.c0, rt0.c2, rt0.c1, rt0.c3 FROM v0, rt0 GROUP BY v0.c0, rt0.c2, rt0.c1, rt0.c3 HAVING (NOT (AVG(CAST(NULL AS REAL)))) UNION ALL SELECT ALL v0.c0, rt0.c2, rt0.c1, rt0.c3 FROM v0, rt0 GROUP BY v0.c0, rt0.c2, rt0.c1, rt0.c3 HAVING ((AVG(CAST(NULL AS REAL))) ISNULL);
SELECT v0.c0, rt0.c2, rt0.c1, rt0.c3 FROM v0, rt0 GROUP BY v0.c0, rt0.c2, rt0.c1, rt0.c3;
SELECT v0.c0, rt0.c2, rt0.c1, rt0.c3 FROM v0, rt0 GROUP BY v0.c0, rt0.c2, rt0.c1, rt0.c3 HAVING AVG(CAST(NULL AS REAL)) UNION ALL SELECT ALL v0.c0, rt0.c2, rt0.c1, rt0.c3 FROM v0, rt0 GROUP BY v0.c0, rt0.c2, rt0.c1, rt0.c3 HAVING (NOT (AVG(CAST(NULL AS REAL)))) UNION ALL SELECT ALL v0.c0, rt0.c2, rt0.c1, rt0.c3 FROM v0, rt0 GROUP BY v0.c0, rt0.c2, rt0.c1, rt0.c3 HAVING ((AVG(CAST(NULL AS REAL))) ISNULL);
SELECT v0.c0, rt0.c2, rt0.c1, rt0.c3 FROM v0, rt0 GROUP BY v0.c0, rt0.c2, rt0.c1, rt0.c3;
SELECT rt0.c4, rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT rt0.c4, rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM rt0 NOT INDEXED WHERE ('-643449911') UNION ALL SELECT rt0.c4, rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ('-643449911'))) UNION ALL SELECT rt0.c4, rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((('-643449911') ISNULL));
SELECT rt0.c4, rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (JULIANDAY(((v0.c0) NOT BETWEEN (v0.c0) AND (x'')), (((rt0.c2))>=((rt0.c0))), CAST(rt0.c0 AS BLOB), '', ((rt0.c0)AND(rt0.c0)), rt0.c4, ((rt0.c1) IS TRUE))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (JULIANDAY(((v0.c0) NOT BETWEEN (v0.c0) AND (x'')), (((rt0.c2))>=((rt0.c0))), CAST(rt0.c0 AS BLOB), '', ((rt0.c0)AND(rt0.c0)), rt0.c4, ((rt0.c1) IS TRUE))))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((JULIANDAY(((v0.c0) NOT BETWEEN (v0.c0) AND (x'')), (((rt0.c2))>=((rt0.c0))), CAST(rt0.c0 AS BLOB), '', ((rt0.c0)AND(rt0.c0)), rt0.c4, ((rt0.c1) IS TRUE))) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((NOT (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((NOT (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((NOT (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c0, rt0.c4, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c4, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c4, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c4, rt0.c1, rt0.c2 HAVING MIN(((TOTAL(rt0.c4)) BETWEEN (COUNT(*)) AND (rt0.c0))) UNION ALL SELECT ALL rt0.c0, rt0.c4, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c4, rt0.c1, rt0.c2 HAVING (NOT (MIN(((TOTAL(rt0.c4)) BETWEEN (COUNT(*)) AND (rt0.c0))))) UNION ALL SELECT rt0.c0, rt0.c4, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c4, rt0.c1, rt0.c2 HAVING ((MIN(((TOTAL(rt0.c4)) BETWEEN (COUNT(*)) AND (rt0.c0)))) ISNULL);
SELECT ALL v0.c0 FROM v0, rt0;
SELECT ALL v0.c0 FROM v0, rt0 WHERE ((((~ (v0.c0))) NOTNULL)) UNION ALL SELECT v0.c0 FROM v0, rt0 WHERE ((NOT ((((~ (v0.c0))) NOTNULL)))) UNION ALL SELECT v0.c0 FROM v0, rt0 WHERE ((((((~ (v0.c0))) NOTNULL)) ISNULL));
SELECT ALL v0.c0 FROM v0, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((+ (rt0.c2)) IN ())) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((+ (rt0.c2)) IN ())))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((+ (rt0.c2)) IN ())) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((((v0.c0)>=(NULL)))GLOB((((v0.c0))>((v0.c0)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((v0.c0)>=(NULL)))GLOB((((v0.c0))>((v0.c0)))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((((v0.c0)>=(NULL)))GLOB((((v0.c0))>((v0.c0)))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c0, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1, v0.c0;
SELECT rt0.c0, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1, v0.c0 HAVING ((MIN(MAX(SUM(rt0.c2)))) ISNULL) UNION ALL SELECT ALL rt0.c0, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1, v0.c0 HAVING (NOT (((MIN(MAX(SUM(rt0.c2)))) ISNULL))) UNION ALL SELECT ALL rt0.c0, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1, v0.c0 HAVING ((((MIN(MAX(SUM(rt0.c2)))) ISNULL)) ISNULL);
SELECT ALL v0.c0, rt0.c4, rt0.c1 FROM v0, rt0;
SELECT v0.c0, rt0.c4, rt0.c1 FROM v0, rt0 WHERE ((NOT (CASE WHEN rt0.c2 THEN x'' WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c2 END))) UNION ALL SELECT v0.c0, rt0.c4, rt0.c1 FROM v0, rt0 WHERE ((NOT ((NOT (CASE WHEN rt0.c2 THEN x'' WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c2 END))))) UNION ALL SELECT v0.c0, rt0.c4, rt0.c1 FROM v0, rt0 WHERE ((((NOT (CASE WHEN rt0.c2 THEN x'' WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c2 END))) ISNULL));
SELECT ALL v0.c0, rt0.c4, rt0.c1 FROM v0, rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (CAST(((v0.c0)<(v0.c0)) AS REAL)) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (CAST(((v0.c0)<(v0.c0)) AS REAL)))) UNION SELECT DISTINCT * FROM v0 WHERE (((CAST(((v0.c0)<(v0.c0)) AS REAL)) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM rt0 WHERE ((((rt0.c0, ((((((((x'e7811464')OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c4)), ((rt0.c2)IS NOT(rt0.c1))))>((((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)), ((rt0.c3)<>(rt0.c2)), COALESCE(rt0.c1, rt0.c2))))) GROUP BY rt0.c1, rt0.c3, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c0, ((((((((x'e7811464')OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c4)), ((rt0.c2)IS NOT(rt0.c1))))>((((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)), ((rt0.c3)!=(rt0.c2)), COALESCE(rt0.c1, rt0.c2))))))) GROUP BY rt0.c1, rt0.c3, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM rt0 WHERE ((((((rt0.c0, ((((((((x'e7811464')OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c4)), ((rt0.c2)IS NOT(rt0.c1))))>((((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)), ((rt0.c3)<>(rt0.c2)), COALESCE(rt0.c1, rt0.c2))))) ISNULL)) GROUP BY rt0.c1, rt0.c3, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, rt0.c4;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, rt0.c4 HAVING rt0.c1 UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, rt0.c4 HAVING (NOT (rt0.c1)) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, rt0.c4 HAVING ((rt0.c1) ISNULL);
SELECT rt0.c2, rt0.c0, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, rt0.c4;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, rt0.c4 HAVING rt0.c1 UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, rt0.c4 HAVING (NOT (rt0.c1)) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, rt0.c4 HAVING ((rt0.c1) ISNULL);
SELECT rt0.c2, rt0.c0, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, rt0.c4;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CAST(('714668961' IN ()) AS REAL)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CAST(('714668961' IN ()) AS REAL)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((CAST(('714668961' IN ()) AS REAL)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (v0.c0) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT * FROM v0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((((v0.c0 IN (v0.c0)), ((v0.c0) BETWEEN (v0.c0) AND (1725745867)), v0.c0 COLLATE RTRIM))>((((v0.c0)IS NOT(v0.c0)), v0.c0, CASE WHEN v0.c0 THEN v0.c0 END)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((v0.c0 IN (v0.c0)), ((v0.c0) BETWEEN (v0.c0) AND (1725745867)), v0.c0 COLLATE RTRIM))>((((v0.c0)IS NOT(v0.c0)), v0.c0, CASE WHEN v0.c0 THEN v0.c0 END)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((((v0.c0 IN (v0.c0)), ((v0.c0) BETWEEN (v0.c0) AND (1725745867)), v0.c0 COLLATE RTRIM))>((((v0.c0)IS NOT(v0.c0)), v0.c0, CASE WHEN v0.c0 THEN v0.c0 END)))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c2, rt0.c3, rt0.c1, rt0.c0, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0, v0.c0;
SELECT rt0.c2, rt0.c3, rt0.c1, rt0.c0, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0, v0.c0 HAVING ((AVG(MIN(TOTAL('31472492')))) IS TRUE) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c0, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0, v0.c0 HAVING (NOT (((AVG(MIN(TOTAL('31472492')))) IS TRUE))) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c1, rt0.c0, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0, v0.c0 HAVING ((((AVG(MIN(TOTAL('31472492')))) IS TRUE)) ISNULL);
SELECT * FROM v0;
SELECT * FROM v0 WHERE (CAST((((v0.c0, 0Xffffffffd5fcc396, v0.c0))!=((v0.c0, v0.c0, v0.c0))) AS TEXT)) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (CAST((((v0.c0, 0Xffffffffd5fcc396, v0.c0))<>((v0.c0, v0.c0, v0.c0))) AS TEXT)))) UNION ALL SELECT * FROM v0 NOT INDEXED WHERE (((CAST((((v0.c0, 0Xffffffffd5fcc396, v0.c0))<>((v0.c0, v0.c0, v0.c0))) AS TEXT)) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT rt0.c3, rt0.c0, rt0.c4, rt0.c1, rt0.c2 FROM v0, rt0;
SELECT DISTINCT rt0.c3, rt0.c0, rt0.c4, rt0.c1, rt0.c2 FROM v0, rt0 WHERE (CASE ((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c4))  WHEN rt0.c3 THEN (+ (rt0.c4)) END) UNION SELECT DISTINCT rt0.c3, rt0.c0, rt0.c4, rt0.c1, rt0.c2 FROM v0, rt0 WHERE ((NOT (CASE ((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c4))  WHEN rt0.c3 THEN (+ (rt0.c4)) END))) UNION SELECT DISTINCT rt0.c3, rt0.c0, rt0.c4, rt0.c1, rt0.c2 FROM v0, rt0 WHERE (((CASE ((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c4))  WHEN rt0.c3 THEN (+ (rt0.c4)) END) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c0, rt0.c4, rt0.c1, rt0.c2 FROM v0, rt0;
SELECT rt0.c3, rt0.c2 FROM rt0, v0 NOT INDEXED GROUP BY rt0.c3, rt0.c2;
SELECT rt0.c3, rt0.c2 FROM rt0, v0 WHERE (CASE (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((v0.c0)))  WHEN rt0.c4 THEN (((v0.c0)) BETWEEN ((rt0.c4)) AND ((rt0.c2))) ELSE LIKELY(DISTINCT rt0.c3) END) GROUP BY rt0.c3, rt0.c2 UNION SELECT rt0.c3, rt0.c2 FROM rt0, v0 WHERE ((NOT (CASE (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((v0.c0)))  WHEN rt0.c4 THEN (((v0.c0)) BETWEEN ((rt0.c4)) AND ((rt0.c2))) ELSE LIKELY(DISTINCT rt0.c3) END))) GROUP BY rt0.c3, rt0.c2 UNION SELECT ALL rt0.c3, rt0.c2 FROM rt0, v0 WHERE (((CASE (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((v0.c0)))  WHEN rt0.c4 THEN (((v0.c0)) BETWEEN ((rt0.c4)) AND ((rt0.c2))) ELSE LIKELY(DISTINCT rt0.c3) END) ISNULL)) GROUP BY rt0.c3, rt0.c2;
SELECT rt0.c3, rt0.c2 FROM rt0, v0 NOT INDEXED GROUP BY rt0.c3, rt0.c2;
SELECT ALL rt0.c3 FROM rt0, v0 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0, v0 GROUP BY rt0.c3 HAVING COUNT(*) UNION ALL SELECT rt0.c3 FROM rt0, v0 GROUP BY rt0.c3 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c3 FROM rt0, v0 GROUP BY rt0.c3 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c3 FROM rt0, v0 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0, v0 GROUP BY rt0.c3 HAVING COUNT(*) UNION ALL SELECT rt0.c3 FROM rt0, v0 GROUP BY rt0.c3 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c3 FROM rt0, v0 GROUP BY rt0.c3 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c3 FROM rt0, v0 GROUP BY rt0.c3;
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (((INSTR(v0.c0, v0.c0))|(((v0.c0) NOT NULL)))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((INSTR(v0.c0, v0.c0))|(((v0.c0) NOT NULL)))))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((((INSTR(v0.c0, v0.c0))|(((v0.c0) NOT NULL)))) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (CASE WHEN ((v0.c0)*('-304853113')) THEN CAST('1505094559' AS TEXT) WHEN HEX(v0.c0) THEN v0.c0 COLLATE BINARY WHEN ((v0.c0)>(v0.c0)) THEN HEX(DISTINCT v0.c0) END) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (CASE WHEN ((v0.c0)*('-304853113')) THEN CAST('1505094559' AS TEXT) WHEN HEX(v0.c0) THEN v0.c0 COLLATE BINARY WHEN ((v0.c0)>(v0.c0)) THEN HEX(DISTINCT v0.c0) END))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((CASE WHEN ((v0.c0)*('-304853113')) THEN CAST('1505094559' AS TEXT) WHEN HEX(v0.c0) THEN v0.c0 COLLATE BINARY WHEN ((v0.c0)>(v0.c0)) THEN HEX(DISTINCT v0.c0) END) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL rt0.c0, rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2, v0.c0;
SELECT rt0.c0, rt0.c2, v0.c0 FROM rt0, v0 WHERE (CAST(((v0.c0)|(rt0.c0)) AS BLOB)) GROUP BY rt0.c0, rt0.c2, v0.c0 UNION SELECT ALL rt0.c0, rt0.c2, v0.c0 FROM rt0, v0 WHERE ((NOT (CAST(((v0.c0)|(rt0.c0)) AS BLOB)))) GROUP BY rt0.c0, rt0.c2, v0.c0 UNION SELECT ALL rt0.c0, rt0.c2, v0.c0 FROM rt0, v0 WHERE (((CAST(((v0.c0)|(rt0.c0)) AS BLOB)) ISNULL)) GROUP BY rt0.c0, rt0.c2, v0.c0;
SELECT ALL rt0.c0, rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2, v0.c0;
SELECT rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c0;
SELECT ALL rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c0 HAVING NULLIF(((rt0.c1) IS FALSE), SUM(rt0.c4)) UNION ALL SELECT ALL rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c0 HAVING (NOT (NULLIF(((rt0.c1) IS FALSE), SUM(rt0.c4)))) UNION ALL SELECT ALL rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c0 HAVING ((NULLIF(((rt0.c1) IS FALSE), SUM(rt0.c4))) ISNULL);
SELECT rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c0;
SELECT ALL rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c0 HAVING NULLIF(((rt0.c1) IS FALSE), SUM(rt0.c4)) UNION ALL SELECT ALL rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c0 HAVING (NOT (NULLIF(((rt0.c1) IS FALSE), SUM(rt0.c4)))) UNION ALL SELECT ALL rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c0 HAVING ((NULLIF(((rt0.c1) IS FALSE), SUM(rt0.c4))) ISNULL);
SELECT rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c0;
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE ((- (v0.c0)) COLLATE RTRIM) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT ((- (v0.c0)) COLLATE RTRIM))) UNION ALL SELECT ALL * FROM v0 WHERE ((((- (v0.c0)) COLLATE RTRIM) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (CASE WHEN TYPEOF(rt0.c4) THEN highlight(rt0.c1, rt0.c4, v0.c0, rt0.c2) WHEN ((rt0.c3)>=(rt0.c3)) THEN ((rt0.c3) NOTNULL) WHEN ((rt0.c2) IS FALSE) THEN ((v0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) END) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (CASE WHEN TYPEOF(rt0.c4) THEN highlight(rt0.c1, rt0.c4, v0.c0, rt0.c2) WHEN ((rt0.c3)>=(rt0.c3)) THEN ((rt0.c3) NOTNULL) WHEN ((rt0.c2) IS FALSE) THEN ((v0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) END))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((CASE WHEN TYPEOF(rt0.c4) THEN highlight(rt0.c1, rt0.c4, v0.c0, rt0.c2) WHEN ((rt0.c3)>=(rt0.c3)) THEN ((rt0.c3) NOTNULL) WHEN ((rt0.c2) IS FALSE) THEN ((v0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) END) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM v0, rt0 WHERE (((((((((((rt0.c2) ISNULL))OR(TOTAL_CHANGES())))OR(((rt0.c4)/(rt0.c1)))))OR((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))))))AND(rt0.c4))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM v0, rt0 WHERE ((NOT (((((((((((rt0.c2) ISNULL))OR(TOTAL_CHANGES())))OR(((rt0.c4)/(rt0.c1)))))OR((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))))))AND(rt0.c4))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM v0, rt0 WHERE (((((((((((((rt0.c2) ISNULL))OR(TOTAL_CHANGES())))OR(((rt0.c4)/(rt0.c1)))))OR((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))))))AND(rt0.c4))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c2, v0.c0, rt0.c0, rt0.c3 FROM rt0, v0 GROUP BY rt0.c2, v0.c0, rt0.c0, rt0.c3;
SELECT ALL rt0.c2, v0.c0, rt0.c0, rt0.c3 FROM rt0, v0 GROUP BY rt0.c2, v0.c0, rt0.c0, rt0.c3 HAVING SUM(CAST(AVG(rt0.c4) AS INTEGER)) UNION ALL SELECT rt0.c2, v0.c0, rt0.c0, rt0.c3 FROM rt0, v0 GROUP BY rt0.c2, v0.c0, rt0.c0, rt0.c3 HAVING (NOT (SUM(CAST(AVG(rt0.c4) AS INTEGER)))) UNION ALL SELECT ALL rt0.c2, v0.c0, rt0.c0, rt0.c3 FROM rt0, v0 GROUP BY rt0.c2, v0.c0, rt0.c0, rt0.c3 HAVING ((SUM(CAST(AVG(rt0.c4) AS INTEGER))) ISNULL);
SELECT ALL MAX(((((rt0.c0)LIKE(rt0.c2))) IS TRUE)) FROM rt0;
SELECT ALL rt0.c0, rt0.c4, rt0.c3 FROM rt0;
SELECT rt0.c0, rt0.c4, rt0.c3 FROM rt0 WHERE ((- ((rt0.c0 IN ())))) UNION ALL SELECT rt0.c0, rt0.c4, rt0.c3 FROM rt0 WHERE ((NOT ((- ((rt0.c0 IN ())))))) UNION ALL SELECT rt0.c0, rt0.c4, rt0.c3 FROM rt0 WHERE ((((- ((rt0.c0 IN ())))) ISNULL));
SELECT ALL rt0.c0, rt0.c4, rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c3, rt0.c0, rt0.c2 FROM v0 LEFT OUTER JOIN rt0 ON ((((((((((rt0.c2)<(rt0.c2)))OR((0.7673949605124344 IN ()))))OR(((rt0.c3)>>(rt0.c0)))))AND((rt0.c2 IN ()))))AND((((rt0.c0))<((rt0.c4)))));
SELECT DISTINCT rt0.c3, rt0.c0, rt0.c2 FROM v0 LEFT OUTER JOIN rt0 ON ((((((((((rt0.c2)<(rt0.c2)))OR((0.7673949605124344 IN ()))))OR(((rt0.c3)>>(rt0.c0)))))AND((rt0.c2 IN ()))))AND((((rt0.c0))<((rt0.c4))))) WHERE (rt0.c0) UNION SELECT DISTINCT rt0.c3, rt0.c0, rt0.c2 FROM v0 LEFT OUTER JOIN rt0 ON ((((((((((rt0.c2)<(rt0.c2)))OR((0.7673949605124344 IN ()))))OR(((rt0.c3)>>(rt0.c0)))))AND((rt0.c2 IN ()))))AND((((rt0.c0))<((rt0.c4))))) WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT rt0.c3, rt0.c0, rt0.c2 FROM v0 LEFT OUTER JOIN rt0 ON ((((((((((rt0.c2)<(rt0.c2)))OR((0.7673949605124344 IN ()))))OR(((rt0.c3)>>(rt0.c0)))))AND((rt0.c2 IN ()))))AND((((rt0.c0))<((rt0.c4))))) WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c0, rt0.c2 FROM v0 LEFT OUTER JOIN rt0 ON ((((((((((rt0.c2)<(rt0.c2)))OR((0.7673949605124344 IN ()))))OR(((rt0.c3)>>(rt0.c0)))))AND((rt0.c2 IN ()))))AND((((rt0.c0))<((rt0.c4)))));
SELECT ALL v0.c0, rt0.c1, rt0.c2 FROM v0, rt0 GROUP BY v0.c0, rt0.c1, rt0.c2;
SELECT ALL v0.c0, rt0.c1, rt0.c2 FROM v0, rt0 WHERE ((NOT ((rt0.c4 IN ())))) GROUP BY v0.c0, rt0.c1, rt0.c2 UNION SELECT ALL v0.c0, rt0.c1, rt0.c2 FROM v0, rt0 WHERE ((NOT ((NOT ((rt0.c4 IN ())))))) GROUP BY v0.c0, rt0.c1, rt0.c2 UNION SELECT v0.c0, rt0.c1, rt0.c2 FROM v0, rt0 WHERE ((((NOT ((rt0.c4 IN ())))) ISNULL)) GROUP BY v0.c0, rt0.c1, rt0.c2;
SELECT ALL v0.c0, rt0.c1, rt0.c2 FROM v0, rt0 GROUP BY v0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c4, rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c3, rt0.c0;
SELECT rt0.c4, rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c3, rt0.c0 HAVING (~ (MIN(rt0.c1))) UNION ALL SELECT ALL rt0.c4, rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c3, rt0.c0 HAVING (NOT ((~ (MIN(rt0.c1))))) UNION ALL SELECT ALL rt0.c4, rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c3, rt0.c0 HAVING (((~ (MIN(rt0.c1)))) ISNULL);
SELECT ALL rt0.c4, rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c3, rt0.c0;
SELECT rt0.c4, rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c3, rt0.c0 HAVING (~ (MIN(rt0.c1))) UNION ALL SELECT ALL rt0.c4, rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c3, rt0.c0 HAVING (NOT ((~ (MIN(rt0.c1))))) UNION ALL SELECT ALL rt0.c4, rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c3, rt0.c0 HAVING (((~ (MIN(rt0.c1)))) ISNULL);
SELECT ALL rt0.c4, rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c3, rt0.c0;
SELECT * FROM v0;
SELECT * FROM v0 WHERE (CASE WHEN v0.c0 THEN ((v0.c0)&(NULL)) END) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (CASE WHEN v0.c0 THEN ((v0.c0)&(NULL)) END))) UNION ALL SELECT ALL * FROM v0 WHERE (((CASE WHEN v0.c0 THEN ((v0.c0)&(NULL)) END) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE ((((((((v0.c0)AND(rt0.c2)))AND(v0.c0))))>((((rt0.c1)|(rt0.c2)))))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT ((((((((v0.c0)AND(rt0.c2)))AND(v0.c0))))>((((rt0.c1)|(rt0.c2)))))))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((((((((((v0.c0)AND(rt0.c2)))AND(v0.c0))))>((((rt0.c1)|(rt0.c2)))))) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (LIKE(((v0.c0)IS(v0.c0)), (- (v0.c0)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (LIKE(((v0.c0)IS(v0.c0)), (- (v0.c0)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((LIKE(((v0.c0)IS(v0.c0)), (- (v0.c0)))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c4, rt0.c1, rt0.c3, rt0.c0, rt0.c2, v0.c0 FROM rt0 RIGHT OUTER JOIN v0 ON ((0.5325182811517225) BETWEEN (((rt0.c2) ISNULL)) AND (((((rt0.c3)AND(rt0.c4)))AND(rt0.c1)))) GROUP BY rt0.c4, rt0.c1, rt0.c3, rt0.c0, rt0.c2, v0.c0;
SELECT ALL rt0.c4, rt0.c1, rt0.c3, rt0.c0, rt0.c2, v0.c0 FROM rt0 RIGHT OUTER JOIN v0 ON ((0.5325182811517225) BETWEEN (((rt0.c2) ISNULL)) AND (((((rt0.c3)AND(rt0.c4)))AND(rt0.c1)))) GROUP BY rt0.c4, rt0.c1, rt0.c3, rt0.c0, rt0.c2, v0.c0 HAVING AVG(COUNT(*)) UNION ALL SELECT rt0.c4, rt0.c1, rt0.c3, rt0.c0, rt0.c2, v0.c0 FROM rt0 RIGHT OUTER JOIN v0 ON ((0.5325182811517225) BETWEEN (((rt0.c2) ISNULL)) AND (((((rt0.c3)AND(rt0.c4)))AND(rt0.c1)))) GROUP BY rt0.c4, rt0.c1, rt0.c3, rt0.c0, rt0.c2, v0.c0 HAVING (NOT (AVG(COUNT(*)))) UNION ALL SELECT ALL rt0.c4, rt0.c1, rt0.c3, rt0.c0, rt0.c2, v0.c0 FROM rt0 RIGHT OUTER JOIN v0 ON ((0.5325182811517225) BETWEEN (((rt0.c2) ISNULL)) AND (((((rt0.c3)AND(rt0.c4)))AND(rt0.c1)))) GROUP BY rt0.c4, rt0.c1, rt0.c3, rt0.c0, rt0.c2, v0.c0 HAVING ((AVG(COUNT(*))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE ((((rt0.c2 IN (rt0.c4, rt0.c3)))&(CAST(rt0.c3 AS INTEGER)))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((((rt0.c2 IN (rt0.c4, rt0.c3)))&(CAST(rt0.c3 AS INTEGER)))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((((rt0.c2 IN (rt0.c4, rt0.c3)))&(CAST(rt0.c3 AS INTEGER)))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT v0.c0, rt0.c2, rt0.c3, rt0.c0, rt0.c4, rt0.c1 FROM v0, rt0;
SELECT DISTINCT v0.c0, rt0.c2, rt0.c3, rt0.c0, rt0.c4, rt0.c1 FROM v0, rt0 WHERE ((((rt0.c4) NOT BETWEEN ('0.7035769215535527') AND (rt0.c3)) IN ())) UNION SELECT DISTINCT v0.c0, rt0.c2, rt0.c3, rt0.c0, rt0.c4, rt0.c1 FROM v0, rt0 WHERE ((NOT ((((rt0.c4) NOT BETWEEN ('0.7035769215535527') AND (rt0.c3)) IN ())))) UNION SELECT DISTINCT v0.c0, rt0.c2, rt0.c3, rt0.c0, rt0.c4, rt0.c1 FROM v0, rt0 WHERE ((((((rt0.c4) NOT BETWEEN ('0.7035769215535527') AND (rt0.c3)) IN ())) ISNULL));
SELECT DISTINCT v0.c0, rt0.c2, rt0.c3, rt0.c0, rt0.c4, rt0.c1 FROM v0, rt0;
SELECT ALL rt0.c4, rt0.c1, rt0.c2, rt0.c3, rt0.c0, v0.c0 FROM rt0, v0 GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c3, rt0.c0, v0.c0;
SELECT ALL rt0.c4, rt0.c1, rt0.c2, rt0.c3, rt0.c0, v0.c0 FROM rt0, v0 WHERE (CAST(ROUND(rt0.c1, 0x4cbf3991) AS INTEGER)) GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c3, rt0.c0, v0.c0 UNION SELECT ALL rt0.c4, rt0.c1, rt0.c2, rt0.c3, rt0.c0, v0.c0 FROM rt0, v0 WHERE ((NOT (CAST(ROUND(rt0.c1, 0x4cbf3991) AS INTEGER)))) GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c3, rt0.c0, v0.c0 UNION SELECT rt0.c4, rt0.c1, rt0.c2, rt0.c3, rt0.c0, v0.c0 FROM rt0, v0 WHERE (((CAST(ROUND(rt0.c1, 0x4cbf3991) AS INTEGER)) ISNULL)) GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c3, rt0.c0, v0.c0;
SELECT ALL rt0.c4, rt0.c1, rt0.c2, rt0.c3, rt0.c0, v0.c0 FROM rt0, v0 GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c3, rt0.c0, v0.c0;
SELECT ALL rt0.c3 FROM rt0 CROSS JOIN v0 ON rt0.c0 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0 CROSS JOIN v0 ON rt0.c0 GROUP BY rt0.c3 HAVING (((TOTAL(rt0.c3))<=(TOTAL(rt0.c0))) IN ()) UNION ALL SELECT rt0.c3 FROM rt0 CROSS JOIN v0 ON rt0.c0 GROUP BY rt0.c3 HAVING (NOT ((((TOTAL(rt0.c3))<=(TOTAL(rt0.c0))) IN ()))) UNION ALL SELECT rt0.c3 FROM rt0 CROSS JOIN v0 ON rt0.c0 GROUP BY rt0.c3 HAVING (((((TOTAL(rt0.c3))<=(TOTAL(rt0.c0))) IN ())) ISNULL);
SELECT ALL rt0.c3 FROM rt0 CROSS JOIN v0 ON rt0.c0 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0 CROSS JOIN v0 ON rt0.c0 GROUP BY rt0.c3 HAVING (((TOTAL(rt0.c3))<=(TOTAL(rt0.c0))) IN ()) UNION ALL SELECT rt0.c3 FROM rt0 CROSS JOIN v0 ON rt0.c0 GROUP BY rt0.c3 HAVING (NOT ((((TOTAL(rt0.c3))<=(TOTAL(rt0.c0))) IN ()))) UNION ALL SELECT rt0.c3 FROM rt0 CROSS JOIN v0 ON rt0.c0 GROUP BY rt0.c3 HAVING (((((TOTAL(rt0.c3))<=(TOTAL(rt0.c0))) IN ())) ISNULL);
SELECT ALL rt0.c3 FROM rt0 CROSS JOIN v0 ON rt0.c0 GROUP BY rt0.c3;
SELECT ALL rt0.c1, rt0.c3, rt0.c2, rt0.c4 FROM rt0, v0;
SELECT rt0.c1, rt0.c3, rt0.c2, rt0.c4 FROM rt0, v0 WHERE ((((rt0.c1 IN ()))IS NOT(rt0.c1 COLLATE RTRIM))) UNION ALL SELECT rt0.c1, rt0.c3, rt0.c2, rt0.c4 FROM rt0, v0 WHERE ((NOT ((((rt0.c1 IN ()))IS NOT(rt0.c1 COLLATE RTRIM))))) UNION ALL SELECT ALL rt0.c1, rt0.c3, rt0.c2, rt0.c4 FROM rt0, v0 WHERE ((((((rt0.c1 IN ()))IS NOT(rt0.c1 COLLATE RTRIM))) ISNULL));
SELECT ALL rt0.c1, rt0.c3, rt0.c2, rt0.c4 FROM rt0, v0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c1)LIKE(rt0.c1))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c1)LIKE(rt0.c1))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c1)LIKE(rt0.c1))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c4, rt0.c2, rt0.c3 FROM v0 FULL OUTER JOIN rt0 ON '' GROUP BY rt0.c4, rt0.c2, rt0.c3;
SELECT rt0.c4, rt0.c2, rt0.c3 FROM v0 FULL OUTER JOIN rt0 ON '' WHERE ((((NOT (rt0.c4))) BETWEEN (((rt0.c4) NOT BETWEEN (v0.c0) AND (rt0.c2))) AND (MIN(rt0.c4, 0.1421543741879585)))) GROUP BY rt0.c4, rt0.c2, rt0.c3 UNION SELECT rt0.c4, rt0.c2, rt0.c3 FROM v0 FULL OUTER JOIN rt0 ON '' WHERE ((NOT ((((NOT (rt0.c4))) BETWEEN (((rt0.c4) NOT BETWEEN (v0.c0) AND (rt0.c2))) AND (MIN(rt0.c4, 0.1421543741879585)))))) GROUP BY rt0.c4, rt0.c2, rt0.c3 UNION SELECT ALL rt0.c4, rt0.c2, rt0.c3 FROM v0 FULL OUTER JOIN rt0 ON '' WHERE ((((((NOT (rt0.c4))) BETWEEN (((rt0.c4) NOT BETWEEN (v0.c0) AND (rt0.c2))) AND (MIN(rt0.c4, 0.1421543741879585)))) ISNULL)) GROUP BY rt0.c4, rt0.c2, rt0.c3;
SELECT rt0.c4, rt0.c2, rt0.c3 FROM v0 FULL OUTER JOIN rt0 ON '' GROUP BY rt0.c4, rt0.c2, rt0.c3;
SELECT ALL rt0.c4, rt0.c2, v0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c4, rt0.c2, v0.c0, rt0.c1;
SELECT ALL rt0.c4, rt0.c2, v0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c4, rt0.c2, v0.c0, rt0.c1 HAVING GROUP_CONCAT(((rt0.c4) IS TRUE)) UNION ALL SELECT rt0.c4, rt0.c2, v0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c4, rt0.c2, v0.c0, rt0.c1 HAVING (NOT (GROUP_CONCAT(((rt0.c4) IS TRUE)))) UNION ALL SELECT ALL rt0.c4, rt0.c2, v0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c4, rt0.c2, v0.c0, rt0.c1 HAVING ((GROUP_CONCAT(((rt0.c4) IS TRUE))) ISNULL);
SELECT ALL rt0.c4, rt0.c2, v0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c4, rt0.c2, v0.c0, rt0.c1;
SELECT ALL rt0.c4, rt0.c2, v0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c4, rt0.c2, v0.c0, rt0.c1 HAVING GROUP_CONCAT(((rt0.c4) IS TRUE)) UNION ALL SELECT rt0.c4, rt0.c2, v0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c4, rt0.c2, v0.c0, rt0.c1 HAVING (NOT (GROUP_CONCAT(((rt0.c4) IS TRUE)))) UNION ALL SELECT ALL rt0.c4, rt0.c2, v0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c4, rt0.c2, v0.c0, rt0.c1 HAVING ((GROUP_CONCAT(((rt0.c4) IS TRUE))) ISNULL);
SELECT ALL rt0.c4, rt0.c2, v0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c4, rt0.c2, v0.c0, rt0.c1;
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE (((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))IS NOT(DATE(v0.c0, v0.c0, x'c2df')))) UNION ALL SELECT * FROM v0 WHERE ((NOT (((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))IS NOT(DATE(v0.c0, v0.c0, x'c2df')))))) UNION ALL SELECT ALL * FROM v0 WHERE (((((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))IS NOT(DATE(v0.c0, v0.c0, x'c2df')))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (((((CASE 0.1618102672970293  WHEN v0.c0 THEN v0.c0 ELSE '1229052375' END)AND(rt0.c1)))AND((rt0.c3 IN ())))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (((((CASE 0.1618102672970293  WHEN v0.c0 THEN v0.c0 ELSE '1229052375' END)AND(rt0.c1)))AND((rt0.c3 IN ())))))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((((((CASE 0.1618102672970293  WHEN v0.c0 THEN v0.c0 ELSE '1229052375' END)AND(rt0.c1)))AND((rt0.c3 IN ())))) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT ALL rt0.c0 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 NATURAL JOIN v0 WHERE (rt0.c1 COLLATE BINARY) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 NATURAL JOIN v0 WHERE ((NOT (rt0.c1 COLLATE BINARY))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 NATURAL JOIN v0 WHERE (((rt0.c1 COLLATE BINARY) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c0;
SELECT ALL rt0.c3, rt0.c4, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c0, rt0.c1;
SELECT rt0.c3, rt0.c4, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c0, rt0.c1 HAVING ((SUM(TOTAL(MIN(rt0.c3))))GLOB(((GROUP_CONCAT(rt0.c4))IS(NULL)))) UNION ALL SELECT rt0.c3, rt0.c4, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c0, rt0.c1 HAVING (NOT (((SUM(TOTAL(MIN(rt0.c3))))GLOB(((GROUP_CONCAT(rt0.c4))IS(NULL)))))) UNION ALL SELECT ALL rt0.c3, rt0.c4, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c0, rt0.c1 HAVING ((((SUM(TOTAL(MIN(rt0.c3))))GLOB(((GROUP_CONCAT(rt0.c4))IS(NULL))))) ISNULL);
SELECT * FROM v0, rt0;
SELECT ALL * FROM v0, rt0 WHERE ((((((rt0.c4, '-1669516502', rt0.c3)) BETWEEN ((rt0.c0, rt0.c3, rt0.c0)) AND ((rt0.c2, v0.c0, rt0.c4)))) BETWEEN (((((((((rt0.c4)AND(rt0.c1)))OR(rt0.c4)))AND(rt0.c0)))AND(v0.c0))) AND (x''))) UNION ALL SELECT * FROM v0, rt0 WHERE ((NOT ((((((rt0.c4, '-1669516502', rt0.c3)) BETWEEN ((rt0.c0, rt0.c3, rt0.c0)) AND ((rt0.c2, v0.c0, rt0.c4)))) BETWEEN (((((((((rt0.c4)AND(rt0.c1)))OR(rt0.c4)))AND(rt0.c0)))AND(v0.c0))) AND (x''))))) UNION ALL SELECT * FROM v0, rt0 WHERE ((((((((rt0.c4, '-1669516502', rt0.c3)) BETWEEN ((rt0.c0, rt0.c3, rt0.c0)) AND ((rt0.c2, v0.c0, rt0.c4)))) BETWEEN (((((((((rt0.c4)AND(rt0.c1)))OR(rt0.c4)))AND(rt0.c0)))AND(v0.c0))) AND (x''))) ISNULL));
SELECT * FROM v0, rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (v0.c0)) COLLATE BINARY) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((NOT (v0.c0)) COLLATE BINARY))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((NOT (v0.c0)) COLLATE BINARY) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL rt0.c1, v0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0 LEFT OUTER JOIN v0 ON (((((v0.c0)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c4))))|((rt0.c4 IN ()))) GROUP BY rt0.c1, v0.c0, rt0.c4, rt0.c3, rt0.c2;
SELECT rt0.c1, v0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0 LEFT OUTER JOIN v0 ON (((((v0.c0)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c4))))|((rt0.c4 IN ()))) WHERE ((+ ((- (rt0.c4))))) GROUP BY rt0.c1, v0.c0, rt0.c4, rt0.c3, rt0.c2 UNION SELECT rt0.c1, v0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0 LEFT OUTER JOIN v0 ON (((((v0.c0)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c4))))|((rt0.c4 IN ()))) WHERE ((NOT ((+ ((- (rt0.c4))))))) GROUP BY rt0.c1, v0.c0, rt0.c4, rt0.c3, rt0.c2 UNION SELECT rt0.c1, v0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0 LEFT OUTER JOIN v0 ON (((((v0.c0)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c4))))|((rt0.c4 IN ()))) WHERE ((((+ ((- (rt0.c4))))) ISNULL)) GROUP BY rt0.c1, v0.c0, rt0.c4, rt0.c3, rt0.c2;
SELECT ALL rt0.c1, v0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0 LEFT OUTER JOIN v0 ON (((((v0.c0)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c4))))|((rt0.c4 IN ()))) GROUP BY rt0.c1, v0.c0, rt0.c4, rt0.c3, rt0.c2;
SELECT ALL rt0.c4 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c4;
SELECT rt0.c4 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c4 HAVING AVG(((((((((((((v0.c0)AND(COUNT(rt0.c1))))AND(rt0.c2)))OR(TOTAL(AVG(rt0.c3)))))OR(MIN(AVG(v0.c0)))))OR(rt0.c1)))OR(0.23859759265543778))) UNION ALL SELECT rt0.c4 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c4 HAVING (NOT (AVG(((((((((((((v0.c0)AND(COUNT(rt0.c1))))AND(rt0.c2)))OR(TOTAL(AVG(rt0.c3)))))OR(MIN(AVG(v0.c0)))))OR(rt0.c1)))OR(0.23859759265543778))))) UNION ALL SELECT ALL rt0.c4 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c4 HAVING ((AVG(((((((((((((v0.c0)AND(COUNT(rt0.c1))))AND(rt0.c2)))OR(TOTAL(AVG(rt0.c3)))))OR(MIN(AVG(v0.c0)))))OR(rt0.c1)))OR(0.23859759265543778)))) ISNULL);
SELECT ALL TOTAL(((CAST(rt0.c2 AS BLOB)) IS FALSE)) FROM v0, rt0 ORDER BY CASE WHEN CASE WHEN rt0.c2 THEN -2.104445944E9 END THEN CAST(v0.c0 AS INTEGER) ELSE ((rt0.c4) ISNULL) END, TRIM(DISTINCT ((('-1669516502')) BETWEEN ((rt0.c1)) AND ((rt0.c3))));
SELECT ALL * FROM rt0 NATURAL JOIN v0;
SELECT * FROM rt0 NATURAL JOIN v0 WHERE (rt0.c3 COLLATE RTRIM) UNION ALL SELECT ALL * FROM rt0 NATURAL JOIN v0 WHERE ((NOT (rt0.c3 COLLATE RTRIM))) UNION ALL SELECT * FROM rt0 NATURAL JOIN v0 WHERE (((rt0.c3 COLLATE RTRIM) ISNULL));
SELECT ALL * FROM rt0 NATURAL JOIN v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (CASE CASE v0.c0  WHEN '1229052375' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN -3.04853113E8 END  WHEN HEX(0.48870963405905565) THEN (- (v0.c0)) WHEN (v0.c0 IN ()) THEN CASE WHEN v0.c0 THEN v0.c0 WHEN '杽S三cm*' THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END WHEN (0.32258909182773843 IN ()) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) WHEN (v0.c0 IN ()) THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) END) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (CASE CASE v0.c0  WHEN '1229052375' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN -3.04853113E8 END  WHEN HEX(0.48870963405905565) THEN (- (v0.c0)) WHEN (v0.c0 IN ()) THEN CASE WHEN v0.c0 THEN v0.c0 WHEN '杽S三cm*' THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END WHEN (0.32258909182773843 IN ()) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) WHEN (v0.c0 IN ()) THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) END))) UNION SELECT DISTINCT v0.c0 FROM v0 NOT INDEXED WHERE (((CASE CASE v0.c0  WHEN '1229052375' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN -3.04853113E8 END  WHEN HEX(0.48870963405905565) THEN (- (v0.c0)) WHEN (v0.c0 IN ()) THEN CASE WHEN v0.c0 THEN v0.c0 WHEN '杽S三cm*' THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END WHEN (0.32258909182773843 IN ()) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) WHEN (v0.c0 IN ()) THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) END) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL rt0.c2, rt0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM v0, rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((v0.c0))))<<('-1864058648'))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM v0, rt0 WHERE ((NOT ((((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((v0.c0))))<<('-1864058648'))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM v0, rt0 WHERE ((((((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((v0.c0))))<<('-1864058648'))) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c4 FROM rt0 GROUP BY rt0.c4;
SELECT ALL rt0.c4 FROM rt0 GROUP BY rt0.c4 HAVING (((COUNT(*), ((MIN(GROUP_CONCAT(rt0.c0))) NOT BETWEEN (AVG(MIN(rt0.c0))) AND (rt0.c1)), COUNT(*)))==((COUNT(rt0.c3), TOTAL(rt0.c4), (+ (GROUP_CONCAT(SUM(SUM(rt0.c4)))))))) UNION ALL SELECT ALL rt0.c4 FROM rt0 GROUP BY rt0.c4 HAVING (NOT ((((COUNT(*), ((MIN(GROUP_CONCAT(rt0.c0))) NOT BETWEEN (AVG(MIN(rt0.c0))) AND (rt0.c1)), COUNT(*)))=((COUNT(rt0.c3), TOTAL(rt0.c4), (+ (GROUP_CONCAT(SUM(SUM(rt0.c4)))))))))) UNION ALL SELECT ALL rt0.c4 FROM rt0 GROUP BY rt0.c4 HAVING (((((COUNT(*), ((MIN(GROUP_CONCAT(rt0.c0))) NOT BETWEEN (AVG(MIN(rt0.c0))) AND (rt0.c1)), COUNT(*)))==((COUNT(rt0.c3), TOTAL(rt0.c4), (+ (GROUP_CONCAT(SUM(SUM(rt0.c4))))))))) ISNULL);
SELECT * FROM v0;
SELECT * FROM v0 WHERE (((((v0.c0 COLLATE NOCASE)AND(((v0.c0) ISNULL))))OR(TYPEOF(v0.c0)))) UNION ALL SELECT * FROM v0 WHERE ((NOT (((((v0.c0 COLLATE NOCASE)AND(((v0.c0) ISNULL))))OR(TYPEOF(v0.c0)))))) UNION ALL SELECT * FROM v0 WHERE (((((((v0.c0 COLLATE NOCASE)AND(((v0.c0) ISNULL))))OR(TYPEOF(v0.c0)))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT rt0.c4, v0.c0, rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM v0, rt0;
SELECT DISTINCT rt0.c4, v0.c0, rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM v0, rt0 WHERE ((CAST(rt0.c3 AS REAL) IN ())) UNION SELECT DISTINCT rt0.c4, v0.c0, rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM v0, rt0 WHERE ((NOT ((CAST(rt0.c3 AS REAL) IN ())))) UNION SELECT DISTINCT rt0.c4, v0.c0, rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM v0, rt0 WHERE ((((CAST(rt0.c3 AS REAL) IN ())) ISNULL));
SELECT DISTINCT rt0.c4, v0.c0, rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM v0, rt0;
SELECT ALL rt0.c3, rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c3, rt0.c1, v0.c0;
SELECT rt0.c3, rt0.c1, v0.c0 FROM rt0, v0 WHERE (load_extension(LIKELIHOOD(DISTINCT 0xfffffffffbfb6281, 0.9728783817114699))) GROUP BY rt0.c3, rt0.c1, v0.c0 UNION SELECT rt0.c3, rt0.c1, v0.c0 FROM rt0, v0 WHERE ((NOT (load_extension(LIKELIHOOD(DISTINCT 0Xfffffffffbfb6281, 0.9728783817114699))))) GROUP BY rt0.c3, rt0.c1, v0.c0 UNION SELECT ALL rt0.c3, rt0.c1, v0.c0 FROM rt0, v0 WHERE (((load_extension(LIKELIHOOD(DISTINCT 0Xfffffffffbfb6281, 0.9728783817114699))) ISNULL)) GROUP BY rt0.c3, rt0.c1, v0.c0;
SELECT rt0.c3 FROM v0, rt0 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM v0, rt0 GROUP BY rt0.c3 HAVING ((((((rt0.c0)>(SUM(SUM(MIN(MIN(rt0.c4)))))))AND(CAST(v0.c0 AS NUMERIC))))AND(LTRIM(MAX(COUNT(*)), rt0.c4))) UNION ALL SELECT ALL rt0.c3 FROM v0, rt0 GROUP BY rt0.c3 HAVING (NOT (((((((rt0.c0)>(SUM(SUM(MIN(MIN(rt0.c4)))))))AND(CAST(v0.c0 AS NUMERIC))))AND(LTRIM(MAX(COUNT(*)), rt0.c4))))) UNION ALL SELECT rt0.c3 FROM v0, rt0 GROUP BY rt0.c3 HAVING ((((((((rt0.c0)>(SUM(SUM(MIN(MIN(rt0.c4)))))))AND(CAST(v0.c0 AS NUMERIC))))AND(LTRIM(MAX(COUNT(*)), rt0.c4)))) ISNULL);
SELECT ALL rt0.c3, rt0.c0, rt0.c4, rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c3, rt0.c0, rt0.c4, rt0.c1, rt0.c2 FROM rt0 WHERE (CAST(x'a114' AS NUMERIC) COLLATE NOCASE) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c4, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (CAST(x'a114' AS NUMERIC) COLLATE NOCASE))) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c4, rt0.c1, rt0.c2 FROM rt0 WHERE (((CAST(x'a114' AS NUMERIC) COLLATE NOCASE) ISNULL));
SELECT ALL rt0.c3, rt0.c0, rt0.c4, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (x'82eba422') UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (x'82eba422'))) UNION SELECT DISTINCT * FROM v0 WHERE (((x'82eba422') ISNULL));
SELECT DISTINCT * FROM v0;
SELECT rt0.c0 FROM rt0, v0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, v0 WHERE ((~ (v0.c0))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0, v0 WHERE ((NOT ((~ (v0.c0))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0, v0 NOT INDEXED WHERE ((((~ (v0.c0))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, v0 GROUP BY rt0.c0;
SELECT ALL rt0.c0, rt0.c3, rt0.c2, v0.c0, rt0.c4 FROM rt0, v0 GROUP BY rt0.c0, rt0.c3, rt0.c2, v0.c0, rt0.c4;
SELECT ALL rt0.c0, rt0.c3, rt0.c2, v0.c0, rt0.c4 FROM rt0, v0 GROUP BY rt0.c0, rt0.c3, rt0.c2, v0.c0, rt0.c4 HAVING AVG('_XU>K''-oA') UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c2, v0.c0, rt0.c4 FROM rt0, v0 GROUP BY rt0.c0, rt0.c3, rt0.c2, v0.c0, rt0.c4 HAVING (NOT (AVG('_XU>K''-oA'))) UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c2, v0.c0, rt0.c4 FROM rt0, v0 GROUP BY rt0.c0, rt0.c3, rt0.c2, v0.c0, rt0.c4 HAVING ((AVG('_XU>K''-oA')) ISNULL);
SELECT ALL rt0.c0, rt0.c3, rt0.c2, v0.c0, rt0.c4 FROM rt0, v0 GROUP BY rt0.c0, rt0.c3, rt0.c2, v0.c0, rt0.c4;
SELECT ALL rt0.c0, rt0.c3, rt0.c2, v0.c0, rt0.c4 FROM rt0, v0 GROUP BY rt0.c0, rt0.c3, rt0.c2, v0.c0, rt0.c4 HAVING AVG('_XU>K''-oA') UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c2, v0.c0, rt0.c4 FROM rt0, v0 GROUP BY rt0.c0, rt0.c3, rt0.c2, v0.c0, rt0.c4 HAVING (NOT (AVG('_XU>K''-oA'))) UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c2, v0.c0, rt0.c4 FROM rt0, v0 GROUP BY rt0.c0, rt0.c3, rt0.c2, v0.c0, rt0.c4 HAVING ((AVG('_XU>K''-oA')) ISNULL);
SELECT ALL rt0.c0, rt0.c3, rt0.c2, v0.c0, rt0.c4 FROM rt0, v0 GROUP BY rt0.c0, rt0.c3, rt0.c2, v0.c0, rt0.c4;
SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c4 FROM rt0, v0;
SELECT rt0.c2, rt0.c3, rt0.c1, rt0.c4 FROM rt0, v0 WHERE (CAST(((v0.c0)>(rt0.c2)) AS NUMERIC)) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c1, rt0.c4 FROM rt0, v0 WHERE ((NOT (CAST(((v0.c0)>(rt0.c2)) AS NUMERIC)))) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c1, rt0.c4 FROM rt0, v0 WHERE (((CAST(((v0.c0)>(rt0.c2)) AS NUMERIC)) ISNULL));
SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c4 FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (((v0.c0) NOT NULL)) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (((v0.c0) NOT NULL)))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((((v0.c0) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT ALL rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c4;
SELECT rt0.c2, rt0.c4 FROM rt0 WHERE (((x'') IS TRUE)) GROUP BY rt0.c2, rt0.c4 UNION SELECT rt0.c2, rt0.c4 FROM rt0 WHERE ((NOT (((x'') IS TRUE)))) GROUP BY rt0.c2, rt0.c4 UNION SELECT rt0.c2, rt0.c4 FROM rt0 WHERE (((((x'') IS TRUE)) ISNULL)) GROUP BY rt0.c2, rt0.c4;
SELECT ALL rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c4;
SELECT ALL rt0.c3, rt0.c1 FROM rt0, v0 GROUP BY rt0.c3, rt0.c1;
SELECT rt0.c3, rt0.c1 FROM rt0, v0 GROUP BY rt0.c3, rt0.c1 HAVING LTRIM(TOTAL(rt0.c1)) COLLATE RTRIM UNION ALL SELECT rt0.c3, rt0.c1 FROM rt0, v0 GROUP BY rt0.c3, rt0.c1 HAVING (NOT (LTRIM(TOTAL(rt0.c1)) COLLATE RTRIM)) UNION ALL SELECT ALL rt0.c3, rt0.c1 FROM rt0, v0 GROUP BY rt0.c3, rt0.c1 HAVING ((LTRIM(TOTAL(rt0.c1)) COLLATE RTRIM) ISNULL);
SELECT ALL rt0.c3, rt0.c1 FROM rt0, v0 GROUP BY rt0.c3, rt0.c1;
SELECT rt0.c3, rt0.c1 FROM rt0, v0 GROUP BY rt0.c3, rt0.c1 HAVING LTRIM(TOTAL(rt0.c1)) COLLATE RTRIM UNION ALL SELECT rt0.c3, rt0.c1 FROM rt0, v0 GROUP BY rt0.c3, rt0.c1 HAVING (NOT (LTRIM(TOTAL(rt0.c1)) COLLATE RTRIM)) UNION ALL SELECT ALL rt0.c3, rt0.c1 FROM rt0, v0 GROUP BY rt0.c3, rt0.c1 HAVING ((LTRIM(TOTAL(rt0.c1)) COLLATE RTRIM) ISNULL);
SELECT ALL rt0.c3, rt0.c1 FROM rt0, v0 GROUP BY rt0.c3, rt0.c1;
SELECT ALL TOTAL(((- (rt0.c2)) IN ())) FROM v0, rt0;
SELECT v0.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c1, rt0.c0 FROM rt0, v0;
SELECT v0.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c1, rt0.c0 FROM rt0, v0 WHERE ('t櫄') UNION ALL SELECT v0.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c1, rt0.c0 FROM rt0, v0 WHERE ((NOT ('t櫄'))) UNION ALL SELECT ALL v0.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c1, rt0.c0 FROM rt0, v0 WHERE ((('t櫄') ISNULL));
SELECT v0.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c1, rt0.c0 FROM rt0, v0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CASE CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END  WHEN (rt0.c0 IN ()) THEN (- (rt0.c3)) END) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CASE CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END  WHEN (rt0.c0 IN ()) THEN (- (rt0.c3)) END))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CASE CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END  WHEN (rt0.c0 IN ()) THEN (- (rt0.c3)) END) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT v0.c0, rt0.c4 FROM v0 INNER JOIN rt0 ON (((+ (rt0.c3))) IS TRUE) GROUP BY v0.c0, rt0.c4;
SELECT v0.c0, rt0.c4 FROM v0 INNER JOIN rt0 ON (((+ (rt0.c3))) IS TRUE) WHERE (rt0.c4) GROUP BY v0.c0, rt0.c4 UNION SELECT ALL v0.c0, rt0.c4 FROM v0 INNER JOIN rt0 ON (((+ (rt0.c3))) IS TRUE) WHERE ((NOT (rt0.c4))) GROUP BY v0.c0, rt0.c4 UNION SELECT v0.c0, rt0.c4 FROM v0 INNER JOIN rt0 ON (((+ (rt0.c3))) IS TRUE) WHERE (((rt0.c4) ISNULL)) GROUP BY v0.c0, rt0.c4;
SELECT v0.c0, rt0.c4 FROM v0 INNER JOIN rt0 ON (((+ (rt0.c3))) IS TRUE) GROUP BY v0.c0, rt0.c4;
SELECT rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c4;
SELECT ALL rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c4 HAVING rt0.c3 UNION ALL SELECT ALL rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c4 HAVING (NOT (rt0.c3)) UNION ALL SELECT rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c4 HAVING ((rt0.c3) ISNULL);
SELECT rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c4;
SELECT ALL rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c4 HAVING rt0.c3 UNION ALL SELECT ALL rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c4 HAVING (NOT (rt0.c3)) UNION ALL SELECT rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c4 HAVING ((rt0.c3) ISNULL);
SELECT rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c4;
SELECT ALL rt0.c2, v0.c0 FROM rt0 FULL OUTER JOIN v0 ON ((((rt0.c4) ISNULL))-(NULL));
SELECT ALL rt0.c2, v0.c0 FROM rt0 FULL OUTER JOIN v0 ON ((((rt0.c4) ISNULL))-(NULL)) WHERE (((CASE rt0.c2  WHEN v0.c0 THEN rt0.c0 ELSE rt0.c0 END)<=((x'' IN ())))) UNION ALL SELECT rt0.c2, v0.c0 FROM rt0 FULL OUTER JOIN v0 ON ((((rt0.c4) ISNULL))-(NULL)) WHERE ((NOT (((CASE rt0.c2  WHEN v0.c0 THEN rt0.c0 ELSE rt0.c0 END)<=((x'' IN ())))))) UNION ALL SELECT ALL rt0.c2, v0.c0 FROM rt0 FULL OUTER JOIN v0 ON ((((rt0.c4) ISNULL))-(NULL)) WHERE (((((CASE rt0.c2  WHEN v0.c0 THEN rt0.c0 ELSE rt0.c0 END)<=((x'' IN ())))) ISNULL));
SELECT ALL rt0.c2, v0.c0 FROM rt0 FULL OUTER JOIN v0 ON ((((rt0.c4) ISNULL))-(NULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c4, rt0.c2 FROM v0, rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c4, rt0.c2 FROM v0, rt0 WHERE (HEX(DISTINCT ((rt0.c1)!=(rt0.c4)))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c4, rt0.c2 FROM v0, rt0 WHERE ((NOT (HEX(DISTINCT ((rt0.c1)!=(rt0.c4)))))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c4, rt0.c2 FROM v0, rt0 WHERE (((HEX(DISTINCT ((rt0.c1)<>(rt0.c4)))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c4, rt0.c2 FROM v0, rt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)OR(CAST(v0.c0 AS INTEGER)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)OR(CAST(v0.c0 AS INTEGER)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)OR(CAST(v0.c0 AS INTEGER)))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c4, rt0.c2, rt0.c0 FROM rt0 INNER JOIN v0 ON ((((rt0.c0)|(rt0.c4)))&((rt0.c3 IN ()))) GROUP BY rt0.c4, rt0.c2, rt0.c0;
SELECT ALL rt0.c4, rt0.c2, rt0.c0 FROM rt0 INNER JOIN v0 ON ((((rt0.c0)|(rt0.c4)))&((rt0.c3 IN ()))) GROUP BY rt0.c4, rt0.c2, rt0.c0 HAVING ((CAST(SUM(GROUP_CONCAT(COUNT(*))) AS BLOB)) IS FALSE) UNION ALL SELECT rt0.c4, rt0.c2, rt0.c0 FROM rt0 INNER JOIN v0 ON ((((rt0.c0)|(rt0.c4)))&((rt0.c3 IN ()))) GROUP BY rt0.c4, rt0.c2, rt0.c0 HAVING (NOT (((CAST(SUM(GROUP_CONCAT(COUNT(*))) AS BLOB)) IS FALSE))) UNION ALL SELECT ALL rt0.c4, rt0.c2, rt0.c0 FROM rt0 INNER JOIN v0 ON ((((rt0.c0)|(rt0.c4)))&((rt0.c3 IN ()))) GROUP BY rt0.c4, rt0.c2, rt0.c0 HAVING ((((CAST(SUM(GROUP_CONCAT(COUNT(*))) AS BLOB)) IS FALSE)) ISNULL);
SELECT * FROM v0 FULL OUTER JOIN rt0 ON (((((rt0.c0)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c1))))||(rt0.c2));
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON (((((rt0.c0)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c1))))||(rt0.c2)) WHERE (NULLIF(rt0.c4 COLLATE RTRIM, MAX(rt0.c2, 1797796302))) UNION ALL SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON (((((rt0.c0)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c1))))||(rt0.c2)) WHERE ((NOT (NULLIF(rt0.c4 COLLATE RTRIM, MAX(rt0.c2, 1797796302))))) UNION ALL SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON (((((rt0.c0)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c1))))||(rt0.c2)) WHERE (((NULLIF(rt0.c4 COLLATE RTRIM, MAX(rt0.c2, 1797796302))) ISNULL));
SELECT * FROM v0 FULL OUTER JOIN rt0 ON (((((rt0.c0)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c1))))||(rt0.c2));
SELECT DISTINCT rt0.c2, rt0.c3, rt0.c1, rt0.c4, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c3, rt0.c1, rt0.c4, rt0.c0 FROM rt0 WHERE ((rt0.c3 IN ()) COLLATE BINARY) UNION SELECT DISTINCT rt0.c2, rt0.c3, rt0.c1, rt0.c4, rt0.c0 FROM rt0 WHERE ((NOT ((rt0.c3 IN ()) COLLATE BINARY))) UNION SELECT DISTINCT rt0.c2, rt0.c3, rt0.c1, rt0.c4, rt0.c0 FROM rt0 WHERE ((((rt0.c3 IN ()) COLLATE BINARY) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c3, rt0.c1, rt0.c4, rt0.c0 FROM rt0;
SELECT ALL rt0.c2, rt0.c4, rt0.c0, rt0.c1, v0.c0, rt0.c3 FROM rt0, v0 GROUP BY rt0.c2, rt0.c4, rt0.c0, rt0.c1, v0.c0, rt0.c3;
SELECT ALL rt0.c2, rt0.c4, rt0.c0, rt0.c1, v0.c0, rt0.c3 FROM rt0, v0 WHERE (CASE WHEN v0.c0 COLLATE BINARY THEN ((rt0.c2) ISNULL) WHEN (~ (rt0.c0)) THEN CAST(rt0.c0 AS REAL) WHEN ((v0.c0)||(v0.c0)) THEN -6.7411327E7 END) GROUP BY rt0.c2, rt0.c4, rt0.c0, rt0.c1, v0.c0, rt0.c3 UNION SELECT ALL rt0.c2, rt0.c4, rt0.c0, rt0.c1, v0.c0, rt0.c3 FROM rt0, v0 WHERE ((NOT (CASE WHEN v0.c0 COLLATE BINARY THEN ((rt0.c2) ISNULL) WHEN (~ (rt0.c0)) THEN CAST(rt0.c0 AS REAL) WHEN ((v0.c0)||(v0.c0)) THEN -6.7411327E7 END))) GROUP BY rt0.c2, rt0.c4, rt0.c0, rt0.c1, v0.c0, rt0.c3 UNION SELECT ALL rt0.c2, rt0.c4, rt0.c0, rt0.c1, v0.c0, rt0.c3 FROM rt0, v0 WHERE (((CASE WHEN v0.c0 COLLATE BINARY THEN ((rt0.c2) ISNULL) WHEN (~ (rt0.c0)) THEN CAST(rt0.c0 AS REAL) WHEN ((v0.c0)||(v0.c0)) THEN -6.7411327E7 END) ISNULL)) GROUP BY rt0.c2, rt0.c4, rt0.c0, rt0.c1, v0.c0, rt0.c3;
SELECT ALL rt0.c2, rt0.c4, rt0.c0, rt0.c1, v0.c0, rt0.c3 FROM rt0, v0 GROUP BY rt0.c2, rt0.c4, rt0.c0, rt0.c1, v0.c0, rt0.c3;
SELECT rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 HAVING SUM(((AVG(COUNT(*)))!=(rt0.c0))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 HAVING (NOT (SUM(((AVG(COUNT(*)))<>(rt0.c0))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 HAVING ((SUM(((AVG(COUNT(*)))!=(rt0.c0)))) ISNULL);
SELECT * FROM v0, rt0;
SELECT ALL * FROM v0, rt0 WHERE ((('t櫄') NOT BETWEEN (rt0.c4) AND (((((rt0.c4)OR(rt0.c3)))OR(NULL))))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((NOT ((('t櫄') NOT BETWEEN (rt0.c4) AND (((((rt0.c4)OR(rt0.c3)))OR(NULL))))))) UNION ALL SELECT * FROM v0, rt0 WHERE ((((('t櫄') NOT BETWEEN (rt0.c4) AND (((((rt0.c4)OR(rt0.c3)))OR(NULL))))) ISNULL));
SELECT * FROM v0, rt0;
SELECT DISTINCT v0.c0, rt0.c2, rt0.c4, rt0.c0, rt0.c1 FROM v0, rt0;
SELECT DISTINCT v0.c0, rt0.c2, rt0.c4, rt0.c0, rt0.c1 FROM v0, rt0 WHERE (HEX(('512146132' IN (rt0.c1)))) UNION SELECT DISTINCT v0.c0, rt0.c2, rt0.c4, rt0.c0, rt0.c1 FROM v0, rt0 WHERE ((NOT (HEX(('512146132' IN (rt0.c1)))))) UNION SELECT DISTINCT v0.c0, rt0.c2, rt0.c4, rt0.c0, rt0.c1 FROM v0, rt0 WHERE (((HEX(('512146132' IN (rt0.c1)))) ISNULL));
SELECT DISTINCT v0.c0, rt0.c2, rt0.c4, rt0.c0, rt0.c1 FROM v0, rt0;
SELECT ALL rt0.c4, rt0.c0, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c3, rt0.c1;
SELECT rt0.c4, rt0.c0, rt0.c3, rt0.c1 FROM rt0 WHERE ((NOT ((rt0.c2 IN ())))) GROUP BY rt0.c4, rt0.c0, rt0.c3, rt0.c1 UNION SELECT rt0.c4, rt0.c0, rt0.c3, rt0.c1 FROM rt0 WHERE ((NOT ((NOT ((rt0.c2 IN ())))))) GROUP BY rt0.c4, rt0.c0, rt0.c3, rt0.c1 UNION SELECT rt0.c4, rt0.c0, rt0.c3, rt0.c1 FROM rt0 WHERE ((((NOT ((rt0.c2 IN ())))) ISNULL)) GROUP BY rt0.c4, rt0.c0, rt0.c3, rt0.c1;
SELECT ALL rt0.c4, rt0.c0, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c3, rt0.c1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING SUM(MIN(v0.c0)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (SUM(MIN(v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((SUM(MIN(v0.c0))) ISNULL);
SELECT ALL * FROM v0, rt0;
SELECT * FROM v0, rt0 WHERE ((((((rt0.c1)>(v0.c0))))<((CASE v0.c0  WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c0 END)))) UNION ALL SELECT * FROM v0, rt0 WHERE ((NOT ((((((rt0.c1)>(v0.c0))))<((CASE v0.c0  WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c0 END)))))) UNION ALL SELECT * FROM v0, rt0 WHERE ((((((((rt0.c1)>(v0.c0))))<((CASE v0.c0  WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c0 END)))) ISNULL));
SELECT ALL * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE ((((((+ (NULL)))AND((((rt0.c4))<=((rt0.c4))))))OR((~ (rt0.c4))))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT ((((((+ (NULL)))AND((((rt0.c4))<=((rt0.c4))))))OR((~ (rt0.c4))))))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((((((((+ (NULL)))AND((((rt0.c4))<=((rt0.c4))))))OR((~ (rt0.c4))))) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT rt0.c0, v0.c0 FROM rt0, v0 GROUP BY rt0.c0, v0.c0;
SELECT ALL rt0.c0, v0.c0 FROM rt0, v0 WHERE (((((rt0.c0)>(rt0.c2))) NOT BETWEEN (0x7ecc7e86) AND (CAST(rt0.c2 AS NUMERIC)))) GROUP BY rt0.c0, v0.c0 UNION SELECT ALL rt0.c0, v0.c0 FROM rt0, v0 WHERE ((NOT (((((rt0.c0)>(rt0.c2))) NOT BETWEEN (0X7ecc7e86) AND (CAST(rt0.c2 AS NUMERIC)))))) GROUP BY rt0.c0, v0.c0 UNION SELECT rt0.c0, v0.c0 FROM rt0, v0 WHERE (((((((rt0.c0)>(rt0.c2))) NOT BETWEEN (0x7ecc7e86) AND (CAST(rt0.c2 AS NUMERIC)))) ISNULL)) GROUP BY rt0.c0, v0.c0;
SELECT rt0.c0, v0.c0 FROM rt0, v0 GROUP BY rt0.c0, v0.c0;
SELECT rt0.c2, rt0.c0, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c3, rt0.c4;
SELECT rt0.c2, rt0.c0, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c3, rt0.c4 HAVING ((((((((rt0.c0)OR(MAX(rt0.c4))))OR(SUM(COUNT(*)))))OR(GROUP_CONCAT(MIN(rt0.c3)))))AND(((rt0.c3)IS(TOTAL(rt0.c3))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c3, rt0.c4 HAVING (NOT (((((((((rt0.c0)OR(MAX(rt0.c4))))OR(SUM(COUNT(*)))))OR(GROUP_CONCAT(MIN(rt0.c3)))))AND(((rt0.c3)IS(TOTAL(rt0.c3))))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c3, rt0.c4 HAVING ((((((((((rt0.c0)OR(MAX(rt0.c4))))OR(SUM(COUNT(*)))))OR(GROUP_CONCAT(MIN(rt0.c3)))))AND(((rt0.c3)IS(TOTAL(rt0.c3)))))) ISNULL);
SELECT ALL v0.c0 FROM v0, rt0;
SELECT ALL v0.c0 FROM v0, rt0 WHERE ((~ (v0.c0)) COLLATE NOCASE) UNION ALL SELECT v0.c0 FROM v0, rt0 WHERE ((NOT ((~ (v0.c0)) COLLATE NOCASE))) UNION ALL SELECT v0.c0 FROM v0, rt0 WHERE ((((~ (v0.c0)) COLLATE NOCASE) ISNULL));
SELECT ALL v0.c0 FROM v0, rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (-298933868) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (-298933868))) UNION SELECT DISTINCT * FROM v0 WHERE (((-298933868) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT rt0.c1, rt0.c4, rt0.c0 FROM rt0 CROSS JOIN v0 ON (((rt0.c2)) BETWEEN ((((rt0.c4) NOT BETWEEN ('560342736') AND (rt0.c1)))) AND ((IFNULL(rt0.c2, rt0.c2)))) GROUP BY rt0.c1, rt0.c4, rt0.c0;
SELECT rt0.c1, rt0.c4, rt0.c0 FROM rt0 CROSS JOIN v0 ON (((rt0.c2)) BETWEEN ((((rt0.c4) NOT BETWEEN ('560342736') AND (rt0.c1)))) AND ((IFNULL(rt0.c2, rt0.c2)))) WHERE (((3.40344096E8) NOTNULL)) GROUP BY rt0.c1, rt0.c4, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c4, rt0.c0 FROM rt0 CROSS JOIN v0 ON (((rt0.c2)) BETWEEN ((((rt0.c4) NOT BETWEEN ('560342736') AND (rt0.c1)))) AND ((IFNULL(rt0.c2, rt0.c2)))) WHERE ((NOT (((3.40344096E8) NOTNULL)))) GROUP BY rt0.c1, rt0.c4, rt0.c0 UNION SELECT rt0.c1, rt0.c4, rt0.c0 FROM rt0 CROSS JOIN v0 ON (((rt0.c2)) BETWEEN ((((rt0.c4) NOT BETWEEN ('560342736') AND (rt0.c1)))) AND ((IFNULL(rt0.c2, rt0.c2)))) WHERE (((((3.40344096E8) NOTNULL)) ISNULL)) GROUP BY rt0.c1, rt0.c4, rt0.c0;
SELECT rt0.c1, rt0.c4, rt0.c0 FROM rt0 CROSS JOIN v0 ON (((rt0.c2)) BETWEEN ((((rt0.c4) NOT BETWEEN ('560342736') AND (rt0.c1)))) AND ((IFNULL(rt0.c2, rt0.c2)))) GROUP BY rt0.c1, rt0.c4, rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((rt0.c3) BETWEEN (SUM(COUNT(*))) AND (GROUP_CONCAT(rt0.c2))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (((rt0.c3) BETWEEN (SUM(COUNT(*))) AND (GROUP_CONCAT(rt0.c2))))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((((rt0.c3) BETWEEN (SUM(COUNT(*))) AND (GROUP_CONCAT(rt0.c2)))) ISNULL);
SELECT * FROM rt0 FULL OUTER JOIN v0 ON ((CASE ''  WHEN x'' THEN v0.c0 WHEN rt0.c3 THEN x'd47c' WHEN rt0.c4 THEN x'' END) NOT NULL);
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON ((CASE ''  WHEN x'' THEN v0.c0 WHEN rt0.c3 THEN x'd47c' WHEN rt0.c4 THEN x'' END) NOT NULL) WHERE (CAST(rt0.c0 AS REAL) COLLATE NOCASE) UNION ALL SELECT * FROM rt0 FULL OUTER JOIN v0 ON ((CASE ''  WHEN x'' THEN v0.c0 WHEN rt0.c3 THEN x'd47c' WHEN rt0.c4 THEN x'' END) NOT NULL) WHERE ((NOT (CAST(rt0.c0 AS REAL) COLLATE NOCASE))) UNION ALL SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON ((CASE ''  WHEN x'' THEN v0.c0 WHEN rt0.c3 THEN x'd47c' WHEN rt0.c4 THEN x'' END) NOT NULL) WHERE (((CAST(rt0.c0 AS REAL) COLLATE NOCASE) ISNULL));
SELECT * FROM rt0 FULL OUTER JOIN v0 ON ((CASE ''  WHEN x'' THEN v0.c0 WHEN rt0.c3 THEN x'd47c' WHEN rt0.c4 THEN x'' END) NOT NULL);
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((((- (rt0.c3))) BETWEEN (NULLIF(DISTINCT rt0.c4, rt0.c2)) AND (rt0.c2))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT ((((- (rt0.c3))) BETWEEN (NULLIF(DISTINCT rt0.c4, rt0.c2)) AND (rt0.c2))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((((((- (rt0.c3))) BETWEEN (NULLIF(DISTINCT rt0.c4, rt0.c2)) AND (rt0.c2))) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((((v0.c0))<((v0.c0))) COLLATE NOCASE) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((((v0.c0))<((v0.c0))) COLLATE NOCASE))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 NOT INDEXED WHERE ((((((v0.c0))<((v0.c0))) COLLATE NOCASE) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c3, rt0.c2, v0.c0, rt0.c0, rt0.c4, rt0.c1 FROM v0 RIGHT OUTER JOIN rt0 ON ((rt0.c0) BETWEEN ('R') AND (rt0.c0)) COLLATE NOCASE GROUP BY rt0.c3, rt0.c2, v0.c0, rt0.c0, rt0.c4, rt0.c1;
SELECT ALL rt0.c3, rt0.c2, v0.c0, rt0.c0, rt0.c4, rt0.c1 FROM v0 RIGHT OUTER JOIN rt0 ON ((rt0.c0) BETWEEN ('R') AND (rt0.c0)) COLLATE NOCASE GROUP BY rt0.c3, rt0.c2, v0.c0, rt0.c0, rt0.c4, rt0.c1 HAVING TOTAL(MAX(MAX(MIN(x'3405')))) UNION ALL SELECT ALL rt0.c3, rt0.c2, v0.c0, rt0.c0, rt0.c4, rt0.c1 FROM v0 RIGHT OUTER JOIN rt0 ON ((rt0.c0) BETWEEN ('R') AND (rt0.c0)) COLLATE NOCASE GROUP BY rt0.c3, rt0.c2, v0.c0, rt0.c0, rt0.c4, rt0.c1 HAVING (NOT (TOTAL(MAX(MAX(MIN(x'3405')))))) UNION ALL SELECT rt0.c3, rt0.c2, v0.c0, rt0.c0, rt0.c4, rt0.c1 FROM v0 RIGHT OUTER JOIN rt0 ON ((rt0.c0) BETWEEN ('R') AND (rt0.c0)) COLLATE NOCASE GROUP BY rt0.c3, rt0.c2, v0.c0, rt0.c0, rt0.c4, rt0.c1 HAVING ((TOTAL(MAX(MAX(MIN(x'3405'))))) ISNULL);
SELECT rt0.c4, rt0.c1, v0.c0 FROM rt0, v0;
SELECT rt0.c4, rt0.c1, v0.c0 FROM rt0, v0 WHERE (CASE WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c3 WHEN 0.9133969356453873 THEN '572561686' ELSE rt0.c0 END COLLATE NOCASE) UNION ALL SELECT ALL rt0.c4, rt0.c1, v0.c0 FROM rt0, v0 WHERE ((NOT (CASE WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c3 WHEN 0.9133969356453873 THEN '572561686' ELSE rt0.c0 END COLLATE NOCASE))) UNION ALL SELECT ALL rt0.c4, rt0.c1, v0.c0 FROM rt0, v0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c3 WHEN 0.9133969356453873 THEN '572561686' ELSE rt0.c0 END COLLATE NOCASE) ISNULL));
SELECT rt0.c4, rt0.c1, v0.c0 FROM rt0, v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((- (((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((- (((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0))))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((- (((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (CASE WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN (0.6044227419873993 IN (v0.c0)) WHEN ((v0.c0)*(v0.c0)) THEN ((v0.c0)>=(v0.c0)) WHEN ((((v0.c0)AND(v0.c0)))OR(v0.c0)) THEN CAST(v0.c0 AS TEXT) END) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (CASE WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN (0.6044227419873993 IN (v0.c0)) WHEN ((v0.c0)*(v0.c0)) THEN ((v0.c0)>=(v0.c0)) WHEN ((((v0.c0)AND(v0.c0)))OR(v0.c0)) THEN CAST(v0.c0 AS TEXT) END))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((CASE WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN (0.6044227419873993 IN (v0.c0)) WHEN ((v0.c0)*(v0.c0)) THEN ((v0.c0)>=(v0.c0)) WHEN ((((v0.c0)AND(v0.c0)))OR(v0.c0)) THEN CAST(v0.c0 AS TEXT) END) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c4, v0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0, v0 GROUP BY rt0.c4, v0.c0, rt0.c3, rt0.c2, rt0.c1;
SELECT ALL rt0.c4, v0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0, v0 GROUP BY rt0.c4, v0.c0, rt0.c3, rt0.c2, rt0.c1 HAVING '0.501161534901066' UNION ALL SELECT rt0.c4, v0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0, v0 GROUP BY rt0.c4, v0.c0, rt0.c3, rt0.c2, rt0.c1 HAVING (NOT ('0.501161534901066')) UNION ALL SELECT rt0.c4, v0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0, v0 GROUP BY rt0.c4, v0.c0, rt0.c3, rt0.c2, rt0.c1 HAVING (('0.501161534901066') ISNULL);
SELECT ALL rt0.c4, v0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0, v0 GROUP BY rt0.c4, v0.c0, rt0.c3, rt0.c2, rt0.c1;
SELECT ALL rt0.c4, v0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0, v0 GROUP BY rt0.c4, v0.c0, rt0.c3, rt0.c2, rt0.c1 HAVING '0.501161534901066' UNION ALL SELECT rt0.c4, v0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0, v0 GROUP BY rt0.c4, v0.c0, rt0.c3, rt0.c2, rt0.c1 HAVING (NOT ('0.501161534901066')) UNION ALL SELECT rt0.c4, v0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0, v0 GROUP BY rt0.c4, v0.c0, rt0.c3, rt0.c2, rt0.c1 HAVING (('0.501161534901066') ISNULL);
SELECT ALL rt0.c4, v0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0, v0 GROUP BY rt0.c4, v0.c0, rt0.c3, rt0.c2, rt0.c1;
SELECT ALL rt0.c1, rt0.c0, rt0.c4 FROM rt0, v0;
SELECT rt0.c1, rt0.c0, rt0.c4 FROM rt0, v0 WHERE ((((rt0.c2) NOTNULL) IN (rt0.c4 COLLATE NOCASE))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c4 FROM rt0, v0 WHERE ((NOT ((((rt0.c2) NOTNULL) IN (rt0.c4 COLLATE NOCASE))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c4 FROM rt0, v0 WHERE ((((((rt0.c2) NOTNULL) IN (rt0.c4 COLLATE NOCASE))) ISNULL));
SELECT ALL rt0.c1, rt0.c0, rt0.c4 FROM rt0, v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((- (((NULL)>(v0.c0))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((- (((NULL)>(v0.c0))))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((- (((NULL)>(v0.c0))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT rt0.c0, rt0.c2, rt0.c3, v0.c0, rt0.c4, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c3, v0.c0, rt0.c4, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c3, v0.c0, rt0.c4, rt0.c1 FROM v0, rt0 WHERE ((NOT (v0.c0)) COLLATE NOCASE) GROUP BY rt0.c0, rt0.c2, rt0.c3, v0.c0, rt0.c4, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c3, v0.c0, rt0.c4, rt0.c1 FROM v0, rt0 WHERE ((NOT ((NOT (v0.c0)) COLLATE NOCASE))) GROUP BY rt0.c0, rt0.c2, rt0.c3, v0.c0, rt0.c4, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c3, v0.c0, rt0.c4, rt0.c1 FROM v0, rt0 WHERE ((((NOT (v0.c0)) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c3, v0.c0, rt0.c4, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c3, v0.c0, rt0.c4, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c3, v0.c0, rt0.c4, rt0.c1;
SELECT rt0.c3, rt0.c1, rt0.c4, v0.c0 FROM rt0, v0 GROUP BY rt0.c3, rt0.c1, rt0.c4, v0.c0;
SELECT rt0.c3, rt0.c1, rt0.c4, v0.c0 FROM rt0, v0 GROUP BY rt0.c3, rt0.c1, rt0.c4, v0.c0 HAVING (((((rt0.c0)) NOT BETWEEN ((MIN(MIN(rt0.c2)))) AND ((rt0.c3)))) BETWEEN (SUM(rt0.c2)) AND (CASE COUNT(COUNT(rt0.c3))  WHEN TOTAL(GROUP_CONCAT(SUM(rt0.c0))) THEN v0.c0 ELSE AVG(rt0.c1) END)) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c4, v0.c0 FROM rt0, v0 GROUP BY rt0.c3, rt0.c1, rt0.c4, v0.c0 HAVING (NOT ((((((rt0.c0)) NOT BETWEEN ((MIN(MIN(rt0.c2)))) AND ((rt0.c3)))) BETWEEN (SUM(rt0.c2)) AND (CASE COUNT(COUNT(rt0.c3))  WHEN TOTAL(GROUP_CONCAT(SUM(rt0.c0))) THEN v0.c0 ELSE AVG(rt0.c1) END)))) UNION ALL SELECT rt0.c3, rt0.c1, rt0.c4, v0.c0 FROM rt0, v0 GROUP BY rt0.c3, rt0.c1, rt0.c4, v0.c0 HAVING (((((((rt0.c0)) NOT BETWEEN ((MIN(MIN(rt0.c2)))) AND ((rt0.c3)))) BETWEEN (SUM(rt0.c2)) AND (CASE COUNT(COUNT(rt0.c3))  WHEN TOTAL(GROUP_CONCAT(SUM(rt0.c0))) THEN v0.c0 ELSE AVG(rt0.c1) END))) ISNULL);
SELECT rt0.c0, rt0.c4, rt0.c3 FROM rt0 CROSS JOIN v0 ON ((((((0.2070965178007106)-(4.62904637E8)))AND('1439574532')))OR(CASE WHEN rt0.c2 THEN rt0.c1 END));
SELECT ALL rt0.c0, rt0.c4, rt0.c3 FROM rt0 CROSS JOIN v0 ON ((((((0.2070965178007106)-(4.62904637E8)))AND('1439574532')))OR(CASE WHEN rt0.c2 THEN rt0.c1 END)) WHERE (rt0.c2) UNION ALL SELECT rt0.c0, rt0.c4, rt0.c3 FROM rt0 CROSS JOIN v0 ON ((((((0.2070965178007106)-(4.62904637E8)))AND('1439574532')))OR(CASE WHEN rt0.c2 THEN rt0.c1 END)) WHERE ((NOT (rt0.c2))) UNION ALL SELECT rt0.c0, rt0.c4, rt0.c3 FROM rt0 CROSS JOIN v0 ON ((((((0.2070965178007106)-(4.62904637E8)))AND('1439574532')))OR(CASE WHEN rt0.c2 THEN rt0.c1 END)) WHERE (((rt0.c2) ISNULL));
SELECT rt0.c0, rt0.c4, rt0.c3 FROM rt0 CROSS JOIN v0 ON ((((((0.2070965178007106)-(4.62904637E8)))AND('1439574532')))OR(CASE WHEN rt0.c2 THEN rt0.c1 END));
SELECT DISTINCT rt0.c3 FROM v0 NATURAL JOIN rt0;
SELECT DISTINCT rt0.c3 FROM v0 NATURAL JOIN rt0 WHERE (rt0.c2) UNION SELECT DISTINCT rt0.c3 FROM v0 NATURAL JOIN rt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT rt0.c3 FROM v0 NATURAL JOIN rt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT rt0.c3 FROM v0 NATURAL JOIN rt0;
SELECT ALL rt0.c3, v0.c0, rt0.c4 FROM rt0, v0 GROUP BY rt0.c3, v0.c0, rt0.c4;
SELECT rt0.c3, v0.c0, rt0.c4 FROM rt0, v0 WHERE ((+ (0.7382797424112738))) GROUP BY rt0.c3, v0.c0, rt0.c4 UNION SELECT ALL rt0.c3, v0.c0, rt0.c4 FROM rt0, v0 WHERE ((NOT ((+ (0.7382797424112738))))) GROUP BY rt0.c3, v0.c0, rt0.c4 UNION SELECT rt0.c3, v0.c0, rt0.c4 FROM rt0, v0 WHERE ((((+ (0.7382797424112738))) ISNULL)) GROUP BY rt0.c3, v0.c0, rt0.c4;
SELECT ALL rt0.c3, v0.c0, rt0.c4 FROM rt0, v0 GROUP BY rt0.c3, v0.c0, rt0.c4;
SELECT rt0.c3, rt0.c1, rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c4, rt0.c0;
SELECT ALL rt0.c3, rt0.c1, rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c4, rt0.c0 HAVING (((((rt0.c2, rt0.c3, TOTAL(MIN(MAX(rt0.c4))))) NOT BETWEEN ((MAX(rt0.c2), rt0.c3, GROUP_CONCAT(rt0.c0))) AND ((AVG(GROUP_CONCAT(rt0.c0)), TOTAL(rt0.c0), COUNT(*)))))<>(COUNT(*))) UNION ALL SELECT rt0.c3, rt0.c1, rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c4, rt0.c0 HAVING (NOT ((((((rt0.c2, rt0.c3, TOTAL(MIN(MAX(rt0.c4))))) NOT BETWEEN ((MAX(rt0.c2), rt0.c3, GROUP_CONCAT(rt0.c0))) AND ((AVG(GROUP_CONCAT(rt0.c0)), TOTAL(rt0.c0), COUNT(*)))))<>(COUNT(*))))) UNION ALL SELECT rt0.c3, rt0.c1, rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c4, rt0.c0 HAVING (((((((rt0.c2, rt0.c3, TOTAL(MIN(MAX(rt0.c4))))) NOT BETWEEN ((MAX(rt0.c2), rt0.c3, GROUP_CONCAT(rt0.c0))) AND ((AVG(GROUP_CONCAT(rt0.c0)), TOTAL(rt0.c0), COUNT(*)))))!=(COUNT(*)))) ISNULL);
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON ((rt0.c4) NOT BETWEEN (v0.c0 COLLATE RTRIM) AND (((rt0.c3)=(rt0.c2))));
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON ((rt0.c4) NOT BETWEEN (v0.c0 COLLATE RTRIM) AND (((rt0.c3)==(rt0.c2)))) WHERE (NULL) UNION ALL SELECT * FROM rt0 LEFT OUTER JOIN v0 ON ((rt0.c4) NOT BETWEEN (v0.c0 COLLATE RTRIM) AND (((rt0.c3)=(rt0.c2)))) WHERE ((NOT (NULL))) UNION ALL SELECT * FROM rt0 LEFT OUTER JOIN v0 ON ((rt0.c4) NOT BETWEEN (v0.c0 COLLATE RTRIM) AND (((rt0.c3)=(rt0.c2)))) WHERE (((NULL) ISNULL));
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON ((rt0.c4) NOT BETWEEN (v0.c0 COLLATE RTRIM) AND (((rt0.c3)=(rt0.c2))));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c4, rt0.c2, v0.c0, rt0.c3 FROM v0, rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c4, rt0.c2, v0.c0, rt0.c3 FROM v0, rt0 WHERE (((PRINTF(rt0.c0)) IS TRUE)) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c4, rt0.c2, v0.c0, rt0.c3 FROM v0, rt0 WHERE ((NOT (((PRINTF(rt0.c0)) IS TRUE)))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c4, rt0.c2, v0.c0, rt0.c3 FROM v0, rt0 WHERE (((((PRINTF(rt0.c0)) IS TRUE)) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c4, rt0.c2, v0.c0, rt0.c3 FROM v0, rt0;
SELECT ALL rt0.c0, rt0.c2, v0.c0, rt0.c3, rt0.c1, rt0.c4 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, v0.c0, rt0.c3, rt0.c1, rt0.c4;
SELECT ALL rt0.c0, rt0.c2, v0.c0, rt0.c3, rt0.c1, rt0.c4 FROM v0, rt0 WHERE ((('-987169537')IS NOT(((NULL) ISNULL)))) GROUP BY rt0.c0, rt0.c2, v0.c0, rt0.c3, rt0.c1, rt0.c4 UNION SELECT rt0.c0, rt0.c2, v0.c0, rt0.c3, rt0.c1, rt0.c4 FROM v0, rt0 WHERE ((NOT ((('-987169537')IS NOT(((NULL) ISNULL)))))) GROUP BY rt0.c0, rt0.c2, v0.c0, rt0.c3, rt0.c1, rt0.c4 UNION SELECT rt0.c0, rt0.c2, v0.c0, rt0.c3, rt0.c1, rt0.c4 FROM v0, rt0 WHERE ((((('-987169537')IS NOT(((NULL) ISNULL)))) ISNULL)) GROUP BY rt0.c0, rt0.c2, v0.c0, rt0.c3, rt0.c1, rt0.c4;
SELECT ALL rt0.c0, rt0.c2, v0.c0, rt0.c3, rt0.c1, rt0.c4 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, v0.c0, rt0.c3, rt0.c1, rt0.c4;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((0.0343305429202877)+(CASE MIN(TOTAL(MIN(rt0.c0)))  WHEN rt0.c1 THEN AVG(rt0.c0) WHEN GROUP_CONCAT(GROUP_CONCAT(rt0.c0)) THEN rt0.c1 WHEN GROUP_CONCAT(MIN(0.1402038445347248)) THEN SUM(rt0.c1) ELSE SUM(rt0.c1) END)) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (((0.0343305429202877)+(CASE MIN(TOTAL(MIN(rt0.c0)))  WHEN rt0.c1 THEN AVG(rt0.c0) WHEN GROUP_CONCAT(GROUP_CONCAT(rt0.c0)) THEN rt0.c1 WHEN GROUP_CONCAT(MIN(0.1402038445347248)) THEN SUM(rt0.c1) ELSE SUM(rt0.c1) END)))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((((0.0343305429202877)+(CASE MIN(TOTAL(MIN(rt0.c0)))  WHEN rt0.c1 THEN AVG(rt0.c0) WHEN GROUP_CONCAT(GROUP_CONCAT(rt0.c0)) THEN rt0.c1 WHEN GROUP_CONCAT(MIN(0.1402038445347248)) THEN SUM(rt0.c1) ELSE SUM(rt0.c1) END))) ISNULL);
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE (v0.c0) UNION ALL SELECT * FROM v0 WHERE ((NOT (v0.c0))) UNION ALL SELECT * FROM v0 WHERE (((v0.c0) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT rt0.c4 FROM v0, rt0;
SELECT DISTINCT rt0.c4 FROM v0, rt0 WHERE (CAST((('A.*b') BETWEEN (rt0.c3) AND (v0.c0)) AS BLOB)) UNION SELECT DISTINCT rt0.c4 FROM v0, rt0 WHERE ((NOT (CAST((('A.*b') BETWEEN (rt0.c3) AND (v0.c0)) AS BLOB)))) UNION SELECT DISTINCT rt0.c4 FROM v0, rt0 WHERE (((CAST((('A.*b') BETWEEN (rt0.c3) AND (v0.c0)) AS BLOB)) ISNULL));
SELECT DISTINCT rt0.c4 FROM v0, rt0;
SELECT rt0.c0 FROM v0, rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM v0, rt0 WHERE ((((((((('383619681')AND(((rt0.c1)<>(rt0.c1)))))AND((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3))))))AND(NULL COLLATE RTRIM)))AND(((rt0.c4)AND(rt0.c3))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM v0, rt0 WHERE ((NOT ((((((((('383619681')AND(((rt0.c1)<>(rt0.c1)))))AND((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3))))))AND(NULL COLLATE RTRIM)))AND(((rt0.c4)AND(rt0.c3))))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM v0, rt0 WHERE ((((((((((('383619681')AND(((rt0.c1)!=(rt0.c1)))))AND((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3))))))AND(NULL COLLATE RTRIM)))AND(((rt0.c4)AND(rt0.c3))))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM v0, rt0 GROUP BY rt0.c0;
SELECT rt0.c2, rt0.c4, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c1, rt0.c3;
SELECT ALL rt0.c2, rt0.c4, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c1, rt0.c3 HAVING x'' UNION ALL SELECT rt0.c2, rt0.c4, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c1, rt0.c3 HAVING (NOT (x'')) UNION ALL SELECT ALL rt0.c2, rt0.c4, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c1, rt0.c3 HAVING ((x'') ISNULL);
SELECT rt0.c2, rt0.c4, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c1, rt0.c3;
SELECT ALL rt0.c2, rt0.c4, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c1, rt0.c3 HAVING x'' UNION ALL SELECT rt0.c2, rt0.c4, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c1, rt0.c3 HAVING (NOT (x'')) UNION ALL SELECT ALL rt0.c2, rt0.c4, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c1, rt0.c3 HAVING ((x'') ISNULL);
SELECT rt0.c2, rt0.c4, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c1, rt0.c3;
SELECT ALL rt0.c4, rt0.c0, rt0.c2 FROM rt0, v0;
SELECT rt0.c4, rt0.c0, rt0.c2 FROM rt0, v0 WHERE (((((((((rt0.c4)AND(rt0.c3)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)) COLLATE NOCASE) UNION ALL SELECT ALL rt0.c4, rt0.c0, rt0.c2 FROM rt0, v0 WHERE ((NOT (((((((((rt0.c4)AND(rt0.c3)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)) COLLATE NOCASE))) UNION ALL SELECT rt0.c4, rt0.c0, rt0.c2 FROM rt0, v0 WHERE (((((((((((rt0.c4)AND(rt0.c3)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)) COLLATE NOCASE) ISNULL));
SELECT ALL rt0.c4, rt0.c0, rt0.c2 FROM rt0, v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE BINARY) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE BINARY))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE BINARY) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL rt0.c4, rt0.c0, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c1, rt0.c3;
SELECT rt0.c4, rt0.c0, rt0.c1, rt0.c3 FROM rt0 WHERE (((((((((CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END)OR(rt0.c2)))OR(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c1)))))OR((rt0.c4 IN ()))))AND((((rt0.c4)) BETWEEN ((rt0.c0)) AND ((0.7375213474816879)))))) GROUP BY rt0.c4, rt0.c0, rt0.c1, rt0.c3 UNION SELECT rt0.c4, rt0.c0, rt0.c1, rt0.c3 FROM rt0 WHERE ((NOT (((((((((CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END)OR(rt0.c2)))OR(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c1)))))OR((rt0.c4 IN ()))))AND((((rt0.c4)) BETWEEN ((rt0.c0)) AND ((0.7375213474816879)))))))) GROUP BY rt0.c4, rt0.c0, rt0.c1, rt0.c3 UNION SELECT ALL rt0.c4, rt0.c0, rt0.c1, rt0.c3 FROM rt0 WHERE (((((((((((CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END)OR(rt0.c2)))OR(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c1)))))OR((rt0.c4 IN ()))))AND((((rt0.c4)) BETWEEN ((rt0.c0)) AND ((0.7375213474816879)))))) ISNULL)) GROUP BY rt0.c4, rt0.c0, rt0.c1, rt0.c3;
SELECT ALL rt0.c4, rt0.c0, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c1, rt0.c3;
SELECT ALL rt0.c4, v0.c0 FROM rt0, v0 GROUP BY rt0.c4, v0.c0;
SELECT ALL rt0.c4, v0.c0 FROM rt0, v0 GROUP BY rt0.c4, v0.c0 HAVING GROUP_CONCAT(CAST(AVG(SUM(v0.c0)) AS BLOB)) UNION ALL SELECT rt0.c4, v0.c0 FROM rt0, v0 GROUP BY rt0.c4, v0.c0 HAVING (NOT (GROUP_CONCAT(CAST(AVG(SUM(v0.c0)) AS BLOB)))) UNION ALL SELECT rt0.c4, v0.c0 FROM rt0, v0 GROUP BY rt0.c4, v0.c0 HAVING ((GROUP_CONCAT(CAST(AVG(SUM(v0.c0)) AS BLOB))) ISNULL);
SELECT ALL rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 WHEN -1.572140384E9 THEN rt0.c3 WHEN 0X6b346d97 THEN rt0.c2 ELSE rt0.c4 END) NOTNULL)) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 WHEN -1.572140384E9 THEN rt0.c3 WHEN 0x6b346d97 THEN rt0.c2 ELSE rt0.c4 END) NOTNULL)))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (((((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 WHEN -1.572140384E9 THEN rt0.c3 WHEN 0X6b346d97 THEN rt0.c2 ELSE rt0.c4 END) NOTNULL)) ISNULL));
SELECT ALL rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((v0.c0 IN ()) COLLATE RTRIM COLLATE RTRIM) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((v0.c0 IN ()) COLLATE RTRIM COLLATE RTRIM))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((v0.c0 IN ()) COLLATE RTRIM COLLATE RTRIM) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT rt0.c1 FROM rt0, v0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0, v0 WHERE (rt0.c3 COLLATE BINARY) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0, v0 WHERE ((NOT (rt0.c3 COLLATE BINARY))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0, v0 WHERE (((rt0.c3 COLLATE BINARY) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0, v0 GROUP BY rt0.c1;
SELECT rt0.c2, rt0.c3, rt0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c3, rt0.c0;
SELECT ALL rt0.c2, rt0.c3, rt0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c3, rt0.c0 HAVING (+ (CASE WHEN rt0.c4 THEN rt0.c3 END)) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c3, rt0.c0 HAVING (NOT ((+ (CASE WHEN rt0.c4 THEN rt0.c3 END)))) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c3, rt0.c0 HAVING (((+ (CASE WHEN rt0.c4 THEN rt0.c3 END))) ISNULL);
SELECT rt0.c2, rt0.c3, rt0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c3, rt0.c0;
SELECT ALL rt0.c2, rt0.c3, rt0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c3, rt0.c0 HAVING (+ (CASE WHEN rt0.c4 THEN rt0.c3 END)) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c3, rt0.c0 HAVING (NOT ((+ (CASE WHEN rt0.c4 THEN rt0.c3 END)))) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c3, rt0.c0 HAVING (((+ (CASE WHEN rt0.c4 THEN rt0.c3 END))) ISNULL);
SELECT rt0.c2, rt0.c3, rt0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c3, rt0.c0;
SELECT ALL * FROM rt0, v0;
SELECT ALL * FROM rt0, v0 WHERE ((((NULL)) NOT BETWEEN ((((((rt0.c2)AND(rt0.c4)))OR(rt0.c0)))) AND ((((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)))))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((NOT ((((NULL)) NOT BETWEEN ((((((rt0.c2)AND(rt0.c4)))OR(rt0.c0)))) AND ((((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)))))))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((((((NULL)) NOT BETWEEN ((((((rt0.c2)AND(rt0.c4)))OR(rt0.c0)))) AND ((((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)))))) ISNULL));
SELECT ALL * FROM rt0, v0;
SELECT DISTINCT * FROM v0 CROSS JOIN rt0 ON ((((v0.c0 COLLATE RTRIM)AND(rt0.c0)))OR(((rt0.c3) IS TRUE)));
SELECT DISTINCT * FROM v0 CROSS JOIN rt0 ON ((((v0.c0 COLLATE RTRIM)AND(rt0.c0)))OR(((rt0.c3) IS TRUE))) WHERE (((((((((((((((((((((rt0.c0)AND(rt0.c4)))OR(rt0.c0)))AND(CASE WHEN rt0.c1 THEN rt0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN rt0.c2 ELSE rt0.c2 END)))AND(v0.c0)))AND(((rt0.c3) BETWEEN (v0.c0) AND (v0.c0)))))OR(((((rt0.c4)AND(rt0.c1)))AND(rt0.c3)))))OR((((rt0.c4, 0X26859573, v0.c0))<((rt0.c0, rt0.c0, rt0.c2))))))OR(((rt0.c1) IS FALSE))))AND((rt0.c0 IN (rt0.c4)))))OR(CAST(rt0.c3 AS NUMERIC)))) UNION SELECT DISTINCT * FROM v0 CROSS JOIN rt0 ON ((((v0.c0 COLLATE RTRIM)AND(rt0.c0)))OR(((rt0.c3) IS TRUE))) WHERE ((NOT (((((((((((((((((((((rt0.c0)AND(rt0.c4)))OR(rt0.c0)))AND(CASE WHEN rt0.c1 THEN rt0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN rt0.c2 ELSE rt0.c2 END)))AND(v0.c0)))AND(((rt0.c3) BETWEEN (v0.c0) AND (v0.c0)))))OR(((((rt0.c4)AND(rt0.c1)))AND(rt0.c3)))))OR((((rt0.c4, 0X26859573, v0.c0))<((rt0.c0, rt0.c0, rt0.c2))))))OR(((rt0.c1) IS FALSE))))AND((rt0.c0 IN (rt0.c4)))))OR(CAST(rt0.c3 AS NUMERIC)))))) UNION SELECT DISTINCT * FROM v0 CROSS JOIN rt0 ON ((((v0.c0 COLLATE RTRIM)AND(rt0.c0)))OR(((rt0.c3) IS TRUE))) WHERE (((((((((((((((((((((((rt0.c0)AND(rt0.c4)))OR(rt0.c0)))AND(CASE WHEN rt0.c1 THEN rt0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN rt0.c2 ELSE rt0.c2 END)))AND(v0.c0)))AND(((rt0.c3) BETWEEN (v0.c0) AND (v0.c0)))))OR(((((rt0.c4)AND(rt0.c1)))AND(rt0.c3)))))OR((((rt0.c4, 0X26859573, v0.c0))<((rt0.c0, rt0.c0, rt0.c2))))))OR(((rt0.c1) IS FALSE))))AND((rt0.c0 IN (rt0.c4)))))OR(CAST(rt0.c3 AS NUMERIC)))) ISNULL));
SELECT DISTINCT * FROM v0 CROSS JOIN rt0 ON ((((v0.c0 COLLATE RTRIM)AND(rt0.c0)))OR(((rt0.c3) IS TRUE)));
SELECT rt0.c3, rt0.c1, v0.c0, rt0.c4, rt0.c0 FROM rt0, v0 GROUP BY rt0.c3, rt0.c1, v0.c0, rt0.c4, rt0.c0;
SELECT rt0.c3, rt0.c1, v0.c0, rt0.c4, rt0.c0 FROM rt0, v0 WHERE (GLOB(((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c2)), v0.c0)) GROUP BY rt0.c3, rt0.c1, v0.c0, rt0.c4, rt0.c0 UNION SELECT ALL rt0.c3, rt0.c1, v0.c0, rt0.c4, rt0.c0 FROM rt0, v0 WHERE ((NOT (GLOB(((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c2)), v0.c0)))) GROUP BY rt0.c3, rt0.c1, v0.c0, rt0.c4, rt0.c0 UNION SELECT ALL rt0.c3, rt0.c1, v0.c0, rt0.c4, rt0.c0 FROM rt0, v0 WHERE (((GLOB(((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c2)), v0.c0)) ISNULL)) GROUP BY rt0.c3, rt0.c1, v0.c0, rt0.c4, rt0.c0;
SELECT rt0.c3, rt0.c1, v0.c0, rt0.c4, rt0.c0 FROM rt0, v0 GROUP BY rt0.c3, rt0.c1, v0.c0, rt0.c4, rt0.c0;
SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c4, rt0.c1;
SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c4, rt0.c1 HAVING MAX(((rt0.c0)>=(rt0.c1))) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c0, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c4, rt0.c1 HAVING (NOT (MAX(((rt0.c0)>=(rt0.c1))))) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c4, rt0.c1 FROM rt0 NOT INDEXED GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c4, rt0.c1 HAVING ((MAX(((rt0.c0)>=(rt0.c1)))) ISNULL);
SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c4, rt0.c1;
SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c4, rt0.c1 HAVING MAX(((rt0.c0)>=(rt0.c1))) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c0, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c4, rt0.c1 HAVING (NOT (MAX(((rt0.c0)>=(rt0.c1))))) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c4, rt0.c1 FROM rt0 NOT INDEXED GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c4, rt0.c1 HAVING ((MAX(((rt0.c0)>=(rt0.c1)))) ISNULL);
SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c4, rt0.c1;
SELECT ALL * FROM rt0, v0;
SELECT * FROM rt0, v0 WHERE (IFNULL(DISTINCT rt0.c1, (rt0.c3 IN ()))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((NOT (IFNULL(DISTINCT rt0.c1, (rt0.c3 IN ()))))) UNION ALL SELECT * FROM rt0, v0 WHERE (((IFNULL(DISTINCT rt0.c1, (rt0.c3 IN ()))) ISNULL));
SELECT ALL * FROM rt0, v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((- (((v0.c0)>(v0.c0))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((- (((v0.c0)>(v0.c0))))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((- (((v0.c0)>(v0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (json_patch(((v0.c0)>(v0.c0)), ((((v0.c0)AND(v0.c0)))OR(v0.c0)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (json_patch(((v0.c0)>(v0.c0)), ((((v0.c0)AND(v0.c0)))OR(v0.c0)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((json_patch(((v0.c0)>(v0.c0)), ((((v0.c0)AND(v0.c0)))OR(v0.c0)))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c1, rt0.c4, rt0.c0, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c0, rt0.c3, rt0.c2;
SELECT rt0.c1, rt0.c4, rt0.c0, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c0, rt0.c3, rt0.c2 HAVING MIN(rt0.c2) COLLATE NOCASE UNION ALL SELECT rt0.c1, rt0.c4, rt0.c0, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c0, rt0.c3, rt0.c2 HAVING (NOT (MIN(rt0.c2) COLLATE NOCASE)) UNION ALL SELECT ALL rt0.c1, rt0.c4, rt0.c0, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c0, rt0.c3, rt0.c2 HAVING ((MIN(rt0.c2) COLLATE NOCASE) ISNULL);
SELECT rt0.c1, rt0.c4, rt0.c0, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c0, rt0.c3, rt0.c2;
SELECT rt0.c1, rt0.c4, rt0.c0, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c0, rt0.c3, rt0.c2 HAVING MIN(rt0.c2) COLLATE NOCASE UNION ALL SELECT rt0.c1, rt0.c4, rt0.c0, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c0, rt0.c3, rt0.c2 HAVING (NOT (MIN(rt0.c2) COLLATE NOCASE)) UNION ALL SELECT ALL rt0.c1, rt0.c4, rt0.c0, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c0, rt0.c3, rt0.c2 HAVING ((MIN(rt0.c2) COLLATE NOCASE) ISNULL);
SELECT rt0.c1, rt0.c4, rt0.c0, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c0, rt0.c3, rt0.c2;
SELECT TOTAL(((((0.6396743699057537)%(v0.c0)))+(CASE WHEN rt0.c2 THEN NULL END))) FROM v0 NOT INDEXED, rt0 ORDER BY (((rt0.c0))<((rt0.c4))) COLLATE RTRIM, ('{}' IN ()), ((rt0.c2)||(rt0.c3)) COLLATE BINARY;
SELECT rt0.c1 FROM v0, rt0;
SELECT rt0.c1 FROM v0, rt0 WHERE (((((((rt0.c4)AND(rt0.c2)))AND(rt0.c4))) NOT BETWEEN (rt0.c3 COLLATE RTRIM) AND (TRIM(DISTINCT rt0.c4)))) UNION ALL SELECT rt0.c1 FROM v0, rt0 WHERE ((NOT (((((((rt0.c4)AND(rt0.c2)))AND(rt0.c4))) NOT BETWEEN (rt0.c3 COLLATE RTRIM) AND (TRIM(DISTINCT rt0.c4)))))) UNION ALL SELECT rt0.c1 FROM v0, rt0 WHERE (((((((((rt0.c4)AND(rt0.c2)))AND(rt0.c4))) NOT BETWEEN (rt0.c3 COLLATE RTRIM) AND (TRIM(DISTINCT rt0.c4)))) ISNULL));
SELECT rt0.c1 FROM v0, rt0;
SELECT DISTINCT rt0.c3 FROM rt0, v0;
SELECT DISTINCT rt0.c3 FROM rt0, v0 NOT INDEXED WHERE (CASE WHEN ((rt0.c2)LIKE(v0.c0)) THEN rt0.c1 COLLATE RTRIM ELSE ((v0.c0) IS TRUE) END) UNION SELECT DISTINCT rt0.c3 FROM rt0, v0 WHERE ((NOT (CASE WHEN ((rt0.c2)LIKE(v0.c0)) THEN rt0.c1 COLLATE RTRIM ELSE ((v0.c0) IS TRUE) END))) UNION SELECT DISTINCT rt0.c3 FROM rt0, v0 WHERE (((CASE WHEN ((rt0.c2)LIKE(v0.c0)) THEN rt0.c1 COLLATE RTRIM ELSE ((v0.c0) IS TRUE) END) ISNULL));
SELECT DISTINCT rt0.c3 FROM rt0, v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((((38427469)AND(((v0.c0) IS TRUE))))AND(LIKELY(v0.c0)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((38427469)AND(((v0.c0) IS TRUE))))AND(LIKELY(v0.c0)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((((38427469)AND(((v0.c0) IS TRUE))))AND(LIKELY(v0.c0)))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c4, rt0.c3, rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN v0 ON (((NOT (rt0.c2))) BETWEEN ((NOT ('1518963711'))) AND (((rt0.c4) ISNULL))) GROUP BY rt0.c4, rt0.c3, rt0.c2, v0.c0, rt0.c0, rt0.c1;
SELECT ALL rt0.c4, rt0.c3, rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN v0 ON (((NOT (rt0.c2))) BETWEEN ((NOT ('1518963711'))) AND (((rt0.c4) ISNULL))) GROUP BY rt0.c4, rt0.c3, rt0.c2, v0.c0, rt0.c0, rt0.c1 HAVING TOTAL(SUM(rt0.c0)) UNION ALL SELECT ALL rt0.c4, rt0.c3, rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN v0 ON (((NOT (rt0.c2))) BETWEEN ((NOT ('1518963711'))) AND (((rt0.c4) ISNULL))) GROUP BY rt0.c4, rt0.c3, rt0.c2, v0.c0, rt0.c0, rt0.c1 HAVING (NOT (TOTAL(SUM(rt0.c0)))) UNION ALL SELECT rt0.c4, rt0.c3, rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN v0 ON (((NOT (rt0.c2))) BETWEEN ((NOT ('1518963711'))) AND (((rt0.c4) ISNULL))) GROUP BY rt0.c4, rt0.c3, rt0.c2, v0.c0, rt0.c0, rt0.c1 HAVING ((TOTAL(SUM(rt0.c0))) ISNULL);
SELECT rt0.c2 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 WHERE ((((((0.5421376773316013, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c3, rt0.c2, rt0.c1)) AND ((rt0.c4, rt0.c0, rt0.c2)))) NOT BETWEEN (HEX(DISTINCT NULL)) AND ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT ((((((0.5421376773316013, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c3, rt0.c2, rt0.c1)) AND ((rt0.c4, rt0.c0, rt0.c2)))) NOT BETWEEN (HEX(DISTINCT NULL)) AND ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))))))) UNION ALL SELECT rt0.c2 FROM rt0 WHERE ((((((((0.5421376773316013, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c3, rt0.c2, rt0.c1)) AND ((rt0.c4, rt0.c0, rt0.c2)))) NOT BETWEEN (HEX(DISTINCT NULL)) AND ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))))) ISNULL));
SELECT rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (0.9228995003982815) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (0.9228995003982815))) UNION SELECT DISTINCT * FROM rt0 WHERE (((0.9228995003982815) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0, rt0.c2, v0.c0 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c0, rt0.c2, v0.c0;
SELECT rt0.c0, rt0.c2, v0.c0 FROM rt0 NATURAL JOIN v0 WHERE (CASE TYPEOF(rt0.c0)  WHEN CAST(rt0.c3 AS INTEGER) THEN (v0.c0 IN (v0.c0)) END) GROUP BY rt0.c0, rt0.c2, v0.c0 UNION SELECT ALL rt0.c0, rt0.c2, v0.c0 FROM rt0 NATURAL JOIN v0 WHERE ((NOT (CASE TYPEOF(rt0.c0)  WHEN CAST(rt0.c3 AS INTEGER) THEN (v0.c0 IN (v0.c0)) END))) GROUP BY rt0.c0, rt0.c2, v0.c0 UNION SELECT rt0.c0, rt0.c2, v0.c0 FROM rt0 NATURAL JOIN v0 WHERE (((CASE TYPEOF(rt0.c0)  WHEN CAST(rt0.c3 AS INTEGER) THEN (v0.c0 IN (v0.c0)) END) ISNULL)) GROUP BY rt0.c0, rt0.c2, v0.c0;
SELECT rt0.c0, rt0.c2, v0.c0 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c0, rt0.c2, v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING MAX(((((v0.c0)OR(v0.c0)))OR(v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MAX(((((v0.c0)OR(v0.c0)))OR(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MAX(((((v0.c0)OR(v0.c0)))OR(v0.c0)))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING MAX(((((v0.c0)OR(v0.c0)))OR(v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MAX(((((v0.c0)OR(v0.c0)))OR(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MAX(((((v0.c0)OR(v0.c0)))OR(v0.c0)))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE (((((((v0.c0)AND(v0.c0)))AND((v0.c0 IN ()))))OR(((v0.c0)||(v0.c0))))) UNION ALL SELECT * FROM v0 WHERE ((NOT (((((((v0.c0)AND(v0.c0)))AND((v0.c0 IN ()))))OR(((v0.c0)||(v0.c0))))))) UNION ALL SELECT ALL * FROM v0 WHERE (((((((((v0.c0)AND(v0.c0)))AND((v0.c0 IN ()))))OR(((v0.c0)||(v0.c0))))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT rt0.c4 FROM rt0;
SELECT DISTINCT rt0.c4 FROM rt0 WHERE (CASE WHEN ABS(DISTINCT x'') THEN (((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c3))) ELSE CAST(rt0.c2 AS BLOB) END) UNION SELECT DISTINCT rt0.c4 FROM rt0 WHERE ((NOT (CASE WHEN ABS(DISTINCT x'') THEN (((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c3))) ELSE CAST(rt0.c2 AS BLOB) END))) UNION SELECT DISTINCT rt0.c4 FROM rt0 WHERE (((CASE WHEN ABS(DISTINCT x'') THEN (((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c3))) ELSE CAST(rt0.c2 AS BLOB) END) ISNULL));
SELECT DISTINCT rt0.c4 FROM rt0;
SELECT ALL rt0.c3, rt0.c0, v0.c0, rt0.c1, rt0.c2 FROM rt0 NOT INDEXED, v0 GROUP BY rt0.c3, rt0.c0, v0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c3, rt0.c0, v0.c0, rt0.c1, rt0.c2 FROM rt0, v0 WHERE (CASE WHEN (NOT (rt0.c2)) THEN (rt0.c0 IN (v0.c0)) ELSE ((rt0.c3) NOTNULL) END) GROUP BY rt0.c3, rt0.c0, v0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c3, rt0.c0, v0.c0, rt0.c1, rt0.c2 FROM rt0, v0 WHERE ((NOT (CASE WHEN (NOT (rt0.c2)) THEN (rt0.c0 IN (v0.c0)) ELSE ((rt0.c3) NOTNULL) END))) GROUP BY rt0.c3, rt0.c0, v0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c3, rt0.c0, v0.c0, rt0.c1, rt0.c2 FROM rt0, v0 WHERE (((CASE WHEN (NOT (rt0.c2)) THEN (rt0.c0 IN (v0.c0)) ELSE ((rt0.c3) NOTNULL) END) ISNULL)) GROUP BY rt0.c3, rt0.c0, v0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c3, rt0.c0, v0.c0, rt0.c1, rt0.c2 FROM rt0 NOT INDEXED, v0 GROUP BY rt0.c3, rt0.c0, v0.c0, rt0.c1, rt0.c2;
SELECT rt0.c4, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c1;
SELECT ALL rt0.c4, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c1 HAVING TOTAL('-304853113') UNION ALL SELECT ALL rt0.c4, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c1 HAVING (NOT (TOTAL('-304853113'))) UNION ALL SELECT ALL rt0.c4, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c1 HAVING ((TOTAL('-304853113')) ISNULL);
SELECT rt0.c4, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c1;
SELECT ALL rt0.c4, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c1 HAVING TOTAL('-304853113') UNION ALL SELECT ALL rt0.c4, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c1 HAVING (NOT (TOTAL('-304853113'))) UNION ALL SELECT ALL rt0.c4, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c1 HAVING ((TOTAL('-304853113')) ISNULL);
SELECT rt0.c4, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c1;
SELECT TOTAL(560342736) FROM rt0, v0;
SELECT ALL * FROM v0, rt0;
SELECT * FROM v0, rt0 WHERE (5.60342736E8) UNION ALL SELECT * FROM v0, rt0 WHERE ((NOT (5.60342736E8))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE (((5.60342736E8) ISNULL));
SELECT ALL * FROM v0, rt0;
SELECT DISTINCT rt0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c2 FROM rt0 WHERE (((((CAST(rt0.c4 AS REAL))OR(CAST(rt0.c1 AS INTEGER))))AND(((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c1))))) UNION SELECT DISTINCT rt0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c2 FROM rt0 WHERE ((NOT (((((CAST(rt0.c4 AS REAL))OR(CAST(rt0.c1 AS INTEGER))))AND(((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c1))))))) UNION SELECT DISTINCT rt0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c2 FROM rt0 WHERE (((((((CAST(rt0.c4 AS REAL))OR(CAST(rt0.c1 AS INTEGER))))AND(((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c2 FROM rt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((((((((((((v0.c0 COLLATE NOCASE)AND((~ (v0.c0)))))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))AND(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)))AND((((x'', v0.c0, v0.c0))<((v0.c0, v0.c0, v0.c0))))))AND(((v0.c0)LIKE(v0.c0)))))OR(((v0.c0) IS FALSE)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((((((((((((v0.c0 COLLATE NOCASE)AND((~ (v0.c0)))))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))AND(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)))AND((((x'', v0.c0, v0.c0))<((v0.c0, v0.c0, v0.c0))))))AND(((v0.c0)LIKE(v0.c0)))))OR(((v0.c0) IS FALSE)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((((((((((((v0.c0 COLLATE NOCASE)AND((~ (v0.c0)))))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))AND(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)))AND((((x'', v0.c0, v0.c0))<((v0.c0, v0.c0, v0.c0))))))AND(((v0.c0)LIKE(v0.c0)))))OR(((v0.c0) IS FALSE)))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING TOTAL(v0.c0) COLLATE BINARY UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TOTAL(v0.c0) COLLATE BINARY)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL(v0.c0) COLLATE BINARY) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING TOTAL(v0.c0) COLLATE BINARY UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TOTAL(v0.c0) COLLATE BINARY)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL(v0.c0) COLLATE BINARY) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL MIN(TYPEOF(((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c3)))) FROM v0, rt0;
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (TRIM(DISTINCT (v0.c0 IN (v0.c0, v0.c0)))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (TRIM(DISTINCT (v0.c0 IN (v0.c0, v0.c0)))))) UNION ALL SELECT * FROM v0 WHERE (((TRIM(DISTINCT (v0.c0 IN (v0.c0, v0.c0)))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT rt0.c3, rt0.c0, rt0.c4 FROM rt0, v0;
SELECT DISTINCT rt0.c3, rt0.c0, rt0.c4 FROM rt0, v0 WHERE ((((rt0.c4)) NOT BETWEEN ((CASE rt0.c3  WHEN v0.c0 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c2 END)) AND (((NOT (rt0.c0)))))) UNION SELECT DISTINCT rt0.c3, rt0.c0, rt0.c4 FROM rt0, v0 WHERE ((NOT ((((rt0.c4)) NOT BETWEEN ((CASE rt0.c3  WHEN v0.c0 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c2 END)) AND (((NOT (rt0.c0)))))))) UNION SELECT DISTINCT rt0.c3, rt0.c0, rt0.c4 FROM rt0, v0 WHERE ((((((rt0.c4)) NOT BETWEEN ((CASE rt0.c3  WHEN v0.c0 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c2 END)) AND (((NOT (rt0.c0)))))) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c0, rt0.c4 FROM rt0, v0;
SELECT rt0.c2 FROM rt0, v0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, v0 WHERE (rt0.c3) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0, v0 WHERE ((NOT (rt0.c3))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0, v0 WHERE (((rt0.c3) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, v0 GROUP BY rt0.c2;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING GROUP_CONCAT(TYPEOF(DISTINCT v0.c0)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (GROUP_CONCAT(TYPEOF(DISTINCT v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((GROUP_CONCAT(TYPEOF(DISTINCT v0.c0))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING GROUP_CONCAT(TYPEOF(DISTINCT v0.c0)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (GROUP_CONCAT(TYPEOF(DISTINCT v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((GROUP_CONCAT(TYPEOF(DISTINCT v0.c0))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c3)<(rt0.c0)) AS BLOB)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CAST(((rt0.c3)<(rt0.c0)) AS BLOB)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((CAST(((rt0.c3)<(rt0.c0)) AS BLOB)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE (((HEX(rt0.c0))>=(((rt0.c3)<>(rt0.c4))))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((HEX(rt0.c0))>=(((rt0.c3)<>(rt0.c4))))))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE (((((HEX(rt0.c0))>=(((rt0.c3)!=(rt0.c4))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (CASE (- (v0.c0))  WHEN ((v0.c0)+(v0.c0)) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) WHEN CAST(v0.c0 AS REAL) THEN ((((((((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)) WHEN v0.c0 COLLATE BINARY THEN (((v0.c0))=((v0.c0))) END) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (CASE (- (v0.c0))  WHEN ((v0.c0)+(v0.c0)) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) WHEN CAST(v0.c0 AS REAL) THEN ((((((((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)) WHEN v0.c0 COLLATE BINARY THEN (((v0.c0))==((v0.c0))) END))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((CASE (- (v0.c0))  WHEN ((v0.c0)+(v0.c0)) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) WHEN CAST(v0.c0 AS REAL) THEN ((((((((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)) WHEN v0.c0 COLLATE BINARY THEN (((v0.c0))==((v0.c0))) END) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2 HAVING (((rt0.c3 IN ()))<(TOTAL('EBTf\r_q1}'))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT ((((rt0.c3 IN ()))<(TOTAL('EBTf\r_q1}'))))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2 HAVING (((((rt0.c3 IN ()))<(TOTAL('EBTf\r_q1}')))) ISNULL);
SELECT rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2 HAVING (((rt0.c3 IN ()))<(TOTAL('EBTf\r_q1}'))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT ((((rt0.c3 IN ()))<(TOTAL('EBTf\r_q1}'))))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2 HAVING (((((rt0.c3 IN ()))<(TOTAL('EBTf\r_q1}')))) ISNULL);
SELECT rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL * FROM v0 INNER JOIN rt0 ON (((rt0.c0)) NOT BETWEEN ((((rt0.c2)-(v0.c0)))) AND ((((v0.c0) BETWEEN (x'') AND (rt0.c4)))));
SELECT ALL * FROM v0 INNER JOIN rt0 ON (((rt0.c0)) NOT BETWEEN ((((rt0.c2)-(v0.c0)))) AND ((((v0.c0) BETWEEN (x'') AND (rt0.c4))))) WHERE (((rt0.c0 COLLATE RTRIM)IS NOT(rt0.c1 COLLATE BINARY))) UNION ALL SELECT ALL * FROM v0 INNER JOIN rt0 ON (((rt0.c0)) NOT BETWEEN ((((rt0.c2)-(v0.c0)))) AND ((((v0.c0) BETWEEN (x'') AND (rt0.c4))))) WHERE ((NOT (((rt0.c0 COLLATE RTRIM)IS NOT(rt0.c1 COLLATE BINARY))))) UNION ALL SELECT ALL * FROM v0 INNER JOIN rt0 ON (((rt0.c0)) NOT BETWEEN ((((rt0.c2)-(v0.c0)))) AND ((((v0.c0) BETWEEN (x'') AND (rt0.c4))))) WHERE (((((rt0.c0 COLLATE RTRIM)IS NOT(rt0.c1 COLLATE BINARY))) ISNULL));
SELECT ALL * FROM v0 INNER JOIN rt0 ON (((rt0.c0)) NOT BETWEEN ((((rt0.c2)-(v0.c0)))) AND ((((v0.c0) BETWEEN (x'') AND (rt0.c4)))));
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c3 END COLLATE BINARY) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c3 END COLLATE BINARY))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c3 END COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1, v0.c0, rt0.c3, rt0.c2, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, v0.c0, rt0.c3, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, v0.c0, rt0.c3, rt0.c2, rt0.c0 FROM v0, rt0 WHERE (0.6181645581791771) GROUP BY rt0.c1, v0.c0, rt0.c3, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, v0.c0, rt0.c3, rt0.c2, rt0.c0 FROM v0, rt0 WHERE ((NOT (0.6181645581791771))) GROUP BY rt0.c1, v0.c0, rt0.c3, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, v0.c0, rt0.c3, rt0.c2, rt0.c0 FROM v0, rt0 WHERE (((0.6181645581791771) ISNULL)) GROUP BY rt0.c1, v0.c0, rt0.c3, rt0.c2, rt0.c0;
SELECT rt0.c1, v0.c0, rt0.c3, rt0.c2, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, v0.c0, rt0.c3, rt0.c2, rt0.c0;
SELECT ALL rt0.c4 FROM rt0, v0 GROUP BY rt0.c4;
SELECT rt0.c4 FROM rt0, v0 GROUP BY rt0.c4 HAVING ((((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c4))) IS TRUE) UNION ALL SELECT ALL rt0.c4 FROM rt0, v0 GROUP BY rt0.c4 HAVING (NOT (((((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c4))) IS TRUE))) UNION ALL SELECT rt0.c4 FROM rt0, v0 GROUP BY rt0.c4 HAVING ((((((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c4))) IS TRUE)) ISNULL);
SELECT ALL rt0.c4 FROM rt0, v0 GROUP BY rt0.c4;
SELECT rt0.c4 FROM rt0, v0 GROUP BY rt0.c4 HAVING ((((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c4))) IS TRUE) UNION ALL SELECT ALL rt0.c4 FROM rt0, v0 GROUP BY rt0.c4 HAVING (NOT (((((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c4))) IS TRUE))) UNION ALL SELECT rt0.c4 FROM rt0, v0 GROUP BY rt0.c4 HAVING ((((((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c4))) IS TRUE)) ISNULL);
SELECT ALL rt0.c4 FROM rt0, v0 GROUP BY rt0.c4;
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (v0.c0) ORDER BY ((((((((((v0.c0)LIKE(v0.c0)))AND(v0.c0)))AND('4\n矷')))OR(((((v0.c0)AND(v0.c0)))AND(v0.c0)))))OR(0.597687488083365)), LIKELIHOOD(v0.c0, 0.9365097681670946) DESC;
SELECT ALL * FROM v0 WHERE ((NOT (v0.c0))) ORDER BY ((((((((((v0.c0)LIKE(v0.c0)))AND(v0.c0)))AND('4\n矷')))OR(((((v0.c0)AND(v0.c0)))AND(v0.c0)))))OR(0.597687488083365)), LIKELIHOOD(v0.c0, 0.9365097681670946) DESC;
SELECT * FROM v0 WHERE (((v0.c0) ISNULL)) ORDER BY ((((((((((v0.c0)LIKE(v0.c0)))AND(v0.c0)))AND('4\n矷')))OR(((((v0.c0)AND(v0.c0)))AND(v0.c0)))))OR(0.597687488083365)), LIKELIHOOD(v0.c0, 0.9365097681670946) DESC;
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (CAST((v0.c0 IN ()) AS INTEGER)) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (CAST((v0.c0 IN ()) AS INTEGER)))) UNION SELECT DISTINCT * FROM v0 WHERE (((CAST((v0.c0 IN ()) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ('0.26015324657829797') GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ('0.26015324657829797'))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((('0.26015324657829797') ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c1, rt0.c4, rt0.c3 FROM rt0, v0 GROUP BY rt0.c1, rt0.c4, rt0.c3;
SELECT ALL rt0.c1, rt0.c4, rt0.c3 FROM rt0, v0 NOT INDEXED GROUP BY rt0.c1, rt0.c4, rt0.c3 HAVING CAST(GROUP_CONCAT(v0.c0) AS REAL) UNION ALL SELECT ALL rt0.c1, rt0.c4, rt0.c3 FROM rt0, v0 GROUP BY rt0.c1, rt0.c4, rt0.c3 HAVING (NOT (CAST(GROUP_CONCAT(v0.c0) AS REAL))) UNION ALL SELECT rt0.c1, rt0.c4, rt0.c3 FROM rt0, v0 GROUP BY rt0.c1, rt0.c4, rt0.c3 HAVING ((CAST(GROUP_CONCAT(v0.c0) AS REAL)) ISNULL);
SELECT rt0.c1, rt0.c4, rt0.c3 FROM rt0, v0 GROUP BY rt0.c1, rt0.c4, rt0.c3;
SELECT ALL rt0.c1, rt0.c4, rt0.c3 FROM rt0, v0 NOT INDEXED GROUP BY rt0.c1, rt0.c4, rt0.c3 HAVING CAST(GROUP_CONCAT(v0.c0) AS REAL) UNION ALL SELECT ALL rt0.c1, rt0.c4, rt0.c3 FROM rt0, v0 GROUP BY rt0.c1, rt0.c4, rt0.c3 HAVING (NOT (CAST(GROUP_CONCAT(v0.c0) AS REAL))) UNION ALL SELECT rt0.c1, rt0.c4, rt0.c3 FROM rt0, v0 GROUP BY rt0.c1, rt0.c4, rt0.c3 HAVING ((CAST(GROUP_CONCAT(v0.c0) AS REAL)) ISNULL);
SELECT rt0.c1, rt0.c4, rt0.c3 FROM rt0, v0 GROUP BY rt0.c1, rt0.c4, rt0.c3;
SELECT MAX(NULL) FROM rt0, v0 ORDER BY ((((((rt0.c0)+(rt0.c3)))OR(v0.c0 COLLATE BINARY)))OR(CAST(rt0.c0 AS TEXT))) DESC  NULLS FIRST;
SELECT ALL rt0.c4, rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM rt0;
SELECT ALL rt0.c4, rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM rt0 WHERE ('1633679985') UNION ALL SELECT ALL rt0.c4, rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM rt0 WHERE ((NOT ('1633679985'))) UNION ALL SELECT rt0.c4, rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM rt0 WHERE ((('1633679985') ISNULL));
SELECT ALL rt0.c4, rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE (CASE rt0.c4 COLLATE BINARY  WHEN '݈dc9EFx' THEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c3)) ELSE ((rt0.c3) NOT BETWEEN (1.925781194E9) AND (rt0.c1)) END) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT (CASE rt0.c4 COLLATE BINARY  WHEN '݈dc9EFx' THEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c3)) ELSE ((rt0.c3) NOT BETWEEN (1.925781194E9) AND (rt0.c1)) END))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((CASE rt0.c4 COLLATE BINARY  WHEN '݈dc9EFx' THEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c3)) ELSE ((rt0.c3) NOT BETWEEN (1.925781194E9) AND (rt0.c1)) END) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT ALL rt0.c4, rt0.c3, rt0.c2, v0.c0, rt0.c0 FROM rt0 RIGHT OUTER JOIN v0 ON COALESCE(DISTINCT v0.c0, v0.c0) COLLATE NOCASE GROUP BY rt0.c4, rt0.c3, rt0.c2, v0.c0, rt0.c0;
SELECT rt0.c4, rt0.c3, rt0.c2, v0.c0, rt0.c0 FROM rt0 RIGHT OUTER JOIN v0 ON COALESCE(DISTINCT v0.c0, v0.c0) COLLATE NOCASE WHERE (CASE WHEN ((rt0.c3)AND(x'')) THEN CASE rt0.c4  WHEN rt0.c1 THEN rt0.c3 END END) GROUP BY rt0.c4, rt0.c3, rt0.c2, v0.c0, rt0.c0 UNION SELECT rt0.c4, rt0.c3, rt0.c2, v0.c0, rt0.c0 FROM rt0 RIGHT OUTER JOIN v0 ON COALESCE(DISTINCT v0.c0, v0.c0) COLLATE NOCASE WHERE ((NOT (CASE WHEN ((rt0.c3)AND(x'')) THEN CASE rt0.c4  WHEN rt0.c1 THEN rt0.c3 END END))) GROUP BY rt0.c4, rt0.c3, rt0.c2, v0.c0, rt0.c0 UNION SELECT ALL rt0.c4, rt0.c3, rt0.c2, v0.c0, rt0.c0 FROM rt0 RIGHT OUTER JOIN v0 ON COALESCE(DISTINCT v0.c0, v0.c0) COLLATE NOCASE WHERE (((CASE WHEN ((rt0.c3)AND(x'')) THEN CASE rt0.c4  WHEN rt0.c1 THEN rt0.c3 END END) ISNULL)) GROUP BY rt0.c4, rt0.c3, rt0.c2, v0.c0, rt0.c0;
SELECT ALL rt0.c4, rt0.c3, rt0.c2, v0.c0, rt0.c0 FROM rt0 RIGHT OUTER JOIN v0 ON COALESCE(DISTINCT v0.c0, v0.c0) COLLATE NOCASE GROUP BY rt0.c4, rt0.c3, rt0.c2, v0.c0, rt0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING CASE WHEN (((TOTAL(COUNT(v0.c0))))>=((v0.c0))) THEN (MIN(GROUP_CONCAT(SUM(v0.c0))) IN ()) END UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (CASE WHEN (((TOTAL(COUNT(v0.c0))))>=((v0.c0))) THEN (MIN(GROUP_CONCAT(SUM(v0.c0))) IN ()) END)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((CASE WHEN (((TOTAL(COUNT(v0.c0))))>=((v0.c0))) THEN (MIN(GROUP_CONCAT(SUM(v0.c0))) IN ()) END) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((rt0.c1) ISNULL) COLLATE BINARY) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((rt0.c1) ISNULL) COLLATE BINARY))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((rt0.c1) ISNULL) COLLATE BINARY) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((((~ (v0.c0)))<<(v0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((((~ (v0.c0)))<<(v0.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((~ (v0.c0)))<<(v0.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL rt0.c3, rt0.c1, v0.c0, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c3, rt0.c1, v0.c0, rt0.c0, rt0.c2;
SELECT rt0.c3, rt0.c1, v0.c0, rt0.c0, rt0.c2 FROM v0, rt0 WHERE (((((((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c0)))AND((v0.c0 IN ()))))OR(((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c1))))) GROUP BY rt0.c3, rt0.c1, v0.c0, rt0.c0, rt0.c2 UNION SELECT rt0.c3, rt0.c1, v0.c0, rt0.c0, rt0.c2 FROM v0, rt0 WHERE ((NOT (((((((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c0)))AND((v0.c0 IN ()))))OR(((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c1))))))) GROUP BY rt0.c3, rt0.c1, v0.c0, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c3, rt0.c1, v0.c0, rt0.c0, rt0.c2 FROM v0, rt0 WHERE (((((((((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c0)))AND((v0.c0 IN ()))))OR(((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c1))))) ISNULL)) GROUP BY rt0.c3, rt0.c1, v0.c0, rt0.c0, rt0.c2;
SELECT ALL rt0.c3, rt0.c1, v0.c0, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c3, rt0.c1, v0.c0, rt0.c0, rt0.c2;
SELECT rt0.c3, rt0.c4, rt0.c1, rt0.c0 FROM v0, rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1, rt0.c0;
SELECT ALL rt0.c3, rt0.c4, rt0.c1, rt0.c0 FROM v0 NOT INDEXED, rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1, rt0.c0 HAVING ((((((rt0.c4) NOTNULL))AND(COUNT(MIN(rt0.c2)))))AND(((rt0.c0)IS NOT(MIN(AVG(SUM(rt0.c3))))))) UNION ALL SELECT rt0.c3, rt0.c4, rt0.c1, rt0.c0 FROM v0, rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1, rt0.c0 HAVING (NOT (((((((rt0.c4) NOTNULL))AND(COUNT(MIN(rt0.c2)))))AND(((rt0.c0)IS NOT(MIN(AVG(SUM(rt0.c3))))))))) UNION ALL SELECT ALL rt0.c3, rt0.c4, rt0.c1, rt0.c0 FROM v0, rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1, rt0.c0 HAVING ((((((((rt0.c4) NOTNULL))AND(COUNT(MIN(rt0.c2)))))AND(((rt0.c0)IS NOT(MIN(AVG(SUM(rt0.c3)))))))) ISNULL);
SELECT rt0.c1, rt0.c2 FROM rt0, v0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0, v0 WHERE (((((v0.c0) BETWEEN (rt0.c3) AND (rt0.c3))) BETWEEN (rt0.c4) AND (((rt0.c1)IS(rt0.c2))))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0, v0 WHERE ((NOT (((((v0.c0) BETWEEN (rt0.c3) AND (rt0.c3))) BETWEEN (rt0.c4) AND (((rt0.c1)IS(rt0.c2))))))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0, v0 WHERE (((((((v0.c0) BETWEEN (rt0.c3) AND (rt0.c3))) BETWEEN (rt0.c4) AND (((rt0.c1)IS(rt0.c2))))) ISNULL));
SELECT rt0.c1, rt0.c2 FROM rt0, v0;
SELECT DISTINCT rt0.c1, v0.c0 FROM v0, rt0;
SELECT DISTINCT rt0.c1, v0.c0 FROM v0, rt0 WHERE ((((v0.c0)) BETWEEN ((CASE 'K[駆87}&be'  WHEN rt0.c0 THEN x'619a' ELSE v0.c0 END)) AND ((rt0.c1 COLLATE RTRIM)))) UNION SELECT DISTINCT rt0.c1, v0.c0 FROM v0, rt0 WHERE ((NOT ((((v0.c0)) BETWEEN ((CASE 'K[駆87}&be'  WHEN rt0.c0 THEN x'619a' ELSE v0.c0 END)) AND ((rt0.c1 COLLATE RTRIM)))))) UNION SELECT DISTINCT rt0.c1, v0.c0 FROM v0, rt0 WHERE ((((((v0.c0)) BETWEEN ((CASE 'K[駆87}&be'  WHEN rt0.c0 THEN x'619a' ELSE v0.c0 END)) AND ((rt0.c1 COLLATE RTRIM)))) ISNULL));
SELECT DISTINCT rt0.c1, v0.c0 FROM v0, rt0;
SELECT rt0.c2, rt0.c4, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c0, rt0.c3;
SELECT rt0.c2, rt0.c4, rt0.c0, rt0.c3 FROM rt0 WHERE ('-997534243') GROUP BY rt0.c2, rt0.c4, rt0.c0, rt0.c3 UNION SELECT rt0.c2, rt0.c4, rt0.c0, rt0.c3 FROM rt0 WHERE ((NOT ('-997534243'))) GROUP BY rt0.c2, rt0.c4, rt0.c0, rt0.c3 UNION SELECT ALL rt0.c2, rt0.c4, rt0.c0, rt0.c3 FROM rt0 WHERE ((('-997534243') ISNULL)) GROUP BY rt0.c2, rt0.c4, rt0.c0, rt0.c3;
SELECT rt0.c2, rt0.c4, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c0, rt0.c3;
SELECT ALL rt0.c0 FROM v0, rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM v0, rt0 GROUP BY rt0.c0 HAVING COUNT(((((TOTAL(COUNT(TOTAL(COUNT(COUNT(*))))))OR(x'cfa89008')))OR(1.025064381E9))) UNION ALL SELECT ALL rt0.c0 FROM v0, rt0 GROUP BY rt0.c0 HAVING (NOT (COUNT(((((TOTAL(COUNT(TOTAL(COUNT(COUNT(*))))))OR(x'cfa89008')))OR(1.025064381E9))))) UNION ALL SELECT rt0.c0 FROM v0, rt0 GROUP BY rt0.c0 HAVING ((COUNT(((((TOTAL(COUNT(TOTAL(COUNT(COUNT(*))))))OR(x'cfa89008')))OR(1.025064381E9)))) ISNULL);
SELECT * FROM rt0, v0;
SELECT ALL * FROM rt0, v0 WHERE (((((rt0.c2 COLLATE RTRIM)OR((rt0.c2 IN ()))))AND((NOT ('2123835834'))))) UNION ALL SELECT * FROM rt0, v0 WHERE ((NOT (((((rt0.c2 COLLATE RTRIM)OR((rt0.c2 IN ()))))AND((NOT ('2123835834'))))))) UNION ALL SELECT * FROM rt0, v0 WHERE (((((((rt0.c2 COLLATE RTRIM)OR((rt0.c2 IN ()))))AND((NOT ('2123835834'))))) ISNULL));
SELECT * FROM rt0, v0;
SELECT DISTINCT rt0.c3 FROM v0 RIGHT OUTER JOIN rt0 ON (((((rt0.c0, rt0.c4, rt0.c0)) BETWEEN ((x'', rt0.c0, rt0.c0)) AND ((rt0.c4, rt0.c0, rt0.c4))))-(((v0.c0)>>(rt0.c0))));
SELECT DISTINCT rt0.c3 FROM v0 RIGHT OUTER JOIN rt0 ON (((((rt0.c0, rt0.c4, rt0.c0)) BETWEEN ((x'', rt0.c0, rt0.c0)) AND ((rt0.c4, rt0.c0, rt0.c4))))-(((v0.c0)>>(rt0.c0)))) WHERE ((((((rt0.c0, rt0.c2, rt0.c4)) NOT BETWEEN ((rt0.c4, rt0.c4, NULL)) AND ((rt0.c4, rt0.c0, rt0.c3)))) IS TRUE)) UNION SELECT DISTINCT rt0.c3 FROM v0 RIGHT OUTER JOIN rt0 ON (((((rt0.c0, rt0.c4, rt0.c0)) BETWEEN ((x'', rt0.c0, rt0.c0)) AND ((rt0.c4, rt0.c0, rt0.c4))))-(((v0.c0)>>(rt0.c0)))) WHERE ((NOT ((((((rt0.c0, rt0.c2, rt0.c4)) NOT BETWEEN ((rt0.c4, rt0.c4, NULL)) AND ((rt0.c4, rt0.c0, rt0.c3)))) IS TRUE)))) UNION SELECT DISTINCT rt0.c3 FROM v0 RIGHT OUTER JOIN rt0 ON (((((rt0.c0, rt0.c4, rt0.c0)) BETWEEN ((x'', rt0.c0, rt0.c0)) AND ((rt0.c4, rt0.c0, rt0.c4))))-(((v0.c0)>>(rt0.c0)))) WHERE ((((((((rt0.c0, rt0.c2, rt0.c4)) NOT BETWEEN ((rt0.c4, rt0.c4, NULL)) AND ((rt0.c4, rt0.c0, rt0.c3)))) IS TRUE)) ISNULL));
SELECT DISTINCT rt0.c3 FROM v0 RIGHT OUTER JOIN rt0 ON (((((rt0.c0, rt0.c4, rt0.c0)) BETWEEN ((x'', rt0.c0, rt0.c0)) AND ((rt0.c4, rt0.c0, rt0.c4))))-(((v0.c0)>>(rt0.c0))));
SELECT rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c0;
SELECT ALL rt0.c3, rt0.c0 FROM rt0 WHERE (rt0.c1) GROUP BY rt0.c3, rt0.c0 UNION SELECT rt0.c3, rt0.c0 FROM rt0 WHERE ((NOT (rt0.c1))) GROUP BY rt0.c3, rt0.c0 UNION SELECT ALL rt0.c3, rt0.c0 FROM rt0 WHERE (((rt0.c1) ISNULL)) GROUP BY rt0.c3, rt0.c0;
SELECT rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL(v0.c0)) NOT BETWEEN (((MIN(SUM(x'dde0')))>=(MIN(GROUP_CONCAT(v0.c0))))) AND (TOTAL(v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((TOTAL(v0.c0)) NOT BETWEEN (((MIN(SUM(x'dde0')))>=(MIN(GROUP_CONCAT(v0.c0))))) AND (TOTAL(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((TOTAL(v0.c0)) NOT BETWEEN (((MIN(SUM(x'dde0')))>=(MIN(GROUP_CONCAT(v0.c0))))) AND (TOTAL(v0.c0)))) ISNULL);
SELECT ALL rt0.c2, v0.c0 FROM rt0 NOT INDEXED, v0;
SELECT rt0.c2, v0.c0 FROM rt0, v0 WHERE (rt0.c0) UNION ALL SELECT ALL rt0.c2, v0.c0 FROM rt0, v0 WHERE ((NOT (rt0.c0))) UNION ALL SELECT ALL rt0.c2, v0.c0 FROM rt0, v0 WHERE (((rt0.c0) ISNULL));
SELECT ALL rt0.c2, v0.c0 FROM rt0 NOT INDEXED, v0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1, rt0.c3, v0.c0, rt0.c4 FROM v0, rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1, rt0.c3, v0.c0, rt0.c4 FROM v0, rt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1, rt0.c3, v0.c0, rt0.c4 FROM v0, rt0 WHERE ((NOT ((NOT (NULL))))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1, rt0.c3, v0.c0, rt0.c4 FROM v0, rt0 WHERE ((((NOT (NULL))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1, rt0.c3, v0.c0, rt0.c4 FROM v0, rt0;
SELECT rt0.c1, rt0.c0 FROM rt0 CROSS JOIN v0 ON rt0.c1 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 CROSS JOIN v0 ON rt0.c1 WHERE (LIKELIHOOD(DISTINCT rt0.c3, 0.4463888368496871)) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 CROSS JOIN v0 ON rt0.c1 WHERE ((NOT (LIKELIHOOD(DISTINCT rt0.c3, 0.4463888368496871)))) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 CROSS JOIN v0 ON rt0.c1 WHERE (((LIKELIHOOD(DISTINCT rt0.c3, 0.4463888368496871)) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 CROSS JOIN v0 ON rt0.c1 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c2 FROM v0 CROSS JOIN rt0 ON CAST(rt0.c2 AS BLOB) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM v0 CROSS JOIN rt0 ON CAST(rt0.c2 AS BLOB) GROUP BY rt0.c2 HAVING GROUP_CONCAT(COALESCE(TOTAL(AVG(COUNT(*))), rt0.c1)) UNION ALL SELECT ALL rt0.c2 FROM v0 CROSS JOIN rt0 ON CAST(rt0.c2 AS BLOB) GROUP BY rt0.c2 HAVING (NOT (GROUP_CONCAT(COALESCE(TOTAL(AVG(COUNT(*))), rt0.c1)))) UNION ALL SELECT ALL rt0.c2 FROM v0 CROSS JOIN rt0 ON CAST(rt0.c2 AS BLOB) GROUP BY rt0.c2 HAVING ((GROUP_CONCAT(COALESCE(TOTAL(AVG(COUNT(*))), rt0.c1))) ISNULL);
SELECT ALL rt0.c2, rt0.c4, v0.c0, rt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN v0 ON CAST(((x'')AND(rt0.c4)) AS INTEGER);
SELECT ALL rt0.c2, rt0.c4, v0.c0, rt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN v0 ON CAST(((x'')AND(rt0.c4)) AS INTEGER) WHERE (((-65192497)>>(v0.c0 COLLATE NOCASE))) UNION ALL SELECT rt0.c2, rt0.c4, v0.c0, rt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN v0 ON CAST(((x'')AND(rt0.c4)) AS INTEGER) WHERE ((NOT (((-65192497)>>(v0.c0 COLLATE NOCASE))))) UNION ALL SELECT rt0.c2, rt0.c4, v0.c0, rt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN v0 ON CAST(((x'')AND(rt0.c4)) AS INTEGER) WHERE (((((-65192497)>>(v0.c0 COLLATE NOCASE))) ISNULL));
SELECT ALL rt0.c2, rt0.c4, v0.c0, rt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN v0 ON CAST(((x'')AND(rt0.c4)) AS INTEGER);
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) AND (SQLITE_COMPILEOPTION_USED(v0.c0)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) AND (SQLITE_COMPILEOPTION_USED(v0.c0)))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) AND (SQLITE_COMPILEOPTION_USED(v0.c0)))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL rt0.c3, rt0.c4, rt0.c1 FROM v0, rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1;
SELECT rt0.c3, rt0.c4, rt0.c1 FROM v0, rt0 WHERE (((((rt0.c1))<=((rt0.c0))) IN ())) GROUP BY rt0.c3, rt0.c4, rt0.c1 UNION SELECT ALL rt0.c3, rt0.c4, rt0.c1 FROM v0, rt0 WHERE ((NOT (((((rt0.c1))<=((rt0.c0))) IN ())))) GROUP BY rt0.c3, rt0.c4, rt0.c1 UNION SELECT ALL rt0.c3, rt0.c4, rt0.c1 FROM v0, rt0 WHERE (((((((rt0.c1))<=((rt0.c0))) IN ())) ISNULL)) GROUP BY rt0.c3, rt0.c4, rt0.c1;
SELECT ALL rt0.c3, rt0.c4, rt0.c1 FROM v0, rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING TOTAL(TOTAL(COUNT(v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TOTAL(TOTAL(COUNT(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL(TOTAL(COUNT(v0.c0)))) ISNULL);
SELECT ALL rt0.c3, rt0.c0, rt0.c4, rt0.c1 FROM rt0, v0;
SELECT ALL rt0.c3, rt0.c0, rt0.c4, rt0.c1 FROM rt0, v0 WHERE ((rt0.c3 IN ())) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c4, rt0.c1 FROM rt0, v0 WHERE ((NOT ((rt0.c3 IN ())))) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c4, rt0.c1 FROM rt0, v0 WHERE ((((rt0.c3 IN ())) ISNULL));
SELECT ALL rt0.c3, rt0.c0, rt0.c4, rt0.c1 FROM rt0, v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((RTRIM(v0.c0)) NOT BETWEEN (v0.c0 COLLATE BINARY) AND (((v0.c0)IS NOT(v0.c0))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((RTRIM(v0.c0)) NOT BETWEEN (v0.c0 COLLATE BINARY) AND (((v0.c0)IS NOT(v0.c0))))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((RTRIM(v0.c0)) NOT BETWEEN (v0.c0 COLLATE BINARY) AND (((v0.c0)IS NOT(v0.c0))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT rt0.c0, rt0.c3 FROM v0 NATURAL JOIN rt0 GROUP BY rt0.c0, rt0.c3;
SELECT rt0.c0, rt0.c3 FROM v0 NATURAL JOIN rt0 WHERE ((NULL COLLATE NOCASE IN ())) GROUP BY rt0.c0, rt0.c3 UNION SELECT rt0.c0, rt0.c3 FROM v0 NATURAL JOIN rt0 WHERE ((NOT ((NULL COLLATE NOCASE IN ())))) GROUP BY rt0.c0, rt0.c3 UNION SELECT ALL rt0.c0, rt0.c3 FROM v0 NATURAL JOIN rt0 WHERE ((((NULL COLLATE NOCASE IN ())) ISNULL)) GROUP BY rt0.c0, rt0.c3;
SELECT rt0.c0, rt0.c3 FROM v0 NATURAL JOIN rt0 GROUP BY rt0.c0, rt0.c3;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING CASE WHEN ((v0.c0)-(GROUP_CONCAT(v0.c0))) THEN SUM(v0.c0) END UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (CASE WHEN ((v0.c0)-(GROUP_CONCAT(v0.c0))) THEN SUM(v0.c0) END)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((CASE WHEN ((v0.c0)-(GROUP_CONCAT(v0.c0))) THEN SUM(v0.c0) END) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING CASE WHEN ((v0.c0)-(GROUP_CONCAT(v0.c0))) THEN SUM(v0.c0) END UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (CASE WHEN ((v0.c0)-(GROUP_CONCAT(v0.c0))) THEN SUM(v0.c0) END)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((CASE WHEN ((v0.c0)-(GROUP_CONCAT(v0.c0))) THEN SUM(v0.c0) END) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c3, rt0.c2, v0.c0, rt0.c4, rt0.c0, rt0.c1 FROM rt0, v0;
SELECT rt0.c3, rt0.c2, v0.c0, rt0.c4, rt0.c0, rt0.c1 FROM rt0, v0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)))<(((rt0.c2)==('븠#'))))) UNION ALL SELECT rt0.c3, rt0.c2, v0.c0, rt0.c4, rt0.c0, rt0.c1 FROM rt0, v0 WHERE ((NOT (((((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)))<(((rt0.c2)=('븠#'))))))) UNION ALL SELECT rt0.c3, rt0.c2, v0.c0, rt0.c4, rt0.c0, rt0.c1 FROM rt0, v0 WHERE (((((((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)))<(((rt0.c2)==('븠#'))))) ISNULL));
SELECT rt0.c3, rt0.c2, v0.c0, rt0.c4, rt0.c0, rt0.c1 FROM rt0, v0;
SELECT DISTINCT v0.c0, rt0.c1, rt0.c2, rt0.c0, rt0.c3, rt0.c4 FROM rt0 LEFT OUTER JOIN v0 ON ((SQLITE_COMPILEOPTION_GET(rt0.c3)) IS FALSE);
SELECT DISTINCT v0.c0, rt0.c1, rt0.c2, rt0.c0, rt0.c3, rt0.c4 FROM rt0 LEFT OUTER JOIN v0 ON ((SQLITE_COMPILEOPTION_GET(rt0.c3)) IS FALSE) WHERE ((x'fc65' IN (((rt0.c0)>(rt0.c2)), JULIANDAY(rt0.c1, rt0.c4, rt0.c3)))) UNION SELECT DISTINCT v0.c0, rt0.c1, rt0.c2, rt0.c0, rt0.c3, rt0.c4 FROM rt0 LEFT OUTER JOIN v0 ON ((SQLITE_COMPILEOPTION_GET(rt0.c3)) IS FALSE) WHERE ((NOT ((x'fc65' IN (((rt0.c0)>(rt0.c2)), JULIANDAY(rt0.c1, rt0.c4, rt0.c3)))))) UNION SELECT DISTINCT v0.c0, rt0.c1, rt0.c2, rt0.c0, rt0.c3, rt0.c4 FROM rt0 LEFT OUTER JOIN v0 ON ((SQLITE_COMPILEOPTION_GET(rt0.c3)) IS FALSE) WHERE ((((x'fc65' IN (((rt0.c0)>(rt0.c2)), JULIANDAY(rt0.c1, rt0.c4, rt0.c3)))) ISNULL));
SELECT DISTINCT v0.c0, rt0.c1, rt0.c2, rt0.c0, rt0.c3, rt0.c4 FROM rt0 LEFT OUTER JOIN v0 ON ((SQLITE_COMPILEOPTION_GET(rt0.c3)) IS FALSE);
SELECT ALL rt0.c2, rt0.c3, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c3, v0.c0, rt0.c0;
SELECT ALL rt0.c2, rt0.c3, v0.c0, rt0.c0 FROM v0, rt0 WHERE ((((((rt0.c4)*(NULL))))<=((ABS(rt0.c3))))) GROUP BY rt0.c2, rt0.c3, v0.c0, rt0.c0 UNION SELECT rt0.c2, rt0.c3, v0.c0, rt0.c0 FROM v0, rt0 WHERE ((NOT ((((((rt0.c4)*(NULL))))<=((ABS(rt0.c3))))))) GROUP BY rt0.c2, rt0.c3, v0.c0, rt0.c0 UNION SELECT rt0.c2, rt0.c3, v0.c0, rt0.c0 FROM v0, rt0 WHERE ((((((((rt0.c4)*(NULL))))<=((ABS(rt0.c3))))) ISNULL)) GROUP BY rt0.c2, rt0.c3, v0.c0, rt0.c0;
SELECT ALL rt0.c2, rt0.c3, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c3, v0.c0, rt0.c0;
SELECT rt0.c3, rt0.c4, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c0, rt0.c2;
SELECT rt0.c3, rt0.c4, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c0, rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c3, rt0.c4, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c0, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c3, rt0.c4, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c0, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c3, rt0.c4, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c0, rt0.c2;
SELECT rt0.c3, rt0.c4, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c0, rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c3, rt0.c4, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c0, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c3, rt0.c4, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c0, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c3, rt0.c4, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (((((rt0.c3)+(rt0.c1))) IS FALSE)) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c3)+(rt0.c1))) IS FALSE)))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (((((((rt0.c3)+(rt0.c1))) IS FALSE)) ISNULL));
SELECT ALL rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c4, rt0.c2, rt0.c0 FROM v0 NATURAL JOIN rt0;
SELECT DISTINCT rt0.c1, rt0.c4, rt0.c2, rt0.c0 FROM v0 NATURAL JOIN rt0 WHERE ((NOT (v0.c0)) COLLATE RTRIM) UNION SELECT DISTINCT rt0.c1, rt0.c4, rt0.c2, rt0.c0 FROM v0 NATURAL JOIN rt0 WHERE ((NOT ((NOT (v0.c0)) COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c1, rt0.c4, rt0.c2, rt0.c0 FROM v0 NATURAL JOIN rt0 WHERE ((((NOT (v0.c0)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c4, rt0.c2, rt0.c0 FROM v0 NATURAL JOIN rt0;
SELECT rt0.c0, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c2;
SELECT rt0.c0, rt0.c3, rt0.c2 FROM rt0 WHERE (((CAST(rt0.c3 AS INTEGER)) NOT BETWEEN (((((rt0.c2)AND(rt0.c0)))AND(rt0.c2))) AND ('1210825411' COLLATE NOCASE))) GROUP BY rt0.c0, rt0.c3, rt0.c2 UNION SELECT rt0.c0, rt0.c3, rt0.c2 FROM rt0 WHERE ((NOT (((CAST(rt0.c3 AS INTEGER)) NOT BETWEEN (((((rt0.c2)AND(rt0.c0)))AND(rt0.c2))) AND ('1210825411' COLLATE NOCASE))))) GROUP BY rt0.c0, rt0.c3, rt0.c2 UNION SELECT rt0.c0, rt0.c3, rt0.c2 FROM rt0 WHERE (((((CAST(rt0.c3 AS INTEGER)) NOT BETWEEN (((((rt0.c2)AND(rt0.c0)))AND(rt0.c2))) AND ('1210825411' COLLATE NOCASE))) ISNULL)) GROUP BY rt0.c0, rt0.c3, rt0.c2;
SELECT rt0.c0, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c2;
SELECT ALL rt0.c4, v0.c0, rt0.c1, rt0.c2 FROM v0, rt0 GROUP BY rt0.c4, v0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c4, v0.c0, rt0.c1, rt0.c2 FROM v0, rt0 GROUP BY rt0.c4, v0.c0, rt0.c1, rt0.c2 HAVING MIN(MIN(rt0.c0)) UNION ALL SELECT ALL rt0.c4, v0.c0, rt0.c1, rt0.c2 FROM v0, rt0 GROUP BY rt0.c4, v0.c0, rt0.c1, rt0.c2 HAVING (NOT (MIN(MIN(rt0.c0)))) UNION ALL SELECT rt0.c4, v0.c0, rt0.c1, rt0.c2 FROM v0, rt0 GROUP BY rt0.c4, v0.c0, rt0.c1, rt0.c2 HAVING ((MIN(MIN(rt0.c0))) ISNULL);
SELECT MIN(rt0.c3) FROM rt0;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (COALESCE(DISTINCT CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END, rt0.c1)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (COALESCE(DISTINCT CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END, rt0.c1)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((COALESCE(DISTINCT CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END, rt0.c1)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((v0.c0)IS((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((0.5145583490456561, v0.c0, v0.c0)))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((v0.c0)IS((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((0.5145583490456561, v0.c0, v0.c0)))))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((v0.c0)IS((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((0.5145583490456561, v0.c0, v0.c0)))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT rt0.c3, rt0.c1 FROM v0, rt0 GROUP BY rt0.c3, rt0.c1;
SELECT ALL rt0.c3, rt0.c1 FROM v0, rt0 WHERE (rt0.c0) GROUP BY rt0.c3, rt0.c1 UNION SELECT rt0.c3, rt0.c1 FROM v0, rt0 WHERE ((NOT (rt0.c0))) GROUP BY rt0.c3, rt0.c1 UNION SELECT ALL rt0.c3, rt0.c1 FROM v0, rt0 WHERE (((rt0.c0) ISNULL)) GROUP BY rt0.c3, rt0.c1;
SELECT rt0.c3, rt0.c1 FROM v0, rt0 GROUP BY rt0.c3, rt0.c1;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT((COUNT(*) IN ())) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT((COUNT(*) IN ())))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT((COUNT(*) IN ()))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT((COUNT(*) IN ())) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT((COUNT(*) IN ())))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT((COUNT(*) IN ()))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((rt0.c1)*(rt0.c3)) IN ())) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((((rt0.c1)*(rt0.c3)) IN ())))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((((rt0.c1)*(rt0.c3)) IN ())) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN v0 ON CAST((NOT (rt0.c2)) AS INTEGER);
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN v0 ON CAST((NOT (rt0.c2)) AS INTEGER) WHERE (rt0.c1) UNION SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN v0 ON CAST((NOT (rt0.c2)) AS INTEGER) WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN v0 ON CAST((NOT (rt0.c2)) AS INTEGER) WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN v0 ON CAST((NOT (rt0.c2)) AS INTEGER);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE (((CAST(rt0.c2 AS REAL)) IS TRUE)) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT (((CAST(rt0.c2 AS REAL)) IS TRUE)))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE (((((CAST(rt0.c2 AS REAL)) IS TRUE)) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((COUNT(MAX(MIN(v0.c0))))) BETWEEN (((((v0.c0, v0.c0, 0xffffffffee2297ed)) NOT BETWEEN ((MAX(GROUP_CONCAT(v0.c0)), SUM(v0.c0), v0.c0)) AND ((GROUP_CONCAT(COUNT(SUM(v0.c0))), COUNT(*), AVG(NULL)))))) AND ((((v0.c0)GLOB(AVG(v0.c0)))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((((COUNT(MAX(MIN(v0.c0))))) BETWEEN (((((v0.c0, v0.c0, 0xffffffffee2297ed)) NOT BETWEEN ((MAX(GROUP_CONCAT(v0.c0)), SUM(v0.c0), v0.c0)) AND ((GROUP_CONCAT(COUNT(SUM(v0.c0))), COUNT(*), AVG(NULL)))))) AND ((((v0.c0)GLOB(AVG(v0.c0)))))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((COUNT(MAX(MIN(v0.c0))))) BETWEEN (((((v0.c0, v0.c0, 0xffffffffee2297ed)) NOT BETWEEN ((MAX(GROUP_CONCAT(v0.c0)), SUM(v0.c0), v0.c0)) AND ((GROUP_CONCAT(COUNT(SUM(v0.c0))), COUNT(*), AVG(NULL)))))) AND ((((v0.c0)GLOB(AVG(v0.c0))))))) ISNULL);
SELECT ALL rt0.c0, rt0.c2, v0.c0, rt0.c3, rt0.c4, rt0.c1 FROM v0, rt0;
SELECT ALL rt0.c0, rt0.c2, v0.c0, rt0.c3, rt0.c4, rt0.c1 FROM v0, rt0 WHERE (((((((((IFNULL(DISTINCT rt0.c4, rt0.c0))AND(((rt0.c2) BETWEEN (x'') AND (rt0.c4)))))OR(HEX(rt0.c3))))OR(CASE rt0.c0  WHEN rt0.c1 THEN '1915858546' WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c3 END)))AND((((rt0.c0))<((rt0.c3)))))) UNION ALL SELECT rt0.c0, rt0.c2, v0.c0, rt0.c3, rt0.c4, rt0.c1 FROM v0, rt0 WHERE ((NOT (((((((((IFNULL(DISTINCT rt0.c4, rt0.c0))AND(((rt0.c2) BETWEEN (x'') AND (rt0.c4)))))OR(HEX(rt0.c3))))OR(CASE rt0.c0  WHEN rt0.c1 THEN '1915858546' WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c3 END)))AND((((rt0.c0))<((rt0.c3)))))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, v0.c0, rt0.c3, rt0.c4, rt0.c1 FROM v0, rt0 WHERE (((((((((((IFNULL(DISTINCT rt0.c4, rt0.c0))AND(((rt0.c2) BETWEEN (x'') AND (rt0.c4)))))OR(HEX(rt0.c3))))OR(CASE rt0.c0  WHEN rt0.c1 THEN '1915858546' WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c3 END)))AND((((rt0.c0))<((rt0.c3)))))) ISNULL));
SELECT ALL rt0.c0, rt0.c2, v0.c0, rt0.c3, rt0.c4, rt0.c1 FROM v0, rt0;
SELECT DISTINCT * FROM rt0 INNER JOIN v0 ON ('-1529291755' IN ());
SELECT DISTINCT * FROM rt0 INNER JOIN v0 ON ('-1529291755' IN ()) WHERE ((~ (((x'') NOT BETWEEN (rt0.c0) AND (0xffffffffec17ad0b))))) UNION SELECT DISTINCT * FROM rt0 INNER JOIN v0 ON ('-1529291755' IN ()) WHERE ((NOT ((~ (((x'') NOT BETWEEN (rt0.c0) AND (0xffffffffec17ad0b))))))) UNION SELECT DISTINCT * FROM rt0 INNER JOIN v0 ON ('-1529291755' IN ()) WHERE ((((~ (((x'') NOT BETWEEN (rt0.c0) AND (0Xffffffffec17ad0b))))) ISNULL));
SELECT DISTINCT * FROM rt0 INNER JOIN v0 ON ('-1529291755' IN ());
SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM v0, rt0 WHERE (((((rt0.c1)<=(rt0.c4)))-(((rt0.c0) IS FALSE)))) GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM v0, rt0 WHERE ((NOT (((((rt0.c1)<=(rt0.c4)))-(((rt0.c0) IS FALSE)))))) GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM v0, rt0 WHERE (((((((rt0.c1)<=(rt0.c4)))-(((rt0.c0) IS FALSE)))) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0;
SELECT ALL v0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0, v0 GROUP BY v0.c0, rt0.c1, rt0.c2, rt0.c3;
SELECT ALL v0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0, v0 GROUP BY v0.c0, rt0.c1, rt0.c2, rt0.c3 HAVING (((COUNT(GROUP_CONCAT(rt0.c2)), TOTAL(NULL), AVG(AVG('')))) NOT BETWEEN ((AVG(x'8960'), ((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c1)), (((COUNT(*), TOTAL(AVG(TOTAL(TOTAL(v0.c0)))), 0.6414815270058882, rt0.c4, rt0.c3))>((AVG(COUNT(*)), rt0.c2, rt0.c4, SUM(NULL), x''))))) AND ((SUM(v0.c0), ((COUNT(rt0.c0))/(TOTAL(COUNT(v0.c0)))), (((rt0.c0))>=((rt0.c1)))))) UNION ALL SELECT v0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0 NOT INDEXED, v0 GROUP BY v0.c0, rt0.c1, rt0.c2, rt0.c3 HAVING (NOT ((((COUNT(GROUP_CONCAT(rt0.c2)), TOTAL(NULL), AVG(AVG('')))) NOT BETWEEN ((AVG(x'8960'), ((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c1)), (((COUNT(*), TOTAL(AVG(TOTAL(TOTAL(v0.c0)))), 0.6414815270058882, rt0.c4, rt0.c3))>((AVG(COUNT(*)), rt0.c2, rt0.c4, SUM(NULL), x''))))) AND ((SUM(v0.c0), ((COUNT(rt0.c0))/(TOTAL(COUNT(v0.c0)))), (((rt0.c0))>=((rt0.c1)))))))) UNION ALL SELECT v0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0, v0 GROUP BY v0.c0, rt0.c1, rt0.c2, rt0.c3 HAVING (((((COUNT(GROUP_CONCAT(rt0.c2)), TOTAL(NULL), AVG(AVG('')))) NOT BETWEEN ((AVG(x'8960'), ((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c1)), (((COUNT(*), TOTAL(AVG(TOTAL(TOTAL(v0.c0)))), 0.6414815270058882, rt0.c4, rt0.c3))>((AVG(COUNT(*)), rt0.c2, rt0.c4, SUM(NULL), x''))))) AND ((SUM(v0.c0), ((COUNT(rt0.c0))/(TOTAL(COUNT(v0.c0)))), (((rt0.c0))>=((rt0.c1))))))) ISNULL);
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE ((((v0.c0) NOTNULL) IN (v0.c0))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT ((((v0.c0) NOTNULL) IN (v0.c0))))) UNION ALL SELECT ALL * FROM v0 WHERE ((((((v0.c0) NOTNULL) IN (v0.c0))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c3)) NOT BETWEEN ((((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) AND ((CAST(rt0.c1 AS REAL))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((rt0.c3)) NOT BETWEEN ((((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) AND ((CAST(rt0.c1 AS REAL))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c3)) NOT BETWEEN ((((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) AND ((CAST(rt0.c1 AS REAL))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((~ (v0.c0)) IN ())) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((~ (v0.c0)) IN ())))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((~ (v0.c0)) IN ())) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c3 FROM rt0, v0 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0, v0 GROUP BY rt0.c3 HAVING ((MIN(AVG(rt0.c0))) BETWEEN (SUM(COUNT(0.9105903616618367))) AND (AVG(SUM(rt0.c4)) COLLATE BINARY)) UNION ALL SELECT rt0.c3 FROM rt0, v0 GROUP BY rt0.c3 HAVING (NOT (((MIN(AVG(rt0.c0))) BETWEEN (SUM(COUNT(0.9105903616618367))) AND (AVG(SUM(rt0.c4)) COLLATE BINARY)))) UNION ALL SELECT rt0.c3 FROM rt0, v0 GROUP BY rt0.c3 HAVING ((((MIN(AVG(rt0.c0))) BETWEEN (SUM(COUNT(0.9105903616618367))) AND (AVG(SUM(rt0.c4)) COLLATE BINARY))) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (json_insert(((('*,*dSP|F', v0.c0, v0.c0))>=((3.00900217E8, v0.c0, v0.c0))), -1.889061142E9, CHAR(v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (json_insert(((('*,*dSP|F', v0.c0, v0.c0))>=((3.00900217E8, v0.c0, v0.c0))), -1.889061142E9, CHAR(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((json_insert(((('*,*dSP|F', v0.c0, v0.c0))>=((3.00900217E8, v0.c0, v0.c0))), -1.889061142E9, CHAR(v0.c0))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (((LOWER(v0.c0))<(CASE rt0.c0  WHEN v0.c0 THEN rt0.c4 END))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (((LOWER(v0.c0))<(CASE rt0.c0  WHEN v0.c0 THEN rt0.c4 END))))) UNION SELECT DISTINCT * FROM rt0 NOT INDEXED, v0 WHERE (((((LOWER(v0.c0))<(CASE rt0.c0  WHEN v0.c0 THEN rt0.c4 END))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT ALL rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2;
SELECT rt0.c3, rt0.c1, rt0.c2 FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c0 END) NOT BETWEEN ((0.4869178903901251 IN ())) AND (load_extension(rt0.c0)))) GROUP BY rt0.c3, rt0.c1, rt0.c2 UNION SELECT rt0.c3, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c0 END) NOT BETWEEN ((0.4869178903901251 IN ())) AND (load_extension(rt0.c0)))))) GROUP BY rt0.c3, rt0.c1, rt0.c2 UNION SELECT rt0.c3, rt0.c1, rt0.c2 FROM rt0 WHERE (((((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c0 END) NOT BETWEEN ((0.4869178903901251 IN ())) AND (load_extension(rt0.c0)))) ISNULL)) GROUP BY rt0.c3, rt0.c1, rt0.c2;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING TOTAL(MIN(MIN(SUM(GROUP_CONCAT(v0.c0))))) COLLATE BINARY UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TOTAL(MIN(MIN(SUM(GROUP_CONCAT(v0.c0))))) COLLATE BINARY)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL(MIN(MIN(SUM(GROUP_CONCAT(v0.c0))))) COLLATE BINARY) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c3, v0.c0, rt0.c4, rt0.c1 FROM rt0, v0;
SELECT rt0.c0, rt0.c2, rt0.c3, v0.c0, rt0.c4, rt0.c1 FROM rt0, v0 WHERE (CASE ((((((((rt0.c2)OR(v0.c0)))AND('0.3968113005408205')))AND(v0.c0)))OR(rt0.c3))  WHEN (((rt0.c3))>=((rt0.c1))) THEN (- (rt0.c0)) END) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c3, v0.c0, rt0.c4, rt0.c1 FROM rt0, v0 WHERE ((NOT (CASE ((((((((rt0.c2)OR(v0.c0)))AND('0.3968113005408205')))AND(v0.c0)))OR(rt0.c3))  WHEN (((rt0.c3))>=((rt0.c1))) THEN (- (rt0.c0)) END))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c3, v0.c0, rt0.c4, rt0.c1 FROM rt0, v0 WHERE (((CASE ((((((((rt0.c2)OR(v0.c0)))AND('0.3968113005408205')))AND(v0.c0)))OR(rt0.c3))  WHEN (((rt0.c3))>=((rt0.c1))) THEN (- (rt0.c0)) END) ISNULL));
SELECT ALL rt0.c0, rt0.c2, rt0.c3, v0.c0, rt0.c4, rt0.c1 FROM rt0, v0;
SELECT DISTINCT rt0.c3, rt0.c1, rt0.c0, rt0.c2, v0.c0, rt0.c4 FROM rt0, v0;
SELECT DISTINCT rt0.c3, rt0.c1, rt0.c0, rt0.c2, v0.c0, rt0.c4 FROM rt0, v0 WHERE (v0.c0) UNION SELECT DISTINCT rt0.c3, rt0.c1, rt0.c0, rt0.c2, v0.c0, rt0.c4 FROM rt0, v0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT rt0.c3, rt0.c1, rt0.c0, rt0.c2, v0.c0, rt0.c4 FROM rt0, v0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c1, rt0.c0, rt0.c2, v0.c0, rt0.c4 FROM rt0, v0;
SELECT rt0.c2, v0.c0, rt0.c3, rt0.c4 FROM v0, rt0 GROUP BY rt0.c2, v0.c0, rt0.c3, rt0.c4;
SELECT rt0.c2, v0.c0, rt0.c3, rt0.c4 FROM v0, rt0 WHERE ((- (TYPEOF(rt0.c2)))) GROUP BY rt0.c2, v0.c0, rt0.c3, rt0.c4 UNION SELECT ALL rt0.c2, v0.c0, rt0.c3, rt0.c4 FROM v0, rt0 WHERE ((NOT ((- (TYPEOF(rt0.c2)))))) GROUP BY rt0.c2, v0.c0, rt0.c3, rt0.c4 UNION SELECT ALL rt0.c2, v0.c0, rt0.c3, rt0.c4 FROM v0, rt0 WHERE ((((- (TYPEOF(rt0.c2)))) ISNULL)) GROUP BY rt0.c2, v0.c0, rt0.c3, rt0.c4;
SELECT rt0.c2, v0.c0, rt0.c3, rt0.c4 FROM v0, rt0 GROUP BY rt0.c2, v0.c0, rt0.c3, rt0.c4;
SELECT rt0.c4, rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c2, rt0.c0, rt0.c3;
SELECT rt0.c4, rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c2, rt0.c0, rt0.c3 HAVING MIN(((0Xffffffff9c9c0884) IS TRUE)) UNION ALL SELECT rt0.c4, rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c2, rt0.c0, rt0.c3 HAVING (NOT (MIN(((0Xffffffff9c9c0884) IS TRUE)))) UNION ALL SELECT ALL rt0.c4, rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c2, rt0.c0, rt0.c3 HAVING ((MIN(((0xffffffff9c9c0884) IS TRUE))) ISNULL);
SELECT rt0.c4, rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c2, rt0.c0, rt0.c3;
SELECT rt0.c4, rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c2, rt0.c0, rt0.c3 HAVING MIN(((0Xffffffff9c9c0884) IS TRUE)) UNION ALL SELECT rt0.c4, rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c2, rt0.c0, rt0.c3 HAVING (NOT (MIN(((0Xffffffff9c9c0884) IS TRUE)))) UNION ALL SELECT ALL rt0.c4, rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c2, rt0.c0, rt0.c3 HAVING ((MIN(((0xffffffff9c9c0884) IS TRUE))) ISNULL);
SELECT rt0.c4, rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c2, rt0.c0, rt0.c3;
SELECT ALL SUM(((((((rt0.c4) ISNULL))AND(((rt0.c3)&(rt0.c4)))))OR(((v0.c0)<=(rt0.c3))))) FROM v0, rt0 ORDER BY ((rt0.c4)LIKE(v0.c0)) COLLATE BINARY;
SELECT rt0.c4, rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c4, rt0.c2, rt0.c1 FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c4 END)IS(((rt0.c2) IS FALSE)))) UNION ALL SELECT rt0.c4, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c4 END)IS(((rt0.c2) IS FALSE)))))) UNION ALL SELECT ALL rt0.c4, rt0.c2, rt0.c1 FROM rt0 WHERE (((((CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c4 END)IS(((rt0.c2) IS FALSE)))) ISNULL));
SELECT rt0.c4, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c4, v0.c0 FROM v0, rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c4, v0.c0 FROM v0, rt0 WHERE ((- (rt0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c4, v0.c0 FROM v0, rt0 WHERE ((NOT ((- (rt0.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c4, v0.c0 FROM v0, rt0 WHERE ((((- (rt0.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c4, v0.c0 FROM v0, rt0;
SELECT rt0.c2, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0;
SELECT ALL rt0.c2, rt0.c3, rt0.c0 FROM rt0 WHERE ((+ ('쪋Vf(Cr0V'))) GROUP BY rt0.c2, rt0.c3, rt0.c0 UNION SELECT rt0.c2, rt0.c3, rt0.c0 FROM rt0 WHERE ((NOT ((+ ('쪋Vf(Cr0V'))))) GROUP BY rt0.c2, rt0.c3, rt0.c0 UNION SELECT rt0.c2, rt0.c3, rt0.c0 FROM rt0 WHERE ((((+ ('쪋Vf(Cr0V'))) ISNULL)) GROUP BY rt0.c2, rt0.c3, rt0.c0;
SELECT rt0.c2, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0;
SELECT rt0.c0, rt0.c1, v0.c0, rt0.c4, rt0.c2 FROM rt0, v0 GROUP BY rt0.c0, rt0.c1, v0.c0, rt0.c4, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, v0.c0, rt0.c4, rt0.c2 FROM rt0, v0 GROUP BY rt0.c0, rt0.c1, v0.c0, rt0.c4, rt0.c2 HAVING GROUP_CONCAT(CAST(GROUP_CONCAT(rt0.c1) AS REAL)) UNION ALL SELECT rt0.c0, rt0.c1, v0.c0, rt0.c4, rt0.c2 FROM rt0, v0 GROUP BY rt0.c0, rt0.c1, v0.c0, rt0.c4, rt0.c2 HAVING (NOT (GROUP_CONCAT(CAST(GROUP_CONCAT(rt0.c1) AS REAL)))) UNION ALL SELECT ALL rt0.c0, rt0.c1, v0.c0, rt0.c4, rt0.c2 FROM rt0, v0 GROUP BY rt0.c0, rt0.c1, v0.c0, rt0.c4, rt0.c2 HAVING ((GROUP_CONCAT(CAST(GROUP_CONCAT(rt0.c1) AS REAL))) ISNULL);
SELECT ALL rt0.c3, rt0.c0, rt0.c4, rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c3, rt0.c0, rt0.c4, rt0.c2, rt0.c1 FROM rt0 WHERE (((rt0.c4 COLLATE BINARY)IS NOT((rt0.c3 IN ())))) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c4, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c4 COLLATE BINARY)IS NOT((rt0.c3 IN ())))))) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c4, rt0.c2, rt0.c1 FROM rt0 WHERE (((((rt0.c4 COLLATE BINARY)IS NOT((rt0.c3 IN ())))) ISNULL));
SELECT ALL rt0.c3, rt0.c0, rt0.c4, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((x'') IS TRUE)) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((x'') IS TRUE)))) UNION SELECT DISTINCT * FROM v0 WHERE (((((x'') IS TRUE)) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (LIKELIHOOD(DISTINCT v0.c0, 0.8981928288108868) COLLATE NOCASE) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (LIKELIHOOD(DISTINCT v0.c0, 0.8981928288108868) COLLATE NOCASE))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((LIKELIHOOD(DISTINCT v0.c0, 0.8981928288108868) COLLATE NOCASE) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(GROUP_CONCAT(COUNT(*)) COLLATE RTRIM) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(GROUP_CONCAT(COUNT(*)) COLLATE RTRIM))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(GROUP_CONCAT(COUNT(*)) COLLATE RTRIM)) ISNULL);
SELECT ALL SUM(((((rt0.c3)>=(rt0.c1))) ISNULL)) FROM rt0;
SELECT ALL * FROM v0, rt0;
SELECT * FROM v0, rt0 WHERE (CASE WHEN rt0.c0 THEN -1719365230 END COLLATE BINARY) UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((NOT (CASE WHEN rt0.c0 THEN -1719365230 END COLLATE BINARY))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE (((CASE WHEN rt0.c0 THEN -1719365230 END COLLATE BINARY) ISNULL));
SELECT ALL * FROM v0, rt0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (((NULL) NOT BETWEEN (CASE WHEN x'f956' THEN rt0.c0 ELSE NULL END) AND ((rt0.c0 IN (rt0.c1, v0.c0))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (((NULL) NOT BETWEEN (CASE WHEN x'f956' THEN rt0.c0 ELSE NULL END) AND ((rt0.c0 IN (rt0.c1, v0.c0))))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((((NULL) NOT BETWEEN (CASE WHEN x'f956' THEN rt0.c0 ELSE NULL END) AND ((rt0.c0 IN (rt0.c1, v0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT rt0.c2, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c4;
SELECT rt0.c2, rt0.c1, rt0.c4 FROM rt0 WHERE (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE RTRIM) GROUP BY rt0.c2, rt0.c1, rt0.c4 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c4 FROM rt0 WHERE ((NOT (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE RTRIM))) GROUP BY rt0.c2, rt0.c1, rt0.c4 UNION SELECT rt0.c2, rt0.c1, rt0.c4 FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c4;
SELECT rt0.c2, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c4;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING TOTAL(((((MAX(TOTAL(v0.c0)))AND(GROUP_CONCAT(COUNT(*)))))AND(GROUP_CONCAT(MAX(MIN('t櫄')))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TOTAL(((((MAX(TOTAL(v0.c0)))AND(GROUP_CONCAT(COUNT(*)))))AND(GROUP_CONCAT(MAX(MIN('t櫄')))))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL(((((MAX(TOTAL(v0.c0)))AND(GROUP_CONCAT(COUNT(*)))))AND(GROUP_CONCAT(MAX(MIN('t櫄'))))))) ISNULL);
SELECT rt0.c2, rt0.c4 FROM rt0, v0;
SELECT rt0.c2, rt0.c4 FROM rt0, v0 WHERE (rt0.c4) UNION ALL SELECT ALL rt0.c2, rt0.c4 FROM rt0, v0 WHERE ((NOT (rt0.c4))) UNION ALL SELECT rt0.c2, rt0.c4 FROM rt0, v0 WHERE (((rt0.c4) ISNULL));
SELECT rt0.c2, rt0.c4 FROM rt0, v0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ('-1760827067') UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ('-1760827067'))) UNION SELECT DISTINCT * FROM rt0 WHERE ((('-1760827067') ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c3, rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c3, rt0.c2, rt0.c4;
SELECT ALL rt0.c1, rt0.c0, rt0.c3, rt0.c2, rt0.c4 FROM rt0 WHERE (((NULL) IS FALSE)) GROUP BY rt0.c1, rt0.c0, rt0.c3, rt0.c2, rt0.c4 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c3, rt0.c2, rt0.c4 FROM rt0 WHERE ((NOT (((NULL) IS FALSE)))) GROUP BY rt0.c1, rt0.c0, rt0.c3, rt0.c2, rt0.c4 UNION SELECT rt0.c1, rt0.c0, rt0.c3, rt0.c2, rt0.c4 FROM rt0 WHERE (((((NULL) IS FALSE)) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c3, rt0.c2, rt0.c4;
SELECT ALL rt0.c1, rt0.c0, rt0.c3, rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c3, rt0.c2, rt0.c4;
SELECT ALL rt0.c2, rt0.c0, v0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON (((rt0.c1)) NOT BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c1 END)) AND ((CASE rt0.c1  WHEN rt0.c4 THEN rt0.c2 END))) GROUP BY rt0.c2, rt0.c0, v0.c0;
SELECT rt0.c2, rt0.c0, v0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON (((rt0.c1)) NOT BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c1 END)) AND ((CASE rt0.c1  WHEN rt0.c4 THEN rt0.c2 END))) GROUP BY rt0.c2, rt0.c0, v0.c0 HAVING SUM(CAST(rt0.c3 AS REAL)) UNION ALL SELECT rt0.c2, rt0.c0, v0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON (((rt0.c1)) NOT BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c1 END)) AND ((CASE rt0.c1  WHEN rt0.c4 THEN rt0.c2 END))) GROUP BY rt0.c2, rt0.c0, v0.c0 HAVING (NOT (SUM(CAST(rt0.c3 AS REAL)))) UNION ALL SELECT rt0.c2, rt0.c0, v0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON (((rt0.c1)) NOT BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c1 END)) AND ((CASE rt0.c1  WHEN rt0.c4 THEN rt0.c2 END))) GROUP BY rt0.c2, rt0.c0, v0.c0 HAVING ((SUM(CAST(rt0.c3 AS REAL))) ISNULL);
SELECT ALL rt0.c2, rt0.c0, v0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON (((rt0.c1)) NOT BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c1 END)) AND ((CASE rt0.c1  WHEN rt0.c4 THEN rt0.c2 END))) GROUP BY rt0.c2, rt0.c0, v0.c0;
SELECT rt0.c2, rt0.c0, v0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON (((rt0.c1)) NOT BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c1 END)) AND ((CASE rt0.c1  WHEN rt0.c4 THEN rt0.c2 END))) GROUP BY rt0.c2, rt0.c0, v0.c0 HAVING SUM(CAST(rt0.c3 AS REAL)) UNION ALL SELECT rt0.c2, rt0.c0, v0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON (((rt0.c1)) NOT BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c1 END)) AND ((CASE rt0.c1  WHEN rt0.c4 THEN rt0.c2 END))) GROUP BY rt0.c2, rt0.c0, v0.c0 HAVING (NOT (SUM(CAST(rt0.c3 AS REAL)))) UNION ALL SELECT rt0.c2, rt0.c0, v0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON (((rt0.c1)) NOT BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c1 END)) AND ((CASE rt0.c1  WHEN rt0.c4 THEN rt0.c2 END))) GROUP BY rt0.c2, rt0.c0, v0.c0 HAVING ((SUM(CAST(rt0.c3 AS REAL))) ISNULL);
SELECT ALL rt0.c2, rt0.c0, v0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON (((rt0.c1)) NOT BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c1 END)) AND ((CASE rt0.c1  WHEN rt0.c4 THEN rt0.c2 END))) GROUP BY rt0.c2, rt0.c0, v0.c0;
SELECT * FROM v0, rt0;
SELECT * FROM v0, rt0 WHERE ((((((rt0.c4))>=((rt0.c0)))) NOT BETWEEN (x'') AND (CASE WHEN v0.c0 THEN rt0.c2 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c0 THEN v0.c0 END))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((NOT ((((((rt0.c4))>=((rt0.c0)))) NOT BETWEEN (x'') AND (CASE WHEN v0.c0 THEN rt0.c2 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c0 THEN v0.c0 END))))) UNION ALL SELECT * FROM v0, rt0 WHERE ((((((((rt0.c4))>=((rt0.c0)))) NOT BETWEEN (x'') AND (CASE WHEN v0.c0 THEN rt0.c2 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c0 THEN v0.c0 END))) ISNULL));
SELECT * FROM v0, rt0;
SELECT DISTINCT * FROM rt0 NOT INDEXED;
SELECT DISTINCT * FROM rt0 WHERE (((((((((NULL)OR(((NULL)||(rt0.c0)))))OR((rt0.c0 IN (rt0.c4)))))AND((NOT (rt0.c0)))))AND(((((rt0.c0)OR(rt0.c4)))AND(rt0.c0))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((((((NULL)OR(((NULL)||(rt0.c0)))))OR((rt0.c0 IN (rt0.c4)))))AND((NOT (rt0.c0)))))AND(((((rt0.c0)OR(rt0.c4)))AND(rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((((((NULL)OR(((NULL)||(rt0.c0)))))OR((rt0.c0 IN (rt0.c4)))))AND((NOT (rt0.c0)))))AND(((((rt0.c0)OR(rt0.c4)))AND(rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0 NOT INDEXED;
SELECT rt0.c4, rt0.c3, rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY rt0.c4, rt0.c3, rt0.c1, rt0.c0;
SELECT ALL rt0.c4, rt0.c3, rt0.c1, rt0.c0 FROM rt0, v0 NOT INDEXED WHERE (((((((((((rt0.c0)<<(v0.c0)))AND(TRIM(rt0.c3, rt0.c2))))OR(((rt0.c3) NOTNULL))))AND(rt0.c3 COLLATE NOCASE)))OR(((rt0.c4)-(rt0.c2))))) GROUP BY rt0.c4, rt0.c3, rt0.c1, rt0.c0 UNION SELECT rt0.c4, rt0.c3, rt0.c1, rt0.c0 FROM rt0, v0 WHERE ((NOT (((((((((((rt0.c0)<<(v0.c0)))AND(TRIM(rt0.c3, rt0.c2))))OR(((rt0.c3) NOTNULL))))AND(rt0.c3 COLLATE NOCASE)))OR(((rt0.c4)-(rt0.c2))))))) GROUP BY rt0.c4, rt0.c3, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c4, rt0.c3, rt0.c1, rt0.c0 FROM rt0, v0 WHERE (((((((((((((rt0.c0)<<(v0.c0)))AND(TRIM(rt0.c3, rt0.c2))))OR(((rt0.c3) NOTNULL))))AND(rt0.c3 COLLATE NOCASE)))OR(((rt0.c4)-(rt0.c2))))) ISNULL)) GROUP BY rt0.c4, rt0.c3, rt0.c1, rt0.c0;
SELECT rt0.c4, rt0.c3, rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY rt0.c4, rt0.c3, rt0.c1, rt0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((v0.c0)||(AVG(COUNT(*))))) NOT BETWEEN (AVG(COUNT(*))) AND ((((MAX(GROUP_CONCAT(v0.c0)))) NOT BETWEEN ((COUNT(NULL))) AND ((TOTAL(v0.c0)))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((((v0.c0)||(AVG(COUNT(*))))) NOT BETWEEN (AVG(COUNT(*))) AND ((((MAX(GROUP_CONCAT(v0.c0)))) NOT BETWEEN ((COUNT(NULL))) AND ((TOTAL(v0.c0)))))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((((v0.c0)||(AVG(COUNT(*))))) NOT BETWEEN (AVG(COUNT(*))) AND ((((MAX(GROUP_CONCAT(v0.c0)))) NOT BETWEEN ((COUNT(NULL))) AND ((TOTAL(v0.c0))))))) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (0xb68bb58) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (0xb68bb58))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((0Xb68bb58) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((x'' IN ())) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((x'' IN ())))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((x'' IN ())) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((((((((((v0.c0) IS FALSE))OR(v0.c0)))AND(((v0.c0)LIKE(v0.c0)))))AND((- (v0.c0)))))OR(NULL))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((((((((v0.c0) IS FALSE))OR(v0.c0)))AND(((v0.c0)LIKE(v0.c0)))))AND((- (v0.c0)))))OR(NULL))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((((((((((v0.c0) IS FALSE))OR(v0.c0)))AND(((v0.c0)LIKE(v0.c0)))))AND((- (v0.c0)))))OR(NULL))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c1, rt0.c4, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c4, rt0.c0;
SELECT ALL rt0.c1, rt0.c4, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c4, rt0.c0 HAVING ((((((GROUP_CONCAT(v0.c0))AND(v0.c0)))AND(rt0.c3))) BETWEEN (CASE WHEN rt0.c0 THEN MAX(MAX(rt0.c3)) WHEN rt0.c1 THEN rt0.c3 WHEN COUNT(0.9024912213639011) THEN SUM(rt0.c1) ELSE COUNT(rt0.c1) END) AND (((MAX(COUNT(TOTAL(rt0.c0))))AND(TOTAL(SUM(COUNT(COUNT(*)))))))) UNION ALL SELECT rt0.c1, rt0.c4, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c4, rt0.c0 HAVING (NOT (((((((GROUP_CONCAT(v0.c0))AND(v0.c0)))AND(rt0.c3))) BETWEEN (CASE WHEN rt0.c0 THEN MAX(MAX(rt0.c3)) WHEN rt0.c1 THEN rt0.c3 WHEN COUNT(0.9024912213639011) THEN SUM(rt0.c1) ELSE COUNT(rt0.c1) END) AND (((MAX(COUNT(TOTAL(rt0.c0))))AND(TOTAL(SUM(COUNT(COUNT(*)))))))))) UNION ALL SELECT ALL rt0.c1, rt0.c4, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c4, rt0.c0 HAVING ((((((((GROUP_CONCAT(v0.c0))AND(v0.c0)))AND(rt0.c3))) BETWEEN (CASE WHEN rt0.c0 THEN MAX(MAX(rt0.c3)) WHEN rt0.c1 THEN rt0.c3 WHEN COUNT(0.9024912213639011) THEN SUM(rt0.c1) ELSE COUNT(rt0.c1) END) AND (((MAX(COUNT(TOTAL(rt0.c0))))AND(TOTAL(SUM(COUNT(COUNT(*))))))))) ISNULL);
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (((v0.c0 IN ()) IN ())) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (((v0.c0 IN ()) IN ())))) UNION ALL SELECT * FROM v0 WHERE (((((v0.c0 IN ()) IN ())) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT v0.c0, rt0.c4, rt0.c2, rt0.c1 FROM rt0, v0;
SELECT DISTINCT v0.c0, rt0.c4, rt0.c2, rt0.c1 FROM rt0, v0 WHERE (LIKELIHOOD(DISTINCT '1572552521', 0.005984588882266939)) UNION SELECT DISTINCT v0.c0, rt0.c4, rt0.c2, rt0.c1 FROM rt0, v0 WHERE ((NOT (LIKELIHOOD(DISTINCT '1572552521', 0.005984588882266939)))) UNION SELECT DISTINCT v0.c0, rt0.c4, rt0.c2, rt0.c1 FROM rt0, v0 WHERE (((LIKELIHOOD(DISTINCT '1572552521', 0.005984588882266939)) ISNULL));
SELECT DISTINCT v0.c0, rt0.c4, rt0.c2, rt0.c1 FROM rt0, v0;
SELECT ALL rt0.c4, rt0.c1 FROM v0, rt0 GROUP BY rt0.c4, rt0.c1;
SELECT ALL rt0.c4, rt0.c1 FROM v0, rt0 WHERE ((('' COLLATE RTRIM) IS FALSE)) GROUP BY rt0.c4, rt0.c1 UNION SELECT ALL rt0.c4, rt0.c1 FROM v0, rt0 WHERE ((NOT ((('' COLLATE RTRIM) IS FALSE)))) GROUP BY rt0.c4, rt0.c1 UNION SELECT rt0.c4, rt0.c1 FROM v0, rt0 WHERE ((((('' COLLATE RTRIM) IS FALSE)) ISNULL)) GROUP BY rt0.c4, rt0.c1;
SELECT ALL rt0.c4, rt0.c1 FROM v0, rt0 GROUP BY rt0.c4, rt0.c1;
SELECT rt0.c2 FROM v0 INNER JOIN rt0 ON (((((rt0.c4, rt0.c0, rt0.c1, rt0.c1, v0.c0)) BETWEEN ((rt0.c4, rt0.c4, rt0.c2, rt0.c4, v0.c0)) AND ((rt0.c0, rt0.c1, rt0.c0, rt0.c3, v0.c0))))||(((NULL) NOT NULL))) GROUP BY rt0.c2;
SELECT rt0.c2 FROM v0 INNER JOIN rt0 ON (((((rt0.c4, rt0.c0, rt0.c1, rt0.c1, v0.c0)) BETWEEN ((rt0.c4, rt0.c4, rt0.c2, rt0.c4, v0.c0)) AND ((rt0.c0, rt0.c1, rt0.c0, rt0.c3, v0.c0))))||(((NULL) NOT NULL))) GROUP BY rt0.c2 HAVING ((((((((((AVG(COUNT(COUNT(*))))OR(rt0.c0)))AND(v0.c0)))AND(MAX(rt0.c1))))AND(v0.c0))) NOT BETWEEN (COUNT(GROUP_CONCAT(AVG(COUNT(*))))) AND ('-1e500')) UNION ALL SELECT rt0.c2 FROM v0 INNER JOIN rt0 ON (((((rt0.c4, rt0.c0, rt0.c1, rt0.c1, v0.c0)) BETWEEN ((rt0.c4, rt0.c4, rt0.c2, rt0.c4, v0.c0)) AND ((rt0.c0, rt0.c1, rt0.c0, rt0.c3, v0.c0))))||(((NULL) NOT NULL))) GROUP BY rt0.c2 HAVING (NOT (((((((((((AVG(COUNT(COUNT(*))))OR(rt0.c0)))AND(v0.c0)))AND(MAX(rt0.c1))))AND(v0.c0))) NOT BETWEEN (COUNT(GROUP_CONCAT(AVG(COUNT(*))))) AND ('-1e500')))) UNION ALL SELECT rt0.c2 FROM v0 INNER JOIN rt0 ON (((((rt0.c4, rt0.c0, rt0.c1, rt0.c1, v0.c0)) BETWEEN ((rt0.c4, rt0.c4, rt0.c2, rt0.c4, v0.c0)) AND ((rt0.c0, rt0.c1, rt0.c0, rt0.c3, v0.c0))))||(((NULL) NOT NULL))) GROUP BY rt0.c2 HAVING ((((((((((((AVG(COUNT(COUNT(*))))OR(rt0.c0)))AND(v0.c0)))AND(MAX(rt0.c1))))AND(v0.c0))) NOT BETWEEN (COUNT(GROUP_CONCAT(AVG(COUNT(*))))) AND ('-1e500'))) ISNULL);
SELECT rt0.c2, rt0.c3, rt0.c4, v0.c0 FROM rt0, v0;
SELECT ALL rt0.c2, rt0.c3, rt0.c4, v0.c0 FROM rt0, v0 WHERE (((rt0.c3 IN ()) IN ())) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c4, v0.c0 FROM rt0, v0 WHERE ((NOT (((rt0.c3 IN ()) IN ())))) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c4, v0.c0 FROM rt0, v0 WHERE (((((rt0.c3 IN ()) IN ())) ISNULL));
SELECT rt0.c2, rt0.c3, rt0.c4, v0.c0 FROM rt0, v0;
SELECT DISTINCT * FROM v0 LEFT OUTER JOIN rt0 ON (((rt0.c4, rt0.c3, rt0.c3)) BETWEEN ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)), (~ (rt0.c4)), (v0.c0 IN ()))) AND ((((NULL)!=(rt0.c1)), ((rt0.c2) NOT NULL), rt0.c2)));
SELECT DISTINCT * FROM v0 LEFT OUTER JOIN rt0 ON (((rt0.c4, rt0.c3, rt0.c3)) BETWEEN ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)), (~ (rt0.c4)), (v0.c0 IN ()))) AND ((((NULL)!=(rt0.c1)), ((rt0.c2) NOT NULL), rt0.c2))) WHERE (CASE (rt0.c1 IN ())  WHEN CAST(rt0.c3 AS BLOB) THEN CAST(v0.c0 AS REAL) ELSE NULL END) UNION SELECT DISTINCT * FROM v0 LEFT OUTER JOIN rt0 ON (((rt0.c4, rt0.c3, rt0.c3)) BETWEEN ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)), (~ (rt0.c4)), (v0.c0 IN ()))) AND ((((NULL)<>(rt0.c1)), ((rt0.c2) NOT NULL), rt0.c2))) WHERE ((NOT (CASE (rt0.c1 IN ())  WHEN CAST(rt0.c3 AS BLOB) THEN CAST(v0.c0 AS REAL) ELSE NULL END))) UNION SELECT DISTINCT * FROM v0 LEFT OUTER JOIN rt0 ON (((rt0.c4, rt0.c3, rt0.c3)) BETWEEN ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)), (~ (rt0.c4)), (v0.c0 IN ()))) AND ((((NULL)<>(rt0.c1)), ((rt0.c2) NOT NULL), rt0.c2))) WHERE (((CASE (rt0.c1 IN ())  WHEN CAST(rt0.c3 AS BLOB) THEN CAST(v0.c0 AS REAL) ELSE NULL END) ISNULL));
SELECT DISTINCT * FROM v0 LEFT OUTER JOIN rt0 ON (((rt0.c4, rt0.c3, rt0.c3)) BETWEEN ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)), (~ (rt0.c4)), (v0.c0 IN ()))) AND ((((NULL)!=(rt0.c1)), ((rt0.c2) NOT NULL), rt0.c2)));
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((x'') BETWEEN (v0.c0) AND (v0.c0)) COLLATE BINARY) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((x'') BETWEEN (v0.c0) AND (v0.c0)) COLLATE BINARY))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((x'') BETWEEN (v0.c0) AND (v0.c0)) COLLATE BINARY) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c3, rt0.c4 FROM rt0, v0 GROUP BY rt0.c3, rt0.c4;
SELECT rt0.c3, rt0.c4 FROM rt0, v0 GROUP BY rt0.c3, rt0.c4 HAVING ((CAST(rt0.c1 AS INTEGER)) NOT NULL) UNION ALL SELECT ALL rt0.c3, rt0.c4 FROM rt0, v0 GROUP BY rt0.c3, rt0.c4 HAVING (NOT (((CAST(rt0.c1 AS INTEGER)) NOT NULL))) UNION ALL SELECT rt0.c3, rt0.c4 FROM rt0, v0 GROUP BY rt0.c3, rt0.c4 HAVING ((((CAST(rt0.c1 AS INTEGER)) NOT NULL)) ISNULL);
SELECT ALL rt0.c3, rt0.c4 FROM rt0, v0 GROUP BY rt0.c3, rt0.c4;
SELECT rt0.c3, rt0.c4 FROM rt0, v0 GROUP BY rt0.c3, rt0.c4 HAVING ((CAST(rt0.c1 AS INTEGER)) NOT NULL) UNION ALL SELECT ALL rt0.c3, rt0.c4 FROM rt0, v0 GROUP BY rt0.c3, rt0.c4 HAVING (NOT (((CAST(rt0.c1 AS INTEGER)) NOT NULL))) UNION ALL SELECT rt0.c3, rt0.c4 FROM rt0, v0 GROUP BY rt0.c3, rt0.c4 HAVING ((((CAST(rt0.c1 AS INTEGER)) NOT NULL)) ISNULL);
SELECT ALL rt0.c3, rt0.c4 FROM rt0, v0 GROUP BY rt0.c3, rt0.c4;
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (CAST(('-1572140384' IN (v0.c0, v0.c0)) AS NUMERIC)) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (CAST(('-1572140384' IN (v0.c0, v0.c0)) AS NUMERIC)))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((CAST(('-1572140384' IN (v0.c0, v0.c0)) AS NUMERIC)) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT v0.c0, rt0.c4, rt0.c2 FROM rt0, v0;
SELECT DISTINCT v0.c0, rt0.c4, rt0.c2 FROM rt0, v0 WHERE ((((~ (rt0.c4))) BETWEEN (((rt0.c1)OR(rt0.c0))) AND ((rt0.c1 IN (rt0.c2))))) UNION SELECT DISTINCT v0.c0, rt0.c4, rt0.c2 FROM rt0, v0 WHERE ((NOT ((((~ (rt0.c4))) BETWEEN (((rt0.c1)OR(rt0.c0))) AND ((rt0.c1 IN (rt0.c2))))))) UNION SELECT DISTINCT v0.c0, rt0.c4, rt0.c2 FROM rt0, v0 WHERE ((((((~ (rt0.c4))) BETWEEN (((rt0.c1)OR(rt0.c0))) AND ((rt0.c1 IN (rt0.c2))))) ISNULL));
SELECT DISTINCT v0.c0, rt0.c4, rt0.c2 FROM rt0, v0;
SELECT ALL rt0.c4 FROM rt0 GROUP BY rt0.c4;
SELECT rt0.c4 FROM rt0 WHERE (((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)) COLLATE NOCASE) GROUP BY rt0.c4 UNION SELECT rt0.c4 FROM rt0 WHERE ((NOT (((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)) COLLATE NOCASE))) GROUP BY rt0.c4 UNION SELECT ALL rt0.c4 FROM rt0 WHERE (((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c4;
SELECT ALL rt0.c4 FROM rt0 GROUP BY rt0.c4;
SELECT rt0.c1, rt0.c4, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c4, rt0.c0;
SELECT rt0.c1, rt0.c4, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c4, rt0.c0 HAVING GROUP_CONCAT(((GROUP_CONCAT(MAX(COUNT(*))))>(COUNT(rt0.c1)))) UNION ALL SELECT ALL rt0.c1, rt0.c4, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c4, rt0.c0 HAVING (NOT (GROUP_CONCAT(((GROUP_CONCAT(MAX(COUNT(*))))>(COUNT(rt0.c1)))))) UNION ALL SELECT rt0.c1, rt0.c4, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c4, rt0.c0 HAVING ((GROUP_CONCAT(((GROUP_CONCAT(MAX(COUNT(*))))>(COUNT(rt0.c1))))) ISNULL);
SELECT ALL * FROM rt0, v0;
SELECT ALL * FROM rt0, v0 WHERE (CASE WHEN (~ (rt0.c3)) THEN '' END) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((NOT (CASE WHEN (~ (rt0.c3)) THEN '' END))) UNION ALL SELECT * FROM rt0, v0 WHERE (((CASE WHEN (~ (rt0.c3)) THEN '' END) ISNULL));
SELECT ALL * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE ((((v0.c0))>((NULL)))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT ((((v0.c0))>((NULL)))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((((((v0.c0))>((NULL)))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (NULL) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (NULL))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((NULL) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0, rt0.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1 FROM v0, rt0 GROUP BY v0.c0, rt0.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1;
SELECT v0.c0, rt0.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1 FROM v0, rt0 GROUP BY v0.c0, rt0.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1 HAVING ((((((((AVG(rt0.c4))AND('')))AND(MAX(TOTAL(TOTAL(MIN(rt0.c0)))))))OR(((TOTAL(TOTAL(rt0.c1)))GLOB(AVG(rt0.c1))))))AND(NULLIF(DISTINCT v0.c0, COUNT(rt0.c3)))) UNION ALL SELECT v0.c0, rt0.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1 FROM v0, rt0 GROUP BY v0.c0, rt0.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1 HAVING (NOT (((((((((AVG(rt0.c4))AND('')))AND(MAX(TOTAL(TOTAL(MIN(rt0.c0)))))))OR(((TOTAL(TOTAL(rt0.c1)))GLOB(AVG(rt0.c1))))))AND(NULLIF(DISTINCT v0.c0, COUNT(rt0.c3)))))) UNION ALL SELECT v0.c0, rt0.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1 FROM v0, rt0 GROUP BY v0.c0, rt0.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1 HAVING ((((((((((AVG(rt0.c4))AND('')))AND(MAX(TOTAL(TOTAL(MIN(rt0.c0)))))))OR(((TOTAL(TOTAL(rt0.c1)))GLOB(AVG(rt0.c1))))))AND(NULLIF(DISTINCT v0.c0, COUNT(rt0.c3))))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((~ (rt0.c0))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((~ (rt0.c0))))) UNION ALL SELECT * FROM rt0 WHERE ((((~ (rt0.c0))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((((v0.c0)AND(x'')))/(((v0.c0)LIKE(v0.c0))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((((v0.c0)AND(x'')))/(((v0.c0)LIKE(v0.c0))))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((v0.c0)AND(x'')))/(((v0.c0)LIKE(v0.c0))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT rt0.c1, rt0.c2, rt0.c4, rt0.c3, v0.c0, rt0.c0 FROM v0, rt0 NOT INDEXED GROUP BY rt0.c1, rt0.c2, rt0.c4, rt0.c3, v0.c0, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c4, rt0.c3, v0.c0, rt0.c0 FROM v0, rt0 WHERE (LIKELY(DISTINCT ((rt0.c0)<(rt0.c3)))) GROUP BY rt0.c1, rt0.c2, rt0.c4, rt0.c3, v0.c0, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c4, rt0.c3, v0.c0, rt0.c0 FROM v0, rt0 WHERE ((NOT (LIKELY(DISTINCT ((rt0.c0)<(rt0.c3)))))) GROUP BY rt0.c1, rt0.c2, rt0.c4, rt0.c3, v0.c0, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c4, rt0.c3, v0.c0, rt0.c0 FROM v0, rt0 WHERE (((LIKELY(DISTINCT ((rt0.c0)<(rt0.c3)))) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c4, rt0.c3, v0.c0, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c4, rt0.c3, v0.c0, rt0.c0 FROM v0, rt0 NOT INDEXED GROUP BY rt0.c1, rt0.c2, rt0.c4, rt0.c3, v0.c0, rt0.c0;
SELECT ALL rt0.c1, rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c0;
SELECT ALL rt0.c1, rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c0 HAVING CAST(((SUM(AVG(COUNT(rt0.c3))))GLOB(rt0.c3)) AS NUMERIC) UNION ALL SELECT ALL rt0.c1, rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c0 HAVING (NOT (CAST(((SUM(AVG(COUNT(rt0.c3))))GLOB(rt0.c3)) AS NUMERIC))) UNION ALL SELECT ALL rt0.c1, rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c0 HAVING ((CAST(((SUM(AVG(COUNT(rt0.c3))))GLOB(rt0.c3)) AS NUMERIC)) ISNULL);
SELECT * FROM v0, rt0;
SELECT * FROM v0, rt0 WHERE (rt0.c3) UNION ALL SELECT * FROM v0, rt0 WHERE ((NOT (rt0.c3))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE (((rt0.c3) ISNULL));
SELECT * FROM v0, rt0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE ((((NOT (v0.c0)))&(x''))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT ((((NOT (v0.c0)))&(x''))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((((((NOT (v0.c0)))&(x''))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT ALL rt0.c1 FROM v0, rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM v0, rt0 WHERE ((+ (NULL))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM v0, rt0 WHERE ((NOT ((+ (NULL))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM v0, rt0 WHERE ((((+ (NULL))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM v0, rt0 GROUP BY rt0.c1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING UNLIKELY(((COUNT(COUNT(v0.c0))) ISNULL)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (UNLIKELY(((COUNT(COUNT(v0.c0))) ISNULL)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((UNLIKELY(((COUNT(COUNT(v0.c0))) ISNULL))) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE ((((((v0.c0 IN ()))AND(v0.c0)))OR(NULLIF(DISTINCT v0.c0, v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT ((((((v0.c0 IN ()))AND(v0.c0)))OR(NULLIF(DISTINCT v0.c0, v0.c0)))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((((((((v0.c0 IN ()))AND(v0.c0)))OR(NULLIF(DISTINCT v0.c0, v0.c0)))) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE ((((+ (v0.c0)))>>(x''))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT ((((+ (v0.c0)))>>(x''))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((((((+ (v0.c0)))>>(x''))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT rt0.c1, rt0.c2, v0.c0, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, v0.c0, rt0.c0;
SELECT rt0.c1, rt0.c2, v0.c0, rt0.c0 FROM rt0, v0 WHERE ((- ((((rt0.c0))<((rt0.c0)))))) GROUP BY rt0.c1, rt0.c2, v0.c0, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, v0.c0, rt0.c0 FROM rt0, v0 WHERE ((NOT ((- ((((rt0.c0))<((rt0.c0)))))))) GROUP BY rt0.c1, rt0.c2, v0.c0, rt0.c0 UNION SELECT rt0.c1, rt0.c2, v0.c0, rt0.c0 FROM rt0, v0 WHERE ((((- ((((rt0.c0))<((rt0.c0)))))) ISNULL)) GROUP BY rt0.c1, rt0.c2, v0.c0, rt0.c0;
SELECT rt0.c1, rt0.c2, v0.c0, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, v0.c0, rt0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(SUM(SUM(v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(SUM(SUM(v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(SUM(SUM(v0.c0)))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((rt0.c2) NOT NULL) COLLATE NOCASE) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((rt0.c2) NOT NULL) COLLATE NOCASE))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((rt0.c2) NOT NULL) COLLATE NOCASE) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (v0.c0) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (0Xffffffffee9a8feb) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (0Xffffffffee9a8feb))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((0xffffffffee9a8feb) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING CASE WHEN ((MAX(x'')) NOT NULL) THEN (((v0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))) ELSE ('vx%W\r' IN ()) END UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (CASE WHEN ((MAX(x'')) NOT NULL) THEN (((v0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))) ELSE ('vx%W\r' IN ()) END)) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((CASE WHEN ((MAX(x'')) NOT NULL) THEN (((v0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))) ELSE ('vx%W\r' IN ()) END) ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING CASE WHEN ((MAX(x'')) NOT NULL) THEN (((v0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))) ELSE ('vx%W\r' IN ()) END UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (CASE WHEN ((MAX(x'')) NOT NULL) THEN (((v0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))) ELSE ('vx%W\r' IN ()) END)) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((CASE WHEN ((MAX(x'')) NOT NULL) THEN (((v0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))) ELSE ('vx%W\r' IN ()) END) ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT * FROM v0;
SELECT * FROM v0 WHERE (((((((v0.c0)<(v0.c0)))OR(((((v0.c0)OR(v0.c0)))AND(v0.c0)))))AND((v0.c0 IN ())))) UNION ALL SELECT * FROM v0 WHERE ((NOT (((((((v0.c0)<(v0.c0)))OR(((((v0.c0)OR(v0.c0)))AND(v0.c0)))))AND((v0.c0 IN ())))))) UNION ALL SELECT ALL * FROM v0 WHERE (((((((((v0.c0)<(v0.c0)))OR(((((v0.c0)OR(v0.c0)))AND(v0.c0)))))AND((v0.c0 IN ())))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT rt0.c4, v0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0 CROSS JOIN v0 ON 0.6700021121759672 COLLATE NOCASE;
SELECT DISTINCT rt0.c4, v0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0 CROSS JOIN v0 ON 0.6700021121759672 COLLATE NOCASE WHERE (CASE WHEN (rt0.c2 IN (rt0.c3)) THEN TYPEOF(DISTINCT rt0.c3) ELSE CAST(rt0.c2 AS NUMERIC) END) UNION SELECT DISTINCT rt0.c4, v0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0 CROSS JOIN v0 ON 0.6700021121759672 COLLATE NOCASE WHERE ((NOT (CASE WHEN (rt0.c2 IN (rt0.c3)) THEN TYPEOF(DISTINCT rt0.c3) ELSE CAST(rt0.c2 AS NUMERIC) END))) UNION SELECT DISTINCT rt0.c4, v0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0 CROSS JOIN v0 ON 0.6700021121759672 COLLATE NOCASE WHERE (((CASE WHEN (rt0.c2 IN (rt0.c3)) THEN TYPEOF(DISTINCT rt0.c3) ELSE CAST(rt0.c2 AS NUMERIC) END) ISNULL));
SELECT DISTINCT rt0.c4, v0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0 CROSS JOIN v0 ON 0.6700021121759672 COLLATE NOCASE;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((((v0.c0)IS(v0.c0))) IS FALSE)) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((v0.c0)IS(v0.c0))) IS FALSE)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((((v0.c0)IS(v0.c0))) IS FALSE)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c4, v0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY rt0.c4, v0.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c4, v0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY rt0.c4, v0.c0, rt0.c2, rt0.c1, rt0.c0 HAVING GROUP_CONCAT(MIN(rt0.c3)) UNION ALL SELECT ALL rt0.c4, v0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY rt0.c4, v0.c0, rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (GROUP_CONCAT(MIN(rt0.c3)))) UNION ALL SELECT ALL rt0.c4, v0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY rt0.c4, v0.c0, rt0.c2, rt0.c1, rt0.c0 HAVING ((GROUP_CONCAT(MIN(rt0.c3))) ISNULL);
SELECT rt0.c3, rt0.c4 FROM v0, rt0;
SELECT rt0.c3, rt0.c4 FROM v0, rt0 WHERE ((((((x'ac71') NOTNULL), (v0.c0 IN (rt0.c0)), ''))<((rt0.c0, CAST(rt0.c0 AS REAL), ((rt0.c1) ISNULL))))) UNION ALL SELECT ALL rt0.c3, rt0.c4 FROM v0, rt0 WHERE ((NOT ((((((x'ac71') NOTNULL), (v0.c0 IN (rt0.c0)), ''))<((rt0.c0, CAST(rt0.c0 AS REAL), ((rt0.c1) ISNULL))))))) UNION ALL SELECT rt0.c3, rt0.c4 FROM v0, rt0 WHERE ((((((((x'ac71') NOTNULL), (v0.c0 IN (rt0.c0)), ''))<((rt0.c0, CAST(rt0.c0 AS REAL), ((rt0.c1) ISNULL))))) ISNULL));
SELECT rt0.c3, rt0.c4 FROM v0, rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (CAST(((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)) AS NUMERIC)) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (CAST(((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)) AS NUMERIC)))) UNION SELECT DISTINCT * FROM v0 WHERE (((CAST(((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)) AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((((- (NULL))) BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND ((- (v0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((((- (NULL))) BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND ((- (v0.c0))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((((- (NULL))) BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND ((- (v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c3, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c4;
SELECT rt0.c3, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c4 HAVING 0.16196425847442486 UNION ALL SELECT rt0.c3, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c4 HAVING (NOT (0.16196425847442486)) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c4 HAVING ((0.16196425847442486) ISNULL);
SELECT ALL rt0.c3, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c4;
SELECT rt0.c3, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c4 HAVING 0.16196425847442486 UNION ALL SELECT rt0.c3, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c4 HAVING (NOT (0.16196425847442486)) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c4 HAVING ((0.16196425847442486) ISNULL);
SELECT ALL rt0.c3, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c4;
SELECT rt0.c0 FROM rt0, v0;
SELECT ALL rt0.c0 FROM rt0, v0 WHERE (0x637e4e09) UNION ALL SELECT rt0.c0 FROM rt0, v0 WHERE ((NOT (0x637e4e09))) UNION ALL SELECT ALL rt0.c0 FROM rt0, v0 WHERE (((0X637e4e09) ISNULL));
SELECT rt0.c0 FROM rt0, v0;
SELECT DISTINCT rt0.c0, rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c3 FROM rt0 WHERE (((NULL IN (NULL, rt0.c3, rt0.c0)) IN (rt0.c0))) UNION SELECT DISTINCT rt0.c0, rt0.c3 FROM rt0 WHERE ((NOT (((NULL IN (NULL, rt0.c3, rt0.c0)) IN (rt0.c0))))) UNION SELECT DISTINCT rt0.c0, rt0.c3 FROM rt0 WHERE (((((NULL IN (NULL, rt0.c3, rt0.c0)) IN (rt0.c0))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c3 FROM rt0;
SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c1, rt0.c4 FROM v0, rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1, rt0.c4;
SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c1, rt0.c4 FROM v0, rt0 WHERE (LTRIM(rt0.c3, v0.c0) COLLATE BINARY) GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1, rt0.c4 UNION SELECT rt0.c2, rt0.c3, rt0.c0, rt0.c1, rt0.c4 FROM v0, rt0 WHERE ((NOT (LTRIM(rt0.c3, v0.c0) COLLATE BINARY))) GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1, rt0.c4 UNION SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c1, rt0.c4 FROM v0, rt0 WHERE (((LTRIM(rt0.c3, v0.c0) COLLATE BINARY) ISNULL)) GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1, rt0.c4;
SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c1, rt0.c4 FROM v0, rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1, rt0.c4;
SELECT ALL rt0.c4, v0.c0, rt0.c3 FROM rt0, v0 GROUP BY rt0.c4, v0.c0, rt0.c3;
SELECT rt0.c4, v0.c0, rt0.c3 FROM rt0, v0 GROUP BY rt0.c4, v0.c0, rt0.c3 HAVING COUNT(x'') UNION ALL SELECT ALL rt0.c4, v0.c0, rt0.c3 FROM rt0, v0 GROUP BY rt0.c4, v0.c0, rt0.c3 HAVING (NOT (COUNT(x''))) UNION ALL SELECT rt0.c4, v0.c0, rt0.c3 FROM rt0, v0 GROUP BY rt0.c4, v0.c0, rt0.c3 HAVING ((COUNT(x'')) ISNULL);
SELECT ALL rt0.c4, v0.c0, rt0.c3 FROM rt0, v0 GROUP BY rt0.c4, v0.c0, rt0.c3;
SELECT rt0.c4, v0.c0, rt0.c3 FROM rt0, v0 GROUP BY rt0.c4, v0.c0, rt0.c3 HAVING COUNT(x'') UNION ALL SELECT ALL rt0.c4, v0.c0, rt0.c3 FROM rt0, v0 GROUP BY rt0.c4, v0.c0, rt0.c3 HAVING (NOT (COUNT(x''))) UNION ALL SELECT rt0.c4, v0.c0, rt0.c3 FROM rt0, v0 GROUP BY rt0.c4, v0.c0, rt0.c3 HAVING ((COUNT(x'')) ISNULL);
SELECT ALL rt0.c4, v0.c0, rt0.c3 FROM rt0, v0 GROUP BY rt0.c4, v0.c0, rt0.c3;
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) IS FALSE)) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) IS FALSE)))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) IS FALSE)) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c3 FROM rt0 WHERE ((NOT (((((rt0.c2)OR(rt0.c0)))AND(rt0.c0))))) UNION SELECT DISTINCT rt0.c3 FROM rt0 WHERE ((NOT ((NOT (((((rt0.c2)OR(rt0.c0)))AND(rt0.c0))))))) UNION SELECT DISTINCT rt0.c3 FROM rt0 WHERE ((((NOT (((((rt0.c2)OR(rt0.c0)))AND(rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c3 FROM rt0;
SELECT rt0.c4 FROM rt0 GROUP BY rt0.c4;
SELECT rt0.c4 FROM rt0 WHERE (CAST((((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c4))) AS INTEGER)) GROUP BY rt0.c4 UNION SELECT rt0.c4 FROM rt0 WHERE ((NOT (CAST((((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c4))) AS INTEGER)))) GROUP BY rt0.c4 UNION SELECT ALL rt0.c4 FROM rt0 WHERE (((CAST((((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c4))) AS INTEGER)) ISNULL)) GROUP BY rt0.c4;
SELECT rt0.c4 FROM rt0 GROUP BY rt0.c4;
SELECT rt0.c4, rt0.c2, rt0.c3, rt0.c1 FROM rt0, v0 GROUP BY rt0.c4, rt0.c2, rt0.c3, rt0.c1;
SELECT rt0.c4, rt0.c2, rt0.c3, rt0.c1 FROM rt0, v0 GROUP BY rt0.c4, rt0.c2, rt0.c3, rt0.c1 HAVING (((rt0.c2, MAX(GROUP_CONCAT(rt0.c3)), MAX(rt0.c2))) NOT BETWEEN ((COUNT(*), MIN(v0.c0), MAX(SUM(rt0.c2)))) AND ((TOTAL(rt0.c2), SUM(COUNT(*)), CASE MIN(v0.c0)  WHEN TOTAL(rt0.c3) THEN COUNT(*) WHEN SUM(rt0.c1) THEN GROUP_CONCAT(MAX(rt0.c3)) WHEN rt0.c4 THEN rt0.c0 WHEN NULL THEN GROUP_CONCAT(TOTAL(SUM(v0.c0))) WHEN COUNT(AVG(AVG(COUNT(MAX(AVG(rt0.c1)))))) THEN rt0.c2 END))) UNION ALL SELECT rt0.c4, rt0.c2, rt0.c3, rt0.c1 FROM rt0, v0 GROUP BY rt0.c4, rt0.c2, rt0.c3, rt0.c1 HAVING (NOT ((((rt0.c2, MAX(GROUP_CONCAT(rt0.c3)), MAX(rt0.c2))) NOT BETWEEN ((COUNT(*), MIN(v0.c0), MAX(SUM(rt0.c2)))) AND ((TOTAL(rt0.c2), SUM(COUNT(*)), CASE MIN(v0.c0)  WHEN TOTAL(rt0.c3) THEN COUNT(*) WHEN SUM(rt0.c1) THEN GROUP_CONCAT(MAX(rt0.c3)) WHEN rt0.c4 THEN rt0.c0 WHEN NULL THEN GROUP_CONCAT(TOTAL(SUM(v0.c0))) WHEN COUNT(AVG(AVG(COUNT(MAX(AVG(rt0.c1)))))) THEN rt0.c2 END))))) UNION ALL SELECT ALL rt0.c4, rt0.c2, rt0.c3, rt0.c1 FROM rt0, v0 GROUP BY rt0.c4, rt0.c2, rt0.c3, rt0.c1 HAVING (((((rt0.c2, MAX(GROUP_CONCAT(rt0.c3)), MAX(rt0.c2))) NOT BETWEEN ((COUNT(*), MIN(v0.c0), MAX(SUM(rt0.c2)))) AND ((TOTAL(rt0.c2), SUM(COUNT(*)), CASE MIN(v0.c0)  WHEN TOTAL(rt0.c3) THEN COUNT(*) WHEN SUM(rt0.c1) THEN GROUP_CONCAT(MAX(rt0.c3)) WHEN rt0.c4 THEN rt0.c0 WHEN NULL THEN GROUP_CONCAT(TOTAL(SUM(v0.c0))) WHEN COUNT(AVG(AVG(COUNT(MAX(AVG(rt0.c1)))))) THEN rt0.c2 END)))) ISNULL);
SELECT * FROM v0 FULL OUTER JOIN rt0 ON SQLITE_VERSION();
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON SQLITE_VERSION() WHERE (((((((((rt0.c1)AND((((v0.c0))=((rt0.c2))))))AND(((v0.c0)AND(rt0.c4)))))AND('0.8742328791642128')))OR(((rt0.c3) ISNULL)))) UNION ALL SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON SQLITE_VERSION() WHERE ((NOT (((((((((rt0.c1)AND((((v0.c0))=((rt0.c2))))))AND(((v0.c0)AND(rt0.c4)))))AND('0.8742328791642128')))OR(((rt0.c3) ISNULL)))))) UNION ALL SELECT * FROM v0 FULL OUTER JOIN rt0 ON SQLITE_VERSION() WHERE (((((((((((rt0.c1)AND((((v0.c0))=((rt0.c2))))))AND(((v0.c0)AND(rt0.c4)))))AND('0.8742328791642128')))OR(((rt0.c3) ISNULL)))) ISNULL));
SELECT * FROM v0 FULL OUTER JOIN rt0 ON SQLITE_VERSION();
SELECT DISTINCT rt0.c0, v0.c0 FROM rt0, v0;
SELECT DISTINCT rt0.c0, v0.c0 FROM rt0, v0 WHERE (CASE rt0.c1 COLLATE BINARY  WHEN ((((rt0.c1)OR(rt0.c1)))OR(rt0.c0)) THEN ((rt0.c1)IS(rt0.c3)) ELSE CAST(v0.c0 AS NUMERIC) END) UNION SELECT DISTINCT rt0.c0, v0.c0 FROM rt0, v0 WHERE ((NOT (CASE rt0.c1 COLLATE BINARY  WHEN ((((rt0.c1)OR(rt0.c1)))OR(rt0.c0)) THEN ((rt0.c1)IS(rt0.c3)) ELSE CAST(v0.c0 AS NUMERIC) END))) UNION SELECT DISTINCT rt0.c0, v0.c0 FROM rt0, v0 WHERE (((CASE rt0.c1 COLLATE BINARY  WHEN ((((rt0.c1)OR(rt0.c1)))OR(rt0.c0)) THEN ((rt0.c1)IS(rt0.c3)) ELSE CAST(v0.c0 AS NUMERIC) END) ISNULL));
SELECT DISTINCT rt0.c0, v0.c0 FROM rt0, v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((v0.c0)GLOB(v0.c0)) COLLATE NOCASE) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((v0.c0)GLOB(v0.c0)) COLLATE NOCASE))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0)GLOB(v0.c0)) COLLATE NOCASE) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c4, rt0.c3, rt0.c0 FROM v0, rt0 GROUP BY rt0.c4, rt0.c3, rt0.c0;
SELECT ALL rt0.c4, rt0.c3, rt0.c0 FROM v0, rt0 GROUP BY rt0.c4, rt0.c3, rt0.c0 HAVING '' UNION ALL SELECT rt0.c4, rt0.c3, rt0.c0 FROM v0, rt0 GROUP BY rt0.c4, rt0.c3, rt0.c0 HAVING (NOT ('')) UNION ALL SELECT ALL rt0.c4, rt0.c3, rt0.c0 FROM v0, rt0 GROUP BY rt0.c4, rt0.c3, rt0.c0 HAVING (('') ISNULL);
SELECT ALL rt0.c4, rt0.c3, rt0.c0 FROM v0, rt0 GROUP BY rt0.c4, rt0.c3, rt0.c0;
SELECT ALL rt0.c4, rt0.c3, rt0.c0 FROM v0, rt0 GROUP BY rt0.c4, rt0.c3, rt0.c0 HAVING '' UNION ALL SELECT rt0.c4, rt0.c3, rt0.c0 FROM v0, rt0 GROUP BY rt0.c4, rt0.c3, rt0.c0 HAVING (NOT ('')) UNION ALL SELECT ALL rt0.c4, rt0.c3, rt0.c0 FROM v0, rt0 GROUP BY rt0.c4, rt0.c3, rt0.c0 HAVING (('') ISNULL);
SELECT ALL rt0.c4, rt0.c3, rt0.c0 FROM v0, rt0 GROUP BY rt0.c4, rt0.c3, rt0.c0;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (((ABS(rt0.c4)) NOTNULL)) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((ABS(rt0.c4)) NOTNULL)))) UNION ALL SELECT * FROM rt0 WHERE (((((ABS(rt0.c4)) NOTNULL)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE ((((v0.c0, (((rt0.c3))!=((rt0.c1))), (((rt0.c0))<((rt0.c3)))))<(((v0.c0 IN ()), (((rt0.c4)) NOT BETWEEN ((rt0.c1)) AND ((x'a3c8'))), CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT ((((v0.c0, (((rt0.c3))<>((rt0.c1))), (((rt0.c0))<((rt0.c3)))))<(((v0.c0 IN ()), (((rt0.c4)) NOT BETWEEN ((rt0.c1)) AND ((x'a3c8'))), CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((((((v0.c0, (((rt0.c3))!=((rt0.c1))), (((rt0.c0))<((rt0.c3)))))<(((v0.c0 IN ()), (((rt0.c4)) NOT BETWEEN ((rt0.c1)) AND ((x'a3c8'))), CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT rt0.c4 FROM v0, rt0 GROUP BY rt0.c4;
SELECT rt0.c4 FROM v0, rt0 WHERE (((json_array_length(rt0.c0, v0.c0))IS NOT(((rt0.c4)<(rt0.c0))))) GROUP BY rt0.c4 UNION SELECT rt0.c4 FROM v0, rt0 WHERE ((NOT (((json_array_length(rt0.c0, v0.c0))IS NOT(((rt0.c4)<(rt0.c0))))))) GROUP BY rt0.c4 UNION SELECT rt0.c4 FROM v0, rt0 WHERE (((((json_array_length(rt0.c0, v0.c0))IS NOT(((rt0.c4)<(rt0.c0))))) ISNULL)) GROUP BY rt0.c4;
SELECT ALL rt0.c0, rt0.c4, rt0.c1, rt0.c2, v0.c0, rt0.c3 FROM v0, rt0 GROUP BY rt0.c0, rt0.c4, rt0.c1, rt0.c2, v0.c0, rt0.c3;
SELECT rt0.c0, rt0.c4, rt0.c1, rt0.c2, v0.c0, rt0.c3 FROM v0, rt0 GROUP BY rt0.c0, rt0.c4, rt0.c1, rt0.c2, v0.c0, rt0.c3 HAVING AVG(NULL) UNION ALL SELECT rt0.c0, rt0.c4, rt0.c1, rt0.c2, v0.c0, rt0.c3 FROM v0, rt0 GROUP BY rt0.c0, rt0.c4, rt0.c1, rt0.c2, v0.c0, rt0.c3 HAVING (NOT (AVG(NULL))) UNION ALL SELECT ALL rt0.c0, rt0.c4, rt0.c1, rt0.c2, v0.c0, rt0.c3 FROM v0, rt0 GROUP BY rt0.c0, rt0.c4, rt0.c1, rt0.c2, v0.c0, rt0.c3 HAVING ((AVG(NULL)) ISNULL);
SELECT ALL rt0.c0, rt0.c4, rt0.c1, rt0.c2, v0.c0, rt0.c3 FROM v0, rt0 GROUP BY rt0.c0, rt0.c4, rt0.c1, rt0.c2, v0.c0, rt0.c3;
SELECT rt0.c0, rt0.c4, rt0.c1, rt0.c2, v0.c0, rt0.c3 FROM v0, rt0 GROUP BY rt0.c0, rt0.c4, rt0.c1, rt0.c2, v0.c0, rt0.c3 HAVING AVG(NULL) UNION ALL SELECT rt0.c0, rt0.c4, rt0.c1, rt0.c2, v0.c0, rt0.c3 FROM v0, rt0 GROUP BY rt0.c0, rt0.c4, rt0.c1, rt0.c2, v0.c0, rt0.c3 HAVING (NOT (AVG(NULL))) UNION ALL SELECT ALL rt0.c0, rt0.c4, rt0.c1, rt0.c2, v0.c0, rt0.c3 FROM v0, rt0 GROUP BY rt0.c0, rt0.c4, rt0.c1, rt0.c2, v0.c0, rt0.c3 HAVING ((AVG(NULL)) ISNULL);
SELECT ALL rt0.c0, rt0.c4, rt0.c1, rt0.c2, v0.c0, rt0.c3 FROM v0, rt0 GROUP BY rt0.c0, rt0.c4, rt0.c1, rt0.c2, v0.c0, rt0.c3;
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE ((('\rK')>>(((((0.15793973817029605)AND(v0.c0)))AND(v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT ((('\rK')>>(((((0.15793973817029605)AND(v0.c0)))AND(v0.c0))))))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((((('\rK')>>(((((0.15793973817029605)AND(v0.c0)))AND(v0.c0))))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((v0.c0)<>(v0.c0)) COLLATE NOCASE) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((v0.c0)!=(v0.c0)) COLLATE NOCASE))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((v0.c0)<>(v0.c0)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL rt0.c1, rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c4;
SELECT rt0.c1, rt0.c2, rt0.c4 FROM rt0 WHERE (IFNULL(DISTINCT CAST(rt0.c0 AS BLOB), CASE rt0.c4  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c3 END)) GROUP BY rt0.c1, rt0.c2, rt0.c4 UNION SELECT rt0.c1, rt0.c2, rt0.c4 FROM rt0 WHERE ((NOT (IFNULL(DISTINCT CAST(rt0.c0 AS BLOB), CASE rt0.c4  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c3 END)))) GROUP BY rt0.c1, rt0.c2, rt0.c4 UNION SELECT rt0.c1, rt0.c2, rt0.c4 FROM rt0 WHERE (((IFNULL(DISTINCT CAST(rt0.c0 AS BLOB), CASE rt0.c4  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c3 END)) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c4;
SELECT ALL rt0.c1, rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c4;
SELECT ALL rt0.c2, v0.c0, rt0.c4, rt0.c1, rt0.c0, rt0.c3 FROM v0, rt0 GROUP BY rt0.c2, v0.c0, rt0.c4, rt0.c1, rt0.c0, rt0.c3;
SELECT rt0.c2, v0.c0, rt0.c4, rt0.c1, rt0.c0, rt0.c3 FROM v0, rt0 GROUP BY rt0.c2, v0.c0, rt0.c4, rt0.c1, rt0.c0, rt0.c3 HAVING MAX(((rt0.c2)>=(MAX(COUNT(rt0.c4))))) UNION ALL SELECT rt0.c2, v0.c0, rt0.c4, rt0.c1, rt0.c0, rt0.c3 FROM v0, rt0 GROUP BY rt0.c2, v0.c0, rt0.c4, rt0.c1, rt0.c0, rt0.c3 HAVING (NOT (MAX(((rt0.c2)>=(MAX(COUNT(rt0.c4))))))) UNION ALL SELECT rt0.c2, v0.c0, rt0.c4, rt0.c1, rt0.c0, rt0.c3 FROM v0, rt0 GROUP BY rt0.c2, v0.c0, rt0.c4, rt0.c1, rt0.c0, rt0.c3 HAVING ((MAX(((rt0.c2)>=(MAX(COUNT(rt0.c4)))))) ISNULL);
SELECT * FROM rt0, v0;
SELECT * FROM rt0, v0 WHERE (((CASE WHEN rt0.c1 THEN v0.c0 ELSE rt0.c1 END)OR((~ (rt0.c1))))) UNION ALL SELECT * FROM rt0, v0 WHERE ((NOT (((CASE WHEN rt0.c1 THEN v0.c0 ELSE rt0.c1 END)OR((~ (rt0.c1))))))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE (((((CASE WHEN rt0.c1 THEN v0.c0 ELSE rt0.c1 END)OR((~ (rt0.c1))))) ISNULL));
SELECT * FROM rt0, v0;
SELECT DISTINCT rt0.c4, rt0.c2, rt0.c1, rt0.c0, rt0.c3, v0.c0 FROM rt0, v0;
SELECT DISTINCT rt0.c4, rt0.c2, rt0.c1, rt0.c0, rt0.c3, v0.c0 FROM rt0, v0 WHERE (((((rt0.c0)>=('A''k\h	T1'))) BETWEEN ((rt0.c3 IN ())) AND (rt0.c2))) UNION SELECT DISTINCT rt0.c4, rt0.c2, rt0.c1, rt0.c0, rt0.c3, v0.c0 FROM rt0, v0 WHERE ((NOT (((((rt0.c0)>=('A''k\h	T1'))) BETWEEN ((rt0.c3 IN ())) AND (rt0.c2))))) UNION SELECT DISTINCT rt0.c4, rt0.c2, rt0.c1, rt0.c0, rt0.c3, v0.c0 FROM rt0, v0 WHERE (((((((rt0.c0)>=('A''k\h	T1'))) BETWEEN ((rt0.c3 IN ())) AND (rt0.c2))) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c2, rt0.c1, rt0.c0, rt0.c3, v0.c0 FROM rt0, v0;
SELECT rt0.c3, rt0.c0 FROM rt0, v0 GROUP BY rt0.c3, rt0.c0;
SELECT ALL rt0.c3, rt0.c0 FROM rt0, v0 WHERE (((rt0.c1)||((~ (v0.c0))))) GROUP BY rt0.c3, rt0.c0 UNION SELECT ALL rt0.c3, rt0.c0 FROM rt0, v0 WHERE ((NOT (((rt0.c1)||((~ (v0.c0))))))) GROUP BY rt0.c3, rt0.c0 UNION SELECT rt0.c3, rt0.c0 FROM rt0, v0 WHERE (((((rt0.c1)||((~ (v0.c0))))) ISNULL)) GROUP BY rt0.c3, rt0.c0;
SELECT rt0.c3, rt0.c0 FROM rt0, v0 GROUP BY rt0.c3, rt0.c0;
SELECT ALL rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3;
SELECT rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3 HAVING GROUP_CONCAT(rt0.c3) COLLATE NOCASE UNION ALL SELECT rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3 HAVING (NOT (GROUP_CONCAT(rt0.c3) COLLATE NOCASE)) UNION ALL SELECT rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3 HAVING ((GROUP_CONCAT(rt0.c3) COLLATE NOCASE) ISNULL);
SELECT ALL rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3;
SELECT rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3 HAVING GROUP_CONCAT(rt0.c3) COLLATE NOCASE UNION ALL SELECT rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3 HAVING (NOT (GROUP_CONCAT(rt0.c3) COLLATE NOCASE)) UNION ALL SELECT rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3 HAVING ((GROUP_CONCAT(rt0.c3) COLLATE NOCASE) ISNULL);
SELECT ALL rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3;
SELECT ALL rt0.c0, rt0.c3, rt0.c2, rt0.c4 FROM rt0;
SELECT ALL rt0.c0, rt0.c3, rt0.c2, rt0.c4 FROM rt0 WHERE (CASE ((x'')==(rt0.c4))  WHEN rt0.c4 THEN CAST(rt0.c2 AS NUMERIC) ELSE CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN -1981708643 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c0 END END) UNION ALL SELECT rt0.c0, rt0.c3, rt0.c2, rt0.c4 FROM rt0 WHERE ((NOT (CASE ((x'')=(rt0.c4))  WHEN rt0.c4 THEN CAST(rt0.c2 AS NUMERIC) ELSE CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN -1981708643 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c0 END END))) UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c2, rt0.c4 FROM rt0 WHERE (((CASE ((x'')==(rt0.c4))  WHEN rt0.c4 THEN CAST(rt0.c2 AS NUMERIC) ELSE CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN -1981708643 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c0 END END) ISNULL));
SELECT ALL rt0.c0, rt0.c3, rt0.c2, rt0.c4 FROM rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (x'') UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (x''))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((x'') ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL rt0.c0, rt0.c2, v0.c0, rt0.c4, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2, v0.c0, rt0.c4, rt0.c1;
SELECT rt0.c0, rt0.c2, v0.c0, rt0.c4, rt0.c1 FROM rt0, v0 WHERE (((rt0.c2 COLLATE BINARY) NOT BETWEEN (LIKELIHOOD(rt0.c1, 0.9420609748368428)) AND (CASE rt0.c3  WHEN v0.c0 THEN 0.907779304714394 WHEN rt0.c2 THEN rt0.c1 WHEN x'' THEN rt0.c3 END))) GROUP BY rt0.c0, rt0.c2, v0.c0, rt0.c4, rt0.c1 UNION SELECT rt0.c0, rt0.c2, v0.c0, rt0.c4, rt0.c1 FROM rt0, v0 WHERE ((NOT (((rt0.c2 COLLATE BINARY) NOT BETWEEN (LIKELIHOOD(rt0.c1, 0.9420609748368428)) AND (CASE rt0.c3  WHEN v0.c0 THEN 0.907779304714394 WHEN rt0.c2 THEN rt0.c1 WHEN x'' THEN rt0.c3 END))))) GROUP BY rt0.c0, rt0.c2, v0.c0, rt0.c4, rt0.c1 UNION SELECT rt0.c0, rt0.c2, v0.c0, rt0.c4, rt0.c1 FROM rt0, v0 WHERE (((((rt0.c2 COLLATE BINARY) NOT BETWEEN (LIKELIHOOD(rt0.c1, 0.9420609748368428)) AND (CASE rt0.c3  WHEN v0.c0 THEN 0.907779304714394 WHEN rt0.c2 THEN rt0.c1 WHEN x'' THEN rt0.c3 END))) ISNULL)) GROUP BY rt0.c0, rt0.c2, v0.c0, rt0.c4, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, v0.c0, rt0.c4, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2, v0.c0, rt0.c4, rt0.c1;
SELECT rt0.c3, rt0.c0, rt0.c4, rt0.c2 FROM v0 NATURAL JOIN rt0 GROUP BY rt0.c3, rt0.c0, rt0.c4, rt0.c2;
SELECT rt0.c3, rt0.c0, rt0.c4, rt0.c2 FROM v0 NATURAL JOIN rt0 GROUP BY rt0.c3, rt0.c0, rt0.c4, rt0.c2 HAVING COUNT((~ (rt0.c1))) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c4, rt0.c2 FROM v0 NATURAL JOIN rt0 GROUP BY rt0.c3, rt0.c0, rt0.c4, rt0.c2 HAVING (NOT (COUNT((~ (rt0.c1))))) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c4, rt0.c2 FROM v0 NATURAL JOIN rt0 GROUP BY rt0.c3, rt0.c0, rt0.c4, rt0.c2 HAVING ((COUNT((~ (rt0.c1)))) ISNULL);
SELECT rt0.c3, rt0.c0, rt0.c4, rt0.c2 FROM v0 NATURAL JOIN rt0 GROUP BY rt0.c3, rt0.c0, rt0.c4, rt0.c2;
SELECT rt0.c3, rt0.c0, rt0.c4, rt0.c2 FROM v0 NATURAL JOIN rt0 GROUP BY rt0.c3, rt0.c0, rt0.c4, rt0.c2 HAVING COUNT((~ (rt0.c1))) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c4, rt0.c2 FROM v0 NATURAL JOIN rt0 GROUP BY rt0.c3, rt0.c0, rt0.c4, rt0.c2 HAVING (NOT (COUNT((~ (rt0.c1))))) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c4, rt0.c2 FROM v0 NATURAL JOIN rt0 GROUP BY rt0.c3, rt0.c0, rt0.c4, rt0.c2 HAVING ((COUNT((~ (rt0.c1)))) ISNULL);
SELECT rt0.c3, rt0.c0, rt0.c4, rt0.c2 FROM v0 NATURAL JOIN rt0 GROUP BY rt0.c3, rt0.c0, rt0.c4, rt0.c2;
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE ((('(+E1') NOTNULL)) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT ((('(+E1') NOTNULL)))) UNION ALL SELECT ALL * FROM v0 WHERE ((((('(+E1') NOTNULL)) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (v0.c0) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c0;
SELECT rt0.c3, rt0.c0 FROM rt0 WHERE (((((rt0.c4)<>(rt0.c3))) IS TRUE)) GROUP BY rt0.c3, rt0.c0 UNION SELECT rt0.c3, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c4)<>(rt0.c3))) IS TRUE)))) GROUP BY rt0.c3, rt0.c0 UNION SELECT ALL rt0.c3, rt0.c0 FROM rt0 WHERE (((((((rt0.c4)!=(rt0.c3))) IS TRUE)) ISNULL)) GROUP BY rt0.c3, rt0.c0;
SELECT ALL rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c0;
SELECT rt0.c4, rt0.c0, rt0.c3, rt0.c1 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0, rt0.c3, rt0.c1;
SELECT ALL rt0.c4, rt0.c0, rt0.c3, rt0.c1 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0, rt0.c3, rt0.c1 HAVING rt0.c4 UNION ALL SELECT rt0.c4, rt0.c0, rt0.c3, rt0.c1 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0, rt0.c3, rt0.c1 HAVING (NOT (rt0.c4)) UNION ALL SELECT rt0.c4, rt0.c0, rt0.c3, rt0.c1 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0, rt0.c3, rt0.c1 HAVING ((rt0.c4) ISNULL);
SELECT rt0.c4, rt0.c0, rt0.c3, rt0.c1 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0, rt0.c3, rt0.c1;
SELECT ALL rt0.c4, rt0.c0, rt0.c3, rt0.c1 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0, rt0.c3, rt0.c1 HAVING rt0.c4 UNION ALL SELECT rt0.c4, rt0.c0, rt0.c3, rt0.c1 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0, rt0.c3, rt0.c1 HAVING (NOT (rt0.c4)) UNION ALL SELECT rt0.c4, rt0.c0, rt0.c3, rt0.c1 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0, rt0.c3, rt0.c1 HAVING ((rt0.c4) ISNULL);
SELECT rt0.c4, rt0.c0, rt0.c3, rt0.c1 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0, rt0.c3, rt0.c1;
SELECT ALL MIN(((LIKELIHOOD(rt0.c3, 0.24027864613057182))OR(((((rt0.c4)AND(rt0.c3)))OR(rt0.c2))))) FROM rt0 ORDER BY ((((((rt0.c2) IS TRUE))OR(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))OR(rt0.c0 COLLATE NOCASE))  NULLS LAST;
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (json_patch(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, CASE v0.c0  WHEN 1.193462196E9 THEN v0.c0 ELSE v0.c0 END)) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (json_patch(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, CASE v0.c0  WHEN 1.193462196E9 THEN v0.c0 ELSE v0.c0 END)))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((json_patch(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, CASE v0.c0  WHEN 1.193462196E9 THEN v0.c0 ELSE v0.c0 END)) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (((((CASE NULL  WHEN rt0.c2 THEN rt0.c2 ELSE v0.c0 END)OR(((v0.c0) BETWEEN (rt0.c0) AND (v0.c0)))))OR(((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c4))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (((((CASE NULL  WHEN rt0.c2 THEN rt0.c2 ELSE v0.c0 END)OR(((v0.c0) BETWEEN (rt0.c0) AND (v0.c0)))))OR(((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c4))))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((((((CASE NULL  WHEN rt0.c2 THEN rt0.c2 ELSE v0.c0 END)OR(((v0.c0) BETWEEN (rt0.c0) AND (v0.c0)))))OR(((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c4))))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT rt0.c2, v0.c0, rt0.c1, rt0.c3, rt0.c4, rt0.c0 FROM rt0, v0 GROUP BY rt0.c2, v0.c0, rt0.c1, rt0.c3, rt0.c4, rt0.c0;
SELECT rt0.c2, v0.c0, rt0.c1, rt0.c3, rt0.c4, rt0.c0 FROM rt0, v0 WHERE ((((rt0.c3, '', ((((rt0.c4)AND(rt0.c4)))AND(rt0.c1))))<>((((rt0.c0) IS TRUE), CAST(rt0.c1 AS TEXT), ((rt0.c1) ISNULL))))) GROUP BY rt0.c2, v0.c0, rt0.c1, rt0.c3, rt0.c4, rt0.c0 UNION SELECT rt0.c2, v0.c0, rt0.c1, rt0.c3, rt0.c4, rt0.c0 FROM rt0, v0 WHERE ((NOT ((((rt0.c3, '', ((((rt0.c4)AND(rt0.c4)))AND(rt0.c1))))<>((((rt0.c0) IS TRUE), CAST(rt0.c1 AS TEXT), ((rt0.c1) ISNULL))))))) GROUP BY rt0.c2, v0.c0, rt0.c1, rt0.c3, rt0.c4, rt0.c0 UNION SELECT rt0.c2, v0.c0, rt0.c1, rt0.c3, rt0.c4, rt0.c0 FROM rt0, v0 WHERE ((((((rt0.c3, '', ((((rt0.c4)AND(rt0.c4)))AND(rt0.c1))))!=((((rt0.c0) IS TRUE), CAST(rt0.c1 AS TEXT), ((rt0.c1) ISNULL))))) ISNULL)) GROUP BY rt0.c2, v0.c0, rt0.c1, rt0.c3, rt0.c4, rt0.c0;
SELECT rt0.c2, v0.c0, rt0.c1, rt0.c3, rt0.c4, rt0.c0 FROM rt0, v0 GROUP BY rt0.c2, v0.c0, rt0.c1, rt0.c3, rt0.c4, rt0.c0;
SELECT rt0.c4, v0.c0, rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c4, v0.c0, rt0.c0, rt0.c1;
SELECT rt0.c4, v0.c0, rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c4, v0.c0, rt0.c0, rt0.c1 HAVING COUNT(CASE COUNT(MIN(MAX(rt0.c1)))  WHEN v0.c0 THEN rt0.c3 WHEN rt0.c0 THEN COUNT(*) WHEN GROUP_CONCAT(SUM(MAX(MIN(MIN(rt0.c3))))) THEN TOTAL(v0.c0) END) UNION ALL SELECT ALL rt0.c4, v0.c0, rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c4, v0.c0, rt0.c0, rt0.c1 HAVING (NOT (COUNT(CASE COUNT(MIN(MAX(rt0.c1)))  WHEN v0.c0 THEN rt0.c3 WHEN rt0.c0 THEN COUNT(*) WHEN GROUP_CONCAT(SUM(MAX(MIN(MIN(rt0.c3))))) THEN TOTAL(v0.c0) END))) UNION ALL SELECT rt0.c4, v0.c0, rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c4, v0.c0, rt0.c0, rt0.c1 HAVING ((COUNT(CASE COUNT(MIN(MAX(rt0.c1)))  WHEN v0.c0 THEN rt0.c3 WHEN rt0.c0 THEN COUNT(*) WHEN GROUP_CONCAT(SUM(MAX(MIN(MIN(rt0.c3))))) THEN TOTAL(v0.c0) END)) ISNULL);
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE (TRIM(DISTINCT CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN 0.5396102434684005 THEN v0.c0 END, (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))) UNION ALL SELECT * FROM v0 WHERE ((NOT (TRIM(DISTINCT CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN 0.5396102434684005 THEN v0.c0 END, (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))))) UNION ALL SELECT * FROM v0 WHERE (((TRIM(DISTINCT CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN 0.5396102434684005 THEN v0.c0 END, (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0 NOT INDEXED, v0 WHERE (((((rt0.c4)AND(CASE WHEN v0.c0 THEN x'' ELSE v0.c0 END)))OR(((rt0.c4) NOT NULL)))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (((((rt0.c4)AND(CASE WHEN v0.c0 THEN x'' ELSE v0.c0 END)))OR(((rt0.c4) NOT NULL)))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((((((rt0.c4)AND(CASE WHEN v0.c0 THEN x'' ELSE v0.c0 END)))OR(((rt0.c4) NOT NULL)))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((((~ (v0.c0)))*(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((((~ (v0.c0)))*(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((((~ (v0.c0)))*(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0, rt0.c2, rt0.c4, rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY v0.c0, rt0.c2, rt0.c4, rt0.c0, rt0.c1;
SELECT ALL v0.c0, rt0.c2, rt0.c4, rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY v0.c0, rt0.c2, rt0.c4, rt0.c0, rt0.c1 HAVING (~ (((SUM(x''))>>(TOTAL(AVG(AVG(v0.c0))))))) UNION ALL SELECT v0.c0, rt0.c2, rt0.c4, rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY v0.c0, rt0.c2, rt0.c4, rt0.c0, rt0.c1 HAVING (NOT ((~ (((SUM(x''))>>(TOTAL(AVG(AVG(v0.c0))))))))) UNION ALL SELECT ALL v0.c0, rt0.c2, rt0.c4, rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY v0.c0, rt0.c2, rt0.c4, rt0.c0, rt0.c1 HAVING (((~ (((SUM(x''))>>(TOTAL(AVG(AVG(v0.c0)))))))) ISNULL);
SELECT ALL * FROM rt0, v0;
SELECT * FROM rt0, v0 WHERE (((((rt0.c3)AND(rt0.c3)))OR(x''))) UNION ALL SELECT * FROM rt0, v0 WHERE ((NOT (((((rt0.c3)AND(rt0.c3)))OR(x''))))) UNION ALL SELECT * FROM rt0, v0 WHERE (((((((rt0.c3)AND(rt0.c3)))OR(x''))) ISNULL));
SELECT ALL * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE ((((rt0.c0)) BETWEEN (((((v0.c0, rt0.c0, rt0.c4)) BETWEEN ((rt0.c3, rt0.c0, v0.c0)) AND ((rt0.c2, rt0.c2, rt0.c2))))) AND ((((((rt0.c4)OR(rt0.c3)))OR(v0.c0)))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT ((((rt0.c0)) BETWEEN (((((v0.c0, rt0.c0, rt0.c4)) BETWEEN ((rt0.c3, rt0.c0, v0.c0)) AND ((rt0.c2, rt0.c2, rt0.c2))))) AND ((((((rt0.c4)OR(rt0.c3)))OR(v0.c0)))))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((((((rt0.c0)) BETWEEN (((((v0.c0, rt0.c0, rt0.c4)) BETWEEN ((rt0.c3, rt0.c0, v0.c0)) AND ((rt0.c2, rt0.c2, rt0.c2))))) AND ((((((rt0.c4)OR(rt0.c3)))OR(v0.c0)))))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT v0.c0 FROM v0, rt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, rt0 WHERE (((((((rt0.c2)<<(rt0.c4)))AND(((v0.c0) BETWEEN (v0.c0) AND (rt0.c1)))))AND((((v0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, rt0 WHERE ((NOT (((((((rt0.c2)<<(rt0.c4)))AND(((v0.c0) BETWEEN (v0.c0) AND (rt0.c1)))))AND((((v0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, rt0 WHERE (((((((((rt0.c2)<<(rt0.c4)))AND(((v0.c0) BETWEEN (v0.c0) AND (rt0.c1)))))AND((((v0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0, rt0 GROUP BY v0.c0;
SELECT ALL rt0.c0, rt0.c3, rt0.c2 FROM rt0 FULL OUTER JOIN v0 ON ((NOT (rt0.c0)) IN (((v0.c0) NOTNULL))) GROUP BY rt0.c0, rt0.c3, rt0.c2;
SELECT rt0.c0, rt0.c3, rt0.c2 FROM rt0 FULL OUTER JOIN v0 ON ((NOT (rt0.c0)) IN (((v0.c0) NOTNULL))) GROUP BY rt0.c0, rt0.c3, rt0.c2 HAVING SUM(CAST(TOTAL(COUNT(COUNT(*))) AS NUMERIC)) UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c2 FROM rt0 FULL OUTER JOIN v0 ON ((NOT (rt0.c0)) IN (((v0.c0) NOTNULL))) GROUP BY rt0.c0, rt0.c3, rt0.c2 HAVING (NOT (SUM(CAST(TOTAL(COUNT(COUNT(*))) AS NUMERIC)))) UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c2 FROM rt0 FULL OUTER JOIN v0 ON ((NOT (rt0.c0)) IN (((v0.c0) NOTNULL))) GROUP BY rt0.c0, rt0.c3, rt0.c2 HAVING ((SUM(CAST(TOTAL(COUNT(COUNT(*))) AS NUMERIC))) ISNULL);
SELECT ALL rt0.c3, rt0.c0, v0.c0, rt0.c1 FROM rt0, v0;
SELECT rt0.c3, rt0.c0, v0.c0, rt0.c1 FROM rt0, v0 WHERE (rt0.c1) UNION ALL SELECT ALL rt0.c3, rt0.c0, v0.c0, rt0.c1 FROM rt0, v0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT rt0.c3, rt0.c0, v0.c0, rt0.c1 FROM rt0, v0 WHERE (((rt0.c1) ISNULL));
SELECT ALL rt0.c3, rt0.c0, v0.c0, rt0.c1 FROM rt0, v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))OR(CAST(v0.c0 AS NUMERIC)))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))OR(CAST(v0.c0 AS NUMERIC)))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))OR(CAST(v0.c0 AS NUMERIC)))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c4;
SELECT rt0.c2, rt0.c4 FROM rt0 WHERE ('BP') GROUP BY rt0.c2, rt0.c4 UNION SELECT rt0.c2, rt0.c4 FROM rt0 WHERE ((NOT ('BP'))) GROUP BY rt0.c2, rt0.c4 UNION SELECT rt0.c2, rt0.c4 FROM rt0 WHERE ((('BP') ISNULL)) GROUP BY rt0.c2, rt0.c4;
SELECT ALL rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c4;
SELECT rt0.c4, rt0.c2, rt0.c1, v0.c0, rt0.c0, rt0.c3 FROM v0, rt0 GROUP BY rt0.c4, rt0.c2, rt0.c1, v0.c0, rt0.c0, rt0.c3;
SELECT ALL rt0.c4, rt0.c2, rt0.c1, v0.c0, rt0.c0, rt0.c3 FROM v0, rt0 GROUP BY rt0.c4, rt0.c2, rt0.c1, v0.c0, rt0.c0, rt0.c3 HAVING (((NULLIF(COUNT(rt0.c4), rt0.c4)))>((CAST(rt0.c3 AS REAL)))) UNION ALL SELECT ALL rt0.c4, rt0.c2, rt0.c1, v0.c0, rt0.c0, rt0.c3 FROM v0, rt0 GROUP BY rt0.c4, rt0.c2, rt0.c1, v0.c0, rt0.c0, rt0.c3 HAVING (NOT ((((NULLIF(COUNT(rt0.c4), rt0.c4)))>((CAST(rt0.c3 AS REAL)))))) UNION ALL SELECT rt0.c4, rt0.c2, rt0.c1, v0.c0, rt0.c0, rt0.c3 FROM v0, rt0 GROUP BY rt0.c4, rt0.c2, rt0.c1, v0.c0, rt0.c0, rt0.c3 HAVING (((((NULLIF(COUNT(rt0.c4), rt0.c4)))>((CAST(rt0.c3 AS REAL))))) ISNULL);
SELECT rt0.c4, rt0.c2, rt0.c1, v0.c0, rt0.c0, rt0.c3 FROM v0, rt0 GROUP BY rt0.c4, rt0.c2, rt0.c1, v0.c0, rt0.c0, rt0.c3;
SELECT ALL rt0.c4, rt0.c2, rt0.c1, v0.c0, rt0.c0, rt0.c3 FROM v0, rt0 GROUP BY rt0.c4, rt0.c2, rt0.c1, v0.c0, rt0.c0, rt0.c3 HAVING (((NULLIF(COUNT(rt0.c4), rt0.c4)))>((CAST(rt0.c3 AS REAL)))) UNION ALL SELECT ALL rt0.c4, rt0.c2, rt0.c1, v0.c0, rt0.c0, rt0.c3 FROM v0, rt0 GROUP BY rt0.c4, rt0.c2, rt0.c1, v0.c0, rt0.c0, rt0.c3 HAVING (NOT ((((NULLIF(COUNT(rt0.c4), rt0.c4)))>((CAST(rt0.c3 AS REAL)))))) UNION ALL SELECT rt0.c4, rt0.c2, rt0.c1, v0.c0, rt0.c0, rt0.c3 FROM v0, rt0 GROUP BY rt0.c4, rt0.c2, rt0.c1, v0.c0, rt0.c0, rt0.c3 HAVING (((((NULLIF(COUNT(rt0.c4), rt0.c4)))>((CAST(rt0.c3 AS REAL))))) ISNULL);
SELECT rt0.c4, rt0.c2, rt0.c1, v0.c0, rt0.c0, rt0.c3 FROM v0, rt0 GROUP BY rt0.c4, rt0.c2, rt0.c1, v0.c0, rt0.c0, rt0.c3;
SELECT ALL rt0.c0, rt0.c1, rt0.c2, rt0.c4 FROM rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2, rt0.c4 FROM rt0 WHERE (((rt0.c2 IN ()) IN ())) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2, rt0.c4 FROM rt0 WHERE ((NOT (((rt0.c2 IN ()) IN ())))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2, rt0.c4 FROM rt0 WHERE (((((rt0.c2 IN ()) IN ())) ISNULL));
SELECT ALL rt0.c0, rt0.c1, rt0.c2, rt0.c4 FROM rt0;
SELECT DISTINCT rt0.c3, rt0.c4, rt0.c2, rt0.c1, v0.c0, rt0.c0 FROM v0, rt0;
SELECT DISTINCT rt0.c3, rt0.c4, rt0.c2, rt0.c1, v0.c0, rt0.c0 FROM v0, rt0 WHERE (rt0.c1) UNION SELECT DISTINCT rt0.c3, rt0.c4, rt0.c2, rt0.c1, v0.c0, rt0.c0 FROM v0, rt0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT rt0.c3, rt0.c4, rt0.c2, rt0.c1, v0.c0, rt0.c0 FROM v0, rt0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c4, rt0.c2, rt0.c1, v0.c0, rt0.c0 FROM v0, rt0;
SELECT ALL rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c1;
SELECT rt0.c4, rt0.c1 FROM rt0 WHERE (CASE WHEN CASE WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c2 WHEN 0.9884239271413626 THEN rt0.c2 ELSE rt0.c0 END THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c4)) ELSE ((rt0.c4) IS FALSE) END) GROUP BY rt0.c4, rt0.c1 UNION SELECT rt0.c4, rt0.c1 FROM rt0 WHERE ((NOT (CASE WHEN CASE WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c2 WHEN 0.9884239271413626 THEN rt0.c2 ELSE rt0.c0 END THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c4)) ELSE ((rt0.c4) IS FALSE) END))) GROUP BY rt0.c4, rt0.c1 UNION SELECT ALL rt0.c4, rt0.c1 FROM rt0 WHERE (((CASE WHEN CASE WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c2 WHEN 0.9884239271413626 THEN rt0.c2 ELSE rt0.c0 END THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c4)) ELSE ((rt0.c4) IS FALSE) END) ISNULL)) GROUP BY rt0.c4, rt0.c1;
SELECT ALL rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c1;
SELECT ALL rt0.c4, rt0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c4, rt0.c2, v0.c0;
SELECT rt0.c4, rt0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c4, rt0.c2, v0.c0 HAVING (((((rt0.c1) NOTNULL)))<((((rt0.c1) NOT BETWEEN (NULL) AND (GROUP_CONCAT(AVG('528014695'))))))) UNION ALL SELECT rt0.c4, rt0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c4, rt0.c2, v0.c0 HAVING (NOT ((((((rt0.c1) NOTNULL)))<((((rt0.c1) NOT BETWEEN (NULL) AND (GROUP_CONCAT(AVG('528014695'))))))))) UNION ALL SELECT rt0.c4, rt0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c4, rt0.c2, v0.c0 HAVING (((((((rt0.c1) NOTNULL)))<((((rt0.c1) NOT BETWEEN (NULL) AND (GROUP_CONCAT(AVG('528014695')))))))) ISNULL);
SELECT ALL rt0.c4, rt0.c2, rt0.c0 FROM v0, rt0;
SELECT ALL rt0.c4, rt0.c2, rt0.c0 FROM v0, rt0 WHERE (MIN(rt0.c1 COLLATE NOCASE, rt0.c4, ((x'') NOT BETWEEN (rt0.c4) AND ('')), 0.17810581628789168)) UNION ALL SELECT rt0.c4, rt0.c2, rt0.c0 FROM v0, rt0 WHERE ((NOT (MIN(rt0.c1 COLLATE NOCASE, rt0.c4, ((x'') NOT BETWEEN (rt0.c4) AND ('')), 0.17810581628789168)))) UNION ALL SELECT rt0.c4, rt0.c2, rt0.c0 FROM v0, rt0 WHERE (((MIN(rt0.c1 COLLATE NOCASE, rt0.c4, ((x'') NOT BETWEEN (rt0.c4) AND ('')), 0.17810581628789168)) ISNULL));
SELECT ALL rt0.c4, rt0.c2, rt0.c0 FROM v0, rt0;
SELECT DISTINCT v0.c0, rt0.c4, rt0.c0 FROM rt0, v0;
SELECT DISTINCT v0.c0, rt0.c4, rt0.c0 FROM rt0, v0 WHERE (v0.c0) UNION SELECT DISTINCT v0.c0, rt0.c4, rt0.c0 FROM rt0, v0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT v0.c0, rt0.c4, rt0.c0 FROM rt0, v0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT v0.c0, rt0.c4, rt0.c0 FROM rt0, v0;
SELECT ALL rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0;
SELECT rt0.c3, rt0.c2, rt0.c0 FROM rt0 WHERE ((((rt0.c0)) BETWEEN ((CASE WHEN NULL THEN -1.852601424E9 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END)) AND (((((rt0.c1, rt0.c4, rt0.c4))>=((rt0.c0, rt0.c2, rt0.c3))))))) GROUP BY rt0.c3, rt0.c2, rt0.c0 UNION SELECT rt0.c3, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c0)) BETWEEN ((CASE WHEN NULL THEN -1.852601424E9 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END)) AND (((((rt0.c1, rt0.c4, rt0.c4))>=((rt0.c0, rt0.c2, rt0.c3))))))))) GROUP BY rt0.c3, rt0.c2, rt0.c0 UNION SELECT rt0.c3, rt0.c2, rt0.c0 FROM rt0 WHERE ((((((rt0.c0)) BETWEEN ((CASE WHEN NULL THEN -1.852601424E9 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END)) AND (((((rt0.c1, rt0.c4, rt0.c4))>=((rt0.c0, rt0.c2, rt0.c3))))))) ISNULL)) GROUP BY rt0.c3, rt0.c2, rt0.c0;
SELECT ALL rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0;
SELECT ALL rt0.c2 FROM rt0, v0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0, v0 GROUP BY rt0.c2 HAVING (MAX(COUNT(rt0.c1)) IN ()) UNION ALL SELECT rt0.c2 FROM rt0, v0 GROUP BY rt0.c2 HAVING (NOT ((MAX(COUNT(rt0.c1)) IN ()))) UNION ALL SELECT rt0.c2 FROM rt0, v0 GROUP BY rt0.c2 HAVING (((MAX(COUNT(rt0.c1)) IN ())) ISNULL);
SELECT ALL rt0.c2 FROM rt0, v0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0, v0 GROUP BY rt0.c2 HAVING (MAX(COUNT(rt0.c1)) IN ()) UNION ALL SELECT rt0.c2 FROM rt0, v0 GROUP BY rt0.c2 HAVING (NOT ((MAX(COUNT(rt0.c1)) IN ()))) UNION ALL SELECT rt0.c2 FROM rt0, v0 GROUP BY rt0.c2 HAVING (((MAX(COUNT(rt0.c1)) IN ())) ISNULL);
SELECT ALL rt0.c2 FROM rt0, v0 GROUP BY rt0.c2;
SELECT rt0.c2, rt0.c1, rt0.c3, rt0.c4, rt0.c0 FROM rt0;
SELECT ALL rt0.c2, rt0.c1, rt0.c3, rt0.c4, rt0.c0 FROM rt0 WHERE ((NOT (rt0.c4))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c3, rt0.c4, rt0.c0 FROM rt0 WHERE ((NOT ((NOT (rt0.c4))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c3, rt0.c4, rt0.c0 FROM rt0 WHERE ((((NOT (rt0.c4))) ISNULL));
SELECT rt0.c2, rt0.c1, rt0.c3, rt0.c4, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((((v0.c0)<<(0.2913462688838583))) ISNULL)) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((v0.c0)<<(0.2913462688838583))) ISNULL)))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((v0.c0)<<(0.2913462688838583))) ISNULL)) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT v0.c0, rt0.c4, rt0.c2, rt0.c0, rt0.c3, rt0.c1 FROM v0, rt0 GROUP BY v0.c0, rt0.c4, rt0.c2, rt0.c0, rt0.c3, rt0.c1;
SELECT ALL v0.c0, rt0.c4, rt0.c2, rt0.c0, rt0.c3, rt0.c1 FROM v0, rt0 WHERE (((((((((MAX(rt0.c0, rt0.c3))OR(((rt0.c3)&(rt0.c4)))))OR(((rt0.c0)||(rt0.c0)))))AND(((rt0.c4)LIKE(rt0.c1)))))AND((rt0.c1 IN ())))) GROUP BY v0.c0, rt0.c4, rt0.c2, rt0.c0, rt0.c3, rt0.c1 UNION SELECT ALL v0.c0, rt0.c4, rt0.c2, rt0.c0, rt0.c3, rt0.c1 FROM v0, rt0 WHERE ((NOT (((((((((MAX(rt0.c0, rt0.c3))OR(((rt0.c3)&(rt0.c4)))))OR(((rt0.c0)||(rt0.c0)))))AND(((rt0.c4)LIKE(rt0.c1)))))AND((rt0.c1 IN ())))))) GROUP BY v0.c0, rt0.c4, rt0.c2, rt0.c0, rt0.c3, rt0.c1 UNION SELECT v0.c0, rt0.c4, rt0.c2, rt0.c0, rt0.c3, rt0.c1 FROM v0, rt0 WHERE (((((((((((MAX(rt0.c0, rt0.c3))OR(((rt0.c3)&(rt0.c4)))))OR(((rt0.c0)||(rt0.c0)))))AND(((rt0.c4)LIKE(rt0.c1)))))AND((rt0.c1 IN ())))) ISNULL)) GROUP BY v0.c0, rt0.c4, rt0.c2, rt0.c0, rt0.c3, rt0.c1;
SELECT v0.c0, rt0.c4, rt0.c2, rt0.c0, rt0.c3, rt0.c1 FROM v0, rt0 GROUP BY v0.c0, rt0.c4, rt0.c2, rt0.c0, rt0.c3, rt0.c1;
SELECT ALL rt0.c0, rt0.c1, rt0.c4 FROM rt0, v0 GROUP BY rt0.c0, rt0.c1, rt0.c4;
SELECT rt0.c0, rt0.c1, rt0.c4 FROM rt0, v0 GROUP BY rt0.c0, rt0.c1, rt0.c4 HAVING ((((((((COUNT(rt0.c4))AND(COUNT(AVG(TOTAL(SUM(MAX(v0.c0))))))))OR(COUNT(*))))OR(COUNT(*))))OR(v0.c0)) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c4 FROM rt0, v0 GROUP BY rt0.c0, rt0.c1, rt0.c4 HAVING (NOT (((((((((COUNT(rt0.c4))AND(COUNT(AVG(TOTAL(SUM(MAX(v0.c0))))))))OR(COUNT(*))))OR(COUNT(*))))OR(v0.c0)))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c4 FROM rt0, v0 GROUP BY rt0.c0, rt0.c1, rt0.c4 HAVING ((((((((((COUNT(rt0.c4))AND(COUNT(AVG(TOTAL(SUM(MAX(v0.c0))))))))OR(COUNT(*))))OR(COUNT(*))))OR(v0.c0))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (((((((((((rt0.c4)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))AND(x''))) NOTNULL)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((((((((rt0.c4)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))AND(x''))) NOTNULL)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((((((((rt0.c4)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))AND(x''))) NOTNULL)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((((v0.c0)OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))AND(((v0.c0) NOTNULL)))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((v0.c0)OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))AND(((v0.c0) NOTNULL)))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((v0.c0)OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))AND(((v0.c0) NOTNULL)))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL rt0.c2, rt0.c3, rt0.c1, v0.c0, rt0.c4 FROM v0 FULL OUTER JOIN rt0 ON (((((rt0.c0)-(rt0.c3))))!=(((((rt0.c0))>((rt0.c3)))))) GROUP BY rt0.c2, rt0.c3, rt0.c1, v0.c0, rt0.c4;
SELECT rt0.c2, rt0.c3, rt0.c1, v0.c0, rt0.c4 FROM v0 FULL OUTER JOIN rt0 ON (((((rt0.c0)-(rt0.c3))))!=(((((rt0.c0))>((rt0.c3)))))) WHERE (CASE (rt0.c4 IN ())  WHEN ((('0.2284321497837044')) BETWEEN ((v0.c0)) AND ((rt0.c0))) THEN ((rt0.c0) NOT NULL) WHEN ((rt0.c1)&(rt0.c3)) THEN rt0.c2 WHEN (('/PQ3')&(rt0.c0)) THEN rt0.c2 END) GROUP BY rt0.c2, rt0.c3, rt0.c1, v0.c0, rt0.c4 UNION SELECT ALL rt0.c2, rt0.c3, rt0.c1, v0.c0, rt0.c4 FROM v0 FULL OUTER JOIN rt0 ON (((((rt0.c0)-(rt0.c3))))!=(((((rt0.c0))>((rt0.c3)))))) WHERE ((NOT (CASE (rt0.c4 IN ())  WHEN ((('0.2284321497837044')) BETWEEN ((v0.c0)) AND ((rt0.c0))) THEN ((rt0.c0) NOT NULL) WHEN ((rt0.c1)&(rt0.c3)) THEN rt0.c2 WHEN (('/PQ3')&(rt0.c0)) THEN rt0.c2 END))) GROUP BY rt0.c2, rt0.c3, rt0.c1, v0.c0, rt0.c4 UNION SELECT ALL rt0.c2, rt0.c3, rt0.c1, v0.c0, rt0.c4 FROM v0 FULL OUTER JOIN rt0 ON (((((rt0.c0)-(rt0.c3))))<>(((((rt0.c0))>((rt0.c3)))))) WHERE (((CASE (rt0.c4 IN ())  WHEN ((('0.2284321497837044')) BETWEEN ((v0.c0)) AND ((rt0.c0))) THEN ((rt0.c0) NOT NULL) WHEN ((rt0.c1)&(rt0.c3)) THEN rt0.c2 WHEN (('/PQ3')&(rt0.c0)) THEN rt0.c2 END) ISNULL)) GROUP BY rt0.c2, rt0.c3, rt0.c1, v0.c0, rt0.c4;
SELECT ALL rt0.c2, rt0.c3, rt0.c1, v0.c0, rt0.c4 FROM v0 FULL OUTER JOIN rt0 ON (((((rt0.c0)-(rt0.c3))))!=(((((rt0.c0))>((rt0.c3)))))) GROUP BY rt0.c2, rt0.c3, rt0.c1, v0.c0, rt0.c4;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (COUNT(*) IN (((MIN(TOTAL(AVG(v0.c0))))%(GROUP_CONCAT(v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((COUNT(*) IN (((MIN(TOTAL(AVG(v0.c0))))%(GROUP_CONCAT(v0.c0))))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((COUNT(*) IN (((MIN(TOTAL(AVG(v0.c0))))%(GROUP_CONCAT(v0.c0)))))) ISNULL);
SELECT MAX(0.800811096913038) FROM v0;
SELECT * FROM v0, rt0;
SELECT ALL * FROM v0, rt0 WHERE (((rt0.c1) ISNULL) COLLATE NOCASE) UNION ALL SELECT * FROM v0, rt0 WHERE ((NOT (((rt0.c1) ISNULL) COLLATE NOCASE))) UNION ALL SELECT * FROM v0, rt0 WHERE (((((rt0.c1) ISNULL) COLLATE NOCASE) ISNULL));
SELECT * FROM v0, rt0;
SELECT DISTINCT * FROM v0 NATURAL JOIN rt0;
SELECT DISTINCT * FROM v0 NATURAL JOIN rt0 WHERE ((((rt0.c0, NULL, v0.c0))==((rt0.c0, rt0.c4, v0.c0))) COLLATE BINARY) UNION SELECT DISTINCT * FROM v0 NATURAL JOIN rt0 WHERE ((NOT ((((rt0.c0, NULL, v0.c0))=((rt0.c0, rt0.c4, v0.c0))) COLLATE BINARY))) UNION SELECT DISTINCT * FROM v0 NATURAL JOIN rt0 WHERE ((((((rt0.c0, NULL, v0.c0))=((rt0.c0, rt0.c4, v0.c0))) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM v0 NATURAL JOIN rt0;
SELECT rt0.c4, rt0.c3, rt0.c1 FROM rt0, v0 GROUP BY rt0.c4, rt0.c3, rt0.c1;
SELECT ALL rt0.c4, rt0.c3, rt0.c1 FROM rt0, v0 WHERE (json_patch(((((((((rt0.c3)OR(rt0.c1)))AND(rt0.c3)))AND(rt0.c1)))OR(rt0.c4)), x'2b63')) GROUP BY rt0.c4, rt0.c3, rt0.c1 UNION SELECT rt0.c4, rt0.c3, rt0.c1 FROM rt0, v0 WHERE ((NOT (json_patch(((((((((rt0.c3)OR(rt0.c1)))AND(rt0.c3)))AND(rt0.c1)))OR(rt0.c4)), x'2b63')))) GROUP BY rt0.c4, rt0.c3, rt0.c1 UNION SELECT ALL rt0.c4, rt0.c3, rt0.c1 FROM rt0, v0 WHERE (((json_patch(((((((((rt0.c3)OR(rt0.c1)))AND(rt0.c3)))AND(rt0.c1)))OR(rt0.c4)), x'2b63')) ISNULL)) GROUP BY rt0.c4, rt0.c3, rt0.c1;
SELECT rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c0 HAVING GROUP_CONCAT(SUM(rt0.c3)) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (GROUP_CONCAT(SUM(rt0.c3)))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c0 HAVING ((GROUP_CONCAT(SUM(rt0.c3))) ISNULL);
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (((((v0.c0) ISNULL))OR(0.5503177641187607))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (((((v0.c0) ISNULL))OR(0.5503177641187607))))) UNION ALL SELECT ALL * FROM v0 WHERE (((((((v0.c0) ISNULL))OR(0.5503177641187607))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c3)||(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c4 END))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c3)||(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c4 END))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c3)||(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c4 END))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((NULL) BETWEEN (json_array_length(v0.c0, 778655294)) AND (((((v0.c0)OR(v0.c0)))OR(v0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((NULL) BETWEEN (json_array_length(v0.c0, 778655294)) AND (((((v0.c0)OR(v0.c0)))OR(v0.c0))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((NULL) BETWEEN (json_array_length(v0.c0, 778655294)) AND (((((v0.c0)OR(v0.c0)))OR(v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING CAST(((((rt0.c0)AND(rt0.c1)))AND(SUM(MIN(rt0.c3)))) AS REAL) UNION ALL SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING (NOT (CAST(((((rt0.c0)AND(rt0.c1)))AND(SUM(MIN(rt0.c3)))) AS REAL))) UNION ALL SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING ((CAST(((((rt0.c0)AND(rt0.c1)))AND(SUM(MIN(rt0.c3)))) AS REAL)) ISNULL);
SELECT ALL * FROM v0, rt0;
SELECT * FROM v0, rt0 WHERE (((((((((((((((rt0.c1)OR(rt0.c4)))AND(rt0.c0)))OR(rt0.c0)))AND(v0.c0)))OR(rt0.c2)))OR(rt0.c4)))==(rt0.c3 COLLATE RTRIM))) UNION ALL SELECT * FROM v0, rt0 WHERE ((NOT (((((((((((((((rt0.c1)OR(rt0.c4)))AND(rt0.c0)))OR(rt0.c0)))AND(v0.c0)))OR(rt0.c2)))OR(rt0.c4)))==(rt0.c3 COLLATE RTRIM))))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE (((((((((((((((((rt0.c1)OR(rt0.c4)))AND(rt0.c0)))OR(rt0.c0)))AND(v0.c0)))OR(rt0.c2)))OR(rt0.c4)))=(rt0.c3 COLLATE RTRIM))) ISNULL));
SELECT ALL * FROM v0, rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (CASE WHEN (((v0.c0))>((v0.c0))) THEN CAST(v0.c0 AS INTEGER) ELSE ((v0.c0) NOT NULL) END) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (CASE WHEN (((v0.c0))>((v0.c0))) THEN CAST(v0.c0 AS INTEGER) ELSE ((v0.c0) NOT NULL) END))) UNION SELECT DISTINCT * FROM v0 WHERE (((CASE WHEN (((v0.c0))>((v0.c0))) THEN CAST(v0.c0 AS INTEGER) ELSE ((v0.c0) NOT NULL) END) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL rt0.c4, v0.c0 FROM rt0 INNER JOIN v0 ON TYPEOF(((rt0.c3)||(v0.c0))) GROUP BY rt0.c4, v0.c0;
SELECT rt0.c4, v0.c0 FROM rt0 INNER JOIN v0 ON TYPEOF(((rt0.c3)||(v0.c0))) WHERE ((((rt0.c0)) BETWEEN (((rt0.c4 IN ()))) AND (((((rt0.c0)) BETWEEN ((rt0.c4)) AND ((v0.c0))))))) GROUP BY rt0.c4, v0.c0 UNION SELECT rt0.c4, v0.c0 FROM rt0 INNER JOIN v0 ON TYPEOF(((rt0.c3)||(v0.c0))) WHERE ((NOT ((((rt0.c0)) BETWEEN (((rt0.c4 IN ()))) AND (((((rt0.c0)) BETWEEN ((rt0.c4)) AND ((v0.c0))))))))) GROUP BY rt0.c4, v0.c0 UNION SELECT ALL rt0.c4, v0.c0 FROM rt0 INNER JOIN v0 ON TYPEOF(((rt0.c3)||(v0.c0))) WHERE ((((((rt0.c0)) BETWEEN (((rt0.c4 IN ()))) AND (((((rt0.c0)) BETWEEN ((rt0.c4)) AND ((v0.c0))))))) ISNULL)) GROUP BY rt0.c4, v0.c0;
SELECT ALL rt0.c4, v0.c0 FROM rt0 INNER JOIN v0 ON TYPEOF(((rt0.c3)||(v0.c0))) GROUP BY rt0.c4, v0.c0;
SELECT rt0.c2 FROM v0, rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM v0, rt0 GROUP BY rt0.c2 HAVING SUM(rt0.c1) COLLATE BINARY UNION ALL SELECT ALL rt0.c2 FROM v0, rt0 GROUP BY rt0.c2 HAVING (NOT (SUM(rt0.c1) COLLATE BINARY)) UNION ALL SELECT ALL rt0.c2 FROM v0, rt0 GROUP BY rt0.c2 HAVING ((SUM(rt0.c1) COLLATE BINARY) ISNULL);
SELECT rt0.c2 FROM v0, rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM v0, rt0 GROUP BY rt0.c2 HAVING SUM(rt0.c1) COLLATE BINARY UNION ALL SELECT ALL rt0.c2 FROM v0, rt0 GROUP BY rt0.c2 HAVING (NOT (SUM(rt0.c1) COLLATE BINARY)) UNION ALL SELECT ALL rt0.c2 FROM v0, rt0 GROUP BY rt0.c2 HAVING ((SUM(rt0.c1) COLLATE BINARY) ISNULL);
SELECT rt0.c2 FROM v0, rt0 GROUP BY rt0.c2;
SELECT rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (((rt0.c2 COLLATE RTRIM)>=(((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c0))))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((rt0.c2 COLLATE RTRIM)>=(((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c0))))))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (((((rt0.c2 COLLATE RTRIM)>=(((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c0))))) ISNULL));
SELECT rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c3, rt0.c4, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c3, rt0.c4, rt0.c0 FROM rt0 WHERE ((- (0.08880273026333108 COLLATE BINARY))) UNION SELECT DISTINCT rt0.c3, rt0.c4, rt0.c0 FROM rt0 WHERE ((NOT ((- (0.08880273026333108 COLLATE BINARY))))) UNION SELECT DISTINCT rt0.c3, rt0.c4, rt0.c0 FROM rt0 WHERE ((((- (0.08880273026333108 COLLATE BINARY))) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c4, rt0.c0 FROM rt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((UNLIKELY(DISTINCT 0.16513861519864392))|(((((v0.c0)OR(v0.c0)))AND(v0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((UNLIKELY(DISTINCT 0.16513861519864392))|(((((v0.c0)OR(v0.c0)))AND(v0.c0))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((UNLIKELY(DISTINCT 0.16513861519864392))|(((((v0.c0)OR(v0.c0)))AND(v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c3, rt0.c0, rt0.c1, rt0.c4, rt0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c4, rt0.c2, v0.c0;
SELECT rt0.c3, rt0.c0, rt0.c1, rt0.c4, rt0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c4, rt0.c2, v0.c0 HAVING COUNT(CAST(GROUP_CONCAT(rt0.c3) AS TEXT)) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c1, rt0.c4, rt0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c4, rt0.c2, v0.c0 HAVING (NOT (COUNT(CAST(GROUP_CONCAT(rt0.c3) AS TEXT)))) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c1, rt0.c4, rt0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c4, rt0.c2, v0.c0 HAVING ((COUNT(CAST(GROUP_CONCAT(rt0.c3) AS TEXT))) ISNULL);
SELECT ALL rt0.c3, rt0.c4, v0.c0, rt0.c1, rt0.c2 FROM rt0, v0;
SELECT rt0.c3, rt0.c4, v0.c0, rt0.c1, rt0.c2 FROM rt0, v0 WHERE (CASE '724878626'  WHEN CAST(rt0.c0 AS TEXT) THEN (rt0.c3 IN ()) END) UNION ALL SELECT rt0.c3, rt0.c4, v0.c0, rt0.c1, rt0.c2 FROM rt0, v0 WHERE ((NOT (CASE '724878626'  WHEN CAST(rt0.c0 AS TEXT) THEN (rt0.c3 IN ()) END))) UNION ALL SELECT ALL rt0.c3, rt0.c4, v0.c0, rt0.c1, rt0.c2 FROM rt0, v0 WHERE (((CASE '724878626'  WHEN CAST(rt0.c0 AS TEXT) THEN (rt0.c3 IN ()) END) ISNULL));
SELECT ALL rt0.c3, rt0.c4, v0.c0, rt0.c1, rt0.c2 FROM rt0, v0;
SELECT DISTINCT rt0.c2, rt0.c3, rt0.c4, v0.c0 FROM v0, rt0;
SELECT DISTINCT rt0.c2, rt0.c3, rt0.c4, v0.c0 FROM v0 NOT INDEXED, rt0 WHERE (CASE rt0.c2 COLLATE RTRIM  WHEN ((-1496415988)IS NOT(x'')) THEN CASE rt0.c4  WHEN rt0.c0 THEN rt0.c2 END END) UNION SELECT DISTINCT rt0.c2, rt0.c3, rt0.c4, v0.c0 FROM v0, rt0 WHERE ((NOT (CASE rt0.c2 COLLATE RTRIM  WHEN ((-1496415988)IS NOT(x'')) THEN CASE rt0.c4  WHEN rt0.c0 THEN rt0.c2 END END))) UNION SELECT DISTINCT rt0.c2, rt0.c3, rt0.c4, v0.c0 FROM v0, rt0 WHERE (((CASE rt0.c2 COLLATE RTRIM  WHEN ((-1496415988)IS NOT(x'')) THEN CASE rt0.c4  WHEN rt0.c0 THEN rt0.c2 END END) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c3, rt0.c4, v0.c0 FROM v0, rt0;
SELECT rt0.c0, v0.c0, rt0.c2, rt0.c3, rt0.c4 FROM rt0, v0 GROUP BY rt0.c0, v0.c0, rt0.c2, rt0.c3, rt0.c4;
SELECT rt0.c0, v0.c0, rt0.c2, rt0.c3, rt0.c4 FROM rt0, v0 WHERE (((rt0.c3)>(((((rt0.c2)AND(rt0.c0)))OR(rt0.c4))))) GROUP BY rt0.c0, v0.c0, rt0.c2, rt0.c3, rt0.c4 UNION SELECT ALL rt0.c0, v0.c0, rt0.c2, rt0.c3, rt0.c4 FROM rt0, v0 WHERE ((NOT (((rt0.c3)>(((((rt0.c2)AND(rt0.c0)))OR(rt0.c4))))))) GROUP BY rt0.c0, v0.c0, rt0.c2, rt0.c3, rt0.c4 UNION SELECT rt0.c0, v0.c0, rt0.c2, rt0.c3, rt0.c4 FROM rt0, v0 WHERE (((((rt0.c3)>(((((rt0.c2)AND(rt0.c0)))OR(rt0.c4))))) ISNULL)) GROUP BY rt0.c0, v0.c0, rt0.c2, rt0.c3, rt0.c4;
SELECT rt0.c0, v0.c0, rt0.c2, rt0.c3, rt0.c4 FROM rt0, v0 GROUP BY rt0.c0, v0.c0, rt0.c2, rt0.c3, rt0.c4;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING MAX('-298933868') UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MAX('-298933868'))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MAX('-298933868')) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING MAX('-298933868') UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MAX('-298933868'))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MAX('-298933868')) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c2, rt0.c4, rt0.c0, v0.c0, rt0.c1, rt0.c3 FROM v0, rt0;
SELECT rt0.c2, rt0.c4, rt0.c0, v0.c0, rt0.c1, rt0.c3 FROM v0, rt0 WHERE (CASE WHEN CAST(rt0.c4 AS TEXT) THEN rt0.c4 COLLATE NOCASE ELSE ((rt0.c1)+(rt0.c1)) END) UNION ALL SELECT ALL rt0.c2, rt0.c4, rt0.c0, v0.c0, rt0.c1, rt0.c3 FROM v0, rt0 WHERE ((NOT (CASE WHEN CAST(rt0.c4 AS TEXT) THEN rt0.c4 COLLATE NOCASE ELSE ((rt0.c1)+(rt0.c1)) END))) UNION ALL SELECT rt0.c2, rt0.c4, rt0.c0, v0.c0, rt0.c1, rt0.c3 FROM v0, rt0 WHERE (((CASE WHEN CAST(rt0.c4 AS TEXT) THEN rt0.c4 COLLATE NOCASE ELSE ((rt0.c1)+(rt0.c1)) END) ISNULL));
SELECT rt0.c2, rt0.c4, rt0.c0, v0.c0, rt0.c1, rt0.c3 FROM v0, rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((((v0.c0)>=(v0.c0)))||(CASE WHEN v0.c0 THEN v0.c0 END))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((v0.c0)>=(v0.c0)))||(CASE WHEN v0.c0 THEN v0.c0 END))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((v0.c0)>=(v0.c0)))||(CASE WHEN v0.c0 THEN v0.c0 END))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT rt0.c0, rt0.c4, rt0.c1, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c4, rt0.c1, rt0.c2, rt0.c3;
SELECT rt0.c0, rt0.c4, rt0.c1, rt0.c2, rt0.c3 FROM rt0 WHERE (rt0.c4) GROUP BY rt0.c0, rt0.c4, rt0.c1, rt0.c2, rt0.c3 UNION SELECT ALL rt0.c0, rt0.c4, rt0.c1, rt0.c2, rt0.c3 FROM rt0 WHERE ((NOT (rt0.c4))) GROUP BY rt0.c0, rt0.c4, rt0.c1, rt0.c2, rt0.c3 UNION SELECT ALL rt0.c0, rt0.c4, rt0.c1, rt0.c2, rt0.c3 FROM rt0 WHERE (((rt0.c4) ISNULL)) GROUP BY rt0.c0, rt0.c4, rt0.c1, rt0.c2, rt0.c3;
SELECT rt0.c0, rt0.c4, rt0.c1, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c4, rt0.c1, rt0.c2, rt0.c3;
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING ((((rt0.c1, GROUP_CONCAT(MIN(rt0.c4)), TOTAL(rt0.c3)))>=((COUNT(*), MIN(MAX(AVG(rt0.c2))), rt0.c1))) IN ()) UNION ALL SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING (NOT (((((rt0.c1, GROUP_CONCAT(MIN(rt0.c4)), TOTAL(rt0.c3)))>=((COUNT(*), MIN(MAX(AVG(rt0.c2))), rt0.c1))) IN ()))) UNION ALL SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING ((((((rt0.c1, GROUP_CONCAT(MIN(rt0.c4)), TOTAL(rt0.c3)))>=((COUNT(*), MIN(MAX(AVG(rt0.c2))), rt0.c1))) IN ())) ISNULL);
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING ((((rt0.c1, GROUP_CONCAT(MIN(rt0.c4)), TOTAL(rt0.c3)))>=((COUNT(*), MIN(MAX(AVG(rt0.c2))), rt0.c1))) IN ()) UNION ALL SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING (NOT (((((rt0.c1, GROUP_CONCAT(MIN(rt0.c4)), TOTAL(rt0.c3)))>=((COUNT(*), MIN(MAX(AVG(rt0.c2))), rt0.c1))) IN ()))) UNION ALL SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING ((((((rt0.c1, GROUP_CONCAT(MIN(rt0.c4)), TOTAL(rt0.c3)))>=((COUNT(*), MIN(MAX(AVG(rt0.c2))), rt0.c1))) IN ())) ISNULL);
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT ALL * FROM v0 NOT INDEXED, rt0;
SELECT ALL * FROM v0, rt0 WHERE (NULL) UNION ALL SELECT * FROM v0, rt0 WHERE ((NOT (NULL))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE (((NULL) ISNULL));
SELECT ALL * FROM v0 NOT INDEXED, rt0;
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN v0 ON ((0xffffffff8d61d635 COLLATE RTRIM) NOT BETWEEN (CHAR(v0.c0)) AND ((NOT (NULL))));
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN v0 ON ((0xffffffff8d61d635 COLLATE RTRIM) NOT BETWEEN (CHAR(v0.c0)) AND ((NOT (NULL)))) WHERE (((((x'479f') IS FALSE)) BETWEEN ('-1261343791') AND (((((v0.c0)AND(rt0.c4)))OR(rt0.c4))))) UNION SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN v0 ON ((0xffffffff8d61d635 COLLATE RTRIM) NOT BETWEEN (CHAR(v0.c0)) AND ((NOT (NULL)))) WHERE ((NOT (((((x'479f') IS FALSE)) BETWEEN ('-1261343791') AND (((((v0.c0)AND(rt0.c4)))OR(rt0.c4))))))) UNION SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN v0 ON ((0Xffffffff8d61d635 COLLATE RTRIM) NOT BETWEEN (CHAR(v0.c0)) AND ((NOT (NULL)))) WHERE (((((((x'479f') IS FALSE)) BETWEEN ('-1261343791') AND (((((v0.c0)AND(rt0.c4)))OR(rt0.c4))))) ISNULL));
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN v0 ON ((0xffffffff8d61d635 COLLATE RTRIM) NOT BETWEEN (CHAR(v0.c0)) AND ((NOT (NULL))));
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((NOT (IFNULL(v0.c0, NULL)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((NOT (IFNULL(v0.c0, NULL)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((NOT (IFNULL(v0.c0, NULL)))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING COUNT(LOWER(DISTINCT TOTAL(rt0.c1))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (COUNT(LOWER(DISTINCT TOTAL(rt0.c1))))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((COUNT(LOWER(DISTINCT TOTAL(rt0.c1)))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((((rt0.c2)<<(rt0.c3)))IS NOT(CAST(rt0.c1 AS TEXT)))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((rt0.c2)<<(rt0.c3)))IS NOT(CAST(rt0.c1 AS TEXT)))))) UNION ALL SELECT * FROM rt0 WHERE (((((((rt0.c2)<<(rt0.c3)))IS NOT(CAST(rt0.c1 AS TEXT)))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (json_valid(rt0.c4) COLLATE BINARY) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (json_valid(rt0.c4) COLLATE BINARY))) UNION SELECT DISTINCT * FROM rt0 WHERE (((json_valid(rt0.c4) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (4.83126799E8) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (4.83126799E8))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((4.83126799E8) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c4 FROM rt0 GROUP BY rt0.c4;
SELECT rt0.c4 FROM rt0 GROUP BY rt0.c4 HAVING AVG(SUM(TOTAL(rt0.c4))) UNION ALL SELECT ALL rt0.c4 FROM rt0 GROUP BY rt0.c4 HAVING (NOT (AVG(SUM(TOTAL(rt0.c4))))) UNION ALL SELECT ALL rt0.c4 FROM rt0 GROUP BY rt0.c4 HAVING ((AVG(SUM(TOTAL(rt0.c4)))) ISNULL);
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (((CASE WHEN v0.c0 THEN 'tc' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)LIKE(v0.c0))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (((CASE WHEN v0.c0 THEN 'tc' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)LIKE(v0.c0))))) UNION ALL SELECT ALL * FROM v0 WHERE (((((CASE WHEN v0.c0 THEN 'tc' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)LIKE(v0.c0))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((((v0.c0)-(v0.c0))) NOTNULL)) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((((v0.c0)-(v0.c0))) NOTNULL)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((v0.c0)-(v0.c0))) NOTNULL)) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT rt0.c4, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c2;
SELECT rt0.c4, rt0.c3, rt0.c2 FROM rt0 WHERE (((CASE rt0.c4  WHEN rt0.c3 THEN rt0.c2 WHEN x'' THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 ELSE NULL END)==((rt0.c4 IN ())))) GROUP BY rt0.c4, rt0.c3, rt0.c2 UNION SELECT rt0.c4, rt0.c3, rt0.c2 FROM rt0 WHERE ((NOT (((CASE rt0.c4  WHEN rt0.c3 THEN rt0.c2 WHEN x'' THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 ELSE NULL END)==((rt0.c4 IN ())))))) GROUP BY rt0.c4, rt0.c3, rt0.c2 UNION SELECT ALL rt0.c4, rt0.c3, rt0.c2 FROM rt0 WHERE (((((CASE rt0.c4  WHEN rt0.c3 THEN rt0.c2 WHEN x'' THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 ELSE NULL END)=((rt0.c4 IN ())))) ISNULL)) GROUP BY rt0.c4, rt0.c3, rt0.c2;
SELECT rt0.c4, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c2;
SELECT ALL rt0.c2, rt0.c1, v0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON ((((rt0.c1) IS FALSE))|(((v0.c0)>(rt0.c3)))) GROUP BY rt0.c2, rt0.c1, v0.c0;
SELECT ALL rt0.c2, rt0.c1, v0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON ((((rt0.c1) IS FALSE))|(((v0.c0)>(rt0.c3)))) GROUP BY rt0.c2, rt0.c1, v0.c0 HAVING (+ (rt0.c3)) COLLATE RTRIM UNION ALL SELECT rt0.c2, rt0.c1, v0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON ((((rt0.c1) IS FALSE))|(((v0.c0)>(rt0.c3)))) GROUP BY rt0.c2, rt0.c1, v0.c0 HAVING (NOT ((+ (rt0.c3)) COLLATE RTRIM)) UNION ALL SELECT rt0.c2, rt0.c1, v0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON ((((rt0.c1) IS FALSE))|(((v0.c0)>(rt0.c3)))) GROUP BY rt0.c2, rt0.c1, v0.c0 HAVING (((+ (rt0.c3)) COLLATE RTRIM) ISNULL);
SELECT ALL rt0.c2, rt0.c1, v0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON ((((rt0.c1) IS FALSE))|(((v0.c0)>(rt0.c3)))) GROUP BY rt0.c2, rt0.c1, v0.c0;
SELECT ALL rt0.c2, rt0.c1, v0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON ((((rt0.c1) IS FALSE))|(((v0.c0)>(rt0.c3)))) GROUP BY rt0.c2, rt0.c1, v0.c0 HAVING (+ (rt0.c3)) COLLATE RTRIM UNION ALL SELECT rt0.c2, rt0.c1, v0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON ((((rt0.c1) IS FALSE))|(((v0.c0)>(rt0.c3)))) GROUP BY rt0.c2, rt0.c1, v0.c0 HAVING (NOT ((+ (rt0.c3)) COLLATE RTRIM)) UNION ALL SELECT rt0.c2, rt0.c1, v0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON ((((rt0.c1) IS FALSE))|(((v0.c0)>(rt0.c3)))) GROUP BY rt0.c2, rt0.c1, v0.c0 HAVING (((+ (rt0.c3)) COLLATE RTRIM) ISNULL);
SELECT ALL rt0.c2, rt0.c1, v0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON ((((rt0.c1) IS FALSE))|(((v0.c0)>(rt0.c3)))) GROUP BY rt0.c2, rt0.c1, v0.c0;
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE ((NOT ((((v0.c0))<((v0.c0)))))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT ((NOT ((((v0.c0))<((v0.c0)))))))) UNION ALL SELECT * FROM v0 WHERE ((((NOT ((((v0.c0))<((v0.c0)))))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM rt0, v0 NOT INDEXED;
SELECT DISTINCT * FROM rt0, v0 WHERE ((((CASE rt0.c4  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END))!=((((rt0.c2)!=(v0.c0)))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT ((((CASE rt0.c4  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END))<>((((rt0.c2)!=(v0.c0)))))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((((((CASE rt0.c4  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END))<>((((rt0.c2)!=(v0.c0)))))) ISNULL));
SELECT DISTINCT * FROM rt0, v0 NOT INDEXED;
SELECT rt0.c1, rt0.c0, rt0.c2, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, rt0.c4, rt0.c3;
SELECT rt0.c1, rt0.c0, rt0.c2, rt0.c4, rt0.c3 FROM rt0 WHERE (CASE WHEN json_extract(rt0.c1, rt0.c2) THEN ((rt0.c3) IS FALSE) WHEN ((rt0.c2)IS(rt0.c3)) THEN TYPEOF(rt0.c0) WHEN CASE WHEN rt0.c3 THEN rt0.c4 END THEN 1407197918 ELSE CASE rt0.c1  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c0 END END) GROUP BY rt0.c1, rt0.c0, rt0.c2, rt0.c4, rt0.c3 UNION SELECT rt0.c1, rt0.c0, rt0.c2, rt0.c4, rt0.c3 FROM rt0 WHERE ((NOT (CASE WHEN json_extract(rt0.c1, rt0.c2) THEN ((rt0.c3) IS FALSE) WHEN ((rt0.c2)IS(rt0.c3)) THEN TYPEOF(rt0.c0) WHEN CASE WHEN rt0.c3 THEN rt0.c4 END THEN 1407197918 ELSE CASE rt0.c1  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c0 END END))) GROUP BY rt0.c1, rt0.c0, rt0.c2, rt0.c4, rt0.c3 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2, rt0.c4, rt0.c3 FROM rt0 WHERE (((CASE WHEN json_extract(rt0.c1, rt0.c2) THEN ((rt0.c3) IS FALSE) WHEN ((rt0.c2)IS(rt0.c3)) THEN TYPEOF(rt0.c0) WHEN CASE WHEN rt0.c3 THEN rt0.c4 END THEN 1407197918 ELSE CASE rt0.c1  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c0 END END) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2, rt0.c4, rt0.c3;
SELECT ALL rt0.c3, rt0.c1, v0.c0, rt0.c4, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c3, rt0.c1, v0.c0, rt0.c4, rt0.c0, rt0.c2;
SELECT ALL rt0.c3, rt0.c1, v0.c0, rt0.c4, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c3, rt0.c1, v0.c0, rt0.c4, rt0.c0, rt0.c2 HAVING COUNT(x'') UNION ALL SELECT rt0.c3, rt0.c1, v0.c0, rt0.c4, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c3, rt0.c1, v0.c0, rt0.c4, rt0.c0, rt0.c2 HAVING (NOT (COUNT(x''))) UNION ALL SELECT rt0.c3, rt0.c1, v0.c0, rt0.c4, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c3, rt0.c1, v0.c0, rt0.c4, rt0.c0, rt0.c2 HAVING ((COUNT(x'')) ISNULL);
SELECT ALL rt0.c3, rt0.c1, v0.c0, rt0.c4, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c3, rt0.c1, v0.c0, rt0.c4, rt0.c0, rt0.c2;
SELECT ALL rt0.c3, rt0.c1, v0.c0, rt0.c4, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c3, rt0.c1, v0.c0, rt0.c4, rt0.c0, rt0.c2 HAVING COUNT(x'') UNION ALL SELECT rt0.c3, rt0.c1, v0.c0, rt0.c4, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c3, rt0.c1, v0.c0, rt0.c4, rt0.c0, rt0.c2 HAVING (NOT (COUNT(x''))) UNION ALL SELECT rt0.c3, rt0.c1, v0.c0, rt0.c4, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c3, rt0.c1, v0.c0, rt0.c4, rt0.c0, rt0.c2 HAVING ((COUNT(x'')) ISNULL);
SELECT ALL rt0.c3, rt0.c1, v0.c0, rt0.c4, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c3, rt0.c1, v0.c0, rt0.c4, rt0.c0, rt0.c2;
SELECT ALL rt0.c4 FROM v0, rt0;
SELECT ALL rt0.c4 FROM v0, rt0 WHERE (CAST(TYPEOF(rt0.c3) AS BLOB)) UNION ALL SELECT ALL rt0.c4 FROM v0, rt0 WHERE ((NOT (CAST(TYPEOF(rt0.c3) AS BLOB)))) UNION ALL SELECT ALL rt0.c4 FROM v0, rt0 WHERE (((CAST(TYPEOF(rt0.c3) AS BLOB)) ISNULL));
SELECT ALL rt0.c4 FROM v0, rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ('窥') UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ('窥'))) UNION SELECT DISTINCT * FROM v0 WHERE ((('窥') ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL rt0.c3, rt0.c2, rt0.c1, v0.c0, rt0.c0 FROM rt0 CROSS JOIN v0 ON (((((rt0.c0))>=((0.9972322011372367))))>>(((rt0.c0)-(rt0.c3)))) GROUP BY rt0.c3, rt0.c2, rt0.c1, v0.c0, rt0.c0;
SELECT rt0.c3, rt0.c2, rt0.c1, v0.c0, rt0.c0 FROM rt0 CROSS JOIN v0 ON (((((rt0.c0))>=((0.9972322011372367))))>>(((rt0.c0)-(rt0.c3)))) WHERE (x'4c0a') GROUP BY rt0.c3, rt0.c2, rt0.c1, v0.c0, rt0.c0 UNION SELECT rt0.c3, rt0.c2, rt0.c1, v0.c0, rt0.c0 FROM rt0 CROSS JOIN v0 ON (((((rt0.c0))>=((0.9972322011372367))))>>(((rt0.c0)-(rt0.c3)))) WHERE ((NOT (x'4c0a'))) GROUP BY rt0.c3, rt0.c2, rt0.c1, v0.c0, rt0.c0 UNION SELECT ALL rt0.c3, rt0.c2, rt0.c1, v0.c0, rt0.c0 FROM rt0 CROSS JOIN v0 ON (((((rt0.c0))>=((0.9972322011372367))))>>(((rt0.c0)-(rt0.c3)))) WHERE (((x'4c0a') ISNULL)) GROUP BY rt0.c3, rt0.c2, rt0.c1, v0.c0, rt0.c0;
SELECT ALL rt0.c3, rt0.c2, rt0.c1, v0.c0, rt0.c0 FROM rt0 CROSS JOIN v0 ON (((((rt0.c0))>=((0.9972322011372367))))>>(((rt0.c0)-(rt0.c3)))) GROUP BY rt0.c3, rt0.c2, rt0.c1, v0.c0, rt0.c0;
SELECT rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0;
SELECT ALL rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0 HAVING -43383656 UNION ALL SELECT rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0 HAVING (NOT (-43383656)) UNION ALL SELECT rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0 HAVING ((-43383656) ISNULL);
SELECT rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0;
SELECT ALL rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0 HAVING -43383656 UNION ALL SELECT rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0 HAVING (NOT (-43383656)) UNION ALL SELECT rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0 HAVING ((-43383656) ISNULL);
SELECT rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0;
SELECT ALL * FROM rt0, v0;
SELECT ALL * FROM rt0, v0 WHERE (CASE WHEN (rt0.c4 IN (rt0.c1)) THEN ((rt0.c3)-(rt0.c3)) WHEN NULLIF(DISTINCT x'', rt0.c2) THEN ((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c1)) WHEN v0.c0 COLLATE RTRIM THEN rt0.c2 END) UNION ALL SELECT * FROM rt0, v0 WHERE ((NOT (CASE WHEN (rt0.c4 IN (rt0.c1)) THEN ((rt0.c3)-(rt0.c3)) WHEN NULLIF(DISTINCT x'', rt0.c2) THEN ((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c1)) WHEN v0.c0 COLLATE RTRIM THEN rt0.c2 END))) UNION ALL SELECT * FROM rt0, v0 WHERE (((CASE WHEN (rt0.c4 IN (rt0.c1)) THEN ((rt0.c3)-(rt0.c3)) WHEN NULLIF(DISTINCT x'', rt0.c2) THEN ((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c1)) WHEN v0.c0 COLLATE RTRIM THEN rt0.c2 END) ISNULL));
SELECT ALL * FROM rt0, v0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (x'b8ea') UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (x'b8ea'))) UNION SELECT DISTINCT * FROM rt0 WHERE (((x'b8ea') ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c4, rt0.c0, rt0.c3 FROM v0, rt0 GROUP BY rt0.c4, rt0.c0, rt0.c3;
SELECT rt0.c4, rt0.c0, rt0.c3 FROM v0, rt0 WHERE (CAST(rt0.c2 AS BLOB) COLLATE NOCASE) GROUP BY rt0.c4, rt0.c0, rt0.c3 UNION SELECT rt0.c4, rt0.c0, rt0.c3 FROM v0, rt0 WHERE ((NOT (CAST(rt0.c2 AS BLOB) COLLATE NOCASE))) GROUP BY rt0.c4, rt0.c0, rt0.c3 UNION SELECT rt0.c4, rt0.c0, rt0.c3 FROM v0, rt0 WHERE (((CAST(rt0.c2 AS BLOB) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c4, rt0.c0, rt0.c3;
SELECT ALL rt0.c4, rt0.c0, rt0.c3 FROM v0, rt0 GROUP BY rt0.c4, rt0.c0, rt0.c3;
SELECT ALL rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3;
SELECT rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3 HAVING ((TOTAL(rt0.c2))<>(AVG(rt0.c3))) UNION ALL SELECT rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3 HAVING (NOT (((TOTAL(rt0.c2))<>(AVG(rt0.c3))))) UNION ALL SELECT rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3 HAVING ((((TOTAL(rt0.c2))!=(AVG(rt0.c3)))) ISNULL);
SELECT ALL rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3;
SELECT rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3 HAVING ((TOTAL(rt0.c2))<>(AVG(rt0.c3))) UNION ALL SELECT rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3 HAVING (NOT (((TOTAL(rt0.c2))<>(AVG(rt0.c3))))) UNION ALL SELECT rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3 HAVING ((((TOTAL(rt0.c2))!=(AVG(rt0.c3)))) ISNULL);
SELECT ALL rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3;
SELECT ALL * FROM v0, rt0;
SELECT * FROM v0, rt0 WHERE (CAST(NULL AS TEXT)) UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((NOT (CAST(NULL AS TEXT)))) UNION ALL SELECT * FROM v0, rt0 WHERE (((CAST(NULL AS TEXT)) ISNULL));
SELECT ALL * FROM v0, rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((- (((((v0.c0)AND(v0.c0)))AND(v0.c0))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((- (((((v0.c0)AND(v0.c0)))AND(v0.c0))))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((- (((((v0.c0)AND(v0.c0)))AND(v0.c0))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL v0.c0, rt0.c1, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c1, rt0.c2;
SELECT v0.c0, rt0.c1, rt0.c2 FROM rt0, v0 WHERE (CAST(UNICODE(v0.c0) AS BLOB)) GROUP BY v0.c0, rt0.c1, rt0.c2 UNION SELECT v0.c0, rt0.c1, rt0.c2 FROM rt0, v0 WHERE ((NOT (CAST(UNICODE(v0.c0) AS BLOB)))) GROUP BY v0.c0, rt0.c1, rt0.c2 UNION SELECT ALL v0.c0, rt0.c1, rt0.c2 FROM rt0, v0 WHERE (((CAST(UNICODE(v0.c0) AS BLOB)) ISNULL)) GROUP BY v0.c0, rt0.c1, rt0.c2;
SELECT ALL v0.c0, rt0.c1, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c1, rt0.c2;
SELECT rt0.c4, rt0.c0, rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0, rt0.c2, v0.c0;
SELECT rt0.c4, rt0.c0, rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0, rt0.c2, v0.c0 HAVING v0.c0 UNION ALL SELECT ALL rt0.c4, rt0.c0, rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0, rt0.c2, v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL rt0.c4, rt0.c0, rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0, rt0.c2, v0.c0 HAVING ((v0.c0) ISNULL);
SELECT rt0.c4, rt0.c0, rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0, rt0.c2, v0.c0;
SELECT rt0.c4, rt0.c0, rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0, rt0.c2, v0.c0 HAVING v0.c0 UNION ALL SELECT ALL rt0.c4, rt0.c0, rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0, rt0.c2, v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL rt0.c4, rt0.c0, rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0, rt0.c2, v0.c0 HAVING ((v0.c0) ISNULL);
SELECT rt0.c4, rt0.c0, rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0, rt0.c2, v0.c0;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((json_quote(rt0.c4) IN (CAST(rt0.c3 AS TEXT)))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((json_quote(rt0.c4) IN (CAST(rt0.c3 AS TEXT)))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((json_quote(rt0.c4) IN (CAST(rt0.c3 AS TEXT)))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c3, rt0.c0, rt0.c4, rt0.c2, v0.c0 FROM v0, rt0;
SELECT DISTINCT rt0.c3, rt0.c0, rt0.c4, rt0.c2, v0.c0 FROM v0, rt0 WHERE (rt0.c0) UNION SELECT DISTINCT rt0.c3, rt0.c0, rt0.c4, rt0.c2, v0.c0 FROM v0, rt0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT rt0.c3, rt0.c0, rt0.c4, rt0.c2, v0.c0 FROM v0, rt0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c0, rt0.c4, rt0.c2, v0.c0 FROM v0, rt0;
SELECT v0.c0 FROM v0 NOT INDEXED GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((((v0.c0 IN ()))-(((0.18295937858243905)IS NOT(v0.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((v0.c0 IN ()))-(((0.18295937858243905)IS NOT(v0.c0))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((((v0.c0 IN ()))-(((0.18295937858243905)IS NOT(v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 NOT INDEXED GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((v0.c0) NOTNULL)) NOT BETWEEN (v0.c0) AND (COUNT(0.7141004367891142))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((((v0.c0) NOTNULL)) NOT BETWEEN (v0.c0) AND (COUNT(0.7141004367891142))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((((v0.c0) NOTNULL)) NOT BETWEEN (v0.c0) AND (COUNT(0.7141004367891142)))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((v0.c0) NOTNULL)) NOT BETWEEN (v0.c0) AND (COUNT(0.7141004367891142))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((((v0.c0) NOTNULL)) NOT BETWEEN (v0.c0) AND (COUNT(0.7141004367891142))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((((v0.c0) NOTNULL)) NOT BETWEEN (v0.c0) AND (COUNT(0.7141004367891142)))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL * FROM rt0 NATURAL JOIN v0;
SELECT ALL * FROM rt0 NATURAL JOIN v0 WHERE ((((~ ('1608723620')))<<(CASE rt0.c4  WHEN -7.83661467E8 THEN rt0.c1 END))) UNION ALL SELECT ALL * FROM rt0 NATURAL JOIN v0 WHERE ((NOT ((((~ ('1608723620')))<<(CASE rt0.c4  WHEN -7.83661467E8 THEN rt0.c1 END))))) UNION ALL SELECT ALL * FROM rt0 NATURAL JOIN v0 WHERE ((((((~ ('1608723620')))<<(CASE rt0.c4  WHEN -7.83661467E8 THEN rt0.c1 END))) ISNULL));
SELECT ALL * FROM rt0 NATURAL JOIN v0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((NULL IN ((((rt0.c3, rt0.c0, rt0.c2, rt0.c1, rt0.c1, rt0.c3, rt0.c4))=((rt0.c3, rt0.c3, rt0.c1, rt0.c2, rt0.c3, rt0.c1, rt0.c2))), (rt0.c4 IN (rt0.c0, rt0.c1))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((NULL IN ((((rt0.c3, rt0.c0, rt0.c2, rt0.c1, rt0.c1, rt0.c3, rt0.c4))=((rt0.c3, rt0.c3, rt0.c1, rt0.c2, rt0.c3, rt0.c1, rt0.c2))), (rt0.c4 IN (rt0.c0, rt0.c1))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((NULL IN ((((rt0.c3, rt0.c0, rt0.c2, rt0.c1, rt0.c1, rt0.c3, rt0.c4))=((rt0.c3, rt0.c3, rt0.c1, rt0.c2, rt0.c3, rt0.c1, rt0.c2))), (rt0.c4 IN (rt0.c0, rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL v0.c0, rt0.c1, rt0.c2, rt0.c3, rt0.c4 FROM v0 NATURAL JOIN rt0 GROUP BY v0.c0, rt0.c1, rt0.c2, rt0.c3, rt0.c4;
SELECT v0.c0, rt0.c1, rt0.c2, rt0.c3, rt0.c4 FROM v0 NATURAL JOIN rt0 WHERE (((CASE rt0.c0  WHEN v0.c0 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c3 WHEN x'' THEN rt0.c0 ELSE rt0.c4 END)>>(CASE rt0.c1  WHEN rt0.c3 THEN 'Xu' WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 END))) GROUP BY v0.c0, rt0.c1, rt0.c2, rt0.c3, rt0.c4 UNION SELECT v0.c0, rt0.c1, rt0.c2, rt0.c3, rt0.c4 FROM v0 NATURAL JOIN rt0 WHERE ((NOT (((CASE rt0.c0  WHEN v0.c0 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c3 WHEN x'' THEN rt0.c0 ELSE rt0.c4 END)>>(CASE rt0.c1  WHEN rt0.c3 THEN 'Xu' WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 END))))) GROUP BY v0.c0, rt0.c1, rt0.c2, rt0.c3, rt0.c4 UNION SELECT v0.c0, rt0.c1, rt0.c2, rt0.c3, rt0.c4 FROM v0 NATURAL JOIN rt0 WHERE (((((CASE rt0.c0  WHEN v0.c0 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c3 WHEN x'' THEN rt0.c0 ELSE rt0.c4 END)>>(CASE rt0.c1  WHEN rt0.c3 THEN 'Xu' WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 END))) ISNULL)) GROUP BY v0.c0, rt0.c1, rt0.c2, rt0.c3, rt0.c4;
SELECT ALL v0.c0, rt0.c1, rt0.c2, rt0.c3, rt0.c4 FROM v0 NATURAL JOIN rt0 GROUP BY v0.c0, rt0.c1, rt0.c2, rt0.c3, rt0.c4;
SELECT ALL rt0.c1, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((TOTAL(rt0.c4))AND(COUNT(*))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (((TOTAL(rt0.c4))AND(COUNT(*))))) UNION ALL SELECT rt0.c1, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((((TOTAL(rt0.c4))AND(COUNT(*)))) ISNULL);
SELECT ALL rt0.c1, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((TOTAL(rt0.c4))AND(COUNT(*))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (((TOTAL(rt0.c4))AND(COUNT(*))))) UNION ALL SELECT rt0.c1, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((((TOTAL(rt0.c4))AND(COUNT(*)))) ISNULL);
SELECT ALL rt0.c1, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c3, v0.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0, v0;
SELECT rt0.c3, v0.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0, v0 WHERE (((((rt0.c1)<<(rt0.c4))) NOT NULL)) UNION ALL SELECT ALL rt0.c3, v0.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0, v0 WHERE ((NOT (((((rt0.c1)<<(rt0.c4))) NOT NULL)))) UNION ALL SELECT ALL rt0.c3, v0.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0, v0 WHERE (((((((rt0.c1)<<(rt0.c4))) NOT NULL)) ISNULL));
SELECT rt0.c3, v0.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (((x'') BETWEEN ((~ (rt0.c1))) AND (((((rt0.c0)OR(rt0.c4)))AND(rt0.c0))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (((x'') BETWEEN ((~ (rt0.c1))) AND (((((rt0.c0)OR(rt0.c4)))AND(rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((((x'') BETWEEN ((~ (rt0.c1))) AND (((((rt0.c0)OR(rt0.c4)))AND(rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT ALL rt0.c4 FROM v0 NATURAL JOIN rt0 GROUP BY rt0.c4;
SELECT rt0.c4 FROM v0 NATURAL JOIN rt0 WHERE (CASE rt0.c4 COLLATE RTRIM  WHEN UPPER(DISTINCT v0.c0) THEN ((rt0.c2) IS TRUE) ELSE json_insert(rt0.c2, v0.c0, rt0.c3) END) GROUP BY rt0.c4 UNION SELECT rt0.c4 FROM v0 NATURAL JOIN rt0 WHERE ((NOT (CASE rt0.c4 COLLATE RTRIM  WHEN UPPER(DISTINCT v0.c0) THEN ((rt0.c2) IS TRUE) ELSE json_insert(rt0.c2, v0.c0, rt0.c3) END))) GROUP BY rt0.c4 UNION SELECT ALL rt0.c4 FROM v0 NATURAL JOIN rt0 WHERE (((CASE rt0.c4 COLLATE RTRIM  WHEN UPPER(DISTINCT v0.c0) THEN ((rt0.c2) IS TRUE) ELSE json_insert(rt0.c2, v0.c0, rt0.c3) END) ISNULL)) GROUP BY rt0.c4;
SELECT ALL rt0.c4 FROM v0 NATURAL JOIN rt0 GROUP BY rt0.c4;
SELECT ALL rt0.c3, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c2;
SELECT rt0.c3, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c2 HAVING (((((rt0.c1)) NOT BETWEEN ((TOTAL(MIN(TOTAL(rt0.c3))))) AND ((SUM(rt0.c0)))))GLOB(((GROUP_CONCAT(rt0.c1))IS NOT(rt0.c4)))) UNION ALL SELECT ALL rt0.c3, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c2 HAVING (NOT ((((((rt0.c1)) NOT BETWEEN ((TOTAL(MIN(TOTAL(rt0.c3))))) AND ((SUM(rt0.c0)))))GLOB(((GROUP_CONCAT(rt0.c1))IS NOT(rt0.c4)))))) UNION ALL SELECT rt0.c3, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c2 HAVING (((((((rt0.c1)) NOT BETWEEN ((TOTAL(MIN(TOTAL(rt0.c3))))) AND ((SUM(rt0.c0)))))GLOB(((GROUP_CONCAT(rt0.c1))IS NOT(rt0.c4))))) ISNULL);
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE ((~ ((((v0.c0, 0.16513861519864392, v0.c0))<((v0.c0, 0.7122570111867617, v0.c0)))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((~ ((((v0.c0, 0.16513861519864392, v0.c0))<((v0.c0, 0.7122570111867617, v0.c0)))))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((((~ ((((v0.c0, 0.16513861519864392, v0.c0))<((v0.c0, 0.7122570111867617, v0.c0)))))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((('-1818660143') NOT BETWEEN (((rt0.c1)<>(rt0.c2))) AND ((((x'ebb3', 0.8093193406233806, rt0.c3))==((0.039958760141463934, rt0.c4, rt0.c3)))))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT ((('-1818660143') NOT BETWEEN (((rt0.c1)<>(rt0.c2))) AND ((((x'ebb3', 0.8093193406233806, rt0.c3))=((0.039958760141463934, rt0.c4, rt0.c3)))))))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((((('-1818660143') NOT BETWEEN (((rt0.c1)<>(rt0.c2))) AND ((((x'ebb3', 0.8093193406233806, rt0.c3))=((0.039958760141463934, rt0.c4, rt0.c3)))))) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT rt0.c0, rt0.c4, v0.c0, rt0.c1, rt0.c2, rt0.c3 FROM v0, rt0 GROUP BY rt0.c0, rt0.c4, v0.c0, rt0.c1, rt0.c2, rt0.c3;
SELECT rt0.c0, rt0.c4, v0.c0, rt0.c1, rt0.c2, rt0.c3 FROM v0, rt0 WHERE (rt0.c2) GROUP BY rt0.c0, rt0.c4, v0.c0, rt0.c1, rt0.c2, rt0.c3 UNION SELECT ALL rt0.c0, rt0.c4, v0.c0, rt0.c1, rt0.c2, rt0.c3 FROM v0, rt0 WHERE ((NOT (rt0.c2))) GROUP BY rt0.c0, rt0.c4, v0.c0, rt0.c1, rt0.c2, rt0.c3 UNION SELECT ALL rt0.c0, rt0.c4, v0.c0, rt0.c1, rt0.c2, rt0.c3 FROM v0, rt0 WHERE (((rt0.c2) ISNULL)) GROUP BY rt0.c0, rt0.c4, v0.c0, rt0.c1, rt0.c2, rt0.c3;
SELECT rt0.c0, rt0.c4, v0.c0, rt0.c1, rt0.c2, rt0.c3 FROM v0, rt0 GROUP BY rt0.c0, rt0.c4, v0.c0, rt0.c1, rt0.c2, rt0.c3;
SELECT rt0.c0, rt0.c2, rt0.c4, rt0.c3 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c4, rt0.c3;
SELECT ALL rt0.c0, rt0.c2, rt0.c4, rt0.c3 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c4, rt0.c3 HAVING ((((((((CAST(rt0.c2 AS TEXT))OR(json_insert(SUM(MIN(GROUP_CONCAT(rt0.c2))), SUM(v0.c0), MAX(rt0.c1)))))OR(0x16dd9261)))OR(rt0.c0)))AND(((AVG(MIN(rt0.c1)))LIKE(SUM(COUNT(*)))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c4, rt0.c3 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c4, rt0.c3 HAVING (NOT (((((((((CAST(rt0.c2 AS TEXT))OR(json_insert(SUM(MIN(GROUP_CONCAT(rt0.c2))), SUM(v0.c0), MAX(rt0.c1)))))OR(0X16dd9261)))OR(rt0.c0)))AND(((AVG(MIN(rt0.c1)))LIKE(SUM(COUNT(*)))))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c4, rt0.c3 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c4, rt0.c3 HAVING ((((((((((CAST(rt0.c2 AS TEXT))OR(json_insert(SUM(MIN(GROUP_CONCAT(rt0.c2))), SUM(v0.c0), MAX(rt0.c1)))))OR(0x16dd9261)))OR(rt0.c0)))AND(((AVG(MIN(rt0.c1)))LIKE(SUM(COUNT(*))))))) ISNULL);
SELECT ALL * FROM rt0, v0;
SELECT ALL * FROM rt0, v0 WHERE ((rt0.c0 COLLATE NOCASE IN (CAST('1608723620' AS NUMERIC)))) UNION ALL SELECT * FROM rt0, v0 WHERE ((NOT ((rt0.c0 COLLATE NOCASE IN (CAST('1608723620' AS NUMERIC)))))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((((rt0.c0 COLLATE NOCASE IN (CAST('1608723620' AS NUMERIC)))) ISNULL));
SELECT ALL * FROM rt0, v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (TRIM(((v0.c0)!=(v0.c0)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (TRIM(((v0.c0)<>(v0.c0)))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((TRIM(((v0.c0)<>(v0.c0)))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c0;
SELECT ALL rt0.c4, rt0.c0 FROM rt0 WHERE (rt0.c3 COLLATE NOCASE) GROUP BY rt0.c4, rt0.c0 UNION SELECT ALL rt0.c4, rt0.c0 FROM rt0 WHERE ((NOT (rt0.c3 COLLATE NOCASE))) GROUP BY rt0.c4, rt0.c0 UNION SELECT rt0.c4, rt0.c0 FROM rt0 WHERE (((rt0.c3 COLLATE NOCASE) ISNULL)) GROUP BY rt0.c4, rt0.c0;
SELECT rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c0;
SELECT v0.c0, rt0.c1, rt0.c3, rt0.c0, rt0.c2, rt0.c4 FROM v0, rt0 GROUP BY v0.c0, rt0.c1, rt0.c3, rt0.c0, rt0.c2, rt0.c4;
SELECT ALL v0.c0, rt0.c1, rt0.c3, rt0.c0, rt0.c2, rt0.c4 FROM v0, rt0 GROUP BY v0.c0, rt0.c1, rt0.c3, rt0.c0, rt0.c2, rt0.c4 HAVING ((((((rt0.c4, SUM(SUM(TOTAL(rt0.c4))), SUM(MIN(COUNT(SUM(rt0.c3))))))>((SUM(rt0.c1), MIN(SUM(rt0.c3)), GROUP_CONCAT(AVG(rt0.c0)))))))==((MIN(GROUP_CONCAT(MIN(v0.c0)))))) UNION ALL SELECT v0.c0, rt0.c1, rt0.c3, rt0.c0, rt0.c2, rt0.c4 FROM v0, rt0 GROUP BY v0.c0, rt0.c1, rt0.c3, rt0.c0, rt0.c2, rt0.c4 HAVING (NOT (((((((rt0.c4, SUM(SUM(TOTAL(rt0.c4))), SUM(MIN(COUNT(SUM(rt0.c3))))))>((SUM(rt0.c1), MIN(SUM(rt0.c3)), GROUP_CONCAT(AVG(rt0.c0)))))))==((MIN(GROUP_CONCAT(MIN(v0.c0)))))))) UNION ALL SELECT v0.c0, rt0.c1, rt0.c3, rt0.c0, rt0.c2, rt0.c4 FROM v0, rt0 GROUP BY v0.c0, rt0.c1, rt0.c3, rt0.c0, rt0.c2, rt0.c4 HAVING ((((((((rt0.c4, SUM(SUM(TOTAL(rt0.c4))), SUM(MIN(COUNT(SUM(rt0.c3))))))>((SUM(rt0.c1), MIN(SUM(rt0.c3)), GROUP_CONCAT(AVG(rt0.c0)))))))=((MIN(GROUP_CONCAT(MIN(v0.c0))))))) ISNULL);
SELECT MIN(((rt0.c3)/((+ (rt0.c2))))) FROM v0, rt0 ORDER BY ((((((((CAST(rt0.c4 AS REAL))OR(rt0.c4)))OR(((rt0.c4)>('')))))AND(rt0.c3)))OR((+ (rt0.c4))))  NULLS LAST, CASE ((rt0.c4) BETWEEN (rt0.c0) AND (0X2339f7ef))  WHEN (- (rt0.c1)) THEN rt0.c2 COLLATE NOCASE WHEN ABS(DISTINCT rt0.c0) THEN ((rt0.c3) NOTNULL) WHEN rt0.c2 COLLATE RTRIM THEN ((v0.c0) IS FALSE) WHEN ((rt0.c4)%(rt0.c2)) THEN TRIM(DISTINCT rt0.c2, rt0.c0) WHEN rt0.c2 COLLATE NOCASE THEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (x'')) ELSE (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) END DESC, NULLIF((- (rt0.c2)), (((rt0.c1))=((v0.c0))))  NULLS LAST;
SELECT ALL v0.c0, rt0.c0, rt0.c1, rt0.c2 FROM v0, rt0;
SELECT v0.c0, rt0.c0, rt0.c1, rt0.c2 FROM v0, rt0 WHERE ((((((rt0.c3) ISNULL)))>=((((rt0.c2) IS FALSE))))) UNION ALL SELECT ALL v0.c0, rt0.c0, rt0.c1, rt0.c2 FROM v0, rt0 WHERE ((NOT ((((((rt0.c3) ISNULL)))>=((((rt0.c2) IS FALSE))))))) UNION ALL SELECT ALL v0.c0, rt0.c0, rt0.c1, rt0.c2 FROM v0, rt0 WHERE ((((((((rt0.c3) ISNULL)))>=((((rt0.c2) IS FALSE))))) ISNULL));
SELECT ALL v0.c0, rt0.c0, rt0.c1, rt0.c2 FROM v0, rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ('AR%*URq') UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ('AR%*URq'))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((('AR%*URq') ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT v0.c0, rt0.c1 FROM rt0, v0 GROUP BY v0.c0, rt0.c1;
SELECT v0.c0, rt0.c1 FROM rt0, v0 WHERE (UNLIKELY(DISTINCT rt0.c3 COLLATE RTRIM)) GROUP BY v0.c0, rt0.c1 UNION SELECT ALL v0.c0, rt0.c1 FROM rt0, v0 WHERE ((NOT (UNLIKELY(DISTINCT rt0.c3 COLLATE RTRIM)))) GROUP BY v0.c0, rt0.c1 UNION SELECT ALL v0.c0, rt0.c1 FROM rt0, v0 WHERE (((UNLIKELY(DISTINCT rt0.c3 COLLATE RTRIM)) ISNULL)) GROUP BY v0.c0, rt0.c1;
SELECT v0.c0, rt0.c1 FROM rt0, v0 GROUP BY v0.c0, rt0.c1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING TOTAL(MIN(TOTAL(MAX(v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 NOT INDEXED GROUP BY v0.c0 HAVING (NOT (TOTAL(MIN(TOTAL(MAX(v0.c0)))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL(MIN(TOTAL(MAX(v0.c0))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (NULL) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (NULL))) UNION ALL SELECT * FROM rt0 WHERE (((NULL) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (CASE ((v0.c0) NOT BETWEEN (NULL) AND (rt0.c0))  WHEN rt0.c3 THEN ((v0.c0) BETWEEN (0.8526803632175507) AND ('y~x뫃')) ELSE ((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c0)) END) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (CASE ((v0.c0) NOT BETWEEN (NULL) AND (rt0.c0))  WHEN rt0.c3 THEN ((v0.c0) BETWEEN (0.8526803632175507) AND ('y~x뫃')) ELSE ((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c0)) END))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((CASE ((v0.c0) NOT BETWEEN (NULL) AND (rt0.c0))  WHEN rt0.c3 THEN ((v0.c0) BETWEEN (0.8526803632175507) AND ('y~x뫃')) ELSE ((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c0)) END) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((v0.c0 COLLATE RTRIM) NOT BETWEEN (CASE WHEN v0.c0 THEN v0.c0 END) AND (((v0.c0)<=(v0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((v0.c0 COLLATE RTRIM) NOT BETWEEN (CASE WHEN v0.c0 THEN v0.c0 END) AND (((v0.c0)<=(v0.c0))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((v0.c0 COLLATE RTRIM) NOT BETWEEN (CASE WHEN v0.c0 THEN v0.c0 END) AND (((v0.c0)<=(v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((((((((v0.c0) NOT BETWEEN (v0.c0) AND (SUM(v0.c0))))OR((TOTAL(GROUP_CONCAT(v0.c0)) IN ()))))AND(((MIN(AVG(v0.c0))) BETWEEN (v0.c0) AND (TOTAL(v0.c0))))))AND(TRIM(v0.c0, v0.c0))))AND(SUM(MIN(v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((((((((((v0.c0) NOT BETWEEN (v0.c0) AND (SUM(v0.c0))))OR((TOTAL(GROUP_CONCAT(v0.c0)) IN ()))))AND(((MIN(AVG(v0.c0))) BETWEEN (v0.c0) AND (TOTAL(v0.c0))))))AND(TRIM(v0.c0, v0.c0))))AND(SUM(MIN(v0.c0)))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((((((((((v0.c0) NOT BETWEEN (v0.c0) AND (SUM(v0.c0))))OR((TOTAL(GROUP_CONCAT(v0.c0)) IN ()))))AND(((MIN(AVG(v0.c0))) BETWEEN (v0.c0) AND (TOTAL(v0.c0))))))AND(TRIM(v0.c0, v0.c0))))AND(SUM(MIN(v0.c0))))) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (CASE WHEN v0.c0 COLLATE RTRIM THEN (~ (v0.c0)) WHEN ((v0.c0)-(v0.c0)) THEN ((v0.c0)/(v0.c0)) WHEN ((((v0.c0)OR(v0.c0)))OR(v0.c0)) THEN (~ (v0.c0)) ELSE (NOT (v0.c0)) END) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (CASE WHEN v0.c0 COLLATE RTRIM THEN (~ (v0.c0)) WHEN ((v0.c0)-(v0.c0)) THEN ((v0.c0)/(v0.c0)) WHEN ((((v0.c0)OR(v0.c0)))OR(v0.c0)) THEN (~ (v0.c0)) ELSE (NOT (v0.c0)) END))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((CASE WHEN v0.c0 COLLATE RTRIM THEN (~ (v0.c0)) WHEN ((v0.c0)-(v0.c0)) THEN ((v0.c0)/(v0.c0)) WHEN ((((v0.c0)OR(v0.c0)))OR(v0.c0)) THEN (~ (v0.c0)) ELSE (NOT (v0.c0)) END) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (rt0.c0) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (CAST(CASE 0.2676463331882636  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN '0.45701530499526966' WHEN v0.c0 THEN v0.c0 END AS INTEGER)) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (CAST(CASE 0.2676463331882636  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN '0.45701530499526966' WHEN v0.c0 THEN v0.c0 END AS INTEGER)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((CAST(CASE 0.2676463331882636  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN '0.45701530499526966' WHEN v0.c0 THEN v0.c0 END AS INTEGER)) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c1, rt0.c3, rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c4, rt0.c0;
SELECT rt0.c1, rt0.c3, rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c4, rt0.c0 HAVING ((COUNT(rt0.c3))>>(((TOTAL(MIN(MIN(rt0.c3)))) BETWEEN (rt0.c4) AND (rt0.c3)))) UNION ALL SELECT rt0.c1, rt0.c3, rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c4, rt0.c0 HAVING (NOT (((COUNT(rt0.c3))>>(((TOTAL(MIN(MIN(rt0.c3)))) BETWEEN (rt0.c4) AND (rt0.c3)))))) UNION ALL SELECT rt0.c1, rt0.c3, rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c4, rt0.c0 HAVING ((((COUNT(rt0.c3))>>(((TOTAL(MIN(MIN(rt0.c3)))) BETWEEN (rt0.c4) AND (rt0.c3))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ('') UNION ALL SELECT * FROM rt0 WHERE ((NOT (''))) UNION ALL SELECT ALL * FROM rt0 WHERE ((('') ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0, v0.c0, rt0.c3, rt0.c4 FROM v0, rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0, v0.c0, rt0.c3, rt0.c4 FROM v0, rt0 WHERE (v0.c0) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0, v0.c0, rt0.c3, rt0.c4 FROM v0, rt0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0, v0.c0, rt0.c3, rt0.c4 FROM v0, rt0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0, v0.c0, rt0.c3, rt0.c4 FROM v0, rt0;
SELECT ALL rt0.c3, rt0.c4, rt0.c2, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c3, rt0.c4, rt0.c2, v0.c0, rt0.c0;
SELECT ALL rt0.c3, rt0.c4, rt0.c2, v0.c0, rt0.c0 FROM v0 NOT INDEXED, rt0 WHERE (((0.6453310907372924) ISNULL)) GROUP BY rt0.c3, rt0.c4, rt0.c2, v0.c0, rt0.c0 UNION SELECT rt0.c3, rt0.c4, rt0.c2, v0.c0, rt0.c0 FROM v0, rt0 WHERE ((NOT (((0.6453310907372924) ISNULL)))) GROUP BY rt0.c3, rt0.c4, rt0.c2, v0.c0, rt0.c0 UNION SELECT ALL rt0.c3, rt0.c4, rt0.c2, v0.c0, rt0.c0 FROM v0, rt0 WHERE (((((0.6453310907372924) ISNULL)) ISNULL)) GROUP BY rt0.c3, rt0.c4, rt0.c2, v0.c0, rt0.c0;
SELECT ALL rt0.c3, rt0.c4, rt0.c2, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c3, rt0.c4, rt0.c2, v0.c0, rt0.c0;
SELECT rt0.c0, rt0.c1, v0.c0, rt0.c2 FROM rt0 INNER JOIN v0 ON '1518963711' GROUP BY rt0.c0, rt0.c1, v0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, v0.c0, rt0.c2 FROM rt0 INNER JOIN v0 ON '1518963711' GROUP BY rt0.c0, rt0.c1, v0.c0, rt0.c2 HAVING MAX(COUNT(*)) UNION ALL SELECT ALL rt0.c0, rt0.c1, v0.c0, rt0.c2 FROM rt0 INNER JOIN v0 ON '1518963711' GROUP BY rt0.c0, rt0.c1, v0.c0, rt0.c2 HAVING (NOT (MAX(COUNT(*)))) UNION ALL SELECT rt0.c0, rt0.c1, v0.c0, rt0.c2 FROM rt0 INNER JOIN v0 ON '1518963711' GROUP BY rt0.c0, rt0.c1, v0.c0, rt0.c2 HAVING ((MAX(COUNT(*))) ISNULL);
SELECT ALL TOTAL(CAST((- (rt0.c4)) AS BLOB)) FROM v0, rt0 ORDER BY UNICODE(((((rt0.c2)AND(rt0.c0)))OR(rt0.c2))) DESC;
SELECT ALL * FROM rt0, v0;
SELECT ALL * FROM rt0, v0 WHERE ((((rt0.c2)>(NULL)) IN (((rt0.c4)&(rt0.c2))))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((NOT ((((rt0.c2)>(NULL)) IN (((rt0.c4)&(rt0.c2))))))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((((((rt0.c2)>(NULL)) IN (((rt0.c4)&(rt0.c2))))) ISNULL));
SELECT ALL * FROM rt0, v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((('+H5Qu3E?P')<>(((((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((('+H5Qu3E?P')<>(((((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0))))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((('+H5Qu3E?P')<>(((((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT rt0.c1, v0.c0, rt0.c2, rt0.c0, rt0.c4, rt0.c3 FROM v0, rt0 GROUP BY rt0.c1, v0.c0, rt0.c2, rt0.c0, rt0.c4, rt0.c3;
SELECT rt0.c1, v0.c0, rt0.c2, rt0.c0, rt0.c4, rt0.c3 FROM v0, rt0 WHERE ((NULL IN ())) GROUP BY rt0.c1, v0.c0, rt0.c2, rt0.c0, rt0.c4, rt0.c3 UNION SELECT ALL rt0.c1, v0.c0, rt0.c2, rt0.c0, rt0.c4, rt0.c3 FROM v0, rt0 WHERE ((NOT ((NULL IN ())))) GROUP BY rt0.c1, v0.c0, rt0.c2, rt0.c0, rt0.c4, rt0.c3 UNION SELECT rt0.c1, v0.c0, rt0.c2, rt0.c0, rt0.c4, rt0.c3 FROM v0, rt0 WHERE ((((NULL IN ())) ISNULL)) GROUP BY rt0.c1, v0.c0, rt0.c2, rt0.c0, rt0.c4, rt0.c3;
SELECT rt0.c1, v0.c0, rt0.c2, rt0.c0, rt0.c4, rt0.c3 FROM v0, rt0 GROUP BY rt0.c1, v0.c0, rt0.c2, rt0.c0, rt0.c4, rt0.c3;
SELECT rt0.c3, rt0.c4 FROM rt0 INNER JOIN v0 ON rt0.c1 GROUP BY rt0.c3, rt0.c4;
SELECT rt0.c3, rt0.c4 FROM rt0 INNER JOIN v0 ON rt0.c1 GROUP BY rt0.c3, rt0.c4 HAVING UNLIKELY(DISTINCT COUNT(*)) UNION ALL SELECT ALL rt0.c3, rt0.c4 FROM rt0 INNER JOIN v0 ON rt0.c1 GROUP BY rt0.c3, rt0.c4 HAVING (NOT (UNLIKELY(DISTINCT COUNT(*)))) UNION ALL SELECT ALL rt0.c3, rt0.c4 FROM rt0 INNER JOIN v0 ON rt0.c1 GROUP BY rt0.c3, rt0.c4 HAVING ((UNLIKELY(DISTINCT COUNT(*))) ISNULL);
SELECT rt0.c3, rt0.c4 FROM rt0 INNER JOIN v0 ON rt0.c1 GROUP BY rt0.c3, rt0.c4;
SELECT rt0.c3, rt0.c4 FROM rt0 INNER JOIN v0 ON rt0.c1 GROUP BY rt0.c3, rt0.c4 HAVING UNLIKELY(DISTINCT COUNT(*)) UNION ALL SELECT ALL rt0.c3, rt0.c4 FROM rt0 INNER JOIN v0 ON rt0.c1 GROUP BY rt0.c3, rt0.c4 HAVING (NOT (UNLIKELY(DISTINCT COUNT(*)))) UNION ALL SELECT ALL rt0.c3, rt0.c4 FROM rt0 INNER JOIN v0 ON rt0.c1 GROUP BY rt0.c3, rt0.c4 HAVING ((UNLIKELY(DISTINCT COUNT(*))) ISNULL);
SELECT rt0.c3, rt0.c4 FROM rt0 INNER JOIN v0 ON rt0.c1 GROUP BY rt0.c3, rt0.c4;
