-- Time: 2024/06/10 04:52:48
-- Database: database35
-- Database version: 3.40.0
-- seed value: 1788612335
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-16be'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED, notindexed=c0); -- 1ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0, content=''); -- 23ms;
UPDATE OR ROLLBACK vt0 SET (c0)=('') WHERE CAST(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) AS REAL); -- 0ms;
UPDATE OR FAIL vt0 SET c0='' WHERE (CAST(vt0.c0 AS TEXT) IN ()); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=0.7373775075110962; -- 0ms;
PRAGMA main.defer_foreign_keys; -- 0ms;
REINDEX; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 4); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 1ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL); -- 0ms;
CREATE TEMPORARY VIEW  IF NOT EXISTS v0(c0) AS SELECT ALL LTRIM(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END) FROM vt1, vt0; -- 0ms;
PRAGMA secure_delete; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 13); -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (0X75cb8a2c); -- 1ms;
ANALYZE; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
BEGIN  TRANSACTION; -- 1ms;
PRAGMA main.foreign_keys; -- 0ms;
REINDEX NOCASE; -- 0ms;
PRAGMA main.cell_size_check = false; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 unordered'); -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES (''); -- 0ms;
PRAGMA main.checkpoint_fullfsync; -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES (NULL); -- 0ms;
PRAGMA automatic_index = true; -- 0ms;
PRAGMA journal_mode; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 2); -- 0ms;
COMMIT; -- 0ms;
END TRANSACTION; -- 0ms;
PRAGMA main.recursive_triggers; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL); -- 1ms;
DROP TABLE vt1; -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES ('1976273452'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
PRAGMA main.mmap_size; -- 0ms;
ANALYZE; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(1.976273452E9); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '61700'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('0.7373775075110962'), ('1236909630'), (x''); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA shrink_memory; -- 1ms;
INSERT OR IGNORE INTO vt0 VALUES (x'1aa0'); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=0.7798584983398099 WHERE (+ ((('q9t')-(x'')))); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE vt0 SET (c0)=(0.7335109683462234); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=NULL, c0='NP#'; -- 0ms;
UPDATE OR ROLLBACK vt0 SET (c0)=(0.7854647240619448); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('0.0'); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ANALYZE temp; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES (x'4ade'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 14); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
UPDATE vt0 SET c0='/탆'; -- 0ms;
PRAGMA ignore_check_constraints; -- 0ms;
UPDATE vt0 SET c0=x''; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE vt0 SET (c0)=(x''); -- 1ms;
UPDATE OR IGNORE vt0 SET c0=x'' WHERE '657830819'; -- 0ms;
PRAGMA optimize; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 15); -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
ANALYZE; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.08570493352303354); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR FAIL INTO vt0 VALUES (0.28484039949070106); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(NULL); -- 1ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.48095904637014975), (0xffffffffc271109c), (NULL); -- 0ms;
PRAGMA defer_foreign_keys; -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES ('K蔋]nz'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
UPDATE OR IGNORE vt0 SET c0=0.856116079844489, c0='' WHERE ((((vt0.c0) ISNULL))!=(CASE WHEN vt0.c0 THEN vt0.c0 END)); -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES (0.9864732825994897); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 9); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 15); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 6); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-224555301,10');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '21405'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=5'); -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES (0Xffffffff823452f4); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=NULL; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 4); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
INSERT OR FAIL INTO vt0(c0) VALUES (NULL), (NULL), (0.2604294900337518); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(NULL); -- 1ms;
REINDEX BINARY; -- 0ms;
PRAGMA legacy_file_format; -- 0ms;
UPDATE vt0 SET c0=0.48095904637014975; -- 1ms;
INSERT OR IGNORE INTO vt0 VALUES (0.28484039949070106); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR FAIL INTO vt0 VALUES ('-1577238060'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES ('1143565250'); -- 1ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 680559540); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
ANALYZE temp; -- 0ms;
UPDATE OR IGNORE rt0 SET (c2)=(NULL); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(0X3ae7e2f0); -- 1ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (x''); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
COMMIT TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 7); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE OR ROLLBACK vt0 SET (c0, c0)=('y^', -1693250470) WHERE LIKE(UNLIKELY(vt0.c0), vt0.c0 COLLATE NOCASE, 'x'); -- 1ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0 UNINDEXED); -- 1ms;
UPDATE OR IGNORE rt0 SET (c1, c2)=('yW ', 0.41146297518822916) WHERE (('686809704')LIKE(rt0.c0)) COLLATE NOCASE; -- 0ms;
PRAGMA temp.recursive_triggers; -- 0ms;
REINDEX; -- 0ms;
PRAGMA main.reverse_unordered_selects; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 11); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
UPDATE rt0 SET (c2, c2, c1)=(0.8362419985279574, 1.14356525E9, '2055159969') WHERE (+ (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)))); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=-1789201611,6');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 327999662); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
PRAGMA incremental_vacuum(-1182002510); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 3); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
DELETE FROM rt0 WHERE NULL; -- 0ms;
PRAGMA soft_heap_limit; -- 0ms;
ANALYZE; -- 1ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.43953018972321045); -- 0ms;
UPDATE vt1 SET (c0)=(x'cb56'); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (0.26360086326985654); -- 0ms;
UPDATE rt0 SET (c1)=(0.8067491047512959) WHERE ((((rt0.c1)GLOB(x'e3e7')))>(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT rt0.c1, v0.c0, vt0.c0, rt0.c2 FROM rt0, vt1, v0, vt0;
SELECT ALL rt0.c1, v0.c0, vt0.c0, rt0.c2 FROM rt0, vt1, v0, vt0 WHERE (((x'')||(((v0.c0)OR(vt1.c0))))) UNION ALL SELECT ALL rt0.c1, v0.c0, vt0.c0, rt0.c2 FROM rt0, vt1, v0, vt0 WHERE ((NOT (((x'')||(((v0.c0)OR(vt1.c0))))))) UNION ALL SELECT ALL rt0.c1, v0.c0, vt0.c0, rt0.c2 FROM rt0, vt1, v0, vt0 WHERE (((((x'')||(((v0.c0)OR(vt1.c0))))) ISNULL));
SELECT rt0.c1, v0.c0, vt0.c0, rt0.c2 FROM rt0, vt1, v0, vt0;
SELECT DISTINCT v0.c0 FROM v0 NOT INDEXED;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END) BETWEEN (SQLITE_COMPILEOPTION_USED(v0.c0)) AND ((v0.c0 IN (v0.c0))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END) BETWEEN (SQLITE_COMPILEOPTION_USED(v0.c0)) AND ((v0.c0 IN (v0.c0))))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END) BETWEEN (SQLITE_COMPILEOPTION_USED(v0.c0)) AND ((v0.c0 IN (v0.c0))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0 NOT INDEXED;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 NOT INDEXED GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((((((rt0.c1))==((rt0.c2))))!=(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((((((rt0.c1))=((rt0.c2))))!=(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0))))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((((((((rt0.c1))=((rt0.c2))))!=(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0))))) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 NOT INDEXED GROUP BY rt0.c2, rt0.c0;
SELECT vt0.c0, v0.c0, rt0.c2 FROM v0, vt1, vt0 INNER JOIN rt0 ON load_extension(((NULL)<>(vt0.c0))) GROUP BY vt0.c0, v0.c0, rt0.c2;
SELECT vt0.c0, v0.c0, rt0.c2 FROM v0, vt1, vt0 INNER JOIN rt0 ON load_extension(((NULL)!=(vt0.c0))) GROUP BY vt0.c0, v0.c0, rt0.c2 HAVING SUM(AVG(vt1.c0)) UNION ALL SELECT vt0.c0, v0.c0, rt0.c2 FROM v0, vt1, vt0 INNER JOIN rt0 ON load_extension(((NULL)<>(vt0.c0))) GROUP BY vt0.c0, v0.c0, rt0.c2 HAVING (NOT (SUM(AVG(vt1.c0)))) UNION ALL SELECT ALL vt0.c0, v0.c0, rt0.c2 FROM v0, vt1, vt0 INNER JOIN rt0 ON load_extension(((NULL)!=(vt0.c0))) GROUP BY vt0.c0, v0.c0, rt0.c2 HAVING ((SUM(AVG(vt1.c0))) ISNULL);
SELECT ALL MIN((('+') NOT BETWEEN (CASE v0.c0  WHEN rt0.c0 THEN rt0.c2 END) AND (((rt0.c2)<>(rt0.c2))))) FROM vt1, v0, vt0, rt0;
SELECT ALL rt0.c0, rt0.c1, vt0.c0, vt1.c0, v0.c0 FROM vt0, v0, vt1, rt0;
SELECT ALL rt0.c0, rt0.c1, vt0.c0, vt1.c0, v0.c0 FROM vt0, v0, vt1, rt0 NOT INDEXED WHERE (CAST('' AS TEXT)) UNION ALL SELECT ALL rt0.c0, rt0.c1, vt0.c0, vt1.c0, v0.c0 FROM vt0, v0, vt1, rt0 WHERE ((NOT (CAST('' AS TEXT)))) UNION ALL SELECT ALL rt0.c0, rt0.c1, vt0.c0, vt1.c0, v0.c0 FROM vt0, v0, vt1, rt0 WHERE (((CAST('' AS TEXT)) ISNULL));
SELECT ALL rt0.c0, rt0.c1, vt0.c0, vt1.c0, v0.c0 FROM vt0, v0, vt1, rt0;
SELECT DISTINCT vt0.c0, v0.c0, vt1.c0 FROM vt0, vt1, v0;
SELECT DISTINCT vt0.c0, v0.c0, vt1.c0 FROM vt0, vt1, v0 WHERE (CASE WHEN vt1.c0 THEN v0.c0 END COLLATE NOCASE) UNION SELECT DISTINCT vt0.c0, v0.c0, vt1.c0 FROM vt0, vt1, v0 WHERE ((NOT (CASE WHEN vt1.c0 THEN v0.c0 END COLLATE NOCASE))) UNION SELECT DISTINCT vt0.c0, v0.c0, vt1.c0 FROM vt0, vt1, v0 WHERE (((CASE WHEN vt1.c0 THEN v0.c0 END COLLATE NOCASE) ISNULL));
SELECT DISTINCT vt0.c0, v0.c0, vt1.c0 FROM vt0, vt1, v0;
SELECT vt0.c0 FROM vt1, vt0, v0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, vt0, v0 WHERE (CAST(vt1.c0 COLLATE BINARY AS INTEGER)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt1, vt0 NOT INDEXED, v0 WHERE ((NOT (CAST(vt1.c0 COLLATE BINARY AS INTEGER)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt1, vt0, v0 WHERE (((CAST(vt1.c0 COLLATE BINARY AS INTEGER)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, vt0, v0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT((TOTAL(SUM(vt0.c0)) IN (vt0.c0, vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT((TOTAL(SUM(vt0.c0)) IN (vt0.c0, vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT((TOTAL(SUM(vt0.c0)) IN (vt0.c0, vt0.c0)))) ISNULL);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON ((CAST(vt0.c0 AS BLOB))&(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON ((CAST(vt0.c0 AS BLOB))&(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))) WHERE ((((vt0.c0)&(rt0.c1)) IN ())) UNION ALL SELECT * FROM rt0 FULL OUTER JOIN vt0 ON ((CAST(vt0.c0 AS BLOB))&(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))) WHERE ((NOT ((((vt0.c0)&(rt0.c1)) IN ())))) UNION ALL SELECT * FROM rt0 FULL OUTER JOIN vt0 ON ((CAST(vt0.c0 AS BLOB))&(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))) WHERE ((((((vt0.c0)&(rt0.c1)) IN ())) ISNULL));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON ((CAST(vt0.c0 AS BLOB))&(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))));
SELECT DISTINCT rt0.c2, vt0.c0, rt0.c1 FROM rt0, vt1, vt0;
SELECT DISTINCT rt0.c2, vt0.c0, rt0.c1 FROM rt0, vt1, vt0 WHERE (CASE (- (rt0.c1))  WHEN TRIM(DISTINCT rt0.c0) THEN CAST(0.9300738026658047 AS INTEGER) END) UNION SELECT DISTINCT rt0.c2, vt0.c0, rt0.c1 FROM rt0, vt1, vt0 WHERE ((NOT (CASE (- (rt0.c1))  WHEN TRIM(DISTINCT rt0.c0) THEN CAST(0.9300738026658047 AS INTEGER) END))) UNION SELECT DISTINCT rt0.c2, vt0.c0, rt0.c1 FROM rt0, vt1, vt0 WHERE (((CASE (- (rt0.c1))  WHEN TRIM(DISTINCT rt0.c0) THEN CAST(0.9300738026658047 AS INTEGER) END) ISNULL));
SELECT DISTINCT rt0.c2, vt0.c0, rt0.c1 FROM rt0, vt1, vt0;
SELECT v0.c0, rt0.c1, vt0.c0, rt0.c0 FROM vt0, rt0 NATURAL JOIN v0 GROUP BY v0.c0, rt0.c1, vt0.c0, rt0.c0;
SELECT ALL v0.c0, rt0.c1, vt0.c0, rt0.c0 FROM vt0, rt0 NATURAL JOIN v0 WHERE ((((rt0.c2)-(v0.c0)) IN ())) GROUP BY v0.c0, rt0.c1, vt0.c0, rt0.c0 UNION SELECT v0.c0, rt0.c1, vt0.c0, rt0.c0 FROM vt0, rt0 NATURAL JOIN v0 WHERE ((NOT ((((rt0.c2)-(v0.c0)) IN ())))) GROUP BY v0.c0, rt0.c1, vt0.c0, rt0.c0 UNION SELECT ALL v0.c0, rt0.c1, vt0.c0, rt0.c0 FROM vt0, rt0 NATURAL JOIN v0 WHERE ((((((rt0.c2)-(v0.c0)) IN ())) ISNULL)) GROUP BY v0.c0, rt0.c1, vt0.c0, rt0.c0;
SELECT v0.c0, rt0.c1, vt0.c0, rt0.c0 FROM vt0, rt0 NATURAL JOIN v0 GROUP BY v0.c0, rt0.c1, vt0.c0, rt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0, rt0.c2, rt0.c0, vt0.c0 FROM v0, vt0, rt0, vt1;
SELECT v0.c0, rt0.c2, rt0.c0, vt0.c0 FROM v0, vt0, rt0, vt1 WHERE (NULL) UNION ALL SELECT ALL v0.c0, rt0.c2, rt0.c0, vt0.c0 FROM v0, vt0, rt0, vt1 WHERE ((NOT (NULL))) UNION ALL SELECT ALL v0.c0, rt0.c2, rt0.c0, vt0.c0 FROM v0, vt0, rt0, vt1 WHERE (((NULL) ISNULL));
SELECT ALL v0.c0, rt0.c2, rt0.c0, vt0.c0 FROM v0, vt0, rt0, vt1;
SELECT DISTINCT rt0.c1 FROM v0 RIGHT OUTER JOIN vt1 ON vt0.c0 LEFT OUTER JOIN rt0 ON ((((((((rt0.c0)AND(((((((((rt0.c1)AND(vt1.c0)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c1)))))AND(CASE WHEN rt0.c1 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c2 WHEN v0.c0 THEN rt0.c2 ELSE rt0.c1 END)))OR(JULIANDAY('', rt0.c0, vt1.c0, v0.c0, rt0.c1))))OR(rt0.c1 COLLATE NOCASE)) CROSS JOIN vt0 ON (((vt0.c0)) NOT BETWEEN ((((0.0689023999907562)<(0X44296bc2)))) AND ((CAST(vt0.c0 AS NUMERIC))));
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) IN (vt1.c0))) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((NOT ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) IN (vt1.c0))))) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) IN (vt1.c0))) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT rt0.c0, vt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM vt0, vt1, rt0 GROUP BY rt0.c0, vt0.c0, vt1.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, vt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM vt0, vt1, rt0 GROUP BY rt0.c0, vt0.c0, vt1.c0, rt0.c2, rt0.c1 HAVING (((TRIM(rt0.c0)))>((TOTAL(TOTAL(COUNT(*)))))) UNION ALL SELECT rt0.c0, vt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM vt0, vt1, rt0 GROUP BY rt0.c0, vt0.c0, vt1.c0, rt0.c2, rt0.c1 HAVING (NOT ((((TRIM(rt0.c0)))>((TOTAL(TOTAL(COUNT(*)))))))) UNION ALL SELECT rt0.c0, vt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM vt0, vt1, rt0 GROUP BY rt0.c0, vt0.c0, vt1.c0, rt0.c2, rt0.c1 HAVING (((((TRIM(rt0.c0)))>((TOTAL(TOTAL(COUNT(*))))))) ISNULL);
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE ((CASE WHEN v0.c0 THEN v0.c0 END IN ())) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT ((CASE WHEN v0.c0 THEN v0.c0 END IN ())))) UNION ALL SELECT ALL * FROM v0 WHERE ((((CASE WHEN v0.c0 THEN v0.c0 END IN ())) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT rt0.c1, rt0.c0, v0.c0 FROM rt0, v0;
SELECT DISTINCT rt0.c1, rt0.c0, v0.c0 FROM rt0, v0 WHERE ((~ (((rt0.c1)>>(rt0.c0))))) UNION SELECT DISTINCT rt0.c1, rt0.c0, v0.c0 FROM rt0, v0 WHERE ((NOT ((~ (((rt0.c1)>>(rt0.c0))))))) UNION SELECT DISTINCT rt0.c1, rt0.c0, v0.c0 FROM rt0, v0 WHERE ((((~ (((rt0.c1)>>(rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, v0.c0 FROM rt0, v0;
SELECT ALL vt1.c0, rt0.c2, v0.c0 FROM vt0, vt1 NOT INDEXED LEFT OUTER JOIN v0 ON ((json_quote(vt1.c0))>(v0.c0)) FULL OUTER JOIN rt0 ON GLOB(rt0.c1, rt0.c1) COLLATE RTRIM GROUP BY vt1.c0, rt0.c2, v0.c0;
SELECT ALL vt1.c0, rt0.c2, v0.c0 FROM vt0, vt1 LEFT OUTER JOIN v0 ON ((json_quote(vt1.c0))>(v0.c0)) FULL OUTER JOIN rt0 ON GLOB(rt0.c1, rt0.c1) COLLATE RTRIM WHERE (CASE (((vt1.c0))>((0.2077839687098103)))  WHEN '-1115176716' THEN 0.08570493352303354 ELSE CAST(vt1.c0 AS NUMERIC) END) GROUP BY vt1.c0, rt0.c2, v0.c0 UNION SELECT vt1.c0, rt0.c2, v0.c0 FROM vt0, vt1 LEFT OUTER JOIN v0 ON ((json_quote(vt1.c0))>(v0.c0)) FULL OUTER JOIN rt0 ON GLOB(rt0.c1, rt0.c1) COLLATE RTRIM WHERE ((NOT (CASE (((vt1.c0))>((0.2077839687098103)))  WHEN '-1115176716' THEN 0.08570493352303354 ELSE CAST(vt1.c0 AS NUMERIC) END))) GROUP BY vt1.c0, rt0.c2, v0.c0 UNION SELECT ALL vt1.c0, rt0.c2, v0.c0 FROM vt0, vt1 LEFT OUTER JOIN v0 ON ((json_quote(vt1.c0))>(v0.c0)) FULL OUTER JOIN rt0 ON GLOB(rt0.c1, rt0.c1) COLLATE RTRIM WHERE (((CASE (((vt1.c0))>((0.2077839687098103)))  WHEN '-1115176716' THEN 0.08570493352303354 ELSE CAST(vt1.c0 AS NUMERIC) END) ISNULL)) GROUP BY vt1.c0, rt0.c2, v0.c0;
SELECT ALL vt1.c0, rt0.c2, v0.c0 FROM vt0, vt1 NOT INDEXED LEFT OUTER JOIN v0 ON ((json_quote(vt1.c0))>(v0.c0)) FULL OUTER JOIN rt0 ON GLOB(rt0.c1, rt0.c1) COLLATE RTRIM GROUP BY vt1.c0, rt0.c2, v0.c0;
SELECT ALL rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0 HAVING MAX(SUM(MAX(rt0.c1))) UNION ALL SELECT ALL rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0 HAVING (NOT (MAX(SUM(MAX(rt0.c1))))) UNION ALL SELECT ALL rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0 HAVING ((MAX(SUM(MAX(rt0.c1)))) ISNULL);
SELECT ALL * FROM vt1, vt0, v0;
SELECT ALL * FROM vt1, vt0, v0 WHERE (CAST(x'ef0d' AS REAL)) UNION ALL SELECT ALL * FROM vt1, vt0, v0 WHERE ((NOT (CAST(x'ef0d' AS REAL)))) UNION ALL SELECT ALL * FROM vt1 NOT INDEXED, vt0, v0 WHERE (((CAST(x'ef0d' AS REAL)) ISNULL));
SELECT ALL * FROM vt1, vt0, v0;
SELECT DISTINCT rt0.c0 FROM rt0, vt1, vt0, v0;
SELECT DISTINCT rt0.c0 FROM rt0, vt1, vt0, v0 WHERE ((((NULL)) NOT BETWEEN ((((((rt0.c1)OR(v0.c0)))OR(vt1.c0)))) AND ((((rt0.c1)LIKE(vt1.c0)))))) UNION SELECT DISTINCT rt0.c0 FROM rt0, vt1, vt0, v0 WHERE ((NOT ((((NULL)) NOT BETWEEN ((((((rt0.c1)OR(v0.c0)))OR(vt1.c0)))) AND ((((rt0.c1)LIKE(vt1.c0)))))))) UNION SELECT DISTINCT rt0.c0 FROM rt0, vt1, vt0, v0 WHERE ((((((NULL)) NOT BETWEEN ((((((rt0.c1)OR(v0.c0)))OR(vt1.c0)))) AND ((((rt0.c1)LIKE(vt1.c0)))))) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0, vt1, vt0, v0;
SELECT ALL v0.c0, vt0.c0, rt0.c0, vt1.c0, rt0.c1 FROM v0, vt1, vt0, rt0 GROUP BY v0.c0, vt0.c0, rt0.c0, vt1.c0, rt0.c1;
SELECT ALL v0.c0, vt0.c0, rt0.c0, vt1.c0, rt0.c1 FROM v0, vt1, vt0, rt0 WHERE ('1315878956') GROUP BY v0.c0, vt0.c0, rt0.c0, vt1.c0, rt0.c1 UNION SELECT ALL v0.c0, vt0.c0, rt0.c0, vt1.c0, rt0.c1 FROM v0, vt1, vt0, rt0 WHERE ((NOT ('1315878956'))) GROUP BY v0.c0, vt0.c0, rt0.c0, vt1.c0, rt0.c1 UNION SELECT ALL v0.c0, vt0.c0, rt0.c0, vt1.c0, rt0.c1 FROM v0, vt1, vt0, rt0 WHERE ((('1315878956') ISNULL)) GROUP BY v0.c0, vt0.c0, rt0.c0, vt1.c0, rt0.c1;
SELECT ALL v0.c0, vt0.c0, rt0.c0, vt1.c0, rt0.c1 FROM v0, vt1, vt0, rt0 GROUP BY v0.c0, vt0.c0, rt0.c0, vt1.c0, rt0.c1;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt1, v0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt1, v0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt1, v0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt1, v0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt1, v0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt1, v0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt1, v0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt1, v0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt1, v0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT * FROM rt0, vt0, vt1, v0;
SELECT * FROM rt0, vt0, vt1, v0 WHERE (((((vt0.c0)+(rt0.c1)))LIKE(rt0.c0 COLLATE BINARY))) UNION ALL SELECT * FROM rt0, vt0, vt1, v0 WHERE ((NOT (((((vt0.c0)+(rt0.c1)))LIKE(rt0.c0 COLLATE BINARY))))) UNION ALL SELECT * FROM rt0, vt0, vt1, v0 WHERE (((((((vt0.c0)+(rt0.c1)))LIKE(rt0.c0 COLLATE BINARY))) ISNULL));
SELECT * FROM rt0, vt0, vt1, v0;
SELECT DISTINCT v0.c0, vt1.c0, vt0.c0 FROM v0, vt1, vt0;
SELECT DISTINCT v0.c0, vt1.c0, vt0.c0 FROM v0, vt1, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((0.3094989534843826)) AND (((((vt1.c0, '747815515', vt1.c0))<=((0.4266863779947878, vt0.c0, v0.c0))))))) UNION SELECT DISTINCT v0.c0, vt1.c0, vt0.c0 FROM v0, vt1, vt0 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN ((0.3094989534843826)) AND (((((vt1.c0, '747815515', vt1.c0))<=((0.4266863779947878, vt0.c0, v0.c0))))))))) UNION SELECT DISTINCT v0.c0, vt1.c0, vt0.c0 FROM v0, vt1, vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((0.3094989534843826)) AND (((((vt1.c0, '747815515', vt1.c0))<=((0.4266863779947878, vt0.c0, v0.c0))))))) ISNULL));
SELECT DISTINCT v0.c0, vt1.c0, vt0.c0 FROM v0, vt1, vt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (TYPEOF(DISTINCT ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (TYPEOF(DISTINCT ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((TYPEOF(DISTINCT ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt0.c0, vt0.c0 FROM v0, rt0, vt0 GROUP BY rt0.c0, vt0.c0;
SELECT ALL rt0.c0, vt0.c0 FROM v0, rt0, vt0 GROUP BY rt0.c0, vt0.c0 HAVING (((rt0.c2)) NOT BETWEEN ((((v0.c0)<<(vt0.c0)))) AND ((LIKE(MIN(rt0.c1), MIN(MIN(rt0.c0)), '	')))) UNION ALL SELECT ALL rt0.c0, vt0.c0 FROM v0, rt0, vt0 GROUP BY rt0.c0, vt0.c0 HAVING (NOT ((((rt0.c2)) NOT BETWEEN ((((v0.c0)<<(vt0.c0)))) AND ((LIKE(MIN(rt0.c1), MIN(MIN(rt0.c0)), '	')))))) UNION ALL SELECT rt0.c0, vt0.c0 FROM v0, rt0, vt0 GROUP BY rt0.c0, vt0.c0 HAVING (((((rt0.c2)) NOT BETWEEN ((((v0.c0)<<(vt0.c0)))) AND ((LIKE(MIN(rt0.c1), MIN(MIN(rt0.c0)), '	'))))) ISNULL);
SELECT ALL * FROM vt0, vt1;
SELECT * FROM vt0, vt1 WHERE ((((vt0.c0)) BETWEEN ((((vt1.c0)||('0.26360086326985654')))) AND (((vt0.c0 IN ()))))) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE ((NOT ((((vt0.c0)) BETWEEN ((((vt1.c0)||('0.26360086326985654')))) AND (((vt0.c0 IN ()))))))) UNION ALL SELECT * FROM vt0, vt1 WHERE ((((((vt0.c0)) BETWEEN ((((vt1.c0)||('0.26360086326985654')))) AND (((vt0.c0 IN ()))))) ISNULL));
SELECT ALL * FROM vt0, vt1;
SELECT DISTINCT * FROM vt1, rt0, v0;
SELECT DISTINCT * FROM vt1, rt0, v0 WHERE (x'') UNION SELECT DISTINCT * FROM vt1, rt0, v0 WHERE ((NOT (x''))) UNION SELECT DISTINCT * FROM vt1, rt0, v0 WHERE (((x'') ISNULL));
SELECT DISTINCT * FROM vt1, rt0, v0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c1, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c1, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c1, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0;
SELECT * FROM rt0, vt0;
SELECT * FROM rt0, vt0 WHERE (((((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)))-(((rt0.c0) ISNULL)))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((NOT (((((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)))-(((rt0.c0) ISNULL)))))) UNION ALL SELECT * FROM rt0, vt0 WHERE (((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)))-(((rt0.c0) ISNULL)))) ISNULL));
SELECT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((IFNULL(DISTINCT rt0.c0, rt0.c1))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((IFNULL(DISTINCT rt0.c0, rt0.c1))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((IFNULL(DISTINCT rt0.c0, rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (rt0.c2) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (rt0.c2))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((rt0.c2) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM v0, vt0, rt0, vt1 GROUP BY rt0.c2, rt0.c0, vt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM v0, vt0, rt0, vt1 GROUP BY rt0.c2, rt0.c0, vt0.c0, rt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM v0, vt0, rt0, vt1 GROUP BY rt0.c2, rt0.c0, vt0.c0, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM v0, vt0, rt0, vt1 GROUP BY rt0.c2, rt0.c0, vt0.c0, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM v0, vt0, rt0, vt1 GROUP BY rt0.c2, rt0.c0, vt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM v0, vt0, rt0, vt1 GROUP BY rt0.c2, rt0.c0, vt0.c0, rt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM v0, vt0, rt0, vt1 GROUP BY rt0.c2, rt0.c0, vt0.c0, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM v0, vt0, rt0, vt1 GROUP BY rt0.c2, rt0.c0, vt0.c0, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM v0, vt0, rt0, vt1 GROUP BY rt0.c2, rt0.c0, vt0.c0, rt0.c1;
SELECT MIN('-1664874554') FROM v0, rt0, vt0, vt1 ORDER BY CAST(((((rt0.c0)AND(rt0.c2)))AND(vt0.c0)) AS NUMERIC) DESC  NULLS FIRST;
SELECT ALL vt0.c0 FROM vt0, v0;
SELECT ALL vt0.c0 FROM vt0, v0 WHERE ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) IN (((x'6d24')%(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0, v0 WHERE ((NOT ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) IN (((x'6d24')%(vt0.c0))))))) UNION ALL SELECT vt0.c0 FROM vt0, v0 WHERE ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) IN (((x'6d24')%(vt0.c0))))) ISNULL));
SELECT ALL vt0.c0 FROM vt0, v0;
SELECT DISTINCT * FROM v0 INNER JOIN vt1 ON ((((v0.c0) BETWEEN (v0.c0) AND (vt1.c0))) ISNULL);
SELECT DISTINCT * FROM v0 INNER JOIN vt1 ON ((((v0.c0) BETWEEN (v0.c0) AND (vt1.c0))) ISNULL) WHERE (COALESCE(((v0.c0) BETWEEN (vt1.c0) AND (vt1.c0)), CAST(v0.c0 AS BLOB))) UNION SELECT DISTINCT * FROM v0 INNER JOIN vt1 ON ((((v0.c0) BETWEEN (v0.c0) AND (vt1.c0))) ISNULL) WHERE ((NOT (COALESCE(((v0.c0) BETWEEN (vt1.c0) AND (vt1.c0)), CAST(v0.c0 AS BLOB))))) UNION SELECT DISTINCT * FROM v0 INNER JOIN vt1 ON ((((v0.c0) BETWEEN (v0.c0) AND (vt1.c0))) ISNULL) WHERE (((COALESCE(((v0.c0) BETWEEN (vt1.c0) AND (vt1.c0)), CAST(v0.c0 AS BLOB))) ISNULL));
SELECT DISTINCT * FROM v0 INNER JOIN vt1 ON ((((v0.c0) BETWEEN (v0.c0) AND (vt1.c0))) ISNULL);
SELECT rt0.c0, rt0.c1 FROM v0 FULL OUTER JOIN rt0 ON ((((((((rt0.c1)OR(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 END)))AND(rt0.c0)))OR(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))OR(((v0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))) GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM v0 FULL OUTER JOIN rt0 ON ((((((((rt0.c1)OR(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 END)))AND(rt0.c0)))OR(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))OR(((v0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))) WHERE (((((NULL)OR(NULL)))OR((rt0.c0 IN ())))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM v0 FULL OUTER JOIN rt0 ON ((((((((rt0.c1)OR(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 END)))AND(rt0.c0)))OR(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))OR(((v0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))) WHERE ((NOT (((((NULL)OR(NULL)))OR((rt0.c0 IN ())))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM v0 FULL OUTER JOIN rt0 ON ((((((((rt0.c1)OR(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 END)))AND(rt0.c0)))OR(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))OR(((v0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))) WHERE (((((((NULL)OR(NULL)))OR((rt0.c0 IN ())))) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM v0 FULL OUTER JOIN rt0 ON ((((((((rt0.c1)OR(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 END)))AND(rt0.c0)))OR(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))OR(((v0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))) GROUP BY rt0.c0, rt0.c1;
SELECT ALL v0.c0 FROM vt0, rt0, v0, vt1 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0, rt0, v0, vt1 GROUP BY v0.c0 HAVING ((GROUP_CONCAT(MAX(vt1.c0)))%(((rt0.c1)>(COUNT(*))))) UNION ALL SELECT v0.c0 FROM vt0, rt0, v0, vt1 GROUP BY v0.c0 HAVING (NOT (((GROUP_CONCAT(MAX(vt1.c0)))%(((rt0.c1)>(COUNT(*))))))) UNION ALL SELECT v0.c0 FROM vt0, rt0, v0, vt1 GROUP BY v0.c0 HAVING ((((GROUP_CONCAT(MAX(vt1.c0)))%(((rt0.c1)>(COUNT(*)))))) ISNULL);
SELECT rt0.c2 FROM vt0 RIGHT OUTER JOIN v0 ON ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1))) ISNULL) CROSS JOIN rt0 ON CAST(TRIM(vt0.c0, rt0.c0) AS INTEGER);
SELECT DISTINCT vt1.c0, vt0.c0, v0.c0 FROM vt0, vt1, v0;
SELECT DISTINCT vt1.c0, vt0.c0, v0.c0 FROM vt0, vt1, v0 WHERE (((((vt0.c0) ISNULL)) IS TRUE)) UNION SELECT DISTINCT vt1.c0, vt0.c0, v0.c0 FROM vt0, vt1, v0 WHERE ((NOT (((((vt0.c0) ISNULL)) IS TRUE)))) UNION SELECT DISTINCT vt1.c0, vt0.c0, v0.c0 FROM vt0, vt1, v0 WHERE (((((((vt0.c0) ISNULL)) IS TRUE)) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c0, v0.c0 FROM vt0, vt1, v0;
SELECT rt0.c0, vt0.c0, rt0.c1, vt1.c0, rt0.c2, v0.c0 FROM vt1, rt0, v0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c1, vt1.c0, rt0.c2, v0.c0;
SELECT rt0.c0, vt0.c0, rt0.c1, vt1.c0, rt0.c2, v0.c0 FROM vt1, rt0, v0, vt0 WHERE (CAST(((rt0.c0)>(vt1.c0)) AS BLOB)) GROUP BY rt0.c0, vt0.c0, rt0.c1, vt1.c0, rt0.c2, v0.c0 UNION SELECT ALL rt0.c0, vt0.c0, rt0.c1, vt1.c0, rt0.c2, v0.c0 FROM vt1, rt0, v0, vt0 WHERE ((NOT (CAST(((rt0.c0)>(vt1.c0)) AS BLOB)))) GROUP BY rt0.c0, vt0.c0, rt0.c1, vt1.c0, rt0.c2, v0.c0 UNION SELECT rt0.c0, vt0.c0, rt0.c1, vt1.c0, rt0.c2, v0.c0 FROM vt1, rt0, v0, vt0 WHERE (((CAST(((rt0.c0)>(vt1.c0)) AS BLOB)) ISNULL)) GROUP BY rt0.c0, vt0.c0, rt0.c1, vt1.c0, rt0.c2, v0.c0;
SELECT rt0.c0, vt0.c0, rt0.c1, vt1.c0, rt0.c2, v0.c0 FROM vt1, rt0, v0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c1, vt1.c0, rt0.c2, v0.c0;
SELECT ALL rt0.c2, rt0.c0, v0.c0, vt1.c0, rt0.c1, vt0.c0 FROM vt1, v0, vt0 CROSS JOIN rt0 ON (((('988275440')OR('')))OR((vt0.c0 IN ()))) GROUP BY rt0.c2, rt0.c0, v0.c0, vt1.c0, rt0.c1, vt0.c0;
SELECT rt0.c2, rt0.c0, v0.c0, vt1.c0, rt0.c1, vt0.c0 FROM vt1, v0, vt0 CROSS JOIN rt0 ON (((('988275440')OR('')))OR((vt0.c0 IN ()))) GROUP BY rt0.c2, rt0.c0, v0.c0, vt1.c0, rt0.c1, vt0.c0 HAVING (((COUNT(v0.c0))) BETWEEN ((COUNT(*))) AND ((COUNT(TOTAL(rt0.c0))))) UNION ALL SELECT rt0.c2, rt0.c0, v0.c0, vt1.c0, rt0.c1, vt0.c0 FROM vt1, v0, vt0 CROSS JOIN rt0 ON (((('988275440')OR('')))OR((vt0.c0 IN ()))) GROUP BY rt0.c2, rt0.c0, v0.c0, vt1.c0, rt0.c1, vt0.c0 HAVING (NOT ((((COUNT(v0.c0))) BETWEEN ((COUNT(*))) AND ((COUNT(TOTAL(rt0.c0))))))) UNION ALL SELECT rt0.c2, rt0.c0, v0.c0, vt1.c0, rt0.c1, vt0.c0 FROM vt1, v0, vt0 CROSS JOIN rt0 ON (((('988275440')OR('')))OR((vt0.c0 IN ()))) GROUP BY rt0.c2, rt0.c0, v0.c0, vt1.c0, rt0.c1, vt0.c0 HAVING (((((COUNT(v0.c0))) BETWEEN ((COUNT(*))) AND ((COUNT(TOTAL(rt0.c0)))))) ISNULL);
SELECT * FROM rt0, vt0, v0, vt1;
SELECT * FROM rt0, vt0, v0, vt1 WHERE (((CASE v0.c0  WHEN v0.c0 THEN rt0.c0 ELSE 0X7c64df38 END) IS FALSE)) ORDER BY LOWER(CAST(rt0.c2 AS INTEGER)) DESC  NULLS LAST;
SELECT ALL * FROM rt0, vt0, v0, vt1 WHERE ((NOT (((CASE v0.c0  WHEN v0.c0 THEN rt0.c0 ELSE 0X7c64df38 END) IS FALSE)))) ORDER BY LOWER(CAST(rt0.c2 AS INTEGER)) DESC  NULLS LAST;
SELECT * FROM rt0, vt0, v0, vt1 WHERE (((((CASE v0.c0  WHEN v0.c0 THEN rt0.c0 ELSE 0X7c64df38 END) IS FALSE)) ISNULL)) ORDER BY LOWER(CAST(rt0.c2 AS INTEGER)) DESC  NULLS LAST;
SELECT * FROM rt0, vt0, v0, vt1;
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE (CAST(rt0.c2 COLLATE BINARY AS NUMERIC)) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT (CAST(rt0.c2 COLLATE BINARY AS NUMERIC)))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE (((CAST(rt0.c2 COLLATE BINARY AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0) ISNULL)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0) ISNULL)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c2, vt0.c0, rt0.c1, v0.c0, rt0.c0, vt1.c0 FROM vt0, v0, vt1, rt0 GROUP BY rt0.c2, vt0.c0, rt0.c1, v0.c0, rt0.c0, vt1.c0;
SELECT rt0.c2, vt0.c0, rt0.c1, v0.c0, rt0.c0, vt1.c0 FROM vt0, v0, vt1, rt0 GROUP BY rt0.c2, vt0.c0, rt0.c1, v0.c0, rt0.c0, vt1.c0 HAVING (- (CAST(vt1.c0 AS BLOB))) UNION ALL SELECT ALL rt0.c2, vt0.c0, rt0.c1, v0.c0, rt0.c0, vt1.c0 FROM vt0, v0, vt1, rt0 GROUP BY rt0.c2, vt0.c0, rt0.c1, v0.c0, rt0.c0, vt1.c0 HAVING (NOT ((- (CAST(vt1.c0 AS BLOB))))) UNION ALL SELECT rt0.c2, vt0.c0, rt0.c1, v0.c0, rt0.c0, vt1.c0 FROM vt0, v0, vt1, rt0 GROUP BY rt0.c2, vt0.c0, rt0.c1, v0.c0, rt0.c0, vt1.c0 HAVING (((- (CAST(vt1.c0 AS BLOB)))) ISNULL);
SELECT rt0.c2, vt0.c0, rt0.c1, v0.c0, rt0.c0, vt1.c0 FROM vt0, v0, vt1, rt0 GROUP BY rt0.c2, vt0.c0, rt0.c1, v0.c0, rt0.c0, vt1.c0;
SELECT rt0.c2, vt0.c0, rt0.c1, v0.c0, rt0.c0, vt1.c0 FROM vt0, v0, vt1, rt0 GROUP BY rt0.c2, vt0.c0, rt0.c1, v0.c0, rt0.c0, vt1.c0 HAVING (- (CAST(vt1.c0 AS BLOB))) UNION ALL SELECT ALL rt0.c2, vt0.c0, rt0.c1, v0.c0, rt0.c0, vt1.c0 FROM vt0, v0, vt1, rt0 GROUP BY rt0.c2, vt0.c0, rt0.c1, v0.c0, rt0.c0, vt1.c0 HAVING (NOT ((- (CAST(vt1.c0 AS BLOB))))) UNION ALL SELECT rt0.c2, vt0.c0, rt0.c1, v0.c0, rt0.c0, vt1.c0 FROM vt0, v0, vt1, rt0 GROUP BY rt0.c2, vt0.c0, rt0.c1, v0.c0, rt0.c0, vt1.c0 HAVING (((- (CAST(vt1.c0 AS BLOB)))) ISNULL);
SELECT rt0.c2, vt0.c0, rt0.c1, v0.c0, rt0.c0, vt1.c0 FROM vt0, v0, vt1, rt0 GROUP BY rt0.c2, vt0.c0, rt0.c1, v0.c0, rt0.c0, vt1.c0;
SELECT rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0, vt1, v0;
SELECT rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0, vt1, v0 WHERE (((((NULL)AND(rt0.c2)))OR(rt0.c0)) COLLATE BINARY) UNION ALL SELECT ALL rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0, vt1, v0 WHERE ((NOT (((((NULL)AND(rt0.c2)))OR(rt0.c0)) COLLATE BINARY))) UNION ALL SELECT rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0, vt1, v0 WHERE (((((((NULL)AND(rt0.c2)))OR(rt0.c0)) COLLATE BINARY) ISNULL));
SELECT rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0, vt1, v0;
SELECT DISTINCT rt0.c2, v0.c0, rt0.c1 FROM v0, vt0, vt1, rt0;
SELECT DISTINCT rt0.c2, v0.c0, rt0.c1 FROM v0, vt0 NOT INDEXED, vt1, rt0 WHERE ((0.15241736435608122 IN (((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c0))))) UNION SELECT DISTINCT rt0.c2, v0.c0, rt0.c1 FROM v0, vt0, vt1, rt0 WHERE ((NOT ((0.15241736435608122 IN (((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c0))))))) UNION SELECT DISTINCT rt0.c2, v0.c0, rt0.c1 FROM v0, vt0, vt1, rt0 WHERE ((((0.15241736435608122 IN (((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c2, v0.c0, rt0.c1 FROM v0, vt0, vt1, rt0;
SELECT rt0.c2, v0.c0, rt0.c1, vt0.c0, vt1.c0, rt0.c0 FROM v0, vt1, rt0, vt0 GROUP BY rt0.c2, v0.c0, rt0.c1, vt0.c0, vt1.c0, rt0.c0;
SELECT ALL rt0.c2, v0.c0, rt0.c1, vt0.c0, vt1.c0, rt0.c0 FROM v0, vt1, rt0, vt0 WHERE (rt0.c2) GROUP BY rt0.c2, v0.c0, rt0.c1, vt0.c0, vt1.c0, rt0.c0 UNION SELECT ALL rt0.c2, v0.c0, rt0.c1, vt0.c0, vt1.c0, rt0.c0 FROM v0, vt1, rt0, vt0 WHERE ((NOT (rt0.c2))) GROUP BY rt0.c2, v0.c0, rt0.c1, vt0.c0, vt1.c0, rt0.c0 UNION SELECT ALL rt0.c2, v0.c0, rt0.c1, vt0.c0, vt1.c0, rt0.c0 FROM v0, vt1, rt0, vt0 WHERE (((rt0.c2) ISNULL)) GROUP BY rt0.c2, v0.c0, rt0.c1, vt0.c0, vt1.c0, rt0.c0;
SELECT rt0.c2, v0.c0, rt0.c1, vt0.c0, vt1.c0, rt0.c0 FROM v0, vt1, rt0, vt0 GROUP BY rt0.c2, v0.c0, rt0.c1, vt0.c0, vt1.c0, rt0.c0;
SELECT v0.c0 FROM v0 FULL OUTER JOIN vt1 ON (v0.c0 IN ()) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 FULL OUTER JOIN vt1 ON (v0.c0 IN ()) GROUP BY v0.c0 HAVING TOTAL(GROUP_CONCAT(MIN(SUM(TOTAL(COUNT(*)))))) UNION ALL SELECT v0.c0 FROM v0 FULL OUTER JOIN vt1 ON (v0.c0 IN ()) GROUP BY v0.c0 HAVING (NOT (TOTAL(GROUP_CONCAT(MIN(SUM(TOTAL(COUNT(*)))))))) UNION ALL SELECT v0.c0 FROM v0 FULL OUTER JOIN vt1 ON (v0.c0 IN ()) GROUP BY v0.c0 HAVING ((TOTAL(GROUP_CONCAT(MIN(SUM(TOTAL(COUNT(*))))))) ISNULL);
SELECT ALL rt0.c2, rt0.c1, vt1.c0, vt0.c0, rt0.c0 FROM vt0, vt1, rt0;
SELECT rt0.c2, rt0.c1, vt1.c0, vt0.c0, rt0.c0 FROM vt0, vt1, rt0 WHERE ((((rt0.c0)=(vt1.c0)) IN (json_type(rt0.c0)))) UNION ALL SELECT rt0.c2, rt0.c1, vt1.c0, vt0.c0, rt0.c0 FROM vt0, vt1, rt0 WHERE ((NOT ((((rt0.c0)==(vt1.c0)) IN (json_type(rt0.c0)))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, vt1.c0, vt0.c0, rt0.c0 FROM vt0, vt1, rt0 WHERE ((((((rt0.c0)=(vt1.c0)) IN (json_type(rt0.c0)))) ISNULL));
SELECT ALL rt0.c2, rt0.c1, vt1.c0, vt0.c0, rt0.c0 FROM vt0, vt1, rt0;
SELECT DISTINCT * FROM rt0, v0, vt0, vt1;
SELECT DISTINCT * FROM rt0, v0, vt0, vt1 WHERE ((('y5Ck}')-(NULL))) UNION SELECT DISTINCT * FROM rt0, v0, vt0, vt1 WHERE ((NOT ((('y5Ck}')-(NULL))))) UNION SELECT DISTINCT * FROM rt0, v0, vt0, vt1 WHERE ((((('y5Ck}')-(NULL))) ISNULL));
SELECT DISTINCT * FROM rt0, v0, vt0, vt1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ('0.43953018972321045') GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ('0.43953018972321045'))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((('0.43953018972321045') ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((((((COUNT(v0.c0))OR(TOTAL(0.9625480114659896))))OR(AVG(TOTAL(v0.c0)))))AND((((v0.c0))=((v0.c0))))))OR(COUNT(SUM(v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((((((((COUNT(v0.c0))OR(TOTAL(0.9625480114659896))))OR(AVG(TOTAL(v0.c0)))))AND((((v0.c0))=((v0.c0))))))OR(COUNT(SUM(v0.c0)))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((((((((COUNT(v0.c0))OR(TOTAL(0.9625480114659896))))OR(AVG(TOTAL(v0.c0)))))AND((((v0.c0))=((v0.c0))))))OR(COUNT(SUM(v0.c0))))) ISNULL);
SELECT ALL rt0.c2 FROM rt0;
SELECT rt0.c2 FROM rt0 NOT INDEXED WHERE ((+ (0.49455055253672553))) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT ((+ (0.49455055253672553))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE ((((+ (0.49455055253672553))) ISNULL));
SELECT ALL rt0.c2 FROM rt0;
SELECT DISTINCT * FROM v0, vt0, vt1, rt0;
SELECT DISTINCT * FROM v0, vt0, vt1, rt0 WHERE ((((((((((vt1.c0 IN ()))AND(CAST(rt0.c0 AS NUMERIC))))AND((((vt0.c0))<((vt0.c0))))))AND(v0.c0 COLLATE BINARY)))AND(NULL))) UNION SELECT DISTINCT * FROM v0, vt0, vt1, rt0 WHERE ((NOT ((((((((((vt1.c0 IN ()))AND(CAST(rt0.c0 AS NUMERIC))))AND((((vt0.c0))<((vt0.c0))))))AND(v0.c0 COLLATE BINARY)))AND(NULL))))) UNION SELECT DISTINCT * FROM v0, vt0, vt1, rt0 WHERE ((((((((((((vt1.c0 IN ()))AND(CAST(rt0.c0 AS NUMERIC))))AND((((vt0.c0))<((vt0.c0))))))AND(v0.c0 COLLATE BINARY)))AND(NULL))) ISNULL));
SELECT DISTINCT * FROM v0, vt0, vt1, rt0;
SELECT rt0.c2, v0.c0, rt0.c0 FROM v0 INNER JOIN rt0 ON CAST(rt0.c0 AS INTEGER) COLLATE BINARY GROUP BY rt0.c2, v0.c0, rt0.c0;
SELECT rt0.c2, v0.c0, rt0.c0 FROM v0 INNER JOIN rt0 ON CAST(rt0.c0 AS INTEGER) COLLATE BINARY WHERE (((CAST(rt0.c0 AS REAL))||((- (v0.c0))))) GROUP BY rt0.c2, v0.c0, rt0.c0 UNION SELECT rt0.c2, v0.c0, rt0.c0 FROM v0 INNER JOIN rt0 ON CAST(rt0.c0 AS INTEGER) COLLATE BINARY WHERE ((NOT (((CAST(rt0.c0 AS REAL))||((- (v0.c0))))))) GROUP BY rt0.c2, v0.c0, rt0.c0 UNION SELECT rt0.c2, v0.c0, rt0.c0 FROM v0 INNER JOIN rt0 ON CAST(rt0.c0 AS INTEGER) COLLATE BINARY WHERE (((((CAST(rt0.c0 AS REAL))||((- (v0.c0))))) ISNULL)) GROUP BY rt0.c2, v0.c0, rt0.c0;
SELECT rt0.c2, v0.c0, rt0.c0 FROM v0 INNER JOIN rt0 ON CAST(rt0.c0 AS INTEGER) COLLATE BINARY GROUP BY rt0.c2, v0.c0, rt0.c0;
SELECT rt0.c2, v0.c0, rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1 INNER JOIN v0 ON ((CASE rt0.c2  WHEN vt1.c0 THEN v0.c0 WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END) NOT NULL) GROUP BY rt0.c2, v0.c0, rt0.c0, rt0.c1, vt1.c0;
SELECT ALL rt0.c2, v0.c0, rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1 INNER JOIN v0 ON ((CASE rt0.c2  WHEN vt1.c0 THEN v0.c0 WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END) NOT NULL) GROUP BY rt0.c2, v0.c0, rt0.c0, rt0.c1, vt1.c0 HAVING COUNT(((v0.c0)<>(vt1.c0))) UNION ALL SELECT ALL rt0.c2, v0.c0, rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1 INNER JOIN v0 ON ((CASE rt0.c2  WHEN vt1.c0 THEN v0.c0 WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END) NOT NULL) GROUP BY rt0.c2, v0.c0, rt0.c0, rt0.c1, vt1.c0 HAVING (NOT (COUNT(((v0.c0)!=(vt1.c0))))) UNION ALL SELECT ALL rt0.c2, v0.c0, rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1 INNER JOIN v0 ON ((CASE rt0.c2  WHEN vt1.c0 THEN v0.c0 WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END) NOT NULL) GROUP BY rt0.c2, v0.c0, rt0.c0, rt0.c1, vt1.c0 HAVING ((COUNT(((v0.c0)<>(vt1.c0)))) ISNULL);
SELECT rt0.c2, v0.c0, rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1 INNER JOIN v0 ON ((CASE rt0.c2  WHEN vt1.c0 THEN v0.c0 WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END) NOT NULL) GROUP BY rt0.c2, v0.c0, rt0.c0, rt0.c1, vt1.c0;
SELECT ALL rt0.c2, v0.c0, rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1 INNER JOIN v0 ON ((CASE rt0.c2  WHEN vt1.c0 THEN v0.c0 WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END) NOT NULL) GROUP BY rt0.c2, v0.c0, rt0.c0, rt0.c1, vt1.c0 HAVING COUNT(((v0.c0)<>(vt1.c0))) UNION ALL SELECT ALL rt0.c2, v0.c0, rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1 INNER JOIN v0 ON ((CASE rt0.c2  WHEN vt1.c0 THEN v0.c0 WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END) NOT NULL) GROUP BY rt0.c2, v0.c0, rt0.c0, rt0.c1, vt1.c0 HAVING (NOT (COUNT(((v0.c0)!=(vt1.c0))))) UNION ALL SELECT ALL rt0.c2, v0.c0, rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1 INNER JOIN v0 ON ((CASE rt0.c2  WHEN vt1.c0 THEN v0.c0 WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END) NOT NULL) GROUP BY rt0.c2, v0.c0, rt0.c0, rt0.c1, vt1.c0 HAVING ((COUNT(((v0.c0)<>(vt1.c0)))) ISNULL);
SELECT rt0.c2, v0.c0, rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1 INNER JOIN v0 ON ((CASE rt0.c2  WHEN vt1.c0 THEN v0.c0 WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END) NOT NULL) GROUP BY rt0.c2, v0.c0, rt0.c0, rt0.c1, vt1.c0;
SELECT ALL * FROM v0, vt1;
SELECT * FROM v0, vt1 WHERE ((((((((((vt1.c0 IN ()))OR(((((((((((((v0.c0)AND(v0.c0)))AND(NULL)))OR(vt1.c0)))OR(v0.c0)))AND(v0.c0)))AND(vt1.c0)))))OR(CAST(v0.c0 AS BLOB))))AND(CAST(v0.c0 AS REAL))))AND(((v0.c0)%(vt1.c0))))) UNION ALL SELECT ALL * FROM v0, vt1 WHERE ((NOT ((((((((((vt1.c0 IN ()))OR(((((((((((((v0.c0)AND(v0.c0)))AND(NULL)))OR(vt1.c0)))OR(v0.c0)))AND(v0.c0)))AND(vt1.c0)))))OR(CAST(v0.c0 AS BLOB))))AND(CAST(v0.c0 AS REAL))))AND(((v0.c0)%(vt1.c0))))))) UNION ALL SELECT * FROM v0, vt1 WHERE ((((((((((((vt1.c0 IN ()))OR(((((((((((((v0.c0)AND(v0.c0)))AND(NULL)))OR(vt1.c0)))OR(v0.c0)))AND(v0.c0)))AND(vt1.c0)))))OR(CAST(v0.c0 AS BLOB))))AND(CAST(v0.c0 AS REAL))))AND(((v0.c0)%(vt1.c0))))) ISNULL));
SELECT ALL * FROM v0, vt1;
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE ((((vt0.c0 IN (v0.c0))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (CASE WHEN vt0.c0 THEN vt0.c0 END))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT ((((vt0.c0 IN (v0.c0))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (CASE WHEN vt0.c0 THEN vt0.c0 END))))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((((((vt0.c0 IN (v0.c0))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (CASE WHEN vt0.c0 THEN vt0.c0 END))) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 WHERE (CAST(v0.c0 AS NUMERIC)) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 WHERE ((NOT (CAST(v0.c0 AS NUMERIC)))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 WHERE (((CAST(v0.c0 AS NUMERIC)) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING GROUP_CONCAT(UNLIKELY(DISTINCT v0.c0)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (GROUP_CONCAT(UNLIKELY(DISTINCT v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((GROUP_CONCAT(UNLIKELY(DISTINCT v0.c0))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING GROUP_CONCAT(UNLIKELY(DISTINCT v0.c0)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (GROUP_CONCAT(UNLIKELY(DISTINCT v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((GROUP_CONCAT(UNLIKELY(DISTINCT v0.c0))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (CASE WHEN (~ (vt1.c0)) THEN (((vt1.c0))>((vt0.c0))) END) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT (CASE WHEN (~ (vt1.c0)) THEN (((vt1.c0))>((vt0.c0))) END))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((CASE WHEN (~ (vt1.c0)) THEN (((vt1.c0))>((vt0.c0))) END) ISNULL));
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM vt1 LEFT OUTER JOIN v0 ON x'ea1f' FULL OUTER JOIN rt0 ON ((((CASE vt1.c0  WHEN rt0.c1 THEN rt0.c1 END)AND(rt0.c0)))OR(CAST(v0.c0 AS TEXT)));
SELECT DISTINCT rt0.c1, rt0.c2 FROM vt1 LEFT OUTER JOIN v0 ON x'ea1f' FULL OUTER JOIN rt0 ON ((((CASE vt1.c0  WHEN rt0.c1 THEN rt0.c1 END)AND(rt0.c0)))OR(CAST(v0.c0 AS TEXT))) WHERE (CAST(rt0.c0 COLLATE NOCASE AS INTEGER)) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM vt1 LEFT OUTER JOIN v0 ON x'ea1f' FULL OUTER JOIN rt0 ON ((((CASE vt1.c0  WHEN rt0.c1 THEN rt0.c1 END)AND(rt0.c0)))OR(CAST(v0.c0 AS TEXT))) WHERE ((NOT (CAST(rt0.c0 COLLATE NOCASE AS INTEGER)))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM vt1 LEFT OUTER JOIN v0 ON x'ea1f' FULL OUTER JOIN rt0 ON ((((CASE vt1.c0  WHEN rt0.c1 THEN rt0.c1 END)AND(rt0.c0)))OR(CAST(v0.c0 AS TEXT))) WHERE (((CAST(rt0.c0 COLLATE NOCASE AS INTEGER)) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2 FROM vt1 LEFT OUTER JOIN v0 ON x'ea1f' FULL OUTER JOIN rt0 ON ((((CASE vt1.c0  WHEN rt0.c1 THEN rt0.c1 END)AND(rt0.c0)))OR(CAST(v0.c0 AS TEXT)));
SELECT ALL v0.c0, vt1.c0 FROM v0 NATURAL JOIN vt1 GROUP BY v0.c0, vt1.c0;
SELECT ALL v0.c0, vt1.c0 FROM v0 NATURAL JOIN vt1 WHERE (((((((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (v0.c0)))AND(((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(vt1.c0)))OR(vt1.c0)))))AND((~ (vt1.c0)))))AND(vt1.c0)))OR(CASE v0.c0  WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 END))) GROUP BY v0.c0, vt1.c0 UNION SELECT ALL v0.c0, vt1.c0 FROM v0 NATURAL JOIN vt1 WHERE ((NOT (((((((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (v0.c0)))AND(((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(vt1.c0)))OR(vt1.c0)))))AND((~ (vt1.c0)))))AND(vt1.c0)))OR(CASE v0.c0  WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 END))))) GROUP BY v0.c0, vt1.c0 UNION SELECT ALL v0.c0, vt1.c0 FROM v0 NATURAL JOIN vt1 WHERE (((((((((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (v0.c0)))AND(((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(vt1.c0)))OR(vt1.c0)))))AND((~ (vt1.c0)))))AND(vt1.c0)))OR(CASE v0.c0  WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 END))) ISNULL)) GROUP BY v0.c0, vt1.c0;
SELECT ALL v0.c0, vt1.c0 FROM v0 NATURAL JOIN vt1 GROUP BY v0.c0, vt1.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((MAX(MIN(vt0.c0)))/('jj'))) BETWEEN ((((COUNT(*))) BETWEEN ((MAX(TOTAL(vt0.c0)))) AND ((vt0.c0)))) AND (((((COUNT(*))AND(TOTAL(GROUP_CONCAT(1976273452)))))AND(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((((MAX(MIN(vt0.c0)))/('jj'))) BETWEEN ((((COUNT(*))) BETWEEN ((MAX(TOTAL(vt0.c0)))) AND ((vt0.c0)))) AND (((((COUNT(*))AND(TOTAL(GROUP_CONCAT(1976273452)))))AND(vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((MAX(MIN(vt0.c0)))/('jj'))) BETWEEN ((((COUNT(*))) BETWEEN ((MAX(TOTAL(vt0.c0)))) AND ((vt0.c0)))) AND (((((COUNT(*))AND(TOTAL(GROUP_CONCAT(1976273452)))))AND(vt0.c0))))) ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((LIKE(rt0.c0, rt0.c1)) BETWEEN (0.20176602918734887) AND ((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((LIKE(rt0.c0, rt0.c1)) BETWEEN (0.20176602918734887) AND ((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((LIKE(rt0.c0, rt0.c1)) BETWEEN (0.20176602918734887) AND ((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))))) ISNULL));
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE (CAST((((rt0.c2))=((rt0.c0))) AS BLOB)) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT (CAST((((rt0.c2))=((rt0.c0))) AS BLOB)))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE (((CAST((((rt0.c2))=((rt0.c0))) AS BLOB)) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT ALL rt0.c2 FROM rt0 NOT INDEXED GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE (((rt0.c0)LIKE(rt0.c1 COLLATE RTRIM))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (((rt0.c0)LIKE(rt0.c1 COLLATE RTRIM))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE (((((rt0.c0)LIKE(rt0.c1 COLLATE RTRIM))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 NOT INDEXED GROUP BY rt0.c2;
SELECT ALL vt1.c0 FROM v0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM v0, vt1 GROUP BY vt1.c0 HAVING (((GROUP_CONCAT(v0.c0))) NOT BETWEEN (((NOT (MIN(vt1.c0))))) AND ((GROUP_CONCAT(SUM(vt1.c0))))) UNION ALL SELECT vt1.c0 FROM v0, vt1 GROUP BY vt1.c0 HAVING (NOT ((((GROUP_CONCAT(v0.c0))) NOT BETWEEN (((NOT (MIN(vt1.c0))))) AND ((GROUP_CONCAT(SUM(vt1.c0))))))) UNION ALL SELECT ALL vt1.c0 FROM v0, vt1 GROUP BY vt1.c0 HAVING (((((GROUP_CONCAT(v0.c0))) NOT BETWEEN (((NOT (MIN(vt1.c0))))) AND ((GROUP_CONCAT(SUM(vt1.c0)))))) ISNULL);
SELECT ALL rt0.c1, vt1.c0, rt0.c0, rt0.c2 FROM rt0, vt0, v0, vt1;
SELECT ALL rt0.c1, vt1.c0, rt0.c0, rt0.c2 FROM rt0, vt0, v0, vt1 WHERE (((((((rt0.c0)AND(rt0.c0)))AND((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((v0.c0))))))AND('?PpDKnI䇑'))) UNION ALL SELECT rt0.c1, vt1.c0, rt0.c0, rt0.c2 FROM rt0, vt0, v0, vt1 WHERE ((NOT (((((((rt0.c0)AND(rt0.c0)))AND((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((v0.c0))))))AND('?PpDKnI䇑'))))) UNION ALL SELECT rt0.c1, vt1.c0, rt0.c0, rt0.c2 FROM rt0, vt0, v0, vt1 WHERE (((((((((rt0.c0)AND(rt0.c0)))AND((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((v0.c0))))))AND('?PpDKnI䇑'))) ISNULL));
SELECT ALL rt0.c1, vt1.c0, rt0.c0, rt0.c2 FROM rt0, vt0, v0, vt1;
SELECT DISTINCT rt0.c0 FROM vt1, rt0, v0, vt0;
SELECT DISTINCT rt0.c0 FROM vt1, rt0, v0, vt0 WHERE ((((((rt0.c0))>=((rt0.c2)))) ISNULL)) UNION SELECT DISTINCT rt0.c0 FROM vt1, rt0, v0, vt0 WHERE ((NOT ((((((rt0.c0))>=((rt0.c2)))) ISNULL)))) UNION SELECT DISTINCT rt0.c0 FROM vt1, rt0, v0, vt0 WHERE ((((((((rt0.c0))>=((rt0.c2)))) ISNULL)) ISNULL));
SELECT DISTINCT rt0.c0 FROM vt1, rt0, v0, vt0;
SELECT ALL vt1.c0, rt0.c0, rt0.c2, v0.c0, vt0.c0, rt0.c1 FROM v0, vt0, vt1, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c2, v0.c0, vt0.c0, rt0.c1;
SELECT ALL vt1.c0, rt0.c0, rt0.c2, v0.c0, vt0.c0, rt0.c1 FROM v0, vt0, vt1, rt0 WHERE ((((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c0)) IN (rt0.c0, TYPEOF(DISTINCT rt0.c1)))) GROUP BY vt1.c0, rt0.c0, rt0.c2, v0.c0, vt0.c0, rt0.c1 UNION SELECT ALL vt1.c0, rt0.c0, rt0.c2, v0.c0, vt0.c0, rt0.c1 FROM v0, vt0, vt1, rt0 WHERE ((NOT ((((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c0)) IN (rt0.c0, TYPEOF(DISTINCT rt0.c1)))))) GROUP BY vt1.c0, rt0.c0, rt0.c2, v0.c0, vt0.c0, rt0.c1 UNION SELECT ALL vt1.c0, rt0.c0, rt0.c2, v0.c0, vt0.c0, rt0.c1 FROM v0, vt0, vt1, rt0 WHERE ((((((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c0)) IN (rt0.c0, TYPEOF(DISTINCT rt0.c1)))) ISNULL)) GROUP BY vt1.c0, rt0.c0, rt0.c2, v0.c0, vt0.c0, rt0.c1;
SELECT ALL vt1.c0, rt0.c0, rt0.c2, v0.c0, vt0.c0, rt0.c1 FROM v0, vt0, vt1, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c2, v0.c0, vt0.c0, rt0.c1;
SELECT vt1.c0, rt0.c2, rt0.c0, v0.c0 FROM rt0, vt0, vt1, v0 GROUP BY vt1.c0, rt0.c2, rt0.c0, v0.c0;
SELECT ALL vt1.c0, rt0.c2, rt0.c0, v0.c0 FROM rt0, vt0, vt1, v0 GROUP BY vt1.c0, rt0.c2, rt0.c0, v0.c0 HAVING ((((MAX(SUM(rt0.c2)))>(TOTAL(GROUP_CONCAT(GROUP_CONCAT(rt0.c1))))))<(MIN(vt1.c0))) UNION ALL SELECT ALL vt1.c0, rt0.c2, rt0.c0, v0.c0 FROM rt0, vt0, vt1, v0 GROUP BY vt1.c0, rt0.c2, rt0.c0, v0.c0 HAVING (NOT (((((MAX(SUM(rt0.c2)))>(TOTAL(GROUP_CONCAT(GROUP_CONCAT(rt0.c1))))))<(MIN(vt1.c0))))) UNION ALL SELECT vt1.c0, rt0.c2, rt0.c0, v0.c0 FROM rt0, vt0, vt1, v0 GROUP BY vt1.c0, rt0.c2, rt0.c0, v0.c0 HAVING ((((((MAX(SUM(rt0.c2)))>(TOTAL(GROUP_CONCAT(GROUP_CONCAT(rt0.c1))))))<(MIN(vt1.c0)))) ISNULL);
SELECT * FROM rt0, vt0, vt1;
SELECT ALL * FROM rt0, vt0, vt1 WHERE (NULL) UNION ALL SELECT ALL * FROM rt0, vt0, vt1 WHERE ((NOT (NULL))) UNION ALL SELECT * FROM rt0, vt0, vt1 WHERE (((NULL) ISNULL));
SELECT * FROM rt0, vt0, vt1;
SELECT DISTINCT rt0.c1, vt0.c0, v0.c0, rt0.c2, rt0.c0, vt1.c0 FROM rt0, vt0, v0, vt1;
SELECT DISTINCT rt0.c1, vt0.c0, v0.c0, rt0.c2, rt0.c0, vt1.c0 FROM rt0, vt0, v0, vt1 WHERE (((((rt0.c0)>(rt0.c1))) IS FALSE)) UNION SELECT DISTINCT rt0.c1, vt0.c0, v0.c0, rt0.c2, rt0.c0, vt1.c0 FROM rt0, vt0, v0, vt1 WHERE ((NOT (((((rt0.c0)>(rt0.c1))) IS FALSE)))) UNION SELECT DISTINCT rt0.c1, vt0.c0, v0.c0, rt0.c2, rt0.c0, vt1.c0 FROM rt0, vt0, v0, vt1 WHERE (((((((rt0.c0)>(rt0.c1))) IS FALSE)) ISNULL));
SELECT DISTINCT rt0.c1, vt0.c0, v0.c0, rt0.c2, rt0.c0, vt1.c0 FROM rt0, vt0, v0, vt1;
SELECT rt0.c2, rt0.c0, v0.c0, rt0.c1, vt0.c0 FROM rt0, vt1 INNER JOIN vt0 ON ((((v0.c0)>=(rt0.c1))) BETWEEN ((+ (rt0.c0))) AND (((vt1.c0)>(rt0.c0)))) FULL OUTER JOIN v0 ON 'b' GROUP BY rt0.c2, rt0.c0, v0.c0, rt0.c1, vt0.c0;
SELECT ALL v0.c0 FROM v0, rt0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, rt0 GROUP BY v0.c0 HAVING GROUP_CONCAT(MIN(MIN(v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0, rt0 GROUP BY v0.c0 HAVING (NOT (GROUP_CONCAT(MIN(MIN(v0.c0))))) UNION ALL SELECT v0.c0 FROM v0, rt0 GROUP BY v0.c0 HAVING ((GROUP_CONCAT(MIN(MIN(v0.c0)))) ISNULL);
SELECT ALL * FROM vt0, v0, rt0;
SELECT * FROM vt0, v0, rt0 WHERE (CASE vt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE 0.9505867022468147 END COLLATE BINARY) UNION ALL SELECT ALL * FROM vt0, v0, rt0 WHERE ((NOT (CASE vt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE 0.9505867022468147 END COLLATE BINARY))) UNION ALL SELECT ALL * FROM vt0, v0, rt0 WHERE (((CASE vt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE 0.9505867022468147 END COLLATE BINARY) ISNULL));
SELECT ALL * FROM vt0, v0, rt0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((('埿Y{')AND(rt0.c2)) IN ())) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT (((('埿Y{')AND(rt0.c2)) IN ())))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((((('埿Y{')AND(rt0.c2)) IN ())) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, v0.c0 FROM v0 FULL OUTER JOIN vt1 ON ((((rt0.c0)>=(0.866081800548703))) IS TRUE) INNER JOIN rt0 ON ((((((((vt1.c0)OR(((rt0.c0) NOT BETWEEN (rt0.c1) AND (NULL)))))AND((rt0.c1 IN ()))))OR(((rt0.c2)<(rt0.c0)))))OR(((vt1.c0)IS NOT(rt0.c0)))) GROUP BY rt0.c1, rt0.c0, rt0.c2, v0.c0;
SELECT ALL vt0.c0 FROM rt0, v0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM rt0, v0, vt0 GROUP BY vt0.c0 HAVING TOTAL(MIN(TOTAL(rt0.c1))) UNION ALL SELECT ALL vt0.c0 FROM rt0, v0, vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(MIN(TOTAL(rt0.c1))))) UNION ALL SELECT vt0.c0 FROM rt0, v0, vt0 GROUP BY vt0.c0 HAVING ((TOTAL(MIN(TOTAL(rt0.c1)))) ISNULL);
SELECT rt0.c2, vt1.c0, rt0.c0, vt0.c0 FROM rt0, vt0, v0 INNER JOIN vt1 ON '_F2el[';
SELECT ALL rt0.c2, vt1.c0, rt0.c0, vt0.c0 FROM rt0, vt0, v0 INNER JOIN vt1 ON '_F2el[' WHERE (((v0.c0 COLLATE NOCASE) NOT BETWEEN (CAST('''JmeT	)?g' AS NUMERIC)) AND ('쮽''' COLLATE NOCASE))) UNION ALL SELECT rt0.c2, vt1.c0, rt0.c0, vt0.c0 FROM rt0, vt0, v0 INNER JOIN vt1 ON '_F2el[' WHERE ((NOT (((v0.c0 COLLATE NOCASE) NOT BETWEEN (CAST('''JmeT	)?g' AS NUMERIC)) AND ('쮽''' COLLATE NOCASE))))) UNION ALL SELECT ALL rt0.c2, vt1.c0, rt0.c0, vt0.c0 FROM rt0, vt0, v0 INNER JOIN vt1 ON '_F2el[' WHERE (((((v0.c0 COLLATE NOCASE) NOT BETWEEN (CAST('''JmeT	)?g' AS NUMERIC)) AND ('쮽''' COLLATE NOCASE))) ISNULL));
SELECT rt0.c2, vt1.c0, rt0.c0, vt0.c0 FROM rt0, vt0, v0 INNER JOIN vt1 ON '_F2el[';
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0, v0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0, v0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN v0.c0 THEN rt0.c1 END) IS FALSE)) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0, v0 WHERE ((NOT (((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN v0.c0 THEN rt0.c1 END) IS FALSE)))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0, v0 WHERE (((((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN v0.c0 THEN rt0.c1 END) IS FALSE)) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0, v0;
SELECT rt0.c2 FROM rt0, vt1, vt0, v0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, vt1, vt0, v0 WHERE (CHAR((~ (vt1.c0)))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0, vt1, vt0, v0 WHERE ((NOT (CHAR((~ (vt1.c0)))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0, vt1, vt0, v0 WHERE (((CHAR((~ (vt1.c0)))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, vt1, vt0, v0 GROUP BY rt0.c2;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(vt0.c0)) BETWEEN (SUM(MIN(vt0.c0))) AND (MAX(TOTAL(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((MAX(vt0.c0)) BETWEEN (SUM(MIN(vt0.c0))) AND (MAX(TOTAL(vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((MAX(vt0.c0)) BETWEEN (SUM(MIN(vt0.c0))) AND (MAX(TOTAL(vt0.c0))))) ISNULL);
SELECT v0.c0, vt1.c0 FROM vt1, v0;
SELECT ALL v0.c0, vt1.c0 FROM vt1, v0 WHERE (v0.c0) UNION ALL SELECT ALL v0.c0, vt1.c0 FROM vt1, v0 WHERE ((NOT (v0.c0))) UNION ALL SELECT ALL v0.c0, vt1.c0 FROM vt1, v0 WHERE (((v0.c0) ISNULL));
SELECT v0.c0, vt1.c0 FROM vt1, v0;
SELECT DISTINCT v0.c0 FROM v0, rt0, vt0;
SELECT DISTINCT v0.c0 FROM v0, rt0, vt0 WHERE (((ABS(DISTINCT rt0.c2))AND(CASE vt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END))) UNION SELECT DISTINCT v0.c0 FROM v0, rt0, vt0 WHERE ((NOT (((ABS(DISTINCT rt0.c2))AND(CASE vt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END))))) UNION SELECT DISTINCT v0.c0 FROM v0, rt0, vt0 WHERE (((((ABS(DISTINCT rt0.c2))AND(CASE vt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0, rt0, vt0;
SELECT ALL rt0.c2, rt0.c1, vt1.c0, rt0.c0 FROM vt1 FULL OUTER JOIN rt0 ON CAST((((vt1.c0, rt0.c2, rt0.c2, rt0.c0, rt0.c2)) BETWEEN ((rt0.c1, rt0.c1, rt0.c0, vt1.c0, rt0.c2)) AND ((vt1.c0, rt0.c1, vt1.c0, rt0.c1, vt1.c0))) AS NUMERIC) GROUP BY rt0.c2, rt0.c1, vt1.c0, rt0.c0;
SELECT rt0.c2, rt0.c1, vt1.c0, rt0.c0 FROM vt1 FULL OUTER JOIN rt0 ON CAST((((vt1.c0, rt0.c2, rt0.c2, rt0.c0, rt0.c2)) BETWEEN ((rt0.c1, rt0.c1, rt0.c0, vt1.c0, rt0.c2)) AND ((vt1.c0, rt0.c1, vt1.c0, rt0.c1, vt1.c0))) AS NUMERIC) WHERE (((rt0.c0 COLLATE BINARY)==(((((((((vt1.c0)OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))AND(vt1.c0))))) GROUP BY rt0.c2, rt0.c1, vt1.c0, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, vt1.c0, rt0.c0 FROM vt1 FULL OUTER JOIN rt0 ON CAST((((vt1.c0, rt0.c2, rt0.c2, rt0.c0, rt0.c2)) BETWEEN ((rt0.c1, rt0.c1, rt0.c0, vt1.c0, rt0.c2)) AND ((vt1.c0, rt0.c1, vt1.c0, rt0.c1, vt1.c0))) AS NUMERIC) WHERE ((NOT (((rt0.c0 COLLATE BINARY)=(((((((((vt1.c0)OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))AND(vt1.c0))))))) GROUP BY rt0.c2, rt0.c1, vt1.c0, rt0.c0 UNION SELECT rt0.c2, rt0.c1, vt1.c0, rt0.c0 FROM vt1 FULL OUTER JOIN rt0 ON CAST((((vt1.c0, rt0.c2, rt0.c2, rt0.c0, rt0.c2)) BETWEEN ((rt0.c1, rt0.c1, rt0.c0, vt1.c0, rt0.c2)) AND ((vt1.c0, rt0.c1, vt1.c0, rt0.c1, vt1.c0))) AS NUMERIC) WHERE (((((rt0.c0 COLLATE BINARY)==(((((((((vt1.c0)OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))AND(vt1.c0))))) ISNULL)) GROUP BY rt0.c2, rt0.c1, vt1.c0, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, vt1.c0, rt0.c0 FROM vt1 FULL OUTER JOIN rt0 ON CAST((((vt1.c0, rt0.c2, rt0.c2, rt0.c0, rt0.c2)) BETWEEN ((rt0.c1, rt0.c1, rt0.c0, vt1.c0, rt0.c2)) AND ((vt1.c0, rt0.c1, vt1.c0, rt0.c1, vt1.c0))) AS NUMERIC) GROUP BY rt0.c2, rt0.c1, vt1.c0, rt0.c0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING MAX(CAST(rt0.c2 AS TEXT)) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (MAX(CAST(rt0.c2 AS TEXT)))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((MAX(CAST(rt0.c2 AS TEXT))) ISNULL);
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING MAX(CAST(rt0.c2 AS TEXT)) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (MAX(CAST(rt0.c2 AS TEXT)))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((MAX(CAST(rt0.c2 AS TEXT))) ISNULL);
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (vt0.c0) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt0;
SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt0 WHERE (CASE WHEN CAST(v0.c0 AS INTEGER) THEN (NOT (v0.c0)) ELSE (((vt0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, vt0.c0, 1021810791))) END) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt0 WHERE ((NOT (CASE WHEN CAST(v0.c0 AS INTEGER) THEN (NOT (v0.c0)) ELSE (((vt0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, vt0.c0, 1021810791))) END))) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt0 WHERE (((CASE WHEN CAST(v0.c0 AS INTEGER) THEN (NOT (v0.c0)) ELSE (((vt0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, vt0.c0, 1021810791))) END) ISNULL));
SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((((vt1.c0) IS FALSE) IN ())) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0) IS FALSE) IN ())))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((((vt1.c0) IS FALSE) IN ())) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(((v0.c0)-(SUM(TOTAL(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(((v0.c0)-(SUM(TOTAL(v0.c0))))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(((v0.c0)-(SUM(TOTAL(v0.c0)))))) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM vt0 CROSS JOIN rt0 ON NULLIF(((rt0.c0)&(rt0.c2)), ((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)));
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM vt0 CROSS JOIN rt0 ON NULLIF(((rt0.c0)&(rt0.c2)), ((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c0))) WHERE (NULL) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM vt0 CROSS JOIN rt0 ON NULLIF(((rt0.c0)&(rt0.c2)), ((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c0))) WHERE ((NOT (NULL))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM vt0 CROSS JOIN rt0 ON NULLIF(((rt0.c0)&(rt0.c2)), ((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c0))) WHERE (((NULL) ISNULL));
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM vt0 CROSS JOIN rt0 ON NULLIF(((rt0.c0)&(rt0.c2)), ((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((x'd927' COLLATE BINARY)) AND (((('1021810791')AND(vt0.c0)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN ((x'd927' COLLATE BINARY)) AND (((('1021810791')AND(vt0.c0)))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((x'd927' COLLATE BINARY)) AND (((('1021810791')AND(vt0.c0)))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT v0.c0 FROM vt0, rt0, v0, vt1 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0, rt0, v0, vt1 WHERE (CASE rt0.c1  WHEN vt1.c0 THEN rt0.c2 END COLLATE BINARY) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt0, rt0, v0, vt1 WHERE ((NOT (CASE rt0.c1  WHEN vt1.c0 THEN rt0.c2 END COLLATE BINARY))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt0, rt0, v0, vt1 WHERE (((CASE rt0.c1  WHEN vt1.c0 THEN rt0.c2 END COLLATE BINARY) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, rt0, v0, vt1 GROUP BY v0.c0;
SELECT ALL rt0.c2 FROM rt0, vt1 INNER JOIN v0 ON (NOT (vt1.c0)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, vt1 INNER JOIN v0 ON (NOT (vt1.c0)) GROUP BY rt0.c2 HAVING COUNT(*) UNION ALL SELECT rt0.c2 FROM rt0, vt1 INNER JOIN v0 ON (NOT (vt1.c0)) GROUP BY rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c2 FROM rt0, vt1 INNER JOIN v0 ON (NOT (vt1.c0)) GROUP BY rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c2 FROM rt0, vt1 INNER JOIN v0 ON (NOT (vt1.c0)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, vt1 INNER JOIN v0 ON (NOT (vt1.c0)) GROUP BY rt0.c2 HAVING COUNT(*) UNION ALL SELECT rt0.c2 FROM rt0, vt1 INNER JOIN v0 ON (NOT (vt1.c0)) GROUP BY rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c2 FROM rt0, vt1 INNER JOIN v0 ON (NOT (vt1.c0)) GROUP BY rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c2 FROM rt0, vt1 INNER JOIN v0 ON (NOT (vt1.c0)) GROUP BY rt0.c2;
SELECT ALL TOTAL((NOT (CAST(rt0.c2 AS NUMERIC)))) FROM vt1, rt0, v0, vt0 ORDER BY CASE WHEN (+ (NULL)) THEN ((vt1.c0) BETWEEN (rt0.c2) AND (vt1.c0)) ELSE (((rt0.c2)) NOT BETWEEN ((0.0689023999907562)) AND ((rt0.c1))) END ASC  NULLS FIRST;
SELECT v0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0 INNER JOIN v0 ON (('MF') IS FALSE);
SELECT ALL v0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0 INNER JOIN v0 ON (('MF') IS FALSE) WHERE ((- ((((v0.c0, rt0.c2, rt0.c2))<>((v0.c0, -935952694, v0.c0)))))) UNION ALL SELECT v0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0 INNER JOIN v0 ON (('MF') IS FALSE) WHERE ((NOT ((- ((((v0.c0, rt0.c2, rt0.c2))!=((v0.c0, -935952694, v0.c0)))))))) UNION ALL SELECT v0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0 INNER JOIN v0 ON (('MF') IS FALSE) WHERE ((((- ((((v0.c0, rt0.c2, rt0.c2))<>((v0.c0, -935952694, v0.c0)))))) ISNULL));
SELECT v0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0 INNER JOIN v0 ON (('MF') IS FALSE);
SELECT DISTINCT rt0.c1 FROM rt0 CROSS JOIN vt1 ON CASE WHEN ((0.4100055478358411) NOT BETWEEN (rt0.c2) AND (vt0.c0)) THEN ((rt0.c2)<>(rt0.c1)) END LEFT OUTER JOIN vt0 ON (((+ (rt0.c0)))=(((((vt1.c0)OR(vt1.c0)))OR(rt0.c2))));
SELECT DISTINCT rt0.c1 FROM rt0 CROSS JOIN vt1 ON CASE WHEN ((0.4100055478358411) NOT BETWEEN (rt0.c2) AND (vt0.c0)) THEN ((rt0.c2)!=(rt0.c1)) END LEFT OUTER JOIN vt0 ON (((+ (rt0.c0)))=(((((vt1.c0)OR(vt1.c0)))OR(rt0.c2)))) WHERE ((((((rt0.c1))<((vt0.c0)))) NOT BETWEEN ((- (rt0.c1))) AND ('_F2EL['))) UNION SELECT DISTINCT rt0.c1 FROM rt0 CROSS JOIN vt1 ON CASE WHEN ((0.4100055478358411) NOT BETWEEN (rt0.c2) AND (vt0.c0)) THEN ((rt0.c2)!=(rt0.c1)) END LEFT OUTER JOIN vt0 ON (((+ (rt0.c0)))==(((((vt1.c0)OR(vt1.c0)))OR(rt0.c2)))) WHERE ((NOT ((((((rt0.c1))<((vt0.c0)))) NOT BETWEEN ((- (rt0.c1))) AND ('_F2EL['))))) UNION SELECT DISTINCT rt0.c1 FROM rt0 CROSS JOIN vt1 ON CASE WHEN ((0.4100055478358411) NOT BETWEEN (rt0.c2) AND (vt0.c0)) THEN ((rt0.c2)<>(rt0.c1)) END LEFT OUTER JOIN vt0 ON (((+ (rt0.c0)))==(((((vt1.c0)OR(vt1.c0)))OR(rt0.c2)))) WHERE ((((((((rt0.c1))<((vt0.c0)))) NOT BETWEEN ((- (rt0.c1))) AND ('_F2EL['))) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0 CROSS JOIN vt1 ON CASE WHEN ((0.4100055478358411) NOT BETWEEN (rt0.c2) AND (vt0.c0)) THEN ((rt0.c2)<>(rt0.c1)) END LEFT OUTER JOIN vt0 ON (((+ (rt0.c0)))=(((((vt1.c0)OR(vt1.c0)))OR(rt0.c2))));
SELECT ALL rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM vt0, rt0 WHERE ((((((vt0.c0 IN ()))AND(((((rt0.c1)AND(rt0.c0)))OR(vt0.c0)))))AND(rt0.c0 COLLATE RTRIM))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM vt0, rt0 WHERE ((NOT ((((((vt0.c0 IN ()))AND(((((rt0.c1)AND(rt0.c0)))OR(vt0.c0)))))AND(rt0.c0 COLLATE RTRIM))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM vt0, rt0 WHERE ((((((((vt0.c0 IN ()))AND(((((rt0.c1)AND(rt0.c0)))OR(vt0.c0)))))AND(rt0.c0 COLLATE RTRIM))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2;
SELECT ALL vt0.c0, rt0.c0, rt0.c1, rt0.c2, vt1.c0 FROM vt1, vt0, rt0 GROUP BY vt0.c0, rt0.c0, rt0.c1, rt0.c2, vt1.c0;
SELECT vt0.c0, rt0.c0, rt0.c1, rt0.c2, vt1.c0 FROM vt1, vt0, rt0 GROUP BY vt0.c0, rt0.c0, rt0.c1, rt0.c2, vt1.c0 HAVING ((((((((((((COUNT(*))AND(0.06630865030631672)))OR(GROUP_CONCAT(AVG(SUM(GROUP_CONCAT(MAX(vt1.c0))))))))AND(((rt0.c2)OR(rt0.c1)))))AND(CASE WHEN NULL THEN SUM(GROUP_CONCAT(MIN(MAX(vt0.c0)))) WHEN COUNT(*) THEN GROUP_CONCAT(COUNT(*)) WHEN GROUP_CONCAT(GROUP_CONCAT(SUM(vt0.c0))) THEN GROUP_CONCAT(COUNT(*)) WHEN AVG(COUNT(rt0.c1)) THEN SUM(rt0.c0) WHEN COUNT(*) THEN vt0.c0 ELSE vt1.c0 END)))OR(((COUNT(*))!=(NULL)))))OR(CAST(vt1.c0 AS INTEGER))) UNION ALL SELECT ALL vt0.c0, rt0.c0, rt0.c1, rt0.c2, vt1.c0 FROM vt1, vt0, rt0 GROUP BY vt0.c0, rt0.c0, rt0.c1, rt0.c2, vt1.c0 HAVING (NOT (((((((((((((COUNT(*))AND(0.06630865030631672)))OR(GROUP_CONCAT(AVG(SUM(GROUP_CONCAT(MAX(vt1.c0))))))))AND(((rt0.c2)OR(rt0.c1)))))AND(CASE WHEN NULL THEN SUM(GROUP_CONCAT(MIN(MAX(vt0.c0)))) WHEN COUNT(*) THEN GROUP_CONCAT(COUNT(*)) WHEN GROUP_CONCAT(GROUP_CONCAT(SUM(vt0.c0))) THEN GROUP_CONCAT(COUNT(*)) WHEN AVG(COUNT(rt0.c1)) THEN SUM(rt0.c0) WHEN COUNT(*) THEN vt0.c0 ELSE vt1.c0 END)))OR(((COUNT(*))!=(NULL)))))OR(CAST(vt1.c0 AS INTEGER))))) UNION ALL SELECT ALL vt0.c0, rt0.c0, rt0.c1, rt0.c2, vt1.c0 FROM vt1, vt0, rt0 GROUP BY vt0.c0, rt0.c0, rt0.c1, rt0.c2, vt1.c0 HAVING ((((((((((((((COUNT(*))AND(0.06630865030631672)))OR(GROUP_CONCAT(AVG(SUM(GROUP_CONCAT(MAX(vt1.c0))))))))AND(((rt0.c2)OR(rt0.c1)))))AND(CASE WHEN NULL THEN SUM(GROUP_CONCAT(MIN(MAX(vt0.c0)))) WHEN COUNT(*) THEN GROUP_CONCAT(COUNT(*)) WHEN GROUP_CONCAT(GROUP_CONCAT(SUM(vt0.c0))) THEN GROUP_CONCAT(COUNT(*)) WHEN AVG(COUNT(rt0.c1)) THEN SUM(rt0.c0) WHEN COUNT(*) THEN vt0.c0 ELSE vt1.c0 END)))OR(((COUNT(*))<>(NULL)))))OR(CAST(vt1.c0 AS INTEGER)))) ISNULL);
SELECT ALL * FROM vt1, v0;
SELECT ALL * FROM vt1, v0 WHERE (((((' BV1sl')AND(CAST(vt1.c0 AS NUMERIC))))OR(vt1.c0 COLLATE BINARY))) UNION ALL SELECT ALL * FROM vt1, v0 WHERE ((NOT (((((' BV1sl')AND(CAST(vt1.c0 AS NUMERIC))))OR(vt1.c0 COLLATE BINARY))))) UNION ALL SELECT * FROM vt1, v0 WHERE (((((((' BV1sl')AND(CAST(vt1.c0 AS NUMERIC))))OR(vt1.c0 COLLATE BINARY))) ISNULL));
SELECT ALL * FROM vt1, v0;
SELECT DISTINCT vt0.c0, rt0.c0 FROM vt0, vt1, rt0, v0;
SELECT DISTINCT vt0.c0, rt0.c0 FROM vt0, vt1, rt0, v0 WHERE ((((vt0.c0)-(v0.c0)) IN ())) UNION SELECT DISTINCT vt0.c0, rt0.c0 FROM vt0, vt1, rt0, v0 WHERE ((NOT ((((vt0.c0)-(v0.c0)) IN ())))) UNION SELECT DISTINCT vt0.c0, rt0.c0 FROM vt0, vt1, rt0, v0 WHERE ((((((vt0.c0)-(v0.c0)) IN ())) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c0 FROM vt0, vt1, rt0, v0;
SELECT rt0.c1, rt0.c0, v0.c0, vt1.c0, rt0.c2 FROM vt1 FULL OUTER JOIN vt0 ON CASE ((vt0.c0)<<(rt0.c0))  WHEN CASE WHEN v0.c0 THEN rt0.c0 ELSE vt0.c0 END THEN (((vt1.c0, vt0.c0, rt0.c2)) NOT BETWEEN ((vt1.c0, rt0.c0, v0.c0)) AND ((rt0.c0, rt0.c2, vt1.c0))) WHEN CAST(rt0.c2 AS TEXT) THEN CASE rt0.c1  WHEN v0.c0 THEN 0.9965453732648932 ELSE rt0.c0 END WHEN (vt0.c0 IN (rt0.c0, rt0.c1)) THEN ((((vt0.c0)AND(rt0.c2)))OR(vt1.c0)) WHEN ((rt0.c0)OR(vt1.c0)) THEN v0.c0 WHEN (- (rt0.c0)) THEN (((vt0.c0)) BETWEEN ((-160458480)) AND ((vt0.c0))) END INNER JOIN rt0 ON ((((v0.c0) ISNULL))<>((- (v0.c0)))) RIGHT OUTER JOIN v0 ON (((v0.c0))>=((v0.c0))) COLLATE BINARY GROUP BY rt0.c1, rt0.c0, v0.c0, vt1.c0, rt0.c2;
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING (- (COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING (NOT ((- (COUNT(*))))) UNION ALL SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING (((- (COUNT(*)))) ISNULL);
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING (- (COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING (NOT ((- (COUNT(*))))) UNION ALL SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING (((- (COUNT(*)))) ISNULL);
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT * FROM v0, vt1, rt0, vt0;
SELECT ALL * FROM v0, vt1, rt0, vt0 WHERE (((((v0.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0))) IS FALSE)) UNION ALL SELECT * FROM v0, vt1, rt0, vt0 WHERE ((NOT (((((v0.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0))) IS FALSE)))) UNION ALL SELECT * FROM v0, vt1, rt0, vt0 WHERE (((((((v0.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0))) IS FALSE)) ISNULL));
SELECT * FROM v0, vt1, rt0, vt0;
SELECT DISTINCT * FROM v0 FULL OUTER JOIN vt1 ON (((((((((rt0.c1 IN ()))AND(CASE WHEN rt0.c1 THEN rt0.c1 END)))AND(NULL)))OR(((vt0.c0) NOT NULL))))OR(((rt0.c1) IS TRUE))) CROSS JOIN vt0 ON ((rt0.c2 IN ()) IN ()) FULL OUTER JOIN rt0 ON (((vt1.c0)<(rt0.c1)) IN ());
SELECT DISTINCT * FROM v0 FULL OUTER JOIN vt1 ON (((((((((rt0.c1 IN ()))AND(CASE WHEN rt0.c1 THEN rt0.c1 END)))AND(NULL)))OR(((vt0.c0) NOT NULL))))OR(((rt0.c1) IS TRUE))) CROSS JOIN vt0 ON ((rt0.c2 IN ()) IN ()) FULL OUTER JOIN rt0 ON (((vt1.c0)<(rt0.c1)) IN ()) WHERE (((((((((CAST(vt1.c0 AS INTEGER))AND(((v0.c0)!=(rt0.c0)))))OR(json_quote(vt1.c0))))AND(((rt0.c1)<=(NULL)))))AND(GLOB(rt0.c0, rt0.c0)))) UNION SELECT DISTINCT * FROM v0 FULL OUTER JOIN vt1 ON (((((((((rt0.c1 IN ()))AND(CASE WHEN rt0.c1 THEN rt0.c1 END)))AND(NULL)))OR(((vt0.c0) NOT NULL))))OR(((rt0.c1) IS TRUE))) CROSS JOIN vt0 ON ((rt0.c2 IN ()) IN ()) FULL OUTER JOIN rt0 ON (((vt1.c0)<(rt0.c1)) IN ()) WHERE ((NOT (((((((((CAST(vt1.c0 AS INTEGER))AND(((v0.c0)!=(rt0.c0)))))OR(json_quote(vt1.c0))))AND(((rt0.c1)<=(NULL)))))AND(GLOB(rt0.c0, rt0.c0)))))) UNION SELECT DISTINCT * FROM v0 FULL OUTER JOIN vt1 ON (((((((((rt0.c1 IN ()))AND(CASE WHEN rt0.c1 THEN rt0.c1 END)))AND(NULL)))OR(((vt0.c0) NOT NULL))))OR(((rt0.c1) IS TRUE))) CROSS JOIN vt0 ON ((rt0.c2 IN ()) IN ()) FULL OUTER JOIN rt0 ON (((vt1.c0)<(rt0.c1)) IN ()) WHERE (((((((((((CAST(vt1.c0 AS INTEGER))AND(((v0.c0)!=(rt0.c0)))))OR(json_quote(vt1.c0))))AND(((rt0.c1)<=(NULL)))))AND(GLOB(rt0.c0, rt0.c0)))) ISNULL));
SELECT DISTINCT * FROM v0 FULL OUTER JOIN vt1 ON (((((((((rt0.c1 IN ()))AND(CASE WHEN rt0.c1 THEN rt0.c1 END)))AND(NULL)))OR(((vt0.c0) NOT NULL))))OR(((rt0.c1) IS TRUE))) CROSS JOIN vt0 ON ((rt0.c2 IN ()) IN ()) FULL OUTER JOIN rt0 ON (((vt1.c0)<(rt0.c1)) IN ());
SELECT vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON ((((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))), TYPEOF(vt1.c0), vt0.c0 COLLATE NOCASE))<=((x'', -1.115176716E9, ((vt0.c0) NOT BETWEEN (NULL) AND (vt1.c0))))) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON ((((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))), TYPEOF(vt1.c0), vt0.c0 COLLATE NOCASE))<=((x'', -1.115176716E9, ((vt0.c0) NOT BETWEEN (NULL) AND (vt1.c0))))) WHERE (((CAST(vt0.c0 AS REAL))!=(HEX(vt1.c0)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON ((((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))), TYPEOF(vt1.c0), vt0.c0 COLLATE NOCASE))<=((x'', -1.115176716E9, ((vt0.c0) NOT BETWEEN (NULL) AND (vt1.c0))))) WHERE ((NOT (((CAST(vt0.c0 AS REAL))!=(HEX(vt1.c0)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON ((((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))), TYPEOF(vt1.c0), vt0.c0 COLLATE NOCASE))<=((x'', -1.115176716E9, ((vt0.c0) NOT BETWEEN (NULL) AND (vt1.c0))))) WHERE (((((CAST(vt0.c0 AS REAL))!=(HEX(vt1.c0)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON ((((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))), TYPEOF(vt1.c0), vt0.c0 COLLATE NOCASE))<=((x'', -1.115176716E9, ((vt0.c0) NOT BETWEEN (NULL) AND (vt1.c0))))) GROUP BY vt0.c0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0, vt0, vt1 INNER JOIN v0 ON (vt1.c0 COLLATE BINARY IN ()) GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0, vt0, vt1 INNER JOIN v0 ON (vt1.c0 COLLATE BINARY IN ()) GROUP BY rt0.c0, rt0.c2 HAVING GROUP_CONCAT(((((((((v0.c0)AND(COUNT(*))))AND(SUM(GROUP_CONCAT(GROUP_CONCAT(v0.c0))))))AND(AVG(COUNT(*)))))OR(SUM(AVG(AVG(GROUP_CONCAT(AVG(rt0.c1)))))))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0, vt0, vt1 INNER JOIN v0 ON (vt1.c0 COLLATE BINARY IN ()) GROUP BY rt0.c0, rt0.c2 HAVING (NOT (GROUP_CONCAT(((((((((v0.c0)AND(COUNT(*))))AND(SUM(GROUP_CONCAT(GROUP_CONCAT(v0.c0))))))AND(AVG(COUNT(*)))))OR(SUM(AVG(AVG(GROUP_CONCAT(AVG(rt0.c1)))))))))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0, vt0, vt1 INNER JOIN v0 ON (vt1.c0 COLLATE BINARY IN ()) GROUP BY rt0.c0, rt0.c2 HAVING ((GROUP_CONCAT(((((((((v0.c0)AND(COUNT(*))))AND(SUM(GROUP_CONCAT(GROUP_CONCAT(v0.c0))))))AND(AVG(COUNT(*)))))OR(SUM(AVG(AVG(GROUP_CONCAT(AVG(rt0.c1))))))))) ISNULL);
SELECT * FROM vt0, rt0, vt1;
SELECT * FROM vt0, rt0, vt1 WHERE ((((((+ (rt0.c2)))AND(((vt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)))))OR(((rt0.c2)IS(rt0.c2))))) UNION ALL SELECT ALL * FROM vt0, rt0, vt1 WHERE ((NOT ((((((+ (rt0.c2)))AND(((vt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)))))OR(((rt0.c2)IS(rt0.c2))))))) UNION ALL SELECT ALL * FROM vt0, rt0, vt1 WHERE ((((((((+ (rt0.c2)))AND(((vt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)))))OR(((rt0.c2)IS(rt0.c2))))) ISNULL));
SELECT * FROM vt0, rt0, vt1;
SELECT DISTINCT rt0.c1, rt0.c0, v0.c0, vt0.c0, vt1.c0, rt0.c2 FROM vt0, rt0, v0, vt1;
SELECT DISTINCT rt0.c1, rt0.c0, v0.c0, vt0.c0, vt1.c0, rt0.c2 FROM vt0, rt0, v0, vt1 WHERE ((((((vt0.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)), CASE WHEN vt0.c0 THEN v0.c0 END, ((vt1.c0) NOT NULL)))>((vt1.c0 COLLATE RTRIM, ((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c1)), ((('y튟', rt0.c2, '-935952694', vt1.c0, rt0.c1))<=((vt0.c0, '0.41146297518822916', rt0.c0, v0.c0, vt0.c0))))))) UNION SELECT DISTINCT rt0.c1, rt0.c0, v0.c0, vt0.c0, vt1.c0, rt0.c2 FROM vt0, rt0, v0, vt1 WHERE ((NOT ((((((vt0.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)), CASE WHEN vt0.c0 THEN v0.c0 END, ((vt1.c0) NOT NULL)))>((vt1.c0 COLLATE RTRIM, ((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c1)), ((('y튟', rt0.c2, '-935952694', vt1.c0, rt0.c1))<=((vt0.c0, '0.41146297518822916', rt0.c0, v0.c0, vt0.c0))))))))) UNION SELECT DISTINCT rt0.c1, rt0.c0, v0.c0, vt0.c0, vt1.c0, rt0.c2 FROM vt0, rt0, v0, vt1 WHERE ((((((((vt0.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)), CASE WHEN vt0.c0 THEN v0.c0 END, ((vt1.c0) NOT NULL)))>((vt1.c0 COLLATE RTRIM, ((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c1)), ((('y튟', rt0.c2, '-935952694', vt1.c0, rt0.c1))<=((vt0.c0, '0.41146297518822916', rt0.c0, v0.c0, vt0.c0))))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, v0.c0, vt0.c0, vt1.c0, rt0.c2 FROM vt0, rt0, v0, vt1;
SELECT vt1.c0, vt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON ((CASE rt0.c0  WHEN rt0.c2 THEN v0.c0 ELSE NULL END) BETWEEN ((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((v0.c0)))) AND (CAST(vt1.c0 AS TEXT))) CROSS JOIN v0 ON (+ ((((rt0.c1))<((rt0.c0))))) LEFT OUTER JOIN vt1 ON ((((rt0.c2)<>(rt0.c1))) NOT BETWEEN (CASE WHEN rt0.c1 THEN rt0.c2 END) AND (((rt0.c2)GLOB(vt1.c0)))) GROUP BY vt1.c0, vt0.c0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM vt1 LEFT OUTER JOIN rt0 ON vt1.c0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM vt1 LEFT OUTER JOIN rt0 ON vt1.c0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING MAX(GROUP_CONCAT(TOTAL(vt1.c0))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM vt1 LEFT OUTER JOIN rt0 ON vt1.c0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (MAX(GROUP_CONCAT(TOTAL(vt1.c0))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM vt1 NOT INDEXED LEFT OUTER JOIN rt0 ON vt1.c0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((MAX(GROUP_CONCAT(TOTAL(vt1.c0)))) ISNULL);
SELECT ALL * FROM vt0, vt1, v0;
SELECT ALL * FROM vt0, vt1, v0 WHERE (CASE WHEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE v0.c0 END THEN vt0.c0 ELSE ((((((((v0.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt0.c0)))OR(v0.c0)) END) UNION ALL SELECT ALL * FROM vt0, vt1, v0 WHERE ((NOT (CASE WHEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE v0.c0 END THEN vt0.c0 ELSE ((((((((v0.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt0.c0)))OR(v0.c0)) END))) UNION ALL SELECT ALL * FROM vt0, vt1, v0 WHERE (((CASE WHEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE v0.c0 END THEN vt0.c0 ELSE ((((((((v0.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt0.c0)))OR(v0.c0)) END) ISNULL));
SELECT ALL * FROM vt0, vt1, v0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (x'') UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (x''))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((x'') ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT ALL vt0.c0, v0.c0, rt0.c1, vt1.c0, rt0.c0, rt0.c2 FROM rt0, vt0, v0, vt1 GROUP BY vt0.c0, v0.c0, rt0.c1, vt1.c0, rt0.c0, rt0.c2;
SELECT ALL vt0.c0, v0.c0, rt0.c1, vt1.c0, rt0.c0, rt0.c2 FROM rt0, vt0, v0, vt1 WHERE (vt1.c0 COLLATE NOCASE) GROUP BY vt0.c0, v0.c0, rt0.c1, vt1.c0, rt0.c0, rt0.c2 UNION SELECT vt0.c0, v0.c0, rt0.c1, vt1.c0, rt0.c0, rt0.c2 FROM rt0, vt0, v0, vt1 WHERE ((NOT (vt1.c0 COLLATE NOCASE))) GROUP BY vt0.c0, v0.c0, rt0.c1, vt1.c0, rt0.c0, rt0.c2 UNION SELECT ALL vt0.c0, v0.c0, rt0.c1, vt1.c0, rt0.c0, rt0.c2 FROM rt0, vt0, v0, vt1 WHERE (((vt1.c0 COLLATE NOCASE) ISNULL)) GROUP BY vt0.c0, v0.c0, rt0.c1, vt1.c0, rt0.c0, rt0.c2;
SELECT ALL vt0.c0, v0.c0, rt0.c1, vt1.c0, rt0.c0, rt0.c2 FROM rt0, vt0, v0, vt1 GROUP BY vt0.c0, v0.c0, rt0.c1, vt1.c0, rt0.c0, rt0.c2;
SELECT v0.c0, rt0.c1, rt0.c2 FROM v0, rt0, vt1 GROUP BY v0.c0, rt0.c1, rt0.c2;
SELECT ALL v0.c0, rt0.c1, rt0.c2 FROM v0, rt0, vt1 GROUP BY v0.c0, rt0.c1, rt0.c2 HAVING MIN(COUNT(*)) UNION ALL SELECT v0.c0, rt0.c1, rt0.c2 FROM v0, rt0, vt1 GROUP BY v0.c0, rt0.c1, rt0.c2 HAVING (NOT (MIN(COUNT(*)))) UNION ALL SELECT ALL v0.c0, rt0.c1, rt0.c2 FROM v0, rt0, vt1 GROUP BY v0.c0, rt0.c1, rt0.c2 HAVING ((MIN(COUNT(*))) ISNULL);
SELECT ALL * FROM v0, vt0, rt0, vt1;
SELECT ALL * FROM v0, vt0, rt0, vt1 WHERE ((NOT (((((rt0.c2)OR(vt1.c0)))OR(rt0.c0))))) UNION ALL SELECT ALL * FROM v0, vt0, rt0, vt1 WHERE ((NOT ((NOT (((((rt0.c2)OR(vt1.c0)))OR(rt0.c0))))))) UNION ALL SELECT * FROM v0, vt0, rt0, vt1 WHERE ((((NOT (((((rt0.c2)OR(vt1.c0)))OR(rt0.c0))))) ISNULL));
SELECT ALL * FROM v0, vt0, rt0, vt1;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (json_quote((v0.c0 IN (NULL, v0.c0)))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (json_quote((v0.c0 IN (NULL, v0.c0)))))) UNION SELECT DISTINCT * FROM v0 WHERE (((json_quote((v0.c0 IN (NULL, v0.c0)))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0)<(v0.c0))) BETWEEN (CAST(v0.c0 AS INTEGER)) AND ((+ (v0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((((v0.c0)<(v0.c0))) BETWEEN (CAST(v0.c0 AS INTEGER)) AND ((+ (v0.c0))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((((v0.c0)<(v0.c0))) BETWEEN (CAST(v0.c0 AS INTEGER)) AND ((+ (v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2 HAVING AVG(6.57830819E8) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (AVG(6.57830819E8))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2 HAVING ((AVG(6.57830819E8)) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2 HAVING AVG(6.57830819E8) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (AVG(6.57830819E8))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2 HAVING ((AVG(6.57830819E8)) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (((CAST(vt1.c0 AS REAL)) BETWEEN (vt1.c0) AND (vt1.c0 COLLATE BINARY))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((CAST(vt1.c0 AS REAL)) BETWEEN (vt1.c0) AND (vt1.c0 COLLATE BINARY))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((((CAST(vt1.c0 AS REAL)) BETWEEN (vt1.c0) AND (vt1.c0 COLLATE BINARY))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (TYPEOF(DISTINCT x'')) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (TYPEOF(DISTINCT x'')))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((TYPEOF(DISTINCT x'')) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL vt0.c0, vt1.c0, rt0.c0, v0.c0, rt0.c1, rt0.c2 FROM vt1, v0, vt0, rt0 GROUP BY vt0.c0, vt1.c0, rt0.c0, v0.c0, rt0.c1, rt0.c2;
SELECT vt0.c0, vt1.c0, rt0.c0, v0.c0, rt0.c1, rt0.c2 FROM vt1, v0, vt0, rt0 WHERE (217398101) GROUP BY vt0.c0, vt1.c0, rt0.c0, v0.c0, rt0.c1, rt0.c2 UNION SELECT vt0.c0, vt1.c0, rt0.c0, v0.c0, rt0.c1, rt0.c2 FROM vt1, v0, vt0, rt0 WHERE ((NOT (217398101))) GROUP BY vt0.c0, vt1.c0, rt0.c0, v0.c0, rt0.c1, rt0.c2 UNION SELECT ALL vt0.c0, vt1.c0, rt0.c0, v0.c0, rt0.c1, rt0.c2 FROM vt1, v0, vt0, rt0 WHERE (((217398101) ISNULL)) GROUP BY vt0.c0, vt1.c0, rt0.c0, v0.c0, rt0.c1, rt0.c2;
SELECT ALL vt0.c0, vt1.c0, rt0.c0, v0.c0, rt0.c1, rt0.c2 FROM vt1, v0, vt0, rt0 GROUP BY vt0.c0, vt1.c0, rt0.c0, v0.c0, rt0.c1, rt0.c2;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MAX(CASE WHEN vt1.c0 THEN SUM(TOTAL(vt1.c0)) END) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MAX(CASE WHEN vt1.c0 THEN SUM(TOTAL(vt1.c0)) END))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MAX(CASE WHEN vt1.c0 THEN SUM(TOTAL(vt1.c0)) END)) ISNULL);
SELECT * FROM vt1 INNER JOIN v0 ON ((((vt1.c0) IS FALSE))&(((((v0.c0)OR(vt1.c0)))AND(vt1.c0))));
SELECT ALL * FROM vt1 INNER JOIN v0 ON ((((vt1.c0) IS FALSE))&(((((v0.c0)OR(vt1.c0)))AND(vt1.c0)))) WHERE ('1789039481') UNION ALL SELECT * FROM vt1 INNER JOIN v0 ON ((((vt1.c0) IS FALSE))&(((((v0.c0)OR(vt1.c0)))AND(vt1.c0)))) WHERE ((NOT ('1789039481'))) UNION ALL SELECT * FROM vt1 INNER JOIN v0 ON ((((vt1.c0) IS FALSE))&(((((v0.c0)OR(vt1.c0)))AND(vt1.c0)))) WHERE ((('1789039481') ISNULL));
SELECT * FROM vt1 INNER JOIN v0 ON ((((vt1.c0) IS FALSE))&(((((v0.c0)OR(vt1.c0)))AND(vt1.c0))));
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, rt0 NATURAL JOIN vt0;
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, rt0 NATURAL JOIN vt0 WHERE (NULL) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, rt0 NATURAL JOIN vt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, rt0 NATURAL JOIN vt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, rt0 NATURAL JOIN vt0;
SELECT ALL rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM vt0, rt0 WHERE ((((- (vt0.c0)))OR(CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM vt0, rt0 WHERE ((NOT ((((- (vt0.c0)))OR(CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM vt0, rt0 WHERE ((((((- (vt0.c0)))OR(CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END))) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0;
SELECT vt1.c0, rt0.c2, rt0.c1 FROM v0 CROSS JOIN rt0 ON ((((((((((rt0.c2)<>(vt1.c0)))AND((NOT (vt1.c0)))))AND(0.4754682364934366)))AND(vt1.c0 COLLATE NOCASE)))OR(((v0.c0) IS TRUE))) INNER JOIN vt1 ON (vt1.c0 IN (-85987431, (rt0.c1 IN (v0.c0)))) GROUP BY vt1.c0, rt0.c2, rt0.c1;
SELECT ALL vt1.c0, rt0.c2, rt0.c1 FROM v0 CROSS JOIN rt0 ON ((((((((((rt0.c2)!=(vt1.c0)))AND((NOT (vt1.c0)))))AND(0.4754682364934366)))AND(vt1.c0 COLLATE NOCASE)))OR(((v0.c0) IS TRUE))) INNER JOIN vt1 ON (vt1.c0 IN (-85987431, (rt0.c1 IN (v0.c0)))) GROUP BY vt1.c0, rt0.c2, rt0.c1 HAVING CASE WHEN ((((((((((((v0.c0)AND(TOTAL(TOTAL(rt0.c2)))))OR(GROUP_CONCAT(SUM(GROUP_CONCAT(TOTAL(COUNT(*))))))))OR(rt0.c0)))AND(rt0.c1)))OR(MAX(TOTAL(COUNT(*))))))OR(MIN(COUNT(MAX(vt1.c0))))) THEN ((rt0.c0) IS FALSE) END UNION ALL SELECT ALL vt1.c0, rt0.c2, rt0.c1 FROM v0 CROSS JOIN rt0 ON ((((((((((rt0.c2)!=(vt1.c0)))AND((NOT (vt1.c0)))))AND(0.4754682364934366)))AND(vt1.c0 COLLATE NOCASE)))OR(((v0.c0) IS TRUE))) INNER JOIN vt1 ON (vt1.c0 IN (-85987431, (rt0.c1 IN (v0.c0)))) GROUP BY vt1.c0, rt0.c2, rt0.c1 HAVING (NOT (CASE WHEN ((((((((((((v0.c0)AND(TOTAL(TOTAL(rt0.c2)))))OR(GROUP_CONCAT(SUM(GROUP_CONCAT(TOTAL(COUNT(*))))))))OR(rt0.c0)))AND(rt0.c1)))OR(MAX(TOTAL(COUNT(*))))))OR(MIN(COUNT(MAX(vt1.c0))))) THEN ((rt0.c0) IS FALSE) END)) UNION ALL SELECT ALL vt1.c0, rt0.c2, rt0.c1 FROM v0 CROSS JOIN rt0 ON ((((((((((rt0.c2)!=(vt1.c0)))AND((NOT (vt1.c0)))))AND(0.4754682364934366)))AND(vt1.c0 COLLATE NOCASE)))OR(((v0.c0) IS TRUE))) INNER JOIN vt1 ON (vt1.c0 IN (-85987431, (rt0.c1 IN (v0.c0)))) GROUP BY vt1.c0, rt0.c2, rt0.c1 HAVING ((CASE WHEN ((((((((((((v0.c0)AND(TOTAL(TOTAL(rt0.c2)))))OR(GROUP_CONCAT(SUM(GROUP_CONCAT(TOTAL(COUNT(*))))))))OR(rt0.c0)))AND(rt0.c1)))OR(MAX(TOTAL(COUNT(*))))))OR(MIN(COUNT(MAX(vt1.c0))))) THEN ((rt0.c0) IS FALSE) END) ISNULL);
SELECT ALL MAX(((vt1.c0 COLLATE RTRIM) ISNULL)) FROM vt1 ORDER BY (((vt1.c0, ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)), ((vt1.c0)IS(vt1.c0))))=((CAST(NULL AS TEXT), CAST(x'' AS NUMERIC), ((vt1.c0) BETWEEN (NULL) AND (vt1.c0))))) DESC  NULLS LAST, (((vt1.c0)) BETWEEN ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE ((((((v0.c0, v0.c0, v0.c0))<=((0.3969501984277819, v0.c0, v0.c0))))LIKE(v0.c0 COLLATE NOCASE))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT ((((((v0.c0, v0.c0, v0.c0))<=((0.3969501984277819, v0.c0, v0.c0))))LIKE(v0.c0 COLLATE NOCASE))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((((((((v0.c0, v0.c0, v0.c0))<=((0.3969501984277819, v0.c0, v0.c0))))LIKE(v0.c0 COLLATE NOCASE))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT vt0.c0, rt0.c2, vt1.c0, rt0.c0, rt0.c1 FROM rt0, vt1, vt0;
SELECT DISTINCT vt0.c0, rt0.c2, vt1.c0, rt0.c0, rt0.c1 FROM rt0, vt1, vt0 WHERE ((x'a203' COLLATE RTRIM IN (((rt0.c2)IS(vt1.c0))))) UNION SELECT DISTINCT vt0.c0, rt0.c2, vt1.c0, rt0.c0, rt0.c1 FROM rt0, vt1, vt0 WHERE ((NOT ((x'a203' COLLATE RTRIM IN (((rt0.c2)IS(vt1.c0))))))) UNION SELECT DISTINCT vt0.c0, rt0.c2, vt1.c0, rt0.c0, rt0.c1 FROM rt0, vt1, vt0 WHERE ((((x'a203' COLLATE RTRIM IN (((rt0.c2)IS(vt1.c0))))) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c2, vt1.c0, rt0.c0, rt0.c1 FROM rt0, vt1, vt0;
SELECT ALL vt0.c0 FROM rt0, v0, vt1, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM rt0, v0, vt1, vt0 WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM rt0, v0, vt1, vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM rt0, v0, vt1, vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM rt0, v0, vt1, vt0 GROUP BY vt0.c0;
SELECT v0.c0, vt1.c0 FROM vt1, v0 GROUP BY v0.c0, vt1.c0;
SELECT v0.c0, vt1.c0 FROM vt1 NOT INDEXED, v0 GROUP BY v0.c0, vt1.c0 HAVING ((MIN(SUM(v0.c0)))>(COUNT(*))) UNION ALL SELECT v0.c0, vt1.c0 FROM vt1, v0 GROUP BY v0.c0, vt1.c0 HAVING (NOT (((MIN(SUM(v0.c0)))>(COUNT(*))))) UNION ALL SELECT ALL v0.c0, vt1.c0 FROM vt1, v0 GROUP BY v0.c0, vt1.c0 HAVING ((((MIN(SUM(v0.c0)))>(COUNT(*)))) ISNULL);
SELECT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE ((((- (vt1.c0))) ISNULL)) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT ((((- (vt1.c0))) ISNULL)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((((((- (vt1.c0))) ISNULL)) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT * FROM v0, vt0 FULL OUTER JOIN rt0 ON ((((rt0.c1) NOT NULL)) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND ((rt0.c2 IN ())));
SELECT DISTINCT * FROM v0, vt0 FULL OUTER JOIN rt0 ON ((((rt0.c1) NOT NULL)) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND ((rt0.c2 IN ()))) WHERE (CAST(NULL AS BLOB)) UNION SELECT DISTINCT * FROM v0, vt0 FULL OUTER JOIN rt0 ON ((((rt0.c1) NOT NULL)) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND ((rt0.c2 IN ()))) WHERE ((NOT (CAST(NULL AS BLOB)))) UNION SELECT DISTINCT * FROM v0, vt0 FULL OUTER JOIN rt0 ON ((((rt0.c1) NOT NULL)) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND ((rt0.c2 IN ()))) WHERE (((CAST(NULL AS BLOB)) ISNULL));
SELECT DISTINCT * FROM v0, vt0 FULL OUTER JOIN rt0 ON ((((rt0.c1) NOT NULL)) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND ((rt0.c2 IN ())));
SELECT vt1.c0 FROM rt0, v0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM rt0, v0, vt1 WHERE ((((+ (rt0.c0)))<>(((((rt0.c2)OR(rt0.c0)))AND(vt1.c0))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM rt0, v0, vt1 WHERE ((NOT ((((+ (rt0.c0)))<>(((((rt0.c2)OR(rt0.c0)))AND(vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM rt0, v0, vt1 WHERE ((((((+ (rt0.c0)))!=(((((rt0.c2)OR(rt0.c0)))AND(vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM rt0, v0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0;
SELECT ALL vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0 HAVING MIN(v0.c0) UNION ALL SELECT vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0 HAVING (NOT (MIN(v0.c0))) UNION ALL SELECT vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0 HAVING ((MIN(v0.c0)) ISNULL);
SELECT ALL vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0;
SELECT ALL vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0 HAVING MIN(v0.c0) UNION ALL SELECT vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0 HAVING (NOT (MIN(v0.c0))) UNION ALL SELECT vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0 HAVING ((MIN(v0.c0)) ISNULL);
SELECT ALL vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0;
SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON (((~ (0.26928811733170854))) BETWEEN ((rt0.c0 IN (v0.c0))) AND ((('') BETWEEN (rt0.c0) AND (rt0.c1)))) FULL OUTER JOIN v0 ON CASE CASE WHEN rt0.c2 THEN v0.c0 END  WHEN ((rt0.c1) NOT NULL) THEN x'c26d' WHEN rt0.c0 THEN ((vt1.c0) NOTNULL) WHEN ((rt0.c0)AND(rt0.c2)) THEN json_insert(v0.c0, vt1.c0, rt0.c1) ELSE rt0.c2 COLLATE BINARY END;
SELECT DISTINCT * FROM vt0, vt1, v0, rt0;
SELECT DISTINCT * FROM vt0, vt1, v0, rt0 WHERE (((((rt0.c1)AND(rt0.c2)))>=(((v0.c0) ISNULL)))) UNION SELECT DISTINCT * FROM vt0, vt1, v0, rt0 WHERE ((NOT (((((rt0.c1)AND(rt0.c2)))>=(((v0.c0) ISNULL)))))) UNION SELECT DISTINCT * FROM vt0, vt1, v0, rt0 WHERE (((((((rt0.c1)AND(rt0.c2)))>=(((v0.c0) ISNULL)))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1, v0, rt0;
SELECT vt1.c0 FROM vt1 NATURAL JOIN vt0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 NATURAL JOIN vt0 WHERE (((- (vt0.c0)) IN ())) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 NATURAL JOIN vt0 WHERE ((NOT (((- (vt0.c0)) IN ())))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 NATURAL JOIN vt0 WHERE (((((- (vt0.c0)) IN ())) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 NATURAL JOIN vt0 GROUP BY vt1.c0;
SELECT vt1.c0, rt0.c2, rt0.c0, rt0.c1 FROM vt1, rt0, v0 GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT ALL vt1.c0, rt0.c2, rt0.c0, rt0.c1 FROM vt1, rt0, v0 GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c1 HAVING CASE TOTAL(rt0.c0)  WHEN GROUP_CONCAT(rt0.c2) THEN COUNT(*) WHEN MAX(GROUP_CONCAT(rt0.c2)) THEN ((((MAX(SUM(v0.c0)))AND(GROUP_CONCAT(GROUP_CONCAT(v0.c0)))))OR(vt1.c0)) WHEN SUM(SUM(rt0.c2)) THEN ((COUNT(rt0.c0))*(v0.c0)) ELSE ((rt0.c1) IS TRUE) END UNION ALL SELECT vt1.c0, rt0.c2, rt0.c0, rt0.c1 FROM vt1, rt0, v0 GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (CASE TOTAL(rt0.c0)  WHEN GROUP_CONCAT(rt0.c2) THEN COUNT(*) WHEN MAX(GROUP_CONCAT(rt0.c2)) THEN ((((MAX(SUM(v0.c0)))AND(GROUP_CONCAT(GROUP_CONCAT(v0.c0)))))OR(vt1.c0)) WHEN SUM(SUM(rt0.c2)) THEN ((COUNT(rt0.c0))*(v0.c0)) ELSE ((rt0.c1) IS TRUE) END)) UNION ALL SELECT vt1.c0, rt0.c2, rt0.c0, rt0.c1 FROM vt1, rt0, v0 GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c1 HAVING ((CASE TOTAL(rt0.c0)  WHEN GROUP_CONCAT(rt0.c2) THEN COUNT(*) WHEN MAX(GROUP_CONCAT(rt0.c2)) THEN ((((MAX(SUM(v0.c0)))AND(GROUP_CONCAT(GROUP_CONCAT(v0.c0)))))OR(vt1.c0)) WHEN SUM(SUM(rt0.c2)) THEN ((COUNT(rt0.c0))*(v0.c0)) ELSE ((rt0.c1) IS TRUE) END) ISNULL);
SELECT * FROM vt1;
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)IS NOT(vt1.c0)))&(((((x'')OR(NULL)))OR(vt1.c0))))) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (((((vt1.c0)IS NOT(vt1.c0)))&(((((x'')OR(NULL)))OR(vt1.c0))))))) UNION ALL SELECT ALL * FROM vt1 WHERE (((((((vt1.c0)IS NOT(vt1.c0)))&(((((x'')OR(NULL)))OR(vt1.c0))))) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM rt0, vt1, vt0;
SELECT DISTINCT * FROM rt0, vt1, vt0 WHERE ((NOT ((rt0.c0 IN ())))) UNION SELECT DISTINCT * FROM rt0, vt1, vt0 WHERE ((NOT ((NOT ((rt0.c0 IN ())))))) UNION SELECT DISTINCT * FROM rt0, vt1, vt0 WHERE ((((NOT ((rt0.c0 IN ())))) ISNULL));
SELECT DISTINCT * FROM rt0, vt1, vt0;
SELECT v0.c0, vt1.c0, rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM vt1, rt0, v0, vt0 GROUP BY v0.c0, vt1.c0, rt0.c1, rt0.c0, vt0.c0, rt0.c2;
SELECT v0.c0, vt1.c0, rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM vt1, rt0, v0, vt0 WHERE (NULLIF(CAST(rt0.c1 AS INTEGER), ((vt1.c0)%(v0.c0)))) GROUP BY v0.c0, vt1.c0, rt0.c1, rt0.c0, vt0.c0, rt0.c2 UNION SELECT v0.c0, vt1.c0, rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM vt1, rt0, v0, vt0 WHERE ((NOT (NULLIF(CAST(rt0.c1 AS INTEGER), ((vt1.c0)%(v0.c0)))))) GROUP BY v0.c0, vt1.c0, rt0.c1, rt0.c0, vt0.c0, rt0.c2 UNION SELECT ALL v0.c0, vt1.c0, rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM vt1, rt0, v0, vt0 WHERE (((NULLIF(CAST(rt0.c1 AS INTEGER), ((vt1.c0)%(v0.c0)))) ISNULL)) GROUP BY v0.c0, vt1.c0, rt0.c1, rt0.c0, vt0.c0, rt0.c2;
SELECT v0.c0, vt1.c0, rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM vt1, rt0, v0, vt0 GROUP BY v0.c0, vt1.c0, rt0.c1, rt0.c0, vt0.c0, rt0.c2;
SELECT ALL rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0 HAVING (- (((((((((rt0.c2)AND(rt0.c0)))AND(TOTAL(rt0.c1))))AND(COUNT(*))))OR(SUM(rt0.c1))))) UNION ALL SELECT rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0 HAVING (NOT ((- (((((((((rt0.c2)AND(rt0.c0)))AND(TOTAL(rt0.c1))))AND(COUNT(*))))OR(SUM(rt0.c1))))))) UNION ALL SELECT rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0 HAVING (((- (((((((((rt0.c2)AND(rt0.c0)))AND(TOTAL(rt0.c1))))AND(COUNT(*))))OR(SUM(rt0.c1)))))) ISNULL);
SELECT ALL rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0 HAVING (- (((((((((rt0.c2)AND(rt0.c0)))AND(TOTAL(rt0.c1))))AND(COUNT(*))))OR(SUM(rt0.c1))))) UNION ALL SELECT rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0 HAVING (NOT ((- (((((((((rt0.c2)AND(rt0.c0)))AND(TOTAL(rt0.c1))))AND(COUNT(*))))OR(SUM(rt0.c1))))))) UNION ALL SELECT rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0 HAVING (((- (((((((((rt0.c2)AND(rt0.c0)))AND(TOTAL(rt0.c1))))AND(COUNT(*))))OR(SUM(rt0.c1)))))) ISNULL);
SELECT ALL rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0;
SELECT ALL * FROM vt1, rt0;
SELECT * FROM vt1, rt0 WHERE (((((((((x'')AND(((((((((rt0.c1)AND(rt0.c1)))OR('2129225320')))OR('0.41146297518822916')))AND(rt0.c2)))))AND(NULL)))AND(CASE WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)))OR((vt1.c0 IN ())))) UNION ALL SELECT ALL * FROM vt1, rt0 WHERE ((NOT (((((((((x'')AND(((((((((rt0.c1)AND(rt0.c1)))OR('2129225320')))OR('0.41146297518822916')))AND(rt0.c2)))))AND(NULL)))AND(CASE WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)))OR((vt1.c0 IN ())))))) UNION ALL SELECT * FROM vt1, rt0 WHERE (((((((((((x'')AND(((((((((rt0.c1)AND(rt0.c1)))OR('2129225320')))OR('0.41146297518822916')))AND(rt0.c2)))))AND(NULL)))AND(CASE WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)))OR((vt1.c0 IN ())))) ISNULL));
SELECT ALL * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((vt1.c0)-(((vt1.c0)GLOB(vt1.c0))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((vt1.c0)-(((vt1.c0)GLOB(vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c0)-(((vt1.c0)GLOB(vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT rt0.c1, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, v0.c0, rt0.c0;
SELECT ALL rt0.c1, v0.c0, rt0.c0 FROM v0, rt0 WHERE (((((rt0.c0)OR(v0.c0)))OR(rt0.c1)) COLLATE NOCASE) GROUP BY rt0.c1, v0.c0, rt0.c0 UNION SELECT rt0.c1, v0.c0, rt0.c0 FROM v0, rt0 WHERE ((NOT (((((rt0.c0)OR(v0.c0)))OR(rt0.c1)) COLLATE NOCASE))) GROUP BY rt0.c1, v0.c0, rt0.c0 UNION SELECT rt0.c1, v0.c0, rt0.c0 FROM v0, rt0 WHERE (((((((rt0.c0)OR(v0.c0)))OR(rt0.c1)) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c1, v0.c0, rt0.c0;
SELECT rt0.c1, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, v0.c0, rt0.c0;
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING ((v0.c0 COLLATE NOCASE)LIKE(COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING (NOT (((v0.c0 COLLATE NOCASE)LIKE(COUNT(*))))) UNION ALL SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING ((((v0.c0 COLLATE NOCASE)LIKE(COUNT(*)))) ISNULL);
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING ((v0.c0 COLLATE NOCASE)LIKE(COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING (NOT (((v0.c0 COLLATE NOCASE)LIKE(COUNT(*))))) UNION ALL SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING ((((v0.c0 COLLATE NOCASE)LIKE(COUNT(*)))) ISNULL);
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT * FROM vt0 LEFT OUTER JOIN v0 ON 0.31761019514810707;
SELECT * FROM vt0 LEFT OUTER JOIN v0 ON 0.31761019514810707 WHERE ((((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)) IN ())) UNION ALL SELECT * FROM vt0 LEFT OUTER JOIN v0 ON 0.31761019514810707 WHERE ((NOT ((((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)) IN ())))) UNION ALL SELECT * FROM vt0 LEFT OUTER JOIN v0 ON 0.31761019514810707 WHERE ((((((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)) IN ())) ISNULL));
SELECT * FROM vt0 LEFT OUTER JOIN v0 ON 0.31761019514810707;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (CAST(vt0.c0 AS INTEGER) COLLATE NOCASE) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (CAST(vt0.c0 AS INTEGER) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((CAST(vt0.c0 AS INTEGER) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((- (v0.c0))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((- (v0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((- (v0.c0))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0, vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON (((CAST(v0.c0 AS NUMERIC)))>(((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))) GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON (((CAST(v0.c0 AS NUMERIC)))>(((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))) GROUP BY v0.c0, vt0.c0 HAVING AVG(((AVG(x''))>>(vt0.c0))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON (((CAST(v0.c0 AS NUMERIC)))>(((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))) GROUP BY v0.c0, vt0.c0 HAVING (NOT (AVG(((AVG(x''))>>(vt0.c0))))) UNION ALL SELECT v0.c0, vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON (((CAST(v0.c0 AS NUMERIC)))>(((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))) GROUP BY v0.c0, vt0.c0 HAVING ((AVG(((AVG(x''))>>(vt0.c0)))) ISNULL);
SELECT ALL TOTAL(vt0.c0) FROM vt0;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (((((vt0.c0)IS(vt0.c0)))GLOB(((((((((x'')AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((((vt0.c0)IS(vt0.c0)))GLOB(((((((((x'')AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))))) UNION ALL SELECT * FROM vt0 WHERE (((((((vt0.c0)IS(vt0.c0)))GLOB(((((((((x'')AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt1.c0 FROM vt0, vt1;
SELECT DISTINCT vt1.c0 FROM vt0, vt1 WHERE (((((((vt0.c0)OR(0.6090331379596746)))OR(vt1.c0)))||(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0))))) UNION SELECT DISTINCT vt1.c0 FROM vt0, vt1 WHERE ((NOT (((((((vt0.c0)OR(0.6090331379596746)))OR(vt1.c0)))||(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0))))))) UNION SELECT DISTINCT vt1.c0 FROM vt0, vt1 WHERE (((((((((vt0.c0)OR(0.6090331379596746)))OR(vt1.c0)))||(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt0, vt1;
SELECT vt0.c0, v0.c0, rt0.c2, vt1.c0, rt0.c0, rt0.c1 FROM vt1, rt0, v0, vt0 GROUP BY vt0.c0, v0.c0, rt0.c2, vt1.c0, rt0.c0, rt0.c1;
SELECT vt0.c0, v0.c0, rt0.c2, vt1.c0, rt0.c0, rt0.c1 FROM vt1, rt0, v0, vt0 WHERE (CASE WHEN v0.c0 THEN rt0.c2 WHEN v0.c0 THEN v0.c0 WHEN rt0.c0 THEN v0.c0 WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c1 THEN 0.3620591435567795 END COLLATE BINARY COLLATE RTRIM) GROUP BY vt0.c0, v0.c0, rt0.c2, vt1.c0, rt0.c0, rt0.c1 UNION SELECT ALL vt0.c0, v0.c0, rt0.c2, vt1.c0, rt0.c0, rt0.c1 FROM vt1, rt0, v0, vt0 WHERE ((NOT (CASE WHEN v0.c0 THEN rt0.c2 WHEN v0.c0 THEN v0.c0 WHEN rt0.c0 THEN v0.c0 WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c1 THEN 0.3620591435567795 END COLLATE BINARY COLLATE RTRIM))) GROUP BY vt0.c0, v0.c0, rt0.c2, vt1.c0, rt0.c0, rt0.c1 UNION SELECT vt0.c0, v0.c0, rt0.c2, vt1.c0, rt0.c0, rt0.c1 FROM vt1, rt0, v0, vt0 WHERE (((CASE WHEN v0.c0 THEN rt0.c2 WHEN v0.c0 THEN v0.c0 WHEN rt0.c0 THEN v0.c0 WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c1 THEN 0.3620591435567795 END COLLATE BINARY COLLATE RTRIM) ISNULL)) GROUP BY vt0.c0, v0.c0, rt0.c2, vt1.c0, rt0.c0, rt0.c1;
SELECT vt0.c0, v0.c0, rt0.c2, vt1.c0, rt0.c0, rt0.c1 FROM vt1, rt0, v0, vt0 GROUP BY vt0.c0, v0.c0, rt0.c2, vt1.c0, rt0.c0, rt0.c1;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING TOTAL((+ (-1618518610))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (TOTAL((+ (-1618518610))))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((TOTAL((+ (-1618518610)))) ISNULL);
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING TOTAL((+ (-1618518610))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (TOTAL((+ (-1618518610))))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((TOTAL((+ (-1618518610)))) ISNULL);
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT * FROM rt0, vt0;
SELECT ALL * FROM rt0, vt0 WHERE (((((((((((vt0.c0)OR(rt0.c0)))OR(rt0.c1)))OR(vt0.c0)))AND(rt0.c0)))!=(((((rt0.c1)OR(rt0.c1)))AND(rt0.c0))))) UNION ALL SELECT * FROM rt0 NOT INDEXED, vt0 WHERE ((NOT (((((((((((vt0.c0)OR(rt0.c0)))OR(rt0.c1)))OR(vt0.c0)))AND(rt0.c0)))<>(((((rt0.c1)OR(rt0.c1)))AND(rt0.c0))))))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE (((((((((((((vt0.c0)OR(rt0.c0)))OR(rt0.c1)))OR(vt0.c0)))AND(rt0.c0)))!=(((((rt0.c1)OR(rt0.c1)))AND(rt0.c0))))) ISNULL));
SELECT * FROM rt0, vt0;
SELECT DISTINCT rt0.c0 FROM v0, vt1, rt0;
SELECT DISTINCT rt0.c0 FROM v0, vt1, rt0 WHERE (((((((rt0.c2)OR(rt0.c1)))OR(vt1.c0))) NOT BETWEEN (rt0.c1 COLLATE NOCASE) AND ((+ (rt0.c1))))) UNION SELECT DISTINCT rt0.c0 FROM v0, vt1, rt0 WHERE ((NOT (((((((rt0.c2)OR(rt0.c1)))OR(vt1.c0))) NOT BETWEEN (rt0.c1 COLLATE NOCASE) AND ((+ (rt0.c1))))))) UNION SELECT DISTINCT rt0.c0 FROM v0, vt1, rt0 WHERE (((((((((rt0.c2)OR(rt0.c1)))OR(vt1.c0))) NOT BETWEEN (rt0.c1 COLLATE NOCASE) AND ((+ (rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c0 FROM v0, vt1, rt0;
SELECT rt0.c0 FROM vt0, vt1, rt0, v0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM vt0, vt1, rt0, v0 WHERE (((rt0.c2)<<(LIKELY(DISTINCT rt0.c1)))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM vt0, vt1, rt0, v0 WHERE ((NOT (((rt0.c2)<<(LIKELY(DISTINCT rt0.c1)))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM vt0, vt1, rt0, v0 WHERE (((((rt0.c2)<<(LIKELY(DISTINCT rt0.c1)))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM vt0, vt1, rt0, v0 GROUP BY rt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING ((CAST(v0.c0 AS BLOB))%(((vt0.c0) BETWEEN (AVG(SUM('-1534263499'))) AND (COUNT(*))))) UNION ALL SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING (NOT (((CAST(v0.c0 AS BLOB))%(((vt0.c0) BETWEEN (AVG(SUM('-1534263499'))) AND (COUNT(*))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING ((((CAST(v0.c0 AS BLOB))%(((vt0.c0) BETWEEN (AVG(SUM('-1534263499'))) AND (COUNT(*)))))) ISNULL);
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (vt0.c0) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((vt0.c0) ISNULL));
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 END) NOT BETWEEN (((vt0.c0)<=(vt0.c0))) AND (vt0.c0 COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (((CASE WHEN vt1.c0 THEN vt1.c0 END) NOT BETWEEN (((vt0.c0)<=(vt0.c0))) AND (vt0.c0 COLLATE RTRIM))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE (((((CASE WHEN vt1.c0 THEN vt1.c0 END) NOT BETWEEN (((vt0.c0)<=(vt0.c0))) AND (vt0.c0 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) BETWEEN ((((vt1.c0))!=((vt1.c0)))) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) BETWEEN ((((vt1.c0))!=((vt1.c0)))) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) BETWEEN ((((vt1.c0))<>((vt1.c0)))) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM v0, rt0, vt1 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM v0, rt0, vt1 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (((rt0.c0)) BETWEEN (((v0.c0 IN (TOTAL(rt0.c1), GROUP_CONCAT(rt0.c2), '6	Q''xi')))) AND ((MAX(COUNT(*))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM v0, rt0, vt1 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT ((((rt0.c0)) BETWEEN (((v0.c0 IN (TOTAL(rt0.c1), GROUP_CONCAT(rt0.c2), '6	Q''xi')))) AND ((MAX(COUNT(*))))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM v0, rt0, vt1 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (((((rt0.c0)) BETWEEN (((v0.c0 IN (TOTAL(rt0.c1), GROUP_CONCAT(rt0.c2), '6	Q''xi')))) AND ((MAX(COUNT(*)))))) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE ((((((- (vt0.c0)))AND(vt0.c0 COLLATE NOCASE)))AND(CAST(vt0.c0 AS BLOB)))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((((((- (vt0.c0)))AND(vt0.c0 COLLATE NOCASE)))AND(CAST(vt0.c0 AS BLOB)))))) UNION ALL SELECT * FROM vt0 WHERE ((((((((- (vt0.c0)))AND(vt0.c0 COLLATE NOCASE)))AND(CAST(vt0.c0 AS BLOB)))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) AND ((LAST_INSERT_ROWID())))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((vt0.c0)) BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) AND ((LAST_INSERT_ROWID())))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) AND ((LAST_INSERT_ROWID())))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 WHERE ((+ ((((vt0.c0))>((vt0.c0)))))) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE ((NOT ((+ ((((vt0.c0))>((vt0.c0)))))))) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM vt0, v0 WHERE ((((+ ((((vt0.c0))>((vt0.c0)))))) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM v0, rt0, vt0 GROUP BY vt0.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM v0, rt0, vt0 GROUP BY vt0.c0, rt0.c2, rt0.c0, rt0.c1 HAVING AVG(COUNT(rt0.c1)) UNION ALL SELECT ALL vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM v0, rt0, vt0 GROUP BY vt0.c0, rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (AVG(COUNT(rt0.c1)))) UNION ALL SELECT vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM v0, rt0, vt0 GROUP BY vt0.c0, rt0.c2, rt0.c0, rt0.c1 HAVING ((AVG(COUNT(rt0.c1))) ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (rt0.c0) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (rt0.c0))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((rt0.c0) ISNULL));
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN rt0 ON (~ (((rt0.c2)&('798016537'))));
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN rt0 ON (~ (((rt0.c2)&('798016537')))) WHERE (CASE WHEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END THEN ((rt0.c2) IS TRUE) ELSE ((rt0.c0) NOTNULL) END) UNION SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN rt0 ON (~ (((rt0.c2)&('798016537')))) WHERE ((NOT (CASE WHEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END THEN ((rt0.c2) IS TRUE) ELSE ((rt0.c0) NOTNULL) END))) UNION SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN rt0 ON (~ (((rt0.c2)&('798016537')))) WHERE (((CASE WHEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END THEN ((rt0.c2) IS TRUE) ELSE ((rt0.c0) NOTNULL) END) ISNULL));
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN rt0 ON (~ (((rt0.c2)&('798016537'))));
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (CAST(((vt1.c0)<=(vt1.c0)) AS BLOB)) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (CAST(((vt1.c0)<=(vt1.c0)) AS BLOB)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((CAST(((vt1.c0)<=(vt1.c0)) AS BLOB)) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON rt0.c1 LEFT OUTER JOIN v0 ON (NOT (COALESCE(v0.c0, rt0.c1))) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON rt0.c1 LEFT OUTER JOIN v0 ON (NOT (COALESCE(v0.c0, rt0.c1))) GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING TOTAL(CAST(rt0.c2 AS NUMERIC)) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON rt0.c1 LEFT OUTER JOIN v0 ON (NOT (COALESCE(v0.c0, rt0.c1))) GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (TOTAL(CAST(rt0.c2 AS NUMERIC)))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON rt0.c1 LEFT OUTER JOIN v0 ON (NOT (COALESCE(v0.c0, rt0.c1))) GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((TOTAL(CAST(rt0.c2 AS NUMERIC))) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON rt0.c1 LEFT OUTER JOIN v0 ON (NOT (COALESCE(v0.c0, rt0.c1))) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON rt0.c1 LEFT OUTER JOIN v0 ON (NOT (COALESCE(v0.c0, rt0.c1))) GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING TOTAL(CAST(rt0.c2 AS NUMERIC)) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON rt0.c1 LEFT OUTER JOIN v0 ON (NOT (COALESCE(v0.c0, rt0.c1))) GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (TOTAL(CAST(rt0.c2 AS NUMERIC)))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON rt0.c1 LEFT OUTER JOIN v0 ON (NOT (COALESCE(v0.c0, rt0.c1))) GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((TOTAL(CAST(rt0.c2 AS NUMERIC))) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON rt0.c1 LEFT OUTER JOIN v0 ON (NOT (COALESCE(v0.c0, rt0.c1))) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0) ISNULL)) BETWEEN (vt0.c0 COLLATE NOCASE) AND (((((vt0.c0)AND('-188224080')))AND(NULL))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) ISNULL)) BETWEEN (vt0.c0 COLLATE NOCASE) AND (((((vt0.c0)AND('-188224080')))AND(NULL))))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((((vt0.c0) ISNULL)) BETWEEN (vt0.c0 COLLATE NOCASE) AND (((((vt0.c0)AND('-188224080')))AND(NULL))))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT v0.c0, vt0.c0 FROM v0 CROSS JOIN vt0 ON ((((vt0.c0)+(v0.c0)))>(v0.c0));
SELECT DISTINCT v0.c0, vt0.c0 FROM v0 CROSS JOIN vt0 ON ((((vt0.c0)+(v0.c0)))>(v0.c0)) WHERE (((vt0.c0 COLLATE NOCASE) IS TRUE)) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM v0 CROSS JOIN vt0 ON ((((vt0.c0)+(v0.c0)))>(v0.c0)) WHERE ((NOT (((vt0.c0 COLLATE NOCASE) IS TRUE)))) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM v0 CROSS JOIN vt0 ON ((((vt0.c0)+(v0.c0)))>(v0.c0)) WHERE (((((vt0.c0 COLLATE NOCASE) IS TRUE)) ISNULL));
SELECT DISTINCT v0.c0, vt0.c0 FROM v0 CROSS JOIN vt0 ON ((((vt0.c0)+(v0.c0)))>(v0.c0));
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ('[]') GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ('[]'))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((('[]') ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MIN((((COUNT(vt0.c0)))=(('	')))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MIN((((COUNT(vt0.c0)))==(('	')))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN((((COUNT(vt0.c0)))==(('	'))))) ISNULL);
SELECT * FROM vt0 FULL OUTER JOIN v0 ON (- (rt0.c0)) INNER JOIN rt0 ON ((((((((vt0.c0)OR((v0.c0 IN ()))))OR(((rt0.c2) NOTNULL))))AND((rt0.c0 IN ()))))OR(363218408)) LEFT OUTER JOIN vt1 ON LIKE(((vt0.c0)+(v0.c0)), (x'' IN (rt0.c2)), ',');
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0, vt1;
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0, vt1 WHERE ((NOT (TYPEOF(vt0.c0)))) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0, vt1 WHERE ((NOT ((NOT (TYPEOF(vt0.c0)))))) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0, vt1 WHERE ((((NOT (TYPEOF(vt0.c0)))) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0, vt1;
SELECT ALL rt0.c1, rt0.c2 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM v0, rt0 WHERE (rt0.c1) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM v0, rt0 WHERE ((NOT (rt0.c1))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM v0, rt0 WHERE (((rt0.c1) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c0, vt1.c0, v0.c0, rt0.c2 FROM rt0, v0, vt1 GROUP BY rt0.c0, vt1.c0, v0.c0, rt0.c2;
SELECT rt0.c0, vt1.c0, v0.c0, rt0.c2 FROM rt0, v0, vt1 GROUP BY rt0.c0, vt1.c0, v0.c0, rt0.c2 HAVING GROUP_CONCAT(GROUP_CONCAT(rt0.c1)) UNION ALL SELECT rt0.c0, vt1.c0, v0.c0, rt0.c2 FROM rt0, v0, vt1 GROUP BY rt0.c0, vt1.c0, v0.c0, rt0.c2 HAVING (NOT (GROUP_CONCAT(GROUP_CONCAT(rt0.c1)))) UNION ALL SELECT ALL rt0.c0, vt1.c0, v0.c0, rt0.c2 FROM rt0, v0, vt1 GROUP BY rt0.c0, vt1.c0, v0.c0, rt0.c2 HAVING ((GROUP_CONCAT(GROUP_CONCAT(rt0.c1))) ISNULL);
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (x'4c00') UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (x'4c00'))) UNION ALL SELECT ALL * FROM v0 WHERE (((x'4c00') ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM vt1 NOT INDEXED;
SELECT DISTINCT * FROM vt1 WHERE (((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))AND(vt1.c0 COLLATE NOCASE)))OR(UNLIKELY(DISTINCT vt1.c0)))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))AND(vt1.c0 COLLATE NOCASE)))OR(UNLIKELY(DISTINCT vt1.c0)))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))AND(vt1.c0 COLLATE NOCASE)))OR(UNLIKELY(DISTINCT vt1.c0)))) ISNULL));
SELECT DISTINCT * FROM vt1 NOT INDEXED;
SELECT rt0.c1, vt1.c0 FROM vt1 CROSS JOIN v0 ON (((rt0.c1)) BETWEEN ((((1976273452) ISNULL))) AND ((v0.c0))) INNER JOIN vt0 ON '1976273452' CROSS JOIN rt0 ON (((((rt0.c1)=('657830819'))))<((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END))) GROUP BY rt0.c1, vt1.c0;
SELECT rt0.c1, vt1.c0 FROM vt1 CROSS JOIN v0 ON (((rt0.c1)) BETWEEN ((((1976273452) ISNULL))) AND ((v0.c0))) INNER JOIN vt0 ON '1976273452' CROSS JOIN rt0 ON (((((rt0.c1)=('657830819'))))<((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END))) WHERE (CAST((- (vt0.c0)) AS REAL)) GROUP BY rt0.c1, vt1.c0 UNION SELECT ALL rt0.c1, vt1.c0 FROM vt1 CROSS JOIN v0 ON (((rt0.c1)) BETWEEN ((((1976273452) ISNULL))) AND ((v0.c0))) INNER JOIN vt0 ON '1976273452' CROSS JOIN rt0 ON (((((rt0.c1)=('657830819'))))<((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END))) WHERE ((NOT (CAST((- (vt0.c0)) AS REAL)))) GROUP BY rt0.c1, vt1.c0 UNION SELECT rt0.c1, vt1.c0 FROM vt1 CROSS JOIN v0 ON (((rt0.c1)) BETWEEN ((((1976273452) ISNULL))) AND ((v0.c0))) INNER JOIN vt0 ON '1976273452' CROSS JOIN rt0 ON (((((rt0.c1)=('657830819'))))<((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END))) WHERE (((CAST((- (vt0.c0)) AS REAL)) ISNULL)) GROUP BY rt0.c1, vt1.c0;
SELECT rt0.c1, vt1.c0 FROM vt1 CROSS JOIN v0 ON (((rt0.c1)) BETWEEN ((((1976273452) ISNULL))) AND ((v0.c0))) INNER JOIN vt0 ON '1976273452' CROSS JOIN rt0 ON (((((rt0.c1)=('657830819'))))<((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END))) GROUP BY rt0.c1, vt1.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING CASE WHEN GROUP_CONCAT(SUM(MIN(v0.c0))) THEN GROUP_CONCAT(SUM(v0.c0)) ELSE ((COUNT(*)) BETWEEN (GROUP_CONCAT(v0.c0)) AND (MIN(TOTAL(0.16463457639597512)))) END UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (CASE WHEN GROUP_CONCAT(SUM(MIN(v0.c0))) THEN GROUP_CONCAT(SUM(v0.c0)) ELSE ((COUNT(*)) BETWEEN (GROUP_CONCAT(v0.c0)) AND (MIN(TOTAL(0.16463457639597512)))) END)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((CASE WHEN GROUP_CONCAT(SUM(MIN(v0.c0))) THEN GROUP_CONCAT(SUM(v0.c0)) ELSE ((COUNT(*)) BETWEEN (GROUP_CONCAT(v0.c0)) AND (MIN(TOTAL(0.16463457639597512)))) END) ISNULL);
SELECT MIN(CASE WHEN CAST(vt1.c0 AS NUMERIC) THEN ((v0.c0)AND(v0.c0)) WHEN (((v0.c0))>((vt1.c0))) THEN v0.c0 COLLATE NOCASE WHEN v0.c0 THEN CAST(v0.c0 AS REAL) ELSE -5.77027631E8 END) FROM v0, vt1 ORDER BY ((CAST(v0.c0 AS INTEGER)) NOT BETWEEN (CASE v0.c0  WHEN v0.c0 THEN vt1.c0 END) AND ((~ (vt1.c0))))  NULLS LAST;
SELECT ALL rt0.c2, rt0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON ((CASE vt1.c0  WHEN v0.c0 THEN vt1.c0 WHEN '' THEN v0.c0 WHEN vt1.c0 THEN NULL END)-(((vt1.c0) NOTNULL))) INNER JOIN vt1 ON (((vt1.c0, rt0.c2, '-2003484394')) NOT BETWEEN ((x'', ((vt1.c0) ISNULL), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))) AND (((((rt0.c0)) NOT BETWEEN ((0.6823806444523113)) AND ((rt0.c1))), x'', (((rt0.c2))>((vt1.c0))))));
SELECT DISTINCT * FROM vt0, vt1, v0;
SELECT DISTINCT * FROM vt0, vt1, v0 WHERE (((((vt1.c0)OR(vt1.c0 COLLATE NOCASE)))OR(CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 END))) UNION SELECT DISTINCT * FROM vt0, vt1, v0 WHERE ((NOT (((((vt1.c0)OR(vt1.c0 COLLATE NOCASE)))OR(CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 END))))) UNION SELECT DISTINCT * FROM vt0, vt1, v0 WHERE (((((((vt1.c0)OR(vt1.c0 COLLATE NOCASE)))OR(CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 END))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1, v0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM) NOT NULL)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0 COLLATE RTRIM) NOT NULL)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0 COLLATE RTRIM) NOT NULL)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c0, rt0.c1, rt0.c2, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt1.c0;
SELECT rt0.c0, rt0.c1, rt0.c2, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt1.c0 HAVING rt0.c1 UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt1.c0 HAVING (NOT (rt0.c1)) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt1.c0 HAVING ((rt0.c1) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt1.c0;
SELECT rt0.c0, rt0.c1, rt0.c2, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt1.c0 HAVING rt0.c1 UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt1.c0 HAVING (NOT (rt0.c1)) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt1.c0 HAVING ((rt0.c1) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt1.c0;
SELECT ALL * FROM v0, vt1, rt0, vt0;
SELECT ALL * FROM v0, vt1, rt0, vt0 WHERE ((NOT ((0xffffffffb1fd6fb7 IN ())))) UNION ALL SELECT * FROM v0, vt1, rt0, vt0 WHERE ((NOT ((NOT ((0Xffffffffb1fd6fb7 IN ())))))) UNION ALL SELECT ALL * FROM v0, vt1, rt0, vt0 NOT INDEXED WHERE ((((NOT ((0xffffffffb1fd6fb7 IN ())))) ISNULL));
SELECT ALL * FROM v0, vt1, rt0, vt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (json_type('988275440' COLLATE RTRIM)) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (json_type('988275440' COLLATE RTRIM)))) UNION SELECT DISTINCT * FROM v0 WHERE (((json_type('988275440' COLLATE RTRIM)) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM vt0, vt1, rt0, v0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM vt0, vt1, rt0, v0 WHERE ((((((((vt0.c0, rt0.c0, rt0.c1, vt0.c0, vt1.c0)) BETWEEN ((rt0.c0, vt0.c0, rt0.c0, vt1.c0, v0.c0)) AND ((rt0.c0, 0.2400490755796567, v0.c0, rt0.c1, rt0.c0))))AND(UNLIKELY(DISTINCT v0.c0))))OR(((rt0.c1)<<(v0.c0))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM vt0, vt1, rt0, v0 WHERE ((NOT ((((((((vt0.c0, rt0.c0, rt0.c1, vt0.c0, vt1.c0)) BETWEEN ((rt0.c0, vt0.c0, rt0.c0, vt1.c0, v0.c0)) AND ((rt0.c0, 0.2400490755796567, v0.c0, rt0.c1, rt0.c0))))AND(UNLIKELY(DISTINCT v0.c0))))OR(((rt0.c1)<<(v0.c0))))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM vt0, vt1, rt0, v0 WHERE ((((((((((vt0.c0, rt0.c0, rt0.c1, vt0.c0, vt1.c0)) BETWEEN ((rt0.c0, vt0.c0, rt0.c0, vt1.c0, v0.c0)) AND ((rt0.c0, 0.2400490755796567, v0.c0, rt0.c1, rt0.c0))))AND(UNLIKELY(DISTINCT v0.c0))))OR(((rt0.c1)<<(v0.c0))))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM vt0, vt1, rt0, v0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT v0.c0, vt0.c0, rt0.c0 FROM v0, vt0, vt1, rt0 GROUP BY v0.c0, vt0.c0, rt0.c0;
SELECT ALL v0.c0, vt0.c0, rt0.c0 FROM v0, vt0, vt1, rt0 GROUP BY v0.c0, vt0.c0, rt0.c0 HAVING COUNT(v0.c0) UNION ALL SELECT v0.c0, vt0.c0, rt0.c0 FROM v0, vt0, vt1, rt0 GROUP BY v0.c0, vt0.c0, rt0.c0 HAVING (NOT (COUNT(v0.c0))) UNION ALL SELECT v0.c0, vt0.c0, rt0.c0 FROM v0, vt0, vt1, rt0 GROUP BY v0.c0, vt0.c0, rt0.c0 HAVING ((COUNT(v0.c0)) ISNULL);
SELECT v0.c0, vt0.c0, rt0.c0 FROM v0, vt0, vt1, rt0 GROUP BY v0.c0, vt0.c0, rt0.c0;
SELECT ALL v0.c0, vt0.c0, rt0.c0 FROM v0, vt0, vt1, rt0 GROUP BY v0.c0, vt0.c0, rt0.c0 HAVING COUNT(v0.c0) UNION ALL SELECT v0.c0, vt0.c0, rt0.c0 FROM v0, vt0, vt1, rt0 GROUP BY v0.c0, vt0.c0, rt0.c0 HAVING (NOT (COUNT(v0.c0))) UNION ALL SELECT v0.c0, vt0.c0, rt0.c0 FROM v0, vt0, vt1, rt0 GROUP BY v0.c0, vt0.c0, rt0.c0 HAVING ((COUNT(v0.c0)) ISNULL);
SELECT v0.c0, vt0.c0, rt0.c0 FROM v0, vt0, vt1, rt0 GROUP BY v0.c0, vt0.c0, rt0.c0;
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (UPPER((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (UPPER((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((UPPER((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0))<((vt0.c0)))))!=((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((((vt0.c0))<((vt0.c0)))))<>((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((((vt0.c0))<((vt0.c0)))))<>((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((vt1.c0 COLLATE BINARY)OR((NOT (vt1.c0)))))OR(vt1.c0))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0 COLLATE BINARY)OR((NOT (vt1.c0)))))OR(vt1.c0))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((((vt1.c0 COLLATE BINARY)OR((NOT (vt1.c0)))))OR(vt1.c0))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0, rt0.c1, v0.c0 FROM vt1 LEFT OUTER JOIN rt0 ON CAST(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) AS INTEGER) RIGHT OUTER JOIN v0 ON ((((((((CASE WHEN v0.c0 THEN NULL END)OR(rt0.c2 COLLATE BINARY)))AND(((rt0.c2)%(vt1.c0)))))AND(((vt1.c0)AND(rt0.c0)))))OR((NOT (v0.c0)))) GROUP BY vt1.c0, rt0.c1, v0.c0;
SELECT vt1.c0, rt0.c1, v0.c0 FROM vt1 LEFT OUTER JOIN rt0 ON CAST(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) AS INTEGER) RIGHT OUTER JOIN v0 ON ((((((((CASE WHEN v0.c0 THEN NULL END)OR(rt0.c2 COLLATE BINARY)))AND(((rt0.c2)%(vt1.c0)))))AND(((vt1.c0)AND(rt0.c0)))))OR((NOT (v0.c0)))) GROUP BY vt1.c0, rt0.c1, v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0, rt0.c1, v0.c0 FROM vt1 LEFT OUTER JOIN rt0 ON CAST(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) AS INTEGER) RIGHT OUTER JOIN v0 ON ((((((((CASE WHEN v0.c0 THEN NULL END)OR(rt0.c2 COLLATE BINARY)))AND(((rt0.c2)%(vt1.c0)))))AND(((vt1.c0)AND(rt0.c0)))))OR((NOT (v0.c0)))) GROUP BY vt1.c0, rt0.c1, v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0, rt0.c1, v0.c0 FROM vt1 LEFT OUTER JOIN rt0 ON CAST(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) AS INTEGER) RIGHT OUTER JOIN v0 ON ((((((((CASE WHEN v0.c0 THEN NULL END)OR(rt0.c2 COLLATE BINARY)))AND(((rt0.c2)%(vt1.c0)))))AND(((vt1.c0)AND(rt0.c0)))))OR((NOT (v0.c0)))) GROUP BY vt1.c0, rt0.c1, v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0, rt0.c1, v0.c0 FROM vt1 LEFT OUTER JOIN rt0 ON CAST(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) AS INTEGER) RIGHT OUTER JOIN v0 ON ((((((((CASE WHEN v0.c0 THEN NULL END)OR(rt0.c2 COLLATE BINARY)))AND(((rt0.c2)%(vt1.c0)))))AND(((vt1.c0)AND(rt0.c0)))))OR((NOT (v0.c0)))) GROUP BY vt1.c0, rt0.c1, v0.c0;
SELECT vt1.c0, rt0.c1, v0.c0 FROM vt1 LEFT OUTER JOIN rt0 ON CAST(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) AS INTEGER) RIGHT OUTER JOIN v0 ON ((((((((CASE WHEN v0.c0 THEN NULL END)OR(rt0.c2 COLLATE BINARY)))AND(((rt0.c2)%(vt1.c0)))))AND(((vt1.c0)AND(rt0.c0)))))OR((NOT (v0.c0)))) GROUP BY vt1.c0, rt0.c1, v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0, rt0.c1, v0.c0 FROM vt1 LEFT OUTER JOIN rt0 ON CAST(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) AS INTEGER) RIGHT OUTER JOIN v0 ON ((((((((CASE WHEN v0.c0 THEN NULL END)OR(rt0.c2 COLLATE BINARY)))AND(((rt0.c2)%(vt1.c0)))))AND(((vt1.c0)AND(rt0.c0)))))OR((NOT (v0.c0)))) GROUP BY vt1.c0, rt0.c1, v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0, rt0.c1, v0.c0 FROM vt1 LEFT OUTER JOIN rt0 ON CAST(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) AS INTEGER) RIGHT OUTER JOIN v0 ON ((((((((CASE WHEN v0.c0 THEN NULL END)OR(rt0.c2 COLLATE BINARY)))AND(((rt0.c2)%(vt1.c0)))))AND(((vt1.c0)AND(rt0.c0)))))OR((NOT (v0.c0)))) GROUP BY vt1.c0, rt0.c1, v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0, rt0.c1, v0.c0 FROM vt1 LEFT OUTER JOIN rt0 ON CAST(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) AS INTEGER) RIGHT OUTER JOIN v0 ON ((((((((CASE WHEN v0.c0 THEN NULL END)OR(rt0.c2 COLLATE BINARY)))AND(((rt0.c2)%(vt1.c0)))))AND(((vt1.c0)AND(rt0.c0)))))OR((NOT (v0.c0)))) GROUP BY vt1.c0, rt0.c1, v0.c0;
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR('0.49455055253672553')))=(686809704))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((((vt0.c0)AND(vt0.c0)))OR('0.49455055253672553')))=(686809704))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c0)))OR('0.49455055253672553')))==(686809704))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (((rt0.c1) NOT BETWEEN (((((((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(rt0.c0))) AND (((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)))AND(vt0.c0)))OR(rt0.c0))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (((rt0.c1) NOT BETWEEN (((((((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(rt0.c0))) AND (((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)))AND(vt0.c0)))OR(rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((((rt0.c1) NOT BETWEEN (((((((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(rt0.c0))) AND (((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)))AND(vt0.c0)))OR(rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT ALL rt0.c0 FROM v0, vt1, rt0, vt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM v0, vt1, rt0, vt0 WHERE (((((vt0.c0)GLOB(vt1.c0)))>(CAST(vt0.c0 AS BLOB)))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM v0, vt1, rt0, vt0 WHERE ((NOT (((((vt0.c0)GLOB(vt1.c0)))>(CAST(vt0.c0 AS BLOB)))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM v0, vt1, rt0, vt0 WHERE (((((((vt0.c0)GLOB(vt1.c0)))>(CAST(vt0.c0 AS BLOB)))) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM v0, vt1, rt0, vt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0, rt0.c1, vt0.c0, v0.c0, rt0.c2, vt1.c0 FROM vt0, v0, vt1, rt0 GROUP BY rt0.c0, rt0.c1, vt0.c0, v0.c0, rt0.c2, vt1.c0;
SELECT rt0.c0, rt0.c1, vt0.c0, v0.c0, rt0.c2, vt1.c0 FROM vt0, v0, vt1, rt0 GROUP BY rt0.c0, rt0.c1, vt0.c0, v0.c0, rt0.c2, vt1.c0 HAVING ((((COUNT(*))>>(AVG(rt0.c1)))) BETWEEN ('') AND (x'90d0')) UNION ALL SELECT ALL rt0.c0, rt0.c1, vt0.c0, v0.c0, rt0.c2, vt1.c0 FROM vt0, v0, vt1, rt0 GROUP BY rt0.c0, rt0.c1, vt0.c0, v0.c0, rt0.c2, vt1.c0 HAVING (NOT (((((COUNT(*))>>(AVG(rt0.c1)))) BETWEEN ('') AND (x'90d0')))) UNION ALL SELECT rt0.c0, rt0.c1, vt0.c0, v0.c0, rt0.c2, vt1.c0 FROM vt0, v0, vt1, rt0 GROUP BY rt0.c0, rt0.c1, vt0.c0, v0.c0, rt0.c2, vt1.c0 HAVING ((((((COUNT(*))>>(AVG(rt0.c1)))) BETWEEN ('') AND (x'90d0'))) ISNULL);
SELECT ALL rt0.c0, rt0.c1, vt0.c0, v0.c0, rt0.c2, vt1.c0 FROM vt0, v0, vt1, rt0 GROUP BY rt0.c0, rt0.c1, vt0.c0, v0.c0, rt0.c2, vt1.c0;
SELECT rt0.c0, rt0.c1, vt0.c0, v0.c0, rt0.c2, vt1.c0 FROM vt0, v0, vt1, rt0 GROUP BY rt0.c0, rt0.c1, vt0.c0, v0.c0, rt0.c2, vt1.c0 HAVING ((((COUNT(*))>>(AVG(rt0.c1)))) BETWEEN ('') AND (x'90d0')) UNION ALL SELECT ALL rt0.c0, rt0.c1, vt0.c0, v0.c0, rt0.c2, vt1.c0 FROM vt0, v0, vt1, rt0 GROUP BY rt0.c0, rt0.c1, vt0.c0, v0.c0, rt0.c2, vt1.c0 HAVING (NOT (((((COUNT(*))>>(AVG(rt0.c1)))) BETWEEN ('') AND (x'90d0')))) UNION ALL SELECT rt0.c0, rt0.c1, vt0.c0, v0.c0, rt0.c2, vt1.c0 FROM vt0, v0, vt1, rt0 GROUP BY rt0.c0, rt0.c1, vt0.c0, v0.c0, rt0.c2, vt1.c0 HAVING ((((((COUNT(*))>>(AVG(rt0.c1)))) BETWEEN ('') AND (x'90d0'))) ISNULL);
SELECT ALL rt0.c0, rt0.c1, vt0.c0, v0.c0, rt0.c2, vt1.c0 FROM vt0, v0, vt1, rt0 GROUP BY rt0.c0, rt0.c1, vt0.c0, v0.c0, rt0.c2, vt1.c0;
SELECT ALL TOTAL((((rt0.c1)) BETWEEN (((((rt0.c1))==((vt1.c0))))) AND ((CASE WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c2 END)))) FROM vt1, rt0, vt0;
SELECT ALL * FROM vt0, rt0, v0;
SELECT * FROM vt0, rt0, v0 WHERE ((((NULL, (((v0.c0))>((v0.c0))), (v0.c0 IN (rt0.c2))))<(((((((((((((('^{')OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))AND(v0.c0)), ((vt0.c0)LIKE(vt0.c0)), (NOT (v0.c0)))))) UNION ALL SELECT * FROM vt0, rt0, v0 WHERE ((NOT ((((NULL, (((v0.c0))>((v0.c0))), (v0.c0 IN (rt0.c2))))<(((((((((((((('^{')OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))AND(v0.c0)), ((vt0.c0)LIKE(vt0.c0)), (NOT (v0.c0)))))))) UNION ALL SELECT * FROM vt0, rt0, v0 WHERE ((((((NULL, (((v0.c0))>((v0.c0))), (v0.c0 IN (rt0.c2))))<(((((((((((((('^{')OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))AND(v0.c0)), ((vt0.c0)LIKE(vt0.c0)), (NOT (v0.c0)))))) ISNULL));
SELECT ALL * FROM vt0, rt0, v0;
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE (((NOT (rt0.c2)) IN ())) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT (((NOT (rt0.c2)) IN ())))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE (((((NOT (rt0.c2)) IN ())) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT vt1.c0, rt0.c2, vt0.c0, rt0.c0 FROM vt1, v0, vt0, rt0 GROUP BY vt1.c0, rt0.c2, vt0.c0, rt0.c0;
SELECT vt1.c0, rt0.c2, vt0.c0, rt0.c0 FROM vt1, v0, vt0, rt0 WHERE (((((CASE WHEN v0.c0 THEN v0.c0 END)AND(((((vt1.c0)OR(rt0.c0)))OR(vt1.c0)))))OR(((v0.c0) BETWEEN (vt0.c0) AND (rt0.c2))))) GROUP BY vt1.c0, rt0.c2, vt0.c0, rt0.c0 UNION SELECT ALL vt1.c0, rt0.c2, vt0.c0, rt0.c0 FROM vt1, v0, vt0, rt0 WHERE ((NOT (((((CASE WHEN v0.c0 THEN v0.c0 END)AND(((((vt1.c0)OR(rt0.c0)))OR(vt1.c0)))))OR(((v0.c0) BETWEEN (vt0.c0) AND (rt0.c2))))))) GROUP BY vt1.c0, rt0.c2, vt0.c0, rt0.c0 UNION SELECT ALL vt1.c0, rt0.c2, vt0.c0, rt0.c0 FROM vt1, v0, vt0, rt0 WHERE (((((((CASE WHEN v0.c0 THEN v0.c0 END)AND(((((vt1.c0)OR(rt0.c0)))OR(vt1.c0)))))OR(((v0.c0) BETWEEN (vt0.c0) AND (rt0.c2))))) ISNULL)) GROUP BY vt1.c0, rt0.c2, vt0.c0, rt0.c0;
SELECT vt1.c0, rt0.c2, vt0.c0, rt0.c0 FROM vt1, v0, vt0, rt0 GROUP BY vt1.c0, rt0.c2, vt0.c0, rt0.c0;
SELECT ALL vt0.c0 FROM v0, rt0, vt0, vt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, rt0, vt0, vt1 GROUP BY vt0.c0 HAVING GROUP_CONCAT(TOTAL(TOTAL(v0.c0))) UNION ALL SELECT ALL vt0.c0 FROM v0, rt0, vt0, vt1 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(TOTAL(TOTAL(v0.c0))))) UNION ALL SELECT vt0.c0 FROM v0, rt0, vt0, vt1 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(TOTAL(TOTAL(v0.c0)))) ISNULL);
SELECT ALL rt0.c1, vt1.c0, v0.c0, rt0.c0, rt0.c2 FROM v0, rt0, vt1;
SELECT rt0.c1, vt1.c0, v0.c0, rt0.c0, rt0.c2 FROM v0, rt0, vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((CAST(rt0.c0 AS REAL))) AND (((rt0.c1 IN (v0.c0, rt0.c1)))))) UNION ALL SELECT ALL rt0.c1, vt1.c0, v0.c0, rt0.c0, rt0.c2 FROM v0, rt0, vt1 WHERE ((NOT ((((vt1.c0)) NOT BETWEEN ((CAST(rt0.c0 AS REAL))) AND (((rt0.c1 IN (v0.c0, rt0.c1)))))))) UNION ALL SELECT rt0.c1, vt1.c0, v0.c0, rt0.c0, rt0.c2 FROM v0, rt0, vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((CAST(rt0.c0 AS REAL))) AND (((rt0.c1 IN (v0.c0, rt0.c1)))))) ISNULL));
SELECT ALL rt0.c1, vt1.c0, v0.c0, rt0.c0, rt0.c2 FROM v0, rt0, vt1;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (NULL) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM v0 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL rt0.c0, v0.c0, rt0.c2, vt0.c0, vt1.c0, rt0.c1 FROM vt1, rt0 FULL OUTER JOIN vt0 ON CASE (((rt0.c2))<>((rt0.c0)))  WHEN 0.1353803530524168 THEN ((((((((vt1.c0)OR(vt1.c0)))OR(v0.c0)))OR(v0.c0)))AND(rt0.c1)) END CROSS JOIN v0 ON CASE WHEN JULIANDAY(rt0.c1, vt1.c0, rt0.c0) THEN (rt0.c2 IN (vt1.c0)) WHEN ((x'') IS FALSE) THEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)) WHEN ((((((((rt0.c2)OR(v0.c0)))OR(rt0.c2)))OR(rt0.c2)))AND(v0.c0)) THEN (rt0.c1 IN ()) END GROUP BY rt0.c0, v0.c0, rt0.c2, vt0.c0, vt1.c0, rt0.c1;
SELECT rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2 HAVING MIN(NULL) UNION ALL SELECT rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (MIN(NULL))) UNION ALL SELECT rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((MIN(NULL)) ISNULL);
SELECT rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2 HAVING MIN(NULL) UNION ALL SELECT rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (MIN(NULL))) UNION ALL SELECT rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((MIN(NULL)) ISNULL);
SELECT rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (vt0.c0 COLLATE NOCASE) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (vt0.c0 COLLATE NOCASE))) UNION ALL SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1 NOT INDEXED, vt0 WHERE ((((vt1.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, ((vt1.c0)AND(vt1.c0)), ((vt0.c0)<>(0.3969501984277819)))) AND ((((vt1.c0) IS TRUE), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END, ((vt1.c0)!=(vt1.c0)))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT ((((vt1.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, ((vt1.c0)AND(vt1.c0)), ((vt0.c0)<>(0.3969501984277819)))) AND ((((vt1.c0) IS TRUE), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END, ((vt1.c0)<>(vt1.c0)))))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((((((vt1.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, ((vt1.c0)AND(vt1.c0)), ((vt0.c0)<>(0.3969501984277819)))) AND ((((vt1.c0) IS TRUE), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END, ((vt1.c0)<>(vt1.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT ALL v0.c0, vt0.c0, vt1.c0 FROM v0 INNER JOIN vt0 ON vt0.c0 FULL OUTER JOIN vt1 ON vt0.c0 COLLATE BINARY GROUP BY v0.c0, vt0.c0, vt1.c0;
SELECT ALL v0.c0, vt0.c0, vt1.c0 FROM v0 INNER JOIN vt0 ON vt0.c0 FULL OUTER JOIN vt1 ON vt0.c0 COLLATE BINARY WHERE (CAST(vt0.c0 AS INTEGER) COLLATE NOCASE) GROUP BY v0.c0, vt0.c0, vt1.c0 UNION SELECT v0.c0, vt0.c0, vt1.c0 FROM v0 INNER JOIN vt0 ON vt0.c0 FULL OUTER JOIN vt1 ON vt0.c0 COLLATE BINARY WHERE ((NOT (CAST(vt0.c0 AS INTEGER) COLLATE NOCASE))) GROUP BY v0.c0, vt0.c0, vt1.c0 UNION SELECT ALL v0.c0, vt0.c0, vt1.c0 FROM v0 INNER JOIN vt0 ON vt0.c0 FULL OUTER JOIN vt1 ON vt0.c0 COLLATE BINARY WHERE (((CAST(vt0.c0 AS INTEGER) COLLATE NOCASE) ISNULL)) GROUP BY v0.c0, vt0.c0, vt1.c0;
SELECT ALL v0.c0, vt0.c0, vt1.c0 FROM v0 INNER JOIN vt0 ON vt0.c0 FULL OUTER JOIN vt1 ON vt0.c0 COLLATE BINARY GROUP BY v0.c0, vt0.c0, vt1.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING MAX(COUNT(rt0.c2)) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (MAX(COUNT(rt0.c2)))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((MAX(COUNT(rt0.c2))) ISNULL);
SELECT ALL rt0.c2 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 WHERE (((((rt0.c0) ISNULL)) BETWEEN (((rt0.c0) NOTNULL)) AND (0.9175256165328809))) UNION ALL SELECT rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c0) ISNULL)) BETWEEN (((rt0.c0) NOTNULL)) AND (0.9175256165328809))))) UNION ALL SELECT rt0.c2 FROM rt0 WHERE (((((((rt0.c0) ISNULL)) BETWEEN (((rt0.c0) NOTNULL)) AND (0.9175256165328809))) ISNULL));
SELECT ALL rt0.c2 FROM rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), ((vt0.c0)-(vt0.c0)), vt0.c0 COLLATE NOCASE))==((((vt0.c0) NOTNULL), x'', CAST(vt0.c0 AS NUMERIC))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), ((vt0.c0)-(vt0.c0)), vt0.c0 COLLATE NOCASE))=((((vt0.c0) NOTNULL), x'', CAST(vt0.c0 AS NUMERIC))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), ((vt0.c0)-(vt0.c0)), vt0.c0 COLLATE NOCASE))==((((vt0.c0) NOTNULL), x'', CAST(vt0.c0 AS NUMERIC))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt1.c0, v0.c0 FROM v0 INNER JOIN vt1 ON ((x'9dc6') NOTNULL) GROUP BY vt1.c0, v0.c0;
SELECT vt1.c0, v0.c0 FROM v0 INNER JOIN vt1 ON ((x'9dc6') NOTNULL) WHERE (CASE ((v0.c0) BETWEEN (vt1.c0) AND (vt1.c0))  WHEN TRIM(DISTINCT v0.c0) THEN CASE WHEN v0.c0 THEN vt1.c0 WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 ELSE v0.c0 END ELSE (v0.c0 IN ()) END) GROUP BY vt1.c0, v0.c0 UNION SELECT ALL vt1.c0, v0.c0 FROM v0 INNER JOIN vt1 ON ((x'9dc6') NOTNULL) WHERE ((NOT (CASE ((v0.c0) BETWEEN (vt1.c0) AND (vt1.c0))  WHEN TRIM(DISTINCT v0.c0) THEN CASE WHEN v0.c0 THEN vt1.c0 WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 ELSE v0.c0 END ELSE (v0.c0 IN ()) END))) GROUP BY vt1.c0, v0.c0 UNION SELECT ALL vt1.c0, v0.c0 FROM v0 INNER JOIN vt1 ON ((x'9dc6') NOTNULL) WHERE (((CASE ((v0.c0) BETWEEN (vt1.c0) AND (vt1.c0))  WHEN TRIM(DISTINCT v0.c0) THEN CASE WHEN v0.c0 THEN vt1.c0 WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 ELSE v0.c0 END ELSE (v0.c0 IN ()) END) ISNULL)) GROUP BY vt1.c0, v0.c0;
SELECT ALL vt1.c0, v0.c0 FROM v0 INNER JOIN vt1 ON ((x'9dc6') NOTNULL) GROUP BY vt1.c0, v0.c0;
SELECT rt0.c2 FROM rt0, vt1 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, vt1 GROUP BY rt0.c2 HAVING COUNT(GROUP_CONCAT(vt1.c0)) UNION ALL SELECT rt0.c2 FROM rt0, vt1 GROUP BY rt0.c2 HAVING (NOT (COUNT(GROUP_CONCAT(vt1.c0)))) UNION ALL SELECT rt0.c2 FROM rt0, vt1 GROUP BY rt0.c2 HAVING ((COUNT(GROUP_CONCAT(vt1.c0))) ISNULL);
SELECT MAX((((v0.c0)) NOT BETWEEN (((~ (v0.c0)))) AND ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))) FROM v0;
SELECT ALL vt0.c0, v0.c0, vt1.c0 FROM vt0 INNER JOIN vt1 ON CAST(((vt1.c0)<=(v0.c0)) AS NUMERIC) RIGHT OUTER JOIN v0 ON vt1.c0;
SELECT DISTINCT rt0.c1, v0.c0, vt1.c0, rt0.c0, rt0.c2, vt0.c0 FROM vt1 LEFT OUTER JOIN v0 ON CAST(((vt1.c0)GLOB(v0.c0)) AS REAL) RIGHT OUTER JOIN rt0 ON rt0.c0 FULL OUTER JOIN vt0 ON rt0.c0;
SELECT DISTINCT rt0.c1, v0.c0, vt1.c0, rt0.c0, rt0.c2, vt0.c0 FROM vt1 LEFT OUTER JOIN v0 ON CAST(((vt1.c0)GLOB(v0.c0)) AS REAL) RIGHT OUTER JOIN rt0 ON rt0.c0 FULL OUTER JOIN vt0 ON rt0.c0 WHERE (((((vt1.c0) NOTNULL)) BETWEEN ((vt0.c0 IN ())) AND (CASE rt0.c1  WHEN vt0.c0 THEN rt0.c2 END))) UNION SELECT DISTINCT rt0.c1, v0.c0, vt1.c0, rt0.c0, rt0.c2, vt0.c0 FROM vt1 LEFT OUTER JOIN v0 ON CAST(((vt1.c0)GLOB(v0.c0)) AS REAL) RIGHT OUTER JOIN rt0 ON rt0.c0 FULL OUTER JOIN vt0 ON rt0.c0 WHERE ((NOT (((((vt1.c0) NOTNULL)) BETWEEN ((vt0.c0 IN ())) AND (CASE rt0.c1  WHEN vt0.c0 THEN rt0.c2 END))))) UNION SELECT DISTINCT rt0.c1, v0.c0, vt1.c0, rt0.c0, rt0.c2, vt0.c0 FROM vt1 LEFT OUTER JOIN v0 ON CAST(((vt1.c0)GLOB(v0.c0)) AS REAL) RIGHT OUTER JOIN rt0 ON rt0.c0 FULL OUTER JOIN vt0 ON rt0.c0 WHERE (((((((vt1.c0) NOTNULL)) BETWEEN ((vt0.c0 IN ())) AND (CASE rt0.c1  WHEN vt0.c0 THEN rt0.c2 END))) ISNULL));
SELECT DISTINCT rt0.c1, v0.c0, vt1.c0, rt0.c0, rt0.c2, vt0.c0 FROM vt1 LEFT OUTER JOIN v0 ON CAST(((vt1.c0)GLOB(v0.c0)) AS REAL) RIGHT OUTER JOIN rt0 ON rt0.c0 FULL OUTER JOIN vt0 ON rt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (PRINTF(((v0.c0) IS TRUE), ((v0.c0)GLOB(v0.c0)), (((v0.c0, v0.c0, x'')) BETWEEN ((v0.c0, v0.c0, NULL)) AND (('-1664874554', v0.c0, v0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (PRINTF(((v0.c0) IS TRUE), ((v0.c0)GLOB(v0.c0)), (((v0.c0, v0.c0, x'')) BETWEEN ((v0.c0, v0.c0, NULL)) AND (('-1664874554', v0.c0, v0.c0))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((PRINTF(((v0.c0) IS TRUE), ((v0.c0)GLOB(v0.c0)), (((v0.c0, v0.c0, x'')) BETWEEN ((v0.c0, v0.c0, NULL)) AND (('-1664874554', v0.c0, v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON (+ (((rt0.c0) IS TRUE))) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON (+ (((rt0.c0) IS TRUE))) GROUP BY rt0.c1 HAVING TRIM(COUNT(MAX(vt0.c0))) UNION ALL SELECT ALL rt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON (+ (((rt0.c0) IS TRUE))) GROUP BY rt0.c1 HAVING (NOT (TRIM(COUNT(MAX(vt0.c0))))) UNION ALL SELECT rt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON (+ (((rt0.c0) IS TRUE))) GROUP BY rt0.c1 HAVING ((TRIM(COUNT(MAX(vt0.c0)))) ISNULL);
SELECT rt0.c0 FROM v0, rt0, vt1;
SELECT ALL rt0.c0 FROM v0, rt0, vt1 WHERE (CASE rt0.c0  WHEN rt0.c1 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 ELSE rt0.c0 END COLLATE NOCASE) UNION ALL SELECT ALL rt0.c0 FROM v0, rt0, vt1 WHERE ((NOT (CASE rt0.c0  WHEN rt0.c1 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 ELSE rt0.c0 END COLLATE NOCASE))) UNION ALL SELECT ALL rt0.c0 FROM v0, rt0, vt1 WHERE (((CASE rt0.c0  WHEN rt0.c1 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 ELSE rt0.c0 END COLLATE NOCASE) ISNULL));
SELECT rt0.c0 FROM v0, rt0, vt1;
SELECT DISTINCT rt0.c1, vt1.c0, vt0.c0, rt0.c2, rt0.c0 FROM vt0, vt1 RIGHT OUTER JOIN rt0 ON ((((vt1.c0)*(rt0.c0)))==(((rt0.c2) BETWEEN (vt1.c0) AND (vt1.c0))));
SELECT DISTINCT rt0.c1, vt1.c0, vt0.c0, rt0.c2, rt0.c0 FROM vt0, vt1 RIGHT OUTER JOIN rt0 ON ((((vt1.c0)*(rt0.c0)))=(((rt0.c2) BETWEEN (vt1.c0) AND (vt1.c0)))) WHERE (-2098641951) UNION SELECT DISTINCT rt0.c1, vt1.c0, vt0.c0, rt0.c2, rt0.c0 FROM vt0, vt1 RIGHT OUTER JOIN rt0 ON ((((vt1.c0)*(rt0.c0)))=(((rt0.c2) BETWEEN (vt1.c0) AND (vt1.c0)))) WHERE ((NOT (-2098641951))) UNION SELECT DISTINCT rt0.c1, vt1.c0, vt0.c0, rt0.c2, rt0.c0 FROM vt0, vt1 RIGHT OUTER JOIN rt0 ON ((((vt1.c0)*(rt0.c0)))==(((rt0.c2) BETWEEN (vt1.c0) AND (vt1.c0)))) WHERE (((-2098641951) ISNULL));
SELECT DISTINCT rt0.c1, vt1.c0, vt0.c0, rt0.c2, rt0.c0 FROM vt0, vt1 RIGHT OUTER JOIN rt0 ON ((((vt1.c0)*(rt0.c0)))==(((rt0.c2) BETWEEN (vt1.c0) AND (vt1.c0))));
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((v0.c0) NOT NULL)) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((v0.c0) NOT NULL)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((v0.c0) NOT NULL)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING v0.c0 UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((v0.c0) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING v0.c0 UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((v0.c0) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL MAX(CAST((((NULL, vt0.c0, rt0.c0)) NOT BETWEEN ((vt0.c0, rt0.c1, rt0.c1)) AND ((rt0.c0, rt0.c1, rt0.c0))) AS TEXT)) FROM rt0, vt1, vt0;
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE (((((vt1.c0)/(vt1.c0))) BETWEEN (((NULL)LIKE(vt1.c0))) AND ((((vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, vt1.c0)))))) UNION ALL SELECT * FROM vt1 WHERE ((NOT (((((vt1.c0)/(vt1.c0))) BETWEEN (((NULL)LIKE(vt1.c0))) AND ((((vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, vt1.c0)))))))) UNION ALL SELECT ALL * FROM vt1 WHERE (((((((vt1.c0)/(vt1.c0))) BETWEEN (((NULL)LIKE(vt1.c0))) AND ((((vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, vt1.c0)))))) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM vt0, vt1, rt0, v0;
SELECT DISTINCT * FROM vt0, vt1, rt0, v0 WHERE ((((((v0.c0, rt0.c2, vt1.c0))<=((rt0.c0, vt0.c0, rt0.c2))))|(vt0.c0))) UNION SELECT DISTINCT * FROM vt0, vt1, rt0, v0 WHERE ((NOT ((((((v0.c0, rt0.c2, vt1.c0))<=((rt0.c0, vt0.c0, rt0.c2))))|(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0, vt1, rt0, v0 WHERE ((((((((v0.c0, rt0.c2, vt1.c0))<=((rt0.c0, vt0.c0, rt0.c2))))|(vt0.c0))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1, rt0, v0;
SELECT vt0.c0, vt1.c0, v0.c0, rt0.c2, rt0.c1, rt0.c0 FROM v0 CROSS JOIN vt0 ON CAST(CASE rt0.c0  WHEN v0.c0 THEN vt0.c0 END AS NUMERIC) CROSS JOIN rt0 ON ((DATE(rt0.c2, rt0.c2, 0.03621161062379463, rt0.c0, vt0.c0, v0.c0, '-318669630'))-(((vt1.c0)>>('657830819')))) CROSS JOIN vt1 ON (((load_extension(rt0.c2), v0.c0 COLLATE NOCASE, vt0.c0 COLLATE RTRIM))=((((vt0.c0)<>(rt0.c0)), rt0.c2 COLLATE NOCASE, ((vt0.c0) NOTNULL)))) GROUP BY vt0.c0, vt1.c0, v0.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT vt0.c0, vt1.c0, v0.c0, rt0.c2, rt0.c1, rt0.c0 FROM v0 CROSS JOIN vt0 ON CAST(CASE rt0.c0  WHEN v0.c0 THEN vt0.c0 END AS NUMERIC) CROSS JOIN rt0 ON ((DATE(rt0.c2, rt0.c2, 0.03621161062379463, rt0.c0, vt0.c0, v0.c0, '-318669630'))-(((vt1.c0)>>('657830819')))) CROSS JOIN vt1 ON (((load_extension(rt0.c2), v0.c0 COLLATE NOCASE, vt0.c0 COLLATE RTRIM))=((((vt0.c0)<>(rt0.c0)), rt0.c2 COLLATE NOCASE, ((vt0.c0) NOTNULL)))) WHERE (((0X3bc9084c)<=(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2))))) GROUP BY vt0.c0, vt1.c0, v0.c0, rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL vt0.c0, vt1.c0, v0.c0, rt0.c2, rt0.c1, rt0.c0 FROM v0 CROSS JOIN vt0 ON CAST(CASE rt0.c0  WHEN v0.c0 THEN vt0.c0 END AS NUMERIC) CROSS JOIN rt0 ON ((DATE(rt0.c2, rt0.c2, 0.03621161062379463, rt0.c0, vt0.c0, v0.c0, '-318669630'))-(((vt1.c0)>>('657830819')))) CROSS JOIN vt1 ON (((load_extension(rt0.c2), v0.c0 COLLATE NOCASE, vt0.c0 COLLATE RTRIM))==((((vt0.c0)<>(rt0.c0)), rt0.c2 COLLATE NOCASE, ((vt0.c0) NOTNULL)))) WHERE ((NOT (((0x3bc9084c)<=(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2))))))) GROUP BY vt0.c0, vt1.c0, v0.c0, rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL vt0.c0, vt1.c0, v0.c0, rt0.c2, rt0.c1, rt0.c0 FROM v0 CROSS JOIN vt0 ON CAST(CASE rt0.c0  WHEN v0.c0 THEN vt0.c0 END AS NUMERIC) CROSS JOIN rt0 ON ((DATE(rt0.c2, rt0.c2, 0.03621161062379463, rt0.c0, vt0.c0, v0.c0, '-318669630'))-(((vt1.c0)>>('657830819')))) CROSS JOIN vt1 ON (((load_extension(rt0.c2), v0.c0 COLLATE NOCASE, vt0.c0 COLLATE RTRIM))==((((vt0.c0)<>(rt0.c0)), rt0.c2 COLLATE NOCASE, ((vt0.c0) NOTNULL)))) WHERE (((((0X3bc9084c)<=(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2))))) ISNULL)) GROUP BY vt0.c0, vt1.c0, v0.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT vt0.c0, vt1.c0, v0.c0, rt0.c2, rt0.c1, rt0.c0 FROM v0 CROSS JOIN vt0 ON CAST(CASE rt0.c0  WHEN v0.c0 THEN vt0.c0 END AS NUMERIC) CROSS JOIN rt0 ON ((DATE(rt0.c2, rt0.c2, 0.03621161062379463, rt0.c0, vt0.c0, v0.c0, '-318669630'))-(((vt1.c0)>>('657830819')))) CROSS JOIN vt1 ON (((load_extension(rt0.c2), v0.c0 COLLATE NOCASE, vt0.c0 COLLATE RTRIM))=((((vt0.c0)<>(rt0.c0)), rt0.c2 COLLATE NOCASE, ((vt0.c0) NOTNULL)))) GROUP BY vt0.c0, vt1.c0, v0.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, vt1.c0, rt0.c0, vt0.c0 FROM rt0, vt0, vt1 GROUP BY rt0.c2, rt0.c1, vt1.c0, rt0.c0, vt0.c0;
SELECT ALL rt0.c2, rt0.c1, vt1.c0, rt0.c0, vt0.c0 FROM rt0, vt0, vt1 GROUP BY rt0.c2, rt0.c1, vt1.c0, rt0.c0, vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c2, rt0.c1, vt1.c0, rt0.c0, vt0.c0 FROM rt0, vt0, vt1 GROUP BY rt0.c2, rt0.c1, vt1.c0, rt0.c0, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c2, rt0.c1, vt1.c0, rt0.c0, vt0.c0 FROM rt0, vt0, vt1 GROUP BY rt0.c2, rt0.c1, vt1.c0, rt0.c0, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c2, rt0.c1, vt1.c0, rt0.c0, vt0.c0 FROM rt0, vt0, vt1 GROUP BY rt0.c2, rt0.c1, vt1.c0, rt0.c0, vt0.c0;
SELECT ALL rt0.c2, rt0.c1, vt1.c0, rt0.c0, vt0.c0 FROM rt0, vt0, vt1 GROUP BY rt0.c2, rt0.c1, vt1.c0, rt0.c0, vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c2, rt0.c1, vt1.c0, rt0.c0, vt0.c0 FROM rt0, vt0, vt1 GROUP BY rt0.c2, rt0.c1, vt1.c0, rt0.c0, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c2, rt0.c1, vt1.c0, rt0.c0, vt0.c0 FROM rt0, vt0, vt1 GROUP BY rt0.c2, rt0.c1, vt1.c0, rt0.c0, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c2, rt0.c1, vt1.c0, rt0.c0, vt0.c0 FROM rt0, vt0, vt1 GROUP BY rt0.c2, rt0.c1, vt1.c0, rt0.c0, vt0.c0;
SELECT ALL * FROM v0, rt0;
SELECT * FROM v0, rt0 WHERE (rt0.c2) UNION ALL SELECT * FROM v0, rt0 WHERE ((NOT (rt0.c2))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE (((rt0.c2) ISNULL));
SELECT ALL * FROM v0, rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((json_array(v0.c0, v0.c0) IN ())) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((json_array(v0.c0, v0.c0) IN ())))) UNION SELECT DISTINCT * FROM v0 WHERE ((((json_array(v0.c0, v0.c0) IN ())) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT rt0.c0, rt0.c1, vt1.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c1, vt1.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, vt1.c0, rt0.c2 FROM vt1, rt0 NOT INDEXED WHERE (((rt0.c0 COLLATE BINARY)<<(rt0.c2 COLLATE NOCASE))) GROUP BY rt0.c0, rt0.c1, vt1.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, vt1.c0, rt0.c2 FROM vt1, rt0 WHERE ((NOT (((rt0.c0 COLLATE BINARY)<<(rt0.c2 COLLATE NOCASE))))) GROUP BY rt0.c0, rt0.c1, vt1.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c1, vt1.c0, rt0.c2 FROM vt1, rt0 WHERE (((((rt0.c0 COLLATE BINARY)<<(rt0.c2 COLLATE NOCASE))) ISNULL)) GROUP BY rt0.c0, rt0.c1, vt1.c0, rt0.c2;
SELECT rt0.c0, rt0.c1, vt1.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c1, vt1.c0, rt0.c2;
SELECT vt1.c0, v0.c0 FROM v0, vt0, vt1 NOT INDEXED GROUP BY vt1.c0, v0.c0;
SELECT ALL vt1.c0, v0.c0 FROM v0, vt0, vt1 GROUP BY vt1.c0, v0.c0 HAVING (+ (((MIN(vt0.c0))AND(AVG(TOTAL(TOTAL(vt0.c0))))))) UNION ALL SELECT ALL vt1.c0, v0.c0 FROM v0, vt0, vt1 GROUP BY vt1.c0, v0.c0 HAVING (NOT ((+ (((MIN(vt0.c0))AND(AVG(TOTAL(TOTAL(vt0.c0))))))))) UNION ALL SELECT vt1.c0, v0.c0 FROM v0, vt0, vt1 GROUP BY vt1.c0, v0.c0 HAVING (((+ (((MIN(vt0.c0))AND(AVG(TOTAL(TOTAL(vt0.c0)))))))) ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c0 FROM vt0, v0, rt0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM vt0, v0, rt0 WHERE (((((vt0.c0)&(rt0.c2))) NOTNULL)) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM vt0, v0, rt0 WHERE ((NOT (((((vt0.c0)&(rt0.c2))) NOTNULL)))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM vt0, v0, rt0 WHERE (((((((vt0.c0)&(rt0.c2))) NOTNULL)) ISNULL));
SELECT rt0.c1, rt0.c2, rt0.c0 FROM vt0, v0, rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM vt0 NOT INDEXED, v0, vt1, rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM vt0, v0, vt1, rt0 WHERE (CAST(CASE rt0.c1  WHEN vt0.c0 THEN '-605566019' ELSE vt0.c0 END AS REAL)) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM vt0, v0, vt1, rt0 WHERE ((NOT (CAST(CASE rt0.c1  WHEN vt0.c0 THEN '-605566019' ELSE vt0.c0 END AS REAL)))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM vt0, v0, vt1, rt0 WHERE (((CAST(CASE rt0.c1  WHEN vt0.c0 THEN '-605566019' ELSE vt0.c0 END AS REAL)) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1 FROM vt0 NOT INDEXED, v0, vt1, rt0;
SELECT ALL v0.c0, vt1.c0 FROM vt1, v0 GROUP BY v0.c0, vt1.c0;
SELECT v0.c0, vt1.c0 FROM vt1, v0 WHERE (((((vt1.c0, v0.c0, vt1.c0))>=((v0.c0, vt1.c0, v0.c0))) IN ())) GROUP BY v0.c0, vt1.c0 UNION SELECT v0.c0, vt1.c0 FROM vt1, v0 WHERE ((NOT (((((vt1.c0, v0.c0, vt1.c0))>=((v0.c0, vt1.c0, v0.c0))) IN ())))) GROUP BY v0.c0, vt1.c0 UNION SELECT v0.c0, vt1.c0 FROM vt1, v0 WHERE (((((((vt1.c0, v0.c0, vt1.c0))>=((v0.c0, vt1.c0, v0.c0))) IN ())) ISNULL)) GROUP BY v0.c0, vt1.c0;
SELECT ALL v0.c0, vt1.c0 FROM vt1, v0 GROUP BY v0.c0, vt1.c0;
SELECT vt0.c0, v0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, v0, vt0 GROUP BY vt0.c0, v0.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT vt0.c0, v0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, v0, vt0 GROUP BY vt0.c0, v0.c0, rt0.c2, rt0.c1, rt0.c0 HAVING MAX(COUNT(*)) UNION ALL SELECT vt0.c0, v0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, v0, vt0 GROUP BY vt0.c0, v0.c0, rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (MAX(COUNT(*)))) UNION ALL SELECT ALL vt0.c0, v0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, v0, vt0 GROUP BY vt0.c0, v0.c0, rt0.c2, rt0.c1, rt0.c0 HAVING ((MAX(COUNT(*))) ISNULL);
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE (((v0.c0 COLLATE RTRIM)==(((v0.c0) IS TRUE)))) UNION ALL SELECT * FROM v0 WHERE ((NOT (((v0.c0 COLLATE RTRIM)==(((v0.c0) IS TRUE)))))) UNION ALL SELECT ALL * FROM v0 WHERE (((((v0.c0 COLLATE RTRIM)=(((v0.c0) IS TRUE)))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT vt1.c0, vt0.c0, rt0.c1, rt0.c0, rt0.c2, v0.c0 FROM vt1, v0, rt0, vt0;
SELECT DISTINCT vt1.c0, vt0.c0, rt0.c1, rt0.c0, rt0.c2, v0.c0 FROM vt1, v0, rt0, vt0 WHERE (x'') UNION SELECT DISTINCT vt1.c0, vt0.c0, rt0.c1, rt0.c0, rt0.c2, v0.c0 FROM vt1, v0, rt0, vt0 WHERE ((NOT (x''))) UNION SELECT DISTINCT vt1.c0, vt0.c0, rt0.c1, rt0.c0, rt0.c2, v0.c0 FROM vt1, v0, rt0, vt0 NOT INDEXED WHERE (((x'') ISNULL));
SELECT DISTINCT vt1.c0, vt0.c0, rt0.c1, rt0.c0, rt0.c2, v0.c0 FROM vt1, v0, rt0, vt0;
SELECT vt1.c0, v0.c0, rt0.c1, rt0.c0 FROM rt0 NOT INDEXED, vt1, v0 GROUP BY vt1.c0, v0.c0, rt0.c1, rt0.c0;
SELECT ALL vt1.c0, v0.c0, rt0.c1, rt0.c0 FROM rt0, vt1, v0 WHERE (x'') GROUP BY vt1.c0, v0.c0, rt0.c1, rt0.c0 UNION SELECT ALL vt1.c0, v0.c0, rt0.c1, rt0.c0 FROM rt0, vt1, v0 WHERE ((NOT (x''))) GROUP BY vt1.c0, v0.c0, rt0.c1, rt0.c0 UNION SELECT ALL vt1.c0, v0.c0, rt0.c1, rt0.c0 FROM rt0, vt1, v0 WHERE (((x'') ISNULL)) GROUP BY vt1.c0, v0.c0, rt0.c1, rt0.c0;
SELECT vt1.c0, v0.c0, rt0.c1, rt0.c0 FROM rt0 NOT INDEXED, vt1, v0 GROUP BY vt1.c0, v0.c0, rt0.c1, rt0.c0;
SELECT ALL vt1.c0 FROM vt1, v0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, v0 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0 FROM vt1, v0 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0 FROM vt1, v0 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0 FROM vt1, v0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, v0 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0 FROM vt1, v0 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0 FROM vt1, v0 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0 FROM vt1, v0 GROUP BY vt1.c0;
SELECT ALL rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM vt0, vt1, v0 CROSS JOIN rt0 ON json_patch((((rt0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0))), (((vt0.c0, v0.c0, rt0.c2))=((rt0.c2, rt0.c1, vt1.c0))));
SELECT ALL rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM vt0, vt1, v0 NOT INDEXED CROSS JOIN rt0 ON json_patch((((rt0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0))), (((vt0.c0, v0.c0, rt0.c2))==((rt0.c2, rt0.c1, vt1.c0)))) WHERE (CASE CAST(v0.c0 AS REAL)  WHEN '-726447896' THEN 0.7659333245289763 ELSE ((rt0.c1)||(vt1.c0)) END) UNION ALL SELECT rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM vt0, vt1, v0 CROSS JOIN rt0 ON json_patch((((rt0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0))), (((vt0.c0, v0.c0, rt0.c2))=((rt0.c2, rt0.c1, vt1.c0)))) WHERE ((NOT (CASE CAST(v0.c0 AS REAL)  WHEN '-726447896' THEN 0.7659333245289763 ELSE ((rt0.c1)||(vt1.c0)) END))) UNION ALL SELECT ALL rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM vt0, vt1, v0 CROSS JOIN rt0 ON json_patch((((rt0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0))), (((vt0.c0, v0.c0, rt0.c2))==((rt0.c2, rt0.c1, vt1.c0)))) WHERE (((CASE CAST(v0.c0 AS REAL)  WHEN '-726447896' THEN 0.7659333245289763 ELSE ((rt0.c1)||(vt1.c0)) END) ISNULL));
SELECT ALL rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM vt0, vt1, v0 CROSS JOIN rt0 ON json_patch((((rt0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0))), (((vt0.c0, v0.c0, rt0.c2))=((rt0.c2, rt0.c1, vt1.c0))));
SELECT DISTINCT * FROM v0, vt0 LEFT OUTER JOIN rt0 ON (- (rt0.c1)) COLLATE RTRIM;
SELECT DISTINCT * FROM v0, vt0 LEFT OUTER JOIN rt0 ON (- (rt0.c1)) COLLATE RTRIM WHERE ((vt0.c0 IN (x'4654', (rt0.c1 IN ())))) UNION SELECT DISTINCT * FROM v0, vt0 LEFT OUTER JOIN rt0 ON (- (rt0.c1)) COLLATE RTRIM WHERE ((NOT ((vt0.c0 IN (x'4654', (rt0.c1 IN ())))))) UNION SELECT DISTINCT * FROM v0, vt0 LEFT OUTER JOIN rt0 ON (- (rt0.c1)) COLLATE RTRIM WHERE ((((vt0.c0 IN (x'4654', (rt0.c1 IN ())))) ISNULL));
SELECT DISTINCT * FROM v0, vt0 LEFT OUTER JOIN rt0 ON (- (rt0.c1)) COLLATE RTRIM;
SELECT rt0.c0, rt0.c1, vt0.c0 FROM vt1, vt0, rt0 GROUP BY rt0.c0, rt0.c1, vt0.c0;
SELECT ALL rt0.c0, rt0.c1, vt0.c0 FROM vt1, vt0, rt0 WHERE (((((vt0.c0)<<(rt0.c2))) NOT BETWEEN (((vt1.c0)-(vt0.c0))) AND (rt0.c1 COLLATE BINARY))) GROUP BY rt0.c0, rt0.c1, vt0.c0 UNION SELECT ALL rt0.c0, rt0.c1, vt0.c0 FROM vt1, vt0, rt0 WHERE ((NOT (((((vt0.c0)<<(rt0.c2))) NOT BETWEEN (((vt1.c0)-(vt0.c0))) AND (rt0.c1 COLLATE BINARY))))) GROUP BY rt0.c0, rt0.c1, vt0.c0 UNION SELECT ALL rt0.c0, rt0.c1, vt0.c0 FROM vt1, vt0, rt0 WHERE (((((((vt0.c0)<<(rt0.c2))) NOT BETWEEN (((vt1.c0)-(vt0.c0))) AND (rt0.c1 COLLATE BINARY))) ISNULL)) GROUP BY rt0.c0, rt0.c1, vt0.c0;
SELECT rt0.c0, rt0.c1, vt0.c0 FROM vt1, vt0, rt0 GROUP BY rt0.c0, rt0.c1, vt0.c0;
SELECT ALL rt0.c1, rt0.c2 FROM v0, vt0, vt1, rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM v0, vt0, vt1, rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((SUM(rt0.c2))IS(0.9965453732648932)) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM v0, vt0, vt1, rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (((SUM(rt0.c2))IS(0.9965453732648932)))) UNION ALL SELECT rt0.c1, rt0.c2 FROM v0, vt0, vt1, rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((((SUM(rt0.c2))IS(0.9965453732648932))) ISNULL);
SELECT ALL rt0.c1, rt0.c2 FROM v0, vt0, vt1, rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM v0, vt0, vt1, rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((SUM(rt0.c2))IS(0.9965453732648932)) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM v0, vt0, vt1, rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (((SUM(rt0.c2))IS(0.9965453732648932)))) UNION ALL SELECT rt0.c1, rt0.c2 FROM v0, vt0, vt1, rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((((SUM(rt0.c2))IS(0.9965453732648932))) ISNULL);
SELECT ALL rt0.c1, rt0.c2 FROM v0, vt0, vt1, rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL * FROM v0, rt0, vt1;
SELECT * FROM v0, rt0, vt1 WHERE (((rt0.c2 COLLATE BINARY) NOTNULL)) UNION ALL SELECT ALL * FROM v0, rt0, vt1 WHERE ((NOT (((rt0.c2 COLLATE BINARY) NOTNULL)))) UNION ALL SELECT ALL * FROM v0, rt0, vt1 WHERE (((((rt0.c2 COLLATE BINARY) NOTNULL)) ISNULL));
SELECT ALL * FROM v0, rt0, vt1;
SELECT DISTINCT * FROM vt0, rt0, v0;
SELECT DISTINCT * FROM vt0, rt0, v0 WHERE (((ROUND(rt0.c0, '-896462082'))-(SQLITE_COMPILEOPTION_GET(rt0.c0)))) UNION SELECT DISTINCT * FROM vt0, rt0, v0 WHERE ((NOT (((ROUND(rt0.c0, '-896462082'))-(SQLITE_COMPILEOPTION_GET(rt0.c0)))))) UNION SELECT DISTINCT * FROM vt0, rt0, v0 WHERE (((((ROUND(rt0.c0, '-896462082'))-(SQLITE_COMPILEOPTION_GET(rt0.c0)))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0, v0;
SELECT ALL rt0.c2, vt0.c0, rt0.c0, rt0.c1 FROM rt0, v0 LEFT OUTER JOIN vt0 ON ((((rt0.c1)+(vt0.c0))) NOT BETWEEN ((((v0.c0)) NOT BETWEEN ((x'')) AND (('1166587154')))) AND ((~ (vt0.c0)))) GROUP BY rt0.c2, vt0.c0, rt0.c0, rt0.c1;
SELECT rt0.c2, vt0.c0, rt0.c0, rt0.c1 FROM rt0, v0 LEFT OUTER JOIN vt0 ON ((((rt0.c1)+(vt0.c0))) NOT BETWEEN ((((v0.c0)) NOT BETWEEN ((x'')) AND (('1166587154')))) AND ((~ (vt0.c0)))) WHERE (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN NULL WHEN rt0.c0 THEN rt0.c0 END COLLATE BINARY) GROUP BY rt0.c2, vt0.c0, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, vt0.c0, rt0.c0, rt0.c1 FROM rt0, v0 LEFT OUTER JOIN vt0 ON ((((rt0.c1)+(vt0.c0))) NOT BETWEEN ((((v0.c0)) NOT BETWEEN ((x'')) AND (('1166587154')))) AND ((~ (vt0.c0)))) WHERE ((NOT (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN NULL WHEN rt0.c0 THEN rt0.c0 END COLLATE BINARY))) GROUP BY rt0.c2, vt0.c0, rt0.c0, rt0.c1 UNION SELECT rt0.c2, vt0.c0, rt0.c0, rt0.c1 FROM rt0, v0 LEFT OUTER JOIN vt0 ON ((((rt0.c1)+(vt0.c0))) NOT BETWEEN ((((v0.c0)) NOT BETWEEN ((x'')) AND (('1166587154')))) AND ((~ (vt0.c0)))) WHERE (((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN NULL WHEN rt0.c0 THEN rt0.c0 END COLLATE BINARY) ISNULL)) GROUP BY rt0.c2, vt0.c0, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, vt0.c0, rt0.c0, rt0.c1 FROM rt0, v0 LEFT OUTER JOIN vt0 ON ((((rt0.c1)+(vt0.c0))) NOT BETWEEN ((((v0.c0)) NOT BETWEEN ((x'')) AND (('1166587154')))) AND ((~ (vt0.c0)))) GROUP BY rt0.c2, vt0.c0, rt0.c0, rt0.c1;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING 0.09769970776666204 UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (0.09769970776666204)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((0.09769970776666204) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING 0.09769970776666204 UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (0.09769970776666204)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((0.09769970776666204) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((NOT ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((NOT ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))))))) UNION ALL SELECT * FROM rt0 WHERE ((((NOT ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT v0.c0 FROM vt1 NATURAL JOIN v0;
SELECT DISTINCT v0.c0 FROM vt1 NATURAL JOIN v0 WHERE (vt1.c0) UNION SELECT DISTINCT v0.c0 FROM vt1 NATURAL JOIN v0 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT v0.c0 FROM vt1 NATURAL JOIN v0 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT v0.c0 FROM vt1 NATURAL JOIN v0;
SELECT ALL v0.c0, vt0.c0 FROM vt1 RIGHT OUTER JOIN v0 ON TRIM((((vt1.c0))<=((v0.c0))), (((vt1.c0))<>((v0.c0)))) INNER JOIN vt0 ON (- ((((vt1.c0, v0.c0, v0.c0))<>((vt1.c0, v0.c0, vt1.c0))))) GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt1 RIGHT OUTER JOIN v0 ON TRIM((((vt1.c0))<=((v0.c0))), (((vt1.c0))!=((v0.c0)))) INNER JOIN vt0 ON (- ((((vt1.c0, v0.c0, v0.c0))<>((vt1.c0, v0.c0, vt1.c0))))) WHERE ((((((v0.c0, vt0.c0, v0.c0)) BETWEEN ((v0.c0, vt0.c0, vt1.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))<<(',F'))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM vt1 RIGHT OUTER JOIN v0 ON TRIM((((vt1.c0))<=((v0.c0))), (((vt1.c0))!=((v0.c0)))) INNER JOIN vt0 ON (- ((((vt1.c0, v0.c0, v0.c0))<>((vt1.c0, v0.c0, vt1.c0))))) WHERE ((NOT ((((((v0.c0, vt0.c0, v0.c0)) BETWEEN ((v0.c0, vt0.c0, vt1.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))<<(',F'))))) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM vt1 RIGHT OUTER JOIN v0 ON TRIM((((vt1.c0))<=((v0.c0))), (((vt1.c0))<>((v0.c0)))) INNER JOIN vt0 ON (- ((((vt1.c0, v0.c0, v0.c0))<>((vt1.c0, v0.c0, vt1.c0))))) WHERE ((((((((v0.c0, vt0.c0, v0.c0)) BETWEEN ((v0.c0, vt0.c0, vt1.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))<<(',F'))) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt1 RIGHT OUTER JOIN v0 ON TRIM((((vt1.c0))<=((v0.c0))), (((vt1.c0))<>((v0.c0)))) INNER JOIN vt0 ON (- ((((vt1.c0, v0.c0, v0.c0))<>((vt1.c0, v0.c0, vt1.c0))))) GROUP BY v0.c0, vt0.c0;
SELECT ALL rt0.c0, vt1.c0, rt0.c1, vt0.c0, rt0.c2, v0.c0 FROM v0, vt0, vt1, rt0 GROUP BY rt0.c0, vt1.c0, rt0.c1, vt0.c0, rt0.c2, v0.c0;
SELECT rt0.c0, vt1.c0, rt0.c1, vt0.c0, rt0.c2, v0.c0 FROM v0, vt0, vt1, rt0 GROUP BY rt0.c0, vt1.c0, rt0.c1, vt0.c0, rt0.c2, v0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c0, vt1.c0, rt0.c1, vt0.c0, rt0.c2, v0.c0 FROM v0, vt0, vt1, rt0 GROUP BY rt0.c0, vt1.c0, rt0.c1, vt0.c0, rt0.c2, v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c0, vt1.c0, rt0.c1, vt0.c0, rt0.c2, v0.c0 FROM v0, vt0, vt1, rt0 GROUP BY rt0.c0, vt1.c0, rt0.c1, vt0.c0, rt0.c2, v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0, vt1.c0, rt0.c1, vt0.c0, rt0.c2, v0.c0 FROM v0, vt0, vt1, rt0 GROUP BY rt0.c0, vt1.c0, rt0.c1, vt0.c0, rt0.c2, v0.c0;
SELECT rt0.c0, vt1.c0, rt0.c1, vt0.c0, rt0.c2, v0.c0 FROM v0, vt0, vt1, rt0 GROUP BY rt0.c0, vt1.c0, rt0.c1, vt0.c0, rt0.c2, v0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c0, vt1.c0, rt0.c1, vt0.c0, rt0.c2, v0.c0 FROM v0, vt0, vt1, rt0 GROUP BY rt0.c0, vt1.c0, rt0.c1, vt0.c0, rt0.c2, v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c0, vt1.c0, rt0.c1, vt0.c0, rt0.c2, v0.c0 FROM v0, vt0, vt1, rt0 GROUP BY rt0.c0, vt1.c0, rt0.c1, vt0.c0, rt0.c2, v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0, vt1.c0, rt0.c1, vt0.c0, rt0.c2, v0.c0 FROM v0, vt0, vt1, rt0 GROUP BY rt0.c0, vt1.c0, rt0.c1, vt0.c0, rt0.c2, v0.c0;
SELECT v0.c0, rt0.c1, rt0.c2, vt1.c0 FROM rt0 INNER JOIN vt1 ON CAST(((v0.c0) IS FALSE) AS INTEGER) CROSS JOIN v0 ON ((((vt0.c0)IS(rt0.c0))) NOT NULL) CROSS JOIN vt0 ON CASE WHEN (rt0.c1 IN ()) THEN (((vt1.c0))>=((rt0.c1))) ELSE vt1.c0 END;
SELECT v0.c0, rt0.c1, rt0.c2, vt1.c0 FROM rt0 INNER JOIN vt1 ON CAST(((v0.c0) IS FALSE) AS INTEGER) CROSS JOIN v0 ON ((((vt0.c0)IS(rt0.c0))) NOT NULL) CROSS JOIN vt0 ON CASE WHEN (rt0.c1 IN ()) THEN (((vt1.c0))>=((rt0.c1))) ELSE vt1.c0 END WHERE ((~ (((rt0.c0)LIKE(NULL))))) UNION ALL SELECT ALL v0.c0, rt0.c1, rt0.c2, vt1.c0 FROM rt0 INNER JOIN vt1 ON CAST(((v0.c0) IS FALSE) AS INTEGER) CROSS JOIN v0 ON ((((vt0.c0)IS(rt0.c0))) NOT NULL) CROSS JOIN vt0 ON CASE WHEN (rt0.c1 IN ()) THEN (((vt1.c0))>=((rt0.c1))) ELSE vt1.c0 END WHERE ((NOT ((~ (((rt0.c0)LIKE(NULL))))))) UNION ALL SELECT v0.c0, rt0.c1, rt0.c2, vt1.c0 FROM rt0 INNER JOIN vt1 ON CAST(((v0.c0) IS FALSE) AS INTEGER) CROSS JOIN v0 ON ((((vt0.c0)IS(rt0.c0))) NOT NULL) CROSS JOIN vt0 ON CASE WHEN (rt0.c1 IN ()) THEN (((vt1.c0))>=((rt0.c1))) ELSE vt1.c0 END WHERE ((((~ (((rt0.c0)LIKE(NULL))))) ISNULL));
SELECT v0.c0, rt0.c1, rt0.c2, vt1.c0 FROM rt0 INNER JOIN vt1 ON CAST(((v0.c0) IS FALSE) AS INTEGER) CROSS JOIN v0 ON ((((vt0.c0)IS(rt0.c0))) NOT NULL) CROSS JOIN vt0 ON CASE WHEN (rt0.c1 IN ()) THEN (((vt1.c0))>=((rt0.c1))) ELSE vt1.c0 END;
SELECT DISTINCT * FROM rt0, vt1, vt0;
SELECT DISTINCT * FROM rt0, vt1, vt0 WHERE ((~ (((NULL) BETWEEN ('-7Hn') AND (vt0.c0))))) UNION SELECT DISTINCT * FROM rt0, vt1, vt0 WHERE ((NOT ((~ (((NULL) BETWEEN ('-7Hn') AND (vt0.c0))))))) UNION SELECT DISTINCT * FROM rt0, vt1, vt0 WHERE ((((~ (((NULL) BETWEEN ('-7Hn') AND (vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt1, vt0;
SELECT v0.c0 FROM vt1, vt0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt1, vt0, v0 WHERE ((((NULL IN ()))==((~ (vt0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt1, vt0, v0 WHERE ((NOT ((((NULL IN ()))=((~ (vt0.c0))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt1, vt0, v0 WHERE ((((((NULL IN ()))=((~ (vt0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM vt1, vt0, v0 GROUP BY v0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING COUNT(COUNT(*)) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (COUNT(COUNT(*)))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((COUNT(COUNT(*))) ISNULL);
SELECT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE ((HEX(vt1.c0) IN (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '657830819' WHEN vt1.c0 THEN vt1.c0 END))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT ((HEX(vt1.c0) IN (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '657830819' WHEN vt1.c0 THEN vt1.c0 END))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((((HEX(vt1.c0) IN (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '657830819' WHEN vt1.c0 THEN vt1.c0 END))) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM vt0, vt1, rt0, v0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM vt0, vt1, rt0, v0 WHERE ((((((v0.c0, vt0.c0, rt0.c1)) NOT BETWEEN ((v0.c0, vt0.c0, x'')) AND ((rt0.c0, vt0.c0, vt0.c0))))LIKE((rt0.c1 IN (vt1.c0))))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM vt0, vt1, rt0, v0 WHERE ((NOT ((((((v0.c0, vt0.c0, rt0.c1)) NOT BETWEEN ((v0.c0, vt0.c0, x'')) AND ((rt0.c0, vt0.c0, vt0.c0))))LIKE((rt0.c1 IN (vt1.c0))))))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM vt0, vt1, rt0, v0 WHERE ((((((((v0.c0, vt0.c0, rt0.c1)) NOT BETWEEN ((v0.c0, vt0.c0, x'')) AND ((rt0.c0, vt0.c0, vt0.c0))))LIKE((rt0.c1 IN (vt1.c0))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM vt0, vt1, rt0, v0;
SELECT ALL vt1.c0, rt0.c0, vt0.c0, rt0.c1, rt0.c2 FROM rt0, vt1, vt0 GROUP BY vt1.c0, rt0.c0, vt0.c0, rt0.c1, rt0.c2;
SELECT ALL vt1.c0, rt0.c0, vt0.c0, rt0.c1, rt0.c2 FROM rt0, vt1, vt0 WHERE (CASE (((rt0.c1, rt0.c2, vt1.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((rt0.c1, vt0.c0, rt0.c0, NULL, rt0.c2)) AND ((rt0.c2, rt0.c1, rt0.c0, rt0.c2, vt1.c0)))  WHEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) THEN vt0.c0 ELSE ((rt0.c0) BETWEEN (rt0.c2) AND (vt1.c0)) END) GROUP BY vt1.c0, rt0.c0, vt0.c0, rt0.c1, rt0.c2 UNION SELECT vt1.c0, rt0.c0, vt0.c0, rt0.c1, rt0.c2 FROM rt0, vt1, vt0 WHERE ((NOT (CASE (((rt0.c1, rt0.c2, vt1.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((rt0.c1, vt0.c0, rt0.c0, NULL, rt0.c2)) AND ((rt0.c2, rt0.c1, rt0.c0, rt0.c2, vt1.c0)))  WHEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) THEN vt0.c0 ELSE ((rt0.c0) BETWEEN (rt0.c2) AND (vt1.c0)) END))) GROUP BY vt1.c0, rt0.c0, vt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL vt1.c0, rt0.c0, vt0.c0, rt0.c1, rt0.c2 FROM rt0, vt1, vt0 WHERE (((CASE (((rt0.c1, rt0.c2, vt1.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((rt0.c1, vt0.c0, rt0.c0, NULL, rt0.c2)) AND ((rt0.c2, rt0.c1, rt0.c0, rt0.c2, vt1.c0)))  WHEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) THEN vt0.c0 ELSE ((rt0.c0) BETWEEN (rt0.c2) AND (vt1.c0)) END) ISNULL)) GROUP BY vt1.c0, rt0.c0, vt0.c0, rt0.c1, rt0.c2;
SELECT ALL vt1.c0, rt0.c0, vt0.c0, rt0.c1, rt0.c2 FROM rt0, vt1, vt0 GROUP BY vt1.c0, rt0.c0, vt0.c0, rt0.c1, rt0.c2;
SELECT vt0.c0, v0.c0, rt0.c1, vt1.c0 FROM v0, vt0, rt0, vt1 GROUP BY vt0.c0, v0.c0, rt0.c1, vt1.c0;
SELECT vt0.c0, v0.c0, rt0.c1, vt1.c0 FROM v0, vt0, rt0, vt1 GROUP BY vt0.c0, v0.c0, rt0.c1, vt1.c0 HAVING MIN(COUNT(*)) UNION ALL SELECT ALL vt0.c0, v0.c0, rt0.c1, vt1.c0 FROM v0, vt0, rt0, vt1 GROUP BY vt0.c0, v0.c0, rt0.c1, vt1.c0 HAVING (NOT (MIN(COUNT(*)))) UNION ALL SELECT vt0.c0, v0.c0, rt0.c1, vt1.c0 FROM v0, vt0, rt0, vt1 GROUP BY vt0.c0, v0.c0, rt0.c1, vt1.c0 HAVING ((MIN(COUNT(*))) ISNULL);
SELECT ALL * FROM rt0, vt0, vt1;
SELECT ALL * FROM rt0, vt0, vt1 WHERE (LAST_INSERT_ROWID()) UNION ALL SELECT * FROM rt0, vt0, vt1 WHERE ((NOT (LAST_INSERT_ROWID()))) UNION ALL SELECT * FROM rt0, vt0, vt1 WHERE (((LAST_INSERT_ROWID()) ISNULL));
SELECT ALL * FROM rt0, vt0, vt1;
SELECT DISTINCT v0.c0, vt1.c0 FROM v0, vt1;
SELECT DISTINCT v0.c0, vt1.c0 FROM v0, vt1 WHERE (((v0.c0) IS FALSE) COLLATE NOCASE) UNION SELECT DISTINCT v0.c0, vt1.c0 FROM v0, vt1 WHERE ((NOT (((v0.c0) IS FALSE) COLLATE NOCASE))) UNION SELECT DISTINCT v0.c0, vt1.c0 FROM v0, vt1 WHERE (((((v0.c0) IS FALSE) COLLATE NOCASE) ISNULL));
SELECT DISTINCT v0.c0, vt1.c0 FROM v0, vt1;
SELECT rt0.c2, vt1.c0, rt0.c1, rt0.c0, v0.c0 FROM v0, rt0, vt1 GROUP BY rt0.c2, vt1.c0, rt0.c1, rt0.c0, v0.c0;
SELECT rt0.c2, vt1.c0, rt0.c1, rt0.c0, v0.c0 FROM v0, rt0, vt1 WHERE (((CASE WHEN rt0.c1 THEN rt0.c1 ELSE vt1.c0 END) NOT BETWEEN (((rt0.c2) NOTNULL)) AND ((~ (rt0.c1))))) GROUP BY rt0.c2, vt1.c0, rt0.c1, rt0.c0, v0.c0 UNION SELECT rt0.c2, vt1.c0, rt0.c1, rt0.c0, v0.c0 FROM v0, rt0, vt1 WHERE ((NOT (((CASE WHEN rt0.c1 THEN rt0.c1 ELSE vt1.c0 END) NOT BETWEEN (((rt0.c2) NOTNULL)) AND ((~ (rt0.c1))))))) GROUP BY rt0.c2, vt1.c0, rt0.c1, rt0.c0, v0.c0 UNION SELECT rt0.c2, vt1.c0, rt0.c1, rt0.c0, v0.c0 FROM v0, rt0, vt1 WHERE (((((CASE WHEN rt0.c1 THEN rt0.c1 ELSE vt1.c0 END) NOT BETWEEN (((rt0.c2) NOTNULL)) AND ((~ (rt0.c1))))) ISNULL)) GROUP BY rt0.c2, vt1.c0, rt0.c1, rt0.c0, v0.c0;
SELECT rt0.c2, vt1.c0, rt0.c1, rt0.c0, v0.c0 FROM v0, rt0, vt1 GROUP BY rt0.c2, vt1.c0, rt0.c1, rt0.c0, v0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT(((MAX(vt0.c0))/(MAX(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(((MAX(vt0.c0))/(MAX(vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(((MAX(vt0.c0))/(MAX(vt0.c0))))) ISNULL);
SELECT * FROM v0, vt1, rt0, vt0;
SELECT ALL * FROM v0, vt1, rt0, vt0 WHERE (((((rt0.c0) IS TRUE))|(((rt0.c2)||(rt0.c1))))) UNION ALL SELECT * FROM v0, vt1, rt0, vt0 WHERE ((NOT (((((rt0.c0) IS TRUE))|(((rt0.c2)||(rt0.c1))))))) UNION ALL SELECT * FROM v0, vt1, rt0, vt0 WHERE (((((((rt0.c0) IS TRUE))|(((rt0.c2)||(rt0.c1))))) ISNULL));
SELECT * FROM v0, vt1, rt0, vt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE (CASE ((rt0.c1) IS TRUE)  WHEN rt0.c1 THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) END) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (CASE ((rt0.c1) IS TRUE)  WHEN rt0.c1 THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) END))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE (((CASE ((rt0.c1) IS TRUE)  WHEN rt0.c1 THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) END) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT ALL vt1.c0, v0.c0, rt0.c1, vt0.c0, rt0.c2 FROM vt1, v0, vt0, rt0 GROUP BY vt1.c0, v0.c0, rt0.c1, vt0.c0, rt0.c2;
SELECT ALL vt1.c0, v0.c0, rt0.c1, vt0.c0, rt0.c2 FROM vt1, v0, vt0, rt0 WHERE (('-651228618' IN ())) GROUP BY vt1.c0, v0.c0, rt0.c1, vt0.c0, rt0.c2 UNION SELECT vt1.c0, v0.c0, rt0.c1, vt0.c0, rt0.c2 FROM vt1, v0, vt0, rt0 WHERE ((NOT (('-651228618' IN ())))) GROUP BY vt1.c0, v0.c0, rt0.c1, vt0.c0, rt0.c2 UNION SELECT vt1.c0, v0.c0, rt0.c1, vt0.c0, rt0.c2 FROM vt1, v0, vt0, rt0 WHERE (((('-651228618' IN ())) ISNULL)) GROUP BY vt1.c0, v0.c0, rt0.c1, vt0.c0, rt0.c2;
SELECT ALL vt1.c0, v0.c0, rt0.c1, vt0.c0, rt0.c2 FROM vt1, v0, vt0, rt0 GROUP BY vt1.c0, v0.c0, rt0.c1, vt0.c0, rt0.c2;
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING v0.c0 UNION ALL SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING ((v0.c0) ISNULL);
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING v0.c0 UNION ALL SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING ((v0.c0) ISNULL);
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT rt0.c1, rt0.c0 FROM vt0, vt1 FULL OUTER JOIN rt0 ON (~ ((+ (rt0.c2))));
SELECT ALL rt0.c1, rt0.c0 FROM vt0, vt1 FULL OUTER JOIN rt0 ON (~ ((+ (rt0.c2)))) WHERE (((((rt0.c2) NOTNULL)) IS FALSE)) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM vt0, vt1 FULL OUTER JOIN rt0 ON (~ ((+ (rt0.c2)))) WHERE ((NOT (((((rt0.c2) NOTNULL)) IS FALSE)))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM vt0, vt1 FULL OUTER JOIN rt0 ON (~ ((+ (rt0.c2)))) WHERE (((((((rt0.c2) NOTNULL)) IS FALSE)) ISNULL));
SELECT rt0.c1, rt0.c0 FROM vt0, vt1 FULL OUTER JOIN rt0 ON (~ ((+ (rt0.c2))));
SELECT DISTINCT * FROM vt1 FULL OUTER JOIN rt0 ON ((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END)%(vt1.c0 COLLATE RTRIM)) CROSS JOIN vt0 ON (((vt0.c0) IS FALSE) IN ());
SELECT DISTINCT * FROM vt1 FULL OUTER JOIN rt0 ON ((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END)%(vt1.c0 COLLATE RTRIM)) CROSS JOIN vt0 ON (((vt0.c0) IS FALSE) IN ()) WHERE (json_array((((rt0.c2)) BETWEEN ((vt0.c0)) AND ((rt0.c1))), ((vt1.c0) NOTNULL))) UNION SELECT DISTINCT * FROM vt1 FULL OUTER JOIN rt0 ON ((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END)%(vt1.c0 COLLATE RTRIM)) CROSS JOIN vt0 ON (((vt0.c0) IS FALSE) IN ()) WHERE ((NOT (json_array((((rt0.c2)) BETWEEN ((vt0.c0)) AND ((rt0.c1))), ((vt1.c0) NOTNULL))))) UNION SELECT DISTINCT * FROM vt1 FULL OUTER JOIN rt0 ON ((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END)%(vt1.c0 COLLATE RTRIM)) CROSS JOIN vt0 ON (((vt0.c0) IS FALSE) IN ()) WHERE (((json_array((((rt0.c2)) BETWEEN ((vt0.c0)) AND ((rt0.c1))), ((vt1.c0) NOTNULL))) ISNULL));
SELECT DISTINCT * FROM vt1 FULL OUTER JOIN rt0 ON ((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END)%(vt1.c0 COLLATE RTRIM)) CROSS JOIN vt0 ON (((vt0.c0) IS FALSE) IN ());
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE (((((rt0.c1)GLOB(rt0.c2)))GLOB(((((rt0.c0)OR(rt0.c0)))AND(x''))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c1)GLOB(rt0.c2)))GLOB(((((rt0.c0)OR(rt0.c0)))AND(x''))))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE (((((((rt0.c1)GLOB(rt0.c2)))GLOB(((((rt0.c0)OR(rt0.c0)))AND(x''))))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON x'479d' GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON x'479d' GROUP BY v0.c0, vt0.c0 HAVING COUNT(*) COLLATE BINARY UNION ALL SELECT v0.c0, vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON x'479d' GROUP BY v0.c0, vt0.c0 HAVING (NOT (COUNT(*) COLLATE BINARY)) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON x'479d' GROUP BY v0.c0, vt0.c0 HAVING ((COUNT(*) COLLATE BINARY) ISNULL);
SELECT v0.c0, vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON x'479d' GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON x'479d' GROUP BY v0.c0, vt0.c0 HAVING COUNT(*) COLLATE BINARY UNION ALL SELECT v0.c0, vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON x'479d' GROUP BY v0.c0, vt0.c0 HAVING (NOT (COUNT(*) COLLATE BINARY)) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON x'479d' GROUP BY v0.c0, vt0.c0 HAVING ((COUNT(*) COLLATE BINARY) ISNULL);
SELECT v0.c0, vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON x'479d' GROUP BY v0.c0, vt0.c0;
SELECT rt0.c1 FROM vt0, v0, rt0, vt1;
SELECT rt0.c1 FROM vt0, v0, rt0, vt1 WHERE ((~ (v0.c0))) UNION ALL SELECT ALL rt0.c1 FROM vt0, v0, rt0, vt1 WHERE ((NOT ((~ (v0.c0))))) UNION ALL SELECT ALL rt0.c1 FROM vt0, v0, rt0, vt1 WHERE ((((~ (v0.c0))) ISNULL));
SELECT rt0.c1 FROM vt0, v0, rt0, vt1;
SELECT DISTINCT * FROM v0, vt1 CROSS JOIN vt0 ON x'' RIGHT OUTER JOIN rt0 ON (rt0.c2 COLLATE RTRIM IN ());
SELECT DISTINCT * FROM v0, vt1 CROSS JOIN vt0 ON x'' RIGHT OUTER JOIN rt0 ON (rt0.c2 COLLATE RTRIM IN ()) WHERE (((((vt0.c0) ISNULL)) NOT BETWEEN (CAST(v0.c0 AS INTEGER)) AND (((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c0))))) UNION SELECT DISTINCT * FROM v0, vt1 CROSS JOIN vt0 ON x'' RIGHT OUTER JOIN rt0 ON (rt0.c2 COLLATE RTRIM IN ()) WHERE ((NOT (((((vt0.c0) ISNULL)) NOT BETWEEN (CAST(v0.c0 AS INTEGER)) AND (((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c0))))))) UNION SELECT DISTINCT * FROM v0, vt1 CROSS JOIN vt0 ON x'' RIGHT OUTER JOIN rt0 ON (rt0.c2 COLLATE RTRIM IN ()) WHERE (((((((vt0.c0) ISNULL)) NOT BETWEEN (CAST(v0.c0 AS INTEGER)) AND (((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0, vt1 CROSS JOIN vt0 ON x'' RIGHT OUTER JOIN rt0 ON (rt0.c2 COLLATE RTRIM IN ());
SELECT ALL rt0.c1, v0.c0, vt1.c0, rt0.c2, vt0.c0 FROM vt0, v0, rt0, vt1 GROUP BY rt0.c1, v0.c0, vt1.c0, rt0.c2, vt0.c0;
SELECT ALL rt0.c1, v0.c0, vt1.c0, rt0.c2, vt0.c0 FROM vt0, v0, rt0, vt1 WHERE ('') GROUP BY rt0.c1, v0.c0, vt1.c0, rt0.c2, vt0.c0 UNION SELECT rt0.c1, v0.c0, vt1.c0, rt0.c2, vt0.c0 FROM vt0, v0, rt0, vt1 WHERE ((NOT (''))) GROUP BY rt0.c1, v0.c0, vt1.c0, rt0.c2, vt0.c0 UNION SELECT ALL rt0.c1, v0.c0, vt1.c0, rt0.c2, vt0.c0 FROM vt0, v0, rt0, vt1 WHERE ((('') ISNULL)) GROUP BY rt0.c1, v0.c0, vt1.c0, rt0.c2, vt0.c0;
SELECT ALL rt0.c1, v0.c0, vt1.c0, rt0.c2, vt0.c0 FROM vt0, v0, rt0, vt1 GROUP BY rt0.c1, v0.c0, vt1.c0, rt0.c2, vt0.c0;
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING vt0.c0 UNION ALL SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING ((vt0.c0) ISNULL);
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING vt0.c0 UNION ALL SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING ((vt0.c0) ISNULL);
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT ALL * FROM vt1, rt0;
SELECT * FROM vt1, rt0 WHERE ('K6jJX') UNION ALL SELECT ALL * FROM vt1, rt0 WHERE ((NOT ('K6jJX'))) UNION ALL SELECT * FROM vt1, rt0 WHERE ((('K6jJX') ISNULL));
SELECT ALL * FROM vt1, rt0;
SELECT DISTINCT rt0.c0 FROM vt0, rt0 RIGHT OUTER JOIN vt1 ON NULL FULL OUTER JOIN v0 ON CAST(vt1.c0 AS BLOB);
SELECT DISTINCT rt0.c0 FROM vt0, rt0 RIGHT OUTER JOIN vt1 ON NULL FULL OUTER JOIN v0 ON CAST(vt1.c0 AS BLOB) WHERE (((((rt0.c2)<(vt0.c0))) BETWEEN (((0.06630865030631672)%(rt0.c1))) AND (((vt1.c0)<(v0.c0))))) UNION SELECT DISTINCT rt0.c0 FROM vt0, rt0 RIGHT OUTER JOIN vt1 ON NULL FULL OUTER JOIN v0 ON CAST(vt1.c0 AS BLOB) WHERE ((NOT (((((rt0.c2)<(vt0.c0))) BETWEEN (((0.06630865030631672)%(rt0.c1))) AND (((vt1.c0)<(v0.c0))))))) UNION SELECT DISTINCT rt0.c0 FROM vt0, rt0 RIGHT OUTER JOIN vt1 ON NULL FULL OUTER JOIN v0 ON CAST(vt1.c0 AS BLOB) WHERE (((((((rt0.c2)<(vt0.c0))) BETWEEN (((0.06630865030631672)%(rt0.c1))) AND (((vt1.c0)<(v0.c0))))) ISNULL));
SELECT DISTINCT rt0.c0 FROM vt0, rt0 RIGHT OUTER JOIN vt1 ON NULL FULL OUTER JOIN v0 ON CAST(vt1.c0 AS BLOB);
SELECT rt0.c0 FROM rt0, vt0, vt1 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, vt0, vt1 WHERE ((((((((vt0.c0))>((-2117520718))))AND(INSTR(rt0.c0, rt0.c1))))AND(CASE rt0.c0  WHEN rt0.c2 THEN vt1.c0 END))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0, vt0, vt1 WHERE ((NOT ((((((((vt0.c0))>((-2117520718))))AND(INSTR(rt0.c0, rt0.c1))))AND(CASE rt0.c0  WHEN rt0.c2 THEN vt1.c0 END))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0, vt0, vt1 WHERE ((((((((((vt0.c0))>((-2117520718))))AND(INSTR(rt0.c0, rt0.c1))))AND(CASE rt0.c0  WHEN rt0.c2 THEN vt1.c0 END))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, vt0, vt1 GROUP BY rt0.c0;
SELECT rt0.c1 FROM rt0, vt1 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, vt1 GROUP BY rt0.c1 HAVING SQLITE_COMPILEOPTION_GET(CAST(rt0.c1 AS TEXT)) UNION ALL SELECT rt0.c1 FROM rt0, vt1 GROUP BY rt0.c1 HAVING (NOT (SQLITE_COMPILEOPTION_GET(CAST(rt0.c1 AS TEXT)))) UNION ALL SELECT rt0.c1 FROM rt0, vt1 GROUP BY rt0.c1 HAVING ((SQLITE_COMPILEOPTION_GET(CAST(rt0.c1 AS TEXT))) ISNULL);
SELECT rt0.c1 FROM rt0, vt1 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, vt1 GROUP BY rt0.c1 HAVING SQLITE_COMPILEOPTION_GET(CAST(rt0.c1 AS TEXT)) UNION ALL SELECT rt0.c1 FROM rt0, vt1 GROUP BY rt0.c1 HAVING (NOT (SQLITE_COMPILEOPTION_GET(CAST(rt0.c1 AS TEXT)))) UNION ALL SELECT rt0.c1 FROM rt0, vt1 GROUP BY rt0.c1 HAVING ((SQLITE_COMPILEOPTION_GET(CAST(rt0.c1 AS TEXT))) ISNULL);
SELECT rt0.c1 FROM rt0, vt1 GROUP BY rt0.c1;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((- (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((- (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1))))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((- (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN v0 ON vt1.c0;
SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN v0 ON vt1.c0 WHERE (((x'') BETWEEN (vt1.c0) AND (v0.c0)) COLLATE BINARY) UNION SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN v0 ON vt1.c0 WHERE ((NOT (((x'') BETWEEN (vt1.c0) AND (v0.c0)) COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN v0 ON vt1.c0 WHERE (((((x'') BETWEEN (vt1.c0) AND (v0.c0)) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN v0 ON vt1.c0;
SELECT ALL rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0, vt0 WHERE (rt0.c0) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0, vt0 WHERE ((NOT (rt0.c0))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0, vt0 WHERE (((rt0.c0) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1;
SELECT vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0;
SELECT vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0 HAVING LOWER(DISTINCT COUNT(vt1.c0)) UNION ALL SELECT vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0 HAVING (NOT (LOWER(DISTINCT COUNT(vt1.c0)))) UNION ALL SELECT ALL vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0 HAVING ((LOWER(DISTINCT COUNT(vt1.c0))) ISNULL);
SELECT vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0;
SELECT vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0 HAVING LOWER(DISTINCT COUNT(vt1.c0)) UNION ALL SELECT vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0 HAVING (NOT (LOWER(DISTINCT COUNT(vt1.c0)))) UNION ALL SELECT ALL vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0 HAVING ((LOWER(DISTINCT COUNT(vt1.c0))) ISNULL);
SELECT vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0;
SELECT ALL rt0.c2, vt0.c0 FROM v0, rt0, vt0 LEFT OUTER JOIN vt1 ON (((rt0.c2))>=((((((((((((((rt0.c2)OR(v0.c0)))OR(rt0.c2)))AND(rt0.c1)))OR(vt1.c0)))OR(vt0.c0)))OR(vt1.c0)))));
SELECT rt0.c2, vt0.c0 FROM v0, rt0, vt0 LEFT OUTER JOIN vt1 ON (((rt0.c2))>=((((((((((((((rt0.c2)OR(v0.c0)))OR(rt0.c2)))AND(rt0.c1)))OR(vt1.c0)))OR(vt0.c0)))OR(vt1.c0))))) WHERE (((vt0.c0 COLLATE NOCASE)||('-1451179659'))) UNION ALL SELECT rt0.c2, vt0.c0 FROM v0, rt0, vt0 LEFT OUTER JOIN vt1 ON (((rt0.c2))>=((((((((((((((rt0.c2)OR(v0.c0)))OR(rt0.c2)))AND(rt0.c1)))OR(vt1.c0)))OR(vt0.c0)))OR(vt1.c0))))) WHERE ((NOT (((vt0.c0 COLLATE NOCASE)||('-1451179659'))))) UNION ALL SELECT rt0.c2, vt0.c0 FROM v0, rt0, vt0 LEFT OUTER JOIN vt1 ON (((rt0.c2))>=((((((((((((((rt0.c2)OR(v0.c0)))OR(rt0.c2)))AND(rt0.c1)))OR(vt1.c0)))OR(vt0.c0)))OR(vt1.c0))))) WHERE (((((vt0.c0 COLLATE NOCASE)||('-1451179659'))) ISNULL));
SELECT ALL rt0.c2, vt0.c0 FROM v0, rt0, vt0 LEFT OUTER JOIN vt1 ON (((rt0.c2))>=((((((((((((((rt0.c2)OR(v0.c0)))OR(rt0.c2)))AND(rt0.c1)))OR(vt1.c0)))OR(vt0.c0)))OR(vt1.c0)))));
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((NULL) IS FALSE)) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((NULL) IS FALSE)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((NULL) IS FALSE)) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT rt0.c2, vt0.c0 FROM vt1, rt0, vt0 GROUP BY rt0.c2, vt0.c0;
SELECT ALL rt0.c2, vt0.c0 FROM vt1, rt0, vt0 WHERE ((((((vt1.c0) NOT NULL)))>=((((vt0.c0) NOT BETWEEN (x'') AND (rt0.c2)))))) GROUP BY rt0.c2, vt0.c0 UNION SELECT rt0.c2, vt0.c0 FROM vt1, rt0, vt0 WHERE ((NOT ((((((vt1.c0) NOT NULL)))>=((((vt0.c0) NOT BETWEEN (x'') AND (rt0.c2)))))))) GROUP BY rt0.c2, vt0.c0 UNION SELECT rt0.c2, vt0.c0 FROM vt1, rt0, vt0 WHERE ((((((((vt1.c0) NOT NULL)))>=((((vt0.c0) NOT BETWEEN (x'') AND (rt0.c2)))))) ISNULL)) GROUP BY rt0.c2, vt0.c0;
SELECT rt0.c2, vt0.c0 FROM vt1, rt0, vt0 GROUP BY rt0.c2, vt0.c0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING MAX(rt0.c2) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (MAX(rt0.c2))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((MAX(rt0.c2)) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING MAX(rt0.c2) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (MAX(rt0.c2))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((MAX(rt0.c2)) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((- (rt0.c2)) COLLATE NOCASE) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((- (rt0.c2)) COLLATE NOCASE))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((((- (rt0.c2)) COLLATE NOCASE) ISNULL));
SELECT ALL rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM vt1 CROSS JOIN vt0 ON ((((v0.c0)<=(vt1.c0))) NOTNULL) FULL OUTER JOIN v0 ON rt0.c2 CROSS JOIN rt0 ON '-1577238060';
SELECT ALL vt1.c0 FROM vt1, vt0, v0, rt0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 NOT INDEXED, vt0, v0, rt0 WHERE (HEX(DISTINCT CASE v0.c0  WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1, vt0, v0, rt0 WHERE ((NOT (HEX(DISTINCT CASE v0.c0  WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1, vt0, v0, rt0 WHERE (((HEX(DISTINCT CASE v0.c0  WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt0, v0, rt0 GROUP BY vt1.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM vt1, rt0, vt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM vt1, rt0, vt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((rt0.c0) NOT NULL) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM vt1, rt0, vt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (((rt0.c0) NOT NULL))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM vt1, rt0, vt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((((rt0.c0) NOT NULL)) ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c0 FROM vt1, rt0, vt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM vt1, rt0, vt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((rt0.c0) NOT NULL) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM vt1, rt0, vt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (((rt0.c0) NOT NULL))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM vt1, rt0, vt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((((rt0.c0) NOT NULL)) ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c0 FROM vt1, rt0, vt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt1, vt0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt1, vt0 WHERE (((vt1.c0)<(((vt0.c0) BETWEEN (v0.c0) AND (vt1.c0))))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt1, vt0 WHERE ((NOT (((vt1.c0)<(((vt0.c0) BETWEEN (v0.c0) AND (vt1.c0))))))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt1, vt0 WHERE (((((vt1.c0)<(((vt0.c0) BETWEEN (v0.c0) AND (vt1.c0))))) ISNULL));
SELECT ALL vt0.c0, v0.c0 FROM v0, vt1, vt0;
SELECT DISTINCT * FROM vt1, v0;
SELECT DISTINCT * FROM vt1, v0 WHERE (NULL) UNION SELECT DISTINCT * FROM vt1, v0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM vt1, v0 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM vt1, v0;
SELECT vt1.c0 FROM v0, rt0 INNER JOIN vt1 ON LIKELIHOOD(CAST(rt0.c1 AS NUMERIC), 0.6603844068589385) CROSS JOIN vt0 ON NULL COLLATE RTRIM GROUP BY vt1.c0;
SELECT vt1.c0 FROM v0, rt0 INNER JOIN vt1 ON LIKELIHOOD(CAST(rt0.c1 AS NUMERIC), 0.6603844068589385) CROSS JOIN vt0 ON NULL COLLATE RTRIM WHERE ('-637290580') GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM v0, rt0 INNER JOIN vt1 ON LIKELIHOOD(CAST(rt0.c1 AS NUMERIC), 0.6603844068589385) CROSS JOIN vt0 ON NULL COLLATE RTRIM WHERE ((NOT ('-637290580'))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM v0, rt0 INNER JOIN vt1 ON LIKELIHOOD(CAST(rt0.c1 AS NUMERIC), 0.6603844068589385) CROSS JOIN vt0 ON NULL COLLATE RTRIM WHERE ((('-637290580') ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM v0, rt0 INNER JOIN vt1 ON LIKELIHOOD(CAST(rt0.c1 AS NUMERIC), 0.6603844068589385) CROSS JOIN vt0 ON NULL COLLATE RTRIM GROUP BY vt1.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(MIN(COUNT(COUNT(MIN(MIN(v0.c0)))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(MIN(COUNT(COUNT(MIN(MIN(v0.c0)))))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(MIN(COUNT(COUNT(MIN(MIN(v0.c0))))))) ISNULL);
SELECT ALL MAX(vt0.c0) FROM vt0;
SELECT * FROM vt1, v0;
SELECT * FROM vt1, v0 WHERE (((TRIM(v0.c0))%((vt1.c0 IN ())))) UNION ALL SELECT * FROM vt1, v0 WHERE ((NOT (((TRIM(v0.c0))%((vt1.c0 IN ())))))) UNION ALL SELECT ALL * FROM vt1, v0 WHERE (((((TRIM(v0.c0))%((vt1.c0 IN ())))) ISNULL));
SELECT * FROM vt1, v0;
SELECT DISTINCT rt0.c1 FROM v0, rt0, vt0, vt1;
SELECT DISTINCT rt0.c1 FROM v0, rt0, vt0, vt1 WHERE (NULL) UNION SELECT DISTINCT rt0.c1 FROM v0, rt0, vt0, vt1 WHERE ((NOT (NULL))) UNION SELECT DISTINCT rt0.c1 FROM v0, rt0, vt0, vt1 WHERE (((NULL) ISNULL));
SELECT DISTINCT rt0.c1 FROM v0, rt0, vt0, vt1;
SELECT rt0.c2, rt0.c1, vt0.c0, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1, vt0.c0, rt0.c0;
SELECT rt0.c2, rt0.c1, vt0.c0, rt0.c0 FROM vt0, rt0 WHERE (NULL) GROUP BY rt0.c2, rt0.c1, vt0.c0, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, vt0.c0, rt0.c0 FROM vt0, rt0 WHERE ((NOT (NULL))) GROUP BY rt0.c2, rt0.c1, vt0.c0, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, vt0.c0, rt0.c0 FROM vt0, rt0 WHERE (((NULL) ISNULL)) GROUP BY rt0.c2, rt0.c1, vt0.c0, rt0.c0;
SELECT rt0.c2, rt0.c1, vt0.c0, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1, vt0.c0, rt0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (((((rt0.c0)LIKE(rt0.c1)))||(((((rt0.c0)AND(rt0.c1)))OR(rt0.c1))))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c0)LIKE(rt0.c1)))||(((((rt0.c0)AND(rt0.c1)))OR(rt0.c1))))))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (((((((rt0.c0)LIKE(rt0.c1)))||(((((rt0.c0)AND(rt0.c1)))OR(rt0.c1))))) ISNULL));
SELECT ALL rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT vt0.c0 FROM vt0 INNER JOIN vt1 ON x'';
SELECT DISTINCT vt0.c0 FROM vt0 INNER JOIN vt1 ON x'' WHERE (HEX(((vt1.c0) NOTNULL))) UNION SELECT DISTINCT vt0.c0 FROM vt0 INNER JOIN vt1 ON x'' WHERE ((NOT (HEX(((vt1.c0) NOTNULL))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 INNER JOIN vt1 ON x'' WHERE (((HEX(((vt1.c0) NOTNULL))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0 INNER JOIN vt1 ON x'';
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)<(LIKE(vt1.c0, '0.6188666148701196')))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)<(LIKE(vt1.c0, '0.6188666148701196')))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)<(LIKE(vt1.c0, '0.6188666148701196')))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING TOTAL(((((((((COUNT(*))AND(vt1.c0)))OR(AVG(SUM(TOTAL(vt1.c0))))))OR(vt1.c0)))OR(vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (TOTAL(((((((((COUNT(*))AND(vt1.c0)))OR(AVG(SUM(TOTAL(vt1.c0))))))OR(vt1.c0)))OR(vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((TOTAL(((((((((COUNT(*))AND(vt1.c0)))OR(AVG(SUM(TOTAL(vt1.c0))))))OR(vt1.c0)))OR(vt1.c0)))) ISNULL);
SELECT ALL * FROM vt0, v0, rt0;
SELECT ALL * FROM vt0, v0, rt0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (rt0.c2))) IS FALSE)) UNION ALL SELECT ALL * FROM vt0, v0, rt0 WHERE ((NOT (((((v0.c0) NOT BETWEEN (v0.c0) AND (rt0.c2))) IS FALSE)))) UNION ALL SELECT ALL * FROM vt0, v0, rt0 WHERE (((((((v0.c0) NOT BETWEEN (v0.c0) AND (rt0.c2))) IS FALSE)) ISNULL));
SELECT ALL * FROM vt0, v0, rt0;
SELECT DISTINCT vt1.c0, rt0.c2 FROM vt1, rt0, vt0;
SELECT DISTINCT vt1.c0, rt0.c2 FROM vt1, rt0, vt0 WHERE ((((x'', '[k', (~ (vt1.c0))))>(((((rt0.c2)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c1))), 0Xffffffffb988850b, ((NULL)=(rt0.c0)))))) UNION SELECT DISTINCT vt1.c0, rt0.c2 FROM vt1, rt0, vt0 WHERE ((NOT ((((x'', '[k', (~ (vt1.c0))))>(((((rt0.c2)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c1))), 0Xffffffffb988850b, ((NULL)=(rt0.c0)))))))) UNION SELECT DISTINCT vt1.c0, rt0.c2 FROM vt1, rt0, vt0 WHERE ((((((x'', '[k', (~ (vt1.c0))))>(((((rt0.c2)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c1))), 0Xffffffffb988850b, ((NULL)=(rt0.c0)))))) ISNULL));
SELECT DISTINCT vt1.c0, rt0.c2 FROM vt1, rt0, vt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (CASE WHEN v0.c0 COLLATE NOCASE THEN CAST(v0.c0 AS REAL) ELSE ((v0.c0)>(v0.c0)) END) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CASE WHEN v0.c0 COLLATE NOCASE THEN CAST(v0.c0 AS REAL) ELSE ((v0.c0)>(v0.c0)) END))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((CASE WHEN v0.c0 COLLATE NOCASE THEN CAST(v0.c0 AS REAL) ELSE ((v0.c0)>(v0.c0)) END) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c2, v0.c0 FROM v0, vt1 FULL OUTER JOIN vt0 ON CASE (- (v0.c0))  WHEN 'Eț' THEN ((v0.c0)LIKE(vt0.c0)) WHEN ((rt0.c0) BETWEEN (rt0.c2) AND ('0.6823806444523113')) THEN ((v0.c0)==(rt0.c2)) WHEN 'g2oK)en' THEN ((((((((rt0.c1)OR(vt1.c0)))OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c1)) ELSE (((v0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) END INNER JOIN rt0 ON ((v0.c0)IS NOT(((vt1.c0) BETWEEN (rt0.c2) AND (rt0.c1)))) GROUP BY rt0.c2, v0.c0;
SELECT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((vt1.c0 IN (vt1.c0)))<>(((vt1.c0)AND(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0 IN (vt1.c0)))!=(((vt1.c0)AND(vt1.c0))))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((((((vt1.c0 IN (vt1.c0)))!=(((vt1.c0)AND(vt1.c0))))) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN rt0 ON ((((vt1.c0) BETWEEN (vt0.c0) AND ('')))<(vt0.c0)) RIGHT OUTER JOIN v0 ON (((vt0.c0 COLLATE NOCASE, ((rt0.c2) ISNULL), rt0.c1))=((CAST(NULL AS INTEGER), ((vt1.c0) NOT NULL), rt0.c2))) LEFT OUTER JOIN vt1 ON CAST(CAST(vt1.c0 AS INTEGER) AS REAL);
SELECT ALL rt0.c2, v0.c0, vt1.c0, rt0.c1 FROM vt1, v0, rt0 GROUP BY rt0.c2, v0.c0, vt1.c0, rt0.c1;
SELECT rt0.c2, v0.c0, vt1.c0, rt0.c1 FROM vt1, v0, rt0 WHERE ((HEX(vt1.c0) IN ())) GROUP BY rt0.c2, v0.c0, vt1.c0, rt0.c1 UNION SELECT ALL rt0.c2, v0.c0, vt1.c0, rt0.c1 FROM vt1, v0, rt0 WHERE ((NOT ((HEX(vt1.c0) IN ())))) GROUP BY rt0.c2, v0.c0, vt1.c0, rt0.c1 UNION SELECT ALL rt0.c2, v0.c0, vt1.c0, rt0.c1 FROM vt1, v0, rt0 WHERE ((((HEX(vt1.c0) IN ())) ISNULL)) GROUP BY rt0.c2, v0.c0, vt1.c0, rt0.c1;
SELECT ALL rt0.c2, v0.c0, vt1.c0, rt0.c1 FROM vt1, v0, rt0 GROUP BY rt0.c2, v0.c0, vt1.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING MAX(MAX(COUNT(rt0.c2))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (MAX(MAX(COUNT(rt0.c2))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((MAX(MAX(COUNT(rt0.c2)))) ISNULL);
SELECT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (((vt1.c0) IS TRUE) COLLATE BINARY COLLATE NOCASE) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0) IS TRUE) COLLATE BINARY COLLATE NOCASE))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((((vt1.c0) IS TRUE) COLLATE BINARY COLLATE NOCASE) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT * FROM v0 INNER JOIN vt1 ON ABS(CASE v0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE v0.c0 END);
SELECT DISTINCT * FROM v0 INNER JOIN vt1 ON ABS(CASE v0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE v0.c0 END) WHERE ((~ (vt1.c0))) UNION SELECT DISTINCT * FROM v0 INNER JOIN vt1 ON ABS(CASE v0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE v0.c0 END) WHERE ((NOT ((~ (vt1.c0))))) UNION SELECT DISTINCT * FROM v0 INNER JOIN vt1 ON ABS(CASE v0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE v0.c0 END) WHERE ((((~ (vt1.c0))) ISNULL));
SELECT DISTINCT * FROM v0 INNER JOIN vt1 ON ABS(CASE v0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE v0.c0 END);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE NOCASE) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((vt0.c0 IN ()) COLLATE NOCASE))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((vt0.c0 IN ()) COLLATE NOCASE) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING rt0.c1 UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (rt0.c1)) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((rt0.c1) ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING rt0.c1 UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (rt0.c1)) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((rt0.c1) ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL vt0.c0 FROM rt0, vt0;
SELECT ALL vt0.c0 FROM rt0, vt0 WHERE ((((rt0.c1)&(rt0.c2)) IN ())) UNION ALL SELECT vt0.c0 FROM rt0 NOT INDEXED, vt0 WHERE ((NOT ((((rt0.c1)&(rt0.c2)) IN ())))) UNION ALL SELECT vt0.c0 FROM rt0, vt0 WHERE ((((((rt0.c1)&(rt0.c2)) IN ())) ISNULL));
SELECT ALL vt0.c0 FROM rt0, vt0;
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))) NOT BETWEEN (CASE WHEN x'8dec' THEN vt0.c0 ELSE v0.c0 END) AND (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))) NOT BETWEEN (CASE WHEN x'8dec' THEN vt0.c0 ELSE v0.c0 END) AND (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))) NOT BETWEEN (CASE WHEN x'8dec' THEN vt0.c0 ELSE v0.c0 END) AND (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT rt0.c0 FROM vt1, vt0 INNER JOIN v0 ON (((UNLIKELY(v0.c0)))!=((0.9965453732648932 COLLATE NOCASE))) INNER JOIN rt0 ON ((CAST(rt0.c2 AS TEXT)) NOT BETWEEN ((+ (vt0.c0))) AND (HEX(DISTINCT rt0.c2))) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM vt1, vt0 INNER JOIN v0 ON (((UNLIKELY(v0.c0)))<>((0.9965453732648932 COLLATE NOCASE))) INNER JOIN rt0 ON ((CAST(rt0.c2 AS TEXT)) NOT BETWEEN ((+ (vt0.c0))) AND (HEX(DISTINCT rt0.c2))) WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<=(vt1.c0))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM vt1, vt0 INNER JOIN v0 ON (((UNLIKELY(v0.c0)))<>((0.9965453732648932 COLLATE NOCASE))) INNER JOIN rt0 ON ((CAST(rt0.c2 AS TEXT)) NOT BETWEEN ((+ (vt0.c0))) AND (HEX(DISTINCT rt0.c2))) WHERE ((NOT (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<=(vt1.c0))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM vt1, vt0 INNER JOIN v0 ON (((UNLIKELY(v0.c0)))<>((0.9965453732648932 COLLATE NOCASE))) INNER JOIN rt0 ON ((CAST(rt0.c2 AS TEXT)) NOT BETWEEN ((+ (vt0.c0))) AND (HEX(DISTINCT rt0.c2))) WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<=(vt1.c0))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM vt1, vt0 INNER JOIN v0 ON (((UNLIKELY(v0.c0)))!=((0.9965453732648932 COLLATE NOCASE))) INNER JOIN rt0 ON ((CAST(rt0.c2 AS TEXT)) NOT BETWEEN ((+ (vt0.c0))) AND (HEX(DISTINCT rt0.c2))) GROUP BY rt0.c0;
SELECT rt0.c1, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c2 HAVING AVG(MIN(MAX(rt0.c2))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (AVG(MIN(MAX(rt0.c2))))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c2 HAVING ((AVG(MIN(MAX(rt0.c2)))) ISNULL);
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (((~ (v0.c0)) IN ())) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (((~ (v0.c0)) IN ())))) UNION ALL SELECT ALL * FROM v0 WHERE (((((~ (v0.c0)) IN ())) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (rt0.c1 COLLATE NOCASE) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (rt0.c1 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((rt0.c1 COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT ALL vt1.c0, rt0.c0, rt0.c1, vt0.c0, v0.c0, rt0.c2 FROM v0, rt0, vt0, vt1 GROUP BY vt1.c0, rt0.c0, rt0.c1, vt0.c0, v0.c0, rt0.c2;
SELECT ALL vt1.c0, rt0.c0, rt0.c1, vt0.c0, v0.c0, rt0.c2 FROM v0, rt0, vt0, vt1 WHERE (CAST(((rt0.c0)<>(v0.c0)) AS INTEGER)) GROUP BY vt1.c0, rt0.c0, rt0.c1, vt0.c0, v0.c0, rt0.c2 UNION SELECT vt1.c0, rt0.c0, rt0.c1, vt0.c0, v0.c0, rt0.c2 FROM v0, rt0, vt0, vt1 WHERE ((NOT (CAST(((rt0.c0)!=(v0.c0)) AS INTEGER)))) GROUP BY vt1.c0, rt0.c0, rt0.c1, vt0.c0, v0.c0, rt0.c2 UNION SELECT vt1.c0, rt0.c0, rt0.c1, vt0.c0, v0.c0, rt0.c2 FROM v0, rt0, vt0, vt1 WHERE (((CAST(((rt0.c0)<>(v0.c0)) AS INTEGER)) ISNULL)) GROUP BY vt1.c0, rt0.c0, rt0.c1, vt0.c0, v0.c0, rt0.c2;
SELECT ALL vt1.c0, rt0.c0, rt0.c1, vt0.c0, v0.c0, rt0.c2 FROM v0, rt0, vt0, vt1 GROUP BY vt1.c0, rt0.c0, rt0.c1, vt0.c0, v0.c0, rt0.c2;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (TOTAL(MAX(MAX(vt1.c0))) IN (((MAX(SUM(vt1.c0)))&(vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((TOTAL(MAX(MAX(vt1.c0))) IN (((MAX(SUM(vt1.c0)))&(vt1.c0)))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((TOTAL(MAX(MAX(vt1.c0))) IN (((MAX(SUM(vt1.c0)))&(vt1.c0))))) ISNULL);
SELECT ALL rt0.c2, vt1.c0, rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0, vt1;
SELECT rt0.c2, vt1.c0, rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0, vt1 WHERE ((((vt1.c0, '1441038920', x'', ((rt0.c2)>(rt0.c2)), CAST(NULL AS TEXT)))=((((rt0.c1)%(rt0.c1)), rt0.c0 COLLATE BINARY, CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c0 END, 0.33749373381108916, (rt0.c2 IN (vt1.c0)))))) UNION ALL SELECT rt0.c2, vt1.c0, rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0, vt1 WHERE ((NOT ((((vt1.c0, '1441038920', x'', ((rt0.c2)>(rt0.c2)), CAST(NULL AS TEXT)))==((((rt0.c1)%(rt0.c1)), rt0.c0 COLLATE BINARY, CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c0 END, 0.33749373381108916, (rt0.c2 IN (vt1.c0)))))))) UNION ALL SELECT ALL rt0.c2, vt1.c0, rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0, vt1 WHERE ((((((vt1.c0, '1441038920', x'', ((rt0.c2)>(rt0.c2)), CAST(NULL AS TEXT)))==((((rt0.c1)%(rt0.c1)), rt0.c0 COLLATE BINARY, CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c0 END, 0.33749373381108916, (rt0.c2 IN (vt1.c0)))))) ISNULL));
SELECT ALL rt0.c2, vt1.c0, rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0, vt1;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE (vt1.c0) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (CAST(CAST(vt1.c0 AS REAL) AS NUMERIC)) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (CAST(CAST(vt1.c0 AS REAL) AS NUMERIC)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((CAST(CAST(vt1.c0 AS REAL) AS NUMERIC)) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT v0.c0, vt0.c0 FROM v0, rt0 RIGHT OUTER JOIN vt0 ON ((((json_valid(rt0.c1))AND(IFNULL(rt0.c1, rt0.c2))))OR(((rt0.c0)<(vt1.c0)))) FULL OUTER JOIN vt1 ON (~ (CAST(vt0.c0 AS NUMERIC))) GROUP BY v0.c0, vt0.c0;
SELECT * FROM vt0 CROSS JOIN rt0 ON TRIM(DISTINCT ((x'81e1') NOTNULL), ((v0.c0) BETWEEN (rt0.c0) AND (rt0.c0))) CROSS JOIN v0 ON ((((CAST(vt0.c0 AS NUMERIC))AND((vt0.c0 IN ()))))AND(((((rt0.c0)AND(rt0.c2)))OR(rt0.c1))));
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON TRIM(DISTINCT ((x'81e1') NOTNULL), ((v0.c0) BETWEEN (rt0.c0) AND (rt0.c0))) CROSS JOIN v0 ON ((((CAST(vt0.c0 AS NUMERIC))AND((vt0.c0 IN ()))))AND(((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))) WHERE ((LOWER(vt0.c0) IN ())) UNION ALL SELECT ALL * FROM vt0 CROSS JOIN rt0 ON TRIM(DISTINCT ((x'81e1') NOTNULL), ((v0.c0) BETWEEN (rt0.c0) AND (rt0.c0))) CROSS JOIN v0 ON ((((CAST(vt0.c0 AS NUMERIC))AND((vt0.c0 IN ()))))AND(((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))) WHERE ((NOT ((LOWER(vt0.c0) IN ())))) UNION ALL SELECT * FROM vt0 CROSS JOIN rt0 ON TRIM(DISTINCT ((x'81e1') NOTNULL), ((v0.c0) BETWEEN (rt0.c0) AND (rt0.c0))) CROSS JOIN v0 ON ((((CAST(vt0.c0 AS NUMERIC))AND((vt0.c0 IN ()))))AND(((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))) WHERE ((((LOWER(vt0.c0) IN ())) ISNULL));
SELECT * FROM vt0 CROSS JOIN rt0 ON TRIM(DISTINCT ((x'81e1') NOTNULL), ((v0.c0) BETWEEN (rt0.c0) AND (rt0.c0))) CROSS JOIN v0 ON ((((CAST(vt0.c0 AS NUMERIC))AND((vt0.c0 IN ()))))AND(((((rt0.c0)AND(rt0.c2)))OR(rt0.c1))));
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (CAST(((((vt0.c0)AND(rt0.c2)))OR('-400649754')) AS BLOB)) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (CAST(((((vt0.c0)AND(rt0.c2)))OR('-400649754')) AS BLOB)))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((CAST(((((vt0.c0)AND(rt0.c2)))OR('-400649754')) AS BLOB)) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT vt1.c0, v0.c0, rt0.c2, vt0.c0, rt0.c1 FROM v0, vt0, rt0, vt1 GROUP BY vt1.c0, v0.c0, rt0.c2, vt0.c0, rt0.c1;
SELECT ALL vt1.c0, v0.c0, rt0.c2, vt0.c0, rt0.c1 FROM v0, vt0, rt0, vt1 WHERE ((((vt0.c0)) NOT BETWEEN ((CAST(v0.c0 AS INTEGER))) AND ((((vt1.c0) BETWEEN (v0.c0) AND (vt1.c0)))))) GROUP BY vt1.c0, v0.c0, rt0.c2, vt0.c0, rt0.c1 UNION SELECT vt1.c0, v0.c0, rt0.c2, vt0.c0, rt0.c1 FROM v0, vt0, rt0, vt1 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN ((CAST(v0.c0 AS INTEGER))) AND ((((vt1.c0) BETWEEN (v0.c0) AND (vt1.c0)))))))) GROUP BY vt1.c0, v0.c0, rt0.c2, vt0.c0, rt0.c1 UNION SELECT vt1.c0, v0.c0, rt0.c2, vt0.c0, rt0.c1 FROM v0, vt0, rt0, vt1 WHERE ((((((vt0.c0)) NOT BETWEEN ((CAST(v0.c0 AS INTEGER))) AND ((((vt1.c0) BETWEEN (v0.c0) AND (vt1.c0)))))) ISNULL)) GROUP BY vt1.c0, v0.c0, rt0.c2, vt0.c0, rt0.c1;
SELECT vt1.c0, v0.c0, rt0.c2, vt0.c0, rt0.c1 FROM v0, vt0, rt0, vt1 GROUP BY vt1.c0, v0.c0, rt0.c2, vt0.c0, rt0.c1;
SELECT v0.c0, rt0.c1, rt0.c0 FROM v0, rt0 CROSS JOIN vt1 ON ((('.t')) BETWEEN ((rt0.c0 COLLATE RTRIM)) AND ((((rt0.c0)%(vt0.c0))))) RIGHT OUTER JOIN vt0 ON (NOT (rt0.c1 COLLATE RTRIM)) GROUP BY v0.c0, rt0.c1, rt0.c0;
SELECT MIN(((((((rt0.c1, rt0.c0, vt0.c0))<>((vt0.c0, rt0.c0, rt0.c1)))))<((vt0.c0 COLLATE NOCASE)))) FROM v0, vt0, rt0;
SELECT ALL rt0.c1, vt1.c0, rt0.c0 FROM vt0, rt0 NATURAL JOIN vt1;
SELECT rt0.c1, vt1.c0, rt0.c0 FROM vt0, rt0 NATURAL JOIN vt1 WHERE (0.8799762514172903) UNION ALL SELECT rt0.c1, vt1.c0, rt0.c0 FROM vt0, rt0 NATURAL JOIN vt1 WHERE ((NOT (0.8799762514172903))) UNION ALL SELECT rt0.c1, vt1.c0, rt0.c0 FROM vt0, rt0 NATURAL JOIN vt1 WHERE (((0.8799762514172903) ISNULL));
SELECT ALL rt0.c1, vt1.c0, rt0.c0 FROM vt0, rt0 NATURAL JOIN vt1;
SELECT DISTINCT rt0.c2, rt0.c0, vt1.c0 FROM rt0, vt1;
SELECT DISTINCT rt0.c2, rt0.c0, vt1.c0 FROM rt0, vt1 WHERE (((((((rt0.c1)AND(vt1.c0)))AND(vt1.c0))) NOT BETWEEN ((rt0.c1 IN ('Xi㿄pX~'))) AND (vt1.c0 COLLATE BINARY))) UNION SELECT DISTINCT rt0.c2, rt0.c0, vt1.c0 FROM rt0, vt1 WHERE ((NOT (((((((rt0.c1)AND(vt1.c0)))AND(vt1.c0))) NOT BETWEEN ((rt0.c1 IN ('Xi㿄pX~'))) AND (vt1.c0 COLLATE BINARY))))) UNION SELECT DISTINCT rt0.c2, rt0.c0, vt1.c0 FROM rt0, vt1 WHERE (((((((((rt0.c1)AND(vt1.c0)))AND(vt1.c0))) NOT BETWEEN ((rt0.c1 IN ('Xi㿄pX~'))) AND (vt1.c0 COLLATE BINARY))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, vt1.c0 FROM rt0, vt1;
SELECT vt1.c0 FROM v0 FULL OUTER JOIN vt1 ON CASE WHEN ((v0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((v0.c0) NOTNULL) WHEN json_array(v0.c0, v0.c0) THEN ((('iq')) NOT BETWEEN ((vt1.c0)) AND ((v0.c0))) WHEN 0.09769970776666204 THEN vt1.c0 COLLATE RTRIM ELSE ((v0.c0)<=(v0.c0)) END GROUP BY vt1.c0;
SELECT vt1.c0 FROM v0 FULL OUTER JOIN vt1 ON CASE WHEN ((v0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((v0.c0) NOTNULL) WHEN json_array(v0.c0, v0.c0) THEN ((('iq')) NOT BETWEEN ((vt1.c0)) AND ((v0.c0))) WHEN 0.09769970776666204 THEN vt1.c0 COLLATE RTRIM ELSE ((v0.c0)<=(v0.c0)) END WHERE (x'') GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM v0 FULL OUTER JOIN vt1 ON CASE WHEN ((v0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((v0.c0) NOTNULL) WHEN json_array(v0.c0, v0.c0) THEN ((('iq')) NOT BETWEEN ((vt1.c0)) AND ((v0.c0))) WHEN 0.09769970776666204 THEN vt1.c0 COLLATE RTRIM ELSE ((v0.c0)<=(v0.c0)) END WHERE ((NOT (x''))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM v0 FULL OUTER JOIN vt1 ON CASE WHEN ((v0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((v0.c0) NOTNULL) WHEN json_array(v0.c0, v0.c0) THEN ((('iq')) NOT BETWEEN ((vt1.c0)) AND ((v0.c0))) WHEN 0.09769970776666204 THEN vt1.c0 COLLATE RTRIM ELSE ((v0.c0)<=(v0.c0)) END WHERE (((x'') ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM v0 FULL OUTER JOIN vt1 ON CASE WHEN ((v0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((v0.c0) NOTNULL) WHEN json_array(v0.c0, v0.c0) THEN ((('iq')) NOT BETWEEN ((vt1.c0)) AND ((v0.c0))) WHEN 0.09769970776666204 THEN vt1.c0 COLLATE RTRIM ELSE ((v0.c0)<=(v0.c0)) END GROUP BY vt1.c0;
SELECT rt0.c0, vt0.c0, v0.c0, rt0.c1, rt0.c2, vt1.c0 FROM vt0, vt1, v0 RIGHT OUTER JOIN rt0 ON x'd2d2' GROUP BY rt0.c0, vt0.c0, v0.c0, rt0.c1, rt0.c2, vt1.c0;
SELECT rt0.c0, vt0.c0, v0.c0, rt0.c1, rt0.c2, vt1.c0 FROM vt0, vt1, v0 RIGHT OUTER JOIN rt0 ON x'd2d2' GROUP BY rt0.c0, vt0.c0, v0.c0, rt0.c1, rt0.c2, vt1.c0 HAVING CAST(COUNT(COUNT(*)) AS REAL) UNION ALL SELECT ALL rt0.c0, vt0.c0, v0.c0, rt0.c1, rt0.c2, vt1.c0 FROM vt0, vt1, v0 RIGHT OUTER JOIN rt0 ON x'd2d2' GROUP BY rt0.c0, vt0.c0, v0.c0, rt0.c1, rt0.c2, vt1.c0 HAVING (NOT (CAST(COUNT(COUNT(*)) AS REAL))) UNION ALL SELECT rt0.c0, vt0.c0, v0.c0, rt0.c1, rt0.c2, vt1.c0 FROM vt0, vt1, v0 RIGHT OUTER JOIN rt0 ON x'd2d2' GROUP BY rt0.c0, vt0.c0, v0.c0, rt0.c1, rt0.c2, vt1.c0 HAVING ((CAST(COUNT(COUNT(*)) AS REAL)) ISNULL);
SELECT ALL rt0.c1, rt0.c0 FROM rt0, v0 NATURAL JOIN vt1;
SELECT ALL rt0.c1, rt0.c0 FROM rt0, v0 NATURAL JOIN vt1 WHERE (((rt0.c0 COLLATE NOCASE)IS(v0.c0))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0, v0 NATURAL JOIN vt1 WHERE ((NOT (((rt0.c0 COLLATE NOCASE)IS(v0.c0))))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0, v0 NATURAL JOIN vt1 WHERE (((((rt0.c0 COLLATE NOCASE)IS(v0.c0))) ISNULL));
SELECT ALL rt0.c1, rt0.c0 FROM rt0, v0 NATURAL JOIN vt1;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 NOT INDEXED WHERE ((((v0.c0 IN (v0.c0))) IS FALSE)) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((v0.c0 IN (v0.c0))) IS FALSE)))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((v0.c0 IN (v0.c0))) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 RIGHT OUTER JOIN vt1 ON CASE WHEN (rt0.c1 IN (rt0.c2)) THEN ((rt0.c2) IS FALSE) ELSE vt1.c0 COLLATE RTRIM END GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 RIGHT OUTER JOIN vt1 ON CASE WHEN (rt0.c1 IN (rt0.c2)) THEN ((rt0.c2) IS FALSE) ELSE vt1.c0 COLLATE RTRIM END WHERE (((UNLIKELY(DISTINCT rt0.c1))OR(((0.43178410519054433) NOT NULL)))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0 RIGHT OUTER JOIN vt1 ON CASE WHEN (rt0.c1 IN (rt0.c2)) THEN ((rt0.c2) IS FALSE) ELSE vt1.c0 COLLATE RTRIM END WHERE ((NOT (((UNLIKELY(DISTINCT rt0.c1))OR(((0.43178410519054433) NOT NULL)))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0 RIGHT OUTER JOIN vt1 ON CASE WHEN (rt0.c1 IN (rt0.c2)) THEN ((rt0.c2) IS FALSE) ELSE vt1.c0 COLLATE RTRIM END WHERE (((((UNLIKELY(DISTINCT rt0.c1))OR(((0.43178410519054433) NOT NULL)))) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 RIGHT OUTER JOIN vt1 ON CASE WHEN (rt0.c1 IN (rt0.c2)) THEN ((rt0.c2) IS FALSE) ELSE vt1.c0 COLLATE RTRIM END GROUP BY rt0.c0, rt0.c2;
SELECT vt0.c0, rt0.c1, v0.c0, vt1.c0 FROM v0, vt0, vt1, rt0 GROUP BY vt0.c0, rt0.c1, v0.c0, vt1.c0;
SELECT vt0.c0, rt0.c1, v0.c0, vt1.c0 FROM v0, vt0, vt1, rt0 GROUP BY vt0.c0, rt0.c1, v0.c0, vt1.c0 HAVING (((MAX(vt0.c0))) NOT BETWEEN ((((SUM(MAX(COUNT(COUNT(GROUP_CONCAT(AVG(rt0.c0)))))))<=(v0.c0)))) AND ((SUM(SUM(GROUP_CONCAT(GROUP_CONCAT(GROUP_CONCAT(TOTAL(MAX(vt1.c0)))))))))) UNION ALL SELECT ALL vt0.c0, rt0.c1, v0.c0, vt1.c0 FROM v0, vt0, vt1, rt0 GROUP BY vt0.c0, rt0.c1, v0.c0, vt1.c0 HAVING (NOT ((((MAX(vt0.c0))) NOT BETWEEN ((((SUM(MAX(COUNT(COUNT(GROUP_CONCAT(AVG(rt0.c0)))))))<=(v0.c0)))) AND ((SUM(SUM(GROUP_CONCAT(GROUP_CONCAT(GROUP_CONCAT(TOTAL(MAX(vt1.c0)))))))))))) UNION ALL SELECT vt0.c0, rt0.c1, v0.c0, vt1.c0 FROM v0, vt0, vt1, rt0 GROUP BY vt0.c0, rt0.c1, v0.c0, vt1.c0 HAVING (((((MAX(vt0.c0))) NOT BETWEEN ((((SUM(MAX(COUNT(COUNT(GROUP_CONCAT(AVG(rt0.c0)))))))<=(v0.c0)))) AND ((SUM(SUM(GROUP_CONCAT(GROUP_CONCAT(GROUP_CONCAT(TOTAL(MAX(vt1.c0))))))))))) ISNULL);
SELECT ALL TOTAL(CAST(((0.8484027776140801)%(rt0.c2)) AS REAL)) FROM rt0;
SELECT rt0.c0 FROM rt0 NATURAL JOIN vt1;
SELECT rt0.c0 FROM rt0 NATURAL JOIN vt1 WHERE ((((rt0.c0)) BETWEEN (((rt0.c1 IN (rt0.c0)))) AND ((CAST(rt0.c2 AS REAL))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 NATURAL JOIN vt1 WHERE ((NOT ((((rt0.c0)) BETWEEN (((rt0.c1 IN (rt0.c0)))) AND ((CAST(rt0.c2 AS REAL))))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 NATURAL JOIN vt1 WHERE ((((((rt0.c0)) BETWEEN (((rt0.c1 IN (rt0.c0)))) AND ((CAST(rt0.c2 AS REAL))))) ISNULL));
SELECT rt0.c0 FROM rt0 NATURAL JOIN vt1;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((+ (v0.c0)))>=(CAST(v0.c0 AS INTEGER)))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((+ (v0.c0)))>=(CAST(v0.c0 AS INTEGER)))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((+ (v0.c0)))>=(CAST(v0.c0 AS INTEGER)))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT rt0.c0, vt1.c0, v0.c0, rt0.c1 FROM vt1, rt0, v0 GROUP BY rt0.c0, vt1.c0, v0.c0, rt0.c1;
SELECT rt0.c0, vt1.c0, v0.c0, rt0.c1 FROM vt1, rt0, v0 WHERE ((CAST(rt0.c2 AS TEXT) IN (((rt0.c2) IS FALSE)))) GROUP BY rt0.c0, vt1.c0, v0.c0, rt0.c1 UNION SELECT ALL rt0.c0, vt1.c0, v0.c0, rt0.c1 FROM vt1, rt0, v0 WHERE ((NOT ((CAST(rt0.c2 AS TEXT) IN (((rt0.c2) IS FALSE)))))) GROUP BY rt0.c0, vt1.c0, v0.c0, rt0.c1 UNION SELECT rt0.c0, vt1.c0, v0.c0, rt0.c1 FROM vt1, rt0, v0 WHERE ((((CAST(rt0.c2 AS TEXT) IN (((rt0.c2) IS FALSE)))) ISNULL)) GROUP BY rt0.c0, vt1.c0, v0.c0, rt0.c1;
SELECT rt0.c0, vt1.c0, v0.c0, rt0.c1 FROM vt1, rt0, v0 GROUP BY rt0.c0, vt1.c0, v0.c0, rt0.c1;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING GROUP_CONCAT(CAST(rt0.c0 AS BLOB)) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (GROUP_CONCAT(CAST(rt0.c0 AS BLOB)))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((GROUP_CONCAT(CAST(rt0.c0 AS BLOB))) ISNULL);
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING GROUP_CONCAT(CAST(rt0.c0 AS BLOB)) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (GROUP_CONCAT(CAST(rt0.c0 AS BLOB)))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((GROUP_CONCAT(CAST(rt0.c0 AS BLOB))) ISNULL);
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0, rt0.c2 FROM vt1, rt0;
SELECT ALL rt0.c0, rt0.c2 FROM vt1, rt0 WHERE ((((((((((- (vt1.c0)))AND(vt1.c0)))OR(((((((((rt0.c0)OR(rt0.c2)))OR(vt1.c0)))AND('-648036337')))OR(rt0.c2)))))OR((- (rt0.c1)))))AND(LOWER(rt0.c1)))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM vt1, rt0 WHERE ((NOT ((((((((((- (vt1.c0)))AND(vt1.c0)))OR(((((((((rt0.c0)OR(rt0.c2)))OR(vt1.c0)))AND('-648036337')))OR(rt0.c2)))))OR((- (rt0.c1)))))AND(LOWER(rt0.c1)))))) UNION ALL SELECT rt0.c0, rt0.c2 FROM vt1, rt0 WHERE ((((((((((((- (vt1.c0)))AND(vt1.c0)))OR(((((((((rt0.c0)OR(rt0.c2)))OR(vt1.c0)))AND('-648036337')))OR(rt0.c2)))))OR((- (rt0.c1)))))AND(LOWER(rt0.c1)))) ISNULL));
SELECT rt0.c0, rt0.c2 FROM vt1, rt0;
SELECT DISTINCT * FROM vt0, vt1, rt0, v0;
SELECT DISTINCT * FROM vt0, vt1, rt0, v0 WHERE (((v0.c0)LIKE(rt0.c0)) COLLATE NOCASE) UNION SELECT DISTINCT * FROM vt0, vt1, rt0, v0 WHERE ((NOT (((v0.c0)LIKE(rt0.c0)) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt0, vt1, rt0, v0 WHERE (((((v0.c0)LIKE(rt0.c0)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM vt0, vt1, rt0, v0;
SELECT ALL rt0.c2 FROM vt1, v0, rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt1, v0, rt0 WHERE ((((v0.c0 IN ())) ISNULL)) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM vt1, v0, rt0 WHERE ((NOT ((((v0.c0 IN ())) ISNULL)))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM vt1, v0, rt0 WHERE ((((((v0.c0 IN ())) ISNULL)) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt1, v0, rt0 GROUP BY rt0.c2;
SELECT v0.c0, rt0.c1, rt0.c0 FROM rt0, v0, vt0 GROUP BY v0.c0, rt0.c1, rt0.c0;
SELECT v0.c0, rt0.c1, rt0.c0 FROM rt0, v0, vt0 GROUP BY v0.c0, rt0.c1, rt0.c0 HAVING COUNT(GROUP_CONCAT(MIN(GROUP_CONCAT(rt0.c1)))) UNION ALL SELECT ALL v0.c0, rt0.c1, rt0.c0 FROM rt0, v0, vt0 GROUP BY v0.c0, rt0.c1, rt0.c0 HAVING (NOT (COUNT(GROUP_CONCAT(MIN(GROUP_CONCAT(rt0.c1)))))) UNION ALL SELECT ALL v0.c0, rt0.c1, rt0.c0 FROM rt0, v0, vt0 GROUP BY v0.c0, rt0.c1, rt0.c0 HAVING ((COUNT(GROUP_CONCAT(MIN(GROUP_CONCAT(rt0.c1))))) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (((x'')>(v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((x'')>(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((((x'')>(v0.c0))) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT rt0.c2 FROM rt0, vt1;
SELECT DISTINCT rt0.c2 FROM rt0, vt1 WHERE (((((((((((rt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))AND(((0.8320115367907867)<(rt0.c2)))))AND((+ (rt0.c1)))))OR(((vt1.c0)||(rt0.c2)))))AND(vt1.c0))) UNION SELECT DISTINCT rt0.c2 FROM rt0, vt1 NOT INDEXED WHERE ((NOT (((((((((((rt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))AND(((0.8320115367907867)<(rt0.c2)))))AND((+ (rt0.c1)))))OR(((vt1.c0)||(rt0.c2)))))AND(vt1.c0))))) UNION SELECT DISTINCT rt0.c2 FROM rt0, vt1 WHERE (((((((((((((rt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))AND(((0.8320115367907867)<(rt0.c2)))))AND((+ (rt0.c1)))))OR(((vt1.c0)||(rt0.c2)))))AND(vt1.c0))) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0, vt1;
SELECT rt0.c0, rt0.c1 FROM rt0, v0, vt1 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0, v0, vt1 WHERE (CAST((((('1709648681')AND(rt0.c2)))AND(rt0.c2)) AS TEXT)) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0, v0, vt1 WHERE ((NOT (CAST((((('1709648681')AND(rt0.c2)))AND(rt0.c2)) AS TEXT)))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0, v0, vt1 WHERE (((CAST((((('1709648681')AND(rt0.c2)))AND(rt0.c2)) AS TEXT)) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0, v0, vt1 GROUP BY rt0.c0, rt0.c1;
SELECT vt1.c0, vt0.c0 FROM v0, vt1, rt0, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM v0, vt1, rt0, vt0 GROUP BY vt1.c0, vt0.c0 HAVING vt0.c0 UNION ALL SELECT vt1.c0, vt0.c0 FROM v0, vt1, rt0, vt0 GROUP BY vt1.c0, vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT vt1.c0, vt0.c0 FROM v0, vt1, rt0, vt0 GROUP BY vt1.c0, vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT vt1.c0, vt0.c0 FROM v0, vt1, rt0, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM v0, vt1, rt0, vt0 GROUP BY vt1.c0, vt0.c0 HAVING vt0.c0 UNION ALL SELECT vt1.c0, vt0.c0 FROM v0, vt1, rt0, vt0 GROUP BY vt1.c0, vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT vt1.c0, vt0.c0 FROM v0, vt1, rt0, vt0 GROUP BY vt1.c0, vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT vt1.c0, vt0.c0 FROM v0, vt1, rt0, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT ALL MAX(((((rt0.c1)>(v0.c0))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2))) AND (CAST(rt0.c1 AS BLOB)))) FROM vt1, v0, rt0, vt0;
SELECT ALL rt0.c2 FROM vt1, rt0;
SELECT rt0.c2 FROM vt1, rt0 WHERE (((vt1.c0 IN ()) IN ())) UNION ALL SELECT ALL rt0.c2 FROM vt1, rt0 WHERE ((NOT (((vt1.c0 IN ()) IN ())))) UNION ALL SELECT rt0.c2 FROM vt1, rt0 WHERE (((((vt1.c0 IN ()) IN ())) ISNULL));
SELECT ALL rt0.c2 FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, vt0, rt0, v0;
SELECT DISTINCT * FROM vt1, vt0, rt0, v0 WHERE (CASE ((rt0.c0)<=(rt0.c1))  WHEN (+ ('0a_)!Lඖ')) THEN ((vt0.c0)<=(rt0.c1)) ELSE vt0.c0 END) UNION SELECT DISTINCT * FROM vt1, vt0, rt0, v0 WHERE ((NOT (CASE ((rt0.c0)<=(rt0.c1))  WHEN (+ ('0a_)!Lඖ')) THEN ((vt0.c0)<=(rt0.c1)) ELSE vt0.c0 END))) UNION SELECT DISTINCT * FROM vt1, vt0, rt0, v0 WHERE (((CASE ((rt0.c0)<=(rt0.c1))  WHEN (+ ('0a_)!Lඖ')) THEN ((vt0.c0)<=(rt0.c1)) ELSE vt0.c0 END) ISNULL));
SELECT DISTINCT * FROM vt1, vt0, rt0, v0;
SELECT rt0.c1, vt0.c0, vt1.c0, rt0.c2, rt0.c0 FROM rt0, vt0, vt1 GROUP BY rt0.c1, vt0.c0, vt1.c0, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, vt0.c0, vt1.c0, rt0.c2, rt0.c0 FROM rt0, vt0, vt1 WHERE (((CAST(rt0.c1 AS NUMERIC)) BETWEEN (x'f729') AND (('1709648681' IN ())))) GROUP BY rt0.c1, vt0.c0, vt1.c0, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, vt0.c0, vt1.c0, rt0.c2, rt0.c0 FROM rt0, vt0, vt1 WHERE ((NOT (((CAST(rt0.c1 AS NUMERIC)) BETWEEN (x'f729') AND (('1709648681' IN ())))))) GROUP BY rt0.c1, vt0.c0, vt1.c0, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, vt0.c0, vt1.c0, rt0.c2, rt0.c0 FROM rt0, vt0, vt1 WHERE (((((CAST(rt0.c1 AS NUMERIC)) BETWEEN (x'f729') AND (('1709648681' IN ())))) ISNULL)) GROUP BY rt0.c1, vt0.c0, vt1.c0, rt0.c2, rt0.c0;
SELECT rt0.c1, vt0.c0, vt1.c0, rt0.c2, rt0.c0 FROM rt0, vt0, vt1 GROUP BY rt0.c1, vt0.c0, vt1.c0, rt0.c2, rt0.c0;
SELECT ALL v0.c0 FROM v0, vt1 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt1 GROUP BY v0.c0 HAVING AVG(x'') UNION ALL SELECT v0.c0 FROM v0, vt1 GROUP BY v0.c0 HAVING (NOT (AVG(x''))) UNION ALL SELECT v0.c0 FROM v0, vt1 GROUP BY v0.c0 HAVING ((AVG(x'')) ISNULL);
SELECT ALL v0.c0 FROM v0, vt1 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt1 GROUP BY v0.c0 HAVING AVG(x'') UNION ALL SELECT v0.c0 FROM v0, vt1 GROUP BY v0.c0 HAVING (NOT (AVG(x''))) UNION ALL SELECT v0.c0 FROM v0, vt1 GROUP BY v0.c0 HAVING ((AVG(x'')) ISNULL);
SELECT ALL v0.c0 FROM v0, vt1 GROUP BY v0.c0;
SELECT ALL TOTAL((((('747815515')AND(vt1.c0)))AND(vt1.c0)) COLLATE NOCASE) FROM vt1 ORDER BY ((((vt1.c0) IS TRUE))<((('u{2')|(vt1.c0)))) DESC, (((((vt1.c0)OR(8.328817E7)))OR(vt1.c0)) IN ()) ASC;
SELECT * FROM rt0, v0, vt0;
SELECT ALL * FROM rt0, v0, vt0 WHERE (0Xffffffff91585c96) UNION ALL SELECT ALL * FROM rt0, v0, vt0 WHERE ((NOT (0xffffffff91585c96))) UNION ALL SELECT * FROM rt0, v0, vt0 WHERE (((0Xffffffff91585c96) ISNULL));
SELECT * FROM rt0, v0, vt0;
SELECT DISTINCT v0.c0, rt0.c1, rt0.c0, vt1.c0, rt0.c2 FROM v0, rt0 INNER JOIN vt1 ON CASE WHEN ((rt0.c2) ISNULL) THEN x'' ELSE ((v0.c0)|(vt1.c0)) END FULL OUTER JOIN vt0 ON ((LIKELY(DISTINCT x'')) BETWEEN (((rt0.c0) IS FALSE)) AND (((v0.c0) NOT BETWEEN (x'') AND (0.9625480114659896))));
SELECT DISTINCT v0.c0, rt0.c1, rt0.c0, vt1.c0, rt0.c2 FROM v0, rt0 INNER JOIN vt1 ON CASE WHEN ((rt0.c2) ISNULL) THEN x'' ELSE ((v0.c0)|(vt1.c0)) END FULL OUTER JOIN vt0 ON ((LIKELY(DISTINCT x'')) BETWEEN (((rt0.c0) IS FALSE)) AND (((v0.c0) NOT BETWEEN (x'') AND (0.9625480114659896)))) WHERE ((~ ((((vt1.c0, rt0.c2, rt0.c2))==((vt0.c0, 0.3150773024525493, x'')))))) UNION SELECT DISTINCT v0.c0, rt0.c1, rt0.c0, vt1.c0, rt0.c2 FROM v0, rt0 INNER JOIN vt1 ON CASE WHEN ((rt0.c2) ISNULL) THEN x'' ELSE ((v0.c0)|(vt1.c0)) END FULL OUTER JOIN vt0 ON ((LIKELY(DISTINCT x'')) BETWEEN (((rt0.c0) IS FALSE)) AND (((v0.c0) NOT BETWEEN (x'') AND (0.9625480114659896)))) WHERE ((NOT ((~ ((((vt1.c0, rt0.c2, rt0.c2))==((vt0.c0, 0.3150773024525493, x'')))))))) UNION SELECT DISTINCT v0.c0, rt0.c1, rt0.c0, vt1.c0, rt0.c2 FROM v0, rt0 INNER JOIN vt1 ON CASE WHEN ((rt0.c2) ISNULL) THEN x'' ELSE ((v0.c0)|(vt1.c0)) END FULL OUTER JOIN vt0 ON ((LIKELY(DISTINCT x'')) BETWEEN (((rt0.c0) IS FALSE)) AND (((v0.c0) NOT BETWEEN (x'') AND (0.9625480114659896)))) WHERE ((((~ ((((vt1.c0, rt0.c2, rt0.c2))==((vt0.c0, 0.3150773024525493, x'')))))) ISNULL));
SELECT DISTINCT v0.c0, rt0.c1, rt0.c0, vt1.c0, rt0.c2 FROM v0, rt0 INNER JOIN vt1 ON CASE WHEN ((rt0.c2) ISNULL) THEN x'' ELSE ((v0.c0)|(vt1.c0)) END FULL OUTER JOIN vt0 ON ((LIKELY(DISTINCT x'')) BETWEEN (((rt0.c0) IS FALSE)) AND (((v0.c0) NOT BETWEEN (x'') AND (0.9625480114659896))));
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((v0.c0) NOT NULL) COLLATE RTRIM) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((v0.c0) NOT NULL) COLLATE RTRIM))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((v0.c0) NOT NULL) COLLATE RTRIM) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c2, vt0.c0, rt0.c0 FROM rt0, vt0, vt1, v0 GROUP BY rt0.c2, vt0.c0, rt0.c0;
SELECT ALL rt0.c2, vt0.c0, rt0.c0 FROM rt0, vt0, vt1, v0 GROUP BY rt0.c2, vt0.c0, rt0.c0 HAVING MAX(((SUM(rt0.c0))LIKE(rt0.c1))) UNION ALL SELECT ALL rt0.c2, vt0.c0, rt0.c0 FROM rt0, vt0, vt1, v0 GROUP BY rt0.c2, vt0.c0, rt0.c0 HAVING (NOT (MAX(((SUM(rt0.c0))LIKE(rt0.c1))))) UNION ALL SELECT rt0.c2, vt0.c0, rt0.c0 FROM rt0, vt0, vt1, v0 GROUP BY rt0.c2, vt0.c0, rt0.c0 HAVING ((MAX(((SUM(rt0.c0))LIKE(rt0.c1)))) ISNULL);
SELECT * FROM vt1, vt0, v0;
SELECT ALL * FROM vt1, vt0, v0 WHERE ('-726447896') UNION ALL SELECT * FROM vt1, vt0, v0 WHERE ((NOT ('-726447896'))) UNION ALL SELECT * FROM vt1, vt0, v0 WHERE ((('-726447896') ISNULL));
SELECT * FROM vt1, vt0, v0;
SELECT DISTINCT * FROM v0, vt1;
SELECT DISTINCT * FROM v0, vt1 WHERE ((NOT ((vt1.c0 IN (v0.c0))))) UNION SELECT DISTINCT * FROM v0, vt1 WHERE ((NOT ((NOT ((vt1.c0 IN (v0.c0))))))) UNION SELECT DISTINCT * FROM v0, vt1 WHERE ((((NOT ((vt1.c0 IN (v0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0, vt1;
SELECT ALL vt1.c0, vt0.c0 FROM v0 FULL OUTER JOIN vt1 ON RTRIM((NOT (v0.c0))) INNER JOIN vt0 ON NULL GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM v0 FULL OUTER JOIN vt1 ON RTRIM((NOT (v0.c0))) INNER JOIN vt0 ON NULL WHERE (((NULL) BETWEEN (((vt0.c0)*(NULL))) AND (((vt1.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))))) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM v0 FULL OUTER JOIN vt1 ON RTRIM((NOT (v0.c0))) INNER JOIN vt0 ON NULL WHERE ((NOT (((NULL) BETWEEN (((vt0.c0)*(NULL))) AND (((vt1.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))))))) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM v0 FULL OUTER JOIN vt1 ON RTRIM((NOT (v0.c0))) INNER JOIN vt0 ON NULL WHERE (((((NULL) BETWEEN (((vt0.c0)*(NULL))) AND (((vt1.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))))) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM v0 FULL OUTER JOIN vt1 ON RTRIM((NOT (v0.c0))) INNER JOIN vt0 ON NULL GROUP BY vt1.c0, vt0.c0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0, v0, vt1 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0, v0, vt1 GROUP BY rt0.c0, rt0.c2 HAVING GROUP_CONCAT(AVG(vt1.c0)) COLLATE RTRIM UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0, v0, vt1 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (GROUP_CONCAT(AVG(vt1.c0)) COLLATE RTRIM)) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0, v0, vt1 GROUP BY rt0.c0, rt0.c2 HAVING ((GROUP_CONCAT(AVG(vt1.c0)) COLLATE RTRIM) ISNULL);
SELECT ALL MAX(CAST(0.5746699378054372 AS REAL)) FROM v0, vt0, vt1 ORDER BY (((v0.c0)IS NOT(v0.c0)) IN ())  NULLS FIRST;
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (0.6803985834759009) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (0.6803985834759009))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((0.6803985834759009) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT rt0.c1, vt0.c0, rt0.c2, v0.c0, rt0.c0, vt1.c0 FROM vt0, vt1, v0, rt0;
SELECT DISTINCT rt0.c1, vt0.c0, rt0.c2, v0.c0, rt0.c0, vt1.c0 FROM vt0, vt1, v0, rt0 WHERE ('hU-<Hg''') UNION SELECT DISTINCT rt0.c1, vt0.c0, rt0.c2, v0.c0, rt0.c0, vt1.c0 FROM vt0, vt1, v0, rt0 WHERE ((NOT ('hU-<Hg'''))) UNION SELECT DISTINCT rt0.c1, vt0.c0, rt0.c2, v0.c0, rt0.c0, vt1.c0 FROM vt0, vt1, v0, rt0 WHERE ((('hU-<Hg''') ISNULL));
SELECT DISTINCT rt0.c1, vt0.c0, rt0.c2, v0.c0, rt0.c0, vt1.c0 FROM vt0, vt1, v0, rt0;
SELECT rt0.c2, rt0.c1 FROM v0, rt0, vt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM v0, rt0, vt0 WHERE (rt0.c1) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM v0, rt0 NOT INDEXED, vt0 WHERE ((NOT (rt0.c1))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM v0, rt0, vt0 WHERE (((rt0.c1) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM v0, rt0, vt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, vt1.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON (~ (CAST(rt0.c0 AS INTEGER))) LEFT OUTER JOIN rt0 ON CAST((+ (x'')) AS REAL) GROUP BY rt0.c2, rt0.c0, vt1.c0;
SELECT * FROM vt0, vt1, v0, rt0;
SELECT * FROM vt0, vt1, v0, rt0 WHERE (((((((vt0.c0)AND(vt1.c0)))AND(rt0.c2))) ISNULL)) UNION ALL SELECT * FROM vt0, vt1, v0, rt0 WHERE ((NOT (((((((vt0.c0)AND(vt1.c0)))AND(rt0.c2))) ISNULL)))) UNION ALL SELECT * FROM vt0, vt1, v0, rt0 WHERE (((((((((vt0.c0)AND(vt1.c0)))AND(rt0.c2))) ISNULL)) ISNULL));
SELECT * FROM vt0, vt1, v0, rt0;
SELECT DISTINCT * FROM rt0 INNER JOIN vt0 ON CAST((rt0.c1 IN ()) AS INTEGER) INNER JOIN vt1 ON (NOT (((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c1))));
SELECT DISTINCT * FROM rt0 INNER JOIN vt0 ON CAST((rt0.c1 IN ()) AS INTEGER) INNER JOIN vt1 ON (NOT (((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c1)))) WHERE (((340258379)GLOB((('') ISNULL)))) UNION SELECT DISTINCT * FROM rt0 INNER JOIN vt0 ON CAST((rt0.c1 IN ()) AS INTEGER) INNER JOIN vt1 ON (NOT (((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c1)))) WHERE ((NOT (((340258379)GLOB((('') ISNULL)))))) UNION SELECT DISTINCT * FROM rt0 INNER JOIN vt0 ON CAST((rt0.c1 IN ()) AS INTEGER) INNER JOIN vt1 ON (NOT (((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c1)))) WHERE (((((340258379)GLOB((('') ISNULL)))) ISNULL));
SELECT DISTINCT * FROM rt0 INNER JOIN vt0 ON CAST((rt0.c1 IN ()) AS INTEGER) INNER JOIN vt1 ON (NOT (((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c1))));
SELECT ALL vt0.c0, v0.c0, rt0.c2 FROM v0 CROSS JOIN vt0 ON CAST(((rt0.c2)OR(rt0.c1)) AS TEXT) RIGHT OUTER JOIN vt1 ON ((((((((vt1.c0)AND(vt0.c0)))OR(v0.c0)))OR(vt0.c0)))AND(rt0.c0)) COLLATE NOCASE FULL OUTER JOIN rt0 ON x'04b9' GROUP BY vt0.c0, v0.c0, rt0.c2;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING AVG(COUNT(*)) UNION ALL SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING (NOT (AVG(COUNT(*)))) UNION ALL SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING ((AVG(COUNT(*))) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((((((rt0.c1) ISNULL)))>((((rt0.c0) BETWEEN (0.8048702849739855) AND (rt0.c0)))))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((((((rt0.c1) ISNULL)))>((((rt0.c0) BETWEEN (0.8048702849739855) AND (rt0.c0)))))))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((((((((rt0.c1) ISNULL)))>((((rt0.c0) BETWEEN (0.8048702849739855) AND (rt0.c0)))))) ISNULL));
SELECT ALL rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), (x'' IN (vt0.c0)), '-651228618'))==(((NOT (vt0.c0)), LIKELIHOOD(DISTINCT vt0.c0, 0.7173517408605847), ((vt0.c0)-(vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), (x'' IN (vt0.c0)), '-651228618'))==(((NOT (vt0.c0)), LIKELIHOOD(DISTINCT vt0.c0, 0.7173517408605847), ((vt0.c0)-(vt0.c0)))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), (x'' IN (vt0.c0)), '-651228618'))=(((NOT (vt0.c0)), LIKELIHOOD(DISTINCT vt0.c0, 0.7173517408605847), ((vt0.c0)-(vt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 WHERE (CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0)/(vt0.c0)) ELSE ((vt1.c0) NOT NULL) END) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((NOT (CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0)/(vt0.c0)) ELSE ((vt1.c0) NOT NULL) END))) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 WHERE (((CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0)/(vt0.c0)) ELSE ((vt1.c0) NOT NULL) END) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT ALL rt0.c1 FROM v0, rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM v0, rt0 GROUP BY rt0.c1 HAVING GROUP_CONCAT(MIN(MIN(MIN(GROUP_CONCAT(TOTAL(AVG(v0.c0))))))) UNION ALL SELECT rt0.c1 FROM v0, rt0 GROUP BY rt0.c1 HAVING (NOT (GROUP_CONCAT(MIN(MIN(MIN(GROUP_CONCAT(TOTAL(AVG(v0.c0))))))))) UNION ALL SELECT ALL rt0.c1 FROM v0, rt0 GROUP BY rt0.c1 HAVING ((GROUP_CONCAT(MIN(MIN(MIN(GROUP_CONCAT(TOTAL(AVG(v0.c0)))))))) ISNULL);
SELECT * FROM rt0, v0, vt0;
SELECT ALL * FROM rt0, v0, vt0 WHERE (LOWER(DISTINCT (- (v0.c0)))) UNION ALL SELECT ALL * FROM rt0, v0, vt0 WHERE ((NOT (LOWER(DISTINCT (- (v0.c0)))))) UNION ALL SELECT ALL * FROM rt0, v0, vt0 WHERE (((LOWER(DISTINCT (- (v0.c0)))) ISNULL));
SELECT * FROM rt0, v0, vt0;
SELECT DISTINCT rt0.c0, vt0.c0, rt0.c2 FROM rt0, vt0;
SELECT DISTINCT rt0.c0, vt0.c0, rt0.c2 FROM rt0, vt0 WHERE ((- ((~ (rt0.c0))))) UNION SELECT DISTINCT rt0.c0, vt0.c0, rt0.c2 FROM rt0, vt0 WHERE ((NOT ((- ((~ (rt0.c0))))))) UNION SELECT DISTINCT rt0.c0, vt0.c0, rt0.c2 FROM rt0, vt0 WHERE ((((- ((~ (rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c0, vt0.c0, rt0.c2 FROM rt0, vt0;
SELECT rt0.c0, vt0.c0, vt1.c0, v0.c0, rt0.c1 FROM v0 LEFT OUTER JOIN rt0 ON CASE (rt0.c2 IN (v0.c0))  WHEN ((((rt0.c0)AND(vt0.c0)))AND(rt0.c0)) THEN (((vt1.c0))>=((rt0.c2))) WHEN vt1.c0 COLLATE RTRIM THEN CASE WHEN v0.c0 THEN rt0.c0 END WHEN vt0.c0 COLLATE BINARY THEN ((-5.77027631E8) ISNULL) END INNER JOIN vt1 ON 0x58639822 FULL OUTER JOIN vt0 ON ((((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))/((((v0.c0))>((vt1.c0))))) GROUP BY rt0.c0, vt0.c0, vt1.c0, v0.c0, rt0.c1;
SELECT ALL vt0.c0 FROM vt1, vt0, v0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, vt0, v0 GROUP BY vt0.c0 HAVING AVG(TRIM(DISTINCT AVG(v0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt1, vt0, v0 GROUP BY vt0.c0 HAVING (NOT (AVG(TRIM(DISTINCT AVG(v0.c0))))) UNION ALL SELECT vt0.c0 FROM vt1, vt0, v0 GROUP BY vt0.c0 HAVING ((AVG(TRIM(DISTINCT AVG(v0.c0)))) ISNULL);
SELECT ALL vt0.c0, v0.c0, rt0.c2 FROM vt1, vt0, v0 CROSS JOIN rt0 ON ('665169929' IN (((rt0.c1)LIKE(v0.c0))));
SELECT vt0.c0, v0.c0, rt0.c2 FROM vt1, vt0, v0 CROSS JOIN rt0 ON ('665169929' IN (((rt0.c1)LIKE(v0.c0)))) WHERE (((CASE vt1.c0  WHEN vt0.c0 THEN rt0.c1 END) ISNULL)) UNION ALL SELECT ALL vt0.c0, v0.c0, rt0.c2 FROM vt1, vt0, v0 CROSS JOIN rt0 ON ('665169929' IN (((rt0.c1)LIKE(v0.c0)))) WHERE ((NOT (((CASE vt1.c0  WHEN vt0.c0 THEN rt0.c1 END) ISNULL)))) UNION ALL SELECT vt0.c0, v0.c0, rt0.c2 FROM vt1, vt0, v0 CROSS JOIN rt0 ON ('665169929' IN (((rt0.c1)LIKE(v0.c0)))) WHERE (((((CASE vt1.c0  WHEN vt0.c0 THEN rt0.c1 END) ISNULL)) ISNULL));
SELECT ALL vt0.c0, v0.c0, rt0.c2 FROM vt1, vt0, v0 CROSS JOIN rt0 ON ('665169929' IN (((rt0.c1)LIKE(v0.c0))));
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON (- (vt1.c0));
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON (- (vt1.c0)) WHERE (NULL) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON (- (vt1.c0)) WHERE ((NOT (NULL))) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON (- (vt1.c0)) WHERE (((NULL) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON (- (vt1.c0));
SELECT ALL rt0.c2, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0, vt0 WHERE (UNLIKELY(rt0.c2)) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0, vt0 WHERE ((NOT (UNLIKELY(rt0.c2)))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0, vt0 WHERE (((UNLIKELY(rt0.c2)) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1;
SELECT vt1.c0, v0.c0, rt0.c2, vt0.c0 FROM vt1, v0, rt0, vt0 GROUP BY vt1.c0, v0.c0, rt0.c2, vt0.c0;
SELECT ALL vt1.c0, v0.c0, rt0.c2, vt0.c0 FROM vt1, v0, rt0, vt0 GROUP BY vt1.c0, v0.c0, rt0.c2, vt0.c0 HAVING ((CASE TOTAL(SUM(rt0.c0))  WHEN v0.c0 THEN rt0.c1 END) IS FALSE) UNION ALL SELECT vt1.c0, v0.c0, rt0.c2, vt0.c0 FROM vt1, v0, rt0, vt0 GROUP BY vt1.c0, v0.c0, rt0.c2, vt0.c0 HAVING (NOT (((CASE TOTAL(SUM(rt0.c0))  WHEN v0.c0 THEN rt0.c1 END) IS FALSE))) UNION ALL SELECT vt1.c0, v0.c0, rt0.c2, vt0.c0 FROM vt1, v0, rt0, vt0 GROUP BY vt1.c0, v0.c0, rt0.c2, vt0.c0 HAVING ((((CASE TOTAL(SUM(rt0.c0))  WHEN v0.c0 THEN rt0.c1 END) IS FALSE)) ISNULL);
SELECT ALL MIN((((((((vt1.c0))<=((v0.c0))))AND((- (rt0.c1)))))OR(((((rt0.c0)OR(rt0.c1)))AND(rt0.c1))))) FROM v0, rt0, vt1;
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (((v0.c0 COLLATE BINARY)LIKE((NOT (v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (((v0.c0 COLLATE BINARY)LIKE((NOT (v0.c0))))))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((((v0.c0 COLLATE BINARY)LIKE((NOT (v0.c0))))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE ((rt0.c1 IN (rt0.c1))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT ((rt0.c1 IN (rt0.c1))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((((rt0.c1 IN (rt0.c1))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (('' IN ())) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (('' IN ())))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((('' IN ())) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt1.c0, vt0.c0, rt0.c1, v0.c0, rt0.c2, rt0.c0 FROM vt0, vt1 CROSS JOIN v0 ON CASE INSTR(v0.c0, rt0.c0)  WHEN ((vt1.c0) ISNULL) THEN ((vt0.c0)>=('-1185878651')) ELSE ((rt0.c0)GLOB(0.5749328430070785)) END INNER JOIN rt0 ON (~ (rt0.c2 COLLATE RTRIM)) GROUP BY vt1.c0, vt0.c0, rt0.c1, v0.c0, rt0.c2, rt0.c0;
SELECT vt1.c0, vt0.c0, rt0.c1, v0.c0, rt0.c2, rt0.c0 FROM vt0, vt1 CROSS JOIN v0 ON CASE INSTR(v0.c0, rt0.c0)  WHEN ((vt1.c0) ISNULL) THEN ((vt0.c0)>=('-1185878651')) ELSE ((rt0.c0)GLOB(0.5749328430070785)) END INNER JOIN rt0 ON (~ (rt0.c2 COLLATE RTRIM)) GROUP BY vt1.c0, vt0.c0, rt0.c1, v0.c0, rt0.c2, rt0.c0 HAVING json_remove(CASE WHEN MAX(rt0.c2) THEN AVG(rt0.c1) WHEN v0.c0 THEN TOTAL(GROUP_CONCAT(MIN(rt0.c1))) WHEN MAX(MAX(SUM('987059689'))) THEN GROUP_CONCAT(MAX(MAX(rt0.c2))) END, TOTAL(v0.c0)) UNION ALL SELECT vt1.c0, vt0.c0, rt0.c1, v0.c0, rt0.c2, rt0.c0 FROM vt0, vt1 CROSS JOIN v0 ON CASE INSTR(v0.c0, rt0.c0)  WHEN ((vt1.c0) ISNULL) THEN ((vt0.c0)>=('-1185878651')) ELSE ((rt0.c0)GLOB(0.5749328430070785)) END INNER JOIN rt0 ON (~ (rt0.c2 COLLATE RTRIM)) GROUP BY vt1.c0, vt0.c0, rt0.c1, v0.c0, rt0.c2, rt0.c0 HAVING (NOT (json_remove(CASE WHEN MAX(rt0.c2) THEN AVG(rt0.c1) WHEN v0.c0 THEN TOTAL(GROUP_CONCAT(MIN(rt0.c1))) WHEN MAX(MAX(SUM('987059689'))) THEN GROUP_CONCAT(MAX(MAX(rt0.c2))) END, TOTAL(v0.c0)))) UNION ALL SELECT ALL vt1.c0, vt0.c0, rt0.c1, v0.c0, rt0.c2, rt0.c0 FROM vt0, vt1 CROSS JOIN v0 ON CASE INSTR(v0.c0, rt0.c0)  WHEN ((vt1.c0) ISNULL) THEN ((vt0.c0)>=('-1185878651')) ELSE ((rt0.c0)GLOB(0.5749328430070785)) END INNER JOIN rt0 ON (~ (rt0.c2 COLLATE RTRIM)) GROUP BY vt1.c0, vt0.c0, rt0.c1, v0.c0, rt0.c2, rt0.c0 HAVING ((json_remove(CASE WHEN MAX(rt0.c2) THEN AVG(rt0.c1) WHEN v0.c0 THEN TOTAL(GROUP_CONCAT(MIN(rt0.c1))) WHEN MAX(MAX(SUM('987059689'))) THEN GROUP_CONCAT(MAX(MAX(rt0.c2))) END, TOTAL(v0.c0))) ISNULL);
SELECT ALL * FROM vt1 FULL OUTER JOIN v0 ON ((v0.c0)=(rt0.c0)) COLLATE RTRIM COLLATE RTRIM CROSS JOIN vt0 ON ((NULL)IS NOT((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((v0.c0))))) CROSS JOIN rt0 ON ((NULL) NOT BETWEEN (((((vt0.c0)OR(rt0.c2)))OR(rt0.c0))) AND (JULIANDAY(vt1.c0, rt0.c0, v0.c0)));
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0, vt1.c0, vt0.c0 FROM vt0, rt0, vt1;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0, vt1.c0, vt0.c0 FROM vt0, rt0, vt1 WHERE (rt0.c0) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0, vt1.c0, vt0.c0 FROM vt0, rt0, vt1 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0, vt1.c0, vt0.c0 FROM vt0, rt0, vt1 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0, vt1.c0, vt0.c0 FROM vt0, rt0, vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((IFNULL(DISTINCT vt1.c0, vt1.c0))/((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((IFNULL(DISTINCT vt1.c0, vt1.c0))/((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((IFNULL(DISTINCT vt1.c0, vt1.c0))/((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON ((((v0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) IN ()) CROSS JOIN v0 ON ((CAST(rt0.c1 AS BLOB))|(((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)))) FULL OUTER JOIN vt1 ON NULL GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON ((((v0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) IN ()) CROSS JOIN v0 ON ((CAST(rt0.c1 AS BLOB))|(((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)))) FULL OUTER JOIN vt1 ON NULL GROUP BY vt0.c0 HAVING ((((AVG(vt1.c0))AND(SQLITE_VERSION())))OR(COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON ((((v0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) IN ()) CROSS JOIN v0 ON ((CAST(rt0.c1 AS BLOB))|(((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)))) FULL OUTER JOIN vt1 ON NULL GROUP BY vt0.c0 HAVING (NOT (((((AVG(vt1.c0))AND(SQLITE_VERSION())))OR(COUNT(*))))) UNION ALL SELECT vt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON ((((v0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) IN ()) CROSS JOIN v0 ON ((CAST(rt0.c1 AS BLOB))|(((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)))) FULL OUTER JOIN vt1 ON NULL GROUP BY vt0.c0 HAVING ((((((AVG(vt1.c0))AND(SQLITE_VERSION())))OR(COUNT(*)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON ((((v0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) IN ()) CROSS JOIN v0 ON ((CAST(rt0.c1 AS BLOB))|(((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)))) FULL OUTER JOIN vt1 ON NULL GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON ((((v0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) IN ()) CROSS JOIN v0 ON ((CAST(rt0.c1 AS BLOB))|(((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)))) FULL OUTER JOIN vt1 ON NULL GROUP BY vt0.c0 HAVING ((((AVG(vt1.c0))AND(SQLITE_VERSION())))OR(COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON ((((v0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) IN ()) CROSS JOIN v0 ON ((CAST(rt0.c1 AS BLOB))|(((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)))) FULL OUTER JOIN vt1 ON NULL GROUP BY vt0.c0 HAVING (NOT (((((AVG(vt1.c0))AND(SQLITE_VERSION())))OR(COUNT(*))))) UNION ALL SELECT vt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON ((((v0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) IN ()) CROSS JOIN v0 ON ((CAST(rt0.c1 AS BLOB))|(((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)))) FULL OUTER JOIN vt1 ON NULL GROUP BY vt0.c0 HAVING ((((((AVG(vt1.c0))AND(SQLITE_VERSION())))OR(COUNT(*)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON ((((v0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) IN ()) CROSS JOIN v0 ON ((CAST(rt0.c1 AS BLOB))|(((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)))) FULL OUTER JOIN vt1 ON NULL GROUP BY vt0.c0;
SELECT rt0.c0, vt1.c0 FROM vt1, rt0, vt0;
SELECT ALL rt0.c0, vt1.c0 FROM vt1, rt0, vt0 WHERE ('-745882709') UNION ALL SELECT rt0.c0, vt1.c0 FROM vt1, rt0, vt0 WHERE ((NOT ('-745882709'))) UNION ALL SELECT ALL rt0.c0, vt1.c0 FROM vt1, rt0, vt0 NOT INDEXED WHERE ((('-745882709') ISNULL));
SELECT rt0.c0, vt1.c0 FROM vt1, rt0, vt0;
SELECT DISTINCT vt1.c0 FROM vt0, vt1;
SELECT DISTINCT vt1.c0 FROM vt0, vt1 WHERE (CASE WHEN NULL THEN vt1.c0 END COLLATE NOCASE) UNION SELECT DISTINCT vt1.c0 FROM vt0, vt1 WHERE ((NOT (CASE WHEN NULL THEN vt1.c0 END COLLATE NOCASE))) UNION SELECT DISTINCT vt1.c0 FROM vt0, vt1 WHERE (((CASE WHEN NULL THEN vt1.c0 END COLLATE NOCASE) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt0, vt1;
SELECT v0.c0, vt1.c0, rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM vt1, vt0 FULL OUTER JOIN rt0 ON ((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE NOCASE CROSS JOIN v0 ON x'' GROUP BY v0.c0, vt1.c0, rt0.c2, vt0.c0, rt0.c1, rt0.c0;
SELECT ALL v0.c0, vt1.c0, rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM vt1, vt0 FULL OUTER JOIN rt0 ON ((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE NOCASE CROSS JOIN v0 ON x'' WHERE (CAST((+ (rt0.c1)) AS INTEGER)) GROUP BY v0.c0, vt1.c0, rt0.c2, vt0.c0, rt0.c1, rt0.c0 UNION SELECT ALL v0.c0, vt1.c0, rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM vt1, vt0 FULL OUTER JOIN rt0 ON ((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE NOCASE CROSS JOIN v0 ON x'' WHERE ((NOT (CAST((+ (rt0.c1)) AS INTEGER)))) GROUP BY v0.c0, vt1.c0, rt0.c2, vt0.c0, rt0.c1, rt0.c0 UNION SELECT ALL v0.c0, vt1.c0, rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM vt1, vt0 FULL OUTER JOIN rt0 ON ((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE NOCASE CROSS JOIN v0 ON x'' WHERE (((CAST((+ (rt0.c1)) AS INTEGER)) ISNULL)) GROUP BY v0.c0, vt1.c0, rt0.c2, vt0.c0, rt0.c1, rt0.c0;
SELECT v0.c0, vt1.c0, rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM vt1, vt0 FULL OUTER JOIN rt0 ON ((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE NOCASE CROSS JOIN v0 ON x'' GROUP BY v0.c0, vt1.c0, rt0.c2, vt0.c0, rt0.c1, rt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c0 UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c0 UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c0 FROM vt1, vt0, rt0, v0;
SELECT ALL rt0.c0 FROM vt1, vt0, rt0, v0 WHERE ((+ (v0.c0 COLLATE NOCASE))) UNION ALL SELECT rt0.c0 FROM vt1, vt0, rt0, v0 WHERE ((NOT ((+ (v0.c0 COLLATE NOCASE))))) UNION ALL SELECT rt0.c0 FROM vt1, vt0, rt0, v0 WHERE ((((+ (v0.c0 COLLATE NOCASE))) ISNULL));
SELECT ALL rt0.c0 FROM vt1, vt0, rt0, v0;
SELECT DISTINCT rt0.c1, rt0.c0, v0.c0, rt0.c2 FROM rt0, v0 NATURAL JOIN vt1;
SELECT DISTINCT rt0.c1, rt0.c0, v0.c0, rt0.c2 FROM rt0, v0 NATURAL JOIN vt1 WHERE (((0.5089635907283567)*('gVK/[Z'))) UNION SELECT DISTINCT rt0.c1, rt0.c0, v0.c0, rt0.c2 FROM rt0, v0 NATURAL JOIN vt1 WHERE ((NOT (((0.5089635907283567)*('gVK/[Z'))))) UNION SELECT DISTINCT rt0.c1, rt0.c0, v0.c0, rt0.c2 FROM rt0, v0 NATURAL JOIN vt1 WHERE (((((0.5089635907283567)*('gVK/[Z'))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, v0.c0, rt0.c2 FROM rt0, v0 NATURAL JOIN vt1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0, v0, vt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0, v0, vt0 WHERE (((((rt0.c2)AND(rt0.c0)))OR(TRIM(rt0.c0, rt0.c0)))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0, v0, vt0 WHERE ((NOT (((((rt0.c2)AND(rt0.c0)))OR(TRIM(rt0.c0, rt0.c0)))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0, v0, vt0 WHERE (((((((rt0.c2)AND(rt0.c0)))OR(TRIM(rt0.c0, rt0.c0)))) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0, v0, vt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL vt0.c0, rt0.c2, rt0.c0, vt1.c0 FROM vt1 CROSS JOIN rt0 ON ((rt0.c1 COLLATE BINARY) IS TRUE) LEFT OUTER JOIN vt0 ON (((vt0.c0)>>(vt1.c0)) IN (((rt0.c2)+(rt0.c0)))) GROUP BY vt0.c0, rt0.c2, rt0.c0, vt1.c0;
SELECT ALL vt0.c0, rt0.c2, rt0.c0, vt1.c0 FROM vt1 CROSS JOIN rt0 ON ((rt0.c1 COLLATE BINARY) IS TRUE) LEFT OUTER JOIN vt0 ON (((vt0.c0)>>(vt1.c0)) IN (((rt0.c2)+(rt0.c0)))) GROUP BY vt0.c0, rt0.c2, rt0.c0, vt1.c0 HAVING GROUP_CONCAT(TOTAL(vt1.c0)) UNION ALL SELECT vt0.c0, rt0.c2, rt0.c0, vt1.c0 FROM vt1 CROSS JOIN rt0 ON ((rt0.c1 COLLATE BINARY) IS TRUE) LEFT OUTER JOIN vt0 ON (((vt0.c0)>>(vt1.c0)) IN (((rt0.c2)+(rt0.c0)))) GROUP BY vt0.c0, rt0.c2, rt0.c0, vt1.c0 HAVING (NOT (GROUP_CONCAT(TOTAL(vt1.c0)))) UNION ALL SELECT vt0.c0, rt0.c2, rt0.c0, vt1.c0 FROM vt1 CROSS JOIN rt0 ON ((rt0.c1 COLLATE BINARY) IS TRUE) LEFT OUTER JOIN vt0 ON (((vt0.c0)>>(vt1.c0)) IN (((rt0.c2)+(rt0.c0)))) GROUP BY vt0.c0, rt0.c2, rt0.c0, vt1.c0 HAVING ((GROUP_CONCAT(TOTAL(vt1.c0))) ISNULL);
SELECT vt0.c0 FROM vt0, vt1;
SELECT vt0.c0 FROM vt0, vt1 WHERE (HEX(DISTINCT ((((((((((((((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)))AND(vt1.c0)))) UNION ALL SELECT vt0.c0 FROM vt0, vt1 WHERE ((NOT (HEX(DISTINCT ((((((((((((((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)))AND(vt1.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0, vt1 WHERE (((HEX(DISTINCT ((((((((((((((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)))AND(vt1.c0)))) ISNULL));
SELECT vt0.c0 FROM vt0, vt1;
SELECT DISTINCT v0.c0, rt0.c2, vt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON ((TRIM(vt0.c0, vt0.c0)) NOT BETWEEN (((rt0.c0) NOT BETWEEN (x'cf12') AND (x'bd0fb976'))) AND ((((rt0.c1))==((rt0.c2))))) LEFT OUTER JOIN v0 ON ((HEX(DISTINCT x''))>=(((vt0.c0) NOTNULL)));
SELECT DISTINCT v0.c0, rt0.c2, vt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON ((TRIM(vt0.c0, vt0.c0)) NOT BETWEEN (((rt0.c0) NOT BETWEEN (x'cf12') AND (x'bd0fb976'))) AND ((((rt0.c1))=((rt0.c2))))) LEFT OUTER JOIN v0 ON ((HEX(DISTINCT x''))>=(((vt0.c0) NOTNULL))) WHERE (((vt0.c0) IS TRUE)) UNION SELECT DISTINCT v0.c0, rt0.c2, vt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON ((TRIM(vt0.c0, vt0.c0)) NOT BETWEEN (((rt0.c0) NOT BETWEEN (x'cf12') AND (x'bd0fb976'))) AND ((((rt0.c1))=((rt0.c2))))) LEFT OUTER JOIN v0 ON ((HEX(DISTINCT x''))>=(((vt0.c0) NOTNULL))) WHERE ((NOT (((vt0.c0) IS TRUE)))) UNION SELECT DISTINCT v0.c0, rt0.c2, vt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON ((TRIM(vt0.c0, vt0.c0)) NOT BETWEEN (((rt0.c0) NOT BETWEEN (x'cf12') AND (x'bd0fb976'))) AND ((((rt0.c1))==((rt0.c2))))) LEFT OUTER JOIN v0 ON ((HEX(DISTINCT x''))>=(((vt0.c0) NOTNULL))) WHERE (((((vt0.c0) IS TRUE)) ISNULL));
SELECT DISTINCT v0.c0, rt0.c2, vt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON ((TRIM(vt0.c0, vt0.c0)) NOT BETWEEN (((rt0.c0) NOT BETWEEN (x'cf12') AND (x'bd0fb976'))) AND ((((rt0.c1))==((rt0.c2))))) LEFT OUTER JOIN v0 ON ((HEX(DISTINCT x''))>=(((vt0.c0) NOTNULL)));
SELECT ALL vt1.c0, vt0.c0, rt0.c2, rt0.c1 FROM rt0 INNER JOIN vt0 ON (((rt0.c2))==((vt1.c0))) COLLATE RTRIM FULL OUTER JOIN v0 ON (((((vt1.c0)OR(v0.c0)))AND(vt0.c0)) IN (((v0.c0)GLOB(vt1.c0)))) LEFT OUTER JOIN vt1 ON (((rt0.c1 IN ())) ISNULL) GROUP BY vt1.c0, vt0.c0, rt0.c2, rt0.c1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (x''))) IS TRUE) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (x''))) IS TRUE))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (x''))) IS TRUE)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (x''))) IS TRUE) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (x''))) IS TRUE))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (x''))) IS TRUE)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt1 ON ((((NULL) IS FALSE))LIKE((vt1.c0 IN ()))) FULL OUTER JOIN vt0 ON ((((((vt1.c0)OR(vt1.c0)))AND(v0.c0))) NOT NULL) RIGHT OUTER JOIN v0 ON (vt0.c0 IN (CAST('' AS REAL)));
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE (((((CASE '1976273452'  WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR(CAST(v0.c0 AS REAL))))OR(vt0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT (((((CASE '1976273452'  WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR(CAST(v0.c0 AS REAL))))OR(vt0.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE (((((((CASE '1976273452'  WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR(CAST(v0.c0 AS REAL))))OR(vt0.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT vt1.c0 FROM vt1, v0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, v0 WHERE ((- (CAST(vt1.c0 AS TEXT)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1, v0 WHERE ((NOT ((- (CAST(vt1.c0 AS TEXT)))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, v0 WHERE ((((- (CAST(vt1.c0 AS TEXT)))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, v0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, rt0 LEFT OUTER JOIN v0 ON -1.856480106E9 RIGHT OUTER JOIN vt0 ON (((((rt0.c1) IS FALSE)))>((((((rt0.c1)OR(rt0.c2)))OR(rt0.c1))))) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, rt0 LEFT OUTER JOIN v0 ON -1.856480106E9 RIGHT OUTER JOIN vt0 ON (((((rt0.c1) IS FALSE)))>((((((rt0.c1)OR(rt0.c2)))OR(rt0.c1))))) GROUP BY vt1.c0 HAVING CASE COUNT(vt1.c0)  WHEN TOTAL('\ꗙ') THEN AVG(MAX(rt0.c1)) END UNION ALL SELECT ALL vt1.c0 FROM vt1, rt0 LEFT OUTER JOIN v0 ON -1.856480106E9 RIGHT OUTER JOIN vt0 ON (((((rt0.c1) IS FALSE)))>((((((rt0.c1)OR(rt0.c2)))OR(rt0.c1))))) GROUP BY vt1.c0 HAVING (NOT (CASE COUNT(vt1.c0)  WHEN TOTAL('\ꗙ') THEN AVG(MAX(rt0.c1)) END)) UNION ALL SELECT vt1.c0 FROM vt1, rt0 LEFT OUTER JOIN v0 ON -1.856480106E9 RIGHT OUTER JOIN vt0 ON (((((rt0.c1) IS FALSE)))>((((((rt0.c1)OR(rt0.c2)))OR(rt0.c1))))) GROUP BY vt1.c0 HAVING ((CASE COUNT(vt1.c0)  WHEN TOTAL('\ꗙ') THEN AVG(MAX(rt0.c1)) END) ISNULL);
SELECT vt1.c0, vt0.c0, rt0.c1, rt0.c2, v0.c0 FROM rt0 CROSS JOIN vt1 ON CASE ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2))  WHEN (- (rt0.c1)) THEN CAST(0.3005859176642032 AS REAL) WHEN vt0.c0 COLLATE BINARY THEN rt0.c1 WHEN ((vt1.c0) BETWEEN (x'') AND (vt1.c0)) THEN (rt0.c0 IN ()) ELSE ((rt0.c1)OR(vt0.c0)) END RIGHT OUTER JOIN v0 ON v0.c0 LEFT OUTER JOIN vt0 ON ((((vt0.c0)!=(rt0.c0))) BETWEEN (CASE WHEN vt0.c0 THEN v0.c0 END) AND (((vt1.c0)<>(vt0.c0))));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, v0.c0, vt0.c0 FROM v0 LEFT OUTER JOIN vt0 ON CASE UNLIKELY(vt0.c0)  WHEN (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) THEN (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) ELSE CAST(vt0.c0 AS INTEGER) END INNER JOIN rt0 ON CASE ((rt0.c1)&(v0.c0))  WHEN (((rt0.c0))>=((vt0.c0))) THEN LOWER(DISTINCT vt0.c0) WHEN NULL THEN rt0.c2 WHEN ((rt0.c1) NOTNULL) THEN CASE v0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END ELSE ((x'') BETWEEN (0.6654978762344673) AND (rt0.c2)) END;
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0, vt1 WHERE (CASE WHEN CAST(vt1.c0 AS TEXT) THEN 0.4684477160422842 END) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt0, vt1 WHERE ((NOT (CASE WHEN CAST(vt1.c0 AS TEXT) THEN 0.4684477160422842 END))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt0, vt1 WHERE (((CASE WHEN CAST(vt1.c0 AS TEXT) THEN 0.4684477160422842 END) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING CASE WHEN rt0.c0 THEN MIN(TOTAL(SUM(MIN(AVG(COUNT(COUNT(GROUP_CONCAT(rt0.c2)))))))) WHEN rt0.c2 THEN TOTAL(MAX(rt0.c1)) WHEN TOTAL(rt0.c2) THEN MAX(rt0.c1) ELSE MIN(rt0.c0) END COLLATE NOCASE UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (CASE WHEN rt0.c0 THEN MIN(TOTAL(SUM(MIN(AVG(COUNT(COUNT(GROUP_CONCAT(rt0.c2)))))))) WHEN rt0.c2 THEN TOTAL(MAX(rt0.c1)) WHEN TOTAL(rt0.c2) THEN MAX(rt0.c1) ELSE MIN(rt0.c0) END COLLATE NOCASE)) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((CASE WHEN rt0.c0 THEN MIN(TOTAL(SUM(MIN(AVG(COUNT(COUNT(GROUP_CONCAT(rt0.c2)))))))) WHEN rt0.c2 THEN TOTAL(MAX(rt0.c1)) WHEN TOTAL(rt0.c2) THEN MAX(rt0.c1) ELSE MIN(rt0.c0) END COLLATE NOCASE) ISNULL);
SELECT ALL * FROM rt0, vt1;
SELECT * FROM rt0, vt1 WHERE (((TRIM(DISTINCT rt0.c2)) IS TRUE)) UNION ALL SELECT * FROM rt0, vt1 WHERE ((NOT (((TRIM(DISTINCT rt0.c2)) IS TRUE)))) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE (((((TRIM(DISTINCT rt0.c2)) IS TRUE)) ISNULL));
SELECT ALL * FROM rt0, vt1;
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE ('t#+W') UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT ('t#+W'))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((('t#+W') ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT rt0.c1, vt0.c0, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c0;
SELECT rt0.c1, vt0.c0, rt0.c0 FROM rt0, vt0 WHERE (rt0.c2) GROUP BY rt0.c1, vt0.c0, rt0.c0 UNION SELECT rt0.c1, vt0.c0, rt0.c0 FROM rt0, vt0 WHERE ((NOT (rt0.c2))) GROUP BY rt0.c1, vt0.c0, rt0.c0 UNION SELECT rt0.c1, vt0.c0, rt0.c0 FROM rt0, vt0 WHERE (((rt0.c2) ISNULL)) GROUP BY rt0.c1, vt0.c0, rt0.c0;
SELECT rt0.c1, vt0.c0, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c0;
SELECT vt1.c0, vt0.c0, v0.c0, rt0.c0, rt0.c2 FROM vt0, vt1, v0, rt0 GROUP BY vt1.c0, vt0.c0, v0.c0, rt0.c0, rt0.c2;
SELECT ALL vt1.c0, vt0.c0, v0.c0, rt0.c0, rt0.c2 FROM vt0, vt1, v0, rt0 GROUP BY vt1.c0, vt0.c0, v0.c0, rt0.c0, rt0.c2 HAVING MIN(x'') UNION ALL SELECT vt1.c0, vt0.c0, v0.c0, rt0.c0, rt0.c2 FROM vt0, vt1, v0, rt0 GROUP BY vt1.c0, vt0.c0, v0.c0, rt0.c0, rt0.c2 HAVING (NOT (MIN(x''))) UNION ALL SELECT vt1.c0, vt0.c0, v0.c0, rt0.c0, rt0.c2 FROM vt0, vt1, v0, rt0 GROUP BY vt1.c0, vt0.c0, v0.c0, rt0.c0, rt0.c2 HAVING ((MIN(x'')) ISNULL);
SELECT vt1.c0, vt0.c0, v0.c0, rt0.c0, rt0.c2 FROM vt0, vt1, v0, rt0 GROUP BY vt1.c0, vt0.c0, v0.c0, rt0.c0, rt0.c2;
SELECT ALL vt1.c0, vt0.c0, v0.c0, rt0.c0, rt0.c2 FROM vt0, vt1, v0, rt0 GROUP BY vt1.c0, vt0.c0, v0.c0, rt0.c0, rt0.c2 HAVING MIN(x'') UNION ALL SELECT vt1.c0, vt0.c0, v0.c0, rt0.c0, rt0.c2 FROM vt0, vt1, v0, rt0 GROUP BY vt1.c0, vt0.c0, v0.c0, rt0.c0, rt0.c2 HAVING (NOT (MIN(x''))) UNION ALL SELECT vt1.c0, vt0.c0, v0.c0, rt0.c0, rt0.c2 FROM vt0, vt1, v0, rt0 GROUP BY vt1.c0, vt0.c0, v0.c0, rt0.c0, rt0.c2 HAVING ((MIN(x'')) ISNULL);
SELECT vt1.c0, vt0.c0, v0.c0, rt0.c0, rt0.c2 FROM vt0, vt1, v0, rt0 GROUP BY vt1.c0, vt0.c0, v0.c0, rt0.c0, rt0.c2;
SELECT * FROM vt1 CROSS JOIN vt0 ON (('eE1') BETWEEN (vt0.c0) AND (vt1.c0)) COLLATE RTRIM;
SELECT * FROM vt1 CROSS JOIN vt0 ON (('eE1') BETWEEN (vt0.c0) AND (vt1.c0)) COLLATE RTRIM WHERE (CASE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))  WHEN ((vt1.c0)GLOB(vt1.c0)) THEN (vt1.c0 IN (vt1.c0)) END) UNION ALL SELECT * FROM vt1 CROSS JOIN vt0 ON (('eE1') BETWEEN (vt0.c0) AND (vt1.c0)) COLLATE RTRIM WHERE ((NOT (CASE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))  WHEN ((vt1.c0)GLOB(vt1.c0)) THEN (vt1.c0 IN (vt1.c0)) END))) UNION ALL SELECT ALL * FROM vt1 CROSS JOIN vt0 ON (('eE1') BETWEEN (vt0.c0) AND (vt1.c0)) COLLATE RTRIM WHERE (((CASE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))  WHEN ((vt1.c0)GLOB(vt1.c0)) THEN (vt1.c0 IN (vt1.c0)) END) ISNULL));
SELECT * FROM vt1 CROSS JOIN vt0 ON (('eE1') BETWEEN (vt0.c0) AND (vt1.c0)) COLLATE RTRIM;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((- ('1520693218'))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((- ('1520693218'))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((- ('1520693218'))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((((rt0.c0)*(rt0.c1)) IN ())) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c0)*(rt0.c1)) IN ())))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((((((rt0.c0)*(rt0.c1)) IN ())) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c0, v0.c0, rt0.c1 FROM vt1, v0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c1;
SELECT rt0.c0, v0.c0, rt0.c1 FROM vt1, v0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c1 HAVING MIN(COUNT(rt0.c0)) UNION ALL SELECT rt0.c0, v0.c0, rt0.c1 FROM vt1, v0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c1 HAVING (NOT (MIN(COUNT(rt0.c0)))) UNION ALL SELECT rt0.c0, v0.c0, rt0.c1 FROM vt1, v0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c1 HAVING ((MIN(COUNT(rt0.c0))) ISNULL);
SELECT vt1.c0, rt0.c1, rt0.c2 FROM rt0, vt1, vt0, v0;
SELECT ALL vt1.c0, rt0.c1, rt0.c2 FROM rt0, vt1, vt0, v0 WHERE (((((((rt0.c2)OR(rt0.c0)))OR(rt0.c2))) BETWEEN (((rt0.c1)%(rt0.c0))) AND (((v0.c0) IS TRUE)))) UNION ALL SELECT vt1.c0, rt0.c1, rt0.c2 FROM rt0, vt1, vt0, v0 WHERE ((NOT (((((((rt0.c2)OR(rt0.c0)))OR(rt0.c2))) BETWEEN (((rt0.c1)%(rt0.c0))) AND (((v0.c0) IS TRUE)))))) UNION ALL SELECT ALL vt1.c0, rt0.c1, rt0.c2 FROM rt0, vt1, vt0, v0 WHERE (((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c2))) BETWEEN (((rt0.c1)%(rt0.c0))) AND (((v0.c0) IS TRUE)))) ISNULL));
SELECT vt1.c0, rt0.c1, rt0.c2 FROM rt0, vt1, vt0, v0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0) IS TRUE))) AND ((CASE WHEN x'' THEN x'' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN ((((vt0.c0) IS TRUE))) AND ((CASE WHEN x'' THEN x'' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((((vt0.c0) IS TRUE))) AND ((CASE WHEN x'' THEN x'' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL rt0.c2, v0.c0 FROM v0, rt0, vt0, vt1 GROUP BY rt0.c2, v0.c0;
SELECT rt0.c2, v0.c0 FROM v0, rt0, vt0 NOT INDEXED, vt1 WHERE ((+ (((((((((((((v0.c0)OR(vt0.c0)))OR(rt0.c2)))OR(vt0.c0)))OR(vt1.c0)))AND(rt0.c2)))AND(v0.c0))))) GROUP BY rt0.c2, v0.c0 UNION SELECT rt0.c2, v0.c0 FROM v0, rt0, vt0, vt1 WHERE ((NOT ((+ (((((((((((((v0.c0)OR(vt0.c0)))OR(rt0.c2)))OR(vt0.c0)))OR(vt1.c0)))AND(rt0.c2)))AND(v0.c0))))))) GROUP BY rt0.c2, v0.c0 UNION SELECT ALL rt0.c2, v0.c0 FROM v0, rt0, vt0, vt1 WHERE ((((+ (((((((((((((v0.c0)OR(vt0.c0)))OR(rt0.c2)))OR(vt0.c0)))OR(vt1.c0)))AND(rt0.c2)))AND(v0.c0))))) ISNULL)) GROUP BY rt0.c2, v0.c0;
SELECT ALL rt0.c2, v0.c0 FROM v0, rt0, vt0, vt1 GROUP BY rt0.c2, v0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING SUM(GROUP_CONCAT(vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (SUM(GROUP_CONCAT(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM(GROUP_CONCAT(vt0.c0))) ISNULL);
SELECT ALL rt0.c1 FROM v0, rt0;
SELECT rt0.c1 FROM v0, rt0 WHERE (rt0.c1) UNION ALL SELECT ALL rt0.c1 FROM v0, rt0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT rt0.c1 FROM v0, rt0 WHERE (((rt0.c1) ISNULL));
SELECT ALL rt0.c1 FROM v0, rt0;
SELECT DISTINCT rt0.c2, vt0.c0 FROM vt1, vt0, rt0, v0;
SELECT DISTINCT rt0.c2, vt0.c0 FROM vt1, vt0 NOT INDEXED, rt0, v0 WHERE ((((((((((((rt0.c1)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))))AND((((0.6586063743520334))>((v0.c0))))))AND(((vt0.c0)LIKE(vt1.c0)))))OR((((vt0.c0, v0.c0, vt0.c0))<((vt1.c0, rt0.c1, v0.c0))))))OR(((((vt1.c0)AND(v0.c0)))AND(v0.c0))))) UNION SELECT DISTINCT rt0.c2, vt0.c0 FROM vt1, vt0, rt0, v0 WHERE ((NOT ((((((((((((rt0.c1)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))))AND((((0.6586063743520334))>((v0.c0))))))AND(((vt0.c0)LIKE(vt1.c0)))))OR((((vt0.c0, v0.c0, vt0.c0))<((vt1.c0, rt0.c1, v0.c0))))))OR(((((vt1.c0)AND(v0.c0)))AND(v0.c0))))))) UNION SELECT DISTINCT rt0.c2, vt0.c0 FROM vt1, vt0, rt0, v0 WHERE ((((((((((((((rt0.c1)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))))AND((((0.6586063743520334))>((v0.c0))))))AND(((vt0.c0)LIKE(vt1.c0)))))OR((((vt0.c0, v0.c0, vt0.c0))<((vt1.c0, rt0.c1, v0.c0))))))OR(((((vt1.c0)AND(v0.c0)))AND(v0.c0))))) ISNULL));
SELECT DISTINCT rt0.c2, vt0.c0 FROM vt1, vt0, rt0, v0;
SELECT vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB))IS NOT(((vt0.c0) ISNULL)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((CAST(vt0.c0 AS BLOB))IS NOT(((vt0.c0) ISNULL)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((CAST(vt0.c0 AS BLOB))IS NOT(((vt0.c0) ISNULL)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (CAST(MIN(vt0.c0) AS TEXT) IN ()) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((CAST(MIN(vt0.c0) AS TEXT) IN ()))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((CAST(MIN(vt0.c0) AS TEXT) IN ())) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (CAST(MIN(vt0.c0) AS TEXT) IN ()) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((CAST(MIN(vt0.c0) AS TEXT) IN ()))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((CAST(MIN(vt0.c0) AS TEXT) IN ())) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM v0, vt0, rt0, vt1;
SELECT ALL rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM v0, vt0, rt0, vt1 WHERE (((((vt1.c0)>=(rt0.c1)))IS NOT(CASE rt0.c1  WHEN v0.c0 THEN vt0.c0 ELSE rt0.c2 END))) UNION ALL SELECT ALL rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM v0, vt0, rt0, vt1 WHERE ((NOT (((((vt1.c0)>=(rt0.c1)))IS NOT(CASE rt0.c1  WHEN v0.c0 THEN vt0.c0 ELSE rt0.c2 END))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM v0, vt0, rt0, vt1 WHERE (((((((vt1.c0)>=(rt0.c1)))IS NOT(CASE rt0.c1  WHEN v0.c0 THEN vt0.c0 ELSE rt0.c2 END))) ISNULL));
SELECT ALL rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM v0, vt0, rt0, vt1;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (0xffffffff9790a935) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (0xffffffff9790a935))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((0xffffffff9790a935) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL rt0.c2 FROM vt1, v0, rt0, vt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM vt1, v0, rt0, vt0 WHERE (((CAST(v0.c0 AS NUMERIC))>(((v0.c0) BETWEEN (vt1.c0) AND (rt0.c1))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM vt1, v0, rt0, vt0 WHERE ((NOT (((CAST(v0.c0 AS NUMERIC))>(((v0.c0) BETWEEN (vt1.c0) AND (rt0.c1))))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM vt1, v0, rt0, vt0 WHERE (((((CAST(v0.c0 AS NUMERIC))>(((v0.c0) BETWEEN (vt1.c0) AND (rt0.c1))))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt1, v0, rt0, vt0 GROUP BY rt0.c2;
SELECT ALL vt1.c0 FROM vt1, rt0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, rt0 GROUP BY vt1.c0 HAVING MIN(((((x'')AND(COUNT(TOTAL(TOTAL(rt0.c2))))))AND(MAX(MAX(rt0.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1, rt0 GROUP BY vt1.c0 HAVING (NOT (MIN(((((x'')AND(COUNT(TOTAL(TOTAL(rt0.c2))))))AND(MAX(MAX(rt0.c0))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1, rt0 GROUP BY vt1.c0 HAVING ((MIN(((((x'')AND(COUNT(TOTAL(TOTAL(rt0.c2))))))AND(MAX(MAX(rt0.c0)))))) ISNULL);
SELECT ALL * FROM vt0, rt0 CROSS JOIN vt1 ON ((((((vt1.c0) NOT BETWEEN (x'') AND (rt0.c0)))OR((vt1.c0 IN ()))))OR(((rt0.c2) IS FALSE)));
SELECT ALL * FROM vt0, rt0 CROSS JOIN vt1 ON ((((((vt1.c0) NOT BETWEEN (x'') AND (rt0.c0)))OR((vt1.c0 IN ()))))OR(((rt0.c2) IS FALSE))) WHERE (CAST(((((rt0.c1)AND(vt1.c0)))AND(vt1.c0)) AS REAL)) UNION ALL SELECT ALL * FROM vt0, rt0 CROSS JOIN vt1 ON ((((((vt1.c0) NOT BETWEEN (x'') AND (rt0.c0)))OR((vt1.c0 IN ()))))OR(((rt0.c2) IS FALSE))) WHERE ((NOT (CAST(((((rt0.c1)AND(vt1.c0)))AND(vt1.c0)) AS REAL)))) UNION ALL SELECT * FROM vt0, rt0 CROSS JOIN vt1 ON ((((((vt1.c0) NOT BETWEEN (x'') AND (rt0.c0)))OR((vt1.c0 IN ()))))OR(((rt0.c2) IS FALSE))) WHERE (((CAST(((((rt0.c1)AND(vt1.c0)))AND(vt1.c0)) AS REAL)) ISNULL));
SELECT ALL * FROM vt0, rt0 CROSS JOIN vt1 ON ((((((vt1.c0) NOT BETWEEN (x'') AND (rt0.c0)))OR((vt1.c0 IN ()))))OR(((rt0.c2) IS FALSE)));
SELECT DISTINCT vt1.c0 FROM vt1, v0;
SELECT DISTINCT vt1.c0 FROM vt1, v0 WHERE (((((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c0))) BETWEEN ((((vt1.c0, x'647c', v0.c0)) BETWEEN ((vt1.c0, v0.c0, vt1.c0)) AND ((NULL, vt1.c0, vt1.c0)))) AND ((NOT (v0.c0))))) UNION SELECT DISTINCT vt1.c0 FROM vt1, v0 WHERE ((NOT (((((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c0))) BETWEEN ((((vt1.c0, x'647c', v0.c0)) BETWEEN ((vt1.c0, v0.c0, vt1.c0)) AND ((NULL, vt1.c0, vt1.c0)))) AND ((NOT (v0.c0))))))) UNION SELECT DISTINCT vt1.c0 FROM vt1, v0 WHERE (((((((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c0))) BETWEEN ((((vt1.c0, x'647c', v0.c0)) BETWEEN ((vt1.c0, v0.c0, vt1.c0)) AND ((NULL, vt1.c0, vt1.c0)))) AND ((NOT (v0.c0))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1, v0;
SELECT ALL vt1.c0, vt0.c0, v0.c0, rt0.c1 FROM vt1, vt0, rt0 NATURAL JOIN v0 GROUP BY vt1.c0, vt0.c0, v0.c0, rt0.c1;
SELECT ALL vt1.c0, vt0.c0, v0.c0, rt0.c1 FROM vt1, vt0, rt0 NATURAL JOIN v0 WHERE (((((vt1.c0)IS(rt0.c1))) NOT BETWEEN (json_insert(rt0.c0, rt0.c2, vt0.c0)) AND ((((rt0.c1, vt0.c0, vt1.c0))>((0x2f90c419, rt0.c0, rt0.c0)))))) GROUP BY vt1.c0, vt0.c0, v0.c0, rt0.c1 UNION SELECT vt1.c0, vt0.c0, v0.c0, rt0.c1 FROM vt1, vt0, rt0 NATURAL JOIN v0 WHERE ((NOT (((((vt1.c0)IS(rt0.c1))) NOT BETWEEN (json_insert(rt0.c0, rt0.c2, vt0.c0)) AND ((((rt0.c1, vt0.c0, vt1.c0))>((0x2f90c419, rt0.c0, rt0.c0)))))))) GROUP BY vt1.c0, vt0.c0, v0.c0, rt0.c1 UNION SELECT ALL vt1.c0, vt0.c0, v0.c0, rt0.c1 FROM vt1, vt0, rt0 NATURAL JOIN v0 WHERE (((((((vt1.c0)IS(rt0.c1))) NOT BETWEEN (json_insert(rt0.c0, rt0.c2, vt0.c0)) AND ((((rt0.c1, vt0.c0, vt1.c0))>((0x2f90c419, rt0.c0, rt0.c0)))))) ISNULL)) GROUP BY vt1.c0, vt0.c0, v0.c0, rt0.c1;
SELECT ALL vt1.c0, vt0.c0, v0.c0, rt0.c1 FROM vt1, vt0, rt0 NATURAL JOIN v0 GROUP BY vt1.c0, vt0.c0, v0.c0, rt0.c1;
SELECT vt1.c0, rt0.c1, rt0.c2, rt0.c0, v0.c0, vt0.c0 FROM vt0, vt1 RIGHT OUTER JOIN rt0 ON ((((vt0.c0)>>(vt0.c0))) IS TRUE) FULL OUTER JOIN v0 ON LOWER(DISTINCT ((rt0.c2)AND(vt0.c0))) GROUP BY vt1.c0, rt0.c1, rt0.c2, rt0.c0, v0.c0, vt0.c0;
SELECT ALL vt1.c0, rt0.c1, rt0.c2, rt0.c0, v0.c0, vt0.c0 FROM vt0, vt1 RIGHT OUTER JOIN rt0 ON ((((vt0.c0)>>(vt0.c0))) IS TRUE) FULL OUTER JOIN v0 ON LOWER(DISTINCT ((rt0.c2)AND(vt0.c0))) GROUP BY vt1.c0, rt0.c1, rt0.c2, rt0.c0, v0.c0, vt0.c0 HAVING CAST(GROUP_CONCAT(MAX(AVG(NULL))) AS BLOB) UNION ALL SELECT ALL vt1.c0, rt0.c1, rt0.c2, rt0.c0, v0.c0, vt0.c0 FROM vt0, vt1 RIGHT OUTER JOIN rt0 ON ((((vt0.c0)>>(vt0.c0))) IS TRUE) FULL OUTER JOIN v0 ON LOWER(DISTINCT ((rt0.c2)AND(vt0.c0))) GROUP BY vt1.c0, rt0.c1, rt0.c2, rt0.c0, v0.c0, vt0.c0 HAVING (NOT (CAST(GROUP_CONCAT(MAX(AVG(NULL))) AS BLOB))) UNION ALL SELECT vt1.c0, rt0.c1, rt0.c2, rt0.c0, v0.c0, vt0.c0 FROM vt0, vt1 RIGHT OUTER JOIN rt0 ON ((((vt0.c0)>>(vt0.c0))) IS TRUE) FULL OUTER JOIN v0 ON LOWER(DISTINCT ((rt0.c2)AND(vt0.c0))) GROUP BY vt1.c0, rt0.c1, rt0.c2, rt0.c0, v0.c0, vt0.c0 HAVING ((CAST(GROUP_CONCAT(MAX(AVG(NULL))) AS BLOB)) ISNULL);
SELECT rt0.c2, vt1.c0, rt0.c1 FROM vt1, rt0 LEFT OUTER JOIN vt0 ON (((((v0.c0) IS TRUE)))<((CAST(rt0.c2 AS BLOB)))) CROSS JOIN v0 ON LIKE(rt0.c1, vt1.c0) COLLATE RTRIM;
SELECT DISTINCT * FROM vt0 CROSS JOIN rt0 ON x'';
SELECT DISTINCT * FROM vt0 CROSS JOIN rt0 ON x'' WHERE ((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c0 END IN ())) UNION SELECT DISTINCT * FROM vt0 CROSS JOIN rt0 ON x'' WHERE ((NOT ((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c0 END IN ())))) UNION SELECT DISTINCT * FROM vt0 CROSS JOIN rt0 ON x'' WHERE ((((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c0 END IN ())) ISNULL));
SELECT DISTINCT * FROM vt0 CROSS JOIN rt0 ON x'';
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE (x'') GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (x''))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE (((x'') ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(vt1.c0)) NOT NULL) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((COUNT(vt1.c0)) NOT NULL))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((COUNT(vt1.c0)) NOT NULL)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(vt1.c0)) NOT NULL) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((COUNT(vt1.c0)) NOT NULL))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((COUNT(vt1.c0)) NOT NULL)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (CAST(rt0.c1 AS BLOB)))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((NOT (CAST(rt0.c1 AS BLOB)))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((NOT (CAST(rt0.c1 AS BLOB)))) ISNULL));
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0, vt1;
SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0, vt1 WHERE (((vt1.c0 COLLATE NOCASE) IS FALSE)) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0, vt1 WHERE ((NOT (((vt1.c0 COLLATE NOCASE) IS FALSE)))) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0, vt1 WHERE (((((vt1.c0 COLLATE NOCASE) IS FALSE)) ISNULL));
SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0, vt1;
SELECT v0.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt0 FULL OUTER JOIN vt1 ON ((((((((CASE WHEN rt0.c2 THEN rt0.c2 END)AND((+ (rt0.c0)))))OR((v0.c0 IN (v0.c0, vt1.c0)))))AND(((((((((rt0.c2)OR(v0.c0)))OR(rt0.c0)))AND(vt1.c0)))OR(rt0.c1)))))OR(rt0.c1 COLLATE NOCASE)) LEFT OUTER JOIN v0 ON ((((rt0.c0)/(rt0.c1)))OR((v0.c0 IN ()))) GROUP BY v0.c0, rt0.c0, rt0.c2, rt0.c1;
SELECT vt1.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt0, v0, vt1 GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT ALL vt1.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt0, v0, vt1 GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c1 HAVING CAST(MAX(rt0.c0) AS BLOB) UNION ALL SELECT vt1.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt0, v0, vt1 GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (CAST(MAX(rt0.c0) AS BLOB))) UNION ALL SELECT ALL vt1.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt0, v0, vt1 GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c1 HAVING ((CAST(MAX(rt0.c0) AS BLOB)) ISNULL);
SELECT vt1.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt0, v0, vt1 GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT ALL vt1.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt0, v0, vt1 GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c1 HAVING CAST(MAX(rt0.c0) AS BLOB) UNION ALL SELECT vt1.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt0, v0, vt1 GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (CAST(MAX(rt0.c0) AS BLOB))) UNION ALL SELECT ALL vt1.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt0, v0, vt1 GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c1 HAVING ((CAST(MAX(rt0.c0) AS BLOB)) ISNULL);
SELECT vt1.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt0, v0, vt1 GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT * FROM vt0, vt1;
SELECT * FROM vt0, vt1 WHERE ((((NULL)=(vt0.c0)) IN (vt1.c0 COLLATE RTRIM))) UNION ALL SELECT * FROM vt0, vt1 WHERE ((NOT ((((NULL)=(vt0.c0)) IN (vt1.c0 COLLATE RTRIM))))) UNION ALL SELECT * FROM vt0, vt1 WHERE ((((((NULL)==(vt0.c0)) IN (vt1.c0 COLLATE RTRIM))) ISNULL));
SELECT * FROM vt0, vt1;
SELECT DISTINCT v0.c0, rt0.c0, rt0.c1 FROM rt0, v0;
SELECT DISTINCT v0.c0, rt0.c0, rt0.c1 FROM rt0, v0 WHERE (CASE ((x'd7defdd7')!=(rt0.c2))  WHEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END THEN ((rt0.c1)AND(rt0.c0)) END) UNION SELECT DISTINCT v0.c0, rt0.c0, rt0.c1 FROM rt0, v0 WHERE ((NOT (CASE ((x'd7defdd7')!=(rt0.c2))  WHEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END THEN ((rt0.c1)AND(rt0.c0)) END))) UNION SELECT DISTINCT v0.c0, rt0.c0, rt0.c1 FROM rt0, v0 WHERE (((CASE ((x'd7defdd7')<>(rt0.c2))  WHEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END THEN ((rt0.c1)AND(rt0.c0)) END) ISNULL));
SELECT DISTINCT v0.c0, rt0.c0, rt0.c1 FROM rt0, v0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (409252857) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (409252857))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (((409252857) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING GROUP_CONCAT(GROUP_CONCAT(rt0.c0)) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (GROUP_CONCAT(GROUP_CONCAT(rt0.c0)))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((GROUP_CONCAT(GROUP_CONCAT(rt0.c0))) ISNULL);
SELECT SUM((NOT ((~ (rt0.c0))))) FROM vt1, v0, rt0, vt0 ORDER BY CASE CASE rt0.c0  WHEN rt0.c1 THEN vt0.c0 END  WHEN ((vt0.c0)>=(vt0.c0)) THEN x'' ELSE CASE WHEN rt0.c1 THEN rt0.c1 END END ASC, ((rt0.c0) NOT BETWEEN (CASE NULL  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c2 WHEN v0.c0 THEN '1559882716' WHEN v0.c0 THEN rt0.c2 END) AND ((vt1.c0 IN ()))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, vt1, v0;
SELECT * FROM vt0, vt1, v0 WHERE (((v0.c0)<=(vt0.c0 COLLATE BINARY))) UNION ALL SELECT ALL * FROM vt0, vt1, v0 WHERE ((NOT (((v0.c0)<=(vt0.c0 COLLATE BINARY))))) UNION ALL SELECT ALL * FROM vt0, vt1, v0 WHERE (((((v0.c0)<=(vt0.c0 COLLATE BINARY))) ISNULL));
SELECT ALL * FROM vt0, vt1, v0;
SELECT DISTINCT vt0.c0 FROM vt0, rt0, vt1;
SELECT DISTINCT vt0.c0 FROM vt0, rt0, vt1 WHERE ((((((((rt0.c1)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))OR(vt1.c0 COLLATE BINARY)))AND((((vt1.c0, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c2, '䎳P', rt0.c1)) AND ((0.7514110346878683, rt0.c1, rt0.c0)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0, rt0, vt1 WHERE ((NOT ((((((((rt0.c1)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))OR(vt1.c0 COLLATE BINARY)))AND((((vt1.c0, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c2, '䎳P', rt0.c1)) AND ((0.7514110346878683, rt0.c1, rt0.c0)))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0, rt0, vt1 WHERE ((((((((((rt0.c1)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))OR(vt1.c0 COLLATE BINARY)))AND((((vt1.c0, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c2, '䎳P', rt0.c1)) AND ((0.7514110346878683, rt0.c1, rt0.c0)))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0, rt0, vt1;
SELECT ALL rt0.c1, vt0.c0, vt1.c0, rt0.c2, v0.c0, rt0.c0 FROM v0, vt0, vt1, rt0 GROUP BY rt0.c1, vt0.c0, vt1.c0, rt0.c2, v0.c0, rt0.c0;
SELECT rt0.c1, vt0.c0, vt1.c0, rt0.c2, v0.c0, rt0.c0 FROM v0, vt0, vt1, rt0 WHERE ((((((~ (vt0.c0)))AND(vt1.c0 COLLATE RTRIM)))AND(((rt0.c0)GLOB(rt0.c1))))) GROUP BY rt0.c1, vt0.c0, vt1.c0, rt0.c2, v0.c0, rt0.c0 UNION SELECT ALL rt0.c1, vt0.c0, vt1.c0, rt0.c2, v0.c0, rt0.c0 FROM v0, vt0, vt1, rt0 WHERE ((NOT ((((((~ (vt0.c0)))AND(vt1.c0 COLLATE RTRIM)))AND(((rt0.c0)GLOB(rt0.c1))))))) GROUP BY rt0.c1, vt0.c0, vt1.c0, rt0.c2, v0.c0, rt0.c0 UNION SELECT rt0.c1, vt0.c0, vt1.c0, rt0.c2, v0.c0, rt0.c0 FROM v0, vt0, vt1, rt0 WHERE ((((((((~ (vt0.c0)))AND(vt1.c0 COLLATE RTRIM)))AND(((rt0.c0)GLOB(rt0.c1))))) ISNULL)) GROUP BY rt0.c1, vt0.c0, vt1.c0, rt0.c2, v0.c0, rt0.c0;
SELECT ALL rt0.c1, vt0.c0, vt1.c0, rt0.c2, v0.c0, rt0.c0 FROM v0, vt0, vt1, rt0 GROUP BY rt0.c1, vt0.c0, vt1.c0, rt0.c2, v0.c0, rt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (MIN(vt0.c0) IN (0.28640728018209693 COLLATE NOCASE)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((MIN(vt0.c0) IN (0.28640728018209693 COLLATE NOCASE)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((MIN(vt0.c0) IN (0.28640728018209693 COLLATE NOCASE))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (MIN(vt0.c0) IN (0.28640728018209693 COLLATE NOCASE)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((MIN(vt0.c0) IN (0.28640728018209693 COLLATE NOCASE)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((MIN(vt0.c0) IN (0.28640728018209693 COLLATE NOCASE))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT MAX(((((x'')OR((v0.c0 IN ()))))OR((v0.c0 IN ())))) FROM v0 ORDER BY ((((- (v0.c0)), (v0.c0 IN ()), (v0.c0 IN ())))<((CAST(NULL AS INTEGER), ((v0.c0)<(v0.c0)), '>燛Awi'))) DESC  NULLS FIRST;
SELECT * FROM vt1;
SELECT ALL * FROM vt1 NOT INDEXED WHERE (NULLIF(DISTINCT vt1.c0 COLLATE RTRIM, ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) UNION ALL SELECT * FROM vt1 WHERE ((NOT (NULLIF(DISTINCT vt1.c0 COLLATE RTRIM, ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))) UNION ALL SELECT * FROM vt1 WHERE (((NULLIF(DISTINCT vt1.c0 COLLATE RTRIM, ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM vt0, rt0, vt1, v0;
SELECT DISTINCT * FROM vt0, rt0, vt1, v0 WHERE ((((-50628471)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0))) COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt0, rt0, vt1, v0 WHERE ((NOT ((((-50628471)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0))) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt0, rt0, vt1, v0 WHERE ((((((-50628471)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0))) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt0, rt0, vt1, v0;
SELECT rt0.c2, rt0.c0 FROM vt0, rt0, v0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM vt0, rt0, v0 WHERE ((('1789039481')IS(((((((((rt0.c1)OR(vt0.c0)))OR(vt0.c0)))AND(rt0.c2)))OR(rt0.c2))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM vt0, rt0, v0 WHERE ((NOT ((('1789039481')IS(((((((((rt0.c1)OR(vt0.c0)))OR(vt0.c0)))AND(rt0.c2)))OR(rt0.c2))))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM vt0, rt0, v0 WHERE ((((('1789039481')IS(((((((((rt0.c1)OR(vt0.c0)))OR(vt0.c0)))AND(rt0.c2)))OR(rt0.c2))))) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM vt0, rt0, v0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c0 FROM vt1 CROSS JOIN rt0 ON (~ ((+ (rt0.c2)))) CROSS JOIN v0 ON ((((((rt0.c0)%(rt0.c0)))OR(((rt0.c0) NOT NULL))))OR(vt1.c0)) INNER JOIN vt0 ON ((((vt0.c0)<=(v0.c0)))|(UNLIKELY(rt0.c1))) GROUP BY rt0.c0;
SELECT rt0.c0 FROM vt1 CROSS JOIN rt0 ON (~ ((+ (rt0.c2)))) CROSS JOIN v0 ON ((((((rt0.c0)%(rt0.c0)))OR(((rt0.c0) NOT NULL))))OR(vt1.c0)) INNER JOIN vt0 ON ((((vt0.c0)<=(v0.c0)))|(UNLIKELY(rt0.c1))) GROUP BY rt0.c0 HAVING MAX(CASE GROUP_CONCAT(GROUP_CONCAT(vt1.c0))  WHEN COUNT(rt0.c1) THEN vt0.c0 END) UNION ALL SELECT ALL rt0.c0 FROM vt1 CROSS JOIN rt0 ON (~ ((+ (rt0.c2)))) CROSS JOIN v0 ON ((((((rt0.c0)%(rt0.c0)))OR(((rt0.c0) NOT NULL))))OR(vt1.c0)) INNER JOIN vt0 ON ((((vt0.c0)<=(v0.c0)))|(UNLIKELY(rt0.c1))) GROUP BY rt0.c0 HAVING (NOT (MAX(CASE GROUP_CONCAT(GROUP_CONCAT(vt1.c0))  WHEN COUNT(rt0.c1) THEN vt0.c0 END))) UNION ALL SELECT ALL rt0.c0 FROM vt1 CROSS JOIN rt0 ON (~ ((+ (rt0.c2)))) CROSS JOIN v0 ON ((((((rt0.c0)%(rt0.c0)))OR(((rt0.c0) NOT NULL))))OR(vt1.c0)) INNER JOIN vt0 ON ((((vt0.c0)<=(v0.c0)))|(UNLIKELY(rt0.c1))) GROUP BY rt0.c0 HAVING ((MAX(CASE GROUP_CONCAT(GROUP_CONCAT(vt1.c0))  WHEN COUNT(rt0.c1) THEN vt0.c0 END)) ISNULL);
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON vt0.c0 LEFT OUTER JOIN rt0 ON (NOT ((v0.c0 IN ()))) RIGHT OUTER JOIN v0 ON ((((rt0.c2)-(rt0.c1))) NOTNULL);
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON vt0.c0 LEFT OUTER JOIN rt0 ON (NOT ((v0.c0 IN ()))) RIGHT OUTER JOIN v0 ON ((((rt0.c2)-(rt0.c1))) NOTNULL) WHERE ((((('317166144' COLLATE BINARY)AND(((v0.c0)AND(vt0.c0)))))OR(rt0.c0 COLLATE RTRIM))) UNION ALL SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON vt0.c0 LEFT OUTER JOIN rt0 ON (NOT ((v0.c0 IN ()))) RIGHT OUTER JOIN v0 ON ((((rt0.c2)-(rt0.c1))) NOTNULL) WHERE ((NOT ((((('317166144' COLLATE BINARY)AND(((v0.c0)AND(vt0.c0)))))OR(rt0.c0 COLLATE RTRIM))))) UNION ALL SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON vt0.c0 LEFT OUTER JOIN rt0 ON (NOT ((v0.c0 IN ()))) RIGHT OUTER JOIN v0 ON ((((rt0.c2)-(rt0.c1))) NOTNULL) WHERE ((((((('317166144' COLLATE BINARY)AND(((v0.c0)AND(vt0.c0)))))OR(rt0.c0 COLLATE RTRIM))) ISNULL));
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON vt0.c0 LEFT OUTER JOIN rt0 ON (NOT ((v0.c0 IN ()))) RIGHT OUTER JOIN v0 ON ((((rt0.c2)-(rt0.c1))) NOTNULL);
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((- (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((- (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((- (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL rt0.c0 FROM v0 CROSS JOIN rt0 ON ((((rt0.c1) NOT NULL))>=(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))) GROUP BY rt0.c0;
SELECT rt0.c0 FROM v0 CROSS JOIN rt0 ON ((((rt0.c1) NOT NULL))>=(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))) WHERE (((((((rt0.c2)OR(v0.c0)))OR(v0.c0))) NOT BETWEEN ((+ (v0.c0))) AND (((rt0.c0)<(v0.c0))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM v0 CROSS JOIN rt0 ON ((((rt0.c1) NOT NULL))>=(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))) WHERE ((NOT (((((((rt0.c2)OR(v0.c0)))OR(v0.c0))) NOT BETWEEN ((+ (v0.c0))) AND (((rt0.c0)<(v0.c0))))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM v0 CROSS JOIN rt0 ON ((((rt0.c1) NOT NULL))>=(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))) WHERE (((((((((rt0.c2)OR(v0.c0)))OR(v0.c0))) NOT BETWEEN ((+ (v0.c0))) AND (((rt0.c0)<(v0.c0))))) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM v0 CROSS JOIN rt0 ON ((((rt0.c1) NOT NULL))>=(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))) GROUP BY rt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING COUNT(((v0.c0) IS TRUE)) UNION ALL SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING (NOT (COUNT(((v0.c0) IS TRUE)))) UNION ALL SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING ((COUNT(((v0.c0) IS TRUE))) ISNULL);
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING COUNT(((v0.c0) IS TRUE)) UNION ALL SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING (NOT (COUNT(((v0.c0) IS TRUE)))) UNION ALL SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING ((COUNT(((v0.c0) IS TRUE))) ISNULL);
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT vt1.c0 FROM vt0, vt1;
SELECT ALL vt1.c0 FROM vt0, vt1 WHERE (vt1.c0) UNION ALL SELECT vt1.c0 FROM vt0, vt1 WHERE ((NOT (vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt0, vt1 WHERE (((vt1.c0) ISNULL));
SELECT vt1.c0 FROM vt0, vt1;
SELECT DISTINCT v0.c0, rt0.c2 FROM vt1 FULL OUTER JOIN rt0 ON (((((vt1.c0) IS TRUE), HEX(DISTINCT v0.c0), QUOTE(rt0.c0)))<>(((((vt0.c0, rt0.c0, vt1.c0))>((v0.c0, rt0.c1, vt0.c0))), rt0.c0 COLLATE BINARY, (((rt0.c2, 0.12904156851616833, rt0.c2))<((vt1.c0, rt0.c0, vt0.c0)))))) LEFT OUTER JOIN v0 ON (((+ (rt0.c1)))%(((rt0.c1)>=(vt0.c0)))) CROSS JOIN vt0 ON (- (((((((((v0.c0)AND(vt0.c0)))AND(rt0.c1)))AND(v0.c0)))AND(''))));
SELECT ALL rt0.c1, vt1.c0, rt0.c0, rt0.c2 FROM rt0, vt0, vt1 GROUP BY rt0.c1, vt1.c0, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, vt1.c0, rt0.c0, rt0.c2 FROM rt0, vt0, vt1 WHERE (NULL) GROUP BY rt0.c1, vt1.c0, rt0.c0, rt0.c2 UNION SELECT rt0.c1, vt1.c0, rt0.c0, rt0.c2 FROM rt0, vt0, vt1 WHERE ((NOT (NULL))) GROUP BY rt0.c1, vt1.c0, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, vt1.c0, rt0.c0, rt0.c2 FROM rt0, vt0, vt1 WHERE (((NULL) ISNULL)) GROUP BY rt0.c1, vt1.c0, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, vt1.c0, rt0.c0, rt0.c2 FROM rt0, vt0, vt1 GROUP BY rt0.c1, vt1.c0, rt0.c0, rt0.c2;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING MAX(TOTAL(v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MAX(TOTAL(v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MAX(TOTAL(v0.c0))) ISNULL);
SELECT MIN(((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN x'9797' THEN v0.c0 END) ISNULL)) FROM v0;
SELECT ALL * FROM v0, vt0, rt0;
SELECT ALL * FROM v0, vt0, rt0 WHERE (((CAST(rt0.c2 AS BLOB)) IS FALSE)) UNION ALL SELECT ALL * FROM v0, vt0, rt0 WHERE ((NOT (((CAST(rt0.c2 AS BLOB)) IS FALSE)))) UNION ALL SELECT * FROM v0, vt0, rt0 WHERE (((((CAST(rt0.c2 AS BLOB)) IS FALSE)) ISNULL));
SELECT ALL * FROM v0, vt0, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c2) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((CASE NULL  WHEN vt0.c0 THEN vt0.c0 END)>((((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((CASE NULL  WHEN vt0.c0 THEN vt0.c0 END)>((((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0)))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((CASE NULL  WHEN vt0.c0 THEN vt0.c0 END)>((((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0)))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt1.c0, rt0.c2, v0.c0, rt0.c1, rt0.c0 FROM vt1, rt0 INNER JOIN v0 ON 0.5016611961475689 GROUP BY vt1.c0, rt0.c2, v0.c0, rt0.c1, rt0.c0;
SELECT ALL vt1.c0, rt0.c2, v0.c0, rt0.c1, rt0.c0 FROM vt1, rt0 INNER JOIN v0 ON 0.5016611961475689 GROUP BY vt1.c0, rt0.c2, v0.c0, rt0.c1, rt0.c0 HAVING CASE WHEN COUNT(AVG(v0.c0)) THEN MIN(rt0.c1) ELSE MAX(v0.c0) END UNION ALL SELECT vt1.c0, rt0.c2, v0.c0, rt0.c1, rt0.c0 FROM vt1, rt0 INNER JOIN v0 ON 0.5016611961475689 GROUP BY vt1.c0, rt0.c2, v0.c0, rt0.c1, rt0.c0 HAVING (NOT (CASE WHEN COUNT(AVG(v0.c0)) THEN MIN(rt0.c1) ELSE MAX(v0.c0) END)) UNION ALL SELECT vt1.c0, rt0.c2, v0.c0, rt0.c1, rt0.c0 FROM vt1, rt0 INNER JOIN v0 ON 0.5016611961475689 GROUP BY vt1.c0, rt0.c2, v0.c0, rt0.c1, rt0.c0 HAVING ((CASE WHEN COUNT(AVG(v0.c0)) THEN MIN(rt0.c1) ELSE MAX(v0.c0) END) ISNULL);
SELECT ALL TOTAL((rt0.c2 COLLATE RTRIM IN (vt1.c0 COLLATE NOCASE, ((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt1.c0))))) FROM rt0, vt1;
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE ((((+ (v0.c0))) NOT BETWEEN (((v0.c0)<<(v0.c0))) AND ('803856738'))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((+ (v0.c0))) NOT BETWEEN (((v0.c0)<<(v0.c0))) AND ('803856738'))))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((((((+ (v0.c0))) NOT BETWEEN (((v0.c0)<<(v0.c0))) AND ('803856738'))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT * FROM vt0, rt0, vt1;
SELECT DISTINCT * FROM vt0, rt0, vt1 WHERE (((((((rt0.c1)OR(rt0.c1)))OR(rt0.c2)))||(((vt0.c0) IS FALSE)))) UNION SELECT DISTINCT * FROM vt0, rt0, vt1 WHERE ((NOT (((((((rt0.c1)OR(rt0.c1)))OR(rt0.c2)))||(((vt0.c0) IS FALSE)))))) UNION SELECT DISTINCT * FROM vt0, rt0, vt1 WHERE (((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c2)))||(((vt0.c0) IS FALSE)))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0, vt1;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((((((v0.c0)AND(v0.c0)))AND(0.38750822857561584)))==(x''))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((((v0.c0)AND(v0.c0)))AND(0.38750822857561584)))==(x''))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((((((v0.c0)AND(v0.c0)))AND(0.38750822857561584)))=(x''))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING AVG(AVG(vt1.c0)) COLLATE RTRIM UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (AVG(AVG(vt1.c0)) COLLATE RTRIM)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((AVG(AVG(vt1.c0)) COLLATE RTRIM) ISNULL);
SELECT ALL MAX(((((CASE WHEN rt0.c1 THEN rt0.c2 END)OR((+ (v0.c0)))))AND(CAST(rt0.c1 AS NUMERIC)))) FROM rt0, vt0, vt1, v0 ORDER BY (((((rt0.c2)) BETWEEN ((vt1.c0)) AND (('0.8147533542738932')))) NOT BETWEEN ((((rt0.c0))=((rt0.c2)))) AND (CASE rt0.c1  WHEN rt0.c0 THEN vt1.c0 WHEN 0.16011433352723803 THEN vt0.c0 WHEN vt1.c0 THEN rt0.c1 END))  NULLS FIRST;
SELECT ALL rt0.c1, vt1.c0, rt0.c0, v0.c0, rt0.c2 FROM vt1 INNER JOIN rt0 ON CASE WHEN rt0.c1 COLLATE BINARY THEN ((((((((vt1.c0)AND(rt0.c2)))AND(rt0.c0)))OR(vt1.c0)))AND(rt0.c2)) WHEN '' THEN vt1.c0 COLLATE BINARY WHEN rt0.c1 THEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)) END CROSS JOIN v0 ON PRINTF(((rt0.c0) IS TRUE));
SELECT ALL rt0.c1, vt1.c0, rt0.c0, v0.c0, rt0.c2 FROM vt1 INNER JOIN rt0 ON CASE WHEN rt0.c1 COLLATE BINARY THEN ((((((((vt1.c0)AND(rt0.c2)))AND(rt0.c0)))OR(vt1.c0)))AND(rt0.c2)) WHEN '' THEN vt1.c0 COLLATE BINARY WHEN rt0.c1 THEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)) END CROSS JOIN v0 ON PRINTF(((rt0.c0) IS TRUE)) WHERE (NULL COLLATE NOCASE) UNION ALL SELECT rt0.c1, vt1.c0, rt0.c0, v0.c0, rt0.c2 FROM vt1 INNER JOIN rt0 ON CASE WHEN rt0.c1 COLLATE BINARY THEN ((((((((vt1.c0)AND(rt0.c2)))AND(rt0.c0)))OR(vt1.c0)))AND(rt0.c2)) WHEN '' THEN vt1.c0 COLLATE BINARY WHEN rt0.c1 THEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)) END CROSS JOIN v0 ON PRINTF(((rt0.c0) IS TRUE)) WHERE ((NOT (NULL COLLATE NOCASE))) UNION ALL SELECT rt0.c1, vt1.c0, rt0.c0, v0.c0, rt0.c2 FROM vt1 INNER JOIN rt0 ON CASE WHEN rt0.c1 COLLATE BINARY THEN ((((((((vt1.c0)AND(rt0.c2)))AND(rt0.c0)))OR(vt1.c0)))AND(rt0.c2)) WHEN '' THEN vt1.c0 COLLATE BINARY WHEN rt0.c1 THEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)) END CROSS JOIN v0 ON PRINTF(((rt0.c0) IS TRUE)) WHERE (((NULL COLLATE NOCASE) ISNULL));
SELECT ALL rt0.c1, vt1.c0, rt0.c0, v0.c0, rt0.c2 FROM vt1 INNER JOIN rt0 ON CASE WHEN rt0.c1 COLLATE BINARY THEN ((((((((vt1.c0)AND(rt0.c2)))AND(rt0.c0)))OR(vt1.c0)))AND(rt0.c2)) WHEN '' THEN vt1.c0 COLLATE BINARY WHEN rt0.c1 THEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)) END CROSS JOIN v0 ON PRINTF(((rt0.c0) IS TRUE));
SELECT DISTINCT * FROM rt0, v0, vt1 RIGHT OUTER JOIN vt0 ON (((vt1.c0 IN ())) NOT BETWEEN (CAST(v0.c0 AS REAL)) AND (rt0.c0 COLLATE NOCASE));
SELECT DISTINCT * FROM rt0, v0, vt1 RIGHT OUTER JOIN vt0 ON (((vt1.c0 IN ())) NOT BETWEEN (CAST(v0.c0 AS REAL)) AND (rt0.c0 COLLATE NOCASE)) WHERE ((- (((rt0.c0) NOTNULL)))) UNION SELECT DISTINCT * FROM rt0, v0, vt1 RIGHT OUTER JOIN vt0 ON (((vt1.c0 IN ())) NOT BETWEEN (CAST(v0.c0 AS REAL)) AND (rt0.c0 COLLATE NOCASE)) WHERE ((NOT ((- (((rt0.c0) NOTNULL)))))) UNION SELECT DISTINCT * FROM rt0, v0, vt1 RIGHT OUTER JOIN vt0 ON (((vt1.c0 IN ())) NOT BETWEEN (CAST(v0.c0 AS REAL)) AND (rt0.c0 COLLATE NOCASE)) WHERE ((((- (((rt0.c0) NOTNULL)))) ISNULL));
SELECT DISTINCT * FROM rt0, v0, vt1 RIGHT OUTER JOIN vt0 ON (((vt1.c0 IN ())) NOT BETWEEN (CAST(v0.c0 AS REAL)) AND (rt0.c0 COLLATE NOCASE));
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))IS(rt0.c2))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))IS(rt0.c2))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))IS(rt0.c2))) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING SUM(COUNT(*)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (SUM(COUNT(*)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((SUM(COUNT(*))) ISNULL);
SELECT rt0.c2, rt0.c0, vt1.c0 FROM v0, vt1 LEFT OUTER JOIN rt0 ON ((x'5aeda923') NOT BETWEEN (SQLITE_SOURCE_ID()) AND (TRIM(DISTINCT v0.c0))) LEFT OUTER JOIN vt0 ON (~ (''));
SELECT ALL rt0.c2, rt0.c0, vt1.c0 FROM v0, vt1 LEFT OUTER JOIN rt0 ON ((x'5aeda923') NOT BETWEEN (SQLITE_SOURCE_ID()) AND (TRIM(DISTINCT v0.c0))) LEFT OUTER JOIN vt0 ON (~ ('')) WHERE ('埿Y{') UNION ALL SELECT ALL rt0.c2, rt0.c0, vt1.c0 FROM v0, vt1 LEFT OUTER JOIN rt0 ON ((x'5aeda923') NOT BETWEEN (SQLITE_SOURCE_ID()) AND (TRIM(DISTINCT v0.c0))) LEFT OUTER JOIN vt0 ON (~ ('')) WHERE ((NOT ('埿Y{'))) UNION ALL SELECT ALL rt0.c2, rt0.c0, vt1.c0 FROM v0, vt1 LEFT OUTER JOIN rt0 ON ((x'5aeda923') NOT BETWEEN (SQLITE_SOURCE_ID()) AND (TRIM(DISTINCT v0.c0))) LEFT OUTER JOIN vt0 ON (~ ('')) WHERE ((('埿Y{') ISNULL));
SELECT rt0.c2, rt0.c0, vt1.c0 FROM v0, vt1 LEFT OUTER JOIN rt0 ON ((x'5aeda923') NOT BETWEEN (SQLITE_SOURCE_ID()) AND (TRIM(DISTINCT v0.c0))) LEFT OUTER JOIN vt0 ON (~ (''));
SELECT DISTINCT vt1.c0, rt0.c1, rt0.c0, vt0.c0 FROM vt1, rt0, vt0;
SELECT DISTINCT vt1.c0, rt0.c1, rt0.c0, vt0.c0 FROM vt1, rt0, vt0 WHERE (TYPEOF(DISTINCT ((((((((rt0.c2)OR(vt0.c0)))AND(rt0.c1)))OR(vt1.c0)))AND(rt0.c2)))) UNION SELECT DISTINCT vt1.c0, rt0.c1, rt0.c0, vt0.c0 FROM vt1, rt0, vt0 WHERE ((NOT (TYPEOF(DISTINCT ((((((((rt0.c2)OR(vt0.c0)))AND(rt0.c1)))OR(vt1.c0)))AND(rt0.c2)))))) UNION SELECT DISTINCT vt1.c0, rt0.c1, rt0.c0, vt0.c0 FROM vt1, rt0, vt0 WHERE (((TYPEOF(DISTINCT ((((((((rt0.c2)OR(vt0.c0)))AND(rt0.c1)))OR(vt1.c0)))AND(rt0.c2)))) ISNULL));
SELECT DISTINCT vt1.c0, rt0.c1, rt0.c0, vt0.c0 FROM vt1, rt0, vt0;
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0 WHERE ((~ ((((vt1.c0)) BETWEEN ((0.9723081910340545)) AND ((vt1.c0)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1, vt0 WHERE ((NOT ((~ ((((vt1.c0)) BETWEEN ((0.9723081910340545)) AND ((vt1.c0)))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1, vt0 WHERE ((((~ ((((vt1.c0)) BETWEEN ((0.9723081910340545)) AND ((vt1.c0)))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((CAST(v0.c0 AS BLOB)) NOT BETWEEN (CAST(v0.c0 AS NUMERIC)) AND (AVG(TOTAL(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((CAST(v0.c0 AS BLOB)) NOT BETWEEN (CAST(v0.c0 AS NUMERIC)) AND (AVG(TOTAL(v0.c0)))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((CAST(v0.c0 AS BLOB)) NOT BETWEEN (CAST(v0.c0 AS NUMERIC)) AND (AVG(TOTAL(v0.c0))))) ISNULL);
SELECT v0.c0, rt0.c2, rt0.c0 FROM vt1, vt0, v0, rt0;
SELECT v0.c0, rt0.c2, rt0.c0 FROM vt1, vt0, v0, rt0 WHERE (vt1.c0) UNION ALL SELECT ALL v0.c0, rt0.c2, rt0.c0 FROM vt1, vt0, v0, rt0 WHERE ((NOT (vt1.c0))) UNION ALL SELECT ALL v0.c0, rt0.c2, rt0.c0 FROM vt1, vt0, v0, rt0 WHERE (((vt1.c0) ISNULL));
SELECT v0.c0, rt0.c2, rt0.c0 FROM vt1, vt0, v0, rt0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE (json_type(((rt0.c0)==(rt0.c1)))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT (json_type(((rt0.c0)=(rt0.c1)))))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((json_type(((rt0.c0)==(rt0.c1)))) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM vt0, rt0, v0 GROUP BY rt0.c1, rt0.c2, rt0.c0, vt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM vt0, rt0, v0 NOT INDEXED WHERE (((CAST(v0.c0 AS BLOB)) NOTNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0, vt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM vt0, rt0, v0 WHERE ((NOT (((CAST(v0.c0 AS BLOB)) NOTNULL)))) GROUP BY rt0.c1, rt0.c2, rt0.c0, vt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM vt0, rt0, v0 WHERE (((((CAST(v0.c0 AS BLOB)) NOTNULL)) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0, vt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM vt0, rt0, v0 GROUP BY rt0.c1, rt0.c2, rt0.c0, vt0.c0;
SELECT ALL v0.c0, rt0.c2, vt1.c0, rt0.c1, rt0.c0 FROM v0, rt0, vt1 GROUP BY v0.c0, rt0.c2, vt1.c0, rt0.c1, rt0.c0;
SELECT ALL v0.c0, rt0.c2, vt1.c0, rt0.c1, rt0.c0 FROM v0, rt0, vt1 GROUP BY v0.c0, rt0.c2, vt1.c0, rt0.c1, rt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0, rt0.c2, vt1.c0, rt0.c1, rt0.c0 FROM v0, rt0, vt1 GROUP BY v0.c0, rt0.c2, vt1.c0, rt0.c1, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0, rt0.c2, vt1.c0, rt0.c1, rt0.c0 FROM v0, rt0, vt1 GROUP BY v0.c0, rt0.c2, vt1.c0, rt0.c1, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0, rt0.c2, vt1.c0, rt0.c1, rt0.c0 FROM v0, rt0, vt1 GROUP BY v0.c0, rt0.c2, vt1.c0, rt0.c1, rt0.c0;
SELECT ALL v0.c0, rt0.c2, vt1.c0, rt0.c1, rt0.c0 FROM v0, rt0, vt1 GROUP BY v0.c0, rt0.c2, vt1.c0, rt0.c1, rt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0, rt0.c2, vt1.c0, rt0.c1, rt0.c0 FROM v0, rt0, vt1 GROUP BY v0.c0, rt0.c2, vt1.c0, rt0.c1, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0, rt0.c2, vt1.c0, rt0.c1, rt0.c0 FROM v0, rt0, vt1 GROUP BY v0.c0, rt0.c2, vt1.c0, rt0.c1, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0, rt0.c2, vt1.c0, rt0.c1, rt0.c0 FROM v0, rt0, vt1 GROUP BY v0.c0, rt0.c2, vt1.c0, rt0.c1, rt0.c0;
SELECT rt0.c2 FROM rt0, vt1;
SELECT rt0.c2 FROM rt0, vt1 WHERE (((IFNULL(rt0.c2, vt1.c0))==(CAST(rt0.c1 AS NUMERIC)))) UNION ALL SELECT ALL rt0.c2 FROM rt0, vt1 WHERE ((NOT (((IFNULL(rt0.c2, vt1.c0))==(CAST(rt0.c1 AS NUMERIC)))))) UNION ALL SELECT ALL rt0.c2 FROM rt0, vt1 WHERE (((((IFNULL(rt0.c2, vt1.c0))=(CAST(rt0.c1 AS NUMERIC)))) ISNULL));
SELECT rt0.c2 FROM rt0, vt1;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((NOT (v0.c0))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((NOT (v0.c0))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL rt0.c2 FROM vt0, v0 NATURAL JOIN rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM vt0, v0 NATURAL JOIN rt0 WHERE (((NULL)%(rt0.c0)) COLLATE RTRIM) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM vt0, v0 NATURAL JOIN rt0 WHERE ((NOT (((NULL)%(rt0.c0)) COLLATE RTRIM))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM vt0, v0 NATURAL JOIN rt0 WHERE (((((NULL)%(rt0.c0)) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt0, v0 NATURAL JOIN rt0 GROUP BY rt0.c2;
SELECT vt1.c0, rt0.c2, vt0.c0 FROM vt1, v0, rt0, vt0 GROUP BY vt1.c0, rt0.c2, vt0.c0;
SELECT ALL vt1.c0, rt0.c2, vt0.c0 FROM vt1, v0, rt0, vt0 GROUP BY vt1.c0, rt0.c2, vt0.c0 HAVING GROUP_CONCAT(TYPEOF(DISTINCT MAX(rt0.c1))) UNION ALL SELECT ALL vt1.c0, rt0.c2, vt0.c0 FROM vt1, v0, rt0, vt0 GROUP BY vt1.c0, rt0.c2, vt0.c0 HAVING (NOT (GROUP_CONCAT(TYPEOF(DISTINCT MAX(rt0.c1))))) UNION ALL SELECT ALL vt1.c0, rt0.c2, vt0.c0 FROM vt1, v0, rt0, vt0 GROUP BY vt1.c0, rt0.c2, vt0.c0 HAVING ((GROUP_CONCAT(TYPEOF(DISTINCT MAX(rt0.c1)))) ISNULL);
SELECT ALL TOTAL(x'') FROM vt0, v0 ORDER BY CAST((+ (vt0.c0)) AS REAL) ASC;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 WHERE (((((((vt1.c0)OR(vt0.c0)))OR(vt1.c0)))IS NOT(CASE vt0.c0  WHEN 0X2a54b8f2 THEN vt0.c0 ELSE vt1.c0 END))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 WHERE ((NOT (((((((vt1.c0)OR(vt0.c0)))OR(vt1.c0)))IS NOT(CASE vt0.c0  WHEN 0X2a54b8f2 THEN vt0.c0 ELSE vt1.c0 END))))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt0, vt1 WHERE (((((((((vt1.c0)OR(vt0.c0)))OR(vt1.c0)))IS NOT(CASE vt0.c0  WHEN 0x2a54b8f2 THEN vt0.c0 ELSE vt1.c0 END))) ISNULL));
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1;
SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN rt0 ON ((vt1.c0) NOTNULL) LEFT OUTER JOIN vt0 ON (((0.6090331379596746, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c0, (~ (rt0.c1)), ((((((((vt1.c0)OR(vt0.c0)))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c1)))) AND ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)), ((vt1.c0) IS TRUE), (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((vt1.c0))))));
SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN rt0 ON ((vt1.c0) NOTNULL) LEFT OUTER JOIN vt0 ON (((0.6090331379596746, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c0, (~ (rt0.c1)), ((((((((vt1.c0)OR(vt0.c0)))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c1)))) AND ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)), ((vt1.c0) IS TRUE), (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((vt1.c0)))))) WHERE ((((- (rt0.c0)))IS NOT(rt0.c2))) UNION SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN rt0 ON ((vt1.c0) NOTNULL) LEFT OUTER JOIN vt0 ON (((0.6090331379596746, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c0, (~ (rt0.c1)), ((((((((vt1.c0)OR(vt0.c0)))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c1)))) AND ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)), ((vt1.c0) IS TRUE), (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((vt1.c0)))))) WHERE ((NOT ((((- (rt0.c0)))IS NOT(rt0.c2))))) UNION SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN rt0 ON ((vt1.c0) NOTNULL) LEFT OUTER JOIN vt0 ON (((0.6090331379596746, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c0, (~ (rt0.c1)), ((((((((vt1.c0)OR(vt0.c0)))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c1)))) AND ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)), ((vt1.c0) IS TRUE), (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((vt1.c0)))))) WHERE ((((((- (rt0.c0)))IS NOT(rt0.c2))) ISNULL));
SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN rt0 ON ((vt1.c0) NOTNULL) LEFT OUTER JOIN vt0 ON (((0.6090331379596746, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c0, (~ (rt0.c1)), ((((((((vt1.c0)OR(vt0.c0)))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c1)))) AND ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)), ((vt1.c0) IS TRUE), (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((vt1.c0))))));
SELECT vt1.c0, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c1;
SELECT vt1.c0, rt0.c1 FROM vt1 NOT INDEXED, rt0 WHERE (((((((vt1.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))), (((x'')) NOT BETWEEN ((rt0.c1)) AND ((vt1.c0))), ((rt0.c1) IS TRUE)))!=((CAST(vt1.c0 AS INTEGER), IFNULL(vt1.c0, rt0.c1), x'')))) GROUP BY vt1.c0, rt0.c1 UNION SELECT ALL vt1.c0, rt0.c1 FROM vt1, rt0 WHERE ((NOT (((((((vt1.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))), (((x'')) NOT BETWEEN ((rt0.c1)) AND ((vt1.c0))), ((rt0.c1) IS TRUE)))<>((CAST(vt1.c0 AS INTEGER), IFNULL(vt1.c0, rt0.c1), x'')))))) GROUP BY vt1.c0, rt0.c1 UNION SELECT ALL vt1.c0, rt0.c1 FROM vt1, rt0 WHERE (((((((((vt1.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))), (((x'')) NOT BETWEEN ((rt0.c1)) AND ((vt1.c0))), ((rt0.c1) IS TRUE)))!=((CAST(vt1.c0 AS INTEGER), IFNULL(vt1.c0, rt0.c1), x'')))) ISNULL)) GROUP BY vt1.c0, rt0.c1;
SELECT vt1.c0, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c1;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING 0.008657835416925108 UNION ALL SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (0.008657835416925108)) UNION ALL SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING ((0.008657835416925108) ISNULL);
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING 0.008657835416925108 UNION ALL SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (0.008657835416925108)) UNION ALL SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING ((0.008657835416925108) ISNULL);
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT ALL rt0.c2 FROM rt0 INNER JOIN vt0 ON x'';
SELECT ALL rt0.c2 FROM rt0 INNER JOIN vt0 ON x'' WHERE (rt0.c0) UNION ALL SELECT ALL rt0.c2 FROM rt0 INNER JOIN vt0 ON x'' WHERE ((NOT (rt0.c0))) UNION ALL SELECT rt0.c2 FROM rt0 INNER JOIN vt0 ON x'' WHERE (((rt0.c0) ISNULL));
SELECT ALL rt0.c2 FROM rt0 INNER JOIN vt0 ON x'';
SELECT DISTINCT * FROM vt1, vt0, v0;
SELECT DISTINCT * FROM vt1, vt0, v0 WHERE (((((((vt0.c0)OR(v0.c0)))OR(vt0.c0)))+(CAST(vt0.c0 AS NUMERIC)))) UNION SELECT DISTINCT * FROM vt1, vt0, v0 WHERE ((NOT (((((((vt0.c0)OR(v0.c0)))OR(vt0.c0)))+(CAST(vt0.c0 AS NUMERIC)))))) UNION SELECT DISTINCT * FROM vt1, vt0, v0 WHERE (((((((((vt0.c0)OR(v0.c0)))OR(vt0.c0)))+(CAST(vt0.c0 AS NUMERIC)))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0, v0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE ('') GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT (''))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((('') ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM vt0, v0, vt1, rt0 GROUP BY rt0.c2, vt0.c0, rt0.c1, rt0.c0;
SELECT rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM vt0, v0, vt1, rt0 GROUP BY rt0.c2, vt0.c0, rt0.c1, rt0.c0 HAVING COUNT(((((rt0.c2)AND(v0.c0)))OR(COUNT(MIN(rt0.c2))))) UNION ALL SELECT rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM vt0, v0, vt1, rt0 GROUP BY rt0.c2, vt0.c0, rt0.c1, rt0.c0 HAVING (NOT (COUNT(((((rt0.c2)AND(v0.c0)))OR(COUNT(MIN(rt0.c2))))))) UNION ALL SELECT rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM vt0, v0, vt1, rt0 GROUP BY rt0.c2, vt0.c0, rt0.c1, rt0.c0 HAVING ((COUNT(((((rt0.c2)AND(v0.c0)))OR(COUNT(MIN(rt0.c2)))))) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) BETWEEN ('') AND ((~ (vt0.c0))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) BETWEEN ('') AND ((~ (vt0.c0))))))) UNION ALL SELECT * FROM vt0 WHERE (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) BETWEEN ('') AND ((~ (vt0.c0))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CASE LIKELY(0.6248010611173702)  WHEN (~ (vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CASE LIKELY(0.6248010611173702)  WHEN (~ (vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CASE LIKELY(0.6248010611173702)  WHEN (~ (vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT rt0.c0, rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, vt0.c0;
SELECT rt0.c0, rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0 WHERE (CASE WHEN (rt0.c0 IN ()) THEN (((('鉀U>n')OR(vt0.c0)))AND(rt0.c1)) WHEN CASE WHEN NULL THEN rt0.c1 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 END THEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c1 END WHEN rt0.c0 THEN ((rt0.c2)LIKE(rt0.c2)) ELSE (-2110500108 IN ()) END) GROUP BY rt0.c0, rt0.c2, rt0.c1, vt0.c0 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0 WHERE ((NOT (CASE WHEN (rt0.c0 IN ()) THEN (((('鉀U>n')OR(vt0.c0)))AND(rt0.c1)) WHEN CASE WHEN NULL THEN rt0.c1 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 END THEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c1 END WHEN rt0.c0 THEN ((rt0.c2)LIKE(rt0.c2)) ELSE (-2110500108 IN ()) END))) GROUP BY rt0.c0, rt0.c2, rt0.c1, vt0.c0 UNION SELECT rt0.c0, rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0 WHERE (((CASE WHEN (rt0.c0 IN ()) THEN (((('鉀U>n')OR(vt0.c0)))AND(rt0.c1)) WHEN CASE WHEN NULL THEN rt0.c1 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 END THEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c1 END WHEN rt0.c0 THEN ((rt0.c2)LIKE(rt0.c2)) ELSE (-2110500108 IN ()) END) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1, vt0.c0;
SELECT rt0.c0, rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, vt0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT((~ (MIN(v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT((~ (MIN(v0.c0)))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT((~ (MIN(v0.c0))))) ISNULL);
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON ((UNLIKELY(rt0.c2)) IS FALSE) RIGHT OUTER JOIN v0 ON CAST(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) AS INTEGER) RIGHT OUTER JOIN vt1 ON 0.3850749894309262;
SELECT DISTINCT rt0.c2 FROM rt0, vt0;
SELECT DISTINCT rt0.c2 FROM rt0, vt0 WHERE (((CAST(rt0.c1 AS TEXT)) NOT NULL)) UNION SELECT DISTINCT rt0.c2 FROM rt0, vt0 WHERE ((NOT (((CAST(rt0.c1 AS TEXT)) NOT NULL)))) UNION SELECT DISTINCT rt0.c2 FROM rt0, vt0 WHERE (((((CAST(rt0.c1 AS TEXT)) NOT NULL)) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0, vt0;
SELECT rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM vt0, vt1, rt0, v0 GROUP BY rt0.c2, vt0.c0, rt0.c1, rt0.c0;
SELECT rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM vt0, vt1, rt0, v0 WHERE (rt0.c1) GROUP BY rt0.c2, vt0.c0, rt0.c1, rt0.c0 UNION SELECT rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM vt0, vt1, rt0, v0 WHERE ((NOT (rt0.c1))) GROUP BY rt0.c2, vt0.c0, rt0.c1, rt0.c0 UNION SELECT rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM vt0, vt1, rt0, v0 WHERE (((rt0.c1) ISNULL)) GROUP BY rt0.c2, vt0.c0, rt0.c1, rt0.c0;
SELECT rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM vt0, vt1, rt0, v0 GROUP BY rt0.c2, vt0.c0, rt0.c1, rt0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((v0.c0))<=((v0.c0))) COLLATE RTRIM UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((((v0.c0))<=((v0.c0))) COLLATE RTRIM)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((v0.c0))<=((v0.c0))) COLLATE RTRIM) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((v0.c0))<=((v0.c0))) COLLATE RTRIM UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((((v0.c0))<=((v0.c0))) COLLATE RTRIM)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((v0.c0))<=((v0.c0))) COLLATE RTRIM) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE ((NOT (CASE WHEN vt1.c0 THEN NULL ELSE vt1.c0 END))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((NOT (CASE WHEN vt1.c0 THEN NULL ELSE vt1.c0 END))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((((NOT (CASE WHEN vt1.c0 THEN NULL ELSE vt1.c0 END))) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (rt0.c1) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c0, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2, vt0.c0;
SELECT rt0.c0, rt0.c2, vt0.c0 FROM vt0, rt0 WHERE ((~ ((x'' IN ())))) GROUP BY rt0.c0, rt0.c2, vt0.c0 UNION SELECT rt0.c0, rt0.c2, vt0.c0 FROM vt0, rt0 WHERE ((NOT ((~ ((x'' IN ())))))) GROUP BY rt0.c0, rt0.c2, vt0.c0 UNION SELECT rt0.c0, rt0.c2, vt0.c0 FROM vt0, rt0 WHERE ((((~ ((x'' IN ())))) ISNULL)) GROUP BY rt0.c0, rt0.c2, vt0.c0;
SELECT ALL rt0.c0, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2, vt0.c0;
SELECT v0.c0, vt1.c0 FROM vt1, rt0, v0 GROUP BY v0.c0, vt1.c0;
SELECT ALL v0.c0, vt1.c0 FROM vt1, rt0, v0 GROUP BY v0.c0, vt1.c0 HAVING TOTAL(((rt0.c2) BETWEEN (NULL) AND (rt0.c0))) UNION ALL SELECT ALL v0.c0, vt1.c0 FROM vt1, rt0, v0 GROUP BY v0.c0, vt1.c0 HAVING (NOT (TOTAL(((rt0.c2) BETWEEN (NULL) AND (rt0.c0))))) UNION ALL SELECT v0.c0, vt1.c0 FROM vt1, rt0, v0 GROUP BY v0.c0, vt1.c0 HAVING ((TOTAL(((rt0.c2) BETWEEN (NULL) AND (rt0.c0)))) ISNULL);
SELECT v0.c0, vt1.c0 FROM vt1, rt0, v0 GROUP BY v0.c0, vt1.c0;
SELECT ALL v0.c0, vt1.c0 FROM vt1, rt0, v0 GROUP BY v0.c0, vt1.c0 HAVING TOTAL(((rt0.c2) BETWEEN (NULL) AND (rt0.c0))) UNION ALL SELECT ALL v0.c0, vt1.c0 FROM vt1, rt0, v0 GROUP BY v0.c0, vt1.c0 HAVING (NOT (TOTAL(((rt0.c2) BETWEEN (NULL) AND (rt0.c0))))) UNION ALL SELECT v0.c0, vt1.c0 FROM vt1, rt0, v0 GROUP BY v0.c0, vt1.c0 HAVING ((TOTAL(((rt0.c2) BETWEEN (NULL) AND (rt0.c0)))) ISNULL);
SELECT v0.c0, vt1.c0 FROM vt1, rt0, v0 GROUP BY v0.c0, vt1.c0;
SELECT ALL * FROM rt0, vt0 NATURAL JOIN v0;
SELECT * FROM rt0, vt0 NATURAL JOIN v0 WHERE (0.5331546786938455) UNION ALL SELECT ALL * FROM rt0, vt0 NATURAL JOIN v0 WHERE ((NOT (0.5331546786938455))) UNION ALL SELECT * FROM rt0, vt0 NATURAL JOIN v0 WHERE (((0.5331546786938455) ISNULL));
SELECT ALL * FROM rt0, vt0 NATURAL JOIN v0;
SELECT DISTINCT * FROM vt1 FULL OUTER JOIN rt0 ON json(CAST(rt0.c0 AS INTEGER)) LEFT OUTER JOIN v0 ON CASE WHEN CASE WHEN rt0.c0 THEN rt0.c1 END THEN (v0.c0 IN ()) WHEN (~ (rt0.c2)) THEN vt0.c0 COLLATE NOCASE WHEN '-963357341' THEN ((v0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)) ELSE CASE vt1.c0  WHEN vt1.c0 THEN v0.c0 END END FULL OUTER JOIN vt0 ON (((json_quote(rt0.c1)))!=((v0.c0 COLLATE NOCASE)));
SELECT ALL rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0;
SELECT rt0.c0, vt1.c0 FROM rt0, vt1 WHERE (((CASE rt0.c2  WHEN vt1.c0 THEN rt0.c0 ELSE vt1.c0 END)IS(CAST(1.552828139E9 AS REAL)))) GROUP BY rt0.c0, vt1.c0 UNION SELECT rt0.c0, vt1.c0 FROM rt0, vt1 WHERE ((NOT (((CASE rt0.c2  WHEN vt1.c0 THEN rt0.c0 ELSE vt1.c0 END)IS(CAST(1.552828139E9 AS REAL)))))) GROUP BY rt0.c0, vt1.c0 UNION SELECT rt0.c0, vt1.c0 FROM rt0, vt1 WHERE (((((CASE rt0.c2  WHEN vt1.c0 THEN rt0.c0 ELSE vt1.c0 END)IS(CAST(1.552828139E9 AS REAL)))) ISNULL)) GROUP BY rt0.c0, vt1.c0;
SELECT ALL rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING SUM(AVG(AVG(rt0.c1))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (SUM(AVG(AVG(rt0.c1))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((SUM(AVG(AVG(rt0.c1)))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c1)%(rt0.c0))))<>((NULL)))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((((rt0.c1)%(rt0.c0))))!=((NULL)))))) UNION ALL SELECT * FROM rt0 WHERE ((((((((rt0.c1)%(rt0.c0))))<>((NULL)))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c0, vt0.c0, rt0.c1, rt0.c2, v0.c0 FROM v0, vt0, rt0;
SELECT DISTINCT rt0.c0, vt0.c0, rt0.c1, rt0.c2, v0.c0 FROM v0, vt0, rt0 WHERE (CASE WHEN ((rt0.c1) NOT NULL) THEN ((vt0.c0)-(0.43953018972321045)) END) UNION SELECT DISTINCT rt0.c0, vt0.c0, rt0.c1, rt0.c2, v0.c0 FROM v0, vt0, rt0 WHERE ((NOT (CASE WHEN ((rt0.c1) NOT NULL) THEN ((vt0.c0)-(0.43953018972321045)) END))) UNION SELECT DISTINCT rt0.c0, vt0.c0, rt0.c1, rt0.c2, v0.c0 FROM v0 NOT INDEXED, vt0, rt0 WHERE (((CASE WHEN ((rt0.c1) NOT NULL) THEN ((vt0.c0)-(0.43953018972321045)) END) ISNULL));
SELECT DISTINCT rt0.c0, vt0.c0, rt0.c1, rt0.c2, v0.c0 FROM v0, vt0, rt0;
SELECT ALL vt0.c0, rt0.c1 FROM rt0, v0 FULL OUTER JOIN vt0 ON NULL GROUP BY vt0.c0, rt0.c1;
SELECT vt0.c0, rt0.c1 FROM rt0, v0 FULL OUTER JOIN vt0 ON NULL WHERE (((CAST(rt0.c1 AS INTEGER)) BETWEEN (((rt0.c2) NOT BETWEEN (x'e1b5') AND (rt0.c2))) AND (vt0.c0))) GROUP BY vt0.c0, rt0.c1 UNION SELECT ALL vt0.c0, rt0.c1 FROM rt0, v0 NOT INDEXED FULL OUTER JOIN vt0 ON NULL WHERE ((NOT (((CAST(rt0.c1 AS INTEGER)) BETWEEN (((rt0.c2) NOT BETWEEN (x'e1b5') AND (rt0.c2))) AND (vt0.c0))))) GROUP BY vt0.c0, rt0.c1 UNION SELECT ALL vt0.c0, rt0.c1 FROM rt0, v0 FULL OUTER JOIN vt0 ON NULL WHERE (((((CAST(rt0.c1 AS INTEGER)) BETWEEN (((rt0.c2) NOT BETWEEN (x'e1b5') AND (rt0.c2))) AND (vt0.c0))) ISNULL)) GROUP BY vt0.c0, rt0.c1;
SELECT ALL vt0.c0, rt0.c1 FROM rt0, v0 FULL OUTER JOIN vt0 ON NULL GROUP BY vt0.c0, rt0.c1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c0, rt0.c2, v0.c0, rt0.c1, vt1.c0, vt0.c0 FROM rt0, vt1 NOT INDEXED, v0, vt0;
SELECT rt0.c0, rt0.c2, v0.c0, rt0.c1, vt1.c0, vt0.c0 FROM rt0, vt1, v0, vt0 NOT INDEXED WHERE ((- (vt0.c0)) COLLATE RTRIM) UNION ALL SELECT rt0.c0, rt0.c2, v0.c0, rt0.c1, vt1.c0, vt0.c0 FROM rt0, vt1, v0, vt0 WHERE ((NOT ((- (vt0.c0)) COLLATE RTRIM))) UNION ALL SELECT ALL rt0.c0, rt0.c2, v0.c0, rt0.c1, vt1.c0, vt0.c0 FROM rt0, vt1, v0, vt0 WHERE ((((- (vt0.c0)) COLLATE RTRIM) ISNULL));
SELECT ALL rt0.c0, rt0.c2, v0.c0, rt0.c1, vt1.c0, vt0.c0 FROM rt0, vt1 NOT INDEXED, v0, vt0;
SELECT DISTINCT * FROM vt1, v0;
SELECT DISTINCT * FROM vt1, v0 WHERE ((((((((((((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))OR((- (vt1.c0)))))OR(((vt1.c0) ISNULL))))AND((((vt1.c0, x'', vt1.c0))<=((v0.c0, vt1.c0, v0.c0))))))AND((((vt1.c0))>((vt1.c0)))))) UNION SELECT DISTINCT * FROM vt1, v0 WHERE ((NOT ((((((((((((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))OR((- (vt1.c0)))))OR(((vt1.c0) ISNULL))))AND((((vt1.c0, x'', vt1.c0))<=((v0.c0, vt1.c0, v0.c0))))))AND((((vt1.c0))>((vt1.c0)))))))) UNION SELECT DISTINCT * FROM vt1, v0 WHERE ((((((((((((((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))OR((- (vt1.c0)))))OR(((vt1.c0) ISNULL))))AND((((vt1.c0, x'', vt1.c0))<=((v0.c0, vt1.c0, v0.c0))))))AND((((vt1.c0))>((vt1.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt1, v0;
SELECT ALL vt1.c0 FROM v0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM v0, vt1 WHERE (CAST(vt1.c0 AS NUMERIC)) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM v0, vt1 WHERE ((NOT (CAST(vt1.c0 AS NUMERIC)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM v0, vt1 WHERE (((CAST(vt1.c0 AS NUMERIC)) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM v0, vt1 GROUP BY vt1.c0;
SELECT rt0.c2, vt0.c0, rt0.c1, rt0.c0, vt1.c0, v0.c0 FROM vt1, vt0, rt0 RIGHT OUTER JOIN v0 ON (- ((~ (rt0.c2)))) GROUP BY rt0.c2, vt0.c0, rt0.c1, rt0.c0, vt1.c0, v0.c0;
SELECT rt0.c2, vt0.c0, rt0.c1, rt0.c0, vt1.c0, v0.c0 FROM vt1, vt0, rt0 RIGHT OUTER JOIN v0 ON (- ((~ (rt0.c2)))) GROUP BY rt0.c2, vt0.c0, rt0.c1, rt0.c0, vt1.c0, v0.c0 HAVING MIN(CASE WHEN AVG(SUM(COUNT(COUNT(vt1.c0)))) THEN rt0.c1 ELSE MAX(rt0.c0) END) UNION ALL SELECT rt0.c2, vt0.c0, rt0.c1, rt0.c0, vt1.c0, v0.c0 FROM vt1, vt0, rt0 RIGHT OUTER JOIN v0 ON (- ((~ (rt0.c2)))) GROUP BY rt0.c2, vt0.c0, rt0.c1, rt0.c0, vt1.c0, v0.c0 HAVING (NOT (MIN(CASE WHEN AVG(SUM(COUNT(COUNT(vt1.c0)))) THEN rt0.c1 ELSE MAX(rt0.c0) END))) UNION ALL SELECT rt0.c2, vt0.c0, rt0.c1, rt0.c0, vt1.c0, v0.c0 FROM vt1, vt0, rt0 RIGHT OUTER JOIN v0 ON (- ((~ (rt0.c2)))) GROUP BY rt0.c2, vt0.c0, rt0.c1, rt0.c0, vt1.c0, v0.c0 HAVING ((MIN(CASE WHEN AVG(SUM(COUNT(COUNT(vt1.c0)))) THEN rt0.c1 ELSE MAX(rt0.c0) END)) ISNULL);
SELECT ALL MAX(NULL) FROM vt0, vt1, rt0 ORDER BY CASE CAST(vt1.c0 AS INTEGER)  WHEN '-1750720274' THEN (((rt0.c1, vt1.c0, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c1, vt1.c0)) AND ((vt0.c0, vt0.c0, rt0.c1))) ELSE (rt0.c0 IN ()) END ASC;
SELECT ALL vt1.c0 FROM vt1, v0;
SELECT ALL vt1.c0 FROM vt1, v0 WHERE (((((1.003030604E9)AND(vt1.c0))) IS FALSE)) UNION ALL SELECT ALL vt1.c0 FROM vt1, v0 WHERE ((NOT (((((1.003030604E9)AND(vt1.c0))) IS FALSE)))) UNION ALL SELECT vt1.c0 FROM vt1, v0 WHERE (((((((1.003030604E9)AND(vt1.c0))) IS FALSE)) ISNULL));
SELECT ALL vt1.c0 FROM vt1, v0;
SELECT DISTINCT vt1.c0, rt0.c2 FROM vt1 RIGHT OUTER JOIN v0 ON NULL CROSS JOIN rt0 ON (((rt0.c0, rt0.c1, rt0.c2)) NOT BETWEEN ((0.8903523128616335, v0.c0, vt1.c0)) AND ((rt0.c1, rt0.c2, vt1.c0))) COLLATE NOCASE;
SELECT DISTINCT vt1.c0, rt0.c2 FROM vt1 RIGHT OUTER JOIN v0 ON NULL CROSS JOIN rt0 ON (((rt0.c0, rt0.c1, rt0.c2)) NOT BETWEEN ((0.8903523128616335, v0.c0, vt1.c0)) AND ((rt0.c1, rt0.c2, vt1.c0))) COLLATE NOCASE WHERE ((((((vt1.c0) IS FALSE), COALESCE(rt0.c0, 0X2d8e3d8c, vt1.c0, rt0.c2), rt0.c2 COLLATE RTRIM))<>((CASE WHEN vt1.c0 THEN rt0.c2 END, v0.c0, (rt0.c1 IN (rt0.c0)))))) UNION SELECT DISTINCT vt1.c0, rt0.c2 FROM vt1 RIGHT OUTER JOIN v0 ON NULL CROSS JOIN rt0 ON (((rt0.c0, rt0.c1, rt0.c2)) NOT BETWEEN ((0.8903523128616335, v0.c0, vt1.c0)) AND ((rt0.c1, rt0.c2, vt1.c0))) COLLATE NOCASE WHERE ((NOT ((((((vt1.c0) IS FALSE), COALESCE(rt0.c0, 0X2d8e3d8c, vt1.c0, rt0.c2), rt0.c2 COLLATE RTRIM))!=((CASE WHEN vt1.c0 THEN rt0.c2 END, v0.c0, (rt0.c1 IN (rt0.c0)))))))) UNION SELECT DISTINCT vt1.c0, rt0.c2 FROM vt1 RIGHT OUTER JOIN v0 ON NULL CROSS JOIN rt0 ON (((rt0.c0, rt0.c1, rt0.c2)) NOT BETWEEN ((0.8903523128616335, v0.c0, vt1.c0)) AND ((rt0.c1, rt0.c2, vt1.c0))) COLLATE NOCASE WHERE ((((((((vt1.c0) IS FALSE), COALESCE(rt0.c0, 0x2d8e3d8c, vt1.c0, rt0.c2), rt0.c2 COLLATE RTRIM))<>((CASE WHEN vt1.c0 THEN rt0.c2 END, v0.c0, (rt0.c1 IN (rt0.c0)))))) ISNULL));
SELECT DISTINCT vt1.c0, rt0.c2 FROM vt1 RIGHT OUTER JOIN v0 ON NULL CROSS JOIN rt0 ON (((rt0.c0, rt0.c1, rt0.c2)) NOT BETWEEN ((0.8903523128616335, v0.c0, vt1.c0)) AND ((rt0.c1, rt0.c2, vt1.c0))) COLLATE NOCASE;
SELECT ALL rt0.c0, rt0.c1, vt0.c0, vt1.c0 FROM vt0, v0, rt0, vt1 GROUP BY rt0.c0, rt0.c1, vt0.c0, vt1.c0;
SELECT ALL rt0.c0, rt0.c1, vt0.c0, vt1.c0 FROM vt0, v0, rt0, vt1 WHERE (((v0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE RTRIM) GROUP BY rt0.c0, rt0.c1, vt0.c0, vt1.c0 UNION SELECT ALL rt0.c0, rt0.c1, vt0.c0, vt1.c0 FROM vt0, v0, rt0, vt1 WHERE ((NOT (((v0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE RTRIM))) GROUP BY rt0.c0, rt0.c1, vt0.c0, vt1.c0 UNION SELECT ALL rt0.c0, rt0.c1, vt0.c0, vt1.c0 FROM vt0, v0, rt0, vt1 WHERE (((((v0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c0, rt0.c1, vt0.c0, vt1.c0;
SELECT ALL rt0.c0, rt0.c1, vt0.c0, vt1.c0 FROM vt0, v0, rt0, vt1 GROUP BY rt0.c0, rt0.c1, vt0.c0, vt1.c0;
SELECT vt1.c0, v0.c0 FROM v0 CROSS JOIN vt1 ON (((0.0741323701759311) NOTNULL) IN ()) GROUP BY vt1.c0, v0.c0;
SELECT ALL vt1.c0, v0.c0 FROM v0 CROSS JOIN vt1 ON (((0.0741323701759311) NOTNULL) IN ()) GROUP BY vt1.c0, v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0, v0.c0 FROM v0 CROSS JOIN vt1 ON (((0.0741323701759311) NOTNULL) IN ()) GROUP BY vt1.c0, v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0, v0.c0 FROM v0 CROSS JOIN vt1 ON (((0.0741323701759311) NOTNULL) IN ()) GROUP BY vt1.c0, v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0, v0.c0 FROM v0 CROSS JOIN vt1 ON (((0.0741323701759311) NOTNULL) IN ()) GROUP BY vt1.c0, v0.c0;
SELECT ALL vt1.c0, v0.c0 FROM v0 CROSS JOIN vt1 ON (((0.0741323701759311) NOTNULL) IN ()) GROUP BY vt1.c0, v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0, v0.c0 FROM v0 CROSS JOIN vt1 ON (((0.0741323701759311) NOTNULL) IN ()) GROUP BY vt1.c0, v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0, v0.c0 FROM v0 CROSS JOIN vt1 ON (((0.0741323701759311) NOTNULL) IN ()) GROUP BY vt1.c0, v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0, v0.c0 FROM v0 CROSS JOIN vt1 ON (((0.0741323701759311) NOTNULL) IN ()) GROUP BY vt1.c0, v0.c0;
SELECT ALL v0.c0, vt1.c0 FROM rt0, vt0 NOT INDEXED, vt1, v0;
SELECT ALL v0.c0, vt1.c0 FROM rt0, vt0, vt1, v0 WHERE (CAST(((rt0.c1) BETWEEN (vt1.c0) AND (v0.c0)) AS TEXT)) UNION ALL SELECT v0.c0, vt1.c0 FROM rt0, vt0, vt1, v0 WHERE ((NOT (CAST(((rt0.c1) BETWEEN (vt1.c0) AND (v0.c0)) AS TEXT)))) UNION ALL SELECT v0.c0, vt1.c0 FROM rt0, vt0, vt1, v0 WHERE (((CAST(((rt0.c1) BETWEEN (vt1.c0) AND (v0.c0)) AS TEXT)) ISNULL));
SELECT ALL v0.c0, vt1.c0 FROM rt0, vt0 NOT INDEXED, vt1, v0;
SELECT DISTINCT * FROM v0, rt0, vt0, vt1;
SELECT DISTINCT * FROM v0, rt0, vt0, vt1 WHERE (CAST((((rt0.c0))>((rt0.c2))) AS TEXT)) UNION SELECT DISTINCT * FROM v0, rt0, vt0, vt1 WHERE ((NOT (CAST((((rt0.c0))>((rt0.c2))) AS TEXT)))) UNION SELECT DISTINCT * FROM v0, rt0, vt0, vt1 WHERE (((CAST((((rt0.c0))>((rt0.c2))) AS TEXT)) ISNULL));
SELECT DISTINCT * FROM v0, rt0, vt0, vt1;
SELECT vt1.c0, v0.c0, rt0.c0, rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0 FULL OUTER JOIN v0 ON CAST(((v0.c0) NOTNULL) AS REAL) FULL OUTER JOIN vt1 ON (+ (((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt1.c0)))) GROUP BY vt1.c0, v0.c0, rt0.c0, rt0.c2, rt0.c1, vt0.c0;
SELECT ALL vt1.c0, v0.c0, rt0.c0, rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0 FULL OUTER JOIN v0 ON CAST(((v0.c0) NOTNULL) AS REAL) FULL OUTER JOIN vt1 ON (+ (((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt1.c0)))) WHERE ((((NOT (vt0.c0))) NOTNULL)) GROUP BY vt1.c0, v0.c0, rt0.c0, rt0.c2, rt0.c1, vt0.c0 UNION SELECT vt1.c0, v0.c0, rt0.c0, rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0 FULL OUTER JOIN v0 ON CAST(((v0.c0) NOTNULL) AS REAL) FULL OUTER JOIN vt1 ON (+ (((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt1.c0)))) WHERE ((NOT ((((NOT (vt0.c0))) NOTNULL)))) GROUP BY vt1.c0, v0.c0, rt0.c0, rt0.c2, rt0.c1, vt0.c0 UNION SELECT ALL vt1.c0, v0.c0, rt0.c0, rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0 FULL OUTER JOIN v0 ON CAST(((v0.c0) NOTNULL) AS REAL) FULL OUTER JOIN vt1 ON (+ (((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt1.c0)))) WHERE ((((((NOT (vt0.c0))) NOTNULL)) ISNULL)) GROUP BY vt1.c0, v0.c0, rt0.c0, rt0.c2, rt0.c1, vt0.c0;
SELECT vt1.c0, v0.c0, rt0.c0, rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0 FULL OUTER JOIN v0 ON CAST(((v0.c0) NOTNULL) AS REAL) FULL OUTER JOIN vt1 ON (+ (((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt1.c0)))) GROUP BY vt1.c0, v0.c0, rt0.c0, rt0.c2, rt0.c1, vt0.c0;
SELECT rt0.c1, vt0.c0, rt0.c2, v0.c0, rt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON CASE (NOT (rt0.c2))  WHEN CASE WHEN rt0.c0 THEN rt0.c2 END THEN (+ (vt0.c0)) ELSE (vt1.c0 IN ()) END FULL OUTER JOIN v0 ON (((((((rt0.c1, v0.c0, vt0.c0)) NOT BETWEEN ((v0.c0, rt0.c1, '82986293')) AND ((vt0.c0, v0.c0, v0.c0))))AND(CASE WHEN v0.c0 THEN 'bX' END)))OR(((rt0.c2) NOT NULL))) CROSS JOIN vt1 ON CASE CASE vt1.c0  WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN v0.c0 WHEN rt0.c0 THEN vt1.c0 ELSE vt0.c0 END  WHEN ((rt0.c1)LIKE(rt0.c2)) THEN rt0.c1 ELSE ((x'')IS(rt0.c0)) END GROUP BY rt0.c1, vt0.c0, rt0.c2, v0.c0, rt0.c0;
SELECT ALL rt0.c1, vt0.c0, rt0.c2, v0.c0, rt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON CASE (NOT (rt0.c2))  WHEN CASE WHEN rt0.c0 THEN rt0.c2 END THEN (+ (vt0.c0)) ELSE (vt1.c0 IN ()) END FULL OUTER JOIN v0 ON (((((((rt0.c1, v0.c0, vt0.c0)) NOT BETWEEN ((v0.c0, rt0.c1, '82986293')) AND ((vt0.c0, v0.c0, v0.c0))))AND(CASE WHEN v0.c0 THEN 'bX' END)))OR(((rt0.c2) NOT NULL))) CROSS JOIN vt1 ON CASE CASE vt1.c0  WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN v0.c0 WHEN rt0.c0 THEN vt1.c0 ELSE vt0.c0 END  WHEN ((rt0.c1)LIKE(rt0.c2)) THEN rt0.c1 ELSE ((x'')IS(rt0.c0)) END GROUP BY rt0.c1, vt0.c0, rt0.c2, v0.c0, rt0.c0 HAVING (AVG(vt0.c0) IN ()) COLLATE NOCASE COLLATE BINARY UNION ALL SELECT rt0.c1, vt0.c0, rt0.c2, v0.c0, rt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON CASE (NOT (rt0.c2))  WHEN CASE WHEN rt0.c0 THEN rt0.c2 END THEN (+ (vt0.c0)) ELSE (vt1.c0 IN ()) END FULL OUTER JOIN v0 ON (((((((rt0.c1, v0.c0, vt0.c0)) NOT BETWEEN ((v0.c0, rt0.c1, '82986293')) AND ((vt0.c0, v0.c0, v0.c0))))AND(CASE WHEN v0.c0 THEN 'bX' END)))OR(((rt0.c2) NOT NULL))) CROSS JOIN vt1 ON CASE CASE vt1.c0  WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN v0.c0 WHEN rt0.c0 THEN vt1.c0 ELSE vt0.c0 END  WHEN ((rt0.c1)LIKE(rt0.c2)) THEN rt0.c1 ELSE ((x'')IS(rt0.c0)) END GROUP BY rt0.c1, vt0.c0, rt0.c2, v0.c0, rt0.c0 HAVING (NOT ((AVG(vt0.c0) IN ()) COLLATE NOCASE COLLATE BINARY)) UNION ALL SELECT rt0.c1, vt0.c0, rt0.c2, v0.c0, rt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON CASE (NOT (rt0.c2))  WHEN CASE WHEN rt0.c0 THEN rt0.c2 END THEN (+ (vt0.c0)) ELSE (vt1.c0 IN ()) END FULL OUTER JOIN v0 ON (((((((rt0.c1, v0.c0, vt0.c0)) NOT BETWEEN ((v0.c0, rt0.c1, '82986293')) AND ((vt0.c0, v0.c0, v0.c0))))AND(CASE WHEN v0.c0 THEN 'bX' END)))OR(((rt0.c2) NOT NULL))) CROSS JOIN vt1 ON CASE CASE vt1.c0  WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN v0.c0 WHEN rt0.c0 THEN vt1.c0 ELSE vt0.c0 END  WHEN ((rt0.c1)LIKE(rt0.c2)) THEN rt0.c1 ELSE ((x'')IS(rt0.c0)) END GROUP BY rt0.c1, vt0.c0, rt0.c2, v0.c0, rt0.c0 HAVING (((AVG(vt0.c0) IN ()) COLLATE NOCASE COLLATE BINARY) ISNULL);
SELECT rt0.c1, vt0.c0, rt0.c2, v0.c0, rt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON CASE (NOT (rt0.c2))  WHEN CASE WHEN rt0.c0 THEN rt0.c2 END THEN (+ (vt0.c0)) ELSE (vt1.c0 IN ()) END FULL OUTER JOIN v0 ON (((((((rt0.c1, v0.c0, vt0.c0)) NOT BETWEEN ((v0.c0, rt0.c1, '82986293')) AND ((vt0.c0, v0.c0, v0.c0))))AND(CASE WHEN v0.c0 THEN 'bX' END)))OR(((rt0.c2) NOT NULL))) CROSS JOIN vt1 ON CASE CASE vt1.c0  WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN v0.c0 WHEN rt0.c0 THEN vt1.c0 ELSE vt0.c0 END  WHEN ((rt0.c1)LIKE(rt0.c2)) THEN rt0.c1 ELSE ((x'')IS(rt0.c0)) END GROUP BY rt0.c1, vt0.c0, rt0.c2, v0.c0, rt0.c0;
SELECT ALL rt0.c1, vt0.c0, rt0.c2, v0.c0, rt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON CASE (NOT (rt0.c2))  WHEN CASE WHEN rt0.c0 THEN rt0.c2 END THEN (+ (vt0.c0)) ELSE (vt1.c0 IN ()) END FULL OUTER JOIN v0 ON (((((((rt0.c1, v0.c0, vt0.c0)) NOT BETWEEN ((v0.c0, rt0.c1, '82986293')) AND ((vt0.c0, v0.c0, v0.c0))))AND(CASE WHEN v0.c0 THEN 'bX' END)))OR(((rt0.c2) NOT NULL))) CROSS JOIN vt1 ON CASE CASE vt1.c0  WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN v0.c0 WHEN rt0.c0 THEN vt1.c0 ELSE vt0.c0 END  WHEN ((rt0.c1)LIKE(rt0.c2)) THEN rt0.c1 ELSE ((x'')IS(rt0.c0)) END GROUP BY rt0.c1, vt0.c0, rt0.c2, v0.c0, rt0.c0 HAVING (AVG(vt0.c0) IN ()) COLLATE NOCASE COLLATE BINARY UNION ALL SELECT rt0.c1, vt0.c0, rt0.c2, v0.c0, rt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON CASE (NOT (rt0.c2))  WHEN CASE WHEN rt0.c0 THEN rt0.c2 END THEN (+ (vt0.c0)) ELSE (vt1.c0 IN ()) END FULL OUTER JOIN v0 ON (((((((rt0.c1, v0.c0, vt0.c0)) NOT BETWEEN ((v0.c0, rt0.c1, '82986293')) AND ((vt0.c0, v0.c0, v0.c0))))AND(CASE WHEN v0.c0 THEN 'bX' END)))OR(((rt0.c2) NOT NULL))) CROSS JOIN vt1 ON CASE CASE vt1.c0  WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN v0.c0 WHEN rt0.c0 THEN vt1.c0 ELSE vt0.c0 END  WHEN ((rt0.c1)LIKE(rt0.c2)) THEN rt0.c1 ELSE ((x'')IS(rt0.c0)) END GROUP BY rt0.c1, vt0.c0, rt0.c2, v0.c0, rt0.c0 HAVING (NOT ((AVG(vt0.c0) IN ()) COLLATE NOCASE COLLATE BINARY)) UNION ALL SELECT rt0.c1, vt0.c0, rt0.c2, v0.c0, rt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON CASE (NOT (rt0.c2))  WHEN CASE WHEN rt0.c0 THEN rt0.c2 END THEN (+ (vt0.c0)) ELSE (vt1.c0 IN ()) END FULL OUTER JOIN v0 ON (((((((rt0.c1, v0.c0, vt0.c0)) NOT BETWEEN ((v0.c0, rt0.c1, '82986293')) AND ((vt0.c0, v0.c0, v0.c0))))AND(CASE WHEN v0.c0 THEN 'bX' END)))OR(((rt0.c2) NOT NULL))) CROSS JOIN vt1 ON CASE CASE vt1.c0  WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN v0.c0 WHEN rt0.c0 THEN vt1.c0 ELSE vt0.c0 END  WHEN ((rt0.c1)LIKE(rt0.c2)) THEN rt0.c1 ELSE ((x'')IS(rt0.c0)) END GROUP BY rt0.c1, vt0.c0, rt0.c2, v0.c0, rt0.c0 HAVING (((AVG(vt0.c0) IN ()) COLLATE NOCASE COLLATE BINARY) ISNULL);
SELECT rt0.c1, vt0.c0, rt0.c2, v0.c0, rt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON CASE (NOT (rt0.c2))  WHEN CASE WHEN rt0.c0 THEN rt0.c2 END THEN (+ (vt0.c0)) ELSE (vt1.c0 IN ()) END FULL OUTER JOIN v0 ON (((((((rt0.c1, v0.c0, vt0.c0)) NOT BETWEEN ((v0.c0, rt0.c1, '82986293')) AND ((vt0.c0, v0.c0, v0.c0))))AND(CASE WHEN v0.c0 THEN 'bX' END)))OR(((rt0.c2) NOT NULL))) CROSS JOIN vt1 ON CASE CASE vt1.c0  WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN v0.c0 WHEN rt0.c0 THEN vt1.c0 ELSE vt0.c0 END  WHEN ((rt0.c1)LIKE(rt0.c2)) THEN rt0.c1 ELSE ((x'')IS(rt0.c0)) END GROUP BY rt0.c1, vt0.c0, rt0.c2, v0.c0, rt0.c0;
SELECT ALL * FROM rt0, vt1, v0, vt0;
SELECT ALL * FROM rt0, vt1, v0, vt0 WHERE ((- (CAST(rt0.c2 AS BLOB)))) UNION ALL SELECT ALL * FROM rt0, vt1, v0, vt0 WHERE ((NOT ((- (CAST(rt0.c2 AS BLOB)))))) UNION ALL SELECT * FROM rt0, vt1, v0, vt0 WHERE ((((- (CAST(rt0.c2 AS BLOB)))) ISNULL));
SELECT ALL * FROM rt0, vt1, v0, vt0;
SELECT DISTINCT * FROM vt1, vt0, rt0;
SELECT DISTINCT * FROM vt1, vt0, rt0 WHERE ((((rt0.c2)<<(rt0.c2)) IN ())) UNION SELECT DISTINCT * FROM vt1, vt0, rt0 WHERE ((NOT ((((rt0.c2)<<(rt0.c2)) IN ())))) UNION SELECT DISTINCT * FROM vt1, vt0, rt0 WHERE ((((((rt0.c2)<<(rt0.c2)) IN ())) ISNULL));
SELECT DISTINCT * FROM vt1, vt0, rt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (CASE vt1.c0 COLLATE RTRIM  WHEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN ((vt1.c0)<=(vt1.c0)) END) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (CASE vt1.c0 COLLATE RTRIM  WHEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN ((vt1.c0)<=(vt1.c0)) END))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((CASE vt1.c0 COLLATE RTRIM  WHEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN ((vt1.c0)<=(vt1.c0)) END) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt0.c1, rt0.c0, vt1.c0, vt0.c0, rt0.c2, v0.c0 FROM vt1, rt0, vt0, v0 NOT INDEXED GROUP BY rt0.c1, rt0.c0, vt1.c0, vt0.c0, rt0.c2, v0.c0;
SELECT rt0.c1, rt0.c0, vt1.c0, vt0.c0, rt0.c2, v0.c0 FROM vt1, rt0, vt0, v0 GROUP BY rt0.c1, rt0.c0, vt1.c0, vt0.c0, rt0.c2, v0.c0 HAVING (((((MIN(COUNT(*))) NOT NULL), (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((MIN(COUNT(*))))), ((vt0.c0) ISNULL)))==((INSTR(SUM(rt0.c2), COUNT(rt0.c0)), CAST(AVG(MIN(GROUP_CONCAT(COUNT(*)))) AS BLOB), MAX(MIN(MIN(vt1.c0)))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, vt1.c0, vt0.c0, rt0.c2, v0.c0 FROM vt1, rt0, vt0, v0 GROUP BY rt0.c1, rt0.c0, vt1.c0, vt0.c0, rt0.c2, v0.c0 HAVING (NOT ((((((MIN(COUNT(*))) NOT NULL), (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((MIN(COUNT(*))))), ((vt0.c0) ISNULL)))=((INSTR(SUM(rt0.c2), COUNT(rt0.c0)), CAST(AVG(MIN(GROUP_CONCAT(COUNT(*)))) AS BLOB), MAX(MIN(MIN(vt1.c0)))))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, vt1.c0, vt0.c0, rt0.c2, v0.c0 FROM vt1, rt0, vt0, v0 GROUP BY rt0.c1, rt0.c0, vt1.c0, vt0.c0, rt0.c2, v0.c0 HAVING (((((((MIN(COUNT(*))) NOT NULL), (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((MIN(COUNT(*))))), ((vt0.c0) ISNULL)))=((INSTR(SUM(rt0.c2), COUNT(rt0.c0)), CAST(AVG(MIN(GROUP_CONCAT(COUNT(*)))) AS BLOB), MAX(MIN(MIN(vt1.c0))))))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((((((((((vt0.c0 COLLATE NOCASE)AND(INSTR(vt0.c0, vt0.c0))))OR((vt0.c0 IN ()))))OR('-56403175')))OR(vt0.c0 COLLATE RTRIM)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND((NOT (vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((((((((((vt0.c0 COLLATE NOCASE)AND(INSTR(vt0.c0, vt0.c0))))OR((vt0.c0 IN ()))))OR('-56403175')))OR(vt0.c0 COLLATE RTRIM)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND((NOT (vt0.c0))))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((((((((((((vt0.c0 COLLATE NOCASE)AND(INSTR(vt0.c0, vt0.c0))))OR((vt0.c0 IN ()))))OR('-56403175')))OR(vt0.c0 COLLATE RTRIM)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND((NOT (vt0.c0))))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM v0, rt0, vt0, vt1;
SELECT DISTINCT * FROM v0, rt0, vt0, vt1 WHERE ((((('-1451179659') BETWEEN (x'') AND (vt1.c0)))GLOB((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) UNION SELECT DISTINCT * FROM v0, rt0, vt0, vt1 WHERE ((NOT ((((('-1451179659') BETWEEN (x'') AND (vt1.c0)))GLOB((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))))))) UNION SELECT DISTINCT * FROM v0, rt0, vt0, vt1 WHERE ((((((('-1451179659') BETWEEN (x'') AND (vt1.c0)))GLOB((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) ISNULL));
SELECT DISTINCT * FROM v0, rt0, vt0, vt1;
SELECT v0.c0, rt0.c1, rt0.c2 FROM rt0 CROSS JOIN v0 ON (('{r') NOT BETWEEN (LOWER(rt0.c0)) AND (((rt0.c1)AND(rt0.c2)))) GROUP BY v0.c0, rt0.c1, rt0.c2;
SELECT ALL v0.c0, rt0.c1, rt0.c2 FROM rt0 CROSS JOIN v0 ON (('{r') NOT BETWEEN (LOWER(rt0.c0)) AND (((rt0.c1)AND(rt0.c2)))) WHERE (UPPER(DISTINCT ((rt0.c0)LIKE(rt0.c0)))) GROUP BY v0.c0, rt0.c1, rt0.c2 UNION SELECT ALL v0.c0, rt0.c1, rt0.c2 FROM rt0 CROSS JOIN v0 ON (('{r') NOT BETWEEN (LOWER(rt0.c0)) AND (((rt0.c1)AND(rt0.c2)))) WHERE ((NOT (UPPER(DISTINCT ((rt0.c0)LIKE(rt0.c0)))))) GROUP BY v0.c0, rt0.c1, rt0.c2 UNION SELECT v0.c0, rt0.c1, rt0.c2 FROM rt0 CROSS JOIN v0 ON (('{r') NOT BETWEEN (LOWER(rt0.c0)) AND (((rt0.c1)AND(rt0.c2)))) WHERE (((UPPER(DISTINCT ((rt0.c0)LIKE(rt0.c0)))) ISNULL)) GROUP BY v0.c0, rt0.c1, rt0.c2;
SELECT v0.c0, rt0.c1, rt0.c2 FROM rt0 CROSS JOIN v0 ON (('{r') NOT BETWEEN (LOWER(rt0.c0)) AND (((rt0.c1)AND(rt0.c2)))) GROUP BY v0.c0, rt0.c1, rt0.c2;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((COUNT(vt0.c0))OR(COUNT(COUNT(vt0.c0)) COLLATE NOCASE)))OR(COUNT(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((((COUNT(vt0.c0))OR(COUNT(COUNT(vt0.c0)) COLLATE NOCASE)))OR(COUNT(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((COUNT(vt0.c0))OR(COUNT(COUNT(vt0.c0)) COLLATE NOCASE)))OR(COUNT(vt0.c0)))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE ((CAST(rt0.c2 AS INTEGER) IN ())) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((CAST(rt0.c2 AS INTEGER) IN ())))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((CAST(rt0.c2 AS INTEGER) IN ())) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (-1664874554) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (-1664874554))) UNION SELECT DISTINCT * FROM vt0 WHERE (((-1664874554) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL rt0.c0 FROM v0, rt0, vt1 INNER JOIN vt0 ON (((((((((rt0.c2)AND(vt0.c0)))AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c0)) IN ()) GROUP BY rt0.c0;
SELECT rt0.c0 FROM v0, rt0, vt1 INNER JOIN vt0 ON (((((((((rt0.c2)AND(vt0.c0)))AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c0)) IN ()) WHERE (CASE WHEN vt0.c0 THEN ((vt1.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)) ELSE rt0.c1 END) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM v0, rt0, vt1 INNER JOIN vt0 ON (((((((((rt0.c2)AND(vt0.c0)))AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c0)) IN ()) WHERE ((NOT (CASE WHEN vt0.c0 THEN ((vt1.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)) ELSE rt0.c1 END))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM v0, rt0, vt1 INNER JOIN vt0 ON (((((((((rt0.c2)AND(vt0.c0)))AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c0)) IN ()) WHERE (((CASE WHEN vt0.c0 THEN ((vt1.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)) ELSE rt0.c1 END) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM v0, rt0, vt1 INNER JOIN vt0 ON (((((((((rt0.c2)AND(vt0.c0)))AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c0)) IN ()) GROUP BY rt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CAST(vt0.c0 AS TEXT) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CAST(vt0.c0 AS TEXT))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CAST(vt0.c0 AS TEXT)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CAST(vt0.c0 AS TEXT) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CAST(vt0.c0 AS TEXT))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CAST(vt0.c0 AS TEXT)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL SUM(COALESCE(DISTINCT (+ (vt0.c0)), ((vt1.c0)<=(v0.c0)))) FROM v0, vt0, vt1 ORDER BY (- (CAST(vt1.c0 AS REAL))) ASC  NULLS LAST;
SELECT ALL v0.c0 FROM v0, rt0 LEFT OUTER JOIN vt0 ON (((((rt0.c2)OR(vt0.c0)))OR(rt0.c1)) IN ()) INNER JOIN vt1 ON ((SQLITE_SOURCE_ID()) NOTNULL);
SELECT ALL v0.c0 FROM v0, rt0 LEFT OUTER JOIN vt0 ON (((((rt0.c2)OR(vt0.c0)))OR(rt0.c1)) IN ()) INNER JOIN vt1 ON ((SQLITE_SOURCE_ID()) NOTNULL) WHERE (((vt1.c0)IS((+ (0X4a7fcafe))))) UNION ALL SELECT ALL v0.c0 FROM v0, rt0 LEFT OUTER JOIN vt0 ON (((((rt0.c2)OR(vt0.c0)))OR(rt0.c1)) IN ()) INNER JOIN vt1 ON ((SQLITE_SOURCE_ID()) NOTNULL) WHERE ((NOT (((vt1.c0)IS((+ (0x4a7fcafe))))))) UNION ALL SELECT ALL v0.c0 FROM v0, rt0 LEFT OUTER JOIN vt0 ON (((((rt0.c2)OR(vt0.c0)))OR(rt0.c1)) IN ()) INNER JOIN vt1 ON ((SQLITE_SOURCE_ID()) NOTNULL) WHERE (((((vt1.c0)IS((+ (0x4a7fcafe))))) ISNULL));
SELECT ALL v0.c0 FROM v0, rt0 LEFT OUTER JOIN vt0 ON (((((rt0.c2)OR(vt0.c0)))OR(rt0.c1)) IN ()) INNER JOIN vt1 ON ((SQLITE_SOURCE_ID()) NOTNULL);
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (x'') UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (x''))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((x'') ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT rt0.c1, vt0.c0, rt0.c2, rt0.c0, vt1.c0 FROM rt0, vt1, v0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c2, rt0.c0, vt1.c0;
SELECT rt0.c1, vt0.c0, rt0.c2, rt0.c0, vt1.c0 FROM rt0, vt1, v0, vt0 WHERE (CASE WHEN rt0.c2 THEN rt0.c0 COLLATE BINARY WHEN ((vt1.c0)+(vt0.c0)) THEN ((rt0.c1) NOTNULL) WHEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c0))) THEN CAST(vt1.c0 AS INTEGER) WHEN 0.6644292682522657 THEN LOWER(DISTINCT vt0.c0) WHEN CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN -1255407609 THEN NULL END THEN CASE WHEN vt0.c0 THEN vt1.c0 END ELSE (rt0.c1 IN (vt1.c0)) END) GROUP BY rt0.c1, vt0.c0, rt0.c2, rt0.c0, vt1.c0 UNION SELECT ALL rt0.c1, vt0.c0, rt0.c2, rt0.c0, vt1.c0 FROM rt0, vt1, v0, vt0 WHERE ((NOT (CASE WHEN rt0.c2 THEN rt0.c0 COLLATE BINARY WHEN ((vt1.c0)+(vt0.c0)) THEN ((rt0.c1) NOTNULL) WHEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c0))) THEN CAST(vt1.c0 AS INTEGER) WHEN 0.6644292682522657 THEN LOWER(DISTINCT vt0.c0) WHEN CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN -1255407609 THEN NULL END THEN CASE WHEN vt0.c0 THEN vt1.c0 END ELSE (rt0.c1 IN (vt1.c0)) END))) GROUP BY rt0.c1, vt0.c0, rt0.c2, rt0.c0, vt1.c0 UNION SELECT rt0.c1, vt0.c0, rt0.c2, rt0.c0, vt1.c0 FROM rt0, vt1, v0, vt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c0 COLLATE BINARY WHEN ((vt1.c0)+(vt0.c0)) THEN ((rt0.c1) NOTNULL) WHEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c0))) THEN CAST(vt1.c0 AS INTEGER) WHEN 0.6644292682522657 THEN LOWER(DISTINCT vt0.c0) WHEN CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN -1255407609 THEN NULL END THEN CASE WHEN vt0.c0 THEN vt1.c0 END ELSE (rt0.c1 IN (vt1.c0)) END) ISNULL)) GROUP BY rt0.c1, vt0.c0, rt0.c2, rt0.c0, vt1.c0;
SELECT rt0.c1, vt0.c0, rt0.c2, rt0.c0, vt1.c0 FROM rt0, vt1, v0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c2, rt0.c0, vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((TOTAL(TOTAL('-224555301')))IS(HEX(TOTAL(MIN(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((TOTAL(TOTAL('-224555301')))IS(HEX(TOTAL(MIN(vt1.c0))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 NOT INDEXED GROUP BY vt1.c0 HAVING ((((TOTAL(TOTAL('-224555301')))IS(HEX(TOTAL(MIN(vt1.c0)))))) ISNULL);
SELECT ALL * FROM rt0, v0, vt1, vt0;
SELECT * FROM rt0, v0, vt1, vt0 WHERE (((((vt1.c0) NOTNULL)) ISNULL)) UNION ALL SELECT ALL * FROM rt0, v0, vt1, vt0 WHERE ((NOT (((((vt1.c0) NOTNULL)) ISNULL)))) UNION ALL SELECT ALL * FROM rt0, v0, vt1, vt0 WHERE (((((((vt1.c0) NOTNULL)) ISNULL)) ISNULL));
SELECT ALL * FROM rt0, v0, vt1, vt0;
SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN rt0 ON CASE (((rt0.c0))>((vt1.c0)))  WHEN (x'' IN (vt1.c0)) THEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE v0.c0 END ELSE ((v0.c0)<<(rt0.c1)) END INNER JOIN v0 ON ((CAST(rt0.c1 AS NUMERIC)) NOT BETWEEN (CAST(rt0.c1 AS BLOB)) AND ((((rt0.c1))<=((rt0.c2)))));
SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN rt0 ON CASE (((rt0.c0))>((vt1.c0)))  WHEN (x'' IN (vt1.c0)) THEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE v0.c0 END ELSE ((v0.c0)<<(rt0.c1)) END INNER JOIN v0 ON ((CAST(rt0.c1 AS NUMERIC)) NOT BETWEEN (CAST(rt0.c1 AS BLOB)) AND ((((rt0.c1))<=((rt0.c2))))) WHERE (((QUOTE(v0.c0)) NOT NULL)) UNION SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN rt0 ON CASE (((rt0.c0))>((vt1.c0)))  WHEN (x'' IN (vt1.c0)) THEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE v0.c0 END ELSE ((v0.c0)<<(rt0.c1)) END INNER JOIN v0 ON ((CAST(rt0.c1 AS NUMERIC)) NOT BETWEEN (CAST(rt0.c1 AS BLOB)) AND ((((rt0.c1))<=((rt0.c2))))) WHERE ((NOT (((QUOTE(v0.c0)) NOT NULL)))) UNION SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN rt0 ON CASE (((rt0.c0))>((vt1.c0)))  WHEN (x'' IN (vt1.c0)) THEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE v0.c0 END ELSE ((v0.c0)<<(rt0.c1)) END INNER JOIN v0 ON ((CAST(rt0.c1 AS NUMERIC)) NOT BETWEEN (CAST(rt0.c1 AS BLOB)) AND ((((rt0.c1))<=((rt0.c2))))) WHERE (((((QUOTE(v0.c0)) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN rt0 ON CASE (((rt0.c0))>((vt1.c0)))  WHEN (x'' IN (vt1.c0)) THEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE v0.c0 END ELSE ((v0.c0)<<(rt0.c1)) END INNER JOIN v0 ON ((CAST(rt0.c1 AS NUMERIC)) NOT BETWEEN (CAST(rt0.c1 AS BLOB)) AND ((((rt0.c1))<=((rt0.c2)))));
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (CASE (vt0.c0 IN ())  WHEN 7.47815515E8 COLLATE RTRIM THEN ((((vt0.c0)AND(vt0.c0)))OR(0.8988953507192746)) WHEN ((x'') NOTNULL) THEN (~ (vt0.c0)) WHEN (vt0.c0 IN (vt0.c0, vt0.c0)) THEN ((vt0.c0) NOTNULL) ELSE (vt0.c0 IN (vt0.c0)) END) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CASE (vt0.c0 IN ())  WHEN 7.47815515E8 COLLATE RTRIM THEN ((((vt0.c0)AND(vt0.c0)))OR(0.8988953507192746)) WHEN ((x'') NOTNULL) THEN (~ (vt0.c0)) WHEN (vt0.c0 IN (vt0.c0, vt0.c0)) THEN ((vt0.c0) NOTNULL) ELSE (vt0.c0 IN (vt0.c0)) END))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((CASE (vt0.c0 IN ())  WHEN 7.47815515E8 COLLATE RTRIM THEN ((((vt0.c0)AND(vt0.c0)))OR(0.8988953507192746)) WHEN ((x'') NOTNULL) THEN (~ (vt0.c0)) WHEN (vt0.c0 IN (vt0.c0, vt0.c0)) THEN ((vt0.c0) NOTNULL) ELSE (vt0.c0 IN (vt0.c0)) END) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT v0.c0 FROM rt0, vt0, vt1, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM rt0, vt0, vt1, v0 GROUP BY v0.c0 HAVING GROUP_CONCAT(((SUM(MAX(vt1.c0)))LIKE(rt0.c0))) UNION ALL SELECT ALL v0.c0 FROM rt0, vt0, vt1, v0 GROUP BY v0.c0 HAVING (NOT (GROUP_CONCAT(((SUM(MAX(vt1.c0)))LIKE(rt0.c0))))) UNION ALL SELECT ALL v0.c0 FROM rt0, vt0, vt1, v0 GROUP BY v0.c0 HAVING ((GROUP_CONCAT(((SUM(MAX(vt1.c0)))LIKE(rt0.c0)))) ISNULL);
SELECT MAX(((rt0.c0)>=(v0.c0)) COLLATE BINARY) FROM vt1, rt0, vt0, v0;
SELECT ALL vt1.c0, vt0.c0, v0.c0 FROM v0, vt0 CROSS JOIN vt1 ON ((((((((CAST(v0.c0 AS BLOB))AND(CAST(vt1.c0 AS TEXT))))AND(((((((((vt0.c0)AND(7.47815515E8)))AND(v0.c0)))AND(vt0.c0)))OR(vt1.c0)))))OR(((((vt1.c0)AND(vt1.c0)))OR(v0.c0)))))AND((((vt0.c0, v0.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, v0.c0, vt1.c0)) AND ((v0.c0, vt1.c0, v0.c0)))));
SELECT ALL vt1.c0, vt0.c0, v0.c0 FROM v0, vt0 CROSS JOIN vt1 ON ((((((((CAST(v0.c0 AS BLOB))AND(CAST(vt1.c0 AS TEXT))))AND(((((((((vt0.c0)AND(7.47815515E8)))AND(v0.c0)))AND(vt0.c0)))OR(vt1.c0)))))OR(((((vt1.c0)AND(vt1.c0)))OR(v0.c0)))))AND((((vt0.c0, v0.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, v0.c0, vt1.c0)) AND ((v0.c0, vt1.c0, v0.c0))))) WHERE (((vt0.c0 IN (vt1.c0)) IN ())) UNION ALL SELECT ALL vt1.c0, vt0.c0, v0.c0 FROM v0, vt0 CROSS JOIN vt1 ON ((((((((CAST(v0.c0 AS BLOB))AND(CAST(vt1.c0 AS TEXT))))AND(((((((((vt0.c0)AND(7.47815515E8)))AND(v0.c0)))AND(vt0.c0)))OR(vt1.c0)))))OR(((((vt1.c0)AND(vt1.c0)))OR(v0.c0)))))AND((((vt0.c0, v0.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, v0.c0, vt1.c0)) AND ((v0.c0, vt1.c0, v0.c0))))) WHERE ((NOT (((vt0.c0 IN (vt1.c0)) IN ())))) UNION ALL SELECT ALL vt1.c0, vt0.c0, v0.c0 FROM v0, vt0 CROSS JOIN vt1 ON ((((((((CAST(v0.c0 AS BLOB))AND(CAST(vt1.c0 AS TEXT))))AND(((((((((vt0.c0)AND(7.47815515E8)))AND(v0.c0)))AND(vt0.c0)))OR(vt1.c0)))))OR(((((vt1.c0)AND(vt1.c0)))OR(v0.c0)))))AND((((vt0.c0, v0.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, v0.c0, vt1.c0)) AND ((v0.c0, vt1.c0, v0.c0))))) WHERE (((((vt0.c0 IN (vt1.c0)) IN ())) ISNULL));
SELECT ALL vt1.c0, vt0.c0, v0.c0 FROM v0, vt0 CROSS JOIN vt1 ON ((((((((CAST(v0.c0 AS BLOB))AND(CAST(vt1.c0 AS TEXT))))AND(((((((((vt0.c0)AND(7.47815515E8)))AND(v0.c0)))AND(vt0.c0)))OR(vt1.c0)))))OR(((((vt1.c0)AND(vt1.c0)))OR(v0.c0)))))AND((((vt0.c0, v0.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, v0.c0, vt1.c0)) AND ((v0.c0, vt1.c0, v0.c0)))));
SELECT DISTINCT * FROM rt0, v0, vt1, vt0;
SELECT DISTINCT * FROM rt0, v0, vt1, vt0 WHERE (CASE WHEN (((v0.c0, rt0.c0, rt0.c1))<>((rt0.c0, v0.c0, rt0.c0))) THEN rt0.c1 COLLATE BINARY END) UNION SELECT DISTINCT * FROM rt0, v0, vt1, vt0 WHERE ((NOT (CASE WHEN (((v0.c0, rt0.c0, rt0.c1))<>((rt0.c0, v0.c0, rt0.c0))) THEN rt0.c1 COLLATE BINARY END))) UNION SELECT DISTINCT * FROM rt0, v0, vt1, vt0 WHERE (((CASE WHEN (((v0.c0, rt0.c0, rt0.c1))!=((rt0.c0, v0.c0, rt0.c0))) THEN rt0.c1 COLLATE BINARY END) ISNULL));
SELECT DISTINCT * FROM rt0, v0, vt1, vt0;
SELECT rt0.c1, v0.c0, vt1.c0 FROM v0, vt0, rt0, vt1 GROUP BY rt0.c1, v0.c0, vt1.c0;
SELECT rt0.c1, v0.c0, vt1.c0 FROM v0 NOT INDEXED, vt0, rt0, vt1 WHERE ((CAST(0.2894376553209621 AS INTEGER) IN ())) GROUP BY rt0.c1, v0.c0, vt1.c0 UNION SELECT ALL rt0.c1, v0.c0, vt1.c0 FROM v0, vt0, rt0, vt1 WHERE ((NOT ((CAST(0.2894376553209621 AS INTEGER) IN ())))) GROUP BY rt0.c1, v0.c0, vt1.c0 UNION SELECT ALL rt0.c1, v0.c0, vt1.c0 FROM v0, vt0, rt0, vt1 NOT INDEXED WHERE ((((CAST(0.2894376553209621 AS INTEGER) IN ())) ISNULL)) GROUP BY rt0.c1, v0.c0, vt1.c0;
SELECT rt0.c1, v0.c0, vt1.c0 FROM v0, vt0, rt0, vt1 GROUP BY rt0.c1, v0.c0, vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((GROUP_CONCAT(MAX(COUNT(MIN(vt1.c0)))))OR(MIN(NULL))))AND((x'' IN (MAX(MAX(AVG(vt1.c0))))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((((GROUP_CONCAT(MAX(COUNT(MIN(vt1.c0)))))OR(MIN(NULL))))AND((x'' IN (MAX(MAX(AVG(vt1.c0))))))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((((GROUP_CONCAT(MAX(COUNT(MIN(vt1.c0)))))OR(MIN(NULL))))AND((x'' IN (MAX(MAX(AVG(vt1.c0)))))))) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0;
SELECT rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0 WHERE (CAST(rt0.c2 COLLATE RTRIM AS NUMERIC)) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0 WHERE ((NOT (CAST(rt0.c2 COLLATE RTRIM AS NUMERIC)))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0 WHERE (((CAST(rt0.c2 COLLATE RTRIM AS NUMERIC)) ISNULL));
SELECT rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 INNER JOIN v0 ON (((~ (vt0.c0)))+(CAST(vt0.c0 AS REAL)));
SELECT DISTINCT * FROM vt0, rt0 INNER JOIN v0 ON (((~ (vt0.c0)))+(CAST(vt0.c0 AS REAL))) WHERE ((NOT (CASE WHEN x'' THEN rt0.c0 END))) UNION SELECT DISTINCT * FROM vt0, rt0 INNER JOIN v0 ON (((~ (vt0.c0)))+(CAST(vt0.c0 AS REAL))) WHERE ((NOT ((NOT (CASE WHEN x'' THEN rt0.c0 END))))) UNION SELECT DISTINCT * FROM vt0, rt0 INNER JOIN v0 ON (((~ (vt0.c0)))+(CAST(vt0.c0 AS REAL))) WHERE ((((NOT (CASE WHEN x'' THEN rt0.c0 END))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0 INNER JOIN v0 ON (((~ (vt0.c0)))+(CAST(vt0.c0 AS REAL)));
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((((0.0033085010587879937) ISNULL) IN ())) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((0.0033085010587879937) ISNULL) IN ())))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((((0.0033085010587879937) ISNULL) IN ())) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c0 HAVING MAX(SUM(v0.c0)) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (MAX(SUM(v0.c0)))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c0 HAVING ((MAX(SUM(v0.c0))) ISNULL);
SELECT ALL * FROM rt0, vt0;
SELECT ALL * FROM rt0, vt0 WHERE (((CAST(0.5192710563208129 AS BLOB)) NOT BETWEEN (((rt0.c2)>(rt0.c2))) AND ((+ (vt0.c0))))) UNION ALL SELECT * FROM rt0, vt0 WHERE ((NOT (((CAST(0.5192710563208129 AS BLOB)) NOT BETWEEN (((rt0.c2)>(rt0.c2))) AND ((+ (vt0.c0))))))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE (((((CAST(0.5192710563208129 AS BLOB)) NOT BETWEEN (((rt0.c2)>(rt0.c2))) AND ((+ (vt0.c0))))) ISNULL));
SELECT ALL * FROM rt0, vt0;
SELECT DISTINCT vt1.c0, rt0.c0 FROM rt0, vt0, vt1;
SELECT DISTINCT vt1.c0, rt0.c0 FROM rt0, vt0, vt1 WHERE (CASE ((((vt0.c0)OR(rt0.c0)))OR(rt0.c0))  WHEN (rt0.c2 IN (rt0.c1)) THEN rt0.c0 COLLATE BINARY END) UNION SELECT DISTINCT vt1.c0, rt0.c0 FROM rt0, vt0, vt1 WHERE ((NOT (CASE ((((vt0.c0)OR(rt0.c0)))OR(rt0.c0))  WHEN (rt0.c2 IN (rt0.c1)) THEN rt0.c0 COLLATE BINARY END))) UNION SELECT DISTINCT vt1.c0, rt0.c0 FROM rt0, vt0, vt1 WHERE (((CASE ((((vt0.c0)OR(rt0.c0)))OR(rt0.c0))  WHEN (rt0.c2 IN (rt0.c1)) THEN rt0.c0 COLLATE BINARY END) ISNULL));
SELECT DISTINCT vt1.c0, rt0.c0 FROM rt0, vt0, vt1;
SELECT vt1.c0, rt0.c1, v0.c0, vt0.c0 FROM vt1, vt0, v0, rt0 GROUP BY vt1.c0, rt0.c1, v0.c0, vt0.c0;
SELECT vt1.c0, rt0.c1, v0.c0, vt0.c0 FROM vt1, vt0, v0, rt0 WHERE (((((NULL) IS FALSE))>(vt1.c0 COLLATE BINARY))) GROUP BY vt1.c0, rt0.c1, v0.c0, vt0.c0 UNION SELECT ALL vt1.c0, rt0.c1, v0.c0, vt0.c0 FROM vt1, vt0, v0, rt0 WHERE ((NOT (((((NULL) IS FALSE))>(vt1.c0 COLLATE BINARY))))) GROUP BY vt1.c0, rt0.c1, v0.c0, vt0.c0 UNION SELECT ALL vt1.c0, rt0.c1, v0.c0, vt0.c0 FROM vt1, vt0, v0, rt0 WHERE (((((((NULL) IS FALSE))>(vt1.c0 COLLATE BINARY))) ISNULL)) GROUP BY vt1.c0, rt0.c1, v0.c0, vt0.c0;
SELECT vt1.c0, rt0.c1, v0.c0, vt0.c0 FROM vt1, vt0, v0, rt0 GROUP BY vt1.c0, rt0.c1, v0.c0, vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT(COUNT(*)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(COUNT(*))) ISNULL);
SELECT ALL v0.c0, vt1.c0 FROM vt1, v0;
SELECT v0.c0, vt1.c0 FROM vt1, v0 WHERE (LOWER((((v0.c0))!=((vt1.c0))))) UNION ALL SELECT ALL v0.c0, vt1.c0 FROM vt1, v0 WHERE ((NOT (LOWER((((v0.c0))!=((vt1.c0))))))) UNION ALL SELECT ALL v0.c0, vt1.c0 FROM vt1, v0 WHERE (((LOWER((((v0.c0))<>((vt1.c0))))) ISNULL));
SELECT ALL v0.c0, vt1.c0 FROM vt1, v0;
SELECT DISTINCT v0.c0, vt0.c0, vt1.c0 FROM vt0, vt1, v0;
SELECT DISTINCT v0.c0, vt0.c0, vt1.c0 FROM vt0, vt1, v0 WHERE (rtreenode(((vt0.c0)GLOB(vt1.c0)), ((vt1.c0) BETWEEN (vt0.c0) AND (NULL)))) UNION SELECT DISTINCT v0.c0, vt0.c0, vt1.c0 FROM vt0, vt1, v0 WHERE ((NOT (rtreenode(((vt0.c0)GLOB(vt1.c0)), ((vt1.c0) BETWEEN (vt0.c0) AND (NULL)))))) UNION SELECT DISTINCT v0.c0, vt0.c0, vt1.c0 FROM vt0, vt1, v0 WHERE (((rtreenode(((vt0.c0)GLOB(vt1.c0)), ((vt1.c0) BETWEEN (vt0.c0) AND (NULL)))) ISNULL));
SELECT DISTINCT v0.c0, vt0.c0, vt1.c0 FROM vt0, vt1, v0;
SELECT vt1.c0 FROM vt0, vt1, v0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, vt1, v0 WHERE (0Xffffffffd95fc00f COLLATE RTRIM COLLATE RTRIM) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt0, vt1, v0 WHERE ((NOT (0Xffffffffd95fc00f COLLATE RTRIM COLLATE RTRIM))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt0, vt1, v0 WHERE (((0xffffffffd95fc00f COLLATE RTRIM COLLATE RTRIM) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, vt1, v0 GROUP BY vt1.c0;
SELECT rt0.c1, vt0.c0, v0.c0, rt0.c2, rt0.c0 FROM v0 LEFT OUTER JOIN rt0 ON rt0.c0 CROSS JOIN vt0 ON ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE BINARY GROUP BY rt0.c1, vt0.c0, v0.c0, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, vt0.c0, v0.c0, rt0.c2, rt0.c0 FROM v0 LEFT OUTER JOIN rt0 ON rt0.c0 CROSS JOIN vt0 ON ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE BINARY GROUP BY rt0.c1, vt0.c0, v0.c0, rt0.c2, rt0.c0 HAVING NULLIF(CASE WHEN AVG(AVG(TOTAL(vt0.c0))) THEN COUNT(*) END, TOTAL(rt0.c2)) UNION ALL SELECT rt0.c1, vt0.c0, v0.c0, rt0.c2, rt0.c0 FROM v0 LEFT OUTER JOIN rt0 ON rt0.c0 CROSS JOIN vt0 ON ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE BINARY GROUP BY rt0.c1, vt0.c0, v0.c0, rt0.c2, rt0.c0 HAVING (NOT (NULLIF(CASE WHEN AVG(AVG(TOTAL(vt0.c0))) THEN COUNT(*) END, TOTAL(rt0.c2)))) UNION ALL SELECT rt0.c1, vt0.c0, v0.c0, rt0.c2, rt0.c0 FROM v0 LEFT OUTER JOIN rt0 ON rt0.c0 CROSS JOIN vt0 ON ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE BINARY GROUP BY rt0.c1, vt0.c0, v0.c0, rt0.c2, rt0.c0 HAVING ((NULLIF(CASE WHEN AVG(AVG(TOTAL(vt0.c0))) THEN COUNT(*) END, TOTAL(rt0.c2))) ISNULL);
SELECT ALL vt1.c0 FROM v0, vt1 INNER JOIN rt0 ON ((((rt0.c2) IS TRUE)) NOTNULL);
SELECT ALL vt1.c0 FROM v0, vt1 INNER JOIN rt0 ON ((((rt0.c2) IS TRUE)) NOTNULL) WHERE (((NULLIF(rt0.c1, rt0.c0)) NOTNULL)) UNION ALL SELECT vt1.c0 FROM v0, vt1 INNER JOIN rt0 ON ((((rt0.c2) IS TRUE)) NOTNULL) WHERE ((NOT (((NULLIF(rt0.c1, rt0.c0)) NOTNULL)))) UNION ALL SELECT vt1.c0 FROM v0, vt1 INNER JOIN rt0 ON ((((rt0.c2) IS TRUE)) NOTNULL) WHERE (((((NULLIF(rt0.c1, rt0.c0)) NOTNULL)) ISNULL));
SELECT ALL vt1.c0 FROM v0, vt1 INNER JOIN rt0 ON ((((rt0.c2) IS TRUE)) NOTNULL);
SELECT DISTINCT vt0.c0 FROM vt1, vt0;
SELECT DISTINCT vt0.c0 FROM vt1, vt0 WHERE (((vt0.c0 COLLATE NOCASE)*(INSTR(vt0.c0, 0.3969501984277819)))) UNION SELECT DISTINCT vt0.c0 FROM vt1, vt0 WHERE ((NOT (((vt0.c0 COLLATE NOCASE)*(INSTR(vt0.c0, 0.3969501984277819)))))) UNION SELECT DISTINCT vt0.c0 FROM vt1, vt0 WHERE (((((vt0.c0 COLLATE NOCASE)*(INSTR(vt0.c0, 0.3969501984277819)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt1, vt0;
SELECT v0.c0 FROM v0, rt0, vt1 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, rt0, vt1 WHERE (((CAST(rt0.c1 AS TEXT))LIKE((rt0.c2 IN ())))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, rt0, vt1 WHERE ((NOT (((CAST(rt0.c1 AS TEXT))LIKE((rt0.c2 IN ())))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, rt0, vt1 WHERE (((((CAST(rt0.c1 AS TEXT))LIKE((rt0.c2 IN ())))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0, rt0, vt1 GROUP BY v0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((CASE WHEN AVG(COUNT(TOTAL(rt0.c1))) THEN rt0.c2 ELSE COUNT(COUNT(rt0.c2)) END)<=(((((rt0.c0)AND(rt0.c2)))AND(GROUP_CONCAT(MAX('-1780247909')))))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (((CASE WHEN AVG(COUNT(TOTAL(rt0.c1))) THEN rt0.c2 ELSE COUNT(COUNT(rt0.c2)) END)<=(((((rt0.c0)AND(rt0.c2)))AND(GROUP_CONCAT(MAX('-1780247909')))))))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((((CASE WHEN AVG(COUNT(TOTAL(rt0.c1))) THEN rt0.c2 ELSE COUNT(COUNT(rt0.c2)) END)<=(((((rt0.c0)AND(rt0.c2)))AND(GROUP_CONCAT(MAX('-1780247909'))))))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((((vt0.c0, '	?m*\n', vt0.c0)) BETWEEN ((LIKELY(DISTINCT vt0.c0), CASE WHEN vt0.c0 THEN vt0.c0 WHEN 0.004026095982874622 THEN x'' WHEN vt0.c0 THEN NULL END, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) AND ((vt0.c0, (- (vt0.c0)), HEX(DISTINCT vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0, '	?m*\n', vt0.c0)) BETWEEN ((LIKELY(DISTINCT vt0.c0), CASE WHEN vt0.c0 THEN vt0.c0 WHEN 0.004026095982874622 THEN x'' WHEN vt0.c0 THEN NULL END, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) AND ((vt0.c0, (- (vt0.c0)), HEX(DISTINCT vt0.c0))))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c0, '	?m*\n', vt0.c0)) BETWEEN ((LIKELY(DISTINCT vt0.c0), CASE WHEN vt0.c0 THEN vt0.c0 WHEN 0.004026095982874622 THEN x'' WHEN vt0.c0 THEN NULL END, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) AND ((vt0.c0, (- (vt0.c0)), HEX(DISTINCT vt0.c0))))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0) NOTNULL)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((vt0.c0) NOTNULL)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((((NULL)>>(vt1.c0)) IN (CASE 0.3005859176642032  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((NULL)>>(vt1.c0)) IN (CASE 0.3005859176642032  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((((NULL)>>(vt1.c0)) IN (CASE 0.3005859176642032  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0)LIKE(COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((vt0.c0)LIKE(COUNT(*))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((vt0.c0)LIKE(COUNT(*)))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0)LIKE(COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((vt0.c0)LIKE(COUNT(*))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((vt0.c0)LIKE(COUNT(*)))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND (((~ (rt0.c2)))))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND (((~ (rt0.c2)))))))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND (((~ (rt0.c2)))))) ISNULL));
SELECT ALL rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((vt0.c0) NOTNULL))<((((vt0.c0))<=((vt0.c0)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) NOTNULL))<((((vt0.c0))<=((vt0.c0)))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((vt0.c0) NOTNULL))<((((vt0.c0))<=((vt0.c0)))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT rt0.c2, vt1.c0, rt0.c0 FROM v0, rt0, vt1 GROUP BY rt0.c2, vt1.c0, rt0.c0;
SELECT rt0.c2, vt1.c0, rt0.c0 FROM v0, rt0, vt1 WHERE (((((NULLIF(rt0.c2, rt0.c0))OR(CASE vt1.c0  WHEN vt1.c0 THEN rt0.c1 WHEN v0.c0 THEN rt0.c1 WHEN ']ࡌp' THEN vt1.c0 ELSE rt0.c1 END)))OR(CASE v0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE v0.c0 END))) GROUP BY rt0.c2, vt1.c0, rt0.c0 UNION SELECT rt0.c2, vt1.c0, rt0.c0 FROM v0, rt0, vt1 WHERE ((NOT (((((NULLIF(rt0.c2, rt0.c0))OR(CASE vt1.c0  WHEN vt1.c0 THEN rt0.c1 WHEN v0.c0 THEN rt0.c1 WHEN ']ࡌp' THEN vt1.c0 ELSE rt0.c1 END)))OR(CASE v0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE v0.c0 END))))) GROUP BY rt0.c2, vt1.c0, rt0.c0 UNION SELECT ALL rt0.c2, vt1.c0, rt0.c0 FROM v0, rt0, vt1 WHERE (((((((NULLIF(rt0.c2, rt0.c0))OR(CASE vt1.c0  WHEN vt1.c0 THEN rt0.c1 WHEN v0.c0 THEN rt0.c1 WHEN ']ࡌp' THEN vt1.c0 ELSE rt0.c1 END)))OR(CASE v0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE v0.c0 END))) ISNULL)) GROUP BY rt0.c2, vt1.c0, rt0.c0;
SELECT rt0.c2, vt1.c0, rt0.c0 FROM v0, rt0, vt1 GROUP BY rt0.c2, vt1.c0, rt0.c0;
SELECT rt0.c2, rt0.c1, vt1.c0 FROM rt0, vt1, v0 GROUP BY rt0.c2, rt0.c1, vt1.c0;
SELECT ALL rt0.c2, rt0.c1, vt1.c0 FROM rt0, vt1, v0 GROUP BY rt0.c2, rt0.c1, vt1.c0 HAVING ((((((((AVG(SUM(v0.c0)))AND(CAST(rt0.c2 AS REAL))))AND(((rt0.c1)<=(v0.c0)))))AND(AVG(COUNT(*)))))AND(((((MAX(rt0.c2))AND(TOTAL(AVG(MAX(MAX(TOTAL(v0.c0))))))))AND(SUM(v0.c0))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, vt1.c0 FROM rt0, vt1, v0 GROUP BY rt0.c2, rt0.c1, vt1.c0 HAVING (NOT (((((((((AVG(SUM(v0.c0)))AND(CAST(rt0.c2 AS REAL))))AND(((rt0.c1)<=(v0.c0)))))AND(AVG(COUNT(*)))))AND(((((MAX(rt0.c2))AND(TOTAL(AVG(MAX(MAX(TOTAL(v0.c0))))))))AND(SUM(v0.c0))))))) UNION ALL SELECT rt0.c2, rt0.c1, vt1.c0 FROM rt0, vt1, v0 GROUP BY rt0.c2, rt0.c1, vt1.c0 HAVING ((((((((((AVG(SUM(v0.c0)))AND(CAST(rt0.c2 AS REAL))))AND(((rt0.c1)<=(v0.c0)))))AND(AVG(COUNT(*)))))AND(((((MAX(rt0.c2))AND(TOTAL(AVG(MAX(MAX(TOTAL(v0.c0))))))))AND(SUM(v0.c0)))))) ISNULL);
SELECT ALL * FROM vt0, vt1;
SELECT * FROM vt0, vt1 WHERE (((((((((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt1.c0)))OR(vt0.c0)))>>((NOT (vt1.c0))))) UNION ALL SELECT * FROM vt0, vt1 WHERE ((NOT (((((((((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt1.c0)))OR(vt0.c0)))>>((NOT (vt1.c0))))))) UNION ALL SELECT * FROM vt0, vt1 WHERE (((((((((((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt1.c0)))OR(vt0.c0)))>>((NOT (vt1.c0))))) ISNULL));
SELECT ALL * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN vt1 ON (~ (NULL));
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN vt1 ON (~ (NULL)) WHERE (NULL) UNION SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN vt1 ON (~ (NULL)) WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN vt1 ON (~ (NULL)) WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN vt1 ON (~ (NULL));
SELECT rt0.c1 FROM v0, rt0, vt1 GROUP BY rt0.c1;
SELECT rt0.c1 FROM v0, rt0, vt1 WHERE (json_object(((((x'87d0')AND(NULL)))AND(rt0.c2)), ((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)), vt1.c0, ((rt0.c2)OR(rt0.c1)))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM v0, rt0, vt1 WHERE ((NOT (json_object(((((x'87d0')AND(NULL)))AND(rt0.c2)), ((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)), vt1.c0, ((rt0.c2)OR(rt0.c1)))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM v0, rt0, vt1 WHERE (((json_object(((((x'87d0')AND(NULL)))AND(rt0.c2)), ((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)), vt1.c0, ((rt0.c2)OR(rt0.c1)))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM v0, rt0, vt1 GROUP BY rt0.c1;
SELECT ALL vt1.c0, rt0.c1 FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON (((((x'', -211515986, ''))==((rt0.c2, rt0.c2, rt0.c1)))) IS TRUE) GROUP BY vt1.c0, rt0.c1;
SELECT ALL vt1.c0, rt0.c1 FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON (((((x'', -211515986, ''))==((rt0.c2, rt0.c2, rt0.c1)))) IS TRUE) GROUP BY vt1.c0, rt0.c1 HAVING vt1.c0 UNION ALL SELECT vt1.c0, rt0.c1 FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON (((((x'', -211515986, ''))=((rt0.c2, rt0.c2, rt0.c1)))) IS TRUE) GROUP BY vt1.c0, rt0.c1 HAVING (NOT (vt1.c0)) UNION ALL SELECT ALL vt1.c0, rt0.c1 FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON (((((x'', -211515986, ''))=((rt0.c2, rt0.c2, rt0.c1)))) IS TRUE) GROUP BY vt1.c0, rt0.c1 HAVING ((vt1.c0) ISNULL);
SELECT ALL vt1.c0, rt0.c1 FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON (((((x'', -211515986, ''))==((rt0.c2, rt0.c2, rt0.c1)))) IS TRUE) GROUP BY vt1.c0, rt0.c1;
SELECT ALL vt1.c0, rt0.c1 FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON (((((x'', -211515986, ''))==((rt0.c2, rt0.c2, rt0.c1)))) IS TRUE) GROUP BY vt1.c0, rt0.c1 HAVING vt1.c0 UNION ALL SELECT vt1.c0, rt0.c1 FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON (((((x'', -211515986, ''))=((rt0.c2, rt0.c2, rt0.c1)))) IS TRUE) GROUP BY vt1.c0, rt0.c1 HAVING (NOT (vt1.c0)) UNION ALL SELECT ALL vt1.c0, rt0.c1 FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON (((((x'', -211515986, ''))=((rt0.c2, rt0.c2, rt0.c1)))) IS TRUE) GROUP BY vt1.c0, rt0.c1 HAVING ((vt1.c0) ISNULL);
SELECT ALL vt1.c0, rt0.c1 FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON (((((x'', -211515986, ''))==((rt0.c2, rt0.c2, rt0.c1)))) IS TRUE) GROUP BY vt1.c0, rt0.c1;
SELECT ALL * FROM rt0, v0, vt1 NATURAL JOIN vt0;
SELECT ALL * FROM rt0, v0, vt1 NATURAL JOIN vt0 WHERE (CASE (((v0.c0, rt0.c2, vt1.c0))>((rt0.c2, rt0.c1, vt1.c0)))  WHEN ((rt0.c1) NOTNULL) THEN ((rt0.c1)=(v0.c0)) END) UNION ALL SELECT * FROM rt0, v0, vt1 NATURAL JOIN vt0 WHERE ((NOT (CASE (((v0.c0, rt0.c2, vt1.c0))>((rt0.c2, rt0.c1, vt1.c0)))  WHEN ((rt0.c1) NOTNULL) THEN ((rt0.c1)==(v0.c0)) END))) UNION ALL SELECT ALL * FROM rt0, v0, vt1 NATURAL JOIN vt0 WHERE (((CASE (((v0.c0, rt0.c2, vt1.c0))>((rt0.c2, rt0.c1, vt1.c0)))  WHEN ((rt0.c1) NOTNULL) THEN ((rt0.c1)==(v0.c0)) END) ISNULL));
SELECT ALL * FROM rt0, v0, vt1 NATURAL JOIN vt0;
SELECT DISTINCT rt0.c2 FROM rt0, vt1, vt0, v0;
SELECT DISTINCT rt0.c2 FROM rt0, vt1, vt0, v0 WHERE (vt1.c0) UNION SELECT DISTINCT rt0.c2 FROM rt0, vt1, vt0, v0 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT rt0.c2 FROM rt0, vt1, vt0, v0 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0, vt1, vt0, v0;
SELECT vt0.c0 FROM vt1 CROSS JOIN vt0 ON ((((vt0.c0)/(vt1.c0))) BETWEEN (vt1.c0) AND ((vt0.c0 IN ()))) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1 CROSS JOIN vt0 ON ((((vt0.c0)/(vt1.c0))) BETWEEN (vt1.c0) AND ((vt0.c0 IN ()))) WHERE (CASE x'502f'  WHEN vt1.c0 THEN '-1206713204' COLLATE BINARY ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END END) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt1 CROSS JOIN vt0 ON ((((vt0.c0)/(vt1.c0))) BETWEEN (vt1.c0) AND ((vt0.c0 IN ()))) WHERE ((NOT (CASE x'502f'  WHEN vt1.c0 THEN '-1206713204' COLLATE BINARY ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END END))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt1 CROSS JOIN vt0 ON ((((vt0.c0)/(vt1.c0))) BETWEEN (vt1.c0) AND ((vt0.c0 IN ()))) WHERE (((CASE x'502f'  WHEN vt1.c0 THEN '-1206713204' COLLATE BINARY ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END END) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1 CROSS JOIN vt0 ON ((((vt0.c0)/(vt1.c0))) BETWEEN (vt1.c0) AND ((vt0.c0 IN ()))) GROUP BY vt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((MIN(SUM(v0.c0)))>(MIN(SUM(v0.c0)))) IN (AVG(v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((((MIN(SUM(v0.c0)))>(MIN(SUM(v0.c0)))) IN (AVG(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((MIN(SUM(v0.c0)))>(MIN(SUM(v0.c0)))) IN (AVG(v0.c0)))) ISNULL);
SELECT vt1.c0 FROM vt0, rt0, vt1;
SELECT ALL vt1.c0 FROM vt0, rt0, vt1 WHERE (rt0.c1) UNION ALL SELECT vt1.c0 FROM vt0, rt0, vt1 WHERE ((NOT (rt0.c1))) UNION ALL SELECT vt1.c0 FROM vt0 NOT INDEXED, rt0, vt1 WHERE (((rt0.c1) ISNULL));
SELECT vt1.c0 FROM vt0, rt0, vt1;
