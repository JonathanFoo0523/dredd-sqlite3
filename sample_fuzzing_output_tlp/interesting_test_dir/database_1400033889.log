-- Time: 2024/06/11 04:18:22
-- Database: database89
-- Database version: 3.40.0
-- seed value: 1400033889
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
REINDEX  vt0; -- 0ms;
REINDEX; -- 0ms;
UPDATE vt0 SET (c0)=(NULL); -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '163'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
END TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (0.3892239348725951), (x'5e58'), ('0.3892239348725951'); -- 5ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('''wz'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1854309836); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '8785'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.9898279507815967); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=982153337 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((x'') NOT BETWEEN (((x'6debffd2')IS NOT(0.3892239348725951))) AND ('-1932983832' COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=982153337 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=982153337 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('0.3892239348725951') IS TRUE))>=(((NULL) BETWEEN (0.8985752231827406) AND (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 433401670 sz=433401670 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '406883178'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1831918889 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1256304180 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1187481123 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '982153337'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((4.3340167E8)AND('1256304180')))IS NOT(CASE WHEN x'' THEN NULL WHEN x'' THEN '' WHEN x'89c0' THEN NULL END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('')AND(NULL)))OR(0.24475102314927988)))<>(((('QU')) BETWEEN ((x'092e')) AND ((NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1831918889 sz=-1831918889'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1802261888'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.9566399490985986) ISNULL))<=((NULL IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE '-1932983832'  WHEN CAST(1.802261888E9 AS NUMERIC) THEN (((0.0957743590405884)) BETWEEN ((NULL)) AND ((x'6806'))) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=2021210162 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1026541676 982153337'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=715257103 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1256304180 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-1932983832') BETWEEN (0.39416311541079785) AND (NULL)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1876666045 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) BETWEEN ('-1876666045') AND (x'')) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((x'' IN ()) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (',Uu('))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('}).A', x'', x'')) NOT BETWEEN (((('')>>('1772555450')), ((NULL) NOTNULL), CASE '1Iyzkt!z]'  WHEN x'' THEN '106351699' WHEN NULL THEN -1.932983832E9 WHEN '' THEN '-1988007864' ELSE NULL END)) AND ((IFNULL(NULL, '1256304180'), (('') BETWEEN ('844966587') AND (NULL)), ((x'') NOT BETWEEN ('0.0957743590405884') AND (NULL))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-451843616 sz=-1399692801'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKE('731974934', (('MO') NOTNULL), '~'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=406883178 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.7074335397509933) NOT BETWEEN (-1399692801) AND (NULL))) BETWEEN (CASE WHEN 0.280847886184439 THEN '-687344930' ELSE 0.2141965251730391 END) AND ((('1802261888')IS NOT(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 2 sz=-1876666045 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1026541676 sz=-1054101765'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1545637516 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=643748493 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'') NOT BETWEEN (x'') AND (7.15257103E8)) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('') NOT BETWEEN (NULL) AND (0.6578047646309083))) NOT BETWEEN ((((''))<=((0.3271059917952155)))) AND ((+ (0X78793832)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1774878055 2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0x2ba10d16) IS FALSE) IN (json_array_length(NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=874955848 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(DISTINCT ((((NULL)OR(x'')))AND(0.8194692655163478))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '973800854 844966587 sz=-904016958 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1187481123 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=72045491 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((((((((0.15953910878636246)OR(x'2436')))AND(0.3564423964395451)))AND(x'')))AND(x''))  WHEN ((0.23364502162957246)!=('-1026541676')) THEN '72045491' WHEN (((x''))<>(('539351834'))) THEN (('') ISNULL) WHEN CASE NULL  WHEN x'' THEN 0.0679114381299718 WHEN NULL THEN 'Áèì6CW' WHEN NULL THEN x'' WHEN NULL THEN NULL WHEN 0.258788366643107 THEN NULL ELSE -1 END THEN '1413025419' ELSE ((((0.2141965251730391)AND(1623928041)))AND(x'')) END; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=433401670'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2103152336 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (SQLITE_SOURCE_ID() IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=374540173 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((((((((((((x'')AND('-1274737841')))AND(NULL)))OR('-315546196')))AND('1726735330')))AND(0x7bda10e4)))AND(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=388232501 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=213202247 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1187481123 sz=1009386321'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'') IS TRUE) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1668916868 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 643748493 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=330164718 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'776e')>=('(X')) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1012973852 sz=-803522686'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)AND((('-687344930') NOT BETWEEN (x'') AND ('1772555450')))))AND((377166411 IN (0X6094d706)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1849513828'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=816987394'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-1145418373'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-8.03522686E8)GLOB('1209039079')) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=1802261888 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1001144657 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=213202247 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-450562031 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('X‚ãó'))>((x'')))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE BINARY) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-304182624 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-27149553 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=152975430'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-2132166757'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0xffffffffe31ddf91 COLLATE BINARY) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE -176483943; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 4 sz=32242111'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1729971742 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('-1e500' COLLATE RTRIM IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(x'' AS INTEGER) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) ISNULL)) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 -176483943 sz=-205527251'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('ÏÑúqe4')+(0.20873018945689692)) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-893752192 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-623915984 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')-(0.8194692655163478)) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1002336602 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'c11f')AND(1466871336)))OR('-636226123')))&((~ (x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('‰íî' COLLATE RTRIM) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1709263053 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0xffffffffaea4565c; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE NULL  WHEN 'N<ZA448%!' THEN NULL END THEN (- (1863981530)) WHEN ((NULL) BETWEEN (0Xfffffffff9aafd9a) AND ('E!ax((')) THEN (NOT ('-1131660103')) WHEN ((NULL)-('1726735330')) THEN IFNULL(NULL, '973800854') ELSE (+ (0xffffffffa44ca4ce)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1893796482 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1544262625 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('>	s/3v'))==(('0.15953910878636246')))) BETWEEN ('' COLLATE BINARY) AND (((('', 0.37410720144520526, x'1995'))<>(('0.37410720144520526', x'6fa6', 0.117114090247039))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 0.49701807018119837 THEN ((-1.0623447E8)<=('')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-712249677') ISNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE 0.2749834906280594  WHEN 0.260955238669329 THEN NULL END IN ((NOT (x'')), ((0.3271059917952155) NOT NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=304054920 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((1.709263053E9)OR('-1187481123')) IN (UPPER(x'1717'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE HEX(DISTINCT TOTAL_CHANGES()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((~ (x'065a')))AND(0.8209903894834046 COLLATE BINARY)))AND('-1130374637' COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=474262751 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('''1')AND(x'')))OR('0.8194692655163478')))IS NOT(((x'')<=(0.25470071006488826)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=474262751 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((0.8505548030421552, 0x1553a8e3, NULL))>=(('', x'', '0.25470071006488826'))))OR((((('4sk')OR(NULL)))OR(NULL)))))OR(CASE WHEN '&‚§é%3' THEN x'' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-27149553 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (x'5707'))) NOT BETWEEN (((x'41e4')IS NOT(''))) AND (((x'') BETWEEN (0.8780042589309708) AND (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.43558254278567565)) BETWEEN ((((x'')>(NULL)))) AND ((CASE WHEN '1466871336' THEN 0Xffffffff96358299 ELSE 0.5586327076018981 END))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '673268884' THEN x'19cf' WHEN '0.37410720144520526' THEN 'l6' WHEN '-1531260006' THEN '·ÄæjS' WHEN 0.9943338562921961 THEN x'9d8a' WHEN x'' THEN 0.2893791333348421 END)|(CAST('1256304180' AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-450562031 sz=-484581487 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-893752192 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=179214662 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.8194692655163478 IN ()))OR(((x'')IS NOT('0.2749834906280594')))))OR('-433254338')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TIME((+ (0.258788366643107)), (((x'')) NOT BETWEEN (('-Tk+5|v?p')) AND (('V'))), ((0Xfffffffffe61bb0f)IS NOT(-340946519))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=715257103 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=1489242067 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1946381819 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=551858518'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1758260246 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((QUOTE(-2103152336))<=(1514098499 COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'1aae1c19'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST('357804259' AS TEXT) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-340946519 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-366206216 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-475210042 sz=-1774878055 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (DATETIME('1274344918', x'', 0.18264100778369097))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((UNICODE(x''))AND(((((((((((((x'cfac')OR(-9223372036854775808)))OR('U%')))OR(NULL)))AND(',<')))AND('')))AND(0.12626704868226435)))))OR(CASE 'MO'  WHEN '0.3271059917952155' THEN 0.6297263732041347 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(-756344136 AS TEXT))>((((0.5683012027085539, 0.3167266163484359, '„êõ.', '(X', 0.8887490612046255)) NOT BETWEEN (('-1054101765', '~W', '1009386321', '1466871336', NULL)) AND ((NULL, NULL, '\r8', NULL, '329032030'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '152975430 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'8dc8')IS NOT(-1))) BETWEEN (x'b2a0') AND (((x'') NOT BETWEEN ('1123402728') AND (x'0ad6')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.0679114381299718 AS NUMERIC)) BETWEEN (LIKELIHOOD('H‰ø≤', 0.32513922086705793)) AND (((0x77551d1f) BETWEEN (NULL) AND (0xffffffffd2eb1ab8)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1706264543 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULLIF(0.05911143933204743, 'fyj')))<=((((NULL) NOTNULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1722503324 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST('^~(jD' AS NUMERIC) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0Xffffffffaee205df) NOTNULL) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('816987394')<<(-300323655)))|((- (0.8013520756405685)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-1543036336)-(0.9349831642053209)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE load_extension(((NULL) BETWEEN ('-1145418373') AND ('-1932983832')), (((NULL))<((x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (0xffffffffa44ca4ce)) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-205527251 sz=-641370100 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-393108407 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.37379052537623725)>=(NULL))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '765787477 2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-654400258 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-180435713 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1541171129 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 1356308015 sz=9223372036854775807'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')>>('&‚§é%3'))) NOT BETWEEN ((NULL IN ())) AND (json_valid(x''))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (((((((('xb\neof')OR('j2x\r')))OR('Dc,6')))OR(x'3061934a')))AND(x'aea9'))  WHEN ((NULL) NOT BETWEEN (NULL) AND ('-756344136')) THEN ((x'457c')||(0.280847886184439)) ELSE (NOT (NULL)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=179214662'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.7828776842772146 COLLATE RTRIM AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 0 sz=-1476205126 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((NULL IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1158291105 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('h0jRV' COLLATE NOCASE AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1991480675 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)LIKE(NULL)) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=72045491 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1002336602 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'4d20')>(((((((((0.18264100778369097)AND(0x656cc53)))OR(NULL)))OR(x'')))OR('')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1274344918 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=1953053273 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1399692801 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((0.3271059917952155)!=(0.5325254516253726)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-623915984 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=1067774565 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1061593740 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('' IN (-1.399692801E9))) BETWEEN (NULL COLLATE BINARY) AND ((+ ('\rh2qO')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST('1531506026' AS NUMERIC) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1197731075 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((NULL IN ()) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-9223372036854775808 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) ISNULL))<(TYPEOF(NULL))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1016138731 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((('')) NOT BETWEEN ((x'')) AND ((''))))AND(CASE WHEN '1430311706' THEN '' END)))OR(((((x'')OR(x'')))AND(x'c6710754')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1256304180 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1531260006 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-633062761 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1772555450 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(((((1726735330)AND(0X150fc1db)))OR(NULL)), (0.7937410407986968 IN ())); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=477167014'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 -1005799940 sz=665458293'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=75549163 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1603686386 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '0.15953910878636246'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((0.8887490612046255)>>(x'923a')))AND(((((((((')Â∑çT‰±ûC4*Èòª')OR(0.953391870372554)))OR(0.8559592069990364)))AND('')))OR(x'3758')))))AND(((x'')>(0.5586327076018981)))))AND(('' IN ()))))OR(((((NULL)AND(x'7a78')))OR(-1186265892)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE -1131660103 COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1622463423 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=349653545'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.42493641020437456) NOTNULL), -3.66206216E8, (0.4857388575581463 IN ())))<((((((-575754385)OR(x'')))OR(NULL)), CASE 0.8505548030421552  WHEN x'' THEN 'ot' ELSE x'' END, ((((x'')AND(0.3167266163484359)))AND(NULL))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1668916868 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0Xffffffffb065c968)AND(NULL)))OR(NULL))) NOT BETWEEN (CAST(NULL AS INTEGER)) AND ((- (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('-636226123')|('b')) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE IFNULL(DISTINCT NULL, (0.5469009003599341 IN ())); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CHANGES(); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '731974934 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1489341054 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.16881745313401686 AS NUMERIC)) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 3ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=443990452 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=186277838 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-803522686 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF((~ (NULL)), ((((((((0.9288160977688)OR('')))AND(-1410771611)))AND('')))OR(1.709263053E9))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1772555450'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-560980881'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1399692801 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=660366944'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1466871336'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=576992283 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((-397579979)IS NOT('1463072572')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.6616079806227095)>=(0.8505548030421552)))LIKE(CASE WHEN x'a754' THEN 'C2' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.9236666952346262)OR(x'1532')))OR(x'')))+(0.2815043600586873 COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (0x2615e3b7)))|(0.48769808814337234 COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (0 IN ())  WHEN TYPEOF('1544262625') THEN NULL WHEN x'e476' COLLATE RTRIM THEN 0.08184833744411424 COLLATE BINARY WHEN (NULL IN (0.9168905068468709, 1.514098499E9)) THEN x'' COLLATE BINARY END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1772555450 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('-1102138093' IN (x'')) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1544262625'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1148735125 6 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=433401670 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1580714222 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0Xffffffff8635c75f)) BETWEEN ((NULL)) AND ((0.2084191120880714)))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-294261544 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=1591596805 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=152975430 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=2077888740 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(('9K' IN ()) AS TEXT); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-687344930 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1758381892 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((json_remove(0.43558254278567565, 0.47030096900613494)) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1362041935 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-758699762 sz=524968636 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2055543453 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1603686386 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '643748493 615297767'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-1410606945 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1225263147 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 5.76992283E8 THEN x'' WHEN NULL THEN x'' WHEN x'' THEN NULL END) NOT BETWEEN ((0.3595025201612302 IN ())) AND (((NULL) NOT NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1538480946 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1893796482 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- ('')))&(((0x737b6321)>(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1612711216 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=25011108 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1012973852 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.1862681393020137)AND('-1843288688'))) NOT BETWEEN (NULL COLLATE RTRIM) AND ((((('')AND(5.39351834E8)))AND(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(DISTINCT CAST(NULL AS NUMERIC)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('ÓôîÌöï')GLOB(0.040548185567494954)) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0.1931360890398326 IN ()) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.9481719754686794)) BETWEEN ((NULL)) AND ((0x487b488a)))))<=((CAST(NULL AS BLOB)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=388232501 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1566406238 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE 8.44966587E8  WHEN CASE 0.76884005140889  WHEN x'' THEN 973800854 WHEN 0Xcc6e2ab THEN 'j2x\r' WHEN -7.58699762E8 THEN '837578579' END THEN CASE x''  WHEN 1.7976931348623157E308 THEN x'27c1' END END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-1876666045')>=(NULL)))|((('149166524')>(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=982153337 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1582176003 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1981811035 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '536823817'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0X38398ac4, x'', '377166411'))<>((0.7389887268495835, 0.20873018945689692, 0.021948397459614966)))))==(((- (''))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('Y2') IS TRUE))OR(CAST(-8.03522686E8 AS BLOB))))OR(((0.8202162795894842) NOT BETWEEN (x'546d') AND (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((SQLITE_SOURCE_ID())OR(TYPEOF(NULL))))AND('*Rx_ b&#[')))AND(CASE WHEN '4SWj‰ø≤z' THEN 1295695066 END)))AND((~ (0.8205896651307737)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '471835201 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.117114090247039) ISNULL) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-2014691253'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('-1399692801')&(NULL))  WHEN (NULL IN ('844966587')) THEN ((x'b7b7') NOT NULL) ELSE CASE '-9223372036854775808'  WHEN '-40390509' THEN NULL WHEN -1.831918889E9 THEN NULL WHEN 'N|05' THEN '' WHEN 0.38547448448549015 THEN 0.35812597972160876 WHEN x'' THEN '2077888740' END END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1091366720'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '896294123 -913270950 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((((((0.3089119122866353)OR(-712249677)))AND(NULL)))OR(load_extension(0X3c60c11c))))OR(((((0.853980263961708)OR(0.24475102314927988)))AND('1772555450')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE COALESCE(1772555450, x'', '?Ó∞ñae[v„ëâ', NULL)  WHEN ((NULL) BETWEEN (x'') AND (0.3272894758667382)) THEN CAST(NULL AS TEXT) WHEN (('\r8')IS NOT('331831258')) THEN (((x'fc95')) NOT BETWEEN ((NULL)) AND ((x''))) WHEN CAST(NULL AS INTEGER) THEN 'K~Sn8{' COLLATE RTRIM ELSE (((0.7901483399652556, NULL, '3{a ', 0.6846816668826312, '-1531260006')) BETWEEN (('-1729971742', NULL, NULL, '1337589617', x'')) AND (('	L-*Hz', 0.3087223222417844, 0.5139331325500034, -1.130374637E9, x'cea2'))) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-366206216'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(((x'') IS TRUE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((SQLITE_COMPILEOPTION_USED(0.8853536611835877))AND(COALESCE(0xfffffffff9aafd9a, x'', x'', '374540173', -9.04016958E8, 0.39416311541079785))))AND(((NULL) BETWEEN ('1872315700') AND (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 -940207683 sz=-313828106 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE UPPER(0.9764674548106236)  WHEN (((NULL, '1413025419', 3.88232501E8)) BETWEEN ((NULL, x'eb27', x'')) AND ((x'', x'', NULL))) THEN NULLIF(0.021948397459614966, NULL) ELSE (('|#~-·íæv') BETWEEN (x'caef') AND (0.0679114381299718)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1413025419 sz=673268884 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('Í´ß·Äæ') NOTNULL) IN ((~ (850007074)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1457434493 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((0.4343826588763986)!=(NULL)) THEN LIKELY(x'') END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-893752192 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (LIKELY(DISTINCT -4.84581487E8))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=816987394 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1252832097 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'ad32bb10') NOT BETWEEN (0.10577632783031454) AND (x'732c'))) BETWEEN ((((0.45806904385080205, '8(y', '1489242067'))>((NULL, x'', x'')))) AND (((NULL)IS NOT(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2136030410'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1466871336 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((NULL) NOT BETWEEN (-238978232) AND (-1.026541676E9)))AND((((NULL)) BETWEEN (('-96051664')) AND ((NULL))))))AND(((((x'')AND(0.9018605280469788)))AND(0.42493641020437456)))))AND(('' IN (0.9652678761444882, 0.5929817620687317)))))OR(((0.08829060477080386) ISNULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('YN2l' IN ()))>(((NULL)&(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1620367110 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((+ (NULL)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('	3IP{Áä°' IN ())))>=(((NULL IN ())))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-434623279 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=1946381819 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1668916868 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-816325058'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 -968535504 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT BETWEEN (NULL) AND (NULL)))-((('0.08184833744411424') BETWEEN (1.946381819E9) AND (0.08065214033158075)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 0 sz=339593889 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 sz=-13113699 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '779548993'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (0.4845441764351651)))||(((0.9923197653958159) NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1565753951'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1987929488 sz=-536386273 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '983476151 152975430 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1694614271 sz=1851529692 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1949770937 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'' COLLATE NOCASE AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 3ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=304054920 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'') NOT BETWEEN (x'') AND (0.29892929233528553)) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1425897664 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1661001659 sz=179214662'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL(DISTINCT ((NULL)GLOB(NULL)), ((0.8713849793925197) IS FALSE)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE HEX(((((((((x'')AND('BIVbb')))OR(x'd150')))AND(0.9018605280469788)))OR(0.44877709257375276))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-757569006 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1831918889 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1260626914 0 sz=841478911 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '4 254331850 sz=-2085037069 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1416746925'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=208878577'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (SQLITE_COMPILEOPTION_GET(0xffffffffb4215353))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (NULL)))&(MAX(x'a71036f7', ''))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1913452860 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-1187481123 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (CAST('0.37379052537623725' AS REAL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-350177254 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-816750127 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-450562031 sz=1863981530'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1667759022 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('Usd' IN ()))GLOB(CASE WHEN 0.8013520756405685 THEN x'' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=250755676 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('9x3ÊÇÉvh9D') NOTNULL)))>((((('1198854048')) NOT BETWEEN ((-1726889727)) AND ((NULL)))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1924901042'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1145418373 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-205527251 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (DATE(x'', 0.76793632685769, '-731848638') IN ()); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-813222453'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=8830932 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1940514592 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('') NOT BETWEEN ((('') ISNULL)) AND ((((0.427672232172442)) NOT BETWEEN (('')) AND ((NULL))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '106351699'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.15688218012692678 COLLATE NOCASE)-((x'' IN ('', 6.158322605427369E-4)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=152975430 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '4 900170376 433401670 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1514098499')==('')))IS((((NULL, -4.33254338E8, '[iÈæúH''~ V3'))<=(('%a', '1758260246', NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-623915984 sz=-1376291055 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1766660104 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((-1.7976931348623157E308)>=(x'9103'))  WHEN ((NULL) NOTNULL) THEN CASE WHEN '-967897954' THEN x'' WHEN NULL THEN x'02f2' WHEN 0.7179208179641737 THEN -909656200 ELSE x'' END ELSE LIKE(0.49291432576726935, x'59fe', 'Óè¢') END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 638668963 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((x'e668')>=(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-433254338 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((1288531292)OR('e](hÈ®å0L8?')))AND(357804259)))OR(NULL)))OR('-396051003'))) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CAST('' AS REAL)))<=(((('-1531260006')&('D,Áè≤Hk\OZ'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=208179546 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1276236371'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-2128971179 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-1297994320 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=874955848'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1390589680 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 'seconds' THEN '-1876666045' END) NOT BETWEEN ((('04DuÁ´ºT?')+(x''))) AND (UNLIKELY(x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-756344136'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1828561544 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1263203346 923753834 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1893796482 680301076 sz=2126122096 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-200168599'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((- ('')))OR(((x'')!=('')))))AND(((((NULL)OR('+2[{{Pd')))AND('WO\nrLA?t')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((+ (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '777511099 498830338 sz=106351699 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_quote(((('L~', 1544262625, NULL))>=((x'261c', '', NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) NOT BETWEEN ((('516825926' IN ()))) AND ((((0.8052887892734607)GLOB(x''))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1700848456 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'')) BETWEEN ((NULL)) AND ((NULL))))AND(((x'7939')/(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'')OR(0.4845441764351651)))OR(''))) NOT BETWEEN (0x5d438491 COLLATE BINARY) AND (CAST(0Xffffffff8b2648b5 AS REAL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '' THEN '' ELSE NULL END) NOT BETWEEN (((NULL) NOT BETWEEN ('') AND (0Xf15a3b1))) AND (((NULL) NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1067604170 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=998722100 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1440980962 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-528152234'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('-1428966808' COLLATE RTRIM AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1139032716 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=162789221 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1726735330 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE load_extension((x'' IN ())); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(-1.274737841E9 AS BLOB) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((NULL))<((NULL))))OR(0.47030096900613494 COLLATE NOCASE)))OR(((0.6802856279355054) IS TRUE))))AND(((NULL)>(NULL)))))AND((0x37ee82c9 IN ()))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(x'' AS TEXT) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((- (x'')))AND(((0.2990943038814232)%('1603686386')))))OR((((NULL))<>(('-1324822979'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((- (x'c098')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((('HmDOl', NULL, NULL, '-1512895658', x''))>=((0X7fffffffffffffff, '377166411', '1543785255', x'', NULL))) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'')OR('eR')))OR('/6-lNmFFv'))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-1996012534 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'1aec'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-306490444 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'')OR('<+/K~s‡∏ù/')) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-767231588 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '4 sz=-1383743695'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1267018021 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((+ (x'')) IN (((((((((((((0.39416311541079785)OR('')))OR('')))OR(0.35695456010339277)))AND(x'')))OR(0.8013520756405685)))AND(1.758260246E9)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-623915984 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=895456372 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-2007472790 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-4.75210042E8) BETWEEN ('1620367110') AND (0.4742562805632424)))<(CASE x''  WHEN NULL THEN 'T' ELSE 0X6db8605f END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-27747008'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE COALESCE('643748493', (((x'')) NOT BETWEEN ((0.12494335784069344)) AND ((x''))), ('O.' IN ()), (-847880247 IN ('', x'0a7e'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE '1946381819'  WHEN '-475210042' THEN 0.9490982072690597 ELSE x'' END COLLATE RTRIM COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1723136985 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-1966509008 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-919775758 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 0 sz=-1716136312 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1131660103'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1274968202 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT BETWEEN (0.8931661535122583) AND (0.510545468465652)))+(((0Xffffffff889e2c94) NOTNULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE ''  WHEN '9x3ÊÇÉvh9D' THEN 0.70941537348563 END AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 0X3c2a0351  WHEN 0.37171775824280173 THEN 0.4953316135464585 WHEN 0.3123324192311735 THEN '1772555450' WHEN '1950476736' THEN x'' WHEN '' THEN NULL WHEN NULL THEN 0.7598551091066916 ELSE NULL END)==(((((((((0.2947696692436155)AND(NULL)))AND(0.9709039480377186)))AND(NULL)))AND('137926356')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1531260006'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=1123402728 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)-(0.5852140070543242)) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((IFNULL(DISTINCT 0.7884577959620545, 0xffffffffea2c22f8)))<=(('-366206216'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.09289825730550616)) NOT BETWEEN (('')) AND (('mÍÖûÊµîiE.oS')))) BETWEEN (ROUND(NULL, 1802261888)) AND (((0xffffffffea4583ee) NOT BETWEEN (NULL) AND (x'f709')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((1.413025419E9)<(0.5010670267981884)))>=(CASE 0x57c76ce5  WHEN '-734136668' THEN '1256304180' WHEN ',<' THEN 329032030 WHEN 't„ûÇf/f~C„≥§' THEN 0.7179208179641737 ELSE x'' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-846171598 sz=623085610 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-1839773136 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2107030123'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('')IS NOT(rtreenode(0.18837057285505254, '3.'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-381691557 sz=1623928041 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) NOT BETWEEN (((((x'01b117cd')) NOT BETWEEN ((NULL)) AND (('0.49701807018119837'))))) AND ((141789104 COLLATE NOCASE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-544780758 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-451843616 sz=106351699 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-199715012 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-491852513'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-107668870'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-644412795 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1831918889'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1673418195 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1808395371 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-722246985 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=816987394 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1107330936 sz=-419827501'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1480537919 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '735283148'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=924872580'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=551858518'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-262820189 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CASE x'f3ce'  WHEN 0X30b23d02 THEN '-2079995355' ELSE 1.893796482E9 END))!=(((('J	v!')<>(x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1395002257 sz=334396715 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY(DISTINCT ((x'') BETWEEN (0.5316318424351862) AND ('-176483943'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=1674826640 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1700292624 sz=1398933164 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((0Xffffffffffffffff)OR('')))AND(-1.274737841E9)))AND('+ÂáóbÓè¢T')))OR('-1607002390')))OR(((((((((-1932983832)AND(NULL)))AND(0.8262662597757593)))OR(0.3906840881448771)))AND(NULL)))))AND(((x'f694') BETWEEN (0.12409457212667907) AND ('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-591251586 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-467465536'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (CAST(NULL AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=377166411 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (774911398 IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=685342782 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-109929037 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1131594571 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ABS(NULL) THEN (0.8209903894834046 IN ()) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=400237183 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.31055756462681094; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ABS(DISTINCT 0.697671728346609)  WHEN ((NULL) IS FALSE) THEN ('-405731373' IN ()) ELSE ((((NULL)OR(NULL)))AND('0.9652678761444882')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1842078127'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((('1946381819')) BETWEEN ((NULL)) AND ((x'')))  WHEN ((x'9c5c')LIKE('')) THEN (-1.668916868E9 IN (0x7c8027f6)) WHEN ((NULL) NOTNULL) THEN ((('WQF', 0.7074335397509933, 0.11547686062936269)) BETWEEN (('-27149553', x'', 0.2893791333348421)) AND ((-1696705318, '-893752192', x''))) WHEN 0.31491728021288645 COLLATE RTRIM THEN (((x'f027')) BETWEEN (('-1543980620')) AND ((0.7282454745216709))) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE x''  WHEN 0.7072887012951995 THEN '-261399501' END AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 sz=1012973852'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1747922852'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=374540173 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((HEX(DISTINCT '731974934')) BETWEEN (TRIM(0.6049363109773678)) AND (CAST('-1907432330' AS REAL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-604594891 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-27149553 sz=-891070169 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-1918897459'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1544262625 sz=149166524'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (0.8579608219177647)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=937894414 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1709263053 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('' AS TEXT)) BETWEEN ((((x'7877', '-186965872', 0x5ada9ca5))<=((0X131ab76c, '-1651558170', NULL)))) AND (((((((((1709263053)AND('9x3ÊÇÉvh9d')))AND(0.07954972608765354)))OR(0.9873755963942834)))AND(1.544262625E9)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1602145353'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (+ (0.7910679866881725)) THEN ((NULL)<>(x'')) WHEN (NULL IN ()) THEN (('~·¶º4*') BETWEEN (x'') AND ('Ë¢´ ')) WHEN NULL COLLATE NOCASE THEN (+ (NULL)) WHEN ((((673268884)OR('')))OR(x'')) THEN ('' IN ()) WHEN (('')>=('945117847')) THEN json_array(0.05911143933204743, NULL, NULL, '', '', 0.2615922602815124) ELSE NULL COLLATE NOCASE END; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (('2144870009' COLLATE BINARY) NOT BETWEEN ((0xffffffff81084d8e IN ())) AND ((((((((('Co‰ø≤(6O''2')AND(x'7d97')))OR(NULL)))AND(x'')))AND(1.758260246E9)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1932983832 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=472001177 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')IS NOT('1690303675')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('')>>(x'')))>((x'235c' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-176483943 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT BETWEEN (NULL) AND (x'')))AND((((('1341879251')AND(0.7266463068989029)))OR(0.23645966924634654)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=1413025419'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((NULL)) BETWEEN ((0.21042535433675547)) AND ((x''))) THEN (((0.27091714842887715)) NOT BETWEEN (('>	s/3v')) AND (('0.7074335397509933'))) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NOT ('j''BÔ∂öSp?_+')) IN (CASE WHEN 'cvCP9- J' THEN 0.3638715712277615 WHEN '1893796482' THEN 0.18917810112394728 WHEN 0.41924667817076267 THEN x'' ELSE 0.39342770442349384 END, (('-1399692801') NOT BETWEEN ('RQ') AND ('JN')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1274737841 906055927 sz=-1291161248 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=2077888740 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1131660103'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-110298109 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-793829522 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1107913130 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('')==(0.8901830808093367)) IN (CAST('N' AS NUMERIC))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1996809802 -1988007864 sz=-970550757 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.035037416492111007) NOT NULL))IS((+ (9.73800854E8)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'')OR(NULL)))AND(NULL)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1924260888'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '656237127 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'' IN ()) COLLATE NOCASE COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1934141131'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1002336602 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ('1627264585' COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1810743737'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE MAX(NULL, x'') COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-340946519 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '4 0 sz=377166411 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1839632063'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-806520560 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=72029089 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0.3782603877252716 IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1345578125 -297325487 sz=2126152382 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1094523687'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=474262751 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((json_array_length('-1454913372'))&(NULL COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1077915649 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((0.2084191120880714 IN ('', NULL)))AND(((NULL) NOTNULL))))AND(((x'') NOT BETWEEN ('0.2815043600586873') AND (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-366206216' COLLATE BINARY) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('(T)J')) NOT BETWEEN ((((x'0de6')AND(0.2340296993805202)))) AND ((((0.8252827090195592)IS NOT('-1961239706'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('430098022') NOT BETWEEN (NULL) AND (NULL)))*((((0.2612305313359762))<((NULL))))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-984894606 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=766900758'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-604760961 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1274737841 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (~ (CASE WHEN x'' THEN NULL END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((IFNULL(DISTINCT x'', x''))%((NULL IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('ÓÇ£^QQNp(')<=('ef0')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1971743265 sz=-1364961700 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 0 sz=413070356'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=731974934 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=10225874 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE '''1'  WHEN -6.23915984E8 THEN NULL WHEN 1893796482 THEN NULL WHEN NULL THEN '179214662' ELSE 0.35812597972160876 END IN (((('-712249677', 0Xffffffff82a47130, 0.9849012514614214))>(('Eiq~', 0Xffffffff8ae7e3f5, x'498c'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((-1547243134 COLLATE BINARY) NOT BETWEEN ((+ (''))) AND ((((0.9935567833714003))<=((0.8400686495752565))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-572169608 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1131660103 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-772401728 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1935952339 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 sz=1353443545 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (CAST('' AS BLOB))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-470075609 IN ('', x'0c4c'))))<=(((('1') NOT BETWEEN (x'') AND (NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-2103152336 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((HEX(0.5196878779170464)) NOT BETWEEN (((-873392458) ISNULL)) AND ((- (x'')))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')||(0xffffffffb93879dd)) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 0'); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=15'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
UPDATE OR FAIL vt0 SET (c0)=('99543548') WHERE ((CAST(vt0.c0 AS INTEGER)) BETWEEN ('') AND ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))); -- 0ms;
COMMIT; -- 0ms;
REINDEX; -- 1ms;
ANALYZE; -- 0ms;
REINDEX  vt0; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 149166524);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=1623928041,7');\n; -- 0ms;
INSERT OR ABORT INTO vt0 VALUES (NULL); -- 0ms;
COMMIT; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 7); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=844966587,6');\n; -- 0ms;
ANALYZE; -- 1ms;
INSERT OR FAIL INTO vt0(c0) VALUES (0.8165198522128186), (''), ('1620367110'); -- 0ms;
UPDATE vt0 SET (c0)=('-39932125'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
COMMIT TRANSACTION; -- 1ms;
UPDATE vt0 SET (c0)=(x'') WHERE ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR((NOT (vt0.c0)))); -- 0ms;
ANALYZE vt0; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=NULL; -- 0ms;
VACUUM; -- 1ms;
COMMIT TRANSACTION; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
END; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=NULL WHERE CAST(((vt0.c0)<=(vt0.c0)) AS INTEGER); -- 0ms;
CREATE TEMP VIEW v0(c0) AS SELECT ALL SUM(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE BINARY) FROM vt0; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
ANALYZE sqlite_master; -- 0ms;
DELETE FROM vt0; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -274321753);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 268770836); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-484581487,2');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '38273'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 15); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE vt0 SET (c0, c0)=(357804259, x''); -- 0ms;
END TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 3); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 708065394);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 31970066); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
REINDEX RTRIM; -- 0ms;
VACUUM main; -- 1ms;
ANALYZE; -- 8ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('\6|*'); -- 0ms;
REINDEX; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 10); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 15); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '9455'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 6); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '7951'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1980357655); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '27662'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=9'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -640400215);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 15); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=11'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
INSERT OR ABORT INTO vt0(c0) VALUES (x''); -- 0ms;
CREATE TRIGGER IF NOT EXISTS tr2 INSTEAD OF INSERT ON v0 FOR EACH ROW  BEGIN SELECT RAISE(ROLLBACK, 'asdf');END; -- 0ms;
ANALYZE; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 1ms;
REINDEX; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 7); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=1554028858,15');\n; -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
COMMIT; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT * FROM v0 LEFT OUTER JOIN rt0 ON CAST(((v0.c0)LIKE(rt0.c2)) AS INTEGER) INNER JOIN vt0 ON ((((rt0.c2)-(rt0.c2))) NOTNULL);
SELECT * FROM v0 LEFT OUTER JOIN rt0 ON CAST(((v0.c0)LIKE(rt0.c2)) AS INTEGER) INNER JOIN vt0 ON ((((rt0.c2)-(rt0.c2))) NOTNULL) WHERE ((((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) IN (((v0.c0) NOT NULL)))) UNION ALL SELECT * FROM v0 LEFT OUTER JOIN rt0 ON CAST(((v0.c0)LIKE(rt0.c2)) AS INTEGER) INNER JOIN vt0 ON ((((rt0.c2)-(rt0.c2))) NOTNULL) WHERE ((NOT ((((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) IN (((v0.c0) NOT NULL)))))) UNION ALL SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON CAST(((v0.c0)LIKE(rt0.c2)) AS INTEGER) INNER JOIN vt0 ON ((((rt0.c2)-(rt0.c2))) NOTNULL) WHERE ((((((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) IN (((v0.c0) NOT NULL)))) ISNULL));
SELECT * FROM v0 LEFT OUTER JOIN rt0 ON CAST(((v0.c0)LIKE(rt0.c2)) AS INTEGER) INNER JOIN vt0 ON ((((rt0.c2)-(rt0.c2))) NOTNULL);
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0)>>(vt0.c0)))<(CAST(vt0.c0 AS TEXT)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.c0)>>(vt0.c0)))<(CAST(vt0.c0 AS TEXT)))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0)>>(vt0.c0)))<(CAST(vt0.c0 AS TEXT)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 WHERE (CAST(v0.c0 AS TEXT)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, v0 WHERE ((NOT (CAST(v0.c0 AS TEXT)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, v0 WHERE (((CAST(v0.c0 AS TEXT)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT ALL rt0.c0, v0.c0, rt0.c2, vt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON CASE WHEN ((vt0.c0)!=(v0.c0)) THEN ((rt0.c0)IS NOT(NULL)) END RIGHT OUTER JOIN v0 ON rt0.c2 GROUP BY rt0.c0, v0.c0, rt0.c2, vt0.c0;
SELECT MAX(((((CASE WHEN '' THEN vt0.c0 ELSE vt0.c0 END)AND((NOT (vt0.c0)))))AND(CAST(rt0.c2 AS NUMERIC)))) FROM v0, vt0, rt0 ORDER BY ((((vt0.c0)GLOB(rt0.c2)))<<(((rt0.c0) BETWEEN (rt0.c0) AND (v0.c0))));
SELECT ALL * FROM v0, rt0, vt0;
SELECT ALL * FROM v0, rt0, vt0 WHERE ((((rt0.c1)) BETWEEN ((CASE rt0.c0  WHEN v0.c0 THEN x'' ELSE rt0.c1 END)) AND ((((x'')>(vt0.c0)))))) UNION ALL SELECT * FROM v0, rt0, vt0 WHERE ((NOT ((((rt0.c1)) BETWEEN ((CASE rt0.c0  WHEN v0.c0 THEN x'' ELSE rt0.c1 END)) AND ((((x'')>(vt0.c0)))))))) UNION ALL SELECT * FROM v0, rt0, vt0 WHERE ((((((rt0.c1)) BETWEEN ((CASE rt0.c0  WHEN v0.c0 THEN x'' ELSE rt0.c1 END)) AND ((((x'')>(vt0.c0)))))) ISNULL));
SELECT ALL * FROM v0, rt0, vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c0))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((NOT (((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((NOT (((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((CAST(rt0.c2 AS BLOB))OR(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))OR((NOT (rt0.c1))))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((((CAST(rt0.c2 AS BLOB))OR(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))OR((NOT (rt0.c1))))))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((((CAST(rt0.c2 AS BLOB))OR(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))OR((NOT (rt0.c1))))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL v0.c0, rt0.c2, rt0.c1, rt0.c0 FROM v0, vt0, rt0 GROUP BY v0.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT v0.c0, rt0.c2, rt0.c1, rt0.c0 FROM v0, vt0, rt0 GROUP BY v0.c0, rt0.c2, rt0.c1, rt0.c0 HAVING (((MAX(SUM(rt0.c1))))<>((vt0.c0))) UNION ALL SELECT v0.c0, rt0.c2, rt0.c1, rt0.c0 FROM v0, vt0, rt0 GROUP BY v0.c0, rt0.c2, rt0.c1, rt0.c0 HAVING (NOT ((((MAX(SUM(rt0.c1))))!=((vt0.c0))))) UNION ALL SELECT v0.c0, rt0.c2, rt0.c1, rt0.c0 FROM v0, vt0, rt0 GROUP BY v0.c0, rt0.c2, rt0.c1, rt0.c0 HAVING (((((MAX(SUM(rt0.c1))))<>((vt0.c0)))) ISNULL);
SELECT ALL * FROM v0, rt0;
SELECT * FROM v0, rt0 WHERE (((((CAST(rt0.c0 AS BLOB))AND(((v0.c0) BETWEEN (v0.c0) AND (x'')))))OR(CASE WHEN 0.5801070257312205 THEN rt0.c0 END))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((NOT (((((CAST(rt0.c0 AS BLOB))AND(((v0.c0) BETWEEN (v0.c0) AND (x'')))))OR(CASE WHEN 0.5801070257312205 THEN rt0.c0 END))))) UNION ALL SELECT * FROM v0, rt0 WHERE (((((((CAST(rt0.c0 AS BLOB))AND(((v0.c0) BETWEEN (v0.c0) AND (x'')))))OR(CASE WHEN 0.5801070257312205 THEN rt0.c0 END))) ISNULL));
SELECT ALL * FROM v0, rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE ('-1346147302') UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ('-1346147302'))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE ((('-1346147302') ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END) BETWEEN (((v0.c0)-(v0.c0))) AND (v0.c0 COLLATE NOCASE))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END) BETWEEN (((v0.c0)-(v0.c0))) AND (v0.c0 COLLATE NOCASE))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END) BETWEEN (((v0.c0)-(v0.c0))) AND (v0.c0 COLLATE NOCASE))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY v0.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT ALL v0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY v0.c0, rt0.c2, rt0.c1, rt0.c0 HAVING SUM(COUNT(*)) UNION ALL SELECT v0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY v0.c0, rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (SUM(COUNT(*)))) UNION ALL SELECT v0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY v0.c0, rt0.c2, rt0.c1, rt0.c0 HAVING ((SUM(COUNT(*))) ISNULL);
SELECT ALL TOTAL(CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC)) FROM vt0;
SELECT * FROM rt0, v0;
SELECT * FROM rt0, v0 WHERE ((((((((((((v0.c0, rt0.c1, rt0.c2)) NOT BETWEEN (('> ^)1b\nM', 0Xffffffffa44ca4ce, rt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c1))))OR(0Xb319d01)))OR(LIKELIHOOD(rt0.c2, 0.5832647656490482))))OR('-484581487')))AND(rt0.c0))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((NOT ((((((((((((v0.c0, rt0.c1, rt0.c2)) NOT BETWEEN (('> ^)1b\nM', 0Xffffffffa44ca4ce, rt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c1))))OR(0Xb319d01)))OR(LIKELIHOOD(rt0.c2, 0.5832647656490482))))OR('-484581487')))AND(rt0.c0))))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((((((((((((((v0.c0, rt0.c1, rt0.c2)) NOT BETWEEN (('> ^)1b\nM', 0xffffffffa44ca4ce, rt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c1))))OR(0Xb319d01)))OR(LIKELIHOOD(rt0.c2, 0.5832647656490482))))OR('-484581487')))AND(rt0.c0))) ISNULL));
SELECT * FROM rt0, v0;
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE ((((((vt0.c0)AND('-1380739567')))OR(v0.c0)) IN ())) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT ((((((vt0.c0)AND('-1380739567')))OR(v0.c0)) IN ())))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((((((((vt0.c0)AND('-1380739567')))OR(v0.c0)) IN ())) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (CASE (~ (vt0.c0))  WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0)IS NOT(vt0.c0)) END) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CASE (~ (vt0.c0))  WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0)IS NOT(vt0.c0)) END))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((CASE (~ (vt0.c0))  WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0)IS NOT(vt0.c0)) END) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING MAX((((x'b8fedb11'))<=((AVG(rt0.c1))))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (MAX((((x'b8fedb11'))<=((AVG(rt0.c1))))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((MAX((((x'b8fedb11'))<=((AVG(rt0.c1)))))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (rt0.c2) UNION ALL SELECT * FROM rt0 WHERE ((NOT (rt0.c2))) UNION ALL SELECT * FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((v0.c0 COLLATE BINARY IN ())) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((v0.c0 COLLATE BINARY IN ())))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((v0.c0 COLLATE BINARY IN ())) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT rt0.c2, rt0.c0, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c0, v0.c0;
SELECT ALL rt0.c2, rt0.c0, v0.c0 FROM v0, rt0 WHERE (0.4975608667674346) GROUP BY rt0.c2, rt0.c0, v0.c0 UNION SELECT rt0.c2, rt0.c0, v0.c0 FROM v0, rt0 WHERE ((NOT (0.4975608667674346))) GROUP BY rt0.c2, rt0.c0, v0.c0 UNION SELECT rt0.c2, rt0.c0, v0.c0 FROM v0, rt0 WHERE (((0.4975608667674346) ISNULL)) GROUP BY rt0.c2, rt0.c0, v0.c0;
SELECT rt0.c2, rt0.c0, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c0, v0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT(AVG(SUM(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(AVG(SUM(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(AVG(SUM(vt0.c0)))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END) BETWEEN (CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END) AND (((('-1064117732'))>=((rt0.c0)))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END) BETWEEN (CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END) AND (((('-1064117732'))>=((rt0.c0)))))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END) BETWEEN (CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END) AND (((('-1064117732'))>=((rt0.c0)))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((((v0.c0)<<(0.026810423965433428)) IN (((v0.c0)<>('4Z%F?1'))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((((v0.c0)<<(0.026810423965433428)) IN (((v0.c0)<>('4Z%F?1'))))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((v0.c0)<<(0.026810423965433428)) IN (((v0.c0)!=('4Z%F?1'))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((((v0.c0)IS(v0.c0))) NOTNULL)) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((v0.c0)IS(v0.c0))) NOTNULL)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((((v0.c0)IS(v0.c0))) NOTNULL)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c0, rt0.c1, v0.c0, rt0.c0 FROM vt0, rt0, v0 GROUP BY vt0.c0, rt0.c1, v0.c0, rt0.c0;
SELECT vt0.c0, rt0.c1, v0.c0, rt0.c0 FROM vt0, rt0, v0 GROUP BY vt0.c0, rt0.c1, v0.c0, rt0.c0 HAVING AVG(((GROUP_CONCAT(COUNT(MIN(SUM(COUNT(vt0.c0))))))GLOB(AVG(MAX(rt0.c2))))) UNION ALL SELECT ALL vt0.c0, rt0.c1, v0.c0, rt0.c0 FROM vt0, rt0, v0 GROUP BY vt0.c0, rt0.c1, v0.c0, rt0.c0 HAVING (NOT (AVG(((GROUP_CONCAT(COUNT(MIN(SUM(COUNT(vt0.c0))))))GLOB(AVG(MAX(rt0.c2))))))) UNION ALL SELECT ALL vt0.c0, rt0.c1, v0.c0, rt0.c0 FROM vt0 NOT INDEXED, rt0, v0 GROUP BY vt0.c0, rt0.c1, v0.c0, rt0.c0 HAVING ((AVG(((GROUP_CONCAT(COUNT(MIN(SUM(COUNT(vt0.c0))))))GLOB(AVG(MAX(rt0.c2)))))) ISNULL);
SELECT * FROM vt0, v0, rt0;
SELECT * FROM vt0, v0, rt0 WHERE ((((((rt0.c2))>((rt0.c2)))) NOT BETWEEN ((v0.c0 IN ())) AND (((rt0.c1) NOT NULL)))) UNION ALL SELECT ALL * FROM vt0, v0, rt0 WHERE ((NOT ((((((rt0.c2))>((rt0.c2)))) NOT BETWEEN ((v0.c0 IN ())) AND (((rt0.c1) NOT NULL)))))) UNION ALL SELECT * FROM vt0, v0, rt0 WHERE ((((((((rt0.c2))>((rt0.c2)))) NOT BETWEEN ((v0.c0 IN ())) AND (((rt0.c1) NOT NULL)))) ISNULL));
SELECT * FROM vt0, v0, rt0;
SELECT DISTINCT rt0.c1, vt0.c0 FROM rt0, vt0;
SELECT DISTINCT rt0.c1, vt0.c0 FROM rt0, vt0 WHERE (((((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))))>=(((~ (rt0.c0)))))) UNION SELECT DISTINCT rt0.c1, vt0.c0 FROM rt0, vt0 WHERE ((NOT (((((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))))>=(((~ (rt0.c0)))))))) UNION SELECT DISTINCT rt0.c1, vt0.c0 FROM rt0, vt0 WHERE (((((((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))))>=(((~ (rt0.c0)))))) ISNULL));
SELECT DISTINCT rt0.c1, vt0.c0 FROM rt0, vt0;
SELECT ALL rt0.c2, rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0, vt0.c0;
SELECT ALL rt0.c2, rt0.c0, vt0.c0 FROM vt0, rt0 WHERE (((rt0.c2 COLLATE NOCASE) BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))) AND (((rt0.c0) NOTNULL)))) GROUP BY rt0.c2, rt0.c0, vt0.c0 UNION SELECT rt0.c2, rt0.c0, vt0.c0 FROM vt0, rt0 WHERE ((NOT (((rt0.c2 COLLATE NOCASE) BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))) AND (((rt0.c0) NOTNULL)))))) GROUP BY rt0.c2, rt0.c0, vt0.c0 UNION SELECT rt0.c2, rt0.c0, vt0.c0 FROM vt0, rt0 WHERE (((((rt0.c2 COLLATE NOCASE) BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))) AND (((rt0.c0) NOTNULL)))) ISNULL)) GROUP BY rt0.c2, rt0.c0, vt0.c0;
SELECT ALL rt0.c2, rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0, vt0.c0;
SELECT ALL vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM v0 RIGHT OUTER JOIN rt0 ON x'' RIGHT OUTER JOIN vt0 ON v0.c0 COLLATE RTRIM GROUP BY vt0.c0, rt0.c0, rt0.c1, rt0.c2;
SELECT ALL vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM v0 RIGHT OUTER JOIN rt0 ON x'' RIGHT OUTER JOIN vt0 ON v0.c0 COLLATE RTRIM GROUP BY vt0.c0, rt0.c0, rt0.c1, rt0.c2 HAVING ((COUNT(MAX(COUNT(v0.c0)))) NOT NULL) UNION ALL SELECT vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM v0 RIGHT OUTER JOIN rt0 ON x'' RIGHT OUTER JOIN vt0 ON v0.c0 COLLATE RTRIM GROUP BY vt0.c0, rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (((COUNT(MAX(COUNT(v0.c0)))) NOT NULL))) UNION ALL SELECT ALL vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM v0 RIGHT OUTER JOIN rt0 ON x'' RIGHT OUTER JOIN vt0 ON v0.c0 COLLATE RTRIM GROUP BY vt0.c0, rt0.c0, rt0.c1, rt0.c2 HAVING ((((COUNT(MAX(COUNT(v0.c0)))) NOT NULL)) ISNULL);
SELECT ALL rt0.c1 FROM rt0, v0 NOT INDEXED, vt0;
SELECT rt0.c1 FROM rt0, v0, vt0 WHERE (((((highlight(rt0.c2, rt0.c0, vt0.c0, rt0.c2))OR('1898408174' COLLATE BINARY)))OR(((((((((0.7996735169531097)AND(rt0.c2)))AND(v0.c0)))AND(rt0.c1)))AND(rt0.c2))))) UNION ALL SELECT rt0.c1 FROM rt0, v0, vt0 WHERE ((NOT (((((highlight(rt0.c2, rt0.c0, vt0.c0, rt0.c2))OR('1898408174' COLLATE BINARY)))OR(((((((((0.7996735169531097)AND(rt0.c2)))AND(v0.c0)))AND(rt0.c1)))AND(rt0.c2))))))) UNION ALL SELECT rt0.c1 FROM rt0, v0, vt0 WHERE (((((((highlight(rt0.c2, rt0.c0, vt0.c0, rt0.c2))OR('1898408174' COLLATE BINARY)))OR(((((((((0.7996735169531097)AND(rt0.c2)))AND(v0.c0)))AND(rt0.c1)))AND(rt0.c2))))) ISNULL));
SELECT ALL rt0.c1 FROM rt0, v0 NOT INDEXED, vt0;
SELECT DISTINCT * FROM vt0, v0, rt0;
SELECT DISTINCT * FROM vt0, v0, rt0 WHERE (((((rt0.c0)<(vt0.c0)))OR(((vt0.c0)OR(rt0.c2))))) UNION SELECT DISTINCT * FROM vt0, v0, rt0 WHERE ((NOT (((((rt0.c0)<(vt0.c0)))OR(((vt0.c0)OR(rt0.c2))))))) UNION SELECT DISTINCT * FROM vt0, v0, rt0 WHERE (((((((rt0.c0)<(vt0.c0)))OR(((vt0.c0)OR(rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM vt0, v0, rt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ('1709263053') GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ('1709263053'))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((('1709263053') ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON ((vt0.c0) BETWEEN (CASE v0.c0  WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END) AND (((vt0.c0)OR(v0.c0)))) GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON ((vt0.c0) BETWEEN (CASE v0.c0  WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END) AND (((vt0.c0)OR(v0.c0)))) GROUP BY vt0.c0, v0.c0 HAVING SUM(MAX(v0.c0)) UNION ALL SELECT vt0.c0, v0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON ((vt0.c0) BETWEEN (CASE v0.c0  WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END) AND (((vt0.c0)OR(v0.c0)))) GROUP BY vt0.c0, v0.c0 HAVING (NOT (SUM(MAX(v0.c0)))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON ((vt0.c0) BETWEEN (CASE v0.c0  WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END) AND (((vt0.c0)OR(v0.c0)))) GROUP BY vt0.c0, v0.c0 HAVING ((SUM(MAX(v0.c0))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON json((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((''))));
SELECT vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON json((((vt0.c0)) BETWEEN ((vt0.c0)) AND (('')))) WHERE ((((v0.c0)IS(v0.c0)) IN ())) UNION ALL SELECT ALL vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON json((((vt0.c0)) BETWEEN ((vt0.c0)) AND (('')))) WHERE ((NOT ((((v0.c0)IS(v0.c0)) IN ())))) UNION ALL SELECT ALL vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON json((((vt0.c0)) BETWEEN ((vt0.c0)) AND (('')))) WHERE ((((((v0.c0)IS(v0.c0)) IN ())) ISNULL));
SELECT ALL vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON json((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((''))));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ('-1775288595') UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ('-1775288595'))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((('-1775288595') ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, vt0 WHERE ('-1131660103') GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0, vt0 WHERE ((NOT ('-1131660103'))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0, vt0 WHERE ((('-1131660103') ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0, v0, vt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0, v0, vt0 GROUP BY rt0.c0, rt0.c2 HAVING AVG(TOTAL(rt0.c1)) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0, v0, vt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (AVG(TOTAL(rt0.c1)))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0, v0, vt0 GROUP BY rt0.c0, rt0.c2 HAVING ((AVG(TOTAL(rt0.c1))) ISNULL);
SELECT * FROM rt0 INNER JOIN vt0 ON (((rt0.c0)) BETWEEN (((+ (rt0.c1)))) AND ((((((v0.c0)OR(rt0.c2)))AND(rt0.c2))))) RIGHT OUTER JOIN v0 ON CASE ((((rt0.c2)AND('l~')))OR(rt0.c2))  WHEN 0.4924200228510971 THEN ((((rt0.c1)OR(rt0.c0)))OR(v0.c0)) WHEN x'' THEN ((((rt0.c1)AND(x'')))OR(v0.c0)) WHEN TRIM(vt0.c0) THEN NULL END;
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE (((((((vt0.c0) NOT NULL))AND(((v0.c0) BETWEEN (v0.c0) AND (0.28529846427242944)))))AND(((vt0.c0)>>(v0.c0))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT (((((((vt0.c0) NOT NULL))AND(((v0.c0) BETWEEN (v0.c0) AND (0.28529846427242944)))))AND(((vt0.c0)>>(v0.c0))))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE (((((((((vt0.c0) NOT NULL))AND(((v0.c0) BETWEEN (v0.c0) AND (0.28529846427242944)))))AND(((vt0.c0)>>(v0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((((x'', rt0.c2, '1246794499')) NOT BETWEEN ((NULL, 1.7976931348623157E308, rt0.c1)) AND ((rt0.c1, rt0.c2, rt0.c1))))-(973849788))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((((((x'', rt0.c2, '1246794499')) NOT BETWEEN ((NULL, 1.7976931348623157E308, rt0.c1)) AND ((rt0.c1, rt0.c2, rt0.c1))))-(973849788))))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((((((x'', rt0.c2, '1246794499')) NOT BETWEEN ((NULL, 1.7976931348623157E308, rt0.c1)) AND ((rt0.c1, rt0.c2, rt0.c1))))-(973849788))) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT vt0.c0, v0.c0 FROM v0 CROSS JOIN vt0 ON ((((v0.c0)OR(NULL))) NOT BETWEEN ((vt0.c0 IN ())) AND (((v0.c0) ISNULL))) GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM v0 CROSS JOIN vt0 ON ((((v0.c0)OR(NULL))) NOT BETWEEN ((vt0.c0 IN ())) AND (((v0.c0) ISNULL))) GROUP BY vt0.c0, v0.c0 HAVING vt0.c0 UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0 CROSS JOIN vt0 ON ((((v0.c0)OR(NULL))) NOT BETWEEN ((vt0.c0 IN ())) AND (((v0.c0) ISNULL))) GROUP BY vt0.c0, v0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT vt0.c0, v0.c0 FROM v0 CROSS JOIN vt0 ON ((((v0.c0)OR(NULL))) NOT BETWEEN ((vt0.c0 IN ())) AND (((v0.c0) ISNULL))) GROUP BY vt0.c0, v0.c0 HAVING ((vt0.c0) ISNULL);
SELECT vt0.c0, v0.c0 FROM v0 CROSS JOIN vt0 ON ((((v0.c0)OR(NULL))) NOT BETWEEN ((vt0.c0 IN ())) AND (((v0.c0) ISNULL))) GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM v0 CROSS JOIN vt0 ON ((((v0.c0)OR(NULL))) NOT BETWEEN ((vt0.c0 IN ())) AND (((v0.c0) ISNULL))) GROUP BY vt0.c0, v0.c0 HAVING vt0.c0 UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0 CROSS JOIN vt0 ON ((((v0.c0)OR(NULL))) NOT BETWEEN ((vt0.c0 IN ())) AND (((v0.c0) ISNULL))) GROUP BY vt0.c0, v0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT vt0.c0, v0.c0 FROM v0 CROSS JOIN vt0 ON ((((v0.c0)OR(NULL))) NOT BETWEEN ((vt0.c0 IN ())) AND (((v0.c0) ISNULL))) GROUP BY vt0.c0, v0.c0 HAVING ((vt0.c0) ISNULL);
SELECT vt0.c0, v0.c0 FROM v0 CROSS JOIN vt0 ON ((((v0.c0)OR(NULL))) NOT BETWEEN ((vt0.c0 IN ())) AND (((v0.c0) ISNULL))) GROUP BY vt0.c0, v0.c0;
SELECT ALL MAX((((vt0.c0 IN ()))IS((((NULL)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) FROM vt0;
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON (((- (rt0.c2))) BETWEEN (v0.c0 COLLATE RTRIM) AND ((rt0.c0 IN ()))) INNER JOIN v0 ON (((rt0.c2))!=((rt0.c0))) COLLATE BINARY;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) IN ())) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) IN ())))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) IN ())) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT rt0.c2, v0.c0, vt0.c0, rt0.c1 FROM rt0 INNER JOIN v0 ON ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt0.c0))) IS FALSE) CROSS JOIN vt0 ON CASE vt0.c0 COLLATE RTRIM  WHEN v0.c0 THEN v0.c0 WHEN NULL THEN (NOT (rt0.c1)) WHEN (('')-(vt0.c0)) THEN CAST(vt0.c0 AS BLOB) END GROUP BY rt0.c2, v0.c0, vt0.c0, rt0.c1;
SELECT rt0.c2, v0.c0, vt0.c0, rt0.c1 FROM rt0 INNER JOIN v0 ON ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt0.c0))) IS FALSE) CROSS JOIN vt0 ON CASE vt0.c0 COLLATE RTRIM  WHEN v0.c0 THEN v0.c0 WHEN NULL THEN (NOT (rt0.c1)) WHEN (('')-(vt0.c0)) THEN CAST(vt0.c0 AS BLOB) END WHERE (((NULL)AND(CASE WHEN rt0.c0 THEN v0.c0 ELSE NULL END))) GROUP BY rt0.c2, v0.c0, vt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, v0.c0, vt0.c0, rt0.c1 FROM rt0 INNER JOIN v0 ON ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt0.c0))) IS FALSE) CROSS JOIN vt0 ON CASE vt0.c0 COLLATE RTRIM  WHEN v0.c0 THEN v0.c0 WHEN NULL THEN (NOT (rt0.c1)) WHEN (('')-(vt0.c0)) THEN CAST(vt0.c0 AS BLOB) END WHERE ((NOT (((NULL)AND(CASE WHEN rt0.c0 THEN v0.c0 ELSE NULL END))))) GROUP BY rt0.c2, v0.c0, vt0.c0, rt0.c1 UNION SELECT rt0.c2, v0.c0, vt0.c0, rt0.c1 FROM rt0 INNER JOIN v0 ON ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt0.c0))) IS FALSE) CROSS JOIN vt0 ON CASE vt0.c0 COLLATE RTRIM  WHEN v0.c0 THEN v0.c0 WHEN NULL THEN (NOT (rt0.c1)) WHEN (('')-(vt0.c0)) THEN CAST(vt0.c0 AS BLOB) END WHERE (((((NULL)AND(CASE WHEN rt0.c0 THEN v0.c0 ELSE NULL END))) ISNULL)) GROUP BY rt0.c2, v0.c0, vt0.c0, rt0.c1;
SELECT rt0.c2, v0.c0, vt0.c0, rt0.c1 FROM rt0 INNER JOIN v0 ON ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt0.c0))) IS FALSE) CROSS JOIN vt0 ON CASE vt0.c0 COLLATE RTRIM  WHEN v0.c0 THEN v0.c0 WHEN NULL THEN (NOT (rt0.c1)) WHEN (('')-(vt0.c0)) THEN CAST(vt0.c0 AS BLOB) END GROUP BY rt0.c2, v0.c0, vt0.c0, rt0.c1;
SELECT rt0.c2 FROM v0, vt0 INNER JOIN rt0 ON ((rt0.c1) IS FALSE) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM v0, vt0 INNER JOIN rt0 ON ((rt0.c1) IS FALSE) GROUP BY rt0.c2 HAVING TOTAL(TOTAL(TOTAL(x'703fe70b'))) UNION ALL SELECT ALL rt0.c2 FROM v0, vt0 INNER JOIN rt0 ON ((rt0.c1) IS FALSE) GROUP BY rt0.c2 HAVING (NOT (TOTAL(TOTAL(TOTAL(x'703fe70b'))))) UNION ALL SELECT ALL rt0.c2 FROM v0, vt0 INNER JOIN rt0 ON ((rt0.c1) IS FALSE) GROUP BY rt0.c2 HAVING ((TOTAL(TOTAL(TOTAL(x'703fe70b')))) ISNULL);
SELECT * FROM v0, vt0 CROSS JOIN rt0 ON ((CASE rt0.c0  WHEN v0.c0 THEN rt0.c0 END)&(NULL));
SELECT ALL * FROM v0, vt0 CROSS JOIN rt0 ON ((CASE rt0.c0  WHEN v0.c0 THEN rt0.c0 END)&(NULL)) WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE rt0.c2 END)>(((rt0.c0) ISNULL)))) UNION ALL SELECT ALL * FROM v0, vt0 CROSS JOIN rt0 ON ((CASE rt0.c0  WHEN v0.c0 THEN rt0.c0 END)&(NULL)) WHERE ((NOT (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE rt0.c2 END)>(((rt0.c0) ISNULL)))))) UNION ALL SELECT * FROM v0 NOT INDEXED, vt0 CROSS JOIN rt0 ON ((CASE rt0.c0  WHEN v0.c0 THEN rt0.c0 END)&(NULL)) WHERE (((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE rt0.c2 END)>(((rt0.c0) ISNULL)))) ISNULL));
SELECT * FROM v0, vt0 CROSS JOIN rt0 ON ((CASE rt0.c0  WHEN v0.c0 THEN rt0.c0 END)&(NULL));
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CAST(((rt0.c2)>>(rt0.c1)) AS INTEGER)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CAST(((rt0.c2)>>(rt0.c1)) AS INTEGER)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CAST(((rt0.c2)>>(rt0.c1)) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON ((CASE WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END)>=(((((vt0.c0)OR(v0.c0)))OR(v0.c0)))) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON ((CASE WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END)>=(((((vt0.c0)OR(v0.c0)))OR(v0.c0)))) WHERE (CASE WHEN CASE v0.c0  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END THEN x'' COLLATE NOCASE WHEN v0.c0 COLLATE BINARY THEN (~ (vt0.c0)) WHEN ((v0.c0)%(vt0.c0)) THEN (((vt0.c0))>(('\n'))) WHEN (0.18384364274514786 IN ()) THEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) WHEN (v0.c0 IN ()) THEN ((vt0.c0)<>(v0.c0)) END) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON ((CASE WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END)>=(((((vt0.c0)OR(v0.c0)))OR(v0.c0)))) WHERE ((NOT (CASE WHEN CASE v0.c0  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END THEN x'' COLLATE NOCASE WHEN v0.c0 COLLATE BINARY THEN (~ (vt0.c0)) WHEN ((v0.c0)%(vt0.c0)) THEN (((vt0.c0))>(('\n'))) WHEN (0.18384364274514786 IN ()) THEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) WHEN (v0.c0 IN ()) THEN ((vt0.c0)!=(v0.c0)) END))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON ((CASE WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END)>=(((((vt0.c0)OR(v0.c0)))OR(v0.c0)))) WHERE (((CASE WHEN CASE v0.c0  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END THEN x'' COLLATE NOCASE WHEN v0.c0 COLLATE BINARY THEN (~ (vt0.c0)) WHEN ((v0.c0)%(vt0.c0)) THEN (((vt0.c0))>(('\n'))) WHEN (0.18384364274514786 IN ()) THEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) WHEN (v0.c0 IN ()) THEN ((vt0.c0)<>(v0.c0)) END) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON ((CASE WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END)>=(((((vt0.c0)OR(v0.c0)))OR(v0.c0)))) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(vt0.c0)) IS FALSE) UNION ALL SELECT ALL vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c0 HAVING (NOT (((TOTAL(vt0.c0)) IS FALSE))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((TOTAL(vt0.c0)) IS FALSE)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(vt0.c0)) IS FALSE) UNION ALL SELECT ALL vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c0 HAVING (NOT (((TOTAL(vt0.c0)) IS FALSE))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((TOTAL(vt0.c0)) IS FALSE)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT TOTAL((NOT (x'')) COLLATE BINARY) FROM v0, vt0;
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON 'Ê≤Ä' CROSS JOIN v0 ON vt0.c0;
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON 'Ê≤Ä' CROSS JOIN v0 ON vt0.c0 WHERE ((((rt0.c0)) BETWEEN ((CAST(v0.c0 AS INTEGER))) AND ((((rt0.c1)LIKE(rt0.c1)))))) UNION ALL SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON 'Ê≤Ä' CROSS JOIN v0 ON vt0.c0 WHERE ((NOT ((((rt0.c0)) BETWEEN ((CAST(v0.c0 AS INTEGER))) AND ((((rt0.c1)LIKE(rt0.c1)))))))) UNION ALL SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON 'Ê≤Ä' CROSS JOIN v0 ON vt0.c0 WHERE ((((((rt0.c0)) BETWEEN ((CAST(v0.c0 AS INTEGER))) AND ((((rt0.c1)LIKE(rt0.c1)))))) ISNULL));
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON 'Ê≤Ä' CROSS JOIN v0 ON vt0.c0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, vt0.c0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM vt0, rt0 WHERE (CASE rt0.c2  WHEN vt0.c0 THEN rt0.c0 END COLLATE RTRIM) GROUP BY rt0.c1, rt0.c0, rt0.c2, vt0.c0 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM vt0, rt0 WHERE ((NOT (CASE rt0.c2  WHEN vt0.c0 THEN rt0.c0 END COLLATE RTRIM))) GROUP BY rt0.c1, rt0.c0, rt0.c2, vt0.c0 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM vt0, rt0 WHERE (((CASE rt0.c2  WHEN vt0.c0 THEN rt0.c0 END COLLATE RTRIM) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2, vt0.c0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0, rt0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0, rt0 GROUP BY v0.c0, vt0.c0 HAVING AVG(AVG(COUNT(0x1ebf9bf))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0, vt0, rt0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (AVG(AVG(COUNT(0x1ebf9bf))))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0, vt0, rt0 GROUP BY v0.c0, vt0.c0 HAVING ((AVG(AVG(COUNT(0X1ebf9bf)))) ISNULL);
SELECT rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (x'') UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (x''))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (((x'') ISNULL));
SELECT rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 END)<(CAST(rt0.c0 AS REAL)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 END)<(CAST(rt0.c0 AS REAL)))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 END)<(CAST(rt0.c0 AS REAL)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0 WHERE (((((NULL) BETWEEN (vt0.c0) AND (v0.c0))) BETWEEN (((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (JULIANDAY(vt0.c0, vt0.c0, vt0.c0)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, vt0 WHERE ((NOT (((((NULL) BETWEEN (vt0.c0) AND (v0.c0))) BETWEEN (((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (JULIANDAY(vt0.c0, vt0.c0, vt0.c0)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, vt0 WHERE (((((((NULL) BETWEEN (vt0.c0) AND (v0.c0))) BETWEEN (((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (JULIANDAY(vt0.c0, vt0.c0, vt0.c0)))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (((rt0.c0)) BETWEEN ((COUNT(MIN(rt0.c0)))) AND ((MIN(rt0.c1)))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT ((((rt0.c0)) BETWEEN ((COUNT(MIN(rt0.c0)))) AND ((MIN(rt0.c1)))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (((((rt0.c0)) BETWEEN ((COUNT(MIN(rt0.c0)))) AND ((MIN(rt0.c1))))) ISNULL);
SELECT ALL v0.c0, rt0.c1 FROM v0, vt0 FULL OUTER JOIN rt0 ON (UNLIKELY(vt0.c0) IN (x''));
SELECT ALL v0.c0, rt0.c1 FROM v0, vt0 FULL OUTER JOIN rt0 ON (UNLIKELY(vt0.c0) IN (x'')) WHERE (((((v0.c0)AND(CASE rt0.c2  WHEN x'' THEN rt0.c0 END)))OR((rt0.c0 IN ())))) UNION ALL SELECT v0.c0, rt0.c1 FROM v0, vt0 FULL OUTER JOIN rt0 ON (UNLIKELY(vt0.c0) IN (x'')) WHERE ((NOT (((((v0.c0)AND(CASE rt0.c2  WHEN x'' THEN rt0.c0 END)))OR((rt0.c0 IN ())))))) UNION ALL SELECT ALL v0.c0, rt0.c1 FROM v0, vt0 FULL OUTER JOIN rt0 ON (UNLIKELY(vt0.c0) IN (x'')) WHERE (((((((v0.c0)AND(CASE rt0.c2  WHEN x'' THEN rt0.c0 END)))OR((rt0.c0 IN ())))) ISNULL));
SELECT ALL v0.c0, rt0.c1 FROM v0, vt0 FULL OUTER JOIN rt0 ON (UNLIKELY(vt0.c0) IN (x''));
SELECT DISTINCT rt0.c1 FROM rt0, vt0;
SELECT DISTINCT rt0.c1 FROM rt0, vt0 WHERE (((CASE WHEN '' THEN rt0.c0 WHEN 0.8064040396075679 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c2 END) NOT BETWEEN (((rt0.c1)IS(vt0.c0))) AND ((- (vt0.c0))))) UNION SELECT DISTINCT rt0.c1 FROM rt0, vt0 WHERE ((NOT (((CASE WHEN '' THEN rt0.c0 WHEN 0.8064040396075679 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c2 END) NOT BETWEEN (((rt0.c1)IS(vt0.c0))) AND ((- (vt0.c0))))))) UNION SELECT DISTINCT rt0.c1 FROM rt0, vt0 WHERE (((((CASE WHEN '' THEN rt0.c0 WHEN 0.8064040396075679 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c2 END) NOT BETWEEN (((rt0.c1)IS(vt0.c0))) AND ((- (vt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0, vt0;
SELECT ALL rt0.c1, v0.c0 FROM v0, rt0, vt0 GROUP BY rt0.c1, v0.c0;
SELECT ALL rt0.c1, v0.c0 FROM v0, rt0, vt0 WHERE (CASE WHEN (+ (rt0.c2)) THEN '' WHEN v0.c0 COLLATE RTRIM THEN CAST(rt0.c0 AS BLOB) WHEN CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c0 END THEN CAST(vt0.c0 AS NUMERIC) ELSE (NOT ('-1718335971')) END) GROUP BY rt0.c1, v0.c0 UNION SELECT rt0.c1, v0.c0 FROM v0, rt0, vt0 WHERE ((NOT (CASE WHEN (+ (rt0.c2)) THEN '' WHEN v0.c0 COLLATE RTRIM THEN CAST(rt0.c0 AS BLOB) WHEN CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c0 END THEN CAST(vt0.c0 AS NUMERIC) ELSE (NOT ('-1718335971')) END))) GROUP BY rt0.c1, v0.c0 UNION SELECT ALL rt0.c1, v0.c0 FROM v0, rt0, vt0 WHERE (((CASE WHEN (+ (rt0.c2)) THEN '' WHEN v0.c0 COLLATE RTRIM THEN CAST(rt0.c0 AS BLOB) WHEN CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c0 END THEN CAST(vt0.c0 AS NUMERIC) ELSE (NOT ('-1718335971')) END) ISNULL)) GROUP BY rt0.c1, v0.c0;
SELECT ALL rt0.c1, v0.c0 FROM v0, rt0, vt0 GROUP BY rt0.c1, v0.c0;
SELECT ALL rt0.c1, vt0.c0, rt0.c2 FROM v0, vt0, rt0 GROUP BY rt0.c1, vt0.c0, rt0.c2;
SELECT ALL rt0.c1, vt0.c0, rt0.c2 FROM v0, vt0, rt0 GROUP BY rt0.c1, vt0.c0, rt0.c2 HAVING json_insert(SUM(rt0.c2), 0xffffffffd8d190d1, ((AVG(rt0.c1))AND(rt0.c1)), IFNULL(rt0.c0, GROUP_CONCAT(v0.c0)), CASE COUNT(*)  WHEN AVG(MAX(MIN(rt0.c0))) THEN SUM(rt0.c0) END) UNION ALL SELECT rt0.c1, vt0.c0, rt0.c2 FROM v0, vt0, rt0 GROUP BY rt0.c1, vt0.c0, rt0.c2 HAVING (NOT (json_insert(SUM(rt0.c2), 0Xffffffffd8d190d1, ((AVG(rt0.c1))AND(rt0.c1)), IFNULL(rt0.c0, GROUP_CONCAT(v0.c0)), CASE COUNT(*)  WHEN AVG(MAX(MIN(rt0.c0))) THEN SUM(rt0.c0) END))) UNION ALL SELECT rt0.c1, vt0.c0, rt0.c2 FROM v0, vt0, rt0 GROUP BY rt0.c1, vt0.c0, rt0.c2 HAVING ((json_insert(SUM(rt0.c2), 0Xffffffffd8d190d1, ((AVG(rt0.c1))AND(rt0.c1)), IFNULL(rt0.c0, GROUP_CONCAT(v0.c0)), CASE COUNT(*)  WHEN AVG(MAX(MIN(rt0.c0))) THEN SUM(rt0.c0) END)) ISNULL);
SELECT ALL SUM(CAST(v0.c0 AS NUMERIC)) FROM v0, vt0;
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0)|(vt0.c0)) COLLATE RTRIM) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0)|(vt0.c0)) COLLATE RTRIM))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0)|(vt0.c0)) COLLATE RTRIM) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT rt0.c0, rt0.c2, vt0.c0, v0.c0 FROM vt0 INNER JOIN rt0 ON rt0.c2 INNER JOIN v0 ON (0.43558254278567565 IN ());
SELECT DISTINCT rt0.c0, rt0.c2, vt0.c0, v0.c0 FROM vt0 INNER JOIN rt0 ON rt0.c2 INNER JOIN v0 ON (0.43558254278567565 IN ()) WHERE (LOWER(DISTINCT rt0.c2 COLLATE BINARY)) UNION SELECT DISTINCT rt0.c0, rt0.c2, vt0.c0, v0.c0 FROM vt0 INNER JOIN rt0 ON rt0.c2 INNER JOIN v0 ON (0.43558254278567565 IN ()) WHERE ((NOT (LOWER(DISTINCT rt0.c2 COLLATE BINARY)))) UNION SELECT DISTINCT rt0.c0, rt0.c2, vt0.c0, v0.c0 FROM vt0 INNER JOIN rt0 ON rt0.c2 INNER JOIN v0 ON (0.43558254278567565 IN ()) WHERE (((LOWER(DISTINCT rt0.c2 COLLATE BINARY)) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, vt0.c0, v0.c0 FROM vt0 INNER JOIN rt0 ON rt0.c2 INNER JOIN v0 ON (0.43558254278567565 IN ());
SELECT v0.c0, rt0.c2, rt0.c1 FROM v0 CROSS JOIN rt0 ON (((((NOT (vt0.c0)))OR(CASE rt0.c0  WHEN v0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN NULL THEN vt0.c0 ELSE rt0.c2 END)))OR(NULL)) FULL OUTER JOIN vt0 ON rt0.c2 GROUP BY v0.c0, rt0.c2, rt0.c1;
SELECT ALL v0.c0, rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY v0.c0, rt0.c0, rt0.c1;
SELECT ALL v0.c0, rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY v0.c0, rt0.c0, rt0.c1 HAVING AVG(MIN(SUM(GROUP_CONCAT(COUNT(*))))) UNION ALL SELECT ALL v0.c0, rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY v0.c0, rt0.c0, rt0.c1 HAVING (NOT (AVG(MIN(SUM(GROUP_CONCAT(COUNT(*))))))) UNION ALL SELECT ALL v0.c0, rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY v0.c0, rt0.c0, rt0.c1 HAVING ((AVG(MIN(SUM(GROUP_CONCAT(COUNT(*)))))) ISNULL);
SELECT TOTAL(((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN ((v0.c0 IN ())) AND (CAST(v0.c0 AS REAL)))) FROM v0 ORDER BY (((((((((((v0.c0, v0.c0, v0.c0))>=((v0.c0, v0.c0, v0.c0))))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))AND(((v0.c0) ISNULL))))OR(((((v0.c0)OR(v0.c0)))OR(v0.c0)))))AND(((v0.c0)OR(v0.c0)))) DESC  NULLS LAST, CAST(NULL AS TEXT) COLLATE NOCASE ASC  NULLS LAST;
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0) ISNULL)) IS FALSE)) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((v0.c0) ISNULL)) IS FALSE)))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((((((v0.c0) ISNULL)) IS FALSE)) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM rt0 FULL OUTER JOIN v0 ON CASE WHEN NULL THEN rt0.c2 END COLLATE RTRIM COLLATE BINARY;
SELECT DISTINCT rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM rt0 FULL OUTER JOIN v0 ON CASE WHEN NULL THEN rt0.c2 END COLLATE RTRIM COLLATE BINARY WHERE ((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))))<((CAST(rt0.c0 AS NUMERIC))))) UNION SELECT DISTINCT rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM rt0 FULL OUTER JOIN v0 ON CASE WHEN NULL THEN rt0.c2 END COLLATE RTRIM COLLATE BINARY WHERE ((NOT ((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))))<((CAST(rt0.c0 AS NUMERIC))))))) UNION SELECT DISTINCT rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM rt0 FULL OUTER JOIN v0 ON CASE WHEN NULL THEN rt0.c2 END COLLATE RTRIM COLLATE BINARY WHERE ((((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))))<((CAST(rt0.c0 AS NUMERIC))))) ISNULL));
SELECT DISTINCT rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM rt0 FULL OUTER JOIN v0 ON CASE WHEN NULL THEN rt0.c2 END COLLATE RTRIM COLLATE BINARY;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 WHERE (((((x'')OR(TYPEOF(v0.c0))))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt0, v0 WHERE ((NOT (((((x'')OR(TYPEOF(v0.c0))))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt0, v0 WHERE (((((((x'')OR(TYPEOF(v0.c0))))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING -1481357527 UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (-1481357527)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((-1481357527) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING -1481357527 UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (-1481357527)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((-1481357527) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM rt0 FULL OUTER JOIN v0 ON (~ (LIKELIHOOD(DISTINCT rt0.c2, 0.9119851491311519)));
SELECT v0.c0 FROM rt0 FULL OUTER JOIN v0 ON (~ (LIKELIHOOD(DISTINCT rt0.c2, 0.9119851491311519))) WHERE (0X4ff1c833) UNION ALL SELECT v0.c0 FROM rt0 FULL OUTER JOIN v0 ON (~ (LIKELIHOOD(DISTINCT rt0.c2, 0.9119851491311519))) WHERE ((NOT (0X4ff1c833))) UNION ALL SELECT ALL v0.c0 FROM rt0 FULL OUTER JOIN v0 ON (~ (LIKELIHOOD(DISTINCT rt0.c2, 0.9119851491311519))) WHERE (((0X4ff1c833) ISNULL));
SELECT ALL v0.c0 FROM rt0 FULL OUTER JOIN v0 ON (~ (LIKELIHOOD(DISTINCT rt0.c2, 0.9119851491311519)));
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE (((((v0.c0)!=(vt0.c0))) ISNULL)) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT (((((v0.c0)!=(vt0.c0))) ISNULL)))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE (((((((v0.c0)!=(vt0.c0))) ISNULL)) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(GROUP_CONCAT(vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(GROUP_CONCAT(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(GROUP_CONCAT(vt0.c0))) ISNULL);
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE ((('()')GLOB(v0.c0 COLLATE RTRIM))) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0 WHERE ((NOT ((('()')GLOB(v0.c0 COLLATE RTRIM))))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE ((((('()')GLOB(v0.c0 COLLATE RTRIM))) ISNULL));
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0;
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON CAST(rt0.c2 AS BLOB) FULL OUTER JOIN v0 ON (((((NULL IN (1.544262625E9, v0.c0)))AND(0.9943338562921961)))AND(((rt0.c0)*(v0.c0))));
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON CAST(rt0.c2 AS BLOB) FULL OUTER JOIN v0 ON (((((NULL IN (1.544262625E9, v0.c0)))AND(0.9943338562921961)))AND(((rt0.c0)*(v0.c0)))) WHERE (LIKELY(rt0.c0)) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON CAST(rt0.c2 AS BLOB) FULL OUTER JOIN v0 ON (((((NULL IN (1.544262625E9, v0.c0)))AND(0.9943338562921961)))AND(((rt0.c0)*(v0.c0)))) WHERE ((NOT (LIKELY(rt0.c0)))) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON CAST(rt0.c2 AS BLOB) FULL OUTER JOIN v0 ON (((((NULL IN (1.544262625E9, v0.c0)))AND(0.9943338562921961)))AND(((rt0.c0)*(v0.c0)))) WHERE (((LIKELY(rt0.c0)) ISNULL));
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON CAST(rt0.c2 AS BLOB) FULL OUTER JOIN v0 ON (((((NULL IN (1.544262625E9, v0.c0)))AND(0.9943338562921961)))AND(((rt0.c0)*(v0.c0))));
SELECT rt0.c1 FROM rt0, v0, vt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0, v0, vt0 WHERE ((('0.49701807018119837')<(((rt0.c1)||(v0.c0))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0, v0, vt0 WHERE ((NOT ((('0.49701807018119837')<(((rt0.c1)||(v0.c0))))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0, v0, vt0 WHERE ((((('0.49701807018119837')<(((rt0.c1)||(v0.c0))))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0, v0, vt0 GROUP BY rt0.c1;
SELECT ALL v0.c0, rt0.c2, rt0.c0, vt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((rt0.c1, v0.c0, v0.c0))>((v0.c0, '291880338', rt0.c1))), ((v0.c0)<(vt0.c0)), CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN rt0.c0 THEN rt0.c1 END))<=((((rt0.c2) BETWEEN (rt0.c0) AND (v0.c0)), NULL, ((v0.c0)AND(rt0.c0))))) RIGHT OUTER JOIN v0 ON ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))>=(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) GROUP BY v0.c0, rt0.c2, rt0.c0, vt0.c0;
SELECT * FROM vt0 INNER JOIN rt0 ON ((((0.46688801580224126)>=(rt0.c1)))*((((vt0.c0))<((rt0.c2)))));
SELECT ALL * FROM vt0 INNER JOIN rt0 ON ((((0.46688801580224126)>=(rt0.c1)))*((((vt0.c0))<((rt0.c2))))) WHERE ((((vt0.c0)) BETWEEN (((NOT (rt0.c0)))) AND ((CAST(vt0.c0 AS REAL))))) UNION ALL SELECT ALL * FROM vt0 INNER JOIN rt0 ON ((((0.46688801580224126)>=(rt0.c1)))*((((vt0.c0))<((rt0.c2))))) WHERE ((NOT ((((vt0.c0)) BETWEEN (((NOT (rt0.c0)))) AND ((CAST(vt0.c0 AS REAL))))))) UNION ALL SELECT ALL * FROM vt0 INNER JOIN rt0 ON ((((0.46688801580224126)>=(rt0.c1)))*((((vt0.c0))<((rt0.c2))))) WHERE ((((((vt0.c0)) BETWEEN (((NOT (rt0.c0)))) AND ((CAST(vt0.c0 AS REAL))))) ISNULL));
SELECT * FROM vt0 INNER JOIN rt0 ON ((((0.46688801580224126)>=(rt0.c1)))*((((vt0.c0))<((rt0.c2)))));
SELECT DISTINCT rt0.c1, vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON 0.6277739519840987 FULL OUTER JOIN v0 ON ((((v0.c0)AND(rt0.c0)))OR(vt0.c0));
SELECT DISTINCT rt0.c1, vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON 0.6277739519840987 FULL OUTER JOIN v0 ON ((((v0.c0)AND(rt0.c0)))OR(vt0.c0)) WHERE (HEX((~ (rt0.c1)))) UNION SELECT DISTINCT rt0.c1, vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON 0.6277739519840987 FULL OUTER JOIN v0 ON ((((v0.c0)AND(rt0.c0)))OR(vt0.c0)) WHERE ((NOT (HEX((~ (rt0.c1)))))) UNION SELECT DISTINCT rt0.c1, vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON 0.6277739519840987 FULL OUTER JOIN v0 ON ((((v0.c0)AND(rt0.c0)))OR(vt0.c0)) WHERE (((HEX((~ (rt0.c1)))) ISNULL));
SELECT DISTINCT rt0.c1, vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON 0.6277739519840987 FULL OUTER JOIN v0 ON ((((v0.c0)AND(rt0.c0)))OR(vt0.c0));
SELECT ALL rt0.c0, v0.c0, vt0.c0, rt0.c2, rt0.c1 FROM rt0 RIGHT OUTER JOIN vt0 ON highlight(CAST(rt0.c0 AS NUMERIC), rt0.c1 COLLATE NOCASE, ((vt0.c0)&(rt0.c2)), (~ (v0.c0))) LEFT OUTER JOIN v0 ON CAST(((vt0.c0)OR(rt0.c1)) AS NUMERIC) GROUP BY rt0.c0, v0.c0, vt0.c0, rt0.c2, rt0.c1;
SELECT vt0.c0, rt0.c0, v0.c0, rt0.c2 FROM v0, vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c2)>>('usd')))AND((((rt0.c0, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c1, v0.c0, vt0.c0)) AND ((rt0.c1, v0.c0, 1.893796482E9))))) GROUP BY vt0.c0, rt0.c0, v0.c0, rt0.c2;
SELECT vt0.c0, rt0.c0, v0.c0, rt0.c2 FROM v0, vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c2)>>('usd')))AND((((rt0.c0, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c1, v0.c0, vt0.c0)) AND ((rt0.c1, v0.c0, 1.893796482E9))))) GROUP BY vt0.c0, rt0.c0, v0.c0, rt0.c2 HAVING MIN(rt0.c0) UNION ALL SELECT ALL vt0.c0, rt0.c0, v0.c0, rt0.c2 FROM v0, vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c2)>>('usd')))AND((((rt0.c0, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c1, v0.c0, vt0.c0)) AND ((rt0.c1, v0.c0, 1.893796482E9))))) GROUP BY vt0.c0, rt0.c0, v0.c0, rt0.c2 HAVING (NOT (MIN(rt0.c0))) UNION ALL SELECT vt0.c0, rt0.c0, v0.c0, rt0.c2 FROM v0, vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c2)>>('usd')))AND((((rt0.c0, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c1, v0.c0, vt0.c0)) AND ((rt0.c1, v0.c0, 1.893796482E9))))) GROUP BY vt0.c0, rt0.c0, v0.c0, rt0.c2 HAVING ((MIN(rt0.c0)) ISNULL);
SELECT vt0.c0, rt0.c0, v0.c0, rt0.c2 FROM v0, vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c2)>>('usd')))AND((((rt0.c0, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c1, v0.c0, vt0.c0)) AND ((rt0.c1, v0.c0, 1.893796482E9))))) GROUP BY vt0.c0, rt0.c0, v0.c0, rt0.c2;
SELECT vt0.c0, rt0.c0, v0.c0, rt0.c2 FROM v0, vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c2)>>('usd')))AND((((rt0.c0, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c1, v0.c0, vt0.c0)) AND ((rt0.c1, v0.c0, 1.893796482E9))))) GROUP BY vt0.c0, rt0.c0, v0.c0, rt0.c2 HAVING MIN(rt0.c0) UNION ALL SELECT ALL vt0.c0, rt0.c0, v0.c0, rt0.c2 FROM v0, vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c2)>>('usd')))AND((((rt0.c0, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c1, v0.c0, vt0.c0)) AND ((rt0.c1, v0.c0, 1.893796482E9))))) GROUP BY vt0.c0, rt0.c0, v0.c0, rt0.c2 HAVING (NOT (MIN(rt0.c0))) UNION ALL SELECT vt0.c0, rt0.c0, v0.c0, rt0.c2 FROM v0, vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c2)>>('usd')))AND((((rt0.c0, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c1, v0.c0, vt0.c0)) AND ((rt0.c1, v0.c0, 1.893796482E9))))) GROUP BY vt0.c0, rt0.c0, v0.c0, rt0.c2 HAVING ((MIN(rt0.c0)) ISNULL);
SELECT vt0.c0, rt0.c0, v0.c0, rt0.c2 FROM v0, vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c2)>>('usd')))AND((((rt0.c0, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c1, v0.c0, vt0.c0)) AND ((rt0.c1, v0.c0, 1.893796482E9))))) GROUP BY vt0.c0, rt0.c0, v0.c0, rt0.c2;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE ('982153337') UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ('982153337'))) UNION ALL SELECT * FROM vt0 WHERE ((('982153337') ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))<>('1196256580'))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))<>('1196256580'))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))<>('1196256580'))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE (((((((((CAST(rt0.c0 AS REAL))AND(((rt0.c0)=(rt0.c1)))))OR(LIKELIHOOD(DISTINCT rt0.c1, 0.7822490152314747))))OR((((NULL)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))))OR(((((rt0.c0)AND(-70039659)))OR(rt0.c0))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (((((((((CAST(rt0.c0 AS REAL))AND(((rt0.c0)==(rt0.c1)))))OR(LIKELIHOOD(DISTINCT rt0.c1, 0.7822490152314747))))OR((((NULL)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))))OR(((((rt0.c0)AND(-70039659)))OR(rt0.c0))))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE (((((((((((CAST(rt0.c0 AS REAL))AND(((rt0.c0)==(rt0.c1)))))OR(LIKELIHOOD(DISTINCT rt0.c1, 0.7822490152314747))))OR((((NULL)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))))OR(((((rt0.c0)AND(-70039659)))OR(rt0.c0))))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c2, v0.c0, vt0.c0, rt0.c1, rt0.c0 FROM v0, rt0, vt0 GROUP BY rt0.c2, v0.c0, vt0.c0, rt0.c1, rt0.c0;
SELECT rt0.c2, v0.c0, vt0.c0, rt0.c1, rt0.c0 FROM v0, rt0, vt0 GROUP BY rt0.c2, v0.c0, vt0.c0, rt0.c1, rt0.c0 HAVING SUM('-2063593315' COLLATE BINARY) UNION ALL SELECT rt0.c2, v0.c0, vt0.c0, rt0.c1, rt0.c0 FROM v0, rt0, vt0 GROUP BY rt0.c2, v0.c0, vt0.c0, rt0.c1, rt0.c0 HAVING (NOT (SUM('-2063593315' COLLATE BINARY))) UNION ALL SELECT ALL rt0.c2, v0.c0, vt0.c0, rt0.c1, rt0.c0 FROM v0, rt0, vt0 GROUP BY rt0.c2, v0.c0, vt0.c0, rt0.c1, rt0.c0 HAVING ((SUM('-2063593315' COLLATE BINARY)) ISNULL);
SELECT ALL rt0.c2, v0.c0, vt0.c0, rt0.c1, rt0.c0 FROM v0, rt0, vt0 GROUP BY rt0.c2, v0.c0, vt0.c0, rt0.c1, rt0.c0;
SELECT rt0.c2, v0.c0, vt0.c0, rt0.c1, rt0.c0 FROM v0, rt0, vt0 GROUP BY rt0.c2, v0.c0, vt0.c0, rt0.c1, rt0.c0 HAVING SUM('-2063593315' COLLATE BINARY) UNION ALL SELECT rt0.c2, v0.c0, vt0.c0, rt0.c1, rt0.c0 FROM v0, rt0, vt0 GROUP BY rt0.c2, v0.c0, vt0.c0, rt0.c1, rt0.c0 HAVING (NOT (SUM('-2063593315' COLLATE BINARY))) UNION ALL SELECT ALL rt0.c2, v0.c0, vt0.c0, rt0.c1, rt0.c0 FROM v0, rt0, vt0 GROUP BY rt0.c2, v0.c0, vt0.c0, rt0.c1, rt0.c0 HAVING ((SUM('-2063593315' COLLATE BINARY)) ISNULL);
SELECT ALL rt0.c2, v0.c0, vt0.c0, rt0.c1, rt0.c0 FROM v0, rt0, vt0 GROUP BY rt0.c2, v0.c0, vt0.c0, rt0.c1, rt0.c0;
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (((((((v0.c0)OR(v0.c0)))OR(v0.c0)))&(((((((((x'')OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((((v0.c0)OR(v0.c0)))OR(v0.c0)))&(((((((((x'')OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0))))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))&(((((((((x'')OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0))))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0, vt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0, vt0 WHERE ((((- (rt0.c2))) ISNULL)) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0, vt0 WHERE ((NOT ((((- (rt0.c2))) ISNULL)))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0, vt0 WHERE ((((((- (rt0.c2))) ISNULL)) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0, vt0;
SELECT ALL rt0.c2 FROM vt0 LEFT OUTER JOIN rt0 ON CAST(v0.c0 COLLATE BINARY AS REAL) FULL OUTER JOIN v0 ON ((rt0.c0) NOT BETWEEN (((((rt0.c1)AND(v0.c0)))OR(rt0.c0))) AND (vt0.c0)) GROUP BY rt0.c2;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING MIN(rt0.c2) COLLATE RTRIM UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (MIN(rt0.c2) COLLATE RTRIM)) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((MIN(rt0.c2) COLLATE RTRIM) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING MIN(rt0.c2) COLLATE RTRIM UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (MIN(rt0.c2) COLLATE RTRIM)) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((MIN(rt0.c2) COLLATE RTRIM) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT vt0.c0, rt0.c2, rt0.c1 FROM vt0 RIGHT OUTER JOIN rt0 ON ((CASE WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c0 END) BETWEEN (((vt0.c0)*(vt0.c0))) AND ((~ (vt0.c0))));
SELECT vt0.c0, rt0.c2, rt0.c1 FROM vt0 RIGHT OUTER JOIN rt0 ON ((CASE WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c0 END) BETWEEN (((vt0.c0)*(vt0.c0))) AND ((~ (vt0.c0)))) WHERE (((((((0.24361141296546618)IS(rt0.c1)))AND((((vt0.c0)) NOT BETWEEN ((x'')) AND ((rt0.c0))))))AND(CAST(rt0.c2 AS BLOB)))) UNION ALL SELECT ALL vt0.c0, rt0.c2, rt0.c1 FROM vt0 RIGHT OUTER JOIN rt0 ON ((CASE WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c0 END) BETWEEN (((vt0.c0)*(vt0.c0))) AND ((~ (vt0.c0)))) WHERE ((NOT (((((((0.24361141296546618)IS(rt0.c1)))AND((((vt0.c0)) NOT BETWEEN ((x'')) AND ((rt0.c0))))))AND(CAST(rt0.c2 AS BLOB)))))) UNION ALL SELECT vt0.c0, rt0.c2, rt0.c1 FROM vt0 RIGHT OUTER JOIN rt0 ON ((CASE WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c0 END) BETWEEN (((vt0.c0)*(vt0.c0))) AND ((~ (vt0.c0)))) WHERE (((((((((0.24361141296546618)IS(rt0.c1)))AND((((vt0.c0)) NOT BETWEEN ((x'')) AND ((rt0.c0))))))AND(CAST(rt0.c2 AS BLOB)))) ISNULL));
SELECT vt0.c0, rt0.c2, rt0.c1 FROM vt0 RIGHT OUTER JOIN rt0 ON ((CASE WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c0 END) BETWEEN (((vt0.c0)*(vt0.c0))) AND ((~ (vt0.c0))));
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (0.22189508112633005) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (0.22189508112633005))) UNION SELECT DISTINCT * FROM rt0 WHERE (((0.22189508112633005) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 WHERE (MIN(vt0.c0, v0.c0, vt0.c0, v0.c0) COLLATE NOCASE) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt0, v0 WHERE ((NOT (MIN(vt0.c0, v0.c0, vt0.c0, v0.c0) COLLATE NOCASE))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt0, v0 WHERE (((MIN(vt0.c0, v0.c0, vt0.c0, v0.c0) COLLATE NOCASE) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING MIN(MIN(v0.c0)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MIN(MIN(v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MIN(MIN(v0.c0))) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0) IS TRUE)) BETWEEN (v0.c0) AND (v0.c0))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (((((v0.c0) IS TRUE)) BETWEEN (v0.c0) AND (v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((((((v0.c0) IS TRUE)) BETWEEN (v0.c0) AND (v0.c0))) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0;
SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0 WHERE (CASE ((NULL) BETWEEN (v0.c0) AND (NULL))  WHEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) THEN CAST(v0.c0 AS BLOB) ELSE (((vt0.c0, vt0.c0, v0.c0)) BETWEEN ((v0.c0, vt0.c0, v0.c0)) AND ((v0.c0, vt0.c0, vt0.c0))) END) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0 WHERE ((NOT (CASE ((NULL) BETWEEN (v0.c0) AND (NULL))  WHEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) THEN CAST(v0.c0 AS BLOB) ELSE (((vt0.c0, vt0.c0, v0.c0)) BETWEEN ((v0.c0, vt0.c0, v0.c0)) AND ((v0.c0, vt0.c0, vt0.c0))) END))) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0 WHERE (((CASE ((NULL) BETWEEN (v0.c0) AND (NULL))  WHEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) THEN CAST(v0.c0 AS BLOB) ELSE (((vt0.c0, vt0.c0, v0.c0)) BETWEEN ((v0.c0, vt0.c0, v0.c0)) AND ((v0.c0, vt0.c0, vt0.c0))) END) ISNULL));
SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0;
SELECT rt0.c2, vt0.c0, rt0.c1 FROM rt0, vt0 NOT INDEXED GROUP BY rt0.c2, vt0.c0, rt0.c1;
SELECT rt0.c2, vt0.c0, rt0.c1 FROM rt0, vt0 WHERE ((((rt0.c0, vt0.c0, rt0.c1, rt0.c1, rt0.c0)) BETWEEN (((NOT (rt0.c1)), (- (rt0.c1)), (vt0.c0 IN ()), (rt0.c1 IN (rt0.c2)), CAST(rt0.c1 AS TEXT))) AND ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)), COALESCE(DISTINCT rt0.c0, vt0.c0), ((rt0.c2)<(1327188199)), 0.2084191120880714, (- (vt0.c0)))))) GROUP BY rt0.c2, vt0.c0, rt0.c1 UNION SELECT rt0.c2, vt0.c0, rt0.c1 FROM rt0, vt0 WHERE ((NOT ((((rt0.c0, vt0.c0, rt0.c1, rt0.c1, rt0.c0)) BETWEEN (((NOT (rt0.c1)), (- (rt0.c1)), (vt0.c0 IN ()), (rt0.c1 IN (rt0.c2)), CAST(rt0.c1 AS TEXT))) AND ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)), COALESCE(DISTINCT rt0.c0, vt0.c0), ((rt0.c2)<(1327188199)), 0.2084191120880714, (- (vt0.c0)))))))) GROUP BY rt0.c2, vt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, vt0.c0, rt0.c1 FROM rt0, vt0 WHERE ((((((rt0.c0, vt0.c0, rt0.c1, rt0.c1, rt0.c0)) BETWEEN (((NOT (rt0.c1)), (- (rt0.c1)), (vt0.c0 IN ()), (rt0.c1 IN (rt0.c2)), CAST(rt0.c1 AS TEXT))) AND ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)), COALESCE(DISTINCT rt0.c0, vt0.c0), ((rt0.c2)<(1327188199)), 0.2084191120880714, (- (vt0.c0)))))) ISNULL)) GROUP BY rt0.c2, vt0.c0, rt0.c1;
SELECT rt0.c2, vt0.c0, rt0.c1 FROM rt0, vt0 NOT INDEXED GROUP BY rt0.c2, vt0.c0, rt0.c1;
SELECT vt0.c0, rt0.c1, rt0.c0 FROM v0, vt0, rt0 GROUP BY vt0.c0, rt0.c1, rt0.c0;
SELECT ALL vt0.c0, rt0.c1, rt0.c0 FROM v0, vt0, rt0 GROUP BY vt0.c0, rt0.c1, rt0.c0 HAVING json_valid((((TOTAL(MAX(rt0.c2)))) BETWEEN ((rt0.c2)) AND ((rt0.c1)))) UNION ALL SELECT vt0.c0, rt0.c1, rt0.c0 FROM v0, vt0, rt0 GROUP BY vt0.c0, rt0.c1, rt0.c0 HAVING (NOT (json_valid((((TOTAL(MAX(rt0.c2)))) BETWEEN ((rt0.c2)) AND ((rt0.c1)))))) UNION ALL SELECT vt0.c0, rt0.c1, rt0.c0 FROM v0, vt0, rt0 GROUP BY vt0.c0, rt0.c1, rt0.c0 HAVING ((json_valid((((TOTAL(MAX(rt0.c2)))) BETWEEN ((rt0.c2)) AND ((rt0.c1))))) ISNULL);
SELECT SUM(((v0.c0)LIKE(rt0.c0)) COLLATE RTRIM) FROM vt0, rt0, v0;
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE ('-756344136') UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT ('-756344136'))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((('-756344136') ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE (CASE WHEN (((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((vt0.c0)IS NOT(vt0.c0)) ELSE (((v0.c0, vt0.c0, v0.c0)) BETWEEN ((vt0.c0, ',Uu(', v0.c0)) AND ((v0.c0, '179467715', vt0.c0))) END) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT (CASE WHEN (((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((vt0.c0)IS NOT(vt0.c0)) ELSE (((v0.c0, vt0.c0, v0.c0)) BETWEEN ((vt0.c0, ',Uu(', v0.c0)) AND ((v0.c0, '179467715', vt0.c0))) END))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE (((CASE WHEN (((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((vt0.c0)IS NOT(vt0.c0)) ELSE (((v0.c0, vt0.c0, v0.c0)) BETWEEN ((vt0.c0, ',Uu(', v0.c0)) AND ((v0.c0, '179467715', vt0.c0))) END) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT v0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c2;
SELECT v0.c0, rt0.c2 FROM rt0, v0 WHERE (((rt0.c0) BETWEEN ((rt0.c0 IN ())) AND (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))))) GROUP BY v0.c0, rt0.c2 UNION SELECT ALL v0.c0, rt0.c2 FROM rt0, v0 WHERE ((NOT (((rt0.c0) BETWEEN ((rt0.c0 IN ())) AND (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))))))) GROUP BY v0.c0, rt0.c2 UNION SELECT v0.c0, rt0.c2 FROM rt0, v0 WHERE (((((rt0.c0) BETWEEN ((rt0.c0 IN ())) AND (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))))) ISNULL)) GROUP BY v0.c0, rt0.c2;
SELECT v0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c2;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING ((x'') IS FALSE) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (((x'') IS FALSE))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING ((((x'') IS FALSE)) ISNULL);
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING ((x'') IS FALSE) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (((x'') IS FALSE))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING ((((x'') IS FALSE)) ISNULL);
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT * FROM vt0, v0;
SELECT * FROM vt0, v0 WHERE (((CAST(vt0.c0 AS BLOB))<=(x'19b7'))) UNION ALL SELECT ALL * FROM vt0, v0 WHERE ((NOT (((CAST(vt0.c0 AS BLOB))<=(x'19b7'))))) UNION ALL SELECT * FROM vt0, v0 WHERE (((((CAST(vt0.c0 AS BLOB))<=(x'19b7'))) ISNULL));
SELECT * FROM vt0, v0;
SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0;
SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0 WHERE (((CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END) NOT BETWEEN ((~ (vt0.c0))) AND (CAST(0X1d3da5c6 AS NUMERIC)))) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0 WHERE ((NOT (((CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END) NOT BETWEEN ((~ (vt0.c0))) AND (CAST(0X1d3da5c6 AS NUMERIC)))))) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0 WHERE (((((CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END) NOT BETWEEN ((~ (vt0.c0))) AND (CAST(0x1d3da5c6 AS NUMERIC)))) ISNULL));
SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0;
SELECT ALL rt0.c0, rt0.c2 FROM vt0 CROSS JOIN rt0 ON ((rt0.c2 COLLATE BINARY)*(((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.002429875285992922)))) GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM vt0 CROSS JOIN rt0 ON ((rt0.c2 COLLATE BINARY)*(((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.002429875285992922)))) WHERE ((((((rt0.c2, rt0.c1, rt0.c2))!=((rt0.c0, rt0.c0, rt0.c2)))) IS FALSE)) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM vt0 CROSS JOIN rt0 ON ((rt0.c2 COLLATE BINARY)*(((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.002429875285992922)))) WHERE ((NOT ((((((rt0.c2, rt0.c1, rt0.c2))<>((rt0.c0, rt0.c0, rt0.c2)))) IS FALSE)))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM vt0 CROSS JOIN rt0 ON ((rt0.c2 COLLATE BINARY)*(((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.002429875285992922)))) WHERE ((((((((rt0.c2, rt0.c1, rt0.c2))<>((rt0.c0, rt0.c0, rt0.c2)))) IS FALSE)) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM vt0 CROSS JOIN rt0 ON ((rt0.c2 COLLATE BINARY)*(((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.002429875285992922)))) GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c1, vt0.c0 FROM rt0 INNER JOIN vt0 ON x'' GROUP BY rt0.c1, vt0.c0;
SELECT ALL rt0.c1, vt0.c0 FROM rt0 INNER JOIN vt0 ON x'' GROUP BY rt0.c1, vt0.c0 HAVING SUM(SUM(MIN(SUM(vt0.c0)))) UNION ALL SELECT rt0.c1, vt0.c0 FROM rt0 INNER JOIN vt0 ON x'' GROUP BY rt0.c1, vt0.c0 HAVING (NOT (SUM(SUM(MIN(SUM(vt0.c0)))))) UNION ALL SELECT ALL rt0.c1, vt0.c0 FROM rt0 INNER JOIN vt0 ON x'' GROUP BY rt0.c1, vt0.c0 HAVING ((SUM(SUM(MIN(SUM(vt0.c0))))) ISNULL);
SELECT ALL SUM((((rt0.c1, rt0.c1, rt0.c2))<=((rt0.c1, rt0.c0, rt0.c1))) COLLATE NOCASE) FROM vt0, v0, rt0 ORDER BY (- (((x'acc3')-(rt0.c2))));
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0, v0 NOT INDEXED, vt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0, v0, vt0 WHERE (vt0.c0) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0, v0, vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0, v0, vt0 WHERE (((vt0.c0) ISNULL));
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0, v0 NOT INDEXED, vt0;
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE (UNLIKELY(v0.c0 COLLATE NOCASE)) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT (UNLIKELY(v0.c0 COLLATE NOCASE)))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE (((UNLIKELY(v0.c0 COLLATE NOCASE)) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0 WHERE ((~ ((v0.c0 IN ())))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, vt0 WHERE ((NOT ((~ ((v0.c0 IN ())))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, vt0 WHERE ((((~ ((v0.c0 IN ())))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 NOT INDEXED GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 NOT INDEXED GROUP BY vt0.c0, v0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0, v0.c0 FROM v0, vt0 NOT INDEXED GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 NOT INDEXED GROUP BY vt0.c0, v0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0, v0.c0 FROM v0, vt0 NOT INDEXED GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0 FROM vt0, rt0;
SELECT vt0.c0 FROM vt0, rt0 WHERE ((rt0.c2 COLLATE BINARY IN ())) UNION ALL SELECT ALL vt0.c0 FROM vt0, rt0 WHERE ((NOT ((rt0.c2 COLLATE BINARY IN ())))) UNION ALL SELECT ALL vt0.c0 FROM vt0, rt0 WHERE ((((rt0.c2 COLLATE BINARY IN ())) ISNULL));
SELECT vt0.c0 FROM vt0, rt0;
SELECT DISTINCT v0.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0, v0;
SELECT DISTINCT v0.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0, v0 WHERE ((((rt0.c0) IS TRUE) IN ())) UNION SELECT DISTINCT v0.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0, v0 WHERE ((NOT ((((rt0.c0) IS TRUE) IN ())))) UNION SELECT DISTINCT v0.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0, v0 WHERE ((((((rt0.c0) IS TRUE) IN ())) ISNULL));
SELECT DISTINCT v0.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0, v0;
SELECT ALL v0.c0 FROM v0, rt0, vt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, rt0, vt0 WHERE (((((v0.c0)<<(rt0.c0))) IS TRUE)) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, rt0, vt0 WHERE ((NOT (((((v0.c0)<<(rt0.c0))) IS TRUE)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, rt0, vt0 WHERE (((((((v0.c0)<<(rt0.c0))) IS TRUE)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, rt0, vt0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING AVG(SUM(v0.c0)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (AVG(SUM(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((AVG(SUM(v0.c0))) ISNULL);
SELECT ALL * FROM vt0, v0, rt0;
SELECT ALL * FROM vt0, v0, rt0 WHERE (((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c1)) COLLATE RTRIM) UNION ALL SELECT * FROM vt0, v0, rt0 WHERE ((NOT (((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c1)) COLLATE RTRIM))) UNION ALL SELECT * FROM vt0, v0 NOT INDEXED, rt0 WHERE (((((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c1)) COLLATE RTRIM) ISNULL));
SELECT ALL * FROM vt0, v0, rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((((v0.c0)LIKE(v0.c0)))&(CAST(v0.c0 AS REAL)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((((v0.c0)LIKE(v0.c0)))&(CAST(v0.c0 AS REAL)))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((v0.c0)LIKE(v0.c0)))&(CAST(v0.c0 AS REAL)))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) AND (((vt0.c0 IN (vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) AND (((vt0.c0 IN (vt0.c0)))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) AND (((vt0.c0 IN (vt0.c0)))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING TOTAL(COUNT(*)) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (TOTAL(COUNT(*)))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((TOTAL(COUNT(*))) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (CAST((NOT (v0.c0)) AS TEXT)) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (CAST((NOT (v0.c0)) AS TEXT)))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((CAST((NOT (v0.c0)) AS TEXT)) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((x'728a')-(((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((x'728a')-(((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0))))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((x'728a')-(((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (((((((((CASE '1740837702'  WHEN rt0.c1 THEN rt0.c1 END)AND(LENGTH(rt0.c0))))AND(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))OR((((rt0.c2, rt0.c0, rt0.c2)) BETWEEN ((rt0.c0, rt0.c1, rt0.c0)) AND ((x'', rt0.c0, rt0.c1))))))AND((+ (x''))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((((((((CASE '1740837702'  WHEN rt0.c1 THEN rt0.c1 END)AND(LENGTH(rt0.c0))))AND(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))OR((((rt0.c2, rt0.c0, rt0.c2)) BETWEEN ((rt0.c0, rt0.c1, rt0.c0)) AND ((x'', rt0.c0, rt0.c1))))))AND((+ (x''))))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((((((((((CASE '1740837702'  WHEN rt0.c1 THEN rt0.c1 END)AND(LENGTH(rt0.c0))))AND(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))OR((((rt0.c2, rt0.c0, rt0.c2)) BETWEEN ((rt0.c0, rt0.c1, rt0.c0)) AND ((x'', rt0.c0, rt0.c1))))))AND((+ (x''))))) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((MIN(v0.c0))OR(MAX(TOTAL(v0.c0)))))AND(0.9527275490478364)) IN ()) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((((((MIN(v0.c0))OR(MAX(TOTAL(v0.c0)))))AND(0.9527275490478364)) IN ()))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((((MIN(v0.c0))OR(MAX(TOTAL(v0.c0)))))AND(0.9527275490478364)) IN ())) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((MIN(v0.c0))OR(MAX(TOTAL(v0.c0)))))AND(0.9527275490478364)) IN ()) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((((((MIN(v0.c0))OR(MAX(TOTAL(v0.c0)))))AND(0.9527275490478364)) IN ()))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((((MIN(v0.c0))OR(MAX(TOTAL(v0.c0)))))AND(0.9527275490478364)) IN ())) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE ((((v0.c0))<=((v0.c0))) COLLATE NOCASE) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((v0.c0))<=((v0.c0))) COLLATE NOCASE))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((((((v0.c0))<=((v0.c0))) COLLATE NOCASE) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE ((((-4.50562031E8 IN ())) NOT BETWEEN (((v0.c0) IS TRUE)) AND ((vt0.c0 IN ())))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT ((((-4.50562031E8 IN ())) NOT BETWEEN (((v0.c0) IS TRUE)) AND ((vt0.c0 IN ())))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((((((-4.50562031E8 IN ())) NOT BETWEEN (((v0.c0) IS TRUE)) AND ((vt0.c0 IN ())))) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT rt0.c2 FROM rt0, v0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, v0 WHERE ((+ (NULL))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0, v0 WHERE ((NOT ((+ (NULL))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0, v0 WHERE ((((+ (NULL))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, v0 GROUP BY rt0.c2;
SELECT ALL rt0.c1, rt0.c0 FROM v0, rt0, vt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM v0, rt0, vt0 GROUP BY rt0.c1, rt0.c0 HAVING ((((((((((GROUP_CONCAT(rt0.c2))/(TOTAL('-340946519'))))AND(GROUP_CONCAT(SUM(COUNT(vt0.c0))))))AND(((rt0.c2) ISNULL))))AND(COUNT(*))))AND(MAX(AVG(rt0.c1)))) UNION ALL SELECT rt0.c1, rt0.c0 FROM v0, rt0, vt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (((((((((((GROUP_CONCAT(rt0.c2))/(TOTAL('-340946519'))))AND(GROUP_CONCAT(SUM(COUNT(vt0.c0))))))AND(((rt0.c2) ISNULL))))AND(COUNT(*))))AND(MAX(AVG(rt0.c1)))))) UNION ALL SELECT rt0.c1, rt0.c0 FROM v0, rt0, vt0 GROUP BY rt0.c1, rt0.c0 HAVING ((((((((((((GROUP_CONCAT(rt0.c2))/(TOTAL('-340946519'))))AND(GROUP_CONCAT(SUM(COUNT(vt0.c0))))))AND(((rt0.c2) ISNULL))))AND(COUNT(*))))AND(MAX(AVG(rt0.c1))))) ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt0 WHERE (LAST_INSERT_ROWID()) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt0 WHERE ((NOT (LAST_INSERT_ROWID()))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt0 WHERE (((LAST_INSERT_ROWID()) ISNULL));
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt0;
SELECT DISTINCT vt0.c0 FROM rt0 INNER JOIN vt0 ON (((((((rt0.c1))<((rt0.c2))))OR(rt0.c1 COLLATE BINARY)))OR(((rt0.c0)LIKE(rt0.c1))));
SELECT DISTINCT vt0.c0 FROM rt0 INNER JOIN vt0 ON (((((((rt0.c1))<((rt0.c2))))OR(rt0.c1 COLLATE BINARY)))OR(((rt0.c0)LIKE(rt0.c1)))) WHERE (rt0.c0) UNION SELECT DISTINCT vt0.c0 FROM rt0 INNER JOIN vt0 ON (((((((rt0.c1))<((rt0.c2))))OR(rt0.c1 COLLATE BINARY)))OR(((rt0.c0)LIKE(rt0.c1)))) WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT vt0.c0 FROM rt0 INNER JOIN vt0 ON (((((((rt0.c1))<((rt0.c2))))OR(rt0.c1 COLLATE BINARY)))OR(((rt0.c0)LIKE(rt0.c1)))) WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT vt0.c0 FROM rt0 INNER JOIN vt0 ON (((((((rt0.c1))<((rt0.c2))))OR(rt0.c1 COLLATE BINARY)))OR(((rt0.c0)LIKE(rt0.c1))));
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((v0.c0) NOT NULL) COLLATE BINARY) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((v0.c0) NOT NULL) COLLATE BINARY))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0) NOT NULL) COLLATE BINARY) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING SUM((- (SUM(MAX(rt0.c2))))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (SUM((- (SUM(MAX(rt0.c2))))))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((SUM((- (SUM(MAX(rt0.c2)))))) ISNULL);
SELECT ALL * FROM rt0 NATURAL JOIN v0;
SELECT ALL * FROM rt0 NATURAL JOIN v0 WHERE (((CAST(rt0.c1 AS REAL))!=(rt0.c2))) UNION ALL SELECT ALL * FROM rt0 NATURAL JOIN v0 WHERE ((NOT (((CAST(rt0.c1 AS REAL))<>(rt0.c2))))) UNION ALL SELECT ALL * FROM rt0 NATURAL JOIN v0 WHERE (((((CAST(rt0.c1 AS REAL))!=(rt0.c2))) ISNULL));
SELECT ALL * FROM rt0 NATURAL JOIN v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (CASE WHEN (v0.c0 IN ()) THEN '-315546196' WHEN ((0.1862681393020137) IS TRUE) THEN ((0X59bd44f7)GLOB(v0.c0)) WHEN (('-484581487') BETWEEN (v0.c0) AND (v0.c0)) THEN (v0.c0 IN (v0.c0)) END) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (CASE WHEN (v0.c0 IN ()) THEN '-315546196' WHEN ((0.1862681393020137) IS TRUE) THEN ((0X59bd44f7)GLOB(v0.c0)) WHEN (('-484581487') BETWEEN (v0.c0) AND (v0.c0)) THEN (v0.c0 IN (v0.c0)) END))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((CASE WHEN (v0.c0 IN ()) THEN '-315546196' WHEN ((0.1862681393020137) IS TRUE) THEN ((0x59bd44f7)GLOB(v0.c0)) WHEN (('-484581487') BETWEEN (v0.c0) AND (v0.c0)) THEN (v0.c0 IN (v0.c0)) END) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (HEX(CAST(v0.c0 AS TEXT))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (HEX(CAST(v0.c0 AS TEXT))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((HEX(CAST(v0.c0 AS TEXT))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c0;
SELECT rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c0 HAVING MIN(CASE WHEN COUNT(MIN(COUNT(''))) THEN GROUP_CONCAT(rt0.c0) END) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c0 HAVING (NOT (MIN(CASE WHEN COUNT(MIN(COUNT(''))) THEN GROUP_CONCAT(rt0.c0) END))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c0 HAVING ((MIN(CASE WHEN COUNT(MIN(COUNT(''))) THEN GROUP_CONCAT(rt0.c0) END)) ISNULL);
SELECT ALL rt0.c0, rt0.c1, v0.c0, rt0.c2, vt0.c0 FROM rt0 FULL OUTER JOIN v0 ON 0Xffffffffa13b8a74 LEFT OUTER JOIN vt0 ON rt0.c2;
SELECT rt0.c0, rt0.c1, v0.c0, rt0.c2, vt0.c0 FROM rt0 FULL OUTER JOIN v0 ON 0xffffffffa13b8a74 LEFT OUTER JOIN vt0 ON rt0.c2 WHERE (((((x'47f2') BETWEEN (rt0.c2) AND (NULL))) ISNULL)) UNION ALL SELECT rt0.c0, rt0.c1, v0.c0, rt0.c2, vt0.c0 FROM rt0 FULL OUTER JOIN v0 ON 0xffffffffa13b8a74 LEFT OUTER JOIN vt0 ON rt0.c2 WHERE ((NOT (((((x'47f2') BETWEEN (rt0.c2) AND (NULL))) ISNULL)))) UNION ALL SELECT ALL rt0.c0, rt0.c1, v0.c0, rt0.c2, vt0.c0 FROM rt0 FULL OUTER JOIN v0 ON 0xffffffffa13b8a74 LEFT OUTER JOIN vt0 ON rt0.c2 WHERE (((((((x'47f2') BETWEEN (rt0.c2) AND (NULL))) ISNULL)) ISNULL));
SELECT ALL rt0.c0, rt0.c1, v0.c0, rt0.c2, vt0.c0 FROM rt0 FULL OUTER JOIN v0 ON 0Xffffffffa13b8a74 LEFT OUTER JOIN vt0 ON rt0.c2;
SELECT DISTINCT rt0.c0 FROM v0 FULL OUTER JOIN rt0 ON -1876666045 LEFT OUTER JOIN vt0 ON v0.c0;
SELECT DISTINCT rt0.c0 FROM v0 FULL OUTER JOIN rt0 ON -1876666045 LEFT OUTER JOIN vt0 ON v0.c0 WHERE ((((- (vt0.c0)))*(((rt0.c1) IS TRUE)))) UNION SELECT DISTINCT rt0.c0 FROM v0 FULL OUTER JOIN rt0 ON -1876666045 LEFT OUTER JOIN vt0 ON v0.c0 WHERE ((NOT ((((- (vt0.c0)))*(((rt0.c1) IS TRUE)))))) UNION SELECT DISTINCT rt0.c0 FROM v0 FULL OUTER JOIN rt0 ON -1876666045 LEFT OUTER JOIN vt0 ON v0.c0 WHERE ((((((- (vt0.c0)))*(((rt0.c1) IS TRUE)))) ISNULL));
SELECT DISTINCT rt0.c0 FROM v0 FULL OUTER JOIN rt0 ON -1876666045 LEFT OUTER JOIN vt0 ON v0.c0;
SELECT ALL rt0.c1 FROM rt0, vt0, v0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0, vt0, v0 WHERE ((CAST(rt0.c1 AS INTEGER) IN ())) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0, vt0 NOT INDEXED, v0 WHERE ((NOT ((CAST(rt0.c1 AS INTEGER) IN ())))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0, vt0, v0 WHERE ((((CAST(rt0.c1 AS INTEGER) IN ())) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, vt0, v0 GROUP BY rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1, v0.c0 FROM v0, rt0, vt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, v0.c0;
SELECT rt0.c2, rt0.c0, rt0.c1, v0.c0 FROM v0, rt0, vt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, v0.c0 HAVING GROUP_CONCAT(MAX(GROUP_CONCAT(v0.c0))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1, v0.c0 FROM v0, rt0, vt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, v0.c0 HAVING (NOT (GROUP_CONCAT(MAX(GROUP_CONCAT(v0.c0))))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1, v0.c0 FROM v0, rt0, vt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, v0.c0 HAVING ((GROUP_CONCAT(MAX(GROUP_CONCAT(v0.c0)))) ISNULL);
SELECT rt0.c1, v0.c0, rt0.c0, rt0.c2 FROM v0, rt0, vt0;
SELECT ALL rt0.c1, v0.c0, rt0.c0, rt0.c2 FROM v0 NOT INDEXED, rt0, vt0 WHERE ((((v0.c0, ((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c1)), CASE WHEN rt0.c0 THEN v0.c0 END))=((((v0.c0)LIKE(rt0.c1)), (v0.c0 IN ()), CAST(rt0.c1 AS BLOB))))) UNION ALL SELECT ALL rt0.c1, v0.c0, rt0.c0, rt0.c2 FROM v0, rt0, vt0 WHERE ((NOT ((((v0.c0, ((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c1)), CASE WHEN rt0.c0 THEN v0.c0 END))==((((v0.c0)LIKE(rt0.c1)), (v0.c0 IN ()), CAST(rt0.c1 AS BLOB))))))) UNION ALL SELECT ALL rt0.c1, v0.c0, rt0.c0, rt0.c2 FROM v0, rt0, vt0 WHERE ((((((v0.c0, ((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c1)), CASE WHEN rt0.c0 THEN v0.c0 END))==((((v0.c0)LIKE(rt0.c1)), (v0.c0 IN ()), CAST(rt0.c1 AS BLOB))))) ISNULL));
SELECT rt0.c1, v0.c0, rt0.c0, rt0.c2 FROM v0, rt0, vt0;
SELECT DISTINCT rt0.c0, v0.c0, rt0.c2, rt0.c1 FROM v0, rt0;
SELECT DISTINCT rt0.c0, v0.c0, rt0.c2, rt0.c1 FROM v0, rt0 WHERE (((((v0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))IS NOT(CASE WHEN v0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END))) UNION SELECT DISTINCT rt0.c0, v0.c0, rt0.c2, rt0.c1 FROM v0, rt0 WHERE ((NOT (((((v0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))IS NOT(CASE WHEN v0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END))))) UNION SELECT DISTINCT rt0.c0, v0.c0, rt0.c2, rt0.c1 FROM v0, rt0 WHERE (((((((v0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))IS NOT(CASE WHEN v0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END))) ISNULL));
SELECT DISTINCT rt0.c0, v0.c0, rt0.c2, rt0.c1 FROM v0, rt0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((~ (((rt0.c0)&(rt0.c1))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((~ (((rt0.c0)&(rt0.c1))))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((((~ (((rt0.c0)&(rt0.c1))))) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING TOTAL((v0.c0 IN ())) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TOTAL((v0.c0 IN ())))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL((v0.c0 IN ()))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING TOTAL((v0.c0 IN ())) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TOTAL((v0.c0 IN ())))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL((v0.c0 IN ()))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT MIN(((vt0.c0)<>(rt0.c1)) COLLATE BINARY) FROM rt0, v0, vt0 ORDER BY (((((rt0.c1 IN ()))OR((((rt0.c0, vt0.c0, rt0.c2)) NOT BETWEEN ((v0.c0, vt0.c0, vt0.c0)) AND ((rt0.c1, v0.c0, rt0.c1))))))AND(((rt0.c2)IS(vt0.c0)))) DESC;
SELECT ALL rt0.c2 FROM rt0, vt0;
SELECT rt0.c2 FROM rt0, vt0 WHERE ((NOT (rt0.c2))) UNION ALL SELECT rt0.c2 FROM rt0, vt0 WHERE ((NOT ((NOT (rt0.c2))))) UNION ALL SELECT rt0.c2 FROM rt0, vt0 WHERE ((((NOT (rt0.c2))) ISNULL));
SELECT ALL rt0.c2 FROM rt0, vt0;
SELECT DISTINCT * FROM v0, rt0, vt0;
SELECT DISTINCT * FROM v0, rt0 NOT INDEXED, vt0 WHERE (((NULL)GLOB(((rt0.c1)*(v0.c0))))) UNION SELECT DISTINCT * FROM v0, rt0, vt0 WHERE ((NOT (((NULL)GLOB(((rt0.c1)*(v0.c0))))))) UNION SELECT DISTINCT * FROM v0, rt0, vt0 WHERE (((((NULL)GLOB(((rt0.c1)*(v0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0, rt0, vt0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 WHERE (((((((((TRIM(DISTINCT v0.c0, ''))AND(v0.c0)))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))))OR(CAST(v0.c0 AS NUMERIC))))OR((v0.c0 IN ())))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 WHERE ((NOT (((((((((TRIM(DISTINCT v0.c0, ''))AND(v0.c0)))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))))OR(CAST(v0.c0 AS NUMERIC))))OR((v0.c0 IN ())))))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 WHERE (((((((((((TRIM(DISTINCT v0.c0, ''))AND(v0.c0)))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))))OR(CAST(v0.c0 AS NUMERIC))))OR((v0.c0 IN ())))) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((AVG(rt0.c1)) BETWEEN (rt0.c1) AND (MIN(AVG(GROUP_CONCAT(TOTAL(COUNT(*))))))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (((AVG(rt0.c1)) BETWEEN (rt0.c1) AND (MIN(AVG(GROUP_CONCAT(TOTAL(COUNT(*))))))))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((((AVG(rt0.c1)) BETWEEN (rt0.c1) AND (MIN(AVG(GROUP_CONCAT(TOTAL(COUNT(*)))))))) ISNULL);
SELECT v0.c0, rt0.c0 FROM rt0, v0, vt0;
SELECT v0.c0, rt0.c0 FROM rt0, v0, vt0 WHERE ((NOT (((rt0.c0)>(vt0.c0))))) UNION ALL SELECT ALL v0.c0, rt0.c0 FROM rt0, v0, vt0 WHERE ((NOT ((NOT (((rt0.c0)>(vt0.c0))))))) UNION ALL SELECT v0.c0, rt0.c0 FROM rt0, v0, vt0 WHERE ((((NOT (((rt0.c0)>(vt0.c0))))) ISNULL));
SELECT v0.c0, rt0.c0 FROM rt0, v0, vt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (CASE ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))  WHEN v0.c0 THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) ELSE (((v0.c0))<=((v0.c0))) END) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (CASE ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))  WHEN v0.c0 THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) ELSE (((v0.c0))<=((v0.c0))) END))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((CASE ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))  WHEN v0.c0 THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) ELSE (((v0.c0))<=((v0.c0))) END) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL v0.c0, rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY v0.c0, rt0.c0, rt0.c1;
SELECT ALL v0.c0, rt0.c0, rt0.c1 FROM v0, rt0 WHERE ((((rt0.c1, '-27149553', rt0.c1)) NOT BETWEEN (((~ (rt0.c2)), rt0.c0 COLLATE NOCASE, (((rt0.c1))!=((rt0.c0))))) AND ((rt0.c0, ((v0.c0) BETWEEN (v0.c0) AND (rt0.c1)), (~ ('')))))) GROUP BY v0.c0, rt0.c0, rt0.c1 UNION SELECT ALL v0.c0, rt0.c0, rt0.c1 FROM v0, rt0 WHERE ((NOT ((((rt0.c1, '-27149553', rt0.c1)) NOT BETWEEN (((~ (rt0.c2)), rt0.c0 COLLATE NOCASE, (((rt0.c1))<>((rt0.c0))))) AND ((rt0.c0, ((v0.c0) BETWEEN (v0.c0) AND (rt0.c1)), (~ ('')))))))) GROUP BY v0.c0, rt0.c0, rt0.c1 UNION SELECT v0.c0, rt0.c0, rt0.c1 FROM v0, rt0 WHERE ((((((rt0.c1, '-27149553', rt0.c1)) NOT BETWEEN (((~ (rt0.c2)), rt0.c0 COLLATE NOCASE, (((rt0.c1))!=((rt0.c0))))) AND ((rt0.c0, ((v0.c0) BETWEEN (v0.c0) AND (rt0.c1)), (~ ('')))))) ISNULL)) GROUP BY v0.c0, rt0.c0, rt0.c1;
SELECT ALL v0.c0, rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY v0.c0, rt0.c0, rt0.c1;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (+ (TOTAL(rt0.c0))) UNION ALL SELECT rt0.c0 FROM rt0 NOT INDEXED GROUP BY rt0.c0 HAVING (NOT ((+ (TOTAL(rt0.c0))))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (((+ (TOTAL(rt0.c0)))) ISNULL);
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (+ (TOTAL(rt0.c0))) UNION ALL SELECT rt0.c0 FROM rt0 NOT INDEXED GROUP BY rt0.c0 HAVING (NOT ((+ (TOTAL(rt0.c0))))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (((+ (TOTAL(rt0.c0)))) ISNULL);
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL TOTAL(CAST(TRIM(x'bafa') AS INTEGER)) FROM vt0, v0;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((((((((UNLIKELY(vt0.c0))AND(0.8359432725316972)))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND(((vt0.c0)<=(vt0.c0)))))AND(CASE vt0.c0  WHEN x'7476' THEN vt0.c0 END))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((((((((UNLIKELY(vt0.c0))AND(0.8359432725316972)))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND(((vt0.c0)<=(vt0.c0)))))AND(CASE vt0.c0  WHEN x'7476' THEN vt0.c0 END))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((((((((UNLIKELY(vt0.c0))AND(0.8359432725316972)))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND(((vt0.c0)<=(vt0.c0)))))AND(CASE vt0.c0  WHEN x'7476' THEN vt0.c0 END))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (((((CAST(rt0.c2 AS TEXT))AND(((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))AND(ABS(rt0.c0)))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (((((CAST(rt0.c2 AS TEXT))AND(((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))AND(ABS(rt0.c0)))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((((((CAST(rt0.c2 AS TEXT))AND(((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))AND(ABS(rt0.c0)))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((((((v0.c0) BETWEEN (0x60cb2ce9) AND (v0.c0)))AND((v0.c0 IN (v0.c0)))))AND(v0.c0 COLLATE BINARY))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((((((v0.c0) BETWEEN (0X60cb2ce9) AND (v0.c0)))AND((v0.c0 IN (v0.c0)))))AND(v0.c0 COLLATE BINARY))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((((((v0.c0) BETWEEN (0X60cb2ce9) AND (v0.c0)))AND((v0.c0 IN (v0.c0)))))AND(v0.c0 COLLATE BINARY))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM vt0 INNER JOIN v0 ON ((TRIM(DISTINCT vt0.c0)) NOT BETWEEN ((NOT (v0.c0))) AND (COALESCE(NULL, vt0.c0)));
SELECT ALL * FROM vt0 INNER JOIN v0 ON ((TRIM(DISTINCT vt0.c0)) NOT BETWEEN ((NOT (v0.c0))) AND (COALESCE(NULL, vt0.c0))) WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)<(((((v0.c0)OR(vt0.c0)))AND(x''))))) UNION ALL SELECT ALL * FROM vt0 INNER JOIN v0 ON ((TRIM(DISTINCT vt0.c0)) NOT BETWEEN ((NOT (v0.c0))) AND (COALESCE(NULL, vt0.c0))) WHERE ((NOT (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)<(((((v0.c0)OR(vt0.c0)))AND(x''))))))) UNION ALL SELECT ALL * FROM vt0 INNER JOIN v0 ON ((TRIM(DISTINCT vt0.c0)) NOT BETWEEN ((NOT (v0.c0))) AND (COALESCE(NULL, vt0.c0))) WHERE (((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)<(((((v0.c0)OR(vt0.c0)))AND(x''))))) ISNULL));
SELECT ALL * FROM vt0 INNER JOIN v0 ON ((TRIM(DISTINCT vt0.c0)) NOT BETWEEN ((NOT (v0.c0))) AND (COALESCE(NULL, vt0.c0)));
SELECT DISTINCT * FROM vt0, rt0, v0;
SELECT DISTINCT * FROM vt0, rt0, v0 WHERE (((((rt0.c0)OR(rt0.c0)))OR(v0.c0)) COLLATE BINARY) UNION SELECT DISTINCT * FROM vt0, rt0, v0 WHERE ((NOT (((((rt0.c0)OR(rt0.c0)))OR(v0.c0)) COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt0, rt0, v0 WHERE (((((((rt0.c0)OR(rt0.c0)))OR(v0.c0)) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM vt0, rt0, v0;
SELECT rt0.c0, rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1, vt0.c0;
SELECT rt0.c0, rt0.c1, vt0.c0 FROM rt0 NOT INDEXED, vt0 WHERE (x'a6cc') GROUP BY rt0.c0, rt0.c1, vt0.c0 UNION SELECT rt0.c0, rt0.c1, vt0.c0 FROM rt0, vt0 WHERE ((NOT (x'a6cc'))) GROUP BY rt0.c0, rt0.c1, vt0.c0 UNION SELECT ALL rt0.c0, rt0.c1, vt0.c0 FROM rt0, vt0 WHERE (((x'a6cc') ISNULL)) GROUP BY rt0.c0, rt0.c1, vt0.c0;
SELECT rt0.c0, rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1, vt0.c0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0, vt0 NOT INDEXED NATURAL JOIN v0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0, vt0 NATURAL JOIN v0 GROUP BY rt0.c1, rt0.c2 HAVING COUNT(CAST(COUNT(SUM(x'07db')) AS REAL)) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0, vt0 NOT INDEXED NATURAL JOIN v0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (COUNT(CAST(COUNT(SUM(x'07db')) AS REAL)))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0, vt0 NATURAL JOIN v0 GROUP BY rt0.c1, rt0.c2 HAVING ((COUNT(CAST(COUNT(SUM(x'07db')) AS REAL))) ISNULL);
SELECT rt0.c1, vt0.c0, rt0.c2, rt0.c0 FROM vt0 INNER JOIN rt0 ON ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))) IN ()) FULL OUTER JOIN v0 ON (((rt0.c2)) NOT BETWEEN ((((((((((v0.c0)OR(rt0.c1)))OR(v0.c0)))AND(rt0.c1)))AND(rt0.c2)))) AND ((rt0.c0)));
SELECT ALL rt0.c1, vt0.c0, rt0.c2, rt0.c0 FROM vt0 INNER JOIN rt0 ON ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))) IN ()) FULL OUTER JOIN v0 ON (((rt0.c2)) NOT BETWEEN ((((((((((v0.c0)OR(rt0.c1)))OR(v0.c0)))AND(rt0.c1)))AND(rt0.c2)))) AND ((rt0.c0))) WHERE (CAST(vt0.c0 AS REAL)) UNION ALL SELECT ALL rt0.c1, vt0.c0, rt0.c2, rt0.c0 FROM vt0 INNER JOIN rt0 ON ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))) IN ()) FULL OUTER JOIN v0 ON (((rt0.c2)) NOT BETWEEN ((((((((((v0.c0)OR(rt0.c1)))OR(v0.c0)))AND(rt0.c1)))AND(rt0.c2)))) AND ((rt0.c0))) WHERE ((NOT (CAST(vt0.c0 AS REAL)))) UNION ALL SELECT rt0.c1, vt0.c0, rt0.c2, rt0.c0 FROM vt0 INNER JOIN rt0 ON ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))) IN ()) FULL OUTER JOIN v0 ON (((rt0.c2)) NOT BETWEEN ((((((((((v0.c0)OR(rt0.c1)))OR(v0.c0)))AND(rt0.c1)))AND(rt0.c2)))) AND ((rt0.c0))) WHERE (((CAST(vt0.c0 AS REAL)) ISNULL));
SELECT rt0.c1, vt0.c0, rt0.c2, rt0.c0 FROM vt0 INNER JOIN rt0 ON ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))) IN ()) FULL OUTER JOIN v0 ON (((rt0.c2)) NOT BETWEEN ((((((((((v0.c0)OR(rt0.c1)))OR(v0.c0)))AND(rt0.c1)))AND(rt0.c2)))) AND ((rt0.c0)));
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CAST(((rt0.c1)AND(rt0.c1)) AS REAL)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CAST(((rt0.c1)AND(rt0.c1)) AS REAL)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CAST(((rt0.c1)AND(rt0.c1)) AS REAL)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.c0 COLLATE BINARY WHEN (vt0.c0 IN ()) THEN CAST(vt0.c0 AS REAL) WHEN (+ (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (1938208643) AND (vt0.c0)) WHEN ((vt0.c0) IS FALSE) THEN ((vt0.c0) NOT NULL) WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN '' END) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN vt0.c0 THEN vt0.c0 COLLATE BINARY WHEN (vt0.c0 IN ()) THEN CAST(vt0.c0 AS REAL) WHEN (+ (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (1938208643) AND (vt0.c0)) WHEN ((vt0.c0) IS FALSE) THEN ((vt0.c0) NOT NULL) WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN '' END))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 COLLATE BINARY WHEN (vt0.c0 IN ()) THEN CAST(vt0.c0 AS REAL) WHEN (+ (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (1938208643) AND (vt0.c0)) WHEN ((vt0.c0) IS FALSE) THEN ((vt0.c0) NOT NULL) WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN '' END) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c1, rt0.c2 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2 HAVING CASE WHEN MAX(rt0.c1) THEN (SUM(SUM(COUNT(*))) IN (v0.c0)) END UNION ALL SELECT rt0.c1, rt0.c2 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (CASE WHEN MAX(rt0.c1) THEN (SUM(SUM(COUNT(*))) IN (v0.c0)) END)) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((CASE WHEN MAX(rt0.c1) THEN (SUM(SUM(COUNT(*))) IN (v0.c0)) END) ISNULL);
SELECT ALL * FROM rt0, v0;
SELECT * FROM rt0, v0 WHERE (0.17827011838856022) UNION ALL SELECT * FROM rt0, v0 WHERE ((NOT (0.17827011838856022))) UNION ALL SELECT * FROM rt0, v0 WHERE (((0.17827011838856022) ISNULL));
SELECT ALL * FROM rt0, v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (CASE CAST(v0.c0 AS TEXT)  WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 END THEN CAST(v0.c0 AS BLOB) WHEN (v0.c0 IN ()) THEN ((1.758260246E9)|(v0.c0)) WHEN CAST(v0.c0 AS INTEGER) THEN (v0.c0 IN ()) ELSE ((((v0.c0)AND(v0.c0)))OR(v0.c0)) END) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (CASE CAST(v0.c0 AS TEXT)  WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 END THEN CAST(v0.c0 AS BLOB) WHEN (v0.c0 IN ()) THEN ((1.758260246E9)|(v0.c0)) WHEN CAST(v0.c0 AS INTEGER) THEN (v0.c0 IN ()) ELSE ((((v0.c0)AND(v0.c0)))OR(v0.c0)) END))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((CASE CAST(v0.c0 AS TEXT)  WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 END THEN CAST(v0.c0 AS BLOB) WHEN (v0.c0 IN ()) THEN ((1.758260246E9)|(v0.c0)) WHEN CAST(v0.c0 AS INTEGER) THEN (v0.c0 IN ()) ELSE ((((v0.c0)AND(v0.c0)))OR(v0.c0)) END) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE ((((((rt0.c1)LIKE(NULL))))<=((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT ((((((rt0.c1)LIKE(NULL))))<=((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((((((((rt0.c1)LIKE(NULL))))<=((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT v0.c0, rt0.c0 FROM vt0, rt0 NATURAL JOIN v0 GROUP BY v0.c0, rt0.c0;
SELECT ALL v0.c0, rt0.c0 FROM vt0, rt0 NATURAL JOIN v0 GROUP BY v0.c0, rt0.c0 HAVING ((SUM(SUM(rt0.c1))) IS TRUE) UNION ALL SELECT ALL v0.c0, rt0.c0 FROM vt0, rt0 NATURAL JOIN v0 GROUP BY v0.c0, rt0.c0 HAVING (NOT (((SUM(SUM(rt0.c1))) IS TRUE))) UNION ALL SELECT v0.c0, rt0.c0 FROM vt0, rt0 NATURAL JOIN v0 GROUP BY v0.c0, rt0.c0 HAVING ((((SUM(SUM(rt0.c1))) IS TRUE)) ISNULL);
SELECT ALL TOTAL(CAST(CAST(rt0.c0 AS TEXT) AS NUMERIC)) FROM vt0, rt0;
SELECT * FROM rt0 NATURAL JOIN vt0;
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE (CASE (((rt0.c0))>((vt0.c0)))  WHEN ((vt0.c0)+(vt0.c0)) THEN (0.5277459001077137 IN (vt0.c0)) WHEN (~ (rt0.c0)) THEN ((((((((rt0.c0)AND(rt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(rt0.c1)) WHEN 0.5590770709393016 THEN (rt0.c2 IN (rt0.c1, '1713713407')) END) UNION ALL SELECT * FROM rt0 NATURAL JOIN vt0 WHERE ((NOT (CASE (((rt0.c0))>((vt0.c0)))  WHEN ((vt0.c0)+(vt0.c0)) THEN (0.5277459001077137 IN (vt0.c0)) WHEN (~ (rt0.c0)) THEN ((((((((rt0.c0)AND(rt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(rt0.c1)) WHEN 0.5590770709393016 THEN (rt0.c2 IN (rt0.c1, '1713713407')) END))) UNION ALL SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE (((CASE (((rt0.c0))>((vt0.c0)))  WHEN ((vt0.c0)+(vt0.c0)) THEN (0.5277459001077137 IN (vt0.c0)) WHEN (~ (rt0.c0)) THEN ((((((((rt0.c0)AND(rt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(rt0.c1)) WHEN 0.5590770709393016 THEN (rt0.c2 IN (rt0.c1, '1713713407')) END) ISNULL));
SELECT * FROM rt0 NATURAL JOIN vt0;
SELECT DISTINCT rt0.c0, v0.c0, rt0.c2, vt0.c0 FROM rt0 INNER JOIN v0 ON MAX(rt0.c1 COLLATE RTRIM, NULL) CROSS JOIN vt0 ON CASE WHEN ((x'')OR(v0.c0)) THEN x'' ELSE rt0.c0 END;
SELECT DISTINCT rt0.c0, v0.c0, rt0.c2, vt0.c0 FROM rt0 INNER JOIN v0 ON MAX(rt0.c1 COLLATE RTRIM, NULL) CROSS JOIN vt0 ON CASE WHEN ((x'')OR(v0.c0)) THEN x'' ELSE rt0.c0 END WHERE (CASE ((vt0.c0) IS TRUE)  WHEN (rt0.c0 IN (rt0.c0)) THEN rt0.c2 END) UNION SELECT DISTINCT rt0.c0, v0.c0, rt0.c2, vt0.c0 FROM rt0 INNER JOIN v0 ON MAX(rt0.c1 COLLATE RTRIM, NULL) CROSS JOIN vt0 ON CASE WHEN ((x'')OR(v0.c0)) THEN x'' ELSE rt0.c0 END WHERE ((NOT (CASE ((vt0.c0) IS TRUE)  WHEN (rt0.c0 IN (rt0.c0)) THEN rt0.c2 END))) UNION SELECT DISTINCT rt0.c0, v0.c0, rt0.c2, vt0.c0 FROM rt0 INNER JOIN v0 ON MAX(rt0.c1 COLLATE RTRIM, NULL) CROSS JOIN vt0 ON CASE WHEN ((x'')OR(v0.c0)) THEN x'' ELSE rt0.c0 END WHERE (((CASE ((vt0.c0) IS TRUE)  WHEN (rt0.c0 IN (rt0.c0)) THEN rt0.c2 END) ISNULL));
SELECT DISTINCT rt0.c0, v0.c0, rt0.c2, vt0.c0 FROM rt0 INNER JOIN v0 ON MAX(rt0.c1 COLLATE RTRIM, NULL) CROSS JOIN vt0 ON CASE WHEN ((x'')OR(v0.c0)) THEN x'' ELSE rt0.c0 END;
SELECT ALL rt0.c2 FROM v0, rt0 RIGHT OUTER JOIN vt0 ON ((((((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c2)))AND(((((vt0.c0)AND(0Xffffffffbbe83502)))OR(rt0.c1)))))AND(((v0.c0)*(rt0.c2)))) GROUP BY rt0.c2;
SELECT rt0.c2 FROM v0, rt0 RIGHT OUTER JOIN vt0 ON ((((((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c2)))AND(((((vt0.c0)AND(0Xffffffffbbe83502)))OR(rt0.c1)))))AND(((v0.c0)*(rt0.c2)))) WHERE (rt0.c1) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM v0, rt0 RIGHT OUTER JOIN vt0 ON ((((((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c2)))AND(((((vt0.c0)AND(0xffffffffbbe83502)))OR(rt0.c1)))))AND(((v0.c0)*(rt0.c2)))) WHERE ((NOT (rt0.c1))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM v0, rt0 RIGHT OUTER JOIN vt0 ON ((((((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c2)))AND(((((vt0.c0)AND(0xffffffffbbe83502)))OR(rt0.c1)))))AND(((v0.c0)*(rt0.c2)))) WHERE (((rt0.c1) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM v0, rt0 RIGHT OUTER JOIN vt0 ON ((((((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c2)))AND(((((vt0.c0)AND(0Xffffffffbbe83502)))OR(rt0.c1)))))AND(((v0.c0)*(rt0.c2)))) GROUP BY rt0.c2;
SELECT ALL rt0.c2, v0.c0 FROM vt0 CROSS JOIN v0 ON ((((rt0.c1) ISNULL)) NOTNULL) INNER JOIN rt0 ON (('h#')<>('0.5586327076018981')) GROUP BY rt0.c2, v0.c0;
SELECT ALL rt0.c2, v0.c0 FROM vt0 CROSS JOIN v0 ON ((((rt0.c1) ISNULL)) NOTNULL) INNER JOIN rt0 ON (('h#')<>('0.5586327076018981')) GROUP BY rt0.c2, v0.c0 HAVING vt0.c0 UNION ALL SELECT ALL rt0.c2, v0.c0 FROM vt0 CROSS JOIN v0 ON ((((rt0.c1) ISNULL)) NOTNULL) INNER JOIN rt0 ON (('h#')!=('0.5586327076018981')) GROUP BY rt0.c2, v0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT rt0.c2, v0.c0 FROM vt0 CROSS JOIN v0 ON ((((rt0.c1) ISNULL)) NOTNULL) INNER JOIN rt0 ON (('h#')<>('0.5586327076018981')) GROUP BY rt0.c2, v0.c0 HAVING ((vt0.c0) ISNULL);
SELECT ALL rt0.c2, v0.c0 FROM vt0 CROSS JOIN v0 ON ((((rt0.c1) ISNULL)) NOTNULL) INNER JOIN rt0 ON (('h#')<>('0.5586327076018981')) GROUP BY rt0.c2, v0.c0;
SELECT ALL rt0.c2, v0.c0 FROM vt0 CROSS JOIN v0 ON ((((rt0.c1) ISNULL)) NOTNULL) INNER JOIN rt0 ON (('h#')<>('0.5586327076018981')) GROUP BY rt0.c2, v0.c0 HAVING vt0.c0 UNION ALL SELECT ALL rt0.c2, v0.c0 FROM vt0 CROSS JOIN v0 ON ((((rt0.c1) ISNULL)) NOTNULL) INNER JOIN rt0 ON (('h#')!=('0.5586327076018981')) GROUP BY rt0.c2, v0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT rt0.c2, v0.c0 FROM vt0 CROSS JOIN v0 ON ((((rt0.c1) ISNULL)) NOTNULL) INNER JOIN rt0 ON (('h#')<>('0.5586327076018981')) GROUP BY rt0.c2, v0.c0 HAVING ((vt0.c0) ISNULL);
SELECT ALL rt0.c2, v0.c0 FROM vt0 CROSS JOIN v0 ON ((((rt0.c1) ISNULL)) NOTNULL) INNER JOIN rt0 ON (('h#')<>('0.5586327076018981')) GROUP BY rt0.c2, v0.c0;
SELECT MAX(((((vt0.c0)>>(vt0.c0)))%(((((((((276451540)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))))) FROM vt0;
SELECT * FROM v0;
SELECT * FROM v0 NOT INDEXED WHERE (UNLIKELY(((((v0.c0)AND(v0.c0)))OR(v0.c0)))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (UNLIKELY(((((v0.c0)AND(v0.c0)))OR(v0.c0)))))) UNION ALL SELECT ALL * FROM v0 WHERE (((UNLIKELY(((((v0.c0)AND(v0.c0)))OR(v0.c0)))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c0)>=(rt0.c2)), ((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c1)), ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))))>=(((rt0.c2 IN (rt0.c1, rt0.c1)), CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END, rt0.c0)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((((rt0.c0)>=(rt0.c2)), ((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c1)), ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))))>=(((rt0.c2 IN (rt0.c1, rt0.c1)), CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END, rt0.c0)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((((rt0.c0)>=(rt0.c2)), ((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c1)), ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))))>=(((rt0.c2 IN (rt0.c1, rt0.c1)), CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END, rt0.c0)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST(vt0.c0 AS REAL))<(CAST(vt0.c0 AS TEXT)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((CAST(vt0.c0 AS REAL))<(CAST(vt0.c0 AS TEXT)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((CAST(vt0.c0 AS REAL))<(CAST(vt0.c0 AS TEXT)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c2 FROM v0, rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM v0, rt0 GROUP BY rt0.c2 HAVING COUNT(CAST(MIN(COUNT(rt0.c2)) AS REAL)) UNION ALL SELECT ALL rt0.c2 FROM v0, rt0 GROUP BY rt0.c2 HAVING (NOT (COUNT(CAST(MIN(COUNT(rt0.c2)) AS REAL)))) UNION ALL SELECT ALL rt0.c2 FROM v0, rt0 GROUP BY rt0.c2 HAVING ((COUNT(CAST(MIN(COUNT(rt0.c2)) AS REAL))) ISNULL);
SELECT rt0.c2, rt0.c0 FROM v0, rt0;
SELECT ALL rt0.c2, rt0.c0 FROM v0, rt0 WHERE ((((v0.c0) IS TRUE) IN ())) UNION ALL SELECT rt0.c2, rt0.c0 FROM v0, rt0 WHERE ((NOT ((((v0.c0) IS TRUE) IN ())))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM v0, rt0 WHERE ((((((v0.c0) IS TRUE) IN ())) ISNULL));
SELECT rt0.c2, rt0.c0 FROM v0, rt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (0Xfffffffffb22afd8) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (0Xfffffffffb22afd8))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((0xfffffffffb22afd8) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 WHERE ((((((v0.c0) BETWEEN (v0.c0) AND (NULL))))==((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM vt0, v0 WHERE ((NOT ((((((v0.c0) BETWEEN (v0.c0) AND (NULL))))=((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))))) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM vt0, v0 NOT INDEXED WHERE ((((((((v0.c0) BETWEEN (v0.c0) AND (NULL))))==((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT rt0.c2, v0.c0, rt0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c2, v0.c0, rt0.c0;
SELECT ALL rt0.c2, v0.c0, rt0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c2, v0.c0, rt0.c0 HAVING (~ (MIN(rt0.c2))) UNION ALL SELECT ALL rt0.c2, v0.c0, rt0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c2, v0.c0, rt0.c0 HAVING (NOT ((~ (MIN(rt0.c2))))) UNION ALL SELECT ALL rt0.c2, v0.c0, rt0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c2, v0.c0, rt0.c0 HAVING (((~ (MIN(rt0.c2)))) ISNULL);
SELECT rt0.c2, v0.c0, rt0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c2, v0.c0, rt0.c0;
SELECT ALL rt0.c2, v0.c0, rt0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c2, v0.c0, rt0.c0 HAVING (~ (MIN(rt0.c2))) UNION ALL SELECT ALL rt0.c2, v0.c0, rt0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c2, v0.c0, rt0.c0 HAVING (NOT ((~ (MIN(rt0.c2))))) UNION ALL SELECT ALL rt0.c2, v0.c0, rt0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c2, v0.c0, rt0.c0 HAVING (((~ (MIN(rt0.c2)))) ISNULL);
SELECT rt0.c2, v0.c0, rt0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c2, v0.c0, rt0.c0;
SELECT v0.c0 FROM rt0 NATURAL JOIN v0;
SELECT v0.c0 FROM rt0 NATURAL JOIN v0 WHERE (((((0.9898402089430901) IS TRUE)) BETWEEN (((rt0.c1) NOT NULL)) AND ((v0.c0 IN (rt0.c2))))) UNION ALL SELECT v0.c0 FROM rt0 NATURAL JOIN v0 WHERE ((NOT (((((0.9898402089430901) IS TRUE)) BETWEEN (((rt0.c1) NOT NULL)) AND ((v0.c0 IN (rt0.c2))))))) UNION ALL SELECT ALL v0.c0 FROM rt0 NATURAL JOIN v0 WHERE (((((((0.9898402089430901) IS TRUE)) BETWEEN (((rt0.c1) NOT NULL)) AND ((v0.c0 IN (rt0.c2))))) ISNULL));
SELECT v0.c0 FROM rt0 NATURAL JOIN v0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (rt0.c1) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT ALL vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt0 LEFT OUTER JOIN v0 ON (('0.1931360890398326') IS FALSE) INNER JOIN rt0 ON CAST(rt0.c0 AS INTEGER) GROUP BY vt0.c0, rt0.c0, rt0.c1, rt0.c2;
SELECT vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt0 LEFT OUTER JOIN v0 ON (('0.1931360890398326') IS FALSE) INNER JOIN rt0 ON CAST(rt0.c0 AS INTEGER) WHERE (((((((((((rt0.c0)GLOB(rt0.c1)))OR(((rt0.c2) IS TRUE))))AND(CAST(rt0.c0 AS REAL))))OR(((v0.c0) NOT NULL))))OR((NOT (vt0.c0))))) GROUP BY vt0.c0, rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt0 LEFT OUTER JOIN v0 ON (('0.1931360890398326') IS FALSE) INNER JOIN rt0 ON CAST(rt0.c0 AS INTEGER) WHERE ((NOT (((((((((((rt0.c0)GLOB(rt0.c1)))OR(((rt0.c2) IS TRUE))))AND(CAST(rt0.c0 AS REAL))))OR(((v0.c0) NOT NULL))))OR((NOT (vt0.c0))))))) GROUP BY vt0.c0, rt0.c0, rt0.c1, rt0.c2 UNION SELECT vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt0 LEFT OUTER JOIN v0 ON (('0.1931360890398326') IS FALSE) INNER JOIN rt0 ON CAST(rt0.c0 AS INTEGER) WHERE (((((((((((((rt0.c0)GLOB(rt0.c1)))OR(((rt0.c2) IS TRUE))))AND(CAST(rt0.c0 AS REAL))))OR(((v0.c0) NOT NULL))))OR((NOT (vt0.c0))))) ISNULL)) GROUP BY vt0.c0, rt0.c0, rt0.c1, rt0.c2;
SELECT ALL vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt0 LEFT OUTER JOIN v0 ON (('0.1931360890398326') IS FALSE) INNER JOIN rt0 ON CAST(rt0.c0 AS INTEGER) GROUP BY vt0.c0, rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c2, v0.c0, rt0.c0, vt0.c0, rt0.c1 FROM v0, rt0 FULL OUTER JOIN vt0 ON ((((rt0.c2)/(rt0.c1)))==(CASE WHEN rt0.c2 THEN rt0.c1 END)) GROUP BY rt0.c2, v0.c0, rt0.c0, vt0.c0, rt0.c1;
SELECT ALL rt0.c2, v0.c0, rt0.c0, vt0.c0, rt0.c1 FROM v0, rt0 FULL OUTER JOIN vt0 ON ((((rt0.c2)/(rt0.c1)))==(CASE WHEN rt0.c2 THEN rt0.c1 END)) GROUP BY rt0.c2, v0.c0, rt0.c0, vt0.c0, rt0.c1 HAVING CASE TOTAL(vt0.c0)  WHEN MAX(rt0.c2) THEN (('551858518')IS NOT(rt0.c0)) ELSE x'' END UNION ALL SELECT rt0.c2, v0.c0, rt0.c0, vt0.c0, rt0.c1 FROM v0, rt0 FULL OUTER JOIN vt0 ON ((((rt0.c2)/(rt0.c1)))=(CASE WHEN rt0.c2 THEN rt0.c1 END)) GROUP BY rt0.c2, v0.c0, rt0.c0, vt0.c0, rt0.c1 HAVING (NOT (CASE TOTAL(vt0.c0)  WHEN MAX(rt0.c2) THEN (('551858518')IS NOT(rt0.c0)) ELSE x'' END)) UNION ALL SELECT ALL rt0.c2, v0.c0, rt0.c0, vt0.c0, rt0.c1 FROM v0, rt0 NOT INDEXED FULL OUTER JOIN vt0 ON ((((rt0.c2)/(rt0.c1)))==(CASE WHEN rt0.c2 THEN rt0.c1 END)) GROUP BY rt0.c2, v0.c0, rt0.c0, vt0.c0, rt0.c1 HAVING ((CASE TOTAL(vt0.c0)  WHEN MAX(rt0.c2) THEN (('551858518')IS NOT(rt0.c0)) ELSE x'' END) ISNULL);
SELECT rt0.c2, v0.c0, rt0.c0, vt0.c0, rt0.c1 FROM v0, rt0 FULL OUTER JOIN vt0 ON ((((rt0.c2)/(rt0.c1)))==(CASE WHEN rt0.c2 THEN rt0.c1 END)) GROUP BY rt0.c2, v0.c0, rt0.c0, vt0.c0, rt0.c1;
SELECT ALL rt0.c2, v0.c0, rt0.c0, vt0.c0, rt0.c1 FROM v0, rt0 FULL OUTER JOIN vt0 ON ((((rt0.c2)/(rt0.c1)))==(CASE WHEN rt0.c2 THEN rt0.c1 END)) GROUP BY rt0.c2, v0.c0, rt0.c0, vt0.c0, rt0.c1 HAVING CASE TOTAL(vt0.c0)  WHEN MAX(rt0.c2) THEN (('551858518')IS NOT(rt0.c0)) ELSE x'' END UNION ALL SELECT rt0.c2, v0.c0, rt0.c0, vt0.c0, rt0.c1 FROM v0, rt0 FULL OUTER JOIN vt0 ON ((((rt0.c2)/(rt0.c1)))=(CASE WHEN rt0.c2 THEN rt0.c1 END)) GROUP BY rt0.c2, v0.c0, rt0.c0, vt0.c0, rt0.c1 HAVING (NOT (CASE TOTAL(vt0.c0)  WHEN MAX(rt0.c2) THEN (('551858518')IS NOT(rt0.c0)) ELSE x'' END)) UNION ALL SELECT ALL rt0.c2, v0.c0, rt0.c0, vt0.c0, rt0.c1 FROM v0, rt0 NOT INDEXED FULL OUTER JOIN vt0 ON ((((rt0.c2)/(rt0.c1)))==(CASE WHEN rt0.c2 THEN rt0.c1 END)) GROUP BY rt0.c2, v0.c0, rt0.c0, vt0.c0, rt0.c1 HAVING ((CASE TOTAL(vt0.c0)  WHEN MAX(rt0.c2) THEN (('551858518')IS NOT(rt0.c0)) ELSE x'' END) ISNULL);
SELECT rt0.c2, v0.c0, rt0.c0, vt0.c0, rt0.c1 FROM v0, rt0 FULL OUTER JOIN vt0 ON ((((rt0.c2)/(rt0.c1)))==(CASE WHEN rt0.c2 THEN rt0.c1 END)) GROUP BY rt0.c2, v0.c0, rt0.c0, vt0.c0, rt0.c1;
SELECT * FROM rt0, v0, vt0;
SELECT ALL * FROM rt0, v0, vt0 WHERE (((CAST(rt0.c1 AS NUMERIC)) IS FALSE)) UNION ALL SELECT * FROM rt0, v0, vt0 WHERE ((NOT (((CAST(rt0.c1 AS NUMERIC)) IS FALSE)))) UNION ALL SELECT ALL * FROM rt0, v0, vt0 WHERE (((((CAST(rt0.c1 AS NUMERIC)) IS FALSE)) ISNULL));
SELECT * FROM rt0, v0, vt0;
SELECT DISTINCT * FROM v0 NATURAL JOIN vt0;
SELECT DISTINCT * FROM v0 NATURAL JOIN vt0 WHERE (NULL) UNION SELECT DISTINCT * FROM v0 NATURAL JOIN vt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM v0 NATURAL JOIN vt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM v0 NATURAL JOIN vt0;
SELECT v0.c0 FROM v0, vt0, rt0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt0, rt0 WHERE (((((((((((vt0.c0)OR(rt0.c1)))AND(vt0.c0)))OR(vt0.c0)))AND(rt0.c2)))=((((rt0.c0))<((rt0.c1)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, vt0, rt0 WHERE ((NOT (((((((((((vt0.c0)OR(rt0.c1)))AND(vt0.c0)))OR(vt0.c0)))AND(rt0.c2)))=((((rt0.c0))<((rt0.c1)))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, vt0, rt0 WHERE (((((((((((((vt0.c0)OR(rt0.c1)))AND(vt0.c0)))OR(vt0.c0)))AND(rt0.c2)))=((((rt0.c0))<((rt0.c1)))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt0, rt0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (rt0.c0) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (rt0.c0))) UNION ALL SELECT * FROM rt0 WHERE (((rt0.c0) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c0 IN ()))OR(((vt0.c0)<>(vt0.c0)))))OR(((0.6852739880385481) IS FALSE)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((((vt0.c0 IN ()))OR(((vt0.c0)<>(vt0.c0)))))OR(((0.6852739880385481) IS FALSE)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((((vt0.c0 IN ()))OR(((vt0.c0)!=(vt0.c0)))))OR(((0.6852739880385481) IS FALSE)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) AND ((x'')))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0)) BETWEEN ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) AND ((x'')))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) AND ((x'')))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c2, rt0.c1, v0.c0, rt0.c0 FROM rt0 FULL OUTER JOIN v0 ON ((COALESCE(DISTINCT rt0.c0, rt0.c2)) BETWEEN (((v0.c0)*(rt0.c2))) AND (CASE v0.c0  WHEN v0.c0 THEN rt0.c1 ELSE rt0.c1 END)) GROUP BY rt0.c2, rt0.c1, v0.c0, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, v0.c0, rt0.c0 FROM rt0 FULL OUTER JOIN v0 ON ((COALESCE(DISTINCT rt0.c0, rt0.c2)) BETWEEN (((v0.c0)*(rt0.c2))) AND (CASE v0.c0  WHEN v0.c0 THEN rt0.c1 ELSE rt0.c1 END)) GROUP BY rt0.c2, rt0.c1, v0.c0, rt0.c0 HAVING ((TOTAL(COUNT(*)))>=(TOTAL(rt0.c1))) UNION ALL SELECT ALL rt0.c2, rt0.c1, v0.c0, rt0.c0 FROM rt0 FULL OUTER JOIN v0 ON ((COALESCE(DISTINCT rt0.c0, rt0.c2)) BETWEEN (((v0.c0)*(rt0.c2))) AND (CASE v0.c0  WHEN v0.c0 THEN rt0.c1 ELSE rt0.c1 END)) GROUP BY rt0.c2, rt0.c1, v0.c0, rt0.c0 HAVING (NOT (((TOTAL(COUNT(*)))>=(TOTAL(rt0.c1))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, v0.c0, rt0.c0 FROM rt0 FULL OUTER JOIN v0 ON ((COALESCE(DISTINCT rt0.c0, rt0.c2)) BETWEEN (((v0.c0)*(rt0.c2))) AND (CASE v0.c0  WHEN v0.c0 THEN rt0.c1 ELSE rt0.c1 END)) GROUP BY rt0.c2, rt0.c1, v0.c0, rt0.c0 HAVING ((((TOTAL(COUNT(*)))>=(TOTAL(rt0.c1)))) ISNULL);
SELECT rt0.c2, rt0.c0, v0.c0, rt0.c1 FROM v0, rt0;
SELECT rt0.c2, rt0.c0, v0.c0, rt0.c1 FROM v0, rt0 WHERE (v0.c0) UNION ALL SELECT ALL rt0.c2, rt0.c0, v0.c0, rt0.c1 FROM v0, rt0 WHERE ((NOT (v0.c0))) UNION ALL SELECT rt0.c2, rt0.c0, v0.c0, rt0.c1 FROM v0, rt0 WHERE (((v0.c0) ISNULL));
SELECT rt0.c2, rt0.c0, v0.c0, rt0.c1 FROM v0, rt0;
SELECT DISTINCT * FROM vt0 CROSS JOIN v0 ON CASE ((((((((v0.c0)OR(NULL)))AND(rt0.c1)))AND(vt0.c0)))OR(rt0.c0))  WHEN (((v0.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))) THEN rt0.c1 COLLATE RTRIM END LEFT OUTER JOIN rt0 ON 0.03426303785080842;
SELECT DISTINCT * FROM vt0 CROSS JOIN v0 ON CASE ((((((((v0.c0)OR(NULL)))AND(rt0.c1)))AND(vt0.c0)))OR(rt0.c0))  WHEN (((v0.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))) THEN rt0.c1 COLLATE RTRIM END LEFT OUTER JOIN rt0 ON 0.03426303785080842 WHERE (((rt0.c0) NOT BETWEEN (DATETIME(vt0.c0, rt0.c2, rt0.c1)) AND (x''))) UNION SELECT DISTINCT * FROM vt0 CROSS JOIN v0 ON CASE ((((((((v0.c0)OR(NULL)))AND(rt0.c1)))AND(vt0.c0)))OR(rt0.c0))  WHEN (((v0.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))) THEN rt0.c1 COLLATE RTRIM END LEFT OUTER JOIN rt0 ON 0.03426303785080842 WHERE ((NOT (((rt0.c0) NOT BETWEEN (DATETIME(vt0.c0, rt0.c2, rt0.c1)) AND (x''))))) UNION SELECT DISTINCT * FROM vt0 CROSS JOIN v0 ON CASE ((((((((v0.c0)OR(NULL)))AND(rt0.c1)))AND(vt0.c0)))OR(rt0.c0))  WHEN (((v0.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))) THEN rt0.c1 COLLATE RTRIM END LEFT OUTER JOIN rt0 ON 0.03426303785080842 WHERE (((((rt0.c0) NOT BETWEEN (DATETIME(vt0.c0, rt0.c2, rt0.c1)) AND (x''))) ISNULL));
SELECT DISTINCT * FROM vt0 CROSS JOIN v0 ON CASE ((((((((v0.c0)OR(NULL)))AND(rt0.c1)))AND(vt0.c0)))OR(rt0.c0))  WHEN (((v0.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))) THEN rt0.c1 COLLATE RTRIM END LEFT OUTER JOIN rt0 ON 0.03426303785080842;
SELECT rt0.c2, vt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0, rt0.c1;
SELECT rt0.c2, vt0.c0, rt0.c1 FROM vt0, rt0 WHERE ((~ ((NOT (rt0.c2))))) GROUP BY rt0.c2, vt0.c0, rt0.c1 UNION SELECT rt0.c2, vt0.c0, rt0.c1 FROM vt0, rt0 WHERE ((NOT ((~ ((NOT (rt0.c2))))))) GROUP BY rt0.c2, vt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, vt0.c0, rt0.c1 FROM vt0, rt0 WHERE ((((~ ((NOT (rt0.c2))))) ISNULL)) GROUP BY rt0.c2, vt0.c0, rt0.c1;
SELECT rt0.c2, vt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0, rt0.c1;
SELECT ALL v0.c0, rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY v0.c0, rt0.c2, rt0.c0;
SELECT ALL v0.c0, rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY v0.c0, rt0.c2, rt0.c0 HAVING TOTAL(GROUP_CONCAT(MAX(TOTAL(v0.c0)))) UNION ALL SELECT ALL v0.c0, rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY v0.c0, rt0.c2, rt0.c0 HAVING (NOT (TOTAL(GROUP_CONCAT(MAX(TOTAL(v0.c0)))))) UNION ALL SELECT v0.c0, rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY v0.c0, rt0.c2, rt0.c0 HAVING ((TOTAL(GROUP_CONCAT(MAX(TOTAL(v0.c0))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c0)OR(x'6090')))OR(x'')))<=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((((vt0.c0)OR(x'6090')))OR(x'')))<=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((((((((vt0.c0)OR(x'6090')))OR(x'')))<=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c0))) ISNULL)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c0))) ISNULL)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c0))) ISNULL)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE (((((rt0.c1)<<('\nV\x'))) NOT BETWEEN (LIKELY(rt0.c1)) AND (CAST(rt0.c2 AS TEXT)))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c1)<<('\nV\x'))) NOT BETWEEN (LIKELY(rt0.c1)) AND (CAST(rt0.c2 AS TEXT)))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE (((((((rt0.c1)<<('\nV\x'))) NOT BETWEEN (LIKELY(rt0.c1)) AND (CAST(rt0.c2 AS TEXT)))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING SUM(rt0.c1) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (SUM(rt0.c1))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((SUM(rt0.c1)) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING SUM(rt0.c1) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (SUM(rt0.c1))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((SUM(rt0.c1)) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON SQLITE_VERSION() LEFT OUTER JOIN v0 ON ((rt0.c2 COLLATE RTRIM)-(((v0.c0)*(rt0.c1))));
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON SQLITE_VERSION() LEFT OUTER JOIN v0 ON ((rt0.c2 COLLATE RTRIM)-(((v0.c0)*(rt0.c1)))) WHERE (LTRIM(LIKE(rt0.c0, v0.c0, ')'), rt0.c1)) UNION ALL SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON SQLITE_VERSION() LEFT OUTER JOIN v0 ON ((rt0.c2 COLLATE RTRIM)-(((v0.c0)*(rt0.c1)))) WHERE ((NOT (LTRIM(LIKE(rt0.c0, v0.c0, ')'), rt0.c1)))) UNION ALL SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON SQLITE_VERSION() LEFT OUTER JOIN v0 ON ((rt0.c2 COLLATE RTRIM)-(((v0.c0)*(rt0.c1)))) WHERE (((LTRIM(LIKE(rt0.c0, v0.c0, ')'), rt0.c1)) ISNULL));
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON SQLITE_VERSION() LEFT OUTER JOIN v0 ON ((rt0.c2 COLLATE RTRIM)-(((v0.c0)*(rt0.c1))));
SELECT DISTINCT vt0.c0, rt0.c2, rt0.c0, v0.c0, rt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON (((((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))AND(((8.44966587E8) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((((((((vt0.c0)AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c0)))) INNER JOIN v0 ON (((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)) IN ());
SELECT DISTINCT vt0.c0, rt0.c2, rt0.c0, v0.c0, rt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON (((((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))AND(((8.44966587E8) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((((((((vt0.c0)AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c0)))) INNER JOIN v0 ON (((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)) IN ()) WHERE (((((rt0.c1) ISNULL)) NOTNULL)) UNION SELECT DISTINCT vt0.c0, rt0.c2, rt0.c0, v0.c0, rt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON (((((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))AND(((8.44966587E8) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((((((((vt0.c0)AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c0)))) INNER JOIN v0 ON (((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)) IN ()) WHERE ((NOT (((((rt0.c1) ISNULL)) NOTNULL)))) UNION SELECT DISTINCT vt0.c0, rt0.c2, rt0.c0, v0.c0, rt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON (((((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))AND(((8.44966587E8) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((((((((vt0.c0)AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c0)))) INNER JOIN v0 ON (((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)) IN ()) WHERE (((((((rt0.c1) ISNULL)) NOTNULL)) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c2, rt0.c0, v0.c0, rt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON (((((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))AND(((8.44966587E8) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((((((((vt0.c0)AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c0)))) INNER JOIN v0 ON (((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)) IN ());
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((rt0.c1)GLOB(rt0.c2)) COLLATE BINARY) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c1)GLOB(rt0.c2)) COLLATE BINARY))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((rt0.c1)GLOB(rt0.c2)) COLLATE BINARY) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING 'fyj' UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ('fyj')) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (('fyj') ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING 'fyj' UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ('fyj')) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (('fyj') ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT * FROM vt0, v0, rt0;
SELECT ALL * FROM vt0, v0, rt0 WHERE ((((- (rt0.c2))) BETWEEN (CASE WHEN vt0.c0 THEN rt0.c1 ELSE vt0.c0 END) AND (('' IN ())))) UNION ALL SELECT ALL * FROM vt0, v0, rt0 WHERE ((NOT ((((- (rt0.c2))) BETWEEN (CASE WHEN vt0.c0 THEN rt0.c1 ELSE vt0.c0 END) AND (('' IN ())))))) UNION ALL SELECT ALL * FROM vt0, v0, rt0 WHERE ((((((- (rt0.c2))) BETWEEN (CASE WHEN vt0.c0 THEN rt0.c1 ELSE vt0.c0 END) AND (('' IN ())))) ISNULL));
SELECT * FROM vt0, v0, rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0, v0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0, v0 WHERE ((((v0.c0)<<(v0.c0)) IN ())) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0, v0 WHERE ((NOT ((((v0.c0)<<(v0.c0)) IN ())))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0, v0 WHERE ((((((v0.c0)<<(v0.c0)) IN ())) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0, v0;
SELECT vt0.c0 FROM v0 LEFT OUTER JOIN rt0 ON CAST(((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c1)) AS INTEGER) RIGHT OUTER JOIN vt0 ON CASE ((rt0.c1)>=(v0.c0))  WHEN (((v0.c0))<((rt0.c2))) THEN (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((0xffffffffe04ca136))) ELSE UNLIKELY(rt0.c1) END GROUP BY vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING vt0.c0 UNION ALL SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING vt0.c0 UNION ALL SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((((rt0.c1)=(rt0.c2)) IN ())) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c1)==(rt0.c2)) IN ())))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((((((rt0.c1)==(rt0.c2)) IN ())) ISNULL));
SELECT ALL rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE (((((((vt0.c0)>>(v0.c0)))OR(((vt0.c0)LIKE(vt0.c0)))))OR(CASE WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN 1.009386321E9 WHEN v0.c0 THEN vt0.c0 END))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT (((((((vt0.c0)>>(v0.c0)))OR(((vt0.c0)LIKE(vt0.c0)))))OR(CASE WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN 1.009386321E9 WHEN v0.c0 THEN vt0.c0 END))))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE (((((((((vt0.c0)>>(v0.c0)))OR(((vt0.c0)LIKE(vt0.c0)))))OR(CASE WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN 1.009386321E9 WHEN v0.c0 THEN vt0.c0 END))) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((~ (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((~ (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((~ (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT rt0.c0, rt0.c2, vt0.c0, rt0.c1 FROM rt0, vt0;
SELECT ALL rt0.c0, rt0.c2, vt0.c0, rt0.c1 FROM rt0, vt0 WHERE ((((rt0.c2)) BETWEEN ((UNLIKELY(rt0.c2))) AND ((0X25d97f84)))) UNION ALL SELECT ALL rt0.c0, rt0.c2, vt0.c0, rt0.c1 FROM rt0, vt0 WHERE ((NOT ((((rt0.c2)) BETWEEN ((UNLIKELY(rt0.c2))) AND ((0x25d97f84)))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, vt0.c0, rt0.c1 FROM rt0, vt0 WHERE ((((((rt0.c2)) BETWEEN ((UNLIKELY(rt0.c2))) AND ((0X25d97f84)))) ISNULL));
SELECT rt0.c0, rt0.c2, vt0.c0, rt0.c1 FROM rt0, vt0;
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE (CAST('' AS INTEGER)) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT (CAST('' AS INTEGER)))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE (((CAST('' AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c2, v0.c0;
SELECT ALL rt0.c2, v0.c0 FROM rt0, v0 WHERE (v0.c0) GROUP BY rt0.c2, v0.c0 UNION SELECT rt0.c2, v0.c0 FROM rt0, v0 WHERE ((NOT (v0.c0))) GROUP BY rt0.c2, v0.c0 UNION SELECT rt0.c2, v0.c0 FROM rt0, v0 WHERE (((v0.c0) ISNULL)) GROUP BY rt0.c2, v0.c0;
SELECT rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c2, v0.c0;
SELECT ALL v0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY v0.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT v0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY v0.c0, rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (TYPEOF(TOTAL(SUM(rt0.c0))))) UNION ALL SELECT ALL v0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY v0.c0, rt0.c2, rt0.c1, rt0.c0 HAVING (NOT ((NOT (TYPEOF(TOTAL(SUM(rt0.c0))))))) UNION ALL SELECT ALL v0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY v0.c0, rt0.c2, rt0.c1, rt0.c0 HAVING (((NOT (TYPEOF(TOTAL(SUM(rt0.c0)))))) ISNULL);
SELECT vt0.c0, rt0.c1, v0.c0, rt0.c2, rt0.c0 FROM vt0, v0, rt0;
SELECT vt0.c0, rt0.c1, v0.c0, rt0.c2, rt0.c0 FROM vt0, v0, rt0 WHERE (((GLOB(vt0.c0, v0.c0)) BETWEEN ((v0.c0 IN ())) AND (((-1.988007864E9)%(rt0.c2))))) UNION ALL SELECT ALL vt0.c0, rt0.c1, v0.c0, rt0.c2, rt0.c0 FROM vt0, v0, rt0 WHERE ((NOT (((GLOB(vt0.c0, v0.c0)) BETWEEN ((v0.c0 IN ())) AND (((-1.988007864E9)%(rt0.c2))))))) UNION ALL SELECT vt0.c0, rt0.c1, v0.c0, rt0.c2, rt0.c0 FROM vt0, v0, rt0 WHERE (((((GLOB(vt0.c0, v0.c0)) BETWEEN ((v0.c0 IN ())) AND (((-1.988007864E9)%(rt0.c2))))) ISNULL));
SELECT vt0.c0, rt0.c1, v0.c0, rt0.c2, rt0.c0 FROM vt0, v0, rt0;
SELECT DISTINCT vt0.c0 FROM v0, rt0, vt0;
SELECT DISTINCT vt0.c0 FROM v0, rt0, vt0 WHERE (((((((((((((((rt0.c2)AND(vt0.c0)))OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c1)))AND(vt0.c0)))<<(((((rt0.c0)OR(rt0.c0)))AND(rt0.c2))))) UNION SELECT DISTINCT vt0.c0 FROM v0, rt0, vt0 WHERE ((NOT (((((((((((((((rt0.c2)AND(vt0.c0)))OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c1)))AND(vt0.c0)))<<(((((rt0.c0)OR(rt0.c0)))AND(rt0.c2))))))) UNION SELECT DISTINCT vt0.c0 FROM v0, rt0, vt0 WHERE (((((((((((((((((rt0.c2)AND(vt0.c0)))OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c1)))AND(vt0.c0)))<<(((((rt0.c0)OR(rt0.c0)))AND(rt0.c2))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM v0, rt0, vt0;
SELECT ALL rt0.c1, rt0.c0, v0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0, v0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, v0.c0, rt0.c2 FROM rt0, v0 WHERE (CASE ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(rt0.c1)))OR(rt0.c1))  WHEN SQLITE_COMPILEOPTION_USED(rt0.c2) THEN rt0.c0 WHEN CAST(rt0.c2 AS REAL) THEN v0.c0 COLLATE RTRIM WHEN CASE WHEN v0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 ELSE v0.c0 END THEN CASE WHEN rt0.c2 THEN rt0.c2 ELSE v0.c0 END ELSE CASE WHEN rt0.c2 THEN rt0.c1 ELSE v0.c0 END END) GROUP BY rt0.c1, rt0.c0, v0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, v0.c0, rt0.c2 FROM rt0, v0 WHERE ((NOT (CASE ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(rt0.c1)))OR(rt0.c1))  WHEN SQLITE_COMPILEOPTION_USED(rt0.c2) THEN rt0.c0 WHEN CAST(rt0.c2 AS REAL) THEN v0.c0 COLLATE RTRIM WHEN CASE WHEN v0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 ELSE v0.c0 END THEN CASE WHEN rt0.c2 THEN rt0.c2 ELSE v0.c0 END ELSE CASE WHEN rt0.c2 THEN rt0.c1 ELSE v0.c0 END END))) GROUP BY rt0.c1, rt0.c0, v0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, v0.c0, rt0.c2 FROM rt0, v0 WHERE (((CASE ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(rt0.c1)))OR(rt0.c1))  WHEN SQLITE_COMPILEOPTION_USED(rt0.c2) THEN rt0.c0 WHEN CAST(rt0.c2 AS REAL) THEN v0.c0 COLLATE RTRIM WHEN CASE WHEN v0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 ELSE v0.c0 END THEN CASE WHEN rt0.c2 THEN rt0.c2 ELSE v0.c0 END ELSE CASE WHEN rt0.c2 THEN rt0.c1 ELSE v0.c0 END END) ISNULL)) GROUP BY rt0.c1, rt0.c0, v0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, v0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0, v0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2 HAVING MAX(MAX(MAX(rt0.c2))) UNION ALL SELECT rt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (MAX(MAX(MAX(rt0.c2))))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((MAX(MAX(MAX(rt0.c2)))) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM rt0 FULL OUTER JOIN vt0 ON CASE vt0.c0 COLLATE RTRIM  WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c0)) THEN CAST(vt0.c0 AS TEXT) WHEN CAST(rt0.c0 AS REAL) THEN (((rt0.c0))!=((rt0.c2))) WHEN rt0.c2 COLLATE BINARY THEN NULL WHEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN -4.84581487E8 END THEN ((rt0.c1) IS TRUE) WHEN ((rt0.c0)!=(vt0.c0)) THEN CAST(rt0.c0 AS TEXT) ELSE ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) END;
SELECT rt0.c0, rt0.c2 FROM rt0 FULL OUTER JOIN vt0 ON CASE vt0.c0 COLLATE RTRIM  WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c0)) THEN CAST(vt0.c0 AS TEXT) WHEN CAST(rt0.c0 AS REAL) THEN (((rt0.c0))<>((rt0.c2))) WHEN rt0.c2 COLLATE BINARY THEN NULL WHEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN -4.84581487E8 END THEN ((rt0.c1) IS TRUE) WHEN ((rt0.c0)<>(vt0.c0)) THEN CAST(rt0.c0 AS TEXT) ELSE ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) END WHERE ((((rt0.c0) NOTNULL) IN ())) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 FULL OUTER JOIN vt0 ON CASE vt0.c0 COLLATE RTRIM  WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c0)) THEN CAST(vt0.c0 AS TEXT) WHEN CAST(rt0.c0 AS REAL) THEN (((rt0.c0))!=((rt0.c2))) WHEN rt0.c2 COLLATE BINARY THEN NULL WHEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN -4.84581487E8 END THEN ((rt0.c1) IS TRUE) WHEN ((rt0.c0)<>(vt0.c0)) THEN CAST(rt0.c0 AS TEXT) ELSE ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) END WHERE ((NOT ((((rt0.c0) NOTNULL) IN ())))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 FULL OUTER JOIN vt0 ON CASE vt0.c0 COLLATE RTRIM  WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c0)) THEN CAST(vt0.c0 AS TEXT) WHEN CAST(rt0.c0 AS REAL) THEN (((rt0.c0))!=((rt0.c2))) WHEN rt0.c2 COLLATE BINARY THEN NULL WHEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN -4.84581487E8 END THEN ((rt0.c1) IS TRUE) WHEN ((rt0.c0)<>(vt0.c0)) THEN CAST(rt0.c0 AS TEXT) ELSE ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) END WHERE ((((((rt0.c0) NOTNULL) IN ())) ISNULL));
SELECT ALL rt0.c0, rt0.c2 FROM rt0 FULL OUTER JOIN vt0 ON CASE vt0.c0 COLLATE RTRIM  WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c0)) THEN CAST(vt0.c0 AS TEXT) WHEN CAST(rt0.c0 AS REAL) THEN (((rt0.c0))!=((rt0.c2))) WHEN rt0.c2 COLLATE BINARY THEN NULL WHEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN -4.84581487E8 END THEN ((rt0.c1) IS TRUE) WHEN ((rt0.c0)!=(vt0.c0)) THEN CAST(rt0.c0 AS TEXT) ELSE ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) END;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((+ (rt0.c2))) ISNULL)) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((((+ (rt0.c2))) ISNULL)))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((((+ (rt0.c2))) ISNULL)) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ('32242111') GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ('32242111'))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((('32242111') ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0, vt0.c0;
SELECT rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0, vt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0, vt0.c0;
SELECT rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0, vt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0, vt0.c0;
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0)>(vt0.c0))) NOTNULL)) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0)>(vt0.c0))) NOTNULL)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c0)>(vt0.c0))) NOTNULL)) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((x'39e2e2b3') BETWEEN (vt0.c0) AND (vt0.c0)))IS(x''))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((x'39e2e2b3') BETWEEN (vt0.c0) AND (vt0.c0)))IS(x''))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((x'39e2e2b3') BETWEEN (vt0.c0) AND (vt0.c0)))IS(x''))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((+ (((vt0.c0)/(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((+ (((vt0.c0)/(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((+ (((vt0.c0)/(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING rt0.c0 UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (rt0.c0)) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((rt0.c0) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING rt0.c0 UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (rt0.c0)) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((rt0.c0) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (x'4bbf') UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (x'4bbf'))) UNION ALL SELECT ALL * FROM vt0 WHERE (((x'4bbf') ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE (rt0.c0) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c0, vt0.c0, rt0.c2, v0.c0 FROM v0, rt0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c2, v0.c0;
SELECT ALL rt0.c0, vt0.c0, rt0.c2, v0.c0 FROM v0, rt0, vt0 WHERE (((((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))<(CASE WHEN rt0.c0 THEN x'' ELSE rt0.c1 END))) GROUP BY rt0.c0, vt0.c0, rt0.c2, v0.c0 UNION SELECT ALL rt0.c0, vt0.c0, rt0.c2, v0.c0 FROM v0, rt0, vt0 WHERE ((NOT (((((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))<(CASE WHEN rt0.c0 THEN x'' ELSE rt0.c1 END))))) GROUP BY rt0.c0, vt0.c0, rt0.c2, v0.c0 UNION SELECT ALL rt0.c0, vt0.c0, rt0.c2, v0.c0 FROM v0, rt0, vt0 WHERE (((((((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))<(CASE WHEN rt0.c0 THEN x'' ELSE rt0.c1 END))) ISNULL)) GROUP BY rt0.c0, vt0.c0, rt0.c2, v0.c0;
SELECT ALL rt0.c0, vt0.c0, rt0.c2, v0.c0 FROM v0, rt0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c2, v0.c0;
SELECT rt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON json_array_length(CAST(rt0.c0 AS BLOB), (((vt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON json_array_length(CAST(rt0.c0 AS BLOB), (((vt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))) GROUP BY rt0.c0 HAVING SUM('474262751') UNION ALL SELECT ALL rt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON json_array_length(CAST(rt0.c0 AS BLOB), (((vt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))) GROUP BY rt0.c0 HAVING (NOT (SUM('474262751'))) UNION ALL SELECT ALL rt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON json_array_length(CAST(rt0.c0 AS BLOB), (((vt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))) GROUP BY rt0.c0 HAVING ((SUM('474262751')) ISNULL);
SELECT rt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON json_array_length(CAST(rt0.c0 AS BLOB), (((vt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON json_array_length(CAST(rt0.c0 AS BLOB), (((vt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))) GROUP BY rt0.c0 HAVING SUM('474262751') UNION ALL SELECT ALL rt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON json_array_length(CAST(rt0.c0 AS BLOB), (((vt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))) GROUP BY rt0.c0 HAVING (NOT (SUM('474262751'))) UNION ALL SELECT ALL rt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON json_array_length(CAST(rt0.c0 AS BLOB), (((vt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))) GROUP BY rt0.c0 HAVING ((SUM('474262751')) ISNULL);
SELECT rt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON json_array_length(CAST(rt0.c0 AS BLOB), (((vt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))) GROUP BY rt0.c0;
SELECT ALL rt0.c1, vt0.c0, rt0.c2, v0.c0, rt0.c0 FROM rt0, v0, vt0;
SELECT rt0.c1, vt0.c0, rt0.c2, v0.c0, rt0.c0 FROM rt0, v0, vt0 WHERE (load_extension(CAST(rt0.c0 AS TEXT), NULL)) UNION ALL SELECT ALL rt0.c1, vt0.c0, rt0.c2, v0.c0, rt0.c0 FROM rt0, v0, vt0 WHERE ((NOT (load_extension(CAST(rt0.c0 AS TEXT), NULL)))) UNION ALL SELECT ALL rt0.c1, vt0.c0, rt0.c2, v0.c0, rt0.c0 FROM rt0, v0, vt0 WHERE (((load_extension(CAST(rt0.c0 AS TEXT), NULL)) ISNULL));
SELECT ALL rt0.c1, vt0.c0, rt0.c2, v0.c0, rt0.c0 FROM rt0, v0, vt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0)) BETWEEN (((+ (v0.c0)), ((v0.c0) BETWEEN (v0.c0) AND ('874955848')), 0.5934926307929883)) AND ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), v0.c0, ((((v0.c0)OR(v0.c0)))AND(v0.c0)))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((((v0.c0, v0.c0, v0.c0)) BETWEEN (((+ (v0.c0)), ((v0.c0) BETWEEN (v0.c0) AND ('874955848')), 0.5934926307929883)) AND ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), v0.c0, ((((v0.c0)OR(v0.c0)))AND(v0.c0)))))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((v0.c0, v0.c0, v0.c0)) BETWEEN (((+ (v0.c0)), ((v0.c0) BETWEEN (v0.c0) AND ('874955848')), 0.5934926307929883)) AND ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), v0.c0, ((((v0.c0)OR(v0.c0)))AND(v0.c0)))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 INNER JOIN v0 ON '}<+|OÍìé‰ñï' GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 INNER JOIN v0 ON '}<+|OÍìé‰ñï' WHERE (((((-1531260006) NOTNULL))+((- (rt0.c2))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0 INNER JOIN v0 ON '}<+|OÍìé‰ñï' WHERE ((NOT (((((-1531260006) NOTNULL))+((- (rt0.c2))))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 INNER JOIN v0 ON '}<+|OÍìé‰ñï' WHERE (((((((-1531260006) NOTNULL))+((- (rt0.c2))))) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 INNER JOIN v0 ON '}<+|OÍìé‰ñï' GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, v0.c0, rt0.c1 FROM vt0, v0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c1;
SELECT rt0.c0, v0.c0, rt0.c1 FROM vt0, v0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c1 HAVING (((COUNT(*)))==((COUNT(*)))) UNION ALL SELECT ALL rt0.c0, v0.c0, rt0.c1 FROM vt0, v0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c1 HAVING (NOT ((((COUNT(*)))=((COUNT(*)))))) UNION ALL SELECT ALL rt0.c0, v0.c0, rt0.c1 FROM vt0, v0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c1 HAVING (((((COUNT(*)))=((COUNT(*))))) ISNULL);
SELECT ALL rt0.c0, v0.c0, rt0.c1 FROM vt0, v0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c1;
SELECT rt0.c0, v0.c0, rt0.c1 FROM vt0, v0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c1 HAVING (((COUNT(*)))==((COUNT(*)))) UNION ALL SELECT ALL rt0.c0, v0.c0, rt0.c1 FROM vt0, v0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c1 HAVING (NOT ((((COUNT(*)))=((COUNT(*)))))) UNION ALL SELECT ALL rt0.c0, v0.c0, rt0.c1 FROM vt0, v0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c1 HAVING (((((COUNT(*)))=((COUNT(*))))) ISNULL);
SELECT ALL rt0.c0, v0.c0, rt0.c1 FROM vt0, v0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c1;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((rt0.c2 COLLATE BINARY)GLOB(rt0.c0))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((rt0.c2 COLLATE BINARY)GLOB(rt0.c0))))) UNION ALL SELECT * FROM rt0 WHERE (((((rt0.c2 COLLATE BINARY)GLOB(rt0.c0))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0, v0, vt0;
SELECT DISTINCT * FROM rt0, v0, vt0 WHERE ((((((rt0.c0) IS FALSE), CAST(rt0.c1 AS TEXT), CASE v0.c0  WHEN rt0.c1 THEN rt0.c2 END))<((((v0.c0)AND(rt0.c0)), (vt0.c0 IN (rt0.c0)), (rt0.c2 IN ()))))) UNION SELECT DISTINCT * FROM rt0, v0, vt0 WHERE ((NOT ((((((rt0.c0) IS FALSE), CAST(rt0.c1 AS TEXT), CASE v0.c0  WHEN rt0.c1 THEN rt0.c2 END))<((((v0.c0)AND(rt0.c0)), (vt0.c0 IN (rt0.c0)), (rt0.c2 IN ()))))))) UNION SELECT DISTINCT * FROM rt0, v0, vt0 WHERE ((((((((rt0.c0) IS FALSE), CAST(rt0.c1 AS TEXT), CASE v0.c0  WHEN rt0.c1 THEN rt0.c2 END))<((((v0.c0)AND(rt0.c0)), (vt0.c0 IN (rt0.c0)), (rt0.c2 IN ()))))) ISNULL));
SELECT DISTINCT * FROM rt0, v0, vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOTNULL)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOTNULL)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOTNULL)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING v0.c0 UNION ALL SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING ((v0.c0) ISNULL);
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING v0.c0 UNION ALL SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING ((v0.c0) ISNULL);
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT ALL * FROM vt0, v0, rt0;
SELECT ALL * FROM vt0, v0, rt0 WHERE (x'') UNION ALL SELECT * FROM vt0, v0, rt0 WHERE ((NOT (x''))) UNION ALL SELECT ALL * FROM vt0, v0, rt0 WHERE (((x'') ISNULL));
SELECT ALL * FROM vt0, v0, rt0;
SELECT DISTINCT rt0.c2, vt0.c0, rt0.c0 FROM rt0, vt0;
SELECT DISTINCT rt0.c2, vt0.c0, rt0.c0 FROM rt0, vt0 WHERE (SQLITE_VERSION()) UNION SELECT DISTINCT rt0.c2, vt0.c0, rt0.c0 FROM rt0, vt0 WHERE ((NOT (SQLITE_VERSION()))) UNION SELECT DISTINCT rt0.c2, vt0.c0, rt0.c0 FROM rt0, vt0 WHERE (((SQLITE_VERSION()) ISNULL));
SELECT DISTINCT rt0.c2, vt0.c0, rt0.c0 FROM rt0, vt0;
SELECT ALL vt0.c0, v0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, v0, vt0 GROUP BY vt0.c0, v0.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT vt0.c0, v0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, v0, vt0 WHERE ((~ ((NOT (rt0.c0))))) GROUP BY vt0.c0, v0.c0, rt0.c2, rt0.c1, rt0.c0 UNION SELECT vt0.c0, v0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, v0, vt0 WHERE ((NOT ((~ ((NOT (rt0.c0))))))) GROUP BY vt0.c0, v0.c0, rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL vt0.c0, v0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, v0, vt0 WHERE ((((~ ((NOT (rt0.c0))))) ISNULL)) GROUP BY vt0.c0, v0.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT ALL vt0.c0, v0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, v0, vt0 GROUP BY vt0.c0, v0.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT ALL vt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2, rt0.c1;
SELECT vt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2, rt0.c1 HAVING CASE NULL  WHEN HEX(MAX('-1056422361')) THEN (((rt0.c0))>((GROUP_CONCAT(MAX(rt0.c1))))) ELSE ((rt0.c2) NOT BETWEEN (SUM(GROUP_CONCAT(rt0.c0))) AND (AVG(rt0.c0))) END UNION ALL SELECT vt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2, rt0.c1 HAVING (NOT (CASE NULL  WHEN HEX(MAX('-1056422361')) THEN (((rt0.c0))>((GROUP_CONCAT(MAX(rt0.c1))))) ELSE ((rt0.c2) NOT BETWEEN (SUM(GROUP_CONCAT(rt0.c0))) AND (AVG(rt0.c0))) END)) UNION ALL SELECT vt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2, rt0.c1 HAVING ((CASE NULL  WHEN HEX(MAX('-1056422361')) THEN (((rt0.c0))>((GROUP_CONCAT(MAX(rt0.c1))))) ELSE ((rt0.c2) NOT BETWEEN (SUM(GROUP_CONCAT(rt0.c0))) AND (AVG(rt0.c0))) END) ISNULL);
SELECT ALL * FROM vt0, rt0;
SELECT ALL * FROM vt0, rt0 WHERE (((((vt0.c0)+(rt0.c2))) IS FALSE)) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE ((NOT (((((vt0.c0)+(rt0.c2))) IS FALSE)))) UNION ALL SELECT * FROM vt0, rt0 WHERE (((((((vt0.c0)+(rt0.c2))) IS FALSE)) ISNULL));
SELECT ALL * FROM vt0, rt0;
SELECT DISTINCT v0.c0, vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON NULL INNER JOIN rt0 ON CASE WHEN vt0.c0 COLLATE BINARY THEN rt0.c2 WHEN ((rt0.c0)LIKE(rt0.c1)) THEN (NOT (v0.c0)) WHEN x'abd7' THEN '' ELSE ((0xfffffffff4aba7dd) ISNULL) END;
SELECT DISTINCT v0.c0, vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON NULL INNER JOIN rt0 ON CASE WHEN vt0.c0 COLLATE BINARY THEN rt0.c2 WHEN ((rt0.c0)LIKE(rt0.c1)) THEN (NOT (v0.c0)) WHEN x'abd7' THEN '' ELSE ((0Xfffffffff4aba7dd) ISNULL) END WHERE ('rC0P(L|(') UNION SELECT DISTINCT v0.c0, vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON NULL INNER JOIN rt0 ON CASE WHEN vt0.c0 COLLATE BINARY THEN rt0.c2 WHEN ((rt0.c0)LIKE(rt0.c1)) THEN (NOT (v0.c0)) WHEN x'abd7' THEN '' ELSE ((0Xfffffffff4aba7dd) ISNULL) END WHERE ((NOT ('rC0P(L|('))) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON NULL INNER JOIN rt0 ON CASE WHEN vt0.c0 COLLATE BINARY THEN rt0.c2 WHEN ((rt0.c0)LIKE(rt0.c1)) THEN (NOT (v0.c0)) WHEN x'abd7' THEN '' ELSE ((0xfffffffff4aba7dd) ISNULL) END WHERE ((('rC0P(L|(') ISNULL));
SELECT DISTINCT v0.c0, vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON NULL INNER JOIN rt0 ON CASE WHEN vt0.c0 COLLATE BINARY THEN rt0.c2 WHEN ((rt0.c0)LIKE(rt0.c1)) THEN (NOT (v0.c0)) WHEN x'abd7' THEN '' ELSE ((0xfffffffff4aba7dd) ISNULL) END;
SELECT rt0.c0 FROM v0, rt0, vt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM v0, rt0, vt0 WHERE (((x'')+(CAST(v0.c0 AS TEXT)))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM v0, rt0, vt0 WHERE ((NOT (((x'')+(CAST(v0.c0 AS TEXT)))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM v0, rt0, vt0 WHERE (((((x'')+(CAST(v0.c0 AS TEXT)))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM v0, rt0, vt0 GROUP BY rt0.c0;
SELECT ALL vt0.c0, rt0.c0, rt0.c1 FROM vt0 INNER JOIN rt0 ON CASE WHEN ((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c2)) THEN QUOTE(vt0.c0) ELSE (rt0.c2 IN ()) END GROUP BY vt0.c0, rt0.c0, rt0.c1;
SELECT ALL vt0.c0, rt0.c0, rt0.c1 FROM vt0 INNER JOIN rt0 ON CASE WHEN ((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c2)) THEN QUOTE(vt0.c0) ELSE (rt0.c2 IN ()) END GROUP BY vt0.c0, rt0.c0, rt0.c1 HAVING COUNT(MIN(MIN(MAX(vt0.c0))) COLLATE BINARY) UNION ALL SELECT ALL vt0.c0, rt0.c0, rt0.c1 FROM vt0 INNER JOIN rt0 ON CASE WHEN ((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c2)) THEN QUOTE(vt0.c0) ELSE (rt0.c2 IN ()) END GROUP BY vt0.c0, rt0.c0, rt0.c1 HAVING (NOT (COUNT(MIN(MIN(MAX(vt0.c0))) COLLATE BINARY))) UNION ALL SELECT ALL vt0.c0, rt0.c0, rt0.c1 FROM vt0 INNER JOIN rt0 ON CASE WHEN ((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c2)) THEN QUOTE(vt0.c0) ELSE (rt0.c2 IN ()) END GROUP BY vt0.c0, rt0.c0, rt0.c1 HAVING ((COUNT(MIN(MIN(MAX(vt0.c0))) COLLATE BINARY)) ISNULL);
SELECT v0.c0, rt0.c0 FROM v0, rt0;
SELECT ALL v0.c0, rt0.c0 FROM v0, rt0 WHERE ((- (((((rt0.c1)OR(0x3bbe715a)))OR(rt0.c0))))) UNION ALL SELECT v0.c0, rt0.c0 FROM v0, rt0 WHERE ((NOT ((- (((((rt0.c1)OR(0X3bbe715a)))OR(rt0.c0))))))) UNION ALL SELECT v0.c0, rt0.c0 FROM v0, rt0 WHERE ((((- (((((rt0.c1)OR(0x3bbe715a)))OR(rt0.c0))))) ISNULL));
SELECT v0.c0, rt0.c0 FROM v0, rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((-1288070802) IS TRUE)) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((-1288070802) IS TRUE)))) UNION SELECT DISTINCT * FROM v0 WHERE (((((-1288070802) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((- ((- (v0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((- ((- (v0.c0))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((- ((- (v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2 HAVING GROUP_CONCAT(COUNT(rt0.c1)) UNION ALL SELECT ALL rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2 HAVING (NOT (GROUP_CONCAT(COUNT(rt0.c1)))) UNION ALL SELECT rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2 HAVING ((GROUP_CONCAT(COUNT(rt0.c1))) ISNULL);
SELECT vt0.c0 FROM rt0, vt0;
SELECT ALL vt0.c0 FROM rt0, vt0 WHERE (NULL) UNION ALL SELECT vt0.c0 FROM rt0, vt0 WHERE ((NOT (NULL))) UNION ALL SELECT vt0.c0 FROM rt0, vt0 WHERE (((NULL) ISNULL));
SELECT vt0.c0 FROM rt0, vt0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE (CAST(rt0.c2 COLLATE BINARY AS BLOB)) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT (CAST(rt0.c2 COLLATE BINARY AS BLOB)))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((CAST(rt0.c2 COLLATE BINARY AS BLOB)) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT rt0.c2, rt0.c1 FROM rt0, vt0, v0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0, vt0, v0 WHERE (NULL COLLATE NOCASE COLLATE BINARY) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0, vt0, v0 WHERE ((NOT (NULL COLLATE NOCASE COLLATE BINARY))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0, vt0, v0 WHERE (((NULL COLLATE NOCASE COLLATE BINARY) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0, vt0, v0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, v0.c0, rt0.c0 FROM rt0, v0, vt0 GROUP BY rt0.c2, v0.c0, rt0.c0;
SELECT ALL rt0.c2, v0.c0, rt0.c0 FROM rt0, v0, vt0 GROUP BY rt0.c2, v0.c0, rt0.c0 HAVING (((AVG(SUM(rt0.c1))))>((GROUP_CONCAT(TOTAL(NULL))))) UNION ALL SELECT rt0.c2, v0.c0, rt0.c0 FROM rt0, v0, vt0 GROUP BY rt0.c2, v0.c0, rt0.c0 HAVING (NOT ((((AVG(SUM(rt0.c1))))>((GROUP_CONCAT(TOTAL(NULL))))))) UNION ALL SELECT rt0.c2, v0.c0, rt0.c0 FROM rt0, v0, vt0 GROUP BY rt0.c2, v0.c0, rt0.c0 HAVING (((((AVG(SUM(rt0.c1))))>((GROUP_CONCAT(TOTAL(NULL)))))) ISNULL);
SELECT ALL * FROM rt0, vt0;
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c0) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((NOT (rt0.c0))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE (((rt0.c0) ISNULL));
SELECT ALL * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON (((vt0.c0)LIKE(rt0.c1)) IN ()) FULL OUTER JOIN v0 ON ((vt0.c0)<<(IFNULL(rt0.c0, rt0.c2)));
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON (((vt0.c0)LIKE(rt0.c1)) IN ()) FULL OUTER JOIN v0 ON ((vt0.c0)<<(IFNULL(rt0.c0, rt0.c2))) WHERE (((((((rt0.c2))>((v0.c0))), ((v0.c0)AND(rt0.c2)), ((rt0.c0) ISNULL)))==((((rt0.c2)/('539351834')), vt0.c0 COLLATE BINARY, vt0.c0 COLLATE BINARY)))) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON (((vt0.c0)LIKE(rt0.c1)) IN ()) FULL OUTER JOIN v0 ON ((vt0.c0)<<(IFNULL(rt0.c0, rt0.c2))) WHERE ((NOT (((((((rt0.c2))>((v0.c0))), ((v0.c0)AND(rt0.c2)), ((rt0.c0) ISNULL)))==((((rt0.c2)/('539351834')), vt0.c0 COLLATE BINARY, vt0.c0 COLLATE BINARY)))))) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON (((vt0.c0)LIKE(rt0.c1)) IN ()) FULL OUTER JOIN v0 ON ((vt0.c0)<<(IFNULL(rt0.c0, rt0.c2))) WHERE (((((((((rt0.c2))>((v0.c0))), ((v0.c0)AND(rt0.c2)), ((rt0.c0) ISNULL)))==((((rt0.c2)/('539351834')), vt0.c0 COLLATE BINARY, vt0.c0 COLLATE BINARY)))) ISNULL));
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON (((vt0.c0)LIKE(rt0.c1)) IN ()) FULL OUTER JOIN v0 ON ((vt0.c0)<<(IFNULL(rt0.c0, rt0.c2)));
SELECT v0.c0, rt0.c2, vt0.c0, rt0.c1 FROM vt0 RIGHT OUTER JOIN rt0 ON x'3be6' FULL OUTER JOIN v0 ON CAST(((x'')|(vt0.c0)) AS NUMERIC) GROUP BY v0.c0, rt0.c2, vt0.c0, rt0.c1;
SELECT v0.c0, rt0.c2, vt0.c0, rt0.c1 FROM vt0 RIGHT OUTER JOIN rt0 ON x'3be6' FULL OUTER JOIN v0 ON CAST(((x'')|(vt0.c0)) AS NUMERIC) WHERE ((json_array(rt0.c2, rt0.c1, vt0.c0, rt0.c0) IN ())) GROUP BY v0.c0, rt0.c2, vt0.c0, rt0.c1 UNION SELECT v0.c0, rt0.c2, vt0.c0, rt0.c1 FROM vt0 RIGHT OUTER JOIN rt0 ON x'3be6' FULL OUTER JOIN v0 ON CAST(((x'')|(vt0.c0)) AS NUMERIC) WHERE ((NOT ((json_array(rt0.c2, rt0.c1, vt0.c0, rt0.c0) IN ())))) GROUP BY v0.c0, rt0.c2, vt0.c0, rt0.c1 UNION SELECT ALL v0.c0, rt0.c2, vt0.c0, rt0.c1 FROM vt0 RIGHT OUTER JOIN rt0 ON x'3be6' FULL OUTER JOIN v0 ON CAST(((x'')|(vt0.c0)) AS NUMERIC) WHERE ((((json_array(rt0.c2, rt0.c1, vt0.c0, rt0.c0) IN ())) ISNULL)) GROUP BY v0.c0, rt0.c2, vt0.c0, rt0.c1;
SELECT v0.c0, rt0.c2, vt0.c0, rt0.c1 FROM vt0 RIGHT OUTER JOIN rt0 ON x'3be6' FULL OUTER JOIN v0 ON CAST(((x'')|(vt0.c0)) AS NUMERIC) GROUP BY v0.c0, rt0.c2, vt0.c0, rt0.c1;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING GROUP_CONCAT(((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (GROUP_CONCAT(((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))))) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING ((GROUP_CONCAT(((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))) ISNULL);
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING GROUP_CONCAT(((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (GROUP_CONCAT(((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))))) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING ((GROUP_CONCAT(((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))) ISNULL);
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT rt0.c1, rt0.c0 FROM vt0, rt0, v0;
SELECT rt0.c1, rt0.c0 FROM vt0, rt0, v0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN rt0.c0 END)>>(CAST(rt0.c1 AS TEXT)))) UNION ALL SELECT rt0.c1, rt0.c0 FROM vt0, rt0, v0 WHERE ((NOT (((CASE vt0.c0  WHEN vt0.c0 THEN rt0.c0 END)>>(CAST(rt0.c1 AS TEXT)))))) UNION ALL SELECT rt0.c1, rt0.c0 FROM vt0, rt0, v0 WHERE (((((CASE vt0.c0  WHEN vt0.c0 THEN rt0.c0 END)>>(CAST(rt0.c1 AS TEXT)))) ISNULL));
SELECT rt0.c1, rt0.c0 FROM vt0, rt0, v0;
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN rt0 ON ((((((rt0.c1)AND(vt0.c0)))OR(v0.c0)))=((((rt0.c2))>=((v0.c0))))) CROSS JOIN v0 ON CAST((NOT (rt0.c2)) AS NUMERIC);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE (((((rt0.c2)IS(rt0.c0))) IS FALSE)) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c2)IS(rt0.c0))) IS FALSE)))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE (((((((rt0.c2)IS(rt0.c0))) IS FALSE)) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c0, vt0.c0 FROM v0, rt0, vt0 GROUP BY rt0.c0, vt0.c0;
SELECT rt0.c0, vt0.c0 FROM v0, rt0, vt0 GROUP BY rt0.c0, vt0.c0 HAVING SUM(((vt0.c0) IS FALSE)) UNION ALL SELECT ALL rt0.c0, vt0.c0 FROM v0, rt0, vt0 GROUP BY rt0.c0, vt0.c0 HAVING (NOT (SUM(((vt0.c0) IS FALSE)))) UNION ALL SELECT rt0.c0, vt0.c0 FROM v0, rt0, vt0 GROUP BY rt0.c0, vt0.c0 HAVING ((SUM(((vt0.c0) IS FALSE))) ISNULL);
SELECT ALL rt0.c0, vt0.c0 FROM v0, rt0, vt0 GROUP BY rt0.c0, vt0.c0;
SELECT rt0.c0, vt0.c0 FROM v0, rt0, vt0 GROUP BY rt0.c0, vt0.c0 HAVING SUM(((vt0.c0) IS FALSE)) UNION ALL SELECT ALL rt0.c0, vt0.c0 FROM v0, rt0, vt0 GROUP BY rt0.c0, vt0.c0 HAVING (NOT (SUM(((vt0.c0) IS FALSE)))) UNION ALL SELECT rt0.c0, vt0.c0 FROM v0, rt0, vt0 GROUP BY rt0.c0, vt0.c0 HAVING ((SUM(((vt0.c0) IS FALSE))) ISNULL);
SELECT ALL rt0.c0, vt0.c0 FROM v0, rt0, vt0 GROUP BY rt0.c0, vt0.c0;
SELECT v0.c0 FROM rt0, vt0, v0;
SELECT v0.c0 FROM rt0, vt0, v0 WHERE ('') UNION ALL SELECT ALL v0.c0 FROM rt0, vt0, v0 WHERE ((NOT (''))) UNION ALL SELECT ALL v0.c0 FROM rt0, vt0, v0 WHERE ((('') ISNULL));
SELECT v0.c0 FROM rt0, vt0, v0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (((((x'3458') NOT BETWEEN (v0.c0) AND (rt0.c0))) NOTNULL)) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (((((x'3458') NOT BETWEEN (v0.c0) AND (rt0.c0))) NOTNULL)))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((((((x'3458') NOT BETWEEN (v0.c0) AND (rt0.c0))) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((((rt0.c1))>((rt0.c0)))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c1))>((rt0.c0)))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((((((rt0.c1))>((rt0.c0)))) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2, v0.c0, rt0.c0 FROM v0, vt0, rt0 GROUP BY rt0.c1, rt0.c2, v0.c0, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, v0.c0, rt0.c0 FROM v0, vt0, rt0 GROUP BY rt0.c1, rt0.c2, v0.c0, rt0.c0 HAVING MAX(COUNT(vt0.c0), (TOTAL(GROUP_CONCAT(GROUP_CONCAT(MIN(rt0.c0)))) IN (vt0.c0))) UNION ALL SELECT ALL rt0.c1, rt0.c2, v0.c0, rt0.c0 FROM v0, vt0, rt0 GROUP BY rt0.c1, rt0.c2, v0.c0, rt0.c0 HAVING (NOT (MAX(COUNT(vt0.c0), (TOTAL(GROUP_CONCAT(GROUP_CONCAT(MIN(rt0.c0)))) IN (vt0.c0))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, v0.c0, rt0.c0 FROM v0, vt0, rt0 GROUP BY rt0.c1, rt0.c2, v0.c0, rt0.c0 HAVING ((MAX(COUNT(vt0.c0), (TOTAL(GROUP_CONCAT(GROUP_CONCAT(MIN(rt0.c0)))) IN (vt0.c0)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((('')<((((NULL)) BETWEEN ((vt0.c0)) AND ((NULL)))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((('')<((((NULL)) BETWEEN ((vt0.c0)) AND ((NULL)))))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((('')<((((NULL)) BETWEEN ((vt0.c0)) AND ((NULL)))))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (CAST(((v0.c0)-(v0.c0)) AS NUMERIC)) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (CAST(((v0.c0)-(v0.c0)) AS NUMERIC)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((CAST(((v0.c0)-(v0.c0)) AS NUMERIC)) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (CASE WHEN (+ (v0.c0)) THEN (+ (v0.c0)) ELSE ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (CASE WHEN (+ (v0.c0)) THEN (+ (v0.c0)) ELSE ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((CASE WHEN (+ (v0.c0)) THEN (+ (v0.c0)) ELSE ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0, rt0.c0 FROM v0, rt0 GROUP BY v0.c0, rt0.c0;
SELECT v0.c0, rt0.c0 FROM v0, rt0 GROUP BY v0.c0, rt0.c0 HAVING TOTAL(COUNT(rt0.c0)) UNION ALL SELECT ALL v0.c0, rt0.c0 FROM v0, rt0 GROUP BY v0.c0, rt0.c0 HAVING (NOT (TOTAL(COUNT(rt0.c0)))) UNION ALL SELECT v0.c0, rt0.c0 FROM v0, rt0 GROUP BY v0.c0, rt0.c0 HAVING ((TOTAL(COUNT(rt0.c0))) ISNULL);
SELECT vt0.c0, rt0.c1, v0.c0, rt0.c0, rt0.c2 FROM v0 RIGHT OUTER JOIN rt0 ON ((((((rt0.c0)OR(rt0.c2)))OR(0.0776815158169698)))<(((rt0.c0)<(rt0.c0)))) RIGHT OUTER JOIN vt0 ON ((GLOB(rt0.c2, rt0.c2))/((((x''))<((NULL)))));
SELECT ALL vt0.c0, rt0.c1, v0.c0, rt0.c0, rt0.c2 FROM v0 RIGHT OUTER JOIN rt0 ON ((((((rt0.c0)OR(rt0.c2)))OR(0.0776815158169698)))<(((rt0.c0)<(rt0.c0)))) RIGHT OUTER JOIN vt0 ON ((GLOB(rt0.c2, rt0.c2))/((((x''))<((NULL))))) WHERE (((((NULL)AND(CASE rt0.c0  WHEN v0.c0 THEN rt0.c1 END)))OR(CASE WHEN v0.c0 THEN '64285543' WHEN rt0.c1 THEN 0.9349214655681017 WHEN rt0.c0 THEN rt0.c0 ELSE vt0.c0 END))) UNION ALL SELECT ALL vt0.c0, rt0.c1, v0.c0, rt0.c0, rt0.c2 FROM v0 RIGHT OUTER JOIN rt0 ON ((((((rt0.c0)OR(rt0.c2)))OR(0.0776815158169698)))<(((rt0.c0)<(rt0.c0)))) RIGHT OUTER JOIN vt0 ON ((GLOB(rt0.c2, rt0.c2))/((((x''))<((NULL))))) WHERE ((NOT (((((NULL)AND(CASE rt0.c0  WHEN v0.c0 THEN rt0.c1 END)))OR(CASE WHEN v0.c0 THEN '64285543' WHEN rt0.c1 THEN 0.9349214655681017 WHEN rt0.c0 THEN rt0.c0 ELSE vt0.c0 END))))) UNION ALL SELECT vt0.c0, rt0.c1, v0.c0, rt0.c0, rt0.c2 FROM v0 RIGHT OUTER JOIN rt0 ON ((((((rt0.c0)OR(rt0.c2)))OR(0.0776815158169698)))<(((rt0.c0)<(rt0.c0)))) RIGHT OUTER JOIN vt0 ON ((GLOB(rt0.c2, rt0.c2))/((((x''))<((NULL))))) WHERE (((((((NULL)AND(CASE rt0.c0  WHEN v0.c0 THEN rt0.c1 END)))OR(CASE WHEN v0.c0 THEN '64285543' WHEN rt0.c1 THEN 0.9349214655681017 WHEN rt0.c0 THEN rt0.c0 ELSE vt0.c0 END))) ISNULL));
SELECT vt0.c0, rt0.c1, v0.c0, rt0.c0, rt0.c2 FROM v0 RIGHT OUTER JOIN rt0 ON ((((((rt0.c0)OR(rt0.c2)))OR(0.0776815158169698)))<(((rt0.c0)<(rt0.c0)))) RIGHT OUTER JOIN vt0 ON ((GLOB(rt0.c2, rt0.c2))/((((x''))<((NULL)))));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((vt0.c0))==((((vt0.c0)OR(vt0.c0)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0))=((((vt0.c0)OR(vt0.c0)))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((vt0.c0))==((((vt0.c0)OR(vt0.c0)))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((((v0.c0)<>(v0.c0))) NOT BETWEEN (CAST(v0.c0 AS NUMERIC)) AND ((('3p') ISNULL)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((((v0.c0)!=(v0.c0))) NOT BETWEEN (CAST(v0.c0 AS NUMERIC)) AND ((('3p') ISNULL)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((((v0.c0)!=(v0.c0))) NOT BETWEEN (CAST(v0.c0 AS NUMERIC)) AND ((('3p') ISNULL)))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING COUNT(((GROUP_CONCAT(MAX(AVG(NULL))))%(MAX(GROUP_CONCAT(AVG(rt0.c2)))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (COUNT(((GROUP_CONCAT(MAX(AVG(NULL))))%(MAX(GROUP_CONCAT(AVG(rt0.c2)))))))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((COUNT(((GROUP_CONCAT(MAX(AVG(NULL))))%(MAX(GROUP_CONCAT(AVG(rt0.c2))))))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((vt0.c0)<=(vt0.c0)) COLLATE NOCASE) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((vt0.c0)<=(vt0.c0)) COLLATE NOCASE))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((vt0.c0)<=(vt0.c0)) COLLATE NOCASE) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0;
SELECT DISTINCT rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM vt0 NOT INDEXED, rt0 WHERE (vt0.c0) UNION SELECT DISTINCT rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 END)>=(((rt0.c2)IS NOT(rt0.c0))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 END)>=(((rt0.c2)IS NOT(rt0.c0))))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 END)>=(((rt0.c2)IS NOT(rt0.c0))))) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MIN(COUNT(*)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MIN(COUNT(*)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN(COUNT(*))) ISNULL);
SELECT ALL rt0.c0 FROM rt0, v0 LEFT OUTER JOIN vt0 ON rt0.c1;
SELECT rt0.c0 FROM rt0, v0 LEFT OUTER JOIN vt0 ON rt0.c1 WHERE ((LAST_INSERT_ROWID() IN ((~ (v0.c0))))) UNION ALL SELECT rt0.c0 FROM rt0, v0 LEFT OUTER JOIN vt0 ON rt0.c1 WHERE ((NOT ((LAST_INSERT_ROWID() IN ((~ (v0.c0))))))) UNION ALL SELECT rt0.c0 FROM rt0, v0 LEFT OUTER JOIN vt0 ON rt0.c1 WHERE ((((LAST_INSERT_ROWID() IN ((~ (v0.c0))))) ISNULL));
SELECT ALL rt0.c0 FROM rt0, v0 LEFT OUTER JOIN vt0 ON rt0.c1;
SELECT DISTINCT rt0.c2, v0.c0 FROM rt0, v0;
SELECT DISTINCT rt0.c2, v0.c0 FROM rt0, v0 WHERE (((((rt0.c2)||(rt0.c0))) NOTNULL)) UNION SELECT DISTINCT rt0.c2, v0.c0 FROM rt0, v0 WHERE ((NOT (((((rt0.c2)||(rt0.c0))) NOTNULL)))) UNION SELECT DISTINCT rt0.c2, v0.c0 FROM rt0, v0 WHERE (((((((rt0.c2)||(rt0.c0))) NOTNULL)) ISNULL));
SELECT DISTINCT rt0.c2, v0.c0 FROM rt0, v0;
SELECT ALL v0.c0, rt0.c0, rt0.c2, vt0.c0 FROM v0, rt0 INNER JOIN vt0 ON ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (v0.c0)))+(((((rt0.c1)OR(rt0.c0)))AND(rt0.c2)))) GROUP BY v0.c0, rt0.c0, rt0.c2, vt0.c0;
SELECT v0.c0, rt0.c0, rt0.c2, vt0.c0 FROM v0, rt0 INNER JOIN vt0 ON ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (v0.c0)))+(((((rt0.c1)OR(rt0.c0)))AND(rt0.c2)))) WHERE ((rt0.c2 COLLATE NOCASE IN ((((rt0.c2))<=((v0.c0)))))) GROUP BY v0.c0, rt0.c0, rt0.c2, vt0.c0 UNION SELECT ALL v0.c0, rt0.c0, rt0.c2, vt0.c0 FROM v0, rt0 INNER JOIN vt0 ON ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (v0.c0)))+(((((rt0.c1)OR(rt0.c0)))AND(rt0.c2)))) WHERE ((NOT ((rt0.c2 COLLATE NOCASE IN ((((rt0.c2))<=((v0.c0)))))))) GROUP BY v0.c0, rt0.c0, rt0.c2, vt0.c0 UNION SELECT ALL v0.c0, rt0.c0, rt0.c2, vt0.c0 FROM v0, rt0 INNER JOIN vt0 ON ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (v0.c0)))+(((((rt0.c1)OR(rt0.c0)))AND(rt0.c2)))) WHERE ((((rt0.c2 COLLATE NOCASE IN ((((rt0.c2))<=((v0.c0)))))) ISNULL)) GROUP BY v0.c0, rt0.c0, rt0.c2, vt0.c0;
SELECT ALL v0.c0, rt0.c0, rt0.c2, vt0.c0 FROM v0, rt0 INNER JOIN vt0 ON ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (v0.c0)))+(((((rt0.c1)OR(rt0.c0)))AND(rt0.c2)))) GROUP BY v0.c0, rt0.c0, rt0.c2, vt0.c0;
SELECT ALL rt0.c1, vt0.c0, rt0.c2 FROM rt0 INNER JOIN vt0 ON (+ (0.10577632783031454)) COLLATE RTRIM INNER JOIN v0 ON rt0.c1 GROUP BY rt0.c1, vt0.c0, rt0.c2;
SELECT rt0.c1, vt0.c0, rt0.c2 FROM rt0 INNER JOIN vt0 ON (+ (0.10577632783031454)) COLLATE RTRIM INNER JOIN v0 ON rt0.c1 GROUP BY rt0.c1, vt0.c0, rt0.c2 HAVING ((((COUNT(*) COLLATE RTRIM)AND(MAX(rt0.c1))))AND(((v0.c0) ISNULL))) UNION ALL SELECT rt0.c1, vt0.c0, rt0.c2 FROM rt0 INNER JOIN vt0 ON (+ (0.10577632783031454)) COLLATE RTRIM INNER JOIN v0 ON rt0.c1 GROUP BY rt0.c1, vt0.c0, rt0.c2 HAVING (NOT (((((COUNT(*) COLLATE RTRIM)AND(MAX(rt0.c1))))AND(((v0.c0) ISNULL))))) UNION ALL SELECT rt0.c1, vt0.c0, rt0.c2 FROM rt0 INNER JOIN vt0 ON (+ (0.10577632783031454)) COLLATE RTRIM INNER JOIN v0 ON rt0.c1 GROUP BY rt0.c1, vt0.c0, rt0.c2 HAVING ((((((COUNT(*) COLLATE RTRIM)AND(MAX(rt0.c1))))AND(((v0.c0) ISNULL)))) ISNULL);
SELECT ALL rt0.c1, vt0.c0, rt0.c2 FROM rt0 INNER JOIN vt0 ON (+ (0.10577632783031454)) COLLATE RTRIM INNER JOIN v0 ON rt0.c1 GROUP BY rt0.c1, vt0.c0, rt0.c2;
SELECT rt0.c1, vt0.c0, rt0.c2 FROM rt0 INNER JOIN vt0 ON (+ (0.10577632783031454)) COLLATE RTRIM INNER JOIN v0 ON rt0.c1 GROUP BY rt0.c1, vt0.c0, rt0.c2 HAVING ((((COUNT(*) COLLATE RTRIM)AND(MAX(rt0.c1))))AND(((v0.c0) ISNULL))) UNION ALL SELECT rt0.c1, vt0.c0, rt0.c2 FROM rt0 INNER JOIN vt0 ON (+ (0.10577632783031454)) COLLATE RTRIM INNER JOIN v0 ON rt0.c1 GROUP BY rt0.c1, vt0.c0, rt0.c2 HAVING (NOT (((((COUNT(*) COLLATE RTRIM)AND(MAX(rt0.c1))))AND(((v0.c0) ISNULL))))) UNION ALL SELECT rt0.c1, vt0.c0, rt0.c2 FROM rt0 INNER JOIN vt0 ON (+ (0.10577632783031454)) COLLATE RTRIM INNER JOIN v0 ON rt0.c1 GROUP BY rt0.c1, vt0.c0, rt0.c2 HAVING ((((((COUNT(*) COLLATE RTRIM)AND(MAX(rt0.c1))))AND(((v0.c0) ISNULL)))) ISNULL);
SELECT ALL rt0.c1, vt0.c0, rt0.c2 FROM rt0 INNER JOIN vt0 ON (+ (0.10577632783031454)) COLLATE RTRIM INNER JOIN v0 ON rt0.c1 GROUP BY rt0.c1, vt0.c0, rt0.c2;
SELECT MIN(CASE WHEN ((v0.c0) BETWEEN (v0.c0) AND (rt0.c2)) THEN CAST(rt0.c0 AS INTEGER) ELSE CAST(rt0.c2 AS TEXT) END) FROM v0, rt0;
SELECT v0.c0 FROM vt0, v0;
SELECT v0.c0 FROM vt0, v0 WHERE ((~ ('\0sa'))) UNION ALL SELECT ALL v0.c0 FROM vt0, v0 WHERE ((NOT ((~ ('\0sa'))))) UNION ALL SELECT ALL v0.c0 FROM vt0, v0 WHERE ((((~ ('\0sa'))) ISNULL));
SELECT v0.c0 FROM vt0, v0;
SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt0;
SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt0 WHERE (vt0.c0) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt0 NOT INDEXED WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (0.5089425288143272) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (0.5089425288143272))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((0.5089425288143272) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING MAX(GROUP_CONCAT(MIN(NULL))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (MAX(GROUP_CONCAT(MIN(NULL))))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((MAX(GROUP_CONCAT(MIN(NULL)))) ISNULL);
SELECT ALL * FROM v0 CROSS JOIN vt0 ON (CAST(vt0.c0 AS BLOB) IN ());
SELECT ALL * FROM v0 CROSS JOIN vt0 ON (CAST(vt0.c0 AS BLOB) IN ()) WHERE (x'000ab3be') UNION ALL SELECT * FROM v0 CROSS JOIN vt0 ON (CAST(vt0.c0 AS BLOB) IN ()) WHERE ((NOT (x'000ab3be'))) UNION ALL SELECT ALL * FROM v0 CROSS JOIN vt0 ON (CAST(vt0.c0 AS BLOB) IN ()) WHERE (((x'000ab3be') ISNULL));
SELECT ALL * FROM v0 CROSS JOIN vt0 ON (CAST(vt0.c0 AS BLOB) IN ());
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((NULLIF(vt0.c0, vt0.c0))GLOB(((vt0.c0)<=(vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((NULLIF(vt0.c0, vt0.c0))GLOB(((vt0.c0)<=(vt0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((NULLIF(vt0.c0, vt0.c0))GLOB(((vt0.c0)<=(vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 WHERE (x'e8fd') GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM v0, vt0 WHERE ((NOT (x'e8fd'))) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM v0, vt0 WHERE (((x'e8fd') ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, rt0.c0 FROM vt0, rt0, v0 GROUP BY vt0.c0, rt0.c0;
SELECT vt0.c0, rt0.c0 FROM vt0, rt0, v0 GROUP BY vt0.c0, rt0.c0 HAVING TOTAL(NULL) UNION ALL SELECT ALL vt0.c0, rt0.c0 FROM vt0, rt0, v0 GROUP BY vt0.c0, rt0.c0 HAVING (NOT (TOTAL(NULL))) UNION ALL SELECT vt0.c0, rt0.c0 FROM vt0, rt0, v0 GROUP BY vt0.c0, rt0.c0 HAVING ((TOTAL(NULL)) ISNULL);
SELECT ALL vt0.c0, rt0.c0 FROM vt0, rt0, v0 GROUP BY vt0.c0, rt0.c0;
SELECT vt0.c0, rt0.c0 FROM vt0, rt0, v0 GROUP BY vt0.c0, rt0.c0 HAVING TOTAL(NULL) UNION ALL SELECT ALL vt0.c0, rt0.c0 FROM vt0, rt0, v0 GROUP BY vt0.c0, rt0.c0 HAVING (NOT (TOTAL(NULL))) UNION ALL SELECT vt0.c0, rt0.c0 FROM vt0, rt0, v0 GROUP BY vt0.c0, rt0.c0 HAVING ((TOTAL(NULL)) ISNULL);
SELECT ALL vt0.c0, rt0.c0 FROM vt0, rt0, v0 GROUP BY vt0.c0, rt0.c0;
SELECT ALL v0.c0, rt0.c1 FROM v0, rt0;
SELECT ALL v0.c0, rt0.c1 FROM v0, rt0 WHERE (ABS(((rt0.c1) IS TRUE))) UNION ALL SELECT ALL v0.c0, rt0.c1 FROM v0, rt0 WHERE ((NOT (ABS(((rt0.c1) IS TRUE))))) UNION ALL SELECT v0.c0, rt0.c1 FROM v0, rt0 WHERE (((ABS(((rt0.c1) IS TRUE))) ISNULL));
SELECT ALL v0.c0, rt0.c1 FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (CAST((((v0.c0))<((x''))) AS INTEGER)) UNION SELECT DISTINCT * FROM v0 NOT INDEXED, rt0 WHERE ((NOT (CAST((((v0.c0))<((x''))) AS INTEGER)))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((CAST((((v0.c0))<((x''))) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT ALL vt0.c0, rt0.c2, v0.c0 FROM v0, rt0 RIGHT OUTER JOIN vt0 ON (((((x'') BETWEEN ('b{Xp]/4') AND (rt0.c2))))>(((2067109779 IN ())))) GROUP BY vt0.c0, rt0.c2, v0.c0;
SELECT ALL vt0.c0, rt0.c2, v0.c0 FROM v0, rt0 RIGHT OUTER JOIN vt0 ON (((((x'') BETWEEN ('b{Xp]/4') AND (rt0.c2))))>(((2067109779 IN ())))) WHERE (((vt0.c0)>>(vt0.c0))) GROUP BY vt0.c0, rt0.c2, v0.c0 UNION SELECT vt0.c0, rt0.c2, v0.c0 FROM v0, rt0 RIGHT OUTER JOIN vt0 ON (((((x'') BETWEEN ('b{Xp]/4') AND (rt0.c2))))>(((2067109779 IN ())))) WHERE ((NOT (((vt0.c0)>>(vt0.c0))))) GROUP BY vt0.c0, rt0.c2, v0.c0 UNION SELECT ALL vt0.c0, rt0.c2, v0.c0 FROM v0, rt0 RIGHT OUTER JOIN vt0 ON (((((x'') BETWEEN ('b{Xp]/4') AND (rt0.c2))))>(((2067109779 IN ())))) WHERE (((((vt0.c0)>>(vt0.c0))) ISNULL)) GROUP BY vt0.c0, rt0.c2, v0.c0;
SELECT ALL vt0.c0, rt0.c2, v0.c0 FROM v0, rt0 RIGHT OUTER JOIN vt0 ON (((((x'') BETWEEN ('b{Xp]/4') AND (rt0.c2))))>(((2067109779 IN ())))) GROUP BY vt0.c0, rt0.c2, v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT * FROM rt0, v0, vt0;
SELECT ALL * FROM rt0, v0, vt0 WHERE (0.18177661138435142) UNION ALL SELECT * FROM rt0, v0, vt0 WHERE ((NOT (0.18177661138435142))) UNION ALL SELECT ALL * FROM rt0, v0, vt0 WHERE (((0.18177661138435142) ISNULL));
SELECT * FROM rt0, v0, vt0;
SELECT DISTINCT v0.c0 FROM rt0, v0, vt0;
SELECT DISTINCT v0.c0 FROM rt0, v0, vt0 WHERE (CAST(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) AS TEXT)) UNION SELECT DISTINCT v0.c0 FROM rt0, v0, vt0 WHERE ((NOT (CAST(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) AS TEXT)))) UNION SELECT DISTINCT v0.c0 FROM rt0, v0, vt0 WHERE (((CAST(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) AS TEXT)) ISNULL));
SELECT DISTINCT v0.c0 FROM rt0, v0, vt0;
SELECT ALL v0.c0 FROM v0, rt0, vt0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, rt0, vt0 WHERE ('1603686386') GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, rt0, vt0 WHERE ((NOT ('1603686386'))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, rt0, vt0 WHERE ((('1603686386') ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, rt0, vt0 GROUP BY v0.c0;
SELECT v0.c0 FROM rt0, v0 LEFT OUTER JOIN vt0 ON CASE WHEN CAST(rt0.c0 AS REAL) THEN (~ (vt0.c0)) WHEN rt0.c0 THEN rt0.c2 COLLATE NOCASE WHEN (((rt0.c1))<=((x''))) THEN TYPEOF(DISTINCT rt0.c0) WHEN ((rt0.c1) IS FALSE) THEN ((rt0.c0) NOT NULL) WHEN rt0.c0 THEN ((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) END GROUP BY v0.c0;
SELECT v0.c0 FROM rt0, v0 LEFT OUTER JOIN vt0 ON CASE WHEN CAST(rt0.c0 AS REAL) THEN (~ (vt0.c0)) WHEN rt0.c0 THEN rt0.c2 COLLATE NOCASE WHEN (((rt0.c1))<=((x''))) THEN TYPEOF(DISTINCT rt0.c0) WHEN ((rt0.c1) IS FALSE) THEN ((rt0.c0) NOT NULL) WHEN rt0.c0 THEN ((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) END GROUP BY v0.c0 HAVING AVG(COUNT(rt0.c0)) UNION ALL SELECT v0.c0 FROM rt0, v0 LEFT OUTER JOIN vt0 ON CASE WHEN CAST(rt0.c0 AS REAL) THEN (~ (vt0.c0)) WHEN rt0.c0 THEN rt0.c2 COLLATE NOCASE WHEN (((rt0.c1))<=((x''))) THEN TYPEOF(DISTINCT rt0.c0) WHEN ((rt0.c1) IS FALSE) THEN ((rt0.c0) NOT NULL) WHEN rt0.c0 THEN ((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) END GROUP BY v0.c0 HAVING (NOT (AVG(COUNT(rt0.c0)))) UNION ALL SELECT v0.c0 FROM rt0, v0 LEFT OUTER JOIN vt0 ON CASE WHEN CAST(rt0.c0 AS REAL) THEN (~ (vt0.c0)) WHEN rt0.c0 THEN rt0.c2 COLLATE NOCASE WHEN (((rt0.c1))<=((x''))) THEN TYPEOF(DISTINCT rt0.c0) WHEN ((rt0.c1) IS FALSE) THEN ((rt0.c0) NOT NULL) WHEN rt0.c0 THEN ((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) END GROUP BY v0.c0 HAVING ((AVG(COUNT(rt0.c0))) ISNULL);
SELECT * FROM vt0, rt0;
SELECT * FROM vt0, rt0 WHERE (((((rt0.c0)GLOB(vt0.c0)))<<(rt0.c0))) UNION ALL SELECT * FROM vt0, rt0 WHERE ((NOT (((((rt0.c0)GLOB(vt0.c0)))<<(rt0.c0))))) UNION ALL SELECT * FROM vt0, rt0 WHERE (((((((rt0.c0)GLOB(vt0.c0)))<<(rt0.c0))) ISNULL));
SELECT * FROM vt0, rt0;
SELECT DISTINCT * FROM v0, rt0 INNER JOIN vt0 ON LOWER(vt0.c0 COLLATE RTRIM);
SELECT DISTINCT * FROM v0, rt0 INNER JOIN vt0 ON LOWER(vt0.c0 COLLATE RTRIM) WHERE ('22663960' COLLATE NOCASE) UNION SELECT DISTINCT * FROM v0, rt0 INNER JOIN vt0 ON LOWER(vt0.c0 COLLATE RTRIM) WHERE ((NOT ('22663960' COLLATE NOCASE))) UNION SELECT DISTINCT * FROM v0, rt0 INNER JOIN vt0 ON LOWER(vt0.c0 COLLATE RTRIM) WHERE ((('22663960' COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM v0, rt0 INNER JOIN vt0 ON LOWER(vt0.c0 COLLATE RTRIM);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (x'518c'))) NOT NULL)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (x'518c'))) NOT NULL)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (x'518c'))) NOT NULL)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c1 FROM rt0 INNER JOIN vt0 ON NULLIF(DISTINCT LOWER(vt0.c0), ((rt0.c0) NOT NULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 INNER JOIN vt0 ON NULLIF(DISTINCT LOWER(vt0.c0), ((rt0.c0) NOT NULL)) GROUP BY rt0.c1 HAVING GROUP_CONCAT(rt0.c2) UNION ALL SELECT ALL rt0.c1 FROM rt0 INNER JOIN vt0 ON NULLIF(DISTINCT LOWER(vt0.c0), ((rt0.c0) NOT NULL)) GROUP BY rt0.c1 HAVING (NOT (GROUP_CONCAT(rt0.c2))) UNION ALL SELECT rt0.c1 FROM rt0 INNER JOIN vt0 ON NULLIF(DISTINCT LOWER(vt0.c0), ((rt0.c0) NOT NULL)) GROUP BY rt0.c1 HAVING ((GROUP_CONCAT(rt0.c2)) ISNULL);
SELECT ALL rt0.c1 FROM rt0 INNER JOIN vt0 ON NULLIF(DISTINCT LOWER(vt0.c0), ((rt0.c0) NOT NULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 INNER JOIN vt0 ON NULLIF(DISTINCT LOWER(vt0.c0), ((rt0.c0) NOT NULL)) GROUP BY rt0.c1 HAVING GROUP_CONCAT(rt0.c2) UNION ALL SELECT ALL rt0.c1 FROM rt0 INNER JOIN vt0 ON NULLIF(DISTINCT LOWER(vt0.c0), ((rt0.c0) NOT NULL)) GROUP BY rt0.c1 HAVING (NOT (GROUP_CONCAT(rt0.c2))) UNION ALL SELECT rt0.c1 FROM rt0 INNER JOIN vt0 ON NULLIF(DISTINCT LOWER(vt0.c0), ((rt0.c0) NOT NULL)) GROUP BY rt0.c1 HAVING ((GROUP_CONCAT(rt0.c2)) ISNULL);
SELECT ALL rt0.c1 FROM rt0 INNER JOIN vt0 ON NULLIF(DISTINCT LOWER(vt0.c0), ((rt0.c0) NOT NULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (CAST(((('Iy.JYW'))>=((rt0.c2))) AS INTEGER)) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (CAST(((('Iy.JYW'))>=((rt0.c2))) AS INTEGER)))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((CAST(((('Iy.JYW'))>=((rt0.c2))) AS INTEGER)) ISNULL));
SELECT ALL rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((+ (DATE(vt0.c0, vt0.c0, vt0.c0)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((+ (DATE(vt0.c0, vt0.c0, vt0.c0)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((+ (DATE(vt0.c0, vt0.c0, vt0.c0)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL rt0.c2, v0.c0 FROM vt0, rt0 NATURAL JOIN v0 GROUP BY rt0.c2, v0.c0;
SELECT rt0.c2, v0.c0 FROM vt0, rt0 NATURAL JOIN v0 WHERE (((((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)))OR(vt0.c0)))&((rt0.c2 IN (vt0.c0, '-262545708'))))) GROUP BY rt0.c2, v0.c0 UNION SELECT ALL rt0.c2, v0.c0 FROM vt0, rt0 NATURAL JOIN v0 WHERE ((NOT (((((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)))OR(vt0.c0)))&((rt0.c2 IN (vt0.c0, '-262545708'))))))) GROUP BY rt0.c2, v0.c0 UNION SELECT ALL rt0.c2, v0.c0 FROM vt0, rt0 NATURAL JOIN v0 WHERE (((((((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)))OR(vt0.c0)))&((rt0.c2 IN (vt0.c0, '-262545708'))))) ISNULL)) GROUP BY rt0.c2, v0.c0;
SELECT ALL rt0.c2, v0.c0 FROM vt0, rt0 NATURAL JOIN v0 GROUP BY rt0.c2, v0.c0;
SELECT vt0.c0 FROM rt0, v0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM rt0, v0, vt0 GROUP BY vt0.c0 HAVING ((SUM(SUM(rt0.c1)))+((SUM(v0.c0) IN (rt0.c1)))) UNION ALL SELECT vt0.c0 FROM rt0, v0, vt0 GROUP BY vt0.c0 HAVING (NOT (((SUM(SUM(rt0.c1)))+((SUM(v0.c0) IN (rt0.c1)))))) UNION ALL SELECT vt0.c0 FROM rt0, v0, vt0 GROUP BY vt0.c0 HAVING ((((SUM(SUM(rt0.c1)))+((SUM(v0.c0) IN (rt0.c1))))) ISNULL);
SELECT ALL MIN(CAST(CAST(rt0.c0 AS BLOB) AS TEXT)) FROM rt0, v0, vt0 ORDER BY CASE (~ (0.6709388043685477))  WHEN UPPER(NULL) THEN rt0.c0 COLLATE BINARY END  NULLS LAST;
SELECT * FROM vt0 INNER JOIN rt0 ON (((((rt0.c0 IN ()))AND(CAST(vt0.c0 AS TEXT))))AND((- (rt0.c1)))) RIGHT OUTER JOIN v0 ON (((+ (rt0.c0)))GLOB(v0.c0));
SELECT * FROM vt0 INNER JOIN rt0 ON (((((rt0.c0 IN ()))AND(CAST(vt0.c0 AS TEXT))))AND((- (rt0.c1)))) RIGHT OUTER JOIN v0 ON (((+ (rt0.c0)))GLOB(v0.c0)) WHERE (HEX(DISTINCT ((rt0.c1) NOT BETWEEN (v0.c0) AND (v0.c0)))) UNION ALL SELECT * FROM vt0 INNER JOIN rt0 ON (((((rt0.c0 IN ()))AND(CAST(vt0.c0 AS TEXT))))AND((- (rt0.c1)))) RIGHT OUTER JOIN v0 ON (((+ (rt0.c0)))GLOB(v0.c0)) WHERE ((NOT (HEX(DISTINCT ((rt0.c1) NOT BETWEEN (v0.c0) AND (v0.c0)))))) UNION ALL SELECT ALL * FROM vt0 INNER JOIN rt0 ON (((((rt0.c0 IN ()))AND(CAST(vt0.c0 AS TEXT))))AND((- (rt0.c1)))) RIGHT OUTER JOIN v0 ON (((+ (rt0.c0)))GLOB(v0.c0)) WHERE (((HEX(DISTINCT ((rt0.c1) NOT BETWEEN (v0.c0) AND (v0.c0)))) ISNULL));
SELECT * FROM vt0 INNER JOIN rt0 ON (((((rt0.c0 IN ()))AND(CAST(vt0.c0 AS TEXT))))AND((- (rt0.c1)))) RIGHT OUTER JOIN v0 ON (((+ (rt0.c0)))GLOB(v0.c0));
SELECT DISTINCT * FROM vt0, rt0, v0;
SELECT DISTINCT * FROM vt0, rt0, v0 WHERE (((((('', vt0.c0, rt0.c2)) BETWEEN ((v0.c0, rt0.c1, rt0.c1)) AND ((rt0.c0, NULL, vt0.c0))))>((('}).A') NOT NULL)))) UNION SELECT DISTINCT * FROM vt0, rt0, v0 WHERE ((NOT (((((('', vt0.c0, rt0.c2)) BETWEEN ((v0.c0, rt0.c1, rt0.c1)) AND ((rt0.c0, NULL, vt0.c0))))>((('}).A') NOT NULL)))))) UNION SELECT DISTINCT * FROM vt0, rt0, v0 WHERE (((((((('', vt0.c0, rt0.c2)) BETWEEN ((v0.c0, rt0.c1, rt0.c1)) AND ((rt0.c0, NULL, vt0.c0))))>((('}).A') NOT NULL)))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0, v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (LTRIM(((x'')<<(v0.c0)), ((((((((((((((((NULL)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (LTRIM(((x'')<<(v0.c0)), ((((((((((((((((NULL)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((LTRIM(((x'')<<(v0.c0)), ((((((((((((((((NULL)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c0, rt0.c0, v0.c0 FROM rt0, vt0, v0 GROUP BY vt0.c0, rt0.c0, v0.c0;
SELECT ALL vt0.c0, rt0.c0, v0.c0 FROM rt0, vt0, v0 GROUP BY vt0.c0, rt0.c0, v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0, rt0.c0, v0.c0 FROM rt0, vt0, v0 GROUP BY vt0.c0, rt0.c0, v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0, rt0.c0, v0.c0 FROM rt0, vt0, v0 GROUP BY vt0.c0, rt0.c0, v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0, rt0.c0, v0.c0 FROM rt0, vt0, v0 GROUP BY vt0.c0, rt0.c0, v0.c0;
SELECT ALL vt0.c0, rt0.c0, v0.c0 FROM rt0, vt0, v0 GROUP BY vt0.c0, rt0.c0, v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0, rt0.c0, v0.c0 FROM rt0, vt0, v0 GROUP BY vt0.c0, rt0.c0, v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0, rt0.c0, v0.c0 FROM rt0, vt0, v0 GROUP BY vt0.c0, rt0.c0, v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0, rt0.c0, v0.c0 FROM rt0, vt0, v0 GROUP BY vt0.c0, rt0.c0, v0.c0;
SELECT * FROM rt0, v0;
SELECT * FROM rt0, v0 WHERE (TYPEOF(v0.c0 COLLATE RTRIM)) UNION ALL SELECT * FROM rt0, v0 WHERE ((NOT (TYPEOF(v0.c0 COLLATE RTRIM)))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE (((TYPEOF(v0.c0 COLLATE RTRIM)) ISNULL));
SELECT * FROM rt0, v0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (((((rt0.c0 COLLATE BINARY)OR(((rt0.c0) IS FALSE))))AND(CAST(rt0.c2 AS NUMERIC)))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (((((rt0.c0 COLLATE BINARY)OR(((rt0.c0) IS FALSE))))AND(CAST(rt0.c2 AS NUMERIC)))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((((((rt0.c0 COLLATE BINARY)OR(((rt0.c0) IS FALSE))))AND(CAST(rt0.c2 AS NUMERIC)))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT v0.c0, rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM vt0, rt0, v0 GROUP BY v0.c0, rt0.c1, rt0.c0, rt0.c2, vt0.c0;
SELECT ALL v0.c0, rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM vt0, rt0, v0 WHERE (CASE WHEN CAST(vt0.c0 AS INTEGER) THEN CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END WHEN rt0.c1 COLLATE RTRIM THEN rt0.c1 COLLATE RTRIM WHEN CASE WHEN 0.8013520756405685 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 END THEN CASE WHEN 0.6133225588155821 THEN vt0.c0 WHEN v0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 ELSE vt0.c0 END ELSE rt0.c0 COLLATE RTRIM END) GROUP BY v0.c0, rt0.c1, rt0.c0, rt0.c2, vt0.c0 UNION SELECT v0.c0, rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM vt0, rt0, v0 NOT INDEXED WHERE ((NOT (CASE WHEN CAST(vt0.c0 AS INTEGER) THEN CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END WHEN rt0.c1 COLLATE RTRIM THEN rt0.c1 COLLATE RTRIM WHEN CASE WHEN 0.8013520756405685 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 END THEN CASE WHEN 0.6133225588155821 THEN vt0.c0 WHEN v0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 ELSE vt0.c0 END ELSE rt0.c0 COLLATE RTRIM END))) GROUP BY v0.c0, rt0.c1, rt0.c0, rt0.c2, vt0.c0 UNION SELECT v0.c0, rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM vt0, rt0, v0 WHERE (((CASE WHEN CAST(vt0.c0 AS INTEGER) THEN CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END WHEN rt0.c1 COLLATE RTRIM THEN rt0.c1 COLLATE RTRIM WHEN CASE WHEN 0.8013520756405685 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 END THEN CASE WHEN 0.6133225588155821 THEN vt0.c0 WHEN v0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 ELSE vt0.c0 END ELSE rt0.c0 COLLATE RTRIM END) ISNULL)) GROUP BY v0.c0, rt0.c1, rt0.c0, rt0.c2, vt0.c0;
SELECT v0.c0, rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM vt0, rt0, v0 GROUP BY v0.c0, rt0.c1, rt0.c0, rt0.c2, vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, vt0;
SELECT vt0.c0 FROM v0, vt0 WHERE ((vt0.c0 IN (((v0.c0) BETWEEN (v0.c0) AND (x'')), CAST(x'5208' AS NUMERIC), CASE WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END))) UNION ALL SELECT vt0.c0 FROM v0, vt0 WHERE ((NOT ((vt0.c0 IN (((v0.c0) BETWEEN (v0.c0) AND (x'')), CAST(x'5208' AS NUMERIC), CASE WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END))))) UNION ALL SELECT vt0.c0 FROM v0, vt0 WHERE ((((vt0.c0 IN (((v0.c0) BETWEEN (v0.c0) AND (x'')), CAST(x'5208' AS NUMERIC), CASE WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END))) ISNULL));
SELECT vt0.c0 FROM v0, vt0;
SELECT DISTINCT vt0.c0, v0.c0 FROM v0 INNER JOIN vt0 ON LIKE(((NULL)GLOB(v0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)));
SELECT DISTINCT vt0.c0, v0.c0 FROM v0 INNER JOIN vt0 ON LIKE(((NULL)GLOB(v0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0))) WHERE (DATETIME((((NULL, vt0.c0, -8.03522686E8)) NOT BETWEEN ((',-\r‚ñ¨r%u)b', v0.c0, v0.c0)) AND ((v0.c0, NULL, vt0.c0))), ((556847516) BETWEEN (v0.c0) AND (v0.c0)), ((v0.c0)<<(x'')))) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM v0 INNER JOIN vt0 ON LIKE(((NULL)GLOB(v0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0))) WHERE ((NOT (DATETIME((((NULL, vt0.c0, -8.03522686E8)) NOT BETWEEN ((',-\r‚ñ¨r%u)b', v0.c0, v0.c0)) AND ((v0.c0, NULL, vt0.c0))), ((556847516) BETWEEN (v0.c0) AND (v0.c0)), ((v0.c0)<<(x'')))))) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM v0 INNER JOIN vt0 ON LIKE(((NULL)GLOB(v0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0))) WHERE (((DATETIME((((NULL, vt0.c0, -8.03522686E8)) NOT BETWEEN ((',-\r‚ñ¨r%u)b', v0.c0, v0.c0)) AND ((v0.c0, NULL, vt0.c0))), ((556847516) BETWEEN (v0.c0) AND (v0.c0)), ((v0.c0)<<(x'')))) ISNULL));
SELECT DISTINCT vt0.c0, v0.c0 FROM v0 INNER JOIN vt0 ON LIKE(((NULL)GLOB(v0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)));
SELECT vt0.c0 FROM rt0, vt0, v0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM rt0, vt0, v0 WHERE (UPPER(vt0.c0) COLLATE NOCASE) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM rt0, vt0, v0 WHERE ((NOT (UPPER(vt0.c0) COLLATE NOCASE))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM rt0, vt0, v0 WHERE (((UPPER(vt0.c0) COLLATE NOCASE) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM rt0, vt0, v0 GROUP BY vt0.c0;
SELECT ALL vt0.c0, rt0.c2, rt0.c0, v0.c0 FROM rt0, vt0, v0 GROUP BY vt0.c0, rt0.c2, rt0.c0, v0.c0;
SELECT vt0.c0, rt0.c2, rt0.c0, v0.c0 FROM rt0, vt0, v0 GROUP BY vt0.c0, rt0.c2, rt0.c0, v0.c0 HAVING GROUP_CONCAT(MAX(vt0.c0)) UNION ALL SELECT ALL vt0.c0, rt0.c2, rt0.c0, v0.c0 FROM rt0, vt0, v0 GROUP BY vt0.c0, rt0.c2, rt0.c0, v0.c0 HAVING (NOT (GROUP_CONCAT(MAX(vt0.c0)))) UNION ALL SELECT ALL vt0.c0, rt0.c2, rt0.c0, v0.c0 FROM rt0, vt0, v0 GROUP BY vt0.c0, rt0.c2, rt0.c0, v0.c0 HAVING ((GROUP_CONCAT(MAX(vt0.c0))) ISNULL);
SELECT ALL * FROM rt0, v0, vt0;
SELECT * FROM rt0, v0, vt0 WHERE (load_extension(((((((((((((v0.c0)OR(x'')))AND('-1538504482')))AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c0)), rt0.c0)) UNION ALL SELECT ALL * FROM rt0, v0, vt0 WHERE ((NOT (load_extension(((((((((((((v0.c0)OR(x'')))AND('-1538504482')))AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c0)), rt0.c0)))) UNION ALL SELECT * FROM rt0, v0, vt0 WHERE (((load_extension(((((((((((((v0.c0)OR(x'')))AND('-1538504482')))AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c0)), rt0.c0)) ISNULL));
SELECT ALL * FROM rt0, v0, vt0;
SELECT DISTINCT rt0.c0, vt0.c0, rt0.c2, rt0.c1, v0.c0 FROM rt0, vt0, v0;
SELECT DISTINCT rt0.c0, vt0.c0, rt0.c2, rt0.c1, v0.c0 FROM rt0, vt0, v0 WHERE ((((((rt0.c2) IS FALSE)))<>(((((rt0.c2, rt0.c2, v0.c0))<=((v0.c0, rt0.c0, v0.c0))))))) UNION SELECT DISTINCT rt0.c0, vt0.c0, rt0.c2, rt0.c1, v0.c0 FROM rt0, vt0, v0 WHERE ((NOT ((((((rt0.c2) IS FALSE)))!=(((((rt0.c2, rt0.c2, v0.c0))<=((v0.c0, rt0.c0, v0.c0))))))))) UNION SELECT DISTINCT rt0.c0, vt0.c0, rt0.c2, rt0.c1, v0.c0 FROM rt0, vt0, v0 WHERE ((((((((rt0.c2) IS FALSE)))!=(((((rt0.c2, rt0.c2, v0.c0))<=((v0.c0, rt0.c0, v0.c0))))))) ISNULL));
SELECT DISTINCT rt0.c0, vt0.c0, rt0.c2, rt0.c1, v0.c0 FROM rt0, vt0, v0;
SELECT vt0.c0, rt0.c0, rt0.c1, rt0.c2, v0.c0 FROM v0, vt0, rt0 GROUP BY vt0.c0, rt0.c0, rt0.c1, rt0.c2, v0.c0;
SELECT vt0.c0, rt0.c0, rt0.c1, rt0.c2, v0.c0 FROM v0, vt0, rt0 WHERE (((rt0.c0)-((+ (x''))))) GROUP BY vt0.c0, rt0.c0, rt0.c1, rt0.c2, v0.c0 UNION SELECT ALL vt0.c0, rt0.c0, rt0.c1, rt0.c2, v0.c0 FROM v0, vt0, rt0 WHERE ((NOT (((rt0.c0)-((+ (x''))))))) GROUP BY vt0.c0, rt0.c0, rt0.c1, rt0.c2, v0.c0 UNION SELECT ALL vt0.c0, rt0.c0, rt0.c1, rt0.c2, v0.c0 FROM v0, vt0, rt0 WHERE (((((rt0.c0)-((+ (x''))))) ISNULL)) GROUP BY vt0.c0, rt0.c0, rt0.c1, rt0.c2, v0.c0;
SELECT vt0.c0, rt0.c0, rt0.c1, rt0.c2, v0.c0 FROM v0, vt0, rt0 GROUP BY vt0.c0, rt0.c0, rt0.c1, rt0.c2, v0.c0;
SELECT v0.c0, rt0.c0, rt0.c1 FROM v0, rt0, vt0 GROUP BY v0.c0, rt0.c0, rt0.c1;
SELECT v0.c0, rt0.c0, rt0.c1 FROM v0, rt0, vt0 GROUP BY v0.c0, rt0.c0, rt0.c1 HAVING COUNT(GROUP_CONCAT(SUM(GROUP_CONCAT(TOTAL(GROUP_CONCAT(v0.c0)))))) UNION ALL SELECT ALL v0.c0, rt0.c0, rt0.c1 FROM v0, rt0, vt0 GROUP BY v0.c0, rt0.c0, rt0.c1 HAVING (NOT (COUNT(GROUP_CONCAT(SUM(GROUP_CONCAT(TOTAL(GROUP_CONCAT(v0.c0)))))))) UNION ALL SELECT v0.c0, rt0.c0, rt0.c1 FROM v0, rt0, vt0 GROUP BY v0.c0, rt0.c0, rt0.c1 HAVING ((COUNT(GROUP_CONCAT(SUM(GROUP_CONCAT(TOTAL(GROUP_CONCAT(v0.c0))))))) ISNULL);
SELECT * FROM rt0, vt0, v0;
SELECT * FROM rt0, vt0, v0 WHERE (((((rt0.c0)>(v0.c0))) NOT BETWEEN (-1.026541676E9 COLLATE NOCASE) AND (CASE rt0.c0  WHEN NULL THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY (+ (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))), (((('')&(NULL))) BETWEEN (vt0.c0 COLLATE NOCASE) AND (((rt0.c1) IS FALSE)))  NULLS FIRST;
SELECT ALL * FROM rt0, vt0, v0 WHERE ((NOT (((((rt0.c0)>(v0.c0))) NOT BETWEEN (-1.026541676E9 COLLATE NOCASE) AND (CASE rt0.c0  WHEN NULL THEN vt0.c0 ELSE vt0.c0 END))))) ORDER BY (+ (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))), (((('')&(NULL))) BETWEEN (vt0.c0 COLLATE NOCASE) AND (((rt0.c1) IS FALSE)))  NULLS FIRST;
SELECT * FROM rt0, vt0, v0 WHERE (((((((rt0.c0)>(v0.c0))) NOT BETWEEN (-1.026541676E9 COLLATE NOCASE) AND (CASE rt0.c0  WHEN NULL THEN vt0.c0 ELSE vt0.c0 END))) ISNULL)) ORDER BY (+ (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))), (((('')&(NULL))) BETWEEN (vt0.c0 COLLATE NOCASE) AND (((rt0.c1) IS FALSE)))  NULLS FIRST;
SELECT * FROM rt0, vt0, v0;
SELECT DISTINCT rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM rt0, vt0;
SELECT DISTINCT rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM rt0, vt0 WHERE ((rt0.c1 IN ())) UNION SELECT DISTINCT rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM rt0, vt0 WHERE ((NOT ((rt0.c1 IN ())))) UNION SELECT DISTINCT rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM rt0, vt0 WHERE ((((rt0.c1 IN ())) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM rt0, vt0;
SELECT rt0.c0, rt0.c2, vt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2, vt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, vt0.c0, rt0.c1 FROM vt0, rt0 WHERE (CAST(((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)) AS BLOB)) GROUP BY rt0.c0, rt0.c2, vt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c2, vt0.c0, rt0.c1 FROM vt0, rt0 WHERE ((NOT (CAST(((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)) AS BLOB)))) GROUP BY rt0.c0, rt0.c2, vt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c2, vt0.c0, rt0.c1 FROM vt0, rt0 WHERE (((CAST(((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)) AS BLOB)) ISNULL)) GROUP BY rt0.c0, rt0.c2, vt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c2, vt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2, vt0.c0, rt0.c1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (SUM(SUM(vt0.c0)) IN ()) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((SUM(SUM(vt0.c0)) IN ()))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((SUM(SUM(vt0.c0)) IN ())) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (SUM(SUM(vt0.c0)) IN ()) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((SUM(SUM(vt0.c0)) IN ()))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((SUM(SUM(vt0.c0)) IN ())) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM rt0, vt0;
SELECT * FROM rt0, vt0 WHERE (((((CAST(rt0.c1 AS BLOB))OR(((((((((vt0.c0)AND(vt0.c0)))OR(rt0.c0)))AND(vt0.c0)))OR(rt0.c0)))))AND(rt0.c2))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((NOT (((((CAST(rt0.c1 AS BLOB))OR(((((((((vt0.c0)AND(vt0.c0)))OR(rt0.c0)))AND(vt0.c0)))OR(rt0.c0)))))AND(rt0.c2))))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE (((((((CAST(rt0.c1 AS BLOB))OR(((((((((vt0.c0)AND(vt0.c0)))OR(rt0.c0)))AND(vt0.c0)))OR(rt0.c0)))))AND(rt0.c2))) ISNULL));
SELECT ALL * FROM rt0, vt0;
SELECT DISTINCT v0.c0 FROM v0, vt0;
SELECT DISTINCT v0.c0 FROM v0, vt0 WHERE ((NOT (v0.c0)) COLLATE RTRIM) UNION SELECT DISTINCT v0.c0 FROM v0, vt0 WHERE ((NOT ((NOT (v0.c0)) COLLATE RTRIM))) UNION SELECT DISTINCT v0.c0 FROM v0, vt0 WHERE ((((NOT (v0.c0)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT v0.c0 FROM v0, vt0;
SELECT ALL rt0.c2 FROM vt0, v0 RIGHT OUTER JOIN rt0 ON rt0.c2 GROUP BY rt0.c2;
SELECT rt0.c2 FROM vt0, v0 RIGHT OUTER JOIN rt0 ON rt0.c2 WHERE (CASE CAST(rt0.c2 AS TEXT)  WHEN '' THEN CAST(rt0.c2 AS REAL) WHEN rt0.c1 COLLATE RTRIM THEN 0.6468317795967774 WHEN CAST(rt0.c0 AS INTEGER) THEN (~ (vt0.c0)) ELSE v0.c0 COLLATE NOCASE END) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM vt0, v0 RIGHT OUTER JOIN rt0 ON rt0.c2 WHERE ((NOT (CASE CAST(rt0.c2 AS TEXT)  WHEN '' THEN CAST(rt0.c2 AS REAL) WHEN rt0.c1 COLLATE RTRIM THEN 0.6468317795967774 WHEN CAST(rt0.c0 AS INTEGER) THEN (~ (vt0.c0)) ELSE v0.c0 COLLATE NOCASE END))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM vt0, v0 RIGHT OUTER JOIN rt0 ON rt0.c2 WHERE (((CASE CAST(rt0.c2 AS TEXT)  WHEN '' THEN CAST(rt0.c2 AS REAL) WHEN rt0.c1 COLLATE RTRIM THEN 0.6468317795967774 WHEN CAST(rt0.c0 AS INTEGER) THEN (~ (vt0.c0)) ELSE v0.c0 COLLATE NOCASE END) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt0, v0 RIGHT OUTER JOIN rt0 ON rt0.c2 GROUP BY rt0.c2;
SELECT v0.c0, rt0.c0, rt0.c2, rt0.c1 FROM v0, rt0, vt0 GROUP BY v0.c0, rt0.c0, rt0.c2, rt0.c1;
SELECT ALL v0.c0, rt0.c0, rt0.c2, rt0.c1 FROM v0, rt0, vt0 GROUP BY v0.c0, rt0.c0, rt0.c2, rt0.c1 HAVING v0.c0 UNION ALL SELECT ALL v0.c0, rt0.c0, rt0.c2, rt0.c1 FROM v0, rt0, vt0 GROUP BY v0.c0, rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL v0.c0, rt0.c0, rt0.c2, rt0.c1 FROM v0, rt0, vt0 GROUP BY v0.c0, rt0.c0, rt0.c2, rt0.c1 HAVING ((v0.c0) ISNULL);
SELECT v0.c0, rt0.c0, rt0.c2, rt0.c1 FROM v0, rt0, vt0 GROUP BY v0.c0, rt0.c0, rt0.c2, rt0.c1;
SELECT ALL v0.c0, rt0.c0, rt0.c2, rt0.c1 FROM v0, rt0, vt0 GROUP BY v0.c0, rt0.c0, rt0.c2, rt0.c1 HAVING v0.c0 UNION ALL SELECT ALL v0.c0, rt0.c0, rt0.c2, rt0.c1 FROM v0, rt0, vt0 GROUP BY v0.c0, rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL v0.c0, rt0.c0, rt0.c2, rt0.c1 FROM v0, rt0, vt0 GROUP BY v0.c0, rt0.c0, rt0.c2, rt0.c1 HAVING ((v0.c0) ISNULL);
SELECT v0.c0, rt0.c0, rt0.c2, rt0.c1 FROM v0, rt0, vt0 GROUP BY v0.c0, rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0;
SELECT rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0 NOT INDEXED WHERE (((CASE WHEN rt0.c0 THEN vt0.c0 END)|(((((rt0.c1)AND(vt0.c0)))OR(rt0.c1))))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0 WHERE ((NOT (((CASE WHEN rt0.c0 THEN vt0.c0 END)|(((((rt0.c1)AND(vt0.c0)))OR(rt0.c1))))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0 WHERE (((((CASE WHEN rt0.c0 THEN vt0.c0 END)|(((((rt0.c1)AND(vt0.c0)))OR(rt0.c1))))) ISNULL));
SELECT ALL rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))<=((CASE WHEN vt0.c0 THEN vt0.c0 END)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))<=((CASE WHEN vt0.c0 THEN vt0.c0 END)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))<=((CASE WHEN vt0.c0 THEN vt0.c0 END)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 CROSS JOIN v0 ON ((LOWER(DISTINCT vt0.c0))-(CAST(vt0.c0 AS TEXT))) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 CROSS JOIN v0 ON ((LOWER(DISTINCT vt0.c0))-(CAST(vt0.c0 AS TEXT))) WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 CROSS JOIN v0 ON ((LOWER(DISTINCT vt0.c0))-(CAST(vt0.c0 AS TEXT))) WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 CROSS JOIN v0 ON ((LOWER(DISTINCT vt0.c0))-(CAST(vt0.c0 AS TEXT))) WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 CROSS JOIN v0 ON ((LOWER(DISTINCT vt0.c0))-(CAST(vt0.c0 AS TEXT))) GROUP BY vt0.c0;
SELECT rt0.c1, rt0.c2, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, v0.c0, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, v0.c0, rt0.c0 HAVING COUNT('2f!ÓÅÆÈç¨b^') UNION ALL SELECT rt0.c1, rt0.c2, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, v0.c0, rt0.c0 HAVING (NOT (COUNT('2f!ÓÅÆÈç¨b^'))) UNION ALL SELECT ALL rt0.c1, rt0.c2, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, v0.c0, rt0.c0 HAVING ((COUNT('2f!ÓÅÆÈç¨b^')) ISNULL);
SELECT rt0.c1, rt0.c2, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, v0.c0, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, v0.c0, rt0.c0 HAVING COUNT('2f!ÓÅÆÈç¨b^') UNION ALL SELECT rt0.c1, rt0.c2, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, v0.c0, rt0.c0 HAVING (NOT (COUNT('2f!ÓÅÆÈç¨b^'))) UNION ALL SELECT ALL rt0.c1, rt0.c2, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, v0.c0, rt0.c0 HAVING ((COUNT('2f!ÓÅÆÈç¨b^')) ISNULL);
SELECT rt0.c1, rt0.c2, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, v0.c0, rt0.c0;
SELECT ALL vt0.c0, rt0.c1 FROM vt0, v0, rt0;
SELECT vt0.c0, rt0.c1 FROM vt0, v0, rt0 WHERE ((((v0.c0, rt0.c1, v0.c0)) BETWEEN ((IFNULL(rt0.c1, rt0.c0), ((rt0.c2) NOT BETWEEN (v0.c0) AND (vt0.c0)), ((rt0.c1)>>(vt0.c0)))) AND ((CASE WHEN vt0.c0 THEN v0.c0 ELSE rt0.c0 END, v0.c0, ((vt0.c0)<(rt0.c0)))))) UNION ALL SELECT ALL vt0.c0, rt0.c1 FROM vt0, v0, rt0 WHERE ((NOT ((((v0.c0, rt0.c1, v0.c0)) BETWEEN ((IFNULL(rt0.c1, rt0.c0), ((rt0.c2) NOT BETWEEN (v0.c0) AND (vt0.c0)), ((rt0.c1)>>(vt0.c0)))) AND ((CASE WHEN vt0.c0 THEN v0.c0 ELSE rt0.c0 END, v0.c0, ((vt0.c0)<(rt0.c0)))))))) UNION ALL SELECT vt0.c0, rt0.c1 FROM vt0, v0, rt0 WHERE ((((((v0.c0, rt0.c1, v0.c0)) BETWEEN ((IFNULL(rt0.c1, rt0.c0), ((rt0.c2) NOT BETWEEN (v0.c0) AND (vt0.c0)), ((rt0.c1)>>(vt0.c0)))) AND ((CASE WHEN vt0.c0 THEN v0.c0 ELSE rt0.c0 END, v0.c0, ((vt0.c0)<(rt0.c0)))))) ISNULL));
SELECT ALL vt0.c0, rt0.c1 FROM vt0, v0, rt0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE ((- (v0.c0 COLLATE BINARY))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT ((- (v0.c0 COLLATE BINARY))))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((((- (v0.c0 COLLATE BINARY))) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((x'1e56')IS NOT(rt0.c1 COLLATE RTRIM))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((x'1e56')IS NOT(rt0.c1 COLLATE RTRIM))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((((x'1e56')IS NOT(rt0.c1 COLLATE RTRIM))) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c0 UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c0 UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM v0, vt0;
SELECT ALL * FROM v0, vt0 WHERE (v0.c0) UNION ALL SELECT ALL * FROM v0, vt0 WHERE ((NOT (v0.c0))) UNION ALL SELECT * FROM v0, vt0 WHERE (((v0.c0) ISNULL));
SELECT * FROM v0, vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (LIKELIHOOD((- (-2.132166757E9)), 0.5588809006161133)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (LIKELIHOOD((- (-2.132166757E9)), 0.5588809006161133)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((LIKELIHOOD((- (-2.132166757E9)), 0.5588809006161133)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, vt0 WHERE (CAST(((vt0.c0) NOT NULL) AS NUMERIC)) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0, vt0 WHERE ((NOT (CAST(((vt0.c0) NOT NULL) AS NUMERIC)))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0, vt0 WHERE (((CAST(((vt0.c0) NOT NULL) AS NUMERIC)) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0;
SELECT ALL rt0.c2, rt0.c0, vt0.c0 FROM vt0, rt0, v0 GROUP BY rt0.c2, rt0.c0, vt0.c0;
SELECT rt0.c2, rt0.c0, vt0.c0 FROM vt0, rt0, v0 GROUP BY rt0.c2, rt0.c0, vt0.c0 HAVING GROUP_CONCAT(((COUNT(GROUP_CONCAT(TOTAL(vt0.c0)))) BETWEEN (vt0.c0) AND (COUNT(*)))) UNION ALL SELECT ALL rt0.c2, rt0.c0, vt0.c0 FROM vt0, rt0, v0 GROUP BY rt0.c2, rt0.c0, vt0.c0 HAVING (NOT (GROUP_CONCAT(((COUNT(GROUP_CONCAT(TOTAL(vt0.c0)))) BETWEEN (vt0.c0) AND (COUNT(*)))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, vt0.c0 FROM vt0, rt0, v0 GROUP BY rt0.c2, rt0.c0, vt0.c0 HAVING ((GROUP_CONCAT(((COUNT(GROUP_CONCAT(TOTAL(vt0.c0)))) BETWEEN (vt0.c0) AND (COUNT(*))))) ISNULL);
SELECT * FROM vt0, v0;
SELECT ALL * FROM vt0, v0 WHERE (((NULL COLLATE NOCASE) ISNULL)) UNION ALL SELECT ALL * FROM vt0, v0 WHERE ((NOT (((NULL COLLATE NOCASE) ISNULL)))) UNION ALL SELECT * FROM vt0, v0 WHERE (((((NULL COLLATE NOCASE) ISNULL)) ISNULL));
SELECT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN TRIM(vt0.c0, vt0.c0) ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN TRIM(vt0.c0, vt0.c0) ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN TRIM(vt0.c0, vt0.c0) ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((~ (vt0.c0)))|(CAST(vt0.c0 AS NUMERIC)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((~ (vt0.c0)))|(CAST(vt0.c0 AS NUMERIC)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((~ (vt0.c0)))|(CAST(vt0.c0 AS NUMERIC)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING SUM(MAX(v0.c0)) UNION ALL SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING (NOT (SUM(MAX(v0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING ((SUM(MAX(v0.c0))) ISNULL);
SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON CASE WHEN CASE rt0.c1  WHEN 0.4033411852979679 THEN vt0.c0 END THEN CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c1 ELSE 'ÔñµW' END END RIGHT OUTER JOIN vt0 ON ((((rt0.c2)/(rt0.c1)))>=(((((rt0.c1)OR(rt0.c0)))AND(rt0.c2))));
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((- (((v0.c0)==(v0.c0))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((- (((v0.c0)=(v0.c0))))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((- (((v0.c0)=(v0.c0))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE ((~ (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT ((~ (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((((~ (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 NOT INDEXED GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 NOT INDEXED GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (NULL) UNION ALL SELECT * FROM rt0 WHERE ((NOT (NULL))) UNION ALL SELECT ALL * FROM rt0 WHERE (((NULL) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT v0.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0 CROSS JOIN v0 ON rt0.c2;
SELECT DISTINCT v0.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0 CROSS JOIN v0 ON rt0.c2 WHERE (rt0.c1) UNION SELECT DISTINCT v0.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0 CROSS JOIN v0 ON rt0.c2 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT v0.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0 CROSS JOIN v0 ON rt0.c2 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT v0.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0 CROSS JOIN v0 ON rt0.c2;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((((v0.c0 COLLATE NOCASE, ((v0.c0) NOTNULL), json_insert(v0.c0, v0.c0, v0.c0), ((((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)), '-764222401' COLLATE BINARY))<>((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END, NULL, CASE NULL  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, NULL COLLATE NOCASE)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((((v0.c0 COLLATE NOCASE, ((v0.c0) NOTNULL), json_insert(v0.c0, v0.c0, v0.c0), ((((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)), '-764222401' COLLATE BINARY))!=((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END, NULL, CASE NULL  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, NULL COLLATE NOCASE)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((((v0.c0 COLLATE NOCASE, ((v0.c0) NOTNULL), json_insert(v0.c0, v0.c0, v0.c0), ((((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)), '-764222401' COLLATE BINARY))!=((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END, NULL, CASE NULL  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, NULL COLLATE NOCASE)))) ISNULL)) GROUP BY v0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TOTAL(AVG(vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(AVG(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(AVG(vt0.c0))) ISNULL);
SELECT * FROM rt0, vt0, v0;
SELECT * FROM rt0, vt0, v0 WHERE (((((((rt0.c1)!=(v0.c0)))AND(((((((((v0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(rt0.c1)))AND(rt0.c0)))))OR((NOT ('-1531260006'))))) UNION ALL SELECT * FROM rt0, vt0, v0 WHERE ((NOT (((((((rt0.c1)<>(v0.c0)))AND(((((((((v0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(rt0.c1)))AND(rt0.c0)))))OR((NOT ('-1531260006'))))))) UNION ALL SELECT ALL * FROM rt0, vt0, v0 WHERE (((((((((rt0.c1)<>(v0.c0)))AND(((((((((v0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(rt0.c1)))AND(rt0.c0)))))OR((NOT ('-1531260006'))))) ISNULL));
SELECT * FROM rt0, vt0, v0;
SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, v0;
SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, v0 WHERE (((TYPEOF(DISTINCT vt0.c0))==(CASE v0.c0  WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, v0 WHERE ((NOT (((TYPEOF(DISTINCT vt0.c0))=(CASE v0.c0  WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))))) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, v0 WHERE (((((TYPEOF(DISTINCT vt0.c0))==(CASE v0.c0  WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) ISNULL));
SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, v0;
SELECT ALL v0.c0 FROM vt0, rt0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, rt0, v0 WHERE ((((v0.c0)/(rt0.c2)) IN ((((('1002336602')AND(rt0.c2)))AND(rt0.c2))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt0, rt0, v0 WHERE ((NOT ((((v0.c0)/(rt0.c2)) IN ((((('1002336602')AND(rt0.c2)))AND(rt0.c2))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt0, rt0, v0 WHERE ((((((v0.c0)/(rt0.c2)) IN ((((('1002336602')AND(rt0.c2)))AND(rt0.c2))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0, rt0, v0 GROUP BY v0.c0;
SELECT vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON CAST(((v0.c0)LIKE(v0.c0)) AS TEXT) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON CAST(((v0.c0)LIKE(v0.c0)) AS TEXT) GROUP BY vt0.c0 HAVING ((json_extract(MAX(AVG(vt0.c0)), MIN(MAX(v0.c0)), vt0.c0, TOTAL(MIN(vt0.c0)), x'', AVG(v0.c0)))-(GROUP_CONCAT(AVG(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON CAST(((v0.c0)LIKE(v0.c0)) AS TEXT) GROUP BY vt0.c0 HAVING (NOT (((json_extract(MAX(AVG(vt0.c0)), MIN(MAX(v0.c0)), vt0.c0, TOTAL(MIN(vt0.c0)), x'', AVG(v0.c0)))-(GROUP_CONCAT(AVG(vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON CAST(((v0.c0)LIKE(v0.c0)) AS TEXT) GROUP BY vt0.c0 HAVING ((((json_extract(MAX(AVG(vt0.c0)), MIN(MAX(v0.c0)), vt0.c0, TOTAL(MIN(vt0.c0)), x'', AVG(v0.c0)))-(GROUP_CONCAT(AVG(vt0.c0))))) ISNULL);
SELECT ALL vt0.c0, rt0.c1, v0.c0 FROM vt0, rt0 NATURAL JOIN v0;
SELECT ALL vt0.c0, rt0.c1, v0.c0 FROM vt0, rt0 NATURAL JOIN v0 WHERE (rt0.c1) UNION ALL SELECT ALL vt0.c0, rt0.c1, v0.c0 FROM vt0, rt0 NATURAL JOIN v0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT ALL vt0.c0, rt0.c1, v0.c0 FROM vt0, rt0 NATURAL JOIN v0 WHERE (((rt0.c1) ISNULL));
SELECT ALL vt0.c0, rt0.c1, v0.c0 FROM vt0, rt0 NATURAL JOIN v0;
SELECT DISTINCT * FROM rt0, v0, vt0;
SELECT DISTINCT * FROM rt0, v0, vt0 WHERE (((NULL COLLATE BINARY) ISNULL)) UNION SELECT DISTINCT * FROM rt0, v0, vt0 WHERE ((NOT (((NULL COLLATE BINARY) ISNULL)))) UNION SELECT DISTINCT * FROM rt0, v0, vt0 WHERE (((((NULL COLLATE BINARY) ISNULL)) ISNULL));
SELECT DISTINCT * FROM rt0, v0, vt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE (((CAST(rt0.c2 AS REAL)) NOT BETWEEN (((913276594)>(rt0.c2))) AND (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT (((CAST(rt0.c2 AS REAL)) NOT BETWEEN (((913276594)>(rt0.c2))) AND (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2))))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE (((((CAST(rt0.c2 AS REAL)) NOT BETWEEN (((913276594)>(rt0.c2))) AND (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2))))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT vt0.c0, rt0.c1, v0.c0, rt0.c2 FROM rt0, vt0, v0 GROUP BY vt0.c0, rt0.c1, v0.c0, rt0.c2;
SELECT vt0.c0, rt0.c1, v0.c0, rt0.c2 FROM rt0, vt0, v0 GROUP BY vt0.c0, rt0.c1, v0.c0, rt0.c2 HAVING TOTAL(json_valid(vt0.c0)) UNION ALL SELECT ALL vt0.c0, rt0.c1, v0.c0, rt0.c2 FROM rt0, vt0, v0 GROUP BY vt0.c0, rt0.c1, v0.c0, rt0.c2 HAVING (NOT (TOTAL(json_valid(vt0.c0)))) UNION ALL SELECT ALL vt0.c0, rt0.c1, v0.c0, rt0.c2 FROM rt0, vt0, v0 GROUP BY vt0.c0, rt0.c1, v0.c0, rt0.c2 HAVING ((TOTAL(json_valid(vt0.c0))) ISNULL);
SELECT vt0.c0, rt0.c1, v0.c0, rt0.c2 FROM rt0, vt0, v0 GROUP BY vt0.c0, rt0.c1, v0.c0, rt0.c2;
SELECT vt0.c0, rt0.c1, v0.c0, rt0.c2 FROM rt0, vt0, v0 GROUP BY vt0.c0, rt0.c1, v0.c0, rt0.c2 HAVING TOTAL(json_valid(vt0.c0)) UNION ALL SELECT ALL vt0.c0, rt0.c1, v0.c0, rt0.c2 FROM rt0, vt0, v0 GROUP BY vt0.c0, rt0.c1, v0.c0, rt0.c2 HAVING (NOT (TOTAL(json_valid(vt0.c0)))) UNION ALL SELECT ALL vt0.c0, rt0.c1, v0.c0, rt0.c2 FROM rt0, vt0, v0 GROUP BY vt0.c0, rt0.c1, v0.c0, rt0.c2 HAVING ((TOTAL(json_valid(vt0.c0))) ISNULL);
SELECT vt0.c0, rt0.c1, v0.c0, rt0.c2 FROM rt0, vt0, v0 GROUP BY vt0.c0, rt0.c1, v0.c0, rt0.c2;
SELECT ALL TOTAL((- (CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) FROM v0;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((+ (CAST(rt0.c0 AS REAL)))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((+ (CAST(rt0.c0 AS REAL)))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((+ (CAST(rt0.c0 AS REAL)))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (CASE CAST(v0.c0 AS TEXT)  WHEN v0.c0 THEN NULL ELSE ((v0.c0)<(v0.c0)) END) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (CASE CAST(v0.c0 AS TEXT)  WHEN v0.c0 THEN NULL ELSE ((v0.c0)<(v0.c0)) END))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((CASE CAST(v0.c0 AS TEXT)  WHEN v0.c0 THEN NULL ELSE ((v0.c0)<(v0.c0)) END) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE ((~ (0Xffffffffc453beaf))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT ((~ (0xffffffffc453beaf))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 NOT INDEXED WHERE ((((~ (0xffffffffc453beaf))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TOTAL(CASE WHEN GROUP_CONCAT(vt0.c0) THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN MIN(GROUP_CONCAT(GROUP_CONCAT(vt0.c0))) END) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(CASE WHEN GROUP_CONCAT(vt0.c0) THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN MIN(GROUP_CONCAT(GROUP_CONCAT(vt0.c0))) END))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(CASE WHEN GROUP_CONCAT(vt0.c0) THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN MIN(GROUP_CONCAT(GROUP_CONCAT(vt0.c0))) END)) ISNULL);
SELECT ALL * FROM vt0, rt0;
SELECT * FROM vt0, rt0 WHERE (CASE 0.6975023800612125 COLLATE NOCASE  WHEN (rt0.c2 IN (rt0.c1)) THEN ((((rt0.c2)AND(vt0.c0)))OR(rt0.c2)) ELSE ((vt0.c0) IS FALSE) END) UNION ALL SELECT * FROM vt0, rt0 WHERE ((NOT (CASE 0.6975023800612125 COLLATE NOCASE  WHEN (rt0.c2 IN (rt0.c1)) THEN ((((rt0.c2)AND(vt0.c0)))OR(rt0.c2)) ELSE ((vt0.c0) IS FALSE) END))) UNION ALL SELECT * FROM vt0, rt0 WHERE (((CASE 0.6975023800612125 COLLATE NOCASE  WHEN (rt0.c2 IN (rt0.c1)) THEN ((((rt0.c2)AND(vt0.c0)))OR(rt0.c2)) ELSE ((vt0.c0) IS FALSE) END) ISNULL));
SELECT ALL * FROM vt0, rt0;
SELECT DISTINCT vt0.c0 FROM v0 INNER JOIN vt0 ON 0.9288160977688;
SELECT DISTINCT vt0.c0 FROM v0 INNER JOIN vt0 ON 0.9288160977688 WHERE (x'' COLLATE RTRIM) UNION SELECT DISTINCT vt0.c0 FROM v0 INNER JOIN vt0 ON 0.9288160977688 WHERE ((NOT (x'' COLLATE RTRIM))) UNION SELECT DISTINCT vt0.c0 FROM v0 INNER JOIN vt0 ON 0.9288160977688 WHERE (((x'' COLLATE RTRIM) ISNULL));
SELECT DISTINCT vt0.c0 FROM v0 INNER JOIN vt0 ON 0.9288160977688;
SELECT ALL rt0.c1 FROM rt0, v0, vt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0, v0, vt0 WHERE ((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((0.3741011744743854))) COLLATE RTRIM) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0, v0, vt0 WHERE ((NOT ((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((0.3741011744743854))) COLLATE RTRIM))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0, v0, vt0 WHERE ((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((0.3741011744743854))) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, v0, vt0 GROUP BY rt0.c1;
SELECT ALL vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0 HAVING COUNT(AVG(TOTAL(MAX(COUNT(rt0.c1))))) UNION ALL SELECT ALL vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(AVG(TOTAL(MAX(COUNT(rt0.c1))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0 HAVING ((COUNT(AVG(TOTAL(MAX(COUNT(rt0.c1)))))) ISNULL);
SELECT MAX(((rt0.c1)-(rt0.c0)) COLLATE NOCASE) FROM rt0;
SELECT * FROM v0, rt0;
SELECT * FROM v0, rt0 WHERE (CASE CAST(rt0.c1 AS REAL)  WHEN ((rt0.c1)<(rt0.c0)) THEN (x'' IN ()) WHEN DATETIME(rt0.c1, v0.c0, v0.c0) THEN (- (rt0.c0)) WHEN v0.c0 THEN (+ (rt0.c0)) ELSE CAST(0.3710870039462405 AS INTEGER) END) UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((NOT (CASE CAST(rt0.c1 AS REAL)  WHEN ((rt0.c1)<(rt0.c0)) THEN (x'' IN ()) WHEN DATETIME(rt0.c1, v0.c0, v0.c0) THEN (- (rt0.c0)) WHEN v0.c0 THEN (+ (rt0.c0)) ELSE CAST(0.3710870039462405 AS INTEGER) END))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE (((CASE CAST(rt0.c1 AS REAL)  WHEN ((rt0.c1)<(rt0.c0)) THEN (x'' IN ()) WHEN DATETIME(rt0.c1, v0.c0, v0.c0) THEN (- (rt0.c0)) WHEN v0.c0 THEN (+ (rt0.c0)) ELSE CAST(0.3710870039462405 AS INTEGER) END) ISNULL));
SELECT * FROM v0, rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((((CAST(v0.c0 AS INTEGER))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))AND(v0.c0 COLLATE RTRIM))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((CAST(v0.c0 AS INTEGER))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))AND(v0.c0 COLLATE RTRIM))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((CAST(v0.c0 AS INTEGER))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))AND(v0.c0 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (CASE ((vt0.c0)=(vt0.c0))  WHEN (((('Ë∫åvÓØìkZOW')OR(vt0.c0)))AND(vt0.c0)) THEN (vt0.c0 IN ()) WHEN vt0.c0 COLLATE BINARY THEN vt0.c0 COLLATE NOCASE WHEN vt0.c0 THEN LIKELY(vt0.c0) END) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CASE ((vt0.c0)=(vt0.c0))  WHEN (((('Ë∫åvÓØìkZOW')OR(vt0.c0)))AND(vt0.c0)) THEN (vt0.c0 IN ()) WHEN vt0.c0 COLLATE BINARY THEN vt0.c0 COLLATE NOCASE WHEN vt0.c0 THEN LIKELY(vt0.c0) END))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((CASE ((vt0.c0)==(vt0.c0))  WHEN (((('Ë∫åvÓØìkZOW')OR(vt0.c0)))AND(vt0.c0)) THEN (vt0.c0 IN ()) WHEN vt0.c0 COLLATE BINARY THEN vt0.c0 COLLATE NOCASE WHEN vt0.c0 THEN LIKELY(vt0.c0) END) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING SUM(vt0.c0) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (SUM(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM(vt0.c0)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING SUM(vt0.c0) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (SUM(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM(vt0.c0)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0 IN ())))!=((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN '1709263053' THEN 0X63176c1 WHEN vt0.c0 THEN vt0.c0 WHEN x'6ade' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((((vt0.c0 IN ())))!=((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN '1709263053' THEN 0x63176c1 WHEN vt0.c0 THEN vt0.c0 WHEN x'6ade' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((((vt0.c0 IN ())))<>((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN '1709263053' THEN 0x63176c1 WHEN vt0.c0 THEN vt0.c0 WHEN x'6ade' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM) NOT BETWEEN (NULL) AND ((((NULL))>((vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((vt0.c0 COLLATE RTRIM) NOT BETWEEN (NULL) AND ((((NULL))>((vt0.c0)))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0 COLLATE RTRIM) NOT BETWEEN (NULL) AND ((((NULL))>((vt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((CAST(v0.c0 AS BLOB)) ISNULL)) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((CAST(v0.c0 AS BLOB)) ISNULL)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((CAST(v0.c0 AS BLOB)) ISNULL)) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c1 FROM vt0, v0, rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM vt0, v0, rt0 GROUP BY rt0.c1 HAVING (TOTAL(GROUP_CONCAT(vt0.c0)) IN ()) UNION ALL SELECT rt0.c1 FROM vt0, v0, rt0 GROUP BY rt0.c1 HAVING (NOT ((TOTAL(GROUP_CONCAT(vt0.c0)) IN ()))) UNION ALL SELECT rt0.c1 FROM vt0, v0, rt0 GROUP BY rt0.c1 HAVING (((TOTAL(GROUP_CONCAT(vt0.c0)) IN ())) ISNULL);
SELECT rt0.c1 FROM vt0, v0, rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM vt0, v0, rt0 GROUP BY rt0.c1 HAVING (TOTAL(GROUP_CONCAT(vt0.c0)) IN ()) UNION ALL SELECT rt0.c1 FROM vt0, v0, rt0 GROUP BY rt0.c1 HAVING (NOT ((TOTAL(GROUP_CONCAT(vt0.c0)) IN ()))) UNION ALL SELECT rt0.c1 FROM vt0, v0, rt0 GROUP BY rt0.c1 HAVING (((TOTAL(GROUP_CONCAT(vt0.c0)) IN ())) ISNULL);
SELECT rt0.c1 FROM vt0, v0, rt0 GROUP BY rt0.c1;
SELECT * FROM vt0, v0;
SELECT * FROM vt0, v0 WHERE ((('0.8853536611835877' COLLATE RTRIM) BETWEEN (CAST(v0.c0 AS INTEGER)) AND (((vt0.c0)-(v0.c0))))) UNION ALL SELECT ALL * FROM vt0, v0 WHERE ((NOT ((('0.8853536611835877' COLLATE RTRIM) BETWEEN (CAST(v0.c0 AS INTEGER)) AND (((vt0.c0)-(v0.c0))))))) UNION ALL SELECT * FROM vt0, v0 WHERE ((((('0.8853536611835877' COLLATE RTRIM) BETWEEN (CAST(v0.c0 AS INTEGER)) AND (((vt0.c0)-(v0.c0))))) ISNULL));
SELECT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0, rt0;
SELECT DISTINCT * FROM vt0, v0, rt0 WHERE (((vt0.c0)||((~ (rt0.c1))))) UNION SELECT DISTINCT * FROM vt0, v0, rt0 WHERE ((NOT (((vt0.c0)||((~ (rt0.c1))))))) UNION SELECT DISTINCT * FROM vt0, v0, rt0 WHERE (((((vt0.c0)||((~ (rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM vt0, v0, rt0;
SELECT rt0.c1, rt0.c2, vt0.c0, v0.c0 FROM vt0, v0, rt0 GROUP BY rt0.c1, rt0.c2, vt0.c0, v0.c0;
SELECT rt0.c1, rt0.c2, vt0.c0, v0.c0 FROM vt0, v0, rt0 WHERE ((((((v0.c0) ISNULL), CASE v0.c0  WHEN v0.c0 THEN v0.c0 END, ((rt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))))<((((('', 'M_M,', v0.c0))>((v0.c0, rt0.c0, rt0.c2))), TRIM(rt0.c0), ((rt0.c1)!=(rt0.c0)))))) GROUP BY rt0.c1, rt0.c2, vt0.c0, v0.c0 UNION SELECT ALL rt0.c1, rt0.c2, vt0.c0, v0.c0 FROM vt0, v0, rt0 WHERE ((NOT ((((((v0.c0) ISNULL), CASE v0.c0  WHEN v0.c0 THEN v0.c0 END, ((rt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))))<((((('', 'M_M,', v0.c0))>((v0.c0, rt0.c0, rt0.c2))), TRIM(rt0.c0), ((rt0.c1)!=(rt0.c0)))))))) GROUP BY rt0.c1, rt0.c2, vt0.c0, v0.c0 UNION SELECT ALL rt0.c1, rt0.c2, vt0.c0, v0.c0 FROM vt0, v0, rt0 WHERE ((((((((v0.c0) ISNULL), CASE v0.c0  WHEN v0.c0 THEN v0.c0 END, ((rt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))))<((((('', 'M_M,', v0.c0))>((v0.c0, rt0.c0, rt0.c2))), TRIM(rt0.c0), ((rt0.c1)!=(rt0.c0)))))) ISNULL)) GROUP BY rt0.c1, rt0.c2, vt0.c0, v0.c0;
SELECT rt0.c1, rt0.c2, vt0.c0, v0.c0 FROM vt0, v0, rt0 GROUP BY rt0.c1, rt0.c2, vt0.c0, v0.c0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 RIGHT OUTER JOIN v0 ON (vt0.c0 IN (CAST(v0.c0 AS REAL))) CROSS JOIN vt0 ON CAST(TRIM(rt0.c0) AS NUMERIC) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (CAST(((((v0.c0)AND(x'')))AND(v0.c0)) AS INTEGER)) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CAST(((((v0.c0)AND(x'')))AND(v0.c0)) AS INTEGER)))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((CAST(((((v0.c0)AND(x'')))AND(v0.c0)) AS INTEGER)) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (NULL) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((NULL) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ('-0.0') GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ('-0.0'))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((('-0.0') ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((CAST(rt0.c1 AS NUMERIC)) ISNULL) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (((CAST(rt0.c1 AS NUMERIC)) ISNULL))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((((CAST(rt0.c1 AS NUMERIC)) ISNULL)) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((CAST(rt0.c1 AS NUMERIC)) ISNULL) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (((CAST(rt0.c1 AS NUMERIC)) ISNULL))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((((CAST(rt0.c1 AS NUMERIC)) ISNULL)) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((rt0.c2)||(rt0.c2)) IN ())) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((((rt0.c2)||(rt0.c2)) IN ())))) UNION ALL SELECT * FROM rt0 WHERE ((((((rt0.c2)||(rt0.c2)) IN ())) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0, vt0, v0;
SELECT DISTINCT * FROM rt0, vt0, v0 WHERE (((((((rt0.c0)+(rt0.c2)))OR((- (v0.c0)))))OR((~ (rt0.c2))))) UNION SELECT DISTINCT * FROM rt0, vt0, v0 WHERE ((NOT (((((((rt0.c0)+(rt0.c2)))OR((- (v0.c0)))))OR((~ (rt0.c2))))))) UNION SELECT DISTINCT * FROM rt0, vt0, v0 WHERE (((((((((rt0.c0)+(rt0.c2)))OR((- (v0.c0)))))OR((~ (rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0, v0;
SELECT rt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM rt0, vt0 WHERE (INSTR(ABS(DISTINCT rt0.c0), (((0.8163715874830612))<((NULL))))) GROUP BY rt0.c2, rt0.c1, rt0.c0, vt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM rt0, vt0 WHERE ((NOT (INSTR(ABS(DISTINCT rt0.c0), (((0.8163715874830612))<((NULL))))))) GROUP BY rt0.c2, rt0.c1, rt0.c0, vt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM rt0, vt0 WHERE (((INSTR(ABS(DISTINCT rt0.c0), (((0.8163715874830612))<((NULL))))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0, vt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt0.c0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING rt0.c2 UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (rt0.c2)) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((rt0.c2) ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING rt0.c2 UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (rt0.c2)) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((rt0.c2) ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT v0.c0 FROM vt0, v0;
SELECT v0.c0 FROM vt0, v0 WHERE (((((vt0.c0)IS(v0.c0)))=((+ (vt0.c0))))) UNION ALL SELECT v0.c0 FROM vt0, v0 WHERE ((NOT (((((vt0.c0)IS(v0.c0)))==((+ (vt0.c0))))))) UNION ALL SELECT ALL v0.c0 FROM vt0, v0 WHERE (((((((vt0.c0)IS(v0.c0)))=((+ (vt0.c0))))) ISNULL));
SELECT v0.c0 FROM vt0, v0;
SELECT DISTINCT v0.c0 FROM v0, rt0;
SELECT DISTINCT v0.c0 FROM v0, rt0 WHERE ((((+ (rt0.c0)))<>(TRIM(DISTINCT rt0.c1, rt0.c2)))) UNION SELECT DISTINCT v0.c0 FROM v0, rt0 WHERE ((NOT ((((+ (rt0.c0)))<>(TRIM(DISTINCT rt0.c1, rt0.c2)))))) UNION SELECT DISTINCT v0.c0 FROM v0, rt0 WHERE ((((((+ (rt0.c0)))<>(TRIM(DISTINCT rt0.c1, rt0.c2)))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0, rt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)IS NOT(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)IS NOT(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)IS NOT(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c1 FROM rt0, v0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, v0 GROUP BY rt0.c1 HAVING TOTAL((((AVG(rt0.c0), AVG(rt0.c1), 0Xffffffffda858c03))>=((TOTAL(rt0.c2), AVG(AVG(0.5240483635817821)), MAX(v0.c0))))) UNION ALL SELECT rt0.c1 FROM rt0, v0 GROUP BY rt0.c1 HAVING (NOT (TOTAL((((AVG(rt0.c0), AVG(rt0.c1), 0Xffffffffda858c03))>=((TOTAL(rt0.c2), AVG(AVG(0.5240483635817821)), MAX(v0.c0))))))) UNION ALL SELECT ALL rt0.c1 FROM rt0, v0 GROUP BY rt0.c1 HAVING ((TOTAL((((AVG(rt0.c0), AVG(rt0.c1), 0Xffffffffda858c03))>=((TOTAL(rt0.c2), AVG(AVG(0.5240483635817821)), MAX(v0.c0)))))) ISNULL);
SELECT ALL rt0.c2, v0.c0 FROM rt0, v0, vt0;
SELECT rt0.c2, v0.c0 FROM rt0, v0, vt0 WHERE ((NOT (x'4454'))) UNION ALL SELECT ALL rt0.c2, v0.c0 FROM rt0, v0, vt0 WHERE ((NOT ((NOT (x'4454'))))) UNION ALL SELECT ALL rt0.c2, v0.c0 FROM rt0, v0, vt0 WHERE ((((NOT (x'4454'))) ISNULL));
SELECT ALL rt0.c2, v0.c0 FROM rt0, v0, vt0;
SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt0;
SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt0 WHERE (((CASE WHEN v0.c0 THEN vt0.c0 END)<(((vt0.c0) NOT BETWEEN (v0.c0) AND (0.07896921370602417))))) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt0 WHERE ((NOT (((CASE WHEN v0.c0 THEN vt0.c0 END)<(((vt0.c0) NOT BETWEEN (v0.c0) AND (0.07896921370602417))))))) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt0 WHERE (((((CASE WHEN v0.c0 THEN vt0.c0 END)<(((vt0.c0) NOT BETWEEN (v0.c0) AND (0.07896921370602417))))) ISNULL));
SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt0;
SELECT v0.c0, rt0.c0, rt0.c1, rt0.c2 FROM v0 LEFT OUTER JOIN rt0 ON CAST(CAST(rt0.c1 AS REAL) AS TEXT) FULL OUTER JOIN vt0 ON ((((CASE WHEN rt0.c0 THEN rt0.c0 WHEN v0.c0 THEN 0.036742310318179094 WHEN 0.45806904385080205 THEN rt0.c2 END)AND((((rt0.c0))<((v0.c0))))))OR(CAST(rt0.c0 AS BLOB))) GROUP BY v0.c0, rt0.c0, rt0.c1, rt0.c2;
SELECT v0.c0, rt0.c0, rt0.c1, rt0.c2 FROM v0 LEFT OUTER JOIN rt0 ON CAST(CAST(rt0.c1 AS REAL) AS TEXT) FULL OUTER JOIN vt0 ON ((((CASE WHEN rt0.c0 THEN rt0.c0 WHEN v0.c0 THEN 0.036742310318179094 WHEN 0.45806904385080205 THEN rt0.c2 END)AND((((rt0.c0))<((v0.c0))))))OR(CAST(rt0.c0 AS BLOB))) WHERE ((((+ (rt0.c0))) NOT BETWEEN (((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c1))) AND (CAST(vt0.c0 AS REAL)))) GROUP BY v0.c0, rt0.c0, rt0.c1, rt0.c2 UNION SELECT v0.c0, rt0.c0, rt0.c1, rt0.c2 FROM v0 LEFT OUTER JOIN rt0 ON CAST(CAST(rt0.c1 AS REAL) AS TEXT) FULL OUTER JOIN vt0 ON ((((CASE WHEN rt0.c0 THEN rt0.c0 WHEN v0.c0 THEN 0.036742310318179094 WHEN 0.45806904385080205 THEN rt0.c2 END)AND((((rt0.c0))<((v0.c0))))))OR(CAST(rt0.c0 AS BLOB))) WHERE ((NOT ((((+ (rt0.c0))) NOT BETWEEN (((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c1))) AND (CAST(vt0.c0 AS REAL)))))) GROUP BY v0.c0, rt0.c0, rt0.c1, rt0.c2 UNION SELECT v0.c0, rt0.c0, rt0.c1, rt0.c2 FROM v0 LEFT OUTER JOIN rt0 ON CAST(CAST(rt0.c1 AS REAL) AS TEXT) FULL OUTER JOIN vt0 ON ((((CASE WHEN rt0.c0 THEN rt0.c0 WHEN v0.c0 THEN 0.036742310318179094 WHEN 0.45806904385080205 THEN rt0.c2 END)AND((((rt0.c0))<((v0.c0))))))OR(CAST(rt0.c0 AS BLOB))) WHERE ((((((+ (rt0.c0))) NOT BETWEEN (((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c1))) AND (CAST(vt0.c0 AS REAL)))) ISNULL)) GROUP BY v0.c0, rt0.c0, rt0.c1, rt0.c2;
SELECT v0.c0, rt0.c0, rt0.c1, rt0.c2 FROM v0 LEFT OUTER JOIN rt0 ON CAST(CAST(rt0.c1 AS REAL) AS TEXT) FULL OUTER JOIN vt0 ON ((((CASE WHEN rt0.c0 THEN rt0.c0 WHEN v0.c0 THEN 0.036742310318179094 WHEN 0.45806904385080205 THEN rt0.c2 END)AND((((rt0.c0))<((v0.c0))))))OR(CAST(rt0.c0 AS BLOB))) GROUP BY v0.c0, rt0.c0, rt0.c1, rt0.c2;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING (((MIN(vt0.c0))) NOT BETWEEN ((COUNT(*))) AND ((v0.c0))) UNION ALL SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING (NOT ((((MIN(vt0.c0))) NOT BETWEEN ((COUNT(*))) AND ((v0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING (((((MIN(vt0.c0))) NOT BETWEEN ((COUNT(*))) AND ((v0.c0)))) ISNULL);
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING (((MIN(vt0.c0))) NOT BETWEEN ((COUNT(*))) AND ((v0.c0))) UNION ALL SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING (NOT ((((MIN(vt0.c0))) NOT BETWEEN ((COUNT(*))) AND ((v0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING (((((MIN(vt0.c0))) NOT BETWEEN ((COUNT(*))) AND ((v0.c0)))) ISNULL);
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON vt0.c0;
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON vt0.c0 WHERE (((- (rt0.c2)) IN ((((rt0.c1)) BETWEEN ((0xffffffffb93879dd)) AND ((rt0.c0))), ((((rt0.c0)AND(rt0.c1)))AND(rt0.c2))))) UNION ALL SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON vt0.c0 WHERE ((NOT (((- (rt0.c2)) IN ((((rt0.c1)) BETWEEN ((0xffffffffb93879dd)) AND ((rt0.c0))), ((((rt0.c0)AND(rt0.c1)))AND(rt0.c2))))))) UNION ALL SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON vt0.c0 WHERE (((((- (rt0.c2)) IN ((((rt0.c1)) BETWEEN ((0Xffffffffb93879dd)) AND ((rt0.c0))), ((((rt0.c0)AND(rt0.c1)))AND(rt0.c2))))) ISNULL));
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON vt0.c0;
SELECT DISTINCT rt0.c1 FROM vt0, v0, rt0;
SELECT DISTINCT rt0.c1 FROM vt0, v0, rt0 WHERE (CAST(CASE vt0.c0  WHEN 'l' THEN v0.c0 END AS BLOB)) UNION SELECT DISTINCT rt0.c1 FROM vt0, v0 NOT INDEXED, rt0 WHERE ((NOT (CAST(CASE vt0.c0  WHEN 'l' THEN v0.c0 END AS BLOB)))) UNION SELECT DISTINCT rt0.c1 FROM vt0, v0, rt0 WHERE (((CAST(CASE vt0.c0  WHEN 'l' THEN v0.c0 END AS BLOB)) ISNULL));
SELECT DISTINCT rt0.c1 FROM vt0, v0, rt0;
SELECT ALL vt0.c0, v0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON ((v0.c0)==('O.')) GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON ((v0.c0)=('O.')) WHERE ((((NOT (vt0.c0)))>>(((v0.c0)IS NOT(v0.c0))))) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON ((v0.c0)=('O.')) WHERE ((NOT ((((NOT (vt0.c0)))>>(((v0.c0)IS NOT(v0.c0))))))) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON ((v0.c0)=('O.')) WHERE ((((((NOT (vt0.c0)))>>(((v0.c0)IS NOT(v0.c0))))) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON ((v0.c0)==('O.')) GROUP BY vt0.c0, v0.c0;
SELECT ALL rt0.c1, rt0.c2, v0.c0, rt0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c1, rt0.c2, v0.c0, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, v0.c0, rt0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c1, rt0.c2, v0.c0, rt0.c0 HAVING (((rt0.c0)) BETWEEN ((((((x'')OR(AVG(vt0.c0))))AND(TOTAL(rt0.c2))))) AND (((((rt0.c0, COUNT(COUNT(TOTAL(rt0.c0))), MAX(vt0.c0)))<=((COUNT(*), MAX(v0.c0), rt0.c2)))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, v0.c0, rt0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c1, rt0.c2, v0.c0, rt0.c0 HAVING (NOT ((((rt0.c0)) BETWEEN ((((((x'')OR(AVG(vt0.c0))))AND(TOTAL(rt0.c2))))) AND (((((rt0.c0, COUNT(COUNT(TOTAL(rt0.c0))), MAX(vt0.c0)))<=((COUNT(*), MAX(v0.c0), rt0.c2)))))))) UNION ALL SELECT rt0.c1, rt0.c2, v0.c0, rt0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c1, rt0.c2, v0.c0, rt0.c0 HAVING (((((rt0.c0)) BETWEEN ((((((x'')OR(AVG(vt0.c0))))AND(TOTAL(rt0.c2))))) AND (((((rt0.c0, COUNT(COUNT(TOTAL(rt0.c0))), MAX(vt0.c0)))<=((COUNT(*), MAX(v0.c0), rt0.c2))))))) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) ISNULL)) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((vt0.c0 COLLATE NOCASE) ISNULL)))) UNION ALL SELECT * FROM vt0 WHERE (((((vt0.c0 COLLATE NOCASE) ISNULL)) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.c0 COLLATE NOCASE END) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN vt0.c0 THEN vt0.c0 COLLATE NOCASE END))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 COLLATE NOCASE END) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((~ (((v0.c0)>=(v0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((~ (((v0.c0)>=(v0.c0))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((~ (((v0.c0)>=(v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING TOTAL(COUNT(*)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TOTAL(COUNT(*)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL(COUNT(*))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CAST((- (rt0.c2)) AS BLOB)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CAST((- (rt0.c2)) AS BLOB)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((CAST((- (rt0.c2)) AS BLOB)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0, vt0, v0;
SELECT DISTINCT * FROM rt0, vt0, v0 WHERE (((((x'e68b')OR(vt0.c0)))=(UNLIKELY('i!mÌöî/Î£Ña')))) UNION SELECT DISTINCT * FROM rt0, vt0, v0 WHERE ((NOT (((((x'e68b')OR(vt0.c0)))=(UNLIKELY('i!mÌöî/Î£Ña')))))) UNION SELECT DISTINCT * FROM rt0, vt0, v0 WHERE (((((((x'e68b')OR(vt0.c0)))=(UNLIKELY('i!mÌöî/Î£Ña')))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0, v0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 WHERE ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) IN ())) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 WHERE ((NOT ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) IN ())))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 WHERE ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) IN ())) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT rt0.c2, rt0.c0, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c0, v0.c0;
SELECT rt0.c2, rt0.c0, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c0, v0.c0 HAVING COUNT((- (MIN(TOTAL(v0.c0))))) UNION ALL SELECT rt0.c2, rt0.c0, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c0, v0.c0 HAVING (NOT (COUNT((- (MIN(TOTAL(v0.c0))))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c0, v0.c0 HAVING ((COUNT((- (MIN(TOTAL(v0.c0)))))) ISNULL);
SELECT * FROM vt0, rt0;
SELECT ALL * FROM vt0, rt0 WHERE (UNLIKELY(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) UNION ALL SELECT * FROM vt0, rt0 WHERE ((NOT (UNLIKELY(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))) UNION ALL SELECT * FROM vt0, rt0 WHERE (((UNLIKELY(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) ISNULL));
SELECT * FROM vt0, rt0;
SELECT DISTINCT rt0.c2, v0.c0 FROM rt0, v0 RIGHT OUTER JOIN vt0 ON CASE WHEN ((v0.c0) BETWEEN (vt0.c0) AND (rt0.c0)) THEN NULL END;
SELECT DISTINCT rt0.c2, v0.c0 FROM rt0, v0 RIGHT OUTER JOIN vt0 ON CASE WHEN ((v0.c0) BETWEEN (vt0.c0) AND (rt0.c0)) THEN NULL END WHERE ((((vt0.c0 IN ())) BETWEEN (CASE WHEN rt0.c2 THEN rt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c2 END) AND ((rt0.c2 IN ())))) UNION SELECT DISTINCT rt0.c2, v0.c0 FROM rt0, v0 RIGHT OUTER JOIN vt0 ON CASE WHEN ((v0.c0) BETWEEN (vt0.c0) AND (rt0.c0)) THEN NULL END WHERE ((NOT ((((vt0.c0 IN ())) BETWEEN (CASE WHEN rt0.c2 THEN rt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c2 END) AND ((rt0.c2 IN ())))))) UNION SELECT DISTINCT rt0.c2, v0.c0 FROM rt0, v0 RIGHT OUTER JOIN vt0 ON CASE WHEN ((v0.c0) BETWEEN (vt0.c0) AND (rt0.c0)) THEN NULL END WHERE ((((((vt0.c0 IN ())) BETWEEN (CASE WHEN rt0.c2 THEN rt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c2 END) AND ((rt0.c2 IN ())))) ISNULL));
SELECT DISTINCT rt0.c2, v0.c0 FROM rt0, v0 RIGHT OUTER JOIN vt0 ON CASE WHEN ((v0.c0) BETWEEN (vt0.c0) AND (rt0.c0)) THEN NULL END;
SELECT ALL rt0.c2, vt0.c0, rt0.c1, rt0.c0, v0.c0 FROM rt0 CROSS JOIN vt0 ON ((((rt0.c2) BETWEEN (rt0.c2) AND (vt0.c0)))/(((NULL) ISNULL))) RIGHT OUTER JOIN v0 ON CASE rt0.c0  WHEN ((rt0.c2) NOT NULL) THEN CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END WHEN CASE vt0.c0  WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN v0.c0 ELSE rt0.c0 END THEN (vt0.c0 IN ()) WHEN CASE rt0.c0  WHEN v0.c0 THEN rt0.c0 END THEN (- (v0.c0)) ELSE (+ (v0.c0)) END GROUP BY rt0.c2, vt0.c0, rt0.c1, rt0.c0, v0.c0;
SELECT rt0.c2, vt0.c0, rt0.c1, rt0.c0, v0.c0 FROM rt0 CROSS JOIN vt0 ON ((((rt0.c2) BETWEEN (rt0.c2) AND (vt0.c0)))/(((NULL) ISNULL))) RIGHT OUTER JOIN v0 ON CASE rt0.c0  WHEN ((rt0.c2) NOT NULL) THEN CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END WHEN CASE vt0.c0  WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN v0.c0 ELSE rt0.c0 END THEN (vt0.c0 IN ()) WHEN CASE rt0.c0  WHEN v0.c0 THEN rt0.c0 END THEN (- (v0.c0)) ELSE (+ (v0.c0)) END WHERE (((((rt0.c1) IS FALSE))<=((((rt0.c2, rt0.c0, rt0.c2)) BETWEEN ((vt0.c0, NULL, v0.c0)) AND ((rt0.c1, rt0.c0, vt0.c0)))))) GROUP BY rt0.c2, vt0.c0, rt0.c1, rt0.c0, v0.c0 UNION SELECT rt0.c2, vt0.c0, rt0.c1, rt0.c0, v0.c0 FROM rt0 CROSS JOIN vt0 ON ((((rt0.c2) BETWEEN (rt0.c2) AND (vt0.c0)))/(((NULL) ISNULL))) RIGHT OUTER JOIN v0 ON CASE rt0.c0  WHEN ((rt0.c2) NOT NULL) THEN CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END WHEN CASE vt0.c0  WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN v0.c0 ELSE rt0.c0 END THEN (vt0.c0 IN ()) WHEN CASE rt0.c0  WHEN v0.c0 THEN rt0.c0 END THEN (- (v0.c0)) ELSE (+ (v0.c0)) END WHERE ((NOT (((((rt0.c1) IS FALSE))<=((((rt0.c2, rt0.c0, rt0.c2)) BETWEEN ((vt0.c0, NULL, v0.c0)) AND ((rt0.c1, rt0.c0, vt0.c0)))))))) GROUP BY rt0.c2, vt0.c0, rt0.c1, rt0.c0, v0.c0 UNION SELECT ALL rt0.c2, vt0.c0, rt0.c1, rt0.c0, v0.c0 FROM rt0 CROSS JOIN vt0 ON ((((rt0.c2) BETWEEN (rt0.c2) AND (vt0.c0)))/(((NULL) ISNULL))) RIGHT OUTER JOIN v0 ON CASE rt0.c0  WHEN ((rt0.c2) NOT NULL) THEN CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END WHEN CASE vt0.c0  WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN v0.c0 ELSE rt0.c0 END THEN (vt0.c0 IN ()) WHEN CASE rt0.c0  WHEN v0.c0 THEN rt0.c0 END THEN (- (v0.c0)) ELSE (+ (v0.c0)) END WHERE (((((((rt0.c1) IS FALSE))<=((((rt0.c2, rt0.c0, rt0.c2)) BETWEEN ((vt0.c0, NULL, v0.c0)) AND ((rt0.c1, rt0.c0, vt0.c0)))))) ISNULL)) GROUP BY rt0.c2, vt0.c0, rt0.c1, rt0.c0, v0.c0;
SELECT ALL rt0.c2, vt0.c0, rt0.c1, rt0.c0, v0.c0 FROM rt0 CROSS JOIN vt0 ON ((((rt0.c2) BETWEEN (rt0.c2) AND (vt0.c0)))/(((NULL) ISNULL))) RIGHT OUTER JOIN v0 ON CASE rt0.c0  WHEN ((rt0.c2) NOT NULL) THEN CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END WHEN CASE vt0.c0  WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN v0.c0 ELSE rt0.c0 END THEN (vt0.c0 IN ()) WHEN CASE rt0.c0  WHEN v0.c0 THEN rt0.c0 END THEN (- (v0.c0)) ELSE (+ (v0.c0)) END GROUP BY rt0.c2, vt0.c0, rt0.c1, rt0.c0, v0.c0;
SELECT ALL rt0.c1, rt0.c2 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2 HAVING AVG(SUM(rt0.c2)) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (AVG(SUM(rt0.c2)))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((AVG(SUM(rt0.c2))) ISNULL);
SELECT * FROM v0, rt0, vt0;
SELECT ALL * FROM v0, rt0, vt0 WHERE (CAST(rt0.c0 AS NUMERIC) COLLATE NOCASE) UNION ALL SELECT ALL * FROM v0, rt0, vt0 WHERE ((NOT (CAST(rt0.c0 AS NUMERIC) COLLATE NOCASE))) UNION ALL SELECT * FROM v0, rt0, vt0 WHERE (((CAST(rt0.c0 AS NUMERIC) COLLATE NOCASE) ISNULL));
SELECT * FROM v0, rt0, vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((x'') NOT BETWEEN (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0))) AND (0Xc9d0886))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((x'') NOT BETWEEN (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0))) AND (0xc9d0886))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((x'') NOT BETWEEN (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0))) AND (0xc9d0886))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c1;
SELECT ALL rt0.c0, vt0.c0, rt0.c1 FROM rt0, vt0 WHERE ((- (CASE WHEN vt0.c0 THEN rt0.c2 END))) GROUP BY rt0.c0, vt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, vt0.c0, rt0.c1 FROM rt0, vt0 WHERE ((NOT ((- (CASE WHEN vt0.c0 THEN rt0.c2 END))))) GROUP BY rt0.c0, vt0.c0, rt0.c1 UNION SELECT rt0.c0, vt0.c0, rt0.c1 FROM rt0, vt0 WHERE ((((- (CASE WHEN vt0.c0 THEN rt0.c2 END))) ISNULL)) GROUP BY rt0.c0, vt0.c0, rt0.c1;
SELECT ALL rt0.c0, vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c1;
SELECT rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0;
SELECT rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0 HAVING ((COUNT(rt0.c0)) NOTNULL) UNION ALL SELECT rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0 HAVING (NOT (((COUNT(rt0.c0)) NOTNULL))) UNION ALL SELECT rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0 HAVING ((((COUNT(rt0.c0)) NOTNULL)) ISNULL);
SELECT rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0;
SELECT rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0 HAVING ((COUNT(rt0.c0)) NOTNULL) UNION ALL SELECT rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0 HAVING (NOT (((COUNT(rt0.c0)) NOTNULL))) UNION ALL SELECT rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0 HAVING ((((COUNT(rt0.c0)) NOTNULL)) ISNULL);
SELECT rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0;
SELECT ALL v0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON ((ABS(v0.c0)) NOT BETWEEN ((((v0.c0))<((vt0.c0)))) AND (vt0.c0 COLLATE NOCASE));
SELECT v0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON ((ABS(v0.c0)) NOT BETWEEN ((((v0.c0))<((vt0.c0)))) AND (vt0.c0 COLLATE NOCASE)) WHERE (v0.c0) UNION ALL SELECT v0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON ((ABS(v0.c0)) NOT BETWEEN ((((v0.c0))<((vt0.c0)))) AND (vt0.c0 COLLATE NOCASE)) WHERE ((NOT (v0.c0))) UNION ALL SELECT ALL v0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON ((ABS(v0.c0)) NOT BETWEEN ((((v0.c0))<((vt0.c0)))) AND (vt0.c0 COLLATE NOCASE)) WHERE (((v0.c0) ISNULL));
SELECT ALL v0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON ((ABS(v0.c0)) NOT BETWEEN ((((v0.c0))<((vt0.c0)))) AND (vt0.c0 COLLATE NOCASE));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE (CHAR(((rt0.c0) IS TRUE))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT (CHAR(((rt0.c0) IS TRUE))))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((CHAR(((rt0.c0) IS TRUE))) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT v0.c0, rt0.c1 FROM rt0, v0 GROUP BY v0.c0, rt0.c1;
SELECT v0.c0, rt0.c1 FROM rt0, v0 WHERE (((0.2382293596952334)GLOB(''))) GROUP BY v0.c0, rt0.c1 UNION SELECT ALL v0.c0, rt0.c1 FROM rt0, v0 WHERE ((NOT (((0.2382293596952334)GLOB(''))))) GROUP BY v0.c0, rt0.c1 UNION SELECT v0.c0, rt0.c1 FROM rt0, v0 NOT INDEXED WHERE (((((0.2382293596952334)GLOB(''))) ISNULL)) GROUP BY v0.c0, rt0.c1;
SELECT v0.c0, rt0.c1 FROM rt0, v0 GROUP BY v0.c0, rt0.c1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(MIN(0Xffffffffc190e9e6)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(MIN(0Xffffffffc190e9e6)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(MIN(0Xffffffffc190e9e6))) ISNULL);
SELECT ALL rt0.c0, rt0.c1 FROM rt0;
SELECT rt0.c0, rt0.c1 FROM rt0 NOT INDEXED WHERE (((((rt0.c0)=(rt0.c0))) BETWEEN (rt0.c2) AND (rt0.c2))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c0)=(rt0.c0))) BETWEEN (rt0.c2) AND (rt0.c2))))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (((((((rt0.c0)==(rt0.c0))) BETWEEN (rt0.c2) AND (rt0.c2))) ISNULL));
SELECT ALL rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT vt0.c0, rt0.c0 FROM rt0, vt0, v0;
SELECT DISTINCT vt0.c0, rt0.c0 FROM rt0, vt0, v0 WHERE (((((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))) ISNULL)) UNION SELECT DISTINCT vt0.c0, rt0.c0 FROM rt0, vt0, v0 WHERE ((NOT (((((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))) ISNULL)))) UNION SELECT DISTINCT vt0.c0, rt0.c0 FROM rt0, vt0, v0 WHERE (((((((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))) ISNULL)) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c0 FROM rt0, vt0, v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0) BETWEEN (-1.026541676E9) AND (v0.c0)))/((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((v0.c0) BETWEEN (-1.026541676E9) AND (v0.c0)))/((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((((v0.c0) BETWEEN (-1.026541676E9) AND (v0.c0)))/((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt0.c0, rt0.c1, v0.c0, rt0.c0 FROM rt0, v0 FULL OUTER JOIN vt0 ON ((rt0.c1)OR(rt0.c1)) COLLATE BINARY GROUP BY vt0.c0, rt0.c1, v0.c0, rt0.c0;
SELECT vt0.c0, rt0.c1, v0.c0, rt0.c0 FROM rt0, v0 FULL OUTER JOIN vt0 ON ((rt0.c1)OR(rt0.c1)) COLLATE BINARY GROUP BY vt0.c0, rt0.c1, v0.c0, rt0.c0 HAVING SUM(COALESCE('-874199597', rt0.c0)) UNION ALL SELECT ALL vt0.c0, rt0.c1, v0.c0, rt0.c0 FROM rt0, v0 FULL OUTER JOIN vt0 ON ((rt0.c1)OR(rt0.c1)) COLLATE BINARY GROUP BY vt0.c0, rt0.c1, v0.c0, rt0.c0 HAVING (NOT (SUM(COALESCE('-874199597', rt0.c0)))) UNION ALL SELECT ALL vt0.c0, rt0.c1, v0.c0, rt0.c0 FROM rt0, v0 FULL OUTER JOIN vt0 ON ((rt0.c1)OR(rt0.c1)) COLLATE BINARY GROUP BY vt0.c0, rt0.c1, v0.c0, rt0.c0 HAVING ((SUM(COALESCE('-874199597', rt0.c0))) ISNULL);
SELECT vt0.c0, rt0.c1, v0.c0, rt0.c0 FROM rt0, v0 FULL OUTER JOIN vt0 ON ((rt0.c1)OR(rt0.c1)) COLLATE BINARY GROUP BY vt0.c0, rt0.c1, v0.c0, rt0.c0;
SELECT vt0.c0, rt0.c1, v0.c0, rt0.c0 FROM rt0, v0 FULL OUTER JOIN vt0 ON ((rt0.c1)OR(rt0.c1)) COLLATE BINARY GROUP BY vt0.c0, rt0.c1, v0.c0, rt0.c0 HAVING SUM(COALESCE('-874199597', rt0.c0)) UNION ALL SELECT ALL vt0.c0, rt0.c1, v0.c0, rt0.c0 FROM rt0, v0 FULL OUTER JOIN vt0 ON ((rt0.c1)OR(rt0.c1)) COLLATE BINARY GROUP BY vt0.c0, rt0.c1, v0.c0, rt0.c0 HAVING (NOT (SUM(COALESCE('-874199597', rt0.c0)))) UNION ALL SELECT ALL vt0.c0, rt0.c1, v0.c0, rt0.c0 FROM rt0, v0 FULL OUTER JOIN vt0 ON ((rt0.c1)OR(rt0.c1)) COLLATE BINARY GROUP BY vt0.c0, rt0.c1, v0.c0, rt0.c0 HAVING ((SUM(COALESCE('-874199597', rt0.c0))) ISNULL);
SELECT vt0.c0, rt0.c1, v0.c0, rt0.c0 FROM rt0, v0 FULL OUTER JOIN vt0 ON ((rt0.c1)OR(rt0.c1)) COLLATE BINARY GROUP BY vt0.c0, rt0.c1, v0.c0, rt0.c0;
SELECT ALL * FROM rt0, v0;
SELECT ALL * FROM rt0, v0 WHERE ((((((v0.c0))<=((rt0.c1)))) NOTNULL)) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((NOT ((((((v0.c0))<=((rt0.c1)))) NOTNULL)))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((((((((v0.c0))<=((rt0.c1)))) NOTNULL)) ISNULL));
SELECT ALL * FROM rt0, v0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE (((((((((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)))OR((((rt0.c0))>=((rt0.c2))))))OR(rt0.c1 COLLATE RTRIM)))AND(rt0.c2 COLLATE RTRIM)))OR(NULLIF(rt0.c1, rt0.c1)))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((((((((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)))OR((((rt0.c0))>=((rt0.c2))))))OR(rt0.c1 COLLATE RTRIM)))AND(rt0.c2 COLLATE RTRIM)))OR(NULLIF(rt0.c1, rt0.c1)))))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE (((((((((((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)))OR((((rt0.c0))>=((rt0.c2))))))OR(rt0.c1 COLLATE RTRIM)))AND(rt0.c2 COLLATE RTRIM)))OR(NULLIF(rt0.c1, rt0.c1)))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 WHERE ((+ ((('-1745540390') NOT BETWEEN (vt0.c0) AND (NULL))))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 WHERE ((NOT ((+ ((('-1745540390') NOT BETWEEN (vt0.c0) AND (NULL))))))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 WHERE ((((+ ((('-1745540390') NOT BETWEEN (vt0.c0) AND (NULL))))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING MAX(MIN(COUNT(*))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MAX(MIN(COUNT(*))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MAX(MIN(COUNT(*)))) ISNULL);
SELECT ALL rt0.c1, vt0.c0 FROM vt0, rt0;
SELECT rt0.c1, vt0.c0 FROM vt0, rt0 WHERE (((((rt0.c0)>(rt0.c2)))&(rt0.c0))) UNION ALL SELECT ALL rt0.c1, vt0.c0 FROM vt0, rt0 WHERE ((NOT (((((rt0.c0)>(rt0.c2)))&(rt0.c0))))) UNION ALL SELECT ALL rt0.c1, vt0.c0 FROM vt0, rt0 WHERE (((((((rt0.c0)>(rt0.c2)))&(rt0.c0))) ISNULL));
SELECT ALL rt0.c1, vt0.c0 FROM vt0, rt0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (((((rt0.c1)%(rt0.c2)))-(TRIM(DISTINCT rt0.c1)))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (((((rt0.c1)%(rt0.c2)))-(TRIM(DISTINCT rt0.c1)))))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((((((rt0.c1)%(rt0.c2)))-(TRIM(DISTINCT rt0.c1)))) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT ALL vt0.c0, rt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c0, rt0.c2, rt0.c1;
SELECT ALL vt0.c0, rt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 WHERE (LOWER(DISTINCT ((rt0.c1)*(vt0.c0)))) GROUP BY vt0.c0, rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL vt0.c0, rt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 WHERE ((NOT (LOWER(DISTINCT ((rt0.c1)*(vt0.c0)))))) GROUP BY vt0.c0, rt0.c0, rt0.c2, rt0.c1 UNION SELECT vt0.c0, rt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 WHERE (((LOWER(DISTINCT ((rt0.c1)*(vt0.c0)))) ISNULL)) GROUP BY vt0.c0, rt0.c0, rt0.c2, rt0.c1;
SELECT ALL vt0.c0, rt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c0, rt0.c2, rt0.c1;
SELECT vt0.c0 FROM rt0, v0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM rt0, v0, vt0 GROUP BY vt0.c0 HAVING SUM(((rt0.c1)>=(MIN(GROUP_CONCAT(v0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM rt0, v0, vt0 GROUP BY vt0.c0 HAVING (NOT (SUM(((rt0.c1)>=(MIN(GROUP_CONCAT(v0.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM rt0, v0, vt0 GROUP BY vt0.c0 HAVING ((SUM(((rt0.c1)>=(MIN(GROUP_CONCAT(v0.c0)))))) ISNULL);
SELECT SUM(((LIKELY(DISTINCT rt0.c1)) NOT BETWEEN ((((rt0.c1))=((vt0.c0)))) AND (((((((((((((v0.c0)AND(rt0.c1)))OR(vt0.c0)))OR(0.5384671712674481)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c0))))) FROM vt0, rt0, v0 ORDER BY ((((rt0.c2)>>(v0.c0)))>(((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)))) ASC  NULLS LAST, (((CASE WHEN rt0.c2 THEN rt0.c1 ELSE v0.c0 END))>=((((((v0.c0)OR(rt0.c2)))AND(vt0.c0)))));
SELECT ALL rt0.c2 FROM v0, vt0, rt0;
SELECT rt0.c2 FROM v0, vt0, rt0 WHERE (((((vt0.c0)GLOB(rt0.c2))) NOT BETWEEN ((vt0.c0 IN (vt0.c0, v0.c0))) AND (json_patch(rt0.c0, rt0.c2)))) UNION ALL SELECT ALL rt0.c2 FROM v0, vt0, rt0 WHERE ((NOT (((((vt0.c0)GLOB(rt0.c2))) NOT BETWEEN ((vt0.c0 IN (vt0.c0, v0.c0))) AND (json_patch(rt0.c0, rt0.c2)))))) UNION ALL SELECT rt0.c2 FROM v0, vt0, rt0 WHERE (((((((vt0.c0)GLOB(rt0.c2))) NOT BETWEEN ((vt0.c0 IN (vt0.c0, v0.c0))) AND (json_patch(rt0.c0, rt0.c2)))) ISNULL));
SELECT ALL rt0.c2 FROM v0, vt0, rt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (DATETIME(vt0.c0 COLLATE BINARY, (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), vt0.c0)) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (DATETIME(vt0.c0 COLLATE BINARY, (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), vt0.c0)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((DATETIME(vt0.c0 COLLATE BINARY, (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), vt0.c0)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0 IN (vt0.c0)) IN ())) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0 IN (vt0.c0)) IN ())))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0 IN (vt0.c0)) IN ())) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c2, rt0.c0 FROM vt0, v0, rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM vt0, v0, rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((SUM(rt0.c2))|(MAX(TOTAL(MIN(vt0.c0))))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM vt0, v0, rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (((SUM(rt0.c2))|(MAX(TOTAL(MIN(vt0.c0))))))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM vt0, v0, rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((((SUM(rt0.c2))|(MAX(TOTAL(MIN(vt0.c0)))))) ISNULL);
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((982153337 IN ())))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT ((NOT ((982153337 IN ())))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((((NOT ((982153337 IN ())))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT * FROM vt0, rt0, v0;
SELECT DISTINCT * FROM vt0, rt0, v0 WHERE (CASE WHEN NULL THEN (- (rt0.c1)) END) UNION SELECT DISTINCT * FROM vt0, rt0, v0 WHERE ((NOT (CASE WHEN NULL THEN (- (rt0.c1)) END))) UNION SELECT DISTINCT * FROM vt0, rt0, v0 WHERE (((CASE WHEN NULL THEN (- (rt0.c1)) END) ISNULL));
SELECT DISTINCT * FROM vt0, rt0, v0;
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 NOT INDEXED WHERE ((((~ (vt0.c0)))<>(vt0.c0))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM v0, vt0 WHERE ((NOT ((((~ (vt0.c0)))<>(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM v0, vt0 WHERE ((((((~ (vt0.c0)))<>(vt0.c0))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0, vt0 NOT INDEXED GROUP BY rt0.c0, rt0.c2 HAVING (((((((GROUP_CONCAT(vt0.c0))OR(AVG(SUM(rt0.c1)))))OR(rt0.c2))))=((AVG(MIN(1545637516)) COLLATE BINARY))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT ((((((((GROUP_CONCAT(vt0.c0))OR(AVG(SUM(rt0.c1)))))OR(rt0.c2))))==((AVG(MIN(1545637516)) COLLATE BINARY))))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c2 HAVING (((((((((GROUP_CONCAT(vt0.c0))OR(AVG(SUM(rt0.c1)))))OR(rt0.c2))))=((AVG(MIN(1545637516)) COLLATE BINARY)))) ISNULL);
SELECT * FROM v0, vt0, rt0;
SELECT ALL * FROM v0, vt0, rt0 WHERE (0.35165252841941685) UNION ALL SELECT * FROM v0, vt0, rt0 WHERE ((NOT (0.35165252841941685))) UNION ALL SELECT ALL * FROM v0, vt0, rt0 WHERE (((0.35165252841941685) ISNULL));
SELECT * FROM v0, vt0, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c2 COLLATE RTRIM) BETWEEN (rtreenode(rt0.c0, rt0.c0)) AND (rt0.c2))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c2 COLLATE RTRIM) BETWEEN (rtreenode(rt0.c0, rt0.c0)) AND (rt0.c2))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c2 COLLATE RTRIM) BETWEEN (rtreenode(rt0.c0, rt0.c0)) AND (rt0.c2))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT v0.c0, rt0.c1, rt0.c0 FROM v0, vt0, rt0 GROUP BY v0.c0, rt0.c1, rt0.c0;
SELECT v0.c0, rt0.c1, rt0.c0 FROM v0, vt0, rt0 WHERE (NULL) GROUP BY v0.c0, rt0.c1, rt0.c0 UNION SELECT ALL v0.c0, rt0.c1, rt0.c0 FROM v0, vt0, rt0 WHERE ((NOT (NULL))) GROUP BY v0.c0, rt0.c1, rt0.c0 UNION SELECT ALL v0.c0, rt0.c1, rt0.c0 FROM v0, vt0, rt0 WHERE (((NULL) ISNULL)) GROUP BY v0.c0, rt0.c1, rt0.c0;
SELECT v0.c0, rt0.c1, rt0.c0 FROM v0, vt0, rt0 GROUP BY v0.c0, rt0.c1, rt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT((vt0.c0 IN ())) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT((vt0.c0 IN ())))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT((vt0.c0 IN ()))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT((vt0.c0 IN ())) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT((vt0.c0 IN ())))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT((vt0.c0 IN ()))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (x'') UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (x''))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((x'') ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT vt0.c0, rt0.c1, v0.c0, rt0.c0, rt0.c2 FROM v0, rt0, vt0;
SELECT DISTINCT vt0.c0, rt0.c1, v0.c0, rt0.c0, rt0.c2 FROM v0, rt0, vt0 WHERE (((((((((((rt0.c0)AND(rt0.c0)))AND(vt0.c0)))AND(rt0.c0)))AND(vt0.c0))) NOT BETWEEN (((rt0.c1)LIKE(rt0.c2))) AND ((v0.c0 IN ())))) UNION SELECT DISTINCT vt0.c0, rt0.c1, v0.c0, rt0.c0, rt0.c2 FROM v0, rt0, vt0 WHERE ((NOT (((((((((((rt0.c0)AND(rt0.c0)))AND(vt0.c0)))AND(rt0.c0)))AND(vt0.c0))) NOT BETWEEN (((rt0.c1)LIKE(rt0.c2))) AND ((v0.c0 IN ())))))) UNION SELECT DISTINCT vt0.c0, rt0.c1, v0.c0, rt0.c0, rt0.c2 FROM v0, rt0, vt0 WHERE (((((((((((((rt0.c0)AND(rt0.c0)))AND(vt0.c0)))AND(rt0.c0)))AND(vt0.c0))) NOT BETWEEN (((rt0.c1)LIKE(rt0.c2))) AND ((v0.c0 IN ())))) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c1, v0.c0, rt0.c0, rt0.c2 FROM v0, rt0, vt0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE (v0.c0) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE ((NOT (v0.c0))) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE (((v0.c0) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL rt0.c0, vt0.c0, rt0.c1 FROM vt0 NATURAL JOIN rt0 GROUP BY rt0.c0, vt0.c0, rt0.c1;
SELECT ALL rt0.c0, vt0.c0, rt0.c1 FROM vt0 NATURAL JOIN rt0 GROUP BY rt0.c0, vt0.c0, rt0.c1 HAVING COUNT(*) UNION ALL SELECT rt0.c0, vt0.c0, rt0.c1 FROM vt0 NATURAL JOIN rt0 GROUP BY rt0.c0, vt0.c0, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, vt0.c0, rt0.c1 FROM vt0 NATURAL JOIN rt0 GROUP BY rt0.c0, vt0.c0, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0, vt0.c0, rt0.c1 FROM vt0 NATURAL JOIN rt0 GROUP BY rt0.c0, vt0.c0, rt0.c1;
SELECT ALL rt0.c0, vt0.c0, rt0.c1 FROM vt0 NATURAL JOIN rt0 GROUP BY rt0.c0, vt0.c0, rt0.c1 HAVING COUNT(*) UNION ALL SELECT rt0.c0, vt0.c0, rt0.c1 FROM vt0 NATURAL JOIN rt0 GROUP BY rt0.c0, vt0.c0, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, vt0.c0, rt0.c1 FROM vt0 NATURAL JOIN rt0 GROUP BY rt0.c0, vt0.c0, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0, vt0.c0, rt0.c1 FROM vt0 NATURAL JOIN rt0 GROUP BY rt0.c0, vt0.c0, rt0.c1;
SELECT * FROM rt0, v0, vt0;
SELECT ALL * FROM rt0, v0, vt0 WHERE (((CASE 0.15396201398717668  WHEN rt0.c0 THEN x'' END)&(((v0.c0)>(rt0.c2))))) UNION ALL SELECT ALL * FROM rt0, v0, vt0 WHERE ((NOT (((CASE 0.15396201398717668  WHEN rt0.c0 THEN x'' END)&(((v0.c0)>(rt0.c2))))))) UNION ALL SELECT ALL * FROM rt0, v0, vt0 WHERE (((((CASE 0.15396201398717668  WHEN rt0.c0 THEN x'' END)&(((v0.c0)>(rt0.c2))))) ISNULL));
SELECT * FROM rt0, v0, vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c0)AND(NULL)))AND(rt0.c0)) COLLATE BINARY) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c0)AND(NULL)))AND(rt0.c0)) COLLATE BINARY))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c0)AND(NULL)))AND(rt0.c0)) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL vt0.c0, rt0.c2 FROM rt0 FULL OUTER JOIN vt0 ON (((rt0.c0)) BETWEEN ((CAST(rt0.c0 AS REAL))) AND ((rt0.c2 COLLATE RTRIM))) GROUP BY vt0.c0, rt0.c2;
SELECT ALL vt0.c0, rt0.c2 FROM rt0 FULL OUTER JOIN vt0 ON (((rt0.c0)) BETWEEN ((CAST(rt0.c0 AS REAL))) AND ((rt0.c2 COLLATE RTRIM))) WHERE (((((((((CAST(rt0.c0 AS REAL))AND((((rt0.c2))>((rt0.c0))))))AND(CASE WHEN rt0.c0 THEN rt0.c2 ELSE vt0.c0 END)))OR(rt0.c0 COLLATE NOCASE)))AND((~ ('330164718'))))) GROUP BY vt0.c0, rt0.c2 UNION SELECT ALL vt0.c0, rt0.c2 FROM rt0 FULL OUTER JOIN vt0 ON (((rt0.c0)) BETWEEN ((CAST(rt0.c0 AS REAL))) AND ((rt0.c2 COLLATE RTRIM))) WHERE ((NOT (((((((((CAST(rt0.c0 AS REAL))AND((((rt0.c2))>((rt0.c0))))))AND(CASE WHEN rt0.c0 THEN rt0.c2 ELSE vt0.c0 END)))OR(rt0.c0 COLLATE NOCASE)))AND((~ ('330164718'))))))) GROUP BY vt0.c0, rt0.c2 UNION SELECT ALL vt0.c0, rt0.c2 FROM rt0 FULL OUTER JOIN vt0 ON (((rt0.c0)) BETWEEN ((CAST(rt0.c0 AS REAL))) AND ((rt0.c2 COLLATE RTRIM))) WHERE (((((((((((CAST(rt0.c0 AS REAL))AND((((rt0.c2))>((rt0.c0))))))AND(CASE WHEN rt0.c0 THEN rt0.c2 ELSE vt0.c0 END)))OR(rt0.c0 COLLATE NOCASE)))AND((~ ('330164718'))))) ISNULL)) GROUP BY vt0.c0, rt0.c2;
SELECT ALL vt0.c0, rt0.c2 FROM rt0 FULL OUTER JOIN vt0 ON (((rt0.c0)) BETWEEN ((CAST(rt0.c0 AS REAL))) AND ((rt0.c2 COLLATE RTRIM))) GROUP BY vt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2, vt0.c0;
SELECT rt0.c0, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2, vt0.c0 HAVING ((SUM(COUNT(AVG(MIN(GROUP_CONCAT(rt0.c1)))))) NOT NULL) UNION ALL SELECT rt0.c0, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2, vt0.c0 HAVING (NOT (((SUM(COUNT(AVG(MIN(GROUP_CONCAT(rt0.c1)))))) NOT NULL))) UNION ALL SELECT ALL rt0.c0, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2, vt0.c0 HAVING ((((SUM(COUNT(AVG(MIN(GROUP_CONCAT(rt0.c1)))))) NOT NULL)) ISNULL);
SELECT ALL v0.c0, rt0.c1, rt0.c2 FROM v0, vt0, rt0;
SELECT ALL v0.c0, rt0.c1, rt0.c2 FROM v0, vt0, rt0 WHERE (LIKELIHOOD(((v0.c0)>(rt0.c1)), 0.4246615898870423)) UNION ALL SELECT v0.c0, rt0.c1, rt0.c2 FROM v0, vt0, rt0 WHERE ((NOT (LIKELIHOOD(((v0.c0)>(rt0.c1)), 0.4246615898870423)))) UNION ALL SELECT v0.c0, rt0.c1, rt0.c2 FROM v0, vt0, rt0 WHERE (((LIKELIHOOD(((v0.c0)>(rt0.c1)), 0.4246615898870423)) ISNULL));
SELECT ALL v0.c0, rt0.c1, rt0.c2 FROM v0, vt0, rt0;
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE (json_type(((vt0.c0)IS(vt0.c0)))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT (json_type(((vt0.c0)IS(vt0.c0)))))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE (((json_type(((vt0.c0)IS(vt0.c0)))) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE ((((((((('')AND(rt0.c0)))OR(rt0.c1)))OR((rt0.c1 IN ()))))OR(((((rt0.c2)AND(rt0.c0)))OR(rt0.c0))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT ((((((((('')AND(rt0.c0)))OR(rt0.c1)))OR((rt0.c1 IN ()))))OR(((((rt0.c2)AND(rt0.c0)))OR(rt0.c0))))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((((((((((('')AND(rt0.c0)))OR(rt0.c1)))OR((rt0.c1 IN ()))))OR(((((rt0.c2)AND(rt0.c0)))OR(rt0.c0))))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0, v0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, v0.c0, rt0.c1;
SELECT rt0.c0, v0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, v0.c0, rt0.c1 HAVING MIN(rt0.c2 COLLATE NOCASE) UNION ALL SELECT ALL rt0.c0, v0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, v0.c0, rt0.c1 HAVING (NOT (MIN(rt0.c2 COLLATE NOCASE))) UNION ALL SELECT rt0.c0, v0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, v0.c0, rt0.c1 HAVING ((MIN(rt0.c2 COLLATE NOCASE)) ISNULL);
SELECT rt0.c0, v0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, v0.c0, rt0.c1;
SELECT rt0.c0, v0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, v0.c0, rt0.c1 HAVING MIN(rt0.c2 COLLATE NOCASE) UNION ALL SELECT ALL rt0.c0, v0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, v0.c0, rt0.c1 HAVING (NOT (MIN(rt0.c2 COLLATE NOCASE))) UNION ALL SELECT rt0.c0, v0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, v0.c0, rt0.c1 HAVING ((MIN(rt0.c2 COLLATE NOCASE)) ISNULL);
SELECT rt0.c0, v0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, v0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1, v0.c0 FROM vt0, rt0, v0;
SELECT ALL rt0.c0, rt0.c1, v0.c0 FROM vt0, rt0, v0 WHERE ((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND (('327825321'))) COLLATE RTRIM) UNION ALL SELECT rt0.c0, rt0.c1, v0.c0 FROM vt0, rt0, v0 WHERE ((NOT ((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND (('327825321'))) COLLATE RTRIM))) UNION ALL SELECT rt0.c0, rt0.c1, v0.c0 FROM vt0, rt0, v0 WHERE ((((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND (('327825321'))) COLLATE RTRIM) ISNULL));
SELECT ALL rt0.c0, rt0.c1, v0.c0 FROM vt0, rt0, v0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((NOT (vt0.c0)))==(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((((NOT (vt0.c0)))=(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((NOT (vt0.c0)))=(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0, rt0.c0, rt0.c1, rt0.c2, v0.c0 FROM rt0, vt0, v0 GROUP BY vt0.c0, rt0.c0, rt0.c1, rt0.c2, v0.c0;
SELECT ALL vt0.c0, rt0.c0, rt0.c1, rt0.c2, v0.c0 FROM rt0, vt0 NOT INDEXED, v0 WHERE (((NOT (rt0.c2)) IN (((v0.c0) NOT BETWEEN (rt0.c0) AND (x'e8fd'))))) GROUP BY vt0.c0, rt0.c0, rt0.c1, rt0.c2, v0.c0 UNION SELECT ALL vt0.c0, rt0.c0, rt0.c1, rt0.c2, v0.c0 FROM rt0, vt0, v0 WHERE ((NOT (((NOT (rt0.c2)) IN (((v0.c0) NOT BETWEEN (rt0.c0) AND (x'e8fd'))))))) GROUP BY vt0.c0, rt0.c0, rt0.c1, rt0.c2, v0.c0 UNION SELECT vt0.c0, rt0.c0, rt0.c1, rt0.c2, v0.c0 FROM rt0, vt0, v0 WHERE (((((NOT (rt0.c2)) IN (((v0.c0) NOT BETWEEN (rt0.c0) AND (x'e8fd'))))) ISNULL)) GROUP BY vt0.c0, rt0.c0, rt0.c1, rt0.c2, v0.c0;
SELECT vt0.c0, rt0.c0, rt0.c1, rt0.c2, v0.c0 FROM rt0, vt0, v0 GROUP BY vt0.c0, rt0.c0, rt0.c1, rt0.c2, v0.c0;
SELECT rt0.c1, rt0.c2 FROM v0 LEFT OUTER JOIN vt0 ON vt0.c0 LEFT OUTER JOIN rt0 ON ((((UNLIKELY(DISTINCT rt0.c2))AND(((((rt0.c0)OR(v0.c0)))OR(rt0.c0)))))OR('')) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM v0 LEFT OUTER JOIN vt0 ON vt0.c0 LEFT OUTER JOIN rt0 ON ((((UNLIKELY(DISTINCT rt0.c2))AND(((((rt0.c0)OR(v0.c0)))OR(rt0.c0)))))OR('')) GROUP BY rt0.c1, rt0.c2 HAVING x'535c1b20' UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM v0 LEFT OUTER JOIN vt0 ON vt0.c0 LEFT OUTER JOIN rt0 ON ((((UNLIKELY(DISTINCT rt0.c2))AND(((((rt0.c0)OR(v0.c0)))OR(rt0.c0)))))OR('')) GROUP BY rt0.c1, rt0.c2 HAVING (NOT (x'535c1b20')) UNION ALL SELECT rt0.c1, rt0.c2 FROM v0 LEFT OUTER JOIN vt0 ON vt0.c0 LEFT OUTER JOIN rt0 ON ((((UNLIKELY(DISTINCT rt0.c2))AND(((((rt0.c0)OR(v0.c0)))OR(rt0.c0)))))OR('')) GROUP BY rt0.c1, rt0.c2 HAVING ((x'535c1b20') ISNULL);
SELECT rt0.c1, rt0.c2 FROM v0 LEFT OUTER JOIN vt0 ON vt0.c0 LEFT OUTER JOIN rt0 ON ((((UNLIKELY(DISTINCT rt0.c2))AND(((((rt0.c0)OR(v0.c0)))OR(rt0.c0)))))OR('')) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM v0 LEFT OUTER JOIN vt0 ON vt0.c0 LEFT OUTER JOIN rt0 ON ((((UNLIKELY(DISTINCT rt0.c2))AND(((((rt0.c0)OR(v0.c0)))OR(rt0.c0)))))OR('')) GROUP BY rt0.c1, rt0.c2 HAVING x'535c1b20' UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM v0 LEFT OUTER JOIN vt0 ON vt0.c0 LEFT OUTER JOIN rt0 ON ((((UNLIKELY(DISTINCT rt0.c2))AND(((((rt0.c0)OR(v0.c0)))OR(rt0.c0)))))OR('')) GROUP BY rt0.c1, rt0.c2 HAVING (NOT (x'535c1b20')) UNION ALL SELECT rt0.c1, rt0.c2 FROM v0 LEFT OUTER JOIN vt0 ON vt0.c0 LEFT OUTER JOIN rt0 ON ((((UNLIKELY(DISTINCT rt0.c2))AND(((((rt0.c0)OR(v0.c0)))OR(rt0.c0)))))OR('')) GROUP BY rt0.c1, rt0.c2 HAVING ((x'535c1b20') ISNULL);
SELECT rt0.c1, rt0.c2 FROM v0 LEFT OUTER JOIN vt0 ON vt0.c0 LEFT OUTER JOIN rt0 ON ((((UNLIKELY(DISTINCT rt0.c2))AND(((((rt0.c0)OR(v0.c0)))OR(rt0.c0)))))OR('')) GROUP BY rt0.c1, rt0.c2;
SELECT * FROM vt0 CROSS JOIN rt0 ON ((CAST(rt0.c1 AS NUMERIC))|(CASE rt0.c1  WHEN '*I?‰íî' THEN rt0.c0 ELSE vt0.c0 END)) FULL OUTER JOIN v0 ON ((CASE x'a8c3'  WHEN rt0.c2 THEN x'c420' END)||(rt0.c0));
SELECT * FROM vt0 CROSS JOIN rt0 ON ((CAST(rt0.c1 AS NUMERIC))|(CASE rt0.c1  WHEN '*I?‰íî' THEN rt0.c0 ELSE vt0.c0 END)) FULL OUTER JOIN v0 ON ((CASE x'a8c3'  WHEN rt0.c2 THEN x'c420' END)||(rt0.c0)) WHERE (((((((rt0.c1)OR(v0.c0)))AND(rt0.c1))) IS TRUE)) UNION ALL SELECT * FROM vt0 CROSS JOIN rt0 ON ((CAST(rt0.c1 AS NUMERIC))|(CASE rt0.c1  WHEN '*I?‰íî' THEN rt0.c0 ELSE vt0.c0 END)) FULL OUTER JOIN v0 ON ((CASE x'a8c3'  WHEN rt0.c2 THEN x'c420' END)||(rt0.c0)) WHERE ((NOT (((((((rt0.c1)OR(v0.c0)))AND(rt0.c1))) IS TRUE)))) UNION ALL SELECT * FROM vt0 CROSS JOIN rt0 ON ((CAST(rt0.c1 AS NUMERIC))|(CASE rt0.c1  WHEN '*I?‰íî' THEN rt0.c0 ELSE vt0.c0 END)) FULL OUTER JOIN v0 ON ((CASE x'a8c3'  WHEN rt0.c2 THEN x'c420' END)||(rt0.c0)) WHERE (((((((((rt0.c1)OR(v0.c0)))AND(rt0.c1))) IS TRUE)) ISNULL));
SELECT * FROM vt0 CROSS JOIN rt0 ON ((CAST(rt0.c1 AS NUMERIC))|(CASE rt0.c1  WHEN '*I?‰íî' THEN rt0.c0 ELSE vt0.c0 END)) FULL OUTER JOIN v0 ON ((CASE x'a8c3'  WHEN rt0.c2 THEN x'c420' END)||(rt0.c0));
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN vt0 ON CAST(x'' AS NUMERIC);
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN vt0 ON CAST(x'' AS NUMERIC) WHERE ('D#' COLLATE NOCASE) UNION SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN vt0 ON CAST(x'' AS NUMERIC) WHERE ((NOT ('D#' COLLATE NOCASE))) UNION SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN vt0 ON CAST(x'' AS NUMERIC) WHERE ((('D#' COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN vt0 ON CAST(x'' AS NUMERIC);
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 WHERE ((((v0.c0, vt0.c0, vt0.c0)) BETWEEN ((((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)), ((v0.c0) IS TRUE), (~ (0.765323037945541)))) AND ((((v0.c0)||('0.29892929233528553')), vt0.c0, (~ (v0.c0)))))) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM v0, vt0 WHERE ((NOT ((((v0.c0, vt0.c0, vt0.c0)) BETWEEN ((((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)), ((v0.c0) IS TRUE), (~ (0.765323037945541)))) AND ((((v0.c0)||('0.29892929233528553')), vt0.c0, (~ (v0.c0)))))))) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM v0, vt0 WHERE ((((((v0.c0, vt0.c0, vt0.c0)) BETWEEN ((((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)), ((v0.c0) IS TRUE), (~ (0.765323037945541)))) AND ((((v0.c0)||('0.29892929233528553')), vt0.c0, (~ (v0.c0)))))) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0, rt0.c2, rt0.c1 FROM rt0, v0, vt0 GROUP BY v0.c0, vt0.c0, rt0.c2, rt0.c1;
SELECT ALL v0.c0, vt0.c0, rt0.c2, rt0.c1 FROM rt0, v0, vt0 GROUP BY v0.c0, vt0.c0, rt0.c2, rt0.c1 HAVING COUNT(AVG(rt0.c1)) UNION ALL SELECT v0.c0, vt0.c0, rt0.c2, rt0.c1 FROM rt0, v0, vt0 GROUP BY v0.c0, vt0.c0, rt0.c2, rt0.c1 HAVING (NOT (COUNT(AVG(rt0.c1)))) UNION ALL SELECT v0.c0, vt0.c0, rt0.c2, rt0.c1 FROM rt0, v0, vt0 GROUP BY v0.c0, vt0.c0, rt0.c2, rt0.c1 HAVING ((COUNT(AVG(rt0.c1))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0)>(vt0.c0))) IS TRUE)) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0)>(vt0.c0))) IS TRUE)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c0)>(vt0.c0))) IS TRUE)) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT v0.c0, vt0.c0, rt0.c1, rt0.c2, rt0.c0 FROM vt0 INNER JOIN rt0 ON rt0.c1 INNER JOIN v0 ON CAST(((((v0.c0)OR(v0.c0)))OR('ÍÖûM9?ypIL')) AS NUMERIC);
SELECT DISTINCT v0.c0, vt0.c0, rt0.c1, rt0.c2, rt0.c0 FROM vt0 INNER JOIN rt0 ON rt0.c1 INNER JOIN v0 ON CAST(((((v0.c0)OR(v0.c0)))OR('ÍÖûM9?ypIL')) AS NUMERIC) WHERE ((~ (((('-1732711773'))>=((vt0.c0)))))) UNION SELECT DISTINCT v0.c0, vt0.c0, rt0.c1, rt0.c2, rt0.c0 FROM vt0 INNER JOIN rt0 ON rt0.c1 INNER JOIN v0 ON CAST(((((v0.c0)OR(v0.c0)))OR('ÍÖûM9?ypIL')) AS NUMERIC) WHERE ((NOT ((~ (((('-1732711773'))>=((vt0.c0)))))))) UNION SELECT DISTINCT v0.c0, vt0.c0, rt0.c1, rt0.c2, rt0.c0 FROM vt0 INNER JOIN rt0 ON rt0.c1 INNER JOIN v0 ON CAST(((((v0.c0)OR(v0.c0)))OR('ÍÖûM9?ypIL')) AS NUMERIC) WHERE ((((~ (((('-1732711773'))>=((vt0.c0)))))) ISNULL));
SELECT DISTINCT v0.c0, vt0.c0, rt0.c1, rt0.c2, rt0.c0 FROM vt0 INNER JOIN rt0 ON rt0.c1 INNER JOIN v0 ON CAST(((((v0.c0)OR(v0.c0)))OR('ÍÖûM9?ypIL')) AS NUMERIC);
SELECT rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM vt0, rt0 WHERE (vt0.c0) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM vt0, rt0 WHERE ((NOT (vt0.c0))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM vt0, rt0 WHERE (((vt0.c0) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0;
SELECT ALL v0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON (+ (((v0.c0) IS FALSE))) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON (+ (((v0.c0) IS FALSE))) GROUP BY v0.c0 HAVING ((((SUM(vt0.c0))>=(TOTAL(TOTAL(COUNT(*))))))|(MAX(vt0.c0))) UNION ALL SELECT v0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON (+ (((v0.c0) IS FALSE))) GROUP BY v0.c0 HAVING (NOT (((((SUM(vt0.c0))>=(TOTAL(TOTAL(COUNT(*))))))|(MAX(vt0.c0))))) UNION ALL SELECT v0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON (+ (((v0.c0) IS FALSE))) GROUP BY v0.c0 HAVING ((((((SUM(vt0.c0))>=(TOTAL(TOTAL(COUNT(*))))))|(MAX(vt0.c0)))) ISNULL);
SELECT MIN(((((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0)))|((+ (rt0.c1))))) FROM v0, rt0 ORDER BY x'' ASC;
SELECT * FROM vt0 CROSS JOIN v0 ON ((((v0.c0) BETWEEN (rt0.c2) AND ('')))&(((rt0.c1) NOTNULL))) FULL OUTER JOIN rt0 ON CAST((~ (v0.c0)) AS INTEGER);
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0)>=(vt0.c0)))IS((NOT (vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.c0)>=(vt0.c0)))IS((NOT (vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0)>=(vt0.c0)))IS((NOT (vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0, v0.c0 FROM v0 CROSS JOIN vt0 ON ABS(CASE WHEN vt0.c0 THEN 0.25822554987392776 END) GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM v0 CROSS JOIN vt0 ON ABS(CASE WHEN vt0.c0 THEN 0.25822554987392776 END) WHERE ((NOT (x'' COLLATE RTRIM))) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM v0 CROSS JOIN vt0 ON ABS(CASE WHEN vt0.c0 THEN 0.25822554987392776 END) WHERE ((NOT ((NOT (x'' COLLATE RTRIM))))) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM v0 CROSS JOIN vt0 ON ABS(CASE WHEN vt0.c0 THEN 0.25822554987392776 END) WHERE ((((NOT (x'' COLLATE RTRIM))) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM v0 CROSS JOIN vt0 ON ABS(CASE WHEN vt0.c0 THEN 0.25822554987392776 END) GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MIN(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MIN(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MIN(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MIN(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM rt0, v0;
SELECT ALL * FROM rt0, v0 WHERE ((((rt0.c2)IS NOT('')) IN ())) UNION ALL SELECT * FROM rt0, v0 WHERE ((NOT ((((rt0.c2)IS NOT('')) IN ())))) UNION ALL SELECT * FROM rt0, v0 WHERE ((((((rt0.c2)IS NOT('')) IN ())) ISNULL));
SELECT * FROM rt0, v0;
SELECT DISTINCT vt0.c0 FROM vt0 NATURAL JOIN v0;
SELECT DISTINCT vt0.c0 FROM vt0 NATURAL JOIN v0 WHERE (vt0.c0) UNION SELECT DISTINCT vt0.c0 FROM vt0 NATURAL JOIN v0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.c0 FROM vt0 NATURAL JOIN v0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0 NATURAL JOIN v0;
SELECT vt0.c0, rt0.c1, rt0.c2 FROM rt0, v0 NATURAL JOIN vt0 GROUP BY vt0.c0, rt0.c1, rt0.c2;
SELECT vt0.c0, rt0.c1, rt0.c2 FROM rt0, v0 NATURAL JOIN vt0 WHERE (((v0.c0 COLLATE RTRIM) NOTNULL)) GROUP BY vt0.c0, rt0.c1, rt0.c2 UNION SELECT vt0.c0, rt0.c1, rt0.c2 FROM rt0, v0 NATURAL JOIN vt0 WHERE ((NOT (((v0.c0 COLLATE RTRIM) NOTNULL)))) GROUP BY vt0.c0, rt0.c1, rt0.c2 UNION SELECT vt0.c0, rt0.c1, rt0.c2 FROM rt0, v0 NATURAL JOIN vt0 WHERE (((((v0.c0 COLLATE RTRIM) NOTNULL)) ISNULL)) GROUP BY vt0.c0, rt0.c1, rt0.c2;
SELECT vt0.c0, rt0.c1, rt0.c2 FROM rt0, v0 NATURAL JOIN vt0 GROUP BY vt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, v0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1, v0.c0, rt0.c2;
SELECT rt0.c0, rt0.c1, v0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1, v0.c0, rt0.c2 HAVING (((MIN(rt0.c0)))>(((((rt0.c2, TOTAL(GROUP_CONCAT(rt0.c1)), MIN(GROUP_CONCAT(COUNT(*)))))<>((rt0.c1, v0.c0, GROUP_CONCAT(rt0.c0))))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, v0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1, v0.c0, rt0.c2 HAVING (NOT ((((MIN(rt0.c0)))>(((((rt0.c2, TOTAL(GROUP_CONCAT(rt0.c1)), MIN(GROUP_CONCAT(COUNT(*)))))<>((rt0.c1, v0.c0, GROUP_CONCAT(rt0.c0))))))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, v0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1, v0.c0, rt0.c2 HAVING (((((MIN(rt0.c0)))>(((((rt0.c2, TOTAL(GROUP_CONCAT(rt0.c1)), MIN(GROUP_CONCAT(COUNT(*)))))<>((rt0.c1, v0.c0, GROUP_CONCAT(rt0.c0)))))))) ISNULL);
SELECT ALL rt0.c1, rt0.c2, v0.c0 FROM v0 NOT INDEXED LEFT OUTER JOIN rt0 ON ((((((v0.c0)OR(x'82c9')))OR(v0.c0))) ISNULL);
SELECT rt0.c1, rt0.c2, v0.c0 FROM v0 LEFT OUTER JOIN rt0 ON ((((((v0.c0)OR(x'82c9')))OR(v0.c0))) ISNULL) WHERE ((((v0.c0) NOTNULL) IN (((rt0.c0)GLOB('-1130374637'))))) UNION ALL SELECT rt0.c1, rt0.c2, v0.c0 FROM v0 LEFT OUTER JOIN rt0 ON ((((((v0.c0)OR(x'82c9')))OR(v0.c0))) ISNULL) WHERE ((NOT ((((v0.c0) NOTNULL) IN (((rt0.c0)GLOB('-1130374637'))))))) UNION ALL SELECT rt0.c1, rt0.c2, v0.c0 FROM v0 LEFT OUTER JOIN rt0 ON ((((((v0.c0)OR(x'82c9')))OR(v0.c0))) ISNULL) WHERE ((((((v0.c0) NOTNULL) IN (((rt0.c0)GLOB('-1130374637'))))) ISNULL));
SELECT ALL rt0.c1, rt0.c2, v0.c0 FROM v0 NOT INDEXED LEFT OUTER JOIN rt0 ON ((((((v0.c0)OR(x'82c9')))OR(v0.c0))) ISNULL);
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE ((rt0.c2 COLLATE BINARY IN ())) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT ((rt0.c2 COLLATE BINARY IN ())))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((((rt0.c2 COLLATE BINARY IN ())) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT vt0.c0, rt0.c1 FROM vt0, v0, rt0 GROUP BY vt0.c0, rt0.c1;
SELECT vt0.c0, rt0.c1 FROM vt0, v0, rt0 WHERE ((((x'8e4e'))>(((rt0.c1 IN (rt0.c1)))))) GROUP BY vt0.c0, rt0.c1 UNION SELECT vt0.c0, rt0.c1 FROM vt0, v0, rt0 WHERE ((NOT ((((x'8e4e'))>(((rt0.c1 IN (rt0.c1)))))))) GROUP BY vt0.c0, rt0.c1 UNION SELECT vt0.c0, rt0.c1 FROM vt0, v0, rt0 WHERE ((((((x'8e4e'))>(((rt0.c1 IN (rt0.c1)))))) ISNULL)) GROUP BY vt0.c0, rt0.c1;
SELECT vt0.c0, rt0.c1 FROM vt0, v0, rt0 GROUP BY vt0.c0, rt0.c1;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (('329032030' IN ()) IN ()) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((('329032030' IN ()) IN ()))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((('329032030' IN ()) IN ())) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (('329032030' IN ()) IN ()) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((('329032030' IN ()) IN ()))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((('329032030' IN ()) IN ())) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (((((v0.c0)GLOB(v0.c0)))&(CASE WHEN v0.c0 THEN v0.c0 END))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((v0.c0)GLOB(v0.c0)))&(CASE WHEN v0.c0 THEN v0.c0 END))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((((((v0.c0)GLOB(v0.c0)))&(CASE WHEN v0.c0 THEN v0.c0 END))) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((- ((vt0.c0 IN ())))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((- ((vt0.c0 IN ())))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((- ((vt0.c0 IN ())))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0, rt0.c2, v0.c0, rt0.c1 FROM rt0, vt0, v0 GROUP BY vt0.c0, rt0.c2, v0.c0, rt0.c1;
SELECT ALL vt0.c0, rt0.c2, v0.c0, rt0.c1 FROM rt0, vt0, v0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))) ISNULL)) GROUP BY vt0.c0, rt0.c2, v0.c0, rt0.c1 UNION SELECT vt0.c0, rt0.c2, v0.c0, rt0.c1 FROM rt0 NOT INDEXED, vt0, v0 WHERE ((NOT (((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))) ISNULL)))) GROUP BY vt0.c0, rt0.c2, v0.c0, rt0.c1 UNION SELECT ALL vt0.c0, rt0.c2, v0.c0, rt0.c1 FROM rt0, vt0, v0 WHERE (((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))) ISNULL)) ISNULL)) GROUP BY vt0.c0, rt0.c2, v0.c0, rt0.c1;
SELECT vt0.c0, rt0.c2, v0.c0, rt0.c1 FROM rt0, vt0, v0 GROUP BY vt0.c0, rt0.c2, v0.c0, rt0.c1;
SELECT rt0.c2, vt0.c0 FROM rt0, v0, vt0 GROUP BY rt0.c2, vt0.c0;
SELECT ALL rt0.c2, vt0.c0 FROM rt0, v0, vt0 GROUP BY rt0.c2, vt0.c0 HAVING MIN(MAX(rt0.c0)) UNION ALL SELECT ALL rt0.c2, vt0.c0 FROM rt0, v0, vt0 GROUP BY rt0.c2, vt0.c0 HAVING (NOT (MIN(MAX(rt0.c0)))) UNION ALL SELECT ALL rt0.c2, vt0.c0 FROM rt0, v0, vt0 GROUP BY rt0.c2, vt0.c0 HAVING ((MIN(MAX(rt0.c0))) ISNULL);
SELECT rt0.c1 FROM vt0, rt0;
SELECT ALL rt0.c1 FROM vt0, rt0 WHERE (((NULL COLLATE RTRIM) IS FALSE)) UNION ALL SELECT rt0.c1 FROM vt0, rt0 WHERE ((NOT (((NULL COLLATE RTRIM) IS FALSE)))) UNION ALL SELECT ALL rt0.c1 FROM vt0, rt0 WHERE (((((NULL COLLATE RTRIM) IS FALSE)) ISNULL));
SELECT rt0.c1 FROM vt0, rt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (CAST(STRFTIME(vt0.c0, rt0.c1, rt0.c0, rt0.c0, rt0.c2) AS REAL)) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (CAST(STRFTIME(vt0.c0, rt0.c1, rt0.c0, rt0.c0, rt0.c2) AS REAL)))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((CAST(STRFTIME(vt0.c0, rt0.c1, rt0.c0, rt0.c0, rt0.c2) AS REAL)) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 WHERE (((HEX(DISTINCT 0.4097041683907877)) IS TRUE)) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 WHERE ((NOT (((HEX(DISTINCT 0.4097041683907877)) IS TRUE)))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 WHERE (((((HEX(DISTINCT 0.4097041683907877)) IS TRUE)) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT vt0.c0, rt0.c2, v0.c0, rt0.c1 FROM rt0 CROSS JOIN v0 ON CAST(NULL AS NUMERIC) RIGHT OUTER JOIN vt0 ON ((((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c2)))&((~ ('-1172428058')))) GROUP BY vt0.c0, rt0.c2, v0.c0, rt0.c1;
SELECT ALL vt0.c0, rt0.c2, v0.c0, rt0.c1 FROM rt0 CROSS JOIN v0 ON CAST(NULL AS NUMERIC) RIGHT OUTER JOIN vt0 ON ((((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c2)))&((~ ('-1172428058')))) GROUP BY vt0.c0, rt0.c2, v0.c0, rt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0, rt0.c2, v0.c0, rt0.c1 FROM rt0 CROSS JOIN v0 ON CAST(NULL AS NUMERIC) RIGHT OUTER JOIN vt0 ON ((((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c2)))&((~ ('-1172428058')))) GROUP BY vt0.c0, rt0.c2, v0.c0, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0, rt0.c2, v0.c0, rt0.c1 FROM rt0 CROSS JOIN v0 ON CAST(NULL AS NUMERIC) RIGHT OUTER JOIN vt0 ON ((((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c2)))&((~ ('-1172428058')))) GROUP BY vt0.c0, rt0.c2, v0.c0, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0, rt0.c2, v0.c0, rt0.c1 FROM rt0 CROSS JOIN v0 ON CAST(NULL AS NUMERIC) RIGHT OUTER JOIN vt0 ON ((((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c2)))&((~ ('-1172428058')))) GROUP BY vt0.c0, rt0.c2, v0.c0, rt0.c1;
SELECT ALL vt0.c0, rt0.c2, v0.c0, rt0.c1 FROM rt0 CROSS JOIN v0 ON CAST(NULL AS NUMERIC) RIGHT OUTER JOIN vt0 ON ((((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c2)))&((~ ('-1172428058')))) GROUP BY vt0.c0, rt0.c2, v0.c0, rt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0, rt0.c2, v0.c0, rt0.c1 FROM rt0 CROSS JOIN v0 ON CAST(NULL AS NUMERIC) RIGHT OUTER JOIN vt0 ON ((((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c2)))&((~ ('-1172428058')))) GROUP BY vt0.c0, rt0.c2, v0.c0, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0, rt0.c2, v0.c0, rt0.c1 FROM rt0 CROSS JOIN v0 ON CAST(NULL AS NUMERIC) RIGHT OUTER JOIN vt0 ON ((((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c2)))&((~ ('-1172428058')))) GROUP BY vt0.c0, rt0.c2, v0.c0, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0, rt0.c2, v0.c0, rt0.c1 FROM rt0 CROSS JOIN v0 ON CAST(NULL AS NUMERIC) RIGHT OUTER JOIN vt0 ON ((((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c2)))&((~ ('-1172428058')))) GROUP BY vt0.c0, rt0.c2, v0.c0, rt0.c1;
SELECT * FROM vt0, rt0, v0;
SELECT ALL * FROM vt0, rt0, v0 WHERE ((((rt0.c1)) BETWEEN ((((((NULL)OR(vt0.c0)))OR(v0.c0)))) AND ((CASE WHEN rt0.c2 THEN rt0.c2 END)))) UNION ALL SELECT * FROM vt0, rt0, v0 WHERE ((NOT ((((rt0.c1)) BETWEEN ((((((NULL)OR(vt0.c0)))OR(v0.c0)))) AND ((CASE WHEN rt0.c2 THEN rt0.c2 END)))))) UNION ALL SELECT ALL * FROM vt0, rt0, v0 WHERE ((((((rt0.c1)) BETWEEN ((((((NULL)OR(vt0.c0)))OR(v0.c0)))) AND ((CASE WHEN rt0.c2 THEN rt0.c2 END)))) ISNULL));
SELECT * FROM vt0, rt0, v0;
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE (((((vt0.c0)|(vt0.c0))) NOTNULL)) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT (((((vt0.c0)|(vt0.c0))) NOTNULL)))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE (((((((vt0.c0)|(vt0.c0))) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT rt0.c0 FROM rt0, v0 CROSS JOIN vt0 ON ((((((vt0.c0))>=((v0.c0)))))!=((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))))) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, v0 CROSS JOIN vt0 ON ((((((vt0.c0))>=((v0.c0)))))<>((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))))) WHERE ((- (v0.c0)) COLLATE BINARY) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0, v0 CROSS JOIN vt0 ON ((((((vt0.c0))>=((v0.c0)))))<>((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))))) WHERE ((NOT ((- (v0.c0)) COLLATE BINARY))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0, v0 NOT INDEXED CROSS JOIN vt0 ON ((((((vt0.c0))>=((v0.c0)))))!=((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))))) WHERE ((((- (v0.c0)) COLLATE BINARY) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, v0 CROSS JOIN vt0 ON ((((((vt0.c0))>=((v0.c0)))))!=((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))))) GROUP BY rt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((x'')>>(COUNT(*))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((x'')>>(COUNT(*))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((x'')>>(COUNT(*)))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((x'')>>(COUNT(*))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((x'')>>(COUNT(*))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((x'')>>(COUNT(*)))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0 IN (vt0.c0)), ((vt0.c0)>=(vt0.c0)), ((0.8100553423853387)>(vt0.c0)), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((x'1e68'))), CAST(vt0.c0 AS BLOB)))>((CASE vt0.c0  WHEN NULL THEN NULL ELSE vt0.c0 END, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN '' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, vt0.c0 COLLATE BINARY, ((((vt0.c0)OR(vt0.c0)))AND('b')))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((((vt0.c0 IN (vt0.c0)), ((vt0.c0)>=(vt0.c0)), ((0.8100553423853387)>(vt0.c0)), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((x'1e68'))), CAST(vt0.c0 AS BLOB)))>((CASE vt0.c0  WHEN NULL THEN NULL ELSE vt0.c0 END, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN '' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, vt0.c0 COLLATE BINARY, ((((vt0.c0)OR(vt0.c0)))AND('b')))))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((((vt0.c0 IN (vt0.c0)), ((vt0.c0)>=(vt0.c0)), ((0.8100553423853387)>(vt0.c0)), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((x'1e68'))), CAST(vt0.c0 AS BLOB)))>((CASE vt0.c0  WHEN NULL THEN NULL ELSE vt0.c0 END, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN '' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, vt0.c0 COLLATE BINARY, ((((vt0.c0)OR(vt0.c0)))AND('b')))))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT rt0.c0, rt0.c1, v0.c0 FROM v0, rt0;
SELECT DISTINCT rt0.c0, rt0.c1, v0.c0 FROM v0, rt0 WHERE (CASE WHEN ('-1059944949' IN ()) THEN rt0.c1 ELSE (+ (v0.c0)) END) UNION SELECT DISTINCT rt0.c0, rt0.c1, v0.c0 FROM v0, rt0 WHERE ((NOT (CASE WHEN ('-1059944949' IN ()) THEN rt0.c1 ELSE (+ (v0.c0)) END))) UNION SELECT DISTINCT rt0.c0, rt0.c1, v0.c0 FROM v0, rt0 WHERE (((CASE WHEN ('-1059944949' IN ()) THEN rt0.c1 ELSE (+ (v0.c0)) END) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, v0.c0 FROM v0, rt0;
SELECT ALL rt0.c2, v0.c0, vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0, v0 GROUP BY rt0.c2, v0.c0, vt0.c0, rt0.c1, rt0.c0;
SELECT rt0.c2, v0.c0, vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0, v0 WHERE (LIKELIHOOD(DISTINCT (('~c') ISNULL), 0.6894475895237099)) GROUP BY rt0.c2, v0.c0, vt0.c0, rt0.c1, rt0.c0 UNION SELECT rt0.c2, v0.c0, vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0, v0 WHERE ((NOT (LIKELIHOOD(DISTINCT (('~c') ISNULL), 0.6894475895237099)))) GROUP BY rt0.c2, v0.c0, vt0.c0, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, v0.c0, vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0, v0 WHERE (((LIKELIHOOD(DISTINCT (('~c') ISNULL), 0.6894475895237099)) ISNULL)) GROUP BY rt0.c2, v0.c0, vt0.c0, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, v0.c0, vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0, v0 GROUP BY rt0.c2, v0.c0, vt0.c0, rt0.c1, rt0.c0;
SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING COUNT(CASE v0.c0  WHEN TOTAL(v0.c0) THEN vt0.c0 ELSE GROUP_CONCAT('1386232870') END) UNION ALL SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING (NOT (COUNT(CASE v0.c0  WHEN TOTAL(v0.c0) THEN vt0.c0 ELSE GROUP_CONCAT('1386232870') END))) UNION ALL SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING ((COUNT(CASE v0.c0  WHEN TOTAL(v0.c0) THEN vt0.c0 ELSE GROUP_CONCAT('1386232870') END)) ISNULL);
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON CASE CAST(0.599978129044169 AS NUMERIC)  WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (NULL)) THEN ((((rt0.c2)AND(vt0.c0)))AND(NULL)) ELSE (+ (rt0.c2)) END;
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON CASE CAST(0.599978129044169 AS NUMERIC)  WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (NULL)) THEN ((((rt0.c2)AND(vt0.c0)))AND(NULL)) ELSE (+ (rt0.c2)) END WHERE (-1495358025) UNION ALL SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON CASE CAST(0.599978129044169 AS NUMERIC)  WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (NULL)) THEN ((((rt0.c2)AND(vt0.c0)))AND(NULL)) ELSE (+ (rt0.c2)) END WHERE ((NOT (-1495358025))) UNION ALL SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON CASE CAST(0.599978129044169 AS NUMERIC)  WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (NULL)) THEN ((((rt0.c2)AND(vt0.c0)))AND(NULL)) ELSE (+ (rt0.c2)) END WHERE (((-1495358025) ISNULL));
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON CASE CAST(0.599978129044169 AS NUMERIC)  WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (NULL)) THEN ((((rt0.c2)AND(vt0.c0)))AND(NULL)) ELSE (+ (rt0.c2)) END;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE (ABS(DISTINCT (rt0.c2 IN ()))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (ABS(DISTINCT (rt0.c2 IN ()))))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE (((ABS(DISTINCT (rt0.c2 IN ()))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 WHERE (((((vt0.c0) NOTNULL))<(v0.c0 COLLATE RTRIM))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 WHERE ((NOT (((((vt0.c0) NOTNULL))<(v0.c0 COLLATE RTRIM))))) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM vt0, v0 WHERE (((((((vt0.c0) NOTNULL))<(v0.c0 COLLATE RTRIM))) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT rt0.c1 FROM vt0, v0, rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM vt0, v0, rt0 GROUP BY rt0.c1 HAVING ((((((TOTAL(MIN(rt0.c2)))AND(MIN(v0.c0))))OR(rt0.c1)))GLOB(((rt0.c2)>=(SUM(AVG('')))))) UNION ALL SELECT rt0.c1 FROM vt0, v0, rt0 GROUP BY rt0.c1 HAVING (NOT (((((((TOTAL(MIN(rt0.c2)))AND(MIN(v0.c0))))OR(rt0.c1)))GLOB(((rt0.c2)>=(SUM(AVG('')))))))) UNION ALL SELECT rt0.c1 FROM vt0, v0, rt0 GROUP BY rt0.c1 HAVING ((((((((TOTAL(MIN(rt0.c2)))AND(MIN(v0.c0))))OR(rt0.c1)))GLOB(((rt0.c2)>=(SUM(AVG(''))))))) ISNULL);
SELECT ALL MIN(((((rt0.c0, rt0.c0, rt0.c1)) BETWEEN ((rt0.c0, rt0.c0, NULL)) AND ((vt0.c0, vt0.c0, rt0.c1))) IN (rt0.c0, ((vt0.c0)!=(rt0.c1))))) FROM rt0, vt0 ORDER BY UNLIKELY(DISTINCT rt0.c2)  NULLS LAST;
SELECT ALL rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0;
SELECT rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 WHERE (((0x1723f535) BETWEEN (((rt0.c1) IS FALSE)) AND (((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c2))))) UNION ALL SELECT rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 WHERE ((NOT (((0X1723f535) BETWEEN (((rt0.c1) IS FALSE)) AND (((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c2))))))) UNION ALL SELECT rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 WHERE (((((0X1723f535) BETWEEN (((rt0.c1) IS FALSE)) AND (((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c2))))) ISNULL));
SELECT ALL rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0, v0;
SELECT DISTINCT * FROM vt0, rt0, v0 WHERE (((((rt0.c0)+(rt0.c2))) IS TRUE)) UNION SELECT DISTINCT * FROM vt0, rt0, v0 WHERE ((NOT (((((rt0.c0)+(rt0.c2))) IS TRUE)))) UNION SELECT DISTINCT * FROM vt0, rt0, v0 WHERE (((((((rt0.c0)+(rt0.c2))) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM vt0, rt0, v0;
SELECT ALL rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c2, v0.c0, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM v0, rt0 WHERE (0.8908020375100151) GROUP BY rt0.c2, v0.c0, rt0.c0, rt0.c1 UNION SELECT rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM v0, rt0 WHERE ((NOT (0.8908020375100151))) GROUP BY rt0.c2, v0.c0, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM v0, rt0 WHERE (((0.8908020375100151) ISNULL)) GROUP BY rt0.c2, v0.c0, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c2, v0.c0, rt0.c0, rt0.c1;
SELECT rt0.c1 FROM v0, rt0, vt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM v0, rt0, vt0 GROUP BY rt0.c1 HAVING ((((((((((((((COUNT(GROUP_CONCAT(rt0.c0)))AND(AVG(GROUP_CONCAT(MAX(x''))))))OR(v0.c0)))AND(v0.c0)))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c0))) NOT NULL) UNION ALL SELECT ALL rt0.c1 FROM v0, rt0, vt0 GROUP BY rt0.c1 HAVING (NOT (((((((((((((((COUNT(GROUP_CONCAT(rt0.c0)))AND(AVG(GROUP_CONCAT(MAX(x''))))))OR(v0.c0)))AND(v0.c0)))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c0))) NOT NULL))) UNION ALL SELECT rt0.c1 FROM v0, rt0, vt0 GROUP BY rt0.c1 HAVING ((((((((((((((((COUNT(GROUP_CONCAT(rt0.c0)))AND(AVG(GROUP_CONCAT(MAX(x''))))))OR(v0.c0)))AND(v0.c0)))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c0))) NOT NULL)) ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c2, v0.c0 FROM v0, rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, v0.c0 FROM v0, rt0 WHERE (LIKELIHOOD(DISTINCT rt0.c1, 0.6947950419191979) COLLATE NOCASE) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2, v0.c0 FROM v0, rt0 WHERE ((NOT (LIKELIHOOD(DISTINCT rt0.c1, 0.6947950419191979) COLLATE NOCASE))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2, v0.c0 FROM v0, rt0 WHERE (((LIKELIHOOD(DISTINCT rt0.c1, 0.6947950419191979) COLLATE NOCASE) ISNULL));
SELECT rt0.c1, rt0.c0, rt0.c2, v0.c0 FROM v0, rt0;
SELECT DISTINCT * FROM v0 INNER JOIN rt0 ON CAST((v0.c0 IN ()) AS REAL);
SELECT DISTINCT * FROM v0 INNER JOIN rt0 ON CAST((v0.c0 IN ()) AS REAL) WHERE (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE NOCASE) UNION SELECT DISTINCT * FROM v0 INNER JOIN rt0 ON CAST((v0.c0 IN ()) AS REAL) WHERE ((NOT (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM v0 INNER JOIN rt0 ON CAST((v0.c0 IN ()) AS REAL) WHERE (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM v0 INNER JOIN rt0 ON CAST((v0.c0 IN ()) AS REAL);
SELECT vt0.c0, rt0.c0, v0.c0, rt0.c1, rt0.c2 FROM v0, vt0 LEFT OUTER JOIN rt0 ON UNLIKELY(DISTINCT (vt0.c0 IN (vt0.c0))) GROUP BY vt0.c0, rt0.c0, v0.c0, rt0.c1, rt0.c2;
SELECT ALL vt0.c0, rt0.c0, v0.c0, rt0.c1, rt0.c2 FROM v0, vt0 LEFT OUTER JOIN rt0 ON UNLIKELY(DISTINCT (vt0.c0 IN (vt0.c0))) WHERE ((+ (CASE WHEN 0.28134963251676637 THEN rt0.c2 ELSE v0.c0 END))) GROUP BY vt0.c0, rt0.c0, v0.c0, rt0.c1, rt0.c2 UNION SELECT vt0.c0, rt0.c0, v0.c0, rt0.c1, rt0.c2 FROM v0, vt0 LEFT OUTER JOIN rt0 ON UNLIKELY(DISTINCT (vt0.c0 IN (vt0.c0))) WHERE ((NOT ((+ (CASE WHEN 0.28134963251676637 THEN rt0.c2 ELSE v0.c0 END))))) GROUP BY vt0.c0, rt0.c0, v0.c0, rt0.c1, rt0.c2 UNION SELECT vt0.c0, rt0.c0, v0.c0, rt0.c1, rt0.c2 FROM v0, vt0 LEFT OUTER JOIN rt0 ON UNLIKELY(DISTINCT (vt0.c0 IN (vt0.c0))) WHERE ((((+ (CASE WHEN 0.28134963251676637 THEN rt0.c2 ELSE v0.c0 END))) ISNULL)) GROUP BY vt0.c0, rt0.c0, v0.c0, rt0.c1, rt0.c2;
SELECT vt0.c0, rt0.c0, v0.c0, rt0.c1, rt0.c2 FROM v0, vt0 LEFT OUTER JOIN rt0 ON UNLIKELY(DISTINCT (vt0.c0 IN (vt0.c0))) GROUP BY vt0.c0, rt0.c0, v0.c0, rt0.c1, rt0.c2;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX(MIN(TOTAL(TOTAL(COUNT(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(MIN(TOTAL(TOTAL(COUNT(vt0.c0))))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(MIN(TOTAL(TOTAL(COUNT(vt0.c0)))))) ISNULL);
SELECT * FROM rt0 FULL OUTER JOIN v0 ON ((((0x167b1a4b) NOT BETWEEN (vt0.c0) AND (v0.c0)))GLOB(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE rt0.c2 END)) INNER JOIN vt0 ON CASE rt0.c0 COLLATE RTRIM  WHEN COALESCE(rt0.c0, rt0.c2) THEN v0.c0 COLLATE RTRIM WHEN ((rt0.c2)%(vt0.c0)) THEN CAST(v0.c0 AS TEXT) WHEN (((rt0.c0, 0.9180048775182305, v0.c0)) BETWEEN (('M K>', rt0.c2, vt0.c0)) AND ((vt0.c0, v0.c0, rt0.c2))) THEN (((rt0.c0))<=((rt0.c2))) ELSE ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) END;
SELECT DISTINCT * FROM v0 NOT INDEXED LEFT OUTER JOIN vt0 ON (~ (CASE WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN 0Xffffffffae5cd500 THEN vt0.c0 ELSE vt0.c0 END));
SELECT DISTINCT * FROM v0 LEFT OUTER JOIN vt0 ON (~ (CASE WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN 0Xffffffffae5cd500 THEN vt0.c0 ELSE vt0.c0 END)) WHERE (((NULL) BETWEEN (((vt0.c0)IS(vt0.c0))) AND (CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END))) UNION SELECT DISTINCT * FROM v0 LEFT OUTER JOIN vt0 ON (~ (CASE WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN 0Xffffffffae5cd500 THEN vt0.c0 ELSE vt0.c0 END)) WHERE ((NOT (((NULL) BETWEEN (((vt0.c0)IS(vt0.c0))) AND (CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END))))) UNION SELECT DISTINCT * FROM v0 LEFT OUTER JOIN vt0 ON (~ (CASE WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN 0Xffffffffae5cd500 THEN vt0.c0 ELSE vt0.c0 END)) WHERE (((((NULL) BETWEEN (((vt0.c0)IS(vt0.c0))) AND (CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END))) ISNULL));
SELECT DISTINCT * FROM v0 NOT INDEXED LEFT OUTER JOIN vt0 ON (~ (CASE WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN 0Xffffffffae5cd500 THEN vt0.c0 ELSE vt0.c0 END));
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 WHERE (NULL) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM v0, vt0 WHERE ((NOT (NULL))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM v0, vt0 WHERE (((NULL) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT rt0.c1 FROM v0 FULL OUTER JOIN rt0 ON ((((((v0.c0, rt0.c0, rt0.c0))<=((v0.c0, vt0.c0, rt0.c0)))))==((CASE WHEN vt0.c0 THEN rt0.c0 END))) RIGHT OUTER JOIN vt0 ON (x'' IN ((rt0.c0 IN ()))) GROUP BY rt0.c1;
SELECT ALL * FROM v0, vt0;
SELECT ALL * FROM v0, vt0 WHERE (CASE WHEN (x'' IN ()) THEN vt0.c0 COLLATE NOCASE ELSE (~ (x'')) END) UNION ALL SELECT * FROM v0, vt0 WHERE ((NOT (CASE WHEN (x'' IN ()) THEN vt0.c0 COLLATE NOCASE ELSE (~ (x'')) END))) UNION ALL SELECT ALL * FROM v0, vt0 WHERE (((CASE WHEN (x'' IN ()) THEN vt0.c0 COLLATE NOCASE ELSE (~ (x'')) END) ISNULL));
SELECT ALL * FROM v0, vt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 CROSS JOIN v0 ON rt0.c0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 CROSS JOIN v0 ON rt0.c0 WHERE ((((rt0.c0)) BETWEEN ((((rt0.c2) ISNULL))) AND ((rt0.c1 COLLATE RTRIM)))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 CROSS JOIN v0 ON rt0.c0 WHERE ((NOT ((((rt0.c0)) BETWEEN ((((rt0.c2) ISNULL))) AND ((rt0.c1 COLLATE RTRIM)))))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 CROSS JOIN v0 ON rt0.c0 WHERE ((((((rt0.c0)) BETWEEN ((((rt0.c2) ISNULL))) AND ((rt0.c1 COLLATE RTRIM)))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 CROSS JOIN v0 ON rt0.c0;
SELECT rt0.c2, vt0.c0, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c0;
SELECT ALL rt0.c2, vt0.c0, rt0.c0 FROM rt0, vt0 WHERE ((NOT (((rt0.c2)<>(rt0.c0))))) GROUP BY rt0.c2, vt0.c0, rt0.c0 UNION SELECT rt0.c2, vt0.c0, rt0.c0 FROM rt0, vt0 WHERE ((NOT ((NOT (((rt0.c2)!=(rt0.c0))))))) GROUP BY rt0.c2, vt0.c0, rt0.c0 UNION SELECT ALL rt0.c2, vt0.c0, rt0.c0 FROM rt0, vt0 WHERE ((((NOT (((rt0.c2)!=(rt0.c0))))) ISNULL)) GROUP BY rt0.c2, vt0.c0, rt0.c0;
SELECT rt0.c2, vt0.c0, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c0;
SELECT ALL rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0 HAVING ((COUNT(rt0.c2) COLLATE BINARY)AND(UNLIKELY(vt0.c0))) UNION ALL SELECT ALL rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0 HAVING (NOT (((COUNT(rt0.c2) COLLATE BINARY)AND(UNLIKELY(vt0.c0))))) UNION ALL SELECT ALL rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0 HAVING ((((COUNT(rt0.c2) COLLATE BINARY)AND(UNLIKELY(vt0.c0)))) ISNULL);
SELECT ALL rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0 HAVING ((COUNT(rt0.c2) COLLATE BINARY)AND(UNLIKELY(vt0.c0))) UNION ALL SELECT ALL rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0 HAVING (NOT (((COUNT(rt0.c2) COLLATE BINARY)AND(UNLIKELY(vt0.c0))))) UNION ALL SELECT ALL rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0 HAVING ((((COUNT(rt0.c2) COLLATE BINARY)AND(UNLIKELY(vt0.c0)))) ISNULL);
SELECT ALL rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0;
SELECT rt0.c1 FROM rt0 CROSS JOIN v0 ON (- (NULL));
SELECT ALL rt0.c1 FROM rt0 CROSS JOIN v0 ON (- (NULL)) WHERE (v0.c0) UNION ALL SELECT ALL rt0.c1 FROM rt0 CROSS JOIN v0 ON (- (NULL)) WHERE ((NOT (v0.c0))) UNION ALL SELECT rt0.c1 FROM rt0 CROSS JOIN v0 ON (- (NULL)) WHERE (((v0.c0) ISNULL));
SELECT rt0.c1 FROM rt0 CROSS JOIN v0 ON (- (NULL));
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((IFNULL(DISTINCT vt0.c0, vt0.c0) IN ())) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((IFNULL(DISTINCT vt0.c0, vt0.c0) IN ())))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((IFNULL(DISTINCT vt0.c0, vt0.c0) IN ())) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (CAST(vt0.c0 AS TEXT) COLLATE BINARY) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CAST(vt0.c0 AS TEXT) COLLATE BINARY))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT) COLLATE BINARY) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING CASE COUNT(*)  WHEN TOTAL(0xffffffffc2ea4a96) THEN ((rt0.c1) BETWEEN (rt0.c0) AND (SUM(rt0.c1))) END UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (CASE COUNT(*)  WHEN TOTAL(0Xffffffffc2ea4a96) THEN ((rt0.c1) BETWEEN (rt0.c0) AND (SUM(rt0.c1))) END)) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((CASE COUNT(*)  WHEN TOTAL(0xffffffffc2ea4a96) THEN ((rt0.c1) BETWEEN (rt0.c0) AND (SUM(rt0.c1))) END) ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING CASE COUNT(*)  WHEN TOTAL(0xffffffffc2ea4a96) THEN ((rt0.c1) BETWEEN (rt0.c0) AND (SUM(rt0.c1))) END UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (CASE COUNT(*)  WHEN TOTAL(0Xffffffffc2ea4a96) THEN ((rt0.c1) BETWEEN (rt0.c0) AND (SUM(rt0.c1))) END)) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((CASE COUNT(*)  WHEN TOTAL(0xffffffffc2ea4a96) THEN ((rt0.c1) BETWEEN (rt0.c0) AND (SUM(rt0.c1))) END) ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT TOTAL((NOT (((((v0.c0)OR(v0.c0)))OR(v0.c0))))) FROM v0;
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE ((NULL IN ())) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((NULL IN ())))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((((NULL IN ())) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON (((- (rt0.c1))) BETWEEN (rt0.c0) AND (v0.c0)) LEFT OUTER JOIN v0 ON x'';
SELECT ALL rt0.c2, vt0.c0, v0.c0, rt0.c0 FROM v0, vt0, rt0 GROUP BY rt0.c2, vt0.c0, v0.c0, rt0.c0;
SELECT ALL rt0.c2, vt0.c0, v0.c0, rt0.c0 FROM v0, vt0, rt0 WHERE (((vt0.c0 COLLATE RTRIM) NOTNULL)) GROUP BY rt0.c2, vt0.c0, v0.c0, rt0.c0 UNION SELECT rt0.c2, vt0.c0, v0.c0, rt0.c0 FROM v0, vt0, rt0 WHERE ((NOT (((vt0.c0 COLLATE RTRIM) NOTNULL)))) GROUP BY rt0.c2, vt0.c0, v0.c0, rt0.c0 UNION SELECT ALL rt0.c2, vt0.c0, v0.c0, rt0.c0 FROM v0, vt0, rt0 WHERE (((((vt0.c0 COLLATE RTRIM) NOTNULL)) ISNULL)) GROUP BY rt0.c2, vt0.c0, v0.c0, rt0.c0;
SELECT ALL rt0.c2, vt0.c0, v0.c0, rt0.c0 FROM v0, vt0, rt0 GROUP BY rt0.c2, vt0.c0, v0.c0, rt0.c0;
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING COUNT((v0.c0 IN ())) UNION ALL SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT((v0.c0 IN ())))) UNION ALL SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING ((COUNT((v0.c0 IN ()))) ISNULL);
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING COUNT((v0.c0 IN ())) UNION ALL SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT((v0.c0 IN ())))) UNION ALL SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING ((COUNT((v0.c0 IN ()))) ISNULL);
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0, rt0.c0 FROM vt0, rt0, v0 NOT INDEXED;
SELECT vt0.c0, rt0.c0 FROM vt0, rt0, v0 WHERE (CAST(rt0.c2 AS NUMERIC)) UNION ALL SELECT ALL vt0.c0, rt0.c0 FROM vt0, rt0, v0 WHERE ((NOT (CAST(rt0.c2 AS NUMERIC)))) UNION ALL SELECT ALL vt0.c0, rt0.c0 FROM vt0, rt0, v0 WHERE (((CAST(rt0.c2 AS NUMERIC)) ISNULL));
SELECT ALL vt0.c0, rt0.c0 FROM vt0, rt0, v0 NOT INDEXED;
SELECT DISTINCT v0.c0, vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON CAST(CAST('p''' AS REAL) AS BLOB);
SELECT DISTINCT v0.c0, vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON CAST(CAST('p''' AS REAL) AS BLOB) WHERE ((((v0.c0)<=(vt0.c0)) IN (CAST(v0.c0 AS REAL)))) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON CAST(CAST('p''' AS REAL) AS BLOB) WHERE ((NOT ((((v0.c0)<=(vt0.c0)) IN (CAST(v0.c0 AS REAL)))))) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON CAST(CAST('p''' AS REAL) AS BLOB) WHERE ((((((v0.c0)<=(vt0.c0)) IN (CAST(v0.c0 AS REAL)))) ISNULL));
SELECT DISTINCT v0.c0, vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON CAST(CAST('p''' AS REAL) AS BLOB);
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (CAST(rt0.c1 AS BLOB) COLLATE BINARY) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (CAST(rt0.c1 AS BLOB) COLLATE BINARY))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((CAST(rt0.c1 AS BLOB) COLLATE BINARY) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING MAX(SUM(AVG(vt0.c0))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (MAX(SUM(AVG(vt0.c0))))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING ((MAX(SUM(AVG(vt0.c0)))) ISNULL);
SELECT * FROM rt0, v0 LEFT OUTER JOIN vt0 ON ((((v0.c0) NOT BETWEEN (v0.c0) AND (rt0.c2))) NOT NULL);
SELECT * FROM rt0, v0 LEFT OUTER JOIN vt0 ON ((((v0.c0) NOT BETWEEN (v0.c0) AND (rt0.c2))) NOT NULL) WHERE (((((v0.c0) BETWEEN (rt0.c0) AND (rt0.c0))) IS FALSE)) UNION ALL SELECT ALL * FROM rt0, v0 LEFT OUTER JOIN vt0 ON ((((v0.c0) NOT BETWEEN (v0.c0) AND (rt0.c2))) NOT NULL) WHERE ((NOT (((((v0.c0) BETWEEN (rt0.c0) AND (rt0.c0))) IS FALSE)))) UNION ALL SELECT * FROM rt0, v0 LEFT OUTER JOIN vt0 ON ((((v0.c0) NOT BETWEEN (v0.c0) AND (rt0.c2))) NOT NULL) WHERE (((((((v0.c0) BETWEEN (rt0.c0) AND (rt0.c0))) IS FALSE)) ISNULL));
SELECT * FROM rt0, v0 LEFT OUTER JOIN vt0 ON ((((v0.c0) NOT BETWEEN (v0.c0) AND (rt0.c2))) NOT NULL);
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (CASE ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))  WHEN (((v0.c0, v0.c0, NULL)) BETWEEN ((v0.c0, 0.10739394493821264, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))) THEN (- (v0.c0)) WHEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) THEN (NULL IN ()) WHEN NULL THEN v0.c0 END) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (CASE ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))  WHEN (((v0.c0, v0.c0, NULL)) BETWEEN ((v0.c0, 0.10739394493821264, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))) THEN (- (v0.c0)) WHEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) THEN (NULL IN ()) WHEN NULL THEN v0.c0 END))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((CASE ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))  WHEN (((v0.c0, v0.c0, NULL)) BETWEEN ((v0.c0, 0.10739394493821264, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))) THEN (- (v0.c0)) WHEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) THEN (NULL IN ()) WHEN NULL THEN v0.c0 END) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (CAST(((x'')AND(v0.c0)) AS INTEGER)) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (CAST(((x'')AND(v0.c0)) AS INTEGER)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((CAST(((x'')AND(v0.c0)) AS INTEGER)) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c1 FROM vt0, v0, rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM vt0, v0, rt0 GROUP BY rt0.c1 HAVING ((AVG(x''))AND(COUNT(*))) UNION ALL SELECT rt0.c1 FROM vt0, v0, rt0 GROUP BY rt0.c1 HAVING (NOT (((AVG(x''))AND(COUNT(*))))) UNION ALL SELECT rt0.c1 FROM vt0, v0, rt0 GROUP BY rt0.c1 HAVING ((((AVG(x''))AND(COUNT(*)))) ISNULL);
SELECT rt0.c1 FROM vt0, v0, rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM vt0, v0, rt0 GROUP BY rt0.c1 HAVING ((AVG(x''))AND(COUNT(*))) UNION ALL SELECT rt0.c1 FROM vt0, v0, rt0 GROUP BY rt0.c1 HAVING (NOT (((AVG(x''))AND(COUNT(*))))) UNION ALL SELECT rt0.c1 FROM vt0, v0, rt0 GROUP BY rt0.c1 HAVING ((((AVG(x''))AND(COUNT(*)))) ISNULL);
SELECT rt0.c1 FROM vt0, v0, rt0 GROUP BY rt0.c1;
SELECT ALL * FROM vt0, v0, rt0;
SELECT ALL * FROM vt0, v0, rt0 WHERE ('cÔñµx·É§Yd2JO') UNION ALL SELECT * FROM vt0, v0, rt0 WHERE ((NOT ('cÔñµx·É§Yd2JO'))) UNION ALL SELECT * FROM vt0, v0, rt0 WHERE ((('cÔñµx·É§Yd2JO') ISNULL));
SELECT ALL * FROM vt0, v0, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c1 COLLATE BINARY)<<((+ (rt0.c2))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c1 COLLATE BINARY)<<((+ (rt0.c2))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c1 COLLATE BINARY)<<((+ (rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (CASE (((v0.c0))<>((v0.c0)))  WHEN TRIM(DISTINCT v0.c0, v0.c0) THEN CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 0.5684225144203795 WHEN NULL THEN NULL END END) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CASE (((v0.c0))!=((v0.c0)))  WHEN TRIM(DISTINCT v0.c0, v0.c0) THEN CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 0.5684225144203795 WHEN NULL THEN NULL END END))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((CASE (((v0.c0))<>((v0.c0)))  WHEN TRIM(DISTINCT v0.c0, v0.c0) THEN CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 0.5684225144203795 WHEN NULL THEN NULL END END) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING ((('', ((vt0.c0) BETWEEN (COUNT(*)) AND (v0.c0)), (((TOTAL(vt0.c0))) NOT BETWEEN ((COUNT(SUM(GROUP_CONCAT(vt0.c0))))) AND ((v0.c0)))))<=((AVG(v0.c0), NULL, ((v0.c0)<>(AVG(0.9108228373837741)))))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (((('', ((vt0.c0) BETWEEN (COUNT(*)) AND (v0.c0)), (((TOTAL(vt0.c0))) NOT BETWEEN ((COUNT(SUM(GROUP_CONCAT(vt0.c0))))) AND ((v0.c0)))))<=((AVG(v0.c0), NULL, ((v0.c0)!=(AVG(0.9108228373837741)))))))) UNION ALL SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING ((((('', ((vt0.c0) BETWEEN (COUNT(*)) AND (v0.c0)), (((TOTAL(vt0.c0))) NOT BETWEEN ((COUNT(SUM(GROUP_CONCAT(vt0.c0))))) AND ((v0.c0)))))<=((AVG(v0.c0), NULL, ((v0.c0)<>(AVG(0.9108228373837741))))))) ISNULL);
SELECT * FROM vt0, rt0;
SELECT * FROM vt0, rt0 WHERE (CASE WHEN ((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN NULL WHEN rt0.c2 THEN ((((rt0.c2)OR(rt0.c0)))AND(vt0.c0)) WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)) THEN (((vt0.c0)) BETWEEN (('-618468176')) AND ((vt0.c0))) END) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE ((NOT (CASE WHEN ((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN NULL WHEN rt0.c2 THEN ((((rt0.c2)OR(rt0.c0)))AND(vt0.c0)) WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)) THEN (((vt0.c0)) BETWEEN (('-618468176')) AND ((vt0.c0))) END))) UNION ALL SELECT * FROM vt0, rt0 WHERE (((CASE WHEN ((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN NULL WHEN rt0.c2 THEN ((((rt0.c2)OR(rt0.c0)))AND(vt0.c0)) WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)) THEN (((vt0.c0)) BETWEEN (('-618468176')) AND ((vt0.c0))) END) ISNULL));
SELECT * FROM vt0, rt0;
SELECT DISTINCT * FROM v0, rt0 INNER JOIN vt0 ON (((rt0.c2, CAST(rt0.c0 AS TEXT), CASE vt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END))==((0.8593007870615877, (- (rt0.c1)), ((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))));
SELECT DISTINCT * FROM v0, rt0 INNER JOIN vt0 ON (((rt0.c2, CAST(rt0.c0 AS TEXT), CASE vt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END))=((0.8593007870615877, (- (rt0.c1)), ((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))))) WHERE ((~ (CASE v0.c0  WHEN x'' THEN -1.849513828E9 END))) UNION SELECT DISTINCT * FROM v0, rt0 INNER JOIN vt0 ON (((rt0.c2, CAST(rt0.c0 AS TEXT), CASE vt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END))==((0.8593007870615877, (- (rt0.c1)), ((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))))) WHERE ((NOT ((~ (CASE v0.c0  WHEN x'' THEN -1.849513828E9 END))))) UNION SELECT DISTINCT * FROM v0, rt0 INNER JOIN vt0 ON (((rt0.c2, CAST(rt0.c0 AS TEXT), CASE vt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END))==((0.8593007870615877, (- (rt0.c1)), ((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))))) WHERE ((((~ (CASE v0.c0  WHEN x'' THEN -1.849513828E9 END))) ISNULL));
SELECT DISTINCT * FROM v0, rt0 INNER JOIN vt0 ON (((rt0.c2, CAST(rt0.c0 AS TEXT), CASE vt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END))==((0.8593007870615877, (- (rt0.c1)), ((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))));
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c0)))) AND ((CAST(rt0.c2 AS INTEGER))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c1)) NOT BETWEEN ((((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c0)))) AND ((CAST(rt0.c2 AS INTEGER))))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c0)))) AND ((CAST(rt0.c2 AS INTEGER))))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING CAST(GROUP_CONCAT(SUM(v0.c0)) AS BLOB) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (CAST(GROUP_CONCAT(SUM(v0.c0)) AS BLOB))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((CAST(GROUP_CONCAT(SUM(v0.c0)) AS BLOB)) ISNULL);
SELECT ALL rt0.c1, rt0.c2, v0.c0 FROM rt0, v0, vt0;
SELECT rt0.c1, rt0.c2, v0.c0 FROM rt0, v0, vt0 WHERE (((((rt0.c0)<=(v0.c0))) IS FALSE)) UNION ALL SELECT ALL rt0.c1, rt0.c2, v0.c0 FROM rt0, v0, vt0 WHERE ((NOT (((((rt0.c0)<=(v0.c0))) IS FALSE)))) UNION ALL SELECT rt0.c1, rt0.c2, v0.c0 FROM rt0, v0, vt0 WHERE (((((((rt0.c0)<=(v0.c0))) IS FALSE)) ISNULL));
SELECT ALL rt0.c1, rt0.c2, v0.c0 FROM rt0, v0, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2, rt0.c1;
SELECT ALL vt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0 WHERE ((((x'a4b0', vt0.c0, vt0.c0)) BETWEEN ((((rt0.c2)&(-1.026541676E9)), CAST(rt0.c2 AS NUMERIC), (((0.427672232172442)) BETWEEN ((rt0.c2)) AND ((vt0.c0))))) AND ((CAST(rt0.c0 AS TEXT), (rt0.c0 IN ()), CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END)))) GROUP BY vt0.c0, rt0.c2, rt0.c1 UNION SELECT vt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0 WHERE ((NOT ((((x'a4b0', vt0.c0, vt0.c0)) BETWEEN ((((rt0.c2)&(-1.026541676E9)), CAST(rt0.c2 AS NUMERIC), (((0.427672232172442)) BETWEEN ((rt0.c2)) AND ((vt0.c0))))) AND ((CAST(rt0.c0 AS TEXT), (rt0.c0 IN ()), CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END)))))) GROUP BY vt0.c0, rt0.c2, rt0.c1 UNION SELECT vt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0 WHERE ((((((x'a4b0', vt0.c0, vt0.c0)) BETWEEN ((((rt0.c2)&(-1.026541676E9)), CAST(rt0.c2 AS NUMERIC), (((0.427672232172442)) BETWEEN ((rt0.c2)) AND ((vt0.c0))))) AND ((CAST(rt0.c0 AS TEXT), (rt0.c0 IN ()), CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END)))) ISNULL)) GROUP BY vt0.c0, rt0.c2, rt0.c1;
SELECT ALL vt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2, rt0.c1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT((vt0.c0 IN ())) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT((vt0.c0 IN ())))) UNION ALL SELECT vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c0 HAVING ((GROUP_CONCAT((vt0.c0 IN ()))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT((vt0.c0 IN ())) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT((vt0.c0 IN ())))) UNION ALL SELECT vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c0 HAVING ((GROUP_CONCAT((vt0.c0 IN ()))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c1) BETWEEN ((NULL IN (rt0.c2))) AND (UNICODE(rt0.c0)));
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c1) BETWEEN ((NULL IN (rt0.c2))) AND (UNICODE(rt0.c0))) WHERE ((~ (rt0.c0)) COLLATE NOCASE) UNION ALL SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c1) BETWEEN ((NULL IN (rt0.c2))) AND (UNICODE(rt0.c0))) WHERE ((NOT ((~ (rt0.c0)) COLLATE NOCASE))) UNION ALL SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c1) BETWEEN ((NULL IN (rt0.c2))) AND (UNICODE(rt0.c0))) WHERE ((((~ (rt0.c0)) COLLATE NOCASE) ISNULL));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c1) BETWEEN ((NULL IN (rt0.c2))) AND (UNICODE(rt0.c0)));
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) AND ((CAST(vt0.c0 AS BLOB))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) AND ((CAST(vt0.c0 AS BLOB))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) AND ((CAST(vt0.c0 AS BLOB))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0 WHERE ((((vt0.c0 IN (rt0.c0))) IS TRUE)) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0 WHERE ((NOT ((((vt0.c0 IN (rt0.c0))) IS TRUE)))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0 WHERE ((((((vt0.c0 IN (rt0.c0))) IS TRUE)) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TYPEOF(MIN(vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TYPEOF(MIN(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TYPEOF(MIN(vt0.c0))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TYPEOF(MIN(vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TYPEOF(MIN(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TYPEOF(MIN(vt0.c0))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((IFNULL(rt0.c1, rt0.c0))&(TIME(rt0.c2, rt0.c1, 888172330)))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((IFNULL(rt0.c1, rt0.c0))&(TIME(rt0.c2, rt0.c1, 888172330)))))) UNION ALL SELECT * FROM rt0 WHERE (((((IFNULL(rt0.c1, rt0.c0))&(TIME(rt0.c2, rt0.c1, 888172330)))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, v0.c0, rt0.c2 FROM rt0, v0;
SELECT DISTINCT rt0.c1, rt0.c0, v0.c0, rt0.c2 FROM rt0, v0 WHERE (CAST(rt0.c1 AS NUMERIC)) UNION SELECT DISTINCT rt0.c1, rt0.c0, v0.c0, rt0.c2 FROM rt0, v0 WHERE ((NOT (CAST(rt0.c1 AS NUMERIC)))) UNION SELECT DISTINCT rt0.c1, rt0.c0, v0.c0, rt0.c2 FROM rt0, v0 NOT INDEXED WHERE (((CAST(rt0.c1 AS NUMERIC)) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, v0.c0, rt0.c2 FROM rt0, v0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (rt0.c1) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (rt0.c1))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((rt0.c1) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, v0.c0, rt0.c1 FROM vt0, v0 NATURAL JOIN rt0 GROUP BY rt0.c0, rt0.c2, v0.c0, rt0.c1;
SELECT rt0.c0, rt0.c2, v0.c0, rt0.c1 FROM vt0, v0 NATURAL JOIN rt0 GROUP BY rt0.c0, rt0.c2, v0.c0, rt0.c1 HAVING COUNT(GROUP_CONCAT(rt0.c0)) UNION ALL SELECT rt0.c0, rt0.c2, v0.c0, rt0.c1 FROM vt0, v0 NATURAL JOIN rt0 GROUP BY rt0.c0, rt0.c2, v0.c0, rt0.c1 HAVING (NOT (COUNT(GROUP_CONCAT(rt0.c0)))) UNION ALL SELECT ALL rt0.c0, rt0.c2, v0.c0, rt0.c1 FROM vt0, v0 NATURAL JOIN rt0 GROUP BY rt0.c0, rt0.c2, v0.c0, rt0.c1 HAVING ((COUNT(GROUP_CONCAT(rt0.c0))) ISNULL);
SELECT ALL * FROM vt0, v0;
SELECT * FROM vt0, v0 WHERE (vt0.c0) UNION ALL SELECT * FROM vt0, v0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL * FROM vt0, v0 WHERE (((vt0.c0) ISNULL));
SELECT ALL * FROM vt0, v0;
SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0;
SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0 WHERE ((((((+ (vt0.c0)))OR(((v0.c0) ISNULL))))OR(((((v0.c0)AND(vt0.c0)))AND(vt0.c0))))) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0 WHERE ((NOT ((((((+ (vt0.c0)))OR(((v0.c0) ISNULL))))OR(((((v0.c0)AND(vt0.c0)))AND(vt0.c0))))))) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0 WHERE ((((((((+ (vt0.c0)))OR(((v0.c0) ISNULL))))OR(((((v0.c0)AND(vt0.c0)))AND(vt0.c0))))) ISNULL));
SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0;
SELECT ALL rt0.c2, v0.c0, rt0.c1, rt0.c0 FROM v0 NOT INDEXED CROSS JOIN rt0 ON x'de63' GROUP BY rt0.c2, v0.c0, rt0.c1, rt0.c0;
SELECT rt0.c2, v0.c0, rt0.c1, rt0.c0 FROM v0 CROSS JOIN rt0 ON x'de63' WHERE ((((rt0.c0, 0.15688218012692678, rt0.c0)) NOT BETWEEN ((((rt0.c0) NOT NULL), CAST(v0.c0 AS TEXT), (~ (rt0.c0)))) AND ((NULL, (rt0.c1 IN ()), (- (v0.c0)))))) GROUP BY rt0.c2, v0.c0, rt0.c1, rt0.c0 UNION SELECT rt0.c2, v0.c0, rt0.c1, rt0.c0 FROM v0 CROSS JOIN rt0 ON x'de63' WHERE ((NOT ((((rt0.c0, 0.15688218012692678, rt0.c0)) NOT BETWEEN ((((rt0.c0) NOT NULL), CAST(v0.c0 AS TEXT), (~ (rt0.c0)))) AND ((NULL, (rt0.c1 IN ()), (- (v0.c0)))))))) GROUP BY rt0.c2, v0.c0, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, v0.c0, rt0.c1, rt0.c0 FROM v0 CROSS JOIN rt0 ON x'de63' WHERE ((((((rt0.c0, 0.15688218012692678, rt0.c0)) NOT BETWEEN ((((rt0.c0) NOT NULL), CAST(v0.c0 AS TEXT), (~ (rt0.c0)))) AND ((NULL, (rt0.c1 IN ()), (- (v0.c0)))))) ISNULL)) GROUP BY rt0.c2, v0.c0, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, v0.c0, rt0.c1, rt0.c0 FROM v0 NOT INDEXED CROSS JOIN rt0 ON x'de63' GROUP BY rt0.c2, v0.c0, rt0.c1, rt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING (+ (CAST(v0.c0 AS INTEGER))) UNION ALL SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING (NOT ((+ (CAST(v0.c0 AS INTEGER))))) UNION ALL SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING (((+ (CAST(v0.c0 AS INTEGER)))) ISNULL);
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING (+ (CAST(v0.c0 AS INTEGER))) UNION ALL SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING (NOT ((+ (CAST(v0.c0 AS INTEGER))))) UNION ALL SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING (((+ (CAST(v0.c0 AS INTEGER)))) ISNULL);
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT v0.c0, rt0.c2, rt0.c1 FROM rt0 NATURAL JOIN v0;
SELECT ALL v0.c0, rt0.c2, rt0.c1 FROM rt0 NATURAL JOIN v0 WHERE (((- (rt0.c0)) IN ())) UNION ALL SELECT ALL v0.c0, rt0.c2, rt0.c1 FROM rt0 NATURAL JOIN v0 WHERE ((NOT (((- (rt0.c0)) IN ())))) UNION ALL SELECT ALL v0.c0, rt0.c2, rt0.c1 FROM rt0 NATURAL JOIN v0 WHERE (((((- (rt0.c0)) IN ())) ISNULL));
SELECT v0.c0, rt0.c2, rt0.c1 FROM rt0 NATURAL JOIN v0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((- (rt0.c2)) COLLATE BINARY COLLATE NOCASE) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((- (rt0.c2)) COLLATE BINARY COLLATE NOCASE))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((- (rt0.c2)) COLLATE BINARY COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE (((((rt0.c0)<<(rt0.c2)))OR(rt0.c2))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c0)<<(rt0.c2)))OR(rt0.c2))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE (((((((rt0.c0)<<(rt0.c2)))OR(rt0.c2))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON ((((QUOTE(rt0.c1))OR((((rt0.c2))>((rt0.c0))))))AND(rt0.c2 COLLATE BINARY)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON ((((QUOTE(rt0.c1))OR((((rt0.c2))>((rt0.c0))))))AND(rt0.c2 COLLATE BINARY)) GROUP BY rt0.c0 HAVING SUM(COUNT(rt0.c0)) UNION ALL SELECT rt0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON ((((QUOTE(rt0.c1))OR((((rt0.c2))>((rt0.c0))))))AND(rt0.c2 COLLATE BINARY)) GROUP BY rt0.c0 HAVING (NOT (SUM(COUNT(rt0.c0)))) UNION ALL SELECT rt0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON ((((QUOTE(rt0.c1))OR((((rt0.c2))>((rt0.c0))))))AND(rt0.c2 COLLATE BINARY)) GROUP BY rt0.c0 HAVING ((SUM(COUNT(rt0.c0))) ISNULL);
SELECT rt0.c0 FROM rt0, vt0;
SELECT rt0.c0 FROM rt0, vt0 WHERE (rt0.c1) UNION ALL SELECT ALL rt0.c0 FROM rt0, vt0 NOT INDEXED WHERE ((NOT (rt0.c1))) UNION ALL SELECT rt0.c0 FROM rt0, vt0 WHERE (((rt0.c1) ISNULL));
SELECT rt0.c0 FROM rt0, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((CAST(vt0.c0 AS INTEGER)))<=((CASE WHEN vt0.c0 THEN 0X44b53b3 END)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((CAST(vt0.c0 AS INTEGER)))<=((CASE WHEN vt0.c0 THEN 0X44b53b3 END)))))) UNION SELECT DISTINCT * FROM vt0 NOT INDEXED WHERE ((((((CAST(vt0.c0 AS INTEGER)))<=((CASE WHEN vt0.c0 THEN 0x44b53b3 END)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT rt0.c1, vt0.c0, rt0.c0 FROM v0, rt0 NATURAL JOIN vt0 GROUP BY rt0.c1, vt0.c0, rt0.c0;
SELECT rt0.c1, vt0.c0, rt0.c0 FROM v0, rt0 NATURAL JOIN vt0 WHERE (x'') GROUP BY rt0.c1, vt0.c0, rt0.c0 UNION SELECT rt0.c1, vt0.c0, rt0.c0 FROM v0, rt0 NATURAL JOIN vt0 WHERE ((NOT (x''))) GROUP BY rt0.c1, vt0.c0, rt0.c0 UNION SELECT rt0.c1, vt0.c0, rt0.c0 FROM v0, rt0 NATURAL JOIN vt0 WHERE (((x'') ISNULL)) GROUP BY rt0.c1, vt0.c0, rt0.c0;
SELECT rt0.c1, vt0.c0, rt0.c0 FROM v0, rt0 NATURAL JOIN vt0 GROUP BY rt0.c1, vt0.c0, rt0.c0;
SELECT rt0.c2 FROM rt0 INNER JOIN v0 ON RTRIM(NULLIF(DISTINCT rt0.c1, v0.c0)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 INNER JOIN v0 ON RTRIM(NULLIF(DISTINCT rt0.c1, v0.c0)) GROUP BY rt0.c2 HAVING AVG(MAX(AVG(SUM(MAX(MIN(v0.c0)))))) UNION ALL SELECT rt0.c2 FROM rt0 INNER JOIN v0 ON RTRIM(NULLIF(DISTINCT rt0.c1, v0.c0)) GROUP BY rt0.c2 HAVING (NOT (AVG(MAX(AVG(SUM(MAX(MIN(v0.c0)))))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 INNER JOIN v0 ON RTRIM(NULLIF(DISTINCT rt0.c1, v0.c0)) GROUP BY rt0.c2 HAVING ((AVG(MAX(AVG(SUM(MAX(MIN(v0.c0))))))) ISNULL);
SELECT ALL rt0.c0 FROM rt0;
SELECT rt0.c0 FROM rt0 WHERE ((CAST(rt0.c1 AS REAL) IN (9223372036854775807 COLLATE BINARY, rt0.c1 COLLATE RTRIM))) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT ((CAST(rt0.c1 AS REAL) IN (9223372036854775807 COLLATE BINARY, rt0.c1 COLLATE RTRIM))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE ((((CAST(rt0.c1 AS REAL) IN (9223372036854775807 COLLATE BINARY, rt0.c1 COLLATE RTRIM))) ISNULL));
SELECT ALL rt0.c0 FROM rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (v0.c0) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 NATURAL JOIN vt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 NATURAL JOIN vt0 WHERE ((((v0.c0, v0.c0, vt0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END, ((vt0.c0) ISNULL), x'')) AND ((((((vt0.c0)OR(v0.c0)))OR(vt0.c0)), ((vt0.c0)>(v0.c0)), ((vt0.c0)>>(v0.c0)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 NATURAL JOIN vt0 WHERE ((NOT ((((v0.c0, v0.c0, vt0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END, ((vt0.c0) ISNULL), x'')) AND ((((((vt0.c0)OR(v0.c0)))OR(vt0.c0)), ((vt0.c0)>(v0.c0)), ((vt0.c0)>>(v0.c0)))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 NATURAL JOIN vt0 WHERE ((((((v0.c0, v0.c0, vt0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END, ((vt0.c0) ISNULL), x'')) AND ((((((vt0.c0)OR(v0.c0)))OR(vt0.c0)), ((vt0.c0)>(v0.c0)), ((vt0.c0)>>(v0.c0)))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 NATURAL JOIN vt0 GROUP BY v0.c0;
SELECT ALL rt0.c2, rt0.c1 FROM v0, rt0, vt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM v0, rt0, vt0 GROUP BY rt0.c2, rt0.c1 HAVING (((MAX(rt0.c2), rt0.c2, rt0.c1, vt0.c0, rt0.c1)) NOT BETWEEN ((AVG(rt0.c2), TOTAL(vt0.c0), COUNT(*), AVG(AVG(SUM(COUNT(0.43558254278567565)))), (v0.c0 IN (COUNT(*))))) AND ((((rt0.c2) ISNULL), (((rt0.c2, GROUP_CONCAT(rt0.c1), v0.c0)) BETWEEN ((v0.c0, MAX(rt0.c2), v0.c0)) AND ((rt0.c1, MIN(MAX(vt0.c0)), AVG(rt0.c2)))), (rt0.c2 IN (TOTAL(MIN(MAX(AVG(rt0.c2)))))), ((MIN(MIN(rt0.c1)))=(vt0.c0)), COUNT(MAX(SUM(AVG(COUNT(*)))))))) UNION ALL SELECT rt0.c2, rt0.c1 FROM v0, rt0, vt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT ((((MAX(rt0.c2), rt0.c2, rt0.c1, vt0.c0, rt0.c1)) NOT BETWEEN ((AVG(rt0.c2), TOTAL(vt0.c0), COUNT(*), AVG(AVG(SUM(COUNT(0.43558254278567565)))), (v0.c0 IN (COUNT(*))))) AND ((((rt0.c2) ISNULL), (((rt0.c2, GROUP_CONCAT(rt0.c1), v0.c0)) BETWEEN ((v0.c0, MAX(rt0.c2), v0.c0)) AND ((rt0.c1, MIN(MAX(vt0.c0)), AVG(rt0.c2)))), (rt0.c2 IN (TOTAL(MIN(MAX(AVG(rt0.c2)))))), ((MIN(MIN(rt0.c1)))=(vt0.c0)), COUNT(MAX(SUM(AVG(COUNT(*)))))))))) UNION ALL SELECT rt0.c2, rt0.c1 FROM v0, rt0, vt0 GROUP BY rt0.c2, rt0.c1 HAVING (((((MAX(rt0.c2), rt0.c2, rt0.c1, vt0.c0, rt0.c1)) NOT BETWEEN ((AVG(rt0.c2), TOTAL(vt0.c0), COUNT(*), AVG(AVG(SUM(COUNT(0.43558254278567565)))), (v0.c0 IN (COUNT(*))))) AND ((((rt0.c2) ISNULL), (((rt0.c2, GROUP_CONCAT(rt0.c1), v0.c0)) BETWEEN ((v0.c0, MAX(rt0.c2), v0.c0)) AND ((rt0.c1, MIN(MAX(vt0.c0)), AVG(rt0.c2)))), (rt0.c2 IN (TOTAL(MIN(MAX(AVG(rt0.c2)))))), ((MIN(MIN(rt0.c1)))==(vt0.c0)), COUNT(MAX(SUM(AVG(COUNT(*))))))))) ISNULL);
SELECT * FROM vt0 INNER JOIN v0 ON (- (((v0.c0) ISNULL)));
SELECT * FROM vt0 INNER JOIN v0 ON (- (((v0.c0) ISNULL))) WHERE ('') UNION ALL SELECT ALL * FROM vt0 INNER JOIN v0 ON (- (((v0.c0) ISNULL))) WHERE ((NOT (''))) UNION ALL SELECT ALL * FROM vt0 INNER JOIN v0 ON (- (((v0.c0) ISNULL))) WHERE ((('') ISNULL));
SELECT * FROM vt0 INNER JOIN v0 ON (- (((v0.c0) ISNULL)));
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((HEX(DISTINCT v0.c0))GLOB(((((v0.c0)OR(v0.c0)))OR(v0.c0))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((HEX(DISTINCT v0.c0))GLOB(((((v0.c0)OR(v0.c0)))OR(v0.c0))))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((HEX(DISTINCT v0.c0))GLOB(((((v0.c0)OR(v0.c0)))OR(v0.c0))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT rt0.c0 FROM rt0, v0, vt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, v0, vt0 WHERE (((rtreenode(rt0.c1, rt0.c1))GLOB(v0.c0))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0, v0, vt0 WHERE ((NOT (((rtreenode(rt0.c1, rt0.c1))GLOB(v0.c0))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0, v0, vt0 WHERE (((((rtreenode(rt0.c1, rt0.c1))GLOB(v0.c0))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, v0, vt0 GROUP BY rt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((vt0.c0)-(vt0.c0))) ISNULL) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((((vt0.c0)-(vt0.c0))) ISNULL))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((vt0.c0)-(vt0.c0))) ISNULL)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((vt0.c0)-(vt0.c0))) ISNULL) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((((vt0.c0)-(vt0.c0))) ISNULL))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((vt0.c0)-(vt0.c0))) ISNULL)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c0, rt0.c2 FROM vt0, rt0;
SELECT ALL rt0.c0, rt0.c2 FROM vt0, rt0 WHERE (((((rt0.c0))!=((rt0.c2))) IN ())) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM vt0, rt0 WHERE ((NOT (((((rt0.c0))!=((rt0.c2))) IN ())))) UNION ALL SELECT rt0.c0, rt0.c2 FROM vt0, rt0 WHERE (((((((rt0.c0))!=((rt0.c2))) IN ())) ISNULL));
SELECT ALL rt0.c0, rt0.c2 FROM vt0, rt0;
