-- Time: 2024/06/09 16:07:33
-- Database: database6
-- Database version: 3.40.0
-- seed value: 1379375406
PRAGMA cache_size = 50000; -- 9ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-16be'; -- 1ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 1ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0, content=''); -- 1ms;
END TRANSACTION; -- 4ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c2, c1) VALUES (((CAST(0.9695404335838635 AS INTEGER)) BETWEEN (CAST(0x3fc31848 AS INTEGER)) AND (((0.06664332969971076) IS TRUE))), ''); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 1ms;
ANALYZE sqlite_master; -- 0ms;
INSERT OR REPLACE INTO rt0(c1) VALUES (NULL), (''), (x'4cbe'); -- 0ms;
UPDATE OR IGNORE rt0 SET c1=x'' WHERE CAST(((0X27c23690) NOT NULL) AS INTEGER); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE rt0 SET c0='-1981856029'; -- 1ms;
UPDATE OR ROLLBACK rt0 SET (c2)=(NULL); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 13); -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 6); -- 0ms;
REINDEX BINARY; -- 1ms;
UPDATE rt0 SET (c1)=('1069750344'); -- 0ms;
UPDATE OR IGNORE rt0 SET c0=0.9695404335838635; -- 0ms;
ANALYZE rt0; -- 1ms;
UPDATE OR IGNORE rt0 SET c2=0.7427095364198507; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', -2043803637);\n; -- 0ms;
UPDATE OR IGNORE rt0 SET c2='', c0=0.3765243958290029; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 1ms;
UPDATE rt0 SET c0=0Xffffffffc838f6dc, c1=x'' WHERE ((((rt0.c1)*(rt0.c0)))/(((rt0.c0)=(rt0.c1)))); -- 0ms;
CREATE TEMPORARY VIEW v0(c0, c1, c2) AS SELECT DISTINCT LTRIM(((rt0.c1)GLOB(rt0.c1)), ((((rt0.c2)AND(rt0.c0)))AND(rt0.c0))), GROUP_CONCAT(((((rt0.c2)AND(rt0.c0)))AND(rt0.c0))), ((NOT (rt0.c2)) IN ()) FROM rt0, vt1; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', -1923071640);\n; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
UPDATE OR IGNORE rt0 SET (c1)=('a*') WHERE CAST(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)) AS TEXT); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 542807408); -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 3); -- 0ms;
ANALYZE rt0; -- 0ms;
INSERT OR REPLACE INTO rt0 VALUES ('0.7427095364198507', 0Xffffffff89df46e3, NULL); -- 1ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1353849497);\n; -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE rt0 SET (c2, c1)=(0.6055616037543884, -1981856029); -- 0ms;
REINDEX NOCASE; -- 0ms;
INSERT OR ABORT INTO vt0(c0) VALUES (x'2334'); -- 1ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '38388'); -- 1ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
UPDATE rt0 SET c0='-212827016' WHERE ((((CAST(rt0.c1 AS INTEGER))OR(NULL)))AND(((rt0.c2)>=(rt0.c0)))); -- 0ms;
ANALYZE; -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 6); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
UPDATE vt0 SET c0='0.7427095364198507' WHERE ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN (vt0.c0) AND (((vt0.c0)&(vt0.c0)))); -- 0ms;
PRAGMA cell_size_check; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 15); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
UPDATE OR IGNORE rt0 SET (c2)=(x''); -- 1ms;
PRAGMA temp.reverse_unordered_selects; -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c2, c1) VALUES (NULL, ' H!.', NULL); -- 0ms;
END; -- 0ms;
UPDATE rt0 SET (c2)=(x'') WHERE (CAST(rt0.c1 AS TEXT) IN (((((((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)))OR(NULL)))AND(0x2a4e5e3d)))AND(rt0.c0)))OR(rt0.c1)), (- (rt0.c1)))); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (NULL, 'd0CPt}*_U', ''); -- 0ms;
REINDEX; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO rt0(c1) VALUES (''), (x'7d50'), (0.4925993094007026); -- 0ms;
REINDEX; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
REINDEX NOCASE; -- 0ms;
PRAGMA temp.cache_size; -- 0ms;
END; -- 0ms;
END; -- 0ms;
VACUUM; -- 2ms;
INSERT INTO vt0(vt0) VALUES('merge=667039376,9');\n; -- 0ms;
PRAGMA threads; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', -1952904617);\n; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR FAIL vt0 SET c0=x'' WHERE ((((vt0.c0)<=(vt0.c0))) BETWEEN (((vt0.c0)&(vt0.c0))) AND (CAST(vt0.c0 AS TEXT))); -- 0ms;
INSERT OR FAIL INTO rt0(c0, c1) VALUES (x'bdf9', 0Xffffffff84a97113); -- 0ms;
PRAGMA ignore_check_constraints = true; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=0xffffffff8d604168; -- 1ms;
PRAGMA main.foreign_keys = true; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1051059841); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 14); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
CREATE TRIGGER IF NOT EXISTS tr0 INSTEAD OF INSERT ON v0 FOR EACH ROW  BEGIN DELETE FROM vt0 WHERE ((NOT (vt0.c0)) IN ());END; -- 0ms;
UPDATE OR ROLLBACK rt0 SET c0=0.7930550029478497 WHERE ((((rt0.c0)-(rt0.c1))) NOT BETWEEN (rt0.c0) AND (((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)))); -- 0ms;
UPDATE OR IGNORE vt0 SET c0='', c0=''; -- 1ms;
INSERT OR ROLLBACK INTO vt0 VALUES (0X3fc31848), (0.2770903178285711), ('uࠋ'); -- 1ms;
INSERT OR ROLLBACK INTO vt0 VALUES ('281222487'); -- 0ms;
ANALYZE; -- 1ms;
UPDATE OR REPLACE vt0 SET (c0)=(0.974277462824619) WHERE NULL; -- 0ms;
REINDEX; -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=-212827016,15');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('-2069270253'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 913332936); -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
END TRANSACTION; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '31920'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=(NULL) WHERE (NOT ((- (rt0.c2)))); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM vt1, rt0, v0;
SELECT ALL * FROM vt1, rt0, v0 WHERE ((((((v0.c0))<((v0.c2))))||(rt0.c2))) UNION ALL SELECT * FROM vt1, rt0, v0 WHERE ((NOT ((((((v0.c0))<((v0.c2))))||(rt0.c2))))) UNION ALL SELECT ALL * FROM vt1, rt0, v0 WHERE ((((((((v0.c0))<((v0.c2))))||(rt0.c2))) ISNULL));
SELECT ALL * FROM vt1, rt0, v0;
SELECT DISTINCT * FROM vt0, rt0, vt1;
SELECT DISTINCT * FROM vt0, rt0, vt1 WHERE (rt0.c2) UNION SELECT DISTINCT * FROM vt0, rt0, vt1 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT * FROM vt0, rt0, vt1 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT * FROM vt0, rt0, vt1;
SELECT rt0.c1, rt0.c0, v0.c2, v0.c1, vt1.c0, v0.c0 FROM vt1 LEFT OUTER JOIN v0 ON (- (v0.c2)) COLLATE NOCASE INNER JOIN rt0 ON ((((((((rt0.c0)AND(rt0.c1)))AND(v0.c1)))OR(((((rt0.c0)OR(v0.c0)))AND(vt1.c0)))))AND(CAST(rt0.c2 AS REAL))) GROUP BY rt0.c1, rt0.c0, v0.c2, v0.c1, vt1.c0, v0.c0;
SELECT ALL rt0.c1, rt0.c0, v0.c2, v0.c1, vt1.c0, v0.c0 FROM vt1 NOT INDEXED LEFT OUTER JOIN v0 ON (- (v0.c2)) COLLATE NOCASE INNER JOIN rt0 ON ((((((((rt0.c0)AND(rt0.c1)))AND(v0.c1)))OR(((((rt0.c0)OR(v0.c0)))AND(vt1.c0)))))AND(CAST(rt0.c2 AS REAL))) WHERE ((CASE v0.c0  WHEN v0.c1 THEN v0.c2 ELSE v0.c1 END IN ())) GROUP BY rt0.c1, rt0.c0, v0.c2, v0.c1, vt1.c0, v0.c0 UNION SELECT ALL rt0.c1, rt0.c0, v0.c2, v0.c1, vt1.c0, v0.c0 FROM vt1 LEFT OUTER JOIN v0 ON (- (v0.c2)) COLLATE NOCASE INNER JOIN rt0 ON ((((((((rt0.c0)AND(rt0.c1)))AND(v0.c1)))OR(((((rt0.c0)OR(v0.c0)))AND(vt1.c0)))))AND(CAST(rt0.c2 AS REAL))) WHERE ((NOT ((CASE v0.c0  WHEN v0.c1 THEN v0.c2 ELSE v0.c1 END IN ())))) GROUP BY rt0.c1, rt0.c0, v0.c2, v0.c1, vt1.c0, v0.c0 UNION SELECT ALL rt0.c1, rt0.c0, v0.c2, v0.c1, vt1.c0, v0.c0 FROM vt1 LEFT OUTER JOIN v0 ON (- (v0.c2)) COLLATE NOCASE INNER JOIN rt0 ON ((((((((rt0.c0)AND(rt0.c1)))AND(v0.c1)))OR(((((rt0.c0)OR(v0.c0)))AND(vt1.c0)))))AND(CAST(rt0.c2 AS REAL))) WHERE ((((CASE v0.c0  WHEN v0.c1 THEN v0.c2 ELSE v0.c1 END IN ())) ISNULL)) GROUP BY rt0.c1, rt0.c0, v0.c2, v0.c1, vt1.c0, v0.c0;
SELECT rt0.c1, rt0.c0, v0.c2, v0.c1, vt1.c0, v0.c0 FROM vt1 LEFT OUTER JOIN v0 ON (- (v0.c2)) COLLATE NOCASE INNER JOIN rt0 ON ((((((((rt0.c0)AND(rt0.c1)))AND(v0.c1)))OR(((((rt0.c0)OR(v0.c0)))AND(vt1.c0)))))AND(CAST(rt0.c2 AS REAL))) GROUP BY rt0.c1, rt0.c0, v0.c2, v0.c1, vt1.c0, v0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT(((vt0.c0)>>(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(((vt0.c0)>>(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(((vt0.c0)>>(vt0.c0)))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT(((vt0.c0)>>(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(((vt0.c0)>>(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(((vt0.c0)>>(vt0.c0)))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL MAX(((((vt0.c0) NOT NULL))>=((((('_')AND(vt0.c0)))OR(rt0.c1))))) FROM rt0, vt0 ORDER BY ((((rt0.c0) ISNULL)) NOT BETWEEN (((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c0))) AND ('I0ᵗeJ')) ASC, (rt0.c0 IN (rt0.c0, 0.7427095364198507))  NULLS LAST, ((((rt0.c1)<<(vt0.c0))) NOT BETWEEN (((((rt0.c2)AND(vt0.c0)))AND(rt0.c2))) AND (rt0.c1)) DESC  NULLS LAST;
SELECT ALL v0.c2, vt1.c0, v0.c1, v0.c0 FROM vt1 INNER JOIN v0 ON ((((((v0.c0)OR(v0.c2)))OR(v0.c2))) NOTNULL);
SELECT ALL v0.c2, vt1.c0, v0.c1, v0.c0 FROM vt1 INNER JOIN v0 ON ((((((v0.c0)OR(v0.c2)))OR(v0.c2))) NOTNULL) WHERE (CAST(((v0.c0) IS TRUE) AS BLOB)) UNION ALL SELECT ALL v0.c2, vt1.c0, v0.c1, v0.c0 FROM vt1 INNER JOIN v0 ON ((((((v0.c0)OR(v0.c2)))OR(v0.c2))) NOTNULL) WHERE ((NOT (CAST(((v0.c0) IS TRUE) AS BLOB)))) UNION ALL SELECT ALL v0.c2, vt1.c0, v0.c1, v0.c0 FROM vt1 INNER JOIN v0 ON ((((((v0.c0)OR(v0.c2)))OR(v0.c2))) NOTNULL) WHERE (((CAST(((v0.c0) IS TRUE) AS BLOB)) ISNULL));
SELECT ALL v0.c2, vt1.c0, v0.c1, v0.c0 FROM vt1 INNER JOIN v0 ON ((((((v0.c0)OR(v0.c2)))OR(v0.c2))) NOTNULL);
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((((((x'3df2c1ba', vt0.c0, vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))OR(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))AND(NULLIF(vt0.c0, vt0.c0)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((((((x'3df2c1ba', vt0.c0, vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))OR(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))AND(NULLIF(vt0.c0, vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((((((x'3df2c1ba', vt0.c0, vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))OR(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))AND(NULLIF(vt0.c0, vt0.c0)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, vt1 WHERE (vt1.c0) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt0, vt1 WHERE ((NOT (vt1.c0))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt0, vt1 WHERE (((vt1.c0) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1 HAVING MAX(COUNT(*)) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (MAX(COUNT(*)))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1 HAVING ((MAX(COUNT(*))) ISNULL);
SELECT TOTAL('-492181748') FROM v0 ORDER BY v0.c1;
SELECT * FROM vt0, v0, rt0;
SELECT * FROM vt0, v0, rt0 WHERE (TRIM((((vt0.c0)) NOT BETWEEN ((v0.c1)) AND ((-1378685176))))) UNION ALL SELECT * FROM vt0, v0, rt0 WHERE ((NOT (TRIM((((vt0.c0)) NOT BETWEEN ((v0.c1)) AND ((-1378685176))))))) UNION ALL SELECT * FROM vt0, v0, rt0 WHERE (((TRIM((((vt0.c0)) NOT BETWEEN ((v0.c1)) AND ((-1378685176))))) ISNULL));
SELECT * FROM vt0, v0, rt0;
SELECT DISTINCT v0.c1, rt0.c0, vt1.c0 FROM rt0, v0, vt1 NOT INDEXED, vt0;
SELECT DISTINCT v0.c1, rt0.c0, vt1.c0 FROM rt0, v0, vt1, vt0 WHERE ((CAST(v0.c2 AS NUMERIC) IN (CAST(rt0.c2 AS INTEGER), ((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c0))))) UNION SELECT DISTINCT v0.c1, rt0.c0, vt1.c0 FROM rt0, v0, vt1, vt0 WHERE ((NOT ((CAST(v0.c2 AS NUMERIC) IN (CAST(rt0.c2 AS INTEGER), ((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c0))))))) UNION SELECT DISTINCT v0.c1, rt0.c0, vt1.c0 FROM rt0, v0, vt1, vt0 WHERE ((((CAST(v0.c2 AS NUMERIC) IN (CAST(rt0.c2 AS INTEGER), ((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c0))))) ISNULL));
SELECT DISTINCT v0.c1, rt0.c0, vt1.c0 FROM rt0, v0, vt1 NOT INDEXED, vt0;
SELECT ALL v0.c1, v0.c0, vt1.c0 FROM vt1, v0 CROSS JOIN vt0 ON ((((vt0.c0) IS TRUE))/(((v0.c2) NOT BETWEEN (v0.c0) AND (0.7082571486186408)))) GROUP BY v0.c1, v0.c0, vt1.c0;
SELECT v0.c1, v0.c0, vt1.c0 FROM vt1, v0 CROSS JOIN vt0 ON ((((vt0.c0) IS TRUE))/(((v0.c2) NOT BETWEEN (v0.c0) AND (0.7082571486186408)))) WHERE (((CAST(vt0.c0 AS TEXT))>(TRIM(DISTINCT v0.c0)))) GROUP BY v0.c1, v0.c0, vt1.c0 UNION SELECT ALL v0.c1, v0.c0, vt1.c0 FROM vt1, v0 CROSS JOIN vt0 ON ((((vt0.c0) IS TRUE))/(((v0.c2) NOT BETWEEN (v0.c0) AND (0.7082571486186408)))) WHERE ((NOT (((CAST(vt0.c0 AS TEXT))>(TRIM(DISTINCT v0.c0)))))) GROUP BY v0.c1, v0.c0, vt1.c0 UNION SELECT ALL v0.c1, v0.c0, vt1.c0 FROM vt1, v0 CROSS JOIN vt0 ON ((((vt0.c0) IS TRUE))/(((v0.c2) NOT BETWEEN (v0.c0) AND (0.7082571486186408)))) WHERE (((((CAST(vt0.c0 AS TEXT))>(TRIM(DISTINCT v0.c0)))) ISNULL)) GROUP BY v0.c1, v0.c0, vt1.c0;
SELECT ALL v0.c1, v0.c0, vt1.c0 FROM vt1, v0 CROSS JOIN vt0 ON ((((vt0.c0) IS TRUE))/(((v0.c2) NOT BETWEEN (v0.c0) AND (0.7082571486186408)))) GROUP BY v0.c1, v0.c0, vt1.c0;
SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING GROUP_CONCAT(SUM(vt1.c0)) COLLATE NOCASE UNION ALL SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING (NOT (GROUP_CONCAT(SUM(vt1.c0)) COLLATE NOCASE)) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING ((GROUP_CONCAT(SUM(vt1.c0)) COLLATE NOCASE) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (LIKELIHOOD('-212827016', 0.23853659157009732)) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (LIKELIHOOD('-212827016', 0.23853659157009732)))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((LIKELIHOOD('-212827016', 0.23853659157009732)) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (0xffffffffa65dea04) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (0xffffffffa65dea04))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((0xffffffffa65dea04) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT ALL vt0.c0, vt1.c0, rt0.c0 FROM rt0, vt0, vt1 GROUP BY vt0.c0, vt1.c0, rt0.c0;
SELECT vt0.c0, vt1.c0, rt0.c0 FROM rt0, vt0, vt1 WHERE (rt0.c2) GROUP BY vt0.c0, vt1.c0, rt0.c0 UNION SELECT vt0.c0, vt1.c0, rt0.c0 FROM rt0, vt0, vt1 WHERE ((NOT (rt0.c2))) GROUP BY vt0.c0, vt1.c0, rt0.c0 UNION SELECT ALL vt0.c0, vt1.c0, rt0.c0 FROM rt0, vt0, vt1 WHERE (((rt0.c2) ISNULL)) GROUP BY vt0.c0, vt1.c0, rt0.c0;
SELECT ALL vt0.c0, vt1.c0, rt0.c0 FROM rt0, vt0, vt1 GROUP BY vt0.c0, vt1.c0, rt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((vt0.c0, SUM(vt0.c0), GROUP_CONCAT(vt0.c0))) NOT BETWEEN ((MIN(COUNT(*)), CASE WHEN vt0.c0 THEN vt0.c0 END, TOTAL(vt0.c0))) AND ((((vt0.c0) ISNULL), vt0.c0, MIN(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((vt0.c0, SUM(vt0.c0), GROUP_CONCAT(vt0.c0))) NOT BETWEEN ((MIN(COUNT(*)), CASE WHEN vt0.c0 THEN vt0.c0 END, TOTAL(vt0.c0))) AND ((((vt0.c0) ISNULL), vt0.c0, MIN(vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((vt0.c0, SUM(vt0.c0), GROUP_CONCAT(vt0.c0))) NOT BETWEEN ((MIN(COUNT(*)), CASE WHEN vt0.c0 THEN vt0.c0 END, TOTAL(vt0.c0))) AND ((((vt0.c0) ISNULL), vt0.c0, MIN(vt0.c0))))) ISNULL);
SELECT rt0.c1, vt0.c0 FROM vt0, rt0;
SELECT ALL rt0.c1, vt0.c0 FROM vt0, rt0 WHERE ((((((rt0.c0)AND(rt0.c2)))OR(vt0.c0)) IN ())) UNION ALL SELECT ALL rt0.c1, vt0.c0 FROM vt0, rt0 WHERE ((NOT ((((((rt0.c0)AND(rt0.c2)))OR(vt0.c0)) IN ())))) UNION ALL SELECT ALL rt0.c1, vt0.c0 FROM vt0, rt0 WHERE ((((((((rt0.c0)AND(rt0.c2)))OR(vt0.c0)) IN ())) ISNULL));
SELECT rt0.c1, vt0.c0 FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, v0, vt1;
SELECT DISTINCT * FROM vt0, v0, vt1 WHERE (CAST(v0.c0 AS BLOB)) UNION SELECT DISTINCT * FROM vt0, v0, vt1 WHERE ((NOT (CAST(v0.c0 AS BLOB)))) UNION SELECT DISTINCT * FROM vt0, v0, vt1 WHERE (((CAST(v0.c0 AS BLOB)) ISNULL));
SELECT DISTINCT * FROM vt0, v0, vt1;
SELECT vt1.c0, v0.c2, v0.c0, v0.c1, vt0.c0, rt0.c0, rt0.c1 FROM vt1, rt0, v0, vt0 GROUP BY vt1.c0, v0.c2, v0.c0, v0.c1, vt0.c0, rt0.c0, rt0.c1;
SELECT ALL vt1.c0, v0.c2, v0.c0, v0.c1, vt0.c0, rt0.c0, rt0.c1 FROM vt1, rt0, v0, vt0 WHERE (TIME(((v0.c0) IS TRUE), 0.7155077477682408, (v0.c2 IN ()), ((vt0.c0) NOT NULL), v0.c2)) GROUP BY vt1.c0, v0.c2, v0.c0, v0.c1, vt0.c0, rt0.c0, rt0.c1 UNION SELECT vt1.c0, v0.c2, v0.c0, v0.c1, vt0.c0, rt0.c0, rt0.c1 FROM vt1, rt0, v0, vt0 WHERE ((NOT (TIME(((v0.c0) IS TRUE), 0.7155077477682408, (v0.c2 IN ()), ((vt0.c0) NOT NULL), v0.c2)))) GROUP BY vt1.c0, v0.c2, v0.c0, v0.c1, vt0.c0, rt0.c0, rt0.c1 UNION SELECT vt1.c0, v0.c2, v0.c0, v0.c1, vt0.c0, rt0.c0, rt0.c1 FROM vt1, rt0, v0, vt0 WHERE (((TIME(((v0.c0) IS TRUE), 0.7155077477682408, (v0.c2 IN ()), ((vt0.c0) NOT NULL), v0.c2)) ISNULL)) GROUP BY vt1.c0, v0.c2, v0.c0, v0.c1, vt0.c0, rt0.c0, rt0.c1;
SELECT vt1.c0, v0.c2, v0.c0, v0.c1, vt0.c0, rt0.c0, rt0.c1 FROM vt1, rt0, v0, vt0 GROUP BY vt1.c0, v0.c2, v0.c0, v0.c1, vt0.c0, rt0.c0, rt0.c1;
SELECT ALL v0.c1, vt1.c0, v0.c2, vt0.c0 FROM vt1, vt0 NATURAL JOIN v0 GROUP BY v0.c1, vt1.c0, v0.c2, vt0.c0;
SELECT ALL v0.c1, vt1.c0, v0.c2, vt0.c0 FROM vt1, vt0 NATURAL JOIN v0 GROUP BY v0.c1, vt1.c0, v0.c2, vt0.c0 HAVING GROUP_CONCAT(((vt0.c0)||(TOTAL(MAX(vt1.c0))))) UNION ALL SELECT v0.c1, vt1.c0, v0.c2, vt0.c0 FROM vt1, vt0 NOT INDEXED NATURAL JOIN v0 GROUP BY v0.c1, vt1.c0, v0.c2, vt0.c0 HAVING (NOT (GROUP_CONCAT(((vt0.c0)||(TOTAL(MAX(vt1.c0))))))) UNION ALL SELECT ALL v0.c1, vt1.c0, v0.c2, vt0.c0 FROM vt1 NOT INDEXED, vt0 NATURAL JOIN v0 GROUP BY v0.c1, vt1.c0, v0.c2, vt0.c0 HAVING ((GROUP_CONCAT(((vt0.c0)||(TOTAL(MAX(vt1.c0)))))) ISNULL);
SELECT ALL v0.c2, rt0.c0, rt0.c1, v0.c1 FROM vt1, v0, rt0, vt0;
SELECT v0.c2, rt0.c0, rt0.c1, v0.c1 FROM vt1, v0, rt0, vt0 WHERE (TRIM(((vt1.c0) IS TRUE))) UNION ALL SELECT v0.c2, rt0.c0, rt0.c1, v0.c1 FROM vt1, v0, rt0, vt0 WHERE ((NOT (TRIM(((vt1.c0) IS TRUE))))) UNION ALL SELECT v0.c2, rt0.c0, rt0.c1, v0.c1 FROM vt1, v0, rt0, vt0 WHERE (((TRIM(((vt1.c0) IS TRUE))) ISNULL));
SELECT ALL v0.c2, rt0.c0, rt0.c1, v0.c1 FROM vt1, v0, rt0, vt0;
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE ((vt0.c0 IN (vt0.c0)) COLLATE RTRIM) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT ((vt0.c0 IN (vt0.c0)) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((((vt0.c0 IN (vt0.c0)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT vt1.c0, vt0.c0, v0.c2, rt0.c1, v0.c0, rt0.c0, rt0.c2 FROM rt0 LEFT OUTER JOIN v0 ON 0.03088852065047243 LEFT OUTER JOIN vt1 ON CAST((((0.9354448009133918)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))) AS NUMERIC) RIGHT OUTER JOIN vt0 ON ((((CAST(vt0.c0 AS INTEGER))AND(NULL)))AND(CASE v0.c2  WHEN rt0.c2 THEN rt0.c2 END)) GROUP BY vt1.c0, vt0.c0, v0.c2, rt0.c1, v0.c0, rt0.c0, rt0.c2;
SELECT vt1.c0, vt0.c0, v0.c2, rt0.c1, v0.c0, rt0.c0, rt0.c2 FROM rt0 LEFT OUTER JOIN v0 ON 0.03088852065047243 LEFT OUTER JOIN vt1 ON CAST((((0.9354448009133918)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))) AS NUMERIC) RIGHT OUTER JOIN vt0 ON ((((CAST(vt0.c0 AS INTEGER))AND(NULL)))AND(CASE v0.c2  WHEN rt0.c2 THEN rt0.c2 END)) WHERE (((v0.c0)GLOB(vt1.c0)) COLLATE RTRIM) GROUP BY vt1.c0, vt0.c0, v0.c2, rt0.c1, v0.c0, rt0.c0, rt0.c2 UNION SELECT ALL vt1.c0, vt0.c0, v0.c2, rt0.c1, v0.c0, rt0.c0, rt0.c2 FROM rt0 LEFT OUTER JOIN v0 ON 0.03088852065047243 LEFT OUTER JOIN vt1 ON CAST((((0.9354448009133918)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))) AS NUMERIC) RIGHT OUTER JOIN vt0 ON ((((CAST(vt0.c0 AS INTEGER))AND(NULL)))AND(CASE v0.c2  WHEN rt0.c2 THEN rt0.c2 END)) WHERE ((NOT (((v0.c0)GLOB(vt1.c0)) COLLATE RTRIM))) GROUP BY vt1.c0, vt0.c0, v0.c2, rt0.c1, v0.c0, rt0.c0, rt0.c2 UNION SELECT vt1.c0, vt0.c0, v0.c2, rt0.c1, v0.c0, rt0.c0, rt0.c2 FROM rt0 LEFT OUTER JOIN v0 ON 0.03088852065047243 LEFT OUTER JOIN vt1 ON CAST((((0.9354448009133918)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))) AS NUMERIC) RIGHT OUTER JOIN vt0 ON ((((CAST(vt0.c0 AS INTEGER))AND(NULL)))AND(CASE v0.c2  WHEN rt0.c2 THEN rt0.c2 END)) WHERE (((((v0.c0)GLOB(vt1.c0)) COLLATE RTRIM) ISNULL)) GROUP BY vt1.c0, vt0.c0, v0.c2, rt0.c1, v0.c0, rt0.c0, rt0.c2;
SELECT vt1.c0, vt0.c0, v0.c2, rt0.c1, v0.c0, rt0.c0, rt0.c2 FROM rt0 LEFT OUTER JOIN v0 ON 0.03088852065047243 LEFT OUTER JOIN vt1 ON CAST((((0.9354448009133918)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))) AS NUMERIC) RIGHT OUTER JOIN vt0 ON ((((CAST(vt0.c0 AS INTEGER))AND(NULL)))AND(CASE v0.c2  WHEN rt0.c2 THEN rt0.c2 END)) GROUP BY vt1.c0, vt0.c0, v0.c2, rt0.c1, v0.c0, rt0.c0, rt0.c2;
SELECT v0.c2, v0.c0 FROM v0, vt1 GROUP BY v0.c2, v0.c0;
SELECT v0.c2, v0.c0 FROM v0, vt1 GROUP BY v0.c2, v0.c0 HAVING COALESCE(DISTINCT TOTAL(COUNT(*)), (+ (GROUP_CONCAT(MIN(AVG(vt1.c0)))))) UNION ALL SELECT ALL v0.c2, v0.c0 FROM v0, vt1 GROUP BY v0.c2, v0.c0 HAVING (NOT (COALESCE(DISTINCT TOTAL(COUNT(*)), (+ (GROUP_CONCAT(MIN(AVG(vt1.c0)))))))) UNION ALL SELECT ALL v0.c2, v0.c0 FROM v0, vt1 GROUP BY v0.c2, v0.c0 HAVING ((COALESCE(DISTINCT TOTAL(COUNT(*)), (+ (GROUP_CONCAT(MIN(AVG(vt1.c0))))))) ISNULL);
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE ((((((v0.c0)-(v0.c1))))<(((v0.c1 IN ()))))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT ((((((v0.c0)-(v0.c1))))<(((v0.c1 IN ()))))))) UNION ALL SELECT * FROM v0 WHERE ((((((((v0.c0)-(v0.c1))))<(((v0.c1 IN ()))))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE (((((rt0.c0)<=(rt0.c0))) IS FALSE)) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c0)<=(rt0.c0))) IS FALSE)))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE (((((((rt0.c0)<=(rt0.c0))) IS FALSE)) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT vt1.c0 FROM v0, vt1 CROSS JOIN vt0 ON v0.c2 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM v0, vt1 CROSS JOIN vt0 ON v0.c2 WHERE ((~ (((vt0.c0)%(0.9354448009133918))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM v0, vt1 CROSS JOIN vt0 ON v0.c2 WHERE ((NOT ((~ (((vt0.c0)%(0.9354448009133918))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM v0, vt1 CROSS JOIN vt0 ON v0.c2 WHERE ((((~ (((vt0.c0)%(0.9354448009133918))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM v0, vt1 CROSS JOIN vt0 ON v0.c2 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING GROUP_CONCAT((((MAX(vt1.c0), '-1353849497', COUNT(AVG(vt1.c0))))<>((GROUP_CONCAT(GROUP_CONCAT(AVG(vt1.c0))), COUNT(*), vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (GROUP_CONCAT((((MAX(vt1.c0), '-1353849497', COUNT(AVG(vt1.c0))))<>((GROUP_CONCAT(GROUP_CONCAT(AVG(vt1.c0))), COUNT(*), vt1.c0)))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((GROUP_CONCAT((((MAX(vt1.c0), '-1353849497', COUNT(AVG(vt1.c0))))!=((GROUP_CONCAT(GROUP_CONCAT(AVG(vt1.c0))), COUNT(*), vt1.c0))))) ISNULL);
SELECT ALL v0.c2, v0.c0, vt0.c0, vt1.c0, rt0.c2 FROM rt0, vt1, vt0, v0;
SELECT ALL v0.c2, v0.c0, vt0.c0, vt1.c0, rt0.c2 FROM rt0, vt1, vt0, v0 WHERE ((((v0.c2 COLLATE BINARY))!=((((v0.c0)-(vt0.c0)))))) UNION ALL SELECT v0.c2, v0.c0, vt0.c0, vt1.c0, rt0.c2 FROM rt0, vt1, vt0, v0 WHERE ((NOT ((((v0.c2 COLLATE BINARY))!=((((v0.c0)-(vt0.c0)))))))) UNION ALL SELECT v0.c2, v0.c0, vt0.c0, vt1.c0, rt0.c2 FROM rt0 NOT INDEXED, vt1, vt0, v0 WHERE ((((((v0.c2 COLLATE BINARY))<>((((v0.c0)-(vt0.c0)))))) ISNULL));
SELECT ALL v0.c2, v0.c0, vt0.c0, vt1.c0, rt0.c2 FROM rt0, vt1, vt0, v0;
SELECT DISTINCT * FROM v0, vt1;
SELECT DISTINCT * FROM v0, vt1 WHERE ((((v0.c1)<(0Xffffffffd7c523fc)) IN ())) UNION SELECT DISTINCT * FROM v0, vt1 WHERE ((NOT ((((v0.c1)<(0xffffffffd7c523fc)) IN ())))) UNION SELECT DISTINCT * FROM v0, vt1 WHERE ((((((v0.c1)<(0Xffffffffd7c523fc)) IN ())) ISNULL));
SELECT DISTINCT * FROM v0, vt1;
SELECT ALL v0.c2, v0.c0, vt0.c0 FROM vt0 INNER JOIN v0 ON (((vt0.c0, v0.c1, vt0.c0, v0.c2, vt0.c0))=((v0.c0, v0.c1, vt0.c0, v0.c1, v0.c1))) COLLATE RTRIM GROUP BY v0.c2, v0.c0, vt0.c0;
SELECT ALL v0.c2, v0.c0, vt0.c0 FROM vt0 INNER JOIN v0 ON (((vt0.c0, v0.c1, vt0.c0, v0.c2, vt0.c0))==((v0.c0, v0.c1, vt0.c0, v0.c1, v0.c1))) COLLATE RTRIM WHERE (((((v0.c1)AND((~ (v0.c1)))))AND(CASE WHEN v0.c0 THEN v0.c2 WHEN v0.c1 THEN v0.c1 WHEN v0.c2 THEN v0.c2 END))) GROUP BY v0.c2, v0.c0, vt0.c0 UNION SELECT ALL v0.c2, v0.c0, vt0.c0 FROM vt0 INNER JOIN v0 ON (((vt0.c0, v0.c1, vt0.c0, v0.c2, vt0.c0))=((v0.c0, v0.c1, vt0.c0, v0.c1, v0.c1))) COLLATE RTRIM WHERE ((NOT (((((v0.c1)AND((~ (v0.c1)))))AND(CASE WHEN v0.c0 THEN v0.c2 WHEN v0.c1 THEN v0.c1 WHEN v0.c2 THEN v0.c2 END))))) GROUP BY v0.c2, v0.c0, vt0.c0 UNION SELECT ALL v0.c2, v0.c0, vt0.c0 FROM vt0 INNER JOIN v0 ON (((vt0.c0, v0.c1, vt0.c0, v0.c2, vt0.c0))==((v0.c0, v0.c1, vt0.c0, v0.c1, v0.c1))) COLLATE RTRIM WHERE (((((((v0.c1)AND((~ (v0.c1)))))AND(CASE WHEN v0.c0 THEN v0.c2 WHEN v0.c1 THEN v0.c1 WHEN v0.c2 THEN v0.c2 END))) ISNULL)) GROUP BY v0.c2, v0.c0, vt0.c0;
SELECT ALL v0.c2, v0.c0, vt0.c0 FROM vt0 INNER JOIN v0 ON (((vt0.c0, v0.c1, vt0.c0, v0.c2, vt0.c0))=((v0.c0, v0.c1, vt0.c0, v0.c1, v0.c1))) COLLATE RTRIM GROUP BY v0.c2, v0.c0, vt0.c0;
SELECT ALL rt0.c1, v0.c1, rt0.c0, v0.c2, vt0.c0 FROM rt0, v0 CROSS JOIN vt0 ON json(-1.353849497E9) GROUP BY rt0.c1, v0.c1, rt0.c0, v0.c2, vt0.c0;
SELECT ALL rt0.c1, v0.c1, rt0.c0, v0.c2, vt0.c0 FROM rt0, v0 CROSS JOIN vt0 ON json(-1.353849497E9) GROUP BY rt0.c1, v0.c1, rt0.c0, v0.c2, vt0.c0 HAVING ((((COUNT(*))AND(GROUP_CONCAT(COUNT(*)))))AND(((((MAX(GROUP_CONCAT(TOTAL(v0.c2))))AND(vt0.c0)))AND(GROUP_CONCAT(rt0.c0))))) UNION ALL SELECT ALL rt0.c1, v0.c1, rt0.c0, v0.c2, vt0.c0 FROM rt0, v0 CROSS JOIN vt0 ON json(-1.353849497E9) GROUP BY rt0.c1, v0.c1, rt0.c0, v0.c2, vt0.c0 HAVING (NOT (((((COUNT(*))AND(GROUP_CONCAT(COUNT(*)))))AND(((((MAX(GROUP_CONCAT(TOTAL(v0.c2))))AND(vt0.c0)))AND(GROUP_CONCAT(rt0.c0))))))) UNION ALL SELECT rt0.c1, v0.c1, rt0.c0, v0.c2, vt0.c0 FROM rt0, v0 CROSS JOIN vt0 ON json(-1.353849497E9) GROUP BY rt0.c1, v0.c1, rt0.c0, v0.c2, vt0.c0 HAVING ((((((COUNT(*))AND(GROUP_CONCAT(COUNT(*)))))AND(((((MAX(GROUP_CONCAT(TOTAL(v0.c2))))AND(vt0.c0)))AND(GROUP_CONCAT(rt0.c0)))))) ISNULL);
SELECT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((LTRIM(vt1.c0, vt1.c0))OR(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))))AND((((vt1.c0))==((0X725b4246)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((LTRIM(vt1.c0, vt1.c0))OR(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))))AND((((vt1.c0))=((0x725b4246)))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((((((LTRIM(vt1.c0, vt1.c0))OR(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))))AND((((vt1.c0))=((0X725b4246)))))) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT rt0.c1, vt1.c0, vt0.c0, rt0.c0, v0.c2, v0.c0, v0.c1 FROM vt1, v0, rt0, vt0;
SELECT DISTINCT rt0.c1, vt1.c0, vt0.c0, rt0.c0, v0.c2, v0.c0, v0.c1 FROM vt1, v0, rt0, vt0 WHERE ((((rt0.c0)) BETWEEN ((((vt1.c0) ISNULL))) AND ((vt1.c0 COLLATE RTRIM)))) UNION SELECT DISTINCT rt0.c1, vt1.c0, vt0.c0, rt0.c0, v0.c2, v0.c0, v0.c1 FROM vt1, v0, rt0, vt0 WHERE ((NOT ((((rt0.c0)) BETWEEN ((((vt1.c0) ISNULL))) AND ((vt1.c0 COLLATE RTRIM)))))) UNION SELECT DISTINCT rt0.c1, vt1.c0, vt0.c0, rt0.c0, v0.c2, v0.c0, v0.c1 FROM vt1, v0, rt0, vt0 WHERE ((((((rt0.c0)) BETWEEN ((((vt1.c0) ISNULL))) AND ((vt1.c0 COLLATE RTRIM)))) ISNULL));
SELECT DISTINCT rt0.c1, vt1.c0, vt0.c0, rt0.c0, v0.c2, v0.c0, v0.c1 FROM vt1, v0, rt0, vt0;
SELECT ALL v0.c0, vt1.c0 FROM v0 RIGHT OUTER JOIN vt1 ON 'd0CPt}*_U' GROUP BY v0.c0, vt1.c0;
SELECT ALL v0.c0, vt1.c0 FROM v0 RIGHT OUTER JOIN vt1 ON 'd0CPt}*_U' WHERE ('0.03088852065047243') GROUP BY v0.c0, vt1.c0 UNION SELECT ALL v0.c0, vt1.c0 FROM v0 RIGHT OUTER JOIN vt1 ON 'd0CPt}*_U' WHERE ((NOT ('0.03088852065047243'))) GROUP BY v0.c0, vt1.c0 UNION SELECT v0.c0, vt1.c0 FROM v0 RIGHT OUTER JOIN vt1 ON 'd0CPt}*_U' WHERE ((('0.03088852065047243') ISNULL)) GROUP BY v0.c0, vt1.c0;
SELECT ALL v0.c0, vt1.c0 FROM v0 RIGHT OUTER JOIN vt1 ON 'd0CPt}*_U' GROUP BY v0.c0, vt1.c0;
SELECT ALL vt1.c0, v0.c2, vt0.c0 FROM vt0, vt1 INNER JOIN v0 ON vt0.c0 GROUP BY vt1.c0, v0.c2, vt0.c0;
SELECT vt1.c0, v0.c2, vt0.c0 FROM vt0, vt1 INNER JOIN v0 ON vt0.c0 GROUP BY vt1.c0, v0.c2, vt0.c0 HAVING (COUNT(*) IN ()) UNION ALL SELECT vt1.c0, v0.c2, vt0.c0 FROM vt0, vt1 INNER JOIN v0 ON vt0.c0 GROUP BY vt1.c0, v0.c2, vt0.c0 HAVING (NOT ((COUNT(*) IN ()))) UNION ALL SELECT vt1.c0, v0.c2, vt0.c0 FROM vt0, vt1 INNER JOIN v0 ON vt0.c0 GROUP BY vt1.c0, v0.c2, vt0.c0 HAVING (((COUNT(*) IN ())) ISNULL);
SELECT ALL vt1.c0, v0.c2, vt0.c0 FROM vt0, vt1 INNER JOIN v0 ON vt0.c0 GROUP BY vt1.c0, v0.c2, vt0.c0;
SELECT vt1.c0, v0.c2, vt0.c0 FROM vt0, vt1 INNER JOIN v0 ON vt0.c0 GROUP BY vt1.c0, v0.c2, vt0.c0 HAVING (COUNT(*) IN ()) UNION ALL SELECT vt1.c0, v0.c2, vt0.c0 FROM vt0, vt1 INNER JOIN v0 ON vt0.c0 GROUP BY vt1.c0, v0.c2, vt0.c0 HAVING (NOT ((COUNT(*) IN ()))) UNION ALL SELECT vt1.c0, v0.c2, vt0.c0 FROM vt0, vt1 INNER JOIN v0 ON vt0.c0 GROUP BY vt1.c0, v0.c2, vt0.c0 HAVING (((COUNT(*) IN ())) ISNULL);
SELECT ALL vt1.c0, v0.c2, vt0.c0 FROM vt0, vt1 INNER JOIN v0 ON vt0.c0 GROUP BY vt1.c0, v0.c2, vt0.c0;
SELECT * FROM v0 INNER JOIN vt1 ON CASE ((((v0.c1)OR(v0.c0)))AND(v0.c0))  WHEN ((vt1.c0)+(v0.c1)) THEN ((v0.c0)IS(v0.c0)) END;
SELECT ALL * FROM v0 INNER JOIN vt1 ON CASE ((((v0.c1)OR(v0.c0)))AND(v0.c0))  WHEN ((vt1.c0)+(v0.c1)) THEN ((v0.c0)IS(v0.c0)) END WHERE ((((v0.c1)==(vt1.c0)) IN ())) UNION ALL SELECT * FROM v0 INNER JOIN vt1 ON CASE ((((v0.c1)OR(v0.c0)))AND(v0.c0))  WHEN ((vt1.c0)+(v0.c1)) THEN ((v0.c0)IS(v0.c0)) END WHERE ((NOT ((((v0.c1)==(vt1.c0)) IN ())))) UNION ALL SELECT ALL * FROM v0 INNER JOIN vt1 ON CASE ((((v0.c1)OR(v0.c0)))AND(v0.c0))  WHEN ((vt1.c0)+(v0.c1)) THEN ((v0.c0)IS(v0.c0)) END WHERE ((((((v0.c1)=(vt1.c0)) IN ())) ISNULL));
SELECT * FROM v0 INNER JOIN vt1 ON CASE ((((v0.c1)OR(v0.c0)))AND(v0.c0))  WHEN ((vt1.c0)+(v0.c1)) THEN ((v0.c0)IS(v0.c0)) END;
SELECT DISTINCT v0.c2 FROM v0 RIGHT OUTER JOIN vt1 ON (((0.38866131636664636))<>((((v0.c1)>(vt1.c0)))));
SELECT DISTINCT v0.c2 FROM v0 RIGHT OUTER JOIN vt1 ON (((0.38866131636664636))!=((((v0.c1)>(vt1.c0))))) WHERE (((CAST(vt1.c0 AS TEXT))OR(((vt1.c0)==(vt1.c0))))) UNION SELECT DISTINCT v0.c2 FROM v0 RIGHT OUTER JOIN vt1 ON (((0.38866131636664636))!=((((v0.c1)>(vt1.c0))))) WHERE ((NOT (((CAST(vt1.c0 AS TEXT))OR(((vt1.c0)==(vt1.c0))))))) UNION SELECT DISTINCT v0.c2 FROM v0 RIGHT OUTER JOIN vt1 ON (((0.38866131636664636))<>((((v0.c1)>(vt1.c0))))) WHERE (((((CAST(vt1.c0 AS TEXT))OR(((vt1.c0)=(vt1.c0))))) ISNULL));
SELECT DISTINCT v0.c2 FROM v0 RIGHT OUTER JOIN vt1 ON (((0.38866131636664636))<>((((v0.c1)>(vt1.c0)))));
SELECT rt0.c1, v0.c0, vt1.c0 FROM v0, vt1 INNER JOIN vt0 ON ((v0.c1) IS TRUE) COLLATE BINARY FULL OUTER JOIN rt0 ON load_extension(vt1.c0, CAST(rt0.c2 AS NUMERIC)) GROUP BY rt0.c1, v0.c0, vt1.c0;
SELECT rt0.c1, v0.c0, vt1.c0 FROM v0, vt1 INNER JOIN vt0 ON ((v0.c1) IS TRUE) COLLATE BINARY FULL OUTER JOIN rt0 ON load_extension(vt1.c0, CAST(rt0.c2 AS NUMERIC)) WHERE ((NOT (((((v0.c2)AND(v0.c0)))AND(v0.c2))))) GROUP BY rt0.c1, v0.c0, vt1.c0 UNION SELECT ALL rt0.c1, v0.c0, vt1.c0 FROM v0, vt1 INNER JOIN vt0 ON ((v0.c1) IS TRUE) COLLATE BINARY FULL OUTER JOIN rt0 ON load_extension(vt1.c0, CAST(rt0.c2 AS NUMERIC)) WHERE ((NOT ((NOT (((((v0.c2)AND(v0.c0)))AND(v0.c2))))))) GROUP BY rt0.c1, v0.c0, vt1.c0 UNION SELECT ALL rt0.c1, v0.c0, vt1.c0 FROM v0, vt1 INNER JOIN vt0 ON ((v0.c1) IS TRUE) COLLATE BINARY FULL OUTER JOIN rt0 ON load_extension(vt1.c0, CAST(rt0.c2 AS NUMERIC)) WHERE ((((NOT (((((v0.c2)AND(v0.c0)))AND(v0.c2))))) ISNULL)) GROUP BY rt0.c1, v0.c0, vt1.c0;
SELECT rt0.c1, v0.c0, vt1.c0 FROM v0, vt1 INNER JOIN vt0 ON ((v0.c1) IS TRUE) COLLATE BINARY FULL OUTER JOIN rt0 ON load_extension(vt1.c0, CAST(rt0.c2 AS NUMERIC)) GROUP BY rt0.c1, v0.c0, vt1.c0;
SELECT v0.c2, vt1.c0, v0.c1, v0.c0 FROM v0 INNER JOIN vt1 ON CAST((NOT (v0.c0)) AS BLOB) GROUP BY v0.c2, vt1.c0, v0.c1, v0.c0;
SELECT ALL v0.c2, vt1.c0, v0.c1, v0.c0 FROM v0 INNER JOIN vt1 ON CAST((NOT (v0.c0)) AS BLOB) GROUP BY v0.c2, vt1.c0, v0.c1, v0.c0 HAVING MAX(TOTAL(v0.c1)) UNION ALL SELECT v0.c2, vt1.c0, v0.c1, v0.c0 FROM v0 INNER JOIN vt1 ON CAST((NOT (v0.c0)) AS BLOB) GROUP BY v0.c2, vt1.c0, v0.c1, v0.c0 HAVING (NOT (MAX(TOTAL(v0.c1)))) UNION ALL SELECT v0.c2, vt1.c0, v0.c1, v0.c0 FROM v0 INNER JOIN vt1 ON CAST((NOT (v0.c0)) AS BLOB) GROUP BY v0.c2, vt1.c0, v0.c1, v0.c0 HAVING ((MAX(TOTAL(v0.c1))) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 CROSS JOIN vt1 ON IFNULL(((((vt1.c0)OR(vt1.c0)))OR('-935790884')), rt0.c0);
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 CROSS JOIN vt1 ON IFNULL(((((vt1.c0)OR(vt1.c0)))OR('-935790884')), rt0.c0) WHERE (x'241043d6ea45') UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 CROSS JOIN vt1 ON IFNULL(((((vt1.c0)OR(vt1.c0)))OR('-935790884')), rt0.c0) WHERE ((NOT (x'241043d6ea45'))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 CROSS JOIN vt1 ON IFNULL(((((vt1.c0)OR(vt1.c0)))OR('-935790884')), rt0.c0) WHERE (((x'241043d6ea45') ISNULL));
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 CROSS JOIN vt1 ON IFNULL(((((vt1.c0)OR(vt1.c0)))OR('-935790884')), rt0.c0);
SELECT DISTINCT v0.c1, rt0.c1, v0.c2, rt0.c0, rt0.c2 FROM v0, rt0;
SELECT DISTINCT v0.c1, rt0.c1, v0.c2, rt0.c0, rt0.c2 FROM v0, rt0 WHERE (((x'8d14')AND(CAST(rt0.c1 AS NUMERIC)))) UNION SELECT DISTINCT v0.c1, rt0.c1, v0.c2, rt0.c0, rt0.c2 FROM v0, rt0 WHERE ((NOT (((x'8d14')AND(CAST(rt0.c1 AS NUMERIC)))))) UNION SELECT DISTINCT v0.c1, rt0.c1, v0.c2, rt0.c0, rt0.c2 FROM v0, rt0 WHERE (((((x'8d14')AND(CAST(rt0.c1 AS NUMERIC)))) ISNULL));
SELECT DISTINCT v0.c1, rt0.c1, v0.c2, rt0.c0, rt0.c2 FROM v0, rt0;
SELECT v0.c1, rt0.c2 FROM vt1, rt0, v0 INNER JOIN vt0 ON ((CASE WHEN 0.6056613345863673 THEN '4_RJ?' END) NOT BETWEEN (((v0.c2)&(rt0.c1))) AND (((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)))) GROUP BY v0.c1, rt0.c2;
SELECT v0.c1, rt0.c2 FROM vt1, rt0, v0 INNER JOIN vt0 ON ((CASE WHEN 0.6056613345863673 THEN '4_RJ?' END) NOT BETWEEN (((v0.c2)&(rt0.c1))) AND (((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)))) WHERE ((1.918583366E9 IN ()) COLLATE NOCASE) GROUP BY v0.c1, rt0.c2 UNION SELECT ALL v0.c1, rt0.c2 FROM vt1, rt0, v0 INNER JOIN vt0 ON ((CASE WHEN 0.6056613345863673 THEN '4_RJ?' END) NOT BETWEEN (((v0.c2)&(rt0.c1))) AND (((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)))) WHERE ((NOT ((1.918583366E9 IN ()) COLLATE NOCASE))) GROUP BY v0.c1, rt0.c2 UNION SELECT v0.c1, rt0.c2 FROM vt1, rt0, v0 INNER JOIN vt0 ON ((CASE WHEN 0.6056613345863673 THEN '4_RJ?' END) NOT BETWEEN (((v0.c2)&(rt0.c1))) AND (((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)))) WHERE ((((1.918583366E9 IN ()) COLLATE NOCASE) ISNULL)) GROUP BY v0.c1, rt0.c2;
SELECT v0.c1, rt0.c2 FROM vt1, rt0, v0 INNER JOIN vt0 ON ((CASE WHEN 0.6056613345863673 THEN '4_RJ?' END) NOT BETWEEN (((v0.c2)&(rt0.c1))) AND (((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)))) GROUP BY v0.c1, rt0.c2;
SELECT ALL vt1.c0 FROM v0 RIGHT OUTER JOIN vt0 ON NULL RIGHT OUTER JOIN rt0 ON (((vt0.c0, v0.c2, v0.c1)) NOT BETWEEN (((v0.c0 IN (NULL)), '', (v0.c2 IN ()))) AND ((v0.c0 COLLATE NOCASE, (vt0.c0 IN ()), IFNULL(DISTINCT rt0.c2, vt0.c0)))) INNER JOIN vt1 ON (((rt0.c2, rt0.c2, v0.c2)) BETWEEN ((((rt0.c2) BETWEEN (v0.c2) AND (x'')), ((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c1)), rt0.c2 COLLATE RTRIM)) AND ((((v0.c0)>>(v0.c0)), (((vt1.c0, rt0.c0, rt0.c1))=((vt1.c0, v0.c0, rt0.c1))), NULL))) GROUP BY vt1.c0;
SELECT vt1.c0 FROM v0 RIGHT OUTER JOIN vt0 ON NULL RIGHT OUTER JOIN rt0 ON (((vt0.c0, v0.c2, v0.c1)) NOT BETWEEN (((v0.c0 IN (NULL)), '', (v0.c2 IN ()))) AND ((v0.c0 COLLATE NOCASE, (vt0.c0 IN ()), IFNULL(DISTINCT rt0.c2, vt0.c0)))) INNER JOIN vt1 ON (((rt0.c2, rt0.c2, v0.c2)) BETWEEN ((((rt0.c2) BETWEEN (v0.c2) AND (x'')), ((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c1)), rt0.c2 COLLATE RTRIM)) AND ((((v0.c0)>>(v0.c0)), (((vt1.c0, rt0.c0, rt0.c1))=((vt1.c0, v0.c0, rt0.c1))), NULL))) GROUP BY vt1.c0 HAVING MIN(SUM(vt0.c0) COLLATE RTRIM) UNION ALL SELECT vt1.c0 FROM v0 RIGHT OUTER JOIN vt0 ON NULL RIGHT OUTER JOIN rt0 ON (((vt0.c0, v0.c2, v0.c1)) NOT BETWEEN (((v0.c0 IN (NULL)), '', (v0.c2 IN ()))) AND ((v0.c0 COLLATE NOCASE, (vt0.c0 IN ()), IFNULL(DISTINCT rt0.c2, vt0.c0)))) INNER JOIN vt1 ON (((rt0.c2, rt0.c2, v0.c2)) BETWEEN ((((rt0.c2) BETWEEN (v0.c2) AND (x'')), ((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c1)), rt0.c2 COLLATE RTRIM)) AND ((((v0.c0)>>(v0.c0)), (((vt1.c0, rt0.c0, rt0.c1))=((vt1.c0, v0.c0, rt0.c1))), NULL))) GROUP BY vt1.c0 HAVING (NOT (MIN(SUM(vt0.c0) COLLATE RTRIM))) UNION ALL SELECT ALL vt1.c0 FROM v0 RIGHT OUTER JOIN vt0 ON NULL RIGHT OUTER JOIN rt0 ON (((vt0.c0, v0.c2, v0.c1)) NOT BETWEEN (((v0.c0 IN (NULL)), '', (v0.c2 IN ()))) AND ((v0.c0 COLLATE NOCASE, (vt0.c0 IN ()), IFNULL(DISTINCT rt0.c2, vt0.c0)))) INNER JOIN vt1 ON (((rt0.c2, rt0.c2, v0.c2)) BETWEEN ((((rt0.c2) BETWEEN (v0.c2) AND (x'')), ((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c1)), rt0.c2 COLLATE RTRIM)) AND ((((v0.c0)>>(v0.c0)), (((vt1.c0, rt0.c0, rt0.c1))=((vt1.c0, v0.c0, rt0.c1))), NULL))) GROUP BY vt1.c0 HAVING ((MIN(SUM(vt0.c0) COLLATE RTRIM)) ISNULL);
SELECT ALL * FROM rt0 CROSS JOIN vt1 ON (((rt0.c1 IN ()))<=(((rt0.c0) NOT BETWEEN (vt1.c0) AND (NULL)))) INNER JOIN vt0 ON NULL;
SELECT * FROM rt0 CROSS JOIN vt1 ON (((rt0.c1 IN ()))<=(((rt0.c0) NOT BETWEEN (vt1.c0) AND (NULL)))) INNER JOIN vt0 ON NULL WHERE (((CASE rt0.c1  WHEN vt1.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 END) NOT BETWEEN (((rt0.c2) NOT BETWEEN (-2.12827016E8) AND (vt1.c0))) AND (json_type(rt0.c1)))) UNION ALL SELECT ALL * FROM rt0 CROSS JOIN vt1 ON (((rt0.c1 IN ()))<=(((rt0.c0) NOT BETWEEN (vt1.c0) AND (NULL)))) INNER JOIN vt0 ON NULL WHERE ((NOT (((CASE rt0.c1  WHEN vt1.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 END) NOT BETWEEN (((rt0.c2) NOT BETWEEN (-2.12827016E8) AND (vt1.c0))) AND (json_type(rt0.c1)))))) UNION ALL SELECT ALL * FROM rt0 CROSS JOIN vt1 ON (((rt0.c1 IN ()))<=(((rt0.c0) NOT BETWEEN (vt1.c0) AND (NULL)))) INNER JOIN vt0 ON NULL WHERE (((((CASE rt0.c1  WHEN vt1.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 END) NOT BETWEEN (((rt0.c2) NOT BETWEEN (-2.12827016E8) AND (vt1.c0))) AND (json_type(rt0.c1)))) ISNULL));
SELECT ALL * FROM rt0 CROSS JOIN vt1 ON (((rt0.c1 IN ()))<=(((rt0.c0) NOT BETWEEN (vt1.c0) AND (NULL)))) INNER JOIN vt0 ON NULL;
SELECT DISTINCT * FROM v0, vt1;
SELECT DISTINCT * FROM v0, vt1 WHERE (CAST(((v0.c1)<=(vt1.c0)) AS NUMERIC)) UNION SELECT DISTINCT * FROM v0, vt1 WHERE ((NOT (CAST(((v0.c1)<=(vt1.c0)) AS NUMERIC)))) UNION SELECT DISTINCT * FROM v0, vt1 WHERE (((CAST(((v0.c1)<=(vt1.c0)) AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM v0, vt1;
SELECT ALL rt0.c2, v0.c1, vt0.c0, rt0.c0, rt0.c1 FROM rt0, vt0, v0 GROUP BY rt0.c2, v0.c1, vt0.c0, rt0.c0, rt0.c1;
SELECT rt0.c2, v0.c1, vt0.c0, rt0.c0, rt0.c1 FROM rt0, vt0, v0 WHERE ((NOT (((v0.c1) IS FALSE)))) GROUP BY rt0.c2, v0.c1, vt0.c0, rt0.c0, rt0.c1 UNION SELECT rt0.c2, v0.c1, vt0.c0, rt0.c0, rt0.c1 FROM rt0, vt0, v0 WHERE ((NOT ((NOT (((v0.c1) IS FALSE)))))) GROUP BY rt0.c2, v0.c1, vt0.c0, rt0.c0, rt0.c1 UNION SELECT rt0.c2, v0.c1, vt0.c0, rt0.c0, rt0.c1 FROM rt0, vt0, v0 WHERE ((((NOT (((v0.c1) IS FALSE)))) ISNULL)) GROUP BY rt0.c2, v0.c1, vt0.c0, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, v0.c1, vt0.c0, rt0.c0, rt0.c1 FROM rt0, vt0, v0 GROUP BY rt0.c2, v0.c1, vt0.c0, rt0.c0, rt0.c1;
SELECT v0.c2 FROM v0, vt1 CROSS JOIN vt0 ON -2043803637 GROUP BY v0.c2;
SELECT ALL v0.c2 FROM v0, vt1 CROSS JOIN vt0 ON -2043803637 GROUP BY v0.c2 HAVING TOTAL(COUNT(vt0.c0)) UNION ALL SELECT v0.c2 FROM v0, vt1 CROSS JOIN vt0 ON -2043803637 GROUP BY v0.c2 HAVING (NOT (TOTAL(COUNT(vt0.c0)))) UNION ALL SELECT ALL v0.c2 FROM v0, vt1 CROSS JOIN vt0 ON -2043803637 GROUP BY v0.c2 HAVING ((TOTAL(COUNT(vt0.c0))) ISNULL);
SELECT ALL TOTAL(CAST(CASE WHEN v0.c2 THEN v0.c1 END AS REAL)) FROM v0 ORDER BY (((((v0.c2)<(v0.c1)), CASE WHEN v0.c0 THEN v0.c1 END, ((((((((((((v0.c2)OR(v0.c0)))AND(v0.c1)))OR(v0.c1)))OR(v0.c0)))OR(v0.c2)))OR(v0.c0))))=((v0.c1 COLLATE BINARY, ((v0.c2)<<(v0.c0)), (v0.c0 IN (v0.c1, v0.c1)))))  NULLS FIRST;
SELECT * FROM rt0, v0, vt1;
SELECT ALL * FROM rt0, v0, vt1 WHERE ((((vt1.c0)<<(x'7072')) IN ())) UNION ALL SELECT * FROM rt0, v0, vt1 WHERE ((NOT ((((vt1.c0)<<(x'7072')) IN ())))) UNION ALL SELECT ALL * FROM rt0, v0, vt1 WHERE ((((((vt1.c0)<<(x'7072')) IN ())) ISNULL));
SELECT * FROM rt0, v0, vt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((((((JULIANDAY(vt0.c0, 'Q', vt0.c0, 0.9161814287891912, vt0.c0))AND(((vt0.c0)=(vt0.c0)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND((vt0.c0 IN ()))))AND(UNLIKELY(vt0.c0)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((((((JULIANDAY(vt0.c0, 'Q', vt0.c0, 0.9161814287891912, vt0.c0))AND(((vt0.c0)=(vt0.c0)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND((vt0.c0 IN ()))))AND(UNLIKELY(vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((((((JULIANDAY(vt0.c0, 'Q', vt0.c0, 0.9161814287891912, vt0.c0))AND(((vt0.c0)=(vt0.c0)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND((vt0.c0 IN ()))))AND(UNLIKELY(vt0.c0)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT rt0.c0, vt0.c0 FROM vt0, vt1, v0, rt0 GROUP BY rt0.c0, vt0.c0;
SELECT rt0.c0, vt0.c0 FROM vt0, vt1, v0, rt0 WHERE (((((CASE WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN vt1.c0 WHEN '-2043803637' THEN rt0.c1 WHEN v0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE NULL END)AND((~ (v0.c1)))))AND(UPPER(rt0.c2)))) GROUP BY rt0.c0, vt0.c0 UNION SELECT ALL rt0.c0, vt0.c0 FROM vt0, vt1, v0, rt0 WHERE ((NOT (((((CASE WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN vt1.c0 WHEN '-2043803637' THEN rt0.c1 WHEN v0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE NULL END)AND((~ (v0.c1)))))AND(UPPER(rt0.c2)))))) GROUP BY rt0.c0, vt0.c0 UNION SELECT rt0.c0, vt0.c0 FROM vt0, vt1, v0, rt0 WHERE (((((((CASE WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN vt1.c0 WHEN '-2043803637' THEN rt0.c1 WHEN v0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE NULL END)AND((~ (v0.c1)))))AND(UPPER(rt0.c2)))) ISNULL)) GROUP BY rt0.c0, vt0.c0;
SELECT rt0.c0, vt0.c0 FROM vt0, vt1, v0, rt0 GROUP BY rt0.c0, vt0.c0;
SELECT ALL vt1.c0 FROM vt0, v0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0, v0, vt1 GROUP BY vt1.c0 HAVING GROUP_CONCAT(AVG(MIN(v0.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt0, v0, vt1 GROUP BY vt1.c0 HAVING (NOT (GROUP_CONCAT(AVG(MIN(v0.c0))))) UNION ALL SELECT vt1.c0 FROM vt0, v0, vt1 GROUP BY vt1.c0 HAVING ((GROUP_CONCAT(AVG(MIN(v0.c0)))) ISNULL);
SELECT ALL rt0.c1, v0.c2, rt0.c2 FROM rt0, v0, vt0;
SELECT ALL rt0.c1, v0.c2, rt0.c2 FROM rt0, v0, vt0 WHERE (((((v0.c1)OR(rt0.c0)))>>((v0.c1 IN ())))) UNION ALL SELECT ALL rt0.c1, v0.c2, rt0.c2 FROM rt0, v0, vt0 WHERE ((NOT (((((v0.c1)OR(rt0.c0)))>>((v0.c1 IN ())))))) UNION ALL SELECT rt0.c1, v0.c2, rt0.c2 FROM rt0, v0, vt0 WHERE (((((((v0.c1)OR(rt0.c0)))>>((v0.c1 IN ())))) ISNULL));
SELECT ALL rt0.c1, v0.c2, rt0.c2 FROM rt0, v0, vt0;
SELECT DISTINCT * FROM vt1, rt0, v0, vt0;
SELECT DISTINCT * FROM vt1, rt0, v0, vt0 WHERE (v0.c2) UNION SELECT DISTINCT * FROM vt1, rt0, v0, vt0 WHERE ((NOT (v0.c2))) UNION SELECT DISTINCT * FROM vt1, rt0, v0, vt0 NOT INDEXED WHERE (((v0.c2) ISNULL));
SELECT DISTINCT * FROM vt1, rt0, v0, vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC)) BETWEEN (((vt0.c0) NOTNULL)) AND ((vt0.c0 IN ())))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((CAST(vt0.c0 AS NUMERIC)) BETWEEN (((vt0.c0) NOTNULL)) AND ((vt0.c0 IN ())))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((CAST(vt0.c0 AS NUMERIC)) BETWEEN (((vt0.c0) NOTNULL)) AND ((vt0.c0 IN ())))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0;
SELECT ALL v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0 HAVING MIN(((COUNT(SUM(v0.c1)))>(v0.c0))) UNION ALL SELECT v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0 HAVING (NOT (MIN(((COUNT(SUM(v0.c1)))>(v0.c0))))) UNION ALL SELECT ALL v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0 HAVING ((MIN(((COUNT(SUM(v0.c1)))>(v0.c0)))) ISNULL);
SELECT * FROM v0;
SELECT * FROM v0 WHERE (((((v0.c2) IS FALSE))<<(v0.c1 COLLATE RTRIM))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (((((v0.c2) IS FALSE))<<(v0.c1 COLLATE RTRIM))))) UNION ALL SELECT * FROM v0 WHERE (((((((v0.c2) IS FALSE))<<(v0.c1 COLLATE RTRIM))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM rt0, v0, vt1;
SELECT DISTINCT * FROM rt0, v0, vt1 WHERE ((v0.c0 COLLATE NOCASE IN ((((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((v0.c2)))))) UNION SELECT DISTINCT * FROM rt0, v0, vt1 WHERE ((NOT ((v0.c0 COLLATE NOCASE IN ((((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((v0.c2)))))))) UNION SELECT DISTINCT * FROM rt0, v0, vt1 WHERE ((((v0.c0 COLLATE NOCASE IN ((((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((v0.c2)))))) ISNULL));
SELECT DISTINCT * FROM rt0, v0, vt1;
SELECT ALL vt1.c0, v0.c2, rt0.c1, rt0.c2 FROM rt0, v0, vt1, vt0 GROUP BY vt1.c0, v0.c2, rt0.c1, rt0.c2;
SELECT ALL vt1.c0, v0.c2, rt0.c1, rt0.c2 FROM rt0, v0, vt1, vt0 WHERE (LOWER(DISTINCT (NOT (rt0.c1)))) GROUP BY vt1.c0, v0.c2, rt0.c1, rt0.c2 UNION SELECT ALL vt1.c0, v0.c2, rt0.c1, rt0.c2 FROM rt0, v0, vt1, vt0 WHERE ((NOT (LOWER(DISTINCT (NOT (rt0.c1)))))) GROUP BY vt1.c0, v0.c2, rt0.c1, rt0.c2 UNION SELECT vt1.c0, v0.c2, rt0.c1, rt0.c2 FROM rt0, v0, vt1, vt0 WHERE (((LOWER(DISTINCT (NOT (rt0.c1)))) ISNULL)) GROUP BY vt1.c0, v0.c2, rt0.c1, rt0.c2;
SELECT ALL vt1.c0, v0.c2, rt0.c1, rt0.c2 FROM rt0, v0, vt1, vt0 GROUP BY vt1.c0, v0.c2, rt0.c1, rt0.c2;
SELECT v0.c1, rt0.c0, rt0.c1, vt1.c0, vt0.c0 FROM vt0, rt0, vt1 NATURAL JOIN v0 GROUP BY v0.c1, rt0.c0, rt0.c1, vt1.c0, vt0.c0;
SELECT ALL v0.c1, rt0.c0, rt0.c1, vt1.c0, vt0.c0 FROM vt0, rt0, vt1 NATURAL JOIN v0 GROUP BY v0.c1, rt0.c0, rt0.c1, vt1.c0, vt0.c0 HAVING MIN(MIN(AVG(rt0.c2))) UNION ALL SELECT ALL v0.c1, rt0.c0, rt0.c1, vt1.c0, vt0.c0 FROM vt0, rt0, vt1 NATURAL JOIN v0 GROUP BY v0.c1, rt0.c0, rt0.c1, vt1.c0, vt0.c0 HAVING (NOT (MIN(MIN(AVG(rt0.c2))))) UNION ALL SELECT ALL v0.c1, rt0.c0, rt0.c1, vt1.c0, vt0.c0 FROM vt0, rt0, vt1 NATURAL JOIN v0 GROUP BY v0.c1, rt0.c0, rt0.c1, vt1.c0, vt0.c0 HAVING ((MIN(MIN(AVG(rt0.c2)))) ISNULL);
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE ((((v0.c1 IN ())) NOT BETWEEN (v0.c2) AND ((NOT (v0.c2))))) UNION ALL SELECT * FROM v0 WHERE ((NOT ((((v0.c1 IN ())) NOT BETWEEN (v0.c2) AND ((NOT (v0.c2))))))) UNION ALL SELECT * FROM v0 WHERE ((((((v0.c1 IN ())) NOT BETWEEN (v0.c2) AND ((NOT (v0.c2))))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT rt0.c0 FROM v0, vt1, rt0 NOT INDEXED;
SELECT DISTINCT rt0.c0 FROM v0, vt1, rt0 WHERE (0.7427095364198507) UNION SELECT DISTINCT rt0.c0 FROM v0, vt1, rt0 WHERE ((NOT (0.7427095364198507))) UNION SELECT DISTINCT rt0.c0 FROM v0, vt1, rt0 WHERE (((0.7427095364198507) ISNULL));
SELECT DISTINCT rt0.c0 FROM v0, vt1, rt0 NOT INDEXED;
SELECT ALL v0.c2, vt1.c0, rt0.c0, rt0.c2 FROM v0 INNER JOIN rt0 ON ((((v0.c0) NOT BETWEEN (vt1.c0) AND (v0.c2)))+(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) INNER JOIN vt0 ON (+ (((vt1.c0)GLOB(rt0.c0)))) LEFT OUTER JOIN vt1 ON (((rt0.c2)) NOT BETWEEN ((v0.c1 COLLATE BINARY)) AND ((CAST(vt0.c0 AS BLOB)))) GROUP BY v0.c2, vt1.c0, rt0.c0, rt0.c2;
SELECT ALL v0.c2, vt1.c0, rt0.c0, rt0.c2 FROM v0 INNER JOIN rt0 ON ((((v0.c0) NOT BETWEEN (vt1.c0) AND (v0.c2)))+(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) INNER JOIN vt0 ON (+ (((vt1.c0)GLOB(rt0.c0)))) LEFT OUTER JOIN vt1 ON (((rt0.c2)) NOT BETWEEN ((v0.c1 COLLATE BINARY)) AND ((CAST(vt0.c0 AS BLOB)))) WHERE ((((0.0434130973861222)) BETWEEN (((NOT (v0.c1)))) AND (('d0cpt}*_u')))) GROUP BY v0.c2, vt1.c0, rt0.c0, rt0.c2 UNION SELECT v0.c2, vt1.c0, rt0.c0, rt0.c2 FROM v0 NOT INDEXED INNER JOIN rt0 ON ((((v0.c0) NOT BETWEEN (vt1.c0) AND (v0.c2)))+(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) INNER JOIN vt0 ON (+ (((vt1.c0)GLOB(rt0.c0)))) LEFT OUTER JOIN vt1 ON (((rt0.c2)) NOT BETWEEN ((v0.c1 COLLATE BINARY)) AND ((CAST(vt0.c0 AS BLOB)))) WHERE ((NOT ((((0.0434130973861222)) BETWEEN (((NOT (v0.c1)))) AND (('d0cpt}*_u')))))) GROUP BY v0.c2, vt1.c0, rt0.c0, rt0.c2 UNION SELECT ALL v0.c2, vt1.c0, rt0.c0, rt0.c2 FROM v0 INNER JOIN rt0 ON ((((v0.c0) NOT BETWEEN (vt1.c0) AND (v0.c2)))+(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) INNER JOIN vt0 ON (+ (((vt1.c0)GLOB(rt0.c0)))) LEFT OUTER JOIN vt1 ON (((rt0.c2)) NOT BETWEEN ((v0.c1 COLLATE BINARY)) AND ((CAST(vt0.c0 AS BLOB)))) WHERE ((((((0.0434130973861222)) BETWEEN (((NOT (v0.c1)))) AND (('d0cpt}*_u')))) ISNULL)) GROUP BY v0.c2, vt1.c0, rt0.c0, rt0.c2;
SELECT ALL v0.c2, vt1.c0, rt0.c0, rt0.c2 FROM v0 INNER JOIN rt0 ON ((((v0.c0) NOT BETWEEN (vt1.c0) AND (v0.c2)))+(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) INNER JOIN vt0 ON (+ (((vt1.c0)GLOB(rt0.c0)))) LEFT OUTER JOIN vt1 ON (((rt0.c2)) NOT BETWEEN ((v0.c1 COLLATE BINARY)) AND ((CAST(vt0.c0 AS BLOB)))) GROUP BY v0.c2, vt1.c0, rt0.c0, rt0.c2;
SELECT ALL v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2;
SELECT ALL v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2 HAVING v0.c0 UNION ALL SELECT ALL v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2 HAVING ((v0.c0) ISNULL);
SELECT ALL v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2;
SELECT ALL v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2 HAVING v0.c0 UNION ALL SELECT ALL v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2 HAVING ((v0.c0) ISNULL);
SELECT ALL v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2;
SELECT ALL * FROM rt0, vt1;
SELECT * FROM rt0, vt1 WHERE (((((rt0.c0)!=(vt1.c0))) BETWEEN (CASE vt1.c0  WHEN rt0.c0 THEN vt1.c0 END) AND (vt1.c0 COLLATE BINARY))) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE ((NOT (((((rt0.c0)<>(vt1.c0))) BETWEEN (CASE vt1.c0  WHEN rt0.c0 THEN vt1.c0 END) AND (vt1.c0 COLLATE BINARY))))) UNION ALL SELECT * FROM rt0, vt1 WHERE (((((((rt0.c0)!=(vt1.c0))) BETWEEN (CASE vt1.c0  WHEN rt0.c0 THEN vt1.c0 END) AND (vt1.c0 COLLATE BINARY))) ISNULL));
SELECT ALL * FROM rt0, vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((((((vt1.c0)AND(x'')))OR(vt1.c0)))*(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((((((vt1.c0)AND(x'')))OR(vt1.c0)))*(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((((((vt1.c0)AND(x'')))OR(vt1.c0)))*(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN ('') AND (vt1.c0))) NOT NULL)) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0) NOT BETWEEN ('') AND (vt1.c0))) NOT NULL)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((((vt1.c0) NOT BETWEEN ('') AND (vt1.c0))) NOT NULL)) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c0, vt1.c0, v0.c2, rt0.c0, v0.c0, rt0.c2 FROM rt0, v0, vt1, vt0 GROUP BY vt0.c0, vt1.c0, v0.c2, rt0.c0, v0.c0, rt0.c2;
SELECT ALL vt0.c0, vt1.c0, v0.c2, rt0.c0, v0.c0, rt0.c2 FROM rt0, v0, vt1, vt0 GROUP BY vt0.c0, vt1.c0, v0.c2, rt0.c0, v0.c0, rt0.c2 HAVING rt0.c2 UNION ALL SELECT vt0.c0, vt1.c0, v0.c2, rt0.c0, v0.c0, rt0.c2 FROM rt0, v0, vt1, vt0 GROUP BY vt0.c0, vt1.c0, v0.c2, rt0.c0, v0.c0, rt0.c2 HAVING (NOT (rt0.c2)) UNION ALL SELECT vt0.c0, vt1.c0, v0.c2, rt0.c0, v0.c0, rt0.c2 FROM rt0, v0, vt1, vt0 GROUP BY vt0.c0, vt1.c0, v0.c2, rt0.c0, v0.c0, rt0.c2 HAVING ((rt0.c2) ISNULL);
SELECT vt0.c0, vt1.c0, v0.c2, rt0.c0, v0.c0, rt0.c2 FROM rt0, v0, vt1, vt0 GROUP BY vt0.c0, vt1.c0, v0.c2, rt0.c0, v0.c0, rt0.c2;
SELECT ALL vt0.c0, vt1.c0, v0.c2, rt0.c0, v0.c0, rt0.c2 FROM rt0, v0, vt1, vt0 GROUP BY vt0.c0, vt1.c0, v0.c2, rt0.c0, v0.c0, rt0.c2 HAVING rt0.c2 UNION ALL SELECT vt0.c0, vt1.c0, v0.c2, rt0.c0, v0.c0, rt0.c2 FROM rt0, v0, vt1, vt0 GROUP BY vt0.c0, vt1.c0, v0.c2, rt0.c0, v0.c0, rt0.c2 HAVING (NOT (rt0.c2)) UNION ALL SELECT vt0.c0, vt1.c0, v0.c2, rt0.c0, v0.c0, rt0.c2 FROM rt0, v0, vt1, vt0 GROUP BY vt0.c0, vt1.c0, v0.c2, rt0.c0, v0.c0, rt0.c2 HAVING ((rt0.c2) ISNULL);
SELECT vt0.c0, vt1.c0, v0.c2, rt0.c0, v0.c0, rt0.c2 FROM rt0, v0, vt1, vt0 GROUP BY vt0.c0, vt1.c0, v0.c2, rt0.c0, v0.c0, rt0.c2;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0)>(vt0.c0)) AS NUMERIC)) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (CAST(((vt0.c0)>(vt0.c0)) AS NUMERIC)))) UNION ALL SELECT * FROM vt0 WHERE (((CAST(((vt0.c0)>(vt0.c0)) AS NUMERIC)) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT rt0.c0, vt1.c0, v0.c1, vt0.c0 FROM rt0, vt1, v0, vt0;
SELECT DISTINCT rt0.c0, vt1.c0, v0.c1, vt0.c0 FROM rt0, vt1, v0, vt0 WHERE (CAST(((x'')GLOB(rt0.c1)) AS BLOB)) UNION SELECT DISTINCT rt0.c0, vt1.c0, v0.c1, vt0.c0 FROM rt0, vt1, v0, vt0 WHERE ((NOT (CAST(((x'')GLOB(rt0.c1)) AS BLOB)))) UNION SELECT DISTINCT rt0.c0, vt1.c0, v0.c1, vt0.c0 FROM rt0, vt1, v0, vt0 WHERE (((CAST(((x'')GLOB(rt0.c1)) AS BLOB)) ISNULL));
SELECT DISTINCT rt0.c0, vt1.c0, v0.c1, vt0.c0 FROM rt0, vt1, v0, vt0;
SELECT ALL v0.c2 FROM vt1, v0, vt0 GROUP BY v0.c2;
SELECT v0.c2 FROM vt1, v0, vt0 WHERE ((+ (v0.c0))) GROUP BY v0.c2 UNION SELECT v0.c2 FROM vt1, v0, vt0 WHERE ((NOT ((+ (v0.c0))))) GROUP BY v0.c2 UNION SELECT v0.c2 FROM vt1, v0, vt0 WHERE ((((+ (v0.c0))) ISNULL)) GROUP BY v0.c2;
SELECT ALL v0.c2 FROM vt1, v0, vt0 GROUP BY v0.c2;
SELECT ALL v0.c2, v0.c0, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY v0.c2, v0.c0, rt0.c0, rt0.c2;
SELECT v0.c2, v0.c0, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY v0.c2, v0.c0, rt0.c0, rt0.c2 HAVING CAST((((rt0.c1))<((COUNT(*)))) AS NUMERIC) UNION ALL SELECT ALL v0.c2, v0.c0, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY v0.c2, v0.c0, rt0.c0, rt0.c2 HAVING (NOT (CAST((((rt0.c1))<((COUNT(*)))) AS NUMERIC))) UNION ALL SELECT ALL v0.c2, v0.c0, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY v0.c2, v0.c0, rt0.c0, rt0.c2 HAVING ((CAST((((rt0.c1))<((COUNT(*)))) AS NUMERIC)) ISNULL);
SELECT ALL v0.c2, v0.c0, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY v0.c2, v0.c0, rt0.c0, rt0.c2;
SELECT v0.c2, v0.c0, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY v0.c2, v0.c0, rt0.c0, rt0.c2 HAVING CAST((((rt0.c1))<((COUNT(*)))) AS NUMERIC) UNION ALL SELECT ALL v0.c2, v0.c0, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY v0.c2, v0.c0, rt0.c0, rt0.c2 HAVING (NOT (CAST((((rt0.c1))<((COUNT(*)))) AS NUMERIC))) UNION ALL SELECT ALL v0.c2, v0.c0, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY v0.c2, v0.c0, rt0.c0, rt0.c2 HAVING ((CAST((((rt0.c1))<((COUNT(*)))) AS NUMERIC)) ISNULL);
SELECT ALL v0.c2, v0.c0, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY v0.c2, v0.c0, rt0.c0, rt0.c2;
SELECT * FROM v0 CROSS JOIN rt0 ON CASE WHEN (rt0.c0 IN ()) THEN rt0.c1 WHEN COALESCE(rt0.c2, 0.6216573956495521, v0.c0, rt0.c0) THEN (~ (v0.c2)) WHEN v0.c1 THEN ((((((((v0.c2)AND(v0.c1)))OR(rt0.c0)))AND('')))AND(v0.c0)) ELSE vt1.c0 COLLATE RTRIM END INNER JOIN vt1 ON CAST((NOT ('[]')) AS TEXT);
SELECT * FROM v0 CROSS JOIN rt0 ON CASE WHEN (rt0.c0 IN ()) THEN rt0.c1 WHEN COALESCE(rt0.c2, 0.6216573956495521, v0.c0, rt0.c0) THEN (~ (v0.c2)) WHEN v0.c1 THEN ((((((((v0.c2)AND(v0.c1)))OR(rt0.c0)))AND('')))AND(v0.c0)) ELSE vt1.c0 COLLATE RTRIM END INNER JOIN vt1 ON CAST((NOT ('[]')) AS TEXT) WHERE (rt0.c2) UNION ALL SELECT ALL * FROM v0 CROSS JOIN rt0 ON CASE WHEN (rt0.c0 IN ()) THEN rt0.c1 WHEN COALESCE(rt0.c2, 0.6216573956495521, v0.c0, rt0.c0) THEN (~ (v0.c2)) WHEN v0.c1 THEN ((((((((v0.c2)AND(v0.c1)))OR(rt0.c0)))AND('')))AND(v0.c0)) ELSE vt1.c0 COLLATE RTRIM END INNER JOIN vt1 ON CAST((NOT ('[]')) AS TEXT) WHERE ((NOT (rt0.c2))) UNION ALL SELECT * FROM v0 CROSS JOIN rt0 ON CASE WHEN (rt0.c0 IN ()) THEN rt0.c1 WHEN COALESCE(rt0.c2, 0.6216573956495521, v0.c0, rt0.c0) THEN (~ (v0.c2)) WHEN v0.c1 THEN ((((((((v0.c2)AND(v0.c1)))OR(rt0.c0)))AND('')))AND(v0.c0)) ELSE vt1.c0 COLLATE RTRIM END INNER JOIN vt1 ON CAST((NOT ('[]')) AS TEXT) WHERE (((rt0.c2) ISNULL));
SELECT * FROM v0 CROSS JOIN rt0 ON CASE WHEN (rt0.c0 IN ()) THEN rt0.c1 WHEN COALESCE(rt0.c2, 0.6216573956495521, v0.c0, rt0.c0) THEN (~ (v0.c2)) WHEN v0.c1 THEN ((((((((v0.c2)AND(v0.c1)))OR(rt0.c0)))AND('')))AND(v0.c0)) ELSE vt1.c0 COLLATE RTRIM END INNER JOIN vt1 ON CAST((NOT ('[]')) AS TEXT);
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM vt0 NOT INDEXED WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt1.c0, v0.c0, rt0.c2, rt0.c1, v0.c1 FROM vt0 LEFT OUTER JOIN v0 ON CASE ((v0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c1))  WHEN (v0.c0 IN ()) THEN ((x'') IS FALSE) WHEN ((((v0.c1)AND(vt1.c0)))AND(vt1.c0)) THEN v0.c0 WHEN ((vt1.c0) NOTNULL) THEN ((rt0.c1)/(NULL)) END LEFT OUTER JOIN rt0 ON (CASE rt0.c1  WHEN v0.c1 THEN v0.c2 ELSE NULL END IN ()) FULL OUTER JOIN vt1 ON ((((v0.c2) IS FALSE))<=(rt0.c0 COLLATE NOCASE)) GROUP BY vt1.c0, v0.c0, rt0.c2, rt0.c1, v0.c1;
SELECT ALL v0.c0, v0.c1, rt0.c1, vt1.c0, v0.c2, rt0.c0 FROM v0 FULL OUTER JOIN rt0 ON (((('0.9354448009133918')OR(vt1.c0)))OR(((rt0.c0)<=(v0.c2)))) RIGHT OUTER JOIN vt1 ON CAST(((vt1.c0)||(vt1.c0)) AS TEXT) GROUP BY v0.c0, v0.c1, rt0.c1, vt1.c0, v0.c2, rt0.c0;
SELECT * FROM vt0, vt1, v0;
SELECT * FROM vt0, vt1, v0 WHERE ((((x'd342' IN ())) IS FALSE)) UNION ALL SELECT ALL * FROM vt0, vt1, v0 WHERE ((NOT ((((x'd342' IN ())) IS FALSE)))) UNION ALL SELECT * FROM vt0, vt1, v0 WHERE ((((((x'd342' IN ())) IS FALSE)) ISNULL));
SELECT * FROM vt0, vt1, v0;
SELECT DISTINCT v0.c2, vt0.c0, v0.c0, v0.c1 FROM vt0 FULL OUTER JOIN v0 ON (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))!=((x'')));
SELECT DISTINCT v0.c2, vt0.c0, v0.c0, v0.c1 FROM vt0 FULL OUTER JOIN v0 ON (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))<>((x''))) WHERE ((((+ (vt0.c0))) IS TRUE)) UNION SELECT DISTINCT v0.c2, vt0.c0, v0.c0, v0.c1 FROM vt0 FULL OUTER JOIN v0 ON (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))!=((x''))) WHERE ((NOT ((((+ (vt0.c0))) IS TRUE)))) UNION SELECT DISTINCT v0.c2, vt0.c0, v0.c0, v0.c1 FROM vt0 FULL OUTER JOIN v0 ON (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))!=((x''))) WHERE ((((((+ (vt0.c0))) IS TRUE)) ISNULL));
SELECT DISTINCT v0.c2, vt0.c0, v0.c0, v0.c1 FROM vt0 FULL OUTER JOIN v0 ON (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))!=((x'')));
SELECT rt0.c0, vt1.c0, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0, rt0.c2;
SELECT ALL rt0.c0, vt1.c0, rt0.c2 FROM rt0, vt1 WHERE ((((vt1.c0 IN ())) IS TRUE)) GROUP BY rt0.c0, vt1.c0, rt0.c2 UNION SELECT ALL rt0.c0, vt1.c0, rt0.c2 FROM rt0, vt1 WHERE ((NOT ((((vt1.c0 IN ())) IS TRUE)))) GROUP BY rt0.c0, vt1.c0, rt0.c2 UNION SELECT rt0.c0, vt1.c0, rt0.c2 FROM rt0, vt1 WHERE ((((((vt1.c0 IN ())) IS TRUE)) ISNULL)) GROUP BY rt0.c0, vt1.c0, rt0.c2;
SELECT rt0.c0, vt1.c0, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0, rt0.c2;
SELECT rt0.c1, rt0.c2, rt0.c0, vt1.c0, v0.c0, v0.c2, vt0.c0, v0.c1 FROM v0, vt1, rt0, vt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, vt1.c0, v0.c0, v0.c2, vt0.c0, v0.c1;
SELECT rt0.c1, rt0.c2, rt0.c0, vt1.c0, v0.c0, v0.c2, vt0.c0, v0.c1 FROM v0, vt1, rt0, vt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, vt1.c0, v0.c0, v0.c2, vt0.c0, v0.c1 HAVING SUM(GROUP_CONCAT(GROUP_CONCAT(vt1.c0))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0, vt1.c0, v0.c0, v0.c2, vt0.c0, v0.c1 FROM v0, vt1, rt0, vt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, vt1.c0, v0.c0, v0.c2, vt0.c0, v0.c1 HAVING (NOT (SUM(GROUP_CONCAT(GROUP_CONCAT(vt1.c0))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0, vt1.c0, v0.c0, v0.c2, vt0.c0, v0.c1 FROM v0, vt1, rt0, vt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, vt1.c0, v0.c0, v0.c2, vt0.c0, v0.c1 HAVING ((SUM(GROUP_CONCAT(GROUP_CONCAT(vt1.c0)))) ISNULL);
SELECT * FROM rt0, v0, vt1;
SELECT * FROM rt0, v0, vt1 WHERE (vt1.c0) UNION ALL SELECT * FROM rt0, v0, vt1 WHERE ((NOT (vt1.c0))) UNION ALL SELECT * FROM rt0, v0, vt1 WHERE (((vt1.c0) ISNULL));
SELECT * FROM rt0, v0, vt1;
SELECT DISTINCT v0.c0, rt0.c2, vt0.c0, v0.c1 FROM rt0, v0, vt0;
SELECT DISTINCT v0.c0, rt0.c2, vt0.c0, v0.c1 FROM rt0, v0, vt0 WHERE ('-935790884') UNION SELECT DISTINCT v0.c0, rt0.c2, vt0.c0, v0.c1 FROM rt0, v0, vt0 WHERE ((NOT ('-935790884'))) UNION SELECT DISTINCT v0.c0, rt0.c2, vt0.c0, v0.c1 FROM rt0, v0, vt0 WHERE ((('-935790884') ISNULL));
SELECT DISTINCT v0.c0, rt0.c2, vt0.c0, v0.c1 FROM rt0, v0, vt0;
SELECT ALL v0.c0, v0.c1, vt1.c0, v0.c2, rt0.c0 FROM rt0, v0, vt1 GROUP BY v0.c0, v0.c1, vt1.c0, v0.c2, rt0.c0;
SELECT ALL v0.c0, v0.c1, vt1.c0, v0.c2, rt0.c0 FROM rt0, v0, vt1 WHERE (((rt0.c0)IS(((v0.c0)GLOB(rt0.c2))))) GROUP BY v0.c0, v0.c1, vt1.c0, v0.c2, rt0.c0 UNION SELECT v0.c0, v0.c1, vt1.c0, v0.c2, rt0.c0 FROM rt0, v0, vt1 WHERE ((NOT (((rt0.c0)IS(((v0.c0)GLOB(rt0.c2))))))) GROUP BY v0.c0, v0.c1, vt1.c0, v0.c2, rt0.c0 UNION SELECT ALL v0.c0, v0.c1, vt1.c0, v0.c2, rt0.c0 FROM rt0, v0, vt1 WHERE (((((rt0.c0)IS(((v0.c0)GLOB(rt0.c2))))) ISNULL)) GROUP BY v0.c0, v0.c1, vt1.c0, v0.c2, rt0.c0;
SELECT ALL v0.c0, v0.c1, vt1.c0, v0.c2, rt0.c0 FROM rt0, v0, vt1 GROUP BY v0.c0, v0.c1, vt1.c0, v0.c2, rt0.c0;
SELECT ALL v0.c2, vt1.c0, v0.c1 FROM vt1, v0, rt0, vt0 GROUP BY v0.c2, vt1.c0, v0.c1;
SELECT v0.c2, vt1.c0, v0.c1 FROM vt1, v0, rt0, vt0 GROUP BY v0.c2, vt1.c0, v0.c1 HAVING MAX(COUNT(COUNT(vt1.c0))) UNION ALL SELECT v0.c2, vt1.c0, v0.c1 FROM vt1, v0, rt0, vt0 GROUP BY v0.c2, vt1.c0, v0.c1 HAVING (NOT (MAX(COUNT(COUNT(vt1.c0))))) UNION ALL SELECT v0.c2, vt1.c0, v0.c1 FROM vt1, v0, rt0, vt0 GROUP BY v0.c2, vt1.c0, v0.c1 HAVING ((MAX(COUNT(COUNT(vt1.c0)))) ISNULL);
SELECT * FROM v0, vt0, rt0;
SELECT * FROM v0, vt0, rt0 WHERE (((x'9466')OR(vt0.c0))) UNION ALL SELECT * FROM v0, vt0, rt0 WHERE ((NOT (((x'9466')OR(vt0.c0))))) UNION ALL SELECT * FROM v0, vt0, rt0 WHERE (((((x'9466')OR(vt0.c0))) ISNULL));
SELECT * FROM v0, vt0, rt0;
SELECT DISTINCT * FROM vt1, v0 CROSS JOIN vt0 ON ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))) IS FALSE) CROSS JOIN rt0 ON x'1ddc3154';
SELECT DISTINCT * FROM vt1, v0 CROSS JOIN vt0 ON ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))) IS FALSE) CROSS JOIN rt0 ON x'1ddc3154' WHERE ((((((rt0.c0)OR(vt0.c0)))AND(vt1.c0)) IN ())) UNION SELECT DISTINCT * FROM vt1, v0 CROSS JOIN vt0 ON ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))) IS FALSE) CROSS JOIN rt0 ON x'1ddc3154' WHERE ((NOT ((((((rt0.c0)OR(vt0.c0)))AND(vt1.c0)) IN ())))) UNION SELECT DISTINCT * FROM vt1, v0 CROSS JOIN vt0 ON ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))) IS FALSE) CROSS JOIN rt0 ON x'1ddc3154' WHERE ((((((((rt0.c0)OR(vt0.c0)))AND(vt1.c0)) IN ())) ISNULL));
SELECT DISTINCT * FROM vt1, v0 CROSS JOIN vt0 ON ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))) IS FALSE) CROSS JOIN rt0 ON x'1ddc3154';
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((('-674946052') NOT NULL)) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((('-674946052') NOT NULL)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((('-674946052') NOT NULL)) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT v0.c0, v0.c1, v0.c2 FROM v0 GROUP BY v0.c0, v0.c1, v0.c2;
SELECT v0.c0, v0.c1, v0.c2 FROM v0 GROUP BY v0.c0, v0.c1, v0.c2 HAVING (COUNT(*) IN ()) UNION ALL SELECT v0.c0, v0.c1, v0.c2 FROM v0 GROUP BY v0.c0, v0.c1, v0.c2 HAVING (NOT ((COUNT(*) IN ()))) UNION ALL SELECT ALL v0.c0, v0.c1, v0.c2 FROM v0 GROUP BY v0.c0, v0.c1, v0.c2 HAVING (((COUNT(*) IN ())) ISNULL);
SELECT v0.c0, v0.c1, v0.c2 FROM v0 GROUP BY v0.c0, v0.c1, v0.c2;
SELECT v0.c0, v0.c1, v0.c2 FROM v0 GROUP BY v0.c0, v0.c1, v0.c2 HAVING (COUNT(*) IN ()) UNION ALL SELECT v0.c0, v0.c1, v0.c2 FROM v0 GROUP BY v0.c0, v0.c1, v0.c2 HAVING (NOT ((COUNT(*) IN ()))) UNION ALL SELECT ALL v0.c0, v0.c1, v0.c2 FROM v0 GROUP BY v0.c0, v0.c1, v0.c2 HAVING (((COUNT(*) IN ())) ISNULL);
SELECT v0.c0, v0.c1, v0.c2 FROM v0 GROUP BY v0.c0, v0.c1, v0.c2;
SELECT v0.c1, rt0.c0, rt0.c1, rt0.c2, vt0.c0, v0.c2 FROM vt1, v0 LEFT OUTER JOIN vt0 ON ((NULL) ISNULL) INNER JOIN rt0 ON (((v0.c2) NOT BETWEEN (v0.c1) AND (rt0.c1)) IN ((vt0.c0 IN ())));
SELECT v0.c1, rt0.c0, rt0.c1, rt0.c2, vt0.c0, v0.c2 FROM vt1, v0 LEFT OUTER JOIN vt0 ON ((NULL) ISNULL) INNER JOIN rt0 ON (((v0.c2) NOT BETWEEN (v0.c1) AND (rt0.c1)) IN ((vt0.c0 IN ()))) WHERE (vt0.c0) UNION ALL SELECT ALL v0.c1, rt0.c0, rt0.c1, rt0.c2, vt0.c0, v0.c2 FROM vt1, v0 LEFT OUTER JOIN vt0 ON ((NULL) ISNULL) INNER JOIN rt0 ON (((v0.c2) NOT BETWEEN (v0.c1) AND (rt0.c1)) IN ((vt0.c0 IN ()))) WHERE ((NOT (vt0.c0))) UNION ALL SELECT v0.c1, rt0.c0, rt0.c1, rt0.c2, vt0.c0, v0.c2 FROM vt1, v0 LEFT OUTER JOIN vt0 ON ((NULL) ISNULL) INNER JOIN rt0 ON (((v0.c2) NOT BETWEEN (v0.c1) AND (rt0.c1)) IN ((vt0.c0 IN ()))) WHERE (((vt0.c0) ISNULL));
SELECT v0.c1, rt0.c0, rt0.c1, rt0.c2, vt0.c0, v0.c2 FROM vt1, v0 LEFT OUTER JOIN vt0 ON ((NULL) ISNULL) INNER JOIN rt0 ON (((v0.c2) NOT BETWEEN (v0.c1) AND (rt0.c1)) IN ((vt0.c0 IN ())));
SELECT DISTINCT * FROM rt0, vt1, vt0;
SELECT DISTINCT * FROM rt0, vt1, vt0 WHERE (rt0.c0) UNION SELECT DISTINCT * FROM rt0, vt1, vt0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT * FROM rt0, vt1, vt0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT * FROM rt0, vt1, vt0;
SELECT v0.c2 FROM vt1, vt0, v0, rt0 GROUP BY v0.c2;
SELECT v0.c2 FROM vt1, vt0, v0, rt0 WHERE (((((rt0.c2)&(v0.c1)))GLOB(json_object('嵚Aj寔^X', v0.c2, rt0.c0, v0.c0, v0.c1, v0.c2)))) GROUP BY v0.c2 UNION SELECT ALL v0.c2 FROM vt1, vt0, v0, rt0 WHERE ((NOT (((((rt0.c2)&(v0.c1)))GLOB(json_object('嵚Aj寔^X', v0.c2, rt0.c0, v0.c0, v0.c1, v0.c2)))))) GROUP BY v0.c2 UNION SELECT ALL v0.c2 FROM vt1, vt0, v0, rt0 WHERE (((((((rt0.c2)&(v0.c1)))GLOB(json_object('嵚Aj寔^X', v0.c2, rt0.c0, v0.c0, v0.c1, v0.c2)))) ISNULL)) GROUP BY v0.c2;
SELECT v0.c2 FROM vt1, vt0, v0, rt0 GROUP BY v0.c2;
SELECT rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0;
SELECT ALL rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0 HAVING MAX(COUNT(*)) UNION ALL SELECT ALL rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0 HAVING (NOT (MAX(COUNT(*)))) UNION ALL SELECT ALL rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0 HAVING ((MAX(COUNT(*))) ISNULL);
SELECT * FROM vt1 LEFT OUTER JOIN rt0 ON ((ABS(v0.c1)) ISNULL) CROSS JOIN v0 ON ((v0.c1) BETWEEN ((~ (v0.c1))) AND (((v0.c1)GLOB(rt0.c0))));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0, v0, vt1;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0, v0, vt1 WHERE (((((((v0.c0)AND(vt1.c0)))AND(rt0.c0))) NOT BETWEEN (((rt0.c2)<=(rt0.c2))) AND (((vt1.c0)>(v0.c2))))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0, v0, vt1 WHERE ((NOT (((((((v0.c0)AND(vt1.c0)))AND(rt0.c0))) NOT BETWEEN (((rt0.c2)<=(rt0.c2))) AND (((vt1.c0)>(v0.c2))))))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0, v0, vt1 WHERE (((((((((v0.c0)AND(vt1.c0)))AND(rt0.c0))) NOT BETWEEN (((rt0.c2)<=(rt0.c2))) AND (((vt1.c0)>(v0.c2))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0, v0, vt1;
SELECT ALL vt0.c0, v0.c2, v0.c1 FROM v0, rt0, vt0 INNER JOIN vt1 ON CAST((- (rt0.c0)) AS NUMERIC) GROUP BY vt0.c0, v0.c2, v0.c1;
SELECT vt0.c0, v0.c2, v0.c1 FROM v0, rt0, vt0 INNER JOIN vt1 ON CAST((- (rt0.c0)) AS NUMERIC) WHERE ((+ (((((rt0.c0)OR(rt0.c0)))AND(NULL))))) GROUP BY vt0.c0, v0.c2, v0.c1 UNION SELECT ALL vt0.c0, v0.c2, v0.c1 FROM v0, rt0, vt0 INNER JOIN vt1 ON CAST((- (rt0.c0)) AS NUMERIC) WHERE ((NOT ((+ (((((rt0.c0)OR(rt0.c0)))AND(NULL))))))) GROUP BY vt0.c0, v0.c2, v0.c1 UNION SELECT ALL vt0.c0, v0.c2, v0.c1 FROM v0, rt0, vt0 INNER JOIN vt1 ON CAST((- (rt0.c0)) AS NUMERIC) WHERE ((((+ (((((rt0.c0)OR(rt0.c0)))AND(NULL))))) ISNULL)) GROUP BY vt0.c0, v0.c2, v0.c1;
SELECT ALL vt0.c0, v0.c2, v0.c1 FROM v0, rt0, vt0 INNER JOIN vt1 ON CAST((- (rt0.c0)) AS NUMERIC) GROUP BY vt0.c0, v0.c2, v0.c1;
SELECT vt1.c0 FROM rt0, vt1, vt0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM rt0, vt1, vt0 GROUP BY vt1.c0 HAVING CASE WHEN COUNT(GROUP_CONCAT(vt0.c0)) THEN (rt0.c0 IN ()) WHEN COUNT(*) THEN TOTAL(COUNT(*)) WHEN SUM(COUNT(*)) THEN TOTAL(GROUP_CONCAT(MAX(rt0.c1))) END UNION ALL SELECT vt1.c0 FROM rt0, vt1, vt0 GROUP BY vt1.c0 HAVING (NOT (CASE WHEN COUNT(GROUP_CONCAT(vt0.c0)) THEN (rt0.c0 IN ()) WHEN COUNT(*) THEN TOTAL(COUNT(*)) WHEN SUM(COUNT(*)) THEN TOTAL(GROUP_CONCAT(MAX(rt0.c1))) END)) UNION ALL SELECT ALL vt1.c0 FROM rt0, vt1, vt0 GROUP BY vt1.c0 HAVING ((CASE WHEN COUNT(GROUP_CONCAT(vt0.c0)) THEN (rt0.c0 IN ()) WHEN COUNT(*) THEN TOTAL(COUNT(*)) WHEN SUM(COUNT(*)) THEN TOTAL(GROUP_CONCAT(MAX(rt0.c1))) END) ISNULL);
SELECT ALL v0.c0, v0.c1, vt0.c0, rt0.c2, rt0.c1, rt0.c0, v0.c2 FROM v0, rt0 RIGHT OUTER JOIN vt0 ON ((((CASE WHEN v0.c1 THEN v0.c1 END)OR(CAST(v0.c2 AS REAL))))AND(((((v0.c2)AND(rt0.c0)))AND(rt0.c2))));
SELECT v0.c0, v0.c1, vt0.c0, rt0.c2, rt0.c1, rt0.c0, v0.c2 FROM v0, rt0 RIGHT OUTER JOIN vt0 ON ((((CASE WHEN v0.c1 THEN v0.c1 END)OR(CAST(v0.c2 AS REAL))))AND(((((v0.c2)AND(rt0.c0)))AND(rt0.c2)))) WHERE (((((((NULL)AND(vt0.c0)))AND(0.515133974688755)))&(CAST(v0.c0 AS BLOB)))) UNION ALL SELECT ALL v0.c0, v0.c1, vt0.c0, rt0.c2, rt0.c1, rt0.c0, v0.c2 FROM v0, rt0 RIGHT OUTER JOIN vt0 ON ((((CASE WHEN v0.c1 THEN v0.c1 END)OR(CAST(v0.c2 AS REAL))))AND(((((v0.c2)AND(rt0.c0)))AND(rt0.c2)))) WHERE ((NOT (((((((NULL)AND(vt0.c0)))AND(0.515133974688755)))&(CAST(v0.c0 AS BLOB)))))) UNION ALL SELECT ALL v0.c0, v0.c1, vt0.c0, rt0.c2, rt0.c1, rt0.c0, v0.c2 FROM v0, rt0 RIGHT OUTER JOIN vt0 ON ((((CASE WHEN v0.c1 THEN v0.c1 END)OR(CAST(v0.c2 AS REAL))))AND(((((v0.c2)AND(rt0.c0)))AND(rt0.c2)))) WHERE (((((((((NULL)AND(vt0.c0)))AND(0.515133974688755)))&(CAST(v0.c0 AS BLOB)))) ISNULL));
SELECT ALL v0.c0, v0.c1, vt0.c0, rt0.c2, rt0.c1, rt0.c0, v0.c2 FROM v0, rt0 RIGHT OUTER JOIN vt0 ON ((((CASE WHEN v0.c1 THEN v0.c1 END)OR(CAST(v0.c2 AS REAL))))AND(((((v0.c2)AND(rt0.c0)))AND(rt0.c2))));
SELECT DISTINCT * FROM vt1, vt0, v0, rt0;
SELECT DISTINCT * FROM vt1, vt0, v0, rt0 WHERE (((((UNLIKELY(DISTINCT vt1.c0))AND(((((vt1.c0)AND(v0.c1)))AND(v0.c1)))))AND(((rt0.c2) NOT BETWEEN (v0.c2) AND (rt0.c2))))) UNION SELECT DISTINCT * FROM vt1, vt0, v0, rt0 WHERE ((NOT (((((UNLIKELY(DISTINCT vt1.c0))AND(((((vt1.c0)AND(v0.c1)))AND(v0.c1)))))AND(((rt0.c2) NOT BETWEEN (v0.c2) AND (rt0.c2))))))) UNION SELECT DISTINCT * FROM vt1, vt0, v0, rt0 WHERE (((((((UNLIKELY(DISTINCT vt1.c0))AND(((((vt1.c0)AND(v0.c1)))AND(v0.c1)))))AND(((rt0.c2) NOT BETWEEN (v0.c2) AND (rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0, v0, rt0;
SELECT v0.c1, rt0.c2, vt1.c0 FROM rt0, vt1, v0 GROUP BY v0.c1, rt0.c2, vt1.c0;
SELECT v0.c1, rt0.c2, vt1.c0 FROM rt0, vt1, v0 WHERE ((((v0.c1) BETWEEN (rt0.c2) AND (vt1.c0)) IN ())) GROUP BY v0.c1, rt0.c2, vt1.c0 UNION SELECT v0.c1, rt0.c2, vt1.c0 FROM rt0, vt1, v0 WHERE ((NOT ((((v0.c1) BETWEEN (rt0.c2) AND (vt1.c0)) IN ())))) GROUP BY v0.c1, rt0.c2, vt1.c0 UNION SELECT v0.c1, rt0.c2, vt1.c0 FROM rt0, vt1, v0 WHERE ((((((v0.c1) BETWEEN (rt0.c2) AND (vt1.c0)) IN ())) ISNULL)) GROUP BY v0.c1, rt0.c2, vt1.c0;
SELECT v0.c1, rt0.c2, vt1.c0 FROM rt0, vt1, v0 GROUP BY v0.c1, rt0.c2, vt1.c0;
SELECT v0.c2, v0.c1 FROM rt0 CROSS JOIN vt0 ON ((((v0.c0) NOT BETWEEN (v0.c0) AND (rt0.c2))) IS TRUE) FULL OUTER JOIN v0 ON ((0.8898139993440334)+(json_quote(v0.c1))) GROUP BY v0.c2, v0.c1;
SELECT * FROM v0;
SELECT * FROM v0 WHERE (((v0.c2) IS TRUE)) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (((v0.c2) IS TRUE)))) UNION ALL SELECT ALL * FROM v0 WHERE (((((v0.c2) IS TRUE)) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT rt0.c1, v0.c1, v0.c0, v0.c2, rt0.c0, rt0.c2 FROM v0, rt0;
SELECT DISTINCT rt0.c1, v0.c1, v0.c0, v0.c2, rt0.c0, rt0.c2 FROM v0, rt0 WHERE (CAST((rt0.c2 IN ()) AS TEXT)) UNION SELECT DISTINCT rt0.c1, v0.c1, v0.c0, v0.c2, rt0.c0, rt0.c2 FROM v0, rt0 WHERE ((NOT (CAST((rt0.c2 IN ()) AS TEXT)))) UNION SELECT DISTINCT rt0.c1, v0.c1, v0.c0, v0.c2, rt0.c0, rt0.c2 FROM v0, rt0 WHERE (((CAST((rt0.c2 IN ()) AS TEXT)) ISNULL));
SELECT DISTINCT rt0.c1, v0.c1, v0.c0, v0.c2, rt0.c0, rt0.c2 FROM v0, rt0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((((((((CAST(vt0.c0 AS BLOB))AND((NOT (vt0.c0)))))OR(CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END)))OR(vt1.c0 COLLATE BINARY)))OR(vt1.c0 COLLATE BINARY))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT (((((((((CAST(vt0.c0 AS BLOB))AND((NOT (vt0.c0)))))OR(CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END)))OR(vt1.c0 COLLATE BINARY)))OR(vt1.c0 COLLATE BINARY))))) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((((((((((CAST(vt0.c0 AS BLOB))AND((NOT (vt0.c0)))))OR(CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END)))OR(vt1.c0 COLLATE BINARY)))OR(vt1.c0 COLLATE BINARY))) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT ALL v0.c1, v0.c0, vt0.c0, v0.c2 FROM v0, vt1 INNER JOIN vt0 ON -1291504630 GROUP BY v0.c1, v0.c0, vt0.c0, v0.c2;
SELECT ALL v0.c1, v0.c0, vt0.c0, v0.c2 FROM v0, vt1 INNER JOIN vt0 ON -1291504630 GROUP BY v0.c1, v0.c0, vt0.c0, v0.c2 HAVING AVG(COUNT(GROUP_CONCAT(MAX(v0.c2)))) UNION ALL SELECT ALL v0.c1, v0.c0, vt0.c0, v0.c2 FROM v0, vt1 INNER JOIN vt0 ON -1291504630 GROUP BY v0.c1, v0.c0, vt0.c0, v0.c2 HAVING (NOT (AVG(COUNT(GROUP_CONCAT(MAX(v0.c2)))))) UNION ALL SELECT ALL v0.c1, v0.c0, vt0.c0, v0.c2 FROM v0, vt1 INNER JOIN vt0 ON -1291504630 GROUP BY v0.c1, v0.c0, vt0.c0, v0.c2 HAVING ((AVG(COUNT(GROUP_CONCAT(MAX(v0.c2))))) ISNULL);
SELECT * FROM vt1 CROSS JOIN v0 ON (((((v0.c0) BETWEEN (vt1.c0) AND (v0.c0)), ((rt0.c0)/(v0.c0)), (((v0.c2)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c1)))))<>((((((v0.c2)OR(rt0.c1)))AND(rt0.c2)), v0.c1, rt0.c1 COLLATE BINARY))) CROSS JOIN rt0 ON -1003398427 FULL OUTER JOIN vt0 ON ((v0.c1)LIKE(v0.c2)) COLLATE BINARY;
SELECT DISTINCT * FROM vt0, rt0, v0, vt1;
SELECT DISTINCT * FROM vt0, rt0, v0, vt1 WHERE (((((((((vt0.c0)OR(v0.c1)))OR(vt1.c0)))AND((vt1.c0 IN (vt1.c0)))))AND(((((((((((((rt0.c0)OR(v0.c0)))OR(0.6619063327416557)))OR(v0.c1)))AND(x'')))OR(v0.c2)))OR(v0.c1))))) UNION SELECT DISTINCT * FROM vt0, rt0, v0 NOT INDEXED, vt1 WHERE ((NOT (((((((((vt0.c0)OR(v0.c1)))OR(vt1.c0)))AND((vt1.c0 IN (vt1.c0)))))AND(((((((((((((rt0.c0)OR(v0.c0)))OR(0.6619063327416557)))OR(v0.c1)))AND(x'')))OR(v0.c2)))OR(v0.c1))))))) UNION SELECT DISTINCT * FROM vt0, rt0, v0, vt1 WHERE (((((((((((vt0.c0)OR(v0.c1)))OR(vt1.c0)))AND((vt1.c0 IN (vt1.c0)))))AND(((((((((((((rt0.c0)OR(v0.c0)))OR(0.6619063327416557)))OR(v0.c1)))AND(x'')))OR(v0.c2)))OR(v0.c1))))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0, v0, vt1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (UPPER(DISTINCT ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (UPPER(DISTINCT ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((UPPER(DISTINCT ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c1, vt1.c0, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c1, vt1.c0, rt0.c0;
SELECT ALL rt0.c1, vt1.c0, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c1, vt1.c0, rt0.c0 HAVING CASE MAX(AVG(NULL))  WHEN AVG(GROUP_CONCAT(MAX(MAX(rt0.c1)))) THEN GROUP_CONCAT(rt0.c2) END UNION ALL SELECT rt0.c1, vt1.c0, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c1, vt1.c0, rt0.c0 HAVING (NOT (CASE MAX(AVG(NULL))  WHEN AVG(GROUP_CONCAT(MAX(MAX(rt0.c1)))) THEN GROUP_CONCAT(rt0.c2) END)) UNION ALL SELECT rt0.c1, vt1.c0, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c1, vt1.c0, rt0.c0 HAVING ((CASE MAX(AVG(NULL))  WHEN AVG(GROUP_CONCAT(MAX(MAX(rt0.c1)))) THEN GROUP_CONCAT(rt0.c2) END) ISNULL);
SELECT ALL SUM(((((((((((rt0.c1)GLOB(vt1.c0)))AND(CASE WHEN v0.c0 THEN v0.c2 END)))AND(vt1.c0 COLLATE BINARY)))OR(CASE vt1.c0  WHEN v0.c1 THEN v0.c0 WHEN '1090569874' THEN v0.c1 WHEN v0.c1 THEN rt0.c2 END)))AND(x''))) FROM v0, rt0, vt1 ORDER BY ((CAST(v0.c1 AS NUMERIC))AND((NOT (v0.c1)))) ASC  NULLS FIRST;
SELECT v0.c2 FROM vt1 INNER JOIN vt0 ON ((((v0.c0)IS(v0.c0))) NOT BETWEEN (CAST(v0.c0 AS NUMERIC)) AND ((v0.c0 IN ()))) RIGHT OUTER JOIN v0 ON ((vt1.c0 COLLATE BINARY) IS FALSE);
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((vt1.c0 IN (((-1303602753) IS FALSE), vt1.c0))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((vt1.c0 IN (((-1303602753) IS FALSE), vt1.c0))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((vt1.c0 IN (((-1303602753) IS FALSE), vt1.c0))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT rt0.c2, v0.c0, v0.c2, vt0.c0, rt0.c1, v0.c1, vt1.c0 FROM vt1, v0, vt0, rt0 GROUP BY rt0.c2, v0.c0, v0.c2, vt0.c0, rt0.c1, v0.c1, vt1.c0;
SELECT rt0.c2, v0.c0, v0.c2, vt0.c0, rt0.c1, v0.c1, vt1.c0 FROM vt1, v0, vt0, rt0 WHERE (v0.c1) GROUP BY rt0.c2, v0.c0, v0.c2, vt0.c0, rt0.c1, v0.c1, vt1.c0 UNION SELECT ALL rt0.c2, v0.c0, v0.c2, vt0.c0, rt0.c1, v0.c1, vt1.c0 FROM vt1, v0, vt0, rt0 WHERE ((NOT (v0.c1))) GROUP BY rt0.c2, v0.c0, v0.c2, vt0.c0, rt0.c1, v0.c1, vt1.c0 UNION SELECT ALL rt0.c2, v0.c0, v0.c2, vt0.c0, rt0.c1, v0.c1, vt1.c0 FROM vt1, v0, vt0, rt0 WHERE (((v0.c1) ISNULL)) GROUP BY rt0.c2, v0.c0, v0.c2, vt0.c0, rt0.c1, v0.c1, vt1.c0;
SELECT rt0.c2, v0.c0, v0.c2, vt0.c0, rt0.c1, v0.c1, vt1.c0 FROM vt1, v0, vt0, rt0 GROUP BY rt0.c2, v0.c0, v0.c2, vt0.c0, rt0.c1, v0.c1, vt1.c0;
SELECT v0.c2 FROM vt0, vt1, v0, rt0 GROUP BY v0.c2;
SELECT v0.c2 FROM vt0, vt1, v0, rt0 GROUP BY v0.c2 HAVING SUM(AVG(rt0.c0)) UNION ALL SELECT ALL v0.c2 FROM vt0, vt1, v0, rt0 GROUP BY v0.c2 HAVING (NOT (SUM(AVG(rt0.c0)))) UNION ALL SELECT ALL v0.c2 FROM vt0, vt1, v0, rt0 GROUP BY v0.c2 HAVING ((SUM(AVG(rt0.c0))) ISNULL);
SELECT vt1.c0, v0.c1, vt0.c0, v0.c0, v0.c2 FROM vt0, vt1 NOT INDEXED, v0;
SELECT ALL vt1.c0, v0.c1, vt0.c0, v0.c0, v0.c2 FROM vt0, vt1, v0 WHERE (CAST(v0.c0 AS TEXT)) UNION ALL SELECT vt1.c0, v0.c1, vt0.c0, v0.c0, v0.c2 FROM vt0, vt1, v0 WHERE ((NOT (CAST(v0.c0 AS TEXT)))) UNION ALL SELECT ALL vt1.c0, v0.c1, vt0.c0, v0.c0, v0.c2 FROM vt0, vt1, v0 WHERE (((CAST(v0.c0 AS TEXT)) ISNULL));
SELECT vt1.c0, v0.c1, vt0.c0, v0.c0, v0.c2 FROM vt0, vt1 NOT INDEXED, v0;
SELECT DISTINCT vt0.c0, v0.c0, vt1.c0 FROM vt0, v0, vt1;
SELECT DISTINCT vt0.c0, v0.c0, vt1.c0 FROM vt0, v0, vt1 WHERE (((((vt1.c0)<=(v0.c0))) IS TRUE)) UNION SELECT DISTINCT vt0.c0, v0.c0, vt1.c0 FROM vt0, v0, vt1 WHERE ((NOT (((((vt1.c0)<=(v0.c0))) IS TRUE)))) UNION SELECT DISTINCT vt0.c0, v0.c0, vt1.c0 FROM vt0, v0, vt1 WHERE (((((((vt1.c0)<=(v0.c0))) IS TRUE)) ISNULL));
SELECT DISTINCT vt0.c0, v0.c0, vt1.c0 FROM vt0, v0, vt1;
SELECT ALL rt0.c2, v0.c1 FROM vt1, v0, rt0 GROUP BY rt0.c2, v0.c1;
SELECT ALL rt0.c2, v0.c1 FROM vt1, v0, rt0 WHERE ((((0.7754168260375943, v0.c2, v0.c2)) BETWEEN ((NULL, ((rt0.c0) NOT BETWEEN (rt0.c1) AND (v0.c2)), NULL COLLATE BINARY)) AND ((((v0.c0) NOT BETWEEN (NULL) AND ('-228514884')), ((rt0.c1)<>(rt0.c0)), 0.3378441743108709)))) GROUP BY rt0.c2, v0.c1 UNION SELECT rt0.c2, v0.c1 FROM vt1, v0, rt0 WHERE ((NOT ((((0.7754168260375943, v0.c2, v0.c2)) BETWEEN ((NULL, ((rt0.c0) NOT BETWEEN (rt0.c1) AND (v0.c2)), NULL COLLATE BINARY)) AND ((((v0.c0) NOT BETWEEN (NULL) AND ('-228514884')), ((rt0.c1)<>(rt0.c0)), 0.3378441743108709)))))) GROUP BY rt0.c2, v0.c1 UNION SELECT ALL rt0.c2, v0.c1 FROM vt1, v0, rt0 WHERE ((((((0.7754168260375943, v0.c2, v0.c2)) BETWEEN ((NULL, ((rt0.c0) NOT BETWEEN (rt0.c1) AND (v0.c2)), NULL COLLATE BINARY)) AND ((((v0.c0) NOT BETWEEN (NULL) AND ('-228514884')), ((rt0.c1)!=(rt0.c0)), 0.3378441743108709)))) ISNULL)) GROUP BY rt0.c2, v0.c1;
SELECT ALL rt0.c2, v0.c1 FROM vt1, v0, rt0 GROUP BY rt0.c2, v0.c1;
SELECT ALL v0.c2 FROM vt0, vt1, v0 GROUP BY v0.c2;
SELECT v0.c2 FROM vt0, vt1, v0 GROUP BY v0.c2 HAVING TOTAL(COUNT(*)) UNION ALL SELECT v0.c2 FROM vt0, vt1, v0 GROUP BY v0.c2 HAVING (NOT (TOTAL(COUNT(*)))) UNION ALL SELECT ALL v0.c2 FROM vt0, vt1, v0 GROUP BY v0.c2 HAVING ((TOTAL(COUNT(*))) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (CAST(TRIM(vt1.c0) AS REAL)) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (CAST(TRIM(vt1.c0) AS REAL)))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((CAST(TRIM(vt1.c0) AS REAL)) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT rt0.c2, rt0.c1, v0.c1, rt0.c0 FROM vt1 CROSS JOIN v0 ON (- (CAST(rt0.c2 AS BLOB))) CROSS JOIN rt0 ON ((CAST(v0.c2 AS REAL)) NOTNULL);
SELECT DISTINCT rt0.c2, rt0.c1, v0.c1, rt0.c0 FROM vt1 CROSS JOIN v0 ON (- (CAST(rt0.c2 AS BLOB))) CROSS JOIN rt0 ON ((CAST(v0.c2 AS REAL)) NOTNULL) WHERE ((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((v0.c1)))) BETWEEN (((0.7427095364198507)|(rt0.c2))) AND (((((((((((((v0.c2)OR(v0.c2)))OR(v0.c1)))OR(0.19383298751535583)))AND(v0.c2)))AND(vt1.c0)))AND(v0.c1))))) UNION SELECT DISTINCT rt0.c2, rt0.c1, v0.c1, rt0.c0 FROM vt1 CROSS JOIN v0 ON (- (CAST(rt0.c2 AS BLOB))) CROSS JOIN rt0 ON ((CAST(v0.c2 AS REAL)) NOTNULL) WHERE ((NOT ((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((v0.c1)))) BETWEEN (((0.7427095364198507)|(rt0.c2))) AND (((((((((((((v0.c2)OR(v0.c2)))OR(v0.c1)))OR(0.19383298751535583)))AND(v0.c2)))AND(vt1.c0)))AND(v0.c1))))))) UNION SELECT DISTINCT rt0.c2, rt0.c1, v0.c1, rt0.c0 FROM vt1 CROSS JOIN v0 ON (- (CAST(rt0.c2 AS BLOB))) CROSS JOIN rt0 ON ((CAST(v0.c2 AS REAL)) NOTNULL) WHERE ((((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((v0.c1)))) BETWEEN (((0.7427095364198507)|(rt0.c2))) AND (((((((((((((v0.c2)OR(v0.c2)))OR(v0.c1)))OR(0.19383298751535583)))AND(v0.c2)))AND(vt1.c0)))AND(v0.c1))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, v0.c1, rt0.c0 FROM vt1 CROSS JOIN v0 ON (- (CAST(rt0.c2 AS BLOB))) CROSS JOIN rt0 ON ((CAST(v0.c2 AS REAL)) NOTNULL);
SELECT v0.c2, vt1.c0, rt0.c0, rt0.c1, vt0.c0, rt0.c2, v0.c0, v0.c1 FROM v0, vt0, rt0 CROSS JOIN vt1 ON CASE WHEN (rt0.c2 IN ()) THEN ((v0.c2) IS FALSE) ELSE ((rt0.c0)&(2.81222487E8)) END GROUP BY v0.c2, vt1.c0, rt0.c0, rt0.c1, vt0.c0, rt0.c2, v0.c0, v0.c1;
SELECT v0.c2, vt1.c0, rt0.c0, rt0.c1, vt0.c0, rt0.c2, v0.c0, v0.c1 FROM v0, vt0, rt0 CROSS JOIN vt1 ON CASE WHEN (rt0.c2 IN ()) THEN ((v0.c2) IS FALSE) ELSE ((rt0.c0)&(2.81222487E8)) END WHERE (rt0.c0) GROUP BY v0.c2, vt1.c0, rt0.c0, rt0.c1, vt0.c0, rt0.c2, v0.c0, v0.c1 UNION SELECT v0.c2, vt1.c0, rt0.c0, rt0.c1, vt0.c0, rt0.c2, v0.c0, v0.c1 FROM v0, vt0, rt0 CROSS JOIN vt1 ON CASE WHEN (rt0.c2 IN ()) THEN ((v0.c2) IS FALSE) ELSE ((rt0.c0)&(2.81222487E8)) END WHERE ((NOT (rt0.c0))) GROUP BY v0.c2, vt1.c0, rt0.c0, rt0.c1, vt0.c0, rt0.c2, v0.c0, v0.c1 UNION SELECT ALL v0.c2, vt1.c0, rt0.c0, rt0.c1, vt0.c0, rt0.c2, v0.c0, v0.c1 FROM v0, vt0, rt0 CROSS JOIN vt1 ON CASE WHEN (rt0.c2 IN ()) THEN ((v0.c2) IS FALSE) ELSE ((rt0.c0)&(2.81222487E8)) END WHERE (((rt0.c0) ISNULL)) GROUP BY v0.c2, vt1.c0, rt0.c0, rt0.c1, vt0.c0, rt0.c2, v0.c0, v0.c1;
SELECT v0.c2, vt1.c0, rt0.c0, rt0.c1, vt0.c0, rt0.c2, v0.c0, v0.c1 FROM v0, vt0, rt0 CROSS JOIN vt1 ON CASE WHEN (rt0.c2 IN ()) THEN ((v0.c2) IS FALSE) ELSE ((rt0.c0)&(2.81222487E8)) END GROUP BY v0.c2, vt1.c0, rt0.c0, rt0.c1, vt0.c0, rt0.c2, v0.c0, v0.c1;
SELECT vt1.c0, v0.c1, v0.c0, v0.c2 FROM vt1 FULL OUTER JOIN v0 ON CAST((NOT (vt1.c0)) AS REAL) GROUP BY vt1.c0, v0.c1, v0.c0, v0.c2;
SELECT ALL vt1.c0, v0.c1, v0.c0, v0.c2 FROM vt1 FULL OUTER JOIN v0 ON CAST((NOT (vt1.c0)) AS REAL) GROUP BY vt1.c0, v0.c1, v0.c0, v0.c2 HAVING MIN(COUNT(*)) UNION ALL SELECT ALL vt1.c0, v0.c1, v0.c0, v0.c2 FROM vt1 FULL OUTER JOIN v0 ON CAST((NOT (vt1.c0)) AS REAL) GROUP BY vt1.c0, v0.c1, v0.c0, v0.c2 HAVING (NOT (MIN(COUNT(*)))) UNION ALL SELECT ALL vt1.c0, v0.c1, v0.c0, v0.c2 FROM vt1 FULL OUTER JOIN v0 ON CAST((NOT (vt1.c0)) AS REAL) GROUP BY vt1.c0, v0.c1, v0.c0, v0.c2 HAVING ((MIN(COUNT(*))) ISNULL);
SELECT ALL vt1.c0, rt0.c1, rt0.c2, v0.c1, rt0.c0, v0.c0, v0.c2 FROM vt1, v0, rt0, vt0;
SELECT ALL vt1.c0, rt0.c1, rt0.c2, v0.c1, rt0.c0, v0.c0, v0.c2 FROM vt1, v0, rt0, vt0 WHERE (rt0.c0) UNION ALL SELECT vt1.c0, rt0.c1, rt0.c2, v0.c1, rt0.c0, v0.c0, v0.c2 FROM vt1, v0, rt0, vt0 WHERE ((NOT (rt0.c0))) UNION ALL SELECT ALL vt1.c0, rt0.c1, rt0.c2, v0.c1, rt0.c0, v0.c0, v0.c2 FROM vt1, v0, rt0, vt0 WHERE (((rt0.c0) ISNULL));
SELECT ALL vt1.c0, rt0.c1, rt0.c2, v0.c1, rt0.c0, v0.c0, v0.c2 FROM vt1, v0, rt0, vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((x'c551') NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR((vt0.c0 IN (vt0.c0, 0.6079013291354308)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((((x'c551') NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR((vt0.c0 IN (vt0.c0, 0.6079013291354308)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((((x'c551') NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR((vt0.c0 IN (vt0.c0, 0.6079013291354308)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt1.c0, rt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0, v0, vt1 GROUP BY vt1.c0, rt0.c0, rt0.c2, rt0.c1;
SELECT vt1.c0, rt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0, v0, vt1 WHERE ((+ (((((vt1.c0)OR(v0.c0)))AND(-1819812217))))) GROUP BY vt1.c0, rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL vt1.c0, rt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0, v0, vt1 WHERE ((NOT ((+ (((((vt1.c0)OR(v0.c0)))AND(-1819812217))))))) GROUP BY vt1.c0, rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL vt1.c0, rt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0, v0, vt1 WHERE ((((+ (((((vt1.c0)OR(v0.c0)))AND(-1819812217))))) ISNULL)) GROUP BY vt1.c0, rt0.c0, rt0.c2, rt0.c1;
SELECT ALL vt1.c0, rt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0, v0, vt1 GROUP BY vt1.c0, rt0.c0, rt0.c2, rt0.c1;
SELECT v0.c0, rt0.c0, v0.c2, rt0.c2, vt1.c0, v0.c1, rt0.c1 FROM v0 INNER JOIN vt1 ON ((rt0.c2)>>(v0.c2)) COLLATE BINARY CROSS JOIN rt0 ON (~ (vt1.c0)) GROUP BY v0.c0, rt0.c0, v0.c2, rt0.c2, vt1.c0, v0.c1, rt0.c1;
SELECT v0.c0, rt0.c0, v0.c2, rt0.c2, vt1.c0, v0.c1, rt0.c1 FROM v0 INNER JOIN vt1 ON ((rt0.c2)>>(v0.c2)) COLLATE BINARY CROSS JOIN rt0 ON (~ (vt1.c0)) GROUP BY v0.c0, rt0.c0, v0.c2, rt0.c2, vt1.c0, v0.c1, rt0.c1 HAVING SUM(AVG(rt0.c2)) UNION ALL SELECT ALL v0.c0, rt0.c0, v0.c2, rt0.c2, vt1.c0, v0.c1, rt0.c1 FROM v0 INNER JOIN vt1 ON ((rt0.c2)>>(v0.c2)) COLLATE BINARY CROSS JOIN rt0 ON (~ (vt1.c0)) GROUP BY v0.c0, rt0.c0, v0.c2, rt0.c2, vt1.c0, v0.c1, rt0.c1 HAVING (NOT (SUM(AVG(rt0.c2)))) UNION ALL SELECT ALL v0.c0, rt0.c0, v0.c2, rt0.c2, vt1.c0, v0.c1, rt0.c1 FROM v0 INNER JOIN vt1 ON ((rt0.c2)>>(v0.c2)) COLLATE BINARY CROSS JOIN rt0 ON (~ (vt1.c0)) GROUP BY v0.c0, rt0.c0, v0.c2, rt0.c2, vt1.c0, v0.c1, rt0.c1 HAVING ((SUM(AVG(rt0.c2))) ISNULL);
SELECT * FROM vt1, v0, rt0 FULL OUTER JOIN vt0 ON CASE (NOT ('0.6079013291354308'))  WHEN (~ ('1746563471')) THEN TRIM(DISTINCT v0.c2, v0.c2) END;
SELECT * FROM vt1, v0, rt0 FULL OUTER JOIN vt0 ON CASE (NOT ('0.6079013291354308'))  WHEN (~ ('1746563471')) THEN TRIM(DISTINCT v0.c2, v0.c2) END WHERE (((((((((rt0.c2 COLLATE BINARY)OR(((vt1.c0) NOT BETWEEN (v0.c0) AND (rt0.c1)))))AND(((vt1.c0) IS TRUE))))OR(vt0.c0)))AND(0.022558918207905565))) UNION ALL SELECT * FROM vt1, v0, rt0 FULL OUTER JOIN vt0 ON CASE (NOT ('0.6079013291354308'))  WHEN (~ ('1746563471')) THEN TRIM(DISTINCT v0.c2, v0.c2) END WHERE ((NOT (((((((((rt0.c2 COLLATE BINARY)OR(((vt1.c0) NOT BETWEEN (v0.c0) AND (rt0.c1)))))AND(((vt1.c0) IS TRUE))))OR(vt0.c0)))AND(0.022558918207905565))))) UNION ALL SELECT ALL * FROM vt1, v0, rt0 FULL OUTER JOIN vt0 ON CASE (NOT ('0.6079013291354308'))  WHEN (~ ('1746563471')) THEN TRIM(DISTINCT v0.c2, v0.c2) END WHERE (((((((((((rt0.c2 COLLATE BINARY)OR(((vt1.c0) NOT BETWEEN (v0.c0) AND (rt0.c1)))))AND(((vt1.c0) IS TRUE))))OR(vt0.c0)))AND(0.022558918207905565))) ISNULL));
SELECT * FROM vt1, v0, rt0 FULL OUTER JOIN vt0 ON CASE (NOT ('0.6079013291354308'))  WHEN (~ ('1746563471')) THEN TRIM(DISTINCT v0.c2, v0.c2) END;
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt1 ON x'' INNER JOIN v0 ON (((((~ (rt0.c2)))AND(CAST(v0.c2 AS NUMERIC))))AND(((((vt1.c0)OR(vt1.c0)))AND(rt0.c2)))) CROSS JOIN vt0 ON (~ (((rt0.c0) BETWEEN (v0.c1) AND (rt0.c1))));
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt1 ON x'' INNER JOIN v0 ON (((((~ (rt0.c2)))AND(CAST(v0.c2 AS NUMERIC))))AND(((((vt1.c0)OR(vt1.c0)))AND(rt0.c2)))) CROSS JOIN vt0 ON (~ (((rt0.c0) BETWEEN (v0.c1) AND (rt0.c1)))) WHERE ((~ (vt0.c0)) COLLATE BINARY) UNION SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt1 ON x'' INNER JOIN v0 ON (((((~ (rt0.c2)))AND(CAST(v0.c2 AS NUMERIC))))AND(((((vt1.c0)OR(vt1.c0)))AND(rt0.c2)))) CROSS JOIN vt0 ON (~ (((rt0.c0) BETWEEN (v0.c1) AND (rt0.c1)))) WHERE ((NOT ((~ (vt0.c0)) COLLATE BINARY))) UNION SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt1 ON x'' INNER JOIN v0 ON (((((~ (rt0.c2)))AND(CAST(v0.c2 AS NUMERIC))))AND(((((vt1.c0)OR(vt1.c0)))AND(rt0.c2)))) CROSS JOIN vt0 ON (~ (((rt0.c0) BETWEEN (v0.c1) AND (rt0.c1)))) WHERE ((((~ (vt0.c0)) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt1 ON x'' INNER JOIN v0 ON (((((~ (rt0.c2)))AND(CAST(v0.c2 AS NUMERIC))))AND(((((vt1.c0)OR(vt1.c0)))AND(rt0.c2)))) CROSS JOIN vt0 ON (~ (((rt0.c0) BETWEEN (v0.c1) AND (rt0.c1))));
SELECT rt0.c0 FROM vt0, rt0, vt1 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM vt0, rt0, vt1 WHERE (((((rt0.c2))<=((rt0.c2))) IN ())) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM vt0, rt0, vt1 WHERE ((NOT (((((rt0.c2))<=((rt0.c2))) IN ())))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM vt0, rt0, vt1 WHERE (((((((rt0.c2))<=((rt0.c2))) IN ())) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM vt0, rt0, vt1 GROUP BY rt0.c0;
SELECT v0.c1, v0.c0 FROM v0 GROUP BY v0.c1, v0.c0;
SELECT ALL v0.c1, v0.c0 FROM v0 GROUP BY v0.c1, v0.c0 HAVING GROUP_CONCAT(COUNT(*)) UNION ALL SELECT ALL v0.c1, v0.c0 FROM v0 GROUP BY v0.c1, v0.c0 HAVING (NOT (GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT ALL v0.c1, v0.c0 FROM v0 GROUP BY v0.c1, v0.c0 HAVING ((GROUP_CONCAT(COUNT(*))) ISNULL);
SELECT * FROM v0 FULL OUTER JOIN vt0 ON CASE WHEN ((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0)) THEN GLOB(rt0.c0, v0.c0) ELSE vt1.c0 END INNER JOIN rt0 ON ((((v0.c0)OR(v0.c1)))>>(rt0.c1)) CROSS JOIN vt1 ON CAST(v0.c1 COLLATE NOCASE AS TEXT);
SELECT DISTINCT vt1.c0, rt0.c1 FROM rt0, vt1;
SELECT DISTINCT vt1.c0, rt0.c1 FROM rt0, vt1 WHERE ((((json_remove(rt0.c0, rt0.c2, '', rt0.c2)))=((rt0.c0)))) UNION SELECT DISTINCT vt1.c0, rt0.c1 FROM rt0, vt1 WHERE ((NOT ((((json_remove(rt0.c0, rt0.c2, '', rt0.c2)))=((rt0.c0)))))) UNION SELECT DISTINCT vt1.c0, rt0.c1 FROM rt0, vt1 WHERE ((((((json_remove(rt0.c0, rt0.c2, '', rt0.c2)))=((rt0.c0)))) ISNULL));
SELECT DISTINCT vt1.c0, rt0.c1 FROM rt0, vt1;
SELECT ALL rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0, rt0.c1, rt0.c0;
SELECT rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE (LIKELIHOOD(vt0.c0, 0.9594683984395036) COLLATE NOCASE) GROUP BY rt0.c2, vt0.c0, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE ((NOT (LIKELIHOOD(vt0.c0, 0.9594683984395036) COLLATE NOCASE))) GROUP BY rt0.c2, vt0.c0, rt0.c1, rt0.c0 UNION SELECT rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE (((LIKELIHOOD(vt0.c0, 0.9594683984395036) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c2, vt0.c0, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0, rt0.c1, rt0.c0;
SELECT ALL rt0.c1 FROM rt0, vt0, vt1 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0, vt0, vt1 GROUP BY rt0.c1 HAVING AVG(COUNT(*) COLLATE NOCASE) UNION ALL SELECT ALL rt0.c1 FROM rt0, vt0, vt1 GROUP BY rt0.c1 HAVING (NOT (AVG(COUNT(*) COLLATE NOCASE))) UNION ALL SELECT ALL rt0.c1 FROM rt0, vt0, vt1 GROUP BY rt0.c1 HAVING ((AVG(COUNT(*) COLLATE NOCASE)) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (x'') UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (x''))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((x'') ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (CASE WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((vt1.c0) IS FALSE) END) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (CASE WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((vt1.c0) IS FALSE) END))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((CASE WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((vt1.c0) IS FALSE) END) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 WHERE ((+ ((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((x'')))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 WHERE ((NOT ((+ ((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((x'')))))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 WHERE ((((+ ((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((x'')))))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2;
SELECT v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2 HAVING ((((((((TOTAL(v0.c0) COLLATE BINARY)OR(AVG(x''))))AND(AVG(TOTAL(-910755611)))))OR(DATETIME(v0.c1, v0.c2, TOTAL(MAX(TOTAL(COUNT(*))))))))AND(COUNT(*))) UNION ALL SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2 HAVING (NOT (((((((((TOTAL(v0.c0) COLLATE BINARY)OR(AVG(x''))))AND(AVG(TOTAL(-910755611)))))OR(DATETIME(v0.c1, v0.c2, TOTAL(MAX(TOTAL(COUNT(*))))))))AND(COUNT(*))))) UNION ALL SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2 HAVING ((((((((((TOTAL(v0.c0) COLLATE BINARY)OR(AVG(x''))))AND(AVG(TOTAL(-910755611)))))OR(DATETIME(v0.c1, v0.c2, TOTAL(MAX(TOTAL(COUNT(*))))))))AND(COUNT(*)))) ISNULL);
SELECT ALL rt0.c1 FROM rt0;
SELECT rt0.c1 FROM rt0 WHERE (((((0.10374312077436032)OR(-1118359288)))OR(rt0.c0))) UNION ALL SELECT rt0.c1 FROM rt0 WHERE ((NOT (((((0.10374312077436032)OR(-1118359288)))OR(rt0.c0))))) UNION ALL SELECT rt0.c1 FROM rt0 WHERE (((((((0.10374312077436032)OR(-1118359288)))OR(rt0.c0))) ISNULL));
SELECT ALL rt0.c1 FROM rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((+ (vt0.c0))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((+ (vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((+ (vt0.c0))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL v0.c1, v0.c0 FROM v0 GROUP BY v0.c1, v0.c0;
SELECT ALL v0.c1, v0.c0 FROM v0 WHERE (((((((((((((v0.c2)OR(v0.c2)))AND(v0.c2)))AND(((((((((((((v0.c0)AND(v0.c0)))OR(v0.c1)))OR(v0.c2)))AND(v0.c1)))OR(v0.c2)))OR(v0.c1)))))AND('')))OR(((v0.c0)+(v0.c0)))))AND(CAST(v0.c2 AS TEXT)))) GROUP BY v0.c1, v0.c0 UNION SELECT ALL v0.c1, v0.c0 FROM v0 WHERE ((NOT (((((((((((((v0.c2)OR(v0.c2)))AND(v0.c2)))AND(((((((((((((v0.c0)AND(v0.c0)))OR(v0.c1)))OR(v0.c2)))AND(v0.c1)))OR(v0.c2)))OR(v0.c1)))))AND('')))OR(((v0.c0)+(v0.c0)))))AND(CAST(v0.c2 AS TEXT)))))) GROUP BY v0.c1, v0.c0 UNION SELECT v0.c1, v0.c0 FROM v0 WHERE (((((((((((((((v0.c2)OR(v0.c2)))AND(v0.c2)))AND(((((((((((((v0.c0)AND(v0.c0)))OR(v0.c1)))OR(v0.c2)))AND(v0.c1)))OR(v0.c2)))OR(v0.c1)))))AND('')))OR(((v0.c0)+(v0.c0)))))AND(CAST(v0.c2 AS TEXT)))) ISNULL)) GROUP BY v0.c1, v0.c0;
SELECT ALL v0.c1, v0.c0 FROM v0 GROUP BY v0.c1, v0.c0;
SELECT vt0.c0, v0.c0 FROM v0, vt0, rt0 RIGHT OUTER JOIN vt1 ON ((v0.c1) NOT NULL) COLLATE NOCASE GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0, rt0 RIGHT OUTER JOIN vt1 ON ((v0.c1) NOT NULL) COLLATE NOCASE GROUP BY vt0.c0, v0.c0 HAVING ((NULL) BETWEEN (TOTAL(COUNT(v0.c1))) AND (MAX(AVG(v0.c2)))) UNION ALL SELECT vt0.c0, v0.c0 FROM v0, vt0, rt0 RIGHT OUTER JOIN vt1 ON ((v0.c1) NOT NULL) COLLATE NOCASE GROUP BY vt0.c0, v0.c0 HAVING (NOT (((NULL) BETWEEN (TOTAL(COUNT(v0.c1))) AND (MAX(AVG(v0.c2)))))) UNION ALL SELECT vt0.c0, v0.c0 FROM v0, vt0, rt0 RIGHT OUTER JOIN vt1 ON ((v0.c1) NOT NULL) COLLATE NOCASE GROUP BY vt0.c0, v0.c0 HAVING ((((NULL) BETWEEN (TOTAL(COUNT(v0.c1))) AND (MAX(AVG(v0.c2))))) ISNULL);
SELECT ALL v0.c2 FROM rt0, v0, vt1, vt0;
SELECT v0.c2 FROM rt0, v0, vt1, vt0 WHERE (((((((vt1.c0)AND(rt0.c2)))OR(NULL)))IS NOT(x''))) UNION ALL SELECT ALL v0.c2 FROM rt0, v0, vt1, vt0 WHERE ((NOT (((((((vt1.c0)AND(rt0.c2)))OR(NULL)))IS NOT(x''))))) UNION ALL SELECT ALL v0.c2 FROM rt0, v0, vt1, vt0 WHERE (((((((((vt1.c0)AND(rt0.c2)))OR(NULL)))IS NOT(x''))) ISNULL));
SELECT ALL v0.c2 FROM rt0, v0, vt1, vt0;
SELECT DISTINCT rt0.c2, v0.c1, vt1.c0, rt0.c0, v0.c2, v0.c0, rt0.c1 FROM v0, vt1, rt0;
SELECT DISTINCT rt0.c2, v0.c1, vt1.c0, rt0.c0, v0.c2, v0.c0, rt0.c1 FROM v0, vt1, rt0 WHERE (((CAST(rt0.c1 AS NUMERIC)) NOT BETWEEN ((v0.c2 IN ())) AND (CASE vt1.c0  WHEN vt1.c0 THEN rt0.c2 END))) UNION SELECT DISTINCT rt0.c2, v0.c1, vt1.c0, rt0.c0, v0.c2, v0.c0, rt0.c1 FROM v0, vt1, rt0 WHERE ((NOT (((CAST(rt0.c1 AS NUMERIC)) NOT BETWEEN ((v0.c2 IN ())) AND (CASE vt1.c0  WHEN vt1.c0 THEN rt0.c2 END))))) UNION SELECT DISTINCT rt0.c2, v0.c1, vt1.c0, rt0.c0, v0.c2, v0.c0, rt0.c1 FROM v0, vt1, rt0 WHERE (((((CAST(rt0.c1 AS NUMERIC)) NOT BETWEEN ((v0.c2 IN ())) AND (CASE vt1.c0  WHEN vt1.c0 THEN rt0.c2 END))) ISNULL));
SELECT DISTINCT rt0.c2, v0.c1, vt1.c0, rt0.c0, v0.c2, v0.c0, rt0.c1 FROM v0, vt1, rt0;
SELECT rt0.c1, v0.c1 FROM rt0, v0 GROUP BY rt0.c1, v0.c1;
SELECT ALL rt0.c1, v0.c1 FROM rt0, v0 WHERE ((NOT (CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN 0.4570558590779077 WHEN rt0.c1 THEN v0.c0 END))) GROUP BY rt0.c1, v0.c1 UNION SELECT ALL rt0.c1, v0.c1 FROM rt0, v0 WHERE ((NOT ((NOT (CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN 0.4570558590779077 WHEN rt0.c1 THEN v0.c0 END))))) GROUP BY rt0.c1, v0.c1 UNION SELECT ALL rt0.c1, v0.c1 FROM rt0, v0 WHERE ((((NOT (CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN 0.4570558590779077 WHEN rt0.c1 THEN v0.c0 END))) ISNULL)) GROUP BY rt0.c1, v0.c1;
SELECT rt0.c1, v0.c1 FROM rt0, v0 GROUP BY rt0.c1, v0.c1;
SELECT rt0.c2, vt1.c0, v0.c1, rt0.c1 FROM rt0, v0, vt1 GROUP BY rt0.c2, vt1.c0, v0.c1, rt0.c1;
SELECT rt0.c2, vt1.c0, v0.c1, rt0.c1 FROM rt0, v0, vt1 GROUP BY rt0.c2, vt1.c0, v0.c1, rt0.c1 HAVING (TOTAL(v0.c1) IN ()) UNION ALL SELECT ALL rt0.c2, vt1.c0, v0.c1, rt0.c1 FROM rt0, v0, vt1 GROUP BY rt0.c2, vt1.c0, v0.c1, rt0.c1 HAVING (NOT ((TOTAL(v0.c1) IN ()))) UNION ALL SELECT ALL rt0.c2, vt1.c0, v0.c1, rt0.c1 FROM rt0, v0, vt1 GROUP BY rt0.c2, vt1.c0, v0.c1, rt0.c1 HAVING (((TOTAL(v0.c1) IN ())) ISNULL);
SELECT rt0.c2, vt1.c0, v0.c1, rt0.c1 FROM rt0, v0, vt1 GROUP BY rt0.c2, vt1.c0, v0.c1, rt0.c1;
SELECT rt0.c2, vt1.c0, v0.c1, rt0.c1 FROM rt0, v0, vt1 GROUP BY rt0.c2, vt1.c0, v0.c1, rt0.c1 HAVING (TOTAL(v0.c1) IN ()) UNION ALL SELECT ALL rt0.c2, vt1.c0, v0.c1, rt0.c1 FROM rt0, v0, vt1 GROUP BY rt0.c2, vt1.c0, v0.c1, rt0.c1 HAVING (NOT ((TOTAL(v0.c1) IN ()))) UNION ALL SELECT ALL rt0.c2, vt1.c0, v0.c1, rt0.c1 FROM rt0, v0, vt1 GROUP BY rt0.c2, vt1.c0, v0.c1, rt0.c1 HAVING (((TOTAL(v0.c1) IN ())) ISNULL);
SELECT rt0.c2, vt1.c0, v0.c1, rt0.c1 FROM rt0, v0, vt1 GROUP BY rt0.c2, vt1.c0, v0.c1, rt0.c1;
SELECT * FROM vt0, vt1 RIGHT OUTER JOIN v0 ON (((((((('-1328390462')AND((((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))))AND(((x'') BETWEEN (rt0.c0) AND (v0.c2)))))OR(((((vt1.c0)OR(v0.c2)))OR(vt0.c0)))))AND(vt1.c0)) LEFT OUTER JOIN rt0 ON CAST(vt0.c0 COLLATE NOCASE AS BLOB);
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ('x5QdRK') UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ('x5QdRK'))) UNION SELECT DISTINCT * FROM v0 WHERE ((('x5QdRK') ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE ((((((NOT (rt0.c0)))AND((('316572076')<(rt0.c2)))))AND(((rt0.c2) NOT NULL)))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT ((((((NOT (rt0.c0)))AND((('316572076')<(rt0.c2)))))AND(((rt0.c2) NOT NULL)))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((((((((NOT (rt0.c0)))AND((('316572076')<(rt0.c2)))))AND(((rt0.c2) NOT NULL)))) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT v0.c0, vt1.c0, rt0.c2 FROM rt0, vt1, vt0 INNER JOIN v0 ON NULLIF(CASE WHEN vt1.c0 THEN NULL ELSE rt0.c2 END, rt0.c2 COLLATE NOCASE) GROUP BY v0.c0, vt1.c0, rt0.c2;
SELECT v0.c0, vt1.c0, rt0.c2 FROM rt0, vt1, vt0 INNER JOIN v0 ON NULLIF(CASE WHEN vt1.c0 THEN NULL ELSE rt0.c2 END, rt0.c2 COLLATE NOCASE) GROUP BY v0.c0, vt1.c0, rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0, vt1.c0, rt0.c2 FROM rt0, vt1, vt0 INNER JOIN v0 ON NULLIF(CASE WHEN vt1.c0 THEN NULL ELSE rt0.c2 END, rt0.c2 COLLATE NOCASE) GROUP BY v0.c0, vt1.c0, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0, vt1.c0, rt0.c2 FROM rt0, vt1, vt0 INNER JOIN v0 ON NULLIF(CASE WHEN vt1.c0 THEN NULL ELSE rt0.c2 END, rt0.c2 COLLATE NOCASE) GROUP BY v0.c0, vt1.c0, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0, vt1.c0, rt0.c2 FROM rt0, vt1, vt0 INNER JOIN v0 ON NULLIF(CASE WHEN vt1.c0 THEN NULL ELSE rt0.c2 END, rt0.c2 COLLATE NOCASE) GROUP BY v0.c0, vt1.c0, rt0.c2;
SELECT v0.c0, vt1.c0, rt0.c2 FROM rt0, vt1, vt0 INNER JOIN v0 ON NULLIF(CASE WHEN vt1.c0 THEN NULL ELSE rt0.c2 END, rt0.c2 COLLATE NOCASE) GROUP BY v0.c0, vt1.c0, rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0, vt1.c0, rt0.c2 FROM rt0, vt1, vt0 INNER JOIN v0 ON NULLIF(CASE WHEN vt1.c0 THEN NULL ELSE rt0.c2 END, rt0.c2 COLLATE NOCASE) GROUP BY v0.c0, vt1.c0, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0, vt1.c0, rt0.c2 FROM rt0, vt1, vt0 INNER JOIN v0 ON NULLIF(CASE WHEN vt1.c0 THEN NULL ELSE rt0.c2 END, rt0.c2 COLLATE NOCASE) GROUP BY v0.c0, vt1.c0, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0, vt1.c0, rt0.c2 FROM rt0, vt1, vt0 INNER JOIN v0 ON NULLIF(CASE WHEN vt1.c0 THEN NULL ELSE rt0.c2 END, rt0.c2 COLLATE NOCASE) GROUP BY v0.c0, vt1.c0, rt0.c2;
SELECT ALL rt0.c2, rt0.c0 FROM vt1, vt0 CROSS JOIN rt0 ON CAST(rt0.c0 AS REAL) COLLATE BINARY;
SELECT ALL rt0.c2, rt0.c0 FROM vt1, vt0 CROSS JOIN rt0 ON CAST(rt0.c0 AS REAL) COLLATE BINARY WHERE (CAST((rt0.c0 IN ()) AS TEXT)) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM vt1, vt0 CROSS JOIN rt0 ON CAST(rt0.c0 AS REAL) COLLATE BINARY WHERE ((NOT (CAST((rt0.c0 IN ()) AS TEXT)))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM vt1, vt0 CROSS JOIN rt0 ON CAST(rt0.c0 AS REAL) COLLATE BINARY WHERE (((CAST((rt0.c0 IN ()) AS TEXT)) ISNULL));
SELECT ALL rt0.c2, rt0.c0 FROM vt1, vt0 CROSS JOIN rt0 ON CAST(rt0.c0 AS REAL) COLLATE BINARY;
SELECT DISTINCT vt0.c0, rt0.c1, v0.c2 FROM vt0, rt0, vt1, v0;
SELECT DISTINCT vt0.c0, rt0.c1, v0.c2 FROM vt0, rt0, vt1, v0 WHERE (((((((vt1.c0)OR(rt0.c2)))OR(vt1.c0))) ISNULL)) UNION SELECT DISTINCT vt0.c0, rt0.c1, v0.c2 FROM vt0, rt0, vt1, v0 WHERE ((NOT (((((((vt1.c0)OR(rt0.c2)))OR(vt1.c0))) ISNULL)))) UNION SELECT DISTINCT vt0.c0, rt0.c1, v0.c2 FROM vt0, rt0, vt1, v0 WHERE (((((((((vt1.c0)OR(rt0.c2)))OR(vt1.c0))) ISNULL)) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c1, v0.c2 FROM vt0, rt0, vt1, v0;
SELECT v0.c2 FROM v0 GROUP BY v0.c2;
SELECT ALL v0.c2 FROM v0 WHERE ((((v0.c2)%(v0.c1)) IN ())) GROUP BY v0.c2 UNION SELECT v0.c2 FROM v0 WHERE ((NOT ((((v0.c2)%(v0.c1)) IN ())))) GROUP BY v0.c2 UNION SELECT v0.c2 FROM v0 WHERE ((((((v0.c2)%(v0.c1)) IN ())) ISNULL)) GROUP BY v0.c2;
SELECT v0.c2 FROM v0 GROUP BY v0.c2;
SELECT ALL rt0.c0, v0.c0, v0.c1, rt0.c2, rt0.c1 FROM rt0, vt0 FULL OUTER JOIN v0 ON ((((((v0.c0)&(v0.c1)))OR((vt0.c0 IN ()))))AND(0.1526402053179975)) INNER JOIN vt1 ON ((v0.c1)IS NOT(vt0.c0)) COLLATE BINARY GROUP BY rt0.c0, v0.c0, v0.c1, rt0.c2, rt0.c1;
SELECT rt0.c0, v0.c0, v0.c1, rt0.c2, rt0.c1 FROM rt0, vt0 FULL OUTER JOIN v0 ON ((((((v0.c0)&(v0.c1)))OR((vt0.c0 IN ()))))AND(0.1526402053179975)) INNER JOIN vt1 ON ((v0.c1)IS NOT(vt0.c0)) COLLATE BINARY GROUP BY rt0.c0, v0.c0, v0.c1, rt0.c2, rt0.c1 HAVING MAX(CAST(SUM(rt0.c0) AS REAL)) UNION ALL SELECT rt0.c0, v0.c0, v0.c1, rt0.c2, rt0.c1 FROM rt0, vt0 FULL OUTER JOIN v0 ON ((((((v0.c0)&(v0.c1)))OR((vt0.c0 IN ()))))AND(0.1526402053179975)) INNER JOIN vt1 ON ((v0.c1)IS NOT(vt0.c0)) COLLATE BINARY GROUP BY rt0.c0, v0.c0, v0.c1, rt0.c2, rt0.c1 HAVING (NOT (MAX(CAST(SUM(rt0.c0) AS REAL)))) UNION ALL SELECT ALL rt0.c0, v0.c0, v0.c1, rt0.c2, rt0.c1 FROM rt0, vt0 FULL OUTER JOIN v0 ON ((((((v0.c0)&(v0.c1)))OR((vt0.c0 IN ()))))AND(0.1526402053179975)) INNER JOIN vt1 ON ((v0.c1)IS NOT(vt0.c0)) COLLATE BINARY GROUP BY rt0.c0, v0.c0, v0.c1, rt0.c2, rt0.c1 HAVING ((MAX(CAST(SUM(rt0.c0) AS REAL))) ISNULL);
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE (vt1.c0) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (vt1.c0))) UNION ALL SELECT * FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM rt0, vt1, vt0;
SELECT DISTINCT * FROM rt0, vt1 NOT INDEXED, vt0 WHERE ((((rt0.c0)) NOT BETWEEN ((vt1.c0 COLLATE BINARY)) AND ((((rt0.c0)%(vt1.c0)))))) UNION SELECT DISTINCT * FROM rt0, vt1, vt0 WHERE ((NOT ((((rt0.c0)) NOT BETWEEN ((vt1.c0 COLLATE BINARY)) AND ((((rt0.c0)%(vt1.c0)))))))) UNION SELECT DISTINCT * FROM rt0, vt1, vt0 WHERE ((((((rt0.c0)) NOT BETWEEN ((vt1.c0 COLLATE BINARY)) AND ((((rt0.c0)%(vt1.c0)))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt1, vt0;
SELECT ALL vt1.c0, vt0.c0, rt0.c1 FROM rt0, vt1, vt0 GROUP BY vt1.c0, vt0.c0, rt0.c1;
SELECT vt1.c0, vt0.c0, rt0.c1 FROM rt0, vt1, vt0 NOT INDEXED WHERE ((1071888316 IN (((0.8181560714843845)||(rt0.c0)), vt1.c0))) GROUP BY vt1.c0, vt0.c0, rt0.c1 UNION SELECT vt1.c0, vt0.c0, rt0.c1 FROM rt0, vt1, vt0 WHERE ((NOT ((1071888316 IN (((0.8181560714843845)||(rt0.c0)), vt1.c0))))) GROUP BY vt1.c0, vt0.c0, rt0.c1 UNION SELECT ALL vt1.c0, vt0.c0, rt0.c1 FROM rt0, vt1, vt0 WHERE ((((1071888316 IN (((0.8181560714843845)||(rt0.c0)), vt1.c0))) ISNULL)) GROUP BY vt1.c0, vt0.c0, rt0.c1;
SELECT ALL vt1.c0, vt0.c0, rt0.c1 FROM rt0, vt1, vt0 GROUP BY vt1.c0, vt0.c0, rt0.c1;
SELECT ALL v0.c1, v0.c2, vt1.c0, v0.c0, rt0.c2 FROM v0, rt0, vt1 GROUP BY v0.c1, v0.c2, vt1.c0, v0.c0, rt0.c2;
SELECT ALL v0.c1, v0.c2, vt1.c0, v0.c0, rt0.c2 FROM v0 NOT INDEXED, rt0, vt1 GROUP BY v0.c1, v0.c2, vt1.c0, v0.c0, rt0.c2 HAVING NULL UNION ALL SELECT v0.c1, v0.c2, vt1.c0, v0.c0, rt0.c2 FROM v0, rt0, vt1 GROUP BY v0.c1, v0.c2, vt1.c0, v0.c0, rt0.c2 HAVING (NOT (NULL)) UNION ALL SELECT ALL v0.c1, v0.c2, vt1.c0, v0.c0, rt0.c2 FROM v0, rt0, vt1 GROUP BY v0.c1, v0.c2, vt1.c0, v0.c0, rt0.c2 HAVING ((NULL) ISNULL);
SELECT ALL v0.c1, v0.c2, vt1.c0, v0.c0, rt0.c2 FROM v0, rt0, vt1 GROUP BY v0.c1, v0.c2, vt1.c0, v0.c0, rt0.c2;
SELECT ALL v0.c1, v0.c2, vt1.c0, v0.c0, rt0.c2 FROM v0 NOT INDEXED, rt0, vt1 GROUP BY v0.c1, v0.c2, vt1.c0, v0.c0, rt0.c2 HAVING NULL UNION ALL SELECT v0.c1, v0.c2, vt1.c0, v0.c0, rt0.c2 FROM v0, rt0, vt1 GROUP BY v0.c1, v0.c2, vt1.c0, v0.c0, rt0.c2 HAVING (NOT (NULL)) UNION ALL SELECT ALL v0.c1, v0.c2, vt1.c0, v0.c0, rt0.c2 FROM v0, rt0, vt1 GROUP BY v0.c1, v0.c2, vt1.c0, v0.c0, rt0.c2 HAVING ((NULL) ISNULL);
SELECT ALL v0.c1, v0.c2, vt1.c0, v0.c0, rt0.c2 FROM v0, rt0, vt1 GROUP BY v0.c1, v0.c2, vt1.c0, v0.c0, rt0.c2;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ('OX7H') UNION ALL SELECT * FROM rt0 WHERE ((NOT ('OX7H'))) UNION ALL SELECT * FROM rt0 WHERE ((('OX7H') ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c1, v0.c0, vt0.c0, rt0.c0 FROM vt1, vt0, v0, rt0;
SELECT DISTINCT rt0.c1, v0.c0, vt0.c0, rt0.c0 FROM vt1, vt0, v0, rt0 WHERE (((ABS(rt0.c2))%(CAST(v0.c1 AS NUMERIC)))) UNION SELECT DISTINCT rt0.c1, v0.c0, vt0.c0, rt0.c0 FROM vt1, vt0, v0, rt0 WHERE ((NOT (((ABS(rt0.c2))%(CAST(v0.c1 AS NUMERIC)))))) UNION SELECT DISTINCT rt0.c1, v0.c0, vt0.c0, rt0.c0 FROM vt1, vt0, v0, rt0 WHERE (((((ABS(rt0.c2))%(CAST(v0.c1 AS NUMERIC)))) ISNULL));
SELECT DISTINCT rt0.c1, v0.c0, vt0.c0, rt0.c0 FROM vt1, vt0, v0, rt0;
SELECT v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0;
SELECT v0.c2, v0.c1, v0.c0 FROM v0 WHERE (v0.c2) GROUP BY v0.c2, v0.c1, v0.c0 UNION SELECT v0.c2, v0.c1, v0.c0 FROM v0 WHERE ((NOT (v0.c2))) GROUP BY v0.c2, v0.c1, v0.c0 UNION SELECT ALL v0.c2, v0.c1, v0.c0 FROM v0 WHERE (((v0.c2) ISNULL)) GROUP BY v0.c2, v0.c1, v0.c0;
SELECT v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0;
SELECT ALL v0.c0, rt0.c1, vt1.c0, rt0.c2, vt0.c0 FROM rt0 CROSS JOIN v0 ON ((0.6989221285484103) NOT BETWEEN ((~ (v0.c2))) AND (((v0.c2) IS TRUE))) CROSS JOIN vt1 ON CASE WHEN ((rt0.c2)IS(v0.c0)) THEN v0.c1 WHEN ((v0.c0)<<('1517945141')) THEN ((vt0.c0)<=('0m]+0')) WHEN 0.1843632329055428 THEN ((((vt1.c0)OR(vt0.c0)))AND(v0.c0)) END CROSS JOIN vt0 ON (((((rt0.c0)*(rt0.c0)), NULL, 'fvKR}RZ&'))=((0.5318220326601503, ((((v0.c2)AND(v0.c0)))AND(rt0.c0)), ((rt0.c0)<<(v0.c0))))) GROUP BY v0.c0, rt0.c1, vt1.c0, rt0.c2, vt0.c0;
SELECT ALL v0.c0, rt0.c1, vt1.c0, rt0.c2, vt0.c0 FROM rt0 CROSS JOIN v0 ON ((0.6989221285484103) NOT BETWEEN ((~ (v0.c2))) AND (((v0.c2) IS TRUE))) CROSS JOIN vt1 ON CASE WHEN ((rt0.c2)IS(v0.c0)) THEN v0.c1 WHEN ((v0.c0)<<('1517945141')) THEN ((vt0.c0)<=('0m]+0')) WHEN 0.1843632329055428 THEN ((((vt1.c0)OR(vt0.c0)))AND(v0.c0)) END CROSS JOIN vt0 ON (((((rt0.c0)*(rt0.c0)), NULL, 'fvKR}RZ&'))==((0.5318220326601503, ((((v0.c2)AND(v0.c0)))AND(rt0.c0)), ((rt0.c0)<<(v0.c0))))) GROUP BY v0.c0, rt0.c1, vt1.c0, rt0.c2, vt0.c0 HAVING ABS(DISTINCT (NOT (rt0.c2))) UNION ALL SELECT ALL v0.c0, rt0.c1, vt1.c0, rt0.c2, vt0.c0 FROM rt0 CROSS JOIN v0 ON ((0.6989221285484103) NOT BETWEEN ((~ (v0.c2))) AND (((v0.c2) IS TRUE))) CROSS JOIN vt1 ON CASE WHEN ((rt0.c2)IS(v0.c0)) THEN v0.c1 WHEN ((v0.c0)<<('1517945141')) THEN ((vt0.c0)<=('0m]+0')) WHEN 0.1843632329055428 THEN ((((vt1.c0)OR(vt0.c0)))AND(v0.c0)) END CROSS JOIN vt0 ON (((((rt0.c0)*(rt0.c0)), NULL, 'fvKR}RZ&'))==((0.5318220326601503, ((((v0.c2)AND(v0.c0)))AND(rt0.c0)), ((rt0.c0)<<(v0.c0))))) GROUP BY v0.c0, rt0.c1, vt1.c0, rt0.c2, vt0.c0 HAVING (NOT (ABS(DISTINCT (NOT (rt0.c2))))) UNION ALL SELECT ALL v0.c0, rt0.c1, vt1.c0, rt0.c2, vt0.c0 FROM rt0 CROSS JOIN v0 ON ((0.6989221285484103) NOT BETWEEN ((~ (v0.c2))) AND (((v0.c2) IS TRUE))) CROSS JOIN vt1 ON CASE WHEN ((rt0.c2)IS(v0.c0)) THEN v0.c1 WHEN ((v0.c0)<<('1517945141')) THEN ((vt0.c0)<=('0m]+0')) WHEN 0.1843632329055428 THEN ((((vt1.c0)OR(vt0.c0)))AND(v0.c0)) END CROSS JOIN vt0 ON (((((rt0.c0)*(rt0.c0)), NULL, 'fvKR}RZ&'))=((0.5318220326601503, ((((v0.c2)AND(v0.c0)))AND(rt0.c0)), ((rt0.c0)<<(v0.c0))))) GROUP BY v0.c0, rt0.c1, vt1.c0, rt0.c2, vt0.c0 HAVING ((ABS(DISTINCT (NOT (rt0.c2)))) ISNULL);
SELECT ALL v0.c0, rt0.c1, vt1.c0, rt0.c2, vt0.c0 FROM rt0 CROSS JOIN v0 ON ((0.6989221285484103) NOT BETWEEN ((~ (v0.c2))) AND (((v0.c2) IS TRUE))) CROSS JOIN vt1 ON CASE WHEN ((rt0.c2)IS(v0.c0)) THEN v0.c1 WHEN ((v0.c0)<<('1517945141')) THEN ((vt0.c0)<=('0m]+0')) WHEN 0.1843632329055428 THEN ((((vt1.c0)OR(vt0.c0)))AND(v0.c0)) END CROSS JOIN vt0 ON (((((rt0.c0)*(rt0.c0)), NULL, 'fvKR}RZ&'))=((0.5318220326601503, ((((v0.c2)AND(v0.c0)))AND(rt0.c0)), ((rt0.c0)<<(v0.c0))))) GROUP BY v0.c0, rt0.c1, vt1.c0, rt0.c2, vt0.c0;
SELECT ALL v0.c0, rt0.c1, vt1.c0, rt0.c2, vt0.c0 FROM rt0 CROSS JOIN v0 ON ((0.6989221285484103) NOT BETWEEN ((~ (v0.c2))) AND (((v0.c2) IS TRUE))) CROSS JOIN vt1 ON CASE WHEN ((rt0.c2)IS(v0.c0)) THEN v0.c1 WHEN ((v0.c0)<<('1517945141')) THEN ((vt0.c0)<=('0m]+0')) WHEN 0.1843632329055428 THEN ((((vt1.c0)OR(vt0.c0)))AND(v0.c0)) END CROSS JOIN vt0 ON (((((rt0.c0)*(rt0.c0)), NULL, 'fvKR}RZ&'))==((0.5318220326601503, ((((v0.c2)AND(v0.c0)))AND(rt0.c0)), ((rt0.c0)<<(v0.c0))))) GROUP BY v0.c0, rt0.c1, vt1.c0, rt0.c2, vt0.c0 HAVING ABS(DISTINCT (NOT (rt0.c2))) UNION ALL SELECT ALL v0.c0, rt0.c1, vt1.c0, rt0.c2, vt0.c0 FROM rt0 CROSS JOIN v0 ON ((0.6989221285484103) NOT BETWEEN ((~ (v0.c2))) AND (((v0.c2) IS TRUE))) CROSS JOIN vt1 ON CASE WHEN ((rt0.c2)IS(v0.c0)) THEN v0.c1 WHEN ((v0.c0)<<('1517945141')) THEN ((vt0.c0)<=('0m]+0')) WHEN 0.1843632329055428 THEN ((((vt1.c0)OR(vt0.c0)))AND(v0.c0)) END CROSS JOIN vt0 ON (((((rt0.c0)*(rt0.c0)), NULL, 'fvKR}RZ&'))==((0.5318220326601503, ((((v0.c2)AND(v0.c0)))AND(rt0.c0)), ((rt0.c0)<<(v0.c0))))) GROUP BY v0.c0, rt0.c1, vt1.c0, rt0.c2, vt0.c0 HAVING (NOT (ABS(DISTINCT (NOT (rt0.c2))))) UNION ALL SELECT ALL v0.c0, rt0.c1, vt1.c0, rt0.c2, vt0.c0 FROM rt0 CROSS JOIN v0 ON ((0.6989221285484103) NOT BETWEEN ((~ (v0.c2))) AND (((v0.c2) IS TRUE))) CROSS JOIN vt1 ON CASE WHEN ((rt0.c2)IS(v0.c0)) THEN v0.c1 WHEN ((v0.c0)<<('1517945141')) THEN ((vt0.c0)<=('0m]+0')) WHEN 0.1843632329055428 THEN ((((vt1.c0)OR(vt0.c0)))AND(v0.c0)) END CROSS JOIN vt0 ON (((((rt0.c0)*(rt0.c0)), NULL, 'fvKR}RZ&'))=((0.5318220326601503, ((((v0.c2)AND(v0.c0)))AND(rt0.c0)), ((rt0.c0)<<(v0.c0))))) GROUP BY v0.c0, rt0.c1, vt1.c0, rt0.c2, vt0.c0 HAVING ((ABS(DISTINCT (NOT (rt0.c2)))) ISNULL);
SELECT ALL v0.c0, rt0.c1, vt1.c0, rt0.c2, vt0.c0 FROM rt0 CROSS JOIN v0 ON ((0.6989221285484103) NOT BETWEEN ((~ (v0.c2))) AND (((v0.c2) IS TRUE))) CROSS JOIN vt1 ON CASE WHEN ((rt0.c2)IS(v0.c0)) THEN v0.c1 WHEN ((v0.c0)<<('1517945141')) THEN ((vt0.c0)<=('0m]+0')) WHEN 0.1843632329055428 THEN ((((vt1.c0)OR(vt0.c0)))AND(v0.c0)) END CROSS JOIN vt0 ON (((((rt0.c0)*(rt0.c0)), NULL, 'fvKR}RZ&'))=((0.5318220326601503, ((((v0.c2)AND(v0.c0)))AND(rt0.c0)), ((rt0.c0)<<(v0.c0))))) GROUP BY v0.c0, rt0.c1, vt1.c0, rt0.c2, vt0.c0;
SELECT v0.c1, v0.c0, v0.c2, vt0.c0 FROM v0, vt1, vt0;
SELECT ALL v0.c1, v0.c0, v0.c2, vt0.c0 FROM v0, vt1, vt0 WHERE (((CASE WHEN v0.c0 THEN v0.c1 END)AND(vt1.c0 COLLATE BINARY))) UNION ALL SELECT v0.c1, v0.c0, v0.c2, vt0.c0 FROM v0, vt1, vt0 WHERE ((NOT (((CASE WHEN v0.c0 THEN v0.c1 END)AND(vt1.c0 COLLATE BINARY))))) UNION ALL SELECT v0.c1, v0.c0, v0.c2, vt0.c0 FROM v0, vt1, vt0 WHERE (((((CASE WHEN v0.c0 THEN v0.c1 END)AND(vt1.c0 COLLATE BINARY))) ISNULL));
SELECT v0.c1, v0.c0, v0.c2, vt0.c0 FROM v0, vt1, vt0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE ((((rt0.c0) NOT BETWEEN (v0.c0) AND (-2.28514884E8)) IN ())) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT ((((rt0.c0) NOT BETWEEN (v0.c0) AND (-2.28514884E8)) IN ())))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((((((rt0.c0) NOT BETWEEN (v0.c0) AND (-2.28514884E8)) IN ())) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT v0.c0, vt1.c0, v0.c2, v0.c1 FROM v0, vt1 GROUP BY v0.c0, vt1.c0, v0.c2, v0.c1;
SELECT v0.c0, vt1.c0, v0.c2, v0.c1 FROM v0, vt1 WHERE ((((v0.c0)<=(v0.c0)) IN ())) GROUP BY v0.c0, vt1.c0, v0.c2, v0.c1 UNION SELECT v0.c0, vt1.c0, v0.c2, v0.c1 FROM v0, vt1 WHERE ((NOT ((((v0.c0)<=(v0.c0)) IN ())))) GROUP BY v0.c0, vt1.c0, v0.c2, v0.c1 UNION SELECT ALL v0.c0, vt1.c0, v0.c2, v0.c1 FROM v0, vt1 WHERE ((((((v0.c0)<=(v0.c0)) IN ())) ISNULL)) GROUP BY v0.c0, vt1.c0, v0.c2, v0.c1;
SELECT v0.c0, vt1.c0, v0.c2, v0.c1 FROM v0, vt1 GROUP BY v0.c0, vt1.c0, v0.c2, v0.c1;
SELECT ALL v0.c1, vt1.c0, rt0.c0 FROM vt0, rt0, v0 NATURAL JOIN vt1 GROUP BY v0.c1, vt1.c0, rt0.c0;
SELECT ALL v0.c1, vt1.c0, rt0.c0 FROM vt0, rt0, v0 NATURAL JOIN vt1 GROUP BY v0.c1, vt1.c0, rt0.c0 HAVING (NOT (MAX(rt0.c0))) UNION ALL SELECT v0.c1, vt1.c0, rt0.c0 FROM vt0, rt0, v0 NATURAL JOIN vt1 GROUP BY v0.c1, vt1.c0, rt0.c0 HAVING (NOT ((NOT (MAX(rt0.c0))))) UNION ALL SELECT v0.c1, vt1.c0, rt0.c0 FROM vt0, rt0, v0 NATURAL JOIN vt1 GROUP BY v0.c1, vt1.c0, rt0.c0 HAVING (((NOT (MAX(rt0.c0)))) ISNULL);
SELECT ALL v0.c1, vt1.c0, rt0.c0 FROM vt0, rt0, v0 NATURAL JOIN vt1 GROUP BY v0.c1, vt1.c0, rt0.c0;
SELECT ALL v0.c1, vt1.c0, rt0.c0 FROM vt0, rt0, v0 NATURAL JOIN vt1 GROUP BY v0.c1, vt1.c0, rt0.c0 HAVING (NOT (MAX(rt0.c0))) UNION ALL SELECT v0.c1, vt1.c0, rt0.c0 FROM vt0, rt0, v0 NATURAL JOIN vt1 GROUP BY v0.c1, vt1.c0, rt0.c0 HAVING (NOT ((NOT (MAX(rt0.c0))))) UNION ALL SELECT v0.c1, vt1.c0, rt0.c0 FROM vt0, rt0, v0 NATURAL JOIN vt1 GROUP BY v0.c1, vt1.c0, rt0.c0 HAVING (((NOT (MAX(rt0.c0)))) ISNULL);
SELECT ALL v0.c1, vt1.c0, rt0.c0 FROM vt0, rt0, v0 NATURAL JOIN vt1 GROUP BY v0.c1, vt1.c0, rt0.c0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ('-492181748') UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ('-492181748'))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((('-492181748') ISNULL));
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c2))<=((rt0.c1))))AND((+ (rt0.c0))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((((rt0.c2))<=((rt0.c1))))AND((+ (rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((((rt0.c2))<=((rt0.c1))))AND((+ (rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((0x21794882) IS FALSE) IN ())) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((0X21794882) IS FALSE) IN ())))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((0X21794882) IS FALSE) IN ())) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING json((vt0.c0 IN ())) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (json((vt0.c0 IN ())))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((json((vt0.c0 IN ()))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING json((vt0.c0 IN ())) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (json((vt0.c0 IN ())))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((json((vt0.c0 IN ()))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0)||(vt0.c0))  WHEN ((vt0.c0) NOTNULL) THEN (((vt0.c0))=((vt0.c0))) END) UNION ALL SELECT * FROM vt0 WHERE ((NOT (CASE ((vt0.c0)||(vt0.c0))  WHEN ((vt0.c0) NOTNULL) THEN (((vt0.c0))=((vt0.c0))) END))) UNION ALL SELECT ALL * FROM vt0 WHERE (((CASE ((vt0.c0)||(vt0.c0))  WHEN ((vt0.c0) NOTNULL) THEN (((vt0.c0))==((vt0.c0))) END) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt1, vt0, v0 RIGHT OUTER JOIN rt0 ON 1918583366;
SELECT DISTINCT * FROM vt1, vt0, v0 RIGHT OUTER JOIN rt0 ON 1918583366 WHERE ('0.7427095364198507') UNION SELECT DISTINCT * FROM vt1, vt0, v0 RIGHT OUTER JOIN rt0 ON 1918583366 WHERE ((NOT ('0.7427095364198507'))) UNION SELECT DISTINCT * FROM vt1, vt0, v0 RIGHT OUTER JOIN rt0 ON 1918583366 WHERE ((('0.7427095364198507') ISNULL));
SELECT DISTINCT * FROM vt1, vt0, v0 RIGHT OUTER JOIN rt0 ON 1918583366;
SELECT rt0.c2, rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0, vt0.c0;
SELECT ALL rt0.c2, rt0.c0, vt0.c0 FROM rt0, vt0 WHERE (((x'') NOT BETWEEN (((x'')IS NOT(rt0.c0))) AND (((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) GROUP BY rt0.c2, rt0.c0, vt0.c0 UNION SELECT rt0.c2, rt0.c0, vt0.c0 FROM rt0, vt0 WHERE ((NOT (((x'') NOT BETWEEN (((x'')IS NOT(rt0.c0))) AND (((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))))) GROUP BY rt0.c2, rt0.c0, vt0.c0 UNION SELECT rt0.c2, rt0.c0, vt0.c0 FROM rt0, vt0 WHERE (((((x'') NOT BETWEEN (((x'')IS NOT(rt0.c0))) AND (((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) ISNULL)) GROUP BY rt0.c2, rt0.c0, vt0.c0;
SELECT rt0.c2, rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0, vt0.c0;
SELECT ALL rt0.c0, vt1.c0, v0.c0 FROM v0, vt1 FULL OUTER JOIN rt0 ON (((((v0.c1)||(rt0.c0)), ((vt1.c0) IS FALSE), (((rt0.c0))!=((v0.c0)))))<(((v0.c2 IN ()), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt1.c0)), (v0.c0 IN ())))) GROUP BY rt0.c0, vt1.c0, v0.c0;
SELECT rt0.c0, vt1.c0, v0.c0 FROM v0, vt1 FULL OUTER JOIN rt0 ON (((((v0.c1)||(rt0.c0)), ((vt1.c0) IS FALSE), (((rt0.c0))!=((v0.c0)))))<(((v0.c2 IN ()), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt1.c0)), (v0.c0 IN ())))) GROUP BY rt0.c0, vt1.c0, v0.c0 HAVING COUNT(CAST(SUM(SUM(v0.c0)) AS TEXT)) UNION ALL SELECT rt0.c0, vt1.c0, v0.c0 FROM v0, vt1 FULL OUTER JOIN rt0 ON (((((v0.c1)||(rt0.c0)), ((vt1.c0) IS FALSE), (((rt0.c0))!=((v0.c0)))))<(((v0.c2 IN ()), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt1.c0)), (v0.c0 IN ())))) GROUP BY rt0.c0, vt1.c0, v0.c0 HAVING (NOT (COUNT(CAST(SUM(SUM(v0.c0)) AS TEXT)))) UNION ALL SELECT rt0.c0, vt1.c0, v0.c0 FROM v0, vt1 FULL OUTER JOIN rt0 ON (((((v0.c1)||(rt0.c0)), ((vt1.c0) IS FALSE), (((rt0.c0))<>((v0.c0)))))<(((v0.c2 IN ()), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt1.c0)), (v0.c0 IN ())))) GROUP BY rt0.c0, vt1.c0, v0.c0 HAVING ((COUNT(CAST(SUM(SUM(v0.c0)) AS TEXT))) ISNULL);
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE (vt1.c0) UNION ALL SELECT * FROM vt1 WHERE ((NOT (vt1.c0))) UNION ALL SELECT ALL * FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM v0, vt0, rt0, vt1;
SELECT DISTINCT * FROM v0, vt0, rt0, vt1 WHERE ((((vt0.c0)) NOT BETWEEN ((vt1.c0 COLLATE NOCASE)) AND ((((v0.c1) ISNULL))))) UNION SELECT DISTINCT * FROM v0, vt0, rt0, vt1 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN ((vt1.c0 COLLATE NOCASE)) AND ((((v0.c1) ISNULL))))))) UNION SELECT DISTINCT * FROM v0, vt0, rt0, vt1 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt1.c0 COLLATE NOCASE)) AND ((((v0.c1) ISNULL))))) ISNULL));
SELECT DISTINCT * FROM v0, vt0, rt0, vt1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE (((((rt0.c1)AND(0.8412252152818743)))OR(rt0.c0)) COLLATE NOCASE) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c1)AND(0.8412252152818743)))OR(rt0.c0)) COLLATE NOCASE))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE (((((((rt0.c1)AND(0.8412252152818743)))OR(rt0.c0)) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c2, rt0.c0 FROM vt1, vt0 RIGHT OUTER JOIN rt0 ON (rt0.c2 IN (CAST(vt1.c0 AS NUMERIC), ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))) GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM vt1, vt0 RIGHT OUTER JOIN rt0 ON (rt0.c2 IN (CAST(vt1.c0 AS NUMERIC), ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))) GROUP BY rt0.c2, rt0.c0 HAVING ((HEX(MIN(MIN(AVG(TOTAL(rt0.c2))))))<(SUM(MIN(TOTAL(MIN(MAX(MIN(rt0.c2)))))))) UNION ALL SELECT rt0.c2, rt0.c0 FROM vt1, vt0 RIGHT OUTER JOIN rt0 ON (rt0.c2 IN (CAST(vt1.c0 AS NUMERIC), ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))) GROUP BY rt0.c2, rt0.c0 HAVING (NOT (((HEX(MIN(MIN(AVG(TOTAL(rt0.c2))))))<(SUM(MIN(TOTAL(MIN(MAX(MIN(rt0.c2)))))))))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM vt1, vt0 RIGHT OUTER JOIN rt0 ON (rt0.c2 IN (CAST(vt1.c0 AS NUMERIC), ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))) GROUP BY rt0.c2, rt0.c0 HAVING ((((HEX(MIN(MIN(AVG(TOTAL(rt0.c2))))))<(SUM(MIN(TOTAL(MIN(MAX(MIN(rt0.c2))))))))) ISNULL);
SELECT * FROM vt1, v0;
SELECT ALL * FROM vt1, v0 WHERE (CAST(((v0.c0) ISNULL) AS TEXT)) UNION ALL SELECT * FROM vt1, v0 WHERE ((NOT (CAST(((v0.c0) ISNULL) AS TEXT)))) UNION ALL SELECT * FROM vt1, v0 WHERE (((CAST(((v0.c0) ISNULL) AS TEXT)) ISNULL));
SELECT * FROM vt1, v0;
SELECT DISTINCT * FROM rt0, vt1 CROSS JOIN vt0 ON ((vt1.c0 COLLATE RTRIM) NOT BETWEEN ((('U5ﳱBZ')*(rt0.c0))) AND (CAST(v0.c0 AS TEXT))) CROSS JOIN v0 ON (((((v0.c1)) BETWEEN ((vt1.c0)) AND ((v0.c2)))) NOT NULL);
SELECT DISTINCT * FROM rt0, vt1 CROSS JOIN vt0 ON ((vt1.c0 COLLATE RTRIM) NOT BETWEEN ((('U5ﳱBZ')*(rt0.c0))) AND (CAST(v0.c0 AS TEXT))) CROSS JOIN v0 ON (((((v0.c1)) BETWEEN ((vt1.c0)) AND ((v0.c2)))) NOT NULL) WHERE (CASE WHEN (rt0.c2 IN ()) THEN ((rt0.c2) ISNULL) WHEN v0.c1 THEN ((v0.c1) ISNULL) WHEN v0.c2 COLLATE BINARY THEN NULL END) UNION SELECT DISTINCT * FROM rt0, vt1 CROSS JOIN vt0 ON ((vt1.c0 COLLATE RTRIM) NOT BETWEEN ((('U5ﳱBZ')*(rt0.c0))) AND (CAST(v0.c0 AS TEXT))) CROSS JOIN v0 ON (((((v0.c1)) BETWEEN ((vt1.c0)) AND ((v0.c2)))) NOT NULL) WHERE ((NOT (CASE WHEN (rt0.c2 IN ()) THEN ((rt0.c2) ISNULL) WHEN v0.c1 THEN ((v0.c1) ISNULL) WHEN v0.c2 COLLATE BINARY THEN NULL END))) UNION SELECT DISTINCT * FROM rt0, vt1 CROSS JOIN vt0 ON ((vt1.c0 COLLATE RTRIM) NOT BETWEEN ((('U5ﳱBZ')*(rt0.c0))) AND (CAST(v0.c0 AS TEXT))) CROSS JOIN v0 ON (((((v0.c1)) BETWEEN ((vt1.c0)) AND ((v0.c2)))) NOT NULL) WHERE (((CASE WHEN (rt0.c2 IN ()) THEN ((rt0.c2) ISNULL) WHEN v0.c1 THEN ((v0.c1) ISNULL) WHEN v0.c2 COLLATE BINARY THEN NULL END) ISNULL));
SELECT DISTINCT * FROM rt0, vt1 CROSS JOIN vt0 ON ((vt1.c0 COLLATE RTRIM) NOT BETWEEN ((('U5ﳱBZ')*(rt0.c0))) AND (CAST(v0.c0 AS TEXT))) CROSS JOIN v0 ON (((((v0.c1)) BETWEEN ((vt1.c0)) AND ((v0.c2)))) NOT NULL);
SELECT ALL v0.c2, vt0.c0, v0.c0 FROM v0 INNER JOIN vt0 ON CASE TYPEOF(v0.c1)  WHEN ((v0.c1) NOT NULL) THEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c1)) WHEN (+ (0.3175244890206832)) THEN ((v0.c1) NOT BETWEEN (vt0.c0) AND (v0.c1)) WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0)<(v0.c0)) END GROUP BY v0.c2, vt0.c0, v0.c0;
SELECT ALL v0.c2, vt0.c0, v0.c0 FROM v0 INNER JOIN vt0 ON CASE TYPEOF(v0.c1)  WHEN ((v0.c1) NOT NULL) THEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c1)) WHEN (+ (0.3175244890206832)) THEN ((v0.c1) NOT BETWEEN (vt0.c0) AND (v0.c1)) WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0)<(v0.c0)) END WHERE ((('') BETWEEN (((0.7038393435733132)&(vt0.c0))) AND (CASE v0.c2  WHEN x'' THEN NULL WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) GROUP BY v0.c2, vt0.c0, v0.c0 UNION SELECT ALL v0.c2, vt0.c0, v0.c0 FROM v0 INNER JOIN vt0 ON CASE TYPEOF(v0.c1)  WHEN ((v0.c1) NOT NULL) THEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c1)) WHEN (+ (0.3175244890206832)) THEN ((v0.c1) NOT BETWEEN (vt0.c0) AND (v0.c1)) WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0)<(v0.c0)) END WHERE ((NOT ((('') BETWEEN (((0.7038393435733132)&(vt0.c0))) AND (CASE v0.c2  WHEN x'' THEN NULL WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))))) GROUP BY v0.c2, vt0.c0, v0.c0 UNION SELECT v0.c2, vt0.c0, v0.c0 FROM v0 INNER JOIN vt0 ON CASE TYPEOF(v0.c1)  WHEN ((v0.c1) NOT NULL) THEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c1)) WHEN (+ (0.3175244890206832)) THEN ((v0.c1) NOT BETWEEN (vt0.c0) AND (v0.c1)) WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0)<(v0.c0)) END WHERE ((((('') BETWEEN (((0.7038393435733132)&(vt0.c0))) AND (CASE v0.c2  WHEN x'' THEN NULL WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) ISNULL)) GROUP BY v0.c2, vt0.c0, v0.c0;
SELECT ALL v0.c2, vt0.c0, v0.c0 FROM v0 INNER JOIN vt0 ON CASE TYPEOF(v0.c1)  WHEN ((v0.c1) NOT NULL) THEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c1)) WHEN (+ (0.3175244890206832)) THEN ((v0.c1) NOT BETWEEN (vt0.c0) AND (v0.c1)) WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0)<(v0.c0)) END GROUP BY v0.c2, vt0.c0, v0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1 INNER JOIN vt0 ON ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1 INNER JOIN vt0 ON ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM GROUP BY vt1.c0, vt0.c0 HAVING ((MIN(vt1.c0))&(MAX(vt1.c0))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt1 INNER JOIN vt0 ON ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM GROUP BY vt1.c0, vt0.c0 HAVING (NOT (((MIN(vt1.c0))&(MAX(vt1.c0))))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt1 INNER JOIN vt0 ON ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM GROUP BY vt1.c0, vt0.c0 HAVING ((((MIN(vt1.c0))&(MAX(vt1.c0)))) ISNULL);
SELECT ALL vt1.c0, vt0.c0 FROM vt1 INNER JOIN vt0 ON ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1 INNER JOIN vt0 ON ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM GROUP BY vt1.c0, vt0.c0 HAVING ((MIN(vt1.c0))&(MAX(vt1.c0))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt1 INNER JOIN vt0 ON ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM GROUP BY vt1.c0, vt0.c0 HAVING (NOT (((MIN(vt1.c0))&(MAX(vt1.c0))))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt1 INNER JOIN vt0 ON ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM GROUP BY vt1.c0, vt0.c0 HAVING ((((MIN(vt1.c0))&(MAX(vt1.c0)))) ISNULL);
SELECT ALL vt1.c0, vt0.c0 FROM vt1 INNER JOIN vt0 ON ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, v0.c1 FROM vt1, v0;
SELECT ALL vt1.c0, v0.c1 FROM vt1, v0 WHERE (CASE WHEN ((vt1.c0) NOTNULL) THEN ((v0.c1) BETWEEN (v0.c1) AND (v0.c1)) ELSE ((vt1.c0) ISNULL) END) UNION ALL SELECT vt1.c0, v0.c1 FROM vt1, v0 WHERE ((NOT (CASE WHEN ((vt1.c0) NOTNULL) THEN ((v0.c1) BETWEEN (v0.c1) AND (v0.c1)) ELSE ((vt1.c0) ISNULL) END))) UNION ALL SELECT vt1.c0, v0.c1 FROM vt1, v0 WHERE (((CASE WHEN ((vt1.c0) NOTNULL) THEN ((v0.c1) BETWEEN (v0.c1) AND (v0.c1)) ELSE ((vt1.c0) ISNULL) END) ISNULL));
SELECT vt1.c0, v0.c1 FROM vt1, v0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 NOT INDEXED WHERE (CAST(CASE WHEN vt0.c0 THEN '-921091502' END AS NUMERIC)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CAST(CASE WHEN vt0.c0 THEN '-921091502' END AS NUMERIC)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CAST(CASE WHEN vt0.c0 THEN '-921091502' END AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL v0.c1, v0.c0, v0.c2, vt0.c0 FROM vt0 NATURAL JOIN v0 GROUP BY v0.c1, v0.c0, v0.c2, vt0.c0;
SELECT v0.c1, v0.c0, v0.c2, vt0.c0 FROM vt0 NATURAL JOIN v0 WHERE ((((v0.c2)) BETWEEN ((((vt0.c0)<=(v0.c1)))) AND ((0X1)))) GROUP BY v0.c1, v0.c0, v0.c2, vt0.c0 UNION SELECT ALL v0.c1, v0.c0, v0.c2, vt0.c0 FROM vt0 NATURAL JOIN v0 WHERE ((NOT ((((v0.c2)) BETWEEN ((((vt0.c0)<=(v0.c1)))) AND ((0x1)))))) GROUP BY v0.c1, v0.c0, v0.c2, vt0.c0 UNION SELECT ALL v0.c1, v0.c0, v0.c2, vt0.c0 FROM vt0 NATURAL JOIN v0 WHERE ((((((v0.c2)) BETWEEN ((((vt0.c0)<=(v0.c1)))) AND ((0x1)))) ISNULL)) GROUP BY v0.c1, v0.c0, v0.c2, vt0.c0;
SELECT ALL v0.c1, v0.c0, v0.c2, vt0.c0 FROM vt0 NATURAL JOIN v0 GROUP BY v0.c1, v0.c0, v0.c2, vt0.c0;
SELECT ALL v0.c2, rt0.c1, v0.c0, v0.c1, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY v0.c2, rt0.c1, v0.c0, v0.c1, rt0.c0, rt0.c2;
SELECT ALL v0.c2, rt0.c1, v0.c0, v0.c1, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY v0.c2, rt0.c1, v0.c0, v0.c1, rt0.c0, rt0.c2 HAVING MIN(TOTAL(COUNT(rt0.c0))) UNION ALL SELECT v0.c2, rt0.c1, v0.c0, v0.c1, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY v0.c2, rt0.c1, v0.c0, v0.c1, rt0.c0, rt0.c2 HAVING (NOT (MIN(TOTAL(COUNT(rt0.c0))))) UNION ALL SELECT v0.c2, rt0.c1, v0.c0, v0.c1, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY v0.c2, rt0.c1, v0.c0, v0.c1, rt0.c0, rt0.c2 HAVING ((MIN(TOTAL(COUNT(rt0.c0)))) ISNULL);
SELECT v0.c0, rt0.c0, v0.c2, v0.c1 FROM rt0 LEFT OUTER JOIN v0 ON 0.7523352505325004;
SELECT v0.c0, rt0.c0, v0.c2, v0.c1 FROM rt0 LEFT OUTER JOIN v0 ON 0.7523352505325004 WHERE (LIKELY(DISTINCT CASE rt0.c2  WHEN v0.c1 THEN v0.c0 ELSE rt0.c0 END)) UNION ALL SELECT v0.c0, rt0.c0, v0.c2, v0.c1 FROM rt0 LEFT OUTER JOIN v0 ON 0.7523352505325004 WHERE ((NOT (LIKELY(DISTINCT CASE rt0.c2  WHEN v0.c1 THEN v0.c0 ELSE rt0.c0 END)))) UNION ALL SELECT ALL v0.c0, rt0.c0, v0.c2, v0.c1 FROM rt0 LEFT OUTER JOIN v0 ON 0.7523352505325004 WHERE (((LIKELY(DISTINCT CASE rt0.c2  WHEN v0.c1 THEN v0.c0 ELSE rt0.c0 END)) ISNULL));
SELECT v0.c0, rt0.c0, v0.c2, v0.c1 FROM rt0 LEFT OUTER JOIN v0 ON 0.7523352505325004;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c1) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM vt1, rt0 WHERE ((((rt0.c1)) BETWEEN ((rt0.c1 COLLATE BINARY)) AND ((CASE '1656717758'  WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM vt1, rt0 WHERE ((NOT ((((rt0.c1)) BETWEEN ((rt0.c1 COLLATE BINARY)) AND ((CASE '1656717758'  WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM vt1, rt0 WHERE ((((((rt0.c1)) BETWEEN ((rt0.c1 COLLATE BINARY)) AND ((CASE '1656717758'  WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)))) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c0, v0.c1, vt0.c0, v0.c0, v0.c2, rt0.c2 FROM v0, rt0, vt0 GROUP BY rt0.c0, v0.c1, vt0.c0, v0.c0, v0.c2, rt0.c2;
SELECT rt0.c0, v0.c1, vt0.c0, v0.c0, v0.c2, rt0.c2 FROM v0, rt0, vt0 GROUP BY rt0.c0, v0.c1, vt0.c0, v0.c0, v0.c2, rt0.c2 HAVING MAX(AVG(GROUP_CONCAT(vt0.c0))) UNION ALL SELECT rt0.c0, v0.c1, vt0.c0, v0.c0, v0.c2, rt0.c2 FROM v0, rt0, vt0 GROUP BY rt0.c0, v0.c1, vt0.c0, v0.c0, v0.c2, rt0.c2 HAVING (NOT (MAX(AVG(GROUP_CONCAT(vt0.c0))))) UNION ALL SELECT ALL rt0.c0, v0.c1, vt0.c0, v0.c0, v0.c2, rt0.c2 FROM v0, rt0, vt0 GROUP BY rt0.c0, v0.c1, vt0.c0, v0.c0, v0.c2, rt0.c2 HAVING ((MAX(AVG(GROUP_CONCAT(vt0.c0)))) ISNULL);
SELECT ALL TOTAL(((((v0.c0) BETWEEN (v0.c2) AND (vt1.c0)))LIKE((- (v0.c0))))) FROM v0, vt1, vt0;
SELECT rt0.c1, rt0.c2, rt0.c0, v0.c0, vt0.c0, v0.c1, vt1.c0, v0.c2 FROM v0, vt0, vt1, rt0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, v0.c0, vt0.c0, v0.c1, vt1.c0, v0.c2 FROM v0, vt0, vt1, rt0 WHERE (((NULL)>(v0.c1))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0, v0.c0, vt0.c0, v0.c1, vt1.c0, v0.c2 FROM v0, vt0, vt1, rt0 WHERE ((NOT (((NULL)>(v0.c1))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0, v0.c0, vt0.c0, v0.c1, vt1.c0, v0.c2 FROM v0, vt0, vt1, rt0 WHERE (((((NULL)>(v0.c1))) ISNULL));
SELECT rt0.c1, rt0.c2, rt0.c0, v0.c0, vt0.c0, v0.c1, vt1.c0, v0.c2 FROM v0, vt0, vt1, rt0;
SELECT DISTINCT v0.c1, rt0.c1, v0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON COALESCE(DISTINCT ((rt0.c0) NOT BETWEEN (v0.c2) AND (rt0.c2)), ((((v0.c0)AND(NULL)))AND(rt0.c1)));
SELECT DISTINCT v0.c1, rt0.c1, v0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON COALESCE(DISTINCT ((rt0.c0) NOT BETWEEN (v0.c2) AND (rt0.c2)), ((((v0.c0)AND(NULL)))AND(rt0.c1))) WHERE (('' IN (((v0.c0)<=(rt0.c0))))) UNION SELECT DISTINCT v0.c1, rt0.c1, v0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON COALESCE(DISTINCT ((rt0.c0) NOT BETWEEN (v0.c2) AND (rt0.c2)), ((((v0.c0)AND(NULL)))AND(rt0.c1))) WHERE ((NOT (('' IN (((v0.c0)<=(rt0.c0))))))) UNION SELECT DISTINCT v0.c1, rt0.c1, v0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON COALESCE(DISTINCT ((rt0.c0) NOT BETWEEN (v0.c2) AND (rt0.c2)), ((((v0.c0)AND(NULL)))AND(rt0.c1))) WHERE (((('' IN (((v0.c0)<=(rt0.c0))))) ISNULL));
SELECT DISTINCT v0.c1, rt0.c1, v0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON COALESCE(DISTINCT ((rt0.c0) NOT BETWEEN (v0.c2) AND (rt0.c2)), ((((v0.c0)AND(NULL)))AND(rt0.c1)));
SELECT ALL rt0.c2, v0.c2, rt0.c0, v0.c1, v0.c0, vt0.c0, rt0.c1 FROM vt0, v0, rt0 GROUP BY rt0.c2, v0.c2, rt0.c0, v0.c1, v0.c0, vt0.c0, rt0.c1;
SELECT ALL rt0.c2, v0.c2, rt0.c0, v0.c1, v0.c0, vt0.c0, rt0.c1 FROM vt0, v0, rt0 WHERE ((rt0.c0 IN (TYPEOF(v0.c1)))) GROUP BY rt0.c2, v0.c2, rt0.c0, v0.c1, v0.c0, vt0.c0, rt0.c1 UNION SELECT rt0.c2, v0.c2, rt0.c0, v0.c1, v0.c0, vt0.c0, rt0.c1 FROM vt0, v0, rt0 WHERE ((NOT ((rt0.c0 IN (TYPEOF(v0.c1)))))) GROUP BY rt0.c2, v0.c2, rt0.c0, v0.c1, v0.c0, vt0.c0, rt0.c1 UNION SELECT rt0.c2, v0.c2, rt0.c0, v0.c1, v0.c0, vt0.c0, rt0.c1 FROM vt0, v0, rt0 WHERE ((((rt0.c0 IN (TYPEOF(v0.c1)))) ISNULL)) GROUP BY rt0.c2, v0.c2, rt0.c0, v0.c1, v0.c0, vt0.c0, rt0.c1;
SELECT ALL rt0.c2, v0.c2, rt0.c0, v0.c1, v0.c0, vt0.c0, rt0.c1 FROM vt0, v0, rt0 GROUP BY rt0.c2, v0.c2, rt0.c0, v0.c1, v0.c0, vt0.c0, rt0.c1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING CASE WHEN TOTAL(AVG(vt1.c0)) THEN SUM(AVG(COUNT(*))) ELSE COUNT(*) END COLLATE BINARY UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (CASE WHEN TOTAL(AVG(vt1.c0)) THEN SUM(AVG(COUNT(*))) ELSE COUNT(*) END COLLATE BINARY)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((CASE WHEN TOTAL(AVG(vt1.c0)) THEN SUM(AVG(COUNT(*))) ELSE COUNT(*) END COLLATE BINARY) ISNULL);
SELECT ALL v0.c1 FROM v0 RIGHT OUTER JOIN rt0 ON (+ (CASE WHEN rt0.c2 THEN v0.c0 WHEN rt0.c2 THEN v0.c2 WHEN v0.c2 THEN v0.c0 END));
SELECT ALL v0.c1 FROM v0 RIGHT OUTER JOIN rt0 ON (+ (CASE WHEN rt0.c2 THEN v0.c0 WHEN rt0.c2 THEN v0.c2 WHEN v0.c2 THEN v0.c0 END)) WHERE (((CASE WHEN NULL THEN '' ELSE rt0.c2 END)LIKE(v0.c1 COLLATE BINARY))) UNION ALL SELECT v0.c1 FROM v0 RIGHT OUTER JOIN rt0 ON (+ (CASE WHEN rt0.c2 THEN v0.c0 WHEN rt0.c2 THEN v0.c2 WHEN v0.c2 THEN v0.c0 END)) WHERE ((NOT (((CASE WHEN NULL THEN '' ELSE rt0.c2 END)LIKE(v0.c1 COLLATE BINARY))))) UNION ALL SELECT ALL v0.c1 FROM v0 RIGHT OUTER JOIN rt0 ON (+ (CASE WHEN rt0.c2 THEN v0.c0 WHEN rt0.c2 THEN v0.c2 WHEN v0.c2 THEN v0.c0 END)) WHERE (((((CASE WHEN NULL THEN '' ELSE rt0.c2 END)LIKE(v0.c1 COLLATE BINARY))) ISNULL));
SELECT ALL v0.c1 FROM v0 RIGHT OUTER JOIN rt0 ON (+ (CASE WHEN rt0.c2 THEN v0.c0 WHEN rt0.c2 THEN v0.c2 WHEN v0.c2 THEN v0.c0 END));
SELECT DISTINCT rt0.c1, vt1.c0 FROM vt1, vt0 RIGHT OUTER JOIN rt0 ON ((CAST(vt1.c0 AS TEXT))>(((rt0.c2)LIKE(rt0.c1))));
SELECT DISTINCT rt0.c1, vt1.c0 FROM vt1, vt0 RIGHT OUTER JOIN rt0 ON ((CAST(vt1.c0 AS TEXT))>(((rt0.c2)LIKE(rt0.c1)))) WHERE (vt1.c0) UNION SELECT DISTINCT rt0.c1, vt1.c0 FROM vt1, vt0 RIGHT OUTER JOIN rt0 ON ((CAST(vt1.c0 AS TEXT))>(((rt0.c2)LIKE(rt0.c1)))) WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT rt0.c1, vt1.c0 FROM vt1, vt0 RIGHT OUTER JOIN rt0 ON ((CAST(vt1.c0 AS TEXT))>(((rt0.c2)LIKE(rt0.c1)))) WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT rt0.c1, vt1.c0 FROM vt1, vt0 RIGHT OUTER JOIN rt0 ON ((CAST(vt1.c0 AS TEXT))>(((rt0.c2)LIKE(rt0.c1))));
SELECT vt0.c0, v0.c0, vt1.c0, rt0.c1 FROM rt0, v0, vt1, vt0 GROUP BY vt0.c0, v0.c0, vt1.c0, rt0.c1;
SELECT ALL vt0.c0, v0.c0, vt1.c0, rt0.c1 FROM rt0, v0, vt1, vt0 WHERE (((((v0.c2)%(v0.c0))) NOT BETWEEN (((vt0.c0) BETWEEN (rt0.c1) AND (vt1.c0))) AND (rt0.c2))) GROUP BY vt0.c0, v0.c0, vt1.c0, rt0.c1 UNION SELECT vt0.c0, v0.c0, vt1.c0, rt0.c1 FROM rt0, v0, vt1, vt0 WHERE ((NOT (((((v0.c2)%(v0.c0))) NOT BETWEEN (((vt0.c0) BETWEEN (rt0.c1) AND (vt1.c0))) AND (rt0.c2))))) GROUP BY vt0.c0, v0.c0, vt1.c0, rt0.c1 UNION SELECT ALL vt0.c0, v0.c0, vt1.c0, rt0.c1 FROM rt0, v0, vt1, vt0 WHERE (((((((v0.c2)%(v0.c0))) NOT BETWEEN (((vt0.c0) BETWEEN (rt0.c1) AND (vt1.c0))) AND (rt0.c2))) ISNULL)) GROUP BY vt0.c0, v0.c0, vt1.c0, rt0.c1;
SELECT vt0.c0, v0.c0, vt1.c0, rt0.c1 FROM rt0, v0, vt1, vt0 GROUP BY vt0.c0, v0.c0, vt1.c0, rt0.c1;
SELECT ALL v0.c0 FROM v0, rt0, vt0, vt1 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, rt0, vt0, vt1 GROUP BY v0.c0 HAVING vt1.c0 UNION ALL SELECT ALL v0.c0 FROM v0, rt0, vt0, vt1 GROUP BY v0.c0 HAVING (NOT (vt1.c0)) UNION ALL SELECT ALL v0.c0 FROM v0, rt0, vt0, vt1 GROUP BY v0.c0 HAVING ((vt1.c0) ISNULL);
SELECT ALL v0.c0 FROM v0, rt0, vt0, vt1 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, rt0, vt0, vt1 GROUP BY v0.c0 HAVING vt1.c0 UNION ALL SELECT ALL v0.c0 FROM v0, rt0, vt0, vt1 GROUP BY v0.c0 HAVING (NOT (vt1.c0)) UNION ALL SELECT ALL v0.c0 FROM v0, rt0, vt0, vt1 GROUP BY v0.c0 HAVING ((vt1.c0) ISNULL);
SELECT ALL v0.c0 FROM v0, rt0, vt0, vt1 GROUP BY v0.c0;
SELECT MIN(TYPEOF(DISTINCT ROUND(rt0.c2, rt0.c2))) FROM rt0, vt1, vt0, v0 ORDER BY v0.c0 COLLATE BINARY ASC  NULLS FIRST;
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (vt0.c0) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0, v0, rt0, vt1;
SELECT DISTINCT * FROM vt0, v0, rt0, vt1 WHERE ('1918583366') UNION SELECT DISTINCT * FROM vt0, v0, rt0, vt1 WHERE ((NOT ('1918583366'))) UNION SELECT DISTINCT * FROM vt0, v0, rt0, vt1 WHERE ((('1918583366') ISNULL));
SELECT DISTINCT * FROM vt0, v0, rt0, vt1;
SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1;
SELECT v0.c2, v0.c0, v0.c1 FROM v0 WHERE ((((v0.c2, v0.c1, v0.c0))<>((v0.c1, v0.c0, v0.c2))) COLLATE BINARY) GROUP BY v0.c2, v0.c0, v0.c1 UNION SELECT v0.c2, v0.c0, v0.c1 FROM v0 WHERE ((NOT ((((v0.c2, v0.c1, v0.c0))!=((v0.c1, v0.c0, v0.c2))) COLLATE BINARY))) GROUP BY v0.c2, v0.c0, v0.c1 UNION SELECT v0.c2, v0.c0, v0.c1 FROM v0 WHERE ((((((v0.c2, v0.c1, v0.c0))!=((v0.c1, v0.c0, v0.c2))) COLLATE BINARY) ISNULL)) GROUP BY v0.c2, v0.c0, v0.c1;
SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT('316572076')) IS FALSE) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((COUNT('316572076')) IS FALSE))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((COUNT('316572076')) IS FALSE)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT('316572076')) IS FALSE) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((COUNT('316572076')) IS FALSE))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((COUNT('316572076')) IS FALSE)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c2, v0.c1 FROM rt0, v0, vt1;
SELECT ALL rt0.c2, v0.c1 FROM rt0, v0, vt1 WHERE (((LIKELIHOOD(v0.c0, 0.7928536352178865)) NOT NULL)) UNION ALL SELECT rt0.c2, v0.c1 FROM rt0, v0, vt1 WHERE ((NOT (((LIKELIHOOD(v0.c0, 0.7928536352178865)) NOT NULL)))) UNION ALL SELECT rt0.c2, v0.c1 FROM rt0, v0, vt1 WHERE (((((LIKELIHOOD(v0.c0, 0.7928536352178865)) NOT NULL)) ISNULL));
SELECT rt0.c2, v0.c1 FROM rt0, v0, vt1;
SELECT DISTINCT * FROM rt0, v0, vt0, vt1;
SELECT DISTINCT * FROM rt0, v0, vt0, vt1 WHERE (((((v0.c1) NOT BETWEEN (rt0.c1) AND (v0.c2)))LIKE(((v0.c0)%(v0.c2))))) UNION SELECT DISTINCT * FROM rt0, v0, vt0, vt1 WHERE ((NOT (((((v0.c1) NOT BETWEEN (rt0.c1) AND (v0.c2)))LIKE(((v0.c0)%(v0.c2))))))) UNION SELECT DISTINCT * FROM rt0, v0, vt0, vt1 WHERE (((((((v0.c1) NOT BETWEEN (rt0.c1) AND (v0.c2)))LIKE(((v0.c0)%(v0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0, v0, vt0, vt1;
SELECT ALL v0.c0, rt0.c1, rt0.c2 FROM v0, vt0, rt0, vt1 GROUP BY v0.c0, rt0.c1, rt0.c2;
SELECT ALL v0.c0, rt0.c1, rt0.c2 FROM v0, vt0, rt0, vt1 WHERE (((CASE WHEN NULL THEN v0.c0 ELSE vt1.c0 END) BETWEEN (CASE WHEN vt1.c0 THEN x'' END) AND (vt0.c0 COLLATE BINARY))) GROUP BY v0.c0, rt0.c1, rt0.c2 UNION SELECT ALL v0.c0, rt0.c1, rt0.c2 FROM v0, vt0, rt0, vt1 WHERE ((NOT (((CASE WHEN NULL THEN v0.c0 ELSE vt1.c0 END) BETWEEN (CASE WHEN vt1.c0 THEN x'' END) AND (vt0.c0 COLLATE BINARY))))) GROUP BY v0.c0, rt0.c1, rt0.c2 UNION SELECT v0.c0, rt0.c1, rt0.c2 FROM v0, vt0 NOT INDEXED, rt0, vt1 WHERE (((((CASE WHEN NULL THEN v0.c0 ELSE vt1.c0 END) BETWEEN (CASE WHEN vt1.c0 THEN x'' END) AND (vt0.c0 COLLATE BINARY))) ISNULL)) GROUP BY v0.c0, rt0.c1, rt0.c2;
SELECT ALL v0.c0, rt0.c1, rt0.c2 FROM v0, vt0, rt0, vt1 GROUP BY v0.c0, rt0.c1, rt0.c2;
SELECT v0.c2, v0.c1 FROM v0, vt0 GROUP BY v0.c2, v0.c1;
SELECT ALL v0.c2, v0.c1 FROM v0, vt0 GROUP BY v0.c2, v0.c1 HAVING MAX(AVG(MIN(vt0.c0))) COLLATE NOCASE UNION ALL SELECT ALL v0.c2, v0.c1 FROM v0, vt0 GROUP BY v0.c2, v0.c1 HAVING (NOT (MAX(AVG(MIN(vt0.c0))) COLLATE NOCASE)) UNION ALL SELECT v0.c2, v0.c1 FROM v0, vt0 NOT INDEXED GROUP BY v0.c2, v0.c1 HAVING ((MAX(AVG(MIN(vt0.c0))) COLLATE NOCASE) ISNULL);
SELECT ALL * FROM vt1, vt0, v0;
SELECT * FROM vt1, vt0, v0 WHERE (CASE UPPER(vt1.c0)  WHEN (((vt0.c0)) BETWEEN ((vt1.c0)) AND ((0.8377178948756632))) THEN TOTAL_CHANGES() WHEN (- (v0.c1)) THEN ((v0.c2) NOTNULL) WHEN ((v0.c2)<(vt0.c0)) THEN CASE vt1.c0  WHEN vt0.c0 THEN NULL WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 ELSE v0.c1 END ELSE v0.c2 END) UNION ALL SELECT ALL * FROM vt1, vt0, v0 WHERE ((NOT (CASE UPPER(vt1.c0)  WHEN (((vt0.c0)) BETWEEN ((vt1.c0)) AND ((0.8377178948756632))) THEN TOTAL_CHANGES() WHEN (- (v0.c1)) THEN ((v0.c2) NOTNULL) WHEN ((v0.c2)<(vt0.c0)) THEN CASE vt1.c0  WHEN vt0.c0 THEN NULL WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 ELSE v0.c1 END ELSE v0.c2 END))) UNION ALL SELECT ALL * FROM vt1, vt0, v0 WHERE (((CASE UPPER(vt1.c0)  WHEN (((vt0.c0)) BETWEEN ((vt1.c0)) AND ((0.8377178948756632))) THEN TOTAL_CHANGES() WHEN (- (v0.c1)) THEN ((v0.c2) NOTNULL) WHEN ((v0.c2)<(vt0.c0)) THEN CASE vt1.c0  WHEN vt0.c0 THEN NULL WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 ELSE v0.c1 END ELSE v0.c2 END) ISNULL));
SELECT ALL * FROM vt1, vt0, v0;
SELECT DISTINCT * FROM rt0, vt0, vt1;
SELECT DISTINCT * FROM rt0, vt0, vt1 WHERE (((((rt0.c1)*(vt0.c0)))<(((vt0.c0)|(rt0.c0))))) UNION SELECT DISTINCT * FROM rt0, vt0, vt1 WHERE ((NOT (((((rt0.c1)*(vt0.c0)))<(((vt0.c0)|(rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0, vt0, vt1 WHERE (((((((rt0.c1)*(vt0.c0)))<(((vt0.c0)|(rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0, vt1;
SELECT v0.c0, rt0.c1 FROM v0 INNER JOIN vt1 ON ((vt1.c0)<<(((rt0.c1)<=(vt1.c0)))) LEFT OUTER JOIN vt0 ON vt0.c0 INNER JOIN rt0 ON ((CASE WHEN v0.c2 THEN rt0.c0 END) IS TRUE) GROUP BY v0.c0, rt0.c1;
SELECT ALL v0.c0, rt0.c1 FROM v0 INNER JOIN vt1 ON ((vt1.c0)<<(((rt0.c1)<=(vt1.c0)))) LEFT OUTER JOIN vt0 ON vt0.c0 INNER JOIN rt0 ON ((CASE WHEN v0.c2 THEN rt0.c0 END) IS TRUE) WHERE (((((v0.c0)|(v0.c0)))IS(((rt0.c1) BETWEEN (v0.c1) AND (v0.c0))))) GROUP BY v0.c0, rt0.c1 UNION SELECT v0.c0, rt0.c1 FROM v0 INNER JOIN vt1 ON ((vt1.c0)<<(((rt0.c1)<=(vt1.c0)))) LEFT OUTER JOIN vt0 ON vt0.c0 INNER JOIN rt0 ON ((CASE WHEN v0.c2 THEN rt0.c0 END) IS TRUE) WHERE ((NOT (((((v0.c0)|(v0.c0)))IS(((rt0.c1) BETWEEN (v0.c1) AND (v0.c0))))))) GROUP BY v0.c0, rt0.c1 UNION SELECT v0.c0, rt0.c1 FROM v0 INNER JOIN vt1 ON ((vt1.c0)<<(((rt0.c1)<=(vt1.c0)))) LEFT OUTER JOIN vt0 ON vt0.c0 INNER JOIN rt0 ON ((CASE WHEN v0.c2 THEN rt0.c0 END) IS TRUE) WHERE (((((((v0.c0)|(v0.c0)))IS(((rt0.c1) BETWEEN (v0.c1) AND (v0.c0))))) ISNULL)) GROUP BY v0.c0, rt0.c1;
SELECT v0.c0, rt0.c1 FROM v0 INNER JOIN vt1 ON ((vt1.c0)<<(((rt0.c1)<=(vt1.c0)))) LEFT OUTER JOIN vt0 ON vt0.c0 INNER JOIN rt0 ON ((CASE WHEN v0.c2 THEN rt0.c0 END) IS TRUE) GROUP BY v0.c0, rt0.c1;
SELECT v0.c2, v0.c1, rt0.c1, rt0.c2, vt0.c0, rt0.c0, v0.c0 FROM rt0, vt0, v0 RIGHT OUTER JOIN vt1 ON LIKE(vt1.c0, v0.c1 COLLATE NOCASE) GROUP BY v0.c2, v0.c1, rt0.c1, rt0.c2, vt0.c0, rt0.c0, v0.c0;
SELECT ALL v0.c2, v0.c1, rt0.c1, rt0.c2, vt0.c0, rt0.c0, v0.c0 FROM rt0, vt0, v0 RIGHT OUTER JOIN vt1 ON LIKE(vt1.c0, v0.c1 COLLATE NOCASE) GROUP BY v0.c2, v0.c1, rt0.c1, rt0.c2, vt0.c0, rt0.c0, v0.c0 HAVING (((vt0.c0 IN ())) IS FALSE) UNION ALL SELECT ALL v0.c2, v0.c1, rt0.c1, rt0.c2, vt0.c0, rt0.c0, v0.c0 FROM rt0, vt0, v0 RIGHT OUTER JOIN vt1 ON LIKE(vt1.c0, v0.c1 COLLATE NOCASE) GROUP BY v0.c2, v0.c1, rt0.c1, rt0.c2, vt0.c0, rt0.c0, v0.c0 HAVING (NOT ((((vt0.c0 IN ())) IS FALSE))) UNION ALL SELECT v0.c2, v0.c1, rt0.c1, rt0.c2, vt0.c0, rt0.c0, v0.c0 FROM rt0, vt0, v0 RIGHT OUTER JOIN vt1 ON LIKE(vt1.c0, v0.c1 COLLATE NOCASE) GROUP BY v0.c2, v0.c1, rt0.c1, rt0.c2, vt0.c0, rt0.c0, v0.c0 HAVING (((((vt0.c0 IN ())) IS FALSE)) ISNULL);
SELECT v0.c2, v0.c1, rt0.c1, rt0.c2, vt0.c0, rt0.c0, v0.c0 FROM rt0, vt0, v0 RIGHT OUTER JOIN vt1 ON LIKE(vt1.c0, v0.c1 COLLATE NOCASE) GROUP BY v0.c2, v0.c1, rt0.c1, rt0.c2, vt0.c0, rt0.c0, v0.c0;
SELECT ALL v0.c2, v0.c1, rt0.c1, rt0.c2, vt0.c0, rt0.c0, v0.c0 FROM rt0, vt0, v0 RIGHT OUTER JOIN vt1 ON LIKE(vt1.c0, v0.c1 COLLATE NOCASE) GROUP BY v0.c2, v0.c1, rt0.c1, rt0.c2, vt0.c0, rt0.c0, v0.c0 HAVING (((vt0.c0 IN ())) IS FALSE) UNION ALL SELECT ALL v0.c2, v0.c1, rt0.c1, rt0.c2, vt0.c0, rt0.c0, v0.c0 FROM rt0, vt0, v0 RIGHT OUTER JOIN vt1 ON LIKE(vt1.c0, v0.c1 COLLATE NOCASE) GROUP BY v0.c2, v0.c1, rt0.c1, rt0.c2, vt0.c0, rt0.c0, v0.c0 HAVING (NOT ((((vt0.c0 IN ())) IS FALSE))) UNION ALL SELECT v0.c2, v0.c1, rt0.c1, rt0.c2, vt0.c0, rt0.c0, v0.c0 FROM rt0, vt0, v0 RIGHT OUTER JOIN vt1 ON LIKE(vt1.c0, v0.c1 COLLATE NOCASE) GROUP BY v0.c2, v0.c1, rt0.c1, rt0.c2, vt0.c0, rt0.c0, v0.c0 HAVING (((((vt0.c0 IN ())) IS FALSE)) ISNULL);
SELECT v0.c2, v0.c1, rt0.c1, rt0.c2, vt0.c0, rt0.c0, v0.c0 FROM rt0, vt0, v0 RIGHT OUTER JOIN vt1 ON LIKE(vt1.c0, v0.c1 COLLATE NOCASE) GROUP BY v0.c2, v0.c1, rt0.c1, rt0.c2, vt0.c0, rt0.c0, v0.c0;
SELECT ALL TOTAL((((v0.c1 IN ()))IS NOT(CAST(v0.c2 AS TEXT)))) FROM v0;
SELECT ALL * FROM rt0, v0, vt1, vt0;
SELECT * FROM rt0 NOT INDEXED, v0, vt1, vt0 WHERE ((((((v0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))) NOT BETWEEN (v0.c2 COLLATE BINARY) AND (((v0.c2) BETWEEN (x'27f0') AND ('1978918704'))))) UNION ALL SELECT * FROM rt0, v0, vt1, vt0 WHERE ((NOT ((((((v0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))) NOT BETWEEN (v0.c2 COLLATE BINARY) AND (((v0.c2) BETWEEN (x'27f0') AND ('1978918704'))))))) UNION ALL SELECT * FROM rt0, v0, vt1, vt0 WHERE ((((((((v0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))) NOT BETWEEN (v0.c2 COLLATE BINARY) AND (((v0.c2) BETWEEN (x'27f0') AND ('1978918704'))))) ISNULL));
SELECT ALL * FROM rt0, v0, vt1, vt0;
SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN vt0 ON ((vt1.c0) NOT BETWEEN (((vt1.c0)<=(rt0.c2))) AND (((vt0.c0) NOT NULL))) CROSS JOIN rt0 ON ((rt0.c1)/(rt0.c1)) COLLATE BINARY;
SELECT ALL rt0.c2 FROM vt1, rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt1, rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt1.c0))) BETWEEN ((rt0.c2 IN ())) AND (((rt0.c0) BETWEEN ('I0ᵗeJ') AND (rt0.c0))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM vt1, rt0 WHERE ((NOT (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt1.c0))) BETWEEN ((rt0.c2 IN ())) AND (((rt0.c0) BETWEEN ('I0ᵗeJ') AND (rt0.c0))))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM vt1, rt0 WHERE (((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt1.c0))) BETWEEN ((rt0.c2 IN ())) AND (((rt0.c0) BETWEEN ('I0ᵗeJ') AND (rt0.c0))))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt1, rt0 GROUP BY rt0.c2;
SELECT v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1;
SELECT v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1 HAVING ((MAX(SUM(MIN(v0.c2)))) BETWEEN (COUNT(COUNT(*))) AND (GROUP_CONCAT(v0.c0))) UNION ALL SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1 HAVING (NOT (((MAX(SUM(MIN(v0.c2)))) BETWEEN (COUNT(COUNT(*))) AND (GROUP_CONCAT(v0.c0))))) UNION ALL SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1 HAVING ((((MAX(SUM(MIN(v0.c2)))) BETWEEN (COUNT(COUNT(*))) AND (GROUP_CONCAT(v0.c0)))) ISNULL);
SELECT * FROM vt1 NATURAL JOIN v0;
SELECT * FROM vt1 NATURAL JOIN v0 WHERE ((~ (CAST(v0.c1 AS REAL)))) UNION ALL SELECT * FROM vt1 NATURAL JOIN v0 WHERE ((NOT ((~ (CAST(v0.c1 AS REAL)))))) UNION ALL SELECT ALL * FROM vt1 NATURAL JOIN v0 WHERE ((((~ (CAST(v0.c1 AS REAL)))) ISNULL));
SELECT * FROM vt1 NATURAL JOIN v0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE (((((((rt0.c2)AND(rt0.c0)))AND('-719053569')))%((((rt0.c1, rt0.c0, rt0.c1)) NOT BETWEEN (('', rt0.c0, rt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c1)))))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((((((rt0.c2)AND(rt0.c0)))AND('-719053569')))%((((rt0.c1, rt0.c0, rt0.c1)) NOT BETWEEN (('', rt0.c0, rt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c1)))))))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE (((((((((rt0.c2)AND(rt0.c0)))AND('-719053569')))%((((rt0.c1, rt0.c0, rt0.c1)) NOT BETWEEN (('', rt0.c0, rt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c1)))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT v0.c2, v0.c1, rt0.c0, vt0.c0 FROM v0, rt0, vt0, vt1 GROUP BY v0.c2, v0.c1, rt0.c0, vt0.c0;
SELECT ALL v0.c2, v0.c1, rt0.c0, vt0.c0 FROM v0, rt0, vt0, vt1 WHERE ((+ (((vt0.c0)AND(v0.c0))))) GROUP BY v0.c2, v0.c1, rt0.c0, vt0.c0 UNION SELECT v0.c2, v0.c1, rt0.c0, vt0.c0 FROM v0, rt0, vt0, vt1 WHERE ((NOT ((+ (((vt0.c0)AND(v0.c0))))))) GROUP BY v0.c2, v0.c1, rt0.c0, vt0.c0 UNION SELECT v0.c2, v0.c1, rt0.c0, vt0.c0 FROM v0, rt0, vt0, vt1 NOT INDEXED WHERE ((((+ (((vt0.c0)AND(v0.c0))))) ISNULL)) GROUP BY v0.c2, v0.c1, rt0.c0, vt0.c0;
SELECT v0.c2, v0.c1, rt0.c0, vt0.c0 FROM v0, rt0, vt0, vt1 GROUP BY v0.c2, v0.c1, rt0.c0, vt0.c0;
SELECT ALL v0.c2, vt0.c0, rt0.c0, rt0.c2 FROM rt0, vt0, v0 GROUP BY v0.c2, vt0.c0, rt0.c0, rt0.c2;
SELECT v0.c2, vt0.c0, rt0.c0, rt0.c2 FROM rt0, vt0, v0 GROUP BY v0.c2, vt0.c0, rt0.c0, rt0.c2 HAVING (((AVG(MAX(rt0.c0))))<>((66028299))) UNION ALL SELECT ALL v0.c2, vt0.c0, rt0.c0, rt0.c2 FROM rt0, vt0, v0 GROUP BY v0.c2, vt0.c0, rt0.c0, rt0.c2 HAVING (NOT ((((AVG(MAX(rt0.c0))))<>((66028299))))) UNION ALL SELECT ALL v0.c2, vt0.c0, rt0.c0, rt0.c2 FROM rt0, vt0, v0 GROUP BY v0.c2, vt0.c0, rt0.c0, rt0.c2 HAVING (((((AVG(MAX(rt0.c0))))<>((66028299)))) ISNULL);
SELECT vt1.c0, v0.c2, v0.c0 FROM vt1, v0;
SELECT ALL vt1.c0, v0.c2, v0.c0 FROM vt1, v0 WHERE (CAST(CASE WHEN v0.c2 THEN 0.022558918207905565 END AS NUMERIC)) UNION ALL SELECT ALL vt1.c0, v0.c2, v0.c0 FROM vt1, v0 WHERE ((NOT (CAST(CASE WHEN v0.c2 THEN 0.022558918207905565 END AS NUMERIC)))) UNION ALL SELECT vt1.c0, v0.c2, v0.c0 FROM vt1, v0 WHERE (((CAST(CASE WHEN v0.c2 THEN 0.022558918207905565 END AS NUMERIC)) ISNULL));
SELECT vt1.c0, v0.c2, v0.c0 FROM vt1, v0;
SELECT DISTINCT v0.c1 FROM v0, vt1;
SELECT DISTINCT v0.c1 FROM v0, vt1 WHERE (v0.c1) UNION SELECT DISTINCT v0.c1 FROM v0, vt1 WHERE ((NOT (v0.c1))) UNION SELECT DISTINCT v0.c1 FROM v0, vt1 WHERE (((v0.c1) ISNULL));
SELECT DISTINCT v0.c1 FROM v0, vt1;
SELECT ALL vt0.c0, rt0.c2 FROM vt0 NATURAL JOIN rt0 GROUP BY vt0.c0, rt0.c2;
SELECT ALL vt0.c0, rt0.c2 FROM vt0 NATURAL JOIN rt0 WHERE (CASE WHEN rt0.c1 COLLATE RTRIM THEN CAST(rt0.c0 AS TEXT) END) GROUP BY vt0.c0, rt0.c2 UNION SELECT vt0.c0, rt0.c2 FROM vt0 NATURAL JOIN rt0 WHERE ((NOT (CASE WHEN rt0.c1 COLLATE RTRIM THEN CAST(rt0.c0 AS TEXT) END))) GROUP BY vt0.c0, rt0.c2 UNION SELECT ALL vt0.c0, rt0.c2 FROM vt0 NATURAL JOIN rt0 WHERE (((CASE WHEN rt0.c1 COLLATE RTRIM THEN CAST(rt0.c0 AS TEXT) END) ISNULL)) GROUP BY vt0.c0, rt0.c2;
SELECT ALL vt0.c0, rt0.c2 FROM vt0 NATURAL JOIN rt0 GROUP BY vt0.c0, rt0.c2;
SELECT v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0;
SELECT v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0 HAVING v0.c2 UNION ALL SELECT ALL v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0 HAVING (NOT (v0.c2)) UNION ALL SELECT v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0 HAVING ((v0.c2) ISNULL);
SELECT v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0;
SELECT v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0 HAVING v0.c2 UNION ALL SELECT ALL v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0 HAVING (NOT (v0.c2)) UNION ALL SELECT v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0 HAVING ((v0.c2) ISNULL);
SELECT v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0;
SELECT rt0.c1 FROM vt0, rt0, vt1, v0;
SELECT rt0.c1 FROM vt0, rt0, vt1, v0 WHERE (((((('KB]Xj(Ta', v0.c2, vt1.c0)) BETWEEN ((vt0.c0, vt0.c0, vt1.c0)) AND ((NULL, vt1.c0, '*0'))))LIKE((vt0.c0 IN ())))) UNION ALL SELECT rt0.c1 FROM vt0, rt0, vt1, v0 WHERE ((NOT (((((('KB]Xj(Ta', v0.c2, vt1.c0)) BETWEEN ((vt0.c0, vt0.c0, vt1.c0)) AND ((NULL, vt1.c0, '*0'))))LIKE((vt0.c0 IN ())))))) UNION ALL SELECT rt0.c1 FROM vt0, rt0, vt1, v0 WHERE (((((((('KB]Xj(Ta', v0.c2, vt1.c0)) BETWEEN ((vt0.c0, vt0.c0, vt1.c0)) AND ((NULL, vt1.c0, '*0'))))LIKE((vt0.c0 IN ())))) ISNULL));
SELECT rt0.c1 FROM vt0, rt0, vt1, v0;
SELECT DISTINCT * FROM rt0, vt1, v0, vt0;
SELECT DISTINCT * FROM rt0 NOT INDEXED, vt1, v0, vt0 WHERE ((((NOT (rt0.c1)))>>((v0.c1 IN ())))) UNION SELECT DISTINCT * FROM rt0, vt1, v0, vt0 WHERE ((NOT ((((NOT (rt0.c1)))>>((v0.c1 IN ())))))) UNION SELECT DISTINCT * FROM rt0, vt1, v0, vt0 WHERE ((((((NOT (rt0.c1)))>>((v0.c1 IN ())))) ISNULL));
SELECT DISTINCT * FROM rt0, vt1, v0, vt0;
SELECT v0.c2, vt1.c0, v0.c1, v0.c0 FROM vt0, v0, vt1 GROUP BY v0.c2, vt1.c0, v0.c1, v0.c0;
SELECT ALL v0.c2, vt1.c0, v0.c1, v0.c0 FROM vt0, v0, vt1 WHERE ((((((v0.c2 IN ()))AND(((vt0.c0)<=(x'')))))OR(CAST(v0.c2 AS NUMERIC)))) GROUP BY v0.c2, vt1.c0, v0.c1, v0.c0 UNION SELECT ALL v0.c2, vt1.c0, v0.c1, v0.c0 FROM vt0, v0, vt1 WHERE ((NOT ((((((v0.c2 IN ()))AND(((vt0.c0)<=(x'')))))OR(CAST(v0.c2 AS NUMERIC)))))) GROUP BY v0.c2, vt1.c0, v0.c1, v0.c0 UNION SELECT v0.c2, vt1.c0, v0.c1, v0.c0 FROM vt0, v0, vt1 WHERE ((((((((v0.c2 IN ()))AND(((vt0.c0)<=(x'')))))OR(CAST(v0.c2 AS NUMERIC)))) ISNULL)) GROUP BY v0.c2, vt1.c0, v0.c1, v0.c0;
SELECT v0.c2, vt1.c0, v0.c1, v0.c0 FROM vt0, v0, vt1 GROUP BY v0.c2, vt1.c0, v0.c1, v0.c0;
SELECT rt0.c2 FROM vt0, vt1, v0, rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM vt0, vt1, v0, rt0 GROUP BY rt0.c2 HAVING (CASE v0.c0  WHEN rt0.c1 THEN COUNT(v0.c2) END IN (rt0.c1 COLLATE NOCASE, ((((TOTAL(MIN(AVG(SUM(v0.c0)))))AND(MAX(vt0.c0))))OR(v0.c0)))) UNION ALL SELECT rt0.c2 FROM vt0, vt1, v0, rt0 GROUP BY rt0.c2 HAVING (NOT ((CASE v0.c0  WHEN rt0.c1 THEN COUNT(v0.c2) END IN (rt0.c1 COLLATE NOCASE, ((((TOTAL(MIN(AVG(SUM(v0.c0)))))AND(MAX(vt0.c0))))OR(v0.c0)))))) UNION ALL SELECT rt0.c2 FROM vt0, vt1, v0, rt0 GROUP BY rt0.c2 HAVING (((CASE v0.c0  WHEN rt0.c1 THEN COUNT(v0.c2) END IN (rt0.c1 COLLATE NOCASE, ((((TOTAL(MIN(AVG(SUM(v0.c0)))))AND(MAX(vt0.c0))))OR(v0.c0))))) ISNULL);
SELECT ALL rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0, vt1;
SELECT ALL rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0, vt1 WHERE (((((('-910755611' IN (rt0.c0, rt0.c2)))AND(IFNULL(DISTINCT x'', vt0.c0))))AND(((rt0.c2) BETWEEN ('lCJqR') AND (rt0.c1))))) UNION ALL SELECT rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0, vt1 WHERE ((NOT (((((('-910755611' IN (rt0.c0, rt0.c2)))AND(IFNULL(DISTINCT x'', vt0.c0))))AND(((rt0.c2) BETWEEN ('lCJqR') AND (rt0.c1))))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0, vt1 WHERE (((((((('-910755611' IN (rt0.c0, rt0.c2)))AND(IFNULL(DISTINCT x'', vt0.c0))))AND(((rt0.c2) BETWEEN ('lCJqR') AND (rt0.c1))))) ISNULL));
SELECT ALL rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0, vt1;
SELECT DISTINCT rt0.c0, v0.c0 FROM v0, rt0;
SELECT DISTINCT rt0.c0, v0.c0 FROM v0, rt0 WHERE ((~ ((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((v0.c1)))))) UNION SELECT DISTINCT rt0.c0, v0.c0 FROM v0, rt0 WHERE ((NOT ((~ ((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((v0.c1)))))))) UNION SELECT DISTINCT rt0.c0, v0.c0 FROM v0, rt0 WHERE ((((~ ((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((v0.c1)))))) ISNULL));
SELECT DISTINCT rt0.c0, v0.c0 FROM v0, rt0;
SELECT ALL rt0.c0, v0.c2, rt0.c1, v0.c1, v0.c0, vt1.c0, vt0.c0 FROM rt0, v0, vt1, vt0 GROUP BY rt0.c0, v0.c2, rt0.c1, v0.c1, v0.c0, vt1.c0, vt0.c0;
SELECT rt0.c0, v0.c2, rt0.c1, v0.c1, v0.c0, vt1.c0, vt0.c0 FROM rt0, v0, vt1, vt0 WHERE (CAST(rt0.c0 COLLATE RTRIM AS NUMERIC)) GROUP BY rt0.c0, v0.c2, rt0.c1, v0.c1, v0.c0, vt1.c0, vt0.c0 UNION SELECT rt0.c0, v0.c2, rt0.c1, v0.c1, v0.c0, vt1.c0, vt0.c0 FROM rt0, v0, vt1, vt0 WHERE ((NOT (CAST(rt0.c0 COLLATE RTRIM AS NUMERIC)))) GROUP BY rt0.c0, v0.c2, rt0.c1, v0.c1, v0.c0, vt1.c0, vt0.c0 UNION SELECT rt0.c0, v0.c2, rt0.c1, v0.c1, v0.c0, vt1.c0, vt0.c0 FROM rt0, v0, vt1, vt0 WHERE (((CAST(rt0.c0 COLLATE RTRIM AS NUMERIC)) ISNULL)) GROUP BY rt0.c0, v0.c2, rt0.c1, v0.c1, v0.c0, vt1.c0, vt0.c0;
SELECT ALL rt0.c0, v0.c2, rt0.c1, v0.c1, v0.c0, vt1.c0, vt0.c0 FROM rt0, v0, vt1, vt0 GROUP BY rt0.c0, v0.c2, rt0.c1, v0.c1, v0.c0, vt1.c0, vt0.c0;
SELECT ALL rt0.c2, rt0.c1 FROM vt1, rt0, vt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM vt1, rt0, vt0 GROUP BY rt0.c2, rt0.c1 HAVING MAX(((vt0.c0) NOT BETWEEN (MIN(COUNT(MIN(COUNT(*))))) AND (COUNT(COUNT(AVG(rt0.c0)))))) UNION ALL SELECT rt0.c2, rt0.c1 FROM vt1, rt0, vt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (MAX(((vt0.c0) NOT BETWEEN (MIN(COUNT(MIN(COUNT(*))))) AND (COUNT(COUNT(AVG(rt0.c0)))))))) UNION ALL SELECT rt0.c2, rt0.c1 FROM vt1, rt0, vt0 GROUP BY rt0.c2, rt0.c1 HAVING ((MAX(((vt0.c0) NOT BETWEEN (MIN(COUNT(MIN(COUNT(*))))) AND (COUNT(COUNT(AVG(rt0.c0))))))) ISNULL);
SELECT ALL * FROM vt0, v0, vt1, rt0;
SELECT ALL * FROM vt0, v0, vt1, rt0 WHERE ((+ ((+ (rt0.c0))))) UNION ALL SELECT ALL * FROM vt0, v0, vt1, rt0 WHERE ((NOT ((+ ((+ (rt0.c0))))))) UNION ALL SELECT * FROM vt0, v0, vt1, rt0 WHERE ((((+ ((+ (rt0.c0))))) ISNULL));
SELECT ALL * FROM vt0, v0, vt1, rt0;
SELECT DISTINCT v0.c0, rt0.c1, rt0.c2, rt0.c0 FROM vt1, v0, rt0;
SELECT DISTINCT v0.c0, rt0.c1, rt0.c2, rt0.c0 FROM vt1, v0, rt0 WHERE ('973351714') UNION SELECT DISTINCT v0.c0, rt0.c1, rt0.c2, rt0.c0 FROM vt1, v0, rt0 WHERE ((NOT ('973351714'))) UNION SELECT DISTINCT v0.c0, rt0.c1, rt0.c2, rt0.c0 FROM vt1, v0, rt0 WHERE ((('973351714') ISNULL));
SELECT DISTINCT v0.c0, rt0.c1, rt0.c2, rt0.c0 FROM vt1, v0, rt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((vt1.c0)/((((vt1.c0)) NOT BETWEEN (('q')) AND ((vt1.c0)))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0)/((((vt1.c0)) NOT BETWEEN (('q')) AND ((vt1.c0)))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((vt1.c0)/((((vt1.c0)) NOT BETWEEN (('q')) AND ((vt1.c0)))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c0, v0.c0, v0.c1, v0.c2 FROM vt0 CROSS JOIN v0 ON ((v0.c2 IN ()) IN (((v0.c2)&(v0.c0)), CAST(v0.c0 AS TEXT))) GROUP BY vt0.c0, v0.c0, v0.c1, v0.c2;
SELECT ALL vt0.c0, v0.c0, v0.c1, v0.c2 FROM vt0 CROSS JOIN v0 ON ((v0.c2 IN ()) IN (((v0.c2)&(v0.c0)), CAST(v0.c0 AS TEXT))) GROUP BY vt0.c0, v0.c0, v0.c1, v0.c2 HAVING MIN(GROUP_CONCAT(vt0.c0)) UNION ALL SELECT ALL vt0.c0, v0.c0, v0.c1, v0.c2 FROM vt0 CROSS JOIN v0 ON ((v0.c2 IN ()) IN (((v0.c2)&(v0.c0)), CAST(v0.c0 AS TEXT))) GROUP BY vt0.c0, v0.c0, v0.c1, v0.c2 HAVING (NOT (MIN(GROUP_CONCAT(vt0.c0)))) UNION ALL SELECT vt0.c0, v0.c0, v0.c1, v0.c2 FROM vt0 CROSS JOIN v0 ON ((v0.c2 IN ()) IN (((v0.c2)&(v0.c0)), CAST(v0.c0 AS TEXT))) GROUP BY vt0.c0, v0.c0, v0.c1, v0.c2 HAVING ((MIN(GROUP_CONCAT(vt0.c0))) ISNULL);
SELECT ALL vt0.c0, v0.c1, v0.c0, v0.c2 FROM vt1, rt0 INNER JOIN vt0 ON CASE v0.c1  WHEN ((rt0.c2) ISNULL) THEN v0.c1 WHEN vt1.c0 COLLATE RTRIM THEN CASE WHEN v0.c1 THEN rt0.c1 WHEN NULL THEN NULL WHEN rt0.c2 THEN vt0.c0 END WHEN ((vt0.c0) IS FALSE) THEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN v0.c0 THEN v0.c1 WHEN vt1.c0 THEN v0.c1 ELSE v0.c2 END END LEFT OUTER JOIN v0 ON (((((vt0.c0 IN ()))OR(vt1.c0)))OR(((((v0.c0)OR(rt0.c1)))OR(v0.c0))));
SELECT ALL vt0.c0, v0.c1, v0.c0, v0.c2 FROM vt1, rt0 INNER JOIN vt0 ON CASE v0.c1  WHEN ((rt0.c2) ISNULL) THEN v0.c1 WHEN vt1.c0 COLLATE RTRIM THEN CASE WHEN v0.c1 THEN rt0.c1 WHEN NULL THEN NULL WHEN rt0.c2 THEN vt0.c0 END WHEN ((vt0.c0) IS FALSE) THEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN v0.c0 THEN v0.c1 WHEN vt1.c0 THEN v0.c1 ELSE v0.c2 END END LEFT OUTER JOIN v0 ON (((((vt0.c0 IN ()))OR(vt1.c0)))OR(((((v0.c0)OR(rt0.c1)))OR(v0.c0)))) WHERE (CAST((~ (v0.c2)) AS REAL)) UNION ALL SELECT vt0.c0, v0.c1, v0.c0, v0.c2 FROM vt1, rt0 INNER JOIN vt0 ON CASE v0.c1  WHEN ((rt0.c2) ISNULL) THEN v0.c1 WHEN vt1.c0 COLLATE RTRIM THEN CASE WHEN v0.c1 THEN rt0.c1 WHEN NULL THEN NULL WHEN rt0.c2 THEN vt0.c0 END WHEN ((vt0.c0) IS FALSE) THEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN v0.c0 THEN v0.c1 WHEN vt1.c0 THEN v0.c1 ELSE v0.c2 END END LEFT OUTER JOIN v0 ON (((((vt0.c0 IN ()))OR(vt1.c0)))OR(((((v0.c0)OR(rt0.c1)))OR(v0.c0)))) WHERE ((NOT (CAST((~ (v0.c2)) AS REAL)))) UNION ALL SELECT vt0.c0, v0.c1, v0.c0, v0.c2 FROM vt1, rt0 INNER JOIN vt0 ON CASE v0.c1  WHEN ((rt0.c2) ISNULL) THEN v0.c1 WHEN vt1.c0 COLLATE RTRIM THEN CASE WHEN v0.c1 THEN rt0.c1 WHEN NULL THEN NULL WHEN rt0.c2 THEN vt0.c0 END WHEN ((vt0.c0) IS FALSE) THEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN v0.c0 THEN v0.c1 WHEN vt1.c0 THEN v0.c1 ELSE v0.c2 END END LEFT OUTER JOIN v0 ON (((((vt0.c0 IN ()))OR(vt1.c0)))OR(((((v0.c0)OR(rt0.c1)))OR(v0.c0)))) WHERE (((CAST((~ (v0.c2)) AS REAL)) ISNULL));
SELECT ALL vt0.c0, v0.c1, v0.c0, v0.c2 FROM vt1, rt0 INNER JOIN vt0 ON CASE v0.c1  WHEN ((rt0.c2) ISNULL) THEN v0.c1 WHEN vt1.c0 COLLATE RTRIM THEN CASE WHEN v0.c1 THEN rt0.c1 WHEN NULL THEN NULL WHEN rt0.c2 THEN vt0.c0 END WHEN ((vt0.c0) IS FALSE) THEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN v0.c0 THEN v0.c1 WHEN vt1.c0 THEN v0.c1 ELSE v0.c2 END END LEFT OUTER JOIN v0 ON (((((vt0.c0 IN ()))OR(vt1.c0)))OR(((((v0.c0)OR(rt0.c1)))OR(v0.c0))));
SELECT DISTINCT vt0.c0, v0.c1, rt0.c1 FROM vt0, v0 CROSS JOIN rt0 ON CASE ((v0.c2)>(v0.c2))  WHEN rt0.c0 COLLATE NOCASE THEN NULL END;
SELECT DISTINCT vt0.c0, v0.c1, rt0.c1 FROM vt0, v0 CROSS JOIN rt0 ON CASE ((v0.c2)>(v0.c2))  WHEN rt0.c0 COLLATE NOCASE THEN NULL END WHERE (CASE WHEN 'X|^S' COLLATE RTRIM THEN CAST(rt0.c2 AS TEXT) ELSE ((rt0.c2)IS NOT(rt0.c1)) END) UNION SELECT DISTINCT vt0.c0, v0.c1, rt0.c1 FROM vt0, v0 CROSS JOIN rt0 ON CASE ((v0.c2)>(v0.c2))  WHEN rt0.c0 COLLATE NOCASE THEN NULL END WHERE ((NOT (CASE WHEN 'X|^S' COLLATE RTRIM THEN CAST(rt0.c2 AS TEXT) ELSE ((rt0.c2)IS NOT(rt0.c1)) END))) UNION SELECT DISTINCT vt0.c0, v0.c1, rt0.c1 FROM vt0, v0 CROSS JOIN rt0 ON CASE ((v0.c2)>(v0.c2))  WHEN rt0.c0 COLLATE NOCASE THEN NULL END WHERE (((CASE WHEN 'X|^S' COLLATE RTRIM THEN CAST(rt0.c2 AS TEXT) ELSE ((rt0.c2)IS NOT(rt0.c1)) END) ISNULL));
SELECT DISTINCT vt0.c0, v0.c1, rt0.c1 FROM vt0, v0 CROSS JOIN rt0 ON CASE ((v0.c2)>(v0.c2))  WHEN rt0.c0 COLLATE NOCASE THEN NULL END;
SELECT ALL v0.c0, v0.c1, rt0.c1, rt0.c0, rt0.c2, vt1.c0 FROM rt0, vt0, vt1, v0 GROUP BY v0.c0, v0.c1, rt0.c1, rt0.c0, rt0.c2, vt1.c0;
SELECT ALL v0.c0, v0.c1, rt0.c1, rt0.c0, rt0.c2, vt1.c0 FROM rt0, vt0, vt1, v0 WHERE (CASE ((rt0.c1) NOT BETWEEN (vt0.c0) AND (v0.c0))  WHEN rt0.c0 COLLATE RTRIM THEN v0.c2 ELSE ((rt0.c2) IS FALSE) END) GROUP BY v0.c0, v0.c1, rt0.c1, rt0.c0, rt0.c2, vt1.c0 UNION SELECT v0.c0, v0.c1, rt0.c1, rt0.c0, rt0.c2, vt1.c0 FROM rt0, vt0, vt1, v0 WHERE ((NOT (CASE ((rt0.c1) NOT BETWEEN (vt0.c0) AND (v0.c0))  WHEN rt0.c0 COLLATE RTRIM THEN v0.c2 ELSE ((rt0.c2) IS FALSE) END))) GROUP BY v0.c0, v0.c1, rt0.c1, rt0.c0, rt0.c2, vt1.c0 UNION SELECT ALL v0.c0, v0.c1, rt0.c1, rt0.c0, rt0.c2, vt1.c0 FROM rt0, vt0, vt1, v0 WHERE (((CASE ((rt0.c1) NOT BETWEEN (vt0.c0) AND (v0.c0))  WHEN rt0.c0 COLLATE RTRIM THEN v0.c2 ELSE ((rt0.c2) IS FALSE) END) ISNULL)) GROUP BY v0.c0, v0.c1, rt0.c1, rt0.c0, rt0.c2, vt1.c0;
SELECT ALL v0.c0, v0.c1, rt0.c1, rt0.c0, rt0.c2, vt1.c0 FROM rt0, vt0, vt1, v0 GROUP BY v0.c0, v0.c1, rt0.c1, rt0.c0, rt0.c2, vt1.c0;
SELECT v0.c2, rt0.c2, rt0.c1, v0.c1 FROM v0, rt0 GROUP BY v0.c2, rt0.c2, rt0.c1, v0.c1;
SELECT ALL v0.c2, rt0.c2, rt0.c1, v0.c1 FROM v0, rt0 GROUP BY v0.c2, rt0.c2, rt0.c1, v0.c1 HAVING COUNT(*) UNION ALL SELECT ALL v0.c2, rt0.c2, rt0.c1, v0.c1 FROM v0, rt0 GROUP BY v0.c2, rt0.c2, rt0.c1, v0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c2, rt0.c2, rt0.c1, v0.c1 FROM v0, rt0 GROUP BY v0.c2, rt0.c2, rt0.c1, v0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c2, rt0.c2, rt0.c1, v0.c1 FROM v0, rt0 GROUP BY v0.c2, rt0.c2, rt0.c1, v0.c1;
SELECT ALL v0.c2, rt0.c2, rt0.c1, v0.c1 FROM v0, rt0 GROUP BY v0.c2, rt0.c2, rt0.c1, v0.c1 HAVING COUNT(*) UNION ALL SELECT ALL v0.c2, rt0.c2, rt0.c1, v0.c1 FROM v0, rt0 GROUP BY v0.c2, rt0.c2, rt0.c1, v0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c2, rt0.c2, rt0.c1, v0.c1 FROM v0, rt0 GROUP BY v0.c2, rt0.c2, rt0.c1, v0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c2, rt0.c2, rt0.c1, v0.c1 FROM v0, rt0 GROUP BY v0.c2, rt0.c2, rt0.c1, v0.c1;
SELECT ALL v0.c2, v0.c0, v0.c1, vt0.c0 FROM vt0, v0;
SELECT v0.c2, v0.c0, v0.c1, vt0.c0 FROM vt0, v0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(v0.c2)))GLOB((('q') NOT BETWEEN (v0.c1) AND (v0.c0))))) UNION ALL SELECT v0.c2, v0.c0, v0.c1, vt0.c0 FROM vt0, v0 WHERE ((NOT (((((((vt0.c0)AND(vt0.c0)))OR(v0.c2)))GLOB((('q') NOT BETWEEN (v0.c1) AND (v0.c0))))))) UNION ALL SELECT ALL v0.c2, v0.c0, v0.c1, vt0.c0 FROM vt0, v0 NOT INDEXED WHERE (((((((((vt0.c0)AND(vt0.c0)))OR(v0.c2)))GLOB((('q') NOT BETWEEN (v0.c1) AND (v0.c0))))) ISNULL));
SELECT ALL v0.c2, v0.c0, v0.c1, vt0.c0 FROM vt0, v0;
SELECT DISTINCT * FROM vt1, v0, vt0, rt0;
SELECT DISTINCT * FROM vt1, v0, vt0, rt0 WHERE ((((((rt0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0))))>=((((0Xffffffff8b990a57)IS(v0.c1)))))) UNION SELECT DISTINCT * FROM vt1, v0, vt0, rt0 WHERE ((NOT ((((((rt0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0))))>=((((0xffffffff8b990a57)IS(v0.c1)))))))) UNION SELECT DISTINCT * FROM vt1, v0, vt0, rt0 WHERE ((((((((rt0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0))))>=((((0Xffffffff8b990a57)IS(v0.c1)))))) ISNULL));
SELECT DISTINCT * FROM vt1, v0, vt0, rt0;
SELECT v0.c1, v0.c2, v0.c0, vt1.c0 FROM vt1, v0 GROUP BY v0.c1, v0.c2, v0.c0, vt1.c0;
SELECT ALL v0.c1, v0.c2, v0.c0, vt1.c0 FROM vt1, v0 WHERE (((((v0.c0)<<(v0.c0))) NOT NULL)) GROUP BY v0.c1, v0.c2, v0.c0, vt1.c0 UNION SELECT v0.c1, v0.c2, v0.c0, vt1.c0 FROM vt1, v0 WHERE ((NOT (((((v0.c0)<<(v0.c0))) NOT NULL)))) GROUP BY v0.c1, v0.c2, v0.c0, vt1.c0 UNION SELECT v0.c1, v0.c2, v0.c0, vt1.c0 FROM vt1, v0 WHERE (((((((v0.c0)<<(v0.c0))) NOT NULL)) ISNULL)) GROUP BY v0.c1, v0.c2, v0.c0, vt1.c0;
SELECT v0.c1, v0.c2, v0.c0, vt1.c0 FROM vt1, v0 GROUP BY v0.c1, v0.c2, v0.c0, vt1.c0;
SELECT rt0.c0, rt0.c2, vt1.c0 FROM vt0, rt0, vt1 GROUP BY rt0.c0, rt0.c2, vt1.c0;
SELECT rt0.c0, rt0.c2, vt1.c0 FROM vt0, rt0, vt1 GROUP BY rt0.c0, rt0.c2, vt1.c0 HAVING (COUNT(COUNT(rt0.c1)) IN ()) UNION ALL SELECT rt0.c0, rt0.c2, vt1.c0 FROM vt0, rt0, vt1 GROUP BY rt0.c0, rt0.c2, vt1.c0 HAVING (NOT ((COUNT(COUNT(rt0.c1)) IN ()))) UNION ALL SELECT ALL rt0.c0, rt0.c2, vt1.c0 FROM vt0, rt0, vt1 GROUP BY rt0.c0, rt0.c2, vt1.c0 HAVING (((COUNT(COUNT(rt0.c1)) IN ())) ISNULL);
SELECT rt0.c0, rt0.c2, vt1.c0 FROM vt0, rt0, vt1 GROUP BY rt0.c0, rt0.c2, vt1.c0;
SELECT rt0.c0, rt0.c2, vt1.c0 FROM vt0, rt0, vt1 GROUP BY rt0.c0, rt0.c2, vt1.c0 HAVING (COUNT(COUNT(rt0.c1)) IN ()) UNION ALL SELECT rt0.c0, rt0.c2, vt1.c0 FROM vt0, rt0, vt1 GROUP BY rt0.c0, rt0.c2, vt1.c0 HAVING (NOT ((COUNT(COUNT(rt0.c1)) IN ()))) UNION ALL SELECT ALL rt0.c0, rt0.c2, vt1.c0 FROM vt0, rt0, vt1 GROUP BY rt0.c0, rt0.c2, vt1.c0 HAVING (((COUNT(COUNT(rt0.c1)) IN ())) ISNULL);
SELECT rt0.c0, rt0.c2, vt1.c0 FROM vt0, rt0, vt1 GROUP BY rt0.c0, rt0.c2, vt1.c0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, vt1.c0, vt0.c0, v0.c2, v0.c1, v0.c0 FROM rt0, vt1, v0, vt0;
SELECT rt0.c1, rt0.c0, rt0.c2, vt1.c0, vt0.c0, v0.c2, v0.c1, v0.c0 FROM rt0, vt1, v0, vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c2)))) NOT BETWEEN (((v0.c1) NOT NULL)) AND (((rt0.c1) NOT BETWEEN (vt0.c0) AND (v0.c2))))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2, vt1.c0, vt0.c0, v0.c2, v0.c1, v0.c0 FROM rt0, vt1, v0, vt0 WHERE ((NOT ((((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c2)))) NOT BETWEEN (((v0.c1) NOT NULL)) AND (((rt0.c1) NOT BETWEEN (vt0.c0) AND (v0.c2))))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2, vt1.c0, vt0.c0, v0.c2, v0.c1, v0.c0 FROM rt0, vt1, v0, vt0 WHERE ((((((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c2)))) NOT BETWEEN (((v0.c1) NOT NULL)) AND (((rt0.c1) NOT BETWEEN (vt0.c0) AND (v0.c2))))) ISNULL));
SELECT ALL rt0.c1, rt0.c0, rt0.c2, vt1.c0, vt0.c0, v0.c2, v0.c1, v0.c0 FROM rt0, vt1, v0, vt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1, vt1.c0 FROM vt1, rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1, vt1.c0 FROM vt1, rt0 WHERE ((((((rt0.c1 IN (rt0.c1)))AND(((rt0.c0)<('m[\nT''')))))AND(-9.21091502E8))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1, vt1.c0 FROM vt1, rt0 WHERE ((NOT ((((((rt0.c1 IN (rt0.c1)))AND(((rt0.c0)<('m[\nT''')))))AND(-9.21091502E8))))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1, vt1.c0 FROM vt1, rt0 WHERE ((((((((rt0.c1 IN (rt0.c1)))AND(((rt0.c0)<('m[\nT''')))))AND(-9.21091502E8))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1, vt1.c0 FROM vt1, rt0;
SELECT ALL rt0.c2 FROM rt0, vt1, vt0 NATURAL JOIN v0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, vt1, vt0 NATURAL JOIN v0 WHERE (IFNULL(ROUND(rt0.c2, v0.c1), v0.c1 COLLATE NOCASE)) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0, vt1, vt0 NATURAL JOIN v0 WHERE ((NOT (IFNULL(ROUND(rt0.c2, v0.c1), v0.c1 COLLATE NOCASE)))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0, vt1, vt0 NATURAL JOIN v0 WHERE (((IFNULL(ROUND(rt0.c2, v0.c1), v0.c1 COLLATE NOCASE)) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0, vt1, vt0 NATURAL JOIN v0 GROUP BY rt0.c2;
SELECT ALL rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0;
SELECT ALL rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0;
SELECT ALL rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0;
SELECT v0.c2, rt0.c0 FROM v0, vt1, rt0;
SELECT ALL v0.c2, rt0.c0 FROM v0, vt1, rt0 WHERE (QUOTE(v0.c1)) UNION ALL SELECT ALL v0.c2, rt0.c0 FROM v0, vt1, rt0 WHERE ((NOT (QUOTE(v0.c1)))) UNION ALL SELECT v0.c2, rt0.c0 FROM v0, vt1, rt0 WHERE (((QUOTE(v0.c1)) ISNULL));
SELECT v0.c2, rt0.c0 FROM v0, vt1, rt0;
SELECT DISTINCT v0.c1, vt1.c0, v0.c0, v0.c2 FROM v0, vt1;
SELECT DISTINCT v0.c1, vt1.c0, v0.c0, v0.c2 FROM v0, vt1 WHERE (CAST(TRIM(DISTINCT v0.c1) AS TEXT)) UNION SELECT DISTINCT v0.c1, vt1.c0, v0.c0, v0.c2 FROM v0, vt1 WHERE ((NOT (CAST(TRIM(DISTINCT v0.c1) AS TEXT)))) UNION SELECT DISTINCT v0.c1, vt1.c0, v0.c0, v0.c2 FROM v0, vt1 WHERE (((CAST(TRIM(DISTINCT v0.c1) AS TEXT)) ISNULL));
SELECT DISTINCT v0.c1, vt1.c0, v0.c0, v0.c2 FROM v0, vt1;
SELECT ALL rt0.c2, vt1.c0, v0.c2, rt0.c1, rt0.c0 FROM v0, rt0, vt1, vt0 GROUP BY rt0.c2, vt1.c0, v0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, vt1.c0, v0.c2, rt0.c1, rt0.c0 FROM v0, rt0, vt1, vt0 WHERE (((((v0.c1) BETWEEN (rt0.c2) AND (rt0.c2))) IS TRUE)) GROUP BY rt0.c2, vt1.c0, v0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, vt1.c0, v0.c2, rt0.c1, rt0.c0 FROM v0, rt0, vt1, vt0 WHERE ((NOT (((((v0.c1) BETWEEN (rt0.c2) AND (rt0.c2))) IS TRUE)))) GROUP BY rt0.c2, vt1.c0, v0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, vt1.c0, v0.c2, rt0.c1, rt0.c0 FROM v0, rt0, vt1, vt0 WHERE (((((((v0.c1) BETWEEN (rt0.c2) AND (rt0.c2))) IS TRUE)) ISNULL)) GROUP BY rt0.c2, vt1.c0, v0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, vt1.c0, v0.c2, rt0.c1, rt0.c0 FROM v0, rt0, vt1, vt0 GROUP BY rt0.c2, vt1.c0, v0.c2, rt0.c1, rt0.c0;
SELECT ALL v0.c2, v0.c0, rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY v0.c2, v0.c0, rt0.c2, rt0.c0;
SELECT v0.c2, v0.c0, rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY v0.c2, v0.c0, rt0.c2, rt0.c0 HAVING MAX(GROUP_CONCAT(AVG(SUM(GROUP_CONCAT(v0.c0))))) UNION ALL SELECT ALL v0.c2, v0.c0, rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY v0.c2, v0.c0, rt0.c2, rt0.c0 HAVING (NOT (MAX(GROUP_CONCAT(AVG(SUM(GROUP_CONCAT(v0.c0))))))) UNION ALL SELECT ALL v0.c2, v0.c0, rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY v0.c2, v0.c0, rt0.c2, rt0.c0 HAVING ((MAX(GROUP_CONCAT(AVG(SUM(GROUP_CONCAT(v0.c0)))))) ISNULL);
SELECT rt0.c0 FROM v0, rt0, vt1;
SELECT rt0.c0 FROM v0, rt0, vt1 WHERE (((((0Xffffffffbc4774a3) NOT NULL)) ISNULL)) UNION ALL SELECT ALL rt0.c0 FROM v0, rt0, vt1 WHERE ((NOT (((((0Xffffffffbc4774a3) NOT NULL)) ISNULL)))) UNION ALL SELECT ALL rt0.c0 FROM v0, rt0, vt1 WHERE (((((((0Xffffffffbc4774a3) NOT NULL)) ISNULL)) ISNULL));
SELECT rt0.c0 FROM v0, rt0, vt1;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt1.c0 FROM vt1 NATURAL JOIN v0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 NATURAL JOIN v0 WHERE (v0.c1 COLLATE NOCASE) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 NATURAL JOIN v0 WHERE ((NOT (v0.c1 COLLATE NOCASE))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 NATURAL JOIN v0 WHERE (((v0.c1 COLLATE NOCASE) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 NATURAL JOIN v0 GROUP BY vt1.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((MAX(SUM(vt0.c0)), (MIN(vt0.c0) IN (GROUP_CONCAT(vt0.c0))), MIN(vt0.c0), SUM(TOTAL(vt0.c0)), TOTAL(vt0.c0)))==((TOTAL(MAX(GROUP_CONCAT(COUNT(*)))), MAX(COUNT(SUM(vt0.c0))), ((TOTAL(vt0.c0)) BETWEEN ('227320675') AND (COUNT(SUM(vt0.c0)))), ((((vt0.c0)AND(COUNT(TOTAL(TOTAL(vt0.c0))))))AND(vt0.c0)), COUNT(*)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((MAX(SUM(vt0.c0)), (MIN(vt0.c0) IN (GROUP_CONCAT(vt0.c0))), MIN(vt0.c0), SUM(TOTAL(vt0.c0)), TOTAL(vt0.c0)))=((TOTAL(MAX(GROUP_CONCAT(COUNT(*)))), MAX(COUNT(SUM(vt0.c0))), ((TOTAL(vt0.c0)) BETWEEN ('227320675') AND (COUNT(SUM(vt0.c0)))), ((((vt0.c0)AND(COUNT(TOTAL(TOTAL(vt0.c0))))))AND(vt0.c0)), COUNT(*)))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((MAX(SUM(vt0.c0)), (MIN(vt0.c0) IN (GROUP_CONCAT(vt0.c0))), MIN(vt0.c0), SUM(TOTAL(vt0.c0)), TOTAL(vt0.c0)))==((TOTAL(MAX(GROUP_CONCAT(COUNT(*)))), MAX(COUNT(SUM(vt0.c0))), ((TOTAL(vt0.c0)) BETWEEN ('227320675') AND (COUNT(SUM(vt0.c0)))), ((((vt0.c0)AND(COUNT(TOTAL(TOTAL(vt0.c0))))))AND(vt0.c0)), COUNT(*))))) ISNULL);
SELECT ALL rt0.c2, vt1.c0 FROM vt1, rt0;
SELECT rt0.c2, vt1.c0 FROM vt1, rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END) IS TRUE)) UNION ALL SELECT rt0.c2, vt1.c0 FROM vt1, rt0 WHERE ((NOT (((CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END) IS TRUE)))) UNION ALL SELECT rt0.c2, vt1.c0 FROM vt1, rt0 WHERE (((((CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END) IS TRUE)) ISNULL));
SELECT ALL rt0.c2, vt1.c0 FROM vt1, rt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (NULLIF(CASE WHEN x'' THEN vt0.c0 WHEN 0.4300582536186658 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, CAST(vt0.c0 AS REAL))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (NULLIF(CASE WHEN x'' THEN vt0.c0 WHEN 0.4300582536186658 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, CAST(vt0.c0 AS REAL))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((NULLIF(CASE WHEN x'' THEN vt0.c0 WHEN 0.4300582536186658 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, CAST(vt0.c0 AS REAL))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL v0.c2, v0.c1 FROM v0, vt0 GROUP BY v0.c2, v0.c1;
SELECT v0.c2, v0.c1 FROM v0, vt0 WHERE (((vt0.c0 COLLATE BINARY) IS TRUE)) GROUP BY v0.c2, v0.c1 UNION SELECT ALL v0.c2, v0.c1 FROM v0, vt0 WHERE ((NOT (((vt0.c0 COLLATE BINARY) IS TRUE)))) GROUP BY v0.c2, v0.c1 UNION SELECT v0.c2, v0.c1 FROM v0, vt0 WHERE (((((vt0.c0 COLLATE BINARY) IS TRUE)) ISNULL)) GROUP BY v0.c2, v0.c1;
SELECT ALL v0.c2, v0.c1 FROM v0, vt0 GROUP BY v0.c2, v0.c1;
SELECT rt0.c1, vt0.c0, v0.c2, rt0.c2, vt1.c0 FROM v0 RIGHT OUTER JOIN vt0 ON ABS((+ (NULL))) FULL OUTER JOIN vt1 ON 0.4348922830543315 RIGHT OUTER JOIN rt0 ON NULLIF(DISTINCT CASE WHEN vt1.c0 THEN 'E' END, vt1.c0 COLLATE NOCASE) GROUP BY rt0.c1, vt0.c0, v0.c2, rt0.c2, vt1.c0;
SELECT ALL rt0.c1, vt0.c0, v0.c2, rt0.c2, vt1.c0 FROM v0 RIGHT OUTER JOIN vt0 ON ABS((+ (NULL))) FULL OUTER JOIN vt1 ON 0.4348922830543315 RIGHT OUTER JOIN rt0 ON NULLIF(DISTINCT CASE WHEN vt1.c0 THEN 'E' END, vt1.c0 COLLATE NOCASE) GROUP BY rt0.c1, vt0.c0, v0.c2, rt0.c2, vt1.c0 HAVING COUNT(MAX(v0.c1)) UNION ALL SELECT rt0.c1, vt0.c0, v0.c2, rt0.c2, vt1.c0 FROM v0 RIGHT OUTER JOIN vt0 ON ABS((+ (NULL))) FULL OUTER JOIN vt1 ON 0.4348922830543315 RIGHT OUTER JOIN rt0 ON NULLIF(DISTINCT CASE WHEN vt1.c0 THEN 'E' END, vt1.c0 COLLATE NOCASE) GROUP BY rt0.c1, vt0.c0, v0.c2, rt0.c2, vt1.c0 HAVING (NOT (COUNT(MAX(v0.c1)))) UNION ALL SELECT ALL rt0.c1, vt0.c0, v0.c2, rt0.c2, vt1.c0 FROM v0 RIGHT OUTER JOIN vt0 ON ABS((+ (NULL))) FULL OUTER JOIN vt1 ON 0.4348922830543315 RIGHT OUTER JOIN rt0 ON NULLIF(DISTINCT CASE WHEN vt1.c0 THEN 'E' END, vt1.c0 COLLATE NOCASE) GROUP BY rt0.c1, vt0.c0, v0.c2, rt0.c2, vt1.c0 HAVING ((COUNT(MAX(v0.c1))) ISNULL);
SELECT * FROM vt0, v0;
SELECT * FROM vt0, v0 WHERE ((((CAST(v0.c1 AS BLOB), ((v0.c1) NOT NULL), (+ (v0.c2))))<(((v0.c0 IN (vt0.c0, vt0.c0)), ((v0.c0) BETWEEN (v0.c1) AND (v0.c1)), ((NULL)IS(v0.c2)))))) UNION ALL SELECT * FROM vt0, v0 WHERE ((NOT ((((CAST(v0.c1 AS BLOB), ((v0.c1) NOT NULL), (+ (v0.c2))))<(((v0.c0 IN (vt0.c0, vt0.c0)), ((v0.c0) BETWEEN (v0.c1) AND (v0.c1)), ((NULL)IS(v0.c2)))))))) UNION ALL SELECT * FROM vt0, v0 WHERE ((((((CAST(v0.c1 AS BLOB), ((v0.c1) NOT NULL), (+ (v0.c2))))<(((v0.c0 IN (vt0.c0, vt0.c0)), ((v0.c0) BETWEEN (v0.c1) AND (v0.c1)), ((NULL)IS(v0.c2)))))) ISNULL));
SELECT * FROM vt0, v0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, v0.c0, v0.c1 FROM rt0 CROSS JOIN v0 ON ((0.5029630430741533)+(rt0.c1 COLLATE RTRIM));
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, v0.c0, v0.c1 FROM rt0 CROSS JOIN v0 ON ((0.5029630430741533)+(rt0.c1 COLLATE RTRIM)) WHERE ((((NULL, rt0.c0, rt0.c1)) NOT BETWEEN ((v0.c2, v0.c0, rt0.c2)) AND ((rt0.c2, rt0.c1, v0.c1))) COLLATE NOCASE) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, v0.c0, v0.c1 FROM rt0 CROSS JOIN v0 ON ((0.5029630430741533)+(rt0.c1 COLLATE RTRIM)) WHERE ((NOT ((((NULL, rt0.c0, rt0.c1)) NOT BETWEEN ((v0.c2, v0.c0, rt0.c2)) AND ((rt0.c2, rt0.c1, v0.c1))) COLLATE NOCASE))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, v0.c0, v0.c1 FROM rt0 CROSS JOIN v0 ON ((0.5029630430741533)+(rt0.c1 COLLATE RTRIM)) WHERE ((((((NULL, rt0.c0, rt0.c1)) NOT BETWEEN ((v0.c2, v0.c0, rt0.c2)) AND ((rt0.c2, rt0.c1, v0.c1))) COLLATE NOCASE) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, v0.c0, v0.c1 FROM rt0 CROSS JOIN v0 ON ((0.5029630430741533)+(rt0.c1 COLLATE RTRIM));
SELECT ALL rt0.c2, v0.c0, rt0.c0, v0.c2 FROM vt1, rt0 CROSS JOIN v0 ON (v0.c1 IN ()) GROUP BY rt0.c2, v0.c0, rt0.c0, v0.c2;
SELECT ALL rt0.c2, v0.c0, rt0.c0, v0.c2 FROM vt1, rt0 CROSS JOIN v0 ON (v0.c1 IN ()) WHERE (((rt0.c0) BETWEEN (v0.c2) AND (0.6659711878062826)) COLLATE BINARY) GROUP BY rt0.c2, v0.c0, rt0.c0, v0.c2 UNION SELECT ALL rt0.c2, v0.c0, rt0.c0, v0.c2 FROM vt1, rt0 CROSS JOIN v0 ON (v0.c1 IN ()) WHERE ((NOT (((rt0.c0) BETWEEN (v0.c2) AND (0.6659711878062826)) COLLATE BINARY))) GROUP BY rt0.c2, v0.c0, rt0.c0, v0.c2 UNION SELECT rt0.c2, v0.c0, rt0.c0, v0.c2 FROM vt1, rt0 CROSS JOIN v0 ON (v0.c1 IN ()) WHERE (((((rt0.c0) BETWEEN (v0.c2) AND (0.6659711878062826)) COLLATE BINARY) ISNULL)) GROUP BY rt0.c2, v0.c0, rt0.c0, v0.c2;
SELECT ALL rt0.c2, v0.c0, rt0.c0, v0.c2 FROM vt1, rt0 CROSS JOIN v0 ON (v0.c1 IN ()) GROUP BY rt0.c2, v0.c0, rt0.c0, v0.c2;
SELECT vt0.c0, rt0.c0 FROM rt0, vt0 NATURAL JOIN vt1 GROUP BY vt0.c0, rt0.c0;
SELECT ALL vt0.c0, rt0.c0 FROM rt0, vt0 NATURAL JOIN vt1 GROUP BY vt0.c0, rt0.c0 HAVING TOTAL(((((rt0.c1)OR(vt0.c0)))AND(SUM(COUNT(vt1.c0))))) UNION ALL SELECT ALL vt0.c0, rt0.c0 FROM rt0, vt0 NATURAL JOIN vt1 GROUP BY vt0.c0, rt0.c0 HAVING (NOT (TOTAL(((((rt0.c1)OR(vt0.c0)))AND(SUM(COUNT(vt1.c0))))))) UNION ALL SELECT ALL vt0.c0, rt0.c0 FROM rt0, vt0 NATURAL JOIN vt1 GROUP BY vt0.c0, rt0.c0 HAVING ((TOTAL(((((rt0.c1)OR(vt0.c0)))AND(SUM(COUNT(vt1.c0)))))) ISNULL);
SELECT ALL MAX(UNLIKELY(DISTINCT ((rt0.c0)>(rt0.c2)))) FROM rt0;
SELECT ALL * FROM vt1, vt0;
SELECT * FROM vt1, vt0 WHERE ((+ (NULL))) UNION ALL SELECT ALL * FROM vt1, vt0 NOT INDEXED WHERE ((NOT ((+ (NULL))))) UNION ALL SELECT * FROM vt1, vt0 WHERE ((((+ (NULL))) ISNULL));
SELECT ALL * FROM vt1, vt0;
SELECT DISTINCT v0.c2 FROM rt0 CROSS JOIN vt1 ON (rt0.c0 COLLATE RTRIM IN (CASE 0.653028520917748  WHEN vt1.c0 THEN '' WHEN rt0.c2 THEN rt0.c2 WHEN v0.c2 THEN x'' END)) FULL OUTER JOIN v0 ON CAST(CAST(rt0.c1 AS INTEGER) AS BLOB);
SELECT v0.c1, v0.c0, vt0.c0 FROM vt1, v0, vt0 GROUP BY v0.c1, v0.c0, vt0.c0;
SELECT v0.c1, v0.c0, vt0.c0 FROM vt1, v0, vt0 WHERE (((((v0.c1)<<(v0.c1)))AND(((v0.c0) IS TRUE)))) GROUP BY v0.c1, v0.c0, vt0.c0 UNION SELECT v0.c1, v0.c0, vt0.c0 FROM vt1, v0, vt0 WHERE ((NOT (((((v0.c1)<<(v0.c1)))AND(((v0.c0) IS TRUE)))))) GROUP BY v0.c1, v0.c0, vt0.c0 UNION SELECT v0.c1, v0.c0, vt0.c0 FROM vt1, v0, vt0 WHERE (((((((v0.c1)<<(v0.c1)))AND(((v0.c0) IS TRUE)))) ISNULL)) GROUP BY v0.c1, v0.c0, vt0.c0;
SELECT v0.c1, v0.c0, vt0.c0 FROM vt1, v0, vt0 GROUP BY v0.c1, v0.c0, vt0.c0;
SELECT ALL rt0.c0, vt1.c0, v0.c2, v0.c1 FROM vt0, vt1, v0, rt0 GROUP BY rt0.c0, vt1.c0, v0.c2, v0.c1;
SELECT rt0.c0, vt1.c0, v0.c2, v0.c1 FROM vt0, vt1, v0, rt0 GROUP BY rt0.c0, vt1.c0, v0.c2, v0.c1 HAVING MAX(MIN(v0.c1)) UNION ALL SELECT ALL rt0.c0, vt1.c0, v0.c2, v0.c1 FROM vt0, vt1, v0, rt0 GROUP BY rt0.c0, vt1.c0, v0.c2, v0.c1 HAVING (NOT (MAX(MIN(v0.c1)))) UNION ALL SELECT rt0.c0, vt1.c0, v0.c2, v0.c1 FROM vt0, vt1, v0, rt0 GROUP BY rt0.c0, vt1.c0, v0.c2, v0.c1 HAVING ((MAX(MIN(v0.c1))) ISNULL);
SELECT ALL * FROM v0, rt0, vt0;
SELECT * FROM v0, rt0, vt0 WHERE (((((vt0.c0)OR(RTRIM(v0.c1))))AND(vt0.c0))) UNION ALL SELECT ALL * FROM v0, rt0, vt0 WHERE ((NOT (((((vt0.c0)OR(RTRIM(v0.c1))))AND(vt0.c0))))) UNION ALL SELECT * FROM v0, rt0, vt0 WHERE (((((((vt0.c0)OR(RTRIM(v0.c1))))AND(vt0.c0))) ISNULL));
SELECT ALL * FROM v0, rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (((CAST(rt0.c0 AS TEXT)) IS FALSE)) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (((CAST(rt0.c0 AS TEXT)) IS FALSE)))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((((CAST(rt0.c0 AS TEXT)) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1 WHERE (CAST(((vt0.c0) NOT BETWEEN (0.907200341316397) AND (vt0.c0)) AS REAL)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, vt1 WHERE ((NOT (CAST(((vt0.c0) NOT BETWEEN (0.907200341316397) AND (vt0.c0)) AS REAL)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, vt1 WHERE (((CAST(((vt0.c0) NOT BETWEEN (0.907200341316397) AND (vt0.c0)) AS REAL)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT ALL vt1.c0, rt0.c0 FROM rt0, vt0, vt1 GROUP BY vt1.c0, rt0.c0;
SELECT vt1.c0, rt0.c0 FROM rt0, vt0, vt1 GROUP BY vt1.c0, rt0.c0 HAVING ((COUNT(COUNT(vt0.c0))) IS TRUE) UNION ALL SELECT ALL vt1.c0, rt0.c0 FROM rt0, vt0, vt1 GROUP BY vt1.c0, rt0.c0 HAVING (NOT (((COUNT(COUNT(vt0.c0))) IS TRUE))) UNION ALL SELECT ALL vt1.c0, rt0.c0 FROM rt0, vt0, vt1 GROUP BY vt1.c0, rt0.c0 HAVING ((((COUNT(COUNT(vt0.c0))) IS TRUE)) ISNULL);
SELECT * FROM v0, vt1, rt0;
SELECT ALL * FROM v0, vt1, rt0 WHERE (rt0.c1) UNION ALL SELECT * FROM v0, vt1, rt0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT ALL * FROM v0, vt1, rt0 WHERE (((rt0.c1) ISNULL));
SELECT * FROM v0, vt1, rt0;
SELECT DISTINCT vt1.c0 FROM vt1 RIGHT OUTER JOIN v0 ON ((((rt0.c2) IS TRUE))IS(CAST(v0.c0 AS BLOB))) LEFT OUTER JOIN rt0 ON (((((v0.c1, vt1.c0, rt0.c2)) BETWEEN ((628128122, 0.8709029718208289, v0.c0)) AND ((rt0.c0, v0.c1, rt0.c1))))<=(((((v0.c1)AND(rt0.c2)))OR(rt0.c0))));
SELECT v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1;
SELECT v0.c2, v0.c0, v0.c1 FROM v0 WHERE (((CASE v0.c2  WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN v0.c1 WHEN v0.c2 THEN v0.c1 END)>=(v0.c2))) GROUP BY v0.c2, v0.c0, v0.c1 UNION SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0 WHERE ((NOT (((CASE v0.c2  WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN v0.c1 WHEN v0.c2 THEN v0.c1 END)>=(v0.c2))))) GROUP BY v0.c2, v0.c0, v0.c1 UNION SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0 WHERE (((((CASE v0.c2  WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN v0.c1 WHEN v0.c2 THEN v0.c1 END)>=(v0.c2))) ISNULL)) GROUP BY v0.c2, v0.c0, v0.c1;
SELECT v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1;
SELECT vt0.c0, rt0.c0, v0.c1, rt0.c2, v0.c0, v0.c2, rt0.c1 FROM vt0, rt0 RIGHT OUTER JOIN v0 ON CAST(((vt1.c0)+(vt0.c0)) AS INTEGER) LEFT OUTER JOIN vt1 ON (x'' IN (rt0.c2)) COLLATE BINARY GROUP BY vt0.c0, rt0.c0, v0.c1, rt0.c2, v0.c0, v0.c2, rt0.c1;
SELECT rt0.c0, rt0.c1, rt0.c2, vt1.c0, vt0.c0 FROM rt0, vt1, vt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt1.c0, vt0.c0 FROM rt0, vt1, vt0 WHERE ((((rt0.c0)<=(rt0.c2)) IN ())) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt1.c0, vt0.c0 FROM rt0, vt1, vt0 WHERE ((NOT ((((rt0.c0)<=(rt0.c2)) IN ())))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2, vt1.c0, vt0.c0 FROM rt0, vt1, vt0 WHERE ((((((rt0.c0)<=(rt0.c2)) IN ())) ISNULL));
SELECT rt0.c0, rt0.c1, rt0.c2, vt1.c0, vt0.c0 FROM rt0, vt1, vt0;
SELECT DISTINCT * FROM v0, vt0, rt0;
SELECT DISTINCT * FROM v0, vt0, rt0 WHERE (CASE WHEN (((rt0.c2)) BETWEEN ((v0.c1)) AND ((vt0.c0))) THEN ((rt0.c2) BETWEEN (rt0.c1) AND (v0.c0)) END) UNION SELECT DISTINCT * FROM v0, vt0, rt0 WHERE ((NOT (CASE WHEN (((rt0.c2)) BETWEEN ((v0.c1)) AND ((vt0.c0))) THEN ((rt0.c2) BETWEEN (rt0.c1) AND (v0.c0)) END))) UNION SELECT DISTINCT * FROM v0, vt0, rt0 WHERE (((CASE WHEN (((rt0.c2)) BETWEEN ((v0.c1)) AND ((vt0.c0))) THEN ((rt0.c2) BETWEEN (rt0.c1) AND (v0.c0)) END) ISNULL));
SELECT DISTINCT * FROM v0, vt0, rt0;
SELECT ALL v0.c1, v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c1, v0.c0, vt0.c0;
SELECT v0.c1, v0.c0, vt0.c0 FROM vt0, v0 WHERE (((v0.c1 COLLATE BINARY)AND(CAST(v0.c1 AS INTEGER)))) GROUP BY v0.c1, v0.c0, vt0.c0 UNION SELECT v0.c1, v0.c0, vt0.c0 FROM vt0, v0 WHERE ((NOT (((v0.c1 COLLATE BINARY)AND(CAST(v0.c1 AS INTEGER)))))) GROUP BY v0.c1, v0.c0, vt0.c0 UNION SELECT v0.c1, v0.c0, vt0.c0 FROM vt0, v0 WHERE (((((v0.c1 COLLATE BINARY)AND(CAST(v0.c1 AS INTEGER)))) ISNULL)) GROUP BY v0.c1, v0.c0, vt0.c0;
SELECT ALL v0.c1, v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c1, v0.c0, vt0.c0;
SELECT ALL rt0.c2, v0.c2, v0.c0 FROM v0, vt1, rt0 GROUP BY rt0.c2, v0.c2, v0.c0;
SELECT ALL rt0.c2, v0.c2, v0.c0 FROM v0, vt1, rt0 GROUP BY rt0.c2, v0.c2, v0.c0 HAVING GROUP_CONCAT((GROUP_CONCAT(vt1.c0) IN ())) UNION ALL SELECT rt0.c2, v0.c2, v0.c0 FROM v0, vt1, rt0 GROUP BY rt0.c2, v0.c2, v0.c0 HAVING (NOT (GROUP_CONCAT((GROUP_CONCAT(vt1.c0) IN ())))) UNION ALL SELECT rt0.c2, v0.c2, v0.c0 FROM v0, vt1, rt0 GROUP BY rt0.c2, v0.c2, v0.c0 HAVING ((GROUP_CONCAT((GROUP_CONCAT(vt1.c0) IN ()))) ISNULL);
SELECT ALL rt0.c2, v0.c2, v0.c0 FROM v0, vt1, rt0 GROUP BY rt0.c2, v0.c2, v0.c0;
SELECT ALL rt0.c2, v0.c2, v0.c0 FROM v0, vt1, rt0 GROUP BY rt0.c2, v0.c2, v0.c0 HAVING GROUP_CONCAT((GROUP_CONCAT(vt1.c0) IN ())) UNION ALL SELECT rt0.c2, v0.c2, v0.c0 FROM v0, vt1, rt0 GROUP BY rt0.c2, v0.c2, v0.c0 HAVING (NOT (GROUP_CONCAT((GROUP_CONCAT(vt1.c0) IN ())))) UNION ALL SELECT rt0.c2, v0.c2, v0.c0 FROM v0, vt1, rt0 GROUP BY rt0.c2, v0.c2, v0.c0 HAVING ((GROUP_CONCAT((GROUP_CONCAT(vt1.c0) IN ()))) ISNULL);
SELECT ALL rt0.c2, v0.c2, v0.c0 FROM v0, vt1, rt0 GROUP BY rt0.c2, v0.c2, v0.c0;
SELECT v0.c0, rt0.c1, vt0.c0, v0.c2, v0.c1, rt0.c0, rt0.c2, vt1.c0 FROM rt0, vt0 INNER JOIN v0 ON ((((vt0.c0)-(vt0.c0))) BETWEEN (TYPEOF(0.15812201183574826)) AND (((v0.c1) IS TRUE))) FULL OUTER JOIN vt1 ON CASE ((v0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c1))  WHEN CASE rt0.c0  WHEN v0.c0 THEN v0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN v0.c2 THEN vt0.c0 END THEN (~ (vt1.c0)) WHEN ((((v0.c0)OR(v0.c2)))OR(rt0.c2)) THEN (- (v0.c0)) WHEN (NOT (vt0.c0)) THEN v0.c1 WHEN ((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)) THEN v0.c0 WHEN x'' THEN UPPER(DISTINCT v0.c1) END;
SELECT ALL v0.c0, rt0.c1, vt0.c0, v0.c2, v0.c1, rt0.c0, rt0.c2, vt1.c0 FROM rt0, vt0 INNER JOIN v0 ON ((((vt0.c0)-(vt0.c0))) BETWEEN (TYPEOF(0.15812201183574826)) AND (((v0.c1) IS TRUE))) FULL OUTER JOIN vt1 ON CASE ((v0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c1))  WHEN CASE rt0.c0  WHEN v0.c0 THEN v0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN v0.c2 THEN vt0.c0 END THEN (~ (vt1.c0)) WHEN ((((v0.c0)OR(v0.c2)))OR(rt0.c2)) THEN (- (v0.c0)) WHEN (NOT (vt0.c0)) THEN v0.c1 WHEN ((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)) THEN v0.c0 WHEN x'' THEN UPPER(DISTINCT v0.c1) END WHERE (((((x'')OR((- (vt1.c0)))))AND(((((vt0.c0)AND(v0.c1)))AND(rt0.c1))))) UNION ALL SELECT v0.c0, rt0.c1, vt0.c0, v0.c2, v0.c1, rt0.c0, rt0.c2, vt1.c0 FROM rt0, vt0 INNER JOIN v0 ON ((((vt0.c0)-(vt0.c0))) BETWEEN (TYPEOF(0.15812201183574826)) AND (((v0.c1) IS TRUE))) FULL OUTER JOIN vt1 ON CASE ((v0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c1))  WHEN CASE rt0.c0  WHEN v0.c0 THEN v0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN v0.c2 THEN vt0.c0 END THEN (~ (vt1.c0)) WHEN ((((v0.c0)OR(v0.c2)))OR(rt0.c2)) THEN (- (v0.c0)) WHEN (NOT (vt0.c0)) THEN v0.c1 WHEN ((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)) THEN v0.c0 WHEN x'' THEN UPPER(DISTINCT v0.c1) END WHERE ((NOT (((((x'')OR((- (vt1.c0)))))AND(((((vt0.c0)AND(v0.c1)))AND(rt0.c1))))))) UNION ALL SELECT ALL v0.c0, rt0.c1, vt0.c0, v0.c2, v0.c1, rt0.c0, rt0.c2, vt1.c0 FROM rt0, vt0 INNER JOIN v0 ON ((((vt0.c0)-(vt0.c0))) BETWEEN (TYPEOF(0.15812201183574826)) AND (((v0.c1) IS TRUE))) FULL OUTER JOIN vt1 ON CASE ((v0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c1))  WHEN CASE rt0.c0  WHEN v0.c0 THEN v0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN v0.c2 THEN vt0.c0 END THEN (~ (vt1.c0)) WHEN ((((v0.c0)OR(v0.c2)))OR(rt0.c2)) THEN (- (v0.c0)) WHEN (NOT (vt0.c0)) THEN v0.c1 WHEN ((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)) THEN v0.c0 WHEN x'' THEN UPPER(DISTINCT v0.c1) END WHERE (((((((x'')OR((- (vt1.c0)))))AND(((((vt0.c0)AND(v0.c1)))AND(rt0.c1))))) ISNULL));
SELECT v0.c0, rt0.c1, vt0.c0, v0.c2, v0.c1, rt0.c0, rt0.c2, vt1.c0 FROM rt0, vt0 INNER JOIN v0 ON ((((vt0.c0)-(vt0.c0))) BETWEEN (TYPEOF(0.15812201183574826)) AND (((v0.c1) IS TRUE))) FULL OUTER JOIN vt1 ON CASE ((v0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c1))  WHEN CASE rt0.c0  WHEN v0.c0 THEN v0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN v0.c2 THEN vt0.c0 END THEN (~ (vt1.c0)) WHEN ((((v0.c0)OR(v0.c2)))OR(rt0.c2)) THEN (- (v0.c0)) WHEN (NOT (vt0.c0)) THEN v0.c1 WHEN ((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)) THEN v0.c0 WHEN x'' THEN UPPER(DISTINCT v0.c1) END;
SELECT DISTINCT * FROM rt0, vt0, vt1;
SELECT DISTINCT * FROM rt0, vt0, vt1 WHERE (CAST(CAST(rt0.c0 AS REAL) AS BLOB)) UNION SELECT DISTINCT * FROM rt0, vt0, vt1 WHERE ((NOT (CAST(CAST(rt0.c0 AS REAL) AS BLOB)))) UNION SELECT DISTINCT * FROM rt0, vt0, vt1 WHERE (((CAST(CAST(rt0.c0 AS REAL) AS BLOB)) ISNULL));
SELECT DISTINCT * FROM rt0, vt0, vt1;
SELECT ALL rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 WHERE ('1178390946') GROUP BY rt0.c0, vt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 WHERE ((NOT ('1178390946'))) GROUP BY rt0.c0, vt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 WHERE ((('1178390946') ISNULL)) GROUP BY rt0.c0, vt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, rt0.c2, rt0.c1;
SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1;
SELECT v0.c1 FROM v0 GROUP BY v0.c1 HAVING ((COUNT(v0.c2)) BETWEEN (TOTAL(v0.c0)) AND (MAX(GROUP_CONCAT(TOTAL(MAX(v0.c0)))) COLLATE NOCASE)) UNION ALL SELECT v0.c1 FROM v0 GROUP BY v0.c1 HAVING (NOT (((COUNT(v0.c2)) BETWEEN (TOTAL(v0.c0)) AND (MAX(GROUP_CONCAT(TOTAL(MAX(v0.c0)))) COLLATE NOCASE)))) UNION ALL SELECT v0.c1 FROM v0 GROUP BY v0.c1 HAVING ((((COUNT(v0.c2)) BETWEEN (TOTAL(v0.c0)) AND (MAX(GROUP_CONCAT(TOTAL(MAX(v0.c0)))) COLLATE NOCASE))) ISNULL);
SELECT ALL * FROM v0, vt1, rt0, vt0;
SELECT ALL * FROM v0, vt1, rt0, vt0 WHERE (((((rt0.c2) BETWEEN (v0.c1) AND (0.2608907530951534))) ISNULL)) UNION ALL SELECT ALL * FROM v0, vt1, rt0, vt0 WHERE ((NOT (((((rt0.c2) BETWEEN (v0.c1) AND (0.2608907530951534))) ISNULL)))) UNION ALL SELECT * FROM v0, vt1, rt0, vt0 WHERE (((((((rt0.c2) BETWEEN (v0.c1) AND (0.2608907530951534))) ISNULL)) ISNULL));
SELECT ALL * FROM v0, vt1, rt0, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (112754446) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (112754446))) UNION SELECT DISTINCT * FROM vt0 WHERE (((112754446) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL v0.c2 FROM vt1, vt0, v0 GROUP BY v0.c2;
SELECT ALL v0.c2 FROM vt1, vt0, v0 WHERE (((vt0.c0 COLLATE RTRIM)%('647657958'))) GROUP BY v0.c2 UNION SELECT v0.c2 FROM vt1, vt0, v0 WHERE ((NOT (((vt0.c0 COLLATE RTRIM)%('647657958'))))) GROUP BY v0.c2 UNION SELECT v0.c2 FROM vt1, vt0, v0 WHERE (((((vt0.c0 COLLATE RTRIM)%('647657958'))) ISNULL)) GROUP BY v0.c2;
SELECT ALL v0.c2 FROM vt1, vt0, v0 GROUP BY v0.c2;
SELECT ALL rt0.c1, v0.c0, v0.c2, rt0.c0 FROM v0, vt1, rt0 GROUP BY rt0.c1, v0.c0, v0.c2, rt0.c0;
SELECT ALL rt0.c1, v0.c0, v0.c2, rt0.c0 FROM v0, vt1, rt0 GROUP BY rt0.c1, v0.c0, v0.c2, rt0.c0 HAVING (((NOT (v0.c1)))<<(TOTAL(rt0.c2))) UNION ALL SELECT ALL rt0.c1, v0.c0, v0.c2, rt0.c0 FROM v0, vt1, rt0 GROUP BY rt0.c1, v0.c0, v0.c2, rt0.c0 HAVING (NOT ((((NOT (v0.c1)))<<(TOTAL(rt0.c2))))) UNION ALL SELECT rt0.c1, v0.c0, v0.c2, rt0.c0 FROM v0, vt1, rt0 GROUP BY rt0.c1, v0.c0, v0.c2, rt0.c0 HAVING (((((NOT (v0.c1)))<<(TOTAL(rt0.c2)))) ISNULL);
SELECT ALL rt0.c1, v0.c0, v0.c2, rt0.c0 FROM v0, vt1, rt0 GROUP BY rt0.c1, v0.c0, v0.c2, rt0.c0;
SELECT ALL rt0.c1, v0.c0, v0.c2, rt0.c0 FROM v0, vt1, rt0 GROUP BY rt0.c1, v0.c0, v0.c2, rt0.c0 HAVING (((NOT (v0.c1)))<<(TOTAL(rt0.c2))) UNION ALL SELECT ALL rt0.c1, v0.c0, v0.c2, rt0.c0 FROM v0, vt1, rt0 GROUP BY rt0.c1, v0.c0, v0.c2, rt0.c0 HAVING (NOT ((((NOT (v0.c1)))<<(TOTAL(rt0.c2))))) UNION ALL SELECT rt0.c1, v0.c0, v0.c2, rt0.c0 FROM v0, vt1, rt0 GROUP BY rt0.c1, v0.c0, v0.c2, rt0.c0 HAVING (((((NOT (v0.c1)))<<(TOTAL(rt0.c2)))) ISNULL);
SELECT ALL rt0.c1, v0.c0, v0.c2, rt0.c0 FROM v0, vt1, rt0 GROUP BY rt0.c1, v0.c0, v0.c2, rt0.c0;
SELECT * FROM vt0, vt1, v0;
SELECT ALL * FROM vt0, vt1, v0 WHERE ((((v0.c2)) NOT BETWEEN ((0.420782607795232)) AND ((v0.c1 COLLATE RTRIM)))) UNION ALL SELECT * FROM vt0, vt1, v0 WHERE ((NOT ((((v0.c2)) NOT BETWEEN ((0.420782607795232)) AND ((v0.c1 COLLATE RTRIM)))))) UNION ALL SELECT ALL * FROM vt0, vt1, v0 WHERE ((((((v0.c2)) NOT BETWEEN ((0.420782607795232)) AND ((v0.c1 COLLATE RTRIM)))) ISNULL));
SELECT * FROM vt0, vt1, v0;
SELECT DISTINCT v0.c1, rt0.c2 FROM rt0, v0;
SELECT DISTINCT v0.c1, rt0.c2 FROM rt0, v0 WHERE ((((((NOT (rt0.c0)))AND((- (rt0.c0)))))AND(((((v0.c0)OR(rt0.c0)))OR(x'bcbee55d'))))) UNION SELECT DISTINCT v0.c1, rt0.c2 FROM rt0, v0 WHERE ((NOT ((((((NOT (rt0.c0)))AND((- (rt0.c0)))))AND(((((v0.c0)OR(rt0.c0)))OR(x'bcbee55d'))))))) UNION SELECT DISTINCT v0.c1, rt0.c2 FROM rt0, v0 WHERE ((((((((NOT (rt0.c0)))AND((- (rt0.c0)))))AND(((((v0.c0)OR(rt0.c0)))OR(x'bcbee55d'))))) ISNULL));
SELECT DISTINCT v0.c1, rt0.c2 FROM rt0, v0;
SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, vt0 NOT INDEXED WHERE (((((vt1.c0)/(vt0.c0))) IS FALSE)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt1, vt0 WHERE ((NOT (((((vt1.c0)/(vt0.c0))) IS FALSE)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt1, vt0 WHERE (((((((vt1.c0)/(vt0.c0))) IS FALSE)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING TOTAL(TOTAL(COUNT(*))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (TOTAL(TOTAL(COUNT(*))))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((TOTAL(TOTAL(COUNT(*)))) ISNULL);
SELECT TOTAL(LIKE(CAST(vt0.c0 AS INTEGER), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) FROM vt0 ORDER BY (((CAST(vt0.c0 AS NUMERIC)))=((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ASC, ((0.0610548180765349) NOT NULL) DESC  NULLS FIRST;
SELECT * FROM rt0, v0, vt0;
SELECT * FROM rt0, v0, vt0 WHERE (CASE WHEN ((v0.c0) IS TRUE) THEN x'' WHEN CAST(x'2587' AS NUMERIC) THEN ((rt0.c1) ISNULL) WHEN x'55b4' COLLATE NOCASE THEN CASE v0.c0  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c1 END END) UNION ALL SELECT * FROM rt0, v0, vt0 WHERE ((NOT (CASE WHEN ((v0.c0) IS TRUE) THEN x'' WHEN CAST(x'2587' AS NUMERIC) THEN ((rt0.c1) ISNULL) WHEN x'55b4' COLLATE NOCASE THEN CASE v0.c0  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c1 END END))) UNION ALL SELECT ALL * FROM rt0, v0, vt0 WHERE (((CASE WHEN ((v0.c0) IS TRUE) THEN x'' WHEN CAST(x'2587' AS NUMERIC) THEN ((rt0.c1) ISNULL) WHEN x'55b4' COLLATE NOCASE THEN CASE v0.c0  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c1 END END) ISNULL));
SELECT * FROM rt0, v0, vt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((CASE WHEN vt1.c0 THEN vt1.c0 END IN ())) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((CASE WHEN vt1.c0 THEN vt1.c0 END IN ())))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((CASE WHEN vt1.c0 THEN vt1.c0 END IN ())) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1;
SELECT v0.c2, v0.c0, v0.c1 FROM v0 WHERE ((('()') NOT BETWEEN (((((v0.c0)OR(v0.c0)))AND(v0.c2))) AND ((+ (v0.c0))))) GROUP BY v0.c2, v0.c0, v0.c1 UNION SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0 WHERE ((NOT ((('()') NOT BETWEEN (((((v0.c0)OR(v0.c0)))AND(v0.c2))) AND ((+ (v0.c0))))))) GROUP BY v0.c2, v0.c0, v0.c1 UNION SELECT v0.c2, v0.c0, v0.c1 FROM v0 WHERE ((((('()') NOT BETWEEN (((((v0.c0)OR(v0.c0)))AND(v0.c2))) AND ((+ (v0.c0))))) ISNULL)) GROUP BY v0.c2, v0.c0, v0.c1;
SELECT v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1;
SELECT v0.c2, rt0.c2, vt1.c0 FROM vt1, rt0, v0 GROUP BY v0.c2, rt0.c2, vt1.c0;
SELECT v0.c2, rt0.c2, vt1.c0 FROM vt1, rt0, v0 GROUP BY v0.c2, rt0.c2, vt1.c0 HAVING COUNT((((v0.c1)) NOT BETWEEN ((MAX(COUNT(v0.c2)))) AND ((rt0.c2)))) UNION ALL SELECT ALL v0.c2, rt0.c2, vt1.c0 FROM vt1, rt0, v0 GROUP BY v0.c2, rt0.c2, vt1.c0 HAVING (NOT (COUNT((((v0.c1)) NOT BETWEEN ((MAX(COUNT(v0.c2)))) AND ((rt0.c2)))))) UNION ALL SELECT ALL v0.c2, rt0.c2, vt1.c0 FROM vt1, rt0, v0 GROUP BY v0.c2, rt0.c2, vt1.c0 HAVING ((COUNT((((v0.c1)) NOT BETWEEN ((MAX(COUNT(v0.c2)))) AND ((rt0.c2))))) ISNULL);
SELECT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (NULLIF(vt1.c0, ((vt1.c0) NOTNULL))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (NULLIF(vt1.c0, ((vt1.c0) NOTNULL))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((NULLIF(vt1.c0, ((vt1.c0) NOTNULL))) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT v0.c0, rt0.c2, v0.c2, rt0.c0 FROM rt0, v0;
SELECT DISTINCT v0.c0, rt0.c2, v0.c2, rt0.c0 FROM rt0, v0 WHERE (CASE WHEN '*hガ\n痕&5GS' THEN rt0.c1 WHEN rt0.c0 THEN NULL WHEN v0.c0 THEN rt0.c1 ELSE rt0.c1 END COLLATE RTRIM) UNION SELECT DISTINCT v0.c0, rt0.c2, v0.c2, rt0.c0 FROM rt0, v0 WHERE ((NOT (CASE WHEN '*hガ\n痕&5GS' THEN rt0.c1 WHEN rt0.c0 THEN NULL WHEN v0.c0 THEN rt0.c1 ELSE rt0.c1 END COLLATE RTRIM))) UNION SELECT DISTINCT v0.c0, rt0.c2, v0.c2, rt0.c0 FROM rt0, v0 WHERE (((CASE WHEN '*hガ\n痕&5GS' THEN rt0.c1 WHEN rt0.c0 THEN NULL WHEN v0.c0 THEN rt0.c1 ELSE rt0.c1 END COLLATE RTRIM) ISNULL));
SELECT DISTINCT v0.c0, rt0.c2, v0.c2, rt0.c0 FROM rt0, v0;
SELECT rt0.c0, v0.c0, v0.c2, rt0.c2, vt0.c0, rt0.c1, vt1.c0 FROM vt1, vt0, rt0, v0 GROUP BY rt0.c0, v0.c0, v0.c2, rt0.c2, vt0.c0, rt0.c1, vt1.c0;
SELECT rt0.c0, v0.c0, v0.c2, rt0.c2, vt0.c0, rt0.c1, vt1.c0 FROM vt1, vt0, rt0, v0 WHERE (CAST(((vt1.c0)||(vt1.c0)) AS NUMERIC)) GROUP BY rt0.c0, v0.c0, v0.c2, rt0.c2, vt0.c0, rt0.c1, vt1.c0 UNION SELECT rt0.c0, v0.c0, v0.c2, rt0.c2, vt0.c0, rt0.c1, vt1.c0 FROM vt1, vt0, rt0, v0 WHERE ((NOT (CAST(((vt1.c0)||(vt1.c0)) AS NUMERIC)))) GROUP BY rt0.c0, v0.c0, v0.c2, rt0.c2, vt0.c0, rt0.c1, vt1.c0 UNION SELECT rt0.c0, v0.c0, v0.c2, rt0.c2, vt0.c0, rt0.c1, vt1.c0 FROM vt1, vt0, rt0, v0 WHERE (((CAST(((vt1.c0)||(vt1.c0)) AS NUMERIC)) ISNULL)) GROUP BY rt0.c0, v0.c0, v0.c2, rt0.c2, vt0.c0, rt0.c1, vt1.c0;
SELECT rt0.c0, v0.c0, v0.c2, rt0.c2, vt0.c0, rt0.c1, vt1.c0 FROM vt1, vt0, rt0, v0 GROUP BY rt0.c0, v0.c0, v0.c2, rt0.c2, vt0.c0, rt0.c1, vt1.c0;
SELECT v0.c0, v0.c1, rt0.c2, rt0.c0, vt1.c0, v0.c2, vt0.c0, rt0.c1 FROM vt1, v0, vt0, rt0 GROUP BY v0.c0, v0.c1, rt0.c2, rt0.c0, vt1.c0, v0.c2, vt0.c0, rt0.c1;
SELECT v0.c0, v0.c1, rt0.c2, rt0.c0, vt1.c0, v0.c2, vt0.c0, rt0.c1 FROM vt1, v0, vt0, rt0 GROUP BY v0.c0, v0.c1, rt0.c2, rt0.c0, vt1.c0, v0.c2, vt0.c0, rt0.c1 HAVING rt0.c1 UNION ALL SELECT v0.c0, v0.c1, rt0.c2, rt0.c0, vt1.c0, v0.c2, vt0.c0, rt0.c1 FROM vt1, v0, vt0, rt0 GROUP BY v0.c0, v0.c1, rt0.c2, rt0.c0, vt1.c0, v0.c2, vt0.c0, rt0.c1 HAVING (NOT (rt0.c1)) UNION ALL SELECT v0.c0, v0.c1, rt0.c2, rt0.c0, vt1.c0, v0.c2, vt0.c0, rt0.c1 FROM vt1, v0, vt0, rt0 GROUP BY v0.c0, v0.c1, rt0.c2, rt0.c0, vt1.c0, v0.c2, vt0.c0, rt0.c1 HAVING ((rt0.c1) ISNULL);
SELECT v0.c0, v0.c1, rt0.c2, rt0.c0, vt1.c0, v0.c2, vt0.c0, rt0.c1 FROM vt1, v0, vt0, rt0 GROUP BY v0.c0, v0.c1, rt0.c2, rt0.c0, vt1.c0, v0.c2, vt0.c0, rt0.c1;
SELECT v0.c0, v0.c1, rt0.c2, rt0.c0, vt1.c0, v0.c2, vt0.c0, rt0.c1 FROM vt1, v0, vt0, rt0 GROUP BY v0.c0, v0.c1, rt0.c2, rt0.c0, vt1.c0, v0.c2, vt0.c0, rt0.c1 HAVING rt0.c1 UNION ALL SELECT v0.c0, v0.c1, rt0.c2, rt0.c0, vt1.c0, v0.c2, vt0.c0, rt0.c1 FROM vt1, v0, vt0, rt0 GROUP BY v0.c0, v0.c1, rt0.c2, rt0.c0, vt1.c0, v0.c2, vt0.c0, rt0.c1 HAVING (NOT (rt0.c1)) UNION ALL SELECT v0.c0, v0.c1, rt0.c2, rt0.c0, vt1.c0, v0.c2, vt0.c0, rt0.c1 FROM vt1, v0, vt0, rt0 GROUP BY v0.c0, v0.c1, rt0.c2, rt0.c0, vt1.c0, v0.c2, vt0.c0, rt0.c1 HAVING ((rt0.c1) ISNULL);
SELECT v0.c0, v0.c1, rt0.c2, rt0.c0, vt1.c0, v0.c2, vt0.c0, rt0.c1 FROM vt1, v0, vt0, rt0 GROUP BY v0.c0, v0.c1, rt0.c2, rt0.c0, vt1.c0, v0.c2, vt0.c0, rt0.c1;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (CAST(CASE 'QowJ(㒆懴X'  WHEN vt0.c0 THEN vt0.c0 END AS INTEGER)) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (CAST(CASE 'QowJ(㒆懴X'  WHEN vt0.c0 THEN vt0.c0 END AS INTEGER)))) UNION ALL SELECT ALL * FROM vt0 WHERE (((CAST(CASE 'QowJ(㒆懴X'  WHEN vt0.c0 THEN vt0.c0 END AS INTEGER)) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt1, rt0, v0, vt0;
SELECT DISTINCT * FROM vt1, rt0, v0, vt0 WHERE (((vt1.c0)<=(v0.c2)) COLLATE BINARY) UNION SELECT DISTINCT * FROM vt1, rt0, v0, vt0 WHERE ((NOT (((vt1.c0)<=(v0.c2)) COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt1, rt0, v0, vt0 WHERE (((((vt1.c0)<=(v0.c2)) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM vt1, rt0, v0, vt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (CAST(((vt1.c0)OR(vt1.c0)) AS TEXT)) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (CAST(((vt1.c0)OR(vt1.c0)) AS TEXT)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((CAST(((vt1.c0)OR(vt1.c0)) AS TEXT)) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL v0.c0, v0.c2, rt0.c0, vt0.c0 FROM v0, rt0, vt0, vt1 GROUP BY v0.c0, v0.c2, rt0.c0, vt0.c0;
SELECT v0.c0, v0.c2, rt0.c0, vt0.c0 FROM v0, rt0, vt0, vt1 GROUP BY v0.c0, v0.c2, rt0.c0, vt0.c0 HAVING GROUP_CONCAT(SUM(MAX(rt0.c2))) UNION ALL SELECT v0.c0, v0.c2, rt0.c0, vt0.c0 FROM v0, rt0, vt0, vt1 GROUP BY v0.c0, v0.c2, rt0.c0, vt0.c0 HAVING (NOT (GROUP_CONCAT(SUM(MAX(rt0.c2))))) UNION ALL SELECT v0.c0, v0.c2, rt0.c0, vt0.c0 FROM v0, rt0, vt0, vt1 GROUP BY v0.c0, v0.c2, rt0.c0, vt0.c0 HAVING ((GROUP_CONCAT(SUM(MAX(rt0.c2)))) ISNULL);
SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0;
SELECT v0.c1, v0.c0, v0.c2 FROM v0 WHERE (((CASE v0.c1  WHEN v0.c2 THEN v0.c2 END) ISNULL)) UNION ALL SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 WHERE ((NOT (((CASE v0.c1  WHEN v0.c2 THEN v0.c2 END) ISNULL)))) UNION ALL SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 WHERE (((((CASE v0.c1  WHEN v0.c2 THEN v0.c2 END) ISNULL)) ISNULL));
SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (((x'187a')*((NOT (x''))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (((x'187a')*((NOT (x''))))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((((x'187a')*((NOT (x''))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT ALL v0.c2, v0.c0, rt0.c2, rt0.c0, vt1.c0, v0.c1, rt0.c1 FROM vt1 CROSS JOIN vt0 ON ((((NULL)AND(rt0.c0)))OR(v0.c2)) COLLATE BINARY FULL OUTER JOIN v0 ON SUBSTR((- (v0.c2)), (('Pk,6')>>(v0.c1))) RIGHT OUTER JOIN rt0 ON ((((v0.c0)>=(vt0.c0))) NOT NULL) GROUP BY v0.c2, v0.c0, rt0.c2, rt0.c0, vt1.c0, v0.c1, rt0.c1;
SELECT vt1.c0, vt0.c0, rt0.c0, rt0.c1 FROM rt0, vt0, vt1 GROUP BY vt1.c0, vt0.c0, rt0.c0, rt0.c1;
SELECT ALL vt1.c0, vt0.c0, rt0.c0, rt0.c1 FROM rt0, vt0, vt1 GROUP BY vt1.c0, vt0.c0, rt0.c0, rt0.c1 HAVING SUM(((((rt0.c0)AND(TOTAL(vt1.c0))))AND(SUM('-1140442463')))) UNION ALL SELECT vt1.c0, vt0.c0, rt0.c0, rt0.c1 FROM rt0, vt0, vt1 GROUP BY vt1.c0, vt0.c0, rt0.c0, rt0.c1 HAVING (NOT (SUM(((((rt0.c0)AND(TOTAL(vt1.c0))))AND(SUM('-1140442463')))))) UNION ALL SELECT ALL vt1.c0, vt0.c0, rt0.c0, rt0.c1 FROM rt0, vt0, vt1 GROUP BY vt1.c0, vt0.c0, rt0.c0, rt0.c1 HAVING ((SUM(((((rt0.c0)AND(TOTAL(vt1.c0))))AND(SUM('-1140442463'))))) ISNULL);
SELECT ALL rt0.c1 FROM vt0, v0, rt0, vt1;
SELECT ALL rt0.c1 FROM vt0, v0, rt0, vt1 WHERE (highlight(vt0.c0, rt0.c2, ((vt0.c0) NOTNULL), CASE v0.c1  WHEN v0.c0 THEN v0.c2 END)) UNION ALL SELECT ALL rt0.c1 FROM vt0, v0, rt0, vt1 WHERE ((NOT (highlight(vt0.c0, rt0.c2, ((vt0.c0) NOTNULL), CASE v0.c1  WHEN v0.c0 THEN v0.c2 END)))) UNION ALL SELECT rt0.c1 FROM vt0, v0, rt0, vt1 WHERE (((highlight(vt0.c0, rt0.c2, ((vt0.c0) NOTNULL), CASE v0.c1  WHEN v0.c0 THEN v0.c2 END)) ISNULL));
SELECT ALL rt0.c1 FROM vt0, v0, rt0, vt1;
SELECT DISTINCT v0.c2, rt0.c0 FROM vt1, rt0, v0, vt0;
SELECT DISTINCT v0.c2, rt0.c0 FROM vt1, rt0, v0, vt0 WHERE (CASE WHEN (((rt0.c0, v0.c0, v0.c0))<>((7.09779005E8, rt0.c1, rt0.c0))) THEN ((0.923732279139295) NOT BETWEEN (vt1.c0) AND (rt0.c0)) END) UNION SELECT DISTINCT v0.c2, rt0.c0 FROM vt1, rt0, v0, vt0 WHERE ((NOT (CASE WHEN (((rt0.c0, v0.c0, v0.c0))!=((7.09779005E8, rt0.c1, rt0.c0))) THEN ((0.923732279139295) NOT BETWEEN (vt1.c0) AND (rt0.c0)) END))) UNION SELECT DISTINCT v0.c2, rt0.c0 FROM vt1, rt0, v0, vt0 WHERE (((CASE WHEN (((rt0.c0, v0.c0, v0.c0))<>((7.09779005E8, rt0.c1, rt0.c0))) THEN ((0.923732279139295) NOT BETWEEN (vt1.c0) AND (rt0.c0)) END) ISNULL));
SELECT DISTINCT v0.c2, rt0.c0 FROM vt1, rt0, v0, vt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (vt1.c0) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((vt1.c0) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1;
SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1 HAVING COUNT(*) UNION ALL SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1;
SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1 HAVING COUNT(*) UNION ALL SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1;
SELECT v0.c2, v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON (((- (vt0.c0))) NOT NULL) INNER JOIN vt1 ON (((v0.c0, vt0.c0, v0.c2)) NOT BETWEEN ((vt0.c0, vt1.c0, vt1.c0)) AND ((v0.c1, x'', v0.c1))) COLLATE RTRIM;
SELECT ALL v0.c2, v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON (((- (vt0.c0))) NOT NULL) INNER JOIN vt1 ON (((v0.c0, vt0.c0, v0.c2)) NOT BETWEEN ((vt0.c0, vt1.c0, vt1.c0)) AND ((v0.c1, x'', v0.c1))) COLLATE RTRIM WHERE (CASE '876381901'  WHEN (v0.c2 IN (v0.c2)) THEN vt1.c0 ELSE vt0.c0 COLLATE BINARY END) UNION ALL SELECT ALL v0.c2, v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON (((- (vt0.c0))) NOT NULL) INNER JOIN vt1 ON (((v0.c0, vt0.c0, v0.c2)) NOT BETWEEN ((vt0.c0, vt1.c0, vt1.c0)) AND ((v0.c1, x'', v0.c1))) COLLATE RTRIM WHERE ((NOT (CASE '876381901'  WHEN (v0.c2 IN (v0.c2)) THEN vt1.c0 ELSE vt0.c0 COLLATE BINARY END))) UNION ALL SELECT v0.c2, v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON (((- (vt0.c0))) NOT NULL) INNER JOIN vt1 ON (((v0.c0, vt0.c0, v0.c2)) NOT BETWEEN ((vt0.c0, vt1.c0, vt1.c0)) AND ((v0.c1, x'', v0.c1))) COLLATE RTRIM WHERE (((CASE '876381901'  WHEN (v0.c2 IN (v0.c2)) THEN vt1.c0 ELSE vt0.c0 COLLATE BINARY END) ISNULL));
SELECT v0.c2, v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON (((- (vt0.c0))) NOT NULL) INNER JOIN vt1 ON (((v0.c0, vt0.c0, v0.c2)) NOT BETWEEN ((vt0.c0, vt1.c0, vt1.c0)) AND ((v0.c1, x'', v0.c1))) COLLATE RTRIM;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((NULL))) IN ())) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((NULL))) IN ())))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((NULL))) IN ())) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (CASE WHEN (rt0.c0 IN ()) THEN NULL END) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (CASE WHEN (rt0.c0 IN ()) THEN NULL END))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((CASE WHEN (rt0.c0 IN ()) THEN NULL END) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING GROUP_CONCAT(SUM(rt0.c0)) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (GROUP_CONCAT(SUM(rt0.c0)))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((GROUP_CONCAT(SUM(rt0.c0))) ISNULL);
SELECT ALL * FROM vt1, rt0, v0, vt0;
SELECT ALL * FROM vt1, rt0, v0, vt0 WHERE (((CAST(v0.c2 AS BLOB)) IS FALSE)) UNION ALL SELECT * FROM vt1, rt0, v0, vt0 WHERE ((NOT (((CAST(v0.c2 AS BLOB)) IS FALSE)))) UNION ALL SELECT * FROM vt1, rt0, v0, vt0 WHERE (((((CAST(v0.c2 AS BLOB)) IS FALSE)) ISNULL));
SELECT ALL * FROM vt1, rt0, v0, vt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c0 END)%(HEX(DISTINCT rt0.c0)))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c0 END)%(HEX(DISTINCT rt0.c0)))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c0 END)%(HEX(DISTINCT rt0.c0)))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT v0.c0, v0.c1, v0.c2, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, v0.c1, v0.c2, vt0.c0;
SELECT ALL v0.c0, v0.c1, v0.c2, vt0.c0 FROM vt0, v0 WHERE (CASE -1.336248111E9  WHEN (((v0.c0)) BETWEEN ((v0.c2)) AND ((v0.c0))) THEN 0.8371940460857282 END) GROUP BY v0.c0, v0.c1, v0.c2, vt0.c0 UNION SELECT v0.c0, v0.c1, v0.c2, vt0.c0 FROM vt0, v0 WHERE ((NOT (CASE -1.336248111E9  WHEN (((v0.c0)) BETWEEN ((v0.c2)) AND ((v0.c0))) THEN 0.8371940460857282 END))) GROUP BY v0.c0, v0.c1, v0.c2, vt0.c0 UNION SELECT v0.c0, v0.c1, v0.c2, vt0.c0 FROM vt0, v0 WHERE (((CASE -1.336248111E9  WHEN (((v0.c0)) BETWEEN ((v0.c2)) AND ((v0.c0))) THEN 0.8371940460857282 END) ISNULL)) GROUP BY v0.c0, v0.c1, v0.c2, vt0.c0;
SELECT v0.c0, v0.c1, v0.c2, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, v0.c1, v0.c2, vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT(COUNT(*)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(COUNT(*))) ISNULL);
SELECT v0.c2 FROM rt0, v0 LEFT OUTER JOIN vt1 ON (- (((v0.c0)>(rt0.c2))));
SELECT ALL v0.c2 FROM rt0, v0 LEFT OUTER JOIN vt1 ON (- (((v0.c0)>(rt0.c2)))) WHERE (((CAST(vt1.c0 AS BLOB))LIKE(CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN v0.c0 WHEN rt0.c1 THEN v0.c1 ELSE rt0.c2 END))) UNION ALL SELECT ALL v0.c2 FROM rt0, v0 LEFT OUTER JOIN vt1 ON (- (((v0.c0)>(rt0.c2)))) WHERE ((NOT (((CAST(vt1.c0 AS BLOB))LIKE(CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN v0.c0 WHEN rt0.c1 THEN v0.c1 ELSE rt0.c2 END))))) UNION ALL SELECT v0.c2 FROM rt0, v0 LEFT OUTER JOIN vt1 ON (- (((v0.c0)>(rt0.c2)))) WHERE (((((CAST(vt1.c0 AS BLOB))LIKE(CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN v0.c0 WHEN rt0.c1 THEN v0.c1 ELSE rt0.c2 END))) ISNULL));
SELECT v0.c2 FROM rt0, v0 LEFT OUTER JOIN vt1 ON (- (((v0.c0)>(rt0.c2))));
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (((LIKELY(DISTINCT rt0.c1))*(((v0.c0)!=(v0.c1))))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (((LIKELY(DISTINCT rt0.c1))*(((v0.c0)<>(v0.c1))))))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((((LIKELY(DISTINCT rt0.c1))*(((v0.c0)!=(v0.c1))))) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT ALL rt0.c1, vt0.c0, v0.c1, vt1.c0 FROM v0, vt0, rt0, vt1 GROUP BY rt0.c1, vt0.c0, v0.c1, vt1.c0;
SELECT ALL rt0.c1, vt0.c0, v0.c1, vt1.c0 FROM v0, vt0, rt0, vt1 WHERE ((((rt0.c1)) NOT BETWEEN ((((v0.c2)LIKE(x'')))) AND ((v0.c1 COLLATE RTRIM)))) GROUP BY rt0.c1, vt0.c0, v0.c1, vt1.c0 UNION SELECT ALL rt0.c1, vt0.c0, v0.c1, vt1.c0 FROM v0, vt0, rt0, vt1 WHERE ((NOT ((((rt0.c1)) NOT BETWEEN ((((v0.c2)LIKE(x'')))) AND ((v0.c1 COLLATE RTRIM)))))) GROUP BY rt0.c1, vt0.c0, v0.c1, vt1.c0 UNION SELECT rt0.c1, vt0.c0, v0.c1, vt1.c0 FROM v0, vt0, rt0, vt1 WHERE ((((((rt0.c1)) NOT BETWEEN ((((v0.c2)LIKE(x'')))) AND ((v0.c1 COLLATE RTRIM)))) ISNULL)) GROUP BY rt0.c1, vt0.c0, v0.c1, vt1.c0;
SELECT ALL rt0.c1, vt0.c0, v0.c1, vt1.c0 FROM v0, vt0, rt0, vt1 GROUP BY rt0.c1, vt0.c0, v0.c1, vt1.c0;
SELECT v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2;
SELECT ALL v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2 HAVING -956051962 UNION ALL SELECT v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2 HAVING (NOT (-956051962)) UNION ALL SELECT v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2 HAVING ((-956051962) ISNULL);
SELECT v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2;
SELECT ALL v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2 HAVING -956051962 UNION ALL SELECT v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2 HAVING (NOT (-956051962)) UNION ALL SELECT v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2 HAVING ((-956051962) ISNULL);
SELECT v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2;
SELECT * FROM vt1, vt0;
SELECT * FROM vt1, vt0 WHERE (((((~ (vt1.c0)), ((vt1.c0) ISNULL), ((vt1.c0)<=(vt1.c0))))>=(('-1378685176', (((vt0.c0))>=((vt1.c0))), CAST(vt0.c0 AS BLOB))))) UNION ALL SELECT * FROM vt1, vt0 WHERE ((NOT (((((~ (vt1.c0)), ((vt1.c0) ISNULL), ((vt1.c0)<=(vt1.c0))))>=(('-1378685176', (((vt0.c0))>=((vt1.c0))), CAST(vt0.c0 AS BLOB))))))) UNION ALL SELECT * FROM vt1, vt0 WHERE (((((((~ (vt1.c0)), ((vt1.c0) ISNULL), ((vt1.c0)<=(vt1.c0))))>=(('-1378685176', (((vt0.c0))>=((vt1.c0))), CAST(vt0.c0 AS BLOB))))) ISNULL));
SELECT * FROM vt1, vt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((- (rt0.c0))) NOT BETWEEN (HEX(DISTINCT rt0.c2)) AND ((rt0.c1 IN (rt0.c0, rt0.c0))))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((((- (rt0.c0))) NOT BETWEEN (HEX(DISTINCT rt0.c2)) AND ((rt0.c1 IN (rt0.c0, rt0.c0))))))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((((- (rt0.c0))) NOT BETWEEN (HEX(DISTINCT rt0.c2)) AND ((rt0.c1 IN (rt0.c0, rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT v0.c0, v0.c1, vt1.c0, v0.c2 FROM v0, vt1 GROUP BY v0.c0, v0.c1, vt1.c0, v0.c2;
SELECT ALL v0.c0, v0.c1, vt1.c0, v0.c2 FROM v0, vt1 WHERE (0X2570797a) GROUP BY v0.c0, v0.c1, vt1.c0, v0.c2 UNION SELECT ALL v0.c0, v0.c1, vt1.c0, v0.c2 FROM v0, vt1 WHERE ((NOT (0x2570797a))) GROUP BY v0.c0, v0.c1, vt1.c0, v0.c2 UNION SELECT ALL v0.c0, v0.c1, vt1.c0, v0.c2 FROM v0, vt1 WHERE (((0X2570797a) ISNULL)) GROUP BY v0.c0, v0.c1, vt1.c0, v0.c2;
SELECT v0.c0, v0.c1, vt1.c0, v0.c2 FROM v0, vt1 GROUP BY v0.c0, v0.c1, vt1.c0, v0.c2;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (('')-(CASE WHEN vt1.c0 THEN AVG(COUNT(SUM(MIN(TOTAL(COUNT(*)))))) END)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((('')-(CASE WHEN vt1.c0 THEN AVG(COUNT(SUM(MIN(TOTAL(COUNT(*)))))) END)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((('')-(CASE WHEN vt1.c0 THEN AVG(COUNT(SUM(MIN(TOTAL(COUNT(*)))))) END))) ISNULL);
SELECT v0.c2 FROM vt0, rt0, vt1 FULL OUTER JOIN v0 ON CAST(0.7520397375396893 AS TEXT);
SELECT ALL v0.c2 FROM vt0, rt0, vt1 FULL OUTER JOIN v0 ON CAST(0.7520397375396893 AS TEXT) WHERE (ABS(((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c2)))) UNION ALL SELECT ALL v0.c2 FROM vt0, rt0, vt1 FULL OUTER JOIN v0 ON CAST(0.7520397375396893 AS TEXT) WHERE ((NOT (ABS(((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c2)))))) UNION ALL SELECT v0.c2 FROM vt0, rt0, vt1 FULL OUTER JOIN v0 ON CAST(0.7520397375396893 AS TEXT) WHERE (((ABS(((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c2)))) ISNULL));
SELECT v0.c2 FROM vt0, rt0, vt1 FULL OUTER JOIN v0 ON CAST(0.7520397375396893 AS TEXT);
SELECT DISTINCT * FROM rt0, v0, vt0;
SELECT DISTINCT * FROM rt0, v0, vt0 WHERE (((('-739183068') NOT NULL) IN ())) UNION SELECT DISTINCT * FROM rt0, v0, vt0 WHERE ((NOT (((('-739183068') NOT NULL) IN ())))) UNION SELECT DISTINCT * FROM rt0, v0, vt0 WHERE (((((('-739183068') NOT NULL) IN ())) ISNULL));
SELECT DISTINCT * FROM rt0, v0, vt0;
SELECT vt0.c0, v0.c1 FROM vt0, vt1, v0 GROUP BY vt0.c0, v0.c1;
SELECT vt0.c0, v0.c1 FROM vt0, vt1, v0 WHERE (CAST((((v0.c0))>=((vt1.c0))) AS BLOB)) GROUP BY vt0.c0, v0.c1 UNION SELECT ALL vt0.c0, v0.c1 FROM vt0, vt1, v0 WHERE ((NOT (CAST((((v0.c0))>=((vt1.c0))) AS BLOB)))) GROUP BY vt0.c0, v0.c1 UNION SELECT vt0.c0, v0.c1 FROM vt0, vt1 NOT INDEXED, v0 WHERE (((CAST((((v0.c0))>=((vt1.c0))) AS BLOB)) ISNULL)) GROUP BY vt0.c0, v0.c1;
SELECT vt0.c0, v0.c1 FROM vt0, vt1, v0 GROUP BY vt0.c0, v0.c1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((AVG(COUNT(TOTAL(SUM(GROUP_CONCAT(MIN(vt1.c0)))))))AND(((COUNT(*))IS NOT(MIN(SUM(AVG(vt1.c0))))))))AND(GROUP_CONCAT(MIN(vt1.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((((AVG(COUNT(TOTAL(SUM(GROUP_CONCAT(MIN(vt1.c0)))))))AND(((COUNT(*))IS NOT(MIN(SUM(AVG(vt1.c0))))))))AND(GROUP_CONCAT(MIN(vt1.c0)))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((((AVG(COUNT(TOTAL(SUM(GROUP_CONCAT(MIN(vt1.c0)))))))AND(((COUNT(*))IS NOT(MIN(SUM(AVG(vt1.c0))))))))AND(GROUP_CONCAT(MIN(vt1.c0))))) ISNULL);
SELECT ALL MIN(CASE WHEN (((v0.c0, rt0.c0, v0.c1))>=((v0.c0, v0.c2, x''))) THEN ((v0.c2)&(v0.c1)) END) FROM rt0, v0 ORDER BY ((((v0.c0)GLOB(v0.c1))) BETWEEN (((rt0.c1) BETWEEN (v0.c2) AND (rt0.c2))) AND (NULL));
SELECT vt0.c0, vt1.c0 FROM vt0, vt1;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (CAST(((vt1.c0) ISNULL) AS TEXT)) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((NOT (CAST(((vt1.c0) ISNULL) AS TEXT)))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((CAST(((vt1.c0) ISNULL) AS TEXT)) ISNULL));
SELECT vt0.c0, vt1.c0 FROM vt0, vt1;
SELECT DISTINCT rt0.c2, v0.c2 FROM rt0 NATURAL JOIN v0;
SELECT DISTINCT rt0.c2, v0.c2 FROM rt0 NATURAL JOIN v0 WHERE (((((v0.c2) NOT NULL)) BETWEEN (TYPEOF(rt0.c1)) AND (CASE WHEN -935790884 THEN '' WHEN rt0.c2 THEN rt0.c2 WHEN v0.c0 THEN NULL END))) UNION SELECT DISTINCT rt0.c2, v0.c2 FROM rt0 NATURAL JOIN v0 WHERE ((NOT (((((v0.c2) NOT NULL)) BETWEEN (TYPEOF(rt0.c1)) AND (CASE WHEN -935790884 THEN '' WHEN rt0.c2 THEN rt0.c2 WHEN v0.c0 THEN NULL END))))) UNION SELECT DISTINCT rt0.c2, v0.c2 FROM rt0 NATURAL JOIN v0 WHERE (((((((v0.c2) NOT NULL)) BETWEEN (TYPEOF(rt0.c1)) AND (CASE WHEN -935790884 THEN '' WHEN rt0.c2 THEN rt0.c2 WHEN v0.c0 THEN NULL END))) ISNULL));
SELECT DISTINCT rt0.c2, v0.c2 FROM rt0 NATURAL JOIN v0;
SELECT ALL v0.c1, rt0.c1, v0.c0, vt1.c0, rt0.c0, rt0.c2 FROM vt1, rt0, vt0, v0 GROUP BY v0.c1, rt0.c1, v0.c0, vt1.c0, rt0.c0, rt0.c2;
SELECT ALL v0.c1, rt0.c1, v0.c0, vt1.c0, rt0.c0, rt0.c2 FROM vt1, rt0, vt0, v0 WHERE (((((0.6611474983412996) IS FALSE)) BETWEEN (CASE v0.c2  WHEN vt0.c0 THEN vt0.c0 ELSE v0.c2 END) AND (v0.c0 COLLATE NOCASE))) GROUP BY v0.c1, rt0.c1, v0.c0, vt1.c0, rt0.c0, rt0.c2 UNION SELECT v0.c1, rt0.c1, v0.c0, vt1.c0, rt0.c0, rt0.c2 FROM vt1, rt0, vt0, v0 WHERE ((NOT (((((0.6611474983412996) IS FALSE)) BETWEEN (CASE v0.c2  WHEN vt0.c0 THEN vt0.c0 ELSE v0.c2 END) AND (v0.c0 COLLATE NOCASE))))) GROUP BY v0.c1, rt0.c1, v0.c0, vt1.c0, rt0.c0, rt0.c2 UNION SELECT v0.c1, rt0.c1, v0.c0, vt1.c0, rt0.c0, rt0.c2 FROM vt1, rt0, vt0, v0 WHERE (((((((0.6611474983412996) IS FALSE)) BETWEEN (CASE v0.c2  WHEN vt0.c0 THEN vt0.c0 ELSE v0.c2 END) AND (v0.c0 COLLATE NOCASE))) ISNULL)) GROUP BY v0.c1, rt0.c1, v0.c0, vt1.c0, rt0.c0, rt0.c2;
SELECT ALL v0.c1, rt0.c1, v0.c0, vt1.c0, rt0.c0, rt0.c2 FROM vt1, rt0, vt0, v0 GROUP BY v0.c1, rt0.c1, v0.c0, vt1.c0, rt0.c0, rt0.c2;
SELECT ALL v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0;
SELECT v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0 HAVING v0.c0 COLLATE RTRIM UNION ALL SELECT ALL v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0 HAVING (NOT (v0.c0 COLLATE RTRIM)) UNION ALL SELECT v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0 HAVING ((v0.c0 COLLATE RTRIM) ISNULL);
SELECT ALL v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0;
SELECT v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0 HAVING v0.c0 COLLATE RTRIM UNION ALL SELECT ALL v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0 HAVING (NOT (v0.c0 COLLATE RTRIM)) UNION ALL SELECT v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0 HAVING ((v0.c0 COLLATE RTRIM) ISNULL);
SELECT ALL v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0;
SELECT * FROM rt0 CROSS JOIN v0 ON CAST(((((rt0.c2)OR(v0.c1)))AND(x'bdf1')) AS BLOB) INNER JOIN vt0 ON (((((v0.c1) NOT BETWEEN (v0.c2) AND (rt0.c2))))>(((rt0.c1 IN ()))));
SELECT ALL * FROM rt0 CROSS JOIN v0 ON CAST(((((rt0.c2)OR(v0.c1)))AND(x'bdf1')) AS BLOB) INNER JOIN vt0 ON (((((v0.c1) NOT BETWEEN (v0.c2) AND (rt0.c2))))>(((rt0.c1 IN ())))) WHERE ((((CAST(v0.c0 AS BLOB)))>(((((v0.c1, 0.3765243958290029, rt0.c2, vt0.c0, v0.c0))=((rt0.c1, v0.c0, v0.c0, vt0.c0, rt0.c1))))))) UNION ALL SELECT ALL * FROM rt0 CROSS JOIN v0 ON CAST(((((rt0.c2)OR(v0.c1)))AND(x'bdf1')) AS BLOB) INNER JOIN vt0 ON (((((v0.c1) NOT BETWEEN (v0.c2) AND (rt0.c2))))>(((rt0.c1 IN ())))) WHERE ((NOT ((((CAST(v0.c0 AS BLOB)))>(((((v0.c1, 0.3765243958290029, rt0.c2, vt0.c0, v0.c0))=((rt0.c1, v0.c0, v0.c0, vt0.c0, rt0.c1))))))))) UNION ALL SELECT * FROM rt0 CROSS JOIN v0 ON CAST(((((rt0.c2)OR(v0.c1)))AND(x'bdf1')) AS BLOB) INNER JOIN vt0 ON (((((v0.c1) NOT BETWEEN (v0.c2) AND (rt0.c2))))>(((rt0.c1 IN ())))) WHERE ((((((CAST(v0.c0 AS BLOB)))>(((((v0.c1, 0.3765243958290029, rt0.c2, vt0.c0, v0.c0))==((rt0.c1, v0.c0, v0.c0, vt0.c0, rt0.c1))))))) ISNULL));
SELECT * FROM rt0 CROSS JOIN v0 ON CAST(((((rt0.c2)OR(v0.c1)))AND(x'bdf1')) AS BLOB) INNER JOIN vt0 ON (((((v0.c1) NOT BETWEEN (v0.c2) AND (rt0.c2))))>(((rt0.c1 IN ()))));
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((((vt1.c0, '-926039754', vt1.c0)) NOT BETWEEN (((((vt1.c0))==((vt1.c0))), ((vt1.c0) IS FALSE), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) AND ((IFNULL(DISTINCT vt1.c0, vt1.c0), CAST(vt1.c0 AS REAL), (vt1.c0 IN ()))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((((vt1.c0, '-926039754', vt1.c0)) NOT BETWEEN (((((vt1.c0))=((vt1.c0))), ((vt1.c0) IS FALSE), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) AND ((IFNULL(DISTINCT vt1.c0, vt1.c0), CAST(vt1.c0 AS REAL), (vt1.c0 IN ()))))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((((vt1.c0, '-926039754', vt1.c0)) NOT BETWEEN (((((vt1.c0))==((vt1.c0))), ((vt1.c0) IS FALSE), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) AND ((IFNULL(DISTINCT vt1.c0, vt1.c0), CAST(vt1.c0 AS REAL), (vt1.c0 IN ()))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT v0.c2, v0.c1 FROM v0, rt0, vt0 GROUP BY v0.c2, v0.c1;
SELECT ALL v0.c2, v0.c1 FROM v0, rt0, vt0 WHERE (((((rt0.c2) IS TRUE)) NOT BETWEEN ((vt0.c0 IN (v0.c2))) AND ((((v0.c0, v0.c0, rt0.c2)) NOT BETWEEN ((v0.c0, vt0.c0, NULL)) AND ((v0.c1, rt0.c0, v0.c1)))))) GROUP BY v0.c2, v0.c1 UNION SELECT v0.c2, v0.c1 FROM v0, rt0, vt0 WHERE ((NOT (((((rt0.c2) IS TRUE)) NOT BETWEEN ((vt0.c0 IN (v0.c2))) AND ((((v0.c0, v0.c0, rt0.c2)) NOT BETWEEN ((v0.c0, vt0.c0, NULL)) AND ((v0.c1, rt0.c0, v0.c1)))))))) GROUP BY v0.c2, v0.c1 UNION SELECT ALL v0.c2, v0.c1 FROM v0, rt0, vt0 WHERE (((((((rt0.c2) IS TRUE)) NOT BETWEEN ((vt0.c0 IN (v0.c2))) AND ((((v0.c0, v0.c0, rt0.c2)) NOT BETWEEN ((v0.c0, vt0.c0, NULL)) AND ((v0.c1, rt0.c0, v0.c1)))))) ISNULL)) GROUP BY v0.c2, v0.c1;
SELECT v0.c2, v0.c1 FROM v0, rt0, vt0 GROUP BY v0.c2, v0.c1;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING MIN(GROUP_CONCAT(rt0.c0)) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (MIN(GROUP_CONCAT(rt0.c0)))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((MIN(GROUP_CONCAT(rt0.c0))) ISNULL);
SELECT ALL rt0.c1, v0.c2, vt0.c0, rt0.c2 FROM vt1, v0 CROSS JOIN vt0 ON ((((vt0.c0) NOT NULL)) NOT BETWEEN (CAST('?aMl\nj' AS TEXT)) AND (((((((((v0.c0)AND(rt0.c2)))OR(0xffffffffe69d70c5)))OR(rt0.c0)))OR(vt0.c0)))) LEFT OUTER JOIN rt0 ON ((((((rt0.c1)GLOB(rt0.c2)))OR(((((rt0.c1)AND(vt0.c0)))OR(vt1.c0)))))AND(0.5528518403646907));
SELECT ALL rt0.c1, v0.c2, vt0.c0, rt0.c2 FROM vt1, v0 CROSS JOIN vt0 ON ((((vt0.c0) NOT NULL)) NOT BETWEEN (CAST('?aMl\nj' AS TEXT)) AND (((((((((v0.c0)AND(rt0.c2)))OR(0xffffffffe69d70c5)))OR(rt0.c0)))OR(vt0.c0)))) LEFT OUTER JOIN rt0 ON ((((((rt0.c1)GLOB(rt0.c2)))OR(((((rt0.c1)AND(vt0.c0)))OR(vt1.c0)))))AND(0.5528518403646907)) WHERE (ROUND(((vt0.c0) NOT NULL), CASE WHEN v0.c2 THEN 1.84186325E8 WHEN rt0.c1 THEN v0.c0 WHEN v0.c2 THEN v0.c1 END)) UNION ALL SELECT ALL rt0.c1, v0.c2, vt0.c0, rt0.c2 FROM vt1, v0 CROSS JOIN vt0 ON ((((vt0.c0) NOT NULL)) NOT BETWEEN (CAST('?aMl\nj' AS TEXT)) AND (((((((((v0.c0)AND(rt0.c2)))OR(0xffffffffe69d70c5)))OR(rt0.c0)))OR(vt0.c0)))) LEFT OUTER JOIN rt0 ON ((((((rt0.c1)GLOB(rt0.c2)))OR(((((rt0.c1)AND(vt0.c0)))OR(vt1.c0)))))AND(0.5528518403646907)) WHERE ((NOT (ROUND(((vt0.c0) NOT NULL), CASE WHEN v0.c2 THEN 1.84186325E8 WHEN rt0.c1 THEN v0.c0 WHEN v0.c2 THEN v0.c1 END)))) UNION ALL SELECT rt0.c1, v0.c2, vt0.c0, rt0.c2 FROM vt1, v0 CROSS JOIN vt0 ON ((((vt0.c0) NOT NULL)) NOT BETWEEN (CAST('?aMl\nj' AS TEXT)) AND (((((((((v0.c0)AND(rt0.c2)))OR(0Xffffffffe69d70c5)))OR(rt0.c0)))OR(vt0.c0)))) LEFT OUTER JOIN rt0 ON ((((((rt0.c1)GLOB(rt0.c2)))OR(((((rt0.c1)AND(vt0.c0)))OR(vt1.c0)))))AND(0.5528518403646907)) WHERE (((ROUND(((vt0.c0) NOT NULL), CASE WHEN v0.c2 THEN 1.84186325E8 WHEN rt0.c1 THEN v0.c0 WHEN v0.c2 THEN v0.c1 END)) ISNULL));
SELECT ALL rt0.c1, v0.c2, vt0.c0, rt0.c2 FROM vt1, v0 CROSS JOIN vt0 ON ((((vt0.c0) NOT NULL)) NOT BETWEEN (CAST('?aMl\nj' AS TEXT)) AND (((((((((v0.c0)AND(rt0.c2)))OR(0xffffffffe69d70c5)))OR(rt0.c0)))OR(vt0.c0)))) LEFT OUTER JOIN rt0 ON ((((((rt0.c1)GLOB(rt0.c2)))OR(((((rt0.c1)AND(vt0.c0)))OR(vt1.c0)))))AND(0.5528518403646907));
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((+ (UNLIKELY(v0.c0)))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((+ (UNLIKELY(v0.c0)))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((+ (UNLIKELY(v0.c0)))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT vt0.c0, rt0.c1, rt0.c0, v0.c0, v0.c2, v0.c1 FROM v0 CROSS JOIN vt0 ON (((((v0.c0)+(vt0.c0))))<((CAST(rt0.c1 AS TEXT)))) CROSS JOIN rt0 ON CASE WHEN ((v0.c2) NOTNULL) THEN (((v0.c1, rt0.c0, vt0.c0))<((rt0.c1, vt0.c0, rt0.c2))) WHEN vt0.c0 THEN NULL WHEN x'' THEN ((v0.c0) IS TRUE) END GROUP BY vt0.c0, rt0.c1, rt0.c0, v0.c0, v0.c2, v0.c1;
SELECT ALL vt0.c0, rt0.c1, rt0.c0, v0.c0, v0.c2, v0.c1 FROM v0 CROSS JOIN vt0 ON (((((v0.c0)+(vt0.c0))))<((CAST(rt0.c1 AS TEXT)))) CROSS JOIN rt0 ON CASE WHEN ((v0.c2) NOTNULL) THEN (((v0.c1, rt0.c0, vt0.c0))<((rt0.c1, vt0.c0, rt0.c2))) WHEN vt0.c0 THEN NULL WHEN x'' THEN ((v0.c0) IS TRUE) END WHERE ((((rt0.c0)) NOT BETWEEN ((((vt0.c0)>(rt0.c2)))) AND ((((((v0.c1)AND(rt0.c1)))OR(rt0.c1)))))) GROUP BY vt0.c0, rt0.c1, rt0.c0, v0.c0, v0.c2, v0.c1 UNION SELECT vt0.c0, rt0.c1, rt0.c0, v0.c0, v0.c2, v0.c1 FROM v0 CROSS JOIN vt0 ON (((((v0.c0)+(vt0.c0))))<((CAST(rt0.c1 AS TEXT)))) CROSS JOIN rt0 ON CASE WHEN ((v0.c2) NOTNULL) THEN (((v0.c1, rt0.c0, vt0.c0))<((rt0.c1, vt0.c0, rt0.c2))) WHEN vt0.c0 THEN NULL WHEN x'' THEN ((v0.c0) IS TRUE) END WHERE ((NOT ((((rt0.c0)) NOT BETWEEN ((((vt0.c0)>(rt0.c2)))) AND ((((((v0.c1)AND(rt0.c1)))OR(rt0.c1)))))))) GROUP BY vt0.c0, rt0.c1, rt0.c0, v0.c0, v0.c2, v0.c1 UNION SELECT vt0.c0, rt0.c1, rt0.c0, v0.c0, v0.c2, v0.c1 FROM v0 CROSS JOIN vt0 ON (((((v0.c0)+(vt0.c0))))<((CAST(rt0.c1 AS TEXT)))) CROSS JOIN rt0 ON CASE WHEN ((v0.c2) NOTNULL) THEN (((v0.c1, rt0.c0, vt0.c0))<((rt0.c1, vt0.c0, rt0.c2))) WHEN vt0.c0 THEN NULL WHEN x'' THEN ((v0.c0) IS TRUE) END WHERE ((((((rt0.c0)) NOT BETWEEN ((((vt0.c0)>(rt0.c2)))) AND ((((((v0.c1)AND(rt0.c1)))OR(rt0.c1)))))) ISNULL)) GROUP BY vt0.c0, rt0.c1, rt0.c0, v0.c0, v0.c2, v0.c1;
SELECT vt0.c0, rt0.c1, rt0.c0, v0.c0, v0.c2, v0.c1 FROM v0 CROSS JOIN vt0 ON (((((v0.c0)+(vt0.c0))))<((CAST(rt0.c1 AS TEXT)))) CROSS JOIN rt0 ON CASE WHEN ((v0.c2) NOTNULL) THEN (((v0.c1, rt0.c0, vt0.c0))<((rt0.c1, vt0.c0, rt0.c2))) WHEN vt0.c0 THEN NULL WHEN x'' THEN ((v0.c0) IS TRUE) END GROUP BY vt0.c0, rt0.c1, rt0.c0, v0.c0, v0.c2, v0.c1;
SELECT ALL vt1.c0, rt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0 INNER JOIN vt1 ON ((HEX(DISTINCT x'')) BETWEEN (((((vt0.c0)AND(vt1.c0)))AND(rt0.c1))) AND (x'')) GROUP BY vt1.c0, rt0.c1, rt0.c2, vt0.c0;
SELECT vt1.c0, rt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0 INNER JOIN vt1 ON ((HEX(DISTINCT x'')) BETWEEN (((((vt0.c0)AND(vt1.c0)))AND(rt0.c1))) AND (x'')) GROUP BY vt1.c0, rt0.c1, rt0.c2, vt0.c0 HAVING (- (CASE rt0.c0  WHEN vt0.c0 THEN MAX(SUM(vt0.c0)) WHEN COUNT(*) THEN AVG(vt0.c0) WHEN '0_Z\P0' THEN rt0.c0 END)) UNION ALL SELECT ALL vt1.c0, rt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0 INNER JOIN vt1 ON ((HEX(DISTINCT x'')) BETWEEN (((((vt0.c0)AND(vt1.c0)))AND(rt0.c1))) AND (x'')) GROUP BY vt1.c0, rt0.c1, rt0.c2, vt0.c0 HAVING (NOT ((- (CASE rt0.c0  WHEN vt0.c0 THEN MAX(SUM(vt0.c0)) WHEN COUNT(*) THEN AVG(vt0.c0) WHEN '0_Z\P0' THEN rt0.c0 END)))) UNION ALL SELECT vt1.c0, rt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0 INNER JOIN vt1 ON ((HEX(DISTINCT x'')) BETWEEN (((((vt0.c0)AND(vt1.c0)))AND(rt0.c1))) AND (x'')) GROUP BY vt1.c0, rt0.c1, rt0.c2, vt0.c0 HAVING (((- (CASE rt0.c0  WHEN vt0.c0 THEN MAX(SUM(vt0.c0)) WHEN COUNT(*) THEN AVG(vt0.c0) WHEN '0_Z\P0' THEN rt0.c0 END))) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (((((vt0.c0) NOT NULL)) ISNULL)) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((((vt0.c0) NOT NULL)) ISNULL)))) UNION ALL SELECT * FROM vt0 WHERE (((((((vt0.c0) NOT NULL)) ISNULL)) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT v0.c1, rt0.c2 FROM vt0, vt1, v0, rt0;
SELECT DISTINCT v0.c1, rt0.c2 FROM vt0, vt1, v0, rt0 WHERE (((v0.c2)>>(rt0.c2)) COLLATE BINARY) UNION SELECT DISTINCT v0.c1, rt0.c2 FROM vt0, vt1, v0, rt0 WHERE ((NOT (((v0.c2)>>(rt0.c2)) COLLATE BINARY))) UNION SELECT DISTINCT v0.c1, rt0.c2 FROM vt0, vt1, v0, rt0 WHERE (((((v0.c2)>>(rt0.c2)) COLLATE BINARY) ISNULL));
SELECT DISTINCT v0.c1, rt0.c2 FROM vt0, vt1, v0, rt0;
SELECT ALL rt0.c2, v0.c2, v0.c0, rt0.c0, rt0.c1, v0.c1 FROM rt0, v0 GROUP BY rt0.c2, v0.c2, v0.c0, rt0.c0, rt0.c1, v0.c1;
SELECT ALL rt0.c2, v0.c2, v0.c0, rt0.c0, rt0.c1, v0.c1 FROM rt0, v0 WHERE (((((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT NULL)) GROUP BY rt0.c2, v0.c2, v0.c0, rt0.c0, rt0.c1, v0.c1 UNION SELECT rt0.c2, v0.c2, v0.c0, rt0.c0, rt0.c1, v0.c1 FROM rt0, v0 WHERE ((NOT (((((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT NULL)))) GROUP BY rt0.c2, v0.c2, v0.c0, rt0.c0, rt0.c1, v0.c1 UNION SELECT ALL rt0.c2, v0.c2, v0.c0, rt0.c0, rt0.c1, v0.c1 FROM rt0, v0 WHERE (((((((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT NULL)) ISNULL)) GROUP BY rt0.c2, v0.c2, v0.c0, rt0.c0, rt0.c1, v0.c1;
SELECT ALL rt0.c2, v0.c2, v0.c0, rt0.c0, rt0.c1, v0.c1 FROM rt0, v0 GROUP BY rt0.c2, v0.c2, v0.c0, rt0.c0, rt0.c1, v0.c1;
SELECT v0.c1, v0.c2, vt1.c0 FROM v0, vt1 GROUP BY v0.c1, v0.c2, vt1.c0;
SELECT ALL v0.c1, v0.c2, vt1.c0 FROM v0, vt1 GROUP BY v0.c1, v0.c2, vt1.c0 HAVING (((GROUP_CONCAT(MIN(v0.c1))))<=((COUNT(*)))) UNION ALL SELECT v0.c1, v0.c2, vt1.c0 FROM v0, vt1 GROUP BY v0.c1, v0.c2, vt1.c0 HAVING (NOT ((((GROUP_CONCAT(MIN(v0.c1))))<=((COUNT(*)))))) UNION ALL SELECT v0.c1, v0.c2, vt1.c0 FROM v0, vt1 GROUP BY v0.c1, v0.c2, vt1.c0 HAVING (((((GROUP_CONCAT(MIN(v0.c1))))<=((COUNT(*))))) ISNULL);
SELECT * FROM vt1, v0;
SELECT ALL * FROM vt1, v0 WHERE (v0.c0) UNION ALL SELECT ALL * FROM vt1, v0 WHERE ((NOT (v0.c0))) UNION ALL SELECT ALL * FROM vt1, v0 WHERE (((v0.c0) ISNULL));
SELECT * FROM vt1, v0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (((((vt0.c0) IS FALSE))<=(((vt0.c0)GLOB(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (((((vt0.c0) IS FALSE))<=(((vt0.c0)GLOB(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((((((vt0.c0) IS FALSE))<=(((vt0.c0)GLOB(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT v0.c0 FROM v0, rt0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, rt0 WHERE (((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)))OR(v0.c2)))OR(v0.c0)) COLLATE NOCASE) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, rt0 WHERE ((NOT (((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)))OR(v0.c2)))OR(v0.c0)) COLLATE NOCASE))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, rt0 WHERE (((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)))OR(v0.c2)))OR(v0.c0)) COLLATE NOCASE) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0, rt0 GROUP BY v0.c0;
SELECT ALL vt0.c0, rt0.c1 FROM rt0, vt1, vt0, v0 GROUP BY vt0.c0, rt0.c1;
SELECT vt0.c0, rt0.c1 FROM rt0, vt1, vt0, v0 GROUP BY vt0.c0, rt0.c1 HAVING COUNT(COUNT(*)) COLLATE NOCASE UNION ALL SELECT vt0.c0, rt0.c1 FROM rt0, vt1, vt0, v0 GROUP BY vt0.c0, rt0.c1 HAVING (NOT (COUNT(COUNT(*)) COLLATE NOCASE)) UNION ALL SELECT vt0.c0, rt0.c1 FROM rt0, vt1, vt0, v0 GROUP BY vt0.c0, rt0.c1 HAVING ((COUNT(COUNT(*)) COLLATE NOCASE) ISNULL);
SELECT v0.c0, v0.c1 FROM v0;
SELECT v0.c0, v0.c1 FROM v0 WHERE (((v0.c1 IN ()) IN ())) UNION ALL SELECT ALL v0.c0, v0.c1 FROM v0 WHERE ((NOT (((v0.c1 IN ()) IN ())))) UNION ALL SELECT ALL v0.c0, v0.c1 FROM v0 WHERE (((((v0.c1 IN ()) IN ())) ISNULL));
SELECT v0.c0, v0.c1 FROM v0;
SELECT DISTINCT * FROM vt1 INNER JOIN rt0 ON ((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c1)))AND('-492181748')) COLLATE RTRIM COLLATE NOCASE LEFT OUTER JOIN vt0 ON ((CAST(rt0.c2 AS NUMERIC))%(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT DISTINCT * FROM vt1 INNER JOIN rt0 ON ((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c1)))AND('-492181748')) COLLATE RTRIM COLLATE NOCASE LEFT OUTER JOIN vt0 ON ((CAST(rt0.c2 AS NUMERIC))%(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) WHERE (vt0.c0) UNION SELECT DISTINCT * FROM vt1 INNER JOIN rt0 ON ((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c1)))AND('-492181748')) COLLATE RTRIM COLLATE NOCASE LEFT OUTER JOIN vt0 ON ((CAST(rt0.c2 AS NUMERIC))%(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM vt1 INNER JOIN rt0 ON ((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c1)))AND('-492181748')) COLLATE RTRIM COLLATE NOCASE LEFT OUTER JOIN vt0 ON ((CAST(rt0.c2 AS NUMERIC))%(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM vt1 INNER JOIN rt0 ON ((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c1)))AND('-492181748')) COLLATE RTRIM COLLATE NOCASE LEFT OUTER JOIN vt0 ON ((CAST(rt0.c2 AS NUMERIC))%(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT vt0.c0, v0.c0, v0.c2, v0.c1 FROM v0, vt0 GROUP BY vt0.c0, v0.c0, v0.c2, v0.c1;
SELECT vt0.c0, v0.c0, v0.c2, v0.c1 FROM v0, vt0 WHERE (NULL) GROUP BY vt0.c0, v0.c0, v0.c2, v0.c1 UNION SELECT ALL vt0.c0, v0.c0, v0.c2, v0.c1 FROM v0, vt0 WHERE ((NOT (NULL))) GROUP BY vt0.c0, v0.c0, v0.c2, v0.c1 UNION SELECT vt0.c0, v0.c0, v0.c2, v0.c1 FROM v0, vt0 WHERE (((NULL) ISNULL)) GROUP BY vt0.c0, v0.c0, v0.c2, v0.c1;
SELECT vt0.c0, v0.c0, v0.c2, v0.c1 FROM v0, vt0 GROUP BY vt0.c0, v0.c0, v0.c2, v0.c1;
SELECT ALL rt0.c2 FROM rt0, vt0, v0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0, vt0, v0 GROUP BY rt0.c2 HAVING TOTAL(GROUP_CONCAT(vt0.c0)) UNION ALL SELECT rt0.c2 FROM rt0, vt0, v0 GROUP BY rt0.c2 HAVING (NOT (TOTAL(GROUP_CONCAT(vt0.c0)))) UNION ALL SELECT rt0.c2 FROM rt0, vt0, v0 GROUP BY rt0.c2 HAVING ((TOTAL(GROUP_CONCAT(vt0.c0))) ISNULL);
SELECT * FROM v0;
SELECT * FROM v0 WHERE (((((((((((v0.c1)AND(v0.c1)))AND(v0.c1)))OR(v0.c0)))AND(v0.c2)))AND(TRIM(DISTINCT '-228514884')))) UNION ALL SELECT * FROM v0 WHERE ((NOT (((((((((((v0.c1)AND(v0.c1)))AND(v0.c1)))OR(v0.c0)))AND(v0.c2)))AND(TRIM(DISTINCT '-228514884')))))) UNION ALL SELECT ALL * FROM v0 WHERE (((((((((((((v0.c1)AND(v0.c1)))AND(v0.c1)))OR(v0.c0)))AND(v0.c2)))AND(TRIM(DISTINCT '-228514884')))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt0 ON (((((((((~ (rt0.c1)))OR(((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c2)))))AND(CASE WHEN vt0.c0 THEN rt0.c1 END)))OR(rt0.c0)))OR(json_remove(rt0.c0, rt0.c0)));
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt0 ON (((((((((~ (rt0.c1)))OR(((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c2)))))AND(CASE WHEN vt0.c0 THEN rt0.c1 END)))OR(rt0.c0)))OR(json_remove(rt0.c0, rt0.c0))) WHERE (highlight(((rt0.c0)/(x'')), ((((rt0.c2)OR(vt0.c0)))AND(rt0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c1 END, CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c2 END)) UNION SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt0 ON (((((((((~ (rt0.c1)))OR(((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c2)))))AND(CASE WHEN vt0.c0 THEN rt0.c1 END)))OR(rt0.c0)))OR(json_remove(rt0.c0, rt0.c0))) WHERE ((NOT (highlight(((rt0.c0)/(x'')), ((((rt0.c2)OR(vt0.c0)))AND(rt0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c1 END, CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c2 END)))) UNION SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt0 ON (((((((((~ (rt0.c1)))OR(((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c2)))))AND(CASE WHEN vt0.c0 THEN rt0.c1 END)))OR(rt0.c0)))OR(json_remove(rt0.c0, rt0.c0))) WHERE (((highlight(((rt0.c0)/(x'')), ((((rt0.c2)OR(vt0.c0)))AND(rt0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c1 END, CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c2 END)) ISNULL));
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 NOT INDEXED WHERE ((((((rt0.c0))<>((rt0.c1)))) ISNULL)) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((((((rt0.c0))!=((rt0.c1)))) ISNULL)))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((((((((rt0.c0))<>((rt0.c1)))) ISNULL)) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL v0.c1, v0.c2, v0.c0, rt0.c1, rt0.c2, rt0.c0 FROM vt0, rt0, v0 NATURAL JOIN vt1 GROUP BY v0.c1, v0.c2, v0.c0, rt0.c1, rt0.c2, rt0.c0;
SELECT v0.c1, v0.c2, v0.c0, rt0.c1, rt0.c2, rt0.c0 FROM vt0, rt0, v0 NATURAL JOIN vt1 GROUP BY v0.c1, v0.c2, v0.c0, rt0.c1, rt0.c2, rt0.c0 HAVING GROUP_CONCAT(AVG(MIN(v0.c0))) UNION ALL SELECT ALL v0.c1, v0.c2, v0.c0, rt0.c1, rt0.c2, rt0.c0 FROM vt0, rt0, v0 NATURAL JOIN vt1 GROUP BY v0.c1, v0.c2, v0.c0, rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (GROUP_CONCAT(AVG(MIN(v0.c0))))) UNION ALL SELECT v0.c1, v0.c2, v0.c0, rt0.c1, rt0.c2, rt0.c0 FROM vt0, rt0, v0 NATURAL JOIN vt1 GROUP BY v0.c1, v0.c2, v0.c0, rt0.c1, rt0.c2, rt0.c0 HAVING ((GROUP_CONCAT(AVG(MIN(v0.c0)))) ISNULL);
SELECT ALL MIN((+ (vt0.c0)) COLLATE BINARY) FROM vt0, v0, rt0 ORDER BY COALESCE(DISTINCT ((rt0.c2) BETWEEN (v0.c0) AND (vt0.c0)), CASE WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN v0.c1 WHEN rt0.c0 THEN v0.c2 WHEN rt0.c2 THEN v0.c0 WHEN vt0.c0 THEN 0.5318220326601503 WHEN v0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END);
SELECT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (NULL) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (NULL))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((NULL) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0, vt0.c0, v0.c0, v0.c2 FROM vt1 RIGHT OUTER JOIN v0 ON ((((((vt1.c0))>((vt1.c0)))))<=(((v0.c0 IN ())))) CROSS JOIN vt0 ON CAST((v0.c1 IN (vt1.c0)) AS INTEGER);
SELECT DISTINCT vt1.c0, vt0.c0, v0.c0, v0.c2 FROM vt1 RIGHT OUTER JOIN v0 ON ((((((vt1.c0))>((vt1.c0)))))<=(((v0.c0 IN ())))) CROSS JOIN vt0 ON CAST((v0.c1 IN (vt1.c0)) AS INTEGER) WHERE (LTRIM(vt0.c0, (+ (v0.c0)))) UNION SELECT DISTINCT vt1.c0, vt0.c0, v0.c0, v0.c2 FROM vt1 RIGHT OUTER JOIN v0 ON ((((((vt1.c0))>((vt1.c0)))))<=(((v0.c0 IN ())))) CROSS JOIN vt0 ON CAST((v0.c1 IN (vt1.c0)) AS INTEGER) WHERE ((NOT (LTRIM(vt0.c0, (+ (v0.c0)))))) UNION SELECT DISTINCT vt1.c0, vt0.c0, v0.c0, v0.c2 FROM vt1 RIGHT OUTER JOIN v0 ON ((((((vt1.c0))>((vt1.c0)))))<=(((v0.c0 IN ())))) CROSS JOIN vt0 ON CAST((v0.c1 IN (vt1.c0)) AS INTEGER) WHERE (((LTRIM(vt0.c0, (+ (v0.c0)))) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c0, v0.c0, v0.c2 FROM vt1 RIGHT OUTER JOIN v0 ON ((((((vt1.c0))>((vt1.c0)))))<=(((v0.c0 IN ())))) CROSS JOIN vt0 ON CAST((v0.c1 IN (vt1.c0)) AS INTEGER);
SELECT rt0.c1, vt1.c0, rt0.c0 FROM vt0, vt1, rt0 GROUP BY rt0.c1, vt1.c0, rt0.c0;
SELECT rt0.c1, vt1.c0, rt0.c0 FROM vt0, vt1, rt0 WHERE ((((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)))AND(vt1.c0)))OR(vt0.c0)) IN ())) GROUP BY rt0.c1, vt1.c0, rt0.c0 UNION SELECT rt0.c1, vt1.c0, rt0.c0 FROM vt0, vt1, rt0 WHERE ((NOT ((((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)))AND(vt1.c0)))OR(vt0.c0)) IN ())))) GROUP BY rt0.c1, vt1.c0, rt0.c0 UNION SELECT rt0.c1, vt1.c0, rt0.c0 FROM vt0, vt1, rt0 WHERE ((((((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)))AND(vt1.c0)))OR(vt0.c0)) IN ())) ISNULL)) GROUP BY rt0.c1, vt1.c0, rt0.c0;
SELECT rt0.c1, vt1.c0, rt0.c0 FROM vt0, vt1, rt0 GROUP BY rt0.c1, vt1.c0, rt0.c0;
SELECT vt1.c0, v0.c0, v0.c2 FROM vt1, v0 GROUP BY vt1.c0, v0.c0, v0.c2;
SELECT vt1.c0, v0.c0, v0.c2 FROM vt1, v0 GROUP BY vt1.c0, v0.c0, v0.c2 HAVING (((v0.c2)) BETWEEN ((MIN(GROUP_CONCAT(v0.c0)))) AND ((((v0.c1) BETWEEN (0.2608907530951534) AND (1111528961))))) UNION ALL SELECT vt1.c0, v0.c0, v0.c2 FROM vt1, v0 GROUP BY vt1.c0, v0.c0, v0.c2 HAVING (NOT ((((v0.c2)) BETWEEN ((MIN(GROUP_CONCAT(v0.c0)))) AND ((((v0.c1) BETWEEN (0.2608907530951534) AND (1111528961))))))) UNION ALL SELECT ALL vt1.c0, v0.c0, v0.c2 FROM vt1, v0 NOT INDEXED GROUP BY vt1.c0, v0.c0, v0.c2 HAVING (((((v0.c2)) BETWEEN ((MIN(GROUP_CONCAT(v0.c0)))) AND ((((v0.c1) BETWEEN (0.2608907530951534) AND (1111528961)))))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) BETWEEN ((((vt0.c0))<((vt0.c0)))) AND (NULLIF(DISTINCT vt0.c0, vt0.c0)))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((vt0.c0 COLLATE NOCASE) BETWEEN ((((vt0.c0))<((vt0.c0)))) AND (NULLIF(DISTINCT vt0.c0, vt0.c0)))))) UNION ALL SELECT * FROM vt0 WHERE (((((vt0.c0 COLLATE NOCASE) BETWEEN ((((vt0.c0))<((vt0.c0)))) AND (NULLIF(DISTINCT vt0.c0, vt0.c0)))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((~ (vt1.c0))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((NOT ((~ (vt1.c0))))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((NOT ((~ (vt1.c0))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt0.c0, vt1.c0, v0.c2, v0.c0, v0.c1 FROM vt1 CROSS JOIN vt0 ON (- (((vt0.c0) NOT BETWEEN (vt1.c0) AND (v0.c1)))) CROSS JOIN v0 ON vt0.c0 GROUP BY vt0.c0, vt1.c0, v0.c2, v0.c0, v0.c1;
SELECT vt0.c0, vt1.c0, v0.c2, v0.c0, v0.c1 FROM vt1 CROSS JOIN vt0 ON (- (((vt0.c0) NOT BETWEEN (vt1.c0) AND (v0.c1)))) CROSS JOIN v0 ON vt0.c0 WHERE (((CASE vt1.c0  WHEN v0.c0 THEN vt1.c0 END) IS TRUE)) GROUP BY vt0.c0, vt1.c0, v0.c2, v0.c0, v0.c1 UNION SELECT vt0.c0, vt1.c0, v0.c2, v0.c0, v0.c1 FROM vt1 NOT INDEXED CROSS JOIN vt0 ON (- (((vt0.c0) NOT BETWEEN (vt1.c0) AND (v0.c1)))) CROSS JOIN v0 ON vt0.c0 WHERE ((NOT (((CASE vt1.c0  WHEN v0.c0 THEN vt1.c0 END) IS TRUE)))) GROUP BY vt0.c0, vt1.c0, v0.c2, v0.c0, v0.c1 UNION SELECT ALL vt0.c0, vt1.c0, v0.c2, v0.c0, v0.c1 FROM vt1 CROSS JOIN vt0 ON (- (((vt0.c0) NOT BETWEEN (vt1.c0) AND (v0.c1)))) CROSS JOIN v0 ON vt0.c0 WHERE (((((CASE vt1.c0  WHEN v0.c0 THEN vt1.c0 END) IS TRUE)) ISNULL)) GROUP BY vt0.c0, vt1.c0, v0.c2, v0.c0, v0.c1;
SELECT vt0.c0, vt1.c0, v0.c2, v0.c0, v0.c1 FROM vt1 CROSS JOIN vt0 ON (- (((vt0.c0) NOT BETWEEN (vt1.c0) AND (v0.c1)))) CROSS JOIN v0 ON vt0.c0 GROUP BY vt0.c0, vt1.c0, v0.c2, v0.c0, v0.c1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((v0.c0)) BETWEEN ((COUNT(COUNT(*)))) AND ((((COUNT(*))<>(0.004777694379452302))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((((v0.c0)) BETWEEN ((COUNT(COUNT(*)))) AND ((((COUNT(*))!=(0.004777694379452302))))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((v0.c0)) BETWEEN ((COUNT(COUNT(*)))) AND ((((COUNT(*))!=(0.004777694379452302)))))) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c1, vt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON (((json_insert(rt0.c0, rt0.c2, vt0.c0), rt0.c1, CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c0 END))>=((vt0.c0, rt0.c2, CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c1 END)));
SELECT DISTINCT * FROM rt0, v0, vt0, vt1;
SELECT DISTINCT * FROM rt0, v0, vt0, vt1 WHERE (((('846408145' IN (rt0.c0))) BETWEEN (CAST(vt0.c0 AS TEXT)) AND ((rt0.c2 IN ())))) UNION SELECT DISTINCT * FROM rt0, v0, vt0, vt1 WHERE ((NOT (((('846408145' IN (rt0.c0))) BETWEEN (CAST(vt0.c0 AS TEXT)) AND ((rt0.c2 IN ())))))) UNION SELECT DISTINCT * FROM rt0, v0, vt0, vt1 WHERE (((((('846408145' IN (rt0.c0))) BETWEEN (CAST(vt0.c0 AS TEXT)) AND ((rt0.c2 IN ())))) ISNULL));
SELECT DISTINCT * FROM rt0, v0, vt0, vt1;
SELECT ALL vt1.c0 FROM rt0, vt1, vt0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM rt0, vt1, vt0 WHERE (LIKELY(DISTINCT rt0.c0 COLLATE BINARY)) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM rt0, vt1, vt0 WHERE ((NOT (LIKELY(DISTINCT rt0.c0 COLLATE BINARY)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM rt0, vt1, vt0 WHERE (((LIKELY(DISTINCT rt0.c0 COLLATE BINARY)) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM rt0, vt1, vt0 GROUP BY vt1.c0;
SELECT ALL rt0.c0 FROM rt0, vt1 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, vt1 GROUP BY rt0.c0 HAVING MAX(COUNT(TOTAL(rt0.c0))) UNION ALL SELECT ALL rt0.c0 FROM rt0, vt1 GROUP BY rt0.c0 HAVING (NOT (MAX(COUNT(TOTAL(rt0.c0))))) UNION ALL SELECT rt0.c0 FROM rt0, vt1 GROUP BY rt0.c0 HAVING ((MAX(COUNT(TOTAL(rt0.c0)))) ISNULL);
SELECT * FROM v0, vt1;
SELECT * FROM v0, vt1 WHERE (0.6853475791724458) UNION ALL SELECT * FROM v0, vt1 WHERE ((NOT (0.6853475791724458))) UNION ALL SELECT * FROM v0, vt1 WHERE (((0.6853475791724458) ISNULL));
SELECT * FROM v0, vt1;
SELECT DISTINCT v0.c2, rt0.c2 FROM vt0 NOT INDEXED, v0, rt0, vt1;
SELECT DISTINCT v0.c2, rt0.c2 FROM vt0, v0, rt0, vt1 WHERE (CAST(CASE vt0.c0  WHEN vt1.c0 THEN rt0.c2 ELSE v0.c0 END AS TEXT)) UNION SELECT DISTINCT v0.c2, rt0.c2 FROM vt0, v0, rt0, vt1 WHERE ((NOT (CAST(CASE vt0.c0  WHEN vt1.c0 THEN rt0.c2 ELSE v0.c0 END AS TEXT)))) UNION SELECT DISTINCT v0.c2, rt0.c2 FROM vt0, v0, rt0, vt1 WHERE (((CAST(CASE vt0.c0  WHEN vt1.c0 THEN rt0.c2 ELSE v0.c0 END AS TEXT)) ISNULL));
SELECT DISTINCT v0.c2, rt0.c2 FROM vt0 NOT INDEXED, v0, rt0, vt1;
SELECT ALL v0.c1, vt0.c0, rt0.c2, v0.c0, vt1.c0 FROM vt0, vt1, v0, rt0 GROUP BY v0.c1, vt0.c0, rt0.c2, v0.c0, vt1.c0;
SELECT v0.c1, vt0.c0, rt0.c2, v0.c0, vt1.c0 FROM vt0, vt1, v0, rt0 WHERE ((((((vt1.c0, rt0.c2, v0.c0, 'M#dl', v0.c1)) BETWEEN ((vt1.c0, '', rt0.c0, rt0.c1, vt1.c0)) AND ((v0.c2, vt0.c0, rt0.c1, '0.4925993094007026', v0.c2)))) BETWEEN (((rt0.c2)/(rt0.c2))) AND ((- (v0.c1))))) GROUP BY v0.c1, vt0.c0, rt0.c2, v0.c0, vt1.c0 UNION SELECT ALL v0.c1, vt0.c0, rt0.c2, v0.c0, vt1.c0 FROM vt0, vt1, v0, rt0 WHERE ((NOT ((((((vt1.c0, rt0.c2, v0.c0, 'M#dl', v0.c1)) BETWEEN ((vt1.c0, '', rt0.c0, rt0.c1, vt1.c0)) AND ((v0.c2, vt0.c0, rt0.c1, '0.4925993094007026', v0.c2)))) BETWEEN (((rt0.c2)/(rt0.c2))) AND ((- (v0.c1))))))) GROUP BY v0.c1, vt0.c0, rt0.c2, v0.c0, vt1.c0 UNION SELECT ALL v0.c1, vt0.c0, rt0.c2, v0.c0, vt1.c0 FROM vt0, vt1, v0, rt0 WHERE ((((((((vt1.c0, rt0.c2, v0.c0, 'M#dl', v0.c1)) BETWEEN ((vt1.c0, '', rt0.c0, rt0.c1, vt1.c0)) AND ((v0.c2, vt0.c0, rt0.c1, '0.4925993094007026', v0.c2)))) BETWEEN (((rt0.c2)/(rt0.c2))) AND ((- (v0.c1))))) ISNULL)) GROUP BY v0.c1, vt0.c0, rt0.c2, v0.c0, vt1.c0;
SELECT ALL v0.c1, vt0.c0, rt0.c2, v0.c0, vt1.c0 FROM vt0, vt1, v0, rt0 GROUP BY v0.c1, vt0.c0, rt0.c2, v0.c0, vt1.c0;
SELECT v0.c1, v0.c2, rt0.c2 FROM rt0, vt1 FULL OUTER JOIN vt0 ON '-' CROSS JOIN v0 ON NULLIF(((((v0.c1)AND(v0.c2)))OR('424932471')), (((rt0.c0))<>((vt0.c0)))) GROUP BY v0.c1, v0.c2, rt0.c2;
SELECT ALL v0.c1, v0.c2, rt0.c2 FROM rt0, vt1 FULL OUTER JOIN vt0 ON '-' CROSS JOIN v0 ON NULLIF(((((v0.c1)AND(v0.c2)))OR('424932471')), (((rt0.c0))<>((vt0.c0)))) GROUP BY v0.c1, v0.c2, rt0.c2 HAVING AVG(((MAX(COUNT(rt0.c2))) BETWEEN (MIN(MAX(AVG(SUM(MIN(GROUP_CONCAT(''))))))) AND (rt0.c2))) UNION ALL SELECT ALL v0.c1, v0.c2, rt0.c2 FROM rt0, vt1 FULL OUTER JOIN vt0 ON '-' CROSS JOIN v0 ON NULLIF(((((v0.c1)AND(v0.c2)))OR('424932471')), (((rt0.c0))<>((vt0.c0)))) GROUP BY v0.c1, v0.c2, rt0.c2 HAVING (NOT (AVG(((MAX(COUNT(rt0.c2))) BETWEEN (MIN(MAX(AVG(SUM(MIN(GROUP_CONCAT(''))))))) AND (rt0.c2))))) UNION ALL SELECT ALL v0.c1, v0.c2, rt0.c2 FROM rt0, vt1 FULL OUTER JOIN vt0 ON '-' CROSS JOIN v0 ON NULLIF(((((v0.c1)AND(v0.c2)))OR('424932471')), (((rt0.c0))<>((vt0.c0)))) GROUP BY v0.c1, v0.c2, rt0.c2 HAVING ((AVG(((MAX(COUNT(rt0.c2))) BETWEEN (MIN(MAX(AVG(SUM(MIN(GROUP_CONCAT(''))))))) AND (rt0.c2)))) ISNULL);
SELECT ALL TOTAL(((json_quote(v0.c1))/('406\i?'))) FROM v0, vt1, vt0, rt0 ORDER BY ((((v0.c0)!=(x'')))<=(IFNULL(DISTINCT v0.c1, rt0.c2)));
SELECT * FROM rt0, v0, vt0;
SELECT ALL * FROM rt0 NOT INDEXED, v0, vt0 WHERE (((((v0.c1 IN ())))!=(((((rt0.c2, rt0.c1, rt0.c1, NULL, v0.c2))>=((v0.c1, v0.c2, v0.c1, rt0.c0, vt0.c0))))))) UNION ALL SELECT ALL * FROM rt0, v0, vt0 WHERE ((NOT (((((v0.c1 IN ())))!=(((((rt0.c2, rt0.c1, rt0.c1, NULL, v0.c2))>=((v0.c1, v0.c2, v0.c1, rt0.c0, vt0.c0))))))))) UNION ALL SELECT * FROM rt0, v0, vt0 WHERE (((((((v0.c1 IN ())))<>(((((rt0.c2, rt0.c1, rt0.c1, NULL, v0.c2))>=((v0.c1, v0.c2, v0.c1, rt0.c0, vt0.c0))))))) ISNULL));
SELECT * FROM rt0, v0, vt0;
SELECT DISTINCT * FROM v0, vt0, vt1 LEFT OUTER JOIN rt0 ON (((rt0.c0 IN (v0.c2))) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND (x'd6e4' COLLATE BINARY));
SELECT DISTINCT * FROM v0, vt0, vt1 LEFT OUTER JOIN rt0 ON (((rt0.c0 IN (v0.c2))) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND (x'd6e4' COLLATE BINARY)) WHERE (CASE WHEN ((rt0.c2) NOT NULL) THEN ((((vt0.c0)OR(rt0.c1)))AND(rt0.c0)) ELSE ((((((((((((vt0.c0)OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c1)))AND(vt1.c0)))AND(vt1.c0)) END) UNION SELECT DISTINCT * FROM v0, vt0, vt1 LEFT OUTER JOIN rt0 ON (((rt0.c0 IN (v0.c2))) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND (x'd6e4' COLLATE BINARY)) WHERE ((NOT (CASE WHEN ((rt0.c2) NOT NULL) THEN ((((vt0.c0)OR(rt0.c1)))AND(rt0.c0)) ELSE ((((((((((((vt0.c0)OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c1)))AND(vt1.c0)))AND(vt1.c0)) END))) UNION SELECT DISTINCT * FROM v0, vt0, vt1 LEFT OUTER JOIN rt0 ON (((rt0.c0 IN (v0.c2))) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND (x'd6e4' COLLATE BINARY)) WHERE (((CASE WHEN ((rt0.c2) NOT NULL) THEN ((((vt0.c0)OR(rt0.c1)))AND(rt0.c0)) ELSE ((((((((((((vt0.c0)OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c1)))AND(vt1.c0)))AND(vt1.c0)) END) ISNULL));
SELECT DISTINCT * FROM v0, vt0, vt1 LEFT OUTER JOIN rt0 ON (((rt0.c0 IN (v0.c2))) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND (x'd6e4' COLLATE BINARY));
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((+ (CAST(rt0.c0 AS NUMERIC)))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((+ (CAST(rt0.c0 AS NUMERIC)))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((((+ (CAST(rt0.c0 AS NUMERIC)))) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT v0.c2, vt1.c0, vt0.c0, rt0.c0, v0.c0, v0.c1 FROM vt0, v0, rt0, vt1;
SELECT v0.c2, vt1.c0, vt0.c0, rt0.c0, v0.c0, v0.c1 FROM vt0, v0, rt0, vt1 WHERE ((+ (x''))) UNION ALL SELECT v0.c2, vt1.c0, vt0.c0, rt0.c0, v0.c0, v0.c1 FROM vt0, v0, rt0, vt1 WHERE ((NOT ((+ (x''))))) UNION ALL SELECT v0.c2, vt1.c0, vt0.c0, rt0.c0, v0.c0, v0.c1 FROM vt0, v0, rt0, vt1 WHERE ((((+ (x''))) ISNULL));
SELECT v0.c2, vt1.c0, vt0.c0, rt0.c0, v0.c0, v0.c1 FROM vt0, v0, rt0, vt1;
SELECT DISTINCT vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0;
SELECT DISTINCT vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE ((((rt0.c1))=((((vt0.c0) NOT NULL))))) UNION SELECT DISTINCT vt0.c0, rt0.c1, rt0.c0 FROM vt0 NOT INDEXED, rt0 WHERE ((NOT ((((rt0.c1))==((((vt0.c0) NOT NULL))))))) UNION SELECT DISTINCT vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE ((((((rt0.c1))==((((vt0.c0) NOT NULL))))) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0;
SELECT v0.c1, vt0.c0, v0.c2 FROM v0, vt0 GROUP BY v0.c1, vt0.c0, v0.c2;
SELECT ALL v0.c1, vt0.c0, v0.c2 FROM v0, vt0 WHERE (CAST(((v0.c0) IS FALSE) AS BLOB)) GROUP BY v0.c1, vt0.c0, v0.c2 UNION SELECT v0.c1, vt0.c0, v0.c2 FROM v0, vt0 WHERE ((NOT (CAST(((v0.c0) IS FALSE) AS BLOB)))) GROUP BY v0.c1, vt0.c0, v0.c2 UNION SELECT v0.c1, vt0.c0, v0.c2 FROM v0, vt0 WHERE (((CAST(((v0.c0) IS FALSE) AS BLOB)) ISNULL)) GROUP BY v0.c1, vt0.c0, v0.c2;
SELECT v0.c1, vt0.c0, v0.c2 FROM v0, vt0 GROUP BY v0.c1, vt0.c0, v0.c2;
SELECT ALL vt1.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0 CROSS JOIN vt1 ON (~ ((NOT (rt0.c1)))) GROUP BY vt1.c0, rt0.c1, rt0.c2, rt0.c0;
SELECT vt1.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0 CROSS JOIN vt1 ON (~ ((NOT (rt0.c1)))) GROUP BY vt1.c0, rt0.c1, rt0.c2, rt0.c0 HAVING SQLITE_SOURCE_ID() UNION ALL SELECT vt1.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0 CROSS JOIN vt1 ON (~ ((NOT (rt0.c1)))) GROUP BY vt1.c0, rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (SQLITE_SOURCE_ID())) UNION ALL SELECT ALL vt1.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0 CROSS JOIN vt1 ON (~ ((NOT (rt0.c1)))) GROUP BY vt1.c0, rt0.c1, rt0.c2, rt0.c0 HAVING ((SQLITE_SOURCE_ID()) ISNULL);
SELECT ALL vt1.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0 CROSS JOIN vt1 ON (~ ((NOT (rt0.c1)))) GROUP BY vt1.c0, rt0.c1, rt0.c2, rt0.c0;
SELECT vt1.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0 CROSS JOIN vt1 ON (~ ((NOT (rt0.c1)))) GROUP BY vt1.c0, rt0.c1, rt0.c2, rt0.c0 HAVING SQLITE_SOURCE_ID() UNION ALL SELECT vt1.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0 CROSS JOIN vt1 ON (~ ((NOT (rt0.c1)))) GROUP BY vt1.c0, rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (SQLITE_SOURCE_ID())) UNION ALL SELECT ALL vt1.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0 CROSS JOIN vt1 ON (~ ((NOT (rt0.c1)))) GROUP BY vt1.c0, rt0.c1, rt0.c2, rt0.c0 HAVING ((SQLITE_SOURCE_ID()) ISNULL);
SELECT ALL vt1.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0 CROSS JOIN vt1 ON (~ ((NOT (rt0.c1)))) GROUP BY vt1.c0, rt0.c1, rt0.c2, rt0.c0;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (((rt0.c0 COLLATE RTRIM) NOT NULL)) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((rt0.c0 COLLATE RTRIM) NOT NULL)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((rt0.c0 COLLATE RTRIM) NOT NULL)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM vt1, vt0, v0;
SELECT DISTINCT * FROM vt1, vt0, v0 WHERE (((CASE WHEN vt0.c0 THEN v0.c1 END) NOT NULL)) UNION SELECT DISTINCT * FROM vt1, vt0, v0 WHERE ((NOT (((CASE WHEN vt0.c0 THEN v0.c1 END) NOT NULL)))) UNION SELECT DISTINCT * FROM vt1, vt0, v0 WHERE (((((CASE WHEN vt0.c0 THEN v0.c1 END) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM vt1, vt0, v0;
SELECT v0.c1 FROM vt1, v0, rt0 INNER JOIN vt0 ON x'' GROUP BY v0.c1;
SELECT ALL v0.c1 FROM vt1, v0, rt0 INNER JOIN vt0 ON x'' WHERE (CAST((NOT (rt0.c1)) AS REAL)) GROUP BY v0.c1 UNION SELECT v0.c1 FROM vt1, v0, rt0 INNER JOIN vt0 ON x'' WHERE ((NOT (CAST((NOT (rt0.c1)) AS REAL)))) GROUP BY v0.c1 UNION SELECT v0.c1 FROM vt1, v0, rt0 INNER JOIN vt0 ON x'' WHERE (((CAST((NOT (rt0.c1)) AS REAL)) ISNULL)) GROUP BY v0.c1;
SELECT v0.c1 FROM vt1, v0, rt0 INNER JOIN vt0 ON x'' GROUP BY v0.c1;
SELECT ALL vt0.c0, v0.c0, v0.c1, vt1.c0 FROM v0 FULL OUTER JOIN rt0 ON ((((vt1.c0) NOT BETWEEN (v0.c1) AND (v0.c0))) IS TRUE) LEFT OUTER JOIN vt0 ON (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))) RIGHT OUTER JOIN vt1 ON (('h\') BETWEEN (((vt0.c0)<=(v0.c1))) AND (((((v0.c2)OR(v0.c1)))OR(v0.c2)))) GROUP BY vt0.c0, v0.c0, v0.c1, vt1.c0;
SELECT * FROM vt0, rt0;
SELECT * FROM vt0, rt0 WHERE (CASE ((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c1))  WHEN (((rt0.c1, rt0.c0, vt0.c0)) NOT BETWEEN ((x'', rt0.c2, rt0.c2)) AND ((vt0.c0, 0.8385185568343049, rt0.c1))) THEN rt0.c1 END) UNION ALL SELECT * FROM vt0, rt0 WHERE ((NOT (CASE ((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c1))  WHEN (((rt0.c1, rt0.c0, vt0.c0)) NOT BETWEEN ((x'', rt0.c2, rt0.c2)) AND ((vt0.c0, 0.8385185568343049, rt0.c1))) THEN rt0.c1 END))) UNION ALL SELECT * FROM vt0, rt0 WHERE (((CASE ((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c1))  WHEN (((rt0.c1, rt0.c0, vt0.c0)) NOT BETWEEN ((x'', rt0.c2, rt0.c2)) AND ((vt0.c0, 0.8385185568343049, rt0.c1))) THEN rt0.c1 END) ISNULL));
SELECT * FROM vt0, rt0;
SELECT DISTINCT vt0.c0, v0.c0, vt1.c0 FROM v0, vt1, vt0;
SELECT DISTINCT vt0.c0, v0.c0, vt1.c0 FROM v0, vt1, vt0 WHERE (((((((((NULL)OR(v0.c0)))OR(v0.c2)))OR(CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END)))AND(v0.c2))) UNION SELECT DISTINCT vt0.c0, v0.c0, vt1.c0 FROM v0, vt1, vt0 WHERE ((NOT (((((((((NULL)OR(v0.c0)))OR(v0.c2)))OR(CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END)))AND(v0.c2))))) UNION SELECT DISTINCT vt0.c0, v0.c0, vt1.c0 FROM v0, vt1, vt0 WHERE (((((((((((NULL)OR(v0.c0)))OR(v0.c2)))OR(CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END)))AND(v0.c2))) ISNULL));
SELECT DISTINCT vt0.c0, v0.c0, vt1.c0 FROM v0, vt1, vt0;
SELECT v0.c2, v0.c0 FROM vt1, v0 GROUP BY v0.c2, v0.c0;
SELECT ALL v0.c2, v0.c0 FROM vt1, v0 WHERE ((((vt1.c0)%(0.6871754066796568)) IN ())) GROUP BY v0.c2, v0.c0 UNION SELECT ALL v0.c2, v0.c0 FROM vt1, v0 WHERE ((NOT ((((vt1.c0)%(0.6871754066796568)) IN ())))) GROUP BY v0.c2, v0.c0 UNION SELECT v0.c2, v0.c0 FROM vt1, v0 WHERE ((((((vt1.c0)%(0.6871754066796568)) IN ())) ISNULL)) GROUP BY v0.c2, v0.c0;
SELECT v0.c2, v0.c0 FROM vt1, v0 GROUP BY v0.c2, v0.c0;
SELECT v0.c0, v0.c1 FROM v0 GROUP BY v0.c0, v0.c1;
SELECT ALL v0.c0, v0.c1 FROM v0 GROUP BY v0.c0, v0.c1 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0, v0.c1 FROM v0 GROUP BY v0.c0, v0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0, v0.c1 FROM v0 GROUP BY v0.c0, v0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0, v0.c1 FROM v0 GROUP BY v0.c0, v0.c1;
SELECT ALL v0.c0, v0.c1 FROM v0 GROUP BY v0.c0, v0.c1 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0, v0.c1 FROM v0 GROUP BY v0.c0, v0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0, v0.c1 FROM v0 GROUP BY v0.c0, v0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0, v0.c1 FROM v0 GROUP BY v0.c0, v0.c1;
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((NOT (load_extension(vt0.c0, vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((NOT (load_extension(vt0.c0, vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((NOT (load_extension(vt0.c0, vt0.c0)))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (('n%ERu<v' IN ())) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (('n%ERu<v' IN ())))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((('n%ERu<v' IN ())) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT ALL v0.c0, v0.c1, v0.c2 FROM v0, vt1 GROUP BY v0.c0, v0.c1, v0.c2;
SELECT ALL v0.c0, v0.c1, v0.c2 FROM v0, vt1 WHERE (1111528961) GROUP BY v0.c0, v0.c1, v0.c2 UNION SELECT v0.c0, v0.c1, v0.c2 FROM v0, vt1 WHERE ((NOT (1111528961))) GROUP BY v0.c0, v0.c1, v0.c2 UNION SELECT v0.c0, v0.c1, v0.c2 FROM v0, vt1 WHERE (((1111528961) ISNULL)) GROUP BY v0.c0, v0.c1, v0.c2;
SELECT ALL v0.c0, v0.c1, v0.c2 FROM v0, vt1 GROUP BY v0.c0, v0.c1, v0.c2;
SELECT ALL rt0.c1, v0.c0, vt1.c0 FROM rt0, v0, vt1 GROUP BY rt0.c1, v0.c0, vt1.c0;
SELECT rt0.c1, v0.c0, vt1.c0 FROM rt0, v0, vt1 GROUP BY rt0.c1, v0.c0, vt1.c0 HAVING (((TRIM(DISTINCT COUNT(*)), (~ (0.8562346531995679)), ((COUNT(*)) NOTNULL), AVG(COUNT(*)), v0.c0))<((TOTAL(GROUP_CONCAT(TOTAL(TOTAL(SUM(rt0.c2))))), ((AVG(v0.c0))OR(rt0.c0)), GROUP_CONCAT(TOTAL(MAX('-1341678064'))), ((((((((COUNT(*))OR(rt0.c1)))AND(TOTAL(SUM(rt0.c0)))))OR(COUNT(TOTAL(v0.c2)))))OR(rt0.c2)), GROUP_CONCAT(0.06275837872287837)))) UNION ALL SELECT ALL rt0.c1, v0.c0, vt1.c0 FROM rt0, v0, vt1 GROUP BY rt0.c1, v0.c0, vt1.c0 HAVING (NOT ((((TRIM(DISTINCT COUNT(*)), (~ (0.8562346531995679)), ((COUNT(*)) NOTNULL), AVG(COUNT(*)), v0.c0))<((TOTAL(GROUP_CONCAT(TOTAL(TOTAL(SUM(rt0.c2))))), ((AVG(v0.c0))OR(rt0.c0)), GROUP_CONCAT(TOTAL(MAX('-1341678064'))), ((((((((COUNT(*))OR(rt0.c1)))AND(TOTAL(SUM(rt0.c0)))))OR(COUNT(TOTAL(v0.c2)))))OR(rt0.c2)), GROUP_CONCAT(0.06275837872287837)))))) UNION ALL SELECT rt0.c1, v0.c0, vt1.c0 FROM rt0, v0, vt1 GROUP BY rt0.c1, v0.c0, vt1.c0 HAVING (((((TRIM(DISTINCT COUNT(*)), (~ (0.8562346531995679)), ((COUNT(*)) NOTNULL), AVG(COUNT(*)), v0.c0))<((TOTAL(GROUP_CONCAT(TOTAL(TOTAL(SUM(rt0.c2))))), ((AVG(v0.c0))OR(rt0.c0)), GROUP_CONCAT(TOTAL(MAX('-1341678064'))), ((((((((COUNT(*))OR(rt0.c1)))AND(TOTAL(SUM(rt0.c0)))))OR(COUNT(TOTAL(v0.c2)))))OR(rt0.c2)), GROUP_CONCAT(0.06275837872287837))))) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (((0Xffffffffc9b9af54) NOT NULL)) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((0Xffffffffc9b9af54) NOT NULL)))) UNION ALL SELECT * FROM vt0 WHERE (((((0Xffffffffc9b9af54) NOT NULL)) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt1 INNER JOIN vt0 ON ABS(DISTINCT (~ (v0.c0))) RIGHT OUTER JOIN v0 ON ABS(DISTINCT ((((vt0.c0)OR(v0.c1)))OR(v0.c0))) FULL OUTER JOIN rt0 ON 'C' COLLATE RTRIM;
SELECT ALL vt1.c0, v0.c1 FROM rt0 NOT INDEXED RIGHT OUTER JOIN vt1 ON ((NULL) NOT NULL) RIGHT OUTER JOIN v0 ON (NOT ('')) GROUP BY vt1.c0, v0.c1;
SELECT vt1.c0, v0.c1 FROM rt0 RIGHT OUTER JOIN vt1 ON ((NULL) NOT NULL) RIGHT OUTER JOIN v0 ON (NOT ('')) WHERE ((~ ((vt1.c0 IN ())))) GROUP BY vt1.c0, v0.c1 UNION SELECT vt1.c0, v0.c1 FROM rt0 NOT INDEXED RIGHT OUTER JOIN vt1 ON ((NULL) NOT NULL) RIGHT OUTER JOIN v0 ON (NOT ('')) WHERE ((NOT ((~ ((vt1.c0 IN ())))))) GROUP BY vt1.c0, v0.c1 UNION SELECT ALL vt1.c0, v0.c1 FROM rt0 RIGHT OUTER JOIN vt1 ON ((NULL) NOT NULL) RIGHT OUTER JOIN v0 ON (NOT ('')) WHERE ((((~ ((vt1.c0 IN ())))) ISNULL)) GROUP BY vt1.c0, v0.c1;
SELECT ALL vt1.c0, v0.c1 FROM rt0 NOT INDEXED RIGHT OUTER JOIN vt1 ON ((NULL) NOT NULL) RIGHT OUTER JOIN v0 ON (NOT ('')) GROUP BY vt1.c0, v0.c1;
SELECT rt0.c0 FROM vt1, v0 FULL OUTER JOIN vt0 ON json_quote(((rt0.c0)GLOB(vt0.c0))) FULL OUTER JOIN rt0 ON CASE WHEN ((rt0.c0) ISNULL) THEN ((vt1.c0)/(v0.c1)) END GROUP BY rt0.c0;
SELECT ALL vt1.c0, rt0.c1, v0.c1, v0.c2 FROM v0, vt1, rt0, vt0;
SELECT ALL vt1.c0, rt0.c1, v0.c1, v0.c2 FROM v0, vt1, rt0, vt0 WHERE (CASE vt1.c0  WHEN v0.c0 THEN rt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN v0.c2 THEN rt0.c1 ELSE v0.c2 END COLLATE BINARY) UNION ALL SELECT vt1.c0, rt0.c1, v0.c1, v0.c2 FROM v0, vt1, rt0, vt0 WHERE ((NOT (CASE vt1.c0  WHEN v0.c0 THEN rt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN v0.c2 THEN rt0.c1 ELSE v0.c2 END COLLATE BINARY))) UNION ALL SELECT ALL vt1.c0, rt0.c1, v0.c1, v0.c2 FROM v0, vt1, rt0, vt0 WHERE (((CASE vt1.c0  WHEN v0.c0 THEN rt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN v0.c2 THEN rt0.c1 ELSE v0.c2 END COLLATE BINARY) ISNULL));
SELECT ALL vt1.c0, rt0.c1, v0.c1, v0.c2 FROM v0, vt1, rt0, vt0;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE (TRIM(DISTINCT CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN 0.19485932952820484 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE 0.8978941843823182 END)) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT (TRIM(DISTINCT CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN 0.19485932952820484 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE 0.8978941843823182 END)))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE (((TRIM(DISTINCT CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN 0.19485932952820484 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE 0.8978941843823182 END)) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT ALL v0.c1, vt1.c0, v0.c2 FROM vt1 LEFT OUTER JOIN v0 ON (((((((vt1.c0)OR(v0.c2)))AND(NULL)), 0.46436239393211387, UNLIKELY(v0.c0)))!=((((vt0.c0)*(vt0.c0)), (NOT (x'')), ((v0.c2) NOT NULL)))) FULL OUTER JOIN vt0 ON (((vt1.c0) NOTNULL) IN ((+ (vt1.c0)))) GROUP BY v0.c1, vt1.c0, v0.c2;
SELECT rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0 HAVING '0.16458912142757487' UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT ('0.16458912142757487')) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0 HAVING (('0.16458912142757487') ISNULL);
SELECT rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0 HAVING '0.16458912142757487' UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT ('0.16458912142757487')) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0 HAVING (('0.16458912142757487') ISNULL);
SELECT rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0;
SELECT * FROM vt0, v0, rt0;
SELECT ALL * FROM vt0, v0, rt0 WHERE ((((+ (v0.c2))) BETWEEN (rt0.c0) AND (((rt0.c0)-(v0.c0))))) UNION ALL SELECT * FROM vt0, v0, rt0 WHERE ((NOT ((((+ (v0.c2))) BETWEEN (rt0.c0) AND (((rt0.c0)-(v0.c0))))))) UNION ALL SELECT * FROM vt0, v0, rt0 WHERE ((((((+ (v0.c2))) BETWEEN (rt0.c0) AND (((rt0.c0)-(v0.c0))))) ISNULL));
SELECT * FROM vt0, v0, rt0;
SELECT DISTINCT v0.c1, rt0.c1 FROM vt0, v0, rt0;
SELECT DISTINCT v0.c1, rt0.c1 FROM vt0, v0, rt0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT v0.c1, rt0.c1 FROM vt0, v0, rt0 NOT INDEXED WHERE ((NOT ((NOT (rt0.c0))))) UNION SELECT DISTINCT v0.c1, rt0.c1 FROM vt0, v0, rt0 WHERE ((((NOT (rt0.c0))) ISNULL));
SELECT DISTINCT v0.c1, rt0.c1 FROM vt0, v0, rt0;
SELECT ALL vt1.c0 FROM vt1 INNER JOIN vt0 ON ((CASE WHEN vt1.c0 THEN vt0.c0 WHEN 0.2092049770775708 THEN NULL WHEN vt0.c0 THEN vt1.c0 ELSE NULL END) NOT BETWEEN (-1329513614 COLLATE BINARY) AND ((vt0.c0 IN ()))) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 INNER JOIN vt0 ON ((CASE WHEN vt1.c0 THEN vt0.c0 WHEN 0.2092049770775708 THEN NULL WHEN vt0.c0 THEN vt1.c0 ELSE NULL END) NOT BETWEEN (-1329513614 COLLATE BINARY) AND ((vt0.c0 IN ()))) WHERE (CAST(CASE WHEN vt1.c0 THEN vt0.c0 END AS NUMERIC)) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 INNER JOIN vt0 ON ((CASE WHEN vt1.c0 THEN vt0.c0 WHEN 0.2092049770775708 THEN NULL WHEN vt0.c0 THEN vt1.c0 ELSE NULL END) NOT BETWEEN (-1329513614 COLLATE BINARY) AND ((vt0.c0 IN ()))) WHERE ((NOT (CAST(CASE WHEN vt1.c0 THEN vt0.c0 END AS NUMERIC)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 INNER JOIN vt0 ON ((CASE WHEN vt1.c0 THEN vt0.c0 WHEN 0.2092049770775708 THEN NULL WHEN vt0.c0 THEN vt1.c0 ELSE NULL END) NOT BETWEEN (-1329513614 COLLATE BINARY) AND ((vt0.c0 IN ()))) WHERE (((CAST(CASE WHEN vt1.c0 THEN vt0.c0 END AS NUMERIC)) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 INNER JOIN vt0 ON ((CASE WHEN vt1.c0 THEN vt0.c0 WHEN 0.2092049770775708 THEN NULL WHEN vt0.c0 THEN vt1.c0 ELSE NULL END) NOT BETWEEN (-1329513614 COLLATE BINARY) AND ((vt0.c0 IN ()))) GROUP BY vt1.c0;
SELECT ALL rt0.c2, v0.c0, v0.c2, rt0.c0 FROM v0 LEFT OUTER JOIN vt1 ON rt0.c0 INNER JOIN rt0 ON rt0.c1 GROUP BY rt0.c2, v0.c0, v0.c2, rt0.c0;
SELECT ALL rt0.c0 FROM rt0, vt1;
SELECT ALL rt0.c0 FROM rt0, vt1 WHERE (vt1.c0) UNION ALL SELECT ALL rt0.c0 FROM rt0, vt1 WHERE ((NOT (vt1.c0))) UNION ALL SELECT rt0.c0 FROM rt0, vt1 WHERE (((vt1.c0) ISNULL));
SELECT ALL rt0.c0 FROM rt0, vt1;
SELECT DISTINCT rt0.c2 FROM v0, vt1, vt0, rt0;
SELECT DISTINCT rt0.c2 FROM v0, vt1, vt0, rt0 WHERE (((v0.c0 COLLATE RTRIM)||((rt0.c1 IN ())))) UNION SELECT DISTINCT rt0.c2 FROM v0, vt1, vt0, rt0 WHERE ((NOT (((v0.c0 COLLATE RTRIM)||((rt0.c1 IN ())))))) UNION SELECT DISTINCT rt0.c2 FROM v0, vt1, vt0, rt0 WHERE (((((v0.c0 COLLATE RTRIM)||((rt0.c1 IN ())))) ISNULL));
SELECT DISTINCT rt0.c2 FROM v0, vt1, vt0, rt0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 WHERE (rt0.c1) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT (rt0.c1))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE (((rt0.c1) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT vt1.c0, rt0.c0, rt0.c2 FROM rt0, vt1, vt0 GROUP BY vt1.c0, rt0.c0, rt0.c2;
SELECT vt1.c0, rt0.c0, rt0.c2 FROM rt0, vt1, vt0 GROUP BY vt1.c0, rt0.c0, rt0.c2 HAVING rt0.c2 UNION ALL SELECT vt1.c0, rt0.c0, rt0.c2 FROM rt0, vt1, vt0 GROUP BY vt1.c0, rt0.c0, rt0.c2 HAVING (NOT (rt0.c2)) UNION ALL SELECT vt1.c0, rt0.c0, rt0.c2 FROM rt0, vt1, vt0 GROUP BY vt1.c0, rt0.c0, rt0.c2 HAVING ((rt0.c2) ISNULL);
SELECT vt1.c0, rt0.c0, rt0.c2 FROM rt0, vt1, vt0 GROUP BY vt1.c0, rt0.c0, rt0.c2;
SELECT vt1.c0, rt0.c0, rt0.c2 FROM rt0, vt1, vt0 GROUP BY vt1.c0, rt0.c0, rt0.c2 HAVING rt0.c2 UNION ALL SELECT vt1.c0, rt0.c0, rt0.c2 FROM rt0, vt1, vt0 GROUP BY vt1.c0, rt0.c0, rt0.c2 HAVING (NOT (rt0.c2)) UNION ALL SELECT vt1.c0, rt0.c0, rt0.c2 FROM rt0, vt1, vt0 GROUP BY vt1.c0, rt0.c0, rt0.c2 HAVING ((rt0.c2) ISNULL);
SELECT vt1.c0, rt0.c0, rt0.c2 FROM rt0, vt1, vt0 GROUP BY vt1.c0, rt0.c0, rt0.c2;
SELECT ALL * FROM rt0, vt0, vt1, v0;
SELECT * FROM rt0, vt0, vt1, v0 WHERE ((NOT (CASE vt1.c0  WHEN rt0.c0 THEN v0.c0 END))) UNION ALL SELECT ALL * FROM rt0, vt0, vt1, v0 WHERE ((NOT ((NOT (CASE vt1.c0  WHEN rt0.c0 THEN v0.c0 END))))) UNION ALL SELECT ALL * FROM rt0, vt0, vt1, v0 WHERE ((((NOT (CASE vt1.c0  WHEN rt0.c0 THEN v0.c0 END))) ISNULL));
SELECT ALL * FROM rt0, vt0, vt1, v0;
SELECT DISTINCT * FROM rt0, vt0, vt1;
SELECT DISTINCT * FROM rt0, vt0, vt1 WHERE ((+ (CAST('1567258874' AS TEXT)))) UNION SELECT DISTINCT * FROM rt0, vt0, vt1 NOT INDEXED WHERE ((NOT ((+ (CAST('1567258874' AS TEXT)))))) UNION SELECT DISTINCT * FROM rt0, vt0, vt1 WHERE ((((+ (CAST('1567258874' AS TEXT)))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0, vt1;
SELECT rt0.c2, vt1.c0, v0.c2, rt0.c1 FROM rt0, vt1, v0 GROUP BY rt0.c2, vt1.c0, v0.c2, rt0.c1;
SELECT ALL rt0.c2, vt1.c0, v0.c2, rt0.c1 FROM rt0, vt1, v0 WHERE ((~ (v0.c2 COLLATE BINARY))) GROUP BY rt0.c2, vt1.c0, v0.c2, rt0.c1 UNION SELECT ALL rt0.c2, vt1.c0, v0.c2, rt0.c1 FROM rt0, vt1, v0 WHERE ((NOT ((~ (v0.c2 COLLATE BINARY))))) GROUP BY rt0.c2, vt1.c0, v0.c2, rt0.c1 UNION SELECT ALL rt0.c2, vt1.c0, v0.c2, rt0.c1 FROM rt0, vt1, v0 WHERE ((((~ (v0.c2 COLLATE BINARY))) ISNULL)) GROUP BY rt0.c2, vt1.c0, v0.c2, rt0.c1;
SELECT rt0.c2, vt1.c0, v0.c2, rt0.c1 FROM rt0, vt1, v0 GROUP BY rt0.c2, vt1.c0, v0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, vt0.c0, vt1.c0, rt0.c1 FROM rt0, vt1, vt0 GROUP BY rt0.c2, rt0.c0, vt0.c0, vt1.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, vt0.c0, vt1.c0, rt0.c1 FROM rt0, vt1, vt0 GROUP BY rt0.c2, rt0.c0, vt0.c0, vt1.c0, rt0.c1 HAVING COUNT(*) UNION ALL SELECT rt0.c2, rt0.c0, vt0.c0, vt1.c0, rt0.c1 FROM rt0, vt1, vt0 GROUP BY rt0.c2, rt0.c0, vt0.c0, vt1.c0, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c2, rt0.c0, vt0.c0, vt1.c0, rt0.c1 FROM rt0, vt1, vt0 GROUP BY rt0.c2, rt0.c0, vt0.c0, vt1.c0, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c2, rt0.c0, vt0.c0, vt1.c0, rt0.c1 FROM rt0, vt1, vt0 GROUP BY rt0.c2, rt0.c0, vt0.c0, vt1.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, vt0.c0, vt1.c0, rt0.c1 FROM rt0, vt1, vt0 GROUP BY rt0.c2, rt0.c0, vt0.c0, vt1.c0, rt0.c1 HAVING COUNT(*) UNION ALL SELECT rt0.c2, rt0.c0, vt0.c0, vt1.c0, rt0.c1 FROM rt0, vt1, vt0 GROUP BY rt0.c2, rt0.c0, vt0.c0, vt1.c0, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c2, rt0.c0, vt0.c0, vt1.c0, rt0.c1 FROM rt0, vt1, vt0 GROUP BY rt0.c2, rt0.c0, vt0.c0, vt1.c0, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c2, rt0.c0, vt0.c0, vt1.c0, rt0.c1 FROM rt0, vt1, vt0 GROUP BY rt0.c2, rt0.c0, vt0.c0, vt1.c0, rt0.c1;
SELECT MAX(CASE WHEN rt0.c2 COLLATE NOCASE THEN ((((((((rt0.c1)AND(rt0.c1)))OR(NULL)))OR(NULL)))OR(rt0.c1)) WHEN rt0.c0 THEN (NOT (rt0.c1)) WHEN (~ (rt0.c0)) THEN (((rt0.c0))<(('1918583366'))) WHEN json_array(rt0.c2, rt0.c1) THEN (rt0.c2 IN ()) WHEN (('-706529576') NOT BETWEEN (rt0.c0) AND (rt0.c1)) THEN ((((rt0.c1)OR('')))OR(rt0.c1)) ELSE ((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)) END) FROM rt0;
SELECT v0.c2 FROM vt0, v0, vt1;
SELECT ALL v0.c2 FROM vt0, v0, vt1 WHERE ((((v0.c2) BETWEEN (vt1.c0) AND (v0.c2)) IN ((((vt0.c0)) NOT BETWEEN (('976332761')) AND ((vt1.c0)))))) UNION ALL SELECT ALL v0.c2 FROM vt0, v0, vt1 WHERE ((NOT ((((v0.c2) BETWEEN (vt1.c0) AND (v0.c2)) IN ((((vt0.c0)) NOT BETWEEN (('976332761')) AND ((vt1.c0)))))))) UNION ALL SELECT v0.c2 FROM vt0, v0, vt1 WHERE ((((((v0.c2) BETWEEN (vt1.c0) AND (v0.c2)) IN ((((vt0.c0)) NOT BETWEEN (('976332761')) AND ((vt1.c0)))))) ISNULL));
SELECT v0.c2 FROM vt0, v0, vt1;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((+ (json_valid(v0.c2)))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((+ (json_valid(v0.c2)))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((+ (json_valid(v0.c2)))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT rt0.c2, v0.c2, v0.c0, rt0.c0, v0.c1, rt0.c1 FROM rt0, v0 GROUP BY rt0.c2, v0.c2, v0.c0, rt0.c0, v0.c1, rt0.c1;
SELECT ALL rt0.c2, v0.c2, v0.c0, rt0.c0, v0.c1, rt0.c1 FROM rt0, v0 WHERE ('COO8' COLLATE NOCASE) GROUP BY rt0.c2, v0.c2, v0.c0, rt0.c0, v0.c1, rt0.c1 UNION SELECT ALL rt0.c2, v0.c2, v0.c0, rt0.c0, v0.c1, rt0.c1 FROM rt0, v0 WHERE ((NOT ('COO8' COLLATE NOCASE))) GROUP BY rt0.c2, v0.c2, v0.c0, rt0.c0, v0.c1, rt0.c1 UNION SELECT rt0.c2, v0.c2, v0.c0, rt0.c0, v0.c1, rt0.c1 FROM rt0, v0 WHERE ((('COO8' COLLATE NOCASE) ISNULL)) GROUP BY rt0.c2, v0.c2, v0.c0, rt0.c0, v0.c1, rt0.c1;
SELECT rt0.c2, v0.c2, v0.c0, rt0.c0, v0.c1, rt0.c1 FROM rt0, v0 GROUP BY rt0.c2, v0.c2, v0.c0, rt0.c0, v0.c1, rt0.c1;
SELECT vt0.c0, rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM vt1, vt0, rt0 GROUP BY vt0.c0, rt0.c1, vt1.c0, rt0.c2, rt0.c0;
SELECT vt0.c0, rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM vt1, vt0, rt0 GROUP BY vt0.c0, rt0.c1, vt1.c0, rt0.c2, rt0.c0 HAVING MAX(GROUP_CONCAT(rt0.c0)) UNION ALL SELECT ALL vt0.c0, rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM vt1, vt0, rt0 GROUP BY vt0.c0, rt0.c1, vt1.c0, rt0.c2, rt0.c0 HAVING (NOT (MAX(GROUP_CONCAT(rt0.c0)))) UNION ALL SELECT vt0.c0, rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM vt1, vt0, rt0 GROUP BY vt0.c0, rt0.c1, vt1.c0, rt0.c2, rt0.c0 HAVING ((MAX(GROUP_CONCAT(rt0.c0))) ISNULL);
SELECT rt0.c2 FROM rt0;
SELECT rt0.c2 FROM rt0 WHERE (((((0.5660305455419782) ISNULL))LIKE(NULL))) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (((((0.5660305455419782) ISNULL))LIKE(NULL))))) UNION ALL SELECT rt0.c2 FROM rt0 WHERE (((((((0.5660305455419782) ISNULL))LIKE(NULL))) ISNULL));
SELECT rt0.c2 FROM rt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((('kK.') BETWEEN (vt0.c0) AND (vt0.c0))) IS FALSE)) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((((('kK.') BETWEEN (vt0.c0) AND (vt0.c0))) IS FALSE)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((('kK.') BETWEEN (vt0.c0) AND (vt0.c0))) IS FALSE)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL v0.c2, v0.c0, vt0.c0, v0.c1, vt1.c0 FROM vt1, vt0, v0 GROUP BY v0.c2, v0.c0, vt0.c0, v0.c1, vt1.c0;
SELECT v0.c2, v0.c0, vt0.c0, v0.c1, vt1.c0 FROM vt1, vt0, v0 WHERE (((((vt1.c0) NOTNULL))%(x''))) GROUP BY v0.c2, v0.c0, vt0.c0, v0.c1, vt1.c0 UNION SELECT ALL v0.c2, v0.c0, vt0.c0, v0.c1, vt1.c0 FROM vt1, vt0, v0 WHERE ((NOT (((((vt1.c0) NOTNULL))%(x''))))) GROUP BY v0.c2, v0.c0, vt0.c0, v0.c1, vt1.c0 UNION SELECT ALL v0.c2, v0.c0, vt0.c0, v0.c1, vt1.c0 FROM vt1, vt0, v0 WHERE (((((((vt1.c0) NOTNULL))%(x''))) ISNULL)) GROUP BY v0.c2, v0.c0, vt0.c0, v0.c1, vt1.c0;
SELECT ALL v0.c2, v0.c0, vt0.c0, v0.c1, vt1.c0 FROM vt1, vt0, v0 GROUP BY v0.c2, v0.c0, vt0.c0, v0.c1, vt1.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING CAST((COUNT(AVG(COUNT(*))) IN ()) AS TEXT) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (CAST((COUNT(AVG(COUNT(*))) IN ()) AS TEXT))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((CAST((COUNT(AVG(COUNT(*))) IN ()) AS TEXT)) ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING CAST((COUNT(AVG(COUNT(*))) IN ()) AS TEXT) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (CAST((COUNT(AVG(COUNT(*))) IN ()) AS TEXT))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((CAST((COUNT(AVG(COUNT(*))) IN ()) AS TEXT)) ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT MAX(vt1.c0) FROM vt1 ORDER BY (((- (vt1.c0)))OR('!~D0.	' COLLATE BINARY)) DESC  NULLS FIRST, (CAST(vt1.c0 AS REAL) IN ()) DESC  NULLS FIRST, TYPEOF(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)));
SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0, vt0;
SELECT v0.c2, v0.c0, v0.c1 FROM v0, vt0 WHERE (CAST(((v0.c0)AND(vt0.c0)) AS NUMERIC)) UNION ALL SELECT v0.c2, v0.c0, v0.c1 FROM v0, vt0 WHERE ((NOT (CAST(((v0.c0)AND(vt0.c0)) AS NUMERIC)))) UNION ALL SELECT v0.c2, v0.c0, v0.c1 FROM v0, vt0 WHERE (((CAST(((v0.c0)AND(vt0.c0)) AS NUMERIC)) ISNULL));
SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0, vt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM vt0, rt0, vt1;
SELECT DISTINCT rt0.c2, rt0.c1 FROM vt0, rt0, vt1 WHERE ((((~ (rt0.c0))) NOT NULL)) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM vt0, rt0, vt1 WHERE ((NOT ((((~ (rt0.c0))) NOT NULL)))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM vt0, rt0, vt1 WHERE ((((((~ (rt0.c0))) NOT NULL)) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1 FROM vt0, rt0, vt1;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (((rt0.c1)*(rt0.c2 COLLATE NOCASE))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((rt0.c1)*(rt0.c2 COLLATE NOCASE))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((((rt0.c1)*(rt0.c2 COLLATE NOCASE))) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL v0.c0, rt0.c0, rt0.c2 FROM vt0, rt0, v0, vt1 GROUP BY v0.c0, rt0.c0, rt0.c2;
SELECT ALL v0.c0, rt0.c0, rt0.c2 FROM vt0, rt0, v0, vt1 GROUP BY v0.c0, rt0.c0, rt0.c2 HAVING COUNT(((vt0.c0)&(v0.c1))) UNION ALL SELECT v0.c0, rt0.c0, rt0.c2 FROM vt0, rt0 NOT INDEXED, v0, vt1 GROUP BY v0.c0, rt0.c0, rt0.c2 HAVING (NOT (COUNT(((vt0.c0)&(v0.c1))))) UNION ALL SELECT v0.c0, rt0.c0, rt0.c2 FROM vt0, rt0, v0, vt1 GROUP BY v0.c0, rt0.c0, rt0.c2 HAVING ((COUNT(((vt0.c0)&(v0.c1)))) ISNULL);
SELECT ALL v0.c0, rt0.c0, rt0.c2 FROM vt0, rt0, v0, vt1 GROUP BY v0.c0, rt0.c0, rt0.c2;
SELECT ALL v0.c0, rt0.c0, rt0.c2 FROM vt0, rt0, v0, vt1 GROUP BY v0.c0, rt0.c0, rt0.c2 HAVING COUNT(((vt0.c0)&(v0.c1))) UNION ALL SELECT v0.c0, rt0.c0, rt0.c2 FROM vt0, rt0 NOT INDEXED, v0, vt1 GROUP BY v0.c0, rt0.c0, rt0.c2 HAVING (NOT (COUNT(((vt0.c0)&(v0.c1))))) UNION ALL SELECT v0.c0, rt0.c0, rt0.c2 FROM vt0, rt0, v0, vt1 GROUP BY v0.c0, rt0.c0, rt0.c2 HAVING ((COUNT(((vt0.c0)&(v0.c1)))) ISNULL);
SELECT ALL v0.c0, rt0.c0, rt0.c2 FROM vt0, rt0, v0, vt1 GROUP BY v0.c0, rt0.c0, rt0.c2;
SELECT ALL SUM((((vt1.c0)+(0.29287548643718064)) IN ())) FROM vt1;
SELECT v0.c0, vt0.c0, rt0.c0, rt0.c2, v0.c1, rt0.c1, vt1.c0, v0.c2 FROM rt0, vt0 FULL OUTER JOIN v0 ON (((((- (v0.c0)))AND(v0.c2 COLLATE RTRIM)))OR(CAST(v0.c2 AS BLOB))) CROSS JOIN vt1 ON ((((((((((rt0.c1)AND(v0.c2)))OR(v0.c1)))OR(v0.c0)))OR(rt0.c2))) BETWEEN (json_array_length(rt0.c0)) AND (((v0.c2) BETWEEN (rt0.c0) AND (v0.c0))));
SELECT v0.c0, vt0.c0, rt0.c0, rt0.c2, v0.c1, rt0.c1, vt1.c0, v0.c2 FROM rt0, vt0 FULL OUTER JOIN v0 ON (((((- (v0.c0)))AND(v0.c2 COLLATE RTRIM)))OR(CAST(v0.c2 AS BLOB))) CROSS JOIN vt1 ON ((((((((((rt0.c1)AND(v0.c2)))OR(v0.c1)))OR(v0.c0)))OR(rt0.c2))) BETWEEN (json_array_length(rt0.c0)) AND (((v0.c2) BETWEEN (rt0.c0) AND (v0.c0)))) WHERE (((',' IN ()) IN ())) UNION ALL SELECT ALL v0.c0, vt0.c0, rt0.c0, rt0.c2, v0.c1, rt0.c1, vt1.c0, v0.c2 FROM rt0, vt0 FULL OUTER JOIN v0 ON (((((- (v0.c0)))AND(v0.c2 COLLATE RTRIM)))OR(CAST(v0.c2 AS BLOB))) CROSS JOIN vt1 ON ((((((((((rt0.c1)AND(v0.c2)))OR(v0.c1)))OR(v0.c0)))OR(rt0.c2))) BETWEEN (json_array_length(rt0.c0)) AND (((v0.c2) BETWEEN (rt0.c0) AND (v0.c0)))) WHERE ((NOT (((',' IN ()) IN ())))) UNION ALL SELECT v0.c0, vt0.c0, rt0.c0, rt0.c2, v0.c1, rt0.c1, vt1.c0, v0.c2 FROM rt0, vt0 FULL OUTER JOIN v0 ON (((((- (v0.c0)))AND(v0.c2 COLLATE RTRIM)))OR(CAST(v0.c2 AS BLOB))) CROSS JOIN vt1 ON ((((((((((rt0.c1)AND(v0.c2)))OR(v0.c1)))OR(v0.c0)))OR(rt0.c2))) BETWEEN (json_array_length(rt0.c0)) AND (((v0.c2) BETWEEN (rt0.c0) AND (v0.c0)))) WHERE (((((',' IN ()) IN ())) ISNULL));
SELECT v0.c0, vt0.c0, rt0.c0, rt0.c2, v0.c1, rt0.c1, vt1.c0, v0.c2 FROM rt0, vt0 FULL OUTER JOIN v0 ON (((((- (v0.c0)))AND(v0.c2 COLLATE RTRIM)))OR(CAST(v0.c2 AS BLOB))) CROSS JOIN vt1 ON ((((((((((rt0.c1)AND(v0.c2)))OR(v0.c1)))OR(v0.c0)))OR(rt0.c2))) BETWEEN (json_array_length(rt0.c0)) AND (((v0.c2) BETWEEN (rt0.c0) AND (v0.c0))));
SELECT DISTINCT v0.c0 FROM rt0, v0, vt0 INNER JOIN vt1 ON ((((CAST(vt0.c0 AS REAL))OR(CAST(vt0.c0 AS NUMERIC))))AND((- (rt0.c1))));
SELECT DISTINCT v0.c0 FROM rt0, v0, vt0 INNER JOIN vt1 ON ((((CAST(vt0.c0 AS REAL))OR(CAST(vt0.c0 AS NUMERIC))))AND((- (rt0.c1)))) WHERE ((((((rt0.c2)OR('PZ')))OR(rt0.c2)) IN ())) UNION SELECT DISTINCT v0.c0 FROM rt0, v0, vt0 INNER JOIN vt1 ON ((((CAST(vt0.c0 AS REAL))OR(CAST(vt0.c0 AS NUMERIC))))AND((- (rt0.c1)))) WHERE ((NOT ((((((rt0.c2)OR('PZ')))OR(rt0.c2)) IN ())))) UNION SELECT DISTINCT v0.c0 FROM rt0, v0, vt0 INNER JOIN vt1 ON ((((CAST(vt0.c0 AS REAL))OR(CAST(vt0.c0 AS NUMERIC))))AND((- (rt0.c1)))) WHERE ((((((((rt0.c2)OR('PZ')))OR(rt0.c2)) IN ())) ISNULL));
SELECT DISTINCT v0.c0 FROM rt0, v0, vt0 INNER JOIN vt1 ON ((((CAST(vt0.c0 AS REAL))OR(CAST(vt0.c0 AS NUMERIC))))AND((- (rt0.c1))));
SELECT ALL vt0.c0, v0.c2, v0.c1, vt1.c0 FROM v0, vt1, vt0 GROUP BY vt0.c0, v0.c2, v0.c1, vt1.c0;
SELECT vt0.c0, v0.c2, v0.c1, vt1.c0 FROM v0, vt1, vt0 WHERE (CASE ((v0.c2) BETWEEN (v0.c0) AND (v0.c1))  WHEN ((x'') NOT BETWEEN (v0.c0) AND (vt0.c0)) THEN ((vt1.c0)<>(v0.c1)) ELSE (v0.c2 IN (vt1.c0)) END) GROUP BY vt0.c0, v0.c2, v0.c1, vt1.c0 UNION SELECT vt0.c0, v0.c2, v0.c1, vt1.c0 FROM v0, vt1, vt0 WHERE ((NOT (CASE ((v0.c2) BETWEEN (v0.c0) AND (v0.c1))  WHEN ((x'') NOT BETWEEN (v0.c0) AND (vt0.c0)) THEN ((vt1.c0)!=(v0.c1)) ELSE (v0.c2 IN (vt1.c0)) END))) GROUP BY vt0.c0, v0.c2, v0.c1, vt1.c0 UNION SELECT vt0.c0, v0.c2, v0.c1, vt1.c0 FROM v0, vt1, vt0 WHERE (((CASE ((v0.c2) BETWEEN (v0.c0) AND (v0.c1))  WHEN ((x'') NOT BETWEEN (v0.c0) AND (vt0.c0)) THEN ((vt1.c0)<>(v0.c1)) ELSE (v0.c2 IN (vt1.c0)) END) ISNULL)) GROUP BY vt0.c0, v0.c2, v0.c1, vt1.c0;
SELECT ALL vt0.c0, v0.c2, v0.c1, vt1.c0 FROM v0, vt1, vt0 GROUP BY vt0.c0, v0.c2, v0.c1, vt1.c0;
SELECT v0.c0, rt0.c1, rt0.c0 FROM rt0 CROSS JOIN vt0 ON (~ (LIKELIHOOD(vt0.c0, 0.17498472841260904))) FULL OUTER JOIN v0 ON '2077689943' GROUP BY v0.c0, rt0.c1, rt0.c0;
SELECT v0.c0, rt0.c1, rt0.c0 FROM rt0 CROSS JOIN vt0 ON (~ (LIKELIHOOD(vt0.c0, 0.17498472841260904))) FULL OUTER JOIN v0 ON '2077689943' GROUP BY v0.c0, rt0.c1, rt0.c0 HAVING ((COUNT(TOTAL(SUM(v0.c2)))) NOT BETWEEN (rt0.c2) AND ((((vt0.c0, rt0.c2, v0.c1))!=((v0.c1, COUNT(GROUP_CONCAT('')), vt0.c0))))) UNION ALL SELECT ALL v0.c0, rt0.c1, rt0.c0 FROM rt0 CROSS JOIN vt0 ON (~ (LIKELIHOOD(vt0.c0, 0.17498472841260904))) FULL OUTER JOIN v0 ON '2077689943' GROUP BY v0.c0, rt0.c1, rt0.c0 HAVING (NOT (((COUNT(TOTAL(SUM(v0.c2)))) NOT BETWEEN (rt0.c2) AND ((((vt0.c0, rt0.c2, v0.c1))<>((v0.c1, COUNT(GROUP_CONCAT('')), vt0.c0))))))) UNION ALL SELECT ALL v0.c0, rt0.c1, rt0.c0 FROM rt0 CROSS JOIN vt0 ON (~ (LIKELIHOOD(vt0.c0, 0.17498472841260904))) FULL OUTER JOIN v0 ON '2077689943' GROUP BY v0.c0, rt0.c1, rt0.c0 HAVING ((((COUNT(TOTAL(SUM(v0.c2)))) NOT BETWEEN (rt0.c2) AND ((((vt0.c0, rt0.c2, v0.c1))!=((v0.c1, COUNT(GROUP_CONCAT('')), vt0.c0)))))) ISNULL);
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE ((CASE WHEN v0.c2 THEN v0.c2 WHEN v0.c2 THEN '' WHEN v0.c2 THEN v0.c1 END IN ())) UNION ALL SELECT * FROM v0 WHERE ((NOT ((CASE WHEN v0.c2 THEN v0.c2 WHEN v0.c2 THEN '' WHEN v0.c2 THEN v0.c1 END IN ())))) UNION ALL SELECT * FROM v0 WHERE ((((CASE WHEN v0.c2 THEN v0.c2 WHEN v0.c2 THEN '' WHEN v0.c2 THEN v0.c1 END IN ())) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) COLLATE RTRIM) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) COLLATE RTRIM))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, vt1 WHERE (CASE WHEN (vt0.c0 IN ()) THEN ((((((((((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)))AND(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt1.c0)) END) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 NOT INDEXED, vt1 WHERE ((NOT (CASE WHEN (vt0.c0 IN ()) THEN ((((((((((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)))AND(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt1.c0)) END))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, vt1 WHERE (((CASE WHEN (vt0.c0 IN ()) THEN ((((((((((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)))AND(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt1.c0)) END) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT ALL vt1.c0, rt0.c1, v0.c0, vt0.c0, rt0.c0, rt0.c2, v0.c2, v0.c1 FROM vt1, vt0, rt0 NATURAL JOIN v0 GROUP BY vt1.c0, rt0.c1, v0.c0, vt0.c0, rt0.c0, rt0.c2, v0.c2, v0.c1;
SELECT vt1.c0, rt0.c1, v0.c0, vt0.c0, rt0.c0, rt0.c2, v0.c2, v0.c1 FROM vt1, vt0, rt0 NATURAL JOIN v0 GROUP BY vt1.c0, rt0.c1, v0.c0, vt0.c0, rt0.c0, rt0.c2, v0.c2, v0.c1 HAVING CAST(SUM(TOTAL(GROUP_CONCAT(COUNT(rt0.c0)))) AS TEXT) UNION ALL SELECT ALL vt1.c0, rt0.c1, v0.c0, vt0.c0, rt0.c0, rt0.c2, v0.c2, v0.c1 FROM vt1, vt0, rt0 NATURAL JOIN v0 GROUP BY vt1.c0, rt0.c1, v0.c0, vt0.c0, rt0.c0, rt0.c2, v0.c2, v0.c1 HAVING (NOT (CAST(SUM(TOTAL(GROUP_CONCAT(COUNT(rt0.c0)))) AS TEXT))) UNION ALL SELECT vt1.c0, rt0.c1, v0.c0, vt0.c0, rt0.c0, rt0.c2, v0.c2, v0.c1 FROM vt1, vt0, rt0 NATURAL JOIN v0 GROUP BY vt1.c0, rt0.c1, v0.c0, vt0.c0, rt0.c0, rt0.c2, v0.c2, v0.c1 HAVING ((CAST(SUM(TOTAL(GROUP_CONCAT(COUNT(rt0.c0)))) AS TEXT)) ISNULL);
SELECT * FROM vt1, rt0 FULL OUTER JOIN vt0 ON NULL CROSS JOIN v0 ON ((v0.c1) BETWEEN (((rt0.c1) IS TRUE)) AND (v0.c0 COLLATE RTRIM));
SELECT * FROM vt1, rt0 FULL OUTER JOIN vt0 ON NULL CROSS JOIN v0 ON ((v0.c1) BETWEEN (((rt0.c1) IS TRUE)) AND (v0.c0 COLLATE RTRIM)) WHERE ((((((((v0.c1)AND(rt0.c2)))AND(rt0.c1))))>=((TRIM(DISTINCT v0.c1))))) UNION ALL SELECT ALL * FROM vt1, rt0 FULL OUTER JOIN vt0 ON NULL CROSS JOIN v0 ON ((v0.c1) BETWEEN (((rt0.c1) IS TRUE)) AND (v0.c0 COLLATE RTRIM)) WHERE ((NOT ((((((((v0.c1)AND(rt0.c2)))AND(rt0.c1))))>=((TRIM(DISTINCT v0.c1))))))) UNION ALL SELECT * FROM vt1, rt0 FULL OUTER JOIN vt0 ON NULL CROSS JOIN v0 ON ((v0.c1) BETWEEN (((rt0.c1) IS TRUE)) AND (v0.c0 COLLATE RTRIM)) WHERE ((((((((((v0.c1)AND(rt0.c2)))AND(rt0.c1))))>=((TRIM(DISTINCT v0.c1))))) ISNULL));
SELECT * FROM vt1, rt0 FULL OUTER JOIN vt0 ON NULL CROSS JOIN v0 ON ((v0.c1) BETWEEN (((rt0.c1) IS TRUE)) AND (v0.c0 COLLATE RTRIM));
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE ((+ (((rt0.c0)LIKE(rt0.c2))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT ((+ (((rt0.c0)LIKE(rt0.c2))))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((((+ (((rt0.c0)LIKE(rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE (CASE ((rt0.c1) NOTNULL)  WHEN rt0.c0 COLLATE RTRIM THEN LIKELIHOOD(rt0.c2, 0.4158103247921009) ELSE ((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c0)) END) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT (CASE ((rt0.c1) NOTNULL)  WHEN rt0.c0 COLLATE RTRIM THEN LIKELIHOOD(rt0.c2, 0.4158103247921009) ELSE ((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c0)) END))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE (((CASE ((rt0.c1) NOTNULL)  WHEN rt0.c0 COLLATE RTRIM THEN LIKELIHOOD(rt0.c2, 0.4158103247921009) ELSE ((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c0)) END) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c2, vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c1;
SELECT rt0.c2, vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c1 HAVING GROUP_CONCAT(NULLIF('lCJqR', GROUP_CONCAT(AVG(0X2f29c128)))) UNION ALL SELECT rt0.c2, vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c1 HAVING (NOT (GROUP_CONCAT(NULLIF('lCJqR', GROUP_CONCAT(AVG(0x2f29c128)))))) UNION ALL SELECT rt0.c2, vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c1 HAVING ((GROUP_CONCAT(NULLIF('lCJqR', GROUP_CONCAT(AVG(0x2f29c128))))) ISNULL);
SELECT SUM(rt0.c0) FROM vt1, rt0, vt0, v0 ORDER BY ((vt1.c0) BETWEEN (rt0.c0) AND (v0.c0)) COLLATE BINARY  NULLS FIRST, (CAST(v0.c0 AS INTEGER) IN ());
SELECT ALL v0.c0, rt0.c2, v0.c1, vt1.c0, rt0.c0 FROM v0, vt1, vt0, rt0;
SELECT ALL v0.c0, rt0.c2, v0.c1, vt1.c0, rt0.c0 FROM v0, vt1, vt0, rt0 WHERE ((+ (DATETIME(vt0.c0, v0.c2, 0.2922733702033835, vt1.c0, rt0.c2, rt0.c0, v0.c1)))) UNION ALL SELECT v0.c0, rt0.c2, v0.c1, vt1.c0, rt0.c0 FROM v0, vt1, vt0, rt0 WHERE ((NOT ((+ (DATETIME(vt0.c0, v0.c2, 0.2922733702033835, vt1.c0, rt0.c2, rt0.c0, v0.c1)))))) UNION ALL SELECT ALL v0.c0, rt0.c2, v0.c1, vt1.c0, rt0.c0 FROM v0, vt1, vt0, rt0 WHERE ((((+ (DATETIME(vt0.c0, v0.c2, 0.2922733702033835, vt1.c0, rt0.c2, rt0.c0, v0.c1)))) ISNULL));
SELECT ALL v0.c0, rt0.c2, v0.c1, vt1.c0, rt0.c0 FROM v0, vt1, vt0, rt0;
SELECT DISTINCT * FROM vt1, v0;
SELECT DISTINCT * FROM vt1, v0 WHERE (CASE WHEN ((v0.c1) BETWEEN (v0.c1) AND (vt1.c0)) THEN vt1.c0 END) UNION SELECT DISTINCT * FROM vt1, v0 WHERE ((NOT (CASE WHEN ((v0.c1) BETWEEN (v0.c1) AND (vt1.c0)) THEN vt1.c0 END))) UNION SELECT DISTINCT * FROM vt1, v0 WHERE (((CASE WHEN ((v0.c1) BETWEEN (v0.c1) AND (vt1.c0)) THEN vt1.c0 END) ISNULL));
SELECT DISTINCT * FROM vt1, v0;
SELECT v0.c2, v0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0 CROSS JOIN v0 ON ((((vt0.c0) BETWEEN (rt0.c2) AND (v0.c2))) NOT NULL) RIGHT OUTER JOIN vt0 ON GLOB(CAST(v0.c1 AS TEXT), ((x'') NOT NULL)) GROUP BY v0.c2, v0.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT vt1.c0, rt0.c2, vt0.c0, v0.c1, v0.c0, rt0.c1, v0.c2, rt0.c0 FROM vt0, rt0, vt1, v0 GROUP BY vt1.c0, rt0.c2, vt0.c0, v0.c1, v0.c0, rt0.c1, v0.c2, rt0.c0;
SELECT ALL vt1.c0, rt0.c2, vt0.c0, v0.c1, v0.c0, rt0.c1, v0.c2, rt0.c0 FROM vt0, rt0, vt1, v0 GROUP BY vt1.c0, rt0.c2, vt0.c0, v0.c1, v0.c0, rt0.c1, v0.c2, rt0.c0 HAVING CASE WHEN SUM(GROUP_CONCAT(rt0.c2)) THEN MIN(AVG(rt0.c0)) END UNION ALL SELECT vt1.c0, rt0.c2, vt0.c0, v0.c1, v0.c0, rt0.c1, v0.c2, rt0.c0 FROM vt0, rt0, vt1, v0 GROUP BY vt1.c0, rt0.c2, vt0.c0, v0.c1, v0.c0, rt0.c1, v0.c2, rt0.c0 HAVING (NOT (CASE WHEN SUM(GROUP_CONCAT(rt0.c2)) THEN MIN(AVG(rt0.c0)) END)) UNION ALL SELECT vt1.c0, rt0.c2, vt0.c0, v0.c1, v0.c0, rt0.c1, v0.c2, rt0.c0 FROM vt0, rt0, vt1, v0 GROUP BY vt1.c0, rt0.c2, vt0.c0, v0.c1, v0.c0, rt0.c1, v0.c2, rt0.c0 HAVING ((CASE WHEN SUM(GROUP_CONCAT(rt0.c2)) THEN MIN(AVG(rt0.c0)) END) ISNULL);
SELECT * FROM rt0, v0, vt0;
SELECT ALL * FROM rt0, v0, vt0 WHERE ((((('')AND(((((((((v0.c0)OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))OR(vt0.c0)))))AND(v0.c1 COLLATE NOCASE))) UNION ALL SELECT ALL * FROM rt0, v0, vt0 WHERE ((NOT ((((('')AND(((((((((v0.c0)OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))OR(vt0.c0)))))AND(v0.c1 COLLATE NOCASE))))) UNION ALL SELECT * FROM rt0, v0, vt0 WHERE ((((((('')AND(((((((((v0.c0)OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))OR(vt0.c0)))))AND(v0.c1 COLLATE NOCASE))) ISNULL));
SELECT * FROM rt0, v0, vt0;
SELECT DISTINCT * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1 WHERE (((((rt0.c2)-(vt1.c0))) BETWEEN ((+ (rt0.c1))) AND (((((rt0.c2)AND(rt0.c0)))OR(rt0.c2))))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((NOT (((((rt0.c2)-(vt1.c0))) BETWEEN ((+ (rt0.c1))) AND (((((rt0.c2)AND(rt0.c0)))OR(rt0.c2))))))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE (((((((rt0.c2)-(vt1.c0))) BETWEEN ((+ (rt0.c1))) AND (((((rt0.c2)AND(rt0.c0)))OR(rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt1;
SELECT ALL vt0.c0 FROM rt0, vt1, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM rt0, vt1, vt0 WHERE (x'1b5e') GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM rt0, vt1, vt0 WHERE ((NOT (x'1b5e'))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM rt0, vt1, vt0 WHERE (((x'1b5e') ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM rt0, vt1, vt0 GROUP BY vt0.c0;
SELECT v0.c1, v0.c2 FROM v0, rt0 GROUP BY v0.c1, v0.c2;
SELECT v0.c1, v0.c2 FROM v0, rt0 GROUP BY v0.c1, v0.c2 HAVING TOTAL(rt0.c2) UNION ALL SELECT ALL v0.c1, v0.c2 FROM v0, rt0 GROUP BY v0.c1, v0.c2 HAVING (NOT (TOTAL(rt0.c2))) UNION ALL SELECT v0.c1, v0.c2 FROM v0, rt0 GROUP BY v0.c1, v0.c2 HAVING ((TOTAL(rt0.c2)) ISNULL);
SELECT v0.c1, v0.c2 FROM v0, rt0 GROUP BY v0.c1, v0.c2;
SELECT v0.c1, v0.c2 FROM v0, rt0 GROUP BY v0.c1, v0.c2 HAVING TOTAL(rt0.c2) UNION ALL SELECT ALL v0.c1, v0.c2 FROM v0, rt0 GROUP BY v0.c1, v0.c2 HAVING (NOT (TOTAL(rt0.c2))) UNION ALL SELECT v0.c1, v0.c2 FROM v0, rt0 GROUP BY v0.c1, v0.c2 HAVING ((TOTAL(rt0.c2)) ISNULL);
SELECT v0.c1, v0.c2 FROM v0, rt0 GROUP BY v0.c1, v0.c2;
SELECT * FROM vt1, v0, rt0, vt0;
SELECT * FROM vt1, v0, rt0, vt0 WHERE ((NOT (((((((((rt0.c2)OR(v0.c1)))OR(v0.c1)))AND(rt0.c0)))AND(rt0.c1))))) UNION ALL SELECT * FROM vt1, v0, rt0, vt0 WHERE ((NOT ((NOT (((((((((rt0.c2)OR(v0.c1)))OR(v0.c1)))AND(rt0.c0)))AND(rt0.c1))))))) UNION ALL SELECT ALL * FROM vt1, v0, rt0, vt0 WHERE ((((NOT (((((((((rt0.c2)OR(v0.c1)))OR(v0.c1)))AND(rt0.c0)))AND(rt0.c1))))) ISNULL));
SELECT * FROM vt1, v0, rt0, vt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (CASE ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))  WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN ABS(DISTINCT vt1.c0) END) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (CASE ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))  WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN ABS(DISTINCT vt1.c0) END))) UNION SELECT DISTINCT * FROM vt1 WHERE (((CASE ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))  WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN ABS(DISTINCT vt1.c0) END) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt0.c0, rt0.c1, v0.c2, v0.c0, rt0.c2, v0.c1 FROM rt0, vt0, vt1, v0 GROUP BY vt0.c0, rt0.c1, v0.c2, v0.c0, rt0.c2, v0.c1;
SELECT vt0.c0, rt0.c1, v0.c2, v0.c0, rt0.c2, v0.c1 FROM rt0, vt0, vt1, v0 WHERE (((((v0.c1)GLOB(v0.c1)))>(rt0.c0))) GROUP BY vt0.c0, rt0.c1, v0.c2, v0.c0, rt0.c2, v0.c1 UNION SELECT vt0.c0, rt0.c1, v0.c2, v0.c0, rt0.c2, v0.c1 FROM rt0, vt0, vt1, v0 WHERE ((NOT (((((v0.c1)GLOB(v0.c1)))>(rt0.c0))))) GROUP BY vt0.c0, rt0.c1, v0.c2, v0.c0, rt0.c2, v0.c1 UNION SELECT vt0.c0, rt0.c1, v0.c2, v0.c0, rt0.c2, v0.c1 FROM rt0, vt0, vt1, v0 WHERE (((((((v0.c1)GLOB(v0.c1)))>(rt0.c0))) ISNULL)) GROUP BY vt0.c0, rt0.c1, v0.c2, v0.c0, rt0.c2, v0.c1;
SELECT vt0.c0, rt0.c1, v0.c2, v0.c0, rt0.c2, v0.c1 FROM rt0, vt0, vt1, v0 GROUP BY vt0.c0, rt0.c1, v0.c2, v0.c0, rt0.c2, v0.c1;
SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0, vt1 GROUP BY v0.c1, v0.c0, v0.c2;
SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0, vt1 GROUP BY v0.c1, v0.c0, v0.c2 HAVING CAST(v0.c2 AS BLOB) UNION ALL SELECT v0.c1, v0.c0, v0.c2 FROM v0, vt1 GROUP BY v0.c1, v0.c0, v0.c2 HAVING (NOT (CAST(v0.c2 AS BLOB))) UNION ALL SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0, vt1 GROUP BY v0.c1, v0.c0, v0.c2 HAVING ((CAST(v0.c2 AS BLOB)) ISNULL);
SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0, vt1 GROUP BY v0.c1, v0.c0, v0.c2;
SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0, vt1 GROUP BY v0.c1, v0.c0, v0.c2 HAVING CAST(v0.c2 AS BLOB) UNION ALL SELECT v0.c1, v0.c0, v0.c2 FROM v0, vt1 GROUP BY v0.c1, v0.c0, v0.c2 HAVING (NOT (CAST(v0.c2 AS BLOB))) UNION ALL SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0, vt1 GROUP BY v0.c1, v0.c0, v0.c2 HAVING ((CAST(v0.c2 AS BLOB)) ISNULL);
SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0, vt1 GROUP BY v0.c1, v0.c0, v0.c2;
SELECT ALL TOTAL((- (((vt1.c0) NOT BETWEEN (v0.c0) AND (v0.c1))))) FROM v0, vt0, vt1;
SELECT * FROM rt0, v0, vt0 NATURAL JOIN vt1;
SELECT ALL * FROM rt0, v0, vt0 NATURAL JOIN vt1 WHERE ((('')-((- (vt1.c0))))) UNION ALL SELECT * FROM rt0, v0, vt0 NATURAL JOIN vt1 WHERE ((NOT ((('')-((- (vt1.c0))))))) UNION ALL SELECT * FROM rt0, v0, vt0 NATURAL JOIN vt1 WHERE ((((('')-((- (vt1.c0))))) ISNULL));
SELECT * FROM rt0, v0, vt0 NATURAL JOIN vt1;
SELECT DISTINCT * FROM v0 LEFT OUTER JOIN vt1 ON (~ (((((v0.c1)OR(rt0.c0)))AND(v0.c0)))) RIGHT OUTER JOIN rt0 ON CASE (((v0.c2)) NOT BETWEEN (('-1085584215')) AND ((rt0.c2)))  WHEN ((vt1.c0) NOTNULL) THEN CASE rt0.c2  WHEN rt0.c2 THEN v0.c1 WHEN v0.c2 THEN rt0.c2 WHEN v0.c2 THEN 0Xffffffffff0afba1 END ELSE (((rt0.c0)) NOT BETWEEN ((3.16572076E8)) AND ((vt1.c0))) END;
SELECT v0.c1 FROM v0 RIGHT OUTER JOIN vt1 ON rt0.c2 RIGHT OUTER JOIN rt0 ON (((v0.c1, rt0.c2, 0.6014653763819489)) NOT BETWEEN (('-2126883605', ((rt0.c0) NOTNULL), x'')) AND ((0.2403074802480244, ((rt0.c2) NOTNULL), ((v0.c0) NOT NULL)))) GROUP BY v0.c1;
SELECT v0.c2, vt1.c0, v0.c1, vt0.c0, rt0.c1 FROM v0, vt0, rt0 LEFT OUTER JOIN vt1 ON ((((((v0.c0) NOT NULL))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c1 WHEN rt0.c2 THEN v0.c2 WHEN vt1.c0 THEN rt0.c2 END)))OR(0.1856156882807427)) GROUP BY v0.c2, vt1.c0, v0.c1, vt0.c0, rt0.c1;
SELECT ALL v0.c2, vt1.c0, v0.c1, vt0.c0, rt0.c1 FROM v0, vt0, rt0 LEFT OUTER JOIN vt1 ON ((((((v0.c0) NOT NULL))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c1 WHEN rt0.c2 THEN v0.c2 WHEN vt1.c0 THEN rt0.c2 END)))OR(0.1856156882807427)) GROUP BY v0.c2, vt1.c0, v0.c1, vt0.c0, rt0.c1 HAVING TOTAL(COUNT(*)) UNION ALL SELECT ALL v0.c2, vt1.c0, v0.c1, vt0.c0, rt0.c1 FROM v0, vt0, rt0 LEFT OUTER JOIN vt1 ON ((((((v0.c0) NOT NULL))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c1 WHEN rt0.c2 THEN v0.c2 WHEN vt1.c0 THEN rt0.c2 END)))OR(0.1856156882807427)) GROUP BY v0.c2, vt1.c0, v0.c1, vt0.c0, rt0.c1 HAVING (NOT (TOTAL(COUNT(*)))) UNION ALL SELECT ALL v0.c2, vt1.c0, v0.c1, vt0.c0, rt0.c1 FROM v0, vt0, rt0 LEFT OUTER JOIN vt1 ON ((((((v0.c0) NOT NULL))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c1 WHEN rt0.c2 THEN v0.c2 WHEN vt1.c0 THEN rt0.c2 END)))OR(0.1856156882807427)) GROUP BY v0.c2, vt1.c0, v0.c1, vt0.c0, rt0.c1 HAVING ((TOTAL(COUNT(*))) ISNULL);
SELECT * FROM vt0, v0;
SELECT ALL * FROM vt0, v0 WHERE (CASE WHEN 'n~' THEN ((v0.c0)AND(vt0.c0)) ELSE CAST(v0.c0 AS INTEGER) END) UNION ALL SELECT ALL * FROM vt0, v0 WHERE ((NOT (CASE WHEN 'n~' THEN ((v0.c0)AND(vt0.c0)) ELSE CAST(v0.c0 AS INTEGER) END))) UNION ALL SELECT * FROM vt0, v0 WHERE (((CASE WHEN 'n~' THEN ((v0.c0)AND(vt0.c0)) ELSE CAST(v0.c0 AS INTEGER) END) ISNULL));
SELECT * FROM vt0, v0;
SELECT DISTINCT * FROM v0, vt1;
SELECT DISTINCT * FROM v0, vt1 WHERE (CAST(0.8377178948756632 AS REAL)) UNION SELECT DISTINCT * FROM v0, vt1 WHERE ((NOT (CAST(0.8377178948756632 AS REAL)))) UNION SELECT DISTINCT * FROM v0, vt1 WHERE (((CAST(0.8377178948756632 AS REAL)) ISNULL));
SELECT DISTINCT * FROM v0, vt1;
SELECT ALL v0.c1, rt0.c2, rt0.c1, vt1.c0 FROM v0, vt1, rt0 GROUP BY v0.c1, rt0.c2, rt0.c1, vt1.c0;
SELECT ALL v0.c1, rt0.c2, rt0.c1, vt1.c0 FROM v0, vt1, rt0 WHERE (CAST(vt1.c0 AS TEXT)) GROUP BY v0.c1, rt0.c2, rt0.c1, vt1.c0 UNION SELECT v0.c1, rt0.c2, rt0.c1, vt1.c0 FROM v0, vt1, rt0 WHERE ((NOT (CAST(vt1.c0 AS TEXT)))) GROUP BY v0.c1, rt0.c2, rt0.c1, vt1.c0 UNION SELECT ALL v0.c1, rt0.c2, rt0.c1, vt1.c0 FROM v0, vt1, rt0 WHERE (((CAST(vt1.c0 AS TEXT)) ISNULL)) GROUP BY v0.c1, rt0.c2, rt0.c1, vt1.c0;
SELECT ALL v0.c1, rt0.c2, rt0.c1, vt1.c0 FROM v0, vt1, rt0 GROUP BY v0.c1, rt0.c2, rt0.c1, vt1.c0;
SELECT ALL vt1.c0, rt0.c2, v0.c1, v0.c2, rt0.c1 FROM rt0, v0, vt1 GROUP BY vt1.c0, rt0.c2, v0.c1, v0.c2, rt0.c1;
SELECT vt1.c0, rt0.c2, v0.c1, v0.c2, rt0.c1 FROM rt0, v0, vt1 GROUP BY vt1.c0, rt0.c2, v0.c1, v0.c2, rt0.c1 HAVING COUNT(*) UNION ALL SELECT vt1.c0, rt0.c2, v0.c1, v0.c2, rt0.c1 FROM rt0, v0, vt1 GROUP BY vt1.c0, rt0.c2, v0.c1, v0.c2, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0, rt0.c2, v0.c1, v0.c2, rt0.c1 FROM rt0, v0, vt1 GROUP BY vt1.c0, rt0.c2, v0.c1, v0.c2, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0, rt0.c2, v0.c1, v0.c2, rt0.c1 FROM rt0, v0, vt1 GROUP BY vt1.c0, rt0.c2, v0.c1, v0.c2, rt0.c1;
SELECT vt1.c0, rt0.c2, v0.c1, v0.c2, rt0.c1 FROM rt0, v0, vt1 GROUP BY vt1.c0, rt0.c2, v0.c1, v0.c2, rt0.c1 HAVING COUNT(*) UNION ALL SELECT vt1.c0, rt0.c2, v0.c1, v0.c2, rt0.c1 FROM rt0, v0, vt1 GROUP BY vt1.c0, rt0.c2, v0.c1, v0.c2, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0, rt0.c2, v0.c1, v0.c2, rt0.c1 FROM rt0, v0, vt1 GROUP BY vt1.c0, rt0.c2, v0.c1, v0.c2, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0, rt0.c2, v0.c1, v0.c2, rt0.c1 FROM rt0, v0, vt1 GROUP BY vt1.c0, rt0.c2, v0.c1, v0.c2, rt0.c1;
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON v0.c0 CROSS JOIN v0 ON (('764215595')GLOB(((((0.8709029718208289)OR(rt0.c0)))OR(rt0.c2)))) FULL OUTER JOIN rt0 ON '-926039754';
SELECT DISTINCT v0.c0 FROM v0, vt1;
SELECT DISTINCT v0.c0 FROM v0, vt1 WHERE ((NOT (CAST(v0.c2 AS TEXT)))) UNION SELECT DISTINCT v0.c0 FROM v0, vt1 WHERE ((NOT ((NOT (CAST(v0.c2 AS TEXT)))))) UNION SELECT DISTINCT v0.c0 FROM v0, vt1 WHERE ((((NOT (CAST(v0.c2 AS TEXT)))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0, vt1;
SELECT ALL rt0.c0, vt1.c0, vt0.c0, rt0.c2 FROM rt0, vt1, vt0 GROUP BY rt0.c0, vt1.c0, vt0.c0, rt0.c2;
SELECT ALL rt0.c0, vt1.c0, vt0.c0, rt0.c2 FROM rt0, vt1, vt0 WHERE ((((vt0.c0) IS FALSE) IN ())) GROUP BY rt0.c0, vt1.c0, vt0.c0, rt0.c2 UNION SELECT rt0.c0, vt1.c0, vt0.c0, rt0.c2 FROM rt0, vt1, vt0 WHERE ((NOT ((((vt0.c0) IS FALSE) IN ())))) GROUP BY rt0.c0, vt1.c0, vt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, vt1.c0, vt0.c0, rt0.c2 FROM rt0, vt1, vt0 WHERE ((((((vt0.c0) IS FALSE) IN ())) ISNULL)) GROUP BY rt0.c0, vt1.c0, vt0.c0, rt0.c2;
SELECT ALL rt0.c0, vt1.c0, vt0.c0, rt0.c2 FROM rt0, vt1, vt0 GROUP BY rt0.c0, vt1.c0, vt0.c0, rt0.c2;
SELECT ALL vt0.c0, v0.c2 FROM vt0, v0, rt0 GROUP BY vt0.c0, v0.c2;
SELECT ALL vt0.c0, v0.c2 FROM vt0, v0, rt0 GROUP BY vt0.c0, v0.c2 HAVING CAST(rt0.c2 AS REAL) COLLATE RTRIM UNION ALL SELECT vt0.c0, v0.c2 FROM vt0, v0, rt0 GROUP BY vt0.c0, v0.c2 HAVING (NOT (CAST(rt0.c2 AS REAL) COLLATE RTRIM)) UNION ALL SELECT ALL vt0.c0, v0.c2 FROM vt0, v0, rt0 GROUP BY vt0.c0, v0.c2 HAVING ((CAST(rt0.c2 AS REAL) COLLATE RTRIM) ISNULL);
SELECT ALL vt0.c0, v0.c2 FROM vt0, v0, rt0 GROUP BY vt0.c0, v0.c2;
SELECT ALL vt0.c0, v0.c2 FROM vt0, v0, rt0 GROUP BY vt0.c0, v0.c2 HAVING CAST(rt0.c2 AS REAL) COLLATE RTRIM UNION ALL SELECT vt0.c0, v0.c2 FROM vt0, v0, rt0 GROUP BY vt0.c0, v0.c2 HAVING (NOT (CAST(rt0.c2 AS REAL) COLLATE RTRIM)) UNION ALL SELECT ALL vt0.c0, v0.c2 FROM vt0, v0, rt0 GROUP BY vt0.c0, v0.c2 HAVING ((CAST(rt0.c2 AS REAL) COLLATE RTRIM) ISNULL);
SELECT ALL vt0.c0, v0.c2 FROM vt0, v0, rt0 GROUP BY vt0.c0, v0.c2;
SELECT ALL v0.c1, rt0.c2, v0.c0, rt0.c1 FROM v0, rt0;
SELECT ALL v0.c1, rt0.c2, v0.c0, rt0.c1 FROM v0, rt0 WHERE (CAST((+ (v0.c0)) AS TEXT)) UNION ALL SELECT ALL v0.c1, rt0.c2, v0.c0, rt0.c1 FROM v0, rt0 WHERE ((NOT (CAST((+ (v0.c0)) AS TEXT)))) UNION ALL SELECT v0.c1, rt0.c2, v0.c0, rt0.c1 FROM v0, rt0 WHERE (((CAST((+ (v0.c0)) AS TEXT)) ISNULL));
SELECT ALL v0.c1, rt0.c2, v0.c0, rt0.c1 FROM v0, rt0;
SELECT DISTINCT v0.c0, vt1.c0, rt0.c1 FROM v0 CROSS JOIN rt0 ON (('2062833007')>('-1017165437')) FULL OUTER JOIN vt1 ON ((((rt0.c0) NOT BETWEEN (v0.c2) AND (rt0.c1))) BETWEEN (CASE WHEN rt0.c0 THEN v0.c2 END) AND (vt1.c0 COLLATE RTRIM));
SELECT DISTINCT v0.c0, vt1.c0, rt0.c1 FROM v0 CROSS JOIN rt0 ON (('2062833007')>('-1017165437')) FULL OUTER JOIN vt1 ON ((((rt0.c0) NOT BETWEEN (v0.c2) AND (rt0.c1))) BETWEEN (CASE WHEN rt0.c0 THEN v0.c2 END) AND (vt1.c0 COLLATE RTRIM)) WHERE (((((rt0.c1)LIKE(vt1.c0))) BETWEEN ((rt0.c2 IN (v0.c2))) AND ((~ (NULL))))) UNION SELECT DISTINCT v0.c0, vt1.c0, rt0.c1 FROM v0 CROSS JOIN rt0 ON (('2062833007')>('-1017165437')) FULL OUTER JOIN vt1 ON ((((rt0.c0) NOT BETWEEN (v0.c2) AND (rt0.c1))) BETWEEN (CASE WHEN rt0.c0 THEN v0.c2 END) AND (vt1.c0 COLLATE RTRIM)) WHERE ((NOT (((((rt0.c1)LIKE(vt1.c0))) BETWEEN ((rt0.c2 IN (v0.c2))) AND ((~ (NULL))))))) UNION SELECT DISTINCT v0.c0, vt1.c0, rt0.c1 FROM v0 CROSS JOIN rt0 ON (('2062833007')>('-1017165437')) FULL OUTER JOIN vt1 ON ((((rt0.c0) NOT BETWEEN (v0.c2) AND (rt0.c1))) BETWEEN (CASE WHEN rt0.c0 THEN v0.c2 END) AND (vt1.c0 COLLATE RTRIM)) WHERE (((((((rt0.c1)LIKE(vt1.c0))) BETWEEN ((rt0.c2 IN (v0.c2))) AND ((~ (NULL))))) ISNULL));
SELECT DISTINCT v0.c0, vt1.c0, rt0.c1 FROM v0 CROSS JOIN rt0 ON (('2062833007')>('-1017165437')) FULL OUTER JOIN vt1 ON ((((rt0.c0) NOT BETWEEN (v0.c2) AND (rt0.c1))) BETWEEN (CASE WHEN rt0.c0 THEN v0.c2 END) AND (vt1.c0 COLLATE RTRIM));
SELECT ALL v0.c2 FROM rt0, vt1, vt0, v0 GROUP BY v0.c2;
SELECT ALL v0.c2 FROM rt0, vt1, vt0, v0 WHERE (((((((v0.c1) NOTNULL))AND(((((vt0.c0)AND(rt0.c0)))OR(rt0.c2)))))AND(json_patch(rt0.c0, v0.c0)))) GROUP BY v0.c2 UNION SELECT ALL v0.c2 FROM rt0, vt1, vt0, v0 WHERE ((NOT (((((((v0.c1) NOTNULL))AND(((((vt0.c0)AND(rt0.c0)))OR(rt0.c2)))))AND(json_patch(rt0.c0, v0.c0)))))) GROUP BY v0.c2 UNION SELECT v0.c2 FROM rt0, vt1, vt0, v0 WHERE (((((((((v0.c1) NOTNULL))AND(((((vt0.c0)AND(rt0.c0)))OR(rt0.c2)))))AND(json_patch(rt0.c0, v0.c0)))) ISNULL)) GROUP BY v0.c2;
SELECT ALL v0.c2 FROM rt0, vt1, vt0, v0 GROUP BY v0.c2;
SELECT ALL rt0.c0 FROM v0, rt0, vt1 GROUP BY rt0.c0;
SELECT rt0.c0 FROM v0, rt0, vt1 GROUP BY rt0.c0 HAVING MAX((((GROUP_CONCAT(TOTAL(vt1.c0)), MAX(AVG(SUM(AVG(AVG(COUNT(*)))))), TOTAL(rt0.c2)))=((MIN(TOTAL(v0.c2)), TOTAL(rt0.c2), vt1.c0)))) UNION ALL SELECT rt0.c0 FROM v0, rt0, vt1 GROUP BY rt0.c0 HAVING (NOT (MAX((((GROUP_CONCAT(TOTAL(vt1.c0)), MAX(AVG(SUM(AVG(AVG(COUNT(*)))))), TOTAL(rt0.c2)))==((MIN(TOTAL(v0.c2)), TOTAL(rt0.c2), vt1.c0)))))) UNION ALL SELECT rt0.c0 FROM v0, rt0, vt1 GROUP BY rt0.c0 HAVING ((MAX((((GROUP_CONCAT(TOTAL(vt1.c0)), MAX(AVG(SUM(AVG(AVG(COUNT(*)))))), TOTAL(rt0.c2)))==((MIN(TOTAL(v0.c2)), TOTAL(rt0.c2), vt1.c0))))) ISNULL);
SELECT rt0.c0, vt0.c0, rt0.c2, v0.c2, rt0.c1 FROM vt0 FULL OUTER JOIN vt1 ON (~ (((rt0.c2)LIKE(rt0.c0)))) CROSS JOIN rt0 ON ((((((rt0.c1) NOT BETWEEN (v0.c1) AND (rt0.c1)))AND(((NULL)LIKE(v0.c2)))))AND(CAST(vt0.c0 AS TEXT))) CROSS JOIN v0 ON x'55f6';
SELECT DISTINCT rt0.c2, rt0.c1, vt0.c0 FROM v0, rt0 LEFT OUTER JOIN vt1 ON CAST(CAST(v0.c2 AS TEXT) AS BLOB) RIGHT OUTER JOIN vt0 ON load_extension(CAST(rt0.c2 AS TEXT));
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE (CAST(NULL AS NUMERIC)) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT (CAST(NULL AS NUMERIC)))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE (((CAST(NULL AS NUMERIC)) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT v0.c2, rt0.c0 FROM rt0 NOT INDEXED, v0, vt0 GROUP BY v0.c2, rt0.c0;
SELECT ALL v0.c2, rt0.c0 FROM rt0, v0, vt0 GROUP BY v0.c2, rt0.c0 HAVING ((COUNT(v0.c1))>=(SUM(COUNT(v0.c2)))) UNION ALL SELECT v0.c2, rt0.c0 FROM rt0, v0, vt0 GROUP BY v0.c2, rt0.c0 HAVING (NOT (((COUNT(v0.c1))>=(SUM(COUNT(v0.c2)))))) UNION ALL SELECT ALL v0.c2, rt0.c0 FROM rt0, v0, vt0 GROUP BY v0.c2, rt0.c0 HAVING ((((COUNT(v0.c1))>=(SUM(COUNT(v0.c2))))) ISNULL);
SELECT vt0.c0, vt1.c0 FROM vt0, vt1;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (CAST((x'' IN ()) AS INTEGER)) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((NOT (CAST((x'' IN ()) AS INTEGER)))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((CAST((x'' IN ()) AS INTEGER)) ISNULL));
SELECT vt0.c0, vt1.c0 FROM vt0, vt1;
SELECT DISTINCT vt0.c0, rt0.c1, v0.c2, rt0.c0, v0.c1, v0.c0, rt0.c2 FROM v0, rt0, vt0;
SELECT DISTINCT vt0.c0, rt0.c1, v0.c2, rt0.c0, v0.c1, v0.c0, rt0.c2 FROM v0, rt0, vt0 WHERE (rt0.c1 COLLATE RTRIM) UNION SELECT DISTINCT vt0.c0, rt0.c1, v0.c2, rt0.c0, v0.c1, v0.c0, rt0.c2 FROM v0, rt0, vt0 WHERE ((NOT (rt0.c1 COLLATE RTRIM))) UNION SELECT DISTINCT vt0.c0, rt0.c1, v0.c2, rt0.c0, v0.c1, v0.c0, rt0.c2 FROM v0, rt0, vt0 WHERE (((rt0.c1 COLLATE RTRIM) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c1, v0.c2, rt0.c0, v0.c1, v0.c0, rt0.c2 FROM v0, rt0, vt0;
SELECT rt0.c2, rt0.c1, v0.c0 FROM v0, rt0, vt0, vt1 GROUP BY rt0.c2, rt0.c1, v0.c0;
SELECT rt0.c2, rt0.c1, v0.c0 FROM v0, rt0, vt0, vt1 WHERE ((('.nzt81\r/')<(IFNULL(rt0.c0, x'')))) GROUP BY rt0.c2, rt0.c1, v0.c0 UNION SELECT rt0.c2, rt0.c1, v0.c0 FROM v0, rt0, vt0, vt1 WHERE ((NOT ((('.nzt81\r/')<(IFNULL(rt0.c0, x'')))))) GROUP BY rt0.c2, rt0.c1, v0.c0 UNION SELECT ALL rt0.c2, rt0.c1, v0.c0 FROM v0, rt0, vt0, vt1 WHERE ((((('.nzt81\r/')<(IFNULL(rt0.c0, x'')))) ISNULL)) GROUP BY rt0.c2, rt0.c1, v0.c0;
SELECT rt0.c2, rt0.c1, v0.c0 FROM v0, rt0, vt0, vt1 GROUP BY rt0.c2, rt0.c1, v0.c0;
SELECT v0.c1, v0.c0, vt1.c0, vt0.c0, v0.c2 FROM vt1, vt0 RIGHT OUTER JOIN v0 ON LIKE(CAST(vt1.c0 AS NUMERIC), ((v0.c0)||(v0.c2))) GROUP BY v0.c1, v0.c0, vt1.c0, vt0.c0, v0.c2;
SELECT v0.c1, v0.c0, vt1.c0, vt0.c0, v0.c2 FROM vt1, vt0 RIGHT OUTER JOIN v0 ON LIKE(CAST(vt1.c0 AS NUMERIC), ((v0.c0)||(v0.c2))) GROUP BY v0.c1, v0.c0, vt1.c0, vt0.c0, v0.c2 HAVING CASE WHEN UNLIKELY(DISTINCT vt0.c0) THEN COUNT(*) END UNION ALL SELECT ALL v0.c1, v0.c0, vt1.c0, vt0.c0, v0.c2 FROM vt1, vt0 RIGHT OUTER JOIN v0 ON LIKE(CAST(vt1.c0 AS NUMERIC), ((v0.c0)||(v0.c2))) GROUP BY v0.c1, v0.c0, vt1.c0, vt0.c0, v0.c2 HAVING (NOT (CASE WHEN UNLIKELY(DISTINCT vt0.c0) THEN COUNT(*) END)) UNION ALL SELECT ALL v0.c1, v0.c0, vt1.c0, vt0.c0, v0.c2 FROM vt1, vt0 RIGHT OUTER JOIN v0 ON LIKE(CAST(vt1.c0 AS NUMERIC), ((v0.c0)||(v0.c2))) GROUP BY v0.c1, v0.c0, vt1.c0, vt0.c0, v0.c2 HAVING ((CASE WHEN UNLIKELY(DISTINCT vt0.c0) THEN COUNT(*) END) ISNULL);
SELECT v0.c1, v0.c0, vt1.c0, vt0.c0, v0.c2 FROM vt1, vt0 RIGHT OUTER JOIN v0 ON LIKE(CAST(vt1.c0 AS NUMERIC), ((v0.c0)||(v0.c2))) GROUP BY v0.c1, v0.c0, vt1.c0, vt0.c0, v0.c2;
SELECT v0.c1, v0.c0, vt1.c0, vt0.c0, v0.c2 FROM vt1, vt0 RIGHT OUTER JOIN v0 ON LIKE(CAST(vt1.c0 AS NUMERIC), ((v0.c0)||(v0.c2))) GROUP BY v0.c1, v0.c0, vt1.c0, vt0.c0, v0.c2 HAVING CASE WHEN UNLIKELY(DISTINCT vt0.c0) THEN COUNT(*) END UNION ALL SELECT ALL v0.c1, v0.c0, vt1.c0, vt0.c0, v0.c2 FROM vt1, vt0 RIGHT OUTER JOIN v0 ON LIKE(CAST(vt1.c0 AS NUMERIC), ((v0.c0)||(v0.c2))) GROUP BY v0.c1, v0.c0, vt1.c0, vt0.c0, v0.c2 HAVING (NOT (CASE WHEN UNLIKELY(DISTINCT vt0.c0) THEN COUNT(*) END)) UNION ALL SELECT ALL v0.c1, v0.c0, vt1.c0, vt0.c0, v0.c2 FROM vt1, vt0 RIGHT OUTER JOIN v0 ON LIKE(CAST(vt1.c0 AS NUMERIC), ((v0.c0)||(v0.c2))) GROUP BY v0.c1, v0.c0, vt1.c0, vt0.c0, v0.c2 HAVING ((CASE WHEN UNLIKELY(DISTINCT vt0.c0) THEN COUNT(*) END) ISNULL);
SELECT v0.c1, v0.c0, vt1.c0, vt0.c0, v0.c2 FROM vt1, vt0 RIGHT OUTER JOIN v0 ON LIKE(CAST(vt1.c0 AS NUMERIC), ((v0.c0)||(v0.c2))) GROUP BY v0.c1, v0.c0, vt1.c0, vt0.c0, v0.c2;
SELECT v0.c0, rt0.c1, rt0.c2, v0.c2, rt0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON (((x''))<=((((((v0.c2)OR(rt0.c0)))AND(rt0.c1)))));
SELECT v0.c0, rt0.c1, rt0.c2, v0.c2, rt0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON (((x''))<=((((((v0.c2)OR(rt0.c0)))AND(rt0.c1))))) WHERE ((((rt0.c1, v0.c2, rt0.c2, rt0.c1, '')) NOT BETWEEN ((rt0.c1 COLLATE NOCASE, (NULL IN ()), (rt0.c0 IN (v0.c2)), ((v0.c0) NOT NULL), ((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)))) AND (((rt0.c1 IN ()), ((rt0.c2)LIKE(rt0.c1)), CAST(v0.c2 AS BLOB), (rt0.c1 IN ()), ((((((((v0.c0)OR(rt0.c0)))AND(v0.c1)))OR(v0.c0)))OR('-1745885963')))))) UNION ALL SELECT v0.c0, rt0.c1, rt0.c2, v0.c2, rt0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON (((x''))<=((((((v0.c2)OR(rt0.c0)))AND(rt0.c1))))) WHERE ((NOT ((((rt0.c1, v0.c2, rt0.c2, rt0.c1, '')) NOT BETWEEN ((rt0.c1 COLLATE NOCASE, (NULL IN ()), (rt0.c0 IN (v0.c2)), ((v0.c0) NOT NULL), ((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)))) AND (((rt0.c1 IN ()), ((rt0.c2)LIKE(rt0.c1)), CAST(v0.c2 AS BLOB), (rt0.c1 IN ()), ((((((((v0.c0)OR(rt0.c0)))AND(v0.c1)))OR(v0.c0)))OR('-1745885963')))))))) UNION ALL SELECT ALL v0.c0, rt0.c1, rt0.c2, v0.c2, rt0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON (((x''))<=((((((v0.c2)OR(rt0.c0)))AND(rt0.c1))))) WHERE ((((((rt0.c1, v0.c2, rt0.c2, rt0.c1, '')) NOT BETWEEN ((rt0.c1 COLLATE NOCASE, (NULL IN ()), (rt0.c0 IN (v0.c2)), ((v0.c0) NOT NULL), ((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)))) AND (((rt0.c1 IN ()), ((rt0.c2)LIKE(rt0.c1)), CAST(v0.c2 AS BLOB), (rt0.c1 IN ()), ((((((((v0.c0)OR(rt0.c0)))AND(v0.c1)))OR(v0.c0)))OR('-1745885963')))))) ISNULL));
SELECT v0.c0, rt0.c1, rt0.c2, v0.c2, rt0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON (((x''))<=((((((v0.c2)OR(rt0.c0)))AND(rt0.c1)))));
SELECT DISTINCT * FROM vt0, rt0, v0, vt1;
SELECT DISTINCT * FROM vt0, rt0, v0, vt1 WHERE (0.8280952012258672) UNION SELECT DISTINCT * FROM vt0, rt0, v0, vt1 WHERE ((NOT (0.8280952012258672))) UNION SELECT DISTINCT * FROM vt0, rt0, v0, vt1 WHERE (((0.8280952012258672) ISNULL));
SELECT DISTINCT * FROM vt0, rt0, v0, vt1;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (UNLIKELY(DISTINCT ((vt1.c0)%(vt0.c0)))) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT (UNLIKELY(DISTINCT ((vt1.c0)%(vt0.c0)))))) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((UNLIKELY(DISTINCT ((vt1.c0)%(vt0.c0)))) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1, v0, vt0 CROSS JOIN rt0 ON UPPER(DISTINCT ((rt0.c0)|(rt0.c2))) GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, v0, vt0 CROSS JOIN rt0 ON UPPER(DISTINCT ((rt0.c0)|(rt0.c2))) GROUP BY vt1.c0, vt0.c0 HAVING SUM(CASE v0.c2  WHEN vt1.c0 THEN vt1.c0 END) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt1, v0, vt0 CROSS JOIN rt0 ON UPPER(DISTINCT ((rt0.c0)|(rt0.c2))) GROUP BY vt1.c0, vt0.c0 HAVING (NOT (SUM(CASE v0.c2  WHEN vt1.c0 THEN vt1.c0 END))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt1, v0, vt0 CROSS JOIN rt0 ON UPPER(DISTINCT ((rt0.c0)|(rt0.c2))) GROUP BY vt1.c0, vt0.c0 HAVING ((SUM(CASE v0.c2  WHEN vt1.c0 THEN vt1.c0 END)) ISNULL);
SELECT vt1.c0, vt0.c0 FROM vt1, v0, vt0 CROSS JOIN rt0 ON UPPER(DISTINCT ((rt0.c0)|(rt0.c2))) GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, v0, vt0 CROSS JOIN rt0 ON UPPER(DISTINCT ((rt0.c0)|(rt0.c2))) GROUP BY vt1.c0, vt0.c0 HAVING SUM(CASE v0.c2  WHEN vt1.c0 THEN vt1.c0 END) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt1, v0, vt0 CROSS JOIN rt0 ON UPPER(DISTINCT ((rt0.c0)|(rt0.c2))) GROUP BY vt1.c0, vt0.c0 HAVING (NOT (SUM(CASE v0.c2  WHEN vt1.c0 THEN vt1.c0 END))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt1, v0, vt0 CROSS JOIN rt0 ON UPPER(DISTINCT ((rt0.c0)|(rt0.c2))) GROUP BY vt1.c0, vt0.c0 HAVING ((SUM(CASE v0.c2  WHEN vt1.c0 THEN vt1.c0 END)) ISNULL);
SELECT vt1.c0, vt0.c0 FROM vt1, v0, vt0 CROSS JOIN rt0 ON UPPER(DISTINCT ((rt0.c0)|(rt0.c2))) GROUP BY vt1.c0, vt0.c0;
SELECT vt0.c0, vt1.c0, rt0.c1, v0.c0, v0.c2, rt0.c2, v0.c1 FROM rt0, vt1, v0, vt0;
SELECT vt0.c0, vt1.c0, rt0.c1, v0.c0, v0.c2, rt0.c2, v0.c1 FROM rt0, vt1, v0, vt0 WHERE (CAST(v0.c1 AS BLOB)) UNION ALL SELECT vt0.c0, vt1.c0, rt0.c1, v0.c0, v0.c2, rt0.c2, v0.c1 FROM rt0, vt1, v0, vt0 WHERE ((NOT (CAST(v0.c1 AS BLOB)))) UNION ALL SELECT vt0.c0, vt1.c0, rt0.c1, v0.c0, v0.c2, rt0.c2, v0.c1 FROM rt0, vt1, v0, vt0 WHERE (((CAST(v0.c1 AS BLOB)) ISNULL));
SELECT vt0.c0, vt1.c0, rt0.c1, v0.c0, v0.c2, rt0.c2, v0.c1 FROM rt0, vt1, v0, vt0;
SELECT DISTINCT * FROM rt0, vt1 RIGHT OUTER JOIN vt0 ON (('545639212')*(vt1.c0));
SELECT DISTINCT * FROM rt0, vt1 RIGHT OUTER JOIN vt0 ON (('545639212')*(vt1.c0)) WHERE (vt1.c0) UNION SELECT DISTINCT * FROM rt0, vt1 RIGHT OUTER JOIN vt0 ON (('545639212')*(vt1.c0)) WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT * FROM rt0, vt1 RIGHT OUTER JOIN vt0 ON (('545639212')*(vt1.c0)) WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT * FROM rt0, vt1 RIGHT OUTER JOIN vt0 ON (('545639212')*(vt1.c0));
SELECT rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, vt0 WHERE (((rt0.c0) NOT BETWEEN ((rt0.c0 IN (rt0.c2))) AND (((rt0.c2)AND(rt0.c1))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0, vt0 WHERE ((NOT (((rt0.c0) NOT BETWEEN ((rt0.c0 IN (rt0.c2))) AND (((rt0.c2)AND(rt0.c1))))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0, vt0 WHERE (((((rt0.c0) NOT BETWEEN ((rt0.c0 IN (rt0.c2))) AND (((rt0.c2)AND(rt0.c1))))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1;
SELECT ALL v0.c2, vt0.c0, rt0.c2, v0.c1, rt0.c1, vt1.c0 FROM rt0, v0, vt1 FULL OUTER JOIN vt0 ON (((- (vt0.c0))) NOT NULL) GROUP BY v0.c2, vt0.c0, rt0.c2, v0.c1, rt0.c1, vt1.c0;
SELECT ALL v0.c2, vt0.c0, rt0.c2, v0.c1, rt0.c1, vt1.c0 FROM rt0, v0, vt1 FULL OUTER JOIN vt0 ON (((- (vt0.c0))) NOT NULL) GROUP BY v0.c2, vt0.c0, rt0.c2, v0.c1, rt0.c1, vt1.c0 HAVING CASE WHEN (((vt0.c0, AVG(vt0.c0), 0.37541870261795707)) BETWEEN ((vt0.c0, vt1.c0, NULL)) AND ((vt1.c0, vt0.c0, rt0.c0))) THEN SUM(TOTAL(v0.c1)) END UNION ALL SELECT ALL v0.c2, vt0.c0, rt0.c2, v0.c1, rt0.c1, vt1.c0 FROM rt0, v0, vt1 FULL OUTER JOIN vt0 ON (((- (vt0.c0))) NOT NULL) GROUP BY v0.c2, vt0.c0, rt0.c2, v0.c1, rt0.c1, vt1.c0 HAVING (NOT (CASE WHEN (((vt0.c0, AVG(vt0.c0), 0.37541870261795707)) BETWEEN ((vt0.c0, vt1.c0, NULL)) AND ((vt1.c0, vt0.c0, rt0.c0))) THEN SUM(TOTAL(v0.c1)) END)) UNION ALL SELECT ALL v0.c2, vt0.c0, rt0.c2, v0.c1, rt0.c1, vt1.c0 FROM rt0, v0, vt1 FULL OUTER JOIN vt0 ON (((- (vt0.c0))) NOT NULL) GROUP BY v0.c2, vt0.c0, rt0.c2, v0.c1, rt0.c1, vt1.c0 HAVING ((CASE WHEN (((vt0.c0, AVG(vt0.c0), 0.37541870261795707)) BETWEEN ((vt0.c0, vt1.c0, NULL)) AND ((vt1.c0, vt0.c0, rt0.c0))) THEN SUM(TOTAL(v0.c1)) END) ISNULL);
SELECT v0.c0 FROM vt1 RIGHT OUTER JOIN v0 ON CAST(v0.c1 AS TEXT) COLLATE RTRIM LEFT OUTER JOIN vt0 ON ((((v0.c0)) NOT BETWEEN ((v0.c1)) AND ((v0.c0))) IN ());
SELECT ALL v0.c0 FROM vt1 RIGHT OUTER JOIN v0 ON CAST(v0.c1 AS TEXT) COLLATE RTRIM LEFT OUTER JOIN vt0 ON ((((v0.c0)) NOT BETWEEN ((v0.c1)) AND ((v0.c0))) IN ()) WHERE (NULL) UNION ALL SELECT ALL v0.c0 FROM vt1 RIGHT OUTER JOIN v0 ON CAST(v0.c1 AS TEXT) COLLATE RTRIM LEFT OUTER JOIN vt0 ON ((((v0.c0)) NOT BETWEEN ((v0.c1)) AND ((v0.c0))) IN ()) WHERE ((NOT (NULL))) UNION ALL SELECT v0.c0 FROM vt1 RIGHT OUTER JOIN v0 ON CAST(v0.c1 AS TEXT) COLLATE RTRIM LEFT OUTER JOIN vt0 ON ((((v0.c0)) NOT BETWEEN ((v0.c1)) AND ((v0.c0))) IN ()) WHERE (((NULL) ISNULL));
SELECT v0.c0 FROM vt1 RIGHT OUTER JOIN v0 ON CAST(v0.c1 AS TEXT) COLLATE RTRIM LEFT OUTER JOIN vt0 ON ((((v0.c0)) NOT BETWEEN ((v0.c1)) AND ((v0.c0))) IN ());
SELECT DISTINCT * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1 WHERE (CAST(((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) AS NUMERIC)) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((NOT (CAST(((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) AS NUMERIC)))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE (((CAST(((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM rt0, vt1;
SELECT rt0.c2, v0.c2, v0.c1, rt0.c1, v0.c0 FROM v0 NATURAL JOIN rt0 GROUP BY rt0.c2, v0.c2, v0.c1, rt0.c1, v0.c0;
SELECT ALL rt0.c2, v0.c2, v0.c1, rt0.c1, v0.c0 FROM v0 NATURAL JOIN rt0 WHERE (TRIM(DISTINCT ((((v0.c1)OR(v0.c1)))OR(rt0.c1)), ((rt0.c2) NOT BETWEEN (v0.c2) AND (rt0.c0)))) GROUP BY rt0.c2, v0.c2, v0.c1, rt0.c1, v0.c0 UNION SELECT ALL rt0.c2, v0.c2, v0.c1, rt0.c1, v0.c0 FROM v0 NOT INDEXED NATURAL JOIN rt0 WHERE ((NOT (TRIM(DISTINCT ((((v0.c1)OR(v0.c1)))OR(rt0.c1)), ((rt0.c2) NOT BETWEEN (v0.c2) AND (rt0.c0)))))) GROUP BY rt0.c2, v0.c2, v0.c1, rt0.c1, v0.c0 UNION SELECT rt0.c2, v0.c2, v0.c1, rt0.c1, v0.c0 FROM v0 NATURAL JOIN rt0 WHERE (((TRIM(DISTINCT ((((v0.c1)OR(v0.c1)))OR(rt0.c1)), ((rt0.c2) NOT BETWEEN (v0.c2) AND (rt0.c0)))) ISNULL)) GROUP BY rt0.c2, v0.c2, v0.c1, rt0.c1, v0.c0;
SELECT rt0.c2, v0.c2, v0.c1, rt0.c1, v0.c0 FROM v0 NATURAL JOIN rt0 GROUP BY rt0.c2, v0.c2, v0.c1, rt0.c1, v0.c0;
SELECT rt0.c2, v0.c2, vt1.c0, v0.c0, v0.c1 FROM vt1, rt0, v0 GROUP BY rt0.c2, v0.c2, vt1.c0, v0.c0, v0.c1;
SELECT rt0.c2, v0.c2, vt1.c0, v0.c0, v0.c1 FROM vt1, rt0, v0 GROUP BY rt0.c2, v0.c2, vt1.c0, v0.c0, v0.c1 HAVING NULL UNION ALL SELECT ALL rt0.c2, v0.c2, vt1.c0, v0.c0, v0.c1 FROM vt1, rt0, v0 GROUP BY rt0.c2, v0.c2, vt1.c0, v0.c0, v0.c1 HAVING (NOT (NULL)) UNION ALL SELECT rt0.c2, v0.c2, vt1.c0, v0.c0, v0.c1 FROM vt1, rt0, v0 GROUP BY rt0.c2, v0.c2, vt1.c0, v0.c0, v0.c1 HAVING ((NULL) ISNULL);
SELECT rt0.c2, v0.c2, vt1.c0, v0.c0, v0.c1 FROM vt1, rt0, v0 GROUP BY rt0.c2, v0.c2, vt1.c0, v0.c0, v0.c1;
SELECT rt0.c2, v0.c2, vt1.c0, v0.c0, v0.c1 FROM vt1, rt0, v0 GROUP BY rt0.c2, v0.c2, vt1.c0, v0.c0, v0.c1 HAVING NULL UNION ALL SELECT ALL rt0.c2, v0.c2, vt1.c0, v0.c0, v0.c1 FROM vt1, rt0, v0 GROUP BY rt0.c2, v0.c2, vt1.c0, v0.c0, v0.c1 HAVING (NOT (NULL)) UNION ALL SELECT rt0.c2, v0.c2, vt1.c0, v0.c0, v0.c1 FROM vt1, rt0, v0 GROUP BY rt0.c2, v0.c2, vt1.c0, v0.c0, v0.c1 HAVING ((NULL) ISNULL);
SELECT rt0.c2, v0.c2, vt1.c0, v0.c0, v0.c1 FROM vt1, rt0, v0 GROUP BY rt0.c2, v0.c2, vt1.c0, v0.c0, v0.c1;
SELECT ALL MAX((((vt0.c0) NOTNULL) IN (CAST(vt0.c0 AS TEXT), ((((((((vt0.c0)AND(vt0.c0)))OR(NULL)))AND(vt0.c0)))AND(vt0.c0))))) FROM vt0;
SELECT ALL * FROM rt0 INNER JOIN v0 ON ((((((((((rt0.c1) IS TRUE))AND(((v0.c0) NOTNULL))))OR(((vt1.c0) NOTNULL))))OR(HEX(vt1.c0))))OR(CASE v0.c2  WHEN rt0.c0 THEN v0.c1 WHEN vt1.c0 THEN rt0.c1 WHEN vt1.c0 THEN v0.c1 ELSE v0.c0 END)) RIGHT OUTER JOIN vt1 ON CASE CHAR(rt0.c2)  WHEN ((vt1.c0) NOT BETWEEN (0.1598356999123649) AND (v0.c1)) THEN rt0.c1 END;
SELECT DISTINCT v0.c1, v0.c0 FROM v0;
SELECT DISTINCT v0.c1, v0.c0 FROM v0 WHERE (((((((-1207574996)AND(v0.c0)))OR(v0.c0)))<=(((v0.c1)=(v0.c0))))) UNION SELECT DISTINCT v0.c1, v0.c0 FROM v0 WHERE ((NOT (((((((-1207574996)AND(v0.c0)))OR(v0.c0)))<=(((v0.c1)==(v0.c0))))))) UNION SELECT DISTINCT v0.c1, v0.c0 FROM v0 WHERE (((((((((-1207574996)AND(v0.c0)))OR(v0.c0)))<=(((v0.c1)=(v0.c0))))) ISNULL));
SELECT DISTINCT v0.c1, v0.c0 FROM v0;
SELECT ALL rt0.c2, vt1.c0, rt0.c0, vt0.c0, rt0.c1 FROM rt0, vt1, vt0 GROUP BY rt0.c2, vt1.c0, rt0.c0, vt0.c0, rt0.c1;
SELECT rt0.c2, vt1.c0, rt0.c0, vt0.c0, rt0.c1 FROM rt0, vt1, vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c0 END) BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (((((rt0.c0)OR('')))AND(rt0.c2))))) GROUP BY rt0.c2, vt1.c0, rt0.c0, vt0.c0, rt0.c1 UNION SELECT rt0.c2, vt1.c0, rt0.c0, vt0.c0, rt0.c1 FROM rt0, vt1, vt0 WHERE ((NOT (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c0 END) BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (((((rt0.c0)OR('')))AND(rt0.c2))))))) GROUP BY rt0.c2, vt1.c0, rt0.c0, vt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, vt1.c0, rt0.c0, vt0.c0, rt0.c1 FROM rt0, vt1, vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c0 END) BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (((((rt0.c0)OR('')))AND(rt0.c2))))) ISNULL)) GROUP BY rt0.c2, vt1.c0, rt0.c0, vt0.c0, rt0.c1;
SELECT ALL rt0.c2, vt1.c0, rt0.c0, vt0.c0, rt0.c1 FROM rt0, vt1, vt0 GROUP BY rt0.c2, vt1.c0, rt0.c0, vt0.c0, rt0.c1;
SELECT ALL vt0.c0 FROM v0, rt0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, rt0, vt0 GROUP BY vt0.c0 HAVING '-1903563751' COLLATE BINARY UNION ALL SELECT ALL vt0.c0 FROM v0, rt0, vt0 GROUP BY vt0.c0 HAVING (NOT ('-1903563751' COLLATE BINARY)) UNION ALL SELECT ALL vt0.c0 FROM v0, rt0, vt0 GROUP BY vt0.c0 HAVING (('-1903563751' COLLATE BINARY) ISNULL);
SELECT ALL vt0.c0 FROM v0, rt0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, rt0, vt0 GROUP BY vt0.c0 HAVING '-1903563751' COLLATE BINARY UNION ALL SELECT ALL vt0.c0 FROM v0, rt0, vt0 GROUP BY vt0.c0 HAVING (NOT ('-1903563751' COLLATE BINARY)) UNION ALL SELECT ALL vt0.c0 FROM v0, rt0, vt0 GROUP BY vt0.c0 HAVING (('-1903563751' COLLATE BINARY) ISNULL);
SELECT ALL vt0.c0 FROM v0, rt0, vt0 GROUP BY vt0.c0;
SELECT ALL * FROM vt1, rt0 INNER JOIN v0 ON ((((TRIM(x''))AND(0xffffffffbc4774a3)))OR(rt0.c0 COLLATE RTRIM)) CROSS JOIN vt0 ON v0.c1;
SELECT ALL * FROM vt1, rt0 INNER JOIN v0 ON ((((TRIM(x''))AND(0Xffffffffbc4774a3)))OR(rt0.c0 COLLATE RTRIM)) CROSS JOIN vt0 ON v0.c1 WHERE (((((v0.c0) IS TRUE))AND((((v0.c0))>=((rt0.c0)))))) UNION ALL SELECT ALL * FROM vt1, rt0 INNER JOIN v0 ON ((((TRIM(x''))AND(0xffffffffbc4774a3)))OR(rt0.c0 COLLATE RTRIM)) CROSS JOIN vt0 ON v0.c1 WHERE ((NOT (((((v0.c0) IS TRUE))AND((((v0.c0))>=((rt0.c0)))))))) UNION ALL SELECT ALL * FROM vt1, rt0 INNER JOIN v0 ON ((((TRIM(x''))AND(0Xffffffffbc4774a3)))OR(rt0.c0 COLLATE RTRIM)) CROSS JOIN vt0 ON v0.c1 WHERE (((((((v0.c0) IS TRUE))AND((((v0.c0))>=((rt0.c0)))))) ISNULL));
SELECT ALL * FROM vt1, rt0 INNER JOIN v0 ON ((((TRIM(x''))AND(0xffffffffbc4774a3)))OR(rt0.c0 COLLATE RTRIM)) CROSS JOIN vt0 ON v0.c1;
SELECT DISTINCT rt0.c0, v0.c0 FROM v0, vt1, rt0;
SELECT DISTINCT rt0.c0, v0.c0 FROM v0, vt1, rt0 WHERE (CAST(((((((((v0.c0)AND(v0.c2)))AND(v0.c0)))OR(rt0.c0)))AND(v0.c0)) AS TEXT)) UNION SELECT DISTINCT rt0.c0, v0.c0 FROM v0, vt1, rt0 WHERE ((NOT (CAST(((((((((v0.c0)AND(v0.c2)))AND(v0.c0)))OR(rt0.c0)))AND(v0.c0)) AS TEXT)))) UNION SELECT DISTINCT rt0.c0, v0.c0 FROM v0, vt1, rt0 WHERE (((CAST(((((((((v0.c0)AND(v0.c2)))AND(v0.c0)))OR(rt0.c0)))AND(v0.c0)) AS TEXT)) ISNULL));
SELECT DISTINCT rt0.c0, v0.c0 FROM v0, vt1, rt0;
SELECT ALL v0.c1, v0.c0, rt0.c1, vt0.c0 FROM vt1, vt0, rt0, v0 GROUP BY v0.c1, v0.c0, rt0.c1, vt0.c0;
SELECT ALL v0.c1, v0.c0, rt0.c1, vt0.c0 FROM vt1, vt0, rt0, v0 WHERE ((((((rt0.c1)AND(v0.c1)))AND(0xffffffff862e080b)) IN (v0.c1 COLLATE RTRIM, CAST(rt0.c0 AS NUMERIC)))) GROUP BY v0.c1, v0.c0, rt0.c1, vt0.c0 UNION SELECT ALL v0.c1, v0.c0, rt0.c1, vt0.c0 FROM vt1, vt0, rt0, v0 WHERE ((NOT ((((((rt0.c1)AND(v0.c1)))AND(0xffffffff862e080b)) IN (v0.c1 COLLATE RTRIM, CAST(rt0.c0 AS NUMERIC)))))) GROUP BY v0.c1, v0.c0, rt0.c1, vt0.c0 UNION SELECT ALL v0.c1, v0.c0, rt0.c1, vt0.c0 FROM vt1, vt0, rt0, v0 WHERE ((((((((rt0.c1)AND(v0.c1)))AND(0xffffffff862e080b)) IN (v0.c1 COLLATE RTRIM, CAST(rt0.c0 AS NUMERIC)))) ISNULL)) GROUP BY v0.c1, v0.c0, rt0.c1, vt0.c0;
SELECT ALL v0.c1, v0.c0, rt0.c1, vt0.c0 FROM vt1, vt0, rt0, v0 GROUP BY v0.c1, v0.c0, rt0.c1, vt0.c0;
SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1;
SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1 HAVING SUM(MAX(COUNT(*))) UNION ALL SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1 HAVING (NOT (SUM(MAX(COUNT(*))))) UNION ALL SELECT v0.c1 FROM v0 GROUP BY v0.c1 HAVING ((SUM(MAX(COUNT(*)))) ISNULL);
SELECT * FROM vt1, rt0, v0, vt0;
SELECT ALL * FROM vt1, rt0, v0, vt0 WHERE (CAST((rt0.c2 IN ()) AS TEXT)) UNION ALL SELECT ALL * FROM vt1, rt0, v0, vt0 WHERE ((NOT (CAST((rt0.c2 IN ()) AS TEXT)))) UNION ALL SELECT * FROM vt1, rt0, v0, vt0 WHERE (((CAST((rt0.c2 IN ()) AS TEXT)) ISNULL));
SELECT * FROM vt1, rt0, v0, vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (0.8898139993440334)))AND(vt0.c0)))OR((vt0.c0 IN ())))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((((vt0.c0) BETWEEN (vt0.c0) AND (0.8898139993440334)))AND(vt0.c0)))OR((vt0.c0 IN ())))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((((vt0.c0) BETWEEN (vt0.c0) AND (0.8898139993440334)))AND(vt0.c0)))OR((vt0.c0 IN ())))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT v0.c0, vt0.c0, v0.c1, v0.c2 FROM v0 FULL OUTER JOIN vt0 ON ((LOWER(DISTINCT '608864184')) BETWEEN (x'') AND (((v0.c2)<(v0.c1)))) GROUP BY v0.c0, vt0.c0, v0.c1, v0.c2;
SELECT v0.c0, vt0.c0, v0.c1, v0.c2 FROM v0 FULL OUTER JOIN vt0 ON ((LOWER(DISTINCT '608864184')) BETWEEN (x'') AND (((v0.c2)<(v0.c1)))) WHERE ((~ (v0.c1))) GROUP BY v0.c0, vt0.c0, v0.c1, v0.c2 UNION SELECT ALL v0.c0, vt0.c0, v0.c1, v0.c2 FROM v0 FULL OUTER JOIN vt0 ON ((LOWER(DISTINCT '608864184')) BETWEEN (x'') AND (((v0.c2)<(v0.c1)))) WHERE ((NOT ((~ (v0.c1))))) GROUP BY v0.c0, vt0.c0, v0.c1, v0.c2 UNION SELECT ALL v0.c0, vt0.c0, v0.c1, v0.c2 FROM v0 FULL OUTER JOIN vt0 ON ((LOWER(DISTINCT '608864184')) BETWEEN (x'') AND (((v0.c2)<(v0.c1)))) WHERE ((((~ (v0.c1))) ISNULL)) GROUP BY v0.c0, vt0.c0, v0.c1, v0.c2;
SELECT v0.c0, vt0.c0, v0.c1, v0.c2 FROM v0 FULL OUTER JOIN vt0 ON ((LOWER(DISTINCT '608864184')) BETWEEN (x'') AND (((v0.c2)<(v0.c1)))) GROUP BY v0.c0, vt0.c0, v0.c1, v0.c2;
SELECT v0.c1, rt0.c2, vt1.c0, v0.c2, vt0.c0, rt0.c1, rt0.c0, v0.c0 FROM vt0, rt0, v0, vt1 GROUP BY v0.c1, rt0.c2, vt1.c0, v0.c2, vt0.c0, rt0.c1, rt0.c0, v0.c0;
SELECT v0.c1, rt0.c2, vt1.c0, v0.c2, vt0.c0, rt0.c1, rt0.c0, v0.c0 FROM vt0, rt0, v0, vt1 GROUP BY v0.c1, rt0.c2, vt1.c0, v0.c2, vt0.c0, rt0.c1, rt0.c0, v0.c0 HAVING MAX(MAX(rt0.c2)) UNION ALL SELECT ALL v0.c1, rt0.c2, vt1.c0, v0.c2, vt0.c0, rt0.c1, rt0.c0, v0.c0 FROM vt0, rt0, v0, vt1 GROUP BY v0.c1, rt0.c2, vt1.c0, v0.c2, vt0.c0, rt0.c1, rt0.c0, v0.c0 HAVING (NOT (MAX(MAX(rt0.c2)))) UNION ALL SELECT ALL v0.c1, rt0.c2, vt1.c0, v0.c2, vt0.c0, rt0.c1, rt0.c0, v0.c0 FROM vt0, rt0, v0, vt1 GROUP BY v0.c1, rt0.c2, vt1.c0, v0.c2, vt0.c0, rt0.c1, rt0.c0, v0.c0 HAVING ((MAX(MAX(rt0.c2))) ISNULL);
SELECT * FROM v0 CROSS JOIN vt0 ON ((HEX(v0.c0)) ISNULL);
SELECT ALL * FROM v0 CROSS JOIN vt0 ON ((HEX(v0.c0)) ISNULL) WHERE (CASE (((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c1)))  WHEN ((v0.c2)*(v0.c0)) THEN v0.c2 COLLATE BINARY END) UNION ALL SELECT * FROM v0 CROSS JOIN vt0 ON ((HEX(v0.c0)) ISNULL) WHERE ((NOT (CASE (((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c1)))  WHEN ((v0.c2)*(v0.c0)) THEN v0.c2 COLLATE BINARY END))) UNION ALL SELECT * FROM v0 CROSS JOIN vt0 ON ((HEX(v0.c0)) ISNULL) WHERE (((CASE (((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c1)))  WHEN ((v0.c2)*(v0.c0)) THEN v0.c2 COLLATE BINARY END) ISNULL));
SELECT * FROM v0 CROSS JOIN vt0 ON ((HEX(v0.c0)) ISNULL);
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c1) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT v0.c0, rt0.c0, rt0.c1, rt0.c2, v0.c1, v0.c2 FROM v0, rt0 GROUP BY v0.c0, rt0.c0, rt0.c1, rt0.c2, v0.c1, v0.c2;
SELECT v0.c0, rt0.c0, rt0.c1, rt0.c2, v0.c1, v0.c2 FROM v0, rt0 WHERE (((rt0.c1) NOT BETWEEN ((((rt0.c2, rt0.c1, x'')) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((rt0.c0, v0.c0, v0.c1)))) AND (CAST(rt0.c0 AS TEXT)))) GROUP BY v0.c0, rt0.c0, rt0.c1, rt0.c2, v0.c1, v0.c2 UNION SELECT ALL v0.c0, rt0.c0, rt0.c1, rt0.c2, v0.c1, v0.c2 FROM v0, rt0 WHERE ((NOT (((rt0.c1) NOT BETWEEN ((((rt0.c2, rt0.c1, x'')) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((rt0.c0, v0.c0, v0.c1)))) AND (CAST(rt0.c0 AS TEXT)))))) GROUP BY v0.c0, rt0.c0, rt0.c1, rt0.c2, v0.c1, v0.c2 UNION SELECT ALL v0.c0, rt0.c0, rt0.c1, rt0.c2, v0.c1, v0.c2 FROM v0, rt0 WHERE (((((rt0.c1) NOT BETWEEN ((((rt0.c2, rt0.c1, x'')) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((rt0.c0, v0.c0, v0.c1)))) AND (CAST(rt0.c0 AS TEXT)))) ISNULL)) GROUP BY v0.c0, rt0.c0, rt0.c1, rt0.c2, v0.c1, v0.c2;
SELECT v0.c0, rt0.c0, rt0.c1, rt0.c2, v0.c1, v0.c2 FROM v0, rt0 GROUP BY v0.c0, rt0.c0, rt0.c1, rt0.c2, v0.c1, v0.c2;
SELECT ALL rt0.c1, rt0.c0, vt1.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c0, vt1.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, vt1.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c0, vt1.c0, rt0.c2 HAVING CASE WHEN COUNT(rt0.c1) THEN rt0.c0 COLLATE NOCASE END UNION ALL SELECT rt0.c1, rt0.c0, vt1.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c0, vt1.c0, rt0.c2 HAVING (NOT (CASE WHEN COUNT(rt0.c1) THEN rt0.c0 COLLATE NOCASE END)) UNION ALL SELECT rt0.c1, rt0.c0, vt1.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c0, vt1.c0, rt0.c2 HAVING ((CASE WHEN COUNT(rt0.c1) THEN rt0.c0 COLLATE NOCASE END) ISNULL);
SELECT ALL rt0.c1, rt0.c0, vt1.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c0, vt1.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, vt1.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c0, vt1.c0, rt0.c2 HAVING CASE WHEN COUNT(rt0.c1) THEN rt0.c0 COLLATE NOCASE END UNION ALL SELECT rt0.c1, rt0.c0, vt1.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c0, vt1.c0, rt0.c2 HAVING (NOT (CASE WHEN COUNT(rt0.c1) THEN rt0.c0 COLLATE NOCASE END)) UNION ALL SELECT rt0.c1, rt0.c0, vt1.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c0, vt1.c0, rt0.c2 HAVING ((CASE WHEN COUNT(rt0.c1) THEN rt0.c0 COLLATE NOCASE END) ISNULL);
SELECT ALL rt0.c1, rt0.c0, vt1.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c0, vt1.c0, rt0.c2;
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((((((vt0.c0)AND('-1417810227')))AND(0.6611474983412996)))AND((~ (vt0.c0)))))OR(CAST(vt0.c0 AS NUMERIC)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((((((vt0.c0)AND('-1417810227')))AND(0.6611474983412996)))AND((~ (vt0.c0)))))OR(CAST(vt0.c0 AS NUMERIC)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((((((((((vt0.c0)AND('-1417810227')))AND(0.6611474983412996)))AND((~ (vt0.c0)))))OR(CAST(vt0.c0 AS NUMERIC)))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(rt0.c1 COLLATE NOCASE)))AND((vt0.c0 IN ())))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(rt0.c1 COLLATE NOCASE)))AND((vt0.c0 IN ())))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(rt0.c1 COLLATE NOCASE)))AND((vt0.c0 IN ())))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT vt0.c0, rt0.c0, v0.c0, rt0.c2 FROM vt0, v0 NOT INDEXED, rt0, vt1 GROUP BY vt0.c0, rt0.c0, v0.c0, rt0.c2;
SELECT vt0.c0, rt0.c0, v0.c0, rt0.c2 FROM vt0, v0, rt0, vt1 WHERE ((NOT (CASE WHEN rt0.c0 THEN 'X|^S' ELSE rt0.c1 END))) GROUP BY vt0.c0, rt0.c0, v0.c0, rt0.c2 UNION SELECT ALL vt0.c0, rt0.c0, v0.c0, rt0.c2 FROM vt0, v0, rt0, vt1 WHERE ((NOT ((NOT (CASE WHEN rt0.c0 THEN 'X|^S' ELSE rt0.c1 END))))) GROUP BY vt0.c0, rt0.c0, v0.c0, rt0.c2 UNION SELECT vt0.c0, rt0.c0, v0.c0, rt0.c2 FROM vt0 NOT INDEXED, v0, rt0, vt1 WHERE ((((NOT (CASE WHEN rt0.c0 THEN 'X|^S' ELSE rt0.c1 END))) ISNULL)) GROUP BY vt0.c0, rt0.c0, v0.c0, rt0.c2;
SELECT vt0.c0, rt0.c0, v0.c0, rt0.c2 FROM vt0, v0 NOT INDEXED, rt0, vt1 GROUP BY vt0.c0, rt0.c0, v0.c0, rt0.c2;
SELECT rt0.c0, vt1.c0, rt0.c1, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, vt1.c0, rt0.c1, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0, rt0.c1, rt0.c2 HAVING x'' UNION ALL SELECT rt0.c0, vt1.c0, rt0.c1, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0, rt0.c1, rt0.c2 HAVING (NOT (x'')) UNION ALL SELECT rt0.c0, vt1.c0, rt0.c1, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0, rt0.c1, rt0.c2 HAVING ((x'') ISNULL);
SELECT rt0.c0, vt1.c0, rt0.c1, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, vt1.c0, rt0.c1, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0, rt0.c1, rt0.c2 HAVING x'' UNION ALL SELECT rt0.c0, vt1.c0, rt0.c1, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0, rt0.c1, rt0.c2 HAVING (NOT (x'')) UNION ALL SELECT rt0.c0, vt1.c0, rt0.c1, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0, rt0.c1, rt0.c2 HAVING ((x'') ISNULL);
SELECT rt0.c0, vt1.c0, rt0.c1, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0, rt0.c1, rt0.c2;
SELECT v0.c0, rt0.c0, rt0.c1, v0.c1 FROM v0, rt0 FULL OUTER JOIN vt1 ON ((((v0.c2)&('GbJx(駈'))) IS TRUE);
SELECT v0.c0, rt0.c0, rt0.c1, v0.c1 FROM v0, rt0 FULL OUTER JOIN vt1 ON ((((v0.c2)&('GbJx(駈'))) IS TRUE) WHERE ((0.9046458649629864 IN ())) ORDER BY ((((UPPER(DISTINCT rt0.c0))OR(((v0.c0)||(v0.c2)))))AND(((vt1.c0)<<(x'')))) ASC;
SELECT ALL v0.c0, rt0.c0, rt0.c1, v0.c1 FROM v0, rt0 FULL OUTER JOIN vt1 ON ((((v0.c2)&('GbJx(駈'))) IS TRUE) WHERE ((NOT ((0.9046458649629864 IN ())))) ORDER BY ((((UPPER(DISTINCT rt0.c0))OR(((v0.c0)||(v0.c2)))))AND(((vt1.c0)<<(x'')))) ASC;
SELECT ALL v0.c0, rt0.c0, rt0.c1, v0.c1 FROM v0, rt0 FULL OUTER JOIN vt1 ON ((((v0.c2)&('GbJx(駈'))) IS TRUE) WHERE ((((0.9046458649629864 IN ())) ISNULL)) ORDER BY ((((UPPER(DISTINCT rt0.c0))OR(((v0.c0)||(v0.c2)))))AND(((vt1.c0)<<(x'')))) ASC;
SELECT v0.c0, rt0.c0, rt0.c1, v0.c1 FROM v0, rt0 FULL OUTER JOIN vt1 ON ((((v0.c2)&('GbJx(駈'))) IS TRUE);
SELECT DISTINCT * FROM v0, vt1, rt0;
SELECT DISTINCT * FROM v0, vt1, rt0 WHERE ((((v0.c0 IN (rt0.c1, rt0.c0)))&(((NULL)&(vt1.c0))))) UNION SELECT DISTINCT * FROM v0, vt1, rt0 WHERE ((NOT ((((v0.c0 IN (rt0.c1, rt0.c0)))&(((NULL)&(vt1.c0))))))) UNION SELECT DISTINCT * FROM v0, vt1, rt0 WHERE ((((((v0.c0 IN (rt0.c1, rt0.c0)))&(((NULL)&(vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM v0, vt1, rt0;
SELECT ALL v0.c1 FROM vt1, v0 GROUP BY v0.c1;
SELECT ALL v0.c1 FROM vt1, v0 WHERE (((vt1.c0 COLLATE BINARY)OR(TYPEOF(v0.c0)))) GROUP BY v0.c1 UNION SELECT v0.c1 FROM vt1, v0 WHERE ((NOT (((vt1.c0 COLLATE BINARY)OR(TYPEOF(v0.c0)))))) GROUP BY v0.c1 UNION SELECT v0.c1 FROM vt1, v0 WHERE (((((vt1.c0 COLLATE BINARY)OR(TYPEOF(v0.c0)))) ISNULL)) GROUP BY v0.c1;
SELECT ALL v0.c1 FROM vt1, v0 GROUP BY v0.c1;
SELECT ALL rt0.c2 FROM vt1, vt0, rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt1, vt0, rt0 GROUP BY rt0.c2 HAVING AVG(('-1460327301' IN ())) UNION ALL SELECT ALL rt0.c2 FROM vt1, vt0, rt0 GROUP BY rt0.c2 HAVING (NOT (AVG(('-1460327301' IN ())))) UNION ALL SELECT ALL rt0.c2 FROM vt1, vt0, rt0 GROUP BY rt0.c2 HAVING ((AVG(('-1460327301' IN ()))) ISNULL);
SELECT ALL rt0.c2 FROM vt1, vt0, rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt1, vt0, rt0 GROUP BY rt0.c2 HAVING AVG(('-1460327301' IN ())) UNION ALL SELECT ALL rt0.c2 FROM vt1, vt0, rt0 GROUP BY rt0.c2 HAVING (NOT (AVG(('-1460327301' IN ())))) UNION ALL SELECT ALL rt0.c2 FROM vt1, vt0, rt0 GROUP BY rt0.c2 HAVING ((AVG(('-1460327301' IN ()))) ISNULL);
SELECT ALL rt0.c2 FROM vt1, vt0, rt0 GROUP BY rt0.c2;
SELECT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (((vt1.c0)<(vt1.c0)) COLLATE NOCASE) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0)<(vt1.c0)) COLLATE NOCASE))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((((vt1.c0)<(vt1.c0)) COLLATE NOCASE) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT vt0.c0, v0.c1, v0.c2, v0.c0 FROM v0, rt0, vt0;
SELECT DISTINCT vt0.c0, v0.c1, v0.c2, v0.c0 FROM v0, rt0, vt0 WHERE (CAST(rt0.c1 COLLATE RTRIM AS TEXT)) UNION SELECT DISTINCT vt0.c0, v0.c1, v0.c2, v0.c0 FROM v0, rt0, vt0 WHERE ((NOT (CAST(rt0.c1 COLLATE RTRIM AS TEXT)))) UNION SELECT DISTINCT vt0.c0, v0.c1, v0.c2, v0.c0 FROM v0, rt0, vt0 WHERE (((CAST(rt0.c1 COLLATE RTRIM AS TEXT)) ISNULL));
SELECT DISTINCT vt0.c0, v0.c1, v0.c2, v0.c0 FROM v0, rt0, vt0;
SELECT vt1.c0, v0.c1, rt0.c1, rt0.c2, rt0.c0, v0.c0, v0.c2 FROM rt0, v0 FULL OUTER JOIN vt1 ON CASE vt1.c0 COLLATE BINARY  WHEN TRIM(rt0.c2) THEN ((v0.c1) BETWEEN (v0.c1) AND (v0.c2)) END GROUP BY vt1.c0, v0.c1, rt0.c1, rt0.c2, rt0.c0, v0.c0, v0.c2;
SELECT ALL vt1.c0, v0.c1, rt0.c1, rt0.c2, rt0.c0, v0.c0, v0.c2 FROM rt0, v0 FULL OUTER JOIN vt1 ON CASE vt1.c0 COLLATE BINARY  WHEN TRIM(rt0.c2) THEN ((v0.c1) BETWEEN (v0.c1) AND (v0.c2)) END WHERE (((((((((NULL)OR('R⎼.Z~+Cu')))AND(CASE WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c0 WHEN '0.5029630430741533' THEN x'' WHEN v0.c0 THEN v0.c0 WHEN x'' THEN vt1.c0 ELSE v0.c2 END)))OR(CASE v0.c2  WHEN vt1.c0 THEN v0.c1 WHEN v0.c1 THEN vt1.c0 WHEN vt1.c0 THEN v0.c1 ELSE rt0.c1 END)))AND(CAST(v0.c1 AS INTEGER)))) GROUP BY vt1.c0, v0.c1, rt0.c1, rt0.c2, rt0.c0, v0.c0, v0.c2 UNION SELECT ALL vt1.c0, v0.c1, rt0.c1, rt0.c2, rt0.c0, v0.c0, v0.c2 FROM rt0, v0 FULL OUTER JOIN vt1 ON CASE vt1.c0 COLLATE BINARY  WHEN TRIM(rt0.c2) THEN ((v0.c1) BETWEEN (v0.c1) AND (v0.c2)) END WHERE ((NOT (((((((((NULL)OR('R⎼.Z~+Cu')))AND(CASE WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c0 WHEN '0.5029630430741533' THEN x'' WHEN v0.c0 THEN v0.c0 WHEN x'' THEN vt1.c0 ELSE v0.c2 END)))OR(CASE v0.c2  WHEN vt1.c0 THEN v0.c1 WHEN v0.c1 THEN vt1.c0 WHEN vt1.c0 THEN v0.c1 ELSE rt0.c1 END)))AND(CAST(v0.c1 AS INTEGER)))))) GROUP BY vt1.c0, v0.c1, rt0.c1, rt0.c2, rt0.c0, v0.c0, v0.c2 UNION SELECT ALL vt1.c0, v0.c1, rt0.c1, rt0.c2, rt0.c0, v0.c0, v0.c2 FROM rt0, v0 FULL OUTER JOIN vt1 ON CASE vt1.c0 COLLATE BINARY  WHEN TRIM(rt0.c2) THEN ((v0.c1) BETWEEN (v0.c1) AND (v0.c2)) END WHERE (((((((((((NULL)OR('R⎼.Z~+Cu')))AND(CASE WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c0 WHEN '0.5029630430741533' THEN x'' WHEN v0.c0 THEN v0.c0 WHEN x'' THEN vt1.c0 ELSE v0.c2 END)))OR(CASE v0.c2  WHEN vt1.c0 THEN v0.c1 WHEN v0.c1 THEN vt1.c0 WHEN vt1.c0 THEN v0.c1 ELSE rt0.c1 END)))AND(CAST(v0.c1 AS INTEGER)))) ISNULL)) GROUP BY vt1.c0, v0.c1, rt0.c1, rt0.c2, rt0.c0, v0.c0, v0.c2;
SELECT vt1.c0, v0.c1, rt0.c1, rt0.c2, rt0.c0, v0.c0, v0.c2 FROM rt0, v0 FULL OUTER JOIN vt1 ON CASE vt1.c0 COLLATE BINARY  WHEN TRIM(rt0.c2) THEN ((v0.c1) BETWEEN (v0.c1) AND (v0.c2)) END GROUP BY vt1.c0, v0.c1, rt0.c1, rt0.c2, rt0.c0, v0.c0, v0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((rt0.c2) NOT BETWEEN (7.64215595E8) AND (((TOTAL(TOTAL(rt0.c1))) BETWEEN (MAX(6.47657958E8)) AND (rt0.c2)))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (((rt0.c2) NOT BETWEEN (7.64215595E8) AND (((TOTAL(TOTAL(rt0.c1))) BETWEEN (MAX(6.47657958E8)) AND (rt0.c2)))))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((((rt0.c2) NOT BETWEEN (7.64215595E8) AND (((TOTAL(TOTAL(rt0.c1))) BETWEEN (MAX(6.47657958E8)) AND (rt0.c2))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((CAST(rt0.c0 AS TEXT), ((rt0.c1) NOT NULL), ((((((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)))AND(NULL)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c2))))>=((((((((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)))AND(0.5318220326601503)))OR(rt0.c0)), rt0.c1, (rt0.c2 IN (rt0.c1)))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((CAST(rt0.c0 AS TEXT), ((rt0.c1) NOT NULL), ((((((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)))AND(NULL)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c2))))>=((((((((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)))AND(0.5318220326601503)))OR(rt0.c0)), rt0.c1, (rt0.c2 IN (rt0.c1)))))))) UNION ALL SELECT * FROM rt0 WHERE ((((((CAST(rt0.c0 AS TEXT), ((rt0.c1) NOT NULL), ((((((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)))AND(NULL)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c2))))>=((((((((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)))AND(0.5318220326601503)))OR(rt0.c0)), rt0.c1, (rt0.c2 IN (rt0.c1)))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM vt1, v0 FULL OUTER JOIN rt0 ON CASE WHEN x'c465' COLLATE NOCASE THEN ((v0.c1) BETWEEN (rt0.c1) AND (rt0.c2)) END;
SELECT DISTINCT rt0.c2, rt0.c0 FROM vt1, v0 FULL OUTER JOIN rt0 ON CASE WHEN x'c465' COLLATE NOCASE THEN ((v0.c1) BETWEEN (rt0.c1) AND (rt0.c2)) END WHERE (json_type(((v0.c2) BETWEEN (rt0.c0) AND (rt0.c0)))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM vt1, v0 FULL OUTER JOIN rt0 ON CASE WHEN x'c465' COLLATE NOCASE THEN ((v0.c1) BETWEEN (rt0.c1) AND (rt0.c2)) END WHERE ((NOT (json_type(((v0.c2) BETWEEN (rt0.c0) AND (rt0.c0)))))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM vt1, v0 FULL OUTER JOIN rt0 ON CASE WHEN x'c465' COLLATE NOCASE THEN ((v0.c1) BETWEEN (rt0.c1) AND (rt0.c2)) END WHERE (((json_type(((v0.c2) BETWEEN (rt0.c0) AND (rt0.c0)))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0 FROM vt1, v0 FULL OUTER JOIN rt0 ON CASE WHEN x'c465' COLLATE NOCASE THEN ((v0.c1) BETWEEN (rt0.c1) AND (rt0.c2)) END;
SELECT rt0.c2, rt0.c0, vt1.c0 FROM rt0 INNER JOIN vt1 ON (((NOT (rt0.c2))) IS FALSE) RIGHT OUTER JOIN vt0 ON ((((NOT (rt0.c2)), ((vt1.c0)<(vt0.c0)), CAST(vt1.c0 AS INTEGER)))>=((vt0.c0 COLLATE NOCASE, (('1166893939')GLOB(rt0.c2)), CASE WHEN rt0.c1 THEN vt0.c0 WHEN -1.460327301E9 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE rt0.c0 END))) GROUP BY rt0.c2, rt0.c0, vt1.c0;
SELECT ALL rt0.c2, rt0.c0, vt1.c0 FROM rt0 INNER JOIN vt1 ON (((NOT (rt0.c2))) IS FALSE) RIGHT OUTER JOIN vt0 ON ((((NOT (rt0.c2)), ((vt1.c0)<(vt0.c0)), CAST(vt1.c0 AS INTEGER)))>=((vt0.c0 COLLATE NOCASE, (('1166893939')GLOB(rt0.c2)), CASE WHEN rt0.c1 THEN vt0.c0 WHEN -1.460327301E9 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE rt0.c0 END))) WHERE (((((((rt0.c1)>>(rt0.c2)))OR((((rt0.c0, rt0.c2, rt0.c2, vt1.c0, vt1.c0)) BETWEEN ((rt0.c2, vt1.c0, rt0.c0, rt0.c1, vt1.c0)) AND ((NULL, vt0.c0, vt1.c0, vt0.c0, vt1.c0))))))OR(CAST(vt0.c0 AS BLOB)))) GROUP BY rt0.c2, rt0.c0, vt1.c0 UNION SELECT ALL rt0.c2, rt0.c0, vt1.c0 FROM rt0 INNER JOIN vt1 ON (((NOT (rt0.c2))) IS FALSE) RIGHT OUTER JOIN vt0 ON ((((NOT (rt0.c2)), ((vt1.c0)<(vt0.c0)), CAST(vt1.c0 AS INTEGER)))>=((vt0.c0 COLLATE NOCASE, (('1166893939')GLOB(rt0.c2)), CASE WHEN rt0.c1 THEN vt0.c0 WHEN -1.460327301E9 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE rt0.c0 END))) WHERE ((NOT (((((((rt0.c1)>>(rt0.c2)))OR((((rt0.c0, rt0.c2, rt0.c2, vt1.c0, vt1.c0)) BETWEEN ((rt0.c2, vt1.c0, rt0.c0, rt0.c1, vt1.c0)) AND ((NULL, vt0.c0, vt1.c0, vt0.c0, vt1.c0))))))OR(CAST(vt0.c0 AS BLOB)))))) GROUP BY rt0.c2, rt0.c0, vt1.c0 UNION SELECT ALL rt0.c2, rt0.c0, vt1.c0 FROM rt0 INNER JOIN vt1 ON (((NOT (rt0.c2))) IS FALSE) RIGHT OUTER JOIN vt0 ON ((((NOT (rt0.c2)), ((vt1.c0)<(vt0.c0)), CAST(vt1.c0 AS INTEGER)))>=((vt0.c0 COLLATE NOCASE, (('1166893939')GLOB(rt0.c2)), CASE WHEN rt0.c1 THEN vt0.c0 WHEN -1.460327301E9 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE rt0.c0 END))) WHERE (((((((((rt0.c1)>>(rt0.c2)))OR((((rt0.c0, rt0.c2, rt0.c2, vt1.c0, vt1.c0)) BETWEEN ((rt0.c2, vt1.c0, rt0.c0, rt0.c1, vt1.c0)) AND ((NULL, vt0.c0, vt1.c0, vt0.c0, vt1.c0))))))OR(CAST(vt0.c0 AS BLOB)))) ISNULL)) GROUP BY rt0.c2, rt0.c0, vt1.c0;
SELECT rt0.c2, rt0.c0, vt1.c0 FROM rt0 INNER JOIN vt1 ON (((NOT (rt0.c2))) IS FALSE) RIGHT OUTER JOIN vt0 ON ((((NOT (rt0.c2)), ((vt1.c0)<(vt0.c0)), CAST(vt1.c0 AS INTEGER)))>=((vt0.c0 COLLATE NOCASE, (('1166893939')GLOB(rt0.c2)), CASE WHEN rt0.c1 THEN vt0.c0 WHEN -1.460327301E9 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE rt0.c0 END))) GROUP BY rt0.c2, rt0.c0, vt1.c0;
SELECT ALL vt1.c0, v0.c1, vt0.c0 FROM vt1, v0, vt0, rt0 GROUP BY vt1.c0, v0.c1, vt0.c0;
SELECT vt1.c0, v0.c1, vt0.c0 FROM vt1, v0, vt0, rt0 GROUP BY vt1.c0, v0.c1, vt0.c0 HAVING AVG(COUNT(vt0.c0)) UNION ALL SELECT vt1.c0, v0.c1, vt0.c0 FROM vt1, v0, vt0, rt0 GROUP BY vt1.c0, v0.c1, vt0.c0 HAVING (NOT (AVG(COUNT(vt0.c0)))) UNION ALL SELECT ALL vt1.c0, v0.c1, vt0.c0 FROM vt1, v0, vt0, rt0 GROUP BY vt1.c0, v0.c1, vt0.c0 HAVING ((AVG(COUNT(vt0.c0))) ISNULL);
SELECT ALL rt0.c2, rt0.c1, vt0.c0, v0.c1, rt0.c0, v0.c2, v0.c0, vt1.c0 FROM rt0, vt0 LEFT OUTER JOIN v0 ON CASE ((((rt0.c1)OR(rt0.c1)))AND(vt1.c0))  WHEN ((((v0.c2)OR(rt0.c2)))OR(vt1.c0)) THEN ((((x'')OR(v0.c1)))OR(rt0.c2)) WHEN (+ (v0.c2)) THEN '-1370747215' WHEN CASE WHEN '' THEN v0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN v0.c0 THEN vt0.c0 ELSE '0.14480007336835798' END THEN '-156589787' END LEFT OUTER JOIN vt1 ON v0.c0;
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN v0 ON ((((((((0.3765243958290029)OR((((v0.c2))>((rt0.c0))))))OR(GLOB(v0.c1, rt0.c2))))OR(CAST(rt0.c2 AS REAL))))OR((((rt0.c1, x'', NULL)) NOT BETWEEN ((v0.c0, v0.c1, rt0.c2)) AND ((v0.c2, v0.c1, v0.c0)))));
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN v0 ON ((((((((0.3765243958290029)OR((((v0.c2))>((rt0.c0))))))OR(GLOB(v0.c1, rt0.c2))))OR(CAST(rt0.c2 AS REAL))))OR((((rt0.c1, x'', NULL)) NOT BETWEEN ((v0.c0, v0.c1, rt0.c2)) AND ((v0.c2, v0.c1, v0.c0))))) WHERE (((0.4083894608447457 COLLATE RTRIM)&(((((rt0.c1)AND(rt0.c1)))AND(v0.c2))))) UNION SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN v0 ON ((((((((0.3765243958290029)OR((((v0.c2))>((rt0.c0))))))OR(GLOB(v0.c1, rt0.c2))))OR(CAST(rt0.c2 AS REAL))))OR((((rt0.c1, x'', NULL)) NOT BETWEEN ((v0.c0, v0.c1, rt0.c2)) AND ((v0.c2, v0.c1, v0.c0))))) WHERE ((NOT (((0.4083894608447457 COLLATE RTRIM)&(((((rt0.c1)AND(rt0.c1)))AND(v0.c2))))))) UNION SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN v0 ON ((((((((0.3765243958290029)OR((((v0.c2))>((rt0.c0))))))OR(GLOB(v0.c1, rt0.c2))))OR(CAST(rt0.c2 AS REAL))))OR((((rt0.c1, x'', NULL)) NOT BETWEEN ((v0.c0, v0.c1, rt0.c2)) AND ((v0.c2, v0.c1, v0.c0))))) WHERE (((((0.4083894608447457 COLLATE RTRIM)&(((((rt0.c1)AND(rt0.c1)))AND(v0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN v0 ON ((((((((0.3765243958290029)OR((((v0.c2))>((rt0.c0))))))OR(GLOB(v0.c1, rt0.c2))))OR(CAST(rt0.c2 AS REAL))))OR((((rt0.c1, x'', NULL)) NOT BETWEEN ((v0.c0, v0.c1, rt0.c2)) AND ((v0.c2, v0.c1, v0.c0)))));
SELECT ALL v0.c2, v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c2, v0.c0, vt0.c0;
SELECT ALL v0.c2, v0.c0, vt0.c0 FROM v0, vt0 WHERE ((((x'')<=(vt0.c0)) IN ())) GROUP BY v0.c2, v0.c0, vt0.c0 UNION SELECT v0.c2, v0.c0, vt0.c0 FROM v0, vt0 WHERE ((NOT ((((x'')<=(vt0.c0)) IN ())))) GROUP BY v0.c2, v0.c0, vt0.c0 UNION SELECT v0.c2, v0.c0, vt0.c0 FROM v0, vt0 WHERE ((((((x'')<=(vt0.c0)) IN ())) ISNULL)) GROUP BY v0.c2, v0.c0, vt0.c0;
SELECT ALL v0.c2, v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c2, v0.c0, vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX('0.7038393435733132') UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX('0.7038393435733132'))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX('0.7038393435733132')) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX('0.7038393435733132') UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX('0.7038393435733132'))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX('0.7038393435733132')) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM v0 CROSS JOIN rt0 ON json_patch(CASE rt0.c1  WHEN v0.c1 THEN v0.c1 WHEN v0.c0 THEN v0.c1 WHEN 0x26539bd5 THEN v0.c1 END, (- (vt0.c0))) INNER JOIN vt0 ON x'' COLLATE NOCASE;
SELECT * FROM v0 CROSS JOIN rt0 ON json_patch(CASE rt0.c1  WHEN v0.c1 THEN v0.c1 WHEN v0.c0 THEN v0.c1 WHEN 0X26539bd5 THEN v0.c1 END, (- (vt0.c0))) INNER JOIN vt0 ON x'' COLLATE NOCASE WHERE (((((v0.c2) IS FALSE))<(((v0.c0) NOT BETWEEN (1.517945141E9) AND ('1567258874'))))) UNION ALL SELECT * FROM v0 CROSS JOIN rt0 ON json_patch(CASE rt0.c1  WHEN v0.c1 THEN v0.c1 WHEN v0.c0 THEN v0.c1 WHEN 0x26539bd5 THEN v0.c1 END, (- (vt0.c0))) INNER JOIN vt0 ON x'' COLLATE NOCASE WHERE ((NOT (((((v0.c2) IS FALSE))<(((v0.c0) NOT BETWEEN (1.517945141E9) AND ('1567258874'))))))) UNION ALL SELECT ALL * FROM v0 NOT INDEXED CROSS JOIN rt0 ON json_patch(CASE rt0.c1  WHEN v0.c1 THEN v0.c1 WHEN v0.c0 THEN v0.c1 WHEN 0x26539bd5 THEN v0.c1 END, (- (vt0.c0))) INNER JOIN vt0 ON x'' COLLATE NOCASE WHERE (((((((v0.c2) IS FALSE))<(((v0.c0) NOT BETWEEN (1.517945141E9) AND ('1567258874'))))) ISNULL));
SELECT * FROM v0 CROSS JOIN rt0 ON json_patch(CASE rt0.c1  WHEN v0.c1 THEN v0.c1 WHEN v0.c0 THEN v0.c1 WHEN 0x26539bd5 THEN v0.c1 END, (- (vt0.c0))) INNER JOIN vt0 ON x'' COLLATE NOCASE;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE (LIKELY((('貉<euX+4G-') BETWEEN (vt1.c0) AND (vt0.c0)))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (LIKELY((('貉<euX+4G-') BETWEEN (vt1.c0) AND (vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE (((LIKELY((('貉<euX+4G-') BETWEEN (vt1.c0) AND (vt0.c0)))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT ALL v0.c0 FROM vt1, v0, rt0 FULL OUTER JOIN vt0 ON v0.c2 GROUP BY v0.c0;
SELECT v0.c0 FROM vt1, v0, rt0 FULL OUTER JOIN vt0 ON v0.c2 WHERE ((NOT (rt0.c0))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt1, v0, rt0 FULL OUTER JOIN vt0 ON v0.c2 WHERE ((NOT ((NOT (rt0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt1, v0, rt0 FULL OUTER JOIN vt0 ON v0.c2 WHERE ((((NOT (rt0.c0))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt1, v0, rt0 FULL OUTER JOIN vt0 ON v0.c2 GROUP BY v0.c0;
SELECT vt0.c0 FROM v0 LEFT OUTER JOIN vt0 ON CAST(((v0.c1) IS TRUE) AS NUMERIC) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0 LEFT OUTER JOIN vt0 ON CAST(((v0.c1) IS TRUE) AS NUMERIC) GROUP BY vt0.c0 HAVING 212460834 COLLATE BINARY UNION ALL SELECT vt0.c0 FROM v0 LEFT OUTER JOIN vt0 ON CAST(((v0.c1) IS TRUE) AS NUMERIC) GROUP BY vt0.c0 HAVING (NOT (212460834 COLLATE BINARY)) UNION ALL SELECT vt0.c0 FROM v0 LEFT OUTER JOIN vt0 ON CAST(((v0.c1) IS TRUE) AS NUMERIC) GROUP BY vt0.c0 HAVING ((212460834 COLLATE BINARY) ISNULL);
SELECT vt0.c0 FROM v0 LEFT OUTER JOIN vt0 ON CAST(((v0.c1) IS TRUE) AS NUMERIC) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0 LEFT OUTER JOIN vt0 ON CAST(((v0.c1) IS TRUE) AS NUMERIC) GROUP BY vt0.c0 HAVING 212460834 COLLATE BINARY UNION ALL SELECT vt0.c0 FROM v0 LEFT OUTER JOIN vt0 ON CAST(((v0.c1) IS TRUE) AS NUMERIC) GROUP BY vt0.c0 HAVING (NOT (212460834 COLLATE BINARY)) UNION ALL SELECT vt0.c0 FROM v0 LEFT OUTER JOIN vt0 ON CAST(((v0.c1) IS TRUE) AS NUMERIC) GROUP BY vt0.c0 HAVING ((212460834 COLLATE BINARY) ISNULL);
SELECT vt0.c0 FROM v0 LEFT OUTER JOIN vt0 ON CAST(((v0.c1) IS TRUE) AS NUMERIC) GROUP BY vt0.c0;
SELECT vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON (((vt1.c0 IN ()))||(((-1.329513614E9)GLOB(vt0.c0))));
SELECT vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON (((vt1.c0 IN ()))||(((-1.329513614E9)GLOB(vt0.c0)))) WHERE ((~ (NULL))) UNION ALL SELECT vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON (((vt1.c0 IN ()))||(((-1.329513614E9)GLOB(vt0.c0)))) WHERE ((NOT ((~ (NULL))))) UNION ALL SELECT vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON (((vt1.c0 IN ()))||(((-1.329513614E9)GLOB(vt0.c0)))) WHERE ((((~ (NULL))) ISNULL));
SELECT vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON (((vt1.c0 IN ()))||(((-1.329513614E9)GLOB(vt0.c0))));
SELECT DISTINCT v0.c2, v0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON (~ (((((v0.c2)OR(vt0.c0)))AND(-393773509))));
SELECT DISTINCT v0.c2, v0.c0 FROM v0 NOT INDEXED RIGHT OUTER JOIN vt0 ON (~ (((((v0.c2)OR(vt0.c0)))AND(-393773509)))) WHERE (((((v0.c1) IS TRUE)) BETWEEN (CASE v0.c0  WHEN v0.c0 THEN v0.c2 END) AND ((- (v0.c1))))) UNION SELECT DISTINCT v0.c2, v0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON (~ (((((v0.c2)OR(vt0.c0)))AND(-393773509)))) WHERE ((NOT (((((v0.c1) IS TRUE)) BETWEEN (CASE v0.c0  WHEN v0.c0 THEN v0.c2 END) AND ((- (v0.c1))))))) UNION SELECT DISTINCT v0.c2, v0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON (~ (((((v0.c2)OR(vt0.c0)))AND(-393773509)))) WHERE (((((((v0.c1) IS TRUE)) BETWEEN (CASE v0.c0  WHEN v0.c0 THEN v0.c2 END) AND ((- (v0.c1))))) ISNULL));
SELECT DISTINCT v0.c2, v0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON (~ (((((v0.c2)OR(vt0.c0)))AND(-393773509))));
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 END) NOTNULL)) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((CASE WHEN vt1.c0 THEN vt1.c0 END) NOTNULL)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((CASE WHEN vt1.c0 THEN vt1.c0 END) NOTNULL)) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((TOTAL(vt0.c0)) IS FALSE)) IS FALSE) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((((TOTAL(vt0.c0)) IS FALSE)) IS FALSE))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((TOTAL(vt0.c0)) IS FALSE)) IS FALSE)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((TOTAL(vt0.c0)) IS FALSE)) IS FALSE) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((((TOTAL(vt0.c0)) IS FALSE)) IS FALSE))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((TOTAL(vt0.c0)) IS FALSE)) IS FALSE)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM rt0 INNER JOIN v0 ON (((((v0.c0))>((rt0.c1))))>=(CAST(v0.c1 AS REAL))) FULL OUTER JOIN vt1 ON (((~ (NULL))) NOT NULL);
SELECT ALL * FROM rt0 INNER JOIN v0 ON (((((v0.c0))>((rt0.c1))))>=(CAST(v0.c1 AS REAL))) FULL OUTER JOIN vt1 ON (((~ (NULL))) NOT NULL) WHERE (((((+ (rt0.c0))))=((CASE WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN v0.c1 WHEN rt0.c0 THEN v0.c1 WHEN rt0.c1 THEN rt0.c2 END)))) UNION ALL SELECT ALL * FROM rt0 INNER JOIN v0 ON (((((v0.c0))>((rt0.c1))))>=(CAST(v0.c1 AS REAL))) FULL OUTER JOIN vt1 ON (((~ (NULL))) NOT NULL) WHERE ((NOT (((((+ (rt0.c0))))=((CASE WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN v0.c1 WHEN rt0.c0 THEN v0.c1 WHEN rt0.c1 THEN rt0.c2 END)))))) UNION ALL SELECT ALL * FROM rt0 INNER JOIN v0 ON (((((v0.c0))>((rt0.c1))))>=(CAST(v0.c1 AS REAL))) FULL OUTER JOIN vt1 ON (((~ (NULL))) NOT NULL) WHERE (((((((+ (rt0.c0))))=((CASE WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN v0.c1 WHEN rt0.c0 THEN v0.c1 WHEN rt0.c1 THEN rt0.c2 END)))) ISNULL));
SELECT * FROM rt0 INNER JOIN v0 ON (((((v0.c0))>((rt0.c1))))>=(CAST(v0.c1 AS REAL))) FULL OUTER JOIN vt1 ON (((~ (NULL))) NOT NULL);
SELECT DISTINCT v0.c2 FROM rt0 FULL OUTER JOIN vt1 ON (((((vt0.c0) ISNULL)))>=((CAST(vt1.c0 AS BLOB)))) INNER JOIN v0 ON CAST(v0.c1 AS TEXT) COLLATE BINARY CROSS JOIN vt0 ON NULL;
SELECT v0.c0, v0.c2 FROM v0, vt0 GROUP BY v0.c0, v0.c2;
SELECT ALL v0.c0, v0.c2 FROM v0, vt0 WHERE ((((json_type(NULL)))>=((((((v0.c2)OR(v0.c0)))AND(vt0.c0)))))) GROUP BY v0.c0, v0.c2 UNION SELECT ALL v0.c0, v0.c2 FROM v0, vt0 WHERE ((NOT ((((json_type(NULL)))>=((((((v0.c2)OR(v0.c0)))AND(vt0.c0)))))))) GROUP BY v0.c0, v0.c2 UNION SELECT v0.c0, v0.c2 FROM v0, vt0 WHERE ((((((json_type(NULL)))>=((((((v0.c2)OR(v0.c0)))AND(vt0.c0)))))) ISNULL)) GROUP BY v0.c0, v0.c2;
SELECT v0.c0, v0.c2 FROM v0, vt0 GROUP BY v0.c0, v0.c2;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING TOTAL(UPPER(DISTINCT rt0.c0)) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (TOTAL(UPPER(DISTINCT rt0.c0)))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((TOTAL(UPPER(DISTINCT rt0.c0))) ISNULL);
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING TOTAL(UPPER(DISTINCT rt0.c0)) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (TOTAL(UPPER(DISTINCT rt0.c0)))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((TOTAL(UPPER(DISTINCT rt0.c0))) ISNULL);
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL * FROM rt0, vt0, vt1;
SELECT * FROM rt0, vt0, vt1 WHERE (rt0.c2) UNION ALL SELECT * FROM rt0, vt0, vt1 WHERE ((NOT (rt0.c2))) UNION ALL SELECT ALL * FROM rt0, vt0, vt1 WHERE (((rt0.c2) ISNULL));
SELECT ALL * FROM rt0, vt0, vt1;
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE (((INSTR(-356743106, rt0.c0)) NOTNULL)) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT (((INSTR(-356743106, rt0.c0)) NOTNULL)))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE (((((INSTR(-356743106, rt0.c0)) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0, vt0, vt1 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0, vt0, vt1 WHERE (((rt0.c0)<<(vt1.c0))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0, vt0, vt1 WHERE ((NOT (((rt0.c0)<<(vt1.c0))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0, vt0, vt1 WHERE (((((rt0.c0)<<(vt1.c0))) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0, vt0, vt1 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c0 FROM vt1, rt0, vt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM vt1, rt0, vt0 GROUP BY rt0.c0 HAVING ((((rt0.c1)AND(((vt1.c0)>(SUM(SUM(GROUP_CONCAT(TOTAL(COUNT(*))))))))))OR((NOT (COUNT(rt0.c1))))) UNION ALL SELECT rt0.c0 FROM vt1, rt0, vt0 GROUP BY rt0.c0 HAVING (NOT (((((rt0.c1)AND(((vt1.c0)>(SUM(SUM(GROUP_CONCAT(TOTAL(COUNT(*))))))))))OR((NOT (COUNT(rt0.c1))))))) UNION ALL SELECT ALL rt0.c0 FROM vt1, rt0, vt0 GROUP BY rt0.c0 HAVING ((((((rt0.c1)AND(((vt1.c0)>(SUM(SUM(GROUP_CONCAT(TOTAL(COUNT(*))))))))))OR((NOT (COUNT(rt0.c1)))))) ISNULL);
SELECT ALL v0.c1, v0.c0 FROM v0;
SELECT ALL v0.c1, v0.c0 FROM v0 WHERE (CASE (((v0.c2, v0.c2, v0.c0))<=((v0.c0, v0.c2, v0.c1)))  WHEN ((v0.c0)>>(v0.c1)) THEN v0.c1 ELSE CAST(v0.c1 AS NUMERIC) END) UNION ALL SELECT ALL v0.c1, v0.c0 FROM v0 WHERE ((NOT (CASE (((v0.c2, v0.c2, v0.c0))<=((v0.c0, v0.c2, v0.c1)))  WHEN ((v0.c0)>>(v0.c1)) THEN v0.c1 ELSE CAST(v0.c1 AS NUMERIC) END))) UNION ALL SELECT v0.c1, v0.c0 FROM v0 WHERE (((CASE (((v0.c2, v0.c2, v0.c0))<=((v0.c0, v0.c2, v0.c1)))  WHEN ((v0.c0)>>(v0.c1)) THEN v0.c1 ELSE CAST(v0.c1 AS NUMERIC) END) ISNULL));
SELECT ALL v0.c1, v0.c0 FROM v0;
SELECT DISTINCT * FROM rt0, vt0, v0 RIGHT OUTER JOIN vt1 ON rt0.c1;
SELECT DISTINCT * FROM rt0, vt0, v0 RIGHT OUTER JOIN vt1 ON rt0.c1 WHERE (((v0.c1 COLLATE RTRIM)=(rt0.c2))) UNION SELECT DISTINCT * FROM rt0, vt0, v0 RIGHT OUTER JOIN vt1 ON rt0.c1 WHERE ((NOT (((v0.c1 COLLATE RTRIM)=(rt0.c2))))) UNION SELECT DISTINCT * FROM rt0, vt0, v0 RIGHT OUTER JOIN vt1 ON rt0.c1 WHERE (((((v0.c1 COLLATE RTRIM)=(rt0.c2))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0, v0 RIGHT OUTER JOIN vt1 ON rt0.c1;
SELECT ALL v0.c0, rt0.c2, rt0.c1, v0.c2, vt0.c0 FROM rt0, vt0, v0 GROUP BY v0.c0, rt0.c2, rt0.c1, v0.c2, vt0.c0;
SELECT ALL v0.c0, rt0.c2, rt0.c1, v0.c2, vt0.c0 FROM rt0, vt0, v0 WHERE ((((((('BS')|(v0.c2)))AND(((v0.c1)|(vt0.c0)))))OR(((rt0.c2)&(vt0.c0))))) GROUP BY v0.c0, rt0.c2, rt0.c1, v0.c2, vt0.c0 UNION SELECT ALL v0.c0, rt0.c2, rt0.c1, v0.c2, vt0.c0 FROM rt0, vt0, v0 WHERE ((NOT ((((((('BS')|(v0.c2)))AND(((v0.c1)|(vt0.c0)))))OR(((rt0.c2)&(vt0.c0))))))) GROUP BY v0.c0, rt0.c2, rt0.c1, v0.c2, vt0.c0 UNION SELECT ALL v0.c0, rt0.c2, rt0.c1, v0.c2, vt0.c0 FROM rt0, vt0, v0 WHERE ((((((((('BS')|(v0.c2)))AND(((v0.c1)|(vt0.c0)))))OR(((rt0.c2)&(vt0.c0))))) ISNULL)) GROUP BY v0.c0, rt0.c2, rt0.c1, v0.c2, vt0.c0;
SELECT ALL v0.c0, rt0.c2, rt0.c1, v0.c2, vt0.c0 FROM rt0, vt0, v0 GROUP BY v0.c0, rt0.c2, rt0.c1, v0.c2, vt0.c0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING CASE WHEN COUNT(*) THEN ((MIN('-1786611143'))|(rt0.c1)) ELSE CAST(rt0.c2 AS BLOB) END UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (CASE WHEN COUNT(*) THEN ((MIN('-1786611143'))|(rt0.c1)) ELSE CAST(rt0.c2 AS BLOB) END)) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((CASE WHEN COUNT(*) THEN ((MIN('-1786611143'))|(rt0.c1)) ELSE CAST(rt0.c2 AS BLOB) END) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING CASE WHEN COUNT(*) THEN ((MIN('-1786611143'))|(rt0.c1)) ELSE CAST(rt0.c2 AS BLOB) END UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (CASE WHEN COUNT(*) THEN ((MIN('-1786611143'))|(rt0.c1)) ELSE CAST(rt0.c2 AS BLOB) END)) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((CASE WHEN COUNT(*) THEN ((MIN('-1786611143'))|(rt0.c1)) ELSE CAST(rt0.c2 AS BLOB) END) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (((-1621775933)<((((v0.c0, v0.c1, v0.c1))>((v0.c0, v0.c2, v0.c2)))))) UNION ALL SELECT * FROM v0 WHERE ((NOT (((-1621775933)<((((v0.c0, v0.c1, v0.c1))>((v0.c0, v0.c2, v0.c2)))))))) UNION ALL SELECT * FROM v0 WHERE (((((-1621775933)<((((v0.c0, v0.c1, v0.c1))>((v0.c0, v0.c2, v0.c2)))))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT v0.c2, vt1.c0, vt0.c0, v0.c1 FROM vt1, vt0, v0;
SELECT DISTINCT v0.c2, vt1.c0, vt0.c0, v0.c1 FROM vt1, vt0, v0 WHERE ((((((vt0.c0)-(v0.c1))))<((v0.c0 COLLATE RTRIM)))) UNION SELECT DISTINCT v0.c2, vt1.c0, vt0.c0, v0.c1 FROM vt1, vt0, v0 WHERE ((NOT ((((((vt0.c0)-(v0.c1))))<((v0.c0 COLLATE RTRIM)))))) UNION SELECT DISTINCT v0.c2, vt1.c0, vt0.c0, v0.c1 FROM vt1, vt0, v0 WHERE ((((((((vt0.c0)-(v0.c1))))<((v0.c0 COLLATE RTRIM)))) ISNULL));
SELECT DISTINCT v0.c2, vt1.c0, vt0.c0, v0.c1 FROM vt1, vt0, v0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0 WHERE (((((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)))>=(((((v0.c2)OR(v0.c2)))OR(vt0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, vt0 WHERE ((NOT (((((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)))>=(((((v0.c2)OR(v0.c2)))OR(vt0.c0))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, vt0 WHERE (((((((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)))>=(((((v0.c2)OR(v0.c2)))OR(vt0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT v0.c1, v0.c0, vt0.c0, rt0.c2, rt0.c1, v0.c2, vt1.c0 FROM vt0, rt0 CROSS JOIN v0 ON ((((NULL)AND(vt0.c0 COLLATE RTRIM)))OR(rt0.c2 COLLATE NOCASE)) RIGHT OUTER JOIN vt1 ON ((('-1003398427'))>=((((v0.c2)%(rt0.c1))))) GROUP BY v0.c1, v0.c0, vt0.c0, rt0.c2, rt0.c1, v0.c2, vt1.c0;
SELECT ALL v0.c1, v0.c0, vt0.c0, rt0.c2, rt0.c1, v0.c2, vt1.c0 FROM vt0, rt0 CROSS JOIN v0 ON ((((NULL)AND(vt0.c0 COLLATE RTRIM)))OR(rt0.c2 COLLATE NOCASE)) RIGHT OUTER JOIN vt1 ON ((('-1003398427'))>=((((v0.c2)%(rt0.c1))))) GROUP BY v0.c1, v0.c0, vt0.c0, rt0.c2, rt0.c1, v0.c2, vt1.c0 HAVING (rt0.c1 COLLATE NOCASE IN ()) UNION ALL SELECT v0.c1, v0.c0, vt0.c0, rt0.c2, rt0.c1, v0.c2, vt1.c0 FROM vt0, rt0 CROSS JOIN v0 ON ((((NULL)AND(vt0.c0 COLLATE RTRIM)))OR(rt0.c2 COLLATE NOCASE)) RIGHT OUTER JOIN vt1 ON ((('-1003398427'))>=((((v0.c2)%(rt0.c1))))) GROUP BY v0.c1, v0.c0, vt0.c0, rt0.c2, rt0.c1, v0.c2, vt1.c0 HAVING (NOT ((rt0.c1 COLLATE NOCASE IN ()))) UNION ALL SELECT ALL v0.c1, v0.c0, vt0.c0, rt0.c2, rt0.c1, v0.c2, vt1.c0 FROM vt0, rt0 CROSS JOIN v0 ON ((((NULL)AND(vt0.c0 COLLATE RTRIM)))OR(rt0.c2 COLLATE NOCASE)) RIGHT OUTER JOIN vt1 ON ((('-1003398427'))>=((((v0.c2)%(rt0.c1))))) GROUP BY v0.c1, v0.c0, vt0.c0, rt0.c2, rt0.c1, v0.c2, vt1.c0 HAVING (((rt0.c1 COLLATE NOCASE IN ())) ISNULL);
SELECT v0.c1, v0.c0, vt0.c0, rt0.c2, rt0.c1, v0.c2, vt1.c0 FROM vt0, rt0 CROSS JOIN v0 ON ((((NULL)AND(vt0.c0 COLLATE RTRIM)))OR(rt0.c2 COLLATE NOCASE)) RIGHT OUTER JOIN vt1 ON ((('-1003398427'))>=((((v0.c2)%(rt0.c1))))) GROUP BY v0.c1, v0.c0, vt0.c0, rt0.c2, rt0.c1, v0.c2, vt1.c0;
SELECT ALL v0.c1, v0.c0, vt0.c0, rt0.c2, rt0.c1, v0.c2, vt1.c0 FROM vt0, rt0 CROSS JOIN v0 ON ((((NULL)AND(vt0.c0 COLLATE RTRIM)))OR(rt0.c2 COLLATE NOCASE)) RIGHT OUTER JOIN vt1 ON ((('-1003398427'))>=((((v0.c2)%(rt0.c1))))) GROUP BY v0.c1, v0.c0, vt0.c0, rt0.c2, rt0.c1, v0.c2, vt1.c0 HAVING (rt0.c1 COLLATE NOCASE IN ()) UNION ALL SELECT v0.c1, v0.c0, vt0.c0, rt0.c2, rt0.c1, v0.c2, vt1.c0 FROM vt0, rt0 CROSS JOIN v0 ON ((((NULL)AND(vt0.c0 COLLATE RTRIM)))OR(rt0.c2 COLLATE NOCASE)) RIGHT OUTER JOIN vt1 ON ((('-1003398427'))>=((((v0.c2)%(rt0.c1))))) GROUP BY v0.c1, v0.c0, vt0.c0, rt0.c2, rt0.c1, v0.c2, vt1.c0 HAVING (NOT ((rt0.c1 COLLATE NOCASE IN ()))) UNION ALL SELECT ALL v0.c1, v0.c0, vt0.c0, rt0.c2, rt0.c1, v0.c2, vt1.c0 FROM vt0, rt0 CROSS JOIN v0 ON ((((NULL)AND(vt0.c0 COLLATE RTRIM)))OR(rt0.c2 COLLATE NOCASE)) RIGHT OUTER JOIN vt1 ON ((('-1003398427'))>=((((v0.c2)%(rt0.c1))))) GROUP BY v0.c1, v0.c0, vt0.c0, rt0.c2, rt0.c1, v0.c2, vt1.c0 HAVING (((rt0.c1 COLLATE NOCASE IN ())) ISNULL);
SELECT v0.c1, v0.c0, vt0.c0, rt0.c2, rt0.c1, v0.c2, vt1.c0 FROM vt0, rt0 CROSS JOIN v0 ON ((((NULL)AND(vt0.c0 COLLATE RTRIM)))OR(rt0.c2 COLLATE NOCASE)) RIGHT OUTER JOIN vt1 ON ((('-1003398427'))>=((((v0.c2)%(rt0.c1))))) GROUP BY v0.c1, v0.c0, vt0.c0, rt0.c2, rt0.c1, v0.c2, vt1.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((~ (CAST(rt0.c0 AS INTEGER)))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((~ (CAST(rt0.c0 AS INTEGER)))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((~ (CAST(rt0.c0 AS INTEGER)))) ISNULL));
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM vt1, rt0, vt0;
SELECT DISTINCT * FROM vt1, rt0, vt0 WHERE ((~ (0x16a17fc4))) UNION SELECT DISTINCT * FROM vt1, rt0, vt0 WHERE ((NOT ((~ (0x16a17fc4))))) UNION SELECT DISTINCT * FROM vt1, rt0, vt0 WHERE ((((~ (0X16a17fc4))) ISNULL));
SELECT DISTINCT * FROM vt1, rt0, vt0;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (((rt0.c1) ISNULL) COLLATE NOCASE) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((rt0.c1) ISNULL) COLLATE NOCASE))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((((rt0.c1) ISNULL) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT v0.c1, v0.c2 FROM vt0 CROSS JOIN v0 ON ((0x71a93448)%(v0.c1)) GROUP BY v0.c1, v0.c2;
SELECT ALL v0.c1, v0.c2 FROM vt0 CROSS JOIN v0 ON ((0x71a93448)%(v0.c1)) GROUP BY v0.c1, v0.c2 HAVING ((AVG(MIN(GROUP_CONCAT(v0.c1))))<('W''G膰[')) UNION ALL SELECT ALL v0.c1, v0.c2 FROM vt0 CROSS JOIN v0 ON ((0X71a93448)%(v0.c1)) GROUP BY v0.c1, v0.c2 HAVING (NOT (((AVG(MIN(GROUP_CONCAT(v0.c1))))<('W''G膰[')))) UNION ALL SELECT ALL v0.c1, v0.c2 FROM vt0 CROSS JOIN v0 ON ((0x71a93448)%(v0.c1)) GROUP BY v0.c1, v0.c2 HAVING ((((AVG(MIN(GROUP_CONCAT(v0.c1))))<('W''G膰['))) ISNULL);
SELECT v0.c2, v0.c0 FROM rt0, vt1, v0, vt0;
SELECT v0.c2, v0.c0 FROM rt0, vt1, v0, vt0 WHERE ((((v0.c1 IN (v0.c0)))||(((v0.c0)/(v0.c1))))) UNION ALL SELECT v0.c2, v0.c0 FROM rt0, vt1, v0, vt0 WHERE ((NOT ((((v0.c1 IN (v0.c0)))||(((v0.c0)/(v0.c1))))))) UNION ALL SELECT v0.c2, v0.c0 FROM rt0, vt1, v0, vt0 WHERE ((((((v0.c1 IN (v0.c0)))||(((v0.c0)/(v0.c1))))) ISNULL));
SELECT v0.c2, v0.c0 FROM rt0, vt1, v0, vt0;
SELECT DISTINCT * FROM vt1, v0, rt0;
SELECT DISTINCT * FROM vt1, v0, rt0 WHERE (CASE WHEN ((((((((v0.c2)OR(v0.c1)))AND(v0.c1)))AND(x'')))AND('')) THEN rt0.c2 WHEN ((x'') BETWEEN (vt1.c0) AND (v0.c2)) THEN ((rt0.c1)-(v0.c0)) WHEN rt0.c2 THEN (rt0.c2 IN ()) END) UNION SELECT DISTINCT * FROM vt1, v0, rt0 WHERE ((NOT (CASE WHEN ((((((((v0.c2)OR(v0.c1)))AND(v0.c1)))AND(x'')))AND('')) THEN rt0.c2 WHEN ((x'') BETWEEN (vt1.c0) AND (v0.c2)) THEN ((rt0.c1)-(v0.c0)) WHEN rt0.c2 THEN (rt0.c2 IN ()) END))) UNION SELECT DISTINCT * FROM vt1, v0, rt0 WHERE (((CASE WHEN ((((((((v0.c2)OR(v0.c1)))AND(v0.c1)))AND(x'')))AND('')) THEN rt0.c2 WHEN ((x'') BETWEEN (vt1.c0) AND (v0.c2)) THEN ((rt0.c1)-(v0.c0)) WHEN rt0.c2 THEN (rt0.c2 IN ()) END) ISNULL));
SELECT DISTINCT * FROM vt1, v0, rt0;
SELECT rt0.c1, v0.c0, v0.c1, vt0.c0, rt0.c2, v0.c2, rt0.c0 FROM vt0, vt1, v0, rt0 GROUP BY rt0.c1, v0.c0, v0.c1, vt0.c0, rt0.c2, v0.c2, rt0.c0;
SELECT ALL rt0.c1, v0.c0, v0.c1, vt0.c0, rt0.c2, v0.c2, rt0.c0 FROM vt0, vt1, v0 NOT INDEXED, rt0 WHERE (((((v0.c2) NOT BETWEEN ('1361192975') AND (vt1.c0))) NOT NULL)) GROUP BY rt0.c1, v0.c0, v0.c1, vt0.c0, rt0.c2, v0.c2, rt0.c0 UNION SELECT ALL rt0.c1, v0.c0, v0.c1, vt0.c0, rt0.c2, v0.c2, rt0.c0 FROM vt0, vt1, v0, rt0 WHERE ((NOT (((((v0.c2) NOT BETWEEN ('1361192975') AND (vt1.c0))) NOT NULL)))) GROUP BY rt0.c1, v0.c0, v0.c1, vt0.c0, rt0.c2, v0.c2, rt0.c0 UNION SELECT rt0.c1, v0.c0, v0.c1, vt0.c0, rt0.c2, v0.c2, rt0.c0 FROM vt0, vt1, v0, rt0 WHERE (((((((v0.c2) NOT BETWEEN ('1361192975') AND (vt1.c0))) NOT NULL)) ISNULL)) GROUP BY rt0.c1, v0.c0, v0.c1, vt0.c0, rt0.c2, v0.c2, rt0.c0;
SELECT rt0.c1, v0.c0, v0.c1, vt0.c0, rt0.c2, v0.c2, rt0.c0 FROM vt0, vt1, v0, rt0 GROUP BY rt0.c1, v0.c0, v0.c1, vt0.c0, rt0.c2, v0.c2, rt0.c0;
SELECT ALL v0.c2 FROM v0, vt1, rt0 GROUP BY v0.c2;
SELECT ALL v0.c2 FROM v0, vt1, rt0 GROUP BY v0.c2 HAVING CASE GROUP_CONCAT(COUNT(GROUP_CONCAT(rt0.c1)))  WHEN MAX(vt1.c0) THEN v0.c0 COLLATE BINARY ELSE COUNT(*) END UNION ALL SELECT v0.c2 FROM v0, vt1, rt0 GROUP BY v0.c2 HAVING (NOT (CASE GROUP_CONCAT(COUNT(GROUP_CONCAT(rt0.c1)))  WHEN MAX(vt1.c0) THEN v0.c0 COLLATE BINARY ELSE COUNT(*) END)) UNION ALL SELECT ALL v0.c2 FROM v0, vt1, rt0 GROUP BY v0.c2 HAVING ((CASE GROUP_CONCAT(COUNT(GROUP_CONCAT(rt0.c1)))  WHEN MAX(vt1.c0) THEN v0.c0 COLLATE BINARY ELSE COUNT(*) END) ISNULL);
SELECT * FROM rt0, vt1, vt0, v0;
SELECT ALL * FROM rt0, vt1, vt0, v0 WHERE (((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)))AND(((v0.c2)<<(rt0.c2)))))OR(CASE WHEN v0.c0 THEN rt0.c1 END))) UNION ALL SELECT ALL * FROM rt0, vt1, vt0, v0 WHERE ((NOT (((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)))AND(((v0.c2)<<(rt0.c2)))))OR(CASE WHEN v0.c0 THEN rt0.c1 END))))) UNION ALL SELECT ALL * FROM rt0, vt1, vt0, v0 WHERE (((((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)))AND(((v0.c2)<<(rt0.c2)))))OR(CASE WHEN v0.c0 THEN rt0.c1 END))) ISNULL));
SELECT * FROM rt0, vt1, vt0, v0;
SELECT DISTINCT vt0.c0, rt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON (NOT (rt0.c1 COLLATE RTRIM));
SELECT DISTINCT vt0.c0, rt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON (NOT (rt0.c1 COLLATE RTRIM)) WHERE (CAST(rt0.c0 AS NUMERIC)) UNION SELECT DISTINCT vt0.c0, rt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON (NOT (rt0.c1 COLLATE RTRIM)) WHERE ((NOT (CAST(rt0.c0 AS NUMERIC)))) UNION SELECT DISTINCT vt0.c0, rt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON (NOT (rt0.c1 COLLATE RTRIM)) WHERE (((CAST(rt0.c0 AS NUMERIC)) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON (NOT (rt0.c1 COLLATE RTRIM));
SELECT rt0.c2, v0.c0 FROM vt1, rt0, v0, vt0 GROUP BY rt0.c2, v0.c0;
SELECT ALL rt0.c2, v0.c0 FROM vt1 NOT INDEXED, rt0, v0, vt0 WHERE (NULL) GROUP BY rt0.c2, v0.c0 UNION SELECT rt0.c2, v0.c0 FROM vt1, rt0, v0, vt0 WHERE ((NOT (NULL))) GROUP BY rt0.c2, v0.c0 UNION SELECT ALL rt0.c2, v0.c0 FROM vt1, rt0, v0, vt0 WHERE (((NULL) ISNULL)) GROUP BY rt0.c2, v0.c0;
SELECT rt0.c2, v0.c0 FROM vt1, rt0, v0, vt0 GROUP BY rt0.c2, v0.c0;
SELECT vt1.c0, rt0.c1 FROM vt0 FULL OUTER JOIN vt1 ON ((((vt1.c0) NOT NULL))/(((vt0.c0) NOT BETWEEN (0xffffffff8e89ec19) AND (vt1.c0)))) FULL OUTER JOIN rt0 ON (('SBlq') BETWEEN (vt1.c0 COLLATE RTRIM) AND (0Xffffffffd5241cff COLLATE NOCASE)) GROUP BY vt1.c0, rt0.c1;
SELECT ALL vt1.c0, rt0.c1 FROM vt0 FULL OUTER JOIN vt1 ON ((((vt1.c0) NOT NULL))/(((vt0.c0) NOT BETWEEN (0xffffffff8e89ec19) AND (vt1.c0)))) FULL OUTER JOIN rt0 ON (('SBlq') BETWEEN (vt1.c0 COLLATE RTRIM) AND (0xffffffffd5241cff COLLATE NOCASE)) GROUP BY vt1.c0, rt0.c1 HAVING ((((CAST(COUNT(*) AS INTEGER))AND(COUNT(*))))OR(COUNT(*))) UNION ALL SELECT vt1.c0, rt0.c1 FROM vt0 FULL OUTER JOIN vt1 ON ((((vt1.c0) NOT NULL))/(((vt0.c0) NOT BETWEEN (0Xffffffff8e89ec19) AND (vt1.c0)))) FULL OUTER JOIN rt0 ON (('SBlq') BETWEEN (vt1.c0 COLLATE RTRIM) AND (0Xffffffffd5241cff COLLATE NOCASE)) GROUP BY vt1.c0, rt0.c1 HAVING (NOT (((((CAST(COUNT(*) AS INTEGER))AND(COUNT(*))))OR(COUNT(*))))) UNION ALL SELECT vt1.c0, rt0.c1 FROM vt0 FULL OUTER JOIN vt1 ON ((((vt1.c0) NOT NULL))/(((vt0.c0) NOT BETWEEN (0xffffffff8e89ec19) AND (vt1.c0)))) FULL OUTER JOIN rt0 ON (('SBlq') BETWEEN (vt1.c0 COLLATE RTRIM) AND (0Xffffffffd5241cff COLLATE NOCASE)) GROUP BY vt1.c0, rt0.c1 HAVING ((((((CAST(COUNT(*) AS INTEGER))AND(COUNT(*))))OR(COUNT(*)))) ISNULL);
SELECT vt1.c0, rt0.c1 FROM vt0 FULL OUTER JOIN vt1 ON ((((vt1.c0) NOT NULL))/(((vt0.c0) NOT BETWEEN (0xffffffff8e89ec19) AND (vt1.c0)))) FULL OUTER JOIN rt0 ON (('SBlq') BETWEEN (vt1.c0 COLLATE RTRIM) AND (0Xffffffffd5241cff COLLATE NOCASE)) GROUP BY vt1.c0, rt0.c1;
SELECT ALL vt1.c0, rt0.c1 FROM vt0 FULL OUTER JOIN vt1 ON ((((vt1.c0) NOT NULL))/(((vt0.c0) NOT BETWEEN (0xffffffff8e89ec19) AND (vt1.c0)))) FULL OUTER JOIN rt0 ON (('SBlq') BETWEEN (vt1.c0 COLLATE RTRIM) AND (0xffffffffd5241cff COLLATE NOCASE)) GROUP BY vt1.c0, rt0.c1 HAVING ((((CAST(COUNT(*) AS INTEGER))AND(COUNT(*))))OR(COUNT(*))) UNION ALL SELECT vt1.c0, rt0.c1 FROM vt0 FULL OUTER JOIN vt1 ON ((((vt1.c0) NOT NULL))/(((vt0.c0) NOT BETWEEN (0Xffffffff8e89ec19) AND (vt1.c0)))) FULL OUTER JOIN rt0 ON (('SBlq') BETWEEN (vt1.c0 COLLATE RTRIM) AND (0Xffffffffd5241cff COLLATE NOCASE)) GROUP BY vt1.c0, rt0.c1 HAVING (NOT (((((CAST(COUNT(*) AS INTEGER))AND(COUNT(*))))OR(COUNT(*))))) UNION ALL SELECT vt1.c0, rt0.c1 FROM vt0 FULL OUTER JOIN vt1 ON ((((vt1.c0) NOT NULL))/(((vt0.c0) NOT BETWEEN (0xffffffff8e89ec19) AND (vt1.c0)))) FULL OUTER JOIN rt0 ON (('SBlq') BETWEEN (vt1.c0 COLLATE RTRIM) AND (0Xffffffffd5241cff COLLATE NOCASE)) GROUP BY vt1.c0, rt0.c1 HAVING ((((((CAST(COUNT(*) AS INTEGER))AND(COUNT(*))))OR(COUNT(*)))) ISNULL);
SELECT vt1.c0, rt0.c1 FROM vt0 FULL OUTER JOIN vt1 ON ((((vt1.c0) NOT NULL))/(((vt0.c0) NOT BETWEEN (0xffffffff8e89ec19) AND (vt1.c0)))) FULL OUTER JOIN rt0 ON (('SBlq') BETWEEN (vt1.c0 COLLATE RTRIM) AND (0Xffffffffd5241cff COLLATE NOCASE)) GROUP BY vt1.c0, rt0.c1;
SELECT ALL MIN(((v0.c0) ISNULL)) FROM v0, vt0 ORDER BY CAST(((v0.c2) NOTNULL) AS NUMERIC) DESC  NULLS FIRST, ((((v0.c0) NOT BETWEEN (v0.c1) AND (vt0.c0)))AND(load_extension(v0.c1, v0.c2))) DESC, ((v0.c2 COLLATE BINARY) NOT BETWEEN (((v0.c1)==(v0.c2))) AND ((v0.c2 IN (v0.c1, v0.c2)))) ASC;
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN ())) UNION ALL SELECT * FROM vt1 WHERE ((NOT ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN ())))) UNION ALL SELECT ALL * FROM vt1 WHERE ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN ())) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (CAST((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) AS TEXT)) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (CAST((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) AS TEXT)))) UNION SELECT DISTINCT * FROM vt1 WHERE (((CAST((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) AS TEXT)) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM vt0 FULL OUTER JOIN v0 ON CASE WHEN v0.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c1 WHEN v0.c1 THEN vt1.c0 ELSE vt0.c0 END COLLATE RTRIM FULL OUTER JOIN vt1 ON (((((v0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c1))))GLOB(((((rt0.c0)AND(v0.c0)))AND(rt0.c1)))) INNER JOIN rt0 ON (- (rt0.c2)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING SUM(SUM(AVG(rt0.c0))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (SUM(SUM(AVG(rt0.c0))))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((SUM(SUM(AVG(rt0.c0)))) ISNULL);
SELECT ALL rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON ((NULLIF(rt0.c2, rt0.c1))<<(rt0.c1)) CROSS JOIN vt1 ON (((((vt0.c0, rt0.c0, vt1.c0))<=((vt0.c0, rt0.c0, vt1.c0))))-(((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))));
SELECT rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON ((NULLIF(rt0.c2, rt0.c1))<<(rt0.c1)) CROSS JOIN vt1 ON (((((vt0.c0, rt0.c0, vt1.c0))<=((vt0.c0, rt0.c0, vt1.c0))))-(((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))) WHERE (((vt1.c0 COLLATE RTRIM) IS FALSE)) UNION ALL SELECT ALL rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON ((NULLIF(rt0.c2, rt0.c1))<<(rt0.c1)) CROSS JOIN vt1 ON (((((vt0.c0, rt0.c0, vt1.c0))<=((vt0.c0, rt0.c0, vt1.c0))))-(((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))) WHERE ((NOT (((vt1.c0 COLLATE RTRIM) IS FALSE)))) UNION ALL SELECT ALL rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON ((NULLIF(rt0.c2, rt0.c1))<<(rt0.c1)) CROSS JOIN vt1 ON (((((vt0.c0, rt0.c0, vt1.c0))<=((vt0.c0, rt0.c0, vt1.c0))))-(((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))) WHERE (((((vt1.c0 COLLATE RTRIM) IS FALSE)) ISNULL));
SELECT ALL rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON ((NULLIF(rt0.c2, rt0.c1))<<(rt0.c1)) CROSS JOIN vt1 ON (((((vt0.c0, rt0.c0, vt1.c0))<=((vt0.c0, rt0.c0, vt1.c0))))-(((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (rt0.c2) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT v0.c0, vt1.c0, vt0.c0, v0.c1, v0.c2 FROM vt0, v0, vt1 GROUP BY v0.c0, vt1.c0, vt0.c0, v0.c1, v0.c2;
SELECT ALL v0.c0, vt1.c0, vt0.c0, v0.c1, v0.c2 FROM vt0, v0, vt1 WHERE (CASE ((vt0.c0) NOT BETWEEN (vt1.c0) AND (v0.c2))  WHEN ((v0.c1) NOT BETWEEN (0x2608feec) AND ('709779005')) THEN ((((v0.c0)AND(v0.c1)))OR(v0.c1)) ELSE ((v0.c0) NOT BETWEEN (vt1.c0) AND (v0.c2)) END) GROUP BY v0.c0, vt1.c0, vt0.c0, v0.c1, v0.c2 UNION SELECT v0.c0, vt1.c0, vt0.c0, v0.c1, v0.c2 FROM vt0, v0, vt1 WHERE ((NOT (CASE ((vt0.c0) NOT BETWEEN (vt1.c0) AND (v0.c2))  WHEN ((v0.c1) NOT BETWEEN (0x2608feec) AND ('709779005')) THEN ((((v0.c0)AND(v0.c1)))OR(v0.c1)) ELSE ((v0.c0) NOT BETWEEN (vt1.c0) AND (v0.c2)) END))) GROUP BY v0.c0, vt1.c0, vt0.c0, v0.c1, v0.c2 UNION SELECT ALL v0.c0, vt1.c0, vt0.c0, v0.c1, v0.c2 FROM vt0, v0, vt1 WHERE (((CASE ((vt0.c0) NOT BETWEEN (vt1.c0) AND (v0.c2))  WHEN ((v0.c1) NOT BETWEEN (0x2608feec) AND ('709779005')) THEN ((((v0.c0)AND(v0.c1)))OR(v0.c1)) ELSE ((v0.c0) NOT BETWEEN (vt1.c0) AND (v0.c2)) END) ISNULL)) GROUP BY v0.c0, vt1.c0, vt0.c0, v0.c1, v0.c2;
SELECT v0.c0, vt1.c0, vt0.c0, v0.c1, v0.c2 FROM vt0, v0, vt1 GROUP BY v0.c0, vt1.c0, vt0.c0, v0.c1, v0.c2;
SELECT v0.c1, vt1.c0, v0.c2, v0.c0, rt0.c2, rt0.c1 FROM rt0, vt1, v0, vt0 GROUP BY v0.c1, vt1.c0, v0.c2, v0.c0, rt0.c2, rt0.c1;
SELECT v0.c1, vt1.c0, v0.c2, v0.c0, rt0.c2, rt0.c1 FROM rt0, vt1, v0, vt0 GROUP BY v0.c1, vt1.c0, v0.c2, v0.c0, rt0.c2, rt0.c1 HAVING COUNT(MIN(v0.c1)) UNION ALL SELECT ALL v0.c1, vt1.c0, v0.c2, v0.c0, rt0.c2, rt0.c1 FROM rt0, vt1, v0, vt0 GROUP BY v0.c1, vt1.c0, v0.c2, v0.c0, rt0.c2, rt0.c1 HAVING (NOT (COUNT(MIN(v0.c1)))) UNION ALL SELECT ALL v0.c1, vt1.c0, v0.c2, v0.c0, rt0.c2, rt0.c1 FROM rt0, vt1, v0, vt0 GROUP BY v0.c1, vt1.c0, v0.c2, v0.c0, rt0.c2, rt0.c1 HAVING ((COUNT(MIN(v0.c1))) ISNULL);
SELECT v0.c1, vt1.c0 FROM v0, rt0, vt1, vt0;
SELECT ALL v0.c1, vt1.c0 FROM v0, rt0, vt1, vt0 WHERE ('vD') UNION ALL SELECT v0.c1, vt1.c0 FROM v0, rt0, vt1, vt0 WHERE ((NOT ('vD'))) UNION ALL SELECT ALL v0.c1, vt1.c0 FROM v0, rt0, vt1, vt0 WHERE ((('vD') ISNULL));
SELECT v0.c1, vt1.c0 FROM v0, rt0, vt1, vt0;
SELECT DISTINCT * FROM rt0, vt0, vt1;
SELECT DISTINCT * FROM rt0, vt0, vt1 WHERE (((LENGTH(rt0.c2))>('-1903563751' COLLATE BINARY))) UNION SELECT DISTINCT * FROM rt0, vt0, vt1 WHERE ((NOT (((LENGTH(rt0.c2))>('-1903563751' COLLATE BINARY))))) UNION SELECT DISTINCT * FROM rt0, vt0, vt1 WHERE (((((LENGTH(rt0.c2))>('-1903563751' COLLATE BINARY))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0, vt1;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE (-637154460) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT (-637154460))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE (((-637154460) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING MIN(rt0.c0) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (MIN(rt0.c0))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((MIN(rt0.c0)) ISNULL);
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING MIN(rt0.c0) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (MIN(rt0.c0))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((MIN(rt0.c0)) ISNULL);
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c1, vt0.c0, rt0.c2, vt1.c0, v0.c0, v0.c2, v0.c1 FROM rt0, v0, vt0, vt1;
SELECT rt0.c1, vt0.c0, rt0.c2, vt1.c0, v0.c0, v0.c2, v0.c1 FROM rt0 NOT INDEXED, v0, vt0, vt1 WHERE ((rt0.c0 COLLATE NOCASE IN ())) UNION ALL SELECT rt0.c1, vt0.c0, rt0.c2, vt1.c0, v0.c0, v0.c2, v0.c1 FROM rt0, v0, vt0, vt1 WHERE ((NOT ((rt0.c0 COLLATE NOCASE IN ())))) UNION ALL SELECT rt0.c1, vt0.c0, rt0.c2, vt1.c0, v0.c0, v0.c2, v0.c1 FROM rt0, v0, vt0, vt1 WHERE ((((rt0.c0 COLLATE NOCASE IN ())) ISNULL));
SELECT rt0.c1, vt0.c0, rt0.c2, vt1.c0, v0.c0, v0.c2, v0.c1 FROM rt0, v0, vt0, vt1;
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON CASE WHEN CAST(v0.c1 AS REAL) THEN (- (rt0.c0)) END FULL OUTER JOIN v0 ON CAST(((((v0.c2)OR(rt0.c1)))AND(x'6d65')) AS INTEGER);
SELECT ALL v0.c0 FROM v0, vt0, vt1, rt0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt0, vt1, rt0 WHERE (vt1.c0) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, vt0, vt1, rt0 WHERE ((NOT (vt1.c0))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, vt0, vt1, rt0 WHERE (((vt1.c0) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0, vt1, rt0 GROUP BY v0.c0;
SELECT v0.c0, vt0.c0, rt0.c2, rt0.c1, vt1.c0, rt0.c0 FROM v0, vt1, rt0 FULL OUTER JOIN vt0 ON (((((rt0.c0))<=((v0.c0))))GLOB((((v0.c2))=((NULL))))) GROUP BY v0.c0, vt0.c0, rt0.c2, rt0.c1, vt1.c0, rt0.c0;
SELECT ALL v0.c0, vt0.c0, rt0.c2, rt0.c1, vt1.c0, rt0.c0 FROM v0, vt1, rt0 FULL OUTER JOIN vt0 ON (((((rt0.c0))<=((v0.c0))))GLOB((((v0.c2))==((NULL))))) GROUP BY v0.c0, vt0.c0, rt0.c2, rt0.c1, vt1.c0, rt0.c0 HAVING TOTAL(COUNT(*)) UNION ALL SELECT ALL v0.c0, vt0.c0, rt0.c2, rt0.c1, vt1.c0, rt0.c0 FROM v0, vt1, rt0 FULL OUTER JOIN vt0 ON (((((rt0.c0))<=((v0.c0))))GLOB((((v0.c2))=((NULL))))) GROUP BY v0.c0, vt0.c0, rt0.c2, rt0.c1, vt1.c0, rt0.c0 HAVING (NOT (TOTAL(COUNT(*)))) UNION ALL SELECT ALL v0.c0, vt0.c0, rt0.c2, rt0.c1, vt1.c0, rt0.c0 FROM v0, vt1, rt0 FULL OUTER JOIN vt0 ON (((((rt0.c0))<=((v0.c0))))GLOB((((v0.c2))==((NULL))))) GROUP BY v0.c0, vt0.c0, rt0.c2, rt0.c1, vt1.c0, rt0.c0 HAVING ((TOTAL(COUNT(*))) ISNULL);
SELECT * FROM vt0 FULL OUTER JOIN v0 ON CAST(((v0.c2) BETWEEN (v0.c0) AND (v0.c1)) AS REAL);
SELECT * FROM vt0 FULL OUTER JOIN v0 ON CAST(((v0.c2) BETWEEN (v0.c0) AND (v0.c1)) AS REAL) WHERE (v0.c1) UNION ALL SELECT ALL * FROM vt0 FULL OUTER JOIN v0 ON CAST(((v0.c2) BETWEEN (v0.c0) AND (v0.c1)) AS REAL) WHERE ((NOT (v0.c1))) UNION ALL SELECT ALL * FROM vt0 FULL OUTER JOIN v0 ON CAST(((v0.c2) BETWEEN (v0.c0) AND (v0.c1)) AS REAL) WHERE (((v0.c1) ISNULL));
SELECT * FROM vt0 FULL OUTER JOIN v0 ON CAST(((v0.c2) BETWEEN (v0.c0) AND (v0.c1)) AS REAL);
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2, vt1.c0 FROM vt1, rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2, vt1.c0 FROM vt1, rt0 WHERE (((NULL) NOTNULL)) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2, vt1.c0 FROM vt1, rt0 WHERE ((NOT (((NULL) NOTNULL)))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2, vt1.c0 FROM vt1, rt0 WHERE (((((NULL) NOTNULL)) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2, vt1.c0 FROM vt1, rt0;
SELECT ALL vt0.c0, v0.c2 FROM vt0, v0, vt1 GROUP BY vt0.c0, v0.c2;
SELECT vt0.c0, v0.c2 FROM vt0, v0, vt1 WHERE (vt0.c0) GROUP BY vt0.c0, v0.c2 UNION SELECT ALL vt0.c0, v0.c2 FROM vt0, v0, vt1 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0, v0.c2 UNION SELECT ALL vt0.c0, v0.c2 FROM vt0, v0, vt1 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0, v0.c2;
SELECT ALL vt0.c0, v0.c2 FROM vt0, v0, vt1 GROUP BY vt0.c0, v0.c2;
SELECT rt0.c1 FROM vt0, rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM vt0, rt0 GROUP BY rt0.c1 HAVING MIN(MIN(MIN(rt0.c0)) COLLATE BINARY) UNION ALL SELECT rt0.c1 FROM vt0, rt0 GROUP BY rt0.c1 HAVING (NOT (MIN(MIN(MIN(rt0.c0)) COLLATE BINARY))) UNION ALL SELECT rt0.c1 FROM vt0, rt0 GROUP BY rt0.c1 HAVING ((MIN(MIN(MIN(rt0.c0)) COLLATE BINARY)) ISNULL);
SELECT * FROM rt0, vt1, vt0;
SELECT ALL * FROM rt0, vt1, vt0 WHERE (UNLIKELY(rt0.c2)) UNION ALL SELECT ALL * FROM rt0, vt1, vt0 WHERE ((NOT (UNLIKELY(rt0.c2)))) UNION ALL SELECT * FROM rt0, vt1, vt0 WHERE (((UNLIKELY(rt0.c2)) ISNULL));
SELECT * FROM rt0, vt1, vt0;
SELECT DISTINCT vt1.c0, v0.c1, rt0.c0, v0.c2 FROM v0, rt0, vt1, vt0;
SELECT DISTINCT vt1.c0, v0.c1, rt0.c0, v0.c2 FROM v0, rt0, vt1, vt0 WHERE (('8FBS' COLLATE BINARY IN (rt0.c1 COLLATE RTRIM))) UNION SELECT DISTINCT vt1.c0, v0.c1, rt0.c0, v0.c2 FROM v0, rt0, vt1, vt0 WHERE ((NOT (('8FBS' COLLATE BINARY IN (rt0.c1 COLLATE RTRIM))))) UNION SELECT DISTINCT vt1.c0, v0.c1, rt0.c0, v0.c2 FROM v0, rt0, vt1, vt0 WHERE (((('8FBS' COLLATE BINARY IN (rt0.c1 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT vt1.c0, v0.c1, rt0.c0, v0.c2 FROM v0, rt0, vt1, vt0;
SELECT ALL rt0.c2, v0.c0, v0.c2, rt0.c0, vt0.c0, v0.c1, rt0.c1 FROM v0, vt0, rt0, vt1 GROUP BY rt0.c2, v0.c0, v0.c2, rt0.c0, vt0.c0, v0.c1, rt0.c1;
SELECT ALL rt0.c2, v0.c0, v0.c2, rt0.c0, vt0.c0, v0.c1, rt0.c1 FROM v0, vt0, rt0, vt1 WHERE (0.49889997013434273) GROUP BY rt0.c2, v0.c0, v0.c2, rt0.c0, vt0.c0, v0.c1, rt0.c1 UNION SELECT ALL rt0.c2, v0.c0, v0.c2, rt0.c0, vt0.c0, v0.c1, rt0.c1 FROM v0, vt0, rt0, vt1 WHERE ((NOT (0.49889997013434273))) GROUP BY rt0.c2, v0.c0, v0.c2, rt0.c0, vt0.c0, v0.c1, rt0.c1 UNION SELECT rt0.c2, v0.c0, v0.c2, rt0.c0, vt0.c0, v0.c1, rt0.c1 FROM v0, vt0, rt0, vt1 WHERE (((0.49889997013434273) ISNULL)) GROUP BY rt0.c2, v0.c0, v0.c2, rt0.c0, vt0.c0, v0.c1, rt0.c1;
SELECT ALL rt0.c2, v0.c0, v0.c2, rt0.c0, vt0.c0, v0.c1, rt0.c1 FROM v0, vt0, rt0, vt1 GROUP BY rt0.c2, v0.c0, v0.c2, rt0.c0, vt0.c0, v0.c1, rt0.c1;
SELECT ALL rt0.c2, vt1.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c0, rt0.c1;
SELECT rt0.c2, vt1.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c0, rt0.c1 HAVING TOTAL(COUNT(*)) COLLATE BINARY UNION ALL SELECT rt0.c2, vt1.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c0, rt0.c1 HAVING (NOT (TOTAL(COUNT(*)) COLLATE BINARY)) UNION ALL SELECT rt0.c2, vt1.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c0, rt0.c1 HAVING ((TOTAL(COUNT(*)) COLLATE BINARY) ISNULL);
SELECT ALL v0.c0, rt0.c0, v0.c2, rt0.c2 FROM rt0, v0;
SELECT ALL v0.c0, rt0.c0, v0.c2, rt0.c2 FROM rt0, v0 WHERE (((x'') BETWEEN (((v0.c1)LIKE(v0.c0))) AND ((0X43771ea2 IN ())))) UNION ALL SELECT v0.c0, rt0.c0, v0.c2, rt0.c2 FROM rt0, v0 WHERE ((NOT (((x'') BETWEEN (((v0.c1)LIKE(v0.c0))) AND ((0x43771ea2 IN ())))))) UNION ALL SELECT v0.c0, rt0.c0, v0.c2, rt0.c2 FROM rt0, v0 WHERE (((((x'') BETWEEN (((v0.c1)LIKE(v0.c0))) AND ((0X43771ea2 IN ())))) ISNULL));
SELECT ALL v0.c0, rt0.c0, v0.c2, rt0.c2 FROM rt0, v0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (json_type(0.25016855103119096)) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (json_type(0.25016855103119096)))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((json_type(0.25016855103119096)) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT v0.c1, v0.c0, v0.c2, vt0.c0 FROM v0, vt0 GROUP BY v0.c1, v0.c0, v0.c2, vt0.c0;
SELECT ALL v0.c1, v0.c0, v0.c2, vt0.c0 FROM v0, vt0 WHERE (((NULL) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (((v0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) GROUP BY v0.c1, v0.c0, v0.c2, vt0.c0 UNION SELECT ALL v0.c1, v0.c0, v0.c2, vt0.c0 FROM v0, vt0 WHERE ((NOT (((NULL) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (((v0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0))))))) GROUP BY v0.c1, v0.c0, v0.c2, vt0.c0 UNION SELECT v0.c1, v0.c0, v0.c2, vt0.c0 FROM v0, vt0 WHERE (((((NULL) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (((v0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL)) GROUP BY v0.c1, v0.c0, v0.c2, vt0.c0;
SELECT v0.c1, v0.c0, v0.c2, vt0.c0 FROM v0, vt0 GROUP BY v0.c1, v0.c0, v0.c2, vt0.c0;
SELECT v0.c1, v0.c0, vt0.c0, rt0.c2 FROM vt0, v0 LEFT OUTER JOIN rt0 ON 0.7930550029478497 COLLATE BINARY COLLATE BINARY GROUP BY v0.c1, v0.c0, vt0.c0, rt0.c2;
SELECT v0.c1, v0.c0, vt0.c0, rt0.c2 FROM vt0, v0 LEFT OUTER JOIN rt0 ON 0.7930550029478497 COLLATE BINARY COLLATE BINARY GROUP BY v0.c1, v0.c0, vt0.c0, rt0.c2 HAVING NULL UNION ALL SELECT ALL v0.c1, v0.c0, vt0.c0, rt0.c2 FROM vt0, v0 LEFT OUTER JOIN rt0 ON 0.7930550029478497 COLLATE BINARY COLLATE BINARY GROUP BY v0.c1, v0.c0, vt0.c0, rt0.c2 HAVING (NOT (NULL)) UNION ALL SELECT v0.c1, v0.c0, vt0.c0, rt0.c2 FROM vt0, v0 LEFT OUTER JOIN rt0 ON 0.7930550029478497 COLLATE BINARY COLLATE BINARY GROUP BY v0.c1, v0.c0, vt0.c0, rt0.c2 HAVING ((NULL) ISNULL);
SELECT v0.c1, v0.c0, vt0.c0, rt0.c2 FROM vt0, v0 LEFT OUTER JOIN rt0 ON 0.7930550029478497 COLLATE BINARY COLLATE BINARY GROUP BY v0.c1, v0.c0, vt0.c0, rt0.c2;
SELECT v0.c1, v0.c0, vt0.c0, rt0.c2 FROM vt0, v0 LEFT OUTER JOIN rt0 ON 0.7930550029478497 COLLATE BINARY COLLATE BINARY GROUP BY v0.c1, v0.c0, vt0.c0, rt0.c2 HAVING NULL UNION ALL SELECT ALL v0.c1, v0.c0, vt0.c0, rt0.c2 FROM vt0, v0 LEFT OUTER JOIN rt0 ON 0.7930550029478497 COLLATE BINARY COLLATE BINARY GROUP BY v0.c1, v0.c0, vt0.c0, rt0.c2 HAVING (NOT (NULL)) UNION ALL SELECT v0.c1, v0.c0, vt0.c0, rt0.c2 FROM vt0, v0 LEFT OUTER JOIN rt0 ON 0.7930550029478497 COLLATE BINARY COLLATE BINARY GROUP BY v0.c1, v0.c0, vt0.c0, rt0.c2 HAVING ((NULL) ISNULL);
SELECT v0.c1, v0.c0, vt0.c0, rt0.c2 FROM vt0, v0 LEFT OUTER JOIN rt0 ON 0.7930550029478497 COLLATE BINARY COLLATE BINARY GROUP BY v0.c1, v0.c0, vt0.c0, rt0.c2;
SELECT ALL MAX(((((((((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))AND((NULL IN (rt0.c2)))))AND(8.701979838869889E-4)))AND((((vt0.c0, rt0.c0, rt0.c0))>((vt0.c0, vt1.c0, rt0.c2))))))OR(rt0.c2 COLLATE BINARY))) FROM vt1, rt0, vt0;
SELECT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (CAST(((((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) AS INTEGER)) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (CAST(((((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) AS INTEGER)))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((CAST(((((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) AS INTEGER)) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT v0.c0 FROM v0, vt1, rt0, vt0;
SELECT DISTINCT v0.c0 FROM v0, vt1, rt0, vt0 WHERE (CAST(((rt0.c2)!=(rt0.c2)) AS BLOB)) UNION SELECT DISTINCT v0.c0 FROM v0, vt1, rt0, vt0 WHERE ((NOT (CAST(((rt0.c2)!=(rt0.c2)) AS BLOB)))) UNION SELECT DISTINCT v0.c0 FROM v0, vt1, rt0, vt0 WHERE (((CAST(((rt0.c2)!=(rt0.c2)) AS BLOB)) ISNULL));
SELECT DISTINCT v0.c0 FROM v0, vt1, rt0, vt0;
SELECT rt0.c1, v0.c0, rt0.c2 FROM rt0, vt1, vt0, v0 GROUP BY rt0.c1, v0.c0, rt0.c2;
SELECT rt0.c1, v0.c0, rt0.c2 FROM rt0 NOT INDEXED, vt1, vt0, v0 WHERE ('1517945141') GROUP BY rt0.c1, v0.c0, rt0.c2 UNION SELECT rt0.c1, v0.c0, rt0.c2 FROM rt0, vt1, vt0, v0 WHERE ((NOT ('1517945141'))) GROUP BY rt0.c1, v0.c0, rt0.c2 UNION SELECT ALL rt0.c1, v0.c0, rt0.c2 FROM rt0, vt1, vt0, v0 WHERE ((('1517945141') ISNULL)) GROUP BY rt0.c1, v0.c0, rt0.c2;
SELECT rt0.c1, v0.c0, rt0.c2 FROM rt0, vt1, vt0, v0 GROUP BY rt0.c1, v0.c0, rt0.c2;
SELECT v0.c0, vt1.c0 FROM rt0 CROSS JOIN vt1 ON (NOT (x'')) FULL OUTER JOIN v0 ON ((((((NULL) BETWEEN (v0.c0) AND (rt0.c1)))AND(rt0.c2)))AND((~ (v0.c0)))) GROUP BY v0.c0, vt1.c0;
SELECT v0.c0, vt1.c0 FROM rt0 CROSS JOIN vt1 ON (NOT (x'')) FULL OUTER JOIN v0 ON ((((((NULL) BETWEEN (v0.c0) AND (rt0.c1)))AND(rt0.c2)))AND((~ (v0.c0)))) GROUP BY v0.c0, vt1.c0 HAVING rt0.c1 UNION ALL SELECT v0.c0, vt1.c0 FROM rt0 CROSS JOIN vt1 ON (NOT (x'')) FULL OUTER JOIN v0 ON ((((((NULL) BETWEEN (v0.c0) AND (rt0.c1)))AND(rt0.c2)))AND((~ (v0.c0)))) GROUP BY v0.c0, vt1.c0 HAVING (NOT (rt0.c1)) UNION ALL SELECT ALL v0.c0, vt1.c0 FROM rt0 CROSS JOIN vt1 ON (NOT (x'')) FULL OUTER JOIN v0 ON ((((((NULL) BETWEEN (v0.c0) AND (rt0.c1)))AND(rt0.c2)))AND((~ (v0.c0)))) GROUP BY v0.c0, vt1.c0 HAVING ((rt0.c1) ISNULL);
SELECT v0.c0, vt1.c0 FROM rt0 CROSS JOIN vt1 ON (NOT (x'')) FULL OUTER JOIN v0 ON ((((((NULL) BETWEEN (v0.c0) AND (rt0.c1)))AND(rt0.c2)))AND((~ (v0.c0)))) GROUP BY v0.c0, vt1.c0;
SELECT v0.c0, vt1.c0 FROM rt0 CROSS JOIN vt1 ON (NOT (x'')) FULL OUTER JOIN v0 ON ((((((NULL) BETWEEN (v0.c0) AND (rt0.c1)))AND(rt0.c2)))AND((~ (v0.c0)))) GROUP BY v0.c0, vt1.c0 HAVING rt0.c1 UNION ALL SELECT v0.c0, vt1.c0 FROM rt0 CROSS JOIN vt1 ON (NOT (x'')) FULL OUTER JOIN v0 ON ((((((NULL) BETWEEN (v0.c0) AND (rt0.c1)))AND(rt0.c2)))AND((~ (v0.c0)))) GROUP BY v0.c0, vt1.c0 HAVING (NOT (rt0.c1)) UNION ALL SELECT ALL v0.c0, vt1.c0 FROM rt0 CROSS JOIN vt1 ON (NOT (x'')) FULL OUTER JOIN v0 ON ((((((NULL) BETWEEN (v0.c0) AND (rt0.c1)))AND(rt0.c2)))AND((~ (v0.c0)))) GROUP BY v0.c0, vt1.c0 HAVING ((rt0.c1) ISNULL);
SELECT v0.c0, vt1.c0 FROM rt0 CROSS JOIN vt1 ON (NOT (x'')) FULL OUTER JOIN v0 ON ((((((NULL) BETWEEN (v0.c0) AND (rt0.c1)))AND(rt0.c2)))AND((~ (v0.c0)))) GROUP BY v0.c0, vt1.c0;
SELECT ALL * FROM vt1, rt0;
SELECT * FROM vt1, rt0 WHERE ((- (((rt0.c2) IS TRUE)))) UNION ALL SELECT * FROM vt1, rt0 WHERE ((NOT ((- (((rt0.c2) IS TRUE)))))) UNION ALL SELECT ALL * FROM vt1, rt0 WHERE ((((- (((rt0.c2) IS TRUE)))) ISNULL));
SELECT ALL * FROM vt1, rt0;
SELECT DISTINCT vt1.c0 FROM rt0, vt1;
SELECT DISTINCT vt1.c0 FROM rt0, vt1 WHERE ((((((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c0))))==((vt1.c0 COLLATE BINARY)))) UNION SELECT DISTINCT vt1.c0 FROM rt0, vt1 WHERE ((NOT ((((((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c0))))==((vt1.c0 COLLATE BINARY)))))) UNION SELECT DISTINCT vt1.c0 FROM rt0, vt1 WHERE ((((((((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c0))))=((vt1.c0 COLLATE BINARY)))) ISNULL));
SELECT DISTINCT vt1.c0 FROM rt0, vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((vt1.c0)||(0.6882845355457965))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0)||(0.6882845355457965))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((vt1.c0)||(0.6882845355457965))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt0.c1, rt0.c2 FROM vt1, vt0, v0, rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM vt1, vt0, v0, rt0 GROUP BY rt0.c1, rt0.c2 HAVING rt0.c0 UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM vt1, vt0, v0, rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (rt0.c0)) UNION ALL SELECT rt0.c1, rt0.c2 FROM vt1, vt0, v0, rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((rt0.c0) ISNULL);
SELECT rt0.c1, rt0.c2 FROM vt1, vt0, v0, rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM vt1, vt0, v0, rt0 GROUP BY rt0.c1, rt0.c2 HAVING rt0.c0 UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM vt1, vt0, v0, rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (rt0.c0)) UNION ALL SELECT rt0.c1, rt0.c2 FROM vt1, vt0, v0, rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((rt0.c0) ISNULL);
SELECT rt0.c1, rt0.c2 FROM vt1, vt0, v0, rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL * FROM vt0, vt1, rt0;
SELECT ALL * FROM vt0, vt1, rt0 WHERE (NULLIF(DISTINCT CASE vt0.c0  WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c2 THEN vt1.c0 WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c1 END, rt0.c0 COLLATE BINARY)) UNION ALL SELECT ALL * FROM vt0, vt1, rt0 WHERE ((NOT (NULLIF(DISTINCT CASE vt0.c0  WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c2 THEN vt1.c0 WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c1 END, rt0.c0 COLLATE BINARY)))) UNION ALL SELECT * FROM vt0, vt1, rt0 WHERE (((NULLIF(DISTINCT CASE vt0.c0  WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c2 THEN vt1.c0 WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c1 END, rt0.c0 COLLATE BINARY)) ISNULL));
SELECT ALL * FROM vt0, vt1, rt0;
SELECT DISTINCT vt0.c0, v0.c2 FROM v0, vt0 CROSS JOIN rt0 ON ((((((((((rt0.c1) IS FALSE))OR(((((rt0.c1)OR(v0.c2)))AND(v0.c2)))))OR(rt0.c0 COLLATE RTRIM)))AND((((rt0.c0))<((v0.c2))))))AND((((rt0.c0))>=((rt0.c0)))));
SELECT DISTINCT vt0.c0, v0.c2 FROM v0, vt0 CROSS JOIN rt0 ON ((((((((((rt0.c1) IS FALSE))OR(((((rt0.c1)OR(v0.c2)))AND(v0.c2)))))OR(rt0.c0 COLLATE RTRIM)))AND((((rt0.c0))<((v0.c2))))))AND((((rt0.c0))>=((rt0.c0))))) WHERE ((((rt0.c0, vt0.c0, rt0.c0)) BETWEEN ((CAST(rt0.c1 AS TEXT), ((vt0.c0) BETWEEN (rt0.c2) AND (v0.c0)), (((rt0.c0)) NOT BETWEEN ((x'')) AND ((vt0.c0))))) AND ((((((rt0.c2)AND(v0.c0)))AND(rt0.c1)), ((v0.c0)&(rt0.c2)), v0.c2 COLLATE NOCASE)))) UNION SELECT DISTINCT vt0.c0, v0.c2 FROM v0, vt0 CROSS JOIN rt0 ON ((((((((((rt0.c1) IS FALSE))OR(((((rt0.c1)OR(v0.c2)))AND(v0.c2)))))OR(rt0.c0 COLLATE RTRIM)))AND((((rt0.c0))<((v0.c2))))))AND((((rt0.c0))>=((rt0.c0))))) WHERE ((NOT ((((rt0.c0, vt0.c0, rt0.c0)) BETWEEN ((CAST(rt0.c1 AS TEXT), ((vt0.c0) BETWEEN (rt0.c2) AND (v0.c0)), (((rt0.c0)) NOT BETWEEN ((x'')) AND ((vt0.c0))))) AND ((((((rt0.c2)AND(v0.c0)))AND(rt0.c1)), ((v0.c0)&(rt0.c2)), v0.c2 COLLATE NOCASE)))))) UNION SELECT DISTINCT vt0.c0, v0.c2 FROM v0, vt0 CROSS JOIN rt0 ON ((((((((((rt0.c1) IS FALSE))OR(((((rt0.c1)OR(v0.c2)))AND(v0.c2)))))OR(rt0.c0 COLLATE RTRIM)))AND((((rt0.c0))<((v0.c2))))))AND((((rt0.c0))>=((rt0.c0))))) WHERE ((((((rt0.c0, vt0.c0, rt0.c0)) BETWEEN ((CAST(rt0.c1 AS TEXT), ((vt0.c0) BETWEEN (rt0.c2) AND (v0.c0)), (((rt0.c0)) NOT BETWEEN ((x'')) AND ((vt0.c0))))) AND ((((((rt0.c2)AND(v0.c0)))AND(rt0.c1)), ((v0.c0)&(rt0.c2)), v0.c2 COLLATE NOCASE)))) ISNULL));
SELECT DISTINCT vt0.c0, v0.c2 FROM v0, vt0 CROSS JOIN rt0 ON ((((((((((rt0.c1) IS FALSE))OR(((((rt0.c1)OR(v0.c2)))AND(v0.c2)))))OR(rt0.c0 COLLATE RTRIM)))AND((((rt0.c0))<((v0.c2))))))AND((((rt0.c0))>=((rt0.c0)))));
SELECT vt1.c0, rt0.c2 FROM vt0, vt1 FULL OUTER JOIN rt0 ON rt0.c0 GROUP BY vt1.c0, rt0.c2;
SELECT vt1.c0, rt0.c2 FROM vt0, vt1 FULL OUTER JOIN rt0 ON rt0.c0 WHERE (((CAST(rt0.c1 AS BLOB)) BETWEEN (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND (''))) GROUP BY vt1.c0, rt0.c2 UNION SELECT ALL vt1.c0, rt0.c2 FROM vt0, vt1 FULL OUTER JOIN rt0 ON rt0.c0 WHERE ((NOT (((CAST(rt0.c1 AS BLOB)) BETWEEN (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND (''))))) GROUP BY vt1.c0, rt0.c2 UNION SELECT vt1.c0, rt0.c2 FROM vt0, vt1 FULL OUTER JOIN rt0 ON rt0.c0 WHERE (((((CAST(rt0.c1 AS BLOB)) BETWEEN (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND (''))) ISNULL)) GROUP BY vt1.c0, rt0.c2;
SELECT vt1.c0, rt0.c2 FROM vt0, vt1 FULL OUTER JOIN rt0 ON rt0.c0 GROUP BY vt1.c0, rt0.c2;
SELECT ALL rt0.c0, vt0.c0 FROM vt0, vt1, rt0, v0 GROUP BY rt0.c0, vt0.c0;
SELECT rt0.c0, vt0.c0 FROM vt0, vt1, rt0, v0 GROUP BY rt0.c0, vt0.c0 HAVING COUNT(COUNT(rt0.c1)) COLLATE NOCASE UNION ALL SELECT rt0.c0, vt0.c0 FROM vt0, vt1, rt0 NOT INDEXED, v0 GROUP BY rt0.c0, vt0.c0 HAVING (NOT (COUNT(COUNT(rt0.c1)) COLLATE NOCASE)) UNION ALL SELECT rt0.c0, vt0.c0 FROM vt0, vt1, rt0, v0 GROUP BY rt0.c0, vt0.c0 HAVING ((COUNT(COUNT(rt0.c1)) COLLATE NOCASE) ISNULL);
SELECT ALL vt1.c0 FROM vt1, vt0;
SELECT vt1.c0 FROM vt1, vt0 WHERE ((((vt0.c0))=((vt1.c0))) COLLATE RTRIM) UNION ALL SELECT vt1.c0 FROM vt1, vt0 WHERE ((NOT ((((vt0.c0))=((vt1.c0))) COLLATE RTRIM))) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt0 WHERE ((((((vt0.c0))=((vt1.c0))) COLLATE RTRIM) ISNULL));
SELECT ALL vt1.c0 FROM vt1, vt0;
SELECT DISTINCT v0.c2, rt0.c0, vt0.c0, v0.c1, rt0.c1, vt1.c0, rt0.c2 FROM v0, vt1, vt0, rt0;
SELECT DISTINCT v0.c2, rt0.c0, vt0.c0, v0.c1, rt0.c1, vt1.c0, rt0.c2 FROM v0, vt1, vt0, rt0 WHERE ((rt0.c1 COLLATE RTRIM IN ())) UNION SELECT DISTINCT v0.c2, rt0.c0, vt0.c0, v0.c1, rt0.c1, vt1.c0, rt0.c2 FROM v0, vt1, vt0, rt0 WHERE ((NOT ((rt0.c1 COLLATE RTRIM IN ())))) UNION SELECT DISTINCT v0.c2, rt0.c0, vt0.c0, v0.c1, rt0.c1, vt1.c0, rt0.c2 FROM v0, vt1, vt0, rt0 WHERE ((((rt0.c1 COLLATE RTRIM IN ())) ISNULL));
SELECT DISTINCT v0.c2, rt0.c0, vt0.c0, v0.c1, rt0.c1, vt1.c0, rt0.c2 FROM v0, vt1, vt0, rt0;
SELECT v0.c1, v0.c0, rt0.c2, rt0.c0, v0.c2 FROM v0, rt0 GROUP BY v0.c1, v0.c0, rt0.c2, rt0.c0, v0.c2;
SELECT v0.c1, v0.c0, rt0.c2, rt0.c0, v0.c2 FROM v0, rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c2) AND (v0.c1)))-(rt0.c2))) GROUP BY v0.c1, v0.c0, rt0.c2, rt0.c0, v0.c2 UNION SELECT v0.c1, v0.c0, rt0.c2, rt0.c0, v0.c2 FROM v0, rt0 WHERE ((NOT (((((rt0.c1) BETWEEN (rt0.c2) AND (v0.c1)))-(rt0.c2))))) GROUP BY v0.c1, v0.c0, rt0.c2, rt0.c0, v0.c2 UNION SELECT v0.c1, v0.c0, rt0.c2, rt0.c0, v0.c2 FROM v0, rt0 WHERE (((((((rt0.c1) BETWEEN (rt0.c2) AND (v0.c1)))-(rt0.c2))) ISNULL)) GROUP BY v0.c1, v0.c0, rt0.c2, rt0.c0, v0.c2;
SELECT v0.c1, v0.c0, rt0.c2, rt0.c0, v0.c2 FROM v0, rt0 GROUP BY v0.c1, v0.c0, rt0.c2, rt0.c0, v0.c2;
