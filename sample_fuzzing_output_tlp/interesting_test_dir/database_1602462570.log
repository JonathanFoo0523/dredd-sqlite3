-- Time: 2024/06/09 12:42:55
-- Database: database70
-- Database version: 3.40.0
-- seed value: 1602462570
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0); -- 0ms;
CREATE VIRTUAL TABLE rt1 USING rtree_i32(c0, c1, c2, +c3 BLOB ); -- 0ms;
PRAGMA main.cache_spill = -7449422733205487057; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
PRAGMA wal_checkpoint(PASSIVE); -- 0ms;
UPDATE OR IGNORE rt1 SET c0=x'' WHERE x'83a7'; -- 0ms;
ANALYZE main; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
PRAGMA temp.recursive_triggers; -- 0ms;
PRAGMA threads; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 3); -- 0ms;
PRAGMA main.default_cache_size = -650561003; -- 1ms;
ANALYZE sqlite_master; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=x'fded'; -- 0ms;
REINDEX; -- 0ms;
UPDATE OR REPLACE vt0 SET c0=x'', c0='E5Ꞔ' WHERE ((vt0.c0 IN ()) IN ()); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt1(c0, c1, c3) VALUES ('', NULL, NULL), (NULL, NULL, '-588816436'), ('1775870219', x'', '30672754'), ('-384313045', NULL, 'XU'), ('', 0.31080341984235815, '329522907'); -- 4ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR IGNORE rt1 SET (c3, c1)=('0.31080341984235815', '477567237'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA wal_checkpoint(TRUNCATE); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
CREATE TEMPORARY TABLE t0 (c0 INT ); -- 1ms;
UPDATE vt0 SET c0=x'2b27'; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
INSERT OR REPLACE INTO t0(c0) VALUES (x'35b2'), (0.7232420066098618), (NULL), (NULL), ('䅧E'); -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES (''); -- 0ms;
ANALYZE; -- 0ms;
PRAGMA wal_autocheckpoint = -8080107245933625010; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
PRAGMA temp.shrink_memory; -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES (x''); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
UPDATE OR IGNORE t0 SET c0=0.5134739288300463; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (NULL), (x'0b9d'), (NULL), (x'0cbb6d1a'), (3.29522907E8); -- 0ms;
UPDATE OR IGNORE rt1 SET (c3)=(NULL); -- 0ms;
ANALYZE vt0; -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 497760230); -- 0ms;
PRAGMA shrink_memory; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES (x'dedb'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=1711999380,7');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-1964910061,11');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 10); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
SELECT rtreecheck('rt1'); -- 0ms;
PRAGMA temp.threads = -1387683469173592547; -- 0ms;
UPDATE vt0 SET (c0)=(0Xffffffffbbf8acd8); -- 0ms;
UPDATE OR IGNORE rt1 SET (c0, c3)=('329522907', x''); -- 1ms;
VACUUM main; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
CREATE VIEW v0(c0) AS SELECT DISTINCT (CAST(vt0.c0 AS NUMERIC) IN ()) FROM rt1 GROUP BY ((rt1.c2 COLLATE BINARY) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO rt1(c2, c1, c0, c3) VALUES (NULL, 64246140, x'', x''); -- 0ms;
PRAGMA temp.reverse_unordered_selects; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i39 ON t0((((c0))>((c0))) COLLATE NOCASE DESC); -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i82 ON t0((- (((c0) NOTNULL))) COLLATE RTRIM ASC); -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i68 ON t0((((NOT (c0)))-(x'a656')) ASC) WHERE ((((CASE WHEN c0 THEN c0 WHEN c0 THEN c0 WHEN ',gY!M' THEN c0 ELSE c0 END)AND((c0 IN (c0)))))OR(MAX(c0, c0))); -- 0ms;
CREATE INDEX IF NOT EXISTS i30 ON t0(CASE c0  WHEN c0 COLLATE RTRIM THEN ((c0) BETWEEN (c0) AND (c0)) END COLLATE BINARY); -- 0ms;
UPDATE t0 SET (c0, c0, c0)=(x'', NULL, x'') WHERE ('' IN ()) COLLATE BINARY; -- 0ms;
CREATE UNIQUE INDEX i52 ON t0(json_object((((c0)) NOT BETWEEN ((c0)) AND ((c0))), c0) COLLATE NOCASE) WHERE (~ (((1.71199938E9)+(c0)))); -- 1ms;
CREATE UNIQUE INDEX i14 ON t0(rtreenode(((c0)||(c0)), c0) COLLATE RTRIM) WHERE JULIANDAY(c0 COLLATE NOCASE, (c0 IN (c0)), ((c0)IS(c0))); -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i39 ON t0(c0 COLLATE NOCASE); -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i94 ON t0(((((c0)&(c0)))<<(x'')) DESC); -- 0ms;
CREATE INDEX IF NOT EXISTS i14 ON t0((CAST(c0 AS REAL) IN (CASE WHEN c0 THEN c0 ELSE c0 END, ((c0)/(c0)))) ASC) WHERE json_remove(((c0)<(c0)), ((c0) NOT BETWEEN (c0) AND (c0))); -- 0ms;
CREATE INDEX i24 ON t0(CASE WHEN ((((c0)OR(c0)))AND(0.31080341984235815)) THEN (c0 IN (c0, c0)) WHEN ((c0)>=(c0)) THEN ((NULL)<<(c0)) WHEN c0 THEN (c0 IN ()) END COLLATE RTRIM); -- 0ms;
UPDATE OR REPLACE rt1 SET c0='-2042348718'; -- 0ms;
VACUUM; -- 1ms;
PRAGMA main.foreign_keys = true; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 7); -- 1ms;
INSERT OR IGNORE INTO vt0 VALUES (x''); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
DELETE FROM rt1; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
UPDATE OR IGNORE vt0 SET c0=0.5134739288300463, c0=''; -- 0ms;
PRAGMA wal_autocheckpoint = 5780708334651671884; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES (NULL); -- 0ms;
UPDATE OR IGNORE t0 SET c0=3.0672754E7; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-1680747904,9');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=9'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 6); -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL rt1.c3 FROM v0, rt1 RIGHT OUTER JOIN t0 ON ((((rt1.c0)/(rt1.c3)))/(((rt1.c3)-(rt1.c2))));
SELECT rt1.c3 FROM v0, rt1 RIGHT OUTER JOIN t0 ON ((((rt1.c0)/(rt1.c3)))/(((rt1.c3)-(rt1.c2)))) WHERE ((((t0.c0 COLLATE NOCASE))>((((t0.c0)>=(0.31080341984235815)))))) UNION ALL SELECT ALL rt1.c3 FROM v0, rt1 RIGHT OUTER JOIN t0 ON ((((rt1.c0)/(rt1.c3)))/(((rt1.c3)-(rt1.c2)))) WHERE ((NOT ((((t0.c0 COLLATE NOCASE))>((((t0.c0)>=(0.31080341984235815)))))))) UNION ALL SELECT ALL rt1.c3 FROM v0, rt1 RIGHT OUTER JOIN t0 ON ((((rt1.c0)/(rt1.c3)))/(((rt1.c3)-(rt1.c2)))) WHERE ((((((t0.c0 COLLATE NOCASE))>((((t0.c0)>=(0.31080341984235815)))))) ISNULL));
SELECT ALL rt1.c3 FROM v0, rt1 RIGHT OUTER JOIN t0 ON ((((rt1.c0)/(rt1.c3)))/(((rt1.c3)-(rt1.c2))));
SELECT DISTINCT * FROM rt1, vt0, v0;
SELECT DISTINCT * FROM rt1, vt0, v0 WHERE (rt1.c1) UNION SELECT DISTINCT * FROM rt1, vt0, v0 WHERE ((NOT (rt1.c1))) UNION SELECT DISTINCT * FROM rt1, vt0, v0 WHERE (((rt1.c1) ISNULL));
SELECT DISTINCT * FROM rt1, vt0, v0;
SELECT rt1.c2, rt1.c3, v0.c0, t0.c0, rt1.c1, rt1.c0 FROM t0, rt1 INNER JOIN v0 ON CAST(((rt1.c1)<<(rt1.c1)) AS NUMERIC) GROUP BY rt1.c2, rt1.c3, v0.c0, t0.c0, rt1.c1, rt1.c0;
SELECT ALL rt1.c2, rt1.c3, v0.c0, t0.c0, rt1.c1, rt1.c0 FROM t0, rt1 INNER JOIN v0 ON CAST(((rt1.c1)<<(rt1.c1)) AS NUMERIC) WHERE (CAST(((v0.c0) NOT NULL) AS BLOB)) GROUP BY rt1.c2, rt1.c3, v0.c0, t0.c0, rt1.c1, rt1.c0 UNION SELECT ALL rt1.c2, rt1.c3, v0.c0, t0.c0, rt1.c1, rt1.c0 FROM t0, rt1 INNER JOIN v0 ON CAST(((rt1.c1)<<(rt1.c1)) AS NUMERIC) WHERE ((NOT (CAST(((v0.c0) NOT NULL) AS BLOB)))) GROUP BY rt1.c2, rt1.c3, v0.c0, t0.c0, rt1.c1, rt1.c0 UNION SELECT rt1.c2, rt1.c3, v0.c0, t0.c0, rt1.c1, rt1.c0 FROM t0, rt1 INNER JOIN v0 ON CAST(((rt1.c1)<<(rt1.c1)) AS NUMERIC) WHERE (((CAST(((v0.c0) NOT NULL) AS BLOB)) ISNULL)) GROUP BY rt1.c2, rt1.c3, v0.c0, t0.c0, rt1.c1, rt1.c0;
SELECT rt1.c2, rt1.c3, v0.c0, t0.c0, rt1.c1, rt1.c0 FROM t0, rt1 INNER JOIN v0 ON CAST(((rt1.c1)<<(rt1.c1)) AS NUMERIC) GROUP BY rt1.c2, rt1.c3, v0.c0, t0.c0, rt1.c1, rt1.c0;
SELECT vt0.c0, v0.c0 FROM v0, t0, rt1, vt0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, t0, rt1, vt0 GROUP BY vt0.c0, v0.c0 HAVING ((AVG(GROUP_CONCAT(t0.c0)))||(COUNT(t0.c0))) UNION ALL SELECT vt0.c0, v0.c0 FROM v0, t0, rt1, vt0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (((AVG(GROUP_CONCAT(t0.c0)))||(COUNT(t0.c0))))) UNION ALL SELECT vt0.c0, v0.c0 FROM v0, t0, rt1, vt0 GROUP BY vt0.c0, v0.c0 HAVING ((((AVG(GROUP_CONCAT(t0.c0)))||(COUNT(t0.c0)))) ISNULL);
SELECT rt1.c3, rt1.c1, v0.c0, rt1.c2, rt1.c0, vt0.c0 FROM v0, rt1, vt0 NOT INDEXED;
SELECT rt1.c3, rt1.c1, v0.c0, rt1.c2, rt1.c0, vt0.c0 FROM v0, rt1, vt0 WHERE ((NOT ((rt1.c3 IN (rt1.c1, rt1.c3))))) UNION ALL SELECT rt1.c3, rt1.c1, v0.c0, rt1.c2, rt1.c0, vt0.c0 FROM v0, rt1, vt0 WHERE ((NOT ((NOT ((rt1.c3 IN (rt1.c1, rt1.c3))))))) UNION ALL SELECT rt1.c3, rt1.c1, v0.c0, rt1.c2, rt1.c0, vt0.c0 FROM v0, rt1, vt0 WHERE ((((NOT ((rt1.c3 IN (rt1.c1, rt1.c3))))) ISNULL));
SELECT rt1.c3, rt1.c1, v0.c0, rt1.c2, rt1.c0, vt0.c0 FROM v0, rt1, vt0 NOT INDEXED;
SELECT DISTINCT * FROM v0 CROSS JOIN rt1 ON CAST(COALESCE(DISTINCT rt1.c2, v0.c0) AS INTEGER);
SELECT DISTINCT * FROM v0 CROSS JOIN rt1 ON CAST(COALESCE(DISTINCT rt1.c2, v0.c0) AS INTEGER) WHERE ((((NOT (rt1.c2)))OR(CAST(v0.c0 AS TEXT)))) UNION SELECT DISTINCT * FROM v0 CROSS JOIN rt1 ON CAST(COALESCE(DISTINCT rt1.c2, v0.c0) AS INTEGER) WHERE ((NOT ((((NOT (rt1.c2)))OR(CAST(v0.c0 AS TEXT)))))) UNION SELECT DISTINCT * FROM v0 CROSS JOIN rt1 ON CAST(COALESCE(DISTINCT rt1.c2, v0.c0) AS INTEGER) WHERE ((((((NOT (rt1.c2)))OR(CAST(v0.c0 AS TEXT)))) ISNULL));
SELECT DISTINCT * FROM v0 CROSS JOIN rt1 ON CAST(COALESCE(DISTINCT rt1.c2, v0.c0) AS INTEGER);
SELECT rt1.c3, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c3, rt1.c0, rt1.c1;
SELECT ALL rt1.c3, rt1.c0, rt1.c1 FROM rt1 WHERE ((((((rt1.c1))==((rt1.c1))))>>(((rt1.c2) NOT NULL)))) GROUP BY rt1.c3, rt1.c0, rt1.c1 UNION SELECT rt1.c3, rt1.c0, rt1.c1 FROM rt1 WHERE ((NOT ((((((rt1.c1))==((rt1.c1))))>>(((rt1.c2) NOT NULL)))))) GROUP BY rt1.c3, rt1.c0, rt1.c1 UNION SELECT ALL rt1.c3, rt1.c0, rt1.c1 FROM rt1 WHERE ((((((((rt1.c1))==((rt1.c1))))>>(((rt1.c2) NOT NULL)))) ISNULL)) GROUP BY rt1.c3, rt1.c0, rt1.c1;
SELECT rt1.c3, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c3, rt1.c0, rt1.c1;
SELECT rt1.c0, rt1.c2, rt1.c3 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c3;
SELECT ALL rt1.c0, rt1.c2, rt1.c3 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c3 HAVING ((GROUP_CONCAT(rt1.c1))+('1775870219' COLLATE RTRIM)) UNION ALL SELECT rt1.c0, rt1.c2, rt1.c3 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c3 HAVING (NOT (((GROUP_CONCAT(rt1.c1))+('1775870219' COLLATE RTRIM)))) UNION ALL SELECT rt1.c0, rt1.c2, rt1.c3 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c3 HAVING ((((GROUP_CONCAT(rt1.c1))+('1775870219' COLLATE RTRIM))) ISNULL);
SELECT rt1.c0, rt1.c2, rt1.c3 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c3;
SELECT ALL rt1.c0, rt1.c2, rt1.c3 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c3 HAVING ((GROUP_CONCAT(rt1.c1))+('1775870219' COLLATE RTRIM)) UNION ALL SELECT rt1.c0, rt1.c2, rt1.c3 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c3 HAVING (NOT (((GROUP_CONCAT(rt1.c1))+('1775870219' COLLATE RTRIM)))) UNION ALL SELECT rt1.c0, rt1.c2, rt1.c3 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c3 HAVING ((((GROUP_CONCAT(rt1.c1))+('1775870219' COLLATE RTRIM))) ISNULL);
SELECT rt1.c0, rt1.c2, rt1.c3 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c3;
SELECT * FROM rt1 CROSS JOIN v0 ON CAST(((v0.c0) IS FALSE) AS TEXT) LEFT OUTER JOIN vt0 ON (NOT (((rt1.c3) ISNULL))) RIGHT OUTER JOIN t0 ON CAST((((vt0.c0, t0.c0, rt1.c2))!=((rt1.c1, rt1.c3, 0.5134739288300463))) AS BLOB);
SELECT * FROM rt1 CROSS JOIN v0 ON CAST(((v0.c0) IS FALSE) AS TEXT) LEFT OUTER JOIN vt0 ON (NOT (((rt1.c3) ISNULL))) RIGHT OUTER JOIN t0 ON CAST((((vt0.c0, t0.c0, rt1.c2))!=((rt1.c1, rt1.c3, 0.5134739288300463))) AS BLOB) WHERE (CASE WHEN ((rt1.c0) NOT NULL) THEN ((rt1.c3)<=(t0.c0)) WHEN (((rt1.c1, t0.c0, rt1.c0)) BETWEEN ((v0.c0, rt1.c3, rt1.c2)) AND ((t0.c0, t0.c0, t0.c0))) THEN ((rt1.c0) NOTNULL) WHEN ((rt1.c3)&('-2078249738')) THEN (((v0.c0, rt1.c1, rt1.c0, rt1.c1, rt1.c3)) NOT BETWEEN (('-1680747904', vt0.c0, t0.c0, rt1.c0, v0.c0)) AND ((rt1.c2, t0.c0, rt1.c0, x'', rt1.c0))) ELSE CAST(rt1.c2 AS INTEGER) END) UNION ALL SELECT * FROM rt1 CROSS JOIN v0 ON CAST(((v0.c0) IS FALSE) AS TEXT) LEFT OUTER JOIN vt0 ON (NOT (((rt1.c3) ISNULL))) RIGHT OUTER JOIN t0 ON CAST((((vt0.c0, t0.c0, rt1.c2))<>((rt1.c1, rt1.c3, 0.5134739288300463))) AS BLOB) WHERE ((NOT (CASE WHEN ((rt1.c0) NOT NULL) THEN ((rt1.c3)<=(t0.c0)) WHEN (((rt1.c1, t0.c0, rt1.c0)) BETWEEN ((v0.c0, rt1.c3, rt1.c2)) AND ((t0.c0, t0.c0, t0.c0))) THEN ((rt1.c0) NOTNULL) WHEN ((rt1.c3)&('-2078249738')) THEN (((v0.c0, rt1.c1, rt1.c0, rt1.c1, rt1.c3)) NOT BETWEEN (('-1680747904', vt0.c0, t0.c0, rt1.c0, v0.c0)) AND ((rt1.c2, t0.c0, rt1.c0, x'', rt1.c0))) ELSE CAST(rt1.c2 AS INTEGER) END))) UNION ALL SELECT * FROM rt1 CROSS JOIN v0 ON CAST(((v0.c0) IS FALSE) AS TEXT) LEFT OUTER JOIN vt0 ON (NOT (((rt1.c3) ISNULL))) RIGHT OUTER JOIN t0 ON CAST((((vt0.c0, t0.c0, rt1.c2))<>((rt1.c1, rt1.c3, 0.5134739288300463))) AS BLOB) WHERE (((CASE WHEN ((rt1.c0) NOT NULL) THEN ((rt1.c3)<=(t0.c0)) WHEN (((rt1.c1, t0.c0, rt1.c0)) BETWEEN ((v0.c0, rt1.c3, rt1.c2)) AND ((t0.c0, t0.c0, t0.c0))) THEN ((rt1.c0) NOTNULL) WHEN ((rt1.c3)&('-2078249738')) THEN (((v0.c0, rt1.c1, rt1.c0, rt1.c1, rt1.c3)) NOT BETWEEN (('-1680747904', vt0.c0, t0.c0, rt1.c0, v0.c0)) AND ((rt1.c2, t0.c0, rt1.c0, x'', rt1.c0))) ELSE CAST(rt1.c2 AS INTEGER) END) ISNULL));
SELECT * FROM rt1 CROSS JOIN v0 ON CAST(((v0.c0) IS FALSE) AS TEXT) LEFT OUTER JOIN vt0 ON (NOT (((rt1.c3) ISNULL))) RIGHT OUTER JOIN t0 ON CAST((((vt0.c0, t0.c0, rt1.c2))!=((rt1.c1, rt1.c3, 0.5134739288300463))) AS BLOB);
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((vt0.c0 COLLATE NOCASE, (((vt0.c0))<>(('A)i'))), (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))>=((((((vt0.c0)AND(vt0.c0)))OR(x'')), ((vt0.c0) NOT BETWEEN (0Xffffffffbb80da36) AND (0x1096fe89)), CAST(vt0.c0 AS BLOB))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0 COLLATE NOCASE, (((vt0.c0))<>(('A)i'))), (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))>=((((((vt0.c0)AND(vt0.c0)))OR(x'')), ((vt0.c0) NOT BETWEEN (0xffffffffbb80da36) AND (0X1096fe89)), CAST(vt0.c0 AS BLOB))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((vt0.c0 COLLATE NOCASE, (((vt0.c0))!=(('A)i'))), (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))>=((((((vt0.c0)AND(vt0.c0)))OR(x'')), ((vt0.c0) NOT BETWEEN (0Xffffffffbb80da36) AND (0x1096fe89)), CAST(vt0.c0 AS BLOB))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL rt1.c3 FROM v0 CROSS JOIN rt1 ON (((NOT (NULL))) IS TRUE) LEFT OUTER JOIN vt0 ON ((rt1.c0) NOTNULL) GROUP BY rt1.c3;
SELECT ALL rt1.c3 FROM v0 CROSS JOIN rt1 ON (((NOT (NULL))) IS TRUE) LEFT OUTER JOIN vt0 ON ((rt1.c0) NOTNULL) WHERE ((+ (CAST(rt1.c0 AS INTEGER)))) GROUP BY rt1.c3 UNION SELECT ALL rt1.c3 FROM v0 CROSS JOIN rt1 ON (((NOT (NULL))) IS TRUE) LEFT OUTER JOIN vt0 ON ((rt1.c0) NOTNULL) WHERE ((NOT ((+ (CAST(rt1.c0 AS INTEGER)))))) GROUP BY rt1.c3 UNION SELECT rt1.c3 FROM v0 CROSS JOIN rt1 ON (((NOT (NULL))) IS TRUE) LEFT OUTER JOIN vt0 ON ((rt1.c0) NOTNULL) WHERE ((((+ (CAST(rt1.c0 AS INTEGER)))) ISNULL)) GROUP BY rt1.c3;
SELECT ALL rt1.c3 FROM v0 CROSS JOIN rt1 ON (((NOT (NULL))) IS TRUE) LEFT OUTER JOIN vt0 ON ((rt1.c0) NOTNULL) GROUP BY rt1.c3;
SELECT ALL v0.c0, t0.c0 FROM v0, t0 GROUP BY v0.c0, t0.c0;
SELECT ALL v0.c0, t0.c0 FROM v0, t0 GROUP BY v0.c0, t0.c0 HAVING AVG(((v0.c0) NOT BETWEEN (v0.c0) AND (MIN(v0.c0)))) UNION ALL SELECT v0.c0, t0.c0 FROM v0, t0 GROUP BY v0.c0, t0.c0 HAVING (NOT (AVG(((v0.c0) NOT BETWEEN (v0.c0) AND (MIN(v0.c0)))))) UNION ALL SELECT v0.c0, t0.c0 FROM v0, t0 GROUP BY v0.c0, t0.c0 HAVING ((AVG(((v0.c0) NOT BETWEEN (v0.c0) AND (MIN(v0.c0))))) ISNULL);
SELECT * FROM rt1;
SELECT ALL * FROM rt1 WHERE (CASE ((rt1.c3)LIKE(rt1.c2))  WHEN (NOT (rt1.c1)) THEN (rt1.c3 IN ()) WHEN LOWER(DISTINCT rt1.c3) THEN (NOT (rt1.c1)) WHEN ((rt1.c0) BETWEEN (rt1.c3) AND (rt1.c0)) THEN rt1.c3 END) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT (CASE ((rt1.c3)LIKE(rt1.c2))  WHEN (NOT (rt1.c1)) THEN (rt1.c3 IN ()) WHEN LOWER(DISTINCT rt1.c3) THEN (NOT (rt1.c1)) WHEN ((rt1.c0) BETWEEN (rt1.c3) AND (rt1.c0)) THEN rt1.c3 END))) UNION ALL SELECT * FROM rt1 WHERE (((CASE ((rt1.c3)LIKE(rt1.c2))  WHEN (NOT (rt1.c1)) THEN (rt1.c3 IN ()) WHEN LOWER(DISTINCT rt1.c3) THEN (NOT (rt1.c1)) WHEN ((rt1.c0) BETWEEN (rt1.c3) AND (rt1.c0)) THEN rt1.c3 END) ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT v0.c0, rt1.c2, rt1.c3, rt1.c0 FROM rt1, v0;
SELECT DISTINCT v0.c0, rt1.c2, rt1.c3, rt1.c0 FROM rt1, v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN ((- (rt1.c2))) AND (((((rt1.c1)AND(rt1.c1)))AND(rt1.c2))))) UNION SELECT DISTINCT v0.c0, rt1.c2, rt1.c3, rt1.c0 FROM rt1, v0 WHERE ((NOT (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN ((- (rt1.c2))) AND (((((rt1.c1)AND(rt1.c1)))AND(rt1.c2))))))) UNION SELECT DISTINCT v0.c0, rt1.c2, rt1.c3, rt1.c0 FROM rt1, v0 WHERE (((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN ((- (rt1.c2))) AND (((((rt1.c1)AND(rt1.c1)))AND(rt1.c2))))) ISNULL));
SELECT DISTINCT v0.c0, rt1.c2, rt1.c3, rt1.c0 FROM rt1, v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (v0.c0) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (v0.c0))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((v0.c0) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt1.c1, rt1.c0 FROM v0 INNER JOIN rt1 ON ((rt1.c2) NOT BETWEEN (CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c2 END) AND (v0.c0 COLLATE NOCASE)) GROUP BY rt1.c1, rt1.c0;
SELECT ALL rt1.c1, rt1.c0 FROM v0 INNER JOIN rt1 ON ((rt1.c2) NOT BETWEEN (CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c2 END) AND (v0.c0 COLLATE NOCASE)) GROUP BY rt1.c1, rt1.c0 HAVING ((((((rt1.c2)) BETWEEN ((AVG(MIN(SUM(rt1.c3))))) AND ((SUM(COUNT(*))))), 0.3601629662386967, (((SUM(MAX(GROUP_CONCAT(AVG(GROUP_CONCAT(TOTAL(AVG(NULL))))))))) BETWEEN ((MIN(COUNT(GROUP_CONCAT(v0.c0))))) AND ((MAX(MIN(COUNT(*))))))))<=(((~ (rt1.c2)), (rt1.c1 IN (COUNT(rt1.c2), rt1.c1)), x''))) UNION ALL SELECT ALL rt1.c1, rt1.c0 FROM v0 INNER JOIN rt1 ON ((rt1.c2) NOT BETWEEN (CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c2 END) AND (v0.c0 COLLATE NOCASE)) GROUP BY rt1.c1, rt1.c0 HAVING (NOT (((((((rt1.c2)) BETWEEN ((AVG(MIN(SUM(rt1.c3))))) AND ((SUM(COUNT(*))))), 0.3601629662386967, (((SUM(MAX(GROUP_CONCAT(AVG(GROUP_CONCAT(TOTAL(AVG(NULL))))))))) BETWEEN ((MIN(COUNT(GROUP_CONCAT(v0.c0))))) AND ((MAX(MIN(COUNT(*))))))))<=(((~ (rt1.c2)), (rt1.c1 IN (COUNT(rt1.c2), rt1.c1)), x''))))) UNION ALL SELECT ALL rt1.c1, rt1.c0 FROM v0 INNER JOIN rt1 ON ((rt1.c2) NOT BETWEEN (CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c2 END) AND (v0.c0 COLLATE NOCASE)) GROUP BY rt1.c1, rt1.c0 HAVING ((((((((rt1.c2)) BETWEEN ((AVG(MIN(SUM(rt1.c3))))) AND ((SUM(COUNT(*))))), 0.3601629662386967, (((SUM(MAX(GROUP_CONCAT(AVG(GROUP_CONCAT(TOTAL(AVG(NULL))))))))) BETWEEN ((MIN(COUNT(GROUP_CONCAT(v0.c0))))) AND ((MAX(MIN(COUNT(*))))))))<=(((~ (rt1.c2)), (rt1.c1 IN (COUNT(rt1.c2), rt1.c1)), x'')))) ISNULL);
SELECT ALL t0.c0 FROM t0 CROSS JOIN v0 ON ((((((v0.c0)OR(t0.c0)))OR(v0.c0))) NOT BETWEEN (CASE WHEN v0.c0 THEN x'9f3794a221f3' WHEN t0.c0 THEN v0.c0 WHEN v0.c0 THEN '' END) AND (((v0.c0) NOT BETWEEN ('0.39738610799106366') AND (t0.c0))));
SELECT ALL t0.c0 FROM t0 CROSS JOIN v0 ON ((((((v0.c0)OR(t0.c0)))OR(v0.c0))) NOT BETWEEN (CASE WHEN v0.c0 THEN x'9f3794a221f3' WHEN t0.c0 THEN v0.c0 WHEN v0.c0 THEN '' END) AND (((v0.c0) NOT BETWEEN ('0.39738610799106366') AND (t0.c0)))) WHERE ((((CAST(v0.c0 AS NUMERIC)))>(((((t0.c0, t0.c0, v0.c0))<((v0.c0, v0.c0, v0.c0))))))) UNION ALL SELECT ALL t0.c0 FROM t0 CROSS JOIN v0 ON ((((((v0.c0)OR(t0.c0)))OR(v0.c0))) NOT BETWEEN (CASE WHEN v0.c0 THEN x'9f3794a221f3' WHEN t0.c0 THEN v0.c0 WHEN v0.c0 THEN '' END) AND (((v0.c0) NOT BETWEEN ('0.39738610799106366') AND (t0.c0)))) WHERE ((NOT ((((CAST(v0.c0 AS NUMERIC)))>(((((t0.c0, t0.c0, v0.c0))<((v0.c0, v0.c0, v0.c0))))))))) UNION ALL SELECT ALL t0.c0 FROM t0 CROSS JOIN v0 ON ((((((v0.c0)OR(t0.c0)))OR(v0.c0))) NOT BETWEEN (CASE WHEN v0.c0 THEN x'9f3794a221f3' WHEN t0.c0 THEN v0.c0 WHEN v0.c0 THEN '' END) AND (((v0.c0) NOT BETWEEN ('0.39738610799106366') AND (t0.c0)))) WHERE ((((((CAST(v0.c0 AS NUMERIC)))>(((((t0.c0, t0.c0, v0.c0))<((v0.c0, v0.c0, v0.c0))))))) ISNULL));
SELECT ALL t0.c0 FROM t0 CROSS JOIN v0 ON ((((((v0.c0)OR(t0.c0)))OR(v0.c0))) NOT BETWEEN (CASE WHEN v0.c0 THEN x'9f3794a221f3' WHEN t0.c0 THEN v0.c0 WHEN v0.c0 THEN '' END) AND (((v0.c0) NOT BETWEEN ('0.39738610799106366') AND (t0.c0))));
SELECT DISTINCT vt0.c0 FROM vt0, v0, rt1, t0;
SELECT DISTINCT vt0.c0 FROM vt0, v0, rt1, t0 WHERE (v0.c0) UNION SELECT DISTINCT vt0.c0 FROM vt0, v0, rt1, t0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT vt0.c0 FROM vt0, v0, rt1, t0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0, v0, rt1, t0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) IS TRUE)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) IS TRUE)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) IS TRUE)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING SUM(TOTAL(v0.c0)) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (SUM(TOTAL(v0.c0)))) UNION ALL SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING ((SUM(TOTAL(v0.c0))) ISNULL);
SELECT t0.c0 FROM vt0, v0, t0;
SELECT ALL t0.c0 FROM vt0, v0, t0 WHERE ((((((((((((((t0.c0 IN ()))OR(((((((((x'51daa46c')OR(t0.c0)))OR(vt0.c0)))OR(t0.c0)))OR(t0.c0)))))OR(CAST(v0.c0 AS NUMERIC))))AND(((t0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))OR(v0.c0)))OR((+ (v0.c0)))))AND(((t0.c0) ISNULL)))) UNION ALL SELECT ALL t0.c0 FROM vt0, v0, t0 WHERE ((NOT ((((((((((((((t0.c0 IN ()))OR(((((((((x'51daa46c')OR(t0.c0)))OR(vt0.c0)))OR(t0.c0)))OR(t0.c0)))))OR(CAST(v0.c0 AS NUMERIC))))AND(((t0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))OR(v0.c0)))OR((+ (v0.c0)))))AND(((t0.c0) ISNULL)))))) UNION ALL SELECT t0.c0 FROM vt0, v0, t0 WHERE ((((((((((((((((t0.c0 IN ()))OR(((((((((x'51daa46c')OR(t0.c0)))OR(vt0.c0)))OR(t0.c0)))OR(t0.c0)))))OR(CAST(v0.c0 AS NUMERIC))))AND(((t0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))OR(v0.c0)))OR((+ (v0.c0)))))AND(((t0.c0) ISNULL)))) ISNULL));
SELECT t0.c0 FROM vt0, v0, t0;
SELECT DISTINCT rt1.c3, rt1.c1, t0.c0, rt1.c0, vt0.c0, rt1.c2 FROM t0, v0, rt1, vt0;
SELECT DISTINCT rt1.c3, rt1.c1, t0.c0, rt1.c0, vt0.c0, rt1.c2 FROM t0, v0, rt1, vt0 WHERE ((((rt1.c2)+(rt1.c2)) IN (NULLIF(DISTINCT rt1.c2, rt1.c1)))) UNION SELECT DISTINCT rt1.c3, rt1.c1, t0.c0, rt1.c0, vt0.c0, rt1.c2 FROM t0, v0, rt1, vt0 WHERE ((NOT ((((rt1.c2)+(rt1.c2)) IN (NULLIF(DISTINCT rt1.c2, rt1.c1)))))) UNION SELECT DISTINCT rt1.c3, rt1.c1, t0.c0, rt1.c0, vt0.c0, rt1.c2 FROM t0, v0, rt1, vt0 WHERE ((((((rt1.c2)+(rt1.c2)) IN (NULLIF(DISTINCT rt1.c2, rt1.c1)))) ISNULL));
SELECT DISTINCT rt1.c3, rt1.c1, t0.c0, rt1.c0, vt0.c0, rt1.c2 FROM t0, v0, rt1, vt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((((((v0.c0)AND(v0.c0)))OR(v0.c0))) NOT BETWEEN (((((v0.c0)OR(v0.c0)))OR(v0.c0))) AND (v0.c0))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((((v0.c0)AND(v0.c0)))OR(v0.c0))) NOT BETWEEN (((((v0.c0)OR(v0.c0)))OR(v0.c0))) AND (v0.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((((((v0.c0)AND(v0.c0)))OR(v0.c0))) NOT BETWEEN (((((v0.c0)OR(v0.c0)))OR(v0.c0))) AND (v0.c0))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt1.c1, v0.c0, rt1.c0, rt1.c3 FROM rt1, v0 GROUP BY rt1.c1, v0.c0, rt1.c0, rt1.c3;
SELECT ALL rt1.c1, v0.c0, rt1.c0, rt1.c3 FROM rt1, v0 GROUP BY rt1.c1, v0.c0, rt1.c0, rt1.c3 HAVING (((TOTAL(MIN(rt1.c1)) IN ())) IS TRUE) UNION ALL SELECT ALL rt1.c1, v0.c0, rt1.c0, rt1.c3 FROM rt1, v0 GROUP BY rt1.c1, v0.c0, rt1.c0, rt1.c3 HAVING (NOT ((((TOTAL(MIN(rt1.c1)) IN ())) IS TRUE))) UNION ALL SELECT rt1.c1, v0.c0, rt1.c0, rt1.c3 FROM rt1, v0 GROUP BY rt1.c1, v0.c0, rt1.c0, rt1.c3 HAVING (((((TOTAL(MIN(rt1.c1)) IN ())) IS TRUE)) ISNULL);
SELECT ALL rt1.c1, v0.c0, rt1.c0, rt1.c3 FROM rt1, v0 GROUP BY rt1.c1, v0.c0, rt1.c0, rt1.c3;
SELECT ALL rt1.c1, v0.c0, rt1.c0, rt1.c3 FROM rt1, v0 GROUP BY rt1.c1, v0.c0, rt1.c0, rt1.c3 HAVING (((TOTAL(MIN(rt1.c1)) IN ())) IS TRUE) UNION ALL SELECT ALL rt1.c1, v0.c0, rt1.c0, rt1.c3 FROM rt1, v0 GROUP BY rt1.c1, v0.c0, rt1.c0, rt1.c3 HAVING (NOT ((((TOTAL(MIN(rt1.c1)) IN ())) IS TRUE))) UNION ALL SELECT rt1.c1, v0.c0, rt1.c0, rt1.c3 FROM rt1, v0 GROUP BY rt1.c1, v0.c0, rt1.c0, rt1.c3 HAVING (((((TOTAL(MIN(rt1.c1)) IN ())) IS TRUE)) ISNULL);
SELECT ALL rt1.c1, v0.c0, rt1.c0, rt1.c3 FROM rt1, v0 GROUP BY rt1.c1, v0.c0, rt1.c0, rt1.c3;
SELECT SUM((- (((v0.c0) IS TRUE)))) FROM rt1, v0;
SELECT * FROM rt1;
SELECT ALL * FROM rt1 WHERE (rt1.c0) UNION ALL SELECT * FROM rt1 WHERE ((NOT (rt1.c0))) UNION ALL SELECT ALL * FROM rt1 WHERE (((rt1.c0) ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0)AND(((t0.c0)|(t0.c0)))))AND(((((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((((t0.c0)AND(((t0.c0)|(t0.c0)))))AND(((((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0))))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((((t0.c0)AND(((t0.c0)|(t0.c0)))))AND(((((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL rt1.c0, v0.c0, t0.c0 FROM rt1, v0, t0 GROUP BY rt1.c0, v0.c0, t0.c0;
SELECT ALL rt1.c0, v0.c0, t0.c0 FROM rt1, v0, t0 WHERE (((((rt1.c2)*(t0.c0)))<(((((((((0.04572922021696468)OR(rt1.c2)))AND(t0.c0)))AND(rt1.c1)))AND(t0.c0))))) GROUP BY rt1.c0, v0.c0, t0.c0 UNION SELECT ALL rt1.c0, v0.c0, t0.c0 FROM rt1, v0, t0 WHERE ((NOT (((((rt1.c2)*(t0.c0)))<(((((((((0.04572922021696468)OR(rt1.c2)))AND(t0.c0)))AND(rt1.c1)))AND(t0.c0))))))) GROUP BY rt1.c0, v0.c0, t0.c0 UNION SELECT rt1.c0, v0.c0, t0.c0 FROM rt1, v0, t0 WHERE (((((((rt1.c2)*(t0.c0)))<(((((((((0.04572922021696468)OR(rt1.c2)))AND(t0.c0)))AND(rt1.c1)))AND(t0.c0))))) ISNULL)) GROUP BY rt1.c0, v0.c0, t0.c0;
SELECT ALL rt1.c0, v0.c0, t0.c0 FROM rt1, v0, t0 GROUP BY rt1.c0, v0.c0, t0.c0;
SELECT rt1.c3 FROM rt1 GROUP BY rt1.c3;
SELECT ALL rt1.c3 FROM rt1 GROUP BY rt1.c3 HAVING rt1.c3 UNION ALL SELECT rt1.c3 FROM rt1 GROUP BY rt1.c3 HAVING (NOT (rt1.c3)) UNION ALL SELECT ALL rt1.c3 FROM rt1 GROUP BY rt1.c3 HAVING ((rt1.c3) ISNULL);
SELECT rt1.c3 FROM rt1 GROUP BY rt1.c3;
SELECT ALL rt1.c3 FROM rt1 GROUP BY rt1.c3 HAVING rt1.c3 UNION ALL SELECT rt1.c3 FROM rt1 GROUP BY rt1.c3 HAVING (NOT (rt1.c3)) UNION ALL SELECT ALL rt1.c3 FROM rt1 GROUP BY rt1.c3 HAVING ((rt1.c3) ISNULL);
SELECT rt1.c3 FROM rt1 GROUP BY rt1.c3;
SELECT SUM(((NULL)OR(CAST('-1442845885' AS REAL)))) FROM rt1;
SELECT v0.c0, rt1.c0, rt1.c1 FROM v0, rt1;
SELECT ALL v0.c0, rt1.c0, rt1.c1 FROM v0, rt1 WHERE (CASE WHEN (+ (rt1.c3)) THEN TRIM(rt1.c0, rt1.c2) END) UNION ALL SELECT v0.c0, rt1.c0, rt1.c1 FROM v0, rt1 WHERE ((NOT (CASE WHEN (+ (rt1.c3)) THEN TRIM(rt1.c0, rt1.c2) END))) UNION ALL SELECT v0.c0, rt1.c0, rt1.c1 FROM v0, rt1 WHERE (((CASE WHEN (+ (rt1.c3)) THEN TRIM(rt1.c0, rt1.c2) END) ISNULL));
SELECT v0.c0, rt1.c0, rt1.c1 FROM v0, rt1;
SELECT DISTINCT * FROM v0, vt0, t0;
SELECT DISTINCT * FROM v0, vt0, t0 WHERE (((((t0.c0, t0.c0, vt0.c0))>=((v0.c0, t0.c0, v0.c0))) IN ((((t0.c0)) BETWEEN ((0.20448353726412716)) AND ((t0.c0)))))) UNION SELECT DISTINCT * FROM v0, vt0, t0 WHERE ((NOT (((((t0.c0, t0.c0, vt0.c0))>=((v0.c0, t0.c0, v0.c0))) IN ((((t0.c0)) BETWEEN ((0.20448353726412716)) AND ((t0.c0)))))))) UNION SELECT DISTINCT * FROM v0, vt0, t0 WHERE (((((((t0.c0, t0.c0, vt0.c0))>=((v0.c0, t0.c0, v0.c0))) IN ((((t0.c0)) BETWEEN ((0.20448353726412716)) AND ((t0.c0)))))) ISNULL));
SELECT DISTINCT * FROM v0, vt0, t0;
SELECT vt0.c0 FROM rt1, v0, vt0, t0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM rt1, v0, vt0, t0 WHERE ((~ (((v0.c0) BETWEEN (x'4dcc') AND (v0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM rt1, v0, vt0, t0 WHERE ((NOT ((~ (((v0.c0) BETWEEN (x'4dcc') AND (v0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM rt1, v0, vt0, t0 WHERE ((((~ (((v0.c0) BETWEEN (x'4dcc') AND (v0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM rt1, v0, vt0, t0 GROUP BY vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 NOT INDEXED GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING (((SUM(GROUP_CONCAT(MAX(v0.c0)))))>((COUNT(v0.c0)))) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING (NOT ((((SUM(GROUP_CONCAT(MAX(v0.c0)))))>((COUNT(v0.c0)))))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING (((((SUM(GROUP_CONCAT(MAX(v0.c0)))))>((COUNT(v0.c0))))) ISNULL);
SELECT ALL * FROM t0, rt1;
SELECT ALL * FROM t0, rt1 WHERE ('0.5134739288300463') UNION ALL SELECT * FROM t0, rt1 WHERE ((NOT ('0.5134739288300463'))) UNION ALL SELECT * FROM t0, rt1 WHERE ((('0.5134739288300463') ISNULL));
SELECT ALL * FROM t0, rt1;
SELECT DISTINCT rt1.c1, rt1.c3, t0.c0, vt0.c0, rt1.c2 FROM v0, t0 CROSS JOIN rt1 ON ((v0.c0)=(((vt0.c0)=(vt0.c0)))) INNER JOIN vt0 ON (((((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((v0.c0))))||(((t0.c0) IS TRUE)));
SELECT DISTINCT rt1.c1, rt1.c3, t0.c0, vt0.c0, rt1.c2 FROM v0, t0 CROSS JOIN rt1 ON ((v0.c0)==(((vt0.c0)=(vt0.c0)))) INNER JOIN vt0 ON (((((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((v0.c0))))||(((t0.c0) IS TRUE))) WHERE (0.49136767314738683) UNION SELECT DISTINCT rt1.c1, rt1.c3, t0.c0, vt0.c0, rt1.c2 FROM v0, t0 CROSS JOIN rt1 ON ((v0.c0)=(((vt0.c0)==(vt0.c0)))) INNER JOIN vt0 ON (((((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((v0.c0))))||(((t0.c0) IS TRUE))) WHERE ((NOT (0.49136767314738683))) UNION SELECT DISTINCT rt1.c1, rt1.c3, t0.c0, vt0.c0, rt1.c2 FROM v0, t0 CROSS JOIN rt1 ON ((v0.c0)=(((vt0.c0)==(vt0.c0)))) INNER JOIN vt0 ON (((((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((v0.c0))))||(((t0.c0) IS TRUE))) WHERE (((0.49136767314738683) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c3, t0.c0, vt0.c0, rt1.c2 FROM v0, t0 CROSS JOIN rt1 ON ((v0.c0)=(((vt0.c0)=(vt0.c0)))) INNER JOIN vt0 ON (((((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((v0.c0))))||(((t0.c0) IS TRUE)));
SELECT rt1.c0 FROM vt0 INNER JOIN v0 ON ((((v0.c0)IS NOT(rt1.c2)))IS(((rt1.c3)AND(rt1.c2)))) FULL OUTER JOIN rt1 ON x'' COLLATE RTRIM GROUP BY rt1.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING MIN(((GROUP_CONCAT(v0.c0))+(SUM(528856798)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MIN(((GROUP_CONCAT(v0.c0))+(SUM(528856798)))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MIN(((GROUP_CONCAT(v0.c0))+(SUM(528856798))))) ISNULL);
SELECT ALL rt1.c0, vt0.c0, rt1.c2, t0.c0, rt1.c1 FROM vt0 LEFT OUTER JOIN t0 ON ((((rt1.c2)<<(rt1.c0)))=((rt1.c0 IN ()))) FULL OUTER JOIN rt1 ON x'';
SELECT DISTINCT rt1.c3 FROM rt1, vt0;
SELECT DISTINCT rt1.c3 FROM rt1, vt0 WHERE (CAST(x'8b92' AS NUMERIC)) UNION SELECT DISTINCT rt1.c3 FROM rt1, vt0 WHERE ((NOT (CAST(x'8b92' AS NUMERIC)))) UNION SELECT DISTINCT rt1.c3 FROM rt1, vt0 WHERE (((CAST(x'8b92' AS NUMERIC)) ISNULL));
SELECT DISTINCT rt1.c3 FROM rt1, vt0;
SELECT t0.c0, v0.c0 FROM t0 CROSS JOIN v0 ON HEX(DISTINCT t0.c0) COLLATE RTRIM GROUP BY t0.c0, v0.c0;
SELECT ALL t0.c0, v0.c0 FROM t0 CROSS JOIN v0 ON HEX(DISTINCT t0.c0) COLLATE RTRIM WHERE ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END IN (((v0.c0) BETWEEN (v0.c0) AND (t0.c0))))) GROUP BY t0.c0, v0.c0 UNION SELECT ALL t0.c0, v0.c0 FROM t0 CROSS JOIN v0 ON HEX(DISTINCT t0.c0) COLLATE RTRIM WHERE ((NOT ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END IN (((v0.c0) BETWEEN (v0.c0) AND (t0.c0))))))) GROUP BY t0.c0, v0.c0 UNION SELECT ALL t0.c0, v0.c0 FROM t0 CROSS JOIN v0 ON HEX(DISTINCT t0.c0) COLLATE RTRIM WHERE ((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END IN (((v0.c0) BETWEEN (v0.c0) AND (t0.c0))))) ISNULL)) GROUP BY t0.c0, v0.c0;
SELECT t0.c0, v0.c0 FROM t0 CROSS JOIN v0 ON HEX(DISTINCT t0.c0) COLLATE RTRIM GROUP BY t0.c0, v0.c0;
SELECT ALL rt1.c1, vt0.c0 FROM vt0, rt1, v0 GROUP BY rt1.c1, vt0.c0;
SELECT ALL rt1.c1, vt0.c0 FROM vt0, rt1, v0 GROUP BY rt1.c1, vt0.c0 HAVING GROUP_CONCAT(AVG(TOTAL(vt0.c0))) UNION ALL SELECT rt1.c1, vt0.c0 FROM vt0, rt1, v0 GROUP BY rt1.c1, vt0.c0 HAVING (NOT (GROUP_CONCAT(AVG(TOTAL(vt0.c0))))) UNION ALL SELECT rt1.c1, vt0.c0 FROM vt0, rt1, v0 GROUP BY rt1.c1, vt0.c0 HAVING ((GROUP_CONCAT(AVG(TOTAL(vt0.c0)))) ISNULL);
SELECT ALL * FROM vt0, v0, rt1, t0;
SELECT * FROM vt0, v0, rt1, t0 WHERE (((rt1.c2 COLLATE NOCASE)|(CAST(vt0.c0 AS NUMERIC)))) UNION ALL SELECT ALL * FROM vt0, v0, rt1, t0 WHERE ((NOT (((rt1.c2 COLLATE NOCASE)|(CAST(vt0.c0 AS NUMERIC)))))) UNION ALL SELECT * FROM vt0, v0, rt1, t0 WHERE (((((rt1.c2 COLLATE NOCASE)|(CAST(vt0.c0 AS NUMERIC)))) ISNULL));
SELECT ALL * FROM vt0, v0, rt1, t0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (((((rt1.c1)AND(rt1.c1)))*((rt1.c3 IN ())))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (((((rt1.c1)AND(rt1.c1)))*((rt1.c3 IN ())))))) UNION SELECT DISTINCT * FROM rt1 WHERE (((((((rt1.c1)AND(rt1.c1)))*((rt1.c3 IN ())))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT v0.c0, t0.c0, rt1.c2, rt1.c3, vt0.c0, rt1.c0 FROM t0, rt1, vt0, v0 GROUP BY v0.c0, t0.c0, rt1.c2, rt1.c3, vt0.c0, rt1.c0;
SELECT ALL v0.c0, t0.c0, rt1.c2, rt1.c3, vt0.c0, rt1.c0 FROM t0, rt1, vt0, v0 WHERE (((t0.c0)+(t0.c0)) COLLATE BINARY) GROUP BY v0.c0, t0.c0, rt1.c2, rt1.c3, vt0.c0, rt1.c0 UNION SELECT ALL v0.c0, t0.c0, rt1.c2, rt1.c3, vt0.c0, rt1.c0 FROM t0, rt1, vt0, v0 WHERE ((NOT (((t0.c0)+(t0.c0)) COLLATE BINARY))) GROUP BY v0.c0, t0.c0, rt1.c2, rt1.c3, vt0.c0, rt1.c0 UNION SELECT ALL v0.c0, t0.c0, rt1.c2, rt1.c3, vt0.c0, rt1.c0 FROM t0, rt1, vt0, v0 WHERE (((((t0.c0)+(t0.c0)) COLLATE BINARY) ISNULL)) GROUP BY v0.c0, t0.c0, rt1.c2, rt1.c3, vt0.c0, rt1.c0;
SELECT v0.c0, t0.c0, rt1.c2, rt1.c3, vt0.c0, rt1.c0 FROM t0, rt1, vt0, v0 GROUP BY v0.c0, t0.c0, rt1.c2, rt1.c3, vt0.c0, rt1.c0;
SELECT ALL t0.c0 FROM rt1, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM rt1, t0 GROUP BY t0.c0 HAVING GROUP_CONCAT(TOTAL(SUM(NULL))) UNION ALL SELECT ALL t0.c0 FROM rt1, t0 GROUP BY t0.c0 HAVING (NOT (GROUP_CONCAT(TOTAL(SUM(NULL))))) UNION ALL SELECT ALL t0.c0 FROM rt1, t0 GROUP BY t0.c0 HAVING ((GROUP_CONCAT(TOTAL(SUM(NULL)))) ISNULL);
SELECT * FROM rt1, v0;
SELECT ALL * FROM rt1, v0 WHERE (((((((((rt1.c0)OR(rt1.c3)))OR(rt1.c1)))OR(v0.c0)))OR(((((((((rt1.c0)OR(rt1.c0)))AND(rt1.c1)))AND(rt1.c0)))OR(v0.c0))))) UNION ALL SELECT * FROM rt1, v0 WHERE ((NOT (((((((((rt1.c0)OR(rt1.c3)))OR(rt1.c1)))OR(v0.c0)))OR(((((((((rt1.c0)OR(rt1.c0)))AND(rt1.c1)))AND(rt1.c0)))OR(v0.c0))))))) UNION ALL SELECT ALL * FROM rt1, v0 NOT INDEXED WHERE (((((((((((rt1.c0)OR(rt1.c3)))OR(rt1.c1)))OR(v0.c0)))OR(((((((((rt1.c0)OR(rt1.c0)))AND(rt1.c1)))AND(rt1.c0)))OR(v0.c0))))) ISNULL));
SELECT * FROM rt1, v0;
SELECT DISTINCT * FROM vt0, t0, rt1;
SELECT DISTINCT * FROM vt0, t0, rt1 WHERE (((((((t0.c0) ISNULL))OR(rt1.c3)))OR(((t0.c0) NOT NULL)))) UNION SELECT DISTINCT * FROM vt0, t0, rt1 WHERE ((NOT (((((((t0.c0) ISNULL))OR(rt1.c3)))OR(((t0.c0) NOT NULL)))))) UNION SELECT DISTINCT * FROM vt0, t0, rt1 WHERE (((((((((t0.c0) ISNULL))OR(rt1.c3)))OR(((t0.c0) NOT NULL)))) ISNULL));
SELECT DISTINCT * FROM vt0, t0, rt1;
SELECT vt0.c0, t0.c0, v0.c0 FROM v0, vt0, t0 GROUP BY vt0.c0, t0.c0, v0.c0;
SELECT vt0.c0, t0.c0, v0.c0 FROM v0, vt0, t0 WHERE (((((t0.c0)||(t0.c0)))*(vt0.c0))) GROUP BY vt0.c0, t0.c0, v0.c0 UNION SELECT vt0.c0, t0.c0, v0.c0 FROM v0, vt0, t0 WHERE ((NOT (((((t0.c0)||(t0.c0)))*(vt0.c0))))) GROUP BY vt0.c0, t0.c0, v0.c0 UNION SELECT vt0.c0, t0.c0, v0.c0 FROM v0, vt0, t0 WHERE (((((((t0.c0)||(t0.c0)))*(vt0.c0))) ISNULL)) GROUP BY vt0.c0, t0.c0, v0.c0;
SELECT vt0.c0, t0.c0, v0.c0 FROM v0, vt0, t0 GROUP BY vt0.c0, t0.c0, v0.c0;
SELECT t0.c0 FROM v0, t0 LEFT OUTER JOIN vt0 ON CASE WHEN (- (v0.c0)) THEN (+ (vt0.c0)) WHEN LIKELY(DISTINCT t0.c0) THEN json_patch(vt0.c0, v0.c0) WHEN ((((((((vt0.c0)AND(t0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(t0.c0)) THEN (- (t0.c0)) ELSE ABS(v0.c0) END GROUP BY t0.c0;
SELECT ALL t0.c0 FROM v0, t0 LEFT OUTER JOIN vt0 ON CASE WHEN (- (v0.c0)) THEN (+ (vt0.c0)) WHEN LIKELY(DISTINCT t0.c0) THEN json_patch(vt0.c0, v0.c0) WHEN ((((((((vt0.c0)AND(t0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(t0.c0)) THEN (- (t0.c0)) ELSE ABS(v0.c0) END GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0 FROM v0, t0 LEFT OUTER JOIN vt0 ON CASE WHEN (- (v0.c0)) THEN (+ (vt0.c0)) WHEN LIKELY(DISTINCT t0.c0) THEN json_patch(vt0.c0, v0.c0) WHEN ((((((((vt0.c0)AND(t0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(t0.c0)) THEN (- (t0.c0)) ELSE ABS(v0.c0) END GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c0 FROM v0, t0 LEFT OUTER JOIN vt0 ON CASE WHEN (- (v0.c0)) THEN (+ (vt0.c0)) WHEN LIKELY(DISTINCT t0.c0) THEN json_patch(vt0.c0, v0.c0) WHEN ((((((((vt0.c0)AND(t0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(t0.c0)) THEN (- (t0.c0)) ELSE ABS(v0.c0) END GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0 FROM v0, t0 LEFT OUTER JOIN vt0 ON CASE WHEN (- (v0.c0)) THEN (+ (vt0.c0)) WHEN LIKELY(DISTINCT t0.c0) THEN json_patch(vt0.c0, v0.c0) WHEN ((((((((vt0.c0)AND(t0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(t0.c0)) THEN (- (t0.c0)) ELSE ABS(v0.c0) END GROUP BY t0.c0;
SELECT ALL t0.c0 FROM v0, t0 LEFT OUTER JOIN vt0 ON CASE WHEN (- (v0.c0)) THEN (+ (vt0.c0)) WHEN LIKELY(DISTINCT t0.c0) THEN json_patch(vt0.c0, v0.c0) WHEN ((((((((vt0.c0)AND(t0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(t0.c0)) THEN (- (t0.c0)) ELSE ABS(v0.c0) END GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0 FROM v0, t0 LEFT OUTER JOIN vt0 ON CASE WHEN (- (v0.c0)) THEN (+ (vt0.c0)) WHEN LIKELY(DISTINCT t0.c0) THEN json_patch(vt0.c0, v0.c0) WHEN ((((((((vt0.c0)AND(t0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(t0.c0)) THEN (- (t0.c0)) ELSE ABS(v0.c0) END GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c0 FROM v0, t0 LEFT OUTER JOIN vt0 ON CASE WHEN (- (v0.c0)) THEN (+ (vt0.c0)) WHEN LIKELY(DISTINCT t0.c0) THEN json_patch(vt0.c0, v0.c0) WHEN ((((((((vt0.c0)AND(t0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(t0.c0)) THEN (- (t0.c0)) ELSE ABS(v0.c0) END GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0 FROM v0, t0 LEFT OUTER JOIN vt0 ON CASE WHEN (- (v0.c0)) THEN (+ (vt0.c0)) WHEN LIKELY(DISTINCT t0.c0) THEN json_patch(vt0.c0, v0.c0) WHEN ((((((((vt0.c0)AND(t0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(t0.c0)) THEN (- (t0.c0)) ELSE ABS(v0.c0) END GROUP BY t0.c0;
SELECT rt1.c1 FROM rt1, t0;
SELECT ALL rt1.c1 FROM rt1, t0 WHERE (rt1.c1) UNION ALL SELECT ALL rt1.c1 FROM rt1, t0 WHERE ((NOT (rt1.c1))) UNION ALL SELECT rt1.c1 FROM rt1, t0 WHERE (((rt1.c1) ISNULL));
SELECT rt1.c1 FROM rt1, t0;
SELECT DISTINCT * FROM rt1, vt0;
SELECT DISTINCT * FROM rt1, vt0 WHERE (TIME(NULL, ((rt1.c1) ISNULL), CAST(rt1.c2 AS INTEGER))) UNION SELECT DISTINCT * FROM rt1, vt0 WHERE ((NOT (TIME(NULL, ((rt1.c1) ISNULL), CAST(rt1.c2 AS INTEGER))))) UNION SELECT DISTINCT * FROM rt1, vt0 WHERE (((TIME(NULL, ((rt1.c1) ISNULL), CAST(rt1.c2 AS INTEGER))) ISNULL));
SELECT DISTINCT * FROM rt1, vt0;
SELECT rt1.c0, vt0.c0 FROM vt0, t0 NOT INDEXED, v0, rt1 GROUP BY rt1.c0, vt0.c0;
SELECT ALL rt1.c0, vt0.c0 FROM vt0, t0, v0, rt1 WHERE ((('81748104') NOT BETWEEN (rt1.c2) AND (v0.c0)) COLLATE BINARY) GROUP BY rt1.c0, vt0.c0 UNION SELECT rt1.c0, vt0.c0 FROM vt0, t0, v0, rt1 WHERE ((NOT ((('81748104') NOT BETWEEN (rt1.c2) AND (v0.c0)) COLLATE BINARY))) GROUP BY rt1.c0, vt0.c0 UNION SELECT rt1.c0, vt0.c0 FROM vt0, t0, v0, rt1 WHERE ((((('81748104') NOT BETWEEN (rt1.c2) AND (v0.c0)) COLLATE BINARY) ISNULL)) GROUP BY rt1.c0, vt0.c0;
SELECT rt1.c0, vt0.c0 FROM vt0, t0 NOT INDEXED, v0, rt1 GROUP BY rt1.c0, vt0.c0;
SELECT ALL rt1.c3, v0.c0, vt0.c0, rt1.c2, rt1.c1 FROM t0, rt1, vt0 RIGHT OUTER JOIN v0 ON ((highlight(rt1.c0, vt0.c0, rt1.c0, rt1.c0))!=(((vt0.c0) NOT BETWEEN (rt1.c0) AND (x'')))) GROUP BY rt1.c3, v0.c0, vt0.c0, rt1.c2, rt1.c1;
SELECT ALL rt1.c3, v0.c0, vt0.c0, rt1.c2, rt1.c1 FROM t0, rt1, vt0 RIGHT OUTER JOIN v0 ON ((highlight(rt1.c0, vt0.c0, rt1.c0, rt1.c0))!=(((vt0.c0) NOT BETWEEN (rt1.c0) AND (x'')))) GROUP BY rt1.c3, v0.c0, vt0.c0, rt1.c2, rt1.c1 HAVING AVG(GROUP_CONCAT(rt1.c0)) UNION ALL SELECT rt1.c3, v0.c0, vt0.c0, rt1.c2, rt1.c1 FROM t0, rt1, vt0 RIGHT OUTER JOIN v0 ON ((highlight(rt1.c0, vt0.c0, rt1.c0, rt1.c0))!=(((vt0.c0) NOT BETWEEN (rt1.c0) AND (x'')))) GROUP BY rt1.c3, v0.c0, vt0.c0, rt1.c2, rt1.c1 HAVING (NOT (AVG(GROUP_CONCAT(rt1.c0)))) UNION ALL SELECT rt1.c3, v0.c0, vt0.c0, rt1.c2, rt1.c1 FROM t0, rt1, vt0 RIGHT OUTER JOIN v0 ON ((highlight(rt1.c0, vt0.c0, rt1.c0, rt1.c0))<>(((vt0.c0) NOT BETWEEN (rt1.c0) AND (x'')))) GROUP BY rt1.c3, v0.c0, vt0.c0, rt1.c2, rt1.c1 HAVING ((AVG(GROUP_CONCAT(rt1.c0))) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) IS TRUE)) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((CAST(vt0.c0 AS INTEGER)) IS TRUE)))) UNION ALL SELECT * FROM vt0 WHERE (((((CAST(vt0.c0 AS INTEGER)) IS TRUE)) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT v0.c0, vt0.c0, t0.c0 FROM v0, vt0, t0;
SELECT DISTINCT v0.c0, vt0.c0, t0.c0 FROM v0, vt0, t0 WHERE ((- (t0.c0)) COLLATE NOCASE) UNION SELECT DISTINCT v0.c0, vt0.c0, t0.c0 FROM v0, vt0, t0 WHERE ((NOT ((- (t0.c0)) COLLATE NOCASE))) UNION SELECT DISTINCT v0.c0, vt0.c0, t0.c0 FROM v0, vt0, t0 WHERE ((((- (t0.c0)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT v0.c0, vt0.c0, t0.c0 FROM v0, vt0, t0;
SELECT v0.c0, t0.c0 FROM t0, v0 GROUP BY v0.c0, t0.c0;
SELECT v0.c0, t0.c0 FROM t0, v0 WHERE (UPPER(((((t0.c0)OR(v0.c0)))AND(v0.c0)))) GROUP BY v0.c0, t0.c0 UNION SELECT ALL v0.c0, t0.c0 FROM t0, v0 WHERE ((NOT (UPPER(((((t0.c0)OR(v0.c0)))AND(v0.c0)))))) GROUP BY v0.c0, t0.c0 UNION SELECT v0.c0, t0.c0 FROM t0, v0 WHERE (((UPPER(((((t0.c0)OR(v0.c0)))AND(v0.c0)))) ISNULL)) GROUP BY v0.c0, t0.c0;
SELECT v0.c0, t0.c0 FROM t0, v0 GROUP BY v0.c0, t0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM t0, rt1, vt0, v0;
SELECT * FROM t0, rt1, vt0, v0 WHERE (((((vt0.c0) BETWEEN (v0.c0) AND (rt1.c3))) ISNULL)) UNION ALL SELECT * FROM t0, rt1, vt0, v0 WHERE ((NOT (((((vt0.c0) BETWEEN (v0.c0) AND (rt1.c3))) ISNULL)))) UNION ALL SELECT * FROM t0, rt1, vt0, v0 WHERE (((((((vt0.c0) BETWEEN (v0.c0) AND (rt1.c3))) ISNULL)) ISNULL));
SELECT ALL * FROM t0, rt1, vt0, v0;
SELECT DISTINCT * FROM rt1, t0, vt0;
SELECT DISTINCT * FROM rt1, t0, vt0 WHERE (((((rt1.c3)/(rt1.c1))) BETWEEN ((+ (vt0.c0))) AND (CAST(rt1.c1 AS TEXT)))) UNION SELECT DISTINCT * FROM rt1, t0, vt0 WHERE ((NOT (((((rt1.c3)/(rt1.c1))) BETWEEN ((+ (vt0.c0))) AND (CAST(rt1.c1 AS TEXT)))))) UNION SELECT DISTINCT * FROM rt1, t0, vt0 WHERE (((((((rt1.c3)/(rt1.c1))) BETWEEN ((+ (vt0.c0))) AND (CAST(rt1.c1 AS TEXT)))) ISNULL));
SELECT DISTINCT * FROM rt1, t0, vt0;
SELECT rt1.c3, rt1.c2, t0.c0, rt1.c0, rt1.c1 FROM rt1, t0, v0 FULL OUTER JOIN vt0 ON ((rt1.c0 COLLATE BINARY) IS FALSE) GROUP BY rt1.c3, rt1.c2, t0.c0, rt1.c0, rt1.c1;
SELECT ALL rt1.c3, rt1.c2, t0.c0, rt1.c0, rt1.c1 FROM rt1, t0, v0 FULL OUTER JOIN vt0 ON ((rt1.c0 COLLATE BINARY) IS FALSE) WHERE (((((rt1.c1) ISNULL)) NOT BETWEEN ((v0.c0 IN (rt1.c2, rt1.c2))) AND ((~ (rt1.c2))))) GROUP BY rt1.c3, rt1.c2, t0.c0, rt1.c0, rt1.c1 UNION SELECT rt1.c3, rt1.c2, t0.c0, rt1.c0, rt1.c1 FROM rt1, t0, v0 FULL OUTER JOIN vt0 ON ((rt1.c0 COLLATE BINARY) IS FALSE) WHERE ((NOT (((((rt1.c1) ISNULL)) NOT BETWEEN ((v0.c0 IN (rt1.c2, rt1.c2))) AND ((~ (rt1.c2))))))) GROUP BY rt1.c3, rt1.c2, t0.c0, rt1.c0, rt1.c1 UNION SELECT ALL rt1.c3, rt1.c2, t0.c0, rt1.c0, rt1.c1 FROM rt1, t0, v0 FULL OUTER JOIN vt0 ON ((rt1.c0 COLLATE BINARY) IS FALSE) WHERE (((((((rt1.c1) ISNULL)) NOT BETWEEN ((v0.c0 IN (rt1.c2, rt1.c2))) AND ((~ (rt1.c2))))) ISNULL)) GROUP BY rt1.c3, rt1.c2, t0.c0, rt1.c0, rt1.c1;
SELECT rt1.c3, rt1.c2, t0.c0, rt1.c0, rt1.c1 FROM rt1, t0, v0 FULL OUTER JOIN vt0 ON ((rt1.c0 COLLATE BINARY) IS FALSE) GROUP BY rt1.c3, rt1.c2, t0.c0, rt1.c0, rt1.c1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING CASE WHEN AVG(t0.c0) THEN NULL END UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (CASE WHEN AVG(t0.c0) THEN NULL END)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((CASE WHEN AVG(t0.c0) THEN NULL END) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING CASE WHEN AVG(t0.c0) THEN NULL END UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (CASE WHEN AVG(t0.c0) THEN NULL END)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((CASE WHEN AVG(t0.c0) THEN NULL END) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL * FROM v0 INDEXED BY i30, vt0;
SELECT DISTINCT v0.c0, rt1.c3, rt1.c2, rt1.c1 FROM rt1, v0;
SELECT DISTINCT v0.c0, rt1.c3, rt1.c2, rt1.c1 FROM rt1, v0 WHERE (CAST((rt1.c2 IN (v0.c0)) AS TEXT)) UNION SELECT DISTINCT v0.c0, rt1.c3, rt1.c2, rt1.c1 FROM rt1, v0 WHERE ((NOT (CAST((rt1.c2 IN (v0.c0)) AS TEXT)))) UNION SELECT DISTINCT v0.c0, rt1.c3, rt1.c2, rt1.c1 FROM rt1, v0 WHERE (((CAST((rt1.c2 IN (v0.c0)) AS TEXT)) ISNULL));
SELECT DISTINCT v0.c0, rt1.c3, rt1.c2, rt1.c1 FROM rt1, v0;
SELECT ALL v0.c0, t0.c0, vt0.c0 FROM v0, vt0, t0 GROUP BY v0.c0, t0.c0, vt0.c0;
SELECT v0.c0, t0.c0, vt0.c0 FROM v0, vt0, t0 WHERE (t0.c0) GROUP BY v0.c0, t0.c0, vt0.c0 UNION SELECT v0.c0, t0.c0, vt0.c0 FROM v0, vt0, t0 WHERE ((NOT (t0.c0))) GROUP BY v0.c0, t0.c0, vt0.c0 UNION SELECT v0.c0, t0.c0, vt0.c0 FROM v0, vt0, t0 NOT INDEXED WHERE (((t0.c0) ISNULL)) GROUP BY v0.c0, t0.c0, vt0.c0;
SELECT ALL v0.c0, t0.c0, vt0.c0 FROM v0, vt0, t0 GROUP BY v0.c0, t0.c0, vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(CAST(vt0.c0 AS NUMERIC)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(CAST(vt0.c0 AS NUMERIC)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(CAST(vt0.c0 AS NUMERIC))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(CAST(vt0.c0 AS NUMERIC)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(CAST(vt0.c0 AS NUMERIC)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(CAST(vt0.c0 AS NUMERIC))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT v0.c0, t0.c0 FROM t0 NATURAL JOIN v0;
SELECT v0.c0, t0.c0 FROM t0 NATURAL JOIN v0 WHERE ((((v0.c0) NOT NULL) IN ())) UNION ALL SELECT ALL v0.c0, t0.c0 FROM t0 NATURAL JOIN v0 WHERE ((NOT ((((v0.c0) NOT NULL) IN ())))) UNION ALL SELECT v0.c0, t0.c0 FROM t0 NATURAL JOIN v0 WHERE ((((((v0.c0) NOT NULL) IN ())) ISNULL));
SELECT v0.c0, t0.c0 FROM t0 NATURAL JOIN v0;
SELECT DISTINCT * FROM vt0, t0, v0, rt1;
SELECT DISTINCT * FROM vt0, t0, v0, rt1 WHERE (((((((((((0.3301612062181868)OR(t0.c0)))AND(v0.c0)))OR(rt1.c0)))OR(rt1.c2))) BETWEEN (((rt1.c1) NOT BETWEEN (NULL) AND (rt1.c1))) AND (((rt1.c3)IS(rt1.c0))))) UNION SELECT DISTINCT * FROM vt0, t0, v0, rt1 WHERE ((NOT (((((((((((0.3301612062181868)OR(t0.c0)))AND(v0.c0)))OR(rt1.c0)))OR(rt1.c2))) BETWEEN (((rt1.c1) NOT BETWEEN (NULL) AND (rt1.c1))) AND (((rt1.c3)IS(rt1.c0))))))) UNION SELECT DISTINCT * FROM vt0, t0, v0, rt1 WHERE (((((((((((((0.3301612062181868)OR(t0.c0)))AND(v0.c0)))OR(rt1.c0)))OR(rt1.c2))) BETWEEN (((rt1.c1) NOT BETWEEN (NULL) AND (rt1.c1))) AND (((rt1.c3)IS(rt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, t0, v0, rt1;
SELECT rt1.c1, v0.c0, t0.c0, vt0.c0, rt1.c0, rt1.c3, rt1.c2 FROM rt1, vt0, v0, t0 GROUP BY rt1.c1, v0.c0, t0.c0, vt0.c0, rt1.c0, rt1.c3, rt1.c2;
SELECT ALL rt1.c1, v0.c0, t0.c0, vt0.c0, rt1.c0, rt1.c3, rt1.c2 FROM rt1, vt0, v0, t0 WHERE ((load_extension(t0.c0, v0.c0) IN ())) GROUP BY rt1.c1, v0.c0, t0.c0, vt0.c0, rt1.c0, rt1.c3, rt1.c2 UNION SELECT ALL rt1.c1, v0.c0, t0.c0, vt0.c0, rt1.c0, rt1.c3, rt1.c2 FROM rt1, vt0, v0, t0 WHERE ((NOT ((load_extension(t0.c0, v0.c0) IN ())))) GROUP BY rt1.c1, v0.c0, t0.c0, vt0.c0, rt1.c0, rt1.c3, rt1.c2 UNION SELECT ALL rt1.c1, v0.c0, t0.c0, vt0.c0, rt1.c0, rt1.c3, rt1.c2 FROM rt1, vt0, v0, t0 WHERE ((((load_extension(t0.c0, v0.c0) IN ())) ISNULL)) GROUP BY rt1.c1, v0.c0, t0.c0, vt0.c0, rt1.c0, rt1.c3, rt1.c2;
SELECT rt1.c1, v0.c0, t0.c0, vt0.c0, rt1.c0, rt1.c3, rt1.c2 FROM rt1, vt0, v0, t0 GROUP BY rt1.c1, v0.c0, t0.c0, vt0.c0, rt1.c0, rt1.c3, rt1.c2;
SELECT ALL vt0.c0, t0.c0, rt1.c2, rt1.c3 FROM vt0, rt1, t0, v0 GROUP BY vt0.c0, t0.c0, rt1.c2, rt1.c3;
SELECT vt0.c0, t0.c0, rt1.c2, rt1.c3 FROM vt0, rt1, t0, v0 GROUP BY vt0.c0, t0.c0, rt1.c2, rt1.c3 HAVING GROUP_CONCAT(COUNT(*)) UNION ALL SELECT ALL vt0.c0, t0.c0, rt1.c2, rt1.c3 FROM vt0, rt1, t0, v0 GROUP BY vt0.c0, t0.c0, rt1.c2, rt1.c3 HAVING (NOT (GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT ALL vt0.c0, t0.c0, rt1.c2, rt1.c3 FROM vt0, rt1, t0, v0 GROUP BY vt0.c0, t0.c0, rt1.c2, rt1.c3 HAVING ((GROUP_CONCAT(COUNT(*))) ISNULL);
SELECT ALL v0.c0, rt1.c2, rt1.c0, rt1.c1, rt1.c3 FROM v0, rt1;
SELECT ALL v0.c0, rt1.c2, rt1.c0, rt1.c1, rt1.c3 FROM v0, rt1 WHERE (v0.c0) UNION ALL SELECT ALL v0.c0, rt1.c2, rt1.c0, rt1.c1, rt1.c3 FROM v0, rt1 WHERE ((NOT (v0.c0))) UNION ALL SELECT v0.c0, rt1.c2, rt1.c0, rt1.c1, rt1.c3 FROM v0, rt1 WHERE (((v0.c0) ISNULL));
SELECT ALL v0.c0, rt1.c2, rt1.c0, rt1.c1, rt1.c3 FROM v0, rt1;
SELECT DISTINCT * FROM v0, rt1, t0;
SELECT DISTINCT * FROM v0, rt1, t0 WHERE ((((((rt1.c1))<((rt1.c2))))>(((v0.c0)>(rt1.c2))))) UNION SELECT DISTINCT * FROM v0, rt1, t0 WHERE ((NOT ((((((rt1.c1))<((rt1.c2))))>(((v0.c0)>(rt1.c2))))))) UNION SELECT DISTINCT * FROM v0, rt1, t0 WHERE ((((((((rt1.c1))<((rt1.c2))))>(((v0.c0)>(rt1.c2))))) ISNULL));
SELECT DISTINCT * FROM v0, rt1, t0;
SELECT rt1.c2, vt0.c0, t0.c0, rt1.c1, rt1.c0, v0.c0, rt1.c3 FROM t0, vt0, v0, rt1 GROUP BY rt1.c2, vt0.c0, t0.c0, rt1.c1, rt1.c0, v0.c0, rt1.c3;
SELECT ALL rt1.c2, vt0.c0, t0.c0, rt1.c1, rt1.c0, v0.c0, rt1.c3 FROM t0, vt0, v0, rt1 WHERE (((((((((((((t0.c0 COLLATE RTRIM)AND((((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((rt1.c0))))))AND(x'')))AND(CASE vt0.c0  WHEN rt1.c0 THEN vt0.c0 WHEN t0.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c0 END)))OR(1e500)))AND(((rt1.c2) NOT NULL))))AND(CASE v0.c0  WHEN vt0.c0 THEN ',gy!m' ELSE vt0.c0 END))) GROUP BY rt1.c2, vt0.c0, t0.c0, rt1.c1, rt1.c0, v0.c0, rt1.c3 UNION SELECT rt1.c2, vt0.c0, t0.c0, rt1.c1, rt1.c0, v0.c0, rt1.c3 FROM t0, vt0, v0, rt1 WHERE ((NOT (((((((((((((t0.c0 COLLATE RTRIM)AND((((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((rt1.c0))))))AND(x'')))AND(CASE vt0.c0  WHEN rt1.c0 THEN vt0.c0 WHEN t0.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c0 END)))OR(1e500)))AND(((rt1.c2) NOT NULL))))AND(CASE v0.c0  WHEN vt0.c0 THEN ',gy!m' ELSE vt0.c0 END))))) GROUP BY rt1.c2, vt0.c0, t0.c0, rt1.c1, rt1.c0, v0.c0, rt1.c3 UNION SELECT rt1.c2, vt0.c0, t0.c0, rt1.c1, rt1.c0, v0.c0, rt1.c3 FROM t0, vt0, v0, rt1 WHERE (((((((((((((((t0.c0 COLLATE RTRIM)AND((((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((rt1.c0))))))AND(x'')))AND(CASE vt0.c0  WHEN rt1.c0 THEN vt0.c0 WHEN t0.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c0 END)))OR(1e500)))AND(((rt1.c2) NOT NULL))))AND(CASE v0.c0  WHEN vt0.c0 THEN ',gy!m' ELSE vt0.c0 END))) ISNULL)) GROUP BY rt1.c2, vt0.c0, t0.c0, rt1.c1, rt1.c0, v0.c0, rt1.c3;
SELECT rt1.c2, vt0.c0, t0.c0, rt1.c1, rt1.c0, v0.c0, rt1.c3 FROM t0, vt0, v0, rt1 GROUP BY rt1.c2, vt0.c0, t0.c0, rt1.c1, rt1.c0, v0.c0, rt1.c3;
SELECT vt0.c0 FROM t0, v0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0, v0, vt0 GROUP BY vt0.c0 HAVING MIN(NULL) UNION ALL SELECT ALL vt0.c0 FROM t0, v0 NOT INDEXED, vt0 GROUP BY vt0.c0 HAVING (NOT (MIN(NULL))) UNION ALL SELECT vt0.c0 FROM t0, v0, vt0 GROUP BY vt0.c0 HAVING ((MIN(NULL)) ISNULL);
SELECT vt0.c0 FROM t0, v0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0, v0, vt0 GROUP BY vt0.c0 HAVING MIN(NULL) UNION ALL SELECT ALL vt0.c0 FROM t0, v0 NOT INDEXED, vt0 GROUP BY vt0.c0 HAVING (NOT (MIN(NULL))) UNION ALL SELECT vt0.c0 FROM t0, v0, vt0 GROUP BY vt0.c0 HAVING ((MIN(NULL)) ISNULL);
SELECT vt0.c0 FROM t0, v0, vt0 GROUP BY vt0.c0;
SELECT ALL TOTAL((((((((t0.c0))!=((t0.c0))))OR(NULL)))OR((+ (t0.c0))))) FROM t0 ORDER BY t0.c0 ASC  NULLS LAST, ((RTRIM(t0.c0))>>(((((t0.c0)OR(t0.c0)))AND(t0.c0))))  NULLS LAST;
SELECT ALL * FROM t0, v0, rt1, vt0;
SELECT ALL * FROM t0, v0, rt1, vt0 WHERE (((v0.c0)OR(CASE WHEN rt1.c0 THEN rt1.c2 END))) UNION ALL SELECT * FROM t0, v0, rt1, vt0 WHERE ((NOT (((v0.c0)OR(CASE WHEN rt1.c0 THEN rt1.c2 END))))) UNION ALL SELECT * FROM t0, v0, rt1, vt0 WHERE (((((v0.c0)OR(CASE WHEN rt1.c0 THEN rt1.c2 END))) ISNULL));
SELECT ALL * FROM t0, v0, rt1, vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (0x1096fe89) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (0X1096fe89))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((0x1096fe89) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 WHERE ((((((-1787427006) NOT NULL), ((vt0.c0) NOTNULL), (vt0.c0 IN ())))>=((CAST(vt0.c0 AS INTEGER), v0.c0 COLLATE NOCASE, '24401288')))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 WHERE ((NOT ((((((-1787427006) NOT NULL), ((vt0.c0) NOTNULL), (vt0.c0 IN ())))>=((CAST(vt0.c0 AS INTEGER), v0.c0 COLLATE NOCASE, '24401288')))))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 WHERE ((((((((-1787427006) NOT NULL), ((vt0.c0) NOTNULL), (vt0.c0 IN ())))>=((CAST(vt0.c0 AS INTEGER), v0.c0 COLLATE NOCASE, '24401288')))) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT vt0.c0 FROM vt0, t0;
SELECT vt0.c0 FROM vt0, t0 WHERE (((t0.c0)==((('-996238680') NOT BETWEEN (vt0.c0) AND (vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0, t0 WHERE ((NOT (((t0.c0)==((('-996238680') NOT BETWEEN (vt0.c0) AND (vt0.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0, t0 WHERE (((((t0.c0)=((('-996238680') NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL));
SELECT vt0.c0 FROM vt0, t0;
SELECT DISTINCT rt1.c2, vt0.c0, rt1.c0, v0.c0, rt1.c3, t0.c0, rt1.c1 FROM rt1, t0, vt0, v0;
SELECT DISTINCT rt1.c2, vt0.c0, rt1.c0, v0.c0, rt1.c3, t0.c0, rt1.c1 FROM rt1, t0 NOT INDEXED, vt0, v0 WHERE (((((v0.c0)AND(CAST(rt1.c3 AS NUMERIC))))OR(CASE WHEN rt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 WHEN rt1.c3 THEN v0.c0 END))) UNION SELECT DISTINCT rt1.c2, vt0.c0, rt1.c0, v0.c0, rt1.c3, t0.c0, rt1.c1 FROM rt1, t0, vt0, v0 WHERE ((NOT (((((v0.c0)AND(CAST(rt1.c3 AS NUMERIC))))OR(CASE WHEN rt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 WHEN rt1.c3 THEN v0.c0 END))))) UNION SELECT DISTINCT rt1.c2, vt0.c0, rt1.c0, v0.c0, rt1.c3, t0.c0, rt1.c1 FROM rt1, t0, vt0, v0 WHERE (((((((v0.c0)AND(CAST(rt1.c3 AS NUMERIC))))OR(CASE WHEN rt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 WHEN rt1.c3 THEN v0.c0 END))) ISNULL));
SELECT DISTINCT rt1.c2, vt0.c0, rt1.c0, v0.c0, rt1.c3, t0.c0, rt1.c1 FROM rt1, t0, vt0, v0;
SELECT v0.c0, rt1.c0, rt1.c1, vt0.c0 FROM vt0 FULL OUTER JOIN t0 ON ((((((0.07504010860301547) BETWEEN (t0.c0) AND (v0.c0)))AND(((rt1.c1) NOT BETWEEN (rt1.c2) AND (vt0.c0)))))OR((~ (rt1.c0)))) INNER JOIN rt1 ON ((UNLIKELY(t0.c0)) IS TRUE) CROSS JOIN v0 ON ((CAST(v0.c0 AS BLOB)) NOT BETWEEN (((((v0.c0)OR(vt0.c0)))OR(rt1.c1))) AND (t0.c0 COLLATE RTRIM)) GROUP BY v0.c0, rt1.c0, rt1.c1, vt0.c0;
SELECT rt1.c1, rt1.c0, v0.c0, rt1.c3, t0.c0 FROM v0, rt1, t0, vt0 GROUP BY rt1.c1, rt1.c0, v0.c0, rt1.c3, t0.c0;
SELECT ALL rt1.c1, rt1.c0, v0.c0, rt1.c3, t0.c0 FROM v0, rt1, t0, vt0 GROUP BY rt1.c1, rt1.c0, v0.c0, rt1.c3, t0.c0 HAVING CASE 108850877  WHEN COUNT(COUNT(SUM(MIN(rt1.c3)))) THEN TOTAL(COUNT(*)) END UNION ALL SELECT ALL rt1.c1, rt1.c0, v0.c0, rt1.c3, t0.c0 FROM v0, rt1, t0, vt0 GROUP BY rt1.c1, rt1.c0, v0.c0, rt1.c3, t0.c0 HAVING (NOT (CASE 108850877  WHEN COUNT(COUNT(SUM(MIN(rt1.c3)))) THEN TOTAL(COUNT(*)) END)) UNION ALL SELECT rt1.c1, rt1.c0, v0.c0, rt1.c3, t0.c0 FROM v0, rt1, t0, vt0 GROUP BY rt1.c1, rt1.c0, v0.c0, rt1.c3, t0.c0 HAVING ((CASE 108850877  WHEN COUNT(COUNT(SUM(MIN(rt1.c3)))) THEN TOTAL(COUNT(*)) END) ISNULL);
SELECT ALL * FROM rt1, v0 NATURAL JOIN t0;
SELECT ALL * FROM rt1, v0 NATURAL JOIN t0 WHERE (UPPER(DISTINCT (rt1.c0 IN ()))) UNION ALL SELECT ALL * FROM rt1, v0 NATURAL JOIN t0 WHERE ((NOT (UPPER(DISTINCT (rt1.c0 IN ()))))) UNION ALL SELECT * FROM rt1, v0 NATURAL JOIN t0 WHERE (((UPPER(DISTINCT (rt1.c0 IN ()))) ISNULL));
SELECT ALL * FROM rt1, v0 NATURAL JOIN t0;
SELECT DISTINCT * FROM t0 FULL OUTER JOIN v0 ON rt1.c3 CROSS JOIN rt1 ON TRIM(DISTINCT COALESCE(rt1.c2, '-1141330728'));
SELECT ALL rt1.c3 FROM rt1, t0 NOT INDEXED, vt0 GROUP BY rt1.c3;
SELECT rt1.c3 FROM rt1, t0, vt0 WHERE (((t0.c0)-(rt1.c0)) COLLATE BINARY COLLATE NOCASE) GROUP BY rt1.c3 UNION SELECT rt1.c3 FROM rt1, t0, vt0 WHERE ((NOT (((t0.c0)-(rt1.c0)) COLLATE BINARY COLLATE NOCASE))) GROUP BY rt1.c3 UNION SELECT rt1.c3 FROM rt1, t0, vt0 WHERE (((((t0.c0)-(rt1.c0)) COLLATE BINARY COLLATE NOCASE) ISNULL)) GROUP BY rt1.c3;
SELECT ALL rt1.c3 FROM rt1, t0 NOT INDEXED, vt0 GROUP BY rt1.c3;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING (((((+ (AVG(vt0.c0))))OR(CAST(MIN(v0.c0) AS BLOB))))AND('B')) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING (NOT ((((((+ (AVG(vt0.c0))))OR(CAST(MIN(v0.c0) AS BLOB))))AND('B')))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING (((((((+ (AVG(vt0.c0))))OR(CAST(MIN(v0.c0) AS BLOB))))AND('B'))) ISNULL);
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING (((((+ (AVG(vt0.c0))))OR(CAST(MIN(v0.c0) AS BLOB))))AND('B')) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING (NOT ((((((+ (AVG(vt0.c0))))OR(CAST(MIN(v0.c0) AS BLOB))))AND('B')))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING (((((((+ (AVG(vt0.c0))))OR(CAST(MIN(v0.c0) AS BLOB))))AND('B'))) ISNULL);
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT * FROM v0 CROSS JOIN rt1 ON ABS(rt1.c2) COLLATE NOCASE FULL OUTER JOIN t0 ON CAST(((rt1.c0)*(v0.c0)) AS NUMERIC);
SELECT ALL * FROM v0 CROSS JOIN rt1 ON ABS(rt1.c2) COLLATE NOCASE FULL OUTER JOIN t0 ON CAST(((rt1.c0)*(v0.c0)) AS NUMERIC) WHERE (CAST((~ (v0.c0)) AS BLOB)) UNION ALL SELECT * FROM v0 CROSS JOIN rt1 ON ABS(rt1.c2) COLLATE NOCASE FULL OUTER JOIN t0 ON CAST(((rt1.c0)*(v0.c0)) AS NUMERIC) WHERE ((NOT (CAST((~ (v0.c0)) AS BLOB)))) UNION ALL SELECT * FROM v0 CROSS JOIN rt1 ON ABS(rt1.c2) COLLATE NOCASE FULL OUTER JOIN t0 ON CAST(((rt1.c0)*(v0.c0)) AS NUMERIC) WHERE (((CAST((~ (v0.c0)) AS BLOB)) ISNULL));
SELECT * FROM v0 CROSS JOIN rt1 ON ABS(rt1.c2) COLLATE NOCASE FULL OUTER JOIN t0 ON CAST(((rt1.c0)*(v0.c0)) AS NUMERIC);
SELECT DISTINCT * FROM vt0, rt1, t0;
SELECT DISTINCT * FROM vt0, rt1, t0 WHERE (((((rt1.c3)-(rt1.c2))) NOT BETWEEN (rt1.c2) AND (CASE WHEN 0.7166311196974574 THEN rt1.c3 ELSE rt1.c2 END))) UNION SELECT DISTINCT * FROM vt0, rt1, t0 WHERE ((NOT (((((rt1.c3)-(rt1.c2))) NOT BETWEEN (rt1.c2) AND (CASE WHEN 0.7166311196974574 THEN rt1.c3 ELSE rt1.c2 END))))) UNION SELECT DISTINCT * FROM vt0, rt1, t0 WHERE (((((((rt1.c3)-(rt1.c2))) NOT BETWEEN (rt1.c2) AND (CASE WHEN 0.7166311196974574 THEN rt1.c3 ELSE rt1.c2 END))) ISNULL));
SELECT DISTINCT * FROM vt0, rt1, t0;
SELECT ALL rt1.c1, v0.c0, rt1.c2, vt0.c0, rt1.c3 FROM vt0, rt1, v0 GROUP BY rt1.c1, v0.c0, rt1.c2, vt0.c0, rt1.c3;
SELECT ALL rt1.c1, v0.c0, rt1.c2, vt0.c0, rt1.c3 FROM vt0, rt1, v0 WHERE (LIKELY((~ (rt1.c3)))) GROUP BY rt1.c1, v0.c0, rt1.c2, vt0.c0, rt1.c3 UNION SELECT ALL rt1.c1, v0.c0, rt1.c2, vt0.c0, rt1.c3 FROM vt0, rt1, v0 WHERE ((NOT (LIKELY((~ (rt1.c3)))))) GROUP BY rt1.c1, v0.c0, rt1.c2, vt0.c0, rt1.c3 UNION SELECT ALL rt1.c1, v0.c0, rt1.c2, vt0.c0, rt1.c3 FROM vt0, rt1, v0 WHERE (((LIKELY((~ (rt1.c3)))) ISNULL)) GROUP BY rt1.c1, v0.c0, rt1.c2, vt0.c0, rt1.c3;
SELECT ALL rt1.c1, v0.c0, rt1.c2, vt0.c0, rt1.c3 FROM vt0, rt1, v0 GROUP BY rt1.c1, v0.c0, rt1.c2, vt0.c0, rt1.c3;
SELECT v0.c0 FROM v0, rt1, t0, vt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 NOT INDEXED, rt1, t0, vt0 GROUP BY v0.c0 HAVING vt0.c0 UNION ALL SELECT v0.c0 FROM v0, rt1, t0, vt0 GROUP BY v0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0, rt1, t0, vt0 GROUP BY v0.c0 HAVING ((vt0.c0) ISNULL);
SELECT v0.c0 FROM v0, rt1, t0, vt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 NOT INDEXED, rt1, t0, vt0 GROUP BY v0.c0 HAVING vt0.c0 UNION ALL SELECT v0.c0 FROM v0, rt1, t0, vt0 GROUP BY v0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0, rt1, t0, vt0 GROUP BY v0.c0 HAVING ((vt0.c0) ISNULL);
SELECT v0.c0 FROM v0, rt1, t0, vt0 GROUP BY v0.c0;
SELECT ALL * FROM v0, vt0, t0;
SELECT ALL * FROM v0, vt0, t0 WHERE (((TRIM(vt0.c0)) BETWEEN (0xfffffffff543f344) AND (((t0.c0) IS TRUE)))) UNION ALL SELECT * FROM v0, vt0, t0 WHERE ((NOT (((TRIM(vt0.c0)) BETWEEN (0xfffffffff543f344) AND (((t0.c0) IS TRUE)))))) UNION ALL SELECT * FROM v0, vt0, t0 WHERE (((((TRIM(vt0.c0)) BETWEEN (0xfffffffff543f344) AND (((t0.c0) IS TRUE)))) ISNULL));
SELECT ALL * FROM v0, vt0, t0;
SELECT DISTINCT vt0.c0 FROM t0, vt0;
SELECT DISTINCT vt0.c0 FROM t0, vt0 WHERE (((vt0.c0)GLOB(t0.c0))) UNION SELECT DISTINCT vt0.c0 FROM t0, vt0 WHERE ((NOT (((vt0.c0)GLOB(t0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM t0, vt0 WHERE (((((vt0.c0)GLOB(t0.c0))) ISNULL));
SELECT DISTINCT vt0.c0 FROM t0, vt0;
SELECT rt1.c0, v0.c0, t0.c0, rt1.c1 FROM vt0, t0, rt1, v0 GROUP BY rt1.c0, v0.c0, t0.c0, rt1.c1;
SELECT rt1.c0, v0.c0, t0.c0, rt1.c1 FROM vt0, t0, rt1, v0 WHERE (((((((((v0.c0)OR(rt1.c1)))AND(rt1.c1)))AND(t0.c0)))AND((vt0.c0 IN (t0.c0))))) GROUP BY rt1.c0, v0.c0, t0.c0, rt1.c1 UNION SELECT rt1.c0, v0.c0, t0.c0, rt1.c1 FROM vt0, t0, rt1, v0 WHERE ((NOT (((((((((v0.c0)OR(rt1.c1)))AND(rt1.c1)))AND(t0.c0)))AND((vt0.c0 IN (t0.c0))))))) GROUP BY rt1.c0, v0.c0, t0.c0, rt1.c1 UNION SELECT rt1.c0, v0.c0, t0.c0, rt1.c1 FROM vt0, t0, rt1, v0 WHERE (((((((((((v0.c0)OR(rt1.c1)))AND(rt1.c1)))AND(t0.c0)))AND((vt0.c0 IN (t0.c0))))) ISNULL)) GROUP BY rt1.c0, v0.c0, t0.c0, rt1.c1;
SELECT rt1.c0, v0.c0, t0.c0, rt1.c1 FROM vt0, t0, rt1, v0 GROUP BY rt1.c0, v0.c0, t0.c0, rt1.c1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING SUM(GROUP_CONCAT(t0.c0)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (SUM(GROUP_CONCAT(t0.c0)))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((SUM(GROUP_CONCAT(t0.c0))) ISNULL);
SELECT rt1.c3, rt1.c0, rt1.c1, t0.c0 FROM t0, rt1;
SELECT rt1.c3, rt1.c0, rt1.c1, t0.c0 FROM t0, rt1 WHERE (x'') UNION ALL SELECT ALL rt1.c3, rt1.c0, rt1.c1, t0.c0 FROM t0, rt1 WHERE ((NOT (x''))) UNION ALL SELECT ALL rt1.c3, rt1.c0, rt1.c1, t0.c0 FROM t0, rt1 WHERE (((x'') ISNULL));
SELECT rt1.c3, rt1.c0, rt1.c1, t0.c0 FROM t0, rt1;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (CAST(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END AS NUMERIC)) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (CAST(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END AS NUMERIC)))) UNION SELECT DISTINCT * FROM t0 WHERE (((CAST(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL rt1.c2, v0.c0, rt1.c3 FROM v0, rt1 GROUP BY rt1.c2, v0.c0, rt1.c3;
SELECT ALL rt1.c2, v0.c0, rt1.c3 FROM v0, rt1 WHERE (((((rt1.c0))>((rt1.c0))) IN ())) GROUP BY rt1.c2, v0.c0, rt1.c3 UNION SELECT rt1.c2, v0.c0, rt1.c3 FROM v0, rt1 WHERE ((NOT (((((rt1.c0))>((rt1.c0))) IN ())))) GROUP BY rt1.c2, v0.c0, rt1.c3 UNION SELECT ALL rt1.c2, v0.c0, rt1.c3 FROM v0, rt1 WHERE (((((((rt1.c0))>((rt1.c0))) IN ())) ISNULL)) GROUP BY rt1.c2, v0.c0, rt1.c3;
SELECT ALL rt1.c2, v0.c0, rt1.c3 FROM v0, rt1 GROUP BY rt1.c2, v0.c0, rt1.c3;
SELECT ALL rt1.c2, vt0.c0 FROM t0 FULL OUTER JOIN v0 ON t0.c0 RIGHT OUTER JOIN vt0 ON CASE ((rt1.c2)==(0.27104790165520865))  WHEN x'fb04' COLLATE NOCASE THEN ((rt1.c2)-(rt1.c3)) ELSE CASE rt1.c0  WHEN rt1.c2 THEN rt1.c2 WHEN v0.c0 THEN '81748104' WHEN vt0.c0 THEN rt1.c1 END END INNER JOIN rt1 ON CASE v0.c0  WHEN rt1.c1 THEN v0.c0 WHEN rt1.c0 THEN rt1.c3 WHEN t0.c0 THEN rt1.c1 WHEN t0.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c0 END COLLATE RTRIM GROUP BY rt1.c2, vt0.c0;
SELECT ALL * FROM v0, t0, rt1, vt0;
SELECT * FROM v0, t0, rt1, vt0 WHERE (CAST(((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c3)) AS BLOB)) UNION ALL SELECT * FROM v0, t0, rt1, vt0 WHERE ((NOT (CAST(((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c3)) AS BLOB)))) UNION ALL SELECT * FROM v0, t0, rt1, vt0 WHERE (((CAST(((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c3)) AS BLOB)) ISNULL));
SELECT ALL * FROM v0, t0, rt1, vt0;
SELECT DISTINCT * FROM v0, t0 RIGHT OUTER JOIN vt0 ON ((((t0.c0)>(vt0.c0))) NOT BETWEEN (vt0.c0) AND (NULL));
SELECT DISTINCT * FROM v0, t0 RIGHT OUTER JOIN vt0 ON ((((t0.c0)>(vt0.c0))) NOT BETWEEN (vt0.c0) AND (NULL)) WHERE (((CAST(v0.c0 AS NUMERIC))!=(((v0.c0) NOT BETWEEN (-1850265077) AND (vt0.c0))))) UNION SELECT DISTINCT * FROM v0, t0 RIGHT OUTER JOIN vt0 ON ((((t0.c0)>(vt0.c0))) NOT BETWEEN (vt0.c0) AND (NULL)) WHERE ((NOT (((CAST(v0.c0 AS NUMERIC))!=(((v0.c0) NOT BETWEEN (-1850265077) AND (vt0.c0))))))) UNION SELECT DISTINCT * FROM v0, t0 RIGHT OUTER JOIN vt0 ON ((((t0.c0)>(vt0.c0))) NOT BETWEEN (vt0.c0) AND (NULL)) WHERE (((((CAST(v0.c0 AS NUMERIC))!=(((v0.c0) NOT BETWEEN (-1850265077) AND (vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0, t0 RIGHT OUTER JOIN vt0 ON ((((t0.c0)>(vt0.c0))) NOT BETWEEN (vt0.c0) AND (NULL));
SELECT ALL v0.c0, vt0.c0, t0.c0 FROM t0 RIGHT OUTER JOIN v0 ON CHAR(json_remove(t0.c0, vt0.c0)) FULL OUTER JOIN vt0 ON t0.c0 COLLATE RTRIM GROUP BY v0.c0, vt0.c0, t0.c0;
SELECT ALL rt1.c2, t0.c0, rt1.c3, rt1.c1, vt0.c0, v0.c0, rt1.c0 FROM v0, rt1, vt0, t0 NOT INDEXED GROUP BY rt1.c2, t0.c0, rt1.c3, rt1.c1, vt0.c0, v0.c0, rt1.c0;
SELECT rt1.c2, t0.c0, rt1.c3, rt1.c1, vt0.c0, v0.c0, rt1.c0 FROM v0, rt1, vt0, t0 GROUP BY rt1.c2, t0.c0, rt1.c3, rt1.c1, vt0.c0, v0.c0, rt1.c0 HAVING SUM(SUM(TOTAL(vt0.c0))) UNION ALL SELECT rt1.c2, t0.c0, rt1.c3, rt1.c1, vt0.c0, v0.c0, rt1.c0 FROM v0, rt1, vt0, t0 GROUP BY rt1.c2, t0.c0, rt1.c3, rt1.c1, vt0.c0, v0.c0, rt1.c0 HAVING (NOT (SUM(SUM(TOTAL(vt0.c0))))) UNION ALL SELECT rt1.c2, t0.c0, rt1.c3, rt1.c1, vt0.c0, v0.c0, rt1.c0 FROM v0, rt1, vt0, t0 GROUP BY rt1.c2, t0.c0, rt1.c3, rt1.c1, vt0.c0, v0.c0, rt1.c0 HAVING ((SUM(SUM(TOTAL(vt0.c0)))) ISNULL);
SELECT vt0.c0, rt1.c1, rt1.c0, t0.c0, v0.c0, rt1.c2, rt1.c3 FROM rt1, vt0, v0, t0;
SELECT ALL vt0.c0, rt1.c1, rt1.c0, t0.c0, v0.c0, rt1.c2, rt1.c3 FROM rt1, vt0, v0, t0 WHERE ((((((((v0.c0, vt0.c0, rt1.c3))=((v0.c0, rt1.c1, x'cc54'))))OR(((rt1.c3)+(vt0.c0)))))OR(((rt1.c0) NOT BETWEEN ('') AND (t0.c0))))) UNION ALL SELECT vt0.c0, rt1.c1, rt1.c0, t0.c0, v0.c0, rt1.c2, rt1.c3 FROM rt1, vt0, v0, t0 WHERE ((NOT ((((((((v0.c0, vt0.c0, rt1.c3))=((v0.c0, rt1.c1, x'cc54'))))OR(((rt1.c3)+(vt0.c0)))))OR(((rt1.c0) NOT BETWEEN ('') AND (t0.c0))))))) UNION ALL SELECT ALL vt0.c0, rt1.c1, rt1.c0, t0.c0, v0.c0, rt1.c2, rt1.c3 FROM rt1, vt0, v0, t0 WHERE ((((((((((v0.c0, vt0.c0, rt1.c3))=((v0.c0, rt1.c1, x'cc54'))))OR(((rt1.c3)+(vt0.c0)))))OR(((rt1.c0) NOT BETWEEN ('') AND (t0.c0))))) ISNULL));
SELECT vt0.c0, rt1.c1, rt1.c0, t0.c0, v0.c0, rt1.c2, rt1.c3 FROM rt1, vt0, v0, t0;
SELECT DISTINCT * FROM rt1 FULL OUTER JOIN v0 ON ((((rt1.c3) NOT BETWEEN (v0.c0) AND (0.38210981983772374)))GLOB(rt1.c0));
SELECT DISTINCT * FROM rt1 FULL OUTER JOIN v0 ON ((((rt1.c3) NOT BETWEEN (v0.c0) AND (0.38210981983772374)))GLOB(rt1.c0)) WHERE (((CASE rt1.c0  WHEN rt1.c3 THEN rt1.c2 WHEN 0x1c771905 THEN v0.c0 WHEN v0.c0 THEN rt1.c0 END)>=((~ (v0.c0))))) UNION SELECT DISTINCT * FROM rt1 FULL OUTER JOIN v0 ON ((((rt1.c3) NOT BETWEEN (v0.c0) AND (0.38210981983772374)))GLOB(rt1.c0)) WHERE ((NOT (((CASE rt1.c0  WHEN rt1.c3 THEN rt1.c2 WHEN 0X1c771905 THEN v0.c0 WHEN v0.c0 THEN rt1.c0 END)>=((~ (v0.c0))))))) UNION SELECT DISTINCT * FROM rt1 FULL OUTER JOIN v0 ON ((((rt1.c3) NOT BETWEEN (v0.c0) AND (0.38210981983772374)))GLOB(rt1.c0)) WHERE (((((CASE rt1.c0  WHEN rt1.c3 THEN rt1.c2 WHEN 0x1c771905 THEN v0.c0 WHEN v0.c0 THEN rt1.c0 END)>=((~ (v0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt1 FULL OUTER JOIN v0 ON ((((rt1.c3) NOT BETWEEN (v0.c0) AND (0.38210981983772374)))GLOB(rt1.c0));
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ((- (((t0.c0)>=(t0.c0))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((- (((t0.c0)>=(t0.c0))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((((- (((t0.c0)>=(t0.c0))))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT v0.c0, rt1.c1 FROM t0, v0, rt1, vt0 GROUP BY v0.c0, rt1.c1;
SELECT v0.c0, rt1.c1 FROM t0, v0, rt1, vt0 GROUP BY v0.c0, rt1.c1 HAVING rt1.c1 UNION ALL SELECT v0.c0, rt1.c1 FROM t0, v0 NOT INDEXED, rt1, vt0 GROUP BY v0.c0, rt1.c1 HAVING (NOT (rt1.c1)) UNION ALL SELECT v0.c0, rt1.c1 FROM t0, v0, rt1, vt0 GROUP BY v0.c0, rt1.c1 HAVING ((rt1.c1) ISNULL);
SELECT v0.c0, rt1.c1 FROM t0, v0, rt1, vt0 GROUP BY v0.c0, rt1.c1;
SELECT v0.c0, rt1.c1 FROM t0, v0, rt1, vt0 GROUP BY v0.c0, rt1.c1 HAVING rt1.c1 UNION ALL SELECT v0.c0, rt1.c1 FROM t0, v0 NOT INDEXED, rt1, vt0 GROUP BY v0.c0, rt1.c1 HAVING (NOT (rt1.c1)) UNION ALL SELECT v0.c0, rt1.c1 FROM t0, v0, rt1, vt0 GROUP BY v0.c0, rt1.c1 HAVING ((rt1.c1) ISNULL);
SELECT v0.c0, rt1.c1 FROM t0, v0, rt1, vt0 GROUP BY v0.c0, rt1.c1;
SELECT * FROM t0, rt1, vt0, v0;
SELECT ALL * FROM t0, rt1, vt0, v0 WHERE (NULL) UNION ALL SELECT * FROM t0, rt1, vt0, v0 WHERE ((NOT (NULL))) UNION ALL SELECT * FROM t0, rt1, vt0, v0 WHERE (((NULL) ISNULL));
SELECT * FROM t0, rt1, vt0, v0;
SELECT DISTINCT rt1.c0 FROM rt1;
SELECT DISTINCT rt1.c0 FROM rt1 WHERE ((+ ('30672754'))) UNION SELECT DISTINCT rt1.c0 FROM rt1 WHERE ((NOT ((+ ('30672754'))))) UNION SELECT DISTINCT rt1.c0 FROM rt1 WHERE ((((+ ('30672754'))) ISNULL));
SELECT DISTINCT rt1.c0 FROM rt1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((vt0.c0 IN ()))%(vt0.c0))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0 IN ()))%(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c0 IN ()))%(vt0.c0))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT t0.c0, rt1.c0, rt1.c2 FROM vt0, t0, rt1 GROUP BY t0.c0, rt1.c0, rt1.c2;
SELECT t0.c0, rt1.c0, rt1.c2 FROM vt0, t0, rt1 GROUP BY t0.c0, rt1.c0, rt1.c2 HAVING (MIN(t0.c0) IN (CASE COUNT(COUNT(*))  WHEN MIN(t0.c0) THEN COUNT(*) ELSE COUNT(COUNT(SUM(rt1.c3))) END, (~ (t0.c0)))) UNION ALL SELECT ALL t0.c0, rt1.c0, rt1.c2 FROM vt0, t0, rt1 GROUP BY t0.c0, rt1.c0, rt1.c2 HAVING (NOT ((MIN(t0.c0) IN (CASE COUNT(COUNT(*))  WHEN MIN(t0.c0) THEN COUNT(*) ELSE COUNT(COUNT(SUM(rt1.c3))) END, (~ (t0.c0)))))) UNION ALL SELECT t0.c0, rt1.c0, rt1.c2 FROM vt0, t0, rt1 GROUP BY t0.c0, rt1.c0, rt1.c2 HAVING (((MIN(t0.c0) IN (CASE COUNT(COUNT(*))  WHEN MIN(t0.c0) THEN COUNT(*) ELSE COUNT(COUNT(SUM(rt1.c3))) END, (~ (t0.c0))))) ISNULL);
SELECT ALL MIN((((((NULL)IS(rt1.c0))))<=(((+ (rt1.c2)))))) FROM vt0, v0, rt1;
SELECT ALL * FROM t0, vt0, rt1;
SELECT * FROM t0, vt0, rt1 WHERE (((((((rt1.c1)OR(rt1.c1)))OR(t0.c0))) NOT NULL)) UNION ALL SELECT ALL * FROM t0, vt0, rt1 WHERE ((NOT (((((((rt1.c1)OR(rt1.c1)))OR(t0.c0))) NOT NULL)))) UNION ALL SELECT ALL * FROM t0, vt0, rt1 WHERE (((((((((rt1.c1)OR(rt1.c1)))OR(t0.c0))) NOT NULL)) ISNULL));
SELECT ALL * FROM t0, vt0, rt1;
SELECT DISTINCT * FROM vt0, rt1, t0;
SELECT DISTINCT * FROM vt0, rt1, t0 WHERE (x'1359') UNION SELECT DISTINCT * FROM vt0, rt1, t0 WHERE ((NOT (x'1359'))) UNION SELECT DISTINCT * FROM vt0, rt1, t0 WHERE (((x'1359') ISNULL));
SELECT DISTINCT * FROM vt0, rt1, t0;
SELECT rt1.c3, rt1.c2, rt1.c0, rt1.c1, vt0.c0 FROM rt1, vt0 GROUP BY rt1.c3, rt1.c2, rt1.c0, rt1.c1, vt0.c0;
SELECT rt1.c3, rt1.c2, rt1.c0, rt1.c1, vt0.c0 FROM rt1, vt0 WHERE (((LOWER(DISTINCT vt0.c0))>>((- (rt1.c0))))) GROUP BY rt1.c3, rt1.c2, rt1.c0, rt1.c1, vt0.c0 UNION SELECT ALL rt1.c3, rt1.c2, rt1.c0, rt1.c1, vt0.c0 FROM rt1, vt0 WHERE ((NOT (((LOWER(DISTINCT vt0.c0))>>((- (rt1.c0))))))) GROUP BY rt1.c3, rt1.c2, rt1.c0, rt1.c1, vt0.c0 UNION SELECT rt1.c3, rt1.c2, rt1.c0, rt1.c1, vt0.c0 FROM rt1, vt0 WHERE (((((LOWER(DISTINCT vt0.c0))>>((- (rt1.c0))))) ISNULL)) GROUP BY rt1.c3, rt1.c2, rt1.c0, rt1.c1, vt0.c0;
SELECT rt1.c3, rt1.c2, rt1.c0, rt1.c1, vt0.c0 FROM rt1, vt0 GROUP BY rt1.c3, rt1.c2, rt1.c0, rt1.c1, vt0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING RTRIM(COUNT(v0.c0)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (RTRIM(COUNT(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((RTRIM(COUNT(v0.c0))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING RTRIM(COUNT(v0.c0)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (RTRIM(COUNT(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((RTRIM(COUNT(v0.c0))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL * FROM vt0, v0, t0;
SELECT ALL * FROM vt0, v0, t0 WHERE ((((- (v0.c0)))*(((v0.c0) NOTNULL)))) UNION ALL SELECT * FROM vt0, v0, t0 WHERE ((NOT ((((- (v0.c0)))*(((v0.c0) NOTNULL)))))) UNION ALL SELECT * FROM vt0, v0, t0 WHERE ((((((- (v0.c0)))*(((v0.c0) NOTNULL)))) ISNULL));
SELECT ALL * FROM vt0, v0, t0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((((v0.c0)AND(v0.c0)))OR(v0.c0)) IN (((v0.c0)GLOB(v0.c0)), LIKE(v0.c0, v0.c0, '%')))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((((v0.c0)AND(v0.c0)))OR(v0.c0)) IN (((v0.c0)GLOB(v0.c0)), LIKE(v0.c0, v0.c0, '%')))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)) IN (((v0.c0)GLOB(v0.c0)), LIKE(v0.c0, v0.c0, '%')))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((((v0.c0 IN ()))|(NULL))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((((v0.c0 IN ()))|(NULL))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((((v0.c0 IN ()))|(NULL))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT t0.c0 FROM v0, vt0 INNER JOIN t0 ON CASE WHEN vt0.c0 THEN ((t0.c0)||(t0.c0)) WHEN v0.c0 COLLATE BINARY THEN (~ (vt0.c0)) WHEN ((((v0.c0)AND(vt0.c0)))OR('J&u)')) THEN ((t0.c0)/(v0.c0)) END GROUP BY t0.c0;
SELECT ALL t0.c0 FROM v0, vt0 INNER JOIN t0 ON CASE WHEN vt0.c0 THEN ((t0.c0)||(t0.c0)) WHEN v0.c0 COLLATE BINARY THEN (~ (vt0.c0)) WHEN ((((v0.c0)AND(vt0.c0)))OR('J&u)')) THEN ((t0.c0)/(v0.c0)) END GROUP BY t0.c0 HAVING MIN((+ (MAX(vt0.c0)))) UNION ALL SELECT t0.c0 FROM v0, vt0 INNER JOIN t0 ON CASE WHEN vt0.c0 THEN ((t0.c0)||(t0.c0)) WHEN v0.c0 COLLATE BINARY THEN (~ (vt0.c0)) WHEN ((((v0.c0)AND(vt0.c0)))OR('J&u)')) THEN ((t0.c0)/(v0.c0)) END GROUP BY t0.c0 HAVING (NOT (MIN((+ (MAX(vt0.c0)))))) UNION ALL SELECT t0.c0 FROM v0, vt0 INNER JOIN t0 ON CASE WHEN vt0.c0 THEN ((t0.c0)||(t0.c0)) WHEN v0.c0 COLLATE BINARY THEN (~ (vt0.c0)) WHEN ((((v0.c0)AND(vt0.c0)))OR('J&u)')) THEN ((t0.c0)/(v0.c0)) END GROUP BY t0.c0 HAVING ((MIN((+ (MAX(vt0.c0))))) ISNULL);
SELECT rt1.c0, rt1.c3, v0.c0, rt1.c2 FROM v0, rt1, t0, vt0;
SELECT ALL rt1.c0, rt1.c3, v0.c0, rt1.c2 FROM v0, rt1, t0, vt0 WHERE (((((((x'16fd') NOT NULL))AND(((rt1.c1)<=(vt0.c0)))))AND(0.9921948458165673))) UNION ALL SELECT rt1.c0, rt1.c3, v0.c0, rt1.c2 FROM v0, rt1, t0, vt0 WHERE ((NOT (((((((x'16fd') NOT NULL))AND(((rt1.c1)<=(vt0.c0)))))AND(0.9921948458165673))))) UNION ALL SELECT ALL rt1.c0, rt1.c3, v0.c0, rt1.c2 FROM v0, rt1, t0, vt0 WHERE (((((((((x'16fd') NOT NULL))AND(((rt1.c1)<=(vt0.c0)))))AND(0.9921948458165673))) ISNULL));
SELECT rt1.c0, rt1.c3, v0.c0, rt1.c2 FROM v0, rt1, t0, vt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ('-185244928') UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ('-185244928'))) UNION SELECT DISTINCT * FROM v0 WHERE ((('-185244928') ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL rt1.c3, rt1.c0, v0.c0, rt1.c1, vt0.c0, rt1.c2 FROM vt0, rt1 FULL OUTER JOIN v0 ON rt1.c2 GROUP BY rt1.c3, rt1.c0, v0.c0, rt1.c1, vt0.c0, rt1.c2;
SELECT ALL rt1.c3, rt1.c0, v0.c0, rt1.c1, vt0.c0, rt1.c2 FROM vt0, rt1 FULL OUTER JOIN v0 ON rt1.c2 WHERE ((((((((rt1.c2))>=((rt1.c0))))OR(((rt1.c2) ISNULL))))OR((x'' IN ())))) GROUP BY rt1.c3, rt1.c0, v0.c0, rt1.c1, vt0.c0, rt1.c2 UNION SELECT ALL rt1.c3, rt1.c0, v0.c0, rt1.c1, vt0.c0, rt1.c2 FROM vt0, rt1 FULL OUTER JOIN v0 ON rt1.c2 WHERE ((NOT ((((((((rt1.c2))>=((rt1.c0))))OR(((rt1.c2) ISNULL))))OR((x'' IN ())))))) GROUP BY rt1.c3, rt1.c0, v0.c0, rt1.c1, vt0.c0, rt1.c2 UNION SELECT ALL rt1.c3, rt1.c0, v0.c0, rt1.c1, vt0.c0, rt1.c2 FROM vt0, rt1 FULL OUTER JOIN v0 ON rt1.c2 WHERE ((((((((((rt1.c2))>=((rt1.c0))))OR(((rt1.c2) ISNULL))))OR((x'' IN ())))) ISNULL)) GROUP BY rt1.c3, rt1.c0, v0.c0, rt1.c1, vt0.c0, rt1.c2;
SELECT ALL rt1.c3, rt1.c0, v0.c0, rt1.c1, vt0.c0, rt1.c2 FROM vt0, rt1 FULL OUTER JOIN v0 ON rt1.c2 GROUP BY rt1.c3, rt1.c0, v0.c0, rt1.c1, vt0.c0, rt1.c2;
SELECT ALL vt0.c0, t0.c0, rt1.c2, v0.c0 FROM rt1 RIGHT OUTER JOIN vt0 ON CASE ((t0.c0) NOT BETWEEN (v0.c0) AND (rt1.c0))  WHEN ((((vt0.c0)OR(rt1.c1)))AND(vt0.c0)) THEN (('-996238680') ISNULL) END FULL OUTER JOIN v0 ON t0.c0 COLLATE BINARY COLLATE RTRIM COLLATE RTRIM INNER JOIN t0 ON (((((rt1.c0)&(t0.c0))))!=((((1142601345) ISNULL)))) GROUP BY vt0.c0, t0.c0, rt1.c2, v0.c0;
SELECT ALL MIN((NOT (DATE(rt1.c3, v0.c0, '', rt1.c2, v0.c0)))) FROM rt1, v0 ORDER BY (((CASE WHEN rt1.c3 THEN rt1.c1 WHEN v0.c0 THEN rt1.c3 WHEN rt1.c2 THEN x'' END))<=((CAST(rt1.c2 AS TEXT))));
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 WHERE ((((CAST(vt0.c0 AS REAL)))<((((v0.c0)OR(vt0.c0)))))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 WHERE ((NOT ((((CAST(vt0.c0 AS REAL)))<((((v0.c0)OR(vt0.c0)))))))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 WHERE ((((((CAST(vt0.c0 AS REAL)))<((((v0.c0)OR(vt0.c0)))))) ISNULL));
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0;
SELECT DISTINCT * FROM t0, rt1, v0;
SELECT DISTINCT * FROM t0, rt1, v0 WHERE ((((CAST(t0.c0 AS NUMERIC)))<((((rt1.c0)!=(t0.c0)))))) UNION SELECT DISTINCT * FROM t0, rt1, v0 WHERE ((NOT ((((CAST(t0.c0 AS NUMERIC)))<((((rt1.c0)<>(t0.c0)))))))) UNION SELECT DISTINCT * FROM t0, rt1, v0 WHERE ((((((CAST(t0.c0 AS NUMERIC)))<((((rt1.c0)!=(t0.c0)))))) ISNULL));
SELECT DISTINCT * FROM t0, rt1, v0;
SELECT ALL t0.c0, rt1.c2, rt1.c3, rt1.c1, rt1.c0 FROM t0, rt1 GROUP BY t0.c0, rt1.c2, rt1.c3, rt1.c1, rt1.c0;
SELECT ALL t0.c0, rt1.c2, rt1.c3, rt1.c1, rt1.c0 FROM t0, rt1 WHERE ((NOT (rt1.c1))) GROUP BY t0.c0, rt1.c2, rt1.c3, rt1.c1, rt1.c0 UNION SELECT t0.c0, rt1.c2, rt1.c3, rt1.c1, rt1.c0 FROM t0, rt1 WHERE ((NOT ((NOT (rt1.c1))))) GROUP BY t0.c0, rt1.c2, rt1.c3, rt1.c1, rt1.c0 UNION SELECT ALL t0.c0, rt1.c2, rt1.c3, rt1.c1, rt1.c0 FROM t0, rt1 WHERE ((((NOT (rt1.c1))) ISNULL)) GROUP BY t0.c0, rt1.c2, rt1.c3, rt1.c1, rt1.c0;
SELECT ALL t0.c0, rt1.c2, rt1.c3, rt1.c1, rt1.c0 FROM t0, rt1 GROUP BY t0.c0, rt1.c2, rt1.c3, rt1.c1, rt1.c0;
SELECT rt1.c1 FROM rt1, t0 GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt1, t0 GROUP BY rt1.c1 HAVING (GROUP_CONCAT(SUM(COUNT(AVG(MAX(rt1.c2))))) IN ()) UNION ALL SELECT rt1.c1 FROM rt1, t0 GROUP BY rt1.c1 HAVING (NOT ((GROUP_CONCAT(SUM(COUNT(AVG(MAX(rt1.c2))))) IN ()))) UNION ALL SELECT rt1.c1 FROM rt1, t0 GROUP BY rt1.c1 HAVING (((GROUP_CONCAT(SUM(COUNT(AVG(MAX(rt1.c2))))) IN ())) ISNULL);
SELECT rt1.c1 FROM rt1, t0 GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt1, t0 GROUP BY rt1.c1 HAVING (GROUP_CONCAT(SUM(COUNT(AVG(MAX(rt1.c2))))) IN ()) UNION ALL SELECT rt1.c1 FROM rt1, t0 GROUP BY rt1.c1 HAVING (NOT ((GROUP_CONCAT(SUM(COUNT(AVG(MAX(rt1.c2))))) IN ()))) UNION ALL SELECT rt1.c1 FROM rt1, t0 GROUP BY rt1.c1 HAVING (((GROUP_CONCAT(SUM(COUNT(AVG(MAX(rt1.c2))))) IN ())) ISNULL);
SELECT rt1.c1 FROM rt1, t0 GROUP BY rt1.c1;
SELECT * FROM t0 RIGHT OUTER JOIN rt1 ON (((NOT (rt1.c2)))GLOB(CAST(rt1.c0 AS TEXT))) INNER JOIN vt0 ON 0.2891718655153276 RIGHT OUTER JOIN v0 ON CAST((((rt1.c0)) BETWEEN ((v0.c0)) AND ((t0.c0))) AS BLOB);
SELECT * FROM t0 RIGHT OUTER JOIN rt1 ON (((NOT (rt1.c2)))GLOB(CAST(rt1.c0 AS TEXT))) INNER JOIN vt0 ON 0.2891718655153276 RIGHT OUTER JOIN v0 ON CAST((((rt1.c0)) BETWEEN ((v0.c0)) AND ((t0.c0))) AS BLOB) WHERE (((rt1.c1 IN (rt1.c3, rt1.c1)) IN ())) UNION ALL SELECT ALL * FROM t0 RIGHT OUTER JOIN rt1 ON (((NOT (rt1.c2)))GLOB(CAST(rt1.c0 AS TEXT))) INNER JOIN vt0 ON 0.2891718655153276 RIGHT OUTER JOIN v0 ON CAST((((rt1.c0)) BETWEEN ((v0.c0)) AND ((t0.c0))) AS BLOB) WHERE ((NOT (((rt1.c1 IN (rt1.c3, rt1.c1)) IN ())))) UNION ALL SELECT ALL * FROM t0 RIGHT OUTER JOIN rt1 ON (((NOT (rt1.c2)))GLOB(CAST(rt1.c0 AS TEXT))) INNER JOIN vt0 ON 0.2891718655153276 RIGHT OUTER JOIN v0 ON CAST((((rt1.c0)) BETWEEN ((v0.c0)) AND ((t0.c0))) AS BLOB) WHERE (((((rt1.c1 IN (rt1.c3, rt1.c1)) IN ())) ISNULL));
SELECT * FROM t0 RIGHT OUTER JOIN rt1 ON (((NOT (rt1.c2)))GLOB(CAST(rt1.c0 AS TEXT))) INNER JOIN vt0 ON 0.2891718655153276 RIGHT OUTER JOIN v0 ON CAST((((rt1.c0)) BETWEEN ((v0.c0)) AND ((t0.c0))) AS BLOB);
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (t0.c0) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT * FROM t0 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL rt1.c2, rt1.c0, vt0.c0, v0.c0 FROM v0 CROSS JOIN rt1 ON IFNULL(DISTINCT CASE NULL  WHEN rt1.c0 THEN vt0.c0 ELSE rt1.c2 END, (rt1.c2 IN (rt1.c1, rt1.c2))) FULL OUTER JOIN vt0 ON (((- (rt1.c3)))IS(((v0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c2)))) GROUP BY rt1.c2, rt1.c0, vt0.c0, v0.c0;
SELECT v0.c0 FROM v0 INNER JOIN t0 ON ABS(((v0.c0)&(v0.c0))) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 INNER JOIN t0 ON ABS(((v0.c0)&(v0.c0))) GROUP BY v0.c0 HAVING COUNT(TOTAL(2139117191)) UNION ALL SELECT v0.c0 FROM v0 INNER JOIN t0 ON ABS(((v0.c0)&(v0.c0))) GROUP BY v0.c0 HAVING (NOT (COUNT(TOTAL(2139117191)))) UNION ALL SELECT v0.c0 FROM v0 INNER JOIN t0 ON ABS(((v0.c0)&(v0.c0))) GROUP BY v0.c0 HAVING ((COUNT(TOTAL(2139117191))) ISNULL);
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (((ABS('1319613632')) BETWEEN (v0.c0) AND (v0.c0))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (((ABS('1319613632')) BETWEEN (v0.c0) AND (v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((((ABS('1319613632')) BETWEEN (v0.c0) AND (v0.c0))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT vt0.c0, t0.c0 FROM vt0 INNER JOIN t0 ON (- ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))));
SELECT DISTINCT vt0.c0, t0.c0 FROM vt0 INNER JOIN t0 ON (- ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))) WHERE (((t0.c0)<=(t0.c0)) COLLATE BINARY) UNION SELECT DISTINCT vt0.c0, t0.c0 FROM vt0 INNER JOIN t0 ON (- ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))) WHERE ((NOT (((t0.c0)<=(t0.c0)) COLLATE BINARY))) UNION SELECT DISTINCT vt0.c0, t0.c0 FROM vt0 INNER JOIN t0 ON (- ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))) WHERE (((((t0.c0)<=(t0.c0)) COLLATE BINARY) ISNULL));
SELECT DISTINCT vt0.c0, t0.c0 FROM vt0 INNER JOIN t0 ON (- ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))));
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (((t0.c0)<(((x'')<(t0.c0))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((t0.c0)<(((x'')<(t0.c0))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((t0.c0)<(((x'')<(t0.c0))))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT v0.c0 FROM v0, t0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, t0 GROUP BY v0.c0 HAVING SUM(CAST(t0.c0 AS NUMERIC)) UNION ALL SELECT ALL v0.c0 FROM v0, t0 GROUP BY v0.c0 HAVING (NOT (SUM(CAST(t0.c0 AS NUMERIC)))) UNION ALL SELECT v0.c0 FROM v0, t0 GROUP BY v0.c0 HAVING ((SUM(CAST(t0.c0 AS NUMERIC))) ISNULL);
SELECT v0.c0 FROM v0, t0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, t0 GROUP BY v0.c0 HAVING SUM(CAST(t0.c0 AS NUMERIC)) UNION ALL SELECT ALL v0.c0 FROM v0, t0 GROUP BY v0.c0 HAVING (NOT (SUM(CAST(t0.c0 AS NUMERIC)))) UNION ALL SELECT v0.c0 FROM v0, t0 GROUP BY v0.c0 HAVING ((SUM(CAST(t0.c0 AS NUMERIC))) ISNULL);
SELECT v0.c0 FROM v0, t0 GROUP BY v0.c0;
SELECT ALL t0.c0, rt1.c0, rt1.c1, vt0.c0, v0.c0, rt1.c3, rt1.c2 FROM v0, rt1 NOT INDEXED, t0, vt0;
SELECT t0.c0, rt1.c0, rt1.c1, vt0.c0, v0.c0, rt1.c3, rt1.c2 FROM v0, rt1, t0, vt0 WHERE (CASE t0.c0 COLLATE RTRIM  WHEN ABS(DISTINCT rt1.c0) THEN NULL WHEN ((t0.c0)LIKE(NULL)) THEN rt1.c0 WHEN (NOT (v0.c0)) THEN ((rt1.c1) NOT BETWEEN (rt1.c3) AND (vt0.c0)) END) UNION ALL SELECT t0.c0, rt1.c0, rt1.c1, vt0.c0, v0.c0, rt1.c3, rt1.c2 FROM v0, rt1, t0, vt0 WHERE ((NOT (CASE t0.c0 COLLATE RTRIM  WHEN ABS(DISTINCT rt1.c0) THEN NULL WHEN ((t0.c0)LIKE(NULL)) THEN rt1.c0 WHEN (NOT (v0.c0)) THEN ((rt1.c1) NOT BETWEEN (rt1.c3) AND (vt0.c0)) END))) UNION ALL SELECT t0.c0, rt1.c0, rt1.c1, vt0.c0, v0.c0, rt1.c3, rt1.c2 FROM v0, rt1, t0, vt0 WHERE (((CASE t0.c0 COLLATE RTRIM  WHEN ABS(DISTINCT rt1.c0) THEN NULL WHEN ((t0.c0)LIKE(NULL)) THEN rt1.c0 WHEN (NOT (v0.c0)) THEN ((rt1.c1) NOT BETWEEN (rt1.c3) AND (vt0.c0)) END) ISNULL));
SELECT ALL t0.c0, rt1.c0, rt1.c1, vt0.c0, v0.c0, rt1.c3, rt1.c2 FROM v0, rt1 NOT INDEXED, t0, vt0;
SELECT DISTINCT * FROM vt0, t0, v0;
SELECT DISTINCT * FROM vt0, t0, v0 WHERE ((((v0.c0)) NOT BETWEEN ((('1614379387' IN ()))) AND ((UPPER(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0, t0, v0 WHERE ((NOT ((((v0.c0)) NOT BETWEEN ((('1614379387' IN ()))) AND ((UPPER(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0, t0, v0 WHERE ((((((v0.c0)) NOT BETWEEN ((('1614379387' IN ()))) AND ((UPPER(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, t0, v0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0)+(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0)+(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0)+(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt1.c2, rt1.c3 FROM v0, rt1 GROUP BY rt1.c2, rt1.c3;
SELECT ALL rt1.c2, rt1.c3 FROM v0, rt1 GROUP BY rt1.c2, rt1.c3 HAVING TOTAL(GROUP_CONCAT(MAX(v0.c0))) UNION ALL SELECT ALL rt1.c2, rt1.c3 FROM v0, rt1 GROUP BY rt1.c2, rt1.c3 HAVING (NOT (TOTAL(GROUP_CONCAT(MAX(v0.c0))))) UNION ALL SELECT rt1.c2, rt1.c3 FROM v0, rt1 GROUP BY rt1.c2, rt1.c3 HAVING ((TOTAL(GROUP_CONCAT(MAX(v0.c0)))) ISNULL);
SELECT t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE (((t0.c0 IN ()) IN ())) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((t0.c0 IN ()) IN ())))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE (((((t0.c0 IN ()) IN ())) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((vt0.c0)&(vt0.c0)) COLLATE RTRIM) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0)&(vt0.c0)) COLLATE RTRIM))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((vt0.c0)&(vt0.c0)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL rt1.c0, t0.c0, rt1.c2, v0.c0 FROM v0, vt0, rt1, t0 GROUP BY rt1.c0, t0.c0, rt1.c2, v0.c0;
SELECT rt1.c0, t0.c0, rt1.c2, v0.c0 FROM v0, vt0, rt1, t0 WHERE (rt1.c1 COLLATE RTRIM) GROUP BY rt1.c0, t0.c0, rt1.c2, v0.c0 UNION SELECT ALL rt1.c0, t0.c0, rt1.c2, v0.c0 FROM v0, vt0, rt1, t0 WHERE ((NOT (rt1.c1 COLLATE RTRIM))) GROUP BY rt1.c0, t0.c0, rt1.c2, v0.c0 UNION SELECT ALL rt1.c0, t0.c0, rt1.c2, v0.c0 FROM v0, vt0, rt1, t0 WHERE (((rt1.c1 COLLATE RTRIM) ISNULL)) GROUP BY rt1.c0, t0.c0, rt1.c2, v0.c0;
SELECT ALL rt1.c0, t0.c0, rt1.c2, v0.c0 FROM v0, vt0, rt1, t0 GROUP BY rt1.c0, t0.c0, rt1.c2, v0.c0;
SELECT rt1.c1, rt1.c2, rt1.c0, rt1.c3 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0, rt1.c3;
SELECT ALL rt1.c1, rt1.c2, rt1.c0, rt1.c3 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0, rt1.c3 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c1, rt1.c2, rt1.c0, rt1.c3 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0, rt1.c3 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c1, rt1.c2, rt1.c0, rt1.c3 FROM rt1 NOT INDEXED GROUP BY rt1.c1, rt1.c2, rt1.c0, rt1.c3 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c1, rt1.c2, rt1.c0, rt1.c3 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0, rt1.c3;
SELECT ALL rt1.c1, rt1.c2, rt1.c0, rt1.c3 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0, rt1.c3 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c1, rt1.c2, rt1.c0, rt1.c3 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0, rt1.c3 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c1, rt1.c2, rt1.c0, rt1.c3 FROM rt1 NOT INDEXED GROUP BY rt1.c1, rt1.c2, rt1.c0, rt1.c3 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c1, rt1.c2, rt1.c0, rt1.c3 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0, rt1.c3;
SELECT ALL * FROM rt1 INDEXED BY i30, vt0 RIGHT OUTER JOIN v0 ON vt0.c0 RIGHT OUTER JOIN t0 ON (+ ((v0.c0 IN (rt1.c0))));
SELECT DISTINCT * FROM v0, rt1;
SELECT DISTINCT * FROM v0, rt1 WHERE ((((rt1.c0) IS TRUE) IN (UPPER(v0.c0)))) UNION SELECT DISTINCT * FROM v0, rt1 WHERE ((NOT ((((rt1.c0) IS TRUE) IN (UPPER(v0.c0)))))) UNION SELECT DISTINCT * FROM v0, rt1 WHERE ((((((rt1.c0) IS TRUE) IN (UPPER(v0.c0)))) ISNULL));
SELECT DISTINCT * FROM v0, rt1;
SELECT ALL rt1.c2, rt1.c0, rt1.c3, t0.c0 FROM t0, v0, vt0 NATURAL JOIN rt1 GROUP BY rt1.c2, rt1.c0, rt1.c3, t0.c0;
SELECT ALL rt1.c2, rt1.c0, rt1.c3, t0.c0 FROM t0, v0, vt0 NATURAL JOIN rt1 WHERE (((v0.c0)+(rt1.c2)) COLLATE RTRIM COLLATE NOCASE) GROUP BY rt1.c2, rt1.c0, rt1.c3, t0.c0 UNION SELECT ALL rt1.c2, rt1.c0, rt1.c3, t0.c0 FROM t0, v0, vt0 NATURAL JOIN rt1 WHERE ((NOT (((v0.c0)+(rt1.c2)) COLLATE RTRIM COLLATE NOCASE))) GROUP BY rt1.c2, rt1.c0, rt1.c3, t0.c0 UNION SELECT ALL rt1.c2, rt1.c0, rt1.c3, t0.c0 FROM t0, v0, vt0 NATURAL JOIN rt1 WHERE (((((v0.c0)+(rt1.c2)) COLLATE RTRIM COLLATE NOCASE) ISNULL)) GROUP BY rt1.c2, rt1.c0, rt1.c3, t0.c0;
SELECT ALL rt1.c2, rt1.c0, rt1.c3, t0.c0 FROM t0, v0, vt0 NATURAL JOIN rt1 GROUP BY rt1.c2, rt1.c0, rt1.c3, t0.c0;
SELECT v0.c0 FROM v0 NOT INDEXED GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING AVG(NULLIF(DISTINCT TOTAL(COUNT(v0.c0)), GROUP_CONCAT(SUM(TOTAL(AVG(v0.c0)))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (AVG(NULLIF(DISTINCT TOTAL(COUNT(v0.c0)), GROUP_CONCAT(SUM(TOTAL(AVG(v0.c0)))))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((AVG(NULLIF(DISTINCT TOTAL(COUNT(v0.c0)), GROUP_CONCAT(SUM(TOTAL(AVG(v0.c0))))))) ISNULL);
SELECT ALL v0.c0 FROM t0, v0, rt1;
SELECT ALL v0.c0 FROM t0, v0, rt1 WHERE (0.14775968247684035) UNION ALL SELECT ALL v0.c0 FROM t0, v0, rt1 WHERE ((NOT (0.14775968247684035))) UNION ALL SELECT ALL v0.c0 FROM t0, v0, rt1 WHERE (((0.14775968247684035) ISNULL));
SELECT ALL v0.c0 FROM t0, v0, rt1;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (CASE WHEN RTRIM(x'') THEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) END) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (CASE WHEN RTRIM(x'') THEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) END))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((CASE WHEN RTRIM(x'') THEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) END) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ((+ ('2058324376'))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((+ ('2058324376'))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((((+ ('2058324376'))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0, v0.c0 FROM v0 RIGHT OUTER JOIN t0 ON (((((((((v0.c0 IN ()))OR((((-818807241, t0.c0, t0.c0)) BETWEEN ((t0.c0, v0.c0, v0.c0)) AND ((v0.c0, t0.c0, t0.c0))))))AND(CAST(v0.c0 AS INTEGER))))AND(CAST('-1964910061' AS NUMERIC))))OR((- (v0.c0)))) GROUP BY t0.c0, v0.c0;
SELECT t0.c0, v0.c0 FROM v0 RIGHT OUTER JOIN t0 ON (((((((((v0.c0 IN ()))OR((((-818807241, t0.c0, t0.c0)) BETWEEN ((t0.c0, v0.c0, v0.c0)) AND ((v0.c0, t0.c0, t0.c0))))))AND(CAST(v0.c0 AS INTEGER))))AND(CAST('-1964910061' AS NUMERIC))))OR((- (v0.c0)))) GROUP BY t0.c0, v0.c0 HAVING COUNT(COUNT(*)) UNION ALL SELECT ALL t0.c0, v0.c0 FROM v0 RIGHT OUTER JOIN t0 ON (((((((((v0.c0 IN ()))OR((((-818807241, t0.c0, t0.c0)) BETWEEN ((t0.c0, v0.c0, v0.c0)) AND ((v0.c0, t0.c0, t0.c0))))))AND(CAST(v0.c0 AS INTEGER))))AND(CAST('-1964910061' AS NUMERIC))))OR((- (v0.c0)))) GROUP BY t0.c0, v0.c0 HAVING (NOT (COUNT(COUNT(*)))) UNION ALL SELECT t0.c0, v0.c0 FROM v0 RIGHT OUTER JOIN t0 ON (((((((((v0.c0 IN ()))OR((((-818807241, t0.c0, t0.c0)) BETWEEN ((t0.c0, v0.c0, v0.c0)) AND ((v0.c0, t0.c0, t0.c0))))))AND(CAST(v0.c0 AS INTEGER))))AND(CAST('-1964910061' AS NUMERIC))))OR((- (v0.c0)))) GROUP BY t0.c0, v0.c0 HAVING ((COUNT(COUNT(*))) ISNULL);
SELECT rt1.c3, vt0.c0, v0.c0, rt1.c1, t0.c0, rt1.c2, rt1.c0 FROM vt0 NOT INDEXED, v0, rt1 FULL OUTER JOIN t0 ON CAST(((rt1.c3) NOTNULL) AS INTEGER);
SELECT ALL rt1.c3, vt0.c0, v0.c0, rt1.c1, t0.c0, rt1.c2, rt1.c0 FROM vt0, v0, rt1 FULL OUTER JOIN t0 ON CAST(((rt1.c3) NOTNULL) AS INTEGER) WHERE (((((rt1.c3)OR((+ (vt0.c0)))))OR(((t0.c0) IS FALSE)))) UNION ALL SELECT rt1.c3, vt0.c0, v0.c0, rt1.c1, t0.c0, rt1.c2, rt1.c0 FROM vt0, v0, rt1 FULL OUTER JOIN t0 ON CAST(((rt1.c3) NOTNULL) AS INTEGER) WHERE ((NOT (((((rt1.c3)OR((+ (vt0.c0)))))OR(((t0.c0) IS FALSE)))))) UNION ALL SELECT ALL rt1.c3, vt0.c0, v0.c0, rt1.c1, t0.c0, rt1.c2, rt1.c0 FROM vt0, v0, rt1 FULL OUTER JOIN t0 ON CAST(((rt1.c3) NOTNULL) AS INTEGER) WHERE (((((((rt1.c3)OR((+ (vt0.c0)))))OR(((t0.c0) IS FALSE)))) ISNULL));
SELECT rt1.c3, vt0.c0, v0.c0, rt1.c1, t0.c0, rt1.c2, rt1.c0 FROM vt0 NOT INDEXED, v0, rt1 FULL OUTER JOIN t0 ON CAST(((rt1.c3) NOTNULL) AS INTEGER);
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((+ (CAST('Fi' AS TEXT)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((+ (CAST('Fi' AS TEXT)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((+ (CAST('Fi' AS TEXT)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt1.c0, rt1.c2, rt1.c3, rt1.c1 FROM rt1 INDEXED BY i24 GROUP BY rt1.c0, rt1.c2, rt1.c3, rt1.c1;
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (SQLITE_COMPILEOPTION_USED((((v0.c0)) NOT BETWEEN (('D&sVo\HF.')) AND ((v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (SQLITE_COMPILEOPTION_USED((((v0.c0)) NOT BETWEEN (('D&sVo\HF.')) AND ((v0.c0))))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((SQLITE_COMPILEOPTION_USED((((v0.c0)) NOT BETWEEN (('D&sVo\HF.')) AND ((v0.c0))))) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT rt1.c3, rt1.c0, rt1.c1, t0.c0, rt1.c2 FROM rt1 NOT INDEXED, t0;
SELECT DISTINCT rt1.c3, rt1.c0, rt1.c1, t0.c0, rt1.c2 FROM rt1, t0 WHERE (CASE WHEN (NOT (rt1.c1)) THEN TRIM(DISTINCT 0Xffffffffb052e16a, rt1.c3) WHEN (((t0.c0))<((rt1.c3))) THEN TRIM(DISTINCT rt1.c3, rt1.c0) WHEN LIKE(rt1.c0, rt1.c1, 'P') THEN ((NULL)&(rt1.c1)) END) UNION SELECT DISTINCT rt1.c3, rt1.c0, rt1.c1, t0.c0, rt1.c2 FROM rt1, t0 WHERE ((NOT (CASE WHEN (NOT (rt1.c1)) THEN TRIM(DISTINCT 0xffffffffb052e16a, rt1.c3) WHEN (((t0.c0))<((rt1.c3))) THEN TRIM(DISTINCT rt1.c3, rt1.c0) WHEN LIKE(rt1.c0, rt1.c1, 'P') THEN ((NULL)&(rt1.c1)) END))) UNION SELECT DISTINCT rt1.c3, rt1.c0, rt1.c1, t0.c0, rt1.c2 FROM rt1, t0 WHERE (((CASE WHEN (NOT (rt1.c1)) THEN TRIM(DISTINCT 0Xffffffffb052e16a, rt1.c3) WHEN (((t0.c0))<((rt1.c3))) THEN TRIM(DISTINCT rt1.c3, rt1.c0) WHEN LIKE(rt1.c0, rt1.c1, 'P') THEN ((NULL)&(rt1.c1)) END) ISNULL));
SELECT DISTINCT rt1.c3, rt1.c0, rt1.c1, t0.c0, rt1.c2 FROM rt1 NOT INDEXED, t0;
SELECT ALL v0.c0, t0.c0 FROM v0, rt1, vt0, t0 GROUP BY v0.c0, t0.c0;
SELECT ALL v0.c0, t0.c0 FROM v0, rt1, vt0, t0 WHERE (v0.c0) GROUP BY v0.c0, t0.c0 UNION SELECT v0.c0, t0.c0 FROM v0, rt1, vt0, t0 WHERE ((NOT (v0.c0))) GROUP BY v0.c0, t0.c0 UNION SELECT ALL v0.c0, t0.c0 FROM v0, rt1, vt0, t0 WHERE (((v0.c0) ISNULL)) GROUP BY v0.c0, t0.c0;
SELECT ALL v0.c0, t0.c0 FROM v0, rt1, vt0, t0 GROUP BY v0.c0, t0.c0;
SELECT vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TOTAL((~ (MIN(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL((~ (MIN(vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL((~ (MIN(vt0.c0))))) ISNULL);
SELECT ALL SUM(((((((vt0.c0)<<(rt1.c3)))OR(HEX(rt1.c3))))OR(((((x'69aa')OR(rt1.c2)))AND(v0.c0))))) FROM vt0, v0, rt1, t0;
SELECT ALL rt1.c3, vt0.c0, rt1.c0, rt1.c2, rt1.c1 FROM vt0, v0, rt1 LEFT OUTER JOIN t0 ON COALESCE((((987549761, rt1.c2, vt0.c0))=((v0.c0, v0.c0, rt1.c3))), CAST(rt1.c2 AS NUMERIC), '-1849437526', ((rt1.c1) NOT BETWEEN (rt1.c1) AND (t0.c0)));
SELECT ALL rt1.c3, vt0.c0, rt1.c0, rt1.c2, rt1.c1 FROM vt0, v0, rt1 LEFT OUTER JOIN t0 ON COALESCE((((987549761, rt1.c2, vt0.c0))=((v0.c0, v0.c0, rt1.c3))), CAST(rt1.c2 AS NUMERIC), '-1849437526', ((rt1.c1) NOT BETWEEN (rt1.c1) AND (t0.c0))) WHERE (((((rt1.c2)>>(t0.c0))) IS FALSE)) UNION ALL SELECT ALL rt1.c3, vt0.c0, rt1.c0, rt1.c2, rt1.c1 FROM vt0, v0, rt1 LEFT OUTER JOIN t0 ON COALESCE((((987549761, rt1.c2, vt0.c0))==((v0.c0, v0.c0, rt1.c3))), CAST(rt1.c2 AS NUMERIC), '-1849437526', ((rt1.c1) NOT BETWEEN (rt1.c1) AND (t0.c0))) WHERE ((NOT (((((rt1.c2)>>(t0.c0))) IS FALSE)))) UNION ALL SELECT ALL rt1.c3, vt0.c0, rt1.c0, rt1.c2, rt1.c1 FROM vt0, v0, rt1 LEFT OUTER JOIN t0 ON COALESCE((((987549761, rt1.c2, vt0.c0))=((v0.c0, v0.c0, rt1.c3))), CAST(rt1.c2 AS NUMERIC), '-1849437526', ((rt1.c1) NOT BETWEEN (rt1.c1) AND (t0.c0))) WHERE (((((((rt1.c2)>>(t0.c0))) IS FALSE)) ISNULL));
SELECT ALL rt1.c3, vt0.c0, rt1.c0, rt1.c2, rt1.c1 FROM vt0, v0, rt1 LEFT OUTER JOIN t0 ON COALESCE((((987549761, rt1.c2, vt0.c0))=((v0.c0, v0.c0, rt1.c3))), CAST(rt1.c2 AS NUMERIC), '-1849437526', ((rt1.c1) NOT BETWEEN (rt1.c1) AND (t0.c0)));
SELECT DISTINCT * FROM t0, v0 CROSS JOIN rt1 ON TOTAL_CHANGES();
SELECT DISTINCT * FROM t0, v0 CROSS JOIN rt1 ON TOTAL_CHANGES() WHERE (json(((rt1.c2) IS FALSE))) UNION SELECT DISTINCT * FROM t0, v0 CROSS JOIN rt1 ON TOTAL_CHANGES() WHERE ((NOT (json(((rt1.c2) IS FALSE))))) UNION SELECT DISTINCT * FROM t0, v0 CROSS JOIN rt1 ON TOTAL_CHANGES() WHERE (((json(((rt1.c2) IS FALSE))) ISNULL));
SELECT DISTINCT * FROM t0, v0 CROSS JOIN rt1 ON TOTAL_CHANGES();
SELECT ALL rt1.c0, rt1.c3 FROM rt1 GROUP BY rt1.c0, rt1.c3;
SELECT rt1.c0, rt1.c3 FROM rt1 WHERE (((((rt1.c1)<=(rt1.c2))) ISNULL)) GROUP BY rt1.c0, rt1.c3 UNION SELECT ALL rt1.c0, rt1.c3 FROM rt1 WHERE ((NOT (((((rt1.c1)<=(rt1.c2))) ISNULL)))) GROUP BY rt1.c0, rt1.c3 UNION SELECT rt1.c0, rt1.c3 FROM rt1 WHERE (((((((rt1.c1)<=(rt1.c2))) ISNULL)) ISNULL)) GROUP BY rt1.c0, rt1.c3;
SELECT ALL rt1.c0, rt1.c3 FROM rt1 GROUP BY rt1.c0, rt1.c3;
SELECT ALL vt0.c0, rt1.c1 FROM rt1, vt0, t0 GROUP BY vt0.c0, rt1.c1;
SELECT vt0.c0, rt1.c1 FROM rt1, vt0, t0 GROUP BY vt0.c0, rt1.c1 HAVING MAX(COUNT(AVG(AVG(COUNT(*))))) UNION ALL SELECT vt0.c0, rt1.c1 FROM rt1, vt0, t0 GROUP BY vt0.c0, rt1.c1 HAVING (NOT (MAX(COUNT(AVG(AVG(COUNT(*))))))) UNION ALL SELECT ALL vt0.c0, rt1.c1 FROM rt1, vt0, t0 GROUP BY vt0.c0, rt1.c1 HAVING ((MAX(COUNT(AVG(AVG(COUNT(*)))))) ISNULL);
SELECT vt0.c0, rt1.c0, rt1.c2, t0.c0, rt1.c3, rt1.c1, v0.c0 FROM vt0 CROSS JOIN v0 ON (((((+ (rt1.c1)))AND(((rt1.c1) IS TRUE))))AND(((v0.c0)||(rt1.c0)))) LEFT OUTER JOIN rt1 ON 0Xffffffff963da1fc RIGHT OUTER JOIN t0 ON ((rt1.c1 IN (rt1.c3)) IN ());
SELECT DISTINCT rt1.c0, rt1.c2, t0.c0, rt1.c3 FROM t0 RIGHT OUTER JOIN rt1 ON (((rt1.c0) BETWEEN (rt1.c3) AND (t0.c0)) IN ());
SELECT DISTINCT rt1.c0, rt1.c2, t0.c0, rt1.c3 FROM t0 RIGHT OUTER JOIN rt1 ON (((rt1.c0) BETWEEN (rt1.c3) AND (t0.c0)) IN ()) WHERE (((((CAST(rt1.c2 AS INTEGER))OR(ABS(rt1.c1))))OR(NULL))) UNION SELECT DISTINCT rt1.c0, rt1.c2, t0.c0, rt1.c3 FROM t0 RIGHT OUTER JOIN rt1 ON (((rt1.c0) BETWEEN (rt1.c3) AND (t0.c0)) IN ()) WHERE ((NOT (((((CAST(rt1.c2 AS INTEGER))OR(ABS(rt1.c1))))OR(NULL))))) UNION SELECT DISTINCT rt1.c0, rt1.c2, t0.c0, rt1.c3 FROM t0 RIGHT OUTER JOIN rt1 ON (((rt1.c0) BETWEEN (rt1.c3) AND (t0.c0)) IN ()) WHERE (((((((CAST(rt1.c2 AS INTEGER))OR(ABS(rt1.c1))))OR(NULL))) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c2, t0.c0, rt1.c3 FROM t0 RIGHT OUTER JOIN rt1 ON (((rt1.c0) BETWEEN (rt1.c3) AND (t0.c0)) IN ());
SELECT vt0.c0, t0.c0 FROM v0, vt0, t0 GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM v0, vt0, t0 WHERE (CASE CASE vt0.c0  WHEN 0.10351208950719448 THEN v0.c0 END  WHEN SUBSTR(v0.c0, t0.c0) THEN ((0.10507017370945282) NOT NULL) END) GROUP BY vt0.c0, t0.c0 UNION SELECT vt0.c0, t0.c0 FROM v0, vt0, t0 WHERE ((NOT (CASE CASE vt0.c0  WHEN 0.10351208950719448 THEN v0.c0 END  WHEN SUBSTR(v0.c0, t0.c0) THEN ((0.10507017370945282) NOT NULL) END))) GROUP BY vt0.c0, t0.c0 UNION SELECT vt0.c0, t0.c0 FROM v0, vt0, t0 WHERE (((CASE CASE vt0.c0  WHEN 0.10351208950719448 THEN v0.c0 END  WHEN SUBSTR(v0.c0, t0.c0) THEN ((0.10507017370945282) NOT NULL) END) ISNULL)) GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, t0.c0 FROM v0, vt0, t0 GROUP BY vt0.c0, t0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(MAX(0.04572922021696468)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(MAX(0.04572922021696468)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(MAX(0.04572922021696468))) ISNULL);
SELECT ALL * FROM vt0, v0 INDEXED BY i30, t0;
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN vt0 ON CAST(NULL AS REAL) RIGHT OUTER JOIN rt1 ON CAST(((vt0.c0) NOT BETWEEN ('⼇v趜') AND (rt1.c1)) AS NUMERIC);
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN vt0 ON CAST(NULL AS REAL) RIGHT OUTER JOIN rt1 ON CAST(((vt0.c0) NOT BETWEEN ('⼇v趜') AND (rt1.c1)) AS NUMERIC) WHERE (((((CAST(rt1.c3 AS INTEGER))AND(CAST(rt1.c3 AS REAL))))AND(rt1.c0 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN vt0 ON CAST(NULL AS REAL) RIGHT OUTER JOIN rt1 ON CAST(((vt0.c0) NOT BETWEEN ('⼇v趜') AND (rt1.c1)) AS NUMERIC) WHERE ((NOT (((((CAST(rt1.c3 AS INTEGER))AND(CAST(rt1.c3 AS REAL))))AND(rt1.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN vt0 ON CAST(NULL AS REAL) RIGHT OUTER JOIN rt1 ON CAST(((vt0.c0) NOT BETWEEN ('⼇v趜') AND (rt1.c1)) AS NUMERIC) WHERE (((((((CAST(rt1.c3 AS INTEGER))AND(CAST(rt1.c3 AS REAL))))AND(rt1.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN vt0 ON CAST(NULL AS REAL) RIGHT OUTER JOIN rt1 ON CAST(((vt0.c0) NOT BETWEEN ('⼇v趜') AND (rt1.c1)) AS NUMERIC);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (CAST(vt0.c0 AS NUMERIC)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CAST(vt0.c0 AS NUMERIC)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt1.c1, v0.c0, rt1.c3, rt1.c2, t0.c0 FROM rt1, v0, vt0, t0 GROUP BY rt1.c1, v0.c0, rt1.c3, rt1.c2, t0.c0;
SELECT ALL rt1.c1, v0.c0, rt1.c3, rt1.c2, t0.c0 FROM rt1, v0, vt0, t0 GROUP BY rt1.c1, v0.c0, rt1.c3, rt1.c2, t0.c0 HAVING (((TOTAL('') IN (SUM(v0.c0)))) NOT BETWEEN (CASE COUNT(TOTAL(MIN(v0.c0)))  WHEN rt1.c0 THEN MIN(MIN(AVG(AVG(rt1.c3)))) WHEN GROUP_CONCAT(GROUP_CONCAT(MIN(COUNT(v0.c0)))) THEN AVG(rt1.c0) WHEN MIN(MAX(t0.c0)) THEN v0.c0 WHEN rt1.c3 THEN AVG(SUM(COUNT(rt1.c0))) WHEN rt1.c1 THEN -1.787427006E9 ELSE v0.c0 END) AND (TOTAL(COUNT(rt1.c0)))) UNION ALL SELECT rt1.c1, v0.c0, rt1.c3, rt1.c2, t0.c0 FROM rt1, v0, vt0, t0 GROUP BY rt1.c1, v0.c0, rt1.c3, rt1.c2, t0.c0 HAVING (NOT ((((TOTAL('') IN (SUM(v0.c0)))) NOT BETWEEN (CASE COUNT(TOTAL(MIN(v0.c0)))  WHEN rt1.c0 THEN MIN(MIN(AVG(AVG(rt1.c3)))) WHEN GROUP_CONCAT(GROUP_CONCAT(MIN(COUNT(v0.c0)))) THEN AVG(rt1.c0) WHEN MIN(MAX(t0.c0)) THEN v0.c0 WHEN rt1.c3 THEN AVG(SUM(COUNT(rt1.c0))) WHEN rt1.c1 THEN -1.787427006E9 ELSE v0.c0 END) AND (TOTAL(COUNT(rt1.c0)))))) UNION ALL SELECT ALL rt1.c1, v0.c0, rt1.c3, rt1.c2, t0.c0 FROM rt1, v0, vt0, t0 GROUP BY rt1.c1, v0.c0, rt1.c3, rt1.c2, t0.c0 HAVING (((((TOTAL('') IN (SUM(v0.c0)))) NOT BETWEEN (CASE COUNT(TOTAL(MIN(v0.c0)))  WHEN rt1.c0 THEN MIN(MIN(AVG(AVG(rt1.c3)))) WHEN GROUP_CONCAT(GROUP_CONCAT(MIN(COUNT(v0.c0)))) THEN AVG(rt1.c0) WHEN MIN(MAX(t0.c0)) THEN v0.c0 WHEN rt1.c3 THEN AVG(SUM(COUNT(rt1.c0))) WHEN rt1.c1 THEN -1.787427006E9 ELSE v0.c0 END) AND (TOTAL(COUNT(rt1.c0))))) ISNULL);
SELECT * FROM rt1, v0, vt0;
SELECT ALL * FROM rt1, v0 NOT INDEXED, vt0 WHERE (CASE WHEN (NOT (v0.c0)) THEN (rt1.c1 IN ()) ELSE ((((rt1.c2)AND(rt1.c1)))OR(rt1.c2)) END) UNION ALL SELECT * FROM rt1, v0, vt0 WHERE ((NOT (CASE WHEN (NOT (v0.c0)) THEN (rt1.c1 IN ()) ELSE ((((rt1.c2)AND(rt1.c1)))OR(rt1.c2)) END))) UNION ALL SELECT ALL * FROM rt1, v0, vt0 WHERE (((CASE WHEN (NOT (v0.c0)) THEN (rt1.c1 IN ()) ELSE ((((rt1.c2)AND(rt1.c1)))OR(rt1.c2)) END) ISNULL));
SELECT * FROM rt1, v0, vt0;
SELECT DISTINCT * FROM rt1 FULL OUTER JOIN vt0 ON ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))/((((rt1.c2, v0.c0, rt1.c2)) NOT BETWEEN (('138101685', v0.c0, 0.16442954618307448)) AND ((rt1.c2, '494027853', rt1.c3))))) CROSS JOIN v0 ON ((((((rt1.c1)OR(vt0.c0)))AND(rt1.c2))) IS FALSE);
SELECT vt0.c0, rt1.c1, rt1.c0, rt1.c2, t0.c0, rt1.c3 FROM rt1, vt0, t0 GROUP BY vt0.c0, rt1.c1, rt1.c0, rt1.c2, t0.c0, rt1.c3;
SELECT ALL vt0.c0, rt1.c1, rt1.c0, rt1.c2, t0.c0, rt1.c3 FROM rt1, vt0, t0 WHERE (((((CAST(t0.c0 AS BLOB))OR(CAST(rt1.c0 AS BLOB))))AND('-588816436'))) GROUP BY vt0.c0, rt1.c1, rt1.c0, rt1.c2, t0.c0, rt1.c3 UNION SELECT vt0.c0, rt1.c1, rt1.c0, rt1.c2, t0.c0, rt1.c3 FROM rt1, vt0, t0 WHERE ((NOT (((((CAST(t0.c0 AS BLOB))OR(CAST(rt1.c0 AS BLOB))))AND('-588816436'))))) GROUP BY vt0.c0, rt1.c1, rt1.c0, rt1.c2, t0.c0, rt1.c3 UNION SELECT ALL vt0.c0, rt1.c1, rt1.c0, rt1.c2, t0.c0, rt1.c3 FROM rt1, vt0, t0 WHERE (((((((CAST(t0.c0 AS BLOB))OR(CAST(rt1.c0 AS BLOB))))AND('-588816436'))) ISNULL)) GROUP BY vt0.c0, rt1.c1, rt1.c0, rt1.c2, t0.c0, rt1.c3;
SELECT vt0.c0, rt1.c1, rt1.c0, rt1.c2, t0.c0, rt1.c3 FROM rt1, vt0, t0 GROUP BY vt0.c0, rt1.c1, rt1.c0, rt1.c2, t0.c0, rt1.c3;
SELECT rt1.c2 FROM t0, rt1 GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM t0, rt1 GROUP BY rt1.c2 HAVING COUNT(COUNT(*)) UNION ALL SELECT ALL rt1.c2 FROM t0, rt1 GROUP BY rt1.c2 HAVING (NOT (COUNT(COUNT(*)))) UNION ALL SELECT rt1.c2 FROM t0, rt1 GROUP BY rt1.c2 HAVING ((COUNT(COUNT(*))) ISNULL);
SELECT ALL * FROM t0, vt0;
SELECT * FROM t0, vt0 WHERE (CASE WHEN ((vt0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN vt0.c0 WHEN t0.c0 THEN ((t0.c0)%(vt0.c0)) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((((((((t0.c0)AND(vt0.c0)))OR(t0.c0)))OR(vt0.c0)))AND(t0.c0)) ELSE x'45b2' END) UNION ALL SELECT * FROM t0, vt0 WHERE ((NOT (CASE WHEN ((vt0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN vt0.c0 WHEN t0.c0 THEN ((t0.c0)%(vt0.c0)) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((((((((t0.c0)AND(vt0.c0)))OR(t0.c0)))OR(vt0.c0)))AND(t0.c0)) ELSE x'45b2' END))) UNION ALL SELECT * FROM t0, vt0 WHERE (((CASE WHEN ((vt0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN vt0.c0 WHEN t0.c0 THEN ((t0.c0)%(vt0.c0)) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((((((((t0.c0)AND(vt0.c0)))OR(t0.c0)))OR(vt0.c0)))AND(t0.c0)) ELSE x'45b2' END) ISNULL));
SELECT ALL * FROM t0, vt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((((((t0.c0)<>(t0.c0))))>=((CAST(t0.c0 AS TEXT))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((((((t0.c0)!=(t0.c0))))>=((CAST(t0.c0 AS TEXT))))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((((((t0.c0)<>(t0.c0))))>=((CAST(t0.c0 AS TEXT))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL rt1.c0, vt0.c0, rt1.c3, v0.c0 FROM t0, vt0, v0, rt1 GROUP BY rt1.c0, vt0.c0, rt1.c3, v0.c0;
SELECT rt1.c0, vt0.c0, rt1.c3, v0.c0 FROM t0, vt0, v0, rt1 WHERE (v0.c0) GROUP BY rt1.c0, vt0.c0, rt1.c3, v0.c0 UNION SELECT rt1.c0, vt0.c0, rt1.c3, v0.c0 FROM t0, vt0, v0, rt1 WHERE ((NOT (v0.c0))) GROUP BY rt1.c0, vt0.c0, rt1.c3, v0.c0 UNION SELECT rt1.c0, vt0.c0, rt1.c3, v0.c0 FROM t0, vt0, v0, rt1 WHERE (((v0.c0) ISNULL)) GROUP BY rt1.c0, vt0.c0, rt1.c3, v0.c0;
SELECT ALL rt1.c0, vt0.c0, rt1.c3, v0.c0 FROM t0, vt0, v0, rt1 GROUP BY rt1.c0, vt0.c0, rt1.c3, v0.c0;
SELECT rt1.c1 FROM vt0, t0, v0, rt1 GROUP BY rt1.c1;
SELECT rt1.c1 FROM vt0, t0, v0, rt1 GROUP BY rt1.c1 HAVING SUM(MIN(COUNT(*))) UNION ALL SELECT ALL rt1.c1 FROM vt0, t0, v0, rt1 GROUP BY rt1.c1 HAVING (NOT (SUM(MIN(COUNT(*))))) UNION ALL SELECT rt1.c1 FROM vt0, t0, v0, rt1 GROUP BY rt1.c1 HAVING ((SUM(MIN(COUNT(*)))) ISNULL);
SELECT ALL * FROM t0 RIGHT OUTER JOIN v0 ON ((((v0.c0) NOT BETWEEN (v0.c0) AND (t0.c0))) NOT NULL);
SELECT * FROM t0 RIGHT OUTER JOIN v0 ON ((((v0.c0) NOT BETWEEN (v0.c0) AND (t0.c0))) NOT NULL) WHERE (v0.c0) UNION ALL SELECT * FROM t0 RIGHT OUTER JOIN v0 ON ((((v0.c0) NOT BETWEEN (v0.c0) AND (t0.c0))) NOT NULL) WHERE ((NOT (v0.c0))) UNION ALL SELECT ALL * FROM t0 RIGHT OUTER JOIN v0 ON ((((v0.c0) NOT BETWEEN (v0.c0) AND (t0.c0))) NOT NULL) WHERE (((v0.c0) ISNULL));
SELECT ALL * FROM t0 RIGHT OUTER JOIN v0 ON ((((v0.c0) NOT BETWEEN (v0.c0) AND (t0.c0))) NOT NULL);
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (CAST(v0.c0 AS INTEGER)) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (CAST(v0.c0 AS INTEGER)))) UNION SELECT DISTINCT * FROM v0 WHERE (((CAST(v0.c0 AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((('eP')=(vt0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0)!=(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((('eP')=(vt0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0)!=(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((('eP')=(vt0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0)!=(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0, t0.c0 FROM t0, v0, vt0 GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, t0.c0 FROM t0, v0, vt0 GROUP BY vt0.c0, t0.c0 HAVING GROUP_CONCAT(MAX(t0.c0)) UNION ALL SELECT vt0.c0, t0.c0 FROM t0, v0, vt0 GROUP BY vt0.c0, t0.c0 HAVING (NOT (GROUP_CONCAT(MAX(t0.c0)))) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM t0, v0, vt0 GROUP BY vt0.c0, t0.c0 HAVING ((GROUP_CONCAT(MAX(t0.c0))) ISNULL);
SELECT t0.c0, rt1.c2, vt0.c0, rt1.c1, rt1.c3 FROM t0 FULL OUTER JOIN rt1 ON CASE WHEN ((t0.c0)||(t0.c0)) THEN CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c3 THEN rt1.c2 END ELSE (((rt1.c3))>((t0.c0))) END INNER JOIN vt0 ON CAST(((((((((((((rt1.c3)OR(x'')))OR(vt0.c0)))AND(t0.c0)))OR(t0.c0)))OR(rt1.c2)))OR(rt1.c0)) AS REAL);
SELECT t0.c0, rt1.c2, vt0.c0, rt1.c1, rt1.c3 FROM t0 FULL OUTER JOIN rt1 ON CASE WHEN ((t0.c0)||(t0.c0)) THEN CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c3 THEN rt1.c2 END ELSE (((rt1.c3))>((t0.c0))) END INNER JOIN vt0 ON CAST(((((((((((((rt1.c3)OR(x'')))OR(vt0.c0)))AND(t0.c0)))OR(t0.c0)))OR(rt1.c2)))OR(rt1.c0)) AS REAL) WHERE (((~ (rt1.c1)) IN ())) UNION ALL SELECT t0.c0, rt1.c2, vt0.c0, rt1.c1, rt1.c3 FROM t0 FULL OUTER JOIN rt1 ON CASE WHEN ((t0.c0)||(t0.c0)) THEN CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c3 THEN rt1.c2 END ELSE (((rt1.c3))>((t0.c0))) END INNER JOIN vt0 ON CAST(((((((((((((rt1.c3)OR(x'')))OR(vt0.c0)))AND(t0.c0)))OR(t0.c0)))OR(rt1.c2)))OR(rt1.c0)) AS REAL) WHERE ((NOT (((~ (rt1.c1)) IN ())))) UNION ALL SELECT t0.c0, rt1.c2, vt0.c0, rt1.c1, rt1.c3 FROM t0 FULL OUTER JOIN rt1 ON CASE WHEN ((t0.c0)||(t0.c0)) THEN CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c3 THEN rt1.c2 END ELSE (((rt1.c3))>((t0.c0))) END INNER JOIN vt0 ON CAST(((((((((((((rt1.c3)OR(x'')))OR(vt0.c0)))AND(t0.c0)))OR(t0.c0)))OR(rt1.c2)))OR(rt1.c0)) AS REAL) WHERE (((((~ (rt1.c1)) IN ())) ISNULL));
SELECT t0.c0, rt1.c2, vt0.c0, rt1.c1, rt1.c3 FROM t0 FULL OUTER JOIN rt1 ON CASE WHEN ((t0.c0)||(t0.c0)) THEN CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c3 THEN rt1.c2 END ELSE (((rt1.c3))>((t0.c0))) END INNER JOIN vt0 ON CAST(((((((((((((rt1.c3)OR(x'')))OR(vt0.c0)))AND(t0.c0)))OR(t0.c0)))OR(rt1.c2)))OR(rt1.c0)) AS REAL);
SELECT DISTINCT rt1.c3, rt1.c0, rt1.c1, v0.c0, rt1.c2 FROM rt1 INNER JOIN v0 ON ((COALESCE(rt1.c1, v0.c0)) NOT BETWEEN ((NOT (rt1.c2))) AND (rt1.c3 COLLATE NOCASE));
SELECT DISTINCT rt1.c3, rt1.c0, rt1.c1, v0.c0, rt1.c2 FROM rt1 INNER JOIN v0 ON ((COALESCE(rt1.c1, v0.c0)) NOT BETWEEN ((NOT (rt1.c2))) AND (rt1.c3 COLLATE NOCASE)) WHERE ((((rt1.c1)) NOT BETWEEN ((((rt1.c1)LIKE(rt1.c3)))) AND ((((rt1.c1)-(rt1.c1)))))) UNION SELECT DISTINCT rt1.c3, rt1.c0, rt1.c1, v0.c0, rt1.c2 FROM rt1 INNER JOIN v0 ON ((COALESCE(rt1.c1, v0.c0)) NOT BETWEEN ((NOT (rt1.c2))) AND (rt1.c3 COLLATE NOCASE)) WHERE ((NOT ((((rt1.c1)) NOT BETWEEN ((((rt1.c1)LIKE(rt1.c3)))) AND ((((rt1.c1)-(rt1.c1)))))))) UNION SELECT DISTINCT rt1.c3, rt1.c0, rt1.c1, v0.c0, rt1.c2 FROM rt1 INNER JOIN v0 ON ((COALESCE(rt1.c1, v0.c0)) NOT BETWEEN ((NOT (rt1.c2))) AND (rt1.c3 COLLATE NOCASE)) WHERE ((((((rt1.c1)) NOT BETWEEN ((((rt1.c1)LIKE(rt1.c3)))) AND ((((rt1.c1)-(rt1.c1)))))) ISNULL));
SELECT DISTINCT rt1.c3, rt1.c0, rt1.c1, v0.c0, rt1.c2 FROM rt1 INNER JOIN v0 ON ((COALESCE(rt1.c1, v0.c0)) NOT BETWEEN ((NOT (rt1.c2))) AND (rt1.c3 COLLATE NOCASE));
SELECT vt0.c0, rt1.c2 FROM rt1, vt0, v0, t0 GROUP BY vt0.c0, rt1.c2;
SELECT ALL vt0.c0, rt1.c2 FROM rt1, vt0, v0, t0 WHERE (CASE WHEN rt1.c0 THEN (rt1.c3 IN ()) ELSE CASE vt0.c0  WHEN rt1.c2 THEN t0.c0 WHEN v0.c0 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c3 WHEN t0.c0 THEN rt1.c0 WHEN vt0.c0 THEN NULL END END) GROUP BY vt0.c0, rt1.c2 UNION SELECT ALL vt0.c0, rt1.c2 FROM rt1, vt0, v0, t0 WHERE ((NOT (CASE WHEN rt1.c0 THEN (rt1.c3 IN ()) ELSE CASE vt0.c0  WHEN rt1.c2 THEN t0.c0 WHEN v0.c0 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c3 WHEN t0.c0 THEN rt1.c0 WHEN vt0.c0 THEN NULL END END))) GROUP BY vt0.c0, rt1.c2 UNION SELECT vt0.c0, rt1.c2 FROM rt1, vt0, v0, t0 WHERE (((CASE WHEN rt1.c0 THEN (rt1.c3 IN ()) ELSE CASE vt0.c0  WHEN rt1.c2 THEN t0.c0 WHEN v0.c0 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c3 WHEN t0.c0 THEN rt1.c0 WHEN vt0.c0 THEN NULL END END) ISNULL)) GROUP BY vt0.c0, rt1.c2;
SELECT vt0.c0, rt1.c2 FROM rt1, vt0, v0, t0 GROUP BY vt0.c0, rt1.c2;
SELECT ALL rt1.c0, rt1.c3, v0.c0, t0.c0, rt1.c1 FROM v0, rt1 FULL OUTER JOIN t0 ON (NOT ((- (rt1.c1)))) GROUP BY rt1.c0, rt1.c3, v0.c0, t0.c0, rt1.c1;
SELECT ALL rt1.c0, rt1.c3, v0.c0, t0.c0, rt1.c1 FROM v0, rt1 FULL OUTER JOIN t0 ON (NOT ((- (rt1.c1)))) GROUP BY rt1.c0, rt1.c3, v0.c0, t0.c0, rt1.c1 HAVING COUNT(COUNT(*)) UNION ALL SELECT ALL rt1.c0, rt1.c3, v0.c0, t0.c0, rt1.c1 FROM v0, rt1 FULL OUTER JOIN t0 ON (NOT ((- (rt1.c1)))) GROUP BY rt1.c0, rt1.c3, v0.c0, t0.c0, rt1.c1 HAVING (NOT (COUNT(COUNT(*)))) UNION ALL SELECT rt1.c0, rt1.c3, v0.c0, t0.c0, rt1.c1 FROM v0, rt1 FULL OUTER JOIN t0 ON (NOT ((- (rt1.c1)))) GROUP BY rt1.c0, rt1.c3, v0.c0, t0.c0, rt1.c1 HAVING ((COUNT(COUNT(*))) ISNULL);
SELECT * FROM vt0, v0, t0, rt1;
SELECT ALL * FROM vt0, v0, t0, rt1 WHERE (CASE ABS(vt0.c0)  WHEN t0.c0 COLLATE NOCASE THEN ((rt1.c2) BETWEEN (0.10507017370945282) AND (NULL)) ELSE (rt1.c2 IN ()) END) UNION ALL SELECT ALL * FROM vt0, v0, t0, rt1 WHERE ((NOT (CASE ABS(vt0.c0)  WHEN t0.c0 COLLATE NOCASE THEN ((rt1.c2) BETWEEN (0.10507017370945282) AND (NULL)) ELSE (rt1.c2 IN ()) END))) UNION ALL SELECT ALL * FROM vt0, v0, t0, rt1 WHERE (((CASE ABS(vt0.c0)  WHEN t0.c0 COLLATE NOCASE THEN ((rt1.c2) BETWEEN (0.10507017370945282) AND (NULL)) ELSE (rt1.c2 IN ()) END) ISNULL));
SELECT * FROM vt0, v0, t0, rt1;
SELECT DISTINCT rt1.c0, t0.c0, rt1.c2, rt1.c1 FROM t0 FULL OUTER JOIN vt0 ON x'bc223abb' LEFT OUTER JOIN rt1 ON (((((rt1.c1)+(vt0.c0))))<(((vt0.c0 IN ()))));
SELECT DISTINCT rt1.c0, t0.c0, rt1.c2, rt1.c1 FROM t0 FULL OUTER JOIN vt0 ON x'bc223abb' LEFT OUTER JOIN rt1 ON (((((rt1.c1)+(vt0.c0))))<(((vt0.c0 IN ())))) WHERE ((- (x''))) UNION SELECT DISTINCT rt1.c0, t0.c0, rt1.c2, rt1.c1 FROM t0 FULL OUTER JOIN vt0 ON x'bc223abb' LEFT OUTER JOIN rt1 ON (((((rt1.c1)+(vt0.c0))))<(((vt0.c0 IN ())))) WHERE ((NOT ((- (x''))))) UNION SELECT DISTINCT rt1.c0, t0.c0, rt1.c2, rt1.c1 FROM t0 FULL OUTER JOIN vt0 ON x'bc223abb' LEFT OUTER JOIN rt1 ON (((((rt1.c1)+(vt0.c0))))<(((vt0.c0 IN ())))) WHERE ((((- (x''))) ISNULL));
SELECT DISTINCT rt1.c0, t0.c0, rt1.c2, rt1.c1 FROM t0 FULL OUTER JOIN vt0 ON x'bc223abb' LEFT OUTER JOIN rt1 ON (((((rt1.c1)+(vt0.c0))))<(((vt0.c0 IN ()))));
SELECT ALL rt1.c1, rt1.c0, v0.c0 FROM v0, rt1, t0, vt0 GROUP BY rt1.c1, rt1.c0, v0.c0;
SELECT ALL rt1.c1, rt1.c0, v0.c0 FROM v0, rt1, t0, vt0 WHERE (CASE WHEN ((rt1.c3)*(rt1.c3)) THEN (v0.c0 IN ()) END) GROUP BY rt1.c1, rt1.c0, v0.c0 UNION SELECT rt1.c1, rt1.c0, v0.c0 FROM v0, rt1, t0, vt0 WHERE ((NOT (CASE WHEN ((rt1.c3)*(rt1.c3)) THEN (v0.c0 IN ()) END))) GROUP BY rt1.c1, rt1.c0, v0.c0 UNION SELECT ALL rt1.c1, rt1.c0, v0.c0 FROM v0, rt1, t0, vt0 WHERE (((CASE WHEN ((rt1.c3)*(rt1.c3)) THEN (v0.c0 IN ()) END) ISNULL)) GROUP BY rt1.c1, rt1.c0, v0.c0;
SELECT ALL rt1.c1, rt1.c0, v0.c0 FROM v0, rt1, t0, vt0 GROUP BY rt1.c1, rt1.c0, v0.c0;
SELECT rt1.c3, rt1.c2 FROM rt1 GROUP BY rt1.c3, rt1.c2;
SELECT ALL rt1.c3, rt1.c2 FROM rt1 GROUP BY rt1.c3, rt1.c2 HAVING MAX(GROUP_CONCAT(COUNT(NULL))) UNION ALL SELECT rt1.c3, rt1.c2 FROM rt1 GROUP BY rt1.c3, rt1.c2 HAVING (NOT (MAX(GROUP_CONCAT(COUNT(NULL))))) UNION ALL SELECT ALL rt1.c3, rt1.c2 FROM rt1 GROUP BY rt1.c3, rt1.c2 HAVING ((MAX(GROUP_CONCAT(COUNT(NULL)))) ISNULL);
SELECT v0.c0 FROM vt0 CROSS JOIN v0 ON ((((((v0.c0)+(v0.c0)))OR(((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((v0.c0)LIKE(vt0.c0))));
SELECT v0.c0 FROM vt0 CROSS JOIN v0 ON ((((((v0.c0)+(v0.c0)))OR(((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((v0.c0)LIKE(vt0.c0)))) WHERE ((CAST(vt0.c0 AS TEXT) IN ('1319613632'))) UNION ALL SELECT v0.c0 FROM vt0 CROSS JOIN v0 ON ((((((v0.c0)+(v0.c0)))OR(((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((v0.c0)LIKE(vt0.c0)))) WHERE ((NOT ((CAST(vt0.c0 AS TEXT) IN ('1319613632'))))) UNION ALL SELECT v0.c0 FROM vt0 CROSS JOIN v0 ON ((((((v0.c0)+(v0.c0)))OR(((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((v0.c0)LIKE(vt0.c0)))) WHERE ((((CAST(vt0.c0 AS TEXT) IN ('1319613632'))) ISNULL));
SELECT v0.c0 FROM vt0 CROSS JOIN v0 ON ((((((v0.c0)+(v0.c0)))OR(((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((v0.c0)LIKE(vt0.c0))));
SELECT DISTINCT * FROM vt0, t0, rt1;
SELECT DISTINCT * FROM vt0, t0, rt1 WHERE ((NOT (highlight(rt1.c2, rt1.c2, 0X265d67be, vt0.c0)))) UNION SELECT DISTINCT * FROM vt0, t0, rt1 WHERE ((NOT ((NOT (highlight(rt1.c2, rt1.c2, 0X265d67be, vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0, t0, rt1 WHERE ((((NOT (highlight(rt1.c2, rt1.c2, 0x265d67be, vt0.c0)))) ISNULL));
SELECT DISTINCT * FROM vt0, t0, rt1;
SELECT ALL t0.c0 FROM t0 INDEXED BY i30 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 INDEXED BY i30 WHERE (((((t0.c0)IS NOT(t0.c0))) BETWEEN (((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0))) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 INDEXED BY i30 WHERE ((NOT (((((t0.c0)IS NOT(t0.c0))) BETWEEN (((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0))) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 INDEXED BY i30 WHERE (((((((t0.c0)IS NOT(t0.c0))) BETWEEN (((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0))) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 INDEXED BY i30 GROUP BY t0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c0 FROM vt0 INDEXED BY i24;
SELECT DISTINCT rt1.c0, rt1.c1, rt1.c3, rt1.c2 FROM rt1;
SELECT DISTINCT rt1.c0, rt1.c1, rt1.c3, rt1.c2 FROM rt1 WHERE ((((((((((((((('*')AND(rt1.c1)))OR(rt1.c0)))OR(rt1.c0)))AND(rt1.c1)))AND(rt1.c3)))OR(rt1.c3)))>((- (rt1.c2))))) UNION SELECT DISTINCT rt1.c0, rt1.c1, rt1.c3, rt1.c2 FROM rt1 WHERE ((NOT ((((((((((((((('*')AND(rt1.c1)))OR(rt1.c0)))OR(rt1.c0)))AND(rt1.c1)))AND(rt1.c3)))OR(rt1.c3)))>((- (rt1.c2))))))) UNION SELECT DISTINCT rt1.c0, rt1.c1, rt1.c3, rt1.c2 FROM rt1 WHERE ((((((((((((((((('*')AND(rt1.c1)))OR(rt1.c0)))OR(rt1.c0)))AND(rt1.c1)))AND(rt1.c3)))OR(rt1.c3)))>((- (rt1.c2))))) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c1, rt1.c3, rt1.c2 FROM rt1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (NULL) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (NULL))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((NULL) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL v0.c0, rt1.c2, rt1.c0, rt1.c3 FROM v0 CROSS JOIN rt1 ON (((NULL) NOTNULL) IN ()) GROUP BY v0.c0, rt1.c2, rt1.c0, rt1.c3;
SELECT v0.c0, rt1.c2, rt1.c0, rt1.c3 FROM v0 CROSS JOIN rt1 ON (((NULL) NOTNULL) IN ()) GROUP BY v0.c0, rt1.c2, rt1.c0, rt1.c3 HAVING COUNT(MIN(AVG(COUNT(*)))) COLLATE RTRIM UNION ALL SELECT ALL v0.c0, rt1.c2, rt1.c0, rt1.c3 FROM v0 CROSS JOIN rt1 ON (((NULL) NOTNULL) IN ()) GROUP BY v0.c0, rt1.c2, rt1.c0, rt1.c3 HAVING (NOT (COUNT(MIN(AVG(COUNT(*)))) COLLATE RTRIM)) UNION ALL SELECT v0.c0, rt1.c2, rt1.c0, rt1.c3 FROM v0 CROSS JOIN rt1 ON (((NULL) NOTNULL) IN ()) GROUP BY v0.c0, rt1.c2, rt1.c0, rt1.c3 HAVING ((COUNT(MIN(AVG(COUNT(*)))) COLLATE RTRIM) ISNULL);
SELECT v0.c0, rt1.c1, rt1.c0 FROM v0, rt1;
SELECT ALL v0.c0, rt1.c1, rt1.c0 FROM v0, rt1 WHERE ((~ (((rt1.c1)LIKE('''n]5<B'))))) UNION ALL SELECT v0.c0, rt1.c1, rt1.c0 FROM v0, rt1 WHERE ((NOT ((~ (((rt1.c1)LIKE('''n]5<B'))))))) UNION ALL SELECT v0.c0, rt1.c1, rt1.c0 FROM v0, rt1 WHERE ((((~ (((rt1.c1)LIKE('''n]5<B'))))) ISNULL));
SELECT v0.c0, rt1.c1, rt1.c0 FROM v0, rt1;
SELECT DISTINCT * FROM v0, rt1;
SELECT DISTINCT * FROM v0, rt1 WHERE (((((rt1.c1, v0.c0, rt1.c2))!=((rt1.c1, rt1.c3, rt1.c3))) IN (((rt1.c0)&(rt1.c2))))) UNION SELECT DISTINCT * FROM v0, rt1 WHERE ((NOT (((((rt1.c1, v0.c0, rt1.c2))<>((rt1.c1, rt1.c3, rt1.c3))) IN (((rt1.c0)&(rt1.c2))))))) UNION SELECT DISTINCT * FROM v0, rt1 WHERE (((((((rt1.c1, v0.c0, rt1.c2))!=((rt1.c1, rt1.c3, rt1.c3))) IN (((rt1.c0)&(rt1.c2))))) ISNULL));
SELECT DISTINCT * FROM v0, rt1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING ((SUM(rt1.c3)) IS TRUE) UNION ALL SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING (NOT (((SUM(rt1.c3)) IS TRUE))) UNION ALL SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING ((((SUM(rt1.c3)) IS TRUE)) ISNULL);
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING ((SUM(rt1.c3)) IS TRUE) UNION ALL SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING (NOT (((SUM(rt1.c3)) IS TRUE))) UNION ALL SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING ((((SUM(rt1.c3)) IS TRUE)) ISNULL);
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (((((UPPER(v0.c0))AND(((v0.c0) NOTNULL))))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((UPPER(v0.c0))AND(((v0.c0) NOTNULL))))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((((((UPPER(v0.c0))AND(((v0.c0) NOTNULL))))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT * FROM rt1, t0, v0;
SELECT DISTINCT * FROM rt1, t0, v0 WHERE ((~ ((rt1.c2 IN (t0.c0))))) UNION SELECT DISTINCT * FROM rt1, t0, v0 WHERE ((NOT ((~ ((rt1.c2 IN (t0.c0))))))) UNION SELECT DISTINCT * FROM rt1, t0, v0 WHERE ((((~ ((rt1.c2 IN (t0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt1, t0, v0;
SELECT vt0.c0, rt1.c2, rt1.c0, rt1.c1, rt1.c3 FROM rt1, vt0, v0 GROUP BY vt0.c0, rt1.c2, rt1.c0, rt1.c1, rt1.c3;
SELECT vt0.c0, rt1.c2, rt1.c0, rt1.c1, rt1.c3 FROM rt1, vt0, v0 WHERE ((+ (((rt1.c3)<(rt1.c2))))) GROUP BY vt0.c0, rt1.c2, rt1.c0, rt1.c1, rt1.c3 UNION SELECT vt0.c0, rt1.c2, rt1.c0, rt1.c1, rt1.c3 FROM rt1, vt0, v0 WHERE ((NOT ((+ (((rt1.c3)<(rt1.c2))))))) GROUP BY vt0.c0, rt1.c2, rt1.c0, rt1.c1, rt1.c3 UNION SELECT vt0.c0, rt1.c2, rt1.c0, rt1.c1, rt1.c3 FROM rt1, vt0, v0 WHERE ((((+ (((rt1.c3)<(rt1.c2))))) ISNULL)) GROUP BY vt0.c0, rt1.c2, rt1.c0, rt1.c1, rt1.c3;
SELECT vt0.c0, rt1.c2, rt1.c0, rt1.c1, rt1.c3 FROM rt1, vt0, v0 GROUP BY vt0.c0, rt1.c2, rt1.c0, rt1.c1, rt1.c3;
SELECT v0.c0, rt1.c3 FROM vt0, v0 LEFT OUTER JOIN rt1 ON x'de1f' FULL OUTER JOIN t0 ON CAST((- (rt1.c2)) AS REAL) GROUP BY v0.c0, rt1.c3;
SELECT v0.c0, rt1.c3 FROM vt0, v0 LEFT OUTER JOIN rt1 ON x'de1f' FULL OUTER JOIN t0 ON CAST((- (rt1.c2)) AS REAL) GROUP BY v0.c0, rt1.c3 HAVING TOTAL(((COUNT(*)) IS TRUE)) UNION ALL SELECT v0.c0, rt1.c3 FROM vt0, v0 LEFT OUTER JOIN rt1 ON x'de1f' FULL OUTER JOIN t0 ON CAST((- (rt1.c2)) AS REAL) GROUP BY v0.c0, rt1.c3 HAVING (NOT (TOTAL(((COUNT(*)) IS TRUE)))) UNION ALL SELECT ALL v0.c0, rt1.c3 FROM vt0, v0 LEFT OUTER JOIN rt1 ON x'de1f' FULL OUTER JOIN t0 ON CAST((- (rt1.c2)) AS REAL) GROUP BY v0.c0, rt1.c3 HAVING ((TOTAL(((COUNT(*)) IS TRUE))) ISNULL);
SELECT ALL rt1.c3, v0.c0 FROM rt1, vt0, v0 LEFT OUTER JOIN t0 ON CASE ((rt1.c2)&('ep'))  WHEN CASE t0.c0  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN rt1.c1 THEN vt0.c0 ELSE rt1.c3 END THEN rt1.c3 END;
SELECT ALL rt1.c3, v0.c0 FROM rt1, vt0, v0 LEFT OUTER JOIN t0 ON CASE ((rt1.c2)&('ep'))  WHEN CASE t0.c0  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN rt1.c1 THEN vt0.c0 ELSE rt1.c3 END THEN rt1.c3 END WHERE (((rt1.c3)IS NOT(rt1.c3)) COLLATE RTRIM COLLATE BINARY) UNION ALL SELECT rt1.c3, v0.c0 FROM rt1, vt0, v0 LEFT OUTER JOIN t0 ON CASE ((rt1.c2)&('ep'))  WHEN CASE t0.c0  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN rt1.c1 THEN vt0.c0 ELSE rt1.c3 END THEN rt1.c3 END WHERE ((NOT (((rt1.c3)IS NOT(rt1.c3)) COLLATE RTRIM COLLATE BINARY))) UNION ALL SELECT ALL rt1.c3, v0.c0 FROM rt1, vt0, v0 LEFT OUTER JOIN t0 ON CASE ((rt1.c2)&('ep'))  WHEN CASE t0.c0  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN rt1.c1 THEN vt0.c0 ELSE rt1.c3 END THEN rt1.c3 END WHERE (((((rt1.c3)IS NOT(rt1.c3)) COLLATE RTRIM COLLATE BINARY) ISNULL));
SELECT ALL rt1.c3, v0.c0 FROM rt1, vt0, v0 LEFT OUTER JOIN t0 ON CASE ((rt1.c2)&('ep'))  WHEN CASE t0.c0  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN rt1.c1 THEN vt0.c0 ELSE rt1.c3 END THEN rt1.c3 END;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (NULLIF(DISTINCT ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), CAST(t0.c0 AS REAL))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (NULLIF(DISTINCT ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), CAST(t0.c0 AS REAL))))) UNION SELECT DISTINCT * FROM t0 NOT INDEXED WHERE (((NULLIF(DISTINCT ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), CAST(t0.c0 AS REAL))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ((('')|((~ (t0.c0))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((('')|((~ (t0.c0))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((((('')|((~ (t0.c0))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt1.c0, rt1.c1, rt1.c3, vt0.c0, rt1.c2, v0.c0, t0.c0 FROM rt1, v0 LEFT OUTER JOIN vt0 ON ((t0.c0) BETWEEN ((((rt1.c0))==((vt0.c0)))) AND (((((((((rt1.c0)AND(rt1.c3)))OR(v0.c0)))OR(rt1.c2)))AND(t0.c0)))) RIGHT OUTER JOIN t0 ON (+ (CAST(rt1.c0 AS NUMERIC))) GROUP BY rt1.c0, rt1.c1, rt1.c3, vt0.c0, rt1.c2, v0.c0, t0.c0;
SELECT * FROM t0, v0 FULL OUTER JOIN vt0 ON v0.c0;
SELECT * FROM t0, v0 FULL OUTER JOIN vt0 ON v0.c0 WHERE ('<a9RCbc\n') UNION ALL SELECT ALL * FROM t0, v0 FULL OUTER JOIN vt0 ON v0.c0 WHERE ((NOT ('<a9RCbc\n'))) UNION ALL SELECT * FROM t0, v0 FULL OUTER JOIN vt0 ON v0.c0 WHERE ((('<a9RCbc\n') ISNULL));
SELECT * FROM t0, v0 FULL OUTER JOIN vt0 ON v0.c0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR(x''))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR(x''))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR(x''))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM t0 INNER JOIN vt0 ON ((vt0.c0) IS TRUE) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0 INNER JOIN vt0 ON ((vt0.c0) IS TRUE) WHERE (CAST(LOWER(1196952972) AS NUMERIC)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM t0 INNER JOIN vt0 ON ((vt0.c0) IS TRUE) WHERE ((NOT (CAST(LOWER(1196952972) AS NUMERIC)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM t0 INNER JOIN vt0 ON ((vt0.c0) IS TRUE) WHERE (((CAST(LOWER(1196952972) AS NUMERIC)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0 INNER JOIN vt0 ON ((vt0.c0) IS TRUE) GROUP BY vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING CASE MIN(v0.c0)  WHEN MIN(vt0.c0) THEN COUNT(MIN(COUNT(TOTAL(GROUP_CONCAT(vt0.c0))))) END UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (CASE MIN(v0.c0)  WHEN MIN(vt0.c0) THEN COUNT(MIN(COUNT(TOTAL(GROUP_CONCAT(vt0.c0))))) END)) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING ((CASE MIN(v0.c0)  WHEN MIN(vt0.c0) THEN COUNT(MIN(COUNT(TOTAL(GROUP_CONCAT(vt0.c0))))) END) ISNULL);
SELECT ALL rt1.c0, v0.c0, rt1.c1, rt1.c2 FROM v0, rt1, vt0 RIGHT OUTER JOIN t0 ON CASE (((rt1.c3)) BETWEEN ((rt1.c1)) AND ((rt1.c1)))  WHEN t0.c0 COLLATE NOCASE THEN json_patch(v0.c0, t0.c0) ELSE (((rt1.c2, vt0.c0, rt1.c0)) BETWEEN ((rt1.c1, rt1.c1, t0.c0)) AND ((x'', rt1.c3, rt1.c1))) END;
SELECT ALL rt1.c0, v0.c0, rt1.c1, rt1.c2 FROM v0, rt1, vt0 RIGHT OUTER JOIN t0 ON CASE (((rt1.c3)) BETWEEN ((rt1.c1)) AND ((rt1.c1)))  WHEN t0.c0 COLLATE NOCASE THEN json_patch(v0.c0, t0.c0) ELSE (((rt1.c2, vt0.c0, rt1.c0)) BETWEEN ((rt1.c1, rt1.c1, t0.c0)) AND ((x'', rt1.c3, rt1.c1))) END WHERE (((('-1561335583'))<(((((v0.c0))<>((rt1.c0))))))) UNION ALL SELECT ALL rt1.c0, v0.c0, rt1.c1, rt1.c2 FROM v0, rt1, vt0 RIGHT OUTER JOIN t0 ON CASE (((rt1.c3)) BETWEEN ((rt1.c1)) AND ((rt1.c1)))  WHEN t0.c0 COLLATE NOCASE THEN json_patch(v0.c0, t0.c0) ELSE (((rt1.c2, vt0.c0, rt1.c0)) BETWEEN ((rt1.c1, rt1.c1, t0.c0)) AND ((x'', rt1.c3, rt1.c1))) END WHERE ((NOT (((('-1561335583'))<(((((v0.c0))!=((rt1.c0))))))))) UNION ALL SELECT rt1.c0, v0.c0, rt1.c1, rt1.c2 FROM v0, rt1, vt0 RIGHT OUTER JOIN t0 ON CASE (((rt1.c3)) BETWEEN ((rt1.c1)) AND ((rt1.c1)))  WHEN t0.c0 COLLATE NOCASE THEN json_patch(v0.c0, t0.c0) ELSE (((rt1.c2, vt0.c0, rt1.c0)) BETWEEN ((rt1.c1, rt1.c1, t0.c0)) AND ((x'', rt1.c3, rt1.c1))) END WHERE (((((('-1561335583'))<(((((v0.c0))!=((rt1.c0))))))) ISNULL));
SELECT ALL rt1.c0, v0.c0, rt1.c1, rt1.c2 FROM v0, rt1, vt0 RIGHT OUTER JOIN t0 ON CASE (((rt1.c3)) BETWEEN ((rt1.c1)) AND ((rt1.c1)))  WHEN t0.c0 COLLATE NOCASE THEN json_patch(v0.c0, t0.c0) ELSE (((rt1.c2, vt0.c0, rt1.c0)) BETWEEN ((rt1.c1, rt1.c1, t0.c0)) AND ((x'', rt1.c3, rt1.c1))) END;
SELECT DISTINCT * FROM t0, vt0 NATURAL JOIN rt1;
SELECT DISTINCT * FROM t0, vt0 NATURAL JOIN rt1 WHERE (((((CAST(vt0.c0 AS BLOB))OR(NULL)))OR(x''))) UNION SELECT DISTINCT * FROM t0, vt0 NATURAL JOIN rt1 WHERE ((NOT (((((CAST(vt0.c0 AS BLOB))OR(NULL)))OR(x''))))) UNION SELECT DISTINCT * FROM t0, vt0 NATURAL JOIN rt1 WHERE (((((((CAST(vt0.c0 AS BLOB))OR(NULL)))OR(x''))) ISNULL));
SELECT DISTINCT * FROM t0, vt0 NATURAL JOIN rt1;
SELECT rt1.c0, v0.c0, rt1.c1, rt1.c3 FROM v0, rt1 GROUP BY rt1.c0, v0.c0, rt1.c1, rt1.c3;
SELECT ALL rt1.c0, v0.c0, rt1.c1, rt1.c3 FROM v0, rt1 WHERE (CAST((v0.c0 IN ()) AS INTEGER)) GROUP BY rt1.c0, v0.c0, rt1.c1, rt1.c3 UNION SELECT rt1.c0, v0.c0, rt1.c1, rt1.c3 FROM v0, rt1 WHERE ((NOT (CAST((v0.c0 IN ()) AS INTEGER)))) GROUP BY rt1.c0, v0.c0, rt1.c1, rt1.c3 UNION SELECT ALL rt1.c0, v0.c0, rt1.c1, rt1.c3 FROM v0, rt1 WHERE (((CAST((v0.c0 IN ()) AS INTEGER)) ISNULL)) GROUP BY rt1.c0, v0.c0, rt1.c1, rt1.c3;
SELECT rt1.c0, v0.c0, rt1.c1, rt1.c3 FROM v0, rt1 GROUP BY rt1.c0, v0.c0, rt1.c1, rt1.c3;
SELECT ALL rt1.c0, rt1.c2, rt1.c1, rt1.c3, v0.c0, vt0.c0 FROM vt0, v0, rt1, t0 GROUP BY rt1.c0, rt1.c2, rt1.c1, rt1.c3, v0.c0, vt0.c0;
SELECT ALL rt1.c0, rt1.c2, rt1.c1, rt1.c3, v0.c0, vt0.c0 FROM vt0, v0, rt1, t0 GROUP BY rt1.c0, rt1.c2, rt1.c1, rt1.c3, v0.c0, vt0.c0 HAVING ((((AVG(vt0.c0)) NOT BETWEEN (SUM(MAX(x'a18e'))) AND (COUNT(t0.c0)))) NOT BETWEEN (((((rt1.c2)OR(SUM(t0.c0))))AND(COUNT(*)))) AND (AVG(rt1.c1))) UNION ALL SELECT rt1.c0, rt1.c2, rt1.c1, rt1.c3, v0.c0, vt0.c0 FROM vt0 NOT INDEXED, v0, rt1, t0 GROUP BY rt1.c0, rt1.c2, rt1.c1, rt1.c3, v0.c0, vt0.c0 HAVING (NOT (((((AVG(vt0.c0)) NOT BETWEEN (SUM(MAX(x'a18e'))) AND (COUNT(t0.c0)))) NOT BETWEEN (((((rt1.c2)OR(SUM(t0.c0))))AND(COUNT(*)))) AND (AVG(rt1.c1))))) UNION ALL SELECT ALL rt1.c0, rt1.c2, rt1.c1, rt1.c3, v0.c0, vt0.c0 FROM vt0, v0, rt1, t0 GROUP BY rt1.c0, rt1.c2, rt1.c1, rt1.c3, v0.c0, vt0.c0 HAVING ((((((AVG(vt0.c0)) NOT BETWEEN (SUM(MAX(x'a18e'))) AND (COUNT(t0.c0)))) NOT BETWEEN (((((rt1.c2)OR(SUM(t0.c0))))AND(COUNT(*)))) AND (AVG(rt1.c1)))) ISNULL);
SELECT vt0.c0, v0.c0 FROM v0, vt0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 WHERE ((((LIKELY(x'022e')))==((((vt0.c0)|(v0.c0)))))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 WHERE ((NOT ((((LIKELY(x'022e')))==((((vt0.c0)|(v0.c0)))))))) UNION ALL SELECT vt0.c0, v0.c0 FROM v0, vt0 WHERE ((((((LIKELY(x'022e')))==((((vt0.c0)|(v0.c0)))))) ISNULL));
SELECT vt0.c0, v0.c0 FROM v0, vt0;
SELECT DISTINCT * FROM v0, rt1;
SELECT DISTINCT * FROM v0, rt1 WHERE ((((((NOT (rt1.c1)))OR((rt1.c0 IN ()))))OR(CASE rt1.c0  WHEN v0.c0 THEN rt1.c1 END))) UNION SELECT DISTINCT * FROM v0, rt1 WHERE ((NOT ((((((NOT (rt1.c1)))OR((rt1.c0 IN ()))))OR(CASE rt1.c0  WHEN v0.c0 THEN rt1.c1 END))))) UNION SELECT DISTINCT * FROM v0, rt1 WHERE ((((((((NOT (rt1.c1)))OR((rt1.c0 IN ()))))OR(CASE rt1.c0  WHEN v0.c0 THEN rt1.c1 END))) ISNULL));
SELECT DISTINCT * FROM v0, rt1;
SELECT rt1.c0, rt1.c3, t0.c0 FROM vt0, t0 RIGHT OUTER JOIN rt1 ON LIKELIHOOD(DISTINCT (((rt1.c0))>((rt1.c1))), 0.9580556267832507) GROUP BY rt1.c0, rt1.c3, t0.c0;
SELECT rt1.c0, rt1.c3, t0.c0 FROM vt0, t0 RIGHT OUTER JOIN rt1 ON LIKELIHOOD(DISTINCT (((rt1.c0))>((rt1.c1))), 0.9580556267832507) WHERE ((((+ (t0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND (0X2e66e72 COLLATE NOCASE))) GROUP BY rt1.c0, rt1.c3, t0.c0 UNION SELECT ALL rt1.c0, rt1.c3, t0.c0 FROM vt0, t0 RIGHT OUTER JOIN rt1 ON LIKELIHOOD(DISTINCT (((rt1.c0))>((rt1.c1))), 0.9580556267832507) WHERE ((NOT ((((+ (t0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND (0x2e66e72 COLLATE NOCASE))))) GROUP BY rt1.c0, rt1.c3, t0.c0 UNION SELECT ALL rt1.c0, rt1.c3, t0.c0 FROM vt0, t0 RIGHT OUTER JOIN rt1 ON LIKELIHOOD(DISTINCT (((rt1.c0))>((rt1.c1))), 0.9580556267832507) WHERE ((((((+ (t0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND (0x2e66e72 COLLATE NOCASE))) ISNULL)) GROUP BY rt1.c0, rt1.c3, t0.c0;
SELECT rt1.c0, rt1.c3, t0.c0 FROM vt0, t0 RIGHT OUTER JOIN rt1 ON LIKELIHOOD(DISTINCT (((rt1.c0))>((rt1.c1))), 0.9580556267832507) GROUP BY rt1.c0, rt1.c3, t0.c0;
SELECT v0.c0, t0.c0, vt0.c0 FROM t0, vt0, v0 GROUP BY v0.c0, t0.c0, vt0.c0;
SELECT v0.c0, t0.c0, vt0.c0 FROM t0, vt0, v0 GROUP BY v0.c0, t0.c0, vt0.c0 HAVING AVG(MIN(GROUP_CONCAT(vt0.c0))) UNION ALL SELECT v0.c0, t0.c0, vt0.c0 FROM t0, vt0, v0 GROUP BY v0.c0, t0.c0, vt0.c0 HAVING (NOT (AVG(MIN(GROUP_CONCAT(vt0.c0))))) UNION ALL SELECT v0.c0, t0.c0, vt0.c0 FROM t0, vt0, v0 GROUP BY v0.c0, t0.c0, vt0.c0 HAVING ((AVG(MIN(GROUP_CONCAT(vt0.c0)))) ISNULL);
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (((((+ (v0.c0))))>(((v0.c0 IN (v0.c0)))))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (((((+ (v0.c0))))>(((v0.c0 IN (v0.c0)))))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((((((+ (v0.c0))))>(((v0.c0 IN (v0.c0)))))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT rt1.c1, vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON ((((((rt1.c3)) BETWEEN ((vt0.c0)) AND ((rt1.c0)))))<>((LIKELY(rt1.c3)))) FULL OUTER JOIN rt1 ON '2028807004';
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (IFNULL((((v0.c0, v0.c0, v0.c0))>((v0.c0, v0.c0, ''))), (v0.c0 IN (v0.c0)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (IFNULL((((v0.c0, v0.c0, v0.c0))>((v0.c0, v0.c0, ''))), (v0.c0 IN (v0.c0)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((IFNULL((((v0.c0, v0.c0, v0.c0))>((v0.c0, v0.c0, ''))), (v0.c0 IN (v0.c0)))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0, t0.c0 FROM v0, vt0, t0 GROUP BY v0.c0, t0.c0;
SELECT ALL v0.c0, t0.c0 FROM v0, vt0, t0 GROUP BY v0.c0, t0.c0 HAVING TOTAL(((COUNT(TOTAL(MIN(vt0.c0))))<=(vt0.c0))) UNION ALL SELECT v0.c0, t0.c0 FROM v0, vt0, t0 GROUP BY v0.c0, t0.c0 HAVING (NOT (TOTAL(((COUNT(TOTAL(MIN(vt0.c0))))<=(vt0.c0))))) UNION ALL SELECT v0.c0, t0.c0 FROM v0, vt0, t0 GROUP BY v0.c0, t0.c0 HAVING ((TOTAL(((COUNT(TOTAL(MIN(vt0.c0))))<=(vt0.c0)))) ISNULL);
SELECT ALL * FROM rt1, v0, vt0;
SELECT * FROM rt1, v0, vt0 WHERE ((((((((vt0.c0, rt1.c2, rt1.c3)) BETWEEN ((vt0.c0, '0.3520959826379174', NULL)) AND ((vt0.c0, rt1.c2, v0.c0))))OR((((rt1.c2)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c2))))))AND(rt1.c1 COLLATE RTRIM))) UNION ALL SELECT * FROM rt1, v0, vt0 WHERE ((NOT ((((((((vt0.c0, rt1.c2, rt1.c3)) BETWEEN ((vt0.c0, '0.3520959826379174', NULL)) AND ((vt0.c0, rt1.c2, v0.c0))))OR((((rt1.c2)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c2))))))AND(rt1.c1 COLLATE RTRIM))))) UNION ALL SELECT * FROM rt1, v0, vt0 WHERE ((((((((((vt0.c0, rt1.c2, rt1.c3)) BETWEEN ((vt0.c0, '0.3520959826379174', NULL)) AND ((vt0.c0, rt1.c2, v0.c0))))OR((((rt1.c2)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c2))))))AND(rt1.c1 COLLATE RTRIM))) ISNULL));
SELECT ALL * FROM rt1, v0, vt0;
SELECT DISTINCT rt1.c1, rt1.c0, t0.c0 FROM t0, rt1;
SELECT DISTINCT rt1.c1, rt1.c0, t0.c0 FROM t0, rt1 WHERE (((((NULL IN ())))=((x'')))) UNION SELECT DISTINCT rt1.c1, rt1.c0, t0.c0 FROM t0, rt1 WHERE ((NOT (((((NULL IN ())))==((x'')))))) UNION SELECT DISTINCT rt1.c1, rt1.c0, t0.c0 FROM t0, rt1 WHERE (((((((NULL IN ())))==((x'')))) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c0, t0.c0 FROM t0, rt1;
SELECT ALL t0.c0, rt1.c1, rt1.c2, vt0.c0 FROM vt0, rt1, t0, v0 GROUP BY t0.c0, rt1.c1, rt1.c2, vt0.c0;
SELECT ALL t0.c0, rt1.c1, rt1.c2, vt0.c0 FROM vt0, rt1, t0, v0 WHERE (((((rt1.c3)IS NOT(t0.c0)))=((((rt1.c2)) BETWEEN ((rt1.c0)) AND ((rt1.c2)))))) GROUP BY t0.c0, rt1.c1, rt1.c2, vt0.c0 UNION SELECT t0.c0, rt1.c1, rt1.c2, vt0.c0 FROM vt0, rt1, t0, v0 WHERE ((NOT (((((rt1.c3)IS NOT(t0.c0)))=((((rt1.c2)) BETWEEN ((rt1.c0)) AND ((rt1.c2)))))))) GROUP BY t0.c0, rt1.c1, rt1.c2, vt0.c0 UNION SELECT t0.c0, rt1.c1, rt1.c2, vt0.c0 FROM vt0, rt1, t0, v0 WHERE (((((((rt1.c3)IS NOT(t0.c0)))==((((rt1.c2)) BETWEEN ((rt1.c0)) AND ((rt1.c2)))))) ISNULL)) GROUP BY t0.c0, rt1.c1, rt1.c2, vt0.c0;
SELECT ALL t0.c0, rt1.c1, rt1.c2, vt0.c0 FROM vt0, rt1, t0, v0 GROUP BY t0.c0, rt1.c1, rt1.c2, vt0.c0;
SELECT ALL t0.c0, v0.c0, vt0.c0 FROM vt0, v0, t0 GROUP BY t0.c0, v0.c0, vt0.c0;
SELECT ALL t0.c0, v0.c0, vt0.c0 FROM vt0, v0, t0 GROUP BY t0.c0, v0.c0, vt0.c0 HAVING AVG(((t0.c0) IS TRUE)) UNION ALL SELECT t0.c0, v0.c0, vt0.c0 FROM vt0, v0, t0 GROUP BY t0.c0, v0.c0, vt0.c0 HAVING (NOT (AVG(((t0.c0) IS TRUE)))) UNION ALL SELECT ALL t0.c0, v0.c0, vt0.c0 FROM vt0, v0, t0 GROUP BY t0.c0, v0.c0, vt0.c0 HAVING ((AVG(((t0.c0) IS TRUE))) ISNULL);
SELECT ALL t0.c0, v0.c0, vt0.c0 FROM vt0, v0, t0 GROUP BY t0.c0, v0.c0, vt0.c0;
SELECT ALL t0.c0, v0.c0, vt0.c0 FROM vt0, v0, t0 GROUP BY t0.c0, v0.c0, vt0.c0 HAVING AVG(((t0.c0) IS TRUE)) UNION ALL SELECT t0.c0, v0.c0, vt0.c0 FROM vt0, v0, t0 GROUP BY t0.c0, v0.c0, vt0.c0 HAVING (NOT (AVG(((t0.c0) IS TRUE)))) UNION ALL SELECT ALL t0.c0, v0.c0, vt0.c0 FROM vt0, v0, t0 GROUP BY t0.c0, v0.c0, vt0.c0 HAVING ((AVG(((t0.c0) IS TRUE))) ISNULL);
SELECT ALL t0.c0, v0.c0, vt0.c0 FROM vt0, v0, t0 GROUP BY t0.c0, v0.c0, vt0.c0;
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (CASE WHEN v0.c0 THEN ((v0.c0)|(v0.c0)) END) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (CASE WHEN v0.c0 THEN ((v0.c0)|(v0.c0)) END))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((CASE WHEN v0.c0 THEN ((v0.c0)|(v0.c0)) END) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (t0.c0) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT v0.c0, rt1.c1, rt1.c2, rt1.c0, rt1.c3, vt0.c0, t0.c0 FROM vt0, rt1, t0, v0 GROUP BY v0.c0, rt1.c1, rt1.c2, rt1.c0, rt1.c3, vt0.c0, t0.c0;
SELECT v0.c0, rt1.c1, rt1.c2, rt1.c0, rt1.c3, vt0.c0, t0.c0 FROM vt0, rt1, t0, v0 WHERE (TRIM(DISTINCT ((v0.c0)*(rt1.c1)))) GROUP BY v0.c0, rt1.c1, rt1.c2, rt1.c0, rt1.c3, vt0.c0, t0.c0 UNION SELECT ALL v0.c0, rt1.c1, rt1.c2, rt1.c0, rt1.c3, vt0.c0, t0.c0 FROM vt0, rt1, t0, v0 WHERE ((NOT (TRIM(DISTINCT ((v0.c0)*(rt1.c1)))))) GROUP BY v0.c0, rt1.c1, rt1.c2, rt1.c0, rt1.c3, vt0.c0, t0.c0 UNION SELECT v0.c0, rt1.c1, rt1.c2, rt1.c0, rt1.c3, vt0.c0, t0.c0 FROM vt0, rt1, t0, v0 WHERE (((TRIM(DISTINCT ((v0.c0)*(rt1.c1)))) ISNULL)) GROUP BY v0.c0, rt1.c1, rt1.c2, rt1.c0, rt1.c3, vt0.c0, t0.c0;
SELECT v0.c0, rt1.c1, rt1.c2, rt1.c0, rt1.c3, vt0.c0, t0.c0 FROM vt0, rt1, t0, v0 GROUP BY v0.c0, rt1.c1, rt1.c2, rt1.c0, rt1.c3, vt0.c0, t0.c0;
SELECT v0.c0 FROM v0, rt1, vt0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, rt1, vt0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0 FROM v0, rt1, vt0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0 FROM v0, rt1, vt0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0 FROM v0, rt1, vt0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, rt1, vt0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0 FROM v0, rt1, vt0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0 FROM v0, rt1, vt0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0 FROM v0, rt1, vt0 GROUP BY v0.c0;
SELECT ALL SUM((((rt1.c1 IN (rt1.c2))) NOT NULL)) FROM vt0, t0, rt1;
SELECT * FROM vt0 INDEXED BY i24, t0, rt1;
SELECT DISTINCT * FROM v0, t0, vt0;
SELECT DISTINCT * FROM v0, t0, vt0 WHERE ((+ ((((vt0.c0, vt0.c0, v0.c0))=((v0.c0, v0.c0, v0.c0)))))) UNION SELECT DISTINCT * FROM v0, t0, vt0 WHERE ((NOT ((+ ((((vt0.c0, vt0.c0, v0.c0))==((v0.c0, v0.c0, v0.c0)))))))) UNION SELECT DISTINCT * FROM v0, t0, vt0 WHERE ((((+ ((((vt0.c0, vt0.c0, v0.c0))=((v0.c0, v0.c0, v0.c0)))))) ISNULL));
SELECT DISTINCT * FROM v0, t0, vt0;
SELECT v0.c0 FROM v0 NATURAL JOIN vt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 NATURAL JOIN vt0 WHERE (LIKELIHOOD(CASE WHEN vt0.c0 THEN vt0.c0 END, 0.32991419590223214)) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 NATURAL JOIN vt0 WHERE ((NOT (LIKELIHOOD(CASE WHEN vt0.c0 THEN vt0.c0 END, 0.32991419590223214)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 NATURAL JOIN vt0 WHERE (((LIKELIHOOD(CASE WHEN vt0.c0 THEN vt0.c0 END, 0.32991419590223214)) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 NATURAL JOIN vt0 GROUP BY v0.c0;
SELECT ALL rt1.c0, rt1.c2, rt1.c3 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c3;
SELECT rt1.c0, rt1.c2, rt1.c3 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c3 HAVING ((((((GROUP_CONCAT(TOTAL(rt1.c3)))AND(rt1.c1)))OR(rt1.c2))) NOT BETWEEN (COUNT(*)) AND (((((((((rt1.c2)AND(MIN(GROUP_CONCAT(rt1.c1)))))OR(rt1.c3)))AND(AVG(rt1.c1))))OR(rt1.c0)))) UNION ALL SELECT ALL rt1.c0, rt1.c2, rt1.c3 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c3 HAVING (NOT (((((((GROUP_CONCAT(TOTAL(rt1.c3)))AND(rt1.c1)))OR(rt1.c2))) NOT BETWEEN (COUNT(*)) AND (((((((((rt1.c2)AND(MIN(GROUP_CONCAT(rt1.c1)))))OR(rt1.c3)))AND(AVG(rt1.c1))))OR(rt1.c0)))))) UNION ALL SELECT rt1.c0, rt1.c2, rt1.c3 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c3 HAVING ((((((((GROUP_CONCAT(TOTAL(rt1.c3)))AND(rt1.c1)))OR(rt1.c2))) NOT BETWEEN (COUNT(*)) AND (((((((((rt1.c2)AND(MIN(GROUP_CONCAT(rt1.c1)))))OR(rt1.c3)))AND(AVG(rt1.c1))))OR(rt1.c0))))) ISNULL);
SELECT rt1.c1, rt1.c3, rt1.c2, rt1.c0 FROM rt1;
SELECT ALL rt1.c1, rt1.c3, rt1.c2, rt1.c0 FROM rt1 WHERE (CASE (- (rt1.c2))  WHEN x'' THEN CAST(rt1.c1 AS NUMERIC) WHEN rt1.c3 COLLATE NOCASE THEN ((rt1.c1)&(rt1.c0)) WHEN (- (0.0978894333288376)) THEN ((rt1.c2)<=(rt1.c1)) ELSE ((rt1.c3)+(rt1.c2)) END) UNION ALL SELECT ALL rt1.c1, rt1.c3, rt1.c2, rt1.c0 FROM rt1 WHERE ((NOT (CASE (- (rt1.c2))  WHEN x'' THEN CAST(rt1.c1 AS NUMERIC) WHEN rt1.c3 COLLATE NOCASE THEN ((rt1.c1)&(rt1.c0)) WHEN (- (0.0978894333288376)) THEN ((rt1.c2)<=(rt1.c1)) ELSE ((rt1.c3)+(rt1.c2)) END))) UNION ALL SELECT rt1.c1, rt1.c3, rt1.c2, rt1.c0 FROM rt1 WHERE (((CASE (- (rt1.c2))  WHEN x'' THEN CAST(rt1.c1 AS NUMERIC) WHEN rt1.c3 COLLATE NOCASE THEN ((rt1.c1)&(rt1.c0)) WHEN (- (0.0978894333288376)) THEN ((rt1.c2)<=(rt1.c1)) ELSE ((rt1.c3)+(rt1.c2)) END) ISNULL));
SELECT rt1.c1, rt1.c3, rt1.c2, rt1.c0 FROM rt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)>=(CASE WHEN vt0.c0 THEN x'e528681c' END))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((vt0.c0 COLLATE RTRIM)>=(CASE WHEN vt0.c0 THEN x'e528681c' END))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0 COLLATE RTRIM)>=(CASE WHEN vt0.c0 THEN x'e528681c' END))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL rt1.c2, v0.c0, rt1.c3, rt1.c0 FROM v0 RIGHT OUTER JOIN rt1 ON rt1.c2 GROUP BY rt1.c2, v0.c0, rt1.c3, rt1.c0;
SELECT ALL rt1.c2, v0.c0, rt1.c3, rt1.c0 FROM v0 RIGHT OUTER JOIN rt1 ON rt1.c2 WHERE ((((rt1.c0) NOT BETWEEN (rt1.c2) AND (v0.c0)) IN ())) GROUP BY rt1.c2, v0.c0, rt1.c3, rt1.c0 UNION SELECT rt1.c2, v0.c0, rt1.c3, rt1.c0 FROM v0 RIGHT OUTER JOIN rt1 ON rt1.c2 WHERE ((NOT ((((rt1.c0) NOT BETWEEN (rt1.c2) AND (v0.c0)) IN ())))) GROUP BY rt1.c2, v0.c0, rt1.c3, rt1.c0 UNION SELECT ALL rt1.c2, v0.c0, rt1.c3, rt1.c0 FROM v0 RIGHT OUTER JOIN rt1 ON rt1.c2 WHERE ((((((rt1.c0) NOT BETWEEN (rt1.c2) AND (v0.c0)) IN ())) ISNULL)) GROUP BY rt1.c2, v0.c0, rt1.c3, rt1.c0;
SELECT ALL rt1.c2, v0.c0, rt1.c3, rt1.c0 FROM v0 RIGHT OUTER JOIN rt1 ON rt1.c2 GROUP BY rt1.c2, v0.c0, rt1.c3, rt1.c0;
SELECT t0.c0, vt0.c0, rt1.c3, rt1.c0 FROM t0, rt1 CROSS JOIN v0 ON CAST(((((((((v0.c0)AND(0.9448351668167513)))AND(rt1.c0)))OR(rt1.c2)))OR(t0.c0)) AS NUMERIC) LEFT OUTER JOIN vt0 ON rt1.c2 GROUP BY t0.c0, vt0.c0, rt1.c3, rt1.c0;
SELECT ALL t0.c0, vt0.c0, rt1.c3, rt1.c0 FROM t0, rt1 CROSS JOIN v0 ON CAST(((((((((v0.c0)AND(0.9448351668167513)))AND(rt1.c0)))OR(rt1.c2)))OR(t0.c0)) AS NUMERIC) LEFT OUTER JOIN vt0 ON rt1.c2 GROUP BY t0.c0, vt0.c0, rt1.c3, rt1.c0 HAVING MIN(MAX(vt0.c0)) UNION ALL SELECT t0.c0, vt0.c0, rt1.c3, rt1.c0 FROM t0, rt1 CROSS JOIN v0 ON CAST(((((((((v0.c0)AND(0.9448351668167513)))AND(rt1.c0)))OR(rt1.c2)))OR(t0.c0)) AS NUMERIC) LEFT OUTER JOIN vt0 ON rt1.c2 GROUP BY t0.c0, vt0.c0, rt1.c3, rt1.c0 HAVING (NOT (MIN(MAX(vt0.c0)))) UNION ALL SELECT ALL t0.c0, vt0.c0, rt1.c3, rt1.c0 FROM t0, rt1 CROSS JOIN v0 ON CAST(((((((((v0.c0)AND(0.9448351668167513)))AND(rt1.c0)))OR(rt1.c2)))OR(t0.c0)) AS NUMERIC) LEFT OUTER JOIN vt0 ON rt1.c2 GROUP BY t0.c0, vt0.c0, rt1.c3, rt1.c0 HAVING ((MIN(MAX(vt0.c0))) ISNULL);
SELECT ALL * FROM rt1, vt0 INDEXED BY i24, t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (t0.c0) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT * FROM t0 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (CAST(CAST(v0.c0 AS BLOB) AS INTEGER)) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CAST(CAST(v0.c0 AS BLOB) AS INTEGER)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((CAST(CAST(v0.c0 AS BLOB) AS INTEGER)) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((LIKELIHOOD(vt0.c0, 0.35269236688348293))<=(COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((LIKELIHOOD(vt0.c0, 0.35269236688348293))<=(COUNT(*))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((LIKELIHOOD(vt0.c0, 0.35269236688348293))<=(COUNT(*)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((LIKELIHOOD(vt0.c0, 0.35269236688348293))<=(COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((LIKELIHOOD(vt0.c0, 0.35269236688348293))<=(COUNT(*))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((LIKELIHOOD(vt0.c0, 0.35269236688348293))<=(COUNT(*)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE (CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) AS INTEGER)) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT (CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) AS INTEGER)))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE (((CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) AS INTEGER)) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT rt1.c3, rt1.c0, rt1.c2, rt1.c1 FROM rt1, v0, t0, vt0;
SELECT DISTINCT rt1.c3, rt1.c0, rt1.c2, rt1.c1 FROM rt1, v0, t0, vt0 WHERE (((((((t0.c0)AND(v0.c0)))AND(vt0.c0)))IS NOT(UNLIKELY(rt1.c3)))) UNION SELECT DISTINCT rt1.c3, rt1.c0, rt1.c2, rt1.c1 FROM rt1, v0, t0, vt0 WHERE ((NOT (((((((t0.c0)AND(v0.c0)))AND(vt0.c0)))IS NOT(UNLIKELY(rt1.c3)))))) UNION SELECT DISTINCT rt1.c3, rt1.c0, rt1.c2, rt1.c1 FROM rt1, v0, t0, vt0 WHERE (((((((((t0.c0)AND(v0.c0)))AND(vt0.c0)))IS NOT(UNLIKELY(rt1.c3)))) ISNULL));
SELECT DISTINCT rt1.c3, rt1.c0, rt1.c2, rt1.c1 FROM rt1, v0, t0, vt0;
SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, t0.c0 FROM vt0, t0 WHERE (CASE (t0.c0 IN (t0.c0))  WHEN (NOT (t0.c0)) THEN CASE WHEN vt0.c0 THEN t0.c0 END ELSE ((vt0.c0) NOT NULL) END) GROUP BY vt0.c0, t0.c0 UNION SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 WHERE ((NOT (CASE (t0.c0 IN (t0.c0))  WHEN (NOT (t0.c0)) THEN CASE WHEN vt0.c0 THEN t0.c0 END ELSE ((vt0.c0) NOT NULL) END))) GROUP BY vt0.c0, t0.c0 UNION SELECT vt0.c0, t0.c0 FROM vt0, t0 WHERE (((CASE (t0.c0 IN (t0.c0))  WHEN (NOT (t0.c0)) THEN CASE WHEN vt0.c0 THEN t0.c0 END ELSE ((vt0.c0) NOT NULL) END) ISNULL)) GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0;
SELECT ALL t0.c0 FROM t0, v0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, v0 GROUP BY t0.c0 HAVING v0.c0 UNION ALL SELECT t0.c0 FROM t0, v0 GROUP BY t0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL t0.c0 FROM t0, v0 GROUP BY t0.c0 HAVING ((v0.c0) ISNULL);
SELECT ALL t0.c0 FROM t0, v0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, v0 GROUP BY t0.c0 HAVING v0.c0 UNION ALL SELECT t0.c0 FROM t0, v0 GROUP BY t0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL t0.c0 FROM t0, v0 GROUP BY t0.c0 HAVING ((v0.c0) ISNULL);
SELECT ALL t0.c0 FROM t0, v0 GROUP BY t0.c0;
SELECT ALL rt1.c0 FROM t0, v0 RIGHT OUTER JOIN vt0 ON CAST(((NULL) BETWEEN (x'') AND (v0.c0)) AS INTEGER) RIGHT OUTER JOIN rt1 ON ((((((((v0.c0)OR(vt0.c0)))AND(t0.c0)))AND((NOT (rt1.c3)))))OR((- (t0.c0))));
SELECT rt1.c0 FROM t0, v0 RIGHT OUTER JOIN vt0 ON CAST(((NULL) BETWEEN (x'') AND (v0.c0)) AS INTEGER) RIGHT OUTER JOIN rt1 ON ((((((((v0.c0)OR(vt0.c0)))AND(t0.c0)))AND((NOT (rt1.c3)))))OR((- (t0.c0)))) WHERE (RTRIM(((rt1.c0) NOTNULL))) UNION ALL SELECT rt1.c0 FROM t0, v0 RIGHT OUTER JOIN vt0 ON CAST(((NULL) BETWEEN (x'') AND (v0.c0)) AS INTEGER) RIGHT OUTER JOIN rt1 ON ((((((((v0.c0)OR(vt0.c0)))AND(t0.c0)))AND((NOT (rt1.c3)))))OR((- (t0.c0)))) WHERE ((NOT (RTRIM(((rt1.c0) NOTNULL))))) UNION ALL SELECT ALL rt1.c0 FROM t0, v0 RIGHT OUTER JOIN vt0 ON CAST(((NULL) BETWEEN (x'') AND (v0.c0)) AS INTEGER) RIGHT OUTER JOIN rt1 ON ((((((((v0.c0)OR(vt0.c0)))AND(t0.c0)))AND((NOT (rt1.c3)))))OR((- (t0.c0)))) WHERE (((RTRIM(((rt1.c0) NOTNULL))) ISNULL));
SELECT ALL rt1.c0 FROM t0, v0 RIGHT OUTER JOIN vt0 ON CAST(((NULL) BETWEEN (x'') AND (v0.c0)) AS INTEGER) RIGHT OUTER JOIN rt1 ON ((((((((v0.c0)OR(vt0.c0)))AND(t0.c0)))AND((NOT (rt1.c3)))))OR((- (t0.c0))));
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((v0.c0 IN ())) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((v0.c0 IN ())))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((v0.c0 IN ())) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT rt1.c3, rt1.c0, t0.c0, vt0.c0, rt1.c2, v0.c0, rt1.c1 FROM vt0 FULL OUTER JOIN v0 ON json_remove(CAST(v0.c0 AS TEXT), ((rt1.c1) IS TRUE), CASE WHEN t0.c0 THEN t0.c0 WHEN v0.c0 THEN rt1.c2 WHEN 0xffffffffa1054504 THEN vt0.c0 ELSE '1' END, CAST(rt1.c0 AS NUMERIC)) INNER JOIN t0 ON NULL LEFT OUTER JOIN rt1 ON CASE WHEN CAST(rt1.c0 AS BLOB) THEN (((vt0.c0)) NOT BETWEEN ((x'4428')) AND ((vt0.c0))) END GROUP BY rt1.c3, rt1.c0, t0.c0, vt0.c0, rt1.c2, v0.c0, rt1.c1;
SELECT v0.c0, t0.c0, vt0.c0, rt1.c2, rt1.c3, rt1.c0 FROM t0, vt0, rt1, v0 GROUP BY v0.c0, t0.c0, vt0.c0, rt1.c2, rt1.c3, rt1.c0;
SELECT ALL v0.c0, t0.c0, vt0.c0, rt1.c2, rt1.c3, rt1.c0 FROM t0, vt0, rt1, v0 GROUP BY v0.c0, t0.c0, vt0.c0, rt1.c2, rt1.c3, rt1.c0 HAVING MIN(SUM(rt1.c1)) UNION ALL SELECT v0.c0, t0.c0, vt0.c0, rt1.c2, rt1.c3, rt1.c0 FROM t0, vt0, rt1, v0 GROUP BY v0.c0, t0.c0, vt0.c0, rt1.c2, rt1.c3, rt1.c0 HAVING (NOT (MIN(SUM(rt1.c1)))) UNION ALL SELECT ALL v0.c0, t0.c0, vt0.c0, rt1.c2, rt1.c3, rt1.c0 FROM t0, vt0, rt1, v0 GROUP BY v0.c0, t0.c0, vt0.c0, rt1.c2, rt1.c3, rt1.c0 HAVING ((MIN(SUM(rt1.c1))) ISNULL);
SELECT TOTAL(((((rt1.c2)OR(v0.c0)))AND(rt1.c1)) COLLATE BINARY) FROM t0, v0, vt0, rt1;
SELECT * FROM t0, vt0;
SELECT * FROM t0, vt0 WHERE ((((((('1273211354')&(vt0.c0)))OR((t0.c0 IN ()))))OR(((x'')>>(0.38210981983772374))))) UNION ALL SELECT ALL * FROM t0, vt0 WHERE ((NOT ((((((('1273211354')&(vt0.c0)))OR((t0.c0 IN ()))))OR(((x'')>>(0.38210981983772374))))))) UNION ALL SELECT * FROM t0, vt0 WHERE ((((((((('1273211354')&(vt0.c0)))OR((t0.c0 IN ()))))OR(((x'')>>(0.38210981983772374))))) ISNULL));
SELECT * FROM t0, vt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((v0.c0)>(0.3976149571012202)) IN (v0.c0, (((v0.c0))<=((v0.c0)))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((v0.c0)>(0.3976149571012202)) IN (v0.c0, (((v0.c0))<=((v0.c0)))))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((v0.c0)>(0.3976149571012202)) IN (v0.c0, (((v0.c0))<=((v0.c0)))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT v0.c0, t0.c0, rt1.c0, rt1.c3, rt1.c1 FROM vt0, t0, rt1, v0 GROUP BY v0.c0, t0.c0, rt1.c0, rt1.c3, rt1.c1;
SELECT ALL v0.c0, t0.c0, rt1.c0, rt1.c3, rt1.c1 FROM vt0, t0, rt1, v0 WHERE (((((((rt1.c1)GLOB(rt1.c1)))AND(CAST(v0.c0 AS REAL))))AND(((((((((t0.c0)AND(0.6307442785414251)))OR(rt1.c2)))AND(rt1.c1)))AND(278331017))))) GROUP BY v0.c0, t0.c0, rt1.c0, rt1.c3, rt1.c1 UNION SELECT v0.c0, t0.c0, rt1.c0, rt1.c3, rt1.c1 FROM vt0, t0, rt1, v0 WHERE ((NOT (((((((rt1.c1)GLOB(rt1.c1)))AND(CAST(v0.c0 AS REAL))))AND(((((((((t0.c0)AND(0.6307442785414251)))OR(rt1.c2)))AND(rt1.c1)))AND(278331017))))))) GROUP BY v0.c0, t0.c0, rt1.c0, rt1.c3, rt1.c1 UNION SELECT v0.c0, t0.c0, rt1.c0, rt1.c3, rt1.c1 FROM vt0, t0, rt1, v0 WHERE (((((((((rt1.c1)GLOB(rt1.c1)))AND(CAST(v0.c0 AS REAL))))AND(((((((((t0.c0)AND(0.6307442785414251)))OR(rt1.c2)))AND(rt1.c1)))AND(278331017))))) ISNULL)) GROUP BY v0.c0, t0.c0, rt1.c0, rt1.c3, rt1.c1;
SELECT v0.c0, t0.c0, rt1.c0, rt1.c3, rt1.c1 FROM vt0, t0, rt1, v0 GROUP BY v0.c0, t0.c0, rt1.c0, rt1.c3, rt1.c1;
SELECT ALL rt1.c2, t0.c0 FROM rt1, t0, v0 GROUP BY rt1.c2, t0.c0;
SELECT ALL rt1.c2, t0.c0 FROM rt1, t0, v0 GROUP BY rt1.c2, t0.c0 HAVING COUNT(GROUP_CONCAT(rt1.c1)) UNION ALL SELECT ALL rt1.c2, t0.c0 FROM rt1, t0, v0 GROUP BY rt1.c2, t0.c0 HAVING (NOT (COUNT(GROUP_CONCAT(rt1.c1)))) UNION ALL SELECT ALL rt1.c2, t0.c0 FROM rt1, t0, v0 GROUP BY rt1.c2, t0.c0 HAVING ((COUNT(GROUP_CONCAT(rt1.c1))) ISNULL);
SELECT ALL * FROM v0, rt1;
SELECT * FROM v0, rt1 WHERE (((rt1.c3) ISNULL)) UNION ALL SELECT ALL * FROM v0, rt1 WHERE ((NOT (((rt1.c3) ISNULL)))) UNION ALL SELECT * FROM v0, rt1 WHERE (((((rt1.c3) ISNULL)) ISNULL));
SELECT ALL * FROM v0, rt1;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (json(x'')) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (json(x'')))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((json(x'')) ISNULL));
SELECT ALL rt1.c2, vt0.c0 FROM v0, vt0, t0 INNER JOIN rt1 ON CASE (((rt1.c2))<=((rt1.c1)))  WHEN t0.c0 COLLATE NOCASE THEN ((rt1.c0) NOTNULL) ELSE (rt1.c0 IN ()) END GROUP BY rt1.c2, vt0.c0;
SELECT ALL rt1.c2, vt0.c0 FROM v0, vt0, t0 INNER JOIN rt1 ON CASE (((rt1.c2))<=((rt1.c1)))  WHEN t0.c0 COLLATE NOCASE THEN ((rt1.c0) NOTNULL) ELSE (rt1.c0 IN ()) END WHERE (((rt1.c0)&(CASE rt1.c0  WHEN rt1.c1 THEN t0.c0 END))) GROUP BY rt1.c2, vt0.c0 UNION SELECT ALL rt1.c2, vt0.c0 FROM v0, vt0, t0 INNER JOIN rt1 ON CASE (((rt1.c2))<=((rt1.c1)))  WHEN t0.c0 COLLATE NOCASE THEN ((rt1.c0) NOTNULL) ELSE (rt1.c0 IN ()) END WHERE ((NOT (((rt1.c0)&(CASE rt1.c0  WHEN rt1.c1 THEN t0.c0 END))))) GROUP BY rt1.c2, vt0.c0 UNION SELECT rt1.c2, vt0.c0 FROM v0, vt0, t0 INNER JOIN rt1 ON CASE (((rt1.c2))<=((rt1.c1)))  WHEN t0.c0 COLLATE NOCASE THEN ((rt1.c0) NOTNULL) ELSE (rt1.c0 IN ()) END WHERE (((((rt1.c0)&(CASE rt1.c0  WHEN rt1.c1 THEN t0.c0 END))) ISNULL)) GROUP BY rt1.c2, vt0.c0;
SELECT ALL rt1.c2, vt0.c0 FROM v0, vt0, t0 INNER JOIN rt1 ON CASE (((rt1.c2))<=((rt1.c1)))  WHEN t0.c0 COLLATE NOCASE THEN ((rt1.c0) NOTNULL) ELSE (rt1.c0 IN ()) END GROUP BY rt1.c2, vt0.c0;
SELECT t0.c0, rt1.c2, rt1.c1 FROM v0, t0, rt1 GROUP BY t0.c0, rt1.c2, rt1.c1;
SELECT t0.c0, rt1.c2, rt1.c1 FROM v0, t0, rt1 GROUP BY t0.c0, rt1.c2, rt1.c1 HAVING rt1.c2 UNION ALL SELECT ALL t0.c0, rt1.c2, rt1.c1 FROM v0, t0, rt1 GROUP BY t0.c0, rt1.c2, rt1.c1 HAVING (NOT (rt1.c2)) UNION ALL SELECT t0.c0, rt1.c2, rt1.c1 FROM v0, t0, rt1 GROUP BY t0.c0, rt1.c2, rt1.c1 HAVING ((rt1.c2) ISNULL);
SELECT t0.c0, rt1.c2, rt1.c1 FROM v0, t0, rt1 GROUP BY t0.c0, rt1.c2, rt1.c1;
SELECT t0.c0, rt1.c2, rt1.c1 FROM v0, t0, rt1 GROUP BY t0.c0, rt1.c2, rt1.c1 HAVING rt1.c2 UNION ALL SELECT ALL t0.c0, rt1.c2, rt1.c1 FROM v0, t0, rt1 GROUP BY t0.c0, rt1.c2, rt1.c1 HAVING (NOT (rt1.c2)) UNION ALL SELECT t0.c0, rt1.c2, rt1.c1 FROM v0, t0, rt1 GROUP BY t0.c0, rt1.c2, rt1.c1 HAVING ((rt1.c2) ISNULL);
SELECT t0.c0, rt1.c2, rt1.c1 FROM v0, t0, rt1 GROUP BY t0.c0, rt1.c2, rt1.c1;
SELECT rt1.c1, t0.c0, rt1.c0, vt0.c0, v0.c0 FROM v0, rt1, vt0, t0;
SELECT rt1.c1, t0.c0, rt1.c0, vt0.c0, v0.c0 FROM v0, rt1, vt0, t0 WHERE (highlight(CAST(rt1.c1 AS INTEGER), rt1.c3, ((((rt1.c2)OR(rt1.c1)))AND(rt1.c2)), ((rt1.c3)GLOB(vt0.c0)))) UNION ALL SELECT ALL rt1.c1, t0.c0, rt1.c0, vt0.c0, v0.c0 FROM v0, rt1, vt0, t0 WHERE ((NOT (highlight(CAST(rt1.c1 AS INTEGER), rt1.c3, ((((rt1.c2)OR(rt1.c1)))AND(rt1.c2)), ((rt1.c3)GLOB(vt0.c0)))))) UNION ALL SELECT ALL rt1.c1, t0.c0, rt1.c0, vt0.c0, v0.c0 FROM v0, rt1, vt0, t0 WHERE (((highlight(CAST(rt1.c1 AS INTEGER), rt1.c3, ((((rt1.c2)OR(rt1.c1)))AND(rt1.c2)), ((rt1.c3)GLOB(vt0.c0)))) ISNULL));
SELECT rt1.c1, t0.c0, rt1.c0, vt0.c0, v0.c0 FROM v0, rt1, vt0, t0;
SELECT DISTINCT rt1.c1, rt1.c2, rt1.c0 FROM rt1;
SELECT DISTINCT rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE (x'') UNION SELECT DISTINCT rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE ((NOT (x''))) UNION SELECT DISTINCT rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE (((x'') ISNULL));
SELECT DISTINCT rt1.c1, rt1.c2, rt1.c0 FROM rt1;
SELECT vt0.c0, rt1.c2 FROM t0 RIGHT OUTER JOIN rt1 ON x'' FULL OUTER JOIN v0 ON ((((t0.c0 COLLATE NOCASE)OR((~ (vt0.c0)))))OR((rt1.c3 IN ()))) CROSS JOIN vt0 ON NULL GROUP BY vt0.c0, rt1.c2;
SELECT ALL rt1.c1, rt1.c0, rt1.c3, rt1.c2, vt0.c0 FROM t0 LEFT OUTER JOIN rt1 ON ((((vt0.c0)*(rt1.c3))) ISNULL) INNER JOIN v0 ON NULL FULL OUTER JOIN vt0 ON (((((((rt1.c0)) NOT BETWEEN ((x'')) AND ((v0.c0))))OR(rt1.c2)))AND(((t0.c0) BETWEEN (v0.c0) AND (t0.c0)))) GROUP BY rt1.c1, rt1.c0, rt1.c3, rt1.c2, vt0.c0;
SELECT * FROM v0 INDEXED BY i24;
SELECT DISTINCT vt0.c0 FROM t0, vt0;
SELECT DISTINCT vt0.c0 FROM t0, vt0 WHERE ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) IN ())) UNION SELECT DISTINCT vt0.c0 FROM t0, vt0 WHERE ((NOT ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) IN ())))) UNION SELECT DISTINCT vt0.c0 FROM t0, vt0 WHERE ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) IN ())) ISNULL));
SELECT DISTINCT vt0.c0 FROM t0, vt0;
SELECT rt1.c2, rt1.c3, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c3, rt1.c1, rt1.c0;
SELECT ALL rt1.c2, rt1.c3, rt1.c1, rt1.c0 FROM rt1 WHERE ((((NOT (rt1.c0))) NOTNULL)) GROUP BY rt1.c2, rt1.c3, rt1.c1, rt1.c0 UNION SELECT ALL rt1.c2, rt1.c3, rt1.c1, rt1.c0 FROM rt1 WHERE ((NOT ((((NOT (rt1.c0))) NOTNULL)))) GROUP BY rt1.c2, rt1.c3, rt1.c1, rt1.c0 UNION SELECT ALL rt1.c2, rt1.c3, rt1.c1, rt1.c0 FROM rt1 WHERE ((((((NOT (rt1.c0))) NOTNULL)) ISNULL)) GROUP BY rt1.c2, rt1.c3, rt1.c1, rt1.c0;
SELECT rt1.c2, rt1.c3, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c3, rt1.c1, rt1.c0;
SELECT ALL t0.c0 FROM rt1, vt0, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM rt1, vt0, t0 GROUP BY t0.c0 HAVING json_patch(SUM(SUM(MAX(rt1.c3))), SUM(t0.c0)) UNION ALL SELECT ALL t0.c0 FROM rt1, vt0, t0 GROUP BY t0.c0 HAVING (NOT (json_patch(SUM(SUM(MAX(rt1.c3))), SUM(t0.c0)))) UNION ALL SELECT t0.c0 FROM rt1, vt0, t0 GROUP BY t0.c0 HAVING ((json_patch(SUM(SUM(MAX(rt1.c3))), SUM(t0.c0))) ISNULL);
SELECT * FROM rt1, vt0 NATURAL JOIN v0;
SELECT ALL * FROM rt1, vt0 NATURAL JOIN v0 WHERE (((CAST(rt1.c0 AS INTEGER)) NOT NULL)) UNION ALL SELECT * FROM rt1, vt0 NATURAL JOIN v0 WHERE ((NOT (((CAST(rt1.c0 AS INTEGER)) NOT NULL)))) UNION ALL SELECT ALL * FROM rt1, vt0 NATURAL JOIN v0 WHERE (((((CAST(rt1.c0 AS INTEGER)) NOT NULL)) ISNULL));
SELECT * FROM rt1, vt0 NATURAL JOIN v0;
SELECT DISTINCT * FROM vt0, v0, rt1;
SELECT DISTINCT * FROM vt0, v0, rt1 WHERE (((rt1.c3) NOT BETWEEN (rt1.c1) AND (vt0.c0)) COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt0, v0, rt1 WHERE ((NOT (((rt1.c3) NOT BETWEEN (rt1.c1) AND (vt0.c0)) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt0, v0, rt1 WHERE (((((rt1.c3) NOT BETWEEN (rt1.c1) AND (vt0.c0)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt0, v0, rt1;
SELECT ALL rt1.c1, rt1.c2, t0.c0, v0.c0, rt1.c0, rt1.c3 FROM v0, rt1 CROSS JOIN t0 ON ((((rt1.c2) NOTNULL))LIKE(0.7374989999141731 COLLATE NOCASE)) GROUP BY rt1.c1, rt1.c2, t0.c0, v0.c0, rt1.c0, rt1.c3;
SELECT rt1.c1, rt1.c2, t0.c0, v0.c0, rt1.c0, rt1.c3 FROM v0, rt1 CROSS JOIN t0 ON ((((rt1.c2) NOTNULL))LIKE(0.7374989999141731 COLLATE NOCASE)) WHERE (CASE WHEN ((rt1.c3) NOTNULL) THEN CASE WHEN rt1.c1 THEN rt1.c0 WHEN v0.c0 THEN rt1.c2 WHEN t0.c0 THEN x'' ELSE rt1.c1 END WHEN ((((((((t0.c0)OR(rt1.c3)))AND(rt1.c1)))AND(rt1.c2)))OR(v0.c0)) THEN ((rt1.c3) BETWEEN (rt1.c1) AND (t0.c0)) WHEN ((rt1.c2) NOTNULL) THEN ((rt1.c1) IS FALSE) END) GROUP BY rt1.c1, rt1.c2, t0.c0, v0.c0, rt1.c0, rt1.c3 UNION SELECT ALL rt1.c1, rt1.c2, t0.c0, v0.c0, rt1.c0, rt1.c3 FROM v0, rt1 CROSS JOIN t0 ON ((((rt1.c2) NOTNULL))LIKE(0.7374989999141731 COLLATE NOCASE)) WHERE ((NOT (CASE WHEN ((rt1.c3) NOTNULL) THEN CASE WHEN rt1.c1 THEN rt1.c0 WHEN v0.c0 THEN rt1.c2 WHEN t0.c0 THEN x'' ELSE rt1.c1 END WHEN ((((((((t0.c0)OR(rt1.c3)))AND(rt1.c1)))AND(rt1.c2)))OR(v0.c0)) THEN ((rt1.c3) BETWEEN (rt1.c1) AND (t0.c0)) WHEN ((rt1.c2) NOTNULL) THEN ((rt1.c1) IS FALSE) END))) GROUP BY rt1.c1, rt1.c2, t0.c0, v0.c0, rt1.c0, rt1.c3 UNION SELECT ALL rt1.c1, rt1.c2, t0.c0, v0.c0, rt1.c0, rt1.c3 FROM v0, rt1 CROSS JOIN t0 ON ((((rt1.c2) NOTNULL))LIKE(0.7374989999141731 COLLATE NOCASE)) WHERE (((CASE WHEN ((rt1.c3) NOTNULL) THEN CASE WHEN rt1.c1 THEN rt1.c0 WHEN v0.c0 THEN rt1.c2 WHEN t0.c0 THEN x'' ELSE rt1.c1 END WHEN ((((((((t0.c0)OR(rt1.c3)))AND(rt1.c1)))AND(rt1.c2)))OR(v0.c0)) THEN ((rt1.c3) BETWEEN (rt1.c1) AND (t0.c0)) WHEN ((rt1.c2) NOTNULL) THEN ((rt1.c1) IS FALSE) END) ISNULL)) GROUP BY rt1.c1, rt1.c2, t0.c0, v0.c0, rt1.c0, rt1.c3;
SELECT ALL rt1.c1, rt1.c2, t0.c0, v0.c0, rt1.c0, rt1.c3 FROM v0, rt1 CROSS JOIN t0 ON ((((rt1.c2) NOTNULL))LIKE(0.7374989999141731 COLLATE NOCASE)) GROUP BY rt1.c1, rt1.c2, t0.c0, v0.c0, rt1.c0, rt1.c3;
SELECT rt1.c2, t0.c0 FROM v0, t0, vt0 RIGHT OUTER JOIN rt1 ON ((((((((LIKE(v0.c0, 0xac8f568, '3'))AND(rt1.c2)))OR(CAST(vt0.c0 AS INTEGER))))AND(((((((((vt0.c0)OR(vt0.c0)))OR(0.709185547798161)))AND(vt0.c0)))AND(x'')))))OR((rt1.c3 IN ()))) GROUP BY rt1.c2, t0.c0;
SELECT rt1.c2, t0.c0 FROM v0, t0, vt0 RIGHT OUTER JOIN rt1 ON ((((((((LIKE(v0.c0, 0Xac8f568, '3'))AND(rt1.c2)))OR(CAST(vt0.c0 AS INTEGER))))AND(((((((((vt0.c0)OR(vt0.c0)))OR(0.709185547798161)))AND(vt0.c0)))AND(x'')))))OR((rt1.c3 IN ()))) GROUP BY rt1.c2, t0.c0 HAVING TOTAL((~ (rt1.c0))) UNION ALL SELECT rt1.c2, t0.c0 FROM v0, t0, vt0 RIGHT OUTER JOIN rt1 ON ((((((((LIKE(v0.c0, 0xac8f568, '3'))AND(rt1.c2)))OR(CAST(vt0.c0 AS INTEGER))))AND(((((((((vt0.c0)OR(vt0.c0)))OR(0.709185547798161)))AND(vt0.c0)))AND(x'')))))OR((rt1.c3 IN ()))) GROUP BY rt1.c2, t0.c0 HAVING (NOT (TOTAL((~ (rt1.c0))))) UNION ALL SELECT rt1.c2, t0.c0 FROM v0, t0, vt0 RIGHT OUTER JOIN rt1 ON ((((((((LIKE(v0.c0, 0Xac8f568, '3'))AND(rt1.c2)))OR(CAST(vt0.c0 AS INTEGER))))AND(((((((((vt0.c0)OR(vt0.c0)))OR(0.709185547798161)))AND(vt0.c0)))AND(x'')))))OR((rt1.c3 IN ()))) GROUP BY rt1.c2, t0.c0 HAVING ((TOTAL((~ (rt1.c0)))) ISNULL);
SELECT rt1.c2, t0.c0 FROM v0, t0, vt0 RIGHT OUTER JOIN rt1 ON ((((((((LIKE(v0.c0, 0xac8f568, '3'))AND(rt1.c2)))OR(CAST(vt0.c0 AS INTEGER))))AND(((((((((vt0.c0)OR(vt0.c0)))OR(0.709185547798161)))AND(vt0.c0)))AND(x'')))))OR((rt1.c3 IN ()))) GROUP BY rt1.c2, t0.c0;
SELECT rt1.c2, t0.c0 FROM v0, t0, vt0 RIGHT OUTER JOIN rt1 ON ((((((((LIKE(v0.c0, 0Xac8f568, '3'))AND(rt1.c2)))OR(CAST(vt0.c0 AS INTEGER))))AND(((((((((vt0.c0)OR(vt0.c0)))OR(0.709185547798161)))AND(vt0.c0)))AND(x'')))))OR((rt1.c3 IN ()))) GROUP BY rt1.c2, t0.c0 HAVING TOTAL((~ (rt1.c0))) UNION ALL SELECT rt1.c2, t0.c0 FROM v0, t0, vt0 RIGHT OUTER JOIN rt1 ON ((((((((LIKE(v0.c0, 0xac8f568, '3'))AND(rt1.c2)))OR(CAST(vt0.c0 AS INTEGER))))AND(((((((((vt0.c0)OR(vt0.c0)))OR(0.709185547798161)))AND(vt0.c0)))AND(x'')))))OR((rt1.c3 IN ()))) GROUP BY rt1.c2, t0.c0 HAVING (NOT (TOTAL((~ (rt1.c0))))) UNION ALL SELECT rt1.c2, t0.c0 FROM v0, t0, vt0 RIGHT OUTER JOIN rt1 ON ((((((((LIKE(v0.c0, 0Xac8f568, '3'))AND(rt1.c2)))OR(CAST(vt0.c0 AS INTEGER))))AND(((((((((vt0.c0)OR(vt0.c0)))OR(0.709185547798161)))AND(vt0.c0)))AND(x'')))))OR((rt1.c3 IN ()))) GROUP BY rt1.c2, t0.c0 HAVING ((TOTAL((~ (rt1.c0)))) ISNULL);
SELECT rt1.c2, t0.c0 FROM v0, t0, vt0 RIGHT OUTER JOIN rt1 ON ((((((((LIKE(v0.c0, 0xac8f568, '3'))AND(rt1.c2)))OR(CAST(vt0.c0 AS INTEGER))))AND(((((((((vt0.c0)OR(vt0.c0)))OR(0.709185547798161)))AND(vt0.c0)))AND(x'')))))OR((rt1.c3 IN ()))) GROUP BY rt1.c2, t0.c0;
SELECT ALL MAX((NOT (0.49910388810182704))) FROM vt0 ORDER BY (((((((('')OR(vt0.c0)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS LAST;
SELECT ALL * FROM t0, v0, vt0, rt1;
SELECT * FROM t0, v0, vt0, rt1 WHERE ((- (t0.c0))) UNION ALL SELECT ALL * FROM t0, v0, vt0, rt1 WHERE ((NOT ((- (t0.c0))))) UNION ALL SELECT * FROM t0, v0, vt0, rt1 WHERE ((((- (t0.c0))) ISNULL));
SELECT ALL * FROM t0, v0, vt0, rt1;
SELECT DISTINCT * FROM vt0, v0, rt1, t0;
SELECT DISTINCT * FROM vt0, v0, rt1, t0 WHERE ((((rt1.c1 IN ()))|((((vt0.c0)) NOT BETWEEN ((rt1.c0)) AND ((vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0, v0, rt1, t0 WHERE ((NOT ((((rt1.c1 IN ()))|((((vt0.c0)) NOT BETWEEN ((rt1.c0)) AND ((vt0.c0)))))))) UNION SELECT DISTINCT * FROM vt0, v0, rt1, t0 WHERE ((((((rt1.c1 IN ()))|((((vt0.c0)) NOT BETWEEN ((rt1.c0)) AND ((vt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt0, v0, rt1, t0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt0 WHERE ((((vt0.c0 IN ()))&(v0.c0 COLLATE BINARY))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, vt0 WHERE ((NOT ((((vt0.c0 IN ()))&(v0.c0 COLLATE BINARY))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, vt0 WHERE ((((((vt0.c0 IN ()))&(v0.c0 COLLATE BINARY))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, t0, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0, t0, v0 GROUP BY v0.c0 HAVING SUM(((((MIN(v0.c0))AND(COUNT(COUNT(v0.c0)))))OR(SUM(vt0.c0)))) UNION ALL SELECT v0.c0 FROM vt0, t0, v0 GROUP BY v0.c0 HAVING (NOT (SUM(((((MIN(v0.c0))AND(COUNT(COUNT(v0.c0)))))OR(SUM(vt0.c0)))))) UNION ALL SELECT ALL v0.c0 FROM vt0, t0, v0 GROUP BY v0.c0 HAVING ((SUM(((((MIN(v0.c0))AND(COUNT(COUNT(v0.c0)))))OR(SUM(vt0.c0))))) ISNULL);
SELECT t0.c0 FROM v0, t0 NATURAL JOIN vt0;
SELECT t0.c0 FROM v0, t0 NATURAL JOIN vt0 WHERE (vt0.c0) UNION ALL SELECT ALL t0.c0 FROM v0, t0 NATURAL JOIN vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL t0.c0 FROM v0, t0 NATURAL JOIN vt0 WHERE (((vt0.c0) ISNULL));
SELECT t0.c0 FROM v0, t0 NATURAL JOIN vt0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (0.6332257622665313) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (0.6332257622665313))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((0.6332257622665313) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM vt0 CROSS JOIN t0 ON CAST((vt0.c0 IN (t0.c0)) AS TEXT) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt0 CROSS JOIN t0 ON CAST((vt0.c0 IN (t0.c0)) AS TEXT) WHERE (((((((((t0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(CAST(t0.c0 AS NUMERIC))))AND(highlight(vt0.c0, t0.c0, t0.c0, t0.c0)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM vt0 CROSS JOIN t0 ON CAST((vt0.c0 IN (t0.c0)) AS TEXT) WHERE ((NOT (((((((((t0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(CAST(t0.c0 AS NUMERIC))))AND(highlight(vt0.c0, t0.c0, t0.c0, t0.c0)))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM vt0 CROSS JOIN t0 ON CAST((vt0.c0 IN (t0.c0)) AS TEXT) WHERE (((((((((((t0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(CAST(t0.c0 AS NUMERIC))))AND(highlight(vt0.c0, t0.c0, t0.c0, t0.c0)))) ISNULL)) GROUP BY t0.c0;
SELECT ALL v0.c0 FROM v0, t0, rt1 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, t0, rt1 GROUP BY v0.c0 HAVING TOTAL(((MIN(TOTAL(AVG(rt1.c2)))) NOT BETWEEN (t0.c0) AND (rt1.c3))) UNION ALL SELECT v0.c0 FROM v0, t0, rt1 GROUP BY v0.c0 HAVING (NOT (TOTAL(((MIN(TOTAL(AVG(rt1.c2)))) NOT BETWEEN (t0.c0) AND (rt1.c3))))) UNION ALL SELECT v0.c0 FROM v0, t0, rt1 GROUP BY v0.c0 HAVING ((TOTAL(((MIN(TOTAL(AVG(rt1.c2)))) NOT BETWEEN (t0.c0) AND (rt1.c3)))) ISNULL);
SELECT * FROM v0, t0;
SELECT * FROM v0, t0 WHERE (CAST(((t0.c0)IS NOT(v0.c0)) AS INTEGER)) UNION ALL SELECT * FROM v0, t0 WHERE ((NOT (CAST(((t0.c0)IS NOT(v0.c0)) AS INTEGER)))) UNION ALL SELECT * FROM v0, t0 WHERE (((CAST(((t0.c0)IS NOT(v0.c0)) AS INTEGER)) ISNULL));
SELECT * FROM v0, t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((((NOT (t0.c0))))==((t0.c0 COLLATE NOCASE)))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((((NOT (t0.c0))))==((t0.c0 COLLATE NOCASE)))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((((NOT (t0.c0))))==((t0.c0 COLLATE NOCASE)))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (('{A\n' IN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END, (0.5296820371634814 IN (t0.c0, t0.c0))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (('{A\n' IN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END, (0.5296820371634814 IN (t0.c0, t0.c0))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((('{A\n' IN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END, (0.5296820371634814 IN (t0.c0, t0.c0))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL v0.c0, rt1.c1, rt1.c2, t0.c0, vt0.c0, rt1.c3, rt1.c0 FROM v0, vt0, t0, rt1 GROUP BY v0.c0, rt1.c1, rt1.c2, t0.c0, vt0.c0, rt1.c3, rt1.c0;
SELECT ALL v0.c0, rt1.c1, rt1.c2, t0.c0, vt0.c0, rt1.c3, rt1.c0 FROM v0, vt0, t0, rt1 GROUP BY v0.c0, rt1.c1, rt1.c2, t0.c0, vt0.c0, rt1.c3, rt1.c0 HAVING TOTAL(((((rt1.c2)OR(MAX('-1787427006'))))OR(vt0.c0))) UNION ALL SELECT ALL v0.c0, rt1.c1, rt1.c2, t0.c0, vt0.c0, rt1.c3, rt1.c0 FROM v0, vt0, t0, rt1 GROUP BY v0.c0, rt1.c1, rt1.c2, t0.c0, vt0.c0, rt1.c3, rt1.c0 HAVING (NOT (TOTAL(((((rt1.c2)OR(MAX('-1787427006'))))OR(vt0.c0))))) UNION ALL SELECT ALL v0.c0, rt1.c1, rt1.c2, t0.c0, vt0.c0, rt1.c3, rt1.c0 FROM v0, vt0, t0, rt1 GROUP BY v0.c0, rt1.c1, rt1.c2, t0.c0, vt0.c0, rt1.c3, rt1.c0 HAVING ((TOTAL(((((rt1.c2)OR(MAX('-1787427006'))))OR(vt0.c0)))) ISNULL);
SELECT * FROM v0, t0, rt1;
SELECT * FROM v0, t0, rt1 WHERE (CASE WHEN (+ (rt1.c3)) THEN 'pmw/rd(Fꭔ' WHEN NULLIF(DISTINCT v0.c0, NULL) THEN (((rt1.c0)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c1))) WHEN 'Y箇,5U' COLLATE RTRIM THEN ((v0.c0) NOT NULL) ELSE 643655614 END) UNION ALL SELECT * FROM v0, t0, rt1 WHERE ((NOT (CASE WHEN (+ (rt1.c3)) THEN 'pmw/rd(Fꭔ' WHEN NULLIF(DISTINCT v0.c0, NULL) THEN (((rt1.c0)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c1))) WHEN 'Y箇,5U' COLLATE RTRIM THEN ((v0.c0) NOT NULL) ELSE 643655614 END))) UNION ALL SELECT * FROM v0, t0, rt1 WHERE (((CASE WHEN (+ (rt1.c3)) THEN 'pmw/rd(Fꭔ' WHEN NULLIF(DISTINCT v0.c0, NULL) THEN (((rt1.c0)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c1))) WHEN 'Y箇,5U' COLLATE RTRIM THEN ((v0.c0) NOT NULL) ELSE 643655614 END) ISNULL));
SELECT * FROM v0, t0, rt1;
SELECT DISTINCT * FROM t0 FULL OUTER JOIN rt1 ON ((((((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c0)))AND(((rt1.c0) IS TRUE))))OR(CAST(rt1.c3 AS BLOB)));
SELECT DISTINCT * FROM t0 FULL OUTER JOIN rt1 ON ((((((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c0)))AND(((rt1.c0) IS TRUE))))OR(CAST(rt1.c3 AS BLOB))) WHERE (0.7471609706937168) UNION SELECT DISTINCT * FROM t0 FULL OUTER JOIN rt1 ON ((((((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c0)))AND(((rt1.c0) IS TRUE))))OR(CAST(rt1.c3 AS BLOB))) WHERE ((NOT (0.7471609706937168))) UNION SELECT DISTINCT * FROM t0 FULL OUTER JOIN rt1 ON ((((((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c0)))AND(((rt1.c0) IS TRUE))))OR(CAST(rt1.c3 AS BLOB))) WHERE (((0.7471609706937168) ISNULL));
SELECT DISTINCT * FROM t0 FULL OUTER JOIN rt1 ON ((((((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c0)))AND(((rt1.c0) IS TRUE))))OR(CAST(rt1.c3 AS BLOB)));
SELECT rt1.c1, rt1.c2, vt0.c0, rt1.c3, rt1.c0, v0.c0, t0.c0 FROM v0, rt1 CROSS JOIN vt0 ON (((((rt1.c2)) NOT BETWEEN ((v0.c0)) AND ((rt1.c2))))GLOB(((vt0.c0)|(0.16442954618307448)))) CROSS JOIN t0 ON CASE ((((vt0.c0)OR(t0.c0)))AND(rt1.c1))  WHEN ((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c0)) THEN '477567237' ELSE rt1.c0 END GROUP BY rt1.c1, rt1.c2, vt0.c0, rt1.c3, rt1.c0, v0.c0, t0.c0;
SELECT ALL rt1.c1, rt1.c2, vt0.c0, rt1.c3, rt1.c0, v0.c0, t0.c0 FROM v0, rt1 CROSS JOIN vt0 ON (((((rt1.c2)) NOT BETWEEN ((v0.c0)) AND ((rt1.c2))))GLOB(((vt0.c0)|(0.16442954618307448)))) CROSS JOIN t0 ON CASE ((((vt0.c0)OR(t0.c0)))AND(rt1.c1))  WHEN ((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c0)) THEN '477567237' ELSE rt1.c0 END WHERE (CAST(((('', rt1.c0, rt1.c1)) NOT BETWEEN ((rt1.c1, rt1.c3, rt1.c3)) AND ((rt1.c0, rt1.c1, rt1.c2))) AS REAL)) GROUP BY rt1.c1, rt1.c2, vt0.c0, rt1.c3, rt1.c0, v0.c0, t0.c0 UNION SELECT rt1.c1, rt1.c2, vt0.c0, rt1.c3, rt1.c0, v0.c0, t0.c0 FROM v0, rt1 CROSS JOIN vt0 ON (((((rt1.c2)) NOT BETWEEN ((v0.c0)) AND ((rt1.c2))))GLOB(((vt0.c0)|(0.16442954618307448)))) CROSS JOIN t0 ON CASE ((((vt0.c0)OR(t0.c0)))AND(rt1.c1))  WHEN ((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c0)) THEN '477567237' ELSE rt1.c0 END WHERE ((NOT (CAST(((('', rt1.c0, rt1.c1)) NOT BETWEEN ((rt1.c1, rt1.c3, rt1.c3)) AND ((rt1.c0, rt1.c1, rt1.c2))) AS REAL)))) GROUP BY rt1.c1, rt1.c2, vt0.c0, rt1.c3, rt1.c0, v0.c0, t0.c0 UNION SELECT rt1.c1, rt1.c2, vt0.c0, rt1.c3, rt1.c0, v0.c0, t0.c0 FROM v0, rt1 CROSS JOIN vt0 ON (((((rt1.c2)) NOT BETWEEN ((v0.c0)) AND ((rt1.c2))))GLOB(((vt0.c0)|(0.16442954618307448)))) CROSS JOIN t0 ON CASE ((((vt0.c0)OR(t0.c0)))AND(rt1.c1))  WHEN ((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c0)) THEN '477567237' ELSE rt1.c0 END WHERE (((CAST(((('', rt1.c0, rt1.c1)) NOT BETWEEN ((rt1.c1, rt1.c3, rt1.c3)) AND ((rt1.c0, rt1.c1, rt1.c2))) AS REAL)) ISNULL)) GROUP BY rt1.c1, rt1.c2, vt0.c0, rt1.c3, rt1.c0, v0.c0, t0.c0;
SELECT rt1.c1, rt1.c2, vt0.c0, rt1.c3, rt1.c0, v0.c0, t0.c0 FROM v0, rt1 CROSS JOIN vt0 ON (((((rt1.c2)) NOT BETWEEN ((v0.c0)) AND ((rt1.c2))))GLOB(((vt0.c0)|(0.16442954618307448)))) CROSS JOIN t0 ON CASE ((((vt0.c0)OR(t0.c0)))AND(rt1.c1))  WHEN ((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c0)) THEN '477567237' ELSE rt1.c0 END GROUP BY rt1.c1, rt1.c2, vt0.c0, rt1.c3, rt1.c0, v0.c0, t0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING (((COUNT(v0.c0), ((vt0.c0)AND(vt0.c0)), TOTAL(v0.c0)))!=((COUNT(*), COUNT(*), v0.c0))) UNION ALL SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING (NOT ((((COUNT(v0.c0), ((vt0.c0)AND(vt0.c0)), TOTAL(v0.c0)))!=((COUNT(*), COUNT(*), v0.c0))))) UNION ALL SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING (((((COUNT(v0.c0), ((vt0.c0)AND(vt0.c0)), TOTAL(v0.c0)))<>((COUNT(*), COUNT(*), v0.c0)))) ISNULL);
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING (((COUNT(v0.c0), ((vt0.c0)AND(vt0.c0)), TOTAL(v0.c0)))!=((COUNT(*), COUNT(*), v0.c0))) UNION ALL SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING (NOT ((((COUNT(v0.c0), ((vt0.c0)AND(vt0.c0)), TOTAL(v0.c0)))!=((COUNT(*), COUNT(*), v0.c0))))) UNION ALL SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING (((((COUNT(v0.c0), ((vt0.c0)AND(vt0.c0)), TOTAL(v0.c0)))<>((COUNT(*), COUNT(*), v0.c0)))) ISNULL);
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE (((((((0.26778596586432923)AND(0.0)))AND(v0.c0))) IS TRUE)) UNION ALL SELECT * FROM v0 WHERE ((NOT (((((((0.26778596586432923)AND(0.0)))AND(v0.c0))) IS TRUE)))) UNION ALL SELECT * FROM v0 WHERE (((((((((0.26778596586432923)AND(0.0)))AND(v0.c0))) IS TRUE)) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM t0 INNER JOIN rt1 ON rt1.c1 RIGHT OUTER JOIN vt0 ON ((((CASE rt1.c0  WHEN 0.07510121834950945 THEN rt1.c1 WHEN x'' THEN 0.23278652417750378 WHEN t0.c0 THEN vt0.c0 ELSE rt1.c1 END)AND(((rt1.c3)/(rt1.c1)))))OR(rt1.c0));
SELECT DISTINCT * FROM t0 INNER JOIN rt1 ON rt1.c1 RIGHT OUTER JOIN vt0 ON ((((CASE rt1.c0  WHEN 0.07510121834950945 THEN rt1.c1 WHEN x'' THEN 0.23278652417750378 WHEN t0.c0 THEN vt0.c0 ELSE rt1.c1 END)AND(((rt1.c3)/(rt1.c1)))))OR(rt1.c0)) WHERE (0.05277111241922672) UNION SELECT DISTINCT * FROM t0 INNER JOIN rt1 ON rt1.c1 RIGHT OUTER JOIN vt0 ON ((((CASE rt1.c0  WHEN 0.07510121834950945 THEN rt1.c1 WHEN x'' THEN 0.23278652417750378 WHEN t0.c0 THEN vt0.c0 ELSE rt1.c1 END)AND(((rt1.c3)/(rt1.c1)))))OR(rt1.c0)) WHERE ((NOT (0.05277111241922672))) UNION SELECT DISTINCT * FROM t0 INNER JOIN rt1 ON rt1.c1 RIGHT OUTER JOIN vt0 ON ((((CASE rt1.c0  WHEN 0.07510121834950945 THEN rt1.c1 WHEN x'' THEN 0.23278652417750378 WHEN t0.c0 THEN vt0.c0 ELSE rt1.c1 END)AND(((rt1.c3)/(rt1.c1)))))OR(rt1.c0)) WHERE (((0.05277111241922672) ISNULL));
SELECT DISTINCT * FROM t0 INNER JOIN rt1 ON rt1.c1 RIGHT OUTER JOIN vt0 ON ((((CASE rt1.c0  WHEN 0.07510121834950945 THEN rt1.c1 WHEN x'' THEN 0.23278652417750378 WHEN t0.c0 THEN vt0.c0 ELSE rt1.c1 END)AND(((rt1.c3)/(rt1.c1)))))OR(rt1.c0));
SELECT ALL rt1.c1, rt1.c3, rt1.c2 FROM rt1, t0, vt0 GROUP BY rt1.c1, rt1.c3, rt1.c2;
SELECT rt1.c1, rt1.c3, rt1.c2 FROM rt1, t0, vt0 WHERE ((((rt1.c1))>((rt1.c1))) COLLATE RTRIM) GROUP BY rt1.c1, rt1.c3, rt1.c2 UNION SELECT rt1.c1, rt1.c3, rt1.c2 FROM rt1, t0, vt0 WHERE ((NOT ((((rt1.c1))>((rt1.c1))) COLLATE RTRIM))) GROUP BY rt1.c1, rt1.c3, rt1.c2 UNION SELECT rt1.c1, rt1.c3, rt1.c2 FROM rt1, t0, vt0 WHERE ((((((rt1.c1))>((rt1.c1))) COLLATE RTRIM) ISNULL)) GROUP BY rt1.c1, rt1.c3, rt1.c2;
SELECT ALL rt1.c1, rt1.c3, rt1.c2 FROM rt1, t0, vt0 GROUP BY rt1.c1, rt1.c3, rt1.c2;
SELECT ALL rt1.c3, v0.c0, rt1.c2 FROM rt1, v0 GROUP BY rt1.c3, v0.c0, rt1.c2;
SELECT rt1.c3, v0.c0, rt1.c2 FROM rt1, v0 GROUP BY rt1.c3, v0.c0, rt1.c2 HAVING ((((CAST(v0.c0 AS BLOB))AND(0.31085224964971836)))AND(GROUP_CONCAT(rt1.c0))) UNION ALL SELECT ALL rt1.c3, v0.c0, rt1.c2 FROM rt1, v0 GROUP BY rt1.c3, v0.c0, rt1.c2 HAVING (NOT (((((CAST(v0.c0 AS BLOB))AND(0.31085224964971836)))AND(GROUP_CONCAT(rt1.c0))))) UNION ALL SELECT rt1.c3, v0.c0, rt1.c2 FROM rt1, v0 GROUP BY rt1.c3, v0.c0, rt1.c2 HAVING ((((((CAST(v0.c0 AS BLOB))AND(0.31085224964971836)))AND(GROUP_CONCAT(rt1.c0)))) ISNULL);
SELECT ALL rt1.c3, v0.c0, rt1.c2 FROM rt1, v0 GROUP BY rt1.c3, v0.c0, rt1.c2;
SELECT rt1.c3, v0.c0, rt1.c2 FROM rt1, v0 GROUP BY rt1.c3, v0.c0, rt1.c2 HAVING ((((CAST(v0.c0 AS BLOB))AND(0.31085224964971836)))AND(GROUP_CONCAT(rt1.c0))) UNION ALL SELECT ALL rt1.c3, v0.c0, rt1.c2 FROM rt1, v0 GROUP BY rt1.c3, v0.c0, rt1.c2 HAVING (NOT (((((CAST(v0.c0 AS BLOB))AND(0.31085224964971836)))AND(GROUP_CONCAT(rt1.c0))))) UNION ALL SELECT rt1.c3, v0.c0, rt1.c2 FROM rt1, v0 GROUP BY rt1.c3, v0.c0, rt1.c2 HAVING ((((((CAST(v0.c0 AS BLOB))AND(0.31085224964971836)))AND(GROUP_CONCAT(rt1.c0)))) ISNULL);
SELECT ALL rt1.c3, v0.c0, rt1.c2 FROM rt1, v0 GROUP BY rt1.c3, v0.c0, rt1.c2;
SELECT * FROM v0;
SELECT * FROM v0 WHERE (SQLITE_VERSION()) UNION ALL SELECT * FROM v0 WHERE ((NOT (SQLITE_VERSION()))) UNION ALL SELECT ALL * FROM v0 WHERE (((SQLITE_VERSION()) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (LIKELIHOOD(DISTINCT (((x'')) BETWEEN ((rt1.c1)) AND ((rt1.c2))), 0.2991377448821766)) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (LIKELIHOOD(DISTINCT (((x'')) BETWEEN ((rt1.c1)) AND ((rt1.c2))), 0.2991377448821766)))) UNION SELECT DISTINCT * FROM rt1 WHERE (((LIKELIHOOD(DISTINCT (((x'')) BETWEEN ((rt1.c1)) AND ((rt1.c2))), 0.2991377448821766)) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 WHERE ('\ﺉ' COLLATE BINARY COLLATE NOCASE) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM v0, vt0 WHERE ((NOT ('\ﺉ' COLLATE BINARY COLLATE NOCASE))) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM v0, vt0 WHERE ((('\ﺉ' COLLATE BINARY COLLATE NOCASE) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, rt1.c2, v0.c0, rt1.c0 FROM vt0, v0 CROSS JOIN rt1 ON ((rt1.c0 IN (v0.c0, rt1.c2)) IN ()) RIGHT OUTER JOIN t0 ON CAST((t0.c0 IN ()) AS NUMERIC) GROUP BY vt0.c0, rt1.c2, v0.c0, rt1.c0;
SELECT ALL vt0.c0, rt1.c2, v0.c0, rt1.c0 FROM vt0, v0 CROSS JOIN rt1 ON ((rt1.c0 IN (v0.c0, rt1.c2)) IN ()) RIGHT OUTER JOIN t0 ON CAST((t0.c0 IN ()) AS NUMERIC) GROUP BY vt0.c0, rt1.c2, v0.c0, rt1.c0 HAVING (COUNT(rt1.c2) IN (SUM(rt1.c3))) UNION ALL SELECT ALL vt0.c0, rt1.c2, v0.c0, rt1.c0 FROM vt0, v0 CROSS JOIN rt1 ON ((rt1.c0 IN (v0.c0, rt1.c2)) IN ()) RIGHT OUTER JOIN t0 ON CAST((t0.c0 IN ()) AS NUMERIC) GROUP BY vt0.c0, rt1.c2, v0.c0, rt1.c0 HAVING (NOT ((COUNT(rt1.c2) IN (SUM(rt1.c3))))) UNION ALL SELECT vt0.c0, rt1.c2, v0.c0, rt1.c0 FROM vt0, v0 CROSS JOIN rt1 ON ((rt1.c0 IN (v0.c0, rt1.c2)) IN ()) RIGHT OUTER JOIN t0 ON CAST((t0.c0 IN ()) AS NUMERIC) GROUP BY vt0.c0, rt1.c2, v0.c0, rt1.c0 HAVING (((COUNT(rt1.c2) IN (SUM(rt1.c3)))) ISNULL);
SELECT ALL vt0.c0, rt1.c2, v0.c0, rt1.c0 FROM vt0, v0 CROSS JOIN rt1 ON ((rt1.c0 IN (v0.c0, rt1.c2)) IN ()) RIGHT OUTER JOIN t0 ON CAST((t0.c0 IN ()) AS NUMERIC) GROUP BY vt0.c0, rt1.c2, v0.c0, rt1.c0;
SELECT ALL vt0.c0, rt1.c2, v0.c0, rt1.c0 FROM vt0, v0 CROSS JOIN rt1 ON ((rt1.c0 IN (v0.c0, rt1.c2)) IN ()) RIGHT OUTER JOIN t0 ON CAST((t0.c0 IN ()) AS NUMERIC) GROUP BY vt0.c0, rt1.c2, v0.c0, rt1.c0 HAVING (COUNT(rt1.c2) IN (SUM(rt1.c3))) UNION ALL SELECT ALL vt0.c0, rt1.c2, v0.c0, rt1.c0 FROM vt0, v0 CROSS JOIN rt1 ON ((rt1.c0 IN (v0.c0, rt1.c2)) IN ()) RIGHT OUTER JOIN t0 ON CAST((t0.c0 IN ()) AS NUMERIC) GROUP BY vt0.c0, rt1.c2, v0.c0, rt1.c0 HAVING (NOT ((COUNT(rt1.c2) IN (SUM(rt1.c3))))) UNION ALL SELECT vt0.c0, rt1.c2, v0.c0, rt1.c0 FROM vt0, v0 CROSS JOIN rt1 ON ((rt1.c0 IN (v0.c0, rt1.c2)) IN ()) RIGHT OUTER JOIN t0 ON CAST((t0.c0 IN ()) AS NUMERIC) GROUP BY vt0.c0, rt1.c2, v0.c0, rt1.c0 HAVING (((COUNT(rt1.c2) IN (SUM(rt1.c3)))) ISNULL);
SELECT ALL vt0.c0, rt1.c2, v0.c0, rt1.c0 FROM vt0, v0 CROSS JOIN rt1 ON ((rt1.c0 IN (v0.c0, rt1.c2)) IN ()) RIGHT OUTER JOIN t0 ON CAST((t0.c0 IN ()) AS NUMERIC) GROUP BY vt0.c0, rt1.c2, v0.c0, rt1.c0;
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE (((t0.c0)IS(t0.c0)) COLLATE NOCASE) UNION ALL SELECT * FROM t0 WHERE ((NOT (((t0.c0)IS(t0.c0)) COLLATE NOCASE))) UNION ALL SELECT * FROM t0 WHERE (((((t0.c0)IS(t0.c0)) COLLATE NOCASE) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT rt1.c1, rt1.c3 FROM rt1;
SELECT DISTINCT rt1.c1, rt1.c3 FROM rt1 WHERE (CASE rt1.c3 COLLATE RTRIM  WHEN json_array(rt1.c0, rt1.c2) THEN CASE WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c2 END WHEN ((((rt1.c2)OR(rt1.c3)))OR(rt1.c0)) THEN CAST(rt1.c2 AS NUMERIC) WHEN STRFTIME(rt1.c0, rt1.c2, rt1.c3) THEN ((rt1.c0)LIKE(rt1.c0)) ELSE (((rt1.c2, rt1.c0, 'eP')) BETWEEN ((rt1.c0, rt1.c0, rt1.c3)) AND ((rt1.c0, rt1.c0, rt1.c0))) END) UNION SELECT DISTINCT rt1.c1, rt1.c3 FROM rt1 WHERE ((NOT (CASE rt1.c3 COLLATE RTRIM  WHEN json_array(rt1.c0, rt1.c2) THEN CASE WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c2 END WHEN ((((rt1.c2)OR(rt1.c3)))OR(rt1.c0)) THEN CAST(rt1.c2 AS NUMERIC) WHEN STRFTIME(rt1.c0, rt1.c2, rt1.c3) THEN ((rt1.c0)LIKE(rt1.c0)) ELSE (((rt1.c2, rt1.c0, 'eP')) BETWEEN ((rt1.c0, rt1.c0, rt1.c3)) AND ((rt1.c0, rt1.c0, rt1.c0))) END))) UNION SELECT DISTINCT rt1.c1, rt1.c3 FROM rt1 WHERE (((CASE rt1.c3 COLLATE RTRIM  WHEN json_array(rt1.c0, rt1.c2) THEN CASE WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c2 END WHEN ((((rt1.c2)OR(rt1.c3)))OR(rt1.c0)) THEN CAST(rt1.c2 AS NUMERIC) WHEN STRFTIME(rt1.c0, rt1.c2, rt1.c3) THEN ((rt1.c0)LIKE(rt1.c0)) ELSE (((rt1.c2, rt1.c0, 'eP')) BETWEEN ((rt1.c0, rt1.c0, rt1.c3)) AND ((rt1.c0, rt1.c0, rt1.c0))) END) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c3 FROM rt1;
SELECT ALL rt1.c0, vt0.c0, rt1.c1, rt1.c3, rt1.c2 FROM vt0, rt1 GROUP BY rt1.c0, vt0.c0, rt1.c1, rt1.c3, rt1.c2;
SELECT ALL rt1.c0, vt0.c0, rt1.c1, rt1.c3, rt1.c2 FROM vt0, rt1 WHERE (((((((((rt1.c0)AND(vt0.c0)))OR(vt0.c0)))AND(rt1.c3)))AND(rt1.c1)) COLLATE BINARY) GROUP BY rt1.c0, vt0.c0, rt1.c1, rt1.c3, rt1.c2 UNION SELECT rt1.c0, vt0.c0, rt1.c1, rt1.c3, rt1.c2 FROM vt0, rt1 WHERE ((NOT (((((((((rt1.c0)AND(vt0.c0)))OR(vt0.c0)))AND(rt1.c3)))AND(rt1.c1)) COLLATE BINARY))) GROUP BY rt1.c0, vt0.c0, rt1.c1, rt1.c3, rt1.c2 UNION SELECT rt1.c0, vt0.c0, rt1.c1, rt1.c3, rt1.c2 FROM vt0, rt1 WHERE (((((((((((rt1.c0)AND(vt0.c0)))OR(vt0.c0)))AND(rt1.c3)))AND(rt1.c1)) COLLATE BINARY) ISNULL)) GROUP BY rt1.c0, vt0.c0, rt1.c1, rt1.c3, rt1.c2;
SELECT ALL rt1.c0, vt0.c0, rt1.c1, rt1.c3, rt1.c2 FROM vt0, rt1 GROUP BY rt1.c0, vt0.c0, rt1.c1, rt1.c3, rt1.c2;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING CAST(MIN(t0.c0) AS INTEGER) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (CAST(MIN(t0.c0) AS INTEGER))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((CAST(MIN(t0.c0) AS INTEGER)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING CAST(MIN(t0.c0) AS INTEGER) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (CAST(MIN(t0.c0) AS INTEGER))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((CAST(MIN(t0.c0) AS INTEGER)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL * FROM rt1, t0, vt0 INNER JOIN v0 ON ((((NULL) NOT NULL)) NOT BETWEEN (((rt1.c0)OR(rt1.c0))) AND (((rt1.c3)%(''))));
SELECT ALL * FROM rt1, t0, vt0 INNER JOIN v0 ON ((((NULL) NOT NULL)) NOT BETWEEN (((rt1.c0)OR(rt1.c0))) AND (((rt1.c3)%('')))) WHERE ((((((v0.c0)) NOT BETWEEN (('1711999380')) AND ((vt0.c0))))+(((rt1.c3)>(rt1.c1))))) UNION ALL SELECT * FROM rt1, t0, vt0 INNER JOIN v0 ON ((((NULL) NOT NULL)) NOT BETWEEN (((rt1.c0)OR(rt1.c0))) AND (((rt1.c3)%('')))) WHERE ((NOT ((((((v0.c0)) NOT BETWEEN (('1711999380')) AND ((vt0.c0))))+(((rt1.c3)>(rt1.c1))))))) UNION ALL SELECT * FROM rt1, t0, vt0 INNER JOIN v0 ON ((((NULL) NOT NULL)) NOT BETWEEN (((rt1.c0)OR(rt1.c0))) AND (((rt1.c3)%('')))) WHERE ((((((((v0.c0)) NOT BETWEEN (('1711999380')) AND ((vt0.c0))))+(((rt1.c3)>(rt1.c1))))) ISNULL));
SELECT ALL * FROM rt1, t0, vt0 INNER JOIN v0 ON ((((NULL) NOT NULL)) NOT BETWEEN (((rt1.c0)OR(rt1.c0))) AND (((rt1.c3)%(''))));
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (CASE ((t0.c0) BETWEEN (t0.c0) AND (t0.c0))  WHEN t0.c0 COLLATE RTRIM THEN CAST(t0.c0 AS NUMERIC) ELSE t0.c0 COLLATE NOCASE END) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (CASE ((t0.c0) BETWEEN (t0.c0) AND (t0.c0))  WHEN t0.c0 COLLATE RTRIM THEN CAST(t0.c0 AS NUMERIC) ELSE t0.c0 COLLATE NOCASE END))) UNION SELECT DISTINCT * FROM t0 NOT INDEXED WHERE (((CASE ((t0.c0) BETWEEN (t0.c0) AND (t0.c0))  WHEN t0.c0 COLLATE RTRIM THEN CAST(t0.c0 AS NUMERIC) ELSE t0.c0 COLLATE NOCASE END) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL v0.c0, rt1.c3, rt1.c0, t0.c0, vt0.c0 FROM rt1 INNER JOIN v0 ON ((((rt1.c2, rt1.c1, vt0.c0)) NOT BETWEEN (('?3sfjLr', vt0.c0, t0.c0)) AND ((vt0.c0, v0.c0, rt1.c1))) IN (t0.c0)) RIGHT OUTER JOIN t0 ON json_extract((~ (rt1.c2)), (((v0.c0))>=((t0.c0))), (rt1.c0 IN ()), (NOT (rt1.c3))) LEFT OUTER JOIN vt0 ON (((rt1.c3)LIKE(rt1.c3)) IN ()) GROUP BY v0.c0, rt1.c3, rt1.c0, t0.c0, vt0.c0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING ((MIN(vt0.c0)) NOTNULL) UNION ALL SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING (NOT (((MIN(vt0.c0)) NOTNULL))) UNION ALL SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING ((((MIN(vt0.c0)) NOTNULL)) ISNULL);
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING ((MIN(vt0.c0)) NOTNULL) UNION ALL SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING (NOT (((MIN(vt0.c0)) NOTNULL))) UNION ALL SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING ((((MIN(vt0.c0)) NOTNULL)) ISNULL);
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT ALL t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE (DATETIME((+ (t0.c0)), t0.c0 COLLATE NOCASE, CAST(0.6766820035350845 AS INTEGER))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT (DATETIME((+ (t0.c0)), t0.c0 COLLATE NOCASE, CAST(0.6766820035350845 AS INTEGER))))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE (((DATETIME((+ (t0.c0)), t0.c0 COLLATE NOCASE, CAST(0.6766820035350845 AS INTEGER))) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT rt1.c1 FROM t0, v0, rt1;
SELECT DISTINCT rt1.c1 FROM t0, v0, rt1 WHERE ((- ((NOT (rt1.c3))))) UNION SELECT DISTINCT rt1.c1 FROM t0, v0 NOT INDEXED, rt1 NOT INDEXED WHERE ((NOT ((- ((NOT (rt1.c3))))))) UNION SELECT DISTINCT rt1.c1 FROM t0, v0, rt1 WHERE ((((- ((NOT (rt1.c3))))) ISNULL));
SELECT DISTINCT rt1.c1 FROM t0, v0, rt1;
SELECT ALL rt1.c3 FROM rt1, vt0, t0 GROUP BY rt1.c3;
SELECT ALL rt1.c3 FROM rt1, vt0, t0 WHERE (CASE WHEN ((rt1.c3) NOTNULL) THEN UNLIKELY(DISTINCT rt1.c3) WHEN ((rt1.c1) NOT NULL) THEN COALESCE(vt0.c0, x'') WHEN ((vt0.c0)LIKE(vt0.c0)) THEN rt1.c0 WHEN (rt1.c2 IN (rt1.c3)) THEN rt1.c0 COLLATE RTRIM WHEN ((0.18104752443746175)<<(t0.c0)) THEN t0.c0 COLLATE RTRIM ELSE ((((((((rt1.c1)OR(t0.c0)))AND(vt0.c0)))OR(rt1.c1)))OR(rt1.c2)) END) GROUP BY rt1.c3 UNION SELECT ALL rt1.c3 FROM rt1, vt0, t0 WHERE ((NOT (CASE WHEN ((rt1.c3) NOTNULL) THEN UNLIKELY(DISTINCT rt1.c3) WHEN ((rt1.c1) NOT NULL) THEN COALESCE(vt0.c0, x'') WHEN ((vt0.c0)LIKE(vt0.c0)) THEN rt1.c0 WHEN (rt1.c2 IN (rt1.c3)) THEN rt1.c0 COLLATE RTRIM WHEN ((0.18104752443746175)<<(t0.c0)) THEN t0.c0 COLLATE RTRIM ELSE ((((((((rt1.c1)OR(t0.c0)))AND(vt0.c0)))OR(rt1.c1)))OR(rt1.c2)) END))) GROUP BY rt1.c3 UNION SELECT ALL rt1.c3 FROM rt1, vt0, t0 WHERE (((CASE WHEN ((rt1.c3) NOTNULL) THEN UNLIKELY(DISTINCT rt1.c3) WHEN ((rt1.c1) NOT NULL) THEN COALESCE(vt0.c0, x'') WHEN ((vt0.c0)LIKE(vt0.c0)) THEN rt1.c0 WHEN (rt1.c2 IN (rt1.c3)) THEN rt1.c0 COLLATE RTRIM WHEN ((0.18104752443746175)<<(t0.c0)) THEN t0.c0 COLLATE RTRIM ELSE ((((((((rt1.c1)OR(t0.c0)))AND(vt0.c0)))OR(rt1.c1)))OR(rt1.c2)) END) ISNULL)) GROUP BY rt1.c3;
SELECT ALL rt1.c3 FROM rt1, vt0, t0 GROUP BY rt1.c3;
SELECT ALL rt1.c1, rt1.c2, v0.c0 FROM vt0, rt1 LEFT OUTER JOIN v0 ON CASE ((vt0.c0)/(v0.c0))  WHEN ((rt1.c0) NOT BETWEEN (v0.c0) AND (0.8985225349976387)) THEN rt1.c0 COLLATE RTRIM END GROUP BY rt1.c1, rt1.c2, v0.c0;
SELECT ALL rt1.c1, rt1.c2, v0.c0 FROM vt0, rt1 LEFT OUTER JOIN v0 ON CASE ((vt0.c0)/(v0.c0))  WHEN ((rt1.c0) NOT BETWEEN (v0.c0) AND (0.8985225349976387)) THEN rt1.c0 COLLATE RTRIM END GROUP BY rt1.c1, rt1.c2, v0.c0 HAVING COUNT(COUNT(vt0.c0)) UNION ALL SELECT ALL rt1.c1, rt1.c2, v0.c0 FROM vt0, rt1 LEFT OUTER JOIN v0 ON CASE ((vt0.c0)/(v0.c0))  WHEN ((rt1.c0) NOT BETWEEN (v0.c0) AND (0.8985225349976387)) THEN rt1.c0 COLLATE RTRIM END GROUP BY rt1.c1, rt1.c2, v0.c0 HAVING (NOT (COUNT(COUNT(vt0.c0)))) UNION ALL SELECT rt1.c1, rt1.c2, v0.c0 FROM vt0, rt1 LEFT OUTER JOIN v0 ON CASE ((vt0.c0)/(v0.c0))  WHEN ((rt1.c0) NOT BETWEEN (v0.c0) AND (0.8985225349976387)) THEN rt1.c0 COLLATE RTRIM END GROUP BY rt1.c1, rt1.c2, v0.c0 HAVING ((COUNT(COUNT(vt0.c0))) ISNULL);
SELECT t0.c0, rt1.c2, rt1.c1, v0.c0, rt1.c3, vt0.c0 FROM vt0, v0, rt1, t0;
SELECT t0.c0, rt1.c2, rt1.c1, v0.c0, rt1.c3, vt0.c0 FROM vt0, v0, rt1, t0 WHERE (((CASE WHEN rt1.c2 THEN rt1.c0 END) BETWEEN ((NOT (v0.c0))) AND (((vt0.c0)!=(t0.c0))))) UNION ALL SELECT ALL t0.c0, rt1.c2, rt1.c1, v0.c0, rt1.c3, vt0.c0 FROM vt0, v0, rt1, t0 WHERE ((NOT (((CASE WHEN rt1.c2 THEN rt1.c0 END) BETWEEN ((NOT (v0.c0))) AND (((vt0.c0)<>(t0.c0))))))) UNION ALL SELECT t0.c0, rt1.c2, rt1.c1, v0.c0, rt1.c3, vt0.c0 FROM vt0, v0, rt1, t0 WHERE (((((CASE WHEN rt1.c2 THEN rt1.c0 END) BETWEEN ((NOT (v0.c0))) AND (((vt0.c0)<>(t0.c0))))) ISNULL));
SELECT t0.c0, rt1.c2, rt1.c1, v0.c0, rt1.c3, vt0.c0 FROM vt0, v0, rt1, t0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((vt0.c0) NOT NULL) IN (CAST(vt0.c0 AS BLOB)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0) NOT NULL) IN (CAST(vt0.c0 AS BLOB)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((vt0.c0) NOT NULL) IN (CAST(vt0.c0 AS BLOB)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CASE '-731901256'  WHEN (vt0.c0 IN ()) THEN 0.9308527171596819 ELSE vt0.c0 END) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CASE '-731901256'  WHEN (vt0.c0 IN ()) THEN 0.9308527171596819 ELSE vt0.c0 END))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((CASE '-731901256'  WHEN (vt0.c0 IN ()) THEN 0.9308527171596819 ELSE vt0.c0 END) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT v0.c0, rt1.c1, vt0.c0, rt1.c3, rt1.c0, rt1.c2 FROM v0, rt1 RIGHT OUTER JOIN vt0 ON CAST(((rt1.c1)!=(rt1.c1)) AS REAL) GROUP BY v0.c0, rt1.c1, vt0.c0, rt1.c3, rt1.c0, rt1.c2;
SELECT ALL v0.c0, rt1.c1, vt0.c0, rt1.c3, rt1.c0, rt1.c2 FROM v0, rt1 RIGHT OUTER JOIN vt0 ON CAST(((rt1.c1)<>(rt1.c1)) AS REAL) GROUP BY v0.c0, rt1.c1, vt0.c0, rt1.c3, rt1.c0, rt1.c2 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0, rt1.c1, vt0.c0, rt1.c3, rt1.c0, rt1.c2 FROM v0, rt1 RIGHT OUTER JOIN vt0 ON CAST(((rt1.c1)!=(rt1.c1)) AS REAL) GROUP BY v0.c0, rt1.c1, vt0.c0, rt1.c3, rt1.c0, rt1.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0, rt1.c1, vt0.c0, rt1.c3, rt1.c0, rt1.c2 FROM v0, rt1 RIGHT OUTER JOIN vt0 ON CAST(((rt1.c1)<>(rt1.c1)) AS REAL) GROUP BY v0.c0, rt1.c1, vt0.c0, rt1.c3, rt1.c0, rt1.c2 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0, rt1.c1, vt0.c0, rt1.c3, rt1.c0, rt1.c2 FROM v0, rt1 RIGHT OUTER JOIN vt0 ON CAST(((rt1.c1)!=(rt1.c1)) AS REAL) GROUP BY v0.c0, rt1.c1, vt0.c0, rt1.c3, rt1.c0, rt1.c2;
SELECT ALL v0.c0, rt1.c1, vt0.c0, rt1.c3, rt1.c0, rt1.c2 FROM v0, rt1 RIGHT OUTER JOIN vt0 ON CAST(((rt1.c1)<>(rt1.c1)) AS REAL) GROUP BY v0.c0, rt1.c1, vt0.c0, rt1.c3, rt1.c0, rt1.c2 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0, rt1.c1, vt0.c0, rt1.c3, rt1.c0, rt1.c2 FROM v0, rt1 RIGHT OUTER JOIN vt0 ON CAST(((rt1.c1)!=(rt1.c1)) AS REAL) GROUP BY v0.c0, rt1.c1, vt0.c0, rt1.c3, rt1.c0, rt1.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0, rt1.c1, vt0.c0, rt1.c3, rt1.c0, rt1.c2 FROM v0, rt1 RIGHT OUTER JOIN vt0 ON CAST(((rt1.c1)<>(rt1.c1)) AS REAL) GROUP BY v0.c0, rt1.c1, vt0.c0, rt1.c3, rt1.c0, rt1.c2 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0, rt1.c1, vt0.c0, rt1.c3, rt1.c0, rt1.c2 FROM v0, rt1 RIGHT OUTER JOIN vt0 ON CAST(((rt1.c1)!=(rt1.c1)) AS REAL) GROUP BY v0.c0, rt1.c1, vt0.c0, rt1.c3, rt1.c0, rt1.c2;
SELECT ALL v0.c0 FROM t0, v0;
SELECT v0.c0 FROM t0, v0 WHERE ((((v0.c0) ISNULL) IN ())) UNION ALL SELECT ALL v0.c0 FROM t0, v0 WHERE ((NOT ((((v0.c0) ISNULL) IN ())))) UNION ALL SELECT ALL v0.c0 FROM t0, v0 WHERE ((((((v0.c0) ISNULL) IN ())) ISNULL));
SELECT ALL v0.c0 FROM t0, v0;
SELECT DISTINCT t0.c0, rt1.c0, rt1.c2 FROM t0, v0, rt1 INNER JOIN vt0 ON 'u	UF';
SELECT DISTINCT t0.c0, rt1.c0, rt1.c2 FROM t0, v0, rt1 INNER JOIN vt0 ON 'u	UF' WHERE (CASE WHEN t0.c0 THEN rt1.c3 END COLLATE NOCASE) UNION SELECT DISTINCT t0.c0, rt1.c0, rt1.c2 FROM t0, v0, rt1 INNER JOIN vt0 ON 'u	UF' WHERE ((NOT (CASE WHEN t0.c0 THEN rt1.c3 END COLLATE NOCASE))) UNION SELECT DISTINCT t0.c0, rt1.c0, rt1.c2 FROM t0, v0, rt1 INNER JOIN vt0 ON 'u	UF' WHERE (((CASE WHEN t0.c0 THEN rt1.c3 END COLLATE NOCASE) ISNULL));
SELECT DISTINCT t0.c0, rt1.c0, rt1.c2 FROM t0, v0, rt1 INNER JOIN vt0 ON 'u	UF';
SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt1 WHERE ((NULL IN ())) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM rt1 WHERE ((NOT ((NULL IN ())))) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM rt1 WHERE ((((NULL IN ())) ISNULL)) GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0;
SELECT rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0 HAVING SUM(SUM(rt1.c3)) UNION ALL SELECT rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0 HAVING (NOT (SUM(SUM(rt1.c3)))) UNION ALL SELECT rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0 HAVING ((SUM(SUM(rt1.c3))) ISNULL);
SELECT v0.c0, vt0.c0, t0.c0, rt1.c2, rt1.c3 FROM rt1 RIGHT OUTER JOIN t0 ON LTRIM(CAST(vt0.c0 AS BLOB), CASE rt1.c2  WHEN vt0.c0 THEN rt1.c3 END) FULL OUTER JOIN v0 ON (NOT (1154677488)) FULL OUTER JOIN vt0 ON TRIM(LIKELIHOOD(t0.c0, 0.8495608359861268));
SELECT DISTINCT * FROM t0, vt0, rt1 NOT INDEXED, v0;
SELECT DISTINCT * FROM t0, vt0, rt1, v0 WHERE (((((rt1.c3)AND(rt1.c2)))OR(v0.c0)) COLLATE BINARY) UNION SELECT DISTINCT * FROM t0, vt0, rt1, v0 WHERE ((NOT (((((rt1.c3)AND(rt1.c2)))OR(v0.c0)) COLLATE BINARY))) UNION SELECT DISTINCT * FROM t0, vt0, rt1, v0 WHERE (((((((rt1.c3)AND(rt1.c2)))OR(v0.c0)) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM t0, vt0, rt1 NOT INDEXED, v0;
SELECT ALL t0.c0, vt0.c0, rt1.c2, rt1.c1 FROM rt1, vt0 RIGHT OUTER JOIN v0 ON (((STRFTIME(rt1.c3, vt0.c0, vt0.c0, -755484790, vt0.c0), '-1915932897', ((t0.c0) IS FALSE)))>=((((v0.c0) NOT BETWEEN (rt1.c1) AND (vt0.c0)), ((rt1.c2)>(rt1.c2)), rt1.c0))) INNER JOIN t0 ON (((((((((rt1.c2 IN (0.9642305913949747)))OR(PRINTF(vt0.c0))))AND(vt0.c0)))OR(CAST(rt1.c0 AS REAL))))AND(((rt1.c3)IS(rt1.c2)))) GROUP BY t0.c0, vt0.c0, rt1.c2, rt1.c1;
SELECT ALL t0.c0, rt1.c0, rt1.c3 FROM t0, vt0, rt1 NATURAL JOIN v0 GROUP BY t0.c0, rt1.c0, rt1.c3;
SELECT ALL t0.c0, rt1.c0, rt1.c3 FROM t0, vt0, rt1 NATURAL JOIN v0 GROUP BY t0.c0, rt1.c0, rt1.c3 HAVING 0xffffffffa9ffeb43 UNION ALL SELECT t0.c0, rt1.c0, rt1.c3 FROM t0, vt0, rt1 NATURAL JOIN v0 GROUP BY t0.c0, rt1.c0, rt1.c3 HAVING (NOT (0xffffffffa9ffeb43)) UNION ALL SELECT ALL t0.c0, rt1.c0, rt1.c3 FROM t0, vt0, rt1 NATURAL JOIN v0 GROUP BY t0.c0, rt1.c0, rt1.c3 HAVING ((0Xffffffffa9ffeb43) ISNULL);
SELECT ALL t0.c0, rt1.c0, rt1.c3 FROM t0, vt0, rt1 NATURAL JOIN v0 GROUP BY t0.c0, rt1.c0, rt1.c3;
SELECT ALL t0.c0, rt1.c0, rt1.c3 FROM t0, vt0, rt1 NATURAL JOIN v0 GROUP BY t0.c0, rt1.c0, rt1.c3 HAVING 0xffffffffa9ffeb43 UNION ALL SELECT t0.c0, rt1.c0, rt1.c3 FROM t0, vt0, rt1 NATURAL JOIN v0 GROUP BY t0.c0, rt1.c0, rt1.c3 HAVING (NOT (0xffffffffa9ffeb43)) UNION ALL SELECT ALL t0.c0, rt1.c0, rt1.c3 FROM t0, vt0, rt1 NATURAL JOIN v0 GROUP BY t0.c0, rt1.c0, rt1.c3 HAVING ((0Xffffffffa9ffeb43) ISNULL);
SELECT ALL t0.c0, rt1.c0, rt1.c3 FROM t0, vt0, rt1 NATURAL JOIN v0 GROUP BY t0.c0, rt1.c0, rt1.c3;
SELECT SUM((NOT (((rt1.c0)+(rt1.c3))))) FROM rt1, t0 ORDER BY ((rt1.c2 IN (rt1.c2)) IN (((((rt1.c3)OR(rt1.c1)))AND(rt1.c3)))) ASC  NULLS FIRST;
SELECT v0.c0, rt1.c3, rt1.c0 FROM t0, v0, rt1;
SELECT v0.c0, rt1.c3, rt1.c0 FROM t0, v0, rt1 WHERE ((- ((rt1.c0 IN ())))) UNION ALL SELECT ALL v0.c0, rt1.c3, rt1.c0 FROM t0, v0, rt1 WHERE ((NOT ((- ((rt1.c0 IN ())))))) UNION ALL SELECT ALL v0.c0, rt1.c3, rt1.c0 FROM t0, v0 NOT INDEXED, rt1 WHERE ((((- ((rt1.c0 IN ())))) ISNULL));
SELECT v0.c0, rt1.c3, rt1.c0 FROM t0, v0, rt1;
SELECT DISTINCT rt1.c2 FROM vt0, v0, rt1, t0;
SELECT DISTINCT rt1.c2 FROM vt0, v0, rt1, t0 WHERE ((t0.c0 COLLATE NOCASE IN (((rt1.c1) IS FALSE), (((x'6241'))!=((vt0.c0)))))) UNION SELECT DISTINCT rt1.c2 FROM vt0, v0, rt1, t0 WHERE ((NOT ((t0.c0 COLLATE NOCASE IN (((rt1.c1) IS FALSE), (((x'6241'))<>((vt0.c0)))))))) UNION SELECT DISTINCT rt1.c2 FROM vt0, v0, rt1, t0 WHERE ((((t0.c0 COLLATE NOCASE IN (((rt1.c1) IS FALSE), (((x'6241'))!=((vt0.c0)))))) ISNULL));
SELECT DISTINCT rt1.c2 FROM vt0, v0, rt1, t0;
SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM t0, vt0 WHERE ((((vt0.c0 IN ())) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0)))) AND ((t0.c0 IN ())))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM t0, vt0 WHERE ((NOT ((((vt0.c0 IN ())) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0)))) AND ((t0.c0 IN ())))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM t0, vt0 WHERE ((((((vt0.c0 IN ())) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0)))) AND ((t0.c0 IN ())))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0;
SELECT ALL t0.c0, rt1.c2, vt0.c0, rt1.c0, rt1.c3 FROM t0, v0, vt0, rt1 GROUP BY t0.c0, rt1.c2, vt0.c0, rt1.c0, rt1.c3;
SELECT t0.c0, rt1.c2, vt0.c0, rt1.c0, rt1.c3 FROM t0, v0, vt0, rt1 GROUP BY t0.c0, rt1.c2, vt0.c0, rt1.c0, rt1.c3 HAVING MAX(MIN(rt1.c3)) UNION ALL SELECT ALL t0.c0, rt1.c2, vt0.c0, rt1.c0, rt1.c3 FROM t0, v0, vt0, rt1 GROUP BY t0.c0, rt1.c2, vt0.c0, rt1.c0, rt1.c3 HAVING (NOT (MAX(MIN(rt1.c3)))) UNION ALL SELECT ALL t0.c0, rt1.c2, vt0.c0, rt1.c0, rt1.c3 FROM t0, v0, vt0, rt1 GROUP BY t0.c0, rt1.c2, vt0.c0, rt1.c0, rt1.c3 HAVING ((MAX(MIN(rt1.c3))) ISNULL);
SELECT ALL * FROM t0, vt0, rt1 NATURAL JOIN v0;
SELECT ALL * FROM t0, vt0, rt1 NATURAL JOIN v0 WHERE (CAST(t0.c0 COLLATE RTRIM AS INTEGER)) UNION ALL SELECT ALL * FROM t0, vt0, rt1 NATURAL JOIN v0 WHERE ((NOT (CAST(t0.c0 COLLATE RTRIM AS INTEGER)))) UNION ALL SELECT ALL * FROM t0, vt0, rt1 NATURAL JOIN v0 WHERE (((CAST(t0.c0 COLLATE RTRIM AS INTEGER)) ISNULL));
SELECT ALL * FROM t0, vt0, rt1 NATURAL JOIN v0;
SELECT DISTINCT rt1.c1, rt1.c3 FROM vt0, v0, rt1;
SELECT DISTINCT rt1.c1, rt1.c3 FROM vt0, v0, rt1 WHERE (((((rt1.c2)AND(vt0.c0)))AND(rt1.c2)) COLLATE NOCASE) UNION SELECT DISTINCT rt1.c1, rt1.c3 FROM vt0, v0, rt1 WHERE ((NOT (((((rt1.c2)AND(vt0.c0)))AND(rt1.c2)) COLLATE NOCASE))) UNION SELECT DISTINCT rt1.c1, rt1.c3 FROM vt0, v0, rt1 WHERE (((((((rt1.c2)AND(vt0.c0)))AND(rt1.c2)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c3 FROM vt0, v0, rt1;
SELECT t0.c0, vt0.c0, v0.c0 FROM v0, vt0, t0 GROUP BY t0.c0, vt0.c0, v0.c0;
SELECT ALL t0.c0, vt0.c0, v0.c0 FROM v0, vt0, t0 WHERE (((((((((((((v0.c0)OR('44?')))AND(t0.c0)))OR(((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c0) NOTNULL))))AND((- (vt0.c0)))))OR(((((((((vt0.c0)AND(vt0.c0)))AND(t0.c0)))OR(vt0.c0)))AND(vt0.c0))))) GROUP BY t0.c0, vt0.c0, v0.c0 UNION SELECT t0.c0, vt0.c0, v0.c0 FROM v0, vt0, t0 WHERE ((NOT (((((((((((((v0.c0)OR('44?')))AND(t0.c0)))OR(((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c0) NOTNULL))))AND((- (vt0.c0)))))OR(((((((((vt0.c0)AND(vt0.c0)))AND(t0.c0)))OR(vt0.c0)))AND(vt0.c0))))))) GROUP BY t0.c0, vt0.c0, v0.c0 UNION SELECT ALL t0.c0, vt0.c0, v0.c0 FROM v0, vt0, t0 WHERE (((((((((((((((v0.c0)OR('44?')))AND(t0.c0)))OR(((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c0) NOTNULL))))AND((- (vt0.c0)))))OR(((((((((vt0.c0)AND(vt0.c0)))AND(t0.c0)))OR(vt0.c0)))AND(vt0.c0))))) ISNULL)) GROUP BY t0.c0, vt0.c0, v0.c0;
SELECT t0.c0, vt0.c0, v0.c0 FROM v0, vt0, t0 GROUP BY t0.c0, vt0.c0, v0.c0;
SELECT v0.c0, rt1.c2, rt1.c1, rt1.c0, rt1.c3 FROM rt1, v0, t0 GROUP BY v0.c0, rt1.c2, rt1.c1, rt1.c0, rt1.c3;
SELECT v0.c0, rt1.c2, rt1.c1, rt1.c0, rt1.c3 FROM rt1, v0, t0 GROUP BY v0.c0, rt1.c2, rt1.c1, rt1.c0, rt1.c3 HAVING COUNT(json_remove(MAX(v0.c0), GROUP_CONCAT(t0.c0))) UNION ALL SELECT ALL v0.c0, rt1.c2, rt1.c1, rt1.c0, rt1.c3 FROM rt1, v0, t0 GROUP BY v0.c0, rt1.c2, rt1.c1, rt1.c0, rt1.c3 HAVING (NOT (COUNT(json_remove(MAX(v0.c0), GROUP_CONCAT(t0.c0))))) UNION ALL SELECT v0.c0, rt1.c2, rt1.c1, rt1.c0, rt1.c3 FROM rt1, v0, t0 GROUP BY v0.c0, rt1.c2, rt1.c1, rt1.c0, rt1.c3 HAVING ((COUNT(json_remove(MAX(v0.c0), GROUP_CONCAT(t0.c0)))) ISNULL);
SELECT ALL rt1.c2, rt1.c1, rt1.c0, vt0.c0, rt1.c3, v0.c0, t0.c0 FROM v0, t0, vt0, rt1;
SELECT rt1.c2, rt1.c1, rt1.c0, vt0.c0, rt1.c3, v0.c0, t0.c0 FROM v0, t0, vt0, rt1 WHERE (CASE ((vt0.c0) ISNULL)  WHEN ((((((((354051069)AND(0xffffffffd0c00c5c)))OR(t0.c0)))AND(rt1.c2)))OR(rt1.c1)) THEN (rt1.c0 IN (rt1.c1, rt1.c1)) END) UNION ALL SELECT rt1.c2, rt1.c1, rt1.c0, vt0.c0, rt1.c3, v0.c0, t0.c0 FROM v0, t0, vt0, rt1 WHERE ((NOT (CASE ((vt0.c0) ISNULL)  WHEN ((((((((354051069)AND(0xffffffffd0c00c5c)))OR(t0.c0)))AND(rt1.c2)))OR(rt1.c1)) THEN (rt1.c0 IN (rt1.c1, rt1.c1)) END))) UNION ALL SELECT ALL rt1.c2, rt1.c1, rt1.c0, vt0.c0, rt1.c3, v0.c0, t0.c0 FROM v0, t0, vt0, rt1 WHERE (((CASE ((vt0.c0) ISNULL)  WHEN ((((((((354051069)AND(0xffffffffd0c00c5c)))OR(t0.c0)))AND(rt1.c2)))OR(rt1.c1)) THEN (rt1.c0 IN (rt1.c1, rt1.c1)) END) ISNULL));
SELECT ALL rt1.c2, rt1.c1, rt1.c0, vt0.c0, rt1.c3, v0.c0, t0.c0 FROM v0, t0, vt0, rt1;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((NOT (v0.c0))) BETWEEN (((v0.c0) ISNULL)) AND (NULL))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((NOT (v0.c0))) BETWEEN (((v0.c0) ISNULL)) AND (NULL))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((NOT (v0.c0))) BETWEEN (((v0.c0) ISNULL)) AND (NULL))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT rt1.c1, rt1.c2 FROM vt0, rt1 GROUP BY rt1.c1, rt1.c2;
SELECT rt1.c1, rt1.c2 FROM vt0, rt1 WHERE (((rt1.c3)||(NULL))) GROUP BY rt1.c1, rt1.c2 UNION SELECT ALL rt1.c1, rt1.c2 FROM vt0, rt1 WHERE ((NOT (((rt1.c3)||(NULL))))) GROUP BY rt1.c1, rt1.c2 UNION SELECT ALL rt1.c1, rt1.c2 FROM vt0, rt1 WHERE (((((rt1.c3)||(NULL))) ISNULL)) GROUP BY rt1.c1, rt1.c2;
SELECT rt1.c1, rt1.c2 FROM vt0, rt1 GROUP BY rt1.c1, rt1.c2;
SELECT vt0.c0, rt1.c1, rt1.c0, rt1.c2, t0.c0, rt1.c3 FROM vt0 INDEXED BY i24, rt1, t0, v0 GROUP BY vt0.c0, rt1.c1, rt1.c0, rt1.c2, t0.c0, rt1.c3;
SELECT * FROM rt1, v0, t0, vt0;
SELECT * FROM rt1, v0, t0, vt0 WHERE (vt0.c0 COLLATE RTRIM) UNION ALL SELECT * FROM rt1, v0, t0, vt0 WHERE ((NOT (vt0.c0 COLLATE RTRIM))) UNION ALL SELECT * FROM rt1, v0, t0, vt0 WHERE (((vt0.c0 COLLATE RTRIM) ISNULL));
SELECT * FROM rt1, v0, t0, vt0;
SELECT DISTINCT v0.c0 FROM t0, vt0, v0;
SELECT DISTINCT v0.c0 FROM t0, vt0, v0 WHERE (CASE t0.c0  WHEN v0.c0 THEN t0.c0 ELSE t0.c0 END COLLATE BINARY) UNION SELECT DISTINCT v0.c0 FROM t0, vt0, v0 WHERE ((NOT (CASE t0.c0  WHEN v0.c0 THEN t0.c0 ELSE t0.c0 END COLLATE BINARY))) UNION SELECT DISTINCT v0.c0 FROM t0, vt0, v0 WHERE (((CASE t0.c0  WHEN v0.c0 THEN t0.c0 ELSE t0.c0 END COLLATE BINARY) ISNULL));
SELECT DISTINCT v0.c0 FROM t0, vt0, v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) NOT NULL)) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) NOT NULL)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) NOT NULL)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0, rt1.c2, rt1.c1, rt1.c0 FROM t0, rt1, v0 CROSS JOIN vt0 ON (((t0.c0)) BETWEEN ((rt1.c1)) AND ((t0.c0))) COLLATE NOCASE GROUP BY v0.c0, rt1.c2, rt1.c1, rt1.c0;
SELECT v0.c0, rt1.c2, rt1.c1, rt1.c0 FROM t0, rt1, v0 CROSS JOIN vt0 ON (((t0.c0)) BETWEEN ((rt1.c1)) AND ((t0.c0))) COLLATE NOCASE GROUP BY v0.c0, rt1.c2, rt1.c1, rt1.c0 HAVING GROUP_CONCAT(v0.c0) UNION ALL SELECT ALL v0.c0, rt1.c2, rt1.c1, rt1.c0 FROM t0, rt1, v0 CROSS JOIN vt0 ON (((t0.c0)) BETWEEN ((rt1.c1)) AND ((t0.c0))) COLLATE NOCASE GROUP BY v0.c0, rt1.c2, rt1.c1, rt1.c0 HAVING (NOT (GROUP_CONCAT(v0.c0))) UNION ALL SELECT ALL v0.c0, rt1.c2, rt1.c1, rt1.c0 FROM t0, rt1 NOT INDEXED, v0 CROSS JOIN vt0 ON (((t0.c0)) BETWEEN ((rt1.c1)) AND ((t0.c0))) COLLATE NOCASE GROUP BY v0.c0, rt1.c2, rt1.c1, rt1.c0 HAVING ((GROUP_CONCAT(v0.c0)) ISNULL);
SELECT v0.c0, rt1.c2, rt1.c1, rt1.c0 FROM t0, rt1, v0 CROSS JOIN vt0 ON (((t0.c0)) BETWEEN ((rt1.c1)) AND ((t0.c0))) COLLATE NOCASE GROUP BY v0.c0, rt1.c2, rt1.c1, rt1.c0;
SELECT v0.c0, rt1.c2, rt1.c1, rt1.c0 FROM t0, rt1, v0 CROSS JOIN vt0 ON (((t0.c0)) BETWEEN ((rt1.c1)) AND ((t0.c0))) COLLATE NOCASE GROUP BY v0.c0, rt1.c2, rt1.c1, rt1.c0 HAVING GROUP_CONCAT(v0.c0) UNION ALL SELECT ALL v0.c0, rt1.c2, rt1.c1, rt1.c0 FROM t0, rt1, v0 CROSS JOIN vt0 ON (((t0.c0)) BETWEEN ((rt1.c1)) AND ((t0.c0))) COLLATE NOCASE GROUP BY v0.c0, rt1.c2, rt1.c1, rt1.c0 HAVING (NOT (GROUP_CONCAT(v0.c0))) UNION ALL SELECT ALL v0.c0, rt1.c2, rt1.c1, rt1.c0 FROM t0, rt1 NOT INDEXED, v0 CROSS JOIN vt0 ON (((t0.c0)) BETWEEN ((rt1.c1)) AND ((t0.c0))) COLLATE NOCASE GROUP BY v0.c0, rt1.c2, rt1.c1, rt1.c0 HAVING ((GROUP_CONCAT(v0.c0)) ISNULL);
SELECT v0.c0, rt1.c2, rt1.c1, rt1.c0 FROM t0, rt1, v0 CROSS JOIN vt0 ON (((t0.c0)) BETWEEN ((rt1.c1)) AND ((t0.c0))) COLLATE NOCASE GROUP BY v0.c0, rt1.c2, rt1.c1, rt1.c0;
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON (((((rt1.c0))>((rt1.c0)))) NOT BETWEEN (((((rt1.c2)AND(t0.c0)))AND(t0.c0))) AND (UNICODE(rt1.c1))) CROSS JOIN rt1 ON NULL;
SELECT DISTINCT * FROM t0, v0, vt0, rt1;
SELECT DISTINCT * FROM t0, v0, vt0, rt1 WHERE ((+ (CAST(rt1.c0 AS TEXT)))) UNION SELECT DISTINCT * FROM t0, v0, vt0, rt1 WHERE ((NOT ((+ (CAST(rt1.c0 AS TEXT)))))) UNION SELECT DISTINCT * FROM t0, v0, vt0, rt1 WHERE ((((+ (CAST(rt1.c0 AS TEXT)))) ISNULL));
SELECT DISTINCT * FROM t0, v0, vt0, rt1;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((CAST(v0.c0 AS REAL)) IS TRUE)) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((CAST(v0.c0 AS REAL)) IS TRUE)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((CAST(v0.c0 AS REAL)) IS TRUE)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c0, rt1.c1, rt1.c2, v0.c0, rt1.c0, t0.c0, rt1.c3 FROM v0, rt1, vt0, t0 GROUP BY vt0.c0, rt1.c1, rt1.c2, v0.c0, rt1.c0, t0.c0, rt1.c3;
SELECT ALL vt0.c0, rt1.c1, rt1.c2, v0.c0, rt1.c0, t0.c0, rt1.c3 FROM v0, rt1, vt0, t0 GROUP BY vt0.c0, rt1.c1, rt1.c2, v0.c0, rt1.c0, t0.c0, rt1.c3 HAVING ((TOTAL(vt0.c0)) NOT BETWEEN (COUNT(rt1.c2)) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)) UNION ALL SELECT vt0.c0, rt1.c1, rt1.c2, v0.c0, rt1.c0, t0.c0, rt1.c3 FROM v0, rt1, vt0, t0 GROUP BY vt0.c0, rt1.c1, rt1.c2, v0.c0, rt1.c0, t0.c0, rt1.c3 HAVING (NOT (((TOTAL(vt0.c0)) NOT BETWEEN (COUNT(rt1.c2)) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)))) UNION ALL SELECT vt0.c0, rt1.c1, rt1.c2, v0.c0, rt1.c0, t0.c0, rt1.c3 FROM v0, rt1, vt0, t0 GROUP BY vt0.c0, rt1.c1, rt1.c2, v0.c0, rt1.c0, t0.c0, rt1.c3 HAVING ((((TOTAL(vt0.c0)) NOT BETWEEN (COUNT(rt1.c2)) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END))) ISNULL);
SELECT ALL vt0.c0, rt1.c1, rt1.c2, v0.c0, rt1.c0, t0.c0, rt1.c3 FROM v0, rt1, vt0, t0 GROUP BY vt0.c0, rt1.c1, rt1.c2, v0.c0, rt1.c0, t0.c0, rt1.c3;
SELECT ALL vt0.c0, rt1.c1, rt1.c2, v0.c0, rt1.c0, t0.c0, rt1.c3 FROM v0, rt1, vt0, t0 GROUP BY vt0.c0, rt1.c1, rt1.c2, v0.c0, rt1.c0, t0.c0, rt1.c3 HAVING ((TOTAL(vt0.c0)) NOT BETWEEN (COUNT(rt1.c2)) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)) UNION ALL SELECT vt0.c0, rt1.c1, rt1.c2, v0.c0, rt1.c0, t0.c0, rt1.c3 FROM v0, rt1, vt0, t0 GROUP BY vt0.c0, rt1.c1, rt1.c2, v0.c0, rt1.c0, t0.c0, rt1.c3 HAVING (NOT (((TOTAL(vt0.c0)) NOT BETWEEN (COUNT(rt1.c2)) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)))) UNION ALL SELECT vt0.c0, rt1.c1, rt1.c2, v0.c0, rt1.c0, t0.c0, rt1.c3 FROM v0, rt1, vt0, t0 GROUP BY vt0.c0, rt1.c1, rt1.c2, v0.c0, rt1.c0, t0.c0, rt1.c3 HAVING ((((TOTAL(vt0.c0)) NOT BETWEEN (COUNT(rt1.c2)) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END))) ISNULL);
SELECT ALL vt0.c0, rt1.c1, rt1.c2, v0.c0, rt1.c0, t0.c0, rt1.c3 FROM v0, rt1, vt0, t0 GROUP BY vt0.c0, rt1.c1, rt1.c2, v0.c0, rt1.c0, t0.c0, rt1.c3;
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (CASE (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))  WHEN CAST(v0.c0 AS NUMERIC) THEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) ELSE v0.c0 COLLATE NOCASE END) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CASE (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))  WHEN CAST(v0.c0 AS NUMERIC) THEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) ELSE v0.c0 COLLATE NOCASE END))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((CASE (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))  WHEN CAST(v0.c0 AS NUMERIC) THEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) ELSE v0.c0 COLLATE NOCASE END) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT * FROM rt1, vt0 INNER JOIN v0 ON ((((rt1.c0)OR(rt1.c0)))OR(v0.c0)) COLLATE BINARY LEFT OUTER JOIN t0 ON ((((((((((vt0.c0)<<(rt1.c3)))AND(((((rt1.c1)OR(t0.c0)))AND(rt1.c0)))))AND(CASE NULL  WHEN rt1.c0 THEN rt1.c0 ELSE t0.c0 END)))AND(((t0.c0)GLOB(t0.c0)))))OR(((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c1))));
SELECT DISTINCT * FROM rt1, vt0 INNER JOIN v0 ON ((((rt1.c0)OR(rt1.c0)))OR(v0.c0)) COLLATE BINARY LEFT OUTER JOIN t0 ON ((((((((((vt0.c0)<<(rt1.c3)))AND(((((rt1.c1)OR(t0.c0)))AND(rt1.c0)))))AND(CASE NULL  WHEN rt1.c0 THEN rt1.c0 ELSE t0.c0 END)))AND(((t0.c0)GLOB(t0.c0)))))OR(((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c1)))) WHERE (((((rt1.c0)<<(v0.c0))) NOT BETWEEN (((((rt1.c3)OR(vt0.c0)))OR(rt1.c2))) AND (CAST(t0.c0 AS INTEGER)))) UNION SELECT DISTINCT * FROM rt1, vt0 INNER JOIN v0 ON ((((rt1.c0)OR(rt1.c0)))OR(v0.c0)) COLLATE BINARY LEFT OUTER JOIN t0 ON ((((((((((vt0.c0)<<(rt1.c3)))AND(((((rt1.c1)OR(t0.c0)))AND(rt1.c0)))))AND(CASE NULL  WHEN rt1.c0 THEN rt1.c0 ELSE t0.c0 END)))AND(((t0.c0)GLOB(t0.c0)))))OR(((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c1)))) WHERE ((NOT (((((rt1.c0)<<(v0.c0))) NOT BETWEEN (((((rt1.c3)OR(vt0.c0)))OR(rt1.c2))) AND (CAST(t0.c0 AS INTEGER)))))) UNION SELECT DISTINCT * FROM rt1, vt0 INNER JOIN v0 ON ((((rt1.c0)OR(rt1.c0)))OR(v0.c0)) COLLATE BINARY LEFT OUTER JOIN t0 ON ((((((((((vt0.c0)<<(rt1.c3)))AND(((((rt1.c1)OR(t0.c0)))AND(rt1.c0)))))AND(CASE NULL  WHEN rt1.c0 THEN rt1.c0 ELSE t0.c0 END)))AND(((t0.c0)GLOB(t0.c0)))))OR(((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c1)))) WHERE (((((((rt1.c0)<<(v0.c0))) NOT BETWEEN (((((rt1.c3)OR(vt0.c0)))OR(rt1.c2))) AND (CAST(t0.c0 AS INTEGER)))) ISNULL));
SELECT DISTINCT * FROM rt1, vt0 INNER JOIN v0 ON ((((rt1.c0)OR(rt1.c0)))OR(v0.c0)) COLLATE BINARY LEFT OUTER JOIN t0 ON ((((((((((vt0.c0)<<(rt1.c3)))AND(((((rt1.c1)OR(t0.c0)))AND(rt1.c0)))))AND(CASE NULL  WHEN rt1.c0 THEN rt1.c0 ELSE t0.c0 END)))AND(((t0.c0)GLOB(t0.c0)))))OR(((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c1))));
SELECT ALL t0.c0, rt1.c0, rt1.c3, rt1.c2 FROM t0, rt1 GROUP BY t0.c0, rt1.c0, rt1.c3, rt1.c2;
SELECT ALL t0.c0, rt1.c0, rt1.c3, rt1.c2 FROM t0, rt1 WHERE ((ABS(rt1.c0) IN ())) GROUP BY t0.c0, rt1.c0, rt1.c3, rt1.c2 UNION SELECT ALL t0.c0, rt1.c0, rt1.c3, rt1.c2 FROM t0, rt1 WHERE ((NOT ((ABS(rt1.c0) IN ())))) GROUP BY t0.c0, rt1.c0, rt1.c3, rt1.c2 UNION SELECT t0.c0, rt1.c0, rt1.c3, rt1.c2 FROM t0, rt1 WHERE ((((ABS(rt1.c0) IN ())) ISNULL)) GROUP BY t0.c0, rt1.c0, rt1.c3, rt1.c2;
SELECT ALL t0.c0, rt1.c0, rt1.c3, rt1.c2 FROM t0, rt1 GROUP BY t0.c0, rt1.c0, rt1.c3, rt1.c2;
SELECT ALL rt1.c1, rt1.c3, v0.c0, vt0.c0 FROM v0, t0, rt1, vt0 GROUP BY rt1.c1, rt1.c3, v0.c0, vt0.c0;
SELECT ALL rt1.c1, rt1.c3, v0.c0, vt0.c0 FROM v0, t0, rt1, vt0 GROUP BY rt1.c1, rt1.c3, v0.c0, vt0.c0 HAVING HEX(DISTINCT SUM(NULL)) UNION ALL SELECT rt1.c1, rt1.c3, v0.c0, vt0.c0 FROM v0, t0, rt1, vt0 GROUP BY rt1.c1, rt1.c3, v0.c0, vt0.c0 HAVING (NOT (HEX(DISTINCT SUM(NULL)))) UNION ALL SELECT rt1.c1, rt1.c3, v0.c0, vt0.c0 FROM v0, t0, rt1, vt0 GROUP BY rt1.c1, rt1.c3, v0.c0, vt0.c0 HAVING ((HEX(DISTINCT SUM(NULL))) ISNULL);
SELECT ALL rt1.c1, rt1.c3, v0.c0, vt0.c0 FROM v0, t0, rt1, vt0 GROUP BY rt1.c1, rt1.c3, v0.c0, vt0.c0;
SELECT ALL rt1.c1, rt1.c3, v0.c0, vt0.c0 FROM v0, t0, rt1, vt0 GROUP BY rt1.c1, rt1.c3, v0.c0, vt0.c0 HAVING HEX(DISTINCT SUM(NULL)) UNION ALL SELECT rt1.c1, rt1.c3, v0.c0, vt0.c0 FROM v0, t0, rt1, vt0 GROUP BY rt1.c1, rt1.c3, v0.c0, vt0.c0 HAVING (NOT (HEX(DISTINCT SUM(NULL)))) UNION ALL SELECT rt1.c1, rt1.c3, v0.c0, vt0.c0 FROM v0, t0, rt1, vt0 GROUP BY rt1.c1, rt1.c3, v0.c0, vt0.c0 HAVING ((HEX(DISTINCT SUM(NULL))) ISNULL);
SELECT ALL rt1.c1, rt1.c3, v0.c0, vt0.c0 FROM v0, t0, rt1, vt0 GROUP BY rt1.c1, rt1.c3, v0.c0, vt0.c0;
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE ((((('(J') IS FALSE))LIKE(((v0.c0) NOT BETWEEN (0xffffffff8839a30e) AND (v0.c0))))) UNION ALL SELECT * FROM v0 WHERE ((NOT ((((('(J') IS FALSE))LIKE(((v0.c0) NOT BETWEEN (0Xffffffff8839a30e) AND (v0.c0))))))) UNION ALL SELECT * FROM v0 WHERE ((((((('(J') IS FALSE))LIKE(((v0.c0) NOT BETWEEN (0Xffffffff8839a30e) AND (v0.c0))))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM t0, vt0, v0, rt1;
SELECT DISTINCT * FROM t0, vt0, v0, rt1 WHERE ((((rt1.c0 IN ())) ISNULL)) UNION SELECT DISTINCT * FROM t0, vt0, v0, rt1 WHERE ((NOT ((((rt1.c0 IN ())) ISNULL)))) UNION SELECT DISTINCT * FROM t0, vt0, v0, rt1 WHERE ((((((rt1.c0 IN ())) ISNULL)) ISNULL));
SELECT DISTINCT * FROM t0, vt0, v0, rt1;
SELECT ALL vt0.c0, rt1.c0, t0.c0, rt1.c1 FROM v0, rt1, t0, vt0 GROUP BY vt0.c0, rt1.c0, t0.c0, rt1.c1;
SELECT ALL vt0.c0, rt1.c0, t0.c0, rt1.c1 FROM v0, rt1, t0, vt0 WHERE ((((vt0.c0)OR(v0.c0)) IN ())) GROUP BY vt0.c0, rt1.c0, t0.c0, rt1.c1 UNION SELECT ALL vt0.c0, rt1.c0, t0.c0, rt1.c1 FROM v0, rt1, t0, vt0 WHERE ((NOT ((((vt0.c0)OR(v0.c0)) IN ())))) GROUP BY vt0.c0, rt1.c0, t0.c0, rt1.c1 UNION SELECT vt0.c0, rt1.c0, t0.c0, rt1.c1 FROM v0, rt1, t0, vt0 WHERE ((((((vt0.c0)OR(v0.c0)) IN ())) ISNULL)) GROUP BY vt0.c0, rt1.c0, t0.c0, rt1.c1;
SELECT ALL vt0.c0, rt1.c0, t0.c0, rt1.c1 FROM v0, rt1, t0, vt0 GROUP BY vt0.c0, rt1.c0, t0.c0, rt1.c1;
SELECT vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON CASE (((0x2e66e72, v0.c0, x'497b623e')) NOT BETWEEN ((vt0.c0, v0.c0, vt0.c0)) AND ((v0.c0, vt0.c0, v0.c0)))  WHEN ((vt0.c0)<<(vt0.c0)) THEN ((v0.c0)<<(v0.c0)) END GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON CASE (((0x2e66e72, v0.c0, x'497b623e')) NOT BETWEEN ((vt0.c0, v0.c0, vt0.c0)) AND ((v0.c0, vt0.c0, v0.c0)))  WHEN ((vt0.c0)<<(vt0.c0)) THEN ((v0.c0)<<(v0.c0)) END GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON CASE (((0X2e66e72, v0.c0, x'497b623e')) NOT BETWEEN ((vt0.c0, v0.c0, vt0.c0)) AND ((v0.c0, vt0.c0, v0.c0)))  WHEN ((vt0.c0)<<(vt0.c0)) THEN ((v0.c0)<<(v0.c0)) END GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON CASE (((0x2e66e72, v0.c0, x'497b623e')) NOT BETWEEN ((vt0.c0, v0.c0, vt0.c0)) AND ((v0.c0, vt0.c0, v0.c0)))  WHEN ((vt0.c0)<<(vt0.c0)) THEN ((v0.c0)<<(v0.c0)) END GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON CASE (((0x2e66e72, v0.c0, x'497b623e')) NOT BETWEEN ((vt0.c0, v0.c0, vt0.c0)) AND ((v0.c0, vt0.c0, v0.c0)))  WHEN ((vt0.c0)<<(vt0.c0)) THEN ((v0.c0)<<(v0.c0)) END GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON CASE (((0x2e66e72, v0.c0, x'497b623e')) NOT BETWEEN ((vt0.c0, v0.c0, vt0.c0)) AND ((v0.c0, vt0.c0, v0.c0)))  WHEN ((vt0.c0)<<(vt0.c0)) THEN ((v0.c0)<<(v0.c0)) END GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON CASE (((0X2e66e72, v0.c0, x'497b623e')) NOT BETWEEN ((vt0.c0, v0.c0, vt0.c0)) AND ((v0.c0, vt0.c0, v0.c0)))  WHEN ((vt0.c0)<<(vt0.c0)) THEN ((v0.c0)<<(v0.c0)) END GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON CASE (((0x2e66e72, v0.c0, x'497b623e')) NOT BETWEEN ((vt0.c0, v0.c0, vt0.c0)) AND ((v0.c0, vt0.c0, v0.c0)))  WHEN ((vt0.c0)<<(vt0.c0)) THEN ((v0.c0)<<(v0.c0)) END GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON CASE (((0x2e66e72, v0.c0, x'497b623e')) NOT BETWEEN ((vt0.c0, v0.c0, vt0.c0)) AND ((v0.c0, vt0.c0, v0.c0)))  WHEN ((vt0.c0)<<(vt0.c0)) THEN ((v0.c0)<<(v0.c0)) END GROUP BY vt0.c0;
SELECT SUM(((((v0.c0) NOTNULL)) NOT NULL)) FROM v0, vt0 ORDER BY TYPEOF(vt0.c0) COLLATE RTRIM ASC;
SELECT rt1.c3, rt1.c1, rt1.c2, rt1.c0, v0.c0 FROM v0 RIGHT OUTER JOIN rt1 ON (((((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c2))))<((-1964910061)));
SELECT ALL rt1.c3, rt1.c1, rt1.c2, rt1.c0, v0.c0 FROM v0 RIGHT OUTER JOIN rt1 ON (((((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c2))))<((-1964910061))) WHERE ((- (TRIM(DISTINCT 0.2921911706502711)))) UNION ALL SELECT rt1.c3, rt1.c1, rt1.c2, rt1.c0, v0.c0 FROM v0 RIGHT OUTER JOIN rt1 ON (((((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c2))))<((-1964910061))) WHERE ((NOT ((- (TRIM(DISTINCT 0.2921911706502711)))))) UNION ALL SELECT rt1.c3, rt1.c1, rt1.c2, rt1.c0, v0.c0 FROM v0 RIGHT OUTER JOIN rt1 ON (((((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c2))))<((-1964910061))) WHERE ((((- (TRIM(DISTINCT 0.2921911706502711)))) ISNULL));
SELECT rt1.c3, rt1.c1, rt1.c2, rt1.c0, v0.c0 FROM v0 RIGHT OUTER JOIN rt1 ON (((((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c2))))<((-1964910061)));
SELECT DISTINCT v0.c0, t0.c0 FROM t0, v0;
SELECT DISTINCT v0.c0, t0.c0 FROM t0, v0 WHERE ((((v0.c0)) NOT BETWEEN ((((((v0.c0)AND('-1633730641')))AND(v0.c0)))) AND (((((t0.c0, v0.c0, v0.c0, t0.c0, v0.c0))>((t0.c0, t0.c0, t0.c0, v0.c0, v0.c0))))))) UNION SELECT DISTINCT v0.c0, t0.c0 FROM t0, v0 WHERE ((NOT ((((v0.c0)) NOT BETWEEN ((((((v0.c0)AND('-1633730641')))AND(v0.c0)))) AND (((((t0.c0, v0.c0, v0.c0, t0.c0, v0.c0))>((t0.c0, t0.c0, t0.c0, v0.c0, v0.c0))))))))) UNION SELECT DISTINCT v0.c0, t0.c0 FROM t0, v0 WHERE ((((((v0.c0)) NOT BETWEEN ((((((v0.c0)AND('-1633730641')))AND(v0.c0)))) AND (((((t0.c0, v0.c0, v0.c0, t0.c0, v0.c0))>((t0.c0, t0.c0, t0.c0, v0.c0, v0.c0))))))) ISNULL));
SELECT DISTINCT v0.c0, t0.c0 FROM t0, v0;
SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 WHERE (t0.c0) GROUP BY t0.c0, vt0.c0 UNION SELECT t0.c0, vt0.c0 FROM t0, vt0 WHERE ((NOT (t0.c0))) GROUP BY t0.c0, vt0.c0 UNION SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 WHERE (((t0.c0) ISNULL)) GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, v0.c0 FROM vt0, t0, v0 GROUP BY t0.c0, v0.c0;
SELECT ALL t0.c0, v0.c0 FROM vt0, t0, v0 GROUP BY t0.c0, v0.c0 HAVING ((((((t0.c0)AND(COUNT(*))))AND(v0.c0))) NOT NULL) UNION ALL SELECT ALL t0.c0, v0.c0 FROM vt0, t0, v0 GROUP BY t0.c0, v0.c0 HAVING (NOT (((((((t0.c0)AND(COUNT(*))))AND(v0.c0))) NOT NULL))) UNION ALL SELECT t0.c0, v0.c0 FROM vt0, t0, v0 GROUP BY t0.c0, v0.c0 HAVING ((((((((t0.c0)AND(COUNT(*))))AND(v0.c0))) NOT NULL)) ISNULL);
SELECT ALL t0.c0, v0.c0 FROM vt0, t0, v0 GROUP BY t0.c0, v0.c0;
SELECT ALL t0.c0, v0.c0 FROM vt0, t0, v0 GROUP BY t0.c0, v0.c0 HAVING ((((((t0.c0)AND(COUNT(*))))AND(v0.c0))) NOT NULL) UNION ALL SELECT ALL t0.c0, v0.c0 FROM vt0, t0, v0 GROUP BY t0.c0, v0.c0 HAVING (NOT (((((((t0.c0)AND(COUNT(*))))AND(v0.c0))) NOT NULL))) UNION ALL SELECT t0.c0, v0.c0 FROM vt0, t0, v0 GROUP BY t0.c0, v0.c0 HAVING ((((((((t0.c0)AND(COUNT(*))))AND(v0.c0))) NOT NULL)) ISNULL);
SELECT ALL t0.c0, v0.c0 FROM vt0, t0, v0 GROUP BY t0.c0, v0.c0;
SELECT ALL rt1.c3, rt1.c2, rt1.c1 FROM rt1;
SELECT ALL rt1.c3, rt1.c2, rt1.c1 FROM rt1 WHERE (((((rt1.c0)OR(rt1.c3)))OR(((((rt1.c3)AND(NULL)))AND(rt1.c1))))) UNION ALL SELECT ALL rt1.c3, rt1.c2, rt1.c1 FROM rt1 WHERE ((NOT (((((rt1.c0)OR(rt1.c3)))OR(((((rt1.c3)AND(NULL)))AND(rt1.c1))))))) UNION ALL SELECT rt1.c3, rt1.c2, rt1.c1 FROM rt1 WHERE (((((((rt1.c0)OR(rt1.c3)))OR(((((rt1.c3)AND(NULL)))AND(rt1.c1))))) ISNULL));
SELECT ALL rt1.c3, rt1.c2, rt1.c1 FROM rt1;
SELECT DISTINCT rt1.c1, t0.c0, rt1.c3, v0.c0 FROM rt1, t0, v0;
SELECT DISTINCT rt1.c1, t0.c0, rt1.c3, v0.c0 FROM rt1, t0, v0 WHERE (t0.c0) UNION SELECT DISTINCT rt1.c1, t0.c0, rt1.c3, v0.c0 FROM rt1, t0, v0 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT rt1.c1, t0.c0, rt1.c3, v0.c0 FROM rt1, t0, v0 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT rt1.c1, t0.c0, rt1.c3, v0.c0 FROM rt1, t0, v0;
SELECT rt1.c3 FROM rt1, vt0, v0 GROUP BY rt1.c3;
SELECT ALL rt1.c3 FROM rt1, vt0, v0 WHERE (CASE WHEN ((v0.c0)LIKE(rt1.c1)) THEN CAST(vt0.c0 AS REAL) WHEN (rt1.c0 IN (rt1.c3)) THEN ((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c0)) WHEN ((rt1.c0)>(rt1.c0)) THEN ((vt0.c0)IS(rt1.c2)) END) GROUP BY rt1.c3 UNION SELECT ALL rt1.c3 FROM rt1, vt0, v0 WHERE ((NOT (CASE WHEN ((v0.c0)LIKE(rt1.c1)) THEN CAST(vt0.c0 AS REAL) WHEN (rt1.c0 IN (rt1.c3)) THEN ((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c0)) WHEN ((rt1.c0)>(rt1.c0)) THEN ((vt0.c0)IS(rt1.c2)) END))) GROUP BY rt1.c3 UNION SELECT rt1.c3 FROM rt1, vt0, v0 WHERE (((CASE WHEN ((v0.c0)LIKE(rt1.c1)) THEN CAST(vt0.c0 AS REAL) WHEN (rt1.c0 IN (rt1.c3)) THEN ((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c0)) WHEN ((rt1.c0)>(rt1.c0)) THEN ((vt0.c0)IS(rt1.c2)) END) ISNULL)) GROUP BY rt1.c3;
SELECT rt1.c3 FROM rt1, vt0, v0 GROUP BY rt1.c3;
SELECT vt0.c0, t0.c0, rt1.c3, rt1.c2, rt1.c0 FROM vt0, v0 NOT INDEXED, rt1 NATURAL JOIN t0 GROUP BY vt0.c0, t0.c0, rt1.c3, rt1.c2, rt1.c0;
SELECT vt0.c0, t0.c0, rt1.c3, rt1.c2, rt1.c0 FROM vt0, v0, rt1 NATURAL JOIN t0 GROUP BY vt0.c0, t0.c0, rt1.c3, rt1.c2, rt1.c0 HAVING COUNT(MIN(rt1.c3)) UNION ALL SELECT vt0.c0, t0.c0, rt1.c3, rt1.c2, rt1.c0 FROM vt0, v0, rt1 NATURAL JOIN t0 GROUP BY vt0.c0, t0.c0, rt1.c3, rt1.c2, rt1.c0 HAVING (NOT (COUNT(MIN(rt1.c3)))) UNION ALL SELECT vt0.c0, t0.c0, rt1.c3, rt1.c2, rt1.c0 FROM vt0, v0, rt1 NATURAL JOIN t0 GROUP BY vt0.c0, t0.c0, rt1.c3, rt1.c2, rt1.c0 HAVING ((COUNT(MIN(rt1.c3))) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (CASE ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))  WHEN vt0.c0 THEN ('\i㗦Rs' IN ()) WHEN ((vt0.c0)|('1319613632')) THEN CAST(vt0.c0 AS BLOB) WHEN ((vt0.c0)-(vt0.c0)) THEN (vt0.c0 IN ()) END) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (CASE ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))  WHEN vt0.c0 THEN ('\i㗦Rs' IN ()) WHEN ((vt0.c0)|('1319613632')) THEN CAST(vt0.c0 AS BLOB) WHEN ((vt0.c0)-(vt0.c0)) THEN (vt0.c0 IN ()) END))) UNION ALL SELECT ALL * FROM vt0 WHERE (((CASE ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))  WHEN vt0.c0 THEN ('\i㗦Rs' IN ()) WHEN ((vt0.c0)|('1319613632')) THEN CAST(vt0.c0 AS BLOB) WHEN ((vt0.c0)-(vt0.c0)) THEN (vt0.c0 IN ()) END) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0 INNER JOIN v0 ON CHANGES();
SELECT DISTINCT * FROM vt0 INNER JOIN v0 ON CHANGES() WHERE (CASE WHEN vt0.c0 THEN CAST(vt0.c0 AS NUMERIC) END) UNION SELECT DISTINCT * FROM vt0 INNER JOIN v0 ON CHANGES() WHERE ((NOT (CASE WHEN vt0.c0 THEN CAST(vt0.c0 AS NUMERIC) END))) UNION SELECT DISTINCT * FROM vt0 INNER JOIN v0 ON CHANGES() WHERE (((CASE WHEN vt0.c0 THEN CAST(vt0.c0 AS NUMERIC) END) ISNULL));
SELECT DISTINCT * FROM vt0 INNER JOIN v0 ON CHANGES();
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((((v0.c0)>(v0.c0))) NOT NULL)) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((v0.c0)>(v0.c0))) NOT NULL)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((((v0.c0)>(v0.c0))) NOT NULL)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt1.c3, t0.c0, rt1.c1, vt0.c0, rt1.c2, v0.c0 FROM rt1, v0, t0, vt0 GROUP BY rt1.c3, t0.c0, rt1.c1, vt0.c0, rt1.c2, v0.c0;
SELECT rt1.c3, t0.c0, rt1.c1, vt0.c0, rt1.c2, v0.c0 FROM rt1, v0, t0, vt0 GROUP BY rt1.c3, t0.c0, rt1.c1, vt0.c0, rt1.c2, v0.c0 HAVING (((AVG(rt1.c2))) NOT BETWEEN (((((COUNT(*), rt1.c0, MIN(SUM(rt1.c0)), vt0.c0, TOTAL(rt1.c1)))>=((rt1.c2, COUNT(SUM(COUNT(*))), v0.c0, MAX(rt1.c2), vt0.c0))))) AND ((QUOTE(rt1.c0)))) UNION ALL SELECT ALL rt1.c3, t0.c0, rt1.c1, vt0.c0, rt1.c2, v0.c0 FROM rt1 NOT INDEXED, v0, t0, vt0 GROUP BY rt1.c3, t0.c0, rt1.c1, vt0.c0, rt1.c2, v0.c0 HAVING (NOT ((((AVG(rt1.c2))) NOT BETWEEN (((((COUNT(*), rt1.c0, MIN(SUM(rt1.c0)), vt0.c0, TOTAL(rt1.c1)))>=((rt1.c2, COUNT(SUM(COUNT(*))), v0.c0, MAX(rt1.c2), vt0.c0))))) AND ((QUOTE(rt1.c0)))))) UNION ALL SELECT rt1.c3, t0.c0, rt1.c1, vt0.c0, rt1.c2, v0.c0 FROM rt1, v0, t0, vt0 GROUP BY rt1.c3, t0.c0, rt1.c1, vt0.c0, rt1.c2, v0.c0 HAVING (((((AVG(rt1.c2))) NOT BETWEEN (((((COUNT(*), rt1.c0, MIN(SUM(rt1.c0)), vt0.c0, TOTAL(rt1.c1)))>=((rt1.c2, COUNT(SUM(COUNT(*))), v0.c0, MAX(rt1.c2), vt0.c0))))) AND ((QUOTE(rt1.c0))))) ISNULL);
SELECT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE (CAST(((t0.c0)AND(t0.c0)) AS NUMERIC)) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT (CAST(((t0.c0)AND(t0.c0)) AS NUMERIC)))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE (((CAST(((t0.c0)AND(t0.c0)) AS NUMERIC)) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT * FROM t0, vt0, rt1;
SELECT DISTINCT * FROM t0, vt0, rt1 WHERE (((((CASE WHEN rt1.c1 THEN rt1.c3 END)OR(0.5881423254484185 COLLATE BINARY)))OR(((x'')>=(rt1.c0))))) UNION SELECT DISTINCT * FROM t0, vt0, rt1 WHERE ((NOT (((((CASE WHEN rt1.c1 THEN rt1.c3 END)OR(0.5881423254484185 COLLATE BINARY)))OR(((x'')>=(rt1.c0))))))) UNION SELECT DISTINCT * FROM t0, vt0, rt1 WHERE (((((((CASE WHEN rt1.c1 THEN rt1.c3 END)OR(0.5881423254484185 COLLATE BINARY)))OR(((x'')>=(rt1.c0))))) ISNULL));
SELECT DISTINCT * FROM t0, vt0, rt1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE 0xffffffffb4f8cfc2 END IN ((NULL IN (t0.c0)), (+ (t0.c0))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE 0Xffffffffb4f8cfc2 END IN ((NULL IN (t0.c0)), (+ (t0.c0))))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE 0Xffffffffb4f8cfc2 END IN ((NULL IN (t0.c0)), (+ (t0.c0))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT v0.c0, rt1.c1, rt1.c0, t0.c0, rt1.c3 FROM rt1 INDEXED BY i30, t0, v0 GROUP BY v0.c0, rt1.c1, rt1.c0, t0.c0, rt1.c3;
SELECT ALL * FROM v0 CROSS JOIN vt0 ON (((((~ (NULL)))AND(RTRIM(vt0.c0))))AND(((rt1.c1)<<(rt1.c3)))) INNER JOIN rt1 ON (((((rt1.c0)AND(rt1.c1)))OR(rt1.c3)) IN ()) CROSS JOIN t0 ON ((vt0.c0 COLLATE BINARY)OR((+ (rt1.c3))));
SELECT * FROM v0 CROSS JOIN vt0 ON (((((~ (NULL)))AND(RTRIM(vt0.c0))))AND(((rt1.c1)<<(rt1.c3)))) INNER JOIN rt1 ON (((((rt1.c0)AND(rt1.c1)))OR(rt1.c3)) IN ()) CROSS JOIN t0 ON ((vt0.c0 COLLATE BINARY)OR((+ (rt1.c3)))) WHERE (((((rt1.c3)==('~揽'))) BETWEEN (((v0.c0) IS TRUE)) AND (((rt1.c2)/(''))))) UNION ALL SELECT * FROM v0 CROSS JOIN vt0 ON (((((~ (NULL)))AND(RTRIM(vt0.c0))))AND(((rt1.c1)<<(rt1.c3)))) INNER JOIN rt1 ON (((((rt1.c0)AND(rt1.c1)))OR(rt1.c3)) IN ()) CROSS JOIN t0 ON ((vt0.c0 COLLATE BINARY)OR((+ (rt1.c3)))) WHERE ((NOT (((((rt1.c3)==('~揽'))) BETWEEN (((v0.c0) IS TRUE)) AND (((rt1.c2)/(''))))))) UNION ALL SELECT * FROM v0 CROSS JOIN vt0 ON (((((~ (NULL)))AND(RTRIM(vt0.c0))))AND(((rt1.c1)<<(rt1.c3)))) INNER JOIN rt1 ON (((((rt1.c0)AND(rt1.c1)))OR(rt1.c3)) IN ()) CROSS JOIN t0 ON ((vt0.c0 COLLATE BINARY)OR((+ (rt1.c3)))) WHERE (((((((rt1.c3)==('~揽'))) BETWEEN (((v0.c0) IS TRUE)) AND (((rt1.c2)/(''))))) ISNULL));
SELECT ALL * FROM v0 CROSS JOIN vt0 ON (((((~ (NULL)))AND(RTRIM(vt0.c0))))AND(((rt1.c1)<<(rt1.c3)))) INNER JOIN rt1 ON (((((rt1.c0)AND(rt1.c1)))OR(rt1.c3)) IN ()) CROSS JOIN t0 ON ((vt0.c0 COLLATE BINARY)OR((+ (rt1.c3))));
SELECT DISTINCT vt0.c0 FROM vt0 FULL OUTER JOIN t0 ON CAST(((((((((((((t0.c0)OR(t0.c0)))AND(vt0.c0)))AND('-811841274')))OR(vt0.c0)))OR(vt0.c0)))AND(NULL)) AS BLOB);
SELECT DISTINCT vt0.c0 FROM vt0 FULL OUTER JOIN t0 ON CAST(((((((((((((t0.c0)OR(t0.c0)))AND(vt0.c0)))AND('-811841274')))OR(vt0.c0)))OR(vt0.c0)))AND(NULL)) AS BLOB) WHERE ((((((vt0.c0) NOT BETWEEN ('漷৔A #x') AND (t0.c0))))<((((t0.c0)IS NOT(NULL)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 FULL OUTER JOIN t0 ON CAST(((((((((((((t0.c0)OR(t0.c0)))AND(vt0.c0)))AND('-811841274')))OR(vt0.c0)))OR(vt0.c0)))AND(NULL)) AS BLOB) WHERE ((NOT ((((((vt0.c0) NOT BETWEEN ('漷৔A #x') AND (t0.c0))))<((((t0.c0)IS NOT(NULL)))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 FULL OUTER JOIN t0 ON CAST(((((((((((((t0.c0)OR(t0.c0)))AND(vt0.c0)))AND('-811841274')))OR(vt0.c0)))OR(vt0.c0)))AND(NULL)) AS BLOB) WHERE ((((((((vt0.c0) NOT BETWEEN ('漷৔A #x') AND (t0.c0))))<((((t0.c0)IS NOT(NULL)))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0 FULL OUTER JOIN t0 ON CAST(((((((((((((t0.c0)OR(t0.c0)))AND(vt0.c0)))AND('-811841274')))OR(vt0.c0)))OR(vt0.c0)))AND(NULL)) AS BLOB);
SELECT rt1.c1, rt1.c2, rt1.c3, v0.c0 FROM rt1, v0 GROUP BY rt1.c1, rt1.c2, rt1.c3, v0.c0;
SELECT ALL rt1.c1, rt1.c2, rt1.c3, v0.c0 FROM rt1, v0 WHERE (((rt1.c2) ISNULL) COLLATE BINARY) GROUP BY rt1.c1, rt1.c2, rt1.c3, v0.c0 UNION SELECT rt1.c1, rt1.c2, rt1.c3, v0.c0 FROM rt1, v0 WHERE ((NOT (((rt1.c2) ISNULL) COLLATE BINARY))) GROUP BY rt1.c1, rt1.c2, rt1.c3, v0.c0 UNION SELECT rt1.c1, rt1.c2, rt1.c3, v0.c0 FROM rt1, v0 WHERE (((((rt1.c2) ISNULL) COLLATE BINARY) ISNULL)) GROUP BY rt1.c1, rt1.c2, rt1.c3, v0.c0;
SELECT rt1.c1, rt1.c2, rt1.c3, v0.c0 FROM rt1, v0 GROUP BY rt1.c1, rt1.c2, rt1.c3, v0.c0;
SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1;
SELECT rt1.c0, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1 HAVING CASE MAX(MIN(MAX(AVG(rt1.c1))))  WHEN TOTAL(SUM(COUNT(AVG(rt1.c3)))) THEN ((rt1.c2) BETWEEN (AVG(COUNT(*))) AND (rt1.c0)) WHEN ((TOTAL(rt1.c1))|(rt1.c3)) THEN CAST(0.40907198365731834 AS BLOB) WHEN ((SUM(rt1.c3))IS(rt1.c1)) THEN SUM(NULL) ELSE COUNT(*) END UNION ALL SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1 HAVING (NOT (CASE MAX(MIN(MAX(AVG(rt1.c1))))  WHEN TOTAL(SUM(COUNT(AVG(rt1.c3)))) THEN ((rt1.c2) BETWEEN (AVG(COUNT(*))) AND (rt1.c0)) WHEN ((TOTAL(rt1.c1))|(rt1.c3)) THEN CAST(0.40907198365731834 AS BLOB) WHEN ((SUM(rt1.c3))IS(rt1.c1)) THEN SUM(NULL) ELSE COUNT(*) END)) UNION ALL SELECT rt1.c0, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1 HAVING ((CASE MAX(MIN(MAX(AVG(rt1.c1))))  WHEN TOTAL(SUM(COUNT(AVG(rt1.c3)))) THEN ((rt1.c2) BETWEEN (AVG(COUNT(*))) AND (rt1.c0)) WHEN ((TOTAL(rt1.c1))|(rt1.c3)) THEN CAST(0.40907198365731834 AS BLOB) WHEN ((SUM(rt1.c3))IS(rt1.c1)) THEN SUM(NULL) ELSE COUNT(*) END) ISNULL);
SELECT ALL rt1.c3, rt1.c2, vt0.c0, t0.c0, rt1.c0 FROM t0, v0, vt0 INNER JOIN rt1 ON (((~ (rt1.c2)))|(ABS(rt1.c1)));
SELECT ALL rt1.c3, rt1.c2, vt0.c0, t0.c0, rt1.c0 FROM t0, v0, vt0 INNER JOIN rt1 ON (((~ (rt1.c2)))|(ABS(rt1.c1))) WHERE ((((t0.c0, rt1.c1, rt1.c1)) NOT BETWEEN ((((rt1.c1) IS TRUE), v0.c0 COLLATE BINARY, (rt1.c2 IN ()))) AND ((((v0.c0)=(rt1.c3)), rt1.c2, (((vt0.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c3))))))) UNION ALL SELECT ALL rt1.c3, rt1.c2, vt0.c0, t0.c0, rt1.c0 FROM t0, v0, vt0 INNER JOIN rt1 ON (((~ (rt1.c2)))|(ABS(rt1.c1))) WHERE ((NOT ((((t0.c0, rt1.c1, rt1.c1)) NOT BETWEEN ((((rt1.c1) IS TRUE), v0.c0 COLLATE BINARY, (rt1.c2 IN ()))) AND ((((v0.c0)==(rt1.c3)), rt1.c2, (((vt0.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c3))))))))) UNION ALL SELECT rt1.c3, rt1.c2, vt0.c0, t0.c0, rt1.c0 FROM t0, v0, vt0 INNER JOIN rt1 ON (((~ (rt1.c2)))|(ABS(rt1.c1))) WHERE ((((((t0.c0, rt1.c1, rt1.c1)) NOT BETWEEN ((((rt1.c1) IS TRUE), v0.c0 COLLATE BINARY, (rt1.c2 IN ()))) AND ((((v0.c0)=(rt1.c3)), rt1.c2, (((vt0.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c3))))))) ISNULL));
SELECT ALL rt1.c3, rt1.c2, vt0.c0, t0.c0, rt1.c0 FROM t0, v0, vt0 INNER JOIN rt1 ON (((~ (rt1.c2)))|(ABS(rt1.c1)));
SELECT DISTINCT rt1.c0, rt1.c1, rt1.c2, rt1.c3 FROM v0, rt1;
SELECT DISTINCT rt1.c0, rt1.c1, rt1.c2, rt1.c3 FROM v0, rt1 WHERE ((((rt1.c3))>=((rt1.c1))) COLLATE NOCASE) UNION SELECT DISTINCT rt1.c0, rt1.c1, rt1.c2, rt1.c3 FROM v0, rt1 WHERE ((NOT ((((rt1.c3))>=((rt1.c1))) COLLATE NOCASE))) UNION SELECT DISTINCT rt1.c0, rt1.c1, rt1.c2, rt1.c3 FROM v0, rt1 WHERE ((((((rt1.c3))>=((rt1.c1))) COLLATE NOCASE) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c1, rt1.c2, rt1.c3 FROM v0, rt1;
SELECT v0.c0, rt1.c2, rt1.c0, rt1.c3, t0.c0 FROM v0, t0, rt1 GROUP BY v0.c0, rt1.c2, rt1.c0, rt1.c3, t0.c0;
SELECT ALL v0.c0, rt1.c2, rt1.c0, rt1.c3, t0.c0 FROM v0, t0, rt1 WHERE (((t0.c0) ISNULL)) GROUP BY v0.c0, rt1.c2, rt1.c0, rt1.c3, t0.c0 UNION SELECT v0.c0, rt1.c2, rt1.c0, rt1.c3, t0.c0 FROM v0, t0, rt1 WHERE ((NOT (((t0.c0) ISNULL)))) GROUP BY v0.c0, rt1.c2, rt1.c0, rt1.c3, t0.c0 UNION SELECT ALL v0.c0, rt1.c2, rt1.c0, rt1.c3, t0.c0 FROM v0, t0, rt1 WHERE (((((t0.c0) ISNULL)) ISNULL)) GROUP BY v0.c0, rt1.c2, rt1.c0, rt1.c3, t0.c0;
SELECT v0.c0, rt1.c2, rt1.c0, rt1.c3, t0.c0 FROM v0, t0, rt1 GROUP BY v0.c0, rt1.c2, rt1.c0, rt1.c3, t0.c0;
SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0 HAVING ((((TOTAL(SUM(rt1.c2)))AND(((((((((rt1.c0)OR(rt1.c3)))AND(rt1.c1)))AND(rt1.c1)))AND(GROUP_CONCAT(rt1.c3))))))AND(TOTAL(rt1.c2))) UNION ALL SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0 HAVING (NOT (((((TOTAL(SUM(rt1.c2)))AND(((((((((rt1.c0)OR(rt1.c3)))AND(rt1.c1)))AND(rt1.c1)))AND(GROUP_CONCAT(rt1.c3))))))AND(TOTAL(rt1.c2))))) UNION ALL SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0 HAVING ((((((TOTAL(SUM(rt1.c2)))AND(((((((((rt1.c0)OR(rt1.c3)))AND(rt1.c1)))AND(rt1.c1)))AND(GROUP_CONCAT(rt1.c3))))))AND(TOTAL(rt1.c2)))) ISNULL);
SELECT * FROM t0, v0, vt0;
SELECT * FROM t0, v0, vt0 WHERE (((((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(((t0.c0)>=(t0.c0)))))OR(CASE v0.c0  WHEN t0.c0 THEN t0.c0 WHEN v0.c0 THEN v0.c0 WHEN t0.c0 THEN v0.c0 ELSE v0.c0 END))) UNION ALL SELECT * FROM t0, v0, vt0 WHERE ((NOT (((((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(((t0.c0)>=(t0.c0)))))OR(CASE v0.c0  WHEN t0.c0 THEN t0.c0 WHEN v0.c0 THEN v0.c0 WHEN t0.c0 THEN v0.c0 ELSE v0.c0 END))))) UNION ALL SELECT * FROM t0, v0, vt0 WHERE (((((((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(((t0.c0)>=(t0.c0)))))OR(CASE v0.c0  WHEN t0.c0 THEN t0.c0 WHEN v0.c0 THEN v0.c0 WHEN t0.c0 THEN v0.c0 ELSE v0.c0 END))) ISNULL));
SELECT * FROM t0, v0, vt0;
SELECT DISTINCT vt0.c0 FROM vt0 FULL OUTER JOIN t0 ON ((((+ (t0.c0)), CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((t0.c0)>(t0.c0))))>=((((t0.c0)%(t0.c0)), ((vt0.c0)<=(vt0.c0)), ((t0.c0)AND(vt0.c0)))));
SELECT DISTINCT vt0.c0 FROM vt0 FULL OUTER JOIN t0 ON ((((+ (t0.c0)), CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((t0.c0)>(t0.c0))))>=((((t0.c0)%(t0.c0)), ((vt0.c0)<=(vt0.c0)), ((t0.c0)AND(vt0.c0))))) WHERE (0xffffffffef2cdd1f) UNION SELECT DISTINCT vt0.c0 FROM vt0 FULL OUTER JOIN t0 ON ((((+ (t0.c0)), CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((t0.c0)>(t0.c0))))>=((((t0.c0)%(t0.c0)), ((vt0.c0)<=(vt0.c0)), ((t0.c0)AND(vt0.c0))))) WHERE ((NOT (0Xffffffffef2cdd1f))) UNION SELECT DISTINCT vt0.c0 FROM vt0 FULL OUTER JOIN t0 ON ((((+ (t0.c0)), CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((t0.c0)>(t0.c0))))>=((((t0.c0)%(t0.c0)), ((vt0.c0)<=(vt0.c0)), ((t0.c0)AND(vt0.c0))))) WHERE (((0xffffffffef2cdd1f) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0 FULL OUTER JOIN t0 ON ((((+ (t0.c0)), CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((t0.c0)>(t0.c0))))>=((((t0.c0)%(t0.c0)), ((vt0.c0)<=(vt0.c0)), ((t0.c0)AND(vt0.c0)))));
SELECT rt1.c2, rt1.c0, vt0.c0 FROM rt1, vt0 GROUP BY rt1.c2, rt1.c0, vt0.c0;
SELECT rt1.c2, rt1.c0, vt0.c0 FROM rt1 NOT INDEXED, vt0 WHERE (CAST(((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c1)) AS NUMERIC)) GROUP BY rt1.c2, rt1.c0, vt0.c0 UNION SELECT ALL rt1.c2, rt1.c0, vt0.c0 FROM rt1, vt0 WHERE ((NOT (CAST(((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c1)) AS NUMERIC)))) GROUP BY rt1.c2, rt1.c0, vt0.c0 UNION SELECT ALL rt1.c2, rt1.c0, vt0.c0 FROM rt1, vt0 WHERE (((CAST(((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c1)) AS NUMERIC)) ISNULL)) GROUP BY rt1.c2, rt1.c0, vt0.c0;
SELECT rt1.c2, rt1.c0, vt0.c0 FROM rt1, vt0 GROUP BY rt1.c2, rt1.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING TRIM(MIN(v0.c0), ((TOTAL(MIN(TOTAL(COUNT(*))))) NOT BETWEEN (MIN(v0.c0)) AND (v0.c0))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (TRIM(MIN(v0.c0), ((TOTAL(MIN(TOTAL(COUNT(*))))) NOT BETWEEN (MIN(v0.c0)) AND (v0.c0))))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING ((TRIM(MIN(v0.c0), ((TOTAL(MIN(TOTAL(COUNT(*))))) NOT BETWEEN (MIN(v0.c0)) AND (v0.c0)))) ISNULL);
SELECT vt0.c0, rt1.c2, rt1.c0, t0.c0, rt1.c1, rt1.c3 FROM vt0 FULL OUTER JOIN t0 ON (rt1.c0 IN ()) LEFT OUTER JOIN rt1 ON (~ ((NOT (t0.c0))));
SELECT vt0.c0, rt1.c2, rt1.c0, t0.c0, rt1.c1, rt1.c3 FROM vt0 FULL OUTER JOIN t0 ON (rt1.c0 IN ()) LEFT OUTER JOIN rt1 ON (~ ((NOT (t0.c0)))) WHERE (((0x13a41edb)GLOB(LIKE(rt1.c2, rt1.c1, 'x')))) UNION ALL SELECT vt0.c0, rt1.c2, rt1.c0, t0.c0, rt1.c1, rt1.c3 FROM vt0 FULL OUTER JOIN t0 ON (rt1.c0 IN ()) LEFT OUTER JOIN rt1 ON (~ ((NOT (t0.c0)))) WHERE ((NOT (((0x13a41edb)GLOB(LIKE(rt1.c2, rt1.c1, 'x')))))) UNION ALL SELECT vt0.c0, rt1.c2, rt1.c0, t0.c0, rt1.c1, rt1.c3 FROM vt0 FULL OUTER JOIN t0 ON (rt1.c0 IN ()) LEFT OUTER JOIN rt1 ON (~ ((NOT (t0.c0)))) WHERE (((((0x13a41edb)GLOB(LIKE(rt1.c2, rt1.c1, 'x')))) ISNULL));
SELECT vt0.c0, rt1.c2, rt1.c0, t0.c0, rt1.c1, rt1.c3 FROM vt0 FULL OUTER JOIN t0 ON (rt1.c0 IN ()) LEFT OUTER JOIN rt1 ON (~ ((NOT (t0.c0))));
SELECT DISTINCT rt1.c0, rt1.c3 FROM rt1, t0;
SELECT DISTINCT rt1.c0, rt1.c3 FROM rt1, t0 WHERE (t0.c0) UNION SELECT DISTINCT rt1.c0, rt1.c3 FROM rt1, t0 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT rt1.c0, rt1.c3 FROM rt1, t0 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c3 FROM rt1, t0;
SELECT rt1.c1, rt1.c3 FROM v0 FULL OUTER JOIN rt1 ON (((((((('-1382391092')AND(vt0.c0)))OR('-588816436')))OR(rt1.c2)))OR(((v0.c0)||(rt1.c1)))) INNER JOIN vt0 ON (rt1.c1 IN (vt0.c0)) COLLATE BINARY FULL OUTER JOIN t0 ON (CAST(vt0.c0 AS INTEGER) IN ()) GROUP BY rt1.c1, rt1.c3;
SELECT rt1.c1 FROM rt1, vt0 GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt1, vt0 GROUP BY rt1.c1 HAVING GROUP_CONCAT(GROUP_CONCAT(TOTAL(COUNT(GROUP_CONCAT(MAX(rt1.c2)))))) UNION ALL SELECT ALL rt1.c1 FROM rt1, vt0 GROUP BY rt1.c1 HAVING (NOT (GROUP_CONCAT(GROUP_CONCAT(TOTAL(COUNT(GROUP_CONCAT(MAX(rt1.c2)))))))) UNION ALL SELECT rt1.c1 FROM rt1, vt0 GROUP BY rt1.c1 HAVING ((GROUP_CONCAT(GROUP_CONCAT(TOTAL(COUNT(GROUP_CONCAT(MAX(rt1.c2))))))) ISNULL);
SELECT ALL t0.c0 FROM t0, vt0;
SELECT ALL t0.c0 FROM t0, vt0 WHERE ((((vt0.c0 IN ()))==(((((vt0.c0)OR(t0.c0)))OR(vt0.c0))))) UNION ALL SELECT t0.c0 FROM t0, vt0 WHERE ((NOT ((((vt0.c0 IN ()))=(((((vt0.c0)OR(t0.c0)))OR(vt0.c0))))))) UNION ALL SELECT ALL t0.c0 FROM t0, vt0 WHERE ((((((vt0.c0 IN ()))=(((((vt0.c0)OR(t0.c0)))OR(vt0.c0))))) ISNULL));
SELECT ALL t0.c0 FROM t0, vt0;
SELECT DISTINCT vt0.c0, t0.c0 FROM vt0, t0;
SELECT DISTINCT vt0.c0, t0.c0 FROM vt0, t0 WHERE (CASE vt0.c0  WHEN vt0.c0 THEN 0.9775064819986325 ELSE t0.c0 END COLLATE NOCASE) UNION SELECT DISTINCT vt0.c0, t0.c0 FROM vt0, t0 WHERE ((NOT (CASE vt0.c0  WHEN vt0.c0 THEN 0.9775064819986325 ELSE t0.c0 END COLLATE NOCASE))) UNION SELECT DISTINCT vt0.c0, t0.c0 FROM vt0, t0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN 0.9775064819986325 ELSE t0.c0 END COLLATE NOCASE) ISNULL));
SELECT DISTINCT vt0.c0, t0.c0 FROM vt0, t0;
SELECT rt1.c3, v0.c0, rt1.c1, rt1.c2, rt1.c0, vt0.c0, t0.c0 FROM t0 NOT INDEXED, rt1 INNER JOIN v0 ON ((CAST(rt1.c1 AS BLOB))AND(CASE WHEN rt1.c0 THEN rt1.c0 WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c1 THEN -1347490116 END)) LEFT OUTER JOIN vt0 ON rtreenode(t0.c0, ((v0.c0)*(rt1.c1))) GROUP BY rt1.c3, v0.c0, rt1.c1, rt1.c2, rt1.c0, vt0.c0, t0.c0;
SELECT rt1.c3, v0.c0, rt1.c1, rt1.c2, rt1.c0, vt0.c0, t0.c0 FROM t0, rt1 INNER JOIN v0 ON ((CAST(rt1.c1 AS BLOB))AND(CASE WHEN rt1.c0 THEN rt1.c0 WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c1 THEN -1347490116 END)) LEFT OUTER JOIN vt0 ON rtreenode(t0.c0, ((v0.c0)*(rt1.c1))) WHERE (json_object((rt1.c3 IN ()), ((v0.c0) ISNULL))) GROUP BY rt1.c3, v0.c0, rt1.c1, rt1.c2, rt1.c0, vt0.c0, t0.c0 UNION SELECT rt1.c3, v0.c0, rt1.c1, rt1.c2, rt1.c0, vt0.c0, t0.c0 FROM t0, rt1 INNER JOIN v0 ON ((CAST(rt1.c1 AS BLOB))AND(CASE WHEN rt1.c0 THEN rt1.c0 WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c1 THEN -1347490116 END)) LEFT OUTER JOIN vt0 ON rtreenode(t0.c0, ((v0.c0)*(rt1.c1))) WHERE ((NOT (json_object((rt1.c3 IN ()), ((v0.c0) ISNULL))))) GROUP BY rt1.c3, v0.c0, rt1.c1, rt1.c2, rt1.c0, vt0.c0, t0.c0 UNION SELECT ALL rt1.c3, v0.c0, rt1.c1, rt1.c2, rt1.c0, vt0.c0, t0.c0 FROM t0, rt1 INNER JOIN v0 ON ((CAST(rt1.c1 AS BLOB))AND(CASE WHEN rt1.c0 THEN rt1.c0 WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c1 THEN -1347490116 END)) LEFT OUTER JOIN vt0 ON rtreenode(t0.c0, ((v0.c0)*(rt1.c1))) WHERE (((json_object((rt1.c3 IN ()), ((v0.c0) ISNULL))) ISNULL)) GROUP BY rt1.c3, v0.c0, rt1.c1, rt1.c2, rt1.c0, vt0.c0, t0.c0;
SELECT ALL v0.c0 FROM t0, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM t0, v0 GROUP BY v0.c0 HAVING TOTAL(COUNT(*)) UNION ALL SELECT v0.c0 FROM t0, v0 GROUP BY v0.c0 HAVING (NOT (TOTAL(COUNT(*)))) UNION ALL SELECT v0.c0 FROM t0, v0 GROUP BY v0.c0 HAVING ((TOTAL(COUNT(*))) ISNULL);
SELECT ALL * FROM t0, vt0;
SELECT ALL * FROM t0, vt0 WHERE ((((t0.c0)<<(t0.c0)) IN ())) UNION ALL SELECT * FROM t0, vt0 WHERE ((NOT ((((t0.c0)<<(t0.c0)) IN ())))) UNION ALL SELECT ALL * FROM t0, vt0 WHERE ((((((t0.c0)<<(t0.c0)) IN ())) ISNULL));
SELECT ALL * FROM t0, vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE RTRIM) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE RTRIM))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE RTRIM) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT rt1.c3, v0.c0 FROM rt1, v0 GROUP BY rt1.c3, v0.c0;
SELECT ALL rt1.c3, v0.c0 FROM rt1, v0 WHERE ((~ ((((v0.c0, rt1.c3, '-681834115')) NOT BETWEEN ((rt1.c1, rt1.c0, rt1.c0)) AND ((rt1.c1, v0.c0, rt1.c0)))))) GROUP BY rt1.c3, v0.c0 UNION SELECT ALL rt1.c3, v0.c0 FROM rt1, v0 WHERE ((NOT ((~ ((((v0.c0, rt1.c3, '-681834115')) NOT BETWEEN ((rt1.c1, rt1.c0, rt1.c0)) AND ((rt1.c1, v0.c0, rt1.c0)))))))) GROUP BY rt1.c3, v0.c0 UNION SELECT rt1.c3, v0.c0 FROM rt1, v0 WHERE ((((~ ((((v0.c0, rt1.c3, '-681834115')) NOT BETWEEN ((rt1.c1, rt1.c0, rt1.c0)) AND ((rt1.c1, v0.c0, rt1.c0)))))) ISNULL)) GROUP BY rt1.c3, v0.c0;
SELECT rt1.c3, v0.c0 FROM rt1, v0 GROUP BY rt1.c3, v0.c0;
SELECT rt1.c3, v0.c0 FROM rt1, t0, vt0, v0 GROUP BY rt1.c3, v0.c0;
SELECT rt1.c3, v0.c0 FROM rt1, t0, vt0, v0 GROUP BY rt1.c3, v0.c0 HAVING t0.c0 UNION ALL SELECT rt1.c3, v0.c0 FROM rt1, t0, vt0, v0 GROUP BY rt1.c3, v0.c0 HAVING (NOT (t0.c0)) UNION ALL SELECT rt1.c3, v0.c0 FROM rt1, t0, vt0 NOT INDEXED, v0 GROUP BY rt1.c3, v0.c0 HAVING ((t0.c0) ISNULL);
SELECT rt1.c3, v0.c0 FROM rt1, t0, vt0, v0 GROUP BY rt1.c3, v0.c0;
SELECT rt1.c3, v0.c0 FROM rt1, t0, vt0, v0 GROUP BY rt1.c3, v0.c0 HAVING t0.c0 UNION ALL SELECT rt1.c3, v0.c0 FROM rt1, t0, vt0, v0 GROUP BY rt1.c3, v0.c0 HAVING (NOT (t0.c0)) UNION ALL SELECT rt1.c3, v0.c0 FROM rt1, t0, vt0 NOT INDEXED, v0 GROUP BY rt1.c3, v0.c0 HAVING ((t0.c0) ISNULL);
SELECT rt1.c3, v0.c0 FROM rt1, t0, vt0, v0 GROUP BY rt1.c3, v0.c0;
SELECT rt1.c1, rt1.c3, v0.c0 FROM v0, t0, rt1 RIGHT OUTER JOIN vt0 ON ((((((v0.c0)) BETWEEN ((rt1.c3)) AND ((NULL)))))<(((((rt1.c2))!=((rt1.c1))))));
SELECT rt1.c1, rt1.c3, v0.c0 FROM v0, t0, rt1 RIGHT OUTER JOIN vt0 ON ((((((v0.c0)) BETWEEN ((rt1.c3)) AND ((NULL)))))<(((((rt1.c2))<>((rt1.c1)))))) WHERE (((((rt1.c1) BETWEEN (t0.c0) AND (rt1.c0))) ISNULL)) UNION ALL SELECT ALL rt1.c1, rt1.c3, v0.c0 FROM v0, t0, rt1 RIGHT OUTER JOIN vt0 ON ((((((v0.c0)) BETWEEN ((rt1.c3)) AND ((NULL)))))<(((((rt1.c2))<>((rt1.c1)))))) WHERE ((NOT (((((rt1.c1) BETWEEN (t0.c0) AND (rt1.c0))) ISNULL)))) UNION ALL SELECT ALL rt1.c1, rt1.c3, v0.c0 FROM v0, t0, rt1 RIGHT OUTER JOIN vt0 ON ((((((v0.c0)) BETWEEN ((rt1.c3)) AND ((NULL)))))<(((((rt1.c2))!=((rt1.c1)))))) WHERE (((((((rt1.c1) BETWEEN (t0.c0) AND (rt1.c0))) ISNULL)) ISNULL));
SELECT rt1.c1, rt1.c3, v0.c0 FROM v0, t0, rt1 RIGHT OUTER JOIN vt0 ON ((((((v0.c0)) BETWEEN ((rt1.c3)) AND ((NULL)))))<(((((rt1.c2))!=((rt1.c1))))));
SELECT DISTINCT rt1.c3, rt1.c1, rt1.c2 FROM rt1;
SELECT DISTINCT rt1.c3, rt1.c1, rt1.c2 FROM rt1 WHERE (((((- (rt1.c3))))==((((rt1.c0) NOTNULL))))) UNION SELECT DISTINCT rt1.c3, rt1.c1, rt1.c2 FROM rt1 WHERE ((NOT (((((- (rt1.c3))))=((((rt1.c0) NOTNULL))))))) UNION SELECT DISTINCT rt1.c3, rt1.c1, rt1.c2 FROM rt1 WHERE (((((((- (rt1.c3))))==((((rt1.c0) NOTNULL))))) ISNULL));
SELECT DISTINCT rt1.c3, rt1.c1, rt1.c2 FROM rt1;
SELECT rt1.c0, rt1.c3, rt1.c1, rt1.c2, v0.c0 FROM v0 LEFT OUTER JOIN rt1 ON ((((rt1.c2, v0.c0, v0.c0))<=((rt1.c0, rt1.c0, rt1.c2))) IN ((((rt1.c2))>((rt1.c2))))) GROUP BY rt1.c0, rt1.c3, rt1.c1, rt1.c2, v0.c0;
SELECT ALL rt1.c0, rt1.c3, rt1.c1, rt1.c2, v0.c0 FROM v0 LEFT OUTER JOIN rt1 ON ((((rt1.c2, v0.c0, v0.c0))<=((rt1.c0, rt1.c0, rt1.c2))) IN ((((rt1.c2))>((rt1.c2))))) WHERE (((((((((CAST(rt1.c2 AS REAL))OR(-2011191356)))AND(x'')))AND(((rt1.c1)-(rt1.c3)))))AND((- (rt1.c0))))) GROUP BY rt1.c0, rt1.c3, rt1.c1, rt1.c2, v0.c0 UNION SELECT ALL rt1.c0, rt1.c3, rt1.c1, rt1.c2, v0.c0 FROM v0 LEFT OUTER JOIN rt1 ON ((((rt1.c2, v0.c0, v0.c0))<=((rt1.c0, rt1.c0, rt1.c2))) IN ((((rt1.c2))>((rt1.c2))))) WHERE ((NOT (((((((((CAST(rt1.c2 AS REAL))OR(-2011191356)))AND(x'')))AND(((rt1.c1)-(rt1.c3)))))AND((- (rt1.c0))))))) GROUP BY rt1.c0, rt1.c3, rt1.c1, rt1.c2, v0.c0 UNION SELECT rt1.c0, rt1.c3, rt1.c1, rt1.c2, v0.c0 FROM v0 LEFT OUTER JOIN rt1 ON ((((rt1.c2, v0.c0, v0.c0))<=((rt1.c0, rt1.c0, rt1.c2))) IN ((((rt1.c2))>((rt1.c2))))) WHERE (((((((((((CAST(rt1.c2 AS REAL))OR(-2011191356)))AND(x'')))AND(((rt1.c1)-(rt1.c3)))))AND((- (rt1.c0))))) ISNULL)) GROUP BY rt1.c0, rt1.c3, rt1.c1, rt1.c2, v0.c0;
SELECT rt1.c0, rt1.c3, rt1.c1, rt1.c2, v0.c0 FROM v0 LEFT OUTER JOIN rt1 ON ((((rt1.c2, v0.c0, v0.c0))<=((rt1.c0, rt1.c0, rt1.c2))) IN ((((rt1.c2))>((rt1.c2))))) GROUP BY rt1.c0, rt1.c3, rt1.c1, rt1.c2, v0.c0;
SELECT rt1.c3, rt1.c0, rt1.c2 FROM rt1, t0 GROUP BY rt1.c3, rt1.c0, rt1.c2;
SELECT rt1.c3, rt1.c0, rt1.c2 FROM rt1, t0 GROUP BY rt1.c3, rt1.c0, rt1.c2 HAVING COUNT(*) UNION ALL SELECT rt1.c3, rt1.c0, rt1.c2 FROM rt1, t0 GROUP BY rt1.c3, rt1.c0, rt1.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c3, rt1.c0, rt1.c2 FROM rt1, t0 GROUP BY rt1.c3, rt1.c0, rt1.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c3, rt1.c0, rt1.c2 FROM rt1, t0 GROUP BY rt1.c3, rt1.c0, rt1.c2;
SELECT rt1.c3, rt1.c0, rt1.c2 FROM rt1, t0 GROUP BY rt1.c3, rt1.c0, rt1.c2 HAVING COUNT(*) UNION ALL SELECT rt1.c3, rt1.c0, rt1.c2 FROM rt1, t0 GROUP BY rt1.c3, rt1.c0, rt1.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c3, rt1.c0, rt1.c2 FROM rt1, t0 GROUP BY rt1.c3, rt1.c0, rt1.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c3, rt1.c0, rt1.c2 FROM rt1, t0 GROUP BY rt1.c3, rt1.c0, rt1.c2;
SELECT rt1.c3, rt1.c2, rt1.c1 FROM vt0, rt1, v0, t0;
SELECT rt1.c3, rt1.c2, rt1.c1 FROM vt0, rt1, v0, t0 WHERE ((((+ (rt1.c3)))LIKE(CASE WHEN rt1.c3 THEN rt1.c3 WHEN -792720292 THEN v0.c0 WHEN rt1.c1 THEN rt1.c0 END))) UNION ALL SELECT rt1.c3, rt1.c2, rt1.c1 FROM vt0, rt1, v0, t0 WHERE ((NOT ((((+ (rt1.c3)))LIKE(CASE WHEN rt1.c3 THEN rt1.c3 WHEN -792720292 THEN v0.c0 WHEN rt1.c1 THEN rt1.c0 END))))) UNION ALL SELECT rt1.c3, rt1.c2, rt1.c1 FROM vt0, rt1, v0, t0 WHERE ((((((+ (rt1.c3)))LIKE(CASE WHEN rt1.c3 THEN rt1.c3 WHEN -792720292 THEN v0.c0 WHEN rt1.c1 THEN rt1.c0 END))) ISNULL));
SELECT rt1.c3, rt1.c2, rt1.c1 FROM vt0, rt1, v0, t0;
SELECT DISTINCT rt1.c0, rt1.c3, v0.c0, rt1.c2 FROM v0, rt1;
SELECT DISTINCT rt1.c0, rt1.c3, v0.c0, rt1.c2 FROM v0, rt1 WHERE ((((- (rt1.c0)))>(((rt1.c2)<<(v0.c0))))) UNION SELECT DISTINCT rt1.c0, rt1.c3, v0.c0, rt1.c2 FROM v0, rt1 WHERE ((NOT ((((- (rt1.c0)))>(((rt1.c2)<<(v0.c0))))))) UNION SELECT DISTINCT rt1.c0, rt1.c3, v0.c0, rt1.c2 FROM v0, rt1 WHERE ((((((- (rt1.c0)))>(((rt1.c2)<<(v0.c0))))) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c3, v0.c0, rt1.c2 FROM v0, rt1;
SELECT rt1.c0, rt1.c1 FROM t0 INDEXED BY i30 INNER JOIN rt1 ON CASE ((rt1.c1) ISNULL)  WHEN ((rt1.c1) IS TRUE) THEN x'' END GROUP BY rt1.c0, rt1.c1;
SELECT ALL rt1.c0, rt1.c1 FROM t0 INDEXED BY i30 INNER JOIN rt1 ON CASE ((rt1.c1) ISNULL)  WHEN ((rt1.c1) IS TRUE) THEN x'' END WHERE ((((t0.c0)) NOT BETWEEN ((((((rt1.c0)OR(rt1.c2)))OR(rt1.c0)))) AND ((((t0.c0) BETWEEN (rt1.c0) AND (rt1.c1)))))) GROUP BY rt1.c0, rt1.c1 UNION SELECT ALL rt1.c0, rt1.c1 FROM t0 INDEXED BY i30 INNER JOIN rt1 ON CASE ((rt1.c1) ISNULL)  WHEN ((rt1.c1) IS TRUE) THEN x'' END WHERE ((NOT ((((t0.c0)) NOT BETWEEN ((((((rt1.c0)OR(rt1.c2)))OR(rt1.c0)))) AND ((((t0.c0) BETWEEN (rt1.c0) AND (rt1.c1)))))))) GROUP BY rt1.c0, rt1.c1 UNION SELECT rt1.c0, rt1.c1 FROM t0 INDEXED BY i30 INNER JOIN rt1 ON CASE ((rt1.c1) ISNULL)  WHEN ((rt1.c1) IS TRUE) THEN x'' END WHERE ((((((t0.c0)) NOT BETWEEN ((((((rt1.c0)OR(rt1.c2)))OR(rt1.c0)))) AND ((((t0.c0) BETWEEN (rt1.c0) AND (rt1.c1)))))) ISNULL)) GROUP BY rt1.c0, rt1.c1;
SELECT rt1.c0, rt1.c1 FROM t0 INDEXED BY i30 INNER JOIN rt1 ON CASE ((rt1.c1) ISNULL)  WHEN ((rt1.c1) IS TRUE) THEN x'' END GROUP BY rt1.c0, rt1.c1;
SELECT rt1.c3 FROM v0 RIGHT OUTER JOIN vt0 ON (CAST(rt1.c0 AS BLOB) IN ((((vt0.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))))) LEFT OUTER JOIN rt1 ON (NOT (v0.c0)) COLLATE BINARY GROUP BY rt1.c3;
SELECT ALL SUM(CAST(((0.974442875218477) IS FALSE) AS BLOB)) FROM v0, vt0 ORDER BY ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) IS TRUE)  NULLS FIRST, vt0.c0 ASC;
SELECT ALL t0.c0, rt1.c0, rt1.c3, v0.c0, vt0.c0, rt1.c1, rt1.c2 FROM v0, rt1 INNER JOIN vt0 ON (- (v0.c0)) INNER JOIN t0 ON ((('0.18480214660029826'))==(((((rt1.c2))>=((rt1.c0))))));
SELECT t0.c0, rt1.c0, rt1.c3, v0.c0, vt0.c0, rt1.c1, rt1.c2 FROM v0, rt1 INNER JOIN vt0 ON (- (v0.c0)) INNER JOIN t0 ON ((('0.18480214660029826'))=(((((rt1.c2))>=((rt1.c0)))))) WHERE (UPPER(LIKELIHOOD(t0.c0, 0.494503814491699))) UNION ALL SELECT ALL t0.c0, rt1.c0, rt1.c3, v0.c0, vt0.c0, rt1.c1, rt1.c2 FROM v0, rt1 INNER JOIN vt0 ON (- (v0.c0)) INNER JOIN t0 ON ((('0.18480214660029826'))=(((((rt1.c2))>=((rt1.c0)))))) WHERE ((NOT (UPPER(LIKELIHOOD(t0.c0, 0.494503814491699))))) UNION ALL SELECT ALL t0.c0, rt1.c0, rt1.c3, v0.c0, vt0.c0, rt1.c1, rt1.c2 FROM v0, rt1 INNER JOIN vt0 ON (- (v0.c0)) INNER JOIN t0 ON ((('0.18480214660029826'))==(((((rt1.c2))>=((rt1.c0)))))) WHERE (((UPPER(LIKELIHOOD(t0.c0, 0.494503814491699))) ISNULL));
SELECT ALL t0.c0, rt1.c0, rt1.c3, v0.c0, vt0.c0, rt1.c1, rt1.c2 FROM v0, rt1 INNER JOIN vt0 ON (- (v0.c0)) INNER JOIN t0 ON ((('0.18480214660029826'))==(((((rt1.c2))>=((rt1.c0))))));
SELECT DISTINCT * FROM v0 NATURAL JOIN rt1;
SELECT DISTINCT * FROM v0 NATURAL JOIN rt1 WHERE (CAST(((v0.c0)IS NOT(rt1.c2)) AS NUMERIC)) UNION SELECT DISTINCT * FROM v0 NATURAL JOIN rt1 WHERE ((NOT (CAST(((v0.c0)IS NOT(rt1.c2)) AS NUMERIC)))) UNION SELECT DISTINCT * FROM v0 NATURAL JOIN rt1 WHERE (((CAST(((v0.c0)IS NOT(rt1.c2)) AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM v0 NATURAL JOIN rt1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((((((((((NOT (v0.c0)))OR(x'')))AND(v0.c0)))OR(((v0.c0)OR(v0.c0)))))OR(((((v0.c0)AND(v0.c0)))OR(v0.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((((((((NOT (v0.c0)))OR(x'')))AND(v0.c0)))OR(((v0.c0)OR(v0.c0)))))OR(((((v0.c0)AND(v0.c0)))OR(v0.c0))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((((((((((NOT (v0.c0)))OR(x'')))AND(v0.c0)))OR(((v0.c0)OR(v0.c0)))))OR(((((v0.c0)AND(v0.c0)))OR(v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt1.c3 FROM rt1, v0 GROUP BY rt1.c3;
SELECT ALL rt1.c3 FROM rt1, v0 GROUP BY rt1.c3 HAVING SUM(((rt1.c1)*(v0.c0))) UNION ALL SELECT ALL rt1.c3 FROM rt1, v0 GROUP BY rt1.c3 HAVING (NOT (SUM(((rt1.c1)*(v0.c0))))) UNION ALL SELECT rt1.c3 FROM rt1, v0 GROUP BY rt1.c3 HAVING ((SUM(((rt1.c1)*(v0.c0)))) ISNULL);
SELECT rt1.c3 FROM rt1, v0 GROUP BY rt1.c3;
SELECT ALL rt1.c3 FROM rt1, v0 GROUP BY rt1.c3 HAVING SUM(((rt1.c1)*(v0.c0))) UNION ALL SELECT ALL rt1.c3 FROM rt1, v0 GROUP BY rt1.c3 HAVING (NOT (SUM(((rt1.c1)*(v0.c0))))) UNION ALL SELECT rt1.c3 FROM rt1, v0 GROUP BY rt1.c3 HAVING ((SUM(((rt1.c1)*(v0.c0)))) ISNULL);
SELECT rt1.c3 FROM rt1, v0 GROUP BY rt1.c3;
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE (NULL) ORDER BY ((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))) IN (CASE WHEN t0.c0 THEN t0.c0 END, t0.c0)), (((LIKELIHOOD(t0.c0, 0.8929708814629432)))<((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) ASC, CASE WHEN ((t0.c0)%(t0.c0)) THEN ((NULL)<=(t0.c0)) END ASC;
SELECT * FROM t0 WHERE ((NOT (NULL))) ORDER BY ((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))) IN (CASE WHEN t0.c0 THEN t0.c0 END, t0.c0)), (((LIKELIHOOD(t0.c0, 0.8929708814629432)))<((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) ASC, CASE WHEN ((t0.c0)%(t0.c0)) THEN ((NULL)<=(t0.c0)) END ASC;
SELECT * FROM t0 WHERE (((NULL) ISNULL)) ORDER BY ((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))) IN (CASE WHEN t0.c0 THEN t0.c0 END, t0.c0)), (((LIKELIHOOD(t0.c0, 0.8929708814629432)))<((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) ASC, CASE WHEN ((t0.c0)%(t0.c0)) THEN ((NULL)<=(t0.c0)) END ASC;
SELECT * FROM t0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (v0.c0) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT * FROM v0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE (CASE TRIM(DISTINCT vt0.c0)  WHEN CAST(vt0.c0 AS INTEGER) THEN NULL WHEN v0.c0 THEN v0.c0 WHEN (vt0.c0 IN ()) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)) END) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM vt0, v0 WHERE ((NOT (CASE TRIM(DISTINCT vt0.c0)  WHEN CAST(vt0.c0 AS INTEGER) THEN NULL WHEN v0.c0 THEN v0.c0 WHEN (vt0.c0 IN ()) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)) END))) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM vt0, v0 WHERE (((CASE TRIM(DISTINCT vt0.c0)  WHEN CAST(vt0.c0 AS INTEGER) THEN NULL WHEN v0.c0 THEN v0.c0 WHEN (vt0.c0 IN ()) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)) END) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(vt0.c0) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(vt0.c0)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(vt0.c0) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(vt0.c0)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL TOTAL(((((v0.c0)||(rt1.c3)))<(((((rt1.c2)OR(v0.c0)))OR('-1416202585'))))) FROM vt0, v0, rt1;
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (((CAST(v0.c0 AS NUMERIC)) NOTNULL)) UNION ALL SELECT * FROM v0 WHERE ((NOT (((CAST(v0.c0 AS NUMERIC)) NOTNULL)))) UNION ALL SELECT ALL * FROM v0 NOT INDEXED WHERE (((((CAST(v0.c0 AS NUMERIC)) NOTNULL)) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT rt1.c1, rt1.c2, rt1.c3 FROM v0, rt1;
SELECT DISTINCT rt1.c1, rt1.c2, rt1.c3 FROM v0, rt1 WHERE (CASE WHEN ((rt1.c3) NOTNULL) THEN json_insert(rt1.c2, rt1.c3, rt1.c3, rt1.c3, '329522907') END) UNION SELECT DISTINCT rt1.c1, rt1.c2, rt1.c3 FROM v0, rt1 WHERE ((NOT (CASE WHEN ((rt1.c3) NOTNULL) THEN json_insert(rt1.c2, rt1.c3, rt1.c3, rt1.c3, '329522907') END))) UNION SELECT DISTINCT rt1.c1, rt1.c2, rt1.c3 FROM v0, rt1 WHERE (((CASE WHEN ((rt1.c3) NOTNULL) THEN json_insert(rt1.c2, rt1.c3, rt1.c3, rt1.c3, '329522907') END) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c2, rt1.c3 FROM v0, rt1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ('-721449572') GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ('-721449572'))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((('-721449572') ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT t0.c0, rt1.c3, rt1.c0, v0.c0, rt1.c1 FROM rt1, t0, v0 GROUP BY t0.c0, rt1.c3, rt1.c0, v0.c0, rt1.c1;
SELECT ALL t0.c0, rt1.c3, rt1.c0, v0.c0, rt1.c1 FROM rt1, t0, v0 GROUP BY t0.c0, rt1.c3, rt1.c0, v0.c0, rt1.c1 HAVING MAX(CASE v0.c0  WHEN COUNT(*) THEN rt1.c1 WHEN GROUP_CONCAT(SUM(GROUP_CONCAT(t0.c0))) THEN '[0A ' WHEN v0.c0 THEN rt1.c2 END) UNION ALL SELECT ALL t0.c0, rt1.c3, rt1.c0, v0.c0, rt1.c1 FROM rt1, t0, v0 GROUP BY t0.c0, rt1.c3, rt1.c0, v0.c0, rt1.c1 HAVING (NOT (MAX(CASE v0.c0  WHEN COUNT(*) THEN rt1.c1 WHEN GROUP_CONCAT(SUM(GROUP_CONCAT(t0.c0))) THEN '[0A ' WHEN v0.c0 THEN rt1.c2 END))) UNION ALL SELECT t0.c0, rt1.c3, rt1.c0, v0.c0, rt1.c1 FROM rt1, t0, v0 GROUP BY t0.c0, rt1.c3, rt1.c0, v0.c0, rt1.c1 HAVING ((MAX(CASE v0.c0  WHEN COUNT(*) THEN rt1.c1 WHEN GROUP_CONCAT(SUM(GROUP_CONCAT(t0.c0))) THEN '[0A ' WHEN v0.c0 THEN rt1.c2 END)) ISNULL);
SELECT ALL * FROM vt0, v0, t0;
SELECT * FROM vt0, v0, t0 WHERE (CAST(v0.c0 COLLATE BINARY AS INTEGER)) UNION ALL SELECT ALL * FROM vt0, v0, t0 WHERE ((NOT (CAST(v0.c0 COLLATE BINARY AS INTEGER)))) UNION ALL SELECT ALL * FROM vt0, v0, t0 WHERE (((CAST(v0.c0 COLLATE BINARY AS INTEGER)) ISNULL));
SELECT ALL * FROM vt0, v0, t0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (CASE WHEN ((rt1.c3) IS TRUE) THEN rt1.c0 COLLATE RTRIM WHEN rt1.c1 THEN ((rt1.c3) NOTNULL) WHEN ((rt1.c1)OR(rt1.c0)) THEN ((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2)) ELSE ((rt1.c3)&(rt1.c1)) END) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (CASE WHEN ((rt1.c3) IS TRUE) THEN rt1.c0 COLLATE RTRIM WHEN rt1.c1 THEN ((rt1.c3) NOTNULL) WHEN ((rt1.c1)OR(rt1.c0)) THEN ((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2)) ELSE ((rt1.c3)&(rt1.c1)) END))) UNION SELECT DISTINCT * FROM rt1 WHERE (((CASE WHEN ((rt1.c3) IS TRUE) THEN rt1.c0 COLLATE RTRIM WHEN rt1.c1 THEN ((rt1.c3) NOTNULL) WHEN ((rt1.c1)OR(rt1.c0)) THEN ((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2)) ELSE ((rt1.c3)&(rt1.c1)) END) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL t0.c0, v0.c0 FROM v0 NATURAL JOIN t0 GROUP BY t0.c0, v0.c0;
SELECT t0.c0, v0.c0 FROM v0 NATURAL JOIN t0 WHERE (LIKELIHOOD(((-1545490565) ISNULL), 0.6335419501612692)) GROUP BY t0.c0, v0.c0 UNION SELECT t0.c0, v0.c0 FROM v0 NATURAL JOIN t0 WHERE ((NOT (LIKELIHOOD(((-1545490565) ISNULL), 0.6335419501612692)))) GROUP BY t0.c0, v0.c0 UNION SELECT t0.c0, v0.c0 FROM v0 NATURAL JOIN t0 WHERE (((LIKELIHOOD(((-1545490565) ISNULL), 0.6335419501612692)) ISNULL)) GROUP BY t0.c0, v0.c0;
SELECT ALL t0.c0, v0.c0 FROM v0 NATURAL JOIN t0 GROUP BY t0.c0, v0.c0;
SELECT rt1.c0, t0.c0, rt1.c2, rt1.c3, vt0.c0 FROM vt0, t0, v0, rt1 GROUP BY rt1.c0, t0.c0, rt1.c2, rt1.c3, vt0.c0;
SELECT ALL rt1.c0, t0.c0, rt1.c2, rt1.c3, vt0.c0 FROM vt0, t0, v0, rt1 GROUP BY rt1.c0, t0.c0, rt1.c2, rt1.c3, vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c0, t0.c0, rt1.c2, rt1.c3, vt0.c0 FROM vt0, t0, v0, rt1 GROUP BY rt1.c0, t0.c0, rt1.c2, rt1.c3, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c0, t0.c0, rt1.c2, rt1.c3, vt0.c0 FROM vt0, t0, v0, rt1 GROUP BY rt1.c0, t0.c0, rt1.c2, rt1.c3, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c0, t0.c0, rt1.c2, rt1.c3, vt0.c0 FROM vt0, t0, v0, rt1 GROUP BY rt1.c0, t0.c0, rt1.c2, rt1.c3, vt0.c0;
SELECT ALL rt1.c0, t0.c0, rt1.c2, rt1.c3, vt0.c0 FROM vt0, t0, v0, rt1 GROUP BY rt1.c0, t0.c0, rt1.c2, rt1.c3, vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c0, t0.c0, rt1.c2, rt1.c3, vt0.c0 FROM vt0, t0, v0, rt1 GROUP BY rt1.c0, t0.c0, rt1.c2, rt1.c3, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c0, t0.c0, rt1.c2, rt1.c3, vt0.c0 FROM vt0, t0, v0, rt1 GROUP BY rt1.c0, t0.c0, rt1.c2, rt1.c3, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c0, t0.c0, rt1.c2, rt1.c3, vt0.c0 FROM vt0, t0, v0, rt1 GROUP BY rt1.c0, t0.c0, rt1.c2, rt1.c3, vt0.c0;
SELECT v0.c0, rt1.c2 FROM v0, vt0, rt1, t0;
SELECT v0.c0, rt1.c2 FROM v0, vt0, rt1, t0 WHERE (CASE WHEN CASE WHEN rt1.c2 THEN rt1.c0 END THEN ((rt1.c3) IS FALSE) ELSE ((v0.c0) NOT NULL) END) UNION ALL SELECT ALL v0.c0, rt1.c2 FROM v0, vt0, rt1, t0 WHERE ((NOT (CASE WHEN CASE WHEN rt1.c2 THEN rt1.c0 END THEN ((rt1.c3) IS FALSE) ELSE ((v0.c0) NOT NULL) END))) UNION ALL SELECT ALL v0.c0, rt1.c2 FROM v0, vt0, rt1, t0 WHERE (((CASE WHEN CASE WHEN rt1.c2 THEN rt1.c0 END THEN ((rt1.c3) IS FALSE) ELSE ((v0.c0) NOT NULL) END) ISNULL));
SELECT v0.c0, rt1.c2 FROM v0, vt0, rt1, t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((((t0.c0 IN (t0.c0)))LIKE(ABS(DISTINCT 'Ph\''>듀')))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((((t0.c0 IN (t0.c0)))LIKE(ABS(DISTINCT 'Ph\''>듀')))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((((t0.c0 IN (t0.c0)))LIKE(ABS(DISTINCT 'Ph\''>듀')))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT v0.c0 FROM vt0, v0 RIGHT OUTER JOIN t0 ON CASE CASE t0.c0  WHEN '-1344801292' THEN v0.c0 WHEN 0Xfffffffffb045b76 THEN v0.c0 WHEN 0x1dd6230c THEN v0.c0 ELSE v0.c0 END  WHEN ((v0.c0)OR(v0.c0)) THEN ((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((v0.c0)<>(t0.c0)) END GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 RIGHT OUTER JOIN t0 ON CASE CASE t0.c0  WHEN '-1344801292' THEN v0.c0 WHEN 0Xfffffffffb045b76 THEN v0.c0 WHEN 0x1dd6230c THEN v0.c0 ELSE v0.c0 END  WHEN ((v0.c0)OR(v0.c0)) THEN ((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((v0.c0)!=(t0.c0)) END WHERE ((+ (CAST(v0.c0 AS NUMERIC)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt0, v0 RIGHT OUTER JOIN t0 ON CASE CASE t0.c0  WHEN '-1344801292' THEN v0.c0 WHEN 0Xfffffffffb045b76 THEN v0.c0 WHEN 0x1dd6230c THEN v0.c0 ELSE v0.c0 END  WHEN ((v0.c0)OR(v0.c0)) THEN ((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((v0.c0)<>(t0.c0)) END WHERE ((NOT ((+ (CAST(v0.c0 AS NUMERIC)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt0, v0 RIGHT OUTER JOIN t0 ON CASE CASE t0.c0  WHEN '-1344801292' THEN v0.c0 WHEN 0Xfffffffffb045b76 THEN v0.c0 WHEN 0X1dd6230c THEN v0.c0 ELSE v0.c0 END  WHEN ((v0.c0)OR(v0.c0)) THEN ((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((v0.c0)!=(t0.c0)) END WHERE ((((+ (CAST(v0.c0 AS NUMERIC)))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 RIGHT OUTER JOIN t0 ON CASE CASE t0.c0  WHEN '-1344801292' THEN v0.c0 WHEN 0Xfffffffffb045b76 THEN v0.c0 WHEN 0x1dd6230c THEN v0.c0 ELSE v0.c0 END  WHEN ((v0.c0)OR(v0.c0)) THEN ((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((v0.c0)<>(t0.c0)) END GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL(v0.c0)) IS FALSE) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((TOTAL(v0.c0)) IS FALSE))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((TOTAL(v0.c0)) IS FALSE)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL(v0.c0)) IS FALSE) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((TOTAL(v0.c0)) IS FALSE))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((TOTAL(v0.c0)) IS FALSE)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT * FROM rt1 INNER JOIN t0 ON CAST(((t0.c0)||(rt1.c3)) AS REAL) RIGHT OUTER JOIN vt0 ON (~ (json_valid(vt0.c0)));
SELECT ALL * FROM rt1 INNER JOIN t0 ON CAST(((t0.c0)||(rt1.c3)) AS REAL) RIGHT OUTER JOIN vt0 ON (~ (json_valid(vt0.c0))) WHERE (CASE rt1.c0  WHEN rt1.c3 THEN rt1.c1 END COLLATE BINARY) UNION ALL SELECT * FROM rt1 INNER JOIN t0 ON CAST(((t0.c0)||(rt1.c3)) AS REAL) RIGHT OUTER JOIN vt0 ON (~ (json_valid(vt0.c0))) WHERE ((NOT (CASE rt1.c0  WHEN rt1.c3 THEN rt1.c1 END COLLATE BINARY))) UNION ALL SELECT ALL * FROM rt1 INNER JOIN t0 ON CAST(((t0.c0)||(rt1.c3)) AS REAL) RIGHT OUTER JOIN vt0 ON (~ (json_valid(vt0.c0))) WHERE (((CASE rt1.c0  WHEN rt1.c3 THEN rt1.c1 END COLLATE BINARY) ISNULL));
SELECT * FROM rt1 INNER JOIN t0 ON CAST(((t0.c0)||(rt1.c3)) AS REAL) RIGHT OUTER JOIN vt0 ON (~ (json_valid(vt0.c0)));
SELECT DISTINCT v0.c0 FROM v0 INNER JOIN vt0 ON (((v0.c0)) BETWEEN ((CAST(vt0.c0 AS TEXT))) AND ((((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT DISTINCT v0.c0 FROM v0 INNER JOIN vt0 ON (((v0.c0)) BETWEEN ((CAST(vt0.c0 AS TEXT))) AND ((((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) WHERE (CASE WHEN CAST(vt0.c0 AS BLOB) THEN CAST(x'' AS BLOB) END) UNION SELECT DISTINCT v0.c0 FROM v0 INNER JOIN vt0 ON (((v0.c0)) BETWEEN ((CAST(vt0.c0 AS TEXT))) AND ((((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) WHERE ((NOT (CASE WHEN CAST(vt0.c0 AS BLOB) THEN CAST(x'' AS BLOB) END))) UNION SELECT DISTINCT v0.c0 FROM v0 INNER JOIN vt0 ON (((v0.c0)) BETWEEN ((CAST(vt0.c0 AS TEXT))) AND ((((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) WHERE (((CASE WHEN CAST(vt0.c0 AS BLOB) THEN CAST(x'' AS BLOB) END) ISNULL));
SELECT DISTINCT v0.c0 FROM v0 INNER JOIN vt0 ON (((v0.c0)) BETWEEN ((CAST(vt0.c0 AS TEXT))) AND ((((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT ALL rt1.c2, rt1.c1, rt1.c3, rt1.c0, t0.c0 FROM rt1, t0 GROUP BY rt1.c2, rt1.c1, rt1.c3, rt1.c0, t0.c0;
SELECT rt1.c2, rt1.c1, rt1.c3, rt1.c0, t0.c0 FROM rt1, t0 WHERE (0.5526438048659515) GROUP BY rt1.c2, rt1.c1, rt1.c3, rt1.c0, t0.c0 UNION SELECT ALL rt1.c2, rt1.c1, rt1.c3, rt1.c0, t0.c0 FROM rt1, t0 WHERE ((NOT (0.5526438048659515))) GROUP BY rt1.c2, rt1.c1, rt1.c3, rt1.c0, t0.c0 UNION SELECT rt1.c2, rt1.c1, rt1.c3, rt1.c0, t0.c0 FROM rt1, t0 WHERE (((0.5526438048659515) ISNULL)) GROUP BY rt1.c2, rt1.c1, rt1.c3, rt1.c0, t0.c0;
SELECT ALL rt1.c2, rt1.c1, rt1.c3, rt1.c0, t0.c0 FROM rt1, t0 GROUP BY rt1.c2, rt1.c1, rt1.c3, rt1.c0, t0.c0;
SELECT rt1.c3, vt0.c0, rt1.c2, rt1.c0, t0.c0, rt1.c1 FROM vt0, t0, rt1 GROUP BY rt1.c3, vt0.c0, rt1.c2, rt1.c0, t0.c0, rt1.c1;
SELECT rt1.c3, vt0.c0, rt1.c2, rt1.c0, t0.c0, rt1.c1 FROM vt0, t0, rt1 GROUP BY rt1.c3, vt0.c0, rt1.c2, rt1.c0, t0.c0, rt1.c1 HAVING ((LOWER(GROUP_CONCAT(GROUP_CONCAT(MIN(vt0.c0)))))LIKE(SUM(SUM(vt0.c0)))) UNION ALL SELECT ALL rt1.c3, vt0.c0, rt1.c2, rt1.c0, t0.c0, rt1.c1 FROM vt0, t0, rt1 GROUP BY rt1.c3, vt0.c0, rt1.c2, rt1.c0, t0.c0, rt1.c1 HAVING (NOT (((LOWER(GROUP_CONCAT(GROUP_CONCAT(MIN(vt0.c0)))))LIKE(SUM(SUM(vt0.c0)))))) UNION ALL SELECT ALL rt1.c3, vt0.c0, rt1.c2, rt1.c0, t0.c0, rt1.c1 FROM vt0, t0, rt1 GROUP BY rt1.c3, vt0.c0, rt1.c2, rt1.c0, t0.c0, rt1.c1 HAVING ((((LOWER(GROUP_CONCAT(GROUP_CONCAT(MIN(vt0.c0)))))LIKE(SUM(SUM(vt0.c0))))) ISNULL);
SELECT * FROM v0, vt0, t0, rt1;
SELECT ALL * FROM v0, vt0, t0, rt1 WHERE (rt1.c3) UNION ALL SELECT * FROM v0, vt0, t0, rt1 WHERE ((NOT (rt1.c3))) UNION ALL SELECT * FROM v0, vt0, t0, rt1 WHERE (((rt1.c3) ISNULL));
SELECT * FROM v0, vt0, t0, rt1;
SELECT DISTINCT * FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0 WHERE (NULL) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM vt0 NOT INDEXED, t0 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM vt0, t0;
SELECT ALL v0.c0, rt1.c1, rt1.c2, rt1.c0, vt0.c0, t0.c0 FROM t0, v0, rt1, vt0 GROUP BY v0.c0, rt1.c1, rt1.c2, rt1.c0, vt0.c0, t0.c0;
SELECT v0.c0, rt1.c1, rt1.c2, rt1.c0, vt0.c0, t0.c0 FROM t0, v0, rt1, vt0 WHERE ((- (((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c3))))) GROUP BY v0.c0, rt1.c1, rt1.c2, rt1.c0, vt0.c0, t0.c0 UNION SELECT v0.c0, rt1.c1, rt1.c2, rt1.c0, vt0.c0, t0.c0 FROM t0, v0, rt1, vt0 WHERE ((NOT ((- (((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c3))))))) GROUP BY v0.c0, rt1.c1, rt1.c2, rt1.c0, vt0.c0, t0.c0 UNION SELECT ALL v0.c0, rt1.c1, rt1.c2, rt1.c0, vt0.c0, t0.c0 FROM t0, v0, rt1, vt0 WHERE ((((- (((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c3))))) ISNULL)) GROUP BY v0.c0, rt1.c1, rt1.c2, rt1.c0, vt0.c0, t0.c0;
SELECT ALL v0.c0, rt1.c1, rt1.c2, rt1.c0, vt0.c0, t0.c0 FROM t0, v0, rt1, vt0 GROUP BY v0.c0, rt1.c1, rt1.c2, rt1.c0, vt0.c0, t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (+ ('')) COLLATE RTRIM UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ((+ ('')) COLLATE RTRIM)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((+ ('')) COLLATE RTRIM) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (+ ('')) COLLATE RTRIM UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ((+ ('')) COLLATE RTRIM)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((+ ('')) COLLATE RTRIM) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT * FROM vt0, t0, rt1;
SELECT ALL * FROM vt0, t0, rt1 WHERE ((CAST(t0.c0 AS BLOB) IN ())) UNION ALL SELECT ALL * FROM vt0, t0, rt1 WHERE ((NOT ((CAST(t0.c0 AS BLOB) IN ())))) UNION ALL SELECT ALL * FROM vt0, t0, rt1 WHERE ((((CAST(t0.c0 AS BLOB) IN ())) ISNULL));
SELECT * FROM vt0, t0, rt1;
SELECT DISTINCT rt1.c1, vt0.c0, rt1.c3, t0.c0, rt1.c0 FROM t0, rt1, v0, vt0;
SELECT DISTINCT rt1.c1, vt0.c0, rt1.c3, t0.c0, rt1.c0 FROM t0, rt1, v0, vt0 WHERE ((((rt1.c3, rt1.c1, v0.c0)) NOT BETWEEN ((((((rt1.c2)AND(rt1.c0)))AND(v0.c0)), ((rt1.c3) BETWEEN (rt1.c2) AND (v0.c0)), (((rt1.c0)) BETWEEN ((vt0.c0)) AND ((rt1.c1))))) AND ((((rt1.c1)<<(rt1.c0)), (~ (t0.c0)), v0.c0)))) UNION SELECT DISTINCT rt1.c1, vt0.c0, rt1.c3, t0.c0, rt1.c0 FROM t0, rt1, v0, vt0 WHERE ((NOT ((((rt1.c3, rt1.c1, v0.c0)) NOT BETWEEN ((((((rt1.c2)AND(rt1.c0)))AND(v0.c0)), ((rt1.c3) BETWEEN (rt1.c2) AND (v0.c0)), (((rt1.c0)) BETWEEN ((vt0.c0)) AND ((rt1.c1))))) AND ((((rt1.c1)<<(rt1.c0)), (~ (t0.c0)), v0.c0)))))) UNION SELECT DISTINCT rt1.c1, vt0.c0, rt1.c3, t0.c0, rt1.c0 FROM t0, rt1, v0, vt0 WHERE ((((((rt1.c3, rt1.c1, v0.c0)) NOT BETWEEN ((((((rt1.c2)AND(rt1.c0)))AND(v0.c0)), ((rt1.c3) BETWEEN (rt1.c2) AND (v0.c0)), (((rt1.c0)) BETWEEN ((vt0.c0)) AND ((rt1.c1))))) AND ((((rt1.c1)<<(rt1.c0)), (~ (t0.c0)), v0.c0)))) ISNULL));
SELECT DISTINCT rt1.c1, vt0.c0, rt1.c3, t0.c0, rt1.c0 FROM t0, rt1, v0, vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((INSTR(vt0.c0, vt0.c0)) NOT NULL)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((INSTR(vt0.c0, vt0.c0)) NOT NULL)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((INSTR(vt0.c0, vt0.c0)) NOT NULL)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt1.c2, rt1.c0, vt0.c0, v0.c0 FROM t0 INDEXED BY i30, rt1 RIGHT OUTER JOIN vt0 ON '' COLLATE RTRIM INNER JOIN v0 ON (((NOT (rt1.c2))) NOTNULL) GROUP BY rt1.c2, rt1.c0, vt0.c0, v0.c0;
SELECT rt1.c2, rt1.c0, vt0.c0, v0.c0 FROM t0 INDEXED BY i30, rt1 RIGHT OUTER JOIN vt0 ON '' COLLATE RTRIM INNER JOIN v0 ON (((NOT (rt1.c2))) NOTNULL) GROUP BY rt1.c2, rt1.c0, vt0.c0, v0.c0 HAVING GROUP_CONCAT(COUNT(*)) UNION ALL SELECT ALL rt1.c2, rt1.c0, vt0.c0, v0.c0 FROM t0 INDEXED BY i30, rt1 RIGHT OUTER JOIN vt0 ON '' COLLATE RTRIM INNER JOIN v0 ON (((NOT (rt1.c2))) NOTNULL) GROUP BY rt1.c2, rt1.c0, vt0.c0, v0.c0 HAVING (NOT (GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT ALL rt1.c2, rt1.c0, vt0.c0, v0.c0 FROM t0 INDEXED BY i30, rt1 RIGHT OUTER JOIN vt0 ON '' COLLATE RTRIM INNER JOIN v0 ON (((NOT (rt1.c2))) NOTNULL) GROUP BY rt1.c2, rt1.c0, vt0.c0, v0.c0 HAVING ((GROUP_CONCAT(COUNT(*))) ISNULL);
SELECT rt1.c1, rt1.c0, rt1.c3 FROM rt1;
SELECT ALL rt1.c1, rt1.c0, rt1.c3 FROM rt1 WHERE (((((rt1.c1)|(rt1.c2)))IS(((rt1.c2) NOT BETWEEN (NULL) AND (rt1.c2))))) UNION ALL SELECT ALL rt1.c1, rt1.c0, rt1.c3 FROM rt1 WHERE ((NOT (((((rt1.c1)|(rt1.c2)))IS(((rt1.c2) NOT BETWEEN (NULL) AND (rt1.c2))))))) UNION ALL SELECT rt1.c1, rt1.c0, rt1.c3 FROM rt1 WHERE (((((((rt1.c1)|(rt1.c2)))IS(((rt1.c2) NOT BETWEEN (NULL) AND (rt1.c2))))) ISNULL));
SELECT rt1.c1, rt1.c0, rt1.c3 FROM rt1;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (CAST(CAST(v0.c0 AS NUMERIC) AS NUMERIC)) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (CAST(CAST(v0.c0 AS NUMERIC) AS NUMERIC)))) UNION SELECT DISTINCT * FROM v0 WHERE (((CAST(CAST(v0.c0 AS NUMERIC) AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ((((('1273211354') IS FALSE))<>(t0.c0 COLLATE RTRIM))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((((('1273211354') IS FALSE))<>(t0.c0 COLLATE RTRIM))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((((((('1273211354') IS FALSE))!=(t0.c0 COLLATE RTRIM))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING GROUP_CONCAT(COUNT(COUNT(*))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (GROUP_CONCAT(COUNT(COUNT(*))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((GROUP_CONCAT(COUNT(COUNT(*)))) ISNULL);
SELECT ALL MAX((((vt0.c0 COLLATE BINARY, v0.c0, CASE rt1.c0  WHEN vt0.c0 THEN rt1.c2 END))<(((((rt1.c2, vt0.c0, rt1.c1)) NOT BETWEEN ((rt1.c0, x'', rt1.c1)) AND ((rt1.c2, rt1.c2, -2.121725484E9))), vt0.c0, CAST(NULL AS NUMERIC))))) FROM v0, vt0, rt1, t0;
SELECT * FROM t0, vt0, v0;
SELECT ALL * FROM t0, vt0, v0 WHERE ((NOT (v0.c0))) UNION ALL SELECT * FROM t0, vt0, v0 WHERE ((NOT ((NOT (v0.c0))))) UNION ALL SELECT ALL * FROM t0, vt0, v0 WHERE ((((NOT (v0.c0))) ISNULL));
SELECT * FROM t0, vt0, v0;
SELECT DISTINCT rt1.c1 FROM v0 RIGHT OUTER JOIN rt1 ON TRIM(CAST(rt1.c1 AS BLOB), (- (rt1.c2)));
SELECT DISTINCT rt1.c1 FROM v0 RIGHT OUTER JOIN rt1 ON TRIM(CAST(rt1.c1 AS BLOB), (- (rt1.c2))) WHERE ((((rt1.c3, rt1.c1, rt1.c0)) NOT BETWEEN ((x'', (rt1.c0 IN ()), (((rt1.c3)) BETWEEN ((rt1.c1)) AND ((rt1.c0))))) AND (((((v0.c0)) NOT BETWEEN ((rt1.c2)) AND ((v0.c0))), CAST(rt1.c3 AS REAL), LIKELY(DISTINCT rt1.c2))))) UNION SELECT DISTINCT rt1.c1 FROM v0 RIGHT OUTER JOIN rt1 ON TRIM(CAST(rt1.c1 AS BLOB), (- (rt1.c2))) WHERE ((NOT ((((rt1.c3, rt1.c1, rt1.c0)) NOT BETWEEN ((x'', (rt1.c0 IN ()), (((rt1.c3)) BETWEEN ((rt1.c1)) AND ((rt1.c0))))) AND (((((v0.c0)) NOT BETWEEN ((rt1.c2)) AND ((v0.c0))), CAST(rt1.c3 AS REAL), LIKELY(DISTINCT rt1.c2))))))) UNION SELECT DISTINCT rt1.c1 FROM v0 RIGHT OUTER JOIN rt1 ON TRIM(CAST(rt1.c1 AS BLOB), (- (rt1.c2))) WHERE ((((((rt1.c3, rt1.c1, rt1.c0)) NOT BETWEEN ((x'', (rt1.c0 IN ()), (((rt1.c3)) BETWEEN ((rt1.c1)) AND ((rt1.c0))))) AND (((((v0.c0)) NOT BETWEEN ((rt1.c2)) AND ((v0.c0))), CAST(rt1.c3 AS REAL), LIKELY(DISTINCT rt1.c2))))) ISNULL));
SELECT DISTINCT rt1.c1 FROM v0 RIGHT OUTER JOIN rt1 ON TRIM(CAST(rt1.c1 AS BLOB), (- (rt1.c2)));
SELECT t0.c0, v0.c0 FROM t0, v0 GROUP BY t0.c0, v0.c0;
SELECT ALL t0.c0, v0.c0 FROM t0, v0 WHERE (((t0.c0)%(t0.c0)) COLLATE NOCASE) GROUP BY t0.c0, v0.c0 UNION SELECT t0.c0, v0.c0 FROM t0, v0 WHERE ((NOT (((t0.c0)%(t0.c0)) COLLATE NOCASE))) GROUP BY t0.c0, v0.c0 UNION SELECT ALL t0.c0, v0.c0 FROM t0, v0 WHERE (((((t0.c0)%(t0.c0)) COLLATE NOCASE) ISNULL)) GROUP BY t0.c0, v0.c0;
SELECT t0.c0, v0.c0 FROM t0, v0 GROUP BY t0.c0, v0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TOTAL(MAX(vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(MAX(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(MAX(vt0.c0))) ISNULL);
SELECT TOTAL(rt1.c2) FROM t0, rt1, vt0 ORDER BY (+ (rt1.c0)) COLLATE BINARY;
SELECT * FROM t0, v0, rt1, vt0;
SELECT * FROM t0, v0, rt1, vt0 WHERE (t0.c0) UNION ALL SELECT ALL * FROM t0, v0, rt1, vt0 WHERE ((NOT (t0.c0))) UNION ALL SELECT * FROM t0, v0, rt1, vt0 WHERE (((t0.c0) ISNULL));
SELECT * FROM t0, v0, rt1, vt0;
SELECT DISTINCT rt1.c0, rt1.c1 FROM rt1, t0, v0, vt0;
SELECT DISTINCT rt1.c0, rt1.c1 FROM rt1, t0, v0, vt0 WHERE ((((((rt1.c3) BETWEEN (vt0.c0) AND (t0.c0))))>=((((rt1.c2) IS FALSE))))) UNION SELECT DISTINCT rt1.c0, rt1.c1 FROM rt1, t0, v0, vt0 WHERE ((NOT ((((((rt1.c3) BETWEEN (vt0.c0) AND (t0.c0))))>=((((rt1.c2) IS FALSE))))))) UNION SELECT DISTINCT rt1.c0, rt1.c1 FROM rt1, t0, v0, vt0 WHERE ((((((((rt1.c3) BETWEEN (vt0.c0) AND (t0.c0))))>=((((rt1.c2) IS FALSE))))) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c1 FROM rt1, t0, v0, vt0;
SELECT ALL rt1.c0, rt1.c1, rt1.c2, rt1.c3, vt0.c0 FROM rt1, t0 RIGHT OUTER JOIN vt0 ON ((((UNLIKELY(rt1.c3))OR((+ (rt1.c0)))))OR((~ (rt1.c1)))) GROUP BY rt1.c0, rt1.c1, rt1.c2, rt1.c3, vt0.c0;
SELECT rt1.c0, rt1.c1, rt1.c2, rt1.c3, vt0.c0 FROM rt1, t0 RIGHT OUTER JOIN vt0 ON ((((UNLIKELY(rt1.c3))OR((+ (rt1.c0)))))OR((~ (rt1.c1)))) WHERE (HEX(rt1.c1)) GROUP BY rt1.c0, rt1.c1, rt1.c2, rt1.c3, vt0.c0 UNION SELECT ALL rt1.c0, rt1.c1, rt1.c2, rt1.c3, vt0.c0 FROM rt1, t0 RIGHT OUTER JOIN vt0 ON ((((UNLIKELY(rt1.c3))OR((+ (rt1.c0)))))OR((~ (rt1.c1)))) WHERE ((NOT (HEX(rt1.c1)))) GROUP BY rt1.c0, rt1.c1, rt1.c2, rt1.c3, vt0.c0 UNION SELECT ALL rt1.c0, rt1.c1, rt1.c2, rt1.c3, vt0.c0 FROM rt1, t0 RIGHT OUTER JOIN vt0 ON ((((UNLIKELY(rt1.c3))OR((+ (rt1.c0)))))OR((~ (rt1.c1)))) WHERE (((HEX(rt1.c1)) ISNULL)) GROUP BY rt1.c0, rt1.c1, rt1.c2, rt1.c3, vt0.c0;
SELECT ALL rt1.c0, rt1.c1, rt1.c2, rt1.c3, vt0.c0 FROM rt1, t0 RIGHT OUTER JOIN vt0 ON ((((UNLIKELY(rt1.c3))OR((+ (rt1.c0)))))OR((~ (rt1.c1)))) GROUP BY rt1.c0, rt1.c1, rt1.c2, rt1.c3, vt0.c0;
SELECT vt0.c0, rt1.c1, rt1.c0 FROM v0 INNER JOIN vt0 ON ((((ABS(vt0.c0))OR(CAST(rt1.c0 AS INTEGER))))OR('xsw_~_')) CROSS JOIN rt1 ON (((rt1.c3)) BETWEEN ((((v0.c0) IS TRUE))) AND (((((v0.c0))>((v0.c0)))))) GROUP BY vt0.c0, rt1.c1, rt1.c0;
SELECT ALL vt0.c0, rt1.c1, rt1.c0 FROM v0 INNER JOIN vt0 ON ((((ABS(vt0.c0))OR(CAST(rt1.c0 AS INTEGER))))OR('xsw_~_')) CROSS JOIN rt1 ON (((rt1.c3)) BETWEEN ((((v0.c0) IS TRUE))) AND (((((v0.c0))>((v0.c0)))))) GROUP BY vt0.c0, rt1.c1, rt1.c0 HAVING CAST((((AVG(x'')))<((AVG(v0.c0)))) AS NUMERIC) UNION ALL SELECT vt0.c0, rt1.c1, rt1.c0 FROM v0 INNER JOIN vt0 ON ((((ABS(vt0.c0))OR(CAST(rt1.c0 AS INTEGER))))OR('xsw_~_')) CROSS JOIN rt1 ON (((rt1.c3)) BETWEEN ((((v0.c0) IS TRUE))) AND (((((v0.c0))>((v0.c0)))))) GROUP BY vt0.c0, rt1.c1, rt1.c0 HAVING (NOT (CAST((((AVG(x'')))<((AVG(v0.c0)))) AS NUMERIC))) UNION ALL SELECT ALL vt0.c0, rt1.c1, rt1.c0 FROM v0 INNER JOIN vt0 ON ((((ABS(vt0.c0))OR(CAST(rt1.c0 AS INTEGER))))OR('xsw_~_')) CROSS JOIN rt1 ON (((rt1.c3)) BETWEEN ((((v0.c0) IS TRUE))) AND (((((v0.c0))>((v0.c0)))))) GROUP BY vt0.c0, rt1.c1, rt1.c0 HAVING ((CAST((((AVG(x'')))<((AVG(v0.c0)))) AS NUMERIC)) ISNULL);
SELECT vt0.c0, rt1.c1, rt1.c0 FROM v0 INNER JOIN vt0 ON ((((ABS(vt0.c0))OR(CAST(rt1.c0 AS INTEGER))))OR('xsw_~_')) CROSS JOIN rt1 ON (((rt1.c3)) BETWEEN ((((v0.c0) IS TRUE))) AND (((((v0.c0))>((v0.c0)))))) GROUP BY vt0.c0, rt1.c1, rt1.c0;
SELECT ALL vt0.c0, rt1.c1, rt1.c0 FROM v0 INNER JOIN vt0 ON ((((ABS(vt0.c0))OR(CAST(rt1.c0 AS INTEGER))))OR('xsw_~_')) CROSS JOIN rt1 ON (((rt1.c3)) BETWEEN ((((v0.c0) IS TRUE))) AND (((((v0.c0))>((v0.c0)))))) GROUP BY vt0.c0, rt1.c1, rt1.c0 HAVING CAST((((AVG(x'')))<((AVG(v0.c0)))) AS NUMERIC) UNION ALL SELECT vt0.c0, rt1.c1, rt1.c0 FROM v0 INNER JOIN vt0 ON ((((ABS(vt0.c0))OR(CAST(rt1.c0 AS INTEGER))))OR('xsw_~_')) CROSS JOIN rt1 ON (((rt1.c3)) BETWEEN ((((v0.c0) IS TRUE))) AND (((((v0.c0))>((v0.c0)))))) GROUP BY vt0.c0, rt1.c1, rt1.c0 HAVING (NOT (CAST((((AVG(x'')))<((AVG(v0.c0)))) AS NUMERIC))) UNION ALL SELECT ALL vt0.c0, rt1.c1, rt1.c0 FROM v0 INNER JOIN vt0 ON ((((ABS(vt0.c0))OR(CAST(rt1.c0 AS INTEGER))))OR('xsw_~_')) CROSS JOIN rt1 ON (((rt1.c3)) BETWEEN ((((v0.c0) IS TRUE))) AND (((((v0.c0))>((v0.c0)))))) GROUP BY vt0.c0, rt1.c1, rt1.c0 HAVING ((CAST((((AVG(x'')))<((AVG(v0.c0)))) AS NUMERIC)) ISNULL);
SELECT vt0.c0, rt1.c1, rt1.c0 FROM v0 INNER JOIN vt0 ON ((((ABS(vt0.c0))OR(CAST(rt1.c0 AS INTEGER))))OR('xsw_~_')) CROSS JOIN rt1 ON (((rt1.c3)) BETWEEN ((((v0.c0) IS TRUE))) AND (((((v0.c0))>((v0.c0)))))) GROUP BY vt0.c0, rt1.c1, rt1.c0;
SELECT ALL t0.c0, rt1.c0, rt1.c2, v0.c0, rt1.c3 FROM v0 RIGHT OUTER JOIN t0 ON (((((((rt1.c0, rt1.c0, rt1.c0, rt1.c3, rt1.c2)) NOT BETWEEN ((rt1.c3, rt1.c2, 3.54051069E8, rt1.c1, t0.c0)) AND ((rt1.c3, rt1.c1, rt1.c2, rt1.c2, rt1.c3))))OR(((rt1.c0)-(rt1.c3)))))AND(rt1.c3 COLLATE RTRIM)) LEFT OUTER JOIN rt1 ON CASE WHEN (NOT ('-1959483597')) THEN ((rt1.c3)IS(v0.c0)) WHEN CAST(t0.c0 AS TEXT) THEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((t0.c0))) WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c3 END THEN (((('')OR(v0.c0)))OR(rt1.c3)) END;
SELECT DISTINCT * FROM rt1, vt0, t0, v0;
SELECT DISTINCT * FROM rt1, vt0, t0, v0 WHERE (CAST(CAST(vt0.c0 AS NUMERIC) AS BLOB)) UNION SELECT DISTINCT * FROM rt1, vt0, t0, v0 WHERE ((NOT (CAST(CAST(vt0.c0 AS NUMERIC) AS BLOB)))) UNION SELECT DISTINCT * FROM rt1, vt0, t0, v0 WHERE (((CAST(CAST(vt0.c0 AS NUMERIC) AS BLOB)) ISNULL));
SELECT DISTINCT * FROM rt1, vt0, t0, v0;
SELECT ALL rt1.c3, rt1.c1, rt1.c2 FROM rt1 INNER JOIN vt0 ON ((rt1.c2) NOT BETWEEN (((rt1.c0)+(rt1.c2))) AND (((rt1.c3) NOT BETWEEN (rt1.c0) AND (rt1.c3)))) GROUP BY rt1.c3, rt1.c1, rt1.c2;
SELECT ALL rt1.c3, rt1.c1, rt1.c2 FROM rt1 INNER JOIN vt0 ON ((rt1.c2) NOT BETWEEN (((rt1.c0)+(rt1.c2))) AND (((rt1.c3) NOT BETWEEN (rt1.c0) AND (rt1.c3)))) WHERE (vt0.c0) GROUP BY rt1.c3, rt1.c1, rt1.c2 UNION SELECT rt1.c3, rt1.c1, rt1.c2 FROM rt1 INNER JOIN vt0 ON ((rt1.c2) NOT BETWEEN (((rt1.c0)+(rt1.c2))) AND (((rt1.c3) NOT BETWEEN (rt1.c0) AND (rt1.c3)))) WHERE ((NOT (vt0.c0))) GROUP BY rt1.c3, rt1.c1, rt1.c2 UNION SELECT ALL rt1.c3, rt1.c1, rt1.c2 FROM rt1 INNER JOIN vt0 ON ((rt1.c2) NOT BETWEEN (((rt1.c0)+(rt1.c2))) AND (((rt1.c3) NOT BETWEEN (rt1.c0) AND (rt1.c3)))) WHERE (((vt0.c0) ISNULL)) GROUP BY rt1.c3, rt1.c1, rt1.c2;
SELECT ALL rt1.c3, rt1.c1, rt1.c2 FROM rt1 INNER JOIN vt0 ON ((rt1.c2) NOT BETWEEN (((rt1.c0)+(rt1.c2))) AND (((rt1.c3) NOT BETWEEN (rt1.c0) AND (rt1.c3)))) GROUP BY rt1.c3, rt1.c1, rt1.c2;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((((COUNT(COUNT(vt0.c0)))OR(((MAX(vt0.c0)) IS TRUE))))OR(((SUM(vt0.c0)) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(MIN(AVG(SUM(vt0.c0))))))OR(CAST(vt0.c0 AS BLOB))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((((((((COUNT(COUNT(vt0.c0)))OR(((MAX(vt0.c0)) IS TRUE))))OR(((SUM(vt0.c0)) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(MIN(AVG(SUM(vt0.c0))))))OR(CAST(vt0.c0 AS BLOB))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((((((COUNT(COUNT(vt0.c0)))OR(((MAX(vt0.c0)) IS TRUE))))OR(((SUM(vt0.c0)) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(MIN(AVG(SUM(vt0.c0))))))OR(CAST(vt0.c0 AS BLOB)))) ISNULL);
SELECT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE ((t0.c0 COLLATE RTRIM IN ())) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT ((t0.c0 COLLATE RTRIM IN ())))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((((t0.c0 COLLATE RTRIM IN ())) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT * FROM vt0, rt1, v0, t0;
SELECT DISTINCT * FROM vt0, rt1, v0, t0 WHERE ((((((0)*(v0.c0))))==((((rt1.c2)GLOB(rt1.c2)))))) UNION SELECT DISTINCT * FROM vt0, rt1, v0, t0 WHERE ((NOT ((((((0)*(v0.c0))))==((((rt1.c2)GLOB(rt1.c2)))))))) UNION SELECT DISTINCT * FROM vt0, rt1, v0, t0 WHERE ((((((((0)*(v0.c0))))==((((rt1.c2)GLOB(rt1.c2)))))) ISNULL));
SELECT DISTINCT * FROM vt0, rt1, v0, t0;
SELECT ALL rt1.c3, rt1.c2 FROM vt0, v0, rt1, t0 GROUP BY rt1.c3, rt1.c2;
SELECT ALL rt1.c3, rt1.c2 FROM vt0, v0, rt1, t0 WHERE (LIKELIHOOD(DISTINCT ((v0.c0) ISNULL), 0.2736901208153798)) GROUP BY rt1.c3, rt1.c2 UNION SELECT ALL rt1.c3, rt1.c2 FROM vt0, v0, rt1, t0 WHERE ((NOT (LIKELIHOOD(DISTINCT ((v0.c0) ISNULL), 0.2736901208153798)))) GROUP BY rt1.c3, rt1.c2 UNION SELECT ALL rt1.c3, rt1.c2 FROM vt0, v0, rt1, t0 WHERE (((LIKELIHOOD(DISTINCT ((v0.c0) ISNULL), 0.2736901208153798)) ISNULL)) GROUP BY rt1.c3, rt1.c2;
SELECT ALL rt1.c3, rt1.c2 FROM vt0, v0, rt1, t0 GROUP BY rt1.c3, rt1.c2;
SELECT ALL v0.c0, t0.c0, rt1.c2, rt1.c1, rt1.c0, rt1.c3 FROM rt1, t0, v0 GROUP BY v0.c0, t0.c0, rt1.c2, rt1.c1, rt1.c0, rt1.c3;
SELECT ALL v0.c0, t0.c0, rt1.c2, rt1.c1, rt1.c0, rt1.c3 FROM rt1, t0, v0 GROUP BY v0.c0, t0.c0, rt1.c2, rt1.c1, rt1.c0, rt1.c3 HAVING CAST(MIN(0.5422717296400453) AS BLOB) UNION ALL SELECT ALL v0.c0, t0.c0, rt1.c2, rt1.c1, rt1.c0, rt1.c3 FROM rt1, t0, v0 GROUP BY v0.c0, t0.c0, rt1.c2, rt1.c1, rt1.c0, rt1.c3 HAVING (NOT (CAST(MIN(0.5422717296400453) AS BLOB))) UNION ALL SELECT ALL v0.c0, t0.c0, rt1.c2, rt1.c1, rt1.c0, rt1.c3 FROM rt1, t0, v0 GROUP BY v0.c0, t0.c0, rt1.c2, rt1.c1, rt1.c0, rt1.c3 HAVING ((CAST(MIN(0.5422717296400453) AS BLOB)) ISNULL);
SELECT ALL v0.c0, t0.c0, rt1.c2, rt1.c1, rt1.c0, rt1.c3 FROM rt1, t0, v0 GROUP BY v0.c0, t0.c0, rt1.c2, rt1.c1, rt1.c0, rt1.c3;
SELECT ALL v0.c0, t0.c0, rt1.c2, rt1.c1, rt1.c0, rt1.c3 FROM rt1, t0, v0 GROUP BY v0.c0, t0.c0, rt1.c2, rt1.c1, rt1.c0, rt1.c3 HAVING CAST(MIN(0.5422717296400453) AS BLOB) UNION ALL SELECT ALL v0.c0, t0.c0, rt1.c2, rt1.c1, rt1.c0, rt1.c3 FROM rt1, t0, v0 GROUP BY v0.c0, t0.c0, rt1.c2, rt1.c1, rt1.c0, rt1.c3 HAVING (NOT (CAST(MIN(0.5422717296400453) AS BLOB))) UNION ALL SELECT ALL v0.c0, t0.c0, rt1.c2, rt1.c1, rt1.c0, rt1.c3 FROM rt1, t0, v0 GROUP BY v0.c0, t0.c0, rt1.c2, rt1.c1, rt1.c0, rt1.c3 HAVING ((CAST(MIN(0.5422717296400453) AS BLOB)) ISNULL);
SELECT ALL v0.c0, t0.c0, rt1.c2, rt1.c1, rt1.c0, rt1.c3 FROM rt1, t0, v0 GROUP BY v0.c0, t0.c0, rt1.c2, rt1.c1, rt1.c0, rt1.c3;
SELECT * FROM rt1, t0, vt0;
SELECT ALL * FROM rt1, t0, vt0 WHERE (CAST((vt0.c0 IN ()) AS NUMERIC)) UNION ALL SELECT * FROM rt1, t0, vt0 WHERE ((NOT (CAST((vt0.c0 IN ()) AS NUMERIC)))) UNION ALL SELECT ALL * FROM rt1, t0, vt0 WHERE (((CAST((vt0.c0 IN ()) AS NUMERIC)) ISNULL));
SELECT * FROM rt1, t0, vt0;
SELECT DISTINCT rt1.c2, vt0.c0 FROM t0, vt0 CROSS JOIN v0 ON '' INNER JOIN rt1 ON CASE WHEN ((v0.c0) NOT BETWEEN (rt1.c2) AND (0.729078972537307)) THEN CAST(rt1.c1 AS NUMERIC) ELSE ((0.11451551973493035) BETWEEN (v0.c0) AND (t0.c0)) END;
SELECT DISTINCT rt1.c2, vt0.c0 FROM t0, vt0 CROSS JOIN v0 ON '' INNER JOIN rt1 ON CASE WHEN ((v0.c0) NOT BETWEEN (rt1.c2) AND (0.729078972537307)) THEN CAST(rt1.c1 AS NUMERIC) ELSE ((0.11451551973493035) BETWEEN (v0.c0) AND (t0.c0)) END WHERE ((((((((((rt1.c0)AND(vt0.c0)))OR(rt1.c3)))OR(rt1.c3)))OR(rt1.c3)) IN (rt1.c2 COLLATE NOCASE))) UNION SELECT DISTINCT rt1.c2, vt0.c0 FROM t0, vt0 CROSS JOIN v0 ON '' INNER JOIN rt1 ON CASE WHEN ((v0.c0) NOT BETWEEN (rt1.c2) AND (0.729078972537307)) THEN CAST(rt1.c1 AS NUMERIC) ELSE ((0.11451551973493035) BETWEEN (v0.c0) AND (t0.c0)) END WHERE ((NOT ((((((((((rt1.c0)AND(vt0.c0)))OR(rt1.c3)))OR(rt1.c3)))OR(rt1.c3)) IN (rt1.c2 COLLATE NOCASE))))) UNION SELECT DISTINCT rt1.c2, vt0.c0 FROM t0, vt0 CROSS JOIN v0 ON '' INNER JOIN rt1 ON CASE WHEN ((v0.c0) NOT BETWEEN (rt1.c2) AND (0.729078972537307)) THEN CAST(rt1.c1 AS NUMERIC) ELSE ((0.11451551973493035) BETWEEN (v0.c0) AND (t0.c0)) END WHERE ((((((((((((rt1.c0)AND(vt0.c0)))OR(rt1.c3)))OR(rt1.c3)))OR(rt1.c3)) IN (rt1.c2 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT rt1.c2, vt0.c0 FROM t0, vt0 CROSS JOIN v0 ON '' INNER JOIN rt1 ON CASE WHEN ((v0.c0) NOT BETWEEN (rt1.c2) AND (0.729078972537307)) THEN CAST(rt1.c1 AS NUMERIC) ELSE ((0.11451551973493035) BETWEEN (v0.c0) AND (t0.c0)) END;
SELECT rt1.c0, rt1.c2, rt1.c3 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c3;
SELECT ALL rt1.c0, rt1.c2, rt1.c3 FROM rt1 WHERE (((((rt1.c3)AND(rt1.c0))) BETWEEN (((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c3))) AND (((((((((rt1.c2)OR(rt1.c0)))AND(rt1.c1)))OR(rt1.c2)))OR(rt1.c1))))) GROUP BY rt1.c0, rt1.c2, rt1.c3 UNION SELECT ALL rt1.c0, rt1.c2, rt1.c3 FROM rt1 WHERE ((NOT (((((rt1.c3)AND(rt1.c0))) BETWEEN (((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c3))) AND (((((((((rt1.c2)OR(rt1.c0)))AND(rt1.c1)))OR(rt1.c2)))OR(rt1.c1))))))) GROUP BY rt1.c0, rt1.c2, rt1.c3 UNION SELECT rt1.c0, rt1.c2, rt1.c3 FROM rt1 WHERE (((((((rt1.c3)AND(rt1.c0))) BETWEEN (((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c3))) AND (((((((((rt1.c2)OR(rt1.c0)))AND(rt1.c1)))OR(rt1.c2)))OR(rt1.c1))))) ISNULL)) GROUP BY rt1.c0, rt1.c2, rt1.c3;
SELECT rt1.c0, rt1.c2, rt1.c3 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c3;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((TOTAL(t0.c0)) NOT NULL) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((TOTAL(t0.c0)) NOT NULL))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((TOTAL(t0.c0)) NOT NULL)) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((TOTAL(t0.c0)) NOT NULL) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((TOTAL(t0.c0)) NOT NULL))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((TOTAL(t0.c0)) NOT NULL)) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT * FROM rt1, v0;
SELECT ALL * FROM rt1, v0 WHERE (CASE WHEN (NOT (rt1.c0)) THEN CAST(NULL AS INTEGER) WHEN ((((rt1.c3)OR(rt1.c0)))OR(v0.c0)) THEN ((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt1.c0)) WHEN ((rt1.c3)<=(rt1.c0)) THEN CASE 'Vi9''{Q'  WHEN v0.c0 THEN rt1.c3 END ELSE (- (v0.c0)) END) UNION ALL SELECT ALL * FROM rt1, v0 WHERE ((NOT (CASE WHEN (NOT (rt1.c0)) THEN CAST(NULL AS INTEGER) WHEN ((((rt1.c3)OR(rt1.c0)))OR(v0.c0)) THEN ((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt1.c0)) WHEN ((rt1.c3)<=(rt1.c0)) THEN CASE 'Vi9''{Q'  WHEN v0.c0 THEN rt1.c3 END ELSE (- (v0.c0)) END))) UNION ALL SELECT ALL * FROM rt1, v0 WHERE (((CASE WHEN (NOT (rt1.c0)) THEN CAST(NULL AS INTEGER) WHEN ((((rt1.c3)OR(rt1.c0)))OR(v0.c0)) THEN ((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt1.c0)) WHEN ((rt1.c3)<=(rt1.c0)) THEN CASE 'Vi9''{Q'  WHEN v0.c0 THEN rt1.c3 END ELSE (- (v0.c0)) END) ISNULL));
SELECT * FROM rt1, v0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CAST(((vt0.c0) IS TRUE) AS BLOB)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CAST(((vt0.c0) IS TRUE) AS BLOB)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CAST(((vt0.c0) IS TRUE) AS BLOB)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 WHERE (((((TYPEOF(v0.c0))OR(json_quote(vt0.c0))))OR(((v0.c0)/(x''))))) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM v0, vt0 WHERE ((NOT (((((TYPEOF(v0.c0))OR(json_quote(vt0.c0))))OR(((v0.c0)/(x''))))))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 WHERE (((((((TYPEOF(v0.c0))OR(json_quote(vt0.c0))))OR(((v0.c0)/(x''))))) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT ALL rt1.c2, rt1.c0, v0.c0, t0.c0 FROM vt0, rt1, t0, v0 GROUP BY rt1.c2, rt1.c0, v0.c0, t0.c0;
SELECT ALL rt1.c2, rt1.c0, v0.c0, t0.c0 FROM vt0, rt1, t0, v0 GROUP BY rt1.c2, rt1.c0, v0.c0, t0.c0 HAVING GROUP_CONCAT(((COUNT(x''))<=(t0.c0))) UNION ALL SELECT ALL rt1.c2, rt1.c0, v0.c0, t0.c0 FROM vt0, rt1, t0, v0 GROUP BY rt1.c2, rt1.c0, v0.c0, t0.c0 HAVING (NOT (GROUP_CONCAT(((COUNT(x''))<=(t0.c0))))) UNION ALL SELECT ALL rt1.c2, rt1.c0, v0.c0, t0.c0 FROM vt0, rt1, t0, v0 GROUP BY rt1.c2, rt1.c0, v0.c0, t0.c0 HAVING ((GROUP_CONCAT(((COUNT(x''))<=(t0.c0)))) ISNULL);
SELECT ALL * FROM t0 RIGHT OUTER JOIN v0 ON (NOT (((-8.86874737E8)/(v0.c0)))) CROSS JOIN vt0 ON ((((vt0.c0)>>(vt0.c0))) IS FALSE);
SELECT * FROM t0 RIGHT OUTER JOIN v0 ON (NOT (((-8.86874737E8)/(v0.c0)))) CROSS JOIN vt0 ON ((((vt0.c0)>>(vt0.c0))) IS FALSE) WHERE (CASE WHEN v0.c0 THEN ((t0.c0) BETWEEN (v0.c0) AND (t0.c0)) WHEN ((t0.c0)/(t0.c0)) THEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (t0.c0)) WHEN ((vt0.c0) BETWEEN (t0.c0) AND (v0.c0)) THEN CASE v0.c0  WHEN v0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN v0.c0 THEN vt0.c0 END ELSE (- (vt0.c0)) END) UNION ALL SELECT ALL * FROM t0 RIGHT OUTER JOIN v0 ON (NOT (((-8.86874737E8)/(v0.c0)))) CROSS JOIN vt0 ON ((((vt0.c0)>>(vt0.c0))) IS FALSE) WHERE ((NOT (CASE WHEN v0.c0 THEN ((t0.c0) BETWEEN (v0.c0) AND (t0.c0)) WHEN ((t0.c0)/(t0.c0)) THEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (t0.c0)) WHEN ((vt0.c0) BETWEEN (t0.c0) AND (v0.c0)) THEN CASE v0.c0  WHEN v0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN v0.c0 THEN vt0.c0 END ELSE (- (vt0.c0)) END))) UNION ALL SELECT * FROM t0 RIGHT OUTER JOIN v0 ON (NOT (((-8.86874737E8)/(v0.c0)))) CROSS JOIN vt0 ON ((((vt0.c0)>>(vt0.c0))) IS FALSE) WHERE (((CASE WHEN v0.c0 THEN ((t0.c0) BETWEEN (v0.c0) AND (t0.c0)) WHEN ((t0.c0)/(t0.c0)) THEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (t0.c0)) WHEN ((vt0.c0) BETWEEN (t0.c0) AND (v0.c0)) THEN CASE v0.c0  WHEN v0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN v0.c0 THEN vt0.c0 END ELSE (- (vt0.c0)) END) ISNULL));
SELECT ALL * FROM t0 RIGHT OUTER JOIN v0 ON (NOT (((-8.86874737E8)/(v0.c0)))) CROSS JOIN vt0 ON ((((vt0.c0)>>(vt0.c0))) IS FALSE);
SELECT DISTINCT v0.c0, vt0.c0, rt1.c3, rt1.c2 FROM v0, vt0, rt1 FULL OUTER JOIN t0 ON ((v0.c0)/(rt1.c0)) COLLATE NOCASE;
SELECT DISTINCT v0.c0, vt0.c0, rt1.c3, rt1.c2 FROM v0, vt0, rt1 FULL OUTER JOIN t0 ON ((v0.c0)/(rt1.c0)) COLLATE NOCASE WHERE (329522907) UNION SELECT DISTINCT v0.c0, vt0.c0, rt1.c3, rt1.c2 FROM v0, vt0, rt1 FULL OUTER JOIN t0 ON ((v0.c0)/(rt1.c0)) COLLATE NOCASE WHERE ((NOT (329522907))) UNION SELECT DISTINCT v0.c0, vt0.c0, rt1.c3, rt1.c2 FROM v0, vt0, rt1 FULL OUTER JOIN t0 ON ((v0.c0)/(rt1.c0)) COLLATE NOCASE WHERE (((329522907) ISNULL));
SELECT DISTINCT v0.c0, vt0.c0, rt1.c3, rt1.c2 FROM v0, vt0, rt1 FULL OUTER JOIN t0 ON ((v0.c0)/(rt1.c0)) COLLATE NOCASE;
SELECT ALL rt1.c0, rt1.c2, rt1.c3 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c3;
SELECT rt1.c0, rt1.c2, rt1.c3 FROM rt1 WHERE (x'') GROUP BY rt1.c0, rt1.c2, rt1.c3 UNION SELECT rt1.c0, rt1.c2, rt1.c3 FROM rt1 WHERE ((NOT (x''))) GROUP BY rt1.c0, rt1.c2, rt1.c3 UNION SELECT ALL rt1.c0, rt1.c2, rt1.c3 FROM rt1 WHERE (((x'') ISNULL)) GROUP BY rt1.c0, rt1.c2, rt1.c3;
SELECT ALL rt1.c0, rt1.c2, rt1.c3 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c3;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CASE CAST(GROUP_CONCAT(COUNT(MAX(vt0.c0))) AS NUMERIC)  WHEN COUNT(COUNT(*)) THEN COUNT(vt0.c0) ELSE vt0.c0 COLLATE BINARY END UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CASE CAST(GROUP_CONCAT(COUNT(MAX(vt0.c0))) AS NUMERIC)  WHEN COUNT(COUNT(*)) THEN COUNT(vt0.c0) ELSE vt0.c0 COLLATE BINARY END)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CASE CAST(GROUP_CONCAT(COUNT(MAX(vt0.c0))) AS NUMERIC)  WHEN COUNT(COUNT(*)) THEN COUNT(vt0.c0) ELSE vt0.c0 COLLATE BINARY END) ISNULL);
SELECT ALL rt1.c2, rt1.c1, rt1.c3, rt1.c0 FROM rt1;
SELECT ALL rt1.c2, rt1.c1, rt1.c3, rt1.c0 FROM rt1 WHERE (rt1.c0) UNION ALL SELECT ALL rt1.c2, rt1.c1, rt1.c3, rt1.c0 FROM rt1 WHERE ((NOT (rt1.c0))) UNION ALL SELECT rt1.c2, rt1.c1, rt1.c3, rt1.c0 FROM rt1 WHERE (((rt1.c0) ISNULL));
SELECT ALL rt1.c2, rt1.c1, rt1.c3, rt1.c0 FROM rt1;
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE (CASE WHEN ((vt0.c0)<<(v0.c0)) THEN CAST(v0.c0 AS TEXT) END) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT (CASE WHEN ((vt0.c0)<<(v0.c0)) THEN CAST(v0.c0 AS TEXT) END))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE (((CASE WHEN ((vt0.c0)<<(v0.c0)) THEN CAST(v0.c0 AS TEXT) END) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT ALL rt1.c3, rt1.c1, t0.c0, rt1.c2, rt1.c0 FROM t0, rt1 GROUP BY rt1.c3, rt1.c1, t0.c0, rt1.c2, rt1.c0;
SELECT rt1.c3, rt1.c1, t0.c0, rt1.c2, rt1.c0 FROM t0, rt1 WHERE (((x'')GLOB(rt1.c3 COLLATE BINARY))) GROUP BY rt1.c3, rt1.c1, t0.c0, rt1.c2, rt1.c0 UNION SELECT ALL rt1.c3, rt1.c1, t0.c0, rt1.c2, rt1.c0 FROM t0, rt1 WHERE ((NOT (((x'')GLOB(rt1.c3 COLLATE BINARY))))) GROUP BY rt1.c3, rt1.c1, t0.c0, rt1.c2, rt1.c0 UNION SELECT ALL rt1.c3, rt1.c1, t0.c0, rt1.c2, rt1.c0 FROM t0, rt1 WHERE (((((x'')GLOB(rt1.c3 COLLATE BINARY))) ISNULL)) GROUP BY rt1.c3, rt1.c1, t0.c0, rt1.c2, rt1.c0;
SELECT ALL rt1.c3, rt1.c1, t0.c0, rt1.c2, rt1.c0 FROM t0, rt1 GROUP BY rt1.c3, rt1.c1, t0.c0, rt1.c2, rt1.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING CASE MAX(TOTAL(AVG(GROUP_CONCAT(t0.c0))))  WHEN MAX(GROUP_CONCAT(t0.c0)) THEN COUNT(TOTAL(t0.c0)) WHEN COUNT(*) THEN CAST(t0.c0 AS REAL) WHEN COUNT(MAX(COUNT(TOTAL(t0.c0)))) THEN GROUP_CONCAT(MIN(MIN(MIN(GROUP_CONCAT(MAX(MAX(t0.c0))))))) ELSE MAX(MAX(COUNT(t0.c0))) END UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (CASE MAX(TOTAL(AVG(GROUP_CONCAT(t0.c0))))  WHEN MAX(GROUP_CONCAT(t0.c0)) THEN COUNT(TOTAL(t0.c0)) WHEN COUNT(*) THEN CAST(t0.c0 AS REAL) WHEN COUNT(MAX(COUNT(TOTAL(t0.c0)))) THEN GROUP_CONCAT(MIN(MIN(MIN(GROUP_CONCAT(MAX(MAX(t0.c0))))))) ELSE MAX(MAX(COUNT(t0.c0))) END)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((CASE MAX(TOTAL(AVG(GROUP_CONCAT(t0.c0))))  WHEN MAX(GROUP_CONCAT(t0.c0)) THEN COUNT(TOTAL(t0.c0)) WHEN COUNT(*) THEN CAST(t0.c0 AS REAL) WHEN COUNT(MAX(COUNT(TOTAL(t0.c0)))) THEN GROUP_CONCAT(MIN(MIN(MIN(GROUP_CONCAT(MAX(MAX(t0.c0))))))) ELSE MAX(MAX(COUNT(t0.c0))) END) ISNULL);
SELECT ALL * FROM t0, rt1 FULL OUTER JOIN v0 ON t0.c0 RIGHT OUTER JOIN vt0 ON (((t0.c0)) BETWEEN ((CAST(v0.c0 AS TEXT))) AND ((CASE WHEN rt1.c1 THEN rt1.c3 END)));
SELECT * FROM t0, rt1 FULL OUTER JOIN v0 ON t0.c0 RIGHT OUTER JOIN vt0 ON (((t0.c0)) BETWEEN ((CAST(v0.c0 AS TEXT))) AND ((CASE WHEN rt1.c1 THEN rt1.c3 END))) WHERE (((json(rt1.c0))OR(((rt1.c1)|(vt0.c0))))) UNION ALL SELECT ALL * FROM t0, rt1 FULL OUTER JOIN v0 ON t0.c0 RIGHT OUTER JOIN vt0 ON (((t0.c0)) BETWEEN ((CAST(v0.c0 AS TEXT))) AND ((CASE WHEN rt1.c1 THEN rt1.c3 END))) WHERE ((NOT (((json(rt1.c0))OR(((rt1.c1)|(vt0.c0))))))) UNION ALL SELECT ALL * FROM t0, rt1 FULL OUTER JOIN v0 ON t0.c0 RIGHT OUTER JOIN vt0 ON (((t0.c0)) BETWEEN ((CAST(v0.c0 AS TEXT))) AND ((CASE WHEN rt1.c1 THEN rt1.c3 END))) WHERE (((((json(rt1.c0))OR(((rt1.c1)|(vt0.c0))))) ISNULL));
SELECT ALL * FROM t0, rt1 FULL OUTER JOIN v0 ON t0.c0 RIGHT OUTER JOIN vt0 ON (((t0.c0)) BETWEEN ((CAST(v0.c0 AS TEXT))) AND ((CASE WHEN rt1.c1 THEN rt1.c3 END)));
SELECT DISTINCT * FROM rt1, t0;
SELECT DISTINCT * FROM rt1, t0 WHERE (IFNULL(((rt1.c0) ISNULL), ((t0.c0)==(rt1.c1)))) UNION SELECT DISTINCT * FROM rt1, t0 WHERE ((NOT (IFNULL(((rt1.c0) ISNULL), ((t0.c0)==(rt1.c1)))))) UNION SELECT DISTINCT * FROM rt1, t0 WHERE (((IFNULL(((rt1.c0) ISNULL), ((t0.c0)=(rt1.c1)))) ISNULL));
SELECT DISTINCT * FROM rt1, t0;
SELECT ALL rt1.c3, rt1.c0, v0.c0 FROM t0, vt0, v0, rt1 GROUP BY rt1.c3, rt1.c0, v0.c0;
SELECT ALL rt1.c3, rt1.c0, v0.c0 FROM t0, vt0, v0, rt1 WHERE (CAST(json_array_length(v0.c0) AS TEXT)) GROUP BY rt1.c3, rt1.c0, v0.c0 UNION SELECT ALL rt1.c3, rt1.c0, v0.c0 FROM t0, vt0, v0, rt1 WHERE ((NOT (CAST(json_array_length(v0.c0) AS TEXT)))) GROUP BY rt1.c3, rt1.c0, v0.c0 UNION SELECT ALL rt1.c3, rt1.c0, v0.c0 FROM t0, vt0, v0, rt1 WHERE (((CAST(json_array_length(v0.c0) AS TEXT)) ISNULL)) GROUP BY rt1.c3, rt1.c0, v0.c0;
SELECT ALL rt1.c3, rt1.c0, v0.c0 FROM t0, vt0, v0, rt1 GROUP BY rt1.c3, rt1.c0, v0.c0;
SELECT v0.c0, rt1.c3, rt1.c2 FROM rt1, t0, v0, vt0 GROUP BY v0.c0, rt1.c3, rt1.c2;
SELECT ALL v0.c0, rt1.c3, rt1.c2 FROM rt1, t0, v0, vt0 GROUP BY v0.c0, rt1.c3, rt1.c2 HAVING ((((LOWER(rt1.c0))AND((((MIN(v0.c0))) BETWEEN ((COUNT(*))) AND ((MIN(SUM(MIN(x'')))))))))OR((rt1.c3 IN (COUNT(*), vt0.c0)))) UNION ALL SELECT ALL v0.c0, rt1.c3, rt1.c2 FROM rt1, t0, v0, vt0 GROUP BY v0.c0, rt1.c3, rt1.c2 HAVING (NOT (((((LOWER(rt1.c0))AND((((MIN(v0.c0))) BETWEEN ((COUNT(*))) AND ((MIN(SUM(MIN(x'')))))))))OR((rt1.c3 IN (COUNT(*), vt0.c0)))))) UNION ALL SELECT ALL v0.c0, rt1.c3, rt1.c2 FROM rt1, t0, v0, vt0 GROUP BY v0.c0, rt1.c3, rt1.c2 HAVING ((((((LOWER(rt1.c0))AND((((MIN(v0.c0))) BETWEEN ((COUNT(*))) AND ((MIN(SUM(MIN(x'')))))))))OR((rt1.c3 IN (COUNT(*), vt0.c0))))) ISNULL);
SELECT ALL * FROM vt0 INNER JOIN rt1 ON rt1.c0 COLLATE BINARY;
SELECT ALL * FROM vt0 INNER JOIN rt1 ON rt1.c0 COLLATE BINARY WHERE (CAST(rt1.c3 AS REAL)) UNION ALL SELECT ALL * FROM vt0 INNER JOIN rt1 ON rt1.c0 COLLATE BINARY WHERE ((NOT (CAST(rt1.c3 AS REAL)))) UNION ALL SELECT * FROM vt0 INNER JOIN rt1 ON rt1.c0 COLLATE BINARY WHERE (((CAST(rt1.c3 AS REAL)) ISNULL));
SELECT ALL * FROM vt0 INNER JOIN rt1 ON rt1.c0 COLLATE BINARY;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE ((('0.18104752443746175')>=(IFNULL(rt1.c0, rt1.c2)))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT ((('0.18104752443746175')>=(IFNULL(rt1.c0, rt1.c2)))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((((('0.18104752443746175')>=(IFNULL(rt1.c0, rt1.c2)))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT rt1.c2, rt1.c0, rt1.c3, rt1.c1 FROM v0, rt1, vt0, t0 GROUP BY rt1.c2, rt1.c0, rt1.c3, rt1.c1;
SELECT rt1.c2, rt1.c0, rt1.c3, rt1.c1 FROM v0, rt1, vt0, t0 WHERE ((((rt1.c3)) BETWEEN ((t0.c0)) AND ((CASE WHEN rt1.c0 THEN rt1.c0 ELSE vt0.c0 END)))) GROUP BY rt1.c2, rt1.c0, rt1.c3, rt1.c1 UNION SELECT rt1.c2, rt1.c0, rt1.c3, rt1.c1 FROM v0, rt1, vt0, t0 WHERE ((NOT ((((rt1.c3)) BETWEEN ((t0.c0)) AND ((CASE WHEN rt1.c0 THEN rt1.c0 ELSE vt0.c0 END)))))) GROUP BY rt1.c2, rt1.c0, rt1.c3, rt1.c1 UNION SELECT ALL rt1.c2, rt1.c0, rt1.c3, rt1.c1 FROM v0, rt1, vt0, t0 WHERE ((((((rt1.c3)) BETWEEN ((t0.c0)) AND ((CASE WHEN rt1.c0 THEN rt1.c0 ELSE vt0.c0 END)))) ISNULL)) GROUP BY rt1.c2, rt1.c0, rt1.c3, rt1.c1;
SELECT rt1.c2, rt1.c0, rt1.c3, rt1.c1 FROM v0, rt1, vt0, t0 GROUP BY rt1.c2, rt1.c0, rt1.c3, rt1.c1;
SELECT ALL t0.c0, rt1.c0, rt1.c1, rt1.c3, v0.c0, rt1.c2 FROM rt1, t0, v0 GROUP BY t0.c0, rt1.c0, rt1.c1, rt1.c3, v0.c0, rt1.c2;
SELECT t0.c0, rt1.c0, rt1.c1, rt1.c3, v0.c0, rt1.c2 FROM rt1, t0, v0 GROUP BY t0.c0, rt1.c0, rt1.c1, rt1.c3, v0.c0, rt1.c2 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0, rt1.c0, rt1.c1, rt1.c3, v0.c0, rt1.c2 FROM rt1, t0, v0 GROUP BY t0.c0, rt1.c0, rt1.c1, rt1.c3, v0.c0, rt1.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c0, rt1.c0, rt1.c1, rt1.c3, v0.c0, rt1.c2 FROM rt1, t0, v0 GROUP BY t0.c0, rt1.c0, rt1.c1, rt1.c3, v0.c0, rt1.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c0, rt1.c0, rt1.c1, rt1.c3, v0.c0, rt1.c2 FROM rt1, t0, v0 GROUP BY t0.c0, rt1.c0, rt1.c1, rt1.c3, v0.c0, rt1.c2;
SELECT t0.c0, rt1.c0, rt1.c1, rt1.c3, v0.c0, rt1.c2 FROM rt1, t0, v0 GROUP BY t0.c0, rt1.c0, rt1.c1, rt1.c3, v0.c0, rt1.c2 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0, rt1.c0, rt1.c1, rt1.c3, v0.c0, rt1.c2 FROM rt1, t0, v0 GROUP BY t0.c0, rt1.c0, rt1.c1, rt1.c3, v0.c0, rt1.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c0, rt1.c0, rt1.c1, rt1.c3, v0.c0, rt1.c2 FROM rt1, t0, v0 GROUP BY t0.c0, rt1.c0, rt1.c1, rt1.c3, v0.c0, rt1.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c0, rt1.c0, rt1.c1, rt1.c3, v0.c0, rt1.c2 FROM rt1, t0, v0 GROUP BY t0.c0, rt1.c0, rt1.c1, rt1.c3, v0.c0, rt1.c2;
SELECT * FROM t0;
SELECT * FROM t0 WHERE (t0.c0) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (t0.c0))) UNION ALL SELECT * FROM t0 WHERE (((t0.c0) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM rt1, t0, v0;
SELECT DISTINCT * FROM rt1, t0, v0 WHERE (TRIM(DISTINCT (NOT (rt1.c0)), rt1.c2)) UNION SELECT DISTINCT * FROM rt1, t0, v0 WHERE ((NOT (TRIM(DISTINCT (NOT (rt1.c0)), rt1.c2)))) UNION SELECT DISTINCT * FROM rt1, t0, v0 WHERE (((TRIM(DISTINCT (NOT (rt1.c0)), rt1.c2)) ISNULL));
SELECT DISTINCT * FROM rt1, t0, v0;
SELECT ALL rt1.c3, rt1.c1, t0.c0, rt1.c2, vt0.c0, rt1.c0 FROM rt1, t0, vt0 GROUP BY rt1.c3, rt1.c1, t0.c0, rt1.c2, vt0.c0, rt1.c0;
SELECT ALL rt1.c3, rt1.c1, t0.c0, rt1.c2, vt0.c0, rt1.c0 FROM rt1, t0, vt0 WHERE ((NOT (((rt1.c0) BETWEEN (rt1.c2) AND (vt0.c0))))) GROUP BY rt1.c3, rt1.c1, t0.c0, rt1.c2, vt0.c0, rt1.c0 UNION SELECT rt1.c3, rt1.c1, t0.c0, rt1.c2, vt0.c0, rt1.c0 FROM rt1, t0, vt0 WHERE ((NOT ((NOT (((rt1.c0) BETWEEN (rt1.c2) AND (vt0.c0))))))) GROUP BY rt1.c3, rt1.c1, t0.c0, rt1.c2, vt0.c0, rt1.c0 UNION SELECT ALL rt1.c3, rt1.c1, t0.c0, rt1.c2, vt0.c0, rt1.c0 FROM rt1, t0, vt0 WHERE ((((NOT (((rt1.c0) BETWEEN (rt1.c2) AND (vt0.c0))))) ISNULL)) GROUP BY rt1.c3, rt1.c1, t0.c0, rt1.c2, vt0.c0, rt1.c0;
SELECT ALL rt1.c3, rt1.c1, t0.c0, rt1.c2, vt0.c0, rt1.c0 FROM rt1, t0, vt0 GROUP BY rt1.c3, rt1.c1, t0.c0, rt1.c2, vt0.c0, rt1.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX((((COUNT(*))) NOT BETWEEN ((vt0.c0)) AND ((MAX(AVG(vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX((((COUNT(*))) NOT BETWEEN ((vt0.c0)) AND ((MAX(AVG(vt0.c0)))))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX((((COUNT(*))) NOT BETWEEN ((vt0.c0)) AND ((MAX(AVG(vt0.c0))))))) ISNULL);
SELECT * FROM vt0, t0 RIGHT OUTER JOIN v0 ON LIKELY(DISTINCT CAST(v0.c0 AS TEXT));
SELECT * FROM vt0, t0 RIGHT OUTER JOIN v0 ON LIKELY(DISTINCT CAST(v0.c0 AS TEXT)) WHERE (x'') UNION ALL SELECT * FROM vt0, t0 RIGHT OUTER JOIN v0 ON LIKELY(DISTINCT CAST(v0.c0 AS TEXT)) WHERE ((NOT (x''))) UNION ALL SELECT ALL * FROM vt0, t0 RIGHT OUTER JOIN v0 ON LIKELY(DISTINCT CAST(v0.c0 AS TEXT)) WHERE (((x'') ISNULL));
SELECT * FROM vt0, t0 RIGHT OUTER JOIN v0 ON LIKELY(DISTINCT CAST(v0.c0 AS TEXT));
SELECT DISTINCT vt0.c0 FROM vt0, t0;
SELECT DISTINCT vt0.c0 FROM vt0, t0 WHERE (NULLIF((((vt0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, vt0.c0, vt0.c0)) AND ((NULL, vt0.c0, vt0.c0))), 'Hs')) UNION SELECT DISTINCT vt0.c0 FROM vt0, t0 WHERE ((NOT (NULLIF((((vt0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, vt0.c0, vt0.c0)) AND ((NULL, vt0.c0, vt0.c0))), 'Hs')))) UNION SELECT DISTINCT vt0.c0 FROM vt0, t0 WHERE (((NULLIF((((vt0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, vt0.c0, vt0.c0)) AND ((NULL, vt0.c0, vt0.c0))), 'Hs')) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0, t0;
SELECT vt0.c0, rt1.c3, rt1.c1, rt1.c0, t0.c0, v0.c0 FROM vt0, t0, rt1, v0 GROUP BY vt0.c0, rt1.c3, rt1.c1, rt1.c0, t0.c0, v0.c0;
SELECT ALL vt0.c0, rt1.c3, rt1.c1, rt1.c0, t0.c0, v0.c0 FROM vt0, t0, rt1, v0 WHERE (rt1.c0) GROUP BY vt0.c0, rt1.c3, rt1.c1, rt1.c0, t0.c0, v0.c0 UNION SELECT vt0.c0, rt1.c3, rt1.c1, rt1.c0, t0.c0, v0.c0 FROM vt0, t0, rt1, v0 WHERE ((NOT (rt1.c0))) GROUP BY vt0.c0, rt1.c3, rt1.c1, rt1.c0, t0.c0, v0.c0 UNION SELECT ALL vt0.c0, rt1.c3, rt1.c1, rt1.c0, t0.c0, v0.c0 FROM vt0, t0 NOT INDEXED, rt1, v0 WHERE (((rt1.c0) ISNULL)) GROUP BY vt0.c0, rt1.c3, rt1.c1, rt1.c0, t0.c0, v0.c0;
SELECT vt0.c0, rt1.c3, rt1.c1, rt1.c0, t0.c0, v0.c0 FROM vt0, t0, rt1, v0 GROUP BY vt0.c0, rt1.c3, rt1.c1, rt1.c0, t0.c0, v0.c0;
SELECT rt1.c3, rt1.c2 FROM v0, t0, rt1, vt0 NOT INDEXED GROUP BY rt1.c3, rt1.c2;
SELECT ALL rt1.c3, rt1.c2 FROM v0, t0 NOT INDEXED, rt1, vt0 GROUP BY rt1.c3, rt1.c2 HAVING COUNT(CASE v0.c0  WHEN 1073636817 THEN TOTAL(v0.c0) END) UNION ALL SELECT rt1.c3, rt1.c2 FROM v0, t0, rt1, vt0 GROUP BY rt1.c3, rt1.c2 HAVING (NOT (COUNT(CASE v0.c0  WHEN 1073636817 THEN TOTAL(v0.c0) END))) UNION ALL SELECT ALL rt1.c3, rt1.c2 FROM v0, t0, rt1, vt0 GROUP BY rt1.c3, rt1.c2 HAVING ((COUNT(CASE v0.c0  WHEN 1073636817 THEN TOTAL(v0.c0) END)) ISNULL);
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE (CAST(NULL AS INTEGER) COLLATE NOCASE) UNION ALL SELECT * FROM t0 WHERE ((NOT (CAST(NULL AS INTEGER) COLLATE NOCASE))) UNION ALL SELECT ALL * FROM t0 WHERE (((CAST(NULL AS INTEGER) COLLATE NOCASE) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM v0, t0, vt0;
SELECT DISTINCT * FROM v0, t0, vt0 WHERE ((((t0.c0 IN ())) BETWEEN (((t0.c0)IS(v0.c0))) AND ((~ (vt0.c0))))) UNION SELECT DISTINCT * FROM v0, t0, vt0 WHERE ((NOT ((((t0.c0 IN ())) BETWEEN (((t0.c0)IS(v0.c0))) AND ((~ (vt0.c0))))))) UNION SELECT DISTINCT * FROM v0, t0, vt0 WHERE ((((((t0.c0 IN ())) BETWEEN (((t0.c0)IS(v0.c0))) AND ((~ (vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0, t0, vt0;
SELECT vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 WHERE ((- (load_extension(vt0.c0)))) GROUP BY vt0.c0, t0.c0 UNION SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 WHERE ((NOT ((- (load_extension(vt0.c0)))))) GROUP BY vt0.c0, t0.c0 UNION SELECT vt0.c0, t0.c0 FROM vt0, t0 WHERE ((((- (load_extension(vt0.c0)))) ISNULL)) GROUP BY vt0.c0, t0.c0;
SELECT ALL rt1.c3, v0.c0, t0.c0, rt1.c1, rt1.c2, rt1.c0 FROM v0, rt1 NOT INDEXED, t0 GROUP BY rt1.c3, v0.c0, t0.c0, rt1.c1, rt1.c2, rt1.c0;
SELECT ALL rt1.c3, v0.c0, t0.c0, rt1.c1, rt1.c2, rt1.c0 FROM v0, rt1, t0 GROUP BY rt1.c3, v0.c0, t0.c0, rt1.c1, rt1.c2, rt1.c0 HAVING GROUP_CONCAT(COUNT(*)) UNION ALL SELECT rt1.c3, v0.c0, t0.c0, rt1.c1, rt1.c2, rt1.c0 FROM v0, rt1, t0 GROUP BY rt1.c3, v0.c0, t0.c0, rt1.c1, rt1.c2, rt1.c0 HAVING (NOT (GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT ALL rt1.c3, v0.c0, t0.c0, rt1.c1, rt1.c2, rt1.c0 FROM v0, rt1, t0 GROUP BY rt1.c3, v0.c0, t0.c0, rt1.c1, rt1.c2, rt1.c0 HAVING ((GROUP_CONCAT(COUNT(*))) ISNULL);
SELECT ALL v0.c0, rt1.c0, rt1.c2 FROM vt0, v0, t0, rt1;
SELECT v0.c0, rt1.c0, rt1.c2 FROM vt0, v0, t0, rt1 WHERE (((((((((((((rt1.c3)OR(CAST(rt1.c0 AS TEXT))))AND(vt0.c0)))AND(rt1.c1 COLLATE BINARY)))AND(NULL)))AND(NULL)))OR(((rt1.c3) BETWEEN (vt0.c0) AND (rt1.c1))))) UNION ALL SELECT v0.c0, rt1.c0, rt1.c2 FROM vt0, v0, t0, rt1 WHERE ((NOT (((((((((((((rt1.c3)OR(CAST(rt1.c0 AS TEXT))))AND(vt0.c0)))AND(rt1.c1 COLLATE BINARY)))AND(NULL)))AND(NULL)))OR(((rt1.c3) BETWEEN (vt0.c0) AND (rt1.c1))))))) UNION ALL SELECT ALL v0.c0, rt1.c0, rt1.c2 FROM vt0, v0, t0, rt1 WHERE (((((((((((((((rt1.c3)OR(CAST(rt1.c0 AS TEXT))))AND(vt0.c0)))AND(rt1.c1 COLLATE BINARY)))AND(NULL)))AND(NULL)))OR(((rt1.c3) BETWEEN (vt0.c0) AND (rt1.c1))))) ISNULL));
SELECT ALL v0.c0, rt1.c0, rt1.c2 FROM vt0, v0, t0, rt1;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (CASE ((t0.c0) NOTNULL)  WHEN t0.c0 THEN ((t0.c0) NOT BETWEEN (0.33059569372524755) AND (t0.c0)) END) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (CASE ((t0.c0) NOTNULL)  WHEN t0.c0 THEN ((t0.c0) NOT BETWEEN (0.33059569372524755) AND (t0.c0)) END))) UNION SELECT DISTINCT * FROM t0 WHERE (((CASE ((t0.c0) NOTNULL)  WHEN t0.c0 THEN ((t0.c0) NOT BETWEEN (0.33059569372524755) AND (t0.c0)) END) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CAST(NULLIF(DISTINCT x'', '2싀') AS INTEGER)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CAST(NULLIF(DISTINCT x'', '2싀') AS INTEGER)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((CAST(NULLIF(DISTINCT x'', '2싀') AS INTEGER)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL t0.c0, rt1.c0, rt1.c1 FROM rt1, t0, vt0 GROUP BY t0.c0, rt1.c0, rt1.c1;
SELECT t0.c0, rt1.c0, rt1.c1 FROM rt1, t0, vt0 GROUP BY t0.c0, rt1.c0, rt1.c1 HAVING (((('eV')OR((COUNT(vt0.c0) IN ()))))OR(SUM(TOTAL(NULL)))) UNION ALL SELECT ALL t0.c0, rt1.c0, rt1.c1 FROM rt1 NOT INDEXED, t0, vt0 GROUP BY t0.c0, rt1.c0, rt1.c1 HAVING (NOT ((((('eV')OR((COUNT(vt0.c0) IN ()))))OR(SUM(TOTAL(NULL)))))) UNION ALL SELECT ALL t0.c0, rt1.c0, rt1.c1 FROM rt1, t0, vt0 GROUP BY t0.c0, rt1.c0, rt1.c1 HAVING (((((('eV')OR((COUNT(vt0.c0) IN ()))))OR(SUM(TOTAL(NULL))))) ISNULL);
SELECT * FROM t0, vt0 RIGHT OUTER JOIN rt1 ON (+ (((t0.c0)AND(rt1.c0)))) LEFT OUTER JOIN v0 ON (((rt1.c3) BETWEEN (v0.c0) AND (x'')) IN ());
SELECT * FROM t0, vt0 RIGHT OUTER JOIN rt1 ON (+ (((t0.c0)AND(rt1.c0)))) LEFT OUTER JOIN v0 ON (((rt1.c3) BETWEEN (v0.c0) AND (x'')) IN ()) WHERE (((((((((((((((v0.c0)OR(rt1.c3)))AND(rt1.c1)))AND(rt1.c3)))AND(vt0.c0)))AND(rt1.c3)))OR(rt1.c0))) NOT NULL)) UNION ALL SELECT ALL * FROM t0, vt0 RIGHT OUTER JOIN rt1 ON (+ (((t0.c0)AND(rt1.c0)))) LEFT OUTER JOIN v0 ON (((rt1.c3) BETWEEN (v0.c0) AND (x'')) IN ()) WHERE ((NOT (((((((((((((((v0.c0)OR(rt1.c3)))AND(rt1.c1)))AND(rt1.c3)))AND(vt0.c0)))AND(rt1.c3)))OR(rt1.c0))) NOT NULL)))) UNION ALL SELECT ALL * FROM t0, vt0 RIGHT OUTER JOIN rt1 ON (+ (((t0.c0)AND(rt1.c0)))) LEFT OUTER JOIN v0 ON (((rt1.c3) BETWEEN (v0.c0) AND (x'')) IN ()) WHERE (((((((((((((((((v0.c0)OR(rt1.c3)))AND(rt1.c1)))AND(rt1.c3)))AND(vt0.c0)))AND(rt1.c3)))OR(rt1.c0))) NOT NULL)) ISNULL));
SELECT * FROM t0, vt0 RIGHT OUTER JOIN rt1 ON (+ (((t0.c0)AND(rt1.c0)))) LEFT OUTER JOIN v0 ON (((rt1.c3) BETWEEN (v0.c0) AND (x'')) IN ());
SELECT DISTINCT rt1.c1, t0.c0, rt1.c0, vt0.c0 FROM t0, vt0, rt1, v0;
SELECT DISTINCT rt1.c1, t0.c0, rt1.c0, vt0.c0 FROM t0, vt0, rt1, v0 WHERE (v0.c0) UNION SELECT DISTINCT rt1.c1, t0.c0, rt1.c0, vt0.c0 FROM t0, vt0, rt1, v0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT rt1.c1, t0.c0, rt1.c0, vt0.c0 FROM t0, vt0, rt1, v0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT rt1.c1, t0.c0, rt1.c0, vt0.c0 FROM t0, vt0, rt1, v0;
SELECT t0.c0 FROM t0, vt0, rt1 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, vt0, rt1 WHERE ('N眧as~>J') GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0, vt0, rt1 WHERE ((NOT ('N眧as~>J'))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0, vt0, rt1 WHERE ((('N眧as~>J') ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0, vt0, rt1 GROUP BY t0.c0;
SELECT ALL rt1.c3 FROM rt1, vt0 GROUP BY rt1.c3;
SELECT ALL rt1.c3 FROM rt1, vt0 GROUP BY rt1.c3 HAVING load_extension(CAST(COUNT(rt1.c1) AS INTEGER), ((((((((MAX(0.842601950089542))AND(rt1.c3)))OR(x'')))AND(rt1.c1)))OR(x''))) UNION ALL SELECT rt1.c3 FROM rt1, vt0 GROUP BY rt1.c3 HAVING (NOT (load_extension(CAST(COUNT(rt1.c1) AS INTEGER), ((((((((MAX(0.842601950089542))AND(rt1.c3)))OR(x'')))AND(rt1.c1)))OR(x''))))) UNION ALL SELECT ALL rt1.c3 FROM rt1, vt0 GROUP BY rt1.c3 HAVING ((load_extension(CAST(COUNT(rt1.c1) AS INTEGER), ((((((((MAX(0.842601950089542))AND(rt1.c3)))OR(x'')))AND(rt1.c1)))OR(x'')))) ISNULL);
SELECT ALL rt1.c3 FROM rt1, vt0 GROUP BY rt1.c3;
SELECT ALL rt1.c3 FROM rt1, vt0 GROUP BY rt1.c3 HAVING load_extension(CAST(COUNT(rt1.c1) AS INTEGER), ((((((((MAX(0.842601950089542))AND(rt1.c3)))OR(x'')))AND(rt1.c1)))OR(x''))) UNION ALL SELECT rt1.c3 FROM rt1, vt0 GROUP BY rt1.c3 HAVING (NOT (load_extension(CAST(COUNT(rt1.c1) AS INTEGER), ((((((((MAX(0.842601950089542))AND(rt1.c3)))OR(x'')))AND(rt1.c1)))OR(x''))))) UNION ALL SELECT ALL rt1.c3 FROM rt1, vt0 GROUP BY rt1.c3 HAVING ((load_extension(CAST(COUNT(rt1.c1) AS INTEGER), ((((((((MAX(0.842601950089542))AND(rt1.c3)))OR(x'')))AND(rt1.c1)))OR(x'')))) ISNULL);
SELECT ALL rt1.c3 FROM rt1, vt0 GROUP BY rt1.c3;
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (0.614654421991133) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (0.614654421991133))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((0.614654421991133) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM t0 INDEXED BY i24 RIGHT OUTER JOIN v0 ON (- (t0.c0 COLLATE NOCASE));
SELECT DISTINCT v0.c0 FROM t0 INDEXED BY i24 RIGHT OUTER JOIN v0 ON (- (t0.c0 COLLATE NOCASE)) WHERE ((((((v0.c0, v0.c0, v0.c0))<((0x7cf25f5f, t0.c0, t0.c0)))) IS TRUE)) UNION SELECT DISTINCT v0.c0 FROM t0 INDEXED BY i24 RIGHT OUTER JOIN v0 ON (- (t0.c0 COLLATE NOCASE)) WHERE ((NOT ((((((v0.c0, v0.c0, v0.c0))<((0x7cf25f5f, t0.c0, t0.c0)))) IS TRUE)))) UNION SELECT DISTINCT v0.c0 FROM t0 INDEXED BY i24 RIGHT OUTER JOIN v0 ON (- (t0.c0 COLLATE NOCASE)) WHERE ((((((((v0.c0, v0.c0, v0.c0))<((0X7cf25f5f, t0.c0, t0.c0)))) IS TRUE)) ISNULL));
SELECT DISTINCT v0.c0 FROM t0 INDEXED BY i24 RIGHT OUTER JOIN v0 ON (- (t0.c0 COLLATE NOCASE));
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ((json_array_length(t0.c0) IN ())) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((json_array_length(t0.c0) IN ())))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((((json_array_length(t0.c0) IN ())) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL v0.c0, rt1.c3, rt1.c1, t0.c0, vt0.c0 FROM t0, vt0, v0, rt1 GROUP BY v0.c0, rt1.c3, rt1.c1, t0.c0, vt0.c0;
SELECT ALL v0.c0, rt1.c3, rt1.c1, t0.c0, vt0.c0 FROM t0, vt0, v0, rt1 GROUP BY v0.c0, rt1.c3, rt1.c1, t0.c0, vt0.c0 HAVING (((GROUP_CONCAT(rt1.c3), TOTAL(MAX(AVG(COUNT(rt1.c1)))), CAST(rt1.c3 AS NUMERIC)))<=(((~ (SUM(TOTAL(AVG(MAX(rt1.c0)))))), MIN(AVG(rt1.c3)), rt1.c3))) UNION ALL SELECT v0.c0, rt1.c3, rt1.c1, t0.c0, vt0.c0 FROM t0, vt0, v0, rt1 GROUP BY v0.c0, rt1.c3, rt1.c1, t0.c0, vt0.c0 HAVING (NOT ((((GROUP_CONCAT(rt1.c3), TOTAL(MAX(AVG(COUNT(rt1.c1)))), CAST(rt1.c3 AS NUMERIC)))<=(((~ (SUM(TOTAL(AVG(MAX(rt1.c0)))))), MIN(AVG(rt1.c3)), rt1.c3))))) UNION ALL SELECT ALL v0.c0, rt1.c3, rt1.c1, t0.c0, vt0.c0 FROM t0, vt0, v0, rt1 GROUP BY v0.c0, rt1.c3, rt1.c1, t0.c0, vt0.c0 HAVING (((((GROUP_CONCAT(rt1.c3), TOTAL(MAX(AVG(COUNT(rt1.c1)))), CAST(rt1.c3 AS NUMERIC)))<=(((~ (SUM(TOTAL(AVG(MAX(rt1.c0)))))), MIN(AVG(rt1.c3)), rt1.c3)))) ISNULL);
SELECT ALL rt1.c1, rt1.c0, t0.c0, vt0.c0, rt1.c2, v0.c0, rt1.c3 FROM t0, rt1, vt0 LEFT OUTER JOIN v0 ON (NOT (RTRIM(rt1.c2)));
SELECT rt1.c1, rt1.c0, t0.c0, vt0.c0, rt1.c2, v0.c0, rt1.c3 FROM t0, rt1, vt0 LEFT OUTER JOIN v0 ON (NOT (RTRIM(rt1.c2))) WHERE (((CAST(rt1.c0 AS TEXT)) BETWEEN (rt1.c1 COLLATE RTRIM) AND ((+ (rt1.c2))))) UNION ALL SELECT rt1.c1, rt1.c0, t0.c0, vt0.c0, rt1.c2, v0.c0, rt1.c3 FROM t0, rt1, vt0 LEFT OUTER JOIN v0 ON (NOT (RTRIM(rt1.c2))) WHERE ((NOT (((CAST(rt1.c0 AS TEXT)) BETWEEN (rt1.c1 COLLATE RTRIM) AND ((+ (rt1.c2))))))) UNION ALL SELECT ALL rt1.c1, rt1.c0, t0.c0, vt0.c0, rt1.c2, v0.c0, rt1.c3 FROM t0, rt1, vt0 LEFT OUTER JOIN v0 ON (NOT (RTRIM(rt1.c2))) WHERE (((((CAST(rt1.c0 AS TEXT)) BETWEEN (rt1.c1 COLLATE RTRIM) AND ((+ (rt1.c2))))) ISNULL));
SELECT ALL rt1.c1, rt1.c0, t0.c0, vt0.c0, rt1.c2, v0.c0, rt1.c3 FROM t0, rt1, vt0 LEFT OUTER JOIN v0 ON (NOT (RTRIM(rt1.c2)));
SELECT DISTINCT v0.c0 FROM t0, v0;
SELECT DISTINCT v0.c0 FROM t0, v0 WHERE ((- (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) UNION SELECT DISTINCT v0.c0 FROM t0, v0 WHERE ((NOT ((- (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))))) UNION SELECT DISTINCT v0.c0 FROM t0, v0 WHERE ((((- (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) ISNULL));
SELECT DISTINCT v0.c0 FROM t0, v0;
SELECT vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 WHERE (((NULL)<(t0.c0)) COLLATE RTRIM) GROUP BY vt0.c0, t0.c0 UNION SELECT vt0.c0, t0.c0 FROM vt0, t0 WHERE ((NOT (((NULL)<(t0.c0)) COLLATE RTRIM))) GROUP BY vt0.c0, t0.c0 UNION SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 WHERE (((((NULL)<(t0.c0)) COLLATE RTRIM) ISNULL)) GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG(((vt0.c0)<(AVG(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (AVG(((vt0.c0)<(AVG(vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG(((vt0.c0)<(AVG(vt0.c0))))) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 NOT INDEXED WHERE (CAST(HEX(DISTINCT v0.c0) AS TEXT)) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CAST(HEX(DISTINCT v0.c0) AS TEXT)))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((CAST(HEX(DISTINCT v0.c0) AS TEXT)) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT t0.c0, rt1.c0, rt1.c2, rt1.c1, v0.c0 FROM t0 INNER JOIN rt1 ON ((v0.c0 COLLATE NOCASE)<=((((NULL)) BETWEEN ((rt1.c2)) AND ((rt1.c0))))) RIGHT OUTER JOIN v0 ON ((((t0.c0) NOT NULL)) IS FALSE);
SELECT v0.c0, t0.c0 FROM v0, rt1, t0 GROUP BY v0.c0, t0.c0;
SELECT ALL v0.c0, t0.c0 FROM v0, rt1, t0 WHERE ((+ (CAST(rt1.c0 AS NUMERIC)))) GROUP BY v0.c0, t0.c0 UNION SELECT ALL v0.c0, t0.c0 FROM v0, rt1, t0 WHERE ((NOT ((+ (CAST(rt1.c0 AS NUMERIC)))))) GROUP BY v0.c0, t0.c0 UNION SELECT ALL v0.c0, t0.c0 FROM v0, rt1, t0 WHERE ((((+ (CAST(rt1.c0 AS NUMERIC)))) ISNULL)) GROUP BY v0.c0, t0.c0;
SELECT v0.c0, t0.c0 FROM v0, rt1, t0 GROUP BY v0.c0, t0.c0;
SELECT ALL rt1.c1, t0.c0 FROM vt0, rt1, v0, t0 GROUP BY rt1.c1, t0.c0;
SELECT rt1.c1, t0.c0 FROM vt0, rt1, v0, t0 GROUP BY rt1.c1, t0.c0 HAVING AVG(rt1.c1) UNION ALL SELECT ALL rt1.c1, t0.c0 FROM vt0, rt1, v0, t0 GROUP BY rt1.c1, t0.c0 HAVING (NOT (AVG(rt1.c1))) UNION ALL SELECT ALL rt1.c1, t0.c0 FROM vt0, rt1, v0, t0 GROUP BY rt1.c1, t0.c0 HAVING ((AVG(rt1.c1)) ISNULL);
SELECT ALL rt1.c1, t0.c0 FROM vt0, rt1, v0, t0 GROUP BY rt1.c1, t0.c0;
SELECT rt1.c1, t0.c0 FROM vt0, rt1, v0, t0 GROUP BY rt1.c1, t0.c0 HAVING AVG(rt1.c1) UNION ALL SELECT ALL rt1.c1, t0.c0 FROM vt0, rt1, v0, t0 GROUP BY rt1.c1, t0.c0 HAVING (NOT (AVG(rt1.c1))) UNION ALL SELECT ALL rt1.c1, t0.c0 FROM vt0, rt1, v0, t0 GROUP BY rt1.c1, t0.c0 HAVING ((AVG(rt1.c1)) ISNULL);
SELECT ALL rt1.c1, t0.c0 FROM vt0, rt1, v0, t0 GROUP BY rt1.c1, t0.c0;
SELECT * FROM v0, rt1, vt0;
SELECT * FROM v0, rt1, vt0 WHERE (((((-2009488626) IS FALSE))IS((((rt1.c3))<((v0.c0)))))) UNION ALL SELECT * FROM v0, rt1, vt0 WHERE ((NOT (((((-2009488626) IS FALSE))IS((((rt1.c3))<((v0.c0)))))))) UNION ALL SELECT ALL * FROM v0, rt1, vt0 WHERE (((((((-2009488626) IS FALSE))IS((((rt1.c3))<((v0.c0)))))) ISNULL));
SELECT * FROM v0, rt1, vt0;
SELECT DISTINCT v0.c0 FROM vt0, v0, t0;
SELECT DISTINCT v0.c0 FROM vt0, v0 NOT INDEXED, t0 WHERE (2.028807004E9) UNION SELECT DISTINCT v0.c0 FROM vt0, v0, t0 WHERE ((NOT (2.028807004E9))) UNION SELECT DISTINCT v0.c0 FROM vt0, v0, t0 WHERE (((2.028807004E9) ISNULL));
SELECT DISTINCT v0.c0 FROM vt0, v0, t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (CASE ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0))  WHEN ((t0.c0)GLOB(t0.c0)) THEN ((t0.c0) IS FALSE) ELSE t0.c0 COLLATE BINARY END) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (CASE ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0))  WHEN ((t0.c0)GLOB(t0.c0)) THEN ((t0.c0) IS FALSE) ELSE t0.c0 COLLATE BINARY END))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((CASE ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0))  WHEN ((t0.c0)GLOB(t0.c0)) THEN ((t0.c0) IS FALSE) ELSE t0.c0 COLLATE BINARY END) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT v0.c0 FROM t0, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM t0, v0 GROUP BY v0.c0 HAVING GROUP_CONCAT(GROUP_CONCAT(v0.c0)) UNION ALL SELECT v0.c0 FROM t0, v0 GROUP BY v0.c0 HAVING (NOT (GROUP_CONCAT(GROUP_CONCAT(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM t0, v0 GROUP BY v0.c0 HAVING ((GROUP_CONCAT(GROUP_CONCAT(v0.c0))) ISNULL);
SELECT ALL t0.c0, rt1.c0, v0.c0, rt1.c1, vt0.c0, rt1.c3, rt1.c2 FROM v0, rt1 CROSS JOIN t0 ON DATE((((rt1.c0)) BETWEEN ((NULL)) AND ((rt1.c3))), ((rt1.c3)>>(rt1.c2)), (t0.c0 IN ())) CROSS JOIN vt0 ON ((((v0.c0) NOT BETWEEN (rt1.c1) AND (v0.c0))) BETWEEN (((rt1.c2)>>(rt1.c3))) AND (CASE v0.c0  WHEN rt1.c2 THEN rt1.c0 END));
SELECT ALL t0.c0, rt1.c0, v0.c0, rt1.c1, vt0.c0, rt1.c3, rt1.c2 FROM v0, rt1 CROSS JOIN t0 ON DATE((((rt1.c0)) BETWEEN ((NULL)) AND ((rt1.c3))), ((rt1.c3)>>(rt1.c2)), (t0.c0 IN ())) CROSS JOIN vt0 ON ((((v0.c0) NOT BETWEEN (rt1.c1) AND (v0.c0))) BETWEEN (((rt1.c2)>>(rt1.c3))) AND (CASE v0.c0  WHEN rt1.c2 THEN rt1.c0 END)) WHERE ((NOT (rt1.c3))) UNION ALL SELECT t0.c0, rt1.c0, v0.c0, rt1.c1, vt0.c0, rt1.c3, rt1.c2 FROM v0, rt1 CROSS JOIN t0 ON DATE((((rt1.c0)) BETWEEN ((NULL)) AND ((rt1.c3))), ((rt1.c3)>>(rt1.c2)), (t0.c0 IN ())) CROSS JOIN vt0 ON ((((v0.c0) NOT BETWEEN (rt1.c1) AND (v0.c0))) BETWEEN (((rt1.c2)>>(rt1.c3))) AND (CASE v0.c0  WHEN rt1.c2 THEN rt1.c0 END)) WHERE ((NOT ((NOT (rt1.c3))))) UNION ALL SELECT ALL t0.c0, rt1.c0, v0.c0, rt1.c1, vt0.c0, rt1.c3, rt1.c2 FROM v0, rt1 CROSS JOIN t0 ON DATE((((rt1.c0)) BETWEEN ((NULL)) AND ((rt1.c3))), ((rt1.c3)>>(rt1.c2)), (t0.c0 IN ())) CROSS JOIN vt0 ON ((((v0.c0) NOT BETWEEN (rt1.c1) AND (v0.c0))) BETWEEN (((rt1.c2)>>(rt1.c3))) AND (CASE v0.c0  WHEN rt1.c2 THEN rt1.c0 END)) WHERE ((((NOT (rt1.c3))) ISNULL));
SELECT ALL t0.c0, rt1.c0, v0.c0, rt1.c1, vt0.c0, rt1.c3, rt1.c2 FROM v0, rt1 CROSS JOIN t0 ON DATE((((rt1.c0)) BETWEEN ((NULL)) AND ((rt1.c3))), ((rt1.c3)>>(rt1.c2)), (t0.c0 IN ())) CROSS JOIN vt0 ON ((((v0.c0) NOT BETWEEN (rt1.c1) AND (v0.c0))) BETWEEN (((rt1.c2)>>(rt1.c3))) AND (CASE v0.c0  WHEN rt1.c2 THEN rt1.c0 END));
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((((v0.c0)&(v0.c0))) NOT NULL)) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((((v0.c0)&(v0.c0))) NOT NULL)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((v0.c0)&(v0.c0))) NOT NULL)) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL vt0.c0, rt1.c1, rt1.c3, rt1.c2 FROM rt1, vt0 GROUP BY vt0.c0, rt1.c1, rt1.c3, rt1.c2;
SELECT vt0.c0, rt1.c1, rt1.c3, rt1.c2 FROM rt1, vt0 WHERE ((- (LIKELY(rt1.c2)))) GROUP BY vt0.c0, rt1.c1, rt1.c3, rt1.c2 UNION SELECT ALL vt0.c0, rt1.c1, rt1.c3, rt1.c2 FROM rt1, vt0 WHERE ((NOT ((- (LIKELY(rt1.c2)))))) GROUP BY vt0.c0, rt1.c1, rt1.c3, rt1.c2 UNION SELECT ALL vt0.c0, rt1.c1, rt1.c3, rt1.c2 FROM rt1, vt0 WHERE ((((- (LIKELY(rt1.c2)))) ISNULL)) GROUP BY vt0.c0, rt1.c1, rt1.c3, rt1.c2;
SELECT ALL vt0.c0, rt1.c1, rt1.c3, rt1.c2 FROM rt1, vt0 GROUP BY vt0.c0, rt1.c1, rt1.c3, rt1.c2;
SELECT vt0.c0, t0.c0 FROM vt0 CROSS JOIN t0 ON CAST(((((((((t0.c0)OR(t0.c0)))OR(vt0.c0)))OR(t0.c0)))AND(vt0.c0)) AS INTEGER) GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM vt0 CROSS JOIN t0 ON CAST(((((((((t0.c0)OR(t0.c0)))OR(vt0.c0)))OR(t0.c0)))AND(vt0.c0)) AS INTEGER) GROUP BY vt0.c0, t0.c0 HAVING (MAX(vt0.c0) IN (-1581508289)) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM vt0 CROSS JOIN t0 ON CAST(((((((((t0.c0)OR(t0.c0)))OR(vt0.c0)))OR(t0.c0)))AND(vt0.c0)) AS INTEGER) GROUP BY vt0.c0, t0.c0 HAVING (NOT ((MAX(vt0.c0) IN (-1581508289)))) UNION ALL SELECT vt0.c0, t0.c0 FROM vt0 CROSS JOIN t0 ON CAST(((((((((t0.c0)OR(t0.c0)))OR(vt0.c0)))OR(t0.c0)))AND(vt0.c0)) AS INTEGER) GROUP BY vt0.c0, t0.c0 HAVING (((MAX(vt0.c0) IN (-1581508289))) ISNULL);
SELECT vt0.c0, t0.c0 FROM vt0 CROSS JOIN t0 ON CAST(((((((((t0.c0)OR(t0.c0)))OR(vt0.c0)))OR(t0.c0)))AND(vt0.c0)) AS INTEGER) GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM vt0 CROSS JOIN t0 ON CAST(((((((((t0.c0)OR(t0.c0)))OR(vt0.c0)))OR(t0.c0)))AND(vt0.c0)) AS INTEGER) GROUP BY vt0.c0, t0.c0 HAVING (MAX(vt0.c0) IN (-1581508289)) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM vt0 CROSS JOIN t0 ON CAST(((((((((t0.c0)OR(t0.c0)))OR(vt0.c0)))OR(t0.c0)))AND(vt0.c0)) AS INTEGER) GROUP BY vt0.c0, t0.c0 HAVING (NOT ((MAX(vt0.c0) IN (-1581508289)))) UNION ALL SELECT vt0.c0, t0.c0 FROM vt0 CROSS JOIN t0 ON CAST(((((((((t0.c0)OR(t0.c0)))OR(vt0.c0)))OR(t0.c0)))AND(vt0.c0)) AS INTEGER) GROUP BY vt0.c0, t0.c0 HAVING (((MAX(vt0.c0) IN (-1581508289))) ISNULL);
SELECT vt0.c0, t0.c0 FROM vt0 CROSS JOIN t0 ON CAST(((((((((t0.c0)OR(t0.c0)))OR(vt0.c0)))OR(t0.c0)))AND(vt0.c0)) AS INTEGER) GROUP BY vt0.c0, t0.c0;
SELECT ALL v0.c0, rt1.c3, rt1.c2, rt1.c1 FROM vt0, v0, rt1, t0;
SELECT ALL v0.c0, rt1.c3, rt1.c2, rt1.c1 FROM vt0, v0, rt1, t0 WHERE (((rt1.c1)<>(rt1.c1)) COLLATE NOCASE) UNION ALL SELECT v0.c0, rt1.c3, rt1.c2, rt1.c1 FROM vt0, v0, rt1, t0 WHERE ((NOT (((rt1.c1)<>(rt1.c1)) COLLATE NOCASE))) UNION ALL SELECT ALL v0.c0, rt1.c3, rt1.c2, rt1.c1 FROM vt0, v0, rt1, t0 WHERE (((((rt1.c1)<>(rt1.c1)) COLLATE NOCASE) ISNULL));
SELECT ALL v0.c0, rt1.c3, rt1.c2, rt1.c1 FROM vt0, v0, rt1, t0;
SELECT DISTINCT v0.c0 FROM v0 INNER JOIN vt0 ON (((~ (vt0.c0))) NOT BETWEEN ((+ (vt0.c0))) AND (v0.c0));
SELECT DISTINCT v0.c0 FROM v0 INNER JOIN vt0 ON (((~ (vt0.c0))) NOT BETWEEN ((+ (vt0.c0))) AND (v0.c0)) WHERE (HEX(DISTINCT CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)) UNION SELECT DISTINCT v0.c0 FROM v0 INNER JOIN vt0 ON (((~ (vt0.c0))) NOT BETWEEN ((+ (vt0.c0))) AND (v0.c0)) WHERE ((NOT (HEX(DISTINCT CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)))) UNION SELECT DISTINCT v0.c0 FROM v0 INNER JOIN vt0 ON (((~ (vt0.c0))) NOT BETWEEN ((+ (vt0.c0))) AND (v0.c0)) WHERE (((HEX(DISTINCT CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)) ISNULL));
SELECT DISTINCT v0.c0 FROM v0 INNER JOIN vt0 ON (((~ (vt0.c0))) NOT BETWEEN ((+ (vt0.c0))) AND (v0.c0));
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CASE ((vt0.c0)&(vt0.c0))  WHEN LIKELIHOOD(vt0.c0, 0.5743000112000172) THEN vt0.c0 ELSE ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) END) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CASE ((vt0.c0)&(vt0.c0))  WHEN LIKELIHOOD(vt0.c0, 0.5743000112000172) THEN vt0.c0 ELSE ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) END))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((CASE ((vt0.c0)&(vt0.c0))  WHEN LIKELIHOOD(vt0.c0, 0.5743000112000172) THEN vt0.c0 ELSE ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) END) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt1.c1, rt1.c2, t0.c0 FROM v0 CROSS JOIN t0 ON CAST(1563728289 AS BLOB) RIGHT OUTER JOIN rt1 ON 2.096258911E9 GROUP BY rt1.c1, rt1.c2, t0.c0;
SELECT ALL rt1.c1, rt1.c2, t0.c0 FROM v0 CROSS JOIN t0 ON CAST(1563728289 AS BLOB) RIGHT OUTER JOIN rt1 ON 2.096258911E9 GROUP BY rt1.c1, rt1.c2, t0.c0 HAVING COUNT(*) UNION ALL SELECT rt1.c1, rt1.c2, t0.c0 FROM v0 CROSS JOIN t0 ON CAST(1563728289 AS BLOB) RIGHT OUTER JOIN rt1 ON 2.096258911E9 GROUP BY rt1.c1, rt1.c2, t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c1, rt1.c2, t0.c0 FROM v0 CROSS JOIN t0 ON CAST(1563728289 AS BLOB) RIGHT OUTER JOIN rt1 ON 2.096258911E9 GROUP BY rt1.c1, rt1.c2, t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c1, rt1.c2, t0.c0 FROM v0 CROSS JOIN t0 ON CAST(1563728289 AS BLOB) RIGHT OUTER JOIN rt1 ON 2.096258911E9 GROUP BY rt1.c1, rt1.c2, t0.c0;
SELECT ALL rt1.c1, rt1.c2, t0.c0 FROM v0 CROSS JOIN t0 ON CAST(1563728289 AS BLOB) RIGHT OUTER JOIN rt1 ON 2.096258911E9 GROUP BY rt1.c1, rt1.c2, t0.c0 HAVING COUNT(*) UNION ALL SELECT rt1.c1, rt1.c2, t0.c0 FROM v0 CROSS JOIN t0 ON CAST(1563728289 AS BLOB) RIGHT OUTER JOIN rt1 ON 2.096258911E9 GROUP BY rt1.c1, rt1.c2, t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c1, rt1.c2, t0.c0 FROM v0 CROSS JOIN t0 ON CAST(1563728289 AS BLOB) RIGHT OUTER JOIN rt1 ON 2.096258911E9 GROUP BY rt1.c1, rt1.c2, t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c1, rt1.c2, t0.c0 FROM v0 CROSS JOIN t0 ON CAST(1563728289 AS BLOB) RIGHT OUTER JOIN rt1 ON 2.096258911E9 GROUP BY rt1.c1, rt1.c2, t0.c0;
SELECT * FROM rt1, vt0, v0 LEFT OUTER JOIN t0 ON ((((((((((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c2)))AND(rt1.c1 COLLATE BINARY)))OR((v0.c0 IN ()))))AND(((((vt0.c0)AND(t0.c0)))OR(x'')))))OR(CASE rt1.c3  WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c3 END));
SELECT ALL * FROM rt1, vt0, v0 LEFT OUTER JOIN t0 ON ((((((((((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c2)))AND(rt1.c1 COLLATE BINARY)))OR((v0.c0 IN ()))))AND(((((vt0.c0)AND(t0.c0)))OR(x'')))))OR(CASE rt1.c3  WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c3 END)) WHERE ((((rt1.c3)) BETWEEN ((((t0.c0) IS FALSE))) AND ((COALESCE(rt1.c0, rt1.c3, t0.c0, 0.8990132008205566))))) UNION ALL SELECT * FROM rt1, vt0, v0 LEFT OUTER JOIN t0 ON ((((((((((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c2)))AND(rt1.c1 COLLATE BINARY)))OR((v0.c0 IN ()))))AND(((((vt0.c0)AND(t0.c0)))OR(x'')))))OR(CASE rt1.c3  WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c3 END)) WHERE ((NOT ((((rt1.c3)) BETWEEN ((((t0.c0) IS FALSE))) AND ((COALESCE(rt1.c0, rt1.c3, t0.c0, 0.8990132008205566))))))) UNION ALL SELECT * FROM rt1, vt0, v0 LEFT OUTER JOIN t0 ON ((((((((((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c2)))AND(rt1.c1 COLLATE BINARY)))OR((v0.c0 IN ()))))AND(((((vt0.c0)AND(t0.c0)))OR(x'')))))OR(CASE rt1.c3  WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c3 END)) WHERE ((((((rt1.c3)) BETWEEN ((((t0.c0) IS FALSE))) AND ((COALESCE(rt1.c0, rt1.c3, t0.c0, 0.8990132008205566))))) ISNULL));
SELECT * FROM rt1, vt0, v0 LEFT OUTER JOIN t0 ON ((((((((((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c2)))AND(rt1.c1 COLLATE BINARY)))OR((v0.c0 IN ()))))AND(((((vt0.c0)AND(t0.c0)))OR(x'')))))OR(CASE rt1.c3  WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c3 END));
SELECT DISTINCT v0.c0, vt0.c0, t0.c0 FROM vt0, v0, t0;
SELECT DISTINCT v0.c0, vt0.c0, t0.c0 FROM vt0, v0, t0 WHERE (((((t0.c0)>(v0.c0))) IS TRUE)) UNION SELECT DISTINCT v0.c0, vt0.c0, t0.c0 FROM vt0, v0 NOT INDEXED, t0 WHERE ((NOT (((((t0.c0)>(v0.c0))) IS TRUE)))) UNION SELECT DISTINCT v0.c0, vt0.c0, t0.c0 FROM vt0, v0, t0 WHERE (((((((t0.c0)>(v0.c0))) IS TRUE)) ISNULL));
SELECT DISTINCT v0.c0, vt0.c0, t0.c0 FROM vt0, v0, t0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (NULL) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (NULL))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((NULL) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT t0.c0 FROM v0, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM v0, t0 GROUP BY t0.c0 HAVING 0.9061612114058935 UNION ALL SELECT ALL t0.c0 FROM v0, t0 GROUP BY t0.c0 HAVING (NOT (0.9061612114058935)) UNION ALL SELECT ALL t0.c0 FROM v0, t0 GROUP BY t0.c0 HAVING ((0.9061612114058935) ISNULL);
SELECT t0.c0 FROM v0, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM v0, t0 GROUP BY t0.c0 HAVING 0.9061612114058935 UNION ALL SELECT ALL t0.c0 FROM v0, t0 GROUP BY t0.c0 HAVING (NOT (0.9061612114058935)) UNION ALL SELECT ALL t0.c0 FROM v0, t0 GROUP BY t0.c0 HAVING ((0.9061612114058935) ISNULL);
SELECT t0.c0 FROM v0, t0 GROUP BY t0.c0;
SELECT ALL vt0.c0, rt1.c2, rt1.c3, t0.c0 FROM vt0, t0, rt1, v0;
SELECT ALL vt0.c0, rt1.c2, rt1.c3, t0.c0 FROM vt0, t0, rt1, v0 WHERE (rt1.c3) UNION ALL SELECT vt0.c0, rt1.c2, rt1.c3, t0.c0 FROM vt0, t0, rt1, v0 WHERE ((NOT (rt1.c3))) UNION ALL SELECT ALL vt0.c0, rt1.c2, rt1.c3, t0.c0 FROM vt0, t0, rt1, v0 WHERE (((rt1.c3) ISNULL));
SELECT ALL vt0.c0, rt1.c2, rt1.c3, t0.c0 FROM vt0, t0, rt1, v0;
SELECT DISTINCT * FROM vt0, v0, t0, rt1;
SELECT DISTINCT * FROM vt0, v0, t0, rt1 WHERE (((rt1.c1 COLLATE NOCASE) BETWEEN (LIKELY(rt1.c3)) AND (((rt1.c0) NOT NULL)))) UNION SELECT DISTINCT * FROM vt0, v0, t0, rt1 WHERE ((NOT (((rt1.c1 COLLATE NOCASE) BETWEEN (LIKELY(rt1.c3)) AND (((rt1.c0) NOT NULL)))))) UNION SELECT DISTINCT * FROM vt0, v0, t0, rt1 WHERE (((((rt1.c1 COLLATE NOCASE) BETWEEN (LIKELY(rt1.c3)) AND (((rt1.c0) NOT NULL)))) ISNULL));
SELECT DISTINCT * FROM vt0, v0, t0, rt1;
SELECT t0.c0, vt0.c0, rt1.c3, rt1.c2, rt1.c0, rt1.c1, v0.c0 FROM rt1, vt0, t0 INNER JOIN v0 ON CAST((x'' IN (rt1.c3)) AS NUMERIC) GROUP BY t0.c0, vt0.c0, rt1.c3, rt1.c2, rt1.c0, rt1.c1, v0.c0;
SELECT t0.c0, vt0.c0, rt1.c3, rt1.c2, rt1.c0, rt1.c1, v0.c0 FROM rt1, vt0, t0 INNER JOIN v0 ON CAST((x'' IN (rt1.c3)) AS NUMERIC) WHERE ((~ (t0.c0))) GROUP BY t0.c0, vt0.c0, rt1.c3, rt1.c2, rt1.c0, rt1.c1, v0.c0 UNION SELECT t0.c0, vt0.c0, rt1.c3, rt1.c2, rt1.c0, rt1.c1, v0.c0 FROM rt1, vt0, t0 INNER JOIN v0 ON CAST((x'' IN (rt1.c3)) AS NUMERIC) WHERE ((NOT ((~ (t0.c0))))) GROUP BY t0.c0, vt0.c0, rt1.c3, rt1.c2, rt1.c0, rt1.c1, v0.c0 UNION SELECT t0.c0, vt0.c0, rt1.c3, rt1.c2, rt1.c0, rt1.c1, v0.c0 FROM rt1, vt0, t0 INNER JOIN v0 ON CAST((x'' IN (rt1.c3)) AS NUMERIC) WHERE ((((~ (t0.c0))) ISNULL)) GROUP BY t0.c0, vt0.c0, rt1.c3, rt1.c2, rt1.c0, rt1.c1, v0.c0;
SELECT t0.c0, vt0.c0, rt1.c3, rt1.c2, rt1.c0, rt1.c1, v0.c0 FROM rt1, vt0, t0 INNER JOIN v0 ON CAST((x'' IN (rt1.c3)) AS NUMERIC) GROUP BY t0.c0, vt0.c0, rt1.c3, rt1.c2, rt1.c0, rt1.c1, v0.c0;
SELECT ALL rt1.c0, v0.c0, rt1.c1, vt0.c0 FROM v0, t0, rt1, vt0 GROUP BY rt1.c0, v0.c0, rt1.c1, vt0.c0;
SELECT rt1.c0, v0.c0, rt1.c1, vt0.c0 FROM v0, t0, rt1, vt0 GROUP BY rt1.c0, v0.c0, rt1.c1, vt0.c0 HAVING SUM(GROUP_CONCAT(MAX(vt0.c0))) UNION ALL SELECT ALL rt1.c0, v0.c0, rt1.c1, vt0.c0 FROM v0, t0, rt1, vt0 GROUP BY rt1.c0, v0.c0, rt1.c1, vt0.c0 HAVING (NOT (SUM(GROUP_CONCAT(MAX(vt0.c0))))) UNION ALL SELECT rt1.c0, v0.c0, rt1.c1, vt0.c0 FROM v0, t0, rt1, vt0 GROUP BY rt1.c0, v0.c0, rt1.c1, vt0.c0 HAVING ((SUM(GROUP_CONCAT(MAX(vt0.c0)))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((CHAR(vt0.c0)) NOT BETWEEN ((vt0.c0 IN ())) AND (x'f0bc'))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((CHAR(vt0.c0)) NOT BETWEEN ((vt0.c0 IN ())) AND (x'f0bc'))))) UNION ALL SELECT * FROM vt0 WHERE (((((CHAR(vt0.c0)) NOT BETWEEN ((vt0.c0 IN ())) AND (x'f0bc'))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM rt1, vt0, v0;
SELECT DISTINCT * FROM rt1, vt0, v0 WHERE (CAST(((((rt1.c0)AND(NULL)))AND(rt1.c0)) AS REAL)) UNION SELECT DISTINCT * FROM rt1, vt0, v0 WHERE ((NOT (CAST(((((rt1.c0)AND(NULL)))AND(rt1.c0)) AS REAL)))) UNION SELECT DISTINCT * FROM rt1, vt0, v0 WHERE (((CAST(((((rt1.c0)AND(NULL)))AND(rt1.c0)) AS REAL)) ISNULL));
SELECT DISTINCT * FROM rt1, vt0, v0;
SELECT rt1.c1, rt1.c0, rt1.c3, t0.c0 FROM vt0, t0, rt1 CROSS JOIN v0 ON (((((vt0.c0) NOT BETWEEN (t0.c0) AND (rt1.c0))))<=((json_valid(v0.c0)))) GROUP BY rt1.c1, rt1.c0, rt1.c3, t0.c0;
SELECT rt1.c1, rt1.c0, rt1.c3, t0.c0 FROM vt0, t0, rt1 CROSS JOIN v0 ON (((((vt0.c0) NOT BETWEEN (t0.c0) AND (rt1.c0))))<=((json_valid(v0.c0)))) WHERE (((((rt1.c1)|(rt1.c0))) NOT BETWEEN (CASE rt1.c2  WHEN -7.21449572E8 THEN rt1.c2 END) AND (((NULL) NOTNULL)))) GROUP BY rt1.c1, rt1.c0, rt1.c3, t0.c0 UNION SELECT ALL rt1.c1, rt1.c0, rt1.c3, t0.c0 FROM vt0, t0, rt1 CROSS JOIN v0 ON (((((vt0.c0) NOT BETWEEN (t0.c0) AND (rt1.c0))))<=((json_valid(v0.c0)))) WHERE ((NOT (((((rt1.c1)|(rt1.c0))) NOT BETWEEN (CASE rt1.c2  WHEN -7.21449572E8 THEN rt1.c2 END) AND (((NULL) NOTNULL)))))) GROUP BY rt1.c1, rt1.c0, rt1.c3, t0.c0 UNION SELECT rt1.c1, rt1.c0, rt1.c3, t0.c0 FROM vt0, t0, rt1 CROSS JOIN v0 ON (((((vt0.c0) NOT BETWEEN (t0.c0) AND (rt1.c0))))<=((json_valid(v0.c0)))) WHERE (((((((rt1.c1)|(rt1.c0))) NOT BETWEEN (CASE rt1.c2  WHEN -7.21449572E8 THEN rt1.c2 END) AND (((NULL) NOTNULL)))) ISNULL)) GROUP BY rt1.c1, rt1.c0, rt1.c3, t0.c0;
SELECT rt1.c1, rt1.c0, rt1.c3, t0.c0 FROM vt0, t0, rt1 CROSS JOIN v0 ON (((((vt0.c0) NOT BETWEEN (t0.c0) AND (rt1.c0))))<=((json_valid(v0.c0)))) GROUP BY rt1.c1, rt1.c0, rt1.c3, t0.c0;
SELECT ALL rt1.c0, rt1.c3, t0.c0, v0.c0, rt1.c1 FROM t0, rt1 NOT INDEXED, v0, vt0 GROUP BY rt1.c0, rt1.c3, t0.c0, v0.c0, rt1.c1;
SELECT ALL rt1.c0, rt1.c3, t0.c0, v0.c0, rt1.c1 FROM t0, rt1, v0, vt0 GROUP BY rt1.c0, rt1.c3, t0.c0, v0.c0, rt1.c1 HAVING t0.c0 UNION ALL SELECT rt1.c0, rt1.c3, t0.c0, v0.c0, rt1.c1 FROM t0, rt1, v0, vt0 GROUP BY rt1.c0, rt1.c3, t0.c0, v0.c0, rt1.c1 HAVING (NOT (t0.c0)) UNION ALL SELECT rt1.c0, rt1.c3, t0.c0, v0.c0, rt1.c1 FROM t0, rt1, v0, vt0 GROUP BY rt1.c0, rt1.c3, t0.c0, v0.c0, rt1.c1 HAVING ((t0.c0) ISNULL);
SELECT ALL rt1.c0, rt1.c3, t0.c0, v0.c0, rt1.c1 FROM t0, rt1 NOT INDEXED, v0, vt0 GROUP BY rt1.c0, rt1.c3, t0.c0, v0.c0, rt1.c1;
SELECT ALL rt1.c0, rt1.c3, t0.c0, v0.c0, rt1.c1 FROM t0, rt1, v0, vt0 GROUP BY rt1.c0, rt1.c3, t0.c0, v0.c0, rt1.c1 HAVING t0.c0 UNION ALL SELECT rt1.c0, rt1.c3, t0.c0, v0.c0, rt1.c1 FROM t0, rt1, v0, vt0 GROUP BY rt1.c0, rt1.c3, t0.c0, v0.c0, rt1.c1 HAVING (NOT (t0.c0)) UNION ALL SELECT rt1.c0, rt1.c3, t0.c0, v0.c0, rt1.c1 FROM t0, rt1, v0, vt0 GROUP BY rt1.c0, rt1.c3, t0.c0, v0.c0, rt1.c1 HAVING ((t0.c0) ISNULL);
SELECT ALL rt1.c0, rt1.c3, t0.c0, v0.c0, rt1.c1 FROM t0, rt1 NOT INDEXED, v0, vt0 GROUP BY rt1.c0, rt1.c3, t0.c0, v0.c0, rt1.c1;
SELECT MAX((((rt1.c0))>((rt1.c2))) COLLATE NOCASE) FROM rt1, t0, vt0, v0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, t0 RIGHT OUTER JOIN v0 ON '';
SELECT ALL vt0.c0, v0.c0 FROM vt0, t0 RIGHT OUTER JOIN v0 ON '' WHERE (CASE vt0.c0  WHEN ((v0.c0)OR(v0.c0)) THEN json(v0.c0) END) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, t0 RIGHT OUTER JOIN v0 ON '' WHERE ((NOT (CASE vt0.c0  WHEN ((v0.c0)OR(v0.c0)) THEN json(v0.c0) END))) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, t0 RIGHT OUTER JOIN v0 ON '' WHERE (((CASE vt0.c0  WHEN ((v0.c0)OR(v0.c0)) THEN json(v0.c0) END) ISNULL));
SELECT ALL vt0.c0, v0.c0 FROM vt0, t0 RIGHT OUTER JOIN v0 ON '';
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE ((- (CAST(t0.c0 AS TEXT)))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT ((- (CAST(t0.c0 AS TEXT)))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((((- (CAST(t0.c0 AS TEXT)))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((((0.38210981983772374)AND(CAST(vt0.c0 AS REAL))))AND((vt0.c0 IN ())))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((0.38210981983772374)AND(CAST(vt0.c0 AS REAL))))AND((vt0.c0 IN ())))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((0.38210981983772374)AND(CAST(vt0.c0 AS REAL))))AND((vt0.c0 IN ())))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0, v0.c0, rt1.c0, t0.c0, rt1.c2 FROM vt0, rt1, t0 INDEXED BY i24, v0 GROUP BY vt0.c0, v0.c0, rt1.c0, t0.c0, rt1.c2;
SELECT vt0.c0, v0.c0, rt1.c0, t0.c0, rt1.c2 FROM vt0, rt1, t0 INDEXED BY i24, v0 GROUP BY vt0.c0, v0.c0, rt1.c0, t0.c0, rt1.c2 HAVING GROUP_CONCAT(((AVG(TOTAL(rt1.c0))) NOTNULL)) UNION ALL SELECT ALL vt0.c0, v0.c0, rt1.c0, t0.c0, rt1.c2 FROM vt0, rt1, t0 INDEXED BY i24, v0 GROUP BY vt0.c0, v0.c0, rt1.c0, t0.c0, rt1.c2 HAVING (NOT (GROUP_CONCAT(((AVG(TOTAL(rt1.c0))) NOTNULL)))) UNION ALL SELECT ALL vt0.c0, v0.c0, rt1.c0, t0.c0, rt1.c2 FROM vt0, rt1, t0 INDEXED BY i24, v0 GROUP BY vt0.c0, v0.c0, rt1.c0, t0.c0, rt1.c2 HAVING ((GROUP_CONCAT(((AVG(TOTAL(rt1.c0))) NOTNULL))) ISNULL);
SELECT ALL * FROM rt1;
SELECT * FROM rt1 WHERE ((((rt1.c2)) NOT BETWEEN ((((rt1.c2)*(rt1.c3)))) AND ((CAST(rt1.c1 AS INTEGER))))) UNION ALL SELECT * FROM rt1 WHERE ((NOT ((((rt1.c2)) NOT BETWEEN ((((rt1.c2)*(rt1.c3)))) AND ((CAST(rt1.c1 AS INTEGER))))))) UNION ALL SELECT ALL * FROM rt1 WHERE ((((((rt1.c2)) NOT BETWEEN ((((rt1.c2)*(rt1.c3)))) AND ((CAST(rt1.c1 AS INTEGER))))) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT rt1.c2 FROM t0, vt0 INNER JOIN v0 ON (vt0.c0 IN (rt1.c0 COLLATE BINARY)) RIGHT OUTER JOIN rt1 ON ((((t0.c0)=(v0.c0))) BETWEEN (((rt1.c1) IS TRUE)) AND ((((rt1.c0))<((rt1.c2)))));
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (TRIM(DISTINCT CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END, ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 NOT INDEXED WHERE ((NOT (TRIM(DISTINCT CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END, ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((TRIM(DISTINCT CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END, ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM t0 INDEXED BY i24, vt0, v0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0 INDEXED BY i24, vt0, v0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL) UNION ALL SELECT ALL vt0.c0 FROM t0 INDEXED BY i24, vt0, v0 GROUP BY vt0.c0 HAVING (NOT (((COUNT(*)) ISNULL))) UNION ALL SELECT vt0.c0 FROM t0 INDEXED BY i24, vt0, v0 GROUP BY vt0.c0 HAVING ((((COUNT(*)) ISNULL)) ISNULL);
SELECT vt0.c0 FROM t0 INDEXED BY i24, vt0, v0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0 INDEXED BY i24, vt0, v0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL) UNION ALL SELECT ALL vt0.c0 FROM t0 INDEXED BY i24, vt0, v0 GROUP BY vt0.c0 HAVING (NOT (((COUNT(*)) ISNULL))) UNION ALL SELECT vt0.c0 FROM t0 INDEXED BY i24, vt0, v0 GROUP BY vt0.c0 HAVING ((((COUNT(*)) ISNULL)) ISNULL);
SELECT vt0.c0 FROM t0 INDEXED BY i24, vt0, v0 GROUP BY vt0.c0;
SELECT vt0.c0, t0.c0 FROM t0, vt0;
SELECT vt0.c0, t0.c0 FROM t0, vt0 WHERE ((+ (CASE vt0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 END))) UNION ALL SELECT vt0.c0, t0.c0 FROM t0, vt0 WHERE ((NOT ((+ (CASE vt0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 END))))) UNION ALL SELECT vt0.c0, t0.c0 FROM t0, vt0 WHERE ((((+ (CASE vt0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 END))) ISNULL));
SELECT vt0.c0, t0.c0 FROM t0, vt0;
SELECT DISTINCT * FROM rt1 FULL OUTER JOIN vt0 ON ((rt1.c2)<=(((rt1.c0)%(rt1.c2))));
SELECT DISTINCT * FROM rt1 FULL OUTER JOIN vt0 ON ((rt1.c2)<=(((rt1.c0)%(rt1.c2)))) WHERE ((((NOT (rt1.c2)))OR(CAST(x'092b' AS TEXT)))) UNION SELECT DISTINCT * FROM rt1 FULL OUTER JOIN vt0 ON ((rt1.c2)<=(((rt1.c0)%(rt1.c2)))) WHERE ((NOT ((((NOT (rt1.c2)))OR(CAST(x'092b' AS TEXT)))))) UNION SELECT DISTINCT * FROM rt1 FULL OUTER JOIN vt0 ON ((rt1.c2)<=(((rt1.c0)%(rt1.c2)))) WHERE ((((((NOT (rt1.c2)))OR(CAST(x'092b' AS TEXT)))) ISNULL));
SELECT DISTINCT * FROM rt1 FULL OUTER JOIN vt0 ON ((rt1.c2)<=(((rt1.c0)%(rt1.c2))));
SELECT rt1.c0 FROM rt1, vt0 GROUP BY rt1.c0;
SELECT rt1.c0 FROM rt1, vt0 WHERE ((((((rt1.c2)=(rt1.c2))))<((CASE rt1.c0  WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 WHEN NULL THEN rt1.c3 END)))) GROUP BY rt1.c0 UNION SELECT rt1.c0 FROM rt1, vt0 WHERE ((NOT ((((((rt1.c2)=(rt1.c2))))<((CASE rt1.c0  WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 WHEN NULL THEN rt1.c3 END)))))) GROUP BY rt1.c0 UNION SELECT rt1.c0 FROM rt1, vt0 WHERE ((((((((rt1.c2)=(rt1.c2))))<((CASE rt1.c0  WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 WHEN NULL THEN rt1.c3 END)))) ISNULL)) GROUP BY rt1.c0;
SELECT rt1.c0 FROM rt1, vt0 GROUP BY rt1.c0;
SELECT ALL rt1.c0, t0.c0, rt1.c3 FROM t0, v0, vt0 NATURAL JOIN rt1 GROUP BY rt1.c0, t0.c0, rt1.c3;
SELECT rt1.c0, t0.c0, rt1.c3 FROM t0, v0, vt0 NATURAL JOIN rt1 GROUP BY rt1.c0, t0.c0, rt1.c3 HAVING MAX(MIN(COUNT(rt1.c0))) UNION ALL SELECT rt1.c0, t0.c0, rt1.c3 FROM t0, v0, vt0 NATURAL JOIN rt1 GROUP BY rt1.c0, t0.c0, rt1.c3 HAVING (NOT (MAX(MIN(COUNT(rt1.c0))))) UNION ALL SELECT rt1.c0, t0.c0, rt1.c3 FROM t0, v0, vt0 NATURAL JOIN rt1 GROUP BY rt1.c0, t0.c0, rt1.c3 HAVING ((MAX(MIN(COUNT(rt1.c0)))) ISNULL);
SELECT * FROM t0, v0, rt1, vt0;
SELECT * FROM t0, v0, rt1, vt0 WHERE (((((rt1.c1)==(0.6889070973706097))) BETWEEN (rt1.c0) AND (CASE rt1.c2  WHEN vt0.c0 THEN vt0.c0 ELSE t0.c0 END))) UNION ALL SELECT ALL * FROM t0, v0, rt1, vt0 WHERE ((NOT (((((rt1.c1)=(0.6889070973706097))) BETWEEN (rt1.c0) AND (CASE rt1.c2  WHEN vt0.c0 THEN vt0.c0 ELSE t0.c0 END))))) UNION ALL SELECT * FROM t0, v0, rt1, vt0 WHERE (((((((rt1.c1)=(0.6889070973706097))) BETWEEN (rt1.c0) AND (CASE rt1.c2  WHEN vt0.c0 THEN vt0.c0 ELSE t0.c0 END))) ISNULL));
SELECT * FROM t0, v0, rt1, vt0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (CAST(rt1.c3 AS TEXT)) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (CAST(rt1.c3 AS TEXT)))) UNION SELECT DISTINCT * FROM rt1 WHERE (((CAST(rt1.c3 AS TEXT)) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT rt1.c1 FROM v0, rt1 GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM v0, rt1 WHERE ((((+ (rt1.c2))) BETWEEN (((((((((rt1.c2)AND(rt1.c2)))AND(v0.c0)))AND(v0.c0)))AND(rt1.c1))) AND (((rt1.c3) ISNULL)))) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM v0, rt1 WHERE ((NOT ((((+ (rt1.c2))) BETWEEN (((((((((rt1.c2)AND(rt1.c2)))AND(v0.c0)))AND(v0.c0)))AND(rt1.c1))) AND (((rt1.c3) ISNULL)))))) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM v0, rt1 WHERE ((((((+ (rt1.c2))) BETWEEN (((((((((rt1.c2)AND(rt1.c2)))AND(v0.c0)))AND(v0.c0)))AND(rt1.c1))) AND (((rt1.c3) ISNULL)))) ISNULL)) GROUP BY rt1.c1;
SELECT rt1.c1 FROM v0, rt1 GROUP BY rt1.c1;
SELECT rt1.c3, rt1.c1, v0.c0, vt0.c0, rt1.c0 FROM vt0, v0, rt1 GROUP BY rt1.c3, rt1.c1, v0.c0, vt0.c0, rt1.c0;
SELECT ALL rt1.c3, rt1.c1, v0.c0, vt0.c0, rt1.c0 FROM vt0, v0, rt1 GROUP BY rt1.c3, rt1.c1, v0.c0, vt0.c0, rt1.c0 HAVING (((MIN(v0.c0), NULLIF(DISTINCT vt0.c0, COUNT(*)), COUNT(MIN(rt1.c1))))<((MAX(v0.c0), MAX(rt1.c0), TOTAL(COUNT(*))))) UNION ALL SELECT rt1.c3, rt1.c1, v0.c0, vt0.c0, rt1.c0 FROM vt0, v0, rt1 GROUP BY rt1.c3, rt1.c1, v0.c0, vt0.c0, rt1.c0 HAVING (NOT ((((MIN(v0.c0), NULLIF(DISTINCT vt0.c0, COUNT(*)), COUNT(MIN(rt1.c1))))<((MAX(v0.c0), MAX(rt1.c0), TOTAL(COUNT(*))))))) UNION ALL SELECT rt1.c3, rt1.c1, v0.c0, vt0.c0, rt1.c0 FROM vt0, v0, rt1 GROUP BY rt1.c3, rt1.c1, v0.c0, vt0.c0, rt1.c0 HAVING (((((MIN(v0.c0), NULLIF(DISTINCT vt0.c0, COUNT(*)), COUNT(MIN(rt1.c1))))<((MAX(v0.c0), MAX(rt1.c0), TOTAL(COUNT(*)))))) ISNULL);
SELECT ALL * FROM t0, vt0, v0, rt1;
SELECT ALL * FROM t0, vt0, v0, rt1 WHERE (((((NOT (v0.c0))))<=((v0.c0 COLLATE NOCASE)))) UNION ALL SELECT * FROM t0, vt0, v0, rt1 WHERE ((NOT (((((NOT (v0.c0))))<=((v0.c0 COLLATE NOCASE)))))) UNION ALL SELECT * FROM t0, vt0, v0, rt1 WHERE (((((((NOT (v0.c0))))<=((v0.c0 COLLATE NOCASE)))) ISNULL));
SELECT ALL * FROM t0, vt0, v0, rt1;
SELECT DISTINCT vt0.c0, v0.c0, rt1.c0, rt1.c1, rt1.c3, rt1.c2 FROM v0 FULL OUTER JOIN vt0 ON ((rt1.c1 COLLATE BINARY) NOTNULL) INNER JOIN rt1 ON (NOT ((('') IS FALSE))) FULL OUTER JOIN t0 ON (((((t0.c0, NULL, t0.c0)) NOT BETWEEN ((rt1.c3, vt0.c0, rt1.c0)) AND ((rt1.c2, rt1.c1, x''))))<(CASE WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN v0.c0 WHEN rt1.c0 THEN v0.c0 END));
SELECT t0.c0, v0.c0 FROM t0, v0 GROUP BY t0.c0, v0.c0;
SELECT ALL t0.c0, v0.c0 FROM t0, v0 WHERE ((((t0.c0 IN ()))<>(t0.c0))) GROUP BY t0.c0, v0.c0 UNION SELECT ALL t0.c0, v0.c0 FROM t0, v0 WHERE ((NOT ((((t0.c0 IN ()))<>(t0.c0))))) GROUP BY t0.c0, v0.c0 UNION SELECT ALL t0.c0, v0.c0 FROM t0, v0 WHERE ((((((t0.c0 IN ()))<>(t0.c0))) ISNULL)) GROUP BY t0.c0, v0.c0;
SELECT t0.c0, v0.c0 FROM t0, v0 GROUP BY t0.c0, v0.c0;
SELECT ALL rt1.c1, rt1.c0, rt1.c2, rt1.c3 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2, rt1.c3;
SELECT ALL rt1.c1, rt1.c0, rt1.c2, rt1.c3 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2, rt1.c3 HAVING MIN(((AVG(TOTAL(rt1.c2))) BETWEEN (MAX(x'')) AND (rt1.c2))) UNION ALL SELECT ALL rt1.c1, rt1.c0, rt1.c2, rt1.c3 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2, rt1.c3 HAVING (NOT (MIN(((AVG(TOTAL(rt1.c2))) BETWEEN (MAX(x'')) AND (rt1.c2))))) UNION ALL SELECT rt1.c1, rt1.c0, rt1.c2, rt1.c3 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2, rt1.c3 HAVING ((MIN(((AVG(TOTAL(rt1.c2))) BETWEEN (MAX(x'')) AND (rt1.c2)))) ISNULL);
SELECT * FROM t0, vt0;
SELECT * FROM t0, vt0 WHERE (((((vt0.c0)<(vt0.c0)))|(TYPEOF(vt0.c0)))) UNION ALL SELECT * FROM t0, vt0 WHERE ((NOT (((((vt0.c0)<(vt0.c0)))|(TYPEOF(vt0.c0)))))) UNION ALL SELECT ALL * FROM t0, vt0 WHERE (((((((vt0.c0)<(vt0.c0)))|(TYPEOF(vt0.c0)))) ISNULL));
SELECT * FROM t0, vt0;
SELECT DISTINCT t0.c0 FROM vt0, t0 FULL OUTER JOIN v0 ON ((((rt1.c2)OR(((t0.c0)<(rt1.c2)))))OR(v0.c0)) LEFT OUTER JOIN rt1 ON ((rt1.c1 IN ()) IN ());
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))) IN ())) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))) IN ())))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))) IN ())) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt1.c1, v0.c0, rt1.c0, rt1.c3, vt0.c0, rt1.c2 FROM rt1, v0, vt0 GROUP BY rt1.c1, v0.c0, rt1.c0, rt1.c3, vt0.c0, rt1.c2;
SELECT ALL rt1.c1, v0.c0, rt1.c0, rt1.c3, vt0.c0, rt1.c2 FROM rt1, v0, vt0 GROUP BY rt1.c1, v0.c0, rt1.c0, rt1.c3, vt0.c0, rt1.c2 HAVING ((((AVG(rt1.c2))AND(COUNT(*))))OR(CAST(MAX(GROUP_CONCAT(rt1.c3)) AS NUMERIC))) UNION ALL SELECT ALL rt1.c1, v0.c0, rt1.c0, rt1.c3, vt0.c0, rt1.c2 FROM rt1, v0, vt0 GROUP BY rt1.c1, v0.c0, rt1.c0, rt1.c3, vt0.c0, rt1.c2 HAVING (NOT (((((AVG(rt1.c2))AND(COUNT(*))))OR(CAST(MAX(GROUP_CONCAT(rt1.c3)) AS NUMERIC))))) UNION ALL SELECT rt1.c1, v0.c0, rt1.c0, rt1.c3, vt0.c0, rt1.c2 FROM rt1, v0, vt0 GROUP BY rt1.c1, v0.c0, rt1.c0, rt1.c3, vt0.c0, rt1.c2 HAVING ((((((AVG(rt1.c2))AND(COUNT(*))))OR(CAST(MAX(GROUP_CONCAT(rt1.c3)) AS NUMERIC)))) ISNULL);
SELECT ALL t0.c0, vt0.c0, rt1.c0, rt1.c3, rt1.c1 FROM vt0, v0, t0, rt1;
SELECT ALL t0.c0, vt0.c0, rt1.c0, rt1.c3, rt1.c1 FROM vt0, v0, t0, rt1 WHERE (ABS(((((rt1.c0)OR(rt1.c2)))OR(rt1.c3)))) UNION ALL SELECT ALL t0.c0, vt0.c0, rt1.c0, rt1.c3, rt1.c1 FROM vt0, v0 NOT INDEXED, t0, rt1 WHERE ((NOT (ABS(((((rt1.c0)OR(rt1.c2)))OR(rt1.c3)))))) UNION ALL SELECT ALL t0.c0, vt0.c0, rt1.c0, rt1.c3, rt1.c1 FROM vt0, v0, t0, rt1 WHERE (((ABS(((((rt1.c0)OR(rt1.c2)))OR(rt1.c3)))) ISNULL));
SELECT ALL t0.c0, vt0.c0, rt1.c0, rt1.c3, rt1.c1 FROM vt0, v0, t0, rt1;
SELECT DISTINCT * FROM rt1, vt0 INDEXED BY i30;
SELECT rt1.c0, rt1.c3, t0.c0, rt1.c2 FROM t0, rt1, v0 GROUP BY rt1.c0, rt1.c3, t0.c0, rt1.c2;
SELECT rt1.c0, rt1.c3, t0.c0, rt1.c2 FROM t0, rt1, v0 WHERE (NULL) GROUP BY rt1.c0, rt1.c3, t0.c0, rt1.c2 UNION SELECT rt1.c0, rt1.c3, t0.c0, rt1.c2 FROM t0, rt1, v0 WHERE ((NOT (NULL))) GROUP BY rt1.c0, rt1.c3, t0.c0, rt1.c2 UNION SELECT ALL rt1.c0, rt1.c3, t0.c0, rt1.c2 FROM t0, rt1, v0 WHERE (((NULL) ISNULL)) GROUP BY rt1.c0, rt1.c3, t0.c0, rt1.c2;
SELECT rt1.c0, rt1.c3, t0.c0, rt1.c2 FROM t0, rt1, v0 GROUP BY rt1.c0, rt1.c3, t0.c0, rt1.c2;
SELECT ALL vt0.c0, t0.c0, v0.c0 FROM vt0, v0, t0, rt1 GROUP BY vt0.c0, t0.c0, v0.c0;
SELECT vt0.c0, t0.c0, v0.c0 FROM vt0, v0, t0, rt1 GROUP BY vt0.c0, t0.c0, v0.c0 HAVING MIN(((rt1.c3) NOTNULL)) UNION ALL SELECT ALL vt0.c0, t0.c0, v0.c0 FROM vt0, v0, t0, rt1 GROUP BY vt0.c0, t0.c0, v0.c0 HAVING (NOT (MIN(((rt1.c3) NOTNULL)))) UNION ALL SELECT vt0.c0, t0.c0, v0.c0 FROM vt0, v0, t0, rt1 GROUP BY vt0.c0, t0.c0, v0.c0 HAVING ((MIN(((rt1.c3) NOTNULL))) ISNULL);
SELECT ALL vt0.c0, t0.c0, v0.c0 FROM vt0, v0, t0, rt1 GROUP BY vt0.c0, t0.c0, v0.c0;
SELECT vt0.c0, t0.c0, v0.c0 FROM vt0, v0, t0, rt1 GROUP BY vt0.c0, t0.c0, v0.c0 HAVING MIN(((rt1.c3) NOTNULL)) UNION ALL SELECT ALL vt0.c0, t0.c0, v0.c0 FROM vt0, v0, t0, rt1 GROUP BY vt0.c0, t0.c0, v0.c0 HAVING (NOT (MIN(((rt1.c3) NOTNULL)))) UNION ALL SELECT vt0.c0, t0.c0, v0.c0 FROM vt0, v0, t0, rt1 GROUP BY vt0.c0, t0.c0, v0.c0 HAVING ((MIN(((rt1.c3) NOTNULL))) ISNULL);
SELECT ALL vt0.c0, t0.c0, v0.c0 FROM vt0, v0, t0, rt1 GROUP BY vt0.c0, t0.c0, v0.c0;
SELECT ALL MAX(rt1.c0) FROM t0, vt0, rt1, v0;
SELECT * FROM vt0, t0 RIGHT OUTER JOIN v0 ON CASE WHEN ((((((((t0.c0)OR(vt0.c0)))OR(v0.c0)))AND(vt0.c0)))OR(NULL)) THEN ((NULL)||(v0.c0)) END;
SELECT ALL * FROM vt0, t0 RIGHT OUTER JOIN v0 ON CASE WHEN ((((((((t0.c0)OR(vt0.c0)))OR(v0.c0)))AND(vt0.c0)))OR(NULL)) THEN ((NULL)||(v0.c0)) END WHERE (t0.c0) UNION ALL SELECT * FROM vt0, t0 RIGHT OUTER JOIN v0 ON CASE WHEN ((((((((t0.c0)OR(vt0.c0)))OR(v0.c0)))AND(vt0.c0)))OR(NULL)) THEN ((NULL)||(v0.c0)) END WHERE ((NOT (t0.c0))) UNION ALL SELECT ALL * FROM vt0, t0 RIGHT OUTER JOIN v0 ON CASE WHEN ((((((((t0.c0)OR(vt0.c0)))OR(v0.c0)))AND(vt0.c0)))OR(NULL)) THEN ((NULL)||(v0.c0)) END WHERE (((t0.c0) ISNULL));
SELECT * FROM vt0, t0 RIGHT OUTER JOIN v0 ON CASE WHEN ((((((((t0.c0)OR(vt0.c0)))OR(v0.c0)))AND(vt0.c0)))OR(NULL)) THEN ((NULL)||(v0.c0)) END;
SELECT DISTINCT t0.c0, v0.c0 FROM v0, t0;
SELECT DISTINCT t0.c0, v0.c0 FROM v0, t0 WHERE (CASE WHEN '' THEN t0.c0 COLLATE NOCASE WHEN ((t0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN v0.c0 WHEN t0.c0 COLLATE BINARY THEN CASE t0.c0  WHEN v0.c0 THEN v0.c0 ELSE t0.c0 END ELSE ((((((((t0.c0)AND('0.27099390088100384')))AND(t0.c0)))AND(v0.c0)))OR(t0.c0)) END) UNION SELECT DISTINCT t0.c0, v0.c0 FROM v0, t0 WHERE ((NOT (CASE WHEN '' THEN t0.c0 COLLATE NOCASE WHEN ((t0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN v0.c0 WHEN t0.c0 COLLATE BINARY THEN CASE t0.c0  WHEN v0.c0 THEN v0.c0 ELSE t0.c0 END ELSE ((((((((t0.c0)AND('0.27099390088100384')))AND(t0.c0)))AND(v0.c0)))OR(t0.c0)) END))) UNION SELECT DISTINCT t0.c0, v0.c0 FROM v0, t0 WHERE (((CASE WHEN '' THEN t0.c0 COLLATE NOCASE WHEN ((t0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN v0.c0 WHEN t0.c0 COLLATE BINARY THEN CASE t0.c0  WHEN v0.c0 THEN v0.c0 ELSE t0.c0 END ELSE ((((((((t0.c0)AND('0.27099390088100384')))AND(t0.c0)))AND(v0.c0)))OR(t0.c0)) END) ISNULL));
SELECT DISTINCT t0.c0, v0.c0 FROM v0, t0;
SELECT ALL rt1.c1, v0.c0, rt1.c2 FROM v0, rt1 GROUP BY rt1.c1, v0.c0, rt1.c2;
SELECT rt1.c1, v0.c0, rt1.c2 FROM v0, rt1 WHERE (CASE WHEN CAST(rt1.c0 AS REAL) THEN ABS(rt1.c1) END) GROUP BY rt1.c1, v0.c0, rt1.c2 UNION SELECT ALL rt1.c1, v0.c0, rt1.c2 FROM v0, rt1 WHERE ((NOT (CASE WHEN CAST(rt1.c0 AS REAL) THEN ABS(rt1.c1) END))) GROUP BY rt1.c1, v0.c0, rt1.c2 UNION SELECT rt1.c1, v0.c0, rt1.c2 FROM v0, rt1 WHERE (((CASE WHEN CAST(rt1.c0 AS REAL) THEN ABS(rt1.c1) END) ISNULL)) GROUP BY rt1.c1, v0.c0, rt1.c2;
SELECT ALL rt1.c1, v0.c0, rt1.c2 FROM v0, rt1 GROUP BY rt1.c1, v0.c0, rt1.c2;
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT ALL rt1.c3, t0.c0, vt0.c0, rt1.c1, rt1.c0, v0.c0 FROM t0, rt1, v0, vt0;
SELECT ALL rt1.c3, t0.c0, vt0.c0, rt1.c1, rt1.c0, v0.c0 FROM t0, rt1, v0, vt0 WHERE (rt1.c0) UNION ALL SELECT ALL rt1.c3, t0.c0, vt0.c0, rt1.c1, rt1.c0, v0.c0 FROM t0, rt1, v0, vt0 WHERE ((NOT (rt1.c0))) UNION ALL SELECT rt1.c3, t0.c0, vt0.c0, rt1.c1, rt1.c0, v0.c0 FROM t0, rt1, v0, vt0 WHERE (((rt1.c0) ISNULL));
SELECT ALL rt1.c3, t0.c0, vt0.c0, rt1.c1, rt1.c0, v0.c0 FROM t0, rt1, v0, vt0;
SELECT DISTINCT rt1.c2, t0.c0, rt1.c3, vt0.c0, rt1.c0 FROM t0, rt1, vt0;
SELECT DISTINCT rt1.c2, t0.c0, rt1.c3, vt0.c0, rt1.c0 FROM t0, rt1, vt0 WHERE ((+ (CAST(vt0.c0 AS NUMERIC)))) UNION SELECT DISTINCT rt1.c2, t0.c0, rt1.c3, vt0.c0, rt1.c0 FROM t0, rt1, vt0 WHERE ((NOT ((+ (CAST(vt0.c0 AS NUMERIC)))))) UNION SELECT DISTINCT rt1.c2, t0.c0, rt1.c3, vt0.c0, rt1.c0 FROM t0, rt1, vt0 WHERE ((((+ (CAST(vt0.c0 AS NUMERIC)))) ISNULL));
SELECT DISTINCT rt1.c2, t0.c0, rt1.c3, vt0.c0, rt1.c0 FROM t0, rt1, vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))=((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))==((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))==((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((((MIN(TOTAL(0.6906354255382712)))AND(AVG(AVG(TOTAL(GROUP_CONCAT(SUM(TOTAL(TOTAL(vt0.c0))))))))))AND(COUNT(SUM(vt0.c0)))))AND(NULL)))OR(COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((((((((MIN(TOTAL(0.6906354255382712)))AND(AVG(AVG(TOTAL(GROUP_CONCAT(SUM(TOTAL(TOTAL(vt0.c0))))))))))AND(COUNT(SUM(vt0.c0)))))AND(NULL)))OR(COUNT(*))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((((((MIN(TOTAL(0.6906354255382712)))AND(AVG(AVG(TOTAL(GROUP_CONCAT(SUM(TOTAL(TOTAL(vt0.c0))))))))))AND(COUNT(SUM(vt0.c0)))))AND(NULL)))OR(COUNT(*)))) ISNULL);
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE (((v0.c0 IN (v0.c0)) IN ())) UNION ALL SELECT * FROM v0 WHERE ((NOT (((v0.c0 IN (v0.c0)) IN ())))) UNION ALL SELECT * FROM v0 WHERE (((((v0.c0 IN (v0.c0)) IN ())) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT vt0.c0, t0.c0, rt1.c1 FROM rt1, t0, vt0;
SELECT DISTINCT vt0.c0, t0.c0, rt1.c1 FROM rt1, t0, vt0 WHERE (rt1.c0) UNION SELECT DISTINCT vt0.c0, t0.c0, rt1.c1 FROM rt1, t0, vt0 WHERE ((NOT (rt1.c0))) UNION SELECT DISTINCT vt0.c0, t0.c0, rt1.c1 FROM rt1, t0, vt0 WHERE (((rt1.c0) ISNULL));
SELECT DISTINCT vt0.c0, t0.c0, rt1.c1 FROM rt1, t0, vt0;
SELECT ALL t0.c0, rt1.c3, rt1.c2, v0.c0, rt1.c0, rt1.c1 FROM t0, rt1, v0 GROUP BY t0.c0, rt1.c3, rt1.c2, v0.c0, rt1.c0, rt1.c1;
SELECT t0.c0, rt1.c3, rt1.c2, v0.c0, rt1.c0, rt1.c1 FROM t0, rt1 NOT INDEXED, v0 WHERE ((((v0.c0, rt1.c1, t0.c0)) BETWEEN (((v0.c0 IN ()), ((v0.c0)%(rt1.c0)), (((rt1.c3))!=((rt1.c1))))) AND (((- (t0.c0)), ((rt1.c1)=(v0.c0)), x'')))) GROUP BY t0.c0, rt1.c3, rt1.c2, v0.c0, rt1.c0, rt1.c1 UNION SELECT ALL t0.c0, rt1.c3, rt1.c2, v0.c0, rt1.c0, rt1.c1 FROM t0, rt1 NOT INDEXED, v0 WHERE ((NOT ((((v0.c0, rt1.c1, t0.c0)) BETWEEN (((v0.c0 IN ()), ((v0.c0)%(rt1.c0)), (((rt1.c3))!=((rt1.c1))))) AND (((- (t0.c0)), ((rt1.c1)==(v0.c0)), x'')))))) GROUP BY t0.c0, rt1.c3, rt1.c2, v0.c0, rt1.c0, rt1.c1 UNION SELECT t0.c0, rt1.c3, rt1.c2, v0.c0, rt1.c0, rt1.c1 FROM t0, rt1, v0 WHERE ((((((v0.c0, rt1.c1, t0.c0)) BETWEEN (((v0.c0 IN ()), ((v0.c0)%(rt1.c0)), (((rt1.c3))!=((rt1.c1))))) AND (((- (t0.c0)), ((rt1.c1)=(v0.c0)), x'')))) ISNULL)) GROUP BY t0.c0, rt1.c3, rt1.c2, v0.c0, rt1.c0, rt1.c1;
SELECT ALL t0.c0, rt1.c3, rt1.c2, v0.c0, rt1.c0, rt1.c1 FROM t0, rt1, v0 GROUP BY t0.c0, rt1.c3, rt1.c2, v0.c0, rt1.c0, rt1.c1;
SELECT t0.c0, rt1.c3, rt1.c1, vt0.c0, rt1.c2 FROM rt1, vt0, t0 GROUP BY t0.c0, rt1.c3, rt1.c1, vt0.c0, rt1.c2;
SELECT ALL t0.c0, rt1.c3, rt1.c1, vt0.c0, rt1.c2 FROM rt1, vt0, t0 GROUP BY t0.c0, rt1.c3, rt1.c1, vt0.c0, rt1.c2 HAVING CASE COUNT(*)  WHEN MIN(COUNT(*)) THEN x'' END UNION ALL SELECT ALL t0.c0, rt1.c3, rt1.c1, vt0.c0, rt1.c2 FROM rt1, vt0, t0 GROUP BY t0.c0, rt1.c3, rt1.c1, vt0.c0, rt1.c2 HAVING (NOT (CASE COUNT(*)  WHEN MIN(COUNT(*)) THEN x'' END)) UNION ALL SELECT ALL t0.c0, rt1.c3, rt1.c1, vt0.c0, rt1.c2 FROM rt1, vt0, t0 GROUP BY t0.c0, rt1.c3, rt1.c1, vt0.c0, rt1.c2 HAVING ((CASE COUNT(*)  WHEN MIN(COUNT(*)) THEN x'' END) ISNULL);
SELECT ALL * FROM t0, rt1;
SELECT * FROM t0, rt1 WHERE (rt1.c2 COLLATE NOCASE COLLATE BINARY) UNION ALL SELECT * FROM t0, rt1 WHERE ((NOT (rt1.c2 COLLATE NOCASE COLLATE BINARY))) UNION ALL SELECT ALL * FROM t0, rt1 WHERE (((rt1.c2 COLLATE NOCASE COLLATE BINARY) ISNULL));
SELECT ALL * FROM t0, rt1;
SELECT DISTINCT * FROM t0, v0;
SELECT DISTINCT * FROM t0, v0 WHERE ((((((((v0.c0)OR(t0.c0)))AND(t0.c0))))>=(('0.2891718655153276')))) UNION SELECT DISTINCT * FROM t0, v0 WHERE ((NOT ((((((((v0.c0)OR(t0.c0)))AND(t0.c0))))>=(('0.2891718655153276')))))) UNION SELECT DISTINCT * FROM t0, v0 WHERE ((((((((((v0.c0)OR(t0.c0)))AND(t0.c0))))>=(('0.2891718655153276')))) ISNULL));
SELECT DISTINCT * FROM t0, v0;
SELECT ALL v0.c0, rt1.c1, rt1.c2, vt0.c0, t0.c0, rt1.c0 FROM rt1 FULL OUTER JOIN vt0 ON ((v0.c0) IS FALSE) CROSS JOIN t0 ON ((((rt1.c3)LIKE(rt1.c2))) NOT NULL) RIGHT OUTER JOIN v0 ON ((rt1.c1 IN (rt1.c2)) IN ()) GROUP BY v0.c0, rt1.c1, rt1.c2, vt0.c0, t0.c0, rt1.c0;
SELECT ALL rt1.c1, rt1.c3, rt1.c0 FROM rt1, t0, vt0 CROSS JOIN v0 ON ((((v0.c0)&(v0.c0)))*(0.18104752443746175 COLLATE NOCASE)) GROUP BY rt1.c1, rt1.c3, rt1.c0;
SELECT rt1.c1, rt1.c3, rt1.c0 FROM rt1, t0 NOT INDEXED, vt0 CROSS JOIN v0 ON ((((v0.c0)&(v0.c0)))*(0.18104752443746175 COLLATE NOCASE)) GROUP BY rt1.c1, rt1.c3, rt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c1, rt1.c3, rt1.c0 FROM rt1, t0, vt0 CROSS JOIN v0 ON ((((v0.c0)&(v0.c0)))*(0.18104752443746175 COLLATE NOCASE)) GROUP BY rt1.c1, rt1.c3, rt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c1, rt1.c3, rt1.c0 FROM rt1, t0, vt0 CROSS JOIN v0 ON ((((v0.c0)&(v0.c0)))*(0.18104752443746175 COLLATE NOCASE)) GROUP BY rt1.c1, rt1.c3, rt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c1, rt1.c3, rt1.c0 FROM rt1, t0, vt0 CROSS JOIN v0 ON ((((v0.c0)&(v0.c0)))*(0.18104752443746175 COLLATE NOCASE)) GROUP BY rt1.c1, rt1.c3, rt1.c0;
SELECT rt1.c1, rt1.c3, rt1.c0 FROM rt1, t0 NOT INDEXED, vt0 CROSS JOIN v0 ON ((((v0.c0)&(v0.c0)))*(0.18104752443746175 COLLATE NOCASE)) GROUP BY rt1.c1, rt1.c3, rt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c1, rt1.c3, rt1.c0 FROM rt1, t0, vt0 CROSS JOIN v0 ON ((((v0.c0)&(v0.c0)))*(0.18104752443746175 COLLATE NOCASE)) GROUP BY rt1.c1, rt1.c3, rt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c1, rt1.c3, rt1.c0 FROM rt1, t0, vt0 CROSS JOIN v0 ON ((((v0.c0)&(v0.c0)))*(0.18104752443746175 COLLATE NOCASE)) GROUP BY rt1.c1, rt1.c3, rt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c1, rt1.c3, rt1.c0 FROM rt1, t0, vt0 CROSS JOIN v0 ON ((((v0.c0)&(v0.c0)))*(0.18104752443746175 COLLATE NOCASE)) GROUP BY rt1.c1, rt1.c3, rt1.c0;
SELECT rt1.c2, rt1.c1, v0.c0, rt1.c0, rt1.c3 FROM v0, rt1;
SELECT ALL rt1.c2, rt1.c1, v0.c0, rt1.c0, rt1.c3 FROM v0, rt1 WHERE (((((rt1.c0 IN ())))<=(((('Wg趜gJꓹwr')/('153432634')))))) UNION ALL SELECT rt1.c2, rt1.c1, v0.c0, rt1.c0, rt1.c3 FROM v0, rt1 WHERE ((NOT (((((rt1.c0 IN ())))<=(((('Wg趜gJꓹwr')/('153432634')))))))) UNION ALL SELECT ALL rt1.c2, rt1.c1, v0.c0, rt1.c0, rt1.c3 FROM v0, rt1 WHERE (((((((rt1.c0 IN ())))<=(((('Wg趜gJꓹwr')/('153432634')))))) ISNULL));
SELECT rt1.c2, rt1.c1, v0.c0, rt1.c0, rt1.c3 FROM v0, rt1;
SELECT DISTINCT * FROM t0, rt1;
SELECT DISTINCT * FROM t0, rt1 WHERE ((~ (((t0.c0)+(t0.c0))))) UNION SELECT DISTINCT * FROM t0, rt1 WHERE ((NOT ((~ (((t0.c0)+(t0.c0))))))) UNION SELECT DISTINCT * FROM t0, rt1 WHERE ((((~ (((t0.c0)+(t0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0, rt1;
SELECT vt0.c0 FROM t0, v0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0, v0, vt0 WHERE (((((t0.c0 COLLATE BINARY)AND(((NULL) BETWEEN (v0.c0) AND (vt0.c0)))))AND(vt0.c0))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM t0, v0, vt0 WHERE ((NOT (((((t0.c0 COLLATE BINARY)AND(((NULL) BETWEEN (v0.c0) AND (vt0.c0)))))AND(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM t0, v0, vt0 WHERE (((((((t0.c0 COLLATE BINARY)AND(((NULL) BETWEEN (v0.c0) AND (vt0.c0)))))AND(vt0.c0))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM t0, v0, vt0 GROUP BY vt0.c0;
SELECT ALL t0.c0, vt0.c0, v0.c0 FROM vt0 FULL OUTER JOIN v0 ON (~ (t0.c0)) LEFT OUTER JOIN t0 ON (NOT (vt0.c0)) GROUP BY t0.c0, vt0.c0, v0.c0;
SELECT * FROM t0, vt0 RIGHT OUTER JOIN rt1 ON ((((v0.c0)OR(t0.c0))) BETWEEN ((((rt1.c3))>((rt1.c2)))) AND ((((rt1.c3, v0.c0, rt1.c3))!=((t0.c0, rt1.c0, vt0.c0))))) INNER JOIN v0 ON (((((rt1.c1)) NOT BETWEEN ((v0.c0)) AND ((rt1.c3))))<<(((((rt1.c1)OR(rt1.c3)))OR(rt1.c1))));
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND(CAST(v0.c0 AS REAL))))AND((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((v0.c0, vt0.c0, v0.c0)) AND ((vt0.c0, v0.c0, v0.c0)))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND(CAST(v0.c0 AS REAL))))AND((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((v0.c0, vt0.c0, v0.c0)) AND ((vt0.c0, v0.c0, v0.c0)))))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE (((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND(CAST(v0.c0 AS REAL))))AND((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((v0.c0, vt0.c0, v0.c0)) AND ((vt0.c0, v0.c0, v0.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT ALL rt1.c0 FROM v0, rt1, t0, vt0 GROUP BY rt1.c0;
SELECT rt1.c0 FROM v0, rt1, t0, vt0 WHERE (CAST(((rt1.c3)IS(rt1.c0)) AS TEXT)) GROUP BY rt1.c0 UNION SELECT rt1.c0 FROM v0, rt1, t0, vt0 WHERE ((NOT (CAST(((rt1.c3)IS(rt1.c0)) AS TEXT)))) GROUP BY rt1.c0 UNION SELECT rt1.c0 FROM v0, rt1, t0, vt0 WHERE (((CAST(((rt1.c3)IS(rt1.c0)) AS TEXT)) ISNULL)) GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM v0, rt1, t0, vt0 GROUP BY rt1.c0;
SELECT ALL rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0;
SELECT ALL rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0 HAVING LIKE(CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN GROUP_CONCAT(SUM(MAX(rt1.c0))) WHEN rt1.c0 THEN COUNT(*) END, COUNT(rt1.c0)) UNION ALL SELECT rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0 HAVING (NOT (LIKE(CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN GROUP_CONCAT(SUM(MAX(rt1.c0))) WHEN rt1.c0 THEN COUNT(*) END, COUNT(rt1.c0)))) UNION ALL SELECT ALL rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0 HAVING ((LIKE(CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN GROUP_CONCAT(SUM(MAX(rt1.c0))) WHEN rt1.c0 THEN COUNT(*) END, COUNT(rt1.c0))) ISNULL);
SELECT ALL * FROM vt0, rt1, t0;
SELECT ALL * FROM vt0, rt1, t0 WHERE (MIN(((rt1.c2)==(rt1.c3)), t0.c0 COLLATE BINARY)) UNION ALL SELECT ALL * FROM vt0, rt1, t0 WHERE ((NOT (MIN(((rt1.c2)==(rt1.c3)), t0.c0 COLLATE BINARY)))) UNION ALL SELECT * FROM vt0, rt1, t0 WHERE (((MIN(((rt1.c2)=(rt1.c3)), t0.c0 COLLATE BINARY)) ISNULL));
SELECT ALL * FROM vt0, rt1, t0;
SELECT DISTINCT * FROM v0, vt0, rt1, t0;
SELECT DISTINCT * FROM v0, vt0, rt1, t0 WHERE (0.713191643116244) UNION SELECT DISTINCT * FROM v0, vt0, rt1, t0 WHERE ((NOT (0.713191643116244))) UNION SELECT DISTINCT * FROM v0, vt0, rt1, t0 WHERE (((0.713191643116244) ISNULL));
SELECT DISTINCT * FROM v0, vt0, rt1, t0;
SELECT rt1.c3, rt1.c0 FROM vt0, rt1, t0 INDEXED BY i30 GROUP BY rt1.c3, rt1.c0;
SELECT ALL rt1.c3, rt1.c0 FROM vt0, rt1, t0 INDEXED BY i30 WHERE (((((((((((((rt1.c1)AND(rt1.c2)))AND(rt1.c0)))OR(rt1.c0)))OR(rt1.c1)))AND(x'')))AND(rt1.c2)) COLLATE BINARY) GROUP BY rt1.c3, rt1.c0 UNION SELECT ALL rt1.c3, rt1.c0 FROM vt0, rt1, t0 INDEXED BY i30 WHERE ((NOT (((((((((((((rt1.c1)AND(rt1.c2)))AND(rt1.c0)))OR(rt1.c0)))OR(rt1.c1)))AND(x'')))AND(rt1.c2)) COLLATE BINARY))) GROUP BY rt1.c3, rt1.c0 UNION SELECT ALL rt1.c3, rt1.c0 FROM vt0, rt1, t0 INDEXED BY i30 WHERE (((((((((((((((rt1.c1)AND(rt1.c2)))AND(rt1.c0)))OR(rt1.c0)))OR(rt1.c1)))AND(x'')))AND(rt1.c2)) COLLATE BINARY) ISNULL)) GROUP BY rt1.c3, rt1.c0;
SELECT rt1.c3, rt1.c0 FROM vt0, rt1, t0 INDEXED BY i30 GROUP BY rt1.c3, rt1.c0;
SELECT ALL rt1.c3, rt1.c1 FROM t0, rt1 GROUP BY rt1.c3, rt1.c1;
SELECT ALL rt1.c3, rt1.c1 FROM t0, rt1 GROUP BY rt1.c3, rt1.c1 HAVING CASE MAX(AVG(AVG(MIN(t0.c0))))  WHEN COUNT(x'e6db') THEN AVG(COUNT('1273211354')) END UNION ALL SELECT ALL rt1.c3, rt1.c1 FROM t0, rt1 GROUP BY rt1.c3, rt1.c1 HAVING (NOT (CASE MAX(AVG(AVG(MIN(t0.c0))))  WHEN COUNT(x'e6db') THEN AVG(COUNT('1273211354')) END)) UNION ALL SELECT ALL rt1.c3, rt1.c1 FROM t0, rt1 GROUP BY rt1.c3, rt1.c1 HAVING ((CASE MAX(AVG(AVG(MIN(t0.c0))))  WHEN COUNT(x'e6db') THEN AVG(COUNT('1273211354')) END) ISNULL);
SELECT * FROM vt0, v0;
SELECT ALL * FROM vt0, v0 WHERE (NULLIF(DISTINCT vt0.c0, '_>|&U') COLLATE NOCASE) UNION ALL SELECT * FROM vt0, v0 WHERE ((NOT (NULLIF(DISTINCT vt0.c0, '_>|&U') COLLATE NOCASE))) UNION ALL SELECT * FROM vt0, v0 WHERE (((NULLIF(DISTINCT vt0.c0, '_>|&U') COLLATE NOCASE) ISNULL));
SELECT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0, rt1;
SELECT DISTINCT * FROM vt0, v0, rt1 WHERE ((((v0.c0) IS TRUE) IN (rt1.c3))) UNION SELECT DISTINCT * FROM vt0, v0, rt1 WHERE ((NOT ((((v0.c0) IS TRUE) IN (rt1.c3))))) UNION SELECT DISTINCT * FROM vt0, v0, rt1 WHERE ((((((v0.c0) IS TRUE) IN (rt1.c3))) ISNULL));
SELECT DISTINCT * FROM vt0, v0, rt1;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0)GLOB(x''))) NOT NULL)) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((v0.c0)GLOB(x''))) NOT NULL)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((((v0.c0)GLOB(x''))) NOT NULL)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((GROUP_CONCAT(COUNT(TOTAL(COUNT(*)))))*(MAX(t0.c0))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((GROUP_CONCAT(COUNT(TOTAL(COUNT(*)))))*(MAX(t0.c0))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((GROUP_CONCAT(COUNT(TOTAL(COUNT(*)))))*(MAX(t0.c0)))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((vt0.c0)&(vt0.c0)) IN ())) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0)&(vt0.c0)) IN ())))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0)&(vt0.c0)) IN ())) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT t0.c0 FROM vt0, t0;
SELECT DISTINCT t0.c0 FROM vt0, t0 WHERE (LENGTH(CAST(t0.c0 AS INTEGER))) UNION SELECT DISTINCT t0.c0 FROM vt0, t0 WHERE ((NOT (LENGTH(CAST(t0.c0 AS INTEGER))))) UNION SELECT DISTINCT t0.c0 FROM vt0, t0 WHERE (((LENGTH(CAST(t0.c0 AS INTEGER))) ISNULL));
SELECT DISTINCT t0.c0 FROM vt0, t0;
SELECT vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 WHERE ((t0.c0 COLLATE NOCASE IN (vt0.c0, ((t0.c0)+(t0.c0))))) GROUP BY vt0.c0, t0.c0 UNION SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 WHERE ((NOT ((t0.c0 COLLATE NOCASE IN (vt0.c0, ((t0.c0)+(t0.c0))))))) GROUP BY vt0.c0, t0.c0 UNION SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 WHERE ((((t0.c0 COLLATE NOCASE IN (vt0.c0, ((t0.c0)+(t0.c0))))) ISNULL)) GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0;
SELECT rt1.c0, t0.c0, rt1.c1 FROM t0 FULL OUTER JOIN rt1 ON (((((rt1.c2 IN ()))OR(rt1.c2)))OR(((rt1.c0)+(rt1.c2)))) GROUP BY rt1.c0, t0.c0, rt1.c1;
SELECT ALL rt1.c0, t0.c0, rt1.c1 FROM t0 FULL OUTER JOIN rt1 ON (((((rt1.c2 IN ()))OR(rt1.c2)))OR(((rt1.c0)+(rt1.c2)))) GROUP BY rt1.c0, t0.c0, rt1.c1 HAVING x'' UNION ALL SELECT ALL rt1.c0, t0.c0, rt1.c1 FROM t0 FULL OUTER JOIN rt1 ON (((((rt1.c2 IN ()))OR(rt1.c2)))OR(((rt1.c0)+(rt1.c2)))) GROUP BY rt1.c0, t0.c0, rt1.c1 HAVING (NOT (x'')) UNION ALL SELECT ALL rt1.c0, t0.c0, rt1.c1 FROM t0 FULL OUTER JOIN rt1 ON (((((rt1.c2 IN ()))OR(rt1.c2)))OR(((rt1.c0)+(rt1.c2)))) GROUP BY rt1.c0, t0.c0, rt1.c1 HAVING ((x'') ISNULL);
SELECT rt1.c0, t0.c0, rt1.c1 FROM t0 FULL OUTER JOIN rt1 ON (((((rt1.c2 IN ()))OR(rt1.c2)))OR(((rt1.c0)+(rt1.c2)))) GROUP BY rt1.c0, t0.c0, rt1.c1;
SELECT ALL rt1.c0, t0.c0, rt1.c1 FROM t0 FULL OUTER JOIN rt1 ON (((((rt1.c2 IN ()))OR(rt1.c2)))OR(((rt1.c0)+(rt1.c2)))) GROUP BY rt1.c0, t0.c0, rt1.c1 HAVING x'' UNION ALL SELECT ALL rt1.c0, t0.c0, rt1.c1 FROM t0 FULL OUTER JOIN rt1 ON (((((rt1.c2 IN ()))OR(rt1.c2)))OR(((rt1.c0)+(rt1.c2)))) GROUP BY rt1.c0, t0.c0, rt1.c1 HAVING (NOT (x'')) UNION ALL SELECT ALL rt1.c0, t0.c0, rt1.c1 FROM t0 FULL OUTER JOIN rt1 ON (((((rt1.c2 IN ()))OR(rt1.c2)))OR(((rt1.c0)+(rt1.c2)))) GROUP BY rt1.c0, t0.c0, rt1.c1 HAVING ((x'') ISNULL);
SELECT rt1.c0, t0.c0, rt1.c1 FROM t0 FULL OUTER JOIN rt1 ON (((((rt1.c2 IN ()))OR(rt1.c2)))OR(((rt1.c0)+(rt1.c2)))) GROUP BY rt1.c0, t0.c0, rt1.c1;
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE ((((((((((v0.c0 IN (v0.c0)))OR(x'')))OR(LAST_INSERT_ROWID())))OR(v0.c0 COLLATE NOCASE)))OR(((((v0.c0)OR(v0.c0)))AND(v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT ((((((((((v0.c0 IN (v0.c0)))OR(x'')))OR(LAST_INSERT_ROWID())))OR(v0.c0 COLLATE NOCASE)))OR(((((v0.c0)OR(v0.c0)))AND(v0.c0))))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((((((((((((v0.c0 IN (v0.c0)))OR(x'')))OR(LAST_INSERT_ROWID())))OR(v0.c0 COLLATE NOCASE)))OR(((((v0.c0)OR(v0.c0)))AND(v0.c0))))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (LOWER(rt1.c1)) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (LOWER(rt1.c1)))) UNION SELECT DISTINCT * FROM rt1 WHERE (((LOWER(rt1.c1)) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((- (((vt0.c0)<=(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((- (((vt0.c0)<=(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((- (((vt0.c0)<=(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT v0.c0, rt1.c3, rt1.c0, t0.c0, rt1.c1 FROM t0, v0, vt0 RIGHT OUTER JOIN rt1 ON ((rt1.c1 COLLATE RTRIM)*(0.30695254243608294)) GROUP BY v0.c0, rt1.c3, rt1.c0, t0.c0, rt1.c1;
SELECT v0.c0, rt1.c3, rt1.c0, t0.c0, rt1.c1 FROM t0, v0, vt0 RIGHT OUTER JOIN rt1 ON ((rt1.c1 COLLATE RTRIM)*(0.30695254243608294)) GROUP BY v0.c0, rt1.c3, rt1.c0, t0.c0, rt1.c1 HAVING AVG(rt1.c2) UNION ALL SELECT ALL v0.c0, rt1.c3, rt1.c0, t0.c0, rt1.c1 FROM t0, v0, vt0 RIGHT OUTER JOIN rt1 ON ((rt1.c1 COLLATE RTRIM)*(0.30695254243608294)) GROUP BY v0.c0, rt1.c3, rt1.c0, t0.c0, rt1.c1 HAVING (NOT (AVG(rt1.c2))) UNION ALL SELECT ALL v0.c0, rt1.c3, rt1.c0, t0.c0, rt1.c1 FROM t0, v0, vt0 RIGHT OUTER JOIN rt1 ON ((rt1.c1 COLLATE RTRIM)*(0.30695254243608294)) GROUP BY v0.c0, rt1.c3, rt1.c0, t0.c0, rt1.c1 HAVING ((AVG(rt1.c2)) ISNULL);
SELECT v0.c0, rt1.c3, rt1.c0, t0.c0, rt1.c1 FROM t0, v0, vt0 RIGHT OUTER JOIN rt1 ON ((rt1.c1 COLLATE RTRIM)*(0.30695254243608294)) GROUP BY v0.c0, rt1.c3, rt1.c0, t0.c0, rt1.c1;
SELECT v0.c0, rt1.c3, rt1.c0, t0.c0, rt1.c1 FROM t0, v0, vt0 RIGHT OUTER JOIN rt1 ON ((rt1.c1 COLLATE RTRIM)*(0.30695254243608294)) GROUP BY v0.c0, rt1.c3, rt1.c0, t0.c0, rt1.c1 HAVING AVG(rt1.c2) UNION ALL SELECT ALL v0.c0, rt1.c3, rt1.c0, t0.c0, rt1.c1 FROM t0, v0, vt0 RIGHT OUTER JOIN rt1 ON ((rt1.c1 COLLATE RTRIM)*(0.30695254243608294)) GROUP BY v0.c0, rt1.c3, rt1.c0, t0.c0, rt1.c1 HAVING (NOT (AVG(rt1.c2))) UNION ALL SELECT ALL v0.c0, rt1.c3, rt1.c0, t0.c0, rt1.c1 FROM t0, v0, vt0 RIGHT OUTER JOIN rt1 ON ((rt1.c1 COLLATE RTRIM)*(0.30695254243608294)) GROUP BY v0.c0, rt1.c3, rt1.c0, t0.c0, rt1.c1 HAVING ((AVG(rt1.c2)) ISNULL);
SELECT v0.c0, rt1.c3, rt1.c0, t0.c0, rt1.c1 FROM t0, v0, vt0 RIGHT OUTER JOIN rt1 ON ((rt1.c1 COLLATE RTRIM)*(0.30695254243608294)) GROUP BY v0.c0, rt1.c3, rt1.c0, t0.c0, rt1.c1;
SELECT * FROM v0, vt0, rt1;
SELECT * FROM v0, vt0, rt1 WHERE (CAST(rt1.c1 AS INTEGER)) UNION ALL SELECT * FROM v0, vt0, rt1 WHERE ((NOT (CAST(rt1.c1 AS INTEGER)))) UNION ALL SELECT ALL * FROM v0, vt0, rt1 WHERE (((CAST(rt1.c1 AS INTEGER)) ISNULL));
SELECT * FROM v0, vt0, rt1;
SELECT DISTINCT * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0 WHERE (t0.c0) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT * FROM t0, vt0 NOT INDEXED WHERE (((t0.c0) ISNULL));
SELECT DISTINCT * FROM t0, vt0;
SELECT ALL vt0.c0, v0.c0 FROM t0, v0, rt1 INNER JOIN vt0 ON ((((((rt1.c0)OR(rt1.c1)))AND(rt1.c3)))<=(((t0.c0) ISNULL))) GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM t0, v0, rt1 INNER JOIN vt0 ON ((((((rt1.c0)OR(rt1.c1)))AND(rt1.c3)))<=(((t0.c0) ISNULL))) WHERE (((((-1430452555)==(rt1.c0)))-(CAST(rt1.c0 AS INTEGER)))) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM t0, v0, rt1 INNER JOIN vt0 ON ((((((rt1.c0)OR(rt1.c1)))AND(rt1.c3)))<=(((t0.c0) ISNULL))) WHERE ((NOT (((((-1430452555)==(rt1.c0)))-(CAST(rt1.c0 AS INTEGER)))))) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM t0, v0, rt1 INNER JOIN vt0 ON ((((((rt1.c0)OR(rt1.c1)))AND(rt1.c3)))<=(((t0.c0) ISNULL))) WHERE (((((((-1430452555)==(rt1.c0)))-(CAST(rt1.c0 AS INTEGER)))) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM t0, v0, rt1 INNER JOIN vt0 ON ((((((rt1.c0)OR(rt1.c1)))AND(rt1.c3)))<=(((t0.c0) ISNULL))) GROUP BY vt0.c0, v0.c0;
SELECT t0.c0, rt1.c0, rt1.c2 FROM v0, t0, rt1 GROUP BY t0.c0, rt1.c0, rt1.c2;
SELECT t0.c0, rt1.c0, rt1.c2 FROM v0, t0, rt1 GROUP BY t0.c0, rt1.c0, rt1.c2 HAVING (((((COUNT(COUNT(*)), rt1.c1, COUNT(TOTAL(rt1.c1)))) BETWEEN ((MAX(TOTAL(MAX(rt1.c1))), rt1.c1, MAX(GROUP_CONCAT(MAX(SUM(v0.c0)))))) AND ((COUNT(rt1.c2), MAX(COUNT(rt1.c0)), SUM(SUM(COUNT(*)))))))-(SUM(MAX(TOTAL(COUNT(v0.c0)))))) UNION ALL SELECT ALL t0.c0, rt1.c0, rt1.c2 FROM v0, t0, rt1 GROUP BY t0.c0, rt1.c0, rt1.c2 HAVING (NOT ((((((COUNT(COUNT(*)), rt1.c1, COUNT(TOTAL(rt1.c1)))) BETWEEN ((MAX(TOTAL(MAX(rt1.c1))), rt1.c1, MAX(GROUP_CONCAT(MAX(SUM(v0.c0)))))) AND ((COUNT(rt1.c2), MAX(COUNT(rt1.c0)), SUM(SUM(COUNT(*)))))))-(SUM(MAX(TOTAL(COUNT(v0.c0)))))))) UNION ALL SELECT ALL t0.c0, rt1.c0, rt1.c2 FROM v0, t0, rt1 GROUP BY t0.c0, rt1.c0, rt1.c2 HAVING (((((((COUNT(COUNT(*)), rt1.c1, COUNT(TOTAL(rt1.c1)))) BETWEEN ((MAX(TOTAL(MAX(rt1.c1))), rt1.c1, MAX(GROUP_CONCAT(MAX(SUM(v0.c0)))))) AND ((COUNT(rt1.c2), MAX(COUNT(rt1.c0)), SUM(SUM(COUNT(*)))))))-(SUM(MAX(TOTAL(COUNT(v0.c0))))))) ISNULL);
SELECT ALL * FROM v0, rt1 INNER JOIN vt0 ON CAST(CAST(v0.c0 AS BLOB) AS REAL) INNER JOIN t0 ON (~ (v0.c0));
SELECT * FROM v0, rt1 INNER JOIN vt0 ON CAST(CAST(v0.c0 AS BLOB) AS REAL) INNER JOIN t0 ON (~ (v0.c0)) WHERE ((('-2004948280')IS(NULL))) UNION ALL SELECT * FROM v0, rt1 INNER JOIN vt0 ON CAST(CAST(v0.c0 AS BLOB) AS REAL) INNER JOIN t0 ON (~ (v0.c0)) WHERE ((NOT ((('-2004948280')IS(NULL))))) UNION ALL SELECT ALL * FROM v0, rt1 INNER JOIN vt0 ON CAST(CAST(v0.c0 AS BLOB) AS REAL) INNER JOIN t0 ON (~ (v0.c0)) WHERE ((((('-2004948280')IS(NULL))) ISNULL));
SELECT ALL * FROM v0, rt1 INNER JOIN vt0 ON CAST(CAST(v0.c0 AS BLOB) AS REAL) INNER JOIN t0 ON (~ (v0.c0));
SELECT DISTINCT vt0.c0 FROM t0, vt0;
SELECT DISTINCT vt0.c0 FROM t0, vt0 WHERE (((((vt0.c0)>>(t0.c0)))LIKE(vt0.c0))) UNION SELECT DISTINCT vt0.c0 FROM t0, vt0 WHERE ((NOT (((((vt0.c0)>>(t0.c0)))LIKE(vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM t0, vt0 WHERE (((((((vt0.c0)>>(t0.c0)))LIKE(vt0.c0))) ISNULL));
SELECT DISTINCT vt0.c0 FROM t0, vt0;
SELECT vt0.c0 FROM t0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0, vt0 WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM t0, vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM t0, vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM t0, vt0 GROUP BY vt0.c0;
SELECT rt1.c2 FROM rt1, vt0 GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1, vt0 GROUP BY rt1.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c2 FROM rt1, vt0 GROUP BY rt1.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c2 FROM rt1, vt0 GROUP BY rt1.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c2 FROM rt1, vt0 GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1, vt0 GROUP BY rt1.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c2 FROM rt1, vt0 GROUP BY rt1.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c2 FROM rt1, vt0 GROUP BY rt1.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c2 FROM rt1, vt0 GROUP BY rt1.c2;
SELECT ALL v0.c0 FROM t0, v0;
SELECT ALL v0.c0 FROM t0, v0 WHERE (((ABS(DISTINCT '419572463')) NOT NULL)) UNION ALL SELECT v0.c0 FROM t0, v0 WHERE ((NOT (((ABS(DISTINCT '419572463')) NOT NULL)))) UNION ALL SELECT v0.c0 FROM t0, v0 WHERE (((((ABS(DISTINCT '419572463')) NOT NULL)) ISNULL));
SELECT ALL v0.c0 FROM t0, v0;
SELECT DISTINCT * FROM v0, rt1, t0;
SELECT DISTINCT * FROM v0, rt1, t0 WHERE (rt1.c1) UNION SELECT DISTINCT * FROM v0, rt1, t0 WHERE ((NOT (rt1.c1))) UNION SELECT DISTINCT * FROM v0, rt1, t0 WHERE (((rt1.c1) ISNULL));
SELECT DISTINCT * FROM v0, rt1, t0;
SELECT ALL vt0.c0 FROM rt1, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM rt1, vt0 WHERE (((((((((((vt0.c0)>('')))OR(rt1.c1)))OR(((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c1)))))AND(((vt0.c0)IS(rt1.c2)))))AND('1121093161'))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM rt1, vt0 WHERE ((NOT (((((((((((vt0.c0)>('')))OR(rt1.c1)))OR(((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c1)))))AND(((vt0.c0)IS(rt1.c2)))))AND('1121093161'))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM rt1, vt0 WHERE (((((((((((((vt0.c0)>('')))OR(rt1.c1)))OR(((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c1)))))AND(((vt0.c0)IS(rt1.c2)))))AND('1121093161'))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM rt1, vt0 GROUP BY vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM vt0, v0, t0 GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM vt0, v0, t0 GROUP BY t0.c0, vt0.c0 HAVING GROUP_CONCAT(NULL) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM vt0, v0, t0 GROUP BY t0.c0, vt0.c0 HAVING (NOT (GROUP_CONCAT(NULL))) UNION ALL SELECT t0.c0, vt0.c0 FROM vt0, v0, t0 GROUP BY t0.c0, vt0.c0 HAVING ((GROUP_CONCAT(NULL)) ISNULL);
SELECT ALL t0.c0, vt0.c0 FROM vt0, v0, t0 GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM vt0, v0, t0 GROUP BY t0.c0, vt0.c0 HAVING GROUP_CONCAT(NULL) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM vt0, v0, t0 GROUP BY t0.c0, vt0.c0 HAVING (NOT (GROUP_CONCAT(NULL))) UNION ALL SELECT t0.c0, vt0.c0 FROM vt0, v0, t0 GROUP BY t0.c0, vt0.c0 HAVING ((GROUP_CONCAT(NULL)) ISNULL);
SELECT ALL t0.c0, vt0.c0 FROM vt0, v0, t0 GROUP BY t0.c0, vt0.c0;
SELECT * FROM rt1, t0, vt0, v0;
SELECT * FROM rt1, t0, vt0, v0 WHERE (((((((((LAST_INSERT_ROWID())AND(((((rt1.c3)AND(v0.c0)))OR('Si')))))AND(((rt1.c3)<<(v0.c0)))))OR((((rt1.c1, rt1.c1, t0.c0))<((v0.c0, x'', v0.c0))))))AND(((((rt1.c0)AND(rt1.c0)))AND(vt0.c0))))) UNION ALL SELECT * FROM rt1, t0, vt0, v0 WHERE ((NOT (((((((((LAST_INSERT_ROWID())AND(((((rt1.c3)AND(v0.c0)))OR('Si')))))AND(((rt1.c3)<<(v0.c0)))))OR((((rt1.c1, rt1.c1, t0.c0))<((v0.c0, x'', v0.c0))))))AND(((((rt1.c0)AND(rt1.c0)))AND(vt0.c0))))))) UNION ALL SELECT * FROM rt1, t0, vt0, v0 WHERE (((((((((((LAST_INSERT_ROWID())AND(((((rt1.c3)AND(v0.c0)))OR('Si')))))AND(((rt1.c3)<<(v0.c0)))))OR((((rt1.c1, rt1.c1, t0.c0))<((v0.c0, x'', v0.c0))))))AND(((((rt1.c0)AND(rt1.c0)))AND(vt0.c0))))) ISNULL));
SELECT * FROM rt1, t0, vt0, v0;
