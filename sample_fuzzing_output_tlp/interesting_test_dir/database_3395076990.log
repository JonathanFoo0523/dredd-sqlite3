-- Time: 2024/06/12 23:02:48
-- Database: database90
-- Database version: 3.40.0
-- seed value: 3395076990
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-16le'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED, c1 UNINDEXED); -- 1ms;
INSERT OR FAIL INTO vt0 VALUES ('1182709025', '6Mmt''&}'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0, c1) VALUES ('uS-\r딡', x'0b3c'), (1182709025, 0.7317737255938869), (0.5184394060386776, x''); -- 1ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (x'd651'); -- 0ms;
PRAGMA incremental_vacuum; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '18452'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '6268'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -2057834833);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '59662'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 996008133); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '47972'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=0'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 271599933); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=1182709025,6');\n; -- 0ms;
PRAGMA temp.foreign_keys; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '10496'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 1010861820);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
PRAGMA cache_size; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA main.cache_spill = -6360657868740762550; -- 0ms;
PRAGMA secure_delete = false; -- 0ms;
PRAGMA secure_delete = true; -- 0ms;
INSERT OR ABORT INTO vt0(c0) VALUES (0.26506529098459697); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL), ('W>2Yb'), (x''); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 3); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '32037'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=3'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1177246854); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 6); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '19029'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 1010861820);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=8'); -- 0ms;
ANALYZE vt0; -- 0ms;
REINDEX BINARY; -- 1ms;
PRAGMA wal_checkpoint(TRUNCATE); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR FAIL INTO vt0(c1) VALUES (NULL); -- 1ms;
ANALYZE; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1755466097); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 879476012); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 10); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 0); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '26749'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('automerge=2'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=1010861820,4');\n; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (x'', NULL), (x'', x''), (0.26506529098459697, '6mmt''&}'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 6); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
PRAGMA temp.application_id = -859437529388717333; -- 0ms;
CREATE TEMP TABLE t0 (c0 INT ); -- 0ms;
INSERT OR IGNORE INTO vt0(c1, c0) VALUES (NULL, ''); -- 0ms;
CREATE TEMP VIEW v0(c0) AS SELECT DISTINCT SUM(((((vt0.c1)OR(t0.c0)))AND(t0.c0))) OVER () FROM vt0, t0; -- 0ms;
PRAGMA wal_checkpoint(FULL); -- 0ms;
PRAGMA wal_checkpoint(TRUNCATE); -- 0ms;
PRAGMA temp.secure_delete = FAST; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 859438820); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 3); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
CREATE UNIQUE INDEX i81 ON t0(CASE (+ (c0))  WHEN ((c0)>>(c0)) THEN c0 COLLATE RTRIM ELSE CAST(c0 AS TEXT) END) WHERE ((((LENGTH(c0))OR(CAST(c0 AS TEXT))))AND(((((((((c0)AND(c0)))OR(c0)))OR(c0)))OR(c0)))); -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES (1010861820); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.4923032849503588); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR ABORT INTO vt0(c0, c1) VALUES (0.5135544387692987, NULL); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 1010861820);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '41410'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 1182709025);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '47221'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-1481870713,12');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=3'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 2); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '47198'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=1027105473,10');\n; -- 1ms;
DROP VIEW v0; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 835164015);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=7'); -- 0ms;
PRAGMA journal_size_limit = 1123095275049497215; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2, c3, c4); -- 1ms;
ANALYZE; -- 1ms;
ANALYZE main; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
PRAGMA short_column_names = true; -- 0ms;
PRAGMA main.ignore_check_constraints = false; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=1010861820,5');\n; -- 0ms;
PRAGMA temp.locking_mode = NORMAL; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '39764'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
PRAGMA locking_mode = NORMAL; -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c0) VALUES (NULL, 1.01086182E9); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 891367198); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1958185270); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 1); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 11); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
PRAGMA defer_foreign_keys = true; -- 0ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c3, c1, c4, c2) VALUES (x'05ea', '0.4923032849503588', NULL, 0x4265edb6, 0.3733495236250056); -- 1ms;
REINDEX BINARY; -- 0ms;
CREATE INDEX IF NOT EXISTS i75 ON t0(UPPER(c0)); -- 0ms;
PRAGMA journal_mode; -- 0ms;
PRAGMA default_cache_size; -- 0ms;
CREATE INDEX i92 ON t0((c0 IN ()) COLLATE NOCASE DESC); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
VACUUM main; -- 1ms;
CREATE TEMP TRIGGER IF NOT EXISTS tr0 BEFORE DELETE ON t0 FOR EACH ROW  WHEN CASE ((t0.c0) BETWEEN (t0.c0) AND (t0.c0))  WHEN CASE t0.c0  WHEN t0.c0 THEN NULL END THEN json_patch(t0.c0, t0.c0) END BEGIN DELETE FROM t0;DELETE FROM t0;END; -- 1ms;
INSERT OR REPLACE INTO t0 VALUES ('0.5184394060386776'), (-2.057834833E9), (NULL), (0.7841910853497156), (NULL); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (x''); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA temp.foreign_keys; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (0.5847476784991408); -- 1ms;
INSERT OR ABORT INTO t0(c0) VALUES ('-836127191'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (x'70cc'); -- 0ms;
PRAGMA main.locking_mode = NORMAL; -- 0ms;
INSERT OR REPLACE INTO rt0(c0, c1, c4, c3, c2) VALUES (x'', NULL, NULL, '1625451579', NULL), (0.9040619206389412, '1113976246', '-318789964', '', '0.5184394060386776'), (x'', 0xffffffffa39c37af, NULL, '_,', x''); -- 0ms;
INSERT OR IGNORE INTO vt0(c0, c1) VALUES (0xffffffffd1ca13bf, '-1619533012'); -- 0ms;
ANALYZE; -- 0ms;
INSERT OR ABORT INTO vt0(c0, c1) VALUES ('', x''), (x'', 1.027105473E9), (NULL, 0.6588838771228983); -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES (0.969110733908041); -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT t0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0, t0;
SELECT ALL t0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0, t0 WHERE (CASE WHEN x'16af' THEN t0.c0 ELSE rt0.c4 END COLLATE RTRIM) UNION ALL SELECT t0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0, t0 WHERE ((NOT (CASE WHEN x'16af' THEN t0.c0 ELSE rt0.c4 END COLLATE RTRIM))) UNION ALL SELECT ALL t0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0, t0 WHERE (((CASE WHEN x'16af' THEN t0.c0 ELSE rt0.c4 END COLLATE RTRIM) ISNULL));
SELECT t0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0, t0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (LOWER(rt0.c4)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (LOWER(rt0.c4)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((LOWER(rt0.c4)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2, rt0.c0, vt0.c1, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0, vt0.c1, rt0.c1;
SELECT rt0.c2, rt0.c0, vt0.c1, rt0.c1 FROM vt0, rt0 WHERE ((~ (vt0.c0)) COLLATE BINARY) GROUP BY rt0.c2, rt0.c0, vt0.c1, rt0.c1 UNION SELECT rt0.c2, rt0.c0, vt0.c1, rt0.c1 FROM vt0, rt0 WHERE ((NOT ((~ (vt0.c0)) COLLATE BINARY))) GROUP BY rt0.c2, rt0.c0, vt0.c1, rt0.c1 UNION SELECT rt0.c2, rt0.c0, vt0.c1, rt0.c1 FROM vt0, rt0 WHERE ((((~ (vt0.c0)) COLLATE BINARY) ISNULL)) GROUP BY rt0.c2, rt0.c0, vt0.c1, rt0.c1;
SELECT rt0.c2, rt0.c0, vt0.c1, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0, vt0.c1, rt0.c1;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c4;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c4 HAVING COUNT(((TOTAL(MAX(MIN(rt0.c3))))<(COUNT(rt0.c2)))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c4 HAVING (NOT (COUNT(((TOTAL(MAX(MIN(rt0.c3))))<(COUNT(rt0.c2)))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c4 HAVING ((COUNT(((TOTAL(MAX(MIN(rt0.c3))))<(COUNT(rt0.c2))))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((((rt0.c2) IS TRUE))==(rt0.c3 COLLATE BINARY))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((((rt0.c2) IS TRUE))=(rt0.c3 COLLATE BINARY))))) UNION ALL SELECT * FROM rt0 WHERE (((((((rt0.c2) IS TRUE))==(rt0.c3 COLLATE BINARY))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE (((CAST(rt0.c4 AS TEXT))LIKE(0.26506529098459697))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT (((CAST(rt0.c4 AS TEXT))LIKE(0.26506529098459697))))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE (((((CAST(rt0.c4 AS TEXT))LIKE(0.26506529098459697))) ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT rt0.c2, rt0.c1, vt0.c0, rt0.c0, rt0.c4, vt0.c1, t0.c0, rt0.c3 FROM vt0, t0 NATURAL JOIN rt0 GROUP BY rt0.c2, rt0.c1, vt0.c0, rt0.c0, rt0.c4, vt0.c1, t0.c0, rt0.c3;
SELECT rt0.c2, rt0.c1, vt0.c0, rt0.c0, rt0.c4, vt0.c1, t0.c0, rt0.c3 FROM vt0, t0 NATURAL JOIN rt0 WHERE ((- (((0.4301744952794794) BETWEEN (vt0.c0) AND (t0.c0))))) GROUP BY rt0.c2, rt0.c1, vt0.c0, rt0.c0, rt0.c4, vt0.c1, t0.c0, rt0.c3 UNION SELECT rt0.c2, rt0.c1, vt0.c0, rt0.c0, rt0.c4, vt0.c1, t0.c0, rt0.c3 FROM vt0, t0 NATURAL JOIN rt0 WHERE ((NOT ((- (((0.4301744952794794) BETWEEN (vt0.c0) AND (t0.c0))))))) GROUP BY rt0.c2, rt0.c1, vt0.c0, rt0.c0, rt0.c4, vt0.c1, t0.c0, rt0.c3 UNION SELECT ALL rt0.c2, rt0.c1, vt0.c0, rt0.c0, rt0.c4, vt0.c1, t0.c0, rt0.c3 FROM vt0, t0 NATURAL JOIN rt0 WHERE ((((- (((0.4301744952794794) BETWEEN (vt0.c0) AND (t0.c0))))) ISNULL)) GROUP BY rt0.c2, rt0.c1, vt0.c0, rt0.c0, rt0.c4, vt0.c1, t0.c0, rt0.c3;
SELECT rt0.c2, rt0.c1, vt0.c0, rt0.c0, rt0.c4, vt0.c1, t0.c0, rt0.c3 FROM vt0, t0 NATURAL JOIN rt0 GROUP BY rt0.c2, rt0.c1, vt0.c0, rt0.c0, rt0.c4, vt0.c1, t0.c0, rt0.c3;
SELECT rt0.c2, vt0.c0, vt0.c1, rt0.c3 FROM rt0, vt0, t0 GROUP BY rt0.c2, vt0.c0, vt0.c1, rt0.c3;
SELECT rt0.c2, vt0.c0, vt0.c1, rt0.c3 FROM rt0, vt0, t0 GROUP BY rt0.c2, vt0.c0, vt0.c1, rt0.c3 HAVING TOTAL(MIN(TOTAL(MIN(rt0.c4)))) UNION ALL SELECT rt0.c2, vt0.c0, vt0.c1, rt0.c3 FROM rt0, vt0, t0 GROUP BY rt0.c2, vt0.c0, vt0.c1, rt0.c3 HAVING (NOT (TOTAL(MIN(TOTAL(MIN(rt0.c4)))))) UNION ALL SELECT ALL rt0.c2, vt0.c0, vt0.c1, rt0.c3 FROM rt0, vt0, t0 GROUP BY rt0.c2, vt0.c0, vt0.c1, rt0.c3 HAVING ((TOTAL(MIN(TOTAL(MIN(rt0.c4))))) ISNULL);
SELECT ALL * FROM t0, rt0;
SELECT ALL * FROM t0, rt0 WHERE (0.6588838771228983) UNION ALL SELECT ALL * FROM t0, rt0 WHERE ((NOT (0.6588838771228983))) UNION ALL SELECT ALL * FROM t0, rt0 WHERE (((0.6588838771228983) ISNULL));
SELECT ALL * FROM t0, rt0;
SELECT DISTINCT * FROM rt0, t0, vt0;
SELECT DISTINCT * FROM rt0, t0, vt0 WHERE (((CASE rt0.c3  WHEN rt0.c2 THEN vt0.c1 END) ISNULL)) UNION SELECT DISTINCT * FROM rt0, t0, vt0 WHERE ((NOT (((CASE rt0.c3  WHEN rt0.c2 THEN vt0.c1 END) ISNULL)))) UNION SELECT DISTINCT * FROM rt0, t0, vt0 WHERE (((((CASE rt0.c3  WHEN rt0.c2 THEN vt0.c1 END) ISNULL)) ISNULL));
SELECT DISTINCT * FROM rt0, t0, vt0;
SELECT t0.c0, vt0.c1 FROM t0 FULL OUTER JOIN vt0 ON (((((t0.c0 IN ()))OR((t0.c0 IN ()))))AND(vt0.c0 COLLATE RTRIM)) GROUP BY t0.c0, vt0.c1;
SELECT t0.c0, vt0.c1 FROM t0 FULL OUTER JOIN vt0 ON (((((t0.c0 IN ()))OR((t0.c0 IN ()))))AND(vt0.c0 COLLATE RTRIM)) WHERE (CAST(CAST(vt0.c0 AS TEXT) AS INTEGER)) GROUP BY t0.c0, vt0.c1 UNION SELECT ALL t0.c0, vt0.c1 FROM t0 FULL OUTER JOIN vt0 ON (((((t0.c0 IN ()))OR((t0.c0 IN ()))))AND(vt0.c0 COLLATE RTRIM)) WHERE ((NOT (CAST(CAST(vt0.c0 AS TEXT) AS INTEGER)))) GROUP BY t0.c0, vt0.c1 UNION SELECT ALL t0.c0, vt0.c1 FROM t0 FULL OUTER JOIN vt0 ON (((((t0.c0 IN ()))OR((t0.c0 IN ()))))AND(vt0.c0 COLLATE RTRIM)) WHERE (((CAST(CAST(vt0.c0 AS TEXT) AS INTEGER)) ISNULL)) GROUP BY t0.c0, vt0.c1;
SELECT t0.c0, vt0.c1 FROM t0 FULL OUTER JOIN vt0 ON (((((t0.c0 IN ()))OR((t0.c0 IN ()))))AND(vt0.c0 COLLATE RTRIM)) GROUP BY t0.c0, vt0.c1;
SELECT t0.c0, vt0.c1, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c1, vt0.c0;
SELECT t0.c0, vt0.c1, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c1, vt0.c0 HAVING NULL UNION ALL SELECT ALL t0.c0, vt0.c1, vt0.c0 FROM t0 NOT INDEXED, vt0 GROUP BY t0.c0, vt0.c1, vt0.c0 HAVING (NOT (NULL)) UNION ALL SELECT t0.c0, vt0.c1, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c1, vt0.c0 HAVING ((NULL) ISNULL);
SELECT t0.c0, vt0.c1, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c1, vt0.c0;
SELECT t0.c0, vt0.c1, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c1, vt0.c0 HAVING NULL UNION ALL SELECT ALL t0.c0, vt0.c1, vt0.c0 FROM t0 NOT INDEXED, vt0 GROUP BY t0.c0, vt0.c1, vt0.c0 HAVING (NOT (NULL)) UNION ALL SELECT t0.c0, vt0.c1, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c1, vt0.c0 HAVING ((NULL) ISNULL);
SELECT t0.c0, vt0.c1, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c1, vt0.c0;
SELECT rt0.c4, vt0.c0, rt0.c0, t0.c0, rt0.c2, rt0.c1, vt0.c1 FROM rt0, t0, vt0;
SELECT rt0.c4, vt0.c0, rt0.c0, t0.c0, rt0.c2, rt0.c1, vt0.c1 FROM rt0, t0, vt0 WHERE (((TRIM(DISTINCT rt0.c1)) BETWEEN (CAST(vt0.c1 AS REAL)) AND (((rt0.c4)!=(rt0.c3))))) UNION ALL SELECT ALL rt0.c4, vt0.c0, rt0.c0, t0.c0, rt0.c2, rt0.c1, vt0.c1 FROM rt0, t0, vt0 WHERE ((NOT (((TRIM(DISTINCT rt0.c1)) BETWEEN (CAST(vt0.c1 AS REAL)) AND (((rt0.c4)<>(rt0.c3))))))) UNION ALL SELECT rt0.c4, vt0.c0, rt0.c0, t0.c0, rt0.c2, rt0.c1, vt0.c1 FROM rt0, t0, vt0 WHERE (((((TRIM(DISTINCT rt0.c1)) BETWEEN (CAST(vt0.c1 AS REAL)) AND (((rt0.c4)<>(rt0.c3))))) ISNULL));
SELECT rt0.c4, vt0.c0, rt0.c0, t0.c0, rt0.c2, rt0.c1, vt0.c1 FROM rt0, t0, vt0;
SELECT DISTINCT vt0.c1, rt0.c0, rt0.c3, rt0.c1, vt0.c0, t0.c0 FROM vt0 CROSS JOIN t0 ON ((((0.13546252181633422)+(rt0.c1))) NOT BETWEEN (((rt0.c3) ISNULL)) AND ((NOT ('1010861820')))) LEFT OUTER JOIN rt0 ON vt0.c0;
SELECT DISTINCT vt0.c1, rt0.c0, rt0.c3, rt0.c1, vt0.c0, t0.c0 FROM vt0 CROSS JOIN t0 ON ((((0.13546252181633422)+(rt0.c1))) NOT BETWEEN (((rt0.c3) ISNULL)) AND ((NOT ('1010861820')))) LEFT OUTER JOIN rt0 ON vt0.c0 WHERE ((- (CASE '-775285825'  WHEN t0.c0 THEN rt0.c2 WHEN rt0.c3 THEN vt0.c0 WHEN NULL THEN t0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END))) UNION SELECT DISTINCT vt0.c1, rt0.c0, rt0.c3, rt0.c1, vt0.c0, t0.c0 FROM vt0 CROSS JOIN t0 ON ((((0.13546252181633422)+(rt0.c1))) NOT BETWEEN (((rt0.c3) ISNULL)) AND ((NOT ('1010861820')))) LEFT OUTER JOIN rt0 ON vt0.c0 WHERE ((NOT ((- (CASE '-775285825'  WHEN t0.c0 THEN rt0.c2 WHEN rt0.c3 THEN vt0.c0 WHEN NULL THEN t0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END))))) UNION SELECT DISTINCT vt0.c1, rt0.c0, rt0.c3, rt0.c1, vt0.c0, t0.c0 FROM vt0 CROSS JOIN t0 ON ((((0.13546252181633422)+(rt0.c1))) NOT BETWEEN (((rt0.c3) ISNULL)) AND ((NOT ('1010861820')))) LEFT OUTER JOIN rt0 ON vt0.c0 WHERE ((((- (CASE '-775285825'  WHEN t0.c0 THEN rt0.c2 WHEN rt0.c3 THEN vt0.c0 WHEN NULL THEN t0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END))) ISNULL));
SELECT DISTINCT vt0.c1, rt0.c0, rt0.c3, rt0.c1, vt0.c0, t0.c0 FROM vt0 CROSS JOIN t0 ON ((((0.13546252181633422)+(rt0.c1))) NOT BETWEEN (((rt0.c3) ISNULL)) AND ((NOT ('1010861820')))) LEFT OUTER JOIN rt0 ON vt0.c0;
SELECT rt0.c2, vt0.c1, rt0.c3, rt0.c0, rt0.c1, rt0.c4, vt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON ((CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 ELSE x'' END)>=(((((rt0.c0)OR(vt0.c1)))AND(NULL)))) LEFT OUTER JOIN t0 ON (((((rt0.c0)<=(rt0.c0))))<((((rt0.c1) NOTNULL)))) GROUP BY rt0.c2, vt0.c1, rt0.c3, rt0.c0, rt0.c1, rt0.c4, vt0.c0;
SELECT rt0.c2, vt0.c1, rt0.c3, rt0.c0, rt0.c1, rt0.c4, vt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON ((CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 ELSE x'' END)>=(((((rt0.c0)OR(vt0.c1)))AND(NULL)))) LEFT OUTER JOIN t0 ON (((((rt0.c0)<=(rt0.c0))))<((((rt0.c1) NOTNULL)))) WHERE (((((- (rt0.c3))))<((((vt0.c0) NOT BETWEEN (rt0.c4) AND (vt0.c0)))))) GROUP BY rt0.c2, vt0.c1, rt0.c3, rt0.c0, rt0.c1, rt0.c4, vt0.c0 UNION SELECT rt0.c2, vt0.c1, rt0.c3, rt0.c0, rt0.c1, rt0.c4, vt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON ((CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 ELSE x'' END)>=(((((rt0.c0)OR(vt0.c1)))AND(NULL)))) LEFT OUTER JOIN t0 ON (((((rt0.c0)<=(rt0.c0))))<((((rt0.c1) NOTNULL)))) WHERE ((NOT (((((- (rt0.c3))))<((((vt0.c0) NOT BETWEEN (rt0.c4) AND (vt0.c0)))))))) GROUP BY rt0.c2, vt0.c1, rt0.c3, rt0.c0, rt0.c1, rt0.c4, vt0.c0 UNION SELECT ALL rt0.c2, vt0.c1, rt0.c3, rt0.c0, rt0.c1, rt0.c4, vt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON ((CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 ELSE x'' END)>=(((((rt0.c0)OR(vt0.c1)))AND(NULL)))) LEFT OUTER JOIN t0 ON (((((rt0.c0)<=(rt0.c0))))<((((rt0.c1) NOTNULL)))) WHERE (((((((- (rt0.c3))))<((((vt0.c0) NOT BETWEEN (rt0.c4) AND (vt0.c0)))))) ISNULL)) GROUP BY rt0.c2, vt0.c1, rt0.c3, rt0.c0, rt0.c1, rt0.c4, vt0.c0;
SELECT rt0.c2, vt0.c1, rt0.c3, rt0.c0, rt0.c1, rt0.c4, vt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON ((CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 ELSE x'' END)>=(((((rt0.c0)OR(vt0.c1)))AND(NULL)))) LEFT OUTER JOIN t0 ON (((((rt0.c0)<=(rt0.c0))))<((((rt0.c1) NOTNULL)))) GROUP BY rt0.c2, vt0.c1, rt0.c3, rt0.c0, rt0.c1, rt0.c4, vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG(MAX(COUNT(SUM(vt0.c0))) COLLATE BINARY) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (AVG(MAX(COUNT(SUM(vt0.c0))) COLLATE BINARY))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG(MAX(COUNT(SUM(vt0.c0))) COLLATE BINARY)) ISNULL);
SELECT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE (((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(0.05262296465410776)))AND(t0.c0)))OR(t0.c0 COLLATE BINARY))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(0.05262296465410776)))AND(t0.c0)))OR(t0.c0 COLLATE BINARY))))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(0.05262296465410776)))AND(t0.c0)))OR(t0.c0 COLLATE BINARY))) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((- (json_patch(t0.c0, t0.c0)))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((- (json_patch(t0.c0, t0.c0)))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((- (json_patch(t0.c0, t0.c0)))) ISNULL));
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (CAST(IFNULL(vt0.c0, vt0.c1) AS BLOB)) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (CAST(IFNULL(vt0.c0, vt0.c1) AS BLOB)))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (((CAST(IFNULL(vt0.c0, vt0.c1) AS BLOB)) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING MAX((+ (MIN(GROUP_CONCAT(COUNT(t0.c0)))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MAX((+ (MIN(GROUP_CONCAT(COUNT(t0.c0)))))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MAX((+ (MIN(GROUP_CONCAT(COUNT(t0.c0))))))) ISNULL);
SELECT * FROM vt0, rt0 LEFT OUTER JOIN t0 ON ((CAST(rt0.c0 AS REAL))OR(((rt0.c1)&(rt0.c0))));
SELECT * FROM vt0, rt0 NOT INDEXED LEFT OUTER JOIN t0 ON ((CAST(rt0.c0 AS REAL))OR(((rt0.c1)&(rt0.c0)))) WHERE (CASE WHEN ((vt0.c1)==(vt0.c0)) THEN CAST(rt0.c2 AS INTEGER) ELSE (rt0.c3 IN ()) END) UNION ALL SELECT * FROM vt0, rt0 LEFT OUTER JOIN t0 ON ((CAST(rt0.c0 AS REAL))OR(((rt0.c1)&(rt0.c0)))) WHERE ((NOT (CASE WHEN ((vt0.c1)=(vt0.c0)) THEN CAST(rt0.c2 AS INTEGER) ELSE (rt0.c3 IN ()) END))) UNION ALL SELECT * FROM vt0, rt0 LEFT OUTER JOIN t0 ON ((CAST(rt0.c0 AS REAL))OR(((rt0.c1)&(rt0.c0)))) WHERE (((CASE WHEN ((vt0.c1)==(vt0.c0)) THEN CAST(rt0.c2 AS INTEGER) ELSE (rt0.c3 IN ()) END) ISNULL));
SELECT * FROM vt0, rt0 LEFT OUTER JOIN t0 ON ((CAST(rt0.c0 AS REAL))OR(((rt0.c1)&(rt0.c0))));
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE (CAST(((((((((rt0.c4)AND(rt0.c4)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)) AS REAL)) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT (CAST(((((((((rt0.c4)AND(rt0.c4)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)) AS REAL)))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE (((CAST(((((((((rt0.c4)AND(rt0.c4)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)) AS REAL)) ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ((((t0.c0)||(1.625451579E9)) IN ())) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((((t0.c0)||(1.625451579E9)) IN ())))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((((((t0.c0)||(1.625451579E9)) IN ())) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt0.c0, vt0.c0, rt0.c4, t0.c0, rt0.c3, rt0.c2 FROM rt0, vt0 NOT INDEXED, t0 GROUP BY rt0.c0, vt0.c0, rt0.c4, t0.c0, rt0.c3, rt0.c2;
SELECT rt0.c0, vt0.c0, rt0.c4, t0.c0, rt0.c3, rt0.c2 FROM rt0, vt0, t0 GROUP BY rt0.c0, vt0.c0, rt0.c4, t0.c0, rt0.c3, rt0.c2 HAVING COUNT(*) UNION ALL SELECT rt0.c0, vt0.c0, rt0.c4, t0.c0, rt0.c3, rt0.c2 FROM rt0, vt0, t0 GROUP BY rt0.c0, vt0.c0, rt0.c4, t0.c0, rt0.c3, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c0, vt0.c0, rt0.c4, t0.c0, rt0.c3, rt0.c2 FROM rt0, vt0, t0 GROUP BY rt0.c0, vt0.c0, rt0.c4, t0.c0, rt0.c3, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0, vt0.c0, rt0.c4, t0.c0, rt0.c3, rt0.c2 FROM rt0, vt0 NOT INDEXED, t0 GROUP BY rt0.c0, vt0.c0, rt0.c4, t0.c0, rt0.c3, rt0.c2;
SELECT rt0.c0, vt0.c0, rt0.c4, t0.c0, rt0.c3, rt0.c2 FROM rt0, vt0, t0 GROUP BY rt0.c0, vt0.c0, rt0.c4, t0.c0, rt0.c3, rt0.c2 HAVING COUNT(*) UNION ALL SELECT rt0.c0, vt0.c0, rt0.c4, t0.c0, rt0.c3, rt0.c2 FROM rt0, vt0, t0 GROUP BY rt0.c0, vt0.c0, rt0.c4, t0.c0, rt0.c3, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c0, vt0.c0, rt0.c4, t0.c0, rt0.c3, rt0.c2 FROM rt0, vt0, t0 GROUP BY rt0.c0, vt0.c0, rt0.c4, t0.c0, rt0.c3, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0, vt0.c0, rt0.c4, t0.c0, rt0.c3, rt0.c2 FROM rt0, vt0 NOT INDEXED, t0 GROUP BY rt0.c0, vt0.c0, rt0.c4, t0.c0, rt0.c3, rt0.c2;
SELECT vt0.c0 FROM t0, vt0;
SELECT ALL vt0.c0 FROM t0, vt0 WHERE (TRIM(vt0.c1 COLLATE NOCASE, (vt0.c1 IN ()))) UNION ALL SELECT vt0.c0 FROM t0, vt0 WHERE ((NOT (TRIM(vt0.c1 COLLATE NOCASE, (vt0.c1 IN ()))))) UNION ALL SELECT ALL vt0.c0 FROM t0, vt0 WHERE (((TRIM(vt0.c1 COLLATE NOCASE, (vt0.c1 IN ()))) ISNULL));
SELECT vt0.c0 FROM t0, vt0;
SELECT DISTINCT * FROM t0 INNER JOIN vt0 ON (((~ (NULL))) BETWEEN (((vt0.c0)>>(rt0.c3))) AND ((((vt0.c0)) BETWEEN ((t0.c0)) AND ((rt0.c0))))) INNER JOIN rt0 ON vt0.c1 COLLATE BINARY;
SELECT DISTINCT * FROM t0 INNER JOIN vt0 ON (((~ (NULL))) BETWEEN (((vt0.c0)>>(rt0.c3))) AND ((((vt0.c0)) BETWEEN ((t0.c0)) AND ((rt0.c0))))) INNER JOIN rt0 ON vt0.c1 COLLATE BINARY WHERE (((((vt0.c1, rt0.c3, rt0.c0)) NOT BETWEEN ((vt0.c1, rt0.c4, t0.c0)) AND ((vt0.c1, rt0.c2, t0.c0))) IN ())) UNION SELECT DISTINCT * FROM t0 INNER JOIN vt0 ON (((~ (NULL))) BETWEEN (((vt0.c0)>>(rt0.c3))) AND ((((vt0.c0)) BETWEEN ((t0.c0)) AND ((rt0.c0))))) INNER JOIN rt0 ON vt0.c1 COLLATE BINARY WHERE ((NOT (((((vt0.c1, rt0.c3, rt0.c0)) NOT BETWEEN ((vt0.c1, rt0.c4, t0.c0)) AND ((vt0.c1, rt0.c2, t0.c0))) IN ())))) UNION SELECT DISTINCT * FROM t0 INNER JOIN vt0 ON (((~ (NULL))) BETWEEN (((vt0.c0)>>(rt0.c3))) AND ((((vt0.c0)) BETWEEN ((t0.c0)) AND ((rt0.c0))))) INNER JOIN rt0 ON vt0.c1 COLLATE BINARY WHERE (((((((vt0.c1, rt0.c3, rt0.c0)) NOT BETWEEN ((vt0.c1, rt0.c4, t0.c0)) AND ((vt0.c1, rt0.c2, t0.c0))) IN ())) ISNULL));
SELECT DISTINCT * FROM t0 INNER JOIN vt0 ON (((~ (NULL))) BETWEEN (((vt0.c0)>>(rt0.c3))) AND ((((vt0.c0)) BETWEEN ((t0.c0)) AND ((rt0.c0))))) INNER JOIN rt0 ON vt0.c1 COLLATE BINARY;
SELECT rt0.c0, vt0.c1 FROM t0, vt0, rt0 GROUP BY rt0.c0, vt0.c1;
SELECT rt0.c0, vt0.c1 FROM t0, vt0, rt0 WHERE (IFNULL(DISTINCT json_extract(rt0.c3, t0.c0), ((rt0.c0) BETWEEN (t0.c0) AND (rt0.c3)))) GROUP BY rt0.c0, vt0.c1 UNION SELECT rt0.c0, vt0.c1 FROM t0, vt0, rt0 WHERE ((NOT (IFNULL(DISTINCT json_extract(rt0.c3, t0.c0), ((rt0.c0) BETWEEN (t0.c0) AND (rt0.c3)))))) GROUP BY rt0.c0, vt0.c1 UNION SELECT ALL rt0.c0, vt0.c1 FROM t0, vt0, rt0 WHERE (((IFNULL(DISTINCT json_extract(rt0.c3, t0.c0), ((rt0.c0) BETWEEN (t0.c0) AND (rt0.c3)))) ISNULL)) GROUP BY rt0.c0, vt0.c1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((t0.c0, '0.7841910853497156', t0.c0)) BETWEEN ((((1.625451579E9)||(COUNT(COUNT(*)))), NULL, ((TOTAL(t0.c0))>>(t0.c0)))) AND ((GROUP_CONCAT(t0.c0), MAX(SUM(t0.c0)), TOTAL(t0.c0)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ((((t0.c0, '0.7841910853497156', t0.c0)) BETWEEN ((((1.625451579E9)||(COUNT(COUNT(*)))), NULL, ((TOTAL(t0.c0))>>(t0.c0)))) AND ((GROUP_CONCAT(t0.c0), MAX(SUM(t0.c0)), TOTAL(t0.c0)))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((((t0.c0, '0.7841910853497156', t0.c0)) BETWEEN ((((1.625451579E9)||(COUNT(COUNT(*)))), NULL, ((TOTAL(t0.c0))>>(t0.c0)))) AND ((GROUP_CONCAT(t0.c0), MAX(SUM(t0.c0)), TOTAL(t0.c0))))) ISNULL);
SELECT ALL vt0.c1, rt0.c1, vt0.c0, t0.c0 FROM t0, vt0, rt0;
SELECT vt0.c1, rt0.c1, vt0.c0, t0.c0 FROM t0, vt0, rt0 WHERE (CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c1)) THEN CASE WHEN rt0.c4 THEN vt0.c0 ELSE vt0.c1 END END) UNION ALL SELECT vt0.c1, rt0.c1, vt0.c0, t0.c0 FROM t0, vt0, rt0 WHERE ((NOT (CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c1)) THEN CASE WHEN rt0.c4 THEN vt0.c0 ELSE vt0.c1 END END))) UNION ALL SELECT ALL vt0.c1, rt0.c1, vt0.c0, t0.c0 FROM t0, vt0, rt0 WHERE (((CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c1)) THEN CASE WHEN rt0.c4 THEN vt0.c0 ELSE vt0.c1 END END) ISNULL));
SELECT ALL vt0.c1, rt0.c1, vt0.c0, t0.c0 FROM t0, vt0, rt0;
SELECT DISTINCT rt0.c0, t0.c0, rt0.c2 FROM rt0, t0, vt0;
SELECT DISTINCT rt0.c0, t0.c0, rt0.c2 FROM rt0, t0, vt0 WHERE (CASE ((rt0.c4)|(rt0.c3))  WHEN CASE rt0.c0  WHEN '' THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c4 WHEN vt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END THEN CASE vt0.c1  WHEN rt0.c4 THEN rt0.c4 END WHEN (NOT (vt0.c0)) THEN ((rt0.c4) IS FALSE) WHEN (((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) THEN (~ (rt0.c0)) ELSE ((((NULL)OR(vt0.c0)))AND(rt0.c0)) END) UNION SELECT DISTINCT rt0.c0, t0.c0, rt0.c2 FROM rt0, t0, vt0 WHERE ((NOT (CASE ((rt0.c4)|(rt0.c3))  WHEN CASE rt0.c0  WHEN '' THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c4 WHEN vt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END THEN CASE vt0.c1  WHEN rt0.c4 THEN rt0.c4 END WHEN (NOT (vt0.c0)) THEN ((rt0.c4) IS FALSE) WHEN (((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) THEN (~ (rt0.c0)) ELSE ((((NULL)OR(vt0.c0)))AND(rt0.c0)) END))) UNION SELECT DISTINCT rt0.c0, t0.c0, rt0.c2 FROM rt0, t0, vt0 WHERE (((CASE ((rt0.c4)|(rt0.c3))  WHEN CASE rt0.c0  WHEN '' THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c4 WHEN vt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END THEN CASE vt0.c1  WHEN rt0.c4 THEN rt0.c4 END WHEN (NOT (vt0.c0)) THEN ((rt0.c4) IS FALSE) WHEN (((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) THEN (~ (rt0.c0)) ELSE ((((NULL)OR(vt0.c0)))AND(rt0.c0)) END) ISNULL));
SELECT DISTINCT rt0.c0, t0.c0, rt0.c2 FROM rt0, t0, vt0;
SELECT vt0.c1, vt0.c0, rt0.c3, rt0.c4 FROM rt0, t0, vt0 GROUP BY vt0.c1, vt0.c0, rt0.c3, rt0.c4;
SELECT ALL vt0.c1, vt0.c0, rt0.c3, rt0.c4 FROM rt0, t0, vt0 WHERE ((~ (((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) GROUP BY vt0.c1, vt0.c0, rt0.c3, rt0.c4 UNION SELECT ALL vt0.c1, vt0.c0, rt0.c3, rt0.c4 FROM rt0, t0, vt0 WHERE ((NOT ((~ (((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))))))) GROUP BY vt0.c1, vt0.c0, rt0.c3, rt0.c4 UNION SELECT vt0.c1, vt0.c0, rt0.c3, rt0.c4 FROM rt0, t0, vt0 WHERE ((((~ (((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) ISNULL)) GROUP BY vt0.c1, vt0.c0, rt0.c3, rt0.c4;
SELECT vt0.c1, vt0.c0, rt0.c3, rt0.c4 FROM rt0, t0, vt0 GROUP BY vt0.c1, vt0.c0, rt0.c3, rt0.c4;
SELECT ALL vt0.c1, rt0.c2 FROM vt0 CROSS JOIN rt0 ON ((((vt0.c1)IS NOT(t0.c0)))|((+ (rt0.c4)))) RIGHT OUTER JOIN t0 ON CASE WHEN (+ (rt0.c2)) THEN ((vt0.c1) NOT NULL) WHEN rt0.c0 COLLATE RTRIM THEN ((rt0.c2)+(vt0.c0)) WHEN CAST(rt0.c0 AS BLOB) THEN rt0.c4 COLLATE BINARY ELSE ((rt0.c3) NOTNULL) END GROUP BY vt0.c1, rt0.c2;
SELECT TOTAL((((((rt0.c3))<=((rt0.c2))))|(rt0.c0))) FROM vt0, rt0, t0;
SELECT ALL rt0.c2, vt0.c1, rt0.c0, rt0.c3, rt0.c1, rt0.c4, vt0.c0 FROM rt0, vt0;
SELECT ALL rt0.c2, vt0.c1, rt0.c0, rt0.c3, rt0.c1, rt0.c4, vt0.c0 FROM rt0, vt0 WHERE (((((rt0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c1))) BETWEEN ((('-318789964') IS TRUE)) AND ((rt0.c3 IN (rt0.c0))))) UNION ALL SELECT ALL rt0.c2, vt0.c1, rt0.c0, rt0.c3, rt0.c1, rt0.c4, vt0.c0 FROM rt0, vt0 WHERE ((NOT (((((rt0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c1))) BETWEEN ((('-318789964') IS TRUE)) AND ((rt0.c3 IN (rt0.c0))))))) UNION ALL SELECT ALL rt0.c2, vt0.c1, rt0.c0, rt0.c3, rt0.c1, rt0.c4, vt0.c0 FROM rt0, vt0 WHERE (((((((rt0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c1))) BETWEEN ((('-318789964') IS TRUE)) AND ((rt0.c3 IN (rt0.c0))))) ISNULL));
SELECT ALL rt0.c2, vt0.c1, rt0.c0, rt0.c3, rt0.c1, rt0.c4, vt0.c0 FROM rt0, vt0;
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN t0 ON ((rt0.c0)==(CASE rt0.c2  WHEN t0.c0 THEN x'' END));
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN t0 ON ((rt0.c0)=(CASE rt0.c2  WHEN t0.c0 THEN x'' END)) WHERE ((((rt0.c2)) BETWEEN (((NOT (t0.c0)))) AND ((ABS(rt0.c2))))) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN t0 ON ((rt0.c0)=(CASE rt0.c2  WHEN t0.c0 THEN x'' END)) WHERE ((NOT ((((rt0.c2)) BETWEEN (((NOT (t0.c0)))) AND ((ABS(rt0.c2))))))) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN t0 ON ((rt0.c0)==(CASE rt0.c2  WHEN t0.c0 THEN x'' END)) WHERE ((((((rt0.c2)) BETWEEN (((NOT (t0.c0)))) AND ((ABS(rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN t0 ON ((rt0.c0)==(CASE rt0.c2  WHEN t0.c0 THEN x'' END));
SELECT vt0.c1, t0.c0 FROM vt0 INNER JOIN t0 ON vt0.c0 GROUP BY vt0.c1, t0.c0;
SELECT ALL vt0.c1, t0.c0 FROM vt0 INNER JOIN t0 ON vt0.c0 WHERE (((vt0.c0)>=(vt0.c0)) COLLATE RTRIM) GROUP BY vt0.c1, t0.c0 UNION SELECT ALL vt0.c1, t0.c0 FROM vt0 INNER JOIN t0 ON vt0.c0 WHERE ((NOT (((vt0.c0)>=(vt0.c0)) COLLATE RTRIM))) GROUP BY vt0.c1, t0.c0 UNION SELECT vt0.c1, t0.c0 FROM vt0 INNER JOIN t0 ON vt0.c0 WHERE (((((vt0.c0)>=(vt0.c0)) COLLATE RTRIM) ISNULL)) GROUP BY vt0.c1, t0.c0;
SELECT vt0.c1, t0.c0 FROM vt0 INNER JOIN t0 ON vt0.c0 GROUP BY vt0.c1, t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING SUM(TOTAL(t0.c0) COLLATE BINARY) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (SUM(TOTAL(t0.c0) COLLATE BINARY))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((SUM(TOTAL(t0.c0) COLLATE BINARY)) ISNULL);
SELECT rt0.c3, rt0.c4 FROM rt0;
SELECT ALL rt0.c3, rt0.c4 FROM rt0 WHERE (((((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c4 END)OR(0Xffffffffea438605)))OR(((rt0.c1)<=(rt0.c3))))) UNION ALL SELECT rt0.c3, rt0.c4 FROM rt0 WHERE ((NOT (((((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c4 END)OR(0Xffffffffea438605)))OR(((rt0.c1)<=(rt0.c3))))))) UNION ALL SELECT ALL rt0.c3, rt0.c4 FROM rt0 WHERE (((((((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c4 END)OR(0Xffffffffea438605)))OR(((rt0.c1)<=(rt0.c3))))) ISNULL));
SELECT rt0.c3, rt0.c4 FROM rt0;
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON (~ ((((t0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c4))))) RIGHT OUTER JOIN t0 ON ((((t0.c0)OR(vt0.c1)))OR(t0.c0)) COLLATE NOCASE;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, t0.c0, vt0.c1, rt0.c4 FROM t0, rt0, vt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, t0.c0, vt0.c1, rt0.c4;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, t0.c0, vt0.c1, rt0.c4 FROM t0, rt0, vt0 WHERE (COALESCE(DISTINCT ((rt0.c1) IS FALSE), ((0.31640465994676126)+(vt0.c1)), CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN rt0.c0 THEN rt0.c1 END, HEX(rt0.c1), rt0.c3, LOWER(DISTINCT rt0.c0))) GROUP BY rt0.c2, rt0.c0, rt0.c1, t0.c0, vt0.c1, rt0.c4 UNION SELECT rt0.c2, rt0.c0, rt0.c1, t0.c0, vt0.c1, rt0.c4 FROM t0, rt0, vt0 WHERE ((NOT (COALESCE(DISTINCT ((rt0.c1) IS FALSE), ((0.31640465994676126)+(vt0.c1)), CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN rt0.c0 THEN rt0.c1 END, HEX(rt0.c1), rt0.c3, LOWER(DISTINCT rt0.c0))))) GROUP BY rt0.c2, rt0.c0, rt0.c1, t0.c0, vt0.c1, rt0.c4 UNION SELECT rt0.c2, rt0.c0, rt0.c1, t0.c0, vt0.c1, rt0.c4 FROM t0, rt0, vt0 WHERE (((COALESCE(DISTINCT ((rt0.c1) IS FALSE), ((0.31640465994676126)+(vt0.c1)), CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN rt0.c0 THEN rt0.c1 END, HEX(rt0.c1), rt0.c3, LOWER(DISTINCT rt0.c0))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1, t0.c0, vt0.c1, rt0.c4;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, t0.c0, vt0.c1, rt0.c4 FROM t0, rt0, vt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, t0.c0, vt0.c1, rt0.c4;
SELECT rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2, rt0.c0 HAVING COUNT(COUNT(*)) UNION ALL SELECT ALL rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2, rt0.c0 HAVING (NOT (COUNT(COUNT(*)))) UNION ALL SELECT ALL rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2, rt0.c0 HAVING ((COUNT(COUNT(*))) ISNULL);
SELECT SUM(((rt0.c3) BETWEEN (rt0.c0 COLLATE NOCASE) AND (0.4331953238487256))) FROM rt0;
SELECT rt0.c2, rt0.c0, vt0.c0, vt0.c1, rt0.c1, rt0.c3 FROM vt0, rt0;
SELECT ALL rt0.c2, rt0.c0, vt0.c0, vt0.c1, rt0.c1, rt0.c3 FROM vt0, rt0 WHERE (((((rt0.c0 COLLATE NOCASE)OR(x'')))AND((((vt0.c0))>((rt0.c0)))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, vt0.c0, vt0.c1, rt0.c1, rt0.c3 FROM vt0, rt0 WHERE ((NOT (((((rt0.c0 COLLATE NOCASE)OR(x'')))AND((((vt0.c0))>((rt0.c0)))))))) UNION ALL SELECT rt0.c2, rt0.c0, vt0.c0, vt0.c1, rt0.c1, rt0.c3 FROM vt0, rt0 WHERE (((((((rt0.c0 COLLATE NOCASE)OR(x'')))AND((((vt0.c0))>((rt0.c0)))))) ISNULL));
SELECT rt0.c2, rt0.c0, vt0.c0, vt0.c1, rt0.c1, rt0.c3 FROM vt0, rt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((CAST(t0.c0 AS BLOB)) NOT NULL)) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((CAST(t0.c0 AS BLOB)) NOT NULL)))) UNION SELECT DISTINCT * FROM t0 WHERE (((((CAST(t0.c0 AS BLOB)) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL vt0.c1, t0.c0 FROM vt0, t0 GROUP BY vt0.c1, t0.c0;
SELECT vt0.c1, t0.c0 FROM vt0, t0 WHERE ((((((vt0.c0) BETWEEN (-836127191) AND (vt0.c0))))<=(('1027105473')))) GROUP BY vt0.c1, t0.c0 UNION SELECT ALL vt0.c1, t0.c0 FROM vt0, t0 WHERE ((NOT ((((((vt0.c0) BETWEEN (-836127191) AND (vt0.c0))))<=(('1027105473')))))) GROUP BY vt0.c1, t0.c0 UNION SELECT vt0.c1, t0.c0 FROM vt0, t0 WHERE ((((((((vt0.c0) BETWEEN (-836127191) AND (vt0.c0))))<=(('1027105473')))) ISNULL)) GROUP BY vt0.c1, t0.c0;
SELECT ALL vt0.c1, t0.c0 FROM vt0, t0 GROUP BY vt0.c1, t0.c0;
SELECT t0.c0, vt0.c1, vt0.c0 FROM t0 CROSS JOIN vt0 ON (+ (t0.c0 COLLATE BINARY)) GROUP BY t0.c0, vt0.c1, vt0.c0;
SELECT ALL t0.c0, vt0.c1, vt0.c0 FROM t0 CROSS JOIN vt0 ON (+ (t0.c0 COLLATE BINARY)) GROUP BY t0.c0, vt0.c1, vt0.c0 HAVING x'' UNION ALL SELECT t0.c0, vt0.c1, vt0.c0 FROM t0 CROSS JOIN vt0 ON (+ (t0.c0 COLLATE BINARY)) GROUP BY t0.c0, vt0.c1, vt0.c0 HAVING (NOT (x'')) UNION ALL SELECT t0.c0, vt0.c1, vt0.c0 FROM t0 CROSS JOIN vt0 ON (+ (t0.c0 COLLATE BINARY)) GROUP BY t0.c0, vt0.c1, vt0.c0 HAVING ((x'') ISNULL);
SELECT t0.c0, vt0.c1, vt0.c0 FROM t0 CROSS JOIN vt0 ON (+ (t0.c0 COLLATE BINARY)) GROUP BY t0.c0, vt0.c1, vt0.c0;
SELECT ALL t0.c0, vt0.c1, vt0.c0 FROM t0 CROSS JOIN vt0 ON (+ (t0.c0 COLLATE BINARY)) GROUP BY t0.c0, vt0.c1, vt0.c0 HAVING x'' UNION ALL SELECT t0.c0, vt0.c1, vt0.c0 FROM t0 CROSS JOIN vt0 ON (+ (t0.c0 COLLATE BINARY)) GROUP BY t0.c0, vt0.c1, vt0.c0 HAVING (NOT (x'')) UNION ALL SELECT t0.c0, vt0.c1, vt0.c0 FROM t0 CROSS JOIN vt0 ON (+ (t0.c0 COLLATE BINARY)) GROUP BY t0.c0, vt0.c1, vt0.c0 HAVING ((x'') ISNULL);
SELECT t0.c0, vt0.c1, vt0.c0 FROM t0 CROSS JOIN vt0 ON (+ (t0.c0 COLLATE BINARY)) GROUP BY t0.c0, vt0.c1, vt0.c0;
SELECT vt0.c1, rt0.c0, rt0.c4, vt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0 RIGHT OUTER JOIN vt0 ON ((((rt0.c1)OR(((vt0.c0)OR(vt0.c0)))))AND(((rt0.c1)||('835164015')))) CROSS JOIN t0 ON ((((rt0.c1)IS(rt0.c1)))>=(((vt0.c0) IS TRUE)));
SELECT vt0.c1, rt0.c0, rt0.c4, vt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0 RIGHT OUTER JOIN vt0 ON ((((rt0.c1)OR(((vt0.c0)OR(vt0.c0)))))AND(((rt0.c1)||('835164015')))) CROSS JOIN t0 ON ((((rt0.c1)IS(rt0.c1)))>=(((vt0.c0) IS TRUE))) WHERE ((x'82fe' IN ())) UNION ALL SELECT ALL vt0.c1, rt0.c0, rt0.c4, vt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0 RIGHT OUTER JOIN vt0 ON ((((rt0.c1)OR(((vt0.c0)OR(vt0.c0)))))AND(((rt0.c1)||('835164015')))) CROSS JOIN t0 ON ((((rt0.c1)IS(rt0.c1)))>=(((vt0.c0) IS TRUE))) WHERE ((NOT ((x'82fe' IN ())))) UNION ALL SELECT vt0.c1, rt0.c0, rt0.c4, vt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0 RIGHT OUTER JOIN vt0 ON ((((rt0.c1)OR(((vt0.c0)OR(vt0.c0)))))AND(((rt0.c1)||('835164015')))) CROSS JOIN t0 ON ((((rt0.c1)IS(rt0.c1)))>=(((vt0.c0) IS TRUE))) WHERE ((((x'82fe' IN ())) ISNULL));
SELECT vt0.c1, rt0.c0, rt0.c4, vt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0 RIGHT OUTER JOIN vt0 ON ((((rt0.c1)OR(((vt0.c0)OR(vt0.c0)))))AND(((rt0.c1)||('835164015')))) CROSS JOIN t0 ON ((((rt0.c1)IS(rt0.c1)))>=(((vt0.c0) IS TRUE)));
SELECT DISTINCT rt0.c1, vt0.c1, rt0.c3, vt0.c0, rt0.c0, rt0.c4 FROM vt0, rt0;
SELECT DISTINCT rt0.c1, vt0.c1, rt0.c3, vt0.c0, rt0.c0, rt0.c4 FROM vt0, rt0 NOT INDEXED WHERE (((CAST(vt0.c0 AS INTEGER))%(((vt0.c1) NOT BETWEEN (rt0.c2) AND (x''))))) UNION SELECT DISTINCT rt0.c1, vt0.c1, rt0.c3, vt0.c0, rt0.c0, rt0.c4 FROM vt0, rt0 WHERE ((NOT (((CAST(vt0.c0 AS INTEGER))%(((vt0.c1) NOT BETWEEN (rt0.c2) AND (x''))))))) UNION SELECT DISTINCT rt0.c1, vt0.c1, rt0.c3, vt0.c0, rt0.c0, rt0.c4 FROM vt0, rt0 WHERE (((((CAST(vt0.c0 AS INTEGER))%(((vt0.c1) NOT BETWEEN (rt0.c2) AND (x''))))) ISNULL));
SELECT DISTINCT rt0.c1, vt0.c1, rt0.c3, vt0.c0, rt0.c0, rt0.c4 FROM vt0, rt0;
SELECT ALL vt0.c1, t0.c0 FROM vt0, t0 NOT INDEXED GROUP BY vt0.c1, t0.c0;
SELECT vt0.c1, t0.c0 FROM vt0, t0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c1 END IN ())) GROUP BY vt0.c1, t0.c0 UNION SELECT ALL vt0.c1, t0.c0 FROM vt0, t0 WHERE ((NOT ((CASE WHEN vt0.c0 THEN vt0.c1 END IN ())))) GROUP BY vt0.c1, t0.c0 UNION SELECT ALL vt0.c1, t0.c0 FROM vt0, t0 WHERE ((((CASE WHEN vt0.c0 THEN vt0.c1 END IN ())) ISNULL)) GROUP BY vt0.c1, t0.c0;
SELECT ALL vt0.c1, t0.c0 FROM vt0, t0 NOT INDEXED GROUP BY vt0.c1, t0.c0;
SELECT ALL rt0.c4 FROM vt0, t0 INNER JOIN rt0 ON ((vt0.c0) BETWEEN (t0.c0) AND (rt0.c4)) COLLATE RTRIM GROUP BY rt0.c4;
SELECT rt0.c4 FROM vt0, t0 INNER JOIN rt0 ON ((vt0.c0) BETWEEN (t0.c0) AND (rt0.c4)) COLLATE RTRIM GROUP BY rt0.c4 HAVING ((COUNT(*))>((rt0.c1 IN (rt0.c4, COUNT(*))))) UNION ALL SELECT rt0.c4 FROM vt0, t0 INNER JOIN rt0 ON ((vt0.c0) BETWEEN (t0.c0) AND (rt0.c4)) COLLATE RTRIM GROUP BY rt0.c4 HAVING (NOT (((COUNT(*))>((rt0.c1 IN (rt0.c4, COUNT(*))))))) UNION ALL SELECT ALL rt0.c4 FROM vt0, t0 INNER JOIN rt0 ON ((vt0.c0) BETWEEN (t0.c0) AND (rt0.c4)) COLLATE RTRIM GROUP BY rt0.c4 HAVING ((((COUNT(*))>((rt0.c1 IN (rt0.c4, COUNT(*)))))) ISNULL);
SELECT ALL rt0.c4 FROM vt0, t0 INNER JOIN rt0 ON ((vt0.c0) BETWEEN (t0.c0) AND (rt0.c4)) COLLATE RTRIM GROUP BY rt0.c4;
SELECT rt0.c4 FROM vt0, t0 INNER JOIN rt0 ON ((vt0.c0) BETWEEN (t0.c0) AND (rt0.c4)) COLLATE RTRIM GROUP BY rt0.c4 HAVING ((COUNT(*))>((rt0.c1 IN (rt0.c4, COUNT(*))))) UNION ALL SELECT rt0.c4 FROM vt0, t0 INNER JOIN rt0 ON ((vt0.c0) BETWEEN (t0.c0) AND (rt0.c4)) COLLATE RTRIM GROUP BY rt0.c4 HAVING (NOT (((COUNT(*))>((rt0.c1 IN (rt0.c4, COUNT(*))))))) UNION ALL SELECT ALL rt0.c4 FROM vt0, t0 INNER JOIN rt0 ON ((vt0.c0) BETWEEN (t0.c0) AND (rt0.c4)) COLLATE RTRIM GROUP BY rt0.c4 HAVING ((((COUNT(*))>((rt0.c1 IN (rt0.c4, COUNT(*)))))) ISNULL);
SELECT ALL rt0.c4 FROM vt0, t0 INNER JOIN rt0 ON ((vt0.c0) BETWEEN (t0.c0) AND (rt0.c4)) COLLATE RTRIM GROUP BY rt0.c4;
SELECT vt0.c1, rt0.c0, rt0.c3, t0.c0, rt0.c2 FROM rt0, t0, vt0;
SELECT ALL vt0.c1, rt0.c0, rt0.c3, t0.c0, rt0.c2 FROM rt0, t0, vt0 WHERE ((((((((rt0.c4, vt0.c1, vt0.c0)) NOT BETWEEN ((NULL, rt0.c0, rt0.c4)) AND ((vt0.c0, vt0.c1, '\rયfi'))))OR(TRIM(vt0.c0))))AND(((t0.c0) BETWEEN (t0.c0) AND (rt0.c3))))) UNION ALL SELECT vt0.c1, rt0.c0, rt0.c3, t0.c0, rt0.c2 FROM rt0, t0, vt0 WHERE ((NOT ((((((((rt0.c4, vt0.c1, vt0.c0)) NOT BETWEEN ((NULL, rt0.c0, rt0.c4)) AND ((vt0.c0, vt0.c1, '\rયfi'))))OR(TRIM(vt0.c0))))AND(((t0.c0) BETWEEN (t0.c0) AND (rt0.c3))))))) UNION ALL SELECT vt0.c1, rt0.c0, rt0.c3, t0.c0, rt0.c2 FROM rt0, t0, vt0 WHERE ((((((((((rt0.c4, vt0.c1, vt0.c0)) NOT BETWEEN ((NULL, rt0.c0, rt0.c4)) AND ((vt0.c0, vt0.c1, '\rયfi'))))OR(TRIM(vt0.c0))))AND(((t0.c0) BETWEEN (t0.c0) AND (rt0.c3))))) ISNULL));
SELECT vt0.c1, rt0.c0, rt0.c3, t0.c0, rt0.c2 FROM rt0, t0, vt0;
SELECT DISTINCT rt0.c4, rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt0;
SELECT DISTINCT rt0.c4, rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt0 WHERE ((((rt0.c1)) BETWEEN ((((((((((vt0.c0)OR(rt0.c4)))AND(rt0.c2)))AND(vt0.c0)))OR(vt0.c1)))) AND ((((rt0.c2)!=(vt0.c0)))))) UNION SELECT DISTINCT rt0.c4, rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt0 WHERE ((NOT ((((rt0.c1)) BETWEEN ((((((((((vt0.c0)OR(rt0.c4)))AND(rt0.c2)))AND(vt0.c0)))OR(vt0.c1)))) AND ((((rt0.c2)!=(vt0.c0)))))))) UNION SELECT DISTINCT rt0.c4, rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt0 WHERE ((((((rt0.c1)) BETWEEN ((((((((((vt0.c0)OR(rt0.c4)))AND(rt0.c2)))AND(vt0.c0)))OR(vt0.c1)))) AND ((((rt0.c2)!=(vt0.c0)))))) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt0;
SELECT ALL rt0.c1, rt0.c3, rt0.c2 FROM vt0 FULL OUTER JOIN t0 ON ((CAST(0.9611002378073608 AS INTEGER)) NOT BETWEEN (']k') AND (((((t0.c0)AND(rt0.c4)))OR(rt0.c4)))) INNER JOIN rt0 ON rt0.c2 GROUP BY rt0.c1, rt0.c3, rt0.c2;
SELECT vt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON (((+ (vt0.c1))) NOT BETWEEN (CAST(rt0.c4 AS REAL)) AND (((rt0.c3)>(vt0.c1)))) GROUP BY vt0.c0;
SELECT vt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON (((+ (vt0.c1))) NOT BETWEEN (CAST(rt0.c4 AS REAL)) AND (((rt0.c3)>(vt0.c1)))) GROUP BY vt0.c0 HAVING ((x'') BETWEEN ((((rt0.c3))!=((COUNT(rt0.c1))))) AND (COUNT(vt0.c1) COLLATE RTRIM)) UNION ALL SELECT ALL vt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON (((+ (vt0.c1))) NOT BETWEEN (CAST(rt0.c4 AS REAL)) AND (((rt0.c3)>(vt0.c1)))) GROUP BY vt0.c0 HAVING (NOT (((x'') BETWEEN ((((rt0.c3))!=((COUNT(rt0.c1))))) AND (COUNT(vt0.c1) COLLATE RTRIM)))) UNION ALL SELECT ALL vt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON (((+ (vt0.c1))) NOT BETWEEN (CAST(rt0.c4 AS REAL)) AND (((rt0.c3)>(vt0.c1)))) GROUP BY vt0.c0 HAVING ((((x'') BETWEEN ((((rt0.c3))<>((COUNT(rt0.c1))))) AND (COUNT(vt0.c1) COLLATE RTRIM))) ISNULL);
SELECT vt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON (((+ (vt0.c1))) NOT BETWEEN (CAST(rt0.c4 AS REAL)) AND (((rt0.c3)>(vt0.c1)))) GROUP BY vt0.c0;
SELECT vt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON (((+ (vt0.c1))) NOT BETWEEN (CAST(rt0.c4 AS REAL)) AND (((rt0.c3)>(vt0.c1)))) GROUP BY vt0.c0 HAVING ((x'') BETWEEN ((((rt0.c3))!=((COUNT(rt0.c1))))) AND (COUNT(vt0.c1) COLLATE RTRIM)) UNION ALL SELECT ALL vt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON (((+ (vt0.c1))) NOT BETWEEN (CAST(rt0.c4 AS REAL)) AND (((rt0.c3)>(vt0.c1)))) GROUP BY vt0.c0 HAVING (NOT (((x'') BETWEEN ((((rt0.c3))!=((COUNT(rt0.c1))))) AND (COUNT(vt0.c1) COLLATE RTRIM)))) UNION ALL SELECT ALL vt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON (((+ (vt0.c1))) NOT BETWEEN (CAST(rt0.c4 AS REAL)) AND (((rt0.c3)>(vt0.c1)))) GROUP BY vt0.c0 HAVING ((((x'') BETWEEN ((((rt0.c3))<>((COUNT(rt0.c1))))) AND (COUNT(vt0.c1) COLLATE RTRIM))) ISNULL);
SELECT vt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON (((+ (vt0.c1))) NOT BETWEEN (CAST(rt0.c4 AS REAL)) AND (((rt0.c3)>(vt0.c1)))) GROUP BY vt0.c0;
SELECT rt0.c3, rt0.c2, vt0.c0, vt0.c1, rt0.c1, rt0.c0 FROM vt0 CROSS JOIN rt0 ON ((rt0.c3) NOT NULL);
SELECT ALL rt0.c3, rt0.c2, vt0.c0, vt0.c1, rt0.c1, rt0.c0 FROM vt0 CROSS JOIN rt0 ON ((rt0.c3) NOT NULL) WHERE (LIKELY(1993293799)) UNION ALL SELECT ALL rt0.c3, rt0.c2, vt0.c0, vt0.c1, rt0.c1, rt0.c0 FROM vt0 CROSS JOIN rt0 ON ((rt0.c3) NOT NULL) WHERE ((NOT (LIKELY(1993293799)))) UNION ALL SELECT rt0.c3, rt0.c2, vt0.c0, vt0.c1, rt0.c1, rt0.c0 FROM vt0 CROSS JOIN rt0 ON ((rt0.c3) NOT NULL) WHERE (((LIKELY(1993293799)) ISNULL));
SELECT rt0.c3, rt0.c2, vt0.c0, vt0.c1, rt0.c1, rt0.c0 FROM vt0 CROSS JOIN rt0 ON ((rt0.c3) NOT NULL);
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE (t0.c0) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT ALL vt0.c0, rt0.c4, rt0.c0, rt0.c1, rt0.c3, vt0.c1 FROM vt0 NOT INDEXED, rt0, t0 GROUP BY vt0.c0, rt0.c4, rt0.c0, rt0.c1, rt0.c3, vt0.c1;
SELECT vt0.c0, rt0.c4, rt0.c0, rt0.c1, rt0.c3, vt0.c1 FROM vt0, rt0, t0 WHERE ((((((rt0.c2)AND(vt0.c0)))AND(rt0.c1)) IN (CAST(rt0.c3 AS REAL), ((vt0.c0) IS TRUE)))) GROUP BY vt0.c0, rt0.c4, rt0.c0, rt0.c1, rt0.c3, vt0.c1 UNION SELECT ALL vt0.c0, rt0.c4, rt0.c0, rt0.c1, rt0.c3, vt0.c1 FROM vt0, rt0, t0 WHERE ((NOT ((((((rt0.c2)AND(vt0.c0)))AND(rt0.c1)) IN (CAST(rt0.c3 AS REAL), ((vt0.c0) IS TRUE)))))) GROUP BY vt0.c0, rt0.c4, rt0.c0, rt0.c1, rt0.c3, vt0.c1 UNION SELECT vt0.c0, rt0.c4, rt0.c0, rt0.c1, rt0.c3, vt0.c1 FROM vt0, rt0, t0 NOT INDEXED WHERE ((((((((rt0.c2)AND(vt0.c0)))AND(rt0.c1)) IN (CAST(rt0.c3 AS REAL), ((vt0.c0) IS TRUE)))) ISNULL)) GROUP BY vt0.c0, rt0.c4, rt0.c0, rt0.c1, rt0.c3, vt0.c1;
SELECT ALL vt0.c0, rt0.c4, rt0.c0, rt0.c1, rt0.c3, vt0.c1 FROM vt0 NOT INDEXED, rt0, t0 GROUP BY vt0.c0, rt0.c4, rt0.c0, rt0.c1, rt0.c3, vt0.c1;
SELECT rt0.c3, vt0.c1, rt0.c2, vt0.c0, rt0.c4, rt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c0) NOTNULL) COLLATE BINARY GROUP BY rt0.c3, vt0.c1, rt0.c2, vt0.c0, rt0.c4, rt0.c0, rt0.c1;
SELECT ALL rt0.c3, vt0.c1, rt0.c2, vt0.c0, rt0.c4, rt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c0) NOTNULL) COLLATE BINARY GROUP BY rt0.c3, vt0.c1, rt0.c2, vt0.c0, rt0.c4, rt0.c0, rt0.c1 HAVING (((((+ (AVG(rt0.c2))))AND(AVG(vt0.c0))))OR(MIN(rt0.c3))) UNION ALL SELECT rt0.c3, vt0.c1, rt0.c2, vt0.c0, rt0.c4, rt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c0) NOTNULL) COLLATE BINARY GROUP BY rt0.c3, vt0.c1, rt0.c2, vt0.c0, rt0.c4, rt0.c0, rt0.c1 HAVING (NOT ((((((+ (AVG(rt0.c2))))AND(AVG(vt0.c0))))OR(MIN(rt0.c3))))) UNION ALL SELECT ALL rt0.c3, vt0.c1, rt0.c2, vt0.c0, rt0.c4, rt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c0) NOTNULL) COLLATE BINARY GROUP BY rt0.c3, vt0.c1, rt0.c2, vt0.c0, rt0.c4, rt0.c0, rt0.c1 HAVING (((((((+ (AVG(rt0.c2))))AND(AVG(vt0.c0))))OR(MIN(rt0.c3)))) ISNULL);
SELECT rt0.c3, vt0.c1, rt0.c2, vt0.c0, rt0.c4, rt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c0) NOTNULL) COLLATE BINARY GROUP BY rt0.c3, vt0.c1, rt0.c2, vt0.c0, rt0.c4, rt0.c0, rt0.c1;
SELECT ALL rt0.c3, vt0.c1, rt0.c2, vt0.c0, rt0.c4, rt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c0) NOTNULL) COLLATE BINARY GROUP BY rt0.c3, vt0.c1, rt0.c2, vt0.c0, rt0.c4, rt0.c0, rt0.c1 HAVING (((((+ (AVG(rt0.c2))))AND(AVG(vt0.c0))))OR(MIN(rt0.c3))) UNION ALL SELECT rt0.c3, vt0.c1, rt0.c2, vt0.c0, rt0.c4, rt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c0) NOTNULL) COLLATE BINARY GROUP BY rt0.c3, vt0.c1, rt0.c2, vt0.c0, rt0.c4, rt0.c0, rt0.c1 HAVING (NOT ((((((+ (AVG(rt0.c2))))AND(AVG(vt0.c0))))OR(MIN(rt0.c3))))) UNION ALL SELECT ALL rt0.c3, vt0.c1, rt0.c2, vt0.c0, rt0.c4, rt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c0) NOTNULL) COLLATE BINARY GROUP BY rt0.c3, vt0.c1, rt0.c2, vt0.c0, rt0.c4, rt0.c0, rt0.c1 HAVING (((((((+ (AVG(rt0.c2))))AND(AVG(vt0.c0))))OR(MIN(rt0.c3)))) ISNULL);
SELECT rt0.c3, vt0.c1, rt0.c2, vt0.c0, rt0.c4, rt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c0) NOTNULL) COLLATE BINARY GROUP BY rt0.c3, vt0.c1, rt0.c2, vt0.c0, rt0.c4, rt0.c0, rt0.c1;
SELECT rt0.c3, rt0.c0, rt0.c2, rt0.c4 FROM rt0;
SELECT ALL rt0.c3, rt0.c0, rt0.c2, rt0.c4 FROM rt0 WHERE (((0.5426638926048188)>=(CAST(rt0.c0 AS TEXT)))) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c2, rt0.c4 FROM rt0 WHERE ((NOT (((0.5426638926048188)>=(CAST(rt0.c0 AS TEXT)))))) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c2, rt0.c4 FROM rt0 WHERE (((((0.5426638926048188)>=(CAST(rt0.c0 AS TEXT)))) ISNULL));
SELECT rt0.c3, rt0.c0, rt0.c2, rt0.c4 FROM rt0;
SELECT DISTINCT * FROM vt0, rt0, t0;
SELECT DISTINCT * FROM vt0, rt0, t0 WHERE (((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c4))) BETWEEN (UNLIKELY(t0.c0)) AND (rt0.c1))) UNION SELECT DISTINCT * FROM vt0, rt0, t0 WHERE ((NOT (((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c4))) BETWEEN (UNLIKELY(t0.c0)) AND (rt0.c1))))) UNION SELECT DISTINCT * FROM vt0, rt0, t0 WHERE (((((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c4))) BETWEEN (UNLIKELY(t0.c0)) AND (rt0.c1))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0, t0;
SELECT rt0.c3, vt0.c0 FROM rt0, vt0, t0 GROUP BY rt0.c3, vt0.c0;
SELECT rt0.c3, vt0.c0 FROM rt0, vt0, t0 WHERE (LIKELIHOOD(DISTINCT CAST(t0.c0 AS NUMERIC), 0.8335770792906572)) GROUP BY rt0.c3, vt0.c0 UNION SELECT ALL rt0.c3, vt0.c0 FROM rt0, vt0, t0 WHERE ((NOT (LIKELIHOOD(DISTINCT CAST(t0.c0 AS NUMERIC), 0.8335770792906572)))) GROUP BY rt0.c3, vt0.c0 UNION SELECT rt0.c3, vt0.c0 FROM rt0, vt0, t0 WHERE (((LIKELIHOOD(DISTINCT CAST(t0.c0 AS NUMERIC), 0.8335770792906572)) ISNULL)) GROUP BY rt0.c3, vt0.c0;
SELECT rt0.c3, vt0.c0 FROM rt0, vt0, t0 GROUP BY rt0.c3, vt0.c0;
SELECT vt0.c0, rt0.c0, rt0.c3, rt0.c1, t0.c0, rt0.c2 FROM rt0, t0, vt0 GROUP BY vt0.c0, rt0.c0, rt0.c3, rt0.c1, t0.c0, rt0.c2;
SELECT vt0.c0, rt0.c0, rt0.c3, rt0.c1, t0.c0, rt0.c2 FROM rt0, t0, vt0 GROUP BY vt0.c0, rt0.c0, rt0.c3, rt0.c1, t0.c0, rt0.c2 HAVING ((SUM(GROUP_CONCAT(MIN(t0.c0)))) NOT BETWEEN (vt0.c0) AND (((rt0.c3) ISNULL))) UNION ALL SELECT vt0.c0, rt0.c0, rt0.c3, rt0.c1, t0.c0, rt0.c2 FROM rt0, t0, vt0 GROUP BY vt0.c0, rt0.c0, rt0.c3, rt0.c1, t0.c0, rt0.c2 HAVING (NOT (((SUM(GROUP_CONCAT(MIN(t0.c0)))) NOT BETWEEN (vt0.c0) AND (((rt0.c3) ISNULL))))) UNION ALL SELECT vt0.c0, rt0.c0, rt0.c3, rt0.c1, t0.c0, rt0.c2 FROM rt0, t0, vt0 GROUP BY vt0.c0, rt0.c0, rt0.c3, rt0.c1, t0.c0, rt0.c2 HAVING ((((SUM(GROUP_CONCAT(MIN(t0.c0)))) NOT BETWEEN (vt0.c0) AND (((rt0.c3) ISNULL)))) ISNULL);
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE ((t0.c0 IN ())) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT ((t0.c0 IN ())))) UNION ALL SELECT * FROM t0 WHERE ((((t0.c0 IN ())) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE (((((vt0.c1))<>((vt0.c1))) IN ())) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((((vt0.c1))!=((vt0.c1))) IN ())))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE (((((((vt0.c1))!=((vt0.c1))) IN ())) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT ALL t0.c0, rt0.c1, rt0.c4, rt0.c0, rt0.c2 FROM t0, rt0 GROUP BY t0.c0, rt0.c1, rt0.c4, rt0.c0, rt0.c2;
SELECT ALL t0.c0, rt0.c1, rt0.c4, rt0.c0, rt0.c2 FROM t0, rt0 WHERE (TYPEOF((rt0.c3 IN ()))) GROUP BY t0.c0, rt0.c1, rt0.c4, rt0.c0, rt0.c2 UNION SELECT ALL t0.c0, rt0.c1, rt0.c4, rt0.c0, rt0.c2 FROM t0, rt0 WHERE ((NOT (TYPEOF((rt0.c3 IN ()))))) GROUP BY t0.c0, rt0.c1, rt0.c4, rt0.c0, rt0.c2 UNION SELECT ALL t0.c0, rt0.c1, rt0.c4, rt0.c0, rt0.c2 FROM t0, rt0 WHERE (((TYPEOF((rt0.c3 IN ()))) ISNULL)) GROUP BY t0.c0, rt0.c1, rt0.c4, rt0.c0, rt0.c2;
SELECT ALL t0.c0, rt0.c1, rt0.c4, rt0.c0, rt0.c2 FROM t0, rt0 GROUP BY t0.c0, rt0.c1, rt0.c4, rt0.c0, rt0.c2;
SELECT rt0.c0, t0.c0, rt0.c3, rt0.c4, vt0.c1, rt0.c1, rt0.c2, vt0.c0 FROM rt0, vt0, t0 GROUP BY rt0.c0, t0.c0, rt0.c3, rt0.c4, vt0.c1, rt0.c1, rt0.c2, vt0.c0;
SELECT rt0.c0, t0.c0, rt0.c3, rt0.c4, vt0.c1, rt0.c1, rt0.c2, vt0.c0 FROM rt0, vt0, t0 GROUP BY rt0.c0, t0.c0, rt0.c3, rt0.c4, vt0.c1, rt0.c1, rt0.c2, vt0.c0 HAVING vt0.c0 UNION ALL SELECT ALL rt0.c0, t0.c0, rt0.c3, rt0.c4, vt0.c1, rt0.c1, rt0.c2, vt0.c0 FROM rt0, vt0, t0 GROUP BY rt0.c0, t0.c0, rt0.c3, rt0.c4, vt0.c1, rt0.c1, rt0.c2, vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT rt0.c0, t0.c0, rt0.c3, rt0.c4, vt0.c1, rt0.c1, rt0.c2, vt0.c0 FROM rt0, vt0, t0 GROUP BY rt0.c0, t0.c0, rt0.c3, rt0.c4, vt0.c1, rt0.c1, rt0.c2, vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT rt0.c0, t0.c0, rt0.c3, rt0.c4, vt0.c1, rt0.c1, rt0.c2, vt0.c0 FROM rt0, vt0, t0 GROUP BY rt0.c0, t0.c0, rt0.c3, rt0.c4, vt0.c1, rt0.c1, rt0.c2, vt0.c0;
SELECT rt0.c0, t0.c0, rt0.c3, rt0.c4, vt0.c1, rt0.c1, rt0.c2, vt0.c0 FROM rt0, vt0, t0 GROUP BY rt0.c0, t0.c0, rt0.c3, rt0.c4, vt0.c1, rt0.c1, rt0.c2, vt0.c0 HAVING vt0.c0 UNION ALL SELECT ALL rt0.c0, t0.c0, rt0.c3, rt0.c4, vt0.c1, rt0.c1, rt0.c2, vt0.c0 FROM rt0, vt0, t0 GROUP BY rt0.c0, t0.c0, rt0.c3, rt0.c4, vt0.c1, rt0.c1, rt0.c2, vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT rt0.c0, t0.c0, rt0.c3, rt0.c4, vt0.c1, rt0.c1, rt0.c2, vt0.c0 FROM rt0, vt0, t0 GROUP BY rt0.c0, t0.c0, rt0.c3, rt0.c4, vt0.c1, rt0.c1, rt0.c2, vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT rt0.c0, t0.c0, rt0.c3, rt0.c4, vt0.c1, rt0.c1, rt0.c2, vt0.c0 FROM rt0, vt0, t0 GROUP BY rt0.c0, t0.c0, rt0.c3, rt0.c4, vt0.c1, rt0.c1, rt0.c2, vt0.c0;
SELECT ALL rt0.c3, t0.c0, rt0.c0, vt0.c0, rt0.c4, vt0.c1, rt0.c1 FROM rt0, t0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0)IS NOT(vt0.c0)))||(' '));
SELECT ALL rt0.c3, t0.c0, rt0.c0, vt0.c0, rt0.c4, vt0.c1, rt0.c1 FROM rt0, t0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0)IS NOT(vt0.c0)))||(' ')) WHERE (CASE WHEN CASE rt0.c4  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN vt0.c1 THEN rt0.c1 ELSE rt0.c0 END THEN ((((((((rt0.c0)AND(rt0.c0)))OR(vt0.c0)))OR(vt0.c1)))OR(rt0.c4)) END) UNION ALL SELECT rt0.c3, t0.c0, rt0.c0, vt0.c0, rt0.c4, vt0.c1, rt0.c1 FROM rt0, t0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0)IS NOT(vt0.c0)))||(' ')) WHERE ((NOT (CASE WHEN CASE rt0.c4  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN vt0.c1 THEN rt0.c1 ELSE rt0.c0 END THEN ((((((((rt0.c0)AND(rt0.c0)))OR(vt0.c0)))OR(vt0.c1)))OR(rt0.c4)) END))) UNION ALL SELECT rt0.c3, t0.c0, rt0.c0, vt0.c0, rt0.c4, vt0.c1, rt0.c1 FROM rt0, t0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0)IS NOT(vt0.c0)))||(' ')) WHERE (((CASE WHEN CASE rt0.c4  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN vt0.c1 THEN rt0.c1 ELSE rt0.c0 END THEN ((((((((rt0.c0)AND(rt0.c0)))OR(vt0.c0)))OR(vt0.c1)))OR(rt0.c4)) END) ISNULL));
SELECT ALL rt0.c3, t0.c0, rt0.c0, vt0.c0, rt0.c4, vt0.c1, rt0.c1 FROM rt0, t0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0)IS NOT(vt0.c0)))||(' '));
SELECT DISTINCT rt0.c3, rt0.c1, rt0.c4, vt0.c1 FROM rt0, vt0, t0;
SELECT DISTINCT rt0.c3, rt0.c1, rt0.c4, vt0.c1 FROM rt0, vt0, t0 WHERE ((((CAST(vt0.c0 AS INTEGER)))<((CASE WHEN rt0.c0 THEN vt0.c1 END)))) UNION SELECT DISTINCT rt0.c3, rt0.c1, rt0.c4, vt0.c1 FROM rt0, vt0, t0 WHERE ((NOT ((((CAST(vt0.c0 AS INTEGER)))<((CASE WHEN rt0.c0 THEN vt0.c1 END)))))) UNION SELECT DISTINCT rt0.c3, rt0.c1, rt0.c4, vt0.c1 FROM rt0, vt0, t0 WHERE ((((((CAST(vt0.c0 AS INTEGER)))<((CASE WHEN rt0.c0 THEN vt0.c1 END)))) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c1, rt0.c4, vt0.c1 FROM rt0, vt0, t0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ('1e500') GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT ('1e500'))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((('1e500') ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0 HAVING SUM(((vt0.c0)%(AVG(GROUP_CONCAT(GROUP_CONCAT(t0.c0)))))) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0 HAVING (NOT (SUM(((vt0.c0)%(AVG(GROUP_CONCAT(GROUP_CONCAT(t0.c0)))))))) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0 HAVING ((SUM(((vt0.c0)%(AVG(GROUP_CONCAT(GROUP_CONCAT(t0.c0))))))) ISNULL);
SELECT MAX((((~ (rt0.c3))) NOT BETWEEN ((~ (rt0.c2))) AND (rt0.c3 COLLATE BINARY))) FROM rt0, vt0;
SELECT rt0.c0, rt0.c1, rt0.c4, rt0.c3 FROM t0, rt0, vt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c4, rt0.c3 FROM t0, rt0, vt0 WHERE (0x1f9abf8a) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c4, rt0.c3 FROM t0, rt0, vt0 WHERE ((NOT (0X1f9abf8a))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c4, rt0.c3 FROM t0, rt0, vt0 NOT INDEXED WHERE (((0x1f9abf8a) ISNULL));
SELECT rt0.c0, rt0.c1, rt0.c4, rt0.c3 FROM t0, rt0, vt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)>('327027375'))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)>('327027375'))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)>('327027375'))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0 WHERE (LOWER(RTRIM(rt0.c4))) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM rt0 WHERE ((NOT (LOWER(RTRIM(rt0.c4))))) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM rt0 WHERE (((LOWER(RTRIM(rt0.c4))) ISNULL)) GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT vt0.c0, vt0.c1, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, vt0.c1, t0.c0;
SELECT vt0.c0, vt0.c1, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, vt0.c1, t0.c0 HAVING AVG(x'' COLLATE RTRIM) UNION ALL SELECT ALL vt0.c0, vt0.c1, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, vt0.c1, t0.c0 HAVING (NOT (AVG(x'' COLLATE RTRIM))) UNION ALL SELECT ALL vt0.c0, vt0.c1, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, vt0.c1, t0.c0 HAVING ((AVG(x'' COLLATE RTRIM)) ISNULL);
SELECT vt0.c0, vt0.c1, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, vt0.c1, t0.c0;
SELECT vt0.c0, vt0.c1, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, vt0.c1, t0.c0 HAVING AVG(x'' COLLATE RTRIM) UNION ALL SELECT ALL vt0.c0, vt0.c1, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, vt0.c1, t0.c0 HAVING (NOT (AVG(x'' COLLATE RTRIM))) UNION ALL SELECT ALL vt0.c0, vt0.c1, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, vt0.c1, t0.c0 HAVING ((AVG(x'' COLLATE RTRIM)) ISNULL);
SELECT vt0.c0, vt0.c1, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, vt0.c1, t0.c0;
SELECT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE (((CAST(t0.c0 AS INTEGER)) NOT BETWEEN (((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0))) AND (CAST(t0.c0 AS INTEGER)))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT (((CAST(t0.c0 AS INTEGER)) NOT BETWEEN (((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0))) AND (CAST(t0.c0 AS INTEGER)))))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE (((((CAST(t0.c0 AS INTEGER)) NOT BETWEEN (((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0))) AND (CAST(t0.c0 AS INTEGER)))) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT rt0.c2, rt0.c3, vt0.c0, rt0.c1, t0.c0, vt0.c1, rt0.c0, rt0.c4 FROM vt0, rt0, t0;
SELECT DISTINCT rt0.c2, rt0.c3, vt0.c0, rt0.c1, t0.c0, vt0.c1, rt0.c0, rt0.c4 FROM vt0, rt0, t0 WHERE (((CASE rt0.c1  WHEN rt0.c2 THEN t0.c0 END)&('327027375'))) UNION SELECT DISTINCT rt0.c2, rt0.c3, vt0.c0, rt0.c1, t0.c0, vt0.c1, rt0.c0, rt0.c4 FROM vt0, rt0, t0 WHERE ((NOT (((CASE rt0.c1  WHEN rt0.c2 THEN t0.c0 END)&('327027375'))))) UNION SELECT DISTINCT rt0.c2, rt0.c3, vt0.c0, rt0.c1, t0.c0, vt0.c1, rt0.c0, rt0.c4 FROM vt0, rt0, t0 WHERE (((((CASE rt0.c1  WHEN rt0.c2 THEN t0.c0 END)&('327027375'))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c3, vt0.c0, rt0.c1, t0.c0, vt0.c1, rt0.c0, rt0.c4 FROM vt0, rt0, t0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (((vt0.c0) IS TRUE)) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0) IS TRUE)))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (((((vt0.c0) IS TRUE)) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c3;
SELECT rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c3 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c3 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c3 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c3;
SELECT rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c3 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c3 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c3 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c3;
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((((vt0.c1)*(vt0.c0)) IN ())) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c1)*(vt0.c0)) IN ())))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c1)*(vt0.c0)) IN ())) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c1, t0.c0, rt0.c3, rt0.c1 FROM rt0 RIGHT OUTER JOIN vt0 ON ((((rt0.c0)>=(rt0.c4))) BETWEEN ((((rt0.c3)) BETWEEN ((rt0.c4)) AND (('?SD~[')))) AND (MAX(vt0.c1, rt0.c2))) INNER JOIN t0 ON CASE ((rt0.c4)IS NOT(t0.c0))  WHEN rt0.c3 COLLATE NOCASE THEN (((rt0.c1, rt0.c1, rt0.c2))<>((vt0.c0, x'', vt0.c0))) ELSE HEX(DISTINCT t0.c0) END;
SELECT DISTINCT vt0.c1, t0.c0, rt0.c3, rt0.c1 FROM rt0 RIGHT OUTER JOIN vt0 ON ((((rt0.c0)>=(rt0.c4))) BETWEEN ((((rt0.c3)) BETWEEN ((rt0.c4)) AND (('?SD~[')))) AND (MAX(vt0.c1, rt0.c2))) INNER JOIN t0 ON CASE ((rt0.c4)IS NOT(t0.c0))  WHEN rt0.c3 COLLATE NOCASE THEN (((rt0.c1, rt0.c1, rt0.c2))<>((vt0.c0, x'', vt0.c0))) ELSE HEX(DISTINCT t0.c0) END WHERE (CAST(((0.6588838771228983)IS NOT(rt0.c1)) AS REAL)) UNION SELECT DISTINCT vt0.c1, t0.c0, rt0.c3, rt0.c1 FROM rt0 RIGHT OUTER JOIN vt0 ON ((((rt0.c0)>=(rt0.c4))) BETWEEN ((((rt0.c3)) BETWEEN ((rt0.c4)) AND (('?SD~[')))) AND (MAX(vt0.c1, rt0.c2))) INNER JOIN t0 ON CASE ((rt0.c4)IS NOT(t0.c0))  WHEN rt0.c3 COLLATE NOCASE THEN (((rt0.c1, rt0.c1, rt0.c2))!=((vt0.c0, x'', vt0.c0))) ELSE HEX(DISTINCT t0.c0) END WHERE ((NOT (CAST(((0.6588838771228983)IS NOT(rt0.c1)) AS REAL)))) UNION SELECT DISTINCT vt0.c1, t0.c0, rt0.c3, rt0.c1 FROM rt0 RIGHT OUTER JOIN vt0 ON ((((rt0.c0)>=(rt0.c4))) BETWEEN ((((rt0.c3)) BETWEEN ((rt0.c4)) AND (('?SD~[')))) AND (MAX(vt0.c1, rt0.c2))) INNER JOIN t0 ON CASE ((rt0.c4)IS NOT(t0.c0))  WHEN rt0.c3 COLLATE NOCASE THEN (((rt0.c1, rt0.c1, rt0.c2))<>((vt0.c0, x'', vt0.c0))) ELSE HEX(DISTINCT t0.c0) END WHERE (((CAST(((0.6588838771228983)IS NOT(rt0.c1)) AS REAL)) ISNULL));
SELECT DISTINCT vt0.c1, t0.c0, rt0.c3, rt0.c1 FROM rt0 RIGHT OUTER JOIN vt0 ON ((((rt0.c0)>=(rt0.c4))) BETWEEN ((((rt0.c3)) BETWEEN ((rt0.c4)) AND (('?SD~[')))) AND (MAX(vt0.c1, rt0.c2))) INNER JOIN t0 ON CASE ((rt0.c4)IS NOT(t0.c0))  WHEN rt0.c3 COLLATE NOCASE THEN (((rt0.c1, rt0.c1, rt0.c2))<>((vt0.c0, x'', vt0.c0))) ELSE HEX(DISTINCT t0.c0) END;
SELECT rt0.c4 FROM rt0, vt0 GROUP BY rt0.c4;
SELECT ALL rt0.c4 FROM rt0, vt0 WHERE ((rt0.c2 COLLATE NOCASE IN ())) GROUP BY rt0.c4 UNION SELECT ALL rt0.c4 FROM rt0, vt0 WHERE ((NOT ((rt0.c2 COLLATE NOCASE IN ())))) GROUP BY rt0.c4 UNION SELECT ALL rt0.c4 FROM rt0, vt0 WHERE ((((rt0.c2 COLLATE NOCASE IN ())) ISNULL)) GROUP BY rt0.c4;
SELECT rt0.c4 FROM rt0, vt0 GROUP BY rt0.c4;
SELECT ALL rt0.c2, rt0.c0, rt0.c3, t0.c0, rt0.c4, vt0.c1, vt0.c0, rt0.c1 FROM t0, rt0 CROSS JOIN vt0 ON CASE WHEN CAST(rt0.c2 AS BLOB) THEN 0.26506529098459697 WHEN ((rt0.c3)AND(rt0.c0)) THEN CASE '358319305'  WHEN rt0.c4 THEN vt0.c0 ELSE t0.c0 END WHEN (((NULL, rt0.c2, '1027105473'))<((rt0.c2, '', rt0.c2))) THEN ((vt0.c0)>=(rt0.c1)) END GROUP BY rt0.c2, rt0.c0, rt0.c3, t0.c0, rt0.c4, vt0.c1, vt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c3, t0.c0, rt0.c4, vt0.c1, vt0.c0, rt0.c1 FROM t0, rt0 CROSS JOIN vt0 ON CASE WHEN CAST(rt0.c2 AS BLOB) THEN 0.26506529098459697 WHEN ((rt0.c3)AND(rt0.c0)) THEN CASE '358319305'  WHEN rt0.c4 THEN vt0.c0 ELSE t0.c0 END WHEN (((NULL, rt0.c2, '1027105473'))<((rt0.c2, '', rt0.c2))) THEN ((vt0.c0)>=(rt0.c1)) END GROUP BY rt0.c2, rt0.c0, rt0.c3, t0.c0, rt0.c4, vt0.c1, vt0.c0, rt0.c1 HAVING AVG((((((((('-836127191')OR(GROUP_CONCAT(COUNT(*)))))OR(COUNT(*))))OR(TOTAL(TOTAL(MIN('-1550043217'))))))OR(rt0.c2))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c3, t0.c0, rt0.c4, vt0.c1, vt0.c0, rt0.c1 FROM t0, rt0 CROSS JOIN vt0 ON CASE WHEN CAST(rt0.c2 AS BLOB) THEN 0.26506529098459697 WHEN ((rt0.c3)AND(rt0.c0)) THEN CASE '358319305'  WHEN rt0.c4 THEN vt0.c0 ELSE t0.c0 END WHEN (((NULL, rt0.c2, '1027105473'))<((rt0.c2, '', rt0.c2))) THEN ((vt0.c0)>=(rt0.c1)) END GROUP BY rt0.c2, rt0.c0, rt0.c3, t0.c0, rt0.c4, vt0.c1, vt0.c0, rt0.c1 HAVING (NOT (AVG((((((((('-836127191')OR(GROUP_CONCAT(COUNT(*)))))OR(COUNT(*))))OR(TOTAL(TOTAL(MIN('-1550043217'))))))OR(rt0.c2))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c3, t0.c0, rt0.c4, vt0.c1, vt0.c0, rt0.c1 FROM t0, rt0 CROSS JOIN vt0 ON CASE WHEN CAST(rt0.c2 AS BLOB) THEN 0.26506529098459697 WHEN ((rt0.c3)AND(rt0.c0)) THEN CASE '358319305'  WHEN rt0.c4 THEN vt0.c0 ELSE t0.c0 END WHEN (((NULL, rt0.c2, '1027105473'))<((rt0.c2, '', rt0.c2))) THEN ((vt0.c0)>=(rt0.c1)) END GROUP BY rt0.c2, rt0.c0, rt0.c3, t0.c0, rt0.c4, vt0.c1, vt0.c0, rt0.c1 HAVING ((AVG((((((((('-836127191')OR(GROUP_CONCAT(COUNT(*)))))OR(COUNT(*))))OR(TOTAL(TOTAL(MIN('-1550043217'))))))OR(rt0.c2)))) ISNULL);
SELECT vt0.c1 FROM vt0;
SELECT ALL vt0.c1 FROM vt0 WHERE ((+ (((vt0.c1)/(vt0.c1))))) UNION ALL SELECT vt0.c1 FROM vt0 WHERE ((NOT ((+ (((vt0.c1)/(vt0.c1))))))) UNION ALL SELECT ALL vt0.c1 FROM vt0 WHERE ((((+ (((vt0.c1)/(vt0.c1))))) ISNULL));
SELECT vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE (((((((((((0.6350469779938474) NOT BETWEEN (vt0.c0) AND (vt0.c1)))OR(((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))))AND((vt0.c1 IN (vt0.c1)))))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))))AND(((vt0.c0)-(vt0.c1))))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((((((((((0.6350469779938474) NOT BETWEEN (vt0.c0) AND (vt0.c1)))OR(((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))))AND((vt0.c1 IN (vt0.c1)))))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))))AND(((vt0.c0)-(vt0.c1))))))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE (((((((((((((0.6350469779938474) NOT BETWEEN (vt0.c0) AND (vt0.c1)))OR(((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))))AND((vt0.c1 IN (vt0.c1)))))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))))AND(((vt0.c0)-(vt0.c1))))) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT vt0.c0, vt0.c1 FROM vt0, t0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0, t0 WHERE (CAST(vt0.c1 AS REAL)) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 NOT INDEXED, t0 WHERE ((NOT (CAST(vt0.c1 AS REAL)))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0, t0 WHERE (((CAST(vt0.c1 AS REAL)) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0, t0 GROUP BY vt0.c0, vt0.c1;
SELECT rt0.c2, rt0.c4, vt0.c1, rt0.c3, t0.c0 FROM rt0 LEFT OUTER JOIN t0 ON vt0.c0 FULL OUTER JOIN vt0 ON (rt0.c0 IN ()) COLLATE BINARY GROUP BY rt0.c2, rt0.c4, vt0.c1, rt0.c3, t0.c0;
SELECT rt0.c2, rt0.c3, rt0.c1 FROM rt0, vt0;
SELECT rt0.c2, rt0.c3, rt0.c1 FROM rt0, vt0 WHERE (LIKELIHOOD(CAST(vt0.c1 AS REAL), 0.13221417099579658)) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c1 FROM rt0, vt0 WHERE ((NOT (LIKELIHOOD(CAST(vt0.c1 AS REAL), 0.13221417099579658)))) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c1 FROM rt0, vt0 WHERE (((LIKELIHOOD(CAST(vt0.c1 AS REAL), 0.13221417099579658)) ISNULL));
SELECT rt0.c2, rt0.c3, rt0.c1 FROM rt0, vt0;
SELECT DISTINCT rt0.c0, vt0.c1, t0.c0, vt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM t0 RIGHT OUTER JOIN rt0 ON (((t0.c0 IN (rt0.c1)))IS NOT((vt0.c1 IN (rt0.c2)))) FULL OUTER JOIN vt0 ON (((rt0.c0, rt0.c4, vt0.c0)) BETWEEN ((((t0.c0) BETWEEN (rt0.c3) AND (t0.c0)), ((rt0.c4)+(rt0.c3)), (rt0.c3 IN ()))) AND (((- (rt0.c3)), (vt0.c0 IN ()), rt0.c4)));
SELECT ALL vt0.c0, rt0.c0, rt0.c4 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c0, rt0.c4;
SELECT vt0.c0, rt0.c0, rt0.c4 FROM rt0, vt0 WHERE (CASE WHEN ((((rt0.c3)AND(rt0.c0)))AND(rt0.c2)) THEN ((((rt0.c1)AND(rt0.c4)))OR(vt0.c0)) END) GROUP BY vt0.c0, rt0.c0, rt0.c4 UNION SELECT vt0.c0, rt0.c0, rt0.c4 FROM rt0, vt0 WHERE ((NOT (CASE WHEN ((((rt0.c3)AND(rt0.c0)))AND(rt0.c2)) THEN ((((rt0.c1)AND(rt0.c4)))OR(vt0.c0)) END))) GROUP BY vt0.c0, rt0.c0, rt0.c4 UNION SELECT ALL vt0.c0, rt0.c0, rt0.c4 FROM rt0, vt0 WHERE (((CASE WHEN ((((rt0.c3)AND(rt0.c0)))AND(rt0.c2)) THEN ((((rt0.c1)AND(rt0.c4)))OR(vt0.c0)) END) ISNULL)) GROUP BY vt0.c0, rt0.c0, rt0.c4;
SELECT ALL vt0.c0, rt0.c0, rt0.c4 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c0, rt0.c4;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING MIN(((COUNT(TOTAL(vt0.c1)))OR(vt0.c1))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (MIN(((COUNT(TOTAL(vt0.c1)))OR(vt0.c1))))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((MIN(((COUNT(TOTAL(vt0.c1)))OR(vt0.c1)))) ISNULL);
SELECT rt0.c0, rt0.c3, vt0.c0, rt0.c1 FROM rt0, vt0, t0;
SELECT ALL rt0.c0, rt0.c3, vt0.c0, rt0.c1 FROM rt0, vt0, t0 WHERE ((rt0.c2 IN ()) COLLATE BINARY COLLATE NOCASE) UNION ALL SELECT rt0.c0, rt0.c3, vt0.c0, rt0.c1 FROM rt0, vt0, t0 WHERE ((NOT ((rt0.c2 IN ()) COLLATE BINARY COLLATE NOCASE))) UNION ALL SELECT rt0.c0, rt0.c3, vt0.c0, rt0.c1 FROM rt0, vt0, t0 WHERE ((((rt0.c2 IN ()) COLLATE BINARY COLLATE NOCASE) ISNULL));
SELECT rt0.c0, rt0.c3, vt0.c0, rt0.c1 FROM rt0, vt0, t0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CAST(((vt0.c1)/(vt0.c0)) AS NUMERIC)) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (CAST(((vt0.c1)/(vt0.c0)) AS NUMERIC)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CAST(((vt0.c1)/(vt0.c0)) AS NUMERIC)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT rt0.c1, vt0.c0, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c0;
SELECT rt0.c1, vt0.c0, rt0.c0 FROM rt0, vt0 WHERE (rt0.c3) GROUP BY rt0.c1, vt0.c0, rt0.c0 UNION SELECT rt0.c1, vt0.c0, rt0.c0 FROM rt0, vt0 WHERE ((NOT (rt0.c3))) GROUP BY rt0.c1, vt0.c0, rt0.c0 UNION SELECT rt0.c1, vt0.c0, rt0.c0 FROM rt0, vt0 WHERE (((rt0.c3) ISNULL)) GROUP BY rt0.c1, vt0.c0, rt0.c0;
SELECT rt0.c1, vt0.c0, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c0;
SELECT ALL rt0.c1, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2;
SELECT ALL rt0.c1, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2 HAVING ((AVG(rt0.c3))/(SUM(rt0.c0))) UNION ALL SELECT rt0.c1, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2 HAVING (NOT (((AVG(rt0.c3))/(SUM(rt0.c0))))) UNION ALL SELECT ALL rt0.c1, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2 HAVING ((((AVG(rt0.c3))/(SUM(rt0.c0)))) ISNULL);
SELECT ALL rt0.c1, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2;
SELECT ALL rt0.c1, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2 HAVING ((AVG(rt0.c3))/(SUM(rt0.c0))) UNION ALL SELECT rt0.c1, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2 HAVING (NOT (((AVG(rt0.c3))/(SUM(rt0.c0))))) UNION ALL SELECT ALL rt0.c1, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2 HAVING ((((AVG(rt0.c3))/(SUM(rt0.c0)))) ISNULL);
SELECT ALL rt0.c1, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2;
SELECT ALL * FROM vt0 INNER JOIN rt0 ON CAST(rt0.c0 AS INTEGER) COLLATE BINARY COLLATE RTRIM RIGHT OUTER JOIN t0 ON ((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))OR(t0.c0)))OR(t0.c0)))IS NOT(((vt0.c0) IS FALSE)));
SELECT ALL * FROM vt0 INNER JOIN rt0 ON CAST(rt0.c0 AS INTEGER) COLLATE BINARY COLLATE RTRIM RIGHT OUTER JOIN t0 ON ((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))OR(t0.c0)))OR(t0.c0)))IS NOT(((vt0.c0) IS FALSE))) WHERE ((((rt0.c0)IS NOT(rt0.c0)) IN (((rt0.c1) ISNULL)))) UNION ALL SELECT ALL * FROM vt0 INNER JOIN rt0 ON CAST(rt0.c0 AS INTEGER) COLLATE BINARY COLLATE RTRIM RIGHT OUTER JOIN t0 ON ((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))OR(t0.c0)))OR(t0.c0)))IS NOT(((vt0.c0) IS FALSE))) WHERE ((NOT ((((rt0.c0)IS NOT(rt0.c0)) IN (((rt0.c1) ISNULL)))))) UNION ALL SELECT * FROM vt0 INNER JOIN rt0 ON CAST(rt0.c0 AS INTEGER) COLLATE BINARY COLLATE RTRIM RIGHT OUTER JOIN t0 ON ((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))OR(t0.c0)))OR(t0.c0)))IS NOT(((vt0.c0) IS FALSE))) WHERE ((((((rt0.c0)IS NOT(rt0.c0)) IN (((rt0.c1) ISNULL)))) ISNULL));
SELECT ALL * FROM vt0 INNER JOIN rt0 ON CAST(rt0.c0 AS INTEGER) COLLATE BINARY COLLATE RTRIM RIGHT OUTER JOIN t0 ON ((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))OR(t0.c0)))OR(t0.c0)))IS NOT(((vt0.c0) IS FALSE)));
SELECT DISTINCT rt0.c1, rt0.c3, vt0.c1, t0.c0, vt0.c0, rt0.c4, rt0.c2, rt0.c0 FROM vt0, t0, rt0;
SELECT DISTINCT rt0.c1, rt0.c3, vt0.c1, t0.c0, vt0.c0, rt0.c4, rt0.c2, rt0.c0 FROM vt0, t0, rt0 WHERE (rt0.c0) UNION SELECT DISTINCT rt0.c1, rt0.c3, vt0.c1, t0.c0, vt0.c0, rt0.c4, rt0.c2, rt0.c0 FROM vt0, t0, rt0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT rt0.c1, rt0.c3, vt0.c1, t0.c0, vt0.c0, rt0.c4, rt0.c2, rt0.c0 FROM vt0, t0, rt0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c3, vt0.c1, t0.c0, vt0.c0, rt0.c4, rt0.c2, rt0.c0 FROM vt0, t0, rt0;
SELECT rt0.c0, rt0.c1, vt0.c1, rt0.c3, rt0.c2, rt0.c4 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1, vt0.c1, rt0.c3, rt0.c2, rt0.c4;
SELECT ALL rt0.c0, rt0.c1, vt0.c1, rt0.c3, rt0.c2, rt0.c4 FROM rt0, vt0 WHERE (((((NULL) BETWEEN (rt0.c2) AND (rt0.c1)))OR((((rt0.c1, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c4)) AND ((vt0.c0, 'B|', rt0.c2)))))) GROUP BY rt0.c0, rt0.c1, vt0.c1, rt0.c3, rt0.c2, rt0.c4 UNION SELECT ALL rt0.c0, rt0.c1, vt0.c1, rt0.c3, rt0.c2, rt0.c4 FROM rt0, vt0 WHERE ((NOT (((((NULL) BETWEEN (rt0.c2) AND (rt0.c1)))OR((((rt0.c1, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c4)) AND ((vt0.c0, 'B|', rt0.c2)))))))) GROUP BY rt0.c0, rt0.c1, vt0.c1, rt0.c3, rt0.c2, rt0.c4 UNION SELECT rt0.c0, rt0.c1, vt0.c1, rt0.c3, rt0.c2, rt0.c4 FROM rt0, vt0 WHERE (((((((NULL) BETWEEN (rt0.c2) AND (rt0.c1)))OR((((rt0.c1, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c4)) AND ((vt0.c0, 'B|', rt0.c2)))))) ISNULL)) GROUP BY rt0.c0, rt0.c1, vt0.c1, rt0.c3, rt0.c2, rt0.c4;
SELECT rt0.c0, rt0.c1, vt0.c1, rt0.c3, rt0.c2, rt0.c4 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1, vt0.c1, rt0.c3, rt0.c2, rt0.c4;
SELECT vt0.c0 FROM rt0, vt0, t0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM rt0, vt0, t0 GROUP BY vt0.c0 HAVING ((x'') NOT NULL) UNION ALL SELECT vt0.c0 FROM rt0, vt0, t0 GROUP BY vt0.c0 HAVING (NOT (((x'') NOT NULL))) UNION ALL SELECT vt0.c0 FROM rt0, vt0, t0 GROUP BY vt0.c0 HAVING ((((x'') NOT NULL)) ISNULL);
SELECT vt0.c0 FROM rt0, vt0, t0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM rt0, vt0, t0 GROUP BY vt0.c0 HAVING ((x'') NOT NULL) UNION ALL SELECT vt0.c0 FROM rt0, vt0, t0 GROUP BY vt0.c0 HAVING (NOT (((x'') NOT NULL))) UNION ALL SELECT vt0.c0 FROM rt0, vt0, t0 GROUP BY vt0.c0 HAVING ((((x'') NOT NULL)) ISNULL);
SELECT vt0.c0 FROM rt0, vt0, t0 GROUP BY vt0.c0;
SELECT * FROM rt0, vt0, t0;
SELECT ALL * FROM rt0, vt0, t0 WHERE ((((rt0.c2 COLLATE RTRIM))>=(((rt0.c1 IN ()))))) UNION ALL SELECT * FROM rt0, vt0, t0 WHERE ((NOT ((((rt0.c2 COLLATE RTRIM))>=(((rt0.c1 IN ()))))))) UNION ALL SELECT * FROM rt0, vt0, t0 WHERE ((((((rt0.c2 COLLATE RTRIM))>=(((rt0.c1 IN ()))))) ISNULL));
SELECT * FROM rt0, vt0, t0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CHANGES()) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CHANGES()))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CHANGES()) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c3, rt0.c1, rt0.c4, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c4, rt0.c0, rt0.c2;
SELECT ALL rt0.c3, rt0.c1, rt0.c4, rt0.c0, rt0.c2 FROM rt0 WHERE (TRIM((((rt0.c3)) BETWEEN ((rt0.c4)) AND ((rt0.c1))), ((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c2)))) GROUP BY rt0.c3, rt0.c1, rt0.c4, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c3, rt0.c1, rt0.c4, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (TRIM((((rt0.c3)) BETWEEN ((rt0.c4)) AND ((rt0.c1))), ((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c2)))))) GROUP BY rt0.c3, rt0.c1, rt0.c4, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c3, rt0.c1, rt0.c4, rt0.c0, rt0.c2 FROM rt0 WHERE (((TRIM((((rt0.c3)) BETWEEN ((rt0.c4)) AND ((rt0.c1))), ((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c2)))) ISNULL)) GROUP BY rt0.c3, rt0.c1, rt0.c4, rt0.c0, rt0.c2;
SELECT rt0.c3, rt0.c1, rt0.c4, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c4, rt0.c0, rt0.c2;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING TOTAL(((COUNT(MIN(COUNT(AVG(MAX(t0.c0)))))) IS TRUE)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (TOTAL(((COUNT(MIN(COUNT(AVG(MAX(t0.c0)))))) IS TRUE)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((TOTAL(((COUNT(MIN(COUNT(AVG(MAX(t0.c0)))))) IS TRUE))) ISNULL);
SELECT ALL * FROM rt0, t0 INDEXED BY i81, vt0;
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN rt0 ON (((t0.c0 IN ()))/(vt0.c1 COLLATE RTRIM)) FULL OUTER JOIN t0 ON ((vt0.c0 COLLATE RTRIM) BETWEEN (((rt0.c3) IS FALSE)) AND (CAST(vt0.c0 AS REAL)));
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN rt0 ON (((t0.c0 IN ()))/(vt0.c1 COLLATE RTRIM)) FULL OUTER JOIN t0 ON ((vt0.c0 COLLATE RTRIM) BETWEEN (((rt0.c3) IS FALSE)) AND (CAST(vt0.c0 AS REAL))) WHERE (LIKELY(DISTINCT rt0.c0) COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt0 FULL OUTER JOIN rt0 ON (((t0.c0 IN ()))/(vt0.c1 COLLATE RTRIM)) FULL OUTER JOIN t0 ON ((vt0.c0 COLLATE RTRIM) BETWEEN (((rt0.c3) IS FALSE)) AND (CAST(vt0.c0 AS REAL))) WHERE ((NOT (LIKELY(DISTINCT rt0.c0) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt0 FULL OUTER JOIN rt0 ON (((t0.c0 IN ()))/(vt0.c1 COLLATE RTRIM)) FULL OUTER JOIN t0 ON ((vt0.c0 COLLATE RTRIM) BETWEEN (((rt0.c3) IS FALSE)) AND (CAST(vt0.c0 AS REAL))) WHERE (((LIKELY(DISTINCT rt0.c0) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN rt0 ON (((t0.c0 IN ()))/(vt0.c1 COLLATE RTRIM)) FULL OUTER JOIN t0 ON ((vt0.c0 COLLATE RTRIM) BETWEEN (((rt0.c3) IS FALSE)) AND (CAST(vt0.c0 AS REAL)));
SELECT ALL t0.c0, rt0.c2, rt0.c3, rt0.c0 FROM rt0 FULL OUTER JOIN t0 ON (NOT (NULL)) GROUP BY t0.c0, rt0.c2, rt0.c3, rt0.c0;
SELECT t0.c0, rt0.c2, rt0.c3, rt0.c0 FROM rt0 FULL OUTER JOIN t0 ON (NOT (NULL)) WHERE (0.998164777861967) GROUP BY t0.c0, rt0.c2, rt0.c3, rt0.c0 UNION SELECT t0.c0, rt0.c2, rt0.c3, rt0.c0 FROM rt0 FULL OUTER JOIN t0 ON (NOT (NULL)) WHERE ((NOT (0.998164777861967))) GROUP BY t0.c0, rt0.c2, rt0.c3, rt0.c0 UNION SELECT t0.c0, rt0.c2, rt0.c3, rt0.c0 FROM rt0 FULL OUTER JOIN t0 ON (NOT (NULL)) WHERE (((0.998164777861967) ISNULL)) GROUP BY t0.c0, rt0.c2, rt0.c3, rt0.c0;
SELECT ALL t0.c0, rt0.c2, rt0.c3, rt0.c0 FROM rt0 FULL OUTER JOIN t0 ON (NOT (NULL)) GROUP BY t0.c0, rt0.c2, rt0.c3, rt0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING json_array_length(AVG(GROUP_CONCAT(t0.c0)), (COUNT(t0.c0) IN ())) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (json_array_length(AVG(GROUP_CONCAT(t0.c0)), (COUNT(t0.c0) IN ())))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((json_array_length(AVG(GROUP_CONCAT(t0.c0)), (COUNT(t0.c0) IN ()))) ISNULL);
SELECT * FROM t0, rt0, vt0;
SELECT * FROM t0, rt0, vt0 WHERE (((((t0.c0)OR(vt0.c1))) NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))) AND (((rt0.c1)*(rt0.c2))))) UNION ALL SELECT * FROM t0, rt0, vt0 WHERE ((NOT (((((t0.c0)OR(vt0.c1))) NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))) AND (((rt0.c1)*(rt0.c2))))))) UNION ALL SELECT * FROM t0, rt0, vt0 WHERE (((((((t0.c0)OR(vt0.c1))) NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))) AND (((rt0.c1)*(rt0.c2))))) ISNULL));
SELECT * FROM t0, rt0, vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((highlight(rt0.c4, rt0.c3, rt0.c4, rt0.c4)) NOT NULL)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((highlight(rt0.c4, rt0.c3, rt0.c4, rt0.c4)) NOT NULL)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((highlight(rt0.c4, rt0.c3, rt0.c4, rt0.c4)) NOT NULL)) ISNULL));
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE (CAST(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c3)) AS NUMERIC)) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (CAST(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c3)) AS NUMERIC)))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE (((CAST(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c3)) AS NUMERIC)) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1, rt0.c2, rt0.c4, rt0.c0, rt0.c3 FROM rt0 NATURAL JOIN t0 GROUP BY rt0.c1, rt0.c2, rt0.c4, rt0.c0, rt0.c3;
SELECT ALL rt0.c1, rt0.c2, rt0.c4, rt0.c0, rt0.c3 FROM rt0 NATURAL JOIN t0 GROUP BY rt0.c1, rt0.c2, rt0.c4, rt0.c0, rt0.c3 HAVING ((((CASE WHEN MIN(rt0.c1) THEN rt0.c3 WHEN MAX(GROUP_CONCAT(rt0.c0)) THEN t0.c0 WHEN rt0.c2 THEN rt0.c2 END)OR(GROUP_CONCAT(rt0.c1))))OR(SUM(GROUP_CONCAT(rt0.c1)))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c4, rt0.c0, rt0.c3 FROM rt0 NATURAL JOIN t0 GROUP BY rt0.c1, rt0.c2, rt0.c4, rt0.c0, rt0.c3 HAVING (NOT (((((CASE WHEN MIN(rt0.c1) THEN rt0.c3 WHEN MAX(GROUP_CONCAT(rt0.c0)) THEN t0.c0 WHEN rt0.c2 THEN rt0.c2 END)OR(GROUP_CONCAT(rt0.c1))))OR(SUM(GROUP_CONCAT(rt0.c1)))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c4, rt0.c0, rt0.c3 FROM rt0 NATURAL JOIN t0 GROUP BY rt0.c1, rt0.c2, rt0.c4, rt0.c0, rt0.c3 HAVING ((((((CASE WHEN MIN(rt0.c1) THEN rt0.c3 WHEN MAX(GROUP_CONCAT(rt0.c0)) THEN t0.c0 WHEN rt0.c2 THEN rt0.c2 END)OR(GROUP_CONCAT(rt0.c1))))OR(SUM(GROUP_CONCAT(rt0.c1))))) ISNULL);
SELECT ALL rt0.c0, rt0.c3, rt0.c4, rt0.c2 FROM rt0;
SELECT ALL rt0.c0, rt0.c3, rt0.c4, rt0.c2 FROM rt0 WHERE (SQLITE_COMPILEOPTION_USED(((rt0.c2)<(rt0.c3)))) UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c4, rt0.c2 FROM rt0 WHERE ((NOT (SQLITE_COMPILEOPTION_USED(((rt0.c2)<(rt0.c3)))))) UNION ALL SELECT rt0.c0, rt0.c3, rt0.c4, rt0.c2 FROM rt0 WHERE (((SQLITE_COMPILEOPTION_USED(((rt0.c2)<(rt0.c3)))) ISNULL));
SELECT ALL rt0.c0, rt0.c3, rt0.c4, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0 WHERE ((+ (t0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((NOT ((+ (t0.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((((+ (t0.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT * FROM vt0, t0;
SELECT rt0.c0, rt0.c1, rt0.c4, rt0.c3 FROM rt0, vt0 NATURAL JOIN t0 GROUP BY rt0.c0, rt0.c1, rt0.c4, rt0.c3;
SELECT ALL rt0.c0, rt0.c1, rt0.c4, rt0.c3 FROM rt0, vt0 NATURAL JOIN t0 WHERE (((MAX(vt0.c0, rt0.c0, rt0.c2, rt0.c3)) BETWEEN (((rt0.c3)+(-7.75285825E8))) AND (t0.c0 COLLATE NOCASE))) GROUP BY rt0.c0, rt0.c1, rt0.c4, rt0.c3 UNION SELECT rt0.c0, rt0.c1, rt0.c4, rt0.c3 FROM rt0, vt0 NATURAL JOIN t0 WHERE ((NOT (((MAX(vt0.c0, rt0.c0, rt0.c2, rt0.c3)) BETWEEN (((rt0.c3)+(-7.75285825E8))) AND (t0.c0 COLLATE NOCASE))))) GROUP BY rt0.c0, rt0.c1, rt0.c4, rt0.c3 UNION SELECT rt0.c0, rt0.c1, rt0.c4, rt0.c3 FROM rt0, vt0 NATURAL JOIN t0 WHERE (((((MAX(vt0.c0, rt0.c0, rt0.c2, rt0.c3)) BETWEEN (((rt0.c3)+(-7.75285825E8))) AND (t0.c0 COLLATE NOCASE))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c4, rt0.c3;
SELECT rt0.c0, rt0.c1, rt0.c4, rt0.c3 FROM rt0, vt0 NATURAL JOIN t0 GROUP BY rt0.c0, rt0.c1, rt0.c4, rt0.c3;
SELECT ALL vt0.c0, t0.c0, vt0.c1, rt0.c2, rt0.c4, rt0.c1, rt0.c3, rt0.c0 FROM vt0, t0 RIGHT OUTER JOIN rt0 ON ((((TRIM(vt0.c1, rt0.c3))AND(COALESCE(vt0.c0, vt0.c0))))OR(((rt0.c1)OR(rt0.c3)))) GROUP BY vt0.c0, t0.c0, vt0.c1, rt0.c2, rt0.c4, rt0.c1, rt0.c3, rt0.c0;
SELECT ALL vt0.c0, t0.c0, vt0.c1, rt0.c2, rt0.c4, rt0.c1, rt0.c3, rt0.c0 FROM vt0, t0 RIGHT OUTER JOIN rt0 ON ((((TRIM(vt0.c1, rt0.c3))AND(COALESCE(vt0.c0, vt0.c0))))OR(((rt0.c1)OR(rt0.c3)))) GROUP BY vt0.c0, t0.c0, vt0.c1, rt0.c2, rt0.c4, rt0.c1, rt0.c3, rt0.c0 HAVING CAST(SUM(AVG(COUNT(vt0.c0))) AS INTEGER) UNION ALL SELECT ALL vt0.c0, t0.c0, vt0.c1, rt0.c2, rt0.c4, rt0.c1, rt0.c3, rt0.c0 FROM vt0, t0 RIGHT OUTER JOIN rt0 ON ((((TRIM(vt0.c1, rt0.c3))AND(COALESCE(vt0.c0, vt0.c0))))OR(((rt0.c1)OR(rt0.c3)))) GROUP BY vt0.c0, t0.c0, vt0.c1, rt0.c2, rt0.c4, rt0.c1, rt0.c3, rt0.c0 HAVING (NOT (CAST(SUM(AVG(COUNT(vt0.c0))) AS INTEGER))) UNION ALL SELECT vt0.c0, t0.c0, vt0.c1, rt0.c2, rt0.c4, rt0.c1, rt0.c3, rt0.c0 FROM vt0, t0 RIGHT OUTER JOIN rt0 ON ((((TRIM(vt0.c1, rt0.c3))AND(COALESCE(vt0.c0, vt0.c0))))OR(((rt0.c1)OR(rt0.c3)))) GROUP BY vt0.c0, t0.c0, vt0.c1, rt0.c2, rt0.c4, rt0.c1, rt0.c3, rt0.c0 HAVING ((CAST(SUM(AVG(COUNT(vt0.c0))) AS INTEGER)) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((((((((((rt0.c0)AND(rt0.c4)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c2)))IS(CAST(rt0.c4 AS TEXT)))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((((((((((rt0.c0)AND(rt0.c4)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c2)))IS(CAST(rt0.c4 AS TEXT)))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((((((((rt0.c0)AND(rt0.c4)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c2)))IS(CAST(rt0.c4 AS TEXT)))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (vt0.c1) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (vt0.c1))) UNION SELECT DISTINCT * FROM vt0 WHERE (((vt0.c1) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ('396230639') GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT ('396230639'))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((('396230639') ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (TRIM(vt0.c0, COUNT(vt0.c0)) IN (AVG(MAX(vt0.c1)))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT ((TRIM(vt0.c0, COUNT(vt0.c0)) IN (AVG(MAX(vt0.c1)))))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (((TRIM(vt0.c0, COUNT(vt0.c0)) IN (AVG(MAX(vt0.c1))))) ISNULL);
SELECT ALL * FROM t0, vt0, rt0;
SELECT * FROM t0, vt0, rt0 WHERE (IFNULL(DISTINCT ((vt0.c0) IS FALSE), ((rt0.c4) IS FALSE))) UNION ALL SELECT ALL * FROM t0, vt0, rt0 WHERE ((NOT (IFNULL(DISTINCT ((vt0.c0) IS FALSE), ((rt0.c4) IS FALSE))))) UNION ALL SELECT ALL * FROM t0, vt0, rt0 WHERE (((IFNULL(DISTINCT ((vt0.c0) IS FALSE), ((rt0.c4) IS FALSE))) ISNULL));
SELECT ALL * FROM t0, vt0, rt0;
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE ((CAST(rt0.c3 AS NUMERIC) IN ())) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT ((CAST(rt0.c3 AS NUMERIC) IN ())))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((((CAST(rt0.c3 AS NUMERIC) IN ())) ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT ALL rt0.c3, rt0.c4, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c3, rt0.c4, vt0.c0;
SELECT ALL rt0.c3, rt0.c4, vt0.c0 FROM rt0, vt0 WHERE (CAST(rt0.c4 COLLATE BINARY AS NUMERIC)) GROUP BY rt0.c3, rt0.c4, vt0.c0 UNION SELECT ALL rt0.c3, rt0.c4, vt0.c0 FROM rt0, vt0 WHERE ((NOT (CAST(rt0.c4 COLLATE BINARY AS NUMERIC)))) GROUP BY rt0.c3, rt0.c4, vt0.c0 UNION SELECT ALL rt0.c3, rt0.c4, vt0.c0 FROM rt0, vt0 WHERE (((CAST(rt0.c4 COLLATE BINARY AS NUMERIC)) ISNULL)) GROUP BY rt0.c3, rt0.c4, vt0.c0;
SELECT ALL rt0.c3, rt0.c4, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c3, rt0.c4, vt0.c0;
SELECT rt0.c3, rt0.c2, rt0.c4, vt0.c1 FROM rt0, vt0, t0 GROUP BY rt0.c3, rt0.c2, rt0.c4, vt0.c1;
SELECT ALL rt0.c3, rt0.c2, rt0.c4, vt0.c1 FROM rt0, vt0, t0 GROUP BY rt0.c3, rt0.c2, rt0.c4, vt0.c1 HAVING AVG(MAX(GROUP_CONCAT(t0.c0))) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c4, vt0.c1 FROM rt0, vt0, t0 GROUP BY rt0.c3, rt0.c2, rt0.c4, vt0.c1 HAVING (NOT (AVG(MAX(GROUP_CONCAT(t0.c0))))) UNION ALL SELECT rt0.c3, rt0.c2, rt0.c4, vt0.c1 FROM rt0, vt0, t0 GROUP BY rt0.c3, rt0.c2, rt0.c4, vt0.c1 HAVING ((AVG(MAX(GROUP_CONCAT(t0.c0)))) ISNULL);
SELECT rt0.c2, vt0.c0, rt0.c1, vt0.c1, t0.c0 FROM t0, rt0, vt0;
SELECT ALL rt0.c2, vt0.c0, rt0.c1, vt0.c1, t0.c0 FROM t0, rt0, vt0 WHERE (((((rt0.c3)OR(CAST(vt0.c1 AS INTEGER))))AND(''))) UNION ALL SELECT rt0.c2, vt0.c0, rt0.c1, vt0.c1, t0.c0 FROM t0, rt0, vt0 WHERE ((NOT (((((rt0.c3)OR(CAST(vt0.c1 AS INTEGER))))AND(''))))) UNION ALL SELECT rt0.c2, vt0.c0, rt0.c1, vt0.c1, t0.c0 FROM t0, rt0, vt0 WHERE (((((((rt0.c3)OR(CAST(vt0.c1 AS INTEGER))))AND(''))) ISNULL));
SELECT rt0.c2, vt0.c0, rt0.c1, vt0.c1, t0.c0 FROM t0, rt0, vt0;
SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN vt0 ON SQLITE_COMPILEOPTION_USED(((((((((((((t0.c0)OR(t0.c0)))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))AND(t0.c0)))AND(vt0.c1)));
SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN vt0 ON SQLITE_COMPILEOPTION_USED(((((((((((((t0.c0)OR(t0.c0)))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))AND(t0.c0)))AND(vt0.c1))) WHERE (vt0.c0) UNION SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN vt0 ON SQLITE_COMPILEOPTION_USED(((((((((((((t0.c0)OR(t0.c0)))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))AND(t0.c0)))AND(vt0.c1))) WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN vt0 ON SQLITE_COMPILEOPTION_USED(((((((((((((t0.c0)OR(t0.c0)))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))AND(t0.c0)))AND(vt0.c1))) WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN vt0 ON SQLITE_COMPILEOPTION_USED(((((((((((((t0.c0)OR(t0.c0)))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))AND(t0.c0)))AND(vt0.c1)));
SELECT ALL rt0.c1, rt0.c2, rt0.c3 FROM t0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3;
SELECT ALL rt0.c1, rt0.c2, rt0.c3 FROM t0, rt0 WHERE ((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((0.6326371653319321))) COLLATE RTRIM) GROUP BY rt0.c1, rt0.c2, rt0.c3 UNION SELECT rt0.c1, rt0.c2, rt0.c3 FROM t0, rt0 WHERE ((NOT ((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((0.6326371653319321))) COLLATE RTRIM))) GROUP BY rt0.c1, rt0.c2, rt0.c3 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c3 FROM t0, rt0 WHERE ((((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((0.6326371653319321))) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c3;
SELECT ALL rt0.c1, rt0.c2, rt0.c3 FROM t0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING TOTAL(COUNT(*)) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (TOTAL(COUNT(*)))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((TOTAL(COUNT(*))) ISNULL);
SELECT ALL rt0.c3, rt0.c0, rt0.c1, rt0.c4, vt0.c0 FROM vt0 INNER JOIN t0 ON ((LIKELIHOOD(vt0.c0, 0.603972501367631)) BETWEEN (HEX(vt0.c0)) AND (((((t0.c0)AND(vt0.c0)))AND(vt0.c0)))) RIGHT OUTER JOIN rt0 ON (CASE rt0.c3  WHEN rt0.c0 THEN rt0.c2 END IN ());
SELECT rt0.c3, rt0.c0, rt0.c1, rt0.c4, vt0.c0 FROM vt0 INNER JOIN t0 ON ((LIKELIHOOD(vt0.c0, 0.603972501367631)) BETWEEN (HEX(vt0.c0)) AND (((((t0.c0)AND(vt0.c0)))AND(vt0.c0)))) RIGHT OUTER JOIN rt0 ON (CASE rt0.c3  WHEN rt0.c0 THEN rt0.c2 END IN ()) WHERE (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE RTRIM) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c1, rt0.c4, vt0.c0 FROM vt0 INNER JOIN t0 ON ((LIKELIHOOD(vt0.c0, 0.603972501367631)) BETWEEN (HEX(vt0.c0)) AND (((((t0.c0)AND(vt0.c0)))AND(vt0.c0)))) RIGHT OUTER JOIN rt0 ON (CASE rt0.c3  WHEN rt0.c0 THEN rt0.c2 END IN ()) WHERE ((NOT (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE RTRIM))) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c1, rt0.c4, vt0.c0 FROM vt0 INNER JOIN t0 ON ((LIKELIHOOD(vt0.c0, 0.603972501367631)) BETWEEN (HEX(vt0.c0)) AND (((((t0.c0)AND(vt0.c0)))AND(vt0.c0)))) RIGHT OUTER JOIN rt0 ON (CASE rt0.c3  WHEN rt0.c0 THEN rt0.c2 END IN ()) WHERE (((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE RTRIM) ISNULL));
SELECT ALL rt0.c3, rt0.c0, rt0.c1, rt0.c4, vt0.c0 FROM vt0 INNER JOIN t0 ON ((LIKELIHOOD(vt0.c0, 0.603972501367631)) BETWEEN (HEX(vt0.c0)) AND (((((t0.c0)AND(vt0.c0)))AND(vt0.c0)))) RIGHT OUTER JOIN rt0 ON (CASE rt0.c3  WHEN rt0.c0 THEN rt0.c2 END IN ());
SELECT DISTINCT * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0 WHERE (((((((vt0.c1)AND(0.969110733908041)))AND(vt0.c0))) IS FALSE)) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((NOT (((((((vt0.c1)AND(0.969110733908041)))AND(vt0.c0))) IS FALSE)))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE (((((((((vt0.c1)AND(0.969110733908041)))AND(vt0.c0))) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM t0, vt0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))OR((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))OR((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))OR((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt0.c0, rt0.c1, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3, rt0.c4;
SELECT rt0.c0, rt0.c1, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3, rt0.c4 HAVING ((COUNT(TOTAL(rt0.c2))) IS TRUE) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3, rt0.c4 HAVING (NOT (((COUNT(TOTAL(rt0.c2))) IS TRUE))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3, rt0.c4 HAVING ((((COUNT(TOTAL(rt0.c2))) IS TRUE)) ISNULL);
SELECT ALL MAX(((((rt0.c3)OR((vt0.c0 IN ()))))OR(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END))) FROM rt0, vt0, t0;
SELECT ALL vt0.c0, rt0.c3, rt0.c2, rt0.c1, vt0.c1, rt0.c4, rt0.c0 FROM vt0, rt0;
SELECT vt0.c0, rt0.c3, rt0.c2, rt0.c1, vt0.c1, rt0.c4, rt0.c0 FROM vt0, rt0 WHERE (x'') UNION ALL SELECT vt0.c0, rt0.c3, rt0.c2, rt0.c1, vt0.c1, rt0.c4, rt0.c0 FROM vt0, rt0 WHERE ((NOT (x''))) UNION ALL SELECT ALL vt0.c0, rt0.c3, rt0.c2, rt0.c1, vt0.c1, rt0.c4, rt0.c0 FROM vt0, rt0 WHERE (((x'') ISNULL));
SELECT ALL vt0.c0, rt0.c3, rt0.c2, rt0.c1, vt0.c1, rt0.c4, rt0.c0 FROM vt0, rt0;
SELECT DISTINCT * FROM rt0 INDEXED BY i75, vt0;
SELECT ALL vt0.c1, vt0.c0, t0.c0 FROM t0 FULL OUTER JOIN vt0 ON 0.425201943814692 GROUP BY vt0.c1, vt0.c0, t0.c0;
SELECT ALL vt0.c1, vt0.c0, t0.c0 FROM t0 FULL OUTER JOIN vt0 ON 0.425201943814692 WHERE (IFNULL(DISTINCT ((vt0.c1) NOT BETWEEN (1.635009847E9) AND (vt0.c0)), ((((((((t0.c0)OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))) GROUP BY vt0.c1, vt0.c0, t0.c0 UNION SELECT ALL vt0.c1, vt0.c0, t0.c0 FROM t0 FULL OUTER JOIN vt0 ON 0.425201943814692 WHERE ((NOT (IFNULL(DISTINCT ((vt0.c1) NOT BETWEEN (1.635009847E9) AND (vt0.c0)), ((((((((t0.c0)OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))))) GROUP BY vt0.c1, vt0.c0, t0.c0 UNION SELECT vt0.c1, vt0.c0, t0.c0 FROM t0 FULL OUTER JOIN vt0 ON 0.425201943814692 WHERE (((IFNULL(DISTINCT ((vt0.c1) NOT BETWEEN (1.635009847E9) AND (vt0.c0)), ((((((((t0.c0)OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))) ISNULL)) GROUP BY vt0.c1, vt0.c0, t0.c0;
SELECT ALL vt0.c1, vt0.c0, t0.c0 FROM t0 FULL OUTER JOIN vt0 ON 0.425201943814692 GROUP BY vt0.c1, vt0.c0, t0.c0;
SELECT vt0.c1, rt0.c0, rt0.c2, rt0.c1, rt0.c4, vt0.c0 FROM rt0, t0, vt0 GROUP BY vt0.c1, rt0.c0, rt0.c2, rt0.c1, rt0.c4, vt0.c0;
SELECT ALL vt0.c1, rt0.c0, rt0.c2, rt0.c1, rt0.c4, vt0.c0 FROM rt0, t0, vt0 GROUP BY vt0.c1, rt0.c0, rt0.c2, rt0.c1, rt0.c4, vt0.c0 HAVING (TOTAL(SUM('xsj')) IN (0.31640465994676126)) UNION ALL SELECT vt0.c1, rt0.c0, rt0.c2, rt0.c1, rt0.c4, vt0.c0 FROM rt0, t0, vt0 GROUP BY vt0.c1, rt0.c0, rt0.c2, rt0.c1, rt0.c4, vt0.c0 HAVING (NOT ((TOTAL(SUM('xsj')) IN (0.31640465994676126)))) UNION ALL SELECT vt0.c1, rt0.c0, rt0.c2, rt0.c1, rt0.c4, vt0.c0 FROM rt0, t0, vt0 GROUP BY vt0.c1, rt0.c0, rt0.c2, rt0.c1, rt0.c4, vt0.c0 HAVING (((TOTAL(SUM('xsj')) IN (0.31640465994676126))) ISNULL);
SELECT ALL rt0.c2, rt0.c4, rt0.c0 FROM rt0, t0, vt0;
SELECT ALL rt0.c2, rt0.c4, rt0.c0 FROM rt0, t0, vt0 WHERE ((((~ (rt0.c1)))+(((vt0.c1) NOTNULL)))) UNION ALL SELECT ALL rt0.c2, rt0.c4, rt0.c0 FROM rt0, t0, vt0 WHERE ((NOT ((((~ (rt0.c1)))+(((vt0.c1) NOTNULL)))))) UNION ALL SELECT rt0.c2, rt0.c4, rt0.c0 FROM rt0, t0, vt0 WHERE ((((((~ (rt0.c1)))+(((vt0.c1) NOTNULL)))) ISNULL));
SELECT ALL rt0.c2, rt0.c4, rt0.c0 FROM rt0, t0, vt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (((('')) NOT BETWEEN ((NULL)) AND ((((rt0.c3)>(1668757441)))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (((('')) NOT BETWEEN ((NULL)) AND ((((rt0.c3)>(1668757441)))))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((((('')) NOT BETWEEN ((NULL)) AND ((((rt0.c3)>(1668757441)))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT rt0.c2 FROM t0, rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM t0, rt0 WHERE ((+ (UPPER(rt0.c2)))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM t0, rt0 WHERE ((NOT ((+ (UPPER(rt0.c2)))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM t0, rt0 WHERE ((((+ (UPPER(rt0.c2)))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM t0, rt0 GROUP BY rt0.c2;
SELECT ALL vt0.c0, rt0.c4, vt0.c1, rt0.c3, t0.c0, rt0.c1 FROM t0, rt0, vt0 GROUP BY vt0.c0, rt0.c4, vt0.c1, rt0.c3, t0.c0, rt0.c1;
SELECT ALL vt0.c0, rt0.c4, vt0.c1, rt0.c3, t0.c0, rt0.c1 FROM t0, rt0, vt0 GROUP BY vt0.c0, rt0.c4, vt0.c1, rt0.c3, t0.c0, rt0.c1 HAVING MAX(COUNT(*)) UNION ALL SELECT ALL vt0.c0, rt0.c4, vt0.c1, rt0.c3, t0.c0, rt0.c1 FROM t0, rt0, vt0 GROUP BY vt0.c0, rt0.c4, vt0.c1, rt0.c3, t0.c0, rt0.c1 HAVING (NOT (MAX(COUNT(*)))) UNION ALL SELECT vt0.c0, rt0.c4, vt0.c1, rt0.c3, t0.c0, rt0.c1 FROM t0, rt0, vt0 GROUP BY vt0.c0, rt0.c4, vt0.c1, rt0.c3, t0.c0, rt0.c1 HAVING ((MAX(COUNT(*))) ISNULL);
SELECT * FROM rt0, t0;
SELECT ALL * FROM rt0, t0 WHERE (NULL) UNION ALL SELECT ALL * FROM rt0, t0 WHERE ((NOT (NULL))) UNION ALL SELECT ALL * FROM rt0, t0 WHERE (((NULL) ISNULL));
SELECT * FROM rt0, t0;
SELECT DISTINCT * FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0 WHERE (NULL) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM vt0, t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ((((t0.c0, '1311504306', t0.c0)) NOT BETWEEN ((((t0.c0) NOTNULL), t0.c0, ((0.4821010686530852) NOT BETWEEN (t0.c0) AND (t0.c0)))) AND ((t0.c0 COLLATE RTRIM, NULL, (((t0.c0))<=((t0.c0))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((((t0.c0, '1311504306', t0.c0)) NOT BETWEEN ((((t0.c0) NOTNULL), t0.c0, ((0.4821010686530852) NOT BETWEEN (t0.c0) AND (t0.c0)))) AND ((t0.c0 COLLATE RTRIM, NULL, (((t0.c0))<=((t0.c0))))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((((((t0.c0, '1311504306', t0.c0)) NOT BETWEEN ((((t0.c0) NOTNULL), t0.c0, ((0.4821010686530852) NOT BETWEEN (t0.c0) AND (t0.c0)))) AND ((t0.c0 COLLATE RTRIM, NULL, (((t0.c0))<=((t0.c0))))))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT rt0.c2, rt0.c0 FROM t0, rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM t0, rt0 GROUP BY rt0.c2, rt0.c0 HAVING MIN(((t0.c0)-(rt0.c4))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM t0, rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (MIN(((t0.c0)-(rt0.c4))))) UNION ALL SELECT rt0.c2, rt0.c0 FROM t0, rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((MIN(((t0.c0)-(rt0.c4)))) ISNULL);
SELECT rt0.c2, rt0.c0 FROM t0, rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM t0, rt0 GROUP BY rt0.c2, rt0.c0 HAVING MIN(((t0.c0)-(rt0.c4))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM t0, rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (MIN(((t0.c0)-(rt0.c4))))) UNION ALL SELECT rt0.c2, rt0.c0 FROM t0, rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((MIN(((t0.c0)-(rt0.c4)))) ISNULL);
SELECT rt0.c2, rt0.c0 FROM t0, rt0 GROUP BY rt0.c2, rt0.c0;
SELECT * FROM t0 NOT INDEXED;
SELECT ALL * FROM t0 WHERE (((((t0.c0)IS NOT(t0.c0)))IS NOT(((t0.c0)>>(t0.c0))))) UNION ALL SELECT * FROM t0 WHERE ((NOT (((((t0.c0)IS NOT(t0.c0)))IS NOT(((t0.c0)>>(t0.c0))))))) UNION ALL SELECT * FROM t0 WHERE (((((((t0.c0)IS NOT(t0.c0)))IS NOT(((t0.c0)>>(t0.c0))))) ISNULL));
SELECT * FROM t0 NOT INDEXED;
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN t0 ON ((t0.c0 COLLATE RTRIM)>>(ABS(DISTINCT rt0.c3)));
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN t0 ON ((t0.c0 COLLATE RTRIM)>>(ABS(DISTINCT rt0.c3))) WHERE ((+ ((NOT (rt0.c2))))) UNION SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN t0 ON ((t0.c0 COLLATE RTRIM)>>(ABS(DISTINCT rt0.c3))) WHERE ((NOT ((+ ((NOT (rt0.c2))))))) UNION SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN t0 ON ((t0.c0 COLLATE RTRIM)>>(ABS(DISTINCT rt0.c3))) WHERE ((((+ ((NOT (rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN t0 ON ((t0.c0 COLLATE RTRIM)>>(ABS(DISTINCT rt0.c3)));
SELECT vt0.c0, vt0.c1, rt0.c4, rt0.c2, rt0.c1, rt0.c3, rt0.c0, t0.c0 FROM vt0, rt0, t0 GROUP BY vt0.c0, vt0.c1, rt0.c4, rt0.c2, rt0.c1, rt0.c3, rt0.c0, t0.c0;
SELECT vt0.c0, vt0.c1, rt0.c4, rt0.c2, rt0.c1, rt0.c3, rt0.c0, t0.c0 FROM vt0, rt0, t0 WHERE (json_array(rt0.c4, ((rt0.c4) BETWEEN (rt0.c1) AND (0Xffffffffecffa6b4)))) GROUP BY vt0.c0, vt0.c1, rt0.c4, rt0.c2, rt0.c1, rt0.c3, rt0.c0, t0.c0 UNION SELECT ALL vt0.c0, vt0.c1, rt0.c4, rt0.c2, rt0.c1, rt0.c3, rt0.c0, t0.c0 FROM vt0, rt0, t0 WHERE ((NOT (json_array(rt0.c4, ((rt0.c4) BETWEEN (rt0.c1) AND (0xffffffffecffa6b4)))))) GROUP BY vt0.c0, vt0.c1, rt0.c4, rt0.c2, rt0.c1, rt0.c3, rt0.c0, t0.c0 UNION SELECT ALL vt0.c0, vt0.c1, rt0.c4, rt0.c2, rt0.c1, rt0.c3, rt0.c0, t0.c0 FROM vt0, rt0, t0 WHERE (((json_array(rt0.c4, ((rt0.c4) BETWEEN (rt0.c1) AND (0xffffffffecffa6b4)))) ISNULL)) GROUP BY vt0.c0, vt0.c1, rt0.c4, rt0.c2, rt0.c1, rt0.c3, rt0.c0, t0.c0;
SELECT vt0.c0, vt0.c1, rt0.c4, rt0.c2, rt0.c1, rt0.c3, rt0.c0, t0.c0 FROM vt0, rt0, t0 GROUP BY vt0.c0, vt0.c1, rt0.c4, rt0.c2, rt0.c1, rt0.c3, rt0.c0, t0.c0;
SELECT ALL rt0.c4, t0.c0, rt0.c1, rt0.c3 FROM t0, rt0 GROUP BY rt0.c4, t0.c0, rt0.c1, rt0.c3;
SELECT ALL rt0.c4, t0.c0, rt0.c1, rt0.c3 FROM t0, rt0 GROUP BY rt0.c4, t0.c0, rt0.c1, rt0.c3 HAVING (+ (((COUNT(GROUP_CONCAT(0.5139624768068418)))>('-979103969')))) UNION ALL SELECT rt0.c4, t0.c0, rt0.c1, rt0.c3 FROM t0, rt0 GROUP BY rt0.c4, t0.c0, rt0.c1, rt0.c3 HAVING (NOT ((+ (((COUNT(GROUP_CONCAT(0.5139624768068418)))>('-979103969')))))) UNION ALL SELECT rt0.c4, t0.c0, rt0.c1, rt0.c3 FROM t0, rt0 GROUP BY rt0.c4, t0.c0, rt0.c1, rt0.c3 HAVING (((+ (((COUNT(GROUP_CONCAT(0.5139624768068418)))>('-979103969'))))) ISNULL);
SELECT ALL rt0.c3, rt0.c2, rt0.c1 FROM t0, rt0;
SELECT ALL rt0.c3, rt0.c2, rt0.c1 FROM t0, rt0 WHERE ((((NOT (rt0.c1)))&(((('-724480774')) BETWEEN ((rt0.c2)) AND ((rt0.c4)))))) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c1 FROM t0, rt0 WHERE ((NOT ((((NOT (rt0.c1)))&(((('-724480774')) BETWEEN ((rt0.c2)) AND ((rt0.c4)))))))) UNION ALL SELECT rt0.c3, rt0.c2, rt0.c1 FROM t0, rt0 WHERE ((((((NOT (rt0.c1)))&(((('-724480774')) BETWEEN ((rt0.c2)) AND ((rt0.c4)))))) ISNULL));
SELECT ALL rt0.c3, rt0.c2, rt0.c1 FROM t0, rt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((vt0.c0)+(vt0.c0)))AND(((vt0.c1) NOT BETWEEN (vt0.c1) AND (x'')))))AND(vt0.c1))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((((vt0.c0)+(vt0.c0)))AND(((vt0.c1) NOT BETWEEN (vt0.c1) AND (x'')))))AND(vt0.c1))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((((vt0.c0)+(vt0.c0)))AND(((vt0.c1) NOT BETWEEN (vt0.c1) AND (x'')))))AND(vt0.c1))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c3;
SELECT ALL rt0.c1, rt0.c3 FROM rt0 NOT INDEXED WHERE ((((rt0.c2) BETWEEN (rt0.c4) AND (0X327e49a8)) IN ((rt0.c3 IN ()), ((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c1))))) GROUP BY rt0.c1, rt0.c3 UNION SELECT rt0.c1, rt0.c3 FROM rt0 WHERE ((NOT ((((rt0.c2) BETWEEN (rt0.c4) AND (0x327e49a8)) IN ((rt0.c3 IN ()), ((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c1))))))) GROUP BY rt0.c1, rt0.c3 UNION SELECT rt0.c1, rt0.c3 FROM rt0 WHERE ((((((rt0.c2) BETWEEN (rt0.c4) AND (0x327e49a8)) IN ((rt0.c3 IN ()), ((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c1))))) ISNULL)) GROUP BY rt0.c1, rt0.c3;
SELECT rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c3;
SELECT ALL t0.c0, rt0.c2, vt0.c1, rt0.c0, rt0.c4, rt0.c3, vt0.c0 FROM vt0, t0, rt0 GROUP BY t0.c0, rt0.c2, vt0.c1, rt0.c0, rt0.c4, rt0.c3, vt0.c0;
SELECT ALL t0.c0, rt0.c2, vt0.c1, rt0.c0, rt0.c4, rt0.c3, vt0.c0 FROM vt0, t0, rt0 GROUP BY t0.c0, rt0.c2, vt0.c1, rt0.c0, rt0.c4, rt0.c3, vt0.c0 HAVING (((CASE GROUP_CONCAT(SUM(MAX(rt0.c0)))  WHEN TOTAL(COUNT(*)) THEN TOTAL(AVG(GROUP_CONCAT(COUNT(*)))) END, (('쉑') NOT BETWEEN (rt0.c3) AND (rt0.c0)), GROUP_CONCAT(rt0.c0)))>((TOTAL(COUNT(*)), ((MIN(vt0.c1)) NOT NULL), AVG(MAX(-255434924))))) UNION ALL SELECT ALL t0.c0, rt0.c2, vt0.c1, rt0.c0, rt0.c4, rt0.c3, vt0.c0 FROM vt0, t0, rt0 GROUP BY t0.c0, rt0.c2, vt0.c1, rt0.c0, rt0.c4, rt0.c3, vt0.c0 HAVING (NOT ((((CASE GROUP_CONCAT(SUM(MAX(rt0.c0)))  WHEN TOTAL(COUNT(*)) THEN TOTAL(AVG(GROUP_CONCAT(COUNT(*)))) END, (('쉑') NOT BETWEEN (rt0.c3) AND (rt0.c0)), GROUP_CONCAT(rt0.c0)))>((TOTAL(COUNT(*)), ((MIN(vt0.c1)) NOT NULL), AVG(MAX(-255434924))))))) UNION ALL SELECT t0.c0, rt0.c2, vt0.c1, rt0.c0, rt0.c4, rt0.c3, vt0.c0 FROM vt0, t0, rt0 GROUP BY t0.c0, rt0.c2, vt0.c1, rt0.c0, rt0.c4, rt0.c3, vt0.c0 HAVING (((((CASE GROUP_CONCAT(SUM(MAX(rt0.c0)))  WHEN TOTAL(COUNT(*)) THEN TOTAL(AVG(GROUP_CONCAT(COUNT(*)))) END, (('쉑') NOT BETWEEN (rt0.c3) AND (rt0.c0)), GROUP_CONCAT(rt0.c0)))>((TOTAL(COUNT(*)), ((MIN(vt0.c1)) NOT NULL), AVG(MAX(-255434924)))))) ISNULL);
SELECT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE ((((t0.c0 IN (t0.c0, t0.c0))) NOT BETWEEN (((t0.c0) IS TRUE)) AND (TYPEOF(t0.c0)))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((((t0.c0 IN (t0.c0, t0.c0))) NOT BETWEEN (((t0.c0) IS TRUE)) AND (TYPEOF(t0.c0)))))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((((((t0.c0 IN (t0.c0, t0.c0))) NOT BETWEEN (((t0.c0) IS TRUE)) AND (TYPEOF(t0.c0)))) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT * FROM t0, vt0, rt0;
SELECT DISTINCT * FROM t0, vt0, rt0 WHERE (IFNULL(DISTINCT CAST(rt0.c4 AS NUMERIC), ((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c0)))) UNION SELECT DISTINCT * FROM t0, vt0, rt0 WHERE ((NOT (IFNULL(DISTINCT CAST(rt0.c4 AS NUMERIC), ((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))) UNION SELECT DISTINCT * FROM t0, vt0, rt0 WHERE (((IFNULL(DISTINCT CAST(rt0.c4 AS NUMERIC), ((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c0)))) ISNULL));
SELECT DISTINCT * FROM t0, vt0, rt0;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 WHERE (((vt0.c1 COLLATE NOCASE) BETWEEN ((('-979103969') ISNULL)) AND ((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE ((NOT (((vt0.c1 COLLATE NOCASE) BETWEEN ((('-979103969') ISNULL)) AND ((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE (((((vt0.c1 COLLATE NOCASE) BETWEEN ((('-979103969') ISNULL)) AND ((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL rt0.c3 FROM rt0, t0 GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0, t0 GROUP BY rt0.c3 HAVING COUNT(*) COLLATE BINARY UNION ALL SELECT rt0.c3 FROM rt0, t0 GROUP BY rt0.c3 HAVING (NOT (COUNT(*) COLLATE BINARY)) UNION ALL SELECT rt0.c3 FROM rt0, t0 GROUP BY rt0.c3 HAVING ((COUNT(*) COLLATE BINARY) ISNULL);
SELECT ALL rt0.c3 FROM rt0, t0 GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0, t0 GROUP BY rt0.c3 HAVING COUNT(*) COLLATE BINARY UNION ALL SELECT rt0.c3 FROM rt0, t0 GROUP BY rt0.c3 HAVING (NOT (COUNT(*) COLLATE BINARY)) UNION ALL SELECT rt0.c3 FROM rt0, t0 GROUP BY rt0.c3 HAVING ((COUNT(*) COLLATE BINARY) ISNULL);
SELECT ALL rt0.c3 FROM rt0, t0 GROUP BY rt0.c3;
SELECT t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE (TRIM(DISTINCT t0.c0)) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT (TRIM(DISTINCT t0.c0)))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((TRIM(DISTINCT t0.c0)) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((GLOB(rt0.c1, rt0.c0), NULL, CAST(rt0.c3 AS REAL)))>((CAST(rt0.c2 AS REAL), ((rt0.c3) IS FALSE), (rt0.c2 IN ()))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((GLOB(rt0.c1, rt0.c0), NULL, CAST(rt0.c3 AS REAL)))>((CAST(rt0.c2 AS REAL), ((rt0.c3) IS FALSE), (rt0.c2 IN ()))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((GLOB(rt0.c1, rt0.c0), NULL, CAST(rt0.c3 AS REAL)))>((CAST(rt0.c2 AS REAL), ((rt0.c3) IS FALSE), (rt0.c2 IN ()))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT vt0.c1, rt0.c2, vt0.c0, rt0.c4, t0.c0, rt0.c1, rt0.c0, rt0.c3 FROM vt0 LEFT OUTER JOIN t0 ON ((((CASE rt0.c0  WHEN rt0.c4 THEN t0.c0 END)AND(vt0.c0)))OR(((((vt0.c0)AND(rt0.c3)))OR(rt0.c0)))) RIGHT OUTER JOIN rt0 ON ((rt0.c4 COLLATE RTRIM) IS TRUE) GROUP BY vt0.c1, rt0.c2, vt0.c0, rt0.c4, t0.c0, rt0.c1, rt0.c0, rt0.c3;
SELECT t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING (- (MIN(MIN(AVG(MAX(vt0.c0)))))) UNION ALL SELECT t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING (NOT ((- (MIN(MIN(AVG(MAX(vt0.c0)))))))) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING (((- (MIN(MIN(AVG(MAX(vt0.c0))))))) ISNULL);
SELECT ALL TOTAL(((vt0.c0 COLLATE NOCASE)<>((NOT (vt0.c1))))) FROM vt0 ORDER BY (((((vt0.c0))==((vt0.c1))))>>(((vt0.c1)-(vt0.c0)))) DESC, 'uS-\r딡'  NULLS FIRST;
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE (((((((t0.c0)LIKE(t0.c0)))AND(((t0.c0) IS TRUE))))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) UNION ALL SELECT * FROM t0 WHERE ((NOT (((((((t0.c0)LIKE(t0.c0)))AND(((t0.c0) IS TRUE))))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))))) UNION ALL SELECT * FROM t0 WHERE (((((((((t0.c0)LIKE(t0.c0)))AND(((t0.c0) IS TRUE))))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE (CAST(((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)) AS REAL)) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((NOT (CAST(((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)) AS REAL)))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE (((CAST(((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)) AS REAL)) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT vt0.c0, t0.c0, rt0.c1, rt0.c4, rt0.c2 FROM vt0 RIGHT OUTER JOIN t0 ON (- (vt0.c1)) COLLATE NOCASE COLLATE BINARY FULL OUTER JOIN rt0 ON ((((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c4)))IS(((((((((vt0.c1)AND(rt0.c3)))AND(t0.c0)))OR(vt0.c1)))AND(rt0.c1)))) GROUP BY vt0.c0, t0.c0, rt0.c1, rt0.c4, rt0.c2;
SELECT vt0.c0, t0.c0, rt0.c1, rt0.c4, rt0.c2 FROM vt0 RIGHT OUTER JOIN t0 ON (- (vt0.c1)) COLLATE NOCASE COLLATE BINARY FULL OUTER JOIN rt0 ON ((((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c4)))IS(((((((((vt0.c1)AND(rt0.c3)))AND(t0.c0)))OR(vt0.c1)))AND(rt0.c1)))) WHERE (((((rt0.c4) ISNULL)) NOT NULL)) GROUP BY vt0.c0, t0.c0, rt0.c1, rt0.c4, rt0.c2 UNION SELECT vt0.c0, t0.c0, rt0.c1, rt0.c4, rt0.c2 FROM vt0 RIGHT OUTER JOIN t0 ON (- (vt0.c1)) COLLATE NOCASE COLLATE BINARY FULL OUTER JOIN rt0 ON ((((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c4)))IS(((((((((vt0.c1)AND(rt0.c3)))AND(t0.c0)))OR(vt0.c1)))AND(rt0.c1)))) WHERE ((NOT (((((rt0.c4) ISNULL)) NOT NULL)))) GROUP BY vt0.c0, t0.c0, rt0.c1, rt0.c4, rt0.c2 UNION SELECT vt0.c0, t0.c0, rt0.c1, rt0.c4, rt0.c2 FROM vt0 RIGHT OUTER JOIN t0 ON (- (vt0.c1)) COLLATE NOCASE COLLATE BINARY FULL OUTER JOIN rt0 ON ((((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c4)))IS(((((((((vt0.c1)AND(rt0.c3)))AND(t0.c0)))OR(vt0.c1)))AND(rt0.c1)))) WHERE (((((((rt0.c4) ISNULL)) NOT NULL)) ISNULL)) GROUP BY vt0.c0, t0.c0, rt0.c1, rt0.c4, rt0.c2;
SELECT vt0.c0, t0.c0, rt0.c1, rt0.c4, rt0.c2 FROM vt0 RIGHT OUTER JOIN t0 ON (- (vt0.c1)) COLLATE NOCASE COLLATE BINARY FULL OUTER JOIN rt0 ON ((((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c4)))IS(((((((((vt0.c1)AND(rt0.c3)))AND(t0.c0)))OR(vt0.c1)))AND(rt0.c1)))) GROUP BY vt0.c0, t0.c0, rt0.c1, rt0.c4, rt0.c2;
SELECT rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c4;
SELECT rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c4 HAVING SQLITE_VERSION() UNION ALL SELECT ALL rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c4 HAVING (NOT (SQLITE_VERSION())) UNION ALL SELECT ALL rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c4 HAVING ((SQLITE_VERSION()) ISNULL);
SELECT rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c4;
SELECT rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c4 HAVING SQLITE_VERSION() UNION ALL SELECT ALL rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c4 HAVING (NOT (SQLITE_VERSION())) UNION ALL SELECT ALL rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c4 HAVING ((SQLITE_VERSION()) ISNULL);
SELECT rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c4;
SELECT ALL * FROM vt0, t0, rt0;
SELECT ALL * FROM vt0, t0, rt0 WHERE (x'') UNION ALL SELECT ALL * FROM vt0, t0, rt0 WHERE ((NOT (x''))) UNION ALL SELECT * FROM vt0, t0, rt0 WHERE (((x'') ISNULL));
SELECT ALL * FROM vt0, t0, rt0;
SELECT DISTINCT vt0.c1, rt0.c0, rt0.c1, t0.c0, rt0.c2, rt0.c4, rt0.c3, vt0.c0 FROM t0, rt0, vt0;
SELECT DISTINCT vt0.c1, rt0.c0, rt0.c1, t0.c0, rt0.c2, rt0.c4, rt0.c3, vt0.c0 FROM t0, rt0, vt0 WHERE (((rt0.c1)<(((((vt0.c1)OR(rt0.c2)))OR(rt0.c4))))) UNION SELECT DISTINCT vt0.c1, rt0.c0, rt0.c1, t0.c0, rt0.c2, rt0.c4, rt0.c3, vt0.c0 FROM t0, rt0, vt0 WHERE ((NOT (((rt0.c1)<(((((vt0.c1)OR(rt0.c2)))OR(rt0.c4))))))) UNION SELECT DISTINCT vt0.c1, rt0.c0, rt0.c1, t0.c0, rt0.c2, rt0.c4, rt0.c3, vt0.c0 FROM t0, rt0, vt0 WHERE (((((rt0.c1)<(((((vt0.c1)OR(rt0.c2)))OR(rt0.c4))))) ISNULL));
SELECT DISTINCT vt0.c1, rt0.c0, rt0.c1, t0.c0, rt0.c2, rt0.c4, rt0.c3, vt0.c0 FROM t0, rt0, vt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c4;
SELECT ALL rt0.c0, rt0.c1, rt0.c4 FROM rt0 WHERE (((SQLITE_SOURCE_ID())==(CAST(rt0.c3 AS INTEGER)))) GROUP BY rt0.c0, rt0.c1, rt0.c4 UNION SELECT rt0.c0, rt0.c1, rt0.c4 FROM rt0 WHERE ((NOT (((SQLITE_SOURCE_ID())=(CAST(rt0.c3 AS INTEGER)))))) GROUP BY rt0.c0, rt0.c1, rt0.c4 UNION SELECT rt0.c0, rt0.c1, rt0.c4 FROM rt0 WHERE (((((SQLITE_SOURCE_ID())==(CAST(rt0.c3 AS INTEGER)))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c4;
SELECT ALL rt0.c0, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c4;
SELECT ALL rt0.c2, vt0.c1, rt0.c3, rt0.c0, rt0.c1, t0.c0 FROM vt0, t0, rt0 GROUP BY rt0.c2, vt0.c1, rt0.c3, rt0.c0, rt0.c1, t0.c0;
SELECT rt0.c2, vt0.c1, rt0.c3, rt0.c0, rt0.c1, t0.c0 FROM vt0, t0, rt0 GROUP BY rt0.c2, vt0.c1, rt0.c3, rt0.c0, rt0.c1, t0.c0 HAVING MIN((((MIN(rt0.c1))) BETWEEN ((vt0.c1)) AND ((rt0.c3)))) UNION ALL SELECT ALL rt0.c2, vt0.c1, rt0.c3, rt0.c0, rt0.c1, t0.c0 FROM vt0, t0, rt0 GROUP BY rt0.c2, vt0.c1, rt0.c3, rt0.c0, rt0.c1, t0.c0 HAVING (NOT (MIN((((MIN(rt0.c1))) BETWEEN ((vt0.c1)) AND ((rt0.c3)))))) UNION ALL SELECT rt0.c2, vt0.c1, rt0.c3, rt0.c0, rt0.c1, t0.c0 FROM vt0, t0, rt0 GROUP BY rt0.c2, vt0.c1, rt0.c3, rt0.c0, rt0.c1, t0.c0 HAVING ((MIN((((MIN(rt0.c1))) BETWEEN ((vt0.c1)) AND ((rt0.c3))))) ISNULL);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN t0 ON ((((vt0.c0) BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN (((((x'da41')OR(0.6198813344769859)))AND(rt0.c3))) AND (((t0.c0) BETWEEN (rt0.c4) AND (NULL)))) LEFT OUTER JOIN vt0 ON UPPER(DISTINCT ((((vt0.c0)OR(rt0.c3)))AND(t0.c0)));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((- (vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((NOT ((- (vt0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((NOT ((- (vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT rt0.c3, vt0.c1, rt0.c0, rt0.c1 FROM vt0, rt0, t0 GROUP BY rt0.c3, vt0.c1, rt0.c0, rt0.c1;
SELECT ALL rt0.c3, vt0.c1, rt0.c0, rt0.c1 FROM vt0, rt0, t0 WHERE (0X3c75ef25) GROUP BY rt0.c3, vt0.c1, rt0.c0, rt0.c1 UNION SELECT rt0.c3, vt0.c1, rt0.c0, rt0.c1 FROM vt0, rt0, t0 WHERE ((NOT (0X3c75ef25))) GROUP BY rt0.c3, vt0.c1, rt0.c0, rt0.c1 UNION SELECT rt0.c3, vt0.c1, rt0.c0, rt0.c1 FROM vt0, rt0, t0 WHERE (((0X3c75ef25) ISNULL)) GROUP BY rt0.c3, vt0.c1, rt0.c0, rt0.c1;
SELECT rt0.c3, vt0.c1, rt0.c0, rt0.c1 FROM vt0, rt0, t0 GROUP BY rt0.c3, vt0.c1, rt0.c0, rt0.c1;
SELECT ALL vt0.c0, rt0.c4, rt0.c2, rt0.c0, t0.c0, rt0.c3, rt0.c1 FROM t0 RIGHT OUTER JOIN vt0 ON (((((vt0.c1))=((rt0.c3))))/(t0.c0)) CROSS JOIN rt0 ON ((((((vt0.c0, rt0.c0, vt0.c1))<((vt0.c0, vt0.c1, vt0.c1)))))>=(((t0.c0 IN ())))) GROUP BY vt0.c0, rt0.c4, rt0.c2, rt0.c0, t0.c0, rt0.c3, rt0.c1;
SELECT ALL * FROM vt0, t0;
SELECT ALL * FROM vt0, t0 WHERE (CAST(((t0.c0)>=(t0.c0)) AS BLOB)) UNION ALL SELECT * FROM vt0, t0 WHERE ((NOT (CAST(((t0.c0)>=(t0.c0)) AS BLOB)))) UNION ALL SELECT ALL * FROM vt0, t0 WHERE (((CAST(((t0.c0)>=(t0.c0)) AS BLOB)) ISNULL));
SELECT ALL * FROM vt0, t0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c2) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0 WHERE (((0.8255067250559791) IS TRUE)) GROUP BY rt0.c3 UNION SELECT rt0.c3 FROM rt0 WHERE ((NOT (((0.8255067250559791) IS TRUE)))) GROUP BY rt0.c3 UNION SELECT rt0.c3 FROM rt0 WHERE (((((0.8255067250559791) IS TRUE)) ISNULL)) GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT vt0.c0, rt0.c3 FROM vt0, t0, rt0 GROUP BY vt0.c0, rt0.c3;
SELECT vt0.c0, rt0.c3 FROM vt0, t0, rt0 GROUP BY vt0.c0, rt0.c3 HAVING SUM(((GROUP_CONCAT(MIN(SUM(rt0.c2)))) ISNULL)) UNION ALL SELECT vt0.c0, rt0.c3 FROM vt0, t0, rt0 GROUP BY vt0.c0, rt0.c3 HAVING (NOT (SUM(((GROUP_CONCAT(MIN(SUM(rt0.c2)))) ISNULL)))) UNION ALL SELECT ALL vt0.c0, rt0.c3 FROM vt0, t0, rt0 GROUP BY vt0.c0, rt0.c3 HAVING ((SUM(((GROUP_CONCAT(MIN(SUM(rt0.c2)))) ISNULL))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((- (rt0.c4))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((- (rt0.c4))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((- (rt0.c4))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT t0.c0, vt0.c1 FROM t0, vt0;
SELECT DISTINCT t0.c0, vt0.c1 FROM t0, vt0 WHERE (CAST(vt0.c0 COLLATE RTRIM AS NUMERIC)) UNION SELECT DISTINCT t0.c0, vt0.c1 FROM t0, vt0 WHERE ((NOT (CAST(vt0.c0 COLLATE RTRIM AS NUMERIC)))) UNION SELECT DISTINCT t0.c0, vt0.c1 FROM t0, vt0 WHERE (((CAST(vt0.c0 COLLATE RTRIM AS NUMERIC)) ISNULL));
SELECT DISTINCT t0.c0, vt0.c1 FROM t0, vt0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE (((((((rt0.c3)IS(NULL)))OR((('') ISNULL))))OR((((rt0.c4, rt0.c2, 0X69eab622, rt0.c1, rt0.c4, rt0.c3, rt0.c3)) NOT BETWEEN ((rt0.c3, rt0.c4, rt0.c1, rt0.c4, rt0.c1, rt0.c3, rt0.c3)) AND ((rt0.c4, rt0.c3, rt0.c3, rt0.c2, rt0.c4, rt0.c1, rt0.c4)))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (((((((rt0.c3)IS(NULL)))OR((('') ISNULL))))OR((((rt0.c4, rt0.c2, 0x69eab622, rt0.c1, rt0.c4, rt0.c3, rt0.c3)) NOT BETWEEN ((rt0.c3, rt0.c4, rt0.c1, rt0.c4, rt0.c1, rt0.c3, rt0.c3)) AND ((rt0.c4, rt0.c3, rt0.c3, rt0.c2, rt0.c4, rt0.c1, rt0.c4)))))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE (((((((((rt0.c3)IS(NULL)))OR((('') ISNULL))))OR((((rt0.c4, rt0.c2, 0x69eab622, rt0.c1, rt0.c4, rt0.c3, rt0.c3)) NOT BETWEEN ((rt0.c3, rt0.c4, rt0.c1, rt0.c4, rt0.c1, rt0.c3, rt0.c3)) AND ((rt0.c4, rt0.c3, rt0.c3, rt0.c2, rt0.c4, rt0.c1, rt0.c4)))))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL vt0.c1, vt0.c0, rt0.c4, rt0.c2, rt0.c3 FROM t0, vt0, rt0 GROUP BY vt0.c1, vt0.c0, rt0.c4, rt0.c2, rt0.c3;
SELECT vt0.c1, vt0.c0, rt0.c4, rt0.c2, rt0.c3 FROM t0, vt0, rt0 GROUP BY vt0.c1, vt0.c0, rt0.c4, rt0.c2, rt0.c3 HAVING ((SUM(rt0.c2)) IS TRUE) UNION ALL SELECT vt0.c1, vt0.c0, rt0.c4, rt0.c2, rt0.c3 FROM t0, vt0, rt0 GROUP BY vt0.c1, vt0.c0, rt0.c4, rt0.c2, rt0.c3 HAVING (NOT (((SUM(rt0.c2)) IS TRUE))) UNION ALL SELECT ALL vt0.c1, vt0.c0, rt0.c4, rt0.c2, rt0.c3 FROM t0, vt0, rt0 GROUP BY vt0.c1, vt0.c0, rt0.c4, rt0.c2, rt0.c3 HAVING ((((SUM(rt0.c2)) IS TRUE)) ISNULL);
SELECT ALL vt0.c1, vt0.c0, rt0.c4, rt0.c2, rt0.c3 FROM t0, vt0, rt0 GROUP BY vt0.c1, vt0.c0, rt0.c4, rt0.c2, rt0.c3;
SELECT vt0.c1, vt0.c0, rt0.c4, rt0.c2, rt0.c3 FROM t0, vt0, rt0 GROUP BY vt0.c1, vt0.c0, rt0.c4, rt0.c2, rt0.c3 HAVING ((SUM(rt0.c2)) IS TRUE) UNION ALL SELECT vt0.c1, vt0.c0, rt0.c4, rt0.c2, rt0.c3 FROM t0, vt0, rt0 GROUP BY vt0.c1, vt0.c0, rt0.c4, rt0.c2, rt0.c3 HAVING (NOT (((SUM(rt0.c2)) IS TRUE))) UNION ALL SELECT ALL vt0.c1, vt0.c0, rt0.c4, rt0.c2, rt0.c3 FROM t0, vt0, rt0 GROUP BY vt0.c1, vt0.c0, rt0.c4, rt0.c2, rt0.c3 HAVING ((((SUM(rt0.c2)) IS TRUE)) ISNULL);
SELECT ALL vt0.c1, vt0.c0, rt0.c4, rt0.c2, rt0.c3 FROM t0, vt0, rt0 GROUP BY vt0.c1, vt0.c0, rt0.c4, rt0.c2, rt0.c3;
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c1 COLLATE NOCASE) NOT BETWEEN (DATETIME(vt0.c0, vt0.c0, vt0.c1)) AND ((((vt0.c0))<>((vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c1 COLLATE NOCASE) NOT BETWEEN (DATETIME(vt0.c0, vt0.c0, vt0.c1)) AND ((((vt0.c0))<>((vt0.c0)))))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c1 COLLATE NOCASE) NOT BETWEEN (DATETIME(vt0.c0, vt0.c0, vt0.c1)) AND ((((vt0.c0))<>((vt0.c0)))))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((vt0.c0) NOTNULL)) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0) NOTNULL)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((vt0.c0) NOTNULL)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c1, t0.c0, vt0.c0 FROM vt0, t0 GROUP BY vt0.c1, t0.c0, vt0.c0;
SELECT ALL vt0.c1, t0.c0, vt0.c0 FROM vt0, t0 WHERE ((NULL IN ())) GROUP BY vt0.c1, t0.c0, vt0.c0 UNION SELECT ALL vt0.c1, t0.c0, vt0.c0 FROM vt0, t0 WHERE ((NOT ((NULL IN ())))) GROUP BY vt0.c1, t0.c0, vt0.c0 UNION SELECT ALL vt0.c1, t0.c0, vt0.c0 FROM vt0, t0 WHERE ((((NULL IN ())) ISNULL)) GROUP BY vt0.c1, t0.c0, vt0.c0;
SELECT ALL vt0.c1, t0.c0, vt0.c0 FROM vt0, t0 GROUP BY vt0.c1, t0.c0, vt0.c0;
SELECT rt0.c4, vt0.c0, rt0.c0, rt0.c2 FROM t0, vt0, rt0 GROUP BY rt0.c4, vt0.c0, rt0.c0, rt0.c2;
SELECT rt0.c4, vt0.c0, rt0.c0, rt0.c2 FROM t0, vt0, rt0 GROUP BY rt0.c4, vt0.c0, rt0.c0, rt0.c2 HAVING (MIN(rt0.c3) IN (TOTAL(t0.c0), TOTAL(GROUP_CONCAT(SUM(MAX(rt0.c4)))))) UNION ALL SELECT rt0.c4, vt0.c0, rt0.c0, rt0.c2 FROM t0, vt0, rt0 GROUP BY rt0.c4, vt0.c0, rt0.c0, rt0.c2 HAVING (NOT ((MIN(rt0.c3) IN (TOTAL(t0.c0), TOTAL(GROUP_CONCAT(SUM(MAX(rt0.c4)))))))) UNION ALL SELECT ALL rt0.c4, vt0.c0, rt0.c0, rt0.c2 FROM t0, vt0, rt0 GROUP BY rt0.c4, vt0.c0, rt0.c0, rt0.c2 HAVING (((MIN(rt0.c3) IN (TOTAL(t0.c0), TOTAL(GROUP_CONCAT(SUM(MAX(rt0.c4))))))) ISNULL);
SELECT * FROM t0, vt0;
SELECT * FROM t0, vt0 WHERE (0.21251650426144786) UNION ALL SELECT ALL * FROM t0, vt0 WHERE ((NOT (0.21251650426144786))) UNION ALL SELECT * FROM t0, vt0 WHERE (((0.21251650426144786) ISNULL));
SELECT * FROM t0, vt0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((+ (t0.c0)) IN ())) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (((+ (t0.c0)) IN ())))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((((+ (t0.c0)) IN ())) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL rt0.c4, vt0.c1, t0.c0, vt0.c0 FROM t0, rt0, vt0 GROUP BY rt0.c4, vt0.c1, t0.c0, vt0.c0;
SELECT ALL rt0.c4, vt0.c1, t0.c0, vt0.c0 FROM t0, rt0, vt0 WHERE ((rt0.c4 COLLATE NOCASE IN (((vt0.c0)IS NOT('TRUE')), rt0.c2 COLLATE BINARY))) GROUP BY rt0.c4, vt0.c1, t0.c0, vt0.c0 UNION SELECT ALL rt0.c4, vt0.c1, t0.c0, vt0.c0 FROM t0, rt0, vt0 WHERE ((NOT ((rt0.c4 COLLATE NOCASE IN (((vt0.c0)IS NOT('TRUE')), rt0.c2 COLLATE BINARY))))) GROUP BY rt0.c4, vt0.c1, t0.c0, vt0.c0 UNION SELECT rt0.c4, vt0.c1, t0.c0, vt0.c0 FROM t0, rt0, vt0 WHERE ((((rt0.c4 COLLATE NOCASE IN (((vt0.c0)IS NOT('TRUE')), rt0.c2 COLLATE BINARY))) ISNULL)) GROUP BY rt0.c4, vt0.c1, t0.c0, vt0.c0;
SELECT ALL rt0.c4, vt0.c1, t0.c0, vt0.c0 FROM t0, rt0, vt0 GROUP BY rt0.c4, vt0.c1, t0.c0, vt0.c0;
SELECT ALL rt0.c0, rt0.c3, rt0.c1, vt0.c1, rt0.c2, t0.c0, rt0.c4, vt0.c0 FROM t0, vt0 FULL OUTER JOIN rt0 ON CAST(((rt0.c4)!=(vt0.c1)) AS INTEGER) GROUP BY rt0.c0, rt0.c3, rt0.c1, vt0.c1, rt0.c2, t0.c0, rt0.c4, vt0.c0;
SELECT rt0.c0, rt0.c3, rt0.c1, vt0.c1, rt0.c2, t0.c0, rt0.c4, vt0.c0 FROM t0, vt0 FULL OUTER JOIN rt0 ON CAST(((rt0.c4)<>(vt0.c1)) AS INTEGER) GROUP BY rt0.c0, rt0.c3, rt0.c1, vt0.c1, rt0.c2, t0.c0, rt0.c4, vt0.c0 HAVING COUNT(MIN(COUNT(*))) UNION ALL SELECT rt0.c0, rt0.c3, rt0.c1, vt0.c1, rt0.c2, t0.c0, rt0.c4, vt0.c0 FROM t0, vt0 FULL OUTER JOIN rt0 ON CAST(((rt0.c4)!=(vt0.c1)) AS INTEGER) GROUP BY rt0.c0, rt0.c3, rt0.c1, vt0.c1, rt0.c2, t0.c0, rt0.c4, vt0.c0 HAVING (NOT (COUNT(MIN(COUNT(*))))) UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c1, vt0.c1, rt0.c2, t0.c0, rt0.c4, vt0.c0 FROM t0, vt0 FULL OUTER JOIN rt0 ON CAST(((rt0.c4)!=(vt0.c1)) AS INTEGER) GROUP BY rt0.c0, rt0.c3, rt0.c1, vt0.c1, rt0.c2, t0.c0, rt0.c4, vt0.c0 HAVING ((COUNT(MIN(COUNT(*)))) ISNULL);
SELECT rt0.c3, rt0.c4, rt0.c1 FROM rt0, vt0, t0;
SELECT rt0.c3, rt0.c4, rt0.c1 FROM rt0, vt0, t0 WHERE (IFNULL(DISTINCT TRIM(DISTINCT rt0.c0, rt0.c3), ((rt0.c1)+(rt0.c0)))) UNION ALL SELECT ALL rt0.c3, rt0.c4, rt0.c1 FROM rt0, vt0, t0 WHERE ((NOT (IFNULL(DISTINCT TRIM(DISTINCT rt0.c0, rt0.c3), ((rt0.c1)+(rt0.c0)))))) UNION ALL SELECT rt0.c3, rt0.c4, rt0.c1 FROM rt0, vt0, t0 WHERE (((IFNULL(DISTINCT TRIM(DISTINCT rt0.c0, rt0.c3), ((rt0.c1)+(rt0.c0)))) ISNULL));
SELECT rt0.c3, rt0.c4, rt0.c1 FROM rt0, vt0, t0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (0.29031706277616187) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (0.29031706277616187))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((0.29031706277616187) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c1, vt0.c0 FROM vt0, rt0, t0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0, rt0, t0 WHERE (((((((0xffffffffd2a32498)AND(vt0.c1)))OR(vt0.c1)))IS NOT((((rt0.c1))>=((rt0.c4)))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0, rt0, t0 WHERE ((NOT (((((((0xffffffffd2a32498)AND(vt0.c1)))OR(vt0.c1)))IS NOT((((rt0.c1))>=((rt0.c4)))))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0, rt0, t0 WHERE (((((((((0xffffffffd2a32498)AND(vt0.c1)))OR(vt0.c1)))IS NOT((((rt0.c1))>=((rt0.c4)))))) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0, rt0, t0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING SUM(((((GROUP_CONCAT(MIN(t0.c0)))AND(MAX(MAX(t0.c0)))))AND(TOTAL(MIN(COUNT(*)))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (SUM(((((GROUP_CONCAT(MIN(t0.c0)))AND(MAX(MAX(t0.c0)))))AND(TOTAL(MIN(COUNT(*)))))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((SUM(((((GROUP_CONCAT(MIN(t0.c0)))AND(MAX(MAX(t0.c0)))))AND(TOTAL(MIN(COUNT(*))))))) ISNULL);
SELECT ALL rt0.c1, rt0.c3, rt0.c4, t0.c0, rt0.c2 FROM t0, rt0;
SELECT ALL rt0.c1, rt0.c3, rt0.c4, t0.c0, rt0.c2 FROM t0, rt0 WHERE (((((x'')IS(rt0.c4))) ISNULL)) UNION ALL SELECT rt0.c1, rt0.c3, rt0.c4, t0.c0, rt0.c2 FROM t0, rt0 WHERE ((NOT (((((x'')IS(rt0.c4))) ISNULL)))) UNION ALL SELECT ALL rt0.c1, rt0.c3, rt0.c4, t0.c0, rt0.c2 FROM t0, rt0 WHERE (((((((x'')IS(rt0.c4))) ISNULL)) ISNULL));
SELECT ALL rt0.c1, rt0.c3, rt0.c4, t0.c0, rt0.c2 FROM t0, rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (NULL) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM vt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL rt0.c3, vt0.c1 FROM vt0, t0, rt0 GROUP BY rt0.c3, vt0.c1;
SELECT ALL rt0.c3, vt0.c1 FROM vt0, t0, rt0 WHERE ((((((vt0.c1)>(0X327e49a8))))<=(((- (rt0.c1)))))) GROUP BY rt0.c3, vt0.c1 UNION SELECT ALL rt0.c3, vt0.c1 FROM vt0, t0, rt0 WHERE ((NOT ((((((vt0.c1)>(0x327e49a8))))<=(((- (rt0.c1)))))))) GROUP BY rt0.c3, vt0.c1 UNION SELECT ALL rt0.c3, vt0.c1 FROM vt0, t0, rt0 WHERE ((((((((vt0.c1)>(0x327e49a8))))<=(((- (rt0.c1)))))) ISNULL)) GROUP BY rt0.c3, vt0.c1;
SELECT ALL rt0.c3, vt0.c1 FROM vt0, t0, rt0 GROUP BY rt0.c3, vt0.c1;
SELECT rt0.c3, rt0.c0, rt0.c2, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1, rt0.c4;
SELECT rt0.c3, rt0.c0, rt0.c2, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1, rt0.c4 HAVING COUNT(*) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c2, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1, rt0.c4 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c2, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1, rt0.c4 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c3, rt0.c0, rt0.c2, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1, rt0.c4;
SELECT rt0.c3, rt0.c0, rt0.c2, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1, rt0.c4 HAVING COUNT(*) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c2, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1, rt0.c4 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c2, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1, rt0.c4 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c3, rt0.c0, rt0.c2, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1, rt0.c4;
SELECT t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE (t0.c0) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT (t0.c0))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE (((t0.c0) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c4, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c4, rt0.c2 FROM rt0 WHERE (CASE WHEN ((rt0.c2) ISNULL) THEN ((rt0.c1)-(rt0.c4)) END) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c4, rt0.c2 FROM rt0 WHERE ((NOT (CASE WHEN ((rt0.c2) ISNULL) THEN ((rt0.c1)-(rt0.c4)) END))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c4, rt0.c2 FROM rt0 WHERE (((CASE WHEN ((rt0.c2) ISNULL) THEN ((rt0.c1)-(rt0.c4)) END) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c4, rt0.c2 FROM rt0;
SELECT rt0.c1, rt0.c4, rt0.c2, rt0.c3, rt0.c0 FROM t0, rt0 GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c3, rt0.c0;
SELECT rt0.c1, rt0.c4, rt0.c2, rt0.c3, rt0.c0 FROM t0, rt0 WHERE (NULL) GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c3, rt0.c0 UNION SELECT rt0.c1, rt0.c4, rt0.c2, rt0.c3, rt0.c0 FROM t0 NOT INDEXED, rt0 WHERE ((NOT (NULL))) GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c3, rt0.c0 UNION SELECT rt0.c1, rt0.c4, rt0.c2, rt0.c3, rt0.c0 FROM t0, rt0 WHERE (((NULL) ISNULL)) GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c3, rt0.c0;
SELECT rt0.c1, rt0.c4, rt0.c2, rt0.c3, rt0.c0 FROM t0, rt0 GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c3, rt0.c0;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING vt0.c0 UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((vt0.c0) ISNULL);
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING vt0.c0 UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((vt0.c0) ISNULL);
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT rt0.c0, rt0.c1, rt0.c4, vt0.c1, rt0.c3, rt0.c2 FROM vt0, rt0 INNER JOIN t0 ON NULL;
SELECT ALL rt0.c0, rt0.c1, rt0.c4, vt0.c1, rt0.c3, rt0.c2 FROM vt0, rt0 INNER JOIN t0 ON NULL WHERE (((MAX(0.4530373616065352, rt0.c0))IS(((vt0.c0)>(vt0.c0))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c4, vt0.c1, rt0.c3, rt0.c2 FROM vt0, rt0 INNER JOIN t0 ON NULL WHERE ((NOT (((MAX(0.4530373616065352, rt0.c0))IS(((vt0.c0)>(vt0.c0))))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c4, vt0.c1, rt0.c3, rt0.c2 FROM vt0, rt0 INNER JOIN t0 ON NULL WHERE (((((MAX(0.4530373616065352, rt0.c0))IS(((vt0.c0)>(vt0.c0))))) ISNULL));
SELECT rt0.c0, rt0.c1, rt0.c4, vt0.c1, rt0.c3, rt0.c2 FROM vt0, rt0 INNER JOIN t0 ON NULL;
SELECT DISTINCT * FROM vt0 CROSS JOIN rt0 ON CAST(((rt0.c0) NOTNULL) AS BLOB);
SELECT DISTINCT * FROM vt0 CROSS JOIN rt0 ON CAST(((rt0.c0) NOTNULL) AS BLOB) WHERE (((CAST(vt0.c1 AS NUMERIC)) NOT NULL)) UNION SELECT DISTINCT * FROM vt0 CROSS JOIN rt0 ON CAST(((rt0.c0) NOTNULL) AS BLOB) WHERE ((NOT (((CAST(vt0.c1 AS NUMERIC)) NOT NULL)))) UNION SELECT DISTINCT * FROM vt0 CROSS JOIN rt0 ON CAST(((rt0.c0) NOTNULL) AS BLOB) WHERE (((((CAST(vt0.c1 AS NUMERIC)) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM vt0 CROSS JOIN rt0 ON CAST(((rt0.c0) NOTNULL) AS BLOB);
SELECT ALL vt0.c1 FROM rt0, vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM rt0, vt0 WHERE (rt0.c3 COLLATE RTRIM) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM rt0, vt0 WHERE ((NOT (rt0.c3 COLLATE RTRIM))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM rt0, vt0 WHERE (((rt0.c3 COLLATE RTRIM) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM rt0, vt0 GROUP BY vt0.c1;
SELECT ALL rt0.c0, rt0.c1, vt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, vt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, vt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, vt0.c1, rt0.c2 HAVING GROUP_CONCAT(MIN(GROUP_CONCAT(AVG(MAX(TOTAL(rt0.c1)))))) UNION ALL SELECT rt0.c0, rt0.c1, vt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, vt0.c1, rt0.c2 HAVING (NOT (GROUP_CONCAT(MIN(GROUP_CONCAT(AVG(MAX(TOTAL(rt0.c1)))))))) UNION ALL SELECT rt0.c0, rt0.c1, vt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, vt0.c1, rt0.c2 HAVING ((GROUP_CONCAT(MIN(GROUP_CONCAT(AVG(MAX(TOTAL(rt0.c1))))))) ISNULL);
SELECT ALL * FROM t0 FULL OUTER JOIN rt0 ON (CAST(rt0.c3 AS BLOB) IN ());
SELECT ALL * FROM t0 FULL OUTER JOIN rt0 ON (CAST(rt0.c3 AS BLOB) IN ()) WHERE (((((rt0.c4)>=(rt0.c0)))>=(((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c3)))OR(rt0.c1)))AND(t0.c0))))) UNION ALL SELECT ALL * FROM t0 FULL OUTER JOIN rt0 ON (CAST(rt0.c3 AS BLOB) IN ()) WHERE ((NOT (((((rt0.c4)>=(rt0.c0)))>=(((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c3)))OR(rt0.c1)))AND(t0.c0))))))) UNION ALL SELECT * FROM t0 FULL OUTER JOIN rt0 ON (CAST(rt0.c3 AS BLOB) IN ()) WHERE (((((((rt0.c4)>=(rt0.c0)))>=(((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c3)))OR(rt0.c1)))AND(t0.c0))))) ISNULL));
SELECT ALL * FROM t0 FULL OUTER JOIN rt0 ON (CAST(rt0.c3 AS BLOB) IN ());
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (0.9399411758632671) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (0.9399411758632671))) UNION SELECT DISTINCT * FROM t0 WHERE (((0.9399411758632671) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT rt0.c2, vt0.c1, t0.c0, rt0.c1, rt0.c4, rt0.c3 FROM t0, vt0, rt0 NOT INDEXED GROUP BY rt0.c2, vt0.c1, t0.c0, rt0.c1, rt0.c4, rt0.c3;
SELECT ALL rt0.c2, vt0.c1, t0.c0, rt0.c1, rt0.c4, rt0.c3 FROM t0, vt0, rt0 WHERE (((((((((vt0.c0)OR(vt0.c0)))OR(rt0.c2)))OR(((rt0.c3) IS TRUE))))AND(((vt0.c0)!=(vt0.c1))))) GROUP BY rt0.c2, vt0.c1, t0.c0, rt0.c1, rt0.c4, rt0.c3 UNION SELECT ALL rt0.c2, vt0.c1, t0.c0, rt0.c1, rt0.c4, rt0.c3 FROM t0, vt0, rt0 NOT INDEXED WHERE ((NOT (((((((((vt0.c0)OR(vt0.c0)))OR(rt0.c2)))OR(((rt0.c3) IS TRUE))))AND(((vt0.c0)<>(vt0.c1))))))) GROUP BY rt0.c2, vt0.c1, t0.c0, rt0.c1, rt0.c4, rt0.c3 UNION SELECT rt0.c2, vt0.c1, t0.c0, rt0.c1, rt0.c4, rt0.c3 FROM t0, vt0, rt0 WHERE (((((((((((vt0.c0)OR(vt0.c0)))OR(rt0.c2)))OR(((rt0.c3) IS TRUE))))AND(((vt0.c0)!=(vt0.c1))))) ISNULL)) GROUP BY rt0.c2, vt0.c1, t0.c0, rt0.c1, rt0.c4, rt0.c3;
SELECT rt0.c2, vt0.c1, t0.c0, rt0.c1, rt0.c4, rt0.c3 FROM t0, vt0, rt0 NOT INDEXED GROUP BY rt0.c2, vt0.c1, t0.c0, rt0.c1, rt0.c4, rt0.c3;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((t0.c0 COLLATE NOCASE) NOTNULL) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((t0.c0 COLLATE NOCASE) NOTNULL))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((t0.c0 COLLATE NOCASE) NOTNULL)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((t0.c0 COLLATE NOCASE) NOTNULL) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((t0.c0 COLLATE NOCASE) NOTNULL))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((t0.c0 COLLATE NOCASE) NOTNULL)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL MIN(((((((vt0.c0)IS NOT(t0.c0)))AND(CAST(vt0.c0 AS INTEGER))))AND(LIKELIHOOD(t0.c0, 0.6817732091329013)))) FROM t0, vt0;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))IS((('1776989730') NOTNULL)))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))IS((('1776989730') NOTNULL)))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))IS((('1776989730') NOTNULL)))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT rt0.c3, rt0.c1, rt0.c4, vt0.c0, rt0.c2, rt0.c0, t0.c0 FROM rt0 FULL OUTER JOIN t0 ON (((rt0.c3)) NOT BETWEEN ((((vt0.c0)||(vt0.c1)))) AND (((+ (t0.c0))))) INNER JOIN vt0 ON ((CAST(rt0.c0 AS TEXT)) ISNULL);
SELECT ALL vt0.c0, vt0.c1, rt0.c4 FROM rt0, vt0 GROUP BY vt0.c0, vt0.c1, rt0.c4;
SELECT ALL vt0.c0, vt0.c1, rt0.c4 FROM rt0, vt0 WHERE (((((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c4))) NOT BETWEEN (NULL) AND (((rt0.c1)||(vt0.c0))))) GROUP BY vt0.c0, vt0.c1, rt0.c4 UNION SELECT ALL vt0.c0, vt0.c1, rt0.c4 FROM rt0, vt0 WHERE ((NOT (((((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c4))) NOT BETWEEN (NULL) AND (((rt0.c1)||(vt0.c0))))))) GROUP BY vt0.c0, vt0.c1, rt0.c4 UNION SELECT ALL vt0.c0, vt0.c1, rt0.c4 FROM rt0, vt0 WHERE (((((((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c4))) NOT BETWEEN (NULL) AND (((rt0.c1)||(vt0.c0))))) ISNULL)) GROUP BY vt0.c0, vt0.c1, rt0.c4;
SELECT ALL vt0.c0, vt0.c1, rt0.c4 FROM rt0, vt0 GROUP BY vt0.c0, vt0.c1, rt0.c4;
SELECT vt0.c0, vt0.c1, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, vt0.c1, t0.c0;
SELECT vt0.c0, vt0.c1, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, vt0.c1, t0.c0 HAVING GLOB((NOT (SUM(vt0.c0))), TOTAL(GROUP_CONCAT(COUNT(vt0.c0)))) UNION ALL SELECT ALL vt0.c0, vt0.c1, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, vt0.c1, t0.c0 HAVING (NOT (GLOB((NOT (SUM(vt0.c0))), TOTAL(GROUP_CONCAT(COUNT(vt0.c0)))))) UNION ALL SELECT ALL vt0.c0, vt0.c1, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, vt0.c1, t0.c0 HAVING ((GLOB((NOT (SUM(vt0.c0))), TOTAL(GROUP_CONCAT(COUNT(vt0.c0))))) ISNULL);
SELECT MIN(((((vt0.c0)+(vt0.c0)))IS(((((((((-8.36127191E8)AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c1))))) FROM vt0;
SELECT ALL rt0.c0, vt0.c1, rt0.c4, rt0.c1, vt0.c0, t0.c0, rt0.c2, rt0.c3 FROM t0 FULL OUTER JOIN vt0 ON CAST(((((((((vt0.c0)OR(rt0.c3)))OR(rt0.c3)))AND(rt0.c3)))AND(vt0.c0)) AS INTEGER) CROSS JOIN rt0 ON ((((t0.c0) NOTNULL))=((((vt0.c0))>=((rt0.c0)))));
SELECT DISTINCT vt0.c0, t0.c0 FROM t0, rt0, vt0 INDEXED BY i75;
SELECT ALL rt0.c3 FROM rt0 CROSS JOIN t0 ON (((((~ (t0.c0)))OR(CAST('t*{ TDn ' AS INTEGER))))OR(((rt0.c1)AND(rt0.c3)))) GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0 CROSS JOIN t0 ON (((((~ (t0.c0)))OR(CAST('t*{ TDn ' AS INTEGER))))OR(((rt0.c1)AND(rt0.c3)))) WHERE (((rt0.c0) ISNULL)) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM rt0 CROSS JOIN t0 ON (((((~ (t0.c0)))OR(CAST('t*{ TDn ' AS INTEGER))))OR(((rt0.c1)AND(rt0.c3)))) WHERE ((NOT (((rt0.c0) ISNULL)))) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM rt0 CROSS JOIN t0 ON (((((~ (t0.c0)))OR(CAST('t*{ TDn ' AS INTEGER))))OR(((rt0.c1)AND(rt0.c3)))) WHERE (((((rt0.c0) ISNULL)) ISNULL)) GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0 CROSS JOIN t0 ON (((((~ (t0.c0)))OR(CAST('t*{ TDn ' AS INTEGER))))OR(((rt0.c1)AND(rt0.c3)))) GROUP BY rt0.c3;
SELECT ALL rt0.c4, vt0.c0, rt0.c1 FROM rt0, t0, vt0 GROUP BY rt0.c4, vt0.c0, rt0.c1;
SELECT rt0.c4, vt0.c0, rt0.c1 FROM rt0, t0, vt0 GROUP BY rt0.c4, vt0.c0, rt0.c1 HAVING AVG(SUM(AVG(TOTAL(COUNT(*))))) UNION ALL SELECT ALL rt0.c4, vt0.c0, rt0.c1 FROM rt0, t0, vt0 GROUP BY rt0.c4, vt0.c0, rt0.c1 HAVING (NOT (AVG(SUM(AVG(TOTAL(COUNT(*))))))) UNION ALL SELECT ALL rt0.c4, vt0.c0, rt0.c1 FROM rt0, t0, vt0 GROUP BY rt0.c4, vt0.c0, rt0.c1 HAVING ((AVG(SUM(AVG(TOTAL(COUNT(*)))))) ISNULL);
SELECT ALL * FROM rt0, t0;
SELECT * FROM rt0, t0 WHERE (((rt0.c2)LIKE(CAST(rt0.c1 AS NUMERIC)))) UNION ALL SELECT ALL * FROM rt0, t0 WHERE ((NOT (((rt0.c2)LIKE(CAST(rt0.c1 AS NUMERIC)))))) UNION ALL SELECT ALL * FROM rt0, t0 WHERE (((((rt0.c2)LIKE(CAST(rt0.c1 AS NUMERIC)))) ISNULL));
SELECT ALL * FROM rt0, t0;
SELECT DISTINCT * FROM rt0 INNER JOIN vt0 ON ((rt0.c3)IS NOT(((rt0.c4) BETWEEN (rt0.c3) AND (vt0.c1)))) CROSS JOIN t0 ON ((rt0.c1 COLLATE RTRIM)||(((rt0.c0) NOT BETWEEN (rt0.c3) AND (t0.c0))));
SELECT DISTINCT * FROM rt0 INNER JOIN vt0 ON ((rt0.c3)IS NOT(((rt0.c4) BETWEEN (rt0.c3) AND (vt0.c1)))) CROSS JOIN t0 ON ((rt0.c1 COLLATE RTRIM)||(((rt0.c0) NOT BETWEEN (rt0.c3) AND (t0.c0)))) WHERE ((((((((((rt0.c2)AND(rt0.c3)))AND(rt0.c4)))OR(rt0.c0)))OR(rt0.c0)) IN ())) UNION SELECT DISTINCT * FROM rt0 INNER JOIN vt0 ON ((rt0.c3)IS NOT(((rt0.c4) BETWEEN (rt0.c3) AND (vt0.c1)))) CROSS JOIN t0 ON ((rt0.c1 COLLATE RTRIM)||(((rt0.c0) NOT BETWEEN (rt0.c3) AND (t0.c0)))) WHERE ((NOT ((((((((((rt0.c2)AND(rt0.c3)))AND(rt0.c4)))OR(rt0.c0)))OR(rt0.c0)) IN ())))) UNION SELECT DISTINCT * FROM rt0 INNER JOIN vt0 ON ((rt0.c3)IS NOT(((rt0.c4) BETWEEN (rt0.c3) AND (vt0.c1)))) CROSS JOIN t0 ON ((rt0.c1 COLLATE RTRIM)||(((rt0.c0) NOT BETWEEN (rt0.c3) AND (t0.c0)))) WHERE ((((((((((((rt0.c2)AND(rt0.c3)))AND(rt0.c4)))OR(rt0.c0)))OR(rt0.c0)) IN ())) ISNULL));
SELECT DISTINCT * FROM rt0 INNER JOIN vt0 ON ((rt0.c3)IS NOT(((rt0.c4) BETWEEN (rt0.c3) AND (vt0.c1)))) CROSS JOIN t0 ON ((rt0.c1 COLLATE RTRIM)||(((rt0.c0) NOT BETWEEN (rt0.c3) AND (t0.c0))));
SELECT vt0.c0, rt0.c3, rt0.c4, rt0.c0 FROM rt0, t0, vt0 GROUP BY vt0.c0, rt0.c3, rt0.c4, rt0.c0;
SELECT ALL vt0.c0, rt0.c3, rt0.c4, rt0.c0 FROM rt0, t0, vt0 WHERE (((vt0.c1 IN ()) IN ())) GROUP BY vt0.c0, rt0.c3, rt0.c4, rt0.c0 UNION SELECT ALL vt0.c0, rt0.c3, rt0.c4, rt0.c0 FROM rt0, t0, vt0 WHERE ((NOT (((vt0.c1 IN ()) IN ())))) GROUP BY vt0.c0, rt0.c3, rt0.c4, rt0.c0 UNION SELECT ALL vt0.c0, rt0.c3, rt0.c4, rt0.c0 FROM rt0, t0, vt0 WHERE (((((vt0.c1 IN ()) IN ())) ISNULL)) GROUP BY vt0.c0, rt0.c3, rt0.c4, rt0.c0;
SELECT vt0.c0, rt0.c3, rt0.c4, rt0.c0 FROM rt0, t0, vt0 GROUP BY vt0.c0, rt0.c3, rt0.c4, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0 HAVING TOTAL(MIN(rt0.c1)) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (TOTAL(MIN(rt0.c1)))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0 HAVING ((TOTAL(MIN(rt0.c1))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (CASE (((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0)))  WHEN (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))) THEN ((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)) END) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CASE (((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0)))  WHEN (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))) THEN ((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)) END))) UNION ALL SELECT * FROM rt0 WHERE (((CASE (((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0)))  WHEN (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))) THEN ((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)) END) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM t0, vt0, rt0;
SELECT DISTINCT * FROM t0, vt0, rt0 WHERE ((rt0.c1 IN ()) COLLATE RTRIM) UNION SELECT DISTINCT * FROM t0, vt0, rt0 WHERE ((NOT ((rt0.c1 IN ()) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM t0, vt0, rt0 WHERE ((((rt0.c1 IN ()) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM t0, vt0, rt0;
SELECT rt0.c1, t0.c0, rt0.c3, rt0.c4 FROM vt0, rt0, t0 NOT INDEXED GROUP BY rt0.c1, t0.c0, rt0.c3, rt0.c4;
SELECT rt0.c1, t0.c0, rt0.c3, rt0.c4 FROM vt0, rt0, t0 WHERE ((~ (rt0.c1))) GROUP BY rt0.c1, t0.c0, rt0.c3, rt0.c4 UNION SELECT rt0.c1, t0.c0, rt0.c3, rt0.c4 FROM vt0, rt0, t0 WHERE ((NOT ((~ (rt0.c1))))) GROUP BY rt0.c1, t0.c0, rt0.c3, rt0.c4 UNION SELECT ALL rt0.c1, t0.c0, rt0.c3, rt0.c4 FROM vt0, rt0, t0 WHERE ((((~ (rt0.c1))) ISNULL)) GROUP BY rt0.c1, t0.c0, rt0.c3, rt0.c4;
SELECT rt0.c1, t0.c0, rt0.c3, rt0.c4 FROM vt0, rt0, t0 NOT INDEXED GROUP BY rt0.c1, t0.c0, rt0.c3, rt0.c4;
SELECT ALL rt0.c2, rt0.c1, rt0.c3, vt0.c1, rt0.c0, t0.c0 FROM t0, rt0, vt0 GROUP BY rt0.c2, rt0.c1, rt0.c3, vt0.c1, rt0.c0, t0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c3, vt0.c1, rt0.c0, t0.c0 FROM t0, rt0, vt0 GROUP BY rt0.c2, rt0.c1, rt0.c3, vt0.c1, rt0.c0, t0.c0 HAVING ((((((((((TOTAL(MIN(t0.c0)))OR(t0.c0)))AND(MAX(rt0.c2))))AND(TOTAL(TOTAL(rt0.c4)))))OR(vt0.c1)))|(COUNT(*))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c3, vt0.c1, rt0.c0, t0.c0 FROM t0, rt0, vt0 GROUP BY rt0.c2, rt0.c1, rt0.c3, vt0.c1, rt0.c0, t0.c0 HAVING (NOT (((((((((((TOTAL(MIN(t0.c0)))OR(t0.c0)))AND(MAX(rt0.c2))))AND(TOTAL(TOTAL(rt0.c4)))))OR(vt0.c1)))|(COUNT(*))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c3, vt0.c1, rt0.c0, t0.c0 FROM t0, rt0, vt0 GROUP BY rt0.c2, rt0.c1, rt0.c3, vt0.c1, rt0.c0, t0.c0 HAVING ((((((((((((TOTAL(MIN(t0.c0)))OR(t0.c0)))AND(MAX(rt0.c2))))AND(TOTAL(TOTAL(rt0.c4)))))OR(vt0.c1)))|(COUNT(*)))) ISNULL);
SELECT ALL rt0.c3, rt0.c1, rt0.c0 FROM vt0, rt0 CROSS JOIN t0 ON CASE CASE rt0.c4  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c4 THEN x'ee96' WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END  WHEN (((x'55ea')) BETWEEN ((rt0.c2)) AND ((t0.c0))) THEN ((((rt0.c2)OR(rt0.c3)))AND(x'')) WHEN ((rt0.c1)IS NOT(vt0.c0)) THEN ((vt0.c1) NOTNULL) WHEN CASE '-979103969'  WHEN vt0.c1 THEN t0.c0 END THEN vt0.c1 ELSE ((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))OR(rt0.c1)))OR(rt0.c4)) END;
SELECT rt0.c3, rt0.c1, rt0.c0 FROM vt0, rt0 CROSS JOIN t0 ON CASE CASE rt0.c4  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c4 THEN x'ee96' WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END  WHEN (((x'55ea')) BETWEEN ((rt0.c2)) AND ((t0.c0))) THEN ((((rt0.c2)OR(rt0.c3)))AND(x'')) WHEN ((rt0.c1)IS NOT(vt0.c0)) THEN ((vt0.c1) NOTNULL) WHEN CASE '-979103969'  WHEN vt0.c1 THEN t0.c0 END THEN vt0.c1 ELSE ((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))OR(rt0.c1)))OR(rt0.c4)) END WHERE (((((((rt0.c0)<<(vt0.c1)))AND((((t0.c0))>((t0.c0))))))AND(((vt0.c1) NOT BETWEEN (vt0.c0) AND (t0.c0))))) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c0 FROM vt0, rt0 CROSS JOIN t0 ON CASE CASE rt0.c4  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c4 THEN x'ee96' WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END  WHEN (((x'55ea')) BETWEEN ((rt0.c2)) AND ((t0.c0))) THEN ((((rt0.c2)OR(rt0.c3)))AND(x'')) WHEN ((rt0.c1)IS NOT(vt0.c0)) THEN ((vt0.c1) NOTNULL) WHEN CASE '-979103969'  WHEN vt0.c1 THEN t0.c0 END THEN vt0.c1 ELSE ((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))OR(rt0.c1)))OR(rt0.c4)) END WHERE ((NOT (((((((rt0.c0)<<(vt0.c1)))AND((((t0.c0))>((t0.c0))))))AND(((vt0.c1) NOT BETWEEN (vt0.c0) AND (t0.c0))))))) UNION ALL SELECT rt0.c3, rt0.c1, rt0.c0 FROM vt0, rt0 CROSS JOIN t0 ON CASE CASE rt0.c4  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c4 THEN x'ee96' WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END  WHEN (((x'55ea')) BETWEEN ((rt0.c2)) AND ((t0.c0))) THEN ((((rt0.c2)OR(rt0.c3)))AND(x'')) WHEN ((rt0.c1)IS NOT(vt0.c0)) THEN ((vt0.c1) NOTNULL) WHEN CASE '-979103969'  WHEN vt0.c1 THEN t0.c0 END THEN vt0.c1 ELSE ((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))OR(rt0.c1)))OR(rt0.c4)) END WHERE (((((((((rt0.c0)<<(vt0.c1)))AND((((t0.c0))>((t0.c0))))))AND(((vt0.c1) NOT BETWEEN (vt0.c0) AND (t0.c0))))) ISNULL));
SELECT ALL rt0.c3, rt0.c1, rt0.c0 FROM vt0, rt0 CROSS JOIN t0 ON CASE CASE rt0.c4  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c4 THEN x'ee96' WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END  WHEN (((x'55ea')) BETWEEN ((rt0.c2)) AND ((t0.c0))) THEN ((((rt0.c2)OR(rt0.c3)))AND(x'')) WHEN ((rt0.c1)IS NOT(vt0.c0)) THEN ((vt0.c1) NOTNULL) WHEN CASE '-979103969'  WHEN vt0.c1 THEN t0.c0 END THEN vt0.c1 ELSE ((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))OR(rt0.c1)))OR(rt0.c4)) END;
SELECT DISTINCT * FROM vt0, t0, rt0;
SELECT DISTINCT * FROM vt0, t0, rt0 WHERE (CASE WHEN ((rt0.c0)LIKE(t0.c0)) THEN (~ (rt0.c4)) ELSE ((vt0.c1) NOTNULL) END) UNION SELECT DISTINCT * FROM vt0, t0, rt0 WHERE ((NOT (CASE WHEN ((rt0.c0)LIKE(t0.c0)) THEN (~ (rt0.c4)) ELSE ((vt0.c1) NOTNULL) END))) UNION SELECT DISTINCT * FROM vt0, t0, rt0 WHERE (((CASE WHEN ((rt0.c0)LIKE(t0.c0)) THEN (~ (rt0.c4)) ELSE ((vt0.c1) NOTNULL) END) ISNULL));
SELECT DISTINCT * FROM vt0, t0, rt0;
SELECT ALL rt0.c4, rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c4, rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((rt0.c4 COLLATE RTRIM)<<(CAST(rt0.c4 AS INTEGER)))) GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c4, rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((rt0.c4 COLLATE RTRIM)<<(CAST(rt0.c4 AS INTEGER)))))) GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c4, rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((rt0.c4 COLLATE RTRIM)<<(CAST(rt0.c4 AS INTEGER)))) ISNULL)) GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c4, rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c4, rt0.c0 FROM t0 RIGHT OUTER JOIN rt0 ON CAST(((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c4)) AS NUMERIC) GROUP BY rt0.c4, rt0.c0;
SELECT rt0.c4, rt0.c0 FROM t0 RIGHT OUTER JOIN rt0 ON CAST(((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c4)) AS NUMERIC) GROUP BY rt0.c4, rt0.c0 HAVING rt0.c3 UNION ALL SELECT ALL rt0.c4, rt0.c0 FROM t0 RIGHT OUTER JOIN rt0 ON CAST(((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c4)) AS NUMERIC) GROUP BY rt0.c4, rt0.c0 HAVING (NOT (rt0.c3)) UNION ALL SELECT ALL rt0.c4, rt0.c0 FROM t0 RIGHT OUTER JOIN rt0 ON CAST(((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c4)) AS NUMERIC) GROUP BY rt0.c4, rt0.c0 HAVING ((rt0.c3) ISNULL);
SELECT ALL rt0.c4, rt0.c0 FROM t0 RIGHT OUTER JOIN rt0 ON CAST(((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c4)) AS NUMERIC) GROUP BY rt0.c4, rt0.c0;
SELECT rt0.c4, rt0.c0 FROM t0 RIGHT OUTER JOIN rt0 ON CAST(((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c4)) AS NUMERIC) GROUP BY rt0.c4, rt0.c0 HAVING rt0.c3 UNION ALL SELECT ALL rt0.c4, rt0.c0 FROM t0 RIGHT OUTER JOIN rt0 ON CAST(((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c4)) AS NUMERIC) GROUP BY rt0.c4, rt0.c0 HAVING (NOT (rt0.c3)) UNION ALL SELECT ALL rt0.c4, rt0.c0 FROM t0 RIGHT OUTER JOIN rt0 ON CAST(((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c4)) AS NUMERIC) GROUP BY rt0.c4, rt0.c0 HAVING ((rt0.c3) ISNULL);
SELECT ALL rt0.c4, rt0.c0 FROM t0 RIGHT OUTER JOIN rt0 ON CAST(((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c4)) AS NUMERIC) GROUP BY rt0.c4, rt0.c0;
SELECT vt0.c1, rt0.c2, rt0.c4, vt0.c0, rt0.c0 FROM vt0, t0, rt0;
SELECT vt0.c1, rt0.c2, rt0.c4, vt0.c0, rt0.c0 FROM vt0, t0, rt0 WHERE (CAST(((((rt0.c4)AND(vt0.c1)))AND(vt0.c1)) AS REAL)) UNION ALL SELECT ALL vt0.c1, rt0.c2, rt0.c4, vt0.c0, rt0.c0 FROM vt0, t0, rt0 WHERE ((NOT (CAST(((((rt0.c4)AND(vt0.c1)))AND(vt0.c1)) AS REAL)))) UNION ALL SELECT vt0.c1, rt0.c2, rt0.c4, vt0.c0, rt0.c0 FROM vt0, t0, rt0 WHERE (((CAST(((((rt0.c4)AND(vt0.c1)))AND(vt0.c1)) AS REAL)) ISNULL));
SELECT vt0.c1, rt0.c2, rt0.c4, vt0.c0, rt0.c0 FROM vt0, t0, rt0;
SELECT DISTINCT * FROM vt0 NOT INDEXED, t0;
SELECT DISTINCT * FROM vt0, t0 WHERE ((((t0.c0 COLLATE RTRIM))<(((t0.c0 IN ()))))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((NOT ((((t0.c0 COLLATE RTRIM))<(((t0.c0 IN ()))))))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((((((t0.c0 COLLATE RTRIM))<(((t0.c0 IN ()))))) ISNULL));
SELECT DISTINCT * FROM vt0 NOT INDEXED, t0;
SELECT rt0.c4, vt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c4, vt0.c1, rt0.c3, rt0.c2, rt0.c0;
SELECT ALL rt0.c4, vt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM rt0, vt0 WHERE (((rt0.c4) NOT BETWEEN (vt0.c1) AND (rt0.c1)) COLLATE RTRIM) GROUP BY rt0.c4, vt0.c1, rt0.c3, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c4, vt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM rt0, vt0 WHERE ((NOT (((rt0.c4) NOT BETWEEN (vt0.c1) AND (rt0.c1)) COLLATE RTRIM))) GROUP BY rt0.c4, vt0.c1, rt0.c3, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c4, vt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM rt0, vt0 WHERE (((((rt0.c4) NOT BETWEEN (vt0.c1) AND (rt0.c1)) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c4, vt0.c1, rt0.c3, rt0.c2, rt0.c0;
SELECT rt0.c4, vt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c4, vt0.c1, rt0.c3, rt0.c2, rt0.c0;
SELECT vt0.c1 FROM vt0, t0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0, t0 GROUP BY vt0.c1 HAVING '1635009847' UNION ALL SELECT vt0.c1 FROM vt0, t0 GROUP BY vt0.c1 HAVING (NOT ('1635009847')) UNION ALL SELECT ALL vt0.c1 FROM vt0, t0 GROUP BY vt0.c1 HAVING (('1635009847') ISNULL);
SELECT vt0.c1 FROM vt0, t0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0, t0 GROUP BY vt0.c1 HAVING '1635009847' UNION ALL SELECT vt0.c1 FROM vt0, t0 GROUP BY vt0.c1 HAVING (NOT ('1635009847')) UNION ALL SELECT ALL vt0.c1 FROM vt0, t0 GROUP BY vt0.c1 HAVING (('1635009847') ISNULL);
SELECT vt0.c1 FROM vt0, t0 GROUP BY vt0.c1;
SELECT rt0.c3, rt0.c1, t0.c0, rt0.c0 FROM vt0, t0 INNER JOIN rt0 ON ((((NOT (vt0.c0)), ((rt0.c1)!=(rt0.c1)), CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END))!=(((((rt0.c3, rt0.c4, rt0.c3))<((rt0.c0, vt0.c0, x''))), LOWER(rt0.c2), TIME(vt0.c0, rt0.c2, vt0.c1))));
SELECT rt0.c3, rt0.c1, t0.c0, rt0.c0 FROM vt0, t0 INNER JOIN rt0 ON ((((NOT (vt0.c0)), ((rt0.c1)!=(rt0.c1)), CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END))!=(((((rt0.c3, rt0.c4, rt0.c3))<((rt0.c0, vt0.c0, x''))), LOWER(rt0.c2), TIME(vt0.c0, rt0.c2, vt0.c1)))) WHERE ((((+ (rt0.c3)))<((NOT (0x4e2113d4))))) UNION ALL SELECT rt0.c3, rt0.c1, t0.c0, rt0.c0 FROM vt0, t0 INNER JOIN rt0 ON ((((NOT (vt0.c0)), ((rt0.c1)<>(rt0.c1)), CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END))!=(((((rt0.c3, rt0.c4, rt0.c3))<((rt0.c0, vt0.c0, x''))), LOWER(rt0.c2), TIME(vt0.c0, rt0.c2, vt0.c1)))) WHERE ((NOT ((((+ (rt0.c3)))<((NOT (0X4e2113d4))))))) UNION ALL SELECT ALL rt0.c3, rt0.c1, t0.c0, rt0.c0 FROM vt0, t0 INNER JOIN rt0 ON ((((NOT (vt0.c0)), ((rt0.c1)!=(rt0.c1)), CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END))<>(((((rt0.c3, rt0.c4, rt0.c3))<((rt0.c0, vt0.c0, x''))), LOWER(rt0.c2), TIME(vt0.c0, rt0.c2, vt0.c1)))) WHERE ((((((+ (rt0.c3)))<((NOT (0X4e2113d4))))) ISNULL));
SELECT rt0.c3, rt0.c1, t0.c0, rt0.c0 FROM vt0, t0 INNER JOIN rt0 ON ((((NOT (vt0.c0)), ((rt0.c1)!=(rt0.c1)), CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END))!=(((((rt0.c3, rt0.c4, rt0.c3))<((rt0.c0, vt0.c0, x''))), LOWER(rt0.c2), TIME(vt0.c0, rt0.c2, vt0.c1))));
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE (json_insert((vt0.c0 IN ()), ((vt0.c0)>=(x'')), vt0.c0 COLLATE RTRIM, (((vt0.c1))=((vt0.c1))), vt0.c1)) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (json_insert((vt0.c0 IN ()), ((vt0.c0)>=(x'')), vt0.c0 COLLATE RTRIM, (((vt0.c1))==((vt0.c1))), vt0.c1)))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE (((json_insert((vt0.c0 IN ()), ((vt0.c0)>=(x'')), vt0.c0 COLLATE RTRIM, (((vt0.c1))=((vt0.c1))), vt0.c1)) ISNULL));
SELECT ALL rt0.c1, rt0.c0, rt0.c3, vt0.c1 FROM rt0, t0, vt0 GROUP BY rt0.c1, rt0.c0, rt0.c3, vt0.c1;
SELECT ALL rt0.c1, rt0.c0, rt0.c3, vt0.c1 FROM rt0, t0, vt0 WHERE (((((((vt0.c0)-(rt0.c0)))AND(((0.7780753998782887)-(rt0.c4)))))OR(rt0.c4))) GROUP BY rt0.c1, rt0.c0, rt0.c3, vt0.c1 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c3, vt0.c1 FROM rt0, t0, vt0 WHERE ((NOT (((((((vt0.c0)-(rt0.c0)))AND(((0.7780753998782887)-(rt0.c4)))))OR(rt0.c4))))) GROUP BY rt0.c1, rt0.c0, rt0.c3, vt0.c1 UNION SELECT rt0.c1, rt0.c0, rt0.c3, vt0.c1 FROM rt0, t0, vt0 WHERE (((((((((vt0.c0)-(rt0.c0)))AND(((0.7780753998782887)-(rt0.c4)))))OR(rt0.c4))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c3, vt0.c1;
SELECT ALL rt0.c1, rt0.c0, rt0.c3, vt0.c1 FROM rt0, t0, vt0 GROUP BY rt0.c1, rt0.c0, rt0.c3, vt0.c1;
SELECT ALL t0.c0, rt0.c0, rt0.c1 FROM vt0, t0 NATURAL JOIN rt0 GROUP BY t0.c0, rt0.c0, rt0.c1;
SELECT ALL t0.c0, rt0.c0, rt0.c1 FROM vt0, t0 NATURAL JOIN rt0 GROUP BY t0.c0, rt0.c0, rt0.c1 HAVING SUM(GROUP_CONCAT(rt0.c0)) UNION ALL SELECT ALL t0.c0, rt0.c0, rt0.c1 FROM vt0, t0 NATURAL JOIN rt0 GROUP BY t0.c0, rt0.c0, rt0.c1 HAVING (NOT (SUM(GROUP_CONCAT(rt0.c0)))) UNION ALL SELECT ALL t0.c0, rt0.c0, rt0.c1 FROM vt0, t0 NATURAL JOIN rt0 GROUP BY t0.c0, rt0.c0, rt0.c1 HAVING ((SUM(GROUP_CONCAT(rt0.c0))) ISNULL);
SELECT MIN((((((rt0.c1))>((rt0.c4)))) ISNULL)) FROM rt0 ORDER BY rt0.c2 COLLATE RTRIM ASC  NULLS LAST;
SELECT ALL rt0.c3 FROM t0, rt0;
SELECT rt0.c3 FROM t0, rt0 WHERE ((((rt0.c1, rt0.c4, rt0.c4))>=((rt0.c4, t0.c0, rt0.c3))) COLLATE RTRIM) UNION ALL SELECT rt0.c3 FROM t0, rt0 WHERE ((NOT ((((rt0.c1, rt0.c4, rt0.c4))>=((rt0.c4, t0.c0, rt0.c3))) COLLATE RTRIM))) UNION ALL SELECT rt0.c3 FROM t0, rt0 WHERE ((((((rt0.c1, rt0.c4, rt0.c4))>=((rt0.c4, t0.c0, rt0.c3))) COLLATE RTRIM) ISNULL));
SELECT ALL rt0.c3 FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE (CASE CAST(rt0.c3 AS REAL)  WHEN t0.c0 THEN ((rt0.c3) NOT BETWEEN (t0.c0) AND (rt0.c4)) END) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT (CASE CAST(rt0.c3 AS REAL)  WHEN t0.c0 THEN ((rt0.c3) NOT BETWEEN (t0.c0) AND (rt0.c4)) END))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE (((CASE CAST(rt0.c3 AS REAL)  WHEN t0.c0 THEN ((rt0.c3) NOT BETWEEN (t0.c0) AND (rt0.c4)) END) ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT vt0.c1 FROM vt0, t0 INDEXED BY i81 GROUP BY vt0.c1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM t0, vt0;
SELECT ALL * FROM t0, vt0 WHERE (((((t0.c0)&(vt0.c0)))AND(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END))) UNION ALL SELECT ALL * FROM t0, vt0 WHERE ((NOT (((((t0.c0)&(vt0.c0)))AND(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END))))) UNION ALL SELECT ALL * FROM t0, vt0 WHERE (((((((t0.c0)&(vt0.c0)))AND(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END))) ISNULL));
SELECT * FROM t0, vt0;
SELECT DISTINCT rt0.c0, rt0.c3, rt0.c4, rt0.c2, t0.c0 FROM t0 FULL OUTER JOIN rt0 ON -194684194;
SELECT DISTINCT rt0.c0, rt0.c3, rt0.c4, rt0.c2, t0.c0 FROM t0 FULL OUTER JOIN rt0 ON -194684194 WHERE (((NULL)%(SQLITE_SOURCE_ID()))) UNION SELECT DISTINCT rt0.c0, rt0.c3, rt0.c4, rt0.c2, t0.c0 FROM t0 FULL OUTER JOIN rt0 ON -194684194 WHERE ((NOT (((NULL)%(SQLITE_SOURCE_ID()))))) UNION SELECT DISTINCT rt0.c0, rt0.c3, rt0.c4, rt0.c2, t0.c0 FROM t0 FULL OUTER JOIN rt0 ON -194684194 WHERE (((((NULL)%(SQLITE_SOURCE_ID()))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c3, rt0.c4, rt0.c2, t0.c0 FROM t0 FULL OUTER JOIN rt0 ON -194684194;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((NULLIF(t0.c0, t0.c0))AND(t0.c0 COLLATE BINARY))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((NULLIF(t0.c0, t0.c0))AND(t0.c0 COLLATE BINARY))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((((NULLIF(t0.c0, t0.c0))AND(t0.c0 COLLATE BINARY))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING MIN((((((((('*G.')OR(t0.c0)))AND(MAX(t0.c0))))OR(t0.c0)))OR(GROUP_CONCAT(t0.c0)))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MIN((((((((('*G.')OR(t0.c0)))AND(MAX(t0.c0))))OR(t0.c0)))OR(GROUP_CONCAT(t0.c0)))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MIN((((((((('*G.')OR(t0.c0)))AND(MAX(t0.c0))))OR(t0.c0)))OR(GROUP_CONCAT(t0.c0))))) ISNULL);
SELECT t0.c0, rt0.c1, rt0.c0, rt0.c3 FROM rt0, vt0 INNER JOIN t0 ON PRINTF(((rt0.c0) NOT NULL));
SELECT ALL t0.c0, rt0.c1, rt0.c0, rt0.c3 FROM rt0, vt0 INNER JOIN t0 ON PRINTF(((rt0.c0) NOT NULL)) WHERE (CASE ((vt0.c0) NOT NULL)  WHEN CASE WHEN vt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN vt0.c0 WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c0 END THEN NULLIF(rt0.c2, t0.c0) END) UNION ALL SELECT t0.c0, rt0.c1, rt0.c0, rt0.c3 FROM rt0, vt0 INNER JOIN t0 ON PRINTF(((rt0.c0) NOT NULL)) WHERE ((NOT (CASE ((vt0.c0) NOT NULL)  WHEN CASE WHEN vt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN vt0.c0 WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c0 END THEN NULLIF(rt0.c2, t0.c0) END))) UNION ALL SELECT t0.c0, rt0.c1, rt0.c0, rt0.c3 FROM rt0, vt0 INNER JOIN t0 ON PRINTF(((rt0.c0) NOT NULL)) WHERE (((CASE ((vt0.c0) NOT NULL)  WHEN CASE WHEN vt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN vt0.c0 WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c0 END THEN NULLIF(rt0.c2, t0.c0) END) ISNULL));
SELECT t0.c0, rt0.c1, rt0.c0, rt0.c3 FROM rt0, vt0 INNER JOIN t0 ON PRINTF(((rt0.c0) NOT NULL));
SELECT DISTINCT * FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0 WHERE (((t0.c0 COLLATE NOCASE) BETWEEN ((- (t0.c0))) AND ((+ (vt0.c0))))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((NOT (((t0.c0 COLLATE NOCASE) BETWEEN ((- (t0.c0))) AND ((+ (vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE (((((t0.c0 COLLATE NOCASE) BETWEEN ((- (t0.c0))) AND ((+ (vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (UPPER((t0.c0 IN ()))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (UPPER((t0.c0 IN ()))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 NOT INDEXED WHERE (((UPPER((t0.c0 IN ()))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING GROUP_CONCAT(MIN(COUNT(*))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (GROUP_CONCAT(MIN(COUNT(*))))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((GROUP_CONCAT(MIN(COUNT(*)))) ISNULL);
SELECT * FROM t0 CROSS JOIN rt0 ON load_extension(((rt0.c2) BETWEEN ('1583928693') AND (rt0.c1)));
SELECT DISTINCT vt0.c0, vt0.c1, rt0.c4, t0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON (NOT ((('0.21255012051048516') NOT BETWEEN (rt0.c1) AND (rt0.c1)))) LEFT OUTER JOIN t0 ON ((((rt0.c1)||(rt0.c2)))%(((rt0.c1)||(rt0.c4))));
SELECT DISTINCT vt0.c0, vt0.c1, rt0.c4, t0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON (NOT ((('0.21255012051048516') NOT BETWEEN (rt0.c1) AND (rt0.c1)))) LEFT OUTER JOIN t0 ON ((((rt0.c1)||(rt0.c2)))%(((rt0.c1)||(rt0.c4)))) WHERE ((((vt0.c0) BETWEEN (rt0.c3) AND (vt0.c1)) IN ((x'' IN ()), ((vt0.c0)IS NOT(rt0.c4))))) UNION SELECT DISTINCT vt0.c0, vt0.c1, rt0.c4, t0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON (NOT ((('0.21255012051048516') NOT BETWEEN (rt0.c1) AND (rt0.c1)))) LEFT OUTER JOIN t0 ON ((((rt0.c1)||(rt0.c2)))%(((rt0.c1)||(rt0.c4)))) WHERE ((NOT ((((vt0.c0) BETWEEN (rt0.c3) AND (vt0.c1)) IN ((x'' IN ()), ((vt0.c0)IS NOT(rt0.c4))))))) UNION SELECT DISTINCT vt0.c0, vt0.c1, rt0.c4, t0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON (NOT ((('0.21255012051048516') NOT BETWEEN (rt0.c1) AND (rt0.c1)))) LEFT OUTER JOIN t0 ON ((((rt0.c1)||(rt0.c2)))%(((rt0.c1)||(rt0.c4)))) WHERE ((((((vt0.c0) BETWEEN (rt0.c3) AND (vt0.c1)) IN ((x'' IN ()), ((vt0.c0)IS NOT(rt0.c4))))) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1, rt0.c4, t0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON (NOT ((('0.21255012051048516') NOT BETWEEN (rt0.c1) AND (rt0.c1)))) LEFT OUTER JOIN t0 ON ((((rt0.c1)||(rt0.c2)))%(((rt0.c1)||(rt0.c4))));
SELECT ALL rt0.c1 FROM vt0, t0, rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM vt0, t0, rt0 WHERE (CASE vt0.c0  WHEN vt0.c1 THEN rt0.c3 ELSE t0.c0 END COLLATE NOCASE) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM vt0, t0, rt0 WHERE ((NOT (CASE vt0.c0  WHEN vt0.c1 THEN rt0.c3 ELSE t0.c0 END COLLATE NOCASE))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM vt0, t0, rt0 WHERE (((CASE vt0.c0  WHEN vt0.c1 THEN rt0.c3 ELSE t0.c0 END COLLATE NOCASE) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM vt0, t0, rt0 GROUP BY rt0.c1;
SELECT ALL vt0.c1 FROM vt0 RIGHT OUTER JOIN t0 ON CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE BINARY COLLATE NOCASE GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 RIGHT OUTER JOIN t0 ON CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE BINARY COLLATE NOCASE GROUP BY vt0.c1 HAVING TOTAL(MIN(TOTAL(AVG(t0.c0)))) UNION ALL SELECT ALL vt0.c1 FROM vt0 RIGHT OUTER JOIN t0 ON CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE BINARY COLLATE NOCASE GROUP BY vt0.c1 HAVING (NOT (TOTAL(MIN(TOTAL(AVG(t0.c0)))))) UNION ALL SELECT ALL vt0.c1 FROM vt0 RIGHT OUTER JOIN t0 ON CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE BINARY COLLATE NOCASE GROUP BY vt0.c1 HAVING ((TOTAL(MIN(TOTAL(AVG(t0.c0))))) ISNULL);
SELECT ALL rt0.c0, rt0.c4 FROM rt0;
SELECT rt0.c0, rt0.c4 FROM rt0 WHERE ((((rt0.c0 IN ())) NOT NULL)) UNION ALL SELECT rt0.c0, rt0.c4 FROM rt0 WHERE ((NOT ((((rt0.c0 IN ())) NOT NULL)))) UNION ALL SELECT rt0.c0, rt0.c4 FROM rt0 NOT INDEXED WHERE ((((((rt0.c0 IN ())) NOT NULL)) ISNULL));
SELECT ALL rt0.c0, rt0.c4 FROM rt0;
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON ((((CAST(rt0.c3 AS TEXT))AND(CAST(rt0.c3 AS REAL))))OR(((vt0.c0)/(t0.c0)))) LEFT OUTER JOIN t0 ON rt0.c4 COLLATE RTRIM;
SELECT ALL vt0.c1, rt0.c1, rt0.c2, rt0.c0 FROM t0, rt0, vt0 GROUP BY vt0.c1, rt0.c1, rt0.c2, rt0.c0;
SELECT ALL vt0.c1, rt0.c1, rt0.c2, rt0.c0 FROM t0, rt0, vt0 WHERE (CASE PRINTF(rt0.c0)  WHEN ((t0.c0)GLOB(rt0.c0)) THEN '-1550043217' ELSE rt0.c2 COLLATE NOCASE END) GROUP BY vt0.c1, rt0.c1, rt0.c2, rt0.c0 UNION SELECT vt0.c1, rt0.c1, rt0.c2, rt0.c0 FROM t0, rt0, vt0 WHERE ((NOT (CASE PRINTF(rt0.c0)  WHEN ((t0.c0)GLOB(rt0.c0)) THEN '-1550043217' ELSE rt0.c2 COLLATE NOCASE END))) GROUP BY vt0.c1, rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL vt0.c1, rt0.c1, rt0.c2, rt0.c0 FROM t0, rt0, vt0 WHERE (((CASE PRINTF(rt0.c0)  WHEN ((t0.c0)GLOB(rt0.c0)) THEN '-1550043217' ELSE rt0.c2 COLLATE NOCASE END) ISNULL)) GROUP BY vt0.c1, rt0.c1, rt0.c2, rt0.c0;
SELECT ALL vt0.c1, rt0.c1, rt0.c2, rt0.c0 FROM t0, rt0, vt0 GROUP BY vt0.c1, rt0.c1, rt0.c2, rt0.c0;
SELECT t0.c0, vt0.c0 FROM t0, vt0, rt0 GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM t0, vt0, rt0 GROUP BY t0.c0, vt0.c0 HAVING ((rt0.c0 COLLATE RTRIM)LIKE(GROUP_CONCAT(NULL))) UNION ALL SELECT t0.c0, vt0.c0 FROM t0, vt0, rt0 GROUP BY t0.c0, vt0.c0 HAVING (NOT (((rt0.c0 COLLATE RTRIM)LIKE(GROUP_CONCAT(NULL))))) UNION ALL SELECT t0.c0, vt0.c0 FROM t0, vt0, rt0 GROUP BY t0.c0, vt0.c0 HAVING ((((rt0.c0 COLLATE RTRIM)LIKE(GROUP_CONCAT(NULL)))) ISNULL);
SELECT t0.c0, vt0.c0 FROM t0, vt0, rt0 GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM t0, vt0, rt0 GROUP BY t0.c0, vt0.c0 HAVING ((rt0.c0 COLLATE RTRIM)LIKE(GROUP_CONCAT(NULL))) UNION ALL SELECT t0.c0, vt0.c0 FROM t0, vt0, rt0 GROUP BY t0.c0, vt0.c0 HAVING (NOT (((rt0.c0 COLLATE RTRIM)LIKE(GROUP_CONCAT(NULL))))) UNION ALL SELECT t0.c0, vt0.c0 FROM t0, vt0, rt0 GROUP BY t0.c0, vt0.c0 HAVING ((((rt0.c0 COLLATE RTRIM)LIKE(GROUP_CONCAT(NULL)))) ISNULL);
SELECT t0.c0, vt0.c0 FROM t0, vt0, rt0 GROUP BY t0.c0, vt0.c0;
SELECT vt0.c0, vt0.c1 FROM t0, vt0;
SELECT vt0.c0, vt0.c1 FROM t0, vt0 WHERE (CASE WHEN t0.c0 THEN t0.c0 ELSE x'' END COLLATE BINARY) UNION ALL SELECT vt0.c0, vt0.c1 FROM t0, vt0 WHERE ((NOT (CASE WHEN t0.c0 THEN t0.c0 ELSE x'' END COLLATE BINARY))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM t0, vt0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 ELSE x'' END COLLATE BINARY) ISNULL));
SELECT vt0.c0, vt0.c1 FROM t0, vt0;
SELECT DISTINCT rt0.c1, t0.c0, rt0.c2 FROM rt0 FULL OUTER JOIN t0 ON (((((NOT (1.635009847E9)))OR(((((((((rt0.c1)OR('Cs,/')))OR(rt0.c4)))AND(rt0.c3)))AND(rt0.c2)))))AND(((t0.c0)IS(t0.c0))));
SELECT DISTINCT rt0.c1, t0.c0, rt0.c2 FROM rt0 FULL OUTER JOIN t0 ON (((((NOT (1.635009847E9)))OR(((((((((rt0.c1)OR('Cs,/')))OR(rt0.c4)))AND(rt0.c3)))AND(rt0.c2)))))AND(((t0.c0)IS(t0.c0)))) WHERE (((CAST(t0.c0 AS BLOB)) IS FALSE)) UNION SELECT DISTINCT rt0.c1, t0.c0, rt0.c2 FROM rt0 FULL OUTER JOIN t0 ON (((((NOT (1.635009847E9)))OR(((((((((rt0.c1)OR('Cs,/')))OR(rt0.c4)))AND(rt0.c3)))AND(rt0.c2)))))AND(((t0.c0)IS(t0.c0)))) WHERE ((NOT (((CAST(t0.c0 AS BLOB)) IS FALSE)))) UNION SELECT DISTINCT rt0.c1, t0.c0, rt0.c2 FROM rt0 FULL OUTER JOIN t0 ON (((((NOT (1.635009847E9)))OR(((((((((rt0.c1)OR('Cs,/')))OR(rt0.c4)))AND(rt0.c3)))AND(rt0.c2)))))AND(((t0.c0)IS(t0.c0)))) WHERE (((((CAST(t0.c0 AS BLOB)) IS FALSE)) ISNULL));
SELECT DISTINCT rt0.c1, t0.c0, rt0.c2 FROM rt0 FULL OUTER JOIN t0 ON (((((NOT (1.635009847E9)))OR(((((((((rt0.c1)OR('Cs,/')))OR(rt0.c4)))AND(rt0.c3)))AND(rt0.c2)))))AND(((t0.c0)IS(t0.c0))));
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (((((t0.c0 COLLATE RTRIM)OR((t0.c0 IN ()))))AND(CAST(t0.c0 AS REAL)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((((t0.c0 COLLATE RTRIM)OR((t0.c0 IN ()))))AND(CAST(t0.c0 AS REAL)))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((((((t0.c0 COLLATE RTRIM)OR((t0.c0 IN ()))))AND(CAST(t0.c0 AS REAL)))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((t0.c0, SUM(COUNT(*)), GROUP_CONCAT(GROUP_CONCAT(t0.c0))))>=((((MIN(TOTAL(t0.c0)))>=(GROUP_CONCAT(TOTAL(TOTAL(0x0))))), ((((SUM(MAX(t0.c0)))AND(t0.c0)))AND(t0.c0)), AVG(t0.c0)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ((((t0.c0, SUM(COUNT(*)), GROUP_CONCAT(GROUP_CONCAT(t0.c0))))>=((((MIN(TOTAL(t0.c0)))>=(GROUP_CONCAT(TOTAL(TOTAL(0X0))))), ((((SUM(MAX(t0.c0)))AND(t0.c0)))AND(t0.c0)), AVG(t0.c0)))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((((t0.c0, SUM(COUNT(*)), GROUP_CONCAT(GROUP_CONCAT(t0.c0))))>=((((MIN(TOTAL(t0.c0)))>=(GROUP_CONCAT(TOTAL(TOTAL(0x0))))), ((((SUM(MAX(t0.c0)))AND(t0.c0)))AND(t0.c0)), AVG(t0.c0))))) ISNULL);
SELECT * FROM t0, vt0;
SELECT ALL * FROM t0, vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((- (vt0.c0)))) AND ((CAST(x'3ebc' AS NUMERIC))))) ORDER BY (((((vt0.c0, vt0.c1, t0.c0)) NOT BETWEEN ((vt0.c1, t0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, '-1481870713')))) BETWEEN (((vt0.c0)>=(vt0.c0))) AND (CASE vt0.c1  WHEN vt0.c0 THEN '' END))  NULLS LAST;
SELECT ALL * FROM t0, vt0 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN (((- (vt0.c0)))) AND ((CAST(x'3ebc' AS NUMERIC))))))) ORDER BY (((((vt0.c0, vt0.c1, t0.c0)) NOT BETWEEN ((vt0.c1, t0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, '-1481870713')))) BETWEEN (((vt0.c0)>=(vt0.c0))) AND (CASE vt0.c1  WHEN vt0.c0 THEN '' END))  NULLS LAST;
SELECT * FROM t0, vt0 WHERE ((((((vt0.c0)) NOT BETWEEN (((- (vt0.c0)))) AND ((CAST(x'3ebc' AS NUMERIC))))) ISNULL)) ORDER BY (((((vt0.c0, vt0.c1, t0.c0)) NOT BETWEEN ((vt0.c1, t0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, '-1481870713')))) BETWEEN (((vt0.c0)>=(vt0.c0))) AND (CASE vt0.c1  WHEN vt0.c0 THEN '' END))  NULLS LAST;
SELECT * FROM t0, vt0;
SELECT DISTINCT * FROM rt0, vt0, t0;
SELECT DISTINCT * FROM rt0, vt0, t0 WHERE (((((vt0.c0) NOT BETWEEN (0.427988441826495) AND (t0.c0)))<<(((t0.c0) NOT NULL)))) UNION SELECT DISTINCT * FROM rt0, vt0, t0 WHERE ((NOT (((((vt0.c0) NOT BETWEEN (0.427988441826495) AND (t0.c0)))<<(((t0.c0) NOT NULL)))))) UNION SELECT DISTINCT * FROM rt0, vt0, t0 WHERE (((((((vt0.c0) NOT BETWEEN (0.427988441826495) AND (t0.c0)))<<(((t0.c0) NOT NULL)))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0, t0;
SELECT rt0.c1, rt0.c3 FROM rt0 FULL OUTER JOIN vt0 ON LOWER(rt0.c1) COLLATE NOCASE GROUP BY rt0.c1, rt0.c3;
SELECT ALL rt0.c1, rt0.c3 FROM rt0 FULL OUTER JOIN vt0 ON LOWER(rt0.c1) COLLATE NOCASE WHERE (CASE WHEN 0x5c87cc3 THEN CAST(rt0.c0 AS BLOB) END) GROUP BY rt0.c1, rt0.c3 UNION SELECT ALL rt0.c1, rt0.c3 FROM rt0 FULL OUTER JOIN vt0 ON LOWER(rt0.c1) COLLATE NOCASE WHERE ((NOT (CASE WHEN 0X5c87cc3 THEN CAST(rt0.c0 AS BLOB) END))) GROUP BY rt0.c1, rt0.c3 UNION SELECT ALL rt0.c1, rt0.c3 FROM rt0 FULL OUTER JOIN vt0 ON LOWER(rt0.c1) COLLATE NOCASE WHERE (((CASE WHEN 0x5c87cc3 THEN CAST(rt0.c0 AS BLOB) END) ISNULL)) GROUP BY rt0.c1, rt0.c3;
SELECT rt0.c1, rt0.c3 FROM rt0 FULL OUTER JOIN vt0 ON LOWER(rt0.c1) COLLATE NOCASE GROUP BY rt0.c1, rt0.c3;
SELECT ALL rt0.c2, t0.c0 FROM rt0, t0 GROUP BY rt0.c2, t0.c0;
SELECT ALL rt0.c2, t0.c0 FROM rt0, t0 GROUP BY rt0.c2, t0.c0 HAVING AVG(((SUM(rt0.c4))<<(GROUP_CONCAT(rt0.c0)))) UNION ALL SELECT rt0.c2, t0.c0 FROM rt0, t0 GROUP BY rt0.c2, t0.c0 HAVING (NOT (AVG(((SUM(rt0.c4))<<(GROUP_CONCAT(rt0.c0)))))) UNION ALL SELECT rt0.c2, t0.c0 FROM rt0, t0 GROUP BY rt0.c2, t0.c0 HAVING ((AVG(((SUM(rt0.c4))<<(GROUP_CONCAT(rt0.c0))))) ISNULL);
SELECT rt0.c3, rt0.c4, t0.c0, rt0.c2, vt0.c1 FROM t0, vt0, rt0;
SELECT rt0.c3, rt0.c4, t0.c0, rt0.c2, vt0.c1 FROM t0, vt0, rt0 WHERE (NULL) UNION ALL SELECT ALL rt0.c3, rt0.c4, t0.c0, rt0.c2, vt0.c1 FROM t0, vt0, rt0 WHERE ((NOT (NULL))) UNION ALL SELECT ALL rt0.c3, rt0.c4, t0.c0, rt0.c2, vt0.c1 FROM t0, vt0, rt0 NOT INDEXED WHERE (((NULL) ISNULL));
SELECT rt0.c3, rt0.c4, t0.c0, rt0.c2, vt0.c1 FROM t0, vt0, rt0;
SELECT DISTINCT * FROM rt0, t0;
SELECT DISTINCT * FROM rt0, t0 WHERE (((((rt0.c4)LIKE(rt0.c0))) NOT NULL)) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((NOT (((((rt0.c4)LIKE(rt0.c0))) NOT NULL)))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE (((((((rt0.c4)LIKE(rt0.c0))) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM rt0, t0;
SELECT ALL rt0.c0, rt0.c2, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c4, rt0.c3;
SELECT ALL rt0.c0, rt0.c2, rt0.c4, rt0.c3 FROM rt0 WHERE ((((rt0.c2, rt0.c2, rt0.c1)) NOT BETWEEN (((NOT (rt0.c0)), (((rt0.c0))<>((rt0.c2))), (~ (rt0.c0)))) AND (((rt0.c1 IN (rt0.c3)), '1481200176', (rt0.c3 IN ()))))) GROUP BY rt0.c0, rt0.c2, rt0.c4, rt0.c3 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c4, rt0.c3 FROM rt0 WHERE ((NOT ((((rt0.c2, rt0.c2, rt0.c1)) NOT BETWEEN (((NOT (rt0.c0)), (((rt0.c0))<>((rt0.c2))), (~ (rt0.c0)))) AND (((rt0.c1 IN (rt0.c3)), '1481200176', (rt0.c3 IN ()))))))) GROUP BY rt0.c0, rt0.c2, rt0.c4, rt0.c3 UNION SELECT rt0.c0, rt0.c2, rt0.c4, rt0.c3 FROM rt0 WHERE ((((((rt0.c2, rt0.c2, rt0.c1)) NOT BETWEEN (((NOT (rt0.c0)), (((rt0.c0))!=((rt0.c2))), (~ (rt0.c0)))) AND (((rt0.c1 IN (rt0.c3)), '1481200176', (rt0.c3 IN ()))))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c4, rt0.c3;
SELECT ALL rt0.c0, rt0.c2, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c4, rt0.c3;
SELECT t0.c0 FROM vt0, rt0 FULL OUTER JOIN t0 ON ((UNLIKELY(DISTINCT vt0.c0)) NOT BETWEEN (COALESCE(DISTINCT vt0.c1, rt0.c0)) AND ((~ (rt0.c2)))) GROUP BY t0.c0;
SELECT t0.c0 FROM vt0, rt0 FULL OUTER JOIN t0 ON ((UNLIKELY(DISTINCT vt0.c0)) NOT BETWEEN (COALESCE(DISTINCT vt0.c1, rt0.c0)) AND ((~ (rt0.c2)))) GROUP BY t0.c0 HAVING COUNT(MAX(t0.c0)) UNION ALL SELECT t0.c0 FROM vt0, rt0 FULL OUTER JOIN t0 ON ((UNLIKELY(DISTINCT vt0.c0)) NOT BETWEEN (COALESCE(DISTINCT vt0.c1, rt0.c0)) AND ((~ (rt0.c2)))) GROUP BY t0.c0 HAVING (NOT (COUNT(MAX(t0.c0)))) UNION ALL SELECT t0.c0 FROM vt0, rt0 FULL OUTER JOIN t0 ON ((UNLIKELY(DISTINCT vt0.c0)) NOT BETWEEN (COALESCE(DISTINCT vt0.c1, rt0.c0)) AND ((~ (rt0.c2)))) GROUP BY t0.c0 HAVING ((COUNT(MAX(t0.c0))) ISNULL);
SELECT ALL * FROM vt0, t0;
SELECT * FROM vt0, t0 WHERE ((TYPEOF(vt0.c0) IN ((NOT ('l?'))))) UNION ALL SELECT * FROM vt0, t0 WHERE ((NOT ((TYPEOF(vt0.c0) IN ((NOT ('l?'))))))) UNION ALL SELECT ALL * FROM vt0, t0 WHERE ((((TYPEOF(vt0.c0) IN ((NOT ('l?'))))) ISNULL));
SELECT ALL * FROM vt0, t0;
SELECT DISTINCT vt0.c1, vt0.c0, t0.c0 FROM vt0 CROSS JOIN t0 ON ((((((((x'')AND(((t0.c0) NOT NULL))))OR((t0.c0 IN ()))))OR((((t0.c0, t0.c0, vt0.c0, vt0.c0, vt0.c1))>=((vt0.c1, vt0.c0, t0.c0, t0.c0, vt0.c1))))))OR(NULLIF(DISTINCT vt0.c0, vt0.c1)));
SELECT DISTINCT vt0.c1, vt0.c0, t0.c0 FROM vt0 CROSS JOIN t0 ON ((((((((x'')AND(((t0.c0) NOT NULL))))OR((t0.c0 IN ()))))OR((((t0.c0, t0.c0, vt0.c0, vt0.c0, vt0.c1))>=((vt0.c1, vt0.c0, t0.c0, t0.c0, vt0.c1))))))OR(NULLIF(DISTINCT vt0.c0, vt0.c1))) WHERE (((CAST(vt0.c0 AS BLOB))IS NOT(((vt0.c0)<(NULL))))) UNION SELECT DISTINCT vt0.c1, vt0.c0, t0.c0 FROM vt0 CROSS JOIN t0 ON ((((((((x'')AND(((t0.c0) NOT NULL))))OR((t0.c0 IN ()))))OR((((t0.c0, t0.c0, vt0.c0, vt0.c0, vt0.c1))>=((vt0.c1, vt0.c0, t0.c0, t0.c0, vt0.c1))))))OR(NULLIF(DISTINCT vt0.c0, vt0.c1))) WHERE ((NOT (((CAST(vt0.c0 AS BLOB))IS NOT(((vt0.c0)<(NULL))))))) UNION SELECT DISTINCT vt0.c1, vt0.c0, t0.c0 FROM vt0 CROSS JOIN t0 ON ((((((((x'')AND(((t0.c0) NOT NULL))))OR((t0.c0 IN ()))))OR((((t0.c0, t0.c0, vt0.c0, vt0.c0, vt0.c1))>=((vt0.c1, vt0.c0, t0.c0, t0.c0, vt0.c1))))))OR(NULLIF(DISTINCT vt0.c0, vt0.c1))) WHERE (((((CAST(vt0.c0 AS BLOB))IS NOT(((vt0.c0)<(NULL))))) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0, t0.c0 FROM vt0 CROSS JOIN t0 ON ((((((((x'')AND(((t0.c0) NOT NULL))))OR((t0.c0 IN ()))))OR((((t0.c0, t0.c0, vt0.c0, vt0.c0, vt0.c1))>=((vt0.c1, vt0.c0, t0.c0, t0.c0, vt0.c1))))))OR(NULLIF(DISTINCT vt0.c0, vt0.c1)));
SELECT rt0.c2, rt0.c1, rt0.c4, rt0.c3, vt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c4, rt0.c3, vt0.c1, vt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c4, rt0.c3, vt0.c1, vt0.c0 FROM vt0, rt0 WHERE ((((+ (rt0.c0)))<(rt0.c0))) GROUP BY rt0.c2, rt0.c1, rt0.c4, rt0.c3, vt0.c1, vt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c4, rt0.c3, vt0.c1, vt0.c0 FROM vt0, rt0 WHERE ((NOT ((((+ (rt0.c0)))<(rt0.c0))))) GROUP BY rt0.c2, rt0.c1, rt0.c4, rt0.c3, vt0.c1, vt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c4, rt0.c3, vt0.c1, vt0.c0 FROM vt0, rt0 WHERE ((((((+ (rt0.c0)))<(rt0.c0))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c4, rt0.c3, vt0.c1, vt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c4, rt0.c3, vt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c4, rt0.c3, vt0.c1, vt0.c0;
SELECT ALL rt0.c0, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c4, rt0.c2;
SELECT ALL rt0.c0, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c4, rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0, rt0.c4, rt0.c2 FROM rt0 NOT INDEXED GROUP BY rt0.c0, rt0.c4, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c0, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c4, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c4, rt0.c2;
SELECT ALL rt0.c0, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c4, rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0, rt0.c4, rt0.c2 FROM rt0 NOT INDEXED GROUP BY rt0.c0, rt0.c4, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c0, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c4, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c4, rt0.c2;
SELECT ALL TOTAL(x'2ee3') FROM vt0, rt0;
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON rt0.c4 RIGHT OUTER JOIN t0 ON (- (vt0.c1));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON rt0.c4 RIGHT OUTER JOIN t0 ON (- (vt0.c1)) WHERE ((((((444291704) IS TRUE)))<=((((t0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)))))) UNION ALL SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON rt0.c4 RIGHT OUTER JOIN t0 ON (- (vt0.c1)) WHERE ((NOT ((((((444291704) IS TRUE)))<=((((t0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)))))))) UNION ALL SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON rt0.c4 RIGHT OUTER JOIN t0 ON (- (vt0.c1)) WHERE ((((((((444291704) IS TRUE)))<=((((t0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)))))) ISNULL));
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON rt0.c4 RIGHT OUTER JOIN t0 ON (- (vt0.c1));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((((((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c4)))OR(((((rt0.c0)AND(rt0.c3)))OR(rt0.c1)))))AND((rt0.c1 IN (rt0.c0, rt0.c4))))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT (((((((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c4)))OR(((((rt0.c0)AND(rt0.c3)))OR(rt0.c1)))))AND((rt0.c1 IN (rt0.c0, rt0.c4))))))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((((((((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c4)))OR(((((rt0.c0)AND(rt0.c3)))OR(rt0.c1)))))AND((rt0.c1 IN (rt0.c0, rt0.c4))))) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 WHERE (((((((((LIKELY(vt0.c1))OR((vt0.c1 IN (vt0.c0, vt0.c0)))))OR(vt0.c0 COLLATE BINARY)))AND(((vt0.c0)<(vt0.c0)))))OR(COALESCE(DISTINCT vt0.c0, vt0.c1, vt0.c1, vt0.c0)))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE ((NOT (((((((((LIKELY(vt0.c1))OR((vt0.c1 IN (vt0.c0, vt0.c0)))))OR(vt0.c0 COLLATE BINARY)))AND(((vt0.c0)<(vt0.c0)))))OR(COALESCE(DISTINCT vt0.c0, vt0.c1, vt0.c1, vt0.c0)))))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE (((((((((((LIKELY(vt0.c1))OR((vt0.c1 IN (vt0.c0, vt0.c0)))))OR(vt0.c0 COLLATE BINARY)))AND(((vt0.c0)<(vt0.c0)))))OR(COALESCE(DISTINCT vt0.c0, vt0.c1, vt0.c1, vt0.c0)))) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT rt0.c3, rt0.c4, rt0.c1, rt0.c2, t0.c0, rt0.c0 FROM t0, rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1, rt0.c2, t0.c0, rt0.c0;
SELECT rt0.c3, rt0.c4, rt0.c1, rt0.c2, t0.c0, rt0.c0 FROM t0, rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1, rt0.c2, t0.c0, rt0.c0 HAVING ((((rt0.c4))==((rt0.c2))) IN ()) UNION ALL SELECT rt0.c3, rt0.c4, rt0.c1, rt0.c2, t0.c0, rt0.c0 FROM t0, rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1, rt0.c2, t0.c0, rt0.c0 HAVING (NOT (((((rt0.c4))==((rt0.c2))) IN ()))) UNION ALL SELECT rt0.c3, rt0.c4, rt0.c1, rt0.c2, t0.c0, rt0.c0 FROM t0, rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1, rt0.c2, t0.c0, rt0.c0 HAVING ((((((rt0.c4))=((rt0.c2))) IN ())) ISNULL);
SELECT rt0.c3, rt0.c4, rt0.c1, rt0.c2, t0.c0, rt0.c0 FROM t0, rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1, rt0.c2, t0.c0, rt0.c0;
SELECT rt0.c3, rt0.c4, rt0.c1, rt0.c2, t0.c0, rt0.c0 FROM t0, rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1, rt0.c2, t0.c0, rt0.c0 HAVING ((((rt0.c4))==((rt0.c2))) IN ()) UNION ALL SELECT rt0.c3, rt0.c4, rt0.c1, rt0.c2, t0.c0, rt0.c0 FROM t0, rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1, rt0.c2, t0.c0, rt0.c0 HAVING (NOT (((((rt0.c4))==((rt0.c2))) IN ()))) UNION ALL SELECT rt0.c3, rt0.c4, rt0.c1, rt0.c2, t0.c0, rt0.c0 FROM t0, rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1, rt0.c2, t0.c0, rt0.c0 HAVING ((((((rt0.c4))=((rt0.c2))) IN ())) ISNULL);
SELECT rt0.c3, rt0.c4, rt0.c1, rt0.c2, t0.c0, rt0.c0 FROM t0, rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1, rt0.c2, t0.c0, rt0.c0;
SELECT ALL rt0.c2, vt0.c0, t0.c0, rt0.c4, rt0.c0, rt0.c1 FROM rt0, vt0, t0;
SELECT ALL rt0.c2, vt0.c0, t0.c0, rt0.c4, rt0.c0, rt0.c1 FROM rt0, vt0, t0 WHERE ((LTRIM(rt0.c1, rt0.c2) IN ())) UNION ALL SELECT rt0.c2, vt0.c0, t0.c0, rt0.c4, rt0.c0, rt0.c1 FROM rt0, vt0, t0 WHERE ((NOT ((LTRIM(rt0.c1, rt0.c2) IN ())))) UNION ALL SELECT rt0.c2, vt0.c0, t0.c0, rt0.c4, rt0.c0, rt0.c1 FROM rt0, vt0, t0 WHERE ((((LTRIM(rt0.c1, rt0.c2) IN ())) ISNULL));
SELECT ALL rt0.c2, vt0.c0, t0.c0, rt0.c4, rt0.c0, rt0.c1 FROM rt0, vt0, t0;
SELECT DISTINCT * FROM rt0, t0;
SELECT DISTINCT * FROM rt0, t0 WHERE (NULL) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM rt0, t0;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 WHERE (TYPEOF(DISTINCT vt0.c0 COLLATE BINARY)) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE ((NOT (TYPEOF(DISTINCT vt0.c0 COLLATE BINARY)))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE (((TYPEOF(DISTINCT vt0.c0 COLLATE BINARY)) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((COUNT(MIN(vt0.c0)))GLOB(x'3d63' COLLATE RTRIM)) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (((COUNT(MIN(vt0.c0)))GLOB(x'3d63' COLLATE RTRIM)))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((((COUNT(MIN(vt0.c0)))GLOB(x'3d63' COLLATE RTRIM))) ISNULL);
SELECT * FROM t0, vt0;
SELECT * FROM t0, vt0 WHERE ((((vt0.c0, t0.c0, vt0.c0)) BETWEEN (((+ (t0.c0)), (- (t0.c0)), (vt0.c1 IN (t0.c0, x'd935')))) AND (((((vt0.c1)) BETWEEN ((t0.c0)) AND ((t0.c0))), t0.c0 COLLATE NOCASE, '')))) UNION ALL SELECT * FROM t0, vt0 WHERE ((NOT ((((vt0.c0, t0.c0, vt0.c0)) BETWEEN (((+ (t0.c0)), (- (t0.c0)), (vt0.c1 IN (t0.c0, x'd935')))) AND (((((vt0.c1)) BETWEEN ((t0.c0)) AND ((t0.c0))), t0.c0 COLLATE NOCASE, '')))))) UNION ALL SELECT ALL * FROM t0, vt0 WHERE ((((((vt0.c0, t0.c0, vt0.c0)) BETWEEN (((+ (t0.c0)), (- (t0.c0)), (vt0.c1 IN (t0.c0, x'd935')))) AND (((((vt0.c1)) BETWEEN ((t0.c0)) AND ((t0.c0))), t0.c0 COLLATE NOCASE, '')))) ISNULL));
SELECT * FROM t0, vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c1)AND(((((rt0.c4)AND(rt0.c4)))OR(rt0.c0)))))OR((rt0.c4 IN ())))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c1)AND(((((rt0.c4)AND(rt0.c4)))OR(rt0.c0)))))OR((rt0.c4 IN ())))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c1)AND(((((rt0.c4)AND(rt0.c4)))OR(rt0.c0)))))OR((rt0.c4 IN ())))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL t0.c0, rt0.c3, rt0.c2, rt0.c4, vt0.c1 FROM vt0, t0, rt0 GROUP BY t0.c0, rt0.c3, rt0.c2, rt0.c4, vt0.c1;
SELECT ALL t0.c0, rt0.c3, rt0.c2, rt0.c4, vt0.c1 FROM vt0, t0, rt0 WHERE (rt0.c1 COLLATE NOCASE) GROUP BY t0.c0, rt0.c3, rt0.c2, rt0.c4, vt0.c1 UNION SELECT t0.c0, rt0.c3, rt0.c2, rt0.c4, vt0.c1 FROM vt0, t0, rt0 WHERE ((NOT (rt0.c1 COLLATE NOCASE))) GROUP BY t0.c0, rt0.c3, rt0.c2, rt0.c4, vt0.c1 UNION SELECT t0.c0, rt0.c3, rt0.c2, rt0.c4, vt0.c1 FROM vt0, t0, rt0 WHERE (((rt0.c1 COLLATE NOCASE) ISNULL)) GROUP BY t0.c0, rt0.c3, rt0.c2, rt0.c4, vt0.c1;
SELECT ALL t0.c0, rt0.c3, rt0.c2, rt0.c4, vt0.c1 FROM vt0, t0, rt0 GROUP BY t0.c0, rt0.c3, rt0.c2, rt0.c4, vt0.c1;
SELECT vt0.c0, rt0.c3, vt0.c1, t0.c0, rt0.c0 FROM rt0, vt0, t0 GROUP BY vt0.c0, rt0.c3, vt0.c1, t0.c0, rt0.c0;
SELECT ALL vt0.c0, rt0.c3, vt0.c1, t0.c0, rt0.c0 FROM rt0, vt0, t0 GROUP BY vt0.c0, rt0.c3, vt0.c1, t0.c0, rt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0, rt0.c3, vt0.c1, t0.c0, rt0.c0 FROM rt0, vt0, t0 GROUP BY vt0.c0, rt0.c3, vt0.c1, t0.c0, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0, rt0.c3, vt0.c1, t0.c0, rt0.c0 FROM rt0, vt0, t0 GROUP BY vt0.c0, rt0.c3, vt0.c1, t0.c0, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0, rt0.c3, vt0.c1, t0.c0, rt0.c0 FROM rt0, vt0, t0 GROUP BY vt0.c0, rt0.c3, vt0.c1, t0.c0, rt0.c0;
SELECT ALL vt0.c0, rt0.c3, vt0.c1, t0.c0, rt0.c0 FROM rt0, vt0, t0 GROUP BY vt0.c0, rt0.c3, vt0.c1, t0.c0, rt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0, rt0.c3, vt0.c1, t0.c0, rt0.c0 FROM rt0, vt0, t0 GROUP BY vt0.c0, rt0.c3, vt0.c1, t0.c0, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0, rt0.c3, vt0.c1, t0.c0, rt0.c0 FROM rt0, vt0, t0 GROUP BY vt0.c0, rt0.c3, vt0.c1, t0.c0, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0, rt0.c3, vt0.c1, t0.c0, rt0.c0 FROM rt0, vt0, t0 GROUP BY vt0.c0, rt0.c3, vt0.c1, t0.c0, rt0.c0;
SELECT * FROM vt0, rt0;
SELECT ALL * FROM vt0, rt0 WHERE (CASE rt0.c2  WHEN rt0.c3 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN 0.3019875019971785 THEN rt0.c2 ELSE rt0.c1 END COLLATE BINARY) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE ((NOT (CASE rt0.c2  WHEN rt0.c3 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN 0.3019875019971785 THEN rt0.c2 ELSE rt0.c1 END COLLATE BINARY))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE (((CASE rt0.c2  WHEN rt0.c3 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN 0.3019875019971785 THEN rt0.c2 ELSE rt0.c1 END COLLATE BINARY) ISNULL));
SELECT * FROM vt0, rt0;
SELECT DISTINCT rt0.c0, rt0.c3, rt0.c1, t0.c0 FROM rt0, t0;
SELECT DISTINCT rt0.c0, rt0.c3, rt0.c1, t0.c0 FROM rt0, t0 WHERE ((- (CAST(9.7025219E7 AS REAL)))) UNION SELECT DISTINCT rt0.c0, rt0.c3, rt0.c1, t0.c0 FROM rt0, t0 WHERE ((NOT ((- (CAST(9.7025219E7 AS REAL)))))) UNION SELECT DISTINCT rt0.c0, rt0.c3, rt0.c1, t0.c0 FROM rt0 NOT INDEXED, t0 WHERE ((((- (CAST(9.7025219E7 AS REAL)))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c3, rt0.c1, t0.c0 FROM rt0, t0;
SELECT ALL rt0.c4 FROM vt0, rt0 GROUP BY rt0.c4;
SELECT ALL rt0.c4 FROM vt0, rt0 WHERE ((+ (CASE rt0.c4  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c3 END))) GROUP BY rt0.c4 UNION SELECT ALL rt0.c4 FROM vt0, rt0 WHERE ((NOT ((+ (CASE rt0.c4  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c3 END))))) GROUP BY rt0.c4 UNION SELECT ALL rt0.c4 FROM vt0, rt0 WHERE ((((+ (CASE rt0.c4  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c3 END))) ISNULL)) GROUP BY rt0.c4;
SELECT ALL rt0.c4 FROM vt0, rt0 GROUP BY rt0.c4;
SELECT ALL vt0.c1, rt0.c1, rt0.c3, rt0.c4, vt0.c0 FROM t0 INNER JOIN rt0 ON ((((rt0.c1 IN ())))>=((t0.c0))) INNER JOIN vt0 ON (((((((((t0.c0 IN ()))AND(((rt0.c0) ISNULL))))AND(CASE t0.c0  WHEN t0.c0 THEN rt0.c1 END)))AND((vt0.c0 IN (rt0.c1, rt0.c4)))))AND(((rt0.c1)>>(vt0.c1)))) GROUP BY vt0.c1, rt0.c1, rt0.c3, rt0.c4, vt0.c0;
SELECT vt0.c1, rt0.c1, rt0.c3, rt0.c4, vt0.c0 FROM t0 INNER JOIN rt0 ON ((((rt0.c1 IN ())))>=((t0.c0))) INNER JOIN vt0 ON (((((((((t0.c0 IN ()))AND(((rt0.c0) ISNULL))))AND(CASE t0.c0  WHEN t0.c0 THEN rt0.c1 END)))AND((vt0.c0 IN (rt0.c1, rt0.c4)))))AND(((rt0.c1)>>(vt0.c1)))) GROUP BY vt0.c1, rt0.c1, rt0.c3, rt0.c4, vt0.c0 HAVING '' UNION ALL SELECT vt0.c1, rt0.c1, rt0.c3, rt0.c4, vt0.c0 FROM t0 INNER JOIN rt0 ON ((((rt0.c1 IN ())))>=((t0.c0))) INNER JOIN vt0 ON (((((((((t0.c0 IN ()))AND(((rt0.c0) ISNULL))))AND(CASE t0.c0  WHEN t0.c0 THEN rt0.c1 END)))AND((vt0.c0 IN (rt0.c1, rt0.c4)))))AND(((rt0.c1)>>(vt0.c1)))) GROUP BY vt0.c1, rt0.c1, rt0.c3, rt0.c4, vt0.c0 HAVING (NOT ('')) UNION ALL SELECT vt0.c1, rt0.c1, rt0.c3, rt0.c4, vt0.c0 FROM t0 INNER JOIN rt0 ON ((((rt0.c1 IN ())))>=((t0.c0))) INNER JOIN vt0 ON (((((((((t0.c0 IN ()))AND(((rt0.c0) ISNULL))))AND(CASE t0.c0  WHEN t0.c0 THEN rt0.c1 END)))AND((vt0.c0 IN (rt0.c1, rt0.c4)))))AND(((rt0.c1)>>(vt0.c1)))) GROUP BY vt0.c1, rt0.c1, rt0.c3, rt0.c4, vt0.c0 HAVING (('') ISNULL);
SELECT ALL vt0.c1, rt0.c1, rt0.c3, rt0.c4, vt0.c0 FROM t0 INNER JOIN rt0 ON ((((rt0.c1 IN ())))>=((t0.c0))) INNER JOIN vt0 ON (((((((((t0.c0 IN ()))AND(((rt0.c0) ISNULL))))AND(CASE t0.c0  WHEN t0.c0 THEN rt0.c1 END)))AND((vt0.c0 IN (rt0.c1, rt0.c4)))))AND(((rt0.c1)>>(vt0.c1)))) GROUP BY vt0.c1, rt0.c1, rt0.c3, rt0.c4, vt0.c0;
SELECT vt0.c1, rt0.c1, rt0.c3, rt0.c4, vt0.c0 FROM t0 INNER JOIN rt0 ON ((((rt0.c1 IN ())))>=((t0.c0))) INNER JOIN vt0 ON (((((((((t0.c0 IN ()))AND(((rt0.c0) ISNULL))))AND(CASE t0.c0  WHEN t0.c0 THEN rt0.c1 END)))AND((vt0.c0 IN (rt0.c1, rt0.c4)))))AND(((rt0.c1)>>(vt0.c1)))) GROUP BY vt0.c1, rt0.c1, rt0.c3, rt0.c4, vt0.c0 HAVING '' UNION ALL SELECT vt0.c1, rt0.c1, rt0.c3, rt0.c4, vt0.c0 FROM t0 INNER JOIN rt0 ON ((((rt0.c1 IN ())))>=((t0.c0))) INNER JOIN vt0 ON (((((((((t0.c0 IN ()))AND(((rt0.c0) ISNULL))))AND(CASE t0.c0  WHEN t0.c0 THEN rt0.c1 END)))AND((vt0.c0 IN (rt0.c1, rt0.c4)))))AND(((rt0.c1)>>(vt0.c1)))) GROUP BY vt0.c1, rt0.c1, rt0.c3, rt0.c4, vt0.c0 HAVING (NOT ('')) UNION ALL SELECT vt0.c1, rt0.c1, rt0.c3, rt0.c4, vt0.c0 FROM t0 INNER JOIN rt0 ON ((((rt0.c1 IN ())))>=((t0.c0))) INNER JOIN vt0 ON (((((((((t0.c0 IN ()))AND(((rt0.c0) ISNULL))))AND(CASE t0.c0  WHEN t0.c0 THEN rt0.c1 END)))AND((vt0.c0 IN (rt0.c1, rt0.c4)))))AND(((rt0.c1)>>(vt0.c1)))) GROUP BY vt0.c1, rt0.c1, rt0.c3, rt0.c4, vt0.c0 HAVING (('') ISNULL);
SELECT ALL vt0.c1, rt0.c1, rt0.c3, rt0.c4, vt0.c0 FROM t0 INNER JOIN rt0 ON ((((rt0.c1 IN ())))>=((t0.c0))) INNER JOIN vt0 ON (((((((((t0.c0 IN ()))AND(((rt0.c0) ISNULL))))AND(CASE t0.c0  WHEN t0.c0 THEN rt0.c1 END)))AND((vt0.c0 IN (rt0.c1, rt0.c4)))))AND(((rt0.c1)>>(vt0.c1)))) GROUP BY vt0.c1, rt0.c1, rt0.c3, rt0.c4, vt0.c0;
SELECT ALL * FROM t0;
SELECT ALL * FROM t0 WHERE (LIKE(((x'') BETWEEN (NULL) AND (t0.c0)), ((t0.c0)+(t0.c0)), '1')) UNION ALL SELECT * FROM t0 WHERE ((NOT (LIKE(((x'') BETWEEN (NULL) AND (t0.c0)), ((t0.c0)+(t0.c0)), '1')))) UNION ALL SELECT ALL * FROM t0 WHERE (((LIKE(((x'') BETWEEN (NULL) AND (t0.c0)), ((t0.c0)+(t0.c0)), '1')) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM rt0, t0 LEFT OUTER JOIN vt0 ON CHAR(((((rt0.c2)OR(rt0.c1)))OR(rt0.c3)));
SELECT DISTINCT * FROM rt0, t0 LEFT OUTER JOIN vt0 ON CHAR(((((rt0.c2)OR(rt0.c1)))OR(rt0.c3))) WHERE (((((rt0.c3)&(rt0.c4))) NOT BETWEEN ((rt0.c4 IN (rt0.c2, vt0.c1))) AND (rt0.c3))) UNION SELECT DISTINCT * FROM rt0, t0 LEFT OUTER JOIN vt0 ON CHAR(((((rt0.c2)OR(rt0.c1)))OR(rt0.c3))) WHERE ((NOT (((((rt0.c3)&(rt0.c4))) NOT BETWEEN ((rt0.c4 IN (rt0.c2, vt0.c1))) AND (rt0.c3))))) UNION SELECT DISTINCT * FROM rt0, t0 NOT INDEXED LEFT OUTER JOIN vt0 ON CHAR(((((rt0.c2)OR(rt0.c1)))OR(rt0.c3))) WHERE (((((((rt0.c3)&(rt0.c4))) NOT BETWEEN ((rt0.c4 IN (rt0.c2, vt0.c1))) AND (rt0.c3))) ISNULL));
SELECT DISTINCT * FROM rt0, t0 LEFT OUTER JOIN vt0 ON CHAR(((((rt0.c2)OR(rt0.c1)))OR(rt0.c3)));
SELECT ALL rt0.c3, vt0.c0, rt0.c2, rt0.c1, rt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c3, vt0.c0, rt0.c2, rt0.c1, rt0.c0, vt0.c1;
SELECT rt0.c3, vt0.c0, rt0.c2, rt0.c1, rt0.c0, vt0.c1 FROM rt0, vt0 WHERE ((((+ (rt0.c3))) NOT BETWEEN (0.21251650426144786) AND ((+ (rt0.c4))))) GROUP BY rt0.c3, vt0.c0, rt0.c2, rt0.c1, rt0.c0, vt0.c1 UNION SELECT ALL rt0.c3, vt0.c0, rt0.c2, rt0.c1, rt0.c0, vt0.c1 FROM rt0, vt0 WHERE ((NOT ((((+ (rt0.c3))) NOT BETWEEN (0.21251650426144786) AND ((+ (rt0.c4))))))) GROUP BY rt0.c3, vt0.c0, rt0.c2, rt0.c1, rt0.c0, vt0.c1 UNION SELECT ALL rt0.c3, vt0.c0, rt0.c2, rt0.c1, rt0.c0, vt0.c1 FROM rt0, vt0 WHERE ((((((+ (rt0.c3))) NOT BETWEEN (0.21251650426144786) AND ((+ (rt0.c4))))) ISNULL)) GROUP BY rt0.c3, vt0.c0, rt0.c2, rt0.c1, rt0.c0, vt0.c1;
SELECT ALL rt0.c3, vt0.c0, rt0.c2, rt0.c1, rt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c3, vt0.c0, rt0.c2, rt0.c1, rt0.c0, vt0.c1;
SELECT ALL rt0.c1, rt0.c2, vt0.c0, rt0.c4, t0.c0 FROM rt0, t0, vt0 GROUP BY rt0.c1, rt0.c2, vt0.c0, rt0.c4, t0.c0;
SELECT ALL rt0.c1, rt0.c2, vt0.c0, rt0.c4, t0.c0 FROM rt0, t0, vt0 GROUP BY rt0.c1, rt0.c2, vt0.c0, rt0.c4, t0.c0 HAVING GROUP_CONCAT(MAX(MIN(vt0.c0))) UNION ALL SELECT rt0.c1, rt0.c2, vt0.c0, rt0.c4, t0.c0 FROM rt0, t0, vt0 GROUP BY rt0.c1, rt0.c2, vt0.c0, rt0.c4, t0.c0 HAVING (NOT (GROUP_CONCAT(MAX(MIN(vt0.c0))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, vt0.c0, rt0.c4, t0.c0 FROM rt0, t0, vt0 GROUP BY rt0.c1, rt0.c2, vt0.c0, rt0.c4, t0.c0 HAVING ((GROUP_CONCAT(MAX(MIN(vt0.c0)))) ISNULL);
SELECT ALL * FROM vt0 INNER JOIN rt0 ON (TRIM(DISTINCT vt0.c0, rt0.c1) IN ()) RIGHT OUTER JOIN t0 ON CASE WHEN CAST(rt0.c2 AS REAL) THEN (((vt0.c0))>=((rt0.c4))) END;
SELECT ALL * FROM vt0 INNER JOIN rt0 ON (TRIM(DISTINCT vt0.c0, rt0.c1) IN ()) RIGHT OUTER JOIN t0 ON CASE WHEN CAST(rt0.c2 AS REAL) THEN (((vt0.c0))>=((rt0.c4))) END WHERE (((0.5128899865493294) IS TRUE)) UNION ALL SELECT * FROM vt0 INNER JOIN rt0 ON (TRIM(DISTINCT vt0.c0, rt0.c1) IN ()) RIGHT OUTER JOIN t0 ON CASE WHEN CAST(rt0.c2 AS REAL) THEN (((vt0.c0))>=((rt0.c4))) END WHERE ((NOT (((0.5128899865493294) IS TRUE)))) UNION ALL SELECT * FROM vt0 INNER JOIN rt0 ON (TRIM(DISTINCT vt0.c0, rt0.c1) IN ()) RIGHT OUTER JOIN t0 ON CASE WHEN CAST(rt0.c2 AS REAL) THEN (((vt0.c0))>=((rt0.c4))) END WHERE (((((0.5128899865493294) IS TRUE)) ISNULL));
SELECT ALL * FROM vt0 INNER JOIN rt0 ON (TRIM(DISTINCT vt0.c0, rt0.c1) IN ()) RIGHT OUTER JOIN t0 ON CASE WHEN CAST(rt0.c2 AS REAL) THEN (((vt0.c0))>=((rt0.c4))) END;
SELECT DISTINCT * FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0 WHERE (UNLIKELY(DISTINCT ((vt0.c1) BETWEEN (t0.c0) AND (t0.c0)))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((NOT (UNLIKELY(DISTINCT ((vt0.c1) BETWEEN (t0.c0) AND (t0.c0)))))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE (((UNLIKELY(DISTINCT ((vt0.c1) BETWEEN (t0.c0) AND (t0.c0)))) ISNULL));
SELECT DISTINCT * FROM vt0, t0;
SELECT vt0.c1, vt0.c0 FROM vt0, t0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0, t0 WHERE (((LIKELY(vt0.c1))LIKE(HEX(DISTINCT t0.c0)))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0, t0 WHERE ((NOT (((LIKELY(vt0.c1))LIKE(HEX(DISTINCT t0.c0)))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0, t0 WHERE (((((LIKELY(vt0.c1))LIKE(HEX(DISTINCT t0.c0)))) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0, t0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c0, vt0.c1 FROM t0, vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM t0, vt0 GROUP BY vt0.c0, vt0.c1 HAVING (COUNT(*) IN ()) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM t0, vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT ((COUNT(*) IN ()))) UNION ALL SELECT vt0.c0, vt0.c1 FROM t0, vt0 GROUP BY vt0.c0, vt0.c1 HAVING (((COUNT(*) IN ())) ISNULL);
SELECT vt0.c0, vt0.c1 FROM t0, vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM t0, vt0 GROUP BY vt0.c0, vt0.c1 HAVING (COUNT(*) IN ()) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM t0, vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT ((COUNT(*) IN ()))) UNION ALL SELECT vt0.c0, vt0.c1 FROM t0, vt0 GROUP BY vt0.c0, vt0.c1 HAVING (((COUNT(*) IN ())) ISNULL);
SELECT vt0.c0, vt0.c1 FROM t0, vt0 GROUP BY vt0.c0, vt0.c1;
SELECT rt0.c3, vt0.c1, vt0.c0, rt0.c2, rt0.c4, t0.c0, rt0.c0, rt0.c1 FROM rt0, t0, vt0;
SELECT rt0.c3, vt0.c1, vt0.c0, rt0.c2, rt0.c4, t0.c0, rt0.c0, rt0.c1 FROM rt0, t0, vt0 WHERE (((((CASE WHEN rt0.c4 THEN vt0.c1 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c2 ELSE x'' END)OR(((((rt0.c0)OR(rt0.c3)))AND(rt0.c3)))))OR(((t0.c0)/(rt0.c3))))) UNION ALL SELECT ALL rt0.c3, vt0.c1, vt0.c0, rt0.c2, rt0.c4, t0.c0, rt0.c0, rt0.c1 FROM rt0, t0, vt0 WHERE ((NOT (((((CASE WHEN rt0.c4 THEN vt0.c1 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c2 ELSE x'' END)OR(((((rt0.c0)OR(rt0.c3)))AND(rt0.c3)))))OR(((t0.c0)/(rt0.c3))))))) UNION ALL SELECT ALL rt0.c3, vt0.c1, vt0.c0, rt0.c2, rt0.c4, t0.c0, rt0.c0, rt0.c1 FROM rt0, t0, vt0 WHERE (((((((CASE WHEN rt0.c4 THEN vt0.c1 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c2 ELSE x'' END)OR(((((rt0.c0)OR(rt0.c3)))AND(rt0.c3)))))OR(((t0.c0)/(rt0.c3))))) ISNULL));
SELECT rt0.c3, vt0.c1, vt0.c0, rt0.c2, rt0.c4, t0.c0, rt0.c0, rt0.c1 FROM rt0, t0, vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((~ (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((~ (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((~ (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT rt0.c0, rt0.c1, rt0.c4, t0.c0, vt0.c1, rt0.c2 FROM rt0 RIGHT OUTER JOIN t0 ON '\rયfi' CROSS JOIN vt0 ON ((rt0.c1 IN (vt0.c0)) IN ()) GROUP BY rt0.c0, rt0.c1, rt0.c4, t0.c0, vt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c4, t0.c0, vt0.c1, rt0.c2 FROM rt0 RIGHT OUTER JOIN t0 ON '\rયfi' CROSS JOIN vt0 ON ((rt0.c1 IN (vt0.c0)) IN ()) WHERE ((((+ (0.7150748843293376))) IS TRUE)) GROUP BY rt0.c0, rt0.c1, rt0.c4, t0.c0, vt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c4, t0.c0, vt0.c1, rt0.c2 FROM rt0 RIGHT OUTER JOIN t0 ON '\rયfi' CROSS JOIN vt0 ON ((rt0.c1 IN (vt0.c0)) IN ()) WHERE ((NOT ((((+ (0.7150748843293376))) IS TRUE)))) GROUP BY rt0.c0, rt0.c1, rt0.c4, t0.c0, vt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c4, t0.c0, vt0.c1, rt0.c2 FROM rt0 RIGHT OUTER JOIN t0 ON '\rયfi' CROSS JOIN vt0 ON ((rt0.c1 IN (vt0.c0)) IN ()) WHERE ((((((+ (0.7150748843293376))) IS TRUE)) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c4, t0.c0, vt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c4, t0.c0, vt0.c1, rt0.c2 FROM rt0 RIGHT OUTER JOIN t0 ON '\rયfi' CROSS JOIN vt0 ON ((rt0.c1 IN (vt0.c0)) IN ()) GROUP BY rt0.c0, rt0.c1, rt0.c4, t0.c0, vt0.c1, rt0.c2;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING COUNT(MIN(0.6188109200297113)) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (COUNT(MIN(0.6188109200297113)))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((COUNT(MIN(0.6188109200297113))) ISNULL);
SELECT * FROM t0, rt0;
SELECT * FROM t0, rt0 WHERE (((CAST(rt0.c4 AS REAL)) NOTNULL)) UNION ALL SELECT * FROM t0, rt0 WHERE ((NOT (((CAST(rt0.c4 AS REAL)) NOTNULL)))) UNION ALL SELECT * FROM t0, rt0 WHERE (((((CAST(rt0.c4 AS REAL)) NOTNULL)) ISNULL));
SELECT * FROM t0, rt0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((t0.c0)>>(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (((t0.c0)>>(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((((t0.c0)>>(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL rt0.c2 FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c3 IN ()) IN ()) LEFT OUTER JOIN t0 ON ((((vt0.c0)<<(rt0.c2)))IS NOT(CAST(rt0.c2 AS REAL))) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c3 IN ()) IN ()) LEFT OUTER JOIN t0 ON ((((vt0.c0)<<(rt0.c2)))IS NOT(CAST(rt0.c2 AS REAL))) WHERE (((rt0.c3 COLLATE BINARY) IS FALSE)) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c3 IN ()) IN ()) LEFT OUTER JOIN t0 ON ((((vt0.c0)<<(rt0.c2)))IS NOT(CAST(rt0.c2 AS REAL))) WHERE ((NOT (((rt0.c3 COLLATE BINARY) IS FALSE)))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c3 IN ()) IN ()) LEFT OUTER JOIN t0 ON ((((vt0.c0)<<(rt0.c2)))IS NOT(CAST(rt0.c2 AS REAL))) WHERE (((((rt0.c3 COLLATE BINARY) IS FALSE)) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c3 IN ()) IN ()) LEFT OUTER JOIN t0 ON ((((vt0.c0)<<(rt0.c2)))IS NOT(CAST(rt0.c2 AS REAL))) GROUP BY rt0.c2;
SELECT rt0.c2, vt0.c1, rt0.c1, vt0.c0, rt0.c0, rt0.c4 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c1, rt0.c1, vt0.c0, rt0.c0, rt0.c4;
SELECT rt0.c2, vt0.c1, rt0.c1, vt0.c0, rt0.c0, rt0.c4 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c1, rt0.c1, vt0.c0, rt0.c0, rt0.c4 HAVING CASE SUM(rt0.c1)  WHEN (NOT (rt0.c1)) THEN GROUP_CONCAT(rt0.c3) END UNION ALL SELECT ALL rt0.c2, vt0.c1, rt0.c1, vt0.c0, rt0.c0, rt0.c4 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c1, rt0.c1, vt0.c0, rt0.c0, rt0.c4 HAVING (NOT (CASE SUM(rt0.c1)  WHEN (NOT (rt0.c1)) THEN GROUP_CONCAT(rt0.c3) END)) UNION ALL SELECT rt0.c2, vt0.c1, rt0.c1, vt0.c0, rt0.c0, rt0.c4 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c1, rt0.c1, vt0.c0, rt0.c0, rt0.c4 HAVING ((CASE SUM(rt0.c1)  WHEN (NOT (rt0.c1)) THEN GROUP_CONCAT(rt0.c3) END) ISNULL);
SELECT rt0.c2, vt0.c1, rt0.c1, vt0.c0, rt0.c0, rt0.c4 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c1, rt0.c1, vt0.c0, rt0.c0, rt0.c4;
SELECT rt0.c2, vt0.c1, rt0.c1, vt0.c0, rt0.c0, rt0.c4 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c1, rt0.c1, vt0.c0, rt0.c0, rt0.c4 HAVING CASE SUM(rt0.c1)  WHEN (NOT (rt0.c1)) THEN GROUP_CONCAT(rt0.c3) END UNION ALL SELECT ALL rt0.c2, vt0.c1, rt0.c1, vt0.c0, rt0.c0, rt0.c4 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c1, rt0.c1, vt0.c0, rt0.c0, rt0.c4 HAVING (NOT (CASE SUM(rt0.c1)  WHEN (NOT (rt0.c1)) THEN GROUP_CONCAT(rt0.c3) END)) UNION ALL SELECT rt0.c2, vt0.c1, rt0.c1, vt0.c0, rt0.c0, rt0.c4 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c1, rt0.c1, vt0.c0, rt0.c0, rt0.c4 HAVING ((CASE SUM(rt0.c1)  WHEN (NOT (rt0.c1)) THEN GROUP_CONCAT(rt0.c3) END) ISNULL);
SELECT rt0.c2, vt0.c1, rt0.c1, vt0.c0, rt0.c0, rt0.c4 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c1, rt0.c1, vt0.c0, rt0.c0, rt0.c4;
SELECT ALL vt0.c0, vt0.c1 FROM vt0;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (CAST((vt0.c0 IN ()) AS REAL)) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (CAST((vt0.c0 IN ()) AS REAL)))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((CAST((vt0.c0 IN ()) AS REAL)) ISNULL));
SELECT ALL vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c3) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c3))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c3) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1, rt0.c4, rt0.c3, rt0.c0, vt0.c0 FROM t0, rt0 INNER JOIN vt0 ON ((CASE WHEN rt0.c4 THEN t0.c0 ELSE 0.996436184194897 END)%((~ (t0.c0)))) GROUP BY rt0.c1, rt0.c4, rt0.c3, rt0.c0, vt0.c0;
SELECT ALL rt0.c1, rt0.c4, rt0.c3, rt0.c0, vt0.c0 FROM t0, rt0 INNER JOIN vt0 ON ((CASE WHEN rt0.c4 THEN t0.c0 ELSE 0.996436184194897 END)%((~ (t0.c0)))) WHERE ((((rt0.c4, rt0.c1, t0.c0)) NOT BETWEEN (((((vt0.c0, t0.c0, vt0.c1, 1725253542, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c2, t0.c0, rt0.c4, rt0.c0)) AND ((rt0.c4, rt0.c1, rt0.c4, rt0.c1, t0.c0))), ((((t0.c0)OR(rt0.c1)))OR(rt0.c4)), rt0.c4 COLLATE BINARY)) AND (((((vt0.c0))>((rt0.c2))), rt0.c2 COLLATE BINARY, json_array_length(vt0.c1))))) GROUP BY rt0.c1, rt0.c4, rt0.c3, rt0.c0, vt0.c0 UNION SELECT rt0.c1, rt0.c4, rt0.c3, rt0.c0, vt0.c0 FROM t0, rt0 INNER JOIN vt0 ON ((CASE WHEN rt0.c4 THEN t0.c0 ELSE 0.996436184194897 END)%((~ (t0.c0)))) WHERE ((NOT ((((rt0.c4, rt0.c1, t0.c0)) NOT BETWEEN (((((vt0.c0, t0.c0, vt0.c1, 1725253542, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c2, t0.c0, rt0.c4, rt0.c0)) AND ((rt0.c4, rt0.c1, rt0.c4, rt0.c1, t0.c0))), ((((t0.c0)OR(rt0.c1)))OR(rt0.c4)), rt0.c4 COLLATE BINARY)) AND (((((vt0.c0))>((rt0.c2))), rt0.c2 COLLATE BINARY, json_array_length(vt0.c1))))))) GROUP BY rt0.c1, rt0.c4, rt0.c3, rt0.c0, vt0.c0 UNION SELECT rt0.c1, rt0.c4, rt0.c3, rt0.c0, vt0.c0 FROM t0, rt0 INNER JOIN vt0 ON ((CASE WHEN rt0.c4 THEN t0.c0 ELSE 0.996436184194897 END)%((~ (t0.c0)))) WHERE ((((((rt0.c4, rt0.c1, t0.c0)) NOT BETWEEN (((((vt0.c0, t0.c0, vt0.c1, 1725253542, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c2, t0.c0, rt0.c4, rt0.c0)) AND ((rt0.c4, rt0.c1, rt0.c4, rt0.c1, t0.c0))), ((((t0.c0)OR(rt0.c1)))OR(rt0.c4)), rt0.c4 COLLATE BINARY)) AND (((((vt0.c0))>((rt0.c2))), rt0.c2 COLLATE BINARY, json_array_length(vt0.c1))))) ISNULL)) GROUP BY rt0.c1, rt0.c4, rt0.c3, rt0.c0, vt0.c0;
SELECT rt0.c1, rt0.c4, rt0.c3, rt0.c0, vt0.c0 FROM t0, rt0 INNER JOIN vt0 ON ((CASE WHEN rt0.c4 THEN t0.c0 ELSE 0.996436184194897 END)%((~ (t0.c0)))) GROUP BY rt0.c1, rt0.c4, rt0.c3, rt0.c0, vt0.c0;
SELECT ALL vt0.c1 FROM t0, vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM t0, vt0 GROUP BY vt0.c1 HAVING CASE WHEN (NOT (AVG(t0.c0))) THEN SUM(SUM('Ff靯k')) END UNION ALL SELECT vt0.c1 FROM t0, vt0 GROUP BY vt0.c1 HAVING (NOT (CASE WHEN (NOT (AVG(t0.c0))) THEN SUM(SUM('Ff靯k')) END)) UNION ALL SELECT vt0.c1 FROM t0, vt0 GROUP BY vt0.c1 HAVING ((CASE WHEN (NOT (AVG(t0.c0))) THEN SUM(SUM('Ff靯k')) END) ISNULL);
SELECT ALL rt0.c1, rt0.c3, rt0.c4, rt0.c2 FROM rt0, t0;
SELECT ALL rt0.c1, rt0.c3, rt0.c4, rt0.c2 FROM rt0, t0 WHERE (CASE WHEN ((rt0.c0)IS(rt0.c0)) THEN ((rt0.c1)IS NOT(rt0.c2)) END) UNION ALL SELECT rt0.c1, rt0.c3, rt0.c4, rt0.c2 FROM rt0, t0 WHERE ((NOT (CASE WHEN ((rt0.c0)IS(rt0.c0)) THEN ((rt0.c1)IS NOT(rt0.c2)) END))) UNION ALL SELECT ALL rt0.c1, rt0.c3, rt0.c4, rt0.c2 FROM rt0, t0 WHERE (((CASE WHEN ((rt0.c0)IS(rt0.c0)) THEN ((rt0.c1)IS NOT(rt0.c2)) END) ISNULL));
SELECT ALL rt0.c1, rt0.c3, rt0.c4, rt0.c2 FROM rt0, t0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE (0.7780753998782887) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (0.7780753998782887))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE (((0.7780753998782887) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ((((((('')OR(NULL)))AND(t0.c0)))>((t0.c0 IN ())))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((((((('')OR(NULL)))AND(t0.c0)))>((t0.c0 IN ())))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((((((((('')OR(NULL)))AND(t0.c0)))>((t0.c0 IN ())))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0, vt0.c1 FROM vt0, t0 GROUP BY t0.c0, vt0.c1;
SELECT t0.c0, vt0.c1 FROM vt0, t0 GROUP BY t0.c0, vt0.c1 HAVING SUM(SUM(t0.c0)) UNION ALL SELECT ALL t0.c0, vt0.c1 FROM vt0, t0 GROUP BY t0.c0, vt0.c1 HAVING (NOT (SUM(SUM(t0.c0)))) UNION ALL SELECT t0.c0, vt0.c1 FROM vt0, t0 GROUP BY t0.c0, vt0.c1 HAVING ((SUM(SUM(t0.c0))) ISNULL);
SELECT ALL rt0.c3, rt0.c0, rt0.c1, t0.c0, vt0.c0, vt0.c1 FROM rt0, t0, vt0;
SELECT ALL rt0.c3, rt0.c0, rt0.c1, t0.c0, vt0.c0, vt0.c1 FROM rt0, t0, vt0 WHERE ((((rt0.c4)<(rt0.c0)) IN ())) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c1, t0.c0, vt0.c0, vt0.c1 FROM rt0, t0, vt0 WHERE ((NOT ((((rt0.c4)<(rt0.c0)) IN ())))) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c1, t0.c0, vt0.c0, vt0.c1 FROM rt0, t0, vt0 WHERE ((((((rt0.c4)<(rt0.c0)) IN ())) ISNULL));
SELECT ALL rt0.c3, rt0.c0, rt0.c1, t0.c0, vt0.c0, vt0.c1 FROM rt0, t0, vt0;
SELECT DISTINCT rt0.c3 FROM vt0, rt0, t0;
SELECT DISTINCT rt0.c3 FROM vt0, rt0, t0 WHERE (vt0.c0) UNION SELECT DISTINCT rt0.c3 FROM vt0, rt0, t0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT rt0.c3 FROM vt0, rt0, t0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT rt0.c3 FROM vt0, rt0, t0;
SELECT rt0.c3, rt0.c2, vt0.c1, rt0.c1 FROM rt0, vt0, t0 GROUP BY rt0.c3, rt0.c2, vt0.c1, rt0.c1;
SELECT ALL rt0.c3, rt0.c2, vt0.c1, rt0.c1 FROM rt0, vt0, t0 WHERE (LIKELIHOOD(DISTINCT CAST(rt0.c3 AS NUMERIC), 0.3621379351658378)) GROUP BY rt0.c3, rt0.c2, vt0.c1, rt0.c1 UNION SELECT ALL rt0.c3, rt0.c2, vt0.c1, rt0.c1 FROM rt0, vt0, t0 WHERE ((NOT (LIKELIHOOD(DISTINCT CAST(rt0.c3 AS NUMERIC), 0.3621379351658378)))) GROUP BY rt0.c3, rt0.c2, vt0.c1, rt0.c1 UNION SELECT ALL rt0.c3, rt0.c2, vt0.c1, rt0.c1 FROM rt0, vt0, t0 WHERE (((LIKELIHOOD(DISTINCT CAST(rt0.c3 AS NUMERIC), 0.3621379351658378)) ISNULL)) GROUP BY rt0.c3, rt0.c2, vt0.c1, rt0.c1;
SELECT rt0.c3, rt0.c2, vt0.c1, rt0.c1 FROM rt0, vt0, t0 GROUP BY rt0.c3, rt0.c2, vt0.c1, rt0.c1;
SELECT ALL vt0.c0, rt0.c4, vt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c4, vt0.c1, rt0.c2;
SELECT vt0.c0, rt0.c4, vt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c4, vt0.c1, rt0.c2 HAVING ((((((rt0.c4)>=(SUM(MIN(AVG(MAX(AVG(MAX(MAX(AVG(AVG(rt0.c1))))))))))))AND((((MIN(vt0.c0)))<=((rt0.c2))))))OR(COUNT(*))) UNION ALL SELECT ALL vt0.c0, rt0.c4, vt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c4, vt0.c1, rt0.c2 HAVING (NOT (((((((rt0.c4)>=(SUM(MIN(AVG(MAX(AVG(MAX(MAX(AVG(AVG(rt0.c1))))))))))))AND((((MIN(vt0.c0)))<=((rt0.c2))))))OR(COUNT(*))))) UNION ALL SELECT ALL vt0.c0, rt0.c4, vt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c4, vt0.c1, rt0.c2 HAVING ((((((((rt0.c4)>=(SUM(MIN(AVG(MAX(AVG(MAX(MAX(AVG(AVG(rt0.c1))))))))))))AND((((MIN(vt0.c0)))<=((rt0.c2))))))OR(COUNT(*)))) ISNULL);
SELECT ALL * FROM vt0, t0, rt0;
SELECT ALL * FROM vt0, t0, rt0 WHERE (((rt0.c3)<=(rt0.c3)) COLLATE RTRIM) UNION ALL SELECT ALL * FROM vt0, t0, rt0 WHERE ((NOT (((rt0.c3)<=(rt0.c3)) COLLATE RTRIM))) UNION ALL SELECT * FROM vt0, t0, rt0 WHERE (((((rt0.c3)<=(rt0.c3)) COLLATE RTRIM) ISNULL));
SELECT ALL * FROM vt0, t0, rt0;
SELECT DISTINCT vt0.c1, t0.c0 FROM t0, vt0;
SELECT DISTINCT vt0.c1, t0.c0 FROM t0, vt0 WHERE (vt0.c0) UNION SELECT DISTINCT vt0.c1, t0.c0 FROM t0, vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.c1, t0.c0 FROM t0, vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.c1, t0.c0 FROM t0, vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0)>=(vt0.c0))) BETWEEN (vt0.c0 COLLATE NOCASE) AND (vt0.c0 COLLATE BINARY))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0)>=(vt0.c0))) BETWEEN (vt0.c0 COLLATE NOCASE) AND (vt0.c0 COLLATE BINARY))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c0)>=(vt0.c0))) BETWEEN (vt0.c0 COLLATE NOCASE) AND (vt0.c0 COLLATE BINARY))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL t0.c0 FROM t0 INDEXED BY i81 GROUP BY t0.c0;
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.c0 COLLATE NOCASE END) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN vt0.c0 THEN vt0.c0 COLLATE NOCASE END))) UNION ALL SELECT ALL vt0.c0 FROM vt0 NOT INDEXED WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 COLLATE NOCASE END) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c1, t0.c0, rt0.c4, rt0.c2, rt0.c1 FROM t0, vt0 LEFT OUTER JOIN rt0 ON vt0.c1;
SELECT DISTINCT vt0.c1, t0.c0, rt0.c4, rt0.c2, rt0.c1 FROM t0, vt0 LEFT OUTER JOIN rt0 ON vt0.c1 WHERE ((((((rt0.c4)<<(0.2521552165869949))))!=((rt0.c1)))) UNION SELECT DISTINCT vt0.c1, t0.c0, rt0.c4, rt0.c2, rt0.c1 FROM t0, vt0 LEFT OUTER JOIN rt0 ON vt0.c1 WHERE ((NOT ((((((rt0.c4)<<(0.2521552165869949))))!=((rt0.c1)))))) UNION SELECT DISTINCT vt0.c1, t0.c0, rt0.c4, rt0.c2, rt0.c1 FROM t0, vt0 LEFT OUTER JOIN rt0 ON vt0.c1 WHERE ((((((((rt0.c4)<<(0.2521552165869949))))<>((rt0.c1)))) ISNULL));
SELECT DISTINCT vt0.c1, t0.c0, rt0.c4, rt0.c2, rt0.c1 FROM t0, vt0 LEFT OUTER JOIN rt0 ON vt0.c1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (CAST((+ (t0.c0)) AS INTEGER)) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (CAST((+ (t0.c0)) AS INTEGER)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((CAST((+ (t0.c0)) AS INTEGER)) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0, vt0.c0, vt0.c1 FROM vt0 LEFT OUTER JOIN t0 ON NULL GROUP BY t0.c0, vt0.c0, vt0.c1;
SELECT t0.c0, vt0.c0, vt0.c1 FROM vt0 LEFT OUTER JOIN t0 ON NULL GROUP BY t0.c0, vt0.c0, vt0.c1 HAVING COUNT(((((((((COUNT(*))AND(GROUP_CONCAT(vt0.c1))))AND(vt0.c0)))OR(SUM(x''))))OR(t0.c0))) UNION ALL SELECT t0.c0, vt0.c0, vt0.c1 FROM vt0 LEFT OUTER JOIN t0 ON NULL GROUP BY t0.c0, vt0.c0, vt0.c1 HAVING (NOT (COUNT(((((((((COUNT(*))AND(GROUP_CONCAT(vt0.c1))))AND(vt0.c0)))OR(SUM(x''))))OR(t0.c0))))) UNION ALL SELECT t0.c0, vt0.c0, vt0.c1 FROM vt0 LEFT OUTER JOIN t0 ON NULL GROUP BY t0.c0, vt0.c0, vt0.c1 HAVING ((COUNT(((((((((COUNT(*))AND(GROUP_CONCAT(vt0.c1))))AND(vt0.c0)))OR(SUM(x''))))OR(t0.c0)))) ISNULL);
SELECT ALL MIN(rtreenode(((rt0.c3)GLOB(rt0.c4)), CAST(rt0.c1 AS TEXT))) FROM rt0, vt0, t0 ORDER BY CASE CASE t0.c0  WHEN vt0.c0 THEN vt0.c1 END  WHEN (- (t0.c0)) THEN CASE rt0.c0  WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c4 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN vt0.c0 ELSE 0.5447425503878314 END ELSE CAST(NULL AS BLOB) END, CASE rt0.c1  WHEN t0.c0 THEN vt0.c1 WHEN rt0.c4 THEN t0.c0 WHEN vt0.c1 THEN rt0.c4 ELSE rt0.c2 END COLLATE RTRIM DESC;
SELECT ALL vt0.c0, vt0.c1 FROM vt0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (vt0.c1) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (vt0.c1))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (((vt0.c1) ISNULL));
SELECT ALL vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt0 ON ((((((vt0.c0)AND(rt0.c2)))OR(rt0.c1))) NOT BETWEEN (TRIM(DISTINCT rt0.c4)) AND ((NOT (vt0.c0))));
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt0 ON ((((((vt0.c0)AND(rt0.c2)))OR(rt0.c1))) NOT BETWEEN (TRIM(DISTINCT rt0.c4)) AND ((NOT (vt0.c0)))) WHERE (DATE((rt0.c4 IN (rt0.c2)), ((rt0.c3)IS(vt0.c1)), NULL)) UNION SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt0 ON ((((((vt0.c0)AND(rt0.c2)))OR(rt0.c1))) NOT BETWEEN (TRIM(DISTINCT rt0.c4)) AND ((NOT (vt0.c0)))) WHERE ((NOT (DATE((rt0.c4 IN (rt0.c2)), ((rt0.c3)IS(vt0.c1)), NULL)))) UNION SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt0 ON ((((((vt0.c0)AND(rt0.c2)))OR(rt0.c1))) NOT BETWEEN (TRIM(DISTINCT rt0.c4)) AND ((NOT (vt0.c0)))) WHERE (((DATE((rt0.c4 IN (rt0.c2)), ((rt0.c3)IS(vt0.c1)), NULL)) ISNULL));
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt0 ON ((((((vt0.c0)AND(rt0.c2)))OR(rt0.c1))) NOT BETWEEN (TRIM(DISTINCT rt0.c4)) AND ((NOT (vt0.c0))));
SELECT rt0.c1, rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c3;
SELECT rt0.c1, rt0.c2, rt0.c0, rt0.c3 FROM rt0 WHERE ((((rt0.c3 IN ()))LIKE(((rt0.c4)|(rt0.c0))))) GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c3 UNION SELECT rt0.c1, rt0.c2, rt0.c0, rt0.c3 FROM rt0 WHERE ((NOT ((((rt0.c3 IN ()))LIKE(((rt0.c4)|(rt0.c0))))))) GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c3 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0, rt0.c3 FROM rt0 WHERE ((((((rt0.c3 IN ()))LIKE(((rt0.c4)|(rt0.c0))))) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c3;
SELECT rt0.c1, rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c3;
SELECT rt0.c4, vt0.c0, rt0.c3 FROM t0, vt0, rt0 GROUP BY rt0.c4, vt0.c0, rt0.c3;
SELECT ALL rt0.c4, vt0.c0, rt0.c3 FROM t0, vt0, rt0 GROUP BY rt0.c4, vt0.c0, rt0.c3 HAVING GROUP_CONCAT(AVG(rt0.c4)) UNION ALL SELECT ALL rt0.c4, vt0.c0, rt0.c3 FROM t0, vt0, rt0 GROUP BY rt0.c4, vt0.c0, rt0.c3 HAVING (NOT (GROUP_CONCAT(AVG(rt0.c4)))) UNION ALL SELECT rt0.c4, vt0.c0, rt0.c3 FROM t0, vt0, rt0 GROUP BY rt0.c4, vt0.c0, rt0.c3 HAVING ((GROUP_CONCAT(AVG(rt0.c4))) ISNULL);
SELECT ALL * FROM t0, rt0;
SELECT * FROM t0, rt0 WHERE ((0xffffffff8f172a30 IN ())) UNION ALL SELECT ALL * FROM t0, rt0 WHERE ((NOT ((0Xffffffff8f172a30 IN ())))) UNION ALL SELECT * FROM t0, rt0 WHERE ((((0xffffffff8f172a30 IN ())) ISNULL));
SELECT ALL * FROM t0, rt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (vt0.c1 COLLATE RTRIM) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (vt0.c1 COLLATE RTRIM))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((vt0.c1 COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (t0.c0 COLLATE NOCASE) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (t0.c0 COLLATE NOCASE))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((t0.c0 COLLATE NOCASE) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING AVG(GROUP_CONCAT(MAX(vt0.c0))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (AVG(GROUP_CONCAT(MAX(vt0.c0))))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((AVG(GROUP_CONCAT(MAX(vt0.c0)))) ISNULL);
SELECT rt0.c1, t0.c0 FROM vt0, t0 INNER JOIN rt0 ON (((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2)))) BETWEEN (((rt0.c1)>('{ꐓa'))) AND (CAST(rt0.c3 AS TEXT)));
SELECT ALL rt0.c1, t0.c0 FROM vt0, t0 INNER JOIN rt0 ON (((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2)))) BETWEEN (((rt0.c1)>('{ꐓa'))) AND (CAST(rt0.c3 AS TEXT))) WHERE (CAST((+ (t0.c0)) AS BLOB)) UNION ALL SELECT rt0.c1, t0.c0 FROM vt0, t0 INNER JOIN rt0 ON (((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2)))) BETWEEN (((rt0.c1)>('{ꐓa'))) AND (CAST(rt0.c3 AS TEXT))) WHERE ((NOT (CAST((+ (t0.c0)) AS BLOB)))) UNION ALL SELECT rt0.c1, t0.c0 FROM vt0, t0 INNER JOIN rt0 ON (((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2)))) BETWEEN (((rt0.c1)>('{ꐓa'))) AND (CAST(rt0.c3 AS TEXT))) WHERE (((CAST((+ (t0.c0)) AS BLOB)) ISNULL));
SELECT rt0.c1, t0.c0 FROM vt0, t0 INNER JOIN rt0 ON (((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2)))) BETWEEN (((rt0.c1)>('{ꐓa'))) AND (CAST(rt0.c3 AS TEXT)));
SELECT DISTINCT * FROM vt0, rt0, t0;
SELECT DISTINCT * FROM vt0, rt0, t0 WHERE (((CAST(vt0.c0 AS INTEGER)) BETWEEN (((rt0.c4)LIKE(vt0.c1))) AND ((~ (vt0.c1))))) UNION SELECT DISTINCT * FROM vt0, rt0, t0 WHERE ((NOT (((CAST(vt0.c0 AS INTEGER)) BETWEEN (((rt0.c4)LIKE(vt0.c1))) AND ((~ (vt0.c1))))))) UNION SELECT DISTINCT * FROM vt0, rt0, t0 WHERE (((((CAST(vt0.c0 AS INTEGER)) BETWEEN (((rt0.c4)LIKE(vt0.c1))) AND ((~ (vt0.c1))))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0, t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (CASE ((t0.c0)>>(0.5311984556680135))  WHEN ((((t0.c0)AND(t0.c0)))OR(t0.c0)) THEN (t0.c0 IN ()) END) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (CASE ((t0.c0)>>(0.5311984556680135))  WHEN ((((t0.c0)AND(t0.c0)))OR(t0.c0)) THEN (t0.c0 IN ()) END))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((CASE ((t0.c0)>>(0.5311984556680135))  WHEN ((((t0.c0)AND(t0.c0)))OR(t0.c0)) THEN (t0.c0 IN ()) END) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt0.c2, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c1;
SELECT ALL rt0.c2, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c1 HAVING ((rt0.c4 COLLATE BINARY)+(UNLIKELY(DISTINCT rt0.c2))) UNION ALL SELECT ALL rt0.c2, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c1 HAVING (NOT (((rt0.c4 COLLATE BINARY)+(UNLIKELY(DISTINCT rt0.c2))))) UNION ALL SELECT ALL rt0.c2, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c1 HAVING ((((rt0.c4 COLLATE BINARY)+(UNLIKELY(DISTINCT rt0.c2)))) ISNULL);
SELECT ALL rt0.c2, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c1;
SELECT ALL rt0.c2, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c1 HAVING ((rt0.c4 COLLATE BINARY)+(UNLIKELY(DISTINCT rt0.c2))) UNION ALL SELECT ALL rt0.c2, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c1 HAVING (NOT (((rt0.c4 COLLATE BINARY)+(UNLIKELY(DISTINCT rt0.c2))))) UNION ALL SELECT ALL rt0.c2, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c1 HAVING ((((rt0.c4 COLLATE BINARY)+(UNLIKELY(DISTINCT rt0.c2)))) ISNULL);
SELECT ALL rt0.c2, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c1;
SELECT ALL * FROM t0, rt0, vt0;
SELECT * FROM t0, rt0, vt0 WHERE ((((((((((rt0.c3)AND(vt0.c0)))OR(rt0.c4)))AND(vt0.c0)))OR(rt0.c0)) IN ())) UNION ALL SELECT ALL * FROM t0, rt0, vt0 WHERE ((NOT ((((((((((rt0.c3)AND(vt0.c0)))OR(rt0.c4)))AND(vt0.c0)))OR(rt0.c0)) IN ())))) UNION ALL SELECT * FROM t0, rt0, vt0 WHERE ((((((((((((rt0.c3)AND(vt0.c0)))OR(rt0.c4)))AND(vt0.c0)))OR(rt0.c0)) IN ())) ISNULL));
SELECT ALL * FROM t0, rt0, vt0;
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN t0 ON (NOT (((rt0.c4)OR(vt0.c1)))) INNER JOIN vt0 ON (((((rt0.c2))<((rt0.c3))))/((((vt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))));
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (CAST(((t0.c0)AND('xCJs')) AS NUMERIC)) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (CAST(((t0.c0)AND('xCJs')) AS NUMERIC)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((CAST(((t0.c0)AND('xCJs')) AS NUMERIC)) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0, vt0.c0, rt0.c4, vt0.c1, rt0.c3 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt0.c0, rt0.c4, vt0.c1, rt0.c3;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt0.c0, rt0.c4, vt0.c1, rt0.c3 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt0.c0, rt0.c4, vt0.c1, rt0.c3 HAVING SUM(MAX(TOTAL(rt0.c1))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0, vt0.c0, rt0.c4, vt0.c1, rt0.c3 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt0.c0, rt0.c4, vt0.c1, rt0.c3 HAVING (NOT (SUM(MAX(TOTAL(rt0.c1))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0, vt0.c0, rt0.c4, vt0.c1, rt0.c3 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt0.c0, rt0.c4, vt0.c1, rt0.c3 HAVING ((SUM(MAX(TOTAL(rt0.c1)))) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END IN ())) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END IN ())))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END IN ())) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CAST(((rt0.c2) NOTNULL) AS BLOB)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CAST(((rt0.c2) NOTNULL) AS BLOB)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CAST(((rt0.c2) NOTNULL) AS BLOB)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (NULLIF(((rt0.c0)<=(rt0.c4)), IFNULL(rt0.c0, rt0.c4))) GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (NULLIF(((rt0.c0)<=(rt0.c4)), IFNULL(rt0.c0, rt0.c4))))) GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((NULLIF(((rt0.c0)<=(rt0.c4)), IFNULL(rt0.c0, rt0.c4))) ISNULL)) GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING json(CASE WHEN NULL THEN vt0.c1 ELSE MAX(MAX(1.182709025E9)) END) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (json(CASE WHEN NULL THEN vt0.c1 ELSE MAX(MAX(1.182709025E9)) END))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((json(CASE WHEN NULL THEN vt0.c1 ELSE MAX(MAX(1.182709025E9)) END)) ISNULL);
SELECT ALL * FROM vt0, rt0;
SELECT * FROM vt0, rt0 WHERE (COALESCE(((rt0.c3) NOT BETWEEN (rt0.c1) AND (NULL)), NULL)) UNION ALL SELECT * FROM vt0, rt0 WHERE ((NOT (COALESCE(((rt0.c3) NOT BETWEEN (rt0.c1) AND (NULL)), NULL)))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE (((COALESCE(((rt0.c3) NOT BETWEEN (rt0.c1) AND (NULL)), NULL)) ISNULL));
SELECT ALL * FROM vt0, rt0;
SELECT DISTINCT rt0.c4, vt0.c1, rt0.c1, rt0.c0, t0.c0 FROM rt0, t0 CROSS JOIN vt0 ON (rt0.c4 IN ()) COLLATE RTRIM;
SELECT DISTINCT rt0.c4, vt0.c1, rt0.c1, rt0.c0, t0.c0 FROM rt0, t0 CROSS JOIN vt0 ON (rt0.c4 IN ()) COLLATE RTRIM WHERE (json_array_length(((vt0.c0) ISNULL), CASE rt0.c2  WHEN rt0.c4 THEN NULL END)) UNION SELECT DISTINCT rt0.c4, vt0.c1, rt0.c1, rt0.c0, t0.c0 FROM rt0, t0 CROSS JOIN vt0 ON (rt0.c4 IN ()) COLLATE RTRIM WHERE ((NOT (json_array_length(((vt0.c0) ISNULL), CASE rt0.c2  WHEN rt0.c4 THEN NULL END)))) UNION SELECT DISTINCT rt0.c4, vt0.c1, rt0.c1, rt0.c0, t0.c0 FROM rt0, t0 CROSS JOIN vt0 ON (rt0.c4 IN ()) COLLATE RTRIM WHERE (((json_array_length(((vt0.c0) ISNULL), CASE rt0.c2  WHEN rt0.c4 THEN NULL END)) ISNULL));
SELECT DISTINCT rt0.c4, vt0.c1, rt0.c1, rt0.c0, t0.c0 FROM rt0, t0 CROSS JOIN vt0 ON (rt0.c4 IN ()) COLLATE RTRIM;
SELECT ALL vt0.c0, vt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c0, vt0.c1, rt0.c0;
SELECT ALL vt0.c0, vt0.c1, rt0.c0 FROM vt0, rt0 WHERE (CAST(CASE rt0.c3  WHEN NULL THEN vt0.c0 ELSE rt0.c2 END AS INTEGER)) GROUP BY vt0.c0, vt0.c1, rt0.c0 UNION SELECT ALL vt0.c0, vt0.c1, rt0.c0 FROM vt0, rt0 WHERE ((NOT (CAST(CASE rt0.c3  WHEN NULL THEN vt0.c0 ELSE rt0.c2 END AS INTEGER)))) GROUP BY vt0.c0, vt0.c1, rt0.c0 UNION SELECT vt0.c0, vt0.c1, rt0.c0 FROM vt0, rt0 WHERE (((CAST(CASE rt0.c3  WHEN NULL THEN vt0.c0 ELSE rt0.c2 END AS INTEGER)) ISNULL)) GROUP BY vt0.c0, vt0.c1, rt0.c0;
SELECT ALL vt0.c0, vt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c0, vt0.c1, rt0.c0;
SELECT vt0.c0 FROM vt0 INDEXED BY i92 GROUP BY vt0.c0;
SELECT * FROM vt0, t0;
SELECT ALL * FROM vt0, t0 WHERE (((NULL) NOT BETWEEN ((t0.c0 IN (vt0.c1))) AND ((((vt0.c1))>=((t0.c0)))))) UNION ALL SELECT ALL * FROM vt0, t0 WHERE ((NOT (((NULL) NOT BETWEEN ((t0.c0 IN (vt0.c1))) AND ((((vt0.c1))>=((t0.c0)))))))) UNION ALL SELECT * FROM vt0, t0 NOT INDEXED WHERE (((((NULL) NOT BETWEEN ((t0.c0 IN (vt0.c1))) AND ((((vt0.c1))>=((t0.c0)))))) ISNULL));
SELECT * FROM vt0, t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (CAST(LIKELY(t0.c0) AS TEXT)) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (CAST(LIKELY(t0.c0) AS TEXT)))) UNION SELECT DISTINCT * FROM t0 WHERE (((CAST(LIKELY(t0.c0) AS TEXT)) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0 WHERE (x'') GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (x''))) GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0 WHERE (((x'') ISNULL)) GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2;
SELECT ALL t0.c0, rt0.c4, vt0.c0, rt0.c3, rt0.c1, vt0.c1, rt0.c2, rt0.c0 FROM rt0, t0, vt0 GROUP BY t0.c0, rt0.c4, vt0.c0, rt0.c3, rt0.c1, vt0.c1, rt0.c2, rt0.c0;
SELECT ALL t0.c0, rt0.c4, vt0.c0, rt0.c3, rt0.c1, vt0.c1, rt0.c2, rt0.c0 FROM rt0, t0, vt0 NOT INDEXED GROUP BY t0.c0, rt0.c4, vt0.c0, rt0.c3, rt0.c1, vt0.c1, rt0.c2, rt0.c0 HAVING (((((t0.c0)<(vt0.c0)), CASE rt0.c0  WHEN rt0.c4 THEN t0.c0 WHEN rt0.c2 THEN vt0.c1 WHEN AVG(SUM(vt0.c0)) THEN COUNT(t0.c0) WHEN rt0.c0 THEN rt0.c0 WHEN MAX(rt0.c0) THEN AVG(COUNT(*)) END, ((((((((rt0.c3)AND(TOTAL('-318789964'))))OR(COUNT(*))))AND(vt0.c0)))AND(rt0.c3))))<=((((((TOTAL(AVG(COUNT(*))))OR(t0.c0)))AND(rt0.c4)), (((TOTAL(COUNT(t0.c0)))) NOT BETWEEN ((SUM(t0.c0))) AND ((vt0.c1))), ((TOTAL(vt0.c0)) NOT BETWEEN (GROUP_CONCAT(MIN(t0.c0))) AND (rt0.c1))))) UNION ALL SELECT ALL t0.c0, rt0.c4, vt0.c0, rt0.c3, rt0.c1, vt0.c1, rt0.c2, rt0.c0 FROM rt0, t0, vt0 GROUP BY t0.c0, rt0.c4, vt0.c0, rt0.c3, rt0.c1, vt0.c1, rt0.c2, rt0.c0 HAVING (NOT ((((((t0.c0)<(vt0.c0)), CASE rt0.c0  WHEN rt0.c4 THEN t0.c0 WHEN rt0.c2 THEN vt0.c1 WHEN AVG(SUM(vt0.c0)) THEN COUNT(t0.c0) WHEN rt0.c0 THEN rt0.c0 WHEN MAX(rt0.c0) THEN AVG(COUNT(*)) END, ((((((((rt0.c3)AND(TOTAL('-318789964'))))OR(COUNT(*))))AND(vt0.c0)))AND(rt0.c3))))<=((((((TOTAL(AVG(COUNT(*))))OR(t0.c0)))AND(rt0.c4)), (((TOTAL(COUNT(t0.c0)))) NOT BETWEEN ((SUM(t0.c0))) AND ((vt0.c1))), ((TOTAL(vt0.c0)) NOT BETWEEN (GROUP_CONCAT(MIN(t0.c0))) AND (rt0.c1))))))) UNION ALL SELECT ALL t0.c0, rt0.c4, vt0.c0, rt0.c3, rt0.c1, vt0.c1, rt0.c2, rt0.c0 FROM rt0, t0, vt0 GROUP BY t0.c0, rt0.c4, vt0.c0, rt0.c3, rt0.c1, vt0.c1, rt0.c2, rt0.c0 HAVING (((((((t0.c0)<(vt0.c0)), CASE rt0.c0  WHEN rt0.c4 THEN t0.c0 WHEN rt0.c2 THEN vt0.c1 WHEN AVG(SUM(vt0.c0)) THEN COUNT(t0.c0) WHEN rt0.c0 THEN rt0.c0 WHEN MAX(rt0.c0) THEN AVG(COUNT(*)) END, ((((((((rt0.c3)AND(TOTAL('-318789964'))))OR(COUNT(*))))AND(vt0.c0)))AND(rt0.c3))))<=((((((TOTAL(AVG(COUNT(*))))OR(t0.c0)))AND(rt0.c4)), (((TOTAL(COUNT(t0.c0)))) NOT BETWEEN ((SUM(t0.c0))) AND ((vt0.c1))), ((TOTAL(vt0.c0)) NOT BETWEEN (GROUP_CONCAT(MIN(t0.c0))) AND (rt0.c1)))))) ISNULL);
SELECT * FROM vt0, t0;
SELECT ALL * FROM vt0, t0 WHERE (((((((((((t0.c0)AND(vt0.c1)))OR(t0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END))) UNION ALL SELECT ALL * FROM vt0, t0 WHERE ((NOT (((((((((((t0.c0)AND(vt0.c1)))OR(t0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END))))) UNION ALL SELECT ALL * FROM vt0, t0 WHERE (((((((((((((t0.c0)AND(vt0.c1)))OR(t0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END))) ISNULL));
SELECT * FROM vt0, t0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0, vt0, t0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0, vt0, t0 NOT INDEXED WHERE (((((((((t0.c0)OR(t0.c0)))OR(vt0.c1)))OR(rt0.c1)))AND(rt0.c4)) COLLATE RTRIM) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0, vt0, t0 WHERE ((NOT (((((((((t0.c0)OR(t0.c0)))OR(vt0.c1)))OR(rt0.c1)))AND(rt0.c4)) COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0, vt0, t0 WHERE (((((((((((t0.c0)OR(t0.c0)))OR(vt0.c1)))OR(rt0.c1)))AND(rt0.c4)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0, vt0, t0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS BLOB))) AND ((CAST(vt0.c0 AS REAL))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS BLOB))) AND ((CAST(vt0.c0 AS REAL))))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS BLOB))) AND ((CAST(vt0.c0 AS REAL))))) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT rt0.c0, rt0.c1, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3, rt0.c4;
SELECT rt0.c0, rt0.c1, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3, rt0.c4 HAVING LIKELIHOOD(((((AVG(rt0.c4))OR(rt0.c0)))AND(TOTAL(rt0.c2))), 0.7379598690828576) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3, rt0.c4 HAVING (NOT (LIKELIHOOD(((((AVG(rt0.c4))OR(rt0.c0)))AND(TOTAL(rt0.c2))), 0.7379598690828576))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3, rt0.c4 HAVING ((LIKELIHOOD(((((AVG(rt0.c4))OR(rt0.c0)))AND(TOTAL(rt0.c2))), 0.7379598690828576)) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3, rt0.c4;
SELECT rt0.c0, rt0.c1, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3, rt0.c4 HAVING LIKELIHOOD(((((AVG(rt0.c4))OR(rt0.c0)))AND(TOTAL(rt0.c2))), 0.7379598690828576) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3, rt0.c4 HAVING (NOT (LIKELIHOOD(((((AVG(rt0.c4))OR(rt0.c0)))AND(TOTAL(rt0.c2))), 0.7379598690828576))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3, rt0.c4 HAVING ((LIKELIHOOD(((((AVG(rt0.c4))OR(rt0.c0)))AND(TOTAL(rt0.c2))), 0.7379598690828576)) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3, rt0.c4;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((((((((CAST(rt0.c1 AS REAL))OR(((NULL)<=(rt0.c4)))))AND(rt0.c3 COLLATE BINARY)))OR(((rt0.c0)IS(rt0.c0)))))AND('F()'))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((((((((CAST(rt0.c1 AS REAL))OR(((NULL)<=(rt0.c4)))))AND(rt0.c3 COLLATE BINARY)))OR(((rt0.c0)IS(rt0.c0)))))AND('F()'))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((((((CAST(rt0.c1 AS REAL))OR(((NULL)<=(rt0.c4)))))AND(rt0.c3 COLLATE BINARY)))OR(((rt0.c0)IS(rt0.c0)))))AND('F()'))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0)IS NOT(t0.c0)))||(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((((t0.c0)IS NOT(t0.c0)))||(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((((t0.c0)IS NOT(t0.c0)))||(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c0 FROM t0 NOT INDEXED GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((((t0.c0)>>(t0.c0)))<>(-1223722566))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (((((t0.c0)>>(t0.c0)))!=(-1223722566))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((((t0.c0)>>(t0.c0)))!=(-1223722566))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 NOT INDEXED GROUP BY t0.c0;
SELECT ALL t0.c0, rt0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c1, vt0.c0 FROM rt0 LEFT OUTER JOIN t0 ON (((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((vt0.c0)))) BETWEEN (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1))) AND (((']1')IS NOT(rt0.c4)))) FULL OUTER JOIN vt0 ON CASE ((rt0.c4)||(rt0.c2))  WHEN ((rt0.c3)LIKE(rt0.c0)) THEN ((t0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3)) WHEN TYPEOF(DISTINCT t0.c0) THEN t0.c0 WHEN 1.014361893E9 THEN ((x'') NOT NULL) END GROUP BY t0.c0, rt0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c1, vt0.c0;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE ((((((vt0.c0))=((vt0.c0))))IS NOT(((vt0.c0)<=(vt0.c0))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((((((vt0.c0))=((vt0.c0))))IS NOT(((vt0.c0)<=(vt0.c0))))))) UNION ALL SELECT * FROM vt0 WHERE ((((((((vt0.c0))=((vt0.c0))))IS NOT(((vt0.c0)<=(vt0.c0))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (CASE ((t0.c0) BETWEEN (t0.c0) AND (t0.c0))  WHEN (t0.c0 IN ()) THEN t0.c0 COLLATE NOCASE ELSE CAST(t0.c0 AS NUMERIC) END) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (CASE ((t0.c0) BETWEEN (t0.c0) AND (t0.c0))  WHEN (t0.c0 IN ()) THEN t0.c0 COLLATE NOCASE ELSE CAST(t0.c0 AS NUMERIC) END))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((CASE ((t0.c0) BETWEEN (t0.c0) AND (t0.c0))  WHEN (t0.c0 IN ()) THEN t0.c0 COLLATE NOCASE ELSE CAST(t0.c0 AS NUMERIC) END) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT vt0.c1, rt0.c3, rt0.c1, rt0.c0, t0.c0, rt0.c2 FROM t0, rt0, vt0 GROUP BY vt0.c1, rt0.c3, rt0.c1, rt0.c0, t0.c0, rt0.c2;
SELECT vt0.c1, rt0.c3, rt0.c1, rt0.c0, t0.c0, rt0.c2 FROM t0, rt0 NOT INDEXED, vt0 WHERE (CASE WHEN CASE WHEN 0.7511218439306879 THEN rt0.c3 WHEN rt0.c3 THEN t0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN vt0.c0 WHEN vt0.c1 THEN rt0.c4 END THEN rt0.c2 END) GROUP BY vt0.c1, rt0.c3, rt0.c1, rt0.c0, t0.c0, rt0.c2 UNION SELECT ALL vt0.c1, rt0.c3, rt0.c1, rt0.c0, t0.c0, rt0.c2 FROM t0, rt0, vt0 WHERE ((NOT (CASE WHEN CASE WHEN 0.7511218439306879 THEN rt0.c3 WHEN rt0.c3 THEN t0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN vt0.c0 WHEN vt0.c1 THEN rt0.c4 END THEN rt0.c2 END))) GROUP BY vt0.c1, rt0.c3, rt0.c1, rt0.c0, t0.c0, rt0.c2 UNION SELECT vt0.c1, rt0.c3, rt0.c1, rt0.c0, t0.c0, rt0.c2 FROM t0, rt0, vt0 WHERE (((CASE WHEN CASE WHEN 0.7511218439306879 THEN rt0.c3 WHEN rt0.c3 THEN t0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN vt0.c0 WHEN vt0.c1 THEN rt0.c4 END THEN rt0.c2 END) ISNULL)) GROUP BY vt0.c1, rt0.c3, rt0.c1, rt0.c0, t0.c0, rt0.c2;
SELECT vt0.c1, rt0.c3, rt0.c1, rt0.c0, t0.c0, rt0.c2 FROM t0, rt0, vt0 GROUP BY vt0.c1, rt0.c3, rt0.c1, rt0.c0, t0.c0, rt0.c2;
SELECT t0.c0 FROM vt0, t0, rt0 GROUP BY t0.c0;
SELECT t0.c0 FROM vt0, t0, rt0 GROUP BY t0.c0 HAVING MIN(COUNT(*)) UNION ALL SELECT ALL t0.c0 FROM vt0, t0, rt0 GROUP BY t0.c0 HAVING (NOT (MIN(COUNT(*)))) UNION ALL SELECT t0.c0 FROM vt0 NOT INDEXED, t0, rt0 GROUP BY t0.c0 HAVING ((MIN(COUNT(*))) ISNULL);
SELECT rt0.c1, vt0.c0, rt0.c2, rt0.c3 FROM vt0, rt0;
SELECT rt0.c1, vt0.c0, rt0.c2, rt0.c3 FROM vt0, rt0 WHERE (CAST(((((((((vt0.c1)OR(rt0.c2)))OR(rt0.c3)))AND(rt0.c1)))OR(rt0.c1)) AS REAL)) UNION ALL SELECT rt0.c1, vt0.c0, rt0.c2, rt0.c3 FROM vt0, rt0 WHERE ((NOT (CAST(((((((((vt0.c1)OR(rt0.c2)))OR(rt0.c3)))AND(rt0.c1)))OR(rt0.c1)) AS REAL)))) UNION ALL SELECT rt0.c1, vt0.c0, rt0.c2, rt0.c3 FROM vt0, rt0 WHERE (((CAST(((((((((vt0.c1)OR(rt0.c2)))OR(rt0.c3)))AND(rt0.c1)))OR(rt0.c1)) AS REAL)) ISNULL));
SELECT rt0.c1, vt0.c0, rt0.c2, rt0.c3 FROM vt0, rt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((((+ (t0.c0)))<=(LIKELY(DISTINCT t0.c0)))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((((+ (t0.c0)))<=(LIKELY(DISTINCT t0.c0)))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((((+ (t0.c0)))<=(LIKELY(DISTINCT t0.c0)))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c0, rt0.c0, vt0.c0, rt0.c1, rt0.c3, vt0.c1, rt0.c4, rt0.c2 FROM vt0, rt0 LEFT OUTER JOIN t0 ON ((+ ('1353761361')) IN (UNLIKELY(rt0.c0), (((rt0.c2))<((t0.c0))))) GROUP BY t0.c0, rt0.c0, vt0.c0, rt0.c1, rt0.c3, vt0.c1, rt0.c4, rt0.c2;
SELECT t0.c0, rt0.c0, vt0.c0, rt0.c1, rt0.c3, vt0.c1, rt0.c4, rt0.c2 FROM vt0, rt0 LEFT OUTER JOIN t0 ON ((+ ('1353761361')) IN (UNLIKELY(rt0.c0), (((rt0.c2))<((t0.c0))))) WHERE ((((~ (rt0.c3))) ISNULL)) GROUP BY t0.c0, rt0.c0, vt0.c0, rt0.c1, rt0.c3, vt0.c1, rt0.c4, rt0.c2 UNION SELECT t0.c0, rt0.c0, vt0.c0, rt0.c1, rt0.c3, vt0.c1, rt0.c4, rt0.c2 FROM vt0, rt0 LEFT OUTER JOIN t0 ON ((+ ('1353761361')) IN (UNLIKELY(rt0.c0), (((rt0.c2))<((t0.c0))))) WHERE ((NOT ((((~ (rt0.c3))) ISNULL)))) GROUP BY t0.c0, rt0.c0, vt0.c0, rt0.c1, rt0.c3, vt0.c1, rt0.c4, rt0.c2 UNION SELECT t0.c0, rt0.c0, vt0.c0, rt0.c1, rt0.c3, vt0.c1, rt0.c4, rt0.c2 FROM vt0, rt0 LEFT OUTER JOIN t0 ON ((+ ('1353761361')) IN (UNLIKELY(rt0.c0), (((rt0.c2))<((t0.c0))))) WHERE ((((((~ (rt0.c3))) ISNULL)) ISNULL)) GROUP BY t0.c0, rt0.c0, vt0.c0, rt0.c1, rt0.c3, vt0.c1, rt0.c4, rt0.c2;
SELECT ALL t0.c0, rt0.c0, vt0.c0, rt0.c1, rt0.c3, vt0.c1, rt0.c4, rt0.c2 FROM vt0, rt0 LEFT OUTER JOIN t0 ON ((+ ('1353761361')) IN (UNLIKELY(rt0.c0), (((rt0.c2))<((t0.c0))))) GROUP BY t0.c0, rt0.c0, vt0.c0, rt0.c1, rt0.c3, vt0.c1, rt0.c4, rt0.c2;
SELECT rt0.c1, vt0.c1, t0.c0, vt0.c0, rt0.c2 FROM t0, rt0 LEFT OUTER JOIN vt0 ON (((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((1307427204)))) IS TRUE) GROUP BY rt0.c1, vt0.c1, t0.c0, vt0.c0, rt0.c2;
SELECT rt0.c1, vt0.c1, t0.c0, vt0.c0, rt0.c2 FROM t0, rt0 LEFT OUTER JOIN vt0 ON (((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((1307427204)))) IS TRUE) GROUP BY rt0.c1, vt0.c1, t0.c0, vt0.c0, rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c1, vt0.c1, t0.c0, vt0.c0, rt0.c2 FROM t0, rt0 LEFT OUTER JOIN vt0 ON (((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((1307427204)))) IS TRUE) GROUP BY rt0.c1, vt0.c1, t0.c0, vt0.c0, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c1, vt0.c1, t0.c0, vt0.c0, rt0.c2 FROM t0, rt0 LEFT OUTER JOIN vt0 ON (((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((1307427204)))) IS TRUE) GROUP BY rt0.c1, vt0.c1, t0.c0, vt0.c0, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, vt0.c1, t0.c0, vt0.c0, rt0.c2 FROM t0, rt0 LEFT OUTER JOIN vt0 ON (((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((1307427204)))) IS TRUE) GROUP BY rt0.c1, vt0.c1, t0.c0, vt0.c0, rt0.c2;
SELECT rt0.c1, vt0.c1, t0.c0, vt0.c0, rt0.c2 FROM t0, rt0 LEFT OUTER JOIN vt0 ON (((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((1307427204)))) IS TRUE) GROUP BY rt0.c1, vt0.c1, t0.c0, vt0.c0, rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c1, vt0.c1, t0.c0, vt0.c0, rt0.c2 FROM t0, rt0 LEFT OUTER JOIN vt0 ON (((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((1307427204)))) IS TRUE) GROUP BY rt0.c1, vt0.c1, t0.c0, vt0.c0, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c1, vt0.c1, t0.c0, vt0.c0, rt0.c2 FROM t0, rt0 LEFT OUTER JOIN vt0 ON (((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((1307427204)))) IS TRUE) GROUP BY rt0.c1, vt0.c1, t0.c0, vt0.c0, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, vt0.c1, t0.c0, vt0.c0, rt0.c2 FROM t0, rt0 LEFT OUTER JOIN vt0 ON (((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((1307427204)))) IS TRUE) GROUP BY rt0.c1, vt0.c1, t0.c0, vt0.c0, rt0.c2;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((((((rt0.c1)>(rt0.c3)))AND(CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c3 END)))OR(((((rt0.c3)AND(rt0.c2)))AND(rt0.c2))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((((((rt0.c1)>(rt0.c3)))AND(CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c3 END)))OR(((((rt0.c3)AND(rt0.c2)))AND(rt0.c2))))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((((rt0.c1)>(rt0.c3)))AND(CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c3 END)))OR(((((rt0.c3)AND(rt0.c2)))AND(rt0.c2))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((- ((NOT (t0.c0))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((- ((NOT (t0.c0))))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((- ((NOT (t0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT rt0.c1 FROM rt0, t0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0, t0 WHERE (((((((rt0.c2)AND(t0.c0)))OR(rt0.c2)))*(((((rt0.c0)AND(t0.c0)))AND(rt0.c2))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0, t0 WHERE ((NOT (((((((rt0.c2)AND(t0.c0)))OR(rt0.c2)))*(((((rt0.c0)AND(t0.c0)))AND(rt0.c2))))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0, t0 WHERE (((((((((rt0.c2)AND(t0.c0)))OR(rt0.c2)))*(((((rt0.c0)AND(t0.c0)))AND(rt0.c2))))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0, t0 GROUP BY rt0.c1;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (- (MIN(rt0.c0))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT ((- (MIN(rt0.c0))))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (((- (MIN(rt0.c0)))) ISNULL);
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (- (MIN(rt0.c0))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT ((- (MIN(rt0.c0))))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (((- (MIN(rt0.c0)))) ISNULL);
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c3, rt0.c1, rt0.c4, vt0.c0, rt0.c2, rt0.c0, t0.c0, vt0.c1 FROM vt0, t0 NATURAL JOIN rt0;
SELECT ALL rt0.c3, rt0.c1, rt0.c4, vt0.c0, rt0.c2, rt0.c0, t0.c0, vt0.c1 FROM vt0, t0 NATURAL JOIN rt0 WHERE (((rt0.c3 COLLATE NOCASE)>>((rt0.c3 IN ())))) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c4, vt0.c0, rt0.c2, rt0.c0, t0.c0, vt0.c1 FROM vt0, t0 NATURAL JOIN rt0 WHERE ((NOT (((rt0.c3 COLLATE NOCASE)>>((rt0.c3 IN ())))))) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c4, vt0.c0, rt0.c2, rt0.c0, t0.c0, vt0.c1 FROM vt0, t0 NATURAL JOIN rt0 WHERE (((((rt0.c3 COLLATE NOCASE)>>((rt0.c3 IN ())))) ISNULL));
SELECT ALL rt0.c3, rt0.c1, rt0.c4, vt0.c0, rt0.c2, rt0.c0, t0.c0, vt0.c1 FROM vt0, t0 NATURAL JOIN rt0;
SELECT DISTINCT * FROM rt0 NATURAL JOIN vt0;
SELECT DISTINCT * FROM rt0 NATURAL JOIN vt0 WHERE (IFNULL(DISTINCT ((0.796554352011783)+(vt0.c0)), vt0.c0 COLLATE RTRIM)) UNION SELECT DISTINCT * FROM rt0 NATURAL JOIN vt0 WHERE ((NOT (IFNULL(DISTINCT ((0.796554352011783)+(vt0.c0)), vt0.c0 COLLATE RTRIM)))) UNION SELECT DISTINCT * FROM rt0 NATURAL JOIN vt0 WHERE (((IFNULL(DISTINCT ((0.796554352011783)+(vt0.c0)), vt0.c0 COLLATE RTRIM)) ISNULL));
SELECT DISTINCT * FROM rt0 NATURAL JOIN vt0;
SELECT rt0.c1, rt0.c3, rt0.c0, rt0.c2, vt0.c0, t0.c0, rt0.c4 FROM t0, vt0, rt0 GROUP BY rt0.c1, rt0.c3, rt0.c0, rt0.c2, vt0.c0, t0.c0, rt0.c4;
SELECT ALL rt0.c1, rt0.c3, rt0.c0, rt0.c2, vt0.c0, t0.c0, rt0.c4 FROM t0, vt0, rt0 WHERE (HEX(CAST(vt0.c0 AS INTEGER))) GROUP BY rt0.c1, rt0.c3, rt0.c0, rt0.c2, vt0.c0, t0.c0, rt0.c4 UNION SELECT ALL rt0.c1, rt0.c3, rt0.c0, rt0.c2, vt0.c0, t0.c0, rt0.c4 FROM t0, vt0, rt0 WHERE ((NOT (HEX(CAST(vt0.c0 AS INTEGER))))) GROUP BY rt0.c1, rt0.c3, rt0.c0, rt0.c2, vt0.c0, t0.c0, rt0.c4 UNION SELECT ALL rt0.c1, rt0.c3, rt0.c0, rt0.c2, vt0.c0, t0.c0, rt0.c4 FROM t0, vt0, rt0 WHERE (((HEX(CAST(vt0.c0 AS INTEGER))) ISNULL)) GROUP BY rt0.c1, rt0.c3, rt0.c0, rt0.c2, vt0.c0, t0.c0, rt0.c4;
SELECT rt0.c1, rt0.c3, rt0.c0, rt0.c2, vt0.c0, t0.c0, rt0.c4 FROM t0, vt0, rt0 GROUP BY rt0.c1, rt0.c3, rt0.c0, rt0.c2, vt0.c0, t0.c0, rt0.c4;
SELECT rt0.c3, vt0.c1, t0.c0, rt0.c2, rt0.c4, vt0.c0, rt0.c0 FROM vt0, t0 NATURAL JOIN rt0 GROUP BY rt0.c3, vt0.c1, t0.c0, rt0.c2, rt0.c4, vt0.c0, rt0.c0;
SELECT rt0.c3, vt0.c1, t0.c0, rt0.c2, rt0.c4, vt0.c0, rt0.c0 FROM vt0, t0 NATURAL JOIN rt0 GROUP BY rt0.c3, vt0.c1, t0.c0, rt0.c2, rt0.c4, vt0.c0, rt0.c0 HAVING SUM(COUNT(*)) UNION ALL SELECT rt0.c3, vt0.c1, t0.c0, rt0.c2, rt0.c4, vt0.c0, rt0.c0 FROM vt0, t0 NATURAL JOIN rt0 GROUP BY rt0.c3, vt0.c1, t0.c0, rt0.c2, rt0.c4, vt0.c0, rt0.c0 HAVING (NOT (SUM(COUNT(*)))) UNION ALL SELECT rt0.c3, vt0.c1, t0.c0, rt0.c2, rt0.c4, vt0.c0, rt0.c0 FROM vt0, t0 NATURAL JOIN rt0 GROUP BY rt0.c3, vt0.c1, t0.c0, rt0.c2, rt0.c4, vt0.c0, rt0.c0 HAVING ((SUM(COUNT(*))) ISNULL);
SELECT rt0.c0, vt0.c1, t0.c0, rt0.c3, vt0.c0 FROM vt0, rt0, t0;
SELECT rt0.c0, vt0.c1, t0.c0, rt0.c3, vt0.c0 FROM vt0, rt0, t0 WHERE ((+ (((t0.c0)%(rt0.c0))))) UNION ALL SELECT rt0.c0, vt0.c1, t0.c0, rt0.c3, vt0.c0 FROM vt0, rt0, t0 WHERE ((NOT ((+ (((t0.c0)%(rt0.c0))))))) UNION ALL SELECT ALL rt0.c0, vt0.c1, t0.c0, rt0.c3, vt0.c0 FROM vt0, rt0, t0 WHERE ((((+ (((t0.c0)%(rt0.c0))))) ISNULL));
SELECT rt0.c0, vt0.c1, t0.c0, rt0.c3, vt0.c0 FROM vt0, rt0, t0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CASE x''  WHEN vt0.c1 THEN 0.15997170109219327 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN 1819910032 END COLLATE NOCASE) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CASE x''  WHEN vt0.c1 THEN 0.15997170109219327 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN 1819910032 END COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CASE x''  WHEN vt0.c1 THEN 0.15997170109219327 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN 1819910032 END COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT rt0.c4, rt0.c0, rt0.c2, t0.c0, rt0.c1, rt0.c3, vt0.c0, vt0.c1 FROM vt0, t0, rt0 GROUP BY rt0.c4, rt0.c0, rt0.c2, t0.c0, rt0.c1, rt0.c3, vt0.c0, vt0.c1;
SELECT rt0.c4, rt0.c0, rt0.c2, t0.c0, rt0.c1, rt0.c3, vt0.c0, vt0.c1 FROM vt0, t0, rt0 WHERE (t0.c0) GROUP BY rt0.c4, rt0.c0, rt0.c2, t0.c0, rt0.c1, rt0.c3, vt0.c0, vt0.c1 UNION SELECT rt0.c4, rt0.c0, rt0.c2, t0.c0, rt0.c1, rt0.c3, vt0.c0, vt0.c1 FROM vt0, t0, rt0 WHERE ((NOT (t0.c0))) GROUP BY rt0.c4, rt0.c0, rt0.c2, t0.c0, rt0.c1, rt0.c3, vt0.c0, vt0.c1 UNION SELECT rt0.c4, rt0.c0, rt0.c2, t0.c0, rt0.c1, rt0.c3, vt0.c0, vt0.c1 FROM vt0, t0, rt0 WHERE (((t0.c0) ISNULL)) GROUP BY rt0.c4, rt0.c0, rt0.c2, t0.c0, rt0.c1, rt0.c3, vt0.c0, vt0.c1;
SELECT rt0.c4, rt0.c0, rt0.c2, t0.c0, rt0.c1, rt0.c3, vt0.c0, vt0.c1 FROM vt0, t0, rt0 GROUP BY rt0.c4, rt0.c0, rt0.c2, t0.c0, rt0.c1, rt0.c3, vt0.c0, vt0.c1;
SELECT ALL rt0.c4, rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c1, rt0.c3, rt0.c2;
SELECT rt0.c4, rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c1, rt0.c3, rt0.c2 HAVING COUNT(*) UNION ALL SELECT rt0.c4, rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c1, rt0.c3, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c4, rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c1, rt0.c3, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c4, rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c1, rt0.c3, rt0.c2;
SELECT rt0.c4, rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c1, rt0.c3, rt0.c2 HAVING COUNT(*) UNION ALL SELECT rt0.c4, rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c1, rt0.c3, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c4, rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c1, rt0.c3, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c4, rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c1, rt0.c3, rt0.c2;
SELECT ALL MIN((NOT (((rt0.c4)*(rt0.c2))))) FROM t0, vt0, rt0;
SELECT rt0.c2, rt0.c3 FROM t0, rt0, vt0;
SELECT rt0.c2, rt0.c3 FROM t0, rt0, vt0 WHERE (HEX(DISTINCT (- (vt0.c0)))) UNION ALL SELECT rt0.c2, rt0.c3 FROM t0, rt0, vt0 WHERE ((NOT (HEX(DISTINCT (- (vt0.c0)))))) UNION ALL SELECT rt0.c2, rt0.c3 FROM t0, rt0, vt0 WHERE (((HEX(DISTINCT (- (vt0.c0)))) ISNULL));
SELECT rt0.c2, rt0.c3 FROM t0, rt0, vt0;
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN t0 ON ((((vt0.c1)AND('j%')))+(rt0.c4)) FULL OUTER JOIN rt0 ON (rt0.c3 COLLATE NOCASE IN (rt0.c3 COLLATE BINARY));
SELECT rt0.c4, rt0.c3 FROM t0 CROSS JOIN rt0 ON ((((((t0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))))>((((((((((rt0.c0)OR(t0.c0)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c2))))) GROUP BY rt0.c4, rt0.c3;
SELECT rt0.c4, rt0.c3 FROM t0 CROSS JOIN rt0 ON ((((((t0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))))>((((((((((rt0.c0)OR(t0.c0)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c2))))) WHERE (SQLITE_COMPILEOPTION_USED(x'd6124831')) GROUP BY rt0.c4, rt0.c3 UNION SELECT rt0.c4, rt0.c3 FROM t0 CROSS JOIN rt0 ON ((((((t0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))))>((((((((((rt0.c0)OR(t0.c0)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c2))))) WHERE ((NOT (SQLITE_COMPILEOPTION_USED(x'd6124831')))) GROUP BY rt0.c4, rt0.c3 UNION SELECT ALL rt0.c4, rt0.c3 FROM t0 CROSS JOIN rt0 ON ((((((t0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))))>((((((((((rt0.c0)OR(t0.c0)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c2))))) WHERE (((SQLITE_COMPILEOPTION_USED(x'd6124831')) ISNULL)) GROUP BY rt0.c4, rt0.c3;
SELECT rt0.c4, rt0.c3 FROM t0 CROSS JOIN rt0 ON ((((((t0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))))>((((((((((rt0.c0)OR(t0.c0)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c2))))) GROUP BY rt0.c4, rt0.c3;
SELECT rt0.c4 FROM t0, rt0 CROSS JOIN vt0 ON LTRIM(0.5047966824075405) GROUP BY rt0.c4;
SELECT ALL rt0.c4 FROM t0, rt0 CROSS JOIN vt0 ON LTRIM(0.5047966824075405) GROUP BY rt0.c4 HAVING ((SUM(COUNT(*))) NOTNULL) UNION ALL SELECT ALL rt0.c4 FROM t0, rt0 CROSS JOIN vt0 ON LTRIM(0.5047966824075405) GROUP BY rt0.c4 HAVING (NOT (((SUM(COUNT(*))) NOTNULL))) UNION ALL SELECT rt0.c4 FROM t0, rt0 CROSS JOIN vt0 ON LTRIM(0.5047966824075405) GROUP BY rt0.c4 HAVING ((((SUM(COUNT(*))) NOTNULL)) ISNULL);
SELECT * FROM rt0, vt0, t0;
SELECT * FROM rt0, vt0, t0 WHERE (TRIM(CAST(rt0.c2 AS BLOB), rt0.c0)) UNION ALL SELECT * FROM rt0, vt0, t0 WHERE ((NOT (TRIM(CAST(rt0.c2 AS BLOB), rt0.c0)))) UNION ALL SELECT * FROM rt0, vt0, t0 WHERE (((TRIM(CAST(rt0.c2 AS BLOB), rt0.c0)) ISNULL));
SELECT * FROM rt0, vt0, t0;
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN rt0 ON (~ (TRIM(rt0.c1, vt0.c1)));
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN rt0 ON (~ (TRIM(rt0.c1, vt0.c1))) WHERE ((((((~ (rt0.c3)))OR(NULL)))OR(vt0.c1))) UNION SELECT DISTINCT * FROM vt0 FULL OUTER JOIN rt0 ON (~ (TRIM(rt0.c1, vt0.c1))) WHERE ((NOT ((((((~ (rt0.c3)))OR(NULL)))OR(vt0.c1))))) UNION SELECT DISTINCT * FROM vt0 FULL OUTER JOIN rt0 ON (~ (TRIM(rt0.c1, vt0.c1))) WHERE ((((((((~ (rt0.c3)))OR(NULL)))OR(vt0.c1))) ISNULL));
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN rt0 ON (~ (TRIM(rt0.c1, vt0.c1)));
SELECT ALL rt0.c2 FROM vt0 CROSS JOIN rt0 ON (((- ('IO')))||(CASE rt0.c3  WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM vt0 CROSS JOIN rt0 ON (((- ('IO')))||(CASE rt0.c3  WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END)) WHERE (((TRIM(DISTINCT vt0.c1, vt0.c1)) IS TRUE)) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM vt0 CROSS JOIN rt0 ON (((- ('IO')))||(CASE rt0.c3  WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END)) WHERE ((NOT (((TRIM(DISTINCT vt0.c1, vt0.c1)) IS TRUE)))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM vt0 CROSS JOIN rt0 ON (((- ('IO')))||(CASE rt0.c3  WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END)) WHERE (((((TRIM(DISTINCT vt0.c1, vt0.c1)) IS TRUE)) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt0 CROSS JOIN rt0 ON (((- ('IO')))||(CASE rt0.c3  WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END)) GROUP BY rt0.c2;
SELECT ALL rt0.c4, rt0.c0, vt0.c0 FROM rt0, t0 RIGHT OUTER JOIN vt0 ON ((((x'')<<(rt0.c3))) BETWEEN (DATETIME(rt0.c1, '. >S]L<㻊U', vt0.c0, rt0.c3, x'')) AND ((- (vt0.c0)))) GROUP BY rt0.c4, rt0.c0, vt0.c0;
SELECT ALL rt0.c4, rt0.c0, vt0.c0 FROM rt0, t0 RIGHT OUTER JOIN vt0 ON ((((x'')<<(rt0.c3))) BETWEEN (DATETIME(rt0.c1, '. >S]L<㻊U', vt0.c0, rt0.c3, x'')) AND ((- (vt0.c0)))) GROUP BY rt0.c4, rt0.c0, vt0.c0 HAVING GROUP_CONCAT(COUNT(*)) UNION ALL SELECT rt0.c4, rt0.c0, vt0.c0 FROM rt0, t0 RIGHT OUTER JOIN vt0 ON ((((x'')<<(rt0.c3))) BETWEEN (DATETIME(rt0.c1, '. >S]L<㻊U', vt0.c0, rt0.c3, x'')) AND ((- (vt0.c0)))) GROUP BY rt0.c4, rt0.c0, vt0.c0 HAVING (NOT (GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT ALL rt0.c4, rt0.c0, vt0.c0 FROM rt0, t0 RIGHT OUTER JOIN vt0 ON ((((x'')<<(rt0.c3))) BETWEEN (DATETIME(rt0.c1, '. >S]L<㻊U', vt0.c0, rt0.c3, x'')) AND ((- (vt0.c0)))) GROUP BY rt0.c4, rt0.c0, vt0.c0 HAVING ((GROUP_CONCAT(COUNT(*))) ISNULL);
SELECT ALL * FROM t0, vt0;
SELECT * FROM t0, vt0 WHERE (((CASE vt0.c0  WHEN t0.c0 THEN t0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 ELSE vt0.c1 END)<<((~ (0.9422951009036157))))) UNION ALL SELECT * FROM t0, vt0 WHERE ((NOT (((CASE vt0.c0  WHEN t0.c0 THEN t0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 ELSE vt0.c1 END)<<((~ (0.9422951009036157))))))) UNION ALL SELECT ALL * FROM t0, vt0 WHERE (((((CASE vt0.c0  WHEN t0.c0 THEN t0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 ELSE vt0.c1 END)<<((~ (0.9422951009036157))))) ISNULL));
SELECT ALL * FROM t0, vt0;
SELECT DISTINCT vt0.c0, vt0.c1, rt0.c0, rt0.c1, rt0.c2, rt0.c3, rt0.c4 FROM vt0 LEFT OUTER JOIN rt0 ON ((((vt0.c1) NOTNULL)) NOT BETWEEN (((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c1))) AND (((((rt0.c1)AND(vt0.c1)))OR(vt0.c1))));
SELECT DISTINCT vt0.c0, vt0.c1, rt0.c0, rt0.c1, rt0.c2, rt0.c3, rt0.c4 FROM vt0 LEFT OUTER JOIN rt0 ON ((((vt0.c1) NOTNULL)) NOT BETWEEN (((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c1))) AND (((((rt0.c1)AND(vt0.c1)))OR(vt0.c1)))) WHERE (vt0.c1) UNION SELECT DISTINCT vt0.c0, vt0.c1, rt0.c0, rt0.c1, rt0.c2, rt0.c3, rt0.c4 FROM vt0 LEFT OUTER JOIN rt0 ON ((((vt0.c1) NOTNULL)) NOT BETWEEN (((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c1))) AND (((((rt0.c1)AND(vt0.c1)))OR(vt0.c1)))) WHERE ((NOT (vt0.c1))) UNION SELECT DISTINCT vt0.c0, vt0.c1, rt0.c0, rt0.c1, rt0.c2, rt0.c3, rt0.c4 FROM vt0 LEFT OUTER JOIN rt0 ON ((((vt0.c1) NOTNULL)) NOT BETWEEN (((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c1))) AND (((((rt0.c1)AND(vt0.c1)))OR(vt0.c1)))) WHERE (((vt0.c1) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1, rt0.c0, rt0.c1, rt0.c2, rt0.c3, rt0.c4 FROM vt0 LEFT OUTER JOIN rt0 ON ((((vt0.c1) NOTNULL)) NOT BETWEEN (((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c1))) AND (((((rt0.c1)AND(vt0.c1)))OR(vt0.c1))));
SELECT rt0.c0, t0.c0 FROM t0, rt0 NOT INDEXED GROUP BY rt0.c0, t0.c0;
SELECT ALL rt0.c0, t0.c0 FROM t0, rt0 WHERE ('rh]i3L^L') GROUP BY rt0.c0, t0.c0 UNION SELECT rt0.c0, t0.c0 FROM t0, rt0 WHERE ((NOT ('rh]i3L^L'))) GROUP BY rt0.c0, t0.c0 UNION SELECT rt0.c0, t0.c0 FROM t0, rt0 WHERE ((('rh]i3L^L') ISNULL)) GROUP BY rt0.c0, t0.c0;
SELECT rt0.c0, t0.c0 FROM t0, rt0 NOT INDEXED GROUP BY rt0.c0, t0.c0;
SELECT ALL rt0.c4, t0.c0, rt0.c0, rt0.c3, rt0.c1, vt0.c0, rt0.c2, vt0.c1 FROM rt0, vt0, t0 GROUP BY rt0.c4, t0.c0, rt0.c0, rt0.c3, rt0.c1, vt0.c0, rt0.c2, vt0.c1;
SELECT ALL rt0.c4, t0.c0, rt0.c0, rt0.c3, rt0.c1, vt0.c0, rt0.c2, vt0.c1 FROM rt0, vt0, t0 GROUP BY rt0.c4, t0.c0, rt0.c0, rt0.c3, rt0.c1, vt0.c0, rt0.c2, vt0.c1 HAVING AVG(((((MIN(COUNT(AVG(GROUP_CONCAT(vt0.c1)))))AND(rt0.c0)))OR(COUNT(SUM(vt0.c1))))) UNION ALL SELECT ALL rt0.c4, t0.c0, rt0.c0, rt0.c3, rt0.c1, vt0.c0, rt0.c2, vt0.c1 FROM rt0, vt0, t0 GROUP BY rt0.c4, t0.c0, rt0.c0, rt0.c3, rt0.c1, vt0.c0, rt0.c2, vt0.c1 HAVING (NOT (AVG(((((MIN(COUNT(AVG(GROUP_CONCAT(vt0.c1)))))AND(rt0.c0)))OR(COUNT(SUM(vt0.c1))))))) UNION ALL SELECT rt0.c4, t0.c0, rt0.c0, rt0.c3, rt0.c1, vt0.c0, rt0.c2, vt0.c1 FROM rt0, vt0, t0 GROUP BY rt0.c4, t0.c0, rt0.c0, rt0.c3, rt0.c1, vt0.c0, rt0.c2, vt0.c1 HAVING ((AVG(((((MIN(COUNT(AVG(GROUP_CONCAT(vt0.c1)))))AND(rt0.c0)))OR(COUNT(SUM(vt0.c1)))))) ISNULL);
SELECT MIN((~ (NULL))) FROM vt0, t0, rt0 ORDER BY (((rt0.c3)) BETWEEN ((TIME(rt0.c1, 'oH', rt0.c3))) AND ((((t0.c0) IS FALSE)))) DESC  NULLS LAST;
SELECT ALL * FROM vt0, t0 NATURAL JOIN rt0;
SELECT * FROM vt0, t0 NATURAL JOIN rt0 WHERE ((NOT (rt0.c0)) COLLATE RTRIM) UNION ALL SELECT * FROM vt0, t0 NATURAL JOIN rt0 WHERE ((NOT ((NOT (rt0.c0)) COLLATE RTRIM))) UNION ALL SELECT * FROM vt0, t0 NATURAL JOIN rt0 WHERE ((((NOT (rt0.c0)) COLLATE RTRIM) ISNULL));
SELECT ALL * FROM vt0, t0 NATURAL JOIN rt0;
SELECT DISTINCT rt0.c4, vt0.c0, t0.c0, rt0.c0, rt0.c3, vt0.c1, rt0.c2, rt0.c1 FROM vt0 LEFT OUTER JOIN t0 ON ((((t0.c0)!=(vt0.c0)))IS NOT(t0.c0 COLLATE RTRIM)) CROSS JOIN rt0 ON NULLIF(DISTINCT ((vt0.c0)>=(vt0.c1)), '576755257');
SELECT DISTINCT rt0.c4, vt0.c0, t0.c0, rt0.c0, rt0.c3, vt0.c1, rt0.c2, rt0.c1 FROM vt0 LEFT OUTER JOIN t0 ON ((((t0.c0)!=(vt0.c0)))IS NOT(t0.c0 COLLATE RTRIM)) CROSS JOIN rt0 ON NULLIF(DISTINCT ((vt0.c0)>=(vt0.c1)), '576755257') WHERE (ROUND(((rt0.c0) IS TRUE), LIKELIHOOD(DISTINCT rt0.c1, 0.6383122678742954))) UNION SELECT DISTINCT rt0.c4, vt0.c0, t0.c0, rt0.c0, rt0.c3, vt0.c1, rt0.c2, rt0.c1 FROM vt0 LEFT OUTER JOIN t0 ON ((((t0.c0)<>(vt0.c0)))IS NOT(t0.c0 COLLATE RTRIM)) CROSS JOIN rt0 ON NULLIF(DISTINCT ((vt0.c0)>=(vt0.c1)), '576755257') WHERE ((NOT (ROUND(((rt0.c0) IS TRUE), LIKELIHOOD(DISTINCT rt0.c1, 0.6383122678742954))))) UNION SELECT DISTINCT rt0.c4, vt0.c0, t0.c0, rt0.c0, rt0.c3, vt0.c1, rt0.c2, rt0.c1 FROM vt0 LEFT OUTER JOIN t0 ON ((((t0.c0)!=(vt0.c0)))IS NOT(t0.c0 COLLATE RTRIM)) CROSS JOIN rt0 ON NULLIF(DISTINCT ((vt0.c0)>=(vt0.c1)), '576755257') WHERE (((ROUND(((rt0.c0) IS TRUE), LIKELIHOOD(DISTINCT rt0.c1, 0.6383122678742954))) ISNULL));
SELECT DISTINCT rt0.c4, vt0.c0, t0.c0, rt0.c0, rt0.c3, vt0.c1, rt0.c2, rt0.c1 FROM vt0 LEFT OUTER JOIN t0 ON ((((t0.c0)!=(vt0.c0)))IS NOT(t0.c0 COLLATE RTRIM)) CROSS JOIN rt0 ON NULLIF(DISTINCT ((vt0.c0)>=(vt0.c1)), '576755257');
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((((x'd380')%(x'')))IS NOT((('') BETWEEN (t0.c0) AND (t0.c0))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (((((x'd380')%(x'')))IS NOT((('') BETWEEN (t0.c0) AND (t0.c0))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((((x'd380')%(x'')))IS NOT((('') BETWEEN (t0.c0) AND (t0.c0))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0, rt0.c1, rt0.c3, rt0.c0 FROM t0 NATURAL JOIN rt0 GROUP BY t0.c0, rt0.c1, rt0.c3, rt0.c0;
SELECT t0.c0, rt0.c1, rt0.c3, rt0.c0 FROM t0 NATURAL JOIN rt0 GROUP BY t0.c0, rt0.c1, rt0.c3, rt0.c0 HAVING (((rt0.c0)) BETWEEN ((GROUP_CONCAT(GROUP_CONCAT(t0.c0)))) AND ((AVG(TOTAL(AVG(TOTAL(GROUP_CONCAT(MAX(rt0.c1))))))))) UNION ALL SELECT ALL t0.c0, rt0.c1, rt0.c3, rt0.c0 FROM t0 NATURAL JOIN rt0 GROUP BY t0.c0, rt0.c1, rt0.c3, rt0.c0 HAVING (NOT ((((rt0.c0)) BETWEEN ((GROUP_CONCAT(GROUP_CONCAT(t0.c0)))) AND ((AVG(TOTAL(AVG(TOTAL(GROUP_CONCAT(MAX(rt0.c1))))))))))) UNION ALL SELECT ALL t0.c0, rt0.c1, rt0.c3, rt0.c0 FROM t0 NATURAL JOIN rt0 GROUP BY t0.c0, rt0.c1, rt0.c3, rt0.c0 HAVING (((((rt0.c0)) BETWEEN ((GROUP_CONCAT(GROUP_CONCAT(t0.c0)))) AND ((AVG(TOTAL(AVG(TOTAL(GROUP_CONCAT(MAX(rt0.c1)))))))))) ISNULL);
SELECT ALL rt0.c1, rt0.c4, rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c4, rt0.c0 FROM rt0 WHERE ((rt0.c2 COLLATE BINARY IN (((rt0.c2) IS FALSE)))) UNION ALL SELECT ALL rt0.c1, rt0.c4, rt0.c0 FROM rt0 WHERE ((NOT ((rt0.c2 COLLATE BINARY IN (((rt0.c2) IS FALSE)))))) UNION ALL SELECT ALL rt0.c1, rt0.c4, rt0.c0 FROM rt0 WHERE ((((rt0.c2 COLLATE BINARY IN (((rt0.c2) IS FALSE)))) ISNULL));
SELECT ALL rt0.c1, rt0.c4, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((+ (CAST(vt0.c0 AS REAL)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((+ (CAST(vt0.c0 AS REAL)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((+ (CAST(vt0.c0 AS REAL)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT rt0.c4, rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c4, rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ('' COLLATE RTRIM) GROUP BY rt0.c4, rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c4, rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ('' COLLATE RTRIM))) GROUP BY rt0.c4, rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c4, rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((('' COLLATE RTRIM) ISNULL)) GROUP BY rt0.c4, rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c4, rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c2, rt0.c0, rt0.c1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING AVG(((COUNT(COUNT(t0.c0)))AND(t0.c0))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (AVG(((COUNT(COUNT(t0.c0)))AND(t0.c0))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((AVG(((COUNT(COUNT(t0.c0)))AND(t0.c0)))) ISNULL);
SELECT vt0.c1, vt0.c0 FROM t0 LEFT OUTER JOIN vt0 ON ((TYPEOF(0.8978738786344601)) NOT BETWEEN (((t0.c0)<<(vt0.c1))) AND (vt0.c1 COLLATE BINARY));
SELECT ALL vt0.c1, vt0.c0 FROM t0 LEFT OUTER JOIN vt0 ON ((TYPEOF(0.8978738786344601)) NOT BETWEEN (((t0.c0)<<(vt0.c1))) AND (vt0.c1 COLLATE BINARY)) WHERE (((((((t0.c0)OR(vt0.c1)))AND(vt0.c0)))-((((vt0.c1, x'd060', t0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((t0.c0, vt0.c1, t0.c0, t0.c0, t0.c0)) AND ((vt0.c0, vt0.c1, vt0.c0, t0.c0, vt0.c1)))))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM t0 LEFT OUTER JOIN vt0 ON ((TYPEOF(0.8978738786344601)) NOT BETWEEN (((t0.c0)<<(vt0.c1))) AND (vt0.c1 COLLATE BINARY)) WHERE ((NOT (((((((t0.c0)OR(vt0.c1)))AND(vt0.c0)))-((((vt0.c1, x'd060', t0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((t0.c0, vt0.c1, t0.c0, t0.c0, t0.c0)) AND ((vt0.c0, vt0.c1, vt0.c0, t0.c0, vt0.c1)))))))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM t0 LEFT OUTER JOIN vt0 ON ((TYPEOF(0.8978738786344601)) NOT BETWEEN (((t0.c0)<<(vt0.c1))) AND (vt0.c1 COLLATE BINARY)) WHERE (((((((((t0.c0)OR(vt0.c1)))AND(vt0.c0)))-((((vt0.c1, x'd060', t0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((t0.c0, vt0.c1, t0.c0, t0.c0, t0.c0)) AND ((vt0.c0, vt0.c1, vt0.c0, t0.c0, vt0.c1)))))) ISNULL));
SELECT vt0.c1, vt0.c0 FROM t0 LEFT OUTER JOIN vt0 ON ((TYPEOF(0.8978738786344601)) NOT BETWEEN (((t0.c0)<<(vt0.c1))) AND (vt0.c1 COLLATE BINARY));
SELECT DISTINCT rt0.c0, t0.c0, rt0.c2, rt0.c4, rt0.c1, rt0.c3 FROM rt0, t0;
SELECT DISTINCT rt0.c0, t0.c0, rt0.c2, rt0.c4, rt0.c1, rt0.c3 FROM rt0, t0 WHERE ((((((rt0.c0)AND(rt0.c4)))OR(rt0.c2)) IN ())) UNION SELECT DISTINCT rt0.c0, t0.c0, rt0.c2, rt0.c4, rt0.c1, rt0.c3 FROM rt0, t0 WHERE ((NOT ((((((rt0.c0)AND(rt0.c4)))OR(rt0.c2)) IN ())))) UNION SELECT DISTINCT rt0.c0, t0.c0, rt0.c2, rt0.c4, rt0.c1, rt0.c3 FROM rt0, t0 WHERE ((((((((rt0.c0)AND(rt0.c4)))OR(rt0.c2)) IN ())) ISNULL));
SELECT DISTINCT rt0.c0, t0.c0, rt0.c2, rt0.c4, rt0.c1, rt0.c3 FROM rt0, t0;
SELECT vt0.c0, vt0.c1, rt0.c0, rt0.c2 FROM vt0 INDEXED BY i81 LEFT OUTER JOIN rt0 ON INSTR(((rt0.c2)&(vt0.c1)), CAST(vt0.c1 AS TEXT)) GROUP BY vt0.c0, vt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c4, rt0.c2, rt0.c1, t0.c0, vt0.c1, vt0.c0 FROM t0, vt0, rt0 GROUP BY rt0.c4, rt0.c2, rt0.c1, t0.c0, vt0.c1, vt0.c0;
SELECT ALL rt0.c4, rt0.c2, rt0.c1, t0.c0, vt0.c1, vt0.c0 FROM t0, vt0, rt0 GROUP BY rt0.c4, rt0.c2, rt0.c1, t0.c0, vt0.c1, vt0.c0 HAVING GROUP_CONCAT(((SUM(MAX(vt0.c0)))IS(t0.c0))) UNION ALL SELECT ALL rt0.c4, rt0.c2, rt0.c1, t0.c0, vt0.c1, vt0.c0 FROM t0, vt0, rt0 GROUP BY rt0.c4, rt0.c2, rt0.c1, t0.c0, vt0.c1, vt0.c0 HAVING (NOT (GROUP_CONCAT(((SUM(MAX(vt0.c0)))IS(t0.c0))))) UNION ALL SELECT ALL rt0.c4, rt0.c2, rt0.c1, t0.c0, vt0.c1, vt0.c0 FROM t0, vt0, rt0 GROUP BY rt0.c4, rt0.c2, rt0.c1, t0.c0, vt0.c1, vt0.c0 HAVING ((GROUP_CONCAT(((SUM(MAX(vt0.c0)))IS(t0.c0)))) ISNULL);
SELECT t0.c0, rt0.c1, rt0.c2, rt0.c0, rt0.c4 FROM t0, rt0;
SELECT t0.c0, rt0.c1, rt0.c2, rt0.c0, rt0.c4 FROM t0, rt0 WHERE ('97025219' COLLATE BINARY) UNION ALL SELECT t0.c0, rt0.c1, rt0.c2, rt0.c0, rt0.c4 FROM t0, rt0 WHERE ((NOT ('97025219' COLLATE BINARY))) UNION ALL SELECT ALL t0.c0, rt0.c1, rt0.c2, rt0.c0, rt0.c4 FROM t0, rt0 WHERE ((('97025219' COLLATE BINARY) ISNULL));
SELECT t0.c0, rt0.c1, rt0.c2, rt0.c0, rt0.c4 FROM t0, rt0;
SELECT DISTINCT rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON (vt0.c1 IN (rt0.c4)) COLLATE NOCASE RIGHT OUTER JOIN rt0 ON CAST(rt0.c4 AS TEXT);
SELECT rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c3;
SELECT rt0.c4, rt0.c3 FROM rt0 WHERE (rt0.c0) GROUP BY rt0.c4, rt0.c3 UNION SELECT ALL rt0.c4, rt0.c3 FROM rt0 WHERE ((NOT (rt0.c0))) GROUP BY rt0.c4, rt0.c3 UNION SELECT rt0.c4, rt0.c3 FROM rt0 WHERE (((rt0.c0) ISNULL)) GROUP BY rt0.c4, rt0.c3;
SELECT rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c3;
SELECT vt0.c1, vt0.c0 FROM t0, vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM t0, vt0 GROUP BY vt0.c1, vt0.c0 HAVING MAX(MIN(COUNT(*))) UNION ALL SELECT vt0.c1, vt0.c0 FROM t0, vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (MAX(MIN(COUNT(*))))) UNION ALL SELECT vt0.c1, vt0.c0 FROM t0, vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((MAX(MIN(COUNT(*)))) ISNULL);
SELECT * FROM t0, rt0;
SELECT * FROM t0, rt0 WHERE ((+ (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c4 END))) UNION ALL SELECT ALL * FROM t0, rt0 WHERE ((NOT ((+ (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c4 END))))) UNION ALL SELECT * FROM t0, rt0 WHERE ((((+ (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c4 END))) ISNULL));
SELECT * FROM t0, rt0;
SELECT DISTINCT * FROM rt0, vt0, t0;
SELECT DISTINCT * FROM rt0, vt0, t0 WHERE (((((rt0.c0)&(rt0.c2))) NOT NULL)) UNION SELECT DISTINCT * FROM rt0, vt0, t0 WHERE ((NOT (((((rt0.c0)&(rt0.c2))) NOT NULL)))) UNION SELECT DISTINCT * FROM rt0, vt0, t0 WHERE (((((((rt0.c0)&(rt0.c2))) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM rt0, vt0, t0;
SELECT rt0.c3, rt0.c4, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1, rt0.c0;
SELECT ALL rt0.c3, rt0.c4, rt0.c1, rt0.c0 FROM rt0 WHERE (((((((((rt0.c1)OR(rt0.c4)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c3)) COLLATE RTRIM) GROUP BY rt0.c3, rt0.c4, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c3, rt0.c4, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((((((((rt0.c1)OR(rt0.c4)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c3)) COLLATE RTRIM))) GROUP BY rt0.c3, rt0.c4, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c3, rt0.c4, rt0.c1, rt0.c0 FROM rt0 WHERE (((((((((((rt0.c1)OR(rt0.c4)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c3)) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c3, rt0.c4, rt0.c1, rt0.c0;
SELECT rt0.c3, rt0.c4, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1, rt0.c0;
SELECT ALL rt0.c1 FROM rt0 NOT INDEXED GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING SUM(AVG(COUNT(MIN(COUNT(*))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (SUM(AVG(COUNT(MIN(COUNT(*))))))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((SUM(AVG(COUNT(MIN(COUNT(*)))))) ISNULL);
SELECT ALL rt0.c4 FROM rt0, t0, vt0;
SELECT ALL rt0.c4 FROM rt0, t0, vt0 WHERE (((rt0.c2) NOT BETWEEN (vt0.c1) AND (t0.c0)) COLLATE RTRIM) UNION ALL SELECT ALL rt0.c4 FROM rt0, t0, vt0 WHERE ((NOT (((rt0.c2) NOT BETWEEN (vt0.c1) AND (t0.c0)) COLLATE RTRIM))) UNION ALL SELECT ALL rt0.c4 FROM rt0, t0, vt0 WHERE (((((rt0.c2) NOT BETWEEN (vt0.c1) AND (t0.c0)) COLLATE RTRIM) ISNULL));
SELECT ALL rt0.c4 FROM rt0, t0, vt0;
SELECT DISTINCT t0.c0, vt0.c1 FROM vt0, rt0, t0;
SELECT DISTINCT t0.c0, vt0.c1 FROM vt0, rt0, t0 WHERE (((CASE rt0.c0  WHEN vt0.c1 THEN rt0.c0 END)%(((rt0.c2)LIKE(0.24361342447369594))))) UNION SELECT DISTINCT t0.c0, vt0.c1 FROM vt0, rt0, t0 WHERE ((NOT (((CASE rt0.c0  WHEN vt0.c1 THEN rt0.c0 END)%(((rt0.c2)LIKE(0.24361342447369594))))))) UNION SELECT DISTINCT t0.c0, vt0.c1 FROM vt0, rt0, t0 WHERE (((((CASE rt0.c0  WHEN vt0.c1 THEN rt0.c0 END)%(((rt0.c2)LIKE(0.24361342447369594))))) ISNULL));
SELECT DISTINCT t0.c0, vt0.c1 FROM vt0, rt0, t0;
SELECT vt0.c1 FROM vt0, rt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0, rt0 WHERE (LIKELIHOOD(vt0.c1, 0.0988057452412554) COLLATE NOCASE COLLATE NOCASE) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0, rt0 WHERE ((NOT (LIKELIHOOD(vt0.c1, 0.0988057452412554) COLLATE NOCASE COLLATE NOCASE))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0, rt0 WHERE (((LIKELIHOOD(vt0.c1, 0.0988057452412554) COLLATE NOCASE COLLATE NOCASE) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0, rt0 GROUP BY vt0.c1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (+ (((GROUP_CONCAT(t0.c0)) BETWEEN (t0.c0) AND (t0.c0)))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ((+ (((GROUP_CONCAT(t0.c0)) BETWEEN (t0.c0) AND (t0.c0)))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((+ (((GROUP_CONCAT(t0.c0)) BETWEEN (t0.c0) AND (t0.c0))))) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (+ (((GROUP_CONCAT(t0.c0)) BETWEEN (t0.c0) AND (t0.c0)))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ((+ (((GROUP_CONCAT(t0.c0)) BETWEEN (t0.c0) AND (t0.c0)))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((+ (((GROUP_CONCAT(t0.c0)) BETWEEN (t0.c0) AND (t0.c0))))) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt0.c3, rt0.c1, rt0.c4, rt0.c2, rt0.c0 FROM rt0;
SELECT ALL rt0.c3, rt0.c1, rt0.c4, rt0.c2, rt0.c0 FROM rt0 WHERE ((((rt0.c2, rt0.c1, rt0.c1)) BETWEEN (((rt0.c4 IN ()), ((rt0.c0)%(rt0.c2)), CAST(rt0.c1 AS TEXT))) AND ((((rt0.c1)IS NOT(rt0.c2)), (+ (rt0.c0)), json_array_length(rt0.c3))))) UNION ALL SELECT rt0.c3, rt0.c1, rt0.c4, rt0.c2, rt0.c0 FROM rt0 NOT INDEXED WHERE ((NOT ((((rt0.c2, rt0.c1, rt0.c1)) BETWEEN (((rt0.c4 IN ()), ((rt0.c0)%(rt0.c2)), CAST(rt0.c1 AS TEXT))) AND ((((rt0.c1)IS NOT(rt0.c2)), (+ (rt0.c0)), json_array_length(rt0.c3))))))) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c4, rt0.c2, rt0.c0 FROM rt0 WHERE ((((((rt0.c2, rt0.c1, rt0.c1)) BETWEEN (((rt0.c4 IN ()), ((rt0.c0)%(rt0.c2)), CAST(rt0.c1 AS TEXT))) AND ((((rt0.c1)IS NOT(rt0.c2)), (+ (rt0.c0)), json_array_length(rt0.c3))))) ISNULL));
SELECT ALL rt0.c3, rt0.c1, rt0.c4, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))AND((vt0.c1 IN ()))))AND(((vt0.c1)IS(t0.c0))))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((NOT (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))AND((vt0.c1 IN ()))))AND(((vt0.c1)IS(t0.c0))))))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE (((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))AND((vt0.c1 IN ()))))AND(((vt0.c1)IS(t0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, t0;
SELECT rt0.c2, rt0.c1 FROM rt0, t0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0, t0 WHERE ((((rt0.c3 IN ())) NOT BETWEEN (((((((((rt0.c4)AND(rt0.c0)))AND(rt0.c1)))OR(t0.c0)))OR(t0.c0))) AND (((((x'')OR(rt0.c2)))OR(rt0.c2))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0, t0 WHERE ((NOT ((((rt0.c3 IN ())) NOT BETWEEN (((((((((rt0.c4)AND(rt0.c0)))AND(rt0.c1)))OR(t0.c0)))OR(t0.c0))) AND (((((x'')OR(rt0.c2)))OR(rt0.c2))))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0, t0 WHERE ((((((rt0.c3 IN ())) NOT BETWEEN (((((((((rt0.c4)AND(rt0.c0)))AND(rt0.c1)))OR(t0.c0)))OR(t0.c0))) AND (((((x'')OR(rt0.c2)))OR(rt0.c2))))) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0, t0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((((((((9.52567566E8)AND(CASE WHEN TOTAL(vt0.c1) THEN vt0.c1 END)))AND(TOTAL(MAX(vt0.c1)))))OR('')))AND(GROUP_CONCAT(vt0.c0))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (((((((((9.52567566E8)AND(CASE WHEN TOTAL(vt0.c1) THEN vt0.c1 END)))AND(TOTAL(MAX(vt0.c1)))))OR('')))AND(GROUP_CONCAT(vt0.c0))))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((((((((((9.52567566E8)AND(CASE WHEN TOTAL(vt0.c1) THEN vt0.c1 END)))AND(TOTAL(MAX(vt0.c1)))))OR('')))AND(GROUP_CONCAT(vt0.c0)))) ISNULL);
SELECT TOTAL(((((rt0.c3) ISNULL))IS NOT(rt0.c0))) FROM rt0, t0 ORDER BY CAST(((rt0.c0)||(rt0.c3)) AS BLOB), (((CAST(rt0.c0 AS REAL), CASE rt0.c2  WHEN x'' THEN rt0.c1 WHEN rt0.c0 THEN t0.c0 WHEN rt0.c0 THEN t0.c0 END, ((((x'')OR(t0.c0)))OR(rt0.c3)), ((x'') BETWEEN (t0.c0) AND (rt0.c4)), ((((rt0.c3)AND(rt0.c0)))AND(rt0.c1))))>((CASE t0.c0  WHEN rt0.c0 THEN t0.c0 END, (rt0.c3 IN (t0.c0)), CAST(rt0.c0 AS BLOB), CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c4 END, (rt0.c4 IN (rt0.c2)))))  NULLS LAST;
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE (t0.c0) UNION ALL SELECT * FROM t0 WHERE ((NOT (t0.c0))) UNION ALL SELECT * FROM t0 WHERE (((t0.c0) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c1) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0 FROM vt0 NOT INDEXED, t0 CROSS JOIN rt0 ON (((rt0.c4 IN ())) NOT BETWEEN ((NOT (rt0.c3))) AND (rt0.c2 COLLATE BINARY)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM vt0, t0 CROSS JOIN rt0 ON (((rt0.c4 IN ())) NOT BETWEEN ((NOT (rt0.c3))) AND (rt0.c2 COLLATE BINARY)) WHERE ((+ (CAST(vt0.c0 AS BLOB)))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM vt0, t0 CROSS JOIN rt0 ON (((rt0.c4 IN ())) NOT BETWEEN ((NOT (rt0.c3))) AND (rt0.c2 COLLATE BINARY)) WHERE ((NOT ((+ (CAST(vt0.c0 AS BLOB)))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM vt0, t0 CROSS JOIN rt0 ON (((rt0.c4 IN ())) NOT BETWEEN ((NOT (rt0.c3))) AND (rt0.c2 COLLATE BINARY)) WHERE ((((+ (CAST(vt0.c0 AS BLOB)))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM vt0 NOT INDEXED, t0 CROSS JOIN rt0 ON (((rt0.c4 IN ())) NOT BETWEEN ((NOT (rt0.c3))) AND (rt0.c2 COLLATE BINARY)) GROUP BY rt0.c0;
SELECT rt0.c2, rt0.c0, rt0.c1, t0.c0, rt0.c3, rt0.c4 FROM t0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, t0.c0, rt0.c3, rt0.c4;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, t0.c0, rt0.c3, rt0.c4 FROM t0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, t0.c0, rt0.c3, rt0.c4 HAVING CAST((((COUNT(COUNT(*))))<=((MIN(rt0.c3)))) AS BLOB) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1, t0.c0, rt0.c3, rt0.c4 FROM t0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, t0.c0, rt0.c3, rt0.c4 HAVING (NOT (CAST((((COUNT(COUNT(*))))<=((MIN(rt0.c3)))) AS BLOB))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1, t0.c0, rt0.c3, rt0.c4 FROM t0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, t0.c0, rt0.c3, rt0.c4 HAVING ((CAST((((COUNT(COUNT(*))))<=((MIN(rt0.c3)))) AS BLOB)) ISNULL);
SELECT rt0.c4, rt0.c2, rt0.c0, t0.c0 FROM t0, vt0, rt0;
SELECT rt0.c4, rt0.c2, rt0.c0, t0.c0 FROM t0, vt0, rt0 WHERE (CASE ((((t0.c0)AND(t0.c0)))OR(rt0.c2))  WHEN rt0.c1 COLLATE NOCASE THEN t0.c0 ELSE (('-774884513') BETWEEN (vt0.c1) AND (vt0.c0)) END) UNION ALL SELECT rt0.c4, rt0.c2, rt0.c0, t0.c0 FROM t0, vt0, rt0 WHERE ((NOT (CASE ((((t0.c0)AND(t0.c0)))OR(rt0.c2))  WHEN rt0.c1 COLLATE NOCASE THEN t0.c0 ELSE (('-774884513') BETWEEN (vt0.c1) AND (vt0.c0)) END))) UNION ALL SELECT rt0.c4, rt0.c2, rt0.c0, t0.c0 FROM t0, vt0, rt0 WHERE (((CASE ((((t0.c0)AND(t0.c0)))OR(rt0.c2))  WHEN rt0.c1 COLLATE NOCASE THEN t0.c0 ELSE (('-774884513') BETWEEN (vt0.c1) AND (vt0.c0)) END) ISNULL));
SELECT rt0.c4, rt0.c2, rt0.c0, t0.c0 FROM t0, vt0, rt0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (t0.c0) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL rt0.c2 FROM t0 CROSS JOIN vt0 ON -1368983363 CROSS JOIN rt0 ON NULL GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM t0 CROSS JOIN vt0 ON -1368983363 CROSS JOIN rt0 ON NULL WHERE (COALESCE((rt0.c2 IN (rt0.c4)), LIKELY(rt0.c4), (vt0.c1 IN ()), LOWER(rt0.c2))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM t0 CROSS JOIN vt0 ON -1368983363 CROSS JOIN rt0 ON NULL WHERE ((NOT (COALESCE((rt0.c2 IN (rt0.c4)), LIKELY(rt0.c4), (vt0.c1 IN ()), LOWER(rt0.c2))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM t0 CROSS JOIN vt0 ON -1368983363 CROSS JOIN rt0 ON NULL WHERE (((COALESCE((rt0.c2 IN (rt0.c4)), LIKELY(rt0.c4), (vt0.c1 IN ()), LOWER(rt0.c2))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM t0 CROSS JOIN vt0 ON -1368983363 CROSS JOIN rt0 ON NULL GROUP BY rt0.c2;
SELECT ALL rt0.c4, rt0.c3, rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c4, rt0.c3, rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c1, rt0.c0, rt0.c2 HAVING ((rt0.c3)%(MIN(COUNT(*)))) UNION ALL SELECT rt0.c4, rt0.c3, rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (((rt0.c3)%(MIN(COUNT(*)))))) UNION ALL SELECT ALL rt0.c4, rt0.c3, rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c1, rt0.c0, rt0.c2 HAVING ((((rt0.c3)%(MIN(COUNT(*))))) ISNULL);
SELECT ALL rt0.c4, rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT rt0.c4, rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((rt0.c2)<<(rt0.c0)) COLLATE BINARY) UNION ALL SELECT ALL rt0.c4, rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM rt0 NOT INDEXED WHERE ((NOT (((rt0.c2)<<(rt0.c0)) COLLATE BINARY))) UNION ALL SELECT ALL rt0.c4, rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((rt0.c2)<<(rt0.c0)) COLLATE BINARY) ISNULL));
SELECT ALL rt0.c4, rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM t0, vt0, rt0;
SELECT DISTINCT * FROM t0, vt0, rt0 WHERE ((((+ (0.9140635099827481)))AND(rt0.c2))) UNION SELECT DISTINCT * FROM t0, vt0, rt0 WHERE ((NOT ((((+ (0.9140635099827481)))AND(rt0.c2))))) UNION SELECT DISTINCT * FROM t0, vt0, rt0 WHERE ((((((+ (0.9140635099827481)))AND(rt0.c2))) ISNULL));
SELECT DISTINCT * FROM t0, vt0, rt0;
SELECT rt0.c0, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1;
SELECT ALL rt0.c0, rt0.c3, rt0.c1 FROM rt0 WHERE (0.48355299654423944) GROUP BY rt0.c0, rt0.c3, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c3, rt0.c1 FROM rt0 WHERE ((NOT (0.48355299654423944))) GROUP BY rt0.c0, rt0.c3, rt0.c1 UNION SELECT rt0.c0, rt0.c3, rt0.c1 FROM rt0 WHERE (((0.48355299654423944) ISNULL)) GROUP BY rt0.c0, rt0.c3, rt0.c1;
SELECT rt0.c0, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING MIN(CASE WHEN COUNT(vt0.c0) THEN vt0.c1 END) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (MIN(CASE WHEN COUNT(vt0.c0) THEN vt0.c1 END))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((MIN(CASE WHEN COUNT(vt0.c0) THEN vt0.c1 END)) ISNULL);
SELECT vt0.c0 FROM t0, vt0;
SELECT vt0.c0 FROM t0, vt0 WHERE (((((TRIM(t0.c0))AND((((vt0.c1, vt0.c0, vt0.c0))=((vt0.c0, vt0.c0, vt0.c1))))))AND((((vt0.c1))=((vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM t0, vt0 WHERE ((NOT (((((TRIM(t0.c0))AND((((vt0.c1, vt0.c0, vt0.c0))==((vt0.c0, vt0.c0, vt0.c1))))))AND((((vt0.c1))=((vt0.c0)))))))) UNION ALL SELECT ALL vt0.c0 FROM t0, vt0 WHERE (((((((TRIM(t0.c0))AND((((vt0.c1, vt0.c0, vt0.c0))==((vt0.c0, vt0.c0, vt0.c1))))))AND((((vt0.c1))==((vt0.c0)))))) ISNULL));
SELECT vt0.c0 FROM t0, vt0;
SELECT DISTINCT rt0.c3, rt0.c2, rt0.c4, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c3, rt0.c2, rt0.c4, rt0.c1 FROM rt0 WHERE ('862098679') UNION SELECT DISTINCT rt0.c3, rt0.c2, rt0.c4, rt0.c1 FROM rt0 WHERE ((NOT ('862098679'))) UNION SELECT DISTINCT rt0.c3, rt0.c2, rt0.c4, rt0.c1 FROM rt0 WHERE ((('862098679') ISNULL));
SELECT DISTINCT rt0.c3, rt0.c2, rt0.c4, rt0.c1 FROM rt0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, rt0.c3, vt0.c0, rt0.c4, vt0.c1 FROM vt0, rt0, t0 GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c3, vt0.c0, rt0.c4, vt0.c1;
SELECT rt0.c1, rt0.c2, rt0.c0, rt0.c3, vt0.c0, rt0.c4, vt0.c1 FROM vt0, rt0, t0 WHERE (((vt0.c0 COLLATE BINARY)&(rt0.c0))) GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c3, vt0.c0, rt0.c4, vt0.c1 UNION SELECT rt0.c1, rt0.c2, rt0.c0, rt0.c3, vt0.c0, rt0.c4, vt0.c1 FROM vt0, rt0, t0 WHERE ((NOT (((vt0.c0 COLLATE BINARY)&(rt0.c0))))) GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c3, vt0.c0, rt0.c4, vt0.c1 UNION SELECT rt0.c1, rt0.c2, rt0.c0, rt0.c3, vt0.c0, rt0.c4, vt0.c1 FROM vt0, rt0, t0 WHERE (((((vt0.c0 COLLATE BINARY)&(rt0.c0))) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c3, vt0.c0, rt0.c4, vt0.c1;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, rt0.c3, vt0.c0, rt0.c4, vt0.c1 FROM vt0, rt0, t0 GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c3, vt0.c0, rt0.c4, vt0.c1;
SELECT vt0.c1, rt0.c3, rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c1, rt0.c3, rt0.c1, rt0.c0, rt0.c2;
SELECT ALL vt0.c1, rt0.c3, rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c1, rt0.c3, rt0.c1, rt0.c0, rt0.c2 HAVING SUM(AVG(MAX(rt0.c4))) UNION ALL SELECT ALL vt0.c1, rt0.c3, rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c1, rt0.c3, rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (SUM(AVG(MAX(rt0.c4))))) UNION ALL SELECT ALL vt0.c1, rt0.c3, rt0.c1, rt0.c0, rt0.c2 FROM rt0 NOT INDEXED, vt0 GROUP BY vt0.c1, rt0.c3, rt0.c1, rt0.c0, rt0.c2 HAVING ((SUM(AVG(MAX(rt0.c4)))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((((((((CASE rt0.c0  WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 WHEN 1079508622 THEN rt0.c2 ELSE rt0.c4 END)AND(CAST(rt0.c0 AS REAL))))AND(CASE WHEN rt0.c0 THEN NULL END)))OR((rt0.c4 IN ()))))OR((((rt0.c4, rt0.c4, rt0.c4))!=((rt0.c1, rt0.c4, rt0.c1)))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((((((CASE rt0.c0  WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 WHEN 1079508622 THEN rt0.c2 ELSE rt0.c4 END)AND(CAST(rt0.c0 AS REAL))))AND(CASE WHEN rt0.c0 THEN NULL END)))OR((rt0.c4 IN ()))))OR((((rt0.c4, rt0.c4, rt0.c4))!=((rt0.c1, rt0.c4, rt0.c1)))))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((((((CASE rt0.c0  WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 WHEN 1079508622 THEN rt0.c2 ELSE rt0.c4 END)AND(CAST(rt0.c0 AS REAL))))AND(CASE WHEN rt0.c0 THEN NULL END)))OR((rt0.c4 IN ()))))OR((((rt0.c4, rt0.c4, rt0.c4))!=((rt0.c1, rt0.c4, rt0.c1)))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((SQLITE_COMPILEOPTION_GET(rt0.c0))=(CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c3 END))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((SQLITE_COMPILEOPTION_GET(rt0.c0))=(CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c3 END))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((SQLITE_COMPILEOPTION_GET(rt0.c0))=(CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c3 END))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1, rt0.c3, rt0.c4, vt0.c0 FROM t0, rt0, vt0 GROUP BY rt0.c1, rt0.c3, rt0.c4, vt0.c0;
SELECT ALL rt0.c1, rt0.c3, rt0.c4, vt0.c0 FROM t0 NOT INDEXED, rt0, vt0 WHERE (((rt0.c1 COLLATE NOCASE) NOT BETWEEN ((t0.c0 IN (rt0.c1))) AND (((vt0.c0)-(rt0.c4))))) GROUP BY rt0.c1, rt0.c3, rt0.c4, vt0.c0 UNION SELECT rt0.c1, rt0.c3, rt0.c4, vt0.c0 FROM t0, rt0, vt0 WHERE ((NOT (((rt0.c1 COLLATE NOCASE) NOT BETWEEN ((t0.c0 IN (rt0.c1))) AND (((vt0.c0)-(rt0.c4))))))) GROUP BY rt0.c1, rt0.c3, rt0.c4, vt0.c0 UNION SELECT rt0.c1, rt0.c3, rt0.c4, vt0.c0 FROM t0, rt0, vt0 WHERE (((((rt0.c1 COLLATE NOCASE) NOT BETWEEN ((t0.c0 IN (rt0.c1))) AND (((vt0.c0)-(rt0.c4))))) ISNULL)) GROUP BY rt0.c1, rt0.c3, rt0.c4, vt0.c0;
SELECT rt0.c1, rt0.c3, rt0.c4, vt0.c0 FROM t0, rt0, vt0 GROUP BY rt0.c1, rt0.c3, rt0.c4, vt0.c0;
SELECT ALL t0.c0 FROM t0, vt0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, vt0 GROUP BY t0.c0 HAVING SUM(CAST(SUM(vt0.c1) AS REAL)) UNION ALL SELECT t0.c0 FROM t0, vt0 GROUP BY t0.c0 HAVING (NOT (SUM(CAST(SUM(vt0.c1) AS REAL)))) UNION ALL SELECT ALL t0.c0 FROM t0, vt0 GROUP BY t0.c0 HAVING ((SUM(CAST(SUM(vt0.c1) AS REAL))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (LIKELIHOOD(DISTINCT (+ (vt0.c1)), 0.8703291911408046)) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (LIKELIHOOD(DISTINCT (+ (vt0.c1)), 0.8703291911408046)))) UNION ALL SELECT * FROM vt0 WHERE (((LIKELIHOOD(DISTINCT (+ (vt0.c1)), 0.8703291911408046)) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT rt0.c3, rt0.c4 FROM rt0;
SELECT DISTINCT rt0.c3, rt0.c4 FROM rt0 WHERE (NULL) UNION SELECT DISTINCT rt0.c3, rt0.c4 FROM rt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT rt0.c3, rt0.c4 FROM rt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c4 FROM rt0;
SELECT t0.c0, rt0.c1, vt0.c1, rt0.c3, rt0.c2, vt0.c0, rt0.c4 FROM rt0, t0 FULL OUTER JOIN vt0 ON CAST(INSTR('8', x'') AS INTEGER) GROUP BY t0.c0, rt0.c1, vt0.c1, rt0.c3, rt0.c2, vt0.c0, rt0.c4;
SELECT t0.c0, rt0.c1, vt0.c1, rt0.c3, rt0.c2, vt0.c0, rt0.c4 FROM rt0, t0 FULL OUTER JOIN vt0 ON CAST(INSTR('8', x'') AS INTEGER) WHERE (rt0.c1) GROUP BY t0.c0, rt0.c1, vt0.c1, rt0.c3, rt0.c2, vt0.c0, rt0.c4 UNION SELECT ALL t0.c0, rt0.c1, vt0.c1, rt0.c3, rt0.c2, vt0.c0, rt0.c4 FROM rt0, t0 FULL OUTER JOIN vt0 ON CAST(INSTR('8', x'') AS INTEGER) WHERE ((NOT (rt0.c1))) GROUP BY t0.c0, rt0.c1, vt0.c1, rt0.c3, rt0.c2, vt0.c0, rt0.c4 UNION SELECT t0.c0, rt0.c1, vt0.c1, rt0.c3, rt0.c2, vt0.c0, rt0.c4 FROM rt0, t0 FULL OUTER JOIN vt0 ON CAST(INSTR('8', x'') AS INTEGER) WHERE (((rt0.c1) ISNULL)) GROUP BY t0.c0, rt0.c1, vt0.c1, rt0.c3, rt0.c2, vt0.c0, rt0.c4;
SELECT t0.c0, rt0.c1, vt0.c1, rt0.c3, rt0.c2, vt0.c0, rt0.c4 FROM rt0, t0 FULL OUTER JOIN vt0 ON CAST(INSTR('8', x'') AS INTEGER) GROUP BY t0.c0, rt0.c1, vt0.c1, rt0.c3, rt0.c2, vt0.c0, rt0.c4;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING MAX(AVG(TOTAL(rt0.c0))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (MAX(AVG(TOTAL(rt0.c0))))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((MAX(AVG(TOTAL(rt0.c0)))) ISNULL);
SELECT ALL vt0.c0, vt0.c1, rt0.c2, rt0.c1, rt0.c0, rt0.c4 FROM vt0, rt0;
SELECT vt0.c0, vt0.c1, rt0.c2, rt0.c1, rt0.c0, rt0.c4 FROM vt0, rt0 WHERE (vt0.c0 COLLATE RTRIM) UNION ALL SELECT vt0.c0, vt0.c1, rt0.c2, rt0.c1, rt0.c0, rt0.c4 FROM vt0, rt0 WHERE ((NOT (vt0.c0 COLLATE RTRIM))) UNION ALL SELECT ALL vt0.c0, vt0.c1, rt0.c2, rt0.c1, rt0.c0, rt0.c4 FROM vt0, rt0 WHERE (((vt0.c0 COLLATE RTRIM) ISNULL));
SELECT ALL vt0.c0, vt0.c1, rt0.c2, rt0.c1, rt0.c0, rt0.c4 FROM vt0, rt0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) BETWEEN (CAST(NULL AS INTEGER)) AND ((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, 0.1626172494766147, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, -1163182126, t0.c0, t0.c0, t0.c0)))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) BETWEEN (CAST(NULL AS INTEGER)) AND ((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, 0.1626172494766147, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, -1163182126, t0.c0, t0.c0, t0.c0)))))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) BETWEEN (CAST(NULL AS INTEGER)) AND ((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, 0.1626172494766147, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, -1163182126, t0.c0, t0.c0, t0.c0)))))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))OR(CAST(t0.c0 AS INTEGER)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))OR(CAST(t0.c0 AS INTEGER)))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))OR(CAST(t0.c0 AS INTEGER)))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING TOTAL((+ (SUM(t0.c0)))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (TOTAL((+ (SUM(t0.c0)))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((TOTAL((+ (SUM(t0.c0))))) ISNULL);
SELECT * FROM t0 FULL OUTER JOIN rt0 ON CASE ((rt0.c2)=(rt0.c4))  WHEN ((rt0.c4) NOT NULL) THEN TRIM(DISTINCT rt0.c1) ELSE '2037350591' END;
SELECT ALL * FROM t0 FULL OUTER JOIN rt0 ON CASE ((rt0.c2)==(rt0.c4))  WHEN ((rt0.c4) NOT NULL) THEN TRIM(DISTINCT rt0.c1) ELSE '2037350591' END WHERE (((((rt0.c0)>(rt0.c0)))LIKE(((((rt0.c1)OR(rt0.c3)))AND(0Xffffffff9f77e32c))))) UNION ALL SELECT * FROM t0 FULL OUTER JOIN rt0 ON CASE ((rt0.c2)==(rt0.c4))  WHEN ((rt0.c4) NOT NULL) THEN TRIM(DISTINCT rt0.c1) ELSE '2037350591' END WHERE ((NOT (((((rt0.c0)>(rt0.c0)))LIKE(((((rt0.c1)OR(rt0.c3)))AND(0xffffffff9f77e32c))))))) UNION ALL SELECT ALL * FROM t0 FULL OUTER JOIN rt0 ON CASE ((rt0.c2)=(rt0.c4))  WHEN ((rt0.c4) NOT NULL) THEN TRIM(DISTINCT rt0.c1) ELSE '2037350591' END WHERE (((((((rt0.c0)>(rt0.c0)))LIKE(((((rt0.c1)OR(rt0.c3)))AND(0xffffffff9f77e32c))))) ISNULL));
SELECT * FROM t0 FULL OUTER JOIN rt0 ON CASE ((rt0.c2)=(rt0.c4))  WHEN ((rt0.c4) NOT NULL) THEN TRIM(DISTINCT rt0.c1) ELSE '2037350591' END;
SELECT DISTINCT t0.c0, vt0.c1 FROM t0, vt0 INNER JOIN rt0 ON CAST(rt0.c1 AS INTEGER);
SELECT DISTINCT t0.c0, vt0.c1 FROM t0, vt0 INNER JOIN rt0 ON CAST(rt0.c1 AS INTEGER) WHERE (CASE WHEN ((rt0.c1)LIKE(rt0.c0)) THEN ('>*If?' IN (rt0.c2, rt0.c0)) ELSE ((((NULL)AND(rt0.c2)))AND(rt0.c2)) END) UNION SELECT DISTINCT t0.c0, vt0.c1 FROM t0, vt0 INNER JOIN rt0 ON CAST(rt0.c1 AS INTEGER) WHERE ((NOT (CASE WHEN ((rt0.c1)LIKE(rt0.c0)) THEN ('>*If?' IN (rt0.c2, rt0.c0)) ELSE ((((NULL)AND(rt0.c2)))AND(rt0.c2)) END))) UNION SELECT DISTINCT t0.c0, vt0.c1 FROM t0, vt0 INNER JOIN rt0 ON CAST(rt0.c1 AS INTEGER) WHERE (((CASE WHEN ((rt0.c1)LIKE(rt0.c0)) THEN ('>*If?' IN (rt0.c2, rt0.c0)) ELSE ((((NULL)AND(rt0.c2)))AND(rt0.c2)) END) ISNULL));
SELECT DISTINCT t0.c0, vt0.c1 FROM t0, vt0 INNER JOIN rt0 ON CAST(rt0.c1 AS INTEGER);
SELECT t0.c0, vt0.c1, vt0.c0 FROM vt0 CROSS JOIN t0 ON (((x'', CASE WHEN -1093874548 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END, (((NULL)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0)))))>=((t0.c0, NULLIF(vt0.c1, vt0.c1), ((NULL)IS NOT(vt0.c0))))) GROUP BY t0.c0, vt0.c1, vt0.c0;
SELECT t0.c0, vt0.c1, vt0.c0 FROM vt0 CROSS JOIN t0 ON (((x'', CASE WHEN -1093874548 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END, (((NULL)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0)))))>=((t0.c0, NULLIF(vt0.c1, vt0.c1), ((NULL)IS NOT(vt0.c0))))) WHERE (((SQLITE_COMPILEOPTION_GET(t0.c0)) BETWEEN ((~ (vt0.c0))) AND ((NOT (0.30115157805222414))))) GROUP BY t0.c0, vt0.c1, vt0.c0 UNION SELECT t0.c0, vt0.c1, vt0.c0 FROM vt0 CROSS JOIN t0 ON (((x'', CASE WHEN -1093874548 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END, (((NULL)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0)))))>=((t0.c0, NULLIF(vt0.c1, vt0.c1), ((NULL)IS NOT(vt0.c0))))) WHERE ((NOT (((SQLITE_COMPILEOPTION_GET(t0.c0)) BETWEEN ((~ (vt0.c0))) AND ((NOT (0.30115157805222414))))))) GROUP BY t0.c0, vt0.c1, vt0.c0 UNION SELECT ALL t0.c0, vt0.c1, vt0.c0 FROM vt0 CROSS JOIN t0 ON (((x'', CASE WHEN -1093874548 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END, (((NULL)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0)))))>=((t0.c0, NULLIF(vt0.c1, vt0.c1), ((NULL)IS NOT(vt0.c0))))) WHERE (((((SQLITE_COMPILEOPTION_GET(t0.c0)) BETWEEN ((~ (vt0.c0))) AND ((NOT (0.30115157805222414))))) ISNULL)) GROUP BY t0.c0, vt0.c1, vt0.c0;
SELECT t0.c0, vt0.c1, vt0.c0 FROM vt0 CROSS JOIN t0 ON (((x'', CASE WHEN -1093874548 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END, (((NULL)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0)))))>=((t0.c0, NULLIF(vt0.c1, vt0.c1), ((NULL)IS NOT(vt0.c0))))) GROUP BY t0.c0, vt0.c1, vt0.c0;
SELECT vt0.c1, rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0 NOT INDEXED, t0 GROUP BY vt0.c1, rt0.c0, rt0.c1, vt0.c0;
SELECT ALL vt0.c1, rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0, t0 GROUP BY vt0.c1, rt0.c0, rt0.c1, vt0.c0 HAVING AVG((SUM(MAX(rt0.c1)) IN (AVG(SUM(COUNT(*)))))) UNION ALL SELECT ALL vt0.c1, rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0, t0 GROUP BY vt0.c1, rt0.c0, rt0.c1, vt0.c0 HAVING (NOT (AVG((SUM(MAX(rt0.c1)) IN (AVG(SUM(COUNT(*)))))))) UNION ALL SELECT vt0.c1, rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0, t0 GROUP BY vt0.c1, rt0.c0, rt0.c1, vt0.c0 HAVING ((AVG((SUM(MAX(rt0.c1)) IN (AVG(SUM(COUNT(*))))))) ISNULL);
SELECT ALL * FROM rt0, t0, vt0;
SELECT ALL * FROM rt0, t0, vt0 WHERE (((((vt0.c0, t0.c0, rt0.c0)) BETWEEN ((vt0.c0, rt0.c1, rt0.c4)) AND ((rt0.c0, rt0.c3, rt0.c4))) IN ())) UNION ALL SELECT ALL * FROM rt0, t0, vt0 WHERE ((NOT (((((vt0.c0, t0.c0, rt0.c0)) BETWEEN ((vt0.c0, rt0.c1, rt0.c4)) AND ((rt0.c0, rt0.c3, rt0.c4))) IN ())))) UNION ALL SELECT * FROM rt0, t0, vt0 WHERE (((((((vt0.c0, t0.c0, rt0.c0)) BETWEEN ((vt0.c0, rt0.c1, rt0.c4)) AND ((rt0.c0, rt0.c3, rt0.c4))) IN ())) ISNULL));
SELECT ALL * FROM rt0, t0, vt0;
SELECT DISTINCT t0.c0, rt0.c0, rt0.c2, rt0.c4, vt0.c0, vt0.c1, rt0.c3, rt0.c1 FROM rt0, vt0, t0;
SELECT DISTINCT t0.c0, rt0.c0, rt0.c2, rt0.c4, vt0.c0, vt0.c1, rt0.c3, rt0.c1 FROM rt0, vt0, t0 WHERE (CAST(((rt0.c1)GLOB(vt0.c0)) AS NUMERIC)) UNION SELECT DISTINCT t0.c0, rt0.c0, rt0.c2, rt0.c4, vt0.c0, vt0.c1, rt0.c3, rt0.c1 FROM rt0, vt0, t0 WHERE ((NOT (CAST(((rt0.c1)GLOB(vt0.c0)) AS NUMERIC)))) UNION SELECT DISTINCT t0.c0, rt0.c0, rt0.c2, rt0.c4, vt0.c0, vt0.c1, rt0.c3, rt0.c1 FROM rt0, vt0, t0 WHERE (((CAST(((rt0.c1)GLOB(vt0.c0)) AS NUMERIC)) ISNULL));
SELECT DISTINCT t0.c0, rt0.c0, rt0.c2, rt0.c4, vt0.c0, vt0.c1, rt0.c3, rt0.c1 FROM rt0, vt0, t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ((((((((t0.c0, t0.c0, t0.c0))>=((t0.c0, t0.c0, t0.c0))))AND(CASE WHEN t0.c0 THEN t0.c0 WHEN NULL THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((((((((t0.c0, t0.c0, t0.c0))>=((t0.c0, t0.c0, t0.c0))))AND(CASE WHEN t0.c0 THEN t0.c0 WHEN NULL THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((((((((((t0.c0, t0.c0, t0.c0))>=((t0.c0, t0.c0, t0.c0))))AND(CASE WHEN t0.c0 THEN t0.c0 WHEN NULL THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0, t0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0, t0 GROUP BY vt0.c1, vt0.c0 HAVING SUM(TOTAL(MIN(t0.c0))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0, t0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (SUM(TOTAL(MIN(t0.c0))))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0, t0 GROUP BY vt0.c1, vt0.c0 HAVING ((SUM(TOTAL(MIN(t0.c0)))) ISNULL);
SELECT ALL * FROM t0, vt0, rt0;
SELECT ALL * FROM t0, vt0, rt0 WHERE (((((rt0.c0)LIKE(rt0.c4))) NOT BETWEEN ((rt0.c3 IN ())) AND (((x'') IS TRUE)))) UNION ALL SELECT * FROM t0, vt0, rt0 WHERE ((NOT (((((rt0.c0)LIKE(rt0.c4))) NOT BETWEEN ((rt0.c3 IN ())) AND (((x'') IS TRUE)))))) UNION ALL SELECT * FROM t0, vt0, rt0 WHERE (((((((rt0.c0)LIKE(rt0.c4))) NOT BETWEEN ((rt0.c3 IN ())) AND (((x'') IS TRUE)))) ISNULL));
SELECT ALL * FROM t0, vt0, rt0;
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON ABS(vt0.c1) COLLATE BINARY;
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON ABS(vt0.c1) COLLATE BINARY WHERE (((((RTRIM(rt0.c4))OR(((rt0.c1)<<(rt0.c4)))))OR(((((vt0.c1)OR(vt0.c0)))OR(rt0.c0))))) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON ABS(vt0.c1) COLLATE BINARY WHERE ((NOT (((((RTRIM(rt0.c4))OR(((rt0.c1)<<(rt0.c4)))))OR(((((vt0.c1)OR(vt0.c0)))OR(rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON ABS(vt0.c1) COLLATE BINARY WHERE (((((((RTRIM(rt0.c4))OR(((rt0.c1)<<(rt0.c4)))))OR(((((vt0.c1)OR(vt0.c0)))OR(rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON ABS(vt0.c1) COLLATE BINARY;
SELECT ALL rt0.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1;
SELECT rt0.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1 FROM vt0, rt0 WHERE (((rt0.c4 COLLATE BINARY)>((((('1178028958')OR(rt0.c3)))OR(rt0.c0))))) GROUP BY rt0.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1 FROM vt0, rt0 WHERE ((NOT (((rt0.c4 COLLATE BINARY)>((((('1178028958')OR(rt0.c3)))OR(rt0.c0))))))) GROUP BY rt0.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1 FROM vt0, rt0 WHERE (((((rt0.c4 COLLATE BINARY)>((((('1178028958')OR(rt0.c3)))OR(rt0.c0))))) ISNULL)) GROUP BY rt0.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1;
SELECT ALL rt0.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1;
SELECT ALL vt0.c0, t0.c0 FROM vt0 INNER JOIN t0 ON CASE WHEN (((t0.c0)) BETWEEN ((x'')) AND ((vt0.c1))) THEN ((0.7901078776185735) NOTNULL) END GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, t0.c0 FROM vt0 INNER JOIN t0 ON CASE WHEN (((t0.c0)) BETWEEN ((x'')) AND ((vt0.c1))) THEN ((0.7901078776185735) NOTNULL) END GROUP BY vt0.c0, t0.c0 HAVING MIN(MIN(vt0.c1)) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM vt0 INNER JOIN t0 ON CASE WHEN (((t0.c0)) BETWEEN ((x'')) AND ((vt0.c1))) THEN ((0.7901078776185735) NOTNULL) END GROUP BY vt0.c0, t0.c0 HAVING (NOT (MIN(MIN(vt0.c1)))) UNION ALL SELECT vt0.c0, t0.c0 FROM vt0 INNER JOIN t0 ON CASE WHEN (((t0.c0)) BETWEEN ((x'')) AND ((vt0.c1))) THEN ((0.7901078776185735) NOTNULL) END GROUP BY vt0.c0, t0.c0 HAVING ((MIN(MIN(vt0.c1))) ISNULL);
SELECT ALL * FROM rt0, t0, vt0;
SELECT ALL * FROM rt0, t0, vt0 WHERE (((((vt0.c0)AND(((rt0.c1)>>(rt0.c2)))))OR((vt0.c1 IN ())))) UNION ALL SELECT * FROM rt0, t0, vt0 WHERE ((NOT (((((vt0.c0)AND(((rt0.c1)>>(rt0.c2)))))OR((vt0.c1 IN ())))))) UNION ALL SELECT * FROM rt0, t0, vt0 WHERE (((((((vt0.c0)AND(((rt0.c1)>>(rt0.c2)))))OR((vt0.c1 IN ())))) ISNULL));
SELECT ALL * FROM rt0, t0, vt0;
SELECT DISTINCT * FROM rt0, t0, vt0;
SELECT DISTINCT * FROM rt0, t0, vt0 WHERE (((rt0.c3) NOT BETWEEN (((rt0.c1)<>(rt0.c0))) AND (0.5010436436795738))) UNION SELECT DISTINCT * FROM rt0, t0, vt0 WHERE ((NOT (((rt0.c3) NOT BETWEEN (((rt0.c1)!=(rt0.c0))) AND (0.5010436436795738))))) UNION SELECT DISTINCT * FROM rt0, t0, vt0 WHERE (((((rt0.c3) NOT BETWEEN (((rt0.c1)!=(rt0.c0))) AND (0.5010436436795738))) ISNULL));
SELECT DISTINCT * FROM rt0, t0, vt0;
SELECT rt0.c2, t0.c0, vt0.c0, rt0.c4, rt0.c3, rt0.c1 FROM rt0, vt0 RIGHT OUTER JOIN t0 ON ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c4))) NOTNULL) GROUP BY rt0.c2, t0.c0, vt0.c0, rt0.c4, rt0.c3, rt0.c1;
SELECT rt0.c2, t0.c0, vt0.c0, rt0.c4, rt0.c3, rt0.c1 FROM rt0, vt0 RIGHT OUTER JOIN t0 ON ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c4))) NOTNULL) WHERE ((((+ (0.29031706277616187))) BETWEEN (CAST(t0.c0 AS TEXT)) AND (''))) GROUP BY rt0.c2, t0.c0, vt0.c0, rt0.c4, rt0.c3, rt0.c1 UNION SELECT rt0.c2, t0.c0, vt0.c0, rt0.c4, rt0.c3, rt0.c1 FROM rt0, vt0 RIGHT OUTER JOIN t0 ON ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c4))) NOTNULL) WHERE ((NOT ((((+ (0.29031706277616187))) BETWEEN (CAST(t0.c0 AS TEXT)) AND (''))))) GROUP BY rt0.c2, t0.c0, vt0.c0, rt0.c4, rt0.c3, rt0.c1 UNION SELECT ALL rt0.c2, t0.c0, vt0.c0, rt0.c4, rt0.c3, rt0.c1 FROM rt0, vt0 RIGHT OUTER JOIN t0 ON ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c4))) NOTNULL) WHERE ((((((+ (0.29031706277616187))) BETWEEN (CAST(t0.c0 AS TEXT)) AND (''))) ISNULL)) GROUP BY rt0.c2, t0.c0, vt0.c0, rt0.c4, rt0.c3, rt0.c1;
SELECT rt0.c2, t0.c0, vt0.c0, rt0.c4, rt0.c3, rt0.c1 FROM rt0, vt0 RIGHT OUTER JOIN t0 ON ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c4))) NOTNULL) GROUP BY rt0.c2, t0.c0, vt0.c0, rt0.c4, rt0.c3, rt0.c1;
SELECT rt0.c1, vt0.c0, rt0.c3 FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt0.c4)))))==((((rt0.c4) ISNULL)))) FULL OUTER JOIN t0 ON ((rt0.c2)LIKE(t0.c0)) COLLATE RTRIM GROUP BY rt0.c1, vt0.c0, rt0.c3;
SELECT ALL rt0.c1, vt0.c0, rt0.c3 FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt0.c4)))))==((((rt0.c4) ISNULL)))) FULL OUTER JOIN t0 ON ((rt0.c2)LIKE(t0.c0)) COLLATE RTRIM GROUP BY rt0.c1, vt0.c0, rt0.c3 HAVING (NOT (((t0.c0) IS TRUE))) UNION ALL SELECT rt0.c1, vt0.c0, rt0.c3 FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt0.c4)))))=((((rt0.c4) ISNULL)))) FULL OUTER JOIN t0 ON ((rt0.c2)LIKE(t0.c0)) COLLATE RTRIM GROUP BY rt0.c1, vt0.c0, rt0.c3 HAVING (NOT ((NOT (((t0.c0) IS TRUE))))) UNION ALL SELECT ALL rt0.c1, vt0.c0, rt0.c3 FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt0.c4)))))==((((rt0.c4) ISNULL)))) FULL OUTER JOIN t0 ON ((rt0.c2)LIKE(t0.c0)) COLLATE RTRIM GROUP BY rt0.c1, vt0.c0, rt0.c3 HAVING (((NOT (((t0.c0) IS TRUE)))) ISNULL);
SELECT rt0.c1, vt0.c0, rt0.c3 FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt0.c4)))))==((((rt0.c4) ISNULL)))) FULL OUTER JOIN t0 ON ((rt0.c2)LIKE(t0.c0)) COLLATE RTRIM GROUP BY rt0.c1, vt0.c0, rt0.c3;
SELECT ALL rt0.c1, vt0.c0, rt0.c3 FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt0.c4)))))==((((rt0.c4) ISNULL)))) FULL OUTER JOIN t0 ON ((rt0.c2)LIKE(t0.c0)) COLLATE RTRIM GROUP BY rt0.c1, vt0.c0, rt0.c3 HAVING (NOT (((t0.c0) IS TRUE))) UNION ALL SELECT rt0.c1, vt0.c0, rt0.c3 FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt0.c4)))))=((((rt0.c4) ISNULL)))) FULL OUTER JOIN t0 ON ((rt0.c2)LIKE(t0.c0)) COLLATE RTRIM GROUP BY rt0.c1, vt0.c0, rt0.c3 HAVING (NOT ((NOT (((t0.c0) IS TRUE))))) UNION ALL SELECT ALL rt0.c1, vt0.c0, rt0.c3 FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt0.c4)))))==((((rt0.c4) ISNULL)))) FULL OUTER JOIN t0 ON ((rt0.c2)LIKE(t0.c0)) COLLATE RTRIM GROUP BY rt0.c1, vt0.c0, rt0.c3 HAVING (((NOT (((t0.c0) IS TRUE)))) ISNULL);
SELECT rt0.c1, vt0.c0, rt0.c3 FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt0.c4)))))==((((rt0.c4) ISNULL)))) FULL OUTER JOIN t0 ON ((rt0.c2)LIKE(t0.c0)) COLLATE RTRIM GROUP BY rt0.c1, vt0.c0, rt0.c3;
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON (rt0.c2 COLLATE RTRIM IN ()) INNER JOIN rt0 ON CASE ((rt0.c4) NOT NULL)  WHEN ((((vt0.c0)OR(t0.c0)))OR(rt0.c4)) THEN CAST(rt0.c1 AS NUMERIC) END;
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON (rt0.c2 COLLATE RTRIM IN ()) INNER JOIN rt0 ON CASE ((rt0.c4) NOT NULL)  WHEN ((((vt0.c0)OR(t0.c0)))OR(rt0.c4)) THEN CAST(rt0.c1 AS NUMERIC) END WHERE (x'') UNION ALL SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON (rt0.c2 COLLATE RTRIM IN ()) INNER JOIN rt0 ON CASE ((rt0.c4) NOT NULL)  WHEN ((((vt0.c0)OR(t0.c0)))OR(rt0.c4)) THEN CAST(rt0.c1 AS NUMERIC) END WHERE ((NOT (x''))) UNION ALL SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON (rt0.c2 COLLATE RTRIM IN ()) INNER JOIN rt0 ON CASE ((rt0.c4) NOT NULL)  WHEN ((((vt0.c0)OR(t0.c0)))OR(rt0.c4)) THEN CAST(rt0.c1 AS NUMERIC) END WHERE (((x'') ISNULL));
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON (rt0.c2 COLLATE RTRIM IN ()) INNER JOIN rt0 ON CASE ((rt0.c4) NOT NULL)  WHEN ((((vt0.c0)OR(t0.c0)))OR(rt0.c4)) THEN CAST(rt0.c1 AS NUMERIC) END;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0)GLOB(x'')))<<(((((t0.c0)OR(t0.c0)))OR(t0.c0))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((((t0.c0)GLOB(x'')))<<(((((t0.c0)OR(t0.c0)))OR(t0.c0))))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((((t0.c0)GLOB(x'')))<<(((((t0.c0)OR(t0.c0)))OR(t0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT vt0.c1, rt0.c0, rt0.c4, vt0.c0, rt0.c2, rt0.c3, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c1, rt0.c0, rt0.c4, vt0.c0, rt0.c2, rt0.c3, rt0.c1;
SELECT vt0.c1, rt0.c0, rt0.c4, vt0.c0, rt0.c2, rt0.c3, rt0.c1 FROM rt0, vt0 WHERE ('ab뭤+]D') GROUP BY vt0.c1, rt0.c0, rt0.c4, vt0.c0, rt0.c2, rt0.c3, rt0.c1 UNION SELECT ALL vt0.c1, rt0.c0, rt0.c4, vt0.c0, rt0.c2, rt0.c3, rt0.c1 FROM rt0, vt0 WHERE ((NOT ('ab뭤+]D'))) GROUP BY vt0.c1, rt0.c0, rt0.c4, vt0.c0, rt0.c2, rt0.c3, rt0.c1 UNION SELECT ALL vt0.c1, rt0.c0, rt0.c4, vt0.c0, rt0.c2, rt0.c3, rt0.c1 FROM rt0, vt0 WHERE ((('ab뭤+]D') ISNULL)) GROUP BY vt0.c1, rt0.c0, rt0.c4, vt0.c0, rt0.c2, rt0.c3, rt0.c1;
SELECT vt0.c1, rt0.c0, rt0.c4, vt0.c0, rt0.c2, rt0.c3, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c1, rt0.c0, rt0.c4, vt0.c0, rt0.c2, rt0.c3, rt0.c1;
SELECT t0.c0, rt0.c0, vt0.c1, rt0.c1 FROM t0, vt0, rt0 GROUP BY t0.c0, rt0.c0, vt0.c1, rt0.c1;
SELECT t0.c0, rt0.c0, vt0.c1, rt0.c1 FROM t0, vt0, rt0 GROUP BY t0.c0, rt0.c0, vt0.c1, rt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0, rt0.c0, vt0.c1, rt0.c1 FROM t0, vt0, rt0 GROUP BY t0.c0, rt0.c0, vt0.c1, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0, rt0.c0, vt0.c1, rt0.c1 FROM t0, vt0, rt0 GROUP BY t0.c0, rt0.c0, vt0.c1, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0, rt0.c0, vt0.c1, rt0.c1 FROM t0, vt0, rt0 GROUP BY t0.c0, rt0.c0, vt0.c1, rt0.c1;
SELECT t0.c0, rt0.c0, vt0.c1, rt0.c1 FROM t0, vt0, rt0 GROUP BY t0.c0, rt0.c0, vt0.c1, rt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0, rt0.c0, vt0.c1, rt0.c1 FROM t0, vt0, rt0 GROUP BY t0.c0, rt0.c0, vt0.c1, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0, rt0.c0, vt0.c1, rt0.c1 FROM t0, vt0, rt0 GROUP BY t0.c0, rt0.c0, vt0.c1, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0, rt0.c0, vt0.c1, rt0.c1 FROM t0, vt0, rt0 GROUP BY t0.c0, rt0.c0, vt0.c1, rt0.c1;
SELECT ALL vt0.c1, t0.c0, vt0.c0 FROM vt0 INNER JOIN t0 ON CAST(x'7159' AS REAL);
SELECT ALL vt0.c1, t0.c0, vt0.c0 FROM vt0 INNER JOIN t0 ON CAST(x'7159' AS REAL) WHERE (((((t0.c0)GLOB(vt0.c0)))IS NOT((vt0.c0 IN (vt0.c0))))) UNION ALL SELECT ALL vt0.c1, t0.c0, vt0.c0 FROM vt0 INNER JOIN t0 ON CAST(x'7159' AS REAL) WHERE ((NOT (((((t0.c0)GLOB(vt0.c0)))IS NOT((vt0.c0 IN (vt0.c0))))))) UNION ALL SELECT vt0.c1, t0.c0, vt0.c0 FROM vt0 INNER JOIN t0 ON CAST(x'7159' AS REAL) WHERE (((((((t0.c0)GLOB(vt0.c0)))IS NOT((vt0.c0 IN (vt0.c0))))) ISNULL));
SELECT ALL vt0.c1, t0.c0, vt0.c0 FROM vt0 INNER JOIN t0 ON CAST(x'7159' AS REAL);
SELECT DISTINCT * FROM t0 INNER JOIN vt0 ON (- ((((t0.c0, vt0.c0, NULL))<>((vt0.c0, vt0.c0, x'')))));
SELECT DISTINCT * FROM t0 INNER JOIN vt0 ON (- ((((t0.c0, vt0.c0, NULL))!=((vt0.c0, vt0.c0, x''))))) WHERE (((CAST(t0.c0 AS NUMERIC))OR((((x'd9da026a')) BETWEEN ((t0.c0)) AND ((vt0.c0)))))) UNION SELECT DISTINCT * FROM t0 INNER JOIN vt0 ON (- ((((t0.c0, vt0.c0, NULL))<>((vt0.c0, vt0.c0, x''))))) WHERE ((NOT (((CAST(t0.c0 AS NUMERIC))OR((((x'd9da026a')) BETWEEN ((t0.c0)) AND ((vt0.c0)))))))) UNION SELECT DISTINCT * FROM t0 INNER JOIN vt0 ON (- ((((t0.c0, vt0.c0, NULL))<>((vt0.c0, vt0.c0, x''))))) WHERE (((((CAST(t0.c0 AS NUMERIC))OR((((x'd9da026a')) BETWEEN ((t0.c0)) AND ((vt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM t0 INNER JOIN vt0 ON (- ((((t0.c0, vt0.c0, NULL))<>((vt0.c0, vt0.c0, x'')))));
SELECT rt0.c1, rt0.c0, vt0.c0, rt0.c4, t0.c0, rt0.c2 FROM t0, vt0 INNER JOIN rt0 ON ((('444291704')) NOT BETWEEN ((LOWER(DISTINCT rt0.c2))) AND ((((NULL) BETWEEN (rt0.c4) AND (rt0.c1))))) GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c4, t0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, vt0.c0, rt0.c4, t0.c0, rt0.c2 FROM t0, vt0 INNER JOIN rt0 ON ((('444291704')) NOT BETWEEN ((LOWER(DISTINCT rt0.c2))) AND ((((NULL) BETWEEN (rt0.c4) AND (rt0.c1))))) WHERE (CAST(CAST(t0.c0 AS BLOB) AS BLOB)) GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c4, t0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, vt0.c0, rt0.c4, t0.c0, rt0.c2 FROM t0, vt0 INNER JOIN rt0 ON ((('444291704')) NOT BETWEEN ((LOWER(DISTINCT rt0.c2))) AND ((((NULL) BETWEEN (rt0.c4) AND (rt0.c1))))) WHERE ((NOT (CAST(CAST(t0.c0 AS BLOB) AS BLOB)))) GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c4, t0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, vt0.c0, rt0.c4, t0.c0, rt0.c2 FROM t0, vt0 INNER JOIN rt0 ON ((('444291704')) NOT BETWEEN ((LOWER(DISTINCT rt0.c2))) AND ((((NULL) BETWEEN (rt0.c4) AND (rt0.c1))))) WHERE (((CAST(CAST(t0.c0 AS BLOB) AS BLOB)) ISNULL)) GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c4, t0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, vt0.c0, rt0.c4, t0.c0, rt0.c2 FROM t0, vt0 INNER JOIN rt0 ON ((('444291704')) NOT BETWEEN ((LOWER(DISTINCT rt0.c2))) AND ((((NULL) BETWEEN (rt0.c4) AND (rt0.c1))))) GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c4, t0.c0, rt0.c2;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING vt0.c1 UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (vt0.c1)) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((vt0.c1) ISNULL);
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING vt0.c1 UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (vt0.c1)) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((vt0.c1) ISNULL);
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON ((((t0.c0)OR(vt0.c0)))OR(vt0.c1)) COLLATE BINARY;
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON ((((t0.c0)OR(vt0.c0)))OR(vt0.c1)) COLLATE BINARY WHERE (vt0.c1) UNION ALL SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON ((((t0.c0)OR(vt0.c0)))OR(vt0.c1)) COLLATE BINARY WHERE ((NOT (vt0.c1))) UNION ALL SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON ((((t0.c0)OR(vt0.c0)))OR(vt0.c1)) COLLATE BINARY WHERE (((vt0.c1) ISNULL));
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON ((((t0.c0)OR(vt0.c0)))OR(vt0.c1)) COLLATE BINARY;
SELECT DISTINCT * FROM rt0, t0;
SELECT DISTINCT * FROM rt0, t0 WHERE (((rt0.c0) BETWEEN (((rt0.c2)*(rt0.c2))) AND ((~ (t0.c0))))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((NOT (((rt0.c0) BETWEEN (((rt0.c2)*(rt0.c2))) AND ((~ (t0.c0))))))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE (((((rt0.c0) BETWEEN (((rt0.c2)*(rt0.c2))) AND ((~ (t0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0, t0;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 WHERE (((((vt0.c0 IN (vt0.c1)), (('0.26491082975431524')OR(vt0.c0)), ((vt0.c1)GLOB(vt0.c1))))>=((((vt0.c1) IS FALSE), ((vt0.c1)-(vt0.c0)), UNLIKELY(DISTINCT vt0.c0))))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE ((NOT (((((vt0.c0 IN (vt0.c1)), (('0.26491082975431524')OR(vt0.c0)), ((vt0.c1)GLOB(vt0.c1))))>=((((vt0.c1) IS FALSE), ((vt0.c1)-(vt0.c0)), UNLIKELY(DISTINCT vt0.c0))))))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE (((((((vt0.c0 IN (vt0.c1)), (('0.26491082975431524')OR(vt0.c0)), ((vt0.c1)GLOB(vt0.c1))))>=((((vt0.c1) IS FALSE), ((vt0.c1)-(vt0.c0)), UNLIKELY(DISTINCT vt0.c0))))) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING CASE WHEN GROUP_CONCAT(MIN(COUNT(t0.c0))) THEN ((SUM(MAX(t0.c0)))IS NOT(TOTAL(t0.c0))) END UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (CASE WHEN GROUP_CONCAT(MIN(COUNT(t0.c0))) THEN ((SUM(MAX(t0.c0)))IS NOT(TOTAL(t0.c0))) END)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((CASE WHEN GROUP_CONCAT(MIN(COUNT(t0.c0))) THEN ((SUM(MAX(t0.c0)))IS NOT(TOTAL(t0.c0))) END) ISNULL);
SELECT ALL t0.c0, rt0.c3, rt0.c1, rt0.c4, rt0.c2 FROM rt0 LEFT OUTER JOIN vt0 ON ((((((rt0.c0)OR(9.7025219E7)))OR(vt0.c1)))-((rt0.c3 IN ()))) CROSS JOIN t0 ON CAST(CASE WHEN vt0.c1 THEN 0.8224099364191909 END AS TEXT);
SELECT ALL t0.c0, rt0.c3, rt0.c1, rt0.c4, rt0.c2 FROM rt0 LEFT OUTER JOIN vt0 ON ((((((rt0.c0)OR(9.7025219E7)))OR(vt0.c1)))-((rt0.c3 IN ()))) CROSS JOIN t0 ON CAST(CASE WHEN vt0.c1 THEN 0.8224099364191909 END AS TEXT) WHERE ((((vt0.c1 COLLATE BINARY))<=(((((rt0.c0, rt0.c0, rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((t0.c0, vt0.c1, rt0.c4, rt0.c2, rt0.c1)) AND ((rt0.c2, vt0.c0, vt0.c0, t0.c0, rt0.c4))))))) UNION ALL SELECT t0.c0, rt0.c3, rt0.c1, rt0.c4, rt0.c2 FROM rt0 LEFT OUTER JOIN vt0 ON ((((((rt0.c0)OR(9.7025219E7)))OR(vt0.c1)))-((rt0.c3 IN ()))) CROSS JOIN t0 ON CAST(CASE WHEN vt0.c1 THEN 0.8224099364191909 END AS TEXT) WHERE ((NOT ((((vt0.c1 COLLATE BINARY))<=(((((rt0.c0, rt0.c0, rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((t0.c0, vt0.c1, rt0.c4, rt0.c2, rt0.c1)) AND ((rt0.c2, vt0.c0, vt0.c0, t0.c0, rt0.c4))))))))) UNION ALL SELECT t0.c0, rt0.c3, rt0.c1, rt0.c4, rt0.c2 FROM rt0 LEFT OUTER JOIN vt0 ON ((((((rt0.c0)OR(9.7025219E7)))OR(vt0.c1)))-((rt0.c3 IN ()))) CROSS JOIN t0 ON CAST(CASE WHEN vt0.c1 THEN 0.8224099364191909 END AS TEXT) WHERE ((((((vt0.c1 COLLATE BINARY))<=(((((rt0.c0, rt0.c0, rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((t0.c0, vt0.c1, rt0.c4, rt0.c2, rt0.c1)) AND ((rt0.c2, vt0.c0, vt0.c0, t0.c0, rt0.c4))))))) ISNULL));
SELECT ALL t0.c0, rt0.c3, rt0.c1, rt0.c4, rt0.c2 FROM rt0 LEFT OUTER JOIN vt0 ON ((((((rt0.c0)OR(9.7025219E7)))OR(vt0.c1)))-((rt0.c3 IN ()))) CROSS JOIN t0 ON CAST(CASE WHEN vt0.c1 THEN 0.8224099364191909 END AS TEXT);
SELECT DISTINCT vt0.c1, t0.c0, vt0.c0 FROM t0, vt0;
SELECT DISTINCT vt0.c1, t0.c0, vt0.c0 FROM t0, vt0 WHERE (CAST(((vt0.c0)LIKE(t0.c0)) AS REAL)) UNION SELECT DISTINCT vt0.c1, t0.c0, vt0.c0 FROM t0, vt0 WHERE ((NOT (CAST(((vt0.c0)LIKE(t0.c0)) AS REAL)))) UNION SELECT DISTINCT vt0.c1, t0.c0, vt0.c0 FROM t0, vt0 WHERE (((CAST(((vt0.c0)LIKE(t0.c0)) AS REAL)) ISNULL));
SELECT DISTINCT vt0.c1, t0.c0, vt0.c0 FROM t0, vt0;
SELECT ALL rt0.c2, t0.c0 FROM t0, rt0 GROUP BY rt0.c2, t0.c0;
SELECT ALL rt0.c2, t0.c0 FROM t0, rt0 WHERE (CASE WHEN (rt0.c4 IN ()) THEN NULL WHEN CAST(rt0.c3 AS TEXT) THEN ((rt0.c4)-(t0.c0)) WHEN ((rt0.c0)|(rt0.c4)) THEN t0.c0 COLLATE BINARY END) GROUP BY rt0.c2, t0.c0 UNION SELECT rt0.c2, t0.c0 FROM t0, rt0 WHERE ((NOT (CASE WHEN (rt0.c4 IN ()) THEN NULL WHEN CAST(rt0.c3 AS TEXT) THEN ((rt0.c4)-(t0.c0)) WHEN ((rt0.c0)|(rt0.c4)) THEN t0.c0 COLLATE BINARY END))) GROUP BY rt0.c2, t0.c0 UNION SELECT ALL rt0.c2, t0.c0 FROM t0, rt0 NOT INDEXED WHERE (((CASE WHEN (rt0.c4 IN ()) THEN NULL WHEN CAST(rt0.c3 AS TEXT) THEN ((rt0.c4)-(t0.c0)) WHEN ((rt0.c0)|(rt0.c4)) THEN t0.c0 COLLATE BINARY END) ISNULL)) GROUP BY rt0.c2, t0.c0;
SELECT ALL rt0.c2, t0.c0 FROM t0, rt0 GROUP BY rt0.c2, t0.c0;
SELECT ALL rt0.c3 FROM t0, vt0 NATURAL JOIN rt0 GROUP BY rt0.c3;
SELECT rt0.c3 FROM t0, vt0 NATURAL JOIN rt0 GROUP BY rt0.c3 HAVING HEX(DISTINCT (((vt0.c0))>=((TOTAL(rt0.c4))))) UNION ALL SELECT ALL rt0.c3 FROM t0, vt0 NATURAL JOIN rt0 GROUP BY rt0.c3 HAVING (NOT (HEX(DISTINCT (((vt0.c0))>=((TOTAL(rt0.c4))))))) UNION ALL SELECT rt0.c3 FROM t0, vt0 NATURAL JOIN rt0 GROUP BY rt0.c3 HAVING ((HEX(DISTINCT (((vt0.c0))>=((TOTAL(rt0.c4)))))) ISNULL);
SELECT ALL rt0.c3 FROM t0, vt0 NATURAL JOIN rt0 GROUP BY rt0.c3;
SELECT rt0.c3 FROM t0, vt0 NATURAL JOIN rt0 GROUP BY rt0.c3 HAVING HEX(DISTINCT (((vt0.c0))>=((TOTAL(rt0.c4))))) UNION ALL SELECT ALL rt0.c3 FROM t0, vt0 NATURAL JOIN rt0 GROUP BY rt0.c3 HAVING (NOT (HEX(DISTINCT (((vt0.c0))>=((TOTAL(rt0.c4))))))) UNION ALL SELECT rt0.c3 FROM t0, vt0 NATURAL JOIN rt0 GROUP BY rt0.c3 HAVING ((HEX(DISTINCT (((vt0.c0))>=((TOTAL(rt0.c4)))))) ISNULL);
SELECT ALL rt0.c3 FROM t0, vt0 NATURAL JOIN rt0 GROUP BY rt0.c3;
SELECT ALL rt0.c1, vt0.c1, rt0.c3, t0.c0, rt0.c2, rt0.c0, vt0.c0, rt0.c4 FROM rt0 CROSS JOIN vt0 ON rt0.c3 INNER JOIN t0 ON vt0.c0 COLLATE BINARY;
SELECT ALL rt0.c1, vt0.c1, rt0.c3, t0.c0, rt0.c2, rt0.c0, vt0.c0, rt0.c4 FROM rt0 CROSS JOIN vt0 ON rt0.c3 INNER JOIN t0 ON vt0.c0 COLLATE BINARY WHERE (((((((rt0.c3) NOTNULL))AND(((vt0.c1)GLOB(NULL)))))AND(x'' COLLATE NOCASE))) UNION ALL SELECT rt0.c1, vt0.c1, rt0.c3, t0.c0, rt0.c2, rt0.c0, vt0.c0, rt0.c4 FROM rt0 CROSS JOIN vt0 ON rt0.c3 INNER JOIN t0 ON vt0.c0 COLLATE BINARY WHERE ((NOT (((((((rt0.c3) NOTNULL))AND(((vt0.c1)GLOB(NULL)))))AND(x'' COLLATE NOCASE))))) UNION ALL SELECT ALL rt0.c1, vt0.c1, rt0.c3, t0.c0, rt0.c2, rt0.c0, vt0.c0, rt0.c4 FROM rt0 CROSS JOIN vt0 ON rt0.c3 INNER JOIN t0 ON vt0.c0 COLLATE BINARY WHERE (((((((((rt0.c3) NOTNULL))AND(((vt0.c1)GLOB(NULL)))))AND(x'' COLLATE NOCASE))) ISNULL));
SELECT ALL rt0.c1, vt0.c1, rt0.c3, t0.c0, rt0.c2, rt0.c0, vt0.c0, rt0.c4 FROM rt0 CROSS JOIN vt0 ON rt0.c3 INNER JOIN t0 ON vt0.c0 COLLATE BINARY;
SELECT DISTINCT * FROM rt0, t0;
SELECT DISTINCT * FROM rt0, t0 WHERE (((((CASE rt0.c3  WHEN rt0.c1 THEN 0.4154328628459458 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN t0.c0 END)OR((((rt0.c0, rt0.c2, t0.c0))>=((rt0.c3, rt0.c4, rt0.c0))))))AND(rt0.c0 COLLATE RTRIM))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((NOT (((((CASE rt0.c3  WHEN rt0.c1 THEN 0.4154328628459458 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN t0.c0 END)OR((((rt0.c0, rt0.c2, t0.c0))>=((rt0.c3, rt0.c4, rt0.c0))))))AND(rt0.c0 COLLATE RTRIM))))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE (((((((CASE rt0.c3  WHEN rt0.c1 THEN 0.4154328628459458 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN t0.c0 END)OR((((rt0.c0, rt0.c2, t0.c0))>=((rt0.c3, rt0.c4, rt0.c0))))))AND(rt0.c0 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT * FROM rt0, t0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0, t0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0, t0 WHERE (CASE WHEN CAST(t0.c0 AS TEXT) THEN (NOT (1.890671683E9)) ELSE '' END) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0, t0 WHERE ((NOT (CASE WHEN CAST(t0.c0 AS TEXT) THEN (NOT (1.890671683E9)) ELSE '' END))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0, t0 WHERE (((CASE WHEN CAST(t0.c0 AS TEXT) THEN (NOT (1.890671683E9)) ELSE '' END) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0, t0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING GROUP_CONCAT(CAST(t0.c0 AS NUMERIC)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (GROUP_CONCAT(CAST(t0.c0 AS NUMERIC)))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((GROUP_CONCAT(CAST(t0.c0 AS NUMERIC))) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING GROUP_CONCAT(CAST(t0.c0 AS NUMERIC)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (GROUP_CONCAT(CAST(t0.c0 AS NUMERIC)))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((GROUP_CONCAT(CAST(t0.c0 AS NUMERIC))) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT rt0.c0, rt0.c2, rt0.c4, rt0.c3 FROM t0, rt0;
SELECT ALL rt0.c0, rt0.c2, rt0.c4, rt0.c3 FROM t0, rt0 WHERE (CASE WHEN CASE WHEN t0.c0 THEN rt0.c0 WHEN t0.c0 THEN rt0.c1 WHEN rt0.c3 THEN t0.c0 END THEN ((rt0.c0)<=(0.06205939373375613)) WHEN rt0.c3 COLLATE RTRIM THEN CAST(t0.c0 AS TEXT) WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND ('1691634698')) THEN ((rt0.c2) BETWEEN (rt0.c4) AND (t0.c0)) ELSE ((rt0.c4)&(rt0.c3)) END) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c4, rt0.c3 FROM t0, rt0 WHERE ((NOT (CASE WHEN CASE WHEN t0.c0 THEN rt0.c0 WHEN t0.c0 THEN rt0.c1 WHEN rt0.c3 THEN t0.c0 END THEN ((rt0.c0)<=(0.06205939373375613)) WHEN rt0.c3 COLLATE RTRIM THEN CAST(t0.c0 AS TEXT) WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND ('1691634698')) THEN ((rt0.c2) BETWEEN (rt0.c4) AND (t0.c0)) ELSE ((rt0.c4)&(rt0.c3)) END))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c4, rt0.c3 FROM t0, rt0 WHERE (((CASE WHEN CASE WHEN t0.c0 THEN rt0.c0 WHEN t0.c0 THEN rt0.c1 WHEN rt0.c3 THEN t0.c0 END THEN ((rt0.c0)<=(0.06205939373375613)) WHEN rt0.c3 COLLATE RTRIM THEN CAST(t0.c0 AS TEXT) WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND ('1691634698')) THEN ((rt0.c2) BETWEEN (rt0.c4) AND (t0.c0)) ELSE ((rt0.c4)&(rt0.c3)) END) ISNULL));
SELECT rt0.c0, rt0.c2, rt0.c4, rt0.c3 FROM t0, rt0;
SELECT DISTINCT * FROM t0 CROSS JOIN vt0 ON rt0.c1 LEFT OUTER JOIN rt0 ON ((vt0.c1) IS TRUE);
SELECT DISTINCT * FROM t0 CROSS JOIN vt0 ON rt0.c1 LEFT OUTER JOIN rt0 ON ((vt0.c1) IS TRUE) WHERE (rt0.c3) UNION SELECT DISTINCT * FROM t0 CROSS JOIN vt0 ON rt0.c1 LEFT OUTER JOIN rt0 ON ((vt0.c1) IS TRUE) WHERE ((NOT (rt0.c3))) UNION SELECT DISTINCT * FROM t0 CROSS JOIN vt0 ON rt0.c1 LEFT OUTER JOIN rt0 ON ((vt0.c1) IS TRUE) WHERE (((rt0.c3) ISNULL));
SELECT DISTINCT * FROM t0 CROSS JOIN vt0 ON rt0.c1 LEFT OUTER JOIN rt0 ON ((vt0.c1) IS TRUE);
SELECT vt0.c1, vt0.c0, t0.c0 FROM t0 INNER JOIN vt0 ON COALESCE(CASE WHEN vt0.c0 THEN vt0.c0 ELSE t0.c0 END, ((((((((((((t0.c0)AND(vt0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(vt0.c0)))OR('n觲'))) GROUP BY vt0.c1, vt0.c0, t0.c0;
SELECT vt0.c1, vt0.c0, t0.c0 FROM t0 INNER JOIN vt0 ON COALESCE(CASE WHEN vt0.c0 THEN vt0.c0 ELSE t0.c0 END, ((((((((((((t0.c0)AND(vt0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(vt0.c0)))OR('n觲'))) WHERE (((t0.c0) IS FALSE)) GROUP BY vt0.c1, vt0.c0, t0.c0 UNION SELECT vt0.c1, vt0.c0, t0.c0 FROM t0 INNER JOIN vt0 ON COALESCE(CASE WHEN vt0.c0 THEN vt0.c0 ELSE t0.c0 END, ((((((((((((t0.c0)AND(vt0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(vt0.c0)))OR('n觲'))) WHERE ((NOT (((t0.c0) IS FALSE)))) GROUP BY vt0.c1, vt0.c0, t0.c0 UNION SELECT vt0.c1, vt0.c0, t0.c0 FROM t0 INNER JOIN vt0 ON COALESCE(CASE WHEN vt0.c0 THEN vt0.c0 ELSE t0.c0 END, ((((((((((((t0.c0)AND(vt0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(vt0.c0)))OR('n觲'))) WHERE (((((t0.c0) IS FALSE)) ISNULL)) GROUP BY vt0.c1, vt0.c0, t0.c0;
SELECT vt0.c1, vt0.c0, t0.c0 FROM t0 INNER JOIN vt0 ON COALESCE(CASE WHEN vt0.c0 THEN vt0.c0 ELSE t0.c0 END, ((((((((((((t0.c0)AND(vt0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(vt0.c0)))OR('n觲'))) GROUP BY vt0.c1, vt0.c0, t0.c0;
SELECT ALL rt0.c2, rt0.c0, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c4, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c4, rt0.c1 HAVING MIN(rt0.c4) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c4, rt0.c1 HAVING (NOT (MIN(rt0.c4))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c4, rt0.c1 HAVING ((MIN(rt0.c4)) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c4, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c4, rt0.c1 HAVING MIN(rt0.c4) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c4, rt0.c1 HAVING (NOT (MIN(rt0.c4))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c4, rt0.c1 HAVING ((MIN(rt0.c4)) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c4, rt0.c1;
SELECT ALL rt0.c2, rt0.c4, rt0.c0, rt0.c3 FROM rt0;
SELECT rt0.c2, rt0.c4, rt0.c0, rt0.c3 FROM rt0 WHERE (rt0.c2) UNION ALL SELECT rt0.c2, rt0.c4, rt0.c0, rt0.c3 FROM rt0 WHERE ((NOT (rt0.c2))) UNION ALL SELECT rt0.c2, rt0.c4, rt0.c0, rt0.c3 FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT ALL rt0.c2, rt0.c4, rt0.c0, rt0.c3 FROM rt0;
SELECT DISTINCT t0.c0, vt0.c1, vt0.c0 FROM vt0, t0;
SELECT DISTINCT t0.c0, vt0.c1, vt0.c0 FROM vt0, t0 WHERE (((CAST(NULL AS NUMERIC))>(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END))) UNION SELECT DISTINCT t0.c0, vt0.c1, vt0.c0 FROM vt0, t0 WHERE ((NOT (((CAST(NULL AS NUMERIC))>(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END))))) UNION SELECT DISTINCT t0.c0, vt0.c1, vt0.c0 FROM vt0, t0 WHERE (((((CAST(NULL AS NUMERIC))>(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END))) ISNULL));
SELECT DISTINCT t0.c0, vt0.c1, vt0.c0 FROM vt0, t0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (((((rt0.c0) ISNULL)) NOT BETWEEN ((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c3)))) AND (((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c3))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c0) ISNULL)) NOT BETWEEN ((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c3)))) AND (((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c3))))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (((((((rt0.c0) ISNULL)) NOT BETWEEN ((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c3)))) AND (((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c3))))) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING MIN(((SUM(x''))IS(t0.c0))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MIN(((SUM(x''))IS(t0.c0))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MIN(((SUM(x''))IS(t0.c0)))) ISNULL);
SELECT ALL * FROM rt0, vt0 FULL OUTER JOIN t0 ON ((CASE WHEN rt0.c0 THEN t0.c0 WHEN rt0.c0 THEN vt0.c1 WHEN 9.52567566E8 THEN t0.c0 ELSE rt0.c0 END) NOT BETWEEN (rt0.c1) AND (((t0.c0) NOT NULL)));
SELECT ALL * FROM rt0, vt0 FULL OUTER JOIN t0 ON ((CASE WHEN rt0.c0 THEN t0.c0 WHEN rt0.c0 THEN vt0.c1 WHEN 9.52567566E8 THEN t0.c0 ELSE rt0.c0 END) NOT BETWEEN (rt0.c1) AND (((t0.c0) NOT NULL))) WHERE ((+ (json_insert(rt0.c1, t0.c0, t0.c0)))) UNION ALL SELECT * FROM rt0, vt0 FULL OUTER JOIN t0 ON ((CASE WHEN rt0.c0 THEN t0.c0 WHEN rt0.c0 THEN vt0.c1 WHEN 9.52567566E8 THEN t0.c0 ELSE rt0.c0 END) NOT BETWEEN (rt0.c1) AND (((t0.c0) NOT NULL))) WHERE ((NOT ((+ (json_insert(rt0.c1, t0.c0, t0.c0)))))) UNION ALL SELECT * FROM rt0, vt0 FULL OUTER JOIN t0 ON ((CASE WHEN rt0.c0 THEN t0.c0 WHEN rt0.c0 THEN vt0.c1 WHEN 9.52567566E8 THEN t0.c0 ELSE rt0.c0 END) NOT BETWEEN (rt0.c1) AND (((t0.c0) NOT NULL))) WHERE ((((+ (json_insert(rt0.c1, t0.c0, t0.c0)))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c4, rt0.c2, t0.c0, vt0.c0, rt0.c3, rt0.c0, vt0.c1 FROM rt0 INNER JOIN t0 ON ((CASE '-1607436296'  WHEN rt0.c4 THEN vt0.c1 WHEN rt0.c3 THEN t0.c0 WHEN t0.c0 THEN rt0.c2 END) ISNULL) RIGHT OUTER JOIN vt0 ON ((CAST(t0.c0 AS BLOB))!=(t0.c0 COLLATE BINARY));
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 WHERE (((vt0.c1 IN (vt0.c0)) IN ())) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE ((NOT (((vt0.c1 IN (vt0.c0)) IN ())))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE (((((vt0.c1 IN (vt0.c0)) IN ())) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING SUM(((((((((rt0.c0)AND(COUNT(*))))AND(COUNT(SUM(COUNT(rt0.c2))))))OR(rt0.c0)))AND(COUNT(*)))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (SUM(((((((((rt0.c0)AND(COUNT(*))))AND(COUNT(SUM(COUNT(rt0.c2))))))OR(rt0.c0)))AND(COUNT(*)))))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((SUM(((((((((rt0.c0)AND(COUNT(*))))AND(COUNT(SUM(COUNT(rt0.c2))))))OR(rt0.c0)))AND(COUNT(*))))) ISNULL);
SELECT ALL rt0.c2, t0.c0, rt0.c4, vt0.c1 FROM rt0, vt0 RIGHT OUTER JOIN t0 ON TRIM(((((x'')AND(vt0.c0)))OR('-9223372036854775808')), LIKELIHOOD(rt0.c2, 0.2880030701510127));
SELECT ALL rt0.c2, t0.c0, rt0.c4, vt0.c1 FROM rt0, vt0 RIGHT OUTER JOIN t0 ON TRIM(((((x'')AND(vt0.c0)))OR('-9223372036854775808')), LIKELIHOOD(rt0.c2, 0.2880030701510127)) WHERE (CASE ((vt0.c0) BETWEEN (vt0.c1) AND (rt0.c4))  WHEN ((rt0.c4) NOT BETWEEN (vt0.c1) AND (rt0.c3)) THEN NULL ELSE CASE WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c2 END END) UNION ALL SELECT ALL rt0.c2, t0.c0, rt0.c4, vt0.c1 FROM rt0, vt0 RIGHT OUTER JOIN t0 ON TRIM(((((x'')AND(vt0.c0)))OR('-9223372036854775808')), LIKELIHOOD(rt0.c2, 0.2880030701510127)) WHERE ((NOT (CASE ((vt0.c0) BETWEEN (vt0.c1) AND (rt0.c4))  WHEN ((rt0.c4) NOT BETWEEN (vt0.c1) AND (rt0.c3)) THEN NULL ELSE CASE WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c2 END END))) UNION ALL SELECT rt0.c2, t0.c0, rt0.c4, vt0.c1 FROM rt0, vt0 RIGHT OUTER JOIN t0 ON TRIM(((((x'')AND(vt0.c0)))OR('-9223372036854775808')), LIKELIHOOD(rt0.c2, 0.2880030701510127)) WHERE (((CASE ((vt0.c0) BETWEEN (vt0.c1) AND (rt0.c4))  WHEN ((rt0.c4) NOT BETWEEN (vt0.c1) AND (rt0.c3)) THEN NULL ELSE CASE WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c2 END END) ISNULL));
SELECT ALL rt0.c2, t0.c0, rt0.c4, vt0.c1 FROM rt0, vt0 RIGHT OUTER JOIN t0 ON TRIM(((((x'')AND(vt0.c0)))OR('-9223372036854775808')), LIKELIHOOD(rt0.c2, 0.2880030701510127));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE (CAST((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c3))) AS INTEGER)) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT (CAST((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c3))) AS INTEGER)))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((CAST((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c3))) AS INTEGER)) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT ALL rt0.c1, t0.c0, rt0.c2, rt0.c0, rt0.c3 FROM t0, rt0 GROUP BY rt0.c1, t0.c0, rt0.c2, rt0.c0, rt0.c3;
SELECT rt0.c1, t0.c0, rt0.c2, rt0.c0, rt0.c3 FROM t0, rt0 WHERE ((+ ((('') NOT NULL)))) GROUP BY rt0.c1, t0.c0, rt0.c2, rt0.c0, rt0.c3 UNION SELECT ALL rt0.c1, t0.c0, rt0.c2, rt0.c0, rt0.c3 FROM t0, rt0 WHERE ((NOT ((+ ((('') NOT NULL)))))) GROUP BY rt0.c1, t0.c0, rt0.c2, rt0.c0, rt0.c3 UNION SELECT rt0.c1, t0.c0, rt0.c2, rt0.c0, rt0.c3 FROM t0, rt0 WHERE ((((+ ((('') NOT NULL)))) ISNULL)) GROUP BY rt0.c1, t0.c0, rt0.c2, rt0.c0, rt0.c3;
SELECT ALL rt0.c1, t0.c0, rt0.c2, rt0.c0, rt0.c3 FROM t0, rt0 GROUP BY rt0.c1, t0.c0, rt0.c2, rt0.c0, rt0.c3;
SELECT rt0.c2, vt0.c1, rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c1, rt0.c1, vt0.c0;
SELECT ALL rt0.c2, vt0.c1, rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c1, rt0.c1, vt0.c0 HAVING 0x72ee833f UNION ALL SELECT ALL rt0.c2, vt0.c1, rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c1, rt0.c1, vt0.c0 HAVING (NOT (0X72ee833f)) UNION ALL SELECT ALL rt0.c2, vt0.c1, rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c1, rt0.c1, vt0.c0 HAVING ((0x72ee833f) ISNULL);
SELECT rt0.c2, vt0.c1, rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c1, rt0.c1, vt0.c0;
SELECT ALL rt0.c2, vt0.c1, rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c1, rt0.c1, vt0.c0 HAVING 0x72ee833f UNION ALL SELECT ALL rt0.c2, vt0.c1, rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c1, rt0.c1, vt0.c0 HAVING (NOT (0X72ee833f)) UNION ALL SELECT ALL rt0.c2, vt0.c1, rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c1, rt0.c1, vt0.c0 HAVING ((0x72ee833f) ISNULL);
SELECT rt0.c2, vt0.c1, rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c1, rt0.c1, vt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0, rt0.c3 FROM t0, rt0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, rt0.c3 FROM t0, rt0 WHERE (((((rt0.c0)GLOB(rt0.c4))) NOT BETWEEN (CAST(rt0.c3 AS TEXT)) AND (CASE rt0.c4  WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c2 END))) ORDER BY 'T3}%'  NULLS FIRST;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, rt0.c3 FROM t0, rt0 WHERE ((NOT (((((rt0.c0)GLOB(rt0.c4))) NOT BETWEEN (CAST(rt0.c3 AS TEXT)) AND (CASE rt0.c4  WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c2 END))))) ORDER BY 'T3}%'  NULLS FIRST;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, rt0.c3 FROM t0, rt0 WHERE (((((((rt0.c0)GLOB(rt0.c4))) NOT BETWEEN (CAST(rt0.c3 AS TEXT)) AND (CASE rt0.c4  WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c2 END))) ISNULL)) ORDER BY 'T3}%'  NULLS FIRST;
SELECT rt0.c1, rt0.c2, rt0.c0, rt0.c3 FROM t0, rt0;
SELECT DISTINCT rt0.c3, vt0.c1, rt0.c0, rt0.c1 FROM t0 CROSS JOIN vt0 ON ((CAST(rt0.c4 AS INTEGER)) NOT BETWEEN (((rt0.c3) NOTNULL)) AND ((('0.2521552165869949') NOTNULL))) CROSS JOIN rt0 ON CAST((- (rt0.c0)) AS TEXT);
SELECT DISTINCT rt0.c3, vt0.c1, rt0.c0, rt0.c1 FROM t0 CROSS JOIN vt0 ON ((CAST(rt0.c4 AS INTEGER)) NOT BETWEEN (((rt0.c3) NOTNULL)) AND ((('0.2521552165869949') NOTNULL))) CROSS JOIN rt0 ON CAST((- (rt0.c0)) AS TEXT) WHERE (0X1eda6b7f) UNION SELECT DISTINCT rt0.c3, vt0.c1, rt0.c0, rt0.c1 FROM t0 CROSS JOIN vt0 ON ((CAST(rt0.c4 AS INTEGER)) NOT BETWEEN (((rt0.c3) NOTNULL)) AND ((('0.2521552165869949') NOTNULL))) CROSS JOIN rt0 ON CAST((- (rt0.c0)) AS TEXT) WHERE ((NOT (0X1eda6b7f))) UNION SELECT DISTINCT rt0.c3, vt0.c1, rt0.c0, rt0.c1 FROM t0 CROSS JOIN vt0 ON ((CAST(rt0.c4 AS INTEGER)) NOT BETWEEN (((rt0.c3) NOTNULL)) AND ((('0.2521552165869949') NOTNULL))) CROSS JOIN rt0 ON CAST((- (rt0.c0)) AS TEXT) WHERE (((0X1eda6b7f) ISNULL));
SELECT DISTINCT rt0.c3, vt0.c1, rt0.c0, rt0.c1 FROM t0 CROSS JOIN vt0 ON ((CAST(rt0.c4 AS INTEGER)) NOT BETWEEN (((rt0.c3) NOTNULL)) AND ((('0.2521552165869949') NOTNULL))) CROSS JOIN rt0 ON CAST((- (rt0.c0)) AS TEXT);
SELECT ALL rt0.c4, rt0.c3, vt0.c1 FROM t0 CROSS JOIN rt0 ON (((rt0.c0)) NOT BETWEEN ((((rt0.c4) NOT BETWEEN (vt0.c0) AND (rt0.c2)))) AND ((((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c4))))) FULL OUTER JOIN vt0 ON COALESCE(rt0.c1, ((vt0.c0) IS FALSE), ((rt0.c2)AND(rt0.c3)), ((vt0.c0)&(rt0.c4))) GROUP BY rt0.c4, rt0.c3, vt0.c1;
SELECT ALL rt0.c3, t0.c0, rt0.c0, rt0.c4, rt0.c2 FROM t0 RIGHT OUTER JOIN rt0 ON ((CAST(rt0.c0 AS BLOB)) BETWEEN (((rt0.c2)<<(rt0.c1))) AND (rt0.c2)) LEFT OUTER JOIN vt0 ON ((((rt0.c4) IS TRUE)) BETWEEN ((((vt0.c1, t0.c0, t0.c0))<((rt0.c2, rt0.c1, t0.c0)))) AND (((vt0.c1)<<(vt0.c1)))) GROUP BY rt0.c3, t0.c0, rt0.c0, rt0.c4, rt0.c2;
SELECT rt0.c3, t0.c0, rt0.c0, rt0.c4, rt0.c2 FROM t0 RIGHT OUTER JOIN rt0 ON ((CAST(rt0.c0 AS BLOB)) BETWEEN (((rt0.c2)<<(rt0.c1))) AND (rt0.c2)) LEFT OUTER JOIN vt0 ON ((((rt0.c4) IS TRUE)) BETWEEN ((((vt0.c1, t0.c0, t0.c0))<((rt0.c2, rt0.c1, t0.c0)))) AND (((vt0.c1)<<(vt0.c1)))) GROUP BY rt0.c3, t0.c0, rt0.c0, rt0.c4, rt0.c2 HAVING GROUP_CONCAT(vt0.c1) UNION ALL SELECT rt0.c3, t0.c0, rt0.c0, rt0.c4, rt0.c2 FROM t0 RIGHT OUTER JOIN rt0 ON ((CAST(rt0.c0 AS BLOB)) BETWEEN (((rt0.c2)<<(rt0.c1))) AND (rt0.c2)) LEFT OUTER JOIN vt0 ON ((((rt0.c4) IS TRUE)) BETWEEN ((((vt0.c1, t0.c0, t0.c0))<((rt0.c2, rt0.c1, t0.c0)))) AND (((vt0.c1)<<(vt0.c1)))) GROUP BY rt0.c3, t0.c0, rt0.c0, rt0.c4, rt0.c2 HAVING (NOT (GROUP_CONCAT(vt0.c1))) UNION ALL SELECT ALL rt0.c3, t0.c0, rt0.c0, rt0.c4, rt0.c2 FROM t0 RIGHT OUTER JOIN rt0 ON ((CAST(rt0.c0 AS BLOB)) BETWEEN (((rt0.c2)<<(rt0.c1))) AND (rt0.c2)) LEFT OUTER JOIN vt0 ON ((((rt0.c4) IS TRUE)) BETWEEN ((((vt0.c1, t0.c0, t0.c0))<((rt0.c2, rt0.c1, t0.c0)))) AND (((vt0.c1)<<(vt0.c1)))) GROUP BY rt0.c3, t0.c0, rt0.c0, rt0.c4, rt0.c2 HAVING ((GROUP_CONCAT(vt0.c1)) ISNULL);
SELECT ALL rt0.c3, t0.c0, rt0.c0, rt0.c4, rt0.c2 FROM t0 RIGHT OUTER JOIN rt0 ON ((CAST(rt0.c0 AS BLOB)) BETWEEN (((rt0.c2)<<(rt0.c1))) AND (rt0.c2)) LEFT OUTER JOIN vt0 ON ((((rt0.c4) IS TRUE)) BETWEEN ((((vt0.c1, t0.c0, t0.c0))<((rt0.c2, rt0.c1, t0.c0)))) AND (((vt0.c1)<<(vt0.c1)))) GROUP BY rt0.c3, t0.c0, rt0.c0, rt0.c4, rt0.c2;
SELECT rt0.c3, t0.c0, rt0.c0, rt0.c4, rt0.c2 FROM t0 RIGHT OUTER JOIN rt0 ON ((CAST(rt0.c0 AS BLOB)) BETWEEN (((rt0.c2)<<(rt0.c1))) AND (rt0.c2)) LEFT OUTER JOIN vt0 ON ((((rt0.c4) IS TRUE)) BETWEEN ((((vt0.c1, t0.c0, t0.c0))<((rt0.c2, rt0.c1, t0.c0)))) AND (((vt0.c1)<<(vt0.c1)))) GROUP BY rt0.c3, t0.c0, rt0.c0, rt0.c4, rt0.c2 HAVING GROUP_CONCAT(vt0.c1) UNION ALL SELECT rt0.c3, t0.c0, rt0.c0, rt0.c4, rt0.c2 FROM t0 RIGHT OUTER JOIN rt0 ON ((CAST(rt0.c0 AS BLOB)) BETWEEN (((rt0.c2)<<(rt0.c1))) AND (rt0.c2)) LEFT OUTER JOIN vt0 ON ((((rt0.c4) IS TRUE)) BETWEEN ((((vt0.c1, t0.c0, t0.c0))<((rt0.c2, rt0.c1, t0.c0)))) AND (((vt0.c1)<<(vt0.c1)))) GROUP BY rt0.c3, t0.c0, rt0.c0, rt0.c4, rt0.c2 HAVING (NOT (GROUP_CONCAT(vt0.c1))) UNION ALL SELECT ALL rt0.c3, t0.c0, rt0.c0, rt0.c4, rt0.c2 FROM t0 RIGHT OUTER JOIN rt0 ON ((CAST(rt0.c0 AS BLOB)) BETWEEN (((rt0.c2)<<(rt0.c1))) AND (rt0.c2)) LEFT OUTER JOIN vt0 ON ((((rt0.c4) IS TRUE)) BETWEEN ((((vt0.c1, t0.c0, t0.c0))<((rt0.c2, rt0.c1, t0.c0)))) AND (((vt0.c1)<<(vt0.c1)))) GROUP BY rt0.c3, t0.c0, rt0.c0, rt0.c4, rt0.c2 HAVING ((GROUP_CONCAT(vt0.c1)) ISNULL);
SELECT ALL rt0.c3, t0.c0, rt0.c0, rt0.c4, rt0.c2 FROM t0 RIGHT OUTER JOIN rt0 ON ((CAST(rt0.c0 AS BLOB)) BETWEEN (((rt0.c2)<<(rt0.c1))) AND (rt0.c2)) LEFT OUTER JOIN vt0 ON ((((rt0.c4) IS TRUE)) BETWEEN ((((vt0.c1, t0.c0, t0.c0))<((rt0.c2, rt0.c1, t0.c0)))) AND (((vt0.c1)<<(vt0.c1)))) GROUP BY rt0.c3, t0.c0, rt0.c0, rt0.c4, rt0.c2;
SELECT ALL rt0.c3 FROM rt0;
SELECT rt0.c3 FROM rt0 WHERE (CAST(((rt0.c0) NOT NULL) AS NUMERIC)) UNION ALL SELECT rt0.c3 FROM rt0 WHERE ((NOT (CAST(((rt0.c0) NOT NULL) AS NUMERIC)))) UNION ALL SELECT ALL rt0.c3 FROM rt0 WHERE (((CAST(((rt0.c0) NOT NULL) AS NUMERIC)) ISNULL));
SELECT ALL rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c1, vt0.c1, rt0.c2, vt0.c0, rt0.c4, rt0.c0, t0.c0 FROM t0, rt0 RIGHT OUTER JOIN vt0 ON 0.06038123393993888;
SELECT DISTINCT rt0.c1, vt0.c1, rt0.c2, vt0.c0, rt0.c4, rt0.c0, t0.c0 FROM t0, rt0 RIGHT OUTER JOIN vt0 ON 0.06038123393993888 WHERE (TRIM(CAST(rt0.c2 AS TEXT))) UNION SELECT DISTINCT rt0.c1, vt0.c1, rt0.c2, vt0.c0, rt0.c4, rt0.c0, t0.c0 FROM t0, rt0 RIGHT OUTER JOIN vt0 ON 0.06038123393993888 WHERE ((NOT (TRIM(CAST(rt0.c2 AS TEXT))))) UNION SELECT DISTINCT rt0.c1, vt0.c1, rt0.c2, vt0.c0, rt0.c4, rt0.c0, t0.c0 FROM t0, rt0 RIGHT OUTER JOIN vt0 ON 0.06038123393993888 WHERE (((TRIM(CAST(rt0.c2 AS TEXT))) ISNULL));
SELECT DISTINCT rt0.c1, vt0.c1, rt0.c2, vt0.c0, rt0.c4, rt0.c0, t0.c0 FROM t0, rt0 RIGHT OUTER JOIN vt0 ON 0.06038123393993888;
SELECT vt0.c1, t0.c0, vt0.c0 FROM vt0 FULL OUTER JOIN t0 ON (- (t0.c0)) GROUP BY vt0.c1, t0.c0, vt0.c0;
SELECT ALL vt0.c1, t0.c0, vt0.c0 FROM vt0 FULL OUTER JOIN t0 ON (- (t0.c0)) WHERE ((((t0.c0 IN ()))==(highlight(t0.c0, vt0.c1, vt0.c1, vt0.c0)))) GROUP BY vt0.c1, t0.c0, vt0.c0 UNION SELECT vt0.c1, t0.c0, vt0.c0 FROM vt0 FULL OUTER JOIN t0 ON (- (t0.c0)) WHERE ((NOT ((((t0.c0 IN ()))==(highlight(t0.c0, vt0.c1, vt0.c1, vt0.c0)))))) GROUP BY vt0.c1, t0.c0, vt0.c0 UNION SELECT vt0.c1, t0.c0, vt0.c0 FROM vt0 FULL OUTER JOIN t0 ON (- (t0.c0)) WHERE ((((((t0.c0 IN ()))==(highlight(t0.c0, vt0.c1, vt0.c1, vt0.c0)))) ISNULL)) GROUP BY vt0.c1, t0.c0, vt0.c0;
SELECT vt0.c0, vt0.c1, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, vt0.c1, t0.c0;
SELECT vt0.c0, vt0.c1, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, vt0.c1, t0.c0 HAVING TYPEOF(DISTINCT (((MIN(vt0.c0)))<=((0x50b0c251)))) UNION ALL SELECT ALL vt0.c0, vt0.c1, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, vt0.c1, t0.c0 HAVING (NOT (TYPEOF(DISTINCT (((MIN(vt0.c0)))<=((0X50b0c251)))))) UNION ALL SELECT ALL vt0.c0, vt0.c1, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, vt0.c1, t0.c0 HAVING ((TYPEOF(DISTINCT (((MIN(vt0.c0)))<=((0x50b0c251))))) ISNULL);
SELECT vt0.c0, vt0.c1, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, vt0.c1, t0.c0;
SELECT vt0.c0, vt0.c1, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, vt0.c1, t0.c0 HAVING TYPEOF(DISTINCT (((MIN(vt0.c0)))<=((0x50b0c251)))) UNION ALL SELECT ALL vt0.c0, vt0.c1, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, vt0.c1, t0.c0 HAVING (NOT (TYPEOF(DISTINCT (((MIN(vt0.c0)))<=((0X50b0c251)))))) UNION ALL SELECT ALL vt0.c0, vt0.c1, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, vt0.c1, t0.c0 HAVING ((TYPEOF(DISTINCT (((MIN(vt0.c0)))<=((0x50b0c251))))) ISNULL);
SELECT vt0.c0, vt0.c1, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, vt0.c1, t0.c0;
SELECT ALL rt0.c2, rt0.c4, t0.c0, rt0.c3 FROM vt0 INNER JOIN rt0 ON DATETIME(CAST(rt0.c4 AS NUMERIC), rt0.c0 COLLATE NOCASE, (((rt0.c4)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1)))) RIGHT OUTER JOIN t0 ON (((((t0.c0))>((NULL)))) NOT BETWEEN (((rt0.c3)>>(rt0.c4))) AND (((rt0.c3)|(rt0.c0))));
SELECT ALL rt0.c2, rt0.c4, t0.c0, rt0.c3 FROM vt0 INNER JOIN rt0 ON DATETIME(CAST(rt0.c4 AS NUMERIC), rt0.c0 COLLATE NOCASE, (((rt0.c4)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1)))) RIGHT OUTER JOIN t0 ON (((((t0.c0))>((NULL)))) NOT BETWEEN (((rt0.c3)>>(rt0.c4))) AND (((rt0.c3)|(rt0.c0)))) WHERE ((CASE WHEN vt0.c1 THEN rt0.c0 ELSE t0.c0 END IN (0X1c1d7401))) UNION ALL SELECT rt0.c2, rt0.c4, t0.c0, rt0.c3 FROM vt0 INNER JOIN rt0 ON DATETIME(CAST(rt0.c4 AS NUMERIC), rt0.c0 COLLATE NOCASE, (((rt0.c4)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1)))) RIGHT OUTER JOIN t0 ON (((((t0.c0))>((NULL)))) NOT BETWEEN (((rt0.c3)>>(rt0.c4))) AND (((rt0.c3)|(rt0.c0)))) WHERE ((NOT ((CASE WHEN vt0.c1 THEN rt0.c0 ELSE t0.c0 END IN (0X1c1d7401))))) UNION ALL SELECT rt0.c2, rt0.c4, t0.c0, rt0.c3 FROM vt0 INNER JOIN rt0 ON DATETIME(CAST(rt0.c4 AS NUMERIC), rt0.c0 COLLATE NOCASE, (((rt0.c4)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1)))) RIGHT OUTER JOIN t0 ON (((((t0.c0))>((NULL)))) NOT BETWEEN (((rt0.c3)>>(rt0.c4))) AND (((rt0.c3)|(rt0.c0)))) WHERE ((((CASE WHEN vt0.c1 THEN rt0.c0 ELSE t0.c0 END IN (0x1c1d7401))) ISNULL));
SELECT ALL rt0.c2, rt0.c4, t0.c0, rt0.c3 FROM vt0 INNER JOIN rt0 ON DATETIME(CAST(rt0.c4 AS NUMERIC), rt0.c0 COLLATE NOCASE, (((rt0.c4)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1)))) RIGHT OUTER JOIN t0 ON (((((t0.c0))>((NULL)))) NOT BETWEEN (((rt0.c3)>>(rt0.c4))) AND (((rt0.c3)|(rt0.c0))));
SELECT DISTINCT * FROM t0, rt0, vt0;
SELECT DISTINCT * FROM t0, rt0, vt0 WHERE ((((t0.c0)LIKE(rt0.c4)) IN ())) UNION SELECT DISTINCT * FROM t0, rt0, vt0 WHERE ((NOT ((((t0.c0)LIKE(rt0.c4)) IN ())))) UNION SELECT DISTINCT * FROM t0, rt0, vt0 WHERE ((((((t0.c0)LIKE(rt0.c4)) IN ())) ISNULL));
SELECT DISTINCT * FROM t0, rt0, vt0;
SELECT rt0.c3, rt0.c2, rt0.c4, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c4, rt0.c1, rt0.c0;
SELECT rt0.c3, rt0.c2, rt0.c4, rt0.c1, rt0.c0 FROM rt0 WHERE (CHANGES()) GROUP BY rt0.c3, rt0.c2, rt0.c4, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c3, rt0.c2, rt0.c4, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (CHANGES()))) GROUP BY rt0.c3, rt0.c2, rt0.c4, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c3, rt0.c2, rt0.c4, rt0.c1, rt0.c0 FROM rt0 WHERE (((CHANGES()) ISNULL)) GROUP BY rt0.c3, rt0.c2, rt0.c4, rt0.c1, rt0.c0;
SELECT rt0.c3, rt0.c2, rt0.c4, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c4, rt0.c1, rt0.c0;
SELECT ALL vt0.c1, rt0.c1, rt0.c3, vt0.c0, rt0.c4 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c1, rt0.c3, vt0.c0, rt0.c4;
SELECT vt0.c1, rt0.c1, rt0.c3, vt0.c0, rt0.c4 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c1, rt0.c3, vt0.c0, rt0.c4 HAVING TOTAL((+ (MIN(vt0.c0)))) UNION ALL SELECT vt0.c1, rt0.c1, rt0.c3, vt0.c0, rt0.c4 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c1, rt0.c3, vt0.c0, rt0.c4 HAVING (NOT (TOTAL((+ (MIN(vt0.c0)))))) UNION ALL SELECT ALL vt0.c1, rt0.c1, rt0.c3, vt0.c0, rt0.c4 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c1, rt0.c3, vt0.c0, rt0.c4 HAVING ((TOTAL((+ (MIN(vt0.c0))))) ISNULL);
SELECT TOTAL(((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) IS TRUE)) FROM t0;
SELECT ALL t0.c0 FROM rt0, vt0, t0;
SELECT t0.c0 FROM rt0, vt0, t0 WHERE (((t0.c0)IS NOT(rt0.c0)) COLLATE BINARY) UNION ALL SELECT ALL t0.c0 FROM rt0, vt0, t0 WHERE ((NOT (((t0.c0)IS NOT(rt0.c0)) COLLATE BINARY))) UNION ALL SELECT t0.c0 FROM rt0, vt0, t0 WHERE (((((t0.c0)IS NOT(rt0.c0)) COLLATE BINARY) ISNULL));
SELECT ALL t0.c0 FROM rt0, vt0, t0;
SELECT DISTINCT t0.c0, vt0.c0, rt0.c2, vt0.c1, rt0.c1, rt0.c0 FROM rt0, vt0 NATURAL JOIN t0;
SELECT DISTINCT t0.c0, vt0.c0, rt0.c2, vt0.c1, rt0.c1, rt0.c0 FROM rt0, vt0 NATURAL JOIN t0 WHERE (TRIM(rt0.c3, ((((rt0.c3)OR(rt0.c3)))OR(rt0.c2)))) UNION SELECT DISTINCT t0.c0, vt0.c0, rt0.c2, vt0.c1, rt0.c1, rt0.c0 FROM rt0, vt0 NATURAL JOIN t0 WHERE ((NOT (TRIM(rt0.c3, ((((rt0.c3)OR(rt0.c3)))OR(rt0.c2)))))) UNION SELECT DISTINCT t0.c0, vt0.c0, rt0.c2, vt0.c1, rt0.c1, rt0.c0 FROM rt0, vt0 NATURAL JOIN t0 WHERE (((TRIM(rt0.c3, ((((rt0.c3)OR(rt0.c3)))OR(rt0.c2)))) ISNULL));
SELECT DISTINCT t0.c0, vt0.c0, rt0.c2, vt0.c1, rt0.c1, rt0.c0 FROM rt0, vt0 NATURAL JOIN t0;
SELECT rt0.c1, rt0.c4, rt0.c2, rt0.c3, vt0.c1 FROM rt0 INNER JOIN vt0 ON CAST((rt0.c3 IN ()) AS TEXT) RIGHT OUTER JOIN t0 ON (TOTAL_CHANGES() IN ()) GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c3, vt0.c1;
SELECT ALL rt0.c1, rt0.c4, rt0.c2, rt0.c3, vt0.c1 FROM rt0 INNER JOIN vt0 ON CAST((rt0.c3 IN ()) AS TEXT) RIGHT OUTER JOIN t0 ON (TOTAL_CHANGES() IN ()) WHERE (((vt0.c1 COLLATE NOCASE)>=((((rt0.c4)) NOT BETWEEN ((x'')) AND (('?q4)e')))))) GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c3, vt0.c1 UNION SELECT ALL rt0.c1, rt0.c4, rt0.c2, rt0.c3, vt0.c1 FROM rt0 INNER JOIN vt0 ON CAST((rt0.c3 IN ()) AS TEXT) RIGHT OUTER JOIN t0 ON (TOTAL_CHANGES() IN ()) WHERE ((NOT (((vt0.c1 COLLATE NOCASE)>=((((rt0.c4)) NOT BETWEEN ((x'')) AND (('?q4)e')))))))) GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c3, vt0.c1 UNION SELECT rt0.c1, rt0.c4, rt0.c2, rt0.c3, vt0.c1 FROM rt0 INNER JOIN vt0 ON CAST((rt0.c3 IN ()) AS TEXT) RIGHT OUTER JOIN t0 ON (TOTAL_CHANGES() IN ()) WHERE (((((vt0.c1 COLLATE NOCASE)>=((((rt0.c4)) NOT BETWEEN ((x'')) AND (('?q4)e')))))) ISNULL)) GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c3, vt0.c1;
SELECT rt0.c1, rt0.c4, rt0.c2, rt0.c3, vt0.c1 FROM rt0 INNER JOIN vt0 ON CAST((rt0.c3 IN ()) AS TEXT) RIGHT OUTER JOIN t0 ON (TOTAL_CHANGES() IN ()) GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c3, vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (TRIM(DISTINCT MIN(vt0.c0)) IN (COUNT(COUNT(*)), MIN(vt0.c1))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT ((TRIM(DISTINCT MIN(vt0.c0)) IN (COUNT(COUNT(*)), MIN(vt0.c1))))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (((TRIM(DISTINCT MIN(vt0.c0)) IN (COUNT(COUNT(*)), MIN(vt0.c1)))) ISNULL);
SELECT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE ((((+ (t0.c0)))AND(('-775285825' IN ())))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT ((((+ (t0.c0)))AND(('-775285825' IN ())))))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((((((+ (t0.c0)))AND(('-775285825' IN ())))) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT * FROM t0 INDEXED BY i81 FULL OUTER JOIN rt0 ON ABS(DISTINCT ((NULL)+(0X105c06c7))) FULL OUTER JOIN vt0 ON (((t0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) IN ('1819910032' COLLATE BINARY));
SELECT rt0.c0, rt0.c4, vt0.c1, rt0.c1, vt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c4, vt0.c1, rt0.c1, vt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c4, vt0.c1, rt0.c1, vt0.c0, rt0.c2 FROM vt0, rt0 WHERE (((((((rt0.c1)%(rt0.c1)))AND(CASE WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c0 END)))OR(CASE WHEN vt0.c1 THEN vt0.c1 ELSE rt0.c0 END))) GROUP BY rt0.c0, rt0.c4, vt0.c1, rt0.c1, vt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c4, vt0.c1, rt0.c1, vt0.c0, rt0.c2 FROM vt0, rt0 WHERE ((NOT (((((((rt0.c1)%(rt0.c1)))AND(CASE WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c0 END)))OR(CASE WHEN vt0.c1 THEN vt0.c1 ELSE rt0.c0 END))))) GROUP BY rt0.c0, rt0.c4, vt0.c1, rt0.c1, vt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c4, vt0.c1, rt0.c1, vt0.c0, rt0.c2 FROM vt0, rt0 WHERE (((((((((rt0.c1)%(rt0.c1)))AND(CASE WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c0 END)))OR(CASE WHEN vt0.c1 THEN vt0.c1 ELSE rt0.c0 END))) ISNULL)) GROUP BY rt0.c0, rt0.c4, vt0.c1, rt0.c1, vt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c4, vt0.c1, rt0.c1, vt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c4, vt0.c1, rt0.c1, vt0.c0, rt0.c2;
SELECT ALL t0.c0, vt0.c0 FROM rt0, vt0, t0 GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM rt0, vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING CAST(GROUP_CONCAT(rt0.c4) AS TEXT) UNION ALL SELECT t0.c0, vt0.c0 FROM rt0, vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING (NOT (CAST(GROUP_CONCAT(rt0.c4) AS TEXT))) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM rt0, vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING ((CAST(GROUP_CONCAT(rt0.c4) AS TEXT)) ISNULL);
SELECT ALL t0.c0, vt0.c0 FROM rt0, vt0, t0 GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM rt0, vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING CAST(GROUP_CONCAT(rt0.c4) AS TEXT) UNION ALL SELECT t0.c0, vt0.c0 FROM rt0, vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING (NOT (CAST(GROUP_CONCAT(rt0.c4) AS TEXT))) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM rt0, vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING ((CAST(GROUP_CONCAT(rt0.c4) AS TEXT)) ISNULL);
SELECT ALL t0.c0, vt0.c0 FROM rt0, vt0, t0 GROUP BY t0.c0, vt0.c0;
SELECT * FROM t0 LEFT OUTER JOIN rt0 ON CASE rt0.c0  WHEN CASE WHEN t0.c0 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c3 ELSE t0.c0 END THEN rt0.c0 WHEN CASE rt0.c1  WHEN t0.c0 THEN rt0.c3 ELSE rt0.c3 END THEN ((rt0.c0)LIKE(NULL)) WHEN ((0.6660500058830604)!=(t0.c0)) THEN ((rt0.c3)<=(rt0.c3)) ELSE (t0.c0 IN ()) END;
SELECT ALL * FROM t0 LEFT OUTER JOIN rt0 ON CASE rt0.c0  WHEN CASE WHEN t0.c0 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c3 ELSE t0.c0 END THEN rt0.c0 WHEN CASE rt0.c1  WHEN t0.c0 THEN rt0.c3 ELSE rt0.c3 END THEN ((rt0.c0)LIKE(NULL)) WHEN ((0.6660500058830604)!=(t0.c0)) THEN ((rt0.c3)<=(rt0.c3)) ELSE (t0.c0 IN ()) END WHERE ((((((NULL) NOT NULL)))<=((CAST(rt0.c0 AS NUMERIC))))) UNION ALL SELECT * FROM t0 LEFT OUTER JOIN rt0 ON CASE rt0.c0  WHEN CASE WHEN t0.c0 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c3 ELSE t0.c0 END THEN rt0.c0 WHEN CASE rt0.c1  WHEN t0.c0 THEN rt0.c3 ELSE rt0.c3 END THEN ((rt0.c0)LIKE(NULL)) WHEN ((0.6660500058830604)!=(t0.c0)) THEN ((rt0.c3)<=(rt0.c3)) ELSE (t0.c0 IN ()) END WHERE ((NOT ((((((NULL) NOT NULL)))<=((CAST(rt0.c0 AS NUMERIC))))))) UNION ALL SELECT ALL * FROM t0 LEFT OUTER JOIN rt0 ON CASE rt0.c0  WHEN CASE WHEN t0.c0 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c3 ELSE t0.c0 END THEN rt0.c0 WHEN CASE rt0.c1  WHEN t0.c0 THEN rt0.c3 ELSE rt0.c3 END THEN ((rt0.c0)LIKE(NULL)) WHEN ((0.6660500058830604)<>(t0.c0)) THEN ((rt0.c3)<=(rt0.c3)) ELSE (t0.c0 IN ()) END WHERE ((((((((NULL) NOT NULL)))<=((CAST(rt0.c0 AS NUMERIC))))) ISNULL));
SELECT * FROM t0 LEFT OUTER JOIN rt0 ON CASE rt0.c0  WHEN CASE WHEN t0.c0 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c3 ELSE t0.c0 END THEN rt0.c0 WHEN CASE rt0.c1  WHEN t0.c0 THEN rt0.c3 ELSE rt0.c3 END THEN ((rt0.c0)LIKE(NULL)) WHEN ((0.6660500058830604)!=(t0.c0)) THEN ((rt0.c3)<=(rt0.c3)) ELSE (t0.c0 IN ()) END;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (UPPER((((rt0.c1, rt0.c1, rt0.c0))=((rt0.c2, vt0.c1, rt0.c4))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (UPPER((((rt0.c1, rt0.c1, rt0.c0))=((rt0.c2, vt0.c1, rt0.c4))))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((UPPER((((rt0.c1, rt0.c1, rt0.c0))==((rt0.c2, vt0.c1, rt0.c4))))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, rt0 WHERE (rt0.c0) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, rt0 WHERE ((NOT (rt0.c0))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, rt0 WHERE (((rt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (+ (SUM(TOTAL(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((+ (SUM(TOTAL(vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((+ (SUM(TOTAL(vt0.c0))))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((('~㌿*,Ej4 '))==((CASE WHEN vt0.c0 THEN vt0.c1 WHEN 0.7936899330760236 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 0.7451723311036759 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END)))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((('~㌿*,Ej4 '))=((CASE WHEN vt0.c0 THEN vt0.c1 WHEN 0.7936899330760236 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 0.7451723311036759 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END)))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((('~㌿*,Ej4 '))==((CASE WHEN vt0.c0 THEN vt0.c1 WHEN 0.7936899330760236 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 0.7451723311036759 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END)))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT ((NOT (((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0))))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((((NOT (((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0))))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((0.7404589515215217)) AND ((TRIM(DISTINCT vt0.c0))))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE ((NOT ((((vt0.c0)) BETWEEN ((0.7404589515215217)) AND ((TRIM(DISTINCT vt0.c0))))))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((0.7404589515215217)) AND ((TRIM(DISTINCT vt0.c0))))) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT t0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM t0 RIGHT OUTER JOIN rt0 ON (((((rt0.c4)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))) NOT BETWEEN ((('0.5997734960782509')>(rt0.c2))) AND ((((rt0.c2, rt0.c4, t0.c0)) BETWEEN ((rt0.c0, t0.c0, t0.c0)) AND ((rt0.c4, rt0.c1, rt0.c2))))) GROUP BY t0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c3;
SELECT ALL t0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM t0 RIGHT OUTER JOIN rt0 ON (((((rt0.c4)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))) NOT BETWEEN ((('0.5997734960782509')>(rt0.c2))) AND ((((rt0.c2, rt0.c4, t0.c0)) BETWEEN ((rt0.c0, t0.c0, t0.c0)) AND ((rt0.c4, rt0.c1, rt0.c2))))) GROUP BY t0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c3 HAVING MAX(((((rt0.c0)OR(MAX(AVG(GROUP_CONCAT(MIN(SUM(rt0.c2))))))))AND(COUNT(*)))) UNION ALL SELECT ALL t0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM t0 RIGHT OUTER JOIN rt0 ON (((((rt0.c4)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))) NOT BETWEEN ((('0.5997734960782509')>(rt0.c2))) AND ((((rt0.c2, rt0.c4, t0.c0)) BETWEEN ((rt0.c0, t0.c0, t0.c0)) AND ((rt0.c4, rt0.c1, rt0.c2))))) GROUP BY t0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c3 HAVING (NOT (MAX(((((rt0.c0)OR(MAX(AVG(GROUP_CONCAT(MIN(SUM(rt0.c2))))))))AND(COUNT(*)))))) UNION ALL SELECT ALL t0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM t0 RIGHT OUTER JOIN rt0 ON (((((rt0.c4)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))) NOT BETWEEN ((('0.5997734960782509')>(rt0.c2))) AND ((((rt0.c2, rt0.c4, t0.c0)) BETWEEN ((rt0.c0, t0.c0, t0.c0)) AND ((rt0.c4, rt0.c1, rt0.c2))))) GROUP BY t0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c3 HAVING ((MAX(((((rt0.c0)OR(MAX(AVG(GROUP_CONCAT(MIN(SUM(rt0.c2))))))))AND(COUNT(*))))) ISNULL);
SELECT rt0.c4, rt0.c1, rt0.c2, vt0.c0, rt0.c0, vt0.c1, rt0.c3 FROM vt0, rt0;
SELECT rt0.c4, rt0.c1, rt0.c2, vt0.c0, rt0.c0, vt0.c1, rt0.c3 FROM vt0, rt0 WHERE (0X4dedc184) UNION ALL SELECT ALL rt0.c4, rt0.c1, rt0.c2, vt0.c0, rt0.c0, vt0.c1, rt0.c3 FROM vt0, rt0 WHERE ((NOT (0x4dedc184))) UNION ALL SELECT ALL rt0.c4, rt0.c1, rt0.c2, vt0.c0, rt0.c0, vt0.c1, rt0.c3 FROM vt0, rt0 WHERE (((0X4dedc184) ISNULL));
SELECT rt0.c4, rt0.c1, rt0.c2, vt0.c0, rt0.c0, vt0.c1, rt0.c3 FROM vt0, rt0;
SELECT DISTINCT vt0.c1, vt0.c0, t0.c0 FROM vt0, t0;
SELECT DISTINCT vt0.c1, vt0.c0, t0.c0 FROM vt0, t0 WHERE (((1011175051 COLLATE RTRIM)>=(CASE WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c1 WHEN vt0.c0 THEN '1334274746' ELSE NULL END))) UNION SELECT DISTINCT vt0.c1, vt0.c0, t0.c0 FROM vt0, t0 WHERE ((NOT (((1011175051 COLLATE RTRIM)>=(CASE WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c1 WHEN vt0.c0 THEN '1334274746' ELSE NULL END))))) UNION SELECT DISTINCT vt0.c1, vt0.c0, t0.c0 FROM vt0, t0 WHERE (((((1011175051 COLLATE RTRIM)>=(CASE WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c1 WHEN vt0.c0 THEN '1334274746' ELSE NULL END))) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0, t0.c0 FROM vt0, t0;
SELECT vt0.c1, rt0.c2, rt0.c4, t0.c0, vt0.c0 FROM t0 CROSS JOIN rt0 ON CASE rt0.c1  WHEN CASE rt0.c4  WHEN vt0.c1 THEN rt0.c4 ELSE rt0.c1 END THEN (NOT (rt0.c4)) ELSE CASE WHEN vt0.c0 THEN rt0.c4 END END FULL OUTER JOIN vt0 ON (((rt0.c4 COLLATE NOCASE))=((CAST(vt0.c0 AS INTEGER)))) GROUP BY vt0.c1, rt0.c2, rt0.c4, t0.c0, vt0.c0;
SELECT ALL rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3;
SELECT ALL rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3 HAVING TOTAL(((((MAX(COUNT(*)))AND(AVG(rt0.c3))))AND(GROUP_CONCAT(MAX(rt0.c0))))) UNION ALL SELECT ALL rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3 HAVING (NOT (TOTAL(((((MAX(COUNT(*)))AND(AVG(rt0.c3))))AND(GROUP_CONCAT(MAX(rt0.c0))))))) UNION ALL SELECT ALL rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3 HAVING ((TOTAL(((((MAX(COUNT(*)))AND(AVG(rt0.c3))))AND(GROUP_CONCAT(MAX(rt0.c0)))))) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (((vt0.c0)>((~ (vt0.c1))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((vt0.c0)>((~ (vt0.c1))))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((vt0.c0)>((~ (vt0.c1))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((((vt0.c1)) BETWEEN (((- (vt0.c1)))) AND ((((vt0.c1) NOT NULL))))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((NOT ((((vt0.c1)) BETWEEN (((- (vt0.c1)))) AND ((((vt0.c1) NOT NULL))))))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((((((vt0.c1)) BETWEEN (((- (vt0.c1)))) AND ((((vt0.c1) NOT NULL))))) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT ALL vt0.c0, rt0.c0, rt0.c2, rt0.c3, rt0.c1 FROM t0, vt0, rt0 GROUP BY vt0.c0, rt0.c0, rt0.c2, rt0.c3, rt0.c1;
SELECT ALL vt0.c0, rt0.c0, rt0.c2, rt0.c3, rt0.c1 FROM t0, vt0, rt0 WHERE (rt0.c1 COLLATE RTRIM) GROUP BY vt0.c0, rt0.c0, rt0.c2, rt0.c3, rt0.c1 UNION SELECT vt0.c0, rt0.c0, rt0.c2, rt0.c3, rt0.c1 FROM t0, vt0, rt0 WHERE ((NOT (rt0.c1 COLLATE RTRIM))) GROUP BY vt0.c0, rt0.c0, rt0.c2, rt0.c3, rt0.c1 UNION SELECT ALL vt0.c0, rt0.c0, rt0.c2, rt0.c3, rt0.c1 FROM t0, vt0, rt0 WHERE (((rt0.c1 COLLATE RTRIM) ISNULL)) GROUP BY vt0.c0, rt0.c0, rt0.c2, rt0.c3, rt0.c1;
SELECT ALL vt0.c0, rt0.c0, rt0.c2, rt0.c3, rt0.c1 FROM t0, vt0, rt0 GROUP BY vt0.c0, rt0.c0, rt0.c2, rt0.c3, rt0.c1;
SELECT ALL rt0.c3, vt0.c0, rt0.c2, rt0.c1 FROM vt0 CROSS JOIN rt0 ON CAST(CAST(vt0.c0 AS NUMERIC) AS BLOB) GROUP BY rt0.c3, vt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c3, vt0.c0, rt0.c2, rt0.c1 FROM vt0 CROSS JOIN rt0 ON CAST(CAST(vt0.c0 AS NUMERIC) AS BLOB) GROUP BY rt0.c3, vt0.c0, rt0.c2, rt0.c1 HAVING TOTAL(CAST('H쬧f{DTPj' AS REAL)) UNION ALL SELECT rt0.c3, vt0.c0, rt0.c2, rt0.c1 FROM vt0 CROSS JOIN rt0 ON CAST(CAST(vt0.c0 AS NUMERIC) AS BLOB) GROUP BY rt0.c3, vt0.c0, rt0.c2, rt0.c1 HAVING (NOT (TOTAL(CAST('H쬧f{DTPj' AS REAL)))) UNION ALL SELECT rt0.c3, vt0.c0, rt0.c2, rt0.c1 FROM vt0 CROSS JOIN rt0 ON CAST(CAST(vt0.c0 AS NUMERIC) AS BLOB) GROUP BY rt0.c3, vt0.c0, rt0.c2, rt0.c1 HAVING ((TOTAL(CAST('H쬧f{DTPj' AS REAL))) ISNULL);
SELECT ALL rt0.c3, vt0.c0, rt0.c2, rt0.c1 FROM vt0 CROSS JOIN rt0 ON CAST(CAST(vt0.c0 AS NUMERIC) AS BLOB) GROUP BY rt0.c3, vt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c3, vt0.c0, rt0.c2, rt0.c1 FROM vt0 CROSS JOIN rt0 ON CAST(CAST(vt0.c0 AS NUMERIC) AS BLOB) GROUP BY rt0.c3, vt0.c0, rt0.c2, rt0.c1 HAVING TOTAL(CAST('H쬧f{DTPj' AS REAL)) UNION ALL SELECT rt0.c3, vt0.c0, rt0.c2, rt0.c1 FROM vt0 CROSS JOIN rt0 ON CAST(CAST(vt0.c0 AS NUMERIC) AS BLOB) GROUP BY rt0.c3, vt0.c0, rt0.c2, rt0.c1 HAVING (NOT (TOTAL(CAST('H쬧f{DTPj' AS REAL)))) UNION ALL SELECT rt0.c3, vt0.c0, rt0.c2, rt0.c1 FROM vt0 CROSS JOIN rt0 ON CAST(CAST(vt0.c0 AS NUMERIC) AS BLOB) GROUP BY rt0.c3, vt0.c0, rt0.c2, rt0.c1 HAVING ((TOTAL(CAST('H쬧f{DTPj' AS REAL))) ISNULL);
SELECT ALL rt0.c3, vt0.c0, rt0.c2, rt0.c1 FROM vt0 CROSS JOIN rt0 ON CAST(CAST(vt0.c0 AS NUMERIC) AS BLOB) GROUP BY rt0.c3, vt0.c0, rt0.c2, rt0.c1;
SELECT ALL vt0.c1 FROM vt0;
SELECT vt0.c1 FROM vt0 WHERE (CAST(x'd1a3' AS BLOB)) ORDER BY ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))>((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)))  NULLS LAST;
SELECT ALL vt0.c1 FROM vt0 WHERE ((NOT (CAST(x'd1a3' AS BLOB)))) ORDER BY ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))>((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)))  NULLS LAST;
SELECT ALL vt0.c1 FROM vt0 WHERE (((CAST(x'd1a3' AS BLOB)) ISNULL)) ORDER BY ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))>((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)))  NULLS LAST;
SELECT ALL vt0.c1 FROM vt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (TYPEOF(((t0.c0)>(t0.c0)))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (TYPEOF(((t0.c0)>(t0.c0)))))) UNION SELECT DISTINCT * FROM t0 WHERE (((TYPEOF(((t0.c0)>(t0.c0)))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((((t0.c0)&(t0.c0))) BETWEEN (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) AND (t0.c0))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((((t0.c0)&(t0.c0))) BETWEEN (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) AND (t0.c0))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((((((t0.c0)&(t0.c0))) BETWEEN (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) AND (t0.c0))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*))||(((((t0.c0)OR(TOTAL(t0.c0))))OR(t0.c0)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((COUNT(*))||(((((t0.c0)OR(TOTAL(t0.c0))))OR(t0.c0)))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((COUNT(*))||(((((t0.c0)OR(TOTAL(t0.c0))))OR(t0.c0))))) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*))||(((((t0.c0)OR(TOTAL(t0.c0))))OR(t0.c0)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((COUNT(*))||(((((t0.c0)OR(TOTAL(t0.c0))))OR(t0.c0)))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((COUNT(*))||(((((t0.c0)OR(TOTAL(t0.c0))))OR(t0.c0))))) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT * FROM rt0 NOT INDEXED LEFT OUTER JOIN t0 ON ((GLOB(vt0.c0, vt0.c1)) BETWEEN (vt0.c0) AND ((~ (rt0.c3)))) INNER JOIN vt0 ON ((((rt0.c1) BETWEEN (t0.c0) AND (vt0.c0)))GLOB(HEX(rt0.c4)));
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN rt0 ON CASE ((rt0.c3) NOT NULL)  WHEN ((((rt0.c3)AND(vt0.c1)))OR(rt0.c1)) THEN t0.c0 COLLATE RTRIM END RIGHT OUTER JOIN vt0 ON rt0.c3;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 WHERE ((((vt0.c0)LIKE(vt0.c0)) IN (LOWER(vt0.c0)))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE ((NOT ((((vt0.c0)LIKE(vt0.c0)) IN (LOWER(vt0.c0)))))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE ((((((vt0.c0)LIKE(vt0.c0)) IN (LOWER(vt0.c0)))) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT t0.c0, rt0.c2, vt0.c1, rt0.c0, rt0.c3, vt0.c0, rt0.c1, rt0.c4 FROM t0, vt0 CROSS JOIN rt0 ON UNLIKELY(x'0d6101d5') GROUP BY t0.c0, rt0.c2, vt0.c1, rt0.c0, rt0.c3, vt0.c0, rt0.c1, rt0.c4;
SELECT ALL t0.c0, rt0.c2, vt0.c1, rt0.c0, rt0.c3, vt0.c0, rt0.c1, rt0.c4 FROM t0, vt0 CROSS JOIN rt0 ON UNLIKELY(x'0d6101d5') GROUP BY t0.c0, rt0.c2, vt0.c1, rt0.c0, rt0.c3, vt0.c0, rt0.c1, rt0.c4 HAVING ((COUNT(*))/((('3O') BETWEEN (vt0.c0) AND (rt0.c3)))) UNION ALL SELECT t0.c0, rt0.c2, vt0.c1, rt0.c0, rt0.c3, vt0.c0, rt0.c1, rt0.c4 FROM t0, vt0 CROSS JOIN rt0 ON UNLIKELY(x'0d6101d5') GROUP BY t0.c0, rt0.c2, vt0.c1, rt0.c0, rt0.c3, vt0.c0, rt0.c1, rt0.c4 HAVING (NOT (((COUNT(*))/((('3O') BETWEEN (vt0.c0) AND (rt0.c3)))))) UNION ALL SELECT ALL t0.c0, rt0.c2, vt0.c1, rt0.c0, rt0.c3, vt0.c0, rt0.c1, rt0.c4 FROM t0, vt0 CROSS JOIN rt0 ON UNLIKELY(x'0d6101d5') GROUP BY t0.c0, rt0.c2, vt0.c1, rt0.c0, rt0.c3, vt0.c0, rt0.c1, rt0.c4 HAVING ((((COUNT(*))/((('3O') BETWEEN (vt0.c0) AND (rt0.c3))))) ISNULL);
SELECT t0.c0, rt0.c2, vt0.c1, rt0.c0, rt0.c3, vt0.c0, rt0.c1, rt0.c4 FROM t0, vt0 CROSS JOIN rt0 ON UNLIKELY(x'0d6101d5') GROUP BY t0.c0, rt0.c2, vt0.c1, rt0.c0, rt0.c3, vt0.c0, rt0.c1, rt0.c4;
SELECT ALL t0.c0, rt0.c2, vt0.c1, rt0.c0, rt0.c3, vt0.c0, rt0.c1, rt0.c4 FROM t0, vt0 CROSS JOIN rt0 ON UNLIKELY(x'0d6101d5') GROUP BY t0.c0, rt0.c2, vt0.c1, rt0.c0, rt0.c3, vt0.c0, rt0.c1, rt0.c4 HAVING ((COUNT(*))/((('3O') BETWEEN (vt0.c0) AND (rt0.c3)))) UNION ALL SELECT t0.c0, rt0.c2, vt0.c1, rt0.c0, rt0.c3, vt0.c0, rt0.c1, rt0.c4 FROM t0, vt0 CROSS JOIN rt0 ON UNLIKELY(x'0d6101d5') GROUP BY t0.c0, rt0.c2, vt0.c1, rt0.c0, rt0.c3, vt0.c0, rt0.c1, rt0.c4 HAVING (NOT (((COUNT(*))/((('3O') BETWEEN (vt0.c0) AND (rt0.c3)))))) UNION ALL SELECT ALL t0.c0, rt0.c2, vt0.c1, rt0.c0, rt0.c3, vt0.c0, rt0.c1, rt0.c4 FROM t0, vt0 CROSS JOIN rt0 ON UNLIKELY(x'0d6101d5') GROUP BY t0.c0, rt0.c2, vt0.c1, rt0.c0, rt0.c3, vt0.c0, rt0.c1, rt0.c4 HAVING ((((COUNT(*))/((('3O') BETWEEN (vt0.c0) AND (rt0.c3))))) ISNULL);
SELECT t0.c0, rt0.c2, vt0.c1, rt0.c0, rt0.c3, vt0.c0, rt0.c1, rt0.c4 FROM t0, vt0 CROSS JOIN rt0 ON UNLIKELY(x'0d6101d5') GROUP BY t0.c0, rt0.c2, vt0.c1, rt0.c0, rt0.c3, vt0.c0, rt0.c1, rt0.c4;
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON ((((NULL)AND((NOT (t0.c0)))))OR((+ (rt0.c4)))) FULL OUTER JOIN t0 ON rt0.c2;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2, rt0.c3 FROM rt0, t0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2, rt0.c3 FROM rt0, t0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c2) AND (t0.c0)))||(((((rt0.c2)OR(t0.c0)))AND(rt0.c4))))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2, rt0.c3 FROM rt0, t0 WHERE ((NOT (((((rt0.c0) NOT BETWEEN (rt0.c2) AND (t0.c0)))||(((((rt0.c2)OR(t0.c0)))AND(rt0.c4))))))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2, rt0.c3 FROM rt0, t0 WHERE (((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (t0.c0)))||(((((rt0.c2)OR(t0.c0)))AND(rt0.c4))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2, rt0.c3 FROM rt0, t0;
SELECT rt0.c4, rt0.c3, vt0.c0, rt0.c1, rt0.c2, rt0.c0 FROM vt0, t0, rt0 GROUP BY rt0.c4, rt0.c3, vt0.c0, rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c4, rt0.c3, vt0.c0, rt0.c1, rt0.c2, rt0.c0 FROM vt0, t0, rt0 WHERE ((((rt0.c0) ISNULL) IN (((t0.c0)IS NOT(rt0.c2))))) GROUP BY rt0.c4, rt0.c3, vt0.c0, rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c4, rt0.c3, vt0.c0, rt0.c1, rt0.c2, rt0.c0 FROM vt0, t0, rt0 WHERE ((NOT ((((rt0.c0) ISNULL) IN (((t0.c0)IS NOT(rt0.c2))))))) GROUP BY rt0.c4, rt0.c3, vt0.c0, rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c4, rt0.c3, vt0.c0, rt0.c1, rt0.c2, rt0.c0 FROM vt0, t0, rt0 WHERE ((((((rt0.c0) ISNULL) IN (((t0.c0)IS NOT(rt0.c2))))) ISNULL)) GROUP BY rt0.c4, rt0.c3, vt0.c0, rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c4, rt0.c3, vt0.c0, rt0.c1, rt0.c2, rt0.c0 FROM vt0, t0, rt0 GROUP BY rt0.c4, rt0.c3, vt0.c0, rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, t0.c0, rt0.c0, vt0.c0, rt0.c3, vt0.c1, rt0.c4 FROM t0, vt0, rt0 GROUP BY rt0.c1, rt0.c2, t0.c0, rt0.c0, vt0.c0, rt0.c3, vt0.c1, rt0.c4;
SELECT rt0.c1, rt0.c2, t0.c0, rt0.c0, vt0.c0, rt0.c3, vt0.c1, rt0.c4 FROM t0, vt0, rt0 GROUP BY rt0.c1, rt0.c2, t0.c0, rt0.c0, vt0.c0, rt0.c3, vt0.c1, rt0.c4 HAVING MAX(CAST(vt0.c1 AS REAL)) UNION ALL SELECT rt0.c1, rt0.c2, t0.c0, rt0.c0, vt0.c0, rt0.c3, vt0.c1, rt0.c4 FROM t0, vt0, rt0 GROUP BY rt0.c1, rt0.c2, t0.c0, rt0.c0, vt0.c0, rt0.c3, vt0.c1, rt0.c4 HAVING (NOT (MAX(CAST(vt0.c1 AS REAL)))) UNION ALL SELECT ALL rt0.c1, rt0.c2, t0.c0, rt0.c0, vt0.c0, rt0.c3, vt0.c1, rt0.c4 FROM t0, vt0, rt0 GROUP BY rt0.c1, rt0.c2, t0.c0, rt0.c0, vt0.c0, rt0.c3, vt0.c1, rt0.c4 HAVING ((MAX(CAST(vt0.c1 AS REAL))) ISNULL);
SELECT ALL rt0.c1, rt0.c2, t0.c0, rt0.c0, vt0.c0, rt0.c3, vt0.c1, rt0.c4 FROM t0, vt0, rt0 GROUP BY rt0.c1, rt0.c2, t0.c0, rt0.c0, vt0.c0, rt0.c3, vt0.c1, rt0.c4;
SELECT rt0.c1, rt0.c2, t0.c0, rt0.c0, vt0.c0, rt0.c3, vt0.c1, rt0.c4 FROM t0, vt0, rt0 GROUP BY rt0.c1, rt0.c2, t0.c0, rt0.c0, vt0.c0, rt0.c3, vt0.c1, rt0.c4 HAVING MAX(CAST(vt0.c1 AS REAL)) UNION ALL SELECT rt0.c1, rt0.c2, t0.c0, rt0.c0, vt0.c0, rt0.c3, vt0.c1, rt0.c4 FROM t0, vt0, rt0 GROUP BY rt0.c1, rt0.c2, t0.c0, rt0.c0, vt0.c0, rt0.c3, vt0.c1, rt0.c4 HAVING (NOT (MAX(CAST(vt0.c1 AS REAL)))) UNION ALL SELECT ALL rt0.c1, rt0.c2, t0.c0, rt0.c0, vt0.c0, rt0.c3, vt0.c1, rt0.c4 FROM t0, vt0, rt0 GROUP BY rt0.c1, rt0.c2, t0.c0, rt0.c0, vt0.c0, rt0.c3, vt0.c1, rt0.c4 HAVING ((MAX(CAST(vt0.c1 AS REAL))) ISNULL);
SELECT ALL rt0.c1, rt0.c2, t0.c0, rt0.c0, vt0.c0, rt0.c3, vt0.c1, rt0.c4 FROM t0, vt0, rt0 GROUP BY rt0.c1, rt0.c2, t0.c0, rt0.c0, vt0.c0, rt0.c3, vt0.c1, rt0.c4;
SELECT rt0.c3, rt0.c4, rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c3, rt0.c4, rt0.c0, rt0.c2 FROM rt0 WHERE (903011003) UNION ALL SELECT ALL rt0.c3, rt0.c4, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (903011003))) UNION ALL SELECT rt0.c3, rt0.c4, rt0.c0, rt0.c2 FROM rt0 WHERE (((903011003) ISNULL));
SELECT rt0.c3, rt0.c4, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c3)))<=((((rt0.c2, rt0.c1, rt0.c2))<=((rt0.c1, rt0.c2, rt0.c0)))))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c3)))<=((((rt0.c2, rt0.c1, rt0.c2))<=((rt0.c1, rt0.c2, rt0.c0)))))))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE (((((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c3)))<=((((rt0.c2, rt0.c1, rt0.c2))<=((rt0.c1, rt0.c2, rt0.c0)))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT vt0.c0 FROM t0 CROSS JOIN vt0 ON (NOT ((~ (t0.c0)))) GROUP BY vt0.c0;
SELECT vt0.c0 FROM t0 CROSS JOIN vt0 ON (NOT ((~ (t0.c0)))) WHERE ((+ (vt0.c1))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM t0 CROSS JOIN vt0 ON (NOT ((~ (t0.c0)))) WHERE ((NOT ((+ (vt0.c1))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM t0 CROSS JOIN vt0 ON (NOT ((~ (t0.c0)))) WHERE ((((+ (vt0.c1))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM t0 CROSS JOIN vt0 ON (NOT ((~ (t0.c0)))) GROUP BY vt0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING x'' UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (x'')) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((x'') ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING x'' UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (x'')) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((x'') ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (CASE WHEN ((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c3)) THEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c0 END END) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (CASE WHEN ((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c3)) THEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c0 END END))) UNION ALL SELECT * FROM rt0 WHERE (((CASE WHEN ((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c3)) THEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c0 END END) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM t0, rt0, vt0;
SELECT DISTINCT * FROM t0, rt0, vt0 WHERE ((((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END))<=(((((t0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c4))))))) UNION SELECT DISTINCT * FROM t0, rt0, vt0 WHERE ((NOT ((((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END))<=(((((t0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c4))))))))) UNION SELECT DISTINCT * FROM t0, rt0, vt0 WHERE ((((((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END))<=(((((t0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c4))))))) ISNULL));
SELECT DISTINCT * FROM t0, rt0, vt0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ((((t0.c0) IS TRUE) IN (((t0.c0)%(t0.c0))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((((t0.c0) IS TRUE) IN (((t0.c0)%(t0.c0))))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((((((t0.c0) IS TRUE) IN (((t0.c0)%(t0.c0))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL vt0.c1, rt0.c2, rt0.c0, rt0.c4, rt0.c3 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c2, rt0.c0, rt0.c4, rt0.c3;
SELECT ALL vt0.c1, rt0.c2, rt0.c0, rt0.c4, rt0.c3 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c2, rt0.c0, rt0.c4, rt0.c3 HAVING ((((GROUP_CONCAT(SUM(COUNT(vt0.c0))))AND(SUM(rt0.c1))))AND(AVG(rt0.c4))) UNION ALL SELECT ALL vt0.c1, rt0.c2, rt0.c0, rt0.c4, rt0.c3 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c2, rt0.c0, rt0.c4, rt0.c3 HAVING (NOT (((((GROUP_CONCAT(SUM(COUNT(vt0.c0))))AND(SUM(rt0.c1))))AND(AVG(rt0.c4))))) UNION ALL SELECT vt0.c1, rt0.c2, rt0.c0, rt0.c4, rt0.c3 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c2, rt0.c0, rt0.c4, rt0.c3 HAVING ((((((GROUP_CONCAT(SUM(COUNT(vt0.c0))))AND(SUM(rt0.c1))))AND(AVG(rt0.c4)))) ISNULL);
SELECT ALL vt0.c1, vt0.c0 FROM vt0 LEFT OUTER JOIN t0 ON ((TIME(vt0.c0, vt0.c1, vt0.c1))|(vt0.c1 COLLATE NOCASE));
SELECT ALL vt0.c1, vt0.c0 FROM vt0 LEFT OUTER JOIN t0 ON ((TIME(vt0.c0, vt0.c1, vt0.c1))|(vt0.c1 COLLATE NOCASE)) WHERE (CAST(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) AS INTEGER)) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 LEFT OUTER JOIN t0 ON ((TIME(vt0.c0, vt0.c1, vt0.c1))|(vt0.c1 COLLATE NOCASE)) WHERE ((NOT (CAST(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) AS INTEGER)))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 LEFT OUTER JOIN t0 ON ((TIME(vt0.c0, vt0.c1, vt0.c1))|(vt0.c1 COLLATE NOCASE)) WHERE (((CAST(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) AS INTEGER)) ISNULL));
SELECT ALL vt0.c1, vt0.c0 FROM vt0 LEFT OUTER JOIN t0 ON ((TIME(vt0.c0, vt0.c1, vt0.c1))|(vt0.c1 COLLATE NOCASE));
SELECT DISTINCT rt0.c2, rt0.c0, vt0.c0, rt0.c1, rt0.c4, rt0.c3 FROM vt0, rt0;
SELECT DISTINCT rt0.c2, rt0.c0, vt0.c0, rt0.c1, rt0.c4, rt0.c3 FROM vt0, rt0 WHERE (rt0.c2) UNION SELECT DISTINCT rt0.c2, rt0.c0, vt0.c0, rt0.c1, rt0.c4, rt0.c3 FROM vt0, rt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT rt0.c2, rt0.c0, vt0.c0, rt0.c1, rt0.c4, rt0.c3 FROM vt0, rt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, vt0.c0, rt0.c1, rt0.c4, rt0.c3 FROM vt0, rt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE ('' COLLATE NOCASE) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT ('' COLLATE NOCASE))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((('' COLLATE NOCASE) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT t0.c0 FROM t0 NOT INDEXED GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING t0.c0 UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (t0.c0)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((t0.c0) ISNULL);
SELECT t0.c0 FROM t0 NOT INDEXED GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING t0.c0 UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (t0.c0)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((t0.c0) ISNULL);
SELECT t0.c0 FROM t0 NOT INDEXED GROUP BY t0.c0;
SELECT ALL t0.c0, vt0.c1, rt0.c0, rt0.c3, vt0.c0, rt0.c4, rt0.c2, rt0.c1 FROM t0, vt0, rt0;
SELECT t0.c0, vt0.c1, rt0.c0, rt0.c3, vt0.c0, rt0.c4, rt0.c2, rt0.c1 FROM t0, vt0, rt0 WHERE (CAST(CASE WHEN rt0.c4 THEN rt0.c2 END AS TEXT)) UNION ALL SELECT t0.c0, vt0.c1, rt0.c0, rt0.c3, vt0.c0, rt0.c4, rt0.c2, rt0.c1 FROM t0, vt0, rt0 WHERE ((NOT (CAST(CASE WHEN rt0.c4 THEN rt0.c2 END AS TEXT)))) UNION ALL SELECT ALL t0.c0, vt0.c1, rt0.c0, rt0.c3, vt0.c0, rt0.c4, rt0.c2, rt0.c1 FROM t0, vt0, rt0 WHERE (((CAST(CASE WHEN rt0.c4 THEN rt0.c2 END AS TEXT)) ISNULL));
SELECT ALL t0.c0, vt0.c1, rt0.c0, rt0.c3, vt0.c0, rt0.c4, rt0.c2, rt0.c1 FROM t0, vt0, rt0;
SELECT DISTINCT rt0.c1, rt0.c3, vt0.c0, rt0.c0 FROM rt0, vt0 RIGHT OUTER JOIN t0 ON json_object(((rt0.c4) IS FALSE), (((rt0.c4)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))), (rt0.c1 IN ()), ((rt0.c2)>>(rt0.c2)));
SELECT rt0.c4, rt0.c0 FROM vt0 FULL OUTER JOIN t0 ON ((((((((((rt0.c4) BETWEEN (rt0.c3) AND (vt0.c0)))OR(x'e012' COLLATE RTRIM)))OR((- (rt0.c4)))))OR(((vt0.c1) IS TRUE))))OR(((rt0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c4)))) LEFT OUTER JOIN rt0 ON (~ (LIKELY(DISTINCT 0.9695790395914301))) GROUP BY rt0.c4, rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (IFNULL(DISTINCT MIN(COUNT(rt0.c4)), MIN(0.0684462022830512)) IN (CAST(SUM(rt0.c2) AS TEXT))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT ((IFNULL(DISTINCT MIN(COUNT(rt0.c4)), MIN(0.0684462022830512)) IN (CAST(SUM(rt0.c2) AS TEXT))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (((IFNULL(DISTINCT MIN(COUNT(rt0.c4)), MIN(0.0684462022830512)) IN (CAST(SUM(rt0.c2) AS TEXT)))) ISNULL);
SELECT MAX(x'da4c') FROM rt0, vt0 ORDER BY (((rt0.c2, '', rt0.c3, rt0.c1, vt0.c1)) NOT BETWEEN ((LIKE(rt0.c4, rt0.c2), CAST(rt0.c2 AS REAL), ((vt0.c1)<=('')), CASE rt0.c1  WHEN rt0.c0 THEN rt0.c3 ELSE vt0.c0 END, CASE vt0.c0  WHEN rt0.c1 THEN vt0.c1 ELSE rt0.c3 END)) AND ((CAST(NULL AS BLOB), rt0.c0, CAST(rt0.c4 AS TEXT), (((rt0.c4, vt0.c0, vt0.c0, rt0.c2, rt0.c2)) BETWEEN ((rt0.c1, rt0.c2, vt0.c0, rt0.c1, rt0.c2)) AND ((0.5128899865493294, rt0.c3, rt0.c4, rt0.c4, rt0.c4))), CAST(rt0.c0 AS TEXT)))) DESC;
SELECT vt0.c1, rt0.c2, rt0.c4, t0.c0 FROM rt0, t0, vt0;
SELECT vt0.c1, rt0.c2, rt0.c4, t0.c0 FROM rt0, t0, vt0 WHERE (CASE WHEN rt0.c2 THEN vt0.c0 END COLLATE NOCASE) UNION ALL SELECT vt0.c1, rt0.c2, rt0.c4, t0.c0 FROM rt0, t0, vt0 WHERE ((NOT (CASE WHEN rt0.c2 THEN vt0.c0 END COLLATE NOCASE))) UNION ALL SELECT ALL vt0.c1, rt0.c2, rt0.c4, t0.c0 FROM rt0, t0, vt0 WHERE (((CASE WHEN rt0.c2 THEN vt0.c0 END COLLATE NOCASE) ISNULL));
SELECT vt0.c1, rt0.c2, rt0.c4, t0.c0 FROM rt0, t0, vt0;
SELECT DISTINCT vt0.c1, rt0.c2, rt0.c0, rt0.c4, rt0.c1 FROM rt0, t0, vt0;
SELECT DISTINCT vt0.c1, rt0.c2, rt0.c0, rt0.c4, rt0.c1 FROM rt0, t0, vt0 WHERE (((NULL IN ()) IN ())) UNION SELECT DISTINCT vt0.c1, rt0.c2, rt0.c0, rt0.c4, rt0.c1 FROM rt0, t0, vt0 WHERE ((NOT (((NULL IN ()) IN ())))) UNION SELECT DISTINCT vt0.c1, rt0.c2, rt0.c0, rt0.c4, rt0.c1 FROM rt0, t0, vt0 WHERE (((((NULL IN ()) IN ())) ISNULL));
SELECT DISTINCT vt0.c1, rt0.c2, rt0.c0, rt0.c4, rt0.c1 FROM rt0, t0, vt0;
SELECT ALL t0.c0, rt0.c4 FROM rt0, t0 GROUP BY t0.c0, rt0.c4;
SELECT t0.c0, rt0.c4 FROM rt0, t0 WHERE ((((rt0.c0)) BETWEEN ((((rt0.c0) NOT NULL))) AND ((rt0.c0 COLLATE NOCASE)))) GROUP BY t0.c0, rt0.c4 UNION SELECT ALL t0.c0, rt0.c4 FROM rt0, t0 WHERE ((NOT ((((rt0.c0)) BETWEEN ((((rt0.c0) NOT NULL))) AND ((rt0.c0 COLLATE NOCASE)))))) GROUP BY t0.c0, rt0.c4 UNION SELECT ALL t0.c0, rt0.c4 FROM rt0, t0 WHERE ((((((rt0.c0)) BETWEEN ((((rt0.c0) NOT NULL))) AND ((rt0.c0 COLLATE NOCASE)))) ISNULL)) GROUP BY t0.c0, rt0.c4;
SELECT ALL t0.c0, rt0.c4 FROM rt0, t0 GROUP BY t0.c0, rt0.c4;
SELECT ALL rt0.c3, rt0.c2, t0.c0, rt0.c0, rt0.c4, vt0.c1, vt0.c0, rt0.c1 FROM vt0, t0 CROSS JOIN rt0 ON (((rt0.c2 IN ())) NOTNULL) GROUP BY rt0.c3, rt0.c2, t0.c0, rt0.c0, rt0.c4, vt0.c1, vt0.c0, rt0.c1;
SELECT ALL rt0.c3, rt0.c2, t0.c0, rt0.c0, rt0.c4, vt0.c1, vt0.c0, rt0.c1 FROM vt0, t0 CROSS JOIN rt0 ON (((rt0.c2 IN ())) NOTNULL) GROUP BY rt0.c3, rt0.c2, t0.c0, rt0.c0, rt0.c4, vt0.c1, vt0.c0, rt0.c1 HAVING (+ (CAST(MIN(TOTAL(rt0.c0)) AS INTEGER))) UNION ALL SELECT ALL rt0.c3, rt0.c2, t0.c0, rt0.c0, rt0.c4, vt0.c1, vt0.c0, rt0.c1 FROM vt0, t0 CROSS JOIN rt0 ON (((rt0.c2 IN ())) NOTNULL) GROUP BY rt0.c3, rt0.c2, t0.c0, rt0.c0, rt0.c4, vt0.c1, vt0.c0, rt0.c1 HAVING (NOT ((+ (CAST(MIN(TOTAL(rt0.c0)) AS INTEGER))))) UNION ALL SELECT ALL rt0.c3, rt0.c2, t0.c0, rt0.c0, rt0.c4, vt0.c1, vt0.c0, rt0.c1 FROM vt0, t0 CROSS JOIN rt0 ON (((rt0.c2 IN ())) NOTNULL) GROUP BY rt0.c3, rt0.c2, t0.c0, rt0.c0, rt0.c4, vt0.c1, vt0.c0, rt0.c1 HAVING (((+ (CAST(MIN(TOTAL(rt0.c0)) AS INTEGER)))) ISNULL);
SELECT ALL SUM(INSTR(((t0.c0)<=(t0.c0)), t0.c0)) FROM t0;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((((rt0.c2) NOTNULL)) NOTNULL)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((rt0.c2) NOTNULL)) NOTNULL)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((rt0.c2) NOTNULL)) NOTNULL)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM t0, vt0 NOT INDEXED;
SELECT DISTINCT * FROM t0, vt0 WHERE (t0.c0) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT * FROM t0, vt0 NOT INDEXED;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 NOT INDEXED WHERE ((- (t0.c0)) COLLATE BINARY) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((- (t0.c0)) COLLATE BINARY))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((((- (t0.c0)) COLLATE BINARY) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1 HAVING COUNT('G.,L2HH') UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1 HAVING (NOT (COUNT('G.,L2HH'))) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1 HAVING ((COUNT('G.,L2HH')) ISNULL);
SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1 HAVING COUNT('G.,L2HH') UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1 HAVING (NOT (COUNT('G.,L2HH'))) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1 HAVING ((COUNT('G.,L2HH')) ISNULL);
SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1;
SELECT MIN((- ((rt0.c0 IN (rt0.c1, vt0.c0))))) FROM vt0, rt0;
SELECT ALL vt0.c1, t0.c0 FROM vt0, t0;
SELECT vt0.c1, t0.c0 FROM vt0, t0 WHERE (DATE(vt0.c0, x'', CASE t0.c0  WHEN vt0.c0 THEN vt0.c1 END, (vt0.c0 IN (t0.c0)), (vt0.c0 IN ()), ((((vt0.c1)AND(t0.c0)))AND(t0.c0)), ((((((((t0.c0)OR(t0.c0)))AND(vt0.c0)))AND(NULL)))AND(t0.c0)))) UNION ALL SELECT vt0.c1, t0.c0 FROM vt0, t0 WHERE ((NOT (DATE(vt0.c0, x'', CASE t0.c0  WHEN vt0.c0 THEN vt0.c1 END, (vt0.c0 IN (t0.c0)), (vt0.c0 IN ()), ((((vt0.c1)AND(t0.c0)))AND(t0.c0)), ((((((((t0.c0)OR(t0.c0)))AND(vt0.c0)))AND(NULL)))AND(t0.c0)))))) UNION ALL SELECT ALL vt0.c1, t0.c0 FROM vt0, t0 WHERE (((DATE(vt0.c0, x'', CASE t0.c0  WHEN vt0.c0 THEN vt0.c1 END, (vt0.c0 IN (t0.c0)), (vt0.c0 IN ()), ((((vt0.c1)AND(t0.c0)))AND(t0.c0)), ((((((((t0.c0)OR(t0.c0)))AND(vt0.c0)))AND(NULL)))AND(t0.c0)))) ISNULL));
SELECT ALL vt0.c1, t0.c0 FROM vt0, t0;
SELECT DISTINCT * FROM rt0 INNER JOIN vt0 ON ((((((rt0.c4)OR(vt0.c0)))OR(rt0.c1))) BETWEEN (((((vt0.c1)OR(vt0.c1)))AND(rt0.c4))) AND (((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3))));
SELECT DISTINCT * FROM rt0 INNER JOIN vt0 ON ((((((rt0.c4)OR(vt0.c0)))OR(rt0.c1))) BETWEEN (((((vt0.c1)OR(vt0.c1)))AND(rt0.c4))) AND (((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3)))) WHERE (((((vt0.c0)OR(rt0.c2))) NOT BETWEEN (((((NULL)AND(vt0.c1)))OR(rt0.c3))) AND (((rt0.c4)LIKE(rt0.c0))))) UNION SELECT DISTINCT * FROM rt0 INNER JOIN vt0 ON ((((((rt0.c4)OR(vt0.c0)))OR(rt0.c1))) BETWEEN (((((vt0.c1)OR(vt0.c1)))AND(rt0.c4))) AND (((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3)))) WHERE ((NOT (((((vt0.c0)OR(rt0.c2))) NOT BETWEEN (((((NULL)AND(vt0.c1)))OR(rt0.c3))) AND (((rt0.c4)LIKE(rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0 INNER JOIN vt0 ON ((((((rt0.c4)OR(vt0.c0)))OR(rt0.c1))) BETWEEN (((((vt0.c1)OR(vt0.c1)))AND(rt0.c4))) AND (((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3)))) WHERE (((((((vt0.c0)OR(rt0.c2))) NOT BETWEEN (((((NULL)AND(vt0.c1)))OR(rt0.c3))) AND (((rt0.c4)LIKE(rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0 INNER JOIN vt0 ON ((((((rt0.c4)OR(vt0.c0)))OR(rt0.c1))) BETWEEN (((((vt0.c1)OR(vt0.c1)))AND(rt0.c4))) AND (((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3))));
SELECT ALL rt0.c3, rt0.c0, vt0.c1, rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c3, rt0.c0, vt0.c1, rt0.c2, rt0.c1, vt0.c0;
SELECT rt0.c3, rt0.c0, vt0.c1, rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0 WHERE (((((rt0.c4)%(vt0.c1))) IS TRUE)) GROUP BY rt0.c3, rt0.c0, vt0.c1, rt0.c2, rt0.c1, vt0.c0 UNION SELECT rt0.c3, rt0.c0, vt0.c1, rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0 WHERE ((NOT (((((rt0.c4)%(vt0.c1))) IS TRUE)))) GROUP BY rt0.c3, rt0.c0, vt0.c1, rt0.c2, rt0.c1, vt0.c0 UNION SELECT ALL rt0.c3, rt0.c0, vt0.c1, rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0 WHERE (((((((rt0.c4)%(vt0.c1))) IS TRUE)) ISNULL)) GROUP BY rt0.c3, rt0.c0, vt0.c1, rt0.c2, rt0.c1, vt0.c0;
SELECT ALL rt0.c3, rt0.c0, vt0.c1, rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c3, rt0.c0, vt0.c1, rt0.c2, rt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((MIN(TOTAL(COUNT(vt0.c0)))) ISNULL) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (((MIN(TOTAL(COUNT(vt0.c0)))) ISNULL))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((((MIN(TOTAL(COUNT(vt0.c0)))) ISNULL)) ISNULL);
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE (t0.c0) UNION ALL SELECT * FROM t0 WHERE ((NOT (t0.c0))) UNION ALL SELECT * FROM t0 WHERE (((t0.c0) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (CAST(CASE ')-'  WHEN rt0.c4 THEN vt0.c1 ELSE vt0.c0 END AS REAL)) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (CAST(CASE ')-'  WHEN rt0.c4 THEN vt0.c1 ELSE vt0.c0 END AS REAL)))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((CAST(CASE ')-'  WHEN rt0.c4 THEN vt0.c1 ELSE vt0.c0 END AS REAL)) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((TRIM(DISTINCT t0.c0, t0.c0))IS NOT(ROUND(t0.c0, t0.c0)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((TRIM(DISTINCT t0.c0, t0.c0))IS NOT(ROUND(t0.c0, t0.c0)))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((((TRIM(DISTINCT t0.c0, t0.c0))IS NOT(ROUND(t0.c0, t0.c0)))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT rt0.c3, rt0.c2, rt0.c1 FROM t0, vt0, rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1;
SELECT rt0.c3, rt0.c2, rt0.c1 FROM t0, vt0, rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1 HAVING SUM(((MAX(AVG(rt0.c1)))+(rt0.c0))) UNION ALL SELECT rt0.c3, rt0.c2, rt0.c1 FROM t0, vt0, rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1 HAVING (NOT (SUM(((MAX(AVG(rt0.c1)))+(rt0.c0))))) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c1 FROM t0, vt0, rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1 HAVING ((SUM(((MAX(AVG(rt0.c1)))+(rt0.c0)))) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 NOT INDEXED WHERE ((((NULL)>(vt0.c1)) IN ())) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((((NULL)>(vt0.c1)) IN ())))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((((NULL)>(vt0.c1)) IN ())) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0, t0, rt0;
SELECT DISTINCT * FROM vt0, t0, rt0 WHERE (rt0.c2) UNION SELECT DISTINCT * FROM vt0, t0, rt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT * FROM vt0, t0, rt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT * FROM vt0, t0, rt0;
SELECT ALL rt0.c2, rt0.c0, vt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON (((('874669006') NOTNULL)) BETWEEN ((rt0.c3 IN ())) AND (rt0.c2)) GROUP BY rt0.c2, rt0.c0, vt0.c0;
SELECT ALL rt0.c2, rt0.c0, vt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON (((('874669006') NOTNULL)) BETWEEN ((rt0.c3 IN ())) AND (rt0.c2)) WHERE (rt0.c1) GROUP BY rt0.c2, rt0.c0, vt0.c0 UNION SELECT ALL rt0.c2, rt0.c0, vt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON (((('874669006') NOTNULL)) BETWEEN ((rt0.c3 IN ())) AND (rt0.c2)) WHERE ((NOT (rt0.c1))) GROUP BY rt0.c2, rt0.c0, vt0.c0 UNION SELECT ALL rt0.c2, rt0.c0, vt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON (((('874669006') NOTNULL)) BETWEEN ((rt0.c3 IN ())) AND (rt0.c2)) WHERE (((rt0.c1) ISNULL)) GROUP BY rt0.c2, rt0.c0, vt0.c0;
SELECT ALL rt0.c2, rt0.c0, vt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON (((('874669006') NOTNULL)) BETWEEN ((rt0.c3 IN ())) AND (rt0.c2)) GROUP BY rt0.c2, rt0.c0, vt0.c0;
SELECT rt0.c4, vt0.c0 FROM t0, rt0 INDEXED BY i81 RIGHT OUTER JOIN vt0 ON (+ ((- (vt0.c0)))) GROUP BY rt0.c4, vt0.c0;
SELECT rt0.c4, rt0.c1 FROM rt0;
SELECT ALL rt0.c4, rt0.c1 FROM rt0 WHERE (CAST(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)) AS INTEGER)) UNION ALL SELECT ALL rt0.c4, rt0.c1 FROM rt0 WHERE ((NOT (CAST(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)) AS INTEGER)))) UNION ALL SELECT rt0.c4, rt0.c1 FROM rt0 WHERE (((CAST(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)) AS INTEGER)) ISNULL));
SELECT rt0.c4, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (LIKE(((vt0.c1)LIKE(vt0.c1)), x'' COLLATE NOCASE)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (LIKE(((vt0.c1)LIKE(vt0.c1)), x'' COLLATE NOCASE)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((LIKE(((vt0.c1)LIKE(vt0.c1)), x'' COLLATE NOCASE)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 WHERE (CAST(vt0.c0 COLLATE BINARY AS REAL)) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE ((NOT (CAST(vt0.c0 COLLATE BINARY AS REAL)))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE (((CAST(vt0.c0 COLLATE BINARY AS REAL)) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT rt0.c1, rt0.c2, rt0.c3, rt0.c4, rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c4, rt0.c0, vt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c4, rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c4, rt0.c0, vt0.c0 HAVING COUNT(MIN(COUNT(vt0.c1))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c3, rt0.c4, rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c4, rt0.c0, vt0.c0 HAVING (NOT (COUNT(MIN(COUNT(vt0.c1))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c4, rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c4, rt0.c0, vt0.c0 HAVING ((COUNT(MIN(COUNT(vt0.c1)))) ISNULL);
SELECT ALL rt0.c4, rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c4, rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0 WHERE ((((rt0.c3, rt0.c2, rt0.c4, rt0.c3, rt0.c2)) NOT BETWEEN ((((rt0.c1)+(rt0.c4)), CAST('	e' AS NUMERIC), CAST(rt0.c0 AS NUMERIC), rt0.c4, (rt0.c2 IN (rt0.c2)))) AND (((rt0.c0 IN (rt0.c4)), rt0.c1, rt0.c2 COLLATE BINARY, ((rt0.c4) NOT NULL), x'1dd6')))) UNION ALL SELECT ALL rt0.c4, rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c3, rt0.c2, rt0.c4, rt0.c3, rt0.c2)) NOT BETWEEN ((((rt0.c1)+(rt0.c4)), CAST('	e' AS NUMERIC), CAST(rt0.c0 AS NUMERIC), rt0.c4, (rt0.c2 IN (rt0.c2)))) AND (((rt0.c0 IN (rt0.c4)), rt0.c1, rt0.c2 COLLATE BINARY, ((rt0.c4) NOT NULL), x'1dd6')))))) UNION ALL SELECT rt0.c4, rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0 WHERE ((((((rt0.c3, rt0.c2, rt0.c4, rt0.c3, rt0.c2)) NOT BETWEEN ((((rt0.c1)+(rt0.c4)), CAST('	e' AS NUMERIC), CAST(rt0.c0 AS NUMERIC), rt0.c4, (rt0.c2 IN (rt0.c2)))) AND (((rt0.c0 IN (rt0.c4)), rt0.c1, rt0.c2 COLLATE BINARY, ((rt0.c4) NOT NULL), x'1dd6')))) ISNULL));
SELECT ALL rt0.c4, rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM t0 NATURAL JOIN vt0;
SELECT DISTINCT * FROM t0 NATURAL JOIN vt0 WHERE (INSTR(NULL, ((((vt0.c1)OR(vt0.c1)))AND(t0.c0)))) UNION SELECT DISTINCT * FROM t0 NATURAL JOIN vt0 WHERE ((NOT (INSTR(NULL, ((((vt0.c1)OR(vt0.c1)))AND(t0.c0)))))) UNION SELECT DISTINCT * FROM t0 NATURAL JOIN vt0 WHERE (((INSTR(NULL, ((((vt0.c1)OR(vt0.c1)))AND(t0.c0)))) ISNULL));
SELECT DISTINCT * FROM t0 NATURAL JOIN vt0;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 WHERE ((NOT ((vt0.c0 IN ())))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE ((NOT ((NOT ((vt0.c0 IN ())))))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE ((((NOT ((vt0.c0 IN ())))) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT rt0.c2, vt0.c0, rt0.c0, rt0.c4 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c0, rt0.c4;
SELECT ALL rt0.c2, vt0.c0, rt0.c0, rt0.c4 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c0, rt0.c4 HAVING SUM(vt0.c0) COLLATE RTRIM UNION ALL SELECT rt0.c2, vt0.c0, rt0.c0, rt0.c4 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c0, rt0.c4 HAVING (NOT (SUM(vt0.c0) COLLATE RTRIM)) UNION ALL SELECT ALL rt0.c2, vt0.c0, rt0.c0, rt0.c4 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c0, rt0.c4 HAVING ((SUM(vt0.c0) COLLATE RTRIM) ISNULL);
SELECT rt0.c2, vt0.c0, rt0.c0, rt0.c4 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c0, rt0.c4;
SELECT ALL rt0.c2, vt0.c0, rt0.c0, rt0.c4 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c0, rt0.c4 HAVING SUM(vt0.c0) COLLATE RTRIM UNION ALL SELECT rt0.c2, vt0.c0, rt0.c0, rt0.c4 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c0, rt0.c4 HAVING (NOT (SUM(vt0.c0) COLLATE RTRIM)) UNION ALL SELECT ALL rt0.c2, vt0.c0, rt0.c0, rt0.c4 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c0, rt0.c4 HAVING ((SUM(vt0.c0) COLLATE RTRIM) ISNULL);
SELECT rt0.c2, vt0.c0, rt0.c0, rt0.c4 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c0, rt0.c4;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (CAST((((rt0.c4))<((rt0.c3))) AS BLOB)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CAST((((rt0.c4))<((rt0.c3))) AS BLOB)))) UNION ALL SELECT * FROM rt0 WHERE (((CAST((((rt0.c4))<((rt0.c3))) AS BLOB)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT vt0.c0, rt0.c3, rt0.c2 FROM vt0, rt0;
SELECT DISTINCT vt0.c0, rt0.c3, rt0.c2 FROM vt0, rt0 WHERE ((((('0.28537091534657555')OR(((((rt0.c0)OR(vt0.c0)))OR(rt0.c2)))))AND(((vt0.c1)<=('a'))))) UNION SELECT DISTINCT vt0.c0, rt0.c3, rt0.c2 FROM vt0, rt0 WHERE ((NOT ((((('0.28537091534657555')OR(((((rt0.c0)OR(vt0.c0)))OR(rt0.c2)))))AND(((vt0.c1)<=('a'))))))) UNION SELECT DISTINCT vt0.c0, rt0.c3, rt0.c2 FROM vt0, rt0 WHERE ((((((('0.28537091534657555')OR(((((rt0.c0)OR(vt0.c0)))OR(rt0.c2)))))AND(((vt0.c1)<=('a'))))) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c3, rt0.c2 FROM vt0, rt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CASE WHEN (((vt0.c1)) NOT BETWEEN ((0.7625715221455251)) AND ((vt0.c0))) THEN (vt0.c1 IN ()) ELSE vt0.c1 END) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN (((vt0.c1)) NOT BETWEEN ((0.7625715221455251)) AND ((vt0.c0))) THEN (vt0.c1 IN ()) ELSE vt0.c1 END))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((CASE WHEN (((vt0.c1)) NOT BETWEEN ((0.7625715221455251)) AND ((vt0.c0))) THEN (vt0.c1 IN ()) ELSE vt0.c1 END) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c0 FROM rt0, t0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, t0 GROUP BY rt0.c0 HAVING (((GROUP_CONCAT(rt0.c4))) BETWEEN ((SUM(rt0.c1))) AND ((GROUP_CONCAT(rt0.c4)))) COLLATE NOCASE UNION ALL SELECT ALL rt0.c0 FROM rt0, t0 GROUP BY rt0.c0 HAVING (NOT ((((GROUP_CONCAT(rt0.c4))) BETWEEN ((SUM(rt0.c1))) AND ((GROUP_CONCAT(rt0.c4)))) COLLATE NOCASE)) UNION ALL SELECT rt0.c0 FROM rt0, t0 GROUP BY rt0.c0 HAVING (((((GROUP_CONCAT(rt0.c4))) BETWEEN ((SUM(rt0.c1))) AND ((GROUP_CONCAT(rt0.c4)))) COLLATE NOCASE) ISNULL);
SELECT rt0.c0 FROM rt0, t0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, t0 GROUP BY rt0.c0 HAVING (((GROUP_CONCAT(rt0.c4))) BETWEEN ((SUM(rt0.c1))) AND ((GROUP_CONCAT(rt0.c4)))) COLLATE NOCASE UNION ALL SELECT ALL rt0.c0 FROM rt0, t0 GROUP BY rt0.c0 HAVING (NOT ((((GROUP_CONCAT(rt0.c4))) BETWEEN ((SUM(rt0.c1))) AND ((GROUP_CONCAT(rt0.c4)))) COLLATE NOCASE)) UNION ALL SELECT rt0.c0 FROM rt0, t0 GROUP BY rt0.c0 HAVING (((((GROUP_CONCAT(rt0.c4))) BETWEEN ((SUM(rt0.c1))) AND ((GROUP_CONCAT(rt0.c4)))) COLLATE NOCASE) ISNULL);
SELECT rt0.c0 FROM rt0, t0 GROUP BY rt0.c0;
SELECT ALL MAX((((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c1)) IN ())) FROM rt0;
SELECT t0.c0, rt0.c4, rt0.c2, rt0.c1, rt0.c3 FROM rt0, t0;
SELECT ALL t0.c0, rt0.c4, rt0.c2, rt0.c1, rt0.c3 FROM rt0, t0 WHERE (((((NULL)>=(NULL)))+(((((((((rt0.c4)OR(rt0.c3)))AND(rt0.c4)))AND(rt0.c0)))OR(rt0.c3))))) UNION ALL SELECT t0.c0, rt0.c4, rt0.c2, rt0.c1, rt0.c3 FROM rt0, t0 WHERE ((NOT (((((NULL)>=(NULL)))+(((((((((rt0.c4)OR(rt0.c3)))AND(rt0.c4)))AND(rt0.c0)))OR(rt0.c3))))))) UNION ALL SELECT t0.c0, rt0.c4, rt0.c2, rt0.c1, rt0.c3 FROM rt0, t0 WHERE (((((((NULL)>=(NULL)))+(((((((((rt0.c4)OR(rt0.c3)))AND(rt0.c4)))AND(rt0.c0)))OR(rt0.c3))))) ISNULL));
SELECT t0.c0, rt0.c4, rt0.c2, rt0.c1, rt0.c3 FROM rt0, t0;
SELECT DISTINCT vt0.c0, t0.c0, vt0.c1 FROM t0, vt0;
SELECT DISTINCT vt0.c0, t0.c0, vt0.c1 FROM t0, vt0 WHERE (0X14e08f88) UNION SELECT DISTINCT vt0.c0, t0.c0, vt0.c1 FROM t0, vt0 WHERE ((NOT (0X14e08f88))) UNION SELECT DISTINCT vt0.c0, t0.c0, vt0.c1 FROM t0, vt0 WHERE (((0x14e08f88) ISNULL));
SELECT DISTINCT vt0.c0, t0.c0, vt0.c1 FROM t0, vt0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ((NOT ((((t0.c0))=((t0.c0)))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((NOT ((((t0.c0))=((t0.c0)))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((((NOT ((((t0.c0))==((t0.c0)))))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (COUNT(MAX(TOTAL(rt0.c0))) IN ()) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT ((COUNT(MAX(TOTAL(rt0.c0))) IN ()))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (((COUNT(MAX(TOTAL(rt0.c0))) IN ())) ISNULL);
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (COUNT(MAX(TOTAL(rt0.c0))) IN ()) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT ((COUNT(MAX(TOTAL(rt0.c0))) IN ()))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (((COUNT(MAX(TOTAL(rt0.c0))) IN ())) ISNULL);
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT vt0.c0, rt0.c1 FROM rt0 CROSS JOIN vt0 ON CASE (((vt0.c1)) BETWEEN ((x'')) AND ((rt0.c4)))  WHEN ((rt0.c0)>=(rt0.c1)) THEN vt0.c0 COLLATE NOCASE END;
SELECT vt0.c0, rt0.c1 FROM rt0 CROSS JOIN vt0 ON CASE (((vt0.c1)) BETWEEN ((x'')) AND ((rt0.c4)))  WHEN ((rt0.c0)>=(rt0.c1)) THEN vt0.c0 COLLATE NOCASE END WHERE ((((((vt0.c0))<=((vt0.c1))))%((((rt0.c4)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c4)))))) UNION ALL SELECT vt0.c0, rt0.c1 FROM rt0 CROSS JOIN vt0 ON CASE (((vt0.c1)) BETWEEN ((x'')) AND ((rt0.c4)))  WHEN ((rt0.c0)>=(rt0.c1)) THEN vt0.c0 COLLATE NOCASE END WHERE ((NOT ((((((vt0.c0))<=((vt0.c1))))%((((rt0.c4)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c4)))))))) UNION ALL SELECT ALL vt0.c0, rt0.c1 FROM rt0 CROSS JOIN vt0 ON CASE (((vt0.c1)) BETWEEN ((x'')) AND ((rt0.c4)))  WHEN ((rt0.c0)>=(rt0.c1)) THEN vt0.c0 COLLATE NOCASE END WHERE ((((((((vt0.c0))<=((vt0.c1))))%((((rt0.c4)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c4)))))) ISNULL));
SELECT vt0.c0, rt0.c1 FROM rt0 CROSS JOIN vt0 ON CASE (((vt0.c1)) BETWEEN ((x'')) AND ((rt0.c4)))  WHEN ((rt0.c0)>=(rt0.c1)) THEN vt0.c0 COLLATE NOCASE END;
SELECT DISTINCT rt0.c3 FROM rt0, vt0;
SELECT DISTINCT rt0.c3 FROM rt0, vt0 WHERE ((((~ (vt0.c0))) NOT BETWEEN (((rt0.c2)||(rt0.c2))) AND (rt0.c4))) UNION SELECT DISTINCT rt0.c3 FROM rt0, vt0 WHERE ((NOT ((((~ (vt0.c0))) NOT BETWEEN (((rt0.c2)||(rt0.c2))) AND (rt0.c4))))) UNION SELECT DISTINCT rt0.c3 FROM rt0, vt0 WHERE ((((((~ (vt0.c0))) NOT BETWEEN (((rt0.c2)||(rt0.c2))) AND (rt0.c4))) ISNULL));
SELECT DISTINCT rt0.c3 FROM rt0, vt0;
SELECT ALL rt0.c3, rt0.c1, rt0.c2, vt0.c0, rt0.c0, rt0.c4, vt0.c1 FROM vt0, t0, rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2, vt0.c0, rt0.c0, rt0.c4, vt0.c1;
SELECT rt0.c3, rt0.c1, rt0.c2, vt0.c0, rt0.c0, rt0.c4, vt0.c1 FROM vt0, t0, rt0 WHERE (IFNULL(CAST(rt0.c3 AS INTEGER), (rt0.c2 IN ()))) GROUP BY rt0.c3, rt0.c1, rt0.c2, vt0.c0, rt0.c0, rt0.c4, vt0.c1 UNION SELECT rt0.c3, rt0.c1, rt0.c2, vt0.c0, rt0.c0, rt0.c4, vt0.c1 FROM vt0, t0, rt0 WHERE ((NOT (IFNULL(CAST(rt0.c3 AS INTEGER), (rt0.c2 IN ()))))) GROUP BY rt0.c3, rt0.c1, rt0.c2, vt0.c0, rt0.c0, rt0.c4, vt0.c1 UNION SELECT rt0.c3, rt0.c1, rt0.c2, vt0.c0, rt0.c0, rt0.c4, vt0.c1 FROM vt0, t0, rt0 WHERE (((IFNULL(CAST(rt0.c3 AS INTEGER), (rt0.c2 IN ()))) ISNULL)) GROUP BY rt0.c3, rt0.c1, rt0.c2, vt0.c0, rt0.c0, rt0.c4, vt0.c1;
SELECT ALL rt0.c3, rt0.c1, rt0.c2, vt0.c0, rt0.c0, rt0.c4, vt0.c1 FROM vt0, t0, rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2, vt0.c0, rt0.c0, rt0.c4, vt0.c1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(CAST(AVG(COUNT(*)) AS REAL)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(CAST(AVG(COUNT(*)) AS REAL)))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(CAST(AVG(COUNT(*)) AS REAL))) ISNULL);
SELECT ALL * FROM t0 INDEXED BY i75, rt0, vt0;
SELECT ALL * FROM t0 INDEXED BY i75, rt0, vt0 WHERE ((((rt0.c4 IN ()))%(CASE rt0.c3  WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c3 THEN t0.c0 WHEN rt0.c2 THEN rt0.c2 ELSE 0.652152673104078 END))) UNION ALL SELECT ALL * FROM t0 INDEXED BY i75, rt0, vt0 WHERE ((NOT ((((rt0.c4 IN ()))%(CASE rt0.c3  WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c3 THEN t0.c0 WHEN rt0.c2 THEN rt0.c2 ELSE 0.652152673104078 END))))) UNION ALL SELECT ALL * FROM t0 INDEXED BY i75, rt0, vt0 WHERE ((((((rt0.c4 IN ()))%(CASE rt0.c3  WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c3 THEN t0.c0 WHEN rt0.c2 THEN rt0.c2 ELSE 0.652152673104078 END))) ISNULL));
SELECT ALL * FROM t0 INDEXED BY i75, rt0, vt0;
SELECT DISTINCT * FROM t0 FULL OUTER JOIN rt0 ON CAST(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)) AS INTEGER);
SELECT DISTINCT * FROM t0 FULL OUTER JOIN rt0 ON CAST(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)) AS INTEGER) WHERE ((~ ((+ (rt0.c3))))) UNION SELECT DISTINCT * FROM t0 FULL OUTER JOIN rt0 ON CAST(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)) AS INTEGER) WHERE ((NOT ((~ ((+ (rt0.c3))))))) UNION SELECT DISTINCT * FROM t0 FULL OUTER JOIN rt0 ON CAST(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)) AS INTEGER) WHERE ((((~ ((+ (rt0.c3))))) ISNULL));
SELECT DISTINCT * FROM t0 FULL OUTER JOIN rt0 ON CAST(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)) AS INTEGER);
SELECT rt0.c4, rt0.c2, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c2, rt0.c1, rt0.c3;
SELECT rt0.c4, rt0.c2, rt0.c1, rt0.c3 FROM rt0 WHERE ((((- (rt0.c1)))>>(CAST(rt0.c2 AS NUMERIC)))) GROUP BY rt0.c4, rt0.c2, rt0.c1, rt0.c3 UNION SELECT ALL rt0.c4, rt0.c2, rt0.c1, rt0.c3 FROM rt0 WHERE ((NOT ((((- (rt0.c1)))>>(CAST(rt0.c2 AS NUMERIC)))))) GROUP BY rt0.c4, rt0.c2, rt0.c1, rt0.c3 UNION SELECT rt0.c4, rt0.c2, rt0.c1, rt0.c3 FROM rt0 WHERE ((((((- (rt0.c1)))>>(CAST(rt0.c2 AS NUMERIC)))) ISNULL)) GROUP BY rt0.c4, rt0.c2, rt0.c1, rt0.c3;
SELECT rt0.c4, rt0.c2, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c2, rt0.c1, rt0.c3;
SELECT ALL rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c0;
SELECT ALL rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c0 HAVING (((((((TOTAL(rt0.c1))) NOT BETWEEN ((SUM(rt0.c4))) AND ((MIN(AVG(GROUP_CONCAT(rt0.c4)))))))AND(TOTAL(TOTAL(MAX(rt0.c0))))))AND(((rt0.c1)GLOB(rt0.c4)))) UNION ALL SELECT rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c0 HAVING (NOT ((((((((TOTAL(rt0.c1))) NOT BETWEEN ((SUM(rt0.c4))) AND ((MIN(AVG(GROUP_CONCAT(rt0.c4)))))))AND(TOTAL(TOTAL(MAX(rt0.c0))))))AND(((rt0.c1)GLOB(rt0.c4)))))) UNION ALL SELECT ALL rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c0 HAVING (((((((((TOTAL(rt0.c1))) NOT BETWEEN ((SUM(rt0.c4))) AND ((MIN(AVG(GROUP_CONCAT(rt0.c4)))))))AND(TOTAL(TOTAL(MAX(rt0.c0))))))AND(((rt0.c1)GLOB(rt0.c4))))) ISNULL);
SELECT * FROM rt0, vt0;
SELECT ALL * FROM rt0, vt0 WHERE (CASE WHEN (NULL IN ()) THEN ((((rt0.c1)AND(rt0.c2)))OR(rt0.c4)) ELSE (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0))) END) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((NOT (CASE WHEN (NULL IN ()) THEN ((((rt0.c1)AND(rt0.c2)))OR(rt0.c4)) ELSE (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0))) END))) UNION ALL SELECT * FROM rt0, vt0 WHERE (((CASE WHEN (NULL IN ()) THEN ((((rt0.c1)AND(rt0.c2)))OR(rt0.c4)) ELSE (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0))) END) ISNULL));
SELECT * FROM rt0, vt0;
SELECT DISTINCT vt0.c0, rt0.c0 FROM rt0, vt0 CROSS JOIN t0 ON (((rt0.c1, rt0.c4, 0x179dffef)) BETWEEN ((rt0.c4, rt0.c3, rt0.c1)) AND ((rt0.c0, rt0.c0, vt0.c0))) COLLATE BINARY;
SELECT DISTINCT vt0.c0, rt0.c0 FROM rt0, vt0 CROSS JOIN t0 ON (((rt0.c1, rt0.c4, 0X179dffef)) BETWEEN ((rt0.c4, rt0.c3, rt0.c1)) AND ((rt0.c0, rt0.c0, vt0.c0))) COLLATE BINARY WHERE (((rt0.c4)IS NOT(((vt0.c0)|(rt0.c2))))) UNION SELECT DISTINCT vt0.c0, rt0.c0 FROM rt0, vt0 CROSS JOIN t0 ON (((rt0.c1, rt0.c4, 0x179dffef)) BETWEEN ((rt0.c4, rt0.c3, rt0.c1)) AND ((rt0.c0, rt0.c0, vt0.c0))) COLLATE BINARY WHERE ((NOT (((rt0.c4)IS NOT(((vt0.c0)|(rt0.c2))))))) UNION SELECT DISTINCT vt0.c0, rt0.c0 FROM rt0, vt0 CROSS JOIN t0 ON (((rt0.c1, rt0.c4, 0X179dffef)) BETWEEN ((rt0.c4, rt0.c3, rt0.c1)) AND ((rt0.c0, rt0.c0, vt0.c0))) COLLATE BINARY WHERE (((((rt0.c4)IS NOT(((vt0.c0)|(rt0.c2))))) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c0 FROM rt0, vt0 CROSS JOIN t0 ON (((rt0.c1, rt0.c4, 0x179dffef)) BETWEEN ((rt0.c4, rt0.c3, rt0.c1)) AND ((rt0.c0, rt0.c0, vt0.c0))) COLLATE BINARY;
SELECT rt0.c1, t0.c0, vt0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c0, vt0.c1 FROM rt0, t0 CROSS JOIN vt0 ON ((((vt0.c1 COLLATE BINARY)OR(((rt0.c4) BETWEEN (vt0.c1) AND (rt0.c0)))))OR(ROUND(t0.c0, vt0.c0))) GROUP BY rt0.c1, t0.c0, vt0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c0, vt0.c1;
SELECT rt0.c1, t0.c0, vt0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c0, vt0.c1 FROM rt0, t0 CROSS JOIN vt0 ON ((((vt0.c1 COLLATE BINARY)OR(((rt0.c4) BETWEEN (vt0.c1) AND (rt0.c0)))))OR(ROUND(t0.c0, vt0.c0))) WHERE ((rt0.c0 IN ())) GROUP BY rt0.c1, t0.c0, vt0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c0, vt0.c1 UNION SELECT rt0.c1, t0.c0, vt0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c0, vt0.c1 FROM rt0, t0 CROSS JOIN vt0 ON ((((vt0.c1 COLLATE BINARY)OR(((rt0.c4) BETWEEN (vt0.c1) AND (rt0.c0)))))OR(ROUND(t0.c0, vt0.c0))) WHERE ((NOT ((rt0.c0 IN ())))) GROUP BY rt0.c1, t0.c0, vt0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c0, vt0.c1 UNION SELECT ALL rt0.c1, t0.c0, vt0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c0, vt0.c1 FROM rt0, t0 CROSS JOIN vt0 ON ((((vt0.c1 COLLATE BINARY)OR(((rt0.c4) BETWEEN (vt0.c1) AND (rt0.c0)))))OR(ROUND(t0.c0, vt0.c0))) WHERE ((((rt0.c0 IN ())) ISNULL)) GROUP BY rt0.c1, t0.c0, vt0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c0, vt0.c1;
SELECT rt0.c1, t0.c0, vt0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c0, vt0.c1 FROM rt0, t0 CROSS JOIN vt0 ON ((((vt0.c1 COLLATE BINARY)OR(((rt0.c4) BETWEEN (vt0.c1) AND (rt0.c0)))))OR(ROUND(t0.c0, vt0.c0))) GROUP BY rt0.c1, t0.c0, vt0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c0, vt0.c1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (~ (LIKELY(vt0.c1))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((~ (LIKELY(vt0.c1))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((~ (LIKELY(vt0.c1)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (~ (LIKELY(vt0.c1))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((~ (LIKELY(vt0.c1))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((~ (LIKELY(vt0.c1)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON TRIM(rt0.c3, vt0.c1) COLLATE NOCASE;
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON TRIM(rt0.c3, vt0.c1) COLLATE NOCASE WHERE (x'') UNION ALL SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON TRIM(rt0.c3, vt0.c1) COLLATE NOCASE WHERE ((NOT (x''))) UNION ALL SELECT * FROM rt0 FULL OUTER JOIN vt0 ON TRIM(rt0.c3, vt0.c1) COLLATE NOCASE WHERE (((x'') ISNULL));
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON TRIM(rt0.c3, vt0.c1) COLLATE NOCASE;
SELECT DISTINCT rt0.c0 FROM vt0, rt0, t0;
SELECT DISTINCT rt0.c0 FROM vt0, rt0, t0 WHERE (CAST(((rt0.c2) BETWEEN ('') AND (t0.c0)) AS REAL)) UNION SELECT DISTINCT rt0.c0 FROM vt0, rt0, t0 WHERE ((NOT (CAST(((rt0.c2) BETWEEN ('') AND (t0.c0)) AS REAL)))) UNION SELECT DISTINCT rt0.c0 FROM vt0, rt0, t0 WHERE (((CAST(((rt0.c2) BETWEEN ('') AND (t0.c0)) AS REAL)) ISNULL));
SELECT DISTINCT rt0.c0 FROM vt0, rt0, t0;
SELECT ALL vt0.c1, rt0.c1, t0.c0, rt0.c0, rt0.c2, rt0.c3, vt0.c0 FROM rt0, vt0, t0 GROUP BY vt0.c1, rt0.c1, t0.c0, rt0.c0, rt0.c2, rt0.c3, vt0.c0;
SELECT ALL vt0.c1, rt0.c1, t0.c0, rt0.c0, rt0.c2, rt0.c3, vt0.c0 FROM rt0, vt0, t0 WHERE ((CASE WHEN t0.c0 THEN rt0.c4 END IN ((rt0.c0 IN ())))) GROUP BY vt0.c1, rt0.c1, t0.c0, rt0.c0, rt0.c2, rt0.c3, vt0.c0 UNION SELECT ALL vt0.c1, rt0.c1, t0.c0, rt0.c0, rt0.c2, rt0.c3, vt0.c0 FROM rt0, vt0, t0 WHERE ((NOT ((CASE WHEN t0.c0 THEN rt0.c4 END IN ((rt0.c0 IN ())))))) GROUP BY vt0.c1, rt0.c1, t0.c0, rt0.c0, rt0.c2, rt0.c3, vt0.c0 UNION SELECT ALL vt0.c1, rt0.c1, t0.c0, rt0.c0, rt0.c2, rt0.c3, vt0.c0 FROM rt0, vt0, t0 WHERE ((((CASE WHEN t0.c0 THEN rt0.c4 END IN ((rt0.c0 IN ())))) ISNULL)) GROUP BY vt0.c1, rt0.c1, t0.c0, rt0.c0, rt0.c2, rt0.c3, vt0.c0;
SELECT ALL vt0.c1, rt0.c1, t0.c0, rt0.c0, rt0.c2, rt0.c3, vt0.c0 FROM rt0, vt0, t0 GROUP BY vt0.c1, rt0.c1, t0.c0, rt0.c0, rt0.c2, rt0.c3, vt0.c0;
