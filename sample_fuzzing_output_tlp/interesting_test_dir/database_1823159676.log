-- Time: 2024/06/09 08:39:31
-- Database: database76
-- Database version: 3.40.0
-- seed value: 1823159676
PRAGMA cache_size = 50000; -- 6ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-16be'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0); -- 15ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0 UNINDEXED); -- 1ms;
PRAGMA cache_spill; -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES (x'079a'); -- 0ms;
UPDATE vt1 SET c0='-1468237774'; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x''); -- 16ms;
COMMIT TRANSACTION; -- 1ms;
INSERT OR IGNORE INTO vt1 VALUES (NULL), (NULL), ('-1468237774'); -- 14ms;
REINDEX; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 1ms;
UPDATE OR IGNORE vt1 SET c0=x'', c0=447470833; -- 10ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE vt1 SET c0=x'3afc'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 sz=-432673064'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '447470833 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE PRINTF(TYPEOF(NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 0 sz=447470833 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((NULL)AND(NULL)))OR(0xffffffffe635eed8)))OR(CAST(0.7896359703701152 AS NUMERIC))))AND((+ (x'5000')))))AND(0.17922764416058368)))OR((('')IS('1151463214')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ())) ISNULL); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1489952440 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-757826462 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_patch((('-1468237774')!=(NULL)), ((NULL)%(''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=447470833'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (CAST(NULL AS NUMERIC))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-757826462 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1468237774 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ ('S')))/(('1323650240' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('-1468237774')OR(0.17922764416058368)))OR('|')))AND('0.17922764416058368')))OR(NULL))) NOT BETWEEN (0Xffffffffe635eed8 COLLATE NOCASE) AND (NULL COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1328972008 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((' -胨')) BETWEEN ((((0.9927592844790275) NOT NULL))) AND (((0.9927592844790275 IN ())))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '2094656280 sz=-397648004 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-757826462 sz=423811796 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 0 sz=-2068680345 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=739115572 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1844215779'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=-1879587546 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-2068680345 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE MIN((((('899681288')AND(0.37949366553901576)))AND(1489952440)), CAST(-4.32673064E8 AS REAL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-1332805717 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'9a5a' AS NUMERIC))!=(CASE 0.6864756375783874  WHEN 0.7896359703701152 THEN '' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1468237774 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '1328972008'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-1589480205 sz=-1314270354'); -- 4ms;
DELETE FROM sqlite_stat1 WHERE (+ (((x'')%('0{')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1006165620 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1554619532 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT NULL)) NOT BETWEEN ((((('0.0')OR(0.8563611472650849)))OR(x''))) AND (((-1.332805717E9) IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('')) NOT BETWEEN ((((0x4a9a3b78)>=(NULL)))) AND ((((NULL) NOT BETWEEN (NULL) AND (0.8294748459566266))))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((('-2027214940')>=(0X6f299588)))<(((((0.9927592844790275)AND(NULL)))OR('ED3Q-1')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1151463214'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE ((-2.02721494E9) NOTNULL)  WHEN ((('')) BETWEEN ((x'')) AND ((0.40766892435242896))) THEN ((x'')LIKE('!\n')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1151463214 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=899681288 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 1.00616562E9 THEN x'642d' ELSE -666619975 END)>>(((((173075215)AND('899681288')))OR('-397648004')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE HEX(RTRIM('0.17922764416058368')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=2100014863'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('423811796')AND(1.73075215E8)))AND(0.1685280442149345)))AND(1.00616562E9)))OR(0xffffffff847a5778)))OR((((0.1663787441853164, 0.3038930577064266, x'b787'))>=(('#U', '', x''))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((x'') BETWEEN (x'') AND ('!\n')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=1215030776 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('' COLLATE RTRIM)AND(((((NULL)OR('WH')))OR('-2072357000')))))OR(CAST(0.6420161181677928 AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0Xffffffffff91c920)+('\r秚<k灜t\[')) COLLATE BINARY COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.5823525003823639 AS REAL)) BETWEEN (NULLIF(x'', 0.9927592844790275)) AND (NULL COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-397648004 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=993332551 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE RTRIM) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-1648834713'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1394183306 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1860245013 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'8cbe'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('0.1663787441853164')<<((NULL IN ()))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=2140413107 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=656686998 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=765191407 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-666166917 sz=-1844215779 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '739115572 -1394183306 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ABS(DISTINCT 0.4272485420773322) THEN ('Op<dt' IN ()) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'463e'))<(('1040553632'))) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1933252131 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=96983743 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1627001064'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '945535099 sz=675353212 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((NULL)OR(x'')))AND('C1x')))OR('1405612809')))OR(''))) BETWEEN ((((('+D0')AND(NULL)))OR('656686998'))) AND (((((((((NULL)OR(0.14561332676103778)))OR(x'')))OR('')))OR('k!গ Kea崠)')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((((NULL)OR(NULL)))AND(x'268a')))OR('0.17922764416058368')))AND(NULL)))AND(NULL)))AND(0.2977057758007875))) BETWEEN (CASE 0.5823525003823639  WHEN '\r秚<k灜t\[' THEN NULL WHEN NULL THEN NULL WHEN x'0202' THEN NULL WHEN x'' THEN NULL WHEN x'' THEN x'' END) AND ((NULL IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE DATE('' COLLATE BINARY, CAST(NULL AS TEXT), CASE '()'  WHEN 0.02475060252874317 THEN '.2?w&I*' ELSE 'p[' END); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=447470833 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1215030776 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(NULL AS REAL) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '9223372036854775807 -1948192426 sz=993332551 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.20521817222595118)>((~ (1.48995244E9)))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-1589480205 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '1933252131'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-508623631 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=160951161 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TRIM(NULL))<(((NULL)==(0Xffffffffb4f0beba)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '780175479'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY(DISTINCT 0.20362105713308976) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-1737015882'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.14561332676103778 COLLATE BINARY) BETWEEN ((0.3265407841280735 IN ())) AND (COALESCE(DISTINCT 0.8557450496921573, x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LAST_INSERT_ROWID(); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '2 2 sz=1755283460'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'c3ad')OR('-1554619532')))AND(275933556))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=-508623631 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0x593887f8) NOT BETWEEN (x'2581') AND (NULL)) IN (0.864533235756204 COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '141162680 866285775 sz=1933252131'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.8449327662854874))>=((0.6732951952371362))) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-1866163780'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '447470833 sz=915327313'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '2 -2118051421 sz=2103444053 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(-957610591 COLLATE NOCASE AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-848757806 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-795939649 -432673064 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((0.8801853768942628)<=(NULL)))OR(((('-1081586882'))<((0.006873694726789781))))))OR(0.9395061860896488)))AND((NOT (0.9079544293917917)))))AND(NULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.5276094958291601 IN ('1')))AND(x'' COLLATE RTRIM)))AND(((x'eeea') BETWEEN (0.3265407841280735) AND (0.8902770119693915)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '2 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '780175479 -1554584455 sz=-258316883'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_remove((((NULL))<>((0.0855716549384894))), (((0.03751623809605653))<=((NULL))), ((9.93332551E8)>>(x'')), ((0x566c2521) IS TRUE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('1/')|(0.0980936730392441)) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE WHEN 0.9476291173103913 THEN 0.7029485065879468 WHEN NULL THEN '-757826462' WHEN NULL THEN 0xffffffff81c119a3 END AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1609776735 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('1187812499')AND('C1x')))AND(0.1229144549595298)))AND('B|^q')))OR(NULL))) BETWEEN (((NULL) BETWEEN (NULL) AND (x''))) AND ((('-2131792373')IS(0.4085180391262708)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((x'' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=123360282'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) BETWEEN ((CASE 'y'  WHEN '-508623631' THEN x'' WHEN '-1488504148' THEN 0X27243f96 WHEN 'zyF\B?G' THEN 0.11170702562017698 ELSE '275933556' END)) AND (((((0X24d96cbe))>=((0X5d03e0ad)))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 sz=-578200474 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1686881741 572486295 sz=1437472180 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 sz=985876774'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((('-7223008')AND('327993603')))AND('-1965634742')))AND((((('')OR('-666619975')))AND('-565506869')))))OR(((x'')+(x'e870')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-2118051421 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '2'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(TRIM(x'') AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-508623631 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'4a4b' AS INTEGER))+(CAST(NULL AS REAL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1259290950 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE x'b04ccc7c'  WHEN x'' THEN 6.56686998E8 ELSE NULL END AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((('')AND('zyF\B?G')))OR('1437472180'))))<((((((((((-9.57610591E8)OR('380115915')))OR(0.5404081684676592)))AND(NULL)))OR('0.5823525003823639'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('-1792875265')AND('')))AND('213509121')))OR(NULL COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL, NULL, NULL)) BETWEEN (((('327993603')GLOB(x'64ad')), (((NULL, '-1879587546', 0xffffffffd08eecbf)) NOT BETWEEN ((x'c833', 0xffffffffff91c920, x'')) AND ((-3.97648004E8, 0.5276094958291601, x''))), ('-1554584455' IN ('qD', NULL)))) AND (((((NULL)) BETWEEN ((0X25427816)) AND ((x''))), x'78ac' COLLATE NOCASE, CASE ''  WHEN NULL THEN 0.2081065234277324 WHEN -957610591 THEN 2.75933556E8 WHEN '0.5404081684676592' THEN '-1468237774' END))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((COALESCE(0.5018201214477241, 0.1849160138444248))IS((x'1874' IN (0.5991529439989418, 1.60951161E8)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '1842884886 1624281749 sz=89104721 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(0.13080598648151553) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((x'f2ef' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1822207578 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=703174800 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1965634742 2 sz=1155322938 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1163185588 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('1755283460')<=(CAST(x'' AS TEXT))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=1949939437'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN COALESCE(DISTINCT '1074212121', '') THEN json_array(-1468237774, NULL, '4쭊彼Uxke', 0.8902770119693915, '', x'd835') WHEN (((('')OR(-8.48757806E8)))AND(NULL)) THEN CAST(-2110021002 AS TEXT) WHEN CASE WHEN '-2131792373' THEN NULL ELSE NULL END THEN (((NULL))<(('蹣솹F%5[ae9'))) ELSE LAST_INSERT_ROWID() END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '806291863' THEN NULL ELSE 144797573 END) BETWEEN ('LUC\n' COLLATE BINARY) AND (UPPER('-2024665180'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=447470833 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(DISTINCT ((('1686881741'))<=(('-875796433')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1394680607 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-2068680345'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_array_length((NULL IN ())); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('1041029600')) BETWEEN ((x'')) AND (('-1332805717'))) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-9223372036854775808 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 0x612aae4f COLLATE RTRIM THEN ((('-1554619532'))>=((NULL))) ELSE (('k!গ Kea崠)') NOTNULL) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '1155073006 855710274 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(7.65191407E8 AS INTEGER))IS NOT(((675314473)%('985876774')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST('-1320029656' AS TEXT) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1159810114 1734200704'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (CASE WHEN NULL THEN NULL ELSE '' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.8801853768942628 AS TEXT))<(CASE WHEN NULL THEN -2027214940 ELSE 6.2511311E8 END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=1395485660 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1965634742 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '2 945535099 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((+ (0.6762077232645667)) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TRIM('0.0980936730392441', -1194095802))>(((0x1942dad4) NOT BETWEEN (NULL) AND ('[]')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=1458863038 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('0{')) NOT BETWEEN ((((('-1687551341'))<((NULL))))) AND (((x'' IN ())))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '2 0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1648834713 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=825028171 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1081586882 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('()')>>(x'')))>('0.11170702562017698' COLLATE NOCASE)); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '2 4 sz=-683328407 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 0 sz=-2104557612 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE HEX(DISTINCT load_extension('808755217', x'')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0xffffffffbab2c590)OR(1.7976931348623157E308)))OR(NULL)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-685709127 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=309535834 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('')|(x''))) BETWEEN (((0xffffffffbab6cbe6) IS FALSE)) AND ((((-1628744075, 0x27243f96, ''))<=((NULL, NULL, 0.6587485198291352))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 270476074 sz=-2131792373 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('p[' COLLATE RTRIM IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS(DISTINCT (((('-1372481303')OR(NULL)))AND(NULL))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1090385061 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (PRINTF(NULL) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=703724343'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=1624281749'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1343175783 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(((((((((NULL)AND(NULL)))AND(NULL)))AND('1315282874')))AND(0.6372130401462841))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ROUND((x'' IN ()), CAST(-1818918782 AS INTEGER)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(NULL AS TEXT) IN (CAST(x'cc0ac6b4' AS INTEGER), SUBSTR(0.6992186663543368, 'fminutesE'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-397648004 sz=96983743 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((0.5570153807397357)AND(((x'')/(NULL)))))OR(x'')))OR(NULLIF(NULL, 0.12256722936979225))))AND(CASE 0xffffffff823ba276  WHEN x'' THEN '0.5276094958291601' END)))AND(CAST('0.5823525003823639' AS REAL))))OR(0.28906345513965104 COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=706048008'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY((((('zyF\B?G')OR(x'')))OR(NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1517624812'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (x'6f04')) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=498492609'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE GLOB(CASE WHEN -8.48757806E8 THEN 'c.' WHEN '-1423136670' THEN '*' WHEN x'bc45b2d8' THEN 682237153 END, ('1560899676' IN ())); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-1490350217 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE WHEN '' THEN x'' ELSE x'' END)AND((('\r뷴bNs.') NOT BETWEEN ('') AND (NULL)))))AND((+ (x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((-1090844615) BETWEEN ('1136746524') AND (x'')) THEN ((x'')LIKE(0.12319873695370132)) WHEN (((('')OR(0.7455119585656919)))OR('656686998')) THEN (((((((((((('675353212')AND('141162680')))OR('+e8vY7G*1')))OR(x'')))AND(x'5cc3')))AND('U-8 *V閈')))AND(x'')) WHEN UNLIKELY(NULL) THEN (+ (x'')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '249734100 sz=-848757806 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1915186599 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 0 sz=-497624093 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-231780649 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=145374761 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1837675197'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('227894201') NOT NULL) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'868d')<=(x'')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=656686998 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((-260488442, 'gR', '')) NOT BETWEEN ((0.2081065234277324, x'4d950ee7', x'')) AND ((x'', '-1983850694', 0.547623709171314))))OR((('0.20362105713308976') NOT NULL))))OR(-1589480205)))AND(((-9.57610591E8) BETWEEN ('+d0') AND ('.')))))OR(0.9529106213446471 COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) BETWEEN ('2094656280') AND (NULL)))&(0.7873009279103074)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '447470833'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-685348045 sz=-432673064 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((0x187fa3d9) NOT BETWEEN ('1019751293') AND ('')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1707151383 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((0x7a8ed2f6)<(0.2891260650918306)) THEN ((x'baa4') BETWEEN ('') AND (NULL)) ELSE ((NULL)IS NOT(x'')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '4 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(NULL AS BLOB) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '-1394178117 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '380115915 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL) IS FALSE) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=9223372036854775807 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('321785624') NOT BETWEEN (x'') AND (x'')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST(NULL AS REAL))OR((('275933556')%('642872713')))))OR((~ (0Xffffffffb47a9f02)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)*(0.3510791699236683)))%((((((((((((('-880862582')AND(535249926)))AND('5428715')))AND(0.7097331248049177)))OR(0x75a541a)))OR(0x40072d19)))OR(x'33fa')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1325920394 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-923798126'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1450982764 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('0yzLJ')|(NULL))) BETWEEN (CASE ''  WHEN 0Xffffffffbf884b3e THEN x'' END) AND (UPPER(0Xffffffffa7473aac))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1641744778 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1104541116'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '-2068680345'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '2 sz=55282921 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '4 sz=-592862913 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=2012121197 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS REAL)) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '-1336982108 sz=-238811129'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((-1.25929095E9)OR('')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=213509121 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 2 1 sz=337502952 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((((((x'9860' IN ()))AND(json_extract('', x'', '-397648004', 0.11170702562017698))))AND((('') NOT BETWEEN (2119989522) AND (0.3138747943429233)))))OR((+ (NULL)))))AND((-1.627001064E9 IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('-1683744589') NOT NULL) THEN (((6.75353212E8))<=((NULL))) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((x'a0ee')/(NULL))  WHEN ((x'')||('-1259290950')) THEN LIKELY(DISTINCT x'') ELSE x'' COLLATE BINARY END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-208329548 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1147638449'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1998371822 1323650240 sz=2111328753 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1394183306 1807923345 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-381435211 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-1589579855 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('fminutese' COLLATE RTRIM IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '41041527 sz=-924936841 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1892089533 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((('1899789277'))!=((-7.57826462E8))))); -- 3ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1057714268 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') ISNULL)) BETWEEN (((x'') ISNULL)) AND (((('-742697172'))<=((0.34042351691310446))))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=834801467 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(((0.8033182570234382) BETWEEN (0.583597961465747) AND (x''))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST('' AS TEXT))OR((+ ('e')))))AND(UNLIKELY(DISTINCT -924294458))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOT BETWEEN (0.20836097324933234) AND (807686694))) BETWEEN (('-1479642817' IN ())) AND (NULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1648834713 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((UPPER(NULL))*((('1215030776') NOT BETWEEN (1685716954) AND (x'8825')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'' IN ()))OR(((('', 0.738759214507475, NULL))>=(('-1614841240', '-2080628372', NULL))))))AND(UPPER('-542548269'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(-1446109756) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '423811796 -2021042856'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NOT (0xffffffffd9883d1f))))<((x'61a3'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1481547792 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=93114445 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE 0.7065358507043404  WHEN (+ (NULL)) THEN ((((x'd98a38d8')OR(2.100014863E9)))OR(0xffffffffd84b197b)) WHEN ((NULL)%(NULL)) THEN NULL WHEN DATETIME(NULL, 0.7729767676047143, '') THEN CASE NULL  WHEN 597114778 THEN NULL ELSE '-1359082119' END WHEN (~ (0.8677774603411396)) THEN CASE '141162680'  WHEN NULL THEN '-1e500' WHEN NULL THEN 661371709 WHEN NULL THEN NULL WHEN 0xffffffffc5100580 THEN x'' WHEN x'cbae' THEN 0.6338778037730202 END WHEN ((-1.844215779E9) NOT BETWEEN (0.5335451535776503) AND (x'')) THEN CASE x''  WHEN x'baf7' THEN x'' END ELSE NULL END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 'Yl?nXo#w{'  WHEN 1864996232 THEN 1420883479 ELSE 0.7783189302668613 END)*(COALESCE(DISTINCT '[?W cTf', 'ﴓLL뛭-4090937253107459126T-959224097458509357:2334251816114984708:326-788:1938T201T749T}O'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1967862463 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1728294025'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT BETWEEN (x'') AND (x'')))OR(NULL COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CAST(0.9239403356860878 AS REAL) THEN ((((NULL)OR('')))AND(NULL)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1864996232 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('!')) BETWEEN ((((x'0d66') ISNULL))) AND (((((NULL, 0.9236690971957148, '1040553632')) NOT BETWEEN ((-0.0, NULL, 29839891)) AND ((-8.48757806E8, '1560899676', 0.8157922869179428)))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((- (0.5788715633434675)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-2057548338 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 703174800 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-1162367542 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-7223008 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) NOT BETWEEN ((x'' COLLATE BINARY)) AND ((0.9830973848284158 COLLATE BINARY))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1534016440 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1397738231 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-2122063109'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '518855835 sz=-508623631 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((TRIM(DISTINCT x''))AND(((9.45535099E8)AND(NULL)))))OR(((x'')!=(0.05863268760795659)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'c4ef') BETWEEN (0.04222059079401941) AND (x''))) BETWEEN (((NULL)>>(NULL))) AND (CAST('123360282' AS TEXT))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1828503642 sz=221633518 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '-2118051421 1504003631 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((COALESCE(DISTINCT 0.3618993035185949, 0.5601354604140887))AND(((0X5f32f745) NOT BETWEEN (NULL) AND ('-1344020982')))))AND('1489952440')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '1449927969'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1081586882 0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1187812499'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2032137996 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=866285775 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=905822137 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((7.031748E8)) BETWEEN ((NULL)) AND ((1049852439))))=(((('')) BETWEEN (('W')) AND (('-1648834713'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1858320587'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 sz=561051939 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1558194370'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (0.34042351691310446))) BETWEEN ((((NULL))<((0.5276094958291601)))) AND ((((423811796)) NOT BETWEEN ((NULL)) AND ((x'640b'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=68855562 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=2000741868 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ ('rYP')))LIKE((x'' IN (0.4272485420773322)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=275933556 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1975734563 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('-250101699' IN ()) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'849f' COLLATE NOCASE AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN '' COLLATE RTRIM THEN CAST(0.2290577434737845 AS TEXT) ELSE CASE WHEN '' THEN '0.3038930577064266' WHEN x'' THEN x'' WHEN '213509121' THEN '1882965238' ELSE '96983743' END END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=814152590 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-806994480 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-649634768'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-508623631 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('0.4272485420773322') NOT BETWEEN ('') AND (NULL)))%(CAST('0.3265407841280735' AS INTEGER))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=2140413107 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'74ed') BETWEEN (0xffffffffe71177af) AND (7.39115572E8)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') IS TRUE))<>(((0.2844094754969838)IS NOT(x'876b')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '2 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (-480108217))) NOT BETWEEN (((NULL) BETWEEN (2037391909) AND ('6\2q'))) AND (((NULL)IS NOT(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 -253443540'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.9240860958073697)) NOT BETWEEN (((('')=(NULL)))) AND ((((NULL) NOT BETWEEN (x'9cdc') AND (1.994947034E9))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY(DISTINCT (('')OR(NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-493139705'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-397648004 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-897092794 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '1573634798 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 0 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1400389031 2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1127616952 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=1278120949 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((x'') NOT BETWEEN (x'') AND (x''))  WHEN 0.4025912365655807 COLLATE NOCASE THEN CAST(0.6795177703418283 AS NUMERIC) ELSE CAST(0.6587485198291352 AS TEXT) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('\r_' IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-1163185588 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=1735652720 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE LIKELY('')  WHEN (('惠xvni㝺M*') IS FALSE) THEN (((x'')) NOT BETWEEN (('562780417')) AND ((0.17521737511626))) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (NULL COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=887297995'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '592899650 sz=-432673064 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1439981061 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 sz=1555082858 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((NOT ('''閫nowo2')) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-1551507435'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((((0.5211068448208531)OR(NULL)))AND(NULL))  WHEN MAX(NULL, NULL) THEN CAST(0.1789964349709655 AS BLOB) WHEN (((NULL))>((NULL))) THEN ('-2068680345' IN ()) WHEN (NULL IN ()) THEN (('-660319341')+(NULL)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1081586882'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE '-622811068'  WHEN NULL THEN '75544735' ELSE 0.9147388126911947 END) BETWEEN (-1.648834713E9) AND (((x'd134')<<(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.2290577434737845; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL) IS TRUE))AND(((NULL) ISNULL))))OR(((((((((NULL)AND('hq蟸v}U')))AND(x'adc26404')))OR(x'')))AND('now*f')))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((NULL IN (0.7172163876661474)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-1715877892 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=-783524180 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.6420161181677928 AS TEXT))<<(((x'') BETWEEN (NULL) AND (-2110021002)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.003567603971307398)GLOB(x'aef3')) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE '-571230266'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')=(((NULL) BETWEEN ('c꿼DK90)u]') AND (0xffffffffd5516f9c)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1080677122 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=213509121 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=453623146 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((('-1394183306')+('Sy')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-1918369791 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.8774348848070932)LIKE('-7223008'))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('*qMU{H쥑/' IN (x'', NULL)))GLOB(NULL COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('I㻧')AND(141162680)))AND(NULL)) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1160667767 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '-539321782 0 sz=-1172278111 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-2072357000 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '2'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST('' AS REAL) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1488504148'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-96669694 sz=226987520 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '1146703291'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)>=('-458884682')))IS NOT(-1866163780 COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.9113935873035479)==(0.05354685896893252))) NOT BETWEEN ((((0x6802f6ef))=((x'')))) AND ((((x'')) BETWEEN (('173075215')) AND (('1949939437'))))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((TRIM(''))AND(0.12975152711644833 COLLATE BINARY)))AND(CAST(1267293712 AS REAL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 0 0 sz=41771730 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-1081586882 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=1826071476 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(-1565444951 AS REAL) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE PRINTF(NULL) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (IFNULL(x'581f', x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ('1841085701' COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-666166917'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (CAST('' AS TEXT))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1857895425 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-102983922 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.23079712288041687, NULL, 'auO16', '532323826', 0.06548861573066733)) BETWEEN ((0.9147388126911947, '-897035318', 0.4025912365655807, NULL, 0.5213653200726899)) AND ((160951161, 0.8388969925890407, NULL, NULL, 'LUC\n')))) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-2002950030'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((((x''))>((x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL) BETWEEN (x'b6a8') AND ('1686881741')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1625533039 sz=-6058319'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=1609776735'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 sz=-1332805717 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(((NULL) NOT NULL), '-321481737' COLLATE BINARY); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((0.6520513339967915)*(0.006474689052358151))  WHEN CASE 0.8371841137933296  WHEN x'705d' THEN '0.17922764416058368' END THEN ((13227802) NOT BETWEEN ('0.8774348848070932') AND (NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE HEX(((((2.75933556E8)AND(0.3933856813107167)))OR(0.8715603806836225))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((('1331548224')AND(NULL)))OR(CASE WHEN NULL THEN 1.496877048E9 WHEN 0.2045309542741487 THEN '5^8{' WHEN NULL THEN NULL ELSE NULL END)); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((((0.7746978199984683))>=((x''))))OR(((0.379883058118044)/('')))))OR(CASE -637017280  WHEN 'years' THEN x'' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '985876774 sz=424519654 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0Xffffffff8ac0cce4, NULL, 0X11af05a6)) NOT BETWEEN ((NULL, 0.014823406185599741, NULL)) AND ((x'', NULL, x''))) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((((x'ccfeaeea')OR(x'')))OR('{zS')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-743096360 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-930808679 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1043413234 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1216519349 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('1949939437' AS BLOB)) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-174481313 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-1660628728')<=(x'')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=173075215 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (NOT (0.5911512615083341)) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '1207175342 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (0.12975152711644833))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '422197813 sz=797137214 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '824711967 0 sz=173075215 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=253308054 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1485949978 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=1560899676'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE RTRIM)|('-22301678' COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1803245751'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=319580602'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '759337254 0 sz=2140413107 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-416606667'))==((x''))) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE 0.495837021329426 COLLATE RTRIM  WHEN ((-1e500) IS FALSE) THEN NULL ELSE 0x187e2d38 COLLATE BINARY END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '2 1979931365 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)/('219897120')) IN ()); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-872605501'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0X733b1623; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-1560939474')OR(NULL)))OR(x'')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2026034101 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-904891351 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-786631046 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-666619975 22095155 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(DISTINCT (('')IS NOT(NULL)), ((x'') BETWEEN ('1313058398') AND (0.738759214507475))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1343189336 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '1597139224 178941472 sz=1755283460 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0x37804706; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1801884797 -1844215779 sz=-1259290950 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=580747002 noskipscan'); -- 3ms;
DELETE FROM sqlite_stat1 WHERE CASE ((-2131792373)OR(x''))  WHEN ((NULL) ISNULL) THEN ((1.864996232E9) NOTNULL) ELSE CASE 2.140413107E9  WHEN x'41ba' THEN 0X424a246b END END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-2098811521 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((('')==(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 0 sz=431148217 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '275933556 -783181749 sz=762526036 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=1006165620 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1129225958 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((1665357504 IN (x'8d5b')) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('ta''(')IS('')))AND(((((((((x'')OR('703174800')))AND(0x4521d9d3)))OR('-1792875265')))OR(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 sz=-548169922'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '1104100933'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (((x''))<=((NULL)))  WHEN 0.23723995630897798 THEN (x'' IN ()) WHEN ((((((((0.3827827257125789)OR(NULL)))OR(NULL)))AND('945535099')))AND('28TL')) THEN CAST(NULL AS INTEGER) WHEN ((0.18634424850831366)<>(0.8389420224190997)) THEN (('*,') IS TRUE) ELSE ((((0.9927592844790275)AND(NULL)))AND('秚GmW-j')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 sz=1206517158'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '66622679 4 sz=123360282 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1704740888'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1985168003 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '993332551 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1793112247 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.5639284058544024)>(0.6360509191152397)))>((((x'', 0xffffffffd3fc6c45, 0.9983906255489484)) NOT BETWEEN ((x'', x'', x'')) AND ((NULL, NULL, NULL))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (x'dc69')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-1844215779 sz=-1860245013 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) NOT BETWEEN ((CASE NULL  WHEN '0.0' THEN -1762776463 ELSE '' END)) AND (((0.7122717985712216 IN ())))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (~ (0x4b4f2ab8))  WHEN NULL THEN (('5')&('I\n 휢>?')) ELSE ((0.8902770119693915) BETWEEN (1908425277) AND (x'1c41')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-322759759'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1008634168 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '0.8557450496921573'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1624161748 sz=1569034246'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-1.554619532E9)>(2.1989712E8)) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)>>(CASE WHEN 0.7873009279103074 THEN '<U⾘蜝/[+ga' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('1449927969') BETWEEN (0Xffffffff9a6cd7e6) AND (x'')) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(SQLITE_COMPILEOPTION_GET(1155322938) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-1737015882 sz=1971811598 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=993332551 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '937292812 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('O47#fE\r	') NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((SQLITE_VERSION()) BETWEEN ((('-1611194802')!=(x'4a7e02f4'))) AND (TYPEOF(DISTINCT 4.23811796E8))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CASE WHEN NULL THEN x'' ELSE '-255736467' END  WHEN NULL THEN json('!\n') ELSE CASE WHEN x'' THEN x'' WHEN 'U[3yVHWz' THEN NULL WHEN '213509121' THEN 'p(u[' ELSE '<(U[\raN' END END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((SQLITE_COMPILEOPTION_GET(x''))>>((- (0.6076128084862922)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')>>(0.29974858107749147)) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '436346735 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=1323650240 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=160951161'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '887717006 -666166917 0 sz=-703190817 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1498352026 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('447470833')LIKE(0.19857576351614004)) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '2 0 sz=-535260286 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 -1001341085 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-795939649 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'') IS FALSE)))=((((x'') IS FALSE)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 sz=-230460912'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 sz=1 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-1734161546')OR('')))||(HEX(0.5276094958291601))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-565506869'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-565506869') NOT BETWEEN (NULL) AND (0.8256044370492085)))/((~ ('v\n')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '1842884886 1560899676 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '2056540462 sz=-242841079'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((NULL)<('380115915')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 sz=866285775'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=1294562172'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-619888452 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS REAL))OR(ABS(NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((x'')LIKE(NULL)) THEN CASE WHEN 0.7183253567594061 THEN '' END ELSE (((('1453886774')AND('800174163')))AND(0.982189151286245)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-1983518381)AND('')) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=321787279'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((STRFTIME(0.5475998076681278, x'', x''))>>(((NULL) IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-1975892701 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1887799782 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1874850712 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=423811796 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1040553632'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((NULL) NOT BETWEEN (x'') AND (7.65191407E8)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '2092085218 sz=-47505079'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE DATE(CAST('-397648004' AS NUMERIC), NULL, COALESCE(NULL, 0.8294748459566266), (0.8918905546793862 IN (0.5018201214477241, 0.2926651704885961)), (((-6.66619975E8))=((x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-1270161326 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'3410'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0.75820924865128 IN ()) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((0.12516259876581604) NOT BETWEEN (-1.879587546E9) AND ('1154394846'))  WHEN CASE WHEN NULL THEN 'Gs(' END THEN NULLIF(DISTINCT '-1627001064', '666508401') ELSE LIKELY(NULL) END; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2094063482 sz=-397648004'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (x'')) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1492520838 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((0.9482678110202502) BETWEEN (0.0855716549384894) AND (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1903566612'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1498074086'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=454189041'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-2072357000 0 sz=932705450'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-511920775'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '912384321 sz=-2100515038 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') BETWEEN (NULL) AND (2094656280))) NOT BETWEEN (((((0.7157902045001049)OR(0xfffffffff91436e2)))AND(0.1463249715764614))) AND ((- (x'd93a')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((NULL) IS TRUE)  WHEN (('ȴ3') BETWEEN ('-350192619') AND (x'3eba')) THEN TIME('', NULL, NULL, '1253095114', 0x4ed6e89e) ELSE (((-1.314270354E9, 0.3463012497749207, 0.4556346571831634)) BETWEEN ((NULL, NULL, x'5e33')) AND ((0.5485619054052235, x'', NULL))) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '2 0 sz=1328972008 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) NOT BETWEEN ((NULL COLLATE BINARY)) AND ((SQLITE_COMPILEOPTION_GET(x'def1')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-198868235 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=489884548 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.7305409987421833)<<('-876306923')))OR(((0.3689126127918848)<(x'')))))AND('B|^Q')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1425541534 sz=-1322727848'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1163606008 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') ISNULL) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-1841244936'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('1128457541')==(0.13080598648151553)))OR((+ (x'1620')))))OR(((0x197a092) NOTNULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((0.5129594774326925)AND(0.3618993035185949)))AND(0.7119385936767281)))OR('')))OR(x''))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-2110021002 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-666166917 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '-1993532071 287139423 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)>=(NULL))) NOT BETWEEN (0.8379574327397916 COLLATE NOCASE) AND (CAST(0.031625462001996785 AS TEXT))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 0 sz=-1844215779 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.11284740653622072))<((-61779988))) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0x40aa0f5a)OR(0.9856130745530255)))OR(0.637614937852596)))*(((0.2679847755468828)||(0.5997127273153549)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS(DISTINCT CAST('.**\n砖' AS BLOB)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=942259330 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '2 0 sz=727846909'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '1251621752 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL))!=(('619297863')))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=1864996232 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.9217325876993663) IS TRUE) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((x'6a93')) NOT BETWEEN (('')) AND ((1736877801))) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-757826462 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 985876774'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (998104536)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=223084198'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES (x''); -- 0ms;
UPDATE vt1 SET c0=NULL, c0=NULL, c0=0.937856067486584; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
END TRANSACTION; -- 0ms;
END; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '39703'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=('C7') WHERE vt0.c0 COLLATE RTRIM; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 1ms;
PRAGMA main.checkpoint_fullfsync = false; -- 0ms;
REINDEX; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
DROP TABLE vt1; -- 0ms;
END TRANSACTION; -- 0ms;
PRAGMA integrity_check; -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c2, c1) VALUES ('W?', NULL, '-1332805717'); -- 0ms;
PRAGMA temp.incremental_vacuum; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR ABORT INTO rt0(c2) VALUES (0xffffffffdfd0b002); -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES ('1006165620'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=7'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
UPDATE OR IGNORE vt0 SET c0=NULL; -- 0ms;
PRAGMA defer_foreign_keys; -- 0ms;
REINDEX; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '908'); -- 1ms;
COMMIT; -- 0ms;
CREATE TEMP VIEW  IF NOT EXISTS v0(c0) AS SELECT DISTINCT COALESCE(SUM(vt0.c0), CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN NULL ELSE rt0.c1 END, SUM(rt0.c2), (+ (rt0.c2))) FROM vt0, rt0 WHERE (CAST(CASE WHEN NULL THEN NULL WHEN 0X212135a0 THEN 0.7108500184329998 WHEN 0.37028537342757406 THEN 0x5c8ef989 WHEN 0x6dceb445 THEN x'' WHEN x'1ba2' THEN x'0a2e' END AS NUMERIC)); -- 1ms;
UPDATE OR IGNORE vt0 SET (c0, c0)=(NULL, NULL); -- 0ms;
DROP VIEW v0; -- 0ms;
UPDATE vt0 SET (c0)=(NULL) WHERE (+ (vt0.c0)) COLLATE NOCASE; -- 0ms;
END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE SQLITE_COMPILEOPTION_GET(('-1792875265' IN ())); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ''); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '33215'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=3'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 0); -- 0ms;
REINDEX; -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0, c1 UNINDEXED); -- 2ms;
INSERT OR FAIL INTO rt0(c2, c1, c0) VALUES (x'', NULL, NULL); -- 0ms;
PRAGMA main.reverse_unordered_selects; -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 0); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '63442'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1435425781); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-1372276676,13');\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1412690135); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1259290950);\n; -- 1ms;
PRAGMA wal_checkpoint(TRUNCATE); -- 0ms;
UPDATE vt0 SET c0='', c0=0.0893935714175439 WHERE json_type(IFNULL(vt0.c0, vt0.c0)); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 5); -- 1ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
UPDATE rt0 SET (c2, c2)=('F/', '572486295') WHERE rt0.c0 COLLATE NOCASE; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=882375892,3');\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('automerge=1'); -- 0ms;
UPDATE OR REPLACE rt0 SET c1=0.3754429730990345; -- 1ms;
UPDATE OR IGNORE vt0 SET c0=NULL, c0=0.48110519678087293; -- 0ms;
PRAGMA temp.legacy_file_format = true; -- 0ms;
INSERT OR REPLACE INTO vt1(c1, c0) VALUES (NULL, 8.06291863E8); -- 1ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT OR ABORT INTO rt0 VALUES ('y', '惠xvne㝺M*', '256847795'), (x'', 0.29514469003894617, 736823352), (x'', '0.6992186663543368', NULL); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0Xffffffffffffffff); -- 1ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 1ms;
UPDATE OR ROLLBACK vt0 SET (c0, c0, c0)=(2.103444053E9, '1599603713', NULL); -- 0ms;
UPDATE OR ROLLBACK vt0 SET c0=NULL WHERE (+ (((vt0.c0)GLOB(vt0.c0)))); -- 1ms;
UPDATE vt0 SET c0=''; -- 0ms;
INSERT OR ABORT INTO vt0(c0) VALUES ('-1160352364'); -- 0ms;
REINDEX; -- 0ms;
ANALYZE temp; -- 1ms;
PRAGMA application_id; -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c2) VALUES ('0.40766892435242896', 0.256578087715963), ('', 'sQkisq'), (1403478711, '1395427599'); -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('automerge=7'); -- 0ms;
ANALYZE main; -- 1ms;
ANALYZE; -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=1051119979,14');\n; -- 0ms;
UPDATE OR ROLLBACK vt0 SET c0=NULL, c0='' WHERE (- (vt0.c0)); -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
INSERT OR ABORT INTO vt0 VALUES (NULL); -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT vt0.c0, rt0.c2, rt0.c0, vt1.c0, rt0.c1, vt1.c1 FROM vt1, rt0, vt0;
SELECT vt0.c0, rt0.c2, rt0.c0, vt1.c0, rt0.c1, vt1.c1 FROM vt1, rt0, vt0 WHERE ((((vt1.c0)) BETWEEN (((- (vt0.c0)))) AND ((vt1.c1 COLLATE RTRIM)))) UNION ALL SELECT vt0.c0, rt0.c2, rt0.c0, vt1.c0, rt0.c1, vt1.c1 FROM vt1, rt0, vt0 WHERE ((NOT ((((vt1.c0)) BETWEEN (((- (vt0.c0)))) AND ((vt1.c1 COLLATE RTRIM)))))) UNION ALL SELECT ALL vt0.c0, rt0.c2, rt0.c0, vt1.c0, rt0.c1, vt1.c1 FROM vt1, rt0, vt0 WHERE ((((((vt1.c0)) BETWEEN (((- (vt0.c0)))) AND ((vt1.c1 COLLATE RTRIM)))) ISNULL));
SELECT vt0.c0, rt0.c2, rt0.c0, vt1.c0, rt0.c1, vt1.c1 FROM vt1, rt0, vt0;
SELECT DISTINCT vt1.c0, rt0.c2, vt0.c0, rt0.c1 FROM vt1, rt0, vt0;
SELECT DISTINCT vt1.c0, rt0.c2, vt0.c0, rt0.c1 FROM vt1, rt0, vt0 WHERE (((vt0.c0)>=(vt1.c1)) COLLATE NOCASE) UNION SELECT DISTINCT vt1.c0, rt0.c2, vt0.c0, rt0.c1 FROM vt1, rt0, vt0 WHERE ((NOT (((vt0.c0)>=(vt1.c1)) COLLATE NOCASE))) UNION SELECT DISTINCT vt1.c0, rt0.c2, vt0.c0, rt0.c1 FROM vt1, rt0, vt0 WHERE (((((vt0.c0)>=(vt1.c1)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT vt1.c0, rt0.c2, vt0.c0, rt0.c1 FROM vt1, rt0, vt0;
SELECT ALL rt0.c1, rt0.c0, vt1.c0, rt0.c2, vt1.c1 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c0, vt1.c0, rt0.c2, vt1.c1;
SELECT rt0.c1, rt0.c0, vt1.c0, rt0.c2, vt1.c1 FROM vt1, rt0 WHERE (json_valid(((rt0.c2) IS FALSE))) GROUP BY rt0.c1, rt0.c0, vt1.c0, rt0.c2, vt1.c1 UNION SELECT ALL rt0.c1, rt0.c0, vt1.c0, rt0.c2, vt1.c1 FROM vt1, rt0 WHERE ((NOT (json_valid(((rt0.c2) IS FALSE))))) GROUP BY rt0.c1, rt0.c0, vt1.c0, rt0.c2, vt1.c1 UNION SELECT ALL rt0.c1, rt0.c0, vt1.c0, rt0.c2, vt1.c1 FROM vt1, rt0 WHERE (((json_valid(((rt0.c2) IS FALSE))) ISNULL)) GROUP BY rt0.c1, rt0.c0, vt1.c0, rt0.c2, vt1.c1;
SELECT ALL rt0.c1, rt0.c0, vt1.c0, rt0.c2, vt1.c1 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c0, vt1.c0, rt0.c2, vt1.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING TOTAL(COUNT(rt0.c1)) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (TOTAL(COUNT(rt0.c1)))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((TOTAL(COUNT(rt0.c1))) ISNULL);
SELECT rt0.c0, vt0.c0 FROM rt0, vt0;
SELECT rt0.c0, vt0.c0 FROM rt0, vt0 WHERE (rt0.c2) UNION ALL SELECT rt0.c0, vt0.c0 FROM rt0, vt0 WHERE ((NOT (rt0.c2))) UNION ALL SELECT rt0.c0, vt0.c0 FROM rt0, vt0 WHERE (((rt0.c2) ISNULL));
SELECT rt0.c0, vt0.c0 FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1 WHERE (CAST(((vt1.c1) BETWEEN (vt1.c1) AND (rt0.c0)) AS INTEGER)) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((NOT (CAST(((vt1.c1) BETWEEN (vt1.c1) AND (rt0.c0)) AS INTEGER)))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE (((CAST(((vt1.c1) BETWEEN (vt1.c1) AND (rt0.c0)) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM rt0, vt1;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE (CAST(CAST(rt0.c0 AS INTEGER) AS REAL)) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT (CAST(CAST(rt0.c0 AS INTEGER) AS REAL)))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE (((CAST(CAST(rt0.c0 AS INTEGER) AS REAL)) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2, rt0.c1, rt0.c0, vt1.c1, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt1.c1, vt1.c0;
SELECT rt0.c2, rt0.c1, rt0.c0, vt1.c1, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt1.c1, vt1.c0 HAVING ((SUM(rt0.c1)) IS FALSE) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt1.c1, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt1.c1, vt1.c0 HAVING (NOT (((SUM(rt0.c1)) IS FALSE))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt1.c1, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt1.c1, vt1.c0 HAVING ((((SUM(rt0.c1)) IS FALSE)) ISNULL);
SELECT rt0.c2, rt0.c1, rt0.c0, vt1.c1, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt1.c1, vt1.c0;
SELECT rt0.c2, rt0.c1, rt0.c0, vt1.c1, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt1.c1, vt1.c0 HAVING ((SUM(rt0.c1)) IS FALSE) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt1.c1, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt1.c1, vt1.c0 HAVING (NOT (((SUM(rt0.c1)) IS FALSE))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt1.c1, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt1.c1, vt1.c0 HAVING ((((SUM(rt0.c1)) IS FALSE)) ISNULL);
SELECT rt0.c2, rt0.c1, rt0.c0, vt1.c1, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt1.c1, vt1.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (CASE WHEN ((0.0980936730392441) ISNULL) THEN CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END END) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (CASE WHEN ((0.0980936730392441) ISNULL) THEN CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END END))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (((CASE WHEN ((0.0980936730392441) ISNULL) THEN CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END END) ISNULL));
SELECT ALL rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((vt1.c1) IS TRUE) COLLATE BINARY) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((vt1.c1) IS TRUE) COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c1) IS TRUE) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL rt0.c0, vt1.c1, vt0.c0, vt1.c0, rt0.c2 FROM vt0, rt0 CROSS JOIN vt1 ON CASE ((((((((rt0.c0)OR(0.8244801154616895)))AND(rt0.c0)))AND(rt0.c1)))AND(857408162))  WHEN ((x'') NOTNULL) THEN (((rt0.c1, vt1.c0, rt0.c0)) NOT BETWEEN ((vt1.c1, rt0.c2, rt0.c2)) AND ((vt1.c1, vt1.c1, vt1.c0))) END GROUP BY rt0.c0, vt1.c1, vt0.c0, vt1.c0, rt0.c2;
SELECT rt0.c0, vt1.c1, vt0.c0, vt1.c0, rt0.c2 FROM vt0, rt0 CROSS JOIN vt1 ON CASE ((((((((rt0.c0)OR(0.8244801154616895)))AND(rt0.c0)))AND(rt0.c1)))AND(857408162))  WHEN ((x'') NOTNULL) THEN (((rt0.c1, vt1.c0, rt0.c0)) NOT BETWEEN ((vt1.c1, rt0.c2, rt0.c2)) AND ((vt1.c1, vt1.c1, vt1.c0))) END WHERE (((((rt0.c2)%(vt1.c0)))<(DATE(rt0.c0, vt0.c0, 1075204739)))) GROUP BY rt0.c0, vt1.c1, vt0.c0, vt1.c0, rt0.c2 UNION SELECT ALL rt0.c0, vt1.c1, vt0.c0, vt1.c0, rt0.c2 FROM vt0, rt0 CROSS JOIN vt1 ON CASE ((((((((rt0.c0)OR(0.8244801154616895)))AND(rt0.c0)))AND(rt0.c1)))AND(857408162))  WHEN ((x'') NOTNULL) THEN (((rt0.c1, vt1.c0, rt0.c0)) NOT BETWEEN ((vt1.c1, rt0.c2, rt0.c2)) AND ((vt1.c1, vt1.c1, vt1.c0))) END WHERE ((NOT (((((rt0.c2)%(vt1.c0)))<(DATE(rt0.c0, vt0.c0, 1075204739)))))) GROUP BY rt0.c0, vt1.c1, vt0.c0, vt1.c0, rt0.c2 UNION SELECT ALL rt0.c0, vt1.c1, vt0.c0, vt1.c0, rt0.c2 FROM vt0, rt0 CROSS JOIN vt1 ON CASE ((((((((rt0.c0)OR(0.8244801154616895)))AND(rt0.c0)))AND(rt0.c1)))AND(857408162))  WHEN ((x'') NOTNULL) THEN (((rt0.c1, vt1.c0, rt0.c0)) NOT BETWEEN ((vt1.c1, rt0.c2, rt0.c2)) AND ((vt1.c1, vt1.c1, vt1.c0))) END WHERE (((((((rt0.c2)%(vt1.c0)))<(DATE(rt0.c0, vt0.c0, 1075204739)))) ISNULL)) GROUP BY rt0.c0, vt1.c1, vt0.c0, vt1.c0, rt0.c2;
SELECT ALL rt0.c0, vt1.c1, vt0.c0, vt1.c0, rt0.c2 FROM vt0, rt0 CROSS JOIN vt1 ON CASE ((((((((rt0.c0)OR(0.8244801154616895)))AND(rt0.c0)))AND(rt0.c1)))AND(857408162))  WHEN ((x'') NOTNULL) THEN (((rt0.c1, vt1.c0, rt0.c0)) NOT BETWEEN ((vt1.c1, rt0.c2, rt0.c2)) AND ((vt1.c1, vt1.c1, vt1.c0))) END GROUP BY rt0.c0, vt1.c1, vt0.c0, vt1.c0, rt0.c2;
SELECT rt0.c0, vt0.c0 FROM rt0, vt0 NATURAL JOIN vt1 GROUP BY rt0.c0, vt0.c0;
SELECT ALL rt0.c0, vt0.c0 FROM rt0, vt0 NATURAL JOIN vt1 GROUP BY rt0.c0, vt0.c0 HAVING TOTAL(SUM(TOTAL(AVG(TOTAL(GROUP_CONCAT(vt1.c0)))))) UNION ALL SELECT rt0.c0, vt0.c0 FROM rt0, vt0 NATURAL JOIN vt1 GROUP BY rt0.c0, vt0.c0 HAVING (NOT (TOTAL(SUM(TOTAL(AVG(TOTAL(GROUP_CONCAT(vt1.c0)))))))) UNION ALL SELECT ALL rt0.c0, vt0.c0 FROM rt0, vt0 NATURAL JOIN vt1 GROUP BY rt0.c0, vt0.c0 HAVING ((TOTAL(SUM(TOTAL(AVG(TOTAL(GROUP_CONCAT(vt1.c0))))))) ISNULL);
SELECT ALL * FROM vt1, rt0, vt0;
SELECT ALL * FROM vt1, rt0, vt0 WHERE (vt0.c0) UNION ALL SELECT ALL * FROM vt1, rt0, vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL * FROM vt1, rt0, vt0 WHERE (((vt0.c0) ISNULL));
SELECT ALL * FROM vt1, rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0, vt1;
SELECT DISTINCT * FROM rt0, vt0, vt1 WHERE (CASE ((((rt0.c2)AND(NULL)))AND(rt0.c2))  WHEN ((vt1.c1)LIKE(vt1.c1)) THEN ((vt1.c0) NOT NULL) END) UNION SELECT DISTINCT * FROM rt0, vt0, vt1 WHERE ((NOT (CASE ((((rt0.c2)AND(NULL)))AND(rt0.c2))  WHEN ((vt1.c1)LIKE(vt1.c1)) THEN ((vt1.c0) NOT NULL) END))) UNION SELECT DISTINCT * FROM rt0, vt0, vt1 WHERE (((CASE ((((rt0.c2)AND(NULL)))AND(rt0.c2))  WHEN ((vt1.c1)LIKE(vt1.c1)) THEN ((vt1.c0) NOT NULL) END) ISNULL));
SELECT DISTINCT * FROM rt0, vt0, vt1;
SELECT ALL rt0.c0, rt0.c1, vt1.c1 FROM rt0, vt1, vt0 GROUP BY rt0.c0, rt0.c1, vt1.c1;
SELECT rt0.c0, rt0.c1, vt1.c1 FROM rt0, vt1, vt0 WHERE (CASE ((vt1.c1) BETWEEN (rt0.c2) AND (vt1.c1))  WHEN ((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c0)))OR(vt0.c0)))OR(rt0.c2)) THEN (vt1.c0 IN ()) END) GROUP BY rt0.c0, rt0.c1, vt1.c1 UNION SELECT ALL rt0.c0, rt0.c1, vt1.c1 FROM rt0, vt1, vt0 WHERE ((NOT (CASE ((vt1.c1) BETWEEN (rt0.c2) AND (vt1.c1))  WHEN ((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c0)))OR(vt0.c0)))OR(rt0.c2)) THEN (vt1.c0 IN ()) END))) GROUP BY rt0.c0, rt0.c1, vt1.c1 UNION SELECT ALL rt0.c0, rt0.c1, vt1.c1 FROM rt0, vt1, vt0 WHERE (((CASE ((vt1.c1) BETWEEN (rt0.c2) AND (vt1.c1))  WHEN ((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c0)))OR(vt0.c0)))OR(rt0.c2)) THEN (vt1.c0 IN ()) END) ISNULL)) GROUP BY rt0.c0, rt0.c1, vt1.c1;
SELECT ALL rt0.c0, rt0.c1, vt1.c1 FROM rt0, vt1, vt0 GROUP BY rt0.c0, rt0.c1, vt1.c1;
SELECT ALL vt0.c0, vt1.c1, rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt1, vt0 GROUP BY vt0.c0, vt1.c1, rt0.c0, rt0.c2, rt0.c1;
SELECT ALL vt0.c0, vt1.c1, rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt1, vt0 GROUP BY vt0.c0, vt1.c1, rt0.c0, rt0.c2, rt0.c1 HAVING MAX(MAX(GROUP_CONCAT(vt1.c0))) UNION ALL SELECT vt0.c0, vt1.c1, rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt1, vt0 GROUP BY vt0.c0, vt1.c1, rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (MAX(MAX(GROUP_CONCAT(vt1.c0))))) UNION ALL SELECT vt0.c0, vt1.c1, rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt1, vt0 GROUP BY vt0.c0, vt1.c1, rt0.c0, rt0.c2, rt0.c1 HAVING ((MAX(MAX(GROUP_CONCAT(vt1.c0)))) ISNULL);
SELECT * FROM rt0, vt1;
SELECT * FROM rt0, vt1 WHERE (rt0.c2) UNION ALL SELECT * FROM rt0, vt1 WHERE ((NOT (rt0.c2))) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE (((rt0.c2) ISNULL));
SELECT * FROM rt0, vt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CAST(vt0.c0 AS REAL)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CAST(vt0.c0 AS REAL)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CAST(vt0.c0 AS REAL)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt1.c0 FROM rt0, vt1, vt0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM rt0, vt1, vt0 WHERE (((((((vt0.c0)OR(rt0.c1)))AND(vt0.c0)))<=(((NULL) NOT NULL)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM rt0, vt1, vt0 WHERE ((NOT (((((((vt0.c0)OR(rt0.c1)))AND(vt0.c0)))<=(((NULL) NOT NULL)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM rt0, vt1, vt0 WHERE (((((((((vt0.c0)OR(rt0.c1)))AND(vt0.c0)))<=(((NULL) NOT NULL)))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM rt0, vt1, vt0 GROUP BY vt1.c0;
SELECT ALL vt1.c0, rt0.c1, rt0.c2 FROM vt1, vt0, rt0 GROUP BY vt1.c0, rt0.c1, rt0.c2;
SELECT ALL vt1.c0, rt0.c1, rt0.c2 FROM vt1, vt0, rt0 GROUP BY vt1.c0, rt0.c1, rt0.c2 HAVING AVG(AVG(rt0.c0)) UNION ALL SELECT vt1.c0, rt0.c1, rt0.c2 FROM vt1, vt0, rt0 GROUP BY vt1.c0, rt0.c1, rt0.c2 HAVING (NOT (AVG(AVG(rt0.c0)))) UNION ALL SELECT vt1.c0, rt0.c1, rt0.c2 FROM vt1, vt0, rt0 GROUP BY vt1.c0, rt0.c1, rt0.c2 HAVING ((AVG(AVG(rt0.c0))) ISNULL);
SELECT vt0.c0, rt0.c0, rt0.c2 FROM vt1, rt0, vt0;
SELECT ALL vt0.c0, rt0.c0, rt0.c2 FROM vt1, rt0, vt0 WHERE ((- ((x'' IN (rt0.c2))))) UNION ALL SELECT vt0.c0, rt0.c0, rt0.c2 FROM vt1, rt0, vt0 WHERE ((NOT ((- ((x'' IN (rt0.c2))))))) UNION ALL SELECT vt0.c0, rt0.c0, rt0.c2 FROM vt1, rt0, vt0 WHERE ((((- ((x'' IN (rt0.c2))))) ISNULL));
SELECT vt0.c0, rt0.c0, rt0.c2 FROM vt1, rt0, vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((0Xffffffff84b27167)=(COALESCE(vt0.c0, vt0.c0)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((0xffffffff84b27167)==(COALESCE(vt0.c0, vt0.c0)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((0Xffffffff84b27167)=(COALESCE(vt0.c0, vt0.c0)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL rt0.c0 FROM vt1, rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM vt1, rt0 WHERE (CAST(rt0.c2 AS INTEGER) COLLATE BINARY) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM vt1, rt0 WHERE ((NOT (CAST(rt0.c2 AS INTEGER) COLLATE BINARY))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM vt1, rt0 WHERE (((CAST(rt0.c2 AS INTEGER) COLLATE BINARY) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM vt1, rt0 GROUP BY rt0.c0;
SELECT rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c2;
SELECT ALL rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c2 HAVING CAST(COUNT(*) COLLATE BINARY AS REAL) UNION ALL SELECT ALL rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c2 HAVING (NOT (CAST(COUNT(*) COLLATE BINARY AS REAL))) UNION ALL SELECT rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c2 HAVING ((CAST(COUNT(*) COLLATE BINARY AS REAL)) ISNULL);
SELECT rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c2;
SELECT ALL rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c2 HAVING CAST(COUNT(*) COLLATE BINARY AS REAL) UNION ALL SELECT ALL rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c2 HAVING (NOT (CAST(COUNT(*) COLLATE BINARY AS REAL))) UNION ALL SELECT rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c2 HAVING ((CAST(COUNT(*) COLLATE BINARY AS REAL)) ISNULL);
SELECT rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c2;
SELECT ALL MIN((((('1994947034' COLLATE RTRIM)OR(((vt0.c0) NOTNULL))))OR(CASE rt0.c1  WHEN vt1.c1 THEN vt1.c1 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END))) FROM vt1, vt0, rt0;
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0 COLLATE BINARY)<>(vt0.c0 COLLATE NOCASE))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0 COLLATE BINARY)<>(vt0.c0 COLLATE NOCASE))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0 COLLATE BINARY)!=(vt0.c0 COLLATE NOCASE))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE (NULL) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1 WHERE (((vt1.c0)>(vt1.c1)) COLLATE RTRIM) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt1 WHERE ((NOT (((vt1.c0)>(vt1.c1)) COLLATE RTRIM))) GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM vt1 WHERE (((((vt1.c0)>(vt1.c1)) COLLATE RTRIM) ISNULL)) GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1, rt0 GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1, rt0 GROUP BY vt1.c1 HAVING SUM(TOTAL(vt1.c1)) UNION ALL SELECT vt1.c1 FROM vt1, rt0 GROUP BY vt1.c1 HAVING (NOT (SUM(TOTAL(vt1.c1)))) UNION ALL SELECT ALL vt1.c1 FROM vt1, rt0 GROUP BY vt1.c1 HAVING ((SUM(TOTAL(vt1.c1))) ISNULL);
SELECT rt0.c1, rt0.c2, vt0.c0, vt1.c0, rt0.c0, vt1.c1 FROM vt1 FULL OUTER JOIN rt0 ON vt1.c0 FULL OUTER JOIN vt0 ON ((((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)))/(CASE WHEN -1866163780 THEN rt0.c2 ELSE rt0.c2 END));
SELECT rt0.c1, rt0.c2, vt0.c0, vt1.c0, rt0.c0, vt1.c1 FROM vt1 FULL OUTER JOIN rt0 ON vt1.c0 FULL OUTER JOIN vt0 ON ((((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)))/(CASE WHEN -1866163780 THEN rt0.c2 ELSE rt0.c2 END)) WHERE (((vt1.c1)GLOB(((vt1.c1)|(rt0.c0))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, vt0.c0, vt1.c0, rt0.c0, vt1.c1 FROM vt1 FULL OUTER JOIN rt0 ON vt1.c0 FULL OUTER JOIN vt0 ON ((((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)))/(CASE WHEN -1866163780 THEN rt0.c2 ELSE rt0.c2 END)) WHERE ((NOT (((vt1.c1)GLOB(((vt1.c1)|(rt0.c0))))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, vt0.c0, vt1.c0, rt0.c0, vt1.c1 FROM vt1 FULL OUTER JOIN rt0 ON vt1.c0 FULL OUTER JOIN vt0 ON ((((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)))/(CASE WHEN -1866163780 THEN rt0.c2 ELSE rt0.c2 END)) WHERE (((((vt1.c1)GLOB(((vt1.c1)|(rt0.c0))))) ISNULL));
SELECT rt0.c1, rt0.c2, vt0.c0, vt1.c0, rt0.c0, vt1.c1 FROM vt1 FULL OUTER JOIN rt0 ON vt1.c0 FULL OUTER JOIN vt0 ON ((((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)))/(CASE WHEN -1866163780 THEN rt0.c2 ELSE rt0.c2 END));
SELECT DISTINCT * FROM vt1, rt0, vt0;
SELECT DISTINCT * FROM vt1, rt0, vt0 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM vt1, rt0, vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM vt1, rt0, vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM vt1, rt0, vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (HEX(DISTINCT vt0.c0 COLLATE NOCASE)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (HEX(DISTINCT vt0.c0 COLLATE NOCASE)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((HEX(DISTINCT vt0.c0 COLLATE NOCASE)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0, rt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON ((CAST(rt0.c2 AS TEXT))<=(x'')) GROUP BY vt0.c0, rt0.c0;
SELECT ALL vt0.c0, rt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON ((CAST(rt0.c2 AS TEXT))<=(x'')) GROUP BY vt0.c0, rt0.c0 HAVING COUNT(AVG(TOTAL(SUM(COUNT(*))))) UNION ALL SELECT ALL vt0.c0, rt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON ((CAST(rt0.c2 AS TEXT))<=(x'')) GROUP BY vt0.c0, rt0.c0 HAVING (NOT (COUNT(AVG(TOTAL(SUM(COUNT(*))))))) UNION ALL SELECT ALL vt0.c0, rt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON ((CAST(rt0.c2 AS TEXT))<=(x'')) GROUP BY vt0.c0, rt0.c0 HAVING ((COUNT(AVG(TOTAL(SUM(COUNT(*)))))) ISNULL);
SELECT ALL * FROM vt1 CROSS JOIN rt0 ON ((CASE WHEN rt0.c0 THEN vt1.c1 WHEN rt0.c2 THEN vt1.c1 WHEN rt0.c0 THEN rt0.c1 WHEN vt1.c1 THEN vt1.c0 WHEN rt0.c0 THEN vt1.c0 ELSE 0.8319715662084098 END) NOT BETWEEN (((rt0.c0) NOTNULL)) AND (rt0.c0));
SELECT ALL * FROM vt1 CROSS JOIN rt0 ON ((CASE WHEN rt0.c0 THEN vt1.c1 WHEN rt0.c2 THEN vt1.c1 WHEN rt0.c0 THEN rt0.c1 WHEN vt1.c1 THEN vt1.c0 WHEN rt0.c0 THEN vt1.c0 ELSE 0.8319715662084098 END) NOT BETWEEN (((rt0.c0) NOTNULL)) AND (rt0.c0)) WHERE ((((~ (rt0.c2)))-(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1))))) UNION ALL SELECT ALL * FROM vt1 CROSS JOIN rt0 ON ((CASE WHEN rt0.c0 THEN vt1.c1 WHEN rt0.c2 THEN vt1.c1 WHEN rt0.c0 THEN rt0.c1 WHEN vt1.c1 THEN vt1.c0 WHEN rt0.c0 THEN vt1.c0 ELSE 0.8319715662084098 END) NOT BETWEEN (((rt0.c0) NOTNULL)) AND (rt0.c0)) WHERE ((NOT ((((~ (rt0.c2)))-(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1))))))) UNION ALL SELECT ALL * FROM vt1 CROSS JOIN rt0 ON ((CASE WHEN rt0.c0 THEN vt1.c1 WHEN rt0.c2 THEN vt1.c1 WHEN rt0.c0 THEN rt0.c1 WHEN vt1.c1 THEN vt1.c0 WHEN rt0.c0 THEN vt1.c0 ELSE 0.8319715662084098 END) NOT BETWEEN (((rt0.c0) NOTNULL)) AND (rt0.c0)) WHERE ((((((~ (rt0.c2)))-(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1))))) ISNULL));
SELECT ALL * FROM vt1 CROSS JOIN rt0 ON ((CASE WHEN rt0.c0 THEN vt1.c1 WHEN rt0.c2 THEN vt1.c1 WHEN rt0.c0 THEN rt0.c1 WHEN vt1.c1 THEN vt1.c0 WHEN rt0.c0 THEN vt1.c0 ELSE 0.8319715662084098 END) NOT BETWEEN (((rt0.c0) NOTNULL)) AND (rt0.c0));
SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN rt0 ON ((((((vt1.c1) BETWEEN (rt0.c0) AND (vt1.c1)))AND('%G+<*崠Jx&')))AND(((rt0.c2)+(vt1.c1))));
SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN rt0 ON ((((((vt1.c1) BETWEEN (rt0.c0) AND (vt1.c1)))AND('%G+<*崠Jx&')))AND(((rt0.c2)+(vt1.c1)))) WHERE (STRFTIME((+ (NULL)), x'', (((rt0.c1, vt1.c1, rt0.c2)) BETWEEN ((NULL, vt1.c0, rt0.c0)) AND ((vt1.c1, rt0.c1, rt0.c2))), (rt0.c0 IN ()), CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 ELSE rt0.c0 END)) UNION SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN rt0 ON ((((((vt1.c1) BETWEEN (rt0.c0) AND (vt1.c1)))AND('%G+<*崠Jx&')))AND(((rt0.c2)+(vt1.c1)))) WHERE ((NOT (STRFTIME((+ (NULL)), x'', (((rt0.c1, vt1.c1, rt0.c2)) BETWEEN ((NULL, vt1.c0, rt0.c0)) AND ((vt1.c1, rt0.c1, rt0.c2))), (rt0.c0 IN ()), CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 ELSE rt0.c0 END)))) UNION SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN rt0 ON ((((((vt1.c1) BETWEEN (rt0.c0) AND (vt1.c1)))AND('%G+<*崠Jx&')))AND(((rt0.c2)+(vt1.c1)))) WHERE (((STRFTIME((+ (NULL)), x'', (((rt0.c1, vt1.c1, rt0.c2)) BETWEEN ((NULL, vt1.c0, rt0.c0)) AND ((vt1.c1, rt0.c1, rt0.c2))), (rt0.c0 IN ()), CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 ELSE rt0.c0 END)) ISNULL));
SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN rt0 ON ((((((vt1.c1) BETWEEN (rt0.c0) AND (vt1.c1)))AND('%G+<*崠Jx&')))AND(((rt0.c2)+(vt1.c1))));
SELECT vt1.c0, vt1.c1, vt0.c0 FROM rt0, vt0, vt1 GROUP BY vt1.c0, vt1.c1, vt0.c0;
SELECT vt1.c0, vt1.c1, vt0.c0 FROM rt0, vt0, vt1 WHERE (highlight((((vt0.c0, vt1.c1, vt1.c0))>=((rt0.c1, rt0.c1, rt0.c0))), (((x''))<=((vt1.c1))), (vt1.c1 IN ()), (vt1.c1 IN ()))) GROUP BY vt1.c0, vt1.c1, vt0.c0 UNION SELECT ALL vt1.c0, vt1.c1, vt0.c0 FROM rt0, vt0, vt1 WHERE ((NOT (highlight((((vt0.c0, vt1.c1, vt1.c0))>=((rt0.c1, rt0.c1, rt0.c0))), (((x''))<=((vt1.c1))), (vt1.c1 IN ()), (vt1.c1 IN ()))))) GROUP BY vt1.c0, vt1.c1, vt0.c0 UNION SELECT ALL vt1.c0, vt1.c1, vt0.c0 FROM rt0, vt0, vt1 WHERE (((highlight((((vt0.c0, vt1.c1, vt1.c0))>=((rt0.c1, rt0.c1, rt0.c0))), (((x''))<=((vt1.c1))), (vt1.c1 IN ()), (vt1.c1 IN ()))) ISNULL)) GROUP BY vt1.c0, vt1.c1, vt0.c0;
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING vt1.c1 UNION ALL SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING (NOT (vt1.c1)) UNION ALL SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING ((vt1.c1) ISNULL);
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING vt1.c1 UNION ALL SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING (NOT (vt1.c1)) UNION ALL SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING ((vt1.c1) ISNULL);
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT vt0.c0, vt1.c0 FROM vt1, vt0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((CAST(vt1.c0 AS REAL))) AND ((UNICODE(vt0.c0))))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN ((CAST(vt1.c0 AS REAL))) AND ((UNICODE(vt0.c0))))))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((CAST(vt1.c0 AS REAL))) AND ((UNICODE(vt0.c0))))) ISNULL));
SELECT vt0.c0, vt1.c0 FROM vt1, vt0;
SELECT DISTINCT rt0.c1, vt1.c1, rt0.c0 FROM vt1, rt0, vt0;
SELECT DISTINCT rt0.c1, vt1.c1, rt0.c0 FROM vt1, rt0, vt0 WHERE (((((rt0.c2)<(vt0.c0)))LIKE((vt1.c1 IN ())))) UNION SELECT DISTINCT rt0.c1, vt1.c1, rt0.c0 FROM vt1, rt0, vt0 WHERE ((NOT (((((rt0.c2)<(vt0.c0)))LIKE((vt1.c1 IN ())))))) UNION SELECT DISTINCT rt0.c1, vt1.c1, rt0.c0 FROM vt1, rt0, vt0 WHERE (((((((rt0.c2)<(vt0.c0)))LIKE((vt1.c1 IN ())))) ISNULL));
SELECT DISTINCT rt0.c1, vt1.c1, rt0.c0 FROM vt1, rt0, vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS REAL))) AND ((vt0.c0)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS REAL))) AND ((vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS REAL))) AND ((vt0.c0)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt1.c1, rt0.c0, vt1.c0, rt0.c1, rt0.c2 FROM rt0, vt0 NATURAL JOIN vt1 GROUP BY vt1.c1, rt0.c0, vt1.c0, rt0.c1, rt0.c2;
SELECT ALL vt1.c1, rt0.c0, vt1.c0, rt0.c1, rt0.c2 FROM rt0, vt0 NATURAL JOIN vt1 GROUP BY vt1.c1, rt0.c0, vt1.c0, rt0.c1, rt0.c2 HAVING 0Xffffffffca2513b3 UNION ALL SELECT ALL vt1.c1, rt0.c0, vt1.c0, rt0.c1, rt0.c2 FROM rt0, vt0 NATURAL JOIN vt1 GROUP BY vt1.c1, rt0.c0, vt1.c0, rt0.c1, rt0.c2 HAVING (NOT (0Xffffffffca2513b3)) UNION ALL SELECT vt1.c1, rt0.c0, vt1.c0, rt0.c1, rt0.c2 FROM rt0, vt0 NATURAL JOIN vt1 GROUP BY vt1.c1, rt0.c0, vt1.c0, rt0.c1, rt0.c2 HAVING ((0Xffffffffca2513b3) ISNULL);
SELECT vt1.c1, rt0.c0, vt1.c0, rt0.c1, rt0.c2 FROM rt0, vt0 NATURAL JOIN vt1 GROUP BY vt1.c1, rt0.c0, vt1.c0, rt0.c1, rt0.c2;
SELECT ALL vt1.c1, rt0.c0, vt1.c0, rt0.c1, rt0.c2 FROM rt0, vt0 NATURAL JOIN vt1 GROUP BY vt1.c1, rt0.c0, vt1.c0, rt0.c1, rt0.c2 HAVING 0Xffffffffca2513b3 UNION ALL SELECT ALL vt1.c1, rt0.c0, vt1.c0, rt0.c1, rt0.c2 FROM rt0, vt0 NATURAL JOIN vt1 GROUP BY vt1.c1, rt0.c0, vt1.c0, rt0.c1, rt0.c2 HAVING (NOT (0Xffffffffca2513b3)) UNION ALL SELECT vt1.c1, rt0.c0, vt1.c0, rt0.c1, rt0.c2 FROM rt0, vt0 NATURAL JOIN vt1 GROUP BY vt1.c1, rt0.c0, vt1.c0, rt0.c1, rt0.c2 HAVING ((0Xffffffffca2513b3) ISNULL);
SELECT vt1.c1, rt0.c0, vt1.c0, rt0.c1, rt0.c2 FROM rt0, vt0 NATURAL JOIN vt1 GROUP BY vt1.c1, rt0.c0, vt1.c0, rt0.c1, rt0.c2;
SELECT * FROM rt0, vt1, vt0;
SELECT * FROM rt0, vt1, vt0 WHERE ((((rt0.c1, rt0.c1, rt0.c2)) NOT BETWEEN ((CAST(vt1.c0 AS BLOB), vt1.c1 COLLATE RTRIM, rt0.c1)) AND ((CAST(vt1.c1 AS BLOB), ((rt0.c1)%(vt1.c0)), rt0.c2 COLLATE RTRIM)))) UNION ALL SELECT ALL * FROM rt0, vt1, vt0 WHERE ((NOT ((((rt0.c1, rt0.c1, rt0.c2)) NOT BETWEEN ((CAST(vt1.c0 AS BLOB), vt1.c1 COLLATE RTRIM, rt0.c1)) AND ((CAST(vt1.c1 AS BLOB), ((rt0.c1)%(vt1.c0)), rt0.c2 COLLATE RTRIM)))))) UNION ALL SELECT ALL * FROM rt0, vt1, vt0 WHERE ((((((rt0.c1, rt0.c1, rt0.c2)) NOT BETWEEN ((CAST(vt1.c0 AS BLOB), vt1.c1 COLLATE RTRIM, rt0.c1)) AND ((CAST(vt1.c1 AS BLOB), ((rt0.c1)%(vt1.c0)), rt0.c2 COLLATE RTRIM)))) ISNULL));
SELECT * FROM rt0, vt1, vt0;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE (CAST(rt0.c1 AS REAL)) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT (CAST(rt0.c1 AS REAL)))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((CAST(rt0.c1 AS REAL)) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT ALL vt0.c0, rt0.c1, rt0.c2, vt1.c1, vt1.c0, rt0.c0 FROM vt0, rt0, vt1 GROUP BY vt0.c0, rt0.c1, rt0.c2, vt1.c1, vt1.c0, rt0.c0;
SELECT vt0.c0, rt0.c1, rt0.c2, vt1.c1, vt1.c0, rt0.c0 FROM vt0, rt0, vt1 WHERE (((vt0.c0 IN ()) IN (LOWER(vt0.c0), LOWER(vt1.c1)))) GROUP BY vt0.c0, rt0.c1, rt0.c2, vt1.c1, vt1.c0, rt0.c0 UNION SELECT ALL vt0.c0, rt0.c1, rt0.c2, vt1.c1, vt1.c0, rt0.c0 FROM vt0, rt0, vt1 WHERE ((NOT (((vt0.c0 IN ()) IN (LOWER(vt0.c0), LOWER(vt1.c1)))))) GROUP BY vt0.c0, rt0.c1, rt0.c2, vt1.c1, vt1.c0, rt0.c0 UNION SELECT ALL vt0.c0, rt0.c1, rt0.c2, vt1.c1, vt1.c0, rt0.c0 FROM vt0, rt0, vt1 WHERE (((((vt0.c0 IN ()) IN (LOWER(vt0.c0), LOWER(vt1.c1)))) ISNULL)) GROUP BY vt0.c0, rt0.c1, rt0.c2, vt1.c1, vt1.c0, rt0.c0;
SELECT ALL vt0.c0, rt0.c1, rt0.c2, vt1.c1, vt1.c0, rt0.c0 FROM vt0, rt0, vt1 GROUP BY vt0.c0, rt0.c1, rt0.c2, vt1.c1, vt1.c0, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE ((((vt0.c0)IS(vt0.c0)) IN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((((vt0.c0)IS(vt0.c0)) IN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)IS(vt0.c0)) IN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, vt1.c0, vt1.c1 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, vt1.c0, vt1.c1;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, vt1.c0, vt1.c1 FROM vt1, rt0 WHERE (CASE ((rt0.c1)IS NOT(vt1.c0))  WHEN (((vt1.c0)) BETWEEN ((rt0.c2)) AND ((x'c560'))) THEN ABS(DISTINCT vt1.c1) ELSE CAST(rt0.c1 AS NUMERIC) END) GROUP BY rt0.c1, rt0.c0, rt0.c2, vt1.c0, vt1.c1 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2, vt1.c0, vt1.c1 FROM vt1 NOT INDEXED, rt0 WHERE ((NOT (CASE ((rt0.c1)IS NOT(vt1.c0))  WHEN (((vt1.c0)) BETWEEN ((rt0.c2)) AND ((x'c560'))) THEN ABS(DISTINCT vt1.c1) ELSE CAST(rt0.c1 AS NUMERIC) END))) GROUP BY rt0.c1, rt0.c0, rt0.c2, vt1.c0, vt1.c1 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2, vt1.c0, vt1.c1 FROM vt1, rt0 WHERE (((CASE ((rt0.c1)IS NOT(vt1.c0))  WHEN (((vt1.c0)) BETWEEN ((rt0.c2)) AND ((x'c560'))) THEN ABS(DISTINCT vt1.c1) ELSE CAST(rt0.c1 AS NUMERIC) END) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2, vt1.c0, vt1.c1;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, vt1.c0, vt1.c1 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, vt1.c0, vt1.c1;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((((((SUM(rt0.c2)) ISNULL))AND((rt0.c1 IN ()))))AND(COUNT(TOTAL(rt0.c2)))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (((((((SUM(rt0.c2)) ISNULL))AND((rt0.c1 IN ()))))AND(COUNT(TOTAL(rt0.c2)))))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((((((((SUM(rt0.c2)) ISNULL))AND((rt0.c1 IN ()))))AND(COUNT(TOTAL(rt0.c2))))) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((((((SUM(rt0.c2)) ISNULL))AND((rt0.c1 IN ()))))AND(COUNT(TOTAL(rt0.c2)))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (((((((SUM(rt0.c2)) ISNULL))AND((rt0.c1 IN ()))))AND(COUNT(TOTAL(rt0.c2)))))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((((((((SUM(rt0.c2)) ISNULL))AND((rt0.c1 IN ()))))AND(COUNT(TOTAL(rt0.c2))))) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0, vt0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0, vt0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c0 THEN rt0.c0 WHEN x'' THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 END AS TEXT)) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0, vt0 WHERE ((NOT (CAST(CASE vt0.c0  WHEN vt0.c0 THEN rt0.c0 WHEN x'' THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 END AS TEXT)))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0, vt0 WHERE (((CAST(CASE vt0.c0  WHEN vt0.c0 THEN rt0.c0 WHEN x'' THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 END AS TEXT)) ISNULL));
SELECT rt0.c0, rt0.c2 FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (((((((((rt0.c0)OR(rt0.c1)))AND(vt0.c0)))OR(((rt0.c1) NOT NULL))))AND(((((vt0.c0)OR(rt0.c1)))AND(vt0.c0))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (((((((((rt0.c0)OR(rt0.c1)))AND(vt0.c0)))OR(((rt0.c1) NOT NULL))))AND(((((vt0.c0)OR(rt0.c1)))AND(vt0.c0))))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((((((((((rt0.c0)OR(rt0.c1)))AND(vt0.c0)))OR(((rt0.c1) NOT NULL))))AND(((((vt0.c0)OR(rt0.c1)))AND(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN '''.' THEN x'58c5' ELSE vt0.c0 END)GLOB(((vt0.c0)!=(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN '''.' THEN x'58c5' ELSE vt0.c0 END)GLOB(((vt0.c0)<>(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN '''.' THEN x'58c5' ELSE vt0.c0 END)GLOB(((vt0.c0)<>(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c2 FROM rt0, vt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0, vt0 GROUP BY rt0.c2 HAVING SUM(GROUP_CONCAT(rt0.c1)) UNION ALL SELECT ALL rt0.c2 FROM rt0, vt0 GROUP BY rt0.c2 HAVING (NOT (SUM(GROUP_CONCAT(rt0.c1)))) UNION ALL SELECT rt0.c2 FROM rt0, vt0 GROUP BY rt0.c2 HAVING ((SUM(GROUP_CONCAT(rt0.c1))) ISNULL);
SELECT * FROM vt1 RIGHT OUTER JOIN vt0 ON CASE WHEN (~ (vt1.c1)) THEN ((x'53c2') BETWEEN (rt0.c1) AND (2.103444053E9)) WHEN ((vt1.c1) BETWEEN (vt1.c0) AND (rt0.c1)) THEN CASE WHEN '' THEN rt0.c0 END WHEN ((x'ae70') NOTNULL) THEN ((vt1.c0)+(vt1.c1)) ELSE x'' END FULL OUTER JOIN rt0 ON TRIM(((('y')) BETWEEN ((rt0.c0)) AND ((1030252305))));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c0))!=((rt0.c2))) IN (SQLITE_COMPILEOPTION_USED(rt0.c2), CASE rt0.c2  WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c1 END));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c0))!=((rt0.c2))) IN (SQLITE_COMPILEOPTION_USED(rt0.c2), CASE rt0.c2  WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c1 END)) WHERE (CAST(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)) AS NUMERIC)) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c0))!=((rt0.c2))) IN (SQLITE_COMPILEOPTION_USED(rt0.c2), CASE rt0.c2  WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c1 END)) WHERE ((NOT (CAST(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)) AS NUMERIC)))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c0))<>((rt0.c2))) IN (SQLITE_COMPILEOPTION_USED(rt0.c2), CASE rt0.c2  WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c1 END)) WHERE (((CAST(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)) AS NUMERIC)) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c0))!=((rt0.c2))) IN (SQLITE_COMPILEOPTION_USED(rt0.c2), CASE rt0.c2  WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c1 END));
SELECT rt0.c2 FROM rt0, vt1 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0, vt1 WHERE (((((rt0.c2) NOT NULL))>>((rt0.c2 IN ())))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0, vt1 NOT INDEXED WHERE ((NOT (((((rt0.c2) NOT NULL))>>((rt0.c2 IN ())))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0, vt1 WHERE (((((((rt0.c2) NOT NULL))>>((rt0.c2 IN ())))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, vt1 GROUP BY rt0.c2;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(1865562306)) NOT BETWEEN ('-1792875265') AND (GROUP_CONCAT(TOTAL(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((COUNT(1865562306)) NOT BETWEEN ('-1792875265') AND (GROUP_CONCAT(TOTAL(vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((COUNT(1865562306)) NOT BETWEEN ('-1792875265') AND (GROUP_CONCAT(TOTAL(vt0.c0))))) ISNULL);
SELECT rt0.c1 FROM rt0;
SELECT rt0.c1 FROM rt0 WHERE ((NOT (rt0.c1)) COLLATE NOCASE) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT ((NOT (rt0.c1)) COLLATE NOCASE))) UNION ALL SELECT rt0.c1 FROM rt0 WHERE ((((NOT (rt0.c1)) COLLATE NOCASE) ISNULL));
SELECT rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0, vt1, vt0;
SELECT DISTINCT * FROM rt0, vt1, vt0 WHERE ((rt0.c0 IN ()) COLLATE NOCASE) UNION SELECT DISTINCT * FROM rt0, vt1, vt0 WHERE ((NOT ((rt0.c0 IN ()) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM rt0, vt1, vt0 WHERE ((((rt0.c0 IN ()) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM rt0, vt1, vt0;
SELECT ALL rt0.c2, vt1.c0, rt0.c0 FROM vt0 NOT INDEXED, rt0 CROSS JOIN vt1 ON ((((((rt0.c0) NOT NULL))OR(CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c1 END)))OR(']-.3' COLLATE BINARY)) GROUP BY rt0.c2, vt1.c0, rt0.c0;
SELECT rt0.c2, vt1.c0, rt0.c0 FROM vt0, rt0 CROSS JOIN vt1 ON ((((((rt0.c0) NOT NULL))OR(CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c1 END)))OR(']-.3' COLLATE BINARY)) WHERE ((((((rt0.c2) BETWEEN (vt1.c0) AND (vt1.c0)), 2103444053, ('ﶡ)籢' IN ())))>=((CASE vt1.c1  WHEN vt1.c1 THEN rt0.c0 WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c2 THEN 0.5213653200726899 WHEN vt0.c0 THEN vt1.c1 WHEN rt0.c0 THEN '-7223008' END, (((vt1.c1, rt0.c2, rt0.c2)) BETWEEN ((vt1.c1, rt0.c1, vt1.c1)) AND ((vt1.c0, 1465279728, rt0.c0))), vt1.c0)))) GROUP BY rt0.c2, vt1.c0, rt0.c0 UNION SELECT ALL rt0.c2, vt1.c0, rt0.c0 FROM vt0, rt0 CROSS JOIN vt1 ON ((((((rt0.c0) NOT NULL))OR(CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c1 END)))OR(']-.3' COLLATE BINARY)) WHERE ((NOT ((((((rt0.c2) BETWEEN (vt1.c0) AND (vt1.c0)), 2103444053, ('ﶡ)籢' IN ())))>=((CASE vt1.c1  WHEN vt1.c1 THEN rt0.c0 WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c2 THEN 0.5213653200726899 WHEN vt0.c0 THEN vt1.c1 WHEN rt0.c0 THEN '-7223008' END, (((vt1.c1, rt0.c2, rt0.c2)) BETWEEN ((vt1.c1, rt0.c1, vt1.c1)) AND ((vt1.c0, 1465279728, rt0.c0))), vt1.c0)))))) GROUP BY rt0.c2, vt1.c0, rt0.c0 UNION SELECT rt0.c2, vt1.c0, rt0.c0 FROM vt0, rt0 CROSS JOIN vt1 ON ((((((rt0.c0) NOT NULL))OR(CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c1 END)))OR(']-.3' COLLATE BINARY)) WHERE ((((((((rt0.c2) BETWEEN (vt1.c0) AND (vt1.c0)), 2103444053, ('ﶡ)籢' IN ())))>=((CASE vt1.c1  WHEN vt1.c1 THEN rt0.c0 WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c2 THEN 0.5213653200726899 WHEN vt0.c0 THEN vt1.c1 WHEN rt0.c0 THEN '-7223008' END, (((vt1.c1, rt0.c2, rt0.c2)) BETWEEN ((vt1.c1, rt0.c1, vt1.c1)) AND ((vt1.c0, 1465279728, rt0.c0))), vt1.c0)))) ISNULL)) GROUP BY rt0.c2, vt1.c0, rt0.c0;
SELECT ALL rt0.c2, vt1.c0, rt0.c0 FROM vt0 NOT INDEXED, rt0 CROSS JOIN vt1 ON ((((((rt0.c0) NOT NULL))OR(CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c1 END)))OR(']-.3' COLLATE BINARY)) GROUP BY rt0.c2, vt1.c0, rt0.c0;
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING MIN(vt1.c0) UNION ALL SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING (NOT (MIN(vt1.c0))) UNION ALL SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING ((MIN(vt1.c0)) ISNULL);
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING MIN(vt1.c0) UNION ALL SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING (NOT (MIN(vt1.c0))) UNION ALL SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING ((MIN(vt1.c0)) ISNULL);
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT ALL * FROM vt0, rt0, vt1;
SELECT ALL * FROM vt0, rt0, vt1 WHERE (rt0.c2) UNION ALL SELECT * FROM vt0, rt0, vt1 WHERE ((NOT (rt0.c2))) UNION ALL SELECT * FROM vt0, rt0, vt1 WHERE (((rt0.c2) ISNULL));
SELECT ALL * FROM vt0, rt0, vt1;
SELECT DISTINCT rt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON '618228926';
SELECT DISTINCT rt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON '618228926' WHERE (LIKELIHOOD(DISTINCT ((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c0)), 0.892132635767749)) UNION SELECT DISTINCT rt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON '618228926' WHERE ((NOT (LIKELIHOOD(DISTINCT ((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c0)), 0.892132635767749)))) UNION SELECT DISTINCT rt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON '618228926' WHERE (((LIKELIHOOD(DISTINCT ((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c0)), 0.892132635767749)) ISNULL));
SELECT DISTINCT rt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON '618228926';
SELECT ALL vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON (((vt0.c0))>((CASE vt0.c0  WHEN '''閫nowo2' THEN vt0.c0 ELSE vt1.c0 END))) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON (((vt0.c0))>((CASE vt0.c0  WHEN '''閫nowo2' THEN vt0.c0 ELSE vt1.c0 END))) WHERE (((((0xffffffffd0240779) IS TRUE))%(load_extension(vt1.c0)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON (((vt0.c0))>((CASE vt0.c0  WHEN '''閫nowo2' THEN vt0.c0 ELSE vt1.c0 END))) WHERE ((NOT (((((0xffffffffd0240779) IS TRUE))%(load_extension(vt1.c0)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON (((vt0.c0))>((CASE vt0.c0  WHEN '''閫nowo2' THEN vt0.c0 ELSE vt1.c0 END))) WHERE (((((((0Xffffffffd0240779) IS TRUE))%(load_extension(vt1.c0)))) ISNULL)) GROUP BY vt0.c0;
SELECT rt0.c0, rt0.c2, rt0.c1, vt1.c1 FROM vt1, rt0, vt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, vt1.c1;
SELECT rt0.c0, rt0.c2, rt0.c1, vt1.c1 FROM vt1, rt0, vt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, vt1.c1 HAVING (((((MAX(vt1.c0), vt1.c0, vt1.c0)) NOT BETWEEN ((MAX(2.09465628E9), SUM(MIN(COUNT(*))), AVG(GROUP_CONCAT(TOTAL(MIN(MIN(rt0.c1))))))) AND ((rt0.c2, vt1.c1, COUNT(vt0.c0)))))IS(CASE 1933252131  WHEN rt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN COUNT(MAX(GROUP_CONCAT(GROUP_CONCAT(GROUP_CONCAT(SUM(0.5890667451113356)))))) WHEN vt1.c1 THEN rt0.c2 ELSE SUM(MAX(SUM(AVG(rt0.c2)))) END)) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1, vt1.c1 FROM vt1, rt0, vt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, vt1.c1 HAVING (NOT ((((((MAX(vt1.c0), vt1.c0, vt1.c0)) NOT BETWEEN ((MAX(2.09465628E9), SUM(MIN(COUNT(*))), AVG(GROUP_CONCAT(TOTAL(MIN(MIN(rt0.c1))))))) AND ((rt0.c2, vt1.c1, COUNT(vt0.c0)))))IS(CASE 1933252131  WHEN rt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN COUNT(MAX(GROUP_CONCAT(GROUP_CONCAT(GROUP_CONCAT(SUM(0.5890667451113356)))))) WHEN vt1.c1 THEN rt0.c2 ELSE SUM(MAX(SUM(AVG(rt0.c2)))) END)))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1, vt1.c1 FROM vt1, rt0, vt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, vt1.c1 HAVING (((((((MAX(vt1.c0), vt1.c0, vt1.c0)) NOT BETWEEN ((MAX(2.09465628E9), SUM(MIN(COUNT(*))), AVG(GROUP_CONCAT(TOTAL(MIN(MIN(rt0.c1))))))) AND ((rt0.c2, vt1.c1, COUNT(vt0.c0)))))IS(CASE 1933252131  WHEN rt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN COUNT(MAX(GROUP_CONCAT(GROUP_CONCAT(GROUP_CONCAT(SUM(0.5890667451113356)))))) WHEN vt1.c1 THEN rt0.c2 ELSE SUM(MAX(SUM(AVG(rt0.c2)))) END))) ISNULL);
SELECT ALL * FROM rt0, vt1, vt0;
SELECT * FROM rt0, vt1, vt0 WHERE ('-374548836') UNION ALL SELECT * FROM rt0, vt1, vt0 WHERE ((NOT ('-374548836'))) UNION ALL SELECT ALL * FROM rt0, vt1, vt0 WHERE ((('-374548836') ISNULL));
SELECT ALL * FROM rt0, vt1, vt0;
SELECT DISTINCT vt0.c0, vt1.c1 FROM vt0, vt1;
SELECT DISTINCT vt0.c0, vt1.c1 FROM vt0, vt1 WHERE (((((((((((vt1.c0) BETWEEN (vt1.c1) AND (vt0.c0)))AND((- (vt1.c0)))))AND(((vt0.c0) IS FALSE))))OR(((vt1.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(vt1.c1))) UNION SELECT DISTINCT vt0.c0, vt1.c1 FROM vt0, vt1 WHERE ((NOT (((((((((((vt1.c0) BETWEEN (vt1.c1) AND (vt0.c0)))AND((- (vt1.c0)))))AND(((vt0.c0) IS FALSE))))OR(((vt1.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(vt1.c1))))) UNION SELECT DISTINCT vt0.c0, vt1.c1 FROM vt0, vt1 WHERE (((((((((((((vt1.c0) BETWEEN (vt1.c1) AND (vt0.c0)))AND((- (vt1.c0)))))AND(((vt0.c0) IS FALSE))))OR(((vt1.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(vt1.c1))) ISNULL));
SELECT DISTINCT vt0.c0, vt1.c1 FROM vt0, vt1;
SELECT vt1.c1, rt0.c2 FROM rt0 RIGHT OUTER JOIN vt1 ON 0.3621351890806487 CROSS JOIN vt0 ON CASE WHEN (('5B')IS NOT(vt1.c1)) THEN (((vt0.c0))>=((vt0.c0))) WHEN ((vt1.c0)%(rt0.c2)) THEN CASE vt0.c0  WHEN vt1.c0 THEN vt1.c1 WHEN rt0.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 ELSE rt0.c0 END WHEN (vt0.c0 IN ()) THEN CAST(vt1.c0 AS TEXT) END GROUP BY vt1.c1, rt0.c2;
SELECT vt1.c1, rt0.c2 FROM rt0 RIGHT OUTER JOIN vt1 ON 0.3621351890806487 CROSS JOIN vt0 ON CASE WHEN (('5B')IS NOT(vt1.c1)) THEN (((vt0.c0))>=((vt0.c0))) WHEN ((vt1.c0)%(rt0.c2)) THEN CASE vt0.c0  WHEN vt1.c0 THEN vt1.c1 WHEN rt0.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 ELSE rt0.c0 END WHEN (vt0.c0 IN ()) THEN CAST(vt1.c0 AS TEXT) END WHERE (CAST(rt0.c2 AS INTEGER) COLLATE RTRIM) GROUP BY vt1.c1, rt0.c2 UNION SELECT ALL vt1.c1, rt0.c2 FROM rt0 RIGHT OUTER JOIN vt1 ON 0.3621351890806487 CROSS JOIN vt0 ON CASE WHEN (('5B')IS NOT(vt1.c1)) THEN (((vt0.c0))>=((vt0.c0))) WHEN ((vt1.c0)%(rt0.c2)) THEN CASE vt0.c0  WHEN vt1.c0 THEN vt1.c1 WHEN rt0.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 ELSE rt0.c0 END WHEN (vt0.c0 IN ()) THEN CAST(vt1.c0 AS TEXT) END WHERE ((NOT (CAST(rt0.c2 AS INTEGER) COLLATE RTRIM))) GROUP BY vt1.c1, rt0.c2 UNION SELECT ALL vt1.c1, rt0.c2 FROM rt0 RIGHT OUTER JOIN vt1 ON 0.3621351890806487 CROSS JOIN vt0 ON CASE WHEN (('5B')IS NOT(vt1.c1)) THEN (((vt0.c0))>=((vt0.c0))) WHEN ((vt1.c0)%(rt0.c2)) THEN CASE vt0.c0  WHEN vt1.c0 THEN vt1.c1 WHEN rt0.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 ELSE rt0.c0 END WHEN (vt0.c0 IN ()) THEN CAST(vt1.c0 AS TEXT) END WHERE (((CAST(rt0.c2 AS INTEGER) COLLATE RTRIM) ISNULL)) GROUP BY vt1.c1, rt0.c2;
SELECT vt1.c1, rt0.c2 FROM rt0 RIGHT OUTER JOIN vt1 ON 0.3621351890806487 CROSS JOIN vt0 ON CASE WHEN (('5B')IS NOT(vt1.c1)) THEN (((vt0.c0))>=((vt0.c0))) WHEN ((vt1.c0)%(rt0.c2)) THEN CASE vt0.c0  WHEN vt1.c0 THEN vt1.c1 WHEN rt0.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 ELSE rt0.c0 END WHEN (vt0.c0 IN ()) THEN CAST(vt1.c0 AS TEXT) END GROUP BY vt1.c1, rt0.c2;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(AVG(vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(AVG(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(AVG(vt0.c0))) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1))) NOT BETWEEN ((((rt0.c1))>((rt0.c2)))) AND (CASE rt0.c1  WHEN x'' THEN rt0.c0 ELSE NULL END))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1))) NOT BETWEEN ((((rt0.c1))>((rt0.c2)))) AND (CASE rt0.c1  WHEN x'' THEN rt0.c0 ELSE NULL END))))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1))) NOT BETWEEN ((((rt0.c1))>((rt0.c2)))) AND (CASE rt0.c1  WHEN x'' THEN rt0.c0 ELSE NULL END))) ISNULL));
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1 WHERE (((((rt0.c1) NOT BETWEEN (vt1.c1) AND (rt0.c0)))==(rt0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((NOT (((((rt0.c1) NOT BETWEEN (vt1.c1) AND (rt0.c0)))=(rt0.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE (((((((rt0.c1) NOT BETWEEN (vt1.c1) AND (rt0.c0)))=(rt0.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT * FROM rt0, vt1;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM rt0, vt0 WHERE (((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))IS NOT(CAST(rt0.c1 AS INTEGER)))) GROUP BY rt0.c2, rt0.c1, rt0.c0, vt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM rt0, vt0 WHERE ((NOT (((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))IS NOT(CAST(rt0.c1 AS INTEGER)))))) GROUP BY rt0.c2, rt0.c1, rt0.c0, vt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM rt0, vt0 WHERE (((((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))IS NOT(CAST(rt0.c1 AS INTEGER)))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0, vt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt0.c0;
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING ((((vt1.c0) NOT BETWEEN (SUM(vt1.c1)) AND (vt1.c1))) NOT BETWEEN (MAX(TOTAL(COUNT(*)))) AND (SUM(vt1.c0))) UNION ALL SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING (NOT (((((vt1.c0) NOT BETWEEN (SUM(vt1.c1)) AND (vt1.c1))) NOT BETWEEN (MAX(TOTAL(COUNT(*)))) AND (SUM(vt1.c0))))) UNION ALL SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING ((((((vt1.c0) NOT BETWEEN (SUM(vt1.c1)) AND (vt1.c1))) NOT BETWEEN (MAX(TOTAL(COUNT(*)))) AND (SUM(vt1.c0)))) ISNULL);
SELECT ALL * FROM vt1, vt0, rt0;
SELECT * FROM vt1, vt0, rt0 WHERE ('2035088525') UNION ALL SELECT ALL * FROM vt1, vt0, rt0 WHERE ((NOT ('2035088525'))) UNION ALL SELECT * FROM vt1, vt0, rt0 WHERE ((('2035088525') ISNULL));
SELECT ALL * FROM vt1, vt0, rt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE ((- (rt0.c2)) COLLATE RTRIM) UNION SELECT DISTINCT * FROM rt0 NOT INDEXED, vt0 WHERE ((NOT ((- (rt0.c2)) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((((- (rt0.c2)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT ALL vt1.c1, vt0.c0, vt1.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0, vt1 GROUP BY vt1.c1, vt0.c0, vt1.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT vt1.c1, vt0.c0, vt1.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0, vt1 WHERE (((rt0.c0 COLLATE RTRIM)IS NOT(((((vt1.c1)AND(rt0.c1)))AND('''vn-'))))) GROUP BY vt1.c1, vt0.c0, vt1.c0, rt0.c2, rt0.c1, rt0.c0 UNION SELECT vt1.c1, vt0.c0, vt1.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0, vt1 WHERE ((NOT (((rt0.c0 COLLATE RTRIM)IS NOT(((((vt1.c1)AND(rt0.c1)))AND('''vn-'))))))) GROUP BY vt1.c1, vt0.c0, vt1.c0, rt0.c2, rt0.c1, rt0.c0 UNION SELECT vt1.c1, vt0.c0, vt1.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0, vt1 WHERE (((((rt0.c0 COLLATE RTRIM)IS NOT(((((vt1.c1)AND(rt0.c1)))AND('''vn-'))))) ISNULL)) GROUP BY vt1.c1, vt0.c0, vt1.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT ALL vt1.c1, vt0.c0, vt1.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0, vt1 GROUP BY vt1.c1, vt0.c0, vt1.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT vt0.c0, vt1.c0, vt1.c1 FROM vt1 CROSS JOIN vt0 ON x'' GROUP BY vt0.c0, vt1.c0, vt1.c1;
SELECT ALL vt0.c0, vt1.c0, vt1.c1 FROM vt1 CROSS JOIN vt0 ON x'' GROUP BY vt0.c0, vt1.c0, vt1.c1 HAVING MAX(TOTAL(vt1.c0)) UNION ALL SELECT ALL vt0.c0, vt1.c0, vt1.c1 FROM vt1 CROSS JOIN vt0 ON x'' GROUP BY vt0.c0, vt1.c0, vt1.c1 HAVING (NOT (MAX(TOTAL(vt1.c0)))) UNION ALL SELECT ALL vt0.c0, vt1.c0, vt1.c1 FROM vt1 CROSS JOIN vt0 ON x'' GROUP BY vt0.c0, vt1.c0, vt1.c1 HAVING ((MAX(TOTAL(vt1.c0))) ISNULL);
SELECT rt0.c0 FROM rt0;
SELECT rt0.c0 FROM rt0 WHERE (((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 END) IS FALSE)) UNION ALL SELECT rt0.c0 FROM rt0 WHERE ((NOT (((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 END) IS FALSE)))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE (((((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 END) IS FALSE)) ISNULL));
SELECT rt0.c0 FROM rt0;
SELECT DISTINCT * FROM vt1, rt0, vt0;
SELECT DISTINCT * FROM vt1, rt0, vt0 WHERE (RTRIM(((rt0.c0) IS TRUE))) UNION SELECT DISTINCT * FROM vt1, rt0, vt0 WHERE ((NOT (RTRIM(((rt0.c0) IS TRUE))))) UNION SELECT DISTINCT * FROM vt1, rt0, vt0 WHERE (((RTRIM(((rt0.c0) IS TRUE))) ISNULL));
SELECT DISTINCT * FROM vt1, rt0, vt0;
SELECT rt0.c2 FROM vt0 NATURAL JOIN rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM vt0 NATURAL JOIN rt0 WHERE ((- (rt0.c1 COLLATE RTRIM))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM vt0 NATURAL JOIN rt0 WHERE ((NOT ((- (rt0.c1 COLLATE RTRIM))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM vt0 NATURAL JOIN rt0 WHERE ((((- (rt0.c1 COLLATE RTRIM))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM vt0 NATURAL JOIN rt0 GROUP BY rt0.c2;
SELECT rt0.c0, rt0.c1, vt0.c0, vt1.c0, vt1.c1, rt0.c2 FROM vt0 FULL OUTER JOIN vt1 ON QUOTE((vt0.c0 IN ())) INNER JOIN rt0 ON '4' GROUP BY rt0.c0, rt0.c1, vt0.c0, vt1.c0, vt1.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, vt0.c0, vt1.c0, vt1.c1, rt0.c2 FROM vt0 FULL OUTER JOIN vt1 ON QUOTE((vt0.c0 IN ())) INNER JOIN rt0 ON '4' GROUP BY rt0.c0, rt0.c1, vt0.c0, vt1.c0, vt1.c1, rt0.c2 HAVING COUNT(*) UNION ALL SELECT rt0.c0, rt0.c1, vt0.c0, vt1.c0, vt1.c1, rt0.c2 FROM vt0 FULL OUTER JOIN vt1 ON QUOTE((vt0.c0 IN ())) INNER JOIN rt0 ON '4' GROUP BY rt0.c0, rt0.c1, vt0.c0, vt1.c0, vt1.c1, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c0, rt0.c1, vt0.c0, vt1.c0, vt1.c1, rt0.c2 FROM vt0 FULL OUTER JOIN vt1 ON QUOTE((vt0.c0 IN ())) INNER JOIN rt0 ON '4' GROUP BY rt0.c0, rt0.c1, vt0.c0, vt1.c0, vt1.c1, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0, rt0.c1, vt0.c0, vt1.c0, vt1.c1, rt0.c2 FROM vt0 FULL OUTER JOIN vt1 ON QUOTE((vt0.c0 IN ())) INNER JOIN rt0 ON '4' GROUP BY rt0.c0, rt0.c1, vt0.c0, vt1.c0, vt1.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, vt0.c0, vt1.c0, vt1.c1, rt0.c2 FROM vt0 FULL OUTER JOIN vt1 ON QUOTE((vt0.c0 IN ())) INNER JOIN rt0 ON '4' GROUP BY rt0.c0, rt0.c1, vt0.c0, vt1.c0, vt1.c1, rt0.c2 HAVING COUNT(*) UNION ALL SELECT rt0.c0, rt0.c1, vt0.c0, vt1.c0, vt1.c1, rt0.c2 FROM vt0 FULL OUTER JOIN vt1 ON QUOTE((vt0.c0 IN ())) INNER JOIN rt0 ON '4' GROUP BY rt0.c0, rt0.c1, vt0.c0, vt1.c0, vt1.c1, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c0, rt0.c1, vt0.c0, vt1.c0, vt1.c1, rt0.c2 FROM vt0 FULL OUTER JOIN vt1 ON QUOTE((vt0.c0 IN ())) INNER JOIN rt0 ON '4' GROUP BY rt0.c0, rt0.c1, vt0.c0, vt1.c0, vt1.c1, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0, rt0.c1, vt0.c0, vt1.c0, vt1.c1, rt0.c2 FROM vt0 FULL OUTER JOIN vt1 ON QUOTE((vt0.c0 IN ())) INNER JOIN rt0 ON '4' GROUP BY rt0.c0, rt0.c1, vt0.c0, vt1.c0, vt1.c1, rt0.c2;
SELECT rt0.c0 FROM rt0;
SELECT rt0.c0 FROM rt0 WHERE (CASE WHEN ((rt0.c1)&(rt0.c0)) THEN (+ (rt0.c1)) END) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (CASE WHEN ((rt0.c1)&(rt0.c0)) THEN (+ (rt0.c1)) END))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE (((CASE WHEN ((rt0.c1)&(rt0.c0)) THEN (+ (rt0.c1)) END) ISNULL));
SELECT rt0.c0 FROM rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((x'')OR(((vt0.c0)>=(vt0.c0)))))AND((NOT (vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((x'')OR(((vt0.c0)>=(vt0.c0)))))AND((NOT (vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((x'')OR(((vt0.c0)>=(vt0.c0)))))AND((NOT (vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, rt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt0, rt0, vt1 WHERE ((('-796701617')OR(CAST(vt1.c0 AS BLOB)))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt0, rt0, vt1 WHERE ((NOT ((('-796701617')OR(CAST(vt1.c0 AS BLOB)))))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt0, rt0, vt1 WHERE ((((('-796701617')OR(CAST(vt1.c0 AS BLOB)))) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, rt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN vt1 ON rt0.c1 LEFT OUTER JOIN vt0 ON ((((((((vt1.c1)OR(vt1.c0)))AND(rt0.c1)))OR(NULL)))OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT ALL vt1.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN vt1 ON rt0.c1 LEFT OUTER JOIN vt0 ON ((((((((vt1.c1)OR(vt1.c0)))AND(rt0.c1)))OR(NULL)))OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c1 HAVING MIN(rt0.c2) UNION ALL SELECT vt1.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN vt1 ON rt0.c1 LEFT OUTER JOIN vt0 ON ((((((((vt1.c1)OR(vt1.c0)))AND(rt0.c1)))OR(NULL)))OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (MIN(rt0.c2))) UNION ALL SELECT ALL vt1.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN vt1 ON rt0.c1 LEFT OUTER JOIN vt0 ON ((((((((vt1.c1)OR(vt1.c0)))AND(rt0.c1)))OR(NULL)))OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c1 HAVING ((MIN(rt0.c2)) ISNULL);
SELECT ALL vt1.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN vt1 ON rt0.c1 LEFT OUTER JOIN vt0 ON ((((((((vt1.c1)OR(vt1.c0)))AND(rt0.c1)))OR(NULL)))OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT ALL vt1.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN vt1 ON rt0.c1 LEFT OUTER JOIN vt0 ON ((((((((vt1.c1)OR(vt1.c0)))AND(rt0.c1)))OR(NULL)))OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c1 HAVING MIN(rt0.c2) UNION ALL SELECT vt1.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN vt1 ON rt0.c1 LEFT OUTER JOIN vt0 ON ((((((((vt1.c1)OR(vt1.c0)))AND(rt0.c1)))OR(NULL)))OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (MIN(rt0.c2))) UNION ALL SELECT ALL vt1.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN vt1 ON rt0.c1 LEFT OUTER JOIN vt0 ON ((((((((vt1.c1)OR(vt1.c0)))AND(rt0.c1)))OR(NULL)))OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c1 HAVING ((MIN(rt0.c2)) ISNULL);
SELECT ALL vt1.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN vt1 ON rt0.c1 LEFT OUTER JOIN vt0 ON ((((((((vt1.c1)OR(vt1.c0)))AND(rt0.c1)))OR(NULL)))OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (LIKELY(SQLITE_COMPILEOPTION_GET(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (LIKELY(SQLITE_COMPILEOPTION_GET(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((LIKELY(SQLITE_COMPILEOPTION_GET(vt0.c0))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0, vt1 NATURAL JOIN rt0;
SELECT DISTINCT * FROM vt0, vt1 NATURAL JOIN rt0 WHERE (((((((rt0.c2)>=(rt0.c2)))OR(((0.7620313901791018)IS NOT(vt1.c1)))))OR(((((((((vt1.c0)OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c1)))OR(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0, vt1 NATURAL JOIN rt0 WHERE ((NOT (((((((rt0.c2)>=(rt0.c2)))OR(((0.7620313901791018)IS NOT(vt1.c1)))))OR(((((((((vt1.c0)OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c1)))OR(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0, vt1 NATURAL JOIN rt0 WHERE (((((((((rt0.c2)>=(rt0.c2)))OR(((0.7620313901791018)IS NOT(vt1.c1)))))OR(((((((((vt1.c0)OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c1)))OR(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1 NATURAL JOIN rt0;
SELECT vt0.c0, rt0.c1, rt0.c2, vt1.c0 FROM rt0, vt0 INNER JOIN vt1 ON (((((rt0.c1) IS FALSE)))<=((ROUND(vt1.c0, vt1.c0)))) GROUP BY vt0.c0, rt0.c1, rt0.c2, vt1.c0;
SELECT ALL vt0.c0, rt0.c1, rt0.c2, vt1.c0 FROM rt0, vt0 INNER JOIN vt1 ON (((((rt0.c1) IS FALSE)))<=((ROUND(vt1.c0, vt1.c0)))) WHERE ((((rt0.c2)) BETWEEN ((rt0.c0)) AND (((vt0.c0 IN (vt0.c0)))))) GROUP BY vt0.c0, rt0.c1, rt0.c2, vt1.c0 UNION SELECT vt0.c0, rt0.c1, rt0.c2, vt1.c0 FROM rt0, vt0 INNER JOIN vt1 ON (((((rt0.c1) IS FALSE)))<=((ROUND(vt1.c0, vt1.c0)))) WHERE ((NOT ((((rt0.c2)) BETWEEN ((rt0.c0)) AND (((vt0.c0 IN (vt0.c0)))))))) GROUP BY vt0.c0, rt0.c1, rt0.c2, vt1.c0 UNION SELECT vt0.c0, rt0.c1, rt0.c2, vt1.c0 FROM rt0, vt0 INNER JOIN vt1 ON (((((rt0.c1) IS FALSE)))<=((ROUND(vt1.c0, vt1.c0)))) WHERE ((((((rt0.c2)) BETWEEN ((rt0.c0)) AND (((vt0.c0 IN (vt0.c0)))))) ISNULL)) GROUP BY vt0.c0, rt0.c1, rt0.c2, vt1.c0;
SELECT vt0.c0, rt0.c1, rt0.c2, vt1.c0 FROM rt0, vt0 INNER JOIN vt1 ON (((((rt0.c1) IS FALSE)))<=((ROUND(vt1.c0, vt1.c0)))) GROUP BY vt0.c0, rt0.c1, rt0.c2, vt1.c0;
SELECT rt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2 HAVING (((GROUP_CONCAT(MAX(vt0.c0)))) BETWEEN ((AVG(COUNT(rt0.c1)))) AND ((rt0.c0))) UNION ALL SELECT rt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT ((((GROUP_CONCAT(MAX(vt0.c0)))) BETWEEN ((AVG(COUNT(rt0.c1)))) AND ((rt0.c0))))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2 HAVING (((((GROUP_CONCAT(MAX(vt0.c0)))) BETWEEN ((AVG(COUNT(rt0.c1)))) AND ((rt0.c0)))) ISNULL);
SELECT MIN(((((vt0.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0))) IS FALSE)) FROM vt0, rt0, vt1;
SELECT ALL rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c0, rt0.c2 FROM rt0 WHERE (CASE (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))  WHEN rt0.c1 THEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 END WHEN UNLIKELY(DISTINCT rt0.c1) THEN CAST(rt0.c0 AS REAL) WHEN (- (rt0.c1)) THEN (((rt0.c2))!=((rt0.c0))) END) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (CASE (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))  WHEN rt0.c1 THEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 END WHEN UNLIKELY(DISTINCT rt0.c1) THEN CAST(rt0.c0 AS REAL) WHEN (- (rt0.c1)) THEN (((rt0.c2))<>((rt0.c0))) END))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 WHERE (((CASE (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))  WHEN rt0.c1 THEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 END WHEN UNLIKELY(DISTINCT rt0.c1) THEN CAST(rt0.c0 AS REAL) WHEN (- (rt0.c1)) THEN (((rt0.c2))!=((rt0.c0))) END) ISNULL));
SELECT ALL rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0, vt1.c1, rt0.c1 FROM vt1 INNER JOIN rt0 ON CASE WHEN (((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN rt0.c0 ELSE CAST(vt1.c1 AS NUMERIC) END;
SELECT DISTINCT rt0.c2, rt0.c0, vt1.c1, rt0.c1 FROM vt1 INNER JOIN rt0 ON CASE WHEN (((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN rt0.c0 ELSE CAST(vt1.c1 AS NUMERIC) END WHERE (COALESCE(json_remove(vt1.c1, vt1.c0), ((rt0.c0)<>(vt1.c1)))) UNION SELECT DISTINCT rt0.c2, rt0.c0, vt1.c1, rt0.c1 FROM vt1 INNER JOIN rt0 ON CASE WHEN (((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN rt0.c0 ELSE CAST(vt1.c1 AS NUMERIC) END WHERE ((NOT (COALESCE(json_remove(vt1.c1, vt1.c0), ((rt0.c0)!=(vt1.c1)))))) UNION SELECT DISTINCT rt0.c2, rt0.c0, vt1.c1, rt0.c1 FROM vt1 INNER JOIN rt0 ON CASE WHEN (((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN rt0.c0 ELSE CAST(vt1.c1 AS NUMERIC) END WHERE (((COALESCE(json_remove(vt1.c1, vt1.c0), ((rt0.c0)<>(vt1.c1)))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, vt1.c1, rt0.c1 FROM vt1 INNER JOIN rt0 ON CASE WHEN (((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN rt0.c0 ELSE CAST(vt1.c1 AS NUMERIC) END;
SELECT ALL rt0.c2, vt1.c1, vt1.c0, vt0.c0, rt0.c0 FROM vt0 INNER JOIN vt1 ON ((((vt0.c0) NOT NULL)) NOT BETWEEN (((0.7783189302668613)IS(rt0.c2))) AND (((vt1.c0)LIKE(vt1.c0)))) FULL OUTER JOIN rt0 ON ((LIKE(rt0.c1, vt1.c1, '0'))<=(((((((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)))OR(rt0.c0)))AND(vt1.c0)))) GROUP BY rt0.c2, vt1.c1, vt1.c0, vt0.c0, rt0.c0;
SELECT ALL rt0.c0, vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c1;
SELECT rt0.c0, vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c1 HAVING COUNT(CASE COUNT(*)  WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c0 END) UNION ALL SELECT ALL rt0.c0, vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c1 HAVING (NOT (COUNT(CASE COUNT(*)  WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c0 END))) UNION ALL SELECT rt0.c0, vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c1 HAVING ((COUNT(CASE COUNT(*)  WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c0 END)) ISNULL);
SELECT vt1.c1, vt1.c0 FROM vt1;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE (UNLIKELY(((vt1.c0) BETWEEN (vt1.c1) AND (NULL)))) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1 WHERE ((NOT (UNLIKELY(((vt1.c0) BETWEEN (vt1.c1) AND (NULL)))))) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE (((UNLIKELY(((vt1.c0) BETWEEN (vt1.c1) AND (NULL)))) ISNULL));
SELECT vt1.c1, vt1.c0 FROM vt1;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ('') UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (''))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((('') ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c1 FROM vt0, rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM vt0, rt0 WHERE (((0xffffffffd19d4961) ISNULL)) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM vt0, rt0 WHERE ((NOT (((0xffffffffd19d4961) ISNULL)))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM vt0, rt0 WHERE (((((0Xffffffffd19d4961) ISNULL)) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM vt0, rt0 GROUP BY rt0.c1;
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING AVG(((COUNT(vt1.c1)) IS FALSE)) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (AVG(((COUNT(vt1.c1)) IS FALSE)))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING ((AVG(((COUNT(vt1.c1)) IS FALSE))) ISNULL);
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE (CAST(CAST(vt1.c0 AS INTEGER) AS REAL)) UNION ALL SELECT * FROM vt1 WHERE ((NOT (CAST(CAST(vt1.c0 AS INTEGER) AS REAL)))) UNION ALL SELECT * FROM vt1 WHERE (((CAST(CAST(vt1.c0 AS INTEGER) AS REAL)) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM vt1, rt0, vt0;
SELECT DISTINCT * FROM vt1, rt0, vt0 WHERE (-5.78200474E8) UNION SELECT DISTINCT * FROM vt1 NOT INDEXED, rt0, vt0 WHERE ((NOT (-5.78200474E8))) UNION SELECT DISTINCT * FROM vt1, rt0, vt0 WHERE (((-5.78200474E8) ISNULL));
SELECT DISTINCT * FROM vt1, rt0, vt0;
SELECT ALL vt0.c0, rt0.c0, rt0.c1 FROM vt0 CROSS JOIN rt0 ON ((CAST(rt0.c0 AS REAL))|(UNICODE(rt0.c1))) GROUP BY vt0.c0, rt0.c0, rt0.c1;
SELECT ALL vt0.c0, rt0.c0, rt0.c1 FROM vt0 CROSS JOIN rt0 ON ((CAST(rt0.c0 AS REAL))|(UNICODE(rt0.c1))) WHERE (CASE WHEN ((rt0.c2)!=(rt0.c2)) THEN (+ (vt0.c0)) ELSE ((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) END) GROUP BY vt0.c0, rt0.c0, rt0.c1 UNION SELECT vt0.c0, rt0.c0, rt0.c1 FROM vt0 CROSS JOIN rt0 ON ((CAST(rt0.c0 AS REAL))|(UNICODE(rt0.c1))) WHERE ((NOT (CASE WHEN ((rt0.c2)!=(rt0.c2)) THEN (+ (vt0.c0)) ELSE ((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) END))) GROUP BY vt0.c0, rt0.c0, rt0.c1 UNION SELECT vt0.c0, rt0.c0, rt0.c1 FROM vt0 CROSS JOIN rt0 ON ((CAST(rt0.c0 AS REAL))|(UNICODE(rt0.c1))) WHERE (((CASE WHEN ((rt0.c2)!=(rt0.c2)) THEN (+ (vt0.c0)) ELSE ((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) END) ISNULL)) GROUP BY vt0.c0, rt0.c0, rt0.c1;
SELECT ALL vt0.c0, rt0.c0, rt0.c1 FROM vt0 CROSS JOIN rt0 ON ((CAST(rt0.c0 AS REAL))|(UNICODE(rt0.c1))) GROUP BY vt0.c0, rt0.c0, rt0.c1;
SELECT rt0.c2, vt0.c0, rt0.c0, vt1.c0, rt0.c1 FROM vt0, rt0, vt1 GROUP BY rt0.c2, vt0.c0, rt0.c0, vt1.c0, rt0.c1;
SELECT ALL rt0.c2, vt0.c0, rt0.c0, vt1.c0, rt0.c1 FROM vt0, rt0, vt1 GROUP BY rt0.c2, vt0.c0, rt0.c0, vt1.c0, rt0.c1 HAVING ((MAX(MAX(rt0.c2))) NOT BETWEEN (AVG(COUNT(*))) AND (MAX(COUNT(rt0.c0)))) UNION ALL SELECT ALL rt0.c2, vt0.c0, rt0.c0, vt1.c0, rt0.c1 FROM vt0, rt0, vt1 GROUP BY rt0.c2, vt0.c0, rt0.c0, vt1.c0, rt0.c1 HAVING (NOT (((MAX(MAX(rt0.c2))) NOT BETWEEN (AVG(COUNT(*))) AND (MAX(COUNT(rt0.c0)))))) UNION ALL SELECT rt0.c2, vt0.c0, rt0.c0, vt1.c0, rt0.c1 FROM vt0, rt0, vt1 GROUP BY rt0.c2, vt0.c0, rt0.c0, vt1.c0, rt0.c1 HAVING ((((MAX(MAX(rt0.c2))) NOT BETWEEN (AVG(COUNT(*))) AND (MAX(COUNT(rt0.c0))))) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE ((+ (CASE 0Xffffffffe1af04f1  WHEN vt0.c0 THEN vt0.c0 WHEN '' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((+ (CASE 0xffffffffe1af04f1  WHEN vt0.c0 THEN vt0.c0 WHEN '' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))))) UNION ALL SELECT * FROM vt0 WHERE ((((+ (CASE 0xffffffffe1af04f1  WHEN vt0.c0 THEN vt0.c0 WHEN '' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM rt0 INNER JOIN vt0 ON ((((vt0.c0)>=(rt0.c1)))AND(((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))));
SELECT DISTINCT * FROM rt0 INNER JOIN vt0 ON ((((vt0.c0)>=(rt0.c1)))AND(((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))) WHERE (((IFNULL(DISTINCT rt0.c1, vt0.c0))>(0.8662308722849937))) UNION SELECT DISTINCT * FROM rt0 INNER JOIN vt0 ON ((((vt0.c0)>=(rt0.c1)))AND(((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))) WHERE ((NOT (((IFNULL(DISTINCT rt0.c1, vt0.c0))>(0.8662308722849937))))) UNION SELECT DISTINCT * FROM rt0 INNER JOIN vt0 ON ((((vt0.c0)>=(rt0.c1)))AND(((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))) WHERE (((((IFNULL(DISTINCT rt0.c1, vt0.c0))>(0.8662308722849937))) ISNULL));
SELECT DISTINCT * FROM rt0 INNER JOIN vt0 ON ((((vt0.c0)>=(rt0.c1)))AND(((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))));
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1))) BETWEEN (NULL) AND (((rt0.c2)>>(rt0.c2))))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1))) BETWEEN (NULL) AND (((rt0.c2)>>(rt0.c2))))))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1))) BETWEEN (NULL) AND (((rt0.c2)>>(rt0.c2))))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING UNLIKELY(CAST(AVG(vt1.c1) AS NUMERIC)) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (UNLIKELY(CAST(AVG(vt1.c1) AS NUMERIC)))) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((UNLIKELY(CAST(AVG(vt1.c1) AS NUMERIC))) ISNULL);
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING UNLIKELY(CAST(AVG(vt1.c1) AS NUMERIC)) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (UNLIKELY(CAST(AVG(vt1.c1) AS NUMERIC)))) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((UNLIKELY(CAST(AVG(vt1.c1) AS NUMERIC))) ISNULL);
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT * FROM vt1, vt0;
SELECT * FROM vt1, vt0 WHERE (((((vt1.c1)<<(vt0.c0))) NOT BETWEEN (((vt1.c1)>=(vt1.c1))) AND (((vt0.c0)|(x''))))) UNION ALL SELECT * FROM vt1, vt0 NOT INDEXED WHERE ((NOT (((((vt1.c1)<<(vt0.c0))) NOT BETWEEN (((vt1.c1)>=(vt1.c1))) AND (((vt0.c0)|(x''))))))) UNION ALL SELECT ALL * FROM vt1, vt0 WHERE (((((((vt1.c1)<<(vt0.c0))) NOT BETWEEN (((vt1.c1)>=(vt1.c1))) AND (((vt0.c0)|(x''))))) ISNULL));
SELECT * FROM vt1, vt0;
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0;
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((((vt1.c1 IN ()))<=(vt1.c1 COLLATE RTRIM))) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1 NOT INDEXED, vt0 WHERE ((NOT ((((vt1.c1 IN ()))<=(vt1.c1 COLLATE RTRIM))))) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((((((vt1.c1 IN ()))<=(vt1.c1 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (rt0.c1) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (rt0.c1))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (((rt0.c1) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT vt1.c0, rt0.c1, rt0.c0, rt0.c2, vt1.c1 FROM vt0, rt0, vt1 GROUP BY vt1.c0, rt0.c1, rt0.c0, rt0.c2, vt1.c1;
SELECT ALL vt1.c0, rt0.c1, rt0.c0, rt0.c2, vt1.c1 FROM vt0, rt0, vt1 GROUP BY vt1.c0, rt0.c1, rt0.c0, rt0.c2, vt1.c1 HAVING MIN(CASE MAX(rt0.c2)  WHEN COUNT(vt1.c1) THEN MAX(vt1.c0) WHEN rt0.c1 THEN rt0.c0 WHEN MAX(SUM(rt0.c0)) THEN MIN(COUNT(*)) END) UNION ALL SELECT vt1.c0, rt0.c1, rt0.c0, rt0.c2, vt1.c1 FROM vt0, rt0, vt1 GROUP BY vt1.c0, rt0.c1, rt0.c0, rt0.c2, vt1.c1 HAVING (NOT (MIN(CASE MAX(rt0.c2)  WHEN COUNT(vt1.c1) THEN MAX(vt1.c0) WHEN rt0.c1 THEN rt0.c0 WHEN MAX(SUM(rt0.c0)) THEN MIN(COUNT(*)) END))) UNION ALL SELECT vt1.c0, rt0.c1, rt0.c0, rt0.c2, vt1.c1 FROM vt0, rt0, vt1 GROUP BY vt1.c0, rt0.c1, rt0.c0, rt0.c2, vt1.c1 HAVING ((MIN(CASE MAX(rt0.c2)  WHEN COUNT(vt1.c1) THEN MAX(vt1.c0) WHEN rt0.c1 THEN rt0.c0 WHEN MAX(SUM(rt0.c0)) THEN MIN(COUNT(*)) END)) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (CASE (+ (x''))  WHEN ((vt0.c0)+(vt0.c0)) THEN ABS(NULL) WHEN (NOT (x'')) THEN ((vt0.c0) IS TRUE) WHEN CAST(vt0.c0 AS NUMERIC) THEN ((vt0.c0)<=(vt0.c0)) ELSE ((vt0.c0)>=(vt0.c0)) END) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (CASE (+ (x''))  WHEN ((vt0.c0)+(vt0.c0)) THEN ABS(NULL) WHEN (NOT (x'')) THEN ((vt0.c0) IS TRUE) WHEN CAST(vt0.c0 AS NUMERIC) THEN ((vt0.c0)<=(vt0.c0)) ELSE ((vt0.c0)>=(vt0.c0)) END))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((CASE (+ (x''))  WHEN ((vt0.c0)+(vt0.c0)) THEN ABS(NULL) WHEN (NOT (x'')) THEN ((vt0.c0) IS TRUE) WHEN CAST(vt0.c0 AS NUMERIC) THEN ((vt0.c0)<=(vt0.c0)) ELSE ((vt0.c0)>=(vt0.c0)) END) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM rt0, vt0, vt1;
SELECT DISTINCT * FROM rt0, vt0, vt1 WHERE (((((((((((((((vt1.c0) ISNULL))AND((NOT (vt1.c1)))))OR(CASE WHEN ',[ఈ' THEN vt1.c1 END)))AND((vt0.c0 IN (rt0.c1, vt1.c0)))))AND(((rt0.c1)LIKE(vt1.c1)))))OR(CAST(0.37949366553901576 AS REAL))))AND(((vt1.c0) BETWEEN (vt0.c0) AND (rt0.c1))))) UNION SELECT DISTINCT * FROM rt0, vt0, vt1 WHERE ((NOT (((((((((((((((vt1.c0) ISNULL))AND((NOT (vt1.c1)))))OR(CASE WHEN ',[ఈ' THEN vt1.c1 END)))AND((vt0.c0 IN (rt0.c1, vt1.c0)))))AND(((rt0.c1)LIKE(vt1.c1)))))OR(CAST(0.37949366553901576 AS REAL))))AND(((vt1.c0) BETWEEN (vt0.c0) AND (rt0.c1))))))) UNION SELECT DISTINCT * FROM rt0, vt0, vt1 WHERE (((((((((((((((((vt1.c0) ISNULL))AND((NOT (vt1.c1)))))OR(CASE WHEN ',[ఈ' THEN vt1.c1 END)))AND((vt0.c0 IN (rt0.c1, vt1.c0)))))AND(((rt0.c1)LIKE(vt1.c1)))))OR(CAST(0.37949366553901576 AS REAL))))AND(((vt1.c0) BETWEEN (vt0.c0) AND (rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0, vt1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0 IN (x''))))>((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0 IN (x''))))>((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((((vt0.c0 IN (x''))))>((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt1.c1 FROM vt1, vt0 GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1, vt0 GROUP BY vt1.c1 HAVING vt1.c0 UNION ALL SELECT vt1.c1 FROM vt1, vt0 GROUP BY vt1.c1 HAVING (NOT (vt1.c0)) UNION ALL SELECT ALL vt1.c1 FROM vt1, vt0 GROUP BY vt1.c1 HAVING ((vt1.c0) ISNULL);
SELECT vt1.c1 FROM vt1, vt0 GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1, vt0 GROUP BY vt1.c1 HAVING vt1.c0 UNION ALL SELECT vt1.c1 FROM vt1, vt0 GROUP BY vt1.c1 HAVING (NOT (vt1.c0)) UNION ALL SELECT ALL vt1.c1 FROM vt1, vt0 GROUP BY vt1.c1 HAVING ((vt1.c0) ISNULL);
SELECT vt1.c1 FROM vt1, vt0 GROUP BY vt1.c1;
SELECT * FROM rt0 NATURAL JOIN vt1;
SELECT * FROM rt0 NATURAL JOIN vt1 WHERE ((CASE WHEN 2.09465628E9 THEN x'' ELSE x'' END IN ())) UNION ALL SELECT * FROM rt0 NATURAL JOIN vt1 WHERE ((NOT ((CASE WHEN 2.09465628E9 THEN x'' ELSE x'' END IN ())))) UNION ALL SELECT ALL * FROM rt0 NATURAL JOIN vt1 WHERE ((((CASE WHEN 2.09465628E9 THEN x'' ELSE x'' END IN ())) ISNULL));
SELECT * FROM rt0 NATURAL JOIN vt1;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (ROUND(((rt0.c1)LIKE(rt0.c2)), CAST(rt0.c2 AS TEXT))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (ROUND(((rt0.c1)LIKE(rt0.c2)), CAST(rt0.c2 AS TEXT))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((ROUND(((rt0.c1)LIKE(rt0.c2)), CAST(rt0.c2 AS TEXT))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN vt0 ON ((((NULL)=(rt0.c0)))AND(rt0.c1 COLLATE RTRIM)) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN vt0 ON ((((NULL)=(rt0.c0)))AND(rt0.c1 COLLATE RTRIM)) WHERE ((+ (((6.56686998E8)*('-1910807632'))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN vt0 ON ((((NULL)=(rt0.c0)))AND(rt0.c1 COLLATE RTRIM)) WHERE ((NOT ((+ (((6.56686998E8)*('-1910807632'))))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN vt0 ON ((((NULL)=(rt0.c0)))AND(rt0.c1 COLLATE RTRIM)) WHERE ((((+ (((6.56686998E8)*('-1910807632'))))) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN vt0 ON ((((NULL)=(rt0.c0)))AND(rt0.c1 COLLATE RTRIM)) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, vt1.c1 FROM vt1 LEFT OUTER JOIN vt0 ON CAST(CASE vt1.c1  WHEN NULL THEN rt0.c2 WHEN vt1.c1 THEN '9OV' WHEN rt0.c2 THEN vt1.c1 END AS REAL) RIGHT OUTER JOIN rt0 ON (((((NULL IN ()))AND(LOWER(x''))))OR(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)))) GROUP BY rt0.c1, vt1.c1;
SELECT ALL rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0;
SELECT ALL rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 WHERE (((CASE rt0.c0  WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c0 END) NOT BETWEEN (((rt0.c2)*(1.405612809E9))) AND (((vt0.c0)-(rt0.c2))))) UNION ALL SELECT ALL rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 WHERE ((NOT (((CASE rt0.c0  WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c0 END) NOT BETWEEN (((rt0.c2)*(1.405612809E9))) AND (((vt0.c0)-(rt0.c2))))))) UNION ALL SELECT rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 WHERE (((((CASE rt0.c0  WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c0 END) NOT BETWEEN (((rt0.c2)*(1.405612809E9))) AND (((vt0.c0)-(rt0.c2))))) ISNULL));
SELECT ALL rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((+ (LOWER(DISTINCT vt0.c0)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((+ (LOWER(DISTINCT vt0.c0)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((+ (LOWER(DISTINCT vt0.c0)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM vt0, rt0 WHERE ((((CASE rt0.c1  WHEN vt0.c0 THEN rt0.c1 ELSE vt0.c0 END, ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)), LIKELY(DISTINCT rt0.c2)))=((CAST(rt0.c1 AS NUMERIC), (((rt0.c2))>=((rt0.c2))), rt0.c2)))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM vt0, rt0 WHERE ((NOT ((((CASE rt0.c1  WHEN vt0.c0 THEN rt0.c1 ELSE vt0.c0 END, ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)), LIKELY(DISTINCT rt0.c2)))==((CAST(rt0.c1 AS NUMERIC), (((rt0.c2))>=((rt0.c2))), rt0.c2)))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM vt0, rt0 WHERE ((((((CASE rt0.c1  WHEN vt0.c0 THEN rt0.c1 ELSE vt0.c0 END, ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)), LIKELY(DISTINCT rt0.c2)))==((CAST(rt0.c1 AS NUMERIC), (((rt0.c2))>=((rt0.c2))), rt0.c2)))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2;
SELECT ALL vt1.c0, rt0.c1 FROM rt0 RIGHT OUTER JOIN vt1 ON ((((x'')AND(CAST(x'e6f295ec' AS BLOB))))OR((((NULL))!=((vt1.c1))))) GROUP BY vt1.c0, rt0.c1;
SELECT ALL vt1.c0, rt0.c1 FROM rt0 RIGHT OUTER JOIN vt1 ON ((((x'')AND(CAST(x'e6f295ec' AS BLOB))))OR((((NULL))!=((vt1.c1))))) GROUP BY vt1.c0, rt0.c1 HAVING GROUP_CONCAT(MIN(vt1.c1)) UNION ALL SELECT ALL vt1.c0, rt0.c1 FROM rt0 RIGHT OUTER JOIN vt1 ON ((((x'')AND(CAST(x'e6f295ec' AS BLOB))))OR((((NULL))<>((vt1.c1))))) GROUP BY vt1.c0, rt0.c1 HAVING (NOT (GROUP_CONCAT(MIN(vt1.c1)))) UNION ALL SELECT vt1.c0, rt0.c1 FROM rt0 RIGHT OUTER JOIN vt1 ON ((((x'')AND(CAST(x'e6f295ec' AS BLOB))))OR((((NULL))!=((vt1.c1))))) GROUP BY vt1.c0, rt0.c1 HAVING ((GROUP_CONCAT(MIN(vt1.c1))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0)))) NOT NULL)) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((((((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0)))) NOT NULL)))) UNION ALL SELECT * FROM vt0 WHERE ((((((((vt0.c0, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0)))) NOT NULL)) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((('')) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) AND ((vt0.c0)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((('')) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) AND ((vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((('')) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) AND ((vt0.c0)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c2 AS INTEGER)) NOT BETWEEN (((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c0))) AND (CASE WHEN vt0.c0 THEN vt0.c0 END)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c2 AS INTEGER)) NOT BETWEEN (((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c0))) AND (CASE WHEN vt0.c0 THEN vt0.c0 END)) WHERE (NULL) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c2 AS INTEGER)) NOT BETWEEN (((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c0))) AND (CASE WHEN vt0.c0 THEN vt0.c0 END)) WHERE ((NOT (NULL))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c2 AS INTEGER)) NOT BETWEEN (((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c0))) AND (CASE WHEN vt0.c0 THEN vt0.c0 END)) WHERE (((NULL) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c2 AS INTEGER)) NOT BETWEEN (((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c0))) AND (CASE WHEN vt0.c0 THEN vt0.c0 END)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2 FROM vt0, rt0, vt1 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt0, rt0, vt1 GROUP BY rt0.c2 HAVING ((json_patch(NULL, COUNT(vt0.c0))) NOT NULL) UNION ALL SELECT rt0.c2 FROM vt0, rt0, vt1 GROUP BY rt0.c2 HAVING (NOT (((json_patch(NULL, COUNT(vt0.c0))) NOT NULL))) UNION ALL SELECT ALL rt0.c2 FROM vt0, rt0, vt1 GROUP BY rt0.c2 HAVING ((((json_patch(NULL, COUNT(vt0.c0))) NOT NULL)) ISNULL);
SELECT ALL rt0.c2 FROM vt0, rt0, vt1 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt0, rt0, vt1 GROUP BY rt0.c2 HAVING ((json_patch(NULL, COUNT(vt0.c0))) NOT NULL) UNION ALL SELECT rt0.c2 FROM vt0, rt0, vt1 GROUP BY rt0.c2 HAVING (NOT (((json_patch(NULL, COUNT(vt0.c0))) NOT NULL))) UNION ALL SELECT ALL rt0.c2 FROM vt0, rt0, vt1 GROUP BY rt0.c2 HAVING ((((json_patch(NULL, COUNT(vt0.c0))) NOT NULL)) ISNULL);
SELECT ALL rt0.c2 FROM vt0, rt0, vt1 GROUP BY rt0.c2;
SELECT ALL vt1.c1, vt1.c0 FROM vt1;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE ((((((~ (vt1.c0)))OR((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))AND(((((vt1.c1)AND(vt1.c1)))AND(vt1.c1))))) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1 WHERE ((NOT ((((((~ (vt1.c0)))OR((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))AND(((((vt1.c1)AND(vt1.c1)))AND(vt1.c1))))))) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1 WHERE ((((((((~ (vt1.c0)))OR((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))AND(((((vt1.c1)AND(vt1.c1)))AND(vt1.c1))))) ISNULL));
SELECT ALL vt1.c1, vt1.c0 FROM vt1;
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt1 ON x'';
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt1 ON x'' WHERE ((rt0.c1 COLLATE RTRIM IN ())) UNION SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt1 ON x'' WHERE ((NOT ((rt0.c1 COLLATE RTRIM IN ())))) UNION SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt1 ON x'' WHERE ((((rt0.c1 COLLATE RTRIM IN ())) ISNULL));
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt1 ON x'';
SELECT rt0.c1, rt0.c0 FROM vt1, rt0, vt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM vt1, rt0, vt0 WHERE ((((rt0.c2, vt1.c0, rt0.c1, vt0.c0, rt0.c1)) NOT BETWEEN ((((rt0.c0)AND(rt0.c0)), ((NULL)AND(0.5622152040280544)), CAST(x'' AS TEXT), vt0.c0 COLLATE BINARY, vt1.c0)) AND ((CASE rt0.c2  WHEN rt0.c0 THEN vt1.c1 END, CAST(rt0.c2 AS TEXT), (vt1.c1 IN ()), LIKELY(DISTINCT rt0.c1), ((vt0.c0)>=(vt0.c0)))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM vt1, rt0, vt0 WHERE ((NOT ((((rt0.c2, vt1.c0, rt0.c1, vt0.c0, rt0.c1)) NOT BETWEEN ((((rt0.c0)AND(rt0.c0)), ((NULL)AND(0.5622152040280544)), CAST(x'' AS TEXT), vt0.c0 COLLATE BINARY, vt1.c0)) AND ((CASE rt0.c2  WHEN rt0.c0 THEN vt1.c1 END, CAST(rt0.c2 AS TEXT), (vt1.c1 IN ()), LIKELY(DISTINCT rt0.c1), ((vt0.c0)>=(vt0.c0)))))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM vt1, rt0, vt0 WHERE ((((((rt0.c2, vt1.c0, rt0.c1, vt0.c0, rt0.c1)) NOT BETWEEN ((((rt0.c0)AND(rt0.c0)), ((NULL)AND(0.5622152040280544)), CAST(x'' AS TEXT), vt0.c0 COLLATE BINARY, vt1.c0)) AND ((CASE rt0.c2  WHEN rt0.c0 THEN vt1.c1 END, CAST(rt0.c2 AS TEXT), (vt1.c1 IN ()), LIKELY(DISTINCT rt0.c1), ((vt0.c0)>=(vt0.c0)))))) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM vt1, rt0, vt0 GROUP BY rt0.c1, rt0.c0;
SELECT vt1.c1, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c1, rt0.c0;
SELECT ALL vt1.c1, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c1, rt0.c0 HAVING (- (MIN(AVG(COUNT(vt1.c0))))) UNION ALL SELECT vt1.c1, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c1, rt0.c0 HAVING (NOT ((- (MIN(AVG(COUNT(vt1.c0))))))) UNION ALL SELECT vt1.c1, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c1, rt0.c0 HAVING (((- (MIN(AVG(COUNT(vt1.c0)))))) ISNULL);
SELECT vt0.c0 FROM vt0, vt1;
SELECT vt0.c0 FROM vt0, vt1 WHERE (((((((vt1.c0) BETWEEN (vt0.c0) AND ('lXec5')))AND(vt1.c0)))AND(NULLIF(vt0.c0, vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0, vt1 WHERE ((NOT (((((((vt1.c0) BETWEEN (vt0.c0) AND ('lXec5')))AND(vt1.c0)))AND(NULLIF(vt0.c0, vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0, vt1 WHERE (((((((((vt1.c0) BETWEEN (vt0.c0) AND ('lXec5')))AND(vt1.c0)))AND(NULLIF(vt0.c0, vt0.c0)))) ISNULL));
SELECT vt0.c0 FROM vt0, vt1;
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt0 ON (((((((((((((- (0.45977742655252474)))AND(CAST(rt0.c0 AS REAL))))AND(vt1.c1 COLLATE BINARY)))AND(((rt0.c1)!=('iUb{[蹛')))))OR(CAST(1.187812499E9 AS INTEGER))))AND(rt0.c1 COLLATE NOCASE)))AND(((rt0.c1) NOT NULL))) LEFT OUTER JOIN vt1 ON ((vt1.c0) NOT BETWEEN (((rt0.c2) IS TRUE)) AND (vt1.c1 COLLATE RTRIM));
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE ((((((NOT (rt0.c0)))AND((~ (rt0.c2)))))AND(0x7c668318))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT ((((((NOT (rt0.c0)))AND((~ (rt0.c2)))))AND(0X7c668318))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((((((((NOT (rt0.c0)))AND((~ (rt0.c2)))))AND(0X7c668318))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT vt1.c1, vt0.c0, rt0.c1, rt0.c0 FROM vt1 FULL OUTER JOIN rt0 ON json_array_length(rt0.c1) INNER JOIN vt0 ON ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt1.c0)))||(((vt1.c1)=(rt0.c0)))) GROUP BY vt1.c1, vt0.c0, rt0.c1, rt0.c0;
SELECT ALL vt1.c1, vt0.c0, rt0.c1, rt0.c0 FROM vt1 FULL OUTER JOIN rt0 ON json_array_length(rt0.c1) INNER JOIN vt0 ON ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt1.c0)))||(((vt1.c1)=(rt0.c0)))) GROUP BY vt1.c1, vt0.c0, rt0.c1, rt0.c0 HAVING AVG(MAX(rt0.c0)) UNION ALL SELECT ALL vt1.c1, vt0.c0, rt0.c1, rt0.c0 FROM vt1 FULL OUTER JOIN rt0 ON json_array_length(rt0.c1) INNER JOIN vt0 ON ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt1.c0)))||(((vt1.c1)=(rt0.c0)))) GROUP BY vt1.c1, vt0.c0, rt0.c1, rt0.c0 HAVING (NOT (AVG(MAX(rt0.c0)))) UNION ALL SELECT vt1.c1, vt0.c0, rt0.c1, rt0.c0 FROM vt1 FULL OUTER JOIN rt0 ON json_array_length(rt0.c1) INNER JOIN vt0 ON ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt1.c0)))||(((vt1.c1)=(rt0.c0)))) GROUP BY vt1.c1, vt0.c0, rt0.c1, rt0.c0 HAVING ((AVG(MAX(rt0.c0))) ISNULL);
SELECT MIN((((vt1.c1)) NOT BETWEEN ((((vt1.c0)>=(vt1.c0)))) AND (((('{}愳T') NOTNULL))))) FROM vt1 ORDER BY CAST(((0.8582200349863963) IS FALSE) AS INTEGER) ASC, CAST(((vt1.c1)/(vt1.c1)) AS TEXT);
SELECT ALL rt0.c0 FROM rt0, vt1;
SELECT ALL rt0.c0 FROM rt0, vt1 WHERE ((NOT (CASE rt0.c1  WHEN vt1.c1 THEN vt1.c1 ELSE rt0.c2 END))) UNION ALL SELECT ALL rt0.c0 FROM rt0, vt1 WHERE ((NOT ((NOT (CASE rt0.c1  WHEN vt1.c1 THEN vt1.c1 ELSE rt0.c2 END))))) UNION ALL SELECT ALL rt0.c0 FROM rt0, vt1 WHERE ((((NOT (CASE rt0.c1  WHEN vt1.c1 THEN vt1.c1 ELSE rt0.c2 END))) ISNULL));
SELECT ALL rt0.c0 FROM rt0, vt1;
SELECT DISTINCT vt0.c0, rt0.c0 FROM rt0, vt0;
SELECT DISTINCT vt0.c0, rt0.c0 FROM rt0, vt0 WHERE (((((LOWER(DISTINCT rt0.c0))AND(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))AND(((0Xffffffff9c708623)>>(rt0.c2))))) UNION SELECT DISTINCT vt0.c0, rt0.c0 FROM rt0, vt0 WHERE ((NOT (((((LOWER(DISTINCT rt0.c0))AND(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))AND(((0Xffffffff9c708623)>>(rt0.c2))))))) UNION SELECT DISTINCT vt0.c0, rt0.c0 FROM rt0, vt0 WHERE (((((((LOWER(DISTINCT rt0.c0))AND(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))AND(((0Xffffffff9c708623)>>(rt0.c2))))) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c0 FROM rt0, vt0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE (((((((rt0.c0)AND(rt0.c2)))OR(rt0.c2))) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND ((NOT ('-1231833019'))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (((((((rt0.c0)AND(rt0.c2)))OR(rt0.c2))) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND ((NOT ('-1231833019'))))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE (((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c2))) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND ((NOT ('-1231833019'))))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c2 FROM vt0, rt0, vt1 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt0, rt0, vt1 GROUP BY rt0.c2 HAVING COUNT(rt0.c1) COLLATE RTRIM UNION ALL SELECT rt0.c2 FROM vt0, rt0, vt1 GROUP BY rt0.c2 HAVING (NOT (COUNT(rt0.c1) COLLATE RTRIM)) UNION ALL SELECT rt0.c2 FROM vt0, rt0, vt1 GROUP BY rt0.c2 HAVING ((COUNT(rt0.c1) COLLATE RTRIM) ISNULL);
SELECT ALL rt0.c2 FROM vt0, rt0, vt1 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt0, rt0, vt1 GROUP BY rt0.c2 HAVING COUNT(rt0.c1) COLLATE RTRIM UNION ALL SELECT rt0.c2 FROM vt0, rt0, vt1 GROUP BY rt0.c2 HAVING (NOT (COUNT(rt0.c1) COLLATE RTRIM)) UNION ALL SELECT rt0.c2 FROM vt0, rt0, vt1 GROUP BY rt0.c2 HAVING ((COUNT(rt0.c1) COLLATE RTRIM) ISNULL);
SELECT ALL rt0.c2 FROM vt0, rt0, vt1 GROUP BY rt0.c2;
SELECT ALL rt0.c1 FROM rt0;
SELECT ALL rt0.c1 FROM rt0 WHERE ((- (NULL COLLATE NOCASE))) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT ((- (NULL COLLATE NOCASE))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE ((((- (NULL COLLATE NOCASE))) ISNULL));
SELECT ALL rt0.c1 FROM rt0;
SELECT DISTINCT vt1.c1 FROM rt0, vt0, vt1;
SELECT DISTINCT vt1.c1 FROM rt0, vt0, vt1 WHERE ((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))) COLLATE NOCASE) UNION SELECT DISTINCT vt1.c1 FROM rt0, vt0, vt1 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))) COLLATE NOCASE))) UNION SELECT DISTINCT vt1.c1 FROM rt0, vt0, vt1 WHERE ((((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))) COLLATE NOCASE) ISNULL));
SELECT DISTINCT vt1.c1 FROM rt0, vt0, vt1;
SELECT ALL vt1.c0, rt0.c2 FROM vt0 NOT INDEXED RIGHT OUTER JOIN vt1 ON GLOB(((x'') BETWEEN (rt0.c2) AND (rt0.c0)), ((rt0.c1) BETWEEN (vt1.c0) AND ('+碮'))) RIGHT OUTER JOIN rt0 ON ((((('?綌''S쾷/b')) BETWEEN ((vt0.c0)) AND ((rt0.c0))))||(CASE vt1.c1  WHEN vt0.c0 THEN rt0.c0 END)) GROUP BY vt1.c0, rt0.c2;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT(SUM(NULL)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(SUM(NULL)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(SUM(NULL))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0 IN ()))AND(((vt0.c0) IS TRUE))))OR(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((((vt0.c0 IN ()))AND(((vt0.c0) IS TRUE))))OR(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((((((vt0.c0 IN ()))AND(((vt0.c0) IS TRUE))))OR(vt0.c0))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (CASE vt0.c0  WHEN rt0.c2 THEN '\rB' WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN '0.12319873695370132' ELSE rt0.c1 END COLLATE BINARY) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (CASE vt0.c0  WHEN rt0.c2 THEN '\rB' WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN '0.12319873695370132' ELSE rt0.c1 END COLLATE BINARY))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((CASE vt0.c0  WHEN rt0.c2 THEN '\rB' WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN '0.12319873695370132' ELSE rt0.c1 END COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0, vt1 WHERE (((((vt1.c1))=(('ἠPჯ^'))) IN ())) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0, vt1 WHERE ((NOT (((((vt1.c1))=(('ἠPჯ^'))) IN ())))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0, vt1 WHERE (((((((vt1.c1))==(('ἠPჯ^'))) IN ())) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c2, vt1.c1 FROM vt0, vt1, rt0 GROUP BY rt0.c2, vt1.c1;
SELECT ALL rt0.c2, vt1.c1 FROM vt0, vt1, rt0 GROUP BY rt0.c2, vt1.c1 HAVING AVG((~ (SUM(TOTAL(SUM(vt0.c0)))))) UNION ALL SELECT rt0.c2, vt1.c1 FROM vt0, vt1, rt0 GROUP BY rt0.c2, vt1.c1 HAVING (NOT (AVG((~ (SUM(TOTAL(SUM(vt0.c0)))))))) UNION ALL SELECT ALL rt0.c2, vt1.c1 FROM vt0, vt1, rt0 GROUP BY rt0.c2, vt1.c1 HAVING ((AVG((~ (SUM(TOTAL(SUM(vt0.c0))))))) ISNULL);
SELECT vt0.c0, rt0.c2 FROM rt0, vt0;
SELECT vt0.c0, rt0.c2 FROM rt0, vt0 WHERE (((((rt0.c1)AND(rt0.c0))) NOT BETWEEN (TRIM(vt0.c0)) AND (((rt0.c0) BETWEEN (NULL) AND (rt0.c0))))) UNION ALL SELECT ALL vt0.c0, rt0.c2 FROM rt0, vt0 WHERE ((NOT (((((rt0.c1)AND(rt0.c0))) NOT BETWEEN (TRIM(vt0.c0)) AND (((rt0.c0) BETWEEN (NULL) AND (rt0.c0))))))) UNION ALL SELECT ALL vt0.c0, rt0.c2 FROM rt0, vt0 WHERE (((((((rt0.c1)AND(rt0.c0))) NOT BETWEEN (TRIM(vt0.c0)) AND (((rt0.c0) BETWEEN (NULL) AND (rt0.c0))))) ISNULL));
SELECT vt0.c0, rt0.c2 FROM rt0, vt0;
SELECT DISTINCT rt0.c1, vt0.c0 FROM vt0, rt0;
SELECT DISTINCT rt0.c1, vt0.c0 FROM vt0, rt0 WHERE ((((vt0.c0, vt0.c0, rt0.c2)) NOT BETWEEN ((8.06291863E8, (('-1216953988') NOT BETWEEN (rt0.c2) AND (vt0.c0)), rt0.c0)) AND ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE vt0.c0 END, ((vt0.c0)<<(vt0.c0)), vt0.c0 COLLATE NOCASE)))) UNION SELECT DISTINCT rt0.c1, vt0.c0 FROM vt0, rt0 WHERE ((NOT ((((vt0.c0, vt0.c0, rt0.c2)) NOT BETWEEN ((8.06291863E8, (('-1216953988') NOT BETWEEN (rt0.c2) AND (vt0.c0)), rt0.c0)) AND ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE vt0.c0 END, ((vt0.c0)<<(vt0.c0)), vt0.c0 COLLATE NOCASE)))))) UNION SELECT DISTINCT rt0.c1, vt0.c0 FROM vt0, rt0 WHERE ((((((vt0.c0, vt0.c0, rt0.c2)) NOT BETWEEN ((8.06291863E8, (('-1216953988') NOT BETWEEN (rt0.c2) AND (vt0.c0)), rt0.c0)) AND ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE vt0.c0 END, ((vt0.c0)<<(vt0.c0)), vt0.c0 COLLATE NOCASE)))) ISNULL));
SELECT DISTINCT rt0.c1, vt0.c0 FROM vt0, rt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0) ISNULL))<>(((vt0.c0)IS NOT(NULL))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) ISNULL))!=(((vt0.c0)IS NOT(NULL))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c0) ISNULL))<>(((vt0.c0)IS NOT(NULL))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING ((vt1.c0)/(((NULL)+(GROUP_CONCAT(AVG(vt1.c1)))))) UNION ALL SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING (NOT (((vt1.c0)/(((NULL)+(GROUP_CONCAT(AVG(vt1.c1)))))))) UNION ALL SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING ((((vt1.c0)/(((NULL)+(GROUP_CONCAT(AVG(vt1.c1))))))) ISNULL);
SELECT * FROM rt0, vt1;
SELECT * FROM rt0, vt1 WHERE (json_insert(x'', CAST(0.6743744467386747 AS TEXT), CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN vt1.c1 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c0 END)) UNION ALL SELECT ALL * FROM rt0 NOT INDEXED, vt1 WHERE ((NOT (json_insert(x'', CAST(0.6743744467386747 AS TEXT), CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN vt1.c1 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c0 END)))) UNION ALL SELECT * FROM rt0, vt1 WHERE (((json_insert(x'', CAST(0.6743744467386747 AS TEXT), CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN vt1.c1 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c0 END)) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (CASE WHEN vt1.c0 THEN vt1.c1 END) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (CASE WHEN vt1.c0 THEN vt1.c1 END))) UNION SELECT DISTINCT * FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c1 END) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((vt0.c0 IN ()))>>((- (vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0 IN ()))>>((- (vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c0 IN ()))>>((- (vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt1.c1 FROM rt0 FULL OUTER JOIN vt0 ON ((rt0.c1) IS TRUE) COLLATE BINARY RIGHT OUTER JOIN vt1 ON ((((((vt0.c0)||(vt1.c0)))AND(rt0.c1)))OR(((rt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)))) GROUP BY vt1.c1;
SELECT vt1.c1 FROM rt0 FULL OUTER JOIN vt0 ON ((rt0.c1) IS TRUE) COLLATE BINARY RIGHT OUTER JOIN vt1 ON ((((((vt0.c0)||(vt1.c0)))AND(rt0.c1)))OR(((rt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)))) GROUP BY vt1.c1 HAVING GROUP_CONCAT(((vt0.c0) IS FALSE)) UNION ALL SELECT ALL vt1.c1 FROM rt0 FULL OUTER JOIN vt0 ON ((rt0.c1) IS TRUE) COLLATE BINARY RIGHT OUTER JOIN vt1 ON ((((((vt0.c0)||(vt1.c0)))AND(rt0.c1)))OR(((rt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)))) GROUP BY vt1.c1 HAVING (NOT (GROUP_CONCAT(((vt0.c0) IS FALSE)))) UNION ALL SELECT ALL vt1.c1 FROM rt0 FULL OUTER JOIN vt0 ON ((rt0.c1) IS TRUE) COLLATE BINARY RIGHT OUTER JOIN vt1 ON ((((((vt0.c0)||(vt1.c0)))AND(rt0.c1)))OR(((rt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)))) GROUP BY vt1.c1 HAVING ((GROUP_CONCAT(((vt0.c0) IS FALSE))) ISNULL);
SELECT ALL vt1.c1 FROM rt0 FULL OUTER JOIN vt0 ON ((rt0.c1) IS TRUE) COLLATE BINARY RIGHT OUTER JOIN vt1 ON ((((((vt0.c0)||(vt1.c0)))AND(rt0.c1)))OR(((rt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)))) GROUP BY vt1.c1;
SELECT vt1.c1 FROM rt0 FULL OUTER JOIN vt0 ON ((rt0.c1) IS TRUE) COLLATE BINARY RIGHT OUTER JOIN vt1 ON ((((((vt0.c0)||(vt1.c0)))AND(rt0.c1)))OR(((rt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)))) GROUP BY vt1.c1 HAVING GROUP_CONCAT(((vt0.c0) IS FALSE)) UNION ALL SELECT ALL vt1.c1 FROM rt0 FULL OUTER JOIN vt0 ON ((rt0.c1) IS TRUE) COLLATE BINARY RIGHT OUTER JOIN vt1 ON ((((((vt0.c0)||(vt1.c0)))AND(rt0.c1)))OR(((rt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)))) GROUP BY vt1.c1 HAVING (NOT (GROUP_CONCAT(((vt0.c0) IS FALSE)))) UNION ALL SELECT ALL vt1.c1 FROM rt0 FULL OUTER JOIN vt0 ON ((rt0.c1) IS TRUE) COLLATE BINARY RIGHT OUTER JOIN vt1 ON ((((((vt0.c0)||(vt1.c0)))AND(rt0.c1)))OR(((rt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)))) GROUP BY vt1.c1 HAVING ((GROUP_CONCAT(((vt0.c0) IS FALSE))) ISNULL);
SELECT ALL vt1.c1 FROM rt0 FULL OUTER JOIN vt0 ON ((rt0.c1) IS TRUE) COLLATE BINARY RIGHT OUTER JOIN vt1 ON ((((((vt0.c0)||(vt1.c0)))AND(rt0.c1)))OR(((rt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)))) GROUP BY vt1.c1;
SELECT ALL * FROM vt0, vt1, rt0;
SELECT * FROM vt0, vt1, rt0 WHERE ((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c1)))) NOTNULL)) UNION ALL SELECT * FROM vt0, vt1, rt0 WHERE ((NOT ((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c1)))) NOTNULL)))) UNION ALL SELECT * FROM vt0, vt1, rt0 WHERE ((((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c1)))) NOTNULL)) ISNULL));
SELECT ALL * FROM vt0, vt1, rt0;
SELECT DISTINCT rt0.c2, rt0.c1, vt1.c0, vt1.c1 FROM vt0 RIGHT OUTER JOIN vt1 ON (IFNULL(DISTINCT rt0.c2, rt0.c1) IN ()) FULL OUTER JOIN rt0 ON NULL;
SELECT DISTINCT rt0.c2, rt0.c1, vt1.c0, vt1.c1 FROM vt0 RIGHT OUTER JOIN vt1 ON (IFNULL(DISTINCT rt0.c2, rt0.c1) IN ()) FULL OUTER JOIN rt0 ON NULL WHERE ((((~ (vt1.c1)))>>(((((((((NULL)AND(rt0.c0)))AND(rt0.c0)))OR(vt1.c1)))OR(rt0.c0))))) UNION SELECT DISTINCT rt0.c2, rt0.c1, vt1.c0, vt1.c1 FROM vt0 RIGHT OUTER JOIN vt1 ON (IFNULL(DISTINCT rt0.c2, rt0.c1) IN ()) FULL OUTER JOIN rt0 ON NULL WHERE ((NOT ((((~ (vt1.c1)))>>(((((((((NULL)AND(rt0.c0)))AND(rt0.c0)))OR(vt1.c1)))OR(rt0.c0))))))) UNION SELECT DISTINCT rt0.c2, rt0.c1, vt1.c0, vt1.c1 FROM vt0 RIGHT OUTER JOIN vt1 ON (IFNULL(DISTINCT rt0.c2, rt0.c1) IN ()) FULL OUTER JOIN rt0 ON NULL WHERE ((((((~ (vt1.c1)))>>(((((((((NULL)AND(rt0.c0)))AND(rt0.c0)))OR(vt1.c1)))OR(rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, vt1.c0, vt1.c1 FROM vt0 RIGHT OUTER JOIN vt1 ON (IFNULL(DISTINCT rt0.c2, rt0.c1) IN ()) FULL OUTER JOIN rt0 ON NULL;
SELECT rt0.c2, rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, vt0.c0;
SELECT rt0.c2, rt0.c1, vt0.c0 FROM rt0, vt0 WHERE ((((NOT (vt0.c0))) NOT NULL)) GROUP BY rt0.c2, rt0.c1, vt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, vt0.c0 FROM rt0, vt0 WHERE ((NOT ((((NOT (vt0.c0))) NOT NULL)))) GROUP BY rt0.c2, rt0.c1, vt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, vt0.c0 FROM rt0, vt0 WHERE ((((((NOT (vt0.c0))) NOT NULL)) ISNULL)) GROUP BY rt0.c2, rt0.c1, vt0.c0;
SELECT rt0.c2, rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, vt0.c0;
SELECT rt0.c2 FROM rt0 CROSS JOIN vt0 ON (~ (rt0.c2)) COLLATE BINARY GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 CROSS JOIN vt0 ON (~ (rt0.c2)) COLLATE BINARY GROUP BY rt0.c2 HAVING COUNT(MAX(COUNT(vt0.c0))) UNION ALL SELECT rt0.c2 FROM rt0 CROSS JOIN vt0 ON (~ (rt0.c2)) COLLATE BINARY GROUP BY rt0.c2 HAVING (NOT (COUNT(MAX(COUNT(vt0.c0))))) UNION ALL SELECT rt0.c2 FROM rt0 CROSS JOIN vt0 ON (~ (rt0.c2)) COLLATE BINARY GROUP BY rt0.c2 HAVING ((COUNT(MAX(COUNT(vt0.c0)))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((~ ('-1589480205'))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((~ ('-1589480205'))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((~ ('-1589480205'))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 NOT INDEXED WHERE (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))%(((vt0.c0) BETWEEN (vt0.c0) AND (0.09803066290069384))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))%(((vt0.c0) BETWEEN (vt0.c0) AND (0.09803066290069384))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))%(((vt0.c0) BETWEEN (vt0.c0) AND (0.09803066290069384))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt1.c0, vt0.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON (((((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt0.c0))))<((((vt0.c0) NOT NULL)))) FULL OUTER JOIN vt0 ON (((rt0.c2) BETWEEN (vt1.c0) AND (vt0.c0)) IN ()) GROUP BY vt1.c0, vt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((((((((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))AND(COUNT(rt0.c1))))AND(rt0.c1)))AND((((COUNT(COUNT(rt0.c1)))) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))))AND(((rt0.c2)+(COUNT(*))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (((((((((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))AND(COUNT(rt0.c1))))AND(rt0.c1)))AND((((COUNT(COUNT(rt0.c1)))) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))))AND(((rt0.c2)+(COUNT(*))))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((((((((((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))AND(COUNT(rt0.c1))))AND(rt0.c1)))AND((((COUNT(COUNT(rt0.c1)))) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))))AND(((rt0.c2)+(COUNT(*)))))) ISNULL);
SELECT ALL * FROM rt0, vt0, vt1;
SELECT ALL * FROM rt0, vt0, vt1 WHERE ((vt0.c0 IN ())) UNION ALL SELECT * FROM rt0, vt0, vt1 WHERE ((NOT ((vt0.c0 IN ())))) UNION ALL SELECT ALL * FROM rt0, vt0, vt1 WHERE ((((vt0.c0 IN ())) ISNULL));
SELECT ALL * FROM rt0, vt0, vt1;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((((rt0.c0)<=(rt0.c2)))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((((rt0.c0)<=(rt0.c2)))))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((((rt0.c0)<=(rt0.c2)))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT rt0.c0, vt0.c0, rt0.c1, vt1.c1 FROM vt1 INNER JOIN rt0 ON (((((rt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))<>(((vt0.c0)%(rt0.c2)))) LEFT OUTER JOIN vt0 ON (((vt0.c0, rt0.c0, x'0197')) NOT BETWEEN (('', ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)), CAST(rt0.c1 AS NUMERIC))) AND ((((rt0.c1)+(vt0.c0)), ((vt1.c1)<(rt0.c0)), json_insert(rt0.c1, rt0.c2, vt0.c0, rt0.c1, vt0.c0)))) GROUP BY rt0.c0, vt0.c0, rt0.c1, vt1.c1;
SELECT rt0.c0, vt0.c0, rt0.c1, vt1.c1 FROM vt1 INNER JOIN rt0 ON (((((rt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))<>(((vt0.c0)%(rt0.c2)))) LEFT OUTER JOIN vt0 ON (((vt0.c0, rt0.c0, x'0197')) NOT BETWEEN (('', ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)), CAST(rt0.c1 AS NUMERIC))) AND ((((rt0.c1)+(vt0.c0)), ((vt1.c1)<(rt0.c0)), json_insert(rt0.c1, rt0.c2, vt0.c0, rt0.c1, vt0.c0)))) WHERE (((UPPER(vt0.c0)) BETWEEN (((vt0.c0)/(vt1.c0))) AND (rt0.c1))) GROUP BY rt0.c0, vt0.c0, rt0.c1, vt1.c1 UNION SELECT rt0.c0, vt0.c0, rt0.c1, vt1.c1 FROM vt1 INNER JOIN rt0 ON (((((rt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))!=(((vt0.c0)%(rt0.c2)))) LEFT OUTER JOIN vt0 ON (((vt0.c0, rt0.c0, x'0197')) NOT BETWEEN (('', ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)), CAST(rt0.c1 AS NUMERIC))) AND ((((rt0.c1)+(vt0.c0)), ((vt1.c1)<(rt0.c0)), json_insert(rt0.c1, rt0.c2, vt0.c0, rt0.c1, vt0.c0)))) WHERE ((NOT (((UPPER(vt0.c0)) BETWEEN (((vt0.c0)/(vt1.c0))) AND (rt0.c1))))) GROUP BY rt0.c0, vt0.c0, rt0.c1, vt1.c1 UNION SELECT ALL rt0.c0, vt0.c0, rt0.c1, vt1.c1 FROM vt1 INNER JOIN rt0 ON (((((rt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))!=(((vt0.c0)%(rt0.c2)))) LEFT OUTER JOIN vt0 ON (((vt0.c0, rt0.c0, x'0197')) NOT BETWEEN (('', ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)), CAST(rt0.c1 AS NUMERIC))) AND ((((rt0.c1)+(vt0.c0)), ((vt1.c1)<(rt0.c0)), json_insert(rt0.c1, rt0.c2, vt0.c0, rt0.c1, vt0.c0)))) WHERE (((((UPPER(vt0.c0)) BETWEEN (((vt0.c0)/(vt1.c0))) AND (rt0.c1))) ISNULL)) GROUP BY rt0.c0, vt0.c0, rt0.c1, vt1.c1;
SELECT rt0.c0, vt0.c0, rt0.c1, vt1.c1 FROM vt1 INNER JOIN rt0 ON (((((rt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))<>(((vt0.c0)%(rt0.c2)))) LEFT OUTER JOIN vt0 ON (((vt0.c0, rt0.c0, x'0197')) NOT BETWEEN (('', ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)), CAST(rt0.c1 AS NUMERIC))) AND ((((rt0.c1)+(vt0.c0)), ((vt1.c1)<(rt0.c0)), json_insert(rt0.c1, rt0.c2, vt0.c0, rt0.c1, vt0.c0)))) GROUP BY rt0.c0, vt0.c0, rt0.c1, vt1.c1;
SELECT vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0 HAVING MIN((SUM(rt0.c0) IN ())) UNION ALL SELECT vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0 HAVING (NOT (MIN((SUM(rt0.c0) IN ())))) UNION ALL SELECT ALL vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0 HAVING ((MIN((SUM(rt0.c0) IN ()))) ISNULL);
SELECT vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0 HAVING MIN((SUM(rt0.c0) IN ())) UNION ALL SELECT vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0 HAVING (NOT (MIN((SUM(rt0.c0) IN ())))) UNION ALL SELECT ALL vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0 HAVING ((MIN((SUM(rt0.c0) IN ()))) ISNULL);
SELECT vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0;
SELECT ALL * FROM rt0, vt1, vt0;
SELECT ALL * FROM rt0, vt1, vt0 WHERE (rt0.c1 COLLATE RTRIM) UNION ALL SELECT ALL * FROM rt0, vt1, vt0 WHERE ((NOT (rt0.c1 COLLATE RTRIM))) UNION ALL SELECT ALL * FROM rt0, vt1, vt0 WHERE (((rt0.c1 COLLATE RTRIM) ISNULL));
SELECT ALL * FROM rt0, vt1, vt0;
SELECT DISTINCT rt0.c0, rt0.c1, vt1.c0, vt0.c0, rt0.c2 FROM rt0, vt0, vt1;
SELECT DISTINCT rt0.c0, rt0.c1, vt1.c0, vt0.c0, rt0.c2 FROM rt0, vt0, vt1 WHERE (((((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c0))) NOT BETWEEN (((vt1.c1)<(vt0.c0))) AND ((- (vt1.c1))))) UNION SELECT DISTINCT rt0.c0, rt0.c1, vt1.c0, vt0.c0, rt0.c2 FROM rt0, vt0, vt1 WHERE ((NOT (((((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c0))) NOT BETWEEN (((vt1.c1)<(vt0.c0))) AND ((- (vt1.c1))))))) UNION SELECT DISTINCT rt0.c0, rt0.c1, vt1.c0, vt0.c0, rt0.c2 FROM rt0, vt0, vt1 WHERE (((((((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c0))) NOT BETWEEN (((vt1.c1)<(vt0.c0))) AND ((- (vt1.c1))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, vt1.c0, vt0.c0, rt0.c2 FROM rt0, vt0, vt1;
SELECT vt1.c0, vt1.c1, vt0.c0 FROM vt1 FULL OUTER JOIN rt0 ON (((rt0.c2) BETWEEN (vt1.c1) AND (vt1.c0)) IN ()) CROSS JOIN vt0 ON CAST('' AS INTEGER) GROUP BY vt1.c0, vt1.c1, vt0.c0;
SELECT vt1.c0, vt1.c1, vt0.c0 FROM vt1 FULL OUTER JOIN rt0 ON (((rt0.c2) BETWEEN (vt1.c1) AND (vt1.c0)) IN ()) CROSS JOIN vt0 ON CAST('' AS INTEGER) WHERE (CAST(rt0.c2 AS TEXT) COLLATE BINARY) GROUP BY vt1.c0, vt1.c1, vt0.c0 UNION SELECT vt1.c0, vt1.c1, vt0.c0 FROM vt1 FULL OUTER JOIN rt0 ON (((rt0.c2) BETWEEN (vt1.c1) AND (vt1.c0)) IN ()) CROSS JOIN vt0 ON CAST('' AS INTEGER) WHERE ((NOT (CAST(rt0.c2 AS TEXT) COLLATE BINARY))) GROUP BY vt1.c0, vt1.c1, vt0.c0 UNION SELECT vt1.c0, vt1.c1, vt0.c0 FROM vt1 FULL OUTER JOIN rt0 ON (((rt0.c2) BETWEEN (vt1.c1) AND (vt1.c0)) IN ()) CROSS JOIN vt0 ON CAST('' AS INTEGER) WHERE (((CAST(rt0.c2 AS TEXT) COLLATE BINARY) ISNULL)) GROUP BY vt1.c0, vt1.c1, vt0.c0;
SELECT vt1.c0, vt1.c1, vt0.c0 FROM vt1 FULL OUTER JOIN rt0 ON (((rt0.c2) BETWEEN (vt1.c1) AND (vt1.c0)) IN ()) CROSS JOIN vt0 ON CAST('' AS INTEGER) GROUP BY vt1.c0, vt1.c1, vt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ABS(((GROUP_CONCAT(rt0.c0)) NOT BETWEEN (SUM(COUNT(*))) AND (MIN(AVG(TOTAL(GROUP_CONCAT(MAX(rt0.c0)))))))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (ABS(((GROUP_CONCAT(rt0.c0)) NOT BETWEEN (SUM(COUNT(*))) AND (MIN(AVG(TOTAL(GROUP_CONCAT(MAX(rt0.c0)))))))))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((ABS(((GROUP_CONCAT(rt0.c0)) NOT BETWEEN (SUM(COUNT(*))) AND (MIN(AVG(TOTAL(GROUP_CONCAT(MAX(rt0.c0))))))))) ISNULL);
SELECT * FROM rt0, vt0;
SELECT ALL * FROM rt0, vt0 WHERE (CAST(((rt0.c0)<=('Y7')) AS TEXT)) UNION ALL SELECT * FROM rt0, vt0 WHERE ((NOT (CAST(((rt0.c0)<=('Y7')) AS TEXT)))) UNION ALL SELECT * FROM rt0, vt0 WHERE (((CAST(((rt0.c0)<=('Y7')) AS TEXT)) ISNULL));
SELECT * FROM rt0, vt0;
SELECT DISTINCT * FROM vt0, vt1, rt0;
SELECT DISTINCT * FROM vt0, vt1, rt0 WHERE (CASE WHEN (((((((('')AND(rt0.c1)))AND(vt0.c0)))AND(rt0.c1)))AND(rt0.c0)) THEN x'' WHEN x'' THEN (vt1.c0 IN ()) WHEN ((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN (((vt0.c0))>((vt0.c0))) WHEN CAST('' AS INTEGER) THEN ((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) WHEN ((((rt0.c1)AND(rt0.c2)))OR(-565506869)) THEN ((rt0.c1) BETWEEN (vt1.c0) AND (0.9073754818755317)) ELSE CAST(rt0.c0 AS TEXT) END) UNION SELECT DISTINCT * FROM vt0, vt1, rt0 WHERE ((NOT (CASE WHEN (((((((('')AND(rt0.c1)))AND(vt0.c0)))AND(rt0.c1)))AND(rt0.c0)) THEN x'' WHEN x'' THEN (vt1.c0 IN ()) WHEN ((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN (((vt0.c0))>((vt0.c0))) WHEN CAST('' AS INTEGER) THEN ((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) WHEN ((((rt0.c1)AND(rt0.c2)))OR(-565506869)) THEN ((rt0.c1) BETWEEN (vt1.c0) AND (0.9073754818755317)) ELSE CAST(rt0.c0 AS TEXT) END))) UNION SELECT DISTINCT * FROM vt0, vt1, rt0 WHERE (((CASE WHEN (((((((('')AND(rt0.c1)))AND(vt0.c0)))AND(rt0.c1)))AND(rt0.c0)) THEN x'' WHEN x'' THEN (vt1.c0 IN ()) WHEN ((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN (((vt0.c0))>((vt0.c0))) WHEN CAST('' AS INTEGER) THEN ((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) WHEN ((((rt0.c1)AND(rt0.c2)))OR(-565506869)) THEN ((rt0.c1) BETWEEN (vt1.c0) AND (0.9073754818755317)) ELSE CAST(rt0.c0 AS TEXT) END) ISNULL));
SELECT DISTINCT * FROM vt0, vt1, rt0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 WHERE ((+ ((((vt1.c1)) BETWEEN ((0.1881258165954316)) AND ((vt1.c0)))))) GROUP BY vt1.c1, vt1.c0 UNION SELECT vt1.c1, vt1.c0 FROM vt1 WHERE ((NOT ((+ ((((vt1.c1)) BETWEEN ((0.1881258165954316)) AND ((vt1.c0)))))))) GROUP BY vt1.c1, vt1.c0 UNION SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE ((((+ ((((vt1.c1)) BETWEEN ((0.1881258165954316)) AND ((vt1.c0)))))) ISNULL)) GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING SUM(((SUM(rt0.c1)) NOT NULL)) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (SUM(((SUM(rt0.c1)) NOT NULL)))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((SUM(((SUM(rt0.c1)) NOT NULL))) ISNULL);
SELECT ALL TOTAL((((rt0.c1)) NOT BETWEEN (((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))) AND (((rt0.c1 IN (rt0.c0)))))) FROM rt0;
SELECT ALL * FROM vt0 NOT INDEXED;
SELECT * FROM vt0 WHERE ((((((vt0.c0))=((vt0.c0)))) NOTNULL)) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((((((vt0.c0))=((vt0.c0)))) NOTNULL)))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((((((vt0.c0))=((vt0.c0)))) NOTNULL)) ISNULL));
SELECT ALL * FROM vt0 NOT INDEXED;
SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN (((NOT (vt1.c1)))) AND ((CAST(vt1.c1 AS REAL))))) UNION SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0)) NOT BETWEEN (((NOT (vt1.c1)))) AND ((CAST(vt1.c1 AS REAL))))))) UNION SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1 WHERE ((((((vt1.c0)) NOT BETWEEN (((NOT (vt1.c1)))) AND ((CAST(vt1.c1 AS REAL))))) ISNULL));
SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1;
SELECT ALL vt1.c0, rt0.c1, vt1.c1, rt0.c2, rt0.c0 FROM rt0, vt0, vt1 GROUP BY vt1.c0, rt0.c1, vt1.c1, rt0.c2, rt0.c0;
SELECT vt1.c0, rt0.c1, vt1.c1, rt0.c2, rt0.c0 FROM rt0, vt0, vt1 WHERE ((((+ (x'd802')))*(CAST(rt0.c2 AS BLOB)))) GROUP BY vt1.c0, rt0.c1, vt1.c1, rt0.c2, rt0.c0 UNION SELECT vt1.c0, rt0.c1, vt1.c1, rt0.c2, rt0.c0 FROM rt0, vt0, vt1 WHERE ((NOT ((((+ (x'd802')))*(CAST(rt0.c2 AS BLOB)))))) GROUP BY vt1.c0, rt0.c1, vt1.c1, rt0.c2, rt0.c0 UNION SELECT ALL vt1.c0, rt0.c1, vt1.c1, rt0.c2, rt0.c0 FROM rt0, vt0, vt1 WHERE ((((((+ (x'd802')))*(CAST(rt0.c2 AS BLOB)))) ISNULL)) GROUP BY vt1.c0, rt0.c1, vt1.c1, rt0.c2, rt0.c0;
SELECT ALL vt1.c0, rt0.c1, vt1.c1, rt0.c2, rt0.c0 FROM rt0, vt0, vt1 GROUP BY vt1.c0, rt0.c1, vt1.c1, rt0.c2, rt0.c0;
SELECT vt1.c1 FROM vt1 NOT INDEXED, rt0, vt0 GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1, rt0, vt0 GROUP BY vt1.c1 HAVING ((MIN(GROUP_CONCAT(rt0.c1)))/(rt0.c2)) UNION ALL SELECT ALL vt1.c1 FROM vt1, rt0, vt0 GROUP BY vt1.c1 HAVING (NOT (((MIN(GROUP_CONCAT(rt0.c1)))/(rt0.c2)))) UNION ALL SELECT ALL vt1.c1 FROM vt1, rt0, vt0 GROUP BY vt1.c1 HAVING ((((MIN(GROUP_CONCAT(rt0.c1)))/(rt0.c2))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON (((vt1.c0)) NOT BETWEEN ((((1.560899676E9)&(x'')))) AND ((((rt0.c1)-(vt0.c0))))) CROSS JOIN vt1 ON ((((((1932308107)||(NULL)))AND(vt1.c1)))OR(x'46d0'));
SELECT DISTINCT rt0.c2, rt0.c1 FROM vt0 NOT INDEXED, rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM vt0, rt0 WHERE (LOWER(CASE WHEN vt0.c0 THEN vt0.c0 END)) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM vt0, rt0 WHERE ((NOT (LOWER(CASE WHEN vt0.c0 THEN vt0.c0 END)))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM vt0, rt0 WHERE (((LOWER(CASE WHEN vt0.c0 THEN vt0.c0 END)) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1 FROM vt0 NOT INDEXED, rt0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((+ (((rt0.c2)AND(rt0.c1))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((+ (((rt0.c2)AND(rt0.c1))))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((((+ (((rt0.c2)AND(rt0.c1))))) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c2, vt1.c1, vt1.c0, rt0.c1, vt0.c0 FROM vt0, vt1, rt0 GROUP BY rt0.c2, vt1.c1, vt1.c0, rt0.c1, vt0.c0;
SELECT rt0.c2, vt1.c1, vt1.c0, rt0.c1, vt0.c0 FROM vt0, vt1, rt0 GROUP BY rt0.c2, vt1.c1, vt1.c0, rt0.c1, vt0.c0 HAVING ((((TOTAL(MIN(MIN(vt0.c0))))) NOT BETWEEN ((TOTAL(MIN(MIN(MAX(vt1.c0)))))) AND ((TOTAL(AVG(vt1.c0))))) IN (CASE WHEN MAX(vt1.c0) THEN GROUP_CONCAT(rt0.c0) WHEN COUNT(*) THEN COUNT(*) WHEN TOTAL(MAX('')) THEN rt0.c0 ELSE GROUP_CONCAT(AVG(vt0.c0)) END)) UNION ALL SELECT rt0.c2, vt1.c1, vt1.c0, rt0.c1, vt0.c0 FROM vt0, vt1, rt0 GROUP BY rt0.c2, vt1.c1, vt1.c0, rt0.c1, vt0.c0 HAVING (NOT (((((TOTAL(MIN(MIN(vt0.c0))))) NOT BETWEEN ((TOTAL(MIN(MIN(MAX(vt1.c0)))))) AND ((TOTAL(AVG(vt1.c0))))) IN (CASE WHEN MAX(vt1.c0) THEN GROUP_CONCAT(rt0.c0) WHEN COUNT(*) THEN COUNT(*) WHEN TOTAL(MAX('')) THEN rt0.c0 ELSE GROUP_CONCAT(AVG(vt0.c0)) END)))) UNION ALL SELECT ALL rt0.c2, vt1.c1, vt1.c0, rt0.c1, vt0.c0 FROM vt0, vt1, rt0 GROUP BY rt0.c2, vt1.c1, vt1.c0, rt0.c1, vt0.c0 HAVING ((((((TOTAL(MIN(MIN(vt0.c0))))) NOT BETWEEN ((TOTAL(MIN(MIN(MAX(vt1.c0)))))) AND ((TOTAL(AVG(vt1.c0))))) IN (CASE WHEN MAX(vt1.c0) THEN GROUP_CONCAT(rt0.c0) WHEN COUNT(*) THEN COUNT(*) WHEN TOTAL(MAX('')) THEN rt0.c0 ELSE GROUP_CONCAT(AVG(vt0.c0)) END))) ISNULL);
SELECT ALL TOTAL(((((((vt0.c0)OR(rt0.c2)))OR(vt0.c0))) BETWEEN (((((rt0.c2)AND(rt0.c0)))OR(rt0.c2))) AND ((NOT (rt0.c1))))) FROM rt0, vt0;
SELECT * FROM vt1, vt0;
SELECT ALL * FROM vt1, vt0 WHERE ((~ (((((((((vt1.c1)OR(vt1.c1)))OR(vt0.c0)))AND(vt1.c1)))OR(vt1.c0))))) UNION ALL SELECT ALL * FROM vt1, vt0 WHERE ((NOT ((~ (((((((((vt1.c1)OR(vt1.c1)))OR(vt0.c0)))AND(vt1.c1)))OR(vt1.c0))))))) UNION ALL SELECT * FROM vt1, vt0 WHERE ((((~ (((((((((vt1.c1)OR(vt1.c1)))OR(vt0.c0)))AND(vt1.c1)))OR(vt1.c0))))) ISNULL));
SELECT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE ((((vt1.c1, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c1, (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt1.c1, vt1.c0, NULL)) AND ((vt1.c0, 0x762f53a5, vt1.c0))), CAST(vt1.c1 AS TEXT))) AND ((0Xffffffffd2d47c62, ((vt1.c1)IS(x'')), ((vt1.c1) NOT NULL))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT ((((vt1.c1, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c1, (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt1.c1, vt1.c0, NULL)) AND ((vt1.c0, 0X762f53a5, vt1.c0))), CAST(vt1.c1 AS TEXT))) AND ((0Xffffffffd2d47c62, ((vt1.c1)IS(x'')), ((vt1.c1) NOT NULL))))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((((((vt1.c1, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c1, (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt1.c1, vt1.c0, NULL)) AND ((vt1.c0, 0X762f53a5, vt1.c0))), CAST(vt1.c1 AS TEXT))) AND ((0xffffffffd2d47c62, ((vt1.c1)IS(x'')), ((vt1.c1) NOT NULL))))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT vt1.c0, vt1.c1, rt0.c1 FROM rt0, vt1, vt0 GROUP BY vt1.c0, vt1.c1, rt0.c1;
SELECT ALL vt1.c0, vt1.c1, rt0.c1 FROM rt0, vt1, vt0 WHERE (CASE CASE WHEN rt0.c0 THEN vt1.c1 ELSE vt1.c1 END  WHEN ((rt0.c1)<=(vt1.c1)) THEN (- (vt1.c0)) ELSE (+ (rt0.c2)) END) GROUP BY vt1.c0, vt1.c1, rt0.c1 UNION SELECT vt1.c0, vt1.c1, rt0.c1 FROM rt0, vt1, vt0 WHERE ((NOT (CASE CASE WHEN rt0.c0 THEN vt1.c1 ELSE vt1.c1 END  WHEN ((rt0.c1)<=(vt1.c1)) THEN (- (vt1.c0)) ELSE (+ (rt0.c2)) END))) GROUP BY vt1.c0, vt1.c1, rt0.c1 UNION SELECT vt1.c0, vt1.c1, rt0.c1 FROM rt0, vt1, vt0 WHERE (((CASE CASE WHEN rt0.c0 THEN vt1.c1 ELSE vt1.c1 END  WHEN ((rt0.c1)<=(vt1.c1)) THEN (- (vt1.c0)) ELSE (+ (rt0.c2)) END) ISNULL)) GROUP BY vt1.c0, vt1.c1, rt0.c1;
SELECT vt1.c0, vt1.c1, rt0.c1 FROM rt0, vt1, vt0 GROUP BY vt1.c0, vt1.c1, rt0.c1;
SELECT ALL rt0.c1, vt1.c0, vt0.c0, rt0.c2 FROM rt0, vt0, vt1 GROUP BY rt0.c1, vt1.c0, vt0.c0, rt0.c2;
SELECT rt0.c1, vt1.c0, vt0.c0, rt0.c2 FROM rt0, vt0, vt1 GROUP BY rt0.c1, vt1.c0, vt0.c0, rt0.c2 HAVING MAX((((MIN(vt0.c0)))<((AVG(vt1.c0))))) UNION ALL SELECT rt0.c1, vt1.c0, vt0.c0, rt0.c2 FROM rt0, vt0, vt1 GROUP BY rt0.c1, vt1.c0, vt0.c0, rt0.c2 HAVING (NOT (MAX((((MIN(vt0.c0)))<((AVG(vt1.c0))))))) UNION ALL SELECT ALL rt0.c1, vt1.c0, vt0.c0, rt0.c2 FROM rt0, vt0, vt1 GROUP BY rt0.c1, vt1.c0, vt0.c0, rt0.c2 HAVING ((MAX((((MIN(vt0.c0)))<((AVG(vt1.c0)))))) ISNULL);
SELECT ALL rt0.c1, vt1.c1, vt1.c0 FROM rt0, vt1, vt0;
SELECT rt0.c1, vt1.c1, vt1.c0 FROM rt0, vt1, vt0 WHERE ((((rt0.c1, NULL, rt0.c2, vt1.c1, rt0.c1)) BETWEEN ((((rt0.c1) NOT NULL), (((rt0.c1, rt0.c0, rt0.c1))>((vt1.c0, rt0.c1, vt1.c0))), (((rt0.c2)) NOT BETWEEN ((vt1.c1)) AND ((rt0.c0))), vt1.c0, vt0.c0)) AND (((rt0.c0 IN ()), TRIM(DISTINCT vt0.c0, rt0.c1), ((rt0.c0) BETWEEN ('e') AND (0.10744209855949916)), json_type(rt0.c0), '1403077783')))) UNION ALL SELECT rt0.c1, vt1.c1, vt1.c0 FROM rt0, vt1, vt0 WHERE ((NOT ((((rt0.c1, NULL, rt0.c2, vt1.c1, rt0.c1)) BETWEEN ((((rt0.c1) NOT NULL), (((rt0.c1, rt0.c0, rt0.c1))>((vt1.c0, rt0.c1, vt1.c0))), (((rt0.c2)) NOT BETWEEN ((vt1.c1)) AND ((rt0.c0))), vt1.c0, vt0.c0)) AND (((rt0.c0 IN ()), TRIM(DISTINCT vt0.c0, rt0.c1), ((rt0.c0) BETWEEN ('e') AND (0.10744209855949916)), json_type(rt0.c0), '1403077783')))))) UNION ALL SELECT rt0.c1, vt1.c1, vt1.c0 FROM rt0, vt1, vt0 WHERE ((((((rt0.c1, NULL, rt0.c2, vt1.c1, rt0.c1)) BETWEEN ((((rt0.c1) NOT NULL), (((rt0.c1, rt0.c0, rt0.c1))>((vt1.c0, rt0.c1, vt1.c0))), (((rt0.c2)) NOT BETWEEN ((vt1.c1)) AND ((rt0.c0))), vt1.c0, vt0.c0)) AND (((rt0.c0 IN ()), TRIM(DISTINCT vt0.c0, rt0.c1), ((rt0.c0) BETWEEN ('e') AND (0.10744209855949916)), json_type(rt0.c0), '1403077783')))) ISNULL));
SELECT ALL rt0.c1, vt1.c1, vt1.c0 FROM rt0, vt1, vt0;
SELECT DISTINCT * FROM vt1 CROSS JOIN rt0 ON (((+ (rt0.c1))) NOT NULL);
SELECT DISTINCT * FROM vt1 CROSS JOIN rt0 ON (((+ (rt0.c1))) NOT NULL) WHERE (((CAST(rt0.c1 AS TEXT)) IS FALSE)) UNION SELECT DISTINCT * FROM vt1 CROSS JOIN rt0 ON (((+ (rt0.c1))) NOT NULL) WHERE ((NOT (((CAST(rt0.c1 AS TEXT)) IS FALSE)))) UNION SELECT DISTINCT * FROM vt1 CROSS JOIN rt0 ON (((+ (rt0.c1))) NOT NULL) WHERE (((((CAST(rt0.c1 AS TEXT)) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM vt1 CROSS JOIN rt0 ON (((+ (rt0.c1))) NOT NULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (CAST(((vt0.c0)IS(vt0.c0)) AS TEXT)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CAST(((vt0.c0)IS(vt0.c0)) AS TEXT)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((CAST(((vt0.c0)IS(vt0.c0)) AS TEXT)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0, vt1.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c1, vt1.c0;
SELECT ALL vt0.c0, vt1.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c1, vt1.c0 HAVING TRIM(DISTINCT '-645723372') UNION ALL SELECT vt0.c0, vt1.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c1, vt1.c0 HAVING (NOT (TRIM(DISTINCT '-645723372'))) UNION ALL SELECT vt0.c0, vt1.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c1, vt1.c0 HAVING ((TRIM(DISTINCT '-645723372')) ISNULL);
SELECT ALL vt0.c0, vt1.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c1, vt1.c0;
SELECT ALL vt0.c0, vt1.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c1, vt1.c0 HAVING TRIM(DISTINCT '-645723372') UNION ALL SELECT vt0.c0, vt1.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c1, vt1.c0 HAVING (NOT (TRIM(DISTINCT '-645723372'))) UNION ALL SELECT vt0.c0, vt1.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c1, vt1.c0 HAVING ((TRIM(DISTINCT '-645723372')) ISNULL);
SELECT ALL vt0.c0, vt1.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c1, vt1.c0;
SELECT * FROM vt1, vt0, rt0;
SELECT * FROM vt1, vt0, rt0 WHERE (vt0.c0) UNION ALL SELECT ALL * FROM vt1, vt0, rt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL * FROM vt1, vt0, rt0 WHERE (((vt0.c0) ISNULL));
SELECT * FROM vt1, vt0, rt0;
SELECT DISTINCT vt1.c1, vt0.c0 FROM vt0 NATURAL JOIN vt1;
SELECT DISTINCT vt1.c1, vt0.c0 FROM vt0 NATURAL JOIN vt1 WHERE (((((vt0.c0)>=(vt0.c0)))||(((vt1.c0)<<(vt0.c0))))) UNION SELECT DISTINCT vt1.c1, vt0.c0 FROM vt0 NATURAL JOIN vt1 WHERE ((NOT (((((vt0.c0)>=(vt0.c0)))||(((vt1.c0)<<(vt0.c0))))))) UNION SELECT DISTINCT vt1.c1, vt0.c0 FROM vt0 NATURAL JOIN vt1 WHERE (((((((vt0.c0)>=(vt0.c0)))||(((vt1.c0)<<(vt0.c0))))) ISNULL));
SELECT DISTINCT vt1.c1, vt0.c0 FROM vt0 NATURAL JOIN vt1;
SELECT ALL rt0.c1 FROM vt1 CROSS JOIN rt0 ON NULL GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM vt1 CROSS JOIN rt0 ON NULL WHERE (CASE ((rt0.c2) IS TRUE)  WHEN (NOT (vt1.c1)) THEN rt0.c2 END) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM vt1 CROSS JOIN rt0 ON NULL WHERE ((NOT (CASE ((rt0.c2) IS TRUE)  WHEN (NOT (vt1.c1)) THEN rt0.c2 END))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM vt1 CROSS JOIN rt0 ON NULL WHERE (((CASE ((rt0.c2) IS TRUE)  WHEN (NOT (vt1.c1)) THEN rt0.c2 END) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM vt1 CROSS JOIN rt0 ON NULL GROUP BY rt0.c1;
SELECT ALL vt1.c0, vt0.c0, vt1.c1 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0, vt1.c1;
SELECT ALL vt1.c0, vt0.c0, vt1.c1 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0, vt1.c1 HAVING GROUP_CONCAT(((vt0.c0) NOT BETWEEN (GROUP_CONCAT(vt1.c1)) AND (COUNT(COUNT(*))))) UNION ALL SELECT vt1.c0, vt0.c0, vt1.c1 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0, vt1.c1 HAVING (NOT (GROUP_CONCAT(((vt0.c0) NOT BETWEEN (GROUP_CONCAT(vt1.c1)) AND (COUNT(COUNT(*))))))) UNION ALL SELECT ALL vt1.c0, vt0.c0, vt1.c1 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0, vt1.c1 HAVING ((GROUP_CONCAT(((vt0.c0) NOT BETWEEN (GROUP_CONCAT(vt1.c1)) AND (COUNT(COUNT(*)))))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))||((((0.19583591285561908)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))||((((0.19583591285561908)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))||((((0.19583591285561908)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0, rt0, vt1;
SELECT DISTINCT * FROM vt0, rt0, vt1 WHERE (json_object(rt0.c2, '-848757806') COLLATE NOCASE) UNION SELECT DISTINCT * FROM vt0, rt0, vt1 WHERE ((NOT (json_object(rt0.c2, '-848757806') COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt0, rt0, vt1 WHERE (((json_object(rt0.c2, '-848757806') COLLATE NOCASE) ISNULL));
SELECT ALL rt0.c1, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM vt1, rt0 WHERE (x'') GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM vt1, rt0 WHERE ((NOT (x''))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM vt1, rt0 WHERE (((x'') ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c2;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING json_valid(MAX(COUNT(*))) COLLATE NOCASE UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (json_valid(MAX(COUNT(*))) COLLATE NOCASE)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((json_valid(MAX(COUNT(*))) COLLATE NOCASE) ISNULL);
SELECT vt1.c1 FROM vt1, vt0;
SELECT vt1.c1 FROM vt1, vt0 WHERE ((((((vt1.c1, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c1, vt1.c0, vt1.c0)) AND ((vt1.c1, vt0.c0, vt0.c0)))) IS FALSE)) UNION ALL SELECT ALL vt1.c1 FROM vt1, vt0 WHERE ((NOT ((((((vt1.c1, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c1, vt1.c0, vt1.c0)) AND ((vt1.c1, vt0.c0, vt0.c0)))) IS FALSE)))) UNION ALL SELECT ALL vt1.c1 FROM vt1, vt0 WHERE ((((((((vt1.c1, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c1, vt1.c0, vt1.c0)) AND ((vt1.c1, vt0.c0, vt0.c0)))) IS FALSE)) ISNULL));
SELECT vt1.c1 FROM vt1, vt0;
SELECT DISTINCT rt0.c1, vt0.c0, rt0.c2 FROM vt0, rt0;
SELECT DISTINCT rt0.c1, vt0.c0, rt0.c2 FROM vt0, rt0 WHERE ((+ (((x'') BETWEEN (rt0.c0) AND (vt0.c0))))) UNION SELECT DISTINCT rt0.c1, vt0.c0, rt0.c2 FROM vt0, rt0 WHERE ((NOT ((+ (((x'') BETWEEN (rt0.c0) AND (vt0.c0))))))) UNION SELECT DISTINCT rt0.c1, vt0.c0, rt0.c2 FROM vt0, rt0 WHERE ((((+ (((x'') BETWEEN (rt0.c0) AND (vt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c1, vt0.c0, rt0.c2 FROM vt0, rt0;
SELECT vt1.c1, vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c1, vt1.c0, vt0.c0;
SELECT ALL vt1.c1, vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((+ (CAST(vt1.c0 AS REAL)))) GROUP BY vt1.c1, vt1.c0, vt0.c0 UNION SELECT ALL vt1.c1, vt1.c0, vt0.c0 FROM vt1, vt0 NOT INDEXED WHERE ((NOT ((+ (CAST(vt1.c0 AS REAL)))))) GROUP BY vt1.c1, vt1.c0, vt0.c0 UNION SELECT vt1.c1, vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((((+ (CAST(vt1.c0 AS REAL)))) ISNULL)) GROUP BY vt1.c1, vt1.c0, vt0.c0;
SELECT vt1.c1, vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c1, vt1.c0, vt0.c0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM vt0 NOT INDEXED RIGHT OUTER JOIN rt0 ON CASE WHEN (((vt0.c0))>((rt0.c0))) THEN NULL END GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON CASE WHEN (((vt0.c0))>((rt0.c0))) THEN NULL END GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0 HAVING ((GROUP_CONCAT(TOTAL(rt0.c2)))<<(CASE WHEN SUM(vt0.c0) THEN COUNT(SUM(NULL)) END)) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON CASE WHEN (((vt0.c0))>((rt0.c0))) THEN NULL END GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0 HAVING (NOT (((GROUP_CONCAT(TOTAL(rt0.c2)))<<(CASE WHEN SUM(vt0.c0) THEN COUNT(SUM(NULL)) END)))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON CASE WHEN (((vt0.c0))>((rt0.c0))) THEN NULL END GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0 HAVING ((((GROUP_CONCAT(TOTAL(rt0.c2)))<<(CASE WHEN SUM(vt0.c0) THEN COUNT(SUM(NULL)) END))) ISNULL);
SELECT * FROM vt0, rt0 LEFT OUTER JOIN vt1 ON vt1.c0;
SELECT * FROM vt0, rt0 LEFT OUTER JOIN vt1 ON vt1.c0 WHERE (QUOTE(CASE WHEN rt0.c1 THEN x'' WHEN NULL THEN rt0.c2 WHEN rt0.c2 THEN vt0.c0 ELSE vt1.c1 END)) UNION ALL SELECT * FROM vt0, rt0 LEFT OUTER JOIN vt1 ON vt1.c0 WHERE ((NOT (QUOTE(CASE WHEN rt0.c1 THEN x'' WHEN NULL THEN rt0.c2 WHEN rt0.c2 THEN vt0.c0 ELSE vt1.c1 END)))) UNION ALL SELECT * FROM vt0, rt0 LEFT OUTER JOIN vt1 ON vt1.c0 WHERE (((QUOTE(CASE WHEN rt0.c1 THEN x'' WHEN NULL THEN rt0.c2 WHEN rt0.c2 THEN vt0.c0 ELSE vt1.c1 END)) ISNULL));
SELECT * FROM vt0, rt0 LEFT OUTER JOIN vt1 ON vt1.c0;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((rt0.c1) NOT BETWEEN (((rt0.c1)%(rt0.c1))) AND (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c1) NOT BETWEEN (((rt0.c1)%(rt0.c1))) AND (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END))))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((((rt0.c1) NOT BETWEEN (((rt0.c1)%(rt0.c1))) AND (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END))) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT vt1.c1, vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt0.c0, vt1.c0;
SELECT vt1.c1, vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((((vt1.c1))<=(((vt1.c1 IN ()))))) GROUP BY vt1.c1, vt0.c0, vt1.c0 UNION SELECT ALL vt1.c1, vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((NOT ((((vt1.c1))<=(((vt1.c1 IN ()))))))) GROUP BY vt1.c1, vt0.c0, vt1.c0 UNION SELECT vt1.c1, vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((((((vt1.c1))<=(((vt1.c1 IN ()))))) ISNULL)) GROUP BY vt1.c1, vt0.c0, vt1.c0;
SELECT vt1.c1, vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt0.c0, vt1.c0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING AVG(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (AVG(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((AVG(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING AVG(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (AVG(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((AVG(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE ('-2118051421') UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ('-2118051421'))) UNION ALL SELECT ALL * FROM rt0 WHERE ((('-2118051421') ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c0) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT vt0.c0 FROM vt1 NATURAL JOIN vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1 NATURAL JOIN vt0 WHERE (((((- (vt0.c0))))==(((~ (vt1.c0)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt1 NATURAL JOIN vt0 WHERE ((NOT (((((- (vt0.c0))))=(((~ (vt1.c0)))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt1 NATURAL JOIN vt0 WHERE (((((((- (vt0.c0))))=(((~ (vt1.c0)))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1 NATURAL JOIN vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c0 FROM rt0, vt1 LEFT OUTER JOIN vt0 ON rt0.c0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, vt1 LEFT OUTER JOIN vt0 ON rt0.c0 GROUP BY rt0.c0 HAVING COUNT(CASE WHEN COUNT(*) THEN GROUP_CONCAT(TOTAL(MIN(SUM(SUM(0.17521737511626))))) END) UNION ALL SELECT ALL rt0.c0 FROM rt0, vt1 LEFT OUTER JOIN vt0 ON rt0.c0 GROUP BY rt0.c0 HAVING (NOT (COUNT(CASE WHEN COUNT(*) THEN GROUP_CONCAT(TOTAL(MIN(SUM(SUM(0.17521737511626))))) END))) UNION ALL SELECT ALL rt0.c0 FROM rt0, vt1 LEFT OUTER JOIN vt0 ON rt0.c0 GROUP BY rt0.c0 HAVING ((COUNT(CASE WHEN COUNT(*) THEN GROUP_CONCAT(TOTAL(MIN(SUM(SUM(0.17521737511626))))) END)) ISNULL);
SELECT vt1.c0, vt1.c1 FROM vt1, rt0;
SELECT vt1.c0, vt1.c1 FROM vt1, rt0 WHERE (((((rt0.c0)AND(rt0.c1))) IS FALSE)) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1, rt0 WHERE ((NOT (((((rt0.c0)AND(rt0.c1))) IS FALSE)))) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1, rt0 WHERE (((((((rt0.c0)AND(rt0.c1))) IS FALSE)) ISNULL));
SELECT vt1.c0, vt1.c1 FROM vt1, rt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((((((vt1.c1)*(vt1.c1)))OR(vt1.c1 COLLATE RTRIM)))AND(((vt1.c0)*(vt1.c0))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((((((vt1.c1)*(vt1.c1)))OR(vt1.c1 COLLATE RTRIM)))AND(((vt1.c0)*(vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((((((vt1.c1)*(vt1.c1)))OR(vt1.c1 COLLATE RTRIM)))AND(((vt1.c0)*(vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT rt0.c2, rt0.c0, vt1.c1 FROM vt0, vt1, rt0 GROUP BY rt0.c2, rt0.c0, vt1.c1;
SELECT ALL rt0.c2, rt0.c0, vt1.c1 FROM vt0, vt1, rt0 WHERE (DATETIME(0.7809720251191697, ((vt1.c0)OR(vt1.c1)), rt0.c1, ((rt0.c0) IS TRUE), CASE vt1.c1  WHEN vt1.c1 THEN NULL ELSE rt0.c1 END)) GROUP BY rt0.c2, rt0.c0, vt1.c1 UNION SELECT rt0.c2, rt0.c0, vt1.c1 FROM vt0, vt1, rt0 WHERE ((NOT (DATETIME(0.7809720251191697, ((vt1.c0)OR(vt1.c1)), rt0.c1, ((rt0.c0) IS TRUE), CASE vt1.c1  WHEN vt1.c1 THEN NULL ELSE rt0.c1 END)))) GROUP BY rt0.c2, rt0.c0, vt1.c1 UNION SELECT ALL rt0.c2, rt0.c0, vt1.c1 FROM vt0, vt1, rt0 WHERE (((DATETIME(0.7809720251191697, ((vt1.c0)OR(vt1.c1)), rt0.c1, ((rt0.c0) IS TRUE), CASE vt1.c1  WHEN vt1.c1 THEN NULL ELSE rt0.c1 END)) ISNULL)) GROUP BY rt0.c2, rt0.c0, vt1.c1;
SELECT rt0.c2, rt0.c0, vt1.c1 FROM vt0, vt1, rt0 GROUP BY rt0.c2, rt0.c0, vt1.c1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TOTAL(MIN(vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(MIN(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(MIN(vt0.c0))) ISNULL);
SELECT vt1.c1, rt0.c0, vt0.c0, vt1.c0 FROM vt0, rt0, vt1;
SELECT ALL vt1.c1, rt0.c0, vt0.c0, vt1.c0 FROM vt0, rt0, vt1 WHERE (((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)))OR(vt1.c1)))OR(vt1.c1)) COLLATE RTRIM) UNION ALL SELECT vt1.c1, rt0.c0, vt0.c0, vt1.c0 FROM vt0, rt0, vt1 WHERE ((NOT (((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)))OR(vt1.c1)))OR(vt1.c1)) COLLATE RTRIM))) UNION ALL SELECT vt1.c1, rt0.c0, vt0.c0, vt1.c0 FROM vt0, rt0, vt1 WHERE (((((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)))OR(vt1.c1)))OR(vt1.c1)) COLLATE RTRIM) ISNULL));
SELECT vt1.c1, rt0.c0, vt0.c0, vt1.c0 FROM vt0, rt0, vt1;
SELECT DISTINCT vt1.c0, vt1.c1, vt0.c0 FROM vt0, vt1;
SELECT DISTINCT vt1.c0, vt1.c1, vt0.c0 FROM vt0, vt1 WHERE (CAST(CAST(vt1.c1 AS INTEGER) AS BLOB)) UNION SELECT DISTINCT vt1.c0, vt1.c1, vt0.c0 FROM vt0, vt1 WHERE ((NOT (CAST(CAST(vt1.c1 AS INTEGER) AS BLOB)))) UNION SELECT DISTINCT vt1.c0, vt1.c1, vt0.c0 FROM vt0, vt1 WHERE (((CAST(CAST(vt1.c1 AS INTEGER) AS BLOB)) ISNULL));
SELECT DISTINCT vt1.c0, vt1.c1, vt0.c0 FROM vt0, vt1;
SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 WHERE (((((vt0.c0)AND((+ (vt0.c0)))))OR((vt0.c0 IN ())))) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 WHERE ((NOT (((((vt0.c0)AND((+ (vt0.c0)))))OR((vt0.c0 IN ())))))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt0, vt1 WHERE (((((((vt0.c0)AND((+ (vt0.c0)))))OR((vt0.c0 IN ())))) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING AVG((((AVG(SUM(rt0.c2)))) BETWEEN ((GROUP_CONCAT(SUM(rt0.c0)))) AND ((rt0.c1)))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (AVG((((AVG(SUM(rt0.c2)))) BETWEEN ((GROUP_CONCAT(SUM(rt0.c0)))) AND ((rt0.c1)))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((AVG((((AVG(SUM(rt0.c2)))) BETWEEN ((GROUP_CONCAT(SUM(rt0.c0)))) AND ((rt0.c1))))) ISNULL);
SELECT ALL * FROM rt0, vt0, vt1;
SELECT ALL * FROM rt0, vt0, vt1 WHERE ((NOT (CAST(rt0.c2 AS NUMERIC)))) UNION ALL SELECT * FROM rt0, vt0, vt1 WHERE ((NOT ((NOT (CAST(rt0.c2 AS NUMERIC)))))) UNION ALL SELECT ALL * FROM rt0, vt0, vt1 WHERE ((((NOT (CAST(rt0.c2 AS NUMERIC)))) ISNULL));
SELECT ALL * FROM rt0, vt0, vt1;
SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1 WHERE ((- (((((vt1.c0)AND(NULL)))OR(vt1.c1))))) UNION SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1 WHERE ((NOT ((- (((((vt1.c0)AND(NULL)))OR(vt1.c1))))))) UNION SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1 WHERE ((((- (((((vt1.c0)AND(NULL)))OR(vt1.c1))))) ISNULL));
SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1;
SELECT vt1.c1, vt1.c0 FROM vt1, vt0 LEFT OUTER JOIN rt0 ON ((((vt1.c0)AND(CAST(vt1.c0 AS TEXT))))OR(vt1.c1 COLLATE NOCASE)) GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1, vt0 LEFT OUTER JOIN rt0 ON ((((vt1.c0)AND(CAST(vt1.c0 AS TEXT))))OR(vt1.c1 COLLATE NOCASE)) WHERE (CASE ((rt0.c2)=(rt0.c0))  WHEN ((rt0.c1)AND(vt0.c0)) THEN (('c*%xg[x栢') NOTNULL) END) GROUP BY vt1.c1, vt1.c0 UNION SELECT ALL vt1.c1, vt1.c0 FROM vt1, vt0 LEFT OUTER JOIN rt0 ON ((((vt1.c0)AND(CAST(vt1.c0 AS TEXT))))OR(vt1.c1 COLLATE NOCASE)) WHERE ((NOT (CASE ((rt0.c2)=(rt0.c0))  WHEN ((rt0.c1)AND(vt0.c0)) THEN (('c*%xg[x栢') NOTNULL) END))) GROUP BY vt1.c1, vt1.c0 UNION SELECT vt1.c1, vt1.c0 FROM vt1, vt0 LEFT OUTER JOIN rt0 ON ((((vt1.c0)AND(CAST(vt1.c0 AS TEXT))))OR(vt1.c1 COLLATE NOCASE)) WHERE (((CASE ((rt0.c2)=(rt0.c0))  WHEN ((rt0.c1)AND(vt0.c0)) THEN (('c*%xg[x栢') NOTNULL) END) ISNULL)) GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1, vt0 LEFT OUTER JOIN rt0 ON ((((vt1.c0)AND(CAST(vt1.c0 AS TEXT))))OR(vt1.c1 COLLATE NOCASE)) GROUP BY vt1.c1, vt1.c0;
SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING SUM(TOTAL(GROUP_CONCAT(vt1.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING (NOT (SUM(TOTAL(GROUP_CONCAT(vt1.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING ((SUM(TOTAL(GROUP_CONCAT(vt1.c0)))) ISNULL);
SELECT * FROM vt0, vt1 FULL OUTER JOIN rt0 ON (- (0.5441696088398179));
SELECT ALL * FROM vt0, vt1 FULL OUTER JOIN rt0 ON (- (0.5441696088398179)) WHERE ('-680964646') UNION ALL SELECT * FROM vt0, vt1 FULL OUTER JOIN rt0 ON (- (0.5441696088398179)) WHERE ((NOT ('-680964646'))) UNION ALL SELECT ALL * FROM vt0, vt1 FULL OUTER JOIN rt0 ON (- (0.5441696088398179)) WHERE ((('-680964646') ISNULL));
SELECT * FROM vt0, vt1 FULL OUTER JOIN rt0 ON (- (0.5441696088398179));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (json_insert(rt0.c1, rt0.c2 COLLATE BINARY, ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (json_insert(rt0.c1, rt0.c2 COLLATE BINARY, ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((json_insert(rt0.c1, rt0.c2 COLLATE BINARY, ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))) ISNULL));
SELECT ALL vt1.c1, rt0.c0, vt0.c0 FROM vt0, vt1 INNER JOIN rt0 ON CASE WHEN '0.9529106213446471' THEN vt1.c1 COLLATE BINARY END GROUP BY vt1.c1, rt0.c0, vt0.c0;
SELECT ALL vt1.c1, rt0.c0, vt0.c0 FROM vt0, vt1 INNER JOIN rt0 ON CASE WHEN '0.9529106213446471' THEN vt1.c1 COLLATE BINARY END WHERE (((CASE rt0.c0  WHEN vt1.c1 THEN 0.021701623100409018 END)OR(CAST(vt0.c0 AS BLOB)))) GROUP BY vt1.c1, rt0.c0, vt0.c0 UNION SELECT ALL vt1.c1, rt0.c0, vt0.c0 FROM vt0, vt1 INNER JOIN rt0 ON CASE WHEN '0.9529106213446471' THEN vt1.c1 COLLATE BINARY END WHERE ((NOT (((CASE rt0.c0  WHEN vt1.c1 THEN 0.021701623100409018 END)OR(CAST(vt0.c0 AS BLOB)))))) GROUP BY vt1.c1, rt0.c0, vt0.c0 UNION SELECT vt1.c1, rt0.c0, vt0.c0 FROM vt0, vt1 INNER JOIN rt0 ON CASE WHEN '0.9529106213446471' THEN vt1.c1 COLLATE BINARY END WHERE (((((CASE rt0.c0  WHEN vt1.c1 THEN 0.021701623100409018 END)OR(CAST(vt0.c0 AS BLOB)))) ISNULL)) GROUP BY vt1.c1, rt0.c0, vt0.c0;
SELECT ALL vt1.c1, rt0.c0, vt0.c0 FROM vt0, vt1 INNER JOIN rt0 ON CASE WHEN '0.9529106213446471' THEN vt1.c1 COLLATE BINARY END GROUP BY vt1.c1, rt0.c0, vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TRIM(DISTINCT vt0.c0, vt0.c0) COLLATE RTRIM UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TRIM(DISTINCT vt0.c0, vt0.c0) COLLATE RTRIM)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TRIM(DISTINCT vt0.c0, vt0.c0) COLLATE RTRIM) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TRIM(DISTINCT vt0.c0, vt0.c0) COLLATE RTRIM UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TRIM(DISTINCT vt0.c0, vt0.c0) COLLATE RTRIM)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TRIM(DISTINCT vt0.c0, vt0.c0) COLLATE RTRIM) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt1.c0 FROM vt1, vt0;
SELECT vt1.c0 FROM vt1, vt0 WHERE ((- ((+ (vt1.c1))))) UNION ALL SELECT vt1.c0 FROM vt1, vt0 WHERE ((NOT ((- ((+ (vt1.c1))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt0 WHERE ((((- ((+ (vt1.c1))))) ISNULL));
SELECT ALL vt1.c0 FROM vt1, vt0;
SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1;
SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1 WHERE ((LOWER(vt1.c1) IN ())) UNION SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1 WHERE ((NOT ((LOWER(vt1.c1) IN ())))) UNION SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1 WHERE ((((LOWER(vt1.c1) IN ())) ISNULL));
SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0 HAVING SUM(TOTAL(0.580116081071561)) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (SUM(TOTAL(0.580116081071561)))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0 HAVING ((SUM(TOTAL(0.580116081071561))) ISNULL);
SELECT * FROM rt0, vt1;
SELECT ALL * FROM rt0, vt1 WHERE (((rt0.c0) ISNULL) COLLATE NOCASE) UNION ALL SELECT * FROM rt0, vt1 WHERE ((NOT (((rt0.c0) ISNULL) COLLATE NOCASE))) UNION ALL SELECT * FROM rt0, vt1 WHERE (((((rt0.c0) ISNULL) COLLATE NOCASE) ISNULL));
SELECT * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE ((((((vt0.c0))==((rt0.c0)))) NOT BETWEEN (rt0.c2) AND ((rt0.c0 IN (rt0.c0, rt0.c0))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT ((((((vt0.c0))=((rt0.c0)))) NOT BETWEEN (rt0.c2) AND ((rt0.c0 IN (rt0.c0, rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((((((((vt0.c0))=((rt0.c0)))) NOT BETWEEN (rt0.c2) AND ((rt0.c0 IN (rt0.c0, rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ('2103444053') GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ('2103444053'))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((('2103444053') ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1 HAVING COUNT(*) UNION ALL SELECT rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1 HAVING COUNT(*) UNION ALL SELECT rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1;
SELECT * FROM vt1 CROSS JOIN vt0 ON ((((vt1.c0))==((vt0.c0))) IN ((((vt1.c1, vt0.c0, vt1.c0, vt0.c0, vt1.c1))>((vt1.c0, vt1.c1, vt0.c0, vt1.c1, vt1.c0)))));
SELECT * FROM vt1 CROSS JOIN vt0 ON ((((vt1.c0))==((vt0.c0))) IN ((((vt1.c1, vt0.c0, vt1.c0, vt0.c0, vt1.c1))>((vt1.c0, vt1.c1, vt0.c0, vt1.c1, vt1.c0))))) WHERE ((~ (((vt1.c0) IS TRUE)))) UNION ALL SELECT ALL * FROM vt1 CROSS JOIN vt0 ON ((((vt1.c0))=((vt0.c0))) IN ((((vt1.c1, vt0.c0, vt1.c0, vt0.c0, vt1.c1))>((vt1.c0, vt1.c1, vt0.c0, vt1.c1, vt1.c0))))) WHERE ((NOT ((~ (((vt1.c0) IS TRUE)))))) UNION ALL SELECT ALL * FROM vt1 CROSS JOIN vt0 ON ((((vt1.c0))==((vt0.c0))) IN ((((vt1.c1, vt0.c0, vt1.c0, vt0.c0, vt1.c1))>((vt1.c0, vt1.c1, vt0.c0, vt1.c1, vt1.c0))))) WHERE ((((~ (((vt1.c0) IS TRUE)))) ISNULL));
SELECT * FROM vt1 CROSS JOIN vt0 ON ((((vt1.c0))==((vt0.c0))) IN ((((vt1.c1, vt0.c0, vt1.c0, vt0.c0, vt1.c1))>((vt1.c0, vt1.c1, vt0.c0, vt1.c1, vt1.c0)))));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((vt0.c0)AND(vt0.c0)) COLLATE NOCASE) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0)AND(vt0.c0)) COLLATE NOCASE))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT rt0.c2, vt0.c0 FROM vt0, rt0 RIGHT OUTER JOIN vt1 ON x'' GROUP BY rt0.c2, vt0.c0;
SELECT ALL rt0.c2, vt0.c0 FROM vt0, rt0 RIGHT OUTER JOIN vt1 ON x'' WHERE ((((NOT (vt0.c0))) NOT BETWEEN (((vt1.c1) BETWEEN (vt1.c0) AND (rt0.c0))) AND (((vt0.c0) NOTNULL)))) GROUP BY rt0.c2, vt0.c0 UNION SELECT rt0.c2, vt0.c0 FROM vt0, rt0 RIGHT OUTER JOIN vt1 ON x'' WHERE ((NOT ((((NOT (vt0.c0))) NOT BETWEEN (((vt1.c1) BETWEEN (vt1.c0) AND (rt0.c0))) AND (((vt0.c0) NOTNULL)))))) GROUP BY rt0.c2, vt0.c0 UNION SELECT ALL rt0.c2, vt0.c0 FROM vt0, rt0 RIGHT OUTER JOIN vt1 ON x'' WHERE ((((((NOT (vt0.c0))) NOT BETWEEN (((vt1.c1) BETWEEN (vt1.c0) AND (rt0.c0))) AND (((vt0.c0) NOTNULL)))) ISNULL)) GROUP BY rt0.c2, vt0.c0;
SELECT rt0.c2, vt0.c0 FROM vt0, rt0 RIGHT OUTER JOIN vt1 ON x'' GROUP BY rt0.c2, vt0.c0;
SELECT ALL vt1.c0, rt0.c0, rt0.c1, vt0.c0, vt1.c1 FROM rt0, vt1, vt0 GROUP BY vt1.c0, rt0.c0, rt0.c1, vt0.c0, vt1.c1;
SELECT ALL vt1.c0, rt0.c0, rt0.c1, vt0.c0, vt1.c1 FROM rt0, vt1, vt0 GROUP BY vt1.c0, rt0.c0, rt0.c1, vt0.c0, vt1.c1 HAVING COUNT(*) UNION ALL SELECT vt1.c0, rt0.c0, rt0.c1, vt0.c0, vt1.c1 FROM rt0, vt1, vt0 GROUP BY vt1.c0, rt0.c0, rt0.c1, vt0.c0, vt1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0, rt0.c0, rt0.c1, vt0.c0, vt1.c1 FROM rt0, vt1, vt0 GROUP BY vt1.c0, rt0.c0, rt0.c1, vt0.c0, vt1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0, rt0.c0, rt0.c1, vt0.c0, vt1.c1 FROM rt0, vt1, vt0 GROUP BY vt1.c0, rt0.c0, rt0.c1, vt0.c0, vt1.c1;
SELECT ALL vt1.c0, rt0.c0, rt0.c1, vt0.c0, vt1.c1 FROM rt0, vt1, vt0 GROUP BY vt1.c0, rt0.c0, rt0.c1, vt0.c0, vt1.c1 HAVING COUNT(*) UNION ALL SELECT vt1.c0, rt0.c0, rt0.c1, vt0.c0, vt1.c1 FROM rt0, vt1, vt0 GROUP BY vt1.c0, rt0.c0, rt0.c1, vt0.c0, vt1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0, rt0.c0, rt0.c1, vt0.c0, vt1.c1 FROM rt0, vt1, vt0 GROUP BY vt1.c0, rt0.c0, rt0.c1, vt0.c0, vt1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0, rt0.c0, rt0.c1, vt0.c0, vt1.c1 FROM rt0, vt1, vt0 GROUP BY vt1.c0, rt0.c0, rt0.c1, vt0.c0, vt1.c1;
SELECT * FROM vt1, rt0;
SELECT * FROM vt1, rt0 WHERE (CASE (((vt1.c1))<>((vt1.c0)))  WHEN (((vt1.c0, rt0.c1, rt0.c0))>((rt0.c0, rt0.c2, vt1.c1))) THEN vt1.c0 ELSE ((rt0.c1)LIKE(vt1.c1)) END) UNION ALL SELECT ALL * FROM vt1, rt0 WHERE ((NOT (CASE (((vt1.c1))!=((vt1.c0)))  WHEN (((vt1.c0, rt0.c1, rt0.c0))>((rt0.c0, rt0.c2, vt1.c1))) THEN vt1.c0 ELSE ((rt0.c1)LIKE(vt1.c1)) END))) UNION ALL SELECT ALL * FROM vt1, rt0 WHERE (((CASE (((vt1.c1))!=((vt1.c0)))  WHEN (((vt1.c0, rt0.c1, rt0.c0))>((rt0.c0, rt0.c2, vt1.c1))) THEN vt1.c0 ELSE ((rt0.c1)LIKE(vt1.c1)) END) ISNULL));
SELECT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0)+(vt0.c0))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((vt0.c0)+(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0)+(vt0.c0))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (UPPER(DISTINCT NULL)) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT (UPPER(DISTINCT NULL)))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((UPPER(DISTINCT NULL)) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM vt1, rt0, vt0 GROUP BY vt0.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT ALL vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM vt1, rt0, vt0 GROUP BY vt0.c0, rt0.c2, rt0.c0, rt0.c1 HAVING AVG(((vt1.c1) BETWEEN (-465611508) AND (TOTAL(rt0.c2)))) UNION ALL SELECT ALL vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM vt1, rt0, vt0 GROUP BY vt0.c0, rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (AVG(((vt1.c1) BETWEEN (-465611508) AND (TOTAL(rt0.c2)))))) UNION ALL SELECT vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM vt1, rt0, vt0 GROUP BY vt0.c0, rt0.c2, rt0.c0, rt0.c1 HAVING ((AVG(((vt1.c1) BETWEEN (-465611508) AND (TOTAL(rt0.c2))))) ISNULL);
SELECT ALL * FROM vt0, vt1;
SELECT * FROM vt0, vt1 WHERE (NULLIF(DISTINCT (((vt0.c0, vt1.c1, vt1.c1))>=((vt1.c1, vt1.c1, vt1.c0))), (+ (vt1.c1)))) UNION ALL SELECT * FROM vt0, vt1 WHERE ((NOT (NULLIF(DISTINCT (((vt0.c0, vt1.c1, vt1.c1))>=((vt1.c1, vt1.c1, vt1.c0))), (+ (vt1.c1)))))) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE (((NULLIF(DISTINCT (((vt0.c0, vt1.c1, vt1.c1))>=((vt1.c1, vt1.c1, vt1.c0))), (+ (vt1.c1)))) ISNULL));
SELECT ALL * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (LIKE(((vt0.c0)>(vt0.c0)), ((vt0.c0)>(0.583597961465747)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (LIKE(((vt0.c0)>(vt0.c0)), ((vt0.c0)>(0.583597961465747)))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((LIKE(((vt0.c0)>(vt0.c0)), ((vt0.c0)>(0.583597961465747)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL rt0.c0, vt1.c1, rt0.c2, vt1.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c1, rt0.c2, vt1.c0, rt0.c1;
SELECT ALL rt0.c0, vt1.c1, rt0.c2, vt1.c0, rt0.c1 FROM rt0, vt1 WHERE (CAST((+ (x'')) AS BLOB)) GROUP BY rt0.c0, vt1.c1, rt0.c2, vt1.c0, rt0.c1 UNION SELECT rt0.c0, vt1.c1, rt0.c2, vt1.c0, rt0.c1 FROM rt0, vt1 WHERE ((NOT (CAST((+ (x'')) AS BLOB)))) GROUP BY rt0.c0, vt1.c1, rt0.c2, vt1.c0, rt0.c1 UNION SELECT rt0.c0, vt1.c1, rt0.c2, vt1.c0, rt0.c1 FROM rt0, vt1 WHERE (((CAST((+ (x'')) AS BLOB)) ISNULL)) GROUP BY rt0.c0, vt1.c1, rt0.c2, vt1.c0, rt0.c1;
SELECT ALL rt0.c0, vt1.c1, rt0.c2, vt1.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c1, rt0.c2, vt1.c0, rt0.c1;
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING (json_insert(vt1.c0, '-957610591', TOTAL(vt1.c1)) IN ()) UNION ALL SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING (NOT ((json_insert(vt1.c0, '-957610591', TOTAL(vt1.c1)) IN ()))) UNION ALL SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING (((json_insert(vt1.c0, '-957610591', TOTAL(vt1.c1)) IN ())) ISNULL);
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING (json_insert(vt1.c0, '-957610591', TOTAL(vt1.c1)) IN ()) UNION ALL SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING (NOT ((json_insert(vt1.c0, '-957610591', TOTAL(vt1.c1)) IN ()))) UNION ALL SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING (((json_insert(vt1.c0, '-957610591', TOTAL(vt1.c1)) IN ())) ISNULL);
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT rt0.c2, rt0.c1, vt1.c1, vt1.c0, rt0.c0 FROM vt1, rt0;
SELECT ALL rt0.c2, rt0.c1, vt1.c1, vt1.c0, rt0.c0 FROM vt1, rt0 WHERE ((- (rt0.c1))) UNION ALL SELECT ALL rt0.c2, rt0.c1, vt1.c1, vt1.c0, rt0.c0 FROM vt1, rt0 WHERE ((NOT ((- (rt0.c1))))) UNION ALL SELECT rt0.c2, rt0.c1, vt1.c1, vt1.c0, rt0.c0 FROM vt1, rt0 WHERE ((((- (rt0.c1))) ISNULL));
SELECT rt0.c2, rt0.c1, vt1.c1, vt1.c0, rt0.c0 FROM vt1, rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(((vt0.c0)*(NULL)))))OR((- (vt0.c0)))))OR(vt0.c0)))AND(((vt0.c0) BETWEEN (vt0.c0) AND (NULL)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(((vt0.c0)<<(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(((vt0.c0)*(NULL)))))OR((- (vt0.c0)))))OR(vt0.c0)))AND(((vt0.c0) BETWEEN (vt0.c0) AND (NULL)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(((vt0.c0)<<(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(((vt0.c0)*(NULL)))))OR((- (vt0.c0)))))OR(vt0.c0)))AND(((vt0.c0) BETWEEN (vt0.c0) AND (NULL)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(((vt0.c0)<<(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0, vt1.c1, rt0.c2, rt0.c0 FROM vt1, rt0 NATURAL JOIN vt0 GROUP BY vt0.c0, vt1.c1, rt0.c2, rt0.c0;
SELECT vt0.c0, vt1.c1, rt0.c2, rt0.c0 FROM vt1 NOT INDEXED, rt0 NATURAL JOIN vt0 WHERE ((~ (rt0.c2))) GROUP BY vt0.c0, vt1.c1, rt0.c2, rt0.c0 UNION SELECT vt0.c0, vt1.c1, rt0.c2, rt0.c0 FROM vt1, rt0 NATURAL JOIN vt0 WHERE ((NOT ((~ (rt0.c2))))) GROUP BY vt0.c0, vt1.c1, rt0.c2, rt0.c0 UNION SELECT vt0.c0, vt1.c1, rt0.c2, rt0.c0 FROM vt1, rt0 NATURAL JOIN vt0 WHERE ((((~ (rt0.c2))) ISNULL)) GROUP BY vt0.c0, vt1.c1, rt0.c2, rt0.c0;
SELECT vt0.c0, vt1.c1, rt0.c2, rt0.c0 FROM vt1, rt0 NATURAL JOIN vt0 GROUP BY vt0.c0, vt1.c1, rt0.c2, rt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING SUM(((((vt0.c0)OR(vt0.c0)))AND(COUNT(*)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (SUM(((((vt0.c0)OR(vt0.c0)))AND(COUNT(*)))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM(((((vt0.c0)OR(vt0.c0)))AND(COUNT(*))))) ISNULL);
SELECT * FROM rt0 LEFT OUTER JOIN vt1 ON ((IFNULL(vt1.c0, x'8db2')) ISNULL);
SELECT * FROM rt0 LEFT OUTER JOIN vt1 ON ((IFNULL(vt1.c0, x'8db2')) ISNULL) WHERE (NULL) UNION ALL SELECT * FROM rt0 LEFT OUTER JOIN vt1 ON ((IFNULL(vt1.c0, x'8db2')) ISNULL) WHERE ((NOT (NULL))) UNION ALL SELECT ALL * FROM rt0 LEFT OUTER JOIN vt1 ON ((IFNULL(vt1.c0, x'8db2')) ISNULL) WHERE (((NULL) ISNULL));
SELECT * FROM rt0 LEFT OUTER JOIN vt1 ON ((IFNULL(vt1.c0, x'8db2')) ISNULL);
SELECT DISTINCT * FROM vt1, vt0 FULL OUTER JOIN rt0 ON (((((rt0.c0 IN ()))AND(((rt0.c0)IS NOT(vt0.c0)))))AND(rt0.c1));
SELECT DISTINCT * FROM vt1, vt0 FULL OUTER JOIN rt0 ON (((((rt0.c0 IN ()))AND(((rt0.c0)IS NOT(vt0.c0)))))AND(rt0.c1)) WHERE (CASE (vt1.c1 IN ())  WHEN vt1.c0 COLLATE BINARY THEN ((vt1.c1)|(rt0.c0)) WHEN (vt1.c1 IN ()) THEN ABS(DISTINCT rt0.c0) WHEN (+ (vt1.c1)) THEN vt0.c0 END) UNION SELECT DISTINCT * FROM vt1, vt0 FULL OUTER JOIN rt0 ON (((((rt0.c0 IN ()))AND(((rt0.c0)IS NOT(vt0.c0)))))AND(rt0.c1)) WHERE ((NOT (CASE (vt1.c1 IN ())  WHEN vt1.c0 COLLATE BINARY THEN ((vt1.c1)|(rt0.c0)) WHEN (vt1.c1 IN ()) THEN ABS(DISTINCT rt0.c0) WHEN (+ (vt1.c1)) THEN vt0.c0 END))) UNION SELECT DISTINCT * FROM vt1, vt0 FULL OUTER JOIN rt0 ON (((((rt0.c0 IN ()))AND(((rt0.c0)IS NOT(vt0.c0)))))AND(rt0.c1)) WHERE (((CASE (vt1.c1 IN ())  WHEN vt1.c0 COLLATE BINARY THEN ((vt1.c1)|(rt0.c0)) WHEN (vt1.c1 IN ()) THEN ABS(DISTINCT rt0.c0) WHEN (+ (vt1.c1)) THEN vt0.c0 END) ISNULL));
SELECT DISTINCT * FROM vt1, vt0 FULL OUTER JOIN rt0 ON (((((rt0.c0 IN ()))AND(((rt0.c0)IS NOT(vt0.c0)))))AND(rt0.c1));
SELECT ALL rt0.c2, rt0.c1, vt1.c1, vt1.c0 FROM rt0 NATURAL JOIN vt1 GROUP BY rt0.c2, rt0.c1, vt1.c1, vt1.c0;
SELECT ALL rt0.c2, rt0.c1, vt1.c1, vt1.c0 FROM rt0 NATURAL JOIN vt1 WHERE (((rt0.c1) IS TRUE) COLLATE RTRIM) GROUP BY rt0.c2, rt0.c1, vt1.c1, vt1.c0 UNION SELECT rt0.c2, rt0.c1, vt1.c1, vt1.c0 FROM rt0 NATURAL JOIN vt1 WHERE ((NOT (((rt0.c1) IS TRUE) COLLATE RTRIM))) GROUP BY rt0.c2, rt0.c1, vt1.c1, vt1.c0 UNION SELECT rt0.c2, rt0.c1, vt1.c1, vt1.c0 FROM rt0 NATURAL JOIN vt1 WHERE (((((rt0.c1) IS TRUE) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c2, rt0.c1, vt1.c1, vt1.c0;
SELECT ALL rt0.c2, rt0.c1, vt1.c1, vt1.c0 FROM rt0 NATURAL JOIN vt1 GROUP BY rt0.c2, rt0.c1, vt1.c1, vt1.c0;
SELECT ALL vt0.c0 FROM vt1, rt0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, rt0, vt0 GROUP BY vt0.c0 HAVING SUM((((vt1.c0))>=((COUNT(*))))) UNION ALL SELECT ALL vt0.c0 FROM vt1, rt0, vt0 GROUP BY vt0.c0 HAVING (NOT (SUM((((vt1.c0))>=((COUNT(*))))))) UNION ALL SELECT vt0.c0 FROM vt1, rt0, vt0 GROUP BY vt0.c0 HAVING ((SUM((((vt1.c0))>=((COUNT(*)))))) ISNULL);
SELECT rt0.c2 FROM rt0;
SELECT rt0.c2 FROM rt0 WHERE (((((NULL) IS TRUE)) NOTNULL)) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (((((NULL) IS TRUE)) NOTNULL)))) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE (((((((NULL) IS TRUE)) NOTNULL)) ISNULL));
SELECT rt0.c2 FROM rt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (CAST((+ (vt1.c1)) AS REAL)) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (CAST((+ (vt1.c1)) AS REAL)))) UNION SELECT DISTINCT * FROM vt1 WHERE (((CAST((+ (vt1.c1)) AS REAL)) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((('-1459571458')>>((vt1.c1 IN ())))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((('-1459571458')>>((vt1.c1 IN ())))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((('-1459571458')>>((vt1.c1 IN ())))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING rt0.c1 UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (rt0.c1)) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((rt0.c1) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING rt0.c1 UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (rt0.c1)) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((rt0.c1) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL vt1.c1 FROM vt1, vt0;
SELECT vt1.c1 FROM vt1, vt0 WHERE (CASE WHEN (((vt1.c0))!=(('lCrFJSGl'))) THEN json_valid(vt1.c1) WHEN 0.8378321396409747 COLLATE NOCASE THEN '806291863' WHEN (((vt0.c0))=((vt0.c0))) THEN (vt0.c0 IN ()) END) UNION ALL SELECT vt1.c1 FROM vt1, vt0 WHERE ((NOT (CASE WHEN (((vt1.c0))<>(('lCrFJSGl'))) THEN json_valid(vt1.c1) WHEN 0.8378321396409747 COLLATE NOCASE THEN '806291863' WHEN (((vt0.c0))=((vt0.c0))) THEN (vt0.c0 IN ()) END))) UNION ALL SELECT vt1.c1 FROM vt1, vt0 WHERE (((CASE WHEN (((vt1.c0))!=(('lCrFJSGl'))) THEN json_valid(vt1.c1) WHEN 0.8378321396409747 COLLATE NOCASE THEN '806291863' WHEN (((vt0.c0))=((vt0.c0))) THEN (vt0.c0 IN ()) END) ISNULL));
SELECT ALL vt1.c1 FROM vt1, vt0;
SELECT DISTINCT vt1.c1, rt0.c0, rt0.c2 FROM vt1, rt0;
SELECT DISTINCT vt1.c1, rt0.c0, rt0.c2 FROM vt1, rt0 WHERE (((CAST(rt0.c1 AS NUMERIC)) BETWEEN (((rt0.c2) ISNULL)) AND (((((NULL)AND(rt0.c0)))OR(vt1.c0))))) UNION SELECT DISTINCT vt1.c1, rt0.c0, rt0.c2 FROM vt1, rt0 WHERE ((NOT (((CAST(rt0.c1 AS NUMERIC)) BETWEEN (((rt0.c2) ISNULL)) AND (((((NULL)AND(rt0.c0)))OR(vt1.c0))))))) UNION SELECT DISTINCT vt1.c1, rt0.c0, rt0.c2 FROM vt1, rt0 WHERE (((((CAST(rt0.c1 AS NUMERIC)) BETWEEN (((rt0.c2) ISNULL)) AND (((((NULL)AND(rt0.c0)))OR(vt1.c0))))) ISNULL));
SELECT DISTINCT vt1.c1, rt0.c0, rt0.c2 FROM vt1, rt0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE (((CAST(rt0.c1 AS NUMERIC)) BETWEEN (((rt0.c1) IS FALSE)) AND ((((rt0.c1, rt0.c2, rt0.c1))>((rt0.c0, rt0.c2, rt0.c1)))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT (((CAST(rt0.c1 AS NUMERIC)) BETWEEN (((rt0.c1) IS FALSE)) AND ((((rt0.c1, rt0.c2, rt0.c1))>((rt0.c0, rt0.c2, rt0.c1)))))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE (((((CAST(rt0.c1 AS NUMERIC)) BETWEEN (((rt0.c1) IS FALSE)) AND ((((rt0.c1, rt0.c2, rt0.c1))>((rt0.c0, rt0.c2, rt0.c1)))))) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TRIM(MAX(TOTAL(COUNT(*)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TRIM(MAX(TOTAL(COUNT(*)))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TRIM(MAX(TOTAL(COUNT(*))))) ISNULL);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON ((vt1.c0)<<((('739115572') IS FALSE))) RIGHT OUTER JOIN rt0 ON ((+ (rt0.c0)) IN ());
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON ((vt1.c0)<<((('739115572') IS FALSE))) RIGHT OUTER JOIN rt0 ON ((+ (rt0.c0)) IN ()) WHERE (CAST((rt0.c1 IN ()) AS BLOB)) UNION ALL SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON ((vt1.c0)<<((('739115572') IS FALSE))) RIGHT OUTER JOIN rt0 ON ((+ (rt0.c0)) IN ()) WHERE ((NOT (CAST((rt0.c1 IN ()) AS BLOB)))) UNION ALL SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON ((vt1.c0)<<((('739115572') IS FALSE))) RIGHT OUTER JOIN rt0 ON ((+ (rt0.c0)) IN ()) WHERE (((CAST((rt0.c1 IN ()) AS BLOB)) ISNULL));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON ((vt1.c0)<<((('739115572') IS FALSE))) RIGHT OUTER JOIN rt0 ON ((+ (rt0.c0)) IN ());
SELECT DISTINCT * FROM vt0 NATURAL JOIN vt1;
SELECT DISTINCT * FROM vt0 NATURAL JOIN vt1 WHERE (x'') UNION SELECT DISTINCT * FROM vt0 NATURAL JOIN vt1 WHERE ((NOT (x''))) UNION SELECT DISTINCT * FROM vt0 NATURAL JOIN vt1 WHERE (((x'') ISNULL));
SELECT DISTINCT * FROM vt0 NATURAL JOIN vt1;
SELECT ALL vt1.c0, vt0.c0, rt0.c1, rt0.c2, vt1.c1 FROM vt1, vt0 FULL OUTER JOIN rt0 ON x'' GROUP BY vt1.c0, vt0.c0, rt0.c1, rt0.c2, vt1.c1;
SELECT ALL vt1.c0, vt0.c0, rt0.c1, rt0.c2, vt1.c1 FROM vt1, vt0 FULL OUTER JOIN rt0 ON x'' WHERE (CASE (~ (vt1.c1))  WHEN ((rt0.c0) ISNULL) THEN CASE WHEN vt1.c0 THEN vt0.c0 END ELSE NULL END) GROUP BY vt1.c0, vt0.c0, rt0.c1, rt0.c2, vt1.c1 UNION SELECT vt1.c0, vt0.c0, rt0.c1, rt0.c2, vt1.c1 FROM vt1, vt0 FULL OUTER JOIN rt0 ON x'' WHERE ((NOT (CASE (~ (vt1.c1))  WHEN ((rt0.c0) ISNULL) THEN CASE WHEN vt1.c0 THEN vt0.c0 END ELSE NULL END))) GROUP BY vt1.c0, vt0.c0, rt0.c1, rt0.c2, vt1.c1 UNION SELECT vt1.c0, vt0.c0, rt0.c1, rt0.c2, vt1.c1 FROM vt1, vt0 FULL OUTER JOIN rt0 ON x'' WHERE (((CASE (~ (vt1.c1))  WHEN ((rt0.c0) ISNULL) THEN CASE WHEN vt1.c0 THEN vt0.c0 END ELSE NULL END) ISNULL)) GROUP BY vt1.c0, vt0.c0, rt0.c1, rt0.c2, vt1.c1;
SELECT ALL vt1.c0, vt0.c0, rt0.c1, rt0.c2, vt1.c1 FROM vt1, vt0 FULL OUTER JOIN rt0 ON x'' GROUP BY vt1.c0, vt0.c0, rt0.c1, rt0.c2, vt1.c1;
SELECT ALL vt1.c1, vt0.c0, vt1.c0, rt0.c0, rt0.c2 FROM rt0, vt1, vt0 GROUP BY vt1.c1, vt0.c0, vt1.c0, rt0.c0, rt0.c2;
SELECT vt1.c1, vt0.c0, vt1.c0, rt0.c0, rt0.c2 FROM rt0, vt1, vt0 GROUP BY vt1.c1, vt0.c0, vt1.c0, rt0.c0, rt0.c2 HAVING GROUP_CONCAT(CASE COUNT(MIN(rt0.c2))  WHEN MAX(rt0.c0) THEN vt1.c1 END) UNION ALL SELECT ALL vt1.c1, vt0.c0, vt1.c0, rt0.c0, rt0.c2 FROM rt0, vt1, vt0 GROUP BY vt1.c1, vt0.c0, vt1.c0, rt0.c0, rt0.c2 HAVING (NOT (GROUP_CONCAT(CASE COUNT(MIN(rt0.c2))  WHEN MAX(rt0.c0) THEN vt1.c1 END))) UNION ALL SELECT vt1.c1, vt0.c0, vt1.c0, rt0.c0, rt0.c2 FROM rt0, vt1, vt0 GROUP BY vt1.c1, vt0.c0, vt1.c0, rt0.c0, rt0.c2 HAVING ((GROUP_CONCAT(CASE COUNT(MIN(rt0.c2))  WHEN MAX(rt0.c0) THEN vt1.c1 END)) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((((((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND(((((((((vt0.c0)AND(vt0.c0)))OR(x'8b29')))OR(vt0.c0)))OR(vt0.c0)))))OR(-541161840)))OR(UPPER(DISTINCT vt0.c0))))AND((- (vt0.c0)))))AND((+ (vt0.c0)))))AND(CAST(vt0.c0 AS TEXT)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((((((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND(((((((((vt0.c0)AND(vt0.c0)))OR(x'8b29')))OR(vt0.c0)))OR(vt0.c0)))))OR(-541161840)))OR(UPPER(DISTINCT vt0.c0))))AND((- (vt0.c0)))))AND((+ (vt0.c0)))))AND(CAST(vt0.c0 AS TEXT)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((((((((((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND(((((((((vt0.c0)AND(vt0.c0)))OR(x'8b29')))OR(vt0.c0)))OR(vt0.c0)))))OR(-541161840)))OR(UPPER(DISTINCT vt0.c0))))AND((- (vt0.c0)))))AND((+ (vt0.c0)))))AND(CAST(vt0.c0 AS TEXT)))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((vt1.c0 IN (vt1.c1, vt1.c0)) IN ())) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((vt1.c0 IN (vt1.c1, vt1.c0)) IN ())))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c0 IN (vt1.c1, vt1.c0)) IN ())) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((rt0.c1)%(rt0.c1)) COLLATE RTRIM) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c1)%(rt0.c1)) COLLATE RTRIM))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((rt0.c1)%(rt0.c1)) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c1 FROM vt0, rt0, vt1 GROUP BY rt0.c1;
SELECT rt0.c1 FROM vt0, rt0, vt1 GROUP BY rt0.c1 HAVING ((TRIM(DISTINCT SUM(MAX(MIN(COUNT(*))))))OR(CAST(TOTAL(1323650240) AS REAL))) UNION ALL SELECT rt0.c1 FROM vt0, rt0, vt1 GROUP BY rt0.c1 HAVING (NOT (((TRIM(DISTINCT SUM(MAX(MIN(COUNT(*))))))OR(CAST(TOTAL(1323650240) AS REAL))))) UNION ALL SELECT ALL rt0.c1 FROM vt0, rt0, vt1 GROUP BY rt0.c1 HAVING ((((TRIM(DISTINCT SUM(MAX(MIN(COUNT(*))))))OR(CAST(TOTAL(1323650240) AS REAL)))) ISNULL);
SELECT MIN('2y!pdCzq' COLLATE BINARY) FROM vt0, rt0;
SELECT vt1.c0, vt1.c1 FROM vt1;
SELECT vt1.c0, vt1.c1 FROM vt1 WHERE (UNICODE(CASE x''  WHEN '' THEN vt1.c1 END)) UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1 WHERE ((NOT (UNICODE(CASE x''  WHEN '' THEN vt1.c1 END)))) UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1 WHERE (((UNICODE(CASE x''  WHEN '' THEN vt1.c1 END)) ISNULL));
SELECT vt1.c0, vt1.c1 FROM vt1;
SELECT DISTINCT vt1.c0, rt0.c2, rt0.c1, vt1.c1, rt0.c0, vt0.c0 FROM rt0, vt1, vt0;
SELECT DISTINCT vt1.c0, rt0.c2, rt0.c1, vt1.c1, rt0.c0, vt0.c0 FROM rt0, vt1, vt0 WHERE (CAST((- (vt0.c0)) AS TEXT)) UNION SELECT DISTINCT vt1.c0, rt0.c2, rt0.c1, vt1.c1, rt0.c0, vt0.c0 FROM rt0, vt1, vt0 WHERE ((NOT (CAST((- (vt0.c0)) AS TEXT)))) UNION SELECT DISTINCT vt1.c0, rt0.c2, rt0.c1, vt1.c1, rt0.c0, vt0.c0 FROM rt0, vt1, vt0 WHERE (((CAST((- (vt0.c0)) AS TEXT)) ISNULL));
SELECT DISTINCT vt1.c0, rt0.c2, rt0.c1, vt1.c1, rt0.c0, vt0.c0 FROM rt0, vt1, vt0;
SELECT vt1.c1, vt1.c0, rt0.c2, rt0.c1 FROM rt0, vt0, vt1 GROUP BY vt1.c1, vt1.c0, rt0.c2, rt0.c1;
SELECT ALL vt1.c1, vt1.c0, rt0.c2, rt0.c1 FROM rt0, vt0, vt1 WHERE ((~ (((vt0.c0)/(rt0.c0))))) GROUP BY vt1.c1, vt1.c0, rt0.c2, rt0.c1 UNION SELECT vt1.c1, vt1.c0, rt0.c2, rt0.c1 FROM rt0, vt0, vt1 WHERE ((NOT ((~ (((vt0.c0)/(rt0.c0))))))) GROUP BY vt1.c1, vt1.c0, rt0.c2, rt0.c1 UNION SELECT vt1.c1, vt1.c0, rt0.c2, rt0.c1 FROM rt0, vt0, vt1 WHERE ((((~ (((vt0.c0)/(rt0.c0))))) ISNULL)) GROUP BY vt1.c1, vt1.c0, rt0.c2, rt0.c1;
SELECT vt1.c1, vt1.c0, rt0.c2, rt0.c1 FROM rt0, vt0, vt1 GROUP BY vt1.c1, vt1.c0, rt0.c2, rt0.c1;
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING (- ((((0.3618993035185949, GROUP_CONCAT(vt1.c1), vt1.c1))>((SUM(vt1.c1), SUM(SUM(vt1.c0)), vt1.c0))))) UNION ALL SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING (NOT ((- ((((0.3618993035185949, GROUP_CONCAT(vt1.c1), vt1.c1))>((SUM(vt1.c1), SUM(SUM(vt1.c0)), vt1.c0))))))) UNION ALL SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING (((- ((((0.3618993035185949, GROUP_CONCAT(vt1.c1), vt1.c1))>((SUM(vt1.c1), SUM(SUM(vt1.c0)), vt1.c0)))))) ISNULL);
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE (CASE WHEN (vt1.c0 IN ()) THEN -1351878212 ELSE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END END) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (CASE WHEN (vt1.c0 IN ()) THEN -1351878212 ELSE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END END))) UNION ALL SELECT * FROM vt1 WHERE (((CASE WHEN (vt1.c0 IN ()) THEN -1351878212 ELSE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END END) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT rt0.c0, vt0.c0, rt0.c1, vt1.c0, rt0.c2 FROM vt0 RIGHT OUTER JOIN vt1 ON ((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt0.c0))) IS TRUE) LEFT OUTER JOIN rt0 ON (((vt0.c0) IS FALSE) IN ());
SELECT DISTINCT rt0.c0, vt0.c0, rt0.c1, vt1.c0, rt0.c2 FROM vt0 RIGHT OUTER JOIN vt1 ON ((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt0.c0))) IS TRUE) LEFT OUTER JOIN rt0 ON (((vt0.c0) IS FALSE) IN ()) WHERE (((((vt0.c0, vt0.c0, vt1.c0)) BETWEEN ((rt0.c1, rt0.c1, rt0.c1)) AND ((rt0.c0, rt0.c1, -6.66166917E8))) IN ())) UNION SELECT DISTINCT rt0.c0, vt0.c0, rt0.c1, vt1.c0, rt0.c2 FROM vt0 RIGHT OUTER JOIN vt1 ON ((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt0.c0))) IS TRUE) LEFT OUTER JOIN rt0 ON (((vt0.c0) IS FALSE) IN ()) WHERE ((NOT (((((vt0.c0, vt0.c0, vt1.c0)) BETWEEN ((rt0.c1, rt0.c1, rt0.c1)) AND ((rt0.c0, rt0.c1, -6.66166917E8))) IN ())))) UNION SELECT DISTINCT rt0.c0, vt0.c0, rt0.c1, vt1.c0, rt0.c2 FROM vt0 RIGHT OUTER JOIN vt1 ON ((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt0.c0))) IS TRUE) LEFT OUTER JOIN rt0 ON (((vt0.c0) IS FALSE) IN ()) WHERE (((((((vt0.c0, vt0.c0, vt1.c0)) BETWEEN ((rt0.c1, rt0.c1, rt0.c1)) AND ((rt0.c0, rt0.c1, -6.66166917E8))) IN ())) ISNULL));
SELECT DISTINCT rt0.c0, vt0.c0, rt0.c1, vt1.c0, rt0.c2 FROM vt0 RIGHT OUTER JOIN vt1 ON ((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt0.c0))) IS TRUE) LEFT OUTER JOIN rt0 ON (((vt0.c0) IS FALSE) IN ());
SELECT ALL rt0.c2 FROM vt1, vt0, rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt1, vt0, rt0 WHERE (CAST((vt1.c1 IN (vt1.c0, vt0.c0)) AS TEXT)) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM vt1, vt0, rt0 WHERE ((NOT (CAST((vt1.c1 IN (vt1.c0, vt0.c0)) AS TEXT)))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM vt1, vt0, rt0 WHERE (((CAST((vt1.c1 IN (vt1.c0, vt0.c0)) AS TEXT)) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt1, vt0, rt0 GROUP BY rt0.c2;
SELECT ALL vt1.c0, vt0.c0, rt0.c1, rt0.c0, rt0.c2, vt1.c1 FROM vt0, vt1, rt0 GROUP BY vt1.c0, vt0.c0, rt0.c1, rt0.c0, rt0.c2, vt1.c1;
SELECT ALL vt1.c0, vt0.c0, rt0.c1, rt0.c0, rt0.c2, vt1.c1 FROM vt0, vt1, rt0 GROUP BY vt1.c0, vt0.c0, rt0.c1, rt0.c0, rt0.c2, vt1.c1 HAVING TOTAL(COUNT(*)) UNION ALL SELECT vt1.c0, vt0.c0, rt0.c1, rt0.c0, rt0.c2, vt1.c1 FROM vt0, vt1, rt0 GROUP BY vt1.c0, vt0.c0, rt0.c1, rt0.c0, rt0.c2, vt1.c1 HAVING (NOT (TOTAL(COUNT(*)))) UNION ALL SELECT vt1.c0, vt0.c0, rt0.c1, rt0.c0, rt0.c2, vt1.c1 FROM vt0, vt1, rt0 GROUP BY vt1.c0, vt0.c0, rt0.c1, rt0.c0, rt0.c2, vt1.c1 HAVING ((TOTAL(COUNT(*))) ISNULL);
SELECT ALL MAX(rt0.c2) FROM rt0;
SELECT vt1.c0, rt0.c2, rt0.c0, vt0.c0 FROM vt0, vt1 FULL OUTER JOIN rt0 ON ((rt0.c0)>>(vt0.c0)) COLLATE RTRIM;
SELECT ALL vt1.c0, rt0.c2, rt0.c0, vt0.c0 FROM vt0, vt1 FULL OUTER JOIN rt0 ON ((rt0.c0)>>(vt0.c0)) COLLATE RTRIM WHERE ((((rt0.c2)>>(rt0.c2)) IN (CAST(rt0.c2 AS BLOB)))) UNION ALL SELECT ALL vt1.c0, rt0.c2, rt0.c0, vt0.c0 FROM vt0, vt1 FULL OUTER JOIN rt0 ON ((rt0.c0)>>(vt0.c0)) COLLATE RTRIM WHERE ((NOT ((((rt0.c2)>>(rt0.c2)) IN (CAST(rt0.c2 AS BLOB)))))) UNION ALL SELECT ALL vt1.c0, rt0.c2, rt0.c0, vt0.c0 FROM vt0, vt1 FULL OUTER JOIN rt0 ON ((rt0.c0)>>(vt0.c0)) COLLATE RTRIM WHERE ((((((rt0.c2)>>(rt0.c2)) IN (CAST(rt0.c2 AS BLOB)))) ISNULL));
SELECT vt1.c0, rt0.c2, rt0.c0, vt0.c0 FROM vt0, vt1 FULL OUTER JOIN rt0 ON ((rt0.c0)>>(vt0.c0)) COLLATE RTRIM;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2, vt1.c1, vt1.c0 FROM vt1, rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2, vt1.c1, vt1.c0 FROM vt1, rt0 WHERE (((((rt0.c1)AND(rt0.c2))) NOT NULL)) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2, vt1.c1, vt1.c0 FROM vt1, rt0 WHERE ((NOT (((((rt0.c1)AND(rt0.c2))) NOT NULL)))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2, vt1.c1, vt1.c0 FROM vt1, rt0 WHERE (((((((rt0.c1)AND(rt0.c2))) NOT NULL)) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2, vt1.c1, vt1.c0 FROM vt1, rt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) NOT BETWEEN ((NOT (vt1.c0))) AND ((+ (vt1.c0))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) NOT BETWEEN ((NOT (vt1.c0))) AND ((+ (vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) NOT BETWEEN ((NOT (vt1.c0))) AND ((+ (vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c1, rt0.c0, rt0.c1, rt0.c2, vt1.c0 FROM vt1, rt0 GROUP BY vt1.c1, rt0.c0, rt0.c1, rt0.c2, vt1.c0;
SELECT ALL vt1.c1, rt0.c0, rt0.c1, rt0.c2, vt1.c0 FROM vt1, rt0 GROUP BY vt1.c1, rt0.c0, rt0.c1, rt0.c2, vt1.c0 HAVING AVG(((TOTAL(SUM(rt0.c1)))GLOB(rt0.c1))) UNION ALL SELECT vt1.c1, rt0.c0, rt0.c1, rt0.c2, vt1.c0 FROM vt1, rt0 GROUP BY vt1.c1, rt0.c0, rt0.c1, rt0.c2, vt1.c0 HAVING (NOT (AVG(((TOTAL(SUM(rt0.c1)))GLOB(rt0.c1))))) UNION ALL SELECT ALL vt1.c1, rt0.c0, rt0.c1, rt0.c2, vt1.c0 FROM vt1, rt0 GROUP BY vt1.c1, rt0.c0, rt0.c1, rt0.c2, vt1.c0 HAVING ((AVG(((TOTAL(SUM(rt0.c1)))GLOB(rt0.c1)))) ISNULL);
SELECT ALL * FROM vt0, rt0, vt1;
SELECT ALL * FROM vt0, rt0, vt1 WHERE (((LENGTH(vt1.c1)) NOT BETWEEN (x'4608') AND (((vt0.c0)LIKE(vt1.c1))))) UNION ALL SELECT ALL * FROM vt0, rt0, vt1 WHERE ((NOT (((LENGTH(vt1.c1)) NOT BETWEEN (x'4608') AND (((vt0.c0)LIKE(vt1.c1))))))) UNION ALL SELECT ALL * FROM vt0, rt0, vt1 WHERE (((((LENGTH(vt1.c1)) NOT BETWEEN (x'4608') AND (((vt0.c0)LIKE(vt1.c1))))) ISNULL));
SELECT ALL * FROM vt0, rt0, vt1;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CAST('572486295' AS TEXT)) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (CAST('572486295' AS TEXT)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CAST('572486295' AS TEXT)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON CAST((((vt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))) AS INTEGER) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON CAST((((vt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))) AS INTEGER) WHERE (((((ABS(vt1.c0))OR(CASE vt0.c0  WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c2 END)))OR((+ (rt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON CAST((((vt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))) AS INTEGER) WHERE ((NOT (((((ABS(vt1.c0))OR(CASE vt0.c0  WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c2 END)))OR((+ (rt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON CAST((((vt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))) AS INTEGER) WHERE (((((((ABS(vt1.c0))OR(CASE vt0.c0  WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c2 END)))OR((+ (rt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON CAST((((vt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))) AS INTEGER) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0 COLLATE BINARY) BETWEEN (GROUP_CONCAT(vt0.c0)) AND ((((vt0.c0, COUNT(*), COUNT(*), COUNT(*), GROUP_CONCAT(vt0.c0)))>=((vt0.c0, NULL, vt0.c0, vt0.c0, vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((vt0.c0 COLLATE BINARY) BETWEEN (GROUP_CONCAT(vt0.c0)) AND ((((vt0.c0, COUNT(*), COUNT(*), COUNT(*), GROUP_CONCAT(vt0.c0)))>=((vt0.c0, NULL, vt0.c0, vt0.c0, vt0.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((vt0.c0 COLLATE BINARY) BETWEEN (GROUP_CONCAT(vt0.c0)) AND ((((vt0.c0, COUNT(*), COUNT(*), COUNT(*), GROUP_CONCAT(vt0.c0)))>=((vt0.c0, NULL, vt0.c0, vt0.c0, vt0.c0)))))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0 COLLATE BINARY) BETWEEN (GROUP_CONCAT(vt0.c0)) AND ((((vt0.c0, COUNT(*), COUNT(*), COUNT(*), GROUP_CONCAT(vt0.c0)))>=((vt0.c0, NULL, vt0.c0, vt0.c0, vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((vt0.c0 COLLATE BINARY) BETWEEN (GROUP_CONCAT(vt0.c0)) AND ((((vt0.c0, COUNT(*), COUNT(*), COUNT(*), GROUP_CONCAT(vt0.c0)))>=((vt0.c0, NULL, vt0.c0, vt0.c0, vt0.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((vt0.c0 COLLATE BINARY) BETWEEN (GROUP_CONCAT(vt0.c0)) AND ((((vt0.c0, COUNT(*), COUNT(*), COUNT(*), GROUP_CONCAT(vt0.c0)))>=((vt0.c0, NULL, vt0.c0, vt0.c0, vt0.c0)))))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM vt0, vt1, rt0;
SELECT ALL * FROM vt0, vt1, rt0 WHERE ((((rt0.c2, rt0.c1, rt0.c0, rt0.c1, rt0.c1)) NOT BETWEEN ((CASE vt1.c0  WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN vt1.c1 WHEN rt0.c0 THEN vt0.c0 ELSE vt1.c1 END, ((((vt1.c1)AND(vt1.c1)))AND(vt0.c0)), CAST(vt1.c0 AS INTEGER), (((vt1.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))), (vt0.c0 IN (vt0.c0)))) AND (((~ (rt0.c1)), ((rt0.c0)IS NOT('915327313')), CASE WHEN rt0.c0 THEN rt0.c1 END, ((rt0.c2) BETWEEN (rt0.c2) AND (vt0.c0)), ((('-621996053', rt0.c1, vt1.c0))<>((rt0.c0, vt0.c0, rt0.c1))))))) UNION ALL SELECT * FROM vt0, vt1, rt0 WHERE ((NOT ((((rt0.c2, rt0.c1, rt0.c0, rt0.c1, rt0.c1)) NOT BETWEEN ((CASE vt1.c0  WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN vt1.c1 WHEN rt0.c0 THEN vt0.c0 ELSE vt1.c1 END, ((((vt1.c1)AND(vt1.c1)))AND(vt0.c0)), CAST(vt1.c0 AS INTEGER), (((vt1.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))), (vt0.c0 IN (vt0.c0)))) AND (((~ (rt0.c1)), ((rt0.c0)IS NOT('915327313')), CASE WHEN rt0.c0 THEN rt0.c1 END, ((rt0.c2) BETWEEN (rt0.c2) AND (vt0.c0)), ((('-621996053', rt0.c1, vt1.c0))!=((rt0.c0, vt0.c0, rt0.c1))))))))) UNION ALL SELECT ALL * FROM vt0, vt1, rt0 WHERE ((((((rt0.c2, rt0.c1, rt0.c0, rt0.c1, rt0.c1)) NOT BETWEEN ((CASE vt1.c0  WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN vt1.c1 WHEN rt0.c0 THEN vt0.c0 ELSE vt1.c1 END, ((((vt1.c1)AND(vt1.c1)))AND(vt0.c0)), CAST(vt1.c0 AS INTEGER), (((vt1.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))), (vt0.c0 IN (vt0.c0)))) AND (((~ (rt0.c1)), ((rt0.c0)IS NOT('915327313')), CASE WHEN rt0.c0 THEN rt0.c1 END, ((rt0.c2) BETWEEN (rt0.c2) AND (vt0.c0)), ((('-621996053', rt0.c1, vt1.c0))!=((rt0.c0, vt0.c0, rt0.c1))))))) ISNULL));
SELECT * FROM vt0, vt1, rt0;
SELECT DISTINCT vt1.c1, rt0.c2, rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1;
SELECT DISTINCT vt1.c1, rt0.c2, rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1 WHERE (((((vt1.c1)+(vt1.c1))) IS FALSE)) UNION SELECT DISTINCT vt1.c1, rt0.c2, rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1 WHERE ((NOT (((((vt1.c1)+(vt1.c1))) IS FALSE)))) UNION SELECT DISTINCT vt1.c1, rt0.c2, rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1 WHERE (((((((vt1.c1)+(vt1.c1))) IS FALSE)) ISNULL));
SELECT DISTINCT vt1.c1, rt0.c2, rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0) NOT NULL)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((NOT (((vt0.c0) NOT NULL)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((NOT (((vt0.c0) NOT NULL)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c0, rt0.c2, vt1.c0, vt0.c0 FROM vt0, rt0, vt1 GROUP BY rt0.c0, rt0.c2, vt1.c0, vt0.c0;
SELECT ALL rt0.c0, rt0.c2, vt1.c0, vt0.c0 FROM vt0, rt0, vt1 GROUP BY rt0.c0, rt0.c2, vt1.c0, vt0.c0 HAVING (~ ((AVG(SUM(AVG(COUNT(SUM(x''))))) IN (rt0.c2)))) UNION ALL SELECT rt0.c0, rt0.c2, vt1.c0, vt0.c0 FROM vt0, rt0, vt1 GROUP BY rt0.c0, rt0.c2, vt1.c0, vt0.c0 HAVING (NOT ((~ ((AVG(SUM(AVG(COUNT(SUM(x''))))) IN (rt0.c2)))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, vt1.c0, vt0.c0 FROM vt0, rt0, vt1 GROUP BY rt0.c0, rt0.c2, vt1.c0, vt0.c0 HAVING (((~ ((AVG(SUM(AVG(COUNT(SUM(x''))))) IN (rt0.c2))))) ISNULL);
SELECT TOTAL(((vt1.c1 COLLATE NOCASE)*(((vt1.c1)>=(vt1.c1))))) FROM vt1 ORDER BY (((vt1.c0 IN ()))>>(((vt1.c0)>>(vt1.c1)))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 CROSS JOIN rt0 ON ((rt0.c0 COLLATE BINARY)GLOB((~ (vt1.c0))));
SELECT * FROM vt0, vt1 CROSS JOIN rt0 ON ((rt0.c0 COLLATE BINARY)GLOB((~ (vt1.c0)))) WHERE ('E]Ea\r3쭊') UNION ALL SELECT * FROM vt0, vt1 CROSS JOIN rt0 ON ((rt0.c0 COLLATE BINARY)GLOB((~ (vt1.c0)))) WHERE ((NOT ('E]Ea\r3쭊'))) UNION ALL SELECT ALL * FROM vt0, vt1 CROSS JOIN rt0 ON ((rt0.c0 COLLATE BINARY)GLOB((~ (vt1.c0)))) WHERE ((('E]Ea\r3쭊') ISNULL));
SELECT ALL * FROM vt0, vt1 CROSS JOIN rt0 ON ((rt0.c0 COLLATE BINARY)GLOB((~ (vt1.c0))));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (UPPER(('745241464' IN ()))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (UPPER(('745241464' IN ()))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((UPPER(('745241464' IN ()))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0, rt0.c1, rt0.c2, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c1, rt0.c2, rt0.c0;
SELECT vt0.c0, rt0.c1, rt0.c2, rt0.c0 FROM vt0, rt0 WHERE (((vt0.c0) NOT NULL) COLLATE NOCASE) GROUP BY vt0.c0, rt0.c1, rt0.c2, rt0.c0 UNION SELECT vt0.c0, rt0.c1, rt0.c2, rt0.c0 FROM vt0, rt0 WHERE ((NOT (((vt0.c0) NOT NULL) COLLATE NOCASE))) GROUP BY vt0.c0, rt0.c1, rt0.c2, rt0.c0 UNION SELECT vt0.c0, rt0.c1, rt0.c2, rt0.c0 FROM vt0, rt0 WHERE (((((vt0.c0) NOT NULL) COLLATE NOCASE) ISNULL)) GROUP BY vt0.c0, rt0.c1, rt0.c2, rt0.c0;
SELECT ALL vt0.c0, rt0.c1, rt0.c2, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c1, rt0.c2, rt0.c0;
SELECT vt1.c0, vt1.c1, vt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON TYPEOF(DISTINCT ((rt0.c1)<<(rt0.c2))) INNER JOIN vt1 ON ((rt0.c0 IN ()) IN ()) GROUP BY vt1.c0, vt1.c1, vt0.c0;
SELECT vt1.c0, vt1.c1, vt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON TYPEOF(DISTINCT ((rt0.c1)<<(rt0.c2))) INNER JOIN vt1 ON ((rt0.c0 IN ()) IN ()) GROUP BY vt1.c0, vt1.c1, vt0.c0 HAVING MIN(((vt1.c0) BETWEEN (vt0.c0) AND (TOTAL(SUM(GROUP_CONCAT(AVG(rt0.c2))))))) UNION ALL SELECT ALL vt1.c0, vt1.c1, vt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON TYPEOF(DISTINCT ((rt0.c1)<<(rt0.c2))) INNER JOIN vt1 ON ((rt0.c0 IN ()) IN ()) GROUP BY vt1.c0, vt1.c1, vt0.c0 HAVING (NOT (MIN(((vt1.c0) BETWEEN (vt0.c0) AND (TOTAL(SUM(GROUP_CONCAT(AVG(rt0.c2))))))))) UNION ALL SELECT ALL vt1.c0, vt1.c1, vt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON TYPEOF(DISTINCT ((rt0.c1)<<(rt0.c2))) INNER JOIN vt1 ON ((rt0.c0 IN ()) IN ()) GROUP BY vt1.c0, vt1.c1, vt0.c0 HAVING ((MIN(((vt1.c0) BETWEEN (vt0.c0) AND (TOTAL(SUM(GROUP_CONCAT(AVG(rt0.c2)))))))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((0.9951342203723296)<=(rt0.c0 COLLATE BINARY))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((0.9951342203723296)<=(rt0.c0 COLLATE BINARY))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((0.9951342203723296)<=(rt0.c0 COLLATE BINARY))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c0 FROM vt1, vt0, rt0;
SELECT DISTINCT rt0.c0 FROM vt1, vt0, rt0 WHERE (vt1.c0) UNION SELECT DISTINCT rt0.c0 FROM vt1, vt0, rt0 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT rt0.c0 FROM vt1, vt0, rt0 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT rt0.c0 FROM vt1, vt0, rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, vt1.c0 FROM vt1 LEFT OUTER JOIN rt0 ON ((rt0.c0) BETWEEN ((~ (vt0.c0))) AND ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c2))))) RIGHT OUTER JOIN vt0 ON PRINTF(rt0.c1, CAST(vt1.c0 AS INTEGER), ((((((((vt1.c1)AND(vt1.c1)))AND(rt0.c0)))OR(vt0.c0)))AND(rt0.c2))) GROUP BY rt0.c1, rt0.c0, rt0.c2, vt1.c0;
SELECT vt1.c0, rt0.c2, vt0.c0, vt1.c1, rt0.c0, rt0.c1 FROM vt1, vt0, rt0 GROUP BY vt1.c0, rt0.c2, vt0.c0, vt1.c1, rt0.c0, rt0.c1;
SELECT vt1.c0, rt0.c2, vt0.c0, vt1.c1, rt0.c0, rt0.c1 FROM vt1, vt0, rt0 GROUP BY vt1.c0, rt0.c2, vt0.c0, vt1.c1, rt0.c0, rt0.c1 HAVING ((TOTAL(AVG(vt1.c0))) NOT BETWEEN (((AVG(MIN(AVG(SUM(vt0.c0)))))/(MAX(rt0.c0)))) AND (((COUNT(*)) NOT BETWEEN (rt0.c1) AND (rt0.c2)))) UNION ALL SELECT ALL vt1.c0, rt0.c2, vt0.c0, vt1.c1, rt0.c0, rt0.c1 FROM vt1, vt0, rt0 GROUP BY vt1.c0, rt0.c2, vt0.c0, vt1.c1, rt0.c0, rt0.c1 HAVING (NOT (((TOTAL(AVG(vt1.c0))) NOT BETWEEN (((AVG(MIN(AVG(SUM(vt0.c0)))))/(MAX(rt0.c0)))) AND (((COUNT(*)) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))) UNION ALL SELECT ALL vt1.c0, rt0.c2, vt0.c0, vt1.c1, rt0.c0, rt0.c1 FROM vt1, vt0, rt0 GROUP BY vt1.c0, rt0.c2, vt0.c0, vt1.c1, rt0.c0, rt0.c1 HAVING ((((TOTAL(AVG(vt1.c0))) NOT BETWEEN (((AVG(MIN(AVG(SUM(vt0.c0)))))/(MAX(rt0.c0)))) AND (((COUNT(*)) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) ISNULL);
SELECT vt0.c0, vt1.c1 FROM vt0, vt1, rt0;
SELECT ALL vt0.c0, vt1.c1 FROM vt0, vt1, rt0 WHERE (CAST((~ (vt1.c1)) AS REAL)) UNION ALL SELECT vt0.c0, vt1.c1 FROM vt0, vt1, rt0 WHERE ((NOT (CAST((~ (vt1.c1)) AS REAL)))) UNION ALL SELECT ALL vt0.c0, vt1.c1 FROM vt0, vt1, rt0 WHERE (((CAST((~ (vt1.c1)) AS REAL)) ISNULL));
SELECT vt0.c0, vt1.c1 FROM vt0, vt1, rt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((vt0.c0)LIKE(vt0.c0))) NOT NULL)) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0)LIKE(vt0.c0))) NOT NULL)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((vt0.c0)LIKE(vt0.c0))) NOT NULL)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT ALL vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 WHERE (NULL) GROUP BY vt0.c0, rt0.c2, rt0.c0, rt0.c1 UNION SELECT vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 WHERE ((NOT (NULL))) GROUP BY vt0.c0, rt0.c2, rt0.c0, rt0.c1 UNION SELECT vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 WHERE (((NULL) ISNULL)) GROUP BY vt0.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT ALL vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c1, rt0.c2, vt1.c0, vt0.c0 FROM vt1 INNER JOIN vt0 ON ((0.5213653200726899)==((rt0.c0 IN (rt0.c2)))) FULL OUTER JOIN rt0 ON x'2607467d' GROUP BY rt0.c1, rt0.c2, vt1.c0, vt0.c0;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (((((vt0.c0)||(vt0.c0)))>=((vt0.c0 IN ())))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((((vt0.c0)||(vt0.c0)))>=((vt0.c0 IN ())))))) UNION ALL SELECT * FROM vt0 WHERE (((((((vt0.c0)||(vt0.c0)))>=((vt0.c0 IN ())))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((rt0.c0) IS FALSE))AND(((((vt1.c0)OR(rt0.c2)))OR(rt0.c1)))))AND((NOT (rt0.c2)))) LEFT OUTER JOIN vt1 ON CAST((rt0.c1 IN ()) AS NUMERIC);
SELECT ALL vt1.c0, vt1.c1 FROM rt0, vt1 GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM rt0, vt1 WHERE (((CAST(vt1.c1 AS BLOB))OR(((vt1.c1) NOT NULL)))) GROUP BY vt1.c0, vt1.c1 UNION SELECT vt1.c0, vt1.c1 FROM rt0, vt1 WHERE ((NOT (((CAST(vt1.c1 AS BLOB))OR(((vt1.c1) NOT NULL)))))) GROUP BY vt1.c0, vt1.c1 UNION SELECT ALL vt1.c0, vt1.c1 FROM rt0, vt1 WHERE (((((CAST(vt1.c1 AS BLOB))OR(((vt1.c1) NOT NULL)))) ISNULL)) GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM rt0, vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL rt0.c1, vt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c0, rt0.c2;
SELECT ALL rt0.c1, vt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c0, rt0.c2 HAVING COUNT(UNLIKELY(DISTINCT rt0.c1)) UNION ALL SELECT rt0.c1, vt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c0, rt0.c2 HAVING (NOT (COUNT(UNLIKELY(DISTINCT rt0.c1)))) UNION ALL SELECT ALL rt0.c1, vt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c0, rt0.c2 HAVING ((COUNT(UNLIKELY(DISTINCT rt0.c1))) ISNULL);
SELECT ALL rt0.c1, vt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c0, rt0.c2;
SELECT ALL rt0.c1, vt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c0, rt0.c2 HAVING COUNT(UNLIKELY(DISTINCT rt0.c1)) UNION ALL SELECT rt0.c1, vt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c0, rt0.c2 HAVING (NOT (COUNT(UNLIKELY(DISTINCT rt0.c1)))) UNION ALL SELECT ALL rt0.c1, vt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c0, rt0.c2 HAVING ((COUNT(UNLIKELY(DISTINCT rt0.c1))) ISNULL);
SELECT ALL rt0.c1, vt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c0, rt0.c2;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (NULLIF((rt0.c1 IN ()), ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (NULLIF((rt0.c1 IN ()), ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((NULLIF((rt0.c1 IN ()), ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)))) ISNULL));
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM vt1, rt0, vt0;
SELECT DISTINCT * FROM vt1, rt0, vt0 WHERE (((rt0.c2 COLLATE NOCASE) BETWEEN (CASE rt0.c1  WHEN vt1.c1 THEN rt0.c2 END) AND (((rt0.c0) BETWEEN (vt0.c0) AND (vt1.c0))))) UNION SELECT DISTINCT * FROM vt1, rt0, vt0 WHERE ((NOT (((rt0.c2 COLLATE NOCASE) BETWEEN (CASE rt0.c1  WHEN vt1.c1 THEN rt0.c2 END) AND (((rt0.c0) BETWEEN (vt0.c0) AND (vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1, rt0, vt0 WHERE (((((rt0.c2 COLLATE NOCASE) BETWEEN (CASE rt0.c1  WHEN vt1.c1 THEN rt0.c2 END) AND (((rt0.c0) BETWEEN (vt0.c0) AND (vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1, rt0, vt0;
SELECT ALL vt1.c0, vt0.c0, vt1.c1 FROM vt1 CROSS JOIN vt0 ON ((vt0.c0) IS TRUE) COLLATE NOCASE GROUP BY vt1.c0, vt0.c0, vt1.c1;
SELECT ALL vt1.c0, vt0.c0, vt1.c1 FROM vt1 CROSS JOIN vt0 ON ((vt0.c0) IS TRUE) COLLATE NOCASE WHERE ((NOT ((~ (vt1.c1))))) GROUP BY vt1.c0, vt0.c0, vt1.c1 UNION SELECT vt1.c0, vt0.c0, vt1.c1 FROM vt1 CROSS JOIN vt0 ON ((vt0.c0) IS TRUE) COLLATE NOCASE WHERE ((NOT ((NOT ((~ (vt1.c1))))))) GROUP BY vt1.c0, vt0.c0, vt1.c1 UNION SELECT vt1.c0, vt0.c0, vt1.c1 FROM vt1 CROSS JOIN vt0 ON ((vt0.c0) IS TRUE) COLLATE NOCASE WHERE ((((NOT ((~ (vt1.c1))))) ISNULL)) GROUP BY vt1.c0, vt0.c0, vt1.c1;
SELECT ALL vt1.c0, vt0.c0, vt1.c1 FROM vt1 CROSS JOIN vt0 ON ((vt0.c0) IS TRUE) COLLATE NOCASE GROUP BY vt1.c0, vt0.c0, vt1.c1;
SELECT ALL rt0.c1, vt1.c0, vt0.c0, rt0.c2, rt0.c0, vt1.c1 FROM vt0, rt0, vt1 GROUP BY rt0.c1, vt1.c0, vt0.c0, rt0.c2, rt0.c0, vt1.c1;
SELECT ALL rt0.c1, vt1.c0, vt0.c0, rt0.c2, rt0.c0, vt1.c1 FROM vt0, rt0, vt1 GROUP BY rt0.c1, vt1.c0, vt0.c0, rt0.c2, rt0.c0, vt1.c1 HAVING ((((rt0.c2 COLLATE RTRIM)AND(SUM(COUNT(COUNT(SUM(vt0.c0)))))))OR(TOTAL(SUM(vt0.c0)))) UNION ALL SELECT rt0.c1, vt1.c0, vt0.c0, rt0.c2, rt0.c0, vt1.c1 FROM vt0, rt0, vt1 GROUP BY rt0.c1, vt1.c0, vt0.c0, rt0.c2, rt0.c0, vt1.c1 HAVING (NOT (((((rt0.c2 COLLATE RTRIM)AND(SUM(COUNT(COUNT(SUM(vt0.c0)))))))OR(TOTAL(SUM(vt0.c0)))))) UNION ALL SELECT ALL rt0.c1, vt1.c0, vt0.c0, rt0.c2, rt0.c0, vt1.c1 FROM vt0, rt0, vt1 GROUP BY rt0.c1, vt1.c0, vt0.c0, rt0.c2, rt0.c0, vt1.c1 HAVING ((((((rt0.c2 COLLATE RTRIM)AND(SUM(COUNT(COUNT(SUM(vt0.c0)))))))OR(TOTAL(SUM(vt0.c0))))) ISNULL);
SELECT rt0.c1 FROM vt0, vt1, rt0;
SELECT ALL rt0.c1 FROM vt0, vt1, rt0 WHERE (LIKELY(((rt0.c0)|(vt0.c0)))) UNION ALL SELECT rt0.c1 FROM vt0, vt1, rt0 WHERE ((NOT (LIKELY(((rt0.c0)|(vt0.c0)))))) UNION ALL SELECT ALL rt0.c1 FROM vt0, vt1, rt0 WHERE (((LIKELY(((rt0.c0)|(vt0.c0)))) ISNULL));
SELECT rt0.c1 FROM vt0, vt1, rt0;
SELECT DISTINCT rt0.c2 FROM rt0, vt1;
SELECT DISTINCT rt0.c2 FROM rt0, vt1 WHERE ((+ (((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))AND(vt1.c0))))) UNION SELECT DISTINCT rt0.c2 FROM rt0, vt1 WHERE ((NOT ((+ (((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))AND(vt1.c0))))))) UNION SELECT DISTINCT rt0.c2 FROM rt0, vt1 WHERE ((((+ (((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))AND(vt1.c0))))) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0, vt1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (0.13080598648151553) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (0.13080598648151553))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((0.13080598648151553) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING CASE WHEN AVG(COUNT(*)) THEN GROUP_CONCAT(SUM(NULL)) END UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING (NOT (CASE WHEN AVG(COUNT(*)) THEN GROUP_CONCAT(SUM(NULL)) END)) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING ((CASE WHEN AVG(COUNT(*)) THEN GROUP_CONCAT(SUM(NULL)) END) ISNULL);
SELECT * FROM rt0 NOT INDEXED;
SELECT * FROM rt0 WHERE (CAST(((rt0.c2)>>(rt0.c2)) AS INTEGER)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CAST(((rt0.c2)>>(rt0.c2)) AS INTEGER)))) UNION ALL SELECT * FROM rt0 WHERE (((CAST(((rt0.c2)>>(rt0.c2)) AS INTEGER)) ISNULL));
SELECT * FROM rt0 NOT INDEXED;
SELECT DISTINCT vt1.c1, rt0.c2, vt1.c0, rt0.c1, vt0.c0 FROM vt0, rt0, vt1;
SELECT DISTINCT vt1.c1, rt0.c2, vt1.c0, rt0.c1, vt0.c0 FROM vt0, rt0, vt1 WHERE ((~ (((vt1.c0) BETWEEN (vt0.c0) AND (''))))) UNION SELECT DISTINCT vt1.c1, rt0.c2, vt1.c0, rt0.c1, vt0.c0 FROM vt0, rt0, vt1 WHERE ((NOT ((~ (((vt1.c0) BETWEEN (vt0.c0) AND (''))))))) UNION SELECT DISTINCT vt1.c1, rt0.c2, vt1.c0, rt0.c1, vt0.c0 FROM vt0, rt0, vt1 WHERE ((((~ (((vt1.c0) BETWEEN (vt0.c0) AND (''))))) ISNULL));
SELECT DISTINCT vt1.c1, rt0.c2, vt1.c0, rt0.c1, vt0.c0 FROM vt0, rt0, vt1;
SELECT ALL rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0, vt0 WHERE (((rt0.c0 IN (rt0.c2, rt0.c1)) IN (((rt0.c1)IS NOT(rt0.c2)), load_extension(rt0.c1)))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0, vt0 WHERE ((NOT (((rt0.c0 IN (rt0.c2, rt0.c1)) IN (((rt0.c1)IS NOT(rt0.c2)), load_extension(rt0.c1)))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0, vt0 WHERE (((((rt0.c0 IN (rt0.c2, rt0.c1)) IN (((rt0.c1)IS NOT(rt0.c2)), load_extension(rt0.c1)))) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT vt1.c1, rt0.c0, rt0.c2, vt0.c0, rt0.c1, vt1.c0 FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c1 COLLATE RTRIM)LIKE(CASE WHEN rt0.c2 THEN rt0.c2 ELSE vt1.c0 END)) CROSS JOIN vt1 ON ((CAST(vt1.c0 AS TEXT))<=(((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1)))) GROUP BY vt1.c1, rt0.c0, rt0.c2, vt0.c0, rt0.c1, vt1.c0;
SELECT rt0.c1, rt0.c2, vt1.c0, rt0.c0 FROM vt0, rt0, vt1;
SELECT ALL rt0.c1, rt0.c2, vt1.c0, rt0.c0 FROM vt0, rt0, vt1 WHERE (CAST(((rt0.c0)IS NOT(rt0.c0)) AS TEXT)) UNION ALL SELECT ALL rt0.c1, rt0.c2, vt1.c0, rt0.c0 FROM vt0, rt0, vt1 WHERE ((NOT (CAST(((rt0.c0)IS NOT(rt0.c0)) AS TEXT)))) UNION ALL SELECT ALL rt0.c1, rt0.c2, vt1.c0, rt0.c0 FROM vt0, rt0, vt1 WHERE (((CAST(((rt0.c0)IS NOT(rt0.c0)) AS TEXT)) ISNULL));
SELECT rt0.c1, rt0.c2, vt1.c0, rt0.c0 FROM vt0, rt0, vt1;
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN vt1 ON ((((((0.37301331816992267)OR(vt0.c0)))OR(x''))) BETWEEN ((NOT (rt0.c1))) AND (((vt1.c0) IS FALSE))) LEFT OUTER JOIN rt0 ON ((CAST(vt1.c1 AS BLOB)) BETWEEN (STRFTIME(vt1.c1, rt0.c1, vt1.c0, vt1.c0, rt0.c2)) AND (x''));
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((0.2868580905955277) NOT NULL)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((0.2868580905955277) NOT NULL)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((0.2868580905955277) NOT NULL)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt1.c1, vt0.c0 FROM vt0 CROSS JOIN vt1 ON (((((vt1.c1, vt1.c1, NULL)) NOT BETWEEN ((vt1.c0, vt0.c0, vt1.c1)) AND ((vt0.c0, vt0.c0, vt1.c0)))) BETWEEN (vt1.c1) AND (((vt1.c0)%(vt0.c0)))) GROUP BY vt1.c1, vt0.c0;
SELECT vt1.c1, vt0.c0 FROM vt0 NOT INDEXED CROSS JOIN vt1 ON (((((vt1.c1, vt1.c1, NULL)) NOT BETWEEN ((vt1.c0, vt0.c0, vt1.c1)) AND ((vt0.c0, vt0.c0, vt1.c0)))) BETWEEN (vt1.c1) AND (((vt1.c0)%(vt0.c0)))) GROUP BY vt1.c1, vt0.c0 HAVING GROUP_CONCAT(vt0.c0) UNION ALL SELECT ALL vt1.c1, vt0.c0 FROM vt0 CROSS JOIN vt1 ON (((((vt1.c1, vt1.c1, NULL)) NOT BETWEEN ((vt1.c0, vt0.c0, vt1.c1)) AND ((vt0.c0, vt0.c0, vt1.c0)))) BETWEEN (vt1.c1) AND (((vt1.c0)%(vt0.c0)))) GROUP BY vt1.c1, vt0.c0 HAVING (NOT (GROUP_CONCAT(vt0.c0))) UNION ALL SELECT vt1.c1, vt0.c0 FROM vt0 CROSS JOIN vt1 ON (((((vt1.c1, vt1.c1, NULL)) NOT BETWEEN ((vt1.c0, vt0.c0, vt1.c1)) AND ((vt0.c0, vt0.c0, vt1.c0)))) BETWEEN (vt1.c1) AND (((vt1.c0)%(vt0.c0)))) GROUP BY vt1.c1, vt0.c0 HAVING ((GROUP_CONCAT(vt0.c0)) ISNULL);
SELECT vt1.c1, vt0.c0 FROM vt0 CROSS JOIN vt1 ON (((((vt1.c1, vt1.c1, NULL)) NOT BETWEEN ((vt1.c0, vt0.c0, vt1.c1)) AND ((vt0.c0, vt0.c0, vt1.c0)))) BETWEEN (vt1.c1) AND (((vt1.c0)%(vt0.c0)))) GROUP BY vt1.c1, vt0.c0;
SELECT vt1.c1, vt0.c0 FROM vt0 NOT INDEXED CROSS JOIN vt1 ON (((((vt1.c1, vt1.c1, NULL)) NOT BETWEEN ((vt1.c0, vt0.c0, vt1.c1)) AND ((vt0.c0, vt0.c0, vt1.c0)))) BETWEEN (vt1.c1) AND (((vt1.c0)%(vt0.c0)))) GROUP BY vt1.c1, vt0.c0 HAVING GROUP_CONCAT(vt0.c0) UNION ALL SELECT ALL vt1.c1, vt0.c0 FROM vt0 CROSS JOIN vt1 ON (((((vt1.c1, vt1.c1, NULL)) NOT BETWEEN ((vt1.c0, vt0.c0, vt1.c1)) AND ((vt0.c0, vt0.c0, vt1.c0)))) BETWEEN (vt1.c1) AND (((vt1.c0)%(vt0.c0)))) GROUP BY vt1.c1, vt0.c0 HAVING (NOT (GROUP_CONCAT(vt0.c0))) UNION ALL SELECT vt1.c1, vt0.c0 FROM vt0 CROSS JOIN vt1 ON (((((vt1.c1, vt1.c1, NULL)) NOT BETWEEN ((vt1.c0, vt0.c0, vt1.c1)) AND ((vt0.c0, vt0.c0, vt1.c0)))) BETWEEN (vt1.c1) AND (((vt1.c0)%(vt0.c0)))) GROUP BY vt1.c1, vt0.c0 HAVING ((GROUP_CONCAT(vt0.c0)) ISNULL);
SELECT vt1.c1, vt0.c0 FROM vt0 CROSS JOIN vt1 ON (((((vt1.c1, vt1.c1, NULL)) NOT BETWEEN ((vt1.c0, vt0.c0, vt1.c1)) AND ((vt0.c0, vt0.c0, vt1.c0)))) BETWEEN (vt1.c1) AND (((vt1.c0)%(vt0.c0)))) GROUP BY vt1.c1, vt0.c0;
SELECT ALL TOTAL(((((((vt0.c0)>=(vt0.c0)))AND(((rt0.c1)GLOB(rt0.c1)))))OR(((rt0.c2)|(vt1.c1))))) FROM vt0, rt0, vt1 ORDER BY vt0.c0  NULLS FIRST, ((vt0.c0)>(rt0.c2)) COLLATE BINARY ASC  NULLS LAST;
SELECT ALL vt0.c0, rt0.c0, vt1.c0, rt0.c1, vt1.c1, rt0.c2 FROM vt0, rt0 LEFT OUTER JOIN vt1 ON CASE CASE '572486295'  WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END  WHEN vt1.c1 THEN ((rt0.c0)%('89104721')) ELSE ((rt0.c0)IS(rt0.c1)) END;
SELECT ALL vt0.c0, rt0.c0, vt1.c0, rt0.c1, vt1.c1, rt0.c2 FROM vt0, rt0 LEFT OUTER JOIN vt1 ON CASE CASE '572486295'  WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END  WHEN vt1.c1 THEN ((rt0.c0)%('89104721')) ELSE ((rt0.c0)IS(rt0.c1)) END WHERE (0xffffffffe82f9c7c) UNION ALL SELECT ALL vt0.c0, rt0.c0, vt1.c0, rt0.c1, vt1.c1, rt0.c2 FROM vt0, rt0 LEFT OUTER JOIN vt1 ON CASE CASE '572486295'  WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END  WHEN vt1.c1 THEN ((rt0.c0)%('89104721')) ELSE ((rt0.c0)IS(rt0.c1)) END WHERE ((NOT (0xffffffffe82f9c7c))) UNION ALL SELECT ALL vt0.c0, rt0.c0, vt1.c0, rt0.c1, vt1.c1, rt0.c2 FROM vt0, rt0 LEFT OUTER JOIN vt1 ON CASE CASE '572486295'  WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END  WHEN vt1.c1 THEN ((rt0.c0)%('89104721')) ELSE ((rt0.c0)IS(rt0.c1)) END WHERE (((0Xffffffffe82f9c7c) ISNULL));
SELECT ALL vt0.c0, rt0.c0, vt1.c0, rt0.c1, vt1.c1, rt0.c2 FROM vt0, rt0 LEFT OUTER JOIN vt1 ON CASE CASE '572486295'  WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END  WHEN vt1.c1 THEN ((rt0.c0)%('89104721')) ELSE ((rt0.c0)IS(rt0.c1)) END;
SELECT DISTINCT rt0.c2, rt0.c1, vt1.c0, vt1.c1 FROM vt1, rt0;
SELECT DISTINCT rt0.c2, rt0.c1, vt1.c0, vt1.c1 FROM vt1, rt0 WHERE (ABS(vt1.c1) COLLATE BINARY) UNION SELECT DISTINCT rt0.c2, rt0.c1, vt1.c0, vt1.c1 FROM vt1, rt0 WHERE ((NOT (ABS(vt1.c1) COLLATE BINARY))) UNION SELECT DISTINCT rt0.c2, rt0.c1, vt1.c0, vt1.c1 FROM vt1, rt0 WHERE (((ABS(vt1.c1) COLLATE BINARY) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, vt1.c0, vt1.c1 FROM vt1, rt0;
SELECT ALL rt0.c0 FROM vt1 CROSS JOIN rt0 ON (('1609776735') IS FALSE) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM vt1 CROSS JOIN rt0 ON (('1609776735') IS FALSE) WHERE (UPPER(DISTINCT '-409206894')) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM vt1 CROSS JOIN rt0 ON (('1609776735') IS FALSE) WHERE ((NOT (UPPER(DISTINCT '-409206894')))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM vt1 CROSS JOIN rt0 ON (('1609776735') IS FALSE) WHERE (((UPPER(DISTINCT '-409206894')) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM vt1 CROSS JOIN rt0 ON (('1609776735') IS FALSE) GROUP BY rt0.c0;
SELECT ALL vt1.c0, rt0.c0 FROM vt1, vt0, rt0 GROUP BY vt1.c0, rt0.c0;
SELECT vt1.c0, rt0.c0 FROM vt1, vt0, rt0 GROUP BY vt1.c0, rt0.c0 HAVING AVG(COUNT(COUNT(*))) UNION ALL SELECT vt1.c0, rt0.c0 FROM vt1, vt0, rt0 GROUP BY vt1.c0, rt0.c0 HAVING (NOT (AVG(COUNT(COUNT(*))))) UNION ALL SELECT ALL vt1.c0, rt0.c0 FROM vt1, vt0, rt0 GROUP BY vt1.c0, rt0.c0 HAVING ((AVG(COUNT(COUNT(*)))) ISNULL);
SELECT vt1.c1, vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT ALL vt1.c1, vt1.c0, vt0.c0 FROM vt1 NOT INDEXED, vt0 WHERE (((((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)))AND((~ (vt0.c0)))))AND(((0.9830655052980722) IS TRUE)))) UNION ALL SELECT ALL vt1.c1, vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT (((((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)))AND((~ (vt0.c0)))))AND(((0.9830655052980722) IS TRUE)))))) UNION ALL SELECT ALL vt1.c1, vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((((((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)))AND((~ (vt0.c0)))))AND(((0.9830655052980722) IS TRUE)))) ISNULL));
SELECT vt1.c1, vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (CAST(((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1)) AS REAL)) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (CAST(((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1)) AS REAL)))) UNION SELECT DISTINCT * FROM vt1 WHERE (((CAST(((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1)) AS REAL)) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt0.c0, vt1.c0, rt0.c0 FROM vt0, vt1, rt0 GROUP BY vt0.c0, vt1.c0, rt0.c0;
SELECT vt0.c0, vt1.c0, rt0.c0 FROM vt0, vt1, rt0 WHERE (((((CAST(vt1.c0 AS TEXT))AND(((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c1)))))AND(((vt1.c1)&(rt0.c0))))) GROUP BY vt0.c0, vt1.c0, rt0.c0 UNION SELECT ALL vt0.c0, vt1.c0, rt0.c0 FROM vt0, vt1, rt0 WHERE ((NOT (((((CAST(vt1.c0 AS TEXT))AND(((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c1)))))AND(((vt1.c1)&(rt0.c0))))))) GROUP BY vt0.c0, vt1.c0, rt0.c0 UNION SELECT vt0.c0, vt1.c0, rt0.c0 FROM vt0, vt1, rt0 WHERE (((((((CAST(vt1.c0 AS TEXT))AND(((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c1)))))AND(((vt1.c1)&(rt0.c0))))) ISNULL)) GROUP BY vt0.c0, vt1.c0, rt0.c0;
SELECT vt0.c0, vt1.c0, rt0.c0 FROM vt0, vt1, rt0 GROUP BY vt0.c0, vt1.c0, rt0.c0;
SELECT vt1.c1 FROM rt0, vt0, vt1 GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM rt0, vt0, vt1 GROUP BY vt1.c1 HAVING GROUP_CONCAT(TOTAL(rt0.c1)) UNION ALL SELECT ALL vt1.c1 FROM rt0, vt0, vt1 GROUP BY vt1.c1 HAVING (NOT (GROUP_CONCAT(TOTAL(rt0.c1)))) UNION ALL SELECT vt1.c1 FROM rt0, vt0, vt1 GROUP BY vt1.c1 HAVING ((GROUP_CONCAT(TOTAL(rt0.c1))) ISNULL);
SELECT ALL TOTAL(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END COLLATE NOCASE) FROM vt0, vt1, rt0 ORDER BY ((((((((((((CAST(rt0.c0 AS BLOB))AND(((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)))OR(vt1.c1)))OR(rt0.c1)))))AND(((vt0.c0)+(NULL)))))OR(((rt0.c0)AND(rt0.c2)))))AND((~ (rt0.c1)))))OR(((vt1.c0) ISNULL))))AND(((vt0.c0)>>(vt1.c1)))), ((((CAST(rt0.c0 AS REAL))AND(0x3414d6cc)))AND(CASE WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 END)) ASC  NULLS FIRST;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt0.c0, vt1.c1, vt1.c0 FROM vt0, rt0, vt1;
SELECT rt0.c2, rt0.c0, rt0.c1, vt0.c0, vt1.c1, vt1.c0 FROM vt0, rt0, vt1 WHERE (ABS(DISTINCT ((0.2081065234277324)=(vt1.c1)))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt0.c0, vt1.c1, vt1.c0 FROM vt0, rt0, vt1 WHERE ((NOT (ABS(DISTINCT ((0.2081065234277324)=(vt1.c1)))))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1, vt0.c0, vt1.c1, vt1.c0 FROM vt0, rt0, vt1 WHERE (((ABS(DISTINCT ((0.2081065234277324)==(vt1.c1)))) ISNULL));
SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt0.c0, vt1.c1, vt1.c0 FROM vt0, rt0, vt1;
SELECT DISTINCT * FROM vt1 CROSS JOIN vt0 ON vt1.c0;
SELECT DISTINCT * FROM vt1 CROSS JOIN vt0 ON vt1.c0 WHERE (((vt1.c0) IS FALSE) COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt1 CROSS JOIN vt0 ON vt1.c0 WHERE ((NOT (((vt1.c0) IS FALSE) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt1 CROSS JOIN vt0 ON vt1.c0 WHERE (((((vt1.c0) IS FALSE) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt1 CROSS JOIN vt0 ON vt1.c0;
SELECT rt0.c2 FROM rt0 LEFT OUTER JOIN vt0 ON '뛭E≜)I]re' GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 LEFT OUTER JOIN vt0 ON '뛭E≜)I]re' WHERE (LIKELIHOOD(DISTINCT ((rt0.c0) IS TRUE), 0.08364452958091428)) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 LEFT OUTER JOIN vt0 ON '뛭E≜)I]re' WHERE ((NOT (LIKELIHOOD(DISTINCT ((rt0.c0) IS TRUE), 0.08364452958091428)))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 LEFT OUTER JOIN vt0 ON '뛭E≜)I]re' WHERE (((LIKELIHOOD(DISTINCT ((rt0.c0) IS TRUE), 0.08364452958091428)) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 LEFT OUTER JOIN vt0 ON '뛭E≜)I]re' GROUP BY rt0.c2;
SELECT ALL rt0.c1 FROM vt1, rt0, vt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM vt1, rt0, vt0 GROUP BY rt0.c1 HAVING MAX(SUM(vt1.c0)) UNION ALL SELECT ALL rt0.c1 FROM vt1, rt0, vt0 GROUP BY rt0.c1 HAVING (NOT (MAX(SUM(vt1.c0)))) UNION ALL SELECT rt0.c1 FROM vt1, rt0, vt0 GROUP BY rt0.c1 HAVING ((MAX(SUM(vt1.c0))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c0 AS BLOB)) NOTNULL)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((CAST(rt0.c0 AS BLOB)) NOTNULL)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((CAST(rt0.c0 AS BLOB)) NOTNULL)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT vt0.c0, rt0.c0 FROM vt0, rt0;
SELECT DISTINCT vt0.c0, rt0.c0 FROM vt0, rt0 WHERE ((((+ (rt0.c2)))IS(rt0.c1))) UNION SELECT DISTINCT vt0.c0, rt0.c0 FROM vt0, rt0 WHERE ((NOT ((((+ (rt0.c2)))IS(rt0.c1))))) UNION SELECT DISTINCT vt0.c0, rt0.c0 FROM vt0, rt0 WHERE ((((((+ (rt0.c2)))IS(rt0.c1))) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c0 FROM vt0, rt0;
SELECT vt1.c0, vt1.c1 FROM vt0 CROSS JOIN vt1 ON TRIM(((vt1.c1) IS FALSE), (((vt1.c0))<=(('v_')))) GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt0 CROSS JOIN vt1 ON TRIM(((vt1.c1) IS FALSE), (((vt1.c0))<=(('v_')))) WHERE (((((vt1.c1) BETWEEN ('?iQ]') AND (vt0.c0))) IS FALSE)) GROUP BY vt1.c0, vt1.c1 UNION SELECT vt1.c0, vt1.c1 FROM vt0 CROSS JOIN vt1 ON TRIM(((vt1.c1) IS FALSE), (((vt1.c0))<=(('v_')))) WHERE ((NOT (((((vt1.c1) BETWEEN ('?iQ]') AND (vt0.c0))) IS FALSE)))) GROUP BY vt1.c0, vt1.c1 UNION SELECT vt1.c0, vt1.c1 FROM vt0 CROSS JOIN vt1 ON TRIM(((vt1.c1) IS FALSE), (((vt1.c0))<=(('v_')))) WHERE (((((((vt1.c1) BETWEEN ('?iQ]') AND (vt0.c0))) IS FALSE)) ISNULL)) GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt0 CROSS JOIN vt1 ON TRIM(((vt1.c1) IS FALSE), (((vt1.c0))<=(('v_')))) GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (GROUP_CONCAT(SUM(SUM(vt1.c0))) IN ()) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((GROUP_CONCAT(SUM(SUM(vt1.c0))) IN ()))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((GROUP_CONCAT(SUM(SUM(vt1.c0))) IN ())) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (GROUP_CONCAT(SUM(SUM(vt1.c0))) IN ()) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((GROUP_CONCAT(SUM(SUM(vt1.c0))) IN ()))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((GROUP_CONCAT(SUM(SUM(vt1.c0))) IN ())) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c1, vt0.c0, vt1.c0, rt0.c2, vt1.c1 FROM vt0, vt1, rt0;
SELECT ALL rt0.c1, vt0.c0, vt1.c0, rt0.c2, vt1.c1 FROM vt0, vt1, rt0 WHERE (CASE (((vt0.c0)) NOT BETWEEN ((vt1.c1)) AND ((rt0.c2)))  WHEN rt0.c0 COLLATE BINARY THEN ((rt0.c1)%(0.365249354688316)) WHEN LOWER(rt0.c2) THEN CAST(rt0.c0 AS REAL) WHEN CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 END THEN ((vt1.c1)>(vt1.c0)) END) UNION ALL SELECT rt0.c1, vt0.c0, vt1.c0, rt0.c2, vt1.c1 FROM vt0, vt1, rt0 WHERE ((NOT (CASE (((vt0.c0)) NOT BETWEEN ((vt1.c1)) AND ((rt0.c2)))  WHEN rt0.c0 COLLATE BINARY THEN ((rt0.c1)%(0.365249354688316)) WHEN LOWER(rt0.c2) THEN CAST(rt0.c0 AS REAL) WHEN CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 END THEN ((vt1.c1)>(vt1.c0)) END))) UNION ALL SELECT rt0.c1, vt0.c0, vt1.c0, rt0.c2, vt1.c1 FROM vt0, vt1, rt0 WHERE (((CASE (((vt0.c0)) NOT BETWEEN ((vt1.c1)) AND ((rt0.c2)))  WHEN rt0.c0 COLLATE BINARY THEN ((rt0.c1)%(0.365249354688316)) WHEN LOWER(rt0.c2) THEN CAST(rt0.c0 AS REAL) WHEN CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 END THEN ((vt1.c1)>(vt1.c0)) END) ISNULL));
SELECT ALL rt0.c1, vt0.c0, vt1.c0, rt0.c2, vt1.c1 FROM vt0, vt1, rt0;
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt1 ON ((CAST(vt1.c1 AS REAL))<((vt0.c0 IN ()))) RIGHT OUTER JOIN vt0 ON CASE WHEN ((rt0.c2) NOT BETWEEN (vt0.c0) AND (vt1.c1)) THEN vt1.c0 COLLATE BINARY END;
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt1 ON ((CAST(vt1.c1 AS REAL))<((vt0.c0 IN ()))) RIGHT OUTER JOIN vt0 ON CASE WHEN ((rt0.c2) NOT BETWEEN (vt0.c0) AND (vt1.c1)) THEN vt1.c0 COLLATE BINARY END WHERE ((((((((((((vt0.c0)OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c2)))OR(vt1.c0))))>=((((rt0.c0) NOTNULL))))) UNION SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt1 ON ((CAST(vt1.c1 AS REAL))<((vt0.c0 IN ()))) RIGHT OUTER JOIN vt0 ON CASE WHEN ((rt0.c2) NOT BETWEEN (vt0.c0) AND (vt1.c1)) THEN vt1.c0 COLLATE BINARY END WHERE ((NOT ((((((((((((vt0.c0)OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c2)))OR(vt1.c0))))>=((((rt0.c0) NOTNULL))))))) UNION SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt1 ON ((CAST(vt1.c1 AS REAL))<((vt0.c0 IN ()))) RIGHT OUTER JOIN vt0 ON CASE WHEN ((rt0.c2) NOT BETWEEN (vt0.c0) AND (vt1.c1)) THEN vt1.c0 COLLATE BINARY END WHERE ((((((((((((((vt0.c0)OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c2)))OR(vt1.c0))))>=((((rt0.c0) NOTNULL))))) ISNULL));
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt1 ON ((CAST(vt1.c1 AS REAL))<((vt0.c0 IN ()))) RIGHT OUTER JOIN vt0 ON CASE WHEN ((rt0.c2) NOT BETWEEN (vt0.c0) AND (vt1.c1)) THEN vt1.c0 COLLATE BINARY END;
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt1 WHERE (vt1.c1) GROUP BY vt1.c0, vt1.c1 UNION SELECT ALL vt1.c0, vt1.c1 FROM vt1 WHERE ((NOT (vt1.c1))) GROUP BY vt1.c0, vt1.c1 UNION SELECT vt1.c0, vt1.c1 FROM vt1 WHERE (((vt1.c1) ISNULL)) GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt1.c1, vt0.c0;
SELECT ALL vt1.c0, vt1.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt1.c1, vt0.c0 HAVING COUNT(((((vt1.c0)OR(vt1.c0)))OR(COUNT(*)))) UNION ALL SELECT vt1.c0, vt1.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt1.c1, vt0.c0 HAVING (NOT (COUNT(((((vt1.c0)OR(vt1.c0)))OR(COUNT(*)))))) UNION ALL SELECT vt1.c0, vt1.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt1.c1, vt0.c0 HAVING ((COUNT(((((vt1.c0)OR(vt1.c0)))OR(COUNT(*))))) ISNULL);
SELECT * FROM rt0, vt0;
SELECT * FROM rt0, vt0 WHERE ((NOT (TRIM(rt0.c2)))) UNION ALL SELECT * FROM rt0, vt0 WHERE ((NOT ((NOT (TRIM(rt0.c2)))))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((((NOT (TRIM(rt0.c2)))) ISNULL));
SELECT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c2)+(rt0.c1))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c2)+(rt0.c1))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c2)+(rt0.c1))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) ISNULL)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) ISNULL)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) ISNULL)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, vt1 NOT INDEXED GROUP BY vt0.c0 HAVING ((COUNT(*)) NOT BETWEEN (MIN(vt1.c0)) AND (AVG(MAX(AVG(MAX(COUNT(MIN(SUM(AVG(TOTAL(vt1.c0))))))))))) UNION ALL SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING (NOT (((COUNT(*)) NOT BETWEEN (MIN(vt1.c0)) AND (AVG(MAX(AVG(MAX(COUNT(MIN(SUM(AVG(TOTAL(vt1.c0))))))))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING ((((COUNT(*)) NOT BETWEEN (MIN(vt1.c0)) AND (AVG(MAX(AVG(MAX(COUNT(MIN(SUM(AVG(TOTAL(vt1.c0)))))))))))) ISNULL);
SELECT vt0.c0, vt1.c0, vt1.c1 FROM vt0, vt1 NOT INDEXED;
SELECT vt0.c0, vt1.c0, vt1.c1 FROM vt0, vt1 WHERE (x'074a') UNION ALL SELECT ALL vt0.c0, vt1.c0, vt1.c1 FROM vt0, vt1 WHERE ((NOT (x'074a'))) UNION ALL SELECT vt0.c0, vt1.c0, vt1.c1 FROM vt0, vt1 WHERE (((x'074a') ISNULL));
SELECT vt0.c0, vt1.c0, vt1.c1 FROM vt0, vt1 NOT INDEXED;
SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON ((+ (1.560535213E9)) IN ()) FULL OUTER JOIN rt0 ON ((0.0) BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE BINARY;
SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON ((+ (1.560535213E9)) IN ()) FULL OUTER JOIN rt0 ON ((0.0) BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE BINARY WHERE (((0.571062264501521) IS FALSE)) UNION SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON ((+ (1.560535213E9)) IN ()) FULL OUTER JOIN rt0 ON ((0.0) BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE BINARY WHERE ((NOT (((0.571062264501521) IS FALSE)))) UNION SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON ((+ (1.560535213E9)) IN ()) FULL OUTER JOIN rt0 ON ((0.0) BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE BINARY WHERE (((((0.571062264501521) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON ((+ (1.560535213E9)) IN ()) FULL OUTER JOIN rt0 ON ((0.0) BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE BINARY;
SELECT rt0.c1, rt0.c2, vt1.c0, vt1.c1 FROM vt0 FULL OUTER JOIN rt0 ON LIKELY(NULL) INNER JOIN vt1 ON (((vt1.c1, vt1.c0, '', x'', rt0.c2)) NOT BETWEEN ((rt0.c1, vt1.c0, rt0.c0, vt1.c0, rt0.c0)) AND ((rt0.c2, vt0.c0, rt0.c1, vt1.c0, vt1.c0))) COLLATE NOCASE GROUP BY rt0.c1, rt0.c2, vt1.c0, vt1.c1;
SELECT ALL rt0.c1, rt0.c2, vt1.c0, vt1.c1 FROM vt0 FULL OUTER JOIN rt0 ON LIKELY(NULL) INNER JOIN vt1 ON (((vt1.c1, vt1.c0, '', x'', rt0.c2)) NOT BETWEEN ((rt0.c1, vt1.c0, rt0.c0, vt1.c0, rt0.c0)) AND ((rt0.c2, vt0.c0, rt0.c1, vt1.c0, vt1.c0))) COLLATE NOCASE WHERE (CAST((vt1.c0 IN ()) AS INTEGER)) GROUP BY rt0.c1, rt0.c2, vt1.c0, vt1.c1 UNION SELECT ALL rt0.c1, rt0.c2, vt1.c0, vt1.c1 FROM vt0 FULL OUTER JOIN rt0 ON LIKELY(NULL) INNER JOIN vt1 ON (((vt1.c1, vt1.c0, '', x'', rt0.c2)) NOT BETWEEN ((rt0.c1, vt1.c0, rt0.c0, vt1.c0, rt0.c0)) AND ((rt0.c2, vt0.c0, rt0.c1, vt1.c0, vt1.c0))) COLLATE NOCASE WHERE ((NOT (CAST((vt1.c0 IN ()) AS INTEGER)))) GROUP BY rt0.c1, rt0.c2, vt1.c0, vt1.c1 UNION SELECT rt0.c1, rt0.c2, vt1.c0, vt1.c1 FROM vt0 FULL OUTER JOIN rt0 ON LIKELY(NULL) INNER JOIN vt1 ON (((vt1.c1, vt1.c0, '', x'', rt0.c2)) NOT BETWEEN ((rt0.c1, vt1.c0, rt0.c0, vt1.c0, rt0.c0)) AND ((rt0.c2, vt0.c0, rt0.c1, vt1.c0, vt1.c0))) COLLATE NOCASE WHERE (((CAST((vt1.c0 IN ()) AS INTEGER)) ISNULL)) GROUP BY rt0.c1, rt0.c2, vt1.c0, vt1.c1;
SELECT rt0.c1, rt0.c2, vt1.c0, vt1.c1 FROM vt0 FULL OUTER JOIN rt0 ON LIKELY(NULL) INNER JOIN vt1 ON (((vt1.c1, vt1.c0, '', x'', rt0.c2)) NOT BETWEEN ((rt0.c1, vt1.c0, rt0.c0, vt1.c0, rt0.c0)) AND ((rt0.c2, vt0.c0, rt0.c1, vt1.c0, vt1.c0))) COLLATE NOCASE GROUP BY rt0.c1, rt0.c2, vt1.c0, vt1.c1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(COUNT(COUNT(COUNT(0.13080598648151553)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(COUNT(COUNT(COUNT(0.13080598648151553)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(COUNT(COUNT(COUNT(0.13080598648151553))))) ISNULL);
SELECT vt1.c1 FROM vt1;
SELECT vt1.c1 FROM vt1 WHERE ('쯫flZ~(F1X' COLLATE BINARY) UNION ALL SELECT ALL vt1.c1 FROM vt1 WHERE ((NOT ('쯫flZ~(F1X' COLLATE BINARY))) UNION ALL SELECT vt1.c1 FROM vt1 WHERE ((('쯫flZ~(F1X' COLLATE BINARY) ISNULL));
SELECT vt1.c1 FROM vt1;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE BINARY) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((vt0.c0 IN ()) COLLATE BINARY))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((vt0.c0 IN ()) COLLATE BINARY) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0) ISNULL))<(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) ISNULL))<(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c0) ISNULL))<(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (TOTAL(COUNT(AVG(vt1.c1))))) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING (NOT ((NOT (TOTAL(COUNT(AVG(vt1.c1))))))) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING (((NOT (TOTAL(COUNT(AVG(vt1.c1)))))) ISNULL);
SELECT rt0.c2, rt0.c1, vt1.c1, vt1.c0, vt0.c0, rt0.c0 FROM vt1, vt0, rt0;
SELECT ALL rt0.c2, rt0.c1, vt1.c1, vt1.c0, vt0.c0, rt0.c0 FROM vt1, vt0, rt0 WHERE ((('}AN5]U?w뢴') BETWEEN (((((((((rt0.c1)AND(rt0.c1)))OR(0Xffffffffe635eed8)))AND(rt0.c2)))OR(vt0.c0))) AND (0.3138747943429233))) UNION ALL SELECT ALL rt0.c2, rt0.c1, vt1.c1, vt1.c0, vt0.c0, rt0.c0 FROM vt1, vt0, rt0 WHERE ((NOT ((('}AN5]U?w뢴') BETWEEN (((((((((rt0.c1)AND(rt0.c1)))OR(0Xffffffffe635eed8)))AND(rt0.c2)))OR(vt0.c0))) AND (0.3138747943429233))))) UNION ALL SELECT rt0.c2, rt0.c1, vt1.c1, vt1.c0, vt0.c0, rt0.c0 FROM vt1, vt0, rt0 WHERE ((((('}AN5]U?w뢴') BETWEEN (((((((((rt0.c1)AND(rt0.c1)))OR(0xffffffffe635eed8)))AND(rt0.c2)))OR(vt0.c0))) AND (0.3138747943429233))) ISNULL));
SELECT rt0.c2, rt0.c1, vt1.c1, vt1.c0, vt0.c0, rt0.c0 FROM vt1, vt0, rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0 WHERE ((((((+ (vt0.c0)))OR((rt0.c0 IN (rt0.c0, rt0.c2)))))OR(0.12319873695370132))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0 WHERE ((NOT ((((((+ (vt0.c0)))OR((rt0.c0 IN (rt0.c0, rt0.c2)))))OR(0.12319873695370132))))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0 WHERE ((((((((+ (vt0.c0)))OR((rt0.c0 IN (rt0.c0, rt0.c2)))))OR(0.12319873695370132))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0;
SELECT vt1.c0, rt0.c2, vt1.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2, vt1.c1;
SELECT vt1.c0, rt0.c2, vt1.c1 FROM vt1, rt0 WHERE (CASE ((rt0.c1)*(rt0.c1))  WHEN (+ (vt1.c1)) THEN ((((((((rt0.c1)AND(x'')))OR(rt0.c2)))AND(rt0.c2)))OR(vt1.c0)) WHEN ((rt0.c1)||(vt1.c1)) THEN CASE WHEN rt0.c2 THEN rt0.c0 END WHEN ((rt0.c0)<=(vt1.c0)) THEN '700473068' END) GROUP BY vt1.c0, rt0.c2, vt1.c1 UNION SELECT vt1.c0, rt0.c2, vt1.c1 FROM vt1, rt0 WHERE ((NOT (CASE ((rt0.c1)*(rt0.c1))  WHEN (+ (vt1.c1)) THEN ((((((((rt0.c1)AND(x'')))OR(rt0.c2)))AND(rt0.c2)))OR(vt1.c0)) WHEN ((rt0.c1)||(vt1.c1)) THEN CASE WHEN rt0.c2 THEN rt0.c0 END WHEN ((rt0.c0)<=(vt1.c0)) THEN '700473068' END))) GROUP BY vt1.c0, rt0.c2, vt1.c1 UNION SELECT vt1.c0, rt0.c2, vt1.c1 FROM vt1, rt0 WHERE (((CASE ((rt0.c1)*(rt0.c1))  WHEN (+ (vt1.c1)) THEN ((((((((rt0.c1)AND(x'')))OR(rt0.c2)))AND(rt0.c2)))OR(vt1.c0)) WHEN ((rt0.c1)||(vt1.c1)) THEN CASE WHEN rt0.c2 THEN rt0.c0 END WHEN ((rt0.c0)<=(vt1.c0)) THEN '700473068' END) ISNULL)) GROUP BY vt1.c0, rt0.c2, vt1.c1;
SELECT vt1.c0, rt0.c2, vt1.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2, vt1.c1;
SELECT rt0.c0 FROM rt0, vt1, vt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, vt1, vt0 GROUP BY rt0.c0 HAVING ((AVG(MIN(vt1.c0))) BETWEEN (CAST(MIN(AVG(SUM(SUM(AVG(vt1.c0))))) AS TEXT)) AND (MIN(rt0.c2))) UNION ALL SELECT rt0.c0 FROM rt0, vt1, vt0 GROUP BY rt0.c0 HAVING (NOT (((AVG(MIN(vt1.c0))) BETWEEN (CAST(MIN(AVG(SUM(SUM(AVG(vt1.c0))))) AS TEXT)) AND (MIN(rt0.c2))))) UNION ALL SELECT rt0.c0 FROM rt0, vt1, vt0 GROUP BY rt0.c0 HAVING ((((AVG(MIN(vt1.c0))) BETWEEN (CAST(MIN(AVG(SUM(SUM(AVG(vt1.c0))))) AS TEXT)) AND (MIN(rt0.c2)))) ISNULL);
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE (vt1.c1) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (vt1.c1))) UNION ALL SELECT * FROM vt1 WHERE (((vt1.c1) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (LIKELY(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (LIKELY(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((LIKELY(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, vt1 WHERE (NULL) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt0, vt1 WHERE ((NOT (NULL))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt0, vt1 WHERE (((NULL) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING GROUP_CONCAT(((AVG(AVG(TOTAL(rt0.c2)))) NOTNULL)) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (GROUP_CONCAT(((AVG(AVG(TOTAL(rt0.c2)))) NOTNULL)))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((GROUP_CONCAT(((AVG(AVG(TOTAL(rt0.c2)))) NOTNULL))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((((NOT (vt0.c0)))LIKE(vt0.c0 COLLATE RTRIM))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((((NOT (vt0.c0)))LIKE(vt0.c0 COLLATE RTRIM))))) UNION ALL SELECT * FROM vt0 WHERE ((((((NOT (vt0.c0)))LIKE(vt0.c0 COLLATE RTRIM))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0, vt1;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0, vt1 WHERE (((((rt0.c2) ISNULL)) NOTNULL)) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0, vt1 WHERE ((NOT (((((rt0.c2) ISNULL)) NOTNULL)))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0, vt1 WHERE (((((((rt0.c2) ISNULL)) NOTNULL)) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0, vt1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1, vt0 WHERE (((((vt1.c1)*(vt1.c0))) NOT NULL)) GROUP BY vt1.c0, vt1.c1 UNION SELECT ALL vt1.c0, vt1.c1 FROM vt1, vt0 WHERE ((NOT (((((vt1.c1)*(vt1.c0))) NOT NULL)))) GROUP BY vt1.c0, vt1.c1 UNION SELECT vt1.c0, vt1.c1 FROM vt1, vt0 WHERE (((((((vt1.c1)*(vt1.c0))) NOT NULL)) ISNULL)) GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt1.c1;
SELECT ALL rt0.c0, rt0.c1, vt1.c0, rt0.c2 FROM rt0 LEFT OUTER JOIN vt1 ON UPPER(DISTINCT (((rt0.c1, rt0.c1, rt0.c2))<=((vt1.c0, rt0.c2, vt1.c0)))) GROUP BY rt0.c0, rt0.c1, vt1.c0, rt0.c2;
SELECT rt0.c0, rt0.c1, vt1.c0, rt0.c2 FROM rt0 LEFT OUTER JOIN vt1 ON UPPER(DISTINCT (((rt0.c1, rt0.c1, rt0.c2))<=((vt1.c0, rt0.c2, vt1.c0)))) GROUP BY rt0.c0, rt0.c1, vt1.c0, rt0.c2 HAVING GROUP_CONCAT(((COUNT(vt1.c1))IS(COUNT(*)))) UNION ALL SELECT ALL rt0.c0, rt0.c1, vt1.c0, rt0.c2 FROM rt0 LEFT OUTER JOIN vt1 ON UPPER(DISTINCT (((rt0.c1, rt0.c1, rt0.c2))<=((vt1.c0, rt0.c2, vt1.c0)))) GROUP BY rt0.c0, rt0.c1, vt1.c0, rt0.c2 HAVING (NOT (GROUP_CONCAT(((COUNT(vt1.c1))IS(COUNT(*)))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, vt1.c0, rt0.c2 FROM rt0 LEFT OUTER JOIN vt1 ON UPPER(DISTINCT (((rt0.c1, rt0.c1, rt0.c2))<=((vt1.c0, rt0.c2, vt1.c0)))) GROUP BY rt0.c0, rt0.c1, vt1.c0, rt0.c2 HAVING ((GROUP_CONCAT(((COUNT(vt1.c1))IS(COUNT(*))))) ISNULL);
SELECT ALL rt0.c0 FROM rt0;
SELECT rt0.c0 FROM rt0 WHERE (DATE(rt0.c2, rt0.c2, rt0.c0) COLLATE NOCASE) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (DATE(rt0.c2, rt0.c2, rt0.c0) COLLATE NOCASE))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE (((DATE(rt0.c2, rt0.c2, rt0.c0) COLLATE NOCASE) ISNULL));
SELECT ALL rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, vt0.c0, vt1.c1 FROM vt0, vt1, rt0;
SELECT DISTINCT rt0.c1, vt0.c0, vt1.c1 FROM vt0, vt1, rt0 WHERE (0.03143356923167151) UNION SELECT DISTINCT rt0.c1, vt0.c0, vt1.c1 FROM vt0, vt1, rt0 WHERE ((NOT (0.03143356923167151))) UNION SELECT DISTINCT rt0.c1, vt0.c0, vt1.c1 FROM vt0, vt1, rt0 WHERE (((0.03143356923167151) ISNULL));
SELECT DISTINCT rt0.c1, vt0.c0, vt1.c1 FROM vt0, vt1, rt0;
SELECT vt0.c0, rt0.c1, rt0.c2, rt0.c0 FROM vt0, vt1 NATURAL JOIN rt0 GROUP BY vt0.c0, rt0.c1, rt0.c2, rt0.c0;
SELECT ALL vt0.c0, rt0.c1, rt0.c2, rt0.c0 FROM vt0, vt1 NATURAL JOIN rt0 WHERE (((((((rt0.c1)>>(0Xffffffff8c294204)))OR(((0.5404081684676592) IS TRUE))))AND(rt0.c0))) GROUP BY vt0.c0, rt0.c1, rt0.c2, rt0.c0 UNION SELECT vt0.c0, rt0.c1, rt0.c2, rt0.c0 FROM vt0, vt1 NATURAL JOIN rt0 WHERE ((NOT (((((((rt0.c1)>>(0xffffffff8c294204)))OR(((0.5404081684676592) IS TRUE))))AND(rt0.c0))))) GROUP BY vt0.c0, rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL vt0.c0, rt0.c1, rt0.c2, rt0.c0 FROM vt0, vt1 NATURAL JOIN rt0 WHERE (((((((((rt0.c1)>>(0Xffffffff8c294204)))OR(((0.5404081684676592) IS TRUE))))AND(rt0.c0))) ISNULL)) GROUP BY vt0.c0, rt0.c1, rt0.c2, rt0.c0;
SELECT vt0.c0, rt0.c1, rt0.c2, rt0.c0 FROM vt0, vt1 NATURAL JOIN rt0 GROUP BY vt0.c0, rt0.c1, rt0.c2, rt0.c0;
SELECT ALL vt1.c0, rt0.c2, vt0.c0, rt0.c1 FROM vt0, rt0, vt1 GROUP BY vt1.c0, rt0.c2, vt0.c0, rt0.c1;
SELECT ALL vt1.c0, rt0.c2, vt0.c0, rt0.c1 FROM vt0, rt0, vt1 GROUP BY vt1.c0, rt0.c2, vt0.c0, rt0.c1 HAVING ((((((((vt1.c1)AND(((((vt1.c0)AND(TOTAL(MIN(vt0.c0)))))OR(x'a7cd')))))OR('-2072357000')))AND((MAX(rt0.c2) IN ()))))AND(MAX(GROUP_CONCAT(TOTAL(COUNT(x'b995')))))) UNION ALL SELECT ALL vt1.c0, rt0.c2, vt0.c0, rt0.c1 FROM vt0, rt0, vt1 GROUP BY vt1.c0, rt0.c2, vt0.c0, rt0.c1 HAVING (NOT (((((((((vt1.c1)AND(((((vt1.c0)AND(TOTAL(MIN(vt0.c0)))))OR(x'a7cd')))))OR('-2072357000')))AND((MAX(rt0.c2) IN ()))))AND(MAX(GROUP_CONCAT(TOTAL(COUNT(x'b995')))))))) UNION ALL SELECT ALL vt1.c0, rt0.c2, vt0.c0, rt0.c1 FROM vt0, rt0, vt1 GROUP BY vt1.c0, rt0.c2, vt0.c0, rt0.c1 HAVING ((((((((((vt1.c1)AND(((((vt1.c0)AND(TOTAL(MIN(vt0.c0)))))OR(x'a7cd')))))OR('-2072357000')))AND((MAX(rt0.c2) IN ()))))AND(MAX(GROUP_CONCAT(TOTAL(COUNT(x'b995'))))))) ISNULL);
SELECT ALL vt1.c0, rt0.c2, vt0.c0, rt0.c1 FROM vt0, rt0, vt1 GROUP BY vt1.c0, rt0.c2, vt0.c0, rt0.c1;
SELECT ALL vt1.c0, rt0.c2, vt0.c0, rt0.c1 FROM vt0, rt0, vt1 GROUP BY vt1.c0, rt0.c2, vt0.c0, rt0.c1 HAVING ((((((((vt1.c1)AND(((((vt1.c0)AND(TOTAL(MIN(vt0.c0)))))OR(x'a7cd')))))OR('-2072357000')))AND((MAX(rt0.c2) IN ()))))AND(MAX(GROUP_CONCAT(TOTAL(COUNT(x'b995')))))) UNION ALL SELECT ALL vt1.c0, rt0.c2, vt0.c0, rt0.c1 FROM vt0, rt0, vt1 GROUP BY vt1.c0, rt0.c2, vt0.c0, rt0.c1 HAVING (NOT (((((((((vt1.c1)AND(((((vt1.c0)AND(TOTAL(MIN(vt0.c0)))))OR(x'a7cd')))))OR('-2072357000')))AND((MAX(rt0.c2) IN ()))))AND(MAX(GROUP_CONCAT(TOTAL(COUNT(x'b995')))))))) UNION ALL SELECT ALL vt1.c0, rt0.c2, vt0.c0, rt0.c1 FROM vt0, rt0, vt1 GROUP BY vt1.c0, rt0.c2, vt0.c0, rt0.c1 HAVING ((((((((((vt1.c1)AND(((((vt1.c0)AND(TOTAL(MIN(vt0.c0)))))OR(x'a7cd')))))OR('-2072357000')))AND((MAX(rt0.c2) IN ()))))AND(MAX(GROUP_CONCAT(TOTAL(COUNT(x'b995'))))))) ISNULL);
SELECT ALL vt1.c0, rt0.c2, vt0.c0, rt0.c1 FROM vt0, rt0, vt1 GROUP BY vt1.c0, rt0.c2, vt0.c0, rt0.c1;
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0)-(vt0.c0))) BETWEEN (UPPER(vt0.c0)) AND (((((vt0.c0)OR(0.19442427764481185)))OR(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0)-(vt0.c0))) BETWEEN (UPPER(vt0.c0)) AND (((((vt0.c0)OR(0.19442427764481185)))OR(vt0.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c0)-(vt0.c0))) BETWEEN (UPPER(vt0.c0)) AND (((((vt0.c0)OR(0.19442427764481185)))OR(vt0.c0))))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CAST(vt0.c0 COLLATE BINARY AS INTEGER)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CAST(vt0.c0 COLLATE BINARY AS INTEGER)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CAST(vt0.c0 COLLATE BINARY AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL rt0.c2, vt1.c0, rt0.c1 FROM vt1, rt0 FULL OUTER JOIN vt0 ON (+ (vt1.c0)) COLLATE BINARY COLLATE RTRIM GROUP BY rt0.c2, vt1.c0, rt0.c1;
SELECT ALL rt0.c2, vt1.c0, rt0.c1 FROM vt1, rt0 FULL OUTER JOIN vt0 ON (+ (vt1.c0)) COLLATE BINARY COLLATE RTRIM WHERE (TRIM(DISTINCT rt0.c0 COLLATE NOCASE, rt0.c2 COLLATE NOCASE)) GROUP BY rt0.c2, vt1.c0, rt0.c1 UNION SELECT ALL rt0.c2, vt1.c0, rt0.c1 FROM vt1, rt0 FULL OUTER JOIN vt0 ON (+ (vt1.c0)) COLLATE BINARY COLLATE RTRIM WHERE ((NOT (TRIM(DISTINCT rt0.c0 COLLATE NOCASE, rt0.c2 COLLATE NOCASE)))) GROUP BY rt0.c2, vt1.c0, rt0.c1 UNION SELECT rt0.c2, vt1.c0, rt0.c1 FROM vt1, rt0 FULL OUTER JOIN vt0 ON (+ (vt1.c0)) COLLATE BINARY COLLATE RTRIM WHERE (((TRIM(DISTINCT rt0.c0 COLLATE NOCASE, rt0.c2 COLLATE NOCASE)) ISNULL)) GROUP BY rt0.c2, vt1.c0, rt0.c1;
SELECT ALL rt0.c2, vt1.c0, rt0.c1 FROM vt1, rt0 FULL OUTER JOIN vt0 ON (+ (vt1.c0)) COLLATE BINARY COLLATE RTRIM GROUP BY rt0.c2, vt1.c0, rt0.c1;
SELECT vt1.c0, rt0.c0, vt1.c1, rt0.c2, vt0.c0, rt0.c1 FROM vt1, vt0, rt0 GROUP BY vt1.c0, rt0.c0, vt1.c1, rt0.c2, vt0.c0, rt0.c1;
SELECT ALL vt1.c0, rt0.c0, vt1.c1, rt0.c2, vt0.c0, rt0.c1 FROM vt1, vt0, rt0 GROUP BY vt1.c0, rt0.c0, vt1.c1, rt0.c2, vt0.c0, rt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0, rt0.c0, vt1.c1, rt0.c2, vt0.c0, rt0.c1 FROM vt1, vt0, rt0 GROUP BY vt1.c0, rt0.c0, vt1.c1, rt0.c2, vt0.c0, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0, rt0.c0, vt1.c1, rt0.c2, vt0.c0, rt0.c1 FROM vt1, vt0, rt0 GROUP BY vt1.c0, rt0.c0, vt1.c1, rt0.c2, vt0.c0, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0, rt0.c0, vt1.c1, rt0.c2, vt0.c0, rt0.c1 FROM vt1, vt0, rt0 GROUP BY vt1.c0, rt0.c0, vt1.c1, rt0.c2, vt0.c0, rt0.c1;
SELECT ALL vt1.c0, rt0.c0, vt1.c1, rt0.c2, vt0.c0, rt0.c1 FROM vt1, vt0, rt0 GROUP BY vt1.c0, rt0.c0, vt1.c1, rt0.c2, vt0.c0, rt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0, rt0.c0, vt1.c1, rt0.c2, vt0.c0, rt0.c1 FROM vt1, vt0, rt0 GROUP BY vt1.c0, rt0.c0, vt1.c1, rt0.c2, vt0.c0, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0, rt0.c0, vt1.c1, rt0.c2, vt0.c0, rt0.c1 FROM vt1, vt0, rt0 GROUP BY vt1.c0, rt0.c0, vt1.c1, rt0.c2, vt0.c0, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0, rt0.c0, vt1.c1, rt0.c2, vt0.c0, rt0.c1 FROM vt1, vt0, rt0 GROUP BY vt1.c0, rt0.c0, vt1.c1, rt0.c2, vt0.c0, rt0.c1;
SELECT ALL vt1.c1 FROM vt1, rt0;
SELECT vt1.c1 FROM vt1, rt0 WHERE (((((rt0.c1 COLLATE NOCASE)AND(rt0.c0 COLLATE BINARY)))AND((+ (rt0.c0))))) UNION ALL SELECT ALL vt1.c1 FROM vt1, rt0 WHERE ((NOT (((((rt0.c1 COLLATE NOCASE)AND(rt0.c0 COLLATE BINARY)))AND((+ (rt0.c0))))))) UNION ALL SELECT vt1.c1 FROM vt1, rt0 WHERE (((((((rt0.c1 COLLATE NOCASE)AND(rt0.c0 COLLATE BINARY)))AND((+ (rt0.c0))))) ISNULL));
SELECT ALL vt1.c1 FROM vt1, rt0;
SELECT DISTINCT vt1.c1 FROM vt1;
SELECT DISTINCT vt1.c1 FROM vt1 WHERE (x'') UNION SELECT DISTINCT vt1.c1 FROM vt1 WHERE ((NOT (x''))) UNION SELECT DISTINCT vt1.c1 FROM vt1 WHERE (((x'') ISNULL));
SELECT DISTINCT vt1.c1 FROM vt1;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (rt0.c2) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (rt0.c2))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((rt0.c2) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM vt0, rt0, vt1;
SELECT * FROM vt0, rt0, vt1 WHERE (rt0.c2) UNION ALL SELECT ALL * FROM vt0, rt0, vt1 WHERE ((NOT (rt0.c2))) UNION ALL SELECT * FROM vt0, rt0, vt1 WHERE (((rt0.c2) ISNULL));
SELECT ALL * FROM vt0, rt0, vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((((((((vt1.c1)AND(vt1.c0)))AND(vt1.c1)))AND(vt1.c1)))OR(vt1.c0)) COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((((((((vt1.c1)AND(vt1.c0)))AND(vt1.c1)))AND(vt1.c1)))OR(vt1.c0)) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((((((((vt1.c1)AND(vt1.c0)))AND(vt1.c1)))AND(vt1.c1)))OR(vt1.c0)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt0.c0, rt0.c1 FROM rt0 RIGHT OUTER JOIN vt0 ON ((x'')>=(((((rt0.c2)AND(rt0.c1)))OR('-432673064')))) GROUP BY vt0.c0, rt0.c1;
SELECT ALL vt0.c0, rt0.c1 FROM rt0 RIGHT OUTER JOIN vt0 ON ((x'')>=(((((rt0.c2)AND(rt0.c1)))OR('-432673064')))) WHERE (((((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c0)))>=((NOT (rt0.c0))))) GROUP BY vt0.c0, rt0.c1 UNION SELECT vt0.c0, rt0.c1 FROM rt0 RIGHT OUTER JOIN vt0 ON ((x'')>=(((((rt0.c2)AND(rt0.c1)))OR('-432673064')))) WHERE ((NOT (((((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c0)))>=((NOT (rt0.c0))))))) GROUP BY vt0.c0, rt0.c1 UNION SELECT ALL vt0.c0, rt0.c1 FROM rt0 NOT INDEXED RIGHT OUTER JOIN vt0 ON ((x'')>=(((((rt0.c2)AND(rt0.c1)))OR('-432673064')))) WHERE (((((((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c0)))>=((NOT (rt0.c0))))) ISNULL)) GROUP BY vt0.c0, rt0.c1;
SELECT vt0.c0, rt0.c1 FROM rt0 RIGHT OUTER JOIN vt0 ON ((x'')>=(((((rt0.c2)AND(rt0.c1)))OR('-432673064')))) GROUP BY vt0.c0, rt0.c1;
SELECT ALL rt0.c1, vt0.c0, rt0.c2, rt0.c0 FROM rt0, vt1, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, vt0.c0, rt0.c2, rt0.c0 FROM rt0, vt1, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c2, rt0.c0 HAVING CAST(TOTAL(rt0.c2) AS NUMERIC) UNION ALL SELECT rt0.c1, vt0.c0, rt0.c2, rt0.c0 FROM rt0, vt1, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c2, rt0.c0 HAVING (NOT (CAST(TOTAL(rt0.c2) AS NUMERIC))) UNION ALL SELECT ALL rt0.c1, vt0.c0, rt0.c2, rt0.c0 FROM rt0, vt1, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c2, rt0.c0 HAVING ((CAST(TOTAL(rt0.c2) AS NUMERIC)) ISNULL);
SELECT ALL rt0.c1, vt0.c0, rt0.c2, rt0.c0 FROM rt0, vt1, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, vt0.c0, rt0.c2, rt0.c0 FROM rt0, vt1, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c2, rt0.c0 HAVING CAST(TOTAL(rt0.c2) AS NUMERIC) UNION ALL SELECT rt0.c1, vt0.c0, rt0.c2, rt0.c0 FROM rt0, vt1, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c2, rt0.c0 HAVING (NOT (CAST(TOTAL(rt0.c2) AS NUMERIC))) UNION ALL SELECT ALL rt0.c1, vt0.c0, rt0.c2, rt0.c0 FROM rt0, vt1, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c2, rt0.c0 HAVING ((CAST(TOTAL(rt0.c2) AS NUMERIC)) ISNULL);
SELECT ALL rt0.c1, vt0.c0, rt0.c2, rt0.c0 FROM rt0, vt1, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c2, rt0.c0;
SELECT ALL MIN(CASE WHEN '-2068680345' THEN ((vt1.c1)<(vt1.c0)) WHEN ((((((((vt1.c0)AND(NULL)))AND(vt1.c0)))OR(vt1.c1)))OR('''vn-')) THEN ((vt1.c1) NOT BETWEEN (vt1.c1) AND (-1860245013)) WHEN ((vt1.c0) IS TRUE) THEN CASE vt1.c1  WHEN 'n7]z|2{iH' THEN vt1.c0 ELSE vt1.c1 END ELSE (((vt1.c1)) BETWEEN ((vt1.c1)) AND ((0.9079544293917917))) END) FROM vt1;
SELECT * FROM vt0, rt0;
SELECT ALL * FROM vt0, rt0 WHERE (((((CAST('2103444053' AS INTEGER))AND(((rt0.c1) NOT BETWEEN ('rYP') AND (rt0.c2)))))AND(((rt0.c0)OR(vt0.c0))))) UNION ALL SELECT * FROM vt0, rt0 WHERE ((NOT (((((CAST('2103444053' AS INTEGER))AND(((rt0.c1) NOT BETWEEN ('rYP') AND (rt0.c2)))))AND(((rt0.c0)OR(vt0.c0))))))) UNION ALL SELECT * FROM vt0, rt0 WHERE (((((((CAST('2103444053' AS INTEGER))AND(((rt0.c1) NOT BETWEEN ('rYP') AND (rt0.c2)))))AND(((rt0.c0)OR(vt0.c0))))) ISNULL));
SELECT * FROM vt0, rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM rt0 NATURAL JOIN vt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM rt0 NATURAL JOIN vt0 WHERE ((((((('-1441730368')>>(rt0.c1)))OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))AND((rt0.c0 IN ())))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM rt0 NATURAL JOIN vt0 WHERE ((NOT ((((((('-1441730368')>>(rt0.c1)))OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))AND((rt0.c0 IN ())))))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM rt0 NATURAL JOIN vt0 WHERE ((((((((('-1441730368')>>(rt0.c1)))OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))AND((rt0.c0 IN ())))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM rt0 NATURAL JOIN vt0;
SELECT ALL rt0.c0, rt0.c2, vt1.c0, rt0.c1, vt1.c1 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2, vt1.c0, rt0.c1, vt1.c1;
SELECT ALL rt0.c0, rt0.c2, vt1.c0, rt0.c1, vt1.c1 FROM vt1, rt0 WHERE ((CAST(rt0.c2 AS BLOB) IN ())) GROUP BY rt0.c0, rt0.c2, vt1.c0, rt0.c1, vt1.c1 UNION SELECT rt0.c0, rt0.c2, vt1.c0, rt0.c1, vt1.c1 FROM vt1, rt0 WHERE ((NOT ((CAST(rt0.c2 AS BLOB) IN ())))) GROUP BY rt0.c0, rt0.c2, vt1.c0, rt0.c1, vt1.c1 UNION SELECT rt0.c0, rt0.c2, vt1.c0, rt0.c1, vt1.c1 FROM vt1, rt0 WHERE ((((CAST(rt0.c2 AS BLOB) IN ())) ISNULL)) GROUP BY rt0.c0, rt0.c2, vt1.c0, rt0.c1, vt1.c1;
SELECT ALL rt0.c0, rt0.c2, vt1.c0, rt0.c1, vt1.c1 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2, vt1.c0, rt0.c1, vt1.c1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (GROUP_CONCAT(vt0.c0) IN ()) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((GROUP_CONCAT(vt0.c0) IN ()))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((GROUP_CONCAT(vt0.c0) IN ())) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (GROUP_CONCAT(vt0.c0) IN ()) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((GROUP_CONCAT(vt0.c0) IN ()))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((GROUP_CONCAT(vt0.c0) IN ())) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM vt1, rt0;
SELECT ALL * FROM vt1, rt0 WHERE (CASE CASE rt0.c1  WHEN rt0.c1 THEN vt1.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 END  WHEN ((vt1.c1)|(vt1.c0)) THEN x'' ELSE CASE NULL  WHEN rt0.c1 THEN vt1.c1 WHEN 0.09724718748330141 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END END) UNION ALL SELECT ALL * FROM vt1, rt0 WHERE ((NOT (CASE CASE rt0.c1  WHEN rt0.c1 THEN vt1.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 END  WHEN ((vt1.c1)|(vt1.c0)) THEN x'' ELSE CASE NULL  WHEN rt0.c1 THEN vt1.c1 WHEN 0.09724718748330141 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END END))) UNION ALL SELECT * FROM vt1, rt0 WHERE (((CASE CASE rt0.c1  WHEN rt0.c1 THEN vt1.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 END  WHEN ((vt1.c1)|(vt1.c0)) THEN x'' ELSE CASE NULL  WHEN rt0.c1 THEN vt1.c1 WHEN 0.09724718748330141 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END END) ISNULL));
SELECT * FROM vt1, rt0;
SELECT DISTINCT vt1.c0 FROM vt0, vt1;
SELECT DISTINCT vt1.c0 FROM vt0, vt1 WHERE (NULLIF(((vt1.c0)<=(vt1.c0)), (NOT (vt1.c0)))) UNION SELECT DISTINCT vt1.c0 FROM vt0, vt1 WHERE ((NOT (NULLIF(((vt1.c0)<=(vt1.c0)), (NOT (vt1.c0)))))) UNION SELECT DISTINCT vt1.c0 FROM vt0, vt1 NOT INDEXED WHERE (((NULLIF(((vt1.c0)<=(vt1.c0)), (NOT (vt1.c0)))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt0, vt1;
SELECT vt1.c0 FROM vt1, vt0, rt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0, rt0 WHERE (CASE WHEN ((1.151463214E9) NOT NULL) THEN CASE WHEN vt1.c0 THEN rt0.c1 WHEN vt0.c0 THEN vt1.c1 WHEN rt0.c2 THEN x'' ELSE vt0.c0 END WHEN 0.2290577434737845 THEN CHANGES() WHEN ((rt0.c0)>=(rt0.c1)) THEN CASE WHEN rt0.c2 THEN vt1.c1 WHEN rt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN rt0.c0 END ELSE CASE vt1.c0  WHEN NULL THEN vt1.c1 END END) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1, vt0, rt0 WHERE ((NOT (CASE WHEN ((1.151463214E9) NOT NULL) THEN CASE WHEN vt1.c0 THEN rt0.c1 WHEN vt0.c0 THEN vt1.c1 WHEN rt0.c2 THEN x'' ELSE vt0.c0 END WHEN 0.2290577434737845 THEN CHANGES() WHEN ((rt0.c0)>=(rt0.c1)) THEN CASE WHEN rt0.c2 THEN vt1.c1 WHEN rt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN rt0.c0 END ELSE CASE vt1.c0  WHEN NULL THEN vt1.c1 END END))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1, vt0, rt0 WHERE (((CASE WHEN ((1.151463214E9) NOT NULL) THEN CASE WHEN vt1.c0 THEN rt0.c1 WHEN vt0.c0 THEN vt1.c1 WHEN rt0.c2 THEN x'' ELSE vt0.c0 END WHEN 0.2290577434737845 THEN CHANGES() WHEN ((rt0.c0)>=(rt0.c1)) THEN CASE WHEN rt0.c2 THEN vt1.c1 WHEN rt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN rt0.c0 END ELSE CASE vt1.c0  WHEN NULL THEN vt1.c1 END END) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0, rt0 GROUP BY vt1.c0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (((((SUM(TOTAL(0xffffffffb40181c5))))<=((rt0.c2)))) BETWEEN (MIN(COUNT(GROUP_CONCAT(COUNT(*))))) AND (CASE WHEN COUNT(*) THEN AVG(rt0.c1) ELSE rt0.c2 END)) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT ((((((SUM(TOTAL(0xffffffffb40181c5))))<=((rt0.c2)))) BETWEEN (MIN(COUNT(GROUP_CONCAT(COUNT(*))))) AND (CASE WHEN COUNT(*) THEN AVG(rt0.c1) ELSE rt0.c2 END)))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (((((((SUM(TOTAL(0Xffffffffb40181c5))))<=((rt0.c2)))) BETWEEN (MIN(COUNT(GROUP_CONCAT(COUNT(*))))) AND (CASE WHEN COUNT(*) THEN AVG(rt0.c1) ELSE rt0.c2 END))) ISNULL);
SELECT * FROM vt0, vt1, rt0 NOT INDEXED;
SELECT ALL * FROM vt0, vt1, rt0 WHERE ((((((rt0.c0 IN ()))AND(rt0.c1)))AND(((vt1.c1) IS TRUE)))) UNION ALL SELECT * FROM vt0, vt1, rt0 WHERE ((NOT ((((((rt0.c0 IN ()))AND(rt0.c1)))AND(((vt1.c1) IS TRUE)))))) UNION ALL SELECT ALL * FROM vt0, vt1, rt0 WHERE ((((((((rt0.c0 IN ()))AND(rt0.c1)))AND(((vt1.c1) IS TRUE)))) ISNULL));
SELECT * FROM vt0, vt1, rt0 NOT INDEXED;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (UNLIKELY((NOT (vt0.c0)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (UNLIKELY((NOT (vt0.c0)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((UNLIKELY((NOT (vt0.c0)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT rt0.c2, rt0.c1, vt1.c0, rt0.c0, vt0.c0, vt1.c1 FROM rt0, vt0, vt1 GROUP BY rt0.c2, rt0.c1, vt1.c0, rt0.c0, vt0.c0, vt1.c1;
SELECT rt0.c2, rt0.c1, vt1.c0, rt0.c0, vt0.c0, vt1.c1 FROM rt0, vt0, vt1 WHERE (((rt0.c0 COLLATE BINARY) NOT BETWEEN (((vt1.c1)&(vt0.c0))) AND (((vt1.c0)<<(rt0.c2))))) GROUP BY rt0.c2, rt0.c1, vt1.c0, rt0.c0, vt0.c0, vt1.c1 UNION SELECT rt0.c2, rt0.c1, vt1.c0, rt0.c0, vt0.c0, vt1.c1 FROM rt0, vt0, vt1 WHERE ((NOT (((rt0.c0 COLLATE BINARY) NOT BETWEEN (((vt1.c1)&(vt0.c0))) AND (((vt1.c0)<<(rt0.c2))))))) GROUP BY rt0.c2, rt0.c1, vt1.c0, rt0.c0, vt0.c0, vt1.c1 UNION SELECT rt0.c2, rt0.c1, vt1.c0, rt0.c0, vt0.c0, vt1.c1 FROM rt0, vt0, vt1 WHERE (((((rt0.c0 COLLATE BINARY) NOT BETWEEN (((vt1.c1)&(vt0.c0))) AND (((vt1.c0)<<(rt0.c2))))) ISNULL)) GROUP BY rt0.c2, rt0.c1, vt1.c0, rt0.c0, vt0.c0, vt1.c1;
SELECT rt0.c2, rt0.c1, vt1.c0, rt0.c0, vt0.c0, vt1.c1 FROM rt0, vt0, vt1 GROUP BY rt0.c2, rt0.c1, vt1.c0, rt0.c0, vt0.c0, vt1.c1;
SELECT rt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, vt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, vt0.c0 HAVING AVG(COUNT(*)) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, vt0.c0 HAVING (NOT (AVG(COUNT(*)))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, vt0.c0 HAVING ((AVG(COUNT(*))) ISNULL);
SELECT rt0.c2 FROM rt0, vt1, vt0 NOT INDEXED;
SELECT rt0.c2 FROM rt0, vt1, vt0 WHERE ((+ ((vt0.c0 IN ())))) UNION ALL SELECT ALL rt0.c2 FROM rt0, vt1, vt0 WHERE ((NOT ((+ ((vt0.c0 IN ())))))) UNION ALL SELECT ALL rt0.c2 FROM rt0, vt1, vt0 WHERE ((((+ ((vt0.c0 IN ())))) ISNULL));
SELECT rt0.c2 FROM rt0, vt1, vt0 NOT INDEXED;
SELECT DISTINCT * FROM vt1, vt0, rt0;
SELECT DISTINCT * FROM vt1, vt0, rt0 WHERE (x'') UNION SELECT DISTINCT * FROM vt1, vt0, rt0 NOT INDEXED WHERE ((NOT (x''))) UNION SELECT DISTINCT * FROM vt1, vt0, rt0 WHERE (((x'') ISNULL));
SELECT DISTINCT * FROM vt1, vt0, rt0;
SELECT ALL rt0.c1 FROM vt1, rt0, vt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM vt1, rt0, vt0 WHERE (((NULL) NOT BETWEEN (((vt1.c0)+(rt0.c2))) AND (CASE ''  WHEN rt0.c2 THEN rt0.c2 END))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM vt1, rt0, vt0 WHERE ((NOT (((NULL) NOT BETWEEN (((vt1.c0)+(rt0.c2))) AND (CASE ''  WHEN rt0.c2 THEN rt0.c2 END))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM vt1, rt0, vt0 WHERE (((((NULL) NOT BETWEEN (((vt1.c0)+(rt0.c2))) AND (CASE ''  WHEN rt0.c2 THEN rt0.c2 END))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM vt1, rt0, vt0 GROUP BY rt0.c1;
SELECT ALL vt1.c1, vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt0.c0, vt1.c0;
SELECT vt1.c1, vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt0.c0, vt1.c0 HAVING ((vt1.c0 COLLATE BINARY) IS FALSE) UNION ALL SELECT vt1.c1, vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt0.c0, vt1.c0 HAVING (NOT (((vt1.c0 COLLATE BINARY) IS FALSE))) UNION ALL SELECT ALL vt1.c1, vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt0.c0, vt1.c0 HAVING ((((vt1.c0 COLLATE BINARY) IS FALSE)) ISNULL);
SELECT ALL vt1.c1, vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt0.c0, vt1.c0;
SELECT vt1.c1, vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt0.c0, vt1.c0 HAVING ((vt1.c0 COLLATE BINARY) IS FALSE) UNION ALL SELECT vt1.c1, vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt0.c0, vt1.c0 HAVING (NOT (((vt1.c0 COLLATE BINARY) IS FALSE))) UNION ALL SELECT ALL vt1.c1, vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt0.c0, vt1.c0 HAVING ((((vt1.c0 COLLATE BINARY) IS FALSE)) ISNULL);
SELECT ALL vt1.c1, vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt0.c0, vt1.c0;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN CAST(vt0.c0 AS INTEGER) ELSE (985876774 IN ()) END) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN CAST(vt0.c0 AS INTEGER) ELSE (985876774 IN ()) END))) UNION ALL SELECT ALL * FROM vt0 WHERE (((CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN CAST(vt0.c0 AS INTEGER) ELSE (985876774 IN ()) END) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT rt0.c0, rt0.c2, vt0.c0, rt0.c1 FROM rt0, vt0;
SELECT DISTINCT rt0.c0, rt0.c2, vt0.c0, rt0.c1 FROM rt0, vt0 WHERE ((rt0.c2 COLLATE BINARY IN ((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c0))), json_patch(vt0.c0, rt0.c1)))) UNION SELECT DISTINCT rt0.c0, rt0.c2, vt0.c0, rt0.c1 FROM rt0, vt0 WHERE ((NOT ((rt0.c2 COLLATE BINARY IN ((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c0))), json_patch(vt0.c0, rt0.c1)))))) UNION SELECT DISTINCT rt0.c0, rt0.c2, vt0.c0, rt0.c1 FROM rt0, vt0 WHERE ((((rt0.c2 COLLATE BINARY IN ((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c0))), json_patch(vt0.c0, rt0.c1)))) ISNULL));
SELECT ALL vt1.c1, rt0.c2, vt1.c0 FROM vt1, vt0, rt0 GROUP BY vt1.c1, rt0.c2, vt1.c0;
SELECT ALL vt1.c1, rt0.c2, vt1.c0 FROM vt1, vt0, rt0 WHERE (COALESCE(CAST(vt1.c1 AS BLOB), ((vt1.c1)&(rt0.c0)), ((vt1.c0) BETWEEN (rt0.c1) AND (vt0.c0)), (rt0.c2 IN ()))) GROUP BY vt1.c1, rt0.c2, vt1.c0 UNION SELECT vt1.c1, rt0.c2, vt1.c0 FROM vt1, vt0, rt0 WHERE ((NOT (COALESCE(CAST(vt1.c1 AS BLOB), ((vt1.c1)&(rt0.c0)), ((vt1.c0) BETWEEN (rt0.c1) AND (vt0.c0)), (rt0.c2 IN ()))))) GROUP BY vt1.c1, rt0.c2, vt1.c0 UNION SELECT vt1.c1, rt0.c2, vt1.c0 FROM vt1, vt0, rt0 WHERE (((COALESCE(CAST(vt1.c1 AS BLOB), ((vt1.c1)&(rt0.c0)), ((vt1.c0) BETWEEN (rt0.c1) AND (vt0.c0)), (rt0.c2 IN ()))) ISNULL)) GROUP BY vt1.c1, rt0.c2, vt1.c0;
SELECT ALL vt1.c1, rt0.c2, vt1.c0 FROM vt1, vt0, rt0 GROUP BY vt1.c1, rt0.c2, vt1.c0;
SELECT vt1.c1, vt1.c0, rt0.c2, rt0.c0 FROM vt0, vt1, rt0 GROUP BY vt1.c1, vt1.c0, rt0.c2, rt0.c0;
SELECT vt1.c1, vt1.c0, rt0.c2, rt0.c0 FROM vt0, vt1, rt0 GROUP BY vt1.c1, vt1.c0, rt0.c2, rt0.c0 HAVING GROUP_CONCAT('971025267') UNION ALL SELECT ALL vt1.c1, vt1.c0, rt0.c2, rt0.c0 FROM vt0, vt1, rt0 GROUP BY vt1.c1, vt1.c0, rt0.c2, rt0.c0 HAVING (NOT (GROUP_CONCAT('971025267'))) UNION ALL SELECT vt1.c1, vt1.c0, rt0.c2, rt0.c0 FROM vt0, vt1, rt0 GROUP BY vt1.c1, vt1.c0, rt0.c2, rt0.c0 HAVING ((GROUP_CONCAT('971025267')) ISNULL);
SELECT vt1.c1, vt1.c0, rt0.c2, rt0.c0 FROM vt0, vt1, rt0 GROUP BY vt1.c1, vt1.c0, rt0.c2, rt0.c0;
SELECT vt1.c1, vt1.c0, rt0.c2, rt0.c0 FROM vt0, vt1, rt0 GROUP BY vt1.c1, vt1.c0, rt0.c2, rt0.c0 HAVING GROUP_CONCAT('971025267') UNION ALL SELECT ALL vt1.c1, vt1.c0, rt0.c2, rt0.c0 FROM vt0, vt1, rt0 GROUP BY vt1.c1, vt1.c0, rt0.c2, rt0.c0 HAVING (NOT (GROUP_CONCAT('971025267'))) UNION ALL SELECT vt1.c1, vt1.c0, rt0.c2, rt0.c0 FROM vt0, vt1, rt0 GROUP BY vt1.c1, vt1.c0, rt0.c2, rt0.c0 HAVING ((GROUP_CONCAT('971025267')) ISNULL);
SELECT vt1.c1, vt1.c0, rt0.c2, rt0.c0 FROM vt0, vt1, rt0 GROUP BY vt1.c1, vt1.c0, rt0.c2, rt0.c0;
SELECT ALL rt0.c2, vt1.c1, vt1.c0 FROM vt1, vt0, rt0;
SELECT ALL rt0.c2, vt1.c1, vt1.c0 FROM vt1, vt0, rt0 WHERE (CAST(((vt1.c1) NOT NULL) AS REAL)) UNION ALL SELECT ALL rt0.c2, vt1.c1, vt1.c0 FROM vt1, vt0, rt0 WHERE ((NOT (CAST(((vt1.c1) NOT NULL) AS REAL)))) UNION ALL SELECT rt0.c2, vt1.c1, vt1.c0 FROM vt1, vt0, rt0 WHERE (((CAST(((vt1.c1) NOT NULL) AS REAL)) ISNULL));
SELECT ALL rt0.c2, vt1.c1, vt1.c0 FROM vt1, vt0, rt0;
SELECT DISTINCT vt1.c0, rt0.c1, vt0.c0, rt0.c0, vt1.c1, rt0.c2 FROM vt1, vt0, rt0;
SELECT DISTINCT vt1.c0, rt0.c1, vt0.c0, rt0.c0, vt1.c1, rt0.c2 FROM vt1, vt0, rt0 WHERE (CASE ((((rt0.c1)AND(0.3618993035185949)))AND(rt0.c0))  WHEN ((vt0.c0)>=(rt0.c1)) THEN ((vt1.c1)==(vt1.c0)) WHEN x'' THEN ((rt0.c0)<<(rt0.c2)) WHEN CASE vt1.c0  WHEN rt0.c0 THEN rt0.c1 ELSE vt0.c0 END THEN rt0.c1 COLLATE RTRIM END) UNION SELECT DISTINCT vt1.c0, rt0.c1, vt0.c0, rt0.c0, vt1.c1, rt0.c2 FROM vt1, vt0, rt0 WHERE ((NOT (CASE ((((rt0.c1)AND(0.3618993035185949)))AND(rt0.c0))  WHEN ((vt0.c0)>=(rt0.c1)) THEN ((vt1.c1)=(vt1.c0)) WHEN x'' THEN ((rt0.c0)<<(rt0.c2)) WHEN CASE vt1.c0  WHEN rt0.c0 THEN rt0.c1 ELSE vt0.c0 END THEN rt0.c1 COLLATE RTRIM END))) UNION SELECT DISTINCT vt1.c0, rt0.c1, vt0.c0, rt0.c0, vt1.c1, rt0.c2 FROM vt1, vt0, rt0 WHERE (((CASE ((((rt0.c1)AND(0.3618993035185949)))AND(rt0.c0))  WHEN ((vt0.c0)>=(rt0.c1)) THEN ((vt1.c1)==(vt1.c0)) WHEN x'' THEN ((rt0.c0)<<(rt0.c2)) WHEN CASE vt1.c0  WHEN rt0.c0 THEN rt0.c1 ELSE vt0.c0 END THEN rt0.c1 COLLATE RTRIM END) ISNULL));
SELECT DISTINCT vt1.c0, rt0.c1, vt0.c0, rt0.c0, vt1.c1, rt0.c2 FROM vt1, vt0, rt0;
SELECT ALL rt0.c0, rt0.c1, vt1.c1, rt0.c2, vt1.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON ((0X7b5ab4a2)/(CAST(vt0.c0 AS REAL))) FULL OUTER JOIN vt1 ON ((((((vt1.c1) NOT NULL))OR(CAST(rt0.c0 AS REAL))))AND(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN vt1.c1 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN x'' WHEN rt0.c0 THEN x'' ELSE rt0.c2 END)) GROUP BY rt0.c0, rt0.c1, vt1.c1, rt0.c2, vt1.c0;
SELECT ALL rt0.c0, rt0.c1, vt1.c1, rt0.c2, vt1.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON ((0X7b5ab4a2)/(CAST(vt0.c0 AS REAL))) FULL OUTER JOIN vt1 ON ((((((vt1.c1) NOT NULL))OR(CAST(rt0.c0 AS REAL))))AND(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN vt1.c1 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN x'' WHEN rt0.c0 THEN x'' ELSE rt0.c2 END)) WHERE (((0.39262660991594633) NOT NULL)) GROUP BY rt0.c0, rt0.c1, vt1.c1, rt0.c2, vt1.c0 UNION SELECT rt0.c0, rt0.c1, vt1.c1, rt0.c2, vt1.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON ((0X7b5ab4a2)/(CAST(vt0.c0 AS REAL))) FULL OUTER JOIN vt1 ON ((((((vt1.c1) NOT NULL))OR(CAST(rt0.c0 AS REAL))))AND(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN vt1.c1 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN x'' WHEN rt0.c0 THEN x'' ELSE rt0.c2 END)) WHERE ((NOT (((0.39262660991594633) NOT NULL)))) GROUP BY rt0.c0, rt0.c1, vt1.c1, rt0.c2, vt1.c0 UNION SELECT ALL rt0.c0, rt0.c1, vt1.c1, rt0.c2, vt1.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON ((0X7b5ab4a2)/(CAST(vt0.c0 AS REAL))) FULL OUTER JOIN vt1 ON ((((((vt1.c1) NOT NULL))OR(CAST(rt0.c0 AS REAL))))AND(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN vt1.c1 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN x'' WHEN rt0.c0 THEN x'' ELSE rt0.c2 END)) WHERE (((((0.39262660991594633) NOT NULL)) ISNULL)) GROUP BY rt0.c0, rt0.c1, vt1.c1, rt0.c2, vt1.c0;
SELECT ALL rt0.c0, rt0.c1, vt1.c1, rt0.c2, vt1.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON ((0X7b5ab4a2)/(CAST(vt0.c0 AS REAL))) FULL OUTER JOIN vt1 ON ((((((vt1.c1) NOT NULL))OR(CAST(rt0.c0 AS REAL))))AND(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN vt1.c1 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN x'' WHEN rt0.c0 THEN x'' ELSE rt0.c2 END)) GROUP BY rt0.c0, rt0.c1, vt1.c1, rt0.c2, vt1.c0;
SELECT vt1.c0, vt1.c1, rt0.c1 FROM rt0 CROSS JOIN vt1 ON (((+ (vt1.c0))) IS FALSE) GROUP BY vt1.c0, vt1.c1, rt0.c1;
SELECT ALL vt1.c0, vt1.c1, rt0.c1 FROM rt0 CROSS JOIN vt1 ON (((+ (vt1.c0))) IS FALSE) GROUP BY vt1.c0, vt1.c1, rt0.c1 HAVING COUNT(*) UNION ALL SELECT vt1.c0, vt1.c1, rt0.c1 FROM rt0 CROSS JOIN vt1 ON (((+ (vt1.c0))) IS FALSE) GROUP BY vt1.c0, vt1.c1, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0, vt1.c1, rt0.c1 FROM rt0 CROSS JOIN vt1 ON (((+ (vt1.c0))) IS FALSE) GROUP BY vt1.c0, vt1.c1, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0, vt1.c1, rt0.c1 FROM rt0 CROSS JOIN vt1 ON (((+ (vt1.c0))) IS FALSE) GROUP BY vt1.c0, vt1.c1, rt0.c1;
SELECT ALL vt1.c0, vt1.c1, rt0.c1 FROM rt0 CROSS JOIN vt1 ON (((+ (vt1.c0))) IS FALSE) GROUP BY vt1.c0, vt1.c1, rt0.c1 HAVING COUNT(*) UNION ALL SELECT vt1.c0, vt1.c1, rt0.c1 FROM rt0 CROSS JOIN vt1 ON (((+ (vt1.c0))) IS FALSE) GROUP BY vt1.c0, vt1.c1, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0, vt1.c1, rt0.c1 FROM rt0 CROSS JOIN vt1 ON (((+ (vt1.c0))) IS FALSE) GROUP BY vt1.c0, vt1.c1, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0, vt1.c1, rt0.c1 FROM rt0 CROSS JOIN vt1 ON (((+ (vt1.c0))) IS FALSE) GROUP BY vt1.c0, vt1.c1, rt0.c1;
SELECT vt1.c1 FROM vt1;
SELECT vt1.c1 FROM vt1 WHERE (((((vt1.c0)>=(vt1.c1)))|(vt1.c0 COLLATE NOCASE))) UNION ALL SELECT ALL vt1.c1 FROM vt1 WHERE ((NOT (((((vt1.c0)>=(vt1.c1)))|(vt1.c0 COLLATE NOCASE))))) UNION ALL SELECT ALL vt1.c1 FROM vt1 WHERE (((((((vt1.c0)>=(vt1.c1)))|(vt1.c0 COLLATE NOCASE))) ISNULL));
SELECT vt1.c1 FROM vt1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CASE (- (rt0.c0))  WHEN ((rt0.c1) NOT NULL) THEN CAST('1040553632' AS REAL) WHEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)) THEN CAST(NULL AS REAL) WHEN (NOT (rt0.c1)) THEN CAST(rt0.c2 AS INTEGER) ELSE NULL END) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CASE (- (rt0.c0))  WHEN ((rt0.c1) NOT NULL) THEN CAST('1040553632' AS REAL) WHEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)) THEN CAST(NULL AS REAL) WHEN (NOT (rt0.c1)) THEN CAST(rt0.c2 AS INTEGER) ELSE NULL END))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CASE (- (rt0.c0))  WHEN ((rt0.c1) NOT NULL) THEN CAST('1040553632' AS REAL) WHEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)) THEN CAST(NULL AS REAL) WHEN (NOT (rt0.c1)) THEN CAST(rt0.c2 AS INTEGER) ELSE NULL END) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt0 WHERE (((((((((CASE vt0.c0  WHEN rt0.c0 THEN rt0.c2 END)OR(((rt0.c1)&(rt0.c2)))))OR(((((0.30373289085736943)AND(vt0.c0)))AND(rt0.c2)))))AND(']~z l(0%')))AND(((((((((vt0.c0)AND(rt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt0 WHERE ((NOT (((((((((CASE vt0.c0  WHEN rt0.c0 THEN rt0.c2 END)OR(((rt0.c1)&(rt0.c2)))))OR(((((0.30373289085736943)AND(vt0.c0)))AND(rt0.c2)))))AND(']~z l(0%')))AND(((((((((vt0.c0)AND(rt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt0 WHERE (((((((((((CASE vt0.c0  WHEN rt0.c0 THEN rt0.c2 END)OR(((rt0.c1)&(rt0.c2)))))OR(((((0.30373289085736943)AND(vt0.c0)))AND(rt0.c2)))))AND(']~z l(0%')))AND(((((((((vt0.c0)AND(rt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL vt1.c0 FROM vt1, vt0, rt0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt0, rt0 GROUP BY vt1.c0 HAVING ((GROUP_CONCAT(GROUP_CONCAT(TOTAL(rt0.c1))))&(TOTAL(AVG(GROUP_CONCAT(GROUP_CONCAT(vt0.c0)))))) UNION ALL SELECT vt1.c0 FROM vt1, vt0, rt0 GROUP BY vt1.c0 HAVING (NOT (((GROUP_CONCAT(GROUP_CONCAT(TOTAL(rt0.c1))))&(TOTAL(AVG(GROUP_CONCAT(GROUP_CONCAT(vt0.c0)))))))) UNION ALL SELECT vt1.c0 FROM vt1, vt0, rt0 GROUP BY vt1.c0 HAVING ((((GROUP_CONCAT(GROUP_CONCAT(TOTAL(rt0.c1))))&(TOTAL(AVG(GROUP_CONCAT(GROUP_CONCAT(vt0.c0))))))) ISNULL);
SELECT * FROM vt0, vt1;
SELECT ALL * FROM vt0, vt1 WHERE (((vt0.c0) IS FALSE) COLLATE RTRIM) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE ((NOT (((vt0.c0) IS FALSE) COLLATE RTRIM))) UNION ALL SELECT ALL * FROM vt0 NOT INDEXED, vt1 WHERE (((((vt0.c0) IS FALSE) COLLATE RTRIM) ISNULL));
SELECT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE ('6yLx') UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT ('6yLx'))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((('6yLx') ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT vt1.c0, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c1;
SELECT ALL vt1.c0, rt0.c1 FROM vt1, rt0 WHERE ((((vt1.c0, rt0.c0, rt0.c2)) NOT BETWEEN (((((vt1.c0))<=((rt0.c0))), ((vt1.c1) NOTNULL), 0.3584628116844851)) AND ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (rt0.c0)), LAST_INSERT_ROWID(), ((vt1.c0)%(vt1.c0)))))) GROUP BY vt1.c0, rt0.c1 UNION SELECT ALL vt1.c0, rt0.c1 FROM vt1, rt0 WHERE ((NOT ((((vt1.c0, rt0.c0, rt0.c2)) NOT BETWEEN (((((vt1.c0))<=((rt0.c0))), ((vt1.c1) NOTNULL), 0.3584628116844851)) AND ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (rt0.c0)), LAST_INSERT_ROWID(), ((vt1.c0)%(vt1.c0)))))))) GROUP BY vt1.c0, rt0.c1 UNION SELECT ALL vt1.c0, rt0.c1 FROM vt1, rt0 WHERE ((((((vt1.c0, rt0.c0, rt0.c2)) NOT BETWEEN (((((vt1.c0))<=((rt0.c0))), ((vt1.c1) NOTNULL), 0.3584628116844851)) AND ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (rt0.c0)), LAST_INSERT_ROWID(), ((vt1.c0)%(vt1.c0)))))) ISNULL)) GROUP BY vt1.c0, rt0.c1;
SELECT vt1.c0, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c1;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING MIN(COUNT(SUM(TOTAL(COUNT(*))))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (MIN(COUNT(SUM(TOTAL(COUNT(*))))))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((MIN(COUNT(SUM(TOTAL(COUNT(*)))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) IS FALSE))LIKE(x''))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((rt0.c2) IS FALSE))LIKE(x''))))) UNION ALL SELECT * FROM rt0 WHERE (((((((rt0.c2) IS FALSE))LIKE(x''))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1 WHERE ((((+ (vt1.c1)))>=('0.4025912365655807'))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((NOT ((((+ (vt1.c1)))>=('0.4025912365655807'))))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((((((+ (vt1.c1)))>=('0.4025912365655807'))) ISNULL));
SELECT DISTINCT * FROM rt0, vt1;
SELECT vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT ALL vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR((+ (rt0.c0)))))OR(((rt0.c0)>(rt0.c1))))) GROUP BY vt0.c0, rt0.c2, rt0.c0, rt0.c1 UNION SELECT vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt0 WHERE ((NOT (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR((+ (rt0.c0)))))OR(((rt0.c0)>(rt0.c1))))))) GROUP BY vt0.c0, rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt0 WHERE (((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR((+ (rt0.c0)))))OR(((rt0.c0)>(rt0.c1))))) ISNULL)) GROUP BY vt0.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT ALL vt1.c1, rt0.c1, rt0.c0, vt1.c0, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c1, rt0.c1, rt0.c0, vt1.c0, rt0.c2;
SELECT vt1.c1, rt0.c1, rt0.c0, vt1.c0, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c1, rt0.c1, rt0.c0, vt1.c0, rt0.c2 HAVING AVG(TOTAL(rt0.c2)) UNION ALL SELECT ALL vt1.c1, rt0.c1, rt0.c0, vt1.c0, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c1, rt0.c1, rt0.c0, vt1.c0, rt0.c2 HAVING (NOT (AVG(TOTAL(rt0.c2)))) UNION ALL SELECT vt1.c1, rt0.c1, rt0.c0, vt1.c0, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c1, rt0.c1, rt0.c0, vt1.c0, rt0.c2 HAVING ((AVG(TOTAL(rt0.c2))) ISNULL);
SELECT * FROM vt0, vt1;
SELECT * FROM vt0, vt1 WHERE (CASE ((vt1.c0)IS('1095481258'))  WHEN ((vt1.c1) IS TRUE) THEN ((vt1.c1) BETWEEN (vt1.c0) AND (x'')) ELSE ((vt0.c0) NOT NULL) END) UNION ALL SELECT * FROM vt0, vt1 WHERE ((NOT (CASE ((vt1.c0)IS('1095481258'))  WHEN ((vt1.c1) IS TRUE) THEN ((vt1.c1) BETWEEN (vt1.c0) AND (x'')) ELSE ((vt0.c0) NOT NULL) END))) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE (((CASE ((vt1.c0)IS('1095481258'))  WHEN ((vt1.c1) IS TRUE) THEN ((vt1.c1) BETWEEN (vt1.c0) AND (x'')) ELSE ((vt0.c0) NOT NULL) END) ISNULL));
SELECT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, vt1.c1 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c2, rt0.c0, vt1.c1;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, vt1.c1 FROM rt0, vt1 WHERE (((vt1.c0) IS TRUE) COLLATE RTRIM COLLATE BINARY) GROUP BY rt0.c1, rt0.c2, rt0.c0, vt1.c1 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0, vt1.c1 FROM rt0, vt1 WHERE ((NOT (((vt1.c0) IS TRUE) COLLATE RTRIM COLLATE BINARY))) GROUP BY rt0.c1, rt0.c2, rt0.c0, vt1.c1 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0, vt1.c1 FROM rt0, vt1 WHERE (((((vt1.c0) IS TRUE) COLLATE RTRIM COLLATE BINARY) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0, vt1.c1;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, vt1.c1 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c2, rt0.c0, vt1.c1;
SELECT ALL vt0.c0, rt0.c1, vt1.c1, vt1.c0, rt0.c0, rt0.c2 FROM vt0, rt0, vt1 GROUP BY vt0.c0, rt0.c1, vt1.c1, vt1.c0, rt0.c0, rt0.c2;
SELECT ALL vt0.c0, rt0.c1, vt1.c1, vt1.c0, rt0.c0, rt0.c2 FROM vt0, rt0, vt1 GROUP BY vt0.c0, rt0.c1, vt1.c1, vt1.c0, rt0.c0, rt0.c2 HAVING SUM(((((rt0.c2)OR(MAX(GROUP_CONCAT(rt0.c1)))))OR(vt1.c0))) UNION ALL SELECT ALL vt0.c0, rt0.c1, vt1.c1, vt1.c0, rt0.c0, rt0.c2 FROM vt0, rt0, vt1 GROUP BY vt0.c0, rt0.c1, vt1.c1, vt1.c0, rt0.c0, rt0.c2 HAVING (NOT (SUM(((((rt0.c2)OR(MAX(GROUP_CONCAT(rt0.c1)))))OR(vt1.c0))))) UNION ALL SELECT vt0.c0, rt0.c1, vt1.c1, vt1.c0, rt0.c0, rt0.c2 FROM vt0, rt0, vt1 GROUP BY vt0.c0, rt0.c1, vt1.c1, vt1.c0, rt0.c0, rt0.c2 HAVING ((SUM(((((rt0.c2)OR(MAX(GROUP_CONCAT(rt0.c1)))))OR(vt1.c0)))) ISNULL);
SELECT * FROM vt1, vt0;
SELECT * FROM vt1, vt0 WHERE (((((vt1.c1)/(vt1.c1))) ISNULL)) UNION ALL SELECT ALL * FROM vt1, vt0 WHERE ((NOT (((((vt1.c1)/(vt1.c1))) ISNULL)))) UNION ALL SELECT * FROM vt1, vt0 WHERE (((((((vt1.c1)/(vt1.c1))) ISNULL)) ISNULL));
SELECT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0, rt0;
SELECT DISTINCT * FROM vt1, vt0, rt0 WHERE ((((+ (rt0.c1)))<(((rt0.c0)||(vt0.c0))))) UNION SELECT DISTINCT * FROM vt1, vt0, rt0 WHERE ((NOT ((((+ (rt0.c1)))<(((rt0.c0)||(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt1, vt0, rt0 WHERE ((((((+ (rt0.c1)))<(((rt0.c0)||(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0, rt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)-(vt0.c0 COLLATE RTRIM))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)-(vt0.c0 COLLATE RTRIM))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)-(vt0.c0 COLLATE RTRIM))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING COUNT(SUM(vt1.c0)) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (COUNT(SUM(vt1.c0)))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((COUNT(SUM(vt1.c0))) ISNULL);
SELECT rt0.c2 FROM vt0, rt0;
SELECT ALL rt0.c2 FROM vt0, rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((CAST(rt0.c2 AS INTEGER))) AND ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))) UNION ALL SELECT ALL rt0.c2 FROM vt0, rt0 WHERE ((NOT ((((rt0.c1)) NOT BETWEEN ((CAST(rt0.c2 AS INTEGER))) AND ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))))) UNION ALL SELECT rt0.c2 FROM vt0, rt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((CAST(rt0.c2 AS INTEGER))) AND ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))) ISNULL));
SELECT rt0.c2 FROM vt0, rt0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE (CASE WHEN rt0.c2 THEN (rt0.c2 IN ()) ELSE ((rt0.c0)<(rt0.c1)) END) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT (CASE WHEN rt0.c2 THEN (rt0.c2 IN ()) ELSE ((rt0.c0)<(rt0.c1)) END))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN (rt0.c2 IN ()) ELSE ((rt0.c0)<(rt0.c1)) END) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT rt0.c1, vt0.c0, rt0.c0, rt0.c2 FROM vt0 INNER JOIN rt0 ON (((0.49531857442696925)==(vt0.c0)) IN ()) GROUP BY rt0.c1, vt0.c0, rt0.c0, rt0.c2;
SELECT rt0.c1, vt0.c0, rt0.c0, rt0.c2 FROM vt0 INNER JOIN rt0 ON (((0.49531857442696925)==(vt0.c0)) IN ()) WHERE (((((((rt0.c1)OR(vt0.c0)))OR(rt0.c1))) ISNULL)) GROUP BY rt0.c1, vt0.c0, rt0.c0, rt0.c2 UNION SELECT rt0.c1, vt0.c0, rt0.c0, rt0.c2 FROM vt0 INNER JOIN rt0 ON (((0.49531857442696925)==(vt0.c0)) IN ()) WHERE ((NOT (((((((rt0.c1)OR(vt0.c0)))OR(rt0.c1))) ISNULL)))) GROUP BY rt0.c1, vt0.c0, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, vt0.c0, rt0.c0, rt0.c2 FROM vt0 INNER JOIN rt0 ON (((0.49531857442696925)=(vt0.c0)) IN ()) WHERE (((((((((rt0.c1)OR(vt0.c0)))OR(rt0.c1))) ISNULL)) ISNULL)) GROUP BY rt0.c1, vt0.c0, rt0.c0, rt0.c2;
SELECT rt0.c1, vt0.c0, rt0.c0, rt0.c2 FROM vt0 INNER JOIN rt0 ON (((0.49531857442696925)==(vt0.c0)) IN ()) GROUP BY rt0.c1, vt0.c0, rt0.c0, rt0.c2;
SELECT vt1.c1, rt0.c1, vt1.c0, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c1, rt0.c1, vt1.c0, rt0.c2;
SELECT vt1.c1, rt0.c1, vt1.c0, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c1, rt0.c1, vt1.c0, rt0.c2 HAVING CASE WHEN MAX(rt0.c0) THEN json_valid(TOTAL(vt1.c1)) END UNION ALL SELECT vt1.c1, rt0.c1, vt1.c0, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c1, rt0.c1, vt1.c0, rt0.c2 HAVING (NOT (CASE WHEN MAX(rt0.c0) THEN json_valid(TOTAL(vt1.c1)) END)) UNION ALL SELECT vt1.c1, rt0.c1, vt1.c0, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c1, rt0.c1, vt1.c0, rt0.c2 HAVING ((CASE WHEN MAX(rt0.c0) THEN json_valid(TOTAL(vt1.c1)) END) ISNULL);
SELECT vt1.c1, rt0.c1, vt1.c0, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c1, rt0.c1, vt1.c0, rt0.c2;
SELECT vt1.c1, rt0.c1, vt1.c0, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c1, rt0.c1, vt1.c0, rt0.c2 HAVING CASE WHEN MAX(rt0.c0) THEN json_valid(TOTAL(vt1.c1)) END UNION ALL SELECT vt1.c1, rt0.c1, vt1.c0, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c1, rt0.c1, vt1.c0, rt0.c2 HAVING (NOT (CASE WHEN MAX(rt0.c0) THEN json_valid(TOTAL(vt1.c1)) END)) UNION ALL SELECT vt1.c1, rt0.c1, vt1.c0, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c1, rt0.c1, vt1.c0, rt0.c2 HAVING ((CASE WHEN MAX(rt0.c0) THEN json_valid(TOTAL(vt1.c1)) END) ISNULL);
SELECT vt1.c1, rt0.c1, vt1.c0, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c1, rt0.c1, vt1.c0, rt0.c2;
SELECT MAX(TRIM(DISTINCT (NOT (rt0.c2)))) FROM vt0, rt0, vt1 ORDER BY ((((vt1.c0)IS NOT(vt0.c0)))LIKE((NOT (rt0.c2)))) DESC, (IFNULL(DISTINCT vt1.c1, rt0.c1) IN ()) ASC  NULLS LAST;
SELECT ALL vt1.c0, rt0.c0, vt0.c0, rt0.c2, vt1.c1 FROM vt1, vt0, rt0;
SELECT vt1.c0, rt0.c0, vt0.c0, rt0.c2, vt1.c1 FROM vt1, vt0, rt0 WHERE (((vt1.c1)<<(rt0.c2)) COLLATE RTRIM) UNION ALL SELECT vt1.c0, rt0.c0, vt0.c0, rt0.c2, vt1.c1 FROM vt1, vt0, rt0 WHERE ((NOT (((vt1.c1)<<(rt0.c2)) COLLATE RTRIM))) UNION ALL SELECT ALL vt1.c0, rt0.c0, vt0.c0, rt0.c2, vt1.c1 FROM vt1, vt0, rt0 WHERE (((((vt1.c1)<<(rt0.c2)) COLLATE RTRIM) ISNULL));
SELECT ALL vt1.c0, rt0.c0, vt0.c0, rt0.c2, vt1.c1 FROM vt1, vt0, rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1, vt0.c0 FROM rt0, vt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1, vt0.c0 FROM rt0, vt0 WHERE (((rt0.c2 COLLATE NOCASE)>=(load_extension(vt0.c0)))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1, vt0.c0 FROM rt0, vt0 WHERE ((NOT (((rt0.c2 COLLATE NOCASE)>=(load_extension(vt0.c0)))))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1, vt0.c0 FROM rt0, vt0 WHERE (((((rt0.c2 COLLATE NOCASE)>=(load_extension(vt0.c0)))) ISNULL));
SELECT ALL vt0.c0, rt0.c1 FROM vt1, vt0 FULL OUTER JOIN rt0 ON ((((vt1.c1)<(0.5008396746152283))) ISNULL) GROUP BY vt0.c0, rt0.c1;
SELECT vt0.c0, rt0.c1 FROM vt1, vt0 FULL OUTER JOIN rt0 ON ((((vt1.c1)<(0.5008396746152283))) ISNULL) WHERE ((rt0.c1 COLLATE NOCASE IN (((vt1.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0))))) GROUP BY vt0.c0, rt0.c1 UNION SELECT vt0.c0, rt0.c1 FROM vt1, vt0 FULL OUTER JOIN rt0 ON ((((vt1.c1)<(0.5008396746152283))) ISNULL) WHERE ((NOT ((rt0.c1 COLLATE NOCASE IN (((vt1.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0))))))) GROUP BY vt0.c0, rt0.c1 UNION SELECT vt0.c0, rt0.c1 FROM vt1, vt0 FULL OUTER JOIN rt0 ON ((((vt1.c1)<(0.5008396746152283))) ISNULL) WHERE ((((rt0.c1 COLLATE NOCASE IN (((vt1.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0))))) ISNULL)) GROUP BY vt0.c0, rt0.c1;
SELECT ALL vt0.c0, rt0.c1 FROM vt1, vt0 FULL OUTER JOIN rt0 ON ((((vt1.c1)<(0.5008396746152283))) ISNULL) GROUP BY vt0.c0, rt0.c1;
SELECT vt1.c1, rt0.c1, rt0.c0 FROM vt1, rt0 LEFT OUTER JOIN vt0 ON (((~ (vt0.c0)))>=('1' COLLATE NOCASE)) GROUP BY vt1.c1, rt0.c1, rt0.c0;
SELECT ALL vt1.c1, rt0.c1, rt0.c0 FROM vt1, rt0 LEFT OUTER JOIN vt0 ON (((~ (vt0.c0)))>=('1' COLLATE NOCASE)) GROUP BY vt1.c1, rt0.c1, rt0.c0 HAVING (((rt0.c1)) BETWEEN ((SUM(rt0.c1))) AND ((((COUNT(*)) ISNULL)))) UNION ALL SELECT ALL vt1.c1, rt0.c1, rt0.c0 FROM vt1, rt0 LEFT OUTER JOIN vt0 ON (((~ (vt0.c0)))>=('1' COLLATE NOCASE)) GROUP BY vt1.c1, rt0.c1, rt0.c0 HAVING (NOT ((((rt0.c1)) BETWEEN ((SUM(rt0.c1))) AND ((((COUNT(*)) ISNULL)))))) UNION ALL SELECT vt1.c1, rt0.c1, rt0.c0 FROM vt1, rt0 LEFT OUTER JOIN vt0 ON (((~ (vt0.c0)))>=('1' COLLATE NOCASE)) GROUP BY vt1.c1, rt0.c1, rt0.c0 HAVING (((((rt0.c1)) BETWEEN ((SUM(rt0.c1))) AND ((((COUNT(*)) ISNULL))))) ISNULL);
SELECT vt1.c1, rt0.c1, rt0.c0 FROM vt1, rt0 LEFT OUTER JOIN vt0 ON (((~ (vt0.c0)))>=('1' COLLATE NOCASE)) GROUP BY vt1.c1, rt0.c1, rt0.c0;
SELECT ALL vt1.c1, rt0.c1, rt0.c0 FROM vt1, rt0 LEFT OUTER JOIN vt0 ON (((~ (vt0.c0)))>=('1' COLLATE NOCASE)) GROUP BY vt1.c1, rt0.c1, rt0.c0 HAVING (((rt0.c1)) BETWEEN ((SUM(rt0.c1))) AND ((((COUNT(*)) ISNULL)))) UNION ALL SELECT ALL vt1.c1, rt0.c1, rt0.c0 FROM vt1, rt0 LEFT OUTER JOIN vt0 ON (((~ (vt0.c0)))>=('1' COLLATE NOCASE)) GROUP BY vt1.c1, rt0.c1, rt0.c0 HAVING (NOT ((((rt0.c1)) BETWEEN ((SUM(rt0.c1))) AND ((((COUNT(*)) ISNULL)))))) UNION ALL SELECT vt1.c1, rt0.c1, rt0.c0 FROM vt1, rt0 LEFT OUTER JOIN vt0 ON (((~ (vt0.c0)))>=('1' COLLATE NOCASE)) GROUP BY vt1.c1, rt0.c1, rt0.c0 HAVING (((((rt0.c1)) BETWEEN ((SUM(rt0.c1))) AND ((((COUNT(*)) ISNULL))))) ISNULL);
SELECT vt1.c1, rt0.c1, rt0.c0 FROM vt1, rt0 LEFT OUTER JOIN vt0 ON (((~ (vt0.c0)))>=('1' COLLATE NOCASE)) GROUP BY vt1.c1, rt0.c1, rt0.c0;
SELECT vt1.c0, rt0.c2, vt0.c0 FROM rt0, vt0, vt1;
SELECT ALL vt1.c0, rt0.c2, vt0.c0 FROM rt0, vt0, vt1 WHERE (((((rt0.c2)>>(vt1.c0)))=(CAST(rt0.c0 AS BLOB)))) UNION ALL SELECT vt1.c0, rt0.c2, vt0.c0 FROM rt0, vt0, vt1 WHERE ((NOT (((((rt0.c2)>>(vt1.c0)))==(CAST(rt0.c0 AS BLOB)))))) UNION ALL SELECT ALL vt1.c0, rt0.c2, vt0.c0 FROM rt0, vt0, vt1 WHERE (((((((rt0.c2)>>(vt1.c0)))==(CAST(rt0.c0 AS BLOB)))) ISNULL));
SELECT vt1.c0, rt0.c2, vt0.c0 FROM rt0, vt0, vt1;
SELECT DISTINCT * FROM rt0, vt1, vt0;
SELECT DISTINCT * FROM rt0, vt1, vt0 WHERE (CASE WHEN CAST(rt0.c1 AS BLOB) THEN ((rt0.c2) ISNULL) WHEN CAST(rt0.c0 AS INTEGER) THEN ((rt0.c2)==(rt0.c1)) WHEN CAST(vt1.c1 AS REAL) THEN CAST(rt0.c1 AS BLOB) END) UNION SELECT DISTINCT * FROM rt0, vt1, vt0 WHERE ((NOT (CASE WHEN CAST(rt0.c1 AS BLOB) THEN ((rt0.c2) ISNULL) WHEN CAST(rt0.c0 AS INTEGER) THEN ((rt0.c2)==(rt0.c1)) WHEN CAST(vt1.c1 AS REAL) THEN CAST(rt0.c1 AS BLOB) END))) UNION SELECT DISTINCT * FROM rt0, vt1, vt0 WHERE (((CASE WHEN CAST(rt0.c1 AS BLOB) THEN ((rt0.c2) ISNULL) WHEN CAST(rt0.c0 AS INTEGER) THEN ((rt0.c2)=(rt0.c1)) WHEN CAST(vt1.c1 AS REAL) THEN CAST(rt0.c1 AS BLOB) END) ISNULL));
SELECT DISTINCT * FROM rt0, vt1, vt0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c1) AND (-7223008.0)))>=(((rt0.c1)==(rt0.c0))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c1) BETWEEN (rt0.c1) AND (-7223008.0)))>=(((rt0.c1)==(rt0.c0))))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE (((((((rt0.c1) BETWEEN (rt0.c1) AND (-7223008.0)))>=(((rt0.c1)==(rt0.c0))))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0, rt0.c1, rt0.c0 HAVING MAX(x'') UNION ALL SELECT ALL rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0, rt0.c1, rt0.c0 HAVING (NOT (MAX(x''))) UNION ALL SELECT ALL rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0, rt0.c1, rt0.c0 HAVING ((MAX(x'')) ISNULL);
SELECT rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0, rt0.c1, rt0.c0 HAVING MAX(x'') UNION ALL SELECT ALL rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0, rt0.c1, rt0.c0 HAVING (NOT (MAX(x''))) UNION ALL SELECT ALL rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0, rt0.c1, rt0.c0 HAVING ((MAX(x'')) ISNULL);
SELECT rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0, rt0.c1, rt0.c0;
SELECT ALL vt1.c0, vt1.c1 FROM vt1;
SELECT vt1.c0, vt1.c1 FROM vt1 WHERE ((((((vt1.c1, x'', vt1.c1)) BETWEEN ((x'', vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c1, vt1.c0))))AND(UPPER(DISTINCT vt1.c1)))) UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1 WHERE ((NOT ((((((vt1.c1, x'', vt1.c1)) BETWEEN ((x'', vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c1, vt1.c0))))AND(UPPER(DISTINCT vt1.c1)))))) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 WHERE ((((((((vt1.c1, x'', vt1.c1)) BETWEEN ((x'', vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c1, vt1.c0))))AND(UPPER(DISTINCT vt1.c1)))) ISNULL));
SELECT ALL vt1.c0, vt1.c1 FROM vt1;
SELECT DISTINCT * FROM rt0, vt1 INNER JOIN vt0 ON ((rt0.c1)<=((rt0.c2 IN ())));
SELECT DISTINCT * FROM rt0, vt1 INNER JOIN vt0 ON ((rt0.c1)<=((rt0.c2 IN ()))) WHERE ('0.14561332676103778') UNION SELECT DISTINCT * FROM rt0, vt1 INNER JOIN vt0 ON ((rt0.c1)<=((rt0.c2 IN ()))) WHERE ((NOT ('0.14561332676103778'))) UNION SELECT DISTINCT * FROM rt0, vt1 INNER JOIN vt0 ON ((rt0.c1)<=((rt0.c2 IN ()))) WHERE ((('0.14561332676103778') ISNULL));
SELECT DISTINCT * FROM rt0, vt1 INNER JOIN vt0 ON ((rt0.c1)<=((rt0.c2 IN ())));
SELECT ALL vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM rt0, vt1 WHERE (((rt0.c1) IS FALSE)) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM rt0, vt1 WHERE ((NOT (((rt0.c1) IS FALSE)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM rt0, vt1 WHERE (((((rt0.c1) IS FALSE)) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CAST(CASE WHEN vt0.c0 THEN AVG(vt0.c0) ELSE SUM(MIN(AVG(vt0.c0))) END AS INTEGER) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CAST(CASE WHEN vt0.c0 THEN AVG(vt0.c0) ELSE SUM(MIN(AVG(vt0.c0))) END AS INTEGER))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CAST(CASE WHEN vt0.c0 THEN AVG(vt0.c0) ELSE SUM(MIN(AVG(vt0.c0))) END AS INTEGER)) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((CAST(rt0.c1 AS TEXT)) BETWEEN (CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN 1.405612809E9 THEN rt0.c1 END) AND ('Sz'))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((CAST(rt0.c1 AS TEXT)) BETWEEN (CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN 1.405612809E9 THEN rt0.c1 END) AND ('Sz'))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((CAST(rt0.c1 AS TEXT)) BETWEEN (CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN 1.405612809E9 THEN rt0.c1 END) AND ('Sz'))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE ((((vt0.c0, 'e', rt0.c0)) NOT BETWEEN ((0.6372130401462841, vt0.c0 COLLATE BINARY, (+ (rt0.c2)))) AND ((((vt0.c0)|(vt0.c0)), rt0.c2, ((vt0.c0)IS NOT(vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0, rt0 NOT INDEXED WHERE ((NOT ((((vt0.c0, 'e', rt0.c0)) NOT BETWEEN ((0.6372130401462841, vt0.c0 COLLATE BINARY, (+ (rt0.c2)))) AND ((((vt0.c0)|(vt0.c0)), rt0.c2, ((vt0.c0)IS NOT(vt0.c0)))))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((((((vt0.c0, 'e', rt0.c0)) NOT BETWEEN ((0.6372130401462841, vt0.c0 COLLATE BINARY, (+ (rt0.c2)))) AND ((((vt0.c0)|(vt0.c0)), rt0.c2, ((vt0.c0)IS NOT(vt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT ALL vt1.c0, rt0.c1, vt1.c1, rt0.c0, vt0.c0 FROM vt1, rt0, vt0 GROUP BY vt1.c0, rt0.c1, vt1.c1, rt0.c0, vt0.c0;
SELECT vt1.c0, rt0.c1, vt1.c1, rt0.c0, vt0.c0 FROM vt1, rt0, vt0 WHERE (CAST(CAST(vt1.c0 AS BLOB) AS REAL)) GROUP BY vt1.c0, rt0.c1, vt1.c1, rt0.c0, vt0.c0 UNION SELECT ALL vt1.c0, rt0.c1, vt1.c1, rt0.c0, vt0.c0 FROM vt1, rt0, vt0 WHERE ((NOT (CAST(CAST(vt1.c0 AS BLOB) AS REAL)))) GROUP BY vt1.c0, rt0.c1, vt1.c1, rt0.c0, vt0.c0 UNION SELECT vt1.c0, rt0.c1, vt1.c1, rt0.c0, vt0.c0 FROM vt1, rt0, vt0 WHERE (((CAST(CAST(vt1.c0 AS BLOB) AS REAL)) ISNULL)) GROUP BY vt1.c0, rt0.c1, vt1.c1, rt0.c0, vt0.c0;
SELECT ALL vt1.c0, rt0.c1, vt1.c1, rt0.c0, vt0.c0 FROM vt1, rt0, vt0 GROUP BY vt1.c0, rt0.c1, vt1.c1, rt0.c0, vt0.c0;
SELECT ALL vt1.c0, rt0.c2, vt1.c1, rt0.c0 FROM vt1, vt0, rt0 GROUP BY vt1.c0, rt0.c2, vt1.c1, rt0.c0;
SELECT ALL vt1.c0, rt0.c2, vt1.c1, rt0.c0 FROM vt1, vt0, rt0 GROUP BY vt1.c0, rt0.c2, vt1.c1, rt0.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0, rt0.c2, vt1.c1, rt0.c0 FROM vt1, vt0, rt0 GROUP BY vt1.c0, rt0.c2, vt1.c1, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0, rt0.c2, vt1.c1, rt0.c0 FROM vt1, vt0, rt0 GROUP BY vt1.c0, rt0.c2, vt1.c1, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0, rt0.c2, vt1.c1, rt0.c0 FROM vt1, vt0, rt0 GROUP BY vt1.c0, rt0.c2, vt1.c1, rt0.c0;
SELECT ALL vt1.c0, rt0.c2, vt1.c1, rt0.c0 FROM vt1, vt0, rt0 GROUP BY vt1.c0, rt0.c2, vt1.c1, rt0.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0, rt0.c2, vt1.c1, rt0.c0 FROM vt1, vt0, rt0 GROUP BY vt1.c0, rt0.c2, vt1.c1, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0, rt0.c2, vt1.c1, rt0.c0 FROM vt1, vt0, rt0 GROUP BY vt1.c0, rt0.c2, vt1.c1, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0, rt0.c2, vt1.c1, rt0.c0 FROM vt1, vt0, rt0 GROUP BY vt1.c0, rt0.c2, vt1.c1, rt0.c0;
SELECT ALL rt0.c2, vt1.c1, vt1.c0, vt0.c0, rt0.c1 FROM vt1, vt0, rt0;
SELECT rt0.c2, vt1.c1, vt1.c0, vt0.c0, rt0.c1 FROM vt1, vt0, rt0 WHERE (((((rt0.c2)>(rt0.c1))) ISNULL)) UNION ALL SELECT ALL rt0.c2, vt1.c1, vt1.c0, vt0.c0, rt0.c1 FROM vt1, vt0, rt0 WHERE ((NOT (((((rt0.c2)>(rt0.c1))) ISNULL)))) UNION ALL SELECT rt0.c2, vt1.c1, vt1.c0, vt0.c0, rt0.c1 FROM vt1, vt0, rt0 WHERE (((((((rt0.c2)>(rt0.c1))) ISNULL)) ISNULL));
SELECT ALL rt0.c2, vt1.c1, vt1.c0, vt0.c0, rt0.c1 FROM vt1, vt0, rt0;
SELECT DISTINCT rt0.c0 FROM rt0, vt1;
SELECT DISTINCT rt0.c0 FROM rt0, vt1 WHERE (NULL) UNION SELECT DISTINCT rt0.c0 FROM rt0, vt1 WHERE ((NOT (NULL))) UNION SELECT DISTINCT rt0.c0 FROM rt0, vt1 WHERE (((NULL) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0, vt1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE ('SyD+^생6') GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT ('SyD+^생6'))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((('SyD+^생6') ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM vt1, rt0, vt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM vt1, rt0, vt0 GROUP BY rt0.c0, rt0.c1 HAVING (MAX(COUNT(GROUP_CONCAT(rt0.c0))) IN ()) UNION ALL SELECT rt0.c0, rt0.c1 FROM vt1, rt0, vt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT ((MAX(COUNT(GROUP_CONCAT(rt0.c0))) IN ()))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM vt1, rt0, vt0 GROUP BY rt0.c0, rt0.c1 HAVING (((MAX(COUNT(GROUP_CONCAT(rt0.c0))) IN ())) ISNULL);
SELECT ALL rt0.c0, rt0.c1 FROM vt1, rt0, vt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM vt1, rt0, vt0 GROUP BY rt0.c0, rt0.c1 HAVING (MAX(COUNT(GROUP_CONCAT(rt0.c0))) IN ()) UNION ALL SELECT rt0.c0, rt0.c1 FROM vt1, rt0, vt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT ((MAX(COUNT(GROUP_CONCAT(rt0.c0))) IN ()))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM vt1, rt0, vt0 GROUP BY rt0.c0, rt0.c1 HAVING (((MAX(COUNT(GROUP_CONCAT(rt0.c0))) IN ())) ISNULL);
SELECT ALL rt0.c0, rt0.c1 FROM vt1, rt0, vt0 GROUP BY rt0.c0, rt0.c1;
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE (((CAST(vt1.c0 AS NUMERIC)) IS FALSE)) UNION ALL SELECT * FROM vt1 WHERE ((NOT (((CAST(vt1.c0 AS NUMERIC)) IS FALSE)))) UNION ALL SELECT * FROM vt1 WHERE (((((CAST(vt1.c0 AS NUMERIC)) IS FALSE)) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT rt0.c2, vt1.c0, vt0.c0, vt1.c1, rt0.c1, rt0.c0 FROM rt0, vt0, vt1;
SELECT DISTINCT rt0.c2, vt1.c0, vt0.c0, vt1.c1, rt0.c1, rt0.c0 FROM rt0, vt0, vt1 WHERE (CASE (vt0.c0 IN (rt0.c0))  WHEN (vt0.c0 IN ()) THEN ((((rt0.c1)AND(vt0.c0)))AND(vt0.c0)) ELSE RTRIM(NULL) END) UNION SELECT DISTINCT rt0.c2, vt1.c0, vt0.c0, vt1.c1, rt0.c1, rt0.c0 FROM rt0, vt0, vt1 WHERE ((NOT (CASE (vt0.c0 IN (rt0.c0))  WHEN (vt0.c0 IN ()) THEN ((((rt0.c1)AND(vt0.c0)))AND(vt0.c0)) ELSE RTRIM(NULL) END))) UNION SELECT DISTINCT rt0.c2, vt1.c0, vt0.c0, vt1.c1, rt0.c1, rt0.c0 FROM rt0, vt0, vt1 WHERE (((CASE (vt0.c0 IN (rt0.c0))  WHEN (vt0.c0 IN ()) THEN ((((rt0.c1)AND(vt0.c0)))AND(vt0.c0)) ELSE RTRIM(NULL) END) ISNULL));
SELECT DISTINCT rt0.c2, vt1.c0, vt0.c0, vt1.c1, rt0.c1, rt0.c0 FROM rt0, vt0, vt1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE (((((rt0.c0) NOT NULL))>>(((rt0.c2) IS TRUE)))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c0) NOT NULL))>>(((rt0.c2) IS TRUE)))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE (((((((rt0.c0) NOT NULL))>>(((rt0.c2) IS TRUE)))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c2, vt1.c1, rt0.c0, rt0.c1, vt1.c0, vt0.c0 FROM vt1, rt0, vt0 GROUP BY rt0.c2, vt1.c1, rt0.c0, rt0.c1, vt1.c0, vt0.c0;
SELECT rt0.c2, vt1.c1, rt0.c0, rt0.c1, vt1.c0, vt0.c0 FROM vt1, rt0, vt0 GROUP BY rt0.c2, vt1.c1, rt0.c0, rt0.c1, vt1.c0, vt0.c0 HAVING ((((vt0.c0 COLLATE RTRIM)AND(json_valid(MAX(COUNT(MIN('[⌉')))))))OR(GROUP_CONCAT(COUNT(SUM(rt0.c1))))) UNION ALL SELECT ALL rt0.c2, vt1.c1, rt0.c0, rt0.c1, vt1.c0, vt0.c0 FROM vt1, rt0, vt0 GROUP BY rt0.c2, vt1.c1, rt0.c0, rt0.c1, vt1.c0, vt0.c0 HAVING (NOT (((((vt0.c0 COLLATE RTRIM)AND(json_valid(MAX(COUNT(MIN('[⌉')))))))OR(GROUP_CONCAT(COUNT(SUM(rt0.c1))))))) UNION ALL SELECT ALL rt0.c2, vt1.c1, rt0.c0, rt0.c1, vt1.c0, vt0.c0 FROM vt1, rt0, vt0 GROUP BY rt0.c2, vt1.c1, rt0.c0, rt0.c1, vt1.c0, vt0.c0 HAVING ((((((vt0.c0 COLLATE RTRIM)AND(json_valid(MAX(COUNT(MIN('[⌉')))))))OR(GROUP_CONCAT(COUNT(SUM(rt0.c1)))))) ISNULL);
SELECT MAX(((((((vt0.c0)>(vt0.c0)))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(CAST(vt0.c0 AS BLOB)))) FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((((vt0.c0) NOT NULL))) AND ((((vt0.c0) ISNULL))))  NULLS FIRST;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (((~ (vt0.c0)) IN ())) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((~ (vt0.c0)) IN ())))) UNION ALL SELECT * FROM vt0 WHERE (((((~ (vt0.c0)) IN ())) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((((rt0.c1) IS TRUE)))<>((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((((((rt0.c1) IS TRUE)))!=((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((((((rt0.c1) IS TRUE)))!=((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT vt0.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT vt0.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE (rt0.c0 COLLATE NOCASE) GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL vt0.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE ((NOT (rt0.c0 COLLATE NOCASE))) GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c0 UNION SELECT vt0.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE (((rt0.c0 COLLATE NOCASE) ISNULL)) GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT vt0.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT ALL vt1.c0, rt0.c0, vt1.c1, rt0.c1 FROM rt0 FULL OUTER JOIN vt1 ON (((rt0.c2 IN (rt0.c1))) IS TRUE) GROUP BY vt1.c0, rt0.c0, vt1.c1, rt0.c1;
SELECT ALL vt1.c0, rt0.c0, vt1.c1, rt0.c1 FROM rt0 FULL OUTER JOIN vt1 ON (((rt0.c2 IN (rt0.c1))) IS TRUE) GROUP BY vt1.c0, rt0.c0, vt1.c1, rt0.c1 HAVING COUNT(*) UNION ALL SELECT vt1.c0, rt0.c0, vt1.c1, rt0.c1 FROM rt0 FULL OUTER JOIN vt1 ON (((rt0.c2 IN (rt0.c1))) IS TRUE) GROUP BY vt1.c0, rt0.c0, vt1.c1, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0, rt0.c0, vt1.c1, rt0.c1 FROM rt0 FULL OUTER JOIN vt1 ON (((rt0.c2 IN (rt0.c1))) IS TRUE) GROUP BY vt1.c0, rt0.c0, vt1.c1, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0, rt0.c0, vt1.c1, rt0.c1 FROM rt0 FULL OUTER JOIN vt1 ON (((rt0.c2 IN (rt0.c1))) IS TRUE) GROUP BY vt1.c0, rt0.c0, vt1.c1, rt0.c1;
SELECT ALL vt1.c0, rt0.c0, vt1.c1, rt0.c1 FROM rt0 FULL OUTER JOIN vt1 ON (((rt0.c2 IN (rt0.c1))) IS TRUE) GROUP BY vt1.c0, rt0.c0, vt1.c1, rt0.c1 HAVING COUNT(*) UNION ALL SELECT vt1.c0, rt0.c0, vt1.c1, rt0.c1 FROM rt0 FULL OUTER JOIN vt1 ON (((rt0.c2 IN (rt0.c1))) IS TRUE) GROUP BY vt1.c0, rt0.c0, vt1.c1, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0, rt0.c0, vt1.c1, rt0.c1 FROM rt0 FULL OUTER JOIN vt1 ON (((rt0.c2 IN (rt0.c1))) IS TRUE) GROUP BY vt1.c0, rt0.c0, vt1.c1, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0, rt0.c0, vt1.c1, rt0.c1 FROM rt0 FULL OUTER JOIN vt1 ON (((rt0.c2 IN (rt0.c1))) IS TRUE) GROUP BY vt1.c0, rt0.c0, vt1.c1, rt0.c1;
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON (((((((vt0.c0)OR(vt0.c0)))OR('rr4xY'))))<(((vt0.c0 IN ()))));
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON (((((((vt0.c0)OR(vt0.c0)))OR('rr4xY'))))<(((vt0.c0 IN ())))) WHERE (LIKELY(DISTINCT ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))) UNION ALL SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON (((((((vt0.c0)OR(vt0.c0)))OR('rr4xY'))))<(((vt0.c0 IN ())))) WHERE ((NOT (LIKELY(DISTINCT ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))))) UNION ALL SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON (((((((vt0.c0)OR(vt0.c0)))OR('rr4xY'))))<(((vt0.c0 IN ())))) WHERE (((LIKELY(DISTINCT ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))) ISNULL));
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON (((((((vt0.c0)OR(vt0.c0)))OR('rr4xY'))))<(((vt0.c0 IN ()))));
SELECT DISTINCT * FROM vt0, rt0 NATURAL JOIN vt1;
SELECT DISTINCT * FROM vt0, rt0 NATURAL JOIN vt1 WHERE (((CAST(rt0.c0 AS INTEGER))GLOB(((rt0.c2)>(vt1.c1))))) UNION SELECT DISTINCT * FROM vt0, rt0 NATURAL JOIN vt1 WHERE ((NOT (((CAST(rt0.c0 AS INTEGER))GLOB(((rt0.c2)>(vt1.c1))))))) UNION SELECT DISTINCT * FROM vt0, rt0 NATURAL JOIN vt1 WHERE (((((CAST(rt0.c0 AS INTEGER))GLOB(((rt0.c2)>(vt1.c1))))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0 NATURAL JOIN vt1;
SELECT rt0.c0, rt0.c1, vt1.c1 FROM vt0, vt1, rt0 GROUP BY rt0.c0, rt0.c1, vt1.c1;
SELECT ALL rt0.c0, rt0.c1, vt1.c1 FROM vt0, vt1, rt0 WHERE (rt0.c1) GROUP BY rt0.c0, rt0.c1, vt1.c1 UNION SELECT rt0.c0, rt0.c1, vt1.c1 FROM vt0 NOT INDEXED, vt1, rt0 WHERE ((NOT (rt0.c1))) GROUP BY rt0.c0, rt0.c1, vt1.c1 UNION SELECT ALL rt0.c0, rt0.c1, vt1.c1 FROM vt0, vt1, rt0 WHERE (((rt0.c1) ISNULL)) GROUP BY rt0.c0, rt0.c1, vt1.c1;
SELECT rt0.c0, rt0.c1, vt1.c1 FROM vt0, vt1, rt0 GROUP BY rt0.c0, rt0.c1, vt1.c1;
SELECT ALL rt0.c0, vt0.c0 FROM vt1, vt0, rt0 GROUP BY rt0.c0, vt0.c0;
SELECT ALL rt0.c0, vt0.c0 FROM vt1, vt0, rt0 GROUP BY rt0.c0, vt0.c0 HAVING (((SUM(MIN(vt1.c0)), vt1.c1, SUM(vt0.c0))) NOT BETWEEN (((((x''))<>((rt0.c0))), (((vt1.c0))<=((GROUP_CONCAT(SUM(COUNT(TOTAL(MIN(GROUP_CONCAT(MIN(COUNT(*))))))))))), '')) AND ((COUNT(*), CAST(MIN(MAX(MAX(vt0.c0))) AS TEXT), MAX(AVG(rt0.c0))))) UNION ALL SELECT rt0.c0, vt0.c0 FROM vt1, vt0, rt0 GROUP BY rt0.c0, vt0.c0 HAVING (NOT ((((SUM(MIN(vt1.c0)), vt1.c1, SUM(vt0.c0))) NOT BETWEEN (((((x''))<>((rt0.c0))), (((vt1.c0))<=((GROUP_CONCAT(SUM(COUNT(TOTAL(MIN(GROUP_CONCAT(MIN(COUNT(*))))))))))), '')) AND ((COUNT(*), CAST(MIN(MAX(MAX(vt0.c0))) AS TEXT), MAX(AVG(rt0.c0))))))) UNION ALL SELECT rt0.c0, vt0.c0 FROM vt1, vt0, rt0 GROUP BY rt0.c0, vt0.c0 HAVING (((((SUM(MIN(vt1.c0)), vt1.c1, SUM(vt0.c0))) NOT BETWEEN (((((x''))!=((rt0.c0))), (((vt1.c0))<=((GROUP_CONCAT(SUM(COUNT(TOTAL(MIN(GROUP_CONCAT(MIN(COUNT(*))))))))))), '')) AND ((COUNT(*), CAST(MIN(MAX(MAX(vt0.c0))) AS TEXT), MAX(AVG(rt0.c0)))))) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (((PRINTF(vt1.c1, vt1.c1, vt1.c0)) BETWEEN (((vt1.c1) ISNULL)) AND ((((vt1.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c1)))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (((PRINTF(vt1.c1, vt1.c1, vt1.c0)) BETWEEN (((vt1.c1) ISNULL)) AND ((((vt1.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c1)))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((((PRINTF(vt1.c1, vt1.c1, vt1.c0)) BETWEEN (((vt1.c1) ISNULL)) AND ((((vt1.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c1)))))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM rt0 NATURAL JOIN vt1;
SELECT DISTINCT * FROM rt0 NATURAL JOIN vt1 WHERE (((((((((((((((((vt1.c1)OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c2)))AND(CAST(rt0.c1 AS BLOB))))OR(vt1.c0 COLLATE NOCASE)))OR(CAST(rt0.c0 AS NUMERIC))))OR('1419238526'))) UNION SELECT DISTINCT * FROM rt0 NATURAL JOIN vt1 WHERE ((NOT (((((((((((((((((vt1.c1)OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c2)))AND(CAST(rt0.c1 AS BLOB))))OR(vt1.c0 COLLATE NOCASE)))OR(CAST(rt0.c0 AS NUMERIC))))OR('1419238526'))))) UNION SELECT DISTINCT * FROM rt0 NATURAL JOIN vt1 WHERE (((((((((((((((((((vt1.c1)OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c2)))AND(CAST(rt0.c1 AS BLOB))))OR(vt1.c0 COLLATE NOCASE)))OR(CAST(rt0.c0 AS NUMERIC))))OR('1419238526'))) ISNULL));
SELECT DISTINCT * FROM rt0 NATURAL JOIN vt1;
SELECT ALL vt1.c0, vt0.c0, rt0.c1, rt0.c0, rt0.c2 FROM vt1 LEFT OUTER JOIN vt0 ON json_patch(((rt0.c2)<(vt0.c0)), rt0.c1) FULL OUTER JOIN rt0 ON CASE ((rt0.c0) ISNULL)  WHEN ((rt0.c1) NOTNULL) THEN (NULL IN (vt1.c0, vt0.c0)) END GROUP BY vt1.c0, vt0.c0, rt0.c1, rt0.c0, rt0.c2;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM rt0, vt1;
SELECT * FROM rt0, vt1 WHERE (x'e00d') UNION ALL SELECT ALL * FROM rt0, vt1 WHERE ((NOT (x'e00d'))) UNION ALL SELECT * FROM rt0, vt1 NOT INDEXED WHERE (((x'e00d') ISNULL));
SELECT ALL * FROM rt0, vt1;
SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1, vt0;
SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1, vt0 WHERE (MAX(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), ((((vt0.c0)AND(vt0.c0)))OR(vt1.c1)), vt1.c0, ((vt1.c0)|(vt1.c0)))) UNION SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1, vt0 WHERE ((NOT (MAX(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), ((((vt0.c0)AND(vt0.c0)))OR(vt1.c1)), vt1.c0, ((vt1.c0)|(vt1.c0)))))) UNION SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1, vt0 WHERE (((MAX(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), ((((vt0.c0)AND(vt0.c0)))OR(vt1.c1)), vt1.c0, ((vt1.c0)|(vt1.c0)))) ISNULL));
SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1, vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0, rt0.c0, rt0.c1 FROM rt0, vt0, vt1 GROUP BY vt0.c0, rt0.c0, rt0.c1;
SELECT ALL vt0.c0, rt0.c0, rt0.c1 FROM rt0, vt0, vt1 GROUP BY vt0.c0, rt0.c0, rt0.c1 HAVING MIN(MIN(vt1.c1)) UNION ALL SELECT ALL vt0.c0, rt0.c0, rt0.c1 FROM rt0, vt0, vt1 GROUP BY vt0.c0, rt0.c0, rt0.c1 HAVING (NOT (MIN(MIN(vt1.c1)))) UNION ALL SELECT ALL vt0.c0, rt0.c0, rt0.c1 FROM rt0, vt0, vt1 GROUP BY vt0.c0, rt0.c0, rt0.c1 HAVING ((MIN(MIN(vt1.c1))) ISNULL);
SELECT vt1.c0, vt1.c1 FROM vt1;
SELECT vt1.c0, vt1.c1 FROM vt1 WHERE (((((vt1.c0)||(vt1.c1)))>=((((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0)))))) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 WHERE ((NOT (((((vt1.c0)||(vt1.c1)))>=((((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0)))))))) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 WHERE (((((((vt1.c0)||(vt1.c1)))>=((((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0)))))) ISNULL));
SELECT vt1.c0, vt1.c1 FROM vt1;
SELECT DISTINCT vt1.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt0 INNER JOIN rt0 ON (((((((vt1.c0)AND(vt1.c1)))OR(rt0.c2)), ((rt0.c0)+(vt1.c0)), ((((((((vt1.c1)OR(rt0.c0)))OR(vt1.c1)))AND(rt0.c0)))AND(rt0.c0))))>(((NOT (NULL)), ((rt0.c1)-(vt1.c1)), ((((rt0.c2)AND(rt0.c2)))AND(vt1.c0))))) CROSS JOIN vt1 ON HEX(DISTINCT ((vt1.c0)<=(vt1.c1)));
SELECT DISTINCT vt1.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt0 INNER JOIN rt0 ON (((((((vt1.c0)AND(vt1.c1)))OR(rt0.c2)), ((rt0.c0)+(vt1.c0)), ((((((((vt1.c1)OR(rt0.c0)))OR(vt1.c1)))AND(rt0.c0)))AND(rt0.c0))))>(((NOT (NULL)), ((rt0.c1)-(vt1.c1)), ((((rt0.c2)AND(rt0.c2)))AND(vt1.c0))))) CROSS JOIN vt1 ON HEX(DISTINCT ((vt1.c0)<=(vt1.c1))) WHERE (NULLIF((rt0.c1 IN (vt0.c0)), (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))) UNION SELECT DISTINCT vt1.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt0 INNER JOIN rt0 ON (((((((vt1.c0)AND(vt1.c1)))OR(rt0.c2)), ((rt0.c0)+(vt1.c0)), ((((((((vt1.c1)OR(rt0.c0)))OR(vt1.c1)))AND(rt0.c0)))AND(rt0.c0))))>(((NOT (NULL)), ((rt0.c1)-(vt1.c1)), ((((rt0.c2)AND(rt0.c2)))AND(vt1.c0))))) CROSS JOIN vt1 ON HEX(DISTINCT ((vt1.c0)<=(vt1.c1))) WHERE ((NOT (NULLIF((rt0.c1 IN (vt0.c0)), (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))))) UNION SELECT DISTINCT vt1.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt0 INNER JOIN rt0 ON (((((((vt1.c0)AND(vt1.c1)))OR(rt0.c2)), ((rt0.c0)+(vt1.c0)), ((((((((vt1.c1)OR(rt0.c0)))OR(vt1.c1)))AND(rt0.c0)))AND(rt0.c0))))>(((NOT (NULL)), ((rt0.c1)-(vt1.c1)), ((((rt0.c2)AND(rt0.c2)))AND(vt1.c0))))) CROSS JOIN vt1 ON HEX(DISTINCT ((vt1.c0)<=(vt1.c1))) WHERE (((NULLIF((rt0.c1 IN (vt0.c0)), (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))) ISNULL));
SELECT DISTINCT vt1.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt0 INNER JOIN rt0 ON (((((((vt1.c0)AND(vt1.c1)))OR(rt0.c2)), ((rt0.c0)+(vt1.c0)), ((((((((vt1.c1)OR(rt0.c0)))OR(vt1.c1)))AND(rt0.c0)))AND(rt0.c0))))>(((NOT (NULL)), ((rt0.c1)-(vt1.c1)), ((((rt0.c2)AND(rt0.c2)))AND(vt1.c0))))) CROSS JOIN vt1 ON HEX(DISTINCT ((vt1.c0)<=(vt1.c1)));
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt0 WHERE (((((((((CAST(rt0.c1 AS INTEGER))AND(vt0.c0 COLLATE NOCASE)))OR((((rt0.c1))<(('\n?+ena5'))))))OR(CASE vt0.c0  WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c0 END)))AND(CAST(rt0.c0 AS INTEGER)))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt0 WHERE ((NOT (((((((((CAST(rt0.c1 AS INTEGER))AND(vt0.c0 COLLATE NOCASE)))OR((((rt0.c1))<(('\n?+ena5'))))))OR(CASE vt0.c0  WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c0 END)))AND(CAST(rt0.c0 AS INTEGER)))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt0 WHERE (((((((((((CAST(rt0.c1 AS INTEGER))AND(vt0.c0 COLLATE NOCASE)))OR((((rt0.c1))<(('\n?+ena5'))))))OR(CASE vt0.c0  WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c0 END)))AND(CAST(rt0.c0 AS INTEGER)))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING (NOT (SUM(TOTAL(COUNT(MIN(GROUP_CONCAT(MAX(vt1.c0)))))))) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING (NOT ((NOT (SUM(TOTAL(COUNT(MIN(GROUP_CONCAT(MAX(vt1.c0)))))))))) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING (((NOT (SUM(TOTAL(COUNT(MIN(GROUP_CONCAT(MAX(vt1.c0))))))))) ISNULL);
SELECT vt1.c0, vt0.c0 FROM vt1, rt0, vt0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, rt0, vt0 WHERE (rt0.c2) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt1, rt0, vt0 WHERE ((NOT (rt0.c2))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt1, rt0, vt0 WHERE (((rt0.c2) ISNULL));
SELECT vt1.c0, vt0.c0 FROM vt1, rt0, vt0;
SELECT DISTINCT * FROM vt0, vt1 LEFT OUTER JOIN rt0 ON rt0.c1;
SELECT DISTINCT * FROM vt0, vt1 LEFT OUTER JOIN rt0 ON rt0.c1 WHERE (((((vt1.c0)IS(vt0.c0))) NOTNULL)) UNION SELECT DISTINCT * FROM vt0, vt1 NOT INDEXED LEFT OUTER JOIN rt0 ON rt0.c1 WHERE ((NOT (((((vt1.c0)IS(vt0.c0))) NOTNULL)))) UNION SELECT DISTINCT * FROM vt0, vt1 LEFT OUTER JOIN rt0 ON rt0.c1 WHERE (((((((vt1.c0)IS(vt0.c0))) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM vt0, vt1 LEFT OUTER JOIN rt0 ON rt0.c1;
SELECT rt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c2, vt0.c0;
SELECT ALL rt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0 WHERE (CAST(rt0.c1 AS REAL) COLLATE BINARY) GROUP BY rt0.c1, rt0.c2, vt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0 WHERE ((NOT (CAST(rt0.c1 AS REAL) COLLATE BINARY))) GROUP BY rt0.c1, rt0.c2, vt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0 WHERE (((CAST(rt0.c1 AS REAL) COLLATE BINARY) ISNULL)) GROUP BY rt0.c1, rt0.c2, vt0.c0;
SELECT rt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c2, vt0.c0;
SELECT ALL vt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c2 COLLATE NOCASE) IS TRUE) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c2 COLLATE NOCASE) IS TRUE) GROUP BY vt0.c0 HAVING COUNT(((AVG(GROUP_CONCAT(rt0.c1)))%(SUM(COUNT(*))))) UNION ALL SELECT vt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c2 COLLATE NOCASE) IS TRUE) GROUP BY vt0.c0 HAVING (NOT (COUNT(((AVG(GROUP_CONCAT(rt0.c1)))%(SUM(COUNT(*))))))) UNION ALL SELECT ALL vt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c2 COLLATE NOCASE) IS TRUE) GROUP BY vt0.c0 HAVING ((COUNT(((AVG(GROUP_CONCAT(rt0.c1)))%(SUM(COUNT(*)))))) ISNULL);
SELECT vt1.c0, vt1.c1, rt0.c2, rt0.c0, rt0.c1 FROM vt1, rt0, vt0;
SELECT vt1.c0, vt1.c1, rt0.c2, rt0.c0, rt0.c1 FROM vt1, rt0, vt0 WHERE (UNLIKELY(((vt1.c0) NOT BETWEEN (vt1.c0) AND (rt0.c0)))) UNION ALL SELECT ALL vt1.c0, vt1.c1, rt0.c2, rt0.c0, rt0.c1 FROM vt1, rt0, vt0 WHERE ((NOT (UNLIKELY(((vt1.c0) NOT BETWEEN (vt1.c0) AND (rt0.c0)))))) UNION ALL SELECT vt1.c0, vt1.c1, rt0.c2, rt0.c0, rt0.c1 FROM vt1, rt0, vt0 WHERE (((UNLIKELY(((vt1.c0) NOT BETWEEN (vt1.c0) AND (rt0.c0)))) ISNULL));
SELECT vt1.c0, vt1.c1, rt0.c2, rt0.c0, rt0.c1 FROM vt1, rt0, vt0;
SELECT DISTINCT vt1.c1 FROM vt1, vt0;
SELECT DISTINCT vt1.c1 FROM vt1, vt0 WHERE (CAST(CAST(NULL AS INTEGER) AS TEXT)) UNION SELECT DISTINCT vt1.c1 FROM vt1, vt0 WHERE ((NOT (CAST(CAST(NULL AS INTEGER) AS TEXT)))) UNION SELECT DISTINCT vt1.c1 FROM vt1, vt0 WHERE (((CAST(CAST(NULL AS INTEGER) AS TEXT)) ISNULL));
SELECT DISTINCT vt1.c1 FROM vt1, vt0;
SELECT ALL rt0.c0, rt0.c1, vt0.c0 FROM rt0, vt0 NOT INDEXED GROUP BY rt0.c0, rt0.c1, vt0.c0;
SELECT rt0.c0, rt0.c1, vt0.c0 FROM rt0, vt0 WHERE ((((((vt0.c0, vt0.c0, rt0.c1, rt0.c2, rt0.c0))==((rt0.c2, rt0.c0, x'', rt0.c2, vt0.c0))))OR(NULL))) GROUP BY rt0.c0, rt0.c1, vt0.c0 UNION SELECT ALL rt0.c0, rt0.c1, vt0.c0 FROM rt0, vt0 WHERE ((NOT ((((((vt0.c0, vt0.c0, rt0.c1, rt0.c2, rt0.c0))=((rt0.c2, rt0.c0, x'', rt0.c2, vt0.c0))))OR(NULL))))) GROUP BY rt0.c0, rt0.c1, vt0.c0 UNION SELECT ALL rt0.c0, rt0.c1, vt0.c0 FROM rt0, vt0 WHERE ((((((((vt0.c0, vt0.c0, rt0.c1, rt0.c2, rt0.c0))==((rt0.c2, rt0.c0, x'', rt0.c2, vt0.c0))))OR(NULL))) ISNULL)) GROUP BY rt0.c0, rt0.c1, vt0.c0;
SELECT ALL rt0.c0, rt0.c1, vt0.c0 FROM rt0, vt0 NOT INDEXED GROUP BY rt0.c0, rt0.c1, vt0.c0;
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING GROUP_CONCAT(NULL) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 NOT INDEXED GROUP BY vt1.c0, vt1.c1 HAVING (NOT (GROUP_CONCAT(NULL))) UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING ((GROUP_CONCAT(NULL)) ISNULL);
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING GROUP_CONCAT(NULL) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 NOT INDEXED GROUP BY vt1.c0, vt1.c1 HAVING (NOT (GROUP_CONCAT(NULL))) UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING ((GROUP_CONCAT(NULL)) ISNULL);
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL * FROM vt0, vt1, rt0;
SELECT ALL * FROM vt0, vt1, rt0 WHERE (((((rt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1))) BETWEEN (((rt0.c2) BETWEEN (rt0.c0) AND (vt1.c0))) AND (((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)))OR(vt1.c0)))AND(vt1.c0))))) UNION ALL SELECT * FROM vt0, vt1, rt0 WHERE ((NOT (((((rt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1))) BETWEEN (((rt0.c2) BETWEEN (rt0.c0) AND (vt1.c0))) AND (((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)))OR(vt1.c0)))AND(vt1.c0))))))) UNION ALL SELECT ALL * FROM vt0, vt1, rt0 WHERE (((((((rt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1))) BETWEEN (((rt0.c2) BETWEEN (rt0.c0) AND (vt1.c0))) AND (((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)))OR(vt1.c0)))AND(vt1.c0))))) ISNULL));
SELECT ALL * FROM vt0, vt1, rt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0))) IS TRUE)) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0))) IS TRUE)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0))) IS TRUE)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT rt0.c2, vt1.c0 FROM rt0 INNER JOIN vt0 ON (- (NULL)) LEFT OUTER JOIN vt1 ON (NOT (CASE vt0.c0  WHEN rt0.c0 THEN vt0.c0 END)) GROUP BY rt0.c2, vt1.c0;
SELECT ALL rt0.c2, vt1.c0 FROM rt0 INNER JOIN vt0 ON (- (NULL)) LEFT OUTER JOIN vt1 ON (NOT (CASE vt0.c0  WHEN rt0.c0 THEN vt0.c0 END)) WHERE (CAST((rt0.c1 IN ()) AS BLOB)) GROUP BY rt0.c2, vt1.c0 UNION SELECT rt0.c2, vt1.c0 FROM rt0 INNER JOIN vt0 ON (- (NULL)) LEFT OUTER JOIN vt1 ON (NOT (CASE vt0.c0  WHEN rt0.c0 THEN vt0.c0 END)) WHERE ((NOT (CAST((rt0.c1 IN ()) AS BLOB)))) GROUP BY rt0.c2, vt1.c0 UNION SELECT ALL rt0.c2, vt1.c0 FROM rt0 INNER JOIN vt0 ON (- (NULL)) LEFT OUTER JOIN vt1 ON (NOT (CASE vt0.c0  WHEN rt0.c0 THEN vt0.c0 END)) WHERE (((CAST((rt0.c1 IN ()) AS BLOB)) ISNULL)) GROUP BY rt0.c2, vt1.c0;
SELECT rt0.c2, vt1.c0 FROM rt0 INNER JOIN vt0 ON (- (NULL)) LEFT OUTER JOIN vt1 ON (NOT (CASE vt0.c0  WHEN rt0.c0 THEN vt0.c0 END)) GROUP BY rt0.c2, vt1.c0;
SELECT rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0 HAVING MIN(((COUNT(COUNT(*)))%(COUNT(GROUP_CONCAT(rt0.c1))))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (MIN(((COUNT(COUNT(*)))%(COUNT(GROUP_CONCAT(rt0.c1))))))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0 HAVING ((MIN(((COUNT(COUNT(*)))%(COUNT(GROUP_CONCAT(rt0.c1)))))) ISNULL);
SELECT ALL vt1.c1, vt1.c0, rt0.c0 FROM vt1 CROSS JOIN vt0 ON (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 END IN ()) LEFT OUTER JOIN rt0 ON ((((((rt0.c2)IS(rt0.c1)))AND(NULL)))OR(x''));
SELECT ALL vt1.c1, vt1.c0, rt0.c0 FROM vt1 CROSS JOIN vt0 ON (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 END IN ()) LEFT OUTER JOIN rt0 ON ((((((rt0.c2)IS(rt0.c1)))AND(NULL)))OR(x'')) WHERE ((((rt0.c1, ((rt0.c0)<(vt1.c1)), ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))))>((((vt1.c1)<=(rt0.c1)), vt0.c0, (~ (rt0.c1)))))) UNION ALL SELECT vt1.c1, vt1.c0, rt0.c0 FROM vt1 CROSS JOIN vt0 ON (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 END IN ()) LEFT OUTER JOIN rt0 ON ((((((rt0.c2)IS(rt0.c1)))AND(NULL)))OR(x'')) WHERE ((NOT ((((rt0.c1, ((rt0.c0)<(vt1.c1)), ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))))>((((vt1.c1)<=(rt0.c1)), vt0.c0, (~ (rt0.c1)))))))) UNION ALL SELECT ALL vt1.c1, vt1.c0, rt0.c0 FROM vt1 CROSS JOIN vt0 ON (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 END IN ()) LEFT OUTER JOIN rt0 ON ((((((rt0.c2)IS(rt0.c1)))AND(NULL)))OR(x'')) WHERE ((((((rt0.c1, ((rt0.c0)<(vt1.c1)), ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))))>((((vt1.c1)<=(rt0.c1)), vt0.c0, (~ (rt0.c1)))))) ISNULL));
SELECT ALL vt1.c1, vt1.c0, rt0.c0 FROM vt1 CROSS JOIN vt0 ON (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 END IN ()) LEFT OUTER JOIN rt0 ON ((((((rt0.c2)IS(rt0.c1)))AND(NULL)))OR(x''));
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (HEX(((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (HEX(((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((HEX(((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt1.c1, rt0.c0, vt0.c0, rt0.c2, vt1.c0 FROM vt1, vt0 NATURAL JOIN rt0 GROUP BY vt1.c1, rt0.c0, vt0.c0, rt0.c2, vt1.c0;
SELECT ALL vt1.c1, rt0.c0, vt0.c0, rt0.c2, vt1.c0 FROM vt1, vt0 NATURAL JOIN rt0 WHERE (TYPEOF(x'')) GROUP BY vt1.c1, rt0.c0, vt0.c0, rt0.c2, vt1.c0 UNION SELECT vt1.c1, rt0.c0, vt0.c0, rt0.c2, vt1.c0 FROM vt1, vt0 NATURAL JOIN rt0 WHERE ((NOT (TYPEOF(x'')))) GROUP BY vt1.c1, rt0.c0, vt0.c0, rt0.c2, vt1.c0 UNION SELECT vt1.c1, rt0.c0, vt0.c0, rt0.c2, vt1.c0 FROM vt1, vt0 NATURAL JOIN rt0 WHERE (((TYPEOF(x'')) ISNULL)) GROUP BY vt1.c1, rt0.c0, vt0.c0, rt0.c2, vt1.c0;
SELECT vt1.c1, rt0.c0, vt0.c0, rt0.c2, vt1.c0 FROM vt1, vt0 NATURAL JOIN rt0 GROUP BY vt1.c1, rt0.c0, vt0.c0, rt0.c2, vt1.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((NULL) ISNULL))&(CASE MAX(MAX(vt0.c0))  WHEN COUNT(*) THEN vt0.c0 ELSE 0.547623709171314 END)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((((NULL) ISNULL))&(CASE MAX(MAX(vt0.c0))  WHEN COUNT(*) THEN vt0.c0 ELSE 0.547623709171314 END)))) UNION ALL SELECT vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c0 HAVING ((((((NULL) ISNULL))&(CASE MAX(MAX(vt0.c0))  WHEN COUNT(*) THEN vt0.c0 ELSE 0.547623709171314 END))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((NOT (rt0.c1))) NOTNULL)) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((NOT (rt0.c1))) NOTNULL)))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((((NOT (rt0.c1))) NOTNULL)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1, vt0.c0, vt1.c1, rt0.c0 FROM rt0 LEFT OUTER JOIN vt1 ON (0.2940748156141405 IN (vt0.c0, ((vt1.c1)&(rt0.c0)))) CROSS JOIN vt0 ON ((((rt0.c0)==(rt0.c1)))%(CAST(vt1.c1 AS REAL)));
SELECT DISTINCT rt0.c2, rt0.c1, vt0.c0, vt1.c1, rt0.c0 FROM rt0 LEFT OUTER JOIN vt1 ON (0.2940748156141405 IN (vt0.c0, ((vt1.c1)&(rt0.c0)))) CROSS JOIN vt0 ON ((((rt0.c0)==(rt0.c1)))%(CAST(vt1.c1 AS REAL))) WHERE (((((0.2618013118741046) BETWEEN (rt0.c1) AND (vt1.c0)))>>(((((((((vt1.c0)OR(x'0e1d')))OR(rt0.c0)))OR(vt1.c1)))OR(rt0.c1))))) UNION SELECT DISTINCT rt0.c2, rt0.c1, vt0.c0, vt1.c1, rt0.c0 FROM rt0 LEFT OUTER JOIN vt1 ON (0.2940748156141405 IN (vt0.c0, ((vt1.c1)&(rt0.c0)))) CROSS JOIN vt0 ON ((((rt0.c0)==(rt0.c1)))%(CAST(vt1.c1 AS REAL))) WHERE ((NOT (((((0.2618013118741046) BETWEEN (rt0.c1) AND (vt1.c0)))>>(((((((((vt1.c0)OR(x'0e1d')))OR(rt0.c0)))OR(vt1.c1)))OR(rt0.c1))))))) UNION SELECT DISTINCT rt0.c2, rt0.c1, vt0.c0, vt1.c1, rt0.c0 FROM rt0 NOT INDEXED LEFT OUTER JOIN vt1 ON (0.2940748156141405 IN (vt0.c0, ((vt1.c1)&(rt0.c0)))) CROSS JOIN vt0 ON ((((rt0.c0)=(rt0.c1)))%(CAST(vt1.c1 AS REAL))) WHERE (((((((0.2618013118741046) BETWEEN (rt0.c1) AND (vt1.c0)))>>(((((((((vt1.c0)OR(x'0e1d')))OR(rt0.c0)))OR(vt1.c1)))OR(rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, vt0.c0, vt1.c1, rt0.c0 FROM rt0 LEFT OUTER JOIN vt1 ON (0.2940748156141405 IN (vt0.c0, ((vt1.c1)&(rt0.c0)))) CROSS JOIN vt0 ON ((((rt0.c0)==(rt0.c1)))%(CAST(vt1.c1 AS REAL)));
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 WHERE (((((vt1.c1)OR(vt1.c1)))OR(vt1.c0)) COLLATE BINARY) GROUP BY vt1.c0, vt1.c1 UNION SELECT vt1.c0, vt1.c1 FROM vt1 WHERE ((NOT (((((vt1.c1)OR(vt1.c1)))OR(vt1.c0)) COLLATE BINARY))) GROUP BY vt1.c0, vt1.c1 UNION SELECT vt1.c0, vt1.c1 FROM vt1 WHERE (((((((vt1.c1)OR(vt1.c1)))OR(vt1.c0)) COLLATE BINARY) ISNULL)) GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (MAX(rt0.c0) IN ()) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT ((MAX(rt0.c0) IN ()))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (((MAX(rt0.c0) IN ())) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (MAX(rt0.c0) IN ()) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT ((MAX(rt0.c0) IN ()))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (((MAX(rt0.c0) IN ())) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL * FROM vt1, rt0, vt0;
SELECT ALL * FROM vt1, rt0, vt0 WHERE (NULL) UNION ALL SELECT ALL * FROM vt1, rt0, vt0 WHERE ((NOT (NULL))) UNION ALL SELECT ALL * FROM vt1, rt0, vt0 WHERE (((NULL) ISNULL));
SELECT ALL * FROM vt1, rt0, vt0;
SELECT DISTINCT vt1.c1, rt0.c0, rt0.c2, rt0.c1 FROM vt1, rt0 LEFT OUTER JOIN vt0 ON (((vt1.c1)) NOT BETWEEN ((rt0.c0 COLLATE RTRIM)) AND ((((((vt1.c0)OR(x'6460')))OR(vt1.c0)))));
SELECT DISTINCT vt1.c1, rt0.c0, rt0.c2, rt0.c1 FROM vt1, rt0 LEFT OUTER JOIN vt0 ON (((vt1.c1)) NOT BETWEEN ((rt0.c0 COLLATE RTRIM)) AND ((((((vt1.c0)OR(x'6460')))OR(vt1.c0))))) WHERE (((((((x'cdc8')OR(vt1.c0)))OR(rt0.c1)))>=(((rt0.c1) ISNULL)))) UNION SELECT DISTINCT vt1.c1, rt0.c0, rt0.c2, rt0.c1 FROM vt1, rt0 LEFT OUTER JOIN vt0 ON (((vt1.c1)) NOT BETWEEN ((rt0.c0 COLLATE RTRIM)) AND ((((((vt1.c0)OR(x'6460')))OR(vt1.c0))))) WHERE ((NOT (((((((x'cdc8')OR(vt1.c0)))OR(rt0.c1)))>=(((rt0.c1) ISNULL)))))) UNION SELECT DISTINCT vt1.c1, rt0.c0, rt0.c2, rt0.c1 FROM vt1, rt0 LEFT OUTER JOIN vt0 ON (((vt1.c1)) NOT BETWEEN ((rt0.c0 COLLATE RTRIM)) AND ((((((vt1.c0)OR(x'6460')))OR(vt1.c0))))) WHERE (((((((((x'cdc8')OR(vt1.c0)))OR(rt0.c1)))>=(((rt0.c1) ISNULL)))) ISNULL));
SELECT DISTINCT vt1.c1, rt0.c0, rt0.c2, rt0.c1 FROM vt1, rt0 LEFT OUTER JOIN vt0 ON (((vt1.c1)) NOT BETWEEN ((rt0.c0 COLLATE RTRIM)) AND ((((((vt1.c0)OR(x'6460')))OR(vt1.c0)))));
SELECT rt0.c1, rt0.c2, vt0.c0, vt1.c1 FROM vt1, vt0, rt0 GROUP BY rt0.c1, rt0.c2, vt0.c0, vt1.c1;
SELECT ALL rt0.c1, rt0.c2, vt0.c0, vt1.c1 FROM vt1, vt0, rt0 WHERE (((rt0.c0)GLOB('423811796'))) GROUP BY rt0.c1, rt0.c2, vt0.c0, vt1.c1 UNION SELECT ALL rt0.c1, rt0.c2, vt0.c0, vt1.c1 FROM vt1, vt0, rt0 WHERE ((NOT (((rt0.c0)GLOB('423811796'))))) GROUP BY rt0.c1, rt0.c2, vt0.c0, vt1.c1 UNION SELECT rt0.c1, rt0.c2, vt0.c0, vt1.c1 FROM vt1, vt0, rt0 WHERE (((((rt0.c0)GLOB('423811796'))) ISNULL)) GROUP BY rt0.c1, rt0.c2, vt0.c0, vt1.c1;
SELECT rt0.c1, rt0.c2, vt0.c0, vt1.c1 FROM vt1, vt0, rt0 GROUP BY rt0.c1, rt0.c2, vt0.c0, vt1.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING COUNT(rt0.c1) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (COUNT(rt0.c1))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((COUNT(rt0.c1)) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING COUNT(rt0.c1) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (COUNT(rt0.c1))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((COUNT(rt0.c1)) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL * FROM vt0, rt0, vt1;
SELECT * FROM vt0, rt0, vt1 WHERE (((rt0.c0)<<('DE'))) UNION ALL SELECT ALL * FROM vt0, rt0, vt1 WHERE ((NOT (((rt0.c0)<<('DE'))))) UNION ALL SELECT * FROM vt0, rt0, vt1 WHERE (((((rt0.c0)<<('DE'))) ISNULL));
SELECT ALL * FROM vt0, rt0, vt1;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (((((((rt0.c2)OR(rt0.c0)))AND(vt0.c0))) NOT BETWEEN (CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN NULL THEN x'' ELSE vt0.c0 END) AND (INSTR(rt0.c1, vt0.c0)))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (((((((rt0.c2)OR(rt0.c0)))AND(vt0.c0))) NOT BETWEEN (CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN NULL THEN x'' ELSE vt0.c0 END) AND (INSTR(rt0.c1, vt0.c0)))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((((((((rt0.c2)OR(rt0.c0)))AND(vt0.c0))) NOT BETWEEN (CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN NULL THEN x'' ELSE vt0.c0 END) AND (INSTR(rt0.c1, vt0.c0)))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT ALL rt0.c0, vt1.c1, vt1.c0, vt0.c0 FROM vt0, rt0, vt1 GROUP BY rt0.c0, vt1.c1, vt1.c0, vt0.c0;
SELECT rt0.c0, vt1.c1, vt1.c0, vt0.c0 FROM vt0, rt0, vt1 WHERE (rt0.c0) GROUP BY rt0.c0, vt1.c1, vt1.c0, vt0.c0 UNION SELECT ALL rt0.c0, vt1.c1, vt1.c0, vt0.c0 FROM vt0, rt0, vt1 WHERE ((NOT (rt0.c0))) GROUP BY rt0.c0, vt1.c1, vt1.c0, vt0.c0 UNION SELECT rt0.c0, vt1.c1, vt1.c0, vt0.c0 FROM vt0, rt0, vt1 WHERE (((rt0.c0) ISNULL)) GROUP BY rt0.c0, vt1.c1, vt1.c0, vt0.c0;
SELECT ALL rt0.c0, vt1.c1, vt1.c0, vt0.c0 FROM vt0, rt0, vt1 GROUP BY rt0.c0, vt1.c1, vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0, vt1.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt1.c1;
SELECT ALL vt1.c0, vt0.c0, vt1.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt1.c1 HAVING TOTAL(COUNT(SUM(COUNT(vt0.c0)))) UNION ALL SELECT vt1.c0, vt0.c0, vt1.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt1.c1 HAVING (NOT (TOTAL(COUNT(SUM(COUNT(vt0.c0)))))) UNION ALL SELECT vt1.c0, vt0.c0, vt1.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt1.c1 HAVING ((TOTAL(COUNT(SUM(COUNT(vt0.c0))))) ISNULL);
SELECT ALL * FROM vt0, rt0;
SELECT * FROM vt0, rt0 WHERE (((((((((UNLIKELY(DISTINCT x''))OR(((vt0.c0)||(rt0.c2)))))OR(CAST(rt0.c1 AS NUMERIC))))AND(((((((((vt0.c0)AND(rt0.c0)))AND(rt0.c2)))OR(vt0.c0)))AND(rt0.c0)))))AND(((NULL) IS TRUE)))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE ((NOT (((((((((UNLIKELY(DISTINCT x''))OR(((vt0.c0)||(rt0.c2)))))OR(CAST(rt0.c1 AS NUMERIC))))AND(((((((((vt0.c0)AND(rt0.c0)))AND(rt0.c2)))OR(vt0.c0)))AND(rt0.c0)))))AND(((NULL) IS TRUE)))))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE (((((((((((UNLIKELY(DISTINCT x''))OR(((vt0.c0)||(rt0.c2)))))OR(CAST(rt0.c1 AS NUMERIC))))AND(((((((((vt0.c0)AND(rt0.c0)))AND(rt0.c2)))OR(vt0.c0)))AND(rt0.c0)))))AND(((NULL) IS TRUE)))) ISNULL));
SELECT ALL * FROM vt0, rt0;
SELECT DISTINCT * FROM vt1, rt0 NOT INDEXED, vt0;
SELECT DISTINCT * FROM vt1, rt0, vt0 WHERE (QUOTE(vt1.c1) COLLATE BINARY) UNION SELECT DISTINCT * FROM vt1, rt0, vt0 WHERE ((NOT (QUOTE(vt1.c1) COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt1, rt0, vt0 WHERE (((QUOTE(vt1.c1) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM vt1, rt0 NOT INDEXED, vt0;
SELECT ALL rt0.c1, vt1.c0, vt1.c1, rt0.c0, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c1, vt1.c0, vt1.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, vt1.c0, vt1.c1, rt0.c0, rt0.c2 FROM rt0, vt1 WHERE (((vt1.c0)IS NOT(CAST(rt0.c2 AS BLOB)))) GROUP BY rt0.c1, vt1.c0, vt1.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, vt1.c0, vt1.c1, rt0.c0, rt0.c2 FROM rt0, vt1 WHERE ((NOT (((vt1.c0)IS NOT(CAST(rt0.c2 AS BLOB)))))) GROUP BY rt0.c1, vt1.c0, vt1.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, vt1.c0, vt1.c1, rt0.c0, rt0.c2 FROM rt0, vt1 WHERE (((((vt1.c0)IS NOT(CAST(rt0.c2 AS BLOB)))) ISNULL)) GROUP BY rt0.c1, vt1.c0, vt1.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, vt1.c0, vt1.c1, rt0.c0, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c1, vt1.c0, vt1.c1, rt0.c0, rt0.c2;
SELECT rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1 HAVING (json_remove(AVG(MAX(rt0.c2)), vt0.c0) IN (rt0.c0 COLLATE RTRIM, GROUP_CONCAT(rt0.c0))) UNION ALL SELECT rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT ((json_remove(AVG(MAX(rt0.c2)), vt0.c0) IN (rt0.c0 COLLATE RTRIM, GROUP_CONCAT(rt0.c0))))) UNION ALL SELECT rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1 HAVING (((json_remove(AVG(MAX(rt0.c2)), vt0.c0) IN (rt0.c0 COLLATE RTRIM, GROUP_CONCAT(rt0.c0)))) ISNULL);
SELECT ALL vt1.c1, rt0.c0 FROM vt0 NOT INDEXED, rt0, vt1;
SELECT vt1.c1, rt0.c0 FROM vt0, rt0, vt1 WHERE (((x'cdad7aba')*(((vt1.c0) NOT NULL)))) UNION ALL SELECT ALL vt1.c1, rt0.c0 FROM vt0, rt0, vt1 WHERE ((NOT (((x'cdad7aba')*(((vt1.c0) NOT NULL)))))) UNION ALL SELECT vt1.c1, rt0.c0 FROM vt0, rt0, vt1 WHERE (((((x'cdad7aba')*(((vt1.c0) NOT NULL)))) ISNULL));
SELECT ALL vt1.c1, rt0.c0 FROM vt0 NOT INDEXED, rt0, vt1;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0 NOT INDEXED, rt0 WHERE (NULL) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((CAST(vt1.c0 AS BLOB) IN ())) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((CAST(vt1.c0 AS BLOB) IN ())))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((CAST(vt1.c0 AS BLOB) IN ())) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt0.c2, vt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON ((CAST(rt0.c1 AS NUMERIC)) NOT BETWEEN (((rt0.c0)-(rt0.c1))) AND (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)) GROUP BY rt0.c2, vt0.c0;
SELECT ALL rt0.c2, vt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON ((CAST(rt0.c1 AS NUMERIC)) NOT BETWEEN (((rt0.c0)-(rt0.c1))) AND (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)) GROUP BY rt0.c2, vt0.c0 HAVING ((COUNT(*)) ISNULL) UNION ALL SELECT rt0.c2, vt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON ((CAST(rt0.c1 AS NUMERIC)) NOT BETWEEN (((rt0.c0)-(rt0.c1))) AND (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)) GROUP BY rt0.c2, vt0.c0 HAVING (NOT (((COUNT(*)) ISNULL))) UNION ALL SELECT ALL rt0.c2, vt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON ((CAST(rt0.c1 AS NUMERIC)) NOT BETWEEN (((rt0.c0)-(rt0.c1))) AND (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)) GROUP BY rt0.c2, vt0.c0 HAVING ((((COUNT(*)) ISNULL)) ISNULL);
SELECT rt0.c2, vt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON ((CAST(rt0.c1 AS NUMERIC)) NOT BETWEEN (((rt0.c0)-(rt0.c1))) AND (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)) GROUP BY rt0.c2, vt0.c0;
SELECT ALL rt0.c2, vt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON ((CAST(rt0.c1 AS NUMERIC)) NOT BETWEEN (((rt0.c0)-(rt0.c1))) AND (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)) GROUP BY rt0.c2, vt0.c0 HAVING ((COUNT(*)) ISNULL) UNION ALL SELECT rt0.c2, vt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON ((CAST(rt0.c1 AS NUMERIC)) NOT BETWEEN (((rt0.c0)-(rt0.c1))) AND (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)) GROUP BY rt0.c2, vt0.c0 HAVING (NOT (((COUNT(*)) ISNULL))) UNION ALL SELECT ALL rt0.c2, vt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON ((CAST(rt0.c1 AS NUMERIC)) NOT BETWEEN (((rt0.c0)-(rt0.c1))) AND (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)) GROUP BY rt0.c2, vt0.c0 HAVING ((((COUNT(*)) ISNULL)) ISNULL);
SELECT rt0.c2, vt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON ((CAST(rt0.c1 AS NUMERIC)) NOT BETWEEN (((rt0.c0)-(rt0.c1))) AND (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)) GROUP BY rt0.c2, vt0.c0;
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (vt0.c0) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt1, vt0;
SELECT DISTINCT vt0.c0 FROM vt1, vt0 WHERE (((CASE vt1.c0  WHEN vt0.c0 THEN 0.4356071514379538 ELSE 0x648bc5cd END) BETWEEN (vt1.c0) AND (vt1.c0 COLLATE NOCASE))) UNION SELECT DISTINCT vt0.c0 FROM vt1, vt0 WHERE ((NOT (((CASE vt1.c0  WHEN vt0.c0 THEN 0.4356071514379538 ELSE 0X648bc5cd END) BETWEEN (vt1.c0) AND (vt1.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT vt0.c0 FROM vt1, vt0 WHERE (((((CASE vt1.c0  WHEN vt0.c0 THEN 0.4356071514379538 ELSE 0X648bc5cd END) BETWEEN (vt1.c0) AND (vt1.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt1, vt0;
SELECT ALL vt1.c1, rt0.c1, rt0.c0, vt0.c0, rt0.c2, vt1.c0 FROM vt1, vt0, rt0 GROUP BY vt1.c1, rt0.c1, rt0.c0, vt0.c0, rt0.c2, vt1.c0;
SELECT ALL vt1.c1, rt0.c1, rt0.c0, vt0.c0, rt0.c2, vt1.c0 FROM vt1, vt0, rt0 WHERE ((((((vt0.c0, vt1.c0, rt0.c1))>((rt0.c0, vt0.c0, rt0.c1))))||((+ ('*UMV'))))) GROUP BY vt1.c1, rt0.c1, rt0.c0, vt0.c0, rt0.c2, vt1.c0 UNION SELECT ALL vt1.c1, rt0.c1, rt0.c0, vt0.c0, rt0.c2, vt1.c0 FROM vt1, vt0, rt0 WHERE ((NOT ((((((vt0.c0, vt1.c0, rt0.c1))>((rt0.c0, vt0.c0, rt0.c1))))||((+ ('*UMV'))))))) GROUP BY vt1.c1, rt0.c1, rt0.c0, vt0.c0, rt0.c2, vt1.c0 UNION SELECT vt1.c1, rt0.c1, rt0.c0, vt0.c0, rt0.c2, vt1.c0 FROM vt1, vt0, rt0 WHERE ((((((((vt0.c0, vt1.c0, rt0.c1))>((rt0.c0, vt0.c0, rt0.c1))))||((+ ('*UMV'))))) ISNULL)) GROUP BY vt1.c1, rt0.c1, rt0.c0, vt0.c0, rt0.c2, vt1.c0;
SELECT ALL vt1.c1, rt0.c1, rt0.c0, vt0.c0, rt0.c2, vt1.c0 FROM vt1, vt0, rt0 GROUP BY vt1.c1, rt0.c1, rt0.c0, vt0.c0, rt0.c2, vt1.c0;
SELECT ALL vt1.c1 FROM rt0, vt1 GROUP BY vt1.c1;
SELECT vt1.c1 FROM rt0, vt1 GROUP BY vt1.c1 HAVING SUM(TOTAL(0x27243f96)) UNION ALL SELECT ALL vt1.c1 FROM rt0, vt1 GROUP BY vt1.c1 HAVING (NOT (SUM(TOTAL(0X27243f96)))) UNION ALL SELECT ALL vt1.c1 FROM rt0, vt1 GROUP BY vt1.c1 HAVING ((SUM(TOTAL(0x27243f96))) ISNULL);
SELECT ALL * FROM vt0, rt0;
SELECT * FROM vt0, rt0 WHERE (CASE (NOT (rt0.c0))  WHEN NULL THEN ((rt0.c0)<<('')) END) UNION ALL SELECT * FROM vt0, rt0 WHERE ((NOT (CASE (NOT (rt0.c0))  WHEN NULL THEN ((rt0.c0)<<('')) END))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE (((CASE (NOT (rt0.c0))  WHEN NULL THEN ((rt0.c0)<<('')) END) ISNULL));
SELECT ALL * FROM vt0, rt0;
SELECT DISTINCT rt0.c1 FROM rt0, vt0;
SELECT DISTINCT rt0.c1 FROM rt0, vt0 WHERE (((((((((((rt0.c1)%(vt0.c0)))AND(((rt0.c0)>=(rt0.c0)))))OR(((vt0.c0) NOTNULL))))OR(((rt0.c0)<(0.786966250402177)))))AND(((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c2))))) UNION SELECT DISTINCT rt0.c1 FROM rt0, vt0 WHERE ((NOT (((((((((((rt0.c1)%(vt0.c0)))AND(((rt0.c0)>=(rt0.c0)))))OR(((vt0.c0) NOTNULL))))OR(((rt0.c0)<(0.786966250402177)))))AND(((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c2))))))) UNION SELECT DISTINCT rt0.c1 FROM rt0, vt0 WHERE (((((((((((((rt0.c1)%(vt0.c0)))AND(((rt0.c0)>=(rt0.c0)))))OR(((vt0.c0) NOTNULL))))OR(((rt0.c0)<(0.786966250402177)))))AND(((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0, vt0;
SELECT ALL vt1.c0, rt0.c2, rt0.c1 FROM vt1 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c1 AS TEXT)) NOT BETWEEN (((vt1.c1)IS NOT('.B'))) AND ('0.5404081684676592')) GROUP BY vt1.c0, rt0.c2, rt0.c1;
SELECT vt1.c0, rt0.c2, rt0.c1 FROM vt1 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c1 AS TEXT)) NOT BETWEEN (((vt1.c1)IS NOT('.B'))) AND ('0.5404081684676592')) WHERE (CAST(((rt0.c2) BETWEEN (vt1.c1) AND (0.8646375115847788)) AS BLOB)) GROUP BY vt1.c0, rt0.c2, rt0.c1 UNION SELECT ALL vt1.c0, rt0.c2, rt0.c1 FROM vt1 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c1 AS TEXT)) NOT BETWEEN (((vt1.c1)IS NOT('.B'))) AND ('0.5404081684676592')) WHERE ((NOT (CAST(((rt0.c2) BETWEEN (vt1.c1) AND (0.8646375115847788)) AS BLOB)))) GROUP BY vt1.c0, rt0.c2, rt0.c1 UNION SELECT ALL vt1.c0, rt0.c2, rt0.c1 FROM vt1 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c1 AS TEXT)) NOT BETWEEN (((vt1.c1)IS NOT('.B'))) AND ('0.5404081684676592')) WHERE (((CAST(((rt0.c2) BETWEEN (vt1.c1) AND (0.8646375115847788)) AS BLOB)) ISNULL)) GROUP BY vt1.c0, rt0.c2, rt0.c1;
SELECT ALL vt1.c0, rt0.c2, rt0.c1 FROM vt1 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c1 AS TEXT)) NOT BETWEEN (((vt1.c1)IS NOT('.B'))) AND ('0.5404081684676592')) GROUP BY vt1.c0, rt0.c2, rt0.c1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((NULL)<=((((vt0.c0, GROUP_CONCAT(SUM(MIN(vt0.c0))), vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, MIN(TOTAL(MAX(GROUP_CONCAT(vt0.c0)))))) AND ((COUNT(*), vt0.c0, COUNT(*)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((NULL)<=((((vt0.c0, GROUP_CONCAT(SUM(MIN(vt0.c0))), vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, MIN(TOTAL(MAX(GROUP_CONCAT(vt0.c0)))))) AND ((COUNT(*), vt0.c0, COUNT(*)))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((NULL)<=((((vt0.c0, GROUP_CONCAT(SUM(MIN(vt0.c0))), vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, MIN(TOTAL(MAX(GROUP_CONCAT(vt0.c0)))))) AND ((COUNT(*), vt0.c0, COUNT(*))))))) ISNULL);
SELECT * FROM vt1, vt0 RIGHT OUTER JOIN rt0 ON '1983111472';
SELECT * FROM vt1, vt0 RIGHT OUTER JOIN rt0 ON '1983111472' WHERE (CASE WHEN ((((((((x'30bb')AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)))AND(vt0.c0)) THEN ((rt0.c0)AND(vt1.c0)) WHEN ((vt0.c0) ISNULL) THEN (vt1.c1 IN (rt0.c1)) WHEN (NOT (vt1.c1)) THEN 0xffffffff87852029 ELSE PRINTF(rt0.c1) END) UNION ALL SELECT * FROM vt1, vt0 RIGHT OUTER JOIN rt0 ON '1983111472' WHERE ((NOT (CASE WHEN ((((((((x'30bb')AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)))AND(vt0.c0)) THEN ((rt0.c0)AND(vt1.c0)) WHEN ((vt0.c0) ISNULL) THEN (vt1.c1 IN (rt0.c1)) WHEN (NOT (vt1.c1)) THEN 0Xffffffff87852029 ELSE PRINTF(rt0.c1) END))) UNION ALL SELECT * FROM vt1, vt0 RIGHT OUTER JOIN rt0 ON '1983111472' WHERE (((CASE WHEN ((((((((x'30bb')AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)))AND(vt0.c0)) THEN ((rt0.c0)AND(vt1.c0)) WHEN ((vt0.c0) ISNULL) THEN (vt1.c1 IN (rt0.c1)) WHEN (NOT (vt1.c1)) THEN 0Xffffffff87852029 ELSE PRINTF(rt0.c1) END) ISNULL));
SELECT * FROM vt1, vt0 RIGHT OUTER JOIN rt0 ON '1983111472';
SELECT DISTINCT vt1.c0, rt0.c1 FROM vt1, rt0;
SELECT DISTINCT vt1.c0, rt0.c1 FROM vt1, rt0 WHERE (CASE WHEN ((vt1.c1)!=(rt0.c1)) THEN ((rt0.c2)IS NOT(rt0.c1)) END) UNION SELECT DISTINCT vt1.c0, rt0.c1 FROM vt1, rt0 WHERE ((NOT (CASE WHEN ((vt1.c1)<>(rt0.c1)) THEN ((rt0.c2)IS NOT(rt0.c1)) END))) UNION SELECT DISTINCT vt1.c0, rt0.c1 FROM vt1, rt0 WHERE (((CASE WHEN ((vt1.c1)!=(rt0.c1)) THEN ((rt0.c2)IS NOT(rt0.c1)) END) ISNULL));
SELECT DISTINCT vt1.c0, rt0.c1 FROM vt1, rt0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE (CASE WHEN CAST(vt1.c0 AS NUMERIC) THEN (((vt1.c1, vt1.c1, vt1.c0, x'', vt1.c1)) BETWEEN ((vt1.c1, vt1.c0, vt1.c1, vt1.c0, 0.04999093184019898)) AND ((vt1.c0, vt1.c1, vt1.c1, vt1.c0, vt1.c0))) WHEN vt1.c0 THEN ((vt1.c1)=(vt1.c1)) WHEN (((NULL, vt1.c0, vt1.c0))<=((vt1.c0, vt1.c1, vt1.c0))) THEN ((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)) END) GROUP BY vt1.c1, vt1.c0 UNION SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE ((NOT (CASE WHEN CAST(vt1.c0 AS NUMERIC) THEN (((vt1.c1, vt1.c1, vt1.c0, x'', vt1.c1)) BETWEEN ((vt1.c1, vt1.c0, vt1.c1, vt1.c0, 0.04999093184019898)) AND ((vt1.c0, vt1.c1, vt1.c1, vt1.c0, vt1.c0))) WHEN vt1.c0 THEN ((vt1.c1)=(vt1.c1)) WHEN (((NULL, vt1.c0, vt1.c0))<=((vt1.c0, vt1.c1, vt1.c0))) THEN ((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)) END))) GROUP BY vt1.c1, vt1.c0 UNION SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE (((CASE WHEN CAST(vt1.c0 AS NUMERIC) THEN (((vt1.c1, vt1.c1, vt1.c0, x'', vt1.c1)) BETWEEN ((vt1.c1, vt1.c0, vt1.c1, vt1.c0, 0.04999093184019898)) AND ((vt1.c0, vt1.c1, vt1.c1, vt1.c0, vt1.c0))) WHEN vt1.c0 THEN ((vt1.c1)=(vt1.c1)) WHEN (((NULL, vt1.c0, vt1.c0))<=((vt1.c0, vt1.c1, vt1.c0))) THEN ((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)) END) ISNULL)) GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt0.c0, vt1.c1, vt1.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON CASE WHEN (((vt0.c0))<>((vt0.c0))) THEN (vt1.c0 IN (vt1.c1)) ELSE ((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END GROUP BY vt0.c0, vt1.c1, vt1.c0;
SELECT ALL vt0.c0, vt1.c1, vt1.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON CASE WHEN (((vt0.c0))!=((vt0.c0))) THEN (vt1.c0 IN (vt1.c1)) ELSE ((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END GROUP BY vt0.c0, vt1.c1, vt1.c0 HAVING MIN(((TOTAL(NULL))>(AVG(vt1.c0)))) UNION ALL SELECT ALL vt0.c0, vt1.c1, vt1.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON CASE WHEN (((vt0.c0))!=((vt0.c0))) THEN (vt1.c0 IN (vt1.c1)) ELSE ((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END GROUP BY vt0.c0, vt1.c1, vt1.c0 HAVING (NOT (MIN(((TOTAL(NULL))>(AVG(vt1.c0)))))) UNION ALL SELECT vt0.c0, vt1.c1, vt1.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON CASE WHEN (((vt0.c0))!=((vt0.c0))) THEN (vt1.c0 IN (vt1.c1)) ELSE ((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END GROUP BY vt0.c0, vt1.c1, vt1.c0 HAVING ((MIN(((TOTAL(NULL))>(AVG(vt1.c0))))) ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c0 FROM vt0, rt0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM vt0, rt0 WHERE (ABS(rt0.c1) COLLATE RTRIM) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM vt0, rt0 WHERE ((NOT (ABS(rt0.c1) COLLATE RTRIM))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM vt0, rt0 WHERE (((ABS(rt0.c1) COLLATE RTRIM) ISNULL));
SELECT rt0.c1, rt0.c2, rt0.c0 FROM vt0, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((+ (rt0.c0))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((+ (rt0.c0))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((+ (rt0.c0))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CAST(((vt0.c0)>=(vt0.c0)) AS BLOB)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CAST(((vt0.c0)>=(vt0.c0)) AS BLOB)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST(((vt0.c0)>=(vt0.c0)) AS BLOB)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt1.c1, vt1.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt1.c0 HAVING AVG('') UNION ALL SELECT vt1.c1, vt1.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (AVG(''))) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((AVG('')) ISNULL);
SELECT vt1.c1, vt1.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt1.c0 HAVING AVG('') UNION ALL SELECT vt1.c1, vt1.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (AVG(''))) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((AVG('')) ISNULL);
SELECT vt1.c1, vt1.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt1.c0;
SELECT * FROM vt1 NATURAL JOIN rt0;
SELECT * FROM vt1 NATURAL JOIN rt0 WHERE (((((0.7369144219552708) IS TRUE)) ISNULL)) UNION ALL SELECT * FROM vt1 NATURAL JOIN rt0 WHERE ((NOT (((((0.7369144219552708) IS TRUE)) ISNULL)))) UNION ALL SELECT * FROM vt1 NATURAL JOIN rt0 WHERE (((((((0.7369144219552708) IS TRUE)) ISNULL)) ISNULL));
SELECT * FROM vt1 NATURAL JOIN rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c0) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL vt0.c0, rt0.c1, vt1.c0, rt0.c0 FROM vt1, vt0 NATURAL JOIN rt0 GROUP BY vt0.c0, rt0.c1, vt1.c0, rt0.c0;
SELECT vt0.c0, rt0.c1, vt1.c0, rt0.c0 FROM vt1, vt0 NATURAL JOIN rt0 WHERE (((vt1.c1)<>((~ (rt0.c2))))) GROUP BY vt0.c0, rt0.c1, vt1.c0, rt0.c0 UNION SELECT ALL vt0.c0, rt0.c1, vt1.c0, rt0.c0 FROM vt1, vt0 NATURAL JOIN rt0 WHERE ((NOT (((vt1.c1)!=((~ (rt0.c2))))))) GROUP BY vt0.c0, rt0.c1, vt1.c0, rt0.c0 UNION SELECT vt0.c0, rt0.c1, vt1.c0, rt0.c0 FROM vt1, vt0 NATURAL JOIN rt0 WHERE (((((vt1.c1)!=((~ (rt0.c2))))) ISNULL)) GROUP BY vt0.c0, rt0.c1, vt1.c0, rt0.c0;
SELECT ALL vt0.c0, rt0.c1, vt1.c0, rt0.c0 FROM vt1, vt0 NATURAL JOIN rt0 GROUP BY vt0.c0, rt0.c1, vt1.c0, rt0.c0;
SELECT vt1.c1, vt1.c0, rt0.c0 FROM vt1 INNER JOIN rt0 ON rt0.c0 GROUP BY vt1.c1, vt1.c0, rt0.c0;
SELECT ALL vt1.c1, vt1.c0, rt0.c0 FROM vt1 INNER JOIN rt0 ON rt0.c0 GROUP BY vt1.c1, vt1.c0, rt0.c0 HAVING MIN((NOT (MIN(COUNT(rt0.c2))))) UNION ALL SELECT vt1.c1, vt1.c0, rt0.c0 FROM vt1 INNER JOIN rt0 ON rt0.c0 GROUP BY vt1.c1, vt1.c0, rt0.c0 HAVING (NOT (MIN((NOT (MIN(COUNT(rt0.c2))))))) UNION ALL SELECT vt1.c1, vt1.c0, rt0.c0 FROM vt1 INNER JOIN rt0 ON rt0.c0 GROUP BY vt1.c1, vt1.c0, rt0.c0 HAVING ((MIN((NOT (MIN(COUNT(rt0.c2)))))) ISNULL);
SELECT ALL TOTAL(((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) IS TRUE)) FROM vt0 ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) BETWEEN (((vt0.c0)GLOB(vt0.c0))) AND (vt0.c0 COLLATE NOCASE))  NULLS LAST;
SELECT ALL * FROM rt0, vt0;
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c1 COLLATE NOCASE) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((NOT (rt0.c1 COLLATE NOCASE))) UNION ALL SELECT * FROM rt0, vt0 WHERE (((rt0.c1 COLLATE NOCASE) ISNULL));
SELECT ALL * FROM rt0, vt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((('SVy!T	')OR(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))AND(((rt0.c1) IS FALSE)))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((((('SVy!T	')OR(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))AND(((rt0.c1) IS FALSE)))))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 NOT INDEXED WHERE ((((((('SVy!T	')OR(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))AND(((rt0.c1) IS FALSE)))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c1, vt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c0, rt0.c2;
SELECT rt0.c1, vt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c0, rt0.c2 HAVING rt0.c0 UNION ALL SELECT ALL rt0.c1, vt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c0, rt0.c2 HAVING (NOT (rt0.c0)) UNION ALL SELECT rt0.c1, vt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c0, rt0.c2 HAVING ((rt0.c0) ISNULL);
SELECT rt0.c1, vt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c0, rt0.c2;
SELECT rt0.c1, vt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c0, rt0.c2 HAVING rt0.c0 UNION ALL SELECT ALL rt0.c1, vt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c0, rt0.c2 HAVING (NOT (rt0.c0)) UNION ALL SELECT rt0.c1, vt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c0, rt0.c2 HAVING ((rt0.c0) ISNULL);
SELECT rt0.c1, vt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c0, rt0.c2;
SELECT * FROM vt1;
SELECT ALL * FROM vt1 WHERE ((((vt1.c0) NOT NULL) IN ((((vt1.c1))==((vt1.c0))), ((vt1.c0) BETWEEN (vt1.c0) AND (NULL))))) UNION ALL SELECT * FROM vt1 WHERE ((NOT ((((vt1.c0) NOT NULL) IN ((((vt1.c1))=((vt1.c0))), ((vt1.c0) BETWEEN (vt1.c0) AND (NULL))))))) UNION ALL SELECT * FROM vt1 WHERE ((((((vt1.c0) NOT NULL) IN ((((vt1.c1))=((vt1.c0))), ((vt1.c0) BETWEEN (vt1.c0) AND (NULL))))) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (((ABS(DISTINCT vt0.c0)) BETWEEN (((rt0.c0)OR(x'4da6'))) AND (CAST(rt0.c1 AS BLOB)))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (((ABS(DISTINCT vt0.c0)) BETWEEN (((rt0.c0)OR(x'4da6'))) AND (CAST(rt0.c1 AS BLOB)))))) UNION SELECT DISTINCT * FROM rt0 NOT INDEXED, vt0 WHERE (((((ABS(DISTINCT vt0.c0)) BETWEEN (((rt0.c0)OR(x'4da6'))) AND (CAST(rt0.c1 AS BLOB)))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT ALL rt0.c2, vt1.c0, vt1.c1, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c0, vt1.c1, rt0.c1;
SELECT ALL rt0.c2, vt1.c0, vt1.c1, rt0.c1 FROM vt1, rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0))) BETWEEN (((((vt1.c1)OR(rt0.c1)))OR(vt1.c0))) AND (CASE vt1.c0  WHEN rt0.c2 THEN vt1.c1 END))) GROUP BY rt0.c2, vt1.c0, vt1.c1, rt0.c1 UNION SELECT ALL rt0.c2, vt1.c0, vt1.c1, rt0.c1 FROM vt1, rt0 WHERE ((NOT (((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0))) BETWEEN (((((vt1.c1)OR(rt0.c1)))OR(vt1.c0))) AND (CASE vt1.c0  WHEN rt0.c2 THEN vt1.c1 END))))) GROUP BY rt0.c2, vt1.c0, vt1.c1, rt0.c1 UNION SELECT rt0.c2, vt1.c0, vt1.c1, rt0.c1 FROM vt1, rt0 WHERE (((((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0))) BETWEEN (((((vt1.c1)OR(rt0.c1)))OR(vt1.c0))) AND (CASE vt1.c0  WHEN rt0.c2 THEN vt1.c1 END))) ISNULL)) GROUP BY rt0.c2, vt1.c0, vt1.c1, rt0.c1;
SELECT ALL rt0.c2, vt1.c0, vt1.c1, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c0, vt1.c1, rt0.c1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING HEX(DISTINCT CAST(TOTAL(MIN(GROUP_CONCAT(vt0.c0))) AS BLOB)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (HEX(DISTINCT CAST(TOTAL(MIN(GROUP_CONCAT(vt0.c0))) AS BLOB)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((HEX(DISTINCT CAST(TOTAL(MIN(GROUP_CONCAT(vt0.c0))) AS BLOB))) ISNULL);
SELECT ALL * FROM rt0, vt1, vt0;
SELECT * FROM rt0, vt1, vt0 WHERE ((((+ (vt0.c0))) ISNULL)) UNION ALL SELECT ALL * FROM rt0, vt1, vt0 NOT INDEXED WHERE ((NOT ((((+ (vt0.c0))) ISNULL)))) UNION ALL SELECT ALL * FROM rt0, vt1, vt0 WHERE ((((((+ (vt0.c0))) ISNULL)) ISNULL));
SELECT ALL * FROM rt0, vt1, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0) IS FALSE)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((vt0.c0) IS FALSE)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt1.c1, vt0.c0 FROM vt1 INNER JOIN vt0 ON LIKELIHOOD(((vt1.c1)<>(vt1.c1)), 0.9727516806610258) GROUP BY vt1.c1, vt0.c0;
SELECT vt1.c1, vt0.c0 FROM vt1 INNER JOIN vt0 ON LIKELIHOOD(((vt1.c1)<>(vt1.c1)), 0.9727516806610258) WHERE (((966583103)%((('-1673259002')-(vt0.c0))))) GROUP BY vt1.c1, vt0.c0 UNION SELECT vt1.c1, vt0.c0 FROM vt1 INNER JOIN vt0 ON LIKELIHOOD(((vt1.c1)<>(vt1.c1)), 0.9727516806610258) WHERE ((NOT (((966583103)%((('-1673259002')-(vt0.c0))))))) GROUP BY vt1.c1, vt0.c0 UNION SELECT ALL vt1.c1, vt0.c0 FROM vt1 INNER JOIN vt0 ON LIKELIHOOD(((vt1.c1)<>(vt1.c1)), 0.9727516806610258) WHERE (((((966583103)%((('-1673259002')-(vt0.c0))))) ISNULL)) GROUP BY vt1.c1, vt0.c0;
SELECT vt1.c1, vt0.c0 FROM vt1 INNER JOIN vt0 ON LIKELIHOOD(((vt1.c1)<>(vt1.c1)), 0.9727516806610258) GROUP BY vt1.c1, vt0.c0;
SELECT rt0.c2, rt0.c0, vt0.c0, vt1.c1, rt0.c1, vt1.c0 FROM rt0, vt0 INNER JOIN vt1 ON CASE WHEN rt0.c0 COLLATE BINARY THEN CAST(vt1.c0 AS TEXT) WHEN '' COLLATE RTRIM THEN CASE WHEN '435468171' THEN vt0.c0 ELSE rt0.c2 END WHEN ((((rt0.c1)OR(vt1.c0)))AND(vt0.c0)) THEN CAST(rt0.c1 AS NUMERIC) END GROUP BY rt0.c2, rt0.c0, vt0.c0, vt1.c1, rt0.c1, vt1.c0;
SELECT ALL rt0.c2, rt0.c0, vt0.c0, vt1.c1, rt0.c1, vt1.c0 FROM rt0, vt0 INNER JOIN vt1 ON CASE WHEN rt0.c0 COLLATE BINARY THEN CAST(vt1.c0 AS TEXT) WHEN '' COLLATE RTRIM THEN CASE WHEN '435468171' THEN vt0.c0 ELSE rt0.c2 END WHEN ((((rt0.c1)OR(vt1.c0)))AND(vt0.c0)) THEN CAST(rt0.c1 AS NUMERIC) END GROUP BY rt0.c2, rt0.c0, vt0.c0, vt1.c1, rt0.c1, vt1.c0 HAVING AVG(TOTAL(x'')) UNION ALL SELECT ALL rt0.c2, rt0.c0, vt0.c0, vt1.c1, rt0.c1, vt1.c0 FROM rt0, vt0 INNER JOIN vt1 ON CASE WHEN rt0.c0 COLLATE BINARY THEN CAST(vt1.c0 AS TEXT) WHEN '' COLLATE RTRIM THEN CASE WHEN '435468171' THEN vt0.c0 ELSE rt0.c2 END WHEN ((((rt0.c1)OR(vt1.c0)))AND(vt0.c0)) THEN CAST(rt0.c1 AS NUMERIC) END GROUP BY rt0.c2, rt0.c0, vt0.c0, vt1.c1, rt0.c1, vt1.c0 HAVING (NOT (AVG(TOTAL(x'')))) UNION ALL SELECT ALL rt0.c2, rt0.c0, vt0.c0, vt1.c1, rt0.c1, vt1.c0 FROM rt0, vt0 INNER JOIN vt1 ON CASE WHEN rt0.c0 COLLATE BINARY THEN CAST(vt1.c0 AS TEXT) WHEN '' COLLATE RTRIM THEN CASE WHEN '435468171' THEN vt0.c0 ELSE rt0.c2 END WHEN ((((rt0.c1)OR(vt1.c0)))AND(vt0.c0)) THEN CAST(rt0.c1 AS NUMERIC) END GROUP BY rt0.c2, rt0.c0, vt0.c0, vt1.c1, rt0.c1, vt1.c0 HAVING ((AVG(TOTAL(x''))) ISNULL);
SELECT * FROM vt0 NATURAL JOIN vt1;
SELECT * FROM vt0 NATURAL JOIN vt1 WHERE (0.7873009279103074) UNION ALL SELECT ALL * FROM vt0 NATURAL JOIN vt1 WHERE ((NOT (0.7873009279103074))) UNION ALL SELECT ALL * FROM vt0 NATURAL JOIN vt1 WHERE (((0.7873009279103074) ISNULL));
SELECT * FROM vt0 NATURAL JOIN vt1;
SELECT DISTINCT vt0.c0, rt0.c2 FROM rt0, vt0;
SELECT DISTINCT vt0.c0, rt0.c2 FROM rt0, vt0 WHERE (((((rt0.c2)|(x'')))IS(rt0.c1))) UNION SELECT DISTINCT vt0.c0, rt0.c2 FROM rt0, vt0 WHERE ((NOT (((((rt0.c2)|(x'')))IS(rt0.c1))))) UNION SELECT DISTINCT vt0.c0, rt0.c2 FROM rt0, vt0 WHERE (((((((rt0.c2)|(x'')))IS(rt0.c1))) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c2 FROM rt0, vt0;
SELECT vt1.c1, vt0.c0, vt1.c0 FROM vt0 CROSS JOIN vt1 ON LIKELIHOOD(DISTINCT ((vt0.c0)<<(vt0.c0)), 0.25606749711503507) GROUP BY vt1.c1, vt0.c0, vt1.c0;
SELECT vt1.c1, vt0.c0, vt1.c0 FROM vt0 CROSS JOIN vt1 ON LIKELIHOOD(DISTINCT ((vt0.c0)<<(vt0.c0)), 0.25606749711503507) WHERE (((((vt0.c0)>=(vt1.c0))) BETWEEN (((((vt0.c0)AND(vt1.c1)))AND(vt1.c1))) AND (((vt0.c0) IS TRUE)))) GROUP BY vt1.c1, vt0.c0, vt1.c0 UNION SELECT ALL vt1.c1, vt0.c0, vt1.c0 FROM vt0 CROSS JOIN vt1 ON LIKELIHOOD(DISTINCT ((vt0.c0)<<(vt0.c0)), 0.25606749711503507) WHERE ((NOT (((((vt0.c0)>=(vt1.c0))) BETWEEN (((((vt0.c0)AND(vt1.c1)))AND(vt1.c1))) AND (((vt0.c0) IS TRUE)))))) GROUP BY vt1.c1, vt0.c0, vt1.c0 UNION SELECT vt1.c1, vt0.c0, vt1.c0 FROM vt0 CROSS JOIN vt1 ON LIKELIHOOD(DISTINCT ((vt0.c0)<<(vt0.c0)), 0.25606749711503507) WHERE (((((((vt0.c0)>=(vt1.c0))) BETWEEN (((((vt0.c0)AND(vt1.c1)))AND(vt1.c1))) AND (((vt0.c0) IS TRUE)))) ISNULL)) GROUP BY vt1.c1, vt0.c0, vt1.c0;
SELECT vt1.c1, vt0.c0, vt1.c0 FROM vt0 CROSS JOIN vt1 ON LIKELIHOOD(DISTINCT ((vt0.c0)<<(vt0.c0)), 0.25606749711503507) GROUP BY vt1.c1, vt0.c0, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM rt0, vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM rt0, vt1 GROUP BY vt1.c1, vt1.c0 HAVING vt1.c0 UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM rt0, vt1 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (vt1.c0)) UNION ALL SELECT vt1.c1, vt1.c0 FROM rt0, vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((vt1.c0) ISNULL);
SELECT vt1.c1, vt1.c0 FROM rt0, vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM rt0, vt1 GROUP BY vt1.c1, vt1.c0 HAVING vt1.c0 UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM rt0, vt1 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (vt1.c0)) UNION ALL SELECT vt1.c1, vt1.c0 FROM rt0, vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((vt1.c0) ISNULL);
SELECT vt1.c1, vt1.c0 FROM rt0, vt1 GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c0, rt0.c0, vt0.c0, rt0.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN vt0 ON (((rt0.c0 IN (vt1.c1)))AND(UPPER(DISTINCT vt1.c0))) CROSS JOIN vt1 ON ABS(((((vt1.c0)AND(vt1.c1)))OR(rt0.c1)));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((((((((((vt0.c0 IN ()))OR((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, '380115915', vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))))AND(CASE vt0.c0  WHEN vt0.c0 THEN x'' WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))AND(CAST(vt0.c0 AS TEXT))))AND(((vt0.c0)%(vt0.c0)))))AND((vt0.c0 IN ()))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((((((((((((((vt0.c0 IN ()))OR((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, '380115915', vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))))AND(CASE vt0.c0  WHEN vt0.c0 THEN x'' WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))AND(CAST(vt0.c0 AS TEXT))))AND(((vt0.c0)%(vt0.c0)))))AND((vt0.c0 IN ()))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((((((((((((vt0.c0 IN ()))OR((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, '380115915', vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))))AND(CASE vt0.c0  WHEN vt0.c0 THEN x'' WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))AND(CAST(vt0.c0 AS TEXT))))AND(((vt0.c0)%(vt0.c0)))))AND((vt0.c0 IN ()))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt1.c0, vt1.c1 FROM vt0 LEFT OUTER JOIN vt1 ON CAST((((vt1.c0, vt0.c0, '-258316883', vt1.c1, vt1.c1)) BETWEEN ((vt1.c1, vt1.c1, vt1.c0, vt1.c1, vt0.c0)) AND ((vt1.c1, vt1.c0, vt1.c1, vt1.c1, vt0.c0))) AS REAL) GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt0 LEFT OUTER JOIN vt1 ON CAST((((vt1.c0, vt0.c0, '-258316883', vt1.c1, vt1.c1)) BETWEEN ((vt1.c1, vt1.c1, vt1.c0, vt1.c1, vt0.c0)) AND ((vt1.c1, vt1.c0, vt1.c1, vt1.c1, vt0.c0))) AS REAL) WHERE ((((NULL IN ())) IS FALSE)) GROUP BY vt1.c0, vt1.c1 UNION SELECT vt1.c0, vt1.c1 FROM vt0 LEFT OUTER JOIN vt1 ON CAST((((vt1.c0, vt0.c0, '-258316883', vt1.c1, vt1.c1)) BETWEEN ((vt1.c1, vt1.c1, vt1.c0, vt1.c1, vt0.c0)) AND ((vt1.c1, vt1.c0, vt1.c1, vt1.c1, vt0.c0))) AS REAL) WHERE ((NOT ((((NULL IN ())) IS FALSE)))) GROUP BY vt1.c0, vt1.c1 UNION SELECT ALL vt1.c0, vt1.c1 FROM vt0 LEFT OUTER JOIN vt1 ON CAST((((vt1.c0, vt0.c0, '-258316883', vt1.c1, vt1.c1)) BETWEEN ((vt1.c1, vt1.c1, vt1.c0, vt1.c1, vt0.c0)) AND ((vt1.c1, vt1.c0, vt1.c1, vt1.c1, vt0.c0))) AS REAL) WHERE ((((((NULL IN ())) IS FALSE)) ISNULL)) GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt0 LEFT OUTER JOIN vt1 ON CAST((((vt1.c0, vt0.c0, '-258316883', vt1.c1, vt1.c1)) BETWEEN ((vt1.c1, vt1.c1, vt1.c0, vt1.c1, vt0.c0)) AND ((vt1.c1, vt1.c0, vt1.c1, vt1.c1, vt0.c0))) AS REAL) GROUP BY vt1.c0, vt1.c1;
SELECT vt0.c0, vt1.c0, rt0.c0, rt0.c1, vt1.c1, rt0.c2 FROM vt0, rt0, vt1 GROUP BY vt0.c0, vt1.c0, rt0.c0, rt0.c1, vt1.c1, rt0.c2;
SELECT ALL vt0.c0, vt1.c0, rt0.c0, rt0.c1, vt1.c1, rt0.c2 FROM vt0, rt0, vt1 GROUP BY vt0.c0, vt1.c0, rt0.c0, rt0.c1, vt1.c1, rt0.c2 HAVING TOTAL(SUM(GROUP_CONCAT(vt0.c0))) UNION ALL SELECT vt0.c0, vt1.c0, rt0.c0, rt0.c1, vt1.c1, rt0.c2 FROM vt0, rt0, vt1 GROUP BY vt0.c0, vt1.c0, rt0.c0, rt0.c1, vt1.c1, rt0.c2 HAVING (NOT (TOTAL(SUM(GROUP_CONCAT(vt0.c0))))) UNION ALL SELECT ALL vt0.c0, vt1.c0, rt0.c0, rt0.c1, vt1.c1, rt0.c2 FROM vt0, rt0, vt1 GROUP BY vt0.c0, vt1.c0, rt0.c0, rt0.c1, vt1.c1, rt0.c2 HAVING ((TOTAL(SUM(GROUP_CONCAT(vt0.c0)))) ISNULL);
SELECT ALL vt0.c0 FROM rt0, vt0;
SELECT vt0.c0 FROM rt0, vt0 WHERE ((~ (vt0.c0 COLLATE NOCASE))) UNION ALL SELECT ALL vt0.c0 FROM rt0, vt0 WHERE ((NOT ((~ (vt0.c0 COLLATE NOCASE))))) UNION ALL SELECT ALL vt0.c0 FROM rt0, vt0 WHERE ((((~ (vt0.c0 COLLATE NOCASE))) ISNULL));
SELECT ALL vt0.c0 FROM rt0, vt0;
SELECT DISTINCT rt0.c0 FROM rt0, vt0;
SELECT DISTINCT rt0.c0 FROM rt0, vt0 WHERE (((x'b349')>(CAST(rt0.c2 AS TEXT)))) UNION SELECT DISTINCT rt0.c0 FROM rt0, vt0 WHERE ((NOT (((x'b349')>(CAST(rt0.c2 AS TEXT)))))) UNION SELECT DISTINCT rt0.c0 FROM rt0, vt0 WHERE (((((x'b349')>(CAST(rt0.c2 AS TEXT)))) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0, vt0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 WHERE (LOWER((vt1.c1 IN ()))) GROUP BY vt1.c1, vt1.c0 UNION SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE ((NOT (LOWER((vt1.c1 IN ()))))) GROUP BY vt1.c1, vt1.c0 UNION SELECT vt1.c1, vt1.c0 FROM vt1 WHERE (((LOWER((vt1.c1 IN ()))) ISNULL)) GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt0.c0, rt0.c1 FROM vt0 INNER JOIN rt0 ON ((CAST(rt0.c2 AS REAL)) ISNULL) GROUP BY vt0.c0, rt0.c1;
SELECT ALL vt0.c0, rt0.c1 FROM vt0 INNER JOIN rt0 ON ((CAST(rt0.c2 AS REAL)) ISNULL) GROUP BY vt0.c0, rt0.c1 HAVING SUM(COUNT(*) COLLATE NOCASE) UNION ALL SELECT ALL vt0.c0, rt0.c1 FROM vt0 INNER JOIN rt0 ON ((CAST(rt0.c2 AS REAL)) ISNULL) GROUP BY vt0.c0, rt0.c1 HAVING (NOT (SUM(COUNT(*) COLLATE NOCASE))) UNION ALL SELECT ALL vt0.c0, rt0.c1 FROM vt0 INNER JOIN rt0 ON ((CAST(rt0.c2 AS REAL)) ISNULL) GROUP BY vt0.c0, rt0.c1 HAVING ((SUM(COUNT(*) COLLATE NOCASE)) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (vt0.c0) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0 CROSS JOIN rt0 ON (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((0X2eae83af))))!=((((rt0.c2, rt0.c1, rt0.c0))==((rt0.c1, rt0.c2, rt0.c2)))));
SELECT DISTINCT * FROM vt0 CROSS JOIN rt0 ON (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((0x2eae83af))))<>((((rt0.c2, rt0.c1, rt0.c0))=((rt0.c1, rt0.c2, rt0.c2))))) WHERE (LIKELIHOOD(DISTINCT rt0.c1 COLLATE NOCASE, 0.02103828790649509)) UNION SELECT DISTINCT * FROM vt0 CROSS JOIN rt0 ON (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((0x2eae83af))))<>((((rt0.c2, rt0.c1, rt0.c0))=((rt0.c1, rt0.c2, rt0.c2))))) WHERE ((NOT (LIKELIHOOD(DISTINCT rt0.c1 COLLATE NOCASE, 0.02103828790649509)))) UNION SELECT DISTINCT * FROM vt0 CROSS JOIN rt0 ON (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((0x2eae83af))))<>((((rt0.c2, rt0.c1, rt0.c0))=((rt0.c1, rt0.c2, rt0.c2))))) WHERE (((LIKELIHOOD(DISTINCT rt0.c1 COLLATE NOCASE, 0.02103828790649509)) ISNULL));
SELECT DISTINCT * FROM vt0 CROSS JOIN rt0 ON (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((0X2eae83af))))!=((((rt0.c2, rt0.c1, rt0.c0))==((rt0.c1, rt0.c2, rt0.c2)))));
SELECT rt0.c2, vt1.c0 FROM vt0 CROSS JOIN vt1 ON (((vt0.c0, vt1.c0, vt1.c0)) BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c1 ELSE 0xffffffffc208eccd END, CAST(rt0.c0 AS BLOB), CAST(rt0.c1 AS REAL))) AND ((LAST_INSERT_ROWID(), ((rt0.c1) ISNULL), GLOB(vt0.c0, rt0.c1)))) FULL OUTER JOIN rt0 ON ((rt0.c2)||((vt1.c1 IN ()))) GROUP BY rt0.c2, vt1.c0;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING GROUP_CONCAT(vt1.c1) COLLATE NOCASE UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING (NOT (GROUP_CONCAT(vt1.c1) COLLATE NOCASE)) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING ((GROUP_CONCAT(vt1.c1) COLLATE NOCASE) ISNULL);
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING GROUP_CONCAT(vt1.c1) COLLATE NOCASE UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING (NOT (GROUP_CONCAT(vt1.c1) COLLATE NOCASE)) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING ((GROUP_CONCAT(vt1.c1) COLLATE NOCASE) ISNULL);
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((CAST(vt0.c0 AS REAL) IN ())) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((CAST(vt0.c0 AS REAL) IN ())))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((CAST(vt0.c0 AS REAL) IN ())) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM rt0, vt1, vt0;
SELECT DISTINCT * FROM rt0, vt1, vt0 WHERE (x'') UNION SELECT DISTINCT * FROM rt0, vt1, vt0 WHERE ((NOT (x''))) UNION SELECT DISTINCT * FROM rt0, vt1, vt0 WHERE (((x'') ISNULL));
SELECT DISTINCT * FROM rt0, vt1, vt0;
SELECT ALL rt0.c1, vt1.c1, rt0.c0 FROM vt1, rt0 NATURAL JOIN vt0 GROUP BY rt0.c1, vt1.c1, rt0.c0;
SELECT rt0.c1, vt1.c1, rt0.c0 FROM vt1, rt0 NATURAL JOIN vt0 WHERE ((((((((((((rt0.c2)AND(rt0.c2)))OR(vt1.c0)))AND(rt0.c1)))AND(vt1.c1))))<>((CAST(vt1.c1 AS INTEGER))))) GROUP BY rt0.c1, vt1.c1, rt0.c0 UNION SELECT ALL rt0.c1, vt1.c1, rt0.c0 FROM vt1, rt0 NATURAL JOIN vt0 WHERE ((NOT ((((((((((((rt0.c2)AND(rt0.c2)))OR(vt1.c0)))AND(rt0.c1)))AND(vt1.c1))))!=((CAST(vt1.c1 AS INTEGER))))))) GROUP BY rt0.c1, vt1.c1, rt0.c0 UNION SELECT ALL rt0.c1, vt1.c1, rt0.c0 FROM vt1 NOT INDEXED, rt0 NATURAL JOIN vt0 WHERE ((((((((((((((rt0.c2)AND(rt0.c2)))OR(vt1.c0)))AND(rt0.c1)))AND(vt1.c1))))!=((CAST(vt1.c1 AS INTEGER))))) ISNULL)) GROUP BY rt0.c1, vt1.c1, rt0.c0;
SELECT ALL rt0.c1, vt1.c1, rt0.c0 FROM vt1, rt0 NATURAL JOIN vt0 GROUP BY rt0.c1, vt1.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING rt0.c1 UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (rt0.c1)) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((rt0.c1) ISNULL);
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING rt0.c1 UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (rt0.c1)) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((rt0.c1) ISNULL);
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt0.c0, vt1.c1 FROM vt1 FULL OUTER JOIN vt0 ON (((vt1.c0)) NOT BETWEEN ((((rt0.c0)/(rt0.c0)))) AND (('-0.0' COLLATE BINARY))) RIGHT OUTER JOIN rt0 ON 0X689f8004;
SELECT DISTINCT vt1.c0, rt0.c0, rt0.c2 FROM vt1, rt0 LEFT OUTER JOIN vt0 ON 0.7308023905766706;
SELECT DISTINCT vt1.c0, rt0.c0, rt0.c2 FROM vt1, rt0 LEFT OUTER JOIN vt0 ON 0.7308023905766706 WHERE (((((rt0.c0)IS(rt0.c0)))||(((vt1.c1) BETWEEN (vt0.c0) AND (vt0.c0))))) UNION SELECT DISTINCT vt1.c0, rt0.c0, rt0.c2 FROM vt1, rt0 LEFT OUTER JOIN vt0 ON 0.7308023905766706 WHERE ((NOT (((((rt0.c0)IS(rt0.c0)))||(((vt1.c1) BETWEEN (vt0.c0) AND (vt0.c0))))))) UNION SELECT DISTINCT vt1.c0, rt0.c0, rt0.c2 FROM vt1, rt0 LEFT OUTER JOIN vt0 ON 0.7308023905766706 WHERE (((((((rt0.c0)IS(rt0.c0)))||(((vt1.c1) BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL));
SELECT DISTINCT vt1.c0, rt0.c0, rt0.c2 FROM vt1, rt0 LEFT OUTER JOIN vt0 ON 0.7308023905766706;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM vt1, rt0 WHERE (((((rt0.c0)<<(vt1.c0))) NOT BETWEEN ((('') IS TRUE)) AND (rt0.c2))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM vt1, rt0 WHERE ((NOT (((((rt0.c0)<<(vt1.c0))) NOT BETWEEN ((('') IS TRUE)) AND (rt0.c2))))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM vt1, rt0 WHERE (((((((rt0.c0)<<(vt1.c0))) NOT BETWEEN ((('') IS TRUE)) AND (rt0.c2))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT vt1.c0, vt0.c0, vt1.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt1.c1;
SELECT vt1.c0, vt0.c0, vt1.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt1.c1 HAVING GROUP_CONCAT(MAX(AVG(AVG(vt1.c1)))) UNION ALL SELECT vt1.c0, vt0.c0, vt1.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt1.c1 HAVING (NOT (GROUP_CONCAT(MAX(AVG(AVG(vt1.c1)))))) UNION ALL SELECT vt1.c0, vt0.c0, vt1.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt1.c1 HAVING ((GROUP_CONCAT(MAX(AVG(AVG(vt1.c1))))) ISNULL);
SELECT ALL * FROM vt1, rt0;
SELECT * FROM vt1, rt0 WHERE (LIKELIHOOD(DISTINCT IFNULL(rt0.c0, rt0.c1), 0.7419606397065421)) UNION ALL SELECT * FROM vt1, rt0 WHERE ((NOT (LIKELIHOOD(DISTINCT IFNULL(rt0.c0, rt0.c1), 0.7419606397065421)))) UNION ALL SELECT ALL * FROM vt1, rt0 WHERE (((LIKELIHOOD(DISTINCT IFNULL(rt0.c0, rt0.c1), 0.7419606397065421)) ISNULL));
SELECT ALL * FROM vt1, rt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE ((((x'') NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ())) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT ((((x'') NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ())))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((((((x'') NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ())) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((vt0.c0) NOTNULL) IN ())) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0) NOTNULL) IN ())))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0) NOTNULL) IN ())) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c2 FROM rt0, vt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, vt0 GROUP BY rt0.c2 HAVING MAX(((MAX(GROUP_CONCAT(vt0.c0)))<>(vt0.c0))) UNION ALL SELECT rt0.c2 FROM rt0, vt0 GROUP BY rt0.c2 HAVING (NOT (MAX(((MAX(GROUP_CONCAT(vt0.c0)))<>(vt0.c0))))) UNION ALL SELECT rt0.c2 FROM rt0, vt0 GROUP BY rt0.c2 HAVING ((MAX(((MAX(GROUP_CONCAT(vt0.c0)))<>(vt0.c0)))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)==(rt0.c2)))<(rt0.c2))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((((rt0.c2)==(rt0.c2)))<(rt0.c2))))) UNION ALL SELECT * FROM rt0 WHERE (((((((rt0.c2)=(rt0.c2)))<(rt0.c2))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((~ (((vt0.c0) IS TRUE)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((~ (((vt0.c0) IS TRUE)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((~ (((vt0.c0) IS TRUE)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt1.c1, rt0.c1, rt0.c0 FROM vt1, rt0, vt0 GROUP BY vt1.c1, rt0.c1, rt0.c0;
SELECT vt1.c1, rt0.c1, rt0.c0 FROM vt1, rt0, vt0 WHERE (rt0.c0) GROUP BY vt1.c1, rt0.c1, rt0.c0 UNION SELECT ALL vt1.c1, rt0.c1, rt0.c0 FROM vt1, rt0, vt0 WHERE ((NOT (rt0.c0))) GROUP BY vt1.c1, rt0.c1, rt0.c0 UNION SELECT vt1.c1, rt0.c1, rt0.c0 FROM vt1, rt0, vt0 WHERE (((rt0.c0) ISNULL)) GROUP BY vt1.c1, rt0.c1, rt0.c0;
SELECT vt1.c1, rt0.c1, rt0.c0 FROM vt1, rt0, vt0 GROUP BY vt1.c1, rt0.c1, rt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT((((x''))<((COUNT(*))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT((((x''))<((COUNT(*))))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT((((x''))<((COUNT(*)))))) ISNULL);
SELECT SUM(((((((vt1.c0)OR(vt1.c1)))AND(vt1.c1))) IS TRUE)) FROM vt1;
SELECT vt0.c0, vt1.c1, rt0.c1 FROM rt0 INNER JOIN vt0 ON CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) AS INTEGER) LEFT OUTER JOIN vt1 ON CAST(json_extract(rt0.c1, rt0.c2) AS INTEGER);
SELECT DISTINCT vt0.c0 FROM vt1, rt0 LEFT OUTER JOIN vt0 ON '123360282';
SELECT DISTINCT vt0.c0 FROM vt1, rt0 LEFT OUTER JOIN vt0 ON '123360282' WHERE (((vt1.c1) BETWEEN (vt1.c0) AND (rt0.c1)) COLLATE BINARY) UNION SELECT DISTINCT vt0.c0 FROM vt1, rt0 LEFT OUTER JOIN vt0 ON '123360282' WHERE ((NOT (((vt1.c1) BETWEEN (vt1.c0) AND (rt0.c1)) COLLATE BINARY))) UNION SELECT DISTINCT vt0.c0 FROM vt1, rt0 LEFT OUTER JOIN vt0 ON '123360282' WHERE (((((vt1.c1) BETWEEN (vt1.c0) AND (rt0.c1)) COLLATE BINARY) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt1, rt0 LEFT OUTER JOIN vt0 ON '123360282';
SELECT ALL vt1.c0, vt0.c0, vt1.c1 FROM vt1 NATURAL JOIN vt0 GROUP BY vt1.c0, vt0.c0, vt1.c1;
SELECT vt1.c0, vt0.c0, vt1.c1 FROM vt1 NATURAL JOIN vt0 WHERE (x'') GROUP BY vt1.c0, vt0.c0, vt1.c1 UNION SELECT ALL vt1.c0, vt0.c0, vt1.c1 FROM vt1 NATURAL JOIN vt0 WHERE ((NOT (x''))) GROUP BY vt1.c0, vt0.c0, vt1.c1 UNION SELECT ALL vt1.c0, vt0.c0, vt1.c1 FROM vt1 NATURAL JOIN vt0 WHERE (((x'') ISNULL)) GROUP BY vt1.c0, vt0.c0, vt1.c1;
SELECT ALL vt1.c0, vt0.c0, vt1.c1 FROM vt1 NATURAL JOIN vt0 GROUP BY vt1.c0, vt0.c0, vt1.c1;
SELECT ALL vt0.c0, vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON SQLITE_COMPILEOPTION_GET(((((vt1.c0)OR(vt1.c1)))OR(vt1.c1))) GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON SQLITE_COMPILEOPTION_GET(((((vt1.c0)OR(vt1.c1)))OR(vt1.c1))) GROUP BY vt0.c0, vt1.c0 HAVING ((NULLIF(DISTINCT COUNT(COUNT(vt0.c0)), vt0.c0)) ISNULL) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON SQLITE_COMPILEOPTION_GET(((((vt1.c0)OR(vt1.c1)))OR(vt1.c1))) GROUP BY vt0.c0, vt1.c0 HAVING (NOT (((NULLIF(DISTINCT COUNT(COUNT(vt0.c0)), vt0.c0)) ISNULL))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON SQLITE_COMPILEOPTION_GET(((((vt1.c0)OR(vt1.c1)))OR(vt1.c1))) GROUP BY vt0.c0, vt1.c0 HAVING ((((NULLIF(DISTINCT COUNT(COUNT(vt0.c0)), vt0.c0)) ISNULL)) ISNULL);
SELECT rt0.c0, rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0;
SELECT ALL rt0.c0, rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0 WHERE (((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (x'419c')))OR(((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))))OR(CAST(rt0.c0 AS TEXT)))) UNION ALL SELECT rt0.c0, rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0 WHERE ((NOT (((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (x'419c')))OR(((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))))OR(CAST(rt0.c0 AS TEXT)))))) UNION ALL SELECT rt0.c0, rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0 WHERE (((((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (x'419c')))OR(((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))))OR(CAST(rt0.c0 AS TEXT)))) ISNULL));
SELECT rt0.c0, rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0;
SELECT DISTINCT rt0.c0 FROM vt1 FULL OUTER JOIN rt0 ON ((x'3e59') IS FALSE) COLLATE BINARY INNER JOIN vt0 ON CASE WHEN NULL THEN vt1.c1 COLLATE NOCASE END;
SELECT DISTINCT rt0.c0 FROM vt1 FULL OUTER JOIN rt0 ON ((x'3e59') IS FALSE) COLLATE BINARY INNER JOIN vt0 ON CASE WHEN NULL THEN vt1.c1 COLLATE NOCASE END WHERE (0.05354685896893252) UNION SELECT DISTINCT rt0.c0 FROM vt1 FULL OUTER JOIN rt0 ON ((x'3e59') IS FALSE) COLLATE BINARY INNER JOIN vt0 ON CASE WHEN NULL THEN vt1.c1 COLLATE NOCASE END WHERE ((NOT (0.05354685896893252))) UNION SELECT DISTINCT rt0.c0 FROM vt1 FULL OUTER JOIN rt0 ON ((x'3e59') IS FALSE) COLLATE BINARY INNER JOIN vt0 ON CASE WHEN NULL THEN vt1.c1 COLLATE NOCASE END WHERE (((0.05354685896893252) ISNULL));
SELECT DISTINCT rt0.c0 FROM vt1 FULL OUTER JOIN rt0 ON ((x'3e59') IS FALSE) COLLATE BINARY INNER JOIN vt0 ON CASE WHEN NULL THEN vt1.c1 COLLATE NOCASE END;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))GLOB(''))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))GLOB(''))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))GLOB(''))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c2, vt1.c1, rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c1, rt0.c0, rt0.c1;
SELECT rt0.c2, vt1.c1, rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c1, rt0.c0, rt0.c1 HAVING CAST(((COUNT(rt0.c1))=(rt0.c2)) AS INTEGER) UNION ALL SELECT ALL rt0.c2, vt1.c1, rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c1, rt0.c0, rt0.c1 HAVING (NOT (CAST(((COUNT(rt0.c1))==(rt0.c2)) AS INTEGER))) UNION ALL SELECT rt0.c2, vt1.c1, rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c1, rt0.c0, rt0.c1 HAVING ((CAST(((COUNT(rt0.c1))==(rt0.c2)) AS INTEGER)) ISNULL);
SELECT ALL rt0.c2, vt1.c1, rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c1, rt0.c0, rt0.c1;
SELECT rt0.c2, vt1.c1, rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c1, rt0.c0, rt0.c1 HAVING CAST(((COUNT(rt0.c1))=(rt0.c2)) AS INTEGER) UNION ALL SELECT ALL rt0.c2, vt1.c1, rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c1, rt0.c0, rt0.c1 HAVING (NOT (CAST(((COUNT(rt0.c1))==(rt0.c2)) AS INTEGER))) UNION ALL SELECT rt0.c2, vt1.c1, rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c1, rt0.c0, rt0.c1 HAVING ((CAST(((COUNT(rt0.c1))==(rt0.c2)) AS INTEGER)) ISNULL);
SELECT ALL rt0.c2, vt1.c1, rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c1, rt0.c0, rt0.c1;
SELECT * FROM rt0, vt1;
SELECT ALL * FROM rt0, vt1 WHERE (CAST(((((((((rt0.c2)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(rt0.c2)) AS INTEGER)) UNION ALL SELECT * FROM rt0, vt1 WHERE ((NOT (CAST(((((((((rt0.c2)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(rt0.c2)) AS INTEGER)))) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE (((CAST(((((((((rt0.c2)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(rt0.c2)) AS INTEGER)) ISNULL));
SELECT * FROM rt0, vt1;
SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON ((CAST(vt1.c1 AS NUMERIC)) BETWEEN (((NULL)LIKE(vt1.c1))) AND (((vt0.c0)-(vt1.c1))));
SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON ((CAST(vt1.c1 AS NUMERIC)) BETWEEN (((NULL)LIKE(vt1.c1))) AND (((vt0.c0)-(vt1.c1)))) WHERE (CAST(CAST(vt0.c0 AS TEXT) AS NUMERIC)) UNION SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON ((CAST(vt1.c1 AS NUMERIC)) BETWEEN (((NULL)LIKE(vt1.c1))) AND (((vt0.c0)-(vt1.c1)))) WHERE ((NOT (CAST(CAST(vt0.c0 AS TEXT) AS NUMERIC)))) UNION SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON ((CAST(vt1.c1 AS NUMERIC)) BETWEEN (((NULL)LIKE(vt1.c1))) AND (((vt0.c0)-(vt1.c1)))) WHERE (((CAST(CAST(vt0.c0 AS TEXT) AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON ((CAST(vt1.c1 AS NUMERIC)) BETWEEN (((NULL)LIKE(vt1.c1))) AND (((vt0.c0)-(vt1.c1))));
SELECT vt1.c0, vt1.c1, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt1.c1, vt0.c0;
SELECT vt1.c0, vt1.c1, vt0.c0 FROM vt1, vt0 WHERE ((((((vt1.c1))<((vt1.c1)))) NOT NULL)) GROUP BY vt1.c0, vt1.c1, vt0.c0 UNION SELECT vt1.c0, vt1.c1, vt0.c0 FROM vt1, vt0 WHERE ((NOT ((((((vt1.c1))<((vt1.c1)))) NOT NULL)))) GROUP BY vt1.c0, vt1.c1, vt0.c0 UNION SELECT vt1.c0, vt1.c1, vt0.c0 FROM vt1, vt0 WHERE ((((((((vt1.c1))<((vt1.c1)))) NOT NULL)) ISNULL)) GROUP BY vt1.c0, vt1.c1, vt0.c0;
SELECT vt1.c0, vt1.c1, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt1.c1, vt0.c0;
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING CAST(GROUP_CONCAT(MAX(COUNT(*))) COLLATE RTRIM AS TEXT) UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING (NOT (CAST(GROUP_CONCAT(MAX(COUNT(*))) COLLATE RTRIM AS TEXT))) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING ((CAST(GROUP_CONCAT(MAX(COUNT(*))) COLLATE RTRIM AS TEXT)) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((+ (x'')) IN (((rt0.c1) ISNULL)))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((+ (x'')) IN (((rt0.c1) ISNULL)))))) UNION ALL SELECT * FROM rt0 WHERE (((((+ (x'')) IN (((rt0.c1) ISNULL)))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1;
SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1 WHERE (vt1.c1) UNION SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1 WHERE ((NOT (vt1.c1))) UNION SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1 WHERE (((vt1.c1) ISNULL));
SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1;
SELECT ALL rt0.c1, rt0.c0, vt0.c0 FROM vt1, rt0, vt0 GROUP BY rt0.c1, rt0.c0, vt0.c0;
SELECT ALL rt0.c1, rt0.c0, vt0.c0 FROM vt1, rt0, vt0 WHERE (((((((((((((((vt0.c0)AND('sMnE&')))OR(vt1.c1)))AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c1)))OR(vt1.c1)))GLOB(((rt0.c0)>=(vt0.c0))))) GROUP BY rt0.c1, rt0.c0, vt0.c0 UNION SELECT rt0.c1, rt0.c0, vt0.c0 FROM vt1, rt0, vt0 WHERE ((NOT (((((((((((((((vt0.c0)AND('sMnE&')))OR(vt1.c1)))AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c1)))OR(vt1.c1)))GLOB(((rt0.c0)>=(vt0.c0))))))) GROUP BY rt0.c1, rt0.c0, vt0.c0 UNION SELECT rt0.c1, rt0.c0, vt0.c0 FROM vt1, rt0, vt0 WHERE (((((((((((((((((vt0.c0)AND('sMnE&')))OR(vt1.c1)))AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c1)))OR(vt1.c1)))GLOB(((rt0.c0)>=(vt0.c0))))) ISNULL)) GROUP BY rt0.c1, rt0.c0, vt0.c0;
SELECT ALL rt0.c1, rt0.c0, vt0.c0 FROM vt1, rt0, vt0 GROUP BY rt0.c1, rt0.c0, vt0.c0;
SELECT rt0.c0, rt0.c2, rt0.c1, vt1.c0, vt1.c1, vt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON (((((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)), (((vt1.c1)) BETWEEN ((vt1.c1)) AND ((NULL))), '567947290', vt1.c0, CASE WHEN rt0.c2 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END))<=((((x'')<<(vt1.c1)), ((vt1.c1) ISNULL), (vt1.c1 IN (rt0.c1)), json(rt0.c1), vt0.c0 COLLATE BINARY))) FULL OUTER JOIN vt1 ON ((CASE rt0.c2  WHEN '1814001603' THEN vt1.c0 END) NOT NULL) GROUP BY rt0.c0, rt0.c2, rt0.c1, vt1.c0, vt1.c1, vt0.c0;
SELECT vt1.c1 FROM vt0 NATURAL JOIN vt1;
SELECT vt1.c1 FROM vt0 NATURAL JOIN vt1 WHERE ((((((((((((NULL, vt1.c1, vt1.c0))!=((vt0.c0, vt1.c1, vt1.c1))))OR(vt0.c0)))AND(((vt0.c0)/(vt1.c1)))))OR(((vt0.c0)/(vt1.c0)))))OR(((vt1.c0) BETWEEN (vt1.c1) AND (vt0.c0))))) UNION ALL SELECT ALL vt1.c1 FROM vt0 NATURAL JOIN vt1 WHERE ((NOT ((((((((((((NULL, vt1.c1, vt1.c0))<>((vt0.c0, vt1.c1, vt1.c1))))OR(vt0.c0)))AND(((vt0.c0)/(vt1.c1)))))OR(((vt0.c0)/(vt1.c0)))))OR(((vt1.c0) BETWEEN (vt1.c1) AND (vt0.c0))))))) UNION ALL SELECT vt1.c1 FROM vt0 NATURAL JOIN vt1 WHERE ((((((((((((((NULL, vt1.c1, vt1.c0))<>((vt0.c0, vt1.c1, vt1.c1))))OR(vt0.c0)))AND(((vt0.c0)/(vt1.c1)))))OR(((vt0.c0)/(vt1.c0)))))OR(((vt1.c0) BETWEEN (vt1.c1) AND (vt0.c0))))) ISNULL));
SELECT vt1.c1 FROM vt0 NATURAL JOIN vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((((((vt1.c1)OR(vt1.c0)))AND(x''))) BETWEEN (((vt1.c0) NOTNULL)) AND (TIME(vt1.c1, vt1.c0, vt1.c1)))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((((((vt1.c1)OR(vt1.c0)))AND(x''))) BETWEEN (((vt1.c0) NOTNULL)) AND (TIME(vt1.c1, vt1.c0, vt1.c1)))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((((((vt1.c1)OR(vt1.c0)))AND(x''))) BETWEEN (((vt1.c0) NOTNULL)) AND (TIME(vt1.c1, vt1.c0, vt1.c1)))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT rt0.c1, vt1.c1, rt0.c2, rt0.c0 FROM rt0 NATURAL JOIN vt1 GROUP BY rt0.c1, vt1.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, vt1.c1, rt0.c2, rt0.c0 FROM rt0 NATURAL JOIN vt1 WHERE (CASE (vt1.c1 IN ())  WHEN rt0.c0 COLLATE NOCASE THEN (vt1.c1 IN ()) ELSE UPPER(rt0.c0) END) GROUP BY rt0.c1, vt1.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, vt1.c1, rt0.c2, rt0.c0 FROM rt0 NATURAL JOIN vt1 WHERE ((NOT (CASE (vt1.c1 IN ())  WHEN rt0.c0 COLLATE NOCASE THEN (vt1.c1 IN ()) ELSE UPPER(rt0.c0) END))) GROUP BY rt0.c1, vt1.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, vt1.c1, rt0.c2, rt0.c0 FROM rt0 NATURAL JOIN vt1 WHERE (((CASE (vt1.c1 IN ())  WHEN rt0.c0 COLLATE NOCASE THEN (vt1.c1 IN ()) ELSE UPPER(rt0.c0) END) ISNULL)) GROUP BY rt0.c1, vt1.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, vt1.c1, rt0.c2, rt0.c0 FROM rt0 NATURAL JOIN vt1 GROUP BY rt0.c1, vt1.c1, rt0.c2, rt0.c0;
SELECT rt0.c2 FROM vt0, rt0 LEFT OUTER JOIN vt1 ON ((((rt0.c1)AND(vt1.c1)))AND(vt1.c0)) COLLATE NOCASE GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt0, rt0 LEFT OUTER JOIN vt1 ON ((((rt0.c1)AND(vt1.c1)))AND(vt1.c0)) COLLATE NOCASE GROUP BY rt0.c2 HAVING TOTAL(rt0.c0 COLLATE BINARY) UNION ALL SELECT rt0.c2 FROM vt0, rt0 LEFT OUTER JOIN vt1 ON ((((rt0.c1)AND(vt1.c1)))AND(vt1.c0)) COLLATE NOCASE GROUP BY rt0.c2 HAVING (NOT (TOTAL(rt0.c0 COLLATE BINARY))) UNION ALL SELECT ALL rt0.c2 FROM vt0, rt0 LEFT OUTER JOIN vt1 ON ((((rt0.c1)AND(vt1.c1)))AND(vt1.c0)) COLLATE NOCASE GROUP BY rt0.c2 HAVING ((TOTAL(rt0.c0 COLLATE BINARY)) ISNULL);
SELECT rt0.c2 FROM vt0, rt0 LEFT OUTER JOIN vt1 ON ((((rt0.c1)AND(vt1.c1)))AND(vt1.c0)) COLLATE NOCASE GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt0, rt0 LEFT OUTER JOIN vt1 ON ((((rt0.c1)AND(vt1.c1)))AND(vt1.c0)) COLLATE NOCASE GROUP BY rt0.c2 HAVING TOTAL(rt0.c0 COLLATE BINARY) UNION ALL SELECT rt0.c2 FROM vt0, rt0 LEFT OUTER JOIN vt1 ON ((((rt0.c1)AND(vt1.c1)))AND(vt1.c0)) COLLATE NOCASE GROUP BY rt0.c2 HAVING (NOT (TOTAL(rt0.c0 COLLATE BINARY))) UNION ALL SELECT ALL rt0.c2 FROM vt0, rt0 LEFT OUTER JOIN vt1 ON ((((rt0.c1)AND(vt1.c1)))AND(vt1.c0)) COLLATE NOCASE GROUP BY rt0.c2 HAVING ((TOTAL(rt0.c0 COLLATE BINARY)) ISNULL);
SELECT rt0.c2 FROM vt0, rt0 LEFT OUTER JOIN vt1 ON ((((rt0.c1)AND(vt1.c1)))AND(vt1.c0)) COLLATE NOCASE GROUP BY rt0.c2;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE ((((vt0.c0 IN ())) NOT BETWEEN (UNLIKELY(vt0.c0)) AND (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((((vt0.c0 IN ())) NOT BETWEEN (UNLIKELY(vt0.c0)) AND (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((((vt0.c0 IN ())) NOT BETWEEN (UNLIKELY(vt0.c0)) AND (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((rt0.c2 IN ())) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((rt0.c2 IN ())))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c2 IN ())) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ('703221320') GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ('703221320'))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((('703221320') ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((AVG(MIN(vt1.c0)))&(COUNT(SUM(vt1.c1)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((AVG(MIN(vt1.c0)))&(COUNT(SUM(vt1.c1)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((AVG(MIN(vt1.c0)))&(COUNT(SUM(vt1.c1))))) ISNULL);
SELECT ALL vt1.c0, rt0.c0, rt0.c1 FROM vt1, vt0, rt0;
SELECT ALL vt1.c0, rt0.c0, rt0.c1 FROM vt1, vt0, rt0 WHERE (((vt0.c0) BETWEEN (NULL) AND (vt0.c0 COLLATE BINARY))) UNION ALL SELECT ALL vt1.c0, rt0.c0, rt0.c1 FROM vt1, vt0, rt0 WHERE ((NOT (((vt0.c0) BETWEEN (NULL) AND (vt0.c0 COLLATE BINARY))))) UNION ALL SELECT vt1.c0, rt0.c0, rt0.c1 FROM vt1 NOT INDEXED, vt0, rt0 WHERE (((((vt0.c0) BETWEEN (NULL) AND (vt0.c0 COLLATE BINARY))) ISNULL));
SELECT ALL vt1.c0, rt0.c0, rt0.c1 FROM vt1, vt0, rt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((vt0.c0) IS FALSE)) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0) IS FALSE)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((vt0.c0) IS FALSE)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((0xffffffff93e0d109, 1994947034, vt0.c0)) AND ((0.9113935873035479, vt0.c0, vt0.c0)))) IS FALSE)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((0xffffffff93e0d109, 1994947034, vt0.c0)) AND ((0.9113935873035479, vt0.c0, vt0.c0)))) IS FALSE)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((0xffffffff93e0d109, 1994947034, vt0.c0)) AND ((0.9113935873035479, vt0.c0, vt0.c0)))) IS FALSE)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING MAX(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (MAX(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((MAX(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))) ISNULL);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING MAX(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (MAX(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((MAX(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))) ISNULL);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (NULL) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (NULL))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((NULL) ISNULL));
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c1)OR(((rt0.c0)GLOB(rt0.c1)))))AND(LIKELY(DISTINCT rt0.c2)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c1)OR(((rt0.c0)GLOB(rt0.c1)))))AND(LIKELY(DISTINCT rt0.c2)))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c1)OR(((rt0.c0)GLOB(rt0.c1)))))AND(LIKELY(DISTINCT rt0.c2)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2, vt1.c0 FROM vt1 LEFT OUTER JOIN rt0 ON 0Xffffffffc7cb5675 GROUP BY rt0.c2, vt1.c0;
SELECT rt0.c2, vt1.c0 FROM vt1 LEFT OUTER JOIN rt0 ON 0Xffffffffc7cb5675 WHERE (ABS(((vt1.c1)-(vt1.c1)))) GROUP BY rt0.c2, vt1.c0 UNION SELECT ALL rt0.c2, vt1.c0 FROM vt1 LEFT OUTER JOIN rt0 ON 0xffffffffc7cb5675 WHERE ((NOT (ABS(((vt1.c1)-(vt1.c1)))))) GROUP BY rt0.c2, vt1.c0 UNION SELECT rt0.c2, vt1.c0 FROM vt1 LEFT OUTER JOIN rt0 ON 0Xffffffffc7cb5675 WHERE (((ABS(((vt1.c1)-(vt1.c1)))) ISNULL)) GROUP BY rt0.c2, vt1.c0;
SELECT rt0.c2, vt1.c0 FROM vt1 LEFT OUTER JOIN rt0 ON 0Xffffffffc7cb5675 GROUP BY rt0.c2, vt1.c0;
SELECT rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, rt0.c2, rt0.c1 HAVING GROUP_CONCAT(TOTAL(vt0.c0)) UNION ALL SELECT rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, rt0.c2, rt0.c1 HAVING (NOT (GROUP_CONCAT(TOTAL(vt0.c0)))) UNION ALL SELECT ALL rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, rt0.c2, rt0.c1 HAVING ((GROUP_CONCAT(TOTAL(vt0.c0))) ISNULL);
SELECT * FROM rt0, vt0;
SELECT ALL * FROM rt0, vt0 WHERE ((x'' IN ())) UNION ALL SELECT * FROM rt0, vt0 WHERE ((NOT ((x'' IN ())))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((((x'' IN ())) ISNULL));
SELECT * FROM rt0, vt0;
