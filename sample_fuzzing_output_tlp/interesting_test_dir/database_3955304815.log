-- Time: 2024/06/09 16:07:03
-- Database: database15
-- Database version: 3.40.0
-- seed value: 3955304815
PRAGMA cache_size = 50000; -- 7ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16le'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0); -- 1ms;
CREATE VIRTUAL TABLE rt1 USING rtree(c0, c1, c2); -- 3ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '1451'); -- 0ms;
PRAGMA reverse_unordered_selects; -- 0ms;
PRAGMA main.locking_mode = NORMAL; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c0)=('', NULL) WHERE (((vt0.c0, vt0.c0, 946614646)) NOT BETWEEN (((~ (0X447402e0)), (vt0.c0 IN ()), (~ (vt0.c0)))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, (vt0.c0 IN ()), (~ (vt0.c0))))); -- 0ms;
ROLLBACK TRANSACTION; -- 2ms;
UPDATE vt0 SET (c0)=(x'') WHERE ((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE; -- 1ms;
UPDATE OR REPLACE vt0 SET c0='577896215', c0='' WHERE (((- (vt0.c0)))>=((((vt0.c0))>=((vt0.c0))))); -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt1 SET c2=NULL; -- 1ms;
UPDATE OR IGNORE vt0 SET (c0)=('<40>F>'); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt1 SET (c2, c0)=('!E6 ', '!e6 ') WHERE (+ (rt1.c0 COLLATE BINARY)); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
PRAGMA checkpoint_fullfsync; -- 0ms;
REINDEX  vt0; -- 0ms;
UPDATE OR ROLLBACK rt1 SET (c0)=('') WHERE rt1.c1; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
COMMIT; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 14); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.9542842363322147) IS TRUE))AND(((('577896215', x'0296', NULL)) BETWEEN (('0.9542842363322147', '^*ㅶj', '946614646')) AND ((NULL, NULL, NULL))))))AND((- ('Im+!whD')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json(CAST('' AS NUMERIC)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-246078997 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered noskipscan'); -- 2ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE RTRIM)=(CASE 0.18645249556472598  WHEN x'' THEN 374833949 END)); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (x'')))+((('0.9542842363322147') NOT NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '865081143 sz=1148453600 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1579707402 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-246078997 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE NULL  WHEN '' THEN '/4d&jxlr' WHEN 'a[25⚽' THEN '0.18645249556472598' WHEN NULL THEN NULL ELSE 0.9542842363322147 END)-((((NULL))<=((0.9542842363322147))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-1624516667'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=1747478849'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=64722279 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1103557866 sz=-1873016179 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '946614646 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-894398022 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)AND(((NULL)GLOB(x'')))))OR(NULLIF(DISTINCT '', '<40>F>'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-1968080672 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '-2145790073 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL, '-9223372036854775808', NULL))>=((0xffffffff8ab178e0, NULL, -1.968080672E9)))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=71024929 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-1481856507 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((('1103557866', '946614646', NULL, -692695487, 'ퟅ-p46'))==(('405167778', '374833949', x'', '-566296833', ' ^6Vf７'))))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2 sz=1012927069 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-203861211'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('Kt')>('405167778'))) BETWEEN (((('&!', NULL, '1288659025'))<((NULL, NULL, 0.9542842363322147)))) AND (x'')); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ('ퟅ#')) COLLATE BINARY COLLATE RTRIM; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1687449938'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((0.026799020999434542 IN ()))AND(((x'fffd')*(0X61e93faa)))))AND(NULL COLLATE NOCASE)))OR(CAST('}' AS REAL))))OR(((((x'')OR(x'')))AND(0.18645249556472598)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'')AND(x'')))AND(0Xffffffff905c0a8d)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1677826328 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (CAST(-1278498329 AS BLOB))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=450494835'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 236940821 sz=-1481856507 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((x'5354') BETWEEN (x'') AND (x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(0.4912044251388531 AS TEXT) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '1288659025'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '1887858552 -533707508'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'')LIKE(x'')) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-1.677826328E9) ISNULL))<=((((('-1481856507')OR(0.2654450402369076)))OR(0xffffffffa910e424)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1654068291 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=916094071'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'0d33', '1887858552', 9.16094071E8)) BETWEEN (('', NULL, NULL)) AND (('1148453600', x'f15b', NULL))) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 0 sz=-677035515 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=1012927069 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (9.16094071E8)))LIKE((((' 24^醺', NULL, x''))>(('a[25⚽', x'', NULL))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'Z%'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (LOWER(''))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) NOT BETWEEN ((COALESCE(DISTINCT '64722279', '-1968080672'))) AND ((((((-823152693)OR(NULL)))AND('-1873016179'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '946614646 -1136376594 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)AND('7vOqc^쉝')))AND('-369741139')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=1747478849 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1495380364'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('ퟅ-p46')||(0.19160228928713674)) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.4912044251388531 AS NUMERIC)) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=946614646'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (NULL)))AND(((NULL)*('-1278498329')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-1311386731 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-246078997 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)*(x'b515')))LIKE((((('d ')AND('71024929')))AND('-2145790073')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_valid(((NULL)||(x'50b7a104'))); -- 2ms;
DELETE FROM sqlite_stat1 WHERE 0.8399689674998819; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=737289917 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (x'')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=900739988'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '71024929 sz=-1968080672'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((NULL IN ()) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '1241754841 -663629262 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' noskipscan'); -- 2ms;
DELETE FROM sqlite_stat1 WHERE CASE (0.8399689674998819 IN ())  WHEN CAST(0.6855814930701527 AS REAL) THEN ((x'a7fa') NOT NULL) ELSE (('-663629262') NOT BETWEEN (0.6855814930701527) AND (NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-1876424820' COLLATE NOCASE)-(((x'') BETWEEN (x'') AND (x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('-1679844334') BETWEEN (NULL) AND (-607307258)) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-250554954 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '64722279 sz=-1079210572'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-566296833 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1077584593 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOT BETWEEN ('302316750') AND (NULL)))GLOB(((('865081143'))>((0.8213647821031553))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '2 sz=-729707520'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-170578170 sz=-1358283542 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '1604485214 sz=981147236'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')=(NULL)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 1855307872 sz=1998981657 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((((-729392416)AND('668529173')))AND(1785454839)))%(ABS(NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER(CASE 0.8473882388337043  WHEN x'' THEN 0.6083865940369962 WHEN x'' THEN 0x75a9d9b7 WHEN x'' THEN NULL END); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=981147236'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((0.9222489297385209) IS FALSE))AND(((((0.24161882779707966)AND(NULL)))OR(x'')))))OR((('') IS FALSE))))AND(CAST(x'' AS BLOB))))AND(((x'ed43')<=(0.008612579184009261)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((NULL IN ('1288659025', 0.5892554286624653)) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 0 sz=1976011248 unordered noskipscan'); -- 4ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1449216666'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL AS NUMERIC) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (+ (CAST('' AS NUMERIC))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1753725666 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=237025254 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '-962258511 sz=-1415564381'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=591531550 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '1148453600 sz=-677035515 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 1654068291 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=2046133385'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1109105750 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((((NULL)AND('591531550')))AND(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '-1997930152 1855307872 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=1902375293 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE NOCASE)<=(ABS(0xffffffffd4818c00))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL((0.8650206604730727 IN (x'', '1796689641')), CAST(x'' AS BLOB)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((9.46614646E8) IS FALSE)) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=900739988 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1508878301 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=1626684258 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=569697689 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(-1241799652 AS REAL))LIKE(2.36940821E8 COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '2087093688 -1873016179 sz=95326408 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '1241754841 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LOWER(x'533a'))AND((x'3df8' IN (NULL)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=428891986'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-250554954 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ()))>=(UPPER('-931599904'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-492884721 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')<<(x'683a'))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(x'' AS INTEGER) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=835112888 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((LOWER(DISTINCT x'3477'))OR(NULL)))AND(CAST(NULL AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('')>(214144379)) THEN ((((1103557866)AND(NULL)))OR('㎔i#~\')) WHEN '-908097688' COLLATE NOCASE THEN CASE 0.9222489297385209  WHEN 'im+!whd' THEN x'' WHEN x'' THEN '[' WHEN '' THEN x'a04b' END WHEN (((NULL))<>((0.46790643285714506))) THEN 0X48f2da8c ELSE json_extract(-8.94398022E8, NULL) END; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '374833949 1265596459 sz=405167778 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'' AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=599031971 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1510269763 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1522814140'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '302316750 sz=-1753725666 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (x'3b8b6f4c')) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=916094071 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-1995074439 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1241754841 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1358283542 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 0'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-232304796'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-850713619 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=530449780 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 -894398022 sz=-1702996937 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=94821817 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-1876424820 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 0 sz=1508567288 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 sz=1054451258 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'e6b7')LIKE(0xffffffffd5c53990)) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.4737843433774712; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-860371065 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-2121271360 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'9089' AS BLOB)) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST('-1556732715' AS REAL) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1332876424 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')!=(0.19160228928713674)) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '	'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'5af9'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1044433098 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((STRFTIME(x'', -6.77035515E8, '916094071', x'7b5b', 0.010265932649097032)) NOT BETWEEN ((((('1')AND(0X59785b3e)))OR(''))) AND (LIKELIHOOD(NULL, 0.8844800446998098))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 4 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=1231041697 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((x'96b1') BETWEEN ('0.19160228928713674') AND (NULL)) THEN 0.32223774218023515 COLLATE NOCASE ELSE CASE WHEN '?LMpO}' THEN x'' WHEN 0.953925178113061 THEN NULL WHEN 0.32844576158874583 THEN '-823152693' END END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_array_length(CASE WHEN x'' THEN -6.77035515E8 ELSE x'' END, ((x'')LIKE(NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '0 sz=-1499417670 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0Xffffffffa619210c)AND(0.046028161951357616)))OR(''))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE WHEN x'' THEN 0.5168516296731329 WHEN 0.7790377221601802 THEN x'' WHEN 0.3910748355616279 THEN x'' END)OR(((0.6857216797919893) IS TRUE))))AND(ABS(x''))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE SUBSTR(0.18645249556472598, 1497885862) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1056493056 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=1852332505 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '51030611 1802842480 sz=-1624516667 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE WHEN '0.4737843433774712' THEN 0.8213647821031553 END)AND(x'')))OR(CASE 0.7591187193747422  WHEN '*' THEN 0.19140986363118329 ELSE '' END)); -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-1324947362 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=82983013 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '+GP'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-691854563 -907816276'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=1240689042 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((1223875212) BETWEEN (x'') AND (9.16094071E8)), SQLITE_COMPILEOPTION_USED(NULL), (('1288659025') NOT NULL)))<=(((- (NULL)), '-962258511', json_valid(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE GLOB(LOWER(0.6768558735408603), ('' IN ())); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=1360220336 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((-9.62258511E8)OR(NULL)))OR(NULL))) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'' AS TEXT) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1243431484 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '1747478849'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-1372014598 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-1753725666'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(NULL AS TEXT) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-1079210572 sz=668529173'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '85950835 428891986 sz=-1995074439 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL COLLATE NOCASE AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-1629388412 IN ())) NOT BETWEEN ((- ('	_mBaHI_'))) AND (((NULL) NOTNULL))); -- 6ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((0.3910748355616279) NOTNULL))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0Xffffffff9b85eb6b) IS TRUE) COLLATE RTRIM; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((0.0016981929845554244 COLLATE RTRIM)AND(((x'')>('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1392248965 0 sz=1495723851'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-1241799652'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1269014546 sz=97756096 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'2d23a983')AND('1510269763')))OR('2048699780')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1690136387 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((NULL)OR(x'')))OR(x'')))OR(x'')))OR(0.2564381607909232)))AND(0X5ae90c8)))OR(((-1358283542)IS(x'9abb')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 sz=569697689 unordered noskipscan'); -- 2ms;
DELETE FROM sqlite_stat1 WHERE json_array_length(-585900835); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1683983812 unordered noskipscan'); -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=530449780 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ('-931599904')))>>((('0.953925178113061') IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-2064537204 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-379718337 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 -1449216666 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(5.3044978E8 AS BLOB))&((+ (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((- (x'3318'))))==(((~ ('%6E6P<XS'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((1.654068291E9 IN (0.6617303902359307, x''))) NOT BETWEEN ('.IpapCb6') AND ((((x'8851', -1.508878301E9, 'cS')) BETWEEN ((x'', '450494835', NULL)) AND ((x'69d8', x'', '1510269763'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '0.046028161951357616'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)-(x''))) NOT BETWEEN ((((('')OR('8.XQ堣')))OR('-1968080672'))) AND (NULL COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE -665059283; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1899866484 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE BINARY)GLOB(((((NULL)OR(x'6021')))OR(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-532254562 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST('-874950779' AS NUMERIC) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'feff') NOT BETWEEN (NULL) AND (0.7279163776912158)))%(((x'ebba')IS NOT('981147236')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=2046133385'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE -1666091076  WHEN (+ ('1454637176')) THEN TYPEOF(DISTINCT 'd ') ELSE ((x'') IS FALSE) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(DISTINCT ((('%)?', x'8382', '('))>((0.09325915887118363, NULL, 'Lތid'))), (+ ('1669849933'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '0 -44767939 sz=-566296833'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'4a3c'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '2 sz=1976011248 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 sz=-170578170 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=737289917 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-489083385 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=-137831194 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-104550698 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=405167778 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '-482162308 0 sz=-532488396 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=71024929 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1726346115 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((1.976011248E9)=(NULL)) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=873364895 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.9560325081104307) IS FALSE)) BETWEEN (CASE WHEN x'e10a' THEN NULL WHEN NULL THEN NULL WHEN NULL THEN x'' ELSE x'' END) AND (((0.7910354681130681) ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-766931597 1522814140 sz=1077584593 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1626684258 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('' AS REAL))LIKE(MIN('*<', NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '900739988 sz=-1188619182 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (HEX(x'c2b0') IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CASE WHEN 0.24305945233226656 THEN -1529159843 WHEN 0xfffffffff110d5b6 THEN x'' WHEN x'eb9162ba' THEN NULL END  WHEN (('428891986') BETWEEN (0.6216040321087979) AND ('')) THEN (((-1.311386731E9)) NOT BETWEEN ((-502460444)) AND ((x'd24a'))) WHEN (((x'')) BETWEEN ((0xffffffffa1343ee8)) AND ((''))) THEN CASE '446888665'  WHEN x'' THEN NULL WHEN '[A' THEN -1.241799652E9 WHEN x'' THEN 0.09829738824289058 END WHEN (- (1223875212)) THEN TOTAL_CHANGES() ELSE (('1671124532') BETWEEN ('') AND ('-2145790073')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((0.8017138837956463))=((0xffffffff9d136a7e))))AND(HEX(DISTINCT '-531999969'))))OR(CAST('' AS INTEGER))))OR(((x'de94')<(-1519750844)))))AND(((((((((0.3910748355616279)AND(NULL)))OR(x'')))AND(9.46614646E8)))OR(0.953925178113061)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1768841848 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(UNLIKELY(NULL) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOT BETWEEN (x'') AND ('-232304796'))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (0x59a07b8d)))!=((((0xffffffffa1184430)) NOT BETWEEN (('_vSCh(')) AND ((971831628))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (x'' COLLATE BINARY)); -- 3ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1508567288 4 sz=1626684258 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1495380364'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LOWER(0.8399689674998819))LIKE(x'')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '530449780 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(DISTINCT (('7VOQC^쉝')GLOB(0X4ccf6051))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '0 -1902115711 599031971'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('(2^G' AS NUMERIC)) NOT BETWEEN (((NULL)GLOB('-1437503817'))) AND ((('-925677027')-(x'882b')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.12259883013379691; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((JULIANDAY('972076094', '*K*}/', x'')) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-1964954093 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1682024086 0 sz=-1209338009 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (x''))) ISNULL); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1827982730 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('j.0ia[Y[<') NOT BETWEEN (NULL) AND (0.7790377221601802))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=1428101357 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '0 394287017 sz=-962258511 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((NULL) NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1064421606'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1508878301 unordered'); -- 3ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=381469091'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1484978159 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'd2bf', x'0c09', 0xfffffffff29733c7, x'1cf2', '-1876424820')) NOT BETWEEN (((NULL IN ()), 'K', CAST('-837280936' AS REAL), ((0.9114802817319901)%(0.1829959386351433)), (+ ('1747478849')))) AND ((NULL COLLATE NOCASE, CASE 0.3692833775879234  WHEN '-246078997' THEN -757795033 END, NULL COLLATE BINARY, (('g[')|(x'208d')), CASE '0.12259883013379691'  WHEN x'' THEN '-826867945' ELSE 0xffffffffffaa2d5f END))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=2008847715 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '0 1855307872 sz=-1731093365 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((0.9734025763997435)AND(0Xffffffff89159479)))OR(x'')))OR(NULL)))OR(NULL))) NOT NULL); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=1779450344 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1241754841 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((('-1' COLLATE RTRIM)OR((~ (NULL)))))OR(('/4d&jxlr' IN (NULL)))))OR(((((((((((((NULL)AND('DRj툲')))AND('0.46790643285714506')))AND('-1311386731')))OR(NULL)))AND(NULL)))OR(x'')))))AND(x'c0198abf')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-1801660094 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=1986637788 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)AND('-1311386731')))AND(x'')))<<('AJ')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.6855814930701527) IS TRUE) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1679844334 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '-1458510812 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=505910370'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((x''))>=(('~uUOwꧧa+Y'))) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '0 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-770251988 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.09325915887118363 AS BLOB); -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 -49033040 sz=-1704090994 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(LIKELIHOOD(DISTINCT 0.32223774218023515, 0.09402502498410281) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=1626684258 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-894398022'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT BETWEEN (x'') AND ('*k*}/'))) NOT BETWEEN ((((('1')AND(1524224279)))AND(x''))) AND ((('SH]Mே|~')>(x'')))); -- 5ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '1546849192 -1979190186 sz=-1508878301'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0X26b82797) BETWEEN ('') AND ('-246078997')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '-566296833 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-358850358 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1795781958'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '2 554680802 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((0.39399038303610945)&(x'')) THEN ((0.6216040321087979)<=('-1876424820')) ELSE ((NULL)+(0X74b6f777)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (CAST(-1.997930152E9 AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((((('⛎6s4럦')OR(NULL)))AND('236940821')))AND(x'')))AND(')syF')))AND('-908097688')))OR(x'')), x'' COLLATE NOCASE, 0.09829738824289058 COLLATE RTRIM))<(((((''))<=((NULL))), x'' COLLATE NOCASE, (((('')AND(NULL)))OR(0.8522814397993924))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((x'264e')IS(NULL))  WHEN (('hT')|(',>!gscSxr')) THEN ('' IN (0.9340022462790645)) ELSE '-9223372036854775808' COLLATE NOCASE END; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1876424820 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ('aO')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-21855584 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1699098637 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULLIF(0.7337404365412384, '*K*}/')) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.3110667082390083)IS NOT(544678402)) COLLATE NOCASE COLLATE NOCASE; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((((('uxdd')AND(NULL)))OR(0.09754076618107466 COLLATE BINARY)))OR((NOT (NULL)))))OR(CASE x''  WHEN '0.4912044251388531' THEN 0.5208923281962378 WHEN 'z﨣	Q\DU90' THEN '_vSCh(' WHEN 0x4a03acd9 THEN 0.8499628157446468 END)))AND(load_extension(NULL, 0.811310230933012))))OR(((1782316148) IS TRUE))))AND((((0xffffffffd7a54205, '', x'954e')) BETWEEN ((-1678218301, '1241754841', 0.31241466435406373)) AND (('2007789582', ' ', 0.019522221336384926))))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-111520687'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST('95326408' AS REAL) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=569697689 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')>>(NULL))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(CAST('-2145790073' AS REAL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELIHOOD('-1241799652' COLLATE RTRIM, 0.08579384166128035); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'1b00' IN ()) COLLATE NOCASE COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2061311056 sz=1231651577 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(-1997930152 AS NUMERIC) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULLIF(DISTINCT x'fe37', 0.2221815710977404)) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1806877997 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2 sz=1887858552'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-310670730 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=2008602549 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((NULL)OR('-475846278')))OR(0x3db9567)))OR(NULL)))OR(''))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=212482748 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 2ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)==(x'50671390'))) BETWEEN ('') AND (((0.6830997390581726) NOT BETWEEN (0.9542236638593797) AND (0Xffffffffb5fba41c)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '4'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=395715760 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((x'') NOT BETWEEN ('1387503912') AND (0.2699493089322249)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY(IFNULL(DISTINCT NULL, NULL)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-369741139')>>(0.723607759503909))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '71024929 sz=911124057 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1709181483 2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('%6E6P<XS')==(((x'0fa8fec1') NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-692695487 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'' COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-1618093499 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (- (x'' COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'498f')%(x'cf13926d')))OR(CASE WHEN NULL THEN x'' ELSE '' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1021123670'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '916094071 sz=981147236'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM((((('NW')OR(1.077584593E9)))OR(0.8017138837956463))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1525959746 sz=-1224803303 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('Wd^ᦱ') IS TRUE)) BETWEEN (CASE WHEN 0.9542842363322147 THEN 2.36940821E8 ELSE 'Kt' END) AND ((('ᲥwN?*')<>(0.6999725408072739)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((x'4051b942')GLOB(x'')) THEN (('') ISNULL) WHEN '1054451258' COLLATE RTRIM THEN CASE WHEN x'28a1' THEN 0.7910354681130681 ELSE NULL END WHEN ((0.37183044899294815) ISNULL) THEN ((NULL) NOTNULL) ELSE (~ (0.3692833775879234)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=1976011248 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-850713619 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.1829959386351433 COLLATE NOCASE)AND(((((((((((((x'9ca2839b')OR(9.46614646E8)))OR(x'')))OR(0.8213647821031553)))OR(0.25526124968050146)))OR(0xffffffff905c0a8d)))OR(NULL)))))AND(((-731822248) BETWEEN (0.5206600790285081) AND (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-1294302490 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CAST('W4r.D' AS BLOB) THEN CAST('' AS BLOB) ELSE ((((((((0Xe20b7e6)OR(x'b795')))OR(NULL)))AND(NULL)))AND(x'')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '527964191 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1079210572 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '2 sz=-492884721 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)<(735079060))) BETWEEN ((('-250554954')==(0.6216040321087979))) AND (CAST(x'374f' AS INTEGER))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=726730710 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1212577086 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-533707508)IS(0.7202377187003788)))LIKE((('428891986')||('-1896517881')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '-193106578 sz=-163414998'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL IN (x'700a')) IN (NULLIF(-1.753725666E9, 0.2527747768492279))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=66949525 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=1316970630 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-1056507950 sz=-766277585 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.25197036263204853)OR(NULL)))AND(NULL)))GLOB(((NULL) BETWEEN (0.8816921912523761) AND (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-1508878301 sz=-533707508 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=917154641 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-1181959362 sz=-934061900 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '563229944 sz=908930532 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=781693665'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=569697689 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=1976011248'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=1626684258 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=1148453600'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (LOWER(0.2961509397780119))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE (('aO')+('s~k?15Gpw'))  WHEN (((((((('')OR(1981598550)))OR(x'e1a0bda3')))AND(x'cc91')))OR(NULL)) THEN ((NULL)>>('o610')) WHEN ((((NULL)OR(257546480)))AND('-1876424820')) THEN (((0.026799020999434542))<=((-2.03861211E8))) WHEN (((('')OR(x'')))OR('#U')) THEN ((0.43374269345337824) IS TRUE) ELSE MAX('0.6855814930701527', x'') END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-2028645933 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)<<(NULL)))IS((+ (577896215)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-1400486338') NOT BETWEEN (NULL) AND (0x66c3c25d)) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1508567288 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((1.785454839E9)OR(-1679844334)))AND(0X34e4dfd3)) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (0.05656189893078156 IN (0.8450764129679582)) THEN 0.052832966795756775 ELSE '' END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-1 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) IS FALSE))IS(CAST(0xffffffff9028078c AS REAL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1522814140'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-555393371 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1522814140 sz=140040471 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=954013822 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=-250554954'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'19acfab2') ISNULL)) BETWEEN (0.25711791357872826 COLLATE RTRIM) AND (((x'')-('-1310643267')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((- ('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((601168451)!=('1724105309')))IS(CASE '0.24161882779707966'  WHEN '0.8473882388337043' THEN 0.10034486637632911 ELSE -1.997930152E9 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '1604485214 sz=-1324410758 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1383792100'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE WHEN 5.3044978E8 THEN NULL ELSE 0.8816921912523761 END IN ((('1867348518') ISNULL), TOTAL_CHANGES())); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((+ (-1.449216666E9)))AND((~ (0.5206600790285081)))))AND((x'224e' IN ('%wu㭢lc')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((2.046133385E9) NOTNULL) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1283641359 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '2 sz=-169765598 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1103557866 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=2087093688'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '-1753725666 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-246078997 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (CAST('237025254' AS TEXT))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-1612904518 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((((9.4821817E7)AND('1460134820')))OR(x'cc960640')))OR('737289917')))AND('2047148587')))AND('-1481856507')))OR('5xY0v>{E1')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((('-1912314125')OR(x'0cba')))AND(0xffffffff9bdf9c12)) THEN (('236940821')=('\rM')) ELSE CASE WHEN NULL THEN NULL ELSE '' END END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-455130854'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '2 sz=-756017980 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'ab1c' COLLATE BINARY) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1917330293 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((0.49915650356415)<(''))  WHEN (('	w') NOT NULL) THEN (+ (0x79f58489)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '-1873016179 0 sz=-1846368851'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2079319436 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=1229685336 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE 'W0'  WHEN x'' THEN '''*m' WHEN 0.9660510634482978 THEN '' WHEN 'wT5jU(' THEN x'' ELSE 'O>' END COLLATE BINARY; -- 3ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1207850209 0 sz=-1334395868 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)+(0Xffffffff9778451e)))OR((((NULL, x'', 0.4273387894306879))>=((x'7e66', -492884721, '~-O[Af7g*'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-680292694 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.08831021579604781)IS('916094071'))) NOT BETWEEN (CASE x''  WHEN '-1833849110' THEN 0.44333223275812417 END) AND (((NULL)OR(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL(DISTINCT json_array(NULL, 0.34405261153354927), ((NULL)GLOB('298209907'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1896908249 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.7840339196785048)OR(-2.50554954E8)))AND('1887858552'))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1388321630'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '1120960241 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-232304796 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=2077941825 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((((NULL)OR('PX')))AND(x''))  WHEN (('fx') BETWEEN ('lJk1') AND (0Xffffffff8f0e8d14)) THEN (('') NOT NULL) ELSE ((NULL) NOT BETWEEN (NULL) AND (NULL)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-894398022 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)AND(NULL)) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 802514553 sz=1137125141 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=613260714'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE WHEN '1339163952' THEN 1389930979 WHEN x'8feb' THEN 0.020222533025342604 WHEN x'' THEN NULL ELSE NULL END IN ((0.914462224176359 IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '0 sz=-1911855130 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1077584593 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_valid(''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1997930152 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-627905747'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-618071502 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-1134863824 unordered noskipscan'); -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1014774635 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1916002390 0 sz=-619389525 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((-6.07307258E8, x'e450', '0.10034486637632911'))<=((NULL, '7?', NULL))))OR(((1103557866) IS FALSE))))AND(NULL COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.6700089690104853)) BETWEEN (('K')) AND ((1929637619)))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF((((((((((((('-1923172045')AND('OIzz')))AND(NULL)))OR(x'')))AND(29925010)))AND('1902375293')))AND(0.16654810850441404)), x''); -- 1ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-203861211 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=1998981657'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '磠k?.Z!NY'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 0 sz=-1223934242 unordered'); -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)||('1887858552')))LIKE((((('-2013799578')AND(x'ceb9')))AND('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-444852616 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'cae3', 0.9001089239883013, x''))>=(('EJpg⚽', '-750856305', '')))) NOT BETWEEN ((((((((('-1701667887')AND(x'')))AND(NULL)))AND('0.7910354681130681')))OR(NULL))) AND (((-6603190) NOT BETWEEN ('100941630') AND (x'6e2c')))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-1221402336'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT ('-1681301658')))<>(((NULL)IS(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '-369741139 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0x322807f8) NOT BETWEEN (0xfffffffff737c310) AND ('7')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('~T]U*Z')-(x'')))AND(0.7449040500561457 COLLATE NOCASE)))AND((('') IS TRUE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=530449780 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1199372602 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 4ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((((('-408899833')AND(1.241754841E9)))OR(x'')))AND(0.5030950047974391)))OR('481660228')))AND(3.74833949E8)))OR('')))>>((('-1e500')<=('')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 -1677826328'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1968080672 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=1728771698 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((-7.2970752E8, 0.536950882665508, 0x32690141))>=(('-207709770', x'', NULL))) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE NULL  WHEN NULL THEN 668529173 END)&(CASE NULL  WHEN 1.642676138E9 THEN '1724105309' WHEN NULL THEN NULL WHEN x'df6a' THEN x'' ELSE 0X1ada0173 END)); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '1628881177'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.5109455755952094; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-2124662304 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOT NULL)) NOT BETWEEN (((((NULL)AND(0.9897620049410601)))AND('-2030660683'))) AND (CAST('?NU#x5bմ' AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-170578170 -533707508 unordered'); -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '-2001179694 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE BINARY) NOT BETWEEN (((0Xffffffff99255f82)<=('-729707520'))) AND (((-232304796) NOT BETWEEN ('1747478849') AND (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(LOWER('(VJ 2') AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-650195521 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '0 2 sz=394746079 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (((0.05492516526589142)) NOT BETWEEN ((0xffffffff8019d787)) AND ((x'')))  WHEN (('-476605567')>(x'e54f')) THEN (- (NULL)) ELSE ((0X7eefacb3) IS FALSE) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=-1079210572 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=776015145 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS BLOB)) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')IS(NULL)))>>((((0.9340022462790645)) BETWEEN (('0.4737843433774712')) AND ((x''))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE 'ⳏ.' COLLATE NOCASE  WHEN ((((((((0.9088534947735182)AND('')))OR(x'')))AND(NULL)))AND('}ތ')) THEN (((NULL)) NOT BETWEEN (('1398513442')) AND ((x''))) ELSE '⚠L' COLLATE RTRIM END; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_extract((((NULL)) NOT BETWEEN ((-467176183)) AND (('}DFBWcRq'))), ((-1.311386731E9) IS TRUE)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((0.17356692322287393) NOT NULL) THEN ((('鳷땦W%}')) NOT BETWEEN ((x'')) AND ((NULL))) ELSE CASE WHEN '1223875212' THEN -1.677826328E9 END END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1508878301'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE BINARY) BETWEEN ((NOT (NULL))) AND ((0.19842389871991217 IN ('#U')))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1342145663 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '0 2 sz=-1702996937 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '-757967645 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER((- (NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-607307258 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL))>=(('')))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=2038145831 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1358283542'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-671083990) NOT BETWEEN (-2.145790073E9) AND ('737289917'))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=2108437752 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((-729392416) NOT BETWEEN (x'd48b') AND (x'')), CASE ''  WHEN x'' THEN 1308383490 ELSE '' END, ((((((((NULL)AND(0.8967730825845133)))OR(0.34405261153354927)))OR('-324341566')))OR(x''))))<=((CAST(NULL AS NUMERIC), (NOT (NULL)), ('1110470408' IN ())))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'4091')<(0.05492516526589142))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'fd92' AS BLOB) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'e5e0', ((NULL) NOT BETWEEN (NULL) AND (NULL)), (('-1702996937') BETWEEN ('-533707508') AND (5.9153155E8)), -326791142 COLLATE NOCASE, CASE WHEN -1e500 THEN x'31dc5c4753b7' WHEN '0.8213647821031553' THEN x'' WHEN NULL THEN 0X61835a47 ELSE NULL END))<>((CASE WHEN '鴂4k~' THEN 1.223875212E9 END, (((NULL)) NOT BETWEEN ((NULL)) AND ((-1136376594))), ((0.8321100237641748) BETWEEN ('EY') AND (x'')), 0.079029545822907 COLLATE RTRIM, ((x'')=(0.2862644154498183))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((HEX(x''))/((((NULL)) NOT BETWEEN ((-1753038597)) AND ((0.8770319709859898))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) NOT BETWEEN (((-7.29392416E8 IN ()))) AND (((- (NULL))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-1182503222 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '1404902129 0 sz=-1999811238 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1458510812 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'c490')&(839474241)))/((('') NOT BETWEEN (0.8832129144683608) AND ('')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.8856793827913023 AS NUMERIC))/(0.1963771553050997)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL COLLATE RTRIM)OR((x'' IN ('z﨣	Q\DU90')))))OR((('cIB᝺') NOT BETWEEN (-185721321) AND (x'ce95')))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-334467302 428891986 sz=-2076735458 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)>=(2018413732)))OR(load_extension('3o6c>鰒'))))OR((((NULL)) BETWEEN (('-1947585089')) AND (('o'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-962258511 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-1665570606 sz=1263910091 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (CAST(0x79f59639 AS REAL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1673957861'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '696912169 sz=-1997930152'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-441770769 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '2 12982692 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') BETWEEN (0.23605126605992122) AND (x'76883c82'))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '1705248584 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-529217937 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=1494854444'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.3355578509294921; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0xffffffffeeb338d6) ISNULL))<<(CAST('1462993861' AS TEXT))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-1702996937'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((0.18645249556472598) NOT BETWEEN (0.8609953989399566) AND ('2130333784')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1136376594 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 sz=-745437291 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-599641687 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1984640155'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '0 sz=302316750'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN ((NULL)) AND ((((((((((NULL)AND(-692695487)))OR(x'')))AND(x'9898')))OR(591531550))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1837156154'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1314593561 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS(DISTINCT (NULL IN (NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((('530449780')) BETWEEN ((x'')) AND (('601655951'))))AND((+ (NULL)))))AND(((NULL)>=(x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1495380364 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (- (((NULL)==(0Xffffffffb1d5d395)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-44718171'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1621099460 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((x'3f51') NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-232304796 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.0)) NOT BETWEEN (((NOT (NULL)))) AND ((((NULL) NOTNULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-677035515 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((NULL IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS REAL)) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=1839038674 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 1.265596459E9; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1796689641 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=648071018 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1759305160 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((x'7ce5')AND('')))AND(0.9590298918714608)))OR(x'')))OR(0.8285027367736585))) NOT BETWEEN (CAST(NULL AS INTEGER)) AND (QUOTE(NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-851325966 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1320833487 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1920516016 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('악K')/(5.9153155E8))) NOT BETWEEN ((('')+(''))) AND (UNLIKELY(DISTINCT 'ner'))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL COLLATE NOCASE IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE '-1300883521'  WHEN NULL THEN ')syf' END COLLATE RTRIM; -- 3ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (x'' COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((ABS('204550780')) NOT BETWEEN (((((0Xffffffffadeb309a)OR(x'd8b9')))OR('1223875212'))) AND ('[G' COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 sz=1714093044 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((NULL)AND(x'')))OR(0.49220930016127795)), 0x4e0625ab COLLATE RTRIM, CHAR(NULL)))<=((((9.00739988E8) NOT BETWEEN (0xffffffffa910e424) AND (x'c3eb')), '	s_?.g' COLLATE BINARY, ((0.953925178113061) IS TRUE)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '0 sz=-1925397550 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ())) BETWEEN ((- (x'ca71'))) AND ((NOT ('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered noskipscan'); -- 0ms;
ANALYZE; -- 15ms;
UPDATE OR IGNORE vt0 SET c0=9657621; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 15); -- 12ms;
INSERT INTO vt0(vt0) VALUES('automerge=11'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt1 SET c1=NULL, c1=0.964580028788579 WHERE ((rt1.c1 COLLATE RTRIM)>=(rt1.c0)); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 6ms;
INSERT OR IGNORE INTO rt1(c2) VALUES (0.8499628157446468); -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0); -- 1ms;
VACUUM; -- 5ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
PRAGMA application_id; -- 1ms;
UPDATE vt1 SET c0=0.7466264757960244; -- 0ms;
REINDEX; -- 0ms;
PRAGMA temp.cache_spill; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 10); -- 0ms;
SELECT rtreecheck('rt1'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 931757562); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -873780921);\n; -- 0ms;
PRAGMA main.cell_size_check = false; -- 0ms;
UPDATE vt0 SET (c0)=(0.9871226644644785) WHERE CAST(CAST(vt0.c0 AS REAL) AS NUMERIC); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=5'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1319323334); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=8'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
PRAGMA main.secure_delete = false; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(NULL) WHERE ((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(CASE NULL  WHEN vt0.c0 THEN vt0.c0 END)))AND(vt0.c0 COLLATE NOCASE)))AND(CAST(vt0.c0 AS BLOB))))AND((NOT (vt0.c0)))); -- 0ms;
SELECT rtreecheck('rt1'); -- 2ms;
ANALYZE vt1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1968080672 unordered noskipscan'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 5); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
PRAGMA integrity_check; -- 0ms;
ANALYZE; -- 0ms;
PRAGMA reverse_unordered_selects = false; -- 0ms;
INSERT OR REPLACE INTO rt1(c2, c0) VALUES (0.14514401517697206, '-959230114'), (0xffffffffd6b64e41, 'sP'), (0.44681501788410705, '-323069361'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.32844576158874583); -- 0ms;
PRAGMA incremental_vacuum; -- 0ms;
INSERT INTO vt1(vt1) VALUES('automerge=14'); -- 0ms;
PRAGMA secure_delete = false; -- 0ms;
UPDATE OR IGNORE vt1 SET (c0, c0)=(0.15515563484646322, x'') WHERE ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN (x'70cb') AND ((~ (vt1.c0)))); -- 0ms;
UPDATE vt0 SET (c0, c0)=(x'ed81', '0.5208923281962378'); -- 0ms;
UPDATE OR IGNORE vt1 SET (c0, c0)=('lތid', NULL) WHERE vt1.c0; -- 0ms;
ROLLBACK TRANSACTION; -- 10ms;
UPDATE OR ROLLBACK vt1 SET c0=0.5002531445880765, c0='59594195', c0=3.0231675E8; -- 0ms;
PRAGMA application_id; -- 0ms;
PRAGMA main.foreign_keys; -- 0ms;
UPDATE OR IGNORE vt1 SET c0=NULL, c0=NULL WHERE (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), vt1.c0, CAST(vt1.c0 AS INTEGER))) AND (((((vt1.c0))=((vt1.c0))), (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))); -- 0ms;
UPDATE OR REPLACE vt1 SET c0=NULL, c0=NULL, c0=''; -- 0ms;
PRAGMA main.secure_delete; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '23901'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 15); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
UPDATE OR IGNORE rt1 SET (c0, c0)=('	_mbahi_', NULL) WHERE TRIM(((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2)), ABS(DISTINCT 0.07138482802806279)); -- 0ms;
REINDEX  rt1; -- 0ms;
UPDATE OR IGNORE vt1 SET c0='/4d&jxlr' WHERE (~ (((vt1.c0) NOTNULL))); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1114822183);\n; -- 1ms;
PRAGMA incremental_vacuum(1654068291); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 7); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 6ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
END TRANSACTION; -- 0ms;
UPDATE OR ABORT rt1 SET (c2)=(0.04973994340823107) WHERE CASE ((rt1.c1)LIKE(rt1.c2))  WHEN ((rt1.c2)OR(rt1.c1)) THEN (~ (0.9312780342685709)) ELSE json_valid(rt1.c1) END; -- 12ms;
UPDATE OR REPLACE vt0 SET (c0)=(906896982); -- 0ms;
UPDATE OR IGNORE vt1 SET (c0)=('505263860'); -- 0ms;
UPDATE OR IGNORE vt1 SET (c0)=('1103557866'); -- 0ms;
CREATE VIEW v0(c0) AS SELECT 0.6399026003926418 FROM vt1, vt0, rt1; -- 7ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1855059347); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
UPDATE OR IGNORE vt1 SET c0='-729707520', c0='*hD%g^s?'; -- 0ms;
UPDATE OR IGNORE vt1 SET c0=0.1340020331853079 WHERE (((vt1.c0)) BETWEEN (((- (vt1.c0)))) AND ((vt1.c0))); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=7'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 607571391); -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=1110457738,15');\n; -- 0ms;
PRAGMA incremental_vacuum(2037732904); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '54360'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 17ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON (((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) IN ());
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON (((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) IN ()) WHERE (((((CAST(vt0.c0 AS BLOB))OR(json_object(vt0.c0, vt0.c0, v0.c0, vt0.c0))))OR(((vt0.c0) IS TRUE)))) UNION ALL SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON (((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) IN ()) WHERE ((NOT (((((CAST(vt0.c0 AS BLOB))OR(json_object(vt0.c0, vt0.c0, v0.c0, vt0.c0))))OR(((vt0.c0) IS TRUE)))))) UNION ALL SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON (((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) IN ()) WHERE (((((((CAST(vt0.c0 AS BLOB))OR(json_object(vt0.c0, vt0.c0, v0.c0, vt0.c0))))OR(((vt0.c0) IS TRUE)))) ISNULL));
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON (((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) IN ());
SELECT DISTINCT rt1.c0 FROM rt1, vt0;
SELECT DISTINCT rt1.c0 FROM rt1, vt0 WHERE (((CHAR(vt0.c0, vt0.c0, rt1.c0))>(0.4498445679916383 COLLATE RTRIM))) UNION SELECT DISTINCT rt1.c0 FROM rt1, vt0 WHERE ((NOT (((CHAR(vt0.c0, vt0.c0, rt1.c0))>(0.4498445679916383 COLLATE RTRIM))))) UNION SELECT DISTINCT rt1.c0 FROM rt1, vt0 WHERE (((((CHAR(vt0.c0, vt0.c0, rt1.c0))>(0.4498445679916383 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT rt1.c0 FROM rt1, vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0) NOT BETWEEN ((+ ('&!'))) AND (((vt0.c0)IS NOT(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0) NOT BETWEEN ((+ ('&!'))) AND (((vt0.c0)IS NOT(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN ((+ ('&!'))) AND (((vt0.c0)IS NOT(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt1.c1, rt1.c2, vt0.c0 FROM rt1, vt1, vt0 GROUP BY rt1.c1, rt1.c2, vt0.c0;
SELECT rt1.c1, rt1.c2, vt0.c0 FROM rt1, vt1, vt0 GROUP BY rt1.c1, rt1.c2, vt0.c0 HAVING TOTAL(((rt1.c1) BETWEEN (GROUP_CONCAT(rt1.c1)) AND (rt1.c0))) UNION ALL SELECT ALL rt1.c1, rt1.c2, vt0.c0 FROM rt1, vt1, vt0 GROUP BY rt1.c1, rt1.c2, vt0.c0 HAVING (NOT (TOTAL(((rt1.c1) BETWEEN (GROUP_CONCAT(rt1.c1)) AND (rt1.c0))))) UNION ALL SELECT ALL rt1.c1, rt1.c2, vt0.c0 FROM rt1, vt1, vt0 GROUP BY rt1.c1, rt1.c2, vt0.c0 HAVING ((TOTAL(((rt1.c1) BETWEEN (GROUP_CONCAT(rt1.c1)) AND (rt1.c0)))) ISNULL);
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((((((vt1.c0)AND(0.8566856433047751)))AND(vt0.c0))) IS FALSE)) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((NOT (((((((vt1.c0)AND(0.8566856433047751)))AND(vt0.c0))) IS FALSE)))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((((((((vt1.c0)AND(0.8566856433047751)))AND(vt0.c0))) IS FALSE)) ISNULL));
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1;
SELECT DISTINCT v0.c0, rt1.c2, vt0.c0, vt1.c0 FROM rt1, v0, vt0 NOT INDEXED, vt1;
SELECT DISTINCT v0.c0, rt1.c2, vt0.c0, vt1.c0 FROM rt1, v0, vt0, vt1 WHERE (((- ('946614646')) IN (rt1.c2))) UNION SELECT DISTINCT v0.c0, rt1.c2, vt0.c0, vt1.c0 FROM rt1, v0, vt0, vt1 WHERE ((NOT (((- ('946614646')) IN (rt1.c2))))) UNION SELECT DISTINCT v0.c0, rt1.c2, vt0.c0, vt1.c0 FROM rt1, v0, vt0, vt1 WHERE (((((- ('946614646')) IN (rt1.c2))) ISNULL));
SELECT DISTINCT v0.c0, rt1.c2, vt0.c0, vt1.c0 FROM rt1, v0, vt0 NOT INDEXED, vt1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0) IS TRUE)) BETWEEN (((vt0.c0) ISNULL)) AND (TRIM(DISTINCT NULL)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) IS TRUE)) BETWEEN (((vt0.c0) ISNULL)) AND (TRIM(DISTINCT NULL)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c0) IS TRUE)) BETWEEN (((vt0.c0) ISNULL)) AND (TRIM(DISTINCT NULL)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING SUM(TIME(vt0.c0, vt0.c0, TOTAL(COUNT(*)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (SUM(TIME(vt0.c0, vt0.c0, TOTAL(COUNT(*)))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM(TIME(vt0.c0, vt0.c0, TOTAL(COUNT(*))))) ISNULL);
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1;
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE ((((((((rt1.c0)OR(rt1.c0)))OR(rt1.c0))))==((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c0)))))) UNION ALL SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE ((NOT ((((((((rt1.c0)OR(rt1.c0)))OR(rt1.c0))))=((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c0)))))))) UNION ALL SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE ((((((((((rt1.c0)OR(rt1.c0)))OR(rt1.c0))))=((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c0)))))) ISNULL));
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1;
SELECT DISTINCT vt1.c0, v0.c0 FROM vt1, v0;
SELECT DISTINCT vt1.c0, v0.c0 FROM vt1, v0 WHERE (CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS TEXT)) UNION SELECT DISTINCT vt1.c0, v0.c0 FROM vt1, v0 WHERE ((NOT (CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS TEXT)))) UNION SELECT DISTINCT vt1.c0, v0.c0 FROM vt1, v0 WHERE (((CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS TEXT)) ISNULL));
SELECT DISTINCT vt1.c0, v0.c0 FROM vt1, v0;
SELECT ALL v0.c0, vt0.c0, rt1.c1, vt1.c0, rt1.c2, rt1.c0 FROM vt0 FULL OUTER JOIN rt1 ON CAST('NER' AS REAL) INNER JOIN v0 ON ((((NULL)<<(v0.c0)))>>(v0.c0 COLLATE BINARY)) INNER JOIN vt1 ON (((+ (vt0.c0))) BETWEEN (rt1.c0) AND (((rt1.c1)|(rt1.c1)))) GROUP BY v0.c0, vt0.c0, rt1.c1, vt1.c0, rt1.c2, rt1.c0;
SELECT v0.c0, vt0.c0, rt1.c1, vt1.c0, rt1.c2, rt1.c0 FROM vt0 FULL OUTER JOIN rt1 ON CAST('NER' AS REAL) INNER JOIN v0 ON ((((NULL)<<(v0.c0)))>>(v0.c0 COLLATE BINARY)) INNER JOIN vt1 ON (((+ (vt0.c0))) BETWEEN (rt1.c0) AND (((rt1.c1)|(rt1.c1)))) WHERE (((((vt0.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))) IN ())) GROUP BY v0.c0, vt0.c0, rt1.c1, vt1.c0, rt1.c2, rt1.c0 UNION SELECT v0.c0, vt0.c0, rt1.c1, vt1.c0, rt1.c2, rt1.c0 FROM vt0 FULL OUTER JOIN rt1 ON CAST('NER' AS REAL) INNER JOIN v0 ON ((((NULL)<<(v0.c0)))>>(v0.c0 COLLATE BINARY)) INNER JOIN vt1 ON (((+ (vt0.c0))) BETWEEN (rt1.c0) AND (((rt1.c1)|(rt1.c1)))) WHERE ((NOT (((((vt0.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))) IN ())))) GROUP BY v0.c0, vt0.c0, rt1.c1, vt1.c0, rt1.c2, rt1.c0 UNION SELECT v0.c0, vt0.c0, rt1.c1, vt1.c0, rt1.c2, rt1.c0 FROM vt0 FULL OUTER JOIN rt1 ON CAST('NER' AS REAL) INNER JOIN v0 ON ((((NULL)<<(v0.c0)))>>(v0.c0 COLLATE BINARY)) INNER JOIN vt1 ON (((+ (vt0.c0))) BETWEEN (rt1.c0) AND (((rt1.c1)|(rt1.c1)))) WHERE (((((((vt0.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))) IN ())) ISNULL)) GROUP BY v0.c0, vt0.c0, rt1.c1, vt1.c0, rt1.c2, rt1.c0;
SELECT ALL v0.c0, vt0.c0, rt1.c1, vt1.c0, rt1.c2, rt1.c0 FROM vt0 FULL OUTER JOIN rt1 ON CAST('NER' AS REAL) INNER JOIN v0 ON ((((NULL)<<(v0.c0)))>>(v0.c0 COLLATE BINARY)) INNER JOIN vt1 ON (((+ (vt0.c0))) BETWEEN (rt1.c0) AND (((rt1.c1)|(rt1.c1)))) GROUP BY v0.c0, vt0.c0, rt1.c1, vt1.c0, rt1.c2, rt1.c0;
SELECT ALL rt1.c2, rt1.c0 FROM v0, vt0, vt1, rt1 GROUP BY rt1.c2, rt1.c0;
SELECT ALL rt1.c2, rt1.c0 FROM v0, vt0, vt1, rt1 GROUP BY rt1.c2, rt1.c0 HAVING GROUP_CONCAT(GROUP_CONCAT(0.4750515205613969)) UNION ALL SELECT ALL rt1.c2, rt1.c0 FROM v0, vt0, vt1, rt1 GROUP BY rt1.c2, rt1.c0 HAVING (NOT (GROUP_CONCAT(GROUP_CONCAT(0.4750515205613969)))) UNION ALL SELECT ALL rt1.c2, rt1.c0 FROM v0, vt0, vt1, rt1 GROUP BY rt1.c2, rt1.c0 HAVING ((GROUP_CONCAT(GROUP_CONCAT(0.4750515205613969))) ISNULL);
SELECT ALL * FROM v0, vt0 NOT INDEXED, vt1, rt1;
SELECT * FROM v0, vt0, vt1, rt1 WHERE ((v0.c0 IN ())) UNION ALL SELECT ALL * FROM v0, vt0, vt1, rt1 WHERE ((NOT ((v0.c0 IN ())))) UNION ALL SELECT * FROM v0, vt0, vt1, rt1 WHERE ((((v0.c0 IN ())) ISNULL));
SELECT ALL * FROM v0, vt0 NOT INDEXED, vt1, rt1;
SELECT DISTINCT * FROM rt1, v0;
SELECT DISTINCT * FROM rt1, v0 WHERE (((((CASE rt1.c1  WHEN rt1.c2 THEN rt1.c0 ELSE v0.c0 END)OR(((((rt1.c1)OR(v0.c0)))AND(rt1.c0)))))AND(((rt1.c0)<=(rt1.c2))))) UNION SELECT DISTINCT * FROM rt1, v0 WHERE ((NOT (((((CASE rt1.c1  WHEN rt1.c2 THEN rt1.c0 ELSE v0.c0 END)OR(((((rt1.c1)OR(v0.c0)))AND(rt1.c0)))))AND(((rt1.c0)<=(rt1.c2))))))) UNION SELECT DISTINCT * FROM rt1, v0 WHERE (((((((CASE rt1.c1  WHEN rt1.c2 THEN rt1.c0 ELSE v0.c0 END)OR(((((rt1.c1)OR(v0.c0)))AND(rt1.c0)))))AND(((rt1.c0)<=(rt1.c2))))) ISNULL));
SELECT DISTINCT * FROM rt1, v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((((GLOB(v0.c0, v0.c0))OR(((v0.c0)||(v0.c0)))))OR((v0.c0 IN ())))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((((GLOB(v0.c0, v0.c0))OR(((v0.c0)||(v0.c0)))))OR((v0.c0 IN ())))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((((GLOB(v0.c0, v0.c0))OR(((v0.c0)||(v0.c0)))))OR((v0.c0 IN ())))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt1.c1, rt1.c0, vt0.c0 FROM vt0 FULL OUTER JOIN vt1 ON TYPEOF(((rt1.c1)>>(vt0.c0))) CROSS JOIN rt1 ON ((rt1.c1)AND(rt1.c2)) COLLATE RTRIM FULL OUTER JOIN v0 ON (((((rt1.c1)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))+(x'')) GROUP BY rt1.c1, rt1.c0, vt0.c0;
SELECT ALL rt1.c0, rt1.c2 FROM rt1, v0, vt1, vt0;
SELECT rt1.c0, rt1.c2 FROM rt1, v0, vt1, vt0 WHERE (((v0.c0)-(rt1.c1)) COLLATE BINARY) UNION ALL SELECT ALL rt1.c0, rt1.c2 FROM rt1, v0, vt1, vt0 WHERE ((NOT (((v0.c0)-(rt1.c1)) COLLATE BINARY))) UNION ALL SELECT rt1.c0, rt1.c2 FROM rt1, v0, vt1, vt0 WHERE (((((v0.c0)-(rt1.c1)) COLLATE BINARY) ISNULL));
SELECT ALL rt1.c0, rt1.c2 FROM rt1, v0, vt1, vt0;
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0, vt1, v0 INNER JOIN rt1 ON 0xffffffff9e1c3c25;
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0, vt1, v0 INNER JOIN rt1 ON 0Xffffffff9e1c3c25 WHERE (NULL) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0, vt1, v0 INNER JOIN rt1 ON 0xffffffff9e1c3c25 WHERE ((NOT (NULL))) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0, vt1, v0 INNER JOIN rt1 ON 0xffffffff9e1c3c25 WHERE (((NULL) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0, vt1, v0 INNER JOIN rt1 ON 0xffffffff9e1c3c25;
SELECT vt1.c0, rt1.c0, rt1.c2 FROM v0, rt1, vt1 GROUP BY vt1.c0, rt1.c0, rt1.c2;
SELECT vt1.c0, rt1.c0, rt1.c2 FROM v0, rt1, vt1 WHERE (((((vt1.c0) BETWEEN (x'') AND (rt1.c1)))<=((v0.c0 IN ())))) GROUP BY vt1.c0, rt1.c0, rt1.c2 UNION SELECT vt1.c0, rt1.c0, rt1.c2 FROM v0, rt1, vt1 WHERE ((NOT (((((vt1.c0) BETWEEN (x'') AND (rt1.c1)))<=((v0.c0 IN ())))))) GROUP BY vt1.c0, rt1.c0, rt1.c2 UNION SELECT vt1.c0, rt1.c0, rt1.c2 FROM v0, rt1, vt1 WHERE (((((((vt1.c0) BETWEEN (x'') AND (rt1.c1)))<=((v0.c0 IN ())))) ISNULL)) GROUP BY vt1.c0, rt1.c0, rt1.c2;
SELECT vt1.c0, rt1.c0, rt1.c2 FROM v0, rt1, vt1 GROUP BY vt1.c0, rt1.c0, rt1.c2;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING GROUP_CONCAT(TOTAL(COUNT(*))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (GROUP_CONCAT(TOTAL(COUNT(*))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((GROUP_CONCAT(TOTAL(COUNT(*)))) ISNULL);
SELECT * FROM vt1, vt0, rt1;
SELECT * FROM vt1, vt0, rt1 WHERE (NULL) UNION ALL SELECT * FROM vt1, vt0, rt1 WHERE ((NOT (NULL))) UNION ALL SELECT * FROM vt1, vt0, rt1 WHERE (((NULL) ISNULL));
SELECT * FROM vt1, vt0, rt1;
SELECT DISTINCT vt0.c0 FROM vt0, rt1;
SELECT DISTINCT vt0.c0 FROM vt0, rt1 WHERE (((((((((((rt1.c1)<=(rt1.c2)))OR((rt1.c0 IN ()))))AND(rt1.c2 COLLATE NOCASE)))AND(vt0.c0)))AND(rt1.c1 COLLATE RTRIM))) UNION SELECT DISTINCT vt0.c0 FROM vt0, rt1 WHERE ((NOT (((((((((((rt1.c1)<=(rt1.c2)))OR((rt1.c0 IN ()))))AND(rt1.c2 COLLATE NOCASE)))AND(vt0.c0)))AND(rt1.c1 COLLATE RTRIM))))) UNION SELECT DISTINCT vt0.c0 FROM vt0, rt1 WHERE (((((((((((((rt1.c1)<=(rt1.c2)))OR((rt1.c0 IN ()))))AND(rt1.c2 COLLATE NOCASE)))AND(vt0.c0)))AND(rt1.c1 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0, rt1;
SELECT rt1.c2, v0.c0 FROM vt1, vt0, rt1, v0 GROUP BY rt1.c2, v0.c0;
SELECT ALL rt1.c2, v0.c0 FROM vt1, vt0, rt1, v0 WHERE (((((v0.c0)AND(CAST(vt1.c0 AS TEXT))))AND(((rt1.c1)%(rt1.c0))))) GROUP BY rt1.c2, v0.c0 UNION SELECT rt1.c2, v0.c0 FROM vt1, vt0, rt1, v0 WHERE ((NOT (((((v0.c0)AND(CAST(vt1.c0 AS TEXT))))AND(((rt1.c1)%(rt1.c0))))))) GROUP BY rt1.c2, v0.c0 UNION SELECT ALL rt1.c2, v0.c0 FROM vt1, vt0, rt1, v0 WHERE (((((((v0.c0)AND(CAST(vt1.c0 AS TEXT))))AND(((rt1.c1)%(rt1.c0))))) ISNULL)) GROUP BY rt1.c2, v0.c0;
SELECT rt1.c2, v0.c0 FROM vt1, vt0, rt1, v0 GROUP BY rt1.c2, v0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ABS(COUNT(GROUP_CONCAT(vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (ABS(COUNT(GROUP_CONCAT(vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((ABS(COUNT(GROUP_CONCAT(vt1.c0)))) ISNULL);
SELECT ALL * FROM vt0, v0 LEFT OUTER JOIN vt1 ON CAST(CAST('1148453600' AS INTEGER) AS REAL) LEFT OUTER JOIN rt1 ON ((((NULL) NOT NULL)) BETWEEN (x'' COLLATE RTRIM) AND (0.785297616340452));
SELECT * FROM vt0, v0 LEFT OUTER JOIN vt1 ON CAST(CAST('1148453600' AS INTEGER) AS REAL) LEFT OUTER JOIN rt1 ON ((((NULL) NOT NULL)) BETWEEN (x'' COLLATE RTRIM) AND (0.785297616340452)) WHERE (((((((rt1.c2)+(vt1.c0)))AND(((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c1)))))AND((((rt1.c2)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) UNION ALL SELECT ALL * FROM vt0, v0 LEFT OUTER JOIN vt1 ON CAST(CAST('1148453600' AS INTEGER) AS REAL) LEFT OUTER JOIN rt1 ON ((((NULL) NOT NULL)) BETWEEN (x'' COLLATE RTRIM) AND (0.785297616340452)) WHERE ((NOT (((((((rt1.c2)+(vt1.c0)))AND(((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c1)))))AND((((rt1.c2)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))))) UNION ALL SELECT ALL * FROM vt0, v0 LEFT OUTER JOIN vt1 ON CAST(CAST('1148453600' AS INTEGER) AS REAL) LEFT OUTER JOIN rt1 ON ((((NULL) NOT NULL)) BETWEEN (x'' COLLATE RTRIM) AND (0.785297616340452)) WHERE (((((((((rt1.c2)+(vt1.c0)))AND(((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c1)))))AND((((rt1.c2)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) ISNULL));
SELECT ALL * FROM vt0, v0 LEFT OUTER JOIN vt1 ON CAST(CAST('1148453600' AS INTEGER) AS REAL) LEFT OUTER JOIN rt1 ON ((((NULL) NOT NULL)) BETWEEN (x'' COLLATE RTRIM) AND (0.785297616340452));
SELECT DISTINCT vt0.c0 FROM v0 CROSS JOIN vt0 ON (((v0.c0 IN (v0.c0)))<>(CAST(v0.c0 AS BLOB)));
SELECT DISTINCT vt0.c0 FROM v0 CROSS JOIN vt0 ON (((v0.c0 IN (v0.c0)))!=(CAST(v0.c0 AS BLOB))) WHERE (((vt0.c0)<(v0.c0)) COLLATE NOCASE) UNION SELECT DISTINCT vt0.c0 FROM v0 CROSS JOIN vt0 ON (((v0.c0 IN (v0.c0)))!=(CAST(v0.c0 AS BLOB))) WHERE ((NOT (((vt0.c0)<(v0.c0)) COLLATE NOCASE))) UNION SELECT DISTINCT vt0.c0 FROM v0 NOT INDEXED CROSS JOIN vt0 ON (((v0.c0 IN (v0.c0)))<>(CAST(v0.c0 AS BLOB))) WHERE (((((vt0.c0)<(v0.c0)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT vt0.c0 FROM v0 CROSS JOIN vt0 ON (((v0.c0 IN (v0.c0)))<>(CAST(v0.c0 AS BLOB)));
SELECT ALL vt1.c0, rt1.c1, vt0.c0, rt1.c2 FROM rt1, vt1, v0, vt0 GROUP BY vt1.c0, rt1.c1, vt0.c0, rt1.c2;
SELECT ALL vt1.c0, rt1.c1, vt0.c0, rt1.c2 FROM rt1, vt1, v0, vt0 WHERE (((((((rt1.c2))>((v0.c0)))))<=((((rt1.c1) IS TRUE))))) GROUP BY vt1.c0, rt1.c1, vt0.c0, rt1.c2 UNION SELECT ALL vt1.c0, rt1.c1, vt0.c0, rt1.c2 FROM rt1, vt1, v0, vt0 WHERE ((NOT (((((((rt1.c2))>((v0.c0)))))<=((((rt1.c1) IS TRUE))))))) GROUP BY vt1.c0, rt1.c1, vt0.c0, rt1.c2 UNION SELECT ALL vt1.c0, rt1.c1, vt0.c0, rt1.c2 FROM rt1, vt1, v0, vt0 WHERE (((((((((rt1.c2))>((v0.c0)))))<=((((rt1.c1) IS TRUE))))) ISNULL)) GROUP BY vt1.c0, rt1.c1, vt0.c0, rt1.c2;
SELECT ALL vt1.c0, rt1.c1, vt0.c0, rt1.c2 FROM rt1, vt1, v0, vt0 GROUP BY vt1.c0, rt1.c1, vt0.c0, rt1.c2;
SELECT v0.c0, vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON ((vt0.c0) NOTNULL) COLLATE BINARY GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON ((vt0.c0) NOTNULL) COLLATE BINARY GROUP BY v0.c0, vt0.c0 HAVING SUM((((SUM(GROUP_CONCAT(vt0.c0))))>((SUM(MIN(AVG(v0.c0))))))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON ((vt0.c0) NOTNULL) COLLATE BINARY GROUP BY v0.c0, vt0.c0 HAVING (NOT (SUM((((SUM(GROUP_CONCAT(vt0.c0))))>((SUM(MIN(AVG(v0.c0))))))))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON ((vt0.c0) NOTNULL) COLLATE BINARY GROUP BY v0.c0, vt0.c0 HAVING ((SUM((((SUM(GROUP_CONCAT(vt0.c0))))>((SUM(MIN(AVG(v0.c0)))))))) ISNULL);
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE ((- ((((v0.c0, v0.c0, 0.9274446277509529))<=((v0.c0, v0.c0, v0.c0)))))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT ((- ((((v0.c0, v0.c0, 0.9274446277509529))<=((v0.c0, v0.c0, v0.c0)))))))) UNION ALL SELECT * FROM v0 WHERE ((((- ((((v0.c0, v0.c0, 0.9274446277509529))<=((v0.c0, v0.c0, v0.c0)))))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT rt1.c0, rt1.c1 FROM rt1;
SELECT DISTINCT rt1.c0, rt1.c1 FROM rt1 WHERE ('591531550') UNION SELECT DISTINCT rt1.c0, rt1.c1 FROM rt1 WHERE ((NOT ('591531550'))) UNION SELECT DISTINCT rt1.c0, rt1.c1 FROM rt1 WHERE ((('591531550') ISNULL));
SELECT DISTINCT rt1.c0, rt1.c1 FROM rt1;
SELECT vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON (vt0.c0 COLLATE BINARY IN ()) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON (vt0.c0 COLLATE BINARY IN ()) WHERE (((~ (vt0.c0)) IN ())) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON (vt0.c0 COLLATE BINARY IN ()) WHERE ((NOT (((~ (vt0.c0)) IN ())))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON (vt0.c0 COLLATE BINARY IN ()) WHERE (((((~ (vt0.c0)) IN ())) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON (vt0.c0 COLLATE BINARY IN ()) GROUP BY vt0.c0;
SELECT rt1.c0 FROM v0 CROSS JOIN vt1 ON v0.c0 CROSS JOIN rt1 ON (+ (((rt1.c2)>=(v0.c0)))) GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM v0 CROSS JOIN vt1 ON v0.c0 CROSS JOIN rt1 ON (+ (((rt1.c2)>=(v0.c0)))) GROUP BY rt1.c0 HAVING ((COUNT(COUNT(COUNT(*)))) BETWEEN (((rt1.c2) NOT NULL)) AND (AVG(vt1.c0))) UNION ALL SELECT ALL rt1.c0 FROM v0 CROSS JOIN vt1 ON v0.c0 CROSS JOIN rt1 ON (+ (((rt1.c2)>=(v0.c0)))) GROUP BY rt1.c0 HAVING (NOT (((COUNT(COUNT(COUNT(*)))) BETWEEN (((rt1.c2) NOT NULL)) AND (AVG(vt1.c0))))) UNION ALL SELECT ALL rt1.c0 FROM v0 CROSS JOIN vt1 ON v0.c0 CROSS JOIN rt1 ON (+ (((rt1.c2)>=(v0.c0)))) GROUP BY rt1.c0 HAVING ((((COUNT(COUNT(COUNT(*)))) BETWEEN (((rt1.c2) NOT NULL)) AND (AVG(vt1.c0)))) ISNULL);
SELECT ALL * FROM rt1, v0, vt0;
SELECT ALL * FROM rt1, v0, vt0 WHERE ('666409191') UNION ALL SELECT * FROM rt1, v0, vt0 NOT INDEXED WHERE ((NOT ('666409191'))) UNION ALL SELECT * FROM rt1, v0, vt0 WHERE ((('666409191') ISNULL));
SELECT ALL * FROM rt1, v0, vt0;
SELECT DISTINCT rt1.c2 FROM vt0, rt1, vt1, v0;
SELECT DISTINCT rt1.c2 FROM vt0, rt1, vt1, v0 WHERE ((((vt0.c0))>((rt1.c1))) COLLATE NOCASE) UNION SELECT DISTINCT rt1.c2 FROM vt0, rt1, vt1, v0 WHERE ((NOT ((((vt0.c0))>((rt1.c1))) COLLATE NOCASE))) UNION SELECT DISTINCT rt1.c2 FROM vt0, rt1, vt1, v0 WHERE ((((((vt0.c0))>((rt1.c1))) COLLATE NOCASE) ISNULL));
SELECT DISTINCT rt1.c2 FROM vt0, rt1, vt1, v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) AS BLOB)) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) AS BLOB)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) AS BLOB)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt1.c2, rt1.c1, vt1.c0, rt1.c0 FROM rt1, vt0 FULL OUTER JOIN vt1 ON (NULLIF(vt0.c0, vt0.c0) IN ()) FULL OUTER JOIN v0 ON CASE 0.04797798614483795  WHEN ((vt0.c0)>(rt1.c2)) THEN UNLIKELY(v0.c0) WHEN rt1.c1 THEN rt1.c1 COLLATE BINARY WHEN ((v0.c0) ISNULL) THEN (((v0.c0, vt0.c0, rt1.c2))>((rt1.c1, vt0.c0, rt1.c2))) END GROUP BY rt1.c2, rt1.c1, vt1.c0, rt1.c0;
SELECT ALL rt1.c2, rt1.c1, vt1.c0, rt1.c0 FROM rt1, vt0 FULL OUTER JOIN vt1 ON (NULLIF(vt0.c0, vt0.c0) IN ()) FULL OUTER JOIN v0 ON CASE 0.04797798614483795  WHEN ((vt0.c0)>(rt1.c2)) THEN UNLIKELY(v0.c0) WHEN rt1.c1 THEN rt1.c1 COLLATE BINARY WHEN ((v0.c0) ISNULL) THEN (((v0.c0, vt0.c0, rt1.c2))>((rt1.c1, vt0.c0, rt1.c2))) END GROUP BY rt1.c2, rt1.c1, vt1.c0, rt1.c0 HAVING SQLITE_VERSION() UNION ALL SELECT rt1.c2, rt1.c1, vt1.c0, rt1.c0 FROM rt1, vt0 FULL OUTER JOIN vt1 ON (NULLIF(vt0.c0, vt0.c0) IN ()) FULL OUTER JOIN v0 ON CASE 0.04797798614483795  WHEN ((vt0.c0)>(rt1.c2)) THEN UNLIKELY(v0.c0) WHEN rt1.c1 THEN rt1.c1 COLLATE BINARY WHEN ((v0.c0) ISNULL) THEN (((v0.c0, vt0.c0, rt1.c2))>((rt1.c1, vt0.c0, rt1.c2))) END GROUP BY rt1.c2, rt1.c1, vt1.c0, rt1.c0 HAVING (NOT (SQLITE_VERSION())) UNION ALL SELECT rt1.c2, rt1.c1, vt1.c0, rt1.c0 FROM rt1, vt0 FULL OUTER JOIN vt1 ON (NULLIF(vt0.c0, vt0.c0) IN ()) FULL OUTER JOIN v0 ON CASE 0.04797798614483795  WHEN ((vt0.c0)>(rt1.c2)) THEN UNLIKELY(v0.c0) WHEN rt1.c1 THEN rt1.c1 COLLATE BINARY WHEN ((v0.c0) ISNULL) THEN (((v0.c0, vt0.c0, rt1.c2))>((rt1.c1, vt0.c0, rt1.c2))) END GROUP BY rt1.c2, rt1.c1, vt1.c0, rt1.c0 HAVING ((SQLITE_VERSION()) ISNULL);
SELECT ALL rt1.c2, rt1.c1, vt1.c0, rt1.c0 FROM rt1, vt0 FULL OUTER JOIN vt1 ON (NULLIF(vt0.c0, vt0.c0) IN ()) FULL OUTER JOIN v0 ON CASE 0.04797798614483795  WHEN ((vt0.c0)>(rt1.c2)) THEN UNLIKELY(v0.c0) WHEN rt1.c1 THEN rt1.c1 COLLATE BINARY WHEN ((v0.c0) ISNULL) THEN (((v0.c0, vt0.c0, rt1.c2))>((rt1.c1, vt0.c0, rt1.c2))) END GROUP BY rt1.c2, rt1.c1, vt1.c0, rt1.c0;
SELECT ALL rt1.c2, rt1.c1, vt1.c0, rt1.c0 FROM rt1, vt0 FULL OUTER JOIN vt1 ON (NULLIF(vt0.c0, vt0.c0) IN ()) FULL OUTER JOIN v0 ON CASE 0.04797798614483795  WHEN ((vt0.c0)>(rt1.c2)) THEN UNLIKELY(v0.c0) WHEN rt1.c1 THEN rt1.c1 COLLATE BINARY WHEN ((v0.c0) ISNULL) THEN (((v0.c0, vt0.c0, rt1.c2))>((rt1.c1, vt0.c0, rt1.c2))) END GROUP BY rt1.c2, rt1.c1, vt1.c0, rt1.c0 HAVING SQLITE_VERSION() UNION ALL SELECT rt1.c2, rt1.c1, vt1.c0, rt1.c0 FROM rt1, vt0 FULL OUTER JOIN vt1 ON (NULLIF(vt0.c0, vt0.c0) IN ()) FULL OUTER JOIN v0 ON CASE 0.04797798614483795  WHEN ((vt0.c0)>(rt1.c2)) THEN UNLIKELY(v0.c0) WHEN rt1.c1 THEN rt1.c1 COLLATE BINARY WHEN ((v0.c0) ISNULL) THEN (((v0.c0, vt0.c0, rt1.c2))>((rt1.c1, vt0.c0, rt1.c2))) END GROUP BY rt1.c2, rt1.c1, vt1.c0, rt1.c0 HAVING (NOT (SQLITE_VERSION())) UNION ALL SELECT rt1.c2, rt1.c1, vt1.c0, rt1.c0 FROM rt1, vt0 FULL OUTER JOIN vt1 ON (NULLIF(vt0.c0, vt0.c0) IN ()) FULL OUTER JOIN v0 ON CASE 0.04797798614483795  WHEN ((vt0.c0)>(rt1.c2)) THEN UNLIKELY(v0.c0) WHEN rt1.c1 THEN rt1.c1 COLLATE BINARY WHEN ((v0.c0) ISNULL) THEN (((v0.c0, vt0.c0, rt1.c2))>((rt1.c1, vt0.c0, rt1.c2))) END GROUP BY rt1.c2, rt1.c1, vt1.c0, rt1.c0 HAVING ((SQLITE_VERSION()) ISNULL);
SELECT ALL rt1.c2, rt1.c1, vt1.c0, rt1.c0 FROM rt1, vt0 FULL OUTER JOIN vt1 ON (NULLIF(vt0.c0, vt0.c0) IN ()) FULL OUTER JOIN v0 ON CASE 0.04797798614483795  WHEN ((vt0.c0)>(rt1.c2)) THEN UNLIKELY(v0.c0) WHEN rt1.c1 THEN rt1.c1 COLLATE BINARY WHEN ((v0.c0) ISNULL) THEN (((v0.c0, vt0.c0, rt1.c2))>((rt1.c1, vt0.c0, rt1.c2))) END GROUP BY rt1.c2, rt1.c1, vt1.c0, rt1.c0;
SELECT * FROM rt1 INNER JOIN v0 ON ((((rt1.c1 IN ())))>(((rt1.c2 IN ())))) FULL OUTER JOIN vt0 ON (((((((('')OR(rt1.c0)))AND(0.9950443694330835)))AND(rt1.c0)))OR(vt0.c0)) COLLATE RTRIM;
SELECT ALL * FROM rt1 INNER JOIN v0 ON ((((rt1.c1 IN ())))>(((rt1.c2 IN ())))) FULL OUTER JOIN vt0 ON (((((((('')OR(rt1.c0)))AND(0.9950443694330835)))AND(rt1.c0)))OR(vt0.c0)) COLLATE RTRIM WHERE ((((rt1.c2, NULL, rt1.c1)) BETWEEN (((('')>=(rt1.c0)), ((rt1.c1)<=(rt1.c2)), 0.5718460259588247)) AND (((~ (rt1.c0)), IFNULL(DISTINCT rt1.c1, vt0.c0), vt0.c0 COLLATE NOCASE)))) UNION ALL SELECT ALL * FROM rt1 INNER JOIN v0 ON ((((rt1.c1 IN ())))>(((rt1.c2 IN ())))) FULL OUTER JOIN vt0 ON (((((((('')OR(rt1.c0)))AND(0.9950443694330835)))AND(rt1.c0)))OR(vt0.c0)) COLLATE RTRIM WHERE ((NOT ((((rt1.c2, NULL, rt1.c1)) BETWEEN (((('')>=(rt1.c0)), ((rt1.c1)<=(rt1.c2)), 0.5718460259588247)) AND (((~ (rt1.c0)), IFNULL(DISTINCT rt1.c1, vt0.c0), vt0.c0 COLLATE NOCASE)))))) UNION ALL SELECT ALL * FROM rt1 INNER JOIN v0 ON ((((rt1.c1 IN ())))>(((rt1.c2 IN ())))) FULL OUTER JOIN vt0 ON (((((((('')OR(rt1.c0)))AND(0.9950443694330835)))AND(rt1.c0)))OR(vt0.c0)) COLLATE RTRIM WHERE ((((((rt1.c2, NULL, rt1.c1)) BETWEEN (((('')>=(rt1.c0)), ((rt1.c1)<=(rt1.c2)), 0.5718460259588247)) AND (((~ (rt1.c0)), IFNULL(DISTINCT rt1.c1, vt0.c0), vt0.c0 COLLATE NOCASE)))) ISNULL));
SELECT * FROM rt1 INNER JOIN v0 ON ((((rt1.c1 IN ())))>(((rt1.c2 IN ())))) FULL OUTER JOIN vt0 ON (((((((('')OR(rt1.c0)))AND(0.9950443694330835)))AND(rt1.c0)))OR(vt0.c0)) COLLATE RTRIM;
SELECT DISTINCT * FROM vt1, rt1, v0, vt0;
SELECT DISTINCT * FROM vt1, rt1, v0 NOT INDEXED, vt0 WHERE ((((((rt1.c1)) BETWEEN ((rt1.c2)) AND ((rt1.c1)))) IS FALSE)) UNION SELECT DISTINCT * FROM vt1, rt1, v0, vt0 WHERE ((NOT ((((((rt1.c1)) BETWEEN ((rt1.c2)) AND ((rt1.c1)))) IS FALSE)))) UNION SELECT DISTINCT * FROM vt1, rt1, v0, vt0 WHERE ((((((((rt1.c1)) BETWEEN ((rt1.c2)) AND ((rt1.c1)))) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM vt1, rt1, v0, vt0;
SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2;
SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE (((((((rt1.c0)||(rt1.c1)))OR(((0X5e286c0a)+(rt1.c1)))))AND(LOWER(rt1.c2)))) GROUP BY rt1.c1, rt1.c0, rt1.c2 UNION SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE ((NOT (((((((rt1.c0)||(rt1.c1)))OR(((0X5e286c0a)+(rt1.c1)))))AND(LOWER(rt1.c2)))))) GROUP BY rt1.c1, rt1.c0, rt1.c2 UNION SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE (((((((((rt1.c0)||(rt1.c1)))OR(((0X5e286c0a)+(rt1.c1)))))AND(LOWER(rt1.c2)))) ISNULL)) GROUP BY rt1.c1, rt1.c0, rt1.c2;
SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2;
SELECT v0.c0 FROM rt1, v0, vt0 GROUP BY v0.c0;
SELECT v0.c0 FROM rt1, v0, vt0 GROUP BY v0.c0 HAVING x'86bce623' UNION ALL SELECT ALL v0.c0 FROM rt1, v0, vt0 GROUP BY v0.c0 HAVING (NOT (x'86bce623')) UNION ALL SELECT v0.c0 FROM rt1, v0 NOT INDEXED, vt0 GROUP BY v0.c0 HAVING ((x'86bce623') ISNULL);
SELECT v0.c0 FROM rt1, v0, vt0 GROUP BY v0.c0;
SELECT v0.c0 FROM rt1, v0, vt0 GROUP BY v0.c0 HAVING x'86bce623' UNION ALL SELECT ALL v0.c0 FROM rt1, v0, vt0 GROUP BY v0.c0 HAVING (NOT (x'86bce623')) UNION ALL SELECT v0.c0 FROM rt1, v0 NOT INDEXED, vt0 GROUP BY v0.c0 HAVING ((x'86bce623') ISNULL);
SELECT v0.c0 FROM rt1, v0, vt0 GROUP BY v0.c0;
SELECT ALL * FROM rt1 LEFT OUTER JOIN vt0 ON ((((v0.c0 IN ()), ((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c2)), COALESCE(vt0.c0, rt1.c1, v0.c0, vt0.c0), (v0.c0 IN (vt0.c0)), ((rt1.c0)/(v0.c0))))!=(((((v0.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0))), CASE WHEN vt0.c0 THEN rt1.c2 ELSE rt1.c0 END, (~ (rt1.c2)), (((rt1.c2)) BETWEEN ((rt1.c0)) AND ((rt1.c0))), LIKE(rt1.c1, vt0.c0)))) INNER JOIN v0 ON ((((v0.c0 COLLATE BINARY)AND(DATE(rt1.c1, vt0.c0, rt1.c0, rt1.c1, rt1.c0))))OR(((rt1.c0)=(rt1.c0))));
SELECT ALL * FROM rt1 LEFT OUTER JOIN vt0 ON ((((v0.c0 IN ()), ((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c2)), COALESCE(vt0.c0, rt1.c1, v0.c0, vt0.c0), (v0.c0 IN (vt0.c0)), ((rt1.c0)/(v0.c0))))<>(((((v0.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0))), CASE WHEN vt0.c0 THEN rt1.c2 ELSE rt1.c0 END, (~ (rt1.c2)), (((rt1.c2)) BETWEEN ((rt1.c0)) AND ((rt1.c0))), LIKE(rt1.c1, vt0.c0)))) INNER JOIN v0 ON ((((v0.c0 COLLATE BINARY)AND(DATE(rt1.c1, vt0.c0, rt1.c0, rt1.c1, rt1.c0))))OR(((rt1.c0)==(rt1.c0)))) WHERE (CAST(ABS('-742655434') AS NUMERIC)) UNION ALL SELECT ALL * FROM rt1 LEFT OUTER JOIN vt0 ON ((((v0.c0 IN ()), ((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c2)), COALESCE(vt0.c0, rt1.c1, v0.c0, vt0.c0), (v0.c0 IN (vt0.c0)), ((rt1.c0)/(v0.c0))))!=(((((v0.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0))), CASE WHEN vt0.c0 THEN rt1.c2 ELSE rt1.c0 END, (~ (rt1.c2)), (((rt1.c2)) BETWEEN ((rt1.c0)) AND ((rt1.c0))), LIKE(rt1.c1, vt0.c0)))) INNER JOIN v0 ON ((((v0.c0 COLLATE BINARY)AND(DATE(rt1.c1, vt0.c0, rt1.c0, rt1.c1, rt1.c0))))OR(((rt1.c0)=(rt1.c0)))) WHERE ((NOT (CAST(ABS('-742655434') AS NUMERIC)))) UNION ALL SELECT ALL * FROM rt1 LEFT OUTER JOIN vt0 ON ((((v0.c0 IN ()), ((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c2)), COALESCE(vt0.c0, rt1.c1, v0.c0, vt0.c0), (v0.c0 IN (vt0.c0)), ((rt1.c0)/(v0.c0))))<>(((((v0.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0))), CASE WHEN vt0.c0 THEN rt1.c2 ELSE rt1.c0 END, (~ (rt1.c2)), (((rt1.c2)) BETWEEN ((rt1.c0)) AND ((rt1.c0))), LIKE(rt1.c1, vt0.c0)))) INNER JOIN v0 ON ((((v0.c0 COLLATE BINARY)AND(DATE(rt1.c1, vt0.c0, rt1.c0, rt1.c1, rt1.c0))))OR(((rt1.c0)=(rt1.c0)))) WHERE (((CAST(ABS('-742655434') AS NUMERIC)) ISNULL));
SELECT ALL * FROM rt1 LEFT OUTER JOIN vt0 ON ((((v0.c0 IN ()), ((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c2)), COALESCE(vt0.c0, rt1.c1, v0.c0, vt0.c0), (v0.c0 IN (vt0.c0)), ((rt1.c0)/(v0.c0))))!=(((((v0.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0))), CASE WHEN vt0.c0 THEN rt1.c2 ELSE rt1.c0 END, (~ (rt1.c2)), (((rt1.c2)) BETWEEN ((rt1.c0)) AND ((rt1.c0))), LIKE(rt1.c1, vt0.c0)))) INNER JOIN v0 ON ((((v0.c0 COLLATE BINARY)AND(DATE(rt1.c1, vt0.c0, rt1.c0, rt1.c1, rt1.c0))))OR(((rt1.c0)=(rt1.c0))));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((LIKELY(DISTINCT '-1995074439'))OR(((vt1.c0)>>(vt1.c0)))))AND('1902375293'))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((((LIKELY(DISTINCT '-1995074439'))OR(((vt1.c0)>>(vt1.c0)))))AND('1902375293'))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((((LIKELY(DISTINCT '-1995074439'))OR(((vt1.c0)>>(vt1.c0)))))AND('1902375293'))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt0.c0, vt1.c0, rt1.c0, rt1.c1, v0.c0 FROM vt1, rt1, vt0, v0 GROUP BY vt0.c0, vt1.c0, rt1.c0, rt1.c1, v0.c0;
SELECT vt0.c0, vt1.c0, rt1.c0, rt1.c1, v0.c0 FROM vt1, rt1, vt0, v0 WHERE (rt1.c1) GROUP BY vt0.c0, vt1.c0, rt1.c0, rt1.c1, v0.c0 UNION SELECT ALL vt0.c0, vt1.c0, rt1.c0, rt1.c1, v0.c0 FROM vt1, rt1, vt0, v0 WHERE ((NOT (rt1.c1))) GROUP BY vt0.c0, vt1.c0, rt1.c0, rt1.c1, v0.c0 UNION SELECT vt0.c0, vt1.c0, rt1.c0, rt1.c1, v0.c0 FROM vt1, rt1, vt0, v0 WHERE (((rt1.c1) ISNULL)) GROUP BY vt0.c0, vt1.c0, rt1.c0, rt1.c1, v0.c0;
SELECT vt0.c0, vt1.c0, rt1.c0, rt1.c1, v0.c0 FROM vt1, rt1, vt0, v0 GROUP BY vt0.c0, vt1.c0, rt1.c0, rt1.c1, v0.c0;
SELECT ALL rt1.c2, v0.c0, rt1.c1, rt1.c0 FROM v0 INNER JOIN vt0 ON ((((rt1.c2))<=((rt1.c1))) IN ()) INNER JOIN rt1 ON vt0.c0 GROUP BY rt1.c2, v0.c0, rt1.c1, rt1.c0;
SELECT rt1.c2, v0.c0, rt1.c1, rt1.c0 FROM v0 INNER JOIN vt0 ON ((((rt1.c2))<=((rt1.c1))) IN ()) INNER JOIN rt1 ON vt0.c0 GROUP BY rt1.c2, v0.c0, rt1.c1, rt1.c0 HAVING TOTAL(SUM(NULL)) UNION ALL SELECT ALL rt1.c2, v0.c0, rt1.c1, rt1.c0 FROM v0 INNER JOIN vt0 ON ((((rt1.c2))<=((rt1.c1))) IN ()) INNER JOIN rt1 ON vt0.c0 GROUP BY rt1.c2, v0.c0, rt1.c1, rt1.c0 HAVING (NOT (TOTAL(SUM(NULL)))) UNION ALL SELECT rt1.c2, v0.c0, rt1.c1, rt1.c0 FROM v0 INNER JOIN vt0 ON ((((rt1.c2))<=((rt1.c1))) IN ()) INNER JOIN rt1 ON vt0.c0 GROUP BY rt1.c2, v0.c0, rt1.c1, rt1.c0 HAVING ((TOTAL(SUM(NULL))) ISNULL);
SELECT * FROM v0 NATURAL JOIN vt1;
SELECT * FROM v0 NATURAL JOIN vt1 WHERE (v0.c0) UNION ALL SELECT * FROM v0 NATURAL JOIN vt1 WHERE ((NOT (v0.c0))) UNION ALL SELECT ALL * FROM v0 NATURAL JOIN vt1 WHERE (((v0.c0) ISNULL));
SELECT * FROM v0 NATURAL JOIN vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) BETWEEN (((vt1.c0)IS(vt1.c0))) AND ((vt1.c0 IN ())))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) BETWEEN (((vt1.c0)IS(vt1.c0))) AND ((vt1.c0 IN ())))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) BETWEEN (((vt1.c0)IS(vt1.c0))) AND ((vt1.c0 IN ())))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT rt1.c2, v0.c0, vt0.c0, rt1.c1 FROM v0, vt0 FULL OUTER JOIN rt1 ON (((NOT (rt1.c0)))>(vt0.c0)) GROUP BY rt1.c2, v0.c0, vt0.c0, rt1.c1;
SELECT rt1.c2, v0.c0, vt0.c0, rt1.c1 FROM v0, vt0 FULL OUTER JOIN rt1 ON (((NOT (rt1.c0)))>(vt0.c0)) WHERE ((+ ((((vt0.c0))<=((v0.c0)))))) GROUP BY rt1.c2, v0.c0, vt0.c0, rt1.c1 UNION SELECT ALL rt1.c2, v0.c0, vt0.c0, rt1.c1 FROM v0, vt0 FULL OUTER JOIN rt1 ON (((NOT (rt1.c0)))>(vt0.c0)) WHERE ((NOT ((+ ((((vt0.c0))<=((v0.c0)))))))) GROUP BY rt1.c2, v0.c0, vt0.c0, rt1.c1 UNION SELECT rt1.c2, v0.c0, vt0.c0, rt1.c1 FROM v0, vt0 FULL OUTER JOIN rt1 ON (((NOT (rt1.c0)))>(vt0.c0)) WHERE ((((+ ((((vt0.c0))<=((v0.c0)))))) ISNULL)) GROUP BY rt1.c2, v0.c0, vt0.c0, rt1.c1;
SELECT rt1.c2, v0.c0, vt0.c0, rt1.c1 FROM v0, vt0 FULL OUTER JOIN rt1 ON (((NOT (rt1.c0)))>(vt0.c0)) GROUP BY rt1.c2, v0.c0, vt0.c0, rt1.c1;
SELECT rt1.c1 FROM v0, rt1 GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM v0, rt1 GROUP BY rt1.c1 HAVING MAX(TOTAL(AVG(SUM(MIN(COUNT(GROUP_CONCAT(v0.c0))))))) UNION ALL SELECT rt1.c1 FROM v0, rt1 GROUP BY rt1.c1 HAVING (NOT (MAX(TOTAL(AVG(SUM(MIN(COUNT(GROUP_CONCAT(v0.c0))))))))) UNION ALL SELECT rt1.c1 FROM v0, rt1 GROUP BY rt1.c1 HAVING ((MAX(TOTAL(AVG(SUM(MIN(COUNT(GROUP_CONCAT(v0.c0)))))))) ISNULL);
SELECT * FROM rt1, vt1 INNER JOIN v0 ON CAST(v0.c0 AS NUMERIC);
SELECT ALL * FROM rt1, vt1 INNER JOIN v0 ON CAST(v0.c0 AS NUMERIC) WHERE (v0.c0) UNION ALL SELECT * FROM rt1, vt1 INNER JOIN v0 ON CAST(v0.c0 AS NUMERIC) WHERE ((NOT (v0.c0))) UNION ALL SELECT * FROM rt1, vt1 INNER JOIN v0 ON CAST(v0.c0 AS NUMERIC) WHERE (((v0.c0) ISNULL));
SELECT * FROM rt1, vt1 INNER JOIN v0 ON CAST(v0.c0 AS NUMERIC);
SELECT DISTINCT * FROM v0 NOT INDEXED, vt1;
SELECT DISTINCT * FROM v0, vt1 WHERE (((((vt1.c0)AND(vt1.c0)))OR('0.18645249556472598')) COLLATE RTRIM) UNION SELECT DISTINCT * FROM v0, vt1 WHERE ((NOT (((((vt1.c0)AND(vt1.c0)))OR('0.18645249556472598')) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM v0, vt1 WHERE (((((((vt1.c0)AND(vt1.c0)))OR('0.18645249556472598')) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM v0 NOT INDEXED, vt1;
SELECT rt1.c0, rt1.c2, vt1.c0, rt1.c1, v0.c0 FROM rt1, vt1, v0 GROUP BY rt1.c0, rt1.c2, vt1.c0, rt1.c1, v0.c0;
SELECT rt1.c0, rt1.c2, vt1.c0, rt1.c1, v0.c0 FROM rt1, vt1, v0 WHERE (CASE ((v0.c0) BETWEEN (vt1.c0) AND (rt1.c1))  WHEN ((rt1.c2)-(rt1.c1)) THEN (~ (rt1.c2)) WHEN ((vt1.c0)>(rt1.c0)) THEN (((rt1.c0))<((rt1.c2))) WHEN ((vt1.c0) BETWEEN (rt1.c0) AND (rt1.c1)) THEN x'' END) GROUP BY rt1.c0, rt1.c2, vt1.c0, rt1.c1, v0.c0 UNION SELECT rt1.c0, rt1.c2, vt1.c0, rt1.c1, v0.c0 FROM rt1, vt1, v0 WHERE ((NOT (CASE ((v0.c0) BETWEEN (vt1.c0) AND (rt1.c1))  WHEN ((rt1.c2)-(rt1.c1)) THEN (~ (rt1.c2)) WHEN ((vt1.c0)>(rt1.c0)) THEN (((rt1.c0))<((rt1.c2))) WHEN ((vt1.c0) BETWEEN (rt1.c0) AND (rt1.c1)) THEN x'' END))) GROUP BY rt1.c0, rt1.c2, vt1.c0, rt1.c1, v0.c0 UNION SELECT ALL rt1.c0, rt1.c2, vt1.c0, rt1.c1, v0.c0 FROM rt1, vt1, v0 WHERE (((CASE ((v0.c0) BETWEEN (vt1.c0) AND (rt1.c1))  WHEN ((rt1.c2)-(rt1.c1)) THEN (~ (rt1.c2)) WHEN ((vt1.c0)>(rt1.c0)) THEN (((rt1.c0))<((rt1.c2))) WHEN ((vt1.c0) BETWEEN (rt1.c0) AND (rt1.c1)) THEN x'' END) ISNULL)) GROUP BY rt1.c0, rt1.c2, vt1.c0, rt1.c1, v0.c0;
SELECT rt1.c0, rt1.c2, vt1.c0, rt1.c1, v0.c0 FROM rt1, vt1, v0 GROUP BY rt1.c0, rt1.c2, vt1.c0, rt1.c1, v0.c0;
SELECT rt1.c1, rt1.c0, rt1.c2, v0.c0, vt0.c0, vt1.c0 FROM vt0, v0 RIGHT OUTER JOIN vt1 ON rt1.c1 LEFT OUTER JOIN rt1 ON 1400036839 GROUP BY rt1.c1, rt1.c0, rt1.c2, v0.c0, vt0.c0, vt1.c0;
SELECT ALL TOTAL(UNLIKELY(DISTINCT ((v0.c0) IS FALSE))) FROM v0, rt1, vt1, vt0;
SELECT ALL * FROM rt1, vt0;
SELECT ALL * FROM rt1, vt0 WHERE (CAST(NULL AS NUMERIC)) UNION ALL SELECT ALL * FROM rt1, vt0 WHERE ((NOT (CAST(NULL AS NUMERIC)))) UNION ALL SELECT * FROM rt1, vt0 WHERE (((CAST(NULL AS NUMERIC)) ISNULL));
SELECT ALL * FROM rt1, vt0;
SELECT DISTINCT rt1.c2, vt0.c0, vt1.c0, rt1.c0, rt1.c1 FROM vt0, vt1, v0 INNER JOIN rt1 ON CAST(CAST(vt1.c0 AS NUMERIC) AS REAL);
SELECT DISTINCT rt1.c2, vt0.c0, vt1.c0, rt1.c0, rt1.c1 FROM vt0, vt1, v0 INNER JOIN rt1 ON CAST(CAST(vt1.c0 AS NUMERIC) AS REAL) WHERE (rt1.c2) UNION SELECT DISTINCT rt1.c2, vt0.c0, vt1.c0, rt1.c0, rt1.c1 FROM vt0, vt1, v0 INNER JOIN rt1 ON CAST(CAST(vt1.c0 AS NUMERIC) AS REAL) WHERE ((NOT (rt1.c2))) UNION SELECT DISTINCT rt1.c2, vt0.c0, vt1.c0, rt1.c0, rt1.c1 FROM vt0, vt1, v0 INNER JOIN rt1 ON CAST(CAST(vt1.c0 AS NUMERIC) AS REAL) WHERE (((rt1.c2) ISNULL));
SELECT DISTINCT rt1.c2, vt0.c0, vt1.c0, rt1.c0, rt1.c1 FROM vt0, vt1, v0 INNER JOIN rt1 ON CAST(CAST(vt1.c0 AS NUMERIC) AS REAL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((- (vt1.c0)) IN (((vt1.c0) ISNULL), ((vt1.c0)||(vt1.c0))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((- (vt1.c0)) IN (((vt1.c0) ISNULL), ((vt1.c0)||(vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((- (vt1.c0)) IN (((vt1.c0) ISNULL), ((vt1.c0)||(vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt1.c2, v0.c0, vt0.c0, vt1.c0 FROM v0, vt1, rt1, vt0 GROUP BY rt1.c2, v0.c0, vt0.c0, vt1.c0;
SELECT ALL rt1.c2, v0.c0, vt0.c0, vt1.c0 FROM v0, vt1, rt1, vt0 GROUP BY rt1.c2, v0.c0, vt0.c0, vt1.c0 HAVING (((((((vt0.c0)OR(rt1.c1)))OR(rt1.c2))))<>((SUM(MIN(GROUP_CONCAT(rt1.c1)))))) UNION ALL SELECT ALL rt1.c2, v0.c0, vt0.c0, vt1.c0 FROM v0, vt1, rt1, vt0 GROUP BY rt1.c2, v0.c0, vt0.c0, vt1.c0 HAVING (NOT ((((((((vt0.c0)OR(rt1.c1)))OR(rt1.c2))))!=((SUM(MIN(GROUP_CONCAT(rt1.c1)))))))) UNION ALL SELECT ALL rt1.c2, v0.c0, vt0.c0, vt1.c0 FROM v0, vt1 NOT INDEXED, rt1, vt0 GROUP BY rt1.c2, v0.c0, vt0.c0, vt1.c0 HAVING (((((((((vt0.c0)OR(rt1.c1)))OR(rt1.c2))))<>((SUM(MIN(GROUP_CONCAT(rt1.c1))))))) ISNULL);
SELECT * FROM vt1, v0 INNER JOIN vt0 ON ((rt1.c1 COLLATE BINARY) NOT BETWEEN (CASE v0.c0  WHEN rt1.c2 THEN v0.c0 ELSE vt0.c0 END) AND (CAST(vt0.c0 AS NUMERIC))) FULL OUTER JOIN rt1 ON CAST(rt1.c2 AS NUMERIC);
SELECT DISTINCT * FROM vt1, rt1, vt0;
SELECT DISTINCT * FROM vt1, rt1, vt0 WHERE (((((((((((((((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)))AND(rt1.c1)))OR(vt0.c0)))OR(vt0.c0)))OR(rt1.c2)))AND(rt1.c2 COLLATE BINARY)))AND(CAST(rt1.c1 AS INTEGER)))) UNION SELECT DISTINCT * FROM vt1, rt1, vt0 WHERE ((NOT (((((((((((((((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)))AND(rt1.c1)))OR(vt0.c0)))OR(vt0.c0)))OR(rt1.c2)))AND(rt1.c2 COLLATE BINARY)))AND(CAST(rt1.c1 AS INTEGER)))))) UNION SELECT DISTINCT * FROM vt1, rt1, vt0 WHERE (((((((((((((((((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)))AND(rt1.c1)))OR(vt0.c0)))OR(vt0.c0)))OR(rt1.c2)))AND(rt1.c2 COLLATE BINARY)))AND(CAST(rt1.c1 AS INTEGER)))) ISNULL));
SELECT DISTINCT * FROM vt1, rt1, vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) NOTNULL)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0 COLLATE BINARY) NOTNULL)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0 COLLATE BINARY) NOTNULL)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt1.c2, rt1.c1, rt1.c0, v0.c0, vt0.c0 FROM vt0, vt1, v0, rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0, v0.c0, vt0.c0;
SELECT ALL rt1.c2, rt1.c1, rt1.c0, v0.c0, vt0.c0 FROM vt0, vt1, v0, rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0, v0.c0, vt0.c0 HAVING ((((((COUNT(rt1.c2))OR(COUNT(*))))AND(COUNT(*))))IS(((TOTAL(TOTAL(TOTAL(COUNT(NULL))))) BETWEEN (SUM(MAX(vt1.c0))) AND (SUM(SUM(vt1.c0)))))) UNION ALL SELECT rt1.c2, rt1.c1, rt1.c0, v0.c0, vt0.c0 FROM vt0, vt1, v0, rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0, v0.c0, vt0.c0 HAVING (NOT (((((((COUNT(rt1.c2))OR(COUNT(*))))AND(COUNT(*))))IS(((TOTAL(TOTAL(TOTAL(COUNT(NULL))))) BETWEEN (SUM(MAX(vt1.c0))) AND (SUM(SUM(vt1.c0)))))))) UNION ALL SELECT ALL rt1.c2, rt1.c1, rt1.c0, v0.c0, vt0.c0 FROM vt0, vt1, v0, rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0, v0.c0, vt0.c0 HAVING ((((((((COUNT(rt1.c2))OR(COUNT(*))))AND(COUNT(*))))IS(((TOTAL(TOTAL(TOTAL(COUNT(NULL))))) BETWEEN (SUM(MAX(vt1.c0))) AND (SUM(SUM(vt1.c0))))))) ISNULL);
SELECT ALL rt1.c1, vt1.c0, rt1.c0, vt0.c0 FROM vt1, v0, rt1, vt0;
SELECT ALL rt1.c1, vt1.c0, rt1.c0, vt0.c0 FROM vt1, v0, rt1, vt0 WHERE (CAST((+ (v0.c0)) AS BLOB)) UNION ALL SELECT rt1.c1, vt1.c0, rt1.c0, vt0.c0 FROM vt1, v0, rt1, vt0 WHERE ((NOT (CAST((+ (v0.c0)) AS BLOB)))) UNION ALL SELECT ALL rt1.c1, vt1.c0, rt1.c0, vt0.c0 FROM vt1, v0, rt1, vt0 WHERE (((CAST((+ (v0.c0)) AS BLOB)) ISNULL));
SELECT ALL rt1.c1, vt1.c0, rt1.c0, vt0.c0 FROM vt1, v0, rt1, vt0;
SELECT DISTINCT rt1.c2, rt1.c0, rt1.c1 FROM v0, rt1;
SELECT DISTINCT rt1.c2, rt1.c0, rt1.c1 FROM v0, rt1 WHERE (CASE x'2a2a'  WHEN ((((((((rt1.c1)OR(rt1.c1)))OR(rt1.c2)))AND(rt1.c1)))AND(x'')) THEN LIKELY(DISTINCT v0.c0) WHEN ((rt1.c1)<(rt1.c0)) THEN ((rt1.c2) NOT BETWEEN (NULL) AND (rt1.c0)) WHEN CASE WHEN v0.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN v0.c0 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 END THEN ((v0.c0) NOT BETWEEN (rt1.c1) AND (0x79f58489)) ELSE ((rt1.c1)-(x'')) END) UNION SELECT DISTINCT rt1.c2, rt1.c0, rt1.c1 FROM v0, rt1 WHERE ((NOT (CASE x'2a2a'  WHEN ((((((((rt1.c1)OR(rt1.c1)))OR(rt1.c2)))AND(rt1.c1)))AND(x'')) THEN LIKELY(DISTINCT v0.c0) WHEN ((rt1.c1)<(rt1.c0)) THEN ((rt1.c2) NOT BETWEEN (NULL) AND (rt1.c0)) WHEN CASE WHEN v0.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN v0.c0 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 END THEN ((v0.c0) NOT BETWEEN (rt1.c1) AND (0x79f58489)) ELSE ((rt1.c1)-(x'')) END))) UNION SELECT DISTINCT rt1.c2, rt1.c0, rt1.c1 FROM v0, rt1 WHERE (((CASE x'2a2a'  WHEN ((((((((rt1.c1)OR(rt1.c1)))OR(rt1.c2)))AND(rt1.c1)))AND(x'')) THEN LIKELY(DISTINCT v0.c0) WHEN ((rt1.c1)<(rt1.c0)) THEN ((rt1.c2) NOT BETWEEN (NULL) AND (rt1.c0)) WHEN CASE WHEN v0.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN v0.c0 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 END THEN ((v0.c0) NOT BETWEEN (rt1.c1) AND (0X79f58489)) ELSE ((rt1.c1)-(x'')) END) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c0, rt1.c1 FROM v0, rt1;
SELECT rt1.c2, rt1.c1, rt1.c0, vt0.c0, v0.c0 FROM v0, rt1, vt0 GROUP BY rt1.c2, rt1.c1, rt1.c0, vt0.c0, v0.c0;
SELECT ALL rt1.c2, rt1.c1, rt1.c0, vt0.c0, v0.c0 FROM v0, rt1, vt0 WHERE (CASE WHEN (NOT (rt1.c2)) THEN ((rt1.c1) IS FALSE) END) GROUP BY rt1.c2, rt1.c1, rt1.c0, vt0.c0, v0.c0 UNION SELECT rt1.c2, rt1.c1, rt1.c0, vt0.c0, v0.c0 FROM v0, rt1, vt0 WHERE ((NOT (CASE WHEN (NOT (rt1.c2)) THEN ((rt1.c1) IS FALSE) END))) GROUP BY rt1.c2, rt1.c1, rt1.c0, vt0.c0, v0.c0 UNION SELECT ALL rt1.c2, rt1.c1, rt1.c0, vt0.c0, v0.c0 FROM v0, rt1, vt0 WHERE (((CASE WHEN (NOT (rt1.c2)) THEN ((rt1.c1) IS FALSE) END) ISNULL)) GROUP BY rt1.c2, rt1.c1, rt1.c0, vt0.c0, v0.c0;
SELECT rt1.c2, rt1.c1, rt1.c0, vt0.c0, v0.c0 FROM v0, rt1, vt0 GROUP BY rt1.c2, rt1.c1, rt1.c0, vt0.c0, v0.c0;
SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING CASE WHEN AVG(rt1.c1) THEN COUNT(rt1.c2) END UNION ALL SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING (NOT (CASE WHEN AVG(rt1.c1) THEN COUNT(rt1.c2) END)) UNION ALL SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING ((CASE WHEN AVG(rt1.c1) THEN COUNT(rt1.c2) END) ISNULL);
SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING CASE WHEN AVG(rt1.c1) THEN COUNT(rt1.c2) END UNION ALL SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING (NOT (CASE WHEN AVG(rt1.c1) THEN COUNT(rt1.c2) END)) UNION ALL SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING ((CASE WHEN AVG(rt1.c1) THEN COUNT(rt1.c2) END) ISNULL);
SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT ALL * FROM v0, vt0 INNER JOIN vt1 ON CASE CASE vt1.c0  WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN ((vt1.c0)GLOB(vt0.c0)) THEN v0.c0 WHEN ((v0.c0) ISNULL) THEN ((((vt1.c0)AND(v0.c0)))OR(vt1.c0)) WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE v0.c0 END THEN CASE WHEN vt0.c0 THEN vt0.c0 END END;
SELECT * FROM v0, vt0 INNER JOIN vt1 ON CASE CASE vt1.c0  WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN ((vt1.c0)GLOB(vt0.c0)) THEN v0.c0 WHEN ((v0.c0) ISNULL) THEN ((((vt1.c0)AND(v0.c0)))OR(vt1.c0)) WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE v0.c0 END THEN CASE WHEN vt0.c0 THEN vt0.c0 END END WHERE ((- (CAST(vt1.c0 AS NUMERIC)))) UNION ALL SELECT ALL * FROM v0, vt0 INNER JOIN vt1 ON CASE CASE vt1.c0  WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN ((vt1.c0)GLOB(vt0.c0)) THEN v0.c0 WHEN ((v0.c0) ISNULL) THEN ((((vt1.c0)AND(v0.c0)))OR(vt1.c0)) WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE v0.c0 END THEN CASE WHEN vt0.c0 THEN vt0.c0 END END WHERE ((NOT ((- (CAST(vt1.c0 AS NUMERIC)))))) UNION ALL SELECT ALL * FROM v0, vt0 INNER JOIN vt1 ON CASE CASE vt1.c0  WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN ((vt1.c0)GLOB(vt0.c0)) THEN v0.c0 WHEN ((v0.c0) ISNULL) THEN ((((vt1.c0)AND(v0.c0)))OR(vt1.c0)) WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE v0.c0 END THEN CASE WHEN vt0.c0 THEN vt0.c0 END END WHERE ((((- (CAST(vt1.c0 AS NUMERIC)))) ISNULL));
SELECT ALL * FROM v0, vt0 INNER JOIN vt1 ON CASE CASE vt1.c0  WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN ((vt1.c0)GLOB(vt0.c0)) THEN v0.c0 WHEN ((v0.c0) ISNULL) THEN ((((vt1.c0)AND(v0.c0)))OR(vt1.c0)) WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE v0.c0 END THEN CASE WHEN vt0.c0 THEN vt0.c0 END END;
SELECT DISTINCT * FROM vt0, rt1;
SELECT DISTINCT * FROM vt0, rt1 WHERE (((rt1.c1) NOT BETWEEN (((vt0.c0)<(rt1.c2))) AND ((~ (x''))))) UNION SELECT DISTINCT * FROM vt0, rt1 WHERE ((NOT (((rt1.c1) NOT BETWEEN (((vt0.c0)<(rt1.c2))) AND ((~ (x''))))))) UNION SELECT DISTINCT * FROM vt0, rt1 WHERE (((((rt1.c1) NOT BETWEEN (((vt0.c0)<(rt1.c2))) AND ((~ (x''))))) ISNULL));
SELECT DISTINCT * FROM vt0, rt1;
SELECT rt1.c0, rt1.c1, v0.c0 FROM rt1 RIGHT OUTER JOIN v0 ON 0.31486096252553086 FULL OUTER JOIN vt1 ON (((rt1.c1)) BETWEEN ((((v0.c0) NOT BETWEEN (rt1.c0) AND (NULL)))) AND ((CASE WHEN NULL THEN rt1.c2 END))) GROUP BY rt1.c0, rt1.c1, v0.c0;
SELECT ALL rt1.c0, rt1.c1, v0.c0 FROM rt1 RIGHT OUTER JOIN v0 ON 0.31486096252553086 FULL OUTER JOIN vt1 ON (((rt1.c1)) BETWEEN ((((v0.c0) NOT BETWEEN (rt1.c0) AND (NULL)))) AND ((CASE WHEN NULL THEN rt1.c2 END))) WHERE ((((rt1.c1))<=((rt1.c1))) COLLATE RTRIM) GROUP BY rt1.c0, rt1.c1, v0.c0 UNION SELECT rt1.c0, rt1.c1, v0.c0 FROM rt1 RIGHT OUTER JOIN v0 ON 0.31486096252553086 FULL OUTER JOIN vt1 ON (((rt1.c1)) BETWEEN ((((v0.c0) NOT BETWEEN (rt1.c0) AND (NULL)))) AND ((CASE WHEN NULL THEN rt1.c2 END))) WHERE ((NOT ((((rt1.c1))<=((rt1.c1))) COLLATE RTRIM))) GROUP BY rt1.c0, rt1.c1, v0.c0 UNION SELECT rt1.c0, rt1.c1, v0.c0 FROM rt1 RIGHT OUTER JOIN v0 ON 0.31486096252553086 FULL OUTER JOIN vt1 ON (((rt1.c1)) BETWEEN ((((v0.c0) NOT BETWEEN (rt1.c0) AND (NULL)))) AND ((CASE WHEN NULL THEN rt1.c2 END))) WHERE ((((((rt1.c1))<=((rt1.c1))) COLLATE RTRIM) ISNULL)) GROUP BY rt1.c0, rt1.c1, v0.c0;
SELECT rt1.c0, rt1.c1, v0.c0 FROM rt1 RIGHT OUTER JOIN v0 ON 0.31486096252553086 FULL OUTER JOIN vt1 ON (((rt1.c1)) BETWEEN ((((v0.c0) NOT BETWEEN (rt1.c0) AND (NULL)))) AND ((CASE WHEN NULL THEN rt1.c2 END))) GROUP BY rt1.c0, rt1.c1, v0.c0;
SELECT rt1.c0, v0.c0, rt1.c1 FROM v0, vt1, rt1 GROUP BY rt1.c0, v0.c0, rt1.c1;
SELECT ALL rt1.c0, v0.c0, rt1.c1 FROM v0, vt1, rt1 GROUP BY rt1.c0, v0.c0, rt1.c1 HAVING SUM((rt1.c0 IN (rt1.c1))) UNION ALL SELECT ALL rt1.c0, v0.c0, rt1.c1 FROM v0, vt1, rt1 GROUP BY rt1.c0, v0.c0, rt1.c1 HAVING (NOT (SUM((rt1.c0 IN (rt1.c1))))) UNION ALL SELECT rt1.c0, v0.c0, rt1.c1 FROM v0, vt1, rt1 GROUP BY rt1.c0, v0.c0, rt1.c1 HAVING ((SUM((rt1.c0 IN (rt1.c1)))) ISNULL);
SELECT rt1.c0, v0.c0, rt1.c1 FROM v0, vt1, rt1 GROUP BY rt1.c0, v0.c0, rt1.c1;
SELECT ALL rt1.c0, v0.c0, rt1.c1 FROM v0, vt1, rt1 GROUP BY rt1.c0, v0.c0, rt1.c1 HAVING SUM((rt1.c0 IN (rt1.c1))) UNION ALL SELECT ALL rt1.c0, v0.c0, rt1.c1 FROM v0, vt1, rt1 GROUP BY rt1.c0, v0.c0, rt1.c1 HAVING (NOT (SUM((rt1.c0 IN (rt1.c1))))) UNION ALL SELECT rt1.c0, v0.c0, rt1.c1 FROM v0, vt1, rt1 GROUP BY rt1.c0, v0.c0, rt1.c1 HAVING ((SUM((rt1.c0 IN (rt1.c1)))) ISNULL);
SELECT rt1.c0, v0.c0, rt1.c1 FROM v0, vt1, rt1 GROUP BY rt1.c0, v0.c0, rt1.c1;
SELECT * FROM v0, vt1, vt0, rt1;
SELECT * FROM v0, vt1, vt0, rt1 WHERE ((((((vt1.c0) NOTNULL)))<((vt1.c0)))) UNION ALL SELECT * FROM v0, vt1, vt0, rt1 WHERE ((NOT ((((((vt1.c0) NOTNULL)))<((vt1.c0)))))) UNION ALL SELECT * FROM v0, vt1, vt0, rt1 WHERE ((((((((vt1.c0) NOTNULL)))<((vt1.c0)))) ISNULL));
SELECT * FROM v0, vt1, vt0, rt1;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((- (((v0.c0)GLOB(NULL))))) UNION SELECT DISTINCT * FROM v0 NOT INDEXED WHERE ((NOT ((- (((v0.c0)GLOB(NULL))))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((- (((v0.c0)GLOB(NULL))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT rt1.c2, rt1.c1, vt0.c0, rt1.c0 FROM rt1, vt0 GROUP BY rt1.c2, rt1.c1, vt0.c0, rt1.c0;
SELECT rt1.c2, rt1.c1, vt0.c0, rt1.c0 FROM rt1, vt0 WHERE (CAST((- (rt1.c0)) AS TEXT)) GROUP BY rt1.c2, rt1.c1, vt0.c0, rt1.c0 UNION SELECT rt1.c2, rt1.c1, vt0.c0, rt1.c0 FROM rt1, vt0 WHERE ((NOT (CAST((- (rt1.c0)) AS TEXT)))) GROUP BY rt1.c2, rt1.c1, vt0.c0, rt1.c0 UNION SELECT rt1.c2, rt1.c1, vt0.c0, rt1.c0 FROM rt1, vt0 WHERE (((CAST((- (rt1.c0)) AS TEXT)) ISNULL)) GROUP BY rt1.c2, rt1.c1, vt0.c0, rt1.c0;
SELECT rt1.c2, rt1.c1, vt0.c0, rt1.c0 FROM rt1, vt0 GROUP BY rt1.c2, rt1.c1, vt0.c0, rt1.c0;
SELECT ALL rt1.c0 FROM rt1, vt1 GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM rt1, vt1 GROUP BY rt1.c0 HAVING AVG((MAX(TOTAL('')) IN ())) UNION ALL SELECT rt1.c0 FROM rt1, vt1 GROUP BY rt1.c0 HAVING (NOT (AVG((MAX(TOTAL('')) IN ())))) UNION ALL SELECT rt1.c0 FROM rt1, vt1 GROUP BY rt1.c0 HAVING ((AVG((MAX(TOTAL('')) IN ()))) ISNULL);
SELECT ALL rt1.c0 FROM rt1, vt1 GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM rt1, vt1 GROUP BY rt1.c0 HAVING AVG((MAX(TOTAL('')) IN ())) UNION ALL SELECT rt1.c0 FROM rt1, vt1 GROUP BY rt1.c0 HAVING (NOT (AVG((MAX(TOTAL('')) IN ())))) UNION ALL SELECT rt1.c0 FROM rt1, vt1 GROUP BY rt1.c0 HAVING ((AVG((MAX(TOTAL('')) IN ()))) ISNULL);
SELECT ALL rt1.c0 FROM rt1, vt1 GROUP BY rt1.c0;
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (CASE (NOT (vt1.c0))  WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END THEN CAST(vt1.c0 AS INTEGER) WHEN (((vt1.c0))==((vt1.c0))) THEN ((-1.10910575E9)+(vt1.c0)) WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c0 END) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (CASE (NOT (vt1.c0))  WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END THEN CAST(vt1.c0 AS INTEGER) WHEN (((vt1.c0))=((vt1.c0))) THEN ((-1.10910575E9)+(vt1.c0)) WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c0 END))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((CASE (NOT (vt1.c0))  WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END THEN CAST(vt1.c0 AS INTEGER) WHEN (((vt1.c0))==((vt1.c0))) THEN ((-1.10910575E9)+(vt1.c0)) WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c0 END) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT rt1.c2 FROM rt1, v0, vt1 LEFT OUTER JOIN vt0 ON ((((((((x'252b4ee7')AND((((rt1.c0, rt1.c2, vt0.c0, vt0.c0, vt1.c0))<=((v0.c0, vt0.c0, rt1.c2, rt1.c1, v0.c0))))))OR('1579707402')))AND(((rt1.c1)GLOB('1724105309')))))OR(CAST(vt0.c0 AS INTEGER)));
SELECT DISTINCT rt1.c2 FROM rt1, v0, vt1 LEFT OUTER JOIN vt0 ON ((((((((x'252b4ee7')AND((((rt1.c0, rt1.c2, vt0.c0, vt0.c0, vt1.c0))<=((v0.c0, vt0.c0, rt1.c2, rt1.c1, v0.c0))))))OR('1579707402')))AND(((rt1.c1)GLOB('1724105309')))))OR(CAST(vt0.c0 AS INTEGER))) WHERE (((((v0.c0, rt1.c1, vt1.c0)) BETWEEN ((rt1.c0, v0.c0, rt1.c1)) AND ((vt1.c0, rt1.c0, vt1.c0))) IN (((((((((rt1.c2)AND(vt0.c0)))OR(0.48373249845564037)))AND(rt1.c1)))AND(vt1.c0))))) UNION SELECT DISTINCT rt1.c2 FROM rt1, v0, vt1 LEFT OUTER JOIN vt0 ON ((((((((x'252b4ee7')AND((((rt1.c0, rt1.c2, vt0.c0, vt0.c0, vt1.c0))<=((v0.c0, vt0.c0, rt1.c2, rt1.c1, v0.c0))))))OR('1579707402')))AND(((rt1.c1)GLOB('1724105309')))))OR(CAST(vt0.c0 AS INTEGER))) WHERE ((NOT (((((v0.c0, rt1.c1, vt1.c0)) BETWEEN ((rt1.c0, v0.c0, rt1.c1)) AND ((vt1.c0, rt1.c0, vt1.c0))) IN (((((((((rt1.c2)AND(vt0.c0)))OR(0.48373249845564037)))AND(rt1.c1)))AND(vt1.c0))))))) UNION SELECT DISTINCT rt1.c2 FROM rt1, v0, vt1 LEFT OUTER JOIN vt0 ON ((((((((x'252b4ee7')AND((((rt1.c0, rt1.c2, vt0.c0, vt0.c0, vt1.c0))<=((v0.c0, vt0.c0, rt1.c2, rt1.c1, v0.c0))))))OR('1579707402')))AND(((rt1.c1)GLOB('1724105309')))))OR(CAST(vt0.c0 AS INTEGER))) WHERE (((((((v0.c0, rt1.c1, vt1.c0)) BETWEEN ((rt1.c0, v0.c0, rt1.c1)) AND ((vt1.c0, rt1.c0, vt1.c0))) IN (((((((((rt1.c2)AND(vt0.c0)))OR(0.48373249845564037)))AND(rt1.c1)))AND(vt1.c0))))) ISNULL));
SELECT DISTINCT rt1.c2 FROM rt1, v0, vt1 LEFT OUTER JOIN vt0 ON ((((((((x'252b4ee7')AND((((rt1.c0, rt1.c2, vt0.c0, vt0.c0, vt1.c0))<=((v0.c0, vt0.c0, rt1.c2, rt1.c1, v0.c0))))))OR('1579707402')))AND(((rt1.c1)GLOB('1724105309')))))OR(CAST(vt0.c0 AS INTEGER)));
SELECT rt1.c1, rt1.c2, vt0.c0 FROM v0, rt1 FULL OUTER JOIN vt0 ON CAST('-1109105750' AS TEXT) GROUP BY rt1.c1, rt1.c2, vt0.c0;
SELECT ALL rt1.c1, rt1.c2, vt0.c0 FROM v0, rt1 FULL OUTER JOIN vt0 ON CAST('-1109105750' AS TEXT) WHERE ((((rt1.c0 IN ())) NOT BETWEEN (UNLIKELY(rt1.c0)) AND (((rt1.c2) BETWEEN (rt1.c1) AND (v0.c0))))) GROUP BY rt1.c1, rt1.c2, vt0.c0 UNION SELECT rt1.c1, rt1.c2, vt0.c0 FROM v0, rt1 FULL OUTER JOIN vt0 ON CAST('-1109105750' AS TEXT) WHERE ((NOT ((((rt1.c0 IN ())) NOT BETWEEN (UNLIKELY(rt1.c0)) AND (((rt1.c2) BETWEEN (rt1.c1) AND (v0.c0))))))) GROUP BY rt1.c1, rt1.c2, vt0.c0 UNION SELECT ALL rt1.c1, rt1.c2, vt0.c0 FROM v0, rt1 FULL OUTER JOIN vt0 ON CAST('-1109105750' AS TEXT) WHERE ((((((rt1.c0 IN ())) NOT BETWEEN (UNLIKELY(rt1.c0)) AND (((rt1.c2) BETWEEN (rt1.c1) AND (v0.c0))))) ISNULL)) GROUP BY rt1.c1, rt1.c2, vt0.c0;
SELECT rt1.c1, rt1.c2, vt0.c0 FROM v0, rt1 FULL OUTER JOIN vt0 ON CAST('-1109105750' AS TEXT) GROUP BY rt1.c1, rt1.c2, vt0.c0;
SELECT rt1.c0, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2;
SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2 HAVING NULL UNION ALL SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2 HAVING (NOT (NULL)) UNION ALL SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2 HAVING ((NULL) ISNULL);
SELECT rt1.c0, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2;
SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2 HAVING NULL UNION ALL SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2 HAVING (NOT (NULL)) UNION ALL SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2 HAVING ((NULL) ISNULL);
SELECT rt1.c0, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2;
SELECT ALL * FROM vt0, vt1, v0;
SELECT ALL * FROM vt0, vt1, v0 WHERE (((TRIM(DISTINCT vt1.c0, vt1.c0))<=(vt0.c0))) UNION ALL SELECT * FROM vt0, vt1, v0 WHERE ((NOT (((TRIM(DISTINCT vt1.c0, vt1.c0))<=(vt0.c0))))) UNION ALL SELECT ALL * FROM vt0, vt1, v0 WHERE (((((TRIM(DISTINCT vt1.c0, vt1.c0))<=(vt0.c0))) ISNULL));
SELECT ALL * FROM vt0, vt1, v0;
SELECT DISTINCT * FROM vt0, rt1, v0, vt1;
SELECT DISTINCT * FROM vt0, rt1, v0, vt1 WHERE (GLOB((((rt1.c1, rt1.c0, rt1.c1, rt1.c2, vt1.c0)) BETWEEN ((x'', v0.c0, rt1.c1, 0.7938872288887598, -552713342)) AND ((rt1.c1, rt1.c2, rt1.c2, vt1.c0, rt1.c0))), ((0.7954726354806075)&(rt1.c0)))) UNION SELECT DISTINCT * FROM vt0, rt1, v0, vt1 WHERE ((NOT (GLOB((((rt1.c1, rt1.c0, rt1.c1, rt1.c2, vt1.c0)) BETWEEN ((x'', v0.c0, rt1.c1, 0.7938872288887598, -552713342)) AND ((rt1.c1, rt1.c2, rt1.c2, vt1.c0, rt1.c0))), ((0.7954726354806075)&(rt1.c0)))))) UNION SELECT DISTINCT * FROM vt0, rt1, v0, vt1 WHERE (((GLOB((((rt1.c1, rt1.c0, rt1.c1, rt1.c2, vt1.c0)) BETWEEN ((x'', v0.c0, rt1.c1, 0.7938872288887598, -552713342)) AND ((rt1.c1, rt1.c2, rt1.c2, vt1.c0, rt1.c0))), ((0.7954726354806075)&(rt1.c0)))) ISNULL));
SELECT DISTINCT * FROM vt0, rt1, v0, vt1;
SELECT ALL vt0.c0, v0.c0 FROM vt0 FULL OUTER JOIN v0 ON ((((((vt0.c0) IS FALSE))OR((+ (v0.c0)))))OR(CAST(x'' AS BLOB))) GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0 FULL OUTER JOIN v0 ON ((((((vt0.c0) IS FALSE))OR((+ (v0.c0)))))OR(CAST(x'' AS BLOB))) WHERE (TYPEOF(CASE vt0.c0  WHEN vt0.c0 THEN 0.5036116584395781 WHEN v0.c0 THEN vt0.c0 WHEN 0x1657831d THEN vt0.c0 ELSE v0.c0 END)) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM vt0 FULL OUTER JOIN v0 ON ((((((vt0.c0) IS FALSE))OR((+ (v0.c0)))))OR(CAST(x'' AS BLOB))) WHERE ((NOT (TYPEOF(CASE vt0.c0  WHEN vt0.c0 THEN 0.5036116584395781 WHEN v0.c0 THEN vt0.c0 WHEN 0x1657831d THEN vt0.c0 ELSE v0.c0 END)))) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM vt0 FULL OUTER JOIN v0 ON ((((((vt0.c0) IS FALSE))OR((+ (v0.c0)))))OR(CAST(x'' AS BLOB))) WHERE (((TYPEOF(CASE vt0.c0  WHEN vt0.c0 THEN 0.5036116584395781 WHEN v0.c0 THEN vt0.c0 WHEN 0X1657831d THEN vt0.c0 ELSE v0.c0 END)) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0 FULL OUTER JOIN v0 ON ((((((vt0.c0) IS FALSE))OR((+ (v0.c0)))))OR(CAST(x'' AS BLOB))) GROUP BY vt0.c0, v0.c0;
SELECT ALL rt1.c1, vt1.c0 FROM vt1, vt0, rt1, v0 GROUP BY rt1.c1, vt1.c0;
SELECT rt1.c1, vt1.c0 FROM vt1, vt0, rt1, v0 GROUP BY rt1.c1, vt1.c0 HAVING SUM(((MAX(TOTAL(GROUP_CONCAT(MAX(vt0.c0)))))IS(rt1.c2))) UNION ALL SELECT ALL rt1.c1, vt1.c0 FROM vt1, vt0, rt1, v0 GROUP BY rt1.c1, vt1.c0 HAVING (NOT (SUM(((MAX(TOTAL(GROUP_CONCAT(MAX(vt0.c0)))))IS(rt1.c2))))) UNION ALL SELECT ALL rt1.c1, vt1.c0 FROM vt1, vt0, rt1, v0 GROUP BY rt1.c1, vt1.c0 HAVING ((SUM(((MAX(TOTAL(GROUP_CONCAT(MAX(vt0.c0)))))IS(rt1.c2)))) ISNULL);
SELECT TOTAL((((rt1.c2) ISNULL) IN ())) FROM v0, vt0, rt1;
SELECT rt1.c0, v0.c0, rt1.c2 FROM rt1, v0, vt0;
SELECT ALL rt1.c0, v0.c0, rt1.c2 FROM rt1, v0, vt0 WHERE (((((rt1.c1) IS FALSE))!=(rt1.c0))) UNION ALL SELECT ALL rt1.c0, v0.c0, rt1.c2 FROM rt1, v0, vt0 WHERE ((NOT (((((rt1.c1) IS FALSE))!=(rt1.c0))))) UNION ALL SELECT ALL rt1.c0, v0.c0, rt1.c2 FROM rt1, v0, vt0 WHERE (((((((rt1.c1) IS FALSE))!=(rt1.c0))) ISNULL));
SELECT rt1.c0, v0.c0, rt1.c2 FROM rt1, v0, vt0;
SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, rt1, v0;
SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, rt1, v0 WHERE (TRIM(v0.c0, ((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2)))) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, rt1, v0 WHERE ((NOT (TRIM(v0.c0, ((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2)))))) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, rt1, v0 WHERE (((TRIM(v0.c0, ((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2)))) ISNULL));
SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, rt1, v0;
SELECT vt0.c0, rt1.c0, vt1.c0, v0.c0, rt1.c1 FROM rt1, vt0, vt1, v0 GROUP BY vt0.c0, rt1.c0, vt1.c0, v0.c0, rt1.c1;
SELECT ALL vt0.c0, rt1.c0, vt1.c0, v0.c0, rt1.c1 FROM rt1, vt0, vt1, v0 WHERE ((((((((((rt1.c2 IN ()))OR(((v0.c0)IS(rt1.c0)))))AND(rt1.c0)))AND(NULLIF(rt1.c2, rt1.c0))))OR(((rt1.c0) BETWEEN (rt1.c2) AND (v0.c0))))) GROUP BY vt0.c0, rt1.c0, vt1.c0, v0.c0, rt1.c1 UNION SELECT vt0.c0, rt1.c0, vt1.c0, v0.c0, rt1.c1 FROM rt1, vt0, vt1, v0 WHERE ((NOT ((((((((((rt1.c2 IN ()))OR(((v0.c0)IS(rt1.c0)))))AND(rt1.c0)))AND(NULLIF(rt1.c2, rt1.c0))))OR(((rt1.c0) BETWEEN (rt1.c2) AND (v0.c0))))))) GROUP BY vt0.c0, rt1.c0, vt1.c0, v0.c0, rt1.c1 UNION SELECT vt0.c0, rt1.c0, vt1.c0, v0.c0, rt1.c1 FROM rt1, vt0, vt1 NOT INDEXED, v0 WHERE ((((((((((((rt1.c2 IN ()))OR(((v0.c0)IS(rt1.c0)))))AND(rt1.c0)))AND(NULLIF(rt1.c2, rt1.c0))))OR(((rt1.c0) BETWEEN (rt1.c2) AND (v0.c0))))) ISNULL)) GROUP BY vt0.c0, rt1.c0, vt1.c0, v0.c0, rt1.c1;
SELECT vt0.c0, rt1.c0, vt1.c0, v0.c0, rt1.c1 FROM rt1, vt0, vt1, v0 GROUP BY vt0.c0, rt1.c0, vt1.c0, v0.c0, rt1.c1;
SELECT ALL rt1.c2, vt1.c0, vt0.c0, v0.c0, rt1.c1 FROM vt0, v0, rt1, vt1 GROUP BY rt1.c2, vt1.c0, vt0.c0, v0.c0, rt1.c1;
SELECT ALL rt1.c2, vt1.c0, vt0.c0, v0.c0, rt1.c1 FROM vt0, v0, rt1, vt1 GROUP BY rt1.c2, vt1.c0, vt0.c0, v0.c0, rt1.c1 HAVING ((COUNT(COUNT(*))) NOT BETWEEN (COUNT(*)) AND (MAX(SUM(vt1.c0)))) UNION ALL SELECT ALL rt1.c2, vt1.c0, vt0.c0, v0.c0, rt1.c1 FROM vt0, v0, rt1, vt1 GROUP BY rt1.c2, vt1.c0, vt0.c0, v0.c0, rt1.c1 HAVING (NOT (((COUNT(COUNT(*))) NOT BETWEEN (COUNT(*)) AND (MAX(SUM(vt1.c0)))))) UNION ALL SELECT rt1.c2, vt1.c0, vt0.c0, v0.c0, rt1.c1 FROM vt0, v0, rt1, vt1 GROUP BY rt1.c2, vt1.c0, vt0.c0, v0.c0, rt1.c1 HAVING ((((COUNT(COUNT(*))) NOT BETWEEN (COUNT(*)) AND (MAX(SUM(vt1.c0))))) ISNULL);
SELECT * FROM vt0, v0;
SELECT * FROM vt0, v0 WHERE (v0.c0) UNION ALL SELECT ALL * FROM vt0, v0 WHERE ((NOT (v0.c0))) UNION ALL SELECT ALL * FROM vt0, v0 WHERE (((v0.c0) ISNULL));
SELECT * FROM vt0, v0;
SELECT DISTINCT vt1.c0 FROM vt1 NATURAL JOIN vt0;
SELECT DISTINCT vt1.c0 FROM vt1 NATURAL JOIN vt0 WHERE (((((((vt1.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt0.c0)) AND ((vt1.c0, vt0.c0, vt0.c0)))))==((((((((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)))OR(NULL)))AND(vt1.c0)))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 NATURAL JOIN vt0 WHERE ((NOT (((((((vt1.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt0.c0)) AND ((vt1.c0, vt0.c0, vt0.c0)))))==((((((((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)))OR(NULL)))AND(vt1.c0)))))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 NATURAL JOIN vt0 WHERE (((((((((vt1.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt0.c0)) AND ((vt1.c0, vt0.c0, vt0.c0)))))=((((((((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)))OR(NULL)))AND(vt1.c0)))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1 NATURAL JOIN vt0;
SELECT rt1.c2, v0.c0, rt1.c0 FROM v0, vt1, rt1 GROUP BY rt1.c2, v0.c0, rt1.c0;
SELECT rt1.c2, v0.c0, rt1.c0 FROM v0, vt1, rt1 WHERE (NULLIF(DISTINCT CAST(v0.c0 AS TEXT), CAST(rt1.c0 AS BLOB))) GROUP BY rt1.c2, v0.c0, rt1.c0 UNION SELECT rt1.c2, v0.c0, rt1.c0 FROM v0, vt1, rt1 WHERE ((NOT (NULLIF(DISTINCT CAST(v0.c0 AS TEXT), CAST(rt1.c0 AS BLOB))))) GROUP BY rt1.c2, v0.c0, rt1.c0 UNION SELECT rt1.c2, v0.c0, rt1.c0 FROM v0, vt1, rt1 WHERE (((NULLIF(DISTINCT CAST(v0.c0 AS TEXT), CAST(rt1.c0 AS BLOB))) ISNULL)) GROUP BY rt1.c2, v0.c0, rt1.c0;
SELECT rt1.c2, v0.c0, rt1.c0 FROM v0, vt1, rt1 GROUP BY rt1.c2, v0.c0, rt1.c0;
SELECT ALL v0.c0, vt0.c0, vt1.c0, rt1.c0 FROM vt1 CROSS JOIN vt0 ON (rt1.c0 COLLATE RTRIM IN ((((vt1.c0))!=((vt0.c0))))) INNER JOIN v0 ON (NOT (CAST(vt0.c0 AS REAL))) CROSS JOIN rt1 ON x'' GROUP BY v0.c0, vt0.c0, vt1.c0, rt1.c0;
SELECT ALL v0.c0, vt0.c0, vt1.c0, rt1.c0 FROM vt1 CROSS JOIN vt0 ON (rt1.c0 COLLATE RTRIM IN ((((vt1.c0))!=((vt0.c0))))) INNER JOIN v0 ON (NOT (CAST(vt0.c0 AS REAL))) CROSS JOIN rt1 ON x'' GROUP BY v0.c0, vt0.c0, vt1.c0, rt1.c0 HAVING COUNT(*) UNION ALL SELECT v0.c0, vt0.c0, vt1.c0, rt1.c0 FROM vt1 CROSS JOIN vt0 ON (rt1.c0 COLLATE RTRIM IN ((((vt1.c0))!=((vt0.c0))))) INNER JOIN v0 ON (NOT (CAST(vt0.c0 AS REAL))) CROSS JOIN rt1 ON x'' GROUP BY v0.c0, vt0.c0, vt1.c0, rt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0, vt0.c0, vt1.c0, rt1.c0 FROM vt1 CROSS JOIN vt0 ON (rt1.c0 COLLATE RTRIM IN ((((vt1.c0))<>((vt0.c0))))) INNER JOIN v0 ON (NOT (CAST(vt0.c0 AS REAL))) CROSS JOIN rt1 ON x'' GROUP BY v0.c0, vt0.c0, vt1.c0, rt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0, vt0.c0, vt1.c0, rt1.c0 FROM vt1 CROSS JOIN vt0 ON (rt1.c0 COLLATE RTRIM IN ((((vt1.c0))!=((vt0.c0))))) INNER JOIN v0 ON (NOT (CAST(vt0.c0 AS REAL))) CROSS JOIN rt1 ON x'' GROUP BY v0.c0, vt0.c0, vt1.c0, rt1.c0;
SELECT ALL v0.c0, vt0.c0, vt1.c0, rt1.c0 FROM vt1 CROSS JOIN vt0 ON (rt1.c0 COLLATE RTRIM IN ((((vt1.c0))!=((vt0.c0))))) INNER JOIN v0 ON (NOT (CAST(vt0.c0 AS REAL))) CROSS JOIN rt1 ON x'' GROUP BY v0.c0, vt0.c0, vt1.c0, rt1.c0 HAVING COUNT(*) UNION ALL SELECT v0.c0, vt0.c0, vt1.c0, rt1.c0 FROM vt1 CROSS JOIN vt0 ON (rt1.c0 COLLATE RTRIM IN ((((vt1.c0))!=((vt0.c0))))) INNER JOIN v0 ON (NOT (CAST(vt0.c0 AS REAL))) CROSS JOIN rt1 ON x'' GROUP BY v0.c0, vt0.c0, vt1.c0, rt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0, vt0.c0, vt1.c0, rt1.c0 FROM vt1 CROSS JOIN vt0 ON (rt1.c0 COLLATE RTRIM IN ((((vt1.c0))<>((vt0.c0))))) INNER JOIN v0 ON (NOT (CAST(vt0.c0 AS REAL))) CROSS JOIN rt1 ON x'' GROUP BY v0.c0, vt0.c0, vt1.c0, rt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0, vt0.c0, vt1.c0, rt1.c0 FROM vt1 CROSS JOIN vt0 ON (rt1.c0 COLLATE RTRIM IN ((((vt1.c0))!=((vt0.c0))))) INNER JOIN v0 ON (NOT (CAST(vt0.c0 AS REAL))) CROSS JOIN rt1 ON x'' GROUP BY v0.c0, vt0.c0, vt1.c0, rt1.c0;
SELECT ALL rt1.c0, rt1.c1, rt1.c2, vt0.c0, vt1.c0, v0.c0 FROM vt0, vt1, v0, rt1;
SELECT rt1.c0, rt1.c1, rt1.c2, vt0.c0, vt1.c0, v0.c0 FROM vt0, vt1, v0, rt1 WHERE ((((rt1.c2 IN ())) IS FALSE)) UNION ALL SELECT ALL rt1.c0, rt1.c1, rt1.c2, vt0.c0, vt1.c0, v0.c0 FROM vt0, vt1, v0, rt1 WHERE ((NOT ((((rt1.c2 IN ())) IS FALSE)))) UNION ALL SELECT ALL rt1.c0, rt1.c1, rt1.c2, vt0.c0, vt1.c0, v0.c0 FROM vt0, vt1, v0, rt1 WHERE ((((((rt1.c2 IN ())) IS FALSE)) ISNULL));
SELECT ALL rt1.c0, rt1.c1, rt1.c2, vt0.c0, vt1.c0, v0.c0 FROM vt0, vt1, v0, rt1;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE ((+ (((rt1.c2) IS FALSE)))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT ((+ (((rt1.c2) IS FALSE)))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((((+ (((rt1.c2) IS FALSE)))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT vt0.c0, rt1.c1, rt1.c2, rt1.c0, v0.c0 FROM v0, vt0, vt1, rt1 GROUP BY vt0.c0, rt1.c1, rt1.c2, rt1.c0, v0.c0;
SELECT vt0.c0, rt1.c1, rt1.c2, rt1.c0, v0.c0 FROM v0, vt0, vt1, rt1 WHERE (0X5f4c58cc) GROUP BY vt0.c0, rt1.c1, rt1.c2, rt1.c0, v0.c0 UNION SELECT ALL vt0.c0, rt1.c1, rt1.c2, rt1.c0, v0.c0 FROM v0, vt0, vt1, rt1 WHERE ((NOT (0X5f4c58cc))) GROUP BY vt0.c0, rt1.c1, rt1.c2, rt1.c0, v0.c0 UNION SELECT ALL vt0.c0, rt1.c1, rt1.c2, rt1.c0, v0.c0 FROM v0, vt0, vt1, rt1 WHERE (((0x5f4c58cc) ISNULL)) GROUP BY vt0.c0, rt1.c1, rt1.c2, rt1.c0, v0.c0;
SELECT vt0.c0, rt1.c1, rt1.c2, rt1.c0, v0.c0 FROM v0, vt0, vt1, rt1 GROUP BY vt0.c0, rt1.c1, rt1.c2, rt1.c0, v0.c0;
SELECT rt1.c0, v0.c0 FROM vt1, v0, vt0, rt1 GROUP BY rt1.c0, v0.c0;
SELECT rt1.c0, v0.c0 FROM vt1, v0, vt0, rt1 GROUP BY rt1.c0, v0.c0 HAVING vt1.c0 UNION ALL SELECT ALL rt1.c0, v0.c0 FROM vt1, v0, vt0, rt1 GROUP BY rt1.c0, v0.c0 HAVING (NOT (vt1.c0)) UNION ALL SELECT rt1.c0, v0.c0 FROM vt1, v0, vt0, rt1 GROUP BY rt1.c0, v0.c0 HAVING ((vt1.c0) ISNULL);
SELECT rt1.c0, v0.c0 FROM vt1, v0, vt0, rt1 GROUP BY rt1.c0, v0.c0;
SELECT rt1.c0, v0.c0 FROM vt1, v0, vt0, rt1 GROUP BY rt1.c0, v0.c0 HAVING vt1.c0 UNION ALL SELECT ALL rt1.c0, v0.c0 FROM vt1, v0, vt0, rt1 GROUP BY rt1.c0, v0.c0 HAVING (NOT (vt1.c0)) UNION ALL SELECT rt1.c0, v0.c0 FROM vt1, v0, vt0, rt1 GROUP BY rt1.c0, v0.c0 HAVING ((vt1.c0) ISNULL);
SELECT rt1.c0, v0.c0 FROM vt1, v0, vt0, rt1 GROUP BY rt1.c0, v0.c0;
SELECT TOTAL(((vt0.c0) BETWEEN (x'00b0') AND (((vt0.c0)>(vt0.c0))))) FROM vt0;
SELECT ALL vt1.c0 FROM vt1, vt0;
SELECT ALL vt1.c0 FROM vt1, vt0 WHERE ((((~ (vt1.c0))) NOT BETWEEN (((((vt0.c0)AND(vt1.c0)))OR('Q&vfNN^s'))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt0 WHERE ((NOT ((((~ (vt1.c0))) NOT BETWEEN (((((vt0.c0)AND(vt1.c0)))OR('Q&vfNN^s'))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt0 WHERE ((((((~ (vt1.c0))) NOT BETWEEN (((((vt0.c0)AND(vt1.c0)))OR('Q&vfNN^s'))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))))) ISNULL));
SELECT ALL vt1.c0 FROM vt1, vt0;
SELECT DISTINCT * FROM rt1 CROSS JOIN vt0 ON (+ (((((vt0.c0)OR('-501363281')))OR(vt0.c0))));
SELECT DISTINCT * FROM rt1 CROSS JOIN vt0 ON (+ (((((vt0.c0)OR('-501363281')))OR(vt0.c0)))) WHERE (((CASE WHEN rt1.c2 THEN rt1.c2 END)IS(((((((((rt1.c0)AND(rt1.c1)))AND(rt1.c1)))OR(vt0.c0)))AND('-1702996937'))))) UNION SELECT DISTINCT * FROM rt1 CROSS JOIN vt0 ON (+ (((((vt0.c0)OR('-501363281')))OR(vt0.c0)))) WHERE ((NOT (((CASE WHEN rt1.c2 THEN rt1.c2 END)IS(((((((((rt1.c0)AND(rt1.c1)))AND(rt1.c1)))OR(vt0.c0)))AND('-1702996937'))))))) UNION SELECT DISTINCT * FROM rt1 CROSS JOIN vt0 ON (+ (((((vt0.c0)OR('-501363281')))OR(vt0.c0)))) WHERE (((((CASE WHEN rt1.c2 THEN rt1.c2 END)IS(((((((((rt1.c0)AND(rt1.c1)))AND(rt1.c1)))OR(vt0.c0)))AND('-1702996937'))))) ISNULL));
SELECT DISTINCT * FROM rt1 CROSS JOIN vt0 ON (+ (((((vt0.c0)OR('-501363281')))OR(vt0.c0))));
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ('1495380364') GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ('1495380364'))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((('1495380364') ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL v0.c0 FROM v0, vt1 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt1 GROUP BY v0.c0 HAVING MIN((- (SUM(vt1.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0, vt1 GROUP BY v0.c0 HAVING (NOT (MIN((- (SUM(vt1.c0)))))) UNION ALL SELECT v0.c0 FROM v0, vt1 GROUP BY v0.c0 HAVING ((MIN((- (SUM(vt1.c0))))) ISNULL);
SELECT * FROM v0, vt1, vt0;
SELECT ALL * FROM v0, vt1, vt0 WHERE (((vt1.c0) IS TRUE)) UNION ALL SELECT * FROM v0, vt1, vt0 WHERE ((NOT (((vt1.c0) IS TRUE)))) UNION ALL SELECT ALL * FROM v0, vt1, vt0 WHERE (((((vt1.c0) IS TRUE)) ISNULL));
SELECT * FROM v0, vt1, vt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((v0.c0)IS(v0.c0)) IN ())) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((v0.c0)IS(v0.c0)) IN ())))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((v0.c0)IS(v0.c0)) IN ())) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((vt1.c0) BETWEEN (('916094071' IN ())) AND (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0) BETWEEN (('916094071' IN ())) AND (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((vt1.c0) BETWEEN (('916094071' IN ())) AND (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0;
SELECT ALL vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0 HAVING CASE WHEN COUNT(*) THEN SUM(COUNT(v0.c0)) WHEN (+ (v0.c0)) THEN ((MAX(COUNT(*))) NOT BETWEEN (AVG(MIN(vt1.c0))) AND (AVG(vt1.c0))) WHEN (((COUNT(*)))<>((vt1.c0))) THEN (COUNT(GROUP_CONCAT(vt1.c0)) IN ()) END UNION ALL SELECT vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0 HAVING (NOT (CASE WHEN COUNT(*) THEN SUM(COUNT(v0.c0)) WHEN (+ (v0.c0)) THEN ((MAX(COUNT(*))) NOT BETWEEN (AVG(MIN(vt1.c0))) AND (AVG(vt1.c0))) WHEN (((COUNT(*)))!=((vt1.c0))) THEN (COUNT(GROUP_CONCAT(vt1.c0)) IN ()) END)) UNION ALL SELECT ALL vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0 HAVING ((CASE WHEN COUNT(*) THEN SUM(COUNT(v0.c0)) WHEN (+ (v0.c0)) THEN ((MAX(COUNT(*))) NOT BETWEEN (AVG(MIN(vt1.c0))) AND (AVG(vt1.c0))) WHEN (((COUNT(*)))!=((vt1.c0))) THEN (COUNT(GROUP_CONCAT(vt1.c0)) IN ()) END) ISNULL);
SELECT vt1.c0 FROM rt1 INNER JOIN v0 ON (((((((((((NULL)AND(rt1.c1)))AND(v0.c0)))OR(rt1.c2)))OR(rt1.c0))))<>(((rt1.c1 IN ())))) RIGHT OUTER JOIN vt1 ON ((x'') IS TRUE);
SELECT ALL vt1.c0 FROM rt1 INNER JOIN v0 ON (((((((((((NULL)AND(rt1.c1)))AND(v0.c0)))OR(rt1.c2)))OR(rt1.c0))))<>(((rt1.c1 IN ())))) RIGHT OUTER JOIN vt1 ON ((x'') IS TRUE) WHERE (x'') UNION ALL SELECT vt1.c0 FROM rt1 INNER JOIN v0 ON (((((((((((NULL)AND(rt1.c1)))AND(v0.c0)))OR(rt1.c2)))OR(rt1.c0))))!=(((rt1.c1 IN ())))) RIGHT OUTER JOIN vt1 ON ((x'') IS TRUE) WHERE ((NOT (x''))) UNION ALL SELECT vt1.c0 FROM rt1 INNER JOIN v0 ON (((((((((((NULL)AND(rt1.c1)))AND(v0.c0)))OR(rt1.c2)))OR(rt1.c0))))<>(((rt1.c1 IN ())))) RIGHT OUTER JOIN vt1 ON ((x'') IS TRUE) WHERE (((x'') ISNULL));
SELECT vt1.c0 FROM rt1 INNER JOIN v0 ON (((((((((((NULL)AND(rt1.c1)))AND(v0.c0)))OR(rt1.c2)))OR(rt1.c0))))<>(((rt1.c1 IN ())))) RIGHT OUTER JOIN vt1 ON ((x'') IS TRUE);
SELECT DISTINCT vt0.c0, rt1.c0 FROM rt1, vt1, v0, vt0;
SELECT DISTINCT vt0.c0, rt1.c0 FROM rt1, vt1, v0, vt0 WHERE ((((rt1.c0)) BETWEEN (('-671265032')) AND ((rt1.c0)))) UNION SELECT DISTINCT vt0.c0, rt1.c0 FROM rt1, vt1, v0, vt0 WHERE ((NOT ((((rt1.c0)) BETWEEN (('-671265032')) AND ((rt1.c0)))))) UNION SELECT DISTINCT vt0.c0, rt1.c0 FROM rt1, vt1, v0, vt0 WHERE ((((((rt1.c0)) BETWEEN (('-671265032')) AND ((rt1.c0)))) ISNULL));
SELECT DISTINCT vt0.c0, rt1.c0 FROM rt1, vt1, v0, vt0;
SELECT ALL vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON '-729392416' FULL OUTER JOIN rt1 ON CASE (rt1.c2 IN (rt1.c2))  WHEN ((vt0.c0)GLOB(vt0.c0)) THEN (rt1.c2 IN (rt1.c0)) ELSE x'' END FULL OUTER JOIN v0 ON ((((vt1.c0)IS(rt1.c0)))LIKE(CASE vt1.c0  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c0 END)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON '-729392416' FULL OUTER JOIN rt1 ON CASE (rt1.c2 IN (rt1.c2))  WHEN ((vt0.c0)GLOB(vt0.c0)) THEN (rt1.c2 IN (rt1.c0)) ELSE x'' END FULL OUTER JOIN v0 ON ((((vt1.c0)IS(rt1.c0)))LIKE(CASE vt1.c0  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c0 END)) WHERE ((vt1.c0 COLLATE NOCASE IN ())) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON '-729392416' FULL OUTER JOIN rt1 ON CASE (rt1.c2 IN (rt1.c2))  WHEN ((vt0.c0)GLOB(vt0.c0)) THEN (rt1.c2 IN (rt1.c0)) ELSE x'' END FULL OUTER JOIN v0 ON ((((vt1.c0)IS(rt1.c0)))LIKE(CASE vt1.c0  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c0 END)) WHERE ((NOT ((vt1.c0 COLLATE NOCASE IN ())))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON '-729392416' FULL OUTER JOIN rt1 ON CASE (rt1.c2 IN (rt1.c2))  WHEN ((vt0.c0)GLOB(vt0.c0)) THEN (rt1.c2 IN (rt1.c0)) ELSE x'' END FULL OUTER JOIN v0 ON ((((vt1.c0)IS(rt1.c0)))LIKE(CASE vt1.c0  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c0 END)) WHERE ((((vt1.c0 COLLATE NOCASE IN ())) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON '-729392416' FULL OUTER JOIN rt1 ON CASE (rt1.c2 IN (rt1.c2))  WHEN ((vt0.c0)GLOB(vt0.c0)) THEN (rt1.c2 IN (rt1.c0)) ELSE x'' END FULL OUTER JOIN v0 ON ((((vt1.c0)IS(rt1.c0)))LIKE(CASE vt1.c0  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c0 END)) GROUP BY vt1.c0;
SELECT ALL v0.c0 FROM v0 INNER JOIN vt0 ON ((((v0.c0) NOTNULL)) IS TRUE) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 INNER JOIN vt0 ON ((((v0.c0) NOTNULL)) IS TRUE) GROUP BY v0.c0 HAVING MIN(CAST(SUM(vt0.c0) AS INTEGER)) UNION ALL SELECT v0.c0 FROM v0 INNER JOIN vt0 ON ((((v0.c0) NOTNULL)) IS TRUE) GROUP BY v0.c0 HAVING (NOT (MIN(CAST(SUM(vt0.c0) AS INTEGER)))) UNION ALL SELECT ALL v0.c0 FROM v0 INNER JOIN vt0 ON ((((v0.c0) NOTNULL)) IS TRUE) GROUP BY v0.c0 HAVING ((MIN(CAST(SUM(vt0.c0) AS INTEGER))) ISNULL);
SELECT * FROM vt0, rt1, v0;
SELECT ALL * FROM vt0, rt1, v0 WHERE (('-1702996937' IN (CASE vt0.c0  WHEN rt1.c0 THEN v0.c0 WHEN v0.c0 THEN rt1.c1 WHEN v0.c0 THEN v0.c0 ELSE rt1.c0 END))) UNION ALL SELECT ALL * FROM vt0, rt1, v0 WHERE ((NOT (('-1702996937' IN (CASE vt0.c0  WHEN rt1.c0 THEN v0.c0 WHEN v0.c0 THEN rt1.c1 WHEN v0.c0 THEN v0.c0 ELSE rt1.c0 END))))) UNION ALL SELECT * FROM vt0, rt1, v0 WHERE (((('-1702996937' IN (CASE vt0.c0  WHEN rt1.c0 THEN v0.c0 WHEN v0.c0 THEN rt1.c1 WHEN v0.c0 THEN v0.c0 ELSE rt1.c0 END))) ISNULL));
SELECT * FROM vt0, rt1, v0;
SELECT DISTINCT * FROM vt1, rt1, v0;
SELECT DISTINCT * FROM vt1, rt1, v0 WHERE ((vt1.c0 IN ()) COLLATE NOCASE) UNION SELECT DISTINCT * FROM vt1, rt1, v0 WHERE ((NOT ((vt1.c0 IN ()) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt1, rt1, v0 WHERE ((((vt1.c0 IN ()) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM vt1, rt1, v0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE (((((((vt0.c0)>(vt0.c0)))OR(0.8524835931236977)))OR((((NULL))==((vt0.c0)))))) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM vt0, v0 WHERE ((NOT (((((((vt0.c0)>(vt0.c0)))OR(0.8524835931236977)))OR((((NULL))=((vt0.c0)))))))) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE (((((((((vt0.c0)>(vt0.c0)))OR(0.8524835931236977)))OR((((NULL))=((vt0.c0)))))) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL v0.c0, vt1.c0, rt1.c2 FROM v0, vt0, rt1, vt1 GROUP BY v0.c0, vt1.c0, rt1.c2;
SELECT ALL v0.c0, vt1.c0, rt1.c2 FROM v0, vt0, rt1, vt1 GROUP BY v0.c0, vt1.c0, rt1.c2 HAVING MIN(vt1.c0) UNION ALL SELECT v0.c0, vt1.c0, rt1.c2 FROM v0, vt0, rt1, vt1 GROUP BY v0.c0, vt1.c0, rt1.c2 HAVING (NOT (MIN(vt1.c0))) UNION ALL SELECT v0.c0, vt1.c0, rt1.c2 FROM v0, vt0, rt1, vt1 GROUP BY v0.c0, vt1.c0, rt1.c2 HAVING ((MIN(vt1.c0)) ISNULL);
SELECT ALL v0.c0, vt1.c0, rt1.c2 FROM v0, vt0, rt1, vt1 GROUP BY v0.c0, vt1.c0, rt1.c2;
SELECT ALL v0.c0, vt1.c0, rt1.c2 FROM v0, vt0, rt1, vt1 GROUP BY v0.c0, vt1.c0, rt1.c2 HAVING MIN(vt1.c0) UNION ALL SELECT v0.c0, vt1.c0, rt1.c2 FROM v0, vt0, rt1, vt1 GROUP BY v0.c0, vt1.c0, rt1.c2 HAVING (NOT (MIN(vt1.c0))) UNION ALL SELECT v0.c0, vt1.c0, rt1.c2 FROM v0, vt0, rt1, vt1 GROUP BY v0.c0, vt1.c0, rt1.c2 HAVING ((MIN(vt1.c0)) ISNULL);
SELECT ALL v0.c0, vt1.c0, rt1.c2 FROM v0, vt0, rt1, vt1 GROUP BY v0.c0, vt1.c0, rt1.c2;
SELECT v0.c0 FROM vt0, rt1, v0;
SELECT v0.c0 FROM vt0, rt1, v0 WHERE (((v0.c0) NOTNULL) COLLATE BINARY) UNION ALL SELECT v0.c0 FROM vt0, rt1, v0 WHERE ((NOT (((v0.c0) NOTNULL) COLLATE BINARY))) UNION ALL SELECT ALL v0.c0 FROM vt0, rt1, v0 WHERE (((((v0.c0) NOTNULL) COLLATE BINARY) ISNULL));
SELECT v0.c0 FROM vt0, rt1, v0;
SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM vt0, rt1, vt1;
SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM vt0, rt1, vt1 WHERE (CASE WHEN rt1.c0 THEN vt1.c0 ELSE vt1.c0 END COLLATE BINARY) UNION SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM vt0, rt1, vt1 WHERE ((NOT (CASE WHEN rt1.c0 THEN vt1.c0 ELSE vt1.c0 END COLLATE BINARY))) UNION SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM vt0, rt1, vt1 WHERE (((CASE WHEN rt1.c0 THEN vt1.c0 ELSE vt1.c0 END COLLATE BINARY) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM vt0, rt1, vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (TYPEOF(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (TYPEOF(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((TYPEOF(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt1.c2, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, vt1.c0;
SELECT ALL rt1.c2, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, vt1.c0 HAVING '-607307258' UNION ALL SELECT ALL rt1.c2, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, vt1.c0 HAVING (NOT ('-607307258')) UNION ALL SELECT rt1.c2, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, vt1.c0 HAVING (('-607307258') ISNULL);
SELECT rt1.c2, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, vt1.c0;
SELECT ALL rt1.c2, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, vt1.c0 HAVING '-607307258' UNION ALL SELECT ALL rt1.c2, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, vt1.c0 HAVING (NOT ('-607307258')) UNION ALL SELECT rt1.c2, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, vt1.c0 HAVING (('-607307258') ISNULL);
SELECT rt1.c2, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, vt1.c0;
SELECT MAX(((((((((((x'')OR(0.988099733631505)))AND(rt1.c2)))AND(rt1.c1)))AND(v0.c0)))*('264641324'))) FROM rt1, v0 ORDER BY TYPEOF(((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c1))) DESC  NULLS FIRST, (((((((rt1.c2))<((rt1.c0))))OR(0.08645894327255432)))AND(CAST(rt1.c1 AS REAL)))  NULLS FIRST;
SELECT ALL * FROM vt1, v0, vt0;
SELECT * FROM vt1, v0, vt0 WHERE ((((((('s''ogP+h')AND(vt1.c0)))AND(vt1.c0))) NOT NULL)) UNION ALL SELECT ALL * FROM vt1, v0, vt0 WHERE ((NOT ((((((('s''ogP+h')AND(vt1.c0)))AND(vt1.c0))) NOT NULL)))) UNION ALL SELECT ALL * FROM vt1, v0, vt0 WHERE ((((((((('s''ogP+h')AND(vt1.c0)))AND(vt1.c0))) NOT NULL)) ISNULL));
SELECT ALL * FROM vt1, v0, vt0;
SELECT DISTINCT vt1.c0 FROM vt1, vt0;
SELECT DISTINCT vt1.c0 FROM vt1, vt0 WHERE (COALESCE(vt0.c0 COLLATE RTRIM, ((((vt1.c0)AND(vt1.c0)))OR(vt0.c0)), ((vt0.c0)<(vt1.c0)), x'')) UNION SELECT DISTINCT vt1.c0 FROM vt1, vt0 WHERE ((NOT (COALESCE(vt0.c0 COLLATE RTRIM, ((((vt1.c0)AND(vt1.c0)))OR(vt0.c0)), ((vt0.c0)<(vt1.c0)), x'')))) UNION SELECT DISTINCT vt1.c0 FROM vt1, vt0 WHERE (((COALESCE(vt0.c0 COLLATE RTRIM, ((((vt1.c0)AND(vt1.c0)))OR(vt0.c0)), ((vt0.c0)<(vt1.c0)), x'')) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1, vt0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 WHERE ((NOT (((((x'')OR(v0.c0)))AND(vt0.c0))))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 WHERE ((NOT ((NOT (((((x'')OR(v0.c0)))AND(vt0.c0))))))) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM v0, vt0 WHERE ((((NOT (((((x'')OR(v0.c0)))AND(vt0.c0))))) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT rt1.c1, v0.c0, rt1.c2 FROM vt1 NOT INDEXED, v0 LEFT OUTER JOIN rt1 ON (((rt1.c0)>>(rt1.c0)) IN ()) GROUP BY rt1.c1, v0.c0, rt1.c2;
SELECT rt1.c1, v0.c0, rt1.c2 FROM vt1, v0 LEFT OUTER JOIN rt1 ON (((rt1.c0)>>(rt1.c0)) IN ()) GROUP BY rt1.c1, v0.c0, rt1.c2 HAVING AVG(MIN(v0.c0)) UNION ALL SELECT rt1.c1, v0.c0, rt1.c2 FROM vt1, v0 LEFT OUTER JOIN rt1 ON (((rt1.c0)>>(rt1.c0)) IN ()) GROUP BY rt1.c1, v0.c0, rt1.c2 HAVING (NOT (AVG(MIN(v0.c0)))) UNION ALL SELECT rt1.c1, v0.c0, rt1.c2 FROM vt1, v0 LEFT OUTER JOIN rt1 ON (((rt1.c0)>>(rt1.c0)) IN ()) GROUP BY rt1.c1, v0.c0, rt1.c2 HAVING ((AVG(MIN(v0.c0))) ISNULL);
SELECT ALL SUM(CAST('FALSE' AS REAL)) FROM rt1, vt0, vt1 ORDER BY CASE WHEN (((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((-887814854))) THEN 668340477 COLLATE NOCASE WHEN ((rt1.c1) BETWEEN (vt0.c0) AND (vt0.c0)) THEN CAST(vt1.c0 AS INTEGER) WHEN NULLIF(rt1.c0, vt0.c0) THEN ((((rt1.c2)AND(rt1.c0)))AND(rt1.c0)) END DESC, (+ (UPPER(rt1.c0)));
SELECT ALL * FROM vt0, vt1, v0;
SELECT * FROM vt0, vt1, v0 WHERE (CAST(CAST(vt0.c0 AS INTEGER) AS REAL)) UNION ALL SELECT ALL * FROM vt0, vt1, v0 WHERE ((NOT (CAST(CAST(vt0.c0 AS INTEGER) AS REAL)))) UNION ALL SELECT * FROM vt0, vt1, v0 WHERE (((CAST(CAST(vt0.c0 AS INTEGER) AS REAL)) ISNULL));
SELECT ALL * FROM vt0, vt1, v0;
SELECT DISTINCT v0.c0 FROM rt1, vt0, v0;
SELECT DISTINCT v0.c0 FROM rt1, vt0, v0 WHERE (COALESCE(DISTINCT (v0.c0 IN (rt1.c0)), (+ (rt1.c2)), vt0.c0 COLLATE NOCASE, v0.c0 COLLATE BINARY)) UNION SELECT DISTINCT v0.c0 FROM rt1, vt0, v0 WHERE ((NOT (COALESCE(DISTINCT (v0.c0 IN (rt1.c0)), (+ (rt1.c2)), vt0.c0 COLLATE NOCASE, v0.c0 COLLATE BINARY)))) UNION SELECT DISTINCT v0.c0 FROM rt1, vt0, v0 WHERE (((COALESCE(DISTINCT (v0.c0 IN (rt1.c0)), (+ (rt1.c2)), vt0.c0 COLLATE NOCASE, v0.c0 COLLATE BINARY)) ISNULL));
SELECT DISTINCT v0.c0 FROM rt1, vt0, v0;
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE (((((((0.2961509397780119)OR(rt1.c1)))OR(rt1.c0))) NOT BETWEEN (rt1.c2 COLLATE NOCASE) AND (CAST(rt1.c2 AS INTEGER)))) GROUP BY rt1.c1, rt1.c2, rt1.c0 UNION SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE ((NOT (((((((0.2961509397780119)OR(rt1.c1)))OR(rt1.c0))) NOT BETWEEN (rt1.c2 COLLATE NOCASE) AND (CAST(rt1.c2 AS INTEGER)))))) GROUP BY rt1.c1, rt1.c2, rt1.c0 UNION SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE (((((((((0.2961509397780119)OR(rt1.c1)))OR(rt1.c0))) NOT BETWEEN (rt1.c2 COLLATE NOCASE) AND (CAST(rt1.c2 AS INTEGER)))) ISNULL)) GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT rt1.c1, rt1.c0, vt0.c0, v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON ((LENGTH(rt1.c2)) ISNULL) CROSS JOIN rt1 ON ((((((((((v0.c0)AND(rt1.c0)))OR(v0.c0)))AND(vt0.c0)))OR(rt1.c0))) BETWEEN (ROUND('7	X', rt1.c0)) AND (((((rt1.c1)AND(rt1.c0)))OR(rt1.c0)))) GROUP BY rt1.c1, rt1.c0, vt0.c0, v0.c0;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (vt0.c0) UNION ALL SELECT * FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT v0.c0, rt1.c2 FROM v0, vt0, rt1, vt1;
SELECT DISTINCT v0.c0, rt1.c2 FROM v0, vt0, rt1, vt1 WHERE (((((vt1.c0)%(vt1.c0)))>(rt1.c0))) UNION SELECT DISTINCT v0.c0, rt1.c2 FROM v0, vt0, rt1, vt1 WHERE ((NOT (((((vt1.c0)%(vt1.c0)))>(rt1.c0))))) UNION SELECT DISTINCT v0.c0, rt1.c2 FROM v0, vt0, rt1, vt1 WHERE (((((((vt1.c0)%(vt1.c0)))>(rt1.c0))) ISNULL));
SELECT DISTINCT v0.c0, rt1.c2 FROM v0, vt0, rt1, vt1;
SELECT ALL vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c0, v0.c0;
SELECT ALL vt1.c0, v0.c0 FROM v0, vt1 WHERE (CHANGES()) GROUP BY vt1.c0, v0.c0 UNION SELECT vt1.c0, v0.c0 FROM v0, vt1 WHERE ((NOT (CHANGES()))) GROUP BY vt1.c0, v0.c0 UNION SELECT ALL vt1.c0, v0.c0 FROM v0, vt1 WHERE (((CHANGES()) ISNULL)) GROUP BY vt1.c0, v0.c0;
SELECT ALL vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c0, v0.c0;
SELECT vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON 'q&' GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON 'q&' GROUP BY vt0.c0 HAVING SUM(COUNT(vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON 'q&' GROUP BY vt0.c0 HAVING (NOT (SUM(COUNT(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON 'q&' GROUP BY vt0.c0 HAVING ((SUM(COUNT(vt0.c0))) ISNULL);
SELECT TOTAL(v0.c0) FROM v0, vt1 ORDER BY CASE WHEN (NOT (v0.c0)) THEN ((((vt1.c0)AND(v0.c0)))OR(vt1.c0)) WHEN CAST(vt1.c0 AS BLOB) THEN (vt1.c0 IN ()) WHEN (~ (vt1.c0)) THEN (('-850713619')>(vt1.c0)) END ASC  NULLS FIRST, CASE vt1.c0 COLLATE BINARY  WHEN ABS(v0.c0) THEN CASE WHEN '' THEN vt1.c0 ELSE vt1.c0 END ELSE ((v0.c0) NOT BETWEEN (vt1.c0) AND (v0.c0)) END;
SELECT ALL v0.c0, vt1.c0 FROM vt1, vt0, v0;
SELECT ALL v0.c0, vt1.c0 FROM vt1, vt0, v0 WHERE (CASE (((vt0.c0, 0xfffffffffcd51946, vt1.c0))<=((0.009997805854710662, v0.c0, vt0.c0)))  WHEN (+ (vt0.c0)) THEN ((vt0.c0)<(v0.c0)) WHEN vt0.c0 THEN CASE WHEN x'' THEN NULL WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt1.c0 ELSE v0.c0 END WHEN (((vt0.c0))<((v0.c0))) THEN ((x'') NOT BETWEEN (v0.c0) AND (vt0.c0)) END) UNION ALL SELECT ALL v0.c0, vt1.c0 FROM vt1, vt0, v0 WHERE ((NOT (CASE (((vt0.c0, 0Xfffffffffcd51946, vt1.c0))<=((0.009997805854710662, v0.c0, vt0.c0)))  WHEN (+ (vt0.c0)) THEN ((vt0.c0)<(v0.c0)) WHEN vt0.c0 THEN CASE WHEN x'' THEN NULL WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt1.c0 ELSE v0.c0 END WHEN (((vt0.c0))<((v0.c0))) THEN ((x'') NOT BETWEEN (v0.c0) AND (vt0.c0)) END))) UNION ALL SELECT v0.c0, vt1.c0 FROM vt1, vt0, v0 WHERE (((CASE (((vt0.c0, 0Xfffffffffcd51946, vt1.c0))<=((0.009997805854710662, v0.c0, vt0.c0)))  WHEN (+ (vt0.c0)) THEN ((vt0.c0)<(v0.c0)) WHEN vt0.c0 THEN CASE WHEN x'' THEN NULL WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt1.c0 ELSE v0.c0 END WHEN (((vt0.c0))<((v0.c0))) THEN ((x'') NOT BETWEEN (v0.c0) AND (vt0.c0)) END) ISNULL));
SELECT ALL v0.c0, vt1.c0 FROM vt1, vt0, v0;
SELECT DISTINCT vt1.c0, rt1.c1, vt0.c0, rt1.c0, rt1.c2 FROM rt1 RIGHT OUTER JOIN vt0 ON NULL CROSS JOIN vt1 ON ((6.4722279E7) NOT NULL);
SELECT DISTINCT vt1.c0, rt1.c1, vt0.c0, rt1.c0, rt1.c2 FROM rt1 RIGHT OUTER JOIN vt0 ON NULL CROSS JOIN vt1 ON ((6.4722279E7) NOT NULL) WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN 0.2654450402369076 ELSE vt0.c0 END) NOT BETWEEN (((((((((rt1.c2)AND(vt0.c0)))AND(rt1.c1)))AND(vt0.c0)))AND(rt1.c2))) AND (((rt1.c2)LIKE(rt1.c1))))) UNION SELECT DISTINCT vt1.c0, rt1.c1, vt0.c0, rt1.c0, rt1.c2 FROM rt1 RIGHT OUTER JOIN vt0 ON NULL CROSS JOIN vt1 ON ((6.4722279E7) NOT NULL) WHERE ((NOT (((CASE vt0.c0  WHEN vt0.c0 THEN 0.2654450402369076 ELSE vt0.c0 END) NOT BETWEEN (((((((((rt1.c2)AND(vt0.c0)))AND(rt1.c1)))AND(vt0.c0)))AND(rt1.c2))) AND (((rt1.c2)LIKE(rt1.c1))))))) UNION SELECT DISTINCT vt1.c0, rt1.c1, vt0.c0, rt1.c0, rt1.c2 FROM rt1 RIGHT OUTER JOIN vt0 ON NULL CROSS JOIN vt1 ON ((6.4722279E7) NOT NULL) WHERE (((((CASE vt0.c0  WHEN vt0.c0 THEN 0.2654450402369076 ELSE vt0.c0 END) NOT BETWEEN (((((((((rt1.c2)AND(vt0.c0)))AND(rt1.c1)))AND(vt0.c0)))AND(rt1.c2))) AND (((rt1.c2)LIKE(rt1.c1))))) ISNULL));
SELECT DISTINCT vt1.c0, rt1.c1, vt0.c0, rt1.c0, rt1.c2 FROM rt1 RIGHT OUTER JOIN vt0 ON NULL CROSS JOIN vt1 ON ((6.4722279E7) NOT NULL);
SELECT ALL vt0.c0, vt1.c0, v0.c0, rt1.c0 FROM vt0, rt1, v0, vt1 GROUP BY vt0.c0, vt1.c0, v0.c0, rt1.c0;
SELECT vt0.c0, vt1.c0, v0.c0, rt1.c0 FROM vt0, rt1, v0, vt1 WHERE ((NOT (((v0.c0)/(rt1.c1))))) GROUP BY vt0.c0, vt1.c0, v0.c0, rt1.c0 UNION SELECT vt0.c0, vt1.c0, v0.c0, rt1.c0 FROM vt0, rt1, v0, vt1 WHERE ((NOT ((NOT (((v0.c0)/(rt1.c1))))))) GROUP BY vt0.c0, vt1.c0, v0.c0, rt1.c0 UNION SELECT vt0.c0, vt1.c0, v0.c0, rt1.c0 FROM vt0, rt1, v0, vt1 WHERE ((((NOT (((v0.c0)/(rt1.c1))))) ISNULL)) GROUP BY vt0.c0, vt1.c0, v0.c0, rt1.c0;
SELECT ALL vt0.c0, vt1.c0, v0.c0, rt1.c0 FROM vt0, rt1, v0, vt1 GROUP BY vt0.c0, vt1.c0, v0.c0, rt1.c0;
SELECT ALL v0.c0 FROM vt1, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt1, v0 GROUP BY v0.c0 HAVING json_array_length(MIN(SUM(v0.c0))) UNION ALL SELECT ALL v0.c0 FROM vt1, v0 GROUP BY v0.c0 HAVING (NOT (json_array_length(MIN(SUM(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM vt1, v0 GROUP BY v0.c0 HAVING ((json_array_length(MIN(SUM(v0.c0)))) ISNULL);
SELECT ALL rt1.c2, vt0.c0, rt1.c0, v0.c0 FROM rt1 INNER JOIN v0 ON v0.c0 INNER JOIN vt0 ON ((((v0.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))) IN ()) INNER JOIN vt1 ON rt1.c0;
SELECT ALL rt1.c2, vt0.c0, rt1.c0, v0.c0 FROM rt1 INNER JOIN v0 ON v0.c0 INNER JOIN vt0 ON ((((v0.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))) IN ()) INNER JOIN vt1 ON rt1.c0 WHERE ((((((rt1.c1, rt1.c1, v0.c0))<((v0.c0, v0.c0, v0.c0)))) BETWEEN (((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c0))) AND (''))) UNION ALL SELECT rt1.c2, vt0.c0, rt1.c0, v0.c0 FROM rt1 INNER JOIN v0 ON v0.c0 INNER JOIN vt0 ON ((((v0.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))) IN ()) INNER JOIN vt1 ON rt1.c0 WHERE ((NOT ((((((rt1.c1, rt1.c1, v0.c0))<((v0.c0, v0.c0, v0.c0)))) BETWEEN (((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c0))) AND (''))))) UNION ALL SELECT ALL rt1.c2, vt0.c0, rt1.c0, v0.c0 FROM rt1 INNER JOIN v0 ON v0.c0 INNER JOIN vt0 ON ((((v0.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))) IN ()) INNER JOIN vt1 ON rt1.c0 WHERE ((((((((rt1.c1, rt1.c1, v0.c0))<((v0.c0, v0.c0, v0.c0)))) BETWEEN (((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c0))) AND (''))) ISNULL));
SELECT ALL rt1.c2, vt0.c0, rt1.c0, v0.c0 FROM rt1 INNER JOIN v0 ON v0.c0 INNER JOIN vt0 ON ((((v0.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))) IN ()) INNER JOIN vt1 ON rt1.c0;
SELECT DISTINCT rt1.c0, rt1.c2, vt0.c0, rt1.c1, v0.c0, vt1.c0 FROM vt0 INNER JOIN v0 ON (((((rt1.c2)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c2))))OR(CAST(vt1.c0 AS REAL))) INNER JOIN rt1 ON (((vt1.c0)) BETWEEN ((((-850713619)+(v0.c0)))) AND ((CASE WHEN rt1.c2 THEN NULL END))) LEFT OUTER JOIN vt1 ON ((CAST('-1997930152' AS REAL)) BETWEEN (vt1.c0 COLLATE NOCASE) AND (DATETIME(vt1.c0, NULL, '7voqc^쉝', vt0.c0, rt1.c0)));
SELECT DISTINCT rt1.c0, rt1.c2, vt0.c0, rt1.c1, v0.c0, vt1.c0 FROM vt0 INNER JOIN v0 ON (((((rt1.c2)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c2))))OR(CAST(vt1.c0 AS REAL))) INNER JOIN rt1 ON (((vt1.c0)) BETWEEN ((((-850713619)+(v0.c0)))) AND ((CASE WHEN rt1.c2 THEN NULL END))) LEFT OUTER JOIN vt1 ON ((CAST('-1997930152' AS REAL)) BETWEEN (vt1.c0 COLLATE NOCASE) AND (DATETIME(vt1.c0, NULL, '7voqc^쉝', vt0.c0, rt1.c0))) WHERE (CAST(1.747478849E9 AS INTEGER)) UNION SELECT DISTINCT rt1.c0, rt1.c2, vt0.c0, rt1.c1, v0.c0, vt1.c0 FROM vt0 INNER JOIN v0 ON (((((rt1.c2)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c2))))OR(CAST(vt1.c0 AS REAL))) INNER JOIN rt1 ON (((vt1.c0)) BETWEEN ((((-850713619)+(v0.c0)))) AND ((CASE WHEN rt1.c2 THEN NULL END))) LEFT OUTER JOIN vt1 ON ((CAST('-1997930152' AS REAL)) BETWEEN (vt1.c0 COLLATE NOCASE) AND (DATETIME(vt1.c0, NULL, '7voqc^쉝', vt0.c0, rt1.c0))) WHERE ((NOT (CAST(1.747478849E9 AS INTEGER)))) UNION SELECT DISTINCT rt1.c0, rt1.c2, vt0.c0, rt1.c1, v0.c0, vt1.c0 FROM vt0 INNER JOIN v0 ON (((((rt1.c2)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c2))))OR(CAST(vt1.c0 AS REAL))) INNER JOIN rt1 ON (((vt1.c0)) BETWEEN ((((-850713619)+(v0.c0)))) AND ((CASE WHEN rt1.c2 THEN NULL END))) LEFT OUTER JOIN vt1 ON ((CAST('-1997930152' AS REAL)) BETWEEN (vt1.c0 COLLATE NOCASE) AND (DATETIME(vt1.c0, NULL, '7voqc^쉝', vt0.c0, rt1.c0))) WHERE (((CAST(1.747478849E9 AS INTEGER)) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c2, vt0.c0, rt1.c1, v0.c0, vt1.c0 FROM vt0 INNER JOIN v0 ON (((((rt1.c2)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c2))))OR(CAST(vt1.c0 AS REAL))) INNER JOIN rt1 ON (((vt1.c0)) BETWEEN ((((-850713619)+(v0.c0)))) AND ((CASE WHEN rt1.c2 THEN NULL END))) LEFT OUTER JOIN vt1 ON ((CAST('-1997930152' AS REAL)) BETWEEN (vt1.c0 COLLATE NOCASE) AND (DATETIME(vt1.c0, NULL, '7voqc^쉝', vt0.c0, rt1.c0)));
SELECT ALL rt1.c1 FROM vt0, rt1, v0 GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM vt0, rt1, v0 WHERE (((((0.9560325081104307)IS(rt1.c0))) IS FALSE)) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM vt0, rt1, v0 WHERE ((NOT (((((0.9560325081104307)IS(rt1.c0))) IS FALSE)))) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM vt0, rt1, v0 WHERE (((((((0.9560325081104307)IS(rt1.c0))) IS FALSE)) ISNULL)) GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM vt0, rt1, v0 GROUP BY rt1.c1;
SELECT v0.c0, rt1.c1 FROM v0, rt1 GROUP BY v0.c0, rt1.c1;
SELECT ALL v0.c0, rt1.c1 FROM v0, rt1 GROUP BY v0.c0, rt1.c1 HAVING CASE WHEN ((COUNT(TOTAL(SUM(SUM(rt1.c1))))) BETWEEN (v0.c0) AND (SUM(COUNT(AVG(rt1.c0))))) THEN MIN(rt1.c2) END UNION ALL SELECT ALL v0.c0, rt1.c1 FROM v0, rt1 GROUP BY v0.c0, rt1.c1 HAVING (NOT (CASE WHEN ((COUNT(TOTAL(SUM(SUM(rt1.c1))))) BETWEEN (v0.c0) AND (SUM(COUNT(AVG(rt1.c0))))) THEN MIN(rt1.c2) END)) UNION ALL SELECT v0.c0, rt1.c1 FROM v0, rt1 GROUP BY v0.c0, rt1.c1 HAVING ((CASE WHEN ((COUNT(TOTAL(SUM(SUM(rt1.c1))))) BETWEEN (v0.c0) AND (SUM(COUNT(AVG(rt1.c0))))) THEN MIN(rt1.c2) END) ISNULL);
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON v0.c0 COLLATE BINARY;
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON v0.c0 COLLATE BINARY WHERE (((((vt0.c0)<>(vt0.c0)))!=(((((v0.c0)AND(v0.c0)))OR(vt0.c0))))) UNION ALL SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON v0.c0 COLLATE BINARY WHERE ((NOT (((((vt0.c0)<>(vt0.c0)))<>(((((v0.c0)AND(v0.c0)))OR(vt0.c0))))))) UNION ALL SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON v0.c0 COLLATE BINARY WHERE (((((((vt0.c0)!=(vt0.c0)))<>(((((v0.c0)AND(v0.c0)))OR(vt0.c0))))) ISNULL));
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON v0.c0 COLLATE BINARY;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (CAST(vt1.c0 COLLATE BINARY AS NUMERIC)) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (CAST(vt1.c0 COLLATE BINARY AS NUMERIC)))) UNION SELECT DISTINCT * FROM vt1 WHERE (((CAST(vt1.c0 COLLATE BINARY AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (UPPER(vt1.c0)) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (UPPER(vt1.c0)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((UPPER(vt1.c0)) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0, vt0.c0, rt1.c2, v0.c0 FROM vt0 CROSS JOIN rt1 ON ((rt1.c0 COLLATE BINARY)/((rt1.c0 IN ()))) LEFT OUTER JOIN vt1 ON ((((rt1.c0)LIKE(vt0.c0)))>(CAST(vt1.c0 AS REAL))) FULL OUTER JOIN v0 ON CASE CAST(vt1.c0 AS TEXT)  WHEN ((rt1.c2) NOT NULL) THEN ((x'') NOT NULL) ELSE '1145835603' END GROUP BY vt1.c0, vt0.c0, rt1.c2, v0.c0;
SELECT ALL vt1.c0, vt0.c0, rt1.c2, v0.c0 FROM vt0 CROSS JOIN rt1 ON ((rt1.c0 COLLATE BINARY)/((rt1.c0 IN ()))) LEFT OUTER JOIN vt1 ON ((((rt1.c0)LIKE(vt0.c0)))>(CAST(vt1.c0 AS REAL))) FULL OUTER JOIN v0 ON CASE CAST(vt1.c0 AS TEXT)  WHEN ((rt1.c2) NOT NULL) THEN ((x'') NOT NULL) ELSE '1145835603' END GROUP BY vt1.c0, vt0.c0, rt1.c2, v0.c0 HAVING ((TOTAL(x'3e1e'))AND(CAST(vt0.c0 AS NUMERIC))) UNION ALL SELECT vt1.c0, vt0.c0, rt1.c2, v0.c0 FROM vt0 CROSS JOIN rt1 ON ((rt1.c0 COLLATE BINARY)/((rt1.c0 IN ()))) LEFT OUTER JOIN vt1 ON ((((rt1.c0)LIKE(vt0.c0)))>(CAST(vt1.c0 AS REAL))) FULL OUTER JOIN v0 ON CASE CAST(vt1.c0 AS TEXT)  WHEN ((rt1.c2) NOT NULL) THEN ((x'') NOT NULL) ELSE '1145835603' END GROUP BY vt1.c0, vt0.c0, rt1.c2, v0.c0 HAVING (NOT (((TOTAL(x'3e1e'))AND(CAST(vt0.c0 AS NUMERIC))))) UNION ALL SELECT vt1.c0, vt0.c0, rt1.c2, v0.c0 FROM vt0 CROSS JOIN rt1 ON ((rt1.c0 COLLATE BINARY)/((rt1.c0 IN ()))) LEFT OUTER JOIN vt1 ON ((((rt1.c0)LIKE(vt0.c0)))>(CAST(vt1.c0 AS REAL))) FULL OUTER JOIN v0 ON CASE CAST(vt1.c0 AS TEXT)  WHEN ((rt1.c2) NOT NULL) THEN ((x'') NOT NULL) ELSE '1145835603' END GROUP BY vt1.c0, vt0.c0, rt1.c2, v0.c0 HAVING ((((TOTAL(x'3e1e'))AND(CAST(vt0.c0 AS NUMERIC)))) ISNULL);
SELECT vt1.c0, vt0.c0, rt1.c2, v0.c0 FROM vt0 CROSS JOIN rt1 ON ((rt1.c0 COLLATE BINARY)/((rt1.c0 IN ()))) LEFT OUTER JOIN vt1 ON ((((rt1.c0)LIKE(vt0.c0)))>(CAST(vt1.c0 AS REAL))) FULL OUTER JOIN v0 ON CASE CAST(vt1.c0 AS TEXT)  WHEN ((rt1.c2) NOT NULL) THEN ((x'') NOT NULL) ELSE '1145835603' END GROUP BY vt1.c0, vt0.c0, rt1.c2, v0.c0;
SELECT ALL vt1.c0, vt0.c0, rt1.c2, v0.c0 FROM vt0 CROSS JOIN rt1 ON ((rt1.c0 COLLATE BINARY)/((rt1.c0 IN ()))) LEFT OUTER JOIN vt1 ON ((((rt1.c0)LIKE(vt0.c0)))>(CAST(vt1.c0 AS REAL))) FULL OUTER JOIN v0 ON CASE CAST(vt1.c0 AS TEXT)  WHEN ((rt1.c2) NOT NULL) THEN ((x'') NOT NULL) ELSE '1145835603' END GROUP BY vt1.c0, vt0.c0, rt1.c2, v0.c0 HAVING ((TOTAL(x'3e1e'))AND(CAST(vt0.c0 AS NUMERIC))) UNION ALL SELECT vt1.c0, vt0.c0, rt1.c2, v0.c0 FROM vt0 CROSS JOIN rt1 ON ((rt1.c0 COLLATE BINARY)/((rt1.c0 IN ()))) LEFT OUTER JOIN vt1 ON ((((rt1.c0)LIKE(vt0.c0)))>(CAST(vt1.c0 AS REAL))) FULL OUTER JOIN v0 ON CASE CAST(vt1.c0 AS TEXT)  WHEN ((rt1.c2) NOT NULL) THEN ((x'') NOT NULL) ELSE '1145835603' END GROUP BY vt1.c0, vt0.c0, rt1.c2, v0.c0 HAVING (NOT (((TOTAL(x'3e1e'))AND(CAST(vt0.c0 AS NUMERIC))))) UNION ALL SELECT vt1.c0, vt0.c0, rt1.c2, v0.c0 FROM vt0 CROSS JOIN rt1 ON ((rt1.c0 COLLATE BINARY)/((rt1.c0 IN ()))) LEFT OUTER JOIN vt1 ON ((((rt1.c0)LIKE(vt0.c0)))>(CAST(vt1.c0 AS REAL))) FULL OUTER JOIN v0 ON CASE CAST(vt1.c0 AS TEXT)  WHEN ((rt1.c2) NOT NULL) THEN ((x'') NOT NULL) ELSE '1145835603' END GROUP BY vt1.c0, vt0.c0, rt1.c2, v0.c0 HAVING ((((TOTAL(x'3e1e'))AND(CAST(vt0.c0 AS NUMERIC)))) ISNULL);
SELECT vt1.c0, vt0.c0, rt1.c2, v0.c0 FROM vt0 CROSS JOIN rt1 ON ((rt1.c0 COLLATE BINARY)/((rt1.c0 IN ()))) LEFT OUTER JOIN vt1 ON ((((rt1.c0)LIKE(vt0.c0)))>(CAST(vt1.c0 AS REAL))) FULL OUTER JOIN v0 ON CASE CAST(vt1.c0 AS TEXT)  WHEN ((rt1.c2) NOT NULL) THEN ((x'') NOT NULL) ELSE '1145835603' END GROUP BY vt1.c0, vt0.c0, rt1.c2, v0.c0;
SELECT * FROM vt1;
SELECT ALL * FROM vt1 WHERE ('') UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (''))) UNION ALL SELECT * FROM vt1 WHERE ((('') ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM vt0, v0 INNER JOIN rt1 ON (((vt0.c0 IN ()))AND(vt0.c0)) LEFT OUTER JOIN vt1 ON ((((((((vt1.c0)OR(vt0.c0)))AND(rt1.c1)))AND(((((((((vt1.c0)AND(vt1.c0)))OR(rt1.c2)))OR(rt1.c0)))OR(rt1.c2)))))OR(CAST(vt0.c0 AS BLOB)));
SELECT DISTINCT * FROM vt0, v0 INNER JOIN rt1 ON (((vt0.c0 IN ()))AND(vt0.c0)) LEFT OUTER JOIN vt1 ON ((((((((vt1.c0)OR(vt0.c0)))AND(rt1.c1)))AND(((((((((vt1.c0)AND(vt1.c0)))OR(rt1.c2)))OR(rt1.c0)))OR(rt1.c2)))))OR(CAST(vt0.c0 AS BLOB))) WHERE ((((((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((vt0.c0))))/(NULL))) UNION SELECT DISTINCT * FROM vt0, v0 INNER JOIN rt1 ON (((vt0.c0 IN ()))AND(vt0.c0)) LEFT OUTER JOIN vt1 ON ((((((((vt1.c0)OR(vt0.c0)))AND(rt1.c1)))AND(((((((((vt1.c0)AND(vt1.c0)))OR(rt1.c2)))OR(rt1.c0)))OR(rt1.c2)))))OR(CAST(vt0.c0 AS BLOB))) WHERE ((NOT ((((((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((vt0.c0))))/(NULL))))) UNION SELECT DISTINCT * FROM vt0, v0 INNER JOIN rt1 ON (((vt0.c0 IN ()))AND(vt0.c0)) LEFT OUTER JOIN vt1 ON ((((((((vt1.c0)OR(vt0.c0)))AND(rt1.c1)))AND(((((((((vt1.c0)AND(vt1.c0)))OR(rt1.c2)))OR(rt1.c0)))OR(rt1.c2)))))OR(CAST(vt0.c0 AS BLOB))) WHERE ((((((((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((vt0.c0))))/(NULL))) ISNULL));
SELECT DISTINCT * FROM vt0, v0 INNER JOIN rt1 ON (((vt0.c0 IN ()))AND(vt0.c0)) LEFT OUTER JOIN vt1 ON ((((((((vt1.c0)OR(vt0.c0)))AND(rt1.c1)))AND(((((((((vt1.c0)AND(vt1.c0)))OR(rt1.c2)))OR(rt1.c0)))OR(rt1.c2)))))OR(CAST(vt0.c0 AS BLOB)));
SELECT rt1.c1, v0.c0, rt1.c2 FROM rt1, v0 GROUP BY rt1.c1, v0.c0, rt1.c2;
SELECT rt1.c1, v0.c0, rt1.c2 FROM rt1, v0 WHERE (LIKELY(((((rt1.c2)AND(rt1.c1)))OR(rt1.c2)))) GROUP BY rt1.c1, v0.c0, rt1.c2 UNION SELECT rt1.c1, v0.c0, rt1.c2 FROM rt1, v0 WHERE ((NOT (LIKELY(((((rt1.c2)AND(rt1.c1)))OR(rt1.c2)))))) GROUP BY rt1.c1, v0.c0, rt1.c2 UNION SELECT ALL rt1.c1, v0.c0, rt1.c2 FROM rt1, v0 WHERE (((LIKELY(((((rt1.c2)AND(rt1.c1)))OR(rt1.c2)))) ISNULL)) GROUP BY rt1.c1, v0.c0, rt1.c2;
SELECT rt1.c1, v0.c0, rt1.c2 FROM rt1, v0 GROUP BY rt1.c1, v0.c0, rt1.c2;
SELECT rt1.c1 FROM rt1 LEFT OUTER JOIN v0 ON CASE ((((rt1.c0)AND(NULL)))OR(rt1.c1))  WHEN TRIM(rt1.c0) THEN ((rt1.c1) IS TRUE) END GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt1 LEFT OUTER JOIN v0 ON CASE ((((rt1.c0)AND(NULL)))OR(rt1.c1))  WHEN TRIM(rt1.c0) THEN ((rt1.c1) IS TRUE) END GROUP BY rt1.c1 HAVING (COUNT(v0.c0) IN ()) UNION ALL SELECT rt1.c1 FROM rt1 LEFT OUTER JOIN v0 ON CASE ((((rt1.c0)AND(NULL)))OR(rt1.c1))  WHEN TRIM(rt1.c0) THEN ((rt1.c1) IS TRUE) END GROUP BY rt1.c1 HAVING (NOT ((COUNT(v0.c0) IN ()))) UNION ALL SELECT ALL rt1.c1 FROM rt1 LEFT OUTER JOIN v0 ON CASE ((((rt1.c0)AND(NULL)))OR(rt1.c1))  WHEN TRIM(rt1.c0) THEN ((rt1.c1) IS TRUE) END GROUP BY rt1.c1 HAVING (((COUNT(v0.c0) IN ())) ISNULL);
SELECT rt1.c1 FROM rt1 LEFT OUTER JOIN v0 ON CASE ((((rt1.c0)AND(NULL)))OR(rt1.c1))  WHEN TRIM(rt1.c0) THEN ((rt1.c1) IS TRUE) END GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt1 LEFT OUTER JOIN v0 ON CASE ((((rt1.c0)AND(NULL)))OR(rt1.c1))  WHEN TRIM(rt1.c0) THEN ((rt1.c1) IS TRUE) END GROUP BY rt1.c1 HAVING (COUNT(v0.c0) IN ()) UNION ALL SELECT rt1.c1 FROM rt1 LEFT OUTER JOIN v0 ON CASE ((((rt1.c0)AND(NULL)))OR(rt1.c1))  WHEN TRIM(rt1.c0) THEN ((rt1.c1) IS TRUE) END GROUP BY rt1.c1 HAVING (NOT ((COUNT(v0.c0) IN ()))) UNION ALL SELECT ALL rt1.c1 FROM rt1 LEFT OUTER JOIN v0 ON CASE ((((rt1.c0)AND(NULL)))OR(rt1.c1))  WHEN TRIM(rt1.c0) THEN ((rt1.c1) IS TRUE) END GROUP BY rt1.c1 HAVING (((COUNT(v0.c0) IN ())) ISNULL);
SELECT rt1.c1 FROM rt1 LEFT OUTER JOIN v0 ON CASE ((((rt1.c0)AND(NULL)))OR(rt1.c1))  WHEN TRIM(rt1.c0) THEN ((rt1.c1) IS TRUE) END GROUP BY rt1.c1;
SELECT ALL MAX(((((x'9f79')|(v0.c0))) BETWEEN ('' COLLATE BINARY) AND (COALESCE(v0.c0, v0.c0)))) FROM v0;
SELECT ALL * FROM rt1;
SELECT * FROM rt1 WHERE ((((- (rt1.c1))) BETWEEN (rt1.c2) AND ('812057996'))) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT ((((- (rt1.c1))) BETWEEN (rt1.c2) AND ('812057996'))))) UNION ALL SELECT ALL * FROM rt1 WHERE ((((((- (rt1.c1))) BETWEEN (rt1.c2) AND ('812057996'))) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN (((vt0.c0 IN (vt0.c0)))) AND ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((vt0.c0)) BETWEEN (((vt0.c0 IN (vt0.c0)))) AND ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c0)) BETWEEN (((vt0.c0 IN (vt0.c0)))) AND ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((((CAST(vt0.c0 AS NUMERIC))AND(((vt0.c0) NOT NULL))))OR(HEX(vt0.c0)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((CAST(vt0.c0 AS NUMERIC))AND(((vt0.c0) NOT NULL))))OR(HEX(vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((((CAST(vt0.c0 AS NUMERIC))AND(((vt0.c0) NOT NULL))))OR(HEX(vt0.c0)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt1.c0 FROM vt1, v0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, v0 GROUP BY vt1.c0 HAVING CASE ((AVG(MAX(TOTAL(MAX(TOTAL(MAX(-1.241799652E9))))))) IS TRUE)  WHEN (((MAX(MAX(-5.66296833E8)), MAX(v0.c0), vt1.c0))>((COUNT(*), 0.01626140724270486, v0.c0))) THEN CAST(SUM(vt1.c0) AS TEXT) ELSE AVG(v0.c0) END UNION ALL SELECT vt1.c0 FROM vt1, v0 GROUP BY vt1.c0 HAVING (NOT (CASE ((AVG(MAX(TOTAL(MAX(TOTAL(MAX(-1.241799652E9))))))) IS TRUE)  WHEN (((MAX(MAX(-5.66296833E8)), MAX(v0.c0), vt1.c0))>((COUNT(*), 0.01626140724270486, v0.c0))) THEN CAST(SUM(vt1.c0) AS TEXT) ELSE AVG(v0.c0) END)) UNION ALL SELECT vt1.c0 FROM vt1, v0 GROUP BY vt1.c0 HAVING ((CASE ((AVG(MAX(TOTAL(MAX(TOTAL(MAX(-1.241799652E9))))))) IS TRUE)  WHEN (((MAX(MAX(-5.66296833E8)), MAX(v0.c0), vt1.c0))>((COUNT(*), 0.01626140724270486, v0.c0))) THEN CAST(SUM(vt1.c0) AS TEXT) ELSE AVG(v0.c0) END) ISNULL);
SELECT ALL * FROM vt1, rt1;
SELECT * FROM vt1, rt1 WHERE ((((((rt1.c1))!=((rt1.c0)))) ISNULL)) UNION ALL SELECT * FROM vt1, rt1 WHERE ((NOT ((((((rt1.c1))<>((rt1.c0)))) ISNULL)))) UNION ALL SELECT * FROM vt1, rt1 WHERE ((((((((rt1.c1))<>((rt1.c0)))) ISNULL)) ISNULL));
SELECT ALL * FROM vt1, rt1;
SELECT DISTINCT rt1.c0 FROM rt1;
SELECT DISTINCT rt1.c0 FROM rt1 WHERE (((rt1.c2) IS FALSE)) UNION SELECT DISTINCT rt1.c0 FROM rt1 WHERE ((NOT (((rt1.c2) IS FALSE)))) UNION SELECT DISTINCT rt1.c0 FROM rt1 WHERE (((((rt1.c2) IS FALSE)) ISNULL));
SELECT DISTINCT rt1.c0 FROM rt1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (CASE CAST(NULL AS INTEGER)  WHEN ((((v0.c0)AND(v0.c0)))OR(v0.c0)) THEN v0.c0 COLLATE BINARY ELSE ABS(DISTINCT v0.c0) END) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CASE CAST(NULL AS INTEGER)  WHEN ((((v0.c0)AND(v0.c0)))OR(v0.c0)) THEN v0.c0 COLLATE BINARY ELSE ABS(DISTINCT v0.c0) END))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((CASE CAST(NULL AS INTEGER)  WHEN ((((v0.c0)AND(v0.c0)))OR(v0.c0)) THEN v0.c0 COLLATE BINARY ELSE ABS(DISTINCT v0.c0) END) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING TOTAL((NOT (vt1.c0))) UNION ALL SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING (NOT (TOTAL((NOT (vt1.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING ((TOTAL((NOT (vt1.c0)))) ISNULL);
SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING TOTAL((NOT (vt1.c0))) UNION ALL SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING (NOT (TOTAL((NOT (vt1.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING ((TOTAL((NOT (vt1.c0)))) ISNULL);
SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (TRIM((vt0.c0 IN ()))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (TRIM((vt0.c0 IN ()))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((TRIM((vt0.c0 IN ()))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt1, rt1 FULL OUTER JOIN vt0 ON (- (json_extract(vt0.c0, rt1.c2)));
SELECT DISTINCT * FROM vt1, rt1 FULL OUTER JOIN vt0 ON (- (json_extract(vt0.c0, rt1.c2))) WHERE (CAST(rt1.c2 AS NUMERIC) COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt1, rt1 FULL OUTER JOIN vt0 ON (- (json_extract(vt0.c0, rt1.c2))) WHERE ((NOT (CAST(rt1.c2 AS NUMERIC) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt1, rt1 FULL OUTER JOIN vt0 ON (- (json_extract(vt0.c0, rt1.c2))) WHERE (((CAST(rt1.c2 AS NUMERIC) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt1, rt1 FULL OUTER JOIN vt0 ON (- (json_extract(vt0.c0, rt1.c2)));
SELECT v0.c0, vt1.c0 FROM vt0, vt1, v0 GROUP BY v0.c0, vt1.c0;
SELECT ALL v0.c0, vt1.c0 FROM vt0, vt1, v0 WHERE (CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 END AS INTEGER)) GROUP BY v0.c0, vt1.c0 UNION SELECT ALL v0.c0, vt1.c0 FROM vt0, vt1, v0 WHERE ((NOT (CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 END AS INTEGER)))) GROUP BY v0.c0, vt1.c0 UNION SELECT ALL v0.c0, vt1.c0 FROM vt0, vt1, v0 WHERE (((CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 END AS INTEGER)) ISNULL)) GROUP BY v0.c0, vt1.c0;
SELECT v0.c0, vt1.c0 FROM vt0, vt1, v0 GROUP BY v0.c0, vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING TOTAL(vt1.c0) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (TOTAL(vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((TOTAL(vt1.c0)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING TOTAL(vt1.c0) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (TOTAL(vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((TOTAL(vt1.c0)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT v0.c0, rt1.c2, rt1.c0, vt0.c0 FROM v0, vt0 LEFT OUTER JOIN vt1 ON (- (NULL)) INNER JOIN rt1 ON ((((CAST(rt1.c1 AS BLOB))OR(0.1233091253734877)))AND((vt1.c0 IN ())));
SELECT ALL v0.c0, rt1.c2, rt1.c0, vt0.c0 FROM v0, vt0 LEFT OUTER JOIN vt1 ON (- (NULL)) INNER JOIN rt1 ON ((((CAST(rt1.c1 AS BLOB))OR(0.1233091253734877)))AND((vt1.c0 IN ()))) WHERE (((((vt0.c0 IN ()), (v0.c0 IN (v0.c0)), ((NULL) IS FALSE), PRINTF(0xffffffffc9df8768), ((rt1.c1)>(vt1.c0))))<=((LIKELY(DISTINCT rt1.c2), (((v0.c0)) BETWEEN (('1508567288')) AND ((vt0.c0))), v0.c0, ((((rt1.c1)AND(rt1.c2)))OR(rt1.c0)), CAST(rt1.c0 AS NUMERIC))))) UNION ALL SELECT ALL v0.c0, rt1.c2, rt1.c0, vt0.c0 FROM v0, vt0 LEFT OUTER JOIN vt1 ON (- (NULL)) INNER JOIN rt1 ON ((((CAST(rt1.c1 AS BLOB))OR(0.1233091253734877)))AND((vt1.c0 IN ()))) WHERE ((NOT (((((vt0.c0 IN ()), (v0.c0 IN (v0.c0)), ((NULL) IS FALSE), PRINTF(0xffffffffc9df8768), ((rt1.c1)>(vt1.c0))))<=((LIKELY(DISTINCT rt1.c2), (((v0.c0)) BETWEEN (('1508567288')) AND ((vt0.c0))), v0.c0, ((((rt1.c1)AND(rt1.c2)))OR(rt1.c0)), CAST(rt1.c0 AS NUMERIC))))))) UNION ALL SELECT ALL v0.c0, rt1.c2, rt1.c0, vt0.c0 FROM v0, vt0 LEFT OUTER JOIN vt1 ON (- (NULL)) INNER JOIN rt1 ON ((((CAST(rt1.c1 AS BLOB))OR(0.1233091253734877)))AND((vt1.c0 IN ()))) WHERE (((((((vt0.c0 IN ()), (v0.c0 IN (v0.c0)), ((NULL) IS FALSE), PRINTF(0Xffffffffc9df8768), ((rt1.c1)>(vt1.c0))))<=((LIKELY(DISTINCT rt1.c2), (((v0.c0)) BETWEEN (('1508567288')) AND ((vt0.c0))), v0.c0, ((((rt1.c1)AND(rt1.c2)))OR(rt1.c0)), CAST(rt1.c0 AS NUMERIC))))) ISNULL));
SELECT v0.c0, rt1.c2, rt1.c0, vt0.c0 FROM v0, vt0 LEFT OUTER JOIN vt1 ON (- (NULL)) INNER JOIN rt1 ON ((((CAST(rt1.c1 AS BLOB))OR(0.1233091253734877)))AND((vt1.c0 IN ())));
SELECT DISTINCT * FROM v0, rt1, vt1 INNER JOIN vt0 ON CASE WHEN (- (v0.c0)) THEN (vt0.c0 IN (v0.c0, rt1.c2)) END;
SELECT DISTINCT * FROM v0, rt1, vt1 INNER JOIN vt0 ON CASE WHEN (- (v0.c0)) THEN (vt0.c0 IN (v0.c0, rt1.c2)) END WHERE (NULL) UNION SELECT DISTINCT * FROM v0, rt1, vt1 INNER JOIN vt0 ON CASE WHEN (- (v0.c0)) THEN (vt0.c0 IN (v0.c0, rt1.c2)) END WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM v0, rt1, vt1 NOT INDEXED INNER JOIN vt0 ON CASE WHEN (- (v0.c0)) THEN (vt0.c0 IN (v0.c0, rt1.c2)) END WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM v0, rt1, vt1 INNER JOIN vt0 ON CASE WHEN (- (v0.c0)) THEN (vt0.c0 IN (v0.c0, rt1.c2)) END;
SELECT ALL rt1.c2 FROM v0, rt1 GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM v0, rt1 WHERE ((- (((rt1.c0)+(rt1.c1))))) GROUP BY rt1.c2 UNION SELECT ALL rt1.c2 FROM v0, rt1 WHERE ((NOT ((- (((rt1.c0)+(rt1.c1))))))) GROUP BY rt1.c2 UNION SELECT rt1.c2 FROM v0, rt1 WHERE ((((- (((rt1.c0)+(rt1.c1))))) ISNULL)) GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM v0, rt1 GROUP BY rt1.c2;
SELECT vt1.c0 FROM vt1, vt0 RIGHT OUTER JOIN rt1 ON (((((rt1.c2))<((vt1.c0))))|((rt1.c2 IN (rt1.c1, rt1.c2)))) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt0 RIGHT OUTER JOIN rt1 ON (((((rt1.c2))<((vt1.c0))))|((rt1.c2 IN (rt1.c1, rt1.c2)))) GROUP BY vt1.c0 HAVING (((SUM(rt1.c0), COUNT(TOTAL(AVG(vt0.c0))), COUNT(MAX(MAX(vt1.c0))), AVG(rt1.c1), AVG(GROUP_CONCAT(TOTAL(rt1.c2)))))<=((MIN(COUNT(rt1.c0), SUM(SUM(COUNT(*))), vt0.c0, vt1.c0), CAST('' AS NUMERIC), ((TOTAL(AVG(rt1.c1))) IS FALSE), CAST(rt1.c1 AS INTEGER), MIN(MIN(x''))))) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt0 RIGHT OUTER JOIN rt1 ON (((((rt1.c2))<((vt1.c0))))|((rt1.c2 IN (rt1.c1, rt1.c2)))) GROUP BY vt1.c0 HAVING (NOT ((((SUM(rt1.c0), COUNT(TOTAL(AVG(vt0.c0))), COUNT(MAX(MAX(vt1.c0))), AVG(rt1.c1), AVG(GROUP_CONCAT(TOTAL(rt1.c2)))))<=((MIN(COUNT(rt1.c0), SUM(SUM(COUNT(*))), vt0.c0, vt1.c0), CAST('' AS NUMERIC), ((TOTAL(AVG(rt1.c1))) IS FALSE), CAST(rt1.c1 AS INTEGER), MIN(MIN(x''))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt0 RIGHT OUTER JOIN rt1 ON (((((rt1.c2))<((vt1.c0))))|((rt1.c2 IN (rt1.c1, rt1.c2)))) GROUP BY vt1.c0 HAVING (((((SUM(rt1.c0), COUNT(TOTAL(AVG(vt0.c0))), COUNT(MAX(MAX(vt1.c0))), AVG(rt1.c1), AVG(GROUP_CONCAT(TOTAL(rt1.c2)))))<=((MIN(COUNT(rt1.c0), SUM(SUM(COUNT(*))), vt0.c0, vt1.c0), CAST('' AS NUMERIC), ((TOTAL(AVG(rt1.c1))) IS FALSE), CAST(rt1.c1 AS INTEGER), MIN(MIN(x'')))))) ISNULL);
SELECT ALL MIN((((0.999681070337802 IN ())) NOT NULL)) FROM vt0, vt1;
SELECT ALL rt1.c1 FROM vt1, vt0, rt1;
SELECT ALL rt1.c1 FROM vt1, vt0, rt1 WHERE ((vt0.c0 IN ()) COLLATE RTRIM) UNION ALL SELECT rt1.c1 FROM vt1, vt0, rt1 WHERE ((NOT ((vt0.c0 IN ()) COLLATE RTRIM))) UNION ALL SELECT ALL rt1.c1 FROM vt1, vt0, rt1 WHERE ((((vt0.c0 IN ()) COLLATE RTRIM) ISNULL));
SELECT ALL rt1.c1 FROM vt1, vt0, rt1;
SELECT DISTINCT rt1.c2, rt1.c0 FROM rt1;
SELECT DISTINCT rt1.c2, rt1.c0 FROM rt1 WHERE ('-1079210572') UNION SELECT DISTINCT rt1.c2, rt1.c0 FROM rt1 WHERE ((NOT ('-1079210572'))) UNION SELECT DISTINCT rt1.c2, rt1.c0 FROM rt1 WHERE ((('-1079210572') ISNULL));
SELECT DISTINCT rt1.c2, rt1.c0 FROM rt1;
SELECT ALL rt1.c2, vt1.c0 FROM v0 FULL OUTER JOIN rt1 ON (+ (CAST(vt0.c0 AS NUMERIC))) INNER JOIN vt0 ON CASE x'fd1d'  WHEN rt1.c2 THEN LTRIM(vt1.c0) ELSE ((vt0.c0)==(rt1.c1)) END LEFT OUTER JOIN vt1 ON LIKELIHOOD(vt1.c0 COLLATE NOCASE, 0.9584227287483696) GROUP BY rt1.c2, vt1.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CAST(vt0.c0 AS TEXT)) NOTNULL) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((CAST(vt0.c0 AS TEXT)) NOTNULL))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((CAST(vt0.c0 AS TEXT)) NOTNULL)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CAST(vt0.c0 AS TEXT)) NOTNULL) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((CAST(vt0.c0 AS TEXT)) NOTNULL))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((CAST(vt0.c0 AS TEXT)) NOTNULL)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (vt1.c0 COLLATE NOCASE) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0 COLLATE NOCASE))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((x'') NOTNULL)) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((x'') NOTNULL)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((x'') NOTNULL)) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (NULL) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (NULL))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((NULL) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt0.c0, v0.c0, vt1.c0 FROM v0, vt1, vt0 GROUP BY vt0.c0, v0.c0, vt1.c0;
SELECT vt0.c0, v0.c0, vt1.c0 FROM v0, vt1, vt0 GROUP BY vt0.c0, v0.c0, vt1.c0 HAVING ((GROUP_CONCAT(COUNT(vt1.c0)))AND(MAX(vt0.c0))) UNION ALL SELECT vt0.c0, v0.c0, vt1.c0 FROM v0, vt1, vt0 GROUP BY vt0.c0, v0.c0, vt1.c0 HAVING (NOT (((GROUP_CONCAT(COUNT(vt1.c0)))AND(MAX(vt0.c0))))) UNION ALL SELECT ALL vt0.c0, v0.c0, vt1.c0 FROM v0, vt1, vt0 GROUP BY vt0.c0, v0.c0, vt1.c0 HAVING ((((GROUP_CONCAT(COUNT(vt1.c0)))AND(MAX(vt0.c0)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0, vt1, v0 NOT INDEXED;
SELECT vt0.c0 FROM vt0, vt1, v0 WHERE (json_insert(((vt1.c0) NOT NULL), '599031971' COLLATE RTRIM, ((vt1.c0) NOTNULL))) UNION ALL SELECT vt0.c0 FROM vt0, vt1, v0 WHERE ((NOT (json_insert(((vt1.c0) NOT NULL), '599031971' COLLATE RTRIM, ((vt1.c0) NOTNULL))))) UNION ALL SELECT vt0.c0 FROM vt0, vt1, v0 WHERE (((json_insert(((vt1.c0) NOT NULL), '599031971' COLLATE RTRIM, ((vt1.c0) NOTNULL))) ISNULL));
SELECT ALL vt0.c0 FROM vt0, vt1, v0 NOT INDEXED;
SELECT DISTINCT v0.c0, rt1.c2, rt1.c0, vt0.c0 FROM vt0, vt1, rt1, v0;
SELECT DISTINCT v0.c0, rt1.c2, rt1.c0, vt0.c0 FROM vt0, vt1, rt1, v0 WHERE ((rt1.c2 IN ()) COLLATE RTRIM) UNION SELECT DISTINCT v0.c0, rt1.c2, rt1.c0, vt0.c0 FROM vt0, vt1, rt1, v0 WHERE ((NOT ((rt1.c2 IN ()) COLLATE RTRIM))) UNION SELECT DISTINCT v0.c0, rt1.c2, rt1.c0, vt0.c0 FROM vt0, vt1, rt1, v0 WHERE ((((rt1.c2 IN ()) COLLATE RTRIM) ISNULL));
SELECT DISTINCT v0.c0, rt1.c2, rt1.c0, vt0.c0 FROM vt0, vt1, rt1, v0;
SELECT rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2;
SELECT ALL rt1.c0, rt1.c2 FROM rt1 WHERE (((((rt1.c0) NOTNULL)) NOT BETWEEN (('' IN (rt1.c2))) AND (rt1.c0))) GROUP BY rt1.c0, rt1.c2 UNION SELECT rt1.c0, rt1.c2 FROM rt1 WHERE ((NOT (((((rt1.c0) NOTNULL)) NOT BETWEEN (('' IN (rt1.c2))) AND (rt1.c0))))) GROUP BY rt1.c0, rt1.c2 UNION SELECT ALL rt1.c0, rt1.c2 FROM rt1 WHERE (((((((rt1.c0) NOTNULL)) NOT BETWEEN (('' IN (rt1.c2))) AND (rt1.c0))) ISNULL)) GROUP BY rt1.c0, rt1.c2;
SELECT rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2;
SELECT ALL v0.c0, vt1.c0 FROM vt1, v0 GROUP BY v0.c0, vt1.c0;
SELECT v0.c0, vt1.c0 FROM vt1, v0 GROUP BY v0.c0, vt1.c0 HAVING COUNT(TOTAL(vt1.c0)) UNION ALL SELECT v0.c0, vt1.c0 FROM vt1, v0 GROUP BY v0.c0, vt1.c0 HAVING (NOT (COUNT(TOTAL(vt1.c0)))) UNION ALL SELECT v0.c0, vt1.c0 FROM vt1, v0 GROUP BY v0.c0, vt1.c0 HAVING ((COUNT(TOTAL(vt1.c0))) ISNULL);
SELECT * FROM vt0 LEFT OUTER JOIN v0 ON (((vt0.c0 IN ())) BETWEEN (CAST(v0.c0 AS INTEGER)) AND (CAST(vt0.c0 AS INTEGER)));
SELECT * FROM vt0 LEFT OUTER JOIN v0 ON (((vt0.c0 IN ())) BETWEEN (CAST(v0.c0 AS INTEGER)) AND (CAST(vt0.c0 AS INTEGER))) WHERE (CASE UPPER(DISTINCT vt0.c0)  WHEN (((-645121501)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) THEN ((vt0.c0) NOT NULL) END) UNION ALL SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON (((vt0.c0 IN ())) BETWEEN (CAST(v0.c0 AS INTEGER)) AND (CAST(vt0.c0 AS INTEGER))) WHERE ((NOT (CASE UPPER(DISTINCT vt0.c0)  WHEN (((-645121501)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) THEN ((vt0.c0) NOT NULL) END))) UNION ALL SELECT * FROM vt0 LEFT OUTER JOIN v0 ON (((vt0.c0 IN ())) BETWEEN (CAST(v0.c0 AS INTEGER)) AND (CAST(vt0.c0 AS INTEGER))) WHERE (((CASE UPPER(DISTINCT vt0.c0)  WHEN (((-645121501)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) THEN ((vt0.c0) NOT NULL) END) ISNULL));
SELECT * FROM vt0 LEFT OUTER JOIN v0 ON (((vt0.c0 IN ())) BETWEEN (CAST(v0.c0 AS INTEGER)) AND (CAST(vt0.c0 AS INTEGER)));
SELECT DISTINCT * FROM vt0 INNER JOIN v0 ON ((HEX(v0.c0)) IS FALSE) RIGHT OUTER JOIN vt1 ON ((0Xffffffff9778451e)-(CAST(vt0.c0 AS TEXT)));
SELECT DISTINCT * FROM vt0 INNER JOIN v0 ON ((HEX(v0.c0)) IS FALSE) RIGHT OUTER JOIN vt1 ON ((0xffffffff9778451e)-(CAST(vt0.c0 AS TEXT))) WHERE ((((v0.c0))>=((v0.c0))) COLLATE BINARY) UNION SELECT DISTINCT * FROM vt0 INNER JOIN v0 ON ((HEX(v0.c0)) IS FALSE) RIGHT OUTER JOIN vt1 ON ((0xffffffff9778451e)-(CAST(vt0.c0 AS TEXT))) WHERE ((NOT ((((v0.c0))>=((v0.c0))) COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt0 INNER JOIN v0 ON ((HEX(v0.c0)) IS FALSE) RIGHT OUTER JOIN vt1 ON ((0xffffffff9778451e)-(CAST(vt0.c0 AS TEXT))) WHERE ((((((v0.c0))>=((v0.c0))) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM vt0 INNER JOIN v0 ON ((HEX(v0.c0)) IS FALSE) RIGHT OUTER JOIN vt1 ON ((0Xffffffff9778451e)-(CAST(vt0.c0 AS TEXT)));
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((((vt1.c0)>>(vt1.c0)) IN ())) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0)>>(vt1.c0)) IN ())))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((((vt1.c0)>>(vt1.c0)) IN ())) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(AVG(SUM(v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(AVG(SUM(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(AVG(SUM(v0.c0)))) ISNULL);
SELECT rt1.c1, rt1.c2 FROM rt1;
SELECT rt1.c1, rt1.c2 FROM rt1 WHERE ((((CAST(rt1.c1 AS BLOB)))<=((((((rt1.c1)OR(rt1.c0)))AND(rt1.c0)))))) UNION ALL SELECT rt1.c1, rt1.c2 FROM rt1 WHERE ((NOT ((((CAST(rt1.c1 AS BLOB)))<=((((((rt1.c1)OR(rt1.c0)))AND(rt1.c0)))))))) UNION ALL SELECT rt1.c1, rt1.c2 FROM rt1 WHERE ((((((CAST(rt1.c1 AS BLOB)))<=((((((rt1.c1)OR(rt1.c0)))AND(rt1.c0)))))) ISNULL));
SELECT rt1.c1, rt1.c2 FROM rt1;
SELECT DISTINCT * FROM rt1, vt0, v0, vt1;
SELECT DISTINCT * FROM rt1, vt0, v0, vt1 WHERE ((((v0.c0)) BETWEEN ((((v0.c0)+(rt1.c1)))) AND ((NULL COLLATE RTRIM)))) UNION SELECT DISTINCT * FROM rt1, vt0, v0, vt1 WHERE ((NOT ((((v0.c0)) BETWEEN ((((v0.c0)+(rt1.c1)))) AND ((NULL COLLATE RTRIM)))))) UNION SELECT DISTINCT * FROM rt1, vt0, v0, vt1 WHERE ((((((v0.c0)) BETWEEN ((((v0.c0)+(rt1.c1)))) AND ((NULL COLLATE RTRIM)))) ISNULL));
SELECT DISTINCT * FROM rt1, vt0, v0, vt1;
SELECT ALL v0.c0 FROM vt1, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt1, v0 WHERE (((CAST(vt1.c0 AS TEXT)) BETWEEN (((v0.c0) BETWEEN (vt1.c0) AND (v0.c0))) AND ((v0.c0 IN ())))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt1, v0 WHERE ((NOT (((CAST(vt1.c0 AS TEXT)) BETWEEN (((v0.c0) BETWEEN (vt1.c0) AND (v0.c0))) AND ((v0.c0 IN ())))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt1, v0 WHERE (((((CAST(vt1.c0 AS TEXT)) BETWEEN (((v0.c0) BETWEEN (vt1.c0) AND (v0.c0))) AND ((v0.c0 IN ())))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt1, v0 GROUP BY v0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING CAST(TOTAL(COUNT(*)) AS TEXT) UNION ALL SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING (NOT (CAST(TOTAL(COUNT(*)) AS TEXT))) UNION ALL SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING ((CAST(TOTAL(COUNT(*)) AS TEXT)) ISNULL);
SELECT ALL v0.c0, rt1.c2, vt0.c0, rt1.c1 FROM rt1, v0, vt0;
SELECT ALL v0.c0, rt1.c2, vt0.c0, rt1.c1 FROM rt1, v0, vt0 WHERE ((((~ ('-1423949004'))) BETWEEN (((((rt1.c1)OR(v0.c0)))AND(rt1.c2))) AND (((rt1.c1)GLOB(rt1.c2))))) UNION ALL SELECT ALL v0.c0, rt1.c2, vt0.c0, rt1.c1 FROM rt1, v0, vt0 WHERE ((NOT ((((~ ('-1423949004'))) BETWEEN (((((rt1.c1)OR(v0.c0)))AND(rt1.c2))) AND (((rt1.c1)GLOB(rt1.c2))))))) UNION ALL SELECT v0.c0, rt1.c2, vt0.c0, rt1.c1 FROM rt1, v0, vt0 WHERE ((((((~ ('-1423949004'))) BETWEEN (((((rt1.c1)OR(v0.c0)))AND(rt1.c2))) AND (((rt1.c1)GLOB(rt1.c2))))) ISNULL));
SELECT ALL v0.c0, rt1.c2, vt0.c0, rt1.c1 FROM rt1, v0, vt0;
SELECT DISTINCT * FROM rt1, v0, vt1;
SELECT DISTINCT * FROM rt1, v0, vt1 WHERE (CASE 0X79605a56  WHEN 'O' THEN ((v0.c0) BETWEEN (v0.c0) AND (0.9294357801113411)) ELSE ((rt1.c1) NOT NULL) END) UNION SELECT DISTINCT * FROM rt1, v0, vt1 WHERE ((NOT (CASE 0X79605a56  WHEN 'O' THEN ((v0.c0) BETWEEN (v0.c0) AND (0.9294357801113411)) ELSE ((rt1.c1) NOT NULL) END))) UNION SELECT DISTINCT * FROM rt1, v0, vt1 WHERE (((CASE 0X79605a56  WHEN 'O' THEN ((v0.c0) BETWEEN (v0.c0) AND (0.9294357801113411)) ELSE ((rt1.c1) NOT NULL) END) ISNULL));
SELECT DISTINCT * FROM rt1, v0, vt1;
SELECT ALL rt1.c1, rt1.c0, vt1.c0, rt1.c2, vt0.c0 FROM vt1, vt0 LEFT OUTER JOIN rt1 ON CASE WHEN (((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2))) THEN (rt1.c0 IN ()) WHEN ((rt1.c0) NOT BETWEEN (rt1.c0) AND (vt1.c0)) THEN (~ (rt1.c0)) WHEN ((rt1.c1)/(vt1.c0)) THEN SQLITE_COMPILEOPTION_GET(rt1.c0) ELSE ((vt0.c0)%(vt1.c0)) END GROUP BY rt1.c1, rt1.c0, vt1.c0, rt1.c2, vt0.c0;
SELECT ALL rt1.c1, rt1.c0, vt1.c0, rt1.c2, vt0.c0 FROM vt1, vt0 LEFT OUTER JOIN rt1 ON CASE WHEN (((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2))) THEN (rt1.c0 IN ()) WHEN ((rt1.c0) NOT BETWEEN (rt1.c0) AND (vt1.c0)) THEN (~ (rt1.c0)) WHEN ((rt1.c1)/(vt1.c0)) THEN SQLITE_COMPILEOPTION_GET(rt1.c0) ELSE ((vt0.c0)%(vt1.c0)) END WHERE (COALESCE('' COLLATE RTRIM, NULLIF(DISTINCT vt1.c0, 0.21001398551260297), 0.7667666462538447, vt1.c0)) GROUP BY rt1.c1, rt1.c0, vt1.c0, rt1.c2, vt0.c0 UNION SELECT ALL rt1.c1, rt1.c0, vt1.c0, rt1.c2, vt0.c0 FROM vt1, vt0 LEFT OUTER JOIN rt1 ON CASE WHEN (((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2))) THEN (rt1.c0 IN ()) WHEN ((rt1.c0) NOT BETWEEN (rt1.c0) AND (vt1.c0)) THEN (~ (rt1.c0)) WHEN ((rt1.c1)/(vt1.c0)) THEN SQLITE_COMPILEOPTION_GET(rt1.c0) ELSE ((vt0.c0)%(vt1.c0)) END WHERE ((NOT (COALESCE('' COLLATE RTRIM, NULLIF(DISTINCT vt1.c0, 0.21001398551260297), 0.7667666462538447, vt1.c0)))) GROUP BY rt1.c1, rt1.c0, vt1.c0, rt1.c2, vt0.c0 UNION SELECT rt1.c1, rt1.c0, vt1.c0, rt1.c2, vt0.c0 FROM vt1, vt0 LEFT OUTER JOIN rt1 ON CASE WHEN (((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2))) THEN (rt1.c0 IN ()) WHEN ((rt1.c0) NOT BETWEEN (rt1.c0) AND (vt1.c0)) THEN (~ (rt1.c0)) WHEN ((rt1.c1)/(vt1.c0)) THEN SQLITE_COMPILEOPTION_GET(rt1.c0) ELSE ((vt0.c0)%(vt1.c0)) END WHERE (((COALESCE('' COLLATE RTRIM, NULLIF(DISTINCT vt1.c0, 0.21001398551260297), 0.7667666462538447, vt1.c0)) ISNULL)) GROUP BY rt1.c1, rt1.c0, vt1.c0, rt1.c2, vt0.c0;
SELECT ALL rt1.c1, rt1.c0, vt1.c0, rt1.c2, vt0.c0 FROM vt1, vt0 LEFT OUTER JOIN rt1 ON CASE WHEN (((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2))) THEN (rt1.c0 IN ()) WHEN ((rt1.c0) NOT BETWEEN (rt1.c0) AND (vt1.c0)) THEN (~ (rt1.c0)) WHEN ((rt1.c1)/(vt1.c0)) THEN SQLITE_COMPILEOPTION_GET(rt1.c0) ELSE ((vt0.c0)%(vt1.c0)) END GROUP BY rt1.c1, rt1.c0, vt1.c0, rt1.c2, vt0.c0;
SELECT vt0.c0, rt1.c2, rt1.c1 FROM v0, rt1, vt1, vt0 GROUP BY vt0.c0, rt1.c2, rt1.c1;
SELECT vt0.c0, rt1.c2, rt1.c1 FROM v0, rt1 NOT INDEXED, vt1, vt0 GROUP BY vt0.c0, rt1.c2, rt1.c1 HAVING COUNT(MAX(v0.c0)) UNION ALL SELECT ALL vt0.c0, rt1.c2, rt1.c1 FROM v0, rt1, vt1, vt0 GROUP BY vt0.c0, rt1.c2, rt1.c1 HAVING (NOT (COUNT(MAX(v0.c0)))) UNION ALL SELECT vt0.c0, rt1.c2, rt1.c1 FROM v0, rt1, vt1, vt0 GROUP BY vt0.c0, rt1.c2, rt1.c1 HAVING ((COUNT(MAX(v0.c0))) ISNULL);
SELECT ALL v0.c0, rt1.c0 FROM v0 CROSS JOIN rt1 ON (((((rt1.c0)|(rt1.c2))))<=((v0.c0 COLLATE RTRIM)));
SELECT v0.c0, rt1.c0 FROM v0 CROSS JOIN rt1 ON (((((rt1.c0)|(rt1.c2))))<=((v0.c0 COLLATE RTRIM))) WHERE (v0.c0 COLLATE NOCASE) UNION ALL SELECT ALL v0.c0, rt1.c0 FROM v0 CROSS JOIN rt1 ON (((((rt1.c0)|(rt1.c2))))<=((v0.c0 COLLATE RTRIM))) WHERE ((NOT (v0.c0 COLLATE NOCASE))) UNION ALL SELECT v0.c0, rt1.c0 FROM v0 CROSS JOIN rt1 ON (((((rt1.c0)|(rt1.c2))))<=((v0.c0 COLLATE RTRIM))) WHERE (((v0.c0 COLLATE NOCASE) ISNULL));
SELECT ALL v0.c0, rt1.c0 FROM v0 CROSS JOIN rt1 ON (((((rt1.c0)|(rt1.c2))))<=((v0.c0 COLLATE RTRIM)));
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((((((x'')LIKE(vt1.c0)))AND(((vt1.c0)|(vt1.c0)))))OR(CASE WHEN vt1.c0 THEN '946614646' ELSE vt1.c0 END))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((((((x'')LIKE(vt1.c0)))AND(((vt1.c0)|(vt1.c0)))))OR(CASE WHEN vt1.c0 THEN '946614646' ELSE vt1.c0 END))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((((((x'')LIKE(vt1.c0)))AND(((vt1.c0)|(vt1.c0)))))OR(CASE WHEN vt1.c0 THEN '946614646' ELSE vt1.c0 END))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (CAST(((vt1.c0)<=(vt1.c0)) AS NUMERIC)) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (CAST(((vt1.c0)<=(vt1.c0)) AS NUMERIC)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 NOT INDEXED WHERE (((CAST(((vt1.c0)<=(vt1.c0)) AS NUMERIC)) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1;
SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING GROUP_CONCAT(MAX(rt1.c2)) UNION ALL SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING (NOT (GROUP_CONCAT(MAX(rt1.c2)))) UNION ALL SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING ((GROUP_CONCAT(MAX(rt1.c2))) ISNULL);
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE ((~ (((NULL) NOTNULL)))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((~ (((NULL) NOTNULL)))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((((~ (((NULL) NOTNULL)))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT v0.c0, rt1.c1, vt1.c0, rt1.c2 FROM vt1, v0, rt1;
SELECT DISTINCT v0.c0, rt1.c1, vt1.c0, rt1.c2 FROM vt1, v0, rt1 WHERE ((CASE rt1.c0  WHEN 0.08887623502622444 THEN rt1.c2 ELSE rt1.c0 END IN (rt1.c1 COLLATE RTRIM, 1.508567288E9))) UNION SELECT DISTINCT v0.c0, rt1.c1, vt1.c0, rt1.c2 FROM vt1, v0, rt1 WHERE ((NOT ((CASE rt1.c0  WHEN 0.08887623502622444 THEN rt1.c2 ELSE rt1.c0 END IN (rt1.c1 COLLATE RTRIM, 1.508567288E9))))) UNION SELECT DISTINCT v0.c0, rt1.c1, vt1.c0, rt1.c2 FROM vt1, v0, rt1 WHERE ((((CASE rt1.c0  WHEN 0.08887623502622444 THEN rt1.c2 ELSE rt1.c0 END IN (rt1.c1 COLLATE RTRIM, 1.508567288E9))) ISNULL));
SELECT DISTINCT v0.c0, rt1.c1, vt1.c0, rt1.c2 FROM vt1, v0, rt1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (CAST(((vt0.c0)/(vt0.c0)) AS NUMERIC)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CAST(((vt0.c0)/(vt0.c0)) AS NUMERIC)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST(((vt0.c0)/(vt0.c0)) AS NUMERIC)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt1.c0 FROM v0 RIGHT OUTER JOIN vt1 ON LENGTH(vt1.c0 COLLATE BINARY) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM v0 RIGHT OUTER JOIN vt1 ON LENGTH(vt1.c0 COLLATE BINARY) GROUP BY vt1.c0 HAVING vt1.c0 UNION ALL SELECT vt1.c0 FROM v0 RIGHT OUTER JOIN vt1 ON LENGTH(vt1.c0 COLLATE BINARY) GROUP BY vt1.c0 HAVING (NOT (vt1.c0)) UNION ALL SELECT vt1.c0 FROM v0 RIGHT OUTER JOIN vt1 ON LENGTH(vt1.c0 COLLATE BINARY) GROUP BY vt1.c0 HAVING ((vt1.c0) ISNULL);
SELECT vt1.c0 FROM v0 RIGHT OUTER JOIN vt1 ON LENGTH(vt1.c0 COLLATE BINARY) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM v0 RIGHT OUTER JOIN vt1 ON LENGTH(vt1.c0 COLLATE BINARY) GROUP BY vt1.c0 HAVING vt1.c0 UNION ALL SELECT vt1.c0 FROM v0 RIGHT OUTER JOIN vt1 ON LENGTH(vt1.c0 COLLATE BINARY) GROUP BY vt1.c0 HAVING (NOT (vt1.c0)) UNION ALL SELECT vt1.c0 FROM v0 RIGHT OUTER JOIN vt1 ON LENGTH(vt1.c0 COLLATE BINARY) GROUP BY vt1.c0 HAVING ((vt1.c0) ISNULL);
SELECT vt1.c0 FROM v0 RIGHT OUTER JOIN vt1 ON LENGTH(vt1.c0 COLLATE BINARY) GROUP BY vt1.c0;
SELECT ALL * FROM vt0, vt1;
SELECT * FROM vt0, vt1 WHERE (((754903639) BETWEEN (x'cac2') AND (CAST(vt0.c0 AS REAL)))) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE ((NOT (((754903639) BETWEEN (x'cac2') AND (CAST(vt0.c0 AS REAL)))))) UNION ALL SELECT * FROM vt0, vt1 WHERE (((((754903639) BETWEEN (x'cac2') AND (CAST(vt0.c0 AS REAL)))) ISNULL));
SELECT ALL * FROM vt0, vt1;
SELECT DISTINCT v0.c0, vt1.c0 FROM vt0, vt1, v0;
SELECT DISTINCT v0.c0, vt1.c0 FROM vt0, vt1, v0 WHERE ((((vt1.c0)) NOT BETWEEN ((((vt1.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)))) AND ((SQLITE_COMPILEOPTION_USED(vt1.c0))))) UNION SELECT DISTINCT v0.c0, vt1.c0 FROM vt0, vt1, v0 WHERE ((NOT ((((vt1.c0)) NOT BETWEEN ((((vt1.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)))) AND ((SQLITE_COMPILEOPTION_USED(vt1.c0))))))) UNION SELECT DISTINCT v0.c0, vt1.c0 FROM vt0, vt1, v0 WHERE ((((((vt1.c0)) NOT BETWEEN ((((vt1.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)))) AND ((SQLITE_COMPILEOPTION_USED(vt1.c0))))) ISNULL));
SELECT DISTINCT v0.c0, vt1.c0 FROM vt0, vt1, v0;
SELECT rt1.c1, rt1.c0 FROM v0, rt1, vt1 GROUP BY rt1.c1, rt1.c0;
SELECT ALL rt1.c1, rt1.c0 FROM v0, rt1 NOT INDEXED, vt1 WHERE (((((v0.c0) IS TRUE)) IS FALSE)) GROUP BY rt1.c1, rt1.c0 UNION SELECT ALL rt1.c1, rt1.c0 FROM v0, rt1, vt1 WHERE ((NOT (((((v0.c0) IS TRUE)) IS FALSE)))) GROUP BY rt1.c1, rt1.c0 UNION SELECT ALL rt1.c1, rt1.c0 FROM v0, rt1, vt1 WHERE (((((((v0.c0) IS TRUE)) IS FALSE)) ISNULL)) GROUP BY rt1.c1, rt1.c0;
SELECT rt1.c1, rt1.c0 FROM v0, rt1, vt1 GROUP BY rt1.c1, rt1.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING TOTAL((((v0.c0)) BETWEEN ((NULL)) AND ((GROUP_CONCAT(COUNT(*)))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TOTAL((((v0.c0)) BETWEEN ((NULL)) AND ((GROUP_CONCAT(COUNT(*)))))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL((((v0.c0)) BETWEEN ((NULL)) AND ((GROUP_CONCAT(COUNT(*))))))) ISNULL);
SELECT ALL * FROM v0, rt1, vt1 LEFT OUTER JOIN vt0 ON CASE v0.c0  WHEN rt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN v0.c0 WHEN rt1.c1 THEN rt1.c0 END COLLATE RTRIM COLLATE RTRIM;
SELECT * FROM v0, rt1, vt1 LEFT OUTER JOIN vt0 ON CASE v0.c0  WHEN rt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN v0.c0 WHEN rt1.c1 THEN rt1.c0 END COLLATE RTRIM COLLATE RTRIM WHERE ((((rt1.c1, vt0.c0, vt1.c0)) BETWEEN ((vt0.c0 COLLATE RTRIM, vt0.c0, (+ (vt0.c0)))) AND (((rt1.c0 IN (v0.c0)), (NOT ('\n9')), ((vt0.c0)GLOB(vt1.c0)))))) UNION ALL SELECT ALL * FROM v0, rt1, vt1 LEFT OUTER JOIN vt0 ON CASE v0.c0  WHEN rt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN v0.c0 WHEN rt1.c1 THEN rt1.c0 END COLLATE RTRIM COLLATE RTRIM WHERE ((NOT ((((rt1.c1, vt0.c0, vt1.c0)) BETWEEN ((vt0.c0 COLLATE RTRIM, vt0.c0, (+ (vt0.c0)))) AND (((rt1.c0 IN (v0.c0)), (NOT ('\n9')), ((vt0.c0)GLOB(vt1.c0)))))))) UNION ALL SELECT * FROM v0, rt1, vt1 LEFT OUTER JOIN vt0 ON CASE v0.c0  WHEN rt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN v0.c0 WHEN rt1.c1 THEN rt1.c0 END COLLATE RTRIM COLLATE RTRIM WHERE ((((((rt1.c1, vt0.c0, vt1.c0)) BETWEEN ((vt0.c0 COLLATE RTRIM, vt0.c0, (+ (vt0.c0)))) AND (((rt1.c0 IN (v0.c0)), (NOT ('\n9')), ((vt0.c0)GLOB(vt1.c0)))))) ISNULL));
SELECT ALL * FROM v0, rt1, vt1 LEFT OUTER JOIN vt0 ON CASE v0.c0  WHEN rt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN v0.c0 WHEN rt1.c1 THEN rt1.c0 END COLLATE RTRIM COLLATE RTRIM;
SELECT DISTINCT * FROM vt0, v0, vt1, rt1;
SELECT DISTINCT * FROM vt0, v0, vt1, rt1 WHERE (((((rt1.c0) NOT BETWEEN (rt1.c2) AND (vt0.c0))) NOT NULL)) UNION SELECT DISTINCT * FROM vt0, v0, vt1, rt1 WHERE ((NOT (((((rt1.c0) NOT BETWEEN (rt1.c2) AND (vt0.c0))) NOT NULL)))) UNION SELECT DISTINCT * FROM vt0, v0, vt1, rt1 WHERE (((((((rt1.c0) NOT BETWEEN (rt1.c2) AND (vt0.c0))) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM vt0, v0, vt1, rt1;
SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE (((rt1.c1)<(rt1.c0)) COLLATE BINARY COLLATE BINARY) GROUP BY rt1.c2, rt1.c1, rt1.c0 UNION SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE ((NOT (((rt1.c1)<(rt1.c0)) COLLATE BINARY COLLATE BINARY))) GROUP BY rt1.c2, rt1.c1, rt1.c0 UNION SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE (((((rt1.c1)<(rt1.c0)) COLLATE BINARY COLLATE BINARY) ISNULL)) GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT rt1.c1, v0.c0, rt1.c0 FROM vt1, v0, vt0, rt1 GROUP BY rt1.c1, v0.c0, rt1.c0;
SELECT ALL rt1.c1, v0.c0, rt1.c0 FROM vt1, v0, vt0, rt1 GROUP BY rt1.c1, v0.c0, rt1.c0 HAVING CASE WHEN SUM(vt1.c0) THEN LOWER(SUM(AVG(0x7b047afd))) ELSE GROUP_CONCAT(MAX(vt1.c0)) END UNION ALL SELECT rt1.c1, v0.c0, rt1.c0 FROM vt1, v0, vt0, rt1 GROUP BY rt1.c1, v0.c0, rt1.c0 HAVING (NOT (CASE WHEN SUM(vt1.c0) THEN LOWER(SUM(AVG(0x7b047afd))) ELSE GROUP_CONCAT(MAX(vt1.c0)) END)) UNION ALL SELECT ALL rt1.c1, v0.c0, rt1.c0 FROM vt1, v0, vt0, rt1 GROUP BY rt1.c1, v0.c0, rt1.c0 HAVING ((CASE WHEN SUM(vt1.c0) THEN LOWER(SUM(AVG(0X7b047afd))) ELSE GROUP_CONCAT(MAX(vt1.c0)) END) ISNULL);
SELECT ALL rt1.c2, vt1.c0 FROM vt1, v0 CROSS JOIN vt0 ON ((((((((((((CAST(rt1.c2 AS REAL))OR((v0.c0 IN (rt1.c1)))))OR(((v0.c0)!=(rt1.c2)))))AND(((v0.c0) BETWEEN (rt1.c2) AND (rt1.c0)))))OR(((vt1.c0)+(v0.c0)))))OR(((((x'')OR(rt1.c1)))AND(rt1.c1)))))AND(CASE rt1.c2  WHEN rt1.c0 THEN 'zX0햶(soq' END)) FULL OUTER JOIN rt1 ON (((vt0.c0)) BETWEEN ((CASE WHEN 0.5031083832843738 THEN vt1.c0 END)) AND ((x'13fe')));
SELECT DISTINCT rt1.c0 FROM vt1, rt1 INNER JOIN v0 ON ((rt1.c2)<(CAST(vt0.c0 AS TEXT))) RIGHT OUTER JOIN vt0 ON ((v0.c0)<=(rt1.c1)) COLLATE BINARY;
SELECT vt0.c0, v0.c0, rt1.c1, rt1.c2, vt1.c0, rt1.c0 FROM rt1, v0, vt1, vt0 GROUP BY vt0.c0, v0.c0, rt1.c1, rt1.c2, vt1.c0, rt1.c0;
SELECT vt0.c0, v0.c0, rt1.c1, rt1.c2, vt1.c0, rt1.c0 FROM rt1, v0, vt1, vt0 WHERE ((rt1.c1 IN (vt0.c0 COLLATE RTRIM))) GROUP BY vt0.c0, v0.c0, rt1.c1, rt1.c2, vt1.c0, rt1.c0 UNION SELECT ALL vt0.c0, v0.c0, rt1.c1, rt1.c2, vt1.c0, rt1.c0 FROM rt1, v0, vt1, vt0 WHERE ((NOT ((rt1.c1 IN (vt0.c0 COLLATE RTRIM))))) GROUP BY vt0.c0, v0.c0, rt1.c1, rt1.c2, vt1.c0, rt1.c0 UNION SELECT vt0.c0, v0.c0, rt1.c1, rt1.c2, vt1.c0, rt1.c0 FROM rt1, v0, vt1, vt0 WHERE ((((rt1.c1 IN (vt0.c0 COLLATE RTRIM))) ISNULL)) GROUP BY vt0.c0, v0.c0, rt1.c1, rt1.c2, vt1.c0, rt1.c0;
SELECT vt0.c0, v0.c0, rt1.c1, rt1.c2, vt1.c0, rt1.c0 FROM rt1, v0, vt1, vt0 GROUP BY vt0.c0, v0.c0, rt1.c1, rt1.c2, vt1.c0, rt1.c0;
SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING 0.029098659130202376 UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING (NOT (0.029098659130202376)) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING ((0.029098659130202376) ISNULL);
SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING 0.029098659130202376 UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING (NOT (0.029098659130202376)) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING ((0.029098659130202376) ISNULL);
SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT ALL v0.c0, rt1.c0 FROM rt1, v0 NOT INDEXED, vt0, vt1;
SELECT ALL v0.c0, rt1.c0 FROM rt1, v0, vt0, vt1 WHERE ((((0.2961509397780119) ISNULL) IN ())) UNION ALL SELECT ALL v0.c0, rt1.c0 FROM rt1, v0, vt0, vt1 WHERE ((NOT ((((0.2961509397780119) ISNULL) IN ())))) UNION ALL SELECT ALL v0.c0, rt1.c0 FROM rt1, v0, vt0, vt1 WHERE ((((((0.2961509397780119) ISNULL) IN ())) ISNULL));
SELECT ALL v0.c0, rt1.c0 FROM rt1, v0 NOT INDEXED, vt0, vt1;
SELECT DISTINCT rt1.c0, rt1.c1, vt1.c0, v0.c0, rt1.c2 FROM vt0 INNER JOIN v0 ON ((((((vt0.c0)OR(NULL)))AND(rt1.c0)))<=(v0.c0 COLLATE NOCASE)) LEFT OUTER JOIN rt1 ON ((rt1.c0) NOT BETWEEN (-533707508) AND (rt1.c2)) COLLATE NOCASE FULL OUTER JOIN vt1 ON (((((((vt1.c0)AND(rt1.c1)))AND(rt1.c0)), (NOT (rt1.c2)), ((rt1.c2)%(vt0.c0))))==((((((NULL)OR(rt1.c0)))OR(x'')), ((NULL) IS FALSE), ((rt1.c1) IS TRUE))));
SELECT rt1.c0, rt1.c2, vt1.c0 FROM v0, vt1, rt1 GROUP BY rt1.c0, rt1.c2, vt1.c0;
SELECT rt1.c0, rt1.c2, vt1.c0 FROM v0, vt1, rt1 WHERE ((1.52281414E9 IN ())) GROUP BY rt1.c0, rt1.c2, vt1.c0 UNION SELECT ALL rt1.c0, rt1.c2, vt1.c0 FROM v0, vt1, rt1 WHERE ((NOT ((1.52281414E9 IN ())))) GROUP BY rt1.c0, rt1.c2, vt1.c0 UNION SELECT rt1.c0, rt1.c2, vt1.c0 FROM v0, vt1, rt1 WHERE ((((1.52281414E9 IN ())) ISNULL)) GROUP BY rt1.c0, rt1.c2, vt1.c0;
SELECT rt1.c0, rt1.c2, vt1.c0 FROM v0, vt1, rt1 GROUP BY rt1.c0, rt1.c2, vt1.c0;
SELECT ALL rt1.c1, rt1.c0 FROM vt1, vt0, rt1 GROUP BY rt1.c1, rt1.c0;
SELECT rt1.c1, rt1.c0 FROM vt1, vt0, rt1 GROUP BY rt1.c1, rt1.c0 HAVING CASE ((rt1.c1)IS NOT(vt0.c0))  WHEN rt1.c0 THEN COUNT(*) ELSE rt1.c1 COLLATE BINARY END UNION ALL SELECT ALL rt1.c1, rt1.c0 FROM vt1, vt0, rt1 GROUP BY rt1.c1, rt1.c0 HAVING (NOT (CASE ((rt1.c1)IS NOT(vt0.c0))  WHEN rt1.c0 THEN COUNT(*) ELSE rt1.c1 COLLATE BINARY END)) UNION ALL SELECT rt1.c1, rt1.c0 FROM vt1, vt0, rt1 GROUP BY rt1.c1, rt1.c0 HAVING ((CASE ((rt1.c1)IS NOT(vt0.c0))  WHEN rt1.c0 THEN COUNT(*) ELSE rt1.c1 COLLATE BINARY END) ISNULL);
SELECT ALL rt1.c1, rt1.c0 FROM vt1, vt0, rt1 GROUP BY rt1.c1, rt1.c0;
SELECT rt1.c1, rt1.c0 FROM vt1, vt0, rt1 GROUP BY rt1.c1, rt1.c0 HAVING CASE ((rt1.c1)IS NOT(vt0.c0))  WHEN rt1.c0 THEN COUNT(*) ELSE rt1.c1 COLLATE BINARY END UNION ALL SELECT ALL rt1.c1, rt1.c0 FROM vt1, vt0, rt1 GROUP BY rt1.c1, rt1.c0 HAVING (NOT (CASE ((rt1.c1)IS NOT(vt0.c0))  WHEN rt1.c0 THEN COUNT(*) ELSE rt1.c1 COLLATE BINARY END)) UNION ALL SELECT rt1.c1, rt1.c0 FROM vt1, vt0, rt1 GROUP BY rt1.c1, rt1.c0 HAVING ((CASE ((rt1.c1)IS NOT(vt0.c0))  WHEN rt1.c0 THEN COUNT(*) ELSE rt1.c1 COLLATE BINARY END) ISNULL);
SELECT ALL rt1.c1, rt1.c0 FROM vt1, vt0, rt1 GROUP BY rt1.c1, rt1.c0;
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE (vt1.c0) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (vt1.c0))) UNION ALL SELECT ALL * FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT rt1.c0, rt1.c2, v0.c0 FROM rt1, v0;
SELECT DISTINCT rt1.c0, rt1.c2, v0.c0 FROM rt1, v0 WHERE (((rt1.c2 COLLATE RTRIM) BETWEEN (MIN(x'', rt1.c1, rt1.c1, rt1.c1)) AND (((v0.c0) NOTNULL)))) UNION SELECT DISTINCT rt1.c0, rt1.c2, v0.c0 FROM rt1, v0 WHERE ((NOT (((rt1.c2 COLLATE RTRIM) BETWEEN (MIN(x'', rt1.c1, rt1.c1, rt1.c1)) AND (((v0.c0) NOTNULL)))))) UNION SELECT DISTINCT rt1.c0, rt1.c2, v0.c0 FROM rt1, v0 WHERE (((((rt1.c2 COLLATE RTRIM) BETWEEN (MIN(x'', rt1.c1, rt1.c1, rt1.c1)) AND (((v0.c0) NOTNULL)))) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c2, v0.c0 FROM rt1, v0;
SELECT ALL vt1.c0, vt0.c0 FROM v0, vt0, vt1, rt1 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM v0, vt0, vt1, rt1 WHERE ((((0x2733ec0d, v0.c0, v0.c0)) NOT BETWEEN ((CASE rt1.c1  WHEN vt1.c0 THEN NULL ELSE x'a9da' END, (((vt0.c0))>=((rt1.c1))), ((v0.c0)IS(v0.c0)))) AND ((((vt0.c0) NOT NULL), ((vt0.c0) NOT BETWEEN (rt1.c1) AND (v0.c0)), ((vt0.c0)<=(vt1.c0)))))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM v0, vt0, vt1, rt1 WHERE ((NOT ((((0x2733ec0d, v0.c0, v0.c0)) NOT BETWEEN ((CASE rt1.c1  WHEN vt1.c0 THEN NULL ELSE x'a9da' END, (((vt0.c0))>=((rt1.c1))), ((v0.c0)IS(v0.c0)))) AND ((((vt0.c0) NOT NULL), ((vt0.c0) NOT BETWEEN (rt1.c1) AND (v0.c0)), ((vt0.c0)<=(vt1.c0)))))))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM v0, vt0, vt1, rt1 WHERE ((((((0x2733ec0d, v0.c0, v0.c0)) NOT BETWEEN ((CASE rt1.c1  WHEN vt1.c0 THEN NULL ELSE x'a9da' END, (((vt0.c0))>=((rt1.c1))), ((v0.c0)IS(v0.c0)))) AND ((((vt0.c0) NOT NULL), ((vt0.c0) NOT BETWEEN (rt1.c1) AND (v0.c0)), ((vt0.c0)<=(vt1.c0)))))) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM v0, vt0, vt1, rt1 GROUP BY vt1.c0, vt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((SUM(MIN(COUNT(v0.c0)))) NOTNULL) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((SUM(MIN(COUNT(v0.c0)))) NOTNULL))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((SUM(MIN(COUNT(v0.c0)))) NOTNULL)) ISNULL);
SELECT * FROM vt0, v0;
SELECT ALL * FROM vt0, v0 WHERE (NULL) UNION ALL SELECT * FROM vt0, v0 WHERE ((NOT (NULL))) UNION ALL SELECT ALL * FROM vt0, v0 WHERE (((NULL) ISNULL));
SELECT * FROM vt0, v0;
SELECT DISTINCT * FROM rt1, vt1, v0, vt0;
SELECT DISTINCT * FROM rt1, vt1, v0, vt0 WHERE (((QUOTE(rt1.c1))AND((- (vt0.c0))))) UNION SELECT DISTINCT * FROM rt1, vt1, v0, vt0 WHERE ((NOT (((QUOTE(rt1.c1))AND((- (vt0.c0))))))) UNION SELECT DISTINCT * FROM rt1, vt1, v0, vt0 WHERE (((((QUOTE(rt1.c1))AND((- (vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt1, vt1, v0, vt0;
SELECT rt1.c0, vt0.c0, rt1.c1 FROM rt1 INNER JOIN vt0 ON LIKE(CAST(rt1.c0 AS BLOB), ((vt0.c0)=(rt1.c1)), 'd') GROUP BY rt1.c0, vt0.c0, rt1.c1;
SELECT rt1.c0, vt0.c0, rt1.c1 FROM rt1 INNER JOIN vt0 ON LIKE(CAST(rt1.c0 AS BLOB), ((vt0.c0)==(rt1.c1)), 'd') WHERE (((rt1.c2)<=(json_object(' &-bv', rt1.c0)))) GROUP BY rt1.c0, vt0.c0, rt1.c1 UNION SELECT ALL rt1.c0, vt0.c0, rt1.c1 FROM rt1 INNER JOIN vt0 ON LIKE(CAST(rt1.c0 AS BLOB), ((vt0.c0)=(rt1.c1)), 'd') WHERE ((NOT (((rt1.c2)<=(json_object(' &-bv', rt1.c0)))))) GROUP BY rt1.c0, vt0.c0, rt1.c1 UNION SELECT rt1.c0, vt0.c0, rt1.c1 FROM rt1 INNER JOIN vt0 ON LIKE(CAST(rt1.c0 AS BLOB), ((vt0.c0)==(rt1.c1)), 'd') WHERE (((((rt1.c2)<=(json_object(' &-bv', rt1.c0)))) ISNULL)) GROUP BY rt1.c0, vt0.c0, rt1.c1;
SELECT rt1.c0, vt0.c0, rt1.c1 FROM rt1 INNER JOIN vt0 ON LIKE(CAST(rt1.c0 AS BLOB), ((vt0.c0)=(rt1.c1)), 'd') GROUP BY rt1.c0, vt0.c0, rt1.c1;
SELECT v0.c0, rt1.c2, rt1.c0, vt1.c0, rt1.c1 FROM v0, rt1 FULL OUTER JOIN vt1 ON CAST(rt1.c2 AS TEXT) GROUP BY v0.c0, rt1.c2, rt1.c0, vt1.c0, rt1.c1;
SELECT ALL v0.c0, rt1.c2, rt1.c0, vt1.c0, rt1.c1 FROM v0, rt1 FULL OUTER JOIN vt1 ON CAST(rt1.c2 AS TEXT) GROUP BY v0.c0, rt1.c2, rt1.c0, vt1.c0, rt1.c1 HAVING ((LIKELIHOOD(vt1.c0, 0.577665768084407)) IS TRUE) UNION ALL SELECT ALL v0.c0, rt1.c2, rt1.c0, vt1.c0, rt1.c1 FROM v0 NOT INDEXED, rt1 FULL OUTER JOIN vt1 ON CAST(rt1.c2 AS TEXT) GROUP BY v0.c0, rt1.c2, rt1.c0, vt1.c0, rt1.c1 HAVING (NOT (((LIKELIHOOD(vt1.c0, 0.577665768084407)) IS TRUE))) UNION ALL SELECT ALL v0.c0, rt1.c2, rt1.c0, vt1.c0, rt1.c1 FROM v0, rt1 FULL OUTER JOIN vt1 ON CAST(rt1.c2 AS TEXT) GROUP BY v0.c0, rt1.c2, rt1.c0, vt1.c0, rt1.c1 HAVING ((((LIKELIHOOD(vt1.c0, 0.577665768084407)) IS TRUE)) ISNULL);
SELECT v0.c0, rt1.c2, rt1.c0, vt1.c0, rt1.c1 FROM v0, rt1 FULL OUTER JOIN vt1 ON CAST(rt1.c2 AS TEXT) GROUP BY v0.c0, rt1.c2, rt1.c0, vt1.c0, rt1.c1;
SELECT ALL v0.c0, rt1.c2, rt1.c0, vt1.c0, rt1.c1 FROM v0, rt1 FULL OUTER JOIN vt1 ON CAST(rt1.c2 AS TEXT) GROUP BY v0.c0, rt1.c2, rt1.c0, vt1.c0, rt1.c1 HAVING ((LIKELIHOOD(vt1.c0, 0.577665768084407)) IS TRUE) UNION ALL SELECT ALL v0.c0, rt1.c2, rt1.c0, vt1.c0, rt1.c1 FROM v0 NOT INDEXED, rt1 FULL OUTER JOIN vt1 ON CAST(rt1.c2 AS TEXT) GROUP BY v0.c0, rt1.c2, rt1.c0, vt1.c0, rt1.c1 HAVING (NOT (((LIKELIHOOD(vt1.c0, 0.577665768084407)) IS TRUE))) UNION ALL SELECT ALL v0.c0, rt1.c2, rt1.c0, vt1.c0, rt1.c1 FROM v0, rt1 FULL OUTER JOIN vt1 ON CAST(rt1.c2 AS TEXT) GROUP BY v0.c0, rt1.c2, rt1.c0, vt1.c0, rt1.c1 HAVING ((((LIKELIHOOD(vt1.c0, 0.577665768084407)) IS TRUE)) ISNULL);
SELECT v0.c0, rt1.c2, rt1.c0, vt1.c0, rt1.c1 FROM v0, rt1 FULL OUTER JOIN vt1 ON CAST(rt1.c2 AS TEXT) GROUP BY v0.c0, rt1.c2, rt1.c0, vt1.c0, rt1.c1;
SELECT rt1.c2, rt1.c0 FROM vt1, rt1, v0;
SELECT rt1.c2, rt1.c0 FROM vt1, rt1, v0 WHERE (((HEX(DISTINCT vt1.c0))>=(TRIM(rt1.c1)))) UNION ALL SELECT rt1.c2, rt1.c0 FROM vt1, rt1, v0 WHERE ((NOT (((HEX(DISTINCT vt1.c0))>=(TRIM(rt1.c1)))))) UNION ALL SELECT rt1.c2, rt1.c0 FROM vt1, rt1, v0 WHERE (((((HEX(DISTINCT vt1.c0))>=(TRIM(rt1.c1)))) ISNULL));
SELECT rt1.c2, rt1.c0 FROM vt1, rt1, v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((v0.c0) BETWEEN (v0.c0) AND (5.3044978E8)) COLLATE BINARY) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((v0.c0) BETWEEN (v0.c0) AND (5.3044978E8)) COLLATE BINARY))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (5.3044978E8)) COLLATE BINARY) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL vt0.c0, rt1.c0 FROM v0, vt0 LEFT OUTER JOIN rt1 ON v0.c0 FULL OUTER JOIN vt1 ON (((~ (x''))) NOT NULL) GROUP BY vt0.c0, rt1.c0;
SELECT vt0.c0, rt1.c0 FROM v0, vt0 LEFT OUTER JOIN rt1 ON v0.c0 FULL OUTER JOIN vt1 ON (((~ (x''))) NOT NULL) WHERE ((((CAST(rt1.c1 AS TEXT)))<>((CAST(vt1.c0 AS NUMERIC))))) GROUP BY vt0.c0, rt1.c0 UNION SELECT ALL vt0.c0, rt1.c0 FROM v0, vt0 LEFT OUTER JOIN rt1 ON v0.c0 FULL OUTER JOIN vt1 ON (((~ (x''))) NOT NULL) WHERE ((NOT ((((CAST(rt1.c1 AS TEXT)))!=((CAST(vt1.c0 AS NUMERIC))))))) GROUP BY vt0.c0, rt1.c0 UNION SELECT ALL vt0.c0, rt1.c0 FROM v0, vt0 LEFT OUTER JOIN rt1 ON v0.c0 FULL OUTER JOIN vt1 ON (((~ (x''))) NOT NULL) WHERE ((((((CAST(rt1.c1 AS TEXT)))<>((CAST(vt1.c0 AS NUMERIC))))) ISNULL)) GROUP BY vt0.c0, rt1.c0;
SELECT ALL vt0.c0, rt1.c0 FROM v0, vt0 LEFT OUTER JOIN rt1 ON v0.c0 FULL OUTER JOIN vt1 ON (((~ (x''))) NOT NULL) GROUP BY vt0.c0, rt1.c0;
SELECT rt1.c0, vt0.c0, rt1.c2, rt1.c1 FROM vt0 LEFT OUTER JOIN vt1 ON CASE ((rt1.c2) ISNULL)  WHEN '1103557866' THEN vt0.c0 COLLATE RTRIM ELSE (((rt1.c0, vt1.c0, rt1.c1, rt1.c0, rt1.c1)) BETWEEN ((rt1.c1, rt1.c0, vt0.c0, rt1.c0, vt1.c0)) AND ((vt1.c0, rt1.c1, vt1.c0, rt1.c2, rt1.c0))) END INNER JOIN rt1 ON ((CAST(x'' AS NUMERIC))+(CAST(rt1.c0 AS TEXT))) GROUP BY rt1.c0, vt0.c0, rt1.c2, rt1.c1;
SELECT ALL * FROM rt1;
SELECT * FROM rt1 WHERE (((CASE WHEN '1265596459' THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 END)+(((NULL)<<(rt1.c0))))) UNION ALL SELECT ALL * FROM rt1 NOT INDEXED WHERE ((NOT (((CASE WHEN '1265596459' THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 END)+(((NULL)<<(rt1.c0))))))) UNION ALL SELECT ALL * FROM rt1 WHERE (((((CASE WHEN '1265596459' THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 END)+(((NULL)<<(rt1.c0))))) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (TOTAL_CHANGES()) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (TOTAL_CHANGES()))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((TOTAL_CHANGES()) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (v0.c0) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (v0.c0))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((v0.c0) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING (((vt0.c0, v0.c0, AVG(v0.c0))) NOT BETWEEN ((TYPEOF(v0.c0), COUNT(v0.c0), ((((SUM(vt0.c0))AND(MAX(MAX(v0.c0)))))OR(MAX(v0.c0))))) AND ((SUM(MAX(v0.c0)), CAST(vt0.c0 AS NUMERIC), ((COUNT(*)) IS TRUE)))) UNION ALL SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING (NOT ((((vt0.c0, v0.c0, AVG(v0.c0))) NOT BETWEEN ((TYPEOF(v0.c0), COUNT(v0.c0), ((((SUM(vt0.c0))AND(MAX(MAX(v0.c0)))))OR(MAX(v0.c0))))) AND ((SUM(MAX(v0.c0)), CAST(vt0.c0 AS NUMERIC), ((COUNT(*)) IS TRUE)))))) UNION ALL SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING (((((vt0.c0, v0.c0, AVG(v0.c0))) NOT BETWEEN ((TYPEOF(v0.c0), COUNT(v0.c0), ((((SUM(vt0.c0))AND(MAX(MAX(v0.c0)))))OR(MAX(v0.c0))))) AND ((SUM(MAX(v0.c0)), CAST(vt0.c0 AS NUMERIC), ((COUNT(*)) IS TRUE))))) ISNULL);
SELECT * FROM vt0, rt1, vt1;
SELECT * FROM vt0, rt1, vt1 WHERE ((((((((((rt1.c2 IN ()))OR((('54064101')>>(vt0.c0)))))AND(rt1.c1 COLLATE RTRIM)))OR(rt1.c2)))AND(((((vt0.c0)OR(rt1.c0)))OR(vt1.c0))))) UNION ALL SELECT * FROM vt0, rt1, vt1 WHERE ((NOT ((((((((((rt1.c2 IN ()))OR((('54064101')>>(vt0.c0)))))AND(rt1.c1 COLLATE RTRIM)))OR(rt1.c2)))AND(((((vt0.c0)OR(rt1.c0)))OR(vt1.c0))))))) UNION ALL SELECT * FROM vt0, rt1, vt1 WHERE ((((((((((((rt1.c2 IN ()))OR((('54064101')>>(vt0.c0)))))AND(rt1.c1 COLLATE RTRIM)))OR(rt1.c2)))AND(((((vt0.c0)OR(rt1.c0)))OR(vt1.c0))))) ISNULL));
SELECT * FROM vt0, rt1, vt1;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (x'') UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (x''))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((x'') ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((UNLIKELY(DISTINCT vt0.c0)))<(((vt0.c0 IN (vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((UNLIKELY(DISTINCT vt0.c0)))<(((vt0.c0 IN (vt0.c0)))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((UNLIKELY(DISTINCT vt0.c0)))<(((vt0.c0 IN (vt0.c0)))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt1.c2 FROM v0, vt0, rt1, vt1 GROUP BY rt1.c2;
SELECT rt1.c2 FROM v0, vt0, rt1, vt1 GROUP BY rt1.c2 HAVING vt1.c0 UNION ALL SELECT ALL rt1.c2 FROM v0, vt0, rt1, vt1 GROUP BY rt1.c2 HAVING (NOT (vt1.c0)) UNION ALL SELECT rt1.c2 FROM v0, vt0, rt1, vt1 GROUP BY rt1.c2 HAVING ((vt1.c0) ISNULL);
SELECT ALL rt1.c2 FROM v0, vt0, rt1, vt1 GROUP BY rt1.c2;
SELECT rt1.c2 FROM v0, vt0, rt1, vt1 GROUP BY rt1.c2 HAVING vt1.c0 UNION ALL SELECT ALL rt1.c2 FROM v0, vt0, rt1, vt1 GROUP BY rt1.c2 HAVING (NOT (vt1.c0)) UNION ALL SELECT rt1.c2 FROM v0, vt0, rt1, vt1 GROUP BY rt1.c2 HAVING ((vt1.c0) ISNULL);
SELECT ALL rt1.c2 FROM v0, vt0, rt1, vt1 GROUP BY rt1.c2;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0))<=((vt0.c0))))!=(0X7c6685b8))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((((((vt0.c0))<=((vt0.c0))))<>(0X7c6685b8))))) UNION ALL SELECT * FROM vt0 WHERE ((((((((vt0.c0))<=((vt0.c0))))<>(0X7c6685b8))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (CASE WHEN 0xffffffff80686dec THEN ((rt1.c2)/('{Z')) ELSE CAST('-1968080672' AS TEXT) END) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (CASE WHEN 0Xffffffff80686dec THEN ((rt1.c2)/('{Z')) ELSE CAST('-1968080672' AS TEXT) END))) UNION SELECT DISTINCT * FROM rt1 WHERE (((CASE WHEN 0Xffffffff80686dec THEN ((rt1.c2)/('{Z')) ELSE CAST('-1968080672' AS TEXT) END) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT rt1.c2 FROM vt1, rt1 GROUP BY rt1.c2;
SELECT rt1.c2 FROM vt1, rt1 WHERE ((((rt1.c0)) NOT BETWEEN ((json_type(rt1.c1))) AND ((((((rt1.c1)OR(rt1.c0)))AND(vt1.c0)))))) GROUP BY rt1.c2 UNION SELECT ALL rt1.c2 FROM vt1, rt1 WHERE ((NOT ((((rt1.c0)) NOT BETWEEN ((json_type(rt1.c1))) AND ((((((rt1.c1)OR(rt1.c0)))AND(vt1.c0)))))))) GROUP BY rt1.c2 UNION SELECT ALL rt1.c2 FROM vt1, rt1 WHERE ((((((rt1.c0)) NOT BETWEEN ((json_type(rt1.c1))) AND ((((((rt1.c1)OR(rt1.c0)))AND(vt1.c0)))))) ISNULL)) GROUP BY rt1.c2;
SELECT rt1.c2 FROM vt1, rt1 GROUP BY rt1.c2;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((GROUP_CONCAT(v0.c0)) NOTNULL) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((GROUP_CONCAT(v0.c0)) NOTNULL))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((GROUP_CONCAT(v0.c0)) NOTNULL)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((GROUP_CONCAT(v0.c0)) NOTNULL) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((GROUP_CONCAT(v0.c0)) NOTNULL))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((GROUP_CONCAT(v0.c0)) NOTNULL)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt1, v0, rt1, vt0;
SELECT v0.c0, vt0.c0 FROM vt1, v0, rt1, vt0 WHERE (LTRIM(TRIM(rt1.c1), ((v0.c0) IS TRUE))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt1, v0, rt1, vt0 WHERE ((NOT (LTRIM(TRIM(rt1.c1), ((v0.c0) IS TRUE))))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt1, v0, rt1, vt0 WHERE (((LTRIM(TRIM(rt1.c1), ((v0.c0) IS TRUE))) ISNULL));
SELECT ALL v0.c0, vt0.c0 FROM vt1, v0, rt1, vt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((v0.c0)+(((v0.c0) NOTNULL)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((v0.c0)+(((v0.c0) NOTNULL)))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((v0.c0)+(((v0.c0) NOTNULL)))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((- (v0.c0))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((- (v0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((- (v0.c0))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING GLOB('1816187558', COUNT(MIN(rt1.c0))) UNION ALL SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING (NOT (GLOB('1816187558', COUNT(MIN(rt1.c0))))) UNION ALL SELECT rt1.c1 FROM rt1 NOT INDEXED GROUP BY rt1.c1 HAVING ((GLOB('1816187558', COUNT(MIN(rt1.c0)))) ISNULL);
SELECT * FROM v0, vt1, vt0, rt1;
SELECT ALL * FROM v0, vt1, vt0, rt1 WHERE (((((vt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)))=(((((((((v0.c0)OR(v0.c0)))AND(rt1.c0)))OR(rt1.c0)))OR(rt1.c2))))) UNION ALL SELECT ALL * FROM v0, vt1, vt0, rt1 WHERE ((NOT (((((vt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)))=(((((((((v0.c0)OR(v0.c0)))AND(rt1.c0)))OR(rt1.c0)))OR(rt1.c2))))))) UNION ALL SELECT ALL * FROM v0, vt1, vt0, rt1 WHERE (((((((vt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)))=(((((((((v0.c0)OR(v0.c0)))AND(rt1.c0)))OR(rt1.c0)))OR(rt1.c2))))) ISNULL));
SELECT * FROM v0, vt1, vt0, rt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (CAST(((vt1.c0)GLOB(x'5dd2')) AS NUMERIC)) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (CAST(((vt1.c0)GLOB(x'5dd2')) AS NUMERIC)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((CAST(((vt1.c0)GLOB(x'5dd2')) AS NUMERIC)) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL v0.c0, vt1.c0, vt0.c0 FROM vt1, v0, vt0 GROUP BY v0.c0, vt1.c0, vt0.c0;
SELECT ALL v0.c0, vt1.c0, vt0.c0 FROM vt1, v0, vt0 WHERE (CAST(((vt0.c0)%(vt0.c0)) AS TEXT)) GROUP BY v0.c0, vt1.c0, vt0.c0 UNION SELECT v0.c0, vt1.c0, vt0.c0 FROM vt1, v0, vt0 WHERE ((NOT (CAST(((vt0.c0)%(vt0.c0)) AS TEXT)))) GROUP BY v0.c0, vt1.c0, vt0.c0 UNION SELECT ALL v0.c0, vt1.c0, vt0.c0 FROM vt1, v0, vt0 WHERE (((CAST(((vt0.c0)%(vt0.c0)) AS TEXT)) ISNULL)) GROUP BY v0.c0, vt1.c0, vt0.c0;
SELECT ALL v0.c0, vt1.c0, vt0.c0 FROM vt1, v0, vt0 GROUP BY v0.c0, vt1.c0, vt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (COUNT(v0.c0) IN ((~ (GROUP_CONCAT(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((COUNT(v0.c0) IN ((~ (GROUP_CONCAT(v0.c0))))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((COUNT(v0.c0) IN ((~ (GROUP_CONCAT(v0.c0)))))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (COUNT(v0.c0) IN ((~ (GROUP_CONCAT(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((COUNT(v0.c0) IN ((~ (GROUP_CONCAT(v0.c0))))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((COUNT(v0.c0) IN ((~ (GROUP_CONCAT(v0.c0)))))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt1.c0, vt1.c0 FROM rt1, v0, vt1, vt0 NOT INDEXED;
SELECT ALL rt1.c0, vt1.c0 FROM rt1, v0, vt1, vt0 WHERE ((('-692695487')GLOB(rt1.c0))) UNION ALL SELECT rt1.c0, vt1.c0 FROM rt1, v0, vt1, vt0 WHERE ((NOT ((('-692695487')GLOB(rt1.c0))))) UNION ALL SELECT ALL rt1.c0, vt1.c0 FROM rt1, v0, vt1, vt0 WHERE ((((('-692695487')GLOB(rt1.c0))) ISNULL));
SELECT rt1.c0, vt1.c0 FROM rt1, v0, vt1, vt0 NOT INDEXED;
SELECT DISTINCT v0.c0 FROM v0, vt0, vt1;
SELECT DISTINCT v0.c0 FROM v0, vt0, vt1 WHERE (((((NULL) NOT BETWEEN (vt0.c0) AND (x''))) NOTNULL)) UNION SELECT DISTINCT v0.c0 FROM v0, vt0, vt1 WHERE ((NOT (((((NULL) NOT BETWEEN (vt0.c0) AND (x''))) NOTNULL)))) UNION SELECT DISTINCT v0.c0 FROM v0, vt0, vt1 WHERE (((((((NULL) NOT BETWEEN (vt0.c0) AND (x''))) NOTNULL)) ISNULL));
SELECT DISTINCT v0.c0 FROM v0, vt0, vt1;
SELECT ALL rt1.c2, vt1.c0, rt1.c0, rt1.c1, vt0.c0, v0.c0 FROM vt1, rt1, v0 INNER JOIN vt0 ON ((((v0.c0)<>(rt1.c2)))==(CASE rt1.c1  WHEN vt0.c0 THEN vt1.c0 WHEN rt1.c0 THEN vt0.c0 WHEN rt1.c0 THEN vt0.c0 END)) GROUP BY rt1.c2, vt1.c0, rt1.c0, rt1.c1, vt0.c0, v0.c0;
SELECT ALL rt1.c2, vt1.c0, rt1.c0, rt1.c1, vt0.c0, v0.c0 FROM vt1, rt1, v0 INNER JOIN vt0 ON ((((v0.c0)!=(rt1.c2)))==(CASE rt1.c1  WHEN vt0.c0 THEN vt1.c0 WHEN rt1.c0 THEN vt0.c0 WHEN rt1.c0 THEN vt0.c0 END)) WHERE (((((((vt1.c0)AND(vt1.c0)))AND(vt0.c0))) BETWEEN (rt1.c0 COLLATE RTRIM) AND (((v0.c0) IS TRUE)))) GROUP BY rt1.c2, vt1.c0, rt1.c0, rt1.c1, vt0.c0, v0.c0 UNION SELECT ALL rt1.c2, vt1.c0, rt1.c0, rt1.c1, vt0.c0, v0.c0 FROM vt1, rt1, v0 INNER JOIN vt0 ON ((((v0.c0)!=(rt1.c2)))=(CASE rt1.c1  WHEN vt0.c0 THEN vt1.c0 WHEN rt1.c0 THEN vt0.c0 WHEN rt1.c0 THEN vt0.c0 END)) WHERE ((NOT (((((((vt1.c0)AND(vt1.c0)))AND(vt0.c0))) BETWEEN (rt1.c0 COLLATE RTRIM) AND (((v0.c0) IS TRUE)))))) GROUP BY rt1.c2, vt1.c0, rt1.c0, rt1.c1, vt0.c0, v0.c0 UNION SELECT ALL rt1.c2, vt1.c0, rt1.c0, rt1.c1, vt0.c0, v0.c0 FROM vt1, rt1, v0 INNER JOIN vt0 ON ((((v0.c0)<>(rt1.c2)))=(CASE rt1.c1  WHEN vt0.c0 THEN vt1.c0 WHEN rt1.c0 THEN vt0.c0 WHEN rt1.c0 THEN vt0.c0 END)) WHERE (((((((((vt1.c0)AND(vt1.c0)))AND(vt0.c0))) BETWEEN (rt1.c0 COLLATE RTRIM) AND (((v0.c0) IS TRUE)))) ISNULL)) GROUP BY rt1.c2, vt1.c0, rt1.c0, rt1.c1, vt0.c0, v0.c0;
SELECT ALL rt1.c2, vt1.c0, rt1.c0, rt1.c1, vt0.c0, v0.c0 FROM vt1, rt1, v0 INNER JOIN vt0 ON ((((v0.c0)<>(rt1.c2)))==(CASE rt1.c1  WHEN vt0.c0 THEN vt1.c0 WHEN rt1.c0 THEN vt0.c0 WHEN rt1.c0 THEN vt0.c0 END)) GROUP BY rt1.c2, vt1.c0, rt1.c0, rt1.c1, vt0.c0, v0.c0;
SELECT vt0.c0 FROM vt0, rt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, rt1 GROUP BY vt0.c0 HAVING NULL UNION ALL SELECT vt0.c0 FROM vt0, rt1 GROUP BY vt0.c0 HAVING (NOT (NULL)) UNION ALL SELECT vt0.c0 FROM vt0, rt1 GROUP BY vt0.c0 HAVING ((NULL) ISNULL);
SELECT vt0.c0 FROM vt0, rt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, rt1 GROUP BY vt0.c0 HAVING NULL UNION ALL SELECT vt0.c0 FROM vt0, rt1 GROUP BY vt0.c0 HAVING (NOT (NULL)) UNION ALL SELECT vt0.c0 FROM vt0, rt1 GROUP BY vt0.c0 HAVING ((NULL) ISNULL);
SELECT vt0.c0 FROM vt0, rt1 GROUP BY vt0.c0;
SELECT ALL MIN((((v0.c0)) BETWEEN ((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c0)))) AND ((((((rt1.c2)OR(v0.c0)))OR(x'ef51')))))) FROM rt1, vt0, v0 ORDER BY ((((rt1.c2)AND(rt1.c0)))OR(rt1.c2)) COLLATE RTRIM;
SELECT vt1.c0 FROM vt0, vt1;
SELECT ALL vt1.c0 FROM vt0, vt1 WHERE ((vt1.c0 IN ('~庢[wmbW', vt1.c0)) COLLATE RTRIM) UNION ALL SELECT vt1.c0 FROM vt0, vt1 WHERE ((NOT ((vt1.c0 IN ('~庢[wmbW', vt1.c0)) COLLATE RTRIM))) UNION ALL SELECT ALL vt1.c0 FROM vt0, vt1 WHERE ((((vt1.c0 IN ('~庢[wmbW', vt1.c0)) COLLATE RTRIM) ISNULL));
SELECT vt1.c0 FROM vt0, vt1;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CAST(SUBSTR(vt0.c0, vt0.c0) AS REAL)) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (CAST(SUBSTR(vt0.c0, vt0.c0) AS REAL)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CAST(SUBSTR(vt0.c0, vt0.c0) AS REAL)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE (NULL) GROUP BY rt1.c2, rt1.c1, rt1.c0 UNION SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE ((NOT (NULL))) GROUP BY rt1.c2, rt1.c1, rt1.c0 UNION SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE (((NULL) ISNULL)) GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT vt0.c0, vt1.c0, rt1.c1 FROM vt0, rt1 FULL OUTER JOIN vt1 ON ((('')) BETWEEN (((- (rt1.c0)))) AND ((((rt1.c2)%(vt0.c0))))) GROUP BY vt0.c0, vt1.c0, rt1.c1;
SELECT vt0.c0, vt1.c0, rt1.c1 FROM vt0, rt1 FULL OUTER JOIN vt1 ON ((('')) BETWEEN (((- (rt1.c0)))) AND ((((rt1.c2)%(vt0.c0))))) GROUP BY vt0.c0, vt1.c0, rt1.c1 HAVING COUNT((((0.6333648429957958)) NOT BETWEEN ((COUNT(rt1.c1))) AND ((rt1.c1)))) UNION ALL SELECT vt0.c0, vt1.c0, rt1.c1 FROM vt0, rt1 FULL OUTER JOIN vt1 ON ((('')) BETWEEN (((- (rt1.c0)))) AND ((((rt1.c2)%(vt0.c0))))) GROUP BY vt0.c0, vt1.c0, rt1.c1 HAVING (NOT (COUNT((((0.6333648429957958)) NOT BETWEEN ((COUNT(rt1.c1))) AND ((rt1.c1)))))) UNION ALL SELECT vt0.c0, vt1.c0, rt1.c1 FROM vt0, rt1 FULL OUTER JOIN vt1 ON ((('')) BETWEEN (((- (rt1.c0)))) AND ((((rt1.c2)%(vt0.c0))))) GROUP BY vt0.c0, vt1.c0, rt1.c1 HAVING ((COUNT((((0.6333648429957958)) NOT BETWEEN ((COUNT(rt1.c1))) AND ((rt1.c1))))) ISNULL);
SELECT ALL * FROM rt1, vt1, v0;
SELECT * FROM rt1, vt1, v0 WHERE (((0.18023353747019266)IS(rt1.c0)) COLLATE RTRIM) UNION ALL SELECT ALL * FROM rt1, vt1, v0 WHERE ((NOT (((0.18023353747019266)IS(rt1.c0)) COLLATE RTRIM))) UNION ALL SELECT * FROM rt1, vt1, v0 WHERE (((((0.18023353747019266)IS(rt1.c0)) COLLATE RTRIM) ISNULL));
SELECT ALL * FROM rt1, vt1, v0;
SELECT DISTINCT v0.c0, vt1.c0 FROM vt1, v0;
SELECT DISTINCT v0.c0, vt1.c0 FROM vt1, v0 WHERE (vt1.c0 COLLATE RTRIM) UNION SELECT DISTINCT v0.c0, vt1.c0 FROM vt1, v0 WHERE ((NOT (vt1.c0 COLLATE RTRIM))) UNION SELECT DISTINCT v0.c0, vt1.c0 FROM vt1, v0 WHERE (((vt1.c0 COLLATE RTRIM) ISNULL));
SELECT DISTINCT v0.c0, vt1.c0 FROM vt1, v0;
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) COLLATE NOCASE) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((NOT (((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) COLLATE NOCASE))) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) COLLATE NOCASE) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt1.c0 FROM vt1 NOT INDEXED GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING x'' UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (x'')) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((x'') ISNULL);
SELECT ALL vt1.c0 FROM vt1 NOT INDEXED GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING x'' UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (x'')) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((x'') ISNULL);
SELECT ALL vt1.c0 FROM vt1 NOT INDEXED GROUP BY vt1.c0;
SELECT vt1.c0, rt1.c1, rt1.c0, v0.c0 FROM vt1, rt1, vt0 NOT INDEXED, v0 NOT INDEXED;
SELECT ALL vt1.c0, rt1.c1, rt1.c0, v0.c0 FROM vt1, rt1, vt0, v0 WHERE (((TYPEOF(vt0.c0)) IS FALSE)) UNION ALL SELECT ALL vt1.c0, rt1.c1, rt1.c0, v0.c0 FROM vt1, rt1, vt0, v0 WHERE ((NOT (((TYPEOF(vt0.c0)) IS FALSE)))) UNION ALL SELECT vt1.c0, rt1.c1, rt1.c0, v0.c0 FROM vt1, rt1, vt0, v0 WHERE (((((TYPEOF(vt0.c0)) IS FALSE)) ISNULL));
SELECT vt1.c0, rt1.c1, rt1.c0, v0.c0 FROM vt1, rt1, vt0 NOT INDEXED, v0 NOT INDEXED;
SELECT DISTINCT * FROM vt0, rt1, vt1, v0;
SELECT DISTINCT * FROM vt0, rt1, vt1, v0 WHERE (((UPPER(DISTINCT vt1.c0)) NOT BETWEEN (IFNULL(rt1.c0, v0.c0)) AND (rt1.c0))) UNION SELECT DISTINCT * FROM vt0, rt1, vt1, v0 WHERE ((NOT (((UPPER(DISTINCT vt1.c0)) NOT BETWEEN (IFNULL(rt1.c0, v0.c0)) AND (rt1.c0))))) UNION SELECT DISTINCT * FROM vt0, rt1, vt1, v0 WHERE (((((UPPER(DISTINCT vt1.c0)) NOT BETWEEN (IFNULL(rt1.c0, v0.c0)) AND (rt1.c0))) ISNULL));
SELECT DISTINCT * FROM vt0, rt1, vt1, v0;
SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, vt1 WHERE (CAST((- (vt0.c0)) AS NUMERIC)) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt0, vt1 WHERE ((NOT (CAST((- (vt0.c0)) AS NUMERIC)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt0, vt1 WHERE (((CAST((- (vt0.c0)) AS NUMERIC)) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT ALL rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2;
SELECT ALL rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2 HAVING ((CASE COUNT(*)  WHEN rt1.c2 THEN 1288659025 WHEN 0Xfffffffff1675c57 THEN MAX(rt1.c1) WHEN MIN(SUM(rt1.c0)) THEN rt1.c2 ELSE rt1.c1 END)>=(MAX(rt1.c0))) UNION ALL SELECT rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2 HAVING (NOT (((CASE COUNT(*)  WHEN rt1.c2 THEN 1288659025 WHEN 0xfffffffff1675c57 THEN MAX(rt1.c1) WHEN MIN(SUM(rt1.c0)) THEN rt1.c2 ELSE rt1.c1 END)>=(MAX(rt1.c0))))) UNION ALL SELECT ALL rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2 HAVING ((((CASE COUNT(*)  WHEN rt1.c2 THEN 1288659025 WHEN 0Xfffffffff1675c57 THEN MAX(rt1.c1) WHEN MIN(SUM(rt1.c0)) THEN rt1.c2 ELSE rt1.c1 END)>=(MAX(rt1.c0)))) ISNULL);
SELECT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (((((((((((-6.77035515E8)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))) NOTNULL)) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((((((((-6.77035515E8)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))) NOTNULL)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((((((((((((-6.77035515E8)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))) NOTNULL)) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))|((NOT (vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))|((NOT (vt0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))|((NOT (vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (LIKELY(vt0.c0)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (LIKELY(vt0.c0)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((LIKELY(vt0.c0)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt1.c0, rt1.c2, v0.c0 FROM v0, rt1 GROUP BY rt1.c0, rt1.c2, v0.c0;
SELECT ALL rt1.c0, rt1.c2, v0.c0 FROM v0, rt1 GROUP BY rt1.c0, rt1.c2, v0.c0 HAVING NULL UNION ALL SELECT ALL rt1.c0, rt1.c2, v0.c0 FROM v0, rt1 GROUP BY rt1.c0, rt1.c2, v0.c0 HAVING (NOT (NULL)) UNION ALL SELECT ALL rt1.c0, rt1.c2, v0.c0 FROM v0, rt1 GROUP BY rt1.c0, rt1.c2, v0.c0 HAVING ((NULL) ISNULL);
SELECT rt1.c0, rt1.c2, v0.c0 FROM v0, rt1 GROUP BY rt1.c0, rt1.c2, v0.c0;
SELECT ALL rt1.c0, rt1.c2, v0.c0 FROM v0, rt1 GROUP BY rt1.c0, rt1.c2, v0.c0 HAVING NULL UNION ALL SELECT ALL rt1.c0, rt1.c2, v0.c0 FROM v0, rt1 GROUP BY rt1.c0, rt1.c2, v0.c0 HAVING (NOT (NULL)) UNION ALL SELECT ALL rt1.c0, rt1.c2, v0.c0 FROM v0, rt1 GROUP BY rt1.c0, rt1.c2, v0.c0 HAVING ((NULL) ISNULL);
SELECT rt1.c0, rt1.c2, v0.c0 FROM v0, rt1 GROUP BY rt1.c0, rt1.c2, v0.c0;
SELECT ALL MAX((((((('&.{mD'))>((rt1.c1)))))<=((((rt1.c1) ISNULL))))) FROM rt1, v0 ORDER BY (((((- (rt1.c0)))OR((~ (rt1.c2)))))AND(TRIM(DISTINCT v0.c0, rt1.c2))) ASC  NULLS FIRST;
SELECT ALL * FROM rt1;
SELECT * FROM rt1 WHERE ('-1337756398') UNION ALL SELECT * FROM rt1 WHERE ((NOT ('-1337756398'))) UNION ALL SELECT * FROM rt1 WHERE ((('-1337756398') ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT rt1.c1, rt1.c2, vt0.c0, rt1.c0, vt1.c0 FROM vt0, vt1 CROSS JOIN rt1 ON (- (rt1.c1));
SELECT DISTINCT rt1.c1, rt1.c2, vt0.c0, rt1.c0, vt1.c0 FROM vt0, vt1 CROSS JOIN rt1 ON (- (rt1.c1)) WHERE (CAST(((vt1.c0) BETWEEN (rt1.c0) AND (rt1.c1)) AS NUMERIC)) UNION SELECT DISTINCT rt1.c1, rt1.c2, vt0.c0, rt1.c0, vt1.c0 FROM vt0, vt1 CROSS JOIN rt1 ON (- (rt1.c1)) WHERE ((NOT (CAST(((vt1.c0) BETWEEN (rt1.c0) AND (rt1.c1)) AS NUMERIC)))) UNION SELECT DISTINCT rt1.c1, rt1.c2, vt0.c0, rt1.c0, vt1.c0 FROM vt0, vt1 CROSS JOIN rt1 ON (- (rt1.c1)) WHERE (((CAST(((vt1.c0) BETWEEN (rt1.c0) AND (rt1.c1)) AS NUMERIC)) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c2, vt0.c0, rt1.c0, vt1.c0 FROM vt0, vt1 CROSS JOIN rt1 ON (- (rt1.c1));
SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, vt0 WHERE (CASE (~ (vt1.c0))  WHEN -1.873016179E9 THEN ((vt1.c0) NOT BETWEEN (NULL) AND (vt0.c0)) END) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt1, vt0 WHERE ((NOT (CASE (~ (vt1.c0))  WHEN -1.873016179E9 THEN ((vt1.c0) NOT BETWEEN (NULL) AND (vt0.c0)) END))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt1, vt0 WHERE (((CASE (~ (vt1.c0))  WHEN -1.873016179E9 THEN ((vt1.c0) NOT BETWEEN (NULL) AND (vt0.c0)) END) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT vt0.c0, rt1.c0, v0.c0, rt1.c1, rt1.c2 FROM vt1, vt0, rt1 LEFT OUTER JOIN v0 ON TOTAL_CHANGES() GROUP BY vt0.c0, rt1.c0, v0.c0, rt1.c1, rt1.c2;
SELECT vt0.c0, rt1.c0, v0.c0, rt1.c1, rt1.c2 FROM vt1, vt0, rt1 LEFT OUTER JOIN v0 ON TOTAL_CHANGES() GROUP BY vt0.c0, rt1.c0, v0.c0, rt1.c1, rt1.c2 HAVING AVG(((MIN(COUNT(vt0.c0)))/(MAX(vt1.c0)))) UNION ALL SELECT vt0.c0, rt1.c0, v0.c0, rt1.c1, rt1.c2 FROM vt1, vt0, rt1 LEFT OUTER JOIN v0 ON TOTAL_CHANGES() GROUP BY vt0.c0, rt1.c0, v0.c0, rt1.c1, rt1.c2 HAVING (NOT (AVG(((MIN(COUNT(vt0.c0)))/(MAX(vt1.c0)))))) UNION ALL SELECT ALL vt0.c0, rt1.c0, v0.c0, rt1.c1, rt1.c2 FROM vt1, vt0, rt1 LEFT OUTER JOIN v0 ON TOTAL_CHANGES() GROUP BY vt0.c0, rt1.c0, v0.c0, rt1.c1, rt1.c2 HAVING ((AVG(((MIN(COUNT(vt0.c0)))/(MAX(vt1.c0))))) ISNULL);
SELECT ALL vt0.c0, vt1.c0, rt1.c1, rt1.c2 FROM rt1, vt1, vt0;
SELECT ALL vt0.c0, vt1.c0, rt1.c1, rt1.c2 FROM rt1, vt1, vt0 WHERE (NULL) UNION ALL SELECT vt0.c0, vt1.c0, rt1.c1, rt1.c2 FROM rt1, vt1, vt0 WHERE ((NOT (NULL))) UNION ALL SELECT ALL vt0.c0, vt1.c0, rt1.c1, rt1.c2 FROM rt1, vt1, vt0 WHERE (((NULL) ISNULL));
SELECT ALL vt0.c0, vt1.c0, rt1.c1, rt1.c2 FROM rt1, vt1, vt0;
SELECT DISTINCT vt0.c0 FROM rt1 FULL OUTER JOIN vt0 ON ((CASE vt0.c0  WHEN x'' THEN rt1.c0 END) NOT BETWEEN (((v0.c0) BETWEEN (-1.968080672E9) AND (v0.c0))) AND (((((v0.c0)AND(rt1.c0)))OR(0.7012602604588201)))) FULL OUTER JOIN v0 ON ((((((rt1.c2))<>((rt1.c2))), (~ (rt1.c2)), ((vt0.c0)&(vt1.c0))))>((rt1.c1 COLLATE BINARY, (('2087093688') NOTNULL), ((((rt1.c0)OR(rt1.c0)))AND(rt1.c2))))) INNER JOIN vt1 ON (((rt1.c2, vt0.c0, vt1.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN (rt1.c0) AND (vt0.c0)), CASE vt1.c0  WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c1 END, ((rt1.c2)AND(rt1.c2)))) AND ((CAST(rt1.c2 AS TEXT), CASE rt1.c0  WHEN vt1.c0 THEN rt1.c2 END, x'')));
SELECT ALL v0.c0, vt1.c0 FROM vt1, v0 GROUP BY v0.c0, vt1.c0;
SELECT ALL v0.c0, vt1.c0 FROM vt1, v0 WHERE (((vt1.c0 COLLATE BINARY)*((v0.c0 IN (v0.c0, vt1.c0))))) GROUP BY v0.c0, vt1.c0 UNION SELECT ALL v0.c0, vt1.c0 FROM vt1, v0 WHERE ((NOT (((vt1.c0 COLLATE BINARY)*((v0.c0 IN (v0.c0, vt1.c0))))))) GROUP BY v0.c0, vt1.c0 UNION SELECT ALL v0.c0, vt1.c0 FROM vt1, v0 WHERE (((((vt1.c0 COLLATE BINARY)*((v0.c0 IN (v0.c0, vt1.c0))))) ISNULL)) GROUP BY v0.c0, vt1.c0;
SELECT ALL v0.c0, vt1.c0 FROM vt1, v0 GROUP BY v0.c0, vt1.c0;
SELECT ALL rt1.c1, v0.c0, rt1.c0, rt1.c2 FROM rt1, v0 GROUP BY rt1.c1, v0.c0, rt1.c0, rt1.c2;
SELECT ALL rt1.c1, v0.c0, rt1.c0, rt1.c2 FROM rt1, v0 GROUP BY rt1.c1, v0.c0, rt1.c0, rt1.c2 HAVING ((GROUP_CONCAT(rt1.c1)) BETWEEN (COUNT(GROUP_CONCAT(COUNT(*)))) AND (((TOTAL(rt1.c1)) NOT BETWEEN (rt1.c1) AND (SUM(rt1.c2))))) UNION ALL SELECT ALL rt1.c1, v0.c0, rt1.c0, rt1.c2 FROM rt1, v0 GROUP BY rt1.c1, v0.c0, rt1.c0, rt1.c2 HAVING (NOT (((GROUP_CONCAT(rt1.c1)) BETWEEN (COUNT(GROUP_CONCAT(COUNT(*)))) AND (((TOTAL(rt1.c1)) NOT BETWEEN (rt1.c1) AND (SUM(rt1.c2))))))) UNION ALL SELECT rt1.c1, v0.c0, rt1.c0, rt1.c2 FROM rt1, v0 GROUP BY rt1.c1, v0.c0, rt1.c0, rt1.c2 HAVING ((((GROUP_CONCAT(rt1.c1)) BETWEEN (COUNT(GROUP_CONCAT(COUNT(*)))) AND (((TOTAL(rt1.c1)) NOT BETWEEN (rt1.c1) AND (SUM(rt1.c2)))))) ISNULL);
SELECT rt1.c0, rt1.c2 FROM rt1;
SELECT ALL rt1.c0, rt1.c2 FROM rt1 WHERE (((((rt1.c1)+(rt1.c2)))>((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND (('-2141879228')))))) UNION ALL SELECT ALL rt1.c0, rt1.c2 FROM rt1 WHERE ((NOT (((((rt1.c1)+(rt1.c2)))>((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND (('-2141879228')))))))) UNION ALL SELECT ALL rt1.c0, rt1.c2 FROM rt1 WHERE (((((((rt1.c1)+(rt1.c2)))>((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND (('-2141879228')))))) ISNULL));
SELECT rt1.c0, rt1.c2 FROM rt1;
SELECT DISTINCT rt1.c2, rt1.c1 FROM rt1, vt0, v0, vt1;
SELECT DISTINCT rt1.c2, rt1.c1 FROM rt1 NOT INDEXED, vt0, v0, vt1 WHERE ((((((((((((NULL)) NOT BETWEEN ((rt1.c2)) AND ((x''))))OR((- (rt1.c1)))))AND(CAST(0.03417738668076531 AS REAL))))AND(NULL)))OR(vt0.c0))) UNION SELECT DISTINCT rt1.c2, rt1.c1 FROM rt1, vt0, v0, vt1 WHERE ((NOT ((((((((((((NULL)) NOT BETWEEN ((rt1.c2)) AND ((x''))))OR((- (rt1.c1)))))AND(CAST(0.03417738668076531 AS REAL))))AND(NULL)))OR(vt0.c0))))) UNION SELECT DISTINCT rt1.c2, rt1.c1 FROM rt1, vt0, v0, vt1 WHERE ((((((((((((((NULL)) NOT BETWEEN ((rt1.c2)) AND ((x''))))OR((- (rt1.c1)))))AND(CAST(0.03417738668076531 AS REAL))))AND(NULL)))OR(vt0.c0))) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c1 FROM rt1, vt0, v0, vt1;
SELECT ALL rt1.c1, vt0.c0 FROM vt0, vt1, rt1, v0 GROUP BY rt1.c1, vt0.c0;
SELECT rt1.c1, vt0.c0 FROM vt0, vt1, rt1, v0 WHERE (CAST(((rt1.c1)|(vt0.c0)) AS INTEGER)) GROUP BY rt1.c1, vt0.c0 UNION SELECT rt1.c1, vt0.c0 FROM vt0, vt1, rt1, v0 NOT INDEXED WHERE ((NOT (CAST(((rt1.c1)|(vt0.c0)) AS INTEGER)))) GROUP BY rt1.c1, vt0.c0 UNION SELECT ALL rt1.c1, vt0.c0 FROM vt0, vt1, rt1, v0 WHERE (((CAST(((rt1.c1)|(vt0.c0)) AS INTEGER)) ISNULL)) GROUP BY rt1.c1, vt0.c0;
SELECT ALL rt1.c1, vt0.c0 FROM vt0, vt1, rt1, v0 GROUP BY rt1.c1, vt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING LIKELY(v0.c0) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (LIKELY(v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((LIKELY(v0.c0)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING LIKELY(v0.c0) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (LIKELY(v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((LIKELY(v0.c0)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT * FROM rt1, vt1;
SELECT * FROM rt1, vt1 WHERE ((((((((((((rt1.c1))>((rt1.c1))))OR(vt1.c0)))OR(ABS(rt1.c0))))AND(((rt1.c2)==(rt1.c2)))))OR((((vt1.c0, NULL, rt1.c0))=((rt1.c2, rt1.c2, rt1.c1)))))) UNION ALL SELECT ALL * FROM rt1, vt1 WHERE ((NOT ((((((((((((rt1.c1))>((rt1.c1))))OR(vt1.c0)))OR(ABS(rt1.c0))))AND(((rt1.c2)=(rt1.c2)))))OR((((vt1.c0, NULL, rt1.c0))==((rt1.c2, rt1.c2, rt1.c1)))))))) UNION ALL SELECT * FROM rt1, vt1 WHERE ((((((((((((((rt1.c1))>((rt1.c1))))OR(vt1.c0)))OR(ABS(rt1.c0))))AND(((rt1.c2)==(rt1.c2)))))OR((((vt1.c0, NULL, rt1.c0))==((rt1.c2, rt1.c2, rt1.c1)))))) ISNULL));
SELECT * FROM rt1, vt1;
SELECT DISTINCT * FROM rt1, vt1;
SELECT DISTINCT * FROM rt1, vt1 WHERE (CASE WHEN ((rt1.c0)-(vt1.c0)) THEN CAST(rt1.c0 AS INTEGER) WHEN ((rt1.c2)&(rt1.c2)) THEN vt1.c0 WHEN ((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)) THEN ((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c1)) ELSE ((0.9543560131556469)LIKE(rt1.c1)) END) UNION SELECT DISTINCT * FROM rt1, vt1 WHERE ((NOT (CASE WHEN ((rt1.c0)-(vt1.c0)) THEN CAST(rt1.c0 AS INTEGER) WHEN ((rt1.c2)&(rt1.c2)) THEN vt1.c0 WHEN ((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)) THEN ((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c1)) ELSE ((0.9543560131556469)LIKE(rt1.c1)) END))) UNION SELECT DISTINCT * FROM rt1, vt1 WHERE (((CASE WHEN ((rt1.c0)-(vt1.c0)) THEN CAST(rt1.c0 AS INTEGER) WHEN ((rt1.c2)&(rt1.c2)) THEN vt1.c0 WHEN ((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)) THEN ((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c1)) ELSE ((0.9543560131556469)LIKE(rt1.c1)) END) ISNULL));
SELECT DISTINCT * FROM rt1, vt1;
SELECT ALL rt1.c0 FROM rt1 RIGHT OUTER JOIN vt0 ON '612146320' GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM rt1 RIGHT OUTER JOIN vt0 ON '612146320' WHERE ((- ((rt1.c0 IN (vt0.c0))))) GROUP BY rt1.c0 UNION SELECT rt1.c0 FROM rt1 RIGHT OUTER JOIN vt0 ON '612146320' WHERE ((NOT ((- ((rt1.c0 IN (vt0.c0))))))) GROUP BY rt1.c0 UNION SELECT rt1.c0 FROM rt1 RIGHT OUTER JOIN vt0 ON '612146320' WHERE ((((- ((rt1.c0 IN (vt0.c0))))) ISNULL)) GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM rt1 RIGHT OUTER JOIN vt0 ON '612146320' GROUP BY rt1.c0;
SELECT ALL v0.c0, vt1.c0, vt0.c0 FROM vt0, vt1, v0 GROUP BY v0.c0, vt1.c0, vt0.c0;
SELECT v0.c0, vt1.c0, vt0.c0 FROM vt0, vt1, v0 GROUP BY v0.c0, vt1.c0, vt0.c0 HAVING (((((TOTAL(NULL))AND(vt0.c0)))OR(vt0.c0)) IN ()) UNION ALL SELECT v0.c0, vt1.c0, vt0.c0 FROM vt0, vt1, v0 GROUP BY v0.c0, vt1.c0, vt0.c0 HAVING (NOT ((((((TOTAL(NULL))AND(vt0.c0)))OR(vt0.c0)) IN ()))) UNION ALL SELECT ALL v0.c0, vt1.c0, vt0.c0 FROM vt0, vt1, v0 GROUP BY v0.c0, vt1.c0, vt0.c0 HAVING (((((((TOTAL(NULL))AND(vt0.c0)))OR(vt0.c0)) IN ())) ISNULL);
SELECT ALL v0.c0, vt1.c0, vt0.c0 FROM vt0, vt1, v0 GROUP BY v0.c0, vt1.c0, vt0.c0;
SELECT v0.c0, vt1.c0, vt0.c0 FROM vt0, vt1, v0 GROUP BY v0.c0, vt1.c0, vt0.c0 HAVING (((((TOTAL(NULL))AND(vt0.c0)))OR(vt0.c0)) IN ()) UNION ALL SELECT v0.c0, vt1.c0, vt0.c0 FROM vt0, vt1, v0 GROUP BY v0.c0, vt1.c0, vt0.c0 HAVING (NOT ((((((TOTAL(NULL))AND(vt0.c0)))OR(vt0.c0)) IN ()))) UNION ALL SELECT ALL v0.c0, vt1.c0, vt0.c0 FROM vt0, vt1, v0 GROUP BY v0.c0, vt1.c0, vt0.c0 HAVING (((((((TOTAL(NULL))AND(vt0.c0)))OR(vt0.c0)) IN ())) ISNULL);
SELECT ALL v0.c0, vt1.c0, vt0.c0 FROM vt0, vt1, v0 GROUP BY v0.c0, vt1.c0, vt0.c0;
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON (((((((('-232304796')OR(CASE WHEN rt1.c1 THEN vt0.c0 ELSE rt1.c0 END)))OR((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2))))))OR((~ (rt1.c2)))))AND((~ (x'')))) FULL OUTER JOIN rt1 ON ((((vt0.c0)IS NOT('{(s6c'))) NOT NULL);
SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1, vt0.c0, v0.c0 FROM v0, vt0, rt1;
SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1, vt0.c0, v0.c0 FROM v0, vt0, rt1 WHERE (((IFNULL(rt1.c0, v0.c0)) NOTNULL)) UNION SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1, vt0.c0, v0.c0 FROM v0, vt0, rt1 WHERE ((NOT (((IFNULL(rt1.c0, v0.c0)) NOTNULL)))) UNION SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1, vt0.c0, v0.c0 FROM v0, vt0, rt1 WHERE (((((IFNULL(rt1.c0, v0.c0)) NOTNULL)) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1, vt0.c0, v0.c0 FROM v0, vt0, rt1;
SELECT rt1.c2, rt1.c1 FROM rt1 NATURAL JOIN vt1 GROUP BY rt1.c2, rt1.c1;
SELECT ALL rt1.c2, rt1.c1 FROM rt1 NATURAL JOIN vt1 WHERE ((((((vt1.c0))<((x'e209')))) NOT NULL)) GROUP BY rt1.c2, rt1.c1 UNION SELECT rt1.c2, rt1.c1 FROM rt1 NATURAL JOIN vt1 WHERE ((NOT ((((((vt1.c0))<((x'e209')))) NOT NULL)))) GROUP BY rt1.c2, rt1.c1 UNION SELECT rt1.c2, rt1.c1 FROM rt1 NATURAL JOIN vt1 WHERE ((((((((vt1.c0))<((x'e209')))) NOT NULL)) ISNULL)) GROUP BY rt1.c2, rt1.c1;
SELECT rt1.c2, rt1.c1 FROM rt1 NATURAL JOIN vt1 GROUP BY rt1.c2, rt1.c1;
SELECT ALL rt1.c0, v0.c0, vt1.c0 FROM vt1, rt1, v0 GROUP BY rt1.c0, v0.c0, vt1.c0;
SELECT rt1.c0, v0.c0, vt1.c0 FROM vt1, rt1, v0 GROUP BY rt1.c0, v0.c0, vt1.c0 HAVING TOTAL(SUM(TOTAL(rt1.c2))) UNION ALL SELECT ALL rt1.c0, v0.c0, vt1.c0 FROM vt1, rt1, v0 GROUP BY rt1.c0, v0.c0, vt1.c0 HAVING (NOT (TOTAL(SUM(TOTAL(rt1.c2))))) UNION ALL SELECT rt1.c0, v0.c0, vt1.c0 FROM vt1, rt1, v0 GROUP BY rt1.c0, v0.c0, vt1.c0 HAVING ((TOTAL(SUM(TOTAL(rt1.c2)))) ISNULL);
SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1, vt1;
SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1, vt1 WHERE (CAST(((rt1.c0) IS FALSE) AS INTEGER)) UNION ALL SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1, vt1 WHERE ((NOT (CAST(((rt1.c0) IS FALSE) AS INTEGER)))) UNION ALL SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1, vt1 WHERE (((CAST(((rt1.c0) IS FALSE) AS INTEGER)) ISNULL));
SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1, vt1;
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0, vt1;
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((CASE WHEN vt1.c0 THEN '0.3110667082390083' WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 END)<=(CAST(NULL AS TEXT)))) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((NOT (((CASE WHEN vt1.c0 THEN '0.3110667082390083' WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 END)<=(CAST(NULL AS TEXT)))))) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((((CASE WHEN vt1.c0 THEN '0.3110667082390083' WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 END)<=(CAST(NULL AS TEXT)))) ISNULL));
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0, vt1;
SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1;
SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1 WHERE (CASE WHEN ((rt1.c1)>(rt1.c1)) THEN (((rt1.c2))>=((rt1.c2))) END) GROUP BY rt1.c2, rt1.c0, rt1.c1 UNION SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1 WHERE ((NOT (CASE WHEN ((rt1.c1)>(rt1.c1)) THEN (((rt1.c2))>=((rt1.c2))) END))) GROUP BY rt1.c2, rt1.c0, rt1.c1 UNION SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1 WHERE (((CASE WHEN ((rt1.c1)>(rt1.c1)) THEN (((rt1.c2))>=((rt1.c2))) END) ISNULL)) GROUP BY rt1.c2, rt1.c0, rt1.c1;
SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1;
SELECT rt1.c2, rt1.c1, vt1.c0, vt0.c0 FROM rt1, v0, vt1, vt0 GROUP BY rt1.c2, rt1.c1, vt1.c0, vt0.c0;
SELECT ALL rt1.c2, rt1.c1, vt1.c0, vt0.c0 FROM rt1, v0, vt1, vt0 GROUP BY rt1.c2, rt1.c1, vt1.c0, vt0.c0 HAVING MIN(AVG(GROUP_CONCAT(vt0.c0))) UNION ALL SELECT ALL rt1.c2, rt1.c1, vt1.c0, vt0.c0 FROM rt1, v0, vt1, vt0 GROUP BY rt1.c2, rt1.c1, vt1.c0, vt0.c0 HAVING (NOT (MIN(AVG(GROUP_CONCAT(vt0.c0))))) UNION ALL SELECT rt1.c2, rt1.c1, vt1.c0, vt0.c0 FROM rt1, v0, vt1, vt0 GROUP BY rt1.c2, rt1.c1, vt1.c0, vt0.c0 HAVING ((MIN(AVG(GROUP_CONCAT(vt0.c0)))) ISNULL);
SELECT * FROM rt1, v0;
SELECT ALL * FROM rt1, v0 WHERE (((x'')||((+ (rt1.c1))))) UNION ALL SELECT ALL * FROM rt1, v0 WHERE ((NOT (((x'')||((+ (rt1.c1))))))) UNION ALL SELECT * FROM rt1, v0 WHERE (((((x'')||((+ (rt1.c1))))) ISNULL));
SELECT * FROM rt1, v0;
SELECT DISTINCT * FROM rt1, vt1;
SELECT DISTINCT * FROM rt1, vt1 WHERE (CASE WHEN CAST('-729707520' AS BLOB) THEN ((((x'')AND(rt1.c1)))AND(rt1.c0)) END) UNION SELECT DISTINCT * FROM rt1, vt1 WHERE ((NOT (CASE WHEN CAST('-729707520' AS BLOB) THEN ((((x'')AND(rt1.c1)))AND(rt1.c0)) END))) UNION SELECT DISTINCT * FROM rt1, vt1 WHERE (((CASE WHEN CAST('-729707520' AS BLOB) THEN ((((x'')AND(rt1.c1)))AND(rt1.c0)) END) ISNULL));
SELECT DISTINCT * FROM rt1, vt1;
SELECT rt1.c0, vt1.c0 FROM vt0, v0, rt1, vt1 GROUP BY rt1.c0, vt1.c0;
SELECT ALL rt1.c0, vt1.c0 FROM vt0, v0, rt1, vt1 WHERE ((((rt1.c0 COLLATE RTRIM))>((NULL)))) GROUP BY rt1.c0, vt1.c0 UNION SELECT rt1.c0, vt1.c0 FROM vt0, v0, rt1, vt1 WHERE ((NOT ((((rt1.c0 COLLATE RTRIM))>((NULL)))))) GROUP BY rt1.c0, vt1.c0 UNION SELECT rt1.c0, vt1.c0 FROM vt0, v0, rt1, vt1 WHERE ((((((rt1.c0 COLLATE RTRIM))>((NULL)))) ISNULL)) GROUP BY rt1.c0, vt1.c0;
SELECT rt1.c0, vt1.c0 FROM vt0, v0, rt1, vt1 GROUP BY rt1.c0, vt1.c0;
SELECT rt1.c0, vt0.c0 FROM rt1, vt0 GROUP BY rt1.c0, vt0.c0;
SELECT rt1.c0, vt0.c0 FROM rt1, vt0 GROUP BY rt1.c0, vt0.c0 HAVING GROUP_CONCAT(CAST(rt1.c1 AS REAL)) UNION ALL SELECT rt1.c0, vt0.c0 FROM rt1, vt0 GROUP BY rt1.c0, vt0.c0 HAVING (NOT (GROUP_CONCAT(CAST(rt1.c1 AS REAL)))) UNION ALL SELECT rt1.c0, vt0.c0 FROM rt1, vt0 GROUP BY rt1.c0, vt0.c0 HAVING ((GROUP_CONCAT(CAST(rt1.c1 AS REAL))) ISNULL);
SELECT rt1.c0, vt0.c0 FROM rt1, vt0 GROUP BY rt1.c0, vt0.c0;
SELECT rt1.c0, vt0.c0 FROM rt1, vt0 GROUP BY rt1.c0, vt0.c0 HAVING GROUP_CONCAT(CAST(rt1.c1 AS REAL)) UNION ALL SELECT rt1.c0, vt0.c0 FROM rt1, vt0 GROUP BY rt1.c0, vt0.c0 HAVING (NOT (GROUP_CONCAT(CAST(rt1.c1 AS REAL)))) UNION ALL SELECT rt1.c0, vt0.c0 FROM rt1, vt0 GROUP BY rt1.c0, vt0.c0 HAVING ((GROUP_CONCAT(CAST(rt1.c1 AS REAL))) ISNULL);
SELECT rt1.c0, vt0.c0 FROM rt1, vt0 GROUP BY rt1.c0, vt0.c0;
SELECT ALL vt0.c0 FROM rt1, vt0, vt1;
SELECT ALL vt0.c0 FROM rt1, vt0, vt1 WHERE ((((~ (vt1.c0)))<=((+ (vt0.c0))))) UNION ALL SELECT vt0.c0 FROM rt1, vt0, vt1 WHERE ((NOT ((((~ (vt1.c0)))<=((+ (vt0.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM rt1, vt0, vt1 WHERE ((((((~ (vt1.c0)))<=((+ (vt0.c0))))) ISNULL));
SELECT ALL vt0.c0 FROM rt1, vt0, vt1;
SELECT DISTINCT vt1.c0, rt1.c0, rt1.c1, vt0.c0, rt1.c2 FROM vt0, vt1 RIGHT OUTER JOIN rt1 ON 0.9077459574228866;
SELECT DISTINCT vt1.c0, rt1.c0, rt1.c1, vt0.c0, rt1.c2 FROM vt0, vt1 RIGHT OUTER JOIN rt1 ON 0.9077459574228866 WHERE (CASE ((rt1.c0) NOTNULL)  WHEN rt1.c1 THEN ((-1.7976931348623157E308)IS NOT(vt1.c0)) END) UNION SELECT DISTINCT vt1.c0, rt1.c0, rt1.c1, vt0.c0, rt1.c2 FROM vt0, vt1 RIGHT OUTER JOIN rt1 ON 0.9077459574228866 WHERE ((NOT (CASE ((rt1.c0) NOTNULL)  WHEN rt1.c1 THEN ((-1.7976931348623157E308)IS NOT(vt1.c0)) END))) UNION SELECT DISTINCT vt1.c0, rt1.c0, rt1.c1, vt0.c0, rt1.c2 FROM vt0, vt1 RIGHT OUTER JOIN rt1 ON 0.9077459574228866 WHERE (((CASE ((rt1.c0) NOTNULL)  WHEN rt1.c1 THEN ((-1.7976931348623157E308)IS NOT(vt1.c0)) END) ISNULL));
SELECT DISTINCT vt1.c0, rt1.c0, rt1.c1, vt0.c0, rt1.c2 FROM vt0, vt1 RIGHT OUTER JOIN rt1 ON 0.9077459574228866;
SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0, v0 WHERE ((((((((((v0.c0 IN ()))OR(v0.c0 COLLATE BINARY)))AND((v0.c0 IN (v0.c0)))))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(((((vt0.c0)OR(v0.c0)))AND(x''))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt0, v0 WHERE ((NOT ((((((((((v0.c0 IN ()))OR(v0.c0 COLLATE BINARY)))AND((v0.c0 IN (v0.c0)))))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(((((vt0.c0)OR(v0.c0)))AND(x''))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt0, v0 WHERE ((((((((((((v0.c0 IN ()))OR(v0.c0 COLLATE BINARY)))AND((v0.c0 IN (v0.c0)))))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(((((vt0.c0)OR(v0.c0)))AND(x''))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT rt1.c0, vt1.c0 FROM vt0, v0, vt1, rt1 GROUP BY rt1.c0, vt1.c0;
SELECT rt1.c0, vt1.c0 FROM vt0, v0, vt1, rt1 GROUP BY rt1.c0, vt1.c0 HAVING MIN(rt1.c2) UNION ALL SELECT ALL rt1.c0, vt1.c0 FROM vt0, v0, vt1, rt1 GROUP BY rt1.c0, vt1.c0 HAVING (NOT (MIN(rt1.c2))) UNION ALL SELECT rt1.c0, vt1.c0 FROM vt0, v0, vt1, rt1 GROUP BY rt1.c0, vt1.c0 HAVING ((MIN(rt1.c2)) ISNULL);
SELECT rt1.c0, vt1.c0 FROM vt0, v0, vt1, rt1 GROUP BY rt1.c0, vt1.c0;
SELECT rt1.c0, vt1.c0 FROM vt0, v0, vt1, rt1 GROUP BY rt1.c0, vt1.c0 HAVING MIN(rt1.c2) UNION ALL SELECT ALL rt1.c0, vt1.c0 FROM vt0, v0, vt1, rt1 GROUP BY rt1.c0, vt1.c0 HAVING (NOT (MIN(rt1.c2))) UNION ALL SELECT rt1.c0, vt1.c0 FROM vt0, v0, vt1, rt1 GROUP BY rt1.c0, vt1.c0 HAVING ((MIN(rt1.c2)) ISNULL);
SELECT rt1.c0, vt1.c0 FROM vt0, v0, vt1, rt1 GROUP BY rt1.c0, vt1.c0;
SELECT * FROM v0, vt0, rt1;
SELECT ALL * FROM v0, vt0, rt1 WHERE (((((rt1.c0)IS(rt1.c0)))<<((NOT (v0.c0))))) UNION ALL SELECT ALL * FROM v0, vt0, rt1 WHERE ((NOT (((((rt1.c0)IS(rt1.c0)))<<((NOT (v0.c0))))))) UNION ALL SELECT ALL * FROM v0, vt0, rt1 WHERE (((((((rt1.c0)IS(rt1.c0)))<<((NOT (v0.c0))))) ISNULL));
SELECT * FROM v0, vt0, rt1;
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE (((((NULL) ISNULL))>(UNLIKELY(DISTINCT v0.c0)))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT (((((NULL) ISNULL))>(UNLIKELY(DISTINCT v0.c0)))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE (((((((NULL) ISNULL))>(UNLIKELY(DISTINCT v0.c0)))) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT ALL v0.c0, vt1.c0 FROM v0, vt1 GROUP BY v0.c0, vt1.c0;
SELECT v0.c0, vt1.c0 FROM v0, vt1 WHERE (CASE WHEN (x'976e' IN ()) THEN ((v0.c0)<(v0.c0)) END) GROUP BY v0.c0, vt1.c0 UNION SELECT v0.c0, vt1.c0 FROM v0, vt1 WHERE ((NOT (CASE WHEN (x'976e' IN ()) THEN ((v0.c0)<(v0.c0)) END))) GROUP BY v0.c0, vt1.c0 UNION SELECT v0.c0, vt1.c0 FROM v0, vt1 WHERE (((CASE WHEN (x'976e' IN ()) THEN ((v0.c0)<(v0.c0)) END) ISNULL)) GROUP BY v0.c0, vt1.c0;
SELECT ALL v0.c0, vt1.c0 FROM v0, vt1 GROUP BY v0.c0, vt1.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((vt0.c0 COLLATE NOCASE))>((SUM(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((vt0.c0 COLLATE NOCASE))>((SUM(vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((vt0.c0 COLLATE NOCASE))>((SUM(vt0.c0))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((vt0.c0 COLLATE NOCASE))>((SUM(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((vt0.c0 COLLATE NOCASE))>((SUM(vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((vt0.c0 COLLATE NOCASE))>((SUM(vt0.c0))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL MAX((((CASE rt1.c1  WHEN vt1.c0 THEN vt1.c0 WHEN rt1.c0 THEN rt1.c0 WHEN vt1.c0 THEN rt1.c0 ELSE vt1.c0 END))>((CASE rt1.c0  WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c2 THEN vt1.c0 ELSE NULL END)))) FROM rt1, vt1;
SELECT * FROM v0 CROSS JOIN rt1 ON (((((rt1.c2, vt0.c0, vt0.c0))<((v0.c0, vt1.c0, v0.c0)))) BETWEEN (CASE WHEN vt0.c0 THEN vt1.c0 END) AND (CAST(rt1.c2 AS INTEGER))) FULL OUTER JOIN vt1 ON 0.2680624737929418 FULL OUTER JOIN vt0 ON (((x'')+(rt1.c0)) IN ());
SELECT DISTINCT vt0.c0 FROM vt0, rt1 FULL OUTER JOIN vt1 ON (((CAST(x'' AS INTEGER)))!=(((((vt1.c0))<((rt1.c0)))))) LEFT OUTER JOIN v0 ON CHANGES();
SELECT DISTINCT vt0.c0 FROM vt0, rt1 FULL OUTER JOIN vt1 ON (((CAST(x'' AS INTEGER)))<>(((((vt1.c0))<((rt1.c0)))))) LEFT OUTER JOIN v0 ON CHANGES() WHERE ((((vt0.c0)) BETWEEN ((NULL)) AND ((((rt1.c1)>=(v0.c0)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0, rt1 FULL OUTER JOIN vt1 ON (((CAST(x'' AS INTEGER)))!=(((((vt1.c0))<((rt1.c0)))))) LEFT OUTER JOIN v0 ON CHANGES() WHERE ((NOT ((((vt0.c0)) BETWEEN ((NULL)) AND ((((rt1.c1)>=(v0.c0)))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0, rt1 FULL OUTER JOIN vt1 ON (((CAST(x'' AS INTEGER)))!=(((((vt1.c0))<((rt1.c0)))))) LEFT OUTER JOIN v0 ON CHANGES() WHERE ((((((vt0.c0)) BETWEEN ((NULL)) AND ((((rt1.c1)>=(v0.c0)))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0, rt1 FULL OUTER JOIN vt1 ON (((CAST(x'' AS INTEGER)))!=(((((vt1.c0))<((rt1.c0)))))) LEFT OUTER JOIN v0 ON CHANGES();
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0) ISNULL)) NOTNULL)) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((((v0.c0) ISNULL)) NOTNULL)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((((v0.c0) ISNULL)) NOTNULL)) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt1.c0 FROM vt1, v0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, v0 GROUP BY vt1.c0 HAVING COUNT(COUNT(COUNT(*))) UNION ALL SELECT ALL vt1.c0 FROM vt1, v0 GROUP BY vt1.c0 HAVING (NOT (COUNT(COUNT(COUNT(*))))) UNION ALL SELECT vt1.c0 FROM vt1, v0 GROUP BY vt1.c0 HAVING ((COUNT(COUNT(COUNT(*)))) ISNULL);
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 WHERE (CAST((((v0.c0, v0.c0, v0.c0))>((v0.c0, v0.c0, v0.c0))) AS NUMERIC)) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 WHERE ((NOT (CAST((((v0.c0, v0.c0, v0.c0))>((v0.c0, v0.c0, v0.c0))) AS NUMERIC)))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 WHERE (((CAST((((v0.c0, v0.c0, v0.c0))>((v0.c0, v0.c0, v0.c0))) AS NUMERIC)) ISNULL));
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE (CAST(((0.9026764345478846)<=(vt1.c0)) AS BLOB)) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (CAST(((0.9026764345478846)<=(vt1.c0)) AS BLOB)))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE (((CAST(((0.9026764345478846)<=(vt1.c0)) AS BLOB)) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT ALL rt1.c1, v0.c0, rt1.c2, vt0.c0 FROM rt1, vt1, vt0 INNER JOIN v0 ON vt1.c0 GROUP BY rt1.c1, v0.c0, rt1.c2, vt0.c0;
SELECT ALL rt1.c1, v0.c0, rt1.c2, vt0.c0 FROM rt1, vt1, vt0 INNER JOIN v0 ON vt1.c0 WHERE ((CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c2 END IN ())) GROUP BY rt1.c1, v0.c0, rt1.c2, vt0.c0 UNION SELECT rt1.c1, v0.c0, rt1.c2, vt0.c0 FROM rt1, vt1, vt0 INNER JOIN v0 ON vt1.c0 WHERE ((NOT ((CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c2 END IN ())))) GROUP BY rt1.c1, v0.c0, rt1.c2, vt0.c0 UNION SELECT ALL rt1.c1, v0.c0, rt1.c2, vt0.c0 FROM rt1, vt1, vt0 INNER JOIN v0 ON vt1.c0 WHERE ((((CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c2 END IN ())) ISNULL)) GROUP BY rt1.c1, v0.c0, rt1.c2, vt0.c0;
SELECT ALL rt1.c1, v0.c0, rt1.c2, vt0.c0 FROM rt1, vt1, vt0 INNER JOIN v0 ON vt1.c0 GROUP BY rt1.c1, v0.c0, rt1.c2, vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING (((((+ (COUNT(*))))OR(CASE WHEN v0.c0 THEN MAX(v0.c0) END)))AND((+ (v0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING (NOT ((((((+ (COUNT(*))))OR(CASE WHEN v0.c0 THEN MAX(v0.c0) END)))AND((+ (v0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING (((((((+ (COUNT(*))))OR(CASE WHEN v0.c0 THEN MAX(v0.c0) END)))AND((+ (v0.c0))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING (((((+ (COUNT(*))))OR(CASE WHEN v0.c0 THEN MAX(v0.c0) END)))AND((+ (v0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING (NOT ((((((+ (COUNT(*))))OR(CASE WHEN v0.c0 THEN MAX(v0.c0) END)))AND((+ (v0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING (((((((+ (COUNT(*))))OR(CASE WHEN v0.c0 THEN MAX(v0.c0) END)))AND((+ (v0.c0))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT * FROM v0, rt1;
SELECT ALL * FROM v0, rt1 WHERE ((IFNULL(x'', rt1.c1) IN ())) UNION ALL SELECT * FROM v0, rt1 WHERE ((NOT ((IFNULL(x'', rt1.c1) IN ())))) UNION ALL SELECT ALL * FROM v0, rt1 WHERE ((((IFNULL(x'', rt1.c1) IN ())) ISNULL));
SELECT * FROM v0, rt1;
SELECT DISTINCT * FROM v0, rt1, vt0, vt1;
SELECT DISTINCT * FROM v0, rt1, vt0, vt1 WHERE (NULL) UNION SELECT DISTINCT * FROM v0, rt1, vt0, vt1 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM v0, rt1, vt0, vt1 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM v0, rt1, vt0, vt1;
SELECT ALL rt1.c2, rt1.c1, rt1.c0, vt0.c0 FROM vt1, rt1, vt0 GROUP BY rt1.c2, rt1.c1, rt1.c0, vt0.c0;
SELECT rt1.c2, rt1.c1, rt1.c0, vt0.c0 FROM vt1, rt1, vt0 WHERE ((((rt1.c2)) NOT BETWEEN ((((vt0.c0) NOTNULL))) AND ((((((((((((((x'')AND(rt1.c1)))AND(vt1.c0)))OR(rt1.c1)))OR(rt1.c2)))AND(vt1.c0)))OR(rt1.c1)))))) GROUP BY rt1.c2, rt1.c1, rt1.c0, vt0.c0 UNION SELECT ALL rt1.c2, rt1.c1, rt1.c0, vt0.c0 FROM vt1, rt1, vt0 NOT INDEXED WHERE ((NOT ((((rt1.c2)) NOT BETWEEN ((((vt0.c0) NOTNULL))) AND ((((((((((((((x'')AND(rt1.c1)))AND(vt1.c0)))OR(rt1.c1)))OR(rt1.c2)))AND(vt1.c0)))OR(rt1.c1)))))))) GROUP BY rt1.c2, rt1.c1, rt1.c0, vt0.c0 UNION SELECT ALL rt1.c2, rt1.c1, rt1.c0, vt0.c0 FROM vt1, rt1, vt0 WHERE ((((((rt1.c2)) NOT BETWEEN ((((vt0.c0) NOTNULL))) AND ((((((((((((((x'')AND(rt1.c1)))AND(vt1.c0)))OR(rt1.c1)))OR(rt1.c2)))AND(vt1.c0)))OR(rt1.c1)))))) ISNULL)) GROUP BY rt1.c2, rt1.c1, rt1.c0, vt0.c0;
SELECT ALL rt1.c2, rt1.c1, rt1.c0, vt0.c0 FROM vt1, rt1, vt0 GROUP BY rt1.c2, rt1.c1, rt1.c0, vt0.c0;
SELECT ALL vt0.c0, rt1.c2, vt1.c0, v0.c0, rt1.c1 FROM rt1, vt1, vt0 NATURAL JOIN v0 GROUP BY vt0.c0, rt1.c2, vt1.c0, v0.c0, rt1.c1;
SELECT vt0.c0, rt1.c2, vt1.c0, v0.c0, rt1.c1 FROM rt1, vt1, vt0 NATURAL JOIN v0 GROUP BY vt0.c0, rt1.c2, vt1.c0, v0.c0, rt1.c1 HAVING (~ (MAX(rt1.c1))) UNION ALL SELECT ALL vt0.c0, rt1.c2, vt1.c0, v0.c0, rt1.c1 FROM rt1, vt1, vt0 NATURAL JOIN v0 GROUP BY vt0.c0, rt1.c2, vt1.c0, v0.c0, rt1.c1 HAVING (NOT ((~ (MAX(rt1.c1))))) UNION ALL SELECT vt0.c0, rt1.c2, vt1.c0, v0.c0, rt1.c1 FROM rt1, vt1, vt0 NATURAL JOIN v0 GROUP BY vt0.c0, rt1.c2, vt1.c0, v0.c0, rt1.c1 HAVING (((~ (MAX(rt1.c1)))) ISNULL);
SELECT ALL vt0.c0, rt1.c2, vt1.c0, v0.c0, rt1.c1 FROM rt1, vt1, vt0 NATURAL JOIN v0 GROUP BY vt0.c0, rt1.c2, vt1.c0, v0.c0, rt1.c1;
SELECT vt0.c0, rt1.c2, vt1.c0, v0.c0, rt1.c1 FROM rt1, vt1, vt0 NATURAL JOIN v0 GROUP BY vt0.c0, rt1.c2, vt1.c0, v0.c0, rt1.c1 HAVING (~ (MAX(rt1.c1))) UNION ALL SELECT ALL vt0.c0, rt1.c2, vt1.c0, v0.c0, rt1.c1 FROM rt1, vt1, vt0 NATURAL JOIN v0 GROUP BY vt0.c0, rt1.c2, vt1.c0, v0.c0, rt1.c1 HAVING (NOT ((~ (MAX(rt1.c1))))) UNION ALL SELECT vt0.c0, rt1.c2, vt1.c0, v0.c0, rt1.c1 FROM rt1, vt1, vt0 NATURAL JOIN v0 GROUP BY vt0.c0, rt1.c2, vt1.c0, v0.c0, rt1.c1 HAVING (((~ (MAX(rt1.c1)))) ISNULL);
SELECT ALL vt0.c0, rt1.c2, vt1.c0, v0.c0, rt1.c1 FROM rt1, vt1, vt0 NATURAL JOIN v0 GROUP BY vt0.c0, rt1.c2, vt1.c0, v0.c0, rt1.c1;
SELECT ALL SUM((NOT (CAST(v0.c0 AS REAL)))) FROM v0 ORDER BY (((+ (v0.c0))) IS TRUE)  NULLS LAST;
SELECT ALL * FROM vt1, rt1 NATURAL JOIN vt0;
SELECT * FROM vt1, rt1 NATURAL JOIN vt0 WHERE (((((((vt0.c0)AND(rt1.c2)))OR((((rt1.c1)) BETWEEN ((vt0.c0)) AND ((rt1.c1))))))OR(((rt1.c2) ISNULL)))) UNION ALL SELECT ALL * FROM vt1, rt1 NATURAL JOIN vt0 WHERE ((NOT (((((((vt0.c0)AND(rt1.c2)))OR((((rt1.c1)) BETWEEN ((vt0.c0)) AND ((rt1.c1))))))OR(((rt1.c2) ISNULL)))))) UNION ALL SELECT * FROM vt1, rt1 NATURAL JOIN vt0 WHERE (((((((((vt0.c0)AND(rt1.c2)))OR((((rt1.c1)) BETWEEN ((vt0.c0)) AND ((rt1.c1))))))OR(((rt1.c2) ISNULL)))) ISNULL));
SELECT ALL * FROM vt1, rt1 NATURAL JOIN vt0;
SELECT DISTINCT v0.c0, rt1.c0, rt1.c2, vt1.c0, vt0.c0, rt1.c1 FROM v0, vt0, rt1, vt1;
SELECT DISTINCT v0.c0, rt1.c0, rt1.c2, vt1.c0, vt0.c0, rt1.c1 FROM v0, vt0, rt1, vt1 WHERE (((((((rt1.c0) BETWEEN ('f-8_u *O''') AND (vt0.c0)))AND(vt0.c0 COLLATE BINARY)))AND(TRIM(DISTINCT rt1.c0)))) UNION SELECT DISTINCT v0.c0, rt1.c0, rt1.c2, vt1.c0, vt0.c0, rt1.c1 FROM v0, vt0, rt1, vt1 WHERE ((NOT (((((((rt1.c0) BETWEEN ('f-8_u *O''') AND (vt0.c0)))AND(vt0.c0 COLLATE BINARY)))AND(TRIM(DISTINCT rt1.c0)))))) UNION SELECT DISTINCT v0.c0, rt1.c0, rt1.c2, vt1.c0, vt0.c0, rt1.c1 FROM v0, vt0, rt1, vt1 WHERE (((((((((rt1.c0) BETWEEN ('f-8_u *O''') AND (vt0.c0)))AND(vt0.c0 COLLATE BINARY)))AND(TRIM(DISTINCT rt1.c0)))) ISNULL));
SELECT DISTINCT v0.c0, rt1.c0, rt1.c2, vt1.c0, vt0.c0, rt1.c1 FROM v0, vt0, rt1, vt1;
SELECT ALL vt0.c0 FROM vt0 CROSS JOIN v0 ON ((((0.68614839083352)<<(v0.c0)))<<(((v0.c0) IS FALSE))) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 CROSS JOIN v0 ON ((((0.68614839083352)<<(v0.c0)))<<(((v0.c0) IS FALSE))) WHERE ((((vt0.c0, vt0.c0, v0.c0)) BETWEEN ((((vt0.c0) NOTNULL), CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN 1.724105309E9 THEN v0.c0 ELSE '1223431579' END, 0.20647014783077566 COLLATE RTRIM)) AND (((v0.c0 IN ()), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)), vt0.c0)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 CROSS JOIN v0 ON ((((0.68614839083352)<<(v0.c0)))<<(((v0.c0) IS FALSE))) WHERE ((NOT ((((vt0.c0, vt0.c0, v0.c0)) BETWEEN ((((vt0.c0) NOTNULL), CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN 1.724105309E9 THEN v0.c0 ELSE '1223431579' END, 0.20647014783077566 COLLATE RTRIM)) AND (((v0.c0 IN ()), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)), vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 CROSS JOIN v0 ON ((((0.68614839083352)<<(v0.c0)))<<(((v0.c0) IS FALSE))) WHERE ((((((vt0.c0, vt0.c0, v0.c0)) BETWEEN ((((vt0.c0) NOTNULL), CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN 1.724105309E9 THEN v0.c0 ELSE '1223431579' END, 0.20647014783077566 COLLATE RTRIM)) AND (((v0.c0 IN ()), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)), vt0.c0)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 CROSS JOIN v0 ON ((((0.68614839083352)<<(v0.c0)))<<(((v0.c0) IS FALSE))) GROUP BY vt0.c0;
SELECT ALL vt1.c0 FROM vt1 CROSS JOIN rt1 ON ((((vt1.c0 IN ()), (((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((vt1.c0))), ((vt1.c0)>>(x'3b82')), (('-1723224318')&(rt1.c0)), CASE WHEN -1.10910575E9 THEN rt1.c0 END))>((UNLIKELY(rt1.c1), LTRIM(rt1.c0), ((rt1.c1) BETWEEN (rt1.c1) AND (v0.c0)), CASE rt1.c2  WHEN rt1.c0 THEN rt1.c2 END, ((vt1.c0) ISNULL)))) INNER JOIN v0 ON rt1.c1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 CROSS JOIN rt1 ON ((((vt1.c0 IN ()), (((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((vt1.c0))), ((vt1.c0)>>(x'3b82')), (('-1723224318')&(rt1.c0)), CASE WHEN -1.10910575E9 THEN rt1.c0 END))>((UNLIKELY(rt1.c1), LTRIM(rt1.c0), ((rt1.c1) BETWEEN (rt1.c1) AND (v0.c0)), CASE rt1.c2  WHEN rt1.c0 THEN rt1.c2 END, ((vt1.c0) ISNULL)))) INNER JOIN v0 ON rt1.c1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0 FROM vt1 CROSS JOIN rt1 ON ((((vt1.c0 IN ()), (((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((vt1.c0))), ((vt1.c0)>>(x'3b82')), (('-1723224318')&(rt1.c0)), CASE WHEN -1.10910575E9 THEN rt1.c0 END))>((UNLIKELY(rt1.c1), LTRIM(rt1.c0), ((rt1.c1) BETWEEN (rt1.c1) AND (v0.c0)), CASE rt1.c2  WHEN rt1.c0 THEN rt1.c2 END, ((vt1.c0) ISNULL)))) INNER JOIN v0 ON rt1.c1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0 FROM vt1 CROSS JOIN rt1 ON ((((vt1.c0 IN ()), (((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((vt1.c0))), ((vt1.c0)>>(x'3b82')), (('-1723224318')&(rt1.c0)), CASE WHEN -1.10910575E9 THEN rt1.c0 END))>((UNLIKELY(rt1.c1), LTRIM(rt1.c0), ((rt1.c1) BETWEEN (rt1.c1) AND (v0.c0)), CASE rt1.c2  WHEN rt1.c0 THEN rt1.c2 END, ((vt1.c0) ISNULL)))) INNER JOIN v0 ON rt1.c1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 CROSS JOIN rt1 ON ((((vt1.c0 IN ()), (((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((vt1.c0))), ((vt1.c0)>>(x'3b82')), (('-1723224318')&(rt1.c0)), CASE WHEN -1.10910575E9 THEN rt1.c0 END))>((UNLIKELY(rt1.c1), LTRIM(rt1.c0), ((rt1.c1) BETWEEN (rt1.c1) AND (v0.c0)), CASE rt1.c2  WHEN rt1.c0 THEN rt1.c2 END, ((vt1.c0) ISNULL)))) INNER JOIN v0 ON rt1.c1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 CROSS JOIN rt1 ON ((((vt1.c0 IN ()), (((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((vt1.c0))), ((vt1.c0)>>(x'3b82')), (('-1723224318')&(rt1.c0)), CASE WHEN -1.10910575E9 THEN rt1.c0 END))>((UNLIKELY(rt1.c1), LTRIM(rt1.c0), ((rt1.c1) BETWEEN (rt1.c1) AND (v0.c0)), CASE rt1.c2  WHEN rt1.c0 THEN rt1.c2 END, ((vt1.c0) ISNULL)))) INNER JOIN v0 ON rt1.c1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0 FROM vt1 CROSS JOIN rt1 ON ((((vt1.c0 IN ()), (((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((vt1.c0))), ((vt1.c0)>>(x'3b82')), (('-1723224318')&(rt1.c0)), CASE WHEN -1.10910575E9 THEN rt1.c0 END))>((UNLIKELY(rt1.c1), LTRIM(rt1.c0), ((rt1.c1) BETWEEN (rt1.c1) AND (v0.c0)), CASE rt1.c2  WHEN rt1.c0 THEN rt1.c2 END, ((vt1.c0) ISNULL)))) INNER JOIN v0 ON rt1.c1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0 FROM vt1 CROSS JOIN rt1 ON ((((vt1.c0 IN ()), (((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((vt1.c0))), ((vt1.c0)>>(x'3b82')), (('-1723224318')&(rt1.c0)), CASE WHEN -1.10910575E9 THEN rt1.c0 END))>((UNLIKELY(rt1.c1), LTRIM(rt1.c0), ((rt1.c1) BETWEEN (rt1.c1) AND (v0.c0)), CASE rt1.c2  WHEN rt1.c0 THEN rt1.c2 END, ((vt1.c0) ISNULL)))) INNER JOIN v0 ON rt1.c1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 CROSS JOIN rt1 ON ((((vt1.c0 IN ()), (((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((vt1.c0))), ((vt1.c0)>>(x'3b82')), (('-1723224318')&(rt1.c0)), CASE WHEN -1.10910575E9 THEN rt1.c0 END))>((UNLIKELY(rt1.c1), LTRIM(rt1.c0), ((rt1.c1) BETWEEN (rt1.c1) AND (v0.c0)), CASE rt1.c2  WHEN rt1.c0 THEN rt1.c2 END, ((vt1.c0) ISNULL)))) INNER JOIN v0 ON rt1.c1 GROUP BY vt1.c0;
SELECT vt1.c0, v0.c0 FROM v0, vt1;
SELECT vt1.c0, v0.c0 FROM v0, vt1 WHERE ((((+ (NULL)))%(((v0.c0) IS TRUE)))) UNION ALL SELECT ALL vt1.c0, v0.c0 FROM v0, vt1 WHERE ((NOT ((((+ (NULL)))%(((v0.c0) IS TRUE)))))) UNION ALL SELECT vt1.c0, v0.c0 FROM v0, vt1 WHERE ((((((+ (NULL)))%(((v0.c0) IS TRUE)))) ISNULL));
SELECT vt1.c0, v0.c0 FROM v0, vt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT rt1.c1, v0.c0, vt1.c0, rt1.c0, rt1.c2 FROM v0, rt1 CROSS JOIN vt1 ON ((rt1.c1)IS NOT(((vt1.c0)>(v0.c0)))) GROUP BY rt1.c1, v0.c0, vt1.c0, rt1.c0, rt1.c2;
SELECT ALL rt1.c1, v0.c0, vt1.c0, rt1.c0, rt1.c2 FROM v0, rt1 CROSS JOIN vt1 ON ((rt1.c1)IS NOT(((vt1.c0)>(v0.c0)))) WHERE ((((vt1.c0, rt1.c2, vt1.c0)) BETWEEN ((rt1.c2, rt1.c2, rt1.c1)) AND ((rt1.c0, rt1.c2, x''))) COLLATE BINARY) GROUP BY rt1.c1, v0.c0, vt1.c0, rt1.c0, rt1.c2 UNION SELECT rt1.c1, v0.c0, vt1.c0, rt1.c0, rt1.c2 FROM v0, rt1 CROSS JOIN vt1 ON ((rt1.c1)IS NOT(((vt1.c0)>(v0.c0)))) WHERE ((NOT ((((vt1.c0, rt1.c2, vt1.c0)) BETWEEN ((rt1.c2, rt1.c2, rt1.c1)) AND ((rt1.c0, rt1.c2, x''))) COLLATE BINARY))) GROUP BY rt1.c1, v0.c0, vt1.c0, rt1.c0, rt1.c2 UNION SELECT rt1.c1, v0.c0, vt1.c0, rt1.c0, rt1.c2 FROM v0, rt1 CROSS JOIN vt1 ON ((rt1.c1)IS NOT(((vt1.c0)>(v0.c0)))) WHERE ((((((vt1.c0, rt1.c2, vt1.c0)) BETWEEN ((rt1.c2, rt1.c2, rt1.c1)) AND ((rt1.c0, rt1.c2, x''))) COLLATE BINARY) ISNULL)) GROUP BY rt1.c1, v0.c0, vt1.c0, rt1.c0, rt1.c2;
SELECT rt1.c1, v0.c0, vt1.c0, rt1.c0, rt1.c2 FROM v0, rt1 CROSS JOIN vt1 ON ((rt1.c1)IS NOT(((vt1.c0)>(v0.c0)))) GROUP BY rt1.c1, v0.c0, vt1.c0, rt1.c0, rt1.c2;
SELECT vt1.c0, rt1.c1, rt1.c0, rt1.c2 FROM vt1, rt1, v0, vt0 GROUP BY vt1.c0, rt1.c1, rt1.c0, rt1.c2;
SELECT vt1.c0, rt1.c1, rt1.c0, rt1.c2 FROM vt1, rt1, v0, vt0 GROUP BY vt1.c0, rt1.c1, rt1.c0, rt1.c2 HAVING MIN(MIN(v0.c0)) UNION ALL SELECT vt1.c0, rt1.c1, rt1.c0, rt1.c2 FROM vt1, rt1, v0, vt0 GROUP BY vt1.c0, rt1.c1, rt1.c0, rt1.c2 HAVING (NOT (MIN(MIN(v0.c0)))) UNION ALL SELECT ALL vt1.c0, rt1.c1, rt1.c0, rt1.c2 FROM vt1, rt1, v0, vt0 GROUP BY vt1.c0, rt1.c1, rt1.c0, rt1.c2 HAVING ((MIN(MIN(v0.c0))) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c0)<<(-2.03861211E8)) THEN vt0.c0 END) UNION ALL SELECT * FROM vt0 WHERE ((NOT (CASE WHEN ((vt0.c0)<<(-2.03861211E8)) THEN vt0.c0 END))) UNION ALL SELECT ALL * FROM vt0 WHERE (((CASE WHEN ((vt0.c0)<<(-2.03861211E8)) THEN vt0.c0 END) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM rt1, v0, vt0;
SELECT DISTINCT * FROM rt1, v0, vt0 WHERE (((((v0.c0) BETWEEN (rt1.c2) AND (vt0.c0)))<=(NULL))) UNION SELECT DISTINCT * FROM rt1, v0, vt0 WHERE ((NOT (((((v0.c0) BETWEEN (rt1.c2) AND (vt0.c0)))<=(NULL))))) UNION SELECT DISTINCT * FROM rt1, v0, vt0 WHERE (((((((v0.c0) BETWEEN (rt1.c2) AND (vt0.c0)))<=(NULL))) ISNULL));
SELECT DISTINCT * FROM rt1, v0, vt0;
SELECT rt1.c2, v0.c0, rt1.c1, vt0.c0 FROM v0, vt0, rt1 GROUP BY rt1.c2, v0.c0, rt1.c1, vt0.c0;
SELECT rt1.c2, v0.c0, rt1.c1, vt0.c0 FROM v0, vt0, rt1 WHERE (((((((NULL)*(rt1.c0)))AND(v0.c0)))OR(((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1))))) GROUP BY rt1.c2, v0.c0, rt1.c1, vt0.c0 UNION SELECT ALL rt1.c2, v0.c0, rt1.c1, vt0.c0 FROM v0, vt0, rt1 WHERE ((NOT (((((((NULL)*(rt1.c0)))AND(v0.c0)))OR(((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1))))))) GROUP BY rt1.c2, v0.c0, rt1.c1, vt0.c0 UNION SELECT rt1.c2, v0.c0, rt1.c1, vt0.c0 FROM v0, vt0, rt1 WHERE (((((((((NULL)*(rt1.c0)))AND(v0.c0)))OR(((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1))))) ISNULL)) GROUP BY rt1.c2, v0.c0, rt1.c1, vt0.c0;
SELECT rt1.c2, v0.c0, rt1.c1, vt0.c0 FROM v0, vt0, rt1 GROUP BY rt1.c2, v0.c0, rt1.c1, vt0.c0;
SELECT ALL rt1.c1, rt1.c0 FROM vt0, v0, vt1, rt1 GROUP BY rt1.c1, rt1.c0;
SELECT ALL rt1.c1, rt1.c0 FROM vt0, v0, vt1, rt1 GROUP BY rt1.c1, rt1.c0 HAVING ((((v0.c0)|(AVG(COUNT(*)))))>>(TOTAL(rt1.c0))) UNION ALL SELECT ALL rt1.c1, rt1.c0 FROM vt0, v0, vt1, rt1 GROUP BY rt1.c1, rt1.c0 HAVING (NOT (((((v0.c0)|(AVG(COUNT(*)))))>>(TOTAL(rt1.c0))))) UNION ALL SELECT rt1.c1, rt1.c0 FROM vt0, v0, vt1, rt1 GROUP BY rt1.c1, rt1.c0 HAVING ((((((v0.c0)|(AVG(COUNT(*)))))>>(TOTAL(rt1.c0)))) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE ((((((vt1.c0 IN ()))OR(vt1.c0)))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((((vt1.c0 IN ()))OR(vt1.c0)))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((((((((vt1.c0 IN ()))OR(vt1.c0)))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt1 INNER JOIN vt0 ON ((CASE v0.c0  WHEN vt1.c0 THEN v0.c0 ELSE vt1.c0 END) NOT BETWEEN ((vt0.c0 IN ())) AND (NULL)) FULL OUTER JOIN v0 ON ((((vt1.c0)!=(vt0.c0))) NOTNULL);
SELECT v0.c0, rt1.c2, rt1.c0 FROM rt1, vt1, v0 GROUP BY v0.c0, rt1.c2, rt1.c0;
SELECT ALL v0.c0, rt1.c2, rt1.c0 FROM rt1, vt1, v0 WHERE (((((v0.c0) IS FALSE))>>((rt1.c0 IN (vt1.c0))))) GROUP BY v0.c0, rt1.c2, rt1.c0 UNION SELECT v0.c0, rt1.c2, rt1.c0 FROM rt1, vt1, v0 WHERE ((NOT (((((v0.c0) IS FALSE))>>((rt1.c0 IN (vt1.c0))))))) GROUP BY v0.c0, rt1.c2, rt1.c0 UNION SELECT v0.c0, rt1.c2, rt1.c0 FROM rt1, vt1, v0 WHERE (((((((v0.c0) IS FALSE))>>((rt1.c0 IN (vt1.c0))))) ISNULL)) GROUP BY v0.c0, rt1.c2, rt1.c0;
SELECT v0.c0, rt1.c2, rt1.c0 FROM rt1, vt1, v0 GROUP BY v0.c0, rt1.c2, rt1.c0;
SELECT ALL vt1.c0, rt1.c2, rt1.c1, v0.c0 FROM rt1 INNER JOIN vt0 ON (((((rt1.c0))<=((-1e500)))) IS TRUE) INNER JOIN vt1 ON (((v0.c0, rt1.c2, rt1.c2)) BETWEEN ((v0.c0, rt1.c0, vt1.c0)) AND ((vt0.c0, vt0.c0, rt1.c2))) COLLATE RTRIM LEFT OUTER JOIN v0 ON ((CASE WHEN 9.5326408E7 THEN 0.820354392051305 ELSE v0.c0 END)-(((vt0.c0) NOTNULL))) GROUP BY vt1.c0, rt1.c2, rt1.c1, v0.c0;
SELECT vt1.c0, rt1.c2, rt1.c1, v0.c0 FROM rt1 INNER JOIN vt0 ON (((((rt1.c0))<=((-1e500)))) IS TRUE) INNER JOIN vt1 ON (((v0.c0, rt1.c2, rt1.c2)) BETWEEN ((v0.c0, rt1.c0, vt1.c0)) AND ((vt0.c0, vt0.c0, rt1.c2))) COLLATE RTRIM LEFT OUTER JOIN v0 ON ((CASE WHEN 9.5326408E7 THEN 0.820354392051305 ELSE v0.c0 END)-(((vt0.c0) NOTNULL))) GROUP BY vt1.c0, rt1.c2, rt1.c1, v0.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0, rt1.c2, rt1.c1, v0.c0 FROM rt1 INNER JOIN vt0 ON (((((rt1.c0))<=((-1e500)))) IS TRUE) INNER JOIN vt1 ON (((v0.c0, rt1.c2, rt1.c2)) BETWEEN ((v0.c0, rt1.c0, vt1.c0)) AND ((vt0.c0, vt0.c0, rt1.c2))) COLLATE RTRIM LEFT OUTER JOIN v0 ON ((CASE WHEN 9.5326408E7 THEN 0.820354392051305 ELSE v0.c0 END)-(((vt0.c0) NOTNULL))) GROUP BY vt1.c0, rt1.c2, rt1.c1, v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0, rt1.c2, rt1.c1, v0.c0 FROM rt1 INNER JOIN vt0 ON (((((rt1.c0))<=((-1e500)))) IS TRUE) INNER JOIN vt1 ON (((v0.c0, rt1.c2, rt1.c2)) BETWEEN ((v0.c0, rt1.c0, vt1.c0)) AND ((vt0.c0, vt0.c0, rt1.c2))) COLLATE RTRIM LEFT OUTER JOIN v0 ON ((CASE WHEN 9.5326408E7 THEN 0.820354392051305 ELSE v0.c0 END)-(((vt0.c0) NOTNULL))) GROUP BY vt1.c0, rt1.c2, rt1.c1, v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0, rt1.c2, rt1.c1, v0.c0 FROM rt1 INNER JOIN vt0 ON (((((rt1.c0))<=((-1e500)))) IS TRUE) INNER JOIN vt1 ON (((v0.c0, rt1.c2, rt1.c2)) BETWEEN ((v0.c0, rt1.c0, vt1.c0)) AND ((vt0.c0, vt0.c0, rt1.c2))) COLLATE RTRIM LEFT OUTER JOIN v0 ON ((CASE WHEN 9.5326408E7 THEN 0.820354392051305 ELSE v0.c0 END)-(((vt0.c0) NOTNULL))) GROUP BY vt1.c0, rt1.c2, rt1.c1, v0.c0;
SELECT vt1.c0, rt1.c2, rt1.c1, v0.c0 FROM rt1 INNER JOIN vt0 ON (((((rt1.c0))<=((-1e500)))) IS TRUE) INNER JOIN vt1 ON (((v0.c0, rt1.c2, rt1.c2)) BETWEEN ((v0.c0, rt1.c0, vt1.c0)) AND ((vt0.c0, vt0.c0, rt1.c2))) COLLATE RTRIM LEFT OUTER JOIN v0 ON ((CASE WHEN 9.5326408E7 THEN 0.820354392051305 ELSE v0.c0 END)-(((vt0.c0) NOTNULL))) GROUP BY vt1.c0, rt1.c2, rt1.c1, v0.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0, rt1.c2, rt1.c1, v0.c0 FROM rt1 INNER JOIN vt0 ON (((((rt1.c0))<=((-1e500)))) IS TRUE) INNER JOIN vt1 ON (((v0.c0, rt1.c2, rt1.c2)) BETWEEN ((v0.c0, rt1.c0, vt1.c0)) AND ((vt0.c0, vt0.c0, rt1.c2))) COLLATE RTRIM LEFT OUTER JOIN v0 ON ((CASE WHEN 9.5326408E7 THEN 0.820354392051305 ELSE v0.c0 END)-(((vt0.c0) NOTNULL))) GROUP BY vt1.c0, rt1.c2, rt1.c1, v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0, rt1.c2, rt1.c1, v0.c0 FROM rt1 INNER JOIN vt0 ON (((((rt1.c0))<=((-1e500)))) IS TRUE) INNER JOIN vt1 ON (((v0.c0, rt1.c2, rt1.c2)) BETWEEN ((v0.c0, rt1.c0, vt1.c0)) AND ((vt0.c0, vt0.c0, rt1.c2))) COLLATE RTRIM LEFT OUTER JOIN v0 ON ((CASE WHEN 9.5326408E7 THEN 0.820354392051305 ELSE v0.c0 END)-(((vt0.c0) NOTNULL))) GROUP BY vt1.c0, rt1.c2, rt1.c1, v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0, rt1.c2, rt1.c1, v0.c0 FROM rt1 INNER JOIN vt0 ON (((((rt1.c0))<=((-1e500)))) IS TRUE) INNER JOIN vt1 ON (((v0.c0, rt1.c2, rt1.c2)) BETWEEN ((v0.c0, rt1.c0, vt1.c0)) AND ((vt0.c0, vt0.c0, rt1.c2))) COLLATE RTRIM LEFT OUTER JOIN v0 ON ((CASE WHEN 9.5326408E7 THEN 0.820354392051305 ELSE v0.c0 END)-(((vt0.c0) NOTNULL))) GROUP BY vt1.c0, rt1.c2, rt1.c1, v0.c0;
SELECT ALL vt1.c0, v0.c0 FROM v0 NATURAL JOIN vt1;
SELECT vt1.c0, v0.c0 FROM v0 NATURAL JOIN vt1 WHERE (SQLITE_SOURCE_ID()) UNION ALL SELECT vt1.c0, v0.c0 FROM v0 NATURAL JOIN vt1 WHERE ((NOT (SQLITE_SOURCE_ID()))) UNION ALL SELECT ALL vt1.c0, v0.c0 FROM v0 NATURAL JOIN vt1 WHERE (((SQLITE_SOURCE_ID()) ISNULL));
SELECT ALL vt1.c0, v0.c0 FROM v0 NATURAL JOIN vt1;
SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM rt1 FULL OUTER JOIN v0 ON json_array_length(CAST(v0.c0 AS TEXT));
SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM rt1 FULL OUTER JOIN v0 ON json_array_length(CAST(v0.c0 AS TEXT)) WHERE (CASE COALESCE(v0.c0, rt1.c2, rt1.c1, v0.c0)  WHEN ((rt1.c1) ISNULL) THEN (NOT (v0.c0)) ELSE ((v0.c0)|(rt1.c2)) END) UNION SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM rt1 FULL OUTER JOIN v0 ON json_array_length(CAST(v0.c0 AS TEXT)) WHERE ((NOT (CASE COALESCE(v0.c0, rt1.c2, rt1.c1, v0.c0)  WHEN ((rt1.c1) ISNULL) THEN (NOT (v0.c0)) ELSE ((v0.c0)|(rt1.c2)) END))) UNION SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM rt1 FULL OUTER JOIN v0 ON json_array_length(CAST(v0.c0 AS TEXT)) WHERE (((CASE COALESCE(v0.c0, rt1.c2, rt1.c1, v0.c0)  WHEN ((rt1.c1) ISNULL) THEN (NOT (v0.c0)) ELSE ((v0.c0)|(rt1.c2)) END) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM rt1 FULL OUTER JOIN v0 ON json_array_length(CAST(v0.c0 AS TEXT));
SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1 WHERE (((((x'')OR(rt1.c0)))<=(CAST(rt1.c2 AS BLOB)))) GROUP BY rt1.c2 UNION SELECT ALL rt1.c2 FROM rt1 NOT INDEXED WHERE ((NOT (((((x'')OR(rt1.c0)))<=(CAST(rt1.c2 AS BLOB)))))) GROUP BY rt1.c2 UNION SELECT rt1.c2 FROM rt1 WHERE (((((((x'')OR(rt1.c0)))<=(CAST(rt1.c2 AS BLOB)))) ISNULL)) GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING ((AVG(GROUP_CONCAT(rt1.c1))) NOT BETWEEN (AVG(MIN(rt1.c2))) AND (rt1.c0)) COLLATE NOCASE UNION ALL SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING (NOT (((AVG(GROUP_CONCAT(rt1.c1))) NOT BETWEEN (AVG(MIN(rt1.c2))) AND (rt1.c0)) COLLATE NOCASE)) UNION ALL SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING ((((AVG(GROUP_CONCAT(rt1.c1))) NOT BETWEEN (AVG(MIN(rt1.c2))) AND (rt1.c0)) COLLATE NOCASE) ISNULL);
SELECT ALL TOTAL(rt1.c0) FROM rt1, v0, vt1, vt0;
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((NULL)AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((NULL)AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((((NULL)AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT rt1.c2, vt0.c0, rt1.c0, vt1.c0, v0.c0, rt1.c1 FROM v0, rt1, vt0, vt1;
SELECT DISTINCT rt1.c2, vt0.c0, rt1.c0, vt1.c0, v0.c0, rt1.c1 FROM v0, rt1, vt0, vt1 WHERE (CAST(CASE WHEN vt0.c0 THEN rt1.c0 WHEN vt1.c0 THEN rt1.c1 WHEN vt1.c0 THEN rt1.c0 END AS NUMERIC)) UNION SELECT DISTINCT rt1.c2, vt0.c0, rt1.c0, vt1.c0, v0.c0, rt1.c1 FROM v0, rt1, vt0, vt1 WHERE ((NOT (CAST(CASE WHEN vt0.c0 THEN rt1.c0 WHEN vt1.c0 THEN rt1.c1 WHEN vt1.c0 THEN rt1.c0 END AS NUMERIC)))) UNION SELECT DISTINCT rt1.c2, vt0.c0, rt1.c0, vt1.c0, v0.c0, rt1.c1 FROM v0, rt1, vt0, vt1 WHERE (((CAST(CASE WHEN vt0.c0 THEN rt1.c0 WHEN vt1.c0 THEN rt1.c1 WHEN vt1.c0 THEN rt1.c0 END AS NUMERIC)) ISNULL));
SELECT DISTINCT rt1.c2, vt0.c0, rt1.c0, vt1.c0, v0.c0, rt1.c1 FROM v0, rt1, vt0, vt1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CAST(((vt0.c0)IS NOT(vt0.c0)) AS INTEGER)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CAST(((vt0.c0)IS NOT(vt0.c0)) AS INTEGER)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST(((vt0.c0)IS NOT(vt0.c0)) AS INTEGER)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt1.c0, v0.c0 FROM v0, rt1 NOT INDEXED GROUP BY rt1.c0, v0.c0;
SELECT ALL rt1.c0, v0.c0 FROM v0, rt1 GROUP BY rt1.c0, v0.c0 HAVING 0.5527189453307537 UNION ALL SELECT ALL rt1.c0, v0.c0 FROM v0, rt1 GROUP BY rt1.c0, v0.c0 HAVING (NOT (0.5527189453307537)) UNION ALL SELECT rt1.c0, v0.c0 FROM v0, rt1 GROUP BY rt1.c0, v0.c0 HAVING ((0.5527189453307537) ISNULL);
SELECT ALL rt1.c0, v0.c0 FROM v0, rt1 NOT INDEXED GROUP BY rt1.c0, v0.c0;
SELECT ALL rt1.c0, v0.c0 FROM v0, rt1 GROUP BY rt1.c0, v0.c0 HAVING 0.5527189453307537 UNION ALL SELECT ALL rt1.c0, v0.c0 FROM v0, rt1 GROUP BY rt1.c0, v0.c0 HAVING (NOT (0.5527189453307537)) UNION ALL SELECT rt1.c0, v0.c0 FROM v0, rt1 GROUP BY rt1.c0, v0.c0 HAVING ((0.5527189453307537) ISNULL);
SELECT ALL rt1.c0, v0.c0 FROM v0, rt1 NOT INDEXED GROUP BY rt1.c0, v0.c0;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (((((NULL)*(vt0.c0))) NOT BETWEEN (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) AND ((vt0.c0 IN ())))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((((NULL)*(vt0.c0))) NOT BETWEEN (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) AND ((vt0.c0 IN ())))))) UNION ALL SELECT * FROM vt0 WHERE (((((((NULL)*(vt0.c0))) NOT BETWEEN (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) AND ((vt0.c0 IN ())))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE (((0Xffffffffb7dce84d) IS TRUE)) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (((0xffffffffb7dce84d) IS TRUE)))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE (((((0Xffffffffb7dce84d) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT rt1.c0 FROM rt1 WHERE (((CAST(rt1.c0 AS REAL))*((rt1.c0 IN ())))) GROUP BY rt1.c0 UNION SELECT ALL rt1.c0 FROM rt1 WHERE ((NOT (((CAST(rt1.c0 AS REAL))*((rt1.c0 IN ())))))) GROUP BY rt1.c0 UNION SELECT ALL rt1.c0 FROM rt1 WHERE (((((CAST(rt1.c0 AS REAL))*((rt1.c0 IN ())))) ISNULL)) GROUP BY rt1.c0;
SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL(v0.c0))|(COUNT(*))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((TOTAL(v0.c0))|(COUNT(*))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((TOTAL(v0.c0))|(COUNT(*)))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL(v0.c0))|(COUNT(*))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((TOTAL(v0.c0))|(COUNT(*))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((TOTAL(v0.c0))|(COUNT(*)))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL SUM((((((((((- (v0.c0)))OR(((v0.c0)<=(v0.c0)))))AND(((((v0.c0)AND(v0.c0)))OR(v0.c0)))))AND((NOT (v0.c0)))))OR(v0.c0 COLLATE RTRIM))) FROM v0;
SELECT rt1.c1, v0.c0, rt1.c0, rt1.c2, vt0.c0 FROM rt1, v0, vt0, vt1;
SELECT rt1.c1, v0.c0, rt1.c0, rt1.c2, vt0.c0 FROM rt1, v0, vt0, vt1 WHERE (-369741139) UNION ALL SELECT ALL rt1.c1, v0.c0, rt1.c0, rt1.c2, vt0.c0 FROM rt1, v0, vt0, vt1 WHERE ((NOT (-369741139))) UNION ALL SELECT rt1.c1, v0.c0, rt1.c0, rt1.c2, vt0.c0 FROM rt1, v0, vt0, vt1 WHERE (((-369741139) ISNULL));
SELECT rt1.c1, v0.c0, rt1.c0, rt1.c2, vt0.c0 FROM rt1, v0, vt0, vt1;
SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0, rt1 FULL OUTER JOIN vt1 ON (((((((((((vt1.c0))!=((rt1.c2))))OR(((rt1.c2)%(rt1.c1)))))OR(((rt1.c2)<=(vt0.c0)))))OR(x'')))OR(IFNULL(v0.c0, vt0.c0)));
SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0, rt1 FULL OUTER JOIN vt1 ON (((((((((((vt1.c0))!=((rt1.c2))))OR(((rt1.c2)%(rt1.c1)))))OR(((rt1.c2)<=(vt0.c0)))))OR(x'')))OR(IFNULL(v0.c0, vt0.c0))) WHERE (CAST(CAST(x'' AS REAL) AS TEXT)) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0, rt1 FULL OUTER JOIN vt1 ON (((((((((((vt1.c0))!=((rt1.c2))))OR(((rt1.c2)%(rt1.c1)))))OR(((rt1.c2)<=(vt0.c0)))))OR(x'')))OR(IFNULL(v0.c0, vt0.c0))) WHERE ((NOT (CAST(CAST(x'' AS REAL) AS TEXT)))) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0, rt1 FULL OUTER JOIN vt1 ON (((((((((((vt1.c0))<>((rt1.c2))))OR(((rt1.c2)%(rt1.c1)))))OR(((rt1.c2)<=(vt0.c0)))))OR(x'')))OR(IFNULL(v0.c0, vt0.c0))) WHERE (((CAST(CAST(x'' AS REAL) AS TEXT)) ISNULL));
SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0, rt1 FULL OUTER JOIN vt1 ON (((((((((((vt1.c0))!=((rt1.c2))))OR(((rt1.c2)%(rt1.c1)))))OR(((rt1.c2)<=(vt0.c0)))))OR(x'')))OR(IFNULL(v0.c0, vt0.c0)));
SELECT ALL rt1.c2 FROM rt1, vt0 GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1, vt0 WHERE (CASE ((rt1.c1)-(vt0.c0))  WHEN (0.30906773587593295 IN ()) THEN rt1.c2 END) GROUP BY rt1.c2 UNION SELECT ALL rt1.c2 FROM rt1, vt0 WHERE ((NOT (CASE ((rt1.c1)-(vt0.c0))  WHEN (0.30906773587593295 IN ()) THEN rt1.c2 END))) GROUP BY rt1.c2 UNION SELECT ALL rt1.c2 FROM rt1, vt0 WHERE (((CASE ((rt1.c1)-(vt0.c0))  WHEN (0.30906773587593295 IN ()) THEN rt1.c2 END) ISNULL)) GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1, vt0 GROUP BY rt1.c2;
SELECT rt1.c2 FROM v0, rt1, vt0, vt1 GROUP BY rt1.c2;
SELECT rt1.c2 FROM v0, rt1, vt0, vt1 GROUP BY rt1.c2 HAVING COUNT('-692695487') UNION ALL SELECT rt1.c2 FROM v0, rt1, vt0, vt1 GROUP BY rt1.c2 HAVING (NOT (COUNT('-692695487'))) UNION ALL SELECT ALL rt1.c2 FROM v0, rt1, vt0, vt1 GROUP BY rt1.c2 HAVING ((COUNT('-692695487')) ISNULL);
SELECT rt1.c2 FROM v0, rt1, vt0, vt1 GROUP BY rt1.c2;
SELECT rt1.c2 FROM v0, rt1, vt0, vt1 GROUP BY rt1.c2 HAVING COUNT('-692695487') UNION ALL SELECT rt1.c2 FROM v0, rt1, vt0, vt1 GROUP BY rt1.c2 HAVING (NOT (COUNT('-692695487'))) UNION ALL SELECT ALL rt1.c2 FROM v0, rt1, vt0, vt1 GROUP BY rt1.c2 HAVING ((COUNT('-692695487')) ISNULL);
SELECT rt1.c2 FROM v0, rt1, vt0, vt1 GROUP BY rt1.c2;
SELECT ALL rt1.c1 FROM rt1;
SELECT ALL rt1.c1 FROM rt1 WHERE (CAST(((rt1.c2)-(rt1.c0)) AS NUMERIC)) UNION ALL SELECT rt1.c1 FROM rt1 WHERE ((NOT (CAST(((rt1.c2)-(rt1.c0)) AS NUMERIC)))) UNION ALL SELECT ALL rt1.c1 FROM rt1 WHERE (((CAST(((rt1.c2)-(rt1.c0)) AS NUMERIC)) ISNULL));
SELECT ALL rt1.c1 FROM rt1;
SELECT DISTINCT rt1.c2, vt1.c0, rt1.c1 FROM rt1 INNER JOIN vt1 ON CASE WHEN CAST(vt1.c0 AS TEXT) THEN ((rt1.c2)+(rt1.c1)) WHEN (((rt1.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c0))) THEN ((((((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)))OR(0xffffffffab603e3f)))OR(rt1.c1)) WHEN ((((NULL)OR(x'')))OR(rt1.c0)) THEN (vt0.c0 IN (rt1.c0)) END CROSS JOIN vt0 ON (((vt1.c0)) NOT BETWEEN ((((rt1.c0) NOT NULL))) AND ((vt0.c0 COLLATE RTRIM)));
SELECT DISTINCT rt1.c2, vt1.c0, rt1.c1 FROM rt1 INNER JOIN vt1 ON CASE WHEN CAST(vt1.c0 AS TEXT) THEN ((rt1.c2)+(rt1.c1)) WHEN (((rt1.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c0))) THEN ((((((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)))OR(0Xffffffffab603e3f)))OR(rt1.c1)) WHEN ((((NULL)OR(x'')))OR(rt1.c0)) THEN (vt0.c0 IN (rt1.c0)) END CROSS JOIN vt0 ON (((vt1.c0)) NOT BETWEEN ((((rt1.c0) NOT NULL))) AND ((vt0.c0 COLLATE RTRIM))) WHERE ((- (((vt1.c0) NOT BETWEEN (vt0.c0) AND (rt1.c1))))) UNION SELECT DISTINCT rt1.c2, vt1.c0, rt1.c1 FROM rt1 INNER JOIN vt1 ON CASE WHEN CAST(vt1.c0 AS TEXT) THEN ((rt1.c2)+(rt1.c1)) WHEN (((rt1.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c0))) THEN ((((((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)))OR(0Xffffffffab603e3f)))OR(rt1.c1)) WHEN ((((NULL)OR(x'')))OR(rt1.c0)) THEN (vt0.c0 IN (rt1.c0)) END CROSS JOIN vt0 ON (((vt1.c0)) NOT BETWEEN ((((rt1.c0) NOT NULL))) AND ((vt0.c0 COLLATE RTRIM))) WHERE ((NOT ((- (((vt1.c0) NOT BETWEEN (vt0.c0) AND (rt1.c1))))))) UNION SELECT DISTINCT rt1.c2, vt1.c0, rt1.c1 FROM rt1 INNER JOIN vt1 ON CASE WHEN CAST(vt1.c0 AS TEXT) THEN ((rt1.c2)+(rt1.c1)) WHEN (((rt1.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c0))) THEN ((((((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)))OR(0xffffffffab603e3f)))OR(rt1.c1)) WHEN ((((NULL)OR(x'')))OR(rt1.c0)) THEN (vt0.c0 IN (rt1.c0)) END CROSS JOIN vt0 ON (((vt1.c0)) NOT BETWEEN ((((rt1.c0) NOT NULL))) AND ((vt0.c0 COLLATE RTRIM))) WHERE ((((- (((vt1.c0) NOT BETWEEN (vt0.c0) AND (rt1.c1))))) ISNULL));
SELECT DISTINCT rt1.c2, vt1.c0, rt1.c1 FROM rt1 INNER JOIN vt1 ON CASE WHEN CAST(vt1.c0 AS TEXT) THEN ((rt1.c2)+(rt1.c1)) WHEN (((rt1.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c0))) THEN ((((((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)))OR(0xffffffffab603e3f)))OR(rt1.c1)) WHEN ((((NULL)OR(x'')))OR(rt1.c0)) THEN (vt0.c0 IN (rt1.c0)) END CROSS JOIN vt0 ON (((vt1.c0)) NOT BETWEEN ((((rt1.c0) NOT NULL))) AND ((vt0.c0 COLLATE RTRIM)));
SELECT rt1.c2, rt1.c1, rt1.c0 FROM v0, rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT rt1.c2, rt1.c1, rt1.c0 FROM v0, rt1 WHERE (x'') GROUP BY rt1.c2, rt1.c1, rt1.c0 UNION SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM v0, rt1 WHERE ((NOT (x''))) GROUP BY rt1.c2, rt1.c1, rt1.c0 UNION SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM v0, rt1 WHERE (((x'') ISNULL)) GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT rt1.c2, rt1.c1, rt1.c0 FROM v0, rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT rt1.c0, vt0.c0, v0.c0 FROM vt0, vt1, rt1, v0 GROUP BY rt1.c0, vt0.c0, v0.c0;
SELECT rt1.c0, vt0.c0, v0.c0 FROM vt0, vt1, rt1, v0 GROUP BY rt1.c0, vt0.c0, v0.c0 HAVING ((TOTAL(rt1.c2)) ISNULL) UNION ALL SELECT ALL rt1.c0, vt0.c0, v0.c0 FROM vt0, vt1, rt1, v0 GROUP BY rt1.c0, vt0.c0, v0.c0 HAVING (NOT (((TOTAL(rt1.c2)) ISNULL))) UNION ALL SELECT ALL rt1.c0, vt0.c0, v0.c0 FROM vt0, vt1, rt1, v0 GROUP BY rt1.c0, vt0.c0, v0.c0 HAVING ((((TOTAL(rt1.c2)) ISNULL)) ISNULL);
SELECT rt1.c0, vt0.c0, v0.c0 FROM vt0, vt1, rt1, v0 GROUP BY rt1.c0, vt0.c0, v0.c0;
SELECT rt1.c0, vt0.c0, v0.c0 FROM vt0, vt1, rt1, v0 GROUP BY rt1.c0, vt0.c0, v0.c0 HAVING ((TOTAL(rt1.c2)) ISNULL) UNION ALL SELECT ALL rt1.c0, vt0.c0, v0.c0 FROM vt0, vt1, rt1, v0 GROUP BY rt1.c0, vt0.c0, v0.c0 HAVING (NOT (((TOTAL(rt1.c2)) ISNULL))) UNION ALL SELECT ALL rt1.c0, vt0.c0, v0.c0 FROM vt0, vt1, rt1, v0 GROUP BY rt1.c0, vt0.c0, v0.c0 HAVING ((((TOTAL(rt1.c2)) ISNULL)) ISNULL);
SELECT rt1.c0, vt0.c0, v0.c0 FROM vt0, vt1, rt1, v0 GROUP BY rt1.c0, vt0.c0, v0.c0;
SELECT MIN((((((vt1.c0, vt1.c0, vt1.c0))<=((vt1.c0, vt1.c0, vt1.c0)))) ISNULL)) FROM vt1;
SELECT ALL vt1.c0, vt0.c0, rt1.c1, v0.c0, rt1.c2, rt1.c0 FROM vt0, rt1, vt1, v0;
SELECT ALL vt1.c0, vt0.c0, rt1.c1, v0.c0, rt1.c2, rt1.c0 FROM vt0, rt1, vt1, v0 WHERE ((((x'', vt1.c0, vt1.c0, vt0.c0, rt1.c2)) NOT BETWEEN (('1499178056', CAST(vt0.c0 AS TEXT), ((NULL) BETWEEN (v0.c0) AND (rt1.c2)), (~ (rt1.c1)), (((x'c8fb')) NOT BETWEEN ((v0.c0)) AND ((rt1.c2))))) AND ((((((NULL)OR(rt1.c2)))AND(vt0.c0)), ((rt1.c0)<<(v0.c0)), (~ (0X1)), (vt1.c0 IN (rt1.c0, rt1.c2)), ((rt1.c0) NOT BETWEEN (vt1.c0) AND (rt1.c0)))))) UNION ALL SELECT vt1.c0, vt0.c0, rt1.c1, v0.c0, rt1.c2, rt1.c0 FROM vt0, rt1, vt1, v0 WHERE ((NOT ((((x'', vt1.c0, vt1.c0, vt0.c0, rt1.c2)) NOT BETWEEN (('1499178056', CAST(vt0.c0 AS TEXT), ((NULL) BETWEEN (v0.c0) AND (rt1.c2)), (~ (rt1.c1)), (((x'c8fb')) NOT BETWEEN ((v0.c0)) AND ((rt1.c2))))) AND ((((((NULL)OR(rt1.c2)))AND(vt0.c0)), ((rt1.c0)<<(v0.c0)), (~ (0X1)), (vt1.c0 IN (rt1.c0, rt1.c2)), ((rt1.c0) NOT BETWEEN (vt1.c0) AND (rt1.c0)))))))) UNION ALL SELECT vt1.c0, vt0.c0, rt1.c1, v0.c0, rt1.c2, rt1.c0 FROM vt0, rt1, vt1, v0 WHERE ((((((x'', vt1.c0, vt1.c0, vt0.c0, rt1.c2)) NOT BETWEEN (('1499178056', CAST(vt0.c0 AS TEXT), ((NULL) BETWEEN (v0.c0) AND (rt1.c2)), (~ (rt1.c1)), (((x'c8fb')) NOT BETWEEN ((v0.c0)) AND ((rt1.c2))))) AND ((((((NULL)OR(rt1.c2)))AND(vt0.c0)), ((rt1.c0)<<(v0.c0)), (~ (0X1)), (vt1.c0 IN (rt1.c0, rt1.c2)), ((rt1.c0) NOT BETWEEN (vt1.c0) AND (rt1.c0)))))) ISNULL));
SELECT ALL vt1.c0, vt0.c0, rt1.c1, v0.c0, rt1.c2, rt1.c0 FROM vt0, rt1, vt1, v0;
SELECT DISTINCT * FROM vt1, v0, rt1, vt0;
SELECT DISTINCT * FROM vt1, v0, rt1, vt0 WHERE (((((rt1.c0)%(rt1.c0)))IS NOT(rt1.c2))) UNION SELECT DISTINCT * FROM vt1, v0, rt1, vt0 WHERE ((NOT (((((rt1.c0)%(rt1.c0)))IS NOT(rt1.c2))))) UNION SELECT DISTINCT * FROM vt1, v0, rt1, vt0 WHERE (((((((rt1.c0)%(rt1.c0)))IS NOT(rt1.c2))) ISNULL));
SELECT DISTINCT * FROM vt1, v0, rt1, vt0;
SELECT rt1.c0, rt1.c1, vt1.c0 FROM vt0, rt1, vt1 GROUP BY rt1.c0, rt1.c1, vt1.c0;
SELECT rt1.c0, rt1.c1, vt1.c0 FROM vt0, rt1, vt1 WHERE ((((rt1.c0 IN ()))<>(CASE rt1.c2  WHEN rt1.c0 THEN vt1.c0 WHEN rt1.c2 THEN vt0.c0 WHEN vt1.c0 THEN rt1.c0 ELSE rt1.c1 END))) GROUP BY rt1.c0, rt1.c1, vt1.c0 UNION SELECT ALL rt1.c0, rt1.c1, vt1.c0 FROM vt0, rt1, vt1 WHERE ((NOT ((((rt1.c0 IN ()))<>(CASE rt1.c2  WHEN rt1.c0 THEN vt1.c0 WHEN rt1.c2 THEN vt0.c0 WHEN vt1.c0 THEN rt1.c0 ELSE rt1.c1 END))))) GROUP BY rt1.c0, rt1.c1, vt1.c0 UNION SELECT ALL rt1.c0, rt1.c1, vt1.c0 FROM vt0, rt1, vt1 WHERE ((((((rt1.c0 IN ()))<>(CASE rt1.c2  WHEN rt1.c0 THEN vt1.c0 WHEN rt1.c2 THEN vt0.c0 WHEN vt1.c0 THEN rt1.c0 ELSE rt1.c1 END))) ISNULL)) GROUP BY rt1.c0, rt1.c1, vt1.c0;
SELECT rt1.c0, rt1.c1, vt1.c0 FROM vt0, rt1, vt1 GROUP BY rt1.c0, rt1.c1, vt1.c0;
SELECT ALL rt1.c0 FROM rt1, vt1, vt0 GROUP BY rt1.c0;
SELECT rt1.c0 FROM rt1, vt1, vt0 NOT INDEXED GROUP BY rt1.c0 HAVING ((((MIN(0.1927612339645861))-(GROUP_CONCAT(GROUP_CONCAT(rt1.c0)))))>>(AVG(0.43374269345337824))) UNION ALL SELECT rt1.c0 FROM rt1, vt1, vt0 GROUP BY rt1.c0 HAVING (NOT (((((MIN(0.1927612339645861))-(GROUP_CONCAT(GROUP_CONCAT(rt1.c0)))))>>(AVG(0.43374269345337824))))) UNION ALL SELECT ALL rt1.c0 FROM rt1, vt1, vt0 NOT INDEXED GROUP BY rt1.c0 HAVING ((((((MIN(0.1927612339645861))-(GROUP_CONCAT(GROUP_CONCAT(rt1.c0)))))>>(AVG(0.43374269345337824)))) ISNULL);
SELECT * FROM v0 FULL OUTER JOIN rt1 ON ((((((((((((rt1.c2)AND(rt1.c2)))OR(vt1.c0)))AND(rt1.c2)))AND(vt0.c0)))AND(v0.c0)))OR(((rt1.c2)*(rt1.c0)))) LEFT OUTER JOIN vt0 ON (((((((rt1.c2)OR(vt0.c0)))OR(vt0.c0))))<=((NULL))) INNER JOIN vt1 ON v0.c0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE NOCASE) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM v0 LEFT OUTER JOIN vt0 ON ((((vt0.c0)OR(UPPER(DISTINCT vt0.c0))))OR(CAST(vt0.c0 AS REAL))) GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0 LEFT OUTER JOIN vt0 ON ((((vt0.c0)OR(UPPER(DISTINCT vt0.c0))))OR(CAST(vt0.c0 AS REAL))) WHERE ((((((NULL, v0.c0, v0.c0)) NOT BETWEEN ((vt0.c0, v0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, v0.c0))))<=(LIKELY(DISTINCT x'')))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM v0 LEFT OUTER JOIN vt0 ON ((((vt0.c0)OR(UPPER(DISTINCT vt0.c0))))OR(CAST(vt0.c0 AS REAL))) WHERE ((NOT ((((((NULL, v0.c0, v0.c0)) NOT BETWEEN ((vt0.c0, v0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, v0.c0))))<=(LIKELY(DISTINCT x'')))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM v0 LEFT OUTER JOIN vt0 ON ((((vt0.c0)OR(UPPER(DISTINCT vt0.c0))))OR(CAST(vt0.c0 AS REAL))) WHERE ((((((((NULL, v0.c0, v0.c0)) NOT BETWEEN ((vt0.c0, v0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, v0.c0))))<=(LIKELY(DISTINCT x'')))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0 LEFT OUTER JOIN vt0 ON ((((vt0.c0)OR(UPPER(DISTINCT vt0.c0))))OR(CAST(vt0.c0 AS REAL))) GROUP BY vt0.c0;
SELECT vt0.c0, vt1.c0, v0.c0 FROM v0, vt1, vt0 GROUP BY vt0.c0, vt1.c0, v0.c0;
SELECT ALL vt0.c0, vt1.c0, v0.c0 FROM v0, vt1, vt0 GROUP BY vt0.c0, vt1.c0, v0.c0 HAVING MAX(COUNT(*)) UNION ALL SELECT ALL vt0.c0, vt1.c0, v0.c0 FROM v0, vt1, vt0 GROUP BY vt0.c0, vt1.c0, v0.c0 HAVING (NOT (MAX(COUNT(*)))) UNION ALL SELECT ALL vt0.c0, vt1.c0, v0.c0 FROM v0, vt1, vt0 GROUP BY vt0.c0, vt1.c0, v0.c0 HAVING ((MAX(COUNT(*))) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (json_object(((vt1.c0)!=(vt1.c0)), '-663629262' COLLATE RTRIM, vt1.c0, (vt1.c0 IN ()))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (json_object(((vt1.c0)!=(vt1.c0)), '-663629262' COLLATE RTRIM, vt1.c0, (vt1.c0 IN ()))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((json_object(((vt1.c0)<>(vt1.c0)), '-663629262' COLLATE RTRIM, vt1.c0, (vt1.c0 IN ()))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt1, vt0 FULL OUTER JOIN rt1 ON (((+ (vt0.c0)))-(TYPEOF(rt1.c2)));
SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt1, vt0 FULL OUTER JOIN rt1 ON (((+ (vt0.c0)))-(TYPEOF(rt1.c2))) WHERE (((GLOB(rt1.c2, v0.c0)) NOTNULL)) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt1, vt0 FULL OUTER JOIN rt1 ON (((+ (vt0.c0)))-(TYPEOF(rt1.c2))) WHERE ((NOT (((GLOB(rt1.c2, v0.c0)) NOTNULL)))) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt1, vt0 FULL OUTER JOIN rt1 ON (((+ (vt0.c0)))-(TYPEOF(rt1.c2))) WHERE (((((GLOB(rt1.c2, v0.c0)) NOTNULL)) ISNULL));
SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt1, vt0 FULL OUTER JOIN rt1 ON (((+ (vt0.c0)))-(TYPEOF(rt1.c2)));
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((((((v0.c0))!=((v0.c0)))) NOT NULL)) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((((v0.c0))!=((v0.c0)))) NOT NULL)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((((((v0.c0))!=((v0.c0)))) NOT NULL)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt1.c0 FROM v0, vt1, vt0 CROSS JOIN rt1 ON (NOT ((vt1.c0 IN ()))) GROUP BY rt1.c0;
SELECT rt1.c0 FROM v0, vt1, vt0 CROSS JOIN rt1 ON (NOT ((vt1.c0 IN ()))) GROUP BY rt1.c0 HAVING COUNT(CASE WHEN TOTAL(SUM(AVG(rt1.c2))) THEN TOTAL(COUNT(*)) WHEN vt1.c0 THEN rt1.c0 WHEN rt1.c1 THEN GROUP_CONCAT(GROUP_CONCAT(TOTAL(COUNT(*)))) END) UNION ALL SELECT rt1.c0 FROM v0, vt1, vt0 CROSS JOIN rt1 ON (NOT ((vt1.c0 IN ()))) GROUP BY rt1.c0 HAVING (NOT (COUNT(CASE WHEN TOTAL(SUM(AVG(rt1.c2))) THEN TOTAL(COUNT(*)) WHEN vt1.c0 THEN rt1.c0 WHEN rt1.c1 THEN GROUP_CONCAT(GROUP_CONCAT(TOTAL(COUNT(*)))) END))) UNION ALL SELECT ALL rt1.c0 FROM v0, vt1, vt0 CROSS JOIN rt1 ON (NOT ((vt1.c0 IN ()))) GROUP BY rt1.c0 HAVING ((COUNT(CASE WHEN TOTAL(SUM(AVG(rt1.c2))) THEN TOTAL(COUNT(*)) WHEN vt1.c0 THEN rt1.c0 WHEN rt1.c1 THEN GROUP_CONCAT(GROUP_CONCAT(TOTAL(COUNT(*)))) END)) ISNULL);
SELECT * FROM rt1, v0, vt1;
SELECT * FROM rt1, v0, vt1 WHERE (((((NOT (rt1.c0)), (((v0.c0))!=((v0.c0))), (x'0636151f' IN (rt1.c0)), CAST(vt1.c0 AS REAL), rt1.c2 COLLATE NOCASE))<((((v0.c0) BETWEEN (rt1.c1) AND (0Xffffffffaf3424bb)), ((rt1.c2) IS TRUE), rt1.c0 COLLATE RTRIM, ((v0.c0)<(rt1.c1)), ((NULL) BETWEEN (rt1.c0) AND (rt1.c1)))))) UNION ALL SELECT * FROM rt1, v0, vt1 WHERE ((NOT (((((NOT (rt1.c0)), (((v0.c0))!=((v0.c0))), (x'0636151f' IN (rt1.c0)), CAST(vt1.c0 AS REAL), rt1.c2 COLLATE NOCASE))<((((v0.c0) BETWEEN (rt1.c1) AND (0xffffffffaf3424bb)), ((rt1.c2) IS TRUE), rt1.c0 COLLATE RTRIM, ((v0.c0)<(rt1.c1)), ((NULL) BETWEEN (rt1.c0) AND (rt1.c1)))))))) UNION ALL SELECT * FROM rt1, v0, vt1 WHERE (((((((NOT (rt1.c0)), (((v0.c0))<>((v0.c0))), (x'0636151f' IN (rt1.c0)), CAST(vt1.c0 AS REAL), rt1.c2 COLLATE NOCASE))<((((v0.c0) BETWEEN (rt1.c1) AND (0Xffffffffaf3424bb)), ((rt1.c2) IS TRUE), rt1.c0 COLLATE RTRIM, ((v0.c0)<(rt1.c1)), ((NULL) BETWEEN (rt1.c0) AND (rt1.c1)))))) ISNULL));
SELECT * FROM rt1, v0, vt1;
SELECT DISTINCT * FROM rt1, v0;
SELECT DISTINCT * FROM rt1, v0 WHERE (STRFTIME(rt1.c2, (((v0.c0))<>((rt1.c1))), '\1')) UNION SELECT DISTINCT * FROM rt1, v0 WHERE ((NOT (STRFTIME(rt1.c2, (((v0.c0))<>((rt1.c1))), '\1')))) UNION SELECT DISTINCT * FROM rt1, v0 WHERE (((STRFTIME(rt1.c2, (((v0.c0))!=((rt1.c1))), '\1')) ISNULL));
SELECT DISTINCT * FROM rt1, v0;
SELECT ALL rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1;
SELECT ALL rt1.c2, rt1.c1 FROM rt1 WHERE ((((((((((rt1.c0)AND(rt1.c0)))OR(rt1.c2)))AND(rt1.c0)))OR(rt1.c0)) IN (rt1.c0 COLLATE BINARY, rt1.c1 COLLATE BINARY))) GROUP BY rt1.c2, rt1.c1 UNION SELECT ALL rt1.c2, rt1.c1 FROM rt1 WHERE ((NOT ((((((((((rt1.c0)AND(rt1.c0)))OR(rt1.c2)))AND(rt1.c0)))OR(rt1.c0)) IN (rt1.c0 COLLATE BINARY, rt1.c1 COLLATE BINARY))))) GROUP BY rt1.c2, rt1.c1 UNION SELECT rt1.c2, rt1.c1 FROM rt1 WHERE ((((((((((((rt1.c0)AND(rt1.c0)))OR(rt1.c2)))AND(rt1.c0)))OR(rt1.c0)) IN (rt1.c0 COLLATE BINARY, rt1.c1 COLLATE BINARY))) ISNULL)) GROUP BY rt1.c2, rt1.c1;
SELECT ALL rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1;
SELECT ALL rt1.c0, rt1.c1, v0.c0, rt1.c2, vt0.c0 FROM rt1, v0, vt0 GROUP BY rt1.c0, rt1.c1, v0.c0, rt1.c2, vt0.c0;
SELECT ALL rt1.c0, rt1.c1, v0.c0, rt1.c2, vt0.c0 FROM rt1, v0, vt0 GROUP BY rt1.c0, rt1.c1, v0.c0, rt1.c2, vt0.c0 HAVING ((MAX(GROUP_CONCAT(rt1.c0)))GLOB(((GROUP_CONCAT(vt0.c0)) BETWEEN (rt1.c2) AND (SUM(SUM(rt1.c2)))))) UNION ALL SELECT rt1.c0, rt1.c1, v0.c0, rt1.c2, vt0.c0 FROM rt1, v0, vt0 GROUP BY rt1.c0, rt1.c1, v0.c0, rt1.c2, vt0.c0 HAVING (NOT (((MAX(GROUP_CONCAT(rt1.c0)))GLOB(((GROUP_CONCAT(vt0.c0)) BETWEEN (rt1.c2) AND (SUM(SUM(rt1.c2)))))))) UNION ALL SELECT rt1.c0, rt1.c1, v0.c0, rt1.c2, vt0.c0 FROM rt1, v0, vt0 GROUP BY rt1.c0, rt1.c1, v0.c0, rt1.c2, vt0.c0 HAVING ((((MAX(GROUP_CONCAT(rt1.c0)))GLOB(((GROUP_CONCAT(vt0.c0)) BETWEEN (rt1.c2) AND (SUM(SUM(rt1.c2))))))) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB)) IS TRUE)) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((CAST(vt0.c0 AS BLOB)) IS TRUE)))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((CAST(vt0.c0 AS BLOB)) IS TRUE)) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM rt1;
SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE (450494835) UNION SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE ((NOT (450494835))) UNION SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE (((450494835) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM rt1;
SELECT vt1.c0 FROM vt0, rt1 INNER JOIN vt1 ON CASE ((rt1.c1)GLOB(vt0.c0))  WHEN CAST(rt1.c0 AS INTEGER) THEN ((rt1.c2) IS FALSE) ELSE CASE WHEN rt1.c1 THEN rt1.c1 ELSE vt1.c0 END END GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0, rt1 INNER JOIN vt1 ON CASE ((rt1.c1)GLOB(vt0.c0))  WHEN CAST(rt1.c0 AS INTEGER) THEN ((rt1.c2) IS FALSE) ELSE CASE WHEN rt1.c1 THEN rt1.c1 ELSE vt1.c0 END END WHERE (((((((rt1.c0)AND(rt1.c1)))AND(rt1.c0))) NOTNULL)) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt0, rt1 INNER JOIN vt1 ON CASE ((rt1.c1)GLOB(vt0.c0))  WHEN CAST(rt1.c0 AS INTEGER) THEN ((rt1.c2) IS FALSE) ELSE CASE WHEN rt1.c1 THEN rt1.c1 ELSE vt1.c0 END END WHERE ((NOT (((((((rt1.c0)AND(rt1.c1)))AND(rt1.c0))) NOTNULL)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt0, rt1 INNER JOIN vt1 ON CASE ((rt1.c1)GLOB(vt0.c0))  WHEN CAST(rt1.c0 AS INTEGER) THEN ((rt1.c2) IS FALSE) ELSE CASE WHEN rt1.c1 THEN rt1.c1 ELSE vt1.c0 END END WHERE (((((((((rt1.c0)AND(rt1.c1)))AND(rt1.c0))) NOTNULL)) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, rt1 INNER JOIN vt1 ON CASE ((rt1.c1)GLOB(vt0.c0))  WHEN CAST(rt1.c0 AS INTEGER) THEN ((rt1.c2) IS FALSE) ELSE CASE WHEN rt1.c1 THEN rt1.c1 ELSE vt1.c0 END END GROUP BY vt1.c0;
SELECT v0.c0, rt1.c1, rt1.c2, vt0.c0 FROM vt0, rt1 FULL OUTER JOIN v0 ON ((rt1.c0)<<(((rt1.c0) IS TRUE))) GROUP BY v0.c0, rt1.c1, rt1.c2, vt0.c0;
SELECT v0.c0, rt1.c1, rt1.c2, vt0.c0 FROM vt0, rt1 FULL OUTER JOIN v0 ON ((rt1.c0)<<(((rt1.c0) IS TRUE))) GROUP BY v0.c0, rt1.c1, rt1.c2, vt0.c0 HAVING COUNT(((v0.c0) BETWEEN (vt0.c0) AND (GROUP_CONCAT(MIN(MAX(TOTAL(v0.c0))))))) UNION ALL SELECT ALL v0.c0, rt1.c1, rt1.c2, vt0.c0 FROM vt0, rt1 FULL OUTER JOIN v0 ON ((rt1.c0)<<(((rt1.c0) IS TRUE))) GROUP BY v0.c0, rt1.c1, rt1.c2, vt0.c0 HAVING (NOT (COUNT(((v0.c0) BETWEEN (vt0.c0) AND (GROUP_CONCAT(MIN(MAX(TOTAL(v0.c0))))))))) UNION ALL SELECT v0.c0, rt1.c1, rt1.c2, vt0.c0 FROM vt0, rt1 FULL OUTER JOIN v0 ON ((rt1.c0)<<(((rt1.c0) IS TRUE))) GROUP BY v0.c0, rt1.c1, rt1.c2, vt0.c0 HAVING ((COUNT(((v0.c0) BETWEEN (vt0.c0) AND (GROUP_CONCAT(MIN(MAX(TOTAL(v0.c0)))))))) ISNULL);
SELECT rt1.c2, rt1.c1, vt1.c0 FROM rt1, vt0, vt1, v0;
SELECT ALL rt1.c2, rt1.c1, vt1.c0 FROM rt1, vt0, vt1, v0 WHERE ((('916094071') NOT BETWEEN (((vt0.c0) NOTNULL)) AND (CASE NULL  WHEN v0.c0 THEN vt1.c0 END))) UNION ALL SELECT rt1.c2, rt1.c1, vt1.c0 FROM rt1, vt0, vt1, v0 WHERE ((NOT ((('916094071') NOT BETWEEN (((vt0.c0) NOTNULL)) AND (CASE NULL  WHEN v0.c0 THEN vt1.c0 END))))) UNION ALL SELECT rt1.c2, rt1.c1, vt1.c0 FROM rt1, vt0, vt1, v0 WHERE ((((('916094071') NOT BETWEEN (((vt0.c0) NOTNULL)) AND (CASE NULL  WHEN v0.c0 THEN vt1.c0 END))) ISNULL));
SELECT rt1.c2, rt1.c1, vt1.c0 FROM rt1, vt0, vt1, v0;
SELECT DISTINCT * FROM vt1, vt0, v0;
SELECT DISTINCT * FROM vt1, vt0, v0 WHERE (((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (v0.c0))) UNION SELECT DISTINCT * FROM vt1, vt0, v0 WHERE ((NOT (((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (v0.c0))))) UNION SELECT DISTINCT * FROM vt1, vt0, v0 WHERE (((((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (v0.c0))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0, v0;
SELECT rt1.c1, vt1.c0 FROM v0, rt1 FULL OUTER JOIN vt1 ON ((((((((rt1.c1)AND(v0.c0)))OR(v0.c0)))AND(rt1.c1)))OR(rt1.c2)) COLLATE RTRIM INNER JOIN vt0 ON SQLITE_VERSION() GROUP BY rt1.c1, vt1.c0;
SELECT ALL rt1.c1, vt1.c0 FROM v0, rt1 FULL OUTER JOIN vt1 ON ((((((((rt1.c1)AND(v0.c0)))OR(v0.c0)))AND(rt1.c1)))OR(rt1.c2)) COLLATE RTRIM INNER JOIN vt0 ON SQLITE_VERSION() WHERE (((((rt1.c1) NOTNULL))||(((rt1.c0)/(rt1.c2))))) GROUP BY rt1.c1, vt1.c0 UNION SELECT rt1.c1, vt1.c0 FROM v0, rt1 FULL OUTER JOIN vt1 ON ((((((((rt1.c1)AND(v0.c0)))OR(v0.c0)))AND(rt1.c1)))OR(rt1.c2)) COLLATE RTRIM INNER JOIN vt0 ON SQLITE_VERSION() WHERE ((NOT (((((rt1.c1) NOTNULL))||(((rt1.c0)/(rt1.c2))))))) GROUP BY rt1.c1, vt1.c0 UNION SELECT rt1.c1, vt1.c0 FROM v0, rt1 FULL OUTER JOIN vt1 ON ((((((((rt1.c1)AND(v0.c0)))OR(v0.c0)))AND(rt1.c1)))OR(rt1.c2)) COLLATE RTRIM INNER JOIN vt0 ON SQLITE_VERSION() WHERE (((((((rt1.c1) NOTNULL))||(((rt1.c0)/(rt1.c2))))) ISNULL)) GROUP BY rt1.c1, vt1.c0;
SELECT rt1.c1, vt1.c0 FROM v0, rt1 FULL OUTER JOIN vt1 ON ((((((((rt1.c1)AND(v0.c0)))OR(v0.c0)))AND(rt1.c1)))OR(rt1.c2)) COLLATE RTRIM INNER JOIN vt0 ON SQLITE_VERSION() GROUP BY rt1.c1, vt1.c0;
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT * FROM vt0, vt1, rt1;
SELECT * FROM vt0, vt1, rt1 WHERE (((rt1.c0 IN ()) IN ())) UNION ALL SELECT ALL * FROM vt0, vt1, rt1 WHERE ((NOT (((rt1.c0 IN ()) IN ())))) UNION ALL SELECT * FROM vt0, vt1, rt1 WHERE (((((rt1.c0 IN ()) IN ())) ISNULL));
SELECT * FROM vt0, vt1, rt1;
SELECT DISTINCT * FROM rt1, v0;
SELECT DISTINCT * FROM rt1, v0 WHERE (CASE CAST(rt1.c0 AS BLOB)  WHEN CASE WHEN x'e77c' THEN x'8de1' END THEN 0.539543098427463 ELSE ((v0.c0) ISNULL) END) UNION SELECT DISTINCT * FROM rt1, v0 WHERE ((NOT (CASE CAST(rt1.c0 AS BLOB)  WHEN CASE WHEN x'e77c' THEN x'8de1' END THEN 0.539543098427463 ELSE ((v0.c0) ISNULL) END))) UNION SELECT DISTINCT * FROM rt1, v0 WHERE (((CASE CAST(rt1.c0 AS BLOB)  WHEN CASE WHEN x'e77c' THEN x'8de1' END THEN 0.539543098427463 ELSE ((v0.c0) ISNULL) END) ISNULL));
SELECT DISTINCT * FROM rt1, v0;
SELECT rt1.c1, rt1.c2, vt1.c0 FROM vt1 NATURAL JOIN rt1 GROUP BY rt1.c1, rt1.c2, vt1.c0;
SELECT rt1.c1, rt1.c2, vt1.c0 FROM vt1 NATURAL JOIN rt1 WHERE (CASE rt1.c0 COLLATE RTRIM  WHEN ((rt1.c1)&(0x75a9d9b7)) THEN rt1.c0 COLLATE BINARY END) GROUP BY rt1.c1, rt1.c2, vt1.c0 UNION SELECT rt1.c1, rt1.c2, vt1.c0 FROM vt1 NATURAL JOIN rt1 WHERE ((NOT (CASE rt1.c0 COLLATE RTRIM  WHEN ((rt1.c1)&(0x75a9d9b7)) THEN rt1.c0 COLLATE BINARY END))) GROUP BY rt1.c1, rt1.c2, vt1.c0 UNION SELECT rt1.c1, rt1.c2, vt1.c0 FROM vt1 NATURAL JOIN rt1 WHERE (((CASE rt1.c0 COLLATE RTRIM  WHEN ((rt1.c1)&(0X75a9d9b7)) THEN rt1.c0 COLLATE BINARY END) ISNULL)) GROUP BY rt1.c1, rt1.c2, vt1.c0;
SELECT rt1.c1, rt1.c2, vt1.c0 FROM vt1 NATURAL JOIN rt1 GROUP BY rt1.c1, rt1.c2, vt1.c0;
SELECT rt1.c2, vt0.c0 FROM v0, vt0 LEFT OUTER JOIN rt1 ON ((((((x'')||(rt1.c0)))OR(((NULL) BETWEEN (rt1.c1) AND (rt1.c2)))))AND(vt0.c0 COLLATE RTRIM)) GROUP BY rt1.c2, vt0.c0;
SELECT rt1.c2, vt0.c0 FROM v0, vt0 LEFT OUTER JOIN rt1 ON ((((((x'')||(rt1.c0)))OR(((NULL) BETWEEN (rt1.c1) AND (rt1.c2)))))AND(vt0.c0 COLLATE RTRIM)) GROUP BY rt1.c2, vt0.c0 HAVING COUNT(*) UNION ALL SELECT rt1.c2, vt0.c0 FROM v0, vt0 LEFT OUTER JOIN rt1 ON ((((((x'')||(rt1.c0)))OR(((NULL) BETWEEN (rt1.c1) AND (rt1.c2)))))AND(vt0.c0 COLLATE RTRIM)) GROUP BY rt1.c2, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c2, vt0.c0 FROM v0, vt0 LEFT OUTER JOIN rt1 ON ((((((x'')||(rt1.c0)))OR(((NULL) BETWEEN (rt1.c1) AND (rt1.c2)))))AND(vt0.c0 COLLATE RTRIM)) GROUP BY rt1.c2, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c2, vt0.c0 FROM v0, vt0 LEFT OUTER JOIN rt1 ON ((((((x'')||(rt1.c0)))OR(((NULL) BETWEEN (rt1.c1) AND (rt1.c2)))))AND(vt0.c0 COLLATE RTRIM)) GROUP BY rt1.c2, vt0.c0;
SELECT rt1.c2, vt0.c0 FROM v0, vt0 LEFT OUTER JOIN rt1 ON ((((((x'')||(rt1.c0)))OR(((NULL) BETWEEN (rt1.c1) AND (rt1.c2)))))AND(vt0.c0 COLLATE RTRIM)) GROUP BY rt1.c2, vt0.c0 HAVING COUNT(*) UNION ALL SELECT rt1.c2, vt0.c0 FROM v0, vt0 LEFT OUTER JOIN rt1 ON ((((((x'')||(rt1.c0)))OR(((NULL) BETWEEN (rt1.c1) AND (rt1.c2)))))AND(vt0.c0 COLLATE RTRIM)) GROUP BY rt1.c2, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c2, vt0.c0 FROM v0, vt0 LEFT OUTER JOIN rt1 ON ((((((x'')||(rt1.c0)))OR(((NULL) BETWEEN (rt1.c1) AND (rt1.c2)))))AND(vt0.c0 COLLATE RTRIM)) GROUP BY rt1.c2, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c2, vt0.c0 FROM v0, vt0 LEFT OUTER JOIN rt1 ON ((((((x'')||(rt1.c0)))OR(((NULL) BETWEEN (rt1.c1) AND (rt1.c2)))))AND(vt0.c0 COLLATE RTRIM)) GROUP BY rt1.c2, vt0.c0;
SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1;
SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE (CAST((NOT (rt1.c1)) AS TEXT)) UNION ALL SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE ((NOT (CAST((NOT (rt1.c1)) AS TEXT)))) UNION ALL SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE (((CAST((NOT (rt1.c1)) AS TEXT)) ISNULL));
SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1;
SELECT DISTINCT * FROM v0, vt0, rt1;
SELECT DISTINCT * FROM v0, vt0, rt1 WHERE (((((((((((((rt1.c1)OR(x'')))OR(rt1.c1)))AND(rt1.c1)))AND(rt1.c1)))OR(((rt1.c2) NOTNULL))))OR((rt1.c1 IN ())))) UNION SELECT DISTINCT * FROM v0, vt0, rt1 WHERE ((NOT (((((((((((((rt1.c1)OR(x'')))OR(rt1.c1)))AND(rt1.c1)))AND(rt1.c1)))OR(((rt1.c2) NOTNULL))))OR((rt1.c1 IN ())))))) UNION SELECT DISTINCT * FROM v0, vt0, rt1 WHERE (((((((((((((((rt1.c1)OR(x'')))OR(rt1.c1)))AND(rt1.c1)))AND(rt1.c1)))OR(((rt1.c2) NOTNULL))))OR((rt1.c1 IN ())))) ISNULL));
SELECT DISTINCT * FROM v0, vt0, rt1;
SELECT ALL rt1.c2, vt1.c0, rt1.c0 FROM rt1, vt1 GROUP BY rt1.c2, vt1.c0, rt1.c0;
SELECT ALL rt1.c2, vt1.c0, rt1.c0 FROM rt1, vt1 WHERE (569697689 COLLATE RTRIM) GROUP BY rt1.c2, vt1.c0, rt1.c0 UNION SELECT ALL rt1.c2, vt1.c0, rt1.c0 FROM rt1, vt1 WHERE ((NOT (569697689 COLLATE RTRIM))) GROUP BY rt1.c2, vt1.c0, rt1.c0 UNION SELECT ALL rt1.c2, vt1.c0, rt1.c0 FROM rt1, vt1 WHERE (((569697689 COLLATE RTRIM) ISNULL)) GROUP BY rt1.c2, vt1.c0, rt1.c0;
SELECT ALL rt1.c2, vt1.c0, rt1.c0 FROM rt1, vt1 GROUP BY rt1.c2, vt1.c0, rt1.c0;
SELECT v0.c0, rt1.c0, vt0.c0, rt1.c1, rt1.c2 FROM v0, vt0, rt1 GROUP BY v0.c0, rt1.c0, vt0.c0, rt1.c1, rt1.c2;
SELECT ALL v0.c0, rt1.c0, vt0.c0, rt1.c1, rt1.c2 FROM v0, vt0, rt1 GROUP BY v0.c0, rt1.c0, vt0.c0, rt1.c1, rt1.c2 HAVING COUNT(*) UNION ALL SELECT v0.c0, rt1.c0, vt0.c0, rt1.c1, rt1.c2 FROM v0, vt0, rt1 GROUP BY v0.c0, rt1.c0, vt0.c0, rt1.c1, rt1.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0, rt1.c0, vt0.c0, rt1.c1, rt1.c2 FROM v0, vt0, rt1 GROUP BY v0.c0, rt1.c0, vt0.c0, rt1.c1, rt1.c2 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0, rt1.c0, vt0.c0, rt1.c1, rt1.c2 FROM v0, vt0, rt1 GROUP BY v0.c0, rt1.c0, vt0.c0, rt1.c1, rt1.c2;
SELECT ALL v0.c0, rt1.c0, vt0.c0, rt1.c1, rt1.c2 FROM v0, vt0, rt1 GROUP BY v0.c0, rt1.c0, vt0.c0, rt1.c1, rt1.c2 HAVING COUNT(*) UNION ALL SELECT v0.c0, rt1.c0, vt0.c0, rt1.c1, rt1.c2 FROM v0, vt0, rt1 GROUP BY v0.c0, rt1.c0, vt0.c0, rt1.c1, rt1.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0, rt1.c0, vt0.c0, rt1.c1, rt1.c2 FROM v0, vt0, rt1 GROUP BY v0.c0, rt1.c0, vt0.c0, rt1.c1, rt1.c2 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0, rt1.c0, vt0.c0, rt1.c1, rt1.c2 FROM v0, vt0, rt1 GROUP BY v0.c0, rt1.c0, vt0.c0, rt1.c1, rt1.c2;
SELECT ALL v0.c0, vt1.c0, rt1.c2, rt1.c0 FROM vt1, rt1 NATURAL JOIN v0;
SELECT ALL v0.c0, vt1.c0, rt1.c2, rt1.c0 FROM vt1, rt1 NATURAL JOIN v0 WHERE ((((NOT (rt1.c0)))<(((vt1.c0) BETWEEN (rt1.c0) AND (vt1.c0))))) UNION ALL SELECT ALL v0.c0, vt1.c0, rt1.c2, rt1.c0 FROM vt1, rt1 NATURAL JOIN v0 WHERE ((NOT ((((NOT (rt1.c0)))<(((vt1.c0) BETWEEN (rt1.c0) AND (vt1.c0))))))) UNION ALL SELECT v0.c0, vt1.c0, rt1.c2, rt1.c0 FROM vt1, rt1 NATURAL JOIN v0 WHERE ((((((NOT (rt1.c0)))<(((vt1.c0) BETWEEN (rt1.c0) AND (vt1.c0))))) ISNULL));
SELECT ALL v0.c0, vt1.c0, rt1.c2, rt1.c0 FROM vt1, rt1 NATURAL JOIN v0;
SELECT DISTINCT * FROM rt1, vt1 FULL OUTER JOIN v0 ON SUBSTR((rt1.c0 IN (v0.c0)), ((rt1.c0)!=(v0.c0))) CROSS JOIN vt0 ON CAST(((rt1.c2)-(rt1.c0)) AS REAL);
SELECT DISTINCT * FROM rt1, vt1 FULL OUTER JOIN v0 ON SUBSTR((rt1.c0 IN (v0.c0)), ((rt1.c0)<>(v0.c0))) CROSS JOIN vt0 ON CAST(((rt1.c2)-(rt1.c0)) AS REAL) WHERE (json_array_length((- (rt1.c1)))) UNION SELECT DISTINCT * FROM rt1, vt1 FULL OUTER JOIN v0 ON SUBSTR((rt1.c0 IN (v0.c0)), ((rt1.c0)<>(v0.c0))) CROSS JOIN vt0 ON CAST(((rt1.c2)-(rt1.c0)) AS REAL) WHERE ((NOT (json_array_length((- (rt1.c1)))))) UNION SELECT DISTINCT * FROM rt1, vt1 FULL OUTER JOIN v0 ON SUBSTR((rt1.c0 IN (v0.c0)), ((rt1.c0)<>(v0.c0))) CROSS JOIN vt0 ON CAST(((rt1.c2)-(rt1.c0)) AS REAL) WHERE (((json_array_length((- (rt1.c1)))) ISNULL));
SELECT DISTINCT * FROM rt1, vt1 FULL OUTER JOIN v0 ON SUBSTR((rt1.c0 IN (v0.c0)), ((rt1.c0)!=(v0.c0))) CROSS JOIN vt0 ON CAST(((rt1.c2)-(rt1.c0)) AS REAL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((((v0.c0)) BETWEEN ((((v0.c0)IS(0.5461905734267383)))) AND ((v0.c0)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((v0.c0)) BETWEEN ((((v0.c0)IS(0.5461905734267383)))) AND ((v0.c0)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((((v0.c0)) BETWEEN ((((v0.c0)IS(0.5461905734267383)))) AND ((v0.c0)))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING ((((((TOTAL(SUM(TOTAL(MAX(vt1.c0)))))AND(vt1.c0)))AND(SUM(vt1.c0)))) NOT NULL) UNION ALL SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING (NOT (((((((TOTAL(SUM(TOTAL(MAX(vt1.c0)))))AND(vt1.c0)))AND(SUM(vt1.c0)))) NOT NULL))) UNION ALL SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING ((((((((TOTAL(SUM(TOTAL(MAX(vt1.c0)))))AND(vt1.c0)))AND(SUM(vt1.c0)))) NOT NULL)) ISNULL);
SELECT * FROM vt1;
SELECT ALL * FROM vt1 WHERE ((((vt1.c0))<((vt1.c0))) COLLATE BINARY) UNION ALL SELECT * FROM vt1 WHERE ((NOT ((((vt1.c0))<((vt1.c0))) COLLATE BINARY))) UNION ALL SELECT * FROM vt1 WHERE ((((((vt1.c0))<((vt1.c0))) COLLATE BINARY) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (json_extract(('1056032480' IN ()), CAST(v0.c0 AS NUMERIC))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (json_extract(('1056032480' IN ()), CAST(v0.c0 AS NUMERIC))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((json_extract(('1056032480' IN ()), CAST(v0.c0 AS NUMERIC))) ISNULL));
SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM vt0 LEFT OUTER JOIN rt1 ON (- ((NOT (rt1.c0)))) GROUP BY rt1.c1, rt1.c0, rt1.c2;
SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM vt0 LEFT OUTER JOIN rt1 ON (- ((NOT (rt1.c0)))) WHERE (((((((rt1.c0)AND(rt1.c2)))AND(vt0.c0))) NOT BETWEEN ((NOT (rt1.c1))) AND (CAST(rt1.c0 AS BLOB)))) GROUP BY rt1.c1, rt1.c0, rt1.c2 UNION SELECT rt1.c1, rt1.c0, rt1.c2 FROM vt0 LEFT OUTER JOIN rt1 ON (- ((NOT (rt1.c0)))) WHERE ((NOT (((((((rt1.c0)AND(rt1.c2)))AND(vt0.c0))) NOT BETWEEN ((NOT (rt1.c1))) AND (CAST(rt1.c0 AS BLOB)))))) GROUP BY rt1.c1, rt1.c0, rt1.c2 UNION SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM vt0 LEFT OUTER JOIN rt1 ON (- ((NOT (rt1.c0)))) WHERE (((((((((rt1.c0)AND(rt1.c2)))AND(vt0.c0))) NOT BETWEEN ((NOT (rt1.c1))) AND (CAST(rt1.c0 AS BLOB)))) ISNULL)) GROUP BY rt1.c1, rt1.c0, rt1.c2;
SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM vt0 LEFT OUTER JOIN rt1 ON (- ((NOT (rt1.c0)))) GROUP BY rt1.c1, rt1.c0, rt1.c2;
SELECT ALL rt1.c0, rt1.c1, v0.c0, rt1.c2 FROM v0, rt1 GROUP BY rt1.c0, rt1.c1, v0.c0, rt1.c2;
SELECT ALL rt1.c0, rt1.c1, v0.c0, rt1.c2 FROM v0, rt1 GROUP BY rt1.c0, rt1.c1, v0.c0, rt1.c2 HAVING IFNULL(CASE WHEN AVG(rt1.c2) THEN MIN(SUM(MIN(rt1.c1))) WHEN COUNT(*) THEN rt1.c0 WHEN rt1.c1 THEN rt1.c1 END, TOTAL(MAX(COUNT(*)))) UNION ALL SELECT rt1.c0, rt1.c1, v0.c0, rt1.c2 FROM v0, rt1 GROUP BY rt1.c0, rt1.c1, v0.c0, rt1.c2 HAVING (NOT (IFNULL(CASE WHEN AVG(rt1.c2) THEN MIN(SUM(MIN(rt1.c1))) WHEN COUNT(*) THEN rt1.c0 WHEN rt1.c1 THEN rt1.c1 END, TOTAL(MAX(COUNT(*)))))) UNION ALL SELECT rt1.c0, rt1.c1, v0.c0, rt1.c2 FROM v0, rt1 NOT INDEXED GROUP BY rt1.c0, rt1.c1, v0.c0, rt1.c2 HAVING ((IFNULL(CASE WHEN AVG(rt1.c2) THEN MIN(SUM(MIN(rt1.c1))) WHEN COUNT(*) THEN rt1.c0 WHEN rt1.c1 THEN rt1.c1 END, TOTAL(MAX(COUNT(*))))) ISNULL);
SELECT * FROM vt1;
SELECT ALL * FROM vt1 WHERE ((((load_extension(vt1.c0)))>((vt1.c0 COLLATE RTRIM)))) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT ((((load_extension(vt1.c0)))>((vt1.c0 COLLATE RTRIM)))))) UNION ALL SELECT ALL * FROM vt1 WHERE ((((((load_extension(vt1.c0)))>((vt1.c0 COLLATE RTRIM)))) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT vt0.c0 FROM vt0, vt1;
SELECT DISTINCT vt0.c0 FROM vt0, vt1 WHERE (0xffffffffad5e2571) UNION SELECT DISTINCT vt0.c0 FROM vt0, vt1 WHERE ((NOT (0Xffffffffad5e2571))) UNION SELECT DISTINCT vt0.c0 FROM vt0, vt1 WHERE (((0Xffffffffad5e2571) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0, vt1;
SELECT ALL vt1.c0, v0.c0, vt0.c0 FROM vt1, v0, vt0 GROUP BY vt1.c0, v0.c0, vt0.c0;
SELECT ALL vt1.c0, v0.c0, vt0.c0 FROM vt1, v0, vt0 WHERE (0.27917050473647287) GROUP BY vt1.c0, v0.c0, vt0.c0 UNION SELECT ALL vt1.c0, v0.c0, vt0.c0 FROM vt1, v0, vt0 WHERE ((NOT (0.27917050473647287))) GROUP BY vt1.c0, v0.c0, vt0.c0 UNION SELECT ALL vt1.c0, v0.c0, vt0.c0 FROM vt1, v0, vt0 WHERE (((0.27917050473647287) ISNULL)) GROUP BY vt1.c0, v0.c0, vt0.c0;
SELECT ALL vt1.c0, v0.c0, vt0.c0 FROM vt1, v0, vt0 GROUP BY vt1.c0, v0.c0, vt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING AVG((COUNT(*) IN (v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (AVG((COUNT(*) IN (v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((AVG((COUNT(*) IN (v0.c0)))) ISNULL);
SELECT ALL TOTAL(((((v0.c0)>=(v0.c0))) BETWEEN (CAST(v0.c0 AS REAL)) AND ((- (v0.c0))))) FROM v0 ORDER BY (~ (0.1942525260111827)) COLLATE BINARY  NULLS FIRST;
SELECT rt1.c2, rt1.c0, vt0.c0, v0.c0, rt1.c1 FROM vt0 LEFT OUTER JOIN rt1 ON TIME(((v0.c0)GLOB(rt1.c1)), (~ (rt1.c2)), ((vt0.c0) NOT NULL), (x'' IN ()), rt1.c1) CROSS JOIN v0 ON rt1.c0;
SELECT rt1.c2, rt1.c0, vt0.c0, v0.c0, rt1.c1 FROM vt0 LEFT OUTER JOIN rt1 ON TIME(((v0.c0)GLOB(rt1.c1)), (~ (rt1.c2)), ((vt0.c0) NOT NULL), (x'' IN ()), rt1.c1) CROSS JOIN v0 ON rt1.c0 WHERE (CAST(((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)) AS NUMERIC)) UNION ALL SELECT ALL rt1.c2, rt1.c0, vt0.c0, v0.c0, rt1.c1 FROM vt0 LEFT OUTER JOIN rt1 ON TIME(((v0.c0)GLOB(rt1.c1)), (~ (rt1.c2)), ((vt0.c0) NOT NULL), (x'' IN ()), rt1.c1) CROSS JOIN v0 ON rt1.c0 WHERE ((NOT (CAST(((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)) AS NUMERIC)))) UNION ALL SELECT ALL rt1.c2, rt1.c0, vt0.c0, v0.c0, rt1.c1 FROM vt0 LEFT OUTER JOIN rt1 ON TIME(((v0.c0)GLOB(rt1.c1)), (~ (rt1.c2)), ((vt0.c0) NOT NULL), (x'' IN ()), rt1.c1) CROSS JOIN v0 ON rt1.c0 WHERE (((CAST(((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)) AS NUMERIC)) ISNULL));
SELECT rt1.c2, rt1.c0, vt0.c0, v0.c0, rt1.c1 FROM vt0 LEFT OUTER JOIN rt1 ON TIME(((v0.c0)GLOB(rt1.c1)), (~ (rt1.c2)), ((vt0.c0) NOT NULL), (x'' IN ()), rt1.c1) CROSS JOIN v0 ON rt1.c0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))>(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))>(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))>(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL vt0.c0 FROM vt0 INNER JOIN vt1 ON -1134633254 RIGHT OUTER JOIN v0 ON '0.16654810850441404' GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 INNER JOIN vt1 ON -1134633254 RIGHT OUTER JOIN v0 ON '0.16654810850441404' WHERE (((x'')>=(((v0.c0) BETWEEN (v0.c0) AND (vt1.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 INNER JOIN vt1 ON -1134633254 RIGHT OUTER JOIN v0 ON '0.16654810850441404' WHERE ((NOT (((x'')>=(((v0.c0) BETWEEN (v0.c0) AND (vt1.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 INNER JOIN vt1 ON -1134633254 RIGHT OUTER JOIN v0 ON '0.16654810850441404' WHERE (((((x'')>=(((v0.c0) BETWEEN (v0.c0) AND (vt1.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 INNER JOIN vt1 ON -1134633254 RIGHT OUTER JOIN v0 ON '0.16654810850441404' GROUP BY vt0.c0;
SELECT ALL v0.c0 FROM vt1, vt0 RIGHT OUTER JOIN v0 ON vt1.c0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt1, vt0 RIGHT OUTER JOIN v0 ON vt1.c0 GROUP BY v0.c0 HAVING 'z#' UNION ALL SELECT ALL v0.c0 FROM vt1, vt0 RIGHT OUTER JOIN v0 ON vt1.c0 GROUP BY v0.c0 HAVING (NOT ('z#')) UNION ALL SELECT ALL v0.c0 FROM vt1, vt0 RIGHT OUTER JOIN v0 ON vt1.c0 GROUP BY v0.c0 HAVING (('z#') ISNULL);
SELECT ALL v0.c0 FROM vt1, vt0 RIGHT OUTER JOIN v0 ON vt1.c0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt1, vt0 RIGHT OUTER JOIN v0 ON vt1.c0 GROUP BY v0.c0 HAVING 'z#' UNION ALL SELECT ALL v0.c0 FROM vt1, vt0 RIGHT OUTER JOIN v0 ON vt1.c0 GROUP BY v0.c0 HAVING (NOT ('z#')) UNION ALL SELECT ALL v0.c0 FROM vt1, vt0 RIGHT OUTER JOIN v0 ON vt1.c0 GROUP BY v0.c0 HAVING (('z#') ISNULL);
SELECT ALL v0.c0 FROM vt1, vt0 RIGHT OUTER JOIN v0 ON vt1.c0 GROUP BY v0.c0;
SELECT ALL * FROM vt1, v0, rt1, vt0;
SELECT ALL * FROM vt1, v0, rt1, vt0 WHERE ((+ ((rt1.c1 IN ())))) UNION ALL SELECT ALL * FROM vt1, v0, rt1, vt0 WHERE ((NOT ((+ ((rt1.c1 IN ())))))) UNION ALL SELECT * FROM vt1, v0, rt1, vt0 WHERE ((((+ ((rt1.c1 IN ())))) ISNULL));
SELECT ALL * FROM vt1, v0, rt1, vt0;
SELECT DISTINCT * FROM vt0, rt1, vt1, v0;
SELECT DISTINCT * FROM vt0, rt1, vt1, v0 WHERE (((vt1.c0 COLLATE RTRIM)>=(CAST(rt1.c1 AS INTEGER)))) UNION SELECT DISTINCT * FROM vt0, rt1, vt1, v0 WHERE ((NOT (((vt1.c0 COLLATE RTRIM)>=(CAST(rt1.c1 AS INTEGER)))))) UNION SELECT DISTINCT * FROM vt0, rt1, vt1, v0 WHERE (((((vt1.c0 COLLATE RTRIM)>=(CAST(rt1.c1 AS INTEGER)))) ISNULL));
SELECT DISTINCT * FROM vt0, rt1, vt1, v0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (TRIM(DISTINCT NULL, ((('1900053295'))>((x''))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (TRIM(DISTINCT NULL, ((('1900053295'))>((x''))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((TRIM(DISTINCT NULL, ((('1900053295'))>((x''))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt1.c2, rt1.c1, rt1.c0, v0.c0 FROM rt1, vt0, v0 CROSS JOIN vt1 ON (- ((((v0.c0))<((rt1.c0))))) GROUP BY rt1.c2, rt1.c1, rt1.c0, v0.c0;
SELECT rt1.c2, rt1.c1, rt1.c0, v0.c0 FROM rt1, vt0, v0 CROSS JOIN vt1 ON (- ((((v0.c0))<((rt1.c0))))) GROUP BY rt1.c2, rt1.c1, rt1.c0, v0.c0 HAVING TOTAL(AVG(AVG(0.7234455922885121))) UNION ALL SELECT rt1.c2, rt1.c1, rt1.c0, v0.c0 FROM rt1, vt0, v0 CROSS JOIN vt1 ON (- ((((v0.c0))<((rt1.c0))))) GROUP BY rt1.c2, rt1.c1, rt1.c0, v0.c0 HAVING (NOT (TOTAL(AVG(AVG(0.7234455922885121))))) UNION ALL SELECT ALL rt1.c2, rt1.c1, rt1.c0, v0.c0 FROM rt1, vt0, v0 CROSS JOIN vt1 ON (- ((((v0.c0))<((rt1.c0))))) GROUP BY rt1.c2, rt1.c1, rt1.c0, v0.c0 HAVING ((TOTAL(AVG(AVG(0.7234455922885121)))) ISNULL);
SELECT v0.c0 FROM vt1, v0;
SELECT ALL v0.c0 FROM vt1, v0 WHERE (((vt1.c0) ISNULL)) UNION ALL SELECT v0.c0 FROM vt1, v0 WHERE ((NOT (((vt1.c0) ISNULL)))) UNION ALL SELECT v0.c0 FROM vt1, v0 WHERE (((((vt1.c0) ISNULL)) ISNULL));
SELECT v0.c0 FROM vt1, v0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CAST(TYPEOF('') AS REAL)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CAST(TYPEOF('') AS REAL)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CAST(TYPEOF('') AS REAL)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((+ (CAST(v0.c0 AS INTEGER)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((+ (CAST(v0.c0 AS INTEGER)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((+ (CAST(v0.c0 AS INTEGER)))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0, rt1.c1 FROM vt0, rt1, v0 GROUP BY v0.c0, rt1.c1;
SELECT v0.c0, rt1.c1 FROM vt0, rt1, v0 GROUP BY v0.c0, rt1.c1 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0, rt1.c1 FROM vt0, rt1, v0 GROUP BY v0.c0, rt1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0, rt1.c1 FROM vt0, rt1, v0 GROUP BY v0.c0, rt1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0, rt1.c1 FROM vt0, rt1, v0 GROUP BY v0.c0, rt1.c1;
SELECT v0.c0, rt1.c1 FROM vt0, rt1, v0 GROUP BY v0.c0, rt1.c1 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0, rt1.c1 FROM vt0, rt1, v0 GROUP BY v0.c0, rt1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0, rt1.c1 FROM vt0, rt1, v0 GROUP BY v0.c0, rt1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0, rt1.c1 FROM vt0, rt1, v0 GROUP BY v0.c0, rt1.c1;
SELECT ALL MIN((((0.034595108912718664 IN (v0.c0))) NOT NULL)) FROM vt0, v0, vt1 ORDER BY ((-1341690803) NOT BETWEEN ('2046133385') AND ((((vt1.c0, vt0.c0, vt1.c0))>((0.9270873371831774, v0.c0, vt0.c0)))))  NULLS FIRST;
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE (vt1.c0) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (vt1.c0))) UNION ALL SELECT * FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((CAST(vt0.c0 AS TEXT) IN ())) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((CAST(vt0.c0 AS TEXT) IN ())))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((CAST(vt0.c0 AS TEXT) IN ())) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT rt1.c0, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1;
SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE (((((((rt1.c2) ISNULL))AND(NULL)))OR((((rt1.c0))>((rt1.c0)))))) GROUP BY rt1.c0, rt1.c2, rt1.c1 UNION SELECT rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE ((NOT (((((((rt1.c2) ISNULL))AND(NULL)))OR((((rt1.c0))>((rt1.c0)))))))) GROUP BY rt1.c0, rt1.c2, rt1.c1 UNION SELECT rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE (((((((((rt1.c2) ISNULL))AND(NULL)))OR((((rt1.c0))>((rt1.c0)))))) ISNULL)) GROUP BY rt1.c0, rt1.c2, rt1.c1;
SELECT rt1.c0, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1;
SELECT vt0.c0, v0.c0 FROM vt1 INNER JOIN vt0 ON (CAST(vt1.c0 AS BLOB) IN ()) CROSS JOIN v0 ON (((((((v0.c0))>((vt0.c0))))OR(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))))OR((((vt1.c0, vt1.c0, vt0.c0))<((v0.c0, v0.c0, vt0.c0))))) GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt1 INNER JOIN vt0 ON (CAST(vt1.c0 AS BLOB) IN ()) CROSS JOIN v0 ON (((((((v0.c0))>((vt0.c0))))OR(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))))OR((((vt1.c0, vt1.c0, vt0.c0))<((v0.c0, v0.c0, vt0.c0))))) GROUP BY vt0.c0, v0.c0 HAVING CAST(COUNT('') AS NUMERIC) UNION ALL SELECT vt0.c0, v0.c0 FROM vt1 INNER JOIN vt0 ON (CAST(vt1.c0 AS BLOB) IN ()) CROSS JOIN v0 ON (((((((v0.c0))>((vt0.c0))))OR(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))))OR((((vt1.c0, vt1.c0, vt0.c0))<((v0.c0, v0.c0, vt0.c0))))) GROUP BY vt0.c0, v0.c0 HAVING (NOT (CAST(COUNT('') AS NUMERIC))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt1 INNER JOIN vt0 ON (CAST(vt1.c0 AS BLOB) IN ()) CROSS JOIN v0 ON (((((((v0.c0))>((vt0.c0))))OR(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))))OR((((vt1.c0, vt1.c0, vt0.c0))<((v0.c0, v0.c0, vt0.c0))))) GROUP BY vt0.c0, v0.c0 HAVING ((CAST(COUNT('') AS NUMERIC)) ISNULL);
SELECT vt0.c0, v0.c0 FROM vt1 INNER JOIN vt0 ON (CAST(vt1.c0 AS BLOB) IN ()) CROSS JOIN v0 ON (((((((v0.c0))>((vt0.c0))))OR(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))))OR((((vt1.c0, vt1.c0, vt0.c0))<((v0.c0, v0.c0, vt0.c0))))) GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt1 INNER JOIN vt0 ON (CAST(vt1.c0 AS BLOB) IN ()) CROSS JOIN v0 ON (((((((v0.c0))>((vt0.c0))))OR(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))))OR((((vt1.c0, vt1.c0, vt0.c0))<((v0.c0, v0.c0, vt0.c0))))) GROUP BY vt0.c0, v0.c0 HAVING CAST(COUNT('') AS NUMERIC) UNION ALL SELECT vt0.c0, v0.c0 FROM vt1 INNER JOIN vt0 ON (CAST(vt1.c0 AS BLOB) IN ()) CROSS JOIN v0 ON (((((((v0.c0))>((vt0.c0))))OR(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))))OR((((vt1.c0, vt1.c0, vt0.c0))<((v0.c0, v0.c0, vt0.c0))))) GROUP BY vt0.c0, v0.c0 HAVING (NOT (CAST(COUNT('') AS NUMERIC))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt1 INNER JOIN vt0 ON (CAST(vt1.c0 AS BLOB) IN ()) CROSS JOIN v0 ON (((((((v0.c0))>((vt0.c0))))OR(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))))OR((((vt1.c0, vt1.c0, vt0.c0))<((v0.c0, v0.c0, vt0.c0))))) GROUP BY vt0.c0, v0.c0 HAVING ((CAST(COUNT('') AS NUMERIC)) ISNULL);
SELECT vt0.c0, v0.c0 FROM vt1 INNER JOIN vt0 ON (CAST(vt1.c0 AS BLOB) IN ()) CROSS JOIN v0 ON (((((((v0.c0))>((vt0.c0))))OR(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))))OR((((vt1.c0, vt1.c0, vt0.c0))<((v0.c0, v0.c0, vt0.c0))))) GROUP BY vt0.c0, v0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt1, vt0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt1, vt0 WHERE (((((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (((v0.c0) BETWEEN (0.978335394968948) AND (NULL))) AND ((v0.c0 IN ())))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0, vt1, vt0 WHERE ((NOT (((((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (((v0.c0) BETWEEN (0.978335394968948) AND (NULL))) AND ((v0.c0 IN ())))))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0, vt1, vt0 WHERE (((((((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (((v0.c0) BETWEEN (0.978335394968948) AND (NULL))) AND ((v0.c0 IN ())))) ISNULL));
SELECT ALL v0.c0, vt0.c0 FROM v0, vt1, vt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))<=((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))<=((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))<=((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt1.c0, vt0.c0 FROM vt0, vt1, v0 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1, v0 WHERE ((((vt1.c0)=(vt1.c0)) IN ())) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt0, vt1, v0 WHERE ((NOT ((((vt1.c0)=(vt1.c0)) IN ())))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt0, vt1, v0 WHERE ((((((vt1.c0)==(vt1.c0)) IN ())) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt0, vt1, v0 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0, rt1.c0, rt1.c2, rt1.c1 FROM vt1, rt1, vt0 GROUP BY vt1.c0, vt0.c0, rt1.c0, rt1.c2, rt1.c1;
SELECT vt1.c0, vt0.c0, rt1.c0, rt1.c2, rt1.c1 FROM vt1, rt1, vt0 GROUP BY vt1.c0, vt0.c0, rt1.c0, rt1.c2, rt1.c1 HAVING COUNT(MAX(rt1.c0)) UNION ALL SELECT vt1.c0, vt0.c0, rt1.c0, rt1.c2, rt1.c1 FROM vt1, rt1, vt0 GROUP BY vt1.c0, vt0.c0, rt1.c0, rt1.c2, rt1.c1 HAVING (NOT (COUNT(MAX(rt1.c0)))) UNION ALL SELECT ALL vt1.c0, vt0.c0, rt1.c0, rt1.c2, rt1.c1 FROM vt1, rt1, vt0 GROUP BY vt1.c0, vt0.c0, rt1.c0, rt1.c2, rt1.c1 HAVING ((COUNT(MAX(rt1.c0))) ISNULL);
SELECT ALL SUM(0.24618059737454923) FROM vt0, v0, rt1;
SELECT ALL * FROM v0, vt0, rt1;
SELECT ALL * FROM v0, vt0, rt1 WHERE (rt1.c0) UNION ALL SELECT * FROM v0, vt0, rt1 WHERE ((NOT (rt1.c0))) UNION ALL SELECT ALL * FROM v0, vt0, rt1 WHERE (((rt1.c0) ISNULL));
SELECT ALL * FROM v0, vt0, rt1;
SELECT DISTINCT v0.c0, rt1.c2, vt0.c0, vt1.c0 FROM vt0, vt1, v0, rt1;
SELECT DISTINCT v0.c0, rt1.c2, vt0.c0, vt1.c0 FROM vt0, vt1, v0, rt1 WHERE ((+ (((vt0.c0)=(vt0.c0))))) UNION SELECT DISTINCT v0.c0, rt1.c2, vt0.c0, vt1.c0 FROM vt0, vt1, v0, rt1 WHERE ((NOT ((+ (((vt0.c0)=(vt0.c0))))))) UNION SELECT DISTINCT v0.c0, rt1.c2, vt0.c0, vt1.c0 FROM vt0, vt1, v0, rt1 WHERE ((((+ (((vt0.c0)=(vt0.c0))))) ISNULL));
SELECT DISTINCT v0.c0, rt1.c2, vt0.c0, vt1.c0 FROM vt0, vt1, v0, rt1;
SELECT rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2;
SELECT rt1.c0, rt1.c2 FROM rt1 WHERE (((((rt1.c0)<<(rt1.c1))) IS FALSE)) GROUP BY rt1.c0, rt1.c2 UNION SELECT ALL rt1.c0, rt1.c2 FROM rt1 WHERE ((NOT (((((rt1.c0)<<(rt1.c1))) IS FALSE)))) GROUP BY rt1.c0, rt1.c2 UNION SELECT rt1.c0, rt1.c2 FROM rt1 WHERE (((((((rt1.c0)<<(rt1.c1))) IS FALSE)) ISNULL)) GROUP BY rt1.c0, rt1.c2;
SELECT rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2;
SELECT rt1.c1, vt1.c0, rt1.c2, v0.c0 FROM vt0, vt1, v0 CROSS JOIN rt1 ON ((((rt1.c2) BETWEEN (vt1.c0) AND (v0.c0)))=(CAST(vt0.c0 AS TEXT))) GROUP BY rt1.c1, vt1.c0, rt1.c2, v0.c0;
SELECT ALL rt1.c1, vt1.c0, rt1.c2, v0.c0 FROM vt0, vt1, v0 CROSS JOIN rt1 ON ((((rt1.c2) BETWEEN (vt1.c0) AND (v0.c0)))=(CAST(vt0.c0 AS TEXT))) GROUP BY rt1.c1, vt1.c0, rt1.c2, v0.c0 HAVING SUM((SUM('-566296833') IN ())) UNION ALL SELECT rt1.c1, vt1.c0, rt1.c2, v0.c0 FROM vt0, vt1, v0 CROSS JOIN rt1 ON ((((rt1.c2) BETWEEN (vt1.c0) AND (v0.c0)))=(CAST(vt0.c0 AS TEXT))) GROUP BY rt1.c1, vt1.c0, rt1.c2, v0.c0 HAVING (NOT (SUM((SUM('-566296833') IN ())))) UNION ALL SELECT rt1.c1, vt1.c0, rt1.c2, v0.c0 FROM vt0, vt1, v0 CROSS JOIN rt1 ON ((((rt1.c2) BETWEEN (vt1.c0) AND (v0.c0)))=(CAST(vt0.c0 AS TEXT))) GROUP BY rt1.c1, vt1.c0, rt1.c2, v0.c0 HAVING ((SUM((SUM('-566296833') IN ()))) ISNULL);
SELECT rt1.c1, vt1.c0, rt1.c2, v0.c0 FROM vt0, vt1, v0 CROSS JOIN rt1 ON ((((rt1.c2) BETWEEN (vt1.c0) AND (v0.c0)))=(CAST(vt0.c0 AS TEXT))) GROUP BY rt1.c1, vt1.c0, rt1.c2, v0.c0;
SELECT ALL rt1.c1, vt1.c0, rt1.c2, v0.c0 FROM vt0, vt1, v0 CROSS JOIN rt1 ON ((((rt1.c2) BETWEEN (vt1.c0) AND (v0.c0)))=(CAST(vt0.c0 AS TEXT))) GROUP BY rt1.c1, vt1.c0, rt1.c2, v0.c0 HAVING SUM((SUM('-566296833') IN ())) UNION ALL SELECT rt1.c1, vt1.c0, rt1.c2, v0.c0 FROM vt0, vt1, v0 CROSS JOIN rt1 ON ((((rt1.c2) BETWEEN (vt1.c0) AND (v0.c0)))=(CAST(vt0.c0 AS TEXT))) GROUP BY rt1.c1, vt1.c0, rt1.c2, v0.c0 HAVING (NOT (SUM((SUM('-566296833') IN ())))) UNION ALL SELECT rt1.c1, vt1.c0, rt1.c2, v0.c0 FROM vt0, vt1, v0 CROSS JOIN rt1 ON ((((rt1.c2) BETWEEN (vt1.c0) AND (v0.c0)))=(CAST(vt0.c0 AS TEXT))) GROUP BY rt1.c1, vt1.c0, rt1.c2, v0.c0 HAVING ((SUM((SUM('-566296833') IN ()))) ISNULL);
SELECT rt1.c1, vt1.c0, rt1.c2, v0.c0 FROM vt0, vt1, v0 CROSS JOIN rt1 ON ((((rt1.c2) BETWEEN (vt1.c0) AND (v0.c0)))=(CAST(vt0.c0 AS TEXT))) GROUP BY rt1.c1, vt1.c0, rt1.c2, v0.c0;
SELECT ALL MIN(((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END) ISNULL)) FROM vt1, vt0, v0;
SELECT ALL * FROM vt1 LEFT OUTER JOIN v0 ON (('-1677826328') NOT NULL);
SELECT * FROM vt1 LEFT OUTER JOIN v0 ON (('-1677826328') NOT NULL) WHERE (((vt1.c0 COLLATE RTRIM) ISNULL)) UNION ALL SELECT * FROM vt1 LEFT OUTER JOIN v0 ON (('-1677826328') NOT NULL) WHERE ((NOT (((vt1.c0 COLLATE RTRIM) ISNULL)))) UNION ALL SELECT ALL * FROM vt1 LEFT OUTER JOIN v0 ON (('-1677826328') NOT NULL) WHERE (((((vt1.c0 COLLATE RTRIM) ISNULL)) ISNULL));
SELECT ALL * FROM vt1 LEFT OUTER JOIN v0 ON (('-1677826328') NOT NULL);
SELECT DISTINCT vt1.c0, vt0.c0, rt1.c0, rt1.c1, rt1.c2 FROM v0, rt1, vt1, vt0;
SELECT DISTINCT vt1.c0, vt0.c0, rt1.c0, rt1.c1, rt1.c2 FROM v0, rt1, vt1, vt0 WHERE (((COALESCE(DISTINCT 0x6e95c060, v0.c0))<(((rt1.c1)&(rt1.c0))))) UNION SELECT DISTINCT vt1.c0, vt0.c0, rt1.c0, rt1.c1, rt1.c2 FROM v0, rt1, vt1, vt0 WHERE ((NOT (((COALESCE(DISTINCT 0X6e95c060, v0.c0))<(((rt1.c1)&(rt1.c0))))))) UNION SELECT DISTINCT vt1.c0, vt0.c0, rt1.c0, rt1.c1, rt1.c2 FROM v0, rt1, vt1, vt0 WHERE (((((COALESCE(DISTINCT 0X6e95c060, v0.c0))<(((rt1.c1)&(rt1.c0))))) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c0, rt1.c0, rt1.c1, rt1.c2 FROM v0, rt1, vt1, vt0;
SELECT rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1;
SELECT rt1.c0, rt1.c1 FROM rt1 WHERE (rt1.c2) GROUP BY rt1.c0, rt1.c1 UNION SELECT rt1.c0, rt1.c1 FROM rt1 WHERE ((NOT (rt1.c2))) GROUP BY rt1.c0, rt1.c1 UNION SELECT rt1.c0, rt1.c1 FROM rt1 WHERE (((rt1.c2) ISNULL)) GROUP BY rt1.c0, rt1.c1;
SELECT rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1;
SELECT rt1.c1, vt0.c0, rt1.c2, v0.c0, rt1.c0 FROM v0 NOT INDEXED, rt1, vt0 GROUP BY rt1.c1, vt0.c0, rt1.c2, v0.c0, rt1.c0;
SELECT rt1.c1, vt0.c0, rt1.c2, v0.c0, rt1.c0 FROM v0, rt1, vt0 GROUP BY rt1.c1, vt0.c0, rt1.c2, v0.c0, rt1.c0 HAVING ((TOTAL(MAX(MIN(rt1.c0))))<(CASE WHEN 1.510269763E9 THEN COUNT(COUNT(*)) END)) UNION ALL SELECT rt1.c1, vt0.c0, rt1.c2, v0.c0, rt1.c0 FROM v0, rt1, vt0 GROUP BY rt1.c1, vt0.c0, rt1.c2, v0.c0, rt1.c0 HAVING (NOT (((TOTAL(MAX(MIN(rt1.c0))))<(CASE WHEN 1.510269763E9 THEN COUNT(COUNT(*)) END)))) UNION ALL SELECT rt1.c1, vt0.c0, rt1.c2, v0.c0, rt1.c0 FROM v0, rt1, vt0 GROUP BY rt1.c1, vt0.c0, rt1.c2, v0.c0, rt1.c0 HAVING ((((TOTAL(MAX(MIN(rt1.c0))))<(CASE WHEN 1.510269763E9 THEN COUNT(COUNT(*)) END))) ISNULL);
SELECT ALL * FROM v0, rt1 FULL OUTER JOIN vt0 ON CASE WHEN IFNULL(vt1.c0, '-1311386731') THEN (- (rt1.c0)) END RIGHT OUTER JOIN vt1 ON ((0.5310383435842607) BETWEEN (((((((((rt1.c1)AND(rt1.c1)))AND(vt1.c0)))OR(vt1.c0)))OR(vt0.c0))) AND ((v0.c0 IN ())));
SELECT DISTINCT * FROM v0, rt1, vt1;
SELECT DISTINCT * FROM v0, rt1, vt1 WHERE (v0.c0) UNION SELECT DISTINCT * FROM v0, rt1, vt1 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT * FROM v0, rt1, vt1 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT * FROM v0, rt1, vt1;
SELECT v0.c0 FROM vt0, vt1, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, vt1, v0 WHERE (TRIM(vt0.c0) COLLATE BINARY) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt0, vt1, v0 WHERE ((NOT (TRIM(vt0.c0) COLLATE BINARY))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt0, vt1, v0 WHERE (((TRIM(vt0.c0) COLLATE BINARY) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, vt1, v0 GROUP BY v0.c0;
SELECT rt1.c2, v0.c0 FROM v0, rt1, vt1 GROUP BY rt1.c2, v0.c0;
SELECT ALL rt1.c2, v0.c0 FROM v0, rt1, vt1 GROUP BY rt1.c2, v0.c0 HAVING ((((vt1.c0) ISNULL)) IS FALSE) UNION ALL SELECT ALL rt1.c2, v0.c0 FROM v0, rt1, vt1 GROUP BY rt1.c2, v0.c0 HAVING (NOT (((((vt1.c0) ISNULL)) IS FALSE))) UNION ALL SELECT rt1.c2, v0.c0 FROM v0, rt1, vt1 GROUP BY rt1.c2, v0.c0 HAVING ((((((vt1.c0) ISNULL)) IS FALSE)) ISNULL);
SELECT rt1.c2, v0.c0 FROM v0, rt1, vt1 GROUP BY rt1.c2, v0.c0;
SELECT ALL rt1.c2, v0.c0 FROM v0, rt1, vt1 GROUP BY rt1.c2, v0.c0 HAVING ((((vt1.c0) ISNULL)) IS FALSE) UNION ALL SELECT ALL rt1.c2, v0.c0 FROM v0, rt1, vt1 GROUP BY rt1.c2, v0.c0 HAVING (NOT (((((vt1.c0) ISNULL)) IS FALSE))) UNION ALL SELECT rt1.c2, v0.c0 FROM v0, rt1, vt1 GROUP BY rt1.c2, v0.c0 HAVING ((((((vt1.c0) ISNULL)) IS FALSE)) ISNULL);
SELECT rt1.c2, v0.c0 FROM v0, rt1, vt1 GROUP BY rt1.c2, v0.c0;
SELECT ALL MIN((~ ((~ (vt0.c0))))) FROM vt0, vt1, v0 ORDER BY json_object((vt0.c0 IN ()), ((vt1.c0) IS FALSE)) ASC, (CAST(0.7174069264991842 AS REAL) IN ()), ('1739170922' IN ())  NULLS FIRST;
SELECT ALL rt1.c1, vt0.c0 FROM rt1, vt0;
SELECT ALL rt1.c1, vt0.c0 FROM rt1, vt0 WHERE (((vt0.c0)AND(rt1.c1))) UNION ALL SELECT rt1.c1, vt0.c0 FROM rt1, vt0 WHERE ((NOT (((vt0.c0)AND(rt1.c1))))) UNION ALL SELECT rt1.c1, vt0.c0 FROM rt1, vt0 WHERE (((((vt0.c0)AND(rt1.c1))) ISNULL));
SELECT ALL rt1.c1, vt0.c0 FROM rt1, vt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((((0.7731589590574328)>>(v0.c0)))LIKE(((v0.c0) IS TRUE)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((((0.7731589590574328)>>(v0.c0)))LIKE(((v0.c0) IS TRUE)))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((0.7731589590574328)>>(v0.c0)))LIKE(((v0.c0) IS TRUE)))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT rt1.c1, rt1.c0 FROM rt1, vt1, v0 GROUP BY rt1.c1, rt1.c0;
SELECT rt1.c1, rt1.c0 FROM rt1 NOT INDEXED, vt1, v0 WHERE (CAST((- (rt1.c2)) AS INTEGER)) GROUP BY rt1.c1, rt1.c0 UNION SELECT ALL rt1.c1, rt1.c0 FROM rt1, vt1, v0 WHERE ((NOT (CAST((- (rt1.c2)) AS INTEGER)))) GROUP BY rt1.c1, rt1.c0 UNION SELECT rt1.c1, rt1.c0 FROM rt1, vt1 NOT INDEXED, v0 WHERE (((CAST((- (rt1.c2)) AS INTEGER)) ISNULL)) GROUP BY rt1.c1, rt1.c0;
SELECT rt1.c1, rt1.c0 FROM rt1, vt1, v0 GROUP BY rt1.c1, rt1.c0;
SELECT ALL rt1.c2, v0.c0, rt1.c0, rt1.c1 FROM v0, rt1 GROUP BY rt1.c2, v0.c0, rt1.c0, rt1.c1;
SELECT rt1.c2, v0.c0, rt1.c0, rt1.c1 FROM v0, rt1 GROUP BY rt1.c2, v0.c0, rt1.c0, rt1.c1 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c2, v0.c0, rt1.c0, rt1.c1 FROM v0, rt1 GROUP BY rt1.c2, v0.c0, rt1.c0, rt1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c2, v0.c0, rt1.c0, rt1.c1 FROM v0, rt1 GROUP BY rt1.c2, v0.c0, rt1.c0, rt1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c2, v0.c0, rt1.c0, rt1.c1 FROM v0, rt1 GROUP BY rt1.c2, v0.c0, rt1.c0, rt1.c1;
SELECT rt1.c2, v0.c0, rt1.c0, rt1.c1 FROM v0, rt1 GROUP BY rt1.c2, v0.c0, rt1.c0, rt1.c1 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c2, v0.c0, rt1.c0, rt1.c1 FROM v0, rt1 GROUP BY rt1.c2, v0.c0, rt1.c0, rt1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c2, v0.c0, rt1.c0, rt1.c1 FROM v0, rt1 GROUP BY rt1.c2, v0.c0, rt1.c0, rt1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c2, v0.c0, rt1.c0, rt1.c1 FROM v0, rt1 GROUP BY rt1.c2, v0.c0, rt1.c0, rt1.c1;
SELECT ALL TOTAL(((TRIM(DISTINCT vt0.c0, vt0.c0)) NOT BETWEEN (DATETIME('591531550', vt0.c0, rt1.c0)) AND (((vt0.c0)-(rt1.c2))))) FROM vt0, v0, vt1, rt1;
SELECT v0.c0, vt1.c0 FROM vt1 CROSS JOIN v0 ON (((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((((('1636949305')) NOT BETWEEN ((v0.c0)) AND ((vt1.c0))))));
SELECT ALL v0.c0, vt1.c0 FROM vt1 CROSS JOIN v0 ON (((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((((('1636949305')) NOT BETWEEN ((v0.c0)) AND ((vt1.c0)))))) WHERE ((((NULL))>((CAST(v0.c0 AS TEXT))))) UNION ALL SELECT ALL v0.c0, vt1.c0 FROM vt1 CROSS JOIN v0 ON (((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((((('1636949305')) NOT BETWEEN ((v0.c0)) AND ((vt1.c0)))))) WHERE ((NOT ((((NULL))>((CAST(v0.c0 AS TEXT))))))) UNION ALL SELECT ALL v0.c0, vt1.c0 FROM vt1 CROSS JOIN v0 ON (((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((((('1636949305')) NOT BETWEEN ((v0.c0)) AND ((vt1.c0)))))) WHERE ((((((NULL))>((CAST(v0.c0 AS TEXT))))) ISNULL));
SELECT v0.c0, vt1.c0 FROM vt1 CROSS JOIN v0 ON (((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((((('1636949305')) NOT BETWEEN ((v0.c0)) AND ((vt1.c0))))));
SELECT DISTINCT * FROM rt1, v0, vt1;
SELECT DISTINCT * FROM rt1, v0, vt1 WHERE (CAST(CASE rt1.c2  WHEN rt1.c2 THEN v0.c0 ELSE v0.c0 END AS INTEGER)) UNION SELECT DISTINCT * FROM rt1, v0, vt1 WHERE ((NOT (CAST(CASE rt1.c2  WHEN rt1.c2 THEN v0.c0 ELSE v0.c0 END AS INTEGER)))) UNION SELECT DISTINCT * FROM rt1, v0, vt1 WHERE (((CAST(CASE rt1.c2  WHEN rt1.c2 THEN v0.c0 ELSE v0.c0 END AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM rt1, v0, vt1;
SELECT rt1.c0, v0.c0, rt1.c1, rt1.c2, vt1.c0, vt0.c0 FROM rt1, v0, vt0, vt1 GROUP BY rt1.c0, v0.c0, rt1.c1, rt1.c2, vt1.c0, vt0.c0;
SELECT ALL rt1.c0, v0.c0, rt1.c1, rt1.c2, vt1.c0, vt0.c0 FROM rt1, v0, vt0, vt1 WHERE (x'') GROUP BY rt1.c0, v0.c0, rt1.c1, rt1.c2, vt1.c0, vt0.c0 UNION SELECT ALL rt1.c0, v0.c0, rt1.c1, rt1.c2, vt1.c0, vt0.c0 FROM rt1, v0, vt0, vt1 WHERE ((NOT (x''))) GROUP BY rt1.c0, v0.c0, rt1.c1, rt1.c2, vt1.c0, vt0.c0 UNION SELECT rt1.c0, v0.c0, rt1.c1, rt1.c2, vt1.c0, vt0.c0 FROM rt1, v0, vt0, vt1 WHERE (((x'') ISNULL)) GROUP BY rt1.c0, v0.c0, rt1.c1, rt1.c2, vt1.c0, vt0.c0;
SELECT rt1.c0, v0.c0, rt1.c1, rt1.c2, vt1.c0, vt0.c0 FROM rt1, v0, vt0, vt1 GROUP BY rt1.c0, v0.c0, rt1.c1, rt1.c2, vt1.c0, vt0.c0;
SELECT v0.c0 FROM v0 CROSS JOIN rt1 ON (((vt0.c0, rt1.c1, rt1.c1)) BETWEEN (((((vt1.c0))<((rt1.c2))), CAST(vt1.c0 AS REAL), (- (vt1.c0)))) AND ((((v0.c0) BETWEEN (vt1.c0) AND (vt0.c0)), (((rt1.c1)) BETWEEN ((v0.c0)) AND (('1983104339'))), x''))) FULL OUTER JOIN vt1 ON (+ (HEX(vt1.c0))) FULL OUTER JOIN vt0 ON ((((CAST(rt1.c2 AS TEXT))AND(NULL)))AND(HEX(x''))) GROUP BY v0.c0;
SELECT ALL * FROM vt1, vt0, v0;
SELECT ALL * FROM vt1, vt0, v0 WHERE (v0.c0) UNION ALL SELECT * FROM vt1, vt0, v0 WHERE ((NOT (v0.c0))) UNION ALL SELECT ALL * FROM vt1, vt0, v0 WHERE (((v0.c0) ISNULL));
SELECT ALL * FROM vt1, vt0, v0;
SELECT DISTINCT * FROM vt1, vt0, rt1, v0;
SELECT DISTINCT * FROM vt1, vt0, rt1, v0 WHERE (((((('405167778', vt0.c0, vt1.c0))>=((rt1.c0, rt1.c2, rt1.c2)))) NOTNULL)) UNION SELECT DISTINCT * FROM vt1, vt0, rt1, v0 WHERE ((NOT (((((('405167778', vt0.c0, vt1.c0))>=((rt1.c0, rt1.c2, rt1.c2)))) NOTNULL)))) UNION SELECT DISTINCT * FROM vt1, vt0, rt1, v0 WHERE (((((((('405167778', vt0.c0, vt1.c0))>=((rt1.c0, rt1.c2, rt1.c2)))) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM vt1, vt0, rt1, v0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((~ (vt1.c0))) NOT BETWEEN (((vt1.c0)&(vt1.c0))) AND ((vt1.c0 IN ())))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((~ (vt1.c0))) NOT BETWEEN (((vt1.c0)&(vt1.c0))) AND ((vt1.c0 IN ())))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((((~ (vt1.c0))) NOT BETWEEN (((vt1.c0)&(vt1.c0))) AND ((vt1.c0 IN ())))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING CAST(RTRIM(GROUP_CONCAT(x'')) AS TEXT) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (CAST(RTRIM(GROUP_CONCAT(x'')) AS TEXT))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((CAST(RTRIM(GROUP_CONCAT(x'')) AS TEXT)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING CAST(RTRIM(GROUP_CONCAT(x'')) AS TEXT) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (CAST(RTRIM(GROUP_CONCAT(x'')) AS TEXT))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((CAST(RTRIM(GROUP_CONCAT(x'')) AS TEXT)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT * FROM vt1, rt1, vt0, v0;
SELECT ALL * FROM vt1, rt1, vt0, v0 WHERE (CASE HEX(DISTINCT vt0.c0)  WHEN NULL THEN CAST(rt1.c0 AS REAL) ELSE CAST(vt1.c0 AS REAL) END) UNION ALL SELECT ALL * FROM vt1, rt1, vt0, v0 WHERE ((NOT (CASE HEX(DISTINCT vt0.c0)  WHEN NULL THEN CAST(rt1.c0 AS REAL) ELSE CAST(vt1.c0 AS REAL) END))) UNION ALL SELECT ALL * FROM vt1, rt1, vt0, v0 WHERE (((CASE HEX(DISTINCT vt0.c0)  WHEN NULL THEN CAST(rt1.c0 AS REAL) ELSE CAST(vt1.c0 AS REAL) END) ISNULL));
SELECT * FROM vt1, rt1, vt0, v0;
SELECT DISTINCT rt1.c0, rt1.c1 FROM vt1, vt0, rt1;
SELECT DISTINCT rt1.c0, rt1.c1 FROM vt1, vt0, rt1 WHERE ((((+ (vt0.c0))) NOTNULL)) UNION SELECT DISTINCT rt1.c0, rt1.c1 FROM vt1, vt0, rt1 WHERE ((NOT ((((+ (vt0.c0))) NOTNULL)))) UNION SELECT DISTINCT rt1.c0, rt1.c1 FROM vt1, vt0, rt1 WHERE ((((((+ (vt0.c0))) NOTNULL)) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c1 FROM vt1, vt0, rt1;
SELECT ALL rt1.c1, vt0.c0, v0.c0, rt1.c0 FROM vt0, v0 NOT INDEXED, rt1 GROUP BY rt1.c1, vt0.c0, v0.c0, rt1.c0;
SELECT rt1.c1, vt0.c0, v0.c0, rt1.c0 FROM vt0, v0, rt1 WHERE (((((vt0.c0)==(rt1.c1))) NOT BETWEEN ((((rt1.c0))=((rt1.c1)))) AND (CASE v0.c0  WHEN rt1.c0 THEN vt0.c0 END))) GROUP BY rt1.c1, vt0.c0, v0.c0, rt1.c0 UNION SELECT rt1.c1, vt0.c0, v0.c0, rt1.c0 FROM vt0, v0, rt1 WHERE ((NOT (((((vt0.c0)=(rt1.c1))) NOT BETWEEN ((((rt1.c0))==((rt1.c1)))) AND (CASE v0.c0  WHEN rt1.c0 THEN vt0.c0 END))))) GROUP BY rt1.c1, vt0.c0, v0.c0, rt1.c0 UNION SELECT rt1.c1, vt0.c0, v0.c0, rt1.c0 FROM vt0, v0, rt1 WHERE (((((((vt0.c0)=(rt1.c1))) NOT BETWEEN ((((rt1.c0))=((rt1.c1)))) AND (CASE v0.c0  WHEN rt1.c0 THEN vt0.c0 END))) ISNULL)) GROUP BY rt1.c1, vt0.c0, v0.c0, rt1.c0;
SELECT ALL rt1.c1, vt0.c0, v0.c0, rt1.c0 FROM vt0, v0 NOT INDEXED, rt1 GROUP BY rt1.c1, vt0.c0, v0.c0, rt1.c0;
SELECT ALL rt1.c0, vt0.c0, v0.c0, rt1.c2, rt1.c1, vt1.c0 FROM v0, vt1, vt0, rt1 GROUP BY rt1.c0, vt0.c0, v0.c0, rt1.c2, rt1.c1, vt1.c0;
SELECT rt1.c0, vt0.c0, v0.c0, rt1.c2, rt1.c1, vt1.c0 FROM v0, vt1, vt0, rt1 GROUP BY rt1.c0, vt0.c0, v0.c0, rt1.c2, rt1.c1, vt1.c0 HAVING MIN(rt1.c0 COLLATE NOCASE) UNION ALL SELECT rt1.c0, vt0.c0, v0.c0, rt1.c2, rt1.c1, vt1.c0 FROM v0, vt1, vt0, rt1 GROUP BY rt1.c0, vt0.c0, v0.c0, rt1.c2, rt1.c1, vt1.c0 HAVING (NOT (MIN(rt1.c0 COLLATE NOCASE))) UNION ALL SELECT ALL rt1.c0, vt0.c0, v0.c0, rt1.c2, rt1.c1, vt1.c0 FROM v0, vt1, vt0, rt1 GROUP BY rt1.c0, vt0.c0, v0.c0, rt1.c2, rt1.c1, vt1.c0 HAVING ((MIN(rt1.c0 COLLATE NOCASE)) ISNULL);
SELECT ALL rt1.c0, vt0.c0, v0.c0, rt1.c2, rt1.c1, vt1.c0 FROM v0, vt1, vt0, rt1 GROUP BY rt1.c0, vt0.c0, v0.c0, rt1.c2, rt1.c1, vt1.c0;
SELECT rt1.c0, vt0.c0, v0.c0, rt1.c2, rt1.c1, vt1.c0 FROM v0, vt1, vt0, rt1 GROUP BY rt1.c0, vt0.c0, v0.c0, rt1.c2, rt1.c1, vt1.c0 HAVING MIN(rt1.c0 COLLATE NOCASE) UNION ALL SELECT rt1.c0, vt0.c0, v0.c0, rt1.c2, rt1.c1, vt1.c0 FROM v0, vt1, vt0, rt1 GROUP BY rt1.c0, vt0.c0, v0.c0, rt1.c2, rt1.c1, vt1.c0 HAVING (NOT (MIN(rt1.c0 COLLATE NOCASE))) UNION ALL SELECT ALL rt1.c0, vt0.c0, v0.c0, rt1.c2, rt1.c1, vt1.c0 FROM v0, vt1, vt0, rt1 GROUP BY rt1.c0, vt0.c0, v0.c0, rt1.c2, rt1.c1, vt1.c0 HAVING ((MIN(rt1.c0 COLLATE NOCASE)) ISNULL);
SELECT ALL rt1.c0, vt0.c0, v0.c0, rt1.c2, rt1.c1, vt1.c0 FROM v0, vt1, vt0, rt1 GROUP BY rt1.c0, vt0.c0, v0.c0, rt1.c2, rt1.c1, vt1.c0;
SELECT ALL vt1.c0 FROM vt1, v0;
SELECT vt1.c0 FROM vt1, v0 WHERE (((vt1.c0 COLLATE BINARY)AND((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1, v0 WHERE ((NOT (((vt1.c0 COLLATE BINARY)AND((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))))) UNION ALL SELECT vt1.c0 FROM vt1, v0 WHERE (((((vt1.c0 COLLATE BINARY)AND((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) ISNULL));
SELECT ALL vt1.c0 FROM vt1, v0;
SELECT DISTINCT rt1.c2 FROM v0, vt0, rt1;
SELECT DISTINCT rt1.c2 FROM v0, vt0, rt1 WHERE ((- (CAST(rt1.c2 AS BLOB)))) UNION SELECT DISTINCT rt1.c2 FROM v0, vt0, rt1 WHERE ((NOT ((- (CAST(rt1.c2 AS BLOB)))))) UNION SELECT DISTINCT rt1.c2 FROM v0, vt0, rt1 WHERE ((((- (CAST(rt1.c2 AS BLOB)))) ISNULL));
SELECT DISTINCT rt1.c2 FROM v0, vt0, rt1;
SELECT vt0.c0, rt1.c0 FROM vt1, rt1, v0, vt0 GROUP BY vt0.c0, rt1.c0;
SELECT ALL vt0.c0, rt1.c0 FROM vt1, rt1, v0, vt0 WHERE (((SUBSTR(rt1.c2, v0.c0)) BETWEEN ((((-495754460)) BETWEEN ((v0.c0)) AND ((rt1.c0)))) AND (rt1.c1 COLLATE RTRIM))) GROUP BY vt0.c0, rt1.c0 UNION SELECT ALL vt0.c0, rt1.c0 FROM vt1, rt1, v0, vt0 WHERE ((NOT (((SUBSTR(rt1.c2, v0.c0)) BETWEEN ((((-495754460)) BETWEEN ((v0.c0)) AND ((rt1.c0)))) AND (rt1.c1 COLLATE RTRIM))))) GROUP BY vt0.c0, rt1.c0 UNION SELECT vt0.c0, rt1.c0 FROM vt1, rt1, v0, vt0 WHERE (((((SUBSTR(rt1.c2, v0.c0)) BETWEEN ((((-495754460)) BETWEEN ((v0.c0)) AND ((rt1.c0)))) AND (rt1.c1 COLLATE RTRIM))) ISNULL)) GROUP BY vt0.c0, rt1.c0;
SELECT vt0.c0, rt1.c0 FROM vt1, rt1, v0, vt0 GROUP BY vt0.c0, rt1.c0;
SELECT rt1.c1, v0.c0, rt1.c0, rt1.c2 FROM v0, rt1, vt1 GROUP BY rt1.c1, v0.c0, rt1.c0, rt1.c2;
SELECT ALL rt1.c1, v0.c0, rt1.c0, rt1.c2 FROM v0, rt1, vt1 GROUP BY rt1.c1, v0.c0, rt1.c0, rt1.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c1, v0.c0, rt1.c0, rt1.c2 FROM v0, rt1, vt1 GROUP BY rt1.c1, v0.c0, rt1.c0, rt1.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c1, v0.c0, rt1.c0, rt1.c2 FROM v0, rt1, vt1 GROUP BY rt1.c1, v0.c0, rt1.c0, rt1.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c1, v0.c0, rt1.c0, rt1.c2 FROM v0, rt1, vt1 GROUP BY rt1.c1, v0.c0, rt1.c0, rt1.c2;
SELECT ALL rt1.c1, v0.c0, rt1.c0, rt1.c2 FROM v0, rt1, vt1 GROUP BY rt1.c1, v0.c0, rt1.c0, rt1.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c1, v0.c0, rt1.c0, rt1.c2 FROM v0, rt1, vt1 GROUP BY rt1.c1, v0.c0, rt1.c0, rt1.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c1, v0.c0, rt1.c0, rt1.c2 FROM v0, rt1, vt1 GROUP BY rt1.c1, v0.c0, rt1.c0, rt1.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c1, v0.c0, rt1.c0, rt1.c2 FROM v0, rt1, vt1 GROUP BY rt1.c1, v0.c0, rt1.c0, rt1.c2;
SELECT * FROM vt0, v0;
SELECT * FROM vt0, v0 WHERE (CAST('1045606283' AS TEXT)) UNION ALL SELECT * FROM vt0, v0 WHERE ((NOT (CAST('1045606283' AS TEXT)))) UNION ALL SELECT ALL * FROM vt0, v0 WHERE (((CAST('1045606283' AS TEXT)) ISNULL));
SELECT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, rt1;
SELECT DISTINCT * FROM vt0, rt1 WHERE (((CASE vt0.c0  WHEN rt1.c2 THEN rt1.c2 ELSE vt0.c0 END) BETWEEN (((vt0.c0) BETWEEN ('Z[+Br5 ') AND (rt1.c1))) AND ((- (vt0.c0))))) UNION SELECT DISTINCT * FROM vt0, rt1 WHERE ((NOT (((CASE vt0.c0  WHEN rt1.c2 THEN rt1.c2 ELSE vt0.c0 END) BETWEEN (((vt0.c0) BETWEEN ('Z[+Br5 ') AND (rt1.c1))) AND ((- (vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0, rt1 WHERE (((((CASE vt0.c0  WHEN rt1.c2 THEN rt1.c2 ELSE vt0.c0 END) BETWEEN (((vt0.c0) BETWEEN ('Z[+Br5 ') AND (rt1.c1))) AND ((- (vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, rt1;
SELECT ALL rt1.c1, vt0.c0, rt1.c2, vt1.c0 FROM rt1, v0, vt1, vt0 GROUP BY rt1.c1, vt0.c0, rt1.c2, vt1.c0;
SELECT rt1.c1, vt0.c0, rt1.c2, vt1.c0 FROM rt1 NOT INDEXED, v0, vt1, vt0 WHERE (((((v0.c0)OR(x'')))OR(rt1.c0)) COLLATE RTRIM) GROUP BY rt1.c1, vt0.c0, rt1.c2, vt1.c0 UNION SELECT ALL rt1.c1, vt0.c0, rt1.c2, vt1.c0 FROM rt1, v0, vt1, vt0 WHERE ((NOT (((((v0.c0)OR(x'')))OR(rt1.c0)) COLLATE RTRIM))) GROUP BY rt1.c1, vt0.c0, rt1.c2, vt1.c0 UNION SELECT rt1.c1, vt0.c0, rt1.c2, vt1.c0 FROM rt1, v0, vt1, vt0 WHERE (((((((v0.c0)OR(x'')))OR(rt1.c0)) COLLATE RTRIM) ISNULL)) GROUP BY rt1.c1, vt0.c0, rt1.c2, vt1.c0;
SELECT ALL rt1.c1, vt0.c0, rt1.c2, vt1.c0 FROM rt1, v0, vt1, vt0 GROUP BY rt1.c1, vt0.c0, rt1.c2, vt1.c0;
SELECT ALL rt1.c0, rt1.c2, rt1.c1, v0.c0, vt1.c0 FROM vt1, vt0, v0 FULL OUTER JOIN rt1 ON CASE ((rt1.c1) NOT NULL)  WHEN rt1.c2 THEN ((rt1.c0) IS FALSE) ELSE ((vt0.c0)*(vt1.c0)) END GROUP BY rt1.c0, rt1.c2, rt1.c1, v0.c0, vt1.c0;
SELECT rt1.c0, rt1.c2, rt1.c1, v0.c0, vt1.c0 FROM vt1, vt0, v0 FULL OUTER JOIN rt1 ON CASE ((rt1.c1) NOT NULL)  WHEN rt1.c2 THEN ((rt1.c0) IS FALSE) ELSE ((vt0.c0)*(vt1.c0)) END GROUP BY rt1.c0, rt1.c2, rt1.c1, v0.c0, vt1.c0 HAVING vt1.c0 UNION ALL SELECT ALL rt1.c0, rt1.c2, rt1.c1, v0.c0, vt1.c0 FROM vt1, vt0, v0 FULL OUTER JOIN rt1 ON CASE ((rt1.c1) NOT NULL)  WHEN rt1.c2 THEN ((rt1.c0) IS FALSE) ELSE ((vt0.c0)*(vt1.c0)) END GROUP BY rt1.c0, rt1.c2, rt1.c1, v0.c0, vt1.c0 HAVING (NOT (vt1.c0)) UNION ALL SELECT rt1.c0, rt1.c2, rt1.c1, v0.c0, vt1.c0 FROM vt1, vt0, v0 FULL OUTER JOIN rt1 ON CASE ((rt1.c1) NOT NULL)  WHEN rt1.c2 THEN ((rt1.c0) IS FALSE) ELSE ((vt0.c0)*(vt1.c0)) END GROUP BY rt1.c0, rt1.c2, rt1.c1, v0.c0, vt1.c0 HAVING ((vt1.c0) ISNULL);
SELECT ALL rt1.c0, rt1.c2, rt1.c1, v0.c0, vt1.c0 FROM vt1, vt0, v0 FULL OUTER JOIN rt1 ON CASE ((rt1.c1) NOT NULL)  WHEN rt1.c2 THEN ((rt1.c0) IS FALSE) ELSE ((vt0.c0)*(vt1.c0)) END GROUP BY rt1.c0, rt1.c2, rt1.c1, v0.c0, vt1.c0;
SELECT rt1.c0, rt1.c2, rt1.c1, v0.c0, vt1.c0 FROM vt1, vt0, v0 FULL OUTER JOIN rt1 ON CASE ((rt1.c1) NOT NULL)  WHEN rt1.c2 THEN ((rt1.c0) IS FALSE) ELSE ((vt0.c0)*(vt1.c0)) END GROUP BY rt1.c0, rt1.c2, rt1.c1, v0.c0, vt1.c0 HAVING vt1.c0 UNION ALL SELECT ALL rt1.c0, rt1.c2, rt1.c1, v0.c0, vt1.c0 FROM vt1, vt0, v0 FULL OUTER JOIN rt1 ON CASE ((rt1.c1) NOT NULL)  WHEN rt1.c2 THEN ((rt1.c0) IS FALSE) ELSE ((vt0.c0)*(vt1.c0)) END GROUP BY rt1.c0, rt1.c2, rt1.c1, v0.c0, vt1.c0 HAVING (NOT (vt1.c0)) UNION ALL SELECT rt1.c0, rt1.c2, rt1.c1, v0.c0, vt1.c0 FROM vt1, vt0, v0 FULL OUTER JOIN rt1 ON CASE ((rt1.c1) NOT NULL)  WHEN rt1.c2 THEN ((rt1.c0) IS FALSE) ELSE ((vt0.c0)*(vt1.c0)) END GROUP BY rt1.c0, rt1.c2, rt1.c1, v0.c0, vt1.c0 HAVING ((vt1.c0) ISNULL);
SELECT ALL rt1.c0, rt1.c2, rt1.c1, v0.c0, vt1.c0 FROM vt1, vt0, v0 FULL OUTER JOIN rt1 ON CASE ((rt1.c1) NOT NULL)  WHEN rt1.c2 THEN ((rt1.c0) IS FALSE) ELSE ((vt0.c0)*(vt1.c0)) END GROUP BY rt1.c0, rt1.c2, rt1.c1, v0.c0, vt1.c0;
SELECT rt1.c2, rt1.c1 FROM rt1;
SELECT ALL rt1.c2, rt1.c1 FROM rt1 WHERE (rt1.c2) UNION ALL SELECT ALL rt1.c2, rt1.c1 FROM rt1 WHERE ((NOT (rt1.c2))) UNION ALL SELECT rt1.c2, rt1.c1 FROM rt1 WHERE (((rt1.c2) ISNULL));
SELECT rt1.c2, rt1.c1 FROM rt1;
SELECT DISTINCT * FROM vt1, v0;
SELECT DISTINCT * FROM vt1, v0 WHERE (TRIM(CASE v0.c0  WHEN v0.c0 THEN NULL END, ((vt1.c0)<(vt1.c0)))) UNION SELECT DISTINCT * FROM vt1, v0 WHERE ((NOT (TRIM(CASE v0.c0  WHEN v0.c0 THEN NULL END, ((vt1.c0)<(vt1.c0)))))) UNION SELECT DISTINCT * FROM vt1, v0 WHERE (((TRIM(CASE v0.c0  WHEN v0.c0 THEN NULL END, ((vt1.c0)<(vt1.c0)))) ISNULL));
SELECT DISTINCT * FROM vt1, v0;
SELECT v0.c0, rt1.c2, vt0.c0, vt1.c0 FROM rt1, vt0, v0, vt1 GROUP BY v0.c0, rt1.c2, vt0.c0, vt1.c0;
SELECT v0.c0, rt1.c2, vt0.c0, vt1.c0 FROM rt1, vt0, v0, vt1 WHERE (((((((((TYPEOF(vt1.c0))OR(((vt1.c0) BETWEEN (rt1.c0) AND (vt0.c0)))))OR(((((rt1.c2)AND(v0.c0)))OR(rt1.c2)))))AND(rt1.c2 COLLATE BINARY)))AND((- (v0.c0))))) GROUP BY v0.c0, rt1.c2, vt0.c0, vt1.c0 UNION SELECT ALL v0.c0, rt1.c2, vt0.c0, vt1.c0 FROM rt1, vt0, v0, vt1 WHERE ((NOT (((((((((TYPEOF(vt1.c0))OR(((vt1.c0) BETWEEN (rt1.c0) AND (vt0.c0)))))OR(((((rt1.c2)AND(v0.c0)))OR(rt1.c2)))))AND(rt1.c2 COLLATE BINARY)))AND((- (v0.c0))))))) GROUP BY v0.c0, rt1.c2, vt0.c0, vt1.c0 UNION SELECT v0.c0, rt1.c2, vt0.c0, vt1.c0 FROM rt1, vt0, v0, vt1 WHERE (((((((((((TYPEOF(vt1.c0))OR(((vt1.c0) BETWEEN (rt1.c0) AND (vt0.c0)))))OR(((((rt1.c2)AND(v0.c0)))OR(rt1.c2)))))AND(rt1.c2 COLLATE BINARY)))AND((- (v0.c0))))) ISNULL)) GROUP BY v0.c0, rt1.c2, vt0.c0, vt1.c0;
SELECT v0.c0, rt1.c2, vt0.c0, vt1.c0 FROM rt1, vt0, v0, vt1 GROUP BY v0.c0, rt1.c2, vt0.c0, vt1.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MIN(MIN(COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MIN(MIN(COUNT(*))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN(MIN(COUNT(*)))) ISNULL);
SELECT ALL * FROM v0, vt0;
SELECT * FROM v0, vt0 WHERE ((~ (v0.c0)) COLLATE BINARY) UNION ALL SELECT ALL * FROM v0, vt0 WHERE ((NOT ((~ (v0.c0)) COLLATE BINARY))) UNION ALL SELECT * FROM v0, vt0 WHERE ((((~ (v0.c0)) COLLATE BINARY) ISNULL));
SELECT ALL * FROM v0, vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (json_array_length(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (json_array_length(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((json_array_length(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((((v0.c0 IN (v0.c0))))<=(((v0.c0 IN ()))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((((v0.c0 IN (v0.c0))))<=(((v0.c0 IN ()))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((((v0.c0 IN (v0.c0))))<=(((v0.c0 IN ()))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt1.c1, vt0.c0, v0.c0 FROM v0, vt0, rt1 GROUP BY rt1.c1, vt0.c0, v0.c0;
SELECT ALL rt1.c1, vt0.c0, v0.c0 FROM v0, vt0, rt1 GROUP BY rt1.c1, vt0.c0, v0.c0 HAVING MAX(COUNT(MAX(vt0.c0))) UNION ALL SELECT ALL rt1.c1, vt0.c0, v0.c0 FROM v0, vt0, rt1 GROUP BY rt1.c1, vt0.c0, v0.c0 HAVING (NOT (MAX(COUNT(MAX(vt0.c0))))) UNION ALL SELECT ALL rt1.c1, vt0.c0, v0.c0 FROM v0, vt0, rt1 GROUP BY rt1.c1, vt0.c0, v0.c0 HAVING ((MAX(COUNT(MAX(vt0.c0)))) ISNULL);
SELECT * FROM vt0, rt1, v0, vt1 NOT INDEXED;
SELECT * FROM vt0, rt1, v0, vt1 WHERE ((((((rt1.c0))<>((rt1.c2))))GLOB(x''))) UNION ALL SELECT * FROM vt0, rt1, v0, vt1 WHERE ((NOT ((((((rt1.c0))!=((rt1.c2))))GLOB(x''))))) UNION ALL SELECT ALL * FROM vt0, rt1, v0, vt1 WHERE ((((((((rt1.c0))<>((rt1.c2))))GLOB(x''))) ISNULL));
SELECT * FROM vt0, rt1, v0, vt1 NOT INDEXED;
SELECT DISTINCT * FROM rt1, vt1;
SELECT DISTINCT * FROM rt1, vt1 WHERE ((('693135774')!=((~ (rt1.c1))))) UNION SELECT DISTINCT * FROM rt1, vt1 WHERE ((NOT ((('693135774')!=((~ (rt1.c1))))))) UNION SELECT DISTINCT * FROM rt1, vt1 WHERE ((((('693135774')!=((~ (rt1.c1))))) ISNULL));
SELECT DISTINCT * FROM rt1, vt1;
SELECT ALL rt1.c0, rt1.c1, rt1.c2, vt1.c0 FROM rt1, vt1 GROUP BY rt1.c0, rt1.c1, rt1.c2, vt1.c0;
SELECT rt1.c0, rt1.c1, rt1.c2, vt1.c0 FROM rt1, vt1 WHERE (((UNICODE(0.06139826578649543)) BETWEEN (CASE rt1.c2  WHEN rt1.c0 THEN 0xffffffff85df7363 ELSE vt1.c0 END) AND (CAST(rt1.c1 AS BLOB)))) GROUP BY rt1.c0, rt1.c1, rt1.c2, vt1.c0 UNION SELECT rt1.c0, rt1.c1, rt1.c2, vt1.c0 FROM rt1, vt1 WHERE ((NOT (((UNICODE(0.06139826578649543)) BETWEEN (CASE rt1.c2  WHEN rt1.c0 THEN 0xffffffff85df7363 ELSE vt1.c0 END) AND (CAST(rt1.c1 AS BLOB)))))) GROUP BY rt1.c0, rt1.c1, rt1.c2, vt1.c0 UNION SELECT ALL rt1.c0, rt1.c1, rt1.c2, vt1.c0 FROM rt1, vt1 WHERE (((((UNICODE(0.06139826578649543)) BETWEEN (CASE rt1.c2  WHEN rt1.c0 THEN 0xffffffff85df7363 ELSE vt1.c0 END) AND (CAST(rt1.c1 AS BLOB)))) ISNULL)) GROUP BY rt1.c0, rt1.c1, rt1.c2, vt1.c0;
SELECT ALL rt1.c0, rt1.c1, rt1.c2, vt1.c0 FROM rt1, vt1 GROUP BY rt1.c0, rt1.c1, rt1.c2, vt1.c0;
SELECT ALL rt1.c2, vt1.c0, rt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, vt1.c0, rt1.c0;
SELECT ALL rt1.c2, vt1.c0, rt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, vt1.c0, rt1.c0 HAVING (MAX(rt1.c1) IN ()) UNION ALL SELECT rt1.c2, vt1.c0, rt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, vt1.c0, rt1.c0 HAVING (NOT ((MAX(rt1.c1) IN ()))) UNION ALL SELECT rt1.c2, vt1.c0, rt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, vt1.c0, rt1.c0 HAVING (((MAX(rt1.c1) IN ())) ISNULL);
SELECT ALL rt1.c2, vt1.c0, rt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, vt1.c0, rt1.c0;
SELECT ALL rt1.c2, vt1.c0, rt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, vt1.c0, rt1.c0 HAVING (MAX(rt1.c1) IN ()) UNION ALL SELECT rt1.c2, vt1.c0, rt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, vt1.c0, rt1.c0 HAVING (NOT ((MAX(rt1.c1) IN ()))) UNION ALL SELECT rt1.c2, vt1.c0, rt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, vt1.c0, rt1.c0 HAVING (((MAX(rt1.c1) IN ())) ISNULL);
SELECT ALL rt1.c2, vt1.c0, rt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, vt1.c0, rt1.c0;
SELECT ALL * FROM rt1, v0, vt0;
SELECT ALL * FROM rt1, v0, vt0 WHERE ((('-850713619') BETWEEN (((rt1.c1) IS TRUE)) AND ((- (vt0.c0))))) UNION ALL SELECT ALL * FROM rt1, v0, vt0 WHERE ((NOT ((('-850713619') BETWEEN (((rt1.c1) IS TRUE)) AND ((- (vt0.c0))))))) UNION ALL SELECT * FROM rt1 NOT INDEXED, v0, vt0 WHERE ((((('-850713619') BETWEEN (((rt1.c1) IS TRUE)) AND ((- (vt0.c0))))) ISNULL));
SELECT ALL * FROM rt1, v0, vt0;
SELECT DISTINCT * FROM rt1, vt0;
SELECT DISTINCT * FROM rt1, vt0 WHERE (CASE ((rt1.c2) NOT BETWEEN (vt0.c0) AND (rt1.c1))  WHEN rt1.c2 COLLATE RTRIM THEN ((((rt1.c0)AND(rt1.c1)))OR(rt1.c0)) END) UNION SELECT DISTINCT * FROM rt1, vt0 WHERE ((NOT (CASE ((rt1.c2) NOT BETWEEN (vt0.c0) AND (rt1.c1))  WHEN rt1.c2 COLLATE RTRIM THEN ((((rt1.c0)AND(rt1.c1)))OR(rt1.c0)) END))) UNION SELECT DISTINCT * FROM rt1, vt0 WHERE (((CASE ((rt1.c2) NOT BETWEEN (vt0.c0) AND (rt1.c1))  WHEN rt1.c2 COLLATE RTRIM THEN ((((rt1.c0)AND(rt1.c1)))OR(rt1.c0)) END) ISNULL));
SELECT DISTINCT * FROM rt1, vt0;
SELECT vt0.c0, vt1.c0, v0.c0 FROM vt1, v0, vt0 GROUP BY vt0.c0, vt1.c0, v0.c0;
SELECT vt0.c0, vt1.c0, v0.c0 FROM vt1, v0, vt0 WHERE (((vt1.c0)|((((vt1.c0)) NOT BETWEEN ((x'0818')) AND ((vt1.c0)))))) GROUP BY vt0.c0, vt1.c0, v0.c0 UNION SELECT vt0.c0, vt1.c0, v0.c0 FROM vt1, v0, vt0 WHERE ((NOT (((vt1.c0)|((((vt1.c0)) NOT BETWEEN ((x'0818')) AND ((vt1.c0)))))))) GROUP BY vt0.c0, vt1.c0, v0.c0 UNION SELECT ALL vt0.c0, vt1.c0, v0.c0 FROM vt1, v0, vt0 WHERE (((((vt1.c0)|((((vt1.c0)) NOT BETWEEN ((x'0818')) AND ((vt1.c0)))))) ISNULL)) GROUP BY vt0.c0, vt1.c0, v0.c0;
SELECT vt0.c0, vt1.c0, v0.c0 FROM vt1, v0, vt0 GROUP BY vt0.c0, vt1.c0, v0.c0;
SELECT ALL v0.c0 FROM vt1, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt1, v0 GROUP BY v0.c0 HAVING MAX(((v0.c0)IS(AVG(COUNT(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM vt1, v0 GROUP BY v0.c0 HAVING (NOT (MAX(((v0.c0)IS(AVG(COUNT(v0.c0))))))) UNION ALL SELECT ALL v0.c0 FROM vt1, v0 GROUP BY v0.c0 HAVING ((MAX(((v0.c0)IS(AVG(COUNT(v0.c0)))))) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (CASE vt1.c0  WHEN (vt1.c0 IN ()) THEN UPPER(DISTINCT vt1.c0) WHEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) THEN UNLIKELY(DISTINCT vt1.c0) WHEN vt1.c0 THEN ((vt1.c0)OR(vt1.c0)) ELSE (~ (vt1.c0)) END) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (CASE vt1.c0  WHEN (vt1.c0 IN ()) THEN UPPER(DISTINCT vt1.c0) WHEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) THEN UNLIKELY(DISTINCT vt1.c0) WHEN vt1.c0 THEN ((vt1.c0)OR(vt1.c0)) ELSE (~ (vt1.c0)) END))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((CASE vt1.c0  WHEN (vt1.c0 IN ()) THEN UPPER(DISTINCT vt1.c0) WHEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) THEN UNLIKELY(DISTINCT vt1.c0) WHEN vt1.c0 THEN ((vt1.c0)OR(vt1.c0)) ELSE (~ (vt1.c0)) END) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0, rt1.c1 FROM vt1, rt1;
SELECT DISTINCT vt1.c0, rt1.c1 FROM vt1, rt1 WHERE (rt1.c1) UNION SELECT DISTINCT vt1.c0, rt1.c1 FROM vt1, rt1 WHERE ((NOT (rt1.c1))) UNION SELECT DISTINCT vt1.c0, rt1.c1 FROM vt1, rt1 WHERE (((rt1.c1) ISNULL));
SELECT DISTINCT vt1.c0, rt1.c1 FROM vt1, rt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((- (CASE WHEN vt1.c0 THEN vt1.c0 END))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((- (CASE WHEN vt1.c0 THEN vt1.c0 END))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((- (CASE WHEN vt1.c0 THEN vt1.c0 END))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MIN(COUNT(vt1.c0)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MIN(COUNT(vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MIN(COUNT(vt1.c0))) ISNULL);
SELECT ALL * FROM vt1, v0;
SELECT * FROM vt1, v0 WHERE (JULIANDAY(((((v0.c0)AND(vt1.c0)))OR(vt1.c0)), CASE vt1.c0  WHEN vt1.c0 THEN v0.c0 END, (- (v0.c0)))) ORDER BY CAST(((v0.c0)<(v0.c0)) AS NUMERIC);
SELECT * FROM vt1, v0 WHERE ((NOT (JULIANDAY(((((v0.c0)AND(vt1.c0)))OR(vt1.c0)), CASE vt1.c0  WHEN vt1.c0 THEN v0.c0 END, (- (v0.c0)))))) ORDER BY CAST(((v0.c0)<(v0.c0)) AS NUMERIC);
SELECT ALL * FROM vt1, v0 WHERE (((JULIANDAY(((((v0.c0)AND(vt1.c0)))OR(vt1.c0)), CASE vt1.c0  WHEN vt1.c0 THEN v0.c0 END, (- (v0.c0)))) ISNULL)) ORDER BY CAST(((v0.c0)<(v0.c0)) AS NUMERIC);
SELECT ALL * FROM vt1, v0;
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE (CASE WHEN vt0.c0 THEN NULL END COLLATE NOCASE) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT (CASE WHEN vt0.c0 THEN NULL END COLLATE NOCASE))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE (((CASE WHEN vt0.c0 THEN NULL END COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT ALL rt1.c0, vt1.c0 FROM v0, vt1, vt0 INNER JOIN rt1 ON (- (((rt1.c1)=(vt0.c0)))) GROUP BY rt1.c0, vt1.c0;
SELECT rt1.c0, vt1.c0 FROM v0, vt1, vt0 INNER JOIN rt1 ON (- (((rt1.c1)=(vt0.c0)))) WHERE (((((0.5710271849461945) BETWEEN (rt1.c2) AND (rt1.c2))) NOT NULL)) GROUP BY rt1.c0, vt1.c0 UNION SELECT rt1.c0, vt1.c0 FROM v0, vt1, vt0 INNER JOIN rt1 ON (- (((rt1.c1)=(vt0.c0)))) WHERE ((NOT (((((0.5710271849461945) BETWEEN (rt1.c2) AND (rt1.c2))) NOT NULL)))) GROUP BY rt1.c0, vt1.c0 UNION SELECT rt1.c0, vt1.c0 FROM v0, vt1, vt0 INNER JOIN rt1 ON (- (((rt1.c1)==(vt0.c0)))) WHERE (((((((0.5710271849461945) BETWEEN (rt1.c2) AND (rt1.c2))) NOT NULL)) ISNULL)) GROUP BY rt1.c0, vt1.c0;
SELECT ALL rt1.c0, vt1.c0 FROM v0, vt1, vt0 INNER JOIN rt1 ON (- (((rt1.c1)=(vt0.c0)))) GROUP BY rt1.c0, vt1.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING MIN(((COUNT('-663629262'))-(MAX(v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MIN(((COUNT('-663629262'))-(MAX(v0.c0)))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MIN(((COUNT('-663629262'))-(MAX(v0.c0))))) ISNULL);
SELECT * FROM rt1, v0;
SELECT ALL * FROM rt1, v0 WHERE (NULL) UNION ALL SELECT ALL * FROM rt1, v0 WHERE ((NOT (NULL))) UNION ALL SELECT * FROM rt1, v0 WHERE (((NULL) ISNULL));
SELECT * FROM rt1, v0;
SELECT DISTINCT * FROM vt0, rt1;
SELECT DISTINCT * FROM vt0, rt1 WHERE (IFNULL(DISTINCT CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 WHEN -1.997930152E9 THEN vt0.c0 WHEN rt1.c1 THEN vt0.c0 ELSE rt1.c1 END, (NOT (rt1.c1)))) UNION SELECT DISTINCT * FROM vt0, rt1 WHERE ((NOT (IFNULL(DISTINCT CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 WHEN -1.997930152E9 THEN vt0.c0 WHEN rt1.c1 THEN vt0.c0 ELSE rt1.c1 END, (NOT (rt1.c1)))))) UNION SELECT DISTINCT * FROM vt0, rt1 WHERE (((IFNULL(DISTINCT CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 WHEN -1.997930152E9 THEN vt0.c0 WHEN rt1.c1 THEN vt0.c0 ELSE rt1.c1 END, (NOT (rt1.c1)))) ISNULL));
SELECT DISTINCT * FROM vt0, rt1;
SELECT ALL rt1.c0, v0.c0, rt1.c2, vt1.c0, rt1.c1, vt0.c0 FROM v0, vt0, vt1, rt1 GROUP BY rt1.c0, v0.c0, rt1.c2, vt1.c0, rt1.c1, vt0.c0;
SELECT rt1.c0, v0.c0, rt1.c2, vt1.c0, rt1.c1, vt0.c0 FROM v0, vt0, vt1, rt1 WHERE ((- (((rt1.c0) NOTNULL)))) GROUP BY rt1.c0, v0.c0, rt1.c2, vt1.c0, rt1.c1, vt0.c0 UNION SELECT ALL rt1.c0, v0.c0, rt1.c2, vt1.c0, rt1.c1, vt0.c0 FROM v0, vt0, vt1, rt1 WHERE ((NOT ((- (((rt1.c0) NOTNULL)))))) GROUP BY rt1.c0, v0.c0, rt1.c2, vt1.c0, rt1.c1, vt0.c0 UNION SELECT ALL rt1.c0, v0.c0, rt1.c2, vt1.c0, rt1.c1, vt0.c0 FROM v0, vt0, vt1, rt1 WHERE ((((- (((rt1.c0) NOTNULL)))) ISNULL)) GROUP BY rt1.c0, v0.c0, rt1.c2, vt1.c0, rt1.c1, vt0.c0;
SELECT ALL rt1.c0, v0.c0, rt1.c2, vt1.c0, rt1.c1, vt0.c0 FROM v0, vt0, vt1, rt1 GROUP BY rt1.c0, v0.c0, rt1.c2, vt1.c0, rt1.c1, vt0.c0;
SELECT ALL vt0.c0, rt1.c2, rt1.c1 FROM vt0, vt1, v0 CROSS JOIN rt1 ON (+ (rt1.c2)) GROUP BY vt0.c0, rt1.c2, rt1.c1;
SELECT vt0.c0, rt1.c2, rt1.c1 FROM vt0, vt1, v0 CROSS JOIN rt1 ON (+ (rt1.c2)) GROUP BY vt0.c0, rt1.c2, rt1.c1 HAVING COUNT(COUNT(*)) UNION ALL SELECT vt0.c0, rt1.c2, rt1.c1 FROM vt0, vt1, v0 CROSS JOIN rt1 ON (+ (rt1.c2)) GROUP BY vt0.c0, rt1.c2, rt1.c1 HAVING (NOT (COUNT(COUNT(*)))) UNION ALL SELECT ALL vt0.c0, rt1.c2, rt1.c1 FROM vt0, vt1, v0 CROSS JOIN rt1 ON (+ (rt1.c2)) GROUP BY vt0.c0, rt1.c2, rt1.c1 HAVING ((COUNT(COUNT(*))) ISNULL);
SELECT ALL rt1.c1, rt1.c2 FROM rt1, vt0, v0;
SELECT ALL rt1.c1, rt1.c2 FROM rt1, vt0, v0 WHERE ((((((rt1.c1, rt1.c2, rt1.c1))>((rt1.c2, v0.c0, rt1.c1))))/(json_array_length(vt0.c0, rt1.c1)))) UNION ALL SELECT ALL rt1.c1, rt1.c2 FROM rt1, vt0, v0 WHERE ((NOT ((((((rt1.c1, rt1.c2, rt1.c1))>((rt1.c2, v0.c0, rt1.c1))))/(json_array_length(vt0.c0, rt1.c1)))))) UNION ALL SELECT ALL rt1.c1, rt1.c2 FROM rt1, vt0, v0 WHERE ((((((((rt1.c1, rt1.c2, rt1.c1))>((rt1.c2, v0.c0, rt1.c1))))/(json_array_length(vt0.c0, rt1.c1)))) ISNULL));
SELECT ALL rt1.c1, rt1.c2 FROM rt1, vt0, v0;
SELECT DISTINCT rt1.c1, vt0.c0 FROM vt1 CROSS JOIN rt1 ON (((rt1.c1)) BETWEEN ((rt1.c2)) AND (((~ (rt1.c0))))) FULL OUTER JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (rt1.c1) AND (v0.c0)))>(CAST(rt1.c0 AS TEXT))) INNER JOIN v0 ON v0.c0;
SELECT DISTINCT rt1.c1, vt0.c0 FROM vt1 CROSS JOIN rt1 ON (((rt1.c1)) BETWEEN ((rt1.c2)) AND (((~ (rt1.c0))))) FULL OUTER JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (rt1.c1) AND (v0.c0)))>(CAST(rt1.c0 AS TEXT))) INNER JOIN v0 ON v0.c0 WHERE (((((0.47476886689723774) IS TRUE))GLOB(CASE WHEN rt1.c0 THEN rt1.c0 WHEN 'dACt	' THEN vt0.c0 WHEN rt1.c0 THEN 'i' END))) UNION SELECT DISTINCT rt1.c1, vt0.c0 FROM vt1 CROSS JOIN rt1 ON (((rt1.c1)) BETWEEN ((rt1.c2)) AND (((~ (rt1.c0))))) FULL OUTER JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (rt1.c1) AND (v0.c0)))>(CAST(rt1.c0 AS TEXT))) INNER JOIN v0 ON v0.c0 WHERE ((NOT (((((0.47476886689723774) IS TRUE))GLOB(CASE WHEN rt1.c0 THEN rt1.c0 WHEN 'dACt	' THEN vt0.c0 WHEN rt1.c0 THEN 'i' END))))) UNION SELECT DISTINCT rt1.c1, vt0.c0 FROM vt1 CROSS JOIN rt1 ON (((rt1.c1)) BETWEEN ((rt1.c2)) AND (((~ (rt1.c0))))) FULL OUTER JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (rt1.c1) AND (v0.c0)))>(CAST(rt1.c0 AS TEXT))) INNER JOIN v0 ON v0.c0 WHERE (((((((0.47476886689723774) IS TRUE))GLOB(CASE WHEN rt1.c0 THEN rt1.c0 WHEN 'dACt	' THEN vt0.c0 WHEN rt1.c0 THEN 'i' END))) ISNULL));
SELECT DISTINCT rt1.c1, vt0.c0 FROM vt1 CROSS JOIN rt1 ON (((rt1.c1)) BETWEEN ((rt1.c2)) AND (((~ (rt1.c0))))) FULL OUTER JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (rt1.c1) AND (v0.c0)))>(CAST(rt1.c0 AS TEXT))) INNER JOIN v0 ON v0.c0;
SELECT vt1.c0, vt0.c0 FROM vt0 CROSS JOIN vt1 ON 0.026799020999434542 RIGHT OUTER JOIN v0 ON (- ((vt1.c0 IN (vt0.c0)))) GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0 CROSS JOIN vt1 ON 0.026799020999434542 RIGHT OUTER JOIN v0 ON (- ((vt1.c0 IN (vt0.c0)))) WHERE (CASE WHEN CAST(vt0.c0 AS REAL) THEN ((vt1.c0) BETWEEN (x'5391') AND (x'')) ELSE ((vt0.c0)>(v0.c0)) END) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt0 CROSS JOIN vt1 ON 0.026799020999434542 RIGHT OUTER JOIN v0 ON (- ((vt1.c0 IN (vt0.c0)))) WHERE ((NOT (CASE WHEN CAST(vt0.c0 AS REAL) THEN ((vt1.c0) BETWEEN (x'5391') AND (x'')) ELSE ((vt0.c0)>(v0.c0)) END))) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt0 CROSS JOIN vt1 ON 0.026799020999434542 RIGHT OUTER JOIN v0 ON (- ((vt1.c0 IN (vt0.c0)))) WHERE (((CASE WHEN CAST(vt0.c0 AS REAL) THEN ((vt1.c0) BETWEEN (x'5391') AND (x'')) ELSE ((vt0.c0)>(v0.c0)) END) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt0 CROSS JOIN vt1 ON 0.026799020999434542 RIGHT OUTER JOIN v0 ON (- ((vt1.c0 IN (vt0.c0)))) GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, rt1.c1, vt0.c0, v0.c0 FROM vt0, rt1 LEFT OUTER JOIN v0 ON (NULLIF(DISTINCT vt0.c0, rt1.c1) IN (((rt1.c2) NOTNULL), ((((((((vt1.c0)OR(rt1.c2)))OR(x'5a3d')))AND(rt1.c2)))AND(rt1.c1)))) LEFT OUTER JOIN vt1 ON vt0.c0 GROUP BY vt1.c0, rt1.c1, vt0.c0, v0.c0;
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1;
SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE ((- ((- (rt1.c0))))) UNION ALL SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE ((NOT ((- ((- (rt1.c0))))))) UNION ALL SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE ((((- ((- (rt1.c0))))) ISNULL));
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1;
SELECT DISTINCT v0.c0, vt1.c0 FROM vt0, vt1, v0 NOT INDEXED;
SELECT DISTINCT v0.c0, vt1.c0 FROM vt0, vt1, v0 WHERE ((+ (vt0.c0))) UNION SELECT DISTINCT v0.c0, vt1.c0 FROM vt0, vt1, v0 WHERE ((NOT ((+ (vt0.c0))))) UNION SELECT DISTINCT v0.c0, vt1.c0 FROM vt0, vt1, v0 WHERE ((((+ (vt0.c0))) ISNULL));
SELECT DISTINCT v0.c0, vt1.c0 FROM vt0, vt1, v0 NOT INDEXED;
SELECT ALL vt0.c0, rt1.c2, vt1.c0, v0.c0 FROM v0, rt1, vt1 FULL OUTER JOIN vt0 ON ((((vt0.c0) NOT NULL))==((vt0.c0 IN ()))) GROUP BY vt0.c0, rt1.c2, vt1.c0, v0.c0;
SELECT ALL vt0.c0, rt1.c2, vt1.c0, v0.c0 FROM v0, rt1, vt1 FULL OUTER JOIN vt0 ON ((((vt0.c0) NOT NULL))==((vt0.c0 IN ()))) WHERE (((((((vt1.c0)OR(rt1.c1)))OR(vt1.c0)))=(vt0.c0 COLLATE RTRIM))) GROUP BY vt0.c0, rt1.c2, vt1.c0, v0.c0 UNION SELECT vt0.c0, rt1.c2, vt1.c0, v0.c0 FROM v0, rt1, vt1 FULL OUTER JOIN vt0 ON ((((vt0.c0) NOT NULL))=((vt0.c0 IN ()))) WHERE ((NOT (((((((vt1.c0)OR(rt1.c1)))OR(vt1.c0)))==(vt0.c0 COLLATE RTRIM))))) GROUP BY vt0.c0, rt1.c2, vt1.c0, v0.c0 UNION SELECT ALL vt0.c0, rt1.c2, vt1.c0, v0.c0 FROM v0, rt1, vt1 FULL OUTER JOIN vt0 ON ((((vt0.c0) NOT NULL))==((vt0.c0 IN ()))) WHERE (((((((((vt1.c0)OR(rt1.c1)))OR(vt1.c0)))==(vt0.c0 COLLATE RTRIM))) ISNULL)) GROUP BY vt0.c0, rt1.c2, vt1.c0, v0.c0;
SELECT ALL vt0.c0, rt1.c2, vt1.c0, v0.c0 FROM v0, rt1, vt1 FULL OUTER JOIN vt0 ON ((((vt0.c0) NOT NULL))==((vt0.c0 IN ()))) GROUP BY vt0.c0, rt1.c2, vt1.c0, v0.c0;
SELECT ALL rt1.c2 FROM vt1, rt1 GROUP BY rt1.c2;
SELECT rt1.c2 FROM vt1, rt1 GROUP BY rt1.c2 HAVING TOTAL((+ (rt1.c2))) UNION ALL SELECT ALL rt1.c2 FROM vt1, rt1 GROUP BY rt1.c2 HAVING (NOT (TOTAL((+ (rt1.c2))))) UNION ALL SELECT rt1.c2 FROM vt1, rt1 GROUP BY rt1.c2 HAVING ((TOTAL((+ (rt1.c2)))) ISNULL);
SELECT ALL rt1.c2 FROM vt1, rt1 GROUP BY rt1.c2;
SELECT rt1.c2 FROM vt1, rt1 GROUP BY rt1.c2 HAVING TOTAL((+ (rt1.c2))) UNION ALL SELECT ALL rt1.c2 FROM vt1, rt1 GROUP BY rt1.c2 HAVING (NOT (TOTAL((+ (rt1.c2))))) UNION ALL SELECT rt1.c2 FROM vt1, rt1 GROUP BY rt1.c2 HAVING ((TOTAL((+ (rt1.c2)))) ISNULL);
SELECT ALL rt1.c2 FROM vt1, rt1 GROUP BY rt1.c2;
SELECT rt1.c1, rt1.c0, vt0.c0, rt1.c2 FROM vt0, rt1;
SELECT rt1.c1, rt1.c0, vt0.c0, rt1.c2 FROM vt0, rt1 WHERE (((((vt0.c0) BETWEEN (rt1.c1) AND (NULL)))IS NOT(((((vt0.c0)OR(rt1.c2)))OR(rt1.c0))))) UNION ALL SELECT ALL rt1.c1, rt1.c0, vt0.c0, rt1.c2 FROM vt0, rt1 WHERE ((NOT (((((vt0.c0) BETWEEN (rt1.c1) AND (NULL)))IS NOT(((((vt0.c0)OR(rt1.c2)))OR(rt1.c0))))))) UNION ALL SELECT rt1.c1, rt1.c0, vt0.c0, rt1.c2 FROM vt0, rt1 WHERE (((((((vt0.c0) BETWEEN (rt1.c1) AND (NULL)))IS NOT(((((vt0.c0)OR(rt1.c2)))OR(rt1.c0))))) ISNULL));
SELECT rt1.c1, rt1.c0, vt0.c0, rt1.c2 FROM vt0, rt1;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (CASE ((v0.c0)&(v0.c0))  WHEN LOWER(v0.c0) THEN (v0.c0 IN ()) WHEN ((v0.c0)/(v0.c0)) THEN v0.c0 WHEN COALESCE(v0.c0, v0.c0) THEN ((v0.c0)>>(v0.c0)) ELSE TRIM(v0.c0, v0.c0) END) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (CASE ((v0.c0)&(v0.c0))  WHEN LOWER(v0.c0) THEN (v0.c0 IN ()) WHEN ((v0.c0)/(v0.c0)) THEN v0.c0 WHEN COALESCE(v0.c0, v0.c0) THEN ((v0.c0)>>(v0.c0)) ELSE TRIM(v0.c0, v0.c0) END))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((CASE ((v0.c0)&(v0.c0))  WHEN LOWER(v0.c0) THEN (v0.c0 IN ()) WHEN ((v0.c0)/(v0.c0)) THEN v0.c0 WHEN COALESCE(v0.c0, v0.c0) THEN ((v0.c0)>>(v0.c0)) ELSE TRIM(v0.c0, v0.c0) END) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT rt1.c0, rt1.c1, rt1.c2, vt1.c0 FROM vt1, vt0, rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2, vt1.c0;
SELECT ALL rt1.c0, rt1.c1, rt1.c2, vt1.c0 FROM vt1, vt0, rt1 WHERE ((((vt1.c0 IN ()))|(((((0.878459107555649)AND('1651453471')))AND('v?㐪B0q+8^'))))) GROUP BY rt1.c0, rt1.c1, rt1.c2, vt1.c0 UNION SELECT rt1.c0, rt1.c1, rt1.c2, vt1.c0 FROM vt1, vt0, rt1 NOT INDEXED WHERE ((NOT ((((vt1.c0 IN ()))|(((((0.878459107555649)AND('1651453471')))AND('v?㐪B0q+8^'))))))) GROUP BY rt1.c0, rt1.c1, rt1.c2, vt1.c0 UNION SELECT rt1.c0, rt1.c1, rt1.c2, vt1.c0 FROM vt1, vt0, rt1 WHERE ((((((vt1.c0 IN ()))|(((((0.878459107555649)AND('1651453471')))AND('v?㐪B0q+8^'))))) ISNULL)) GROUP BY rt1.c0, rt1.c1, rt1.c2, vt1.c0;
SELECT rt1.c0, rt1.c1, rt1.c2, vt1.c0 FROM vt1, vt0, rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2, vt1.c0;
SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1, vt1 GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1, vt1 GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING CAST(COUNT(*) AS INTEGER) UNION ALL SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1, vt1 GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING (NOT (CAST(COUNT(*) AS INTEGER))) UNION ALL SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1, vt1 GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING ((CAST(COUNT(*) AS INTEGER)) ISNULL);
SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1, vt1 GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1, vt1 GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING CAST(COUNT(*) AS INTEGER) UNION ALL SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1, vt1 GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING (NOT (CAST(COUNT(*) AS INTEGER))) UNION ALL SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1, vt1 GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING ((CAST(COUNT(*) AS INTEGER)) ISNULL);
SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1, vt1 GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT * FROM vt1, v0;
SELECT * FROM vt1, v0 WHERE (((CAST(v0.c0 AS TEXT)) BETWEEN (((v0.c0)/(v0.c0))) AND (((vt1.c0) NOT NULL)))) UNION ALL SELECT ALL * FROM vt1, v0 WHERE ((NOT (((CAST(v0.c0 AS TEXT)) BETWEEN (((v0.c0)/(v0.c0))) AND (((vt1.c0) NOT NULL)))))) UNION ALL SELECT ALL * FROM vt1, v0 WHERE (((((CAST(v0.c0 AS TEXT)) BETWEEN (((v0.c0)/(v0.c0))) AND (((vt1.c0) NOT NULL)))) ISNULL));
SELECT * FROM vt1, v0;
SELECT DISTINCT * FROM vt1, vt0, rt1, v0;
SELECT DISTINCT * FROM vt1, vt0, rt1, v0 WHERE (5.9153155E8) UNION SELECT DISTINCT * FROM vt1, vt0, rt1, v0 WHERE ((NOT (5.9153155E8))) UNION SELECT DISTINCT * FROM vt1, vt0, rt1, v0 WHERE (((5.9153155E8) ISNULL));
SELECT DISTINCT * FROM vt1, vt0, rt1, v0;
SELECT vt1.c0, rt1.c2 FROM vt0, rt1, v0, vt1 GROUP BY vt1.c0, rt1.c2;
SELECT ALL vt1.c0, rt1.c2 FROM vt0, rt1, v0, vt1 WHERE (CAST(CAST(rt1.c2 AS REAL) AS INTEGER)) GROUP BY vt1.c0, rt1.c2 UNION SELECT vt1.c0, rt1.c2 FROM vt0, rt1, v0, vt1 WHERE ((NOT (CAST(CAST(rt1.c2 AS REAL) AS INTEGER)))) GROUP BY vt1.c0, rt1.c2 UNION SELECT ALL vt1.c0, rt1.c2 FROM vt0, rt1, v0, vt1 WHERE (((CAST(CAST(rt1.c2 AS REAL) AS INTEGER)) ISNULL)) GROUP BY vt1.c0, rt1.c2;
SELECT vt1.c0, rt1.c2 FROM vt0, rt1, v0, vt1 GROUP BY vt1.c0, rt1.c2;
SELECT rt1.c2, rt1.c0 FROM v0, rt1 GROUP BY rt1.c2, rt1.c0;
SELECT ALL rt1.c2, rt1.c0 FROM v0, rt1 GROUP BY rt1.c2, rt1.c0 HAVING GROUP_CONCAT(MAX(v0.c0)) UNION ALL SELECT ALL rt1.c2, rt1.c0 FROM v0, rt1 GROUP BY rt1.c2, rt1.c0 HAVING (NOT (GROUP_CONCAT(MAX(v0.c0)))) UNION ALL SELECT rt1.c2, rt1.c0 FROM v0, rt1 GROUP BY rt1.c2, rt1.c0 HAVING ((GROUP_CONCAT(MAX(v0.c0))) ISNULL);
SELECT * FROM vt1 RIGHT OUTER JOIN v0 ON LIKELIHOOD(DISTINCT CASE ''  WHEN v0.c0 THEN v0.c0 ELSE vt1.c0 END, 0.6810992452643582);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN v0 ON LIKELIHOOD(DISTINCT CASE ''  WHEN v0.c0 THEN v0.c0 ELSE vt1.c0 END, 0.6810992452643582) WHERE (CAST((~ (v0.c0)) AS BLOB)) UNION ALL SELECT ALL * FROM vt1 RIGHT OUTER JOIN v0 ON LIKELIHOOD(DISTINCT CASE ''  WHEN v0.c0 THEN v0.c0 ELSE vt1.c0 END, 0.6810992452643582) WHERE ((NOT (CAST((~ (v0.c0)) AS BLOB)))) UNION ALL SELECT ALL * FROM vt1 RIGHT OUTER JOIN v0 ON LIKELIHOOD(DISTINCT CASE ''  WHEN v0.c0 THEN v0.c0 ELSE vt1.c0 END, 0.6810992452643582) WHERE (((CAST((~ (v0.c0)) AS BLOB)) ISNULL));
SELECT * FROM vt1 RIGHT OUTER JOIN v0 ON LIKELIHOOD(DISTINCT CASE ''  WHEN v0.c0 THEN v0.c0 ELSE vt1.c0 END, 0.6810992452643582);
SELECT DISTINCT * FROM vt1 INNER JOIN v0 ON CASE ((vt1.c0)IS('FvA,\rm'))  WHEN RTRIM(rt1.c1) THEN ((vt0.c0)<=(v0.c0)) ELSE (((rt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c0))) END LEFT OUTER JOIN rt1 ON ((CAST(vt1.c0 AS NUMERIC)) BETWEEN (json_array(0.8834830940979677, rt1.c0)) AND ((((rt1.c2))==((rt1.c0))))) LEFT OUTER JOIN vt0 ON (((v0.c0)) BETWEEN ((((vt0.c0)<>(rt1.c1)))) AND (((((rt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((rt1.c2))))));
SELECT DISTINCT * FROM vt1 INNER JOIN v0 ON CASE ((vt1.c0)IS('FvA,\rm'))  WHEN RTRIM(rt1.c1) THEN ((vt0.c0)<=(v0.c0)) ELSE (((rt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c0))) END LEFT OUTER JOIN rt1 ON ((CAST(vt1.c0 AS NUMERIC)) BETWEEN (json_array(0.8834830940979677, rt1.c0)) AND ((((rt1.c2))=((rt1.c0))))) LEFT OUTER JOIN vt0 ON (((v0.c0)) BETWEEN ((((vt0.c0)<>(rt1.c1)))) AND (((((rt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((rt1.c2)))))) WHERE ((((rt1.c2)) BETWEEN ((CASE NULL  WHEN vt0.c0 THEN vt1.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END)) AND ((CASE WHEN vt1.c0 THEN rt1.c2 WHEN rt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE rt1.c2 END)))) UNION SELECT DISTINCT * FROM vt1 INNER JOIN v0 ON CASE ((vt1.c0)IS('FvA,\rm'))  WHEN RTRIM(rt1.c1) THEN ((vt0.c0)<=(v0.c0)) ELSE (((rt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c0))) END LEFT OUTER JOIN rt1 ON ((CAST(vt1.c0 AS NUMERIC)) BETWEEN (json_array(0.8834830940979677, rt1.c0)) AND ((((rt1.c2))==((rt1.c0))))) LEFT OUTER JOIN vt0 ON (((v0.c0)) BETWEEN ((((vt0.c0)!=(rt1.c1)))) AND (((((rt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((rt1.c2)))))) WHERE ((NOT ((((rt1.c2)) BETWEEN ((CASE NULL  WHEN vt0.c0 THEN vt1.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END)) AND ((CASE WHEN vt1.c0 THEN rt1.c2 WHEN rt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE rt1.c2 END)))))) UNION SELECT DISTINCT * FROM vt1 INNER JOIN v0 ON CASE ((vt1.c0)IS('FvA,\rm'))  WHEN RTRIM(rt1.c1) THEN ((vt0.c0)<=(v0.c0)) ELSE (((rt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c0))) END LEFT OUTER JOIN rt1 ON ((CAST(vt1.c0 AS NUMERIC)) BETWEEN (json_array(0.8834830940979677, rt1.c0)) AND ((((rt1.c2))==((rt1.c0))))) LEFT OUTER JOIN vt0 ON (((v0.c0)) BETWEEN ((((vt0.c0)!=(rt1.c1)))) AND (((((rt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((rt1.c2)))))) WHERE ((((((rt1.c2)) BETWEEN ((CASE NULL  WHEN vt0.c0 THEN vt1.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END)) AND ((CASE WHEN vt1.c0 THEN rt1.c2 WHEN rt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE rt1.c2 END)))) ISNULL));
SELECT DISTINCT * FROM vt1 INNER JOIN v0 ON CASE ((vt1.c0)IS('FvA,\rm'))  WHEN RTRIM(rt1.c1) THEN ((vt0.c0)<=(v0.c0)) ELSE (((rt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c0))) END LEFT OUTER JOIN rt1 ON ((CAST(vt1.c0 AS NUMERIC)) BETWEEN (json_array(0.8834830940979677, rt1.c0)) AND ((((rt1.c2))==((rt1.c0))))) LEFT OUTER JOIN vt0 ON (((v0.c0)) BETWEEN ((((vt0.c0)<>(rt1.c1)))) AND (((((rt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((rt1.c2))))));
SELECT vt0.c0, rt1.c2, rt1.c1 FROM vt0, vt1, rt1 LEFT OUTER JOIN v0 ON ((((rt1.c2)IS(vt0.c0))) IS FALSE) GROUP BY vt0.c0, rt1.c2, rt1.c1;
SELECT vt0.c0, rt1.c2, rt1.c1 FROM vt0, vt1, rt1 LEFT OUTER JOIN v0 ON ((((rt1.c2)IS(vt0.c0))) IS FALSE) WHERE (((((rt1.c0)|(vt0.c0))) ISNULL)) GROUP BY vt0.c0, rt1.c2, rt1.c1 UNION SELECT ALL vt0.c0, rt1.c2, rt1.c1 FROM vt0, vt1, rt1 LEFT OUTER JOIN v0 ON ((((rt1.c2)IS(vt0.c0))) IS FALSE) WHERE ((NOT (((((rt1.c0)|(vt0.c0))) ISNULL)))) GROUP BY vt0.c0, rt1.c2, rt1.c1 UNION SELECT vt0.c0, rt1.c2, rt1.c1 FROM vt0, vt1, rt1 LEFT OUTER JOIN v0 ON ((((rt1.c2)IS(vt0.c0))) IS FALSE) WHERE (((((((rt1.c0)|(vt0.c0))) ISNULL)) ISNULL)) GROUP BY vt0.c0, rt1.c2, rt1.c1;
SELECT vt0.c0, rt1.c2, rt1.c1 FROM vt0, vt1, rt1 LEFT OUTER JOIN v0 ON ((((rt1.c2)IS(vt0.c0))) IS FALSE) GROUP BY vt0.c0, rt1.c2, rt1.c1;
SELECT ALL rt1.c2, vt0.c0, vt1.c0, v0.c0 FROM vt1, vt0, rt1 INNER JOIN v0 ON NULLIF(CASE rt1.c1  WHEN v0.c0 THEN vt0.c0 WHEN vt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN vt1.c0 END, ((vt1.c0)AND(vt0.c0))) GROUP BY rt1.c2, vt0.c0, vt1.c0, v0.c0;
SELECT ALL rt1.c2, vt0.c0, vt1.c0, v0.c0 FROM vt1, vt0, rt1 INNER JOIN v0 ON NULLIF(CASE rt1.c1  WHEN v0.c0 THEN vt0.c0 WHEN vt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN vt1.c0 END, ((vt1.c0)AND(vt0.c0))) GROUP BY rt1.c2, vt0.c0, vt1.c0, v0.c0 HAVING (~ (MAX(MAX(rt1.c0)))) UNION ALL SELECT ALL rt1.c2, vt0.c0, vt1.c0, v0.c0 FROM vt1, vt0, rt1 INNER JOIN v0 ON NULLIF(CASE rt1.c1  WHEN v0.c0 THEN vt0.c0 WHEN vt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN vt1.c0 END, ((vt1.c0)AND(vt0.c0))) GROUP BY rt1.c2, vt0.c0, vt1.c0, v0.c0 HAVING (NOT ((~ (MAX(MAX(rt1.c0)))))) UNION ALL SELECT ALL rt1.c2, vt0.c0, vt1.c0, v0.c0 FROM vt1, vt0, rt1 INNER JOIN v0 ON NULLIF(CASE rt1.c1  WHEN v0.c0 THEN vt0.c0 WHEN vt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN vt1.c0 END, ((vt1.c0)AND(vt0.c0))) GROUP BY rt1.c2, vt0.c0, vt1.c0, v0.c0 HAVING (((~ (MAX(MAX(rt1.c0))))) ISNULL);
SELECT rt1.c2, v0.c0, vt1.c0, rt1.c0 FROM rt1, vt1, v0;
SELECT ALL rt1.c2, v0.c0, vt1.c0, rt1.c0 FROM rt1, vt1, v0 WHERE ((((v0.c0, rt1.c2, v0.c0)) BETWEEN ((vt1.c0, v0.c0, rt1.c2)) AND ((rt1.c0, rt1.c2, rt1.c1))) COLLATE RTRIM) UNION ALL SELECT rt1.c2, v0.c0, vt1.c0, rt1.c0 FROM rt1, vt1, v0 WHERE ((NOT ((((v0.c0, rt1.c2, v0.c0)) BETWEEN ((vt1.c0, v0.c0, rt1.c2)) AND ((rt1.c0, rt1.c2, rt1.c1))) COLLATE RTRIM))) UNION ALL SELECT rt1.c2, v0.c0, vt1.c0, rt1.c0 FROM rt1, vt1, v0 WHERE ((((((v0.c0, rt1.c2, v0.c0)) BETWEEN ((vt1.c0, v0.c0, rt1.c2)) AND ((rt1.c0, rt1.c2, rt1.c1))) COLLATE RTRIM) ISNULL));
SELECT rt1.c2, v0.c0, vt1.c0, rt1.c0 FROM rt1, vt1, v0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0;
SELECT ALL vt1.c0, v0.c0 FROM vt1, v0 WHERE (CASE x''  WHEN ((((NULL)OR(v0.c0)))AND(vt1.c0)) THEN (((v0.c0))!=((v0.c0))) WHEN NULL THEN v0.c0 WHEN ((vt1.c0)+(vt1.c0)) THEN v0.c0 ELSE (vt1.c0 IN (v0.c0)) END) GROUP BY vt1.c0, v0.c0 UNION SELECT vt1.c0, v0.c0 FROM vt1, v0 WHERE ((NOT (CASE x''  WHEN ((((NULL)OR(v0.c0)))AND(vt1.c0)) THEN (((v0.c0))!=((v0.c0))) WHEN NULL THEN v0.c0 WHEN ((vt1.c0)+(vt1.c0)) THEN v0.c0 ELSE (vt1.c0 IN (v0.c0)) END))) GROUP BY vt1.c0, v0.c0 UNION SELECT vt1.c0, v0.c0 FROM vt1, v0 WHERE (((CASE x''  WHEN ((((NULL)OR(v0.c0)))AND(vt1.c0)) THEN (((v0.c0))<>((v0.c0))) WHEN NULL THEN v0.c0 WHEN ((vt1.c0)+(vt1.c0)) THEN v0.c0 ELSE (vt1.c0 IN (v0.c0)) END) ISNULL)) GROUP BY vt1.c0, v0.c0;
SELECT ALL vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0;
SELECT ALL rt1.c0, rt1.c2, v0.c0, vt0.c0 FROM v0, vt0, rt1, vt1 GROUP BY rt1.c0, rt1.c2, v0.c0, vt0.c0;
SELECT rt1.c0, rt1.c2, v0.c0, vt0.c0 FROM v0, vt0, rt1, vt1 GROUP BY rt1.c0, rt1.c2, v0.c0, vt0.c0 HAVING ((COUNT(vt1.c0)) ISNULL) UNION ALL SELECT ALL rt1.c0, rt1.c2, v0.c0, vt0.c0 FROM v0, vt0, rt1, vt1 GROUP BY rt1.c0, rt1.c2, v0.c0, vt0.c0 HAVING (NOT (((COUNT(vt1.c0)) ISNULL))) UNION ALL SELECT ALL rt1.c0, rt1.c2, v0.c0, vt0.c0 FROM v0, vt0, rt1, vt1 GROUP BY rt1.c0, rt1.c2, v0.c0, vt0.c0 HAVING ((((COUNT(vt1.c0)) ISNULL)) ISNULL);
SELECT ALL rt1.c0, rt1.c2, v0.c0, vt0.c0 FROM v0, vt0, rt1, vt1 GROUP BY rt1.c0, rt1.c2, v0.c0, vt0.c0;
SELECT rt1.c0, rt1.c2, v0.c0, vt0.c0 FROM v0, vt0, rt1, vt1 GROUP BY rt1.c0, rt1.c2, v0.c0, vt0.c0 HAVING ((COUNT(vt1.c0)) ISNULL) UNION ALL SELECT ALL rt1.c0, rt1.c2, v0.c0, vt0.c0 FROM v0, vt0, rt1, vt1 GROUP BY rt1.c0, rt1.c2, v0.c0, vt0.c0 HAVING (NOT (((COUNT(vt1.c0)) ISNULL))) UNION ALL SELECT ALL rt1.c0, rt1.c2, v0.c0, vt0.c0 FROM v0, vt0, rt1, vt1 GROUP BY rt1.c0, rt1.c2, v0.c0, vt0.c0 HAVING ((((COUNT(vt1.c0)) ISNULL)) ISNULL);
SELECT ALL rt1.c0, rt1.c2, v0.c0, vt0.c0 FROM v0, vt0, rt1, vt1 GROUP BY rt1.c0, rt1.c2, v0.c0, vt0.c0;
SELECT ALL MIN(((((((((((rt1.c2)AND(rt1.c2)))AND(vt0.c0)))AND(rt1.c1)))OR(rt1.c0)))<((+ ('-1079210572'))))) FROM vt0, v0, rt1, vt1 ORDER BY ((((((((CAST(vt0.c0 AS REAL))OR(((vt0.c0) BETWEEN (vt1.c0) AND (rt1.c0)))))OR(((rt1.c2)OR(rt1.c0)))))AND(((0xfffffffff7a19fc2)+(rt1.c0)))))AND(ABS(rt1.c0))), CASE WHEN (v0.c0 IN (rt1.c0)) THEN ((rt1.c1)>=(rt1.c1)) ELSE vt0.c0 COLLATE RTRIM END DESC;
SELECT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((SQLITE_COMPILEOPTION_USED(vt1.c0))AND(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND(((vt1.c0) ISNULL)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((SQLITE_COMPILEOPTION_USED(vt1.c0))AND(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND(((vt1.c0) ISNULL)))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((((((SQLITE_COMPILEOPTION_USED(vt1.c0))AND(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND(((vt1.c0) ISNULL)))) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT rt1.c2, rt1.c0, vt1.c0, v0.c0, vt0.c0, rt1.c1 FROM v0, rt1 RIGHT OUTER JOIN vt1 ON vt1.c0 INNER JOIN vt0 ON (+ (CAST(vt0.c0 AS TEXT)));
SELECT DISTINCT rt1.c2, rt1.c0, vt1.c0, v0.c0, vt0.c0, rt1.c1 FROM v0, rt1 RIGHT OUTER JOIN vt1 ON vt1.c0 INNER JOIN vt0 ON (+ (CAST(vt0.c0 AS TEXT))) WHERE ((((((v0.c0)AND(rt1.c0)))OR(rt1.c2)) IN (((((rt1.c1)AND(rt1.c0)))OR(rt1.c1))))) UNION SELECT DISTINCT rt1.c2, rt1.c0, vt1.c0, v0.c0, vt0.c0, rt1.c1 FROM v0, rt1 RIGHT OUTER JOIN vt1 ON vt1.c0 INNER JOIN vt0 ON (+ (CAST(vt0.c0 AS TEXT))) WHERE ((NOT ((((((v0.c0)AND(rt1.c0)))OR(rt1.c2)) IN (((((rt1.c1)AND(rt1.c0)))OR(rt1.c1))))))) UNION SELECT DISTINCT rt1.c2, rt1.c0, vt1.c0, v0.c0, vt0.c0, rt1.c1 FROM v0, rt1 RIGHT OUTER JOIN vt1 ON vt1.c0 INNER JOIN vt0 ON (+ (CAST(vt0.c0 AS TEXT))) WHERE ((((((((v0.c0)AND(rt1.c0)))OR(rt1.c2)) IN (((((rt1.c1)AND(rt1.c0)))OR(rt1.c1))))) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c0, vt1.c0, v0.c0, vt0.c0, rt1.c1 FROM v0, rt1 RIGHT OUTER JOIN vt1 ON vt1.c0 INNER JOIN vt0 ON (+ (CAST(vt0.c0 AS TEXT)));
SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 WHERE (CASE (v0.c0 IN ())  WHEN ((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)) THEN ((vt0.c0) NOT NULL) END) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt0, v0 WHERE ((NOT (CASE (v0.c0 IN ())  WHEN ((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)) THEN ((vt0.c0) NOT NULL) END))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt0, v0 WHERE (((CASE (v0.c0 IN ())  WHEN ((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)) THEN ((vt0.c0) NOT NULL) END) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT ALL rt1.c2, vt0.c0, v0.c0 FROM vt0, vt1, rt1 INNER JOIN v0 ON (+ ((((v0.c0))<=((rt1.c2))))) GROUP BY rt1.c2, vt0.c0, v0.c0;
SELECT ALL rt1.c2, vt0.c0, v0.c0 FROM vt0, vt1, rt1 INNER JOIN v0 ON (+ ((((v0.c0))<=((rt1.c2))))) GROUP BY rt1.c2, vt0.c0, v0.c0 HAVING MIN(((rt1.c2) IS TRUE)) UNION ALL SELECT rt1.c2, vt0.c0, v0.c0 FROM vt0, vt1, rt1 INNER JOIN v0 ON (+ ((((v0.c0))<=((rt1.c2))))) GROUP BY rt1.c2, vt0.c0, v0.c0 HAVING (NOT (MIN(((rt1.c2) IS TRUE)))) UNION ALL SELECT ALL rt1.c2, vt0.c0, v0.c0 FROM vt0, vt1, rt1 INNER JOIN v0 ON (+ ((((v0.c0))<=((rt1.c2))))) GROUP BY rt1.c2, vt0.c0, v0.c0 HAVING ((MIN(((rt1.c2) IS TRUE))) ISNULL);
SELECT ALL rt1.c2, vt0.c0, v0.c0 FROM vt0, vt1, rt1 INNER JOIN v0 ON (+ ((((v0.c0))<=((rt1.c2))))) GROUP BY rt1.c2, vt0.c0, v0.c0;
SELECT ALL rt1.c2, vt0.c0, v0.c0 FROM vt0, vt1, rt1 INNER JOIN v0 ON (+ ((((v0.c0))<=((rt1.c2))))) GROUP BY rt1.c2, vt0.c0, v0.c0 HAVING MIN(((rt1.c2) IS TRUE)) UNION ALL SELECT rt1.c2, vt0.c0, v0.c0 FROM vt0, vt1, rt1 INNER JOIN v0 ON (+ ((((v0.c0))<=((rt1.c2))))) GROUP BY rt1.c2, vt0.c0, v0.c0 HAVING (NOT (MIN(((rt1.c2) IS TRUE)))) UNION ALL SELECT ALL rt1.c2, vt0.c0, v0.c0 FROM vt0, vt1, rt1 INNER JOIN v0 ON (+ ((((v0.c0))<=((rt1.c2))))) GROUP BY rt1.c2, vt0.c0, v0.c0 HAVING ((MIN(((rt1.c2) IS TRUE))) ISNULL);
SELECT ALL rt1.c2, vt0.c0, v0.c0 FROM vt0, vt1, rt1 INNER JOIN v0 ON (+ ((((v0.c0))<=((rt1.c2))))) GROUP BY rt1.c2, vt0.c0, v0.c0;
SELECT * FROM rt1, vt0, v0, vt1;
SELECT ALL * FROM rt1, vt0, v0, vt1 WHERE ((((((vt1.c0, vt1.c0, rt1.c1)) NOT BETWEEN ((rt1.c2, 'L冏', vt0.c0)) AND ((vt0.c0, vt0.c0, '-1057866876'))))||(((rt1.c2) NOT NULL)))) UNION ALL SELECT * FROM rt1, vt0, v0 NOT INDEXED, vt1 WHERE ((NOT ((((((vt1.c0, vt1.c0, rt1.c1)) NOT BETWEEN ((rt1.c2, 'L冏', vt0.c0)) AND ((vt0.c0, vt0.c0, '-1057866876'))))||(((rt1.c2) NOT NULL)))))) UNION ALL SELECT ALL * FROM rt1, vt0, v0, vt1 WHERE ((((((((vt1.c0, vt1.c0, rt1.c1)) NOT BETWEEN ((rt1.c2, 'L冏', vt0.c0)) AND ((vt0.c0, vt0.c0, '-1057866876'))))||(((rt1.c2) NOT NULL)))) ISNULL));
SELECT * FROM rt1, vt0, v0, vt1;
SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1, vt0.c0 FROM vt0 RIGHT OUTER JOIN rt1 ON ((((rt1.c2 IN ())))==((0.44593459934943513)));
SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1, vt0.c0 FROM vt0 RIGHT OUTER JOIN rt1 ON ((((rt1.c2 IN ())))=((0.44593459934943513))) WHERE (((CAST(rt1.c0 AS TEXT))%(LENGTH('1')))) UNION SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1, vt0.c0 FROM vt0 RIGHT OUTER JOIN rt1 ON ((((rt1.c2 IN ())))==((0.44593459934943513))) WHERE ((NOT (((CAST(rt1.c0 AS TEXT))%(LENGTH('1')))))) UNION SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1, vt0.c0 FROM vt0 RIGHT OUTER JOIN rt1 ON ((((rt1.c2 IN ())))=((0.44593459934943513))) WHERE (((((CAST(rt1.c0 AS TEXT))%(LENGTH('1')))) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1, vt0.c0 FROM vt0 RIGHT OUTER JOIN rt1 ON ((((rt1.c2 IN ())))==((0.44593459934943513)));
SELECT ALL v0.c0, vt1.c0 FROM v0, vt1 GROUP BY v0.c0, vt1.c0;
SELECT ALL v0.c0, vt1.c0 FROM v0, vt1 WHERE (CASE WHEN vt1.c0 COLLATE BINARY THEN (v0.c0 IN ()) END) GROUP BY v0.c0, vt1.c0 UNION SELECT v0.c0, vt1.c0 FROM v0, vt1 WHERE ((NOT (CASE WHEN vt1.c0 COLLATE BINARY THEN (v0.c0 IN ()) END))) GROUP BY v0.c0, vt1.c0 UNION SELECT v0.c0, vt1.c0 FROM v0, vt1 WHERE (((CASE WHEN vt1.c0 COLLATE BINARY THEN (v0.c0 IN ()) END) ISNULL)) GROUP BY v0.c0, vt1.c0;
SELECT ALL v0.c0, vt1.c0 FROM v0, vt1 GROUP BY v0.c0, vt1.c0;
SELECT ALL vt1.c0, rt1.c1, rt1.c2 FROM v0, vt1 RIGHT OUTER JOIN rt1 ON CAST(((v0.c0) ISNULL) AS INTEGER) GROUP BY vt1.c0, rt1.c1, rt1.c2;
SELECT vt1.c0, rt1.c1, rt1.c2 FROM v0, vt1 RIGHT OUTER JOIN rt1 ON CAST(((v0.c0) ISNULL) AS INTEGER) GROUP BY vt1.c0, rt1.c1, rt1.c2 HAVING GROUP_CONCAT(GROUP_CONCAT(TOTAL(GROUP_CONCAT(vt1.c0)))) UNION ALL SELECT vt1.c0, rt1.c1, rt1.c2 FROM v0, vt1 RIGHT OUTER JOIN rt1 ON CAST(((v0.c0) ISNULL) AS INTEGER) GROUP BY vt1.c0, rt1.c1, rt1.c2 HAVING (NOT (GROUP_CONCAT(GROUP_CONCAT(TOTAL(GROUP_CONCAT(vt1.c0)))))) UNION ALL SELECT vt1.c0, rt1.c1, rt1.c2 FROM v0, vt1 RIGHT OUTER JOIN rt1 ON CAST(((v0.c0) ISNULL) AS INTEGER) GROUP BY vt1.c0, rt1.c1, rt1.c2 HAVING ((GROUP_CONCAT(GROUP_CONCAT(TOTAL(GROUP_CONCAT(vt1.c0))))) ISNULL);
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE (UPPER(vt1.c0)) UNION ALL SELECT * FROM vt1 WHERE ((NOT (UPPER(vt1.c0)))) UNION ALL SELECT ALL * FROM vt1 WHERE (((UPPER(vt1.c0)) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT v0.c0 FROM v0, vt1, vt0, rt1;
SELECT DISTINCT v0.c0 FROM v0, vt1, vt0, rt1 NOT INDEXED WHERE ((((rt1.c1))>=((vt1.c0))) COLLATE RTRIM) UNION SELECT DISTINCT v0.c0 FROM v0, vt1, vt0, rt1 WHERE ((NOT ((((rt1.c1))>=((vt1.c0))) COLLATE RTRIM))) UNION SELECT DISTINCT v0.c0 FROM v0, vt1, vt0, rt1 WHERE ((((((rt1.c1))>=((vt1.c0))) COLLATE RTRIM) ISNULL));
SELECT DISTINCT v0.c0 FROM v0, vt1, vt0, rt1;
SELECT vt1.c0, rt1.c1 FROM vt1, rt1 GROUP BY vt1.c0, rt1.c1;
SELECT ALL vt1.c0, rt1.c1 FROM vt1, rt1 WHERE ((NOT (((vt1.c0)/(rt1.c0))))) GROUP BY vt1.c0, rt1.c1 UNION SELECT vt1.c0, rt1.c1 FROM vt1, rt1 WHERE ((NOT ((NOT (((vt1.c0)/(rt1.c0))))))) GROUP BY vt1.c0, rt1.c1 UNION SELECT vt1.c0, rt1.c1 FROM vt1, rt1 WHERE ((((NOT (((vt1.c0)/(rt1.c0))))) ISNULL)) GROUP BY vt1.c0, rt1.c1;
SELECT vt1.c0, rt1.c1 FROM vt1, rt1 GROUP BY vt1.c0, rt1.c1;
SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM v0 INNER JOIN rt1 ON (((((((((('944132338')AND(v0.c0)))AND(rt1.c2)))AND(0.536950882665508)))OR(rt1.c1)))*(rt1.c1 COLLATE RTRIM)) GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM v0 INNER JOIN rt1 ON (((((((((('944132338')AND(v0.c0)))AND(rt1.c2)))AND(0.536950882665508)))OR(rt1.c1)))*(rt1.c1 COLLATE RTRIM)) GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING MIN(ABS(AVG(rt1.c1))) UNION ALL SELECT rt1.c2, rt1.c1, rt1.c0 FROM v0 INNER JOIN rt1 ON (((((((((('944132338')AND(v0.c0)))AND(rt1.c2)))AND(0.536950882665508)))OR(rt1.c1)))*(rt1.c1 COLLATE RTRIM)) GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING (NOT (MIN(ABS(AVG(rt1.c1))))) UNION ALL SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM v0 INNER JOIN rt1 ON (((((((((('944132338')AND(v0.c0)))AND(rt1.c2)))AND(0.536950882665508)))OR(rt1.c1)))*(rt1.c1 COLLATE RTRIM)) GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING ((MIN(ABS(AVG(rt1.c1)))) ISNULL);
SELECT v0.c0, rt1.c0, vt0.c0, rt1.c1 FROM vt0, v0 INNER JOIN rt1 ON (+ (((((((((((((rt1.c0)AND(rt1.c2)))AND(vt0.c0)))AND(0.39399038303610945)))OR(rt1.c1)))AND(vt0.c0)))OR(rt1.c0))));
SELECT ALL v0.c0, rt1.c0, vt0.c0, rt1.c1 FROM vt0, v0 INNER JOIN rt1 ON (+ (((((((((((((rt1.c0)AND(rt1.c2)))AND(vt0.c0)))AND(0.39399038303610945)))OR(rt1.c1)))AND(vt0.c0)))OR(rt1.c0)))) WHERE (json_object(x'', (((rt1.c2))<>((rt1.c2))))) UNION ALL SELECT v0.c0, rt1.c0, vt0.c0, rt1.c1 FROM vt0, v0 INNER JOIN rt1 ON (+ (((((((((((((rt1.c0)AND(rt1.c2)))AND(vt0.c0)))AND(0.39399038303610945)))OR(rt1.c1)))AND(vt0.c0)))OR(rt1.c0)))) WHERE ((NOT (json_object(x'', (((rt1.c2))<>((rt1.c2))))))) UNION ALL SELECT v0.c0, rt1.c0, vt0.c0, rt1.c1 FROM vt0, v0 INNER JOIN rt1 ON (+ (((((((((((((rt1.c0)AND(rt1.c2)))AND(vt0.c0)))AND(0.39399038303610945)))OR(rt1.c1)))AND(vt0.c0)))OR(rt1.c0)))) WHERE (((json_object(x'', (((rt1.c2))<>((rt1.c2))))) ISNULL));
SELECT v0.c0, rt1.c0, vt0.c0, rt1.c1 FROM vt0, v0 INNER JOIN rt1 ON (+ (((((((((((((rt1.c0)AND(rt1.c2)))AND(vt0.c0)))AND(0.39399038303610945)))OR(rt1.c1)))AND(vt0.c0)))OR(rt1.c0))));
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((0.7661673051420054) NOT BETWEEN ((- (v0.c0))) AND (ROUND(v0.c0, v0.c0)))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((0.7661673051420054) NOT BETWEEN ((- (v0.c0))) AND (ROUND(v0.c0, v0.c0)))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((0.7661673051420054) NOT BETWEEN ((- (v0.c0))) AND (ROUND(v0.c0, v0.c0)))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT rt1.c2, vt0.c0, rt1.c0, v0.c0, rt1.c1, vt1.c0 FROM rt1, vt0, vt1 FULL OUTER JOIN v0 ON COALESCE((vt1.c0 IN ()), (- (''))) GROUP BY rt1.c2, vt0.c0, rt1.c0, v0.c0, rt1.c1, vt1.c0;
SELECT ALL rt1.c2, vt0.c0, rt1.c0, v0.c0, rt1.c1, vt1.c0 FROM rt1, vt0, vt1 FULL OUTER JOIN v0 ON COALESCE((vt1.c0 IN ()), (- (''))) WHERE ((CAST(rt1.c0 AS TEXT) IN ())) GROUP BY rt1.c2, vt0.c0, rt1.c0, v0.c0, rt1.c1, vt1.c0 UNION SELECT rt1.c2, vt0.c0, rt1.c0, v0.c0, rt1.c1, vt1.c0 FROM rt1, vt0, vt1 FULL OUTER JOIN v0 ON COALESCE((vt1.c0 IN ()), (- (''))) WHERE ((NOT ((CAST(rt1.c0 AS TEXT) IN ())))) GROUP BY rt1.c2, vt0.c0, rt1.c0, v0.c0, rt1.c1, vt1.c0 UNION SELECT rt1.c2, vt0.c0, rt1.c0, v0.c0, rt1.c1, vt1.c0 FROM rt1, vt0, vt1 FULL OUTER JOIN v0 ON COALESCE((vt1.c0 IN ()), (- (''))) WHERE ((((CAST(rt1.c0 AS TEXT) IN ())) ISNULL)) GROUP BY rt1.c2, vt0.c0, rt1.c0, v0.c0, rt1.c1, vt1.c0;
SELECT rt1.c2, vt0.c0, rt1.c0, v0.c0, rt1.c1, vt1.c0 FROM rt1, vt0, vt1 FULL OUTER JOIN v0 ON COALESCE((vt1.c0 IN ()), (- (''))) GROUP BY rt1.c2, vt0.c0, rt1.c0, v0.c0, rt1.c1, vt1.c0;
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING COUNT(COUNT(*)) UNION ALL SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING (NOT (COUNT(COUNT(*)))) UNION ALL SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING ((COUNT(COUNT(*))) ISNULL);
SELECT ALL rt1.c0, rt1.c1, v0.c0 FROM v0, rt1;
SELECT rt1.c0, rt1.c1, v0.c0 FROM v0, rt1 WHERE (((((((((((rt1.c2)AND(v0.c0)))OR(rt1.c0)))OR(9.00739988E8)))OR(rt1.c1)))>(CAST(rt1.c1 AS BLOB)))) UNION ALL SELECT ALL rt1.c0, rt1.c1, v0.c0 FROM v0, rt1 WHERE ((NOT (((((((((((rt1.c2)AND(v0.c0)))OR(rt1.c0)))OR(9.00739988E8)))OR(rt1.c1)))>(CAST(rt1.c1 AS BLOB)))))) UNION ALL SELECT rt1.c0, rt1.c1, v0.c0 FROM v0, rt1 WHERE (((((((((((((rt1.c2)AND(v0.c0)))OR(rt1.c0)))OR(9.00739988E8)))OR(rt1.c1)))>(CAST(rt1.c1 AS BLOB)))) ISNULL));
SELECT ALL rt1.c0, rt1.c1, v0.c0 FROM v0, rt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (('''E' IN (CAST(vt1.c0 AS INTEGER), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (('''E' IN (CAST(vt1.c0 AS INTEGER), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((('''E' IN (CAST(vt1.c0 AS INTEGER), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM rt1 WHERE (CASE WHEN (~ (rt1.c2)) THEN (- (rt1.c0)) WHEN ((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c1)) THEN (((rt1.c2, rt1.c2, rt1.c2)) BETWEEN ((rt1.c0, rt1.c1, rt1.c0)) AND ((rt1.c1, rt1.c2, rt1.c2))) WHEN rt1.c2 COLLATE NOCASE THEN ((rt1.c0)IS(rt1.c2)) WHEN ((((((((rt1.c1)OR(-7.2970752E8)))OR(rt1.c1)))OR(rt1.c2)))AND(rt1.c0)) THEN (NOT (rt1.c2)) WHEN (((rt1.c2, rt1.c0, rt1.c0)) BETWEEN ((rt1.c2, rt1.c1, rt1.c0)) AND ((rt1.c1, rt1.c1, rt1.c0))) THEN rt1.c2 ELSE ((((((((((((rt1.c2)OR(rt1.c2)))OR(rt1.c1)))AND(rt1.c1)))OR(rt1.c0)))AND(rt1.c1)))OR(rt1.c1)) END) GROUP BY rt1.c0 UNION SELECT rt1.c0 FROM rt1 WHERE ((NOT (CASE WHEN (~ (rt1.c2)) THEN (- (rt1.c0)) WHEN ((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c1)) THEN (((rt1.c2, rt1.c2, rt1.c2)) BETWEEN ((rt1.c0, rt1.c1, rt1.c0)) AND ((rt1.c1, rt1.c2, rt1.c2))) WHEN rt1.c2 COLLATE NOCASE THEN ((rt1.c0)IS(rt1.c2)) WHEN ((((((((rt1.c1)OR(-7.2970752E8)))OR(rt1.c1)))OR(rt1.c2)))AND(rt1.c0)) THEN (NOT (rt1.c2)) WHEN (((rt1.c2, rt1.c0, rt1.c0)) BETWEEN ((rt1.c2, rt1.c1, rt1.c0)) AND ((rt1.c1, rt1.c1, rt1.c0))) THEN rt1.c2 ELSE ((((((((((((rt1.c2)OR(rt1.c2)))OR(rt1.c1)))AND(rt1.c1)))OR(rt1.c0)))AND(rt1.c1)))OR(rt1.c1)) END))) GROUP BY rt1.c0 UNION SELECT ALL rt1.c0 FROM rt1 WHERE (((CASE WHEN (~ (rt1.c2)) THEN (- (rt1.c0)) WHEN ((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c1)) THEN (((rt1.c2, rt1.c2, rt1.c2)) BETWEEN ((rt1.c0, rt1.c1, rt1.c0)) AND ((rt1.c1, rt1.c2, rt1.c2))) WHEN rt1.c2 COLLATE NOCASE THEN ((rt1.c0)IS(rt1.c2)) WHEN ((((((((rt1.c1)OR(-7.2970752E8)))OR(rt1.c1)))OR(rt1.c2)))AND(rt1.c0)) THEN (NOT (rt1.c2)) WHEN (((rt1.c2, rt1.c0, rt1.c0)) BETWEEN ((rt1.c2, rt1.c1, rt1.c0)) AND ((rt1.c1, rt1.c1, rt1.c0))) THEN rt1.c2 ELSE ((((((((((((rt1.c2)OR(rt1.c2)))OR(rt1.c1)))AND(rt1.c1)))OR(rt1.c0)))AND(rt1.c1)))OR(rt1.c1)) END) ISNULL)) GROUP BY rt1.c0;
SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1, vt0, vt1 NOT INDEXED GROUP BY rt1.c2, rt1.c0, rt1.c1;
SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1, vt0, vt1 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING 0.45875886558484225 UNION ALL SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1, vt0, vt1 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING (NOT (0.45875886558484225)) UNION ALL SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1, vt0, vt1 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING ((0.45875886558484225) ISNULL);
SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1, vt0, vt1 NOT INDEXED GROUP BY rt1.c2, rt1.c0, rt1.c1;
SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1, vt0, vt1 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING 0.45875886558484225 UNION ALL SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1, vt0, vt1 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING (NOT (0.45875886558484225)) UNION ALL SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1, vt0, vt1 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING ((0.45875886558484225) ISNULL);
SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1, vt0, vt1 NOT INDEXED GROUP BY rt1.c2, rt1.c0, rt1.c1;
SELECT ALL * FROM v0, vt1;
SELECT ALL * FROM v0, vt1 WHERE (((vt1.c0 COLLATE NOCASE)!=(0x6bf5da69))) UNION ALL SELECT * FROM v0, vt1 WHERE ((NOT (((vt1.c0 COLLATE NOCASE)!=(0x6bf5da69))))) UNION ALL SELECT ALL * FROM v0, vt1 WHERE (((((vt1.c0 COLLATE NOCASE)!=(0X6bf5da69))) ISNULL));
SELECT ALL * FROM v0, vt1;
SELECT DISTINCT rt1.c2 FROM vt1, rt1, vt0, v0 NOT INDEXED;
SELECT DISTINCT rt1.c2 FROM vt1 NOT INDEXED, rt1, vt0, v0 WHERE (rt1.c0) UNION SELECT DISTINCT rt1.c2 FROM vt1, rt1, vt0, v0 WHERE ((NOT (rt1.c0))) UNION SELECT DISTINCT rt1.c2 FROM vt1, rt1, vt0, v0 WHERE (((rt1.c0) ISNULL));
SELECT DISTINCT rt1.c2 FROM vt1, rt1, vt0, v0 NOT INDEXED;
SELECT ALL rt1.c1 FROM vt0, vt1, rt1 GROUP BY rt1.c1;
SELECT rt1.c1 FROM vt0, vt1, rt1 WHERE (CAST(rt1.c2 COLLATE NOCASE AS NUMERIC)) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM vt0, vt1, rt1 WHERE ((NOT (CAST(rt1.c2 COLLATE NOCASE AS NUMERIC)))) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM vt0, vt1, rt1 WHERE (((CAST(rt1.c2 COLLATE NOCASE AS NUMERIC)) ISNULL)) GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM vt0, vt1, rt1 GROUP BY rt1.c1;
SELECT vt1.c0 FROM vt1, v0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, v0 GROUP BY vt1.c0 HAVING SUM(0.9761684710704538) UNION ALL SELECT ALL vt1.c0 FROM vt1, v0 GROUP BY vt1.c0 HAVING (NOT (SUM(0.9761684710704538))) UNION ALL SELECT vt1.c0 FROM vt1, v0 GROUP BY vt1.c0 HAVING ((SUM(0.9761684710704538)) ISNULL);
SELECT vt1.c0 FROM vt1, v0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, v0 GROUP BY vt1.c0 HAVING SUM(0.9761684710704538) UNION ALL SELECT ALL vt1.c0 FROM vt1, v0 GROUP BY vt1.c0 HAVING (NOT (SUM(0.9761684710704538))) UNION ALL SELECT vt1.c0 FROM vt1, v0 GROUP BY vt1.c0 HAVING ((SUM(0.9761684710704538)) ISNULL);
SELECT vt1.c0 FROM vt1, v0 GROUP BY vt1.c0;
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE BINARY COLLATE NOCASE) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE BINARY COLLATE NOCASE))) UNION ALL SELECT * FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE BINARY COLLATE NOCASE) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM vt1 INNER JOIN rt1 ON ROUND(vt1.c0, v0.c0) COLLATE RTRIM FULL OUTER JOIN v0 ON RTRIM(NULL);
SELECT rt1.c0, rt1.c1, rt1.c2 FROM vt1, rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2;
SELECT rt1.c0, rt1.c1, rt1.c2 FROM vt1, rt1 WHERE ((((NOT (vt1.c0)))>>(rt1.c1 COLLATE RTRIM))) GROUP BY rt1.c0, rt1.c1, rt1.c2 UNION SELECT rt1.c0, rt1.c1, rt1.c2 FROM vt1, rt1 WHERE ((NOT ((((NOT (vt1.c0)))>>(rt1.c1 COLLATE RTRIM))))) GROUP BY rt1.c0, rt1.c1, rt1.c2 UNION SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM vt1 NOT INDEXED, rt1 WHERE ((((((NOT (vt1.c0)))>>(rt1.c1 COLLATE RTRIM))) ISNULL)) GROUP BY rt1.c0, rt1.c1, rt1.c2;
SELECT rt1.c0, rt1.c1, rt1.c2 FROM vt1, rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2;
SELECT ALL rt1.c0 FROM vt0, v0, vt1, rt1 GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM vt0, v0, vt1, rt1 GROUP BY rt1.c0 HAVING HEX(AVG(MAX(TOTAL(vt0.c0)))) UNION ALL SELECT rt1.c0 FROM vt0, v0, vt1, rt1 GROUP BY rt1.c0 HAVING (NOT (HEX(AVG(MAX(TOTAL(vt0.c0)))))) UNION ALL SELECT ALL rt1.c0 FROM vt0, v0, vt1, rt1 GROUP BY rt1.c0 HAVING ((HEX(AVG(MAX(TOTAL(vt0.c0))))) ISNULL);
SELECT ALL * FROM vt1, vt0, v0, rt1;
SELECT ALL * FROM vt1, vt0, v0, rt1 WHERE ('-847081378') UNION ALL SELECT ALL * FROM vt1, vt0, v0, rt1 WHERE ((NOT ('-847081378'))) UNION ALL SELECT ALL * FROM vt1, vt0, v0, rt1 WHERE ((('-847081378') ISNULL));
SELECT ALL * FROM vt1, vt0, v0, rt1;
SELECT DISTINCT rt1.c1, v0.c0, rt1.c0, rt1.c2 FROM rt1, v0, vt0;
SELECT DISTINCT rt1.c1, v0.c0, rt1.c0, rt1.c2 FROM rt1, v0, vt0 WHERE (CAST(((rt1.c2)+(v0.c0)) AS BLOB)) UNION SELECT DISTINCT rt1.c1, v0.c0, rt1.c0, rt1.c2 FROM rt1, v0, vt0 WHERE ((NOT (CAST(((rt1.c2)+(v0.c0)) AS BLOB)))) UNION SELECT DISTINCT rt1.c1, v0.c0, rt1.c0, rt1.c2 FROM rt1, v0, vt0 WHERE (((CAST(((rt1.c2)+(v0.c0)) AS BLOB)) ISNULL));
SELECT DISTINCT rt1.c1, v0.c0, rt1.c0, rt1.c2 FROM rt1, v0, vt0;
SELECT rt1.c0, rt1.c1, vt0.c0 FROM vt0 INNER JOIN rt1 ON ((CASE rt1.c1  WHEN 0.0016981929845554244 THEN rt1.c0 ELSE rt1.c0 END)GLOB(((rt1.c1) BETWEEN (rt1.c0) AND (vt0.c0)))) GROUP BY rt1.c0, rt1.c1, vt0.c0;
SELECT ALL rt1.c0, rt1.c1, vt0.c0 FROM vt0 INNER JOIN rt1 ON ((CASE rt1.c1  WHEN 0.0016981929845554244 THEN rt1.c0 ELSE rt1.c0 END)GLOB(((rt1.c1) BETWEEN (rt1.c0) AND (vt0.c0)))) WHERE (CAST(CASE vt0.c0  WHEN '' THEN vt0.c0 WHEN vt0.c0 THEN rt1.c0 WHEN rt1.c1 THEN '0.7279163776912158' ELSE rt1.c0 END AS REAL)) GROUP BY rt1.c0, rt1.c1, vt0.c0 UNION SELECT rt1.c0, rt1.c1, vt0.c0 FROM vt0 INNER JOIN rt1 ON ((CASE rt1.c1  WHEN 0.0016981929845554244 THEN rt1.c0 ELSE rt1.c0 END)GLOB(((rt1.c1) BETWEEN (rt1.c0) AND (vt0.c0)))) WHERE ((NOT (CAST(CASE vt0.c0  WHEN '' THEN vt0.c0 WHEN vt0.c0 THEN rt1.c0 WHEN rt1.c1 THEN '0.7279163776912158' ELSE rt1.c0 END AS REAL)))) GROUP BY rt1.c0, rt1.c1, vt0.c0 UNION SELECT ALL rt1.c0, rt1.c1, vt0.c0 FROM vt0 INNER JOIN rt1 ON ((CASE rt1.c1  WHEN 0.0016981929845554244 THEN rt1.c0 ELSE rt1.c0 END)GLOB(((rt1.c1) BETWEEN (rt1.c0) AND (vt0.c0)))) WHERE (((CAST(CASE vt0.c0  WHEN '' THEN vt0.c0 WHEN vt0.c0 THEN rt1.c0 WHEN rt1.c1 THEN '0.7279163776912158' ELSE rt1.c0 END AS REAL)) ISNULL)) GROUP BY rt1.c0, rt1.c1, vt0.c0;
SELECT rt1.c0, rt1.c1, vt0.c0 FROM vt0 INNER JOIN rt1 ON ((CASE rt1.c1  WHEN 0.0016981929845554244 THEN rt1.c0 ELSE rt1.c0 END)GLOB(((rt1.c1) BETWEEN (rt1.c0) AND (vt0.c0)))) GROUP BY rt1.c0, rt1.c1, vt0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING AVG(GROUP_CONCAT(GROUP_CONCAT(MAX(MIN(COUNT(*)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (AVG(GROUP_CONCAT(GROUP_CONCAT(MAX(MIN(COUNT(*)))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((AVG(GROUP_CONCAT(GROUP_CONCAT(MAX(MIN(COUNT(*))))))) ISNULL);
SELECT * FROM vt1, v0, rt1;
SELECT ALL * FROM vt1, v0, rt1 WHERE (CASE WHEN rt1.c1 COLLATE RTRIM THEN ((v0.c0)&(x'')) WHEN rt1.c1 COLLATE NOCASE THEN CAST(vt1.c0 AS BLOB) WHEN ((((rt1.c1)OR(v0.c0)))AND(v0.c0)) THEN ((rt1.c0) ISNULL) ELSE (NOT (vt1.c0)) END) UNION ALL SELECT * FROM vt1, v0, rt1 WHERE ((NOT (CASE WHEN rt1.c1 COLLATE RTRIM THEN ((v0.c0)&(x'')) WHEN rt1.c1 COLLATE NOCASE THEN CAST(vt1.c0 AS BLOB) WHEN ((((rt1.c1)OR(v0.c0)))AND(v0.c0)) THEN ((rt1.c0) ISNULL) ELSE (NOT (vt1.c0)) END))) UNION ALL SELECT ALL * FROM vt1, v0, rt1 WHERE (((CASE WHEN rt1.c1 COLLATE RTRIM THEN ((v0.c0)&(x'')) WHEN rt1.c1 COLLATE NOCASE THEN CAST(vt1.c0 AS BLOB) WHEN ((((rt1.c1)OR(v0.c0)))AND(v0.c0)) THEN ((rt1.c0) ISNULL) ELSE (NOT (vt1.c0)) END) ISNULL));
SELECT * FROM vt1, v0, rt1;
SELECT DISTINCT vt0.c0, vt1.c0, v0.c0 FROM vt1, v0, vt0;
SELECT DISTINCT vt0.c0, vt1.c0, v0.c0 FROM vt1, v0, vt0 WHERE ((((((vt1.c0)AND(vt1.c0)))OR(v0.c0)) IN (((0.19692718509455243) NOT NULL), ((vt0.c0)OR(vt0.c0))))) UNION SELECT DISTINCT vt0.c0, vt1.c0, v0.c0 FROM vt1, v0, vt0 WHERE ((NOT ((((((vt1.c0)AND(vt1.c0)))OR(v0.c0)) IN (((0.19692718509455243) NOT NULL), ((vt0.c0)OR(vt0.c0))))))) UNION SELECT DISTINCT vt0.c0, vt1.c0, v0.c0 FROM vt1, v0, vt0 WHERE ((((((((vt1.c0)AND(vt1.c0)))OR(v0.c0)) IN (((0.19692718509455243) NOT NULL), ((vt0.c0)OR(vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0, vt1.c0, v0.c0 FROM vt1, v0, vt0;
SELECT vt1.c0, vt0.c0, v0.c0 FROM vt1, v0, vt0 GROUP BY vt1.c0, vt0.c0, v0.c0;
SELECT vt1.c0, vt0.c0, v0.c0 FROM vt1, v0, vt0 WHERE (CAST(TRIM(vt1.c0) AS TEXT)) GROUP BY vt1.c0, vt0.c0, v0.c0 UNION SELECT ALL vt1.c0, vt0.c0, v0.c0 FROM vt1, v0, vt0 WHERE ((NOT (CAST(TRIM(vt1.c0) AS TEXT)))) GROUP BY vt1.c0, vt0.c0, v0.c0 UNION SELECT vt1.c0, vt0.c0, v0.c0 FROM vt1, v0, vt0 WHERE (((CAST(TRIM(vt1.c0) AS TEXT)) ISNULL)) GROUP BY vt1.c0, vt0.c0, v0.c0;
SELECT vt1.c0, vt0.c0, v0.c0 FROM vt1, v0, vt0 GROUP BY vt1.c0, vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON (((vt0.c0)LIKE(vt0.c0)) IN ()) GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON (((vt0.c0)LIKE(vt0.c0)) IN ()) GROUP BY vt0.c0, v0.c0 HAVING ((((AVG(MAX(vt0.c0))) BETWEEN (MIN(vt0.c0)) AND (vt0.c0)))||(MAX(MAX(MAX(vt0.c0))))) UNION ALL SELECT vt0.c0, v0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON (((vt0.c0)LIKE(vt0.c0)) IN ()) GROUP BY vt0.c0, v0.c0 HAVING (NOT (((((AVG(MAX(vt0.c0))) BETWEEN (MIN(vt0.c0)) AND (vt0.c0)))||(MAX(MAX(MAX(vt0.c0))))))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON (((vt0.c0)LIKE(vt0.c0)) IN ()) GROUP BY vt0.c0, v0.c0 HAVING ((((((AVG(MAX(vt0.c0))) BETWEEN (MIN(vt0.c0)) AND (vt0.c0)))||(MAX(MAX(MAX(vt0.c0)))))) ISNULL);
SELECT rt1.c2, rt1.c0, rt1.c1 FROM vt1, rt1;
SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM vt1, rt1 WHERE ((((vt1.c0)) NOT BETWEEN ((CHANGES())) AND ((vt1.c0 COLLATE NOCASE)))) UNION ALL SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM vt1, rt1 WHERE ((NOT ((((vt1.c0)) NOT BETWEEN ((CHANGES())) AND ((vt1.c0 COLLATE NOCASE)))))) UNION ALL SELECT rt1.c2, rt1.c0, rt1.c1 FROM vt1, rt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((CHANGES())) AND ((vt1.c0 COLLATE NOCASE)))) ISNULL));
SELECT rt1.c2, rt1.c0, rt1.c1 FROM vt1, rt1;
SELECT DISTINCT rt1.c2 FROM rt1 NATURAL JOIN vt0;
SELECT DISTINCT rt1.c2 FROM rt1 NATURAL JOIN vt0 WHERE (((((rt1.c1)OR(rt1.c0)))/((((rt1.c1)) BETWEEN ((vt0.c0)) AND ((rt1.c0)))))) UNION SELECT DISTINCT rt1.c2 FROM rt1 NATURAL JOIN vt0 WHERE ((NOT (((((rt1.c1)OR(rt1.c0)))/((((rt1.c1)) BETWEEN ((vt0.c0)) AND ((rt1.c0)))))))) UNION SELECT DISTINCT rt1.c2 FROM rt1 NATURAL JOIN vt0 WHERE (((((((rt1.c1)OR(rt1.c0)))/((((rt1.c1)) BETWEEN ((vt0.c0)) AND ((rt1.c0)))))) ISNULL));
SELECT DISTINCT rt1.c2 FROM rt1 NATURAL JOIN vt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (HEX(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (HEX(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((HEX(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (~ ((NOT (TOTAL(MAX(v0.c0)))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((~ ((NOT (TOTAL(MAX(v0.c0)))))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((~ ((NOT (TOTAL(MAX(v0.c0))))))) ISNULL);
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE (((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))OR(((vt1.c0)+(vt1.c0)))))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) UNION ALL SELECT * FROM vt1 WHERE ((NOT (((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))OR(((vt1.c0)+(vt1.c0)))))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))))) UNION ALL SELECT ALL * FROM vt1 WHERE (((((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))OR(((vt1.c0)+(vt1.c0)))))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 END) BETWEEN (NULL) AND (((vt1.c0) IS TRUE)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((CASE WHEN vt1.c0 THEN vt1.c0 END) BETWEEN (NULL) AND (((vt1.c0) IS TRUE)))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((CASE WHEN vt1.c0 THEN vt1.c0 END) BETWEEN (NULL) AND (((vt1.c0) IS TRUE)))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 WHERE ((((((vt0.c0))=((vt0.c0)))) NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (json_valid(v0.c0)))) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM v0, vt0 WHERE ((NOT ((((((vt0.c0))=((vt0.c0)))) NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (json_valid(v0.c0)))))) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM v0, vt0 WHERE ((((((((vt0.c0))=((vt0.c0)))) NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (json_valid(v0.c0)))) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT rt1.c1, rt1.c2 FROM vt0 RIGHT OUTER JOIN rt1 ON (((rt1.c1) NOT BETWEEN (rt1.c1) AND (vt0.c0)) IN ()) GROUP BY rt1.c1, rt1.c2;
SELECT ALL rt1.c1, rt1.c2 FROM vt0 RIGHT OUTER JOIN rt1 ON (((rt1.c1) NOT BETWEEN (rt1.c1) AND (vt0.c0)) IN ()) GROUP BY rt1.c1, rt1.c2 HAVING AVG(GROUP_CONCAT(TOTAL(rt1.c0))) UNION ALL SELECT ALL rt1.c1, rt1.c2 FROM vt0 RIGHT OUTER JOIN rt1 ON (((rt1.c1) NOT BETWEEN (rt1.c1) AND (vt0.c0)) IN ()) GROUP BY rt1.c1, rt1.c2 HAVING (NOT (AVG(GROUP_CONCAT(TOTAL(rt1.c0))))) UNION ALL SELECT ALL rt1.c1, rt1.c2 FROM vt0 RIGHT OUTER JOIN rt1 ON (((rt1.c1) NOT BETWEEN (rt1.c1) AND (vt0.c0)) IN ()) GROUP BY rt1.c1, rt1.c2 HAVING ((AVG(GROUP_CONCAT(TOTAL(rt1.c0)))) ISNULL);
SELECT ALL vt0.c0, rt1.c2, rt1.c0, vt1.c0, v0.c0, rt1.c1 FROM vt1, v0, rt1, vt0;
SELECT vt0.c0, rt1.c2, rt1.c0, vt1.c0, v0.c0, rt1.c1 FROM vt1, v0, rt1, vt0 WHERE ((((((rt1.c1, v0.c0, vt0.c0)) BETWEEN ((v0.c0, rt1.c1, rt1.c1)) AND ((rt1.c2, v0.c0, rt1.c1))))||(((((vt0.c0)AND(rt1.c0)))AND(vt1.c0))))) UNION ALL SELECT ALL vt0.c0, rt1.c2, rt1.c0, vt1.c0, v0.c0, rt1.c1 FROM vt1, v0, rt1, vt0 NOT INDEXED WHERE ((NOT ((((((rt1.c1, v0.c0, vt0.c0)) BETWEEN ((v0.c0, rt1.c1, rt1.c1)) AND ((rt1.c2, v0.c0, rt1.c1))))||(((((vt0.c0)AND(rt1.c0)))AND(vt1.c0))))))) UNION ALL SELECT ALL vt0.c0, rt1.c2, rt1.c0, vt1.c0, v0.c0, rt1.c1 FROM vt1, v0, rt1, vt0 WHERE ((((((((rt1.c1, v0.c0, vt0.c0)) BETWEEN ((v0.c0, rt1.c1, rt1.c1)) AND ((rt1.c2, v0.c0, rt1.c1))))||(((((vt0.c0)AND(rt1.c0)))AND(vt1.c0))))) ISNULL));
SELECT ALL vt0.c0, rt1.c2, rt1.c0, vt1.c0, v0.c0, rt1.c1 FROM vt1, v0, rt1, vt0;
SELECT DISTINCT * FROM vt0, rt1, vt1;
SELECT DISTINCT * FROM vt0, rt1, vt1 WHERE ((NOT (rt1.c1))) UNION SELECT DISTINCT * FROM vt0, rt1, vt1 WHERE ((NOT ((NOT (rt1.c1))))) UNION SELECT DISTINCT * FROM vt0, rt1, vt1 WHERE ((((NOT (rt1.c1))) ISNULL));
SELECT DISTINCT * FROM vt0, rt1, vt1;
SELECT v0.c0, vt1.c0, vt0.c0 FROM v0 RIGHT OUTER JOIN vt1 ON (~ (((vt1.c0)<=(vt0.c0)))) LEFT OUTER JOIN vt0 ON CAST(CASE v0.c0  WHEN vt0.c0 THEN vt1.c0 END AS NUMERIC) GROUP BY v0.c0, vt1.c0, vt0.c0;
SELECT v0.c0, rt1.c1, vt1.c0, rt1.c0, rt1.c2 FROM v0, rt1, vt1, vt0 GROUP BY v0.c0, rt1.c1, vt1.c0, rt1.c0, rt1.c2;
SELECT v0.c0, rt1.c1, vt1.c0, rt1.c0, rt1.c2 FROM v0, rt1, vt1, vt0 GROUP BY v0.c0, rt1.c1, vt1.c0, rt1.c0, rt1.c2 HAVING rt1.c2 UNION ALL SELECT v0.c0, rt1.c1, vt1.c0, rt1.c0, rt1.c2 FROM v0, rt1, vt1, vt0 GROUP BY v0.c0, rt1.c1, vt1.c0, rt1.c0, rt1.c2 HAVING (NOT (rt1.c2)) UNION ALL SELECT ALL v0.c0, rt1.c1, vt1.c0, rt1.c0, rt1.c2 FROM v0, rt1, vt1, vt0 GROUP BY v0.c0, rt1.c1, vt1.c0, rt1.c0, rt1.c2 HAVING ((rt1.c2) ISNULL);
SELECT v0.c0, rt1.c1, vt1.c0, rt1.c0, rt1.c2 FROM v0, rt1, vt1, vt0 GROUP BY v0.c0, rt1.c1, vt1.c0, rt1.c0, rt1.c2;
SELECT v0.c0, rt1.c1, vt1.c0, rt1.c0, rt1.c2 FROM v0, rt1, vt1, vt0 GROUP BY v0.c0, rt1.c1, vt1.c0, rt1.c0, rt1.c2 HAVING rt1.c2 UNION ALL SELECT v0.c0, rt1.c1, vt1.c0, rt1.c0, rt1.c2 FROM v0, rt1, vt1, vt0 GROUP BY v0.c0, rt1.c1, vt1.c0, rt1.c0, rt1.c2 HAVING (NOT (rt1.c2)) UNION ALL SELECT ALL v0.c0, rt1.c1, vt1.c0, rt1.c0, rt1.c2 FROM v0, rt1, vt1, vt0 GROUP BY v0.c0, rt1.c1, vt1.c0, rt1.c0, rt1.c2 HAVING ((rt1.c2) ISNULL);
SELECT v0.c0, rt1.c1, vt1.c0, rt1.c0, rt1.c2 FROM v0, rt1, vt1, vt0 GROUP BY v0.c0, rt1.c1, vt1.c0, rt1.c0, rt1.c2;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((CAST(vt0.c0 AS INTEGER) IN ())) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((CAST(vt0.c0 AS INTEGER) IN ())))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((CAST(vt0.c0 AS INTEGER) IN ())) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0, vt1;
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (IFNULL(DISTINCT ((vt0.c0)AND(vt0.c0)), (vt0.c0 IN (vt0.c0)))) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((NOT (IFNULL(DISTINCT ((vt0.c0)AND(vt0.c0)), (vt0.c0 IN (vt0.c0)))))) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((IFNULL(DISTINCT ((vt0.c0)AND(vt0.c0)), (vt0.c0 IN (vt0.c0)))) ISNULL));
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0, vt1;
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 NOT INDEXED, vt0 WHERE ((CAST(vt1.c0 AS INTEGER) IN ())) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1, vt0 WHERE ((NOT ((CAST(vt1.c0 AS INTEGER) IN ())))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1, vt0 WHERE ((((CAST(vt1.c0 AS INTEGER) IN ())) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT ALL v0.c0, rt1.c2, rt1.c0 FROM v0, rt1 FULL OUTER JOIN vt1 ON ((rt1.c1) NOT BETWEEN (((vt0.c0)IS(rt1.c2))) AND (((vt0.c0)OR(rt1.c1)))) RIGHT OUTER JOIN vt0 ON CASE '-1995074439'  WHEN json_valid(vt0.c0) THEN ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(v0.c0)))OR(vt1.c0)) END GROUP BY v0.c0, rt1.c2, rt1.c0;
SELECT ALL rt1.c1, v0.c0, rt1.c0, rt1.c2 FROM v0, rt1;
SELECT rt1.c1, v0.c0, rt1.c0, rt1.c2 FROM v0, rt1 WHERE (((rt1.c0)>>(v0.c0)) COLLATE BINARY) UNION ALL SELECT rt1.c1, v0.c0, rt1.c0, rt1.c2 FROM v0, rt1 WHERE ((NOT (((rt1.c0)>>(v0.c0)) COLLATE BINARY))) UNION ALL SELECT rt1.c1, v0.c0, rt1.c0, rt1.c2 FROM v0, rt1 WHERE (((((rt1.c0)>>(v0.c0)) COLLATE BINARY) ISNULL));
SELECT ALL rt1.c1, v0.c0, rt1.c0, rt1.c2 FROM v0, rt1;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)OR(''))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0 COLLATE NOCASE)OR(''))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((vt0.c0 COLLATE NOCASE)OR(''))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM vt0, vt1, v0, rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1;
SELECT rt1.c2, rt1.c0, rt1.c1 FROM vt0, vt1, v0, rt1 WHERE ((x'a8fa' IN ((((rt1.c1, vt0.c0, vt1.c0))<(('946614646', '', 71024929)))))) GROUP BY rt1.c2, rt1.c0, rt1.c1 UNION SELECT rt1.c2, rt1.c0, rt1.c1 FROM vt0, vt1, v0, rt1 WHERE ((NOT ((x'a8fa' IN ((((rt1.c1, vt0.c0, vt1.c0))<(('946614646', '', 71024929)))))))) GROUP BY rt1.c2, rt1.c0, rt1.c1 UNION SELECT rt1.c2, rt1.c0, rt1.c1 FROM vt0, vt1, v0, rt1 WHERE ((((x'a8fa' IN ((((rt1.c1, vt0.c0, vt1.c0))<(('946614646', '', 71024929)))))) ISNULL)) GROUP BY rt1.c2, rt1.c0, rt1.c1;
SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM vt0, vt1, v0, rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1;
SELECT rt1.c1, rt1.c2, vt0.c0, rt1.c0 FROM rt1 INNER JOIN vt0 ON (((((rt1.c2, vt0.c0, rt1.c2)) BETWEEN ((vt0.c0, x'0e42', rt1.c2)) AND ((vt0.c0, rt1.c2, vt0.c0)))) NOTNULL) GROUP BY rt1.c1, rt1.c2, vt0.c0, rt1.c0;
SELECT rt1.c1, rt1.c2, vt0.c0, rt1.c0 FROM rt1 INNER JOIN vt0 ON (((((rt1.c2, vt0.c0, rt1.c2)) BETWEEN ((vt0.c0, x'0e42', rt1.c2)) AND ((vt0.c0, rt1.c2, vt0.c0)))) NOTNULL) GROUP BY rt1.c1, rt1.c2, vt0.c0, rt1.c0 HAVING MAX(((vt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2))) UNION ALL SELECT rt1.c1, rt1.c2, vt0.c0, rt1.c0 FROM rt1 INNER JOIN vt0 ON (((((rt1.c2, vt0.c0, rt1.c2)) BETWEEN ((vt0.c0, x'0e42', rt1.c2)) AND ((vt0.c0, rt1.c2, vt0.c0)))) NOTNULL) GROUP BY rt1.c1, rt1.c2, vt0.c0, rt1.c0 HAVING (NOT (MAX(((vt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2))))) UNION ALL SELECT ALL rt1.c1, rt1.c2, vt0.c0, rt1.c0 FROM rt1 INNER JOIN vt0 ON (((((rt1.c2, vt0.c0, rt1.c2)) BETWEEN ((vt0.c0, x'0e42', rt1.c2)) AND ((vt0.c0, rt1.c2, vt0.c0)))) NOTNULL) GROUP BY rt1.c1, rt1.c2, vt0.c0, rt1.c0 HAVING ((MAX(((vt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)))) ISNULL);
SELECT rt1.c1, rt1.c2, vt0.c0, rt1.c0 FROM rt1 INNER JOIN vt0 ON (((((rt1.c2, vt0.c0, rt1.c2)) BETWEEN ((vt0.c0, x'0e42', rt1.c2)) AND ((vt0.c0, rt1.c2, vt0.c0)))) NOTNULL) GROUP BY rt1.c1, rt1.c2, vt0.c0, rt1.c0;
SELECT rt1.c1, rt1.c2, vt0.c0, rt1.c0 FROM rt1 INNER JOIN vt0 ON (((((rt1.c2, vt0.c0, rt1.c2)) BETWEEN ((vt0.c0, x'0e42', rt1.c2)) AND ((vt0.c0, rt1.c2, vt0.c0)))) NOTNULL) GROUP BY rt1.c1, rt1.c2, vt0.c0, rt1.c0 HAVING MAX(((vt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2))) UNION ALL SELECT rt1.c1, rt1.c2, vt0.c0, rt1.c0 FROM rt1 INNER JOIN vt0 ON (((((rt1.c2, vt0.c0, rt1.c2)) BETWEEN ((vt0.c0, x'0e42', rt1.c2)) AND ((vt0.c0, rt1.c2, vt0.c0)))) NOTNULL) GROUP BY rt1.c1, rt1.c2, vt0.c0, rt1.c0 HAVING (NOT (MAX(((vt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2))))) UNION ALL SELECT ALL rt1.c1, rt1.c2, vt0.c0, rt1.c0 FROM rt1 INNER JOIN vt0 ON (((((rt1.c2, vt0.c0, rt1.c2)) BETWEEN ((vt0.c0, x'0e42', rt1.c2)) AND ((vt0.c0, rt1.c2, vt0.c0)))) NOTNULL) GROUP BY rt1.c1, rt1.c2, vt0.c0, rt1.c0 HAVING ((MAX(((vt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)))) ISNULL);
SELECT rt1.c1, rt1.c2, vt0.c0, rt1.c0 FROM rt1 INNER JOIN vt0 ON (((((rt1.c2, vt0.c0, rt1.c2)) BETWEEN ((vt0.c0, x'0e42', rt1.c2)) AND ((vt0.c0, rt1.c2, vt0.c0)))) NOTNULL) GROUP BY rt1.c1, rt1.c2, vt0.c0, rt1.c0;
SELECT ALL rt1.c0, rt1.c1 FROM rt1;
SELECT ALL rt1.c0, rt1.c1 FROM rt1 WHERE (((((rt1.c1)=(NULL))) ISNULL)) UNION ALL SELECT rt1.c0, rt1.c1 FROM rt1 WHERE ((NOT (((((rt1.c1)=(NULL))) ISNULL)))) UNION ALL SELECT rt1.c0, rt1.c1 FROM rt1 WHERE (((((((rt1.c1)=(NULL))) ISNULL)) ISNULL));
SELECT ALL rt1.c0, rt1.c1 FROM rt1;
SELECT DISTINCT * FROM rt1, v0, vt0, vt1;
SELECT DISTINCT * FROM rt1, v0, vt0, vt1 WHERE (((CAST(rt1.c2 AS TEXT)) IS FALSE)) UNION SELECT DISTINCT * FROM rt1, v0, vt0, vt1 WHERE ((NOT (((CAST(rt1.c2 AS TEXT)) IS FALSE)))) UNION SELECT DISTINCT * FROM rt1, v0, vt0, vt1 WHERE (((((CAST(rt1.c2 AS TEXT)) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM rt1, v0, vt0, vt1;
SELECT v0.c0, rt1.c0, rt1.c2, vt0.c0, vt1.c0 FROM vt0, rt1, vt1, v0 NOT INDEXED GROUP BY v0.c0, rt1.c0, rt1.c2, vt0.c0, vt1.c0;
SELECT v0.c0, rt1.c0, rt1.c2, vt0.c0, vt1.c0 FROM vt0, rt1, vt1, v0 NOT INDEXED WHERE (vt0.c0) GROUP BY v0.c0, rt1.c0, rt1.c2, vt0.c0, vt1.c0 UNION SELECT v0.c0, rt1.c0, rt1.c2, vt0.c0, vt1.c0 FROM vt0, rt1, vt1, v0 WHERE ((NOT (vt0.c0))) GROUP BY v0.c0, rt1.c0, rt1.c2, vt0.c0, vt1.c0 UNION SELECT v0.c0, rt1.c0, rt1.c2, vt0.c0, vt1.c0 FROM vt0, rt1, vt1, v0 WHERE (((vt0.c0) ISNULL)) GROUP BY v0.c0, rt1.c0, rt1.c2, vt0.c0, vt1.c0;
SELECT v0.c0, rt1.c0, rt1.c2, vt0.c0, vt1.c0 FROM vt0, rt1, vt1, v0 NOT INDEXED GROUP BY v0.c0, rt1.c0, rt1.c2, vt0.c0, vt1.c0;
SELECT ALL v0.c0, vt0.c0, rt1.c0 FROM vt0, rt1, v0 GROUP BY v0.c0, vt0.c0, rt1.c0;
SELECT v0.c0, vt0.c0, rt1.c0 FROM vt0, rt1, v0 GROUP BY v0.c0, vt0.c0, rt1.c0 HAVING TOTAL((~ (SUM(TOTAL(v0.c0))))) UNION ALL SELECT v0.c0, vt0.c0, rt1.c0 FROM vt0, rt1, v0 GROUP BY v0.c0, vt0.c0, rt1.c0 HAVING (NOT (TOTAL((~ (SUM(TOTAL(v0.c0))))))) UNION ALL SELECT v0.c0, vt0.c0, rt1.c0 FROM vt0, rt1, v0 GROUP BY v0.c0, vt0.c0, rt1.c0 HAVING ((TOTAL((~ (SUM(TOTAL(v0.c0)))))) ISNULL);
SELECT ALL vt1.c0, rt1.c2, rt1.c0, rt1.c1 FROM vt1 RIGHT OUTER JOIN rt1 ON INSTR((((rt1.c0, x'7a91', rt1.c2)) NOT BETWEEN ((rt1.c2, rt1.c0, rt1.c1)) AND ((rt1.c1, NULL, rt1.c1))), (- (rt1.c1)));
SELECT vt1.c0, rt1.c2, rt1.c0, rt1.c1 FROM vt1 RIGHT OUTER JOIN rt1 ON INSTR((((rt1.c0, x'7a91', rt1.c2)) NOT BETWEEN ((rt1.c2, rt1.c0, rt1.c1)) AND ((rt1.c1, NULL, rt1.c1))), (- (rt1.c1))) WHERE (json_array((((rt1.c2, rt1.c2, vt1.c0))!=((NULL, vt1.c0, rt1.c2))), (rt1.c1 IN (rt1.c0)), CASE WHEN rt1.c1 THEN rt1.c0 END, ((rt1.c1) NOTNULL))) UNION ALL SELECT vt1.c0, rt1.c2, rt1.c0, rt1.c1 FROM vt1 RIGHT OUTER JOIN rt1 ON INSTR((((rt1.c0, x'7a91', rt1.c2)) NOT BETWEEN ((rt1.c2, rt1.c0, rt1.c1)) AND ((rt1.c1, NULL, rt1.c1))), (- (rt1.c1))) WHERE ((NOT (json_array((((rt1.c2, rt1.c2, vt1.c0))!=((NULL, vt1.c0, rt1.c2))), (rt1.c1 IN (rt1.c0)), CASE WHEN rt1.c1 THEN rt1.c0 END, ((rt1.c1) NOTNULL))))) UNION ALL SELECT vt1.c0, rt1.c2, rt1.c0, rt1.c1 FROM vt1 RIGHT OUTER JOIN rt1 ON INSTR((((rt1.c0, x'7a91', rt1.c2)) NOT BETWEEN ((rt1.c2, rt1.c0, rt1.c1)) AND ((rt1.c1, NULL, rt1.c1))), (- (rt1.c1))) WHERE (((json_array((((rt1.c2, rt1.c2, vt1.c0))!=((NULL, vt1.c0, rt1.c2))), (rt1.c1 IN (rt1.c0)), CASE WHEN rt1.c1 THEN rt1.c0 END, ((rt1.c1) NOTNULL))) ISNULL));
SELECT ALL vt1.c0, rt1.c2, rt1.c0, rt1.c1 FROM vt1 RIGHT OUTER JOIN rt1 ON INSTR((((rt1.c0, x'7a91', rt1.c2)) NOT BETWEEN ((rt1.c2, rt1.c0, rt1.c1)) AND ((rt1.c1, NULL, rt1.c1))), (- (rt1.c1)));
SELECT DISTINCT rt1.c2, rt1.c0, rt1.c1, vt1.c0, v0.c0 FROM v0, rt1, vt1;
SELECT DISTINCT rt1.c2, rt1.c0, rt1.c1, vt1.c0, v0.c0 FROM v0, rt1 NOT INDEXED, vt1 WHERE (((vt1.c0) BETWEEN ((NOT (rt1.c0))) AND (TRIM(rt1.c0, rt1.c1)))) UNION SELECT DISTINCT rt1.c2, rt1.c0, rt1.c1, vt1.c0, v0.c0 FROM v0, rt1, vt1 WHERE ((NOT (((vt1.c0) BETWEEN ((NOT (rt1.c0))) AND (TRIM(rt1.c0, rt1.c1)))))) UNION SELECT DISTINCT rt1.c2, rt1.c0, rt1.c1, vt1.c0, v0.c0 FROM v0, rt1, vt1 WHERE (((((vt1.c0) BETWEEN ((NOT (rt1.c0))) AND (TRIM(rt1.c0, rt1.c1)))) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c0, rt1.c1, vt1.c0, v0.c0 FROM v0, rt1, vt1;
SELECT ALL vt1.c0, vt0.c0 FROM v0, vt1, vt0, rt1 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM v0, vt1, vt0, rt1 WHERE (LAST_INSERT_ROWID()) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM v0, vt1, vt0 NOT INDEXED, rt1 WHERE ((NOT (LAST_INSERT_ROWID()))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM v0, vt1, vt0, rt1 WHERE (((LAST_INSERT_ROWID()) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM v0, vt1, vt0, rt1 GROUP BY vt1.c0, vt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING SUM(AVG(MIN(TOTAL(MIN(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (SUM(AVG(MIN(TOTAL(MIN(v0.c0))))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((SUM(AVG(MIN(TOTAL(MIN(v0.c0)))))) ISNULL);
SELECT vt1.c0, rt1.c0, vt0.c0, rt1.c2, v0.c0 FROM v0, vt0, rt1 RIGHT OUTER JOIN vt1 ON ((((v0.c0)!=(-1.7057817E8)))+(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT vt1.c0, rt1.c0, vt0.c0, rt1.c2, v0.c0 FROM v0, vt0, rt1 RIGHT OUTER JOIN vt1 ON ((((v0.c0)!=(-1.7057817E8)))+(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) WHERE (((((((((((((((((vt0.c0)AND(rt1.c0)))OR('1X< J&')))AND(v0.c0)))OR(CAST(vt1.c0 AS NUMERIC))))OR(((v0.c0)OR(rt1.c1)))))AND(CASE WHEN rt1.c1 THEN vt1.c0 WHEN v0.c0 THEN vt0.c0 WHEN '' THEN vt1.c0 END)))AND(LIKELY(rt1.c1))))AND(((rt1.c2) IS TRUE)))) UNION ALL SELECT ALL vt1.c0, rt1.c0, vt0.c0, rt1.c2, v0.c0 FROM v0, vt0, rt1 RIGHT OUTER JOIN vt1 ON ((((v0.c0)<>(-1.7057817E8)))+(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) WHERE ((NOT (((((((((((((((((vt0.c0)AND(rt1.c0)))OR('1X< J&')))AND(v0.c0)))OR(CAST(vt1.c0 AS NUMERIC))))OR(((v0.c0)OR(rt1.c1)))))AND(CASE WHEN rt1.c1 THEN vt1.c0 WHEN v0.c0 THEN vt0.c0 WHEN '' THEN vt1.c0 END)))AND(LIKELY(rt1.c1))))AND(((rt1.c2) IS TRUE)))))) UNION ALL SELECT ALL vt1.c0, rt1.c0, vt0.c0, rt1.c2, v0.c0 FROM v0, vt0, rt1 RIGHT OUTER JOIN vt1 ON ((((v0.c0)!=(-1.7057817E8)))+(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) WHERE (((((((((((((((((((vt0.c0)AND(rt1.c0)))OR('1X< J&')))AND(v0.c0)))OR(CAST(vt1.c0 AS NUMERIC))))OR(((v0.c0)OR(rt1.c1)))))AND(CASE WHEN rt1.c1 THEN vt1.c0 WHEN v0.c0 THEN vt0.c0 WHEN '' THEN vt1.c0 END)))AND(LIKELY(rt1.c1))))AND(((rt1.c2) IS TRUE)))) ISNULL));
SELECT vt1.c0, rt1.c0, vt0.c0, rt1.c2, v0.c0 FROM v0, vt0, rt1 RIGHT OUTER JOIN vt1 ON ((((v0.c0)!=(-1.7057817E8)))+(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (CAST(CASE WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c0 END AS TEXT)) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (CAST(CASE WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c0 END AS TEXT)))) UNION SELECT DISTINCT * FROM rt1 WHERE (((CAST(CASE WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c0 END AS TEXT)) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0) ISNULL)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0) ISNULL)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING COUNT(CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 END) UNION ALL SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING (NOT (COUNT(CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 END))) UNION ALL SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING ((COUNT(CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 END)) ISNULL);
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING COUNT(CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 END) UNION ALL SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING (NOT (COUNT(CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 END))) UNION ALL SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING ((COUNT(CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 END)) ISNULL);
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT ALL * FROM v0, vt1, rt1, vt0;
SELECT ALL * FROM v0, vt1, rt1, vt0 WHERE (((json_array(0.24785445895361924, vt1.c0, v0.c0, vt1.c0))||((+ (vt1.c0))))) UNION ALL SELECT * FROM v0, vt1, rt1, vt0 WHERE ((NOT (((json_array(0.24785445895361924, vt1.c0, v0.c0, vt1.c0))||((+ (vt1.c0))))))) UNION ALL SELECT ALL * FROM v0, vt1, rt1, vt0 WHERE (((((json_array(0.24785445895361924, vt1.c0, v0.c0, vt1.c0))||((+ (vt1.c0))))) ISNULL));
SELECT ALL * FROM v0, vt1, rt1, vt0;
SELECT DISTINCT rt1.c2, rt1.c0, rt1.c1 FROM rt1;
SELECT DISTINCT rt1.c2, rt1.c0, rt1.c1 FROM rt1 WHERE (CASE WHEN CAST(rt1.c0 AS REAL) THEN CAST(rt1.c1 AS REAL) END) UNION SELECT DISTINCT rt1.c2, rt1.c0, rt1.c1 FROM rt1 WHERE ((NOT (CASE WHEN CAST(rt1.c0 AS REAL) THEN CAST(rt1.c1 AS REAL) END))) UNION SELECT DISTINCT rt1.c2, rt1.c0, rt1.c1 FROM rt1 WHERE (((CASE WHEN CAST(rt1.c0 AS REAL) THEN CAST(rt1.c1 AS REAL) END) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c0, rt1.c1 FROM rt1;
SELECT vt1.c0 FROM vt0 INNER JOIN v0 ON CASE WHEN '1e500' THEN (vt0.c0 IN ()) WHEN x'ae76' THEN ((vt0.c0)>(vt1.c0)) WHEN v0.c0 COLLATE BINARY THEN ((vt0.c0) NOT NULL) ELSE ((591531550)==(v0.c0)) END INNER JOIN vt1 ON ((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN '' END) BETWEEN ((((vt1.c0))<=((v0.c0)))) AND (0.16654810850441404)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0 INNER JOIN v0 ON CASE WHEN '1e500' THEN (vt0.c0 IN ()) WHEN x'ae76' THEN ((vt0.c0)>(vt1.c0)) WHEN v0.c0 COLLATE BINARY THEN ((vt0.c0) NOT NULL) ELSE ((591531550)==(v0.c0)) END INNER JOIN vt1 ON ((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN '' END) BETWEEN ((((vt1.c0))<=((v0.c0)))) AND (0.16654810850441404)) WHERE ((((vt0.c0)) BETWEEN ((((((((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)))AND(vt0.c0)))) AND ((vt0.c0)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt0 INNER JOIN v0 ON CASE WHEN '1e500' THEN (vt0.c0 IN ()) WHEN x'ae76' THEN ((vt0.c0)>(vt1.c0)) WHEN v0.c0 COLLATE BINARY THEN ((vt0.c0) NOT NULL) ELSE ((591531550)=(v0.c0)) END INNER JOIN vt1 ON ((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN '' END) BETWEEN ((((vt1.c0))<=((v0.c0)))) AND (0.16654810850441404)) WHERE ((NOT ((((vt0.c0)) BETWEEN ((((((((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)))AND(vt0.c0)))) AND ((vt0.c0)))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt0 INNER JOIN v0 ON CASE WHEN '1e500' THEN (vt0.c0 IN ()) WHEN x'ae76' THEN ((vt0.c0)>(vt1.c0)) WHEN v0.c0 COLLATE BINARY THEN ((vt0.c0) NOT NULL) ELSE ((591531550)==(v0.c0)) END INNER JOIN vt1 ON ((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN '' END) BETWEEN ((((vt1.c0))<=((v0.c0)))) AND (0.16654810850441404)) WHERE ((((((vt0.c0)) BETWEEN ((((((((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)))AND(vt0.c0)))) AND ((vt0.c0)))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0 INNER JOIN v0 ON CASE WHEN '1e500' THEN (vt0.c0 IN ()) WHEN x'ae76' THEN ((vt0.c0)>(vt1.c0)) WHEN v0.c0 COLLATE BINARY THEN ((vt0.c0) NOT NULL) ELSE ((591531550)==(v0.c0)) END INNER JOIN vt1 ON ((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN '' END) BETWEEN ((((vt1.c0))<=((v0.c0)))) AND (0.16654810850441404)) GROUP BY vt1.c0;
SELECT rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0;
SELECT rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0 HAVING (((GROUP_CONCAT(GROUP_CONCAT(AVG(rt1.c0))), '-729392416', (~ (rt1.c0))))>=((HEX(GROUP_CONCAT(rt1.c0)), COUNT(*), (((rt1.c1))<=((rt1.c1)))))) UNION ALL SELECT ALL rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0 HAVING (NOT ((((GROUP_CONCAT(GROUP_CONCAT(AVG(rt1.c0))), '-729392416', (~ (rt1.c0))))>=((HEX(GROUP_CONCAT(rt1.c0)), COUNT(*), (((rt1.c1))<=((rt1.c1)))))))) UNION ALL SELECT ALL rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0 HAVING (((((GROUP_CONCAT(GROUP_CONCAT(AVG(rt1.c0))), '-729392416', (~ (rt1.c0))))>=((HEX(GROUP_CONCAT(rt1.c0)), COUNT(*), (((rt1.c1))<=((rt1.c1))))))) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (((((((((((vt0.c0)OR(vt0.c0)))OR('-649085877')))AND(vt0.c0)))AND(vt0.c0)))*(CASE 0.8786190717647983  WHEN NULL THEN vt0.c0 ELSE vt0.c0 END))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((((((((((vt0.c0)OR(vt0.c0)))OR('-649085877')))AND(vt0.c0)))AND(vt0.c0)))*(CASE 0.8786190717647983  WHEN NULL THEN vt0.c0 ELSE vt0.c0 END))))) UNION ALL SELECT * FROM vt0 WHERE (((((((((((((vt0.c0)OR(vt0.c0)))OR('-649085877')))AND(vt0.c0)))AND(vt0.c0)))*(CASE 0.8786190717647983  WHEN NULL THEN vt0.c0 ELSE vt0.c0 END))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c0, rt1.c0 FROM vt0, v0, vt1, rt1;
SELECT DISTINCT vt0.c0, rt1.c0 FROM vt0, v0, vt1, rt1 WHERE (((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0))) NOT BETWEEN (vt0.c0) AND (CAST(rt1.c2 AS REAL)))) UNION SELECT DISTINCT vt0.c0, rt1.c0 FROM vt0, v0, vt1, rt1 WHERE ((NOT (((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0))) NOT BETWEEN (vt0.c0) AND (CAST(rt1.c2 AS REAL)))))) UNION SELECT DISTINCT vt0.c0, rt1.c0 FROM vt0, v0, vt1, rt1 WHERE (((((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0))) NOT BETWEEN (vt0.c0) AND (CAST(rt1.c2 AS REAL)))) ISNULL));
SELECT DISTINCT vt0.c0, rt1.c0 FROM vt0, v0, vt1, rt1;
SELECT ALL vt1.c0 FROM vt1, v0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, v0 WHERE ((CAST(vt1.c0 AS REAL) IN ())) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1, v0 WHERE ((NOT ((CAST(vt1.c0 AS REAL) IN ())))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, v0 WHERE ((((CAST(vt1.c0 AS REAL) IN ())) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, v0 GROUP BY vt1.c0;
SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING GROUP_CONCAT((GROUP_CONCAT(GROUP_CONCAT(rt1.c2)) IN ())) UNION ALL SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING (NOT (GROUP_CONCAT((GROUP_CONCAT(GROUP_CONCAT(rt1.c2)) IN ())))) UNION ALL SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING ((GROUP_CONCAT((GROUP_CONCAT(GROUP_CONCAT(rt1.c2)) IN ()))) ISNULL);
SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING GROUP_CONCAT((GROUP_CONCAT(GROUP_CONCAT(rt1.c2)) IN ())) UNION ALL SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING (NOT (GROUP_CONCAT((GROUP_CONCAT(GROUP_CONCAT(rt1.c2)) IN ())))) UNION ALL SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING ((GROUP_CONCAT((GROUP_CONCAT(GROUP_CONCAT(rt1.c2)) IN ()))) ISNULL);
SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT * FROM vt0, vt1, v0, rt1;
SELECT ALL * FROM vt0, vt1, v0, rt1 WHERE (json_remove((((vt0.c0))>=((vt1.c0))), rt1.c1)) UNION ALL SELECT * FROM vt0, vt1, v0, rt1 WHERE ((NOT (json_remove((((vt0.c0))>=((vt1.c0))), rt1.c1)))) UNION ALL SELECT * FROM vt0, vt1, v0, rt1 WHERE (((json_remove((((vt0.c0))>=((vt1.c0))), rt1.c1)) ISNULL));
SELECT * FROM vt0, vt1, v0, rt1;
SELECT DISTINCT * FROM rt1 INNER JOIN vt0 ON ((rt1.c0 IN ()) IN ());
SELECT DISTINCT * FROM rt1 INNER JOIN vt0 ON ((rt1.c0 IN ()) IN ()) WHERE (rt1.c0) UNION SELECT DISTINCT * FROM rt1 INNER JOIN vt0 ON ((rt1.c0 IN ()) IN ()) WHERE ((NOT (rt1.c0))) UNION SELECT DISTINCT * FROM rt1 INNER JOIN vt0 ON ((rt1.c0 IN ()) IN ()) WHERE (((rt1.c0) ISNULL));
SELECT DISTINCT * FROM rt1 INNER JOIN vt0 ON ((rt1.c0 IN ()) IN ());
SELECT ALL rt1.c1, v0.c0, rt1.c0, vt0.c0, rt1.c2, vt1.c0 FROM v0 LEFT OUTER JOIN rt1 ON ((')8Q<Y+\U') NOTNULL) CROSS JOIN vt1 ON CAST(CAST(vt0.c0 AS NUMERIC) AS REAL) LEFT OUTER JOIN vt0 ON (((((rt1.c2))<>((vt1.c0))))&(vt1.c0 COLLATE NOCASE)) GROUP BY rt1.c1, v0.c0, rt1.c0, vt0.c0, rt1.c2, vt1.c0;
SELECT rt1.c1, v0.c0, rt1.c0, vt0.c0, rt1.c2, vt1.c0 FROM v0 LEFT OUTER JOIN rt1 ON ((')8Q<Y+\U') NOTNULL) CROSS JOIN vt1 ON CAST(CAST(vt0.c0 AS NUMERIC) AS REAL) LEFT OUTER JOIN vt0 ON (((((rt1.c2))<>((vt1.c0))))&(vt1.c0 COLLATE NOCASE)) WHERE ((((- (rt1.c0)))IS(((rt1.c1)==(v0.c0))))) GROUP BY rt1.c1, v0.c0, rt1.c0, vt0.c0, rt1.c2, vt1.c0 UNION SELECT rt1.c1, v0.c0, rt1.c0, vt0.c0, rt1.c2, vt1.c0 FROM v0 LEFT OUTER JOIN rt1 ON ((')8Q<Y+\U') NOTNULL) CROSS JOIN vt1 ON CAST(CAST(vt0.c0 AS NUMERIC) AS REAL) LEFT OUTER JOIN vt0 ON (((((rt1.c2))<>((vt1.c0))))&(vt1.c0 COLLATE NOCASE)) WHERE ((NOT ((((- (rt1.c0)))IS(((rt1.c1)=(v0.c0))))))) GROUP BY rt1.c1, v0.c0, rt1.c0, vt0.c0, rt1.c2, vt1.c0 UNION SELECT ALL rt1.c1, v0.c0, rt1.c0, vt0.c0, rt1.c2, vt1.c0 FROM v0 LEFT OUTER JOIN rt1 ON ((')8Q<Y+\U') NOTNULL) CROSS JOIN vt1 ON CAST(CAST(vt0.c0 AS NUMERIC) AS REAL) LEFT OUTER JOIN vt0 ON (((((rt1.c2))!=((vt1.c0))))&(vt1.c0 COLLATE NOCASE)) WHERE ((((((- (rt1.c0)))IS(((rt1.c1)=(v0.c0))))) ISNULL)) GROUP BY rt1.c1, v0.c0, rt1.c0, vt0.c0, rt1.c2, vt1.c0;
SELECT ALL rt1.c1, v0.c0, rt1.c0, vt0.c0, rt1.c2, vt1.c0 FROM v0 LEFT OUTER JOIN rt1 ON ((')8Q<Y+\U') NOTNULL) CROSS JOIN vt1 ON CAST(CAST(vt0.c0 AS NUMERIC) AS REAL) LEFT OUTER JOIN vt0 ON (((((rt1.c2))<>((vt1.c0))))&(vt1.c0 COLLATE NOCASE)) GROUP BY rt1.c1, v0.c0, rt1.c0, vt0.c0, rt1.c2, vt1.c0;
SELECT ALL vt0.c0, rt1.c1, vt1.c0, rt1.c0 FROM rt1 FULL OUTER JOIN vt1 ON ((rt1.c2) IS TRUE) LEFT OUTER JOIN vt0 ON CAST((rt1.c1 IN (rt1.c2)) AS BLOB) GROUP BY vt0.c0, rt1.c1, vt1.c0, rt1.c0;
SELECT ALL vt0.c0, rt1.c1, vt1.c0, rt1.c0 FROM rt1 FULL OUTER JOIN vt1 ON ((rt1.c2) IS TRUE) LEFT OUTER JOIN vt0 ON CAST((rt1.c1 IN (rt1.c2)) AS BLOB) GROUP BY vt0.c0, rt1.c1, vt1.c0, rt1.c0 HAVING CAST(((TOTAL(rt1.c0))+(MAX(MIN(vt1.c0)))) AS TEXT) UNION ALL SELECT vt0.c0, rt1.c1, vt1.c0, rt1.c0 FROM rt1 FULL OUTER JOIN vt1 ON ((rt1.c2) IS TRUE) LEFT OUTER JOIN vt0 ON CAST((rt1.c1 IN (rt1.c2)) AS BLOB) GROUP BY vt0.c0, rt1.c1, vt1.c0, rt1.c0 HAVING (NOT (CAST(((TOTAL(rt1.c0))+(MAX(MIN(vt1.c0)))) AS TEXT))) UNION ALL SELECT ALL vt0.c0, rt1.c1, vt1.c0, rt1.c0 FROM rt1 FULL OUTER JOIN vt1 ON ((rt1.c2) IS TRUE) LEFT OUTER JOIN vt0 ON CAST((rt1.c1 IN (rt1.c2)) AS BLOB) GROUP BY vt0.c0, rt1.c1, vt1.c0, rt1.c0 HAVING ((CAST(((TOTAL(rt1.c0))+(MAX(MIN(vt1.c0)))) AS TEXT)) ISNULL);
SELECT ALL vt0.c0, v0.c0, vt1.c0 FROM vt1, v0 INNER JOIN vt0 ON UNLIKELY(((x'') NOT BETWEEN (vt0.c0) AND (v0.c0))) INNER JOIN rt1 ON v0.c0;
SELECT ALL vt0.c0, v0.c0, vt1.c0 FROM vt1, v0 INNER JOIN vt0 ON UNLIKELY(((x'') NOT BETWEEN (vt0.c0) AND (v0.c0))) INNER JOIN rt1 ON v0.c0 WHERE (x'') UNION ALL SELECT vt0.c0, v0.c0, vt1.c0 FROM vt1, v0 INNER JOIN vt0 ON UNLIKELY(((x'') NOT BETWEEN (vt0.c0) AND (v0.c0))) INNER JOIN rt1 ON v0.c0 WHERE ((NOT (x''))) UNION ALL SELECT vt0.c0, v0.c0, vt1.c0 FROM vt1, v0 INNER JOIN vt0 ON UNLIKELY(((x'') NOT BETWEEN (vt0.c0) AND (v0.c0))) INNER JOIN rt1 ON v0.c0 WHERE (((x'') ISNULL));
SELECT ALL vt0.c0, v0.c0, vt1.c0 FROM vt1, v0 INNER JOIN vt0 ON UNLIKELY(((x'') NOT BETWEEN (vt0.c0) AND (v0.c0))) INNER JOIN rt1 ON v0.c0;
