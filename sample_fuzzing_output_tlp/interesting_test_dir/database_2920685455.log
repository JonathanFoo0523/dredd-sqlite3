-- Time: 2024/06/11 04:42:13
-- Database: database55
-- Database version: 3.40.0
-- seed value: 2920685455
PRAGMA cache_size = 50000; -- 1ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE TEMP TABLE IF NOT EXISTS t0 (c0 REAL , c1 REAL , c2 REAL UNIQUE ON CONFLICT IGNORE CHECK ( ((((((c2)=(c0)))OR(c0 COLLATE NOCASE)))OR(((c2) NOTNULL)))) NOT NULL PRIMARY KEY ASC ) WITHOUT ROWID; -- 0ms;
CREATE TEMPORARY TABLE IF NOT EXISTS t1 (c0 BLOB ); -- 0ms;
UPDATE t0 SET c2=x'', c2=NULL; -- 1ms;
ANALYZE; -- 16ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO t0(c0, c1) VALUES ('', 0.2292482380801979); -- 0ms;
INSERT OR IGNORE INTO t1 VALUES ('?嚧pbIR*/'), (''), (NULL); -- 0ms;
END; -- 0ms;
ANALYZE; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE t0 SET c0=0.17997206381483555; -- 0ms;
UPDATE t1 SET c0='218257063'; -- 0ms;
UPDATE t1 SET c0=NULL WHERE (((((((t1.c0)AND(t1.c0)))OR(t1.c0))))!=(((((t1.c0, t1.c0, t1.c0))<((t1.c0, t1.c0, t1.c0)))))); -- 0ms;
UPDATE OR ABORT t1 SET (c0, c0, c0)=(NULL, x'', '900553091') WHERE t1.c0; -- 0ms;
ALTER TABLE t1 RENAME COLUMN c0 TO c59; -- 1ms;
INSERT OR IGNORE INTO t1 VALUES (0x76d6f713); -- 0ms;
CREATE UNIQUE INDEX i11 ON t0(LTRIM('1993799443') COLLATE NOCASE,((((c0)OR(c2)))OR('0.2292482380801979')) COLLATE BINARY COLLATE BINARY,(((c0)) NOT BETWEEN ((LIKELY(c0))) AND ((x'ae4f'))) COLLATE BINARY) WHERE 'i'''; -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE OR IGNORE t0 SET (c1, c1)=('6hr(/%V', 1993799443); -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t1(c59) VALUES (x''); -- 0ms;
INSERT OR REPLACE INTO t0(c1) VALUES ((('218257063' COLLATE RTRIM) NOTNULL)); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL, 0.0028462346356282753, ''); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR ABORT t1 SET (c59)=('YtB띬'); -- 0ms;
INSERT OR REPLACE INTO t0 VALUES (-1031595077, 0X58a4b76c, x''); -- 0ms;
PRAGMA temp.ignore_check_constraints; -- 0ms;
DROP INDEX IF EXISTS "i11"; -- 0ms;
UPDATE OR IGNORE t1 SET c59=0.7467042743135571; -- 0ms;
UPDATE t0 SET (c2)=('J2&Fn') WHERE CASE (t0.c0 IN ())  WHEN (((x'3533'))<=((t0.c1))) THEN CAST(t0.c2 AS TEXT) WHEN ((((t0.c1)AND(t0.c0)))AND(t0.c0)) THEN PRINTF(t0.c2, t0.c1, t0.c1) WHEN (((t0.c1)) BETWEEN ((NULL)) AND ((t0.c1))) THEN CAST(t0.c2 AS INTEGER) END; -- 0ms;
INSERT OR IGNORE INTO t1 VALUES (NULL); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
VACUUM temp; -- 0ms;
UPDATE OR IGNORE t0 SET c0=NULL; -- 0ms;
INSERT OR ROLLBACK INTO t0(c0, c2) VALUES ('6hr(/%V', 0Xfffffffffe41fa28); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE t0 SET (c2, c0)=(0.35974613962491886, x''); -- 0ms;
INSERT OR ROLLBACK INTO t1 VALUES ('0.35974613962491886'), (0.17997206381483555), ('YtB띬'), (x''), (NULL); -- 0ms;
UPDATE t1 SET c59=1380767250, c59=x''; -- 0ms;
INSERT OR FAIL INTO t0(c1, c0) VALUES (NULL, x''); -- 1ms;
INSERT OR REPLACE INTO t0(c2, c1) VALUES ('nrn4', NULL), (NULL, 0.17997206381483555), (-29230552, 0.7467042743135571); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (0.06426374103921806, 0.9901216882516404, '1487189868'); -- 0ms;
UPDATE OR IGNORE t0 SET c0=x'd6c4' WHERE ((((((t0.c2) BETWEEN (t0.c0) AND (t0.c1)))AND(((t0.c2) ISNULL))))AND(CASE t0.c0  WHEN t0.c1 THEN t0.c1 ELSE t0.c2 END)); -- 0ms;
UPDATE t0 SET (c1, c1)=('863585222', 1993799443); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=('-1018408871'); -- 0ms;
UPDATE OR ROLLBACK t1 SET (c59, c59)=(x'', x''); -- 0ms;
UPDATE OR ROLLBACK t1 SET c59=0.48452392937469035 WHERE CASE (0.6993424089310001 IN ())  WHEN ((t1.c59)>=(t1.c59)) THEN ((t1.c59) NOT BETWEEN (t1.c59) AND (t1.c59)) ELSE ((t1.c59) IS TRUE) END; -- 0ms;
INSERT OR IGNORE INTO t1 VALUES (x'e392'); -- 0ms;
UPDATE OR IGNORE t0 SET c0=NULL WHERE ((CAST('1993799443' AS BLOB))-(((t0.c2) IS TRUE))); -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0); -- 11ms;
REINDEX RTRIM; -- 0ms;
UPDATE OR FAIL t0 SET c0=0.30589916070665923 WHERE CAST(((t0.c0) ISNULL) AS INTEGER); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 3); -- 0ms;
PRAGMA temp.cache_spill = true; -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES ('B側ח'), ('ytb띬'), ('}⊗h0eE'); -- 1ms;
REINDEX; -- 0ms;
VACUUM main; -- 1ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2); -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES (0X58a4b76c); -- 4ms;
INSERT OR IGNORE INTO rt0(c0) VALUES (981347828); -- 0ms;
REINDEX  vt0; -- 0ms;
UPDATE OR IGNORE t1 SET c59=x'ff12' WHERE ((((t1.c59) BETWEEN (9.00553091E8) AND (t1.c59))) NOT NULL); -- 0ms;
PRAGMA main.cell_size_check = false; -- 1ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (x'63cd'), ('1983736932'), (0.06426374103921806); -- 9ms;
PRAGMA wal_checkpoint(RESTART); -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
INSERT OR IGNORE INTO t1 VALUES (9.00553091E8); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 6); -- 0ms;
UPDATE vt0 SET (c0)=(218257063) WHERE CASE ((vt0.c0)>(vt0.c0))  WHEN ((vt0.c0)!=(vt0.c0)) THEN ((vt0.c0)OR(vt0.c0)) WHEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(NULL)) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN (~ (vt0.c0)) THEN (vt0.c0 IN (vt0.c0)) END; -- 17ms;
SELECT rtreecheck('rt0'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i83 ON t0((((c1, c2, c1)) NOT BETWEEN (((((c1)) BETWEEN ((c1)) AND ((c2))), ((((((((c2)AND(c0)))AND(c1)))OR(c2)))OR(c2)), ((c1)+(c1)))) AND ((((c0)||(c0)), CAST(c1 AS REAL), LIKE(c1, c2, 'e')))) DESC,((c2)>(c0 COLLATE NOCASE)) COLLATE NOCASE DESC,c1); -- 0ms;
CREATE INDEX i82 ON t0((~ (c0)) COLLATE RTRIM COLLATE NOCASE,((0.4864270371820878)IS NOT(((c1)AND(c1)))) COLLATE RTRIM,((((c0)OR(c0)))AND('Qzs6YG')) COLLATE NOCASE ASC) WHERE (NOT (c2 COLLATE NOCASE)); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=1560139410,7');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 6); -- 0ms;
UPDATE OR FAIL t0 SET c2=0.48180195732825803, c1=NULL, c2=NULL, c2=x'' WHERE (((1391289348))<=((CAST(t0.c1 AS REAL)))); -- 1ms;
UPDATE OR ABORT t1 SET (c59)=(''); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(NULL); -- 0ms;
DELETE FROM rt0 WHERE (((rt0.c0)) NOT BETWEEN (('')) AND ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (x''))))); -- 7ms;
INSERT OR IGNORE INTO t1 VALUES (x''), (-1627563475), ('nowL'); -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((+ (''))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((+ (''))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((+ (''))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM t0 NOT INDEXED CROSS JOIN t1 ON (((((rt0.c1 IN ()))OR(((rt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)))))OR((((rt0.c1, t0.c1, rt0.c0)) NOT BETWEEN ((t1.c59, t1.c59, t1.c59)) AND ((vt0.c0, t0.c0, t0.c0))))) RIGHT OUTER JOIN rt0 ON (((((rt0.c1, vt0.c0, vt0.c0))<((vt0.c0, rt0.c0, t0.c2)))) NOT BETWEEN (((rt0.c0) NOTNULL)) AND (((vt0.c0) NOTNULL))) LEFT OUTER JOIN vt0 ON ((vt0.c0)!=(rt0.c2)) COLLATE RTRIM;
SELECT ALL t0.c1, rt0.c1, t0.c2, rt0.c0, rt0.c2, vt0.c0, t1.c59, t0.c0 FROM t0, vt0, rt0, t1 INDEXED BY i82 GROUP BY t0.c1, rt0.c1, t0.c2, rt0.c0, rt0.c2, vt0.c0, t1.c59, t0.c0;
SELECT t0.c0, t0.c1, vt0.c0 FROM rt0, vt0, t0 GROUP BY t0.c0, t0.c1, vt0.c0;
SELECT t0.c0, t0.c1, vt0.c0 FROM rt0, vt0, t0 GROUP BY t0.c0, t0.c1, vt0.c0 HAVING (vt0.c0 IN ()) UNION ALL SELECT t0.c0, t0.c1, vt0.c0 FROM rt0, vt0, t0 GROUP BY t0.c0, t0.c1, vt0.c0 HAVING (NOT ((vt0.c0 IN ()))) UNION ALL SELECT t0.c0, t0.c1, vt0.c0 FROM rt0, vt0, t0 GROUP BY t0.c0, t0.c1, vt0.c0 HAVING (((vt0.c0 IN ())) ISNULL);
SELECT t0.c0, t0.c1, vt0.c0 FROM rt0, vt0, t0 GROUP BY t0.c0, t0.c1, vt0.c0;
SELECT t0.c0, t0.c1, vt0.c0 FROM rt0, vt0, t0 GROUP BY t0.c0, t0.c1, vt0.c0 HAVING (vt0.c0 IN ()) UNION ALL SELECT t0.c0, t0.c1, vt0.c0 FROM rt0, vt0, t0 GROUP BY t0.c0, t0.c1, vt0.c0 HAVING (NOT ((vt0.c0 IN ()))) UNION ALL SELECT t0.c0, t0.c1, vt0.c0 FROM rt0, vt0, t0 GROUP BY t0.c0, t0.c1, vt0.c0 HAVING (((vt0.c0 IN ())) ISNULL);
SELECT t0.c0, t0.c1, vt0.c0 FROM rt0, vt0, t0 GROUP BY t0.c0, t0.c1, vt0.c0;
SELECT ALL * FROM vt0, t0, t1;
SELECT ALL * FROM vt0, t0, t1 WHERE (x'' COLLATE BINARY) UNION ALL SELECT * FROM vt0, t0, t1 WHERE ((NOT (x'' COLLATE BINARY))) UNION ALL SELECT * FROM vt0, t0, t1 WHERE (((x'' COLLATE BINARY) ISNULL));
SELECT ALL * FROM vt0, t0, t1;
SELECT DISTINCT * FROM rt0, vt0, t1;
SELECT DISTINCT * FROM rt0, vt0, t1 WHERE ((((CAST(0.04529109826280564 AS TEXT), ((0.06625938510810647) NOTNULL), rt0.c1))>=((((rt0.c1)||(rt0.c0)), (NOT ('L|')), ((1.7976931348623157E308) BETWEEN (rt0.c1) AND (rt0.c0)))))) UNION SELECT DISTINCT * FROM rt0, vt0, t1 WHERE ((NOT ((((CAST(0.04529109826280564 AS TEXT), ((0.06625938510810647) NOTNULL), rt0.c1))>=((((rt0.c1)||(rt0.c0)), (NOT ('L|')), ((1.7976931348623157E308) BETWEEN (rt0.c1) AND (rt0.c0)))))))) UNION SELECT DISTINCT * FROM rt0, vt0, t1 WHERE ((((((CAST(0.04529109826280564 AS TEXT), ((0.06625938510810647) NOTNULL), rt0.c1))>=((((rt0.c1)||(rt0.c0)), (NOT ('L|')), ((1.7976931348623157E308) BETWEEN (rt0.c1) AND (rt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0, t1;
SELECT t1.c59, t0.c0, t0.c1 FROM vt0, t1, t0 GROUP BY t1.c59, t0.c0, t0.c1;
SELECT t1.c59, t0.c0, t0.c1 FROM vt0, t1, t0 WHERE ((UPPER(DISTINCT t1.c59) IN ())) GROUP BY t1.c59, t0.c0, t0.c1 UNION SELECT ALL t1.c59, t0.c0, t0.c1 FROM vt0, t1, t0 WHERE ((NOT ((UPPER(DISTINCT t1.c59) IN ())))) GROUP BY t1.c59, t0.c0, t0.c1 UNION SELECT ALL t1.c59, t0.c0, t0.c1 FROM vt0, t1, t0 WHERE ((((UPPER(DISTINCT t1.c59) IN ())) ISNULL)) GROUP BY t1.c59, t0.c0, t0.c1;
SELECT t1.c59, t0.c0, t0.c1 FROM vt0, t1, t0 GROUP BY t1.c59, t0.c0, t0.c1;
SELECT ALL t1.c59, rt0.c0, rt0.c1, vt0.c0 FROM rt0, t1, vt0 GROUP BY t1.c59, rt0.c0, rt0.c1, vt0.c0;
SELECT ALL t1.c59, rt0.c0, rt0.c1, vt0.c0 FROM rt0, t1, vt0 GROUP BY t1.c59, rt0.c0, rt0.c1, vt0.c0 HAVING rt0.c2 UNION ALL SELECT t1.c59, rt0.c0, rt0.c1, vt0.c0 FROM rt0, t1, vt0 GROUP BY t1.c59, rt0.c0, rt0.c1, vt0.c0 HAVING (NOT (rt0.c2)) UNION ALL SELECT t1.c59, rt0.c0, rt0.c1, vt0.c0 FROM rt0, t1, vt0 GROUP BY t1.c59, rt0.c0, rt0.c1, vt0.c0 HAVING ((rt0.c2) ISNULL);
SELECT ALL t1.c59, rt0.c0, rt0.c1, vt0.c0 FROM rt0, t1, vt0 GROUP BY t1.c59, rt0.c0, rt0.c1, vt0.c0;
SELECT ALL t1.c59, rt0.c0, rt0.c1, vt0.c0 FROM rt0, t1, vt0 GROUP BY t1.c59, rt0.c0, rt0.c1, vt0.c0 HAVING rt0.c2 UNION ALL SELECT t1.c59, rt0.c0, rt0.c1, vt0.c0 FROM rt0, t1, vt0 GROUP BY t1.c59, rt0.c0, rt0.c1, vt0.c0 HAVING (NOT (rt0.c2)) UNION ALL SELECT t1.c59, rt0.c0, rt0.c1, vt0.c0 FROM rt0, t1, vt0 GROUP BY t1.c59, rt0.c0, rt0.c1, vt0.c0 HAVING ((rt0.c2) ISNULL);
SELECT ALL t1.c59, rt0.c0, rt0.c1, vt0.c0 FROM rt0, t1, vt0 GROUP BY t1.c59, rt0.c0, rt0.c1, vt0.c0;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE ('') UNION ALL SELECT * FROM vt0 WHERE ((NOT (''))) UNION ALL SELECT ALL * FROM vt0 WHERE ((('') ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM t1, rt0;
SELECT DISTINCT * FROM t1, rt0 WHERE ((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c2))))<>((((((x'9b66')OR(0.48452392937469035)))AND(rt0.c1)))))) UNION SELECT DISTINCT * FROM t1, rt0 WHERE ((NOT ((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c2))))!=((((((x'9b66')OR(0.48452392937469035)))AND(rt0.c1)))))))) UNION SELECT DISTINCT * FROM t1, rt0 WHERE ((((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c2))))<>((((((x'9b66')OR(0.48452392937469035)))AND(rt0.c1)))))) ISNULL));
SELECT DISTINCT * FROM t1, rt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c2, t0.c1, t0.c2 FROM t0, rt0 GROUP BY rt0.c2, t0.c1, t0.c2;
SELECT ALL rt0.c2, t0.c1, t0.c2 FROM t0, rt0 GROUP BY rt0.c2, t0.c1, t0.c2 HAVING GROUP_CONCAT((+ (t0.c0))) UNION ALL SELECT ALL rt0.c2, t0.c1, t0.c2 FROM t0, rt0 GROUP BY rt0.c2, t0.c1, t0.c2 HAVING (NOT (GROUP_CONCAT((+ (t0.c0))))) UNION ALL SELECT ALL rt0.c2, t0.c1, t0.c2 FROM t0, rt0 GROUP BY rt0.c2, t0.c1, t0.c2 HAVING ((GROUP_CONCAT((+ (t0.c0)))) ISNULL);
SELECT ALL rt0.c2, t0.c1, t0.c2 FROM t0, rt0 GROUP BY rt0.c2, t0.c1, t0.c2;
SELECT ALL rt0.c2, t0.c1, t0.c2 FROM t0, rt0 GROUP BY rt0.c2, t0.c1, t0.c2 HAVING GROUP_CONCAT((+ (t0.c0))) UNION ALL SELECT ALL rt0.c2, t0.c1, t0.c2 FROM t0, rt0 GROUP BY rt0.c2, t0.c1, t0.c2 HAVING (NOT (GROUP_CONCAT((+ (t0.c0))))) UNION ALL SELECT ALL rt0.c2, t0.c1, t0.c2 FROM t0, rt0 GROUP BY rt0.c2, t0.c1, t0.c2 HAVING ((GROUP_CONCAT((+ (t0.c0)))) ISNULL);
SELECT ALL rt0.c2, t0.c1, t0.c2 FROM t0, rt0 GROUP BY rt0.c2, t0.c1, t0.c2;
SELECT rt0.c2, t1.c59, rt0.c1 FROM rt0, t1, vt0;
SELECT ALL rt0.c2, t1.c59, rt0.c1 FROM rt0, t1, vt0 WHERE ('YtB띬') UNION ALL SELECT ALL rt0.c2, t1.c59, rt0.c1 FROM rt0, t1, vt0 WHERE ((NOT ('YtB띬'))) UNION ALL SELECT rt0.c2, t1.c59, rt0.c1 FROM rt0, t1, vt0 WHERE ((('YtB띬') ISNULL));
SELECT rt0.c2, t1.c59, rt0.c1 FROM rt0, t1, vt0;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (t1.c59 COLLATE BINARY) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (t1.c59 COLLATE BINARY))) UNION SELECT DISTINCT * FROM t1 WHERE (((t1.c59 COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT t1.c59 FROM t1 GROUP BY t1.c59;
SELECT ALL t1.c59 FROM t1 WHERE (HEX(DISTINCT ((t1.c59)IS(t1.c59)))) GROUP BY t1.c59 UNION SELECT t1.c59 FROM t1 WHERE ((NOT (HEX(DISTINCT ((t1.c59)IS(t1.c59)))))) GROUP BY t1.c59 UNION SELECT ALL t1.c59 FROM t1 WHERE (((HEX(DISTINCT ((t1.c59)IS(t1.c59)))) ISNULL)) GROUP BY t1.c59;
SELECT t1.c59 FROM t1 GROUP BY t1.c59;
SELECT t0.c0, rt0.c1, t1.c59, vt0.c0, t0.c2, t0.c1 FROM vt0, t1, rt0, t0 GROUP BY t0.c0, rt0.c1, t1.c59, vt0.c0, t0.c2, t0.c1;
SELECT t0.c0, rt0.c1, t1.c59, vt0.c0, t0.c2, t0.c1 FROM vt0, t1, rt0, t0 GROUP BY t0.c0, rt0.c1, t1.c59, vt0.c0, t0.c2, t0.c1 HAVING ((TOTAL(rt0.c0))>((((MIN(SUM(SUM(t0.c2))))) BETWEEN ((t0.c0)) AND ((vt0.c0))))) UNION ALL SELECT t0.c0, rt0.c1, t1.c59, vt0.c0, t0.c2, t0.c1 FROM vt0, t1, rt0, t0 GROUP BY t0.c0, rt0.c1, t1.c59, vt0.c0, t0.c2, t0.c1 HAVING (NOT (((TOTAL(rt0.c0))>((((MIN(SUM(SUM(t0.c2))))) BETWEEN ((t0.c0)) AND ((vt0.c0))))))) UNION ALL SELECT t0.c0, rt0.c1, t1.c59, vt0.c0, t0.c2, t0.c1 FROM vt0, t1, rt0, t0 GROUP BY t0.c0, rt0.c1, t1.c59, vt0.c0, t0.c2, t0.c1 HAVING ((((TOTAL(rt0.c0))>((((MIN(SUM(SUM(t0.c2))))) BETWEEN ((t0.c0)) AND ((vt0.c0)))))) ISNULL);
SELECT * FROM t0 INDEXED BY i82, rt0;
SELECT DISTINCT * FROM t1, rt0, t0, vt0;
SELECT DISTINCT * FROM t1, rt0, t0, vt0 WHERE (((t1.c59)/(t1.c59)) COLLATE RTRIM) UNION SELECT DISTINCT * FROM t1, rt0, t0, vt0 WHERE ((NOT (((t1.c59)/(t1.c59)) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM t1, rt0, t0, vt0 WHERE (((((t1.c59)/(t1.c59)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM t1, rt0, t0, vt0;
SELECT vt0.c0, rt0.c0, rt0.c2, rt0.c1, t0.c1, t0.c2, t0.c0 FROM rt0, t0, vt0, t1 GROUP BY vt0.c0, rt0.c0, rt0.c2, rt0.c1, t0.c1, t0.c2, t0.c0;
SELECT ALL vt0.c0, rt0.c0, rt0.c2, rt0.c1, t0.c1, t0.c2, t0.c0 FROM rt0, t0, vt0, t1 WHERE ((((t0.c1)) NOT BETWEEN ((((vt0.c0)*(rt0.c0)))) AND ((((vt0.c0)/(t0.c2)))))) GROUP BY vt0.c0, rt0.c0, rt0.c2, rt0.c1, t0.c1, t0.c2, t0.c0 UNION SELECT ALL vt0.c0, rt0.c0, rt0.c2, rt0.c1, t0.c1, t0.c2, t0.c0 FROM rt0, t0, vt0, t1 WHERE ((NOT ((((t0.c1)) NOT BETWEEN ((((vt0.c0)*(rt0.c0)))) AND ((((vt0.c0)/(t0.c2)))))))) GROUP BY vt0.c0, rt0.c0, rt0.c2, rt0.c1, t0.c1, t0.c2, t0.c0 UNION SELECT vt0.c0, rt0.c0, rt0.c2, rt0.c1, t0.c1, t0.c2, t0.c0 FROM rt0, t0, vt0, t1 WHERE ((((((t0.c1)) NOT BETWEEN ((((vt0.c0)*(rt0.c0)))) AND ((((vt0.c0)/(t0.c2)))))) ISNULL)) GROUP BY vt0.c0, rt0.c0, rt0.c2, rt0.c1, t0.c1, t0.c2, t0.c0;
SELECT vt0.c0, rt0.c0, rt0.c2, rt0.c1, t0.c1, t0.c2, t0.c0 FROM rt0, t0, vt0, t1 GROUP BY vt0.c0, rt0.c0, rt0.c2, rt0.c1, t0.c1, t0.c2, t0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((COUNT(*))=(TOTAL(MIN(vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((NOT (((COUNT(*))=(TOTAL(MIN(vt0.c0)))))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((NOT (((COUNT(*))==(TOTAL(MIN(vt0.c0))))))) ISNULL);
SELECT ALL * FROM rt0, t1;
SELECT ALL * FROM rt0, t1 WHERE (CASE ((rt0.c2) ISNULL)  WHEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) THEN ((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)) WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)) THEN CASE rt0.c1  WHEN rt0.c0 THEN t1.c59 END WHEN (rt0.c2 IN (rt0.c1)) THEN ((((t1.c59)AND(t1.c59)))AND(t1.c59)) END) UNION ALL SELECT ALL * FROM rt0, t1 WHERE ((NOT (CASE ((rt0.c2) ISNULL)  WHEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) THEN ((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)) WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)) THEN CASE rt0.c1  WHEN rt0.c0 THEN t1.c59 END WHEN (rt0.c2 IN (rt0.c1)) THEN ((((t1.c59)AND(t1.c59)))AND(t1.c59)) END))) UNION ALL SELECT * FROM rt0, t1 WHERE (((CASE ((rt0.c2) ISNULL)  WHEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) THEN ((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)) WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)) THEN CASE rt0.c1  WHEN rt0.c0 THEN t1.c59 END WHEN (rt0.c2 IN (rt0.c1)) THEN ((((t1.c59)AND(t1.c59)))AND(t1.c59)) END) ISNULL));
SELECT ALL * FROM rt0, t1;
SELECT DISTINCT vt0.c0, rt0.c1, rt0.c0, t0.c2, t0.c0, t0.c1, t1.c59 FROM rt0, t1, vt0, t0;
SELECT DISTINCT vt0.c0, rt0.c1, rt0.c0, t0.c2, t0.c0, t0.c1, t1.c59 FROM rt0, t1, vt0, t0 WHERE ((((vt0.c0) ISNULL) IN ())) UNION SELECT DISTINCT vt0.c0, rt0.c1, rt0.c0, t0.c2, t0.c0, t0.c1, t1.c59 FROM rt0, t1, vt0, t0 WHERE ((NOT ((((vt0.c0) ISNULL) IN ())))) UNION SELECT DISTINCT vt0.c0, rt0.c1, rt0.c0, t0.c2, t0.c0, t0.c1, t1.c59 FROM rt0, t1, vt0, t0 WHERE ((((((vt0.c0) ISNULL) IN ())) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c1, rt0.c0, t0.c2, t0.c0, t0.c1, t1.c59 FROM rt0, t1, vt0, t0;
SELECT t0.c2, t0.c1, rt0.c1 FROM t0 LEFT OUTER JOIN rt0 ON TYPEOF(SQLITE_SOURCE_ID()) GROUP BY t0.c2, t0.c1, rt0.c1;
SELECT t0.c2, t0.c1, rt0.c1 FROM t0 LEFT OUTER JOIN rt0 ON TYPEOF(SQLITE_SOURCE_ID()) WHERE ((((t0.c0, rt0.c0, t0.c1)) NOT BETWEEN (((((rt0.c0, 0.4864270371820878, t0.c0))<>((t0.c0, rt0.c2, rt0.c1))), ((rt0.c0)>>(t0.c1)), 0.11933120277755682 COLLATE RTRIM)) AND ((CAST(rt0.c2 AS INTEGER), ((rt0.c2) BETWEEN (rt0.c1) AND (t0.c1)), rt0.c2)))) GROUP BY t0.c2, t0.c1, rt0.c1 UNION SELECT t0.c2, t0.c1, rt0.c1 FROM t0 LEFT OUTER JOIN rt0 ON TYPEOF(SQLITE_SOURCE_ID()) WHERE ((NOT ((((t0.c0, rt0.c0, t0.c1)) NOT BETWEEN (((((rt0.c0, 0.4864270371820878, t0.c0))<>((t0.c0, rt0.c2, rt0.c1))), ((rt0.c0)>>(t0.c1)), 0.11933120277755682 COLLATE RTRIM)) AND ((CAST(rt0.c2 AS INTEGER), ((rt0.c2) BETWEEN (rt0.c1) AND (t0.c1)), rt0.c2)))))) GROUP BY t0.c2, t0.c1, rt0.c1 UNION SELECT ALL t0.c2, t0.c1, rt0.c1 FROM t0 LEFT OUTER JOIN rt0 ON TYPEOF(SQLITE_SOURCE_ID()) WHERE ((((((t0.c0, rt0.c0, t0.c1)) NOT BETWEEN (((((rt0.c0, 0.4864270371820878, t0.c0))!=((t0.c0, rt0.c2, rt0.c1))), ((rt0.c0)>>(t0.c1)), 0.11933120277755682 COLLATE RTRIM)) AND ((CAST(rt0.c2 AS INTEGER), ((rt0.c2) BETWEEN (rt0.c1) AND (t0.c1)), rt0.c2)))) ISNULL)) GROUP BY t0.c2, t0.c1, rt0.c1;
SELECT t0.c2, t0.c1, rt0.c1 FROM t0 LEFT OUTER JOIN rt0 ON TYPEOF(SQLITE_SOURCE_ID()) GROUP BY t0.c2, t0.c1, rt0.c1;
SELECT ALL t1.c59 FROM t1 GROUP BY t1.c59;
SELECT ALL t1.c59 FROM t1 GROUP BY t1.c59 HAVING COUNT(COUNT(TOTAL(t1.c59))) UNION ALL SELECT ALL t1.c59 FROM t1 GROUP BY t1.c59 HAVING (NOT (COUNT(COUNT(TOTAL(t1.c59))))) UNION ALL SELECT ALL t1.c59 FROM t1 NOT INDEXED GROUP BY t1.c59 HAVING ((COUNT(COUNT(TOTAL(t1.c59)))) ISNULL);
SELECT SUM(UPPER(CASE NULL  WHEN t1.c59 THEN vt0.c0 WHEN t1.c59 THEN rt0.c0 WHEN rt0.c1 THEN t0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN NULL THEN rt0.c1 END)) FROM vt0, t0, t1, rt0;
SELECT * FROM vt0 CROSS JOIN t0 ON ((((t1.c59) NOT BETWEEN (rt0.c1) AND (t0.c0))) NOT BETWEEN ((+ (t0.c2))) AND (CAST('-983389832' AS INTEGER))) LEFT OUTER JOIN t1 ON 0.7499823560582318 LEFT OUTER JOIN rt0 ON CASE CASE WHEN vt0.c0 THEN rt0.c1 WHEN 0xffffffffc501ab98 THEN t1.c59 WHEN rt0.c2 THEN t0.c0 ELSE t1.c59 END  WHEN (t0.c0 IN (t0.c1)) THEN CASE rt0.c1  WHEN rt0.c0 THEN t1.c59 WHEN vt0.c0 THEN t0.c1 WHEN t0.c2 THEN rt0.c0 END END;
SELECT ALL * FROM vt0 CROSS JOIN t0 ON ((((t1.c59) NOT BETWEEN (rt0.c1) AND (t0.c0))) NOT BETWEEN ((+ (t0.c2))) AND (CAST('-983389832' AS INTEGER))) LEFT OUTER JOIN t1 ON 0.7499823560582318 LEFT OUTER JOIN rt0 ON CASE CASE WHEN vt0.c0 THEN rt0.c1 WHEN 0xffffffffc501ab98 THEN t1.c59 WHEN rt0.c2 THEN t0.c0 ELSE t1.c59 END  WHEN (t0.c0 IN (t0.c1)) THEN CASE rt0.c1  WHEN rt0.c0 THEN t1.c59 WHEN vt0.c0 THEN t0.c1 WHEN t0.c2 THEN rt0.c0 END END WHERE (0.06682575366364962) UNION ALL SELECT * FROM vt0 CROSS JOIN t0 ON ((((t1.c59) NOT BETWEEN (rt0.c1) AND (t0.c0))) NOT BETWEEN ((+ (t0.c2))) AND (CAST('-983389832' AS INTEGER))) LEFT OUTER JOIN t1 ON 0.7499823560582318 LEFT OUTER JOIN rt0 ON CASE CASE WHEN vt0.c0 THEN rt0.c1 WHEN 0xffffffffc501ab98 THEN t1.c59 WHEN rt0.c2 THEN t0.c0 ELSE t1.c59 END  WHEN (t0.c0 IN (t0.c1)) THEN CASE rt0.c1  WHEN rt0.c0 THEN t1.c59 WHEN vt0.c0 THEN t0.c1 WHEN t0.c2 THEN rt0.c0 END END WHERE ((NOT (0.06682575366364962))) UNION ALL SELECT ALL * FROM vt0 CROSS JOIN t0 ON ((((t1.c59) NOT BETWEEN (rt0.c1) AND (t0.c0))) NOT BETWEEN ((+ (t0.c2))) AND (CAST('-983389832' AS INTEGER))) LEFT OUTER JOIN t1 ON 0.7499823560582318 LEFT OUTER JOIN rt0 ON CASE CASE WHEN vt0.c0 THEN rt0.c1 WHEN 0Xffffffffc501ab98 THEN t1.c59 WHEN rt0.c2 THEN t0.c0 ELSE t1.c59 END  WHEN (t0.c0 IN (t0.c1)) THEN CASE rt0.c1  WHEN rt0.c0 THEN t1.c59 WHEN vt0.c0 THEN t0.c1 WHEN t0.c2 THEN rt0.c0 END END WHERE (((0.06682575366364962) ISNULL));
SELECT * FROM vt0 CROSS JOIN t0 ON ((((t1.c59) NOT BETWEEN (rt0.c1) AND (t0.c0))) NOT BETWEEN ((+ (t0.c2))) AND (CAST('-983389832' AS INTEGER))) LEFT OUTER JOIN t1 ON 0.7499823560582318 LEFT OUTER JOIN rt0 ON CASE CASE WHEN vt0.c0 THEN rt0.c1 WHEN 0xffffffffc501ab98 THEN t1.c59 WHEN rt0.c2 THEN t0.c0 ELSE t1.c59 END  WHEN (t0.c0 IN (t0.c1)) THEN CASE rt0.c1  WHEN rt0.c0 THEN t1.c59 WHEN vt0.c0 THEN t0.c1 WHEN t0.c2 THEN rt0.c0 END END;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c2 IN (rt0.c2, rt0.c2, rt0.c1))) NOT BETWEEN ((((rt0.c2, NULL, rt0.c0))>((rt0.c0, rt0.c1, rt0.c1)))) AND (((rt0.c1) IS TRUE)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((rt0.c2 IN (rt0.c2, rt0.c2, rt0.c1))) NOT BETWEEN ((((rt0.c2, NULL, rt0.c0))>((rt0.c0, rt0.c1, rt0.c1)))) AND (((rt0.c1) IS TRUE)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c2 IN (rt0.c2, rt0.c2, rt0.c1))) NOT BETWEEN ((((rt0.c2, NULL, rt0.c0))>((rt0.c0, rt0.c1, rt0.c1)))) AND (((rt0.c1) IS TRUE)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL t0.c2, rt0.c0, t0.c0, rt0.c2, rt0.c1, vt0.c0 FROM t1, rt0, t0, vt0 GROUP BY t0.c2, rt0.c0, t0.c0, rt0.c2, rt0.c1, vt0.c0;
SELECT ALL t0.c2, rt0.c0, t0.c0, rt0.c2, rt0.c1, vt0.c0 FROM t1, rt0, t0, vt0 WHERE (((((((((((((((t1.c59)AND(t0.c2)))AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c1)))AND(t0.c2)))AND(t0.c0))) NOTNULL)) GROUP BY t0.c2, rt0.c0, t0.c0, rt0.c2, rt0.c1, vt0.c0 UNION SELECT t0.c2, rt0.c0, t0.c0, rt0.c2, rt0.c1, vt0.c0 FROM t1, rt0, t0, vt0 WHERE ((NOT (((((((((((((((t1.c59)AND(t0.c2)))AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c1)))AND(t0.c2)))AND(t0.c0))) NOTNULL)))) GROUP BY t0.c2, rt0.c0, t0.c0, rt0.c2, rt0.c1, vt0.c0 UNION SELECT ALL t0.c2, rt0.c0, t0.c0, rt0.c2, rt0.c1, vt0.c0 FROM t1, rt0, t0, vt0 WHERE (((((((((((((((((t1.c59)AND(t0.c2)))AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c1)))AND(t0.c2)))AND(t0.c0))) NOTNULL)) ISNULL)) GROUP BY t0.c2, rt0.c0, t0.c0, rt0.c2, rt0.c1, vt0.c0;
SELECT ALL t0.c2, rt0.c0, t0.c0, rt0.c2, rt0.c1, vt0.c0 FROM t1, rt0, t0, vt0 GROUP BY t0.c2, rt0.c0, t0.c0, rt0.c2, rt0.c1, vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CAST(TOTAL(AVG(COUNT(COUNT(vt0.c0)))) AS BLOB) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CAST(TOTAL(AVG(COUNT(COUNT(vt0.c0)))) AS BLOB))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CAST(TOTAL(AVG(COUNT(COUNT(vt0.c0)))) AS BLOB)) ISNULL);
SELECT ALL t0.c0, t0.c1, t1.c59 FROM rt0, t0, t1, vt0;
SELECT t0.c0, t0.c1, t1.c59 FROM rt0, t0, t1, vt0 WHERE ((~ (CAST(rt0.c1 AS BLOB)))) UNION ALL SELECT ALL t0.c0, t0.c1, t1.c59 FROM rt0, t0 NOT INDEXED, t1, vt0 WHERE ((NOT ((~ (CAST(rt0.c1 AS BLOB)))))) UNION ALL SELECT t0.c0, t0.c1, t1.c59 FROM rt0, t0, t1, vt0 WHERE ((((~ (CAST(rt0.c1 AS BLOB)))) ISNULL));
SELECT ALL t0.c0, t0.c1, t1.c59 FROM rt0, t0, t1, vt0;
SELECT DISTINCT * FROM t1, t0;
SELECT DISTINCT * FROM t1, t0 WHERE (0.6493780435359933) UNION SELECT DISTINCT * FROM t1, t0 WHERE ((NOT (0.6493780435359933))) UNION SELECT DISTINCT * FROM t1, t0 WHERE (((0.6493780435359933) ISNULL));
SELECT DISTINCT * FROM t1, t0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 WHERE ((((~ (-1.018408871E9)))>(load_extension(rt0.c1)))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT ((((~ (-1.018408871E9)))>(load_extension(rt0.c1)))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((((((~ (-1.018408871E9)))>(load_extension(rt0.c1)))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT t1.c59 FROM t1 GROUP BY t1.c59;
SELECT t1.c59 FROM t1 GROUP BY t1.c59 HAVING COUNT(*) UNION ALL SELECT ALL t1.c59 FROM t1 GROUP BY t1.c59 HAVING (NOT (COUNT(*))) UNION ALL SELECT t1.c59 FROM t1 GROUP BY t1.c59 HAVING ((COUNT(*)) ISNULL);
SELECT t1.c59 FROM t1 GROUP BY t1.c59;
SELECT t1.c59 FROM t1 GROUP BY t1.c59 HAVING COUNT(*) UNION ALL SELECT ALL t1.c59 FROM t1 GROUP BY t1.c59 HAVING (NOT (COUNT(*))) UNION ALL SELECT t1.c59 FROM t1 GROUP BY t1.c59 HAVING ((COUNT(*)) ISNULL);
SELECT t1.c59 FROM t1 GROUP BY t1.c59;
SELECT ALL SUM(CAST((((rt0.c2))>=((rt0.c1))) AS INTEGER)) FROM t1, rt0, vt0, t0;
SELECT * FROM t1 INNER JOIN vt0 ON (((t1.c59, t1.c59, t1.c59)) NOT BETWEEN (((('-989746280') NOTNULL), (~ (vt0.c0)), ((t1.c59) BETWEEN (t1.c59) AND (0.2999442495022775)))) AND ((((((vt0.c0)OR(t1.c59)))AND(NULL)), INSTR(t1.c59, vt0.c0), ((((t1.c59)AND('')))AND(vt0.c0)))));
SELECT * FROM t1 INNER JOIN vt0 ON (((t1.c59, t1.c59, t1.c59)) NOT BETWEEN (((('-989746280') NOTNULL), (~ (vt0.c0)), ((t1.c59) BETWEEN (t1.c59) AND (0.2999442495022775)))) AND ((((((vt0.c0)OR(t1.c59)))AND(NULL)), INSTR(t1.c59, vt0.c0), ((((t1.c59)AND('')))AND(vt0.c0))))) WHERE ((((t1.c59 IN (vt0.c0)))*(((t1.c59)+('TꔈG'))))) UNION ALL SELECT ALL * FROM t1 INNER JOIN vt0 ON (((t1.c59, t1.c59, t1.c59)) NOT BETWEEN (((('-989746280') NOTNULL), (~ (vt0.c0)), ((t1.c59) BETWEEN (t1.c59) AND (0.2999442495022775)))) AND ((((((vt0.c0)OR(t1.c59)))AND(NULL)), INSTR(t1.c59, vt0.c0), ((((t1.c59)AND('')))AND(vt0.c0))))) WHERE ((NOT ((((t1.c59 IN (vt0.c0)))*(((t1.c59)+('TꔈG'))))))) UNION ALL SELECT ALL * FROM t1 INNER JOIN vt0 ON (((t1.c59, t1.c59, t1.c59)) NOT BETWEEN (((('-989746280') NOTNULL), (~ (vt0.c0)), ((t1.c59) BETWEEN (t1.c59) AND (0.2999442495022775)))) AND ((((((vt0.c0)OR(t1.c59)))AND(NULL)), INSTR(t1.c59, vt0.c0), ((((t1.c59)AND('')))AND(vt0.c0))))) WHERE ((((((t1.c59 IN (vt0.c0)))*(((t1.c59)+('TꔈG'))))) ISNULL));
SELECT * FROM t1 INNER JOIN vt0 ON (((t1.c59, t1.c59, t1.c59)) NOT BETWEEN (((('-989746280') NOTNULL), (~ (vt0.c0)), ((t1.c59) BETWEEN (t1.c59) AND (0.2999442495022775)))) AND ((((((vt0.c0)OR(t1.c59)))AND(NULL)), INSTR(t1.c59, vt0.c0), ((((t1.c59)AND('')))AND(vt0.c0)))));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((- ((((rt0.c0, 0.1396533727596756, rt0.c1))>=((rt0.c0, rt0.c1, rt0.c1)))))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((- ((((rt0.c0, 0.1396533727596756, rt0.c1))>=((rt0.c0, rt0.c1, rt0.c1)))))))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((- ((((rt0.c0, 0.1396533727596756, rt0.c1))>=((rt0.c0, rt0.c1, rt0.c1)))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT rt0.c0, t1.c59, vt0.c0 FROM vt0, rt0, t1, t0 GROUP BY rt0.c0, t1.c59, vt0.c0;
SELECT rt0.c0, t1.c59, vt0.c0 FROM vt0, rt0, t1, t0 WHERE (CAST('(3*Kp[3P' AS INTEGER)) GROUP BY rt0.c0, t1.c59, vt0.c0 UNION SELECT rt0.c0, t1.c59, vt0.c0 FROM vt0, rt0, t1, t0 WHERE ((NOT (CAST('(3*Kp[3P' AS INTEGER)))) GROUP BY rt0.c0, t1.c59, vt0.c0 UNION SELECT ALL rt0.c0, t1.c59, vt0.c0 FROM vt0, rt0, t1, t0 WHERE (((CAST('(3*Kp[3P' AS INTEGER)) ISNULL)) GROUP BY rt0.c0, t1.c59, vt0.c0;
SELECT rt0.c0, t1.c59, vt0.c0 FROM vt0, rt0, t1, t0 GROUP BY rt0.c0, t1.c59, vt0.c0;
SELECT ALL vt0.c0 FROM vt0 CROSS JOIN t0 ON CAST(((vt0.c0)<<(vt0.c0)) AS REAL) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 CROSS JOIN t0 ON CAST(((vt0.c0)<<(vt0.c0)) AS REAL) GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(COUNT(*))) IS TRUE) UNION ALL SELECT vt0.c0 FROM vt0 CROSS JOIN t0 ON CAST(((vt0.c0)<<(vt0.c0)) AS REAL) GROUP BY vt0.c0 HAVING (NOT (((GROUP_CONCAT(COUNT(*))) IS TRUE))) UNION ALL SELECT vt0.c0 FROM vt0 CROSS JOIN t0 ON CAST(((vt0.c0)<<(vt0.c0)) AS REAL) GROUP BY vt0.c0 HAVING ((((GROUP_CONCAT(COUNT(*))) IS TRUE)) ISNULL);
SELECT rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (UNLIKELY(DISTINCT CAST(rt0.c0 AS BLOB))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (UNLIKELY(DISTINCT CAST(rt0.c0 AS BLOB))))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (((UNLIKELY(DISTINCT CAST(rt0.c0 AS BLOB))) ISNULL));
SELECT rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM t1 INNER JOIN vt0 ON CASE ((t0.c2) ISNULL)  WHEN ((t0.c2) BETWEEN (t0.c2) AND (t0.c1)) THEN 0.06426374103921806 WHEN ((vt0.c0) BETWEEN (t0.c0) AND (t0.c1)) THEN CASE t1.c59  WHEN vt0.c0 THEN t0.c0 END WHEN ((t0.c1) NOT BETWEEN (NULL) AND (vt0.c0)) THEN load_extension(t0.c1) ELSE ((((((((NULL)OR(t0.c1)))AND(t0.c2)))AND(t1.c59)))AND(t0.c0)) END RIGHT OUTER JOIN t0 ON CASE CASE WHEN vt0.c0 THEN t1.c59 ELSE t0.c1 END  WHEN (- (t1.c59)) THEN (t0.c2 IN ()) WHEN (t1.c59 IN ()) THEN ((t0.c1)IS NOT(t1.c59)) WHEN CAST(t1.c59 AS NUMERIC) THEN t1.c59 COLLATE BINARY WHEN ((t0.c2) NOT BETWEEN (t0.c0) AND (vt0.c0)) THEN ((0.6644255533986838) NOTNULL) WHEN (~ (t1.c59)) THEN ((t1.c59) IS TRUE) END;
SELECT vt0.c0, t1.c59 FROM vt0, t0, t1 FULL OUTER JOIN rt0 ON CASE WHEN (t0.c2 IN ()) THEN LIKELY(DISTINCT t0.c2) WHEN (rt0.c1 IN ()) THEN ((vt0.c0)IS NOT(t1.c59)) WHEN CASE t0.c2  WHEN rt0.c0 THEN t1.c59 END THEN rt0.c1 ELSE ((((rt0.c2)OR(rt0.c1)))OR(vt0.c0)) END GROUP BY vt0.c0, t1.c59;
SELECT ALL vt0.c0, t1.c59 FROM vt0, t0, t1 FULL OUTER JOIN rt0 ON CASE WHEN (t0.c2 IN ()) THEN LIKELY(DISTINCT t0.c2) WHEN (rt0.c1 IN ()) THEN ((vt0.c0)IS NOT(t1.c59)) WHEN CASE t0.c2  WHEN rt0.c0 THEN t1.c59 END THEN rt0.c1 ELSE ((((rt0.c2)OR(rt0.c1)))OR(vt0.c0)) END WHERE ((((((rt0.c0))<((rt0.c1))))!=(((vt0.c0) BETWEEN (vt0.c0) AND (t0.c2))))) GROUP BY vt0.c0, t1.c59 UNION SELECT ALL vt0.c0, t1.c59 FROM vt0, t0, t1 FULL OUTER JOIN rt0 ON CASE WHEN (t0.c2 IN ()) THEN LIKELY(DISTINCT t0.c2) WHEN (rt0.c1 IN ()) THEN ((vt0.c0)IS NOT(t1.c59)) WHEN CASE t0.c2  WHEN rt0.c0 THEN t1.c59 END THEN rt0.c1 ELSE ((((rt0.c2)OR(rt0.c1)))OR(vt0.c0)) END WHERE ((NOT ((((((rt0.c0))<((rt0.c1))))<>(((vt0.c0) BETWEEN (vt0.c0) AND (t0.c2))))))) GROUP BY vt0.c0, t1.c59 UNION SELECT vt0.c0, t1.c59 FROM vt0, t0, t1 FULL OUTER JOIN rt0 ON CASE WHEN (t0.c2 IN ()) THEN LIKELY(DISTINCT t0.c2) WHEN (rt0.c1 IN ()) THEN ((vt0.c0)IS NOT(t1.c59)) WHEN CASE t0.c2  WHEN rt0.c0 THEN t1.c59 END THEN rt0.c1 ELSE ((((rt0.c2)OR(rt0.c1)))OR(vt0.c0)) END WHERE ((((((((rt0.c0))<((rt0.c1))))!=(((vt0.c0) BETWEEN (vt0.c0) AND (t0.c2))))) ISNULL)) GROUP BY vt0.c0, t1.c59;
SELECT vt0.c0, t1.c59 FROM vt0, t0, t1 FULL OUTER JOIN rt0 ON CASE WHEN (t0.c2 IN ()) THEN LIKELY(DISTINCT t0.c2) WHEN (rt0.c1 IN ()) THEN ((vt0.c0)IS NOT(t1.c59)) WHEN CASE t0.c2  WHEN rt0.c0 THEN t1.c59 END THEN rt0.c1 ELSE ((((rt0.c2)OR(rt0.c1)))OR(vt0.c0)) END GROUP BY vt0.c0, t1.c59;
SELECT ALL vt0.c0, rt0.c0 FROM t0, rt0, t1, vt0 GROUP BY vt0.c0, rt0.c0;
SELECT vt0.c0, rt0.c0 FROM t0, rt0, t1, vt0 GROUP BY vt0.c0, rt0.c0 HAVING MIN(((TOTAL(rt0.c1)) ISNULL)) UNION ALL SELECT vt0.c0, rt0.c0 FROM t0, rt0, t1, vt0 GROUP BY vt0.c0, rt0.c0 HAVING (NOT (MIN(((TOTAL(rt0.c1)) ISNULL)))) UNION ALL SELECT ALL vt0.c0, rt0.c0 FROM t0, rt0, t1, vt0 GROUP BY vt0.c0, rt0.c0 HAVING ((MIN(((TOTAL(rt0.c1)) ISNULL))) ISNULL);
SELECT rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (((((rt0.c2) NOTNULL))IS(NULLIF(DISTINCT rt0.c2, rt0.c1)))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c2) NOTNULL))IS(NULLIF(DISTINCT rt0.c2, rt0.c1)))))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 WHERE (((((((rt0.c2) NOTNULL))IS(NULLIF(DISTINCT rt0.c2, rt0.c1)))) ISNULL));
SELECT rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT t1.c59 FROM vt0, t1;
SELECT DISTINCT t1.c59 FROM vt0, t1 WHERE (t1.c59) UNION SELECT DISTINCT t1.c59 FROM vt0, t1 WHERE ((NOT (t1.c59))) UNION SELECT DISTINCT t1.c59 FROM vt0, t1 WHERE (((t1.c59) ISNULL));
SELECT DISTINCT t1.c59 FROM vt0, t1;
SELECT t0.c1, t0.c2 FROM t1, t0, rt0 GROUP BY t0.c1, t0.c2;
SELECT ALL t0.c1, t0.c2 FROM t1, t0, rt0 WHERE (x'') GROUP BY t0.c1, t0.c2 UNION SELECT t0.c1, t0.c2 FROM t1, t0, rt0 WHERE ((NOT (x''))) GROUP BY t0.c1, t0.c2 UNION SELECT ALL t0.c1, t0.c2 FROM t1, t0, rt0 WHERE (((x'') ISNULL)) GROUP BY t0.c1, t0.c2;
SELECT t0.c1, t0.c2 FROM t1, t0, rt0 GROUP BY t0.c1, t0.c2;
SELECT t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2;
SELECT t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2 HAVING CASE TOTAL(GROUP_CONCAT(x''))  WHEN ((t0.c0) IS FALSE) THEN (t0.c0 IN (TOTAL(t0.c2))) END UNION ALL SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2 HAVING (NOT (CASE TOTAL(GROUP_CONCAT(x''))  WHEN ((t0.c0) IS FALSE) THEN (t0.c0 IN (TOTAL(t0.c2))) END)) UNION ALL SELECT t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2 HAVING ((CASE TOTAL(GROUP_CONCAT(x''))  WHEN ((t0.c0) IS FALSE) THEN (t0.c0 IN (TOTAL(t0.c2))) END) ISNULL);
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE (load_extension(((t0.c0) BETWEEN (t0.c1) AND (t0.c2)))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (load_extension(((t0.c0) BETWEEN (t0.c1) AND (t0.c2)))))) UNION ALL SELECT ALL * FROM t0 WHERE (((load_extension(((t0.c0) BETWEEN (t0.c1) AND (t0.c2)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CAST((+ (vt0.c0)) AS BLOB)) UNION SELECT DISTINCT vt0.c0 FROM vt0 NOT INDEXED WHERE ((NOT (CAST((+ (vt0.c0)) AS BLOB)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CAST((+ (vt0.c0)) AS BLOB)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (CAST((((rt0.c2, rt0.c0, rt0.c2))==((rt0.c0, rt0.c2, rt0.c1))) AS BLOB)) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (CAST((((rt0.c2, rt0.c0, rt0.c2))=((rt0.c0, rt0.c2, rt0.c1))) AS BLOB)))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((CAST((((rt0.c2, rt0.c0, rt0.c2))==((rt0.c0, rt0.c2, rt0.c1))) AS BLOB)) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1;
SELECT t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1 HAVING 0x3dac2297 UNION ALL SELECT t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1 HAVING (NOT (0x3dac2297)) UNION ALL SELECT ALL t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1 HAVING ((0X3dac2297) ISNULL);
SELECT t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1;
SELECT t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1 HAVING 0x3dac2297 UNION ALL SELECT t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1 HAVING (NOT (0x3dac2297)) UNION ALL SELECT ALL t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1 HAVING ((0X3dac2297) ISNULL);
SELECT t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1;
SELECT ALL rt0.c1 FROM rt0;
SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT ((((NULL))<((rt0.c2)))))) UNION ALL SELECT rt0.c1 FROM rt0 WHERE ((NOT ((NOT ((((NULL))<((rt0.c2)))))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE ((((NOT ((((NULL))<((rt0.c2)))))) ISNULL));
SELECT ALL rt0.c1 FROM rt0;
SELECT DISTINCT * FROM t0, vt0, t1;
SELECT DISTINCT * FROM t0, vt0, t1 WHERE (((t1.c59) IS TRUE) COLLATE NOCASE) UNION SELECT DISTINCT * FROM t0, vt0, t1 WHERE ((NOT (((t1.c59) IS TRUE) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM t0, vt0, t1 WHERE (((((t1.c59) IS TRUE) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM t0, vt0, t1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (CASE WHEN ((vt0.c0) NOT BETWEEN (-1404699639) AND (vt0.c0)) THEN ((vt0.c0) ISNULL) ELSE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) END) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN ((vt0.c0) NOT BETWEEN (-1404699639) AND (vt0.c0)) THEN ((vt0.c0) ISNULL) ELSE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) END))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((CASE WHEN ((vt0.c0) NOT BETWEEN (-1404699639) AND (vt0.c0)) THEN ((vt0.c0) ISNULL) ELSE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) END) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0;
SELECT t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0 HAVING MAX(((GROUP_CONCAT(t0.c0))AND(SUM(MIN(COUNT(*)))))) UNION ALL SELECT ALL t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0 HAVING (NOT (MAX(((GROUP_CONCAT(t0.c0))AND(SUM(MIN(COUNT(*)))))))) UNION ALL SELECT t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0 HAVING ((MAX(((GROUP_CONCAT(t0.c0))AND(SUM(MIN(COUNT(*))))))) ISNULL);
SELECT * FROM t0, rt0 CROSS JOIN t1 ON UPPER(DISTINCT (+ (t0.c1))) LEFT OUTER JOIN vt0 ON CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END COLLATE NOCASE;
SELECT ALL * FROM t0, rt0 CROSS JOIN t1 ON UPPER(DISTINCT (+ (t0.c1))) LEFT OUTER JOIN vt0 ON CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END COLLATE NOCASE WHERE (CAST(t0.c2 COLLATE NOCASE AS TEXT)) UNION ALL SELECT ALL * FROM t0, rt0 CROSS JOIN t1 ON UPPER(DISTINCT (+ (t0.c1))) LEFT OUTER JOIN vt0 ON CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END COLLATE NOCASE WHERE ((NOT (CAST(t0.c2 COLLATE NOCASE AS TEXT)))) UNION ALL SELECT ALL * FROM t0, rt0 CROSS JOIN t1 ON UPPER(DISTINCT (+ (t0.c1))) LEFT OUTER JOIN vt0 ON CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END COLLATE NOCASE WHERE (((CAST(t0.c2 COLLATE NOCASE AS TEXT)) ISNULL));
SELECT * FROM t0, rt0 CROSS JOIN t1 ON UPPER(DISTINCT (+ (t0.c1))) LEFT OUTER JOIN vt0 ON CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END COLLATE NOCASE;
SELECT DISTINCT t0.c0, t0.c1, t0.c2, rt0.c2, rt0.c1 FROM t0, rt0;
SELECT DISTINCT t0.c0, t0.c1, t0.c2, rt0.c2, rt0.c1 FROM t0, rt0 WHERE ((~ ((rt0.c0 IN (t0.c1))))) UNION SELECT DISTINCT t0.c0, t0.c1, t0.c2, rt0.c2, rt0.c1 FROM t0, rt0 WHERE ((NOT ((~ ((rt0.c0 IN (t0.c1))))))) UNION SELECT DISTINCT t0.c0, t0.c1, t0.c2, rt0.c2, rt0.c1 FROM t0, rt0 WHERE ((((~ ((rt0.c0 IN (t0.c1))))) ISNULL));
SELECT DISTINCT t0.c0, t0.c1, t0.c2, rt0.c2, rt0.c1 FROM t0, rt0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (rt0.c1) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (rt0.c1))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((rt0.c1) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL vt0.c0, t0.c1, rt0.c1, rt0.c0, t1.c59, t0.c2, t0.c0 FROM t1 INNER JOIN t0 ON ((((t1.c59)<=(x''))) NOTNULL) CROSS JOIN vt0 ON ((rt0.c2 COLLATE BINARY) IS TRUE) FULL OUTER JOIN rt0 ON ((t0.c0)/(rt0.c0)) COLLATE BINARY GROUP BY vt0.c0, t0.c1, rt0.c1, rt0.c0, t1.c59, t0.c2, t0.c0;
SELECT MIN(rt0.c0) FROM t1, rt0;
SELECT ALL rt0.c2 FROM rt0, t0, t1;
SELECT rt0.c2 FROM rt0, t0, t1 WHERE (CAST(CAST(rt0.c1 AS BLOB) AS BLOB)) UNION ALL SELECT ALL rt0.c2 FROM rt0, t0, t1 WHERE ((NOT (CAST(CAST(rt0.c1 AS BLOB) AS BLOB)))) UNION ALL SELECT rt0.c2 FROM rt0, t0, t1 WHERE (((CAST(CAST(rt0.c1 AS BLOB) AS BLOB)) ISNULL));
SELECT ALL rt0.c2 FROM rt0, t0, t1;
SELECT DISTINCT rt0.c2, rt0.c1, t1.c59, vt0.c0, t0.c1, t0.c2, t0.c0 FROM vt0, t0, rt0, t1;
SELECT DISTINCT rt0.c2, rt0.c1, t1.c59, vt0.c0, t0.c1, t0.c2, t0.c0 FROM vt0, t0, rt0, t1 WHERE (('1696662780' IN ((NOT (rt0.c1))))) UNION SELECT DISTINCT rt0.c2, rt0.c1, t1.c59, vt0.c0, t0.c1, t0.c2, t0.c0 FROM vt0, t0, rt0, t1 WHERE ((NOT (('1696662780' IN ((NOT (rt0.c1))))))) UNION SELECT DISTINCT rt0.c2, rt0.c1, t1.c59, vt0.c0, t0.c1, t0.c2, t0.c0 FROM vt0, t0, rt0, t1 WHERE (((('1696662780' IN ((NOT (rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, t1.c59, vt0.c0, t0.c1, t0.c2, t0.c0 FROM vt0, t0, rt0, t1;
SELECT t0.c1, t1.c59 FROM t0 FULL OUTER JOIN t1 ON (('1696662780' COLLATE NOCASE)=(((t1.c59)||(t0.c1)))) GROUP BY t0.c1, t1.c59;
SELECT ALL t0.c1, t1.c59 FROM t0 FULL OUTER JOIN t1 ON (('1696662780' COLLATE NOCASE)==(((t1.c59)||(t0.c1)))) WHERE (CAST(HEX(DISTINCT t0.c1) AS REAL)) GROUP BY t0.c1, t1.c59 UNION SELECT ALL t0.c1, t1.c59 FROM t0 FULL OUTER JOIN t1 ON (('1696662780' COLLATE NOCASE)=(((t1.c59)||(t0.c1)))) WHERE ((NOT (CAST(HEX(DISTINCT t0.c1) AS REAL)))) GROUP BY t0.c1, t1.c59 UNION SELECT t0.c1, t1.c59 FROM t0 FULL OUTER JOIN t1 ON (('1696662780' COLLATE NOCASE)=(((t1.c59)||(t0.c1)))) WHERE (((CAST(HEX(DISTINCT t0.c1) AS REAL)) ISNULL)) GROUP BY t0.c1, t1.c59;
SELECT t0.c1, t1.c59 FROM t0 FULL OUTER JOIN t1 ON (('1696662780' COLLATE NOCASE)=(((t1.c59)||(t0.c1)))) GROUP BY t0.c1, t1.c59;
SELECT ALL rt0.c1, t0.c2, t0.c1, vt0.c0 FROM vt0, rt0, t0 GROUP BY rt0.c1, t0.c2, t0.c1, vt0.c0;
SELECT ALL rt0.c1, t0.c2, t0.c1, vt0.c0 FROM vt0, rt0, t0 GROUP BY rt0.c1, t0.c2, t0.c1, vt0.c0 HAVING ABS(LIKELIHOOD(DISTINCT COUNT(NULL), 0.7474319622396725)) UNION ALL SELECT ALL rt0.c1, t0.c2, t0.c1, vt0.c0 FROM vt0, rt0, t0 GROUP BY rt0.c1, t0.c2, t0.c1, vt0.c0 HAVING (NOT (ABS(LIKELIHOOD(DISTINCT COUNT(NULL), 0.7474319622396725)))) UNION ALL SELECT ALL rt0.c1, t0.c2, t0.c1, vt0.c0 FROM vt0, rt0, t0 GROUP BY rt0.c1, t0.c2, t0.c1, vt0.c0 HAVING ((ABS(LIKELIHOOD(DISTINCT COUNT(NULL), 0.7474319622396725))) ISNULL);
SELECT ALL rt0.c1, t0.c2, t0.c1, vt0.c0 FROM vt0, rt0, t0 GROUP BY rt0.c1, t0.c2, t0.c1, vt0.c0;
SELECT ALL rt0.c1, t0.c2, t0.c1, vt0.c0 FROM vt0, rt0, t0 GROUP BY rt0.c1, t0.c2, t0.c1, vt0.c0 HAVING ABS(LIKELIHOOD(DISTINCT COUNT(NULL), 0.7474319622396725)) UNION ALL SELECT ALL rt0.c1, t0.c2, t0.c1, vt0.c0 FROM vt0, rt0, t0 GROUP BY rt0.c1, t0.c2, t0.c1, vt0.c0 HAVING (NOT (ABS(LIKELIHOOD(DISTINCT COUNT(NULL), 0.7474319622396725)))) UNION ALL SELECT ALL rt0.c1, t0.c2, t0.c1, vt0.c0 FROM vt0, rt0, t0 GROUP BY rt0.c1, t0.c2, t0.c1, vt0.c0 HAVING ((ABS(LIKELIHOOD(DISTINCT COUNT(NULL), 0.7474319622396725))) ISNULL);
SELECT ALL rt0.c1, t0.c2, t0.c1, vt0.c0 FROM vt0, rt0, t0 GROUP BY rt0.c1, t0.c2, t0.c1, vt0.c0;
SELECT TOTAL((((t0.c2 IN ()))>>((- (t0.c2))))) FROM t1, t0, vt0 ORDER BY (((('0.48452392937469035') BETWEEN (t0.c0) AND (t0.c0)))&(((vt0.c0)=(t0.c0)))) DESC  NULLS LAST, ((('-802682469', ((((t1.c59)OR(vt0.c0)))OR('')), (- (vt0.c0)), CAST(t0.c2 AS INTEGER), t0.c2))>=(((t0.c2 IN ()), ((t1.c59)=(vt0.c0)), ((t0.c2)AND(t0.c0)), (t0.c1 IN (vt0.c0, t1.c59)), ((t1.c59) NOT BETWEEN (t0.c0) AND (t0.c2))))) DESC  NULLS FIRST;
SELECT ALL * FROM rt0, vt0 CROSS JOIN t1 ON ((((rt0.c2)==('-254347458')))+(((NULL)IS(t1.c59)))) RIGHT OUTER JOIN t0 ON CAST(LOWER(DISTINCT rt0.c0) AS TEXT);
SELECT * FROM rt0, vt0 CROSS JOIN t1 ON ((((rt0.c2)==('-254347458')))+(((NULL)IS(t1.c59)))) RIGHT OUTER JOIN t0 ON CAST(LOWER(DISTINCT rt0.c0) AS TEXT) WHERE (CASE -9.8974628E8  WHEN ((t1.c59) NOT BETWEEN (rt0.c0) AND (rt0.c1)) THEN rt0.c0 COLLATE BINARY WHEN CASE WHEN rt0.c2 THEN t1.c59 WHEN t1.c59 THEN t1.c59 WHEN t0.c0 THEN vt0.c0 ELSE rt0.c1 END THEN rtreenode(rt0.c0, rt0.c1) WHEN ((t1.c59) NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN (((t0.c1))>=((rt0.c2))) END) UNION ALL SELECT ALL * FROM rt0, vt0 CROSS JOIN t1 ON ((((rt0.c2)=('-254347458')))+(((NULL)IS(t1.c59)))) RIGHT OUTER JOIN t0 ON CAST(LOWER(DISTINCT rt0.c0) AS TEXT) WHERE ((NOT (CASE -9.8974628E8  WHEN ((t1.c59) NOT BETWEEN (rt0.c0) AND (rt0.c1)) THEN rt0.c0 COLLATE BINARY WHEN CASE WHEN rt0.c2 THEN t1.c59 WHEN t1.c59 THEN t1.c59 WHEN t0.c0 THEN vt0.c0 ELSE rt0.c1 END THEN rtreenode(rt0.c0, rt0.c1) WHEN ((t1.c59) NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN (((t0.c1))>=((rt0.c2))) END))) UNION ALL SELECT * FROM rt0, vt0 CROSS JOIN t1 ON ((((rt0.c2)==('-254347458')))+(((NULL)IS(t1.c59)))) RIGHT OUTER JOIN t0 ON CAST(LOWER(DISTINCT rt0.c0) AS TEXT) WHERE (((CASE -9.8974628E8  WHEN ((t1.c59) NOT BETWEEN (rt0.c0) AND (rt0.c1)) THEN rt0.c0 COLLATE BINARY WHEN CASE WHEN rt0.c2 THEN t1.c59 WHEN t1.c59 THEN t1.c59 WHEN t0.c0 THEN vt0.c0 ELSE rt0.c1 END THEN rtreenode(rt0.c0, rt0.c1) WHEN ((t1.c59) NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN (((t0.c1))>=((rt0.c2))) END) ISNULL));
SELECT ALL * FROM rt0, vt0 CROSS JOIN t1 ON ((((rt0.c2)==('-254347458')))+(((NULL)IS(t1.c59)))) RIGHT OUTER JOIN t0 ON CAST(LOWER(DISTINCT rt0.c0) AS TEXT);
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE ((((t1.c59 IN ())) NOT NULL)) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT ((((t1.c59 IN ())) NOT NULL)))) UNION SELECT DISTINCT * FROM t1 WHERE ((((((t1.c59 IN ())) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT ALL t1.c59 FROM t1 GROUP BY t1.c59;
SELECT t1.c59 FROM t1 WHERE (((0.21915481938275705) NOT NULL)) GROUP BY t1.c59 UNION SELECT ALL t1.c59 FROM t1 WHERE ((NOT (((0.21915481938275705) NOT NULL)))) GROUP BY t1.c59 UNION SELECT t1.c59 FROM t1 WHERE (((((0.21915481938275705) NOT NULL)) ISNULL)) GROUP BY t1.c59;
SELECT ALL t1.c59 FROM t1 GROUP BY t1.c59;
SELECT vt0.c0, rt0.c1, t1.c59, t0.c1 FROM t1, t0, rt0, vt0 GROUP BY vt0.c0, rt0.c1, t1.c59, t0.c1;
SELECT vt0.c0, rt0.c1, t1.c59, t0.c1 FROM t1, t0, rt0, vt0 GROUP BY vt0.c0, rt0.c1, t1.c59, t0.c1 HAVING MIN((- (GROUP_CONCAT(0.6518086338058996)))) UNION ALL SELECT ALL vt0.c0, rt0.c1, t1.c59, t0.c1 FROM t1, t0, rt0, vt0 GROUP BY vt0.c0, rt0.c1, t1.c59, t0.c1 HAVING (NOT (MIN((- (GROUP_CONCAT(0.6518086338058996)))))) UNION ALL SELECT ALL vt0.c0, rt0.c1, t1.c59, t0.c1 FROM t1, t0, rt0, vt0 GROUP BY vt0.c0, rt0.c1, t1.c59, t0.c1 HAVING ((MIN((- (GROUP_CONCAT(0.6518086338058996))))) ISNULL);
SELECT ALL * FROM t1, vt0;
SELECT ALL * FROM t1, vt0 WHERE (((((t1.c59)>=(vt0.c0)))IS(SQLITE_SOURCE_ID()))) UNION ALL SELECT * FROM t1, vt0 WHERE ((NOT (((((t1.c59)>=(vt0.c0)))IS(SQLITE_SOURCE_ID()))))) UNION ALL SELECT * FROM t1, vt0 WHERE (((((((t1.c59)>=(vt0.c0)))IS(SQLITE_SOURCE_ID()))) ISNULL));
SELECT ALL * FROM t1, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (x'') UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (x''))) UNION SELECT DISTINCT * FROM vt0 WHERE (((x'') ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0, t1.c59 FROM t1, vt0 GROUP BY vt0.c0, t1.c59;
SELECT ALL vt0.c0, t1.c59 FROM t1, vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (x'b0c8a4ce'))) IS TRUE)) GROUP BY vt0.c0, t1.c59 UNION SELECT ALL vt0.c0, t1.c59 FROM t1, vt0 WHERE ((NOT (((((vt0.c0) BETWEEN (vt0.c0) AND (x'b0c8a4ce'))) IS TRUE)))) GROUP BY vt0.c0, t1.c59 UNION SELECT vt0.c0, t1.c59 FROM t1, vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (x'b0c8a4ce'))) IS TRUE)) ISNULL)) GROUP BY vt0.c0, t1.c59;
SELECT vt0.c0, t1.c59 FROM t1, vt0 GROUP BY vt0.c0, t1.c59;
SELECT ALL t1.c59, rt0.c2, t0.c1, t0.c0 FROM t0, rt0, t1 GROUP BY t1.c59, rt0.c2, t0.c1, t0.c0;
SELECT ALL t1.c59, rt0.c2, t0.c1, t0.c0 FROM t0, rt0, t1 GROUP BY t1.c59, rt0.c2, t0.c1, t0.c0 HAVING CAST(CASE WHEN 0x72549581 THEN rt0.c0 WHEN GROUP_CONCAT(MIN(SUM(COUNT(*)))) THEN MIN(SUM(COUNT(TOTAL(SUM(rt0.c0))))) WHEN rt0.c1 THEN MAX(SUM(t0.c2)) END AS NUMERIC) UNION ALL SELECT ALL t1.c59, rt0.c2, t0.c1, t0.c0 FROM t0, rt0, t1 GROUP BY t1.c59, rt0.c2, t0.c1, t0.c0 HAVING (NOT (CAST(CASE WHEN 0x72549581 THEN rt0.c0 WHEN GROUP_CONCAT(MIN(SUM(COUNT(*)))) THEN MIN(SUM(COUNT(TOTAL(SUM(rt0.c0))))) WHEN rt0.c1 THEN MAX(SUM(t0.c2)) END AS NUMERIC))) UNION ALL SELECT ALL t1.c59, rt0.c2, t0.c1, t0.c0 FROM t0, rt0, t1 GROUP BY t1.c59, rt0.c2, t0.c1, t0.c0 HAVING ((CAST(CASE WHEN 0X72549581 THEN rt0.c0 WHEN GROUP_CONCAT(MIN(SUM(COUNT(*)))) THEN MIN(SUM(COUNT(TOTAL(SUM(rt0.c0))))) WHEN rt0.c1 THEN MAX(SUM(t0.c2)) END AS NUMERIC)) ISNULL);
SELECT ALL * FROM rt0, vt0, t1;
SELECT * FROM rt0, vt0, t1 NOT INDEXED WHERE (t1.c59) UNION ALL SELECT ALL * FROM rt0, vt0, t1 WHERE ((NOT (t1.c59))) UNION ALL SELECT ALL * FROM rt0, vt0, t1 WHERE (((t1.c59) ISNULL));
SELECT ALL * FROM rt0, vt0, t1;
SELECT DISTINCT t0.c2, t0.c1, vt0.c0, t1.c59 FROM t1, t0, vt0;
SELECT DISTINCT t0.c2, t0.c1, vt0.c0, t1.c59 FROM t1, t0, vt0 WHERE ((~ (((t0.c0)<<(vt0.c0))))) UNION SELECT DISTINCT t0.c2, t0.c1, vt0.c0, t1.c59 FROM t1, t0, vt0 WHERE ((NOT ((~ (((t0.c0)<<(vt0.c0))))))) UNION SELECT DISTINCT t0.c2, t0.c1, vt0.c0, t1.c59 FROM t1, t0, vt0 WHERE ((((~ (((t0.c0)<<(vt0.c0))))) ISNULL));
SELECT DISTINCT t0.c2, t0.c1, vt0.c0, t1.c59 FROM t1, t0, vt0;
SELECT ALL rt0.c0 FROM rt0, t0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, t0 WHERE (CASE WHEN rt0.c1 THEN ((rt0.c1)OR(rt0.c1)) WHEN ((((((((t0.c2)OR(t0.c2)))OR(t0.c1)))AND(rt0.c0)))OR(t0.c1)) THEN ((t0.c2)<=(rt0.c1)) WHEN ((rt0.c2)>=(t0.c1)) THEN ((t0.c2)>(rt0.c2)) END) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0, t0 WHERE ((NOT (CASE WHEN rt0.c1 THEN ((rt0.c1)OR(rt0.c1)) WHEN ((((((((t0.c2)OR(t0.c2)))OR(t0.c1)))AND(rt0.c0)))OR(t0.c1)) THEN ((t0.c2)<=(rt0.c1)) WHEN ((rt0.c2)>=(t0.c1)) THEN ((t0.c2)>(rt0.c2)) END))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0, t0 WHERE (((CASE WHEN rt0.c1 THEN ((rt0.c1)OR(rt0.c1)) WHEN ((((((((t0.c2)OR(t0.c2)))OR(t0.c1)))AND(rt0.c0)))OR(t0.c1)) THEN ((t0.c2)<=(rt0.c1)) WHEN ((rt0.c2)>=(t0.c1)) THEN ((t0.c2)>(rt0.c2)) END) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, t0 GROUP BY rt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((vt0.c0)==(MIN(MIN(AVG(vt0.c0))))))AND(GROUP_CONCAT(GROUP_CONCAT(vt0.c0)))))OR(((SUM(vt0.c0)) NOTNULL))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((((((vt0.c0)=(MIN(MIN(AVG(vt0.c0))))))AND(GROUP_CONCAT(GROUP_CONCAT(vt0.c0)))))OR(((SUM(vt0.c0)) NOTNULL))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((((vt0.c0)=(MIN(MIN(AVG(vt0.c0))))))AND(GROUP_CONCAT(GROUP_CONCAT(vt0.c0)))))OR(((SUM(vt0.c0)) NOTNULL)))) ISNULL);
SELECT t0.c2, vt0.c0 FROM t0, vt0 INDEXED BY i82;
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt0 ON (NOT (CAST(vt0.c0 AS REAL)));
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt0 ON (NOT (CAST(vt0.c0 AS REAL))) WHERE ((0.6600468846372224 IN ())) UNION SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt0 ON (NOT (CAST(vt0.c0 AS REAL))) WHERE ((NOT ((0.6600468846372224 IN ())))) UNION SELECT DISTINCT * FROM rt0 NOT INDEXED RIGHT OUTER JOIN vt0 ON (NOT (CAST(vt0.c0 AS REAL))) WHERE ((((0.6600468846372224 IN ())) ISNULL));
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt0 ON (NOT (CAST(vt0.c0 AS REAL)));
SELECT ALL t0.c2, t0.c0, t0.c1, rt0.c0 FROM rt0 RIGHT OUTER JOIN t1 ON ((TYPEOF(DISTINCT rt0.c2)) BETWEEN (((rt0.c0) NOT NULL)) AND ((((t1.c59))>((t0.c1))))) INNER JOIN vt0 ON (((vt0.c0)LIKE(t0.c1)) IN (CASE rt0.c1  WHEN t0.c2 THEN t0.c1 END)) RIGHT OUTER JOIN t0 ON ((CASE rt0.c0  WHEN rt0.c0 THEN 0X627850e4 END) BETWEEN ((t1.c59 IN (rt0.c2))) AND (t0.c1)) GROUP BY t0.c2, t0.c0, t0.c1, rt0.c0;
SELECT ALL t1.c59, vt0.c0 FROM vt0 FULL OUTER JOIN t1 ON ((CAST(vt0.c0 AS NUMERIC)) NOTNULL) GROUP BY t1.c59, vt0.c0;
SELECT t1.c59, vt0.c0 FROM vt0 FULL OUTER JOIN t1 ON ((CAST(vt0.c0 AS NUMERIC)) NOTNULL) GROUP BY t1.c59, vt0.c0 HAVING CAST(COUNT(*) AS INTEGER) UNION ALL SELECT t1.c59, vt0.c0 FROM vt0 FULL OUTER JOIN t1 ON ((CAST(vt0.c0 AS NUMERIC)) NOTNULL) GROUP BY t1.c59, vt0.c0 HAVING (NOT (CAST(COUNT(*) AS INTEGER))) UNION ALL SELECT ALL t1.c59, vt0.c0 FROM vt0 FULL OUTER JOIN t1 ON ((CAST(vt0.c0 AS NUMERIC)) NOTNULL) GROUP BY t1.c59, vt0.c0 HAVING ((CAST(COUNT(*) AS INTEGER)) ISNULL);
SELECT ALL t1.c59, vt0.c0 FROM vt0 FULL OUTER JOIN t1 ON ((CAST(vt0.c0 AS NUMERIC)) NOTNULL) GROUP BY t1.c59, vt0.c0;
SELECT t1.c59, vt0.c0 FROM vt0 FULL OUTER JOIN t1 ON ((CAST(vt0.c0 AS NUMERIC)) NOTNULL) GROUP BY t1.c59, vt0.c0 HAVING CAST(COUNT(*) AS INTEGER) UNION ALL SELECT t1.c59, vt0.c0 FROM vt0 FULL OUTER JOIN t1 ON ((CAST(vt0.c0 AS NUMERIC)) NOTNULL) GROUP BY t1.c59, vt0.c0 HAVING (NOT (CAST(COUNT(*) AS INTEGER))) UNION ALL SELECT ALL t1.c59, vt0.c0 FROM vt0 FULL OUTER JOIN t1 ON ((CAST(vt0.c0 AS NUMERIC)) NOTNULL) GROUP BY t1.c59, vt0.c0 HAVING ((CAST(COUNT(*) AS INTEGER)) ISNULL);
SELECT ALL t1.c59, vt0.c0 FROM vt0 FULL OUTER JOIN t1 ON ((CAST(vt0.c0 AS NUMERIC)) NOTNULL) GROUP BY t1.c59, vt0.c0;
SELECT rt0.c2, vt0.c0, t0.c0, t1.c59, t0.c1, rt0.c1, t0.c2 FROM t1, vt0, t0, rt0;
SELECT rt0.c2, vt0.c0, t0.c0, t1.c59, t0.c1, rt0.c1, t0.c2 FROM t1, vt0, t0, rt0 WHERE (0x258c3c46) UNION ALL SELECT rt0.c2, vt0.c0, t0.c0, t1.c59, t0.c1, rt0.c1, t0.c2 FROM t1, vt0, t0, rt0 WHERE ((NOT (0X258c3c46))) UNION ALL SELECT rt0.c2, vt0.c0, t0.c0, t1.c59, t0.c1, rt0.c1, t0.c2 FROM t1, vt0, t0, rt0 WHERE (((0X258c3c46) ISNULL));
SELECT rt0.c2, vt0.c0, t0.c0, t1.c59, t0.c1, rt0.c1, t0.c2 FROM t1, vt0, t0, rt0;
SELECT DISTINCT t0.c2, rt0.c2, t1.c59, t0.c1, t0.c0, vt0.c0, rt0.c1 FROM t0, t1, rt0, vt0;
SELECT DISTINCT t0.c2, rt0.c2, t1.c59, t0.c1, t0.c0, vt0.c0, rt0.c1 FROM t0, t1, rt0, vt0 WHERE (((rt0.c2 COLLATE RTRIM)>>(((0.9454695099573088) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) UNION SELECT DISTINCT t0.c2, rt0.c2, t1.c59, t0.c1, t0.c0, vt0.c0, rt0.c1 FROM t0, t1, rt0, vt0 WHERE ((NOT (((rt0.c2 COLLATE RTRIM)>>(((0.9454695099573088) NOT BETWEEN (rt0.c2) AND (rt0.c1))))))) UNION SELECT DISTINCT t0.c2, rt0.c2, t1.c59, t0.c1, t0.c0, vt0.c0, rt0.c1 FROM t0, t1, rt0, vt0 WHERE (((((rt0.c2 COLLATE RTRIM)>>(((0.9454695099573088) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) ISNULL));
SELECT DISTINCT t0.c2, rt0.c2, t1.c59, t0.c1, t0.c0, vt0.c0, rt0.c1 FROM t0, t1, rt0, vt0;
SELECT t0.c2, t1.c59 FROM t1, vt0, t0 GROUP BY t0.c2, t1.c59;
SELECT ALL t0.c2, t1.c59 FROM t1, vt0, t0 WHERE (CASE (t1.c59 IN (t0.c2, t0.c1))  WHEN (NULL IN ()) THEN (vt0.c0 IN (t1.c59, vt0.c0)) END) GROUP BY t0.c2, t1.c59 UNION SELECT t0.c2, t1.c59 FROM t1, vt0, t0 WHERE ((NOT (CASE (t1.c59 IN (t0.c2, t0.c1))  WHEN (NULL IN ()) THEN (vt0.c0 IN (t1.c59, vt0.c0)) END))) GROUP BY t0.c2, t1.c59 UNION SELECT t0.c2, t1.c59 FROM t1, vt0, t0 WHERE (((CASE (t1.c59 IN (t0.c2, t0.c1))  WHEN (NULL IN ()) THEN (vt0.c0 IN (t1.c59, vt0.c0)) END) ISNULL)) GROUP BY t0.c2, t1.c59;
SELECT t0.c2, t1.c59 FROM t1, vt0, t0 GROUP BY t0.c2, t1.c59;
SELECT vt0.c0, t1.c59 FROM t1, vt0 GROUP BY vt0.c0, t1.c59;
SELECT vt0.c0, t1.c59 FROM t1, vt0 GROUP BY vt0.c0, t1.c59 HAVING MIN(SUM(COUNT(GROUP_CONCAT(COUNT(GROUP_CONCAT(MAX(SUM(MIN(COUNT(*)))))))))) UNION ALL SELECT ALL vt0.c0, t1.c59 FROM t1, vt0 GROUP BY vt0.c0, t1.c59 HAVING (NOT (MIN(SUM(COUNT(GROUP_CONCAT(COUNT(GROUP_CONCAT(MAX(SUM(MIN(COUNT(*)))))))))))) UNION ALL SELECT vt0.c0, t1.c59 FROM t1, vt0 GROUP BY vt0.c0, t1.c59 HAVING ((MIN(SUM(COUNT(GROUP_CONCAT(COUNT(GROUP_CONCAT(MAX(SUM(MIN(COUNT(*))))))))))) ISNULL);
SELECT * FROM rt0, t0;
SELECT * FROM rt0, t0 WHERE (LOWER(DISTINCT (((('')OR(t0.c2)))OR(rt0.c0)))) UNION ALL SELECT * FROM rt0, t0 WHERE ((NOT (LOWER(DISTINCT (((('')OR(t0.c2)))OR(rt0.c0)))))) UNION ALL SELECT * FROM rt0, t0 WHERE (((LOWER(DISTINCT (((('')OR(t0.c2)))OR(rt0.c0)))) ISNULL));
SELECT * FROM rt0, t0;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (((t1.c59) IS FALSE) COLLATE NOCASE) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (((t1.c59) IS FALSE) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM t1 WHERE (((((t1.c59) IS FALSE) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT ALL vt0.c0, t1.c59 FROM t1 RIGHT OUTER JOIN vt0 ON (((t1.c59 IN ())) NOT NULL) GROUP BY vt0.c0, t1.c59;
SELECT ALL vt0.c0, t1.c59 FROM t1 RIGHT OUTER JOIN vt0 ON (((t1.c59 IN ())) NOT NULL) WHERE (vt0.c0) GROUP BY vt0.c0, t1.c59 UNION SELECT vt0.c0, t1.c59 FROM t1 RIGHT OUTER JOIN vt0 ON (((t1.c59 IN ())) NOT NULL) WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0, t1.c59 UNION SELECT ALL vt0.c0, t1.c59 FROM t1 RIGHT OUTER JOIN vt0 ON (((t1.c59 IN ())) NOT NULL) WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0, t1.c59;
SELECT ALL vt0.c0, t1.c59 FROM t1 RIGHT OUTER JOIN vt0 ON (((t1.c59 IN ())) NOT NULL) GROUP BY vt0.c0, t1.c59;
SELECT ALL t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1;
SELECT t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1 HAVING TOTAL(TOTAL(t0.c2)) UNION ALL SELECT ALL t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1 HAVING (NOT (TOTAL(TOTAL(t0.c2)))) UNION ALL SELECT t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1 HAVING ((TOTAL(TOTAL(t0.c2))) ISNULL);
SELECT rt0.c0, t0.c0, rt0.c2, vt0.c0, t0.c2, rt0.c1 FROM t1, rt0, t0, vt0;
SELECT rt0.c0, t0.c0, rt0.c2, vt0.c0, t0.c2, rt0.c1 FROM t1, rt0, t0, vt0 WHERE ((((rt0.c1)) BETWEEN ((((((((((t0.c1)AND(rt0.c2)))AND(t0.c1)))OR(t0.c0)))AND(t1.c59)))) AND ((t0.c2 COLLATE BINARY)))) UNION ALL SELECT ALL rt0.c0, t0.c0, rt0.c2, vt0.c0, t0.c2, rt0.c1 FROM t1, rt0, t0, vt0 WHERE ((NOT ((((rt0.c1)) BETWEEN ((((((((((t0.c1)AND(rt0.c2)))AND(t0.c1)))OR(t0.c0)))AND(t1.c59)))) AND ((t0.c2 COLLATE BINARY)))))) UNION ALL SELECT rt0.c0, t0.c0, rt0.c2, vt0.c0, t0.c2, rt0.c1 FROM t1, rt0, t0, vt0 WHERE ((((((rt0.c1)) BETWEEN ((((((((((t0.c1)AND(rt0.c2)))AND(t0.c1)))OR(t0.c0)))AND(t1.c59)))) AND ((t0.c2 COLLATE BINARY)))) ISNULL));
SELECT rt0.c0, t0.c0, rt0.c2, vt0.c0, t0.c2, rt0.c1 FROM t1, rt0, t0, vt0;
SELECT DISTINCT * FROM rt0, t0, vt0;
SELECT DISTINCT * FROM rt0, t0, vt0 NOT INDEXED WHERE (((((((vt0.c0) NOT NULL))OR(rt0.c1 COLLATE RTRIM)))AND(((t0.c0)OR(vt0.c0))))) UNION SELECT DISTINCT * FROM rt0, t0, vt0 WHERE ((NOT (((((((vt0.c0) NOT NULL))OR(rt0.c1 COLLATE RTRIM)))AND(((t0.c0)OR(vt0.c0))))))) UNION SELECT DISTINCT * FROM rt0, t0 NOT INDEXED, vt0 WHERE (((((((((vt0.c0) NOT NULL))OR(rt0.c1 COLLATE RTRIM)))AND(((t0.c0)OR(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0, t0, vt0;
SELECT ALL rt0.c0, t0.c0, t0.c1 FROM vt0, t0 NATURAL JOIN rt0 GROUP BY rt0.c0, t0.c0, t0.c1;
SELECT rt0.c0, t0.c0, t0.c1 FROM vt0, t0 NATURAL JOIN rt0 WHERE ((~ (((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0))))) GROUP BY rt0.c0, t0.c0, t0.c1 UNION SELECT ALL rt0.c0, t0.c0, t0.c1 FROM vt0, t0 NATURAL JOIN rt0 WHERE ((NOT ((~ (((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0))))))) GROUP BY rt0.c0, t0.c0, t0.c1 UNION SELECT rt0.c0, t0.c0, t0.c1 FROM vt0, t0 NATURAL JOIN rt0 WHERE ((((~ (((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0))))) ISNULL)) GROUP BY rt0.c0, t0.c0, t0.c1;
SELECT ALL rt0.c0, t0.c0, t0.c1 FROM vt0, t0 NATURAL JOIN rt0 GROUP BY rt0.c0, t0.c0, t0.c1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((COUNT(*) IN (vt0.c0))) BETWEEN (CAST(AVG(COUNT(*)) AS REAL)) AND (CASE MIN(vt0.c0)  WHEN vt0.c0 THEN COUNT(vt0.c0) ELSE vt0.c0 END)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((COUNT(*) IN (vt0.c0))) BETWEEN (CAST(AVG(COUNT(*)) AS REAL)) AND (CASE MIN(vt0.c0)  WHEN vt0.c0 THEN COUNT(vt0.c0) ELSE vt0.c0 END)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((COUNT(*) IN (vt0.c0))) BETWEEN (CAST(AVG(COUNT(*)) AS REAL)) AND (CASE MIN(vt0.c0)  WHEN vt0.c0 THEN COUNT(vt0.c0) ELSE vt0.c0 END))) ISNULL);
SELECT ALL t1.c59 FROM t1;
SELECT ALL t1.c59 FROM t1 WHERE (t1.c59) UNION ALL SELECT t1.c59 FROM t1 WHERE ((NOT (t1.c59))) UNION ALL SELECT t1.c59 FROM t1 WHERE (((t1.c59) ISNULL));
SELECT ALL t1.c59 FROM t1;
SELECT DISTINCT * FROM vt0, t1, t0, rt0;
SELECT DISTINCT * FROM vt0, t1, t0, rt0 WHERE (CAST(((rt0.c1) NOT BETWEEN (vt0.c0) AND (t1.c59)) AS NUMERIC)) UNION SELECT DISTINCT * FROM vt0, t1, t0, rt0 WHERE ((NOT (CAST(((rt0.c1) NOT BETWEEN (vt0.c0) AND (t1.c59)) AS NUMERIC)))) UNION SELECT DISTINCT * FROM vt0, t1, t0, rt0 WHERE (((CAST(((rt0.c1) NOT BETWEEN (vt0.c0) AND (t1.c59)) AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM vt0, t1, t0, rt0;
SELECT ALL t0.c0, t0.c1, t0.c2, t1.c59 FROM t0, t1 GROUP BY t0.c0, t0.c1, t0.c2, t1.c59;
SELECT t0.c0, t0.c1, t0.c2, t1.c59 FROM t0, t1 WHERE (0X4c99125d) GROUP BY t0.c0, t0.c1, t0.c2, t1.c59 UNION SELECT ALL t0.c0, t0.c1, t0.c2, t1.c59 FROM t0, t1 WHERE ((NOT (0x4c99125d))) GROUP BY t0.c0, t0.c1, t0.c2, t1.c59 UNION SELECT ALL t0.c0, t0.c1, t0.c2, t1.c59 FROM t0, t1 WHERE (((0x4c99125d) ISNULL)) GROUP BY t0.c0, t0.c1, t0.c2, t1.c59;
SELECT ALL t0.c0, t0.c1, t0.c2, t1.c59 FROM t0, t1 GROUP BY t0.c0, t0.c1, t0.c2, t1.c59;
SELECT ALL t1.c59, t0.c0, t0.c2 FROM t1, t0, vt0 GROUP BY t1.c59, t0.c0, t0.c2;
SELECT t1.c59, t0.c0, t0.c2 FROM t1, t0, vt0 GROUP BY t1.c59, t0.c0, t0.c2 HAVING MAX(COUNT(t0.c2)) UNION ALL SELECT ALL t1.c59, t0.c0, t0.c2 FROM t1, t0, vt0 GROUP BY t1.c59, t0.c0, t0.c2 HAVING (NOT (MAX(COUNT(t0.c2)))) UNION ALL SELECT ALL t1.c59, t0.c0, t0.c2 FROM t1, t0, vt0 GROUP BY t1.c59, t0.c0, t0.c2 HAVING ((MAX(COUNT(t0.c2))) ISNULL);
SELECT ALL vt0.c0, t0.c1, rt0.c1, t1.c59, rt0.c2, t0.c0, rt0.c0 FROM vt0, t0, rt0 LEFT OUTER JOIN t1 ON CAST(t0.c0 AS BLOB);
SELECT vt0.c0, t0.c1, rt0.c1, t1.c59, rt0.c2, t0.c0, rt0.c0 FROM vt0, t0, rt0 LEFT OUTER JOIN t1 ON CAST(t0.c0 AS BLOB) WHERE (CAST(((rt0.c1) IS FALSE) AS TEXT)) UNION ALL SELECT ALL vt0.c0, t0.c1, rt0.c1, t1.c59, rt0.c2, t0.c0, rt0.c0 FROM vt0, t0, rt0 LEFT OUTER JOIN t1 ON CAST(t0.c0 AS BLOB) WHERE ((NOT (CAST(((rt0.c1) IS FALSE) AS TEXT)))) UNION ALL SELECT ALL vt0.c0, t0.c1, rt0.c1, t1.c59, rt0.c2, t0.c0, rt0.c0 FROM vt0, t0, rt0 LEFT OUTER JOIN t1 ON CAST(t0.c0 AS BLOB) WHERE (((CAST(((rt0.c1) IS FALSE) AS TEXT)) ISNULL));
SELECT ALL vt0.c0, t0.c1, rt0.c1, t1.c59, rt0.c2, t0.c0, rt0.c0 FROM vt0, t0, rt0 LEFT OUTER JOIN t1 ON CAST(t0.c0 AS BLOB);
SELECT DISTINCT * FROM t1, rt0, vt0 NOT INDEXED;
SELECT DISTINCT * FROM t1, rt0, vt0 WHERE (CASE ((0X67fdcaed) IS TRUE)  WHEN (((t1.c59)) BETWEEN ((rt0.c2)) AND ((rt0.c1))) THEN CASE vt0.c0  WHEN rt0.c0 THEN rt0.c1 END WHEN (rt0.c0 IN (rt0.c1)) THEN ((rt0.c2)>(rt0.c1)) WHEN CASE WHEN rt0.c0 THEN vt0.c0 END THEN ((rt0.c2)==(t1.c59)) ELSE LTRIM(t1.c59) END) UNION SELECT DISTINCT * FROM t1, rt0, vt0 WHERE ((NOT (CASE ((0x67fdcaed) IS TRUE)  WHEN (((t1.c59)) BETWEEN ((rt0.c2)) AND ((rt0.c1))) THEN CASE vt0.c0  WHEN rt0.c0 THEN rt0.c1 END WHEN (rt0.c0 IN (rt0.c1)) THEN ((rt0.c2)>(rt0.c1)) WHEN CASE WHEN rt0.c0 THEN vt0.c0 END THEN ((rt0.c2)=(t1.c59)) ELSE LTRIM(t1.c59) END))) UNION SELECT DISTINCT * FROM t1, rt0, vt0 WHERE (((CASE ((0X67fdcaed) IS TRUE)  WHEN (((t1.c59)) BETWEEN ((rt0.c2)) AND ((rt0.c1))) THEN CASE vt0.c0  WHEN rt0.c0 THEN rt0.c1 END WHEN (rt0.c0 IN (rt0.c1)) THEN ((rt0.c2)>(rt0.c1)) WHEN CASE WHEN rt0.c0 THEN vt0.c0 END THEN ((rt0.c2)==(t1.c59)) ELSE LTRIM(t1.c59) END) ISNULL));
SELECT DISTINCT * FROM t1, rt0, vt0 NOT INDEXED;
SELECT ALL rt0.c2, vt0.c0 FROM t1, vt0, rt0 GROUP BY rt0.c2, vt0.c0;
SELECT rt0.c2, vt0.c0 FROM t1, vt0, rt0 WHERE (LIKELY(CAST(t1.c59 AS NUMERIC))) GROUP BY rt0.c2, vt0.c0 UNION SELECT ALL rt0.c2, vt0.c0 FROM t1, vt0, rt0 WHERE ((NOT (LIKELY(CAST(t1.c59 AS NUMERIC))))) GROUP BY rt0.c2, vt0.c0 UNION SELECT ALL rt0.c2, vt0.c0 FROM t1, vt0, rt0 WHERE (((LIKELY(CAST(t1.c59 AS NUMERIC))) ISNULL)) GROUP BY rt0.c2, vt0.c0;
SELECT ALL rt0.c2, vt0.c0 FROM t1, vt0, rt0 GROUP BY rt0.c2, vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(COUNT(GROUP_CONCAT(0.6906486531551043))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(COUNT(GROUP_CONCAT(0.6906486531551043))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(COUNT(GROUP_CONCAT(0.6906486531551043)))) ISNULL);
SELECT ALL vt0.c0, t1.c59 FROM vt0 INDEXED BY i82 NATURAL JOIN t1;
SELECT DISTINCT * FROM vt0, t0, rt0, t1;
SELECT DISTINCT * FROM vt0, t0, rt0, t1 WHERE (rt0.c2) UNION SELECT DISTINCT * FROM vt0, t0, rt0, t1 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT * FROM vt0, t0, rt0, t1 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT * FROM vt0, t0, rt0, t1;
SELECT t1.c59, vt0.c0 FROM t1, vt0 GROUP BY t1.c59, vt0.c0;
SELECT ALL t1.c59, vt0.c0 FROM t1, vt0 WHERE ((((~ (vt0.c0))) BETWEEN ((((t1.c59, t1.c59, vt0.c0)) NOT BETWEEN ((vt0.c0, t1.c59, t1.c59)) AND ((vt0.c0, vt0.c0, t1.c59)))) AND ((t1.c59 IN ())))) GROUP BY t1.c59, vt0.c0 UNION SELECT t1.c59, vt0.c0 FROM t1, vt0 WHERE ((NOT ((((~ (vt0.c0))) BETWEEN ((((t1.c59, t1.c59, vt0.c0)) NOT BETWEEN ((vt0.c0, t1.c59, t1.c59)) AND ((vt0.c0, vt0.c0, t1.c59)))) AND ((t1.c59 IN ())))))) GROUP BY t1.c59, vt0.c0 UNION SELECT t1.c59, vt0.c0 FROM t1, vt0 WHERE ((((((~ (vt0.c0))) BETWEEN ((((t1.c59, t1.c59, vt0.c0)) NOT BETWEEN ((vt0.c0, t1.c59, t1.c59)) AND ((vt0.c0, vt0.c0, t1.c59)))) AND ((t1.c59 IN ())))) ISNULL)) GROUP BY t1.c59, vt0.c0;
SELECT t1.c59, vt0.c0 FROM t1, vt0 GROUP BY t1.c59, vt0.c0;
SELECT ALL t1.c59 FROM t1 GROUP BY t1.c59;
SELECT t1.c59 FROM t1 GROUP BY t1.c59 HAVING x'' UNION ALL SELECT ALL t1.c59 FROM t1 GROUP BY t1.c59 HAVING (NOT (x'')) UNION ALL SELECT t1.c59 FROM t1 GROUP BY t1.c59 HAVING ((x'') ISNULL);
SELECT ALL t1.c59 FROM t1 GROUP BY t1.c59;
SELECT t1.c59 FROM t1 GROUP BY t1.c59 HAVING x'' UNION ALL SELECT ALL t1.c59 FROM t1 GROUP BY t1.c59 HAVING (NOT (x'')) UNION ALL SELECT t1.c59 FROM t1 GROUP BY t1.c59 HAVING ((x'') ISNULL);
SELECT ALL t1.c59 FROM t1 GROUP BY t1.c59;
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((CAST(vt0.c0 AS INTEGER), CASE vt0.c0  WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END, vt0.c0 COLLATE RTRIM)) AND ((((vt0.c0)IS(vt0.c0)), vt0.c0 COLLATE NOCASE, (vt0.c0 IN ()))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((CAST(vt0.c0 AS INTEGER), CASE vt0.c0  WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END, vt0.c0 COLLATE RTRIM)) AND ((((vt0.c0)IS(vt0.c0)), vt0.c0 COLLATE NOCASE, (vt0.c0 IN ()))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((CAST(vt0.c0 AS INTEGER), CASE vt0.c0  WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END, vt0.c0 COLLATE RTRIM)) AND ((((vt0.c0)IS(vt0.c0)), vt0.c0 COLLATE NOCASE, (vt0.c0 IN ()))))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM rt0, t0 FULL OUTER JOIN vt0 ON 'r+.';
SELECT DISTINCT * FROM rt0, t0 FULL OUTER JOIN vt0 ON 'r+.' WHERE (CAST(((rt0.c1)|(rt0.c0)) AS BLOB)) UNION SELECT DISTINCT * FROM rt0, t0 FULL OUTER JOIN vt0 ON 'r+.' WHERE ((NOT (CAST(((rt0.c1)|(rt0.c0)) AS BLOB)))) UNION SELECT DISTINCT * FROM rt0, t0 FULL OUTER JOIN vt0 ON 'r+.' WHERE (((CAST(((rt0.c1)|(rt0.c0)) AS BLOB)) ISNULL));
SELECT DISTINCT * FROM rt0, t0 FULL OUTER JOIN vt0 ON 'r+.';
SELECT t0.c2 FROM vt0, t1 LEFT OUTER JOIN t0 ON (((CAST(t0.c2 AS NUMERIC)))>=((t0.c1))) GROUP BY t0.c2;
SELECT t0.c2 FROM vt0, t1 LEFT OUTER JOIN t0 ON (((CAST(t0.c2 AS NUMERIC)))>=((t0.c1))) WHERE (((x'2dbd') NOT NULL)) GROUP BY t0.c2 UNION SELECT t0.c2 FROM vt0, t1 LEFT OUTER JOIN t0 ON (((CAST(t0.c2 AS NUMERIC)))>=((t0.c1))) WHERE ((NOT (((x'2dbd') NOT NULL)))) GROUP BY t0.c2 UNION SELECT t0.c2 FROM vt0, t1 LEFT OUTER JOIN t0 ON (((CAST(t0.c2 AS NUMERIC)))>=((t0.c1))) WHERE (((((x'2dbd') NOT NULL)) ISNULL)) GROUP BY t0.c2;
SELECT t0.c2 FROM vt0, t1 LEFT OUTER JOIN t0 ON (((CAST(t0.c2 AS NUMERIC)))>=((t0.c1))) GROUP BY t0.c2;
SELECT t0.c0, t1.c59, t0.c1, t0.c2 FROM vt0, t1, rt0, t0 GROUP BY t0.c0, t1.c59, t0.c1, t0.c2;
SELECT ALL t0.c0, t1.c59, t0.c1, t0.c2 FROM vt0, t1, rt0, t0 GROUP BY t0.c0, t1.c59, t0.c1, t0.c2 HAVING CASE WHEN ((t0.c1) NOT NULL) THEN (NOT (COUNT(t0.c0))) END UNION ALL SELECT t0.c0, t1.c59, t0.c1, t0.c2 FROM vt0, t1, rt0, t0 GROUP BY t0.c0, t1.c59, t0.c1, t0.c2 HAVING (NOT (CASE WHEN ((t0.c1) NOT NULL) THEN (NOT (COUNT(t0.c0))) END)) UNION ALL SELECT ALL t0.c0, t1.c59, t0.c1, t0.c2 FROM vt0, t1, rt0, t0 GROUP BY t0.c0, t1.c59, t0.c1, t0.c2 HAVING ((CASE WHEN ((t0.c1) NOT NULL) THEN (NOT (COUNT(t0.c0))) END) ISNULL);
SELECT t0.c0, t1.c59, t0.c1, t0.c2 FROM vt0, t1, rt0, t0 GROUP BY t0.c0, t1.c59, t0.c1, t0.c2;
SELECT ALL t0.c0, t1.c59, t0.c1, t0.c2 FROM vt0, t1, rt0, t0 GROUP BY t0.c0, t1.c59, t0.c1, t0.c2 HAVING CASE WHEN ((t0.c1) NOT NULL) THEN (NOT (COUNT(t0.c0))) END UNION ALL SELECT t0.c0, t1.c59, t0.c1, t0.c2 FROM vt0, t1, rt0, t0 GROUP BY t0.c0, t1.c59, t0.c1, t0.c2 HAVING (NOT (CASE WHEN ((t0.c1) NOT NULL) THEN (NOT (COUNT(t0.c0))) END)) UNION ALL SELECT ALL t0.c0, t1.c59, t0.c1, t0.c2 FROM vt0, t1, rt0, t0 GROUP BY t0.c0, t1.c59, t0.c1, t0.c2 HAVING ((CASE WHEN ((t0.c1) NOT NULL) THEN (NOT (COUNT(t0.c0))) END) ISNULL);
SELECT t0.c0, t1.c59, t0.c1, t0.c2 FROM vt0, t1, rt0, t0 GROUP BY t0.c0, t1.c59, t0.c1, t0.c2;
SELECT TOTAL(NULLIF(DISTINCT ((t0.c2) ISNULL), (((t0.c1))=((t0.c2))))) FROM t1, rt0, t0;
SELECT rt0.c0 FROM rt0;
SELECT rt0.c0 FROM rt0 WHERE ((- ((- (rt0.c1))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT ((- ((- (rt0.c1))))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE ((((- ((- (rt0.c1))))) ISNULL));
SELECT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE (COALESCE(CAST(rt0.c1 AS INTEGER), json_array_length(rt0.c2, rt0.c0))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT (COALESCE(CAST(rt0.c1 AS INTEGER), json_array_length(rt0.c2, rt0.c0))))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((COALESCE(CAST(rt0.c1 AS INTEGER), json_array_length(rt0.c2, rt0.c0))) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT ALL rt0.c2, rt0.c1, t0.c2, rt0.c0, t0.c1, t0.c0, vt0.c0 FROM vt0, t0, rt0 GROUP BY rt0.c2, rt0.c1, t0.c2, rt0.c0, t0.c1, t0.c0, vt0.c0;
SELECT rt0.c2, rt0.c1, t0.c2, rt0.c0, t0.c1, t0.c0, vt0.c0 FROM vt0, t0, rt0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN rt0.c1 END)&(((vt0.c0)%(t0.c1))))) GROUP BY rt0.c2, rt0.c1, t0.c2, rt0.c0, t0.c1, t0.c0, vt0.c0 UNION SELECT rt0.c2, rt0.c1, t0.c2, rt0.c0, t0.c1, t0.c0, vt0.c0 FROM vt0, t0, rt0 WHERE ((NOT (((CASE t0.c0  WHEN t0.c0 THEN rt0.c1 END)&(((vt0.c0)%(t0.c1))))))) GROUP BY rt0.c2, rt0.c1, t0.c2, rt0.c0, t0.c1, t0.c0, vt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, t0.c2, rt0.c0, t0.c1, t0.c0, vt0.c0 FROM vt0, t0, rt0 WHERE (((((CASE t0.c0  WHEN t0.c0 THEN rt0.c1 END)&(((vt0.c0)%(t0.c1))))) ISNULL)) GROUP BY rt0.c2, rt0.c1, t0.c2, rt0.c0, t0.c1, t0.c0, vt0.c0;
SELECT ALL rt0.c2, rt0.c1, t0.c2, rt0.c0, t0.c1, t0.c0, vt0.c0 FROM vt0, t0, rt0 GROUP BY rt0.c2, rt0.c1, t0.c2, rt0.c0, t0.c1, t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0, t0.c1, t0.c2 FROM vt0, t0 GROUP BY t0.c0, vt0.c0, t0.c1, t0.c2;
SELECT t0.c0, vt0.c0, t0.c1, t0.c2 FROM vt0, t0 GROUP BY t0.c0, vt0.c0, t0.c1, t0.c2 HAVING ((TOTAL(COUNT(MAX(MIN(AVG(MAX(t0.c1)))))))>>(COUNT(t0.c1))) UNION ALL SELECT ALL t0.c0, vt0.c0, t0.c1, t0.c2 FROM vt0, t0 GROUP BY t0.c0, vt0.c0, t0.c1, t0.c2 HAVING (NOT (((TOTAL(COUNT(MAX(MIN(AVG(MAX(t0.c1)))))))>>(COUNT(t0.c1))))) UNION ALL SELECT t0.c0, vt0.c0, t0.c1, t0.c2 FROM vt0, t0 GROUP BY t0.c0, vt0.c0, t0.c1, t0.c2 HAVING ((((TOTAL(COUNT(MAX(MIN(AVG(MAX(t0.c1)))))))>>(COUNT(t0.c1)))) ISNULL);
SELECT ALL MIN((((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END, ((x'') NOT BETWEEN (rt0.c1) AND (rt0.c2)), (((rt0.c0))==((rt0.c0)))))>=(((('l|') IS TRUE), ((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)), load_extension(rt0.c0, rt0.c1))))) FROM rt0;
SELECT ALL * FROM vt0, t1;
SELECT * FROM vt0, t1 WHERE ((((vt0.c0))!=(('0.0028462346356282753'))) COLLATE BINARY) UNION ALL SELECT ALL * FROM vt0, t1 WHERE ((NOT ((((vt0.c0))<>(('0.0028462346356282753'))) COLLATE BINARY))) UNION ALL SELECT * FROM vt0, t1 WHERE ((((((vt0.c0))<>(('0.0028462346356282753'))) COLLATE BINARY) ISNULL));
SELECT ALL * FROM vt0, t1;
SELECT DISTINCT * FROM rt0, t1;
SELECT DISTINCT * FROM rt0, t1 WHERE (CASE WHEN (((t1.c59, t1.c59, rt0.c1, rt0.c2, rt0.c1)) BETWEEN ((rt0.c2, 0.4187176778237386, rt0.c0, rt0.c0, t1.c59)) AND ((t1.c59, t1.c59, t1.c59, rt0.c0, rt0.c1))) THEN ((((rt0.c0)OR(t1.c59)))OR(rt0.c0)) WHEN '%k' COLLATE NOCASE THEN ((rt0.c2)AND(rt0.c1)) WHEN (rt0.c0 IN ()) THEN CASE WHEN t1.c59 THEN rt0.c2 END END) UNION SELECT DISTINCT * FROM rt0, t1 WHERE ((NOT (CASE WHEN (((t1.c59, t1.c59, rt0.c1, rt0.c2, rt0.c1)) BETWEEN ((rt0.c2, 0.4187176778237386, rt0.c0, rt0.c0, t1.c59)) AND ((t1.c59, t1.c59, t1.c59, rt0.c0, rt0.c1))) THEN ((((rt0.c0)OR(t1.c59)))OR(rt0.c0)) WHEN '%k' COLLATE NOCASE THEN ((rt0.c2)AND(rt0.c1)) WHEN (rt0.c0 IN ()) THEN CASE WHEN t1.c59 THEN rt0.c2 END END))) UNION SELECT DISTINCT * FROM rt0, t1 WHERE (((CASE WHEN (((t1.c59, t1.c59, rt0.c1, rt0.c2, rt0.c1)) BETWEEN ((rt0.c2, 0.4187176778237386, rt0.c0, rt0.c0, t1.c59)) AND ((t1.c59, t1.c59, t1.c59, rt0.c0, rt0.c1))) THEN ((((rt0.c0)OR(t1.c59)))OR(rt0.c0)) WHEN '%k' COLLATE NOCASE THEN ((rt0.c2)AND(rt0.c1)) WHEN (rt0.c0 IN ()) THEN CASE WHEN t1.c59 THEN rt0.c2 END END) ISNULL));
SELECT DISTINCT * FROM rt0, t1;
SELECT t0.c1, t1.c59, t0.c2, rt0.c0, rt0.c1, vt0.c0, t0.c0, rt0.c2 FROM t1, rt0, t0, vt0 GROUP BY t0.c1, t1.c59, t0.c2, rt0.c0, rt0.c1, vt0.c0, t0.c0, rt0.c2;
SELECT t0.c1, t1.c59, t0.c2, rt0.c0, rt0.c1, vt0.c0, t0.c0, rt0.c2 FROM t1, rt0, t0, vt0 WHERE ((((NOT (t0.c2))) IS TRUE)) GROUP BY t0.c1, t1.c59, t0.c2, rt0.c0, rt0.c1, vt0.c0, t0.c0, rt0.c2 UNION SELECT t0.c1, t1.c59, t0.c2, rt0.c0, rt0.c1, vt0.c0, t0.c0, rt0.c2 FROM t1, rt0, t0, vt0 WHERE ((NOT ((((NOT (t0.c2))) IS TRUE)))) GROUP BY t0.c1, t1.c59, t0.c2, rt0.c0, rt0.c1, vt0.c0, t0.c0, rt0.c2 UNION SELECT t0.c1, t1.c59, t0.c2, rt0.c0, rt0.c1, vt0.c0, t0.c0, rt0.c2 FROM t1, rt0, t0, vt0 WHERE ((((((NOT (t0.c2))) IS TRUE)) ISNULL)) GROUP BY t0.c1, t1.c59, t0.c2, rt0.c0, rt0.c1, vt0.c0, t0.c0, rt0.c2;
SELECT t0.c1, t1.c59, t0.c2, rt0.c0, rt0.c1, vt0.c0, t0.c0, rt0.c2 FROM t1, rt0, t0, vt0 GROUP BY t0.c1, t1.c59, t0.c2, rt0.c0, rt0.c1, vt0.c0, t0.c0, rt0.c2;
SELECT t1.c59 FROM t1 GROUP BY t1.c59;
SELECT t1.c59 FROM t1 GROUP BY t1.c59 HAVING ((t1.c59) BETWEEN (MIN(MAX(t1.c59))) AND (COUNT(*))) UNION ALL SELECT ALL t1.c59 FROM t1 GROUP BY t1.c59 HAVING (NOT (((t1.c59) BETWEEN (MIN(MAX(t1.c59))) AND (COUNT(*))))) UNION ALL SELECT t1.c59 FROM t1 GROUP BY t1.c59 HAVING ((((t1.c59) BETWEEN (MIN(MAX(t1.c59))) AND (COUNT(*)))) ISNULL);
SELECT t1.c59 FROM t1;
SELECT ALL t1.c59 FROM t1 WHERE (CASE HEX(DISTINCT t1.c59)  WHEN t1.c59 THEN CASE WHEN 'm' THEN t1.c59 ELSE t1.c59 END END) UNION ALL SELECT t1.c59 FROM t1 WHERE ((NOT (CASE HEX(DISTINCT t1.c59)  WHEN t1.c59 THEN CASE WHEN 'm' THEN t1.c59 ELSE t1.c59 END END))) UNION ALL SELECT t1.c59 FROM t1 WHERE (((CASE HEX(DISTINCT t1.c59)  WHEN t1.c59 THEN CASE WHEN 'm' THEN t1.c59 ELSE t1.c59 END END) ISNULL));
SELECT t1.c59 FROM t1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0) NOT NULL) COLLATE BINARY) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((vt0.c0) NOT NULL) COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0) NOT NULL) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT t1.c59, t0.c1, rt0.c0, t0.c0, rt0.c1 FROM rt0, t0, t1 GROUP BY t1.c59, t0.c1, rt0.c0, t0.c0, rt0.c1;
SELECT t1.c59, t0.c1, rt0.c0, t0.c0, rt0.c1 FROM rt0, t0, t1 WHERE (((((t0.c0) BETWEEN (rt0.c1) AND (t0.c0))) IS FALSE)) GROUP BY t1.c59, t0.c1, rt0.c0, t0.c0, rt0.c1 UNION SELECT ALL t1.c59, t0.c1, rt0.c0, t0.c0, rt0.c1 FROM rt0, t0, t1 WHERE ((NOT (((((t0.c0) BETWEEN (rt0.c1) AND (t0.c0))) IS FALSE)))) GROUP BY t1.c59, t0.c1, rt0.c0, t0.c0, rt0.c1 UNION SELECT t1.c59, t0.c1, rt0.c0, t0.c0, rt0.c1 FROM rt0, t0, t1 WHERE (((((((t0.c0) BETWEEN (rt0.c1) AND (t0.c0))) IS FALSE)) ISNULL)) GROUP BY t1.c59, t0.c1, rt0.c0, t0.c0, rt0.c1;
SELECT t1.c59, t0.c1, rt0.c0, t0.c0, rt0.c1 FROM rt0, t0, t1 GROUP BY t1.c59, t0.c1, rt0.c0, t0.c0, rt0.c1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TOTAL(COUNT(vt0.c0) COLLATE BINARY) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(COUNT(vt0.c0) COLLATE BINARY))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(COUNT(vt0.c0) COLLATE BINARY)) ISNULL);
SELECT TOTAL(t1.c59) FROM t1 ORDER BY (('2051122639')>>('58216564')) DESC, ((((t1.c59)<(t1.c59)))<(LENGTH(t1.c59)))  NULLS FIRST;
SELECT ALL t0.c2, rt0.c1, rt0.c2 FROM t0 RIGHT OUTER JOIN t1 ON ((((((t0.c0)IS NOT(rt0.c0)))OR(((((((((((((rt0.c0)OR(t0.c1)))AND(t0.c0)))AND(t1.c59)))AND(rt0.c1)))AND(t0.c0)))AND(rt0.c0)))))AND((t0.c1 IN ()))) FULL OUTER JOIN rt0 ON (((((((0.9677773657935674))>=((t1.c59))))AND(SUBSTR(rt0.c1, t1.c59))))OR(rt0.c2));
SELECT t0.c2, rt0.c1, rt0.c2 FROM t0 RIGHT OUTER JOIN t1 ON ((((((t0.c0)IS NOT(rt0.c0)))OR(((((((((((((rt0.c0)OR(t0.c1)))AND(t0.c0)))AND(t1.c59)))AND(rt0.c1)))AND(t0.c0)))AND(rt0.c0)))))AND((t0.c1 IN ()))) FULL OUTER JOIN rt0 ON (((((((0.9677773657935674))>=((t1.c59))))AND(SUBSTR(rt0.c1, t1.c59))))OR(rt0.c2)) WHERE (CHANGES()) UNION ALL SELECT t0.c2, rt0.c1, rt0.c2 FROM t0 RIGHT OUTER JOIN t1 ON ((((((t0.c0)IS NOT(rt0.c0)))OR(((((((((((((rt0.c0)OR(t0.c1)))AND(t0.c0)))AND(t1.c59)))AND(rt0.c1)))AND(t0.c0)))AND(rt0.c0)))))AND((t0.c1 IN ()))) FULL OUTER JOIN rt0 ON (((((((0.9677773657935674))>=((t1.c59))))AND(SUBSTR(rt0.c1, t1.c59))))OR(rt0.c2)) WHERE ((NOT (CHANGES()))) UNION ALL SELECT t0.c2, rt0.c1, rt0.c2 FROM t0 RIGHT OUTER JOIN t1 ON ((((((t0.c0)IS NOT(rt0.c0)))OR(((((((((((((rt0.c0)OR(t0.c1)))AND(t0.c0)))AND(t1.c59)))AND(rt0.c1)))AND(t0.c0)))AND(rt0.c0)))))AND((t0.c1 IN ()))) FULL OUTER JOIN rt0 ON (((((((0.9677773657935674))>=((t1.c59))))AND(SUBSTR(rt0.c1, t1.c59))))OR(rt0.c2)) WHERE (((CHANGES()) ISNULL));
SELECT ALL t0.c2, rt0.c1, rt0.c2 FROM t0 RIGHT OUTER JOIN t1 ON ((((((t0.c0)IS NOT(rt0.c0)))OR(((((((((((((rt0.c0)OR(t0.c1)))AND(t0.c0)))AND(t1.c59)))AND(rt0.c1)))AND(t0.c0)))AND(rt0.c0)))))AND((t0.c1 IN ()))) FULL OUTER JOIN rt0 ON (((((((0.9677773657935674))>=((t1.c59))))AND(SUBSTR(rt0.c1, t1.c59))))OR(rt0.c2));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((LIKELIHOOD(DISTINCT vt0.c0, 0.28753759109861243)) ISNULL)) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((LIKELIHOOD(DISTINCT vt0.c0, 0.28753759109861243)) ISNULL)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((LIKELIHOOD(DISTINCT vt0.c0, 0.28753759109861243)) ISNULL)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL t0.c0, t0.c2, rt0.c0, rt0.c2, t0.c1 FROM t1, t0 CROSS JOIN rt0 ON CASE ((t1.c59)/(t0.c0))  WHEN (NOT (t1.c59)) THEN ((t0.c2) NOT BETWEEN (t0.c0) AND (rt0.c0)) END GROUP BY t0.c0, t0.c2, rt0.c0, rt0.c2, t0.c1;
SELECT t0.c0, t0.c2, rt0.c0, rt0.c2, t0.c1 FROM t1, t0 CROSS JOIN rt0 ON CASE ((t1.c59)/(t0.c0))  WHEN (NOT (t1.c59)) THEN ((t0.c2) NOT BETWEEN (t0.c0) AND (rt0.c0)) END WHERE (((((t0.c1) BETWEEN (t0.c0) AND (t1.c59)))>=(((t0.c2) BETWEEN (rt0.c1) AND (t0.c1))))) GROUP BY t0.c0, t0.c2, rt0.c0, rt0.c2, t0.c1 UNION SELECT t0.c0, t0.c2, rt0.c0, rt0.c2, t0.c1 FROM t1, t0 NOT INDEXED CROSS JOIN rt0 ON CASE ((t1.c59)/(t0.c0))  WHEN (NOT (t1.c59)) THEN ((t0.c2) NOT BETWEEN (t0.c0) AND (rt0.c0)) END WHERE ((NOT (((((t0.c1) BETWEEN (t0.c0) AND (t1.c59)))>=(((t0.c2) BETWEEN (rt0.c1) AND (t0.c1))))))) GROUP BY t0.c0, t0.c2, rt0.c0, rt0.c2, t0.c1 UNION SELECT t0.c0, t0.c2, rt0.c0, rt0.c2, t0.c1 FROM t1, t0 CROSS JOIN rt0 ON CASE ((t1.c59)/(t0.c0))  WHEN (NOT (t1.c59)) THEN ((t0.c2) NOT BETWEEN (t0.c0) AND (rt0.c0)) END WHERE (((((((t0.c1) BETWEEN (t0.c0) AND (t1.c59)))>=(((t0.c2) BETWEEN (rt0.c1) AND (t0.c1))))) ISNULL)) GROUP BY t0.c0, t0.c2, rt0.c0, rt0.c2, t0.c1;
SELECT ALL t0.c0, t0.c2, rt0.c0, rt0.c2, t0.c1 FROM t1, t0 CROSS JOIN rt0 ON CASE ((t1.c59)/(t0.c0))  WHEN (NOT (t1.c59)) THEN ((t0.c2) NOT BETWEEN (t0.c0) AND (rt0.c0)) END GROUP BY t0.c0, t0.c2, rt0.c0, rt0.c2, t0.c1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM t0, rt0;
SELECT ALL * FROM t0, rt0 NOT INDEXED WHERE (rt0.c2) UNION ALL SELECT ALL * FROM t0, rt0 WHERE ((NOT (rt0.c2))) UNION ALL SELECT * FROM t0, rt0 WHERE (((rt0.c2) ISNULL));
SELECT * FROM t0, rt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((CAST(vt0.c0 AS TEXT) IN ())) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((CAST(vt0.c0 AS TEXT) IN ())))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((CAST(vt0.c0 AS TEXT) IN ())) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL t0.c1, t0.c0, rt0.c0, rt0.c2, t0.c2 FROM t0, t1, vt0, rt0 GROUP BY t0.c1, t0.c0, rt0.c0, rt0.c2, t0.c2;
SELECT t0.c1, t0.c0, rt0.c0, rt0.c2, t0.c2 FROM t0, t1, vt0, rt0 WHERE ((((vt0.c0)) BETWEEN ((((rt0.c1)>=(t0.c2)))) AND ((((((t0.c0)OR(rt0.c0)))AND(-1652084824)))))) GROUP BY t0.c1, t0.c0, rt0.c0, rt0.c2, t0.c2 UNION SELECT t0.c1, t0.c0, rt0.c0, rt0.c2, t0.c2 FROM t0, t1, vt0, rt0 WHERE ((NOT ((((vt0.c0)) BETWEEN ((((rt0.c1)>=(t0.c2)))) AND ((((((t0.c0)OR(rt0.c0)))AND(-1652084824)))))))) GROUP BY t0.c1, t0.c0, rt0.c0, rt0.c2, t0.c2 UNION SELECT ALL t0.c1, t0.c0, rt0.c0, rt0.c2, t0.c2 FROM t0, t1, vt0, rt0 WHERE ((((((vt0.c0)) BETWEEN ((((rt0.c1)>=(t0.c2)))) AND ((((((t0.c0)OR(rt0.c0)))AND(-1652084824)))))) ISNULL)) GROUP BY t0.c1, t0.c0, rt0.c0, rt0.c2, t0.c2;
SELECT ALL t0.c1, t0.c0, rt0.c0, rt0.c2, t0.c2 FROM t0, t1, vt0, rt0 GROUP BY t0.c1, t0.c0, rt0.c0, rt0.c2, t0.c2;
SELECT t0.c0, t0.c2 FROM t0, t1 RIGHT OUTER JOIN vt0 ON ((((((t0.c1) BETWEEN (t0.c0) AND (t0.c0)))AND(((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))))OR(vt0.c0 COLLATE RTRIM)) GROUP BY t0.c0, t0.c2;
SELECT ALL t0.c0, t0.c2 FROM t0, t1 RIGHT OUTER JOIN vt0 ON ((((((t0.c1) BETWEEN (t0.c0) AND (t0.c0)))AND(((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))))OR(vt0.c0 COLLATE RTRIM)) GROUP BY t0.c0, t0.c2 HAVING MAX(((COUNT(*))%(t0.c1))) UNION ALL SELECT t0.c0, t0.c2 FROM t0, t1 NOT INDEXED RIGHT OUTER JOIN vt0 ON ((((((t0.c1) BETWEEN (t0.c0) AND (t0.c0)))AND(((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))))OR(vt0.c0 COLLATE RTRIM)) GROUP BY t0.c0, t0.c2 HAVING (NOT (MAX(((COUNT(*))%(t0.c1))))) UNION ALL SELECT ALL t0.c0, t0.c2 FROM t0, t1 RIGHT OUTER JOIN vt0 ON ((((((t0.c1) BETWEEN (t0.c0) AND (t0.c0)))AND(((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))))OR(vt0.c0 COLLATE RTRIM)) GROUP BY t0.c0, t0.c2 HAVING ((MAX(((COUNT(*))%(t0.c1)))) ISNULL);
SELECT ALL t1.c59 FROM t1;
SELECT t1.c59 FROM t1 WHERE (((((t1.c59)OR(t1.c59)))AND(t1.c59)) COLLATE NOCASE) UNION ALL SELECT ALL t1.c59 FROM t1 WHERE ((NOT (((((t1.c59)OR(t1.c59)))AND(t1.c59)) COLLATE NOCASE))) UNION ALL SELECT t1.c59 FROM t1 WHERE (((((((t1.c59)OR(t1.c59)))AND(t1.c59)) COLLATE NOCASE) ISNULL));
SELECT ALL t1.c59 FROM t1;
SELECT DISTINCT t0.c1, t0.c0, t0.c2, rt0.c2, vt0.c0, rt0.c0, rt0.c1 FROM vt0, t0, rt0;
SELECT DISTINCT t0.c1, t0.c0, t0.c2, rt0.c2, vt0.c0, rt0.c0, rt0.c1 FROM vt0, t0, rt0 WHERE (t0.c1) UNION SELECT DISTINCT t0.c1, t0.c0, t0.c2, rt0.c2, vt0.c0, rt0.c0, rt0.c1 FROM vt0, t0, rt0 WHERE ((NOT (t0.c1))) UNION SELECT DISTINCT t0.c1, t0.c0, t0.c2, rt0.c2, vt0.c0, rt0.c0, rt0.c1 FROM vt0, t0, rt0 WHERE (((t0.c1) ISNULL));
SELECT DISTINCT t0.c1, t0.c0, t0.c2, rt0.c2, vt0.c0, rt0.c0, rt0.c1 FROM vt0, t0, rt0;
SELECT ALL t1.c59 FROM t1, t0, rt0 GROUP BY t1.c59;
SELECT ALL t1.c59 FROM t1, t0, rt0 WHERE ('-70198792' COLLATE NOCASE) GROUP BY t1.c59 UNION SELECT t1.c59 FROM t1, t0, rt0 WHERE ((NOT ('-70198792' COLLATE NOCASE))) GROUP BY t1.c59 UNION SELECT t1.c59 FROM t1, t0, rt0 WHERE ((('-70198792' COLLATE NOCASE) ISNULL)) GROUP BY t1.c59;
SELECT ALL t1.c59 FROM t1, t0, rt0 GROUP BY t1.c59;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM vt0 INNER JOIN rt0 ON rt0.c0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM vt0 INNER JOIN rt0 ON rt0.c0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING COUNT(*) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM vt0 INNER JOIN rt0 ON rt0.c0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM vt0 INNER JOIN rt0 ON rt0.c0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c2 FROM vt0 INNER JOIN rt0 ON rt0.c0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM vt0 INNER JOIN rt0 ON rt0.c0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING COUNT(*) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM vt0 INNER JOIN rt0 ON rt0.c0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM vt0 INNER JOIN rt0 ON rt0.c0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c2 FROM vt0 INNER JOIN rt0 ON rt0.c0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL * FROM vt0, t1, t0;
SELECT * FROM vt0, t1, t0 WHERE (t0.c0) UNION ALL SELECT ALL * FROM vt0, t1, t0 WHERE ((NOT (t0.c0))) UNION ALL SELECT ALL * FROM vt0, t1, t0 WHERE (((t0.c0) ISNULL));
SELECT ALL * FROM vt0, t1, t0;
SELECT DISTINCT vt0.c0, t0.c0 FROM vt0, t0;
SELECT DISTINCT vt0.c0, t0.c0 FROM vt0, t0 WHERE (((((((((CAST(t0.c0 AS BLOB))OR(vt0.c0 COLLATE NOCASE)))OR(CAST('yc>Qn8' AS TEXT))))AND((t0.c2 IN ()))))OR((t0.c2 IN (t0.c1))))) UNION SELECT DISTINCT vt0.c0, t0.c0 FROM vt0, t0 WHERE ((NOT (((((((((CAST(t0.c0 AS BLOB))OR(vt0.c0 COLLATE NOCASE)))OR(CAST('yc>Qn8' AS TEXT))))AND((t0.c2 IN ()))))OR((t0.c2 IN (t0.c1))))))) UNION SELECT DISTINCT vt0.c0, t0.c0 FROM vt0, t0 WHERE (((((((((((CAST(t0.c0 AS BLOB))OR(vt0.c0 COLLATE NOCASE)))OR(CAST('yc>Qn8' AS TEXT))))AND((t0.c2 IN ()))))OR((t0.c2 IN (t0.c1))))) ISNULL));
SELECT DISTINCT vt0.c0, t0.c0 FROM vt0, t0;
SELECT t0.c1 FROM vt0, rt0, t0 GROUP BY t0.c1;
SELECT ALL t0.c1 FROM vt0, rt0, t0 WHERE (t0.c1) GROUP BY t0.c1 UNION SELECT ALL t0.c1 FROM vt0, rt0, t0 WHERE ((NOT (t0.c1))) GROUP BY t0.c1 UNION SELECT ALL t0.c1 FROM vt0, rt0, t0 WHERE (((t0.c1) ISNULL)) GROUP BY t0.c1;
SELECT t0.c1 FROM vt0, rt0, t0 GROUP BY t0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING SUM(AVG(rt0.c2)) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (SUM(AVG(rt0.c2)))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((SUM(AVG(rt0.c2))) ISNULL);
SELECT ALL * FROM t1, vt0, rt0;
SELECT * FROM t1, vt0, rt0 WHERE ((((rt0.c1 IN ())) BETWEEN (CAST(t1.c59 AS REAL)) AND ((((0.9460553498873792))<=((rt0.c0)))))) UNION ALL SELECT ALL * FROM t1, vt0, rt0 WHERE ((NOT ((((rt0.c1 IN ())) BETWEEN (CAST(t1.c59 AS REAL)) AND ((((0.9460553498873792))<=((rt0.c0)))))))) UNION ALL SELECT * FROM t1, vt0, rt0 WHERE ((((((rt0.c1 IN ())) BETWEEN (CAST(t1.c59 AS REAL)) AND ((((0.9460553498873792))<=((rt0.c0)))))) ISNULL));
SELECT ALL * FROM t1, vt0, rt0;
SELECT DISTINCT * FROM t0 NATURAL JOIN rt0;
SELECT DISTINCT * FROM t0 NATURAL JOIN rt0 WHERE (CAST(((((t0.c2)OR(rt0.c1)))OR(rt0.c2)) AS BLOB)) UNION SELECT DISTINCT * FROM t0 NATURAL JOIN rt0 WHERE ((NOT (CAST(((((t0.c2)OR(rt0.c1)))OR(rt0.c2)) AS BLOB)))) UNION SELECT DISTINCT * FROM t0 NATURAL JOIN rt0 WHERE (((CAST(((((t0.c2)OR(rt0.c1)))OR(rt0.c2)) AS BLOB)) ISNULL));
SELECT DISTINCT * FROM t0 NATURAL JOIN rt0;
SELECT t0.c1, rt0.c2, rt0.c1, t0.c0, vt0.c0, rt0.c0 FROM t0, vt0, rt0 GROUP BY t0.c1, rt0.c2, rt0.c1, t0.c0, vt0.c0, rt0.c0;
SELECT t0.c1, rt0.c2, rt0.c1, t0.c0, vt0.c0, rt0.c0 FROM t0, vt0, rt0 WHERE ((~ ((NOT ('-339761578'))))) GROUP BY t0.c1, rt0.c2, rt0.c1, t0.c0, vt0.c0, rt0.c0 UNION SELECT t0.c1, rt0.c2, rt0.c1, t0.c0, vt0.c0, rt0.c0 FROM t0, vt0, rt0 NOT INDEXED WHERE ((NOT ((~ ((NOT ('-339761578'))))))) GROUP BY t0.c1, rt0.c2, rt0.c1, t0.c0, vt0.c0, rt0.c0 UNION SELECT t0.c1, rt0.c2, rt0.c1, t0.c0, vt0.c0, rt0.c0 FROM t0, vt0, rt0 WHERE ((((~ ((NOT ('-339761578'))))) ISNULL)) GROUP BY t0.c1, rt0.c2, rt0.c1, t0.c0, vt0.c0, rt0.c0;
SELECT t0.c1, rt0.c2, rt0.c1, t0.c0, vt0.c0, rt0.c0 FROM t0, vt0, rt0 GROUP BY t0.c1, rt0.c2, rt0.c1, t0.c0, vt0.c0, rt0.c0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING MAX(rt0.c1 COLLATE BINARY) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (MAX(rt0.c1 COLLATE BINARY))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((MAX(rt0.c1 COLLATE BINARY)) ISNULL);
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING MAX(rt0.c1 COLLATE BINARY) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (MAX(rt0.c1 COLLATE BINARY))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((MAX(rt0.c1 COLLATE BINARY)) ISNULL);
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (x'') UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (x''))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((x'') ISNULL));
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0, t1, t0, vt0;
SELECT DISTINCT * FROM rt0, t1, t0, vt0 WHERE (NULLIF(((vt0.c0) NOT NULL), t0.c2 COLLATE BINARY)) UNION SELECT DISTINCT * FROM rt0, t1, t0, vt0 WHERE ((NOT (NULLIF(((vt0.c0) NOT NULL), t0.c2 COLLATE BINARY)))) UNION SELECT DISTINCT * FROM rt0, t1, t0, vt0 WHERE (((NULLIF(((vt0.c0) NOT NULL), t0.c2 COLLATE BINARY)) ISNULL));
SELECT DISTINCT * FROM rt0, t1, t0, vt0;
SELECT ALL t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0;
SELECT t0.c2, t0.c0 FROM t0 WHERE ((+ (((t0.c2) NOTNULL)))) GROUP BY t0.c2, t0.c0 UNION SELECT ALL t0.c2, t0.c0 FROM t0 WHERE ((NOT ((+ (((t0.c2) NOTNULL)))))) GROUP BY t0.c2, t0.c0 UNION SELECT ALL t0.c2, t0.c0 FROM t0 WHERE ((((+ (((t0.c2) NOTNULL)))) ISNULL)) GROUP BY t0.c2, t0.c0;
SELECT ALL t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0;
SELECT ALL t0.c0, rt0.c0, vt0.c0, t0.c2 FROM t0, vt0 LEFT OUTER JOIN rt0 ON ((((NULL)OR(((((((((t0.c0)AND(rt0.c2)))OR(t0.c2)))OR(t0.c0)))AND(rt0.c1)))))OR(((t0.c2)>(rt0.c0)))) GROUP BY t0.c0, rt0.c0, vt0.c0, t0.c2;
SELECT t0.c0, rt0.c0, vt0.c0, t0.c2 FROM t0, vt0 LEFT OUTER JOIN rt0 ON ((((NULL)OR(((((((((t0.c0)AND(rt0.c2)))OR(t0.c2)))OR(t0.c0)))AND(rt0.c1)))))OR(((t0.c2)>(rt0.c0)))) GROUP BY t0.c0, rt0.c0, vt0.c0, t0.c2 HAVING ((((((((LIKELY(SUM(t0.c0)))AND(((GROUP_CONCAT(vt0.c0))&(MIN(COUNT(rt0.c0)))))))OR((- (AVG(vt0.c0))))))AND(CAST(t0.c1 AS REAL))))OR(GROUP_CONCAT(TOTAL(vt0.c0)))) UNION ALL SELECT ALL t0.c0, rt0.c0, vt0.c0, t0.c2 FROM t0, vt0 LEFT OUTER JOIN rt0 ON ((((NULL)OR(((((((((t0.c0)AND(rt0.c2)))OR(t0.c2)))OR(t0.c0)))AND(rt0.c1)))))OR(((t0.c2)>(rt0.c0)))) GROUP BY t0.c0, rt0.c0, vt0.c0, t0.c2 HAVING (NOT (((((((((LIKELY(SUM(t0.c0)))AND(((GROUP_CONCAT(vt0.c0))&(MIN(COUNT(rt0.c0)))))))OR((- (AVG(vt0.c0))))))AND(CAST(t0.c1 AS REAL))))OR(GROUP_CONCAT(TOTAL(vt0.c0)))))) UNION ALL SELECT t0.c0, rt0.c0, vt0.c0, t0.c2 FROM t0, vt0 LEFT OUTER JOIN rt0 ON ((((NULL)OR(((((((((t0.c0)AND(rt0.c2)))OR(t0.c2)))OR(t0.c0)))AND(rt0.c1)))))OR(((t0.c2)>(rt0.c0)))) GROUP BY t0.c0, rt0.c0, vt0.c0, t0.c2 HAVING ((((((((((LIKELY(SUM(t0.c0)))AND(((GROUP_CONCAT(vt0.c0))&(MIN(COUNT(rt0.c0)))))))OR((- (AVG(vt0.c0))))))AND(CAST(t0.c1 AS REAL))))OR(GROUP_CONCAT(TOTAL(vt0.c0))))) ISNULL);
SELECT ALL * FROM rt0 INDEXED BY i11, t1, t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (x'') UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (x''))) UNION SELECT DISTINCT * FROM t0 WHERE (((x'') ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL rt0.c0 FROM rt0, vt0 LEFT OUTER JOIN t1 ON ((((t1.c59)<>(vt0.c0))) BETWEEN (rt0.c0 COLLATE BINARY) AND ((((rt0.c1, x'', vt0.c0)) BETWEEN ((rt0.c1, t1.c59, t1.c59)) AND ((t1.c59, rt0.c0, rt0.c2))))) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, vt0 LEFT OUTER JOIN t1 ON ((((t1.c59)<>(vt0.c0))) BETWEEN (rt0.c0 COLLATE BINARY) AND ((((rt0.c1, x'', vt0.c0)) BETWEEN ((rt0.c1, t1.c59, t1.c59)) AND ((t1.c59, rt0.c0, rt0.c2))))) WHERE (LIKELY('0.11933120277755682')) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0, vt0 LEFT OUTER JOIN t1 ON ((((t1.c59)<>(vt0.c0))) BETWEEN (rt0.c0 COLLATE BINARY) AND ((((rt0.c1, x'', vt0.c0)) BETWEEN ((rt0.c1, t1.c59, t1.c59)) AND ((t1.c59, rt0.c0, rt0.c2))))) WHERE ((NOT (LIKELY('0.11933120277755682')))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0, vt0 LEFT OUTER JOIN t1 ON ((((t1.c59)<>(vt0.c0))) BETWEEN (rt0.c0 COLLATE BINARY) AND ((((rt0.c1, x'', vt0.c0)) BETWEEN ((rt0.c1, t1.c59, t1.c59)) AND ((t1.c59, rt0.c0, rt0.c2))))) WHERE (((LIKELY('0.11933120277755682')) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, vt0 LEFT OUTER JOIN t1 ON ((((t1.c59)<>(vt0.c0))) BETWEEN (rt0.c0 COLLATE BINARY) AND ((((rt0.c1, x'', vt0.c0)) BETWEEN ((rt0.c1, t1.c59, t1.c59)) AND ((t1.c59, rt0.c0, rt0.c2))))) GROUP BY rt0.c0;
SELECT ALL vt0.c0, rt0.c1, t0.c0 FROM vt0, rt0, t0 GROUP BY vt0.c0, rt0.c1, t0.c0;
SELECT ALL vt0.c0, rt0.c1, t0.c0 FROM vt0, rt0, t0 NOT INDEXED GROUP BY vt0.c0, rt0.c1, t0.c0 HAVING MIN(MIN(t0.c0)) UNION ALL SELECT ALL vt0.c0, rt0.c1, t0.c0 FROM vt0, rt0, t0 GROUP BY vt0.c0, rt0.c1, t0.c0 HAVING (NOT (MIN(MIN(t0.c0)))) UNION ALL SELECT ALL vt0.c0, rt0.c1, t0.c0 FROM vt0, rt0, t0 GROUP BY vt0.c0, rt0.c1, t0.c0 HAVING ((MIN(MIN(t0.c0))) ISNULL);
SELECT rt0.c0 FROM t1 LEFT OUTER JOIN rt0 ON CAST(rt0.c2 AS BLOB);
SELECT ALL rt0.c0 FROM t1 LEFT OUTER JOIN rt0 ON CAST(rt0.c2 AS BLOB) WHERE (CASE WHEN ((((((((t1.c59)OR(t1.c59)))AND(t1.c59)))AND(t1.c59)))AND(rt0.c0)) THEN ((rt0.c1) NOT BETWEEN (0.06426374103921806) AND (rt0.c2)) ELSE 'Nd' END) UNION ALL SELECT rt0.c0 FROM t1 LEFT OUTER JOIN rt0 ON CAST(rt0.c2 AS BLOB) WHERE ((NOT (CASE WHEN ((((((((t1.c59)OR(t1.c59)))AND(t1.c59)))AND(t1.c59)))AND(rt0.c0)) THEN ((rt0.c1) NOT BETWEEN (0.06426374103921806) AND (rt0.c2)) ELSE 'Nd' END))) UNION ALL SELECT rt0.c0 FROM t1 LEFT OUTER JOIN rt0 ON CAST(rt0.c2 AS BLOB) WHERE (((CASE WHEN ((((((((t1.c59)OR(t1.c59)))AND(t1.c59)))AND(t1.c59)))AND(rt0.c0)) THEN ((rt0.c1) NOT BETWEEN (0.06426374103921806) AND (rt0.c2)) ELSE 'Nd' END) ISNULL));
SELECT rt0.c0 FROM t1 LEFT OUTER JOIN rt0 ON CAST(rt0.c2 AS BLOB);
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CAST(vt0.c0 AS REAL))%(((vt0.c0)|(vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((CAST(vt0.c0 AS REAL))%(((vt0.c0)|(vt0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((CAST(vt0.c0 AS REAL))%(((vt0.c0)|(vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON UNLIKELY(DISTINCT ((rt0.c0) NOT NULL)) CROSS JOIN vt0 ON ((((t0.c2)) BETWEEN ((t0.c2)) AND ((vt0.c0))) IN ()) GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0;
SELECT rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON UNLIKELY(DISTINCT ((rt0.c0) NOT NULL)) CROSS JOIN vt0 ON ((((t0.c2)) BETWEEN ((t0.c2)) AND ((vt0.c0))) IN ()) WHERE (rt0.c0) GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON UNLIKELY(DISTINCT ((rt0.c0) NOT NULL)) CROSS JOIN vt0 ON ((((t0.c2)) BETWEEN ((t0.c2)) AND ((vt0.c0))) IN ()) WHERE ((NOT (rt0.c0))) GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON UNLIKELY(DISTINCT ((rt0.c0) NOT NULL)) CROSS JOIN vt0 ON ((((t0.c2)) BETWEEN ((t0.c2)) AND ((vt0.c0))) IN ()) WHERE (((rt0.c0) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0;
SELECT rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON UNLIKELY(DISTINCT ((rt0.c0) NOT NULL)) CROSS JOIN vt0 ON ((((t0.c2)) BETWEEN ((t0.c2)) AND ((vt0.c0))) IN ()) GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0;
SELECT ALL t1.c59, t0.c1, vt0.c0, t0.c0 FROM vt0, t0 RIGHT OUTER JOIN t1 ON CAST(t0.c0 COLLATE BINARY AS REAL) GROUP BY t1.c59, t0.c1, vt0.c0, t0.c0;
SELECT ALL t1.c59, t0.c1, vt0.c0, t0.c0 FROM vt0, t0 RIGHT OUTER JOIN t1 ON CAST(t0.c0 COLLATE BINARY AS REAL) GROUP BY t1.c59, t0.c1, vt0.c0, t0.c0 HAVING COUNT(((t1.c59) ISNULL)) UNION ALL SELECT ALL t1.c59, t0.c1, vt0.c0, t0.c0 FROM vt0, t0 RIGHT OUTER JOIN t1 ON CAST(t0.c0 COLLATE BINARY AS REAL) GROUP BY t1.c59, t0.c1, vt0.c0, t0.c0 HAVING (NOT (COUNT(((t1.c59) ISNULL)))) UNION ALL SELECT ALL t1.c59, t0.c1, vt0.c0, t0.c0 FROM vt0, t0 RIGHT OUTER JOIN t1 ON CAST(t0.c0 COLLATE BINARY AS REAL) GROUP BY t1.c59, t0.c1, vt0.c0, t0.c0 HAVING ((COUNT(((t1.c59) ISNULL))) ISNULL);
SELECT ALL t1.c59, t0.c1, vt0.c0, t0.c0 FROM vt0, t0 RIGHT OUTER JOIN t1 ON CAST(t0.c0 COLLATE BINARY AS REAL) GROUP BY t1.c59, t0.c1, vt0.c0, t0.c0;
SELECT ALL t1.c59, t0.c1, vt0.c0, t0.c0 FROM vt0, t0 RIGHT OUTER JOIN t1 ON CAST(t0.c0 COLLATE BINARY AS REAL) GROUP BY t1.c59, t0.c1, vt0.c0, t0.c0 HAVING COUNT(((t1.c59) ISNULL)) UNION ALL SELECT ALL t1.c59, t0.c1, vt0.c0, t0.c0 FROM vt0, t0 RIGHT OUTER JOIN t1 ON CAST(t0.c0 COLLATE BINARY AS REAL) GROUP BY t1.c59, t0.c1, vt0.c0, t0.c0 HAVING (NOT (COUNT(((t1.c59) ISNULL)))) UNION ALL SELECT ALL t1.c59, t0.c1, vt0.c0, t0.c0 FROM vt0, t0 RIGHT OUTER JOIN t1 ON CAST(t0.c0 COLLATE BINARY AS REAL) GROUP BY t1.c59, t0.c1, vt0.c0, t0.c0 HAVING ((COUNT(((t1.c59) ISNULL))) ISNULL);
SELECT ALL t1.c59, t0.c1, vt0.c0, t0.c0 FROM vt0, t0 RIGHT OUTER JOIN t1 ON CAST(t0.c0 COLLATE BINARY AS REAL) GROUP BY t1.c59, t0.c1, vt0.c0, t0.c0;
SELECT ALL rt0.c0 FROM rt0;
SELECT ALL rt0.c0 FROM rt0 WHERE (((((0.30713743193534127)AND(CHAR(rt0.c2))))OR(CASE WHEN '1983736932' THEN rt0.c2 END))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE ((NOT (((((0.30713743193534127)AND(CHAR(rt0.c2))))OR(CASE WHEN '1983736932' THEN rt0.c2 END))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE (((((((0.30713743193534127)AND(CHAR(rt0.c2))))OR(CASE WHEN '1983736932' THEN rt0.c2 END))) ISNULL));
SELECT ALL rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0, t1, vt0;
SELECT DISTINCT * FROM rt0, t1, vt0 WHERE (((((rt0.c0)AND(t1.c59)))LIKE(CAST(rt0.c2 AS TEXT)))) UNION SELECT DISTINCT * FROM rt0, t1, vt0 WHERE ((NOT (((((rt0.c0)AND(t1.c59)))LIKE(CAST(rt0.c2 AS TEXT)))))) UNION SELECT DISTINCT * FROM rt0, t1, vt0 WHERE (((((((rt0.c0)AND(t1.c59)))LIKE(CAST(rt0.c2 AS TEXT)))) ISNULL));
SELECT DISTINCT * FROM rt0, t1, vt0;
SELECT t0.c0, rt0.c1, rt0.c2 FROM t1, t0, rt0 GROUP BY t0.c0, rt0.c1, rt0.c2;
SELECT t0.c0, rt0.c1, rt0.c2 FROM t1, t0, rt0 WHERE (((rt0.c2) IS TRUE)) GROUP BY t0.c0, rt0.c1, rt0.c2 UNION SELECT ALL t0.c0, rt0.c1, rt0.c2 FROM t1, t0, rt0 WHERE ((NOT (((rt0.c2) IS TRUE)))) GROUP BY t0.c0, rt0.c1, rt0.c2 UNION SELECT t0.c0, rt0.c1, rt0.c2 FROM t1, t0, rt0 WHERE (((((rt0.c2) IS TRUE)) ISNULL)) GROUP BY t0.c0, rt0.c1, rt0.c2;
SELECT t0.c0, rt0.c1, rt0.c2 FROM t1, t0, rt0 GROUP BY t0.c0, rt0.c1, rt0.c2;
SELECT ALL t0.c1 FROM vt0 NOT INDEXED, t0 GROUP BY t0.c1;
SELECT t0.c1 FROM vt0, t0 GROUP BY t0.c1 HAVING ((((vt0.c0) NOT NULL)) NOT BETWEEN (AVG(AVG(t0.c1))) AND (COUNT(t0.c0))) UNION ALL SELECT ALL t0.c1 FROM vt0, t0 GROUP BY t0.c1 HAVING (NOT (((((vt0.c0) NOT NULL)) NOT BETWEEN (AVG(AVG(t0.c1))) AND (COUNT(t0.c0))))) UNION ALL SELECT ALL t0.c1 FROM vt0, t0 GROUP BY t0.c1 HAVING ((((((vt0.c0) NOT NULL)) NOT BETWEEN (AVG(AVG(t0.c1))) AND (COUNT(t0.c0)))) ISNULL);
SELECT ALL * FROM rt0, t1, vt0;
SELECT * FROM rt0, t1, vt0 WHERE ((NOT (rt0.c1)) COLLATE BINARY) ORDER BY ((((rt0.c0)GLOB(t1.c59))) BETWEEN ((('1983736932')IS(rt0.c1))) AND (CASE WHEN 'kj' THEN rt0.c1 END)) ASC, (((NOT (vt0.c0)))/(SQLITE_COMPILEOPTION_GET(rt0.c2)))  NULLS FIRST, CASE (- (rt0.c2))  WHEN t1.c59 THEN (rt0.c0 IN ()) END  NULLS LAST;
SELECT * FROM rt0, t1, vt0 WHERE ((NOT ((NOT (rt0.c1)) COLLATE BINARY))) ORDER BY ((((rt0.c0)GLOB(t1.c59))) BETWEEN ((('1983736932')IS(rt0.c1))) AND (CASE WHEN 'kj' THEN rt0.c1 END)) ASC, (((NOT (vt0.c0)))/(SQLITE_COMPILEOPTION_GET(rt0.c2)))  NULLS FIRST, CASE (- (rt0.c2))  WHEN t1.c59 THEN (rt0.c0 IN ()) END  NULLS LAST;
SELECT ALL * FROM rt0, t1, vt0 WHERE ((((NOT (rt0.c1)) COLLATE BINARY) ISNULL)) ORDER BY ((((rt0.c0)GLOB(t1.c59))) BETWEEN ((('1983736932')IS(rt0.c1))) AND (CASE WHEN 'kj' THEN rt0.c1 END)) ASC, (((NOT (vt0.c0)))/(SQLITE_COMPILEOPTION_GET(rt0.c2)))  NULLS FIRST, CASE (- (rt0.c2))  WHEN t1.c59 THEN (rt0.c0 IN ()) END  NULLS LAST;
SELECT ALL * FROM rt0, t1, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CAST(vt0.c0 COLLATE NOCASE AS REAL)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CAST(vt0.c0 COLLATE NOCASE AS REAL)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CAST(vt0.c0 COLLATE NOCASE AS REAL)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL rt0.c0, t1.c59, t0.c2, t0.c0, rt0.c2 FROM t0, t1, rt0 GROUP BY rt0.c0, t1.c59, t0.c2, t0.c0, rt0.c2;
SELECT ALL rt0.c0, t1.c59, t0.c2, t0.c0, rt0.c2 FROM t0, t1, rt0 WHERE ((('-339761578') IS FALSE)) GROUP BY rt0.c0, t1.c59, t0.c2, t0.c0, rt0.c2 UNION SELECT ALL rt0.c0, t1.c59, t0.c2, t0.c0, rt0.c2 FROM t0, t1, rt0 WHERE ((NOT ((('-339761578') IS FALSE)))) GROUP BY rt0.c0, t1.c59, t0.c2, t0.c0, rt0.c2 UNION SELECT ALL rt0.c0, t1.c59, t0.c2, t0.c0, rt0.c2 FROM t0, t1, rt0 WHERE ((((('-339761578') IS FALSE)) ISNULL)) GROUP BY rt0.c0, t1.c59, t0.c2, t0.c0, rt0.c2;
SELECT ALL rt0.c0, t1.c59, t0.c2, t0.c0, rt0.c2 FROM t0, t1, rt0 GROUP BY rt0.c0, t1.c59, t0.c2, t0.c0, rt0.c2;
SELECT vt0.c0, t0.c0, t1.c59 FROM vt0 INNER JOIN t1 ON (~ (((t0.c0) BETWEEN (t0.c1) AND (t0.c1)))) FULL OUTER JOIN t0 ON (((t0.c0 IN (t1.c59, t0.c1)))%(CASE t0.c0  WHEN t0.c2 THEN t1.c59 ELSE t1.c59 END)) GROUP BY vt0.c0, t0.c0, t1.c59;
SELECT ALL rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM vt0, rt0;
SELECT ALL rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM vt0, rt0 WHERE (((('', vt0.c0, rt0.c0)) NOT BETWEEN (('', ((1.652052196E9)<<(rt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)))) AND ((NULLIF(DISTINCT rt0.c2, rt0.c1), (((('0.548319463242777')OR(rt0.c0)))AND(x'')), ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM vt0, rt0 WHERE ((NOT (((('', vt0.c0, rt0.c0)) NOT BETWEEN (('', ((1.652052196E9)<<(rt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)))) AND ((NULLIF(DISTINCT rt0.c2, rt0.c1), (((('0.548319463242777')OR(rt0.c0)))AND(x'')), ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))))))) UNION ALL SELECT rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM vt0, rt0 WHERE (((((('', vt0.c0, rt0.c0)) NOT BETWEEN (('', ((1.652052196E9)<<(rt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)))) AND ((NULLIF(DISTINCT rt0.c2, rt0.c1), (((('0.548319463242777')OR(rt0.c0)))AND(x'')), ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))))) ISNULL));
SELECT ALL rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM vt0, rt0;
SELECT DISTINCT t1.c59 FROM t1;
SELECT DISTINCT t1.c59 FROM t1 WHERE (((CAST(t1.c59 AS NUMERIC)) BETWEEN (CASE WHEN t1.c59 THEN t1.c59 ELSE t1.c59 END) AND ((t1.c59 IN ())))) UNION SELECT DISTINCT t1.c59 FROM t1 WHERE ((NOT (((CAST(t1.c59 AS NUMERIC)) BETWEEN (CASE WHEN t1.c59 THEN t1.c59 ELSE t1.c59 END) AND ((t1.c59 IN ())))))) UNION SELECT DISTINCT t1.c59 FROM t1 WHERE (((((CAST(t1.c59 AS NUMERIC)) BETWEEN (CASE WHEN t1.c59 THEN t1.c59 ELSE t1.c59 END) AND ((t1.c59 IN ())))) ISNULL));
SELECT DISTINCT t1.c59 FROM t1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL t0.c1 FROM t1, t0, rt0 GROUP BY t0.c1;
SELECT t0.c1 FROM t1, t0, rt0 GROUP BY t0.c1 HAVING AVG(COUNT(*)) UNION ALL SELECT ALL t0.c1 FROM t1, t0, rt0 GROUP BY t0.c1 HAVING (NOT (AVG(COUNT(*)))) UNION ALL SELECT ALL t0.c1 FROM t1, t0, rt0 GROUP BY t0.c1 HAVING ((AVG(COUNT(*))) ISNULL);
SELECT ALL SUM(((((CASE vt0.c0  WHEN t0.c0 THEN t1.c59 ELSE '-70198792' END)AND(t0.c2 COLLATE RTRIM)))AND(((t0.c1) BETWEEN (t0.c2) AND (t0.c2))))) FROM t0, t1, vt0 ORDER BY CASE WHEN t0.c0 COLLATE BINARY THEN (((vt0.c0, t1.c59, t0.c1))>=((vt0.c0, vt0.c0, t0.c2))) END;
SELECT * FROM t0;
SELECT * FROM t0 WHERE ((((t0.c2 IN ())) NOT BETWEEN (CASE t0.c0  WHEN t0.c1 THEN t0.c1 END) AND (((t0.c1)IS(NULL))))) UNION ALL SELECT * FROM t0 WHERE ((NOT ((((t0.c2 IN ())) NOT BETWEEN (CASE t0.c0  WHEN t0.c1 THEN t0.c1 END) AND (((t0.c1)IS(NULL))))))) UNION ALL SELECT * FROM t0 WHERE ((((((t0.c2 IN ())) NOT BETWEEN (CASE t0.c0  WHEN t0.c1 THEN t0.c1 END) AND (((t0.c1)IS(NULL))))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM rt0, t1;
SELECT DISTINCT * FROM rt0, t1 WHERE (LIKE(((t1.c59)AND('1214533926')), (((rt0.c1))>((t1.c59))), '-')) UNION SELECT DISTINCT * FROM rt0, t1 WHERE ((NOT (LIKE(((t1.c59)AND('1214533926')), (((rt0.c1))>((t1.c59))), '-')))) UNION SELECT DISTINCT * FROM rt0 NOT INDEXED, t1 WHERE (((LIKE(((t1.c59)AND('1214533926')), (((rt0.c1))>((t1.c59))), '-')) ISNULL));
SELECT DISTINCT * FROM rt0, t1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((SUM(t0.c1)) NOT BETWEEN (TRIM(t0.c0)) AND (GROUP_CONCAT(0x6a5c7d3c))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((SUM(t0.c1)) NOT BETWEEN (TRIM(t0.c0)) AND (GROUP_CONCAT(0x6a5c7d3c))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((SUM(t0.c1)) NOT BETWEEN (TRIM(t0.c0)) AND (GROUP_CONCAT(0X6a5c7d3c)))) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((SUM(t0.c1)) NOT BETWEEN (TRIM(t0.c0)) AND (GROUP_CONCAT(0x6a5c7d3c))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((SUM(t0.c1)) NOT BETWEEN (TRIM(t0.c0)) AND (GROUP_CONCAT(0x6a5c7d3c))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((SUM(t0.c1)) NOT BETWEEN (TRIM(t0.c0)) AND (GROUP_CONCAT(0X6a5c7d3c)))) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL TOTAL(((vt0.c0)!=((('')!=(vt0.c0))))) FROM vt0;
SELECT ALL rt0.c0 FROM rt0;
SELECT rt0.c0 FROM rt0 WHERE (TYPEOF(CAST(rt0.c1 AS BLOB))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE ((NOT (TYPEOF(CAST(rt0.c1 AS BLOB))))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE (((TYPEOF(CAST(rt0.c1 AS BLOB))) ISNULL));
SELECT ALL rt0.c0 FROM rt0;
SELECT DISTINCT * FROM t1, vt0, t0, rt0;
SELECT DISTINCT * FROM t1, vt0, t0, rt0 WHERE ((NULL COLLATE BINARY IN ((+ (t0.c2)), CASE WHEN t0.c2 THEN t0.c1 END))) UNION SELECT DISTINCT * FROM t1, vt0, t0, rt0 WHERE ((NOT ((NULL COLLATE BINARY IN ((+ (t0.c2)), CASE WHEN t0.c2 THEN t0.c1 END))))) UNION SELECT DISTINCT * FROM t1, vt0, t0, rt0 WHERE ((((NULL COLLATE BINARY IN ((+ (t0.c2)), CASE WHEN t0.c2 THEN t0.c1 END))) ISNULL));
SELECT DISTINCT * FROM t1, vt0, t0, rt0;
SELECT ALL rt0.c0 FROM t0, rt0, t1 GROUP BY rt0.c0;
SELECT rt0.c0 FROM t0, rt0, t1 WHERE (t1.c59) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM t0, rt0, t1 WHERE ((NOT (t1.c59))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM t0, rt0, t1 WHERE (((t1.c59) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM t0, rt0, t1 GROUP BY rt0.c0;
SELECT ALL t0.c0, t1.c59, rt0.c2 FROM t1, vt0, rt0, t0 GROUP BY t0.c0, t1.c59, rt0.c2;
SELECT t0.c0, t1.c59, rt0.c2 FROM t1, vt0, rt0, t0 GROUP BY t0.c0, t1.c59, rt0.c2 HAVING MAX(COUNT(*)) UNION ALL SELECT t0.c0, t1.c59, rt0.c2 FROM t1, vt0, rt0, t0 GROUP BY t0.c0, t1.c59, rt0.c2 HAVING (NOT (MAX(COUNT(*)))) UNION ALL SELECT t0.c0, t1.c59, rt0.c2 FROM t1, vt0, rt0, t0 GROUP BY t0.c0, t1.c59, rt0.c2 HAVING ((MAX(COUNT(*))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ('') UNION ALL SELECT * FROM rt0 WHERE ((NOT (''))) UNION ALL SELECT * FROM rt0 WHERE ((('') ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT t0.c1 FROM t0;
SELECT DISTINCT t0.c1 FROM t0 WHERE ((- ((((t0.c1)) BETWEEN ((t0.c0)) AND ((t0.c0)))))) UNION SELECT DISTINCT t0.c1 FROM t0 WHERE ((NOT ((- ((((t0.c1)) BETWEEN ((t0.c0)) AND ((t0.c0)))))))) UNION SELECT DISTINCT t0.c1 FROM t0 WHERE ((((- ((((t0.c1)) BETWEEN ((t0.c0)) AND ((t0.c0)))))) ISNULL));
SELECT DISTINCT t0.c1 FROM t0;
SELECT vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM t1, vt0 CROSS JOIN rt0 ON (((((x'e9bf')) BETWEEN ((t1.c59)) AND ((rt0.c2))))/((rt0.c1 IN ()))) GROUP BY vt0.c0, rt0.c0, rt0.c1, rt0.c2;
SELECT vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM t1, vt0 CROSS JOIN rt0 ON (((((x'e9bf')) BETWEEN ((t1.c59)) AND ((rt0.c2))))/((rt0.c1 IN ()))) WHERE (((((t1.c59) IS FALSE))<=((((t1.c59)) BETWEEN ((vt0.c0)) AND ((rt0.c0)))))) GROUP BY vt0.c0, rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM t1, vt0 CROSS JOIN rt0 ON (((((x'e9bf')) BETWEEN ((t1.c59)) AND ((rt0.c2))))/((rt0.c1 IN ()))) WHERE ((NOT (((((t1.c59) IS FALSE))<=((((t1.c59)) BETWEEN ((vt0.c0)) AND ((rt0.c0)))))))) GROUP BY vt0.c0, rt0.c0, rt0.c1, rt0.c2 UNION SELECT vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM t1, vt0 CROSS JOIN rt0 ON (((((x'e9bf')) BETWEEN ((t1.c59)) AND ((rt0.c2))))/((rt0.c1 IN ()))) WHERE (((((((t1.c59) IS FALSE))<=((((t1.c59)) BETWEEN ((vt0.c0)) AND ((rt0.c0)))))) ISNULL)) GROUP BY vt0.c0, rt0.c0, rt0.c1, rt0.c2;
SELECT vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM t1, vt0 CROSS JOIN rt0 ON (((((x'e9bf')) BETWEEN ((t1.c59)) AND ((rt0.c2))))/((rt0.c1 IN ()))) GROUP BY vt0.c0, rt0.c0, rt0.c1, rt0.c2;
SELECT ALL t1.c59, vt0.c0, rt0.c2, rt0.c0 FROM vt0, t1, rt0 GROUP BY t1.c59, vt0.c0, rt0.c2, rt0.c0;
SELECT t1.c59, vt0.c0, rt0.c2, rt0.c0 FROM vt0, t1, rt0 GROUP BY t1.c59, vt0.c0, rt0.c2, rt0.c0 HAVING GROUP_CONCAT(SUM(rt0.c2)) UNION ALL SELECT t1.c59, vt0.c0, rt0.c2, rt0.c0 FROM vt0, t1, rt0 GROUP BY t1.c59, vt0.c0, rt0.c2, rt0.c0 HAVING (NOT (GROUP_CONCAT(SUM(rt0.c2)))) UNION ALL SELECT t1.c59, vt0.c0, rt0.c2, rt0.c0 FROM vt0, t1, rt0 GROUP BY t1.c59, vt0.c0, rt0.c2, rt0.c0 HAVING ((GROUP_CONCAT(SUM(rt0.c2))) ISNULL);
SELECT TOTAL((NOT (UNICODE(t1.c59)))) FROM t1 ORDER BY CASE WHEN t1.c59 COLLATE BINARY THEN CASE WHEN t1.c59 THEN t1.c59 END WHEN ((t1.c59)+(t1.c59)) THEN t1.c59 WHEN UPPER(t1.c59) THEN (((t1.c59))<=((x'a9115f94'))) END  NULLS FIRST;
SELECT ALL rt0.c0 FROM vt0, rt0;
SELECT ALL rt0.c0 FROM vt0, rt0 WHERE ((((CAST(rt0.c0 AS TEXT), ((rt0.c2) ISNULL), CAST(rt0.c1 AS BLOB)))<((rt0.c2, ((vt0.c0)|(rt0.c1)), CASE WHEN vt0.c0 THEN rt0.c1 END)))) UNION ALL SELECT ALL rt0.c0 FROM vt0, rt0 WHERE ((NOT ((((CAST(rt0.c0 AS TEXT), ((rt0.c2) ISNULL), CAST(rt0.c1 AS BLOB)))<((rt0.c2, ((vt0.c0)|(rt0.c1)), CASE WHEN vt0.c0 THEN rt0.c1 END)))))) UNION ALL SELECT ALL rt0.c0 FROM vt0, rt0 WHERE ((((((CAST(rt0.c0 AS TEXT), ((rt0.c2) ISNULL), CAST(rt0.c1 AS BLOB)))<((rt0.c2, ((vt0.c0)|(rt0.c1)), CASE WHEN vt0.c0 THEN rt0.c1 END)))) ISNULL));
SELECT ALL rt0.c0 FROM vt0, rt0;
SELECT DISTINCT vt0.c0, t1.c59 FROM vt0, t1;
SELECT DISTINCT vt0.c0, t1.c59 FROM vt0, t1 WHERE (NULL) UNION SELECT DISTINCT vt0.c0, t1.c59 FROM vt0, t1 WHERE ((NOT (NULL))) UNION SELECT DISTINCT vt0.c0, t1.c59 FROM vt0, t1 WHERE (((NULL) ISNULL));
SELECT DISTINCT vt0.c0, t1.c59 FROM vt0, t1;
SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2;
SELECT t0.c1, t0.c0, t0.c2 FROM t0 WHERE ((~ ((t0.c2 IN (t0.c1))))) GROUP BY t0.c1, t0.c0, t0.c2 UNION SELECT t0.c1, t0.c0, t0.c2 FROM t0 WHERE ((NOT ((~ ((t0.c2 IN (t0.c1))))))) GROUP BY t0.c1, t0.c0, t0.c2 UNION SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 WHERE ((((~ ((t0.c2 IN (t0.c1))))) ISNULL)) GROUP BY t0.c1, t0.c0, t0.c2;
SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2;
SELECT t0.c2 FROM vt0 INDEXED BY i82, t0 GROUP BY t0.c2;
SELECT ALL * FROM vt0, t0, rt0;
SELECT ALL * FROM vt0, t0, rt0 WHERE (IFNULL(((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c0)), CAST(rt0.c2 AS INTEGER))) UNION ALL SELECT * FROM vt0, t0, rt0 WHERE ((NOT (IFNULL(((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c0)), CAST(rt0.c2 AS INTEGER))))) UNION ALL SELECT ALL * FROM vt0, t0, rt0 WHERE (((IFNULL(((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c0)), CAST(rt0.c2 AS INTEGER))) ISNULL));
SELECT ALL * FROM vt0, t0, rt0;
SELECT DISTINCT rt0.c2, t1.c59, rt0.c1, t0.c2, t0.c1 FROM t0 LEFT OUTER JOIN rt0 ON CASE WHEN ((rt0.c0) ISNULL) THEN ((t1.c59) IS FALSE) END LEFT OUTER JOIN t1 ON ((((t0.c0)OR(((((((((t0.c2)OR(x'')))OR(t0.c2)))AND(rt0.c0)))AND(x'')))))OR(1.56013941E9));
SELECT ALL rt0.c2, rt0.c0, rt0.c1, t0.c0, t1.c59 FROM t0, t1, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, t0.c0, t1.c59;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, t0.c0, t1.c59 FROM t0, t1, rt0 WHERE (CAST(((rt0.c2)*(rt0.c2)) AS REAL)) GROUP BY rt0.c2, rt0.c0, rt0.c1, t0.c0, t1.c59 UNION SELECT rt0.c2, rt0.c0, rt0.c1, t0.c0, t1.c59 FROM t0, t1, rt0 WHERE ((NOT (CAST(((rt0.c2)*(rt0.c2)) AS REAL)))) GROUP BY rt0.c2, rt0.c0, rt0.c1, t0.c0, t1.c59 UNION SELECT rt0.c2, rt0.c0, rt0.c1, t0.c0, t1.c59 FROM t0, t1, rt0 WHERE (((CAST(((rt0.c2)*(rt0.c2)) AS REAL)) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1, t0.c0, t1.c59;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, t0.c0, t1.c59 FROM t0, t1, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, t0.c0, t1.c59;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING TOTAL(((GROUP_CONCAT(rt0.c2)) NOT BETWEEN (rt0.c2) AND (rt0.c0))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (TOTAL(((GROUP_CONCAT(rt0.c2)) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((TOTAL(((GROUP_CONCAT(rt0.c2)) NOT BETWEEN (rt0.c2) AND (rt0.c0)))) ISNULL);
SELECT rt0.c2, rt0.c0 FROM vt0 CROSS JOIN rt0 ON (- (rt0.c2));
SELECT rt0.c2, rt0.c0 FROM vt0 CROSS JOIN rt0 ON (- (rt0.c2)) WHERE (-1685875159 COLLATE RTRIM) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM vt0 CROSS JOIN rt0 ON (- (rt0.c2)) WHERE ((NOT (-1685875159 COLLATE RTRIM))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM vt0 CROSS JOIN rt0 ON (- (rt0.c2)) WHERE (((-1685875159 COLLATE RTRIM) ISNULL));
SELECT rt0.c2, rt0.c0 FROM vt0 CROSS JOIN rt0 ON (- (rt0.c2));
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (CASE (((t1.c59)) BETWEEN ((t1.c59)) AND ((t1.c59)))  WHEN (((t1.c59))<=((t1.c59))) THEN CASE WHEN t1.c59 THEN t1.c59 WHEN t1.c59 THEN '-1018408871' WHEN x'' THEN t1.c59 END END) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (CASE (((t1.c59)) BETWEEN ((t1.c59)) AND ((t1.c59)))  WHEN (((t1.c59))<=((t1.c59))) THEN CASE WHEN t1.c59 THEN t1.c59 WHEN t1.c59 THEN '-1018408871' WHEN x'' THEN t1.c59 END END))) UNION SELECT DISTINCT * FROM t1 WHERE (((CASE (((t1.c59)) BETWEEN ((t1.c59)) AND ((t1.c59)))  WHEN (((t1.c59))<=((t1.c59))) THEN CASE WHEN t1.c59 THEN t1.c59 WHEN t1.c59 THEN '-1018408871' WHEN x'' THEN t1.c59 END END) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT t0.c1, t0.c2 FROM t0, t1, rt0, vt0 GROUP BY t0.c1, t0.c2;
SELECT t0.c1, t0.c2 FROM t0, t1, rt0, vt0 WHERE (CASE t0.c1  WHEN t0.c0 THEN rt0.c2 ELSE x'bfeae364' END COLLATE BINARY) GROUP BY t0.c1, t0.c2 UNION SELECT ALL t0.c1, t0.c2 FROM t0, t1, rt0, vt0 WHERE ((NOT (CASE t0.c1  WHEN t0.c0 THEN rt0.c2 ELSE x'bfeae364' END COLLATE BINARY))) GROUP BY t0.c1, t0.c2 UNION SELECT ALL t0.c1, t0.c2 FROM t0, t1, rt0, vt0 WHERE (((CASE t0.c1  WHEN t0.c0 THEN rt0.c2 ELSE x'bfeae364' END COLLATE BINARY) ISNULL)) GROUP BY t0.c1, t0.c2;
SELECT t0.c1, t0.c2 FROM t0, t1, rt0, vt0 GROUP BY t0.c1, t0.c2;
SELECT ALL rt0.c1, t1.c59, t0.c0, rt0.c2, t0.c1, vt0.c0, t0.c2 FROM vt0 LEFT OUTER JOIN t1 ON (((((rt0.c2 IN ()))AND(((((rt0.c2)OR(t0.c2)))AND(vt0.c0)))))AND('WtoYk&')) FULL OUTER JOIN t0 ON t1.c59 COLLATE NOCASE RIGHT OUTER JOIN rt0 ON CAST(t0.c2 AS NUMERIC) GROUP BY rt0.c1, t1.c59, t0.c0, rt0.c2, t0.c1, vt0.c0, t0.c2;
SELECT rt0.c1, t1.c59, t0.c0, rt0.c2, t0.c1, vt0.c0, t0.c2 FROM vt0 LEFT OUTER JOIN t1 ON (((((rt0.c2 IN ()))AND(((((rt0.c2)OR(t0.c2)))AND(vt0.c0)))))AND('WtoYk&')) FULL OUTER JOIN t0 ON t1.c59 COLLATE NOCASE RIGHT OUTER JOIN rt0 ON CAST(t0.c2 AS NUMERIC) GROUP BY rt0.c1, t1.c59, t0.c0, rt0.c2, t0.c1, vt0.c0, t0.c2 HAVING GROUP_CONCAT(SUM(MIN(AVG(rt0.c2)))) UNION ALL SELECT ALL rt0.c1, t1.c59, t0.c0, rt0.c2, t0.c1, vt0.c0, t0.c2 FROM vt0 LEFT OUTER JOIN t1 ON (((((rt0.c2 IN ()))AND(((((rt0.c2)OR(t0.c2)))AND(vt0.c0)))))AND('WtoYk&')) FULL OUTER JOIN t0 ON t1.c59 COLLATE NOCASE RIGHT OUTER JOIN rt0 ON CAST(t0.c2 AS NUMERIC) GROUP BY rt0.c1, t1.c59, t0.c0, rt0.c2, t0.c1, vt0.c0, t0.c2 HAVING (NOT (GROUP_CONCAT(SUM(MIN(AVG(rt0.c2)))))) UNION ALL SELECT rt0.c1, t1.c59, t0.c0, rt0.c2, t0.c1, vt0.c0, t0.c2 FROM vt0 LEFT OUTER JOIN t1 ON (((((rt0.c2 IN ()))AND(((((rt0.c2)OR(t0.c2)))AND(vt0.c0)))))AND('WtoYk&')) FULL OUTER JOIN t0 ON t1.c59 COLLATE NOCASE RIGHT OUTER JOIN rt0 ON CAST(t0.c2 AS NUMERIC) GROUP BY rt0.c1, t1.c59, t0.c0, rt0.c2, t0.c1, vt0.c0, t0.c2 HAVING ((GROUP_CONCAT(SUM(MIN(AVG(rt0.c2))))) ISNULL);
SELECT t1.c59 FROM vt0, t1;
SELECT ALL t1.c59 FROM vt0, t1 WHERE (((t1.c59)|((~ (t1.c59))))) UNION ALL SELECT t1.c59 FROM vt0, t1 WHERE ((NOT (((t1.c59)|((~ (t1.c59))))))) UNION ALL SELECT ALL t1.c59 FROM vt0, t1 WHERE (((((t1.c59)|((~ (t1.c59))))) ISNULL));
SELECT t1.c59 FROM vt0, t1;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT rt0.c2, t0.c2, rt0.c1 FROM t1, t0 INDEXED BY i82, rt0 GROUP BY rt0.c2, t0.c2, rt0.c1;
SELECT ALL rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c2;
SELECT ALL rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c2 HAVING PRINTF(COUNT(*), ((MIN(GROUP_CONCAT(AVG(MIN(rt0.c2))))) BETWEEN (GROUP_CONCAT(AVG(vt0.c0))) AND (vt0.c0)), CAST(SUM(vt0.c0) AS REAL)) UNION ALL SELECT rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c2 HAVING (NOT (PRINTF(COUNT(*), ((MIN(GROUP_CONCAT(AVG(MIN(rt0.c2))))) BETWEEN (GROUP_CONCAT(AVG(vt0.c0))) AND (vt0.c0)), CAST(SUM(vt0.c0) AS REAL)))) UNION ALL SELECT rt0.c1, vt0.c0, rt0.c2 FROM rt0 NOT INDEXED, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c2 HAVING ((PRINTF(COUNT(*), ((MIN(GROUP_CONCAT(AVG(MIN(rt0.c2))))) BETWEEN (GROUP_CONCAT(AVG(vt0.c0))) AND (vt0.c0)), CAST(SUM(vt0.c0) AS REAL))) ISNULL);
SELECT ALL t0.c0, t0.c2, t0.c1, rt0.c0, rt0.c2, rt0.c1 FROM t0, rt0;
SELECT t0.c0, t0.c2, t0.c1, rt0.c0, rt0.c2, rt0.c1 FROM t0, rt0 WHERE ((CAST(t0.c2 AS REAL) IN ())) UNION ALL SELECT ALL t0.c0, t0.c2, t0.c1, rt0.c0, rt0.c2, rt0.c1 FROM t0, rt0 WHERE ((NOT ((CAST(t0.c2 AS REAL) IN ())))) UNION ALL SELECT t0.c0, t0.c2, t0.c1, rt0.c0, rt0.c2, rt0.c1 FROM t0, rt0 WHERE ((((CAST(t0.c2 AS REAL) IN ())) ISNULL));
SELECT ALL t0.c0, t0.c2, t0.c1, rt0.c0, rt0.c2, rt0.c1 FROM t0, rt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((((((t0.c2))<>((t0.c0))))>>(STRFTIME(t0.c2, t0.c2, t0.c0)))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((((((t0.c2))!=((t0.c0))))>>(STRFTIME(t0.c2, t0.c2, t0.c0)))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((((((t0.c2))!=((t0.c0))))>>(STRFTIME(t0.c2, t0.c2, t0.c0)))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t1.c59, vt0.c0, t0.c1, t0.c2, t0.c0 FROM vt0 FULL OUTER JOIN t1 ON (~ (t0.c2 COLLATE NOCASE)) CROSS JOIN t0 ON CASE WHEN (((vt0.c0, vt0.c0, t0.c2)) NOT BETWEEN ((t0.c2, t0.c1, t0.c0)) AND ((x'2fc7', t0.c1, t0.c0))) THEN TRIM(DISTINCT NULL) END GROUP BY t1.c59, vt0.c0, t0.c1, t0.c2, t0.c0;
SELECT ALL rt0.c1, t0.c2, t0.c0, t0.c1, rt0.c0, rt0.c2 FROM rt0, vt0, t0 GROUP BY rt0.c1, t0.c2, t0.c0, t0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, t0.c2, t0.c0, t0.c1, rt0.c0, rt0.c2 FROM rt0, vt0, t0 GROUP BY rt0.c1, t0.c2, t0.c0, t0.c1, rt0.c0, rt0.c2 HAVING ((MIN(t0.c1)) IS TRUE) UNION ALL SELECT rt0.c1, t0.c2, t0.c0, t0.c1, rt0.c0, rt0.c2 FROM rt0, vt0, t0 GROUP BY rt0.c1, t0.c2, t0.c0, t0.c1, rt0.c0, rt0.c2 HAVING (NOT (((MIN(t0.c1)) IS TRUE))) UNION ALL SELECT ALL rt0.c1, t0.c2, t0.c0, t0.c1, rt0.c0, rt0.c2 FROM rt0, vt0, t0 GROUP BY rt0.c1, t0.c2, t0.c0, t0.c1, rt0.c0, rt0.c2 HAVING ((((MIN(t0.c1)) IS TRUE)) ISNULL);
SELECT ALL rt0.c1, t0.c2, t0.c0, t0.c1, rt0.c0, rt0.c2 FROM rt0, vt0, t0 GROUP BY rt0.c1, t0.c2, t0.c0, t0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, t0.c2, t0.c0, t0.c1, rt0.c0, rt0.c2 FROM rt0, vt0, t0 GROUP BY rt0.c1, t0.c2, t0.c0, t0.c1, rt0.c0, rt0.c2 HAVING ((MIN(t0.c1)) IS TRUE) UNION ALL SELECT rt0.c1, t0.c2, t0.c0, t0.c1, rt0.c0, rt0.c2 FROM rt0, vt0, t0 GROUP BY rt0.c1, t0.c2, t0.c0, t0.c1, rt0.c0, rt0.c2 HAVING (NOT (((MIN(t0.c1)) IS TRUE))) UNION ALL SELECT ALL rt0.c1, t0.c2, t0.c0, t0.c1, rt0.c0, rt0.c2 FROM rt0, vt0, t0 GROUP BY rt0.c1, t0.c2, t0.c0, t0.c1, rt0.c0, rt0.c2 HAVING ((((MIN(t0.c1)) IS TRUE)) ISNULL);
SELECT ALL rt0.c1, t0.c2, t0.c0, t0.c1, rt0.c0, rt0.c2 FROM rt0, vt0, t0 GROUP BY rt0.c1, t0.c2, t0.c0, t0.c1, rt0.c0, rt0.c2;
SELECT ALL SUM(((t0.c0)LIKE(vt0.c0 COLLATE NOCASE))) FROM t1, t0, vt0 ORDER BY ((t0.c1 COLLATE NOCASE) NOT BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (((x'')||(t1.c59)))) DESC  NULLS FIRST, ((((((((((0.03221552548358464)AND(t1.c59)))OR(t0.c1)))AND(t0.c2)))AND(vt0.c0)))&(TRIM(t0.c0))) DESC;
SELECT ALL rt0.c0, vt0.c0, t0.c0, t0.c1, rt0.c1, rt0.c2, t0.c2, t1.c59 FROM t1, t0, vt0, rt0;
SELECT ALL rt0.c0, vt0.c0, t0.c0, t0.c1, rt0.c1, rt0.c2, t0.c2, t1.c59 FROM t1, t0, vt0, rt0 WHERE ((((((- (rt0.c1)))OR(NULL)))AND(0x3785074))) UNION ALL SELECT rt0.c0, vt0.c0, t0.c0, t0.c1, rt0.c1, rt0.c2, t0.c2, t1.c59 FROM t1, t0, vt0, rt0 WHERE ((NOT ((((((- (rt0.c1)))OR(NULL)))AND(0X3785074))))) UNION ALL SELECT ALL rt0.c0, vt0.c0, t0.c0, t0.c1, rt0.c1, rt0.c2, t0.c2, t1.c59 FROM t1, t0, vt0, rt0 WHERE ((((((((- (rt0.c1)))OR(NULL)))AND(0x3785074))) ISNULL));
SELECT ALL rt0.c0, vt0.c0, t0.c0, t0.c1, rt0.c1, rt0.c2, t0.c2, t1.c59 FROM t1, t0, vt0, rt0;
SELECT DISTINCT vt0.c0, t0.c1, t1.c59, t0.c0, t0.c2, rt0.c1, rt0.c2 FROM t1, t0, vt0 INDEXED BY i11, rt0;
SELECT ALL t0.c0, t0.c2, rt0.c0, rt0.c1, vt0.c0, t1.c59, rt0.c2, t0.c1 FROM vt0 LEFT OUTER JOIN t1 ON ((t1.c59 COLLATE BINARY)IS(((t0.c1)-(rt0.c1)))) INNER JOIN rt0 ON HEX(DISTINCT ((t1.c59)<=(rt0.c0))) LEFT OUTER JOIN t0 ON ((((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))) NOTNULL) GROUP BY t0.c0, t0.c2, rt0.c0, rt0.c1, vt0.c0, t1.c59, rt0.c2, t0.c1;
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING (((GROUP_CONCAT(COUNT(*)), COUNT(*), ((SUM(SUM(t0.c0))) BETWEEN (COUNT(t0.c1)) AND (COUNT(*)))))>((COUNT(GROUP_CONCAT(TOTAL(t0.c0))), MIN(t0.c2), ((((((((GROUP_CONCAT(GROUP_CONCAT(t0.c0)))OR(t0.c1)))AND(t0.c1)))AND(t0.c1)))OR(COUNT(*)))))) UNION ALL SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING (NOT ((((GROUP_CONCAT(COUNT(*)), COUNT(*), ((SUM(SUM(t0.c0))) BETWEEN (COUNT(t0.c1)) AND (COUNT(*)))))>((COUNT(GROUP_CONCAT(TOTAL(t0.c0))), MIN(t0.c2), ((((((((GROUP_CONCAT(GROUP_CONCAT(t0.c0)))OR(t0.c1)))AND(t0.c1)))AND(t0.c1)))OR(COUNT(*)))))))) UNION ALL SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING (((((GROUP_CONCAT(COUNT(*)), COUNT(*), ((SUM(SUM(t0.c0))) BETWEEN (COUNT(t0.c1)) AND (COUNT(*)))))>((COUNT(GROUP_CONCAT(TOTAL(t0.c0))), MIN(t0.c2), ((((((((GROUP_CONCAT(GROUP_CONCAT(t0.c0)))OR(t0.c1)))AND(t0.c1)))AND(t0.c1)))OR(COUNT(*))))))) ISNULL);
SELECT t0.c2, t0.c1, t0.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, t0;
SELECT ALL t0.c2, t0.c1, t0.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, t0 WHERE (((rt0.c0) IS FALSE) COLLATE BINARY) UNION ALL SELECT t0.c2, t0.c1, t0.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, t0 WHERE ((NOT (((rt0.c0) IS FALSE) COLLATE BINARY))) UNION ALL SELECT t0.c2, t0.c1, t0.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, t0 WHERE (((((rt0.c0) IS FALSE) COLLATE BINARY) ISNULL));
SELECT t0.c2, t0.c1, t0.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, t0;
SELECT DISTINCT t0.c2, t0.c1 FROM vt0 FULL OUTER JOIN t0 ON (((((vt0.c0)GLOB(x'')), 0Xffffffffdf5c5097, UNICODE(t0.c0)))<=((t0.c2, ((t0.c1)*(t0.c1)), ((t0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) RIGHT OUTER JOIN rt0 ON CASE ((t0.c1)<(t0.c1))  WHEN CASE vt0.c0  WHEN rt0.c0 THEN t0.c1 END THEN (t0.c0 IN ()) END;
SELECT ALL rt0.c1, t0.c1 FROM rt0, t1, vt0, t0 GROUP BY rt0.c1, t0.c1;
SELECT ALL rt0.c1, t0.c1 FROM rt0, t1, vt0, t0 WHERE (((CAST(t0.c2 AS INTEGER)) BETWEEN (((t0.c2)AND(t1.c59))) AND ((((t0.c0, '<n', rt0.c1)) NOT BETWEEN ((t0.c2, 'qO+hUtnowE7', rt0.c1)) AND ((rt0.c1, rt0.c1, vt0.c0)))))) GROUP BY rt0.c1, t0.c1 UNION SELECT ALL rt0.c1, t0.c1 FROM rt0, t1, vt0, t0 WHERE ((NOT (((CAST(t0.c2 AS INTEGER)) BETWEEN (((t0.c2)AND(t1.c59))) AND ((((t0.c0, '<n', rt0.c1)) NOT BETWEEN ((t0.c2, 'qO+hUtnowE7', rt0.c1)) AND ((rt0.c1, rt0.c1, vt0.c0)))))))) GROUP BY rt0.c1, t0.c1 UNION SELECT rt0.c1, t0.c1 FROM rt0 NOT INDEXED, t1, vt0, t0 WHERE (((((CAST(t0.c2 AS INTEGER)) BETWEEN (((t0.c2)AND(t1.c59))) AND ((((t0.c0, '<n', rt0.c1)) NOT BETWEEN ((t0.c2, 'qO+hUtnowE7', rt0.c1)) AND ((rt0.c1, rt0.c1, vt0.c0)))))) ISNULL)) GROUP BY rt0.c1, t0.c1;
SELECT ALL rt0.c1, t0.c1 FROM rt0, t1, vt0, t0 GROUP BY rt0.c1, t0.c1;
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING MIN((COUNT(t0.c0) IN ())) UNION ALL SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING (NOT (MIN((COUNT(t0.c0) IN ())))) UNION ALL SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING ((MIN((COUNT(t0.c0) IN ()))) ISNULL);
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING MIN((COUNT(t0.c0) IN ())) UNION ALL SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING (NOT (MIN((COUNT(t0.c0) IN ())))) UNION ALL SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING ((MIN((COUNT(t0.c0) IN ()))) ISNULL);
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT MAX(((t0.c0)OR(t0.c0)) COLLATE BINARY) FROM t0;
SELECT t0.c0, t0.c1, t1.c59, vt0.c0, rt0.c1, t0.c2, rt0.c0, rt0.c2 FROM rt0, vt0, t1, t0;
SELECT ALL t0.c0, t0.c1, t1.c59, vt0.c0, rt0.c1, t0.c2, rt0.c0, rt0.c2 FROM rt0, vt0, t1, t0 WHERE (((((t1.c59)LIKE(vt0.c0)))&(((t1.c59) NOT BETWEEN (vt0.c0) AND (rt0.c1))))) UNION ALL SELECT ALL t0.c0, t0.c1, t1.c59, vt0.c0, rt0.c1, t0.c2, rt0.c0, rt0.c2 FROM rt0, vt0, t1, t0 WHERE ((NOT (((((t1.c59)LIKE(vt0.c0)))&(((t1.c59) NOT BETWEEN (vt0.c0) AND (rt0.c1))))))) UNION ALL SELECT ALL t0.c0, t0.c1, t1.c59, vt0.c0, rt0.c1, t0.c2, rt0.c0, rt0.c2 FROM rt0, vt0, t1, t0 WHERE (((((((t1.c59)LIKE(vt0.c0)))&(((t1.c59) NOT BETWEEN (vt0.c0) AND (rt0.c1))))) ISNULL));
SELECT t0.c0, t0.c1, t1.c59, vt0.c0, rt0.c1, t0.c2, rt0.c0, rt0.c2 FROM rt0, vt0, t1, t0;
SELECT DISTINCT * FROM rt0, vt0, t0;
SELECT DISTINCT * FROM rt0, vt0, t0 WHERE ('b5#''^ሏYD') UNION SELECT DISTINCT * FROM rt0, vt0, t0 WHERE ((NOT ('b5#''^ሏYD'))) UNION SELECT DISTINCT * FROM rt0, vt0, t0 WHERE ((('b5#''^ሏYD') ISNULL));
SELECT DISTINCT * FROM rt0, vt0, t0;
SELECT ALL vt0.c0, t0.c0, t0.c1, t1.c59, rt0.c2, rt0.c1, t0.c2 FROM t0, t1, rt0, vt0 GROUP BY vt0.c0, t0.c0, t0.c1, t1.c59, rt0.c2, rt0.c1, t0.c2;
SELECT vt0.c0, t0.c0, t0.c1, t1.c59, rt0.c2, rt0.c1, t0.c2 FROM t0, t1, rt0, vt0 WHERE ((((((t0.c2, '707314407', rt0.c0))==((rt0.c0, t0.c2, t0.c0)))) BETWEEN (((((rt0.c2)AND(t0.c0)))OR(rt0.c1))) AND ((NOT (t1.c59))))) GROUP BY vt0.c0, t0.c0, t0.c1, t1.c59, rt0.c2, rt0.c1, t0.c2 UNION SELECT ALL vt0.c0, t0.c0, t0.c1, t1.c59, rt0.c2, rt0.c1, t0.c2 FROM t0, t1, rt0, vt0 WHERE ((NOT ((((((t0.c2, '707314407', rt0.c0))=((rt0.c0, t0.c2, t0.c0)))) BETWEEN (((((rt0.c2)AND(t0.c0)))OR(rt0.c1))) AND ((NOT (t1.c59))))))) GROUP BY vt0.c0, t0.c0, t0.c1, t1.c59, rt0.c2, rt0.c1, t0.c2 UNION SELECT vt0.c0, t0.c0, t0.c1, t1.c59, rt0.c2, rt0.c1, t0.c2 FROM t0, t1, rt0, vt0 WHERE ((((((((t0.c2, '707314407', rt0.c0))=((rt0.c0, t0.c2, t0.c0)))) BETWEEN (((((rt0.c2)AND(t0.c0)))OR(rt0.c1))) AND ((NOT (t1.c59))))) ISNULL)) GROUP BY vt0.c0, t0.c0, t0.c1, t1.c59, rt0.c2, rt0.c1, t0.c2;
SELECT ALL vt0.c0, t0.c0, t0.c1, t1.c59, rt0.c2, rt0.c1, t0.c2 FROM t0, t1, rt0, vt0 GROUP BY vt0.c0, t0.c0, t0.c1, t1.c59, rt0.c2, rt0.c1, t0.c2;
SELECT ALL vt0.c0 FROM rt0, vt0, t1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM rt0, vt0, t1 GROUP BY vt0.c0 HAVING TOTAL(GROUP_CONCAT(rt0.c1)) UNION ALL SELECT ALL vt0.c0 FROM rt0, vt0, t1 GROUP BY vt0.c0 HAVING (NOT (TOTAL(GROUP_CONCAT(rt0.c1)))) UNION ALL SELECT ALL vt0.c0 FROM rt0, vt0, t1 GROUP BY vt0.c0 HAVING ((TOTAL(GROUP_CONCAT(rt0.c1))) ISNULL);
SELECT * FROM rt0 INDEXED BY i82, vt0;
SELECT DISTINCT t0.c1, rt0.c0, t1.c59, rt0.c2, t0.c0, rt0.c1, t0.c2 FROM rt0, t1, t0, vt0;
SELECT DISTINCT t0.c1, rt0.c0, t1.c59, rt0.c2, t0.c0, rt0.c1, t0.c2 FROM rt0, t1, t0, vt0 WHERE ((((rt0.c1 IN ()))<<(t0.c2))) UNION SELECT DISTINCT t0.c1, rt0.c0, t1.c59, rt0.c2, t0.c0, rt0.c1, t0.c2 FROM rt0, t1, t0, vt0 WHERE ((NOT ((((rt0.c1 IN ()))<<(t0.c2))))) UNION SELECT DISTINCT t0.c1, rt0.c0, t1.c59, rt0.c2, t0.c0, rt0.c1, t0.c2 FROM rt0, t1, t0, vt0 WHERE ((((((rt0.c1 IN ()))<<(t0.c2))) ISNULL));
SELECT DISTINCT t0.c1, rt0.c0, t1.c59, rt0.c2, t0.c0, rt0.c1, t0.c2 FROM rt0, t1, t0, vt0;
SELECT ALL t0.c0, rt0.c1, vt0.c0, t0.c1 FROM rt0, t0, vt0 GROUP BY t0.c0, rt0.c1, vt0.c0, t0.c1;
SELECT ALL t0.c0, rt0.c1, vt0.c0, t0.c1 FROM rt0, t0, vt0 WHERE (((((vt0.c0)AND(rt0.c2))) NOT NULL)) GROUP BY t0.c0, rt0.c1, vt0.c0, t0.c1 UNION SELECT ALL t0.c0, rt0.c1, vt0.c0, t0.c1 FROM rt0, t0, vt0 WHERE ((NOT (((((vt0.c0)AND(rt0.c2))) NOT NULL)))) GROUP BY t0.c0, rt0.c1, vt0.c0, t0.c1 UNION SELECT ALL t0.c0, rt0.c1, vt0.c0, t0.c1 FROM rt0, t0, vt0 WHERE (((((((vt0.c0)AND(rt0.c2))) NOT NULL)) ISNULL)) GROUP BY t0.c0, rt0.c1, vt0.c0, t0.c1;
SELECT ALL t0.c0, rt0.c1, vt0.c0, t0.c1 FROM rt0, t0, vt0 GROUP BY t0.c0, rt0.c1, vt0.c0, t0.c1;
SELECT t0.c2, t0.c1 FROM t0 GROUP BY t0.c2, t0.c1;
SELECT ALL t0.c2, t0.c1 FROM t0 GROUP BY t0.c2, t0.c1 HAVING TOTAL(COUNT(COUNT(t0.c1))) UNION ALL SELECT t0.c2, t0.c1 FROM t0 GROUP BY t0.c2, t0.c1 HAVING (NOT (TOTAL(COUNT(COUNT(t0.c1))))) UNION ALL SELECT ALL t0.c2, t0.c1 FROM t0 GROUP BY t0.c2, t0.c1 HAVING ((TOTAL(COUNT(COUNT(t0.c1)))) ISNULL);
SELECT ALL vt0.c0, t1.c59 FROM vt0 RIGHT OUTER JOIN t1 ON ((((((((((t1.c59)IS(t1.c59)))AND(t1.c59 COLLATE RTRIM)))OR(((t1.c59)OR(vt0.c0)))))OR(((vt0.c0)&(0x67fdcaed)))))AND(((0.7652481574976387)<>(vt0.c0))));
SELECT ALL vt0.c0, t1.c59 FROM vt0 RIGHT OUTER JOIN t1 ON ((((((((((t1.c59)IS(t1.c59)))AND(t1.c59 COLLATE RTRIM)))OR(((t1.c59)OR(vt0.c0)))))OR(((vt0.c0)&(0x67fdcaed)))))AND(((0.7652481574976387)<>(vt0.c0)))) WHERE (LOWER(LIKELY(DISTINCT vt0.c0))) UNION ALL SELECT vt0.c0, t1.c59 FROM vt0 RIGHT OUTER JOIN t1 ON ((((((((((t1.c59)IS(t1.c59)))AND(t1.c59 COLLATE RTRIM)))OR(((t1.c59)OR(vt0.c0)))))OR(((vt0.c0)&(0x67fdcaed)))))AND(((0.7652481574976387)!=(vt0.c0)))) WHERE ((NOT (LOWER(LIKELY(DISTINCT vt0.c0))))) UNION ALL SELECT vt0.c0, t1.c59 FROM vt0 RIGHT OUTER JOIN t1 ON ((((((((((t1.c59)IS(t1.c59)))AND(t1.c59 COLLATE RTRIM)))OR(((t1.c59)OR(vt0.c0)))))OR(((vt0.c0)&(0x67fdcaed)))))AND(((0.7652481574976387)<>(vt0.c0)))) WHERE (((LOWER(LIKELY(DISTINCT vt0.c0))) ISNULL));
SELECT ALL vt0.c0, t1.c59 FROM vt0 RIGHT OUTER JOIN t1 ON ((((((((((t1.c59)IS(t1.c59)))AND(t1.c59 COLLATE RTRIM)))OR(((t1.c59)OR(vt0.c0)))))OR(((vt0.c0)&(0x67fdcaed)))))AND(((0.7652481574976387)<>(vt0.c0))));
SELECT DISTINCT t0.c0 FROM t1, t0;
SELECT DISTINCT t0.c0 FROM t1, t0 WHERE (CAST(((t1.c59)/(t0.c0)) AS BLOB)) UNION SELECT DISTINCT t0.c0 FROM t1, t0 WHERE ((NOT (CAST(((t1.c59)/(t0.c0)) AS BLOB)))) UNION SELECT DISTINCT t0.c0 FROM t1, t0 WHERE (((CAST(((t1.c59)/(t0.c0)) AS BLOB)) ISNULL));
SELECT DISTINCT t0.c0 FROM t1, t0;
SELECT ALL t0.c1, t0.c2, t1.c59, t0.c0 FROM t1, t0 GROUP BY t0.c1, t0.c2, t1.c59, t0.c0;
SELECT t0.c1, t0.c2, t1.c59, t0.c0 FROM t1, t0 WHERE ((((t0.c2, t1.c59, NULL, t0.c0, t0.c2)) NOT BETWEEN ((UNLIKELY(t0.c1), t0.c0 COLLATE NOCASE, ((t0.c0) BETWEEN (0.49002146757417475) AND (t0.c0)), (t1.c59 IN ()), ((t0.c2) NOTNULL))) AND ((((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c2)), ((t1.c59)<>(t0.c1)), (~ (t1.c59)), CAST(t0.c1 AS TEXT), CAST(t1.c59 AS INTEGER))))) GROUP BY t0.c1, t0.c2, t1.c59, t0.c0 UNION SELECT ALL t0.c1, t0.c2, t1.c59, t0.c0 FROM t1, t0 WHERE ((NOT ((((t0.c2, t1.c59, NULL, t0.c0, t0.c2)) NOT BETWEEN ((UNLIKELY(t0.c1), t0.c0 COLLATE NOCASE, ((t0.c0) BETWEEN (0.49002146757417475) AND (t0.c0)), (t1.c59 IN ()), ((t0.c2) NOTNULL))) AND ((((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c2)), ((t1.c59)<>(t0.c1)), (~ (t1.c59)), CAST(t0.c1 AS TEXT), CAST(t1.c59 AS INTEGER))))))) GROUP BY t0.c1, t0.c2, t1.c59, t0.c0 UNION SELECT t0.c1, t0.c2, t1.c59, t0.c0 FROM t1, t0 WHERE ((((((t0.c2, t1.c59, NULL, t0.c0, t0.c2)) NOT BETWEEN ((UNLIKELY(t0.c1), t0.c0 COLLATE NOCASE, ((t0.c0) BETWEEN (0.49002146757417475) AND (t0.c0)), (t1.c59 IN ()), ((t0.c2) NOTNULL))) AND ((((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c2)), ((t1.c59)<>(t0.c1)), (~ (t1.c59)), CAST(t0.c1 AS TEXT), CAST(t1.c59 AS INTEGER))))) ISNULL)) GROUP BY t0.c1, t0.c2, t1.c59, t0.c0;
SELECT ALL t0.c1, t0.c2, t1.c59, t0.c0 FROM t1, t0 GROUP BY t0.c1, t0.c2, t1.c59, t0.c0;
SELECT ALL t0.c1, t0.c2, t1.c59 FROM t1, t0 GROUP BY t0.c1, t0.c2, t1.c59;
SELECT t0.c1, t0.c2, t1.c59 FROM t1, t0 GROUP BY t0.c1, t0.c2, t1.c59 HAVING MIN(((MIN(COUNT(*)))GLOB(t0.c1))) UNION ALL SELECT t0.c1, t0.c2, t1.c59 FROM t1, t0 GROUP BY t0.c1, t0.c2, t1.c59 HAVING (NOT (MIN(((MIN(COUNT(*)))GLOB(t0.c1))))) UNION ALL SELECT t0.c1, t0.c2, t1.c59 FROM t1, t0 GROUP BY t0.c1, t0.c2, t1.c59 HAVING ((MIN(((MIN(COUNT(*)))GLOB(t0.c1)))) ISNULL);
SELECT * FROM rt0, vt0 NOT INDEXED, t1 NOT INDEXED;
SELECT * FROM rt0, vt0, t1 WHERE (NULL) UNION ALL SELECT ALL * FROM rt0, vt0, t1 WHERE ((NOT (NULL))) UNION ALL SELECT ALL * FROM rt0, vt0, t1 WHERE (((NULL) ISNULL));
SELECT * FROM rt0, vt0 NOT INDEXED, t1 NOT INDEXED;
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON ((CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END)*((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))));
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON ((CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END)*((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))) WHERE (CASE WHEN rt0.c0 THEN -1290843754 ELSE rt0.c0 END COLLATE BINARY) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON ((CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END)*((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))) WHERE ((NOT (CASE WHEN rt0.c0 THEN -1290843754 ELSE rt0.c0 END COLLATE BINARY))) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON ((CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END)*((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))) WHERE (((CASE WHEN rt0.c0 THEN -1290843754 ELSE rt0.c0 END COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON ((CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END)*((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))));
SELECT t0.c1, t0.c2, t0.c0 FROM t0 GROUP BY t0.c1, t0.c2, t0.c0;
SELECT ALL t0.c1, t0.c2, t0.c0 FROM t0 WHERE (JULIANDAY(t0.c0, CAST(t0.c2 AS REAL), ((t0.c2)%(t0.c1)), CASE WHEN t0.c1 THEN t0.c0 END, (((t0.c1, t0.c0, t0.c2))==((-989746280, t0.c0, t0.c1))))) GROUP BY t0.c1, t0.c2, t0.c0 UNION SELECT t0.c1, t0.c2, t0.c0 FROM t0 WHERE ((NOT (JULIANDAY(t0.c0, CAST(t0.c2 AS REAL), ((t0.c2)%(t0.c1)), CASE WHEN t0.c1 THEN t0.c0 END, (((t0.c1, t0.c0, t0.c2))==((-989746280, t0.c0, t0.c1))))))) GROUP BY t0.c1, t0.c2, t0.c0 UNION SELECT t0.c1, t0.c2, t0.c0 FROM t0 NOT INDEXED WHERE (((JULIANDAY(t0.c0, CAST(t0.c2 AS REAL), ((t0.c2)%(t0.c1)), CASE WHEN t0.c1 THEN t0.c0 END, (((t0.c1, t0.c0, t0.c2))==((-989746280, t0.c0, t0.c1))))) ISNULL)) GROUP BY t0.c1, t0.c2, t0.c0;
SELECT t0.c1, t0.c2, t0.c0 FROM t0 GROUP BY t0.c1, t0.c2, t0.c0;
SELECT ALL t0.c2, rt0.c0, t0.c1, rt0.c1 FROM vt0, t0, t1, rt0 GROUP BY t0.c2, rt0.c0, t0.c1, rt0.c1;
SELECT ALL t0.c2, rt0.c0, t0.c1, rt0.c1 FROM vt0, t0, t1, rt0 GROUP BY t0.c2, rt0.c0, t0.c1, rt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL t0.c2, rt0.c0, t0.c1, rt0.c1 FROM vt0, t0, t1, rt0 GROUP BY t0.c2, rt0.c0, t0.c1, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c2, rt0.c0, t0.c1, rt0.c1 FROM vt0, t0, t1, rt0 GROUP BY t0.c2, rt0.c0, t0.c1, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c2, rt0.c0, t0.c1, rt0.c1 FROM vt0, t0, t1, rt0 GROUP BY t0.c2, rt0.c0, t0.c1, rt0.c1;
SELECT ALL t0.c2, rt0.c0, t0.c1, rt0.c1 FROM vt0, t0, t1, rt0 GROUP BY t0.c2, rt0.c0, t0.c1, rt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL t0.c2, rt0.c0, t0.c1, rt0.c1 FROM vt0, t0, t1, rt0 GROUP BY t0.c2, rt0.c0, t0.c1, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c2, rt0.c0, t0.c1, rt0.c1 FROM vt0, t0, t1, rt0 GROUP BY t0.c2, rt0.c0, t0.c1, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c2, rt0.c0, t0.c1, rt0.c1 FROM vt0, t0, t1, rt0 GROUP BY t0.c2, rt0.c0, t0.c1, rt0.c1;
SELECT ALL * FROM vt0, t0, rt0, t1;
SELECT * FROM vt0, t0, rt0, t1 WHERE (x'd44ebdec') UNION ALL SELECT ALL * FROM vt0, t0, rt0, t1 WHERE ((NOT (x'd44ebdec'))) UNION ALL SELECT ALL * FROM vt0, t0, rt0, t1 NOT INDEXED WHERE (((x'd44ebdec') ISNULL));
SELECT ALL * FROM vt0, t0, rt0, t1;
SELECT DISTINCT t0.c2, vt0.c0, rt0.c0, rt0.c2 FROM t1, rt0, vt0, t0;
SELECT DISTINCT t0.c2, vt0.c0, rt0.c0, rt0.c2 FROM t1, rt0, vt0, t0 WHERE ((((NOT (t0.c2)))|((t0.c0 IN ())))) UNION SELECT DISTINCT t0.c2, vt0.c0, rt0.c0, rt0.c2 FROM t1, rt0, vt0, t0 WHERE ((NOT ((((NOT (t0.c2)))|((t0.c0 IN ())))))) UNION SELECT DISTINCT t0.c2, vt0.c0, rt0.c0, rt0.c2 FROM t1, rt0, vt0, t0 WHERE ((((((NOT (t0.c2)))|((t0.c0 IN ())))) ISNULL));
SELECT DISTINCT t0.c2, vt0.c0, rt0.c0, rt0.c2 FROM t1, rt0, vt0, t0;
SELECT ALL t0.c0 FROM t0, t1 RIGHT OUTER JOIN rt0 ON (~ ((~ (8.63585222E8)))) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, t1 RIGHT OUTER JOIN rt0 ON (~ ((~ (8.63585222E8)))) WHERE (('-70198792' IN ())) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0, t1 RIGHT OUTER JOIN rt0 ON (~ ((~ (8.63585222E8)))) WHERE ((NOT (('-70198792' IN ())))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0, t1 RIGHT OUTER JOIN rt0 ON (~ ((~ (8.63585222E8)))) WHERE (((('-70198792' IN ())) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, t1 RIGHT OUTER JOIN rt0 ON (~ ((~ (8.63585222E8)))) GROUP BY t0.c0;
SELECT ALL rt0.c2, t1.c59, rt0.c1, t0.c0, t0.c2, t0.c1 FROM t0 FULL OUTER JOIN t1 ON ((((t1.c59)AND(CAST(rt0.c2 AS BLOB))))OR(t0.c2)) FULL OUTER JOIN rt0 ON ((((((((((((t0.c1)AND(rt0.c1)))AND(rt0.c2)))OR(CASE WHEN rt0.c2 THEN '' WHEN t0.c2 THEN t1.c59 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN t0.c1 ELSE t0.c1 END)))OR(CAST(t0.c2 AS BLOB))))OR(LIKELIHOOD(DISTINCT rt0.c1, 0.5326449663961486))))OR(((t0.c0) NOT NULL))) GROUP BY rt0.c2, t1.c59, rt0.c1, t0.c0, t0.c2, t0.c1;
SELECT ALL vt0.c0 FROM vt0, t1;
SELECT vt0.c0 FROM vt0, t1 WHERE ((((t1.c59)) NOT BETWEEN (((((vt0.c0))>((t1.c59))))) AND ((((((t1.c59)AND(0.25772101215316623)))AND(vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 NOT INDEXED, t1 WHERE ((NOT ((((t1.c59)) NOT BETWEEN (((((vt0.c0))>((t1.c59))))) AND ((((((t1.c59)AND(0.25772101215316623)))AND(vt0.c0)))))))) UNION ALL SELECT vt0.c0 FROM vt0, t1 WHERE ((((((t1.c59)) NOT BETWEEN (((((vt0.c0))>((t1.c59))))) AND ((((((t1.c59)AND(0.25772101215316623)))AND(vt0.c0)))))) ISNULL));
SELECT ALL vt0.c0 FROM vt0, t1;
SELECT DISTINCT * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0 WHERE ((((~ (t0.c0))) BETWEEN (((t0.c0)IS(vt0.c0))) AND (CASE t0.c0  WHEN vt0.c0 THEN t0.c1 END))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((NOT ((((~ (t0.c0))) BETWEEN (((t0.c0)IS(vt0.c0))) AND (CASE t0.c0  WHEN vt0.c0 THEN t0.c1 END))))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((((((~ (t0.c0))) BETWEEN (((t0.c0)IS(vt0.c0))) AND (CASE t0.c0  WHEN vt0.c0 THEN t0.c1 END))) ISNULL));
SELECT DISTINCT * FROM t0, vt0;
SELECT ALL rt0.c1, t0.c0, rt0.c2, t0.c2, vt0.c0, t1.c59, t0.c1 FROM rt0, t0 INDEXED BY i82, vt0 LEFT OUTER JOIN t1 ON ((t1.c59 IN (t0.c2, vt0.c0)) IN ()) GROUP BY rt0.c1, t0.c0, rt0.c2, t0.c2, vt0.c0, t1.c59, t0.c1;
SELECT t0.c1, t0.c2, rt0.c2, rt0.c0, t0.c0 FROM rt0, t0 GROUP BY t0.c1, t0.c2, rt0.c2, rt0.c0, t0.c0;
SELECT t0.c1, t0.c2, rt0.c2, rt0.c0, t0.c0 FROM rt0, t0 GROUP BY t0.c1, t0.c2, rt0.c2, rt0.c0, t0.c0 HAVING AVG(TOTAL(MAX(GROUP_CONCAT(TOTAL(GROUP_CONCAT(TOTAL(COUNT(*)))))))) UNION ALL SELECT ALL t0.c1, t0.c2, rt0.c2, rt0.c0, t0.c0 FROM rt0, t0 GROUP BY t0.c1, t0.c2, rt0.c2, rt0.c0, t0.c0 HAVING (NOT (AVG(TOTAL(MAX(GROUP_CONCAT(TOTAL(GROUP_CONCAT(TOTAL(COUNT(*)))))))))) UNION ALL SELECT ALL t0.c1, t0.c2, rt0.c2, rt0.c0, t0.c0 FROM rt0, t0 GROUP BY t0.c1, t0.c2, rt0.c2, rt0.c0, t0.c0 HAVING ((AVG(TOTAL(MAX(GROUP_CONCAT(TOTAL(GROUP_CONCAT(TOTAL(COUNT(*))))))))) ISNULL);
SELECT rt0.c0, vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON (((rt0.c2 IN (rt0.c1, vt0.c0)))/((((rt0.c0, '', vt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1, vt0.c0)) AND ((0xffffffff94e63e33, rt0.c0, vt0.c0)))));
SELECT ALL rt0.c0, vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON (((rt0.c2 IN (rt0.c1, vt0.c0)))/((((rt0.c0, '', vt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1, vt0.c0)) AND ((0Xffffffff94e63e33, rt0.c0, vt0.c0))))) WHERE (rt0.c0) UNION ALL SELECT rt0.c0, vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON (((rt0.c2 IN (rt0.c1, vt0.c0)))/((((rt0.c0, '', vt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1, vt0.c0)) AND ((0Xffffffff94e63e33, rt0.c0, vt0.c0))))) WHERE ((NOT (rt0.c0))) UNION ALL SELECT ALL rt0.c0, vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON (((rt0.c2 IN (rt0.c1, vt0.c0)))/((((rt0.c0, '', vt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1, vt0.c0)) AND ((0Xffffffff94e63e33, rt0.c0, vt0.c0))))) WHERE (((rt0.c0) ISNULL));
SELECT rt0.c0, vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON (((rt0.c2 IN (rt0.c1, vt0.c0)))/((((rt0.c0, '', vt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1, vt0.c0)) AND ((0xffffffff94e63e33, rt0.c0, vt0.c0)))));
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c2) NOT NULL))+((('735208553') NOT BETWEEN (rt0.c2) AND (rt0.c1))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c2) NOT NULL))+((('735208553') NOT BETWEEN (rt0.c2) AND (rt0.c1))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c2) NOT NULL))+((('735208553') NOT BETWEEN (rt0.c2) AND (rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE (CAST(CAST(rt0.c1 AS INTEGER) AS REAL)) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (CAST(CAST(rt0.c1 AS INTEGER) AS REAL)))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE (((CAST(CAST(rt0.c1 AS INTEGER) AS REAL)) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT t0.c2, rt0.c0, t0.c1 FROM rt0, t1, vt0 INNER JOIN t0 ON ((((((vt0.c0)||(t0.c0)))AND(((vt0.c0) ISNULL))))OR(1972950537)) GROUP BY t0.c2, rt0.c0, t0.c1;
SELECT t0.c2, rt0.c0, t0.c1 FROM rt0, t1, vt0 INNER JOIN t0 ON ((((((vt0.c0)||(t0.c0)))AND(((vt0.c0) ISNULL))))OR(1972950537)) GROUP BY t0.c2, rt0.c0, t0.c1 HAVING SUM(((MAX(MIN(t0.c0))) NOT BETWEEN (t0.c0) AND (t1.c59))) UNION ALL SELECT t0.c2, rt0.c0, t0.c1 FROM rt0, t1, vt0 INNER JOIN t0 ON ((((((vt0.c0)||(t0.c0)))AND(((vt0.c0) ISNULL))))OR(1972950537)) GROUP BY t0.c2, rt0.c0, t0.c1 HAVING (NOT (SUM(((MAX(MIN(t0.c0))) NOT BETWEEN (t0.c0) AND (t1.c59))))) UNION ALL SELECT t0.c2, rt0.c0, t0.c1 FROM rt0, t1, vt0 INNER JOIN t0 ON ((((((vt0.c0)||(t0.c0)))AND(((vt0.c0) ISNULL))))OR(1972950537)) GROUP BY t0.c2, rt0.c0, t0.c1 HAVING ((SUM(((MAX(MIN(t0.c0))) NOT BETWEEN (t0.c0) AND (t1.c59)))) ISNULL);
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE (TIME(t0.c2, t0.c1, t0.c0, t0.c0, t0.c0) COLLATE BINARY) UNION ALL SELECT * FROM t0 WHERE ((NOT (TIME(t0.c2, t0.c1, t0.c0, t0.c0, t0.c0) COLLATE BINARY))) UNION ALL SELECT ALL * FROM t0 WHERE (((TIME(t0.c2, t0.c1, t0.c0, t0.c0, t0.c0) COLLATE BINARY) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL)) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT t0.c0, t0.c1 FROM t1, t0 GROUP BY t0.c0, t0.c1;
SELECT ALL t0.c0, t0.c1 FROM t1, t0 WHERE (('' IN (NULL, t0.c2)) COLLATE BINARY) GROUP BY t0.c0, t0.c1 UNION SELECT t0.c0, t0.c1 FROM t1, t0 WHERE ((NOT (('' IN (NULL, t0.c2)) COLLATE BINARY))) GROUP BY t0.c0, t0.c1 UNION SELECT t0.c0, t0.c1 FROM t1, t0 WHERE (((('' IN (NULL, t0.c2)) COLLATE BINARY) ISNULL)) GROUP BY t0.c0, t0.c1;
SELECT t0.c0, t0.c1 FROM t1, t0 GROUP BY t0.c0, t0.c1;
SELECT rt0.c2, rt0.c1, vt0.c0 FROM t0, rt0, vt0, t1 GROUP BY rt0.c2, rt0.c1, vt0.c0;
SELECT rt0.c2, rt0.c1, vt0.c0 FROM t0, rt0, vt0, t1 GROUP BY rt0.c2, rt0.c1, vt0.c0 HAVING ((((MIN(t0.c1))AND(MIN(AVG(t0.c2)))))AND(CASE WHEN vt0.c0 THEN x'' ELSE rt0.c0 END)) UNION ALL SELECT rt0.c2, rt0.c1, vt0.c0 FROM t0, rt0, vt0, t1 GROUP BY rt0.c2, rt0.c1, vt0.c0 HAVING (NOT (((((MIN(t0.c1))AND(MIN(AVG(t0.c2)))))AND(CASE WHEN vt0.c0 THEN x'' ELSE rt0.c0 END)))) UNION ALL SELECT rt0.c2, rt0.c1, vt0.c0 FROM t0, rt0, vt0, t1 GROUP BY rt0.c2, rt0.c1, vt0.c0 HAVING ((((((MIN(t0.c1))AND(MIN(AVG(t0.c2)))))AND(CASE WHEN vt0.c0 THEN x'' ELSE rt0.c0 END))) ISNULL);
SELECT ALL SUM(CAST((((t0.c1))<=((rt0.c2))) AS BLOB)) FROM vt0, t1, rt0, t0 ORDER BY CAST(LIKELY(DISTINCT t1.c59) AS INTEGER)  NULLS FIRST, ((t0.c0) BETWEEN (rt0.c0) AND (t0.c2)) COLLATE BINARY DESC  NULLS LAST, (~ (((rt0.c2)IS(t0.c1))));
SELECT ALL * FROM t1;
SELECT * FROM t1 WHERE (LIKELIHOOD(DISTINCT ((t1.c59)>=(t1.c59)), 0.8275804923446821)) UNION ALL SELECT * FROM t1 WHERE ((NOT (LIKELIHOOD(DISTINCT ((t1.c59)>=(t1.c59)), 0.8275804923446821)))) UNION ALL SELECT * FROM t1 WHERE (((LIKELIHOOD(DISTINCT ((t1.c59)>=(t1.c59)), 0.8275804923446821)) ISNULL));
SELECT ALL * FROM t1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c2)*(rt0.c1)))==((- (-1652084824))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c2)*(rt0.c1)))=((- (-1652084824))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c2)*(rt0.c1)))=((- (-1652084824))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0, t0.c1, t0.c0, t0.c2, rt0.c1, vt0.c0 FROM t0, t1, vt0 NOT INDEXED, rt0 GROUP BY rt0.c0, t0.c1, t0.c0, t0.c2, rt0.c1, vt0.c0;
SELECT ALL rt0.c0, t0.c1, t0.c0, t0.c2, rt0.c1, vt0.c0 FROM t0, t1, vt0, rt0 WHERE (((((rt0.c2)GLOB(t0.c0)))>>((t0.c0 IN (rt0.c2))))) GROUP BY rt0.c0, t0.c1, t0.c0, t0.c2, rt0.c1, vt0.c0 UNION SELECT ALL rt0.c0, t0.c1, t0.c0, t0.c2, rt0.c1, vt0.c0 FROM t0, t1, vt0, rt0 WHERE ((NOT (((((rt0.c2)GLOB(t0.c0)))>>((t0.c0 IN (rt0.c2))))))) GROUP BY rt0.c0, t0.c1, t0.c0, t0.c2, rt0.c1, vt0.c0 UNION SELECT rt0.c0, t0.c1, t0.c0, t0.c2, rt0.c1, vt0.c0 FROM t0, t1, vt0, rt0 WHERE (((((((rt0.c2)GLOB(t0.c0)))>>((t0.c0 IN (rt0.c2))))) ISNULL)) GROUP BY rt0.c0, t0.c1, t0.c0, t0.c2, rt0.c1, vt0.c0;
SELECT rt0.c0, t0.c1, t0.c0, t0.c2, rt0.c1, vt0.c0 FROM t0, t1, vt0 NOT INDEXED, rt0 GROUP BY rt0.c0, t0.c1, t0.c0, t0.c2, rt0.c1, vt0.c0;
SELECT ALL rt0.c1 FROM rt0, t1, t0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0, t1, t0 GROUP BY rt0.c1 HAVING ((CASE COUNT(*)  WHEN t0.c2 THEN rt0.c1 ELSE t0.c2 END)%(((rt0.c0) BETWEEN (GROUP_CONCAT(MIN(t1.c59))) AND (rt0.c1)))) UNION ALL SELECT ALL rt0.c1 FROM rt0, t1, t0 GROUP BY rt0.c1 HAVING (NOT (((CASE COUNT(*)  WHEN t0.c2 THEN rt0.c1 ELSE t0.c2 END)%(((rt0.c0) BETWEEN (GROUP_CONCAT(MIN(t1.c59))) AND (rt0.c1)))))) UNION ALL SELECT rt0.c1 FROM rt0, t1, t0 GROUP BY rt0.c1 HAVING ((((CASE COUNT(*)  WHEN t0.c2 THEN rt0.c1 ELSE t0.c2 END)%(((rt0.c0) BETWEEN (GROUP_CONCAT(MIN(t1.c59))) AND (rt0.c1))))) ISNULL);
SELECT t0.c0, vt0.c0 FROM vt0, t0, rt0, t1;
SELECT t0.c0, vt0.c0 FROM vt0, t0, rt0, t1 WHERE (LIKELY(((t0.c0) IS TRUE))) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM vt0, t0, rt0, t1 WHERE ((NOT (LIKELY(((t0.c0) IS TRUE))))) UNION ALL SELECT t0.c0, vt0.c0 FROM vt0, t0, rt0, t1 WHERE (((LIKELY(((t0.c0) IS TRUE))) ISNULL));
SELECT t0.c0, vt0.c0 FROM vt0, t0, rt0, t1;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE ((((t1.c59)&(t1.c59)) IN ())) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT ((((t1.c59)&(t1.c59)) IN ())))) UNION SELECT DISTINCT * FROM t1 WHERE ((((((t1.c59)&(t1.c59)) IN ())) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT t0.c1, t0.c0, rt0.c1, rt0.c2, t0.c2 FROM vt0, rt0 INNER JOIN t0 ON ((t0.c0 IN ()) IN (rt0.c0 COLLATE NOCASE)) GROUP BY t0.c1, t0.c0, rt0.c1, rt0.c2, t0.c2;
SELECT t0.c1, t0.c0, rt0.c1, rt0.c2, t0.c2 FROM vt0, rt0 INNER JOIN t0 ON ((t0.c0 IN ()) IN (rt0.c0 COLLATE NOCASE)) WHERE ((((rt0.c0)) BETWEEN ((GLOB(t0.c1, t0.c2))) AND (((((-254347458, t0.c1, rt0.c2))=((rt0.c2, rt0.c2, t0.c1))))))) GROUP BY t0.c1, t0.c0, rt0.c1, rt0.c2, t0.c2 UNION SELECT t0.c1, t0.c0, rt0.c1, rt0.c2, t0.c2 FROM vt0, rt0 INNER JOIN t0 ON ((t0.c0 IN ()) IN (rt0.c0 COLLATE NOCASE)) WHERE ((NOT ((((rt0.c0)) BETWEEN ((GLOB(t0.c1, t0.c2))) AND (((((-254347458, t0.c1, rt0.c2))==((rt0.c2, rt0.c2, t0.c1))))))))) GROUP BY t0.c1, t0.c0, rt0.c1, rt0.c2, t0.c2 UNION SELECT ALL t0.c1, t0.c0, rt0.c1, rt0.c2, t0.c2 FROM vt0, rt0 INNER JOIN t0 ON ((t0.c0 IN ()) IN (rt0.c0 COLLATE NOCASE)) WHERE ((((((rt0.c0)) BETWEEN ((GLOB(t0.c1, t0.c2))) AND (((((-254347458, t0.c1, rt0.c2))=((rt0.c2, rt0.c2, t0.c1))))))) ISNULL)) GROUP BY t0.c1, t0.c0, rt0.c1, rt0.c2, t0.c2;
SELECT t0.c1, t0.c0, rt0.c1, rt0.c2, t0.c2 FROM vt0, rt0 INNER JOIN t0 ON ((t0.c0 IN ()) IN (rt0.c0 COLLATE NOCASE)) GROUP BY t0.c1, t0.c0, rt0.c1, rt0.c2, t0.c2;
SELECT ALL rt0.c1, vt0.c0, rt0.c0 FROM t1, rt0 FULL OUTER JOIN vt0 ON ((rt0.c0) BETWEEN (t0.c1 COLLATE NOCASE) AND ((+ (t0.c2)))) RIGHT OUTER JOIN t0 ON (((t0.c1) NOT BETWEEN (NULL) AND (rt0.c1)) IN (rt0.c2)) GROUP BY rt0.c1, vt0.c0, rt0.c0;
SELECT ALL MAX(((((((rt0.c1)AND(vt0.c0)))AND(rt0.c2))) BETWEEN (((rt0.c1)==(rt0.c1))) AND (((t1.c59) ISNULL)))) FROM vt0, t1, rt0, t0;
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (UPPER(((vt0.c0)>(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (UPPER(((vt0.c0)>(vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((UPPER(((vt0.c0)>(vt0.c0)))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CASE ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1))  WHEN ((('1744685805'))>((rt0.c1))) THEN ((rt0.c1)AND(rt0.c2)) WHEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)) THEN ((rt0.c1)>=(rt0.c2)) WHEN '1398842815' THEN (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))) WHEN rt0.c0 THEN '-490558159' WHEN ((rt0.c1)>=(rt0.c0)) THEN (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) ELSE 0.5748861568115515 END) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CASE ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1))  WHEN ((('1744685805'))>((rt0.c1))) THEN ((rt0.c1)AND(rt0.c2)) WHEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)) THEN ((rt0.c1)>=(rt0.c2)) WHEN '1398842815' THEN (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))) WHEN rt0.c0 THEN '-490558159' WHEN ((rt0.c1)>=(rt0.c0)) THEN (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) ELSE 0.5748861568115515 END))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CASE ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1))  WHEN ((('1744685805'))>((rt0.c1))) THEN ((rt0.c1)AND(rt0.c2)) WHEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)) THEN ((rt0.c1)>=(rt0.c2)) WHEN '1398842815' THEN (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))) WHEN rt0.c0 THEN '-490558159' WHEN ((rt0.c1)>=(rt0.c0)) THEN (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) ELSE 0.5748861568115515 END) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((((rt0.c0)<<(rt0.c0)) IN ((rt0.c0 IN ())))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c0)<<(rt0.c0)) IN ((rt0.c0 IN ())))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((((((rt0.c0)<<(rt0.c0)) IN ((rt0.c0 IN ())))) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING TOTAL(TOTAL(rt0.c0)) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (TOTAL(TOTAL(rt0.c0)))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((TOTAL(TOTAL(rt0.c0))) ISNULL);
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE (((((((((((((((((((((t0.c1)AND(t0.c0)))OR(t0.c2)))AND(t0.c1)))OR(t0.c1)))AND(t0.c2)))AND((NOT (t0.c0)))))AND(CASE WHEN x'1fa0' THEN t0.c1 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c0 ELSE t0.c0 END)))AND((t0.c0 IN (t0.c2, t0.c2)))))AND((((t0.c1))>((t0.c2))))))AND(((t0.c0)LIKE(t0.c2))))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (((((((((((((((((((((t0.c1)AND(t0.c0)))OR(t0.c2)))AND(t0.c1)))OR(t0.c1)))AND(t0.c2)))AND((NOT (t0.c0)))))AND(CASE WHEN x'1fa0' THEN t0.c1 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c0 ELSE t0.c0 END)))AND((t0.c0 IN (t0.c2, t0.c2)))))AND((((t0.c1))>((t0.c2))))))AND(((t0.c0)LIKE(t0.c2))))))) UNION ALL SELECT ALL * FROM t0 WHERE (((((((((((((((((((((((t0.c1)AND(t0.c0)))OR(t0.c2)))AND(t0.c1)))OR(t0.c1)))AND(t0.c2)))AND((NOT (t0.c0)))))AND(CASE WHEN x'1fa0' THEN t0.c1 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c0 ELSE t0.c0 END)))AND((t0.c0 IN (t0.c2, t0.c2)))))AND((((t0.c1))>((t0.c2))))))AND(((t0.c0)LIKE(t0.c2))))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT t0.c0, rt0.c2, t0.c2 FROM t0, rt0;
SELECT DISTINCT t0.c0, rt0.c2, t0.c2 FROM t0, rt0 WHERE ((NOT (CASE WHEN t0.c2 THEN '/G?' END))) UNION SELECT DISTINCT t0.c0, rt0.c2, t0.c2 FROM t0, rt0 WHERE ((NOT ((NOT (CASE WHEN t0.c2 THEN '/G?' END))))) UNION SELECT DISTINCT t0.c0, rt0.c2, t0.c2 FROM t0, rt0 WHERE ((((NOT (CASE WHEN t0.c2 THEN '/G?' END))) ISNULL));
SELECT DISTINCT t0.c0, rt0.c2, t0.c2 FROM t0, rt0;
SELECT t0.c2, vt0.c0 FROM vt0 INNER JOIN t0 ON ((vt0.c0) BETWEEN (((vt0.c0)<<(t0.c0))) AND (t0.c2 COLLATE BINARY)) GROUP BY t0.c2, vt0.c0;
SELECT ALL t0.c2, vt0.c0 FROM vt0 INNER JOIN t0 ON ((vt0.c0) BETWEEN (((vt0.c0)<<(t0.c0))) AND (t0.c2 COLLATE BINARY)) WHERE ((((((((((('-451257431')AND(t0.c0)))AND(t0.c2)))AND(t0.c2)))OR(vt0.c0)))%(t0.c2))) GROUP BY t0.c2, vt0.c0 UNION SELECT ALL t0.c2, vt0.c0 FROM vt0 INNER JOIN t0 ON ((vt0.c0) BETWEEN (((vt0.c0)<<(t0.c0))) AND (t0.c2 COLLATE BINARY)) WHERE ((NOT ((((((((((('-451257431')AND(t0.c0)))AND(t0.c2)))AND(t0.c2)))OR(vt0.c0)))%(t0.c2))))) GROUP BY t0.c2, vt0.c0 UNION SELECT t0.c2, vt0.c0 FROM vt0 INNER JOIN t0 ON ((vt0.c0) BETWEEN (((vt0.c0)<<(t0.c0))) AND (t0.c2 COLLATE BINARY)) WHERE ((((((((((((('-451257431')AND(t0.c0)))AND(t0.c2)))AND(t0.c2)))OR(vt0.c0)))%(t0.c2))) ISNULL)) GROUP BY t0.c2, vt0.c0;
SELECT t0.c2, vt0.c0 FROM vt0 INNER JOIN t0 ON ((vt0.c0) BETWEEN (((vt0.c0)<<(t0.c0))) AND (t0.c2 COLLATE BINARY)) GROUP BY t0.c2, vt0.c0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT ((vt0.c0 IN (MAX(rt0.c1), '-1627563475')))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 NOT INDEXED GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT ((NOT ((vt0.c0 IN (MAX(rt0.c1), '-1627563475')))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (((NOT ((vt0.c0 IN (MAX(rt0.c1), '-1627563475'))))) ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT ((vt0.c0 IN (MAX(rt0.c1), '-1627563475')))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 NOT INDEXED GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT ((NOT ((vt0.c0 IN (MAX(rt0.c1), '-1627563475')))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (((NOT ((vt0.c0 IN (MAX(rt0.c1), '-1627563475'))))) ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c2, rt0.c1, t0.c0, rt0.c0 FROM t0, rt0, t1;
SELECT ALL rt0.c2, rt0.c1, t0.c0, rt0.c0 FROM t0, rt0 NOT INDEXED, t1 WHERE ((((((t0.c0)AND(t0.c2)))AND(t0.c2)) IN ())) UNION ALL SELECT ALL rt0.c2, rt0.c1, t0.c0, rt0.c0 FROM t0, rt0, t1 WHERE ((NOT ((((((t0.c0)AND(t0.c2)))AND(t0.c2)) IN ())))) UNION ALL SELECT ALL rt0.c2, rt0.c1, t0.c0, rt0.c0 FROM t0, rt0, t1 WHERE ((((((((t0.c0)AND(t0.c2)))AND(t0.c2)) IN ())) ISNULL));
SELECT rt0.c2, rt0.c1, t0.c0, rt0.c0 FROM t0, rt0, t1;
SELECT DISTINCT * FROM t0, rt0, vt0 NOT INDEXED;
SELECT DISTINCT * FROM t0, rt0, vt0 WHERE ('0.06682575366364962') UNION SELECT DISTINCT * FROM t0, rt0, vt0 WHERE ((NOT ('0.06682575366364962'))) UNION SELECT DISTINCT * FROM t0, rt0, vt0 WHERE ((('0.06682575366364962') ISNULL));
SELECT DISTINCT * FROM t0, rt0, vt0 NOT INDEXED;
SELECT t1.c59 FROM t1 NATURAL JOIN vt0 GROUP BY t1.c59;
SELECT t1.c59 FROM t1 NATURAL JOIN vt0 WHERE ((((((vt0.c0)%(t1.c59)), t1.c59 COLLATE NOCASE, CASE vt0.c0  WHEN t1.c59 THEN t1.c59 ELSE vt0.c0 END))<((TYPEOF(0X8ca508), CASE t1.c59  WHEN t1.c59 THEN t1.c59 ELSE vt0.c0 END, (- (vt0.c0)))))) GROUP BY t1.c59 UNION SELECT ALL t1.c59 FROM t1 NATURAL JOIN vt0 WHERE ((NOT ((((((vt0.c0)%(t1.c59)), t1.c59 COLLATE NOCASE, CASE vt0.c0  WHEN t1.c59 THEN t1.c59 ELSE vt0.c0 END))<((TYPEOF(0X8ca508), CASE t1.c59  WHEN t1.c59 THEN t1.c59 ELSE vt0.c0 END, (- (vt0.c0)))))))) GROUP BY t1.c59 UNION SELECT ALL t1.c59 FROM t1 NATURAL JOIN vt0 WHERE ((((((((vt0.c0)%(t1.c59)), t1.c59 COLLATE NOCASE, CASE vt0.c0  WHEN t1.c59 THEN t1.c59 ELSE vt0.c0 END))<((TYPEOF(0X8ca508), CASE t1.c59  WHEN t1.c59 THEN t1.c59 ELSE vt0.c0 END, (- (vt0.c0)))))) ISNULL)) GROUP BY t1.c59;
SELECT t1.c59 FROM t1 NATURAL JOIN vt0 GROUP BY t1.c59;
SELECT ALL t0.c2 FROM t0 LEFT OUTER JOIN t1 ON CASE ((t0.c0)!=(t0.c1))  WHEN '' THEN t0.c1 COLLATE BINARY END GROUP BY t0.c2;
SELECT t0.c2 FROM t0 LEFT OUTER JOIN t1 ON CASE ((t0.c0)<>(t0.c1))  WHEN '' THEN t0.c1 COLLATE BINARY END GROUP BY t0.c2 HAVING COUNT(*) UNION ALL SELECT t0.c2 FROM t0 LEFT OUTER JOIN t1 ON CASE ((t0.c0)!=(t0.c1))  WHEN '' THEN t0.c1 COLLATE BINARY END GROUP BY t0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c2 FROM t0 LEFT OUTER JOIN t1 ON CASE ((t0.c0)!=(t0.c1))  WHEN '' THEN t0.c1 COLLATE BINARY END GROUP BY t0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c2 FROM t0 LEFT OUTER JOIN t1 ON CASE ((t0.c0)!=(t0.c1))  WHEN '' THEN t0.c1 COLLATE BINARY END GROUP BY t0.c2;
SELECT t0.c2 FROM t0 LEFT OUTER JOIN t1 ON CASE ((t0.c0)<>(t0.c1))  WHEN '' THEN t0.c1 COLLATE BINARY END GROUP BY t0.c2 HAVING COUNT(*) UNION ALL SELECT t0.c2 FROM t0 LEFT OUTER JOIN t1 ON CASE ((t0.c0)!=(t0.c1))  WHEN '' THEN t0.c1 COLLATE BINARY END GROUP BY t0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c2 FROM t0 LEFT OUTER JOIN t1 ON CASE ((t0.c0)!=(t0.c1))  WHEN '' THEN t0.c1 COLLATE BINARY END GROUP BY t0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c2 FROM t0 LEFT OUTER JOIN t1 ON CASE ((t0.c0)!=(t0.c1))  WHEN '' THEN t0.c1 COLLATE BINARY END GROUP BY t0.c2;
SELECT * FROM t1, vt0 NOT INDEXED;
SELECT * FROM t1, vt0 WHERE (IFNULL(DISTINCT vt0.c0, ((((x'')OR(t1.c59)))AND(t1.c59)))) UNION ALL SELECT ALL * FROM t1, vt0 WHERE ((NOT (IFNULL(DISTINCT vt0.c0, ((((x'')OR(t1.c59)))AND(t1.c59)))))) UNION ALL SELECT * FROM t1, vt0 WHERE (((IFNULL(DISTINCT vt0.c0, ((((x'')OR(t1.c59)))AND(t1.c59)))) ISNULL));
SELECT * FROM t1, vt0 NOT INDEXED;
SELECT DISTINCT * FROM t0, t1, vt0;
SELECT DISTINCT * FROM t0, t1, vt0 WHERE (CASE WHEN CAST(t1.c59 AS BLOB) THEN CAST(t0.c1 AS REAL) ELSE ((t0.c1) NOT NULL) END) UNION SELECT DISTINCT * FROM t0, t1, vt0 WHERE ((NOT (CASE WHEN CAST(t1.c59 AS BLOB) THEN CAST(t0.c1 AS REAL) ELSE ((t0.c1) NOT NULL) END))) UNION SELECT DISTINCT * FROM t0, t1, vt0 WHERE (((CASE WHEN CAST(t1.c59 AS BLOB) THEN CAST(t0.c1 AS REAL) ELSE ((t0.c1) NOT NULL) END) ISNULL));
SELECT DISTINCT * FROM t0, t1, vt0;
SELECT ALL t1.c59, vt0.c0 FROM vt0, t1 GROUP BY t1.c59, vt0.c0;
SELECT t1.c59, vt0.c0 FROM vt0, t1 WHERE (((((t1.c59)>=(vt0.c0))) IS FALSE)) GROUP BY t1.c59, vt0.c0 UNION SELECT t1.c59, vt0.c0 FROM vt0, t1 WHERE ((NOT (((((t1.c59)>=(vt0.c0))) IS FALSE)))) GROUP BY t1.c59, vt0.c0 UNION SELECT t1.c59, vt0.c0 FROM vt0, t1 NOT INDEXED WHERE (((((((t1.c59)>=(vt0.c0))) IS FALSE)) ISNULL)) GROUP BY t1.c59, vt0.c0;
SELECT ALL t1.c59, vt0.c0 FROM vt0, t1 GROUP BY t1.c59, vt0.c0;
SELECT t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0;
SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0 HAVING CASE WHEN LAST_INSERT_ROWID() THEN CASE WHEN t0.c0 THEN t0.c2 WHEN COUNT(AVG(COUNT(MIN(t0.c0)))) THEN t0.c0 WHEN t0.c1 THEN COUNT(t0.c2) ELSE COUNT(t0.c0) END ELSE MAX(COUNT(COUNT(*))) END UNION ALL SELECT t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0 HAVING (NOT (CASE WHEN LAST_INSERT_ROWID() THEN CASE WHEN t0.c0 THEN t0.c2 WHEN COUNT(AVG(COUNT(MIN(t0.c0)))) THEN t0.c0 WHEN t0.c1 THEN COUNT(t0.c2) ELSE COUNT(t0.c0) END ELSE MAX(COUNT(COUNT(*))) END)) UNION ALL SELECT t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0 HAVING ((CASE WHEN LAST_INSERT_ROWID() THEN CASE WHEN t0.c0 THEN t0.c2 WHEN COUNT(AVG(COUNT(MIN(t0.c0)))) THEN t0.c0 WHEN t0.c1 THEN COUNT(t0.c2) ELSE COUNT(t0.c0) END ELSE MAX(COUNT(COUNT(*))) END) ISNULL);
SELECT ALL t0.c0, rt0.c1, rt0.c2, t0.c1, rt0.c0, vt0.c0 FROM vt0, t1, rt0, t0;
SELECT ALL t0.c0, rt0.c1, rt0.c2, t0.c1, rt0.c0, vt0.c0 FROM vt0, t1, rt0, t0 WHERE (CAST(t0.c2 AS REAL) COLLATE BINARY) UNION ALL SELECT ALL t0.c0, rt0.c1, rt0.c2, t0.c1, rt0.c0, vt0.c0 FROM vt0, t1, rt0, t0 WHERE ((NOT (CAST(t0.c2 AS REAL) COLLATE BINARY))) UNION ALL SELECT ALL t0.c0, rt0.c1, rt0.c2, t0.c1, rt0.c0, vt0.c0 FROM vt0, t1, rt0, t0 WHERE (((CAST(t0.c2 AS REAL) COLLATE BINARY) ISNULL));
SELECT ALL t0.c0, rt0.c1, rt0.c2, t0.c1, rt0.c0, vt0.c0 FROM vt0, t1, rt0, t0;
SELECT DISTINCT * FROM vt0, rt0, t1, t0;
SELECT DISTINCT * FROM vt0, rt0, t1, t0 WHERE ((((((t0.c0) IS FALSE)))<((((x'') NOT NULL))))) UNION SELECT DISTINCT * FROM vt0, rt0, t1, t0 WHERE ((NOT ((((((t0.c0) IS FALSE)))<((((x'') NOT NULL))))))) UNION SELECT DISTINCT * FROM vt0, rt0, t1, t0 WHERE ((((((((t0.c0) IS FALSE)))<((((x'') NOT NULL))))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0, t1, t0;
SELECT rt0.c0 FROM vt0 INNER JOIN rt0 ON (((((((vt0.c0)OR(rt0.c2)))AND(rt0.c1))))<>((((rt0.c2)|(rt0.c2))))) GROUP BY rt0.c0;
SELECT rt0.c0 FROM vt0 INNER JOIN rt0 ON (((((((vt0.c0)OR(rt0.c2)))AND(rt0.c1))))!=((((rt0.c2)|(rt0.c2))))) WHERE (rt0.c2) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM vt0 NOT INDEXED INNER JOIN rt0 ON (((((((vt0.c0)OR(rt0.c2)))AND(rt0.c1))))!=((((rt0.c2)|(rt0.c2))))) WHERE ((NOT (rt0.c2))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM vt0 INNER JOIN rt0 ON (((((((vt0.c0)OR(rt0.c2)))AND(rt0.c1))))<>((((rt0.c2)|(rt0.c2))))) WHERE (((rt0.c2) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM vt0 INNER JOIN rt0 ON (((((((vt0.c0)OR(rt0.c2)))AND(rt0.c1))))<>((((rt0.c2)|(rt0.c2))))) GROUP BY rt0.c0;
SELECT vt0.c0 FROM t1, t0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM t1, t0, vt0 GROUP BY vt0.c0 HAVING ((COUNT(*))GLOB('')) UNION ALL SELECT ALL vt0.c0 FROM t1, t0, vt0 GROUP BY vt0.c0 HAVING (NOT (((COUNT(*))GLOB('')))) UNION ALL SELECT vt0.c0 FROM t1, t0, vt0 GROUP BY vt0.c0 HAVING ((((COUNT(*))GLOB(''))) ISNULL);
SELECT vt0.c0 FROM t1, t0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM t1, t0, vt0 GROUP BY vt0.c0 HAVING ((COUNT(*))GLOB('')) UNION ALL SELECT ALL vt0.c0 FROM t1, t0, vt0 GROUP BY vt0.c0 HAVING (NOT (((COUNT(*))GLOB('')))) UNION ALL SELECT vt0.c0 FROM t1, t0, vt0 GROUP BY vt0.c0 HAVING ((((COUNT(*))GLOB(''))) ISNULL);
SELECT vt0.c0 FROM t1, t0, vt0 GROUP BY vt0.c0;
SELECT t0.c2, t0.c0, rt0.c1 FROM t1, vt0, rt0, t0;
SELECT t0.c2, t0.c0, rt0.c1 FROM t1, vt0, rt0, t0 WHERE (((((vt0.c0)GLOB(t1.c59))) NOTNULL)) UNION ALL SELECT ALL t0.c2, t0.c0, rt0.c1 FROM t1, vt0, rt0, t0 WHERE ((NOT (((((vt0.c0)GLOB(t1.c59))) NOTNULL)))) UNION ALL SELECT t0.c2, t0.c0, rt0.c1 FROM t1, vt0, rt0, t0 WHERE (((((((vt0.c0)GLOB(t1.c59))) NOTNULL)) ISNULL));
SELECT t0.c2, t0.c0, rt0.c1 FROM t1, vt0, rt0, t0;
SELECT DISTINCT t1.c59, rt0.c1, rt0.c2, t0.c1, rt0.c0 FROM vt0, t0, t1, rt0;
SELECT DISTINCT t1.c59, rt0.c1, rt0.c2, t0.c1, rt0.c0 FROM vt0, t0, t1, rt0 WHERE (((t1.c59 COLLATE BINARY) NOT NULL)) UNION SELECT DISTINCT t1.c59, rt0.c1, rt0.c2, t0.c1, rt0.c0 FROM vt0, t0, t1, rt0 WHERE ((NOT (((t1.c59 COLLATE BINARY) NOT NULL)))) UNION SELECT DISTINCT t1.c59, rt0.c1, rt0.c2, t0.c1, rt0.c0 FROM vt0, t0, t1, rt0 WHERE (((((t1.c59 COLLATE BINARY) NOT NULL)) ISNULL));
SELECT DISTINCT t1.c59, rt0.c1, rt0.c2, t0.c1, rt0.c0 FROM vt0, t0, t1, rt0;
SELECT ALL t0.c2 FROM rt0, t0 GROUP BY t0.c2;
SELECT t0.c2 FROM rt0, t0 WHERE (HEX(DISTINCT (t0.c2 IN ()))) GROUP BY t0.c2 UNION SELECT t0.c2 FROM rt0, t0 WHERE ((NOT (HEX(DISTINCT (t0.c2 IN ()))))) GROUP BY t0.c2 UNION SELECT t0.c2 FROM rt0, t0 WHERE (((HEX(DISTINCT (t0.c2 IN ()))) ISNULL)) GROUP BY t0.c2;
SELECT ALL t0.c2 FROM rt0, t0 GROUP BY t0.c2;
SELECT ALL rt0.c2, t1.c59, rt0.c0 FROM t1, rt0 GROUP BY rt0.c2, t1.c59, rt0.c0;
SELECT rt0.c2, t1.c59, rt0.c0 FROM t1, rt0 GROUP BY rt0.c2, t1.c59, rt0.c0 HAVING (MIN(TOTAL(rt0.c2)) IN ((AVG(COUNT(rt0.c2)) IN ()), ((rt0.c1)<>(GROUP_CONCAT(t1.c59))))) UNION ALL SELECT rt0.c2, t1.c59, rt0.c0 FROM t1, rt0 GROUP BY rt0.c2, t1.c59, rt0.c0 HAVING (NOT ((MIN(TOTAL(rt0.c2)) IN ((AVG(COUNT(rt0.c2)) IN ()), ((rt0.c1)!=(GROUP_CONCAT(t1.c59))))))) UNION ALL SELECT ALL rt0.c2, t1.c59, rt0.c0 FROM t1, rt0 GROUP BY rt0.c2, t1.c59, rt0.c0 HAVING (((MIN(TOTAL(rt0.c2)) IN ((AVG(COUNT(rt0.c2)) IN ()), ((rt0.c1)<>(GROUP_CONCAT(t1.c59)))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((0X6573e8ab IN ())) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((0x6573e8ab IN ())))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((0X6573e8ab IN ())) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM vt0, rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM vt0, rt0 WHERE (rt0.c2 COLLATE BINARY) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM vt0, rt0 WHERE ((NOT (rt0.c2 COLLATE BINARY))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM vt0, rt0 WHERE (((rt0.c2 COLLATE BINARY) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1 FROM vt0, rt0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ((((t0.c2 IN ()))+(CASE WHEN t0.c2 THEN t0.c0 ELSE t0.c1 END))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((((t0.c2 IN ()))+(CASE WHEN t0.c2 THEN t0.c0 ELSE t0.c1 END))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((((((t0.c2 IN ()))+(CASE WHEN t0.c2 THEN t0.c0 ELSE t0.c1 END))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0;
SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0 HAVING AVG((AVG(t0.c2) IN ())) UNION ALL SELECT t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0 HAVING (NOT (AVG((AVG(t0.c2) IN ())))) UNION ALL SELECT t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0 HAVING ((AVG((AVG(t0.c2) IN ()))) ISNULL);
SELECT t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0;
SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0 HAVING AVG((AVG(t0.c2) IN ())) UNION ALL SELECT t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0 HAVING (NOT (AVG((AVG(t0.c2) IN ())))) UNION ALL SELECT t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0 HAVING ((AVG((AVG(t0.c2) IN ()))) ISNULL);
SELECT t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0;
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON (((t0.c2 IN ()))*(HEX(rt0.c0))) FULL OUTER JOIN t1 ON CAST((rt0.c2 IN ()) AS NUMERIC) INNER JOIN t0 ON ((((796767691) NOT BETWEEN (t0.c0) AND (t0.c0))) IS TRUE);
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON (((t0.c2 IN ()))*(HEX(rt0.c0))) FULL OUTER JOIN t1 ON CAST((rt0.c2 IN ()) AS NUMERIC) INNER JOIN t0 ON ((((796767691) NOT BETWEEN (t0.c0) AND (t0.c0))) IS TRUE) WHERE (PRINTF(CAST(rt0.c2 AS BLOB), ((rt0.c0)-(rt0.c2)), NULL)) UNION ALL SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON (((t0.c2 IN ()))*(HEX(rt0.c0))) FULL OUTER JOIN t1 ON CAST((rt0.c2 IN ()) AS NUMERIC) INNER JOIN t0 ON ((((796767691) NOT BETWEEN (t0.c0) AND (t0.c0))) IS TRUE) WHERE ((NOT (PRINTF(CAST(rt0.c2 AS BLOB), ((rt0.c0)-(rt0.c2)), NULL)))) UNION ALL SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON (((t0.c2 IN ()))*(HEX(rt0.c0))) FULL OUTER JOIN t1 ON CAST((rt0.c2 IN ()) AS NUMERIC) INNER JOIN t0 ON ((((796767691) NOT BETWEEN (t0.c0) AND (t0.c0))) IS TRUE) WHERE (((PRINTF(CAST(rt0.c2 AS BLOB), ((rt0.c0)-(rt0.c2)), NULL)) ISNULL));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON (((t0.c2 IN ()))*(HEX(rt0.c0))) FULL OUTER JOIN t1 ON CAST((rt0.c2 IN ()) AS NUMERIC) INNER JOIN t0 ON ((((796767691) NOT BETWEEN (t0.c0) AND (t0.c0))) IS TRUE);
SELECT DISTINCT * FROM vt0 INNER JOIN t1 ON ((((t0.c0)&(NULL))) BETWEEN (rt0.c2 COLLATE NOCASE) AND ((NOT (t1.c59)))) INNER JOIN rt0 ON (NOT ((((rt0.c2)) BETWEEN ((vt0.c0)) AND ((rt0.c2))))) CROSS JOIN t0 ON ((~ (t0.c1)) IN (CASE WHEN t0.c2 THEN t0.c2 ELSE NULL END));
SELECT DISTINCT * FROM vt0 INNER JOIN t1 ON ((((t0.c0)&(NULL))) BETWEEN (rt0.c2 COLLATE NOCASE) AND ((NOT (t1.c59)))) INNER JOIN rt0 ON (NOT ((((rt0.c2)) BETWEEN ((vt0.c0)) AND ((rt0.c2))))) CROSS JOIN t0 ON ((~ (t0.c1)) IN (CASE WHEN t0.c2 THEN t0.c2 ELSE NULL END)) WHERE (((((CASE WHEN rt0.c0 THEN x'' WHEN '1212371950' THEN t0.c1 WHEN vt0.c0 THEN rt0.c1 END)OR(((((t0.c0)AND(vt0.c0)))AND(t0.c2)))))OR(((t0.c1) NOTNULL)))) UNION SELECT DISTINCT * FROM vt0 INNER JOIN t1 ON ((((t0.c0)&(NULL))) BETWEEN (rt0.c2 COLLATE NOCASE) AND ((NOT (t1.c59)))) INNER JOIN rt0 ON (NOT ((((rt0.c2)) BETWEEN ((vt0.c0)) AND ((rt0.c2))))) CROSS JOIN t0 ON ((~ (t0.c1)) IN (CASE WHEN t0.c2 THEN t0.c2 ELSE NULL END)) WHERE ((NOT (((((CASE WHEN rt0.c0 THEN x'' WHEN '1212371950' THEN t0.c1 WHEN vt0.c0 THEN rt0.c1 END)OR(((((t0.c0)AND(vt0.c0)))AND(t0.c2)))))OR(((t0.c1) NOTNULL)))))) UNION SELECT DISTINCT * FROM vt0 INNER JOIN t1 ON ((((t0.c0)&(NULL))) BETWEEN (rt0.c2 COLLATE NOCASE) AND ((NOT (t1.c59)))) INNER JOIN rt0 ON (NOT ((((rt0.c2)) BETWEEN ((vt0.c0)) AND ((rt0.c2))))) CROSS JOIN t0 ON ((~ (t0.c1)) IN (CASE WHEN t0.c2 THEN t0.c2 ELSE NULL END)) WHERE (((((((CASE WHEN rt0.c0 THEN x'' WHEN '1212371950' THEN t0.c1 WHEN vt0.c0 THEN rt0.c1 END)OR(((((t0.c0)AND(vt0.c0)))AND(t0.c2)))))OR(((t0.c1) NOTNULL)))) ISNULL));
SELECT DISTINCT * FROM vt0 INNER JOIN t1 ON ((((t0.c0)&(NULL))) BETWEEN (rt0.c2 COLLATE NOCASE) AND ((NOT (t1.c59)))) INNER JOIN rt0 ON (NOT ((((rt0.c2)) BETWEEN ((vt0.c0)) AND ((rt0.c2))))) CROSS JOIN t0 ON ((~ (t0.c1)) IN (CASE WHEN t0.c2 THEN t0.c2 ELSE NULL END));
SELECT ALL t0.c1, vt0.c0 FROM t0 LEFT OUTER JOIN vt0 ON (CAST(t0.c1 AS BLOB) IN (((vt0.c0) BETWEEN (t0.c0) AND (t0.c0)))) FULL OUTER JOIN t1 ON (+ (((t0.c0)AND(t0.c2)))) GROUP BY t0.c1, vt0.c0;
SELECT ALL t0.c1, vt0.c0 FROM t0 LEFT OUTER JOIN vt0 ON (CAST(t0.c1 AS BLOB) IN (((vt0.c0) BETWEEN (t0.c0) AND (t0.c0)))) FULL OUTER JOIN t1 ON (+ (((t0.c0)AND(t0.c2)))) WHERE ((((((t0.c0)<>(t0.c1)), CASE t0.c2  WHEN t0.c2 THEN '' END, ((t0.c1) NOT NULL)))>((NULLIF(t1.c59, t0.c1), (t0.c0 IN (vt0.c0)), ((vt0.c0)>=(t0.c2)))))) GROUP BY t0.c1, vt0.c0 UNION SELECT ALL t0.c1, vt0.c0 FROM t0 LEFT OUTER JOIN vt0 ON (CAST(t0.c1 AS BLOB) IN (((vt0.c0) BETWEEN (t0.c0) AND (t0.c0)))) FULL OUTER JOIN t1 ON (+ (((t0.c0)AND(t0.c2)))) WHERE ((NOT ((((((t0.c0)!=(t0.c1)), CASE t0.c2  WHEN t0.c2 THEN '' END, ((t0.c1) NOT NULL)))>((NULLIF(t1.c59, t0.c1), (t0.c0 IN (vt0.c0)), ((vt0.c0)>=(t0.c2)))))))) GROUP BY t0.c1, vt0.c0 UNION SELECT ALL t0.c1, vt0.c0 FROM t0 LEFT OUTER JOIN vt0 ON (CAST(t0.c1 AS BLOB) IN (((vt0.c0) BETWEEN (t0.c0) AND (t0.c0)))) FULL OUTER JOIN t1 ON (+ (((t0.c0)AND(t0.c2)))) WHERE ((((((((t0.c0)!=(t0.c1)), CASE t0.c2  WHEN t0.c2 THEN '' END, ((t0.c1) NOT NULL)))>((NULLIF(t1.c59, t0.c1), (t0.c0 IN (vt0.c0)), ((vt0.c0)>=(t0.c2)))))) ISNULL)) GROUP BY t0.c1, vt0.c0;
SELECT ALL t0.c1, vt0.c0 FROM t0 LEFT OUTER JOIN vt0 ON (CAST(t0.c1 AS BLOB) IN (((vt0.c0) BETWEEN (t0.c0) AND (t0.c0)))) FULL OUTER JOIN t1 ON (+ (((t0.c0)AND(t0.c2)))) GROUP BY t0.c1, vt0.c0;
SELECT rt0.c2, t0.c1 FROM rt0 INNER JOIN t1 ON (((t0.c1 IN (t0.c1))) NOT BETWEEN (CASE WHEN t0.c0 THEN t0.c2 ELSE rt0.c1 END) AND (((((t0.c1)OR(t1.c59)))AND(t0.c2)))) LEFT OUTER JOIN t0 ON (((- ('400898192')))GLOB(((rt0.c1)+(t0.c2)))) GROUP BY rt0.c2, t0.c1;
SELECT ALL rt0.c2, t0.c1 FROM rt0 INNER JOIN t1 ON (((t0.c1 IN (t0.c1))) NOT BETWEEN (CASE WHEN t0.c0 THEN t0.c2 ELSE rt0.c1 END) AND (((((t0.c1)OR(t1.c59)))AND(t0.c2)))) LEFT OUTER JOIN t0 ON (((- ('400898192')))GLOB(((rt0.c1)+(t0.c2)))) GROUP BY rt0.c2, t0.c1 HAVING AVG(AVG(t0.c2)) UNION ALL SELECT ALL rt0.c2, t0.c1 FROM rt0 INNER JOIN t1 ON (((t0.c1 IN (t0.c1))) NOT BETWEEN (CASE WHEN t0.c0 THEN t0.c2 ELSE rt0.c1 END) AND (((((t0.c1)OR(t1.c59)))AND(t0.c2)))) LEFT OUTER JOIN t0 ON (((- ('400898192')))GLOB(((rt0.c1)+(t0.c2)))) GROUP BY rt0.c2, t0.c1 HAVING (NOT (AVG(AVG(t0.c2)))) UNION ALL SELECT rt0.c2, t0.c1 FROM rt0 INNER JOIN t1 ON (((t0.c1 IN (t0.c1))) NOT BETWEEN (CASE WHEN t0.c0 THEN t0.c2 ELSE rt0.c1 END) AND (((((t0.c1)OR(t1.c59)))AND(t0.c2)))) LEFT OUTER JOIN t0 ON (((- ('400898192')))GLOB(((rt0.c1)+(t0.c2)))) GROUP BY rt0.c2, t0.c1 HAVING ((AVG(AVG(t0.c2))) ISNULL);
SELECT ALL rt0.c1, t0.c1, rt0.c0, rt0.c2, t0.c2, t0.c0, vt0.c0 FROM rt0, t0, vt0;
SELECT ALL rt0.c1, t0.c1, rt0.c0, rt0.c2, t0.c2, t0.c0, vt0.c0 FROM rt0, t0, vt0 WHERE (t0.c1) UNION ALL SELECT ALL rt0.c1, t0.c1, rt0.c0, rt0.c2, t0.c2, t0.c0, vt0.c0 FROM rt0, t0, vt0 WHERE ((NOT (t0.c1))) UNION ALL SELECT ALL rt0.c1, t0.c1, rt0.c0, rt0.c2, t0.c2, t0.c0, vt0.c0 FROM rt0, t0, vt0 WHERE (((t0.c1) ISNULL));
SELECT ALL rt0.c1, t0.c1, rt0.c0, rt0.c2, t0.c2, t0.c0, vt0.c0 FROM rt0, t0, vt0;
SELECT DISTINCT t0.c0, rt0.c2, t1.c59, t0.c1, t0.c2, rt0.c0 FROM t1, rt0, vt0, t0;
SELECT DISTINCT t0.c0, rt0.c2, t1.c59, t0.c1, t0.c2, rt0.c0 FROM t1, rt0, vt0, t0 WHERE ((((((vt0.c0)IS('-1760846950')), ((t0.c1) IS FALSE), ((((vt0.c0)OR(t0.c1)))OR(rt0.c1))))==(((- (0.5483532687303255)), ((t0.c0) NOT BETWEEN ('1835776090') AND (rt0.c1)), (~ (rt0.c0)))))) UNION SELECT DISTINCT t0.c0, rt0.c2, t1.c59, t0.c1, t0.c2, rt0.c0 FROM t1, rt0, vt0, t0 WHERE ((NOT ((((((vt0.c0)IS('-1760846950')), ((t0.c1) IS FALSE), ((((vt0.c0)OR(t0.c1)))OR(rt0.c1))))==(((- (0.5483532687303255)), ((t0.c0) NOT BETWEEN ('1835776090') AND (rt0.c1)), (~ (rt0.c0)))))))) UNION SELECT DISTINCT t0.c0, rt0.c2, t1.c59, t0.c1, t0.c2, rt0.c0 FROM t1, rt0, vt0 NOT INDEXED, t0 WHERE ((((((((vt0.c0)IS('-1760846950')), ((t0.c1) IS FALSE), ((((vt0.c0)OR(t0.c1)))OR(rt0.c1))))=(((- (0.5483532687303255)), ((t0.c0) NOT BETWEEN ('1835776090') AND (rt0.c1)), (~ (rt0.c0)))))) ISNULL));
SELECT DISTINCT t0.c0, rt0.c2, t1.c59, t0.c1, t0.c2, rt0.c0 FROM t1, rt0, vt0, t0;
SELECT t1.c59 FROM t1 GROUP BY t1.c59;
SELECT t1.c59 FROM t1 WHERE (ABS(DISTINCT (((t1.c59, t1.c59, t1.c59))==((t1.c59, t1.c59, 0Xffffffff8247c7f6))))) GROUP BY t1.c59 UNION SELECT ALL t1.c59 FROM t1 WHERE ((NOT (ABS(DISTINCT (((t1.c59, t1.c59, t1.c59))=((t1.c59, t1.c59, 0Xffffffff8247c7f6))))))) GROUP BY t1.c59 UNION SELECT t1.c59 FROM t1 WHERE (((ABS(DISTINCT (((t1.c59, t1.c59, t1.c59))=((t1.c59, t1.c59, 0xffffffff8247c7f6))))) ISNULL)) GROUP BY t1.c59;
SELECT t1.c59 FROM t1 GROUP BY t1.c59;
SELECT t0.c2, t0.c1, vt0.c0, t1.c59 FROM t0 FULL OUTER JOIN vt0 ON ((json_insert(t0.c2, t1.c59, t0.c1)) IS TRUE) CROSS JOIN t1 ON ((CASE WHEN t0.c2 THEN vt0.c0 WHEN t0.c1 THEN t1.c59 WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c2 WHEN t0.c0 THEN t0.c0 END) NOT BETWEEN (t0.c2) AND (CAST(t0.c0 AS NUMERIC))) GROUP BY t0.c2, t0.c1, vt0.c0, t1.c59;
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0))<((vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((NOT ((((vt0.c0))<((vt0.c0)))))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((NOT ((((vt0.c0))<((vt0.c0)))))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT t0.c0 FROM t0, rt0 FULL OUTER JOIN t1 ON CASE (t1.c59 IN (rt0.c0))  WHEN CASE WHEN rt0.c0 THEN t0.c0 ELSE 900553091 END THEN CAST(rt0.c0 AS TEXT) END;
SELECT DISTINCT t0.c0 FROM t0, rt0 FULL OUTER JOIN t1 ON CASE (t1.c59 IN (rt0.c0))  WHEN CASE WHEN rt0.c0 THEN t0.c0 ELSE 900553091 END THEN CAST(rt0.c0 AS TEXT) END WHERE (((((t1.c59) NOT BETWEEN (rt0.c0) AND (rt0.c2)))AND(((-1274842904) BETWEEN (rt0.c2) AND (t0.c1))))) UNION SELECT DISTINCT t0.c0 FROM t0, rt0 FULL OUTER JOIN t1 ON CASE (t1.c59 IN (rt0.c0))  WHEN CASE WHEN rt0.c0 THEN t0.c0 ELSE 900553091 END THEN CAST(rt0.c0 AS TEXT) END WHERE ((NOT (((((t1.c59) NOT BETWEEN (rt0.c0) AND (rt0.c2)))AND(((-1274842904) BETWEEN (rt0.c2) AND (t0.c1))))))) UNION SELECT DISTINCT t0.c0 FROM t0, rt0 FULL OUTER JOIN t1 ON CASE (t1.c59 IN (rt0.c0))  WHEN CASE WHEN rt0.c0 THEN t0.c0 ELSE 900553091 END THEN CAST(rt0.c0 AS TEXT) END WHERE (((((((t1.c59) NOT BETWEEN (rt0.c0) AND (rt0.c2)))AND(((-1274842904) BETWEEN (rt0.c2) AND (t0.c1))))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0, rt0 FULL OUTER JOIN t1 ON CASE (t1.c59 IN (rt0.c0))  WHEN CASE WHEN rt0.c0 THEN t0.c0 ELSE 900553091 END THEN CAST(rt0.c0 AS TEXT) END;
SELECT t1.c59, t0.c1, rt0.c0 FROM t0 FULL OUTER JOIN t1 ON '' LEFT OUTER JOIN rt0 ON (- (CASE WHEN t1.c59 THEN rt0.c1 END)) LEFT OUTER JOIN vt0 ON t1.c59 GROUP BY t1.c59, t0.c1, rt0.c0;
SELECT t1.c59, t0.c1, rt0.c0 FROM t0 FULL OUTER JOIN t1 ON '' LEFT OUTER JOIN rt0 ON (- (CASE WHEN t1.c59 THEN rt0.c1 END)) LEFT OUTER JOIN vt0 ON t1.c59 WHERE (((((t0.c2) IS TRUE))IS NOT((((t0.c0))>=((t0.c0)))))) GROUP BY t1.c59, t0.c1, rt0.c0 UNION SELECT ALL t1.c59, t0.c1, rt0.c0 FROM t0 FULL OUTER JOIN t1 ON '' LEFT OUTER JOIN rt0 ON (- (CASE WHEN t1.c59 THEN rt0.c1 END)) LEFT OUTER JOIN vt0 ON t1.c59 WHERE ((NOT (((((t0.c2) IS TRUE))IS NOT((((t0.c0))>=((t0.c0)))))))) GROUP BY t1.c59, t0.c1, rt0.c0 UNION SELECT t1.c59, t0.c1, rt0.c0 FROM t0 FULL OUTER JOIN t1 ON '' LEFT OUTER JOIN rt0 ON (- (CASE WHEN t1.c59 THEN rt0.c1 END)) LEFT OUTER JOIN vt0 ON t1.c59 WHERE (((((((t0.c2) IS TRUE))IS NOT((((t0.c0))>=((t0.c0)))))) ISNULL)) GROUP BY t1.c59, t0.c1, rt0.c0;
SELECT t1.c59, t0.c1, rt0.c0 FROM t0 FULL OUTER JOIN t1 ON '' LEFT OUTER JOIN rt0 ON (- (CASE WHEN t1.c59 THEN rt0.c1 END)) LEFT OUTER JOIN vt0 ON t1.c59 GROUP BY t1.c59, t0.c1, rt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TOTAL((((TOTAL(AVG(SUM(vt0.c0))))) BETWEEN ((COUNT(AVG(GROUP_CONCAT(TOTAL(COUNT(*))))))) AND ((GROUP_CONCAT(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL((((TOTAL(AVG(SUM(vt0.c0))))) BETWEEN ((COUNT(AVG(GROUP_CONCAT(TOTAL(COUNT(*))))))) AND ((GROUP_CONCAT(vt0.c0))))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL((((TOTAL(AVG(SUM(vt0.c0))))) BETWEEN ((COUNT(AVG(GROUP_CONCAT(TOTAL(COUNT(*))))))) AND ((GROUP_CONCAT(vt0.c0)))))) ISNULL);
SELECT ALL MAX(((vt0.c0) NOT NULL)) FROM vt0, t0;
SELECT t1.c59, vt0.c0 FROM rt0 RIGHT OUTER JOIN t1 ON (((- (t1.c59)))OR(CAST(t0.c0 AS INTEGER))) INNER JOIN vt0 ON (((NOT (t0.c0))) NOT NULL) FULL OUTER JOIN t0 ON 1.105269263E9;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0) NOT NULL)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((vt0.c0) NOT NULL)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL rt0.c2, t0.c2, vt0.c0, t0.c1, t0.c0, rt0.c1, rt0.c0 FROM vt0, rt0, t0 GROUP BY rt0.c2, t0.c2, vt0.c0, t0.c1, t0.c0, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, t0.c2, vt0.c0, t0.c1, t0.c0, rt0.c1, rt0.c0 FROM vt0, rt0, t0 WHERE (rt0.c0) GROUP BY rt0.c2, t0.c2, vt0.c0, t0.c1, t0.c0, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, t0.c2, vt0.c0, t0.c1, t0.c0, rt0.c1, rt0.c0 FROM vt0, rt0, t0 WHERE ((NOT (rt0.c0))) GROUP BY rt0.c2, t0.c2, vt0.c0, t0.c1, t0.c0, rt0.c1, rt0.c0 UNION SELECT rt0.c2, t0.c2, vt0.c0, t0.c1, t0.c0, rt0.c1, rt0.c0 FROM vt0, rt0, t0 WHERE (((rt0.c0) ISNULL)) GROUP BY rt0.c2, t0.c2, vt0.c0, t0.c1, t0.c0, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, t0.c2, vt0.c0, t0.c1, t0.c0, rt0.c1, rt0.c0 FROM vt0, rt0, t0 GROUP BY rt0.c2, t0.c2, vt0.c0, t0.c1, t0.c0, rt0.c1, rt0.c0;
SELECT ALL t0.c0, vt0.c0, t0.c2 FROM vt0, t0 GROUP BY t0.c0, vt0.c0, t0.c2;
SELECT ALL t0.c0, vt0.c0, t0.c2 FROM vt0 NOT INDEXED, t0 GROUP BY t0.c0, vt0.c0, t0.c2 HAVING ((t0.c2)<(GROUP_CONCAT(COUNT(t0.c2)))) UNION ALL SELECT ALL t0.c0, vt0.c0, t0.c2 FROM vt0, t0 GROUP BY t0.c0, vt0.c0, t0.c2 HAVING (NOT (((t0.c2)<(GROUP_CONCAT(COUNT(t0.c2)))))) UNION ALL SELECT t0.c0, vt0.c0, t0.c2 FROM vt0, t0 GROUP BY t0.c0, vt0.c0, t0.c2 HAVING ((((t0.c2)<(GROUP_CONCAT(COUNT(t0.c2))))) ISNULL);
SELECT ALL * FROM vt0 INNER JOIN t1 ON ((((vt0.c0)AND('-451257431')))OR(vt0.c0)) COLLATE BINARY;
SELECT ALL * FROM vt0 INNER JOIN t1 ON ((((vt0.c0)AND('-451257431')))OR(vt0.c0)) COLLATE BINARY WHERE ((((vt0.c0, vt0.c0, t1.c59)) BETWEEN ((t1.c59 COLLATE NOCASE, ((x'')LIKE(t1.c59)), t1.c59)) AND ((0x7748f07e, (- (vt0.c0)), CASE WHEN '-1264758577' THEN vt0.c0 END)))) UNION ALL SELECT * FROM vt0 INNER JOIN t1 ON ((((vt0.c0)AND('-451257431')))OR(vt0.c0)) COLLATE BINARY WHERE ((NOT ((((vt0.c0, vt0.c0, t1.c59)) BETWEEN ((t1.c59 COLLATE NOCASE, ((x'')LIKE(t1.c59)), t1.c59)) AND ((0X7748f07e, (- (vt0.c0)), CASE WHEN '-1264758577' THEN vt0.c0 END)))))) UNION ALL SELECT ALL * FROM vt0 INNER JOIN t1 ON ((((vt0.c0)AND('-451257431')))OR(vt0.c0)) COLLATE BINARY WHERE ((((((vt0.c0, vt0.c0, t1.c59)) BETWEEN ((t1.c59 COLLATE NOCASE, ((x'')LIKE(t1.c59)), t1.c59)) AND ((0X7748f07e, (- (vt0.c0)), CASE WHEN '-1264758577' THEN vt0.c0 END)))) ISNULL));
SELECT ALL * FROM vt0 INNER JOIN t1 ON ((((vt0.c0)AND('-451257431')))OR(vt0.c0)) COLLATE BINARY;
SELECT DISTINCT t1.c59 FROM t1;
SELECT DISTINCT t1.c59 FROM t1 WHERE ((+ (CAST(t1.c59 AS REAL)))) UNION SELECT DISTINCT t1.c59 FROM t1 WHERE ((NOT ((+ (CAST(t1.c59 AS REAL)))))) UNION SELECT DISTINCT t1.c59 FROM t1 WHERE ((((+ (CAST(t1.c59 AS REAL)))) ISNULL));
SELECT DISTINCT t1.c59 FROM t1;
SELECT t1.c59 FROM t1 GROUP BY t1.c59;
SELECT ALL t1.c59 FROM t1 WHERE ((((t1.c59) BETWEEN (t1.c59) AND (t1.c59)) IN ())) GROUP BY t1.c59 UNION SELECT ALL t1.c59 FROM t1 WHERE ((NOT ((((t1.c59) BETWEEN (t1.c59) AND (t1.c59)) IN ())))) GROUP BY t1.c59 UNION SELECT t1.c59 FROM t1 WHERE ((((((t1.c59) BETWEEN (t1.c59) AND (t1.c59)) IN ())) ISNULL)) GROUP BY t1.c59;
SELECT t1.c59 FROM t1 GROUP BY t1.c59;
SELECT rt0.c2, t1.c59, rt0.c1 FROM t0 INNER JOIN vt0 ON LIKELIHOOD(((((t1.c59)OR(rt0.c1)))OR(NULL)), 0.7657619796170391) INNER JOIN t1 ON (NOT (((t1.c59)/(t0.c2)))) RIGHT OUTER JOIN rt0 ON (+ (((vt0.c0)+(rt0.c0)))) GROUP BY rt0.c2, t1.c59, rt0.c1;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((rt0.c0))<>((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c0))!=((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((((rt0.c0))<>((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))) ISNULL));
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM t0, rt0, vt0, t1;
SELECT DISTINCT * FROM t0, rt0, vt0, t1 WHERE ((((rt0.c1)) NOT BETWEEN (((t1.c59 IN ()))) AND ((json_patch(t0.c1, rt0.c1))))) UNION SELECT DISTINCT * FROM t0, rt0, vt0, t1 WHERE ((NOT ((((rt0.c1)) NOT BETWEEN (((t1.c59 IN ()))) AND ((json_patch(t0.c1, rt0.c1))))))) UNION SELECT DISTINCT * FROM t0, rt0, vt0, t1 WHERE ((((((rt0.c1)) NOT BETWEEN (((t1.c59 IN ()))) AND ((json_patch(t0.c1, rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM t0, rt0, vt0, t1;
SELECT rt0.c2, t1.c59 FROM vt0, t0, rt0 LEFT OUTER JOIN t1 ON ((((((('', rt0.c0, t1.c59)) NOT BETWEEN ((rt0.c0, t0.c2, t0.c0)) AND ((rt0.c2, vt0.c0, t0.c0))))OR(t1.c59 COLLATE NOCASE)))AND((~ (rt0.c0)))) GROUP BY rt0.c2, t1.c59;
SELECT rt0.c2, t1.c59 FROM vt0, t0, rt0 LEFT OUTER JOIN t1 ON ((((((('', rt0.c0, t1.c59)) NOT BETWEEN ((rt0.c0, t0.c2, t0.c0)) AND ((rt0.c2, vt0.c0, t0.c0))))OR(t1.c59 COLLATE NOCASE)))AND((~ (rt0.c0)))) WHERE (CAST(t1.c59 AS REAL)) GROUP BY rt0.c2, t1.c59 UNION SELECT rt0.c2, t1.c59 FROM vt0, t0, rt0 LEFT OUTER JOIN t1 ON ((((((('', rt0.c0, t1.c59)) NOT BETWEEN ((rt0.c0, t0.c2, t0.c0)) AND ((rt0.c2, vt0.c0, t0.c0))))OR(t1.c59 COLLATE NOCASE)))AND((~ (rt0.c0)))) WHERE ((NOT (CAST(t1.c59 AS REAL)))) GROUP BY rt0.c2, t1.c59 UNION SELECT rt0.c2, t1.c59 FROM vt0, t0, rt0 LEFT OUTER JOIN t1 ON ((((((('', rt0.c0, t1.c59)) NOT BETWEEN ((rt0.c0, t0.c2, t0.c0)) AND ((rt0.c2, vt0.c0, t0.c0))))OR(t1.c59 COLLATE NOCASE)))AND((~ (rt0.c0)))) WHERE (((CAST(t1.c59 AS REAL)) ISNULL)) GROUP BY rt0.c2, t1.c59;
SELECT rt0.c2, t1.c59 FROM vt0, t0, rt0 LEFT OUTER JOIN t1 ON ((((((('', rt0.c0, t1.c59)) NOT BETWEEN ((rt0.c0, t0.c2, t0.c0)) AND ((rt0.c2, vt0.c0, t0.c0))))OR(t1.c59 COLLATE NOCASE)))AND((~ (rt0.c0)))) GROUP BY rt0.c2, t1.c59;
SELECT ALL t0.c0, t1.c59, rt0.c1, rt0.c2, vt0.c0, t0.c2, t0.c1, rt0.c0 FROM rt0, t1, t0, vt0 GROUP BY t0.c0, t1.c59, rt0.c1, rt0.c2, vt0.c0, t0.c2, t0.c1, rt0.c0;
SELECT ALL t0.c0, t1.c59, rt0.c1, rt0.c2, vt0.c0, t0.c2, t0.c1, rt0.c0 FROM rt0, t1, t0, vt0 GROUP BY t0.c0, t1.c59, rt0.c1, rt0.c2, vt0.c0, t0.c2, t0.c1, rt0.c0 HAVING TOTAL(((((rt0.c1)OR(SUM(rt0.c1))))AND(t0.c1))) UNION ALL SELECT t0.c0, t1.c59, rt0.c1, rt0.c2, vt0.c0, t0.c2, t0.c1, rt0.c0 FROM rt0, t1, t0, vt0 GROUP BY t0.c0, t1.c59, rt0.c1, rt0.c2, vt0.c0, t0.c2, t0.c1, rt0.c0 HAVING (NOT (TOTAL(((((rt0.c1)OR(SUM(rt0.c1))))AND(t0.c1))))) UNION ALL SELECT t0.c0, t1.c59, rt0.c1, rt0.c2, vt0.c0, t0.c2, t0.c1, rt0.c0 FROM rt0, t1, t0, vt0 GROUP BY t0.c0, t1.c59, rt0.c1, rt0.c2, vt0.c0, t0.c2, t0.c1, rt0.c0 HAVING ((TOTAL(((((rt0.c1)OR(SUM(rt0.c1))))AND(t0.c1)))) ISNULL);
SELECT * FROM t1;
SELECT * FROM t1 WHERE (CASE ((t1.c59)<(t1.c59))  WHEN ((t1.c59) IS FALSE) THEN ((t1.c59) BETWEEN (t1.c59) AND ('-370842088')) WHEN ((t1.c59) IS FALSE) THEN CASE t1.c59  WHEN t1.c59 THEN t1.c59 ELSE t1.c59 END WHEN ((((t1.c59)AND(t1.c59)))OR(t1.c59)) THEN t1.c59 END) ORDER BY (('|e%T9zqS' COLLATE NOCASE)<<(((t1.c59)IS NOT(t1.c59)))) ASC  NULLS FIRST;
SELECT * FROM t1 WHERE ((NOT (CASE ((t1.c59)<(t1.c59))  WHEN ((t1.c59) IS FALSE) THEN ((t1.c59) BETWEEN (t1.c59) AND ('-370842088')) WHEN ((t1.c59) IS FALSE) THEN CASE t1.c59  WHEN t1.c59 THEN t1.c59 ELSE t1.c59 END WHEN ((((t1.c59)AND(t1.c59)))OR(t1.c59)) THEN t1.c59 END))) ORDER BY (('|e%T9zqS' COLLATE NOCASE)<<(((t1.c59)IS NOT(t1.c59)))) ASC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (((CASE ((t1.c59)<(t1.c59))  WHEN ((t1.c59) IS FALSE) THEN ((t1.c59) BETWEEN (t1.c59) AND ('-370842088')) WHEN ((t1.c59) IS FALSE) THEN CASE t1.c59  WHEN t1.c59 THEN t1.c59 ELSE t1.c59 END WHEN ((((t1.c59)AND(t1.c59)))OR(t1.c59)) THEN t1.c59 END) ISNULL)) ORDER BY (('|e%T9zqS' COLLATE NOCASE)<<(((t1.c59)IS NOT(t1.c59)))) ASC  NULLS FIRST;
SELECT * FROM t1;
SELECT DISTINCT * FROM t1 CROSS JOIN rt0 ON CASE WHEN '-1880379802' THEN rt0.c2 WHEN rt0.c0 COLLATE BINARY THEN ((rt0.c0)LIKE(t0.c1)) WHEN CASE WHEN t0.c2 THEN t1.c59 ELSE t0.c1 END THEN (t0.c0 IN ()) ELSE CAST(t0.c2 AS INTEGER) END LEFT OUTER JOIN t0 ON CASE (~ (t0.c1))  WHEN IFNULL(rt0.c0, t1.c59) THEN (~ (t1.c59)) END;
SELECT DISTINCT * FROM t1 CROSS JOIN rt0 ON CASE WHEN '-1880379802' THEN rt0.c2 WHEN rt0.c0 COLLATE BINARY THEN ((rt0.c0)LIKE(t0.c1)) WHEN CASE WHEN t0.c2 THEN t1.c59 ELSE t0.c1 END THEN (t0.c0 IN ()) ELSE CAST(t0.c2 AS INTEGER) END LEFT OUTER JOIN t0 ON CASE (~ (t0.c1))  WHEN IFNULL(rt0.c0, t1.c59) THEN (~ (t1.c59)) END WHERE (((0.22984521965572347 COLLATE BINARY) IS FALSE)) UNION SELECT DISTINCT * FROM t1 CROSS JOIN rt0 ON CASE WHEN '-1880379802' THEN rt0.c2 WHEN rt0.c0 COLLATE BINARY THEN ((rt0.c0)LIKE(t0.c1)) WHEN CASE WHEN t0.c2 THEN t1.c59 ELSE t0.c1 END THEN (t0.c0 IN ()) ELSE CAST(t0.c2 AS INTEGER) END LEFT OUTER JOIN t0 ON CASE (~ (t0.c1))  WHEN IFNULL(rt0.c0, t1.c59) THEN (~ (t1.c59)) END WHERE ((NOT (((0.22984521965572347 COLLATE BINARY) IS FALSE)))) UNION SELECT DISTINCT * FROM t1 CROSS JOIN rt0 ON CASE WHEN '-1880379802' THEN rt0.c2 WHEN rt0.c0 COLLATE BINARY THEN ((rt0.c0)LIKE(t0.c1)) WHEN CASE WHEN t0.c2 THEN t1.c59 ELSE t0.c1 END THEN (t0.c0 IN ()) ELSE CAST(t0.c2 AS INTEGER) END LEFT OUTER JOIN t0 ON CASE (~ (t0.c1))  WHEN IFNULL(rt0.c0, t1.c59) THEN (~ (t1.c59)) END WHERE (((((0.22984521965572347 COLLATE BINARY) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM t1 CROSS JOIN rt0 ON CASE WHEN '-1880379802' THEN rt0.c2 WHEN rt0.c0 COLLATE BINARY THEN ((rt0.c0)LIKE(t0.c1)) WHEN CASE WHEN t0.c2 THEN t1.c59 ELSE t0.c1 END THEN (t0.c0 IN ()) ELSE CAST(t0.c2 AS INTEGER) END LEFT OUTER JOIN t0 ON CASE (~ (t0.c1))  WHEN IFNULL(rt0.c0, t1.c59) THEN (~ (t1.c59)) END;
SELECT ALL rt0.c1, rt0.c2 FROM vt0 INDEXED BY i82 CROSS JOIN t0 ON CASE ((rt0.c1)OR(t0.c1))  WHEN (rt0.c0 IN ()) THEN ((((t0.c2)AND(t1.c59)))OR(t0.c0)) ELSE (((t0.c2))!=((t0.c0))) END CROSS JOIN t1 ON rt0.c1 RIGHT OUTER JOIN rt0 ON (((+ (t0.c1)))IS NOT(((t0.c2) NOTNULL))) GROUP BY rt0.c1, rt0.c2;
SELECT ALL t1.c59, t0.c0, vt0.c0, t0.c2 FROM t1, vt0, t0 GROUP BY t1.c59, t0.c0, vt0.c0, t0.c2;
SELECT t1.c59, t0.c0, vt0.c0, t0.c2 FROM t1, vt0, t0 GROUP BY t1.c59, t0.c0, vt0.c0, t0.c2 HAVING GROUP_CONCAT(MIN(t0.c0)) UNION ALL SELECT t1.c59, t0.c0, vt0.c0, t0.c2 FROM t1, vt0, t0 GROUP BY t1.c59, t0.c0, vt0.c0, t0.c2 HAVING (NOT (GROUP_CONCAT(MIN(t0.c0)))) UNION ALL SELECT ALL t1.c59, t0.c0, vt0.c0, t0.c2 FROM t1, vt0, t0 GROUP BY t1.c59, t0.c0, vt0.c0, t0.c2 HAVING ((GROUP_CONCAT(MIN(t0.c0))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (rt0.c1) UNION ALL SELECT * FROM rt0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT ALL * FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT t0.c2, t0.c1, rt0.c1, t1.c59, rt0.c2, rt0.c0 FROM t0, rt0, t1;
SELECT DISTINCT t0.c2, t0.c1, rt0.c1, t1.c59, rt0.c2, rt0.c0 FROM t0, rt0, t1 WHERE (0xfffffffff7b4e0cb) UNION SELECT DISTINCT t0.c2, t0.c1, rt0.c1, t1.c59, rt0.c2, rt0.c0 FROM t0, rt0, t1 WHERE ((NOT (0xfffffffff7b4e0cb))) UNION SELECT DISTINCT t0.c2, t0.c1, rt0.c1, t1.c59, rt0.c2, rt0.c0 FROM t0, rt0, t1 WHERE (((0xfffffffff7b4e0cb) ISNULL));
SELECT DISTINCT t0.c2, t0.c1, rt0.c1, t1.c59, rt0.c2, rt0.c0 FROM t0, rt0, t1;
SELECT ALL t0.c2, rt0.c2, rt0.c0 FROM t0, t1, rt0 INDEXED BY i82 GROUP BY t0.c2, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, t1.c59, t0.c1, rt0.c0, t0.c2 FROM rt0, t1 LEFT OUTER JOIN t0 ON ((rt0.c0)*(rt0.c1)) COLLATE RTRIM GROUP BY rt0.c1, t1.c59, t0.c1, rt0.c0, t0.c2;
SELECT rt0.c1, t1.c59, t0.c1, rt0.c0, t0.c2 FROM rt0, t1 LEFT OUTER JOIN t0 ON ((rt0.c0)*(rt0.c1)) COLLATE RTRIM GROUP BY rt0.c1, t1.c59, t0.c1, rt0.c0, t0.c2 HAVING CASE WHEN MAX(SUM(COUNT(*))) THEN (x'' IN ()) WHEN TOTAL(AVG(t1.c59)) THEN ((COUNT(rt0.c0)) BETWEEN (t0.c2) AND (GROUP_CONCAT(rt0.c0))) WHEN MAX(COUNT(t1.c59)) THEN CASE t0.c2  WHEN t1.c59 THEN GROUP_CONCAT(COUNT(*)) END END UNION ALL SELECT ALL rt0.c1, t1.c59, t0.c1, rt0.c0, t0.c2 FROM rt0, t1 LEFT OUTER JOIN t0 ON ((rt0.c0)*(rt0.c1)) COLLATE RTRIM GROUP BY rt0.c1, t1.c59, t0.c1, rt0.c0, t0.c2 HAVING (NOT (CASE WHEN MAX(SUM(COUNT(*))) THEN (x'' IN ()) WHEN TOTAL(AVG(t1.c59)) THEN ((COUNT(rt0.c0)) BETWEEN (t0.c2) AND (GROUP_CONCAT(rt0.c0))) WHEN MAX(COUNT(t1.c59)) THEN CASE t0.c2  WHEN t1.c59 THEN GROUP_CONCAT(COUNT(*)) END END)) UNION ALL SELECT rt0.c1, t1.c59, t0.c1, rt0.c0, t0.c2 FROM rt0, t1 LEFT OUTER JOIN t0 ON ((rt0.c0)*(rt0.c1)) COLLATE RTRIM GROUP BY rt0.c1, t1.c59, t0.c1, rt0.c0, t0.c2 HAVING ((CASE WHEN MAX(SUM(COUNT(*))) THEN (x'' IN ()) WHEN TOTAL(AVG(t1.c59)) THEN ((COUNT(rt0.c0)) BETWEEN (t0.c2) AND (GROUP_CONCAT(rt0.c0))) WHEN MAX(COUNT(t1.c59)) THEN CASE t0.c2  WHEN t1.c59 THEN GROUP_CONCAT(COUNT(*)) END END) ISNULL);
SELECT * FROM vt0, rt0;
SELECT * FROM vt0, rt0 WHERE (CASE ((rt0.c1)&(vt0.c0))  WHEN ((rt0.c1)IS NOT(rt0.c0)) THEN ((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)) WHEN x'e7cb' THEN UNLIKELY(DISTINCT rt0.c0) WHEN ((rt0.c1)<=(vt0.c0)) THEN vt0.c0 END) UNION ALL SELECT * FROM vt0, rt0 WHERE ((NOT (CASE ((rt0.c1)&(vt0.c0))  WHEN ((rt0.c1)IS NOT(rt0.c0)) THEN ((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)) WHEN x'e7cb' THEN UNLIKELY(DISTINCT rt0.c0) WHEN ((rt0.c1)<=(vt0.c0)) THEN vt0.c0 END))) UNION ALL SELECT * FROM vt0, rt0 WHERE (((CASE ((rt0.c1)&(vt0.c0))  WHEN ((rt0.c1)IS NOT(rt0.c0)) THEN ((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)) WHEN x'e7cb' THEN UNLIKELY(DISTINCT rt0.c0) WHEN ((rt0.c1)<=(vt0.c0)) THEN vt0.c0 END) ISNULL));
SELECT * FROM vt0, rt0;
SELECT DISTINCT rt0.c1, vt0.c0 FROM vt0, rt0, t1, t0;
SELECT DISTINCT rt0.c1, vt0.c0 FROM vt0, rt0, t1, t0 WHERE ((((((t1.c59)<=(vt0.c0))))<=((NULL COLLATE BINARY)))) UNION SELECT DISTINCT rt0.c1, vt0.c0 FROM vt0, rt0, t1, t0 WHERE ((NOT ((((((t1.c59)<=(vt0.c0))))<=((NULL COLLATE BINARY)))))) UNION SELECT DISTINCT rt0.c1, vt0.c0 FROM vt0, rt0, t1, t0 WHERE ((((((((t1.c59)<=(vt0.c0))))<=((NULL COLLATE BINARY)))) ISNULL));
SELECT DISTINCT rt0.c1, vt0.c0 FROM vt0, rt0, t1, t0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (CAST(((0.6711049242222649) IS FALSE) AS TEXT)) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (CAST(((0.6711049242222649) IS FALSE) AS TEXT)))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((CAST(((0.6711049242222649) IS FALSE) AS TEXT)) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL vt0.c0, rt0.c0, rt0.c2, rt0.c1 FROM t1, vt0, rt0 NOT INDEXED, t0 GROUP BY vt0.c0, rt0.c0, rt0.c2, rt0.c1;
SELECT ALL vt0.c0, rt0.c0, rt0.c2, rt0.c1 FROM t1, vt0, rt0, t0 GROUP BY vt0.c0, rt0.c0, rt0.c2, rt0.c1 HAVING (((((SUM(AVG(rt0.c1)))AND(MIN(COUNT(t1.c59)))))OR(t0.c1)) IN ()) UNION ALL SELECT vt0.c0, rt0.c0, rt0.c2, rt0.c1 FROM t1, vt0, rt0, t0 GROUP BY vt0.c0, rt0.c0, rt0.c2, rt0.c1 HAVING (NOT ((((((SUM(AVG(rt0.c1)))AND(MIN(COUNT(t1.c59)))))OR(t0.c1)) IN ()))) UNION ALL SELECT vt0.c0, rt0.c0, rt0.c2, rt0.c1 FROM t1, vt0, rt0, t0 GROUP BY vt0.c0, rt0.c0, rt0.c2, rt0.c1 HAVING (((((((SUM(AVG(rt0.c1)))AND(MIN(COUNT(t1.c59)))))OR(t0.c1)) IN ())) ISNULL);
SELECT ALL vt0.c0, rt0.c0, rt0.c2, rt0.c1 FROM t1, vt0, rt0 NOT INDEXED, t0 GROUP BY vt0.c0, rt0.c0, rt0.c2, rt0.c1;
SELECT ALL vt0.c0, rt0.c0, rt0.c2, rt0.c1 FROM t1, vt0, rt0, t0 GROUP BY vt0.c0, rt0.c0, rt0.c2, rt0.c1 HAVING (((((SUM(AVG(rt0.c1)))AND(MIN(COUNT(t1.c59)))))OR(t0.c1)) IN ()) UNION ALL SELECT vt0.c0, rt0.c0, rt0.c2, rt0.c1 FROM t1, vt0, rt0, t0 GROUP BY vt0.c0, rt0.c0, rt0.c2, rt0.c1 HAVING (NOT ((((((SUM(AVG(rt0.c1)))AND(MIN(COUNT(t1.c59)))))OR(t0.c1)) IN ()))) UNION ALL SELECT vt0.c0, rt0.c0, rt0.c2, rt0.c1 FROM t1, vt0, rt0, t0 GROUP BY vt0.c0, rt0.c0, rt0.c2, rt0.c1 HAVING (((((((SUM(AVG(rt0.c1)))AND(MIN(COUNT(t1.c59)))))OR(t0.c1)) IN ())) ISNULL);
SELECT ALL vt0.c0, rt0.c0, rt0.c2, rt0.c1 FROM t1, vt0, rt0 NOT INDEXED, t0 GROUP BY vt0.c0, rt0.c0, rt0.c2, rt0.c1;
SELECT ALL TOTAL(rt0.c0) FROM vt0, t0, t1, rt0 ORDER BY ((((t0.c1)LIKE(rt0.c0))) NOT NULL) ASC  NULLS LAST, (((((((rt0.c0)AND(t0.c2)))AND(rt0.c2))))<=((CAST(rt0.c1 AS TEXT))))  NULLS FIRST;
SELECT t0.c2, vt0.c0, t0.c1 FROM t0 INNER JOIN t1 ON ((((((((t0.c0)AND(t0.c2)))OR(vt0.c0)))OR((- (vt0.c0)))))OR(t0.c2 COLLATE NOCASE)) INNER JOIN vt0 ON (((- (t0.c1))) NOT BETWEEN (((t0.c1)LIKE(t0.c2))) AND ((vt0.c0 IN ())));
SELECT t0.c2, vt0.c0, t0.c1 FROM t0 INNER JOIN t1 ON ((((((((t0.c0)AND(t0.c2)))OR(vt0.c0)))OR((- (vt0.c0)))))OR(t0.c2 COLLATE NOCASE)) INNER JOIN vt0 ON (((- (t0.c1))) NOT BETWEEN (((t0.c1)LIKE(t0.c2))) AND ((vt0.c0 IN ()))) WHERE (((CASE t0.c0  WHEN NULL THEN t1.c59 WHEN t0.c0 THEN t0.c2 WHEN t1.c59 THEN vt0.c0 ELSE vt0.c0 END)>=(JULIANDAY(t1.c59, t0.c1, NULL, NULL, t0.c1)))) UNION ALL SELECT t0.c2, vt0.c0, t0.c1 FROM t0 INNER JOIN t1 ON ((((((((t0.c0)AND(t0.c2)))OR(vt0.c0)))OR((- (vt0.c0)))))OR(t0.c2 COLLATE NOCASE)) INNER JOIN vt0 ON (((- (t0.c1))) NOT BETWEEN (((t0.c1)LIKE(t0.c2))) AND ((vt0.c0 IN ()))) WHERE ((NOT (((CASE t0.c0  WHEN NULL THEN t1.c59 WHEN t0.c0 THEN t0.c2 WHEN t1.c59 THEN vt0.c0 ELSE vt0.c0 END)>=(JULIANDAY(t1.c59, t0.c1, NULL, NULL, t0.c1)))))) UNION ALL SELECT t0.c2, vt0.c0, t0.c1 FROM t0 INNER JOIN t1 ON ((((((((t0.c0)AND(t0.c2)))OR(vt0.c0)))OR((- (vt0.c0)))))OR(t0.c2 COLLATE NOCASE)) INNER JOIN vt0 ON (((- (t0.c1))) NOT BETWEEN (((t0.c1)LIKE(t0.c2))) AND ((vt0.c0 IN ()))) WHERE (((((CASE t0.c0  WHEN NULL THEN t1.c59 WHEN t0.c0 THEN t0.c2 WHEN t1.c59 THEN vt0.c0 ELSE vt0.c0 END)>=(JULIANDAY(t1.c59, t0.c1, NULL, NULL, t0.c1)))) ISNULL));
SELECT t0.c2, vt0.c0, t0.c1 FROM t0 INNER JOIN t1 ON ((((((((t0.c0)AND(t0.c2)))OR(vt0.c0)))OR((- (vt0.c0)))))OR(t0.c2 COLLATE NOCASE)) INNER JOIN vt0 ON (((- (t0.c1))) NOT BETWEEN (((t0.c1)LIKE(t0.c2))) AND ((vt0.c0 IN ())));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, t0.c0, t1.c59, t0.c1, t0.c2, vt0.c0 FROM vt0, t1, rt0, t0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, t0.c0, t1.c59, t0.c1, t0.c2, vt0.c0 FROM vt0, t1, rt0, t0 WHERE (((((CAST(t0.c1 AS REAL))OR(rt0.c2 COLLATE RTRIM)))AND(CAST(t1.c59 AS INTEGER)))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, t0.c0, t1.c59, t0.c1, t0.c2, vt0.c0 FROM vt0, t1, rt0, t0 WHERE ((NOT (((((CAST(t0.c1 AS REAL))OR(rt0.c2 COLLATE RTRIM)))AND(CAST(t1.c59 AS INTEGER)))))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, t0.c0, t1.c59, t0.c1, t0.c2, vt0.c0 FROM vt0, t1, rt0, t0 WHERE (((((((CAST(t0.c1 AS REAL))OR(rt0.c2 COLLATE RTRIM)))AND(CAST(t1.c59 AS INTEGER)))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, t0.c0, t1.c59, t0.c1, t0.c2, vt0.c0 FROM vt0, t1, rt0, t0;
SELECT t0.c0, t1.c59, t0.c2 FROM vt0, rt0, t1, t0 GROUP BY t0.c0, t1.c59, t0.c2;
SELECT ALL t0.c0, t1.c59, t0.c2 FROM vt0, rt0, t1, t0 WHERE (((((((vt0.c0)AND(rt0.c2)))AND(t0.c1))) NOT NULL)) GROUP BY t0.c0, t1.c59, t0.c2 UNION SELECT t0.c0, t1.c59, t0.c2 FROM vt0, rt0, t1, t0 WHERE ((NOT (((((((vt0.c0)AND(rt0.c2)))AND(t0.c1))) NOT NULL)))) GROUP BY t0.c0, t1.c59, t0.c2 UNION SELECT t0.c0, t1.c59, t0.c2 FROM vt0, rt0, t1, t0 WHERE (((((((((vt0.c0)AND(rt0.c2)))AND(t0.c1))) NOT NULL)) ISNULL)) GROUP BY t0.c0, t1.c59, t0.c2;
SELECT t0.c0, t1.c59, t0.c2 FROM vt0, rt0, t1, t0 GROUP BY t0.c0, t1.c59, t0.c2;
SELECT t0.c0, rt0.c0, vt0.c0 FROM t0, vt0, t1, rt0 GROUP BY t0.c0, rt0.c0, vt0.c0;
SELECT ALL t0.c0, rt0.c0, vt0.c0 FROM t0, vt0, t1, rt0 GROUP BY t0.c0, rt0.c0, vt0.c0 HAVING SUM((((MIN(t0.c2)))!=((rt0.c2)))) UNION ALL SELECT ALL t0.c0, rt0.c0, vt0.c0 FROM t0, vt0, t1, rt0 GROUP BY t0.c0, rt0.c0, vt0.c0 HAVING (NOT (SUM((((MIN(t0.c2)))<>((rt0.c2)))))) UNION ALL SELECT ALL t0.c0, rt0.c0, vt0.c0 FROM t0, vt0, t1, rt0 GROUP BY t0.c0, rt0.c0, vt0.c0 HAVING ((SUM((((MIN(t0.c2)))!=((rt0.c2))))) ISNULL);
SELECT ALL * FROM rt0, t1, t0, vt0;
SELECT ALL * FROM rt0, t1, t0, vt0 WHERE ((NOT (((0.45944295264272683)GLOB(t0.c1))))) UNION ALL SELECT ALL * FROM rt0, t1, t0 NOT INDEXED, vt0 WHERE ((NOT ((NOT (((0.45944295264272683)GLOB(t0.c1))))))) UNION ALL SELECT * FROM rt0, t1, t0, vt0 WHERE ((((NOT (((0.45944295264272683)GLOB(t0.c1))))) ISNULL));
SELECT ALL * FROM rt0, t1, t0, vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((CAST(rt0.c2 AS REAL))) AND ((0.7931958309463735)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((rt0.c0)) NOT BETWEEN ((CAST(rt0.c2 AS REAL))) AND ((0.7931958309463735)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c0)) NOT BETWEEN ((CAST(rt0.c2 AS REAL))) AND ((0.7931958309463735)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT t1.c59 FROM t1 GROUP BY t1.c59;
SELECT t1.c59 FROM t1 WHERE ((((((t1.c59))<>((t1.c59))))IS(((((t1.c59)AND(t1.c59)))AND(t1.c59))))) GROUP BY t1.c59 UNION SELECT t1.c59 FROM t1 WHERE ((NOT ((((((t1.c59))<>((t1.c59))))IS(((((t1.c59)AND(t1.c59)))AND(t1.c59))))))) GROUP BY t1.c59 UNION SELECT t1.c59 FROM t1 WHERE ((((((((t1.c59))<>((t1.c59))))IS(((((t1.c59)AND(t1.c59)))AND(t1.c59))))) ISNULL)) GROUP BY t1.c59;
SELECT t1.c59 FROM t1 GROUP BY t1.c59;
SELECT ALL t0.c0, vt0.c0, t0.c1, t1.c59, rt0.c0, rt0.c1, t0.c2 FROM t0 FULL OUTER JOIN t1 ON (((rt0.c2 COLLATE RTRIM))<=(((((t0.c1))<((t0.c0)))))) FULL OUTER JOIN rt0 ON (((x'', (- (rt0.c1)), ((t0.c1) IS FALSE)))<(((NOT (t1.c59)), CAST(rt0.c2 AS INTEGER), ((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c2))))) CROSS JOIN vt0 ON (((CAST(vt0.c0 AS REAL)))<>(((t0.c2 IN ())))) GROUP BY t0.c0, vt0.c0, t0.c1, t1.c59, rt0.c0, rt0.c1, t0.c2;
SELECT t0.c0, t0.c2 FROM t1, rt0 FULL OUTER JOIN t0 ON CAST(((t0.c1)=(t1.c59)) AS NUMERIC);
SELECT ALL t0.c0, t0.c2 FROM t1, rt0 FULL OUTER JOIN t0 ON CAST(((t0.c1)==(t1.c59)) AS NUMERIC) WHERE ((~ (t0.c1)) COLLATE BINARY) UNION ALL SELECT t0.c0, t0.c2 FROM t1, rt0 FULL OUTER JOIN t0 ON CAST(((t0.c1)=(t1.c59)) AS NUMERIC) WHERE ((NOT ((~ (t0.c1)) COLLATE BINARY))) UNION ALL SELECT ALL t0.c0, t0.c2 FROM t1, rt0 FULL OUTER JOIN t0 ON CAST(((t0.c1)==(t1.c59)) AS NUMERIC) WHERE ((((~ (t0.c1)) COLLATE BINARY) ISNULL));
SELECT t0.c0, t0.c2 FROM t1, rt0 FULL OUTER JOIN t0 ON CAST(((t0.c1)=(t1.c59)) AS NUMERIC);
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE BINARY) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE BINARY))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE BINARY) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT ALL t1.c59, t0.c0, t0.c2, t0.c1 FROM t0 CROSS JOIN t1 ON ((CAST(t0.c2 AS BLOB))-(((((t1.c59)AND(t0.c2)))AND(t0.c0)))) GROUP BY t1.c59, t0.c0, t0.c2, t0.c1;
SELECT ALL t1.c59, t0.c0, t0.c2, t0.c1 FROM t0 CROSS JOIN t1 ON ((CAST(t0.c2 AS BLOB))-(((((t1.c59)AND(t0.c2)))AND(t0.c0)))) WHERE (CAST(((t0.c1)%(t1.c59)) AS BLOB)) GROUP BY t1.c59, t0.c0, t0.c2, t0.c1 UNION SELECT ALL t1.c59, t0.c0, t0.c2, t0.c1 FROM t0 CROSS JOIN t1 ON ((CAST(t0.c2 AS BLOB))-(((((t1.c59)AND(t0.c2)))AND(t0.c0)))) WHERE ((NOT (CAST(((t0.c1)%(t1.c59)) AS BLOB)))) GROUP BY t1.c59, t0.c0, t0.c2, t0.c1 UNION SELECT t1.c59, t0.c0, t0.c2, t0.c1 FROM t0 NOT INDEXED CROSS JOIN t1 ON ((CAST(t0.c2 AS BLOB))-(((((t1.c59)AND(t0.c2)))AND(t0.c0)))) WHERE (((CAST(((t0.c1)%(t1.c59)) AS BLOB)) ISNULL)) GROUP BY t1.c59, t0.c0, t0.c2, t0.c1;
SELECT ALL t1.c59, t0.c0, t0.c2, t0.c1 FROM t0 CROSS JOIN t1 ON ((CAST(t0.c2 AS BLOB))-(((((t1.c59)AND(t0.c2)))AND(t0.c0)))) GROUP BY t1.c59, t0.c0, t0.c2, t0.c1;
SELECT ALL t1.c59 FROM t1 GROUP BY t1.c59;
SELECT ALL t1.c59 FROM t1 GROUP BY t1.c59 HAVING COUNT(*) UNION ALL SELECT t1.c59 FROM t1 GROUP BY t1.c59 HAVING (NOT (COUNT(*))) UNION ALL SELECT t1.c59 FROM t1 GROUP BY t1.c59 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t1.c59 FROM t1 GROUP BY t1.c59;
SELECT ALL t1.c59 FROM t1 GROUP BY t1.c59 HAVING COUNT(*) UNION ALL SELECT t1.c59 FROM t1 GROUP BY t1.c59 HAVING (NOT (COUNT(*))) UNION ALL SELECT t1.c59 FROM t1 GROUP BY t1.c59 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t1.c59 FROM t1 GROUP BY t1.c59;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((~ ((- ('_'))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((~ ((- ('_'))))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((~ ((- ('_'))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM t1 RIGHT OUTER JOIN rt0 ON (('LS)n') IS FALSE) LEFT OUTER JOIN t0 ON CASE rt0.c1  WHEN t0.c1 THEN rt0.c0 END COLLATE BINARY COLLATE RTRIM;
SELECT DISTINCT * FROM t1 RIGHT OUTER JOIN rt0 ON (('LS)n') IS FALSE) LEFT OUTER JOIN t0 ON CASE rt0.c1  WHEN t0.c1 THEN rt0.c0 END COLLATE BINARY COLLATE RTRIM WHERE ((CASE WHEN t0.c0 THEN rt0.c2 WHEN rt0.c1 THEN t1.c59 WHEN rt0.c2 THEN t1.c59 END IN ())) UNION SELECT DISTINCT * FROM t1 RIGHT OUTER JOIN rt0 ON (('LS)n') IS FALSE) LEFT OUTER JOIN t0 ON CASE rt0.c1  WHEN t0.c1 THEN rt0.c0 END COLLATE BINARY COLLATE RTRIM WHERE ((NOT ((CASE WHEN t0.c0 THEN rt0.c2 WHEN rt0.c1 THEN t1.c59 WHEN rt0.c2 THEN t1.c59 END IN ())))) UNION SELECT DISTINCT * FROM t1 RIGHT OUTER JOIN rt0 ON (('LS)n') IS FALSE) LEFT OUTER JOIN t0 ON CASE rt0.c1  WHEN t0.c1 THEN rt0.c0 END COLLATE BINARY COLLATE RTRIM WHERE ((((CASE WHEN t0.c0 THEN rt0.c2 WHEN rt0.c1 THEN t1.c59 WHEN rt0.c2 THEN t1.c59 END IN ())) ISNULL));
SELECT DISTINCT * FROM t1 RIGHT OUTER JOIN rt0 ON (('LS)n') IS FALSE) LEFT OUTER JOIN t0 ON CASE rt0.c1  WHEN t0.c1 THEN rt0.c0 END COLLATE BINARY COLLATE RTRIM;
SELECT rt0.c2, t1.c59 FROM t1, rt0 GROUP BY rt0.c2, t1.c59;
SELECT rt0.c2, t1.c59 FROM t1, rt0 WHERE (t1.c59) GROUP BY rt0.c2, t1.c59 UNION SELECT rt0.c2, t1.c59 FROM t1, rt0 WHERE ((NOT (t1.c59))) GROUP BY rt0.c2, t1.c59 UNION SELECT ALL rt0.c2, t1.c59 FROM t1, rt0 WHERE (((t1.c59) ISNULL)) GROUP BY rt0.c2, t1.c59;
SELECT rt0.c2, t1.c59 FROM t1, rt0 GROUP BY rt0.c2, t1.c59;
SELECT vt0.c0, t0.c1 FROM t0, rt0, vt0 GROUP BY vt0.c0, t0.c1;
SELECT vt0.c0, t0.c1 FROM t0, rt0, vt0 GROUP BY vt0.c0, t0.c1 HAVING MIN(SUM(rt0.c0)) UNION ALL SELECT ALL vt0.c0, t0.c1 FROM t0, rt0, vt0 GROUP BY vt0.c0, t0.c1 HAVING (NOT (MIN(SUM(rt0.c0)))) UNION ALL SELECT ALL vt0.c0, t0.c1 FROM t0, rt0, vt0 GROUP BY vt0.c0, t0.c1 HAVING ((MIN(SUM(rt0.c0))) ISNULL);
SELECT MAX((NULL IN (INSTR(t0.c2, '1398842815')))) FROM rt0, t0, vt0 ORDER BY rt0.c0, ((((CASE vt0.c0  WHEN rt0.c0 THEN t0.c2 ELSE rt0.c0 END)OR(((NULL) NOT BETWEEN (t0.c1) AND (vt0.c0)))))AND(((((t0.c2)AND(rt0.c0)))AND(rt0.c1))))  NULLS FIRST;
SELECT * FROM t0 NATURAL JOIN rt0;
SELECT ALL * FROM t0 NATURAL JOIN rt0 WHERE (((((t0.c2) BETWEEN (t0.c2) AND (t0.c2))) IS FALSE)) UNION ALL SELECT ALL * FROM t0 NATURAL JOIN rt0 WHERE ((NOT (((((t0.c2) BETWEEN (t0.c2) AND (t0.c2))) IS FALSE)))) UNION ALL SELECT * FROM t0 NATURAL JOIN rt0 WHERE (((((((t0.c2) BETWEEN (t0.c2) AND (t0.c2))) IS FALSE)) ISNULL));
SELECT * FROM t0 NATURAL JOIN rt0;
SELECT DISTINCT * FROM t0, rt0, t1;
SELECT DISTINCT * FROM t0, rt0, t1 WHERE (NULL) UNION SELECT DISTINCT * FROM t0, rt0, t1 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM t0, rt0, t1 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM t0, rt0, t1;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((x'595e')<<(rt0.c0)))&(((rt0.c2)&(rt0.c1))))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((((x'595e')<<(rt0.c0)))&(((rt0.c2)&(rt0.c1))))))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((((x'595e')<<(rt0.c0)))&(((rt0.c2)&(rt0.c1))))) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING SUM(AVG(MIN(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (SUM(AVG(MIN(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM(AVG(MIN(vt0.c0)))) ISNULL);
SELECT ALL t0.c2, rt0.c2 FROM vt0, rt0, t1, t0;
SELECT ALL t0.c2, rt0.c2 FROM vt0, rt0, t1, t0 WHERE (CASE CAST(t0.c2 AS INTEGER)  WHEN ((rt0.c0) IS TRUE) THEN NULLIF(t1.c59, rt0.c0) ELSE t1.c59 COLLATE NOCASE END) UNION ALL SELECT ALL t0.c2, rt0.c2 FROM vt0, rt0, t1, t0 WHERE ((NOT (CASE CAST(t0.c2 AS INTEGER)  WHEN ((rt0.c0) IS TRUE) THEN NULLIF(t1.c59, rt0.c0) ELSE t1.c59 COLLATE NOCASE END))) UNION ALL SELECT ALL t0.c2, rt0.c2 FROM vt0, rt0, t1, t0 WHERE (((CASE CAST(t0.c2 AS INTEGER)  WHEN ((rt0.c0) IS TRUE) THEN NULLIF(t1.c59, rt0.c0) ELSE t1.c59 COLLATE NOCASE END) ISNULL));
SELECT ALL t0.c2, rt0.c2 FROM vt0, rt0, t1, t0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((~ ((((0.0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((~ ((((0.0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((~ ((((0.0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM t1 CROSS JOIN t0 ON ((((((((TOTAL_CHANGES())AND(((x'')>(t1.c59)))))AND(t0.c1)))OR((- (vt0.c0)))))AND((((vt0.c0, t1.c59, t0.c2, t1.c59, t0.c0)) BETWEEN ((t0.c2, t0.c1, t0.c2, t1.c59, t1.c59)) AND ((t1.c59, x'7a1c', t0.c0, vt0.c0, t1.c59))))) RIGHT OUTER JOIN vt0 ON (((- (t1.c59))) NOTNULL) GROUP BY vt0.c0;
SELECT ALL vt0.c0, t1.c59 FROM vt0, t1, rt0 GROUP BY vt0.c0, t1.c59;
SELECT ALL vt0.c0, t1.c59 FROM vt0, t1, rt0 GROUP BY vt0.c0, t1.c59 HAVING ((AVG(SUM(AVG(MAX('%K.b~'))))) NOT BETWEEN (COUNT(GROUP_CONCAT(rt0.c0))) AND (MAX(rt0.c2))) UNION ALL SELECT ALL vt0.c0, t1.c59 FROM vt0, t1, rt0 GROUP BY vt0.c0, t1.c59 HAVING (NOT (((AVG(SUM(AVG(MAX('%K.b~'))))) NOT BETWEEN (COUNT(GROUP_CONCAT(rt0.c0))) AND (MAX(rt0.c2))))) UNION ALL SELECT vt0.c0, t1.c59 FROM vt0, t1, rt0 GROUP BY vt0.c0, t1.c59 HAVING ((((AVG(SUM(AVG(MAX('%K.b~'))))) NOT BETWEEN (COUNT(GROUP_CONCAT(rt0.c0))) AND (MAX(rt0.c2)))) ISNULL);
SELECT ALL * FROM t0, vt0;
SELECT * FROM t0, vt0 WHERE (CAST(((((t0.c1)AND(t0.c2)))AND(t0.c1)) AS REAL)) UNION ALL SELECT ALL * FROM t0, vt0 WHERE ((NOT (CAST(((((t0.c1)AND(t0.c2)))AND(t0.c1)) AS REAL)))) UNION ALL SELECT ALL * FROM t0, vt0 WHERE (((CAST(((((t0.c1)AND(t0.c2)))AND(t0.c1)) AS REAL)) ISNULL));
SELECT ALL * FROM t0, vt0;
SELECT DISTINCT * FROM vt0, t1, t0, rt0;
SELECT DISTINCT * FROM vt0, t1, t0, rt0 WHERE (((0.7654913205181283) NOT BETWEEN (((vt0.c0)GLOB(rt0.c0))) AND (CHANGES()))) UNION SELECT DISTINCT * FROM vt0, t1, t0, rt0 WHERE ((NOT (((0.7654913205181283) NOT BETWEEN (((vt0.c0)GLOB(rt0.c0))) AND (CHANGES()))))) UNION SELECT DISTINCT * FROM vt0, t1, t0, rt0 WHERE (((((0.7654913205181283) NOT BETWEEN (((vt0.c0)GLOB(rt0.c0))) AND (CHANGES()))) ISNULL));
SELECT DISTINCT * FROM vt0, t1, t0, rt0;
SELECT ALL t1.c59 FROM t1 GROUP BY t1.c59;
SELECT ALL t1.c59 FROM t1 WHERE ((NULL IN ())) GROUP BY t1.c59 UNION SELECT ALL t1.c59 FROM t1 WHERE ((NOT ((NULL IN ())))) GROUP BY t1.c59 UNION SELECT ALL t1.c59 FROM t1 WHERE ((((NULL IN ())) ISNULL)) GROUP BY t1.c59;
SELECT ALL t1.c59 FROM t1 GROUP BY t1.c59;
SELECT ALL t1.c59, rt0.c0 FROM rt0, t1 GROUP BY t1.c59, rt0.c0;
SELECT t1.c59, rt0.c0 FROM rt0, t1 GROUP BY t1.c59, rt0.c0 HAVING CASE ((TOTAL(SUM(rt0.c1)))!=(rt0.c2))  WHEN CAST(SUM(rt0.c0) AS INTEGER) THEN AVG(MAX(rt0.c0)) END UNION ALL SELECT t1.c59, rt0.c0 FROM rt0, t1 GROUP BY t1.c59, rt0.c0 HAVING (NOT (CASE ((TOTAL(SUM(rt0.c1)))!=(rt0.c2))  WHEN CAST(SUM(rt0.c0) AS INTEGER) THEN AVG(MAX(rt0.c0)) END)) UNION ALL SELECT ALL t1.c59, rt0.c0 FROM rt0, t1 GROUP BY t1.c59, rt0.c0 HAVING ((CASE ((TOTAL(SUM(rt0.c1)))<>(rt0.c2))  WHEN CAST(SUM(rt0.c0) AS INTEGER) THEN AVG(MAX(rt0.c0)) END) ISNULL);
SELECT ALL t0.c0, rt0.c0, rt0.c2 FROM t1 RIGHT OUTER JOIN t0 ON ((((t0.c2)/(t1.c59)))||(((t0.c0) BETWEEN (rt0.c1) AND (NULL)))) FULL OUTER JOIN rt0 ON t0.c1 INNER JOIN vt0 ON CAST(CAST(rt0.c1 AS INTEGER) AS INTEGER);
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE (CAST(((rt0.c2)OR(rt0.c1)) AS NUMERIC)) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT (CAST(((rt0.c2)OR(rt0.c1)) AS NUMERIC)))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((CAST(((rt0.c2)OR(rt0.c1)) AS NUMERIC)) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT ALL rt0.c2, rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0, vt0.c0;
SELECT rt0.c2, rt0.c0, vt0.c0 FROM vt0, rt0 WHERE (((((((vt0.c0)AND(rt0.c1)))AND(rt0.c0))) BETWEEN (((rt0.c2)GLOB(x''))) AND (rt0.c2 COLLATE NOCASE))) GROUP BY rt0.c2, rt0.c0, vt0.c0 UNION SELECT ALL rt0.c2, rt0.c0, vt0.c0 FROM vt0, rt0 WHERE ((NOT (((((((vt0.c0)AND(rt0.c1)))AND(rt0.c0))) BETWEEN (((rt0.c2)GLOB(x''))) AND (rt0.c2 COLLATE NOCASE))))) GROUP BY rt0.c2, rt0.c0, vt0.c0 UNION SELECT rt0.c2, rt0.c0, vt0.c0 FROM vt0, rt0 WHERE (((((((((vt0.c0)AND(rt0.c1)))AND(rt0.c0))) BETWEEN (((rt0.c2)GLOB(x''))) AND (rt0.c2 COLLATE NOCASE))) ISNULL)) GROUP BY rt0.c2, rt0.c0, vt0.c0;
SELECT ALL rt0.c2, rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0, vt0.c0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING MAX(((TOTAL(rt0.c2))GLOB(COUNT(rt0.c2)))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (MAX(((TOTAL(rt0.c2))GLOB(COUNT(rt0.c2)))))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((MAX(((TOTAL(rt0.c2))GLOB(COUNT(rt0.c2))))) ISNULL);
SELECT ALL * FROM t0, t1, rt0, vt0;
SELECT ALL * FROM t0, t1, rt0, vt0 WHERE (CASE (((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((t0.c2)))  WHEN CASE WHEN t1.c59 THEN rt0.c2 ELSE rt0.c2 END THEN ((rt0.c2) BETWEEN (t1.c59) AND (rt0.c1)) END) UNION ALL SELECT * FROM t0, t1, rt0, vt0 WHERE ((NOT (CASE (((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((t0.c2)))  WHEN CASE WHEN t1.c59 THEN rt0.c2 ELSE rt0.c2 END THEN ((rt0.c2) BETWEEN (t1.c59) AND (rt0.c1)) END))) UNION ALL SELECT ALL * FROM t0, t1, rt0, vt0 WHERE (((CASE (((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((t0.c2)))  WHEN CASE WHEN t1.c59 THEN rt0.c2 ELSE rt0.c2 END THEN ((rt0.c2) BETWEEN (t1.c59) AND (rt0.c1)) END) ISNULL));
SELECT ALL * FROM t0, t1, rt0, vt0;
SELECT DISTINCT t1.c59, rt0.c2, t0.c2, vt0.c0, t0.c1 FROM rt0, t1, vt0, t0;
SELECT DISTINCT t1.c59, rt0.c2, t0.c2, vt0.c0, t0.c1 FROM rt0, t1, vt0, t0 WHERE ((((((- (t1.c59)))AND((((t0.c0))>((t0.c2))))))AND((+ (vt0.c0))))) UNION SELECT DISTINCT t1.c59, rt0.c2, t0.c2, vt0.c0, t0.c1 FROM rt0, t1, vt0, t0 WHERE ((NOT ((((((- (t1.c59)))AND((((t0.c0))>((t0.c2))))))AND((+ (vt0.c0))))))) UNION SELECT DISTINCT t1.c59, rt0.c2, t0.c2, vt0.c0, t0.c1 FROM rt0, t1, vt0, t0 WHERE ((((((((- (t1.c59)))AND((((t0.c0))>((t0.c2))))))AND((+ (vt0.c0))))) ISNULL));
SELECT DISTINCT t1.c59, rt0.c2, t0.c2, vt0.c0, t0.c1 FROM rt0, t1, vt0, t0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 INDEXED BY i11 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c2, t1.c59, t0.c2, rt0.c0, t0.c1, vt0.c0, t0.c0, rt0.c1 FROM t1, rt0, t0, vt0 GROUP BY rt0.c2, t1.c59, t0.c2, rt0.c0, t0.c1, vt0.c0, t0.c0, rt0.c1;
SELECT ALL rt0.c2, t1.c59, t0.c2, rt0.c0, t0.c1, vt0.c0, t0.c0, rt0.c1 FROM t1, rt0, t0, vt0 GROUP BY rt0.c2, t1.c59, t0.c2, rt0.c0, t0.c1, vt0.c0, t0.c0, rt0.c1 HAVING TOTAL(COUNT(*)) UNION ALL SELECT rt0.c2, t1.c59, t0.c2, rt0.c0, t0.c1, vt0.c0, t0.c0, rt0.c1 FROM t1, rt0, t0, vt0 GROUP BY rt0.c2, t1.c59, t0.c2, rt0.c0, t0.c1, vt0.c0, t0.c0, rt0.c1 HAVING (NOT (TOTAL(COUNT(*)))) UNION ALL SELECT rt0.c2, t1.c59, t0.c2, rt0.c0, t0.c1, vt0.c0, t0.c0, rt0.c1 FROM t1, rt0, t0, vt0 GROUP BY rt0.c2, t1.c59, t0.c2, rt0.c0, t0.c1, vt0.c0, t0.c0, rt0.c1 HAVING ((TOTAL(COUNT(*))) ISNULL);
SELECT vt0.c0, t1.c59, t0.c2, rt0.c1, t0.c0, rt0.c2, t0.c1, rt0.c0 FROM rt0 FULL OUTER JOIN t1 ON (NOT (t0.c1)) COLLATE BINARY CROSS JOIN t0 ON (((((t1.c59)) BETWEEN ((t1.c59)) AND ((vt0.c0)))) NOTNULL) LEFT OUTER JOIN vt0 ON (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((SQLITE_COMPILEOPTION_GET(t0.c2))));
SELECT DISTINCT * FROM vt0, t0, rt0;
SELECT DISTINCT * FROM vt0, t0, rt0 WHERE (((((0.04574287896211138)AND(((rt0.c0)>(t0.c2)))))AND(t0.c0 COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt0, t0, rt0 WHERE ((NOT (((((0.04574287896211138)AND(((rt0.c0)>(t0.c2)))))AND(t0.c0 COLLATE RTRIM))))) UNION SELECT DISTINCT * FROM vt0, t0, rt0 WHERE (((((((0.04574287896211138)AND(((rt0.c0)>(t0.c2)))))AND(t0.c0 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT * FROM vt0, t0, rt0;
SELECT rt0.c2 FROM rt0 LEFT OUTER JOIN vt0 ON (((rt0.c1 IN (rt0.c2))) BETWEEN (CAST(rt0.c0 AS INTEGER)) AND ((vt0.c0 IN ()))) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 LEFT OUTER JOIN vt0 ON (((rt0.c1 IN (rt0.c2))) BETWEEN (CAST(rt0.c0 AS INTEGER)) AND ((vt0.c0 IN ()))) WHERE (CAST(((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)) AS REAL)) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 LEFT OUTER JOIN vt0 ON (((rt0.c1 IN (rt0.c2))) BETWEEN (CAST(rt0.c0 AS INTEGER)) AND ((vt0.c0 IN ()))) WHERE ((NOT (CAST(((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)) AS REAL)))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 LEFT OUTER JOIN vt0 ON (((rt0.c1 IN (rt0.c2))) BETWEEN (CAST(rt0.c0 AS INTEGER)) AND ((vt0.c0 IN ()))) WHERE (((CAST(((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)) AS REAL)) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 LEFT OUTER JOIN vt0 ON (((rt0.c1 IN (rt0.c2))) BETWEEN (CAST(rt0.c0 AS INTEGER)) AND ((vt0.c0 IN ()))) GROUP BY rt0.c2;
SELECT ALL rt0.c1 FROM vt0, t0, rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM vt0, t0, rt0 GROUP BY rt0.c1 HAVING AVG(((COUNT(AVG(MAX(vt0.c0)))) IS TRUE)) UNION ALL SELECT rt0.c1 FROM vt0, t0, rt0 GROUP BY rt0.c1 HAVING (NOT (AVG(((COUNT(AVG(MAX(vt0.c0)))) IS TRUE)))) UNION ALL SELECT ALL rt0.c1 FROM vt0, t0, rt0 GROUP BY rt0.c1 HAVING ((AVG(((COUNT(AVG(MAX(vt0.c0)))) IS TRUE))) ISNULL);
SELECT ALL t0.c1, t0.c0 FROM t0;
SELECT t0.c1, t0.c0 FROM t0 WHERE (CAST(NULL AS TEXT)) UNION ALL SELECT ALL t0.c1, t0.c0 FROM t0 WHERE ((NOT (CAST(NULL AS TEXT)))) UNION ALL SELECT ALL t0.c1, t0.c0 FROM t0 WHERE (((CAST(NULL AS TEXT)) ISNULL));
SELECT ALL t0.c1, t0.c0 FROM t0;
SELECT DISTINCT * FROM t1, t0, vt0, rt0;
SELECT DISTINCT * FROM t1, t0, vt0, rt0 WHERE ((+ ('NC&< ]/遛'))) UNION SELECT DISTINCT * FROM t1, t0, vt0, rt0 WHERE ((NOT ((+ ('NC&< ]/遛'))))) UNION SELECT DISTINCT * FROM t1, t0, vt0, rt0 WHERE ((((+ ('NC&< ]/遛'))) ISNULL));
SELECT DISTINCT * FROM t1, t0, vt0, rt0;
SELECT ALL rt0.c0, t0.c1 FROM rt0, t0 GROUP BY rt0.c0, t0.c1;
SELECT ALL rt0.c0, t0.c1 FROM rt0, t0 WHERE ((t0.c2 COLLATE RTRIM IN ())) GROUP BY rt0.c0, t0.c1 UNION SELECT rt0.c0, t0.c1 FROM rt0, t0 WHERE ((NOT ((t0.c2 COLLATE RTRIM IN ())))) GROUP BY rt0.c0, t0.c1 UNION SELECT rt0.c0, t0.c1 FROM rt0, t0 WHERE ((((t0.c2 COLLATE RTRIM IN ())) ISNULL)) GROUP BY rt0.c0, t0.c1;
SELECT ALL rt0.c0, t0.c1 FROM rt0, t0 GROUP BY rt0.c0, t0.c1;
SELECT ALL vt0.c0, rt0.c1 FROM t1 INNER JOIN vt0 ON ((t0.c2)>(((((vt0.c0)AND(rt0.c0)))OR(rt0.c2)))) LEFT OUTER JOIN rt0 ON (((t0.c0)) NOT BETWEEN ((((t1.c59)OR(t0.c1)))) AND ((CAST(rt0.c2 AS NUMERIC)))) FULL OUTER JOIN t0 ON ((((((((((vt0.c0)AND(vt0.c0)))OR(rt0.c1)))OR(t0.c2)))OR(rt0.c2))) BETWEEN (((t0.c1)<=(vt0.c0))) AND ((t1.c59 IN ()))) GROUP BY vt0.c0, rt0.c1;
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE (CAST(((t0.c1)-(t0.c2)) AS INTEGER)) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (CAST(((t0.c1)-(t0.c2)) AS INTEGER)))) UNION ALL SELECT * FROM t0 WHERE (((CAST(((t0.c1)-(t0.c2)) AS INTEGER)) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM rt0, t1, t0, vt0;
SELECT DISTINCT * FROM rt0, t1, t0, vt0 WHERE (CAST((NOT (t0.c2)) AS NUMERIC)) UNION SELECT DISTINCT * FROM rt0, t1, t0, vt0 WHERE ((NOT (CAST((NOT (t0.c2)) AS NUMERIC)))) UNION SELECT DISTINCT * FROM rt0, t1, t0, vt0 WHERE (((CAST((NOT (t0.c2)) AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM rt0, t1, t0, vt0;
SELECT rt0.c2, rt0.c0, t1.c59, vt0.c0 FROM vt0 INDEXED BY i82 CROSS JOIN t1 ON (vt0.c0 COLLATE RTRIM IN ((('2001268862') NOT NULL))) INNER JOIN rt0 ON '900553091' GROUP BY rt0.c2, rt0.c0, t1.c59, vt0.c0;
SELECT ALL t0.c1, rt0.c1, rt0.c0, vt0.c0, t1.c59, rt0.c2 FROM t1, rt0, t0 LEFT OUTER JOIN vt0 ON (((+ (t0.c0)))-(((t0.c2) NOT BETWEEN (t0.c1) AND (rt0.c0)))) GROUP BY t0.c1, rt0.c1, rt0.c0, vt0.c0, t1.c59, rt0.c2;
SELECT ALL t0.c1, rt0.c1, rt0.c0, vt0.c0, t1.c59, rt0.c2 FROM t1, rt0, t0 LEFT OUTER JOIN vt0 ON (((+ (t0.c0)))-(((t0.c2) NOT BETWEEN (t0.c1) AND (rt0.c0)))) GROUP BY t0.c1, rt0.c1, rt0.c0, vt0.c0, t1.c59, rt0.c2 HAVING ((AVG(COUNT(SUM(t0.c0))))>=(CAST(MAX(MIN(vt0.c0)) AS INTEGER))) UNION ALL SELECT t0.c1, rt0.c1, rt0.c0, vt0.c0, t1.c59, rt0.c2 FROM t1, rt0, t0 LEFT OUTER JOIN vt0 ON (((+ (t0.c0)))-(((t0.c2) NOT BETWEEN (t0.c1) AND (rt0.c0)))) GROUP BY t0.c1, rt0.c1, rt0.c0, vt0.c0, t1.c59, rt0.c2 HAVING (NOT (((AVG(COUNT(SUM(t0.c0))))>=(CAST(MAX(MIN(vt0.c0)) AS INTEGER))))) UNION ALL SELECT t0.c1, rt0.c1, rt0.c0, vt0.c0, t1.c59, rt0.c2 FROM t1, rt0, t0 LEFT OUTER JOIN vt0 ON (((+ (t0.c0)))-(((t0.c2) NOT BETWEEN (t0.c1) AND (rt0.c0)))) GROUP BY t0.c1, rt0.c1, rt0.c0, vt0.c0, t1.c59, rt0.c2 HAVING ((((AVG(COUNT(SUM(t0.c0))))>=(CAST(MAX(MIN(vt0.c0)) AS INTEGER)))) ISNULL);
SELECT rt0.c2, t0.c2, rt0.c0, rt0.c1, t0.c0, t1.c59, t0.c1 FROM t0, rt0, t1;
SELECT rt0.c2, t0.c2, rt0.c0, rt0.c1, t0.c0, t1.c59, t0.c1 FROM t0, rt0, t1 WHERE (CAST(t1.c59 COLLATE BINARY AS INTEGER)) UNION ALL SELECT rt0.c2, t0.c2, rt0.c0, rt0.c1, t0.c0, t1.c59, t0.c1 FROM t0, rt0, t1 WHERE ((NOT (CAST(t1.c59 COLLATE BINARY AS INTEGER)))) UNION ALL SELECT ALL rt0.c2, t0.c2, rt0.c0, rt0.c1, t0.c0, t1.c59, t0.c1 FROM t0, rt0, t1 WHERE (((CAST(t1.c59 COLLATE BINARY AS INTEGER)) ISNULL));
SELECT rt0.c2, t0.c2, rt0.c0, rt0.c1, t0.c0, t1.c59, t0.c1 FROM t0, rt0, t1;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((+ (((t0.c0)|(t0.c1))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((+ (((t0.c0)|(t0.c1))))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((+ (((t0.c0)|(t0.c1))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT rt0.c0, rt0.c1, t0.c0, rt0.c2, t0.c2, t0.c1 FROM t0, rt0 GROUP BY rt0.c0, rt0.c1, t0.c0, rt0.c2, t0.c2, t0.c1;
SELECT rt0.c0, rt0.c1, t0.c0, rt0.c2, t0.c2, t0.c1 FROM t0, rt0 WHERE (0X46adfbec) GROUP BY rt0.c0, rt0.c1, t0.c0, rt0.c2, t0.c2, t0.c1 UNION SELECT ALL rt0.c0, rt0.c1, t0.c0, rt0.c2, t0.c2, t0.c1 FROM t0, rt0 WHERE ((NOT (0X46adfbec))) GROUP BY rt0.c0, rt0.c1, t0.c0, rt0.c2, t0.c2, t0.c1 UNION SELECT rt0.c0, rt0.c1, t0.c0, rt0.c2, t0.c2, t0.c1 FROM t0, rt0 WHERE (((0X46adfbec) ISNULL)) GROUP BY rt0.c0, rt0.c1, t0.c0, rt0.c2, t0.c2, t0.c1;
SELECT rt0.c0, rt0.c1, t0.c0, rt0.c2, t0.c2, t0.c1 FROM t0, rt0 GROUP BY rt0.c0, rt0.c1, t0.c0, rt0.c2, t0.c2, t0.c1;
SELECT ALL t0.c0, rt0.c0 FROM t0, rt0 GROUP BY t0.c0, rt0.c0;
SELECT t0.c0, rt0.c0 FROM t0, rt0 GROUP BY t0.c0, rt0.c0 HAVING GROUP_CONCAT(CASE MAX(rt0.c1)  WHEN GROUP_CONCAT(rt0.c1) THEN SUM(rt0.c0) ELSE TOTAL(rt0.c2) END) UNION ALL SELECT t0.c0, rt0.c0 FROM t0, rt0 GROUP BY t0.c0, rt0.c0 HAVING (NOT (GROUP_CONCAT(CASE MAX(rt0.c1)  WHEN GROUP_CONCAT(rt0.c1) THEN SUM(rt0.c0) ELSE TOTAL(rt0.c2) END))) UNION ALL SELECT ALL t0.c0, rt0.c0 FROM t0, rt0 GROUP BY t0.c0, rt0.c0 HAVING ((GROUP_CONCAT(CASE MAX(rt0.c1)  WHEN GROUP_CONCAT(rt0.c1) THEN SUM(rt0.c0) ELSE TOTAL(rt0.c2) END)) ISNULL);
SELECT ALL * FROM vt0, rt0 INNER JOIN t1 ON (- (((rt0.c1) NOTNULL)));
SELECT * FROM vt0, rt0 INNER JOIN t1 ON (- (((rt0.c1) NOTNULL))) WHERE ((((NULL, t1.c59, t1.c59)) NOT BETWEEN ((53287951, ((rt0.c0) ISNULL), (NOT (rt0.c2)))) AND ((((t1.c59)*(t1.c59)), ((vt0.c0)<<(rt0.c1)), (((vt0.c0))=((NULL))))))) UNION ALL SELECT ALL * FROM vt0, rt0 INNER JOIN t1 ON (- (((rt0.c1) NOTNULL))) WHERE ((NOT ((((NULL, t1.c59, t1.c59)) NOT BETWEEN ((53287951, ((rt0.c0) ISNULL), (NOT (rt0.c2)))) AND ((((t1.c59)*(t1.c59)), ((vt0.c0)<<(rt0.c1)), (((vt0.c0))==((NULL))))))))) UNION ALL SELECT ALL * FROM vt0, rt0 INNER JOIN t1 ON (- (((rt0.c1) NOTNULL))) WHERE ((((((NULL, t1.c59, t1.c59)) NOT BETWEEN ((53287951, ((rt0.c0) ISNULL), (NOT (rt0.c2)))) AND ((((t1.c59)*(t1.c59)), ((vt0.c0)<<(rt0.c1)), (((vt0.c0))==((NULL))))))) ISNULL));
SELECT ALL * FROM vt0, rt0 INNER JOIN t1 ON (- (((rt0.c1) NOTNULL)));
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c2)LIKE(ABS(rt0.c0)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c2)LIKE(ABS(rt0.c0)))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c2)LIKE(ABS(rt0.c0)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2 FROM rt0, t1 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0, t1 WHERE (((((((0.8755938300663512) NOT BETWEEN (rt0.c2) AND (rt0.c0)))OR(((rt0.c1)>(rt0.c2)))))OR(x'9844a095'))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0, t1 WHERE ((NOT (((((((0.8755938300663512) NOT BETWEEN (rt0.c2) AND (rt0.c0)))OR(((rt0.c1)>(rt0.c2)))))OR(x'9844a095'))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0, t1 WHERE (((((((((0.8755938300663512) NOT BETWEEN (rt0.c2) AND (rt0.c0)))OR(((rt0.c1)>(rt0.c2)))))OR(x'9844a095'))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0, t1 GROUP BY rt0.c2;
SELECT ALL t0.c0, t1.c59, t0.c1 FROM t1, t0 GROUP BY t0.c0, t1.c59, t0.c1;
SELECT ALL t0.c0, t1.c59, t0.c1 FROM t1, t0 GROUP BY t0.c0, t1.c59, t0.c1 HAVING MIN(CASE WHEN COUNT(*) THEN t0.c2 WHEN COUNT(GROUP_CONCAT(COUNT(*))) THEN MIN(AVG(COUNT(*))) WHEN t0.c0 THEN MIN(t1.c59) END) UNION ALL SELECT t0.c0, t1.c59, t0.c1 FROM t1, t0 GROUP BY t0.c0, t1.c59, t0.c1 HAVING (NOT (MIN(CASE WHEN COUNT(*) THEN t0.c2 WHEN COUNT(GROUP_CONCAT(COUNT(*))) THEN MIN(AVG(COUNT(*))) WHEN t0.c0 THEN MIN(t1.c59) END))) UNION ALL SELECT t0.c0, t1.c59, t0.c1 FROM t1, t0 GROUP BY t0.c0, t1.c59, t0.c1 HAVING ((MIN(CASE WHEN COUNT(*) THEN t0.c2 WHEN COUNT(GROUP_CONCAT(COUNT(*))) THEN MIN(AVG(COUNT(*))) WHEN t0.c0 THEN MIN(t1.c59) END)) ISNULL);
SELECT ALL t0.c1, t0.c0, rt0.c1, rt0.c0, rt0.c2, t1.c59 FROM vt0 FULL OUTER JOIN rt0 ON CASE WHEN ((t0.c1)GLOB(rt0.c2)) THEN CASE NULL  WHEN t0.c0 THEN rt0.c1 WHEN vt0.c0 THEN t1.c59 WHEN t0.c0 THEN t1.c59 ELSE rt0.c2 END END FULL OUTER JOIN t1 ON (((rt0.c2 COLLATE BINARY))==((CASE WHEN t0.c2 THEN rt0.c1 ELSE NULL END))) INNER JOIN t0 ON rt0.c1;
SELECT DISTINCT * FROM vt0, t0, rt0, t1;
SELECT DISTINCT * FROM vt0, t0, rt0, t1 WHERE (CASE WHEN (+ (rt0.c0)) THEN CASE WHEN t0.c2 THEN '_c#_6Sot' END END) UNION SELECT DISTINCT * FROM vt0, t0, rt0, t1 WHERE ((NOT (CASE WHEN (+ (rt0.c0)) THEN CASE WHEN t0.c2 THEN '_c#_6Sot' END END))) UNION SELECT DISTINCT * FROM vt0, t0, rt0, t1 WHERE (((CASE WHEN (+ (rt0.c0)) THEN CASE WHEN t0.c2 THEN '_c#_6Sot' END END) ISNULL));
SELECT DISTINCT * FROM vt0, t0, rt0, t1;
SELECT ALL t0.c1, t0.c0, t0.c2, t1.c59 FROM t0, t1 GROUP BY t0.c1, t0.c0, t0.c2, t1.c59;
SELECT t0.c1, t0.c0, t0.c2, t1.c59 FROM t0, t1 WHERE ((((t0.c1)) NOT BETWEEN (((NOT (t0.c1)))) AND (('y8R6,改')))) GROUP BY t0.c1, t0.c0, t0.c2, t1.c59 UNION SELECT t0.c1, t0.c0, t0.c2, t1.c59 FROM t0, t1 WHERE ((NOT ((((t0.c1)) NOT BETWEEN (((NOT (t0.c1)))) AND (('y8R6,改')))))) GROUP BY t0.c1, t0.c0, t0.c2, t1.c59 UNION SELECT ALL t0.c1, t0.c0, t0.c2, t1.c59 FROM t0, t1 WHERE ((((((t0.c1)) NOT BETWEEN (((NOT (t0.c1)))) AND (('y8R6,改')))) ISNULL)) GROUP BY t0.c1, t0.c0, t0.c2, t1.c59;
SELECT ALL t0.c1, t0.c0, t0.c2, t1.c59 FROM t0, t1 GROUP BY t0.c1, t0.c0, t0.c2, t1.c59;
SELECT ALL rt0.c1, t0.c0, t0.c1, vt0.c0, t0.c2, rt0.c0 FROM t1 RIGHT OUTER JOIN vt0 ON (- (NULL)) CROSS JOIN rt0 ON ((((t0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))/(CAST(rt0.c1 AS INTEGER))) RIGHT OUTER JOIN t0 ON (- (rt0.c1)) GROUP BY rt0.c1, t0.c0, t0.c1, vt0.c0, t0.c2, rt0.c0;
SELECT ALL SUM(((((((((t0.c2)AND((+ ('')))))AND(CAST(vt0.c0 AS INTEGER))))OR(t0.c1)))OR(((((((((vt0.c0)AND(vt0.c0)))OR(t0.c1)))OR(vt0.c0)))OR(t0.c0))))) FROM vt0, t0 ORDER BY ((x'01f2')<>((~ (t0.c1)))) DESC  NULLS LAST, ((CASE t0.c2  WHEN t0.c0 THEN t0.c2 END) NOT NULL)  NULLS LAST, ((CAST(t0.c1 AS TEXT))IS(CAST(t0.c1 AS BLOB)));
SELECT ALL t0.c2 FROM t0 RIGHT OUTER JOIN vt0 ON '0.4187176778237386';
SELECT t0.c2 FROM t0 RIGHT OUTER JOIN vt0 ON '0.4187176778237386' WHERE ((((((t0.c2))>=((t0.c1))))+(t0.c2 COLLATE RTRIM))) UNION ALL SELECT t0.c2 FROM t0 RIGHT OUTER JOIN vt0 ON '0.4187176778237386' WHERE ((NOT ((((((t0.c2))>=((t0.c1))))+(t0.c2 COLLATE RTRIM))))) UNION ALL SELECT ALL t0.c2 FROM t0 RIGHT OUTER JOIN vt0 ON '0.4187176778237386' WHERE ((((((((t0.c2))>=((t0.c1))))+(t0.c2 COLLATE RTRIM))) ISNULL));
SELECT ALL t0.c2 FROM t0 RIGHT OUTER JOIN vt0 ON '0.4187176778237386';
SELECT DISTINCT * FROM t1, t0, vt0 INNER JOIN rt0 ON (~ (((((t1.c59)AND(t0.c0)))AND(t0.c1))));
SELECT DISTINCT * FROM t1, t0, vt0 INNER JOIN rt0 ON (~ (((((t1.c59)AND(t0.c0)))AND(t0.c1)))) WHERE ((((rt0.c1)) BETWEEN ((CASE rt0.c2  WHEN rt0.c0 THEN t1.c59 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN t1.c59 WHEN t1.c59 THEN t0.c1 WHEN x'c9c3' THEN 0.4425090293899516 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE 0.029708620960907872 END)) AND ((t1.c59)))) UNION SELECT DISTINCT * FROM t1, t0, vt0 INNER JOIN rt0 ON (~ (((((t1.c59)AND(t0.c0)))AND(t0.c1)))) WHERE ((NOT ((((rt0.c1)) BETWEEN ((CASE rt0.c2  WHEN rt0.c0 THEN t1.c59 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN t1.c59 WHEN t1.c59 THEN t0.c1 WHEN x'c9c3' THEN 0.4425090293899516 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE 0.029708620960907872 END)) AND ((t1.c59)))))) UNION SELECT DISTINCT * FROM t1 NOT INDEXED, t0, vt0 INNER JOIN rt0 ON (~ (((((t1.c59)AND(t0.c0)))AND(t0.c1)))) WHERE ((((((rt0.c1)) BETWEEN ((CASE rt0.c2  WHEN rt0.c0 THEN t1.c59 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN t1.c59 WHEN t1.c59 THEN t0.c1 WHEN x'c9c3' THEN 0.4425090293899516 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE 0.029708620960907872 END)) AND ((t1.c59)))) ISNULL));
SELECT DISTINCT * FROM t1, t0, vt0 INNER JOIN rt0 ON (~ (((((t1.c59)AND(t0.c0)))AND(t0.c1))));
SELECT t1.c59, vt0.c0 FROM vt0, t1 GROUP BY t1.c59, vt0.c0;
SELECT t1.c59, vt0.c0 FROM vt0, t1 WHERE (((((vt0.c0)%(vt0.c0)))GLOB(CAST(t1.c59 AS REAL)))) GROUP BY t1.c59, vt0.c0 UNION SELECT ALL t1.c59, vt0.c0 FROM vt0, t1 WHERE ((NOT (((((vt0.c0)%(vt0.c0)))GLOB(CAST(t1.c59 AS REAL)))))) GROUP BY t1.c59, vt0.c0 UNION SELECT ALL t1.c59, vt0.c0 FROM vt0, t1 WHERE (((((((vt0.c0)%(vt0.c0)))GLOB(CAST(t1.c59 AS REAL)))) ISNULL)) GROUP BY t1.c59, vt0.c0;
SELECT t1.c59, vt0.c0 FROM vt0, t1 GROUP BY t1.c59, vt0.c0;
SELECT rt0.c0, vt0.c0, rt0.c1, rt0.c2, t1.c59, t0.c1, t0.c0, t0.c2 FROM t0, rt0, vt0 NATURAL JOIN t1 GROUP BY rt0.c0, vt0.c0, rt0.c1, rt0.c2, t1.c59, t0.c1, t0.c0, t0.c2;
SELECT ALL rt0.c0, vt0.c0, rt0.c1, rt0.c2, t1.c59, t0.c1, t0.c0, t0.c2 FROM t0, rt0, vt0 NATURAL JOIN t1 GROUP BY rt0.c0, vt0.c0, rt0.c1, rt0.c2, t1.c59, t0.c1, t0.c0, t0.c2 HAVING GROUP_CONCAT(((TOTAL(rt0.c1))+(COUNT(*)))) UNION ALL SELECT ALL rt0.c0, vt0.c0, rt0.c1, rt0.c2, t1.c59, t0.c1, t0.c0, t0.c2 FROM t0, rt0, vt0 NATURAL JOIN t1 GROUP BY rt0.c0, vt0.c0, rt0.c1, rt0.c2, t1.c59, t0.c1, t0.c0, t0.c2 HAVING (NOT (GROUP_CONCAT(((TOTAL(rt0.c1))+(COUNT(*)))))) UNION ALL SELECT ALL rt0.c0, vt0.c0, rt0.c1, rt0.c2, t1.c59, t0.c1, t0.c0, t0.c2 FROM t0, rt0, vt0 NATURAL JOIN t1 GROUP BY rt0.c0, vt0.c0, rt0.c1, rt0.c2, t1.c59, t0.c1, t0.c0, t0.c2 HAVING ((GROUP_CONCAT(((TOTAL(rt0.c1))+(COUNT(*))))) ISNULL);
SELECT ALL * FROM vt0, t0, t1, rt0;
SELECT * FROM vt0, t0, t1, rt0 WHERE (vt0.c0) UNION ALL SELECT ALL * FROM vt0, t0, t1, rt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT * FROM vt0, t0, t1, rt0 WHERE (((vt0.c0) ISNULL));
SELECT ALL * FROM vt0, t0, t1, rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((((rt0.c0 IN ()))AND((NOT (rt0.c2)))))AND(x'1538'))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((((((rt0.c0 IN ()))AND((NOT (rt0.c2)))))AND(x'1538'))))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((((((rt0.c0 IN ()))AND((NOT (rt0.c2)))))AND(x'1538'))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT t0.c1, t0.c0 FROM vt0, t0, t1 GROUP BY t0.c1, t0.c0;
SELECT t0.c1, t0.c0 FROM vt0, t0, t1 WHERE (((((CASE WHEN vt0.c0 THEN t0.c0 ELSE t1.c59 END)OR(CAST(t0.c2 AS INTEGER))))AND(CAST(t1.c59 AS REAL)))) GROUP BY t0.c1, t0.c0 UNION SELECT t0.c1, t0.c0 FROM vt0, t0, t1 WHERE ((NOT (((((CASE WHEN vt0.c0 THEN t0.c0 ELSE t1.c59 END)OR(CAST(t0.c2 AS INTEGER))))AND(CAST(t1.c59 AS REAL)))))) GROUP BY t0.c1, t0.c0 UNION SELECT ALL t0.c1, t0.c0 FROM vt0, t0, t1 WHERE (((((((CASE WHEN vt0.c0 THEN t0.c0 ELSE t1.c59 END)OR(CAST(t0.c2 AS INTEGER))))AND(CAST(t1.c59 AS REAL)))) ISNULL)) GROUP BY t0.c1, t0.c0;
SELECT t0.c1, t0.c0 FROM vt0, t0, t1 GROUP BY t0.c1, t0.c0;
SELECT ALL t0.c2 FROM t0, t1 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0, t1 GROUP BY t0.c2 HAVING COUNT(AVG(t0.c2)) UNION ALL SELECT t0.c2 FROM t0, t1 GROUP BY t0.c2 HAVING (NOT (COUNT(AVG(t0.c2)))) UNION ALL SELECT ALL t0.c2 FROM t0, t1 GROUP BY t0.c2 HAVING ((COUNT(AVG(t0.c2))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (vt0.c0) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (CAST(CASE t0.c1  WHEN t0.c0 THEN t0.c2 END AS BLOB)) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (CAST(CASE t0.c1  WHEN t0.c0 THEN t0.c2 END AS BLOB)))) UNION SELECT DISTINCT * FROM t0 WHERE (((CAST(CASE t0.c1  WHEN t0.c0 THEN t0.c2 END AS BLOB)) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT vt0.c0, t0.c1 FROM rt0, t0, vt0, t1 GROUP BY vt0.c0, t0.c1;
SELECT ALL vt0.c0, t0.c1 FROM rt0, t0, vt0, t1 WHERE (QUOTE(t1.c59)) GROUP BY vt0.c0, t0.c1 UNION SELECT vt0.c0, t0.c1 FROM rt0, t0, vt0, t1 WHERE ((NOT (QUOTE(t1.c59)))) GROUP BY vt0.c0, t0.c1 UNION SELECT vt0.c0, t0.c1 FROM rt0, t0, vt0, t1 WHERE (((QUOTE(t1.c59)) ISNULL)) GROUP BY vt0.c0, t0.c1;
SELECT vt0.c0, t0.c1 FROM rt0, t0, vt0, t1 GROUP BY vt0.c0, t0.c1;
SELECT rt0.c1, t0.c2 FROM rt0 INNER JOIN t0 ON rt0.c1 INNER JOIN vt0 ON (((rt0.c0)) NOT BETWEEN ((((t0.c1) NOTNULL))) AND (((rt0.c1 IN ())))) GROUP BY rt0.c1, t0.c2;
SELECT ALL rt0.c1, t0.c2 FROM rt0 INNER JOIN t0 ON rt0.c1 INNER JOIN vt0 ON (((rt0.c0)) NOT BETWEEN ((((t0.c1) NOTNULL))) AND (((rt0.c1 IN ())))) GROUP BY rt0.c1, t0.c2 HAVING ((MAX(t0.c0) COLLATE RTRIM)+(COUNT(x''))) UNION ALL SELECT rt0.c1, t0.c2 FROM rt0 INNER JOIN t0 ON rt0.c1 INNER JOIN vt0 ON (((rt0.c0)) NOT BETWEEN ((((t0.c1) NOTNULL))) AND (((rt0.c1 IN ())))) GROUP BY rt0.c1, t0.c2 HAVING (NOT (((MAX(t0.c0) COLLATE RTRIM)+(COUNT(x''))))) UNION ALL SELECT rt0.c1, t0.c2 FROM rt0 INNER JOIN t0 ON rt0.c1 INNER JOIN vt0 ON (((rt0.c0)) NOT BETWEEN ((((t0.c1) NOTNULL))) AND (((rt0.c1 IN ())))) GROUP BY rt0.c1, t0.c2 HAVING ((((MAX(t0.c0) COLLATE RTRIM)+(COUNT(x'')))) ISNULL);
SELECT rt0.c1, t0.c2 FROM rt0 INNER JOIN t0 ON rt0.c1 INNER JOIN vt0 ON (((rt0.c0)) NOT BETWEEN ((((t0.c1) NOTNULL))) AND (((rt0.c1 IN ())))) GROUP BY rt0.c1, t0.c2;
SELECT ALL rt0.c1, t0.c2 FROM rt0 INNER JOIN t0 ON rt0.c1 INNER JOIN vt0 ON (((rt0.c0)) NOT BETWEEN ((((t0.c1) NOTNULL))) AND (((rt0.c1 IN ())))) GROUP BY rt0.c1, t0.c2 HAVING ((MAX(t0.c0) COLLATE RTRIM)+(COUNT(x''))) UNION ALL SELECT rt0.c1, t0.c2 FROM rt0 INNER JOIN t0 ON rt0.c1 INNER JOIN vt0 ON (((rt0.c0)) NOT BETWEEN ((((t0.c1) NOTNULL))) AND (((rt0.c1 IN ())))) GROUP BY rt0.c1, t0.c2 HAVING (NOT (((MAX(t0.c0) COLLATE RTRIM)+(COUNT(x''))))) UNION ALL SELECT rt0.c1, t0.c2 FROM rt0 INNER JOIN t0 ON rt0.c1 INNER JOIN vt0 ON (((rt0.c0)) NOT BETWEEN ((((t0.c1) NOTNULL))) AND (((rt0.c1 IN ())))) GROUP BY rt0.c1, t0.c2 HAVING ((((MAX(t0.c0) COLLATE RTRIM)+(COUNT(x'')))) ISNULL);
SELECT rt0.c1, t0.c2 FROM rt0 INNER JOIN t0 ON rt0.c1 INNER JOIN vt0 ON (((rt0.c0)) NOT BETWEEN ((((t0.c1) NOTNULL))) AND (((rt0.c1 IN ())))) GROUP BY rt0.c1, t0.c2;
SELECT t0.c1, t0.c0 FROM t0;
SELECT t0.c1, t0.c0 FROM t0 WHERE (((t0.c0) IS FALSE)) UNION ALL SELECT ALL t0.c1, t0.c0 FROM t0 WHERE ((NOT (((t0.c0) IS FALSE)))) UNION ALL SELECT t0.c1, t0.c0 FROM t0 WHERE (((((t0.c0) IS FALSE)) ISNULL));
SELECT t0.c1, t0.c0 FROM t0;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (CASE (t1.c59 IN ())  WHEN 'lb' THEN (((t1.c59)) NOT BETWEEN ((t1.c59)) AND ((t1.c59))) ELSE LOWER(t1.c59) END) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (CASE (t1.c59 IN ())  WHEN 'lb' THEN (((t1.c59)) NOT BETWEEN ((t1.c59)) AND ((t1.c59))) ELSE LOWER(t1.c59) END))) UNION SELECT DISTINCT * FROM t1 WHERE (((CASE (t1.c59 IN ())  WHEN 'lb' THEN (((t1.c59)) NOT BETWEEN ((t1.c59)) AND ((t1.c59))) ELSE LOWER(t1.c59) END) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT ALL t0.c1, t0.c2 FROM t0 NATURAL JOIN t1 GROUP BY t0.c1, t0.c2;
SELECT ALL t0.c1, t0.c2 FROM t0 NATURAL JOIN t1 WHERE ((((t0.c1))<=((t1.c59))) COLLATE BINARY) GROUP BY t0.c1, t0.c2 UNION SELECT t0.c1, t0.c2 FROM t0 NATURAL JOIN t1 WHERE ((NOT ((((t0.c1))<=((t1.c59))) COLLATE BINARY))) GROUP BY t0.c1, t0.c2 UNION SELECT t0.c1, t0.c2 FROM t0 NATURAL JOIN t1 WHERE ((((((t0.c1))<=((t1.c59))) COLLATE BINARY) ISNULL)) GROUP BY t0.c1, t0.c2;
SELECT ALL t0.c1, t0.c2 FROM t0 NATURAL JOIN t1 GROUP BY t0.c1, t0.c2;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((SUM(MAX(SUM(COUNT(t0.c1)))))) NOT BETWEEN (('218257063')) AND ((AVG(t0.c0)))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ((((SUM(MAX(SUM(COUNT(t0.c1)))))) NOT BETWEEN (('218257063')) AND ((AVG(t0.c0)))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((((SUM(MAX(SUM(COUNT(t0.c1)))))) NOT BETWEEN (('218257063')) AND ((AVG(t0.c0))))) ISNULL);
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE (((CASE t0.c2  WHEN x'' THEN t0.c0 ELSE t0.c2 END)>(t0.c1 COLLATE NOCASE))) UNION ALL SELECT * FROM t0 WHERE ((NOT (((CASE t0.c2  WHEN x'' THEN t0.c0 ELSE t0.c2 END)>(t0.c1 COLLATE NOCASE))))) UNION ALL SELECT * FROM t0 WHERE (((((CASE t0.c2  WHEN x'' THEN t0.c0 ELSE t0.c2 END)>(t0.c1 COLLATE NOCASE))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM t0, t1 CROSS JOIN vt0 ON ((t0.c2 COLLATE BINARY)*(CAST(vt0.c0 AS TEXT)));
SELECT DISTINCT * FROM t0, t1 CROSS JOIN vt0 ON ((t0.c2 COLLATE BINARY)*(CAST(vt0.c0 AS TEXT))) WHERE (vt0.c0) UNION SELECT DISTINCT * FROM t0, t1 CROSS JOIN vt0 ON ((t0.c2 COLLATE BINARY)*(CAST(vt0.c0 AS TEXT))) WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM t0, t1 CROSS JOIN vt0 ON ((t0.c2 COLLATE BINARY)*(CAST(vt0.c0 AS TEXT))) WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM t0, t1 CROSS JOIN vt0 ON ((t0.c2 COLLATE BINARY)*(CAST(vt0.c0 AS TEXT)));
SELECT t0.c2, t0.c0, rt0.c0, rt0.c1, t1.c59, rt0.c2 FROM t0, rt0, t1 GROUP BY t0.c2, t0.c0, rt0.c0, rt0.c1, t1.c59, rt0.c2;
SELECT t0.c2, t0.c0, rt0.c0, rt0.c1, t1.c59, rt0.c2 FROM t0, rt0, t1 WHERE ((('(3*Kp[3P' COLLATE NOCASE)>>(t0.c2))) GROUP BY t0.c2, t0.c0, rt0.c0, rt0.c1, t1.c59, rt0.c2 UNION SELECT ALL t0.c2, t0.c0, rt0.c0, rt0.c1, t1.c59, rt0.c2 FROM t0, rt0, t1 WHERE ((NOT ((('(3*Kp[3P' COLLATE NOCASE)>>(t0.c2))))) GROUP BY t0.c2, t0.c0, rt0.c0, rt0.c1, t1.c59, rt0.c2 UNION SELECT ALL t0.c2, t0.c0, rt0.c0, rt0.c1, t1.c59, rt0.c2 FROM t0, rt0, t1 WHERE ((((('(3*Kp[3P' COLLATE NOCASE)>>(t0.c2))) ISNULL)) GROUP BY t0.c2, t0.c0, rt0.c0, rt0.c1, t1.c59, rt0.c2;
SELECT t0.c2, t0.c0, rt0.c0, rt0.c1, t1.c59, rt0.c2 FROM t0, rt0, t1 GROUP BY t0.c2, t0.c0, rt0.c0, rt0.c1, t1.c59, rt0.c2;
SELECT ALL t0.c2, vt0.c0, rt0.c1, t0.c1 FROM t1 INNER JOIN t0 ON UPPER(((t0.c0)||(t0.c1))) LEFT OUTER JOIN rt0 ON CASE WHEN rt0.c2 COLLATE BINARY THEN ((((t0.c0)OR(rt0.c1)))OR(rt0.c1)) WHEN ((vt0.c0)-(rt0.c2)) THEN (((t0.c2)) BETWEEN ((t0.c2)) AND ((vt0.c0))) WHEN (((NULL)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) THEN LIKELY(DISTINCT rt0.c1) ELSE (((x''))>((vt0.c0))) END FULL OUTER JOIN vt0 ON CAST(rt0.c0 AS INTEGER) COLLATE NOCASE GROUP BY t0.c2, vt0.c0, rt0.c1, t0.c1;
SELECT t0.c1, t0.c2 FROM t0, t1;
SELECT ALL t0.c1, t0.c2 FROM t0, t1 WHERE (ABS(((t0.c2)<=(0.9054266281796481)))) UNION ALL SELECT ALL t0.c1, t0.c2 FROM t0, t1 WHERE ((NOT (ABS(((t0.c2)<=(0.9054266281796481)))))) UNION ALL SELECT ALL t0.c1, t0.c2 FROM t0, t1 WHERE (((ABS(((t0.c2)<=(0.9054266281796481)))) ISNULL));
SELECT t0.c1, t0.c2 FROM t0, t1;
SELECT DISTINCT t0.c2, rt0.c2 FROM rt0, vt0, t0;
SELECT DISTINCT t0.c2, rt0.c2 FROM rt0 NOT INDEXED, vt0, t0 WHERE ((((((vt0.c0) IS FALSE)))>((((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c2)))))) UNION SELECT DISTINCT t0.c2, rt0.c2 FROM rt0, vt0, t0 WHERE ((NOT ((((((vt0.c0) IS FALSE)))>((((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c2)))))))) UNION SELECT DISTINCT t0.c2, rt0.c2 FROM rt0, vt0, t0 WHERE ((((((((vt0.c0) IS FALSE)))>((((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c2)))))) ISNULL));
SELECT DISTINCT t0.c2, rt0.c2 FROM rt0, vt0, t0;
SELECT t1.c59 FROM t1 GROUP BY t1.c59;
SELECT t1.c59 FROM t1 WHERE ((((t1.c59 IN ()))OR(CASE WHEN t1.c59 THEN t1.c59 END))) GROUP BY t1.c59 UNION SELECT ALL t1.c59 FROM t1 WHERE ((NOT ((((t1.c59 IN ()))OR(CASE WHEN t1.c59 THEN t1.c59 END))))) GROUP BY t1.c59 UNION SELECT t1.c59 FROM t1 WHERE ((((((t1.c59 IN ()))OR(CASE WHEN t1.c59 THEN t1.c59 END))) ISNULL)) GROUP BY t1.c59;
SELECT t1.c59 FROM t1 GROUP BY t1.c59;
SELECT ALL t1.c59, rt0.c0, vt0.c0 FROM t1, rt0, vt0 GROUP BY t1.c59, rt0.c0, vt0.c0;
SELECT ALL t1.c59, rt0.c0, vt0.c0 FROM t1, rt0, vt0 GROUP BY t1.c59, rt0.c0, vt0.c0 HAVING MIN(((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c0))) UNION ALL SELECT t1.c59, rt0.c0, vt0.c0 FROM t1, rt0, vt0 GROUP BY t1.c59, rt0.c0, vt0.c0 HAVING (NOT (MIN(((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c0))))) UNION ALL SELECT ALL t1.c59, rt0.c0, vt0.c0 FROM t1, rt0, vt0 GROUP BY t1.c59, rt0.c0, vt0.c0 HAVING ((MIN(((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)))) ISNULL);
SELECT ALL t1.c59, rt0.c0, vt0.c0 FROM t1, rt0, vt0 GROUP BY t1.c59, rt0.c0, vt0.c0;
SELECT ALL t1.c59, rt0.c0, vt0.c0 FROM t1, rt0, vt0 GROUP BY t1.c59, rt0.c0, vt0.c0 HAVING MIN(((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c0))) UNION ALL SELECT t1.c59, rt0.c0, vt0.c0 FROM t1, rt0, vt0 GROUP BY t1.c59, rt0.c0, vt0.c0 HAVING (NOT (MIN(((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c0))))) UNION ALL SELECT ALL t1.c59, rt0.c0, vt0.c0 FROM t1, rt0, vt0 GROUP BY t1.c59, rt0.c0, vt0.c0 HAVING ((MIN(((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)))) ISNULL);
SELECT ALL t1.c59, rt0.c0, vt0.c0 FROM t1, rt0, vt0 GROUP BY t1.c59, rt0.c0, vt0.c0;
SELECT t0.c1 FROM rt0, t0;
SELECT ALL t0.c1 FROM rt0, t0 WHERE (t0.c2) UNION ALL SELECT t0.c1 FROM rt0, t0 WHERE ((NOT (t0.c2))) UNION ALL SELECT ALL t0.c1 FROM rt0, t0 WHERE (((t0.c2) ISNULL));
SELECT t0.c1 FROM rt0, t0;
SELECT DISTINCT t0.c0 FROM t0, rt0, vt0;
SELECT DISTINCT t0.c0 FROM t0, rt0, vt0 WHERE (-1174543387) UNION SELECT DISTINCT t0.c0 FROM t0 NOT INDEXED, rt0, vt0 WHERE ((NOT (-1174543387))) UNION SELECT DISTINCT t0.c0 FROM t0, rt0, vt0 WHERE (((-1174543387) ISNULL));
SELECT DISTINCT t0.c0 FROM t0, rt0, vt0;
SELECT ALL t0.c0, t0.c1, t0.c2 FROM t0 GROUP BY t0.c0, t0.c1, t0.c2;
SELECT t0.c0, t0.c1, t0.c2 FROM t0 WHERE ((+ (CAST(t0.c1 AS NUMERIC)))) GROUP BY t0.c0, t0.c1, t0.c2 UNION SELECT t0.c0, t0.c1, t0.c2 FROM t0 WHERE ((NOT ((+ (CAST(t0.c1 AS NUMERIC)))))) GROUP BY t0.c0, t0.c1, t0.c2 UNION SELECT ALL t0.c0, t0.c1, t0.c2 FROM t0 WHERE ((((+ (CAST(t0.c1 AS NUMERIC)))) ISNULL)) GROUP BY t0.c0, t0.c1, t0.c2;
SELECT ALL t0.c0, t0.c1, t0.c2 FROM t0 GROUP BY t0.c0, t0.c1, t0.c2;
SELECT t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1;
SELECT t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1 HAVING COUNT(*) UNION ALL SELECT t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1;
SELECT t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1 HAVING COUNT(*) UNION ALL SELECT t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1;
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (355417827) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (355417827))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((355417827) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0, t1, t0 INDEXED BY i11, rt0;
SELECT t0.c0 FROM vt0, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM vt0, t0 WHERE (CASE WHEN ((((NULL)AND(t0.c0)))OR(vt0.c0)) THEN 0.7859978103908539 END) GROUP BY t0.c0 UNION SELECT t0.c0 FROM vt0, t0 WHERE ((NOT (CASE WHEN ((((NULL)AND(t0.c0)))OR(vt0.c0)) THEN 0.7859978103908539 END))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM vt0, t0 WHERE (((CASE WHEN ((((NULL)AND(t0.c0)))OR(vt0.c0)) THEN 0.7859978103908539 END) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM vt0, t0 GROUP BY t0.c0;
SELECT ALL t1.c59, rt0.c2, rt0.c0 FROM t1, rt0 GROUP BY t1.c59, rt0.c2, rt0.c0;
SELECT ALL t1.c59, rt0.c2, rt0.c0 FROM t1, rt0 GROUP BY t1.c59, rt0.c2, rt0.c0 HAVING ((0.0673100100903985) IS FALSE) UNION ALL SELECT t1.c59, rt0.c2, rt0.c0 FROM t1, rt0 GROUP BY t1.c59, rt0.c2, rt0.c0 HAVING (NOT (((0.0673100100903985) IS FALSE))) UNION ALL SELECT ALL t1.c59, rt0.c2, rt0.c0 FROM t1, rt0 GROUP BY t1.c59, rt0.c2, rt0.c0 HAVING ((((0.0673100100903985) IS FALSE)) ISNULL);
SELECT ALL t1.c59, rt0.c2, rt0.c0 FROM t1, rt0 GROUP BY t1.c59, rt0.c2, rt0.c0;
SELECT ALL t1.c59, rt0.c2, rt0.c0 FROM t1, rt0 GROUP BY t1.c59, rt0.c2, rt0.c0 HAVING ((0.0673100100903985) IS FALSE) UNION ALL SELECT t1.c59, rt0.c2, rt0.c0 FROM t1, rt0 GROUP BY t1.c59, rt0.c2, rt0.c0 HAVING (NOT (((0.0673100100903985) IS FALSE))) UNION ALL SELECT ALL t1.c59, rt0.c2, rt0.c0 FROM t1, rt0 GROUP BY t1.c59, rt0.c2, rt0.c0 HAVING ((((0.0673100100903985) IS FALSE)) ISNULL);
SELECT ALL t1.c59, rt0.c2, rt0.c0 FROM t1, rt0 GROUP BY t1.c59, rt0.c2, rt0.c0;
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c0)||(rt0.c2))) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (rt0.c0 COLLATE NOCASE));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c0)||(rt0.c2))) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (rt0.c0 COLLATE NOCASE)) WHERE (((((rt0.c1) NOTNULL)) NOT BETWEEN (((rt0.c0)AND(rt0.c2))) AND (((('ﯬ'))<=((rt0.c1)))))) UNION ALL SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c0)||(rt0.c2))) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (rt0.c0 COLLATE NOCASE)) WHERE ((NOT (((((rt0.c1) NOTNULL)) NOT BETWEEN (((rt0.c0)AND(rt0.c2))) AND (((('ﯬ'))<=((rt0.c1)))))))) UNION ALL SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c0)||(rt0.c2))) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (rt0.c0 COLLATE NOCASE)) WHERE (((((((rt0.c1) NOTNULL)) NOT BETWEEN (((rt0.c0)AND(rt0.c2))) AND (((('ﯬ'))<=((rt0.c1)))))) ISNULL));
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c0)||(rt0.c2))) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (rt0.c0 COLLATE NOCASE));
SELECT DISTINCT * FROM rt0 CROSS JOIN t0 ON (- ('f>?s5')) COLLATE NOCASE LEFT OUTER JOIN t1 ON (- (((9217288.0)-(t1.c59))));
SELECT DISTINCT * FROM rt0 CROSS JOIN t0 ON (- ('f>?s5')) COLLATE NOCASE LEFT OUTER JOIN t1 ON (- (((9217288.0)-(t1.c59)))) WHERE (CAST(CAST(t0.c2 AS BLOB) AS NUMERIC)) UNION SELECT DISTINCT * FROM rt0 CROSS JOIN t0 ON (- ('f>?s5')) COLLATE NOCASE LEFT OUTER JOIN t1 ON (- (((9217288.0)-(t1.c59)))) WHERE ((NOT (CAST(CAST(t0.c2 AS BLOB) AS NUMERIC)))) UNION SELECT DISTINCT * FROM rt0 CROSS JOIN t0 ON (- ('f>?s5')) COLLATE NOCASE LEFT OUTER JOIN t1 ON (- (((9217288.0)-(t1.c59)))) WHERE (((CAST(CAST(t0.c2 AS BLOB) AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM rt0 CROSS JOIN t0 ON (- ('f>?s5')) COLLATE NOCASE LEFT OUTER JOIN t1 ON (- (((9217288.0)-(t1.c59))));
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (COALESCE(DISTINCT (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, x'')) NOT BETWEEN (('-1404699639', vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))), (vt0.c0 IN ()))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (COALESCE(DISTINCT (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, x'')) NOT BETWEEN (('-1404699639', vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))), (vt0.c0 IN ()))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((COALESCE(DISTINCT (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, x'')) NOT BETWEEN (('-1404699639', vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))), (vt0.c0 IN ()))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL t1.c59 FROM t1 GROUP BY t1.c59;
SELECT ALL t1.c59 FROM t1 GROUP BY t1.c59 HAVING AVG(CAST(SUM(TOTAL(t1.c59)) AS TEXT)) UNION ALL SELECT ALL t1.c59 FROM t1 GROUP BY t1.c59 HAVING (NOT (AVG(CAST(SUM(TOTAL(t1.c59)) AS TEXT)))) UNION ALL SELECT t1.c59 FROM t1 GROUP BY t1.c59 HAVING ((AVG(CAST(SUM(TOTAL(t1.c59)) AS TEXT))) ISNULL);
SELECT ALL rt0.c2, rt0.c1 FROM rt0, vt0, t1, t0;
SELECT rt0.c2, rt0.c1 FROM rt0, vt0, t1, t0 WHERE ((((t0.c1 IN ())) IS TRUE)) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0, vt0, t1, t0 WHERE ((NOT ((((t0.c1 IN ())) IS TRUE)))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0, vt0, t1, t0 WHERE ((((((t0.c1 IN ())) IS TRUE)) ISNULL));
SELECT ALL rt0.c2, rt0.c1 FROM rt0, vt0, t1, t0;
SELECT DISTINCT * FROM t0, rt0, t1, vt0;
SELECT DISTINCT * FROM t0, rt0, t1, vt0 WHERE ((((t0.c1, rt0.c1, rt0.c2)) BETWEEN ((t0.c2, (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((vt0.c0))), ((rt0.c2)>(vt0.c0)))) AND ((rt0.c2, ((x'')||(t0.c1)), (((t1.c59)) BETWEEN ((vt0.c0)) AND ((rt0.c0))))))) UNION SELECT DISTINCT * FROM t0, rt0, t1, vt0 WHERE ((NOT ((((t0.c1, rt0.c1, rt0.c2)) BETWEEN ((t0.c2, (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((vt0.c0))), ((rt0.c2)>(vt0.c0)))) AND ((rt0.c2, ((x'')||(t0.c1)), (((t1.c59)) BETWEEN ((vt0.c0)) AND ((rt0.c0))))))))) UNION SELECT DISTINCT * FROM t0, rt0, t1, vt0 WHERE ((((((t0.c1, rt0.c1, rt0.c2)) BETWEEN ((t0.c2, (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((vt0.c0))), ((rt0.c2)>(vt0.c0)))) AND ((rt0.c2, ((x'')||(t0.c1)), (((t1.c59)) BETWEEN ((vt0.c0)) AND ((rt0.c0))))))) ISNULL));
SELECT DISTINCT * FROM t0, rt0, t1, vt0;
SELECT t1.c59 FROM t0, t1 GROUP BY t1.c59;
SELECT ALL t1.c59 FROM t0, t1 WHERE (((CASE t0.c0  WHEN t0.c1 THEN '1205062587' WHEN t0.c0 THEN t0.c2 WHEN t0.c0 THEN 1.21237195E9 END)IS NOT(((t0.c2)>=(t0.c0))))) GROUP BY t1.c59 UNION SELECT t1.c59 FROM t0, t1 WHERE ((NOT (((CASE t0.c0  WHEN t0.c1 THEN '1205062587' WHEN t0.c0 THEN t0.c2 WHEN t0.c0 THEN 1.21237195E9 END)IS NOT(((t0.c2)>=(t0.c0))))))) GROUP BY t1.c59 UNION SELECT t1.c59 FROM t0, t1 WHERE (((((CASE t0.c0  WHEN t0.c1 THEN '1205062587' WHEN t0.c0 THEN t0.c2 WHEN t0.c0 THEN 1.21237195E9 END)IS NOT(((t0.c2)>=(t0.c0))))) ISNULL)) GROUP BY t1.c59;
SELECT t1.c59 FROM t0, t1 GROUP BY t1.c59;
SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2;
SELECT t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2 HAVING ((((t0.c2)||(AVG(t0.c0))))<<(SUM(t0.c0))) UNION ALL SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2 HAVING (NOT (((((t0.c2)||(AVG(t0.c0))))<<(SUM(t0.c0))))) UNION ALL SELECT t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2 HAVING ((((((t0.c2)||(AVG(t0.c0))))<<(SUM(t0.c0)))) ISNULL);
SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2;
SELECT t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2 HAVING ((((t0.c2)||(AVG(t0.c0))))<<(SUM(t0.c0))) UNION ALL SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2 HAVING (NOT (((((t0.c2)||(AVG(t0.c0))))<<(SUM(t0.c0))))) UNION ALL SELECT t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2 HAVING ((((((t0.c2)||(AVG(t0.c0))))<<(SUM(t0.c0)))) ISNULL);
SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2;
SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0;
SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 WHERE (((MAX(t0.c1, t0.c0)) BETWEEN ((((t0.c2))<=((t0.c0)))) AND (((0.6620398648048692)!=(t0.c1))))) UNION ALL SELECT t0.c2, t0.c0, t0.c1 FROM t0 WHERE ((NOT (((MAX(t0.c1, t0.c0)) BETWEEN ((((t0.c2))<=((t0.c0)))) AND (((0.6620398648048692)<>(t0.c1))))))) UNION ALL SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 WHERE (((((MAX(t0.c1, t0.c0)) BETWEEN ((((t0.c2))<=((t0.c0)))) AND (((0.6620398648048692)<>(t0.c1))))) ISNULL));
SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0;
SELECT DISTINCT * FROM t1 CROSS JOIN vt0 ON CASE WHEN CAST(rt0.c0 AS REAL) THEN '302312851' END RIGHT OUTER JOIN rt0 ON ((((t1.c59)IS NOT(rt0.c2))) IS TRUE);
SELECT t0.c2, t0.c1 FROM t0 GROUP BY t0.c2, t0.c1;
SELECT ALL t0.c2, t0.c1 FROM t0 WHERE (((x'ff7a')|(((x'') NOT BETWEEN (t0.c0) AND (t0.c0))))) GROUP BY t0.c2, t0.c1 UNION SELECT ALL t0.c2, t0.c1 FROM t0 WHERE ((NOT (((x'ff7a')|(((x'') NOT BETWEEN (t0.c0) AND (t0.c0))))))) GROUP BY t0.c2, t0.c1 UNION SELECT t0.c2, t0.c1 FROM t0 WHERE (((((x'ff7a')|(((x'') NOT BETWEEN (t0.c0) AND (t0.c0))))) ISNULL)) GROUP BY t0.c2, t0.c1;
SELECT t0.c2, t0.c1 FROM t0 GROUP BY t0.c2, t0.c1;
SELECT ALL t0.c2, t0.c0, t0.c1 FROM vt0, t1 INNER JOIN t0 ON ((t0.c1 COLLATE RTRIM)>>(((t0.c0)==(t1.c59)))) GROUP BY t0.c2, t0.c0, t0.c1;
SELECT ALL t0.c2, t0.c0, t0.c1 FROM vt0, t1 INNER JOIN t0 ON ((t0.c1 COLLATE RTRIM)>>(((t0.c0)=(t1.c59)))) GROUP BY t0.c2, t0.c0, t0.c1 HAVING MIN(MAX(AVG(t0.c2))) UNION ALL SELECT ALL t0.c2, t0.c0, t0.c1 FROM vt0, t1 INNER JOIN t0 ON ((t0.c1 COLLATE RTRIM)>>(((t0.c0)==(t1.c59)))) GROUP BY t0.c2, t0.c0, t0.c1 HAVING (NOT (MIN(MAX(AVG(t0.c2))))) UNION ALL SELECT t0.c2, t0.c0, t0.c1 FROM vt0, t1 INNER JOIN t0 ON ((t0.c1 COLLATE RTRIM)>>(((t0.c0)=(t1.c59)))) GROUP BY t0.c2, t0.c0, t0.c1 HAVING ((MIN(MAX(AVG(t0.c2)))) ISNULL);
SELECT ALL * FROM rt0, vt0;
SELECT ALL * FROM rt0, vt0 WHERE (CASE WHEN ((vt0.c0) IS FALSE) THEN ((rt0.c2)>>(rt0.c0)) WHEN NULL COLLATE RTRIM THEN (rt0.c0 IN ()) WHEN CAST(rt0.c0 AS TEXT) THEN ((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) END) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((NOT (CASE WHEN ((vt0.c0) IS FALSE) THEN ((rt0.c2)>>(rt0.c0)) WHEN NULL COLLATE RTRIM THEN (rt0.c0 IN ()) WHEN CAST(rt0.c0 AS TEXT) THEN ((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) END))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE (((CASE WHEN ((vt0.c0) IS FALSE) THEN ((rt0.c2)>>(rt0.c0)) WHEN NULL COLLATE RTRIM THEN (rt0.c0 IN ()) WHEN CAST(rt0.c0 AS TEXT) THEN ((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) END) ISNULL));
SELECT ALL * FROM rt0, vt0;
SELECT DISTINCT t0.c0, rt0.c1, t0.c2, rt0.c2, t1.c59 FROM t0, rt0, vt0, t1;
SELECT DISTINCT t0.c0, rt0.c1, t0.c2, rt0.c2, t1.c59 FROM t0, rt0, vt0, t1 WHERE (NULLIF(((t0.c2)AND(vt0.c0)), CAST(t0.c0 AS BLOB))) UNION SELECT DISTINCT t0.c0, rt0.c1, t0.c2, rt0.c2, t1.c59 FROM t0, rt0, vt0, t1 WHERE ((NOT (NULLIF(((t0.c2)AND(vt0.c0)), CAST(t0.c0 AS BLOB))))) UNION SELECT DISTINCT t0.c0, rt0.c1, t0.c2, rt0.c2, t1.c59 FROM t0, rt0, vt0, t1 WHERE (((NULLIF(((t0.c2)AND(vt0.c0)), CAST(t0.c0 AS BLOB))) ISNULL));
SELECT DISTINCT t0.c0, rt0.c1, t0.c2, rt0.c2, t1.c59 FROM t0, rt0, vt0, t1;
SELECT ALL t0.c0, rt0.c2 FROM t0, t1, rt0, vt0 GROUP BY t0.c0, rt0.c2;
SELECT ALL t0.c0, rt0.c2 FROM t0, t1, rt0, vt0 WHERE (CASE ((((t0.c0)AND(vt0.c0)))OR(t0.c1))  WHEN ((vt0.c0)>>(rt0.c1)) THEN TRIM(vt0.c0, t1.c59) END) GROUP BY t0.c0, rt0.c2 UNION SELECT t0.c0, rt0.c2 FROM t0, t1, rt0, vt0 WHERE ((NOT (CASE ((((t0.c0)AND(vt0.c0)))OR(t0.c1))  WHEN ((vt0.c0)>>(rt0.c1)) THEN TRIM(vt0.c0, t1.c59) END))) GROUP BY t0.c0, rt0.c2 UNION SELECT ALL t0.c0, rt0.c2 FROM t0, t1, rt0, vt0 WHERE (((CASE ((((t0.c0)AND(vt0.c0)))OR(t0.c1))  WHEN ((vt0.c0)>>(rt0.c1)) THEN TRIM(vt0.c0, t1.c59) END) ISNULL)) GROUP BY t0.c0, rt0.c2;
SELECT ALL t0.c0, rt0.c2 FROM t0, t1, rt0, vt0 GROUP BY t0.c0, rt0.c2;
SELECT ALL vt0.c0, rt0.c1, t1.c59, rt0.c2 FROM vt0, rt0, t1 GROUP BY vt0.c0, rt0.c1, t1.c59, rt0.c2;
SELECT vt0.c0, rt0.c1, t1.c59, rt0.c2 FROM vt0, rt0, t1 GROUP BY vt0.c0, rt0.c1, t1.c59, rt0.c2 HAVING CASE WHEN '{~' THEN ((vt0.c0) IS FALSE) ELSE ((t1.c59)==(vt0.c0)) END UNION ALL SELECT vt0.c0, rt0.c1, t1.c59, rt0.c2 FROM vt0, rt0, t1 GROUP BY vt0.c0, rt0.c1, t1.c59, rt0.c2 HAVING (NOT (CASE WHEN '{~' THEN ((vt0.c0) IS FALSE) ELSE ((t1.c59)==(vt0.c0)) END)) UNION ALL SELECT ALL vt0.c0, rt0.c1, t1.c59, rt0.c2 FROM vt0, rt0, t1 GROUP BY vt0.c0, rt0.c1, t1.c59, rt0.c2 HAVING ((CASE WHEN '{~' THEN ((vt0.c0) IS FALSE) ELSE ((t1.c59)=(vt0.c0)) END) ISNULL);
SELECT ALL vt0.c0, rt0.c1, t1.c59, rt0.c2 FROM vt0, rt0, t1 GROUP BY vt0.c0, rt0.c1, t1.c59, rt0.c2;
SELECT vt0.c0, rt0.c1, t1.c59, rt0.c2 FROM vt0, rt0, t1 GROUP BY vt0.c0, rt0.c1, t1.c59, rt0.c2 HAVING CASE WHEN '{~' THEN ((vt0.c0) IS FALSE) ELSE ((t1.c59)==(vt0.c0)) END UNION ALL SELECT vt0.c0, rt0.c1, t1.c59, rt0.c2 FROM vt0, rt0, t1 GROUP BY vt0.c0, rt0.c1, t1.c59, rt0.c2 HAVING (NOT (CASE WHEN '{~' THEN ((vt0.c0) IS FALSE) ELSE ((t1.c59)==(vt0.c0)) END)) UNION ALL SELECT ALL vt0.c0, rt0.c1, t1.c59, rt0.c2 FROM vt0, rt0, t1 GROUP BY vt0.c0, rt0.c1, t1.c59, rt0.c2 HAVING ((CASE WHEN '{~' THEN ((vt0.c0) IS FALSE) ELSE ((t1.c59)=(vt0.c0)) END) ISNULL);
SELECT ALL vt0.c0, rt0.c1, t1.c59, rt0.c2 FROM vt0, rt0, t1 GROUP BY vt0.c0, rt0.c1, t1.c59, rt0.c2;
SELECT * FROM t1;
SELECT * FROM t1 WHERE ((((((t1.c59))>=((t1.c59)))) BETWEEN (t1.c59 COLLATE NOCASE) AND ((NOT (t1.c59))))) UNION ALL SELECT * FROM t1 WHERE ((NOT ((((((t1.c59))>=((t1.c59)))) BETWEEN (t1.c59 COLLATE NOCASE) AND ((NOT (t1.c59))))))) UNION ALL SELECT * FROM t1 WHERE ((((((((t1.c59))>=((t1.c59)))) BETWEEN (t1.c59 COLLATE NOCASE) AND ((NOT (t1.c59))))) ISNULL));
SELECT * FROM t1;
SELECT DISTINCT t0.c1 FROM rt0, t1 NOT INDEXED, t0;
SELECT DISTINCT t0.c1 FROM rt0, t1, t0 WHERE (rt0.c0) UNION SELECT DISTINCT t0.c1 FROM rt0, t1, t0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT t0.c1 FROM rt0, t1, t0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT t0.c1 FROM rt0, t1 NOT INDEXED, t0;
SELECT ALL rt0.c0, rt0.c1, t0.c0, t1.c59, t0.c1 FROM vt0, rt0, t0, t1 GROUP BY rt0.c0, rt0.c1, t0.c0, t1.c59, t0.c1;
SELECT rt0.c0, rt0.c1, t0.c0, t1.c59, t0.c1 FROM vt0, rt0, t0, t1 WHERE (((((t0.c1) NOT BETWEEN (t0.c2) AND (rt0.c2))) NOT BETWEEN (MAX('355417827', rt0.c1, t1.c59, rt0.c0)) AND (SUBSTR(t0.c2, rt0.c2)))) GROUP BY rt0.c0, rt0.c1, t0.c0, t1.c59, t0.c1 UNION SELECT ALL rt0.c0, rt0.c1, t0.c0, t1.c59, t0.c1 FROM vt0, rt0, t0, t1 WHERE ((NOT (((((t0.c1) NOT BETWEEN (t0.c2) AND (rt0.c2))) NOT BETWEEN (MAX('355417827', rt0.c1, t1.c59, rt0.c0)) AND (SUBSTR(t0.c2, rt0.c2)))))) GROUP BY rt0.c0, rt0.c1, t0.c0, t1.c59, t0.c1 UNION SELECT ALL rt0.c0, rt0.c1, t0.c0, t1.c59, t0.c1 FROM vt0, rt0, t0, t1 WHERE (((((((t0.c1) NOT BETWEEN (t0.c2) AND (rt0.c2))) NOT BETWEEN (MAX('355417827', rt0.c1, t1.c59, rt0.c0)) AND (SUBSTR(t0.c2, rt0.c2)))) ISNULL)) GROUP BY rt0.c0, rt0.c1, t0.c0, t1.c59, t0.c1;
SELECT ALL rt0.c0, rt0.c1, t0.c0, t1.c59, t0.c1 FROM vt0, rt0, t0, t1 GROUP BY rt0.c0, rt0.c1, t0.c0, t1.c59, t0.c1;
SELECT rt0.c0, t1.c59, rt0.c1, rt0.c2 FROM rt0 FULL OUTER JOIN vt0 ON LIKELIHOOD(TYPEOF(rt0.c1), 0.9013601872808278) LEFT OUTER JOIN t1 ON STRFTIME((rt0.c0 IN ()), ((rt0.c0)|(rt0.c0)), 0.25772101215316623 COLLATE NOCASE) GROUP BY rt0.c0, t1.c59, rt0.c1, rt0.c2;
SELECT rt0.c0, t1.c59, rt0.c1, rt0.c2 FROM rt0 FULL OUTER JOIN vt0 ON LIKELIHOOD(TYPEOF(rt0.c1), 0.9013601872808278) LEFT OUTER JOIN t1 ON STRFTIME((rt0.c0 IN ()), ((rt0.c0)|(rt0.c0)), 0.25772101215316623 COLLATE NOCASE) GROUP BY rt0.c0, t1.c59, rt0.c1, rt0.c2 HAVING TOTAL(((MAX(COUNT(*))) BETWEEN (rt0.c1) AND (vt0.c0))) UNION ALL SELECT ALL rt0.c0, t1.c59, rt0.c1, rt0.c2 FROM rt0 FULL OUTER JOIN vt0 ON LIKELIHOOD(TYPEOF(rt0.c1), 0.9013601872808278) LEFT OUTER JOIN t1 ON STRFTIME((rt0.c0 IN ()), ((rt0.c0)|(rt0.c0)), 0.25772101215316623 COLLATE NOCASE) GROUP BY rt0.c0, t1.c59, rt0.c1, rt0.c2 HAVING (NOT (TOTAL(((MAX(COUNT(*))) BETWEEN (rt0.c1) AND (vt0.c0))))) UNION ALL SELECT ALL rt0.c0, t1.c59, rt0.c1, rt0.c2 FROM rt0 FULL OUTER JOIN vt0 ON LIKELIHOOD(TYPEOF(rt0.c1), 0.9013601872808278) LEFT OUTER JOIN t1 ON STRFTIME((rt0.c0 IN ()), ((rt0.c0)|(rt0.c0)), 0.25772101215316623 COLLATE NOCASE) GROUP BY rt0.c0, t1.c59, rt0.c1, rt0.c2 HAVING ((TOTAL(((MAX(COUNT(*))) BETWEEN (rt0.c1) AND (vt0.c0)))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (NULL) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (NULL))) UNION ALL SELECT * FROM rt0 WHERE (((NULL) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((((t0.c1) IS TRUE))!=((((t0.c2)) NOT BETWEEN ((t0.c0)) AND ((t0.c1)))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (((((t0.c1) IS TRUE))<>((((t0.c2)) NOT BETWEEN ((t0.c0)) AND ((t0.c1)))))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((((((t0.c1) IS TRUE))<>((((t0.c2)) NOT BETWEEN ((t0.c0)) AND ((t0.c1)))))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL t0.c2 FROM t0, vt0, t1 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0, vt0, t1 WHERE (t0.c1) GROUP BY t0.c2 UNION SELECT t0.c2 FROM t0, vt0, t1 WHERE ((NOT (t0.c1))) GROUP BY t0.c2 UNION SELECT t0.c2 FROM t0, vt0, t1 WHERE (((t0.c1) ISNULL)) GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0, vt0, t1 GROUP BY t0.c2;
SELECT ALL t0.c2, t0.c0, t0.c1, rt0.c0 FROM t1, t0, rt0 GROUP BY t0.c2, t0.c0, t0.c1, rt0.c0;
SELECT t0.c2, t0.c0, t0.c1, rt0.c0 FROM t1, t0, rt0 GROUP BY t0.c2, t0.c0, t0.c1, rt0.c0 HAVING MAX(MAX(rt0.c2)) UNION ALL SELECT t0.c2, t0.c0, t0.c1, rt0.c0 FROM t1, t0, rt0 GROUP BY t0.c2, t0.c0, t0.c1, rt0.c0 HAVING (NOT (MAX(MAX(rt0.c2)))) UNION ALL SELECT ALL t0.c2, t0.c0, t0.c1, rt0.c0 FROM t1, t0, rt0 GROUP BY t0.c2, t0.c0, t0.c1, rt0.c0 HAVING ((MAX(MAX(rt0.c2))) ISNULL);
SELECT t0.c1, t0.c0, rt0.c0, rt0.c2, vt0.c0, t1.c59 FROM t0, vt0, t1, rt0;
SELECT ALL t0.c1, t0.c0, rt0.c0, rt0.c2, vt0.c0, t1.c59 FROM t0, vt0, t1, rt0 WHERE (((((vt0.c0)<<(rt0.c2))) ISNULL)) UNION ALL SELECT t0.c1, t0.c0, rt0.c0, rt0.c2, vt0.c0, t1.c59 FROM t0, vt0, t1, rt0 WHERE ((NOT (((((vt0.c0)<<(rt0.c2))) ISNULL)))) UNION ALL SELECT ALL t0.c1, t0.c0, rt0.c0, rt0.c2, vt0.c0, t1.c59 FROM t0, vt0, t1, rt0 WHERE (((((((vt0.c0)<<(rt0.c2))) ISNULL)) ISNULL));
SELECT t0.c1, t0.c0, rt0.c0, rt0.c2, vt0.c0, t1.c59 FROM t0, vt0, t1, rt0;
SELECT DISTINCT rt0.c2, t1.c59, rt0.c1, t0.c1 FROM rt0, vt0 RIGHT OUTER JOIN t0 ON (((rt0.c0)) BETWEEN ((((t0.c2)<(t0.c2)))) AND ((CASE WHEN vt0.c0 THEN t0.c2 ELSE t0.c1 END))) FULL OUTER JOIN t1 ON (((rt0.c2)) NOT BETWEEN ((t0.c0 COLLATE RTRIM)) AND ((ROUND(vt0.c0, 1.993799443E9))));
SELECT DISTINCT rt0.c2, t1.c59, rt0.c1, t0.c1 FROM rt0, vt0 RIGHT OUTER JOIN t0 ON (((rt0.c0)) BETWEEN ((((t0.c2)<(t0.c2)))) AND ((CASE WHEN vt0.c0 THEN t0.c2 ELSE t0.c1 END))) FULL OUTER JOIN t1 ON (((rt0.c2)) NOT BETWEEN ((t0.c0 COLLATE RTRIM)) AND ((ROUND(vt0.c0, 1.993799443E9)))) WHERE ((~ (((((t1.c59)OR(rt0.c2)))OR(vt0.c0))))) UNION SELECT DISTINCT rt0.c2, t1.c59, rt0.c1, t0.c1 FROM rt0, vt0 RIGHT OUTER JOIN t0 ON (((rt0.c0)) BETWEEN ((((t0.c2)<(t0.c2)))) AND ((CASE WHEN vt0.c0 THEN t0.c2 ELSE t0.c1 END))) FULL OUTER JOIN t1 ON (((rt0.c2)) NOT BETWEEN ((t0.c0 COLLATE RTRIM)) AND ((ROUND(vt0.c0, 1.993799443E9)))) WHERE ((NOT ((~ (((((t1.c59)OR(rt0.c2)))OR(vt0.c0))))))) UNION SELECT DISTINCT rt0.c2, t1.c59, rt0.c1, t0.c1 FROM rt0, vt0 RIGHT OUTER JOIN t0 ON (((rt0.c0)) BETWEEN ((((t0.c2)<(t0.c2)))) AND ((CASE WHEN vt0.c0 THEN t0.c2 ELSE t0.c1 END))) FULL OUTER JOIN t1 ON (((rt0.c2)) NOT BETWEEN ((t0.c0 COLLATE RTRIM)) AND ((ROUND(vt0.c0, 1.993799443E9)))) WHERE ((((~ (((((t1.c59)OR(rt0.c2)))OR(vt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c2, t1.c59, rt0.c1, t0.c1 FROM rt0, vt0 RIGHT OUTER JOIN t0 ON (((rt0.c0)) BETWEEN ((((t0.c2)<(t0.c2)))) AND ((CASE WHEN vt0.c0 THEN t0.c2 ELSE t0.c1 END))) FULL OUTER JOIN t1 ON (((rt0.c2)) NOT BETWEEN ((t0.c0 COLLATE RTRIM)) AND ((ROUND(vt0.c0, 1.993799443E9))));
SELECT rt0.c2, vt0.c0, rt0.c0, t1.c59, t0.c2, t0.c1, rt0.c1 FROM t1, vt0, rt0, t0 GROUP BY rt0.c2, vt0.c0, rt0.c0, t1.c59, t0.c2, t0.c1, rt0.c1;
SELECT rt0.c2, vt0.c0, rt0.c0, t1.c59, t0.c2, t0.c1, rt0.c1 FROM t1, vt0, rt0, t0 WHERE (((ABS(t0.c2))*(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2))))) GROUP BY rt0.c2, vt0.c0, rt0.c0, t1.c59, t0.c2, t0.c1, rt0.c1 UNION SELECT ALL rt0.c2, vt0.c0, rt0.c0, t1.c59, t0.c2, t0.c1, rt0.c1 FROM t1, vt0, rt0, t0 WHERE ((NOT (((ABS(t0.c2))*(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2))))))) GROUP BY rt0.c2, vt0.c0, rt0.c0, t1.c59, t0.c2, t0.c1, rt0.c1 UNION SELECT rt0.c2, vt0.c0, rt0.c0, t1.c59, t0.c2, t0.c1, rt0.c1 FROM t1, vt0, rt0, t0 WHERE (((((ABS(t0.c2))*(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2))))) ISNULL)) GROUP BY rt0.c2, vt0.c0, rt0.c0, t1.c59, t0.c2, t0.c1, rt0.c1;
SELECT rt0.c2, vt0.c0, rt0.c0, t1.c59, t0.c2, t0.c1, rt0.c1 FROM t1, vt0, rt0, t0 GROUP BY rt0.c2, vt0.c0, rt0.c0, t1.c59, t0.c2, t0.c1, rt0.c1;
SELECT t0.c2 FROM t0, t1 GROUP BY t0.c2;
SELECT t0.c2 FROM t0, t1 GROUP BY t0.c2 HAVING ((((((((CASE WHEN MIN(t0.c0) THEN t0.c1 ELSE COUNT(t0.c2) END)AND(COUNT(AVG(TOTAL(t0.c2))))))OR(SUM(t0.c0))))OR(((((TOTAL(t0.c1))OR(t0.c1)))AND(AVG(t0.c1))))))AND(AVG(GROUP_CONCAT(AVG(TOTAL(AVG(t0.c2))))))) UNION ALL SELECT t0.c2 FROM t0, t1 GROUP BY t0.c2 HAVING (NOT (((((((((CASE WHEN MIN(t0.c0) THEN t0.c1 ELSE COUNT(t0.c2) END)AND(COUNT(AVG(TOTAL(t0.c2))))))OR(SUM(t0.c0))))OR(((((TOTAL(t0.c1))OR(t0.c1)))AND(AVG(t0.c1))))))AND(AVG(GROUP_CONCAT(AVG(TOTAL(AVG(t0.c2))))))))) UNION ALL SELECT ALL t0.c2 FROM t0 NOT INDEXED, t1 GROUP BY t0.c2 HAVING ((((((((((CASE WHEN MIN(t0.c0) THEN t0.c1 ELSE COUNT(t0.c2) END)AND(COUNT(AVG(TOTAL(t0.c2))))))OR(SUM(t0.c0))))OR(((((TOTAL(t0.c1))OR(t0.c1)))AND(AVG(t0.c1))))))AND(AVG(GROUP_CONCAT(AVG(TOTAL(AVG(t0.c2)))))))) ISNULL);
SELECT ALL rt0.c1 FROM t0 CROSS JOIN rt0 ON ((((rt0.c0) IS TRUE)) BETWEEN (t1.c59) AND (1843643134)) LEFT OUTER JOIN t1 ON (NOT ((- (rt0.c0))));
SELECT rt0.c1 FROM t0 CROSS JOIN rt0 ON ((((rt0.c0) IS TRUE)) BETWEEN (t1.c59) AND (1843643134)) LEFT OUTER JOIN t1 ON (NOT ((- (rt0.c0)))) WHERE ((- (((t1.c59)GLOB(t0.c2))))) UNION ALL SELECT ALL rt0.c1 FROM t0 CROSS JOIN rt0 ON ((((rt0.c0) IS TRUE)) BETWEEN (t1.c59) AND (1843643134)) LEFT OUTER JOIN t1 ON (NOT ((- (rt0.c0)))) WHERE ((NOT ((- (((t1.c59)GLOB(t0.c2))))))) UNION ALL SELECT rt0.c1 FROM t0 CROSS JOIN rt0 ON ((((rt0.c0) IS TRUE)) BETWEEN (t1.c59) AND (1843643134)) LEFT OUTER JOIN t1 ON (NOT ((- (rt0.c0)))) WHERE ((((- (((t1.c59)GLOB(t0.c2))))) ISNULL));
SELECT ALL rt0.c1 FROM t0 CROSS JOIN rt0 ON ((((rt0.c0) IS TRUE)) BETWEEN (t1.c59) AND (1843643134)) LEFT OUTER JOIN t1 ON (NOT ((- (rt0.c0))));
SELECT DISTINCT vt0.c0, t0.c0, t1.c59, rt0.c0, rt0.c1 FROM t0, vt0, rt0, t1;
SELECT DISTINCT vt0.c0, t0.c0, t1.c59, rt0.c0, rt0.c1 FROM t0, vt0, rt0, t1 WHERE (rt0.c0) UNION SELECT DISTINCT vt0.c0, t0.c0, t1.c59, rt0.c0, rt0.c1 FROM t0, vt0, rt0, t1 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT vt0.c0, t0.c0, t1.c59, rt0.c0, rt0.c1 FROM t0, vt0, rt0, t1 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT vt0.c0, t0.c0, t1.c59, rt0.c0, rt0.c1 FROM t0, vt0, rt0, t1;
SELECT t1.c59 FROM t1 GROUP BY t1.c59;
SELECT ALL t1.c59 FROM t1 WHERE (CAST(t1.c59 COLLATE NOCASE AS REAL)) GROUP BY t1.c59 UNION SELECT ALL t1.c59 FROM t1 WHERE ((NOT (CAST(t1.c59 COLLATE NOCASE AS REAL)))) GROUP BY t1.c59 UNION SELECT t1.c59 FROM t1 WHERE (((CAST(t1.c59 COLLATE NOCASE AS REAL)) ISNULL)) GROUP BY t1.c59;
SELECT t1.c59 FROM t1 GROUP BY t1.c59;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING COUNT(*) COLLATE NOCASE UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (COUNT(*) COLLATE NOCASE)) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((COUNT(*) COLLATE NOCASE) ISNULL);
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING COUNT(*) COLLATE NOCASE UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (COUNT(*) COLLATE NOCASE)) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((COUNT(*) COLLATE NOCASE) ISNULL);
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT * FROM vt0 NATURAL JOIN rt0;
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE ((((rt0.c1 IN ())) ISNULL)) UNION ALL SELECT * FROM vt0 NATURAL JOIN rt0 WHERE ((NOT ((((rt0.c1 IN ())) ISNULL)))) UNION ALL SELECT ALL * FROM vt0 NATURAL JOIN rt0 WHERE ((((((rt0.c1 IN ())) ISNULL)) ISNULL));
SELECT * FROM vt0 NATURAL JOIN rt0;
SELECT DISTINCT * FROM t1, t0;
SELECT DISTINCT * FROM t1, t0 WHERE (((CASE t1.c59  WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN 0.8671609008361182 WHEN t1.c59 THEN t0.c2 ELSE t0.c2 END) NOT BETWEEN (((t1.c59)%(t1.c59))) AND ((~ (t0.c0))))) UNION SELECT DISTINCT * FROM t1, t0 NOT INDEXED WHERE ((NOT (((CASE t1.c59  WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN 0.8671609008361182 WHEN t1.c59 THEN t0.c2 ELSE t0.c2 END) NOT BETWEEN (((t1.c59)%(t1.c59))) AND ((~ (t0.c0))))))) UNION SELECT DISTINCT * FROM t1, t0 WHERE (((((CASE t1.c59  WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN 0.8671609008361182 WHEN t1.c59 THEN t0.c2 ELSE t0.c2 END) NOT BETWEEN (((t1.c59)%(t1.c59))) AND ((~ (t0.c0))))) ISNULL));
SELECT DISTINCT * FROM t1, t0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((NULL IN ())) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((NULL IN ())))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((NULL IN ())) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MIN(((MAX(COUNT(*))) BETWEEN (vt0.c0) AND (vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MIN(((MAX(COUNT(*))) BETWEEN (vt0.c0) AND (vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN(((MAX(COUNT(*))) BETWEEN (vt0.c0) AND (vt0.c0)))) ISNULL);
SELECT ALL t0.c2, t1.c59, vt0.c0, t0.c0 FROM t0 LEFT OUTER JOIN vt0 ON ((+ (t1.c59)) IN ()) INNER JOIN t1 ON CAST(((t0.c0) IS FALSE) AS INTEGER);
SELECT ALL t0.c2, t1.c59, vt0.c0, t0.c0 FROM t0 LEFT OUTER JOIN vt0 ON ((+ (t1.c59)) IN ()) INNER JOIN t1 ON CAST(((t0.c0) IS FALSE) AS INTEGER) WHERE (COALESCE((('ﵧF㑽a''.Ag')-(t0.c2)), ((t0.c1) NOT BETWEEN (t0.c1) AND (t1.c59)))) UNION ALL SELECT t0.c2, t1.c59, vt0.c0, t0.c0 FROM t0 LEFT OUTER JOIN vt0 ON ((+ (t1.c59)) IN ()) INNER JOIN t1 ON CAST(((t0.c0) IS FALSE) AS INTEGER) WHERE ((NOT (COALESCE((('ﵧF㑽a''.Ag')-(t0.c2)), ((t0.c1) NOT BETWEEN (t0.c1) AND (t1.c59)))))) UNION ALL SELECT ALL t0.c2, t1.c59, vt0.c0, t0.c0 FROM t0 LEFT OUTER JOIN vt0 ON ((+ (t1.c59)) IN ()) INNER JOIN t1 ON CAST(((t0.c0) IS FALSE) AS INTEGER) WHERE (((COALESCE((('ﵧF㑽a''.Ag')-(t0.c2)), ((t0.c1) NOT BETWEEN (t0.c1) AND (t1.c59)))) ISNULL));
SELECT ALL t0.c2, t1.c59, vt0.c0, t0.c0 FROM t0 LEFT OUTER JOIN vt0 ON ((+ (t1.c59)) IN ()) INNER JOIN t1 ON CAST(((t0.c0) IS FALSE) AS INTEGER);
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c1) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL t1.c59, rt0.c0, rt0.c2, rt0.c1, t0.c2, t0.c1, t0.c0 FROM t1 INNER JOIN rt0 ON 0.810424976007268 CROSS JOIN t0 ON ((t0.c2 COLLATE NOCASE) NOTNULL) GROUP BY t1.c59, rt0.c0, rt0.c2, rt0.c1, t0.c2, t0.c1, t0.c0;
SELECT t1.c59, rt0.c0, rt0.c2, rt0.c1, t0.c2, t0.c1, t0.c0 FROM t1 INNER JOIN rt0 ON 0.810424976007268 CROSS JOIN t0 ON ((t0.c2 COLLATE NOCASE) NOTNULL) WHERE (((CASE rt0.c0  WHEN t0.c0 THEN t0.c0 END)-(((t0.c2)>(t0.c0))))) GROUP BY t1.c59, rt0.c0, rt0.c2, rt0.c1, t0.c2, t0.c1, t0.c0 UNION SELECT t1.c59, rt0.c0, rt0.c2, rt0.c1, t0.c2, t0.c1, t0.c0 FROM t1 INNER JOIN rt0 ON 0.810424976007268 CROSS JOIN t0 ON ((t0.c2 COLLATE NOCASE) NOTNULL) WHERE ((NOT (((CASE rt0.c0  WHEN t0.c0 THEN t0.c0 END)-(((t0.c2)>(t0.c0))))))) GROUP BY t1.c59, rt0.c0, rt0.c2, rt0.c1, t0.c2, t0.c1, t0.c0 UNION SELECT t1.c59, rt0.c0, rt0.c2, rt0.c1, t0.c2, t0.c1, t0.c0 FROM t1 INNER JOIN rt0 ON 0.810424976007268 CROSS JOIN t0 ON ((t0.c2 COLLATE NOCASE) NOTNULL) WHERE (((((CASE rt0.c0  WHEN t0.c0 THEN t0.c0 END)-(((t0.c2)>(t0.c0))))) ISNULL)) GROUP BY t1.c59, rt0.c0, rt0.c2, rt0.c1, t0.c2, t0.c1, t0.c0;
SELECT ALL t1.c59, rt0.c0, rt0.c2, rt0.c1, t0.c2, t0.c1, t0.c0 FROM t1 INNER JOIN rt0 ON 0.810424976007268 CROSS JOIN t0 ON ((t0.c2 COLLATE NOCASE) NOTNULL) GROUP BY t1.c59, rt0.c0, rt0.c2, rt0.c1, t0.c2, t0.c1, t0.c0;
SELECT t0.c1 FROM t0 GROUP BY t0.c1;
SELECT t0.c1 FROM t0 GROUP BY t0.c1 HAVING COUNT(*) UNION ALL SELECT t0.c1 FROM t0 GROUP BY t0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c1 FROM t0 GROUP BY t0.c1;
SELECT t0.c1 FROM t0 GROUP BY t0.c1 HAVING COUNT(*) UNION ALL SELECT t0.c1 FROM t0 GROUP BY t0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c1 FROM t0 GROUP BY t0.c1;
SELECT rt0.c1, t1.c59, rt0.c0, t0.c0 FROM t0, rt0, vt0, t1;
SELECT ALL rt0.c1, t1.c59, rt0.c0, t0.c0 FROM t0, rt0, vt0, t1 WHERE (((((t0.c2) NOT BETWEEN (t0.c0) AND (rt0.c1)))||(COALESCE(DISTINCT vt0.c0, vt0.c0, x'', t0.c2)))) UNION ALL SELECT rt0.c1, t1.c59, rt0.c0, t0.c0 FROM t0, rt0, vt0, t1 WHERE ((NOT (((((t0.c2) NOT BETWEEN (t0.c0) AND (rt0.c1)))||(COALESCE(DISTINCT vt0.c0, vt0.c0, x'', t0.c2)))))) UNION ALL SELECT rt0.c1, t1.c59, rt0.c0, t0.c0 FROM t0, rt0, vt0, t1 WHERE (((((((t0.c2) NOT BETWEEN (t0.c0) AND (rt0.c1)))||(COALESCE(DISTINCT vt0.c0, vt0.c0, x'', t0.c2)))) ISNULL));
SELECT rt0.c1, t1.c59, rt0.c0, t0.c0 FROM t0, rt0, vt0, t1;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((((t0.c1)LIKE(NULL)) IN (CASE t0.c2  WHEN t0.c1 THEN t0.c0 END, x''))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((((t0.c1)LIKE(NULL)) IN (CASE t0.c2  WHEN t0.c1 THEN t0.c0 END, x''))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((((t0.c1)LIKE(NULL)) IN (CASE t0.c2  WHEN t0.c1 THEN t0.c0 END, x''))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t1.c59 FROM t1 GROUP BY t1.c59;
SELECT t1.c59 FROM t1 WHERE (CAST(((NULL) IS FALSE) AS BLOB)) GROUP BY t1.c59 UNION SELECT ALL t1.c59 FROM t1 WHERE ((NOT (CAST(((NULL) IS FALSE) AS BLOB)))) GROUP BY t1.c59 UNION SELECT t1.c59 FROM t1 WHERE (((CAST(((NULL) IS FALSE) AS BLOB)) ISNULL)) GROUP BY t1.c59;
SELECT t1.c59 FROM t1 GROUP BY t1.c59;
SELECT ALL t1.c59, rt0.c0, rt0.c1, t0.c2, t0.c1, t0.c0, vt0.c0, rt0.c2 FROM t0, rt0, vt0, t1 GROUP BY t1.c59, rt0.c0, rt0.c1, t0.c2, t0.c1, t0.c0, vt0.c0, rt0.c2;
SELECT t1.c59, rt0.c0, rt0.c1, t0.c2, t0.c1, t0.c0, vt0.c0, rt0.c2 FROM t0, rt0, vt0, t1 GROUP BY t1.c59, rt0.c0, rt0.c1, t0.c2, t0.c1, t0.c0, vt0.c0, rt0.c2 HAVING (MIN(TOTAL(AVG(SUM(COUNT(SUM(SUM(COUNT(t1.c59)))))))) IN ()) UNION ALL SELECT ALL t1.c59, rt0.c0, rt0.c1, t0.c2, t0.c1, t0.c0, vt0.c0, rt0.c2 FROM t0, rt0, vt0, t1 GROUP BY t1.c59, rt0.c0, rt0.c1, t0.c2, t0.c1, t0.c0, vt0.c0, rt0.c2 HAVING (NOT ((MIN(TOTAL(AVG(SUM(COUNT(SUM(SUM(COUNT(t1.c59)))))))) IN ()))) UNION ALL SELECT t1.c59, rt0.c0, rt0.c1, t0.c2, t0.c1, t0.c0, vt0.c0, rt0.c2 FROM t0, rt0, vt0, t1 GROUP BY t1.c59, rt0.c0, rt0.c1, t0.c2, t0.c1, t0.c0, vt0.c0, rt0.c2 HAVING (((MIN(TOTAL(AVG(SUM(COUNT(SUM(SUM(COUNT(t1.c59)))))))) IN ())) ISNULL);
SELECT ALL t1.c59, rt0.c0, rt0.c1, t0.c2, t0.c1, t0.c0, vt0.c0, rt0.c2 FROM t0, rt0, vt0, t1 GROUP BY t1.c59, rt0.c0, rt0.c1, t0.c2, t0.c1, t0.c0, vt0.c0, rt0.c2;
SELECT t1.c59, rt0.c0, rt0.c1, t0.c2, t0.c1, t0.c0, vt0.c0, rt0.c2 FROM t0, rt0, vt0, t1 GROUP BY t1.c59, rt0.c0, rt0.c1, t0.c2, t0.c1, t0.c0, vt0.c0, rt0.c2 HAVING (MIN(TOTAL(AVG(SUM(COUNT(SUM(SUM(COUNT(t1.c59)))))))) IN ()) UNION ALL SELECT ALL t1.c59, rt0.c0, rt0.c1, t0.c2, t0.c1, t0.c0, vt0.c0, rt0.c2 FROM t0, rt0, vt0, t1 GROUP BY t1.c59, rt0.c0, rt0.c1, t0.c2, t0.c1, t0.c0, vt0.c0, rt0.c2 HAVING (NOT ((MIN(TOTAL(AVG(SUM(COUNT(SUM(SUM(COUNT(t1.c59)))))))) IN ()))) UNION ALL SELECT t1.c59, rt0.c0, rt0.c1, t0.c2, t0.c1, t0.c0, vt0.c0, rt0.c2 FROM t0, rt0, vt0, t1 GROUP BY t1.c59, rt0.c0, rt0.c1, t0.c2, t0.c1, t0.c0, vt0.c0, rt0.c2 HAVING (((MIN(TOTAL(AVG(SUM(COUNT(SUM(SUM(COUNT(t1.c59)))))))) IN ())) ISNULL);
SELECT ALL t1.c59, rt0.c0, rt0.c1, t0.c2, t0.c1, t0.c0, vt0.c0, rt0.c2 FROM t0, rt0, vt0, t1 GROUP BY t1.c59, rt0.c0, rt0.c1, t0.c2, t0.c1, t0.c0, vt0.c0, rt0.c2;
SELECT * FROM t1, t0 FULL OUTER JOIN vt0 ON ((t0.c0)<=(MAX(t0.c2, rt0.c1))) CROSS JOIN rt0 ON UNLIKELY(t0.c2 COLLATE NOCASE);
SELECT DISTINCT * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0 WHERE (('<g' IN ())) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((NOT (('<g' IN ())))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE (((('<g' IN ())) ISNULL));
SELECT DISTINCT * FROM t0, vt0;
SELECT t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1;
SELECT t0.c2, t0.c0, t0.c1 FROM t0 WHERE (((t0.c1)OR(t0.c0)) COLLATE NOCASE) GROUP BY t0.c2, t0.c0, t0.c1 UNION SELECT t0.c2, t0.c0, t0.c1 FROM t0 WHERE ((NOT (((t0.c1)OR(t0.c0)) COLLATE NOCASE))) GROUP BY t0.c2, t0.c0, t0.c1 UNION SELECT t0.c2, t0.c0, t0.c1 FROM t0 WHERE (((((t0.c1)OR(t0.c0)) COLLATE NOCASE) ISNULL)) GROUP BY t0.c2, t0.c0, t0.c1;
SELECT t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1;
SELECT ALL t1.c59, vt0.c0, rt0.c0, rt0.c1 FROM rt0, vt0, t1 GROUP BY t1.c59, vt0.c0, rt0.c0, rt0.c1;
SELECT ALL t1.c59, vt0.c0, rt0.c0, rt0.c1 FROM rt0, vt0, t1 GROUP BY t1.c59, vt0.c0, rt0.c0, rt0.c1 HAVING CASE WHEN MIN(rt0.c2) THEN SUM(rt0.c2) ELSE SUM(rt0.c1) END UNION ALL SELECT ALL t1.c59, vt0.c0, rt0.c0, rt0.c1 FROM rt0, vt0, t1 GROUP BY t1.c59, vt0.c0, rt0.c0, rt0.c1 HAVING (NOT (CASE WHEN MIN(rt0.c2) THEN SUM(rt0.c2) ELSE SUM(rt0.c1) END)) UNION ALL SELECT t1.c59, vt0.c0, rt0.c0, rt0.c1 FROM rt0, vt0, t1 GROUP BY t1.c59, vt0.c0, rt0.c0, rt0.c1 HAVING ((CASE WHEN MIN(rt0.c2) THEN SUM(rt0.c2) ELSE SUM(rt0.c1) END) ISNULL);
SELECT ALL t1.c59, vt0.c0, rt0.c0, rt0.c1 FROM rt0, vt0, t1 GROUP BY t1.c59, vt0.c0, rt0.c0, rt0.c1;
SELECT ALL t1.c59, vt0.c0, rt0.c0, rt0.c1 FROM rt0, vt0, t1 GROUP BY t1.c59, vt0.c0, rt0.c0, rt0.c1 HAVING CASE WHEN MIN(rt0.c2) THEN SUM(rt0.c2) ELSE SUM(rt0.c1) END UNION ALL SELECT ALL t1.c59, vt0.c0, rt0.c0, rt0.c1 FROM rt0, vt0, t1 GROUP BY t1.c59, vt0.c0, rt0.c0, rt0.c1 HAVING (NOT (CASE WHEN MIN(rt0.c2) THEN SUM(rt0.c2) ELSE SUM(rt0.c1) END)) UNION ALL SELECT t1.c59, vt0.c0, rt0.c0, rt0.c1 FROM rt0, vt0, t1 GROUP BY t1.c59, vt0.c0, rt0.c0, rt0.c1 HAVING ((CASE WHEN MIN(rt0.c2) THEN SUM(rt0.c2) ELSE SUM(rt0.c1) END) ISNULL);
SELECT ALL t1.c59, vt0.c0, rt0.c0, rt0.c1 FROM rt0, vt0, t1 GROUP BY t1.c59, vt0.c0, rt0.c0, rt0.c1;
SELECT * FROM t1, t0, rt0, vt0;
SELECT * FROM t1, t0, rt0, vt0 WHERE ('Qzs6Ya') UNION ALL SELECT ALL * FROM t1, t0, rt0, vt0 WHERE ((NOT ('Qzs6Ya'))) UNION ALL SELECT * FROM t1, t0, rt0, vt0 WHERE ((('Qzs6Ya') ISNULL));
SELECT * FROM t1, t0, rt0, vt0;
SELECT DISTINCT * FROM t0 NOT INDEXED, rt0, vt0;
SELECT DISTINCT * FROM t0, rt0, vt0 WHERE (LIKELIHOOD(((t0.c2) BETWEEN (vt0.c0) AND (t0.c1)), 0.02668269155425751)) UNION SELECT DISTINCT * FROM t0, rt0, vt0 WHERE ((NOT (LIKELIHOOD(((t0.c2) BETWEEN (vt0.c0) AND (t0.c1)), 0.02668269155425751)))) UNION SELECT DISTINCT * FROM t0, rt0, vt0 WHERE (((LIKELIHOOD(((t0.c2) BETWEEN (vt0.c0) AND (t0.c1)), 0.02668269155425751)) ISNULL));
SELECT DISTINCT * FROM t0 NOT INDEXED, rt0, vt0;
SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2;
SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 WHERE (((((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c0))) IS TRUE)) GROUP BY t0.c1, t0.c0, t0.c2 UNION SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 WHERE ((NOT (((((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c0))) IS TRUE)))) GROUP BY t0.c1, t0.c0, t0.c2 UNION SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 WHERE (((((((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c0))) IS TRUE)) ISNULL)) GROUP BY t0.c1, t0.c0, t0.c2;
SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2;
SELECT t0.c1 FROM t1, t0 GROUP BY t0.c1;
SELECT t0.c1 FROM t1, t0 GROUP BY t0.c1 HAVING '>' UNION ALL SELECT ALL t0.c1 FROM t1, t0 GROUP BY t0.c1 HAVING (NOT ('>')) UNION ALL SELECT ALL t0.c1 FROM t1, t0 GROUP BY t0.c1 HAVING (('>') ISNULL);
SELECT t0.c1 FROM t1, t0 GROUP BY t0.c1;
SELECT t0.c1 FROM t1, t0 GROUP BY t0.c1 HAVING '>' UNION ALL SELECT ALL t0.c1 FROM t1, t0 GROUP BY t0.c1 HAVING (NOT ('>')) UNION ALL SELECT ALL t0.c1 FROM t1, t0 GROUP BY t0.c1 HAVING (('>') ISNULL);
SELECT t0.c1 FROM t1, t0 GROUP BY t0.c1;
SELECT t0.c2, t0.c0, t1.c59, t0.c1 FROM t1, t0;
SELECT ALL t0.c2, t0.c0, t1.c59, t0.c1 FROM t1, t0 WHERE ((((((- (t0.c1)))AND(load_extension(t0.c1, t1.c59))))OR('r'))) UNION ALL SELECT ALL t0.c2, t0.c0, t1.c59, t0.c1 FROM t1, t0 WHERE ((NOT ((((((- (t0.c1)))AND(load_extension(t0.c1, t1.c59))))OR('r'))))) UNION ALL SELECT t0.c2, t0.c0, t1.c59, t0.c1 FROM t1, t0 WHERE ((((((((- (t0.c1)))AND(load_extension(t0.c1, t1.c59))))OR('r'))) ISNULL));
SELECT DISTINCT * FROM t0, vt0, rt0, t1;
SELECT DISTINCT * FROM t0, vt0, rt0, t1 WHERE (t0.c1) UNION SELECT DISTINCT * FROM t0, vt0, rt0, t1 WHERE ((NOT (t0.c1))) UNION SELECT DISTINCT * FROM t0, vt0, rt0, t1 WHERE (((t0.c1) ISNULL));
SELECT DISTINCT * FROM t0, vt0, rt0, t1;
SELECT ALL t0.c0, t0.c2 FROM rt0, t0, t1, vt0 GROUP BY t0.c0, t0.c2;
SELECT ALL t0.c0, t0.c2 FROM rt0, t0, t1, vt0 WHERE ('-1126210857' COLLATE NOCASE) GROUP BY t0.c0, t0.c2 UNION SELECT ALL t0.c0, t0.c2 FROM rt0, t0, t1, vt0 WHERE ((NOT ('-1126210857' COLLATE NOCASE))) GROUP BY t0.c0, t0.c2 UNION SELECT t0.c0, t0.c2 FROM rt0, t0, t1, vt0 WHERE ((('-1126210857' COLLATE NOCASE) ISNULL)) GROUP BY t0.c0, t0.c2;
SELECT ALL t0.c0, t0.c2 FROM rt0, t0, t1, vt0 GROUP BY t0.c0, t0.c2;
SELECT ALL t0.c1, t0.c2 FROM t0, t1 GROUP BY t0.c1, t0.c2;
SELECT ALL t0.c1, t0.c2 FROM t0, t1 GROUP BY t0.c1, t0.c2 HAVING NULLIF(DISTINCT MAX(GROUP_CONCAT(TOTAL(COUNT(*)))), AVG(t0.c2)) UNION ALL SELECT t0.c1, t0.c2 FROM t0, t1 GROUP BY t0.c1, t0.c2 HAVING (NOT (NULLIF(DISTINCT MAX(GROUP_CONCAT(TOTAL(COUNT(*)))), AVG(t0.c2)))) UNION ALL SELECT ALL t0.c1, t0.c2 FROM t0, t1 GROUP BY t0.c1, t0.c2 HAVING ((NULLIF(DISTINCT MAX(GROUP_CONCAT(TOTAL(COUNT(*)))), AVG(t0.c2))) ISNULL);
SELECT vt0.c0, t0.c1, rt0.c2, t0.c0, rt0.c0, rt0.c1 FROM vt0, t1, rt0, t0;
SELECT vt0.c0, t0.c1, rt0.c2, t0.c0, rt0.c0, rt0.c1 FROM vt0, t1, rt0, t0 WHERE ((((t0.c2)AND(t0.c2)) IN (((vt0.c0)&(t0.c1))))) UNION ALL SELECT ALL vt0.c0, t0.c1, rt0.c2, t0.c0, rt0.c0, rt0.c1 FROM vt0, t1, rt0, t0 WHERE ((NOT ((((t0.c2)AND(t0.c2)) IN (((vt0.c0)&(t0.c1))))))) UNION ALL SELECT ALL vt0.c0, t0.c1, rt0.c2, t0.c0, rt0.c0, rt0.c1 FROM vt0, t1, rt0, t0 WHERE ((((((t0.c2)AND(t0.c2)) IN (((vt0.c0)&(t0.c1))))) ISNULL));
SELECT vt0.c0, t0.c1, rt0.c2, t0.c0, rt0.c0, rt0.c1 FROM vt0, t1, rt0, t0;
SELECT DISTINCT * FROM t1, t0;
SELECT DISTINCT * FROM t1, t0 WHERE ((((t1.c59, NULL, t0.c1)) NOT BETWEEN ((t0.c0, t1.c59, t1.c59)) AND ((-1421721964, t1.c59, t0.c1))) COLLATE RTRIM) UNION SELECT DISTINCT * FROM t1, t0 WHERE ((NOT ((((t1.c59, NULL, t0.c1)) NOT BETWEEN ((t0.c0, t1.c59, t1.c59)) AND ((-1421721964, t1.c59, t0.c1))) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM t1, t0 WHERE ((((((t1.c59, NULL, t0.c1)) NOT BETWEEN ((t0.c0, t1.c59, t1.c59)) AND ((-1421721964, t1.c59, t0.c1))) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM t1, t0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((x'7244')%(x'6123' COLLATE RTRIM))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((x'7244')%(x'6123' COLLATE RTRIM))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((x'7244')%(x'6123' COLLATE RTRIM))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL t0.c1, t0.c0 FROM t1, t0 GROUP BY t0.c1, t0.c0;
SELECT ALL t0.c1, t0.c0 FROM t1, t0 GROUP BY t0.c1, t0.c0 HAVING SUM(t0.c1) UNION ALL SELECT ALL t0.c1, t0.c0 FROM t1, t0 GROUP BY t0.c1, t0.c0 HAVING (NOT (SUM(t0.c1))) UNION ALL SELECT t0.c1, t0.c0 FROM t1, t0 GROUP BY t0.c1, t0.c0 HAVING ((SUM(t0.c1)) ISNULL);
SELECT ALL t0.c1, t0.c0 FROM t1, t0 GROUP BY t0.c1, t0.c0;
SELECT ALL t0.c1, t0.c0 FROM t1, t0 GROUP BY t0.c1, t0.c0 HAVING SUM(t0.c1) UNION ALL SELECT ALL t0.c1, t0.c0 FROM t1, t0 GROUP BY t0.c1, t0.c0 HAVING (NOT (SUM(t0.c1))) UNION ALL SELECT t0.c1, t0.c0 FROM t1, t0 GROUP BY t0.c1, t0.c0 HAVING ((SUM(t0.c1)) ISNULL);
SELECT ALL t0.c1, t0.c0 FROM t1, t0 GROUP BY t0.c1, t0.c0;
SELECT vt0.c0 FROM t1, t0, vt0, rt0;
SELECT ALL vt0.c0 FROM t1, t0, vt0, rt0 WHERE (((+ (vt0.c0)) IN ())) UNION ALL SELECT vt0.c0 FROM t1, t0, vt0, rt0 WHERE ((NOT (((+ (vt0.c0)) IN ())))) UNION ALL SELECT vt0.c0 FROM t1, t0, vt0, rt0 WHERE (((((+ (vt0.c0)) IN ())) ISNULL));
SELECT vt0.c0 FROM t1, t0, vt0, rt0;
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN t1 ON CAST('2123663361' AS NUMERIC) COLLATE BINARY;
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN t1 ON CAST('2123663361' AS NUMERIC) COLLATE BINARY WHERE ((((((((t1.c59)AND(t1.c59)))OR(t1.c59))))!=((((vt0.c0)<(t1.c59)))))) UNION SELECT DISTINCT * FROM vt0 FULL OUTER JOIN t1 ON CAST('2123663361' AS NUMERIC) COLLATE BINARY WHERE ((NOT ((((((((t1.c59)AND(t1.c59)))OR(t1.c59))))!=((((vt0.c0)<(t1.c59)))))))) UNION SELECT DISTINCT * FROM vt0 FULL OUTER JOIN t1 ON CAST('2123663361' AS NUMERIC) COLLATE BINARY WHERE ((((((((((t1.c59)AND(t1.c59)))OR(t1.c59))))!=((((vt0.c0)<(t1.c59)))))) ISNULL));
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN t1 ON CAST('2123663361' AS NUMERIC) COLLATE BINARY;
SELECT ALL t1.c59, rt0.c0, rt0.c2 FROM rt0 INNER JOIN vt0 ON CAST((t1.c59 IN ()) AS INTEGER) LEFT OUTER JOIN t1 ON ((t1.c59 COLLATE BINARY) NOT NULL) GROUP BY t1.c59, rt0.c0, rt0.c2;
SELECT ALL t1.c59, rt0.c0, rt0.c2 FROM rt0 INNER JOIN vt0 ON CAST((t1.c59 IN ()) AS INTEGER) LEFT OUTER JOIN t1 ON ((t1.c59 COLLATE BINARY) NOT NULL) WHERE (t1.c59) GROUP BY t1.c59, rt0.c0, rt0.c2 UNION SELECT ALL t1.c59, rt0.c0, rt0.c2 FROM rt0 INNER JOIN vt0 ON CAST((t1.c59 IN ()) AS INTEGER) LEFT OUTER JOIN t1 ON ((t1.c59 COLLATE BINARY) NOT NULL) WHERE ((NOT (t1.c59))) GROUP BY t1.c59, rt0.c0, rt0.c2 UNION SELECT ALL t1.c59, rt0.c0, rt0.c2 FROM rt0 INNER JOIN vt0 ON CAST((t1.c59 IN ()) AS INTEGER) LEFT OUTER JOIN t1 ON ((t1.c59 COLLATE BINARY) NOT NULL) WHERE (((t1.c59) ISNULL)) GROUP BY t1.c59, rt0.c0, rt0.c2;
SELECT ALL t1.c59, rt0.c0, rt0.c2 FROM rt0 INNER JOIN vt0 ON CAST((t1.c59 IN ()) AS INTEGER) LEFT OUTER JOIN t1 ON ((t1.c59 COLLATE BINARY) NOT NULL) GROUP BY t1.c59, rt0.c0, rt0.c2;
SELECT ALL rt0.c0, t0.c0, t0.c1, t0.c2, vt0.c0, rt0.c1, rt0.c2, t1.c59 FROM rt0, vt0, t1, t0 GROUP BY rt0.c0, t0.c0, t0.c1, t0.c2, vt0.c0, rt0.c1, rt0.c2, t1.c59;
SELECT rt0.c0, t0.c0, t0.c1, t0.c2, vt0.c0, rt0.c1, rt0.c2, t1.c59 FROM rt0, vt0, t1, t0 GROUP BY rt0.c0, t0.c0, t0.c1, t0.c2, vt0.c0, rt0.c1, rt0.c2, t1.c59 HAVING TOTAL(MIN(t0.c2)) UNION ALL SELECT rt0.c0, t0.c0, t0.c1, t0.c2, vt0.c0, rt0.c1, rt0.c2, t1.c59 FROM rt0, vt0, t1, t0 GROUP BY rt0.c0, t0.c0, t0.c1, t0.c2, vt0.c0, rt0.c1, rt0.c2, t1.c59 HAVING (NOT (TOTAL(MIN(t0.c2)))) UNION ALL SELECT ALL rt0.c0, t0.c0, t0.c1, t0.c2, vt0.c0, rt0.c1, rt0.c2, t1.c59 FROM rt0, vt0, t1, t0 GROUP BY rt0.c0, t0.c0, t0.c1, t0.c2, vt0.c0, rt0.c1, rt0.c2, t1.c59 HAVING ((TOTAL(MIN(t0.c2))) ISNULL);
SELECT ALL rt0.c1, vt0.c0, t0.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN vt0 ON CASE WHEN 0.9901216882516404 THEN vt0.c0 WHEN t0.c2 THEN t0.c2 WHEN vt0.c0 THEN rt0.c1 END COLLATE BINARY LEFT OUTER JOIN t1 ON CASE WHEN t0.c2 COLLATE BINARY THEN (rt0.c1 IN ()) ELSE t0.c1 END LEFT OUTER JOIN t0 ON CASE ((vt0.c0) NOT BETWEEN (t1.c59) AND (t1.c59))  WHEN ((6.29947462E8) NOT NULL) THEN x'' ELSE (((t0.c1)) NOT BETWEEN ((rt0.c1)) AND ((620166477))) END;
SELECT DISTINCT vt0.c0, rt0.c1, t0.c0, t0.c2, rt0.c0 FROM vt0, t1, t0, rt0;
SELECT DISTINCT vt0.c0, rt0.c1, t0.c0, t0.c2, rt0.c0 FROM vt0, t1, t0, rt0 WHERE (NULL) UNION SELECT DISTINCT vt0.c0, rt0.c1, t0.c0, t0.c2, rt0.c0 FROM vt0, t1 NOT INDEXED, t0, rt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT vt0.c0, rt0.c1, t0.c0, t0.c2, rt0.c0 FROM vt0, t1, t0, rt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c1, t0.c0, t0.c2, rt0.c0 FROM vt0, t1, t0, rt0;
SELECT ALL t1.c59 FROM t1 GROUP BY t1.c59;
SELECT ALL t1.c59 FROM t1 WHERE (((((t1.c59) NOTNULL))/(((t1.c59) IS TRUE)))) GROUP BY t1.c59 UNION SELECT t1.c59 FROM t1 WHERE ((NOT (((((t1.c59) NOTNULL))/(((t1.c59) IS TRUE)))))) GROUP BY t1.c59 UNION SELECT ALL t1.c59 FROM t1 WHERE (((((((t1.c59) NOTNULL))/(((t1.c59) IS TRUE)))) ISNULL)) GROUP BY t1.c59;
SELECT ALL t1.c59 FROM t1 GROUP BY t1.c59;
SELECT ALL rt0.c0, t0.c0, rt0.c2, t0.c1 FROM t1, rt0, t0, vt0 GROUP BY rt0.c0, t0.c0, rt0.c2, t0.c1;
SELECT rt0.c0, t0.c0, rt0.c2, t0.c1 FROM t1, rt0, t0, vt0 GROUP BY rt0.c0, t0.c0, rt0.c2, t0.c1 HAVING COUNT(*) UNION ALL SELECT rt0.c0, t0.c0, rt0.c2, t0.c1 FROM t1, rt0, t0, vt0 GROUP BY rt0.c0, t0.c0, rt0.c2, t0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c0, t0.c0, rt0.c2, t0.c1 FROM t1, rt0, t0, vt0 GROUP BY rt0.c0, t0.c0, rt0.c2, t0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0, t0.c0, rt0.c2, t0.c1 FROM t1, rt0, t0, vt0 GROUP BY rt0.c0, t0.c0, rt0.c2, t0.c1;
SELECT rt0.c0, t0.c0, rt0.c2, t0.c1 FROM t1, rt0, t0, vt0 GROUP BY rt0.c0, t0.c0, rt0.c2, t0.c1 HAVING COUNT(*) UNION ALL SELECT rt0.c0, t0.c0, rt0.c2, t0.c1 FROM t1, rt0, t0, vt0 GROUP BY rt0.c0, t0.c0, rt0.c2, t0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c0, t0.c0, rt0.c2, t0.c1 FROM t1, rt0, t0, vt0 GROUP BY rt0.c0, t0.c0, rt0.c2, t0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0, t0.c0, rt0.c2, t0.c1 FROM t1, rt0, t0, vt0 GROUP BY rt0.c0, t0.c0, rt0.c2, t0.c1;
SELECT vt0.c0 FROM rt0, t1, vt0;
SELECT vt0.c0 FROM rt0, t1, vt0 WHERE ((((rt0.c0) NOT BETWEEN (t1.c59) AND (vt0.c0)) IN ((((vt0.c0)) BETWEEN ((t1.c59)) AND ((t1.c59)))))) UNION ALL SELECT vt0.c0 FROM rt0, t1, vt0 WHERE ((NOT ((((rt0.c0) NOT BETWEEN (t1.c59) AND (vt0.c0)) IN ((((vt0.c0)) BETWEEN ((t1.c59)) AND ((t1.c59)))))))) UNION ALL SELECT vt0.c0 FROM rt0, t1, vt0 WHERE ((((((rt0.c0) NOT BETWEEN (t1.c59) AND (vt0.c0)) IN ((((vt0.c0)) BETWEEN ((t1.c59)) AND ((t1.c59)))))) ISNULL));
SELECT vt0.c0 FROM rt0, t1, vt0;
SELECT DISTINCT * FROM vt0, t0, rt0, t1;
SELECT DISTINCT * FROM vt0, t0, rt0, t1 WHERE (((((+ (t1.c59))))=((((rt0.c2)%(rt0.c0)))))) UNION SELECT DISTINCT * FROM vt0, t0, rt0, t1 WHERE ((NOT (((((+ (t1.c59))))=((((rt0.c2)%(rt0.c0)))))))) UNION SELECT DISTINCT * FROM vt0, t0, rt0, t1 WHERE (((((((+ (t1.c59))))=((((rt0.c2)%(rt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt0, t0, rt0, t1;
SELECT ALL t0.c1, vt0.c0, rt0.c1, t0.c2, t1.c59, rt0.c0 FROM rt0, t1, t0, vt0 GROUP BY t0.c1, vt0.c0, rt0.c1, t0.c2, t1.c59, rt0.c0;
SELECT ALL t0.c1, vt0.c0, rt0.c1, t0.c2, t1.c59, rt0.c0 FROM rt0, t1, t0, vt0 WHERE (((((rt0.c1)&(rt0.c2)))LIKE(((rt0.c0) NOT BETWEEN (x'e527') AND (rt0.c0))))) GROUP BY t0.c1, vt0.c0, rt0.c1, t0.c2, t1.c59, rt0.c0 UNION SELECT t0.c1, vt0.c0, rt0.c1, t0.c2, t1.c59, rt0.c0 FROM rt0, t1, t0, vt0 WHERE ((NOT (((((rt0.c1)&(rt0.c2)))LIKE(((rt0.c0) NOT BETWEEN (x'e527') AND (rt0.c0))))))) GROUP BY t0.c1, vt0.c0, rt0.c1, t0.c2, t1.c59, rt0.c0 UNION SELECT ALL t0.c1, vt0.c0, rt0.c1, t0.c2, t1.c59, rt0.c0 FROM rt0, t1, t0, vt0 WHERE (((((((rt0.c1)&(rt0.c2)))LIKE(((rt0.c0) NOT BETWEEN (x'e527') AND (rt0.c0))))) ISNULL)) GROUP BY t0.c1, vt0.c0, rt0.c1, t0.c2, t1.c59, rt0.c0;
SELECT ALL t0.c1, vt0.c0, rt0.c1, t0.c2, t1.c59, rt0.c0 FROM rt0, t1, t0, vt0 GROUP BY t0.c1, vt0.c0, rt0.c1, t0.c2, t1.c59, rt0.c0;
SELECT ALL t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0;
SELECT ALL t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0 HAVING CAST(COUNT(t0.c0) AS TEXT) UNION ALL SELECT t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0 HAVING (NOT (CAST(COUNT(t0.c0) AS TEXT))) UNION ALL SELECT ALL t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0 HAVING ((CAST(COUNT(t0.c0) AS TEXT)) ISNULL);
SELECT ALL t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0;
SELECT ALL t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0 HAVING CAST(COUNT(t0.c0) AS TEXT) UNION ALL SELECT t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0 HAVING (NOT (CAST(COUNT(t0.c0) AS TEXT))) UNION ALL SELECT ALL t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0 HAVING ((CAST(COUNT(t0.c0) AS TEXT)) ISNULL);
SELECT ALL t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0;
SELECT t0.c1, rt0.c0, vt0.c0, t0.c0, t1.c59, rt0.c2 FROM vt0, t0, t1, rt0;
SELECT t0.c1, rt0.c0, vt0.c0, t0.c0, t1.c59, rt0.c2 FROM vt0, t0, t1, rt0 WHERE (ABS('''貋n-')) UNION ALL SELECT ALL t0.c1, rt0.c0, vt0.c0, t0.c0, t1.c59, rt0.c2 FROM vt0, t0, t1, rt0 WHERE ((NOT (ABS('''貋n-')))) UNION ALL SELECT ALL t0.c1, rt0.c0, vt0.c0, t0.c0, t1.c59, rt0.c2 FROM vt0, t0, t1, rt0 WHERE (((ABS('''貋n-')) ISNULL));
SELECT t0.c1, rt0.c0, vt0.c0, t0.c0, t1.c59, rt0.c2 FROM vt0, t0, t1, rt0;
SELECT DISTINCT * FROM t0, t1, vt0, rt0;
SELECT DISTINCT * FROM t0 NOT INDEXED, t1, vt0, rt0 WHERE (LIKE(((t0.c0) IS TRUE), ((vt0.c0) ISNULL), 'V')) UNION SELECT DISTINCT * FROM t0, t1, vt0, rt0 WHERE ((NOT (LIKE(((t0.c0) IS TRUE), ((vt0.c0) ISNULL), 'V')))) UNION SELECT DISTINCT * FROM t0, t1, vt0, rt0 WHERE (((LIKE(((t0.c0) IS TRUE), ((vt0.c0) ISNULL), 'V')) ISNULL));
SELECT DISTINCT * FROM t0, t1, vt0, rt0;
SELECT ALL t1.c59, t0.c2, t0.c0, t0.c1, vt0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON t1.c59 FULL OUTER JOIN t1 ON x'c1a5' GROUP BY t1.c59, t0.c2, t0.c0, t0.c1, vt0.c0;
SELECT vt0.c0, t0.c2, t1.c59, t0.c1, t0.c0 FROM t0, vt0, t1 GROUP BY vt0.c0, t0.c2, t1.c59, t0.c1, t0.c0;
SELECT vt0.c0, t0.c2, t1.c59, t0.c1, t0.c0 FROM t0, vt0, t1 GROUP BY vt0.c0, t0.c2, t1.c59, t0.c1, t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0, t0.c2, t1.c59, t0.c1, t0.c0 FROM t0, vt0, t1 GROUP BY vt0.c0, t0.c2, t1.c59, t0.c1, t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0, t0.c2, t1.c59, t0.c1, t0.c0 FROM t0, vt0, t1 GROUP BY vt0.c0, t0.c2, t1.c59, t0.c1, t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0, t0.c2, t1.c59, t0.c1, t0.c0 FROM t0, vt0, t1 GROUP BY vt0.c0, t0.c2, t1.c59, t0.c1, t0.c0;
SELECT vt0.c0, t0.c2, t1.c59, t0.c1, t0.c0 FROM t0, vt0, t1 GROUP BY vt0.c0, t0.c2, t1.c59, t0.c1, t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0, t0.c2, t1.c59, t0.c1, t0.c0 FROM t0, vt0, t1 GROUP BY vt0.c0, t0.c2, t1.c59, t0.c1, t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0, t0.c2, t1.c59, t0.c1, t0.c0 FROM t0, vt0, t1 GROUP BY vt0.c0, t0.c2, t1.c59, t0.c1, t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0, t0.c2, t1.c59, t0.c1, t0.c0 FROM t0, vt0, t1 GROUP BY vt0.c0, t0.c2, t1.c59, t0.c1, t0.c0;
SELECT ALL t0.c1, rt0.c1, rt0.c0 FROM rt0, t0;
SELECT ALL t0.c1, rt0.c1, rt0.c0 FROM rt0, t0 WHERE (CAST(rt0.c1 COLLATE BINARY AS REAL)) UNION ALL SELECT t0.c1, rt0.c1, rt0.c0 FROM rt0, t0 WHERE ((NOT (CAST(rt0.c1 COLLATE BINARY AS REAL)))) UNION ALL SELECT ALL t0.c1, rt0.c1, rt0.c0 FROM rt0, t0 WHERE (((CAST(rt0.c1 COLLATE BINARY AS REAL)) ISNULL));
SELECT ALL t0.c1, rt0.c1, rt0.c0 FROM rt0, t0;
SELECT DISTINCT rt0.c1, t0.c2, t1.c59, vt0.c0, t0.c1 FROM vt0, rt0, t0 INNER JOIN t1 ON (- (IFNULL('27616087', rt0.c0)));
SELECT DISTINCT rt0.c1, t0.c2, t1.c59, vt0.c0, t0.c1 FROM vt0, rt0, t0 INNER JOIN t1 ON (- (IFNULL('27616087', rt0.c0))) WHERE (((('')OR(t1.c59)) IN ())) UNION SELECT DISTINCT rt0.c1, t0.c2, t1.c59, vt0.c0, t0.c1 FROM vt0, rt0, t0 INNER JOIN t1 ON (- (IFNULL('27616087', rt0.c0))) WHERE ((NOT (((('')OR(t1.c59)) IN ())))) UNION SELECT DISTINCT rt0.c1, t0.c2, t1.c59, vt0.c0, t0.c1 FROM vt0, rt0, t0 INNER JOIN t1 ON (- (IFNULL('27616087', rt0.c0))) WHERE (((((('')OR(t1.c59)) IN ())) ISNULL));
SELECT DISTINCT rt0.c1, t0.c2, t1.c59, vt0.c0, t0.c1 FROM vt0, rt0, t0 INNER JOIN t1 ON (- (IFNULL('27616087', rt0.c0)));
SELECT t1.c59 FROM t1, vt0 GROUP BY t1.c59;
SELECT ALL t1.c59 FROM t1, vt0 WHERE (CAST(CASE t1.c59  WHEN t1.c59 THEN vt0.c0 WHEN t1.c59 THEN t1.c59 WHEN t1.c59 THEN t1.c59 ELSE t1.c59 END AS NUMERIC)) GROUP BY t1.c59 UNION SELECT t1.c59 FROM t1, vt0 WHERE ((NOT (CAST(CASE t1.c59  WHEN t1.c59 THEN vt0.c0 WHEN t1.c59 THEN t1.c59 WHEN t1.c59 THEN t1.c59 ELSE t1.c59 END AS NUMERIC)))) GROUP BY t1.c59 UNION SELECT ALL t1.c59 FROM t1, vt0 WHERE (((CAST(CASE t1.c59  WHEN t1.c59 THEN vt0.c0 WHEN t1.c59 THEN t1.c59 WHEN t1.c59 THEN t1.c59 ELSE t1.c59 END AS NUMERIC)) ISNULL)) GROUP BY t1.c59;
SELECT t1.c59 FROM t1, vt0 GROUP BY t1.c59;
SELECT ALL t1.c59, rt0.c2 FROM rt0, vt0, t1 GROUP BY t1.c59, rt0.c2;
SELECT t1.c59, rt0.c2 FROM rt0, vt0, t1 GROUP BY t1.c59, rt0.c2 HAVING ((GROUP_CONCAT(GROUP_CONCAT(COUNT(*)))) IS TRUE) UNION ALL SELECT ALL t1.c59, rt0.c2 FROM rt0, vt0, t1 GROUP BY t1.c59, rt0.c2 HAVING (NOT (((GROUP_CONCAT(GROUP_CONCAT(COUNT(*)))) IS TRUE))) UNION ALL SELECT ALL t1.c59, rt0.c2 FROM rt0, vt0, t1 GROUP BY t1.c59, rt0.c2 HAVING ((((GROUP_CONCAT(GROUP_CONCAT(COUNT(*)))) IS TRUE)) ISNULL);
SELECT rt0.c2, t0.c0, rt0.c0, t1.c59, t0.c1, t0.c2, rt0.c1, vt0.c0 FROM vt0, t1, rt0, t0;
SELECT ALL rt0.c2, t0.c0, rt0.c0, t1.c59, t0.c1, t0.c2, rt0.c1, vt0.c0 FROM vt0, t1, rt0, t0 WHERE ((NOT (CAST(rt0.c1 AS INTEGER)))) UNION ALL SELECT ALL rt0.c2, t0.c0, rt0.c0, t1.c59, t0.c1, t0.c2, rt0.c1, vt0.c0 FROM vt0, t1, rt0, t0 WHERE ((NOT ((NOT (CAST(rt0.c1 AS INTEGER)))))) UNION ALL SELECT rt0.c2, t0.c0, rt0.c0, t1.c59, t0.c1, t0.c2, rt0.c1, vt0.c0 FROM vt0, t1, rt0, t0 WHERE ((((NOT (CAST(rt0.c1 AS INTEGER)))) ISNULL));
SELECT rt0.c2, t0.c0, rt0.c0, t1.c59, t0.c1, t0.c2, rt0.c1, vt0.c0 FROM vt0, t1, rt0, t0;
SELECT DISTINCT * FROM t0, t1 CROSS JOIN vt0 ON CAST(t1.c59 AS BLOB) COLLATE BINARY INNER JOIN rt0 ON (((~ (vt0.c0))) NOTNULL);
SELECT DISTINCT * FROM t0, t1 CROSS JOIN vt0 ON CAST(t1.c59 AS BLOB) COLLATE BINARY INNER JOIN rt0 ON (((~ (vt0.c0))) NOTNULL) WHERE (((t0.c1 COLLATE NOCASE)<>(CASE t1.c59  WHEN rt0.c1 THEN vt0.c0 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN NULL ELSE 0xffffffffd89b394c END))) UNION SELECT DISTINCT * FROM t0, t1 CROSS JOIN vt0 ON CAST(t1.c59 AS BLOB) COLLATE BINARY INNER JOIN rt0 ON (((~ (vt0.c0))) NOTNULL) WHERE ((NOT (((t0.c1 COLLATE NOCASE)<>(CASE t1.c59  WHEN rt0.c1 THEN vt0.c0 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN NULL ELSE 0Xffffffffd89b394c END))))) UNION SELECT DISTINCT * FROM t0, t1 CROSS JOIN vt0 ON CAST(t1.c59 AS BLOB) COLLATE BINARY INNER JOIN rt0 ON (((~ (vt0.c0))) NOTNULL) WHERE (((((t0.c1 COLLATE NOCASE)!=(CASE t1.c59  WHEN rt0.c1 THEN vt0.c0 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN NULL ELSE 0xffffffffd89b394c END))) ISNULL));
SELECT DISTINCT * FROM t0, t1 CROSS JOIN vt0 ON CAST(t1.c59 AS BLOB) COLLATE BINARY INNER JOIN rt0 ON (((~ (vt0.c0))) NOTNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((rt0.c1) NOT BETWEEN ((rt0.c0 IN ())) AND (((rt0.c2)AND(rt0.c2))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c1) NOT BETWEEN ((rt0.c0 IN ())) AND (((rt0.c2)AND(rt0.c2))))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((rt0.c1) NOT BETWEEN ((rt0.c0 IN ())) AND (((rt0.c2)AND(rt0.c2))))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL t1.c59, t0.c2, t0.c0, t0.c1 FROM t1 RIGHT OUTER JOIN t0 ON t0.c2 GROUP BY t1.c59, t0.c2, t0.c0, t0.c1;
SELECT ALL t1.c59, t0.c2, t0.c0, t0.c1 FROM t1 RIGHT OUTER JOIN t0 ON t0.c2 GROUP BY t1.c59, t0.c2, t0.c0, t0.c1 HAVING TOTAL((COUNT(*) IN ())) UNION ALL SELECT t1.c59, t0.c2, t0.c0, t0.c1 FROM t1 RIGHT OUTER JOIN t0 ON t0.c2 GROUP BY t1.c59, t0.c2, t0.c0, t0.c1 HAVING (NOT (TOTAL((COUNT(*) IN ())))) UNION ALL SELECT t1.c59, t0.c2, t0.c0, t0.c1 FROM t1 RIGHT OUTER JOIN t0 ON t0.c2 GROUP BY t1.c59, t0.c2, t0.c0, t0.c1 HAVING ((TOTAL((COUNT(*) IN ()))) ISNULL);
SELECT ALL t1.c59, t0.c2, t0.c0, t0.c1 FROM t1 RIGHT OUTER JOIN t0 ON t0.c2 GROUP BY t1.c59, t0.c2, t0.c0, t0.c1;
SELECT ALL t1.c59, t0.c2, t0.c0, t0.c1 FROM t1 RIGHT OUTER JOIN t0 ON t0.c2 GROUP BY t1.c59, t0.c2, t0.c0, t0.c1 HAVING TOTAL((COUNT(*) IN ())) UNION ALL SELECT t1.c59, t0.c2, t0.c0, t0.c1 FROM t1 RIGHT OUTER JOIN t0 ON t0.c2 GROUP BY t1.c59, t0.c2, t0.c0, t0.c1 HAVING (NOT (TOTAL((COUNT(*) IN ())))) UNION ALL SELECT t1.c59, t0.c2, t0.c0, t0.c1 FROM t1 RIGHT OUTER JOIN t0 ON t0.c2 GROUP BY t1.c59, t0.c2, t0.c0, t0.c1 HAVING ((TOTAL((COUNT(*) IN ()))) ISNULL);
SELECT ALL t1.c59, t0.c2, t0.c0, t0.c1 FROM t1 RIGHT OUTER JOIN t0 ON t0.c2 GROUP BY t1.c59, t0.c2, t0.c0, t0.c1;
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE (CAST(LAST_INSERT_ROWID() AS REAL)) UNION ALL SELECT * FROM t0 WHERE ((NOT (CAST(LAST_INSERT_ROWID() AS REAL)))) UNION ALL SELECT ALL * FROM t0 WHERE (((CAST(LAST_INSERT_ROWID() AS REAL)) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0 WHERE (GLOB((((t0.c2, t0.c0, vt0.c0))<=((t0.c2, 1853149855, NULL))), CAST(t0.c1 AS INTEGER))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((NOT (GLOB((((t0.c2, t0.c0, vt0.c0))<=((t0.c2, 1853149855, NULL))), CAST(t0.c1 AS INTEGER))))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE (((GLOB((((t0.c2, t0.c0, vt0.c0))<=((t0.c2, 1853149855, NULL))), CAST(t0.c1 AS INTEGER))) ISNULL));
SELECT DISTINCT * FROM vt0, t0;
SELECT t0.c0 FROM vt0, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM vt0, t0 WHERE (CAST(CASE WHEN t0.c2 THEN t0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.11933120277755682 ELSE t0.c2 END AS BLOB)) GROUP BY t0.c0 UNION SELECT t0.c0 FROM vt0, t0 WHERE ((NOT (CAST(CASE WHEN t0.c2 THEN t0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.11933120277755682 ELSE t0.c2 END AS BLOB)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM vt0, t0 WHERE (((CAST(CASE WHEN t0.c2 THEN t0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.11933120277755682 ELSE t0.c2 END AS BLOB)) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM vt0, t0 GROUP BY t0.c0;
SELECT t1.c59 FROM t1 GROUP BY t1.c59;
SELECT t1.c59 FROM t1 GROUP BY t1.c59 HAVING MAX(t1.c59) UNION ALL SELECT t1.c59 FROM t1 GROUP BY t1.c59 HAVING (NOT (MAX(t1.c59))) UNION ALL SELECT t1.c59 FROM t1 NOT INDEXED GROUP BY t1.c59 HAVING ((MAX(t1.c59)) ISNULL);
SELECT t1.c59 FROM t1 GROUP BY t1.c59;
SELECT t1.c59 FROM t1 GROUP BY t1.c59 HAVING MAX(t1.c59) UNION ALL SELECT t1.c59 FROM t1 GROUP BY t1.c59 HAVING (NOT (MAX(t1.c59))) UNION ALL SELECT t1.c59 FROM t1 NOT INDEXED GROUP BY t1.c59 HAVING ((MAX(t1.c59)) ISNULL);
SELECT t1.c59 FROM t1 GROUP BY t1.c59;
SELECT rt0.c2, t0.c2, rt0.c1, t0.c1 FROM t0 LEFT OUTER JOIN vt0 ON CASE json_extract(t0.c0, rt0.c0)  WHEN t0.c1 THEN ((rt0.c1) BETWEEN (t0.c2) AND (rt0.c2)) WHEN ((t0.c1)LIKE(rt0.c2)) THEN t0.c0 COLLATE NOCASE WHEN (((rt0.c1))==((t0.c0))) THEN ((t0.c1)|(rt0.c0)) WHEN ((t0.c2)AND(rt0.c1)) THEN ((t0.c2) IS TRUE) WHEN ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)) THEN ((t0.c0) IS TRUE) ELSE (((rt0.c0))<>((t0.c2))) END LEFT OUTER JOIN rt0 ON ((((NULL) BETWEEN (rt0.c1) AND (t0.c1)))|(CAST(t0.c0 AS INTEGER)));
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((((((((NULL)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))) AND ((((vt0.c0) IS FALSE))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((vt0.c0)) BETWEEN ((((((((((NULL)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))) AND ((((vt0.c0) IS FALSE))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((((((((((NULL)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))) AND ((((vt0.c0) IS FALSE))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT rt0.c1, t0.c1, t1.c59, vt0.c0, rt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON (((+ (rt0.c1))) NOTNULL) LEFT OUTER JOIN t1 ON rt0.c0 LEFT OUTER JOIN t0 ON CASE WHEN ((t0.c0) IS FALSE) THEN (((t0.c0))<=((t0.c0))) ELSE (~ (rt0.c2)) END GROUP BY rt0.c1, t0.c1, t1.c59, vt0.c0, rt0.c0;
SELECT rt0.c1, t0.c1, t1.c59, vt0.c0, rt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON (((+ (rt0.c1))) NOTNULL) LEFT OUTER JOIN t1 ON rt0.c0 LEFT OUTER JOIN t0 ON CASE WHEN ((t0.c0) IS FALSE) THEN (((t0.c0))<=((t0.c0))) ELSE (~ (rt0.c2)) END WHERE ((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (t0.c2))))<>((t0.c2 COLLATE BINARY)))) GROUP BY rt0.c1, t0.c1, t1.c59, vt0.c0, rt0.c0 UNION SELECT ALL rt0.c1, t0.c1, t1.c59, vt0.c0, rt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON (((+ (rt0.c1))) NOTNULL) LEFT OUTER JOIN t1 ON rt0.c0 LEFT OUTER JOIN t0 ON CASE WHEN ((t0.c0) IS FALSE) THEN (((t0.c0))<=((t0.c0))) ELSE (~ (rt0.c2)) END WHERE ((NOT ((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (t0.c2))))<>((t0.c2 COLLATE BINARY)))))) GROUP BY rt0.c1, t0.c1, t1.c59, vt0.c0, rt0.c0 UNION SELECT ALL rt0.c1, t0.c1, t1.c59, vt0.c0, rt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON (((+ (rt0.c1))) NOTNULL) LEFT OUTER JOIN t1 ON rt0.c0 LEFT OUTER JOIN t0 ON CASE WHEN ((t0.c0) IS FALSE) THEN (((t0.c0))<=((t0.c0))) ELSE (~ (rt0.c2)) END WHERE ((((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (t0.c2))))!=((t0.c2 COLLATE BINARY)))) ISNULL)) GROUP BY rt0.c1, t0.c1, t1.c59, vt0.c0, rt0.c0;
SELECT rt0.c1, t0.c1, t1.c59, vt0.c0, rt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON (((+ (rt0.c1))) NOTNULL) LEFT OUTER JOIN t1 ON rt0.c0 LEFT OUTER JOIN t0 ON CASE WHEN ((t0.c0) IS FALSE) THEN (((t0.c0))<=((t0.c0))) ELSE (~ (rt0.c2)) END GROUP BY rt0.c1, t0.c1, t1.c59, vt0.c0, rt0.c0;
SELECT ALL vt0.c0, t1.c59 FROM t1, vt0 GROUP BY vt0.c0, t1.c59;
SELECT ALL vt0.c0, t1.c59 FROM t1, vt0 GROUP BY vt0.c0, t1.c59 HAVING MIN(COUNT(*)) UNION ALL SELECT vt0.c0, t1.c59 FROM t1, vt0 GROUP BY vt0.c0, t1.c59 HAVING (NOT (MIN(COUNT(*)))) UNION ALL SELECT vt0.c0, t1.c59 FROM t1, vt0 GROUP BY vt0.c0, t1.c59 HAVING ((MIN(COUNT(*))) ISNULL);
SELECT * FROM vt0, t0, rt0 RIGHT OUTER JOIN t1 ON (((('4횒L-4Ig+-')AND(NULL)))AND(CASE WHEN t0.c0 THEN t0.c2 ELSE rt0.c1 END));
SELECT * FROM vt0, t0, rt0 RIGHT OUTER JOIN t1 ON (((('4횒L-4Ig+-')AND(NULL)))AND(CASE WHEN t0.c0 THEN t0.c2 ELSE rt0.c1 END)) WHERE (0.28148048821016414) UNION ALL SELECT ALL * FROM vt0, t0, rt0 RIGHT OUTER JOIN t1 ON (((('4횒L-4Ig+-')AND(NULL)))AND(CASE WHEN t0.c0 THEN t0.c2 ELSE rt0.c1 END)) WHERE ((NOT (0.28148048821016414))) UNION ALL SELECT ALL * FROM vt0, t0, rt0 RIGHT OUTER JOIN t1 ON (((('4횒L-4Ig+-')AND(NULL)))AND(CASE WHEN t0.c0 THEN t0.c2 ELSE rt0.c1 END)) WHERE (((0.28148048821016414) ISNULL));
SELECT * FROM vt0, t0, rt0 RIGHT OUTER JOIN t1 ON (((('4횒L-4Ig+-')AND(NULL)))AND(CASE WHEN t0.c0 THEN t0.c2 ELSE rt0.c1 END));
SELECT DISTINCT vt0.c0, rt0.c1, t1.c59, rt0.c0, t0.c1, rt0.c2 FROM rt0, t1 LEFT OUTER JOIN t0 ON ((vt0.c0) IS TRUE) INNER JOIN vt0 ON CASE WHEN rt0.c2 COLLATE NOCASE THEN ((t0.c2) NOT BETWEEN (1652052196) AND (t0.c0)) ELSE ((t0.c2) ISNULL) END;
SELECT rt0.c0, t0.c2, rt0.c1 FROM t1, rt0, t0 GROUP BY rt0.c0, t0.c2, rt0.c1;
SELECT ALL rt0.c0, t0.c2, rt0.c1 FROM t1, rt0, t0 WHERE (ROUND((t0.c1 IN (rt0.c1)), ((rt0.c2)IS NOT(rt0.c0)))) GROUP BY rt0.c0, t0.c2, rt0.c1 UNION SELECT rt0.c0, t0.c2, rt0.c1 FROM t1, rt0, t0 WHERE ((NOT (ROUND((t0.c1 IN (rt0.c1)), ((rt0.c2)IS NOT(rt0.c0)))))) GROUP BY rt0.c0, t0.c2, rt0.c1 UNION SELECT ALL rt0.c0, t0.c2, rt0.c1 FROM t1, rt0, t0 WHERE (((ROUND((t0.c1 IN (rt0.c1)), ((rt0.c2)IS NOT(rt0.c0)))) ISNULL)) GROUP BY rt0.c0, t0.c2, rt0.c1;
SELECT rt0.c0, t0.c2, rt0.c1 FROM t1, rt0, t0 GROUP BY rt0.c0, t0.c2, rt0.c1;
SELECT ALL t1.c59 FROM t1 GROUP BY t1.c59;
SELECT ALL t1.c59 FROM t1 GROUP BY t1.c59 HAVING MAX(COUNT(t1.c59)) UNION ALL SELECT t1.c59 FROM t1 GROUP BY t1.c59 HAVING (NOT (MAX(COUNT(t1.c59)))) UNION ALL SELECT t1.c59 FROM t1 GROUP BY t1.c59 HAVING ((MAX(COUNT(t1.c59))) ISNULL);
SELECT MAX((((~ (rt0.c1)))LIKE(CAST(vt0.c0 AS BLOB)))) FROM t1, t0, rt0, vt0 ORDER BY '-983778242'  NULLS LAST;
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON NULLIF((+ (rt0.c1)), CASE t0.c2  WHEN t0.c1 THEN t0.c0 END) CROSS JOIN t1 ON (((NOT ('y8R6,改')))>>(rt0.c0 COLLATE RTRIM));
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON NULLIF((+ (rt0.c1)), CASE t0.c2  WHEN t0.c1 THEN t0.c0 END) CROSS JOIN t1 ON (((NOT ('y8R6,改')))>>(rt0.c0 COLLATE RTRIM)) WHERE (((((t0.c2)LIKE(rt0.c2))) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN t0.c1 THEN t0.c2 WHEN t1.c59 THEN rt0.c0 WHEN t1.c59 THEN NULL ELSE rt0.c0 END) AND (((((rt0.c0)AND(t0.c1)))OR(t0.c2))))) UNION ALL SELECT * FROM t0 RIGHT OUTER JOIN rt0 ON NULLIF((+ (rt0.c1)), CASE t0.c2  WHEN t0.c1 THEN t0.c0 END) CROSS JOIN t1 ON (((NOT ('y8R6,改')))>>(rt0.c0 COLLATE RTRIM)) WHERE ((NOT (((((t0.c2)LIKE(rt0.c2))) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN t0.c1 THEN t0.c2 WHEN t1.c59 THEN rt0.c0 WHEN t1.c59 THEN NULL ELSE rt0.c0 END) AND (((((rt0.c0)AND(t0.c1)))OR(t0.c2))))))) UNION ALL SELECT * FROM t0 RIGHT OUTER JOIN rt0 ON NULLIF((+ (rt0.c1)), CASE t0.c2  WHEN t0.c1 THEN t0.c0 END) CROSS JOIN t1 ON (((NOT ('y8R6,改')))>>(rt0.c0 COLLATE RTRIM)) WHERE (((((((t0.c2)LIKE(rt0.c2))) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN t0.c1 THEN t0.c2 WHEN t1.c59 THEN rt0.c0 WHEN t1.c59 THEN NULL ELSE rt0.c0 END) AND (((((rt0.c0)AND(t0.c1)))OR(t0.c2))))) ISNULL));
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON NULLIF((+ (rt0.c1)), CASE t0.c2  WHEN t0.c1 THEN t0.c0 END) CROSS JOIN t1 ON (((NOT ('y8R6,改')))>>(rt0.c0 COLLATE RTRIM));
SELECT DISTINCT * FROM t1, rt0;
SELECT DISTINCT * FROM t1, rt0 WHERE (CAST(((t1.c59) IS TRUE) AS NUMERIC)) UNION SELECT DISTINCT * FROM t1, rt0 WHERE ((NOT (CAST(((t1.c59) IS TRUE) AS NUMERIC)))) UNION SELECT DISTINCT * FROM t1, rt0 WHERE (((CAST(((t1.c59) IS TRUE) AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM t1, rt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((((0.2984506404479883) NOT BETWEEN (vt0.c0) AND (vt0.c0)))*((('-1900741401') IS TRUE)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((0.2984506404479883) NOT BETWEEN (vt0.c0) AND (vt0.c0)))*((('-1900741401') IS TRUE)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((((0.2984506404479883) NOT BETWEEN (vt0.c0) AND (vt0.c0)))*((('-1900741401') IS TRUE)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL t0.c1, t0.c2, t0.c0, rt0.c1, t1.c59, rt0.c0, vt0.c0, rt0.c2 FROM t0 INDEXED BY i11 FULL OUTER JOIN rt0 ON ((((((((((t0.c1)>(t0.c1)))AND(CASE WHEN t0.c1 THEN t0.c2 ELSE t0.c1 END)))OR(LOWER(t0.c1))))OR(vt0.c0 COLLATE RTRIM)))AND(((NULL) BETWEEN (t1.c59) AND (t1.c59)))) LEFT OUTER JOIN vt0 ON ((((t0.c2)GLOB(t1.c59))) BETWEEN (json_array(t0.c1, vt0.c0)) AND (((rt0.c1)IS NOT(rt0.c0)))) CROSS JOIN t1 ON TRIM(DISTINCT TRIM(rt0.c1, vt0.c0)) GROUP BY t0.c1, t0.c2, t0.c0, rt0.c1, t1.c59, rt0.c0, vt0.c0, rt0.c2;
SELECT rt0.c2, t1.c59, rt0.c0, rt0.c1 FROM rt0 RIGHT OUTER JOIN t1 ON ((-1134283115)&(rt0.c1)) RIGHT OUTER JOIN vt0 ON (- (rt0.c0)) COLLATE NOCASE;
SELECT rt0.c2, t1.c59, rt0.c0, rt0.c1 FROM rt0 RIGHT OUTER JOIN t1 ON ((-1134283115)&(rt0.c1)) RIGHT OUTER JOIN vt0 ON (- (rt0.c0)) COLLATE NOCASE WHERE ((((rt0.c1)) NOT BETWEEN (((rt0.c2 IN ()))) AND ((((vt0.c0)>=(t1.c59)))))) UNION ALL SELECT ALL rt0.c2, t1.c59, rt0.c0, rt0.c1 FROM rt0 RIGHT OUTER JOIN t1 ON ((-1134283115)&(rt0.c1)) RIGHT OUTER JOIN vt0 ON (- (rt0.c0)) COLLATE NOCASE WHERE ((NOT ((((rt0.c1)) NOT BETWEEN (((rt0.c2 IN ()))) AND ((((vt0.c0)>=(t1.c59)))))))) UNION ALL SELECT rt0.c2, t1.c59, rt0.c0, rt0.c1 FROM rt0 RIGHT OUTER JOIN t1 ON ((-1134283115)&(rt0.c1)) RIGHT OUTER JOIN vt0 ON (- (rt0.c0)) COLLATE NOCASE WHERE ((((((rt0.c1)) NOT BETWEEN (((rt0.c2 IN ()))) AND ((((vt0.c0)>=(t1.c59)))))) ISNULL));
SELECT rt0.c2, t1.c59, rt0.c0, rt0.c1 FROM rt0 RIGHT OUTER JOIN t1 ON ((-1134283115)&(rt0.c1)) RIGHT OUTER JOIN vt0 ON (- (rt0.c0)) COLLATE NOCASE;
SELECT DISTINCT * FROM t0, t1 LEFT OUTER JOIN rt0 ON ((((t0.c2) IS TRUE))IS(((((((((vt0.c0)OR(t1.c59)))OR(rt0.c2)))AND(rt0.c0)))OR(t0.c0)))) INNER JOIN vt0 ON vt0.c0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 INDEXED BY i11 GROUP BY rt0.c1, rt0.c2;
SELECT vt0.c0, t1.c59, rt0.c2 FROM rt0, t1, vt0 GROUP BY vt0.c0, t1.c59, rt0.c2;
SELECT ALL vt0.c0, t1.c59, rt0.c2 FROM rt0, t1, vt0 GROUP BY vt0.c0, t1.c59, rt0.c2 HAVING ((MAX(rt0.c1))IS(TOTAL(TOTAL(TOTAL(t1.c59))))) UNION ALL SELECT vt0.c0, t1.c59, rt0.c2 FROM rt0, t1, vt0 GROUP BY vt0.c0, t1.c59, rt0.c2 HAVING (NOT (((MAX(rt0.c1))IS(TOTAL(TOTAL(TOTAL(t1.c59))))))) UNION ALL SELECT ALL vt0.c0, t1.c59, rt0.c2 FROM rt0, t1, vt0 GROUP BY vt0.c0, t1.c59, rt0.c2 HAVING ((((MAX(rt0.c1))IS(TOTAL(TOTAL(TOTAL(t1.c59)))))) ISNULL);
SELECT rt0.c0, rt0.c2, t0.c2 FROM rt0, t0;
SELECT rt0.c0, rt0.c2, t0.c2 FROM rt0, t0 WHERE ((t0.c0 IN (rt0.c0 COLLATE BINARY))) UNION ALL SELECT rt0.c0, rt0.c2, t0.c2 FROM rt0, t0 WHERE ((NOT ((t0.c0 IN (rt0.c0 COLLATE BINARY))))) UNION ALL SELECT rt0.c0, rt0.c2, t0.c2 FROM rt0, t0 WHERE ((((t0.c0 IN (rt0.c0 COLLATE BINARY))) ISNULL));
SELECT rt0.c0, rt0.c2, t0.c2 FROM rt0, t0;
SELECT DISTINCT * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0 WHERE (((((t0.c1)<<(vt0.c0))) BETWEEN (((vt0.c0)>>(t0.c1))) AND (((((((((((((vt0.c0)OR(vt0.c0)))OR(t0.c1)))AND(t0.c1)))OR(t0.c0)))AND(vt0.c0)))AND(vt0.c0))))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((NOT (((((t0.c1)<<(vt0.c0))) BETWEEN (((vt0.c0)>>(t0.c1))) AND (((((((((((((vt0.c0)OR(vt0.c0)))OR(t0.c1)))AND(t0.c1)))OR(t0.c0)))AND(vt0.c0)))AND(vt0.c0))))))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE (((((((t0.c1)<<(vt0.c0))) BETWEEN (((vt0.c0)>>(t0.c1))) AND (((((((((((((vt0.c0)OR(vt0.c0)))OR(t0.c1)))AND(t0.c1)))OR(t0.c0)))AND(vt0.c0)))AND(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0, vt0;
SELECT ALL t1.c59 FROM vt0, t1 GROUP BY t1.c59;
SELECT ALL t1.c59 FROM vt0, t1 WHERE (((ABS(vt0.c0)) NOT NULL)) GROUP BY t1.c59 UNION SELECT t1.c59 FROM vt0, t1 WHERE ((NOT (((ABS(vt0.c0)) NOT NULL)))) GROUP BY t1.c59 UNION SELECT t1.c59 FROM vt0, t1 WHERE (((((ABS(vt0.c0)) NOT NULL)) ISNULL)) GROUP BY t1.c59;
SELECT ALL t1.c59 FROM vt0, t1 GROUP BY t1.c59;
SELECT rt0.c1, rt0.c0, t0.c2 FROM t1, t0 LEFT OUTER JOIN rt0 ON ((json_patch(rt0.c1, rt0.c2))<<(t0.c1 COLLATE NOCASE)) GROUP BY rt0.c1, rt0.c0, t0.c2;
SELECT ALL rt0.c1, rt0.c0, t0.c2 FROM t1, t0 LEFT OUTER JOIN rt0 ON ((json_patch(rt0.c1, rt0.c2))<<(t0.c1 COLLATE NOCASE)) GROUP BY rt0.c1, rt0.c0, t0.c2 HAVING ((COUNT(COUNT(*))) ISNULL) UNION ALL SELECT ALL rt0.c1, rt0.c0, t0.c2 FROM t1, t0 LEFT OUTER JOIN rt0 ON ((json_patch(rt0.c1, rt0.c2))<<(t0.c1 COLLATE NOCASE)) GROUP BY rt0.c1, rt0.c0, t0.c2 HAVING (NOT (((COUNT(COUNT(*))) ISNULL))) UNION ALL SELECT rt0.c1, rt0.c0, t0.c2 FROM t1, t0 LEFT OUTER JOIN rt0 ON ((json_patch(rt0.c1, rt0.c2))<<(t0.c1 COLLATE NOCASE)) GROUP BY rt0.c1, rt0.c0, t0.c2 HAVING ((((COUNT(COUNT(*))) ISNULL)) ISNULL);
SELECT t1.c59, rt0.c2, vt0.c0, rt0.c0, t0.c0, rt0.c1, t0.c1, t0.c2 FROM rt0, vt0, t1 INNER JOIN t0 ON ((((((((((t0.c0)+(t1.c59)))AND(((NULL)IS NOT(rt0.c1)))))OR(CAST(rt0.c2 AS INTEGER))))OR(rt0.c2 COLLATE RTRIM)))AND((((t0.c1, t0.c0, t0.c0)) BETWEEN ((t1.c59, t0.c0, t1.c59)) AND ((rt0.c0, rt0.c0, rt0.c0)))));
SELECT ALL t1.c59, rt0.c2, vt0.c0, rt0.c0, t0.c0, rt0.c1, t0.c1, t0.c2 FROM rt0, vt0, t1 INNER JOIN t0 ON ((((((((((t0.c0)+(t1.c59)))AND(((NULL)IS NOT(rt0.c1)))))OR(CAST(rt0.c2 AS INTEGER))))OR(rt0.c2 COLLATE RTRIM)))AND((((t0.c1, t0.c0, t0.c0)) BETWEEN ((t1.c59, t0.c0, t1.c59)) AND ((rt0.c0, rt0.c0, rt0.c0))))) WHERE ((~ (NULL))) UNION ALL SELECT ALL t1.c59, rt0.c2, vt0.c0, rt0.c0, t0.c0, rt0.c1, t0.c1, t0.c2 FROM rt0, vt0, t1 INNER JOIN t0 ON ((((((((((t0.c0)+(t1.c59)))AND(((NULL)IS NOT(rt0.c1)))))OR(CAST(rt0.c2 AS INTEGER))))OR(rt0.c2 COLLATE RTRIM)))AND((((t0.c1, t0.c0, t0.c0)) BETWEEN ((t1.c59, t0.c0, t1.c59)) AND ((rt0.c0, rt0.c0, rt0.c0))))) WHERE ((NOT ((~ (NULL))))) UNION ALL SELECT ALL t1.c59, rt0.c2, vt0.c0, rt0.c0, t0.c0, rt0.c1, t0.c1, t0.c2 FROM rt0, vt0, t1 INNER JOIN t0 ON ((((((((((t0.c0)+(t1.c59)))AND(((NULL)IS NOT(rt0.c1)))))OR(CAST(rt0.c2 AS INTEGER))))OR(rt0.c2 COLLATE RTRIM)))AND((((t0.c1, t0.c0, t0.c0)) BETWEEN ((t1.c59, t0.c0, t1.c59)) AND ((rt0.c0, rt0.c0, rt0.c0))))) WHERE ((((~ (NULL))) ISNULL));
SELECT t1.c59, rt0.c2, vt0.c0, rt0.c0, t0.c0, rt0.c1, t0.c1, t0.c2 FROM rt0, vt0, t1 INNER JOIN t0 ON ((((((((((t0.c0)+(t1.c59)))AND(((NULL)IS NOT(rt0.c1)))))OR(CAST(rt0.c2 AS INTEGER))))OR(rt0.c2 COLLATE RTRIM)))AND((((t0.c1, t0.c0, t0.c0)) BETWEEN ((t1.c59, t0.c0, t1.c59)) AND ((rt0.c0, rt0.c0, rt0.c0)))));
SELECT DISTINCT t0.c2, t0.c1, t0.c0 FROM t0;
SELECT DISTINCT t0.c2, t0.c1, t0.c0 FROM t0 WHERE (((((t0.c1)/(t0.c0))) NOT NULL)) UNION SELECT DISTINCT t0.c2, t0.c1, t0.c0 FROM t0 WHERE ((NOT (((((t0.c1)/(t0.c0))) NOT NULL)))) UNION SELECT DISTINCT t0.c2, t0.c1, t0.c0 FROM t0 WHERE (((((((t0.c1)/(t0.c0))) NOT NULL)) ISNULL));
SELECT DISTINCT t0.c2, t0.c1, t0.c0 FROM t0;
SELECT t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0;
SELECT t0.c2, t0.c0 FROM t0 WHERE (((((((((t0.c2)OR(t0.c2)))AND(t0.c0)))OR(0.04574287896211138)))AND(CASE t0.c1  WHEN t0.c2 THEN t0.c0 END))) GROUP BY t0.c2, t0.c0 UNION SELECT t0.c2, t0.c0 FROM t0 WHERE ((NOT (((((((((t0.c2)OR(t0.c2)))AND(t0.c0)))OR(0.04574287896211138)))AND(CASE t0.c1  WHEN t0.c2 THEN t0.c0 END))))) GROUP BY t0.c2, t0.c0 UNION SELECT ALL t0.c2, t0.c0 FROM t0 WHERE (((((((((((t0.c2)OR(t0.c2)))AND(t0.c0)))OR(0.04574287896211138)))AND(CASE t0.c1  WHEN t0.c2 THEN t0.c0 END))) ISNULL)) GROUP BY t0.c2, t0.c0;
SELECT t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0;
SELECT rt0.c2, t1.c59 FROM t1, rt0, vt0 GROUP BY rt0.c2, t1.c59;
SELECT rt0.c2, t1.c59 FROM t1, rt0, vt0 GROUP BY rt0.c2, t1.c59 HAVING COUNT(IFNULL(GROUP_CONCAT(t1.c59), rt0.c1)) UNION ALL SELECT rt0.c2, t1.c59 FROM t1, rt0, vt0 GROUP BY rt0.c2, t1.c59 HAVING (NOT (COUNT(IFNULL(GROUP_CONCAT(t1.c59), rt0.c1)))) UNION ALL SELECT ALL rt0.c2, t1.c59 FROM t1, rt0 NOT INDEXED, vt0 GROUP BY rt0.c2, t1.c59 HAVING ((COUNT(IFNULL(GROUP_CONCAT(t1.c59), rt0.c1))) ISNULL);
SELECT ALL * FROM rt0, t0;
SELECT * FROM rt0, t0 WHERE (((((t0.c1) BETWEEN (rt0.c2) AND (rt0.c0))) BETWEEN (json_quote(rt0.c0)) AND (CASE WHEN t0.c0 THEN t0.c1 ELSE rt0.c0 END))) UNION ALL SELECT ALL * FROM rt0, t0 WHERE ((NOT (((((t0.c1) BETWEEN (rt0.c2) AND (rt0.c0))) BETWEEN (json_quote(rt0.c0)) AND (CASE WHEN t0.c0 THEN t0.c1 ELSE rt0.c0 END))))) UNION ALL SELECT ALL * FROM rt0, t0 WHERE (((((((t0.c1) BETWEEN (rt0.c2) AND (rt0.c0))) BETWEEN (json_quote(rt0.c0)) AND (CASE WHEN t0.c0 THEN t0.c1 ELSE rt0.c0 END))) ISNULL));
SELECT ALL * FROM rt0, t0;
SELECT DISTINCT t0.c0, t0.c1, t0.c2, vt0.c0, t1.c59 FROM t0, t1, vt0;
SELECT DISTINCT t0.c0, t0.c1, t0.c2, vt0.c0, t1.c59 FROM t0, t1, vt0 WHERE (CASE WHEN (('1353386582') BETWEEN (vt0.c0) AND (t0.c0)) THEN ((vt0.c0)&(t0.c1)) WHEN (((t1.c59, vt0.c0, t0.c0))<=((t0.c0, t0.c2, vt0.c0))) THEN CASE WHEN t1.c59 THEN t0.c0 ELSE t0.c2 END WHEN (t0.c1 IN ()) THEN '' END) UNION SELECT DISTINCT t0.c0, t0.c1, t0.c2, vt0.c0, t1.c59 FROM t0, t1, vt0 WHERE ((NOT (CASE WHEN (('1353386582') BETWEEN (vt0.c0) AND (t0.c0)) THEN ((vt0.c0)&(t0.c1)) WHEN (((t1.c59, vt0.c0, t0.c0))<=((t0.c0, t0.c2, vt0.c0))) THEN CASE WHEN t1.c59 THEN t0.c0 ELSE t0.c2 END WHEN (t0.c1 IN ()) THEN '' END))) UNION SELECT DISTINCT t0.c0, t0.c1, t0.c2, vt0.c0, t1.c59 FROM t0, t1, vt0 WHERE (((CASE WHEN (('1353386582') BETWEEN (vt0.c0) AND (t0.c0)) THEN ((vt0.c0)&(t0.c1)) WHEN (((t1.c59, vt0.c0, t0.c0))<=((t0.c0, t0.c2, vt0.c0))) THEN CASE WHEN t1.c59 THEN t0.c0 ELSE t0.c2 END WHEN (t0.c1 IN ()) THEN '' END) ISNULL));
SELECT DISTINCT t0.c0, t0.c1, t0.c2, vt0.c0, t1.c59 FROM t0, t1, vt0;
SELECT t0.c0, t0.c2, rt0.c2, rt0.c0, vt0.c0, t0.c1, rt0.c1 FROM vt0, rt0, t0, t1 GROUP BY t0.c0, t0.c2, rt0.c2, rt0.c0, vt0.c0, t0.c1, rt0.c1;
SELECT t0.c0, t0.c2, rt0.c2, rt0.c0, vt0.c0, t0.c1, rt0.c1 FROM vt0, rt0, t0, t1 WHERE (t0.c0) GROUP BY t0.c0, t0.c2, rt0.c2, rt0.c0, vt0.c0, t0.c1, rt0.c1 UNION SELECT ALL t0.c0, t0.c2, rt0.c2, rt0.c0, vt0.c0, t0.c1, rt0.c1 FROM vt0, rt0, t0, t1 WHERE ((NOT (t0.c0))) GROUP BY t0.c0, t0.c2, rt0.c2, rt0.c0, vt0.c0, t0.c1, rt0.c1 UNION SELECT t0.c0, t0.c2, rt0.c2, rt0.c0, vt0.c0, t0.c1, rt0.c1 FROM vt0, rt0, t0, t1 WHERE (((t0.c0) ISNULL)) GROUP BY t0.c0, t0.c2, rt0.c2, rt0.c0, vt0.c0, t0.c1, rt0.c1;
SELECT t0.c0, t0.c2, rt0.c2, rt0.c0, vt0.c0, t0.c1, rt0.c1 FROM vt0, rt0, t0, t1 GROUP BY t0.c0, t0.c2, rt0.c2, rt0.c0, vt0.c0, t0.c1, rt0.c1;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING x'' UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (x'')) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((x'') ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING x'' UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (x'')) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((x'') ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON ((((t0.c2) IS TRUE)) IS TRUE);
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON ((((t0.c2) IS TRUE)) IS TRUE) WHERE (((((t0.c0)&(t0.c1)))<((vt0.c0 IN ())))) UNION ALL SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON ((((t0.c2) IS TRUE)) IS TRUE) WHERE ((NOT (((((t0.c0)&(t0.c1)))<((vt0.c0 IN ())))))) UNION ALL SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON ((((t0.c2) IS TRUE)) IS TRUE) WHERE (((((((t0.c0)&(t0.c1)))<((vt0.c0 IN ())))) ISNULL));
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON ((((t0.c2) IS TRUE)) IS TRUE);
SELECT DISTINCT * FROM vt0, t1, t0, rt0;
SELECT DISTINCT * FROM vt0, t1, t0, rt0 WHERE (CAST('600817469' AS REAL)) UNION SELECT DISTINCT * FROM vt0, t1, t0, rt0 WHERE ((NOT (CAST('600817469' AS REAL)))) UNION SELECT DISTINCT * FROM vt0, t1, t0, rt0 WHERE (((CAST('600817469' AS REAL)) ISNULL));
SELECT DISTINCT * FROM vt0, t1, t0, rt0;
SELECT ALL rt0.c2, t0.c2, rt0.c0, vt0.c0, t0.c0, t0.c1, rt0.c1 FROM t0, vt0 NOT INDEXED, rt0 GROUP BY rt0.c2, t0.c2, rt0.c0, vt0.c0, t0.c0, t0.c1, rt0.c1;
SELECT rt0.c2, t0.c2, rt0.c0, vt0.c0, t0.c0, t0.c1, rt0.c1 FROM t0, vt0, rt0 WHERE (JULIANDAY(rt0.c2, (+ (rt0.c2)), CAST(t0.c0 AS BLOB))) GROUP BY rt0.c2, t0.c2, rt0.c0, vt0.c0, t0.c0, t0.c1, rt0.c1 UNION SELECT ALL rt0.c2, t0.c2, rt0.c0, vt0.c0, t0.c0, t0.c1, rt0.c1 FROM t0, vt0, rt0 WHERE ((NOT (JULIANDAY(rt0.c2, (+ (rt0.c2)), CAST(t0.c0 AS BLOB))))) GROUP BY rt0.c2, t0.c2, rt0.c0, vt0.c0, t0.c0, t0.c1, rt0.c1 UNION SELECT ALL rt0.c2, t0.c2, rt0.c0, vt0.c0, t0.c0, t0.c1, rt0.c1 FROM t0, vt0, rt0 WHERE (((JULIANDAY(rt0.c2, (+ (rt0.c2)), CAST(t0.c0 AS BLOB))) ISNULL)) GROUP BY rt0.c2, t0.c2, rt0.c0, vt0.c0, t0.c0, t0.c1, rt0.c1;
SELECT ALL rt0.c2, t0.c2, rt0.c0, vt0.c0, t0.c0, t0.c1, rt0.c1 FROM t0, vt0 NOT INDEXED, rt0 GROUP BY rt0.c2, t0.c2, rt0.c0, vt0.c0, t0.c0, t0.c1, rt0.c1;
SELECT rt0.c0, t0.c2, rt0.c1, t1.c59, t0.c0, t0.c1, rt0.c2 FROM t0 INDEXED BY i11, t1, rt0 GROUP BY rt0.c0, t0.c2, rt0.c1, t1.c59, t0.c0, t0.c1, rt0.c2;
SELECT t1.c59 FROM rt0, vt0, t0, t1;
SELECT ALL t1.c59 FROM rt0, vt0, t0, t1 WHERE ((+ (((t0.c1)<=(x''))))) UNION ALL SELECT ALL t1.c59 FROM rt0, vt0, t0, t1 WHERE ((NOT ((+ (((t0.c1)<=(x''))))))) UNION ALL SELECT t1.c59 FROM rt0, vt0, t0, t1 WHERE ((((+ (((t0.c1)<=(x''))))) ISNULL));
SELECT t1.c59 FROM rt0, vt0, t0, t1;
SELECT DISTINCT t1.c59, t0.c1, rt0.c1, t0.c0, rt0.c2 FROM rt0, vt0, t1, t0;
SELECT DISTINCT t1.c59, t0.c1, rt0.c1, t0.c0, rt0.c2 FROM rt0, vt0, t1, t0 WHERE (t0.c2) UNION SELECT DISTINCT t1.c59, t0.c1, rt0.c1, t0.c0, rt0.c2 FROM rt0, vt0, t1, t0 WHERE ((NOT (t0.c2))) UNION SELECT DISTINCT t1.c59, t0.c1, rt0.c1, t0.c0, rt0.c2 FROM rt0, vt0, t1, t0 WHERE (((t0.c2) ISNULL));
SELECT DISTINCT t1.c59, t0.c1, rt0.c1, t0.c0, rt0.c2 FROM rt0, vt0, t1, t0;
SELECT t0.c1, t0.c2 FROM t0 GROUP BY t0.c1, t0.c2;
SELECT t0.c1, t0.c2 FROM t0 WHERE (((((((t0.c2)AND(t0.c1)))AND(t0.c1)))|((((t0.c2)) BETWEEN ((t0.c1)) AND ((t0.c1)))))) GROUP BY t0.c1, t0.c2 UNION SELECT t0.c1, t0.c2 FROM t0 WHERE ((NOT (((((((t0.c2)AND(t0.c1)))AND(t0.c1)))|((((t0.c2)) BETWEEN ((t0.c1)) AND ((t0.c1)))))))) GROUP BY t0.c1, t0.c2 UNION SELECT ALL t0.c1, t0.c2 FROM t0 WHERE (((((((((t0.c2)AND(t0.c1)))AND(t0.c1)))|((((t0.c2)) BETWEEN ((t0.c1)) AND ((t0.c1)))))) ISNULL)) GROUP BY t0.c1, t0.c2;
SELECT t0.c1, t0.c2 FROM t0 GROUP BY t0.c1, t0.c2;
SELECT rt0.c2, rt0.c0, rt0.c1, vt0.c0, t1.c59 FROM t1, vt0 LEFT OUTER JOIN rt0 ON (((((NULL, rt0.c0, t1.c59, t1.c59, NULL, t1.c59, rt0.c1)) BETWEEN ((t1.c59, rt0.c0, vt0.c0, '7iEN宩8QN7', 0.912582511795205, rt0.c1, x'')) AND ((rt0.c0, t1.c59, 'o', rt0.c2, rt0.c0, rt0.c0, rt0.c1)))) BETWEEN (((vt0.c0)==('0.6906486531551043'))) AND ('')) GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0, t1.c59;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt0.c0, t1.c59 FROM t1, vt0 LEFT OUTER JOIN rt0 ON (((((NULL, rt0.c0, t1.c59, t1.c59, NULL, t1.c59, rt0.c1)) BETWEEN ((t1.c59, rt0.c0, vt0.c0, '7iEN宩8QN7', 0.912582511795205, rt0.c1, x'')) AND ((rt0.c0, t1.c59, 'o', rt0.c2, rt0.c0, rt0.c0, rt0.c1)))) BETWEEN (((vt0.c0)=('0.6906486531551043'))) AND ('')) GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0, t1.c59 HAVING COUNT((((vt0.c0))<=((COUNT(*))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt0.c0, t1.c59 FROM t1, vt0 LEFT OUTER JOIN rt0 ON (((((NULL, rt0.c0, t1.c59, t1.c59, NULL, t1.c59, rt0.c1)) BETWEEN ((t1.c59, rt0.c0, vt0.c0, '7iEN宩8QN7', 0.912582511795205, rt0.c1, x'')) AND ((rt0.c0, t1.c59, 'o', rt0.c2, rt0.c0, rt0.c0, rt0.c1)))) BETWEEN (((vt0.c0)==('0.6906486531551043'))) AND ('')) GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0, t1.c59 HAVING (NOT (COUNT((((vt0.c0))<=((COUNT(*))))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt0.c0, t1.c59 FROM t1, vt0 LEFT OUTER JOIN rt0 ON (((((NULL, rt0.c0, t1.c59, t1.c59, NULL, t1.c59, rt0.c1)) BETWEEN ((t1.c59, rt0.c0, vt0.c0, '7iEN宩8QN7', 0.912582511795205, rt0.c1, x'')) AND ((rt0.c0, t1.c59, 'o', rt0.c2, rt0.c0, rt0.c0, rt0.c1)))) BETWEEN (((vt0.c0)==('0.6906486531551043'))) AND ('')) GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0, t1.c59 HAVING ((COUNT((((vt0.c0))<=((COUNT(*)))))) ISNULL);
SELECT ALL t1.c59, t0.c1, vt0.c0, t0.c2, rt0.c1, rt0.c2, rt0.c0, t0.c0 FROM t0, vt0, rt0, t1;
SELECT ALL t1.c59, t0.c1, vt0.c0, t0.c2, rt0.c1, rt0.c2, rt0.c0, t0.c0 FROM t0, vt0, rt0, t1 WHERE (((((((((((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR((- (rt0.c0)))))OR(CASE vt0.c0  WHEN rt0.c0 THEN rt0.c1 END)))AND(NULL)))OR(t0.c0))) UNION ALL SELECT ALL t1.c59, t0.c1, vt0.c0, t0.c2, rt0.c1, rt0.c2, rt0.c0, t0.c0 FROM t0, vt0, rt0, t1 WHERE ((NOT (((((((((((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR((- (rt0.c0)))))OR(CASE vt0.c0  WHEN rt0.c0 THEN rt0.c1 END)))AND(NULL)))OR(t0.c0))))) UNION ALL SELECT t1.c59, t0.c1, vt0.c0, t0.c2, rt0.c1, rt0.c2, rt0.c0, t0.c0 FROM t0, vt0, rt0, t1 WHERE (((((((((((((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR((- (rt0.c0)))))OR(CASE vt0.c0  WHEN rt0.c0 THEN rt0.c1 END)))AND(NULL)))OR(t0.c0))) ISNULL));
SELECT ALL t1.c59, t0.c1, vt0.c0, t0.c2, rt0.c1, rt0.c2, rt0.c0, t0.c0 FROM t0, vt0, rt0, t1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (TRIM(((rt0.c2)>=(rt0.c2)), (NOT ('&wg檠68cx')))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (TRIM(((rt0.c2)>=(rt0.c2)), (NOT ('&wg檠68cx')))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((TRIM(((rt0.c2)>=(rt0.c2)), (NOT ('&wg檠68cx')))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0 FROM rt0, t1, t0 LEFT OUTER JOIN vt0 ON (((t0.c1 IN ())) ISNULL) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, t1, t0 LEFT OUTER JOIN vt0 ON (((t0.c1 IN ())) ISNULL) WHERE ((((vt0.c0, rt0.c2, vt0.c0))<>((t0.c0, t0.c1, t0.c2))) COLLATE NOCASE) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0, t1, t0 LEFT OUTER JOIN vt0 ON (((t0.c1 IN ())) ISNULL) WHERE ((NOT ((((vt0.c0, rt0.c2, vt0.c0))<>((t0.c0, t0.c1, t0.c2))) COLLATE NOCASE))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0, t1, t0 LEFT OUTER JOIN vt0 ON (((t0.c1 IN ())) ISNULL) WHERE ((((((vt0.c0, rt0.c2, vt0.c0))<>((t0.c0, t0.c1, t0.c2))) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, t1, t0 LEFT OUTER JOIN vt0 ON (((t0.c1 IN ())) ISNULL) GROUP BY rt0.c0;
SELECT ALL rt0.c2 FROM rt0, t1, vt0, t0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, t1, vt0, t0 GROUP BY rt0.c2 HAVING SUM(((((((((AVG(t0.c2))AND(TOTAL(rt0.c1))))OR(rt0.c0)))OR(rt0.c1)))AND(t0.c1))) UNION ALL SELECT rt0.c2 FROM rt0, t1, vt0, t0 GROUP BY rt0.c2 HAVING (NOT (SUM(((((((((AVG(t0.c2))AND(TOTAL(rt0.c1))))OR(rt0.c0)))OR(rt0.c1)))AND(t0.c1))))) UNION ALL SELECT ALL rt0.c2 FROM rt0, t1, vt0, t0 GROUP BY rt0.c2 HAVING ((SUM(((((((((AVG(t0.c2))AND(TOTAL(rt0.c1))))OR(rt0.c0)))OR(rt0.c1)))AND(t0.c1)))) ISNULL);
SELECT rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (CASE (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((0.1804772907889448)))  WHEN rt0.c0 THEN ((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)) WHEN rt0.c0 THEN ((((rt0.c1)AND(rt0.c1)))OR(rt0.c1)) WHEN ((rt0.c0)<<(rt0.c2)) THEN CAST(rt0.c1 AS NUMERIC) END) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (CASE (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((0.1804772907889448)))  WHEN rt0.c0 THEN ((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)) WHEN rt0.c0 THEN ((((rt0.c1)AND(rt0.c1)))OR(rt0.c1)) WHEN ((rt0.c0)<<(rt0.c2)) THEN CAST(rt0.c1 AS NUMERIC) END))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (((CASE (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((0.1804772907889448)))  WHEN rt0.c0 THEN ((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)) WHEN rt0.c0 THEN ((((rt0.c1)AND(rt0.c1)))OR(rt0.c1)) WHEN ((rt0.c0)<<(rt0.c2)) THEN CAST(rt0.c1 AS NUMERIC) END) ISNULL));
SELECT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT t0.c0, t0.c2 FROM t0;
SELECT DISTINCT t0.c0, t0.c2 FROM t0 WHERE (CAST((NOT (x'')) AS NUMERIC)) UNION SELECT DISTINCT t0.c0, t0.c2 FROM t0 WHERE ((NOT (CAST((NOT (x'')) AS NUMERIC)))) UNION SELECT DISTINCT t0.c0, t0.c2 FROM t0 WHERE (((CAST((NOT (x'')) AS NUMERIC)) ISNULL));
SELECT DISTINCT t0.c0, t0.c2 FROM t0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((CAST(rt0.c2 AS TEXT)) NOT BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND (0.7208537768074434))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((CAST(rt0.c2 AS TEXT)) NOT BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND (0.7208537768074434))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((CAST(rt0.c2 AS TEXT)) NOT BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND (0.7208537768074434))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, t0.c0 FROM t0, t1, rt0 GROUP BY rt0.c0, rt0.c2, t0.c0;
SELECT rt0.c0, rt0.c2, t0.c0 FROM t0, t1, rt0 GROUP BY rt0.c0, rt0.c2, t0.c0 HAVING AVG(MAX(COUNT(NULL))) UNION ALL SELECT rt0.c0, rt0.c2, t0.c0 FROM t0, t1, rt0 GROUP BY rt0.c0, rt0.c2, t0.c0 HAVING (NOT (AVG(MAX(COUNT(NULL))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, t0.c0 FROM t0, t1, rt0 GROUP BY rt0.c0, rt0.c2, t0.c0 HAVING ((AVG(MAX(COUNT(NULL)))) ISNULL);
SELECT ALL * FROM t0, t1, vt0;
SELECT * FROM t0, t1, vt0 WHERE ((((~ (vt0.c0))) BETWEEN (LOWER(x'')) AND (t0.c2 COLLATE RTRIM))) UNION ALL SELECT ALL * FROM t0, t1, vt0 WHERE ((NOT ((((~ (vt0.c0))) BETWEEN (LOWER(x'')) AND (t0.c2 COLLATE RTRIM))))) UNION ALL SELECT * FROM t0, t1, vt0 WHERE ((((((~ (vt0.c0))) BETWEEN (LOWER(x'')) AND (t0.c2 COLLATE RTRIM))) ISNULL));
SELECT ALL * FROM t0, t1, vt0;
SELECT DISTINCT * FROM t0, vt0, t1, rt0;
SELECT DISTINCT * FROM t0, vt0, t1, rt0 WHERE (t0.c1) UNION SELECT DISTINCT * FROM t0, vt0, t1, rt0 WHERE ((NOT (t0.c1))) UNION SELECT DISTINCT * FROM t0, vt0, t1, rt0 WHERE (((t0.c1) ISNULL));
SELECT DISTINCT * FROM t0, vt0, t1, rt0;
SELECT ALL t0.c0, t0.c1, rt0.c1 FROM t0, rt0 GROUP BY t0.c0, t0.c1, rt0.c1;
SELECT t0.c0, t0.c1, rt0.c1 FROM t0, rt0 WHERE (((CASE rt0.c1  WHEN rt0.c1 THEN t0.c0 ELSE rt0.c2 END) NOT BETWEEN (((rt0.c2)||(rt0.c0))) AND (((x'') BETWEEN (t0.c2) AND (rt0.c0))))) GROUP BY t0.c0, t0.c1, rt0.c1 UNION SELECT ALL t0.c0, t0.c1, rt0.c1 FROM t0, rt0 WHERE ((NOT (((CASE rt0.c1  WHEN rt0.c1 THEN t0.c0 ELSE rt0.c2 END) NOT BETWEEN (((rt0.c2)||(rt0.c0))) AND (((x'') BETWEEN (t0.c2) AND (rt0.c0))))))) GROUP BY t0.c0, t0.c1, rt0.c1 UNION SELECT ALL t0.c0, t0.c1, rt0.c1 FROM t0, rt0 WHERE (((((CASE rt0.c1  WHEN rt0.c1 THEN t0.c0 ELSE rt0.c2 END) NOT BETWEEN (((rt0.c2)||(rt0.c0))) AND (((x'') BETWEEN (t0.c2) AND (rt0.c0))))) ISNULL)) GROUP BY t0.c0, t0.c1, rt0.c1;
SELECT ALL t0.c0, t0.c1, rt0.c1 FROM t0, rt0 GROUP BY t0.c0, t0.c1, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING MIN((((rt0.c2, GROUP_CONCAT(MAX(GROUP_CONCAT(COUNT(*)))), rt0.c2))<((MAX(AVG(rt0.c1)), rt0.c2, MIN(rt0.c0))))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (MIN((((rt0.c2, GROUP_CONCAT(MAX(GROUP_CONCAT(COUNT(*)))), rt0.c2))<((MAX(AVG(rt0.c1)), rt0.c2, MIN(rt0.c0))))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((MIN((((rt0.c2, GROUP_CONCAT(MAX(GROUP_CONCAT(COUNT(*)))), rt0.c2))<((MAX(AVG(rt0.c1)), rt0.c2, MIN(rt0.c0)))))) ISNULL);
SELECT ALL SUM((~ ((~ (t1.c59))))) FROM t1 ORDER BY ((t1.c59)OR((NOT (t1.c59))));
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (PRINTF(vt0.c0) COLLATE BINARY COLLATE RTRIM) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (PRINTF(vt0.c0) COLLATE BINARY COLLATE RTRIM))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((PRINTF(vt0.c0) COLLATE BINARY COLLATE RTRIM) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE '900553091' END)>(rt0.c1))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT (((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE '900553091' END)>(rt0.c1))))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE '900553091' END)>(rt0.c1))) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT ALL t0.c1, t0.c0 FROM t1, t0 GROUP BY t0.c1, t0.c0;
SELECT ALL t0.c1, t0.c0 FROM t1, t0 WHERE (TYPEOF(t0.c1 COLLATE BINARY)) GROUP BY t0.c1, t0.c0 UNION SELECT ALL t0.c1, t0.c0 FROM t1, t0 WHERE ((NOT (TYPEOF(t0.c1 COLLATE BINARY)))) GROUP BY t0.c1, t0.c0 UNION SELECT t0.c1, t0.c0 FROM t1, t0 WHERE (((TYPEOF(t0.c1 COLLATE BINARY)) ISNULL)) GROUP BY t0.c1, t0.c0;
SELECT ALL t0.c1, t0.c0 FROM t1, t0 GROUP BY t0.c1, t0.c0;
SELECT t1.c59, rt0.c0, t0.c0, t0.c1, t0.c2, vt0.c0, rt0.c1 FROM t1, t0, rt0, vt0 GROUP BY t1.c59, rt0.c0, t0.c0, t0.c1, t0.c2, vt0.c0, rt0.c1;
SELECT t1.c59, rt0.c0, t0.c0, t0.c1, t0.c2, vt0.c0, rt0.c1 FROM t1, t0, rt0, vt0 GROUP BY t1.c59, rt0.c0, t0.c0, t0.c1, t0.c2, vt0.c0, rt0.c1 HAVING COUNT(((rt0.c2) NOT BETWEEN (rt0.c1) AND (MIN(t0.c0)))) UNION ALL SELECT t1.c59, rt0.c0, t0.c0, t0.c1, t0.c2, vt0.c0, rt0.c1 FROM t1, t0, rt0, vt0 GROUP BY t1.c59, rt0.c0, t0.c0, t0.c1, t0.c2, vt0.c0, rt0.c1 HAVING (NOT (COUNT(((rt0.c2) NOT BETWEEN (rt0.c1) AND (MIN(t0.c0)))))) UNION ALL SELECT t1.c59, rt0.c0, t0.c0, t0.c1, t0.c2, vt0.c0, rt0.c1 FROM t1, t0, rt0, vt0 GROUP BY t1.c59, rt0.c0, t0.c0, t0.c1, t0.c2, vt0.c0, rt0.c1 HAVING ((COUNT(((rt0.c2) NOT BETWEEN (rt0.c1) AND (MIN(t0.c0))))) ISNULL);
SELECT ALL rt0.c1 FROM vt0, t1, rt0;
SELECT ALL rt0.c1 FROM vt0, t1, rt0 WHERE ((- (0.5274654929309915))) UNION ALL SELECT rt0.c1 FROM vt0, t1, rt0 WHERE ((NOT ((- (0.5274654929309915))))) UNION ALL SELECT rt0.c1 FROM vt0, t1, rt0 WHERE ((((- (0.5274654929309915))) ISNULL));
SELECT ALL rt0.c1 FROM vt0, t1, rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0, vt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0, vt0 WHERE (CASE NULL  WHEN ((((vt0.c0)OR(rt0.c1)))AND(rt0.c1)) THEN ((rt0.c2)<<(vt0.c0)) END) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0, vt0 WHERE ((NOT (CASE NULL  WHEN ((((vt0.c0)OR(rt0.c1)))AND(rt0.c1)) THEN ((rt0.c2)<<(vt0.c0)) END))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0, vt0 WHERE (((CASE NULL  WHEN ((((vt0.c0)OR(rt0.c1)))AND(rt0.c1)) THEN ((rt0.c2)<<(vt0.c0)) END) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0, vt0;
SELECT rt0.c1, t0.c0, rt0.c0, vt0.c0, t1.c59, t0.c1, rt0.c2 FROM rt0, t1, vt0, t0 GROUP BY rt0.c1, t0.c0, rt0.c0, vt0.c0, t1.c59, t0.c1, rt0.c2;
SELECT rt0.c1, t0.c0, rt0.c0, vt0.c0, t1.c59, t0.c1, rt0.c2 FROM rt0, t1, vt0, t0 WHERE (UNLIKELY(HEX(DISTINCT t1.c59))) GROUP BY rt0.c1, t0.c0, rt0.c0, vt0.c0, t1.c59, t0.c1, rt0.c2 UNION SELECT rt0.c1, t0.c0, rt0.c0, vt0.c0, t1.c59, t0.c1, rt0.c2 FROM rt0, t1, vt0, t0 WHERE ((NOT (UNLIKELY(HEX(DISTINCT t1.c59))))) GROUP BY rt0.c1, t0.c0, rt0.c0, vt0.c0, t1.c59, t0.c1, rt0.c2 UNION SELECT rt0.c1, t0.c0, rt0.c0, vt0.c0, t1.c59, t0.c1, rt0.c2 FROM rt0, t1, vt0, t0 WHERE (((UNLIKELY(HEX(DISTINCT t1.c59))) ISNULL)) GROUP BY rt0.c1, t0.c0, rt0.c0, vt0.c0, t1.c59, t0.c1, rt0.c2;
SELECT rt0.c1, t0.c0, rt0.c0, vt0.c0, t1.c59, t0.c1, rt0.c2 FROM rt0, t1, vt0, t0 GROUP BY rt0.c1, t0.c0, rt0.c0, vt0.c0, t1.c59, t0.c1, rt0.c2;
SELECT t0.c2, t0.c1, t0.c0 FROM t1, t0 LEFT OUTER JOIN vt0 ON (NOT ('-913445033')) GROUP BY t0.c2, t0.c1, t0.c0;
SELECT t0.c2, t0.c1, t0.c0 FROM t1, t0 LEFT OUTER JOIN vt0 ON (NOT ('-913445033')) GROUP BY t0.c2, t0.c1, t0.c0 HAVING MIN(MIN(t1.c59) COLLATE BINARY) UNION ALL SELECT t0.c2, t0.c1, t0.c0 FROM t1, t0 LEFT OUTER JOIN vt0 ON (NOT ('-913445033')) GROUP BY t0.c2, t0.c1, t0.c0 HAVING (NOT (MIN(MIN(t1.c59) COLLATE BINARY))) UNION ALL SELECT t0.c2, t0.c1, t0.c0 FROM t1, t0 LEFT OUTER JOIN vt0 ON (NOT ('-913445033')) GROUP BY t0.c2, t0.c1, t0.c0 HAVING ((MIN(MIN(t1.c59) COLLATE BINARY)) ISNULL);
SELECT ALL SUM(NULL) FROM rt0, t1, vt0, t0 ORDER BY ((NULL COLLATE BINARY) NOT BETWEEN (((t0.c1)*(rt0.c0))) AND (t0.c0)) DESC;
SELECT t1.c59 FROM t1;
SELECT t1.c59 FROM t1 WHERE (CAST(((t1.c59)OR(t1.c59)) AS INTEGER)) UNION ALL SELECT t1.c59 FROM t1 WHERE ((NOT (CAST(((t1.c59)OR(t1.c59)) AS INTEGER)))) UNION ALL SELECT t1.c59 FROM t1 WHERE (((CAST(((t1.c59)OR(t1.c59)) AS INTEGER)) ISNULL));
SELECT t1.c59 FROM t1;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((((json_array_length(x'de2c'))OR(((t0.c2) BETWEEN (t0.c0) AND (t0.c2)))))OR(''))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((((json_array_length(x'de2c'))OR(((t0.c2) BETWEEN (t0.c0) AND (t0.c2)))))OR(''))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((((json_array_length(x'de2c'))OR(((t0.c2) BETWEEN (t0.c0) AND (t0.c2)))))OR(''))) ISNULL));
SELECT t0.c0, t0.c1, rt0.c1, rt0.c2, vt0.c0 FROM rt0, t1, vt0, t0 GROUP BY t0.c0, t0.c1, rt0.c1, rt0.c2, vt0.c0;
SELECT ALL t0.c0, t0.c1, rt0.c1, rt0.c2, vt0.c0 FROM rt0, t1, vt0, t0 WHERE ((((t0.c1 COLLATE BINARY))<=(((- ('0(')))))) GROUP BY t0.c0, t0.c1, rt0.c1, rt0.c2, vt0.c0 UNION SELECT ALL t0.c0, t0.c1, rt0.c1, rt0.c2, vt0.c0 FROM rt0, t1, vt0, t0 WHERE ((NOT ((((t0.c1 COLLATE BINARY))<=(((- ('0(')))))))) GROUP BY t0.c0, t0.c1, rt0.c1, rt0.c2, vt0.c0 UNION SELECT t0.c0, t0.c1, rt0.c1, rt0.c2, vt0.c0 FROM rt0, t1, vt0, t0 NOT INDEXED WHERE ((((((t0.c1 COLLATE BINARY))<=(((- ('0(')))))) ISNULL)) GROUP BY t0.c0, t0.c1, rt0.c1, rt0.c2, vt0.c0;
SELECT t0.c0, t0.c1, rt0.c1, rt0.c2, vt0.c0 FROM rt0, t1, vt0, t0 GROUP BY t0.c0, t0.c1, rt0.c1, rt0.c2, vt0.c0;
SELECT ALL t0.c2 FROM t0, vt0, t1 GROUP BY t0.c2;
SELECT t0.c2 FROM t0, vt0, t1 GROUP BY t0.c2 HAVING t0.c1 UNION ALL SELECT ALL t0.c2 FROM t0, vt0, t1 GROUP BY t0.c2 HAVING (NOT (t0.c1)) UNION ALL SELECT t0.c2 FROM t0, vt0, t1 GROUP BY t0.c2 HAVING ((t0.c1) ISNULL);
SELECT ALL t0.c2 FROM t0, vt0, t1 GROUP BY t0.c2;
SELECT t0.c2 FROM t0, vt0, t1 GROUP BY t0.c2 HAVING t0.c1 UNION ALL SELECT ALL t0.c2 FROM t0, vt0, t1 GROUP BY t0.c2 HAVING (NOT (t0.c1)) UNION ALL SELECT t0.c2 FROM t0, vt0, t1 GROUP BY t0.c2 HAVING ((t0.c1) ISNULL);
SELECT ALL t0.c2 FROM t0, vt0, t1 GROUP BY t0.c2;
SELECT * FROM t1, t0 NOT INDEXED;
SELECT * FROM t1, t0 WHERE (((((t0.c0)>(t0.c0)))%((t0.c2 IN ())))) UNION ALL SELECT ALL * FROM t1, t0 WHERE ((NOT (((((t0.c0)>(t0.c0)))%((t0.c2 IN ())))))) UNION ALL SELECT * FROM t1, t0 WHERE (((((((t0.c0)>(t0.c0)))%((t0.c2 IN ())))) ISNULL));
SELECT * FROM t1, t0 NOT INDEXED;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0, t1;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0, t1 WHERE (LIKELIHOOD(((rt0.c2)GLOB(rt0.c2)), 0.8276118796996007)) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0, t1 WHERE ((NOT (LIKELIHOOD(((rt0.c2)GLOB(rt0.c2)), 0.8276118796996007)))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0, t1 WHERE (((LIKELIHOOD(((rt0.c2)GLOB(rt0.c2)), 0.8276118796996007)) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0, t1;
SELECT ALL rt0.c1, t0.c1, rt0.c2, t0.c2, t0.c0, rt0.c0 FROM t0 INNER JOIN rt0 ON ((((t0.c1 COLLATE RTRIM)OR((('')<(t0.c1)))))OR(CASE rt0.c1  WHEN rt0.c1 THEN t0.c0 ELSE t0.c0 END)) GROUP BY rt0.c1, t0.c1, rt0.c2, t0.c2, t0.c0, rt0.c0;
SELECT rt0.c1, t0.c1, rt0.c2, t0.c2, t0.c0, rt0.c0 FROM t0 INNER JOIN rt0 ON ((((t0.c1 COLLATE RTRIM)OR((('')<(t0.c1)))))OR(CASE rt0.c1  WHEN rt0.c1 THEN t0.c0 ELSE t0.c0 END)) WHERE (((((rt0.c2)<(t0.c2))) NOT BETWEEN (x'bd89db01' COLLATE BINARY) AND ((t0.c0 IN (rt0.c1, rt0.c0))))) GROUP BY rt0.c1, t0.c1, rt0.c2, t0.c2, t0.c0, rt0.c0 UNION SELECT rt0.c1, t0.c1, rt0.c2, t0.c2, t0.c0, rt0.c0 FROM t0 INNER JOIN rt0 ON ((((t0.c1 COLLATE RTRIM)OR((('')<(t0.c1)))))OR(CASE rt0.c1  WHEN rt0.c1 THEN t0.c0 ELSE t0.c0 END)) WHERE ((NOT (((((rt0.c2)<(t0.c2))) NOT BETWEEN (x'bd89db01' COLLATE BINARY) AND ((t0.c0 IN (rt0.c1, rt0.c0))))))) GROUP BY rt0.c1, t0.c1, rt0.c2, t0.c2, t0.c0, rt0.c0 UNION SELECT rt0.c1, t0.c1, rt0.c2, t0.c2, t0.c0, rt0.c0 FROM t0 INNER JOIN rt0 ON ((((t0.c1 COLLATE RTRIM)OR((('')<(t0.c1)))))OR(CASE rt0.c1  WHEN rt0.c1 THEN t0.c0 ELSE t0.c0 END)) WHERE (((((((rt0.c2)<(t0.c2))) NOT BETWEEN (x'bd89db01' COLLATE BINARY) AND ((t0.c0 IN (rt0.c1, rt0.c0))))) ISNULL)) GROUP BY rt0.c1, t0.c1, rt0.c2, t0.c2, t0.c0, rt0.c0;
SELECT ALL rt0.c1, t0.c1, rt0.c2, t0.c2, t0.c0, rt0.c0 FROM t0 INNER JOIN rt0 ON ((((t0.c1 COLLATE RTRIM)OR((('')<(t0.c1)))))OR(CASE rt0.c1  WHEN rt0.c1 THEN t0.c0 ELSE t0.c0 END)) GROUP BY rt0.c1, t0.c1, rt0.c2, t0.c2, t0.c0, rt0.c0;
SELECT ALL rt0.c1, t0.c0, rt0.c0, t1.c59, t0.c1, t0.c2 FROM t1 FULL OUTER JOIN t0 ON CAST('' AS INTEGER) RIGHT OUTER JOIN rt0 ON CASE (NOT (rt0.c2))  WHEN (((rt0.c1))<=((t0.c0))) THEN LOWER(DISTINCT rt0.c1) END GROUP BY rt0.c1, t0.c0, rt0.c0, t1.c59, t0.c1, t0.c2;
SELECT rt0.c1, t0.c0, rt0.c0, t1.c59, t0.c1, t0.c2 FROM t1 FULL OUTER JOIN t0 ON CAST('' AS INTEGER) RIGHT OUTER JOIN rt0 ON CASE (NOT (rt0.c2))  WHEN (((rt0.c1))<=((t0.c0))) THEN LOWER(DISTINCT rt0.c1) END GROUP BY rt0.c1, t0.c0, rt0.c0, t1.c59, t0.c1, t0.c2 HAVING COUNT(*) UNION ALL SELECT rt0.c1, t0.c0, rt0.c0, t1.c59, t0.c1, t0.c2 FROM t1 FULL OUTER JOIN t0 ON CAST('' AS INTEGER) RIGHT OUTER JOIN rt0 ON CASE (NOT (rt0.c2))  WHEN (((rt0.c1))<=((t0.c0))) THEN LOWER(DISTINCT rt0.c1) END GROUP BY rt0.c1, t0.c0, rt0.c0, t1.c59, t0.c1, t0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1, t0.c0, rt0.c0, t1.c59, t0.c1, t0.c2 FROM t1 FULL OUTER JOIN t0 ON CAST('' AS INTEGER) RIGHT OUTER JOIN rt0 ON CASE (NOT (rt0.c2))  WHEN (((rt0.c1))<=((t0.c0))) THEN LOWER(DISTINCT rt0.c1) END GROUP BY rt0.c1, t0.c0, rt0.c0, t1.c59, t0.c1, t0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c1, t0.c0, rt0.c0, t1.c59, t0.c1, t0.c2 FROM t1 FULL OUTER JOIN t0 ON CAST('' AS INTEGER) RIGHT OUTER JOIN rt0 ON CASE (NOT (rt0.c2))  WHEN (((rt0.c1))<=((t0.c0))) THEN LOWER(DISTINCT rt0.c1) END GROUP BY rt0.c1, t0.c0, rt0.c0, t1.c59, t0.c1, t0.c2;
SELECT rt0.c1, t0.c0, rt0.c0, t1.c59, t0.c1, t0.c2 FROM t1 FULL OUTER JOIN t0 ON CAST('' AS INTEGER) RIGHT OUTER JOIN rt0 ON CASE (NOT (rt0.c2))  WHEN (((rt0.c1))<=((t0.c0))) THEN LOWER(DISTINCT rt0.c1) END GROUP BY rt0.c1, t0.c0, rt0.c0, t1.c59, t0.c1, t0.c2 HAVING COUNT(*) UNION ALL SELECT rt0.c1, t0.c0, rt0.c0, t1.c59, t0.c1, t0.c2 FROM t1 FULL OUTER JOIN t0 ON CAST('' AS INTEGER) RIGHT OUTER JOIN rt0 ON CASE (NOT (rt0.c2))  WHEN (((rt0.c1))<=((t0.c0))) THEN LOWER(DISTINCT rt0.c1) END GROUP BY rt0.c1, t0.c0, rt0.c0, t1.c59, t0.c1, t0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1, t0.c0, rt0.c0, t1.c59, t0.c1, t0.c2 FROM t1 FULL OUTER JOIN t0 ON CAST('' AS INTEGER) RIGHT OUTER JOIN rt0 ON CASE (NOT (rt0.c2))  WHEN (((rt0.c1))<=((t0.c0))) THEN LOWER(DISTINCT rt0.c1) END GROUP BY rt0.c1, t0.c0, rt0.c0, t1.c59, t0.c1, t0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c1, t0.c0, rt0.c0, t1.c59, t0.c1, t0.c2 FROM t1 FULL OUTER JOIN t0 ON CAST('' AS INTEGER) RIGHT OUTER JOIN rt0 ON CASE (NOT (rt0.c2))  WHEN (((rt0.c1))<=((t0.c0))) THEN LOWER(DISTINCT rt0.c1) END GROUP BY rt0.c1, t0.c0, rt0.c0, t1.c59, t0.c1, t0.c2;
SELECT rt0.c0 FROM rt0, vt0;
SELECT ALL rt0.c0 FROM rt0, vt0 WHERE (CAST(((rt0.c2)LIKE(rt0.c2)) AS NUMERIC)) UNION ALL SELECT ALL rt0.c0 FROM rt0, vt0 WHERE ((NOT (CAST(((rt0.c2)LIKE(rt0.c2)) AS NUMERIC)))) UNION ALL SELECT rt0.c0 FROM rt0, vt0 WHERE (((CAST(((rt0.c2)LIKE(rt0.c2)) AS NUMERIC)) ISNULL));
SELECT rt0.c0 FROM rt0, vt0;
SELECT DISTINCT t0.c1, rt0.c2, t0.c2, t0.c0, rt0.c1, vt0.c0, t1.c59 FROM rt0, t1 RIGHT OUTER JOIN vt0 ON t0.c1 COLLATE NOCASE INNER JOIN t0 ON (((COALESCE(t0.c0, t0.c0)))<((((t0.c1)+(t1.c59)))));
SELECT t0.c2, rt0.c1, rt0.c0 FROM t0 INNER JOIN rt0 ON (NOT (t0.c2)) GROUP BY t0.c2, rt0.c1, rt0.c0;
SELECT ALL t0.c2, rt0.c1, rt0.c0 FROM t0 INNER JOIN rt0 ON (NOT (t0.c2)) WHERE ((((((('-1547435300') BETWEEN (rt0.c2) AND (rt0.c2)))OR(((0.06625938510810647) IS TRUE))))OR(((((((((rt0.c0)AND(rt0.c2)))OR(t0.c1)))AND(t0.c0)))OR(''))))) GROUP BY t0.c2, rt0.c1, rt0.c0 UNION SELECT t0.c2, rt0.c1, rt0.c0 FROM t0 INNER JOIN rt0 ON (NOT (t0.c2)) WHERE ((NOT ((((((('-1547435300') BETWEEN (rt0.c2) AND (rt0.c2)))OR(((0.06625938510810647) IS TRUE))))OR(((((((((rt0.c0)AND(rt0.c2)))OR(t0.c1)))AND(t0.c0)))OR(''))))))) GROUP BY t0.c2, rt0.c1, rt0.c0 UNION SELECT t0.c2, rt0.c1, rt0.c0 FROM t0 INNER JOIN rt0 ON (NOT (t0.c2)) WHERE ((((((((('-1547435300') BETWEEN (rt0.c2) AND (rt0.c2)))OR(((0.06625938510810647) IS TRUE))))OR(((((((((rt0.c0)AND(rt0.c2)))OR(t0.c1)))AND(t0.c0)))OR(''))))) ISNULL)) GROUP BY t0.c2, rt0.c1, rt0.c0;
SELECT t0.c2, rt0.c1, rt0.c0 FROM t0 INNER JOIN rt0 ON (NOT (t0.c2)) GROUP BY t0.c2, rt0.c1, rt0.c0;
SELECT t1.c59 FROM t1 GROUP BY t1.c59;
SELECT ALL t1.c59 FROM t1 GROUP BY t1.c59 HAVING ((MIN(AVG(t1.c59))) ISNULL) UNION ALL SELECT ALL t1.c59 FROM t1 GROUP BY t1.c59 HAVING (NOT (((MIN(AVG(t1.c59))) ISNULL))) UNION ALL SELECT ALL t1.c59 FROM t1 GROUP BY t1.c59 HAVING ((((MIN(AVG(t1.c59))) ISNULL)) ISNULL);
SELECT t0.c1, t0.c0 FROM vt0 NATURAL JOIN t0;
SELECT t0.c1, t0.c0 FROM vt0 NATURAL JOIN t0 WHERE (((vt0.c0 COLLATE NOCASE)/((((t0.c0))<((t0.c0)))))) UNION ALL SELECT ALL t0.c1, t0.c0 FROM vt0 NATURAL JOIN t0 WHERE ((NOT (((vt0.c0 COLLATE NOCASE)/((((t0.c0))<((t0.c0)))))))) UNION ALL SELECT ALL t0.c1, t0.c0 FROM vt0 NATURAL JOIN t0 WHERE (((((vt0.c0 COLLATE NOCASE)/((((t0.c0))<((t0.c0)))))) ISNULL));
SELECT t0.c1, t0.c0 FROM vt0 NATURAL JOIN t0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CASE ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))  WHEN UPPER(rt0.c0) THEN rt0.c2 COLLATE RTRIM WHEN ((rt0.c0)LIKE(rt0.c1)) THEN ((rt0.c2)IS(rt0.c1)) WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)) THEN ((((((((((((rt0.c1)OR(NULL)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c1)) ELSE ((rt0.c0) NOT NULL) END) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CASE ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))  WHEN UPPER(rt0.c0) THEN rt0.c2 COLLATE RTRIM WHEN ((rt0.c0)LIKE(rt0.c1)) THEN ((rt0.c2)IS(rt0.c1)) WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)) THEN ((((((((((((rt0.c1)OR(NULL)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c1)) ELSE ((rt0.c0) NOT NULL) END))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CASE ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))  WHEN UPPER(rt0.c0) THEN rt0.c2 COLLATE RTRIM WHEN ((rt0.c0)LIKE(rt0.c1)) THEN ((rt0.c2)IS(rt0.c1)) WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)) THEN ((((((((((((rt0.c1)OR(NULL)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c1)) ELSE ((rt0.c0) NOT NULL) END) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, t1.c59, vt0.c0 FROM t1, rt0, vt0 GROUP BY rt0.c1, t1.c59, vt0.c0;
SELECT ALL rt0.c1, t1.c59, vt0.c0 FROM t1, rt0, vt0 WHERE (vt0.c0) GROUP BY rt0.c1, t1.c59, vt0.c0 UNION SELECT ALL rt0.c1, t1.c59, vt0.c0 FROM t1, rt0, vt0 WHERE ((NOT (vt0.c0))) GROUP BY rt0.c1, t1.c59, vt0.c0 UNION SELECT ALL rt0.c1, t1.c59, vt0.c0 FROM t1, rt0, vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY rt0.c1, t1.c59, vt0.c0;
SELECT ALL rt0.c1, t1.c59, vt0.c0 FROM t1, rt0, vt0 GROUP BY rt0.c1, t1.c59, vt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0, t1, vt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0, t1, vt0 GROUP BY rt0.c1, rt0.c0 HAVING CAST(MIN(COUNT(rt0.c1)) AS REAL) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0, t1, vt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (CAST(MIN(COUNT(rt0.c1)) AS REAL))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0, t1, vt0 GROUP BY rt0.c1, rt0.c0 HAVING ((CAST(MIN(COUNT(rt0.c1)) AS REAL)) ISNULL);
SELECT ALL * FROM t1, rt0;
SELECT * FROM t1, rt0 WHERE (CASE (t1.c59 IN ())  WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((t1.c59))) THEN ((t1.c59)<(rt0.c0)) END) UNION ALL SELECT * FROM t1, rt0 WHERE ((NOT (CASE (t1.c59 IN ())  WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((t1.c59))) THEN ((t1.c59)<(rt0.c0)) END))) UNION ALL SELECT ALL * FROM t1, rt0 WHERE (((CASE (t1.c59 IN ())  WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((t1.c59))) THEN ((t1.c59)<(rt0.c0)) END) ISNULL));
SELECT ALL * FROM t1, rt0;
SELECT DISTINCT * FROM t1, rt0, t0;
SELECT DISTINCT * FROM t1, rt0, t0 WHERE (t0.c2) UNION SELECT DISTINCT * FROM t1, rt0, t0 WHERE ((NOT (t0.c2))) UNION SELECT DISTINCT * FROM t1, rt0, t0 WHERE (((t0.c2) ISNULL));
SELECT DISTINCT * FROM t1, rt0, t0;
SELECT ALL t1.c59, vt0.c0 FROM vt0, t1 GROUP BY t1.c59, vt0.c0;
SELECT ALL t1.c59, vt0.c0 FROM vt0, t1 WHERE (CAST(CAST(vt0.c0 AS NUMERIC) AS TEXT)) GROUP BY t1.c59, vt0.c0 UNION SELECT t1.c59, vt0.c0 FROM vt0, t1 WHERE ((NOT (CAST(CAST(vt0.c0 AS NUMERIC) AS TEXT)))) GROUP BY t1.c59, vt0.c0 UNION SELECT ALL t1.c59, vt0.c0 FROM vt0, t1 WHERE (((CAST(CAST(vt0.c0 AS NUMERIC) AS TEXT)) ISNULL)) GROUP BY t1.c59, vt0.c0;
SELECT ALL t1.c59, vt0.c0 FROM vt0, t1 GROUP BY t1.c59, vt0.c0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM t1, vt0 INDEXED BY i82, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT * FROM t0, vt0, rt0;
SELECT ALL * FROM t0, vt0, rt0 WHERE (CAST(((t0.c0)>(rt0.c0)) AS INTEGER)) UNION ALL SELECT ALL * FROM t0, vt0, rt0 WHERE ((NOT (CAST(((t0.c0)>(rt0.c0)) AS INTEGER)))) UNION ALL SELECT * FROM t0, vt0, rt0 WHERE (((CAST(((t0.c0)>(rt0.c0)) AS INTEGER)) ISNULL));
SELECT * FROM t0, vt0, rt0;
SELECT DISTINCT t0.c1, t0.c2, rt0.c2, t0.c0, rt0.c0 FROM rt0, t0;
SELECT DISTINCT t0.c1, t0.c2, rt0.c2, t0.c0, rt0.c0 FROM rt0, t0 WHERE (json_array_length((rt0.c0 IN (t0.c2)))) UNION SELECT DISTINCT t0.c1, t0.c2, rt0.c2, t0.c0, rt0.c0 FROM rt0, t0 WHERE ((NOT (json_array_length((rt0.c0 IN (t0.c2)))))) UNION SELECT DISTINCT t0.c1, t0.c2, rt0.c2, t0.c0, rt0.c0 FROM rt0, t0 WHERE (((json_array_length((rt0.c0 IN (t0.c2)))) ISNULL));
SELECT DISTINCT t0.c1, t0.c2, rt0.c2, t0.c0, rt0.c0 FROM rt0, t0;
SELECT t1.c59, rt0.c0, rt0.c1, t0.c1, t0.c0, rt0.c2 FROM t1, rt0, t0 GROUP BY t1.c59, rt0.c0, rt0.c1, t0.c1, t0.c0, rt0.c2;
SELECT t1.c59, rt0.c0, rt0.c1, t0.c1, t0.c0, rt0.c2 FROM t1, rt0, t0 WHERE (NULL) GROUP BY t1.c59, rt0.c0, rt0.c1, t0.c1, t0.c0, rt0.c2 UNION SELECT ALL t1.c59, rt0.c0, rt0.c1, t0.c1, t0.c0, rt0.c2 FROM t1, rt0, t0 WHERE ((NOT (NULL))) GROUP BY t1.c59, rt0.c0, rt0.c1, t0.c1, t0.c0, rt0.c2 UNION SELECT ALL t1.c59, rt0.c0, rt0.c1, t0.c1, t0.c0, rt0.c2 FROM t1, rt0, t0 WHERE (((NULL) ISNULL)) GROUP BY t1.c59, rt0.c0, rt0.c1, t0.c1, t0.c0, rt0.c2;
SELECT t1.c59, rt0.c0, rt0.c1, t0.c1, t0.c0, rt0.c2 FROM t1, rt0, t0 GROUP BY t1.c59, rt0.c0, rt0.c1, t0.c1, t0.c0, rt0.c2;
SELECT ALL t0.c0, t0.c2, rt0.c1, t0.c1, t1.c59, rt0.c2, rt0.c0, vt0.c0 FROM rt0, t0 INNER JOIN t1 ON (((t0.c1)) NOT BETWEEN (((rt0.c2 IN ()))) AND ((((rt0.c1)||(rt0.c0))))) INNER JOIN vt0 ON ((((((((rt0.c0 COLLATE BINARY)AND(LOWER(DISTINCT rt0.c1))))OR(((((0.8766180880345525)OR(0.38295046245492936)))AND(t0.c0)))))OR(t0.c1 COLLATE BINARY)))AND(((rt0.c2)IS NOT(t0.c1)))) GROUP BY t0.c0, t0.c2, rt0.c1, t0.c1, t1.c59, rt0.c2, rt0.c0, vt0.c0;
SELECT ALL t0.c0, t0.c2, rt0.c1, t0.c1, t1.c59, rt0.c2, rt0.c0, vt0.c0 FROM rt0, t0 INNER JOIN t1 ON (((t0.c1)) NOT BETWEEN (((rt0.c2 IN ()))) AND ((((rt0.c1)||(rt0.c0))))) INNER JOIN vt0 ON ((((((((rt0.c0 COLLATE BINARY)AND(LOWER(DISTINCT rt0.c1))))OR(((((0.8766180880345525)OR(0.38295046245492936)))AND(t0.c0)))))OR(t0.c1 COLLATE BINARY)))AND(((rt0.c2)IS NOT(t0.c1)))) GROUP BY t0.c0, t0.c2, rt0.c1, t0.c1, t1.c59, rt0.c2, rt0.c0, vt0.c0 HAVING MIN(SUM(SUM(rt0.c1))) UNION ALL SELECT ALL t0.c0, t0.c2, rt0.c1, t0.c1, t1.c59, rt0.c2, rt0.c0, vt0.c0 FROM rt0, t0 INNER JOIN t1 ON (((t0.c1)) NOT BETWEEN (((rt0.c2 IN ()))) AND ((((rt0.c1)||(rt0.c0))))) INNER JOIN vt0 ON ((((((((rt0.c0 COLLATE BINARY)AND(LOWER(DISTINCT rt0.c1))))OR(((((0.8766180880345525)OR(0.38295046245492936)))AND(t0.c0)))))OR(t0.c1 COLLATE BINARY)))AND(((rt0.c2)IS NOT(t0.c1)))) GROUP BY t0.c0, t0.c2, rt0.c1, t0.c1, t1.c59, rt0.c2, rt0.c0, vt0.c0 HAVING (NOT (MIN(SUM(SUM(rt0.c1))))) UNION ALL SELECT t0.c0, t0.c2, rt0.c1, t0.c1, t1.c59, rt0.c2, rt0.c0, vt0.c0 FROM rt0, t0 INNER JOIN t1 ON (((t0.c1)) NOT BETWEEN (((rt0.c2 IN ()))) AND ((((rt0.c1)||(rt0.c0))))) INNER JOIN vt0 ON ((((((((rt0.c0 COLLATE BINARY)AND(LOWER(DISTINCT rt0.c1))))OR(((((0.8766180880345525)OR(0.38295046245492936)))AND(t0.c0)))))OR(t0.c1 COLLATE BINARY)))AND(((rt0.c2)IS NOT(t0.c1)))) GROUP BY t0.c0, t0.c2, rt0.c1, t0.c1, t1.c59, rt0.c2, rt0.c0, vt0.c0 HAVING ((MIN(SUM(SUM(rt0.c1)))) ISNULL);
SELECT ALL * FROM vt0, rt0, t0 INDEXED BY i11, t1;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (((((rt0.c1)<(0.753266030515995))) BETWEEN (((rt0.c1)<<(rt0.c2))) AND ((((rt0.c2))<((rt0.c1)))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (((((rt0.c1)<(0.753266030515995))) BETWEEN (((rt0.c1)<<(rt0.c2))) AND ((((rt0.c2))<((rt0.c1)))))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((((((rt0.c1)<(0.753266030515995))) BETWEEN (((rt0.c1)<<(rt0.c2))) AND ((((rt0.c2))<((rt0.c1)))))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT t1.c59, vt0.c0 FROM vt0, t1 GROUP BY t1.c59, vt0.c0;
SELECT ALL t1.c59, vt0.c0 FROM vt0, t1 WHERE ((((((((vt0.c0))>((t1.c59))))AND(x'' COLLATE RTRIM)))OR((t1.c59 IN ())))) GROUP BY t1.c59, vt0.c0 UNION SELECT t1.c59, vt0.c0 FROM vt0, t1 WHERE ((NOT ((((((((vt0.c0))>((t1.c59))))AND(x'' COLLATE RTRIM)))OR((t1.c59 IN ())))))) GROUP BY t1.c59, vt0.c0 UNION SELECT t1.c59, vt0.c0 FROM vt0, t1 WHERE ((((((((((vt0.c0))>((t1.c59))))AND(x'' COLLATE RTRIM)))OR((t1.c59 IN ())))) ISNULL)) GROUP BY t1.c59, vt0.c0;
SELECT t1.c59, vt0.c0 FROM vt0, t1 GROUP BY t1.c59, vt0.c0;
SELECT t1.c59, t0.c0 FROM t1 INNER JOIN t0 ON CAST(((t0.c2) NOT NULL) AS BLOB) INNER JOIN vt0 ON 0X2c1971af GROUP BY t1.c59, t0.c0;
SELECT t1.c59, t0.c0 FROM t1 INNER JOIN t0 ON CAST(((t0.c2) NOT NULL) AS BLOB) INNER JOIN vt0 ON 0X2c1971af GROUP BY t1.c59, t0.c0 HAVING ((MAX(MIN(t0.c2))) BETWEEN ((((vt0.c0, 0.32697674593792525, MAX(COUNT(*))))<((t0.c2, t1.c59, SUM(TOTAL(COUNT(*))))))) AND (((((COUNT(*))OR(t1.c59)))OR(GROUP_CONCAT(COUNT(*)))))) UNION ALL SELECT t1.c59, t0.c0 FROM t1 INNER JOIN t0 ON CAST(((t0.c2) NOT NULL) AS BLOB) INNER JOIN vt0 ON 0X2c1971af GROUP BY t1.c59, t0.c0 HAVING (NOT (((MAX(MIN(t0.c2))) BETWEEN ((((vt0.c0, 0.32697674593792525, MAX(COUNT(*))))<((t0.c2, t1.c59, SUM(TOTAL(COUNT(*))))))) AND (((((COUNT(*))OR(t1.c59)))OR(GROUP_CONCAT(COUNT(*)))))))) UNION ALL SELECT t1.c59, t0.c0 FROM t1 INNER JOIN t0 ON CAST(((t0.c2) NOT NULL) AS BLOB) INNER JOIN vt0 ON 0X2c1971af GROUP BY t1.c59, t0.c0 HAVING ((((MAX(MIN(t0.c2))) BETWEEN ((((vt0.c0, 0.32697674593792525, MAX(COUNT(*))))<((t0.c2, t1.c59, SUM(TOTAL(COUNT(*))))))) AND (((((COUNT(*))OR(t1.c59)))OR(GROUP_CONCAT(COUNT(*))))))) ISNULL);
SELECT ALL * FROM t0 CROSS JOIN rt0 ON (((t0.c0)) NOT BETWEEN ((CASE WHEN t1.c59 THEN t0.c2 ELSE rt0.c0 END)) AND ((CAST(t0.c1 AS REAL)))) LEFT OUTER JOIN t1 ON ((((t0.c0)GLOB(rt0.c0))) IS TRUE);
SELECT ALL * FROM t0 CROSS JOIN rt0 ON (((t0.c0)) NOT BETWEEN ((CASE WHEN t1.c59 THEN t0.c2 ELSE rt0.c0 END)) AND ((CAST(t0.c1 AS REAL)))) LEFT OUTER JOIN t1 ON ((((t0.c0)GLOB(rt0.c0))) IS TRUE) WHERE (((((t0.c1) BETWEEN (t0.c2) AND (t0.c0)))|((((t0.c0)) BETWEEN ((t0.c2)) AND ((t0.c0)))))) UNION ALL SELECT ALL * FROM t0 CROSS JOIN rt0 ON (((t0.c0)) NOT BETWEEN ((CASE WHEN t1.c59 THEN t0.c2 ELSE rt0.c0 END)) AND ((CAST(t0.c1 AS REAL)))) LEFT OUTER JOIN t1 ON ((((t0.c0)GLOB(rt0.c0))) IS TRUE) WHERE ((NOT (((((t0.c1) BETWEEN (t0.c2) AND (t0.c0)))|((((t0.c0)) BETWEEN ((t0.c2)) AND ((t0.c0)))))))) UNION ALL SELECT ALL * FROM t0 CROSS JOIN rt0 ON (((t0.c0)) NOT BETWEEN ((CASE WHEN t1.c59 THEN t0.c2 ELSE rt0.c0 END)) AND ((CAST(t0.c1 AS REAL)))) LEFT OUTER JOIN t1 ON ((((t0.c0)GLOB(rt0.c0))) IS TRUE) WHERE (((((((t0.c1) BETWEEN (t0.c2) AND (t0.c0)))|((((t0.c0)) BETWEEN ((t0.c2)) AND ((t0.c0)))))) ISNULL));
SELECT ALL * FROM t0 CROSS JOIN rt0 ON (((t0.c0)) NOT BETWEEN ((CASE WHEN t1.c59 THEN t0.c2 ELSE rt0.c0 END)) AND ((CAST(t0.c1 AS REAL)))) LEFT OUTER JOIN t1 ON ((((t0.c0)GLOB(rt0.c0))) IS TRUE);
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((((((((((rt0.c2)AND(0.0)))OR(rt0.c2)))AND(rt0.c0)))AND(((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c2)))))AND(((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))AND(x'')))))AND(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((((((((((rt0.c2)AND(0.0)))OR(rt0.c2)))AND(rt0.c0)))AND(((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c2)))))AND(((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))AND(x'')))))AND(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((((((((((rt0.c2)AND(0.0)))OR(rt0.c2)))AND(rt0.c0)))AND(((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c2)))))AND(((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))AND(x'')))))AND(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((vt0.c0) NOT NULL) IN ())) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0) NOT NULL) IN ())))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0) NOT NULL) IN ())) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT t0.c2, rt0.c0, t0.c1, rt0.c2, t1.c59, t0.c0 FROM t1, vt0, rt0, t0 GROUP BY t0.c2, rt0.c0, t0.c1, rt0.c2, t1.c59, t0.c0;
SELECT ALL t0.c2, rt0.c0, t0.c1, rt0.c2, t1.c59, t0.c0 FROM t1, vt0, rt0, t0 GROUP BY t0.c2, rt0.c0, t0.c1, rt0.c2, t1.c59, t0.c0 HAVING SUM((~ (COUNT(*)))) UNION ALL SELECT t0.c2, rt0.c0, t0.c1, rt0.c2, t1.c59, t0.c0 FROM t1, vt0, rt0, t0 GROUP BY t0.c2, rt0.c0, t0.c1, rt0.c2, t1.c59, t0.c0 HAVING (NOT (SUM((~ (COUNT(*)))))) UNION ALL SELECT ALL t0.c2, rt0.c0, t0.c1, rt0.c2, t1.c59, t0.c0 FROM t1, vt0, rt0, t0 GROUP BY t0.c2, rt0.c0, t0.c1, rt0.c2, t1.c59, t0.c0 HAVING ((SUM((~ (COUNT(*))))) ISNULL);
SELECT ALL MIN((NOT (CAST(t1.c59 AS TEXT)))) FROM t0, t1 ORDER BY ((t0.c1) BETWEEN ((- (t0.c2))) AND ((((t0.c2, t1.c59, t0.c1, t0.c2, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c2, t0.c0)) AND ((t0.c2, t0.c0, t0.c0, x'', t0.c0))))) ASC  NULLS LAST;
SELECT rt0.c0, rt0.c1, vt0.c0 FROM t1, rt0, vt0;
SELECT rt0.c0, rt0.c1, vt0.c0 FROM t1, rt0, vt0 WHERE (((json_array(rt0.c2, rt0.c2)) IS TRUE)) UNION ALL SELECT rt0.c0, rt0.c1, vt0.c0 FROM t1, rt0, vt0 WHERE ((NOT (((json_array(rt0.c2, rt0.c2)) IS TRUE)))) UNION ALL SELECT ALL rt0.c0, rt0.c1, vt0.c0 FROM t1, rt0, vt0 WHERE (((((json_array(rt0.c2, rt0.c2)) IS TRUE)) ISNULL));
SELECT rt0.c0, rt0.c1, vt0.c0 FROM t1, rt0, vt0;
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN t0 ON (~ (((((t1.c59)AND(t0.c0)))AND(t1.c59)))) INNER JOIN t1 ON t1.c59;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, t1.c59, vt0.c0 FROM vt0, t1, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, t1.c59, vt0.c0;
SELECT rt0.c1, rt0.c0, rt0.c2, t1.c59, vt0.c0 FROM vt0, t1, rt0 WHERE (CASE WHEN (NOT (vt0.c0)) THEN LIKELY(DISTINCT rt0.c0) END) GROUP BY rt0.c1, rt0.c0, rt0.c2, t1.c59, vt0.c0 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2, t1.c59, vt0.c0 FROM vt0, t1, rt0 WHERE ((NOT (CASE WHEN (NOT (vt0.c0)) THEN LIKELY(DISTINCT rt0.c0) END))) GROUP BY rt0.c1, rt0.c0, rt0.c2, t1.c59, vt0.c0 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2, t1.c59, vt0.c0 FROM vt0, t1, rt0 WHERE (((CASE WHEN (NOT (vt0.c0)) THEN LIKELY(DISTINCT rt0.c0) END) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2, t1.c59, vt0.c0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, t1.c59, vt0.c0 FROM vt0, t1, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, t1.c59, vt0.c0;
SELECT t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2;
SELECT t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2 HAVING AVG(COUNT(*)) UNION ALL SELECT t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2 HAVING (NOT (AVG(COUNT(*)))) UNION ALL SELECT t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2 HAVING ((AVG(COUNT(*))) ISNULL);
SELECT * FROM vt0, t1;
SELECT * FROM vt0, t1 WHERE (IFNULL(DISTINCT CASE t1.c59  WHEN '1811459337' THEN vt0.c0 END, NULL)) UNION ALL SELECT * FROM vt0, t1 WHERE ((NOT (IFNULL(DISTINCT CASE t1.c59  WHEN '1811459337' THEN vt0.c0 END, NULL)))) UNION ALL SELECT ALL * FROM vt0, t1 WHERE (((IFNULL(DISTINCT CASE t1.c59  WHEN '1811459337' THEN vt0.c0 END, NULL)) ISNULL));
SELECT * FROM vt0, t1;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 NOT INDEXED WHERE (((((rt0.c2)*(rt0.c1))) BETWEEN ((~ (rt0.c2))) AND ((+ (rt0.c2))))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c2)*(rt0.c1))) BETWEEN ((~ (rt0.c2))) AND ((+ (rt0.c2))))))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((((rt0.c2)*(rt0.c1))) BETWEEN ((~ (rt0.c2))) AND ((+ (rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT t0.c0 FROM t1, rt0, vt0, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t1, rt0, vt0, t0 WHERE (LENGTH(x'')) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t1, rt0, vt0, t0 WHERE ((NOT (LENGTH(x'')))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t1 NOT INDEXED, rt0, vt0, t0 WHERE (((LENGTH(x'')) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t1, rt0, vt0, t0 GROUP BY t0.c0;
SELECT ALL rt0.c0, t0.c1, vt0.c0, t0.c0, t1.c59, t0.c2, rt0.c1 FROM t1, rt0, t0 RIGHT OUTER JOIN vt0 ON ((((((((((rt0.c1) NOT BETWEEN (t0.c0) AND (rt0.c0)))OR(vt0.c0 COLLATE BINARY)))AND(CASE rt0.c2  WHEN rt0.c1 THEN t0.c2 ELSE rt0.c0 END)))AND(TYPEOF(DISTINCT rt0.c1))))OR(((rt0.c1)AND(t0.c0)))) GROUP BY rt0.c0, t0.c1, vt0.c0, t0.c0, t1.c59, t0.c2, rt0.c1;
SELECT rt0.c0, t0.c1, vt0.c0, t0.c0, t1.c59, t0.c2, rt0.c1 FROM t1, rt0, t0 RIGHT OUTER JOIN vt0 ON ((((((((((rt0.c1) NOT BETWEEN (t0.c0) AND (rt0.c0)))OR(vt0.c0 COLLATE BINARY)))AND(CASE rt0.c2  WHEN rt0.c1 THEN t0.c2 ELSE rt0.c0 END)))AND(TYPEOF(DISTINCT rt0.c1))))OR(((rt0.c1)AND(t0.c0)))) GROUP BY rt0.c0, t0.c1, vt0.c0, t0.c0, t1.c59, t0.c2, rt0.c1 HAVING MAX(((COUNT(*))<<(t0.c0))) UNION ALL SELECT rt0.c0, t0.c1, vt0.c0, t0.c0, t1.c59, t0.c2, rt0.c1 FROM t1, rt0, t0 RIGHT OUTER JOIN vt0 ON ((((((((((rt0.c1) NOT BETWEEN (t0.c0) AND (rt0.c0)))OR(vt0.c0 COLLATE BINARY)))AND(CASE rt0.c2  WHEN rt0.c1 THEN t0.c2 ELSE rt0.c0 END)))AND(TYPEOF(DISTINCT rt0.c1))))OR(((rt0.c1)AND(t0.c0)))) GROUP BY rt0.c0, t0.c1, vt0.c0, t0.c0, t1.c59, t0.c2, rt0.c1 HAVING (NOT (MAX(((COUNT(*))<<(t0.c0))))) UNION ALL SELECT ALL rt0.c0, t0.c1, vt0.c0, t0.c0, t1.c59, t0.c2, rt0.c1 FROM t1, rt0, t0 RIGHT OUTER JOIN vt0 ON ((((((((((rt0.c1) NOT BETWEEN (t0.c0) AND (rt0.c0)))OR(vt0.c0 COLLATE BINARY)))AND(CASE rt0.c2  WHEN rt0.c1 THEN t0.c2 ELSE rt0.c0 END)))AND(TYPEOF(DISTINCT rt0.c1))))OR(((rt0.c1)AND(t0.c0)))) GROUP BY rt0.c0, t0.c1, vt0.c0, t0.c0, t1.c59, t0.c2, rt0.c1 HAVING ((MAX(((COUNT(*))<<(t0.c0)))) ISNULL);
SELECT ALL rt0.c2, t1.c59, rt0.c1, rt0.c0 FROM t1, rt0, vt0;
SELECT ALL rt0.c2, t1.c59, rt0.c1, rt0.c0 FROM t1, rt0, vt0 WHERE (0.9977857213908192) UNION ALL SELECT rt0.c2, t1.c59, rt0.c1, rt0.c0 FROM t1, rt0, vt0 WHERE ((NOT (0.9977857213908192))) UNION ALL SELECT rt0.c2, t1.c59, rt0.c1, rt0.c0 FROM t1, rt0, vt0 WHERE (((0.9977857213908192) ISNULL));
SELECT ALL rt0.c2, t1.c59, rt0.c1, rt0.c0 FROM t1, rt0, vt0;
SELECT DISTINCT t0.c2, rt0.c0, t0.c1, t1.c59, rt0.c1, rt0.c2, vt0.c0, t0.c0 FROM t0, t1, vt0, rt0;
SELECT DISTINCT t0.c2, rt0.c0, t0.c1, t1.c59, rt0.c1, rt0.c2, vt0.c0, t0.c0 FROM t0, t1, vt0, rt0 WHERE (((((rt0.c2) NOT BETWEEN ('') AND (t0.c0))) IS FALSE)) UNION SELECT DISTINCT t0.c2, rt0.c0, t0.c1, t1.c59, rt0.c1, rt0.c2, vt0.c0, t0.c0 FROM t0, t1, vt0, rt0 WHERE ((NOT (((((rt0.c2) NOT BETWEEN ('') AND (t0.c0))) IS FALSE)))) UNION SELECT DISTINCT t0.c2, rt0.c0, t0.c1, t1.c59, rt0.c1, rt0.c2, vt0.c0, t0.c0 FROM t0, t1, vt0, rt0 WHERE (((((((rt0.c2) NOT BETWEEN ('') AND (t0.c0))) IS FALSE)) ISNULL));
SELECT DISTINCT t0.c2, rt0.c0, t0.c1, t1.c59, rt0.c1, rt0.c2, vt0.c0, t0.c0 FROM t0, t1, vt0, rt0;
SELECT ALL t1.c59 FROM t1, vt0 GROUP BY t1.c59;
SELECT ALL t1.c59 FROM t1, vt0 WHERE (((CAST(vt0.c0 AS BLOB)) BETWEEN ('') AND (((vt0.c0)==(t1.c59))))) GROUP BY t1.c59 UNION SELECT t1.c59 FROM t1, vt0 WHERE ((NOT (((CAST(vt0.c0 AS BLOB)) BETWEEN ('') AND (((vt0.c0)==(t1.c59))))))) GROUP BY t1.c59 UNION SELECT ALL t1.c59 FROM t1, vt0 WHERE (((((CAST(vt0.c0 AS BLOB)) BETWEEN ('') AND (((vt0.c0)=(t1.c59))))) ISNULL)) GROUP BY t1.c59;
SELECT ALL t1.c59 FROM t1, vt0 GROUP BY t1.c59;
SELECT t1.c59 FROM t1 GROUP BY t1.c59;
SELECT t1.c59 FROM t1 GROUP BY t1.c59 HAVING MAX(TOTAL(AVG(t1.c59))) UNION ALL SELECT t1.c59 FROM t1 GROUP BY t1.c59 HAVING (NOT (MAX(TOTAL(AVG(t1.c59))))) UNION ALL SELECT ALL t1.c59 FROM t1 GROUP BY t1.c59 HAVING ((MAX(TOTAL(AVG(t1.c59)))) ISNULL);
SELECT ALL * FROM t0, vt0, t1;
SELECT * FROM t0, vt0, t1 WHERE (((vt0.c0)>>(t0.c2)) COLLATE RTRIM) UNION ALL SELECT ALL * FROM t0, vt0, t1 WHERE ((NOT (((vt0.c0)>>(t0.c2)) COLLATE RTRIM))) UNION ALL SELECT ALL * FROM t0, vt0, t1 WHERE (((((vt0.c0)>>(t0.c2)) COLLATE RTRIM) ISNULL));
SELECT ALL * FROM t0, vt0, t1;
SELECT DISTINCT * FROM t1, rt0, t0;
SELECT DISTINCT * FROM t1, rt0, t0 WHERE (((((rt0.c1)AND(t1.c59)))AND(t0.c2)) COLLATE RTRIM) UNION SELECT DISTINCT * FROM t1, rt0, t0 WHERE ((NOT (((((rt0.c1)AND(t1.c59)))AND(t0.c2)) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM t1, rt0, t0 WHERE (((((((rt0.c1)AND(t1.c59)))AND(t0.c2)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM t1, rt0, t0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 NOT INDEXED WHERE (((((rt0.c0) NOTNULL))<>((rt0.c2 IN ())))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c0) NOTNULL))<>((rt0.c2 IN ())))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE (((((((rt0.c0) NOTNULL))!=((rt0.c2 IN ())))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT t1.c59 FROM t1 GROUP BY t1.c59;
SELECT t1.c59 FROM t1 GROUP BY t1.c59 HAVING MIN(((GROUP_CONCAT(COUNT(MIN(t1.c59))))%(MAX(COUNT(t1.c59))))) UNION ALL SELECT t1.c59 FROM t1 GROUP BY t1.c59 HAVING (NOT (MIN(((GROUP_CONCAT(COUNT(MIN(t1.c59))))%(MAX(COUNT(t1.c59))))))) UNION ALL SELECT ALL t1.c59 FROM t1 GROUP BY t1.c59 HAVING ((MIN(((GROUP_CONCAT(COUNT(MIN(t1.c59))))%(MAX(COUNT(t1.c59)))))) ISNULL);
SELECT * FROM vt0, t1, rt0;
SELECT ALL * FROM vt0, t1, rt0 WHERE ((NOT (((rt0.c1) IS TRUE)))) UNION ALL SELECT * FROM vt0, t1, rt0 WHERE ((NOT ((NOT (((rt0.c1) IS TRUE)))))) UNION ALL SELECT ALL * FROM vt0, t1, rt0 NOT INDEXED WHERE ((((NOT (((rt0.c1) IS TRUE)))) ISNULL));
SELECT * FROM vt0, t1, rt0;
SELECT DISTINCT t1.c59, vt0.c0 FROM vt0, t1;
SELECT DISTINCT t1.c59, vt0.c0 FROM vt0, t1 WHERE (((vt0.c0 COLLATE RTRIM)IS NOT(((t1.c59) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) UNION SELECT DISTINCT t1.c59, vt0.c0 FROM vt0, t1 WHERE ((NOT (((vt0.c0 COLLATE RTRIM)IS NOT(((t1.c59) NOT BETWEEN (vt0.c0) AND (vt0.c0))))))) UNION SELECT DISTINCT t1.c59, vt0.c0 FROM vt0, t1 WHERE (((((vt0.c0 COLLATE RTRIM)IS NOT(((t1.c59) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL));
SELECT DISTINCT t1.c59, vt0.c0 FROM vt0, t1;
SELECT t1.c59 FROM t1 GROUP BY t1.c59;
SELECT t1.c59 FROM t1 WHERE (CASE WHEN ((t1.c59)<=(t1.c59)) THEN ((t1.c59)||(t1.c59)) WHEN CASE WHEN t1.c59 THEN t1.c59 ELSE t1.c59 END THEN (t1.c59 IN (t1.c59)) WHEN 0.2979328726055319 THEN ((t1.c59)/(t1.c59)) END) GROUP BY t1.c59 UNION SELECT t1.c59 FROM t1 WHERE ((NOT (CASE WHEN ((t1.c59)<=(t1.c59)) THEN ((t1.c59)||(t1.c59)) WHEN CASE WHEN t1.c59 THEN t1.c59 ELSE t1.c59 END THEN (t1.c59 IN (t1.c59)) WHEN 0.2979328726055319 THEN ((t1.c59)/(t1.c59)) END))) GROUP BY t1.c59 UNION SELECT ALL t1.c59 FROM t1 WHERE (((CASE WHEN ((t1.c59)<=(t1.c59)) THEN ((t1.c59)||(t1.c59)) WHEN CASE WHEN t1.c59 THEN t1.c59 ELSE t1.c59 END THEN (t1.c59 IN (t1.c59)) WHEN 0.2979328726055319 THEN ((t1.c59)/(t1.c59)) END) ISNULL)) GROUP BY t1.c59;
SELECT t1.c59 FROM t1 GROUP BY t1.c59;
SELECT vt0.c0, t0.c2, rt0.c2, rt0.c0 FROM t0, vt0, rt0, t1 GROUP BY vt0.c0, t0.c2, rt0.c2, rt0.c0;
SELECT vt0.c0, t0.c2, rt0.c2, rt0.c0 FROM t0, vt0, rt0, t1 GROUP BY vt0.c0, t0.c2, rt0.c2, rt0.c0 HAVING ((((((((((TOTAL(rt0.c0))AND(rt0.c2)))OR(AVG(rt0.c2))))OR(GROUP_CONCAT(MAX(t1.c59)))))OR(rt0.c2)))|(MAX(vt0.c0))) UNION ALL SELECT vt0.c0, t0.c2, rt0.c2, rt0.c0 FROM t0, vt0, rt0, t1 GROUP BY vt0.c0, t0.c2, rt0.c2, rt0.c0 HAVING (NOT (((((((((((TOTAL(rt0.c0))AND(rt0.c2)))OR(AVG(rt0.c2))))OR(GROUP_CONCAT(MAX(t1.c59)))))OR(rt0.c2)))|(MAX(vt0.c0))))) UNION ALL SELECT vt0.c0, t0.c2, rt0.c2, rt0.c0 FROM t0, vt0, rt0, t1 GROUP BY vt0.c0, t0.c2, rt0.c2, rt0.c0 HAVING ((((((((((((TOTAL(rt0.c0))AND(rt0.c2)))OR(AVG(rt0.c2))))OR(GROUP_CONCAT(MAX(t1.c59)))))OR(rt0.c2)))|(MAX(vt0.c0)))) ISNULL);
SELECT ALL * FROM rt0, t0;
SELECT * FROM rt0, t0 WHERE (((((rt0.c1)OR(((rt0.c1) BETWEEN (rt0.c0) AND (t0.c2)))))AND(x''))) UNION ALL SELECT * FROM rt0, t0 WHERE ((NOT (((((rt0.c1)OR(((rt0.c1) BETWEEN (rt0.c0) AND (t0.c2)))))AND(x''))))) UNION ALL SELECT ALL * FROM rt0, t0 WHERE (((((((rt0.c1)OR(((rt0.c1) BETWEEN (rt0.c0) AND (t0.c2)))))AND(x''))) ISNULL));
SELECT ALL * FROM rt0, t0;
SELECT DISTINCT * FROM rt0 CROSS JOIN t0 ON '-1778218919' COLLATE NOCASE CROSS JOIN vt0 ON (((x'e086')) BETWEEN ((NULL)) AND ((t0.c1)));
SELECT DISTINCT * FROM rt0 CROSS JOIN t0 ON '-1778218919' COLLATE NOCASE CROSS JOIN vt0 ON (((x'e086')) BETWEEN ((NULL)) AND ((t0.c1))) WHERE (((vt0.c0) NOT BETWEEN (t0.c1) AND (x'')) COLLATE BINARY) UNION SELECT DISTINCT * FROM rt0 CROSS JOIN t0 ON '-1778218919' COLLATE NOCASE CROSS JOIN vt0 ON (((x'e086')) BETWEEN ((NULL)) AND ((t0.c1))) WHERE ((NOT (((vt0.c0) NOT BETWEEN (t0.c1) AND (x'')) COLLATE BINARY))) UNION SELECT DISTINCT * FROM rt0 CROSS JOIN t0 ON '-1778218919' COLLATE NOCASE CROSS JOIN vt0 ON (((x'e086')) BETWEEN ((NULL)) AND ((t0.c1))) WHERE (((((vt0.c0) NOT BETWEEN (t0.c1) AND (x'')) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM rt0 CROSS JOIN t0 ON '-1778218919' COLLATE NOCASE CROSS JOIN vt0 ON (((x'e086')) BETWEEN ((NULL)) AND ((t0.c1)));
SELECT ALL vt0.c0 FROM t1, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t1, vt0 WHERE (CAST((NOT (t1.c59)) AS INTEGER)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM t1, vt0 WHERE ((NOT (CAST((NOT (t1.c59)) AS INTEGER)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM t1, vt0 WHERE (((CAST((NOT (t1.c59)) AS INTEGER)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t1, vt0 GROUP BY vt0.c0;
SELECT ALL t0.c2, rt0.c2 FROM rt0 FULL OUTER JOIN t1 ON (((('oj')<>(rt0.c0)))>(((t0.c0) BETWEEN (rt0.c1) AND (NULL)))) RIGHT OUTER JOIN t0 ON CASE ((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))  WHEN t0.c0 THEN (((vt0.c0, t1.c59, t0.c0)) NOT BETWEEN ((t0.c1, vt0.c0, rt0.c2)) AND ((vt0.c0, t0.c1, t0.c0))) WHEN (((((((('')OR(rt0.c0)))AND(rt0.c2)))OR(t0.c2)))OR(t0.c2)) THEN ((t0.c1)==(t0.c0)) WHEN ('-1896834590' IN (rt0.c1, rt0.c1)) THEN rt0.c0 COLLATE BINARY END RIGHT OUTER JOIN vt0 ON (((rt0.c1) NOT BETWEEN ('9|.') AND (NULL)) IN ()) GROUP BY t0.c2, rt0.c2;
SELECT * FROM t0, vt0;
SELECT * FROM t0, vt0 WHERE (((t0.c0 COLLATE NOCASE) ISNULL)) UNION ALL SELECT ALL * FROM t0, vt0 WHERE ((NOT (((t0.c0 COLLATE NOCASE) ISNULL)))) UNION ALL SELECT ALL * FROM t0, vt0 WHERE (((((t0.c0 COLLATE NOCASE) ISNULL)) ISNULL));
SELECT * FROM t0, vt0;
SELECT DISTINCT vt0.c0 FROM t1, rt0, vt0;
SELECT DISTINCT vt0.c0 FROM t1 NOT INDEXED, rt0, vt0 WHERE (UPPER(NULL)) UNION SELECT DISTINCT vt0.c0 FROM t1, rt0, vt0 WHERE ((NOT (UPPER(NULL)))) UNION SELECT DISTINCT vt0.c0 FROM t1, rt0, vt0 WHERE (((UPPER(NULL)) ISNULL));
SELECT DISTINCT vt0.c0 FROM t1, rt0, vt0;
SELECT ALL t1.c59, t0.c0 FROM vt0, t0, t1 GROUP BY t1.c59, t0.c0;
SELECT t1.c59, t0.c0 FROM vt0, t0 NOT INDEXED, t1 WHERE ((((((t0.c1, t0.c1, 0xffffffffc382240e, t0.c2, t0.c1))<((t1.c59, t0.c2, t0.c0, t0.c2, t0.c0)))) BETWEEN (((((vt0.c0)OR(t1.c59)))OR(vt0.c0))) AND (((t0.c1) BETWEEN (t0.c1) AND (t0.c0))))) GROUP BY t1.c59, t0.c0 UNION SELECT t1.c59, t0.c0 FROM vt0, t0, t1 WHERE ((NOT ((((((t0.c1, t0.c1, 0Xffffffffc382240e, t0.c2, t0.c1))<((t1.c59, t0.c2, t0.c0, t0.c2, t0.c0)))) BETWEEN (((((vt0.c0)OR(t1.c59)))OR(vt0.c0))) AND (((t0.c1) BETWEEN (t0.c1) AND (t0.c0))))))) GROUP BY t1.c59, t0.c0 UNION SELECT ALL t1.c59, t0.c0 FROM vt0, t0, t1 WHERE ((((((((t0.c1, t0.c1, 0Xffffffffc382240e, t0.c2, t0.c1))<((t1.c59, t0.c2, t0.c0, t0.c2, t0.c0)))) BETWEEN (((((vt0.c0)OR(t1.c59)))OR(vt0.c0))) AND (((t0.c1) BETWEEN (t0.c1) AND (t0.c0))))) ISNULL)) GROUP BY t1.c59, t0.c0;
SELECT ALL t1.c59, t0.c0 FROM vt0, t0, t1 GROUP BY t1.c59, t0.c0;
SELECT t0.c0, vt0.c0 FROM t0, rt0, vt0 GROUP BY t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM t0, rt0, vt0 GROUP BY t0.c0, vt0.c0 HAVING MIN(SUM(SUM('%ᘏeM%'))) UNION ALL SELECT t0.c0, vt0.c0 FROM t0, rt0, vt0 GROUP BY t0.c0, vt0.c0 HAVING (NOT (MIN(SUM(SUM('%ᘏeM%'))))) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM t0, rt0, vt0 GROUP BY t0.c0, vt0.c0 HAVING ((MIN(SUM(SUM('%ᘏeM%')))) ISNULL);
SELECT ALL t0.c2, vt0.c0 FROM t0, vt0;
SELECT t0.c2, vt0.c0 FROM t0, vt0 WHERE ((((+ (t0.c0)))IS NOT(((t0.c1)<(t0.c1))))) UNION ALL SELECT ALL t0.c2, vt0.c0 FROM t0, vt0 WHERE ((NOT ((((+ (t0.c0)))IS NOT(((t0.c1)<(t0.c1))))))) UNION ALL SELECT t0.c2, vt0.c0 FROM t0, vt0 WHERE ((((((+ (t0.c0)))IS NOT(((t0.c1)<(t0.c1))))) ISNULL));
SELECT ALL t0.c2, vt0.c0 FROM t0, vt0;
SELECT DISTINCT * FROM t0, t1, rt0;
SELECT DISTINCT * FROM t0, t1, rt0 WHERE (t1.c59) UNION SELECT DISTINCT * FROM t0, t1, rt0 WHERE ((NOT (t1.c59))) UNION SELECT DISTINCT * FROM t0, t1, rt0 WHERE (((t1.c59) ISNULL));
SELECT DISTINCT * FROM t0, t1, rt0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (NULLIF(DISTINCT (NOT (rt0.c0)), ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (NULLIF(DISTINCT (NOT (rt0.c0)), ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((NULLIF(DISTINCT (NOT (rt0.c0)), ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (- (GROUP_CONCAT(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((- (GROUP_CONCAT(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((- (GROUP_CONCAT(vt0.c0)))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (- (GROUP_CONCAT(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((- (GROUP_CONCAT(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((- (GROUP_CONCAT(vt0.c0)))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT t0.c1 FROM vt0, rt0, t0 RIGHT OUTER JOIN t1 ON ((((t0.c0)<<(t0.c0))) NOT BETWEEN (CASE t0.c0  WHEN rt0.c2 THEN t0.c0 WHEN rt0.c2 THEN t0.c1 WHEN rt0.c0 THEN t0.c0 WHEN t1.c59 THEN t0.c1 WHEN t1.c59 THEN rt0.c1 ELSE NULL END) AND ((((rt0.c0)) BETWEEN ((t1.c59)) AND ((t0.c1)))));
SELECT t0.c1 FROM vt0, rt0, t0 RIGHT OUTER JOIN t1 ON ((((t0.c0)<<(t0.c0))) NOT BETWEEN (CASE t0.c0  WHEN rt0.c2 THEN t0.c0 WHEN rt0.c2 THEN t0.c1 WHEN rt0.c0 THEN t0.c0 WHEN t1.c59 THEN t0.c1 WHEN t1.c59 THEN rt0.c1 ELSE NULL END) AND ((((rt0.c0)) BETWEEN ((t1.c59)) AND ((t0.c1))))) WHERE (((((((t0.c1)/(t1.c59)))AND(NULL)))OR(((t1.c59) ISNULL)))) UNION ALL SELECT t0.c1 FROM vt0, rt0, t0 RIGHT OUTER JOIN t1 ON ((((t0.c0)<<(t0.c0))) NOT BETWEEN (CASE t0.c0  WHEN rt0.c2 THEN t0.c0 WHEN rt0.c2 THEN t0.c1 WHEN rt0.c0 THEN t0.c0 WHEN t1.c59 THEN t0.c1 WHEN t1.c59 THEN rt0.c1 ELSE NULL END) AND ((((rt0.c0)) BETWEEN ((t1.c59)) AND ((t0.c1))))) WHERE ((NOT (((((((t0.c1)/(t1.c59)))AND(NULL)))OR(((t1.c59) ISNULL)))))) UNION ALL SELECT ALL t0.c1 FROM vt0, rt0, t0 RIGHT OUTER JOIN t1 ON ((((t0.c0)<<(t0.c0))) NOT BETWEEN (CASE t0.c0  WHEN rt0.c2 THEN t0.c0 WHEN rt0.c2 THEN t0.c1 WHEN rt0.c0 THEN t0.c0 WHEN t1.c59 THEN t0.c1 WHEN t1.c59 THEN rt0.c1 ELSE NULL END) AND ((((rt0.c0)) BETWEEN ((t1.c59)) AND ((t0.c1))))) WHERE (((((((((t0.c1)/(t1.c59)))AND(NULL)))OR(((t1.c59) ISNULL)))) ISNULL));
SELECT t0.c1 FROM vt0, rt0, t0 RIGHT OUTER JOIN t1 ON ((((t0.c0)<<(t0.c0))) NOT BETWEEN (CASE t0.c0  WHEN rt0.c2 THEN t0.c0 WHEN rt0.c2 THEN t0.c1 WHEN rt0.c0 THEN t0.c0 WHEN t1.c59 THEN t0.c1 WHEN t1.c59 THEN rt0.c1 ELSE NULL END) AND ((((rt0.c0)) BETWEEN ((t1.c59)) AND ((t0.c1)))));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE (CAST(-1.880379802E9 AS REAL)) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT (CAST(-1.880379802E9 AS REAL)))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((CAST(-1.880379802E9 AS REAL)) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT rt0.c0, rt0.c2 FROM rt0, vt0, t1 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0, vt0, t1 WHERE (((CASE NULL  WHEN rt0.c1 THEN t1.c59 ELSE rt0.c1 END)*(CAST(rt0.c2 AS INTEGER)))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0, vt0, t1 WHERE ((NOT (((CASE NULL  WHEN rt0.c1 THEN t1.c59 ELSE rt0.c1 END)*(CAST(rt0.c2 AS INTEGER)))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0, vt0, t1 WHERE (((((CASE NULL  WHEN rt0.c1 THEN t1.c59 ELSE rt0.c1 END)*(CAST(rt0.c2 AS INTEGER)))) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0, vt0, t1 GROUP BY rt0.c0, rt0.c2;
SELECT ALL t0.c1, rt0.c2 FROM t0 LEFT OUTER JOIN rt0 ON CASE UNLIKELY(rt0.c1)  WHEN rt0.c0 THEN ((((t0.c1)AND(t0.c0)))AND(rt0.c1)) END GROUP BY t0.c1, rt0.c2;
SELECT t0.c1, rt0.c2 FROM t0 LEFT OUTER JOIN rt0 ON CASE UNLIKELY(rt0.c1)  WHEN rt0.c0 THEN ((((t0.c1)AND(t0.c0)))AND(rt0.c1)) END GROUP BY t0.c1, rt0.c2 HAVING GROUP_CONCAT(GROUP_CONCAT(rt0.c2)) UNION ALL SELECT ALL t0.c1, rt0.c2 FROM t0 LEFT OUTER JOIN rt0 ON CASE UNLIKELY(rt0.c1)  WHEN rt0.c0 THEN ((((t0.c1)AND(t0.c0)))AND(rt0.c1)) END GROUP BY t0.c1, rt0.c2 HAVING (NOT (GROUP_CONCAT(GROUP_CONCAT(rt0.c2)))) UNION ALL SELECT ALL t0.c1, rt0.c2 FROM t0 LEFT OUTER JOIN rt0 ON CASE UNLIKELY(rt0.c1)  WHEN rt0.c0 THEN ((((t0.c1)AND(t0.c0)))AND(rt0.c1)) END GROUP BY t0.c1, rt0.c2 HAVING ((GROUP_CONCAT(GROUP_CONCAT(rt0.c2))) ISNULL);
SELECT * FROM t1;
SELECT ALL * FROM t1 WHERE (ABS(DISTINCT (t1.c59 IN ()))) UNION ALL SELECT ALL * FROM t1 WHERE ((NOT (ABS(DISTINCT (t1.c59 IN ()))))) UNION ALL SELECT ALL * FROM t1 WHERE (((ABS(DISTINCT (t1.c59 IN ()))) ISNULL));
SELECT * FROM t1;
SELECT DISTINCT rt0.c1, t1.c59, rt0.c0, rt0.c2, vt0.c0 FROM t1, vt0, rt0;
SELECT DISTINCT rt0.c1, t1.c59, rt0.c0, rt0.c2, vt0.c0 FROM t1, vt0, rt0 WHERE (((((t1.c59) NOT BETWEEN (rt0.c1) AND (x''))) NOTNULL)) UNION SELECT DISTINCT rt0.c1, t1.c59, rt0.c0, rt0.c2, vt0.c0 FROM t1, vt0, rt0 WHERE ((NOT (((((t1.c59) NOT BETWEEN (rt0.c1) AND (x''))) NOTNULL)))) UNION SELECT DISTINCT rt0.c1, t1.c59, rt0.c0, rt0.c2, vt0.c0 FROM t1, vt0, rt0 WHERE (((((((t1.c59) NOT BETWEEN (rt0.c1) AND (x''))) NOTNULL)) ISNULL));
SELECT DISTINCT rt0.c1, t1.c59, rt0.c0, rt0.c2, vt0.c0 FROM t1, vt0, rt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN (((vt0.c0) IS TRUE)) AND (vt0.c0))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN (((vt0.c0) IS TRUE)) AND (vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN (((vt0.c0) IS TRUE)) AND (vt0.c0))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX(COUNT(vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(COUNT(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(COUNT(vt0.c0))) ISNULL);
SELECT t0.c2, t0.c1, t1.c59, vt0.c0 FROM t1, vt0, t0;
SELECT t0.c2, t0.c1, t1.c59, vt0.c0 FROM t1, vt0, t0 WHERE ((NOT (((vt0.c0)/(t0.c1))))) UNION ALL SELECT t0.c2, t0.c1, t1.c59, vt0.c0 FROM t1, vt0, t0 WHERE ((NOT ((NOT (((vt0.c0)/(t0.c1))))))) UNION ALL SELECT t0.c2, t0.c1, t1.c59, vt0.c0 FROM t1, vt0, t0 WHERE ((((NOT (((vt0.c0)/(t0.c1))))) ISNULL));
SELECT t0.c2, t0.c1, t1.c59, vt0.c0 FROM t1, vt0, t0;
SELECT DISTINCT t0.c2, rt0.c0, t0.c1, rt0.c1 FROM vt0, rt0, t1, t0;
SELECT DISTINCT t0.c2, rt0.c0, t0.c1, rt0.c1 FROM vt0, rt0, t1, t0 WHERE (((t0.c2)>(t0.c2)) COLLATE NOCASE) UNION SELECT DISTINCT t0.c2, rt0.c0, t0.c1, rt0.c1 FROM vt0, rt0, t1, t0 WHERE ((NOT (((t0.c2)>(t0.c2)) COLLATE NOCASE))) UNION SELECT DISTINCT t0.c2, rt0.c0, t0.c1, rt0.c1 FROM vt0, rt0, t1, t0 WHERE (((((t0.c2)>(t0.c2)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT t0.c2, rt0.c0, t0.c1, rt0.c1 FROM vt0, rt0, t1, t0;
SELECT ALL t1.c59 FROM t1 GROUP BY t1.c59;
SELECT ALL t1.c59 FROM t1 WHERE (((t1.c59 IN (t1.c59)) IN ())) GROUP BY t1.c59 UNION SELECT t1.c59 FROM t1 WHERE ((NOT (((t1.c59 IN (t1.c59)) IN ())))) GROUP BY t1.c59 UNION SELECT ALL t1.c59 FROM t1 WHERE (((((t1.c59 IN (t1.c59)) IN ())) ISNULL)) GROUP BY t1.c59;
SELECT ALL t1.c59 FROM t1 GROUP BY t1.c59;
SELECT rt0.c2 FROM t1, rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM t1, rt0 GROUP BY rt0.c2 HAVING ((COUNT(rt0.c1)) NOT BETWEEN (TOTAL(COUNT(SUM(COUNT(rt0.c2))))) AND (CAST(SUM(t1.c59) AS REAL))) UNION ALL SELECT rt0.c2 FROM t1, rt0 GROUP BY rt0.c2 HAVING (NOT (((COUNT(rt0.c1)) NOT BETWEEN (TOTAL(COUNT(SUM(COUNT(rt0.c2))))) AND (CAST(SUM(t1.c59) AS REAL))))) UNION ALL SELECT rt0.c2 FROM t1, rt0 GROUP BY rt0.c2 HAVING ((((COUNT(rt0.c1)) NOT BETWEEN (TOTAL(COUNT(SUM(COUNT(rt0.c2))))) AND (CAST(SUM(t1.c59) AS REAL)))) ISNULL);
SELECT ALL * FROM t1, vt0, t0, rt0;
SELECT * FROM t1, vt0, t0, rt0 WHERE (json((- (t0.c2)))) UNION ALL SELECT ALL * FROM t1, vt0, t0, rt0 WHERE ((NOT (json((- (t0.c2)))))) UNION ALL SELECT ALL * FROM t1, vt0, t0, rt0 WHERE (((json((- (t0.c2)))) ISNULL));
SELECT ALL * FROM t1, vt0, t0, rt0;
SELECT DISTINCT t0.c0, t1.c59, rt0.c0, rt0.c1, t0.c1 FROM rt0, vt0, t0, t1;
SELECT DISTINCT t0.c0, t1.c59, rt0.c0, rt0.c1, t0.c1 FROM rt0, vt0, t0, t1 WHERE ((((((t0.c2)OR(rt0.c1))))!=((LIKELIHOOD(DISTINCT x'', 0.260994414219909))))) UNION SELECT DISTINCT t0.c0, t1.c59, rt0.c0, rt0.c1, t0.c1 FROM rt0, vt0, t0, t1 WHERE ((NOT ((((((t0.c2)OR(rt0.c1))))!=((LIKELIHOOD(DISTINCT x'', 0.260994414219909))))))) UNION SELECT DISTINCT t0.c0, t1.c59, rt0.c0, rt0.c1, t0.c1 FROM rt0, vt0, t0, t1 WHERE ((((((((t0.c2)OR(rt0.c1))))!=((LIKELIHOOD(DISTINCT x'', 0.260994414219909))))) ISNULL));
SELECT DISTINCT t0.c0, t1.c59, rt0.c0, rt0.c1, t0.c1 FROM rt0, vt0, t0, t1;
SELECT ALL t0.c2, t1.c59, t0.c0, vt0.c0, t0.c1 FROM vt0, t1 NATURAL JOIN t0 GROUP BY t0.c2, t1.c59, t0.c0, vt0.c0, t0.c1;
SELECT ALL t0.c2, t1.c59, t0.c0, vt0.c0, t0.c1 FROM vt0, t1 NATURAL JOIN t0 WHERE (CAST(t0.c0 AS BLOB) COLLATE NOCASE) GROUP BY t0.c2, t1.c59, t0.c0, vt0.c0, t0.c1 UNION SELECT ALL t0.c2, t1.c59, t0.c0, vt0.c0, t0.c1 FROM vt0, t1 NATURAL JOIN t0 WHERE ((NOT (CAST(t0.c0 AS BLOB) COLLATE NOCASE))) GROUP BY t0.c2, t1.c59, t0.c0, vt0.c0, t0.c1 UNION SELECT ALL t0.c2, t1.c59, t0.c0, vt0.c0, t0.c1 FROM vt0, t1 NATURAL JOIN t0 WHERE (((CAST(t0.c0 AS BLOB) COLLATE NOCASE) ISNULL)) GROUP BY t0.c2, t1.c59, t0.c0, vt0.c0, t0.c1;
SELECT ALL t0.c2, t1.c59, t0.c0, vt0.c0, t0.c1 FROM vt0, t1 NATURAL JOIN t0 GROUP BY t0.c2, t1.c59, t0.c0, vt0.c0, t0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING TOTAL(TOTAL(rt0.c2)) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (TOTAL(TOTAL(rt0.c2)))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((TOTAL(TOTAL(rt0.c2))) ISNULL);
SELECT rt0.c2 FROM rt0 LEFT OUTER JOIN vt0 ON ((((((((((vt0.c0)OR(vt0.c0)))OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c0)))AND((((vt0.c0, vt0.c0, rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c0, 0.6993424089310001, rt0.c0, rt0.c0)) AND ((rt0.c2, vt0.c0, rt0.c1, rt0.c0, rt0.c2)))));
SELECT rt0.c2 FROM rt0 LEFT OUTER JOIN vt0 ON ((((((((((vt0.c0)OR(vt0.c0)))OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c0)))AND((((vt0.c0, vt0.c0, rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c0, 0.6993424089310001, rt0.c0, rt0.c0)) AND ((rt0.c2, vt0.c0, rt0.c1, rt0.c0, rt0.c2))))) WHERE (ABS((((rt0.c1))<((rt0.c0))))) UNION ALL SELECT rt0.c2 FROM rt0 LEFT OUTER JOIN vt0 ON ((((((((((vt0.c0)OR(vt0.c0)))OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c0)))AND((((vt0.c0, vt0.c0, rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c0, 0.6993424089310001, rt0.c0, rt0.c0)) AND ((rt0.c2, vt0.c0, rt0.c1, rt0.c0, rt0.c2))))) WHERE ((NOT (ABS((((rt0.c1))<((rt0.c0))))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 LEFT OUTER JOIN vt0 ON ((((((((((vt0.c0)OR(vt0.c0)))OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c0)))AND((((vt0.c0, vt0.c0, rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c0, 0.6993424089310001, rt0.c0, rt0.c0)) AND ((rt0.c2, vt0.c0, rt0.c1, rt0.c0, rt0.c2))))) WHERE (((ABS((((rt0.c1))<((rt0.c0))))) ISNULL));
SELECT rt0.c2 FROM rt0 LEFT OUTER JOIN vt0 ON ((((((((((vt0.c0)OR(vt0.c0)))OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c0)))AND((((vt0.c0, vt0.c0, rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c0, 0.6993424089310001, rt0.c0, rt0.c0)) AND ((rt0.c2, vt0.c0, rt0.c1, rt0.c0, rt0.c2)))));
SELECT DISTINCT t0.c2, t1.c59 FROM t0 CROSS JOIN t1 ON ((0.4389994865943603) IS TRUE);
SELECT DISTINCT t0.c2, t1.c59 FROM t0 CROSS JOIN t1 ON ((0.4389994865943603) IS TRUE) WHERE (CASE WHEN t1.c59 COLLATE RTRIM THEN ((t0.c2)<<(t0.c1)) END) UNION SELECT DISTINCT t0.c2, t1.c59 FROM t0 CROSS JOIN t1 ON ((0.4389994865943603) IS TRUE) WHERE ((NOT (CASE WHEN t1.c59 COLLATE RTRIM THEN ((t0.c2)<<(t0.c1)) END))) UNION SELECT DISTINCT t0.c2, t1.c59 FROM t0 CROSS JOIN t1 ON ((0.4389994865943603) IS TRUE) WHERE (((CASE WHEN t1.c59 COLLATE RTRIM THEN ((t0.c2)<<(t0.c1)) END) ISNULL));
SELECT DISTINCT t0.c2, t1.c59 FROM t0 CROSS JOIN t1 ON ((0.4389994865943603) IS TRUE);
SELECT t0.c2, t0.c0, rt0.c1, rt0.c0, vt0.c0, t1.c59, t0.c1 FROM t1, rt0 RIGHT OUTER JOIN t0 ON ((((((rt0.c1)OR(vt0.c0)))AND(t0.c2)))==(((NULL) NOT BETWEEN (t0.c1) AND (rt0.c0)))) LEFT OUTER JOIN vt0 ON NULL GROUP BY t0.c2, t0.c0, rt0.c1, rt0.c0, vt0.c0, t1.c59, t0.c1;
SELECT vt0.c0, rt0.c0, t0.c2, t0.c0, t0.c1, rt0.c1, rt0.c2, t1.c59 FROM rt0, vt0, t1, t0 GROUP BY vt0.c0, rt0.c0, t0.c2, t0.c0, t0.c1, rt0.c1, rt0.c2, t1.c59;
SELECT vt0.c0, rt0.c0, t0.c2, t0.c0, t0.c1, rt0.c1, rt0.c2, t1.c59 FROM rt0, vt0, t1, t0 GROUP BY vt0.c0, rt0.c0, t0.c2, t0.c0, t0.c1, rt0.c1, rt0.c2, t1.c59 HAVING AVG(vt0.c0) UNION ALL SELECT vt0.c0, rt0.c0, t0.c2, t0.c0, t0.c1, rt0.c1, rt0.c2, t1.c59 FROM rt0, vt0, t1, t0 GROUP BY vt0.c0, rt0.c0, t0.c2, t0.c0, t0.c1, rt0.c1, rt0.c2, t1.c59 HAVING (NOT (AVG(vt0.c0))) UNION ALL SELECT vt0.c0, rt0.c0, t0.c2, t0.c0, t0.c1, rt0.c1, rt0.c2, t1.c59 FROM rt0, vt0, t1, t0 GROUP BY vt0.c0, rt0.c0, t0.c2, t0.c0, t0.c1, rt0.c1, rt0.c2, t1.c59 HAVING ((AVG(vt0.c0)) ISNULL);
SELECT vt0.c0, rt0.c0, t0.c2, t0.c0, t0.c1, rt0.c1, rt0.c2, t1.c59 FROM rt0, vt0, t1, t0 GROUP BY vt0.c0, rt0.c0, t0.c2, t0.c0, t0.c1, rt0.c1, rt0.c2, t1.c59;
SELECT vt0.c0, rt0.c0, t0.c2, t0.c0, t0.c1, rt0.c1, rt0.c2, t1.c59 FROM rt0, vt0, t1, t0 GROUP BY vt0.c0, rt0.c0, t0.c2, t0.c0, t0.c1, rt0.c1, rt0.c2, t1.c59 HAVING AVG(vt0.c0) UNION ALL SELECT vt0.c0, rt0.c0, t0.c2, t0.c0, t0.c1, rt0.c1, rt0.c2, t1.c59 FROM rt0, vt0, t1, t0 GROUP BY vt0.c0, rt0.c0, t0.c2, t0.c0, t0.c1, rt0.c1, rt0.c2, t1.c59 HAVING (NOT (AVG(vt0.c0))) UNION ALL SELECT vt0.c0, rt0.c0, t0.c2, t0.c0, t0.c1, rt0.c1, rt0.c2, t1.c59 FROM rt0, vt0, t1, t0 GROUP BY vt0.c0, rt0.c0, t0.c2, t0.c0, t0.c1, rt0.c1, rt0.c2, t1.c59 HAVING ((AVG(vt0.c0)) ISNULL);
SELECT vt0.c0, rt0.c0, t0.c2, t0.c0, t0.c1, rt0.c1, rt0.c2, t1.c59 FROM rt0, vt0, t1, t0 GROUP BY vt0.c0, rt0.c0, t0.c2, t0.c0, t0.c1, rt0.c1, rt0.c2, t1.c59;
SELECT rt0.c0, t1.c59, rt0.c1, rt0.c2 FROM t1, rt0;
SELECT rt0.c0, t1.c59, rt0.c1, rt0.c2 FROM t1, rt0 WHERE ((((((- (rt0.c0)))AND(400898192 COLLATE RTRIM)))OR((((rt0.c1))=((rt0.c1)))))) UNION ALL SELECT ALL rt0.c0, t1.c59, rt0.c1, rt0.c2 FROM t1, rt0 WHERE ((NOT ((((((- (rt0.c0)))AND(400898192 COLLATE RTRIM)))OR((((rt0.c1))==((rt0.c1)))))))) UNION ALL SELECT rt0.c0, t1.c59, rt0.c1, rt0.c2 FROM t1, rt0 WHERE ((((((((- (rt0.c0)))AND(400898192 COLLATE RTRIM)))OR((((rt0.c1))==((rt0.c1)))))) ISNULL));
SELECT rt0.c0, t1.c59, rt0.c1, rt0.c2 FROM t1, rt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL))) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 END) AND (((vt0.c0)+(vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL))) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 END) AND (((vt0.c0)+(vt0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL))) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 END) AND (((vt0.c0)+(vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT rt0.c2, rt0.c1, t1.c59 FROM t1, rt0 GROUP BY rt0.c2, rt0.c1, t1.c59;
SELECT ALL rt0.c2, rt0.c1, t1.c59 FROM t1, rt0 WHERE (CAST(0Xffffffffbd307d4f AS NUMERIC)) GROUP BY rt0.c2, rt0.c1, t1.c59 UNION SELECT ALL rt0.c2, rt0.c1, t1.c59 FROM t1, rt0 WHERE ((NOT (CAST(0xffffffffbd307d4f AS NUMERIC)))) GROUP BY rt0.c2, rt0.c1, t1.c59 UNION SELECT ALL rt0.c2, rt0.c1, t1.c59 FROM t1, rt0 WHERE (((CAST(0xffffffffbd307d4f AS NUMERIC)) ISNULL)) GROUP BY rt0.c2, rt0.c1, t1.c59;
SELECT rt0.c2, rt0.c1, t1.c59 FROM t1, rt0 GROUP BY rt0.c2, rt0.c1, t1.c59;
SELECT ALL t1.c59, vt0.c0 FROM t1 INNER JOIN vt0 ON HEX(((vt0.c0) ISNULL)) GROUP BY t1.c59, vt0.c0;
SELECT t1.c59, vt0.c0 FROM t1 INNER JOIN vt0 ON HEX(((vt0.c0) ISNULL)) GROUP BY t1.c59, vt0.c0 HAVING vt0.c0 UNION ALL SELECT t1.c59, vt0.c0 FROM t1 INNER JOIN vt0 ON HEX(((vt0.c0) ISNULL)) GROUP BY t1.c59, vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL t1.c59, vt0.c0 FROM t1 INNER JOIN vt0 ON HEX(((vt0.c0) ISNULL)) GROUP BY t1.c59, vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT ALL t1.c59, vt0.c0 FROM t1 INNER JOIN vt0 ON HEX(((vt0.c0) ISNULL)) GROUP BY t1.c59, vt0.c0;
SELECT t1.c59, vt0.c0 FROM t1 INNER JOIN vt0 ON HEX(((vt0.c0) ISNULL)) GROUP BY t1.c59, vt0.c0 HAVING vt0.c0 UNION ALL SELECT t1.c59, vt0.c0 FROM t1 INNER JOIN vt0 ON HEX(((vt0.c0) ISNULL)) GROUP BY t1.c59, vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL t1.c59, vt0.c0 FROM t1 INNER JOIN vt0 ON HEX(((vt0.c0) ISNULL)) GROUP BY t1.c59, vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT ALL t1.c59, vt0.c0 FROM t1 INNER JOIN vt0 ON HEX(((vt0.c0) ISNULL)) GROUP BY t1.c59, vt0.c0;
SELECT ALL rt0.c2, vt0.c0, t0.c2 FROM t1, rt0, t0, vt0;
SELECT rt0.c2, vt0.c0, t0.c2 FROM t1, rt0, t0, vt0 WHERE (ROUND((NOT (t0.c2)), UNLIKELY(DISTINCT t0.c0))) UNION ALL SELECT ALL rt0.c2, vt0.c0, t0.c2 FROM t1, rt0, t0, vt0 WHERE ((NOT (ROUND((NOT (t0.c2)), UNLIKELY(DISTINCT t0.c0))))) UNION ALL SELECT ALL rt0.c2, vt0.c0, t0.c2 FROM t1, rt0, t0, vt0 WHERE (((ROUND((NOT (t0.c2)), UNLIKELY(DISTINCT t0.c0))) ISNULL));
SELECT ALL rt0.c2, vt0.c0, t0.c2 FROM t1, rt0, t0, vt0;
SELECT DISTINCT * FROM t1, rt0;
SELECT DISTINCT * FROM t1 NOT INDEXED, rt0 WHERE (CAST(((((rt0.c0)AND(rt0.c2)))AND(rt0.c1)) AS NUMERIC)) UNION SELECT DISTINCT * FROM t1, rt0 WHERE ((NOT (CAST(((((rt0.c0)AND(rt0.c2)))AND(rt0.c1)) AS NUMERIC)))) UNION SELECT DISTINCT * FROM t1, rt0 WHERE (((CAST(((((rt0.c0)AND(rt0.c2)))AND(rt0.c1)) AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM t1, rt0;
