-- Time: 2024/06/12 06:08:28
-- Database: database3
-- Database version: 3.40.0
-- seed value: 3332424803
PRAGMA cache_size = 50000; -- 8ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-16'; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2, +c3 REAL , +c4 BLOB ); -- 1ms;
INSERT OR IGNORE INTO rt0(c1) VALUES (x'0ec4'); -- 0ms;
INSERT OR IGNORE INTO rt0(c4, c3, c1) VALUES (x'', '곉O', x''); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
END; -- 0ms;
SELECT rtreecheck('rt0'); -- 1ms;
INSERT OR IGNORE INTO rt0(c3, c2) VALUES (0Xffffffffb35b5eb7, x'23d6'); -- 0ms;
UPDATE rt0 SET c3='-1285857609' WHERE (('-121149958')|((((rt0.c2))<((rt0.c0))))); -- 0ms;
ROLLBACK TRANSACTION; -- 4ms;
INSERT OR ROLLBACK INTO rt0(c0, c3) VALUES (x'', '713{n)'); -- 0ms;
PRAGMA temp.short_column_names = false; -- 0ms;
INSERT OR ABORT INTO rt0(c3, c2, c1, c4) VALUES (0.8930538513929739, 0X7e153c58, NULL, NULL); -- 0ms;
UPDATE OR FAIL rt0 SET c4=x'3cc3'; -- 0ms;
INSERT OR REPLACE INTO rt0(c2) VALUES ('kS'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1279890576 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1279890576 sz=-1285857609 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-863178439 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1285857609 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=1622958714 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1782789801 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=2115320920'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2115320920 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (LOWER(0.9935806646805451) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((('kh)j98tqG')AND(x'efe1')))AND(x'')))AND((('kS')|(0Xffffffffb3b66b70)))))AND(((((((((-1e500)AND(-1e500)))OR(0.6743197090309082)))AND(1622958714)))AND(0.23198755577426955)))))OR(('0.9935806646805451' IN ()))))OR((0.2816845392743581 IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=2083834665 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-121149958 2083834665 sz=-1498363957 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (+ (NULL))  WHEN ((x'') NOT NULL) THEN NULL WHEN (x'1ede' IN (-1.279890576E9)) THEN (+ (0x39e92f55)) WHEN (+ (NULL)) THEN (((('-1718833975')OR(726524736)))OR('')) ELSE (((NULL))=(('0.23198755577426955'))) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CAST(NULL AS INTEGER) THEN x'3b15' COLLATE RTRIM WHEN '1622958714' COLLATE RTRIM THEN TIME(1.782789801E9, x'', 0.6471470904133988) WHEN x'' THEN ((0.4933035009272684)+(x'')) ELSE (((0.39434372002812434)) NOT BETWEEN ((0.6743197090309082)) AND ((0.381842678557452))) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((('703204626')AND('pHN-')))AND('')))OR((0.381842678557452 IN ()))))AND(CAST(x'' AS REAL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '212001443 0 sz=-1285857609'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((((((('&6bKI㷷^m')OR(0.19008889307304733)))OR(x'66dd')))AND(1657359772)))OR('713{n)')) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=2083834665 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(DISTINCT (+ (x'')), (('wh ug㕣u㷷Y')<>(''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-863178439 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1486716289 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)<<(''))) NOT BETWEEN (CASE 0.07243231585234045  WHEN '9223372036854775807' THEN 0.2753030133376372 ELSE 605193969 END) AND (((NULL)OR('0.8930538513929739')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.03643229781171076; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (~ ((+ (0.2753030133376372)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=2115320920 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-106267972 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1535734875 sz=490789738 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1176373021'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-1329352915'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '938919908 sz=-1874223544 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-863178439'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-370656855 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=1744338176'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-713698694 0 sz=2115320920 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1260945361 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((x'', x'', x'')) NOT BETWEEN ((LOWER(DISTINCT x''), '' COLLATE BINARY, DATE(NULL, '', 0.17366490838187076))) AND ((2142510943 COLLATE RTRIM, x'' COLLATE BINARY, (('-1486716289')|('&'))))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS INTEGER))<>((((('936663187')OR('kh)j98tqg')))AND(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('nW' IN ()))AND(x'')))OR(((((x'')AND(441683260)))OR(x'c45c')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-682310947'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0x23fefedd)-(NULL))))<((((0.9877444048829124) IS TRUE)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1032629611 2 sz=2083834665'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=1825465410'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-920963392 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-130626553 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=539191018 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1657359772 unordered'); -- 2ms;
DELETE FROM sqlite_stat1 WHERE CAST(((-121149958) BETWEEN (-1951569686) AND (x'')) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1734409123'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-2104150753 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 1238278051 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0xffffffffb9e1f8e3 IN (0x57445c45)) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((-1260945361, 1.782789801E9, NULL))<((NULL, NULL, 0.036013524509665995))))AND(((-5.78341533E8)%(NULL)))))OR((('esc~\n퉺')||(0xffffffffa6b0c7cb)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((((705088526)OR(NULL)))OR(NULL)))<<(NULL COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=382669027 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1801449241 0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 0.7008873756704092 THEN 0.7596922358303199 END COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1097646951 0 0 sz=-364584082 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1803418434 2131981501 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CASE '-1255365361'  WHEN 0.8564202817423251 THEN NULL END)OR(((x'36bc')<>(0.2816845392743581)))))AND(((x'') IS TRUE))))OR((('s輸[0]T')|(NULL)))))OR((- ('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((ABS('-1398914484')) NOT BETWEEN ((0Xffffffffb58c1e54 IN (726524736))) AND ((- ('1565853108')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=2131981501 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((('A5n')AND(0.18652071267332493)))OR(NULL)))OR(1526114781)))AND('-1279890576'))))>((((0.1166645354360265)%(0.29852602889045843))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST('703204626' AS BLOB) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '703204626'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((0xffffffff948204be)) NOT BETWEEN ((NULL)) AND (('F衏Gd9偤OeH'))) AS REAL); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL) NOT BETWEEN ('-121149958') AND ('1825465410')) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '561566691 sz=1490556531 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2019110552 -1486716289 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1357417139 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=114437086'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.18652071267332493) BETWEEN (1e500) AND (0.5133988441821477))))<((((x'')<<(x''))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE RTRIM)*((((x'', 490789738, x''))=((NULL, x'', NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=32488177 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-2081567540'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1329352915 -1803418434 sz=967740113 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=1546407907 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=605160160 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '-1731042591' THEN '78pnp' ELSE x'4e70' END) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1571063411 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-526856156 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.17071375070174255, 0.036013524509665995, x'9047'))<=(('%1V䙒.', NULL, x''))))<=(((0.6368368257023622)IS NOT(0.6113947876278263)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.057772404042385705)GLOB('*M(r忶\r'))) NOT BETWEEN (0.4380408819262551) AND (CAST(93418960 AS TEXT))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1565853108 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) BETWEEN ((0.2816845392743581)) AND ((-311474538))) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((657613602 COLLATE BINARY, ((NULL)LIKE('53311252')), NULL COLLATE BINARY, ((NULL)<(NULL)), (x'' IN ())))<>((NULL, ('' IN (0.8491190303251331)), ('-1868139386' IN ()), CASE 0.7994625965761945  WHEN '0.057772404042385705' THEN 0.03810554799415378 WHEN NULL THEN 'H9' WHEN NULL THEN 0.6368368257023622 END, (0.2877544366260455 IN ())))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=2083834665 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1180150544'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('' AS TEXT)) BETWEEN (((-811961230) BETWEEN ('-526856156') AND (0.5860682679961812))) AND (((((NULL)AND(x'')))OR(938919908)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL AS TEXT) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '114437086 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1534811568 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ('-313620273')) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1695645867 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1864591108 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 6.03913949E8; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 242562071 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1655195338 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1321418552 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=359616612 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.8564202817423251)OR(x'fe73')))OR(x''))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=382669027'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '441683260 sz=-213133696 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.8973799305426432) NOT BETWEEN (0.2816845392743581) AND ('s輸[0]t'))) ISNULL); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=382669027'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST((((('zx#HU\n饓쵪')OR(0.6386748093717908)))OR('')) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=812715647 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1500817989 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1198481987 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1884075250 sz=-533107369 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 sz=93418960 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('-121149958')AND('421700154')))AND(0.763620927917535)))/((272943707 IN (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=959489483 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 -1915855571 sz=1359689714 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1111090723 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER(json_extract(x'', x'07e4')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=967740113 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1345057326 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)>=('-526856156')))GLOB((x'' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=1571063411'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0Xffffffffd575d27a; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x''))>(('2000360191'))), HEX(DISTINCT x'3725'), CAST('596840321' AS BLOB)))<=((CAST('-1801449241' AS INTEGER), (('*D')>>('996324161')), ((NULL)=('-1255928246'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (x'5394ae9c')))AND(CASE '-1257972420'  WHEN '' THEN 359616612 WHEN x'' THEN '' WHEN NULL THEN NULL END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1782789801 sz=-1260945361 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL IN (((((((((0.7585710889279865)OR(NULL)))OR(x'')))OR(x'7908')))OR(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=272943707'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0xffffffffe098d024; -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(((((x'')AND('0.2753030133376372')))OR(0.8930538513929739)), (((x''))!=((x''))), (+ (NULL)), ((0X15d35a75) ISNULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-835544209 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1285857609 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((x'') NOT NULL) THEN CASE 'ks'  WHEN NULL THEN '-1864591108' ELSE x'd38d' END WHEN CAST('-2104150753' AS INTEGER) THEN (((x'a17b5a6d', x'', ''))==((x'', 0.6054513059832498, NULL))) WHEN (('2105565159')/('-1718833975')) THEN (('605160160')<=(3.59616612E8)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-120349359 sz=1403101860 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1806071628'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (TIME('1550805356', 'g', '-370656855', '0.8564202817423251', 'tT&') IN (((0.7413847150050729)&('+')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-998000617 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1894363321'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((0.49504157596922593)AND('0.23198755577426955')))AND(0.6880580840098636)) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'd퉺\'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((2.083834665E9)) BETWEEN ((((x'') NOTNULL))) AND ((((x'')IS NOT(NULL))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL) ISNULL) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=2079809183 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((('-1718833975')AND(x'4413')))AND(x'')))AND('')))AND(-1413525404)) IN ((('661050985')|(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1526114781 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELIHOOD(((NULL)*('')), 0.5817542544646697); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-1592357430')%('o\nuQ㚩4'))) BETWEEN ((('705088526') ISNULL)) AND (CAST(NULL AS NUMERIC))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1526114781 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (x'')) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'' COLLATE NOCASE AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((NULL, 0.19008889307304733, x'', NULL, x'')) BETWEEN (((- (NULL)), '', ((0.23198755577426955) NOT BETWEEN (NULL) AND ('-1329352915')), CASE WHEN 0.38386085853846397 THEN NULL END, x'' COLLATE RTRIM)) AND (((- (-1149416770)), ((0.01120681225487552)<=(0.6386748093717908)), (- ('yx5kZW')), json_array_length('h3N\r'), ((x'7967') NOT BETWEEN (0.8745370799528531) AND (0.9363848772199415))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=2019110552 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((('-499372022'))>=((0x72e03281))))AND(CAST(NULL AS BLOB))))AND('' COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('Q-)-[U9Uf') IS FALSE))IS((NOT (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=2001344828 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1526114781 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=85508295 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('382669027')IS NOT(0.4861738327908518)))AND(((NULL)>>(NULL)))))OR(((NULL) BETWEEN ('t-X') AND (NULL)))))OR((('-121149958')<(NULL)))))AND((NULL IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-252671940 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((NULL)&(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') BETWEEN ('1345057326') AND ('')))>>((NOT ('641753726')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1352308387'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN x'0998' THEN '&P' WHEN NULL THEN '+' WHEN '\0' THEN x'210b' END)*(('' IN ('i/', NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=100319942 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.4861738327908518)+(x'eb68')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'0c3063b6' COLLATE NOCASE)|(((((NULL)OR(NULL)))OR(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=735301324'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1498363957 sz=1695645867 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('-287294403' COLLATE RTRIM AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.9701980545399433, NULL, 0.009072919693613568)) BETWEEN ((MIN(x'', 0x561ab279, -1.951569686E9, 1.7976931348623157E308), ((NULL) NOTNULL), '-1' COLLATE NOCASE)) AND ((((((NULL)AND(0.27734874001631504)))AND(0.6961803343544022)), ((x'f348') BETWEEN ('-293646332') AND (x'')), (('#1') NOTNULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=853435679 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1375806321'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=227466488'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-1.398914484E9)/('-1')) COLLATE NOCASE COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1261797467 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=930122370'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') ISNULL) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-849973028 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (~ (CASE WHEN x'' THEN 0.8055967366822597 ELSE 4.54203731E8 END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE BINARY) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_array_length(CASE WHEN NULL THEN '' WHEN 0.1983550275257029 THEN NULL WHEN x'f27e' THEN '0.5133988441821477' ELSE x'' END, CAST('-1249108396' AS TEXT)); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-533107369')||('8q'))) NOT BETWEEN ((('703204626')*(0.5923037561691453))) AND (((0.9938746308005398)=(-9.20963392E8)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CASE ''  WHEN 0X210be55a THEN '-9223372036854775808' WHEN '' THEN 0X39ae8ad1 WHEN x'' THEN NULL ELSE x'0ad0' END  WHEN ((93418960) NOT BETWEEN (NULL) AND (0.9528895452592216)) THEN ((NULL)>(NULL)) ELSE (((0.8361598605982917))>=(('1241183975'))) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER((((0.6113947876278263, x'e00f348c', '')) BETWEEN (('XP', NULL, 2.142510943E9)) AND ((NULL, x'', x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (((('i꠴')AND(x'')))AND('1312981533'))  WHEN ((((((((0.476136742694389)OR(0x5cb27411)))OR(NULL)))AND('1657359772')))OR('')) THEN 'Pe0oyR⽕ q' COLLATE RTRIM ELSE (~ (-1398914484)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 1316002771 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)<('0.036013524509665995'))) NOT BETWEEN (CASE -2.13133696E8  WHEN x'' THEN 0.031005676864289566 ELSE x'' END) AND (((0X720e2ef8)IS('-713698694')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('' COLLATE RTRIM IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-2046661499 1546407907 sz=-713698694 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2000414339 sz=809282388 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-2081567540 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-606092552 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((x'7147c992')OR(2.72943707E8)))AND(NULL)) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1394689966'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((((((((0.8361598605982917)OR(NULL)))AND(NULL)))OR('-213133696')))AND(-526856156)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((('')OR(1718283447)))OR('tO*Iv')))AND('')))AND(NULL)))AND(((x'9f05')%(0X37f6c7e4)))))OR((((0.30845306396173133, NULL, '-357495690')) NOT BETWEEN (('z#K', x'', '')) AND ((73563340, 0.6901587696175139, '603913949'))))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (- (((-1.803418434E9)OR(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'd961'; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1481195852 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1523073206 -1441568401 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-1012927118, 0.5755868993072856, 0.8884115284888774)) NOT BETWEEN (((((('-1718833975')AND(x'')))AND(0.7535499530818851)), '' COLLATE BINARY, COALESCE(DISTINCT NULL, NULL, '-_Vf', NULL))) AND ((('' IN ()), x'' COLLATE BINARY, ((-1.398914484E9)<<('i꠴'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '938919908 sz=721415895 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '732011116 0 sz=369113773'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-1919040035') ISNULL)) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=997051754 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-9223372036854775808'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=53311252'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 0 sz=-1904618261 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=359499855'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'')|(x'bce7')))AND(((x'd311') BETWEEN (0.476136742694389) AND ('D3쵪|a稸>Z)')))))OR(CASE WHEN 0.7044752548017605 THEN NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') BETWEEN (x'') AND (1.14437086E8))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((-1.032629611E9)) NOT BETWEEN (('|\r')) AND ((x''))))AND((('㓦/^')+('1996532356')))))AND(CASE WHEN 0.05360356745277528 THEN 0.9701980545399433 WHEN NULL THEN 2143835947 WHEN x'3aaf' THEN '967740113' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=812715647 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('Mr^')OR(2029315573)))AND('1966775217'))) BETWEEN ((('-459988604') NOT NULL)) AND (((1321418552) BETWEEN (0.27734874001631504) AND ('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-428977743'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1435189283 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-414731237 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'1042') NOT BETWEEN ('-1904299889') AND (0.338238083072089))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-2031654095 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1358698109 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1036068794 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 814115122 sz=-1241063489 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE ((0.8682272088375045)<>(NULL))  WHEN ((('-1198481987'))<((NULL))) THEN (NULL IN ()) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1803418434 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((0xffffffff83edcccc)<>(-920963392))))==(((('1689545114')<=(0.6531864477975072))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE RTRIM(((NULL)||(7.03204626E8))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('&')AND(''))))<((NULL COLLATE RTRIM))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-9223372036854775808 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-615889368 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1744338176'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-570858681 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '999310924 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-2133497116'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((0xffffffffa5f62788)AND('')))OR(0.9056373905059653)) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.8724009042649447; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((('1238278051' IN ()))LIKE(CASE WHEN 0.7413847150050729 THEN NULL ELSE 'wiwjp' END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'TRUE'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('Qg' IN ()))<<(CASE WHEN '' THEN 0.8143181739161731 WHEN '1125163092' THEN 0.8884115284888774 WHEN x'' THEN x'f807c7c4' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-30356365 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-1170144510') NOT BETWEEN ('xQ') AND (x'')) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((' ,' COLLATE RTRIM, '/Ld<wo5F_', LIKE('1-500000', NULL)))>((((((((((0X556ca99)OR('1Y')))AND(x'aa95')))AND('-1455596031')))OR(x'bd2d')), ((NULL)LIKE(1735675664)), (('Cꉐ*-숋e')>=(0X2f1e6e70))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1534811568 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE DATE((0.9808898164003582 IN ()), ((((((((((((NULL)OR('-1631545514')))AND('_Q')))OR(1884075250)))AND(NULL)))AND(x'')))OR(0.9087455497729018)), (('-1500817989') NOT NULL), NULL, CASE WHEN NULL THEN 0x3164b7a8 END); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.022934598442872156)IS((((NULL)) BETWEEN ((2063459027)) AND (('0.05360356745277528'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('T裏cFgS瞔''>' IN (x'')) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=561663283 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1597542622 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=935467441 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)<=(x'')))GLOB((- (0.8351209757960395)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1260945361 sz=371743862 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 1595004348 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1724076303 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'47c0' IN ())) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((x'efcf')) NOT BETWEEN ((-2.104150753E9)) AND (('_'))))AND((NULL IN ()))))OR(LIKELY(DISTINCT NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=2145433441'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.7808877956763992 IN ())) ISNULL); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS BLOB))IS(((893607555)|(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((('1571063411')OR('0.6113947876278263')))AND(x'24fb')))OR(x'')))OR(-2130970062)))AND(json_valid(-322085624))))AND((('2142510943')LIKE(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=327247232 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=1825465410 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-2066978996 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 0 sz=-533107369 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 sz=-1692976084 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1255365361 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1189406345 -811961230 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN x'445a' THEN '1695929854' WHEN x'' THEN '' WHEN 0.8491190303251331 THEN -5.33107369E8 END) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-252802077'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '561566691 sz=-570602514 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-1897526459 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-2093881741 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1384071621 0 sz=570852396 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-312412718 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-849326452 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('d퉺\') IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1042743254 -2054859647 sz=-23089009 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-419017078 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((('-1930704560')OR('yx5kzw')))OR(''))))<=((((0.6368368257023622) NOT BETWEEN (x'') AND ('-912982054'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((0.33243549988175713 IN ()))AND((+ (x'8175')))))OR((- (0.7028192905068099)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1531673902 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '436271188 sz=-2081567540'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1898680118 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-2080900185'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'44ee'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '242562071 0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-2081567540'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-526856156 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'' IN ()) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=1370767032 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((~ (NULL)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.7413847150050729; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.17793039468515182) NOT BETWEEN ('997051754') AND ('0.5923037561691453')), ((((0.7661500229825922)OR(x'')))OR('-1308332263')), (((((((('-2013736826')AND('tT&')))AND(0.8079929824986808)))OR('+nm䧥x^_')))AND('T-0r[G3'))))>((((0.7949576259790387)||(0.23198755577426955)), ROUND(0Xffffffffdd873563, NULL), ((0.6392894711603092)!=('-632010723'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('}}9IF~t9')) BETWEEN ((402770051 COLLATE NOCASE)) AND (((((('-266189699')OR(NULL)))OR('-1804039821'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('726524736'))<=(((x'' IN ())))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ())) BETWEEN (0.2856601931177406 COLLATE RTRIM) AND (HEX(NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1748232139 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-147019510 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((HEX(DISTINCT 0.29888075194729735))!=((('0.07243231585234045')!=('ESC~\n퉺')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0X202e0e01 COLLATE NOCASE) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((('啤xꫠTr{d')OR(NULL)))AND(0.0633472774181445)))OR((((NULL))<>((0.9186423810672768))))))AND(((((((((NULL)OR(x'')))OR(x'')))AND(0.8745370799528531)))AND(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '359616612 -1500817989 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1534811568 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'd13a'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-2392121 0 sz=2142510943 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-1.06267972E8, 'Ό''tA2~,', x'')) BETWEEN (((('1205774716') BETWEEN ('212001443') AND (NULL)), 0x1052e7f7 COLLATE NOCASE, NULL COLLATE RTRIM)) AND ((CASE WHEN '-1840201754' THEN '9223372036854775807' ELSE '+nm䧥x^_' END, (NULL IN ()), ((NULL)>(NULL))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0xfffffffff6f74fc1 IN ('', NULL)))>=(((0.5593481028089266) BETWEEN (NULL) AND (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '716615007 2 sz=53311252 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN TYPEOF(DISTINCT NULL) THEN ('32488177' IN (0.17071375070174255, 0x7e153c58)) WHEN (x'' IN (NULL, '{*J')) THEN (((NULL)) BETWEEN (('')) AND ((NULL))) WHEN (~ (NULL)) THEN ((((NULL)OR(x'')))OR('0H')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1243584484 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((2068953984)OR('1695645867')))AND(0.539011889699085)))AND(NULL)))AND('1641351984')))/((0xffffffffad4428de IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=703278874 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((('-535258304' IN ())))<=((CASE WHEN -1.30626553E8 THEN NULL ELSE x'' END))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((x'', NULL, NULL, 1384217074, x'')) BETWEEN ((0.05360356745277528, '1622958714', '', 0.33243549988175713, -313620273)) AND (('', '-1926267027', 0.8361598605982917, ',M', x''))) THEN (('XP')IS(NULL)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-816347692 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-572419515 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-121149958'); -- 4ms;
DELETE FROM sqlite_stat1 WHERE (+ (x'')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((NULL)OR('-1582291368')))AND('')))OR(x'')))OR(x'858a'))) NOT BETWEEN ((x'c3e7' IN ())) AND (((x'')*('657613602')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=992426174 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.4865279505894362; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (~ (CASE WHEN '1622958714' THEN NULL WHEN -2022337252 THEN NULL WHEN 0.7842475593463736 THEN '936663187' ELSE 0.0026922784340684958 END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 171161726 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=724520161 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT ('0(')))|(((NULL)<<(0Xffffffff8f9997b2)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((((890510429)) BETWEEN ((NULL)) AND ((x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-1815703074'))!=((x''))) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 sz=-1791523454 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') BETWEEN ('-213133696') AND (x'abc3')))>((('w')||(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL COLLATE BINARY AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1610437932 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1408594523'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-501896122' COLLATE NOCASE)>>(((((x'')AND('Tn9C')))AND('')))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1313727700'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0.18353881267325645 THEN x'' END)AND(((0.8178010568891755)GLOB('0.9056373905059653')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE highlight(NULL, x'53a7', NULL, 1635229603)  WHEN ((0.8142706639921795)+(x'8065')) THEN -1.255365361E9 WHEN LIKELY(DISTINCT -1e500) THEN x'' COLLATE BINARY WHEN CAST('2131981501' AS REAL) THEN ((('', '-406055482', x'17a1')) BETWEEN ((x'', x'', NULL)) AND ((-130626553, NULL, 0xffffffffe1ca4b70))) ELSE CASE WHEN 0.29305463661636233 THEN 0Xffffffff9113da7a END END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('|k\r\r+') NOT BETWEEN (0.7742829143811619) AND (x'')) THEN ((NULL)%(NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN UPPER(DISTINCT 'YU瑛>!') THEN (((x'b715', NULL, x'')) NOT BETWEEN ((NULL, NULL, '0.8724009042649447')) AND (('', 0.8830531165586505, 0.5353153375154095))) ELSE ((NULL)!=(0.5492395965409445)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.6436898199326563)IS NOT(0.37731113248020764)))LIKE(CASE WHEN x'' THEN 0.5758258260997918 WHEN 7.03204626E8 THEN NULL WHEN NULL THEN NULL WHEN -1505683480 THEN 0.8121221499708485 WHEN 1.464097861E9 THEN '1輩m#' ELSE -3.70656855E8 END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-9223372036854775808'))==((x'')))) BETWEEN ((('vWl9rl-') NOT BETWEEN (1.464097861E9) AND (NULL))) AND ((('') NOT BETWEEN ('') AND ('<OX<j腨2')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (''))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1232826720 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ('160509060' COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1991432335 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=656414492 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '335911682 0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.14479444424672971)<=(0.10728471099639325)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '{*J'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(0.9548528247553766 AS NUMERIC) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((1490556531)<=(-1874223544)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=277048792 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((0.6054513059832498) BETWEEN ('') AND ('~T4㚈ioR?')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '703204626 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((NULL)OR(x'')))AND(NULL)))OR('')))AND(0.6991787701906454)) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ('359499855')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1044833261 sz=-187956175 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.13961668867819932 AS NUMERIC) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY(((('-863178439'))>(('2131981501')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1532403439 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1485340708'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-370656855 sz=-916839228'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((272943707) ISNULL))IS NOT(TYPEOF(DISTINCT 0.8568850435532858))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-815184022 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1499890817 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-386802382 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=1490556531 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1464097861'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-1188139761'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((('272943707'))<=((NULL))))AND(((x'8ed2')=(0.48483709078360837)))))AND(CAST(0.8683771857615621 AS NUMERIC))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 -2067363504 sz=-1502952344 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) BETWEEN (('539191018' COLLATE NOCASE)) AND ((((((NULL)OR(x'')))OR(x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.46341031233583396)AND('')))AND('477993645')))IS((('f衏gd9偤oeh')OR(0Xffffffffc75b7060)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x''))>=((NULL))))LIKE(CAST(x'' AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=556386308'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2131564194 sz=212001443 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'E('; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (0.5198736766314983)))&(((NULL)>>('wWCN4Cf')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1988164875 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((0.7016533963180984) ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1734409123 sz=-1940749629 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')/(NULL))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.539927861082946 IN (130290957)))>=('s0璆//hwv')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=726524736 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE 0.26210185172600187  WHEN 0Xffffffff91cdc6fe THEN x'' WHEN x'' THEN x'e959' WHEN '2x1X喻b' THEN x'' END IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=967740113 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-313620273 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-526856156'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1486716289 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1198481987'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1468416147'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE RTRIM) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-98089390 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE load_extension(-448265214, x'')  WHEN CASE 0.05846294049082945  WHEN NULL THEN '-1486716289' WHEN NULL THEN '0.8564202817423251' WHEN 0.7413847150050729 THEN -521844642 END THEN (('\n |z')+(NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '954610736' THEN 0.5567049015152656 END)>>(STRFTIME('-2104150753', NULL, '929071992'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=830053262'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=796683786 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1321418552 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1074788891 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1864591108 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT '726524736', x'') COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '4 sz=84267593 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL) NOT BETWEEN ('8') AND ('2096282646')) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-251440490 sz=-835420795 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE WHEN x'25d6' THEN '|,' ELSE '359930803' END AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=705088526 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=316896284'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS(DISTINCT ((1.88407525E9)IS(0.7577941196238897))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1493848378'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('')>>(0.4025485196231937)))>=((('㓦/^') NOT BETWEEN ('썧xhM') AND (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 -106267972 sz=-1766760886'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE '	u'  WHEN '0.01120681225487552' THEN NULL ELSE 0.7262253656556674 END THEN x'' ELSE ((NULL) ISNULL) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1203299938 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (NULL))) NOT BETWEEN (((-497721249)&(NULL))) AND ((x'a9f65220' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE '9D	Os/?l榿'  WHEN (((0xe753417, '-1260945361', NULL))<=(('-1398914484', '-1198481987', 0.6231225859701341))) THEN (0.31861615148233713 IN (x'')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=359616612 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-2084663292 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1310017362 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((x'0d89')>>(0.18520154087510443)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-213133696 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.6129186966383258) BETWEEN (0xffffffffb318586e) AND (6.57613602E8)))AND(LOWER(DISTINCT 0.3220599547554537))))OR(NULL COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1057169907 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1249108396 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TRIM(DISTINCT 0.8487695367320638, NULL))==(((((NULL)OR(0.03385562377590412)))OR('')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((NULL) NOT BETWEEN (0.5923037561691453) AND (0X1a2b001e))  WHEN ((((x'8e4a')AND(x'')))AND('0.4865279505894362')) THEN ((NULL) IS TRUE) WHEN ((NULL)<<('BLg#')) THEN ((0.08168644560853766) ISNULL) WHEN (('*m(r忶\r') NOT NULL) THEN ((x'')AND('272943707')) ELSE NULL END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-992778738 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1546407907 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-942195456 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1097646951'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((0.66120667641459) IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((TYPEOF(x''))OR(CAST(x'c0cb' AS NUMERIC))))AND(0.033758529761174216)))OR(((((((((((((x'3984')OR('%')))OR(x'')))OR(x'')))AND(NULL)))AND('')))AND(x'cb85')))))OR((('1044279470') BETWEEN (0.14411195295756074) AND (-920963392)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-557417958 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((NULL)LIKE(NULL)))AND((((x'', x'', 1.097646951E9, NULL, -863178439))<=(('', 0.5617142396340083, 'mit/p', '359499855', 0X0))))))AND(((((x'')OR(0.08818978494328089)))AND(x'')))))OR(((('|T#', x'', '1464097861', NULL, NULL))=((NULL, '', x'', '', NULL))))))AND(TYPEOF(x''))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE WHEN x'c6be' THEN NULL ELSE x'9914' END)OR((('1479231893') NOT BETWEEN (1282016011) AND ('')))))AND((('ZsEp}Oj<') BETWEEN (0.893643531444854) AND ('啤xꫠTr{d')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ ('454203731'))) NOT BETWEEN ((('6U') NOT BETWEEN (978481142) AND (NULL))) AND ((x'' IN ('-98089390')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-424821056 sz=-1365272545 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.08388048549792282)==(0.27734874001631504))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((~ (x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.7069582032240291)<('-1874223544'))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1438338147'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.6901587696175139 COLLATE BINARY) NOT BETWEEN (NULL COLLATE BINARY) AND (LOWER(x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE RTRIM)=(((NULL)<(x'')))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 114850104 sz=387364168'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=266084338'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE 0X575a9a17  WHEN (((0.8077152349489896, NULL, '995341445')) BETWEEN ((0xffffffff90b0113b, '389934705', NULL)) AND ((NULL, 0.5802306053531991, x'6e58'))) THEN CASE WHEN 0.9938746308005398 THEN NULL END END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('1571063411')IS(x'')) THEN NULL ELSE ((x'') NOT BETWEEN (0.5755868993072856) AND (NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'b4745131', NULL, NULL)) NOT BETWEEN ((((x'') BETWEEN ('L9') AND (x'')), (~ (NULL)), 0.09876518073397744 COLLATE NOCASE)) AND ((((x'2db8') BETWEEN (NULL) AND ('1571063411')), ((((NULL)AND(591965316)))OR(x'')), ((x'6f67')%(25057420))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=0 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1678873789 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN x'671f' THEN '<d' WHEN x'c971' THEN NULL WHEN x'713e' THEN '' WHEN '' THEN 'BLG#' WHEN '|\r' THEN -8.63178439E8 END) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1825465410 sz=1570185096 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1868139386 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL) ISNULL), (('-1801449241')IS(9.97051754E8)), ((x'462f64b4') NOT NULL), ((0.12551127963907105)=(x'')), HEX(NULL)))!=((CASE NULL  WHEN '242562071' THEN NULL WHEN 'Qr捵Kq(BoR' THEN 'O' WHEN x'' THEN 0.5233131327306544 ELSE 0Xffffffffbfe6ccda END, (~ (NULL)), ((0.9655302278313505)IS(0.19008889307304733)), ((x'') BETWEEN (NULL) AND (x'')), (((((((((((('')AND(x'')))OR(x'')))OR('-857780512')))OR('g')))OR(0.8758249175332498)))AND(x''))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN ((LIKELY('C9~魼j'))) AND ((CAST(960999863 AS TEXT)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '703512226 1597732227 sz=-712696169 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('603913949')OR(0.9965878569310144)))AND(NULL)))OR('-1540187678')))AND(0.39946552188410345)))OR(((0.488676687797554)>>('-517235084')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1136255895 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1657317305 -1041497122 sz=-1398914484 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-369000311')%(NULL)))&(((NULL)<<(0Xffffffff8bde0dba)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-1391411436 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER(CASE x''  WHEN 'Tn9C' THEN NULL WHEN 'ꋮ亷' THEN 290901416 WHEN -1534811568 THEN '1955050664' ELSE '' END); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1884075250 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-33432267 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=205721639 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL AS REAL) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)>>(NULL)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('M*' COLLATE BINARY) NOT BETWEEN (((NULL) BETWEEN (NULL) AND (NULL))) AND ((6.03913949E8 IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-810743936'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1247171726 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((('-1874223544') BETWEEN ('-606610044') AND (x'16da')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1718833975 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1768766967'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1244096178'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((HEX(DISTINCT 0.8276725816839365)) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-956988331 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LAST_INSERT_ROWID(); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-809173014 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((- (0.9896506897142315)))OR((((0.1891096115699794))<((0.7853095731783171))))))OR(NULL COLLATE NOCASE)))OR(0.9909031421230899)))OR(CASE WHEN 0.9087856940997013 THEN 1.14437086E8 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1072992739 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=1187334386 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1803418434 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1738327966 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((('-1170920325')OR(x'')))AND('	''nt53ኍ-Z')), x'', CASE WHEN '' THEN '0.0' ELSE '-713698694' END))<((json_array(NULL, -1.176373021E9), ((-840585004) ISNULL), LIKELY(0.07120692378480031)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (CASE WHEN '%H11p1e5000005Aa0' THEN 0Xffffffffad93e7a2 WHEN 0X30710e7f THEN x'' WHEN x'' THEN NULL END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-1391599223 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN x'' THEN x'65af' END) BETWEEN (CAST('-1032629611' AS REAL)) AND (CASE '1338218327'  WHEN 0.06587627815366803 THEN '' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((('R>vqF'))>(('-1118448295'))) THEN CAST('U\Q{u' AS INTEGER) WHEN CAST(-1.30626553E8 AS TEXT) THEN x'1428' WHEN (NULL IN ()) THEN '1754109730' COLLATE NOCASE END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1022508009 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '681022787 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1120855716 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('p.')AND(x'')))AND('0.6386748093717908')) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1571063411 1782789801'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-2003258885 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CASE x'6a11'  WHEN x'70e0d0fc' THEN NULL ELSE x'' END))<=(((1e500 IN ())))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('326606147')) BETWEEN ((((1.718062904E9)/('F}蓃v?')))) AND ((((x'')AND('1695645867'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '242562071 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0Xffffffffceadf9c4 AS TEXT) COLLATE RTRIM; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '780330120 1768766967 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1187921869'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)OR((NOT ('%')))))AND(((NULL) NOT BETWEEN (x'') AND ('-881628027')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((''))=((' c')))))<=(((5.61566691E8 IN ())))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1864591108 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-975713440 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1486716289 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-316375026 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1718062904'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE JULIANDAY(x'd2978cea' COLLATE RTRIM, ((('0.6531864477975072'))>=((-5.26856156E8))), (((x'')) NOT BETWEEN (('')) AND ((x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('') NOT BETWEEN ('#1') AND (NULL)) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CASE x'a4d5'  WHEN 6.0516016E8 THEN 0.8460513257165981 END  WHEN x'' COLLATE BINARY THEN (NOT ('-1655195338')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (212001443))) BETWEEN (CAST(0x21ff6aed AS NUMERIC)) AND ((~ (0.6386748093717908)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1526114781 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 2 sz=561566691 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1043671568 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 -682310947 sz=1 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=985907747 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=2019110552 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('1652175418' COLLATE BINARY)>>(0X6d22bde COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-648648107 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)<>('4469612574448743544-1327-1436:1046--7907603000274738125T799 ')))/(((((((((0.5335626847870389)AND(x'')))AND(0.27595504584031494)))OR(0Xffffffffb8909dbd)))OR(0.2672658469303426)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1327113937'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 6 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((x'f0ce')OR('')))!=(CASE 0.0026922784340684958  WHEN '9223372036854775807' THEN 0xffffffffa6370326 WHEN '1526114781' THEN 0xffffffffb6b3bfb0 WHEN NULL THEN 0.2753030133376372 WHEN 0.05312280748720777 THEN 0.6950007888261275 WHEN NULL THEN '-205238470' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((('0.4865279505894362'))=((0.6062856687181721))) AS INTEGER); -- 1ms;
DELETE FROM sqlite_stat1 WHERE LOWER(((x'')<(x''))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=539191018 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1199331703 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('' AS TEXT) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((LIKELIHOOD(0.683730903228616, 0.13785313964772827)))<((CASE WHEN 681831984 THEN 1.14437086E8 ELSE '986113800' END))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.5969119592736505) ISNULL) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1329352915 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((4.21700154E8)&(1.565853108E9))  WHEN 'n|' COLLATE BINARY THEN ('1321418552' IN (1.88407525E9, x'0d15')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')OR(((((NULL)AND(2.11532092E9)))OR(NULL)))))OR(CAST(NULL AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.8739414720816218; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-423551681'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(UPPER(DISTINCT 'n]%dF') AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1094590826'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.9119813374484456; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=1526114781 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (NOT ('7eq'))  WHEN 'n\n' THEN ((x'') ISNULL) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE NULL  WHEN ('UᷮYc9' IN ()) THEN x'' COLLATE RTRIM ELSE (('')&('cM\nY*#')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '359499855 sz=522400085 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.8983977773608761) IS TRUE)) NOT BETWEEN ((('{#n60飼24')GLOB(x''))) AND ('g' COLLATE NOCASE)); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1247195546 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 1825465410; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 198622284 sz=3858987 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1500817989 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.8181118684925914)+(NULL))) BETWEEN ((NULL IN ())) AND ((+ ('ִ')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE 0.5642770857589359  WHEN x'' THEN 0.6901587696175139 ELSE 0x7e153c58 END AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((0.338238083072089 IN ()))OR((('-2040034825')|('!%Z俣UY1)')))))AND(ABS(0.2827259420917311))))OR(((x'bca3') NOT BETWEEN (x'9b3d') AND (0.5860682679961812)))))OR(((-1561684927) NOT BETWEEN ('2105543099') AND (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=212001443'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-580707397'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_array_length(LIKE(0Xffffffffa68b55bb, ''), CASE WHEN 0xffffffffd0da18f2 THEN 0.9475202038386681 ELSE '''' END); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('' IN (x''))) NOT BETWEEN (CAST(x'c52b' AS REAL)) AND (((-816824259) ISNULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((x'')AND(((0.8564202817423251) IS FALSE))))OR(HEX(x'dd5fe49a'))))AND(1971444020)))AND((('0.6386748093717908')%(NULL)))))AND((('-1709520999') NOT BETWEEN ('') AND ('1008759811')))))AND(0.2856601931177406 COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1153078737 sz=213403348 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0Xffffffffb9e1f8e3) IS TRUE) AS TEXT); -- 0ms;
INSERT OR REPLACE INTO rt0(c4, c0, c2) VALUES (NULL, x'', 0X38bb1805); -- 0ms;
INSERT OR ABORT INTO rt0(c4, c2) VALUES (0xffffffffd1c66f2b, 0.3446048607573742), ('1304374134', x''), ('f\r1h4T', '-313620273'); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c4, c1, c3) VALUES (NULL, x'', x'2ea0'), (x'59e3d3c2', x'2e93', NULL), (0.08159452587396043, NULL, x'9696'); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c0) VALUES (-313620273); -- 0ms;
UPDATE OR FAIL rt0 SET (c3)=('E'); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c4, c1, c0, c2) VALUES ('-1734409123', 0Xffffffffda62bfb8, 0.20256811551124887, x''); -- 0ms;
ANALYZE; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c3, c2, c1, c0) VALUES ('o^', 0.5031411138988059, '#N>/f(Mw', 0.29325442514638933); -- 0ms;
ANALYZE; -- 0ms;
INSERT OR REPLACE INTO rt0(c2) VALUES ('-1713294516'), (x'82301545'), ('487516616'), ('1746840674'), (NULL), ('[I'), (0.8795582911067346); -- 0ms;
INSERT OR FAIL INTO rt0(c2, c4) VALUES (0X311c2d30, 0.2816845392743581); -- 0ms;
PRAGMA main.mmap_size = -8113131651289164721; -- 0ms;
END; -- 0ms;
INSERT OR REPLACE INTO rt0 VALUES ('', x'7b796746', '', NULL, '1345057326'); -- 0ms;
INSERT OR IGNORE INTO rt0(c4, c3, c0) VALUES (x'', '', -1686607318), (x'', NULL, 'Q0'), (x'', 0.9857961537158699, ''); -- 0ms;
INSERT OR ABORT INTO rt0(c1) VALUES ('*'); -- 0ms;
INSERT OR REPLACE INTO rt0(c2, c3, c1, c0) VALUES (x'', '-1534811568', 0.09754005081535144, 0x14b9315a); -- 0ms;
INSERT OR REPLACE INTO rt0(c1, c0, c3) VALUES (9.97051754E8, x'1082', 0.40962238145645724); -- 0ms;
INSERT OR IGNORE INTO rt0(c3, c4, c1, c2, c0) VALUES ('kRX', '212001443', NULL, '', 0.0729345867503729), ('1571063411', 0Xffffffffaa8572f8, NULL, NULL, '-1285857609'), (1.768766967E9, '1571063411', x'', x'', x''); -- 0ms;
CREATE VIEW  IF NOT EXISTS v0(c0, c1, c2) AS SELECT ALL ((((rt0.c1) IS FALSE))GLOB(((0.5130928839912074)-(x'50ef')))), (((rt0.c3 IN ())) BETWEEN ((NOT (rt0.c1))) AND (CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c4 WHEN 'n' THEN rt0.c3 END)), (~ ((- (rt0.c1)))) FROM rt0 WHERE (((('1464097861' COLLATE NOCASE))<((CASE WHEN x'a982' THEN x'' ELSE '	u' END)))); -- 0ms;
END TRANSACTION; -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c1) VALUES (x''); -- 0ms;
END TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c4, c1, c2, c3, c0) VALUES (0.5318445633013215, x'', NULL, NULL, x''); -- 0ms;
DELETE FROM rt0 WHERE LIKELIHOOD((+ (rt0.c1)), 0.8232208818443324); -- 0ms;
PRAGMA main.recursive_triggers = true; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', '2131981501 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
INSERT OR FAIL INTO rt0(c0, c4) VALUES (0.38985291070401806, '-1718833975'); -- 0ms;
INSERT OR IGNORE INTO rt0(c4, c0, c3) VALUES (0.851149603511678, x'', ''); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
PRAGMA journal_mode; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
CREATE VIRTUAL TABLE rt1 USING rtree(c0, c1, c2, c3, c4); -- 1ms;
ANALYZE; -- 0ms;
UPDATE OR IGNORE rt0 SET (c3)=(0.29852602889045843) WHERE ((((((((((rt0.c1)|(rt0.c2)))OR((((rt0.c4)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3))))))AND(GLOB(rt0.c0, rt0.c4))))AND(NULL)))AND((NOT (rt0.c2)))); -- 1ms;
INSERT OR ROLLBACK INTO rt0(c3) VALUES (0.8178010568891755); -- 0ms;
UPDATE rt0 SET (c2)=(0Xe8e258b); -- 0ms;
REINDEX  rt0; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
REINDEX BINARY; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c3, c1, c4, c0) VALUES (1378753607, NULL, 0X36f49f9f, 0.6970566797342744); -- 0ms;
INSERT OR IGNORE INTO rt1(c3) VALUES (0xffffffff935f5228); -- 0ms;
PRAGMA auto_vacuum = INCREMENTAL; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE ('1') UNION ALL SELECT ALL * FROM v0 WHERE ((NOT ('1'))) UNION ALL SELECT * FROM v0 WHERE ((('1') ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM rt0, rt1 NATURAL JOIN v0;
SELECT DISTINCT * FROM rt0, rt1 NATURAL JOIN v0 WHERE (CAST(rt1.c0 AS INTEGER) COLLATE BINARY) UNION SELECT DISTINCT * FROM rt0, rt1 NATURAL JOIN v0 WHERE ((NOT (CAST(rt1.c0 AS INTEGER) COLLATE BINARY))) UNION SELECT DISTINCT * FROM rt0, rt1 NATURAL JOIN v0 WHERE (((CAST(rt1.c0 AS INTEGER) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM rt0, rt1 NATURAL JOIN v0;
SELECT v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0;
SELECT ALL v0.c2, v0.c1, v0.c0 FROM v0 WHERE (CAST((v0.c1 IN ()) AS REAL)) GROUP BY v0.c2, v0.c1, v0.c0 UNION SELECT v0.c2, v0.c1, v0.c0 FROM v0 WHERE ((NOT (CAST((v0.c1 IN ()) AS REAL)))) GROUP BY v0.c2, v0.c1, v0.c0 UNION SELECT ALL v0.c2, v0.c1, v0.c0 FROM v0 WHERE (((CAST((v0.c1 IN ()) AS REAL)) ISNULL)) GROUP BY v0.c2, v0.c1, v0.c0;
SELECT v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0;
SELECT rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1;
SELECT ALL rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1 HAVING MIN(COUNT(*)) UNION ALL SELECT ALL rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1 HAVING (NOT (MIN(COUNT(*)))) UNION ALL SELECT ALL rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1 HAVING ((MIN(COUNT(*))) ISNULL);
SELECT ALL * FROM rt0, v0;
SELECT * FROM rt0, v0 WHERE (((((v0.c1) NOTNULL))!=(((rt0.c4)<<(v0.c2))))) UNION ALL SELECT * FROM rt0, v0 WHERE ((NOT (((((v0.c1) NOTNULL))<>(((rt0.c4)<<(v0.c2))))))) UNION ALL SELECT * FROM rt0, v0 WHERE (((((((v0.c1) NOTNULL))<>(((rt0.c4)<<(v0.c2))))) ISNULL));
SELECT ALL * FROM rt0, v0;
SELECT DISTINCT * FROM rt1 NATURAL JOIN v0;
SELECT DISTINCT * FROM rt1 NATURAL JOIN v0 WHERE (((((rt1.c4)>(v0.c0)))<>(rt1.c1))) UNION SELECT DISTINCT * FROM rt1 NATURAL JOIN v0 WHERE ((NOT (((((rt1.c4)>(v0.c0)))<>(rt1.c1))))) UNION SELECT DISTINCT * FROM rt1 NATURAL JOIN v0 WHERE (((((((rt1.c4)>(v0.c0)))!=(rt1.c1))) ISNULL));
SELECT DISTINCT * FROM rt1 NATURAL JOIN v0;
SELECT rt0.c0, v0.c2, rt0.c4, v0.c1, rt0.c3, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c0, v0.c2, rt0.c4, v0.c1, rt0.c3, rt0.c1, v0.c0;
SELECT rt0.c0, v0.c2, rt0.c4, v0.c1, rt0.c3, rt0.c1, v0.c0 FROM v0, rt0 WHERE ('!M+䷬N0') GROUP BY rt0.c0, v0.c2, rt0.c4, v0.c1, rt0.c3, rt0.c1, v0.c0 UNION SELECT rt0.c0, v0.c2, rt0.c4, v0.c1, rt0.c3, rt0.c1, v0.c0 FROM v0, rt0 WHERE ((NOT ('!M+䷬N0'))) GROUP BY rt0.c0, v0.c2, rt0.c4, v0.c1, rt0.c3, rt0.c1, v0.c0 UNION SELECT rt0.c0, v0.c2, rt0.c4, v0.c1, rt0.c3, rt0.c1, v0.c0 FROM v0, rt0 WHERE ((('!M+䷬N0') ISNULL)) GROUP BY rt0.c0, v0.c2, rt0.c4, v0.c1, rt0.c3, rt0.c1, v0.c0;
SELECT rt0.c0, v0.c2, rt0.c4, v0.c1, rt0.c3, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c0, v0.c2, rt0.c4, v0.c1, rt0.c3, rt0.c1, v0.c0;
SELECT ALL rt0.c3, rt1.c3, rt1.c1, rt1.c2 FROM rt0 LEFT OUTER JOIN rt1 ON (((rt1.c3) NOTNULL) IN (CAST(rt1.c3 AS NUMERIC))) INNER JOIN v0 ON ((((CAST(v0.c1 AS INTEGER))OR(((rt0.c2)=(rt1.c3)))))OR(rt0.c2 COLLATE NOCASE)) GROUP BY rt0.c3, rt1.c3, rt1.c1, rt1.c2;
SELECT rt0.c3, rt1.c3, rt1.c1, rt1.c2 FROM rt0 LEFT OUTER JOIN rt1 ON (((rt1.c3) NOTNULL) IN (CAST(rt1.c3 AS NUMERIC))) INNER JOIN v0 ON ((((CAST(v0.c1 AS INTEGER))OR(((rt0.c2)==(rt1.c3)))))OR(rt0.c2 COLLATE NOCASE)) GROUP BY rt0.c3, rt1.c3, rt1.c1, rt1.c2 HAVING COUNT(SUM(rt0.c0)) UNION ALL SELECT rt0.c3, rt1.c3, rt1.c1, rt1.c2 FROM rt0 LEFT OUTER JOIN rt1 ON (((rt1.c3) NOTNULL) IN (CAST(rt1.c3 AS NUMERIC))) INNER JOIN v0 ON ((((CAST(v0.c1 AS INTEGER))OR(((rt0.c2)=(rt1.c3)))))OR(rt0.c2 COLLATE NOCASE)) GROUP BY rt0.c3, rt1.c3, rt1.c1, rt1.c2 HAVING (NOT (COUNT(SUM(rt0.c0)))) UNION ALL SELECT ALL rt0.c3, rt1.c3, rt1.c1, rt1.c2 FROM rt0 LEFT OUTER JOIN rt1 ON (((rt1.c3) NOTNULL) IN (CAST(rt1.c3 AS NUMERIC))) INNER JOIN v0 ON ((((CAST(v0.c1 AS INTEGER))OR(((rt0.c2)=(rt1.c3)))))OR(rt0.c2 COLLATE NOCASE)) GROUP BY rt0.c3, rt1.c3, rt1.c1, rt1.c2 HAVING ((COUNT(SUM(rt0.c0))) ISNULL);
SELECT rt1.c2, v0.c1, rt1.c3, rt1.c0, rt1.c1, v0.c0, rt1.c4, v0.c2 FROM v0 NATURAL JOIN rt1;
SELECT ALL rt1.c2, v0.c1, rt1.c3, rt1.c0, rt1.c1, v0.c0, rt1.c4, v0.c2 FROM v0 NATURAL JOIN rt1 WHERE (((((+ (rt1.c1)), ((rt1.c1) BETWEEN (v0.c2) AND (v0.c2)), (rt1.c4 IN (rt1.c1)), (~ (rt1.c1)), v0.c0 COLLATE BINARY))>(((((rt1.c0))<=((rt1.c2))), ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2)), ((rt1.c4) BETWEEN (v0.c1) AND (rt1.c1)), NULLIF(DISTINCT rt1.c2, '1094712939'), (v0.c0 IN ()))))) UNION ALL SELECT rt1.c2, v0.c1, rt1.c3, rt1.c0, rt1.c1, v0.c0, rt1.c4, v0.c2 FROM v0 NATURAL JOIN rt1 WHERE ((NOT (((((+ (rt1.c1)), ((rt1.c1) BETWEEN (v0.c2) AND (v0.c2)), (rt1.c4 IN (rt1.c1)), (~ (rt1.c1)), v0.c0 COLLATE BINARY))>(((((rt1.c0))<=((rt1.c2))), ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2)), ((rt1.c4) BETWEEN (v0.c1) AND (rt1.c1)), NULLIF(DISTINCT rt1.c2, '1094712939'), (v0.c0 IN ()))))))) UNION ALL SELECT rt1.c2, v0.c1, rt1.c3, rt1.c0, rt1.c1, v0.c0, rt1.c4, v0.c2 FROM v0 NATURAL JOIN rt1 WHERE (((((((+ (rt1.c1)), ((rt1.c1) BETWEEN (v0.c2) AND (v0.c2)), (rt1.c4 IN (rt1.c1)), (~ (rt1.c1)), v0.c0 COLLATE BINARY))>(((((rt1.c0))<=((rt1.c2))), ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2)), ((rt1.c4) BETWEEN (v0.c1) AND (rt1.c1)), NULLIF(DISTINCT rt1.c2, '1094712939'), (v0.c0 IN ()))))) ISNULL));
SELECT rt1.c2, v0.c1, rt1.c3, rt1.c0, rt1.c1, v0.c0, rt1.c4, v0.c2 FROM v0 NATURAL JOIN rt1;
SELECT DISTINCT * FROM v0, rt1 CROSS JOIN rt0 ON rt1.c1;
SELECT DISTINCT * FROM v0, rt1 CROSS JOIN rt0 ON rt1.c1 WHERE ((+ (CASE rt0.c1  WHEN rt0.c4 THEN rt0.c0 END))) UNION SELECT DISTINCT * FROM v0, rt1 CROSS JOIN rt0 ON rt1.c1 WHERE ((NOT ((+ (CASE rt0.c1  WHEN rt0.c4 THEN rt0.c0 END))))) UNION SELECT DISTINCT * FROM v0, rt1 CROSS JOIN rt0 ON rt1.c1 WHERE ((((+ (CASE rt0.c1  WHEN rt0.c4 THEN rt0.c0 END))) ISNULL));
SELECT DISTINCT * FROM v0, rt1 CROSS JOIN rt0 ON rt1.c1;
SELECT ALL rt1.c3, v0.c2, rt1.c4, rt1.c1, rt1.c0, v0.c0, v0.c1, rt1.c2 FROM v0, rt1 GROUP BY rt1.c3, v0.c2, rt1.c4, rt1.c1, rt1.c0, v0.c0, v0.c1, rt1.c2;
SELECT rt1.c3, v0.c2, rt1.c4, rt1.c1, rt1.c0, v0.c0, v0.c1, rt1.c2 FROM v0, rt1 WHERE ((((((rt1.c3) NOT BETWEEN (v0.c1) AND (rt1.c3))))<=((CASE '0.8884115284888774'  WHEN v0.c2 THEN v0.c0 ELSE rt1.c2 END)))) GROUP BY rt1.c3, v0.c2, rt1.c4, rt1.c1, rt1.c0, v0.c0, v0.c1, rt1.c2 UNION SELECT rt1.c3, v0.c2, rt1.c4, rt1.c1, rt1.c0, v0.c0, v0.c1, rt1.c2 FROM v0, rt1 WHERE ((NOT ((((((rt1.c3) NOT BETWEEN (v0.c1) AND (rt1.c3))))<=((CASE '0.8884115284888774'  WHEN v0.c2 THEN v0.c0 ELSE rt1.c2 END)))))) GROUP BY rt1.c3, v0.c2, rt1.c4, rt1.c1, rt1.c0, v0.c0, v0.c1, rt1.c2 UNION SELECT rt1.c3, v0.c2, rt1.c4, rt1.c1, rt1.c0, v0.c0, v0.c1, rt1.c2 FROM v0, rt1 WHERE ((((((((rt1.c3) NOT BETWEEN (v0.c1) AND (rt1.c3))))<=((CASE '0.8884115284888774'  WHEN v0.c2 THEN v0.c0 ELSE rt1.c2 END)))) ISNULL)) GROUP BY rt1.c3, v0.c2, rt1.c4, rt1.c1, rt1.c0, v0.c0, v0.c1, rt1.c2;
SELECT ALL rt1.c3, v0.c2, rt1.c4, rt1.c1, rt1.c0, v0.c0, v0.c1, rt1.c2 FROM v0, rt1 GROUP BY rt1.c3, v0.c2, rt1.c4, rt1.c1, rt1.c0, v0.c0, v0.c1, rt1.c2;
SELECT ALL rt1.c0 FROM rt1, v0 FULL OUTER JOIN rt0 ON ((CAST(rt0.c2 AS REAL)) BETWEEN (((rt0.c1)IS NOT(rt0.c1))) AND (((((rt0.c0)OR(rt1.c0)))OR(rt0.c0)))) GROUP BY rt1.c0;
SELECT rt1.c0 FROM rt1, v0 FULL OUTER JOIN rt0 ON ((CAST(rt0.c2 AS REAL)) BETWEEN (((rt0.c1)IS NOT(rt0.c1))) AND (((((rt0.c0)OR(rt1.c0)))OR(rt0.c0)))) GROUP BY rt1.c0 HAVING SUM(MIN(rt1.c0, TOTAL(v0.c1), MAX(rt1.c3), rt1.c2)) UNION ALL SELECT ALL rt1.c0 FROM rt1, v0 FULL OUTER JOIN rt0 ON ((CAST(rt0.c2 AS REAL)) BETWEEN (((rt0.c1)IS NOT(rt0.c1))) AND (((((rt0.c0)OR(rt1.c0)))OR(rt0.c0)))) GROUP BY rt1.c0 HAVING (NOT (SUM(MIN(rt1.c0, TOTAL(v0.c1), MAX(rt1.c3), rt1.c2)))) UNION ALL SELECT rt1.c0 FROM rt1, v0 FULL OUTER JOIN rt0 ON ((CAST(rt0.c2 AS REAL)) BETWEEN (((rt0.c1)IS NOT(rt0.c1))) AND (((((rt0.c0)OR(rt1.c0)))OR(rt0.c0)))) GROUP BY rt1.c0 HAVING ((SUM(MIN(rt1.c0, TOTAL(v0.c1), MAX(rt1.c3), rt1.c2))) ISNULL);
SELECT ALL * FROM v0, rt0 FULL OUTER JOIN rt1 ON (~ ((rt1.c0 IN ())));
SELECT ALL * FROM v0, rt0 FULL OUTER JOIN rt1 ON (~ ((rt1.c0 IN ()))) WHERE (x'' COLLATE BINARY) UNION ALL SELECT * FROM v0, rt0 FULL OUTER JOIN rt1 ON (~ ((rt1.c0 IN ()))) WHERE ((NOT (x'' COLLATE BINARY))) UNION ALL SELECT * FROM v0, rt0 FULL OUTER JOIN rt1 ON (~ ((rt1.c0 IN ()))) WHERE (((x'' COLLATE BINARY) ISNULL));
SELECT ALL * FROM v0, rt0 FULL OUTER JOIN rt1 ON (~ ((rt1.c0 IN ())));
SELECT DISTINCT * FROM rt0, rt1;
SELECT DISTINCT * FROM rt0, rt1 WHERE ((((((~ (rt1.c0)))AND(rt0.c0)))OR(((rt1.c3)IS NOT(rt1.c2))))) UNION SELECT DISTINCT * FROM rt0, rt1 WHERE ((NOT ((((((~ (rt1.c0)))AND(rt0.c0)))OR(((rt1.c3)IS NOT(rt1.c2))))))) UNION SELECT DISTINCT * FROM rt0, rt1 WHERE ((((((((~ (rt1.c0)))AND(rt0.c0)))OR(((rt1.c3)IS NOT(rt1.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0, rt1;
SELECT ALL rt1.c1, rt1.c2 FROM v0, rt0 CROSS JOIN rt1 ON (((((rt1.c1)OR(rt1.c3)))OR(rt0.c3)) IN ()) GROUP BY rt1.c1, rt1.c2;
SELECT rt1.c1, rt1.c2 FROM v0, rt0 CROSS JOIN rt1 ON (((((rt1.c1)OR(rt1.c3)))OR(rt0.c3)) IN ()) WHERE (((((((((((((((((((rt1.c1) IS TRUE))OR((((('!M#❁DoV')AND(rt1.c1)))AND(rt1.c3)))))OR(rt1.c2 COLLATE NOCASE)))AND(CAST(rt0.c3 AS REAL))))AND(CASE WHEN rt1.c4 THEN rt1.c0 WHEN rt0.c4 THEN v0.c2 WHEN v0.c1 THEN rt1.c2 WHEN rt1.c4 THEN rt1.c0 WHEN rt0.c2 THEN '9223372036854775807' END)))AND(((rt1.c3) NOT BETWEEN (v0.c2) AND (rt1.c4)))))OR(((rt1.c0) BETWEEN (rt0.c2) AND (rt0.c3)))))OR(((rt1.c4) NOT BETWEEN (657613602) AND (v0.c2)))))OR((rt0.c1 IN ())))) GROUP BY rt1.c1, rt1.c2 UNION SELECT ALL rt1.c1, rt1.c2 FROM v0, rt0 CROSS JOIN rt1 ON (((((rt1.c1)OR(rt1.c3)))OR(rt0.c3)) IN ()) WHERE ((NOT (((((((((((((((((((rt1.c1) IS TRUE))OR((((('!M#❁DoV')AND(rt1.c1)))AND(rt1.c3)))))OR(rt1.c2 COLLATE NOCASE)))AND(CAST(rt0.c3 AS REAL))))AND(CASE WHEN rt1.c4 THEN rt1.c0 WHEN rt0.c4 THEN v0.c2 WHEN v0.c1 THEN rt1.c2 WHEN rt1.c4 THEN rt1.c0 WHEN rt0.c2 THEN '9223372036854775807' END)))AND(((rt1.c3) NOT BETWEEN (v0.c2) AND (rt1.c4)))))OR(((rt1.c0) BETWEEN (rt0.c2) AND (rt0.c3)))))OR(((rt1.c4) NOT BETWEEN (657613602) AND (v0.c2)))))OR((rt0.c1 IN ())))))) GROUP BY rt1.c1, rt1.c2 UNION SELECT rt1.c1, rt1.c2 FROM v0, rt0 CROSS JOIN rt1 ON (((((rt1.c1)OR(rt1.c3)))OR(rt0.c3)) IN ()) WHERE (((((((((((((((((((((rt1.c1) IS TRUE))OR((((('!M#❁DoV')AND(rt1.c1)))AND(rt1.c3)))))OR(rt1.c2 COLLATE NOCASE)))AND(CAST(rt0.c3 AS REAL))))AND(CASE WHEN rt1.c4 THEN rt1.c0 WHEN rt0.c4 THEN v0.c2 WHEN v0.c1 THEN rt1.c2 WHEN rt1.c4 THEN rt1.c0 WHEN rt0.c2 THEN '9223372036854775807' END)))AND(((rt1.c3) NOT BETWEEN (v0.c2) AND (rt1.c4)))))OR(((rt1.c0) BETWEEN (rt0.c2) AND (rt0.c3)))))OR(((rt1.c4) NOT BETWEEN (657613602) AND (v0.c2)))))OR((rt0.c1 IN ())))) ISNULL)) GROUP BY rt1.c1, rt1.c2;
SELECT ALL rt1.c1, rt1.c2 FROM v0, rt0 CROSS JOIN rt1 ON (((((rt1.c1)OR(rt1.c3)))OR(rt0.c3)) IN ()) GROUP BY rt1.c1, rt1.c2;
SELECT ALL v0.c1, v0.c2, v0.c0, rt0.c3, rt1.c3 FROM rt0, rt1, v0 GROUP BY v0.c1, v0.c2, v0.c0, rt0.c3, rt1.c3;
SELECT v0.c1, v0.c2, v0.c0, rt0.c3, rt1.c3 FROM rt0, rt1, v0 GROUP BY v0.c1, v0.c2, v0.c0, rt0.c3, rt1.c3 HAVING TOTAL(((rt0.c4) BETWEEN (0.54496018200664) AND (AVG(MAX(rt0.c1))))) UNION ALL SELECT v0.c1, v0.c2, v0.c0, rt0.c3, rt1.c3 FROM rt0, rt1, v0 GROUP BY v0.c1, v0.c2, v0.c0, rt0.c3, rt1.c3 HAVING (NOT (TOTAL(((rt0.c4) BETWEEN (0.54496018200664) AND (AVG(MAX(rt0.c1))))))) UNION ALL SELECT v0.c1, v0.c2, v0.c0, rt0.c3, rt1.c3 FROM rt0, rt1, v0 GROUP BY v0.c1, v0.c2, v0.c0, rt0.c3, rt1.c3 HAVING ((TOTAL(((rt0.c4) BETWEEN (0.54496018200664) AND (AVG(MAX(rt0.c1)))))) ISNULL);
SELECT rt1.c1, rt1.c2, rt0.c0, rt0.c2, rt0.c1, v0.c2, rt1.c0, rt1.c4, rt0.c4 FROM v0, rt1, rt0;
SELECT rt1.c1, rt1.c2, rt0.c0, rt0.c2, rt0.c1, v0.c2, rt1.c0, rt1.c4, rt0.c4 FROM v0, rt1, rt0 WHERE (((657613602)>=(rt0.c3)) COLLATE RTRIM) UNION ALL SELECT rt1.c1, rt1.c2, rt0.c0, rt0.c2, rt0.c1, v0.c2, rt1.c0, rt1.c4, rt0.c4 FROM v0, rt1, rt0 WHERE ((NOT (((657613602)>=(rt0.c3)) COLLATE RTRIM))) UNION ALL SELECT ALL rt1.c1, rt1.c2, rt0.c0, rt0.c2, rt0.c1, v0.c2, rt1.c0, rt1.c4, rt0.c4 FROM v0, rt1, rt0 WHERE (((((657613602)>=(rt0.c3)) COLLATE RTRIM) ISNULL));
SELECT rt1.c1, rt1.c2, rt0.c0, rt0.c2, rt0.c1, v0.c2, rt1.c0, rt1.c4, rt0.c4 FROM v0, rt1, rt0;
SELECT DISTINCT rt0.c4, rt0.c1, rt1.c3, v0.c2, rt0.c0, rt1.c4, rt1.c2 FROM rt0, v0, rt1;
SELECT DISTINCT rt0.c4, rt0.c1, rt1.c3, v0.c2, rt0.c0, rt1.c4, rt1.c2 FROM rt0, v0, rt1 WHERE (v0.c0) UNION SELECT DISTINCT rt0.c4, rt0.c1, rt1.c3, v0.c2, rt0.c0, rt1.c4, rt1.c2 FROM rt0, v0, rt1 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT rt0.c4, rt0.c1, rt1.c3, v0.c2, rt0.c0, rt1.c4, rt1.c2 FROM rt0, v0, rt1 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c1, rt1.c3, v0.c2, rt0.c0, rt1.c4, rt1.c2 FROM rt0, v0, rt1;
SELECT ALL rt1.c4, v0.c2, rt0.c3, rt1.c1, rt0.c4, rt1.c2, v0.c0, v0.c1, rt0.c1 FROM rt0, rt1, v0 GROUP BY rt1.c4, v0.c2, rt0.c3, rt1.c1, rt0.c4, rt1.c2, v0.c0, v0.c1, rt0.c1;
SELECT rt1.c4, v0.c2, rt0.c3, rt1.c1, rt0.c4, rt1.c2, v0.c0, v0.c1, rt0.c1 FROM rt0, rt1, v0 NOT INDEXED WHERE (((rt0.c2)&(DATE(0.1983550275257029, v0.c2, rt1.c1)))) GROUP BY rt1.c4, v0.c2, rt0.c3, rt1.c1, rt0.c4, rt1.c2, v0.c0, v0.c1, rt0.c1 UNION SELECT ALL rt1.c4, v0.c2, rt0.c3, rt1.c1, rt0.c4, rt1.c2, v0.c0, v0.c1, rt0.c1 FROM rt0, rt1, v0 WHERE ((NOT (((rt0.c2)&(DATE(0.1983550275257029, v0.c2, rt1.c1)))))) GROUP BY rt1.c4, v0.c2, rt0.c3, rt1.c1, rt0.c4, rt1.c2, v0.c0, v0.c1, rt0.c1 UNION SELECT rt1.c4, v0.c2, rt0.c3, rt1.c1, rt0.c4, rt1.c2, v0.c0, v0.c1, rt0.c1 FROM rt0, rt1, v0 WHERE (((((rt0.c2)&(DATE(0.1983550275257029, v0.c2, rt1.c1)))) ISNULL)) GROUP BY rt1.c4, v0.c2, rt0.c3, rt1.c1, rt0.c4, rt1.c2, v0.c0, v0.c1, rt0.c1;
SELECT ALL rt1.c4, v0.c2, rt0.c3, rt1.c1, rt0.c4, rt1.c2, v0.c0, v0.c1, rt0.c1 FROM rt0, rt1, v0 GROUP BY rt1.c4, v0.c2, rt0.c3, rt1.c1, rt0.c4, rt1.c2, v0.c0, v0.c1, rt0.c1;
SELECT rt0.c4 FROM v0 NATURAL JOIN rt0 GROUP BY rt0.c4;
SELECT rt0.c4 FROM v0 NATURAL JOIN rt0 GROUP BY rt0.c4 HAVING (((MAX(AVG(rt0.c3)), SUM(MIN(GROUP_CONCAT(SUM(TOTAL(COUNT(TOTAL(0.7834487765920767))))))), MAX(MAX(COUNT(*))))) NOT BETWEEN ((((MAX(rt0.c2))GLOB(rt0.c4)), rt0.c1, COUNT(rt0.c4))) AND ((((rt0.c2)==(rt0.c1)), AVG(v0.c1), ((rt0.c3) ISNULL)))) UNION ALL SELECT ALL rt0.c4 FROM v0 NATURAL JOIN rt0 GROUP BY rt0.c4 HAVING (NOT ((((MAX(AVG(rt0.c3)), SUM(MIN(GROUP_CONCAT(SUM(TOTAL(COUNT(TOTAL(0.7834487765920767))))))), MAX(MAX(COUNT(*))))) NOT BETWEEN ((((MAX(rt0.c2))GLOB(rt0.c4)), rt0.c1, COUNT(rt0.c4))) AND ((((rt0.c2)==(rt0.c1)), AVG(v0.c1), ((rt0.c3) ISNULL)))))) UNION ALL SELECT ALL rt0.c4 FROM v0 NATURAL JOIN rt0 GROUP BY rt0.c4 HAVING (((((MAX(AVG(rt0.c3)), SUM(MIN(GROUP_CONCAT(SUM(TOTAL(COUNT(TOTAL(0.7834487765920767))))))), MAX(MAX(COUNT(*))))) NOT BETWEEN ((((MAX(rt0.c2))GLOB(rt0.c4)), rt0.c1, COUNT(rt0.c4))) AND ((((rt0.c2)=(rt0.c1)), AVG(v0.c1), ((rt0.c3) ISNULL))))) ISNULL);
SELECT rt0.c0 FROM rt0;
SELECT ALL rt0.c0 FROM rt0 WHERE ((((((rt0.c1 IN (rt0.c2)))OR((((rt0.c2, rt0.c2, rt0.c2))<=((rt0.c4, rt0.c1, rt0.c2))))))OR(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c3))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT ((((((rt0.c1 IN (rt0.c2)))OR((((rt0.c2, rt0.c2, rt0.c2))<=((rt0.c4, rt0.c1, rt0.c2))))))OR(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c3))))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE ((((((((rt0.c1 IN (rt0.c2)))OR((((rt0.c2, rt0.c2, rt0.c2))<=((rt0.c4, rt0.c1, rt0.c2))))))OR(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c3))))) ISNULL));
SELECT rt0.c0 FROM rt0;
SELECT DISTINCT v0.c2, v0.c1 FROM v0;
SELECT DISTINCT v0.c2, v0.c1 FROM v0 WHERE (CAST((((v0.c0))==((v0.c0))) AS TEXT)) UNION SELECT DISTINCT v0.c2, v0.c1 FROM v0 WHERE ((NOT (CAST((((v0.c0))==((v0.c0))) AS TEXT)))) UNION SELECT DISTINCT v0.c2, v0.c1 FROM v0 WHERE (((CAST((((v0.c0))==((v0.c0))) AS TEXT)) ISNULL));
SELECT DISTINCT v0.c2, v0.c1 FROM v0;
SELECT ALL rt0.c4, v0.c2, rt0.c3, v0.c0, rt1.c2, rt0.c1, rt1.c4, rt1.c0 FROM v0, rt1, rt0 GROUP BY rt0.c4, v0.c2, rt0.c3, v0.c0, rt1.c2, rt0.c1, rt1.c4, rt1.c0;
SELECT ALL rt0.c4, v0.c2, rt0.c3, v0.c0, rt1.c2, rt0.c1, rt1.c4, rt1.c0 FROM v0, rt1, rt0 WHERE (NULL) GROUP BY rt0.c4, v0.c2, rt0.c3, v0.c0, rt1.c2, rt0.c1, rt1.c4, rt1.c0 UNION SELECT rt0.c4, v0.c2, rt0.c3, v0.c0, rt1.c2, rt0.c1, rt1.c4, rt1.c0 FROM v0, rt1, rt0 WHERE ((NOT (NULL))) GROUP BY rt0.c4, v0.c2, rt0.c3, v0.c0, rt1.c2, rt0.c1, rt1.c4, rt1.c0 UNION SELECT rt0.c4, v0.c2, rt0.c3, v0.c0, rt1.c2, rt0.c1, rt1.c4, rt1.c0 FROM v0, rt1, rt0 WHERE (((NULL) ISNULL)) GROUP BY rt0.c4, v0.c2, rt0.c3, v0.c0, rt1.c2, rt0.c1, rt1.c4, rt1.c0;
SELECT ALL rt0.c4, v0.c2, rt0.c3, v0.c0, rt1.c2, rt0.c1, rt1.c4, rt1.c0 FROM v0, rt1, rt0 GROUP BY rt0.c4, v0.c2, rt0.c3, v0.c0, rt1.c2, rt0.c1, rt1.c4, rt1.c0;
SELECT rt0.c4, rt0.c2, rt0.c1, rt0.c3, v0.c0 FROM rt0 LEFT OUTER JOIN v0 ON (NOT ((v0.c1 IN ('w+.*Gcv!')))) GROUP BY rt0.c4, rt0.c2, rt0.c1, rt0.c3, v0.c0;
SELECT rt0.c4, rt0.c2, rt0.c1, rt0.c3, v0.c0 FROM rt0 LEFT OUTER JOIN v0 ON (NOT ((v0.c1 IN ('w+.*Gcv!')))) GROUP BY rt0.c4, rt0.c2, rt0.c1, rt0.c3, v0.c0 HAVING ((((AVG(rt0.c1)) IS TRUE))%(CASE rt0.c1  WHEN rt0.c3 THEN rt0.c4 ELSE v0.c1 END)) UNION ALL SELECT rt0.c4, rt0.c2, rt0.c1, rt0.c3, v0.c0 FROM rt0 LEFT OUTER JOIN v0 ON (NOT ((v0.c1 IN ('w+.*Gcv!')))) GROUP BY rt0.c4, rt0.c2, rt0.c1, rt0.c3, v0.c0 HAVING (NOT (((((AVG(rt0.c1)) IS TRUE))%(CASE rt0.c1  WHEN rt0.c3 THEN rt0.c4 ELSE v0.c1 END)))) UNION ALL SELECT rt0.c4, rt0.c2, rt0.c1, rt0.c3, v0.c0 FROM rt0 LEFT OUTER JOIN v0 ON (NOT ((v0.c1 IN ('w+.*Gcv!')))) GROUP BY rt0.c4, rt0.c2, rt0.c1, rt0.c3, v0.c0 HAVING ((((((AVG(rt0.c1)) IS TRUE))%(CASE rt0.c1  WHEN rt0.c3 THEN rt0.c4 ELSE v0.c1 END))) ISNULL);
SELECT rt0.c4, rt0.c2, rt0.c1, rt0.c3, v0.c0 FROM rt0 LEFT OUTER JOIN v0 ON (NOT ((v0.c1 IN ('w+.*Gcv!')))) GROUP BY rt0.c4, rt0.c2, rt0.c1, rt0.c3, v0.c0;
SELECT rt0.c4, rt0.c2, rt0.c1, rt0.c3, v0.c0 FROM rt0 LEFT OUTER JOIN v0 ON (NOT ((v0.c1 IN ('w+.*Gcv!')))) GROUP BY rt0.c4, rt0.c2, rt0.c1, rt0.c3, v0.c0 HAVING ((((AVG(rt0.c1)) IS TRUE))%(CASE rt0.c1  WHEN rt0.c3 THEN rt0.c4 ELSE v0.c1 END)) UNION ALL SELECT rt0.c4, rt0.c2, rt0.c1, rt0.c3, v0.c0 FROM rt0 LEFT OUTER JOIN v0 ON (NOT ((v0.c1 IN ('w+.*Gcv!')))) GROUP BY rt0.c4, rt0.c2, rt0.c1, rt0.c3, v0.c0 HAVING (NOT (((((AVG(rt0.c1)) IS TRUE))%(CASE rt0.c1  WHEN rt0.c3 THEN rt0.c4 ELSE v0.c1 END)))) UNION ALL SELECT rt0.c4, rt0.c2, rt0.c1, rt0.c3, v0.c0 FROM rt0 LEFT OUTER JOIN v0 ON (NOT ((v0.c1 IN ('w+.*Gcv!')))) GROUP BY rt0.c4, rt0.c2, rt0.c1, rt0.c3, v0.c0 HAVING ((((((AVG(rt0.c1)) IS TRUE))%(CASE rt0.c1  WHEN rt0.c3 THEN rt0.c4 ELSE v0.c1 END))) ISNULL);
SELECT rt0.c4, rt0.c2, rt0.c1, rt0.c3, v0.c0 FROM rt0 LEFT OUTER JOIN v0 ON (NOT ((v0.c1 IN ('w+.*Gcv!')))) GROUP BY rt0.c4, rt0.c2, rt0.c1, rt0.c3, v0.c0;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (CASE ((rt0.c2) BETWEEN (x'') AND (rt0.c0))  WHEN CASE rt0.c4  WHEN rt0.c0 THEN rt0.c3 END THEN CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c0 END WHEN ((rt0.c1)<<(rt0.c2)) THEN rt0.c2 COLLATE NOCASE WHEN rt0.c4 COLLATE BINARY THEN ((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)) END) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (CASE ((rt0.c2) BETWEEN (x'') AND (rt0.c0))  WHEN CASE rt0.c4  WHEN rt0.c0 THEN rt0.c3 END THEN CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c0 END WHEN ((rt0.c1)<<(rt0.c2)) THEN rt0.c2 COLLATE NOCASE WHEN rt0.c4 COLLATE BINARY THEN ((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)) END))) UNION ALL SELECT * FROM rt0 WHERE (((CASE ((rt0.c2) BETWEEN (x'') AND (rt0.c0))  WHEN CASE rt0.c4  WHEN rt0.c0 THEN rt0.c3 END THEN CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c0 END WHEN ((rt0.c1)<<(rt0.c2)) THEN rt0.c2 COLLATE NOCASE WHEN rt0.c4 COLLATE BINARY THEN ((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)) END) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (((((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c3))) NOTNULL)) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (((((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c3))) NOTNULL)))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((((((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c3))) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT ALL v0.c0 FROM rt1, v0, rt0 GROUP BY v0.c0;
SELECT v0.c0 FROM rt1, v0, rt0 WHERE (((NULL) NOT BETWEEN (((rt1.c4) NOT BETWEEN (v0.c1) AND (x'4526'))) AND (CASE WHEN 0.665149429703865 THEN v0.c1 ELSE rt0.c3 END))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM rt1, v0, rt0 WHERE ((NOT (((NULL) NOT BETWEEN (((rt1.c4) NOT BETWEEN (v0.c1) AND (x'4526'))) AND (CASE WHEN 0.665149429703865 THEN v0.c1 ELSE rt0.c3 END))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM rt1, v0, rt0 WHERE (((((NULL) NOT BETWEEN (((rt1.c4) NOT BETWEEN (v0.c1) AND (x'4526'))) AND (CASE WHEN 0.665149429703865 THEN v0.c1 ELSE rt0.c3 END))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM rt1, v0, rt0 GROUP BY v0.c0;
SELECT ALL v0.c0, v0.c2, rt1.c3, rt1.c4, rt1.c2, rt1.c0 FROM v0 CROSS JOIN rt1 ON (((((v0.c0 IN (v0.c2, v0.c0)))OR((((rt1.c2))<((v0.c1))))))AND(((v0.c1)*(rt1.c4)))) GROUP BY v0.c0, v0.c2, rt1.c3, rt1.c4, rt1.c2, rt1.c0;
SELECT v0.c0, v0.c2, rt1.c3, rt1.c4, rt1.c2, rt1.c0 FROM v0 CROSS JOIN rt1 ON (((((v0.c0 IN (v0.c2, v0.c0)))OR((((rt1.c2))<((v0.c1))))))AND(((v0.c1)*(rt1.c4)))) GROUP BY v0.c0, v0.c2, rt1.c3, rt1.c4, rt1.c2, rt1.c0 HAVING SUM(MIN(MIN(MAX(TOTAL(MIN(COUNT(*))))))) UNION ALL SELECT v0.c0, v0.c2, rt1.c3, rt1.c4, rt1.c2, rt1.c0 FROM v0 CROSS JOIN rt1 ON (((((v0.c0 IN (v0.c2, v0.c0)))OR((((rt1.c2))<((v0.c1))))))AND(((v0.c1)*(rt1.c4)))) GROUP BY v0.c0, v0.c2, rt1.c3, rt1.c4, rt1.c2, rt1.c0 HAVING (NOT (SUM(MIN(MIN(MAX(TOTAL(MIN(COUNT(*))))))))) UNION ALL SELECT ALL v0.c0, v0.c2, rt1.c3, rt1.c4, rt1.c2, rt1.c0 FROM v0 CROSS JOIN rt1 ON (((((v0.c0 IN (v0.c2, v0.c0)))OR((((rt1.c2))<((v0.c1))))))AND(((v0.c1)*(rt1.c4)))) GROUP BY v0.c0, v0.c2, rt1.c3, rt1.c4, rt1.c2, rt1.c0 HAVING ((SUM(MIN(MIN(MAX(TOTAL(MIN(COUNT(*)))))))) ISNULL);
SELECT ALL rt1.c3, rt0.c0, v0.c2, rt0.c4, rt0.c2 FROM rt0, v0, rt1;
SELECT rt1.c3, rt0.c0, v0.c2, rt0.c4, rt0.c2 FROM rt0, v0, rt1 WHERE (CAST(((rt0.c2)AND(v0.c0)) AS TEXT)) UNION ALL SELECT rt1.c3, rt0.c0, v0.c2, rt0.c4, rt0.c2 FROM rt0, v0, rt1 WHERE ((NOT (CAST(((rt0.c2)AND(v0.c0)) AS TEXT)))) UNION ALL SELECT rt1.c3, rt0.c0, v0.c2, rt0.c4, rt0.c2 FROM rt0, v0, rt1 WHERE (((CAST(((rt0.c2)AND(v0.c0)) AS TEXT)) ISNULL));
SELECT ALL rt1.c3, rt0.c0, v0.c2, rt0.c4, rt0.c2 FROM rt0, v0, rt1;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (((((rt1.c4) ISNULL))=(((((NULL)OR(rt1.c0)))OR(rt1.c2))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (((((rt1.c4) ISNULL))=(((((NULL)OR(rt1.c0)))OR(rt1.c2))))))) UNION SELECT DISTINCT * FROM rt1 WHERE (((((((rt1.c4) ISNULL))==(((((NULL)OR(rt1.c0)))OR(rt1.c2))))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL rt0.c4, rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c4, rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c4)))) BETWEEN (((rt0.c4)|(rt0.c4))) AND (((rt0.c1)<<(rt0.c1))))) GROUP BY rt0.c4, rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c4, rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c4)))) BETWEEN (((rt0.c4)|(rt0.c4))) AND (((rt0.c1)<<(rt0.c1))))))) GROUP BY rt0.c4, rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c4, rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c4)))) BETWEEN (((rt0.c4)|(rt0.c4))) AND (((rt0.c1)<<(rt0.c1))))) ISNULL)) GROUP BY rt0.c4, rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c4, rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c2, rt0.c1;
SELECT ALL v0.c1, rt1.c4, rt1.c2, rt0.c2, rt0.c4, v0.c0, rt0.c0 FROM v0, rt0, rt1 GROUP BY v0.c1, rt1.c4, rt1.c2, rt0.c2, rt0.c4, v0.c0, rt0.c0;
SELECT ALL v0.c1, rt1.c4, rt1.c2, rt0.c2, rt0.c4, v0.c0, rt0.c0 FROM v0, rt0, rt1 GROUP BY v0.c1, rt1.c4, rt1.c2, rt0.c2, rt0.c4, v0.c0, rt0.c0 HAVING (((AVG(MAX(rt0.c2)))) NOT BETWEEN ((SUM(SUM(COUNT(*))))) AND ((rt1.c3 COLLATE BINARY))) UNION ALL SELECT ALL v0.c1, rt1.c4, rt1.c2, rt0.c2, rt0.c4, v0.c0, rt0.c0 FROM v0, rt0, rt1 GROUP BY v0.c1, rt1.c4, rt1.c2, rt0.c2, rt0.c4, v0.c0, rt0.c0 HAVING (NOT ((((AVG(MAX(rt0.c2)))) NOT BETWEEN ((SUM(SUM(COUNT(*))))) AND ((rt1.c3 COLLATE BINARY))))) UNION ALL SELECT ALL v0.c1, rt1.c4, rt1.c2, rt0.c2, rt0.c4, v0.c0, rt0.c0 FROM v0, rt0, rt1 GROUP BY v0.c1, rt1.c4, rt1.c2, rt0.c2, rt0.c4, v0.c0, rt0.c0 HAVING (((((AVG(MAX(rt0.c2)))) NOT BETWEEN ((SUM(SUM(COUNT(*))))) AND ((rt1.c3 COLLATE BINARY)))) ISNULL);
SELECT ALL rt1.c0 FROM rt1;
SELECT rt1.c0 FROM rt1 WHERE (CASE WHEN rt1.c3 COLLATE BINARY THEN (rt1.c0 IN ()) ELSE ((rt1.c0) BETWEEN ('') AND (x'')) END) UNION ALL SELECT ALL rt1.c0 FROM rt1 WHERE ((NOT (CASE WHEN rt1.c3 COLLATE BINARY THEN (rt1.c0 IN ()) ELSE ((rt1.c0) BETWEEN ('') AND (x'')) END))) UNION ALL SELECT rt1.c0 FROM rt1 WHERE (((CASE WHEN rt1.c3 COLLATE BINARY THEN (rt1.c0 IN ()) ELSE ((rt1.c0) BETWEEN ('') AND (x'')) END) ISNULL));
SELECT ALL rt1.c0 FROM rt1;
SELECT DISTINCT rt0.c0, rt0.c4, rt0.c3, v0.c1 FROM v0 NATURAL JOIN rt0;
SELECT DISTINCT rt0.c0, rt0.c4, rt0.c3, v0.c1 FROM v0 NATURAL JOIN rt0 WHERE ((((((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((v0.c0))))<=(((x'') IS TRUE)))) UNION SELECT DISTINCT rt0.c0, rt0.c4, rt0.c3, v0.c1 FROM v0 NATURAL JOIN rt0 WHERE ((NOT ((((((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((v0.c0))))<=(((x'') IS TRUE)))))) UNION SELECT DISTINCT rt0.c0, rt0.c4, rt0.c3, v0.c1 FROM v0 NATURAL JOIN rt0 WHERE ((((((((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((v0.c0))))<=(((x'') IS TRUE)))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c4, rt0.c3, v0.c1 FROM v0 NATURAL JOIN rt0;
SELECT v0.c1 FROM rt0, v0, rt1 GROUP BY v0.c1;
SELECT ALL v0.c1 FROM rt0, v0, rt1 WHERE (TRIM(DISTINCT ((rt1.c0) NOTNULL), CAST(rt1.c1 AS NUMERIC))) GROUP BY v0.c1 UNION SELECT ALL v0.c1 FROM rt0, v0, rt1 WHERE ((NOT (TRIM(DISTINCT ((rt1.c0) NOTNULL), CAST(rt1.c1 AS NUMERIC))))) GROUP BY v0.c1 UNION SELECT v0.c1 FROM rt0, v0, rt1 WHERE (((TRIM(DISTINCT ((rt1.c0) NOTNULL), CAST(rt1.c1 AS NUMERIC))) ISNULL)) GROUP BY v0.c1;
SELECT v0.c1 FROM rt0, v0, rt1 GROUP BY v0.c1;
SELECT v0.c2 FROM rt1 LEFT OUTER JOIN rt0 ON (((rt0.c1 IN (rt1.c2))) BETWEEN (((rt0.c3) IS TRUE)) AND (((rt0.c0)AND(rt0.c4)))) CROSS JOIN v0 ON v0.c0 GROUP BY v0.c2;
SELECT v0.c2 FROM rt1 LEFT OUTER JOIN rt0 ON (((rt0.c1 IN (rt1.c2))) BETWEEN (((rt0.c3) IS TRUE)) AND (((rt0.c0)AND(rt0.c4)))) CROSS JOIN v0 ON v0.c0 GROUP BY v0.c2 HAVING TRIM(DISTINCT (+ (COUNT(rt0.c3))), SUM(MAX(rt1.c2))) UNION ALL SELECT ALL v0.c2 FROM rt1 LEFT OUTER JOIN rt0 ON (((rt0.c1 IN (rt1.c2))) BETWEEN (((rt0.c3) IS TRUE)) AND (((rt0.c0)AND(rt0.c4)))) CROSS JOIN v0 ON v0.c0 GROUP BY v0.c2 HAVING (NOT (TRIM(DISTINCT (+ (COUNT(rt0.c3))), SUM(MAX(rt1.c2))))) UNION ALL SELECT v0.c2 FROM rt1 LEFT OUTER JOIN rt0 ON (((rt0.c1 IN (rt1.c2))) BETWEEN (((rt0.c3) IS TRUE)) AND (((rt0.c0)AND(rt0.c4)))) CROSS JOIN v0 ON v0.c0 GROUP BY v0.c2 HAVING ((TRIM(DISTINCT (+ (COUNT(rt0.c3))), SUM(MAX(rt1.c2)))) ISNULL);
SELECT v0.c1, v0.c0 FROM v0;
SELECT v0.c1, v0.c0 FROM v0 WHERE ((((v0.c1 IN (v0.c1))) IS FALSE)) UNION ALL SELECT ALL v0.c1, v0.c0 FROM v0 WHERE ((NOT ((((v0.c1 IN (v0.c1))) IS FALSE)))) UNION ALL SELECT v0.c1, v0.c0 FROM v0 WHERE ((((((v0.c1 IN (v0.c1))) IS FALSE)) ISNULL));
SELECT v0.c1, v0.c0 FROM v0;
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN rt1 ON ((v0.c0 COLLATE NOCASE)GLOB(rt0.c4)) CROSS JOIN rt0 ON ((((rt0.c2)&(x'')))/(CASE rt1.c2  WHEN rt1.c1 THEN rt0.c4 ELSE v0.c0 END));
SELECT rt0.c3, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1;
SELECT rt0.c3, rt0.c2, rt0.c1 FROM rt0 WHERE ((((- (rt0.c3))) NOTNULL)) GROUP BY rt0.c3, rt0.c2, rt0.c1 UNION SELECT rt0.c3, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((((- (rt0.c3))) NOTNULL)))) GROUP BY rt0.c3, rt0.c2, rt0.c1 UNION SELECT rt0.c3, rt0.c2, rt0.c1 FROM rt0 WHERE ((((((- (rt0.c3))) NOTNULL)) ISNULL)) GROUP BY rt0.c3, rt0.c2, rt0.c1;
SELECT rt0.c3, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1;
SELECT ALL rt1.c1, rt0.c3, rt1.c3, v0.c2, rt1.c2, rt1.c0, rt1.c4, rt0.c1, v0.c1, rt0.c0, rt0.c2, v0.c0 FROM v0, rt0, rt1 GROUP BY rt1.c1, rt0.c3, rt1.c3, v0.c2, rt1.c2, rt1.c0, rt1.c4, rt0.c1, v0.c1, rt0.c0, rt0.c2, v0.c0;
SELECT rt1.c1, rt0.c3, rt1.c3, v0.c2, rt1.c2, rt1.c0, rt1.c4, rt0.c1, v0.c1, rt0.c0, rt0.c2, v0.c0 FROM v0, rt0, rt1 GROUP BY rt1.c1, rt0.c3, rt1.c3, v0.c2, rt1.c2, rt1.c0, rt1.c4, rt0.c1, v0.c1, rt0.c0, rt0.c2, v0.c0 HAVING SUM(AVG(rt0.c1)) UNION ALL SELECT rt1.c1, rt0.c3, rt1.c3, v0.c2, rt1.c2, rt1.c0, rt1.c4, rt0.c1, v0.c1, rt0.c0, rt0.c2, v0.c0 FROM v0, rt0, rt1 GROUP BY rt1.c1, rt0.c3, rt1.c3, v0.c2, rt1.c2, rt1.c0, rt1.c4, rt0.c1, v0.c1, rt0.c0, rt0.c2, v0.c0 HAVING (NOT (SUM(AVG(rt0.c1)))) UNION ALL SELECT ALL rt1.c1, rt0.c3, rt1.c3, v0.c2, rt1.c2, rt1.c0, rt1.c4, rt0.c1, v0.c1, rt0.c0, rt0.c2, v0.c0 FROM v0, rt0, rt1 GROUP BY rt1.c1, rt0.c3, rt1.c3, v0.c2, rt1.c2, rt1.c0, rt1.c4, rt0.c1, v0.c1, rt0.c0, rt0.c2, v0.c0 HAVING ((SUM(AVG(rt0.c1))) ISNULL);
SELECT * FROM rt0, rt1;
SELECT * FROM rt0, rt1 WHERE (((((((((rt0.c3)OR(x'')))OR(rt1.c2)))AND(rt0.c2)))AND(rt0.c4)) COLLATE NOCASE) UNION ALL SELECT ALL * FROM rt0, rt1 WHERE ((NOT (((((((((rt0.c3)OR(x'')))OR(rt1.c2)))AND(rt0.c2)))AND(rt0.c4)) COLLATE NOCASE))) UNION ALL SELECT * FROM rt0, rt1 WHERE (((((((((((rt0.c3)OR(x'')))OR(rt1.c2)))AND(rt0.c2)))AND(rt0.c4)) COLLATE NOCASE) ISNULL));
SELECT * FROM rt0, rt1;
SELECT DISTINCT * FROM rt0, v0, rt1;
SELECT DISTINCT * FROM rt0, v0, rt1 WHERE (((TIME(rt1.c2, 1238278051, rt1.c4)) BETWEEN (((((rt1.c2)OR(rt0.c2)))AND(rt0.c1))) AND (v0.c1))) UNION SELECT DISTINCT * FROM rt0, v0, rt1 WHERE ((NOT (((TIME(rt1.c2, 1238278051, rt1.c4)) BETWEEN (((((rt1.c2)OR(rt0.c2)))AND(rt0.c1))) AND (v0.c1))))) UNION SELECT DISTINCT * FROM rt0, v0, rt1 WHERE (((((TIME(rt1.c2, 1238278051, rt1.c4)) BETWEEN (((((rt1.c2)OR(rt0.c2)))AND(rt0.c1))) AND (v0.c1))) ISNULL));
SELECT DISTINCT * FROM rt0, v0, rt1;
SELECT ALL rt0.c3, rt1.c1, rt0.c4, rt1.c2 FROM rt1, rt0 GROUP BY rt0.c3, rt1.c1, rt0.c4, rt1.c2;
SELECT rt0.c3, rt1.c1, rt0.c4, rt1.c2 FROM rt1, rt0 WHERE (((0.0941649964060356)<<(CAST(rt0.c3 AS BLOB)))) GROUP BY rt0.c3, rt1.c1, rt0.c4, rt1.c2 UNION SELECT ALL rt0.c3, rt1.c1, rt0.c4, rt1.c2 FROM rt1, rt0 WHERE ((NOT (((0.0941649964060356)<<(CAST(rt0.c3 AS BLOB)))))) GROUP BY rt0.c3, rt1.c1, rt0.c4, rt1.c2 UNION SELECT rt0.c3, rt1.c1, rt0.c4, rt1.c2 FROM rt1, rt0 WHERE (((((0.0941649964060356)<<(CAST(rt0.c3 AS BLOB)))) ISNULL)) GROUP BY rt0.c3, rt1.c1, rt0.c4, rt1.c2;
SELECT ALL rt0.c3, rt1.c1, rt0.c4, rt1.c2 FROM rt1, rt0 GROUP BY rt0.c3, rt1.c1, rt0.c4, rt1.c2;
SELECT rt1.c1, rt0.c1, v0.c0, v0.c1 FROM rt0, rt1, v0 GROUP BY rt1.c1, rt0.c1, v0.c0, v0.c1;
SELECT ALL rt1.c1, rt0.c1, v0.c0, v0.c1 FROM rt0, rt1, v0 GROUP BY rt1.c1, rt0.c1, v0.c0, v0.c1 HAVING ((((((((rt0.c1)AND(((((SUM(MIN(NULL)))OR(GROUP_CONCAT(rt1.c2))))AND(COUNT(*))))))OR(COUNT(*))))AND(212001443)))AND(((rt0.c0)OR(v0.c1)))) UNION ALL SELECT ALL rt1.c1, rt0.c1, v0.c0, v0.c1 FROM rt0, rt1, v0 GROUP BY rt1.c1, rt0.c1, v0.c0, v0.c1 HAVING (NOT (((((((((rt0.c1)AND(((((SUM(MIN(NULL)))OR(GROUP_CONCAT(rt1.c2))))AND(COUNT(*))))))OR(COUNT(*))))AND(212001443)))AND(((rt0.c0)OR(v0.c1)))))) UNION ALL SELECT rt1.c1, rt0.c1, v0.c0, v0.c1 FROM rt0, rt1, v0 GROUP BY rt1.c1, rt0.c1, v0.c0, v0.c1 HAVING ((((((((((rt0.c1)AND(((((SUM(MIN(NULL)))OR(GROUP_CONCAT(rt1.c2))))AND(COUNT(*))))))OR(COUNT(*))))AND(212001443)))AND(((rt0.c0)OR(v0.c1))))) ISNULL);
SELECT ALL rt1.c3, rt1.c2, rt1.c0 FROM rt1;
SELECT ALL rt1.c3, rt1.c2, rt1.c0 FROM rt1 WHERE (((((rt1.c4) NOTNULL)) ISNULL)) UNION ALL SELECT rt1.c3, rt1.c2, rt1.c0 FROM rt1 WHERE ((NOT (((((rt1.c4) NOTNULL)) ISNULL)))) UNION ALL SELECT ALL rt1.c3, rt1.c2, rt1.c0 FROM rt1 WHERE (((((((rt1.c4) NOTNULL)) ISNULL)) ISNULL));
SELECT ALL rt1.c3, rt1.c2, rt1.c0 FROM rt1;
SELECT DISTINCT * FROM rt0, rt1;
SELECT DISTINCT * FROM rt0, rt1 WHERE ((((CAST(0.4625615680322217 AS NUMERIC), ((rt0.c0)GLOB(rt1.c3)), ((rt0.c0) NOT BETWEEN (rt0.c3) AND (x'f619')), CASE WHEN rt1.c0 THEN rt0.c0 ELSE rt1.c0 END, ((rt0.c3) NOT BETWEEN (rt1.c1) AND (x'8c12'))))<>((CAST(rt0.c0 AS REAL), (rt1.c1 IN ()), (((rt1.c2)) NOT BETWEEN ((rt0.c4)) AND ((rt1.c0))), UNICODE(rt0.c4), ((rt1.c4)<=(rt0.c2)))))) UNION SELECT DISTINCT * FROM rt0, rt1 WHERE ((NOT ((((CAST(0.4625615680322217 AS NUMERIC), ((rt0.c0)GLOB(rt1.c3)), ((rt0.c0) NOT BETWEEN (rt0.c3) AND (x'f619')), CASE WHEN rt1.c0 THEN rt0.c0 ELSE rt1.c0 END, ((rt0.c3) NOT BETWEEN (rt1.c1) AND (x'8c12'))))<>((CAST(rt0.c0 AS REAL), (rt1.c1 IN ()), (((rt1.c2)) NOT BETWEEN ((rt0.c4)) AND ((rt1.c0))), UNICODE(rt0.c4), ((rt1.c4)<=(rt0.c2)))))))) UNION SELECT DISTINCT * FROM rt0, rt1 WHERE ((((((CAST(0.4625615680322217 AS NUMERIC), ((rt0.c0)GLOB(rt1.c3)), ((rt0.c0) NOT BETWEEN (rt0.c3) AND (x'f619')), CASE WHEN rt1.c0 THEN rt0.c0 ELSE rt1.c0 END, ((rt0.c3) NOT BETWEEN (rt1.c1) AND (x'8c12'))))!=((CAST(rt0.c0 AS REAL), (rt1.c1 IN ()), (((rt1.c2)) NOT BETWEEN ((rt0.c4)) AND ((rt1.c0))), UNICODE(rt0.c4), ((rt1.c4)<=(rt0.c2)))))) ISNULL));
SELECT DISTINCT * FROM rt0, rt1;
SELECT rt0.c1, v0.c2, rt0.c3, rt0.c0, rt0.c4, v0.c1, rt1.c1 FROM rt0, rt1, v0 GROUP BY rt0.c1, v0.c2, rt0.c3, rt0.c0, rt0.c4, v0.c1, rt1.c1;
SELECT ALL rt0.c1, v0.c2, rt0.c3, rt0.c0, rt0.c4, v0.c1, rt1.c1 FROM rt0, rt1, v0 WHERE ((~ ('2115320920'))) GROUP BY rt0.c1, v0.c2, rt0.c3, rt0.c0, rt0.c4, v0.c1, rt1.c1 UNION SELECT ALL rt0.c1, v0.c2, rt0.c3, rt0.c0, rt0.c4, v0.c1, rt1.c1 FROM rt0, rt1, v0 WHERE ((NOT ((~ ('2115320920'))))) GROUP BY rt0.c1, v0.c2, rt0.c3, rt0.c0, rt0.c4, v0.c1, rt1.c1 UNION SELECT rt0.c1, v0.c2, rt0.c3, rt0.c0, rt0.c4, v0.c1, rt1.c1 FROM rt0, rt1, v0 WHERE ((((~ ('2115320920'))) ISNULL)) GROUP BY rt0.c1, v0.c2, rt0.c3, rt0.c0, rt0.c4, v0.c1, rt1.c1;
SELECT rt0.c1, v0.c2, rt0.c3, rt0.c0, rt0.c4, v0.c1, rt1.c1 FROM rt0, rt1, v0 GROUP BY rt0.c1, v0.c2, rt0.c3, rt0.c0, rt0.c4, v0.c1, rt1.c1;
SELECT ALL rt1.c4, rt1.c3, v0.c2, v0.c0, rt1.c0 FROM rt1, v0 GROUP BY rt1.c4, rt1.c3, v0.c2, v0.c0, rt1.c0;
SELECT ALL rt1.c4, rt1.c3, v0.c2, v0.c0, rt1.c0 FROM rt1, v0 GROUP BY rt1.c4, rt1.c3, v0.c2, v0.c0, rt1.c0 HAVING (+ (TOTAL(COUNT(*)))) UNION ALL SELECT ALL rt1.c4, rt1.c3, v0.c2, v0.c0, rt1.c0 FROM rt1, v0 GROUP BY rt1.c4, rt1.c3, v0.c2, v0.c0, rt1.c0 HAVING (NOT ((+ (TOTAL(COUNT(*)))))) UNION ALL SELECT ALL rt1.c4, rt1.c3, v0.c2, v0.c0, rt1.c0 FROM rt1, v0 GROUP BY rt1.c4, rt1.c3, v0.c2, v0.c0, rt1.c0 HAVING (((+ (TOTAL(COUNT(*))))) ISNULL);
SELECT ALL rt1.c3 FROM rt0, rt1;
SELECT rt1.c3 FROM rt0, rt1 WHERE (((((+ (rt1.c1))))>=((CASE WHEN rt0.c1 THEN rt1.c1 ELSE rt0.c0 END)))) UNION ALL SELECT rt1.c3 FROM rt0, rt1 WHERE ((NOT (((((+ (rt1.c1))))>=((CASE WHEN rt0.c1 THEN rt1.c1 ELSE rt0.c0 END)))))) UNION ALL SELECT ALL rt1.c3 FROM rt0, rt1 WHERE (((((((+ (rt1.c1))))>=((CASE WHEN rt0.c1 THEN rt1.c1 ELSE rt0.c0 END)))) ISNULL));
SELECT ALL rt1.c3 FROM rt0, rt1;
SELECT DISTINCT * FROM rt1, rt0;
SELECT DISTINCT * FROM rt1, rt0 WHERE (((CAST(rt1.c1 AS BLOB))LIKE(((rt1.c2) IS TRUE)))) UNION SELECT DISTINCT * FROM rt1, rt0 WHERE ((NOT (((CAST(rt1.c1 AS BLOB))LIKE(((rt1.c2) IS TRUE)))))) UNION SELECT DISTINCT * FROM rt1, rt0 WHERE (((((CAST(rt1.c1 AS BLOB))LIKE(((rt1.c2) IS TRUE)))) ISNULL));
SELECT DISTINCT * FROM rt1, rt0;
SELECT rt0.c1, rt0.c3, rt1.c2, rt0.c2, v0.c0, rt1.c0 FROM rt0, v0, rt1 GROUP BY rt0.c1, rt0.c3, rt1.c2, rt0.c2, v0.c0, rt1.c0;
SELECT ALL rt0.c1, rt0.c3, rt1.c2, rt0.c2, v0.c0, rt1.c0 FROM rt0, v0, rt1 WHERE (CASE WHEN ((rt0.c4)<(rt0.c4)) THEN CAST(rt0.c1 AS INTEGER) END) GROUP BY rt0.c1, rt0.c3, rt1.c2, rt0.c2, v0.c0, rt1.c0 UNION SELECT ALL rt0.c1, rt0.c3, rt1.c2, rt0.c2, v0.c0, rt1.c0 FROM rt0, v0, rt1 WHERE ((NOT (CASE WHEN ((rt0.c4)<(rt0.c4)) THEN CAST(rt0.c1 AS INTEGER) END))) GROUP BY rt0.c1, rt0.c3, rt1.c2, rt0.c2, v0.c0, rt1.c0 UNION SELECT rt0.c1, rt0.c3, rt1.c2, rt0.c2, v0.c0, rt1.c0 FROM rt0, v0, rt1 WHERE (((CASE WHEN ((rt0.c4)<(rt0.c4)) THEN CAST(rt0.c1 AS INTEGER) END) ISNULL)) GROUP BY rt0.c1, rt0.c3, rt1.c2, rt0.c2, v0.c0, rt1.c0;
SELECT rt0.c1, rt0.c3, rt1.c2, rt0.c2, v0.c0, rt1.c0 FROM rt0, v0, rt1 GROUP BY rt0.c1, rt0.c3, rt1.c2, rt0.c2, v0.c0, rt1.c0;
SELECT rt1.c0 FROM rt0, v0, rt1 GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM rt0, v0, rt1 GROUP BY rt1.c0 HAVING (((((MIN(MAX(rt0.c0))))>((rt1.c1))))|((COUNT(rt0.c0) IN (rt0.c3)))) UNION ALL SELECT ALL rt1.c0 FROM rt0, v0, rt1 GROUP BY rt1.c0 HAVING (NOT ((((((MIN(MAX(rt0.c0))))>((rt1.c1))))|((COUNT(rt0.c0) IN (rt0.c3)))))) UNION ALL SELECT ALL rt1.c0 FROM rt0, v0, rt1 GROUP BY rt1.c0 HAVING (((((((MIN(MAX(rt0.c0))))>((rt1.c1))))|((COUNT(rt0.c0) IN (rt0.c3))))) ISNULL);
SELECT TOTAL('-1449673451' COLLATE NOCASE) FROM rt1;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c0, rt0.c3, rt0.c1)) BETWEEN ((rt0.c3, rt0.c3, rt0.c2)) AND ((rt0.c0, rt0.c0, rt0.c1))))OR(((((((((rt0.c3)OR(rt0.c2)))AND(rt0.c4)))AND(rt0.c3)))AND(rt0.c0))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((((rt0.c0, rt0.c3, rt0.c1)) BETWEEN ((rt0.c3, rt0.c3, rt0.c2)) AND ((rt0.c0, rt0.c0, rt0.c1))))OR(((((((((rt0.c3)OR(rt0.c2)))AND(rt0.c4)))AND(rt0.c3)))AND(rt0.c0))))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((((((rt0.c0, rt0.c3, rt0.c1)) BETWEEN ((rt0.c3, rt0.c3, rt0.c2)) AND ((rt0.c0, rt0.c0, rt0.c1))))OR(((((((((rt0.c3)OR(rt0.c2)))AND(rt0.c4)))AND(rt0.c3)))AND(rt0.c0))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1, v0.c1, v0.c2, rt0.c3, rt0.c4 FROM v0, rt0;
SELECT DISTINCT rt0.c2, rt0.c1, v0.c1, v0.c2, rt0.c3, rt0.c4 FROM v0, rt0 WHERE ((((rt0.c3 IN ()))<=(((((rt0.c2)OR(v0.c2)))AND(rt0.c1))))) UNION SELECT DISTINCT rt0.c2, rt0.c1, v0.c1, v0.c2, rt0.c3, rt0.c4 FROM v0, rt0 WHERE ((NOT ((((rt0.c3 IN ()))<=(((((rt0.c2)OR(v0.c2)))AND(rt0.c1))))))) UNION SELECT DISTINCT rt0.c2, rt0.c1, v0.c1, v0.c2, rt0.c3, rt0.c4 FROM v0, rt0 WHERE ((((((rt0.c3 IN ()))<=(((((rt0.c2)OR(v0.c2)))AND(rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, v0.c1, v0.c2, rt0.c3, rt0.c4 FROM v0, rt0;
SELECT ALL v0.c2, v0.c1, rt1.c2, v0.c0, rt1.c0, rt1.c3 FROM rt1, v0 GROUP BY v0.c2, v0.c1, rt1.c2, v0.c0, rt1.c0, rt1.c3;
SELECT v0.c2, v0.c1, rt1.c2, v0.c0, rt1.c0, rt1.c3 FROM rt1, v0 WHERE (NULL COLLATE NOCASE) GROUP BY v0.c2, v0.c1, rt1.c2, v0.c0, rt1.c0, rt1.c3 UNION SELECT ALL v0.c2, v0.c1, rt1.c2, v0.c0, rt1.c0, rt1.c3 FROM rt1, v0 WHERE ((NOT (NULL COLLATE NOCASE))) GROUP BY v0.c2, v0.c1, rt1.c2, v0.c0, rt1.c0, rt1.c3 UNION SELECT v0.c2, v0.c1, rt1.c2, v0.c0, rt1.c0, rt1.c3 FROM rt1, v0 WHERE (((NULL COLLATE NOCASE) ISNULL)) GROUP BY v0.c2, v0.c1, rt1.c2, v0.c0, rt1.c0, rt1.c3;
SELECT ALL v0.c2, v0.c1, rt1.c2, v0.c0, rt1.c0, rt1.c3 FROM rt1, v0 GROUP BY v0.c2, v0.c1, rt1.c2, v0.c0, rt1.c0, rt1.c3;
SELECT rt1.c3, rt1.c1, rt0.c1, rt0.c2, rt1.c0, rt0.c3 FROM rt0, rt1 GROUP BY rt1.c3, rt1.c1, rt0.c1, rt0.c2, rt1.c0, rt0.c3;
SELECT ALL rt1.c3, rt1.c1, rt0.c1, rt0.c2, rt1.c0, rt0.c3 FROM rt0, rt1 GROUP BY rt1.c3, rt1.c1, rt0.c1, rt0.c2, rt1.c0, rt0.c3 HAVING TOTAL(TOTAL(rt0.c4)) UNION ALL SELECT ALL rt1.c3, rt1.c1, rt0.c1, rt0.c2, rt1.c0, rt0.c3 FROM rt0, rt1 GROUP BY rt1.c3, rt1.c1, rt0.c1, rt0.c2, rt1.c0, rt0.c3 HAVING (NOT (TOTAL(TOTAL(rt0.c4)))) UNION ALL SELECT ALL rt1.c3, rt1.c1, rt0.c1, rt0.c2, rt1.c0, rt0.c3 FROM rt0, rt1 GROUP BY rt1.c3, rt1.c1, rt0.c1, rt0.c2, rt1.c0, rt0.c3 HAVING ((TOTAL(TOTAL(rt0.c4))) ISNULL);
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE ((((v0.c1) IS FALSE) IN ())) UNION ALL SELECT * FROM v0 WHERE ((NOT ((((v0.c1) IS FALSE) IN ())))) UNION ALL SELECT ALL * FROM v0 WHERE ((((((v0.c1) IS FALSE) IN ())) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (CASE '0.7842475593463736'  WHEN (((rt1.c0))>=((rt1.c4))) THEN '-1325175834' END) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (CASE '0.7842475593463736'  WHEN (((rt1.c0))>=((rt1.c4))) THEN '-1325175834' END))) UNION SELECT DISTINCT * FROM rt1 WHERE (((CASE '0.7842475593463736'  WHEN (((rt1.c0))>=((rt1.c4))) THEN '-1325175834' END) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL v0.c0, rt1.c3, rt1.c0, rt1.c4, rt0.c2 FROM v0, rt1 NATURAL JOIN rt0 GROUP BY v0.c0, rt1.c3, rt1.c0, rt1.c4, rt0.c2;
SELECT v0.c0, rt1.c3, rt1.c0, rt1.c4, rt0.c2 FROM v0, rt1 NATURAL JOIN rt0 WHERE ((+ ((~ (rt0.c3))))) GROUP BY v0.c0, rt1.c3, rt1.c0, rt1.c4, rt0.c2 UNION SELECT ALL v0.c0, rt1.c3, rt1.c0, rt1.c4, rt0.c2 FROM v0, rt1 NATURAL JOIN rt0 WHERE ((NOT ((+ ((~ (rt0.c3))))))) GROUP BY v0.c0, rt1.c3, rt1.c0, rt1.c4, rt0.c2 UNION SELECT ALL v0.c0, rt1.c3, rt1.c0, rt1.c4, rt0.c2 FROM v0, rt1 NATURAL JOIN rt0 WHERE ((((+ ((~ (rt0.c3))))) ISNULL)) GROUP BY v0.c0, rt1.c3, rt1.c0, rt1.c4, rt0.c2;
SELECT ALL v0.c0, rt1.c3, rt1.c0, rt1.c4, rt0.c2 FROM v0, rt1 NATURAL JOIN rt0 GROUP BY v0.c0, rt1.c3, rt1.c0, rt1.c4, rt0.c2;
SELECT rt0.c4 FROM rt1, rt0 GROUP BY rt0.c4;
SELECT ALL rt0.c4 FROM rt1, rt0 GROUP BY rt0.c4 HAVING ((((((SUM(rt0.c4)) ISNULL))AND(((COUNT(MAX(rt0.c1))) NOT BETWEEN (rt1.c1) AND (MAX(rt1.c1))))))AND(TOTAL(COUNT(rt0.c3)))) UNION ALL SELECT rt0.c4 FROM rt1, rt0 GROUP BY rt0.c4 HAVING (NOT (((((((SUM(rt0.c4)) ISNULL))AND(((COUNT(MAX(rt0.c1))) NOT BETWEEN (rt1.c1) AND (MAX(rt1.c1))))))AND(TOTAL(COUNT(rt0.c3)))))) UNION ALL SELECT rt0.c4 FROM rt1, rt0 GROUP BY rt0.c4 HAVING ((((((((SUM(rt0.c4)) ISNULL))AND(((COUNT(MAX(rt0.c1))) NOT BETWEEN (rt1.c1) AND (MAX(rt1.c1))))))AND(TOTAL(COUNT(rt0.c3))))) ISNULL);
SELECT * FROM rt0, v0;
SELECT * FROM rt0, v0 WHERE (rt0.c2) UNION ALL SELECT * FROM rt0, v0 WHERE ((NOT (rt0.c2))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE (((rt0.c2) ISNULL));
SELECT * FROM rt0, v0;
SELECT DISTINCT * FROM v0, rt1, rt0;
SELECT DISTINCT * FROM v0, rt1, rt0 WHERE (NULL) UNION SELECT DISTINCT * FROM v0, rt1, rt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM v0, rt1, rt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM v0, rt1, rt0;
SELECT rt0.c2, rt0.c4 FROM v0, rt0 GROUP BY rt0.c2, rt0.c4;
SELECT ALL rt0.c2, rt0.c4 FROM v0, rt0 WHERE (((+ (rt0.c3)) IN ())) GROUP BY rt0.c2, rt0.c4 UNION SELECT rt0.c2, rt0.c4 FROM v0, rt0 WHERE ((NOT (((+ (rt0.c3)) IN ())))) GROUP BY rt0.c2, rt0.c4 UNION SELECT ALL rt0.c2, rt0.c4 FROM v0, rt0 WHERE (((((+ (rt0.c3)) IN ())) ISNULL)) GROUP BY rt0.c2, rt0.c4;
SELECT rt0.c2, rt0.c4 FROM v0, rt0 GROUP BY rt0.c2, rt0.c4;
SELECT ALL rt0.c0, rt1.c3, rt1.c1, rt0.c2, rt1.c4, rt0.c3, rt1.c0, rt1.c2, rt0.c4 FROM rt1, rt0 GROUP BY rt0.c0, rt1.c3, rt1.c1, rt0.c2, rt1.c4, rt0.c3, rt1.c0, rt1.c2, rt0.c4;
SELECT ALL rt0.c0, rt1.c3, rt1.c1, rt0.c2, rt1.c4, rt0.c3, rt1.c0, rt1.c2, rt0.c4 FROM rt1, rt0 GROUP BY rt0.c0, rt1.c3, rt1.c1, rt0.c2, rt1.c4, rt0.c3, rt1.c0, rt1.c2, rt0.c4 HAVING MIN(((rt1.c3) NOT BETWEEN (AVG(rt0.c0)) AND (rt0.c0))) UNION ALL SELECT ALL rt0.c0, rt1.c3, rt1.c1, rt0.c2, rt1.c4, rt0.c3, rt1.c0, rt1.c2, rt0.c4 FROM rt1, rt0 GROUP BY rt0.c0, rt1.c3, rt1.c1, rt0.c2, rt1.c4, rt0.c3, rt1.c0, rt1.c2, rt0.c4 HAVING (NOT (MIN(((rt1.c3) NOT BETWEEN (AVG(rt0.c0)) AND (rt0.c0))))) UNION ALL SELECT rt0.c0, rt1.c3, rt1.c1, rt0.c2, rt1.c4, rt0.c3, rt1.c0, rt1.c2, rt0.c4 FROM rt1, rt0 GROUP BY rt0.c0, rt1.c3, rt1.c1, rt0.c2, rt1.c4, rt0.c3, rt1.c0, rt1.c2, rt0.c4 HAVING ((MIN(((rt1.c3) NOT BETWEEN (AVG(rt0.c0)) AND (rt0.c0)))) ISNULL);
SELECT ALL rt1.c3, rt0.c3, rt0.c1, rt1.c4, rt0.c2 FROM v0, rt0, rt1;
SELECT rt1.c3, rt0.c3, rt0.c1, rt1.c4, rt0.c2 FROM v0, rt0, rt1 WHERE (TRIM(DISTINCT rt0.c2, CASE v0.c1  WHEN x'' THEN rt1.c0 ELSE v0.c1 END)) UNION ALL SELECT rt1.c3, rt0.c3, rt0.c1, rt1.c4, rt0.c2 FROM v0, rt0, rt1 WHERE ((NOT (TRIM(DISTINCT rt0.c2, CASE v0.c1  WHEN x'' THEN rt1.c0 ELSE v0.c1 END)))) UNION ALL SELECT rt1.c3, rt0.c3, rt0.c1, rt1.c4, rt0.c2 FROM v0, rt0, rt1 WHERE (((TRIM(DISTINCT rt0.c2, CASE v0.c1  WHEN x'' THEN rt1.c0 ELSE v0.c1 END)) ISNULL));
SELECT ALL rt1.c3, rt0.c3, rt0.c1, rt1.c4, rt0.c2 FROM v0, rt0, rt1;
SELECT DISTINCT v0.c1, v0.c2, rt1.c0, rt1.c1, rt1.c4, rt1.c3, v0.c0, rt1.c2 FROM v0, rt1;
SELECT DISTINCT v0.c1, v0.c2, rt1.c0, rt1.c1, rt1.c4, rt1.c3, v0.c0, rt1.c2 FROM v0, rt1 WHERE (LAST_INSERT_ROWID()) UNION SELECT DISTINCT v0.c1, v0.c2, rt1.c0, rt1.c1, rt1.c4, rt1.c3, v0.c0, rt1.c2 FROM v0, rt1 WHERE ((NOT (LAST_INSERT_ROWID()))) UNION SELECT DISTINCT v0.c1, v0.c2, rt1.c0, rt1.c1, rt1.c4, rt1.c3, v0.c0, rt1.c2 FROM v0, rt1 WHERE (((LAST_INSERT_ROWID()) ISNULL));
SELECT DISTINCT v0.c1, v0.c2, rt1.c0, rt1.c1, rt1.c4, rt1.c3, v0.c0, rt1.c2 FROM v0, rt1;
SELECT rt0.c3, rt1.c4, rt0.c0, v0.c1, rt0.c4, rt1.c3, rt0.c1, rt1.c0, rt0.c2, v0.c0, rt1.c2 FROM v0, rt1, rt0 GROUP BY rt0.c3, rt1.c4, rt0.c0, v0.c1, rt0.c4, rt1.c3, rt0.c1, rt1.c0, rt0.c2, v0.c0, rt1.c2;
SELECT rt0.c3, rt1.c4, rt0.c0, v0.c1, rt0.c4, rt1.c3, rt0.c1, rt1.c0, rt0.c2, v0.c0, rt1.c2 FROM v0, rt1, rt0 WHERE ((~ (((rt1.c1)AND(NULL))))) GROUP BY rt0.c3, rt1.c4, rt0.c0, v0.c1, rt0.c4, rt1.c3, rt0.c1, rt1.c0, rt0.c2, v0.c0, rt1.c2 UNION SELECT ALL rt0.c3, rt1.c4, rt0.c0, v0.c1, rt0.c4, rt1.c3, rt0.c1, rt1.c0, rt0.c2, v0.c0, rt1.c2 FROM v0, rt1, rt0 WHERE ((NOT ((~ (((rt1.c1)AND(NULL))))))) GROUP BY rt0.c3, rt1.c4, rt0.c0, v0.c1, rt0.c4, rt1.c3, rt0.c1, rt1.c0, rt0.c2, v0.c0, rt1.c2 UNION SELECT rt0.c3, rt1.c4, rt0.c0, v0.c1, rt0.c4, rt1.c3, rt0.c1, rt1.c0, rt0.c2, v0.c0, rt1.c2 FROM v0, rt1, rt0 WHERE ((((~ (((rt1.c1)AND(NULL))))) ISNULL)) GROUP BY rt0.c3, rt1.c4, rt0.c0, v0.c1, rt0.c4, rt1.c3, rt0.c1, rt1.c0, rt0.c2, v0.c0, rt1.c2;
SELECT rt0.c3, rt1.c4, rt0.c0, v0.c1, rt0.c4, rt1.c3, rt0.c1, rt1.c0, rt0.c2, v0.c0, rt1.c2 FROM v0, rt1, rt0 GROUP BY rt0.c3, rt1.c4, rt0.c0, v0.c1, rt0.c4, rt1.c3, rt0.c1, rt1.c0, rt0.c2, v0.c0, rt1.c2;
SELECT rt0.c3, rt0.c2, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c4;
SELECT rt0.c3, rt0.c2, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c4 HAVING ((((SUM(COUNT(*)))*(MAX(COUNT(rt0.c4))))) ISNULL) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c4 HAVING (NOT (((((SUM(COUNT(*)))*(MAX(COUNT(rt0.c4))))) ISNULL))) UNION ALL SELECT rt0.c3, rt0.c2, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c4 HAVING ((((((SUM(COUNT(*)))*(MAX(COUNT(rt0.c4))))) ISNULL)) ISNULL);
SELECT rt1.c1, rt1.c0, rt1.c3 FROM rt1;
SELECT rt1.c1, rt1.c0, rt1.c3 FROM rt1 WHERE (rt1.c3) UNION ALL SELECT rt1.c1, rt1.c0, rt1.c3 FROM rt1 WHERE ((NOT (rt1.c3))) UNION ALL SELECT rt1.c1, rt1.c0, rt1.c3 FROM rt1 WHERE (((rt1.c3) ISNULL));
SELECT rt1.c1, rt1.c0, rt1.c3 FROM rt1;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE ('845560445' COLLATE BINARY) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT ('845560445' COLLATE BINARY))) UNION SELECT DISTINCT * FROM rt1 WHERE ((('845560445' COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1;
SELECT v0.c0, v0.c2, v0.c1 FROM v0 WHERE (((((v0.c2) NOT BETWEEN (1622958714) AND (v0.c1))) NOT BETWEEN (NULL) AND (CAST(v0.c1 AS TEXT)))) GROUP BY v0.c0, v0.c2, v0.c1 UNION SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 WHERE ((NOT (((((v0.c2) NOT BETWEEN (1622958714) AND (v0.c1))) NOT BETWEEN (NULL) AND (CAST(v0.c1 AS TEXT)))))) GROUP BY v0.c0, v0.c2, v0.c1 UNION SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 WHERE (((((((v0.c2) NOT BETWEEN (1622958714) AND (v0.c1))) NOT BETWEEN (NULL) AND (CAST(v0.c1 AS TEXT)))) ISNULL)) GROUP BY v0.c0, v0.c2, v0.c1;
SELECT v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1;
SELECT ALL rt0.c1, v0.c2, v0.c0, rt0.c0, rt1.c1, rt1.c2, v0.c1, rt1.c0, rt0.c3, rt0.c2, rt1.c4, rt0.c4 FROM rt0, rt1 RIGHT OUTER JOIN v0 ON (((v0.c2 IN ())) NOT NULL) GROUP BY rt0.c1, v0.c2, v0.c0, rt0.c0, rt1.c1, rt1.c2, v0.c1, rt1.c0, rt0.c3, rt0.c2, rt1.c4, rt0.c4;
SELECT rt0.c1, v0.c2, v0.c0, rt0.c0, rt1.c1, rt1.c2, v0.c1, rt1.c0, rt0.c3, rt0.c2, rt1.c4, rt0.c4 FROM rt0, rt1 RIGHT OUTER JOIN v0 ON (((v0.c2 IN ())) NOT NULL) GROUP BY rt0.c1, v0.c2, v0.c0, rt0.c0, rt1.c1, rt1.c2, v0.c1, rt1.c0, rt0.c3, rt0.c2, rt1.c4, rt0.c4 HAVING CAST(COUNT(rt0.c3) AS INTEGER) UNION ALL SELECT rt0.c1, v0.c2, v0.c0, rt0.c0, rt1.c1, rt1.c2, v0.c1, rt1.c0, rt0.c3, rt0.c2, rt1.c4, rt0.c4 FROM rt0, rt1 RIGHT OUTER JOIN v0 ON (((v0.c2 IN ())) NOT NULL) GROUP BY rt0.c1, v0.c2, v0.c0, rt0.c0, rt1.c1, rt1.c2, v0.c1, rt1.c0, rt0.c3, rt0.c2, rt1.c4, rt0.c4 HAVING (NOT (CAST(COUNT(rt0.c3) AS INTEGER))) UNION ALL SELECT rt0.c1, v0.c2, v0.c0, rt0.c0, rt1.c1, rt1.c2, v0.c1, rt1.c0, rt0.c3, rt0.c2, rt1.c4, rt0.c4 FROM rt0, rt1 RIGHT OUTER JOIN v0 ON (((v0.c2 IN ())) NOT NULL) GROUP BY rt0.c1, v0.c2, v0.c0, rt0.c0, rt1.c1, rt1.c2, v0.c1, rt1.c0, rt0.c3, rt0.c2, rt1.c4, rt0.c4 HAVING ((CAST(COUNT(rt0.c3) AS INTEGER)) ISNULL);
SELECT ALL rt0.c1, v0.c2, v0.c0, rt0.c0, rt1.c1, rt1.c2, v0.c1, rt1.c0, rt0.c3, rt0.c2, rt1.c4, rt0.c4 FROM rt0, rt1 RIGHT OUTER JOIN v0 ON (((v0.c2 IN ())) NOT NULL) GROUP BY rt0.c1, v0.c2, v0.c0, rt0.c0, rt1.c1, rt1.c2, v0.c1, rt1.c0, rt0.c3, rt0.c2, rt1.c4, rt0.c4;
SELECT rt0.c1, v0.c2, v0.c0, rt0.c0, rt1.c1, rt1.c2, v0.c1, rt1.c0, rt0.c3, rt0.c2, rt1.c4, rt0.c4 FROM rt0, rt1 RIGHT OUTER JOIN v0 ON (((v0.c2 IN ())) NOT NULL) GROUP BY rt0.c1, v0.c2, v0.c0, rt0.c0, rt1.c1, rt1.c2, v0.c1, rt1.c0, rt0.c3, rt0.c2, rt1.c4, rt0.c4 HAVING CAST(COUNT(rt0.c3) AS INTEGER) UNION ALL SELECT rt0.c1, v0.c2, v0.c0, rt0.c0, rt1.c1, rt1.c2, v0.c1, rt1.c0, rt0.c3, rt0.c2, rt1.c4, rt0.c4 FROM rt0, rt1 RIGHT OUTER JOIN v0 ON (((v0.c2 IN ())) NOT NULL) GROUP BY rt0.c1, v0.c2, v0.c0, rt0.c0, rt1.c1, rt1.c2, v0.c1, rt1.c0, rt0.c3, rt0.c2, rt1.c4, rt0.c4 HAVING (NOT (CAST(COUNT(rt0.c3) AS INTEGER))) UNION ALL SELECT rt0.c1, v0.c2, v0.c0, rt0.c0, rt1.c1, rt1.c2, v0.c1, rt1.c0, rt0.c3, rt0.c2, rt1.c4, rt0.c4 FROM rt0, rt1 RIGHT OUTER JOIN v0 ON (((v0.c2 IN ())) NOT NULL) GROUP BY rt0.c1, v0.c2, v0.c0, rt0.c0, rt1.c1, rt1.c2, v0.c1, rt1.c0, rt0.c3, rt0.c2, rt1.c4, rt0.c4 HAVING ((CAST(COUNT(rt0.c3) AS INTEGER)) ISNULL);
SELECT ALL rt0.c1, v0.c2, v0.c0, rt0.c0, rt1.c1, rt1.c2, v0.c1, rt1.c0, rt0.c3, rt0.c2, rt1.c4, rt0.c4 FROM rt0, rt1 RIGHT OUTER JOIN v0 ON (((v0.c2 IN ())) NOT NULL) GROUP BY rt0.c1, v0.c2, v0.c0, rt0.c0, rt1.c1, rt1.c2, v0.c1, rt1.c0, rt0.c3, rt0.c2, rt1.c4, rt0.c4;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((CASE rt0.c3  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END IN ())) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((CASE rt0.c3  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END IN ())))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((CASE rt0.c3  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END IN ())) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((((((((((rt0.c4)AND(rt0.c4)))OR(rt0.c3)))AND(CASE '-1652522527'  WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c3 END)))OR((((rt0.c1, rt0.c1, rt0.c1))>=((rt0.c1, rt0.c3, rt0.c1))))))AND(rt0.c1)))AND(rt0.c1))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((((((((((rt0.c4)AND(rt0.c4)))OR(rt0.c3)))AND(CASE '-1652522527'  WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c3 END)))OR((((rt0.c1, rt0.c1, rt0.c1))>=((rt0.c1, rt0.c3, rt0.c1))))))AND(rt0.c1)))AND(rt0.c1))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((((((((((rt0.c4)AND(rt0.c4)))OR(rt0.c3)))AND(CASE '-1652522527'  WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c3 END)))OR((((rt0.c1, rt0.c1, rt0.c1))>=((rt0.c1, rt0.c3, rt0.c1))))))AND(rt0.c1)))AND(rt0.c1))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c4 FROM rt0 GROUP BY rt0.c4;
SELECT rt0.c4 FROM rt0 WHERE (json_insert(rt0.c3 COLLATE BINARY, ((((rt0.c4)AND(rt0.c4)))OR(rt0.c2)), (((rt0.c4))>((rt0.c3))), ((rt0.c3) NOTNULL), ((rt0.c2) NOT BETWEEN (0.7008873756704092) AND (rt0.c2)))) GROUP BY rt0.c4 UNION SELECT ALL rt0.c4 FROM rt0 WHERE ((NOT (json_insert(rt0.c3 COLLATE BINARY, ((((rt0.c4)AND(rt0.c4)))OR(rt0.c2)), (((rt0.c4))>((rt0.c3))), ((rt0.c3) NOTNULL), ((rt0.c2) NOT BETWEEN (0.7008873756704092) AND (rt0.c2)))))) GROUP BY rt0.c4 UNION SELECT ALL rt0.c4 FROM rt0 WHERE (((json_insert(rt0.c3 COLLATE BINARY, ((((rt0.c4)AND(rt0.c4)))OR(rt0.c2)), (((rt0.c4))>((rt0.c3))), ((rt0.c3) NOTNULL), ((rt0.c2) NOT BETWEEN (0.7008873756704092) AND (rt0.c2)))) ISNULL)) GROUP BY rt0.c4;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 NOT INDEXED GROUP BY v0.c0 HAVING SUM(((COUNT(v0.c0))IS(v0.c2))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (SUM(((COUNT(v0.c0))IS(v0.c2))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((SUM(((COUNT(v0.c0))IS(v0.c2)))) ISNULL);
SELECT rt0.c2, rt0.c1, v0.c2, rt0.c4, rt0.c0, v0.c1, v0.c0, rt0.c3 FROM v0 LEFT OUTER JOIN rt0 ON (NOT (rt0.c2 COLLATE BINARY));
SELECT rt0.c2, rt0.c1, v0.c2, rt0.c4, rt0.c0, v0.c1, v0.c0, rt0.c3 FROM v0 LEFT OUTER JOIN rt0 ON (NOT (rt0.c2 COLLATE BINARY)) WHERE (((rt0.c1) BETWEEN (rt0.c4) AND (CAST(v0.c0 AS NUMERIC)))) UNION ALL SELECT rt0.c2, rt0.c1, v0.c2, rt0.c4, rt0.c0, v0.c1, v0.c0, rt0.c3 FROM v0 LEFT OUTER JOIN rt0 ON (NOT (rt0.c2 COLLATE BINARY)) WHERE ((NOT (((rt0.c1) BETWEEN (rt0.c4) AND (CAST(v0.c0 AS NUMERIC)))))) UNION ALL SELECT rt0.c2, rt0.c1, v0.c2, rt0.c4, rt0.c0, v0.c1, v0.c0, rt0.c3 FROM v0 LEFT OUTER JOIN rt0 ON (NOT (rt0.c2 COLLATE BINARY)) WHERE (((((rt0.c1) BETWEEN (rt0.c4) AND (CAST(v0.c0 AS NUMERIC)))) ISNULL));
SELECT rt0.c2, rt0.c1, v0.c2, rt0.c4, rt0.c0, v0.c1, v0.c0, rt0.c3 FROM v0 LEFT OUTER JOIN rt0 ON (NOT (rt0.c2 COLLATE BINARY));
SELECT DISTINCT * FROM rt1, v0;
SELECT DISTINCT * FROM rt1, v0 WHERE (CASE v0.c2 COLLATE BINARY  WHEN ((((v0.c0)OR(rt1.c1)))AND(rt1.c0)) THEN rt1.c0 COLLATE NOCASE END) UNION SELECT DISTINCT * FROM rt1, v0 WHERE ((NOT (CASE v0.c2 COLLATE BINARY  WHEN ((((v0.c0)OR(rt1.c1)))AND(rt1.c0)) THEN rt1.c0 COLLATE NOCASE END))) UNION SELECT DISTINCT * FROM rt1, v0 WHERE (((CASE v0.c2 COLLATE BINARY  WHEN ((((v0.c0)OR(rt1.c1)))AND(rt1.c0)) THEN rt1.c0 COLLATE NOCASE END) ISNULL));
SELECT DISTINCT * FROM rt1, v0;
SELECT ALL rt1.c3 FROM rt0, rt1 GROUP BY rt1.c3;
SELECT rt1.c3 FROM rt0, rt1 WHERE (((((((((',3}䎕\nj곉A')OR(((((((((rt0.c2)OR(rt0.c1)))AND(rt1.c1)))AND('1825465410')))AND(rt1.c3)))))AND(((x'') BETWEEN (rt0.c2) AND (rt0.c1)))))AND(rt0.c0)))AND((((rt1.c1))<=((rt0.c2)))))) GROUP BY rt1.c3 UNION SELECT ALL rt1.c3 FROM rt0, rt1 WHERE ((NOT (((((((((',3}䎕\nj곉A')OR(((((((((rt0.c2)OR(rt0.c1)))AND(rt1.c1)))AND('1825465410')))AND(rt1.c3)))))AND(((x'') BETWEEN (rt0.c2) AND (rt0.c1)))))AND(rt0.c0)))AND((((rt1.c1))<=((rt0.c2)))))))) GROUP BY rt1.c3 UNION SELECT ALL rt1.c3 FROM rt0, rt1 WHERE (((((((((((',3}䎕\nj곉A')OR(((((((((rt0.c2)OR(rt0.c1)))AND(rt1.c1)))AND('1825465410')))AND(rt1.c3)))))AND(((x'') BETWEEN (rt0.c2) AND (rt0.c1)))))AND(rt0.c0)))AND((((rt1.c1))<=((rt0.c2)))))) ISNULL)) GROUP BY rt1.c3;
SELECT ALL rt1.c3 FROM rt0, rt1 GROUP BY rt1.c3;
SELECT ALL rt0.c1, v0.c1, rt0.c3, v0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c1, v0.c1, rt0.c3, v0.c0, rt0.c2;
SELECT ALL rt0.c1, v0.c1, rt0.c3, v0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c1, v0.c1, rt0.c3, v0.c0, rt0.c2 HAVING TOTAL(COUNT(TOTAL(COUNT(MIN(rt0.c4))))) UNION ALL SELECT ALL rt0.c1, v0.c1, rt0.c3, v0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c1, v0.c1, rt0.c3, v0.c0, rt0.c2 HAVING (NOT (TOTAL(COUNT(TOTAL(COUNT(MIN(rt0.c4))))))) UNION ALL SELECT rt0.c1, v0.c1, rt0.c3, v0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c1, v0.c1, rt0.c3, v0.c0, rt0.c2 HAVING ((TOTAL(COUNT(TOTAL(COUNT(MIN(rt0.c4)))))) ISNULL);
SELECT rt0.c4, v0.c2 FROM v0, rt0, rt1;
SELECT rt0.c4, v0.c2 FROM v0, rt0, rt1 WHERE ((rt1.c4 IN ())) UNION ALL SELECT rt0.c4, v0.c2 FROM v0, rt0, rt1 WHERE ((NOT ((rt1.c4 IN ())))) UNION ALL SELECT rt0.c4, v0.c2 FROM v0, rt0, rt1 WHERE ((((rt1.c4 IN ())) ISNULL));
SELECT rt0.c4, v0.c2 FROM v0, rt0, rt1;
SELECT DISTINCT rt0.c3, rt0.c2, rt1.c2 FROM rt0, v0, rt1;
SELECT DISTINCT rt0.c3, rt0.c2, rt1.c2 FROM rt0, v0, rt1 WHERE ((((NULL IN ())) NOT BETWEEN (((rt1.c2)+(rt1.c1))) AND ((rt1.c1 IN ())))) UNION SELECT DISTINCT rt0.c3, rt0.c2, rt1.c2 FROM rt0, v0, rt1 WHERE ((NOT ((((NULL IN ())) NOT BETWEEN (((rt1.c2)+(rt1.c1))) AND ((rt1.c1 IN ())))))) UNION SELECT DISTINCT rt0.c3, rt0.c2, rt1.c2 FROM rt0, v0, rt1 WHERE ((((((NULL IN ())) NOT BETWEEN (((rt1.c2)+(rt1.c1))) AND ((rt1.c1 IN ())))) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c2, rt1.c2 FROM rt0, v0, rt1;
SELECT rt1.c0, rt1.c4, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c4, rt1.c2;
SELECT rt1.c0, rt1.c4, rt1.c2 FROM rt1 WHERE (((NOT (rt1.c3)) IN ())) GROUP BY rt1.c0, rt1.c4, rt1.c2 UNION SELECT ALL rt1.c0, rt1.c4, rt1.c2 FROM rt1 WHERE ((NOT (((NOT (rt1.c3)) IN ())))) GROUP BY rt1.c0, rt1.c4, rt1.c2 UNION SELECT ALL rt1.c0, rt1.c4, rt1.c2 FROM rt1 WHERE (((((NOT (rt1.c3)) IN ())) ISNULL)) GROUP BY rt1.c0, rt1.c4, rt1.c2;
SELECT rt1.c0, rt1.c4, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c4, rt1.c2;
SELECT ALL rt0.c1, rt1.c0, rt0.c4, rt0.c2, rt1.c4, rt1.c1, rt1.c3 FROM rt1, rt0 GROUP BY rt0.c1, rt1.c0, rt0.c4, rt0.c2, rt1.c4, rt1.c1, rt1.c3;
SELECT ALL rt0.c1, rt1.c0, rt0.c4, rt0.c2, rt1.c4, rt1.c1, rt1.c3 FROM rt1, rt0 GROUP BY rt0.c1, rt1.c0, rt0.c4, rt0.c2, rt1.c4, rt1.c1, rt1.c3 HAVING COUNT(COUNT(rt0.c1)) UNION ALL SELECT ALL rt0.c1, rt1.c0, rt0.c4, rt0.c2, rt1.c4, rt1.c1, rt1.c3 FROM rt1, rt0 GROUP BY rt0.c1, rt1.c0, rt0.c4, rt0.c2, rt1.c4, rt1.c1, rt1.c3 HAVING (NOT (COUNT(COUNT(rt0.c1)))) UNION ALL SELECT rt0.c1, rt1.c0, rt0.c4, rt0.c2, rt1.c4, rt1.c1, rt1.c3 FROM rt1, rt0 GROUP BY rt0.c1, rt1.c0, rt0.c4, rt0.c2, rt1.c4, rt1.c1, rt1.c3 HAVING ((COUNT(COUNT(rt0.c1))) ISNULL);
SELECT ALL * FROM rt1, rt0 NATURAL JOIN v0;
SELECT ALL * FROM rt1, rt0 NATURAL JOIN v0 WHERE (v0.c0) UNION ALL SELECT ALL * FROM rt1, rt0 NATURAL JOIN v0 WHERE ((NOT (v0.c0))) UNION ALL SELECT ALL * FROM rt1, rt0 NATURAL JOIN v0 WHERE (((v0.c0) ISNULL));
SELECT ALL * FROM rt1, rt0 NATURAL JOIN v0;
SELECT DISTINCT * FROM rt1, rt0;
SELECT DISTINCT * FROM rt1, rt0 WHERE (((((((rt0.c3)*(rt0.c1)))OR(rt0.c2 COLLATE NOCASE)))AND((rt1.c3 IN ())))) UNION SELECT DISTINCT * FROM rt1, rt0 WHERE ((NOT (((((((rt0.c3)*(rt0.c1)))OR(rt0.c2 COLLATE NOCASE)))AND((rt1.c3 IN ())))))) UNION SELECT DISTINCT * FROM rt1, rt0 WHERE (((((((((rt0.c3)*(rt0.c1)))OR(rt0.c2 COLLATE NOCASE)))AND((rt1.c3 IN ())))) ISNULL));
SELECT DISTINCT * FROM rt1, rt0;
SELECT rt0.c1, v0.c2, rt0.c2, rt0.c3 FROM rt0, v0 GROUP BY rt0.c1, v0.c2, rt0.c2, rt0.c3;
SELECT ALL rt0.c1, v0.c2, rt0.c2, rt0.c3 FROM rt0, v0 WHERE (LTRIM(rt0.c3, CASE '6'  WHEN v0.c0 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 WHEN v0.c1 THEN rt0.c4 ELSE rt0.c2 END)) GROUP BY rt0.c1, v0.c2, rt0.c2, rt0.c3 UNION SELECT rt0.c1, v0.c2, rt0.c2, rt0.c3 FROM rt0, v0 WHERE ((NOT (LTRIM(rt0.c3, CASE '6'  WHEN v0.c0 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 WHEN v0.c1 THEN rt0.c4 ELSE rt0.c2 END)))) GROUP BY rt0.c1, v0.c2, rt0.c2, rt0.c3 UNION SELECT ALL rt0.c1, v0.c2, rt0.c2, rt0.c3 FROM rt0, v0 WHERE (((LTRIM(rt0.c3, CASE '6'  WHEN v0.c0 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 WHEN v0.c1 THEN rt0.c4 ELSE rt0.c2 END)) ISNULL)) GROUP BY rt0.c1, v0.c2, rt0.c2, rt0.c3;
SELECT rt0.c1, v0.c2, rt0.c2, rt0.c3 FROM rt0, v0 GROUP BY rt0.c1, v0.c2, rt0.c2, rt0.c3;
SELECT ALL rt0.c1 FROM rt0, rt1, v0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0, rt1, v0 GROUP BY rt0.c1 HAVING GROUP_CONCAT(rt0.c1) UNION ALL SELECT rt0.c1 FROM rt0, rt1, v0 GROUP BY rt0.c1 HAVING (NOT (GROUP_CONCAT(rt0.c1))) UNION ALL SELECT ALL rt0.c1 FROM rt0, rt1, v0 GROUP BY rt0.c1 HAVING ((GROUP_CONCAT(rt0.c1)) ISNULL);
SELECT ALL rt0.c1 FROM rt0, rt1, v0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0, rt1, v0 GROUP BY rt0.c1 HAVING GROUP_CONCAT(rt0.c1) UNION ALL SELECT rt0.c1 FROM rt0, rt1, v0 GROUP BY rt0.c1 HAVING (NOT (GROUP_CONCAT(rt0.c1))) UNION ALL SELECT ALL rt0.c1 FROM rt0, rt1, v0 GROUP BY rt0.c1 HAVING ((GROUP_CONCAT(rt0.c1)) ISNULL);
SELECT ALL rt0.c1 FROM rt0, rt1, v0 GROUP BY rt0.c1;
SELECT ALL v0.c0, rt1.c4, rt1.c2, v0.c1, rt1.c0, rt1.c3 FROM v0 INNER JOIN rt1 ON CAST(((v0.c2)&(rt1.c0)) AS REAL);
SELECT ALL v0.c0, rt1.c4, rt1.c2, v0.c1, rt1.c0, rt1.c3 FROM v0 INNER JOIN rt1 ON CAST(((v0.c2)&(rt1.c0)) AS REAL) WHERE (((CASE WHEN v0.c2 THEN rt1.c4 ELSE rt1.c2 END)|(((v0.c1) NOTNULL)))) UNION ALL SELECT ALL v0.c0, rt1.c4, rt1.c2, v0.c1, rt1.c0, rt1.c3 FROM v0 NOT INDEXED INNER JOIN rt1 ON CAST(((v0.c2)&(rt1.c0)) AS REAL) WHERE ((NOT (((CASE WHEN v0.c2 THEN rt1.c4 ELSE rt1.c2 END)|(((v0.c1) NOTNULL)))))) UNION ALL SELECT v0.c0, rt1.c4, rt1.c2, v0.c1, rt1.c0, rt1.c3 FROM v0 INNER JOIN rt1 ON CAST(((v0.c2)&(rt1.c0)) AS REAL) WHERE (((((CASE WHEN v0.c2 THEN rt1.c4 ELSE rt1.c2 END)|(((v0.c1) NOTNULL)))) ISNULL));
SELECT ALL v0.c0, rt1.c4, rt1.c2, v0.c1, rt1.c0, rt1.c3 FROM v0 INNER JOIN rt1 ON CAST(((v0.c2)&(rt1.c0)) AS REAL);
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((((v0.c1)AND((((v0.c2)) NOT BETWEEN ((v0.c2)) AND ((v0.c0))))))OR((- (v0.c1))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((v0.c1)AND((((v0.c2)) NOT BETWEEN ((v0.c2)) AND ((v0.c0))))))OR((- (v0.c1))))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((v0.c1)AND((((v0.c2)) NOT BETWEEN ((v0.c2)) AND ((v0.c0))))))OR((- (v0.c1))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT rt0.c1, rt0.c3, rt0.c4, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c4, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c3, rt0.c4, rt0.c2, rt0.c0 FROM rt0 WHERE (CASE ((((((((rt0.c1)OR(0.8268567563369728)))OR(rt0.c2)))AND(rt0.c3)))AND(rt0.c2))  WHEN ((rt0.c2) ISNULL) THEN CAST(rt0.c4 AS NUMERIC) WHEN ((rt0.c2) BETWEEN (NULL) AND (rt0.c0)) THEN rt0.c4 WHEN ROUND(rt0.c1, rt0.c2) THEN json_object(rt0.c2, rt0.c2, rt0.c0, rt0.c0) WHEN x'' THEN (((rt0.c0, rt0.c1, rt0.c2)) BETWEEN ((-5.78341533E8, rt0.c0, rt0.c4)) AND ((rt0.c4, rt0.c2, rt0.c2))) WHEN CAST(rt0.c2 AS INTEGER) THEN ((('877375533', rt0.c1, rt0.c3))>=((rt0.c3, rt0.c3, rt0.c1))) ELSE HEX(DISTINCT 'lK') END) GROUP BY rt0.c1, rt0.c3, rt0.c4, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c3, rt0.c4, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (CASE ((((((((rt0.c1)OR(0.8268567563369728)))OR(rt0.c2)))AND(rt0.c3)))AND(rt0.c2))  WHEN ((rt0.c2) ISNULL) THEN CAST(rt0.c4 AS NUMERIC) WHEN ((rt0.c2) BETWEEN (NULL) AND (rt0.c0)) THEN rt0.c4 WHEN ROUND(rt0.c1, rt0.c2) THEN json_object(rt0.c2, rt0.c2, rt0.c0, rt0.c0) WHEN x'' THEN (((rt0.c0, rt0.c1, rt0.c2)) BETWEEN ((-5.78341533E8, rt0.c0, rt0.c4)) AND ((rt0.c4, rt0.c2, rt0.c2))) WHEN CAST(rt0.c2 AS INTEGER) THEN ((('877375533', rt0.c1, rt0.c3))>=((rt0.c3, rt0.c3, rt0.c1))) ELSE HEX(DISTINCT 'lK') END))) GROUP BY rt0.c1, rt0.c3, rt0.c4, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c3, rt0.c4, rt0.c2, rt0.c0 FROM rt0 WHERE (((CASE ((((((((rt0.c1)OR(0.8268567563369728)))OR(rt0.c2)))AND(rt0.c3)))AND(rt0.c2))  WHEN ((rt0.c2) ISNULL) THEN CAST(rt0.c4 AS NUMERIC) WHEN ((rt0.c2) BETWEEN (NULL) AND (rt0.c0)) THEN rt0.c4 WHEN ROUND(rt0.c1, rt0.c2) THEN json_object(rt0.c2, rt0.c2, rt0.c0, rt0.c0) WHEN x'' THEN (((rt0.c0, rt0.c1, rt0.c2)) BETWEEN ((-5.78341533E8, rt0.c0, rt0.c4)) AND ((rt0.c4, rt0.c2, rt0.c2))) WHEN CAST(rt0.c2 AS INTEGER) THEN ((('877375533', rt0.c1, rt0.c3))>=((rt0.c3, rt0.c3, rt0.c1))) ELSE HEX(DISTINCT 'lK') END) ISNULL)) GROUP BY rt0.c1, rt0.c3, rt0.c4, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c3, rt0.c4, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c4, rt0.c2, rt0.c0;
SELECT rt0.c3, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1;
SELECT ALL rt0.c3, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1 HAVING load_extension(COUNT(GROUP_CONCAT(rt0.c4))) UNION ALL SELECT rt0.c3, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1 HAVING (NOT (load_extension(COUNT(GROUP_CONCAT(rt0.c4))))) UNION ALL SELECT rt0.c3, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1 HAVING ((load_extension(COUNT(GROUP_CONCAT(rt0.c4)))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (CASE WHEN rt0.c3 COLLATE RTRIM THEN 0.0965363379500731 WHEN rt0.c4 COLLATE BINARY THEN (+ (rt0.c4)) WHEN LENGTH(rt0.c2) THEN (- (rt0.c0)) END) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (CASE WHEN rt0.c3 COLLATE RTRIM THEN 0.0965363379500731 WHEN rt0.c4 COLLATE BINARY THEN (+ (rt0.c4)) WHEN LENGTH(rt0.c2) THEN (- (rt0.c0)) END))) UNION ALL SELECT * FROM rt0 WHERE (((CASE WHEN rt0.c3 COLLATE RTRIM THEN 0.0965363379500731 WHEN rt0.c4 COLLATE BINARY THEN (+ (rt0.c4)) WHEN LENGTH(rt0.c2) THEN (- (rt0.c0)) END) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt1.c3, rt1.c0 FROM rt1;
SELECT DISTINCT rt1.c3, rt1.c0 FROM rt1 WHERE (((NOT (rt1.c3)) IN ())) UNION SELECT DISTINCT rt1.c3, rt1.c0 FROM rt1 WHERE ((NOT (((NOT (rt1.c3)) IN ())))) UNION SELECT DISTINCT rt1.c3, rt1.c0 FROM rt1 WHERE (((((NOT (rt1.c3)) IN ())) ISNULL));
SELECT DISTINCT rt1.c3, rt1.c0 FROM rt1;
SELECT ALL v0.c0, rt1.c0, rt1.c2, v0.c2, rt1.c4, rt1.c3, rt1.c1, v0.c1 FROM rt1 FULL OUTER JOIN v0 ON (((v0.c1)) NOT BETWEEN (((v0.c2 IN ()))) AND ((((v0.c1)>=(rt1.c1))))) GROUP BY v0.c0, rt1.c0, rt1.c2, v0.c2, rt1.c4, rt1.c3, rt1.c1, v0.c1;
SELECT v0.c0, rt1.c0, rt1.c2, v0.c2, rt1.c4, rt1.c3, rt1.c1, v0.c1 FROM rt1 FULL OUTER JOIN v0 ON (((v0.c1)) NOT BETWEEN (((v0.c2 IN ()))) AND ((((v0.c1)>=(rt1.c1))))) WHERE (rt1.c4) GROUP BY v0.c0, rt1.c0, rt1.c2, v0.c2, rt1.c4, rt1.c3, rt1.c1, v0.c1 UNION SELECT ALL v0.c0, rt1.c0, rt1.c2, v0.c2, rt1.c4, rt1.c3, rt1.c1, v0.c1 FROM rt1 FULL OUTER JOIN v0 ON (((v0.c1)) NOT BETWEEN (((v0.c2 IN ()))) AND ((((v0.c1)>=(rt1.c1))))) WHERE ((NOT (rt1.c4))) GROUP BY v0.c0, rt1.c0, rt1.c2, v0.c2, rt1.c4, rt1.c3, rt1.c1, v0.c1 UNION SELECT v0.c0, rt1.c0, rt1.c2, v0.c2, rt1.c4, rt1.c3, rt1.c1, v0.c1 FROM rt1 FULL OUTER JOIN v0 ON (((v0.c1)) NOT BETWEEN (((v0.c2 IN ()))) AND ((((v0.c1)>=(rt1.c1))))) WHERE (((rt1.c4) ISNULL)) GROUP BY v0.c0, rt1.c0, rt1.c2, v0.c2, rt1.c4, rt1.c3, rt1.c1, v0.c1;
SELECT ALL v0.c0, rt1.c0, rt1.c2, v0.c2, rt1.c4, rt1.c3, rt1.c1, v0.c1 FROM rt1 FULL OUTER JOIN v0 ON (((v0.c1)) NOT BETWEEN (((v0.c2 IN ()))) AND ((((v0.c1)>=(rt1.c1))))) GROUP BY v0.c0, rt1.c0, rt1.c2, v0.c2, rt1.c4, rt1.c3, rt1.c1, v0.c1;
SELECT ALL v0.c1, rt1.c1, rt1.c2, rt0.c0, rt1.c3, v0.c2, rt1.c4, rt0.c2 FROM v0, rt1, rt0 GROUP BY v0.c1, rt1.c1, rt1.c2, rt0.c0, rt1.c3, v0.c2, rt1.c4, rt0.c2;
SELECT v0.c1, rt1.c1, rt1.c2, rt0.c0, rt1.c3, v0.c2, rt1.c4, rt0.c2 FROM v0, rt1, rt0 GROUP BY v0.c1, rt1.c1, rt1.c2, rt0.c0, rt1.c3, v0.c2, rt1.c4, rt0.c2 HAVING COUNT(MIN(TOTAL(COUNT(rt1.c4)))) COLLATE RTRIM UNION ALL SELECT ALL v0.c1, rt1.c1, rt1.c2, rt0.c0, rt1.c3, v0.c2, rt1.c4, rt0.c2 FROM v0, rt1, rt0 GROUP BY v0.c1, rt1.c1, rt1.c2, rt0.c0, rt1.c3, v0.c2, rt1.c4, rt0.c2 HAVING (NOT (COUNT(MIN(TOTAL(COUNT(rt1.c4)))) COLLATE RTRIM)) UNION ALL SELECT ALL v0.c1, rt1.c1, rt1.c2, rt0.c0, rt1.c3, v0.c2, rt1.c4, rt0.c2 FROM v0, rt1, rt0 GROUP BY v0.c1, rt1.c1, rt1.c2, rt0.c0, rt1.c3, v0.c2, rt1.c4, rt0.c2 HAVING ((COUNT(MIN(TOTAL(COUNT(rt1.c4)))) COLLATE RTRIM) ISNULL);
SELECT * FROM rt1;
SELECT ALL * FROM rt1 WHERE (CAST('0.6054513059832498' AS TEXT)) UNION ALL SELECT * FROM rt1 NOT INDEXED WHERE ((NOT (CAST('0.6054513059832498' AS TEXT)))) UNION ALL SELECT * FROM rt1 WHERE (((CAST('0.6054513059832498' AS TEXT)) ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT rt1.c1, rt0.c0, rt1.c2, rt0.c1 FROM rt0 LEFT OUTER JOIN rt1 ON CASE WHEN CAST(rt1.c3 AS REAL) THEN rt1.c4 COLLATE RTRIM ELSE NULL END LEFT OUTER JOIN v0 ON (NOT (((rt1.c4) NOT NULL)));
SELECT DISTINCT rt1.c1, rt0.c0, rt1.c2, rt0.c1 FROM rt0 LEFT OUTER JOIN rt1 ON CASE WHEN CAST(rt1.c3 AS REAL) THEN rt1.c4 COLLATE RTRIM ELSE NULL END LEFT OUTER JOIN v0 ON (NOT (((rt1.c4) NOT NULL))) WHERE (((((rt1.c0)LIKE(rt1.c4))) NOT NULL)) UNION SELECT DISTINCT rt1.c1, rt0.c0, rt1.c2, rt0.c1 FROM rt0 LEFT OUTER JOIN rt1 ON CASE WHEN CAST(rt1.c3 AS REAL) THEN rt1.c4 COLLATE RTRIM ELSE NULL END LEFT OUTER JOIN v0 ON (NOT (((rt1.c4) NOT NULL))) WHERE ((NOT (((((rt1.c0)LIKE(rt1.c4))) NOT NULL)))) UNION SELECT DISTINCT rt1.c1, rt0.c0, rt1.c2, rt0.c1 FROM rt0 LEFT OUTER JOIN rt1 ON CASE WHEN CAST(rt1.c3 AS REAL) THEN rt1.c4 COLLATE RTRIM ELSE NULL END LEFT OUTER JOIN v0 ON (NOT (((rt1.c4) NOT NULL))) WHERE (((((((rt1.c0)LIKE(rt1.c4))) NOT NULL)) ISNULL));
SELECT DISTINCT rt1.c1, rt0.c0, rt1.c2, rt0.c1 FROM rt0 LEFT OUTER JOIN rt1 ON CASE WHEN CAST(rt1.c3 AS REAL) THEN rt1.c4 COLLATE RTRIM ELSE NULL END LEFT OUTER JOIN v0 ON (NOT (((rt1.c4) NOT NULL)));
SELECT v0.c1, rt0.c0, v0.c0, rt0.c4, rt0.c3, rt0.c1, rt0.c2 FROM v0 LEFT OUTER JOIN rt0 ON ((x'')!=(((((((((v0.c2)OR(rt0.c4)))AND(v0.c0)))OR(v0.c2)))AND(rt0.c1)))) GROUP BY v0.c1, rt0.c0, v0.c0, rt0.c4, rt0.c3, rt0.c1, rt0.c2;
SELECT ALL v0.c1, rt0.c0, v0.c0, rt0.c4, rt0.c3, rt0.c1, rt0.c2 FROM v0 LEFT OUTER JOIN rt0 ON ((x'')!=(((((((((v0.c2)OR(rt0.c4)))AND(v0.c0)))OR(v0.c2)))AND(rt0.c1)))) WHERE ((((rt0.c0) IS TRUE) IN ())) GROUP BY v0.c1, rt0.c0, v0.c0, rt0.c4, rt0.c3, rt0.c1, rt0.c2 UNION SELECT v0.c1, rt0.c0, v0.c0, rt0.c4, rt0.c3, rt0.c1, rt0.c2 FROM v0 LEFT OUTER JOIN rt0 ON ((x'')<>(((((((((v0.c2)OR(rt0.c4)))AND(v0.c0)))OR(v0.c2)))AND(rt0.c1)))) WHERE ((NOT ((((rt0.c0) IS TRUE) IN ())))) GROUP BY v0.c1, rt0.c0, v0.c0, rt0.c4, rt0.c3, rt0.c1, rt0.c2 UNION SELECT ALL v0.c1, rt0.c0, v0.c0, rt0.c4, rt0.c3, rt0.c1, rt0.c2 FROM v0 LEFT OUTER JOIN rt0 ON ((x'')!=(((((((((v0.c2)OR(rt0.c4)))AND(v0.c0)))OR(v0.c2)))AND(rt0.c1)))) WHERE ((((((rt0.c0) IS TRUE) IN ())) ISNULL)) GROUP BY v0.c1, rt0.c0, v0.c0, rt0.c4, rt0.c3, rt0.c1, rt0.c2;
SELECT v0.c1, rt0.c0, v0.c0, rt0.c4, rt0.c3, rt0.c1, rt0.c2 FROM v0 LEFT OUTER JOIN rt0 ON ((x'')!=(((((((((v0.c2)OR(rt0.c4)))AND(v0.c0)))OR(v0.c2)))AND(rt0.c1)))) GROUP BY v0.c1, rt0.c0, v0.c0, rt0.c4, rt0.c3, rt0.c1, rt0.c2;
SELECT ALL rt1.c0, rt0.c1 FROM rt0 FULL OUTER JOIN rt1 ON ((rt1.c3 COLLATE RTRIM) BETWEEN (CASE rt0.c3  WHEN rt0.c1 THEN rt1.c2 ELSE rt0.c4 END) AND (((rt0.c2)>>(rt1.c2)))) GROUP BY rt1.c0, rt0.c1;
SELECT ALL rt1.c0, rt0.c1 FROM rt0 FULL OUTER JOIN rt1 ON ((rt1.c3 COLLATE RTRIM) BETWEEN (CASE rt0.c3  WHEN rt0.c1 THEN rt1.c2 ELSE rt0.c4 END) AND (((rt0.c2)>>(rt1.c2)))) GROUP BY rt1.c0, rt0.c1 HAVING COUNT((((COUNT(TOTAL(COUNT(*))))) BETWEEN ((rt1.c3)) AND ((0.240862369666064)))) UNION ALL SELECT ALL rt1.c0, rt0.c1 FROM rt0 FULL OUTER JOIN rt1 ON ((rt1.c3 COLLATE RTRIM) BETWEEN (CASE rt0.c3  WHEN rt0.c1 THEN rt1.c2 ELSE rt0.c4 END) AND (((rt0.c2)>>(rt1.c2)))) GROUP BY rt1.c0, rt0.c1 HAVING (NOT (COUNT((((COUNT(TOTAL(COUNT(*))))) BETWEEN ((rt1.c3)) AND ((0.240862369666064)))))) UNION ALL SELECT rt1.c0, rt0.c1 FROM rt0 FULL OUTER JOIN rt1 ON ((rt1.c3 COLLATE RTRIM) BETWEEN (CASE rt0.c3  WHEN rt0.c1 THEN rt1.c2 ELSE rt0.c4 END) AND (((rt0.c2)>>(rt1.c2)))) GROUP BY rt1.c0, rt0.c1 HAVING ((COUNT((((COUNT(TOTAL(COUNT(*))))) BETWEEN ((rt1.c3)) AND ((0.240862369666064))))) ISNULL);
SELECT ALL rt1.c0, v0.c2 FROM rt0, v0, rt1;
SELECT rt1.c0, v0.c2 FROM rt0, v0, rt1 WHERE ((rt0.c0 IN (((x'')||(rt0.c0)), CAST(rt0.c2 AS INTEGER)))) UNION ALL SELECT ALL rt1.c0, v0.c2 FROM rt0, v0, rt1 WHERE ((NOT ((rt0.c0 IN (((x'')||(rt0.c0)), CAST(rt0.c2 AS INTEGER)))))) UNION ALL SELECT rt1.c0, v0.c2 FROM rt0, v0, rt1 WHERE ((((rt0.c0 IN (((x'')||(rt0.c0)), CAST(rt0.c2 AS INTEGER)))) ISNULL));
SELECT ALL rt1.c0, v0.c2 FROM rt0, v0, rt1;
SELECT DISTINCT v0.c2, rt1.c0, rt0.c0, rt1.c1, rt0.c4 FROM v0 LEFT OUTER JOIN rt0 ON (((((v0.c1 IN ()))AND(CAST(rt1.c0 AS TEXT))))AND(CAST(rt0.c2 AS REAL))) FULL OUTER JOIN rt1 ON ((NULL)+((v0.c1 IN (rt1.c0))));
SELECT DISTINCT v0.c2, rt1.c0, rt0.c0, rt1.c1, rt0.c4 FROM v0 LEFT OUTER JOIN rt0 ON (((((v0.c1 IN ()))AND(CAST(rt1.c0 AS TEXT))))AND(CAST(rt0.c2 AS REAL))) FULL OUTER JOIN rt1 ON ((NULL)+((v0.c1 IN (rt1.c0)))) WHERE (((+ (NULL)) IN ())) UNION SELECT DISTINCT v0.c2, rt1.c0, rt0.c0, rt1.c1, rt0.c4 FROM v0 LEFT OUTER JOIN rt0 ON (((((v0.c1 IN ()))AND(CAST(rt1.c0 AS TEXT))))AND(CAST(rt0.c2 AS REAL))) FULL OUTER JOIN rt1 ON ((NULL)+((v0.c1 IN (rt1.c0)))) WHERE ((NOT (((+ (NULL)) IN ())))) UNION SELECT DISTINCT v0.c2, rt1.c0, rt0.c0, rt1.c1, rt0.c4 FROM v0 LEFT OUTER JOIN rt0 ON (((((v0.c1 IN ()))AND(CAST(rt1.c0 AS TEXT))))AND(CAST(rt0.c2 AS REAL))) FULL OUTER JOIN rt1 ON ((NULL)+((v0.c1 IN (rt1.c0)))) WHERE (((((+ (NULL)) IN ())) ISNULL));
SELECT DISTINCT v0.c2, rt1.c0, rt0.c0, rt1.c1, rt0.c4 FROM v0 LEFT OUTER JOIN rt0 ON (((((v0.c1 IN ()))AND(CAST(rt1.c0 AS TEXT))))AND(CAST(rt0.c2 AS REAL))) FULL OUTER JOIN rt1 ON ((NULL)+((v0.c1 IN (rt1.c0))));
SELECT ALL rt0.c4, rt0.c1, rt0.c3 FROM v0 NATURAL JOIN rt0 GROUP BY rt0.c4, rt0.c1, rt0.c3;
SELECT ALL rt0.c4, rt0.c1, rt0.c3 FROM v0 NATURAL JOIN rt0 WHERE (CASE v0.c0  WHEN (+ (rt0.c4)) THEN rt0.c4 COLLATE BINARY END) GROUP BY rt0.c4, rt0.c1, rt0.c3 UNION SELECT ALL rt0.c4, rt0.c1, rt0.c3 FROM v0 NATURAL JOIN rt0 WHERE ((NOT (CASE v0.c0  WHEN (+ (rt0.c4)) THEN rt0.c4 COLLATE BINARY END))) GROUP BY rt0.c4, rt0.c1, rt0.c3 UNION SELECT ALL rt0.c4, rt0.c1, rt0.c3 FROM v0 NATURAL JOIN rt0 WHERE (((CASE v0.c0  WHEN (+ (rt0.c4)) THEN rt0.c4 COLLATE BINARY END) ISNULL)) GROUP BY rt0.c4, rt0.c1, rt0.c3;
SELECT ALL rt0.c4, rt0.c1, rt0.c3 FROM v0 NATURAL JOIN rt0 GROUP BY rt0.c4, rt0.c1, rt0.c3;
SELECT rt0.c0, v0.c1, rt1.c0, rt0.c4, v0.c0, v0.c2, rt0.c3, rt1.c4, rt1.c1, rt0.c2, rt0.c1, rt1.c2 FROM v0, rt1, rt0 GROUP BY rt0.c0, v0.c1, rt1.c0, rt0.c4, v0.c0, v0.c2, rt0.c3, rt1.c4, rt1.c1, rt0.c2, rt0.c1, rt1.c2;
SELECT rt0.c0, v0.c1, rt1.c0, rt0.c4, v0.c0, v0.c2, rt0.c3, rt1.c4, rt1.c1, rt0.c2, rt0.c1, rt1.c2 FROM v0, rt1, rt0 GROUP BY rt0.c0, v0.c1, rt1.c0, rt0.c4, v0.c0, v0.c2, rt0.c3, rt1.c4, rt1.c1, rt0.c2, rt0.c1, rt1.c2 HAVING COUNT(TOTAL(rt1.c4)) UNION ALL SELECT ALL rt0.c0, v0.c1, rt1.c0, rt0.c4, v0.c0, v0.c2, rt0.c3, rt1.c4, rt1.c1, rt0.c2, rt0.c1, rt1.c2 FROM v0 NOT INDEXED, rt1, rt0 GROUP BY rt0.c0, v0.c1, rt1.c0, rt0.c4, v0.c0, v0.c2, rt0.c3, rt1.c4, rt1.c1, rt0.c2, rt0.c1, rt1.c2 HAVING (NOT (COUNT(TOTAL(rt1.c4)))) UNION ALL SELECT rt0.c0, v0.c1, rt1.c0, rt0.c4, v0.c0, v0.c2, rt0.c3, rt1.c4, rt1.c1, rt0.c2, rt0.c1, rt1.c2 FROM v0, rt1, rt0 GROUP BY rt0.c0, v0.c1, rt1.c0, rt0.c4, v0.c0, v0.c2, rt0.c3, rt1.c4, rt1.c1, rt0.c2, rt0.c1, rt1.c2 HAVING ((COUNT(TOTAL(rt1.c4))) ISNULL);
SELECT * FROM v0 CROSS JOIN rt1 ON (- (CASE WHEN rt0.c1 THEN rt0.c4 WHEN rt1.c4 THEN rt1.c0 WHEN rt0.c0 THEN v0.c2 ELSE '1222888371' END)) CROSS JOIN rt0 ON TYPEOF(DISTINCT x'1b23cf8e' COLLATE BINARY);
SELECT * FROM v0 CROSS JOIN rt1 ON (- (CASE WHEN rt0.c1 THEN rt0.c4 WHEN rt1.c4 THEN rt1.c0 WHEN rt0.c0 THEN v0.c2 ELSE '1222888371' END)) CROSS JOIN rt0 ON TYPEOF(DISTINCT x'1b23cf8e' COLLATE BINARY) WHERE ((((rt0.c3) BETWEEN (v0.c1) AND (rt0.c3)) IN ())) UNION ALL SELECT ALL * FROM v0 CROSS JOIN rt1 ON (- (CASE WHEN rt0.c1 THEN rt0.c4 WHEN rt1.c4 THEN rt1.c0 WHEN rt0.c0 THEN v0.c2 ELSE '1222888371' END)) CROSS JOIN rt0 ON TYPEOF(DISTINCT x'1b23cf8e' COLLATE BINARY) WHERE ((NOT ((((rt0.c3) BETWEEN (v0.c1) AND (rt0.c3)) IN ())))) UNION ALL SELECT * FROM v0 CROSS JOIN rt1 ON (- (CASE WHEN rt0.c1 THEN rt0.c4 WHEN rt1.c4 THEN rt1.c0 WHEN rt0.c0 THEN v0.c2 ELSE '1222888371' END)) CROSS JOIN rt0 ON TYPEOF(DISTINCT x'1b23cf8e' COLLATE BINARY) WHERE ((((((rt0.c3) BETWEEN (v0.c1) AND (rt0.c3)) IN ())) ISNULL));
SELECT * FROM v0 CROSS JOIN rt1 ON (- (CASE WHEN rt0.c1 THEN rt0.c4 WHEN rt1.c4 THEN rt1.c0 WHEN rt0.c0 THEN v0.c2 ELSE '1222888371' END)) CROSS JOIN rt0 ON TYPEOF(DISTINCT x'1b23cf8e' COLLATE BINARY);
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE ((((NOT (rt0.c4)))IS(v0.c1))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT ((((NOT (rt0.c4)))IS(v0.c1))))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((((((NOT (rt0.c4)))IS(v0.c1))) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2;
SELECT v0.c1, v0.c0, v0.c2 FROM v0 WHERE (CAST(((v0.c2)<(v0.c0)) AS REAL)) GROUP BY v0.c1, v0.c0, v0.c2 UNION SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 WHERE ((NOT (CAST(((v0.c2)<(v0.c0)) AS REAL)))) GROUP BY v0.c1, v0.c0, v0.c2 UNION SELECT v0.c1, v0.c0, v0.c2 FROM v0 WHERE (((CAST(((v0.c2)<(v0.c0)) AS REAL)) ISNULL)) GROUP BY v0.c1, v0.c0, v0.c2;
SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2;
SELECT ALL v0.c2, rt0.c4, rt0.c2 FROM v0 LEFT OUTER JOIN rt1 ON (0.2586898054041442 IN (((rt0.c4) NOT NULL))) LEFT OUTER JOIN rt0 ON LIKELY(CASE WHEN rt0.c2 THEN 0.07880478364894117 WHEN 0.821649573280075 THEN rt1.c2 WHEN rt0.c3 THEN rt0.c2 END) GROUP BY v0.c2, rt0.c4, rt0.c2;
SELECT ALL rt1.c1, rt1.c4, v0.c1 FROM v0, rt0, rt1;
SELECT ALL rt1.c1, rt1.c4, v0.c1 FROM v0, rt0, rt1 WHERE (0.4149973133907682 COLLATE RTRIM) UNION ALL SELECT ALL rt1.c1, rt1.c4, v0.c1 FROM v0, rt0, rt1 WHERE ((NOT (0.4149973133907682 COLLATE RTRIM))) UNION ALL SELECT rt1.c1, rt1.c4, v0.c1 FROM v0, rt0, rt1 WHERE (((0.4149973133907682 COLLATE RTRIM) ISNULL));
SELECT ALL rt1.c1, rt1.c4, v0.c1 FROM v0, rt0, rt1;
SELECT DISTINCT v0.c1, v0.c0, v0.c2 FROM v0;
SELECT DISTINCT v0.c1, v0.c0, v0.c2 FROM v0 WHERE (0.6747449453843878) UNION SELECT DISTINCT v0.c1, v0.c0, v0.c2 FROM v0 WHERE ((NOT (0.6747449453843878))) UNION SELECT DISTINCT v0.c1, v0.c0, v0.c2 FROM v0 WHERE (((0.6747449453843878) ISNULL));
SELECT DISTINCT v0.c1, v0.c0, v0.c2 FROM v0;
SELECT ALL rt0.c4 FROM rt0 GROUP BY rt0.c4;
SELECT ALL rt0.c4 FROM rt0 WHERE (((((x'bd5f') NOT BETWEEN ('2115320920') AND (rt0.c3))) NOT BETWEEN ((rt0.c2 IN ())) AND (CASE WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 END))) GROUP BY rt0.c4 UNION SELECT rt0.c4 FROM rt0 WHERE ((NOT (((((x'bd5f') NOT BETWEEN ('2115320920') AND (rt0.c3))) NOT BETWEEN ((rt0.c2 IN ())) AND (CASE WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 END))))) GROUP BY rt0.c4 UNION SELECT ALL rt0.c4 FROM rt0 WHERE (((((((x'bd5f') NOT BETWEEN ('2115320920') AND (rt0.c3))) NOT BETWEEN ((rt0.c2 IN ())) AND (CASE WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 END))) ISNULL)) GROUP BY rt0.c4;
SELECT ALL rt0.c4 FROM rt0 GROUP BY rt0.c4;
SELECT rt1.c2, rt1.c0, rt1.c4, v0.c1, rt1.c1 FROM rt1 RIGHT OUTER JOIN v0 ON ((('U璽' IN (v0.c0))) BETWEEN ((NOT (rt1.c1))) AND ((((v0.c2, rt1.c1, rt1.c2)) BETWEEN ((rt1.c4, rt1.c0, rt1.c4)) AND ((v0.c1, rt1.c0, rt1.c2))))) GROUP BY rt1.c2, rt1.c0, rt1.c4, v0.c1, rt1.c1;
SELECT rt1.c2, rt1.c0, rt1.c4, v0.c1, rt1.c1 FROM rt1 RIGHT OUTER JOIN v0 ON ((('U璽' IN (v0.c0))) BETWEEN ((NOT (rt1.c1))) AND ((((v0.c2, rt1.c1, rt1.c2)) BETWEEN ((rt1.c4, rt1.c0, rt1.c4)) AND ((v0.c1, rt1.c0, rt1.c2))))) GROUP BY rt1.c2, rt1.c0, rt1.c4, v0.c1, rt1.c1 HAVING AVG(((v0.c0)!=(rt1.c4))) UNION ALL SELECT rt1.c2, rt1.c0, rt1.c4, v0.c1, rt1.c1 FROM rt1 RIGHT OUTER JOIN v0 ON ((('U璽' IN (v0.c0))) BETWEEN ((NOT (rt1.c1))) AND ((((v0.c2, rt1.c1, rt1.c2)) BETWEEN ((rt1.c4, rt1.c0, rt1.c4)) AND ((v0.c1, rt1.c0, rt1.c2))))) GROUP BY rt1.c2, rt1.c0, rt1.c4, v0.c1, rt1.c1 HAVING (NOT (AVG(((v0.c0)!=(rt1.c4))))) UNION ALL SELECT ALL rt1.c2, rt1.c0, rt1.c4, v0.c1, rt1.c1 FROM rt1 RIGHT OUTER JOIN v0 ON ((('U璽' IN (v0.c0))) BETWEEN ((NOT (rt1.c1))) AND ((((v0.c2, rt1.c1, rt1.c2)) BETWEEN ((rt1.c4, rt1.c0, rt1.c4)) AND ((v0.c1, rt1.c0, rt1.c2))))) GROUP BY rt1.c2, rt1.c0, rt1.c4, v0.c1, rt1.c1 HAVING ((AVG(((v0.c0)!=(rt1.c4)))) ISNULL);
SELECT rt1.c2, rt1.c0, rt1.c4, v0.c1, rt1.c1 FROM rt1 RIGHT OUTER JOIN v0 ON ((('U璽' IN (v0.c0))) BETWEEN ((NOT (rt1.c1))) AND ((((v0.c2, rt1.c1, rt1.c2)) BETWEEN ((rt1.c4, rt1.c0, rt1.c4)) AND ((v0.c1, rt1.c0, rt1.c2))))) GROUP BY rt1.c2, rt1.c0, rt1.c4, v0.c1, rt1.c1;
SELECT rt1.c2, rt1.c0, rt1.c4, v0.c1, rt1.c1 FROM rt1 RIGHT OUTER JOIN v0 ON ((('U璽' IN (v0.c0))) BETWEEN ((NOT (rt1.c1))) AND ((((v0.c2, rt1.c1, rt1.c2)) BETWEEN ((rt1.c4, rt1.c0, rt1.c4)) AND ((v0.c1, rt1.c0, rt1.c2))))) GROUP BY rt1.c2, rt1.c0, rt1.c4, v0.c1, rt1.c1 HAVING AVG(((v0.c0)!=(rt1.c4))) UNION ALL SELECT rt1.c2, rt1.c0, rt1.c4, v0.c1, rt1.c1 FROM rt1 RIGHT OUTER JOIN v0 ON ((('U璽' IN (v0.c0))) BETWEEN ((NOT (rt1.c1))) AND ((((v0.c2, rt1.c1, rt1.c2)) BETWEEN ((rt1.c4, rt1.c0, rt1.c4)) AND ((v0.c1, rt1.c0, rt1.c2))))) GROUP BY rt1.c2, rt1.c0, rt1.c4, v0.c1, rt1.c1 HAVING (NOT (AVG(((v0.c0)!=(rt1.c4))))) UNION ALL SELECT ALL rt1.c2, rt1.c0, rt1.c4, v0.c1, rt1.c1 FROM rt1 RIGHT OUTER JOIN v0 ON ((('U璽' IN (v0.c0))) BETWEEN ((NOT (rt1.c1))) AND ((((v0.c2, rt1.c1, rt1.c2)) BETWEEN ((rt1.c4, rt1.c0, rt1.c4)) AND ((v0.c1, rt1.c0, rt1.c2))))) GROUP BY rt1.c2, rt1.c0, rt1.c4, v0.c1, rt1.c1 HAVING ((AVG(((v0.c0)!=(rt1.c4)))) ISNULL);
SELECT rt1.c2, rt1.c0, rt1.c4, v0.c1, rt1.c1 FROM rt1 RIGHT OUTER JOIN v0 ON ((('U璽' IN (v0.c0))) BETWEEN ((NOT (rt1.c1))) AND ((((v0.c2, rt1.c1, rt1.c2)) BETWEEN ((rt1.c4, rt1.c0, rt1.c4)) AND ((v0.c1, rt1.c0, rt1.c2))))) GROUP BY rt1.c2, rt1.c0, rt1.c4, v0.c1, rt1.c1;
SELECT ALL rt1.c0, rt0.c1, rt1.c3 FROM rt1 NATURAL JOIN rt0;
SELECT ALL rt1.c0, rt0.c1, rt1.c3 FROM rt1 NATURAL JOIN rt0 WHERE ((rt0.c4 IN ())) UNION ALL SELECT rt1.c0, rt0.c1, rt1.c3 FROM rt1 NATURAL JOIN rt0 WHERE ((NOT ((rt0.c4 IN ())))) UNION ALL SELECT ALL rt1.c0, rt0.c1, rt1.c3 FROM rt1 NATURAL JOIN rt0 WHERE ((((rt0.c4 IN ())) ISNULL));
SELECT ALL rt1.c0, rt0.c1, rt1.c3 FROM rt1 NATURAL JOIN rt0;
SELECT DISTINCT * FROM v0 LEFT OUTER JOIN rt1 ON (((+ (NULL))) NOT BETWEEN (((rt1.c1)*('s0璆//hwv'))) AND (((v0.c0) ISNULL)));
SELECT DISTINCT * FROM v0 LEFT OUTER JOIN rt1 ON (((+ (NULL))) NOT BETWEEN (((rt1.c1)*('s0璆//hwv'))) AND (((v0.c0) ISNULL))) WHERE (x'') UNION SELECT DISTINCT * FROM v0 LEFT OUTER JOIN rt1 ON (((+ (NULL))) NOT BETWEEN (((rt1.c1)*('s0璆//hwv'))) AND (((v0.c0) ISNULL))) WHERE ((NOT (x''))) UNION SELECT DISTINCT * FROM v0 LEFT OUTER JOIN rt1 ON (((+ (NULL))) NOT BETWEEN (((rt1.c1)*('s0璆//hwv'))) AND (((v0.c0) ISNULL))) WHERE (((x'') ISNULL));
SELECT DISTINCT * FROM v0 LEFT OUTER JOIN rt1 ON (((+ (NULL))) NOT BETWEEN (((rt1.c1)*('s0璆//hwv'))) AND (((v0.c0) ISNULL)));
SELECT rt1.c3, rt1.c2, rt1.c4, v0.c0, v0.c2 FROM rt1, v0 GROUP BY rt1.c3, rt1.c2, rt1.c4, v0.c0, v0.c2;
SELECT ALL rt1.c3, rt1.c2, rt1.c4, v0.c0, v0.c2 FROM rt1, v0 WHERE (CAST(v0.c2 AS REAL)) GROUP BY rt1.c3, rt1.c2, rt1.c4, v0.c0, v0.c2 UNION SELECT ALL rt1.c3, rt1.c2, rt1.c4, v0.c0, v0.c2 FROM rt1, v0 WHERE ((NOT (CAST(v0.c2 AS REAL)))) GROUP BY rt1.c3, rt1.c2, rt1.c4, v0.c0, v0.c2 UNION SELECT ALL rt1.c3, rt1.c2, rt1.c4, v0.c0, v0.c2 FROM rt1, v0 WHERE (((CAST(v0.c2 AS REAL)) ISNULL)) GROUP BY rt1.c3, rt1.c2, rt1.c4, v0.c0, v0.c2;
SELECT rt1.c3, rt1.c2, rt1.c4, v0.c0, v0.c2 FROM rt1, v0 GROUP BY rt1.c3, rt1.c2, rt1.c4, v0.c0, v0.c2;
SELECT rt0.c2 FROM rt1 FULL OUTER JOIN v0 ON (NOT ((rt0.c0 IN ()))) CROSS JOIN rt0 ON ((rt1.c2)<=(rt0.c0)) COLLATE RTRIM GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt1 FULL OUTER JOIN v0 ON (NOT ((rt0.c0 IN ()))) CROSS JOIN rt0 ON ((rt1.c2)<=(rt0.c0)) COLLATE RTRIM GROUP BY rt0.c2 HAVING ((COUNT(rt0.c3))<=(MIN(rt1.c4))) UNION ALL SELECT rt0.c2 FROM rt1 FULL OUTER JOIN v0 ON (NOT ((rt0.c0 IN ()))) CROSS JOIN rt0 ON ((rt1.c2)<=(rt0.c0)) COLLATE RTRIM GROUP BY rt0.c2 HAVING (NOT (((COUNT(rt0.c3))<=(MIN(rt1.c4))))) UNION ALL SELECT ALL rt0.c2 FROM rt1 FULL OUTER JOIN v0 ON (NOT ((rt0.c0 IN ()))) CROSS JOIN rt0 ON ((rt1.c2)<=(rt0.c0)) COLLATE RTRIM GROUP BY rt0.c2 HAVING ((((COUNT(rt0.c3))<=(MIN(rt1.c4)))) ISNULL);
SELECT rt0.c2 FROM rt1 FULL OUTER JOIN v0 ON (NOT ((rt0.c0 IN ()))) CROSS JOIN rt0 ON ((rt1.c2)<=(rt0.c0)) COLLATE RTRIM GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt1 FULL OUTER JOIN v0 ON (NOT ((rt0.c0 IN ()))) CROSS JOIN rt0 ON ((rt1.c2)<=(rt0.c0)) COLLATE RTRIM GROUP BY rt0.c2 HAVING ((COUNT(rt0.c3))<=(MIN(rt1.c4))) UNION ALL SELECT rt0.c2 FROM rt1 FULL OUTER JOIN v0 ON (NOT ((rt0.c0 IN ()))) CROSS JOIN rt0 ON ((rt1.c2)<=(rt0.c0)) COLLATE RTRIM GROUP BY rt0.c2 HAVING (NOT (((COUNT(rt0.c3))<=(MIN(rt1.c4))))) UNION ALL SELECT ALL rt0.c2 FROM rt1 FULL OUTER JOIN v0 ON (NOT ((rt0.c0 IN ()))) CROSS JOIN rt0 ON ((rt1.c2)<=(rt0.c0)) COLLATE RTRIM GROUP BY rt0.c2 HAVING ((((COUNT(rt0.c3))<=(MIN(rt1.c4)))) ISNULL);
SELECT rt0.c2 FROM rt1 FULL OUTER JOIN v0 ON (NOT ((rt0.c0 IN ()))) CROSS JOIN rt0 ON ((rt1.c2)<=(rt0.c0)) COLLATE RTRIM GROUP BY rt0.c2;
SELECT ALL v0.c1, v0.c2, rt1.c2, rt1.c0, rt1.c4, v0.c0, rt1.c3 FROM rt1 INNER JOIN v0 ON highlight(rt1.c0, v0.c0, '', rt1.c2) COLLATE BINARY;
SELECT ALL v0.c1, v0.c2, rt1.c2, rt1.c0, rt1.c4, v0.c0, rt1.c3 FROM rt1 INNER JOIN v0 ON highlight(rt1.c0, v0.c0, '', rt1.c2) COLLATE BINARY WHERE ((~ ((v0.c2 IN (rt1.c3))))) UNION ALL SELECT v0.c1, v0.c2, rt1.c2, rt1.c0, rt1.c4, v0.c0, rt1.c3 FROM rt1 INNER JOIN v0 ON highlight(rt1.c0, v0.c0, '', rt1.c2) COLLATE BINARY WHERE ((NOT ((~ ((v0.c2 IN (rt1.c3))))))) UNION ALL SELECT v0.c1, v0.c2, rt1.c2, rt1.c0, rt1.c4, v0.c0, rt1.c3 FROM rt1 INNER JOIN v0 ON highlight(rt1.c0, v0.c0, '', rt1.c2) COLLATE BINARY WHERE ((((~ ((v0.c2 IN (rt1.c3))))) ISNULL));
SELECT ALL v0.c1, v0.c2, rt1.c2, rt1.c0, rt1.c4, v0.c0, rt1.c3 FROM rt1 INNER JOIN v0 ON highlight(rt1.c0, v0.c0, '', rt1.c2) COLLATE BINARY;
SELECT DISTINCT rt0.c2, rt1.c1, rt1.c3, rt1.c2, rt1.c4 FROM rt1, rt0 NATURAL JOIN v0;
SELECT DISTINCT rt0.c2, rt1.c1, rt1.c3, rt1.c2, rt1.c4 FROM rt1, rt0 NATURAL JOIN v0 WHERE (LTRIM(CASE rt0.c0  WHEN rt0.c0 THEN rt1.c4 ELSE rt0.c4 END, 0.2107505516176451)) UNION SELECT DISTINCT rt0.c2, rt1.c1, rt1.c3, rt1.c2, rt1.c4 FROM rt1, rt0 NATURAL JOIN v0 WHERE ((NOT (LTRIM(CASE rt0.c0  WHEN rt0.c0 THEN rt1.c4 ELSE rt0.c4 END, 0.2107505516176451)))) UNION SELECT DISTINCT rt0.c2, rt1.c1, rt1.c3, rt1.c2, rt1.c4 FROM rt1, rt0 NATURAL JOIN v0 WHERE (((LTRIM(CASE rt0.c0  WHEN rt0.c0 THEN rt1.c4 ELSE rt0.c4 END, 0.2107505516176451)) ISNULL));
SELECT DISTINCT rt0.c2, rt1.c1, rt1.c3, rt1.c2, rt1.c4 FROM rt1, rt0 NATURAL JOIN v0;
SELECT rt1.c1, rt1.c2 FROM rt0, rt1 GROUP BY rt1.c1, rt1.c2;
SELECT ALL rt1.c1, rt1.c2 FROM rt0, rt1 WHERE (rt0.c1) GROUP BY rt1.c1, rt1.c2 UNION SELECT rt1.c1, rt1.c2 FROM rt0, rt1 WHERE ((NOT (rt0.c1))) GROUP BY rt1.c1, rt1.c2 UNION SELECT ALL rt1.c1, rt1.c2 FROM rt0, rt1 WHERE (((rt0.c1) ISNULL)) GROUP BY rt1.c1, rt1.c2;
SELECT rt1.c1, rt1.c2 FROM rt0, rt1 GROUP BY rt1.c1, rt1.c2;
SELECT rt1.c1, rt1.c4, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c4, rt1.c0, rt1.c2;
SELECT rt1.c1, rt1.c4, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c4, rt1.c0, rt1.c2 HAVING MIN(MAX(TOTAL(rt1.c4))) UNION ALL SELECT ALL rt1.c1, rt1.c4, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c4, rt1.c0, rt1.c2 HAVING (NOT (MIN(MAX(TOTAL(rt1.c4))))) UNION ALL SELECT ALL rt1.c1, rt1.c4, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c4, rt1.c0, rt1.c2 HAVING ((MIN(MAX(TOTAL(rt1.c4)))) ISNULL);
SELECT * FROM v0 INNER JOIN rt1 ON rt0.c1 CROSS JOIN rt0 ON (((rt0.c4 IN ()))>=(CASE WHEN x'4a61' THEN rt0.c3 WHEN rt0.c1 THEN rt1.c3 WHEN NULL THEN rt1.c3 WHEN rt0.c4 THEN v0.c1 WHEN rt0.c3 THEN rt1.c2 ELSE rt1.c4 END));
SELECT * FROM v0 INNER JOIN rt1 ON rt0.c1 CROSS JOIN rt0 ON (((rt0.c4 IN ()))>=(CASE WHEN x'4a61' THEN rt0.c3 WHEN rt0.c1 THEN rt1.c3 WHEN NULL THEN rt1.c3 WHEN rt0.c4 THEN v0.c1 WHEN rt0.c3 THEN rt1.c2 ELSE rt1.c4 END)) WHERE ((((('780631680')<>(rt0.c0))) IS FALSE)) ORDER BY rt0.c2 DESC  NULLS FIRST;
SELECT * FROM v0 INNER JOIN rt1 ON rt0.c1 CROSS JOIN rt0 ON (((rt0.c4 IN ()))>=(CASE WHEN x'4a61' THEN rt0.c3 WHEN rt0.c1 THEN rt1.c3 WHEN NULL THEN rt1.c3 WHEN rt0.c4 THEN v0.c1 WHEN rt0.c3 THEN rt1.c2 ELSE rt1.c4 END)) WHERE ((NOT ((((('780631680')!=(rt0.c0))) IS FALSE)))) ORDER BY rt0.c2 DESC  NULLS FIRST;
SELECT * FROM v0 INNER JOIN rt1 ON rt0.c1 CROSS JOIN rt0 ON (((rt0.c4 IN ()))>=(CASE WHEN x'4a61' THEN rt0.c3 WHEN rt0.c1 THEN rt1.c3 WHEN NULL THEN rt1.c3 WHEN rt0.c4 THEN v0.c1 WHEN rt0.c3 THEN rt1.c2 ELSE rt1.c4 END)) WHERE ((((((('780631680')!=(rt0.c0))) IS FALSE)) ISNULL)) ORDER BY rt0.c2 DESC  NULLS FIRST;
SELECT * FROM v0 INNER JOIN rt1 ON rt0.c1 CROSS JOIN rt0 ON (((rt0.c4 IN ()))>=(CASE WHEN x'4a61' THEN rt0.c3 WHEN rt0.c1 THEN rt1.c3 WHEN NULL THEN rt1.c3 WHEN rt0.c4 THEN v0.c1 WHEN rt0.c3 THEN rt1.c2 ELSE rt1.c4 END));
SELECT DISTINCT * FROM rt0, rt1, v0;
SELECT DISTINCT * FROM rt0, rt1, v0 WHERE ((((7.03204626E8))>=((((rt1.c0) NOT BETWEEN (v0.c1) AND (v0.c2)))))) UNION SELECT DISTINCT * FROM rt0, rt1, v0 WHERE ((NOT ((((7.03204626E8))>=((((rt1.c0) NOT BETWEEN (v0.c1) AND (v0.c2)))))))) UNION SELECT DISTINCT * FROM rt0, rt1, v0 WHERE ((((((7.03204626E8))>=((((rt1.c0) NOT BETWEEN (v0.c1) AND (v0.c2)))))) ISNULL));
SELECT DISTINCT * FROM rt0, rt1, v0;
SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0, rt0.c4, rt0.c1;
SELECT rt0.c3, rt0.c2, rt0.c0, rt0.c4, rt0.c1 FROM rt0 WHERE (CAST(((rt0.c1)<(rt0.c4)) AS BLOB)) GROUP BY rt0.c3, rt0.c2, rt0.c0, rt0.c4, rt0.c1 UNION SELECT rt0.c3, rt0.c2, rt0.c0, rt0.c4, rt0.c1 FROM rt0 WHERE ((NOT (CAST(((rt0.c1)<(rt0.c4)) AS BLOB)))) GROUP BY rt0.c3, rt0.c2, rt0.c0, rt0.c4, rt0.c1 UNION SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt0.c4, rt0.c1 FROM rt0 WHERE (((CAST(((rt0.c1)<(rt0.c4)) AS BLOB)) ISNULL)) GROUP BY rt0.c3, rt0.c2, rt0.c0, rt0.c4, rt0.c1;
SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0, rt0.c4, rt0.c1;
SELECT ALL rt0.c4, rt0.c1, v0.c1, rt0.c0, rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c4, rt0.c1, v0.c1, rt0.c0, rt0.c2, v0.c0;
SELECT ALL rt0.c4, rt0.c1, v0.c1, rt0.c0, rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c4, rt0.c1, v0.c1, rt0.c0, rt0.c2, v0.c0 HAVING (((COUNT(*))) NOT BETWEEN ((((rt0.c1) ISNULL))) AND ((((((rt0.c2)OR(v0.c2)))AND(COUNT(rt0.c3)))))) UNION ALL SELECT ALL rt0.c4, rt0.c1, v0.c1, rt0.c0, rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c4, rt0.c1, v0.c1, rt0.c0, rt0.c2, v0.c0 HAVING (NOT ((((COUNT(*))) NOT BETWEEN ((((rt0.c1) ISNULL))) AND ((((((rt0.c2)OR(v0.c2)))AND(COUNT(rt0.c3)))))))) UNION ALL SELECT rt0.c4, rt0.c1, v0.c1, rt0.c0, rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c4, rt0.c1, v0.c1, rt0.c0, rt0.c2, v0.c0 HAVING (((((COUNT(*))) NOT BETWEEN ((((rt0.c1) ISNULL))) AND ((((((rt0.c2)OR(v0.c2)))AND(COUNT(rt0.c3))))))) ISNULL);
SELECT ALL rt0.c4, rt0.c1, v0.c1, rt0.c0, rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c4, rt0.c1, v0.c1, rt0.c0, rt0.c2, v0.c0;
SELECT ALL rt0.c4, rt0.c1, v0.c1, rt0.c0, rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c4, rt0.c1, v0.c1, rt0.c0, rt0.c2, v0.c0 HAVING (((COUNT(*))) NOT BETWEEN ((((rt0.c1) ISNULL))) AND ((((((rt0.c2)OR(v0.c2)))AND(COUNT(rt0.c3)))))) UNION ALL SELECT ALL rt0.c4, rt0.c1, v0.c1, rt0.c0, rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c4, rt0.c1, v0.c1, rt0.c0, rt0.c2, v0.c0 HAVING (NOT ((((COUNT(*))) NOT BETWEEN ((((rt0.c1) ISNULL))) AND ((((((rt0.c2)OR(v0.c2)))AND(COUNT(rt0.c3)))))))) UNION ALL SELECT rt0.c4, rt0.c1, v0.c1, rt0.c0, rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c4, rt0.c1, v0.c1, rt0.c0, rt0.c2, v0.c0 HAVING (((((COUNT(*))) NOT BETWEEN ((((rt0.c1) ISNULL))) AND ((((((rt0.c2)OR(v0.c2)))AND(COUNT(rt0.c3))))))) ISNULL);
SELECT ALL rt0.c4, rt0.c1, v0.c1, rt0.c0, rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c4, rt0.c1, v0.c1, rt0.c0, rt0.c2, v0.c0;
SELECT ALL rt0.c3, rt1.c1, rt1.c0, v0.c0, rt1.c3, rt0.c1 FROM v0, rt0 NOT INDEXED, rt1;
SELECT rt0.c3, rt1.c1, rt1.c0, v0.c0, rt1.c3, rt0.c1 FROM v0, rt0, rt1 WHERE (((CASE WHEN rt0.c4 THEN rt0.c1 ELSE rt1.c3 END)>>((((rt1.c1, v0.c1, v0.c2))>=((rt0.c4, rt0.c3, v0.c2)))))) UNION ALL SELECT rt0.c3, rt1.c1, rt1.c0, v0.c0, rt1.c3, rt0.c1 FROM v0, rt0, rt1 WHERE ((NOT (((CASE WHEN rt0.c4 THEN rt0.c1 ELSE rt1.c3 END)>>((((rt1.c1, v0.c1, v0.c2))>=((rt0.c4, rt0.c3, v0.c2)))))))) UNION ALL SELECT rt0.c3, rt1.c1, rt1.c0, v0.c0, rt1.c3, rt0.c1 FROM v0, rt0, rt1 WHERE (((((CASE WHEN rt0.c4 THEN rt0.c1 ELSE rt1.c3 END)>>((((rt1.c1, v0.c1, v0.c2))>=((rt0.c4, rt0.c3, v0.c2)))))) ISNULL));
SELECT ALL rt0.c3, rt1.c1, rt1.c0, v0.c0, rt1.c3, rt0.c1 FROM v0, rt0 NOT INDEXED, rt1;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (v0.c2) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (v0.c2))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((v0.c2) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT rt0.c2, rt1.c2, rt1.c0, rt0.c1, rt0.c3, rt0.c4, rt0.c0, rt1.c3, rt1.c4, rt1.c1 FROM rt0, rt1 GROUP BY rt0.c2, rt1.c2, rt1.c0, rt0.c1, rt0.c3, rt0.c4, rt0.c0, rt1.c3, rt1.c4, rt1.c1;
SELECT rt0.c2, rt1.c2, rt1.c0, rt0.c1, rt0.c3, rt0.c4, rt0.c0, rt1.c3, rt1.c4, rt1.c1 FROM rt0, rt1 WHERE (UPPER((((rt0.c3, 0.43759574352050257, rt0.c4))<=((rt0.c4, 0.3480165935000854, rt1.c0))))) GROUP BY rt0.c2, rt1.c2, rt1.c0, rt0.c1, rt0.c3, rt0.c4, rt0.c0, rt1.c3, rt1.c4, rt1.c1 UNION SELECT ALL rt0.c2, rt1.c2, rt1.c0, rt0.c1, rt0.c3, rt0.c4, rt0.c0, rt1.c3, rt1.c4, rt1.c1 FROM rt0, rt1 WHERE ((NOT (UPPER((((rt0.c3, 0.43759574352050257, rt0.c4))<=((rt0.c4, 0.3480165935000854, rt1.c0))))))) GROUP BY rt0.c2, rt1.c2, rt1.c0, rt0.c1, rt0.c3, rt0.c4, rt0.c0, rt1.c3, rt1.c4, rt1.c1 UNION SELECT ALL rt0.c2, rt1.c2, rt1.c0, rt0.c1, rt0.c3, rt0.c4, rt0.c0, rt1.c3, rt1.c4, rt1.c1 FROM rt0, rt1 WHERE (((UPPER((((rt0.c3, 0.43759574352050257, rt0.c4))<=((rt0.c4, 0.3480165935000854, rt1.c0))))) ISNULL)) GROUP BY rt0.c2, rt1.c2, rt1.c0, rt0.c1, rt0.c3, rt0.c4, rt0.c0, rt1.c3, rt1.c4, rt1.c1;
SELECT rt0.c2, rt1.c2, rt1.c0, rt0.c1, rt0.c3, rt0.c4, rt0.c0, rt1.c3, rt1.c4, rt1.c1 FROM rt0, rt1 GROUP BY rt0.c2, rt1.c2, rt1.c0, rt0.c1, rt0.c3, rt0.c4, rt0.c0, rt1.c3, rt1.c4, rt1.c1;
SELECT ALL rt0.c2, rt1.c3, rt0.c0, rt1.c1, rt0.c3, rt1.c0, rt0.c4, rt1.c4, rt1.c2 FROM rt0, rt1 GROUP BY rt0.c2, rt1.c3, rt0.c0, rt1.c1, rt0.c3, rt1.c0, rt0.c4, rt1.c4, rt1.c2;
SELECT ALL rt0.c2, rt1.c3, rt0.c0, rt1.c1, rt0.c3, rt1.c0, rt0.c4, rt1.c4, rt1.c2 FROM rt0, rt1 GROUP BY rt0.c2, rt1.c3, rt0.c0, rt1.c1, rt0.c3, rt1.c0, rt0.c4, rt1.c4, rt1.c2 HAVING CASE ((rt1.c1)=(COUNT(*)))  WHEN COUNT(MIN(rt0.c1)) THEN MAX(MIN(rt0.c3)) END UNION ALL SELECT rt0.c2, rt1.c3, rt0.c0, rt1.c1, rt0.c3, rt1.c0, rt0.c4, rt1.c4, rt1.c2 FROM rt0, rt1 GROUP BY rt0.c2, rt1.c3, rt0.c0, rt1.c1, rt0.c3, rt1.c0, rt0.c4, rt1.c4, rt1.c2 HAVING (NOT (CASE ((rt1.c1)=(COUNT(*)))  WHEN COUNT(MIN(rt0.c1)) THEN MAX(MIN(rt0.c3)) END)) UNION ALL SELECT rt0.c2, rt1.c3, rt0.c0, rt1.c1, rt0.c3, rt1.c0, rt0.c4, rt1.c4, rt1.c2 FROM rt0, rt1 GROUP BY rt0.c2, rt1.c3, rt0.c0, rt1.c1, rt0.c3, rt1.c0, rt0.c4, rt1.c4, rt1.c2 HAVING ((CASE ((rt1.c1)==(COUNT(*)))  WHEN COUNT(MIN(rt0.c1)) THEN MAX(MIN(rt0.c3)) END) ISNULL);
SELECT ALL MAX(((((-1961246527)IS NOT(rt0.c1)))&(rt0.c0))) FROM rt1, rt0 ORDER BY (((- (rt1.c4))) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (x'')) DESC;
SELECT rt0.c0, v0.c1, rt0.c2, v0.c0, v0.c2, rt1.c2 FROM rt1, v0, rt0;
SELECT ALL rt0.c0, v0.c1, rt0.c2, v0.c0, v0.c2, rt1.c2 FROM rt1, v0, rt0 WHERE ((~ (((rt0.c1) BETWEEN (rt1.c3) AND (rt1.c4))))) UNION ALL SELECT rt0.c0, v0.c1, rt0.c2, v0.c0, v0.c2, rt1.c2 FROM rt1, v0, rt0 WHERE ((NOT ((~ (((rt0.c1) BETWEEN (rt1.c3) AND (rt1.c4))))))) UNION ALL SELECT ALL rt0.c0, v0.c1, rt0.c2, v0.c0, v0.c2, rt1.c2 FROM rt1, v0, rt0 WHERE ((((~ (((rt0.c1) BETWEEN (rt1.c3) AND (rt1.c4))))) ISNULL));
SELECT rt0.c0, v0.c1, rt0.c2, v0.c0, v0.c2, rt1.c2 FROM rt1, v0, rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (CAST(((v0.c2)>=(0.5025301544267289)) AS INTEGER)) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (CAST(((v0.c2)>=(0.5025301544267289)) AS INTEGER)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((CAST(((v0.c2)>=(0.5025301544267289)) AS INTEGER)) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL v0.c1, rt1.c0, rt1.c2, v0.c0, v0.c2, rt1.c3 FROM rt1, v0 GROUP BY v0.c1, rt1.c0, rt1.c2, v0.c0, v0.c2, rt1.c3;
SELECT ALL v0.c1, rt1.c0, rt1.c2, v0.c0, v0.c2, rt1.c3 FROM rt1, v0 WHERE (IFNULL(DISTINCT (((rt1.c2)) BETWEEN ((9.38919908E8)) AND ((rt1.c3))), v0.c2)) GROUP BY v0.c1, rt1.c0, rt1.c2, v0.c0, v0.c2, rt1.c3 UNION SELECT v0.c1, rt1.c0, rt1.c2, v0.c0, v0.c2, rt1.c3 FROM rt1, v0 WHERE ((NOT (IFNULL(DISTINCT (((rt1.c2)) BETWEEN ((9.38919908E8)) AND ((rt1.c3))), v0.c2)))) GROUP BY v0.c1, rt1.c0, rt1.c2, v0.c0, v0.c2, rt1.c3 UNION SELECT v0.c1, rt1.c0, rt1.c2, v0.c0, v0.c2, rt1.c3 FROM rt1, v0 WHERE (((IFNULL(DISTINCT (((rt1.c2)) BETWEEN ((9.38919908E8)) AND ((rt1.c3))), v0.c2)) ISNULL)) GROUP BY v0.c1, rt1.c0, rt1.c2, v0.c0, v0.c2, rt1.c3;
SELECT ALL v0.c1, rt1.c0, rt1.c2, v0.c0, v0.c2, rt1.c3 FROM rt1, v0 GROUP BY v0.c1, rt1.c0, rt1.c2, v0.c0, v0.c2, rt1.c3;
SELECT ALL rt1.c4, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c4, rt1.c0, rt1.c1;
SELECT rt1.c4, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c4, rt1.c0, rt1.c1 HAVING (GROUP_CONCAT(rt1.c1) IN ()) UNION ALL SELECT ALL rt1.c4, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c4, rt1.c0, rt1.c1 HAVING (NOT ((GROUP_CONCAT(rt1.c1) IN ()))) UNION ALL SELECT ALL rt1.c4, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c4, rt1.c0, rt1.c1 HAVING (((GROUP_CONCAT(rt1.c1) IN ())) ISNULL);
SELECT ALL rt1.c4, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c4, rt1.c0, rt1.c1;
SELECT rt1.c4, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c4, rt1.c0, rt1.c1 HAVING (GROUP_CONCAT(rt1.c1) IN ()) UNION ALL SELECT ALL rt1.c4, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c4, rt1.c0, rt1.c1 HAVING (NOT ((GROUP_CONCAT(rt1.c1) IN ()))) UNION ALL SELECT ALL rt1.c4, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c4, rt1.c0, rt1.c1 HAVING (((GROUP_CONCAT(rt1.c1) IN ())) ISNULL);
SELECT ALL rt1.c4, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c4, rt1.c0, rt1.c1;
SELECT * FROM rt0, v0;
SELECT * FROM rt0, v0 WHERE (((((rt0.c2) NOTNULL)) NOT BETWEEN (CASE WHEN v0.c1 THEN rt0.c1 ELSE v0.c1 END) AND (TOTAL_CHANGES()))) UNION ALL SELECT * FROM rt0, v0 WHERE ((NOT (((((rt0.c2) NOTNULL)) NOT BETWEEN (CASE WHEN v0.c1 THEN rt0.c1 ELSE v0.c1 END) AND (TOTAL_CHANGES()))))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE (((((((rt0.c2) NOTNULL)) NOT BETWEEN (CASE WHEN v0.c1 THEN rt0.c1 ELSE v0.c1 END) AND (TOTAL_CHANGES()))) ISNULL));
SELECT * FROM rt0, v0;
SELECT DISTINCT rt0.c3, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c3, rt0.c2, rt0.c0 FROM rt0 WHERE ((((('421700154')OR((((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))))AND(CASE rt0.c0  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c2 END))) UNION SELECT DISTINCT rt0.c3, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((((('421700154')OR((((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))))AND(CASE rt0.c0  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c2 END))))) UNION SELECT DISTINCT rt0.c3, rt0.c2, rt0.c0 FROM rt0 WHERE ((((((('421700154')OR((((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))))AND(CASE rt0.c0  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c2 END))) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c2, rt0.c0 FROM rt0;
SELECT ALL rt0.c2, rt0.c4 FROM rt1 NATURAL JOIN rt0 GROUP BY rt0.c2, rt0.c4;
SELECT ALL rt0.c2, rt0.c4 FROM rt1 NATURAL JOIN rt0 WHERE ((((((rt1.c3)/(rt1.c0)), (rt1.c3 IN (rt1.c3)), CASE WHEN rt1.c3 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c0 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c0 ELSE rt1.c4 END))<>(((~ (rt0.c1)), (rt1.c0 IN ()), (NOT (rt1.c3)))))) GROUP BY rt0.c2, rt0.c4 UNION SELECT ALL rt0.c2, rt0.c4 FROM rt1 NATURAL JOIN rt0 WHERE ((NOT ((((((rt1.c3)/(rt1.c0)), (rt1.c3 IN (rt1.c3)), CASE WHEN rt1.c3 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c0 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c0 ELSE rt1.c4 END))!=(((~ (rt0.c1)), (rt1.c0 IN ()), (NOT (rt1.c3)))))))) GROUP BY rt0.c2, rt0.c4 UNION SELECT rt0.c2, rt0.c4 FROM rt1 NATURAL JOIN rt0 WHERE ((((((((rt1.c3)/(rt1.c0)), (rt1.c3 IN (rt1.c3)), CASE WHEN rt1.c3 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c0 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c0 ELSE rt1.c4 END))!=(((~ (rt0.c1)), (rt1.c0 IN ()), (NOT (rt1.c3)))))) ISNULL)) GROUP BY rt0.c2, rt0.c4;
SELECT ALL rt0.c2, rt0.c4 FROM rt1 NATURAL JOIN rt0 GROUP BY rt0.c2, rt0.c4;
SELECT rt0.c1, rt1.c0, rt1.c3, rt0.c4, v0.c2, rt0.c0, rt1.c2 FROM v0 CROSS JOIN rt1 ON json_extract(CASE WHEN NULL THEN rt0.c4 WHEN rt1.c3 THEN rt0.c1 WHEN v0.c1 THEN rt1.c2 ELSE rt1.c4 END, CAST(x'' AS NUMERIC), ((rt1.c0)IS NOT(rt0.c0)), 0.41151307714886365) RIGHT OUTER JOIN rt0 ON rt0.c2 GROUP BY rt0.c1, rt1.c0, rt1.c3, rt0.c4, v0.c2, rt0.c0, rt1.c2;
SELECT rt1.c3, rt1.c2 FROM rt1;
SELECT ALL rt1.c3, rt1.c2 FROM rt1 WHERE (((((rt1.c2)>>(rt1.c4))) BETWEEN (((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c4))) AND (((rt1.c0) IS TRUE)))) UNION ALL SELECT ALL rt1.c3, rt1.c2 FROM rt1 WHERE ((NOT (((((rt1.c2)>>(rt1.c4))) BETWEEN (((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c4))) AND (((rt1.c0) IS TRUE)))))) UNION ALL SELECT ALL rt1.c3, rt1.c2 FROM rt1 WHERE (((((((rt1.c2)>>(rt1.c4))) BETWEEN (((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c4))) AND (((rt1.c0) IS TRUE)))) ISNULL));
SELECT rt1.c3, rt1.c2 FROM rt1;
SELECT DISTINCT rt1.c3, rt1.c1, rt1.c0, rt1.c2 FROM rt1;
SELECT DISTINCT rt1.c3, rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE ((('p8''8GBL')<<(((rt1.c4)-(0.13708018028961755))))) UNION SELECT DISTINCT rt1.c3, rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE ((NOT ((('p8''8GBL')<<(((rt1.c4)-(0.13708018028961755))))))) UNION SELECT DISTINCT rt1.c3, rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE ((((('p8''8GBL')<<(((rt1.c4)-(0.13708018028961755))))) ISNULL));
SELECT DISTINCT rt1.c3, rt1.c1, rt1.c0, rt1.c2 FROM rt1;
SELECT ALL rt0.c0, rt1.c0, rt1.c2, rt1.c1, rt1.c4, rt0.c4 FROM rt1, rt0 GROUP BY rt0.c0, rt1.c0, rt1.c2, rt1.c1, rt1.c4, rt0.c4;
SELECT rt0.c0, rt1.c0, rt1.c2, rt1.c1, rt1.c4, rt0.c4 FROM rt1, rt0 WHERE (TRIM(DISTINCT ((rt0.c2)GLOB(rt1.c4)), CASE rt0.c0  WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c1 THEN rt1.c4 END)) GROUP BY rt0.c0, rt1.c0, rt1.c2, rt1.c1, rt1.c4, rt0.c4 UNION SELECT ALL rt0.c0, rt1.c0, rt1.c2, rt1.c1, rt1.c4, rt0.c4 FROM rt1, rt0 WHERE ((NOT (TRIM(DISTINCT ((rt0.c2)GLOB(rt1.c4)), CASE rt0.c0  WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c1 THEN rt1.c4 END)))) GROUP BY rt0.c0, rt1.c0, rt1.c2, rt1.c1, rt1.c4, rt0.c4 UNION SELECT rt0.c0, rt1.c0, rt1.c2, rt1.c1, rt1.c4, rt0.c4 FROM rt1, rt0 WHERE (((TRIM(DISTINCT ((rt0.c2)GLOB(rt1.c4)), CASE rt0.c0  WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c1 THEN rt1.c4 END)) ISNULL)) GROUP BY rt0.c0, rt1.c0, rt1.c2, rt1.c1, rt1.c4, rt0.c4;
SELECT ALL rt0.c0, rt1.c0, rt1.c2, rt1.c1, rt1.c4, rt0.c4 FROM rt1, rt0 GROUP BY rt0.c0, rt1.c0, rt1.c2, rt1.c1, rt1.c4, rt0.c4;
SELECT ALL rt1.c2, rt1.c0, rt1.c3, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c3, rt1.c1;
SELECT ALL rt1.c2, rt1.c0, rt1.c3, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c3, rt1.c1 HAVING (SUM(MIN(rt1.c0)) IN ()) UNION ALL SELECT ALL rt1.c2, rt1.c0, rt1.c3, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c3, rt1.c1 HAVING (NOT ((SUM(MIN(rt1.c0)) IN ()))) UNION ALL SELECT ALL rt1.c2, rt1.c0, rt1.c3, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c3, rt1.c1 HAVING (((SUM(MIN(rt1.c0)) IN ())) ISNULL);
SELECT ALL rt1.c2, rt1.c0, rt1.c3, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c3, rt1.c1;
SELECT ALL rt1.c2, rt1.c0, rt1.c3, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c3, rt1.c1 HAVING (SUM(MIN(rt1.c0)) IN ()) UNION ALL SELECT ALL rt1.c2, rt1.c0, rt1.c3, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c3, rt1.c1 HAVING (NOT ((SUM(MIN(rt1.c0)) IN ()))) UNION ALL SELECT ALL rt1.c2, rt1.c0, rt1.c3, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c3, rt1.c1 HAVING (((SUM(MIN(rt1.c0)) IN ())) ISNULL);
SELECT ALL rt1.c2, rt1.c0, rt1.c3, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c3, rt1.c1;
SELECT rt0.c2, rt0.c4, rt1.c3, v0.c1, v0.c0, rt1.c0, rt0.c0 FROM rt0, rt1, v0;
SELECT ALL rt0.c2, rt0.c4, rt1.c3, v0.c1, v0.c0, rt1.c0, rt0.c0 FROM rt0, rt1, v0 WHERE ((((v0.c2)) BETWEEN (((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt1.c2))))) AND (((- ('')))))) UNION ALL SELECT ALL rt0.c2, rt0.c4, rt1.c3, v0.c1, v0.c0, rt1.c0, rt0.c0 FROM rt0, rt1, v0 WHERE ((NOT ((((v0.c2)) BETWEEN (((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt1.c2))))) AND (((- ('')))))))) UNION ALL SELECT ALL rt0.c2, rt0.c4, rt1.c3, v0.c1, v0.c0, rt1.c0, rt0.c0 FROM rt0, rt1, v0 WHERE ((((((v0.c2)) BETWEEN (((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt1.c2))))) AND (((- ('')))))) ISNULL));
SELECT rt0.c2, rt0.c4, rt1.c3, v0.c1, v0.c0, rt1.c0, rt0.c0 FROM rt0, rt1, v0;
SELECT DISTINCT rt0.c2 FROM v0, rt0;
SELECT DISTINCT rt0.c2 FROM v0, rt0 WHERE ((('-1880476172')LIKE(((rt0.c0) IS FALSE)))) UNION SELECT DISTINCT rt0.c2 FROM v0, rt0 WHERE ((NOT ((('-1880476172')LIKE(((rt0.c0) IS FALSE)))))) UNION SELECT DISTINCT rt0.c2 FROM v0, rt0 WHERE ((((('-1880476172')LIKE(((rt0.c0) IS FALSE)))) ISNULL));
SELECT DISTINCT rt0.c2 FROM v0, rt0;
SELECT ALL v0.c1, rt0.c3 FROM rt0, v0 GROUP BY v0.c1, rt0.c3;
SELECT ALL v0.c1, rt0.c3 FROM rt0, v0 WHERE (((((v0.c1) NOT BETWEEN ('J9') AND (rt0.c4)))>>(x''))) GROUP BY v0.c1, rt0.c3 UNION SELECT ALL v0.c1, rt0.c3 FROM rt0, v0 WHERE ((NOT (((((v0.c1) NOT BETWEEN ('J9') AND (rt0.c4)))>>(x''))))) GROUP BY v0.c1, rt0.c3 UNION SELECT ALL v0.c1, rt0.c3 FROM rt0, v0 WHERE (((((((v0.c1) NOT BETWEEN ('J9') AND (rt0.c4)))>>(x''))) ISNULL)) GROUP BY v0.c1, rt0.c3;
SELECT ALL v0.c1, rt0.c3 FROM rt0, v0 GROUP BY v0.c1, rt0.c3;
SELECT ALL rt1.c4, v0.c0, rt1.c2, rt1.c1, rt1.c3, rt1.c0, v0.c1, v0.c2 FROM v0, rt1 GROUP BY rt1.c4, v0.c0, rt1.c2, rt1.c1, rt1.c3, rt1.c0, v0.c1, v0.c2;
SELECT ALL rt1.c4, v0.c0, rt1.c2, rt1.c1, rt1.c3, rt1.c0, v0.c1, v0.c2 FROM v0, rt1 GROUP BY rt1.c4, v0.c0, rt1.c2, rt1.c1, rt1.c3, rt1.c0, v0.c1, v0.c2 HAVING AVG(GROUP_CONCAT(TOTAL(NULL))) UNION ALL SELECT ALL rt1.c4, v0.c0, rt1.c2, rt1.c1, rt1.c3, rt1.c0, v0.c1, v0.c2 FROM v0, rt1 GROUP BY rt1.c4, v0.c0, rt1.c2, rt1.c1, rt1.c3, rt1.c0, v0.c1, v0.c2 HAVING (NOT (AVG(GROUP_CONCAT(TOTAL(NULL))))) UNION ALL SELECT rt1.c4, v0.c0, rt1.c2, rt1.c1, rt1.c3, rt1.c0, v0.c1, v0.c2 FROM v0 NOT INDEXED, rt1 GROUP BY rt1.c4, v0.c0, rt1.c2, rt1.c1, rt1.c3, rt1.c0, v0.c1, v0.c2 HAVING ((AVG(GROUP_CONCAT(TOTAL(NULL)))) ISNULL);
SELECT * FROM rt1, v0;
SELECT * FROM rt1, v0 WHERE (((rt1.c4)>>(v0.c1)) COLLATE BINARY) UNION ALL SELECT ALL * FROM rt1, v0 WHERE ((NOT (((rt1.c4)>>(v0.c1)) COLLATE BINARY))) UNION ALL SELECT * FROM rt1, v0 WHERE (((((rt1.c4)>>(v0.c1)) COLLATE BINARY) ISNULL));
SELECT * FROM rt1, v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (v0.c0) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT * FROM v0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT rt0.c2, rt1.c1, v0.c0, rt0.c3 FROM rt0, v0, rt1 GROUP BY rt0.c2, rt1.c1, v0.c0, rt0.c3;
SELECT rt0.c2, rt1.c1, v0.c0, rt0.c3 FROM rt0, v0, rt1 WHERE (((((((((rt1.c3)OR(v0.c1)))AND(v0.c0)))OR(((rt1.c1)IS NOT(rt1.c0)))))AND(((((v0.c1)AND(rt0.c1)))AND(rt0.c0))))) GROUP BY rt0.c2, rt1.c1, v0.c0, rt0.c3 UNION SELECT ALL rt0.c2, rt1.c1, v0.c0, rt0.c3 FROM rt0, v0, rt1 WHERE ((NOT (((((((((rt1.c3)OR(v0.c1)))AND(v0.c0)))OR(((rt1.c1)IS NOT(rt1.c0)))))AND(((((v0.c1)AND(rt0.c1)))AND(rt0.c0))))))) GROUP BY rt0.c2, rt1.c1, v0.c0, rt0.c3 UNION SELECT ALL rt0.c2, rt1.c1, v0.c0, rt0.c3 FROM rt0, v0, rt1 WHERE (((((((((((rt1.c3)OR(v0.c1)))AND(v0.c0)))OR(((rt1.c1)IS NOT(rt1.c0)))))AND(((((v0.c1)AND(rt0.c1)))AND(rt0.c0))))) ISNULL)) GROUP BY rt0.c2, rt1.c1, v0.c0, rt0.c3;
SELECT rt0.c2, rt1.c1, v0.c0, rt0.c3 FROM rt0, v0, rt1 GROUP BY rt0.c2, rt1.c1, v0.c0, rt0.c3;
SELECT ALL rt0.c2, rt0.c4, v0.c0, rt0.c0, v0.c1, v0.c2 FROM v0, rt0 GROUP BY rt0.c2, rt0.c4, v0.c0, rt0.c0, v0.c1, v0.c2;
SELECT rt0.c2, rt0.c4, v0.c0, rt0.c0, v0.c1, v0.c2 FROM v0, rt0 GROUP BY rt0.c2, rt0.c4, v0.c0, rt0.c0, v0.c1, v0.c2 HAVING ((MAX(v0.c1)) BETWEEN (COUNT(*)) AND (COUNT(*))) UNION ALL SELECT ALL rt0.c2, rt0.c4, v0.c0, rt0.c0, v0.c1, v0.c2 FROM v0, rt0 GROUP BY rt0.c2, rt0.c4, v0.c0, rt0.c0, v0.c1, v0.c2 HAVING (NOT (((MAX(v0.c1)) BETWEEN (COUNT(*)) AND (COUNT(*))))) UNION ALL SELECT rt0.c2, rt0.c4, v0.c0, rt0.c0, v0.c1, v0.c2 FROM v0, rt0 GROUP BY rt0.c2, rt0.c4, v0.c0, rt0.c0, v0.c1, v0.c2 HAVING ((((MAX(v0.c1)) BETWEEN (COUNT(*)) AND (COUNT(*)))) ISNULL);
SELECT ALL rt0.c2, rt0.c4, v0.c0, rt0.c0, v0.c1, v0.c2 FROM v0, rt0 GROUP BY rt0.c2, rt0.c4, v0.c0, rt0.c0, v0.c1, v0.c2;
SELECT rt0.c2, rt0.c4, v0.c0, rt0.c0, v0.c1, v0.c2 FROM v0, rt0 GROUP BY rt0.c2, rt0.c4, v0.c0, rt0.c0, v0.c1, v0.c2 HAVING ((MAX(v0.c1)) BETWEEN (COUNT(*)) AND (COUNT(*))) UNION ALL SELECT ALL rt0.c2, rt0.c4, v0.c0, rt0.c0, v0.c1, v0.c2 FROM v0, rt0 GROUP BY rt0.c2, rt0.c4, v0.c0, rt0.c0, v0.c1, v0.c2 HAVING (NOT (((MAX(v0.c1)) BETWEEN (COUNT(*)) AND (COUNT(*))))) UNION ALL SELECT rt0.c2, rt0.c4, v0.c0, rt0.c0, v0.c1, v0.c2 FROM v0, rt0 GROUP BY rt0.c2, rt0.c4, v0.c0, rt0.c0, v0.c1, v0.c2 HAVING ((((MAX(v0.c1)) BETWEEN (COUNT(*)) AND (COUNT(*)))) ISNULL);
SELECT ALL rt0.c2, rt0.c4, v0.c0, rt0.c0, v0.c1, v0.c2 FROM v0, rt0 GROUP BY rt0.c2, rt0.c4, v0.c0, rt0.c0, v0.c1, v0.c2;
SELECT rt1.c0, rt1.c1, rt1.c2, v0.c1 FROM rt0, rt1, v0;
SELECT rt1.c0, rt1.c1, rt1.c2, v0.c1 FROM rt0, rt1, v0 WHERE ((((rt0.c2, 'e_', v0.c1)) BETWEEN (((((v0.c1, v0.c0, rt1.c0)) BETWEEN ((rt0.c0, rt0.c4, v0.c1)) AND ((v0.c1, rt0.c4, rt0.c4))), (- (rt1.c3)), v0.c1)) AND ((((((rt0.c3)AND(rt0.c1)))OR(rt0.c1)), '539191018', rt0.c0)))) UNION ALL SELECT ALL rt1.c0, rt1.c1, rt1.c2, v0.c1 FROM rt0, rt1, v0 WHERE ((NOT ((((rt0.c2, 'e_', v0.c1)) BETWEEN (((((v0.c1, v0.c0, rt1.c0)) BETWEEN ((rt0.c0, rt0.c4, v0.c1)) AND ((v0.c1, rt0.c4, rt0.c4))), (- (rt1.c3)), v0.c1)) AND ((((((rt0.c3)AND(rt0.c1)))OR(rt0.c1)), '539191018', rt0.c0)))))) UNION ALL SELECT ALL rt1.c0, rt1.c1, rt1.c2, v0.c1 FROM rt0, rt1, v0 WHERE ((((((rt0.c2, 'e_', v0.c1)) BETWEEN (((((v0.c1, v0.c0, rt1.c0)) BETWEEN ((rt0.c0, rt0.c4, v0.c1)) AND ((v0.c1, rt0.c4, rt0.c4))), (- (rt1.c3)), v0.c1)) AND ((((((rt0.c3)AND(rt0.c1)))OR(rt0.c1)), '539191018', rt0.c0)))) ISNULL));
SELECT rt1.c0, rt1.c1, rt1.c2, v0.c1 FROM rt0, rt1, v0;
SELECT DISTINCT rt0.c0, rt0.c1, rt1.c3, rt0.c3, rt1.c2, rt0.c4, rt0.c2, rt1.c0 FROM rt0, rt1;
SELECT DISTINCT rt0.c0, rt0.c1, rt1.c3, rt0.c3, rt1.c2, rt0.c4, rt0.c2, rt1.c0 FROM rt0, rt1 WHERE (json_patch(rt1.c4, rt1.c3)) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt1.c3, rt0.c3, rt1.c2, rt0.c4, rt0.c2, rt1.c0 FROM rt0, rt1 WHERE ((NOT (json_patch(rt1.c4, rt1.c3)))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt1.c3, rt0.c3, rt1.c2, rt0.c4, rt0.c2, rt1.c0 FROM rt0, rt1 WHERE (((json_patch(rt1.c4, rt1.c3)) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt1.c3, rt0.c3, rt1.c2, rt0.c4, rt0.c2, rt1.c0 FROM rt0, rt1;
SELECT rt1.c2, rt0.c2, rt1.c4, rt0.c0, rt0.c3, rt1.c1, rt1.c3, rt0.c1 FROM rt0, rt1 GROUP BY rt1.c2, rt0.c2, rt1.c4, rt0.c0, rt0.c3, rt1.c1, rt1.c3, rt0.c1;
SELECT rt1.c2, rt0.c2, rt1.c4, rt0.c0, rt0.c3, rt1.c1, rt1.c3, rt0.c1 FROM rt0, rt1 WHERE (rt1.c4) GROUP BY rt1.c2, rt0.c2, rt1.c4, rt0.c0, rt0.c3, rt1.c1, rt1.c3, rt0.c1 UNION SELECT ALL rt1.c2, rt0.c2, rt1.c4, rt0.c0, rt0.c3, rt1.c1, rt1.c3, rt0.c1 FROM rt0, rt1 WHERE ((NOT (rt1.c4))) GROUP BY rt1.c2, rt0.c2, rt1.c4, rt0.c0, rt0.c3, rt1.c1, rt1.c3, rt0.c1 UNION SELECT ALL rt1.c2, rt0.c2, rt1.c4, rt0.c0, rt0.c3, rt1.c1, rt1.c3, rt0.c1 FROM rt0, rt1 WHERE (((rt1.c4) ISNULL)) GROUP BY rt1.c2, rt0.c2, rt1.c4, rt0.c0, rt0.c3, rt1.c1, rt1.c3, rt0.c1;
SELECT rt1.c2, rt0.c2, rt1.c4, rt0.c0, rt0.c3, rt1.c1, rt1.c3, rt0.c1 FROM rt0, rt1 GROUP BY rt1.c2, rt0.c2, rt1.c4, rt0.c0, rt0.c3, rt1.c1, rt1.c3, rt0.c1;
SELECT rt1.c0, rt1.c1, rt1.c3, rt0.c2, rt0.c0, rt1.c2, rt0.c1, rt0.c4, rt0.c3 FROM rt0, rt1 GROUP BY rt1.c0, rt1.c1, rt1.c3, rt0.c2, rt0.c0, rt1.c2, rt0.c1, rt0.c4, rt0.c3;
SELECT rt1.c0, rt1.c1, rt1.c3, rt0.c2, rt0.c0, rt1.c2, rt0.c1, rt0.c4, rt0.c3 FROM rt0, rt1 GROUP BY rt1.c0, rt1.c1, rt1.c3, rt0.c2, rt0.c0, rt1.c2, rt0.c1, rt0.c4, rt0.c3 HAVING MAX(((rt0.c4)<(GROUP_CONCAT(SUM(rt0.c0))))) UNION ALL SELECT rt1.c0, rt1.c1, rt1.c3, rt0.c2, rt0.c0, rt1.c2, rt0.c1, rt0.c4, rt0.c3 FROM rt0, rt1 GROUP BY rt1.c0, rt1.c1, rt1.c3, rt0.c2, rt0.c0, rt1.c2, rt0.c1, rt0.c4, rt0.c3 HAVING (NOT (MAX(((rt0.c4)<(GROUP_CONCAT(SUM(rt0.c0))))))) UNION ALL SELECT rt1.c0, rt1.c1, rt1.c3, rt0.c2, rt0.c0, rt1.c2, rt0.c1, rt0.c4, rt0.c3 FROM rt0, rt1 GROUP BY rt1.c0, rt1.c1, rt1.c3, rt0.c2, rt0.c0, rt1.c2, rt0.c1, rt0.c4, rt0.c3 HAVING ((MAX(((rt0.c4)<(GROUP_CONCAT(SUM(rt0.c0)))))) ISNULL);
SELECT rt1.c4, rt1.c1, rt1.c3, rt1.c0, v0.c1, v0.c0, rt1.c2 FROM v0 FULL OUTER JOIN rt1 ON x'2765';
SELECT ALL rt1.c4, rt1.c1, rt1.c3, rt1.c0, v0.c1, v0.c0, rt1.c2 FROM v0 FULL OUTER JOIN rt1 ON x'2765' WHERE ((NOT (CASE WHEN rt1.c3 THEN v0.c1 ELSE rt1.c1 END))) UNION ALL SELECT ALL rt1.c4, rt1.c1, rt1.c3, rt1.c0, v0.c1, v0.c0, rt1.c2 FROM v0 FULL OUTER JOIN rt1 ON x'2765' WHERE ((NOT ((NOT (CASE WHEN rt1.c3 THEN v0.c1 ELSE rt1.c1 END))))) UNION ALL SELECT rt1.c4, rt1.c1, rt1.c3, rt1.c0, v0.c1, v0.c0, rt1.c2 FROM v0 FULL OUTER JOIN rt1 ON x'2765' WHERE ((((NOT (CASE WHEN rt1.c3 THEN v0.c1 ELSE rt1.c1 END))) ISNULL));
SELECT rt1.c4, rt1.c1, rt1.c3, rt1.c0, v0.c1, v0.c0, rt1.c2 FROM v0 FULL OUTER JOIN rt1 ON x'2765';
SELECT DISTINCT rt1.c3, v0.c1, rt1.c4, rt1.c0, v0.c2, rt1.c2, rt0.c1, rt1.c1, rt0.c4, rt0.c2 FROM rt0 FULL OUTER JOIN v0 ON (CASE rt0.c3  WHEN rt0.c2 THEN rt0.c3 END IN ()) CROSS JOIN rt1 ON rt1.c2;
SELECT DISTINCT rt1.c3, v0.c1, rt1.c4, rt1.c0, v0.c2, rt1.c2, rt0.c1, rt1.c1, rt0.c4, rt0.c2 FROM rt0 FULL OUTER JOIN v0 ON (CASE rt0.c3  WHEN rt0.c2 THEN rt0.c3 END IN ()) CROSS JOIN rt1 ON rt1.c2 WHERE ((+ ((((rt0.c4))>((rt0.c0)))))) UNION SELECT DISTINCT rt1.c3, v0.c1, rt1.c4, rt1.c0, v0.c2, rt1.c2, rt0.c1, rt1.c1, rt0.c4, rt0.c2 FROM rt0 FULL OUTER JOIN v0 ON (CASE rt0.c3  WHEN rt0.c2 THEN rt0.c3 END IN ()) CROSS JOIN rt1 ON rt1.c2 WHERE ((NOT ((+ ((((rt0.c4))>((rt0.c0)))))))) UNION SELECT DISTINCT rt1.c3, v0.c1, rt1.c4, rt1.c0, v0.c2, rt1.c2, rt0.c1, rt1.c1, rt0.c4, rt0.c2 FROM rt0 FULL OUTER JOIN v0 ON (CASE rt0.c3  WHEN rt0.c2 THEN rt0.c3 END IN ()) CROSS JOIN rt1 ON rt1.c2 WHERE ((((+ ((((rt0.c4))>((rt0.c0)))))) ISNULL));
SELECT DISTINCT rt1.c3, v0.c1, rt1.c4, rt1.c0, v0.c2, rt1.c2, rt0.c1, rt1.c1, rt0.c4, rt0.c2 FROM rt0 FULL OUTER JOIN v0 ON (CASE rt0.c3  WHEN rt0.c2 THEN rt0.c3 END IN ()) CROSS JOIN rt1 ON rt1.c2;
SELECT rt1.c4, rt0.c1, rt0.c3, rt1.c2, rt0.c4, v0.c2, v0.c0 FROM v0, rt0 NOT INDEXED, rt1 GROUP BY rt1.c4, rt0.c1, rt0.c3, rt1.c2, rt0.c4, v0.c2, v0.c0;
SELECT ALL rt1.c4, rt0.c1, rt0.c3, rt1.c2, rt0.c4, v0.c2, v0.c0 FROM v0, rt0, rt1 WHERE (((rt0.c3)<=(((rt0.c0)GLOB(rt1.c0))))) GROUP BY rt1.c4, rt0.c1, rt0.c3, rt1.c2, rt0.c4, v0.c2, v0.c0 UNION SELECT ALL rt1.c4, rt0.c1, rt0.c3, rt1.c2, rt0.c4, v0.c2, v0.c0 FROM v0, rt0, rt1 WHERE ((NOT (((rt0.c3)<=(((rt0.c0)GLOB(rt1.c0))))))) GROUP BY rt1.c4, rt0.c1, rt0.c3, rt1.c2, rt0.c4, v0.c2, v0.c0 UNION SELECT ALL rt1.c4, rt0.c1, rt0.c3, rt1.c2, rt0.c4, v0.c2, v0.c0 FROM v0, rt0, rt1 WHERE (((((rt0.c3)<=(((rt0.c0)GLOB(rt1.c0))))) ISNULL)) GROUP BY rt1.c4, rt0.c1, rt0.c3, rt1.c2, rt0.c4, v0.c2, v0.c0;
SELECT rt1.c4, rt0.c1, rt0.c3, rt1.c2, rt0.c4, v0.c2, v0.c0 FROM v0, rt0 NOT INDEXED, rt1 GROUP BY rt1.c4, rt0.c1, rt0.c3, rt1.c2, rt0.c4, v0.c2, v0.c0;
SELECT ALL rt1.c2, rt1.c0, rt1.c4 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c4;
SELECT ALL rt1.c2, rt1.c0, rt1.c4 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c4 HAVING rt1.c3 UNION ALL SELECT rt1.c2, rt1.c0, rt1.c4 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c4 HAVING (NOT (rt1.c3)) UNION ALL SELECT ALL rt1.c2, rt1.c0, rt1.c4 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c4 HAVING ((rt1.c3) ISNULL);
SELECT ALL rt1.c2, rt1.c0, rt1.c4 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c4;
SELECT ALL rt1.c2, rt1.c0, rt1.c4 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c4 HAVING rt1.c3 UNION ALL SELECT rt1.c2, rt1.c0, rt1.c4 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c4 HAVING (NOT (rt1.c3)) UNION ALL SELECT ALL rt1.c2, rt1.c0, rt1.c4 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c4 HAVING ((rt1.c3) ISNULL);
SELECT ALL rt1.c2, rt1.c0, rt1.c4 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c4;
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE (((((-1180150544)<<(v0.c1))) NOT BETWEEN (((v0.c1) IS TRUE)) AND (((((v0.c0)AND(v0.c0)))OR(v0.c1))))) ORDER BY CASE WHEN -1260927454 THEN ((v0.c0)>(v0.c0)) END DESC;
SELECT ALL * FROM v0 WHERE ((NOT (((((-1180150544)<<(v0.c1))) NOT BETWEEN (((v0.c1) IS TRUE)) AND (((((v0.c0)AND(v0.c0)))OR(v0.c1))))))) ORDER BY CASE WHEN -1260927454 THEN ((v0.c0)>(v0.c0)) END DESC;
SELECT * FROM v0 WHERE (((((((-1180150544)<<(v0.c1))) NOT BETWEEN (((v0.c1) IS TRUE)) AND (((((v0.c0)AND(v0.c0)))OR(v0.c1))))) ISNULL)) ORDER BY CASE WHEN -1260927454 THEN ((v0.c0)>(v0.c0)) END DESC;
SELECT * FROM v0;
SELECT DISTINCT rt1.c0, rt1.c4, rt1.c1, rt1.c3, rt1.c2 FROM rt1;
SELECT DISTINCT rt1.c0, rt1.c4, rt1.c1, rt1.c3, rt1.c2 FROM rt1 WHERE (UPPER(DISTINCT ((rt1.c1) NOT NULL))) UNION SELECT DISTINCT rt1.c0, rt1.c4, rt1.c1, rt1.c3, rt1.c2 FROM rt1 WHERE ((NOT (UPPER(DISTINCT ((rt1.c1) NOT NULL))))) UNION SELECT DISTINCT rt1.c0, rt1.c4, rt1.c1, rt1.c3, rt1.c2 FROM rt1 WHERE (((UPPER(DISTINCT ((rt1.c1) NOT NULL))) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c4, rt1.c1, rt1.c3, rt1.c2 FROM rt1;
SELECT rt0.c1, rt1.c2, rt0.c2, rt1.c0, rt1.c1 FROM rt0, rt1 GROUP BY rt0.c1, rt1.c2, rt0.c2, rt1.c0, rt1.c1;
SELECT ALL rt0.c1, rt1.c2, rt0.c2, rt1.c0, rt1.c1 FROM rt0, rt1 WHERE ((((rt0.c2, rt0.c1, rt1.c1)) BETWEEN ((((rt1.c0) NOT BETWEEN (rt0.c4) AND (rt0.c2)), ((rt0.c0) NOT BETWEEN (rt1.c2) AND (rt1.c4)), ((rt1.c1)|(rt1.c4)))) AND ((((rt1.c1)OR(rt0.c4)), CAST(rt1.c3 AS REAL), rt0.c2)))) GROUP BY rt0.c1, rt1.c2, rt0.c2, rt1.c0, rt1.c1 UNION SELECT ALL rt0.c1, rt1.c2, rt0.c2, rt1.c0, rt1.c1 FROM rt0, rt1 WHERE ((NOT ((((rt0.c2, rt0.c1, rt1.c1)) BETWEEN ((((rt1.c0) NOT BETWEEN (rt0.c4) AND (rt0.c2)), ((rt0.c0) NOT BETWEEN (rt1.c2) AND (rt1.c4)), ((rt1.c1)|(rt1.c4)))) AND ((((rt1.c1)OR(rt0.c4)), CAST(rt1.c3 AS REAL), rt0.c2)))))) GROUP BY rt0.c1, rt1.c2, rt0.c2, rt1.c0, rt1.c1 UNION SELECT ALL rt0.c1, rt1.c2, rt0.c2, rt1.c0, rt1.c1 FROM rt0, rt1 WHERE ((((((rt0.c2, rt0.c1, rt1.c1)) BETWEEN ((((rt1.c0) NOT BETWEEN (rt0.c4) AND (rt0.c2)), ((rt0.c0) NOT BETWEEN (rt1.c2) AND (rt1.c4)), ((rt1.c1)|(rt1.c4)))) AND ((((rt1.c1)OR(rt0.c4)), CAST(rt1.c3 AS REAL), rt0.c2)))) ISNULL)) GROUP BY rt0.c1, rt1.c2, rt0.c2, rt1.c0, rt1.c1;
SELECT rt0.c1, rt1.c2, rt0.c2, rt1.c0, rt1.c1 FROM rt0, rt1 GROUP BY rt0.c1, rt1.c2, rt0.c2, rt1.c0, rt1.c1;
SELECT v0.c1, rt1.c4, rt0.c3, v0.c2, rt0.c2, rt0.c0, rt1.c0, rt1.c1, rt0.c1, rt1.c3, v0.c0 FROM rt1 RIGHT OUTER JOIN rt0 ON (((rt0.c4 COLLATE RTRIM, ((v0.c2)AND(NULL)), rt0.c4 COLLATE BINARY, CAST(rt0.c1 AS BLOB), ABS(rt1.c1), CAST(rt1.c0 AS TEXT), CASE WHEN rt0.c1 THEN rt1.c0 END))!=((((((((((rt1.c4)AND(rt0.c4)))AND(v0.c2)))OR(v0.c2)))AND(rt0.c4)), (rt0.c1 IN (rt1.c4)), rt0.c4, CAST(rt1.c4 AS NUMERIC), ((v0.c1) BETWEEN (rt1.c4) AND (v0.c2)), rt0.c1 COLLATE NOCASE, (rt1.c0 IN (x'', rt1.c4))))) INNER JOIN v0 ON ((rt1.c1)%(x'')) COLLATE NOCASE GROUP BY v0.c1, rt1.c4, rt0.c3, v0.c2, rt0.c2, rt0.c0, rt1.c0, rt1.c1, rt0.c1, rt1.c3, v0.c0;
SELECT * FROM rt0, v0;
SELECT * FROM rt0, v0 WHERE (CAST(((rt0.c3)<<(rt0.c0)) AS NUMERIC)) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((NOT (CAST(((rt0.c3)<<(rt0.c0)) AS NUMERIC)))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE (((CAST(((rt0.c3)<<(rt0.c0)) AS NUMERIC)) ISNULL));
SELECT * FROM rt0, v0;
SELECT DISTINCT v0.c0, rt1.c0, v0.c2, rt1.c4, rt1.c2, v0.c1, rt1.c1, rt1.c3 FROM rt1, v0;
SELECT DISTINCT v0.c0, rt1.c0, v0.c2, rt1.c4, rt1.c2, v0.c1, rt1.c1, rt1.c3 FROM rt1, v0 WHERE ((~ (rt1.c1)) COLLATE RTRIM COLLATE NOCASE) UNION SELECT DISTINCT v0.c0, rt1.c0, v0.c2, rt1.c4, rt1.c2, v0.c1, rt1.c1, rt1.c3 FROM rt1, v0 WHERE ((NOT ((~ (rt1.c1)) COLLATE RTRIM COLLATE NOCASE))) UNION SELECT DISTINCT v0.c0, rt1.c0, v0.c2, rt1.c4, rt1.c2, v0.c1, rt1.c1, rt1.c3 FROM rt1, v0 WHERE ((((~ (rt1.c1)) COLLATE RTRIM COLLATE NOCASE) ISNULL));
SELECT DISTINCT v0.c0, rt1.c0, v0.c2, rt1.c4, rt1.c2, v0.c1, rt1.c1, rt1.c3 FROM rt1, v0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE (x'') GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (x''))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE (((x'') ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt1.c0, rt1.c4, rt1.c3 FROM rt1 GROUP BY rt1.c0, rt1.c4, rt1.c3;
SELECT ALL rt1.c0, rt1.c4, rt1.c3 FROM rt1 GROUP BY rt1.c0, rt1.c4, rt1.c3 HAVING SUM(CASE WHEN rt1.c4 THEN -1.803418434E9 ELSE MAX(AVG(GROUP_CONCAT('-1803418434'))) END) UNION ALL SELECT ALL rt1.c0, rt1.c4, rt1.c3 FROM rt1 GROUP BY rt1.c0, rt1.c4, rt1.c3 HAVING (NOT (SUM(CASE WHEN rt1.c4 THEN -1.803418434E9 ELSE MAX(AVG(GROUP_CONCAT('-1803418434'))) END))) UNION ALL SELECT ALL rt1.c0, rt1.c4, rt1.c3 FROM rt1 NOT INDEXED GROUP BY rt1.c0, rt1.c4, rt1.c3 HAVING ((SUM(CASE WHEN rt1.c4 THEN -1.803418434E9 ELSE MAX(AVG(GROUP_CONCAT('-1803418434'))) END)) ISNULL);
SELECT ALL * FROM rt1, rt0 RIGHT OUTER JOIN v0 ON CASE WHEN rt1.c0 COLLATE RTRIM THEN (+ (rt1.c0)) END;
SELECT ALL * FROM rt1, rt0 RIGHT OUTER JOIN v0 ON CASE WHEN rt1.c0 COLLATE RTRIM THEN (+ (rt1.c0)) END WHERE (((((((rt0.c1) IS TRUE))AND(0.1553408608954664)))AND(CASE rt0.c2  WHEN rt0.c0 THEN v0.c0 WHEN rt0.c4 THEN rt0.c1 WHEN v0.c2 THEN rt0.c2 WHEN v0.c2 THEN rt1.c1 WHEN rt0.c3 THEN rt1.c3 END))) UNION ALL SELECT ALL * FROM rt1, rt0 RIGHT OUTER JOIN v0 ON CASE WHEN rt1.c0 COLLATE RTRIM THEN (+ (rt1.c0)) END WHERE ((NOT (((((((rt0.c1) IS TRUE))AND(0.1553408608954664)))AND(CASE rt0.c2  WHEN rt0.c0 THEN v0.c0 WHEN rt0.c4 THEN rt0.c1 WHEN v0.c2 THEN rt0.c2 WHEN v0.c2 THEN rt1.c1 WHEN rt0.c3 THEN rt1.c3 END))))) UNION ALL SELECT * FROM rt1, rt0 RIGHT OUTER JOIN v0 ON CASE WHEN rt1.c0 COLLATE RTRIM THEN (+ (rt1.c0)) END WHERE (((((((((rt0.c1) IS TRUE))AND(0.1553408608954664)))AND(CASE rt0.c2  WHEN rt0.c0 THEN v0.c0 WHEN rt0.c4 THEN rt0.c1 WHEN v0.c2 THEN rt0.c2 WHEN v0.c2 THEN rt1.c1 WHEN rt0.c3 THEN rt1.c3 END))) ISNULL));
SELECT ALL * FROM rt1, rt0 RIGHT OUTER JOIN v0 ON CASE WHEN rt1.c0 COLLATE RTRIM THEN (+ (rt1.c0)) END;
SELECT DISTINCT * FROM rt1, rt0, v0;
SELECT DISTINCT * FROM rt1, rt0, v0 WHERE (rt0.c4) UNION SELECT DISTINCT * FROM rt1, rt0, v0 WHERE ((NOT (rt0.c4))) UNION SELECT DISTINCT * FROM rt1, rt0, v0 WHERE (((rt0.c4) ISNULL));
SELECT DISTINCT * FROM rt1, rt0, v0;
SELECT rt0.c3, rt1.c3, rt1.c2, rt1.c1, rt1.c4, rt1.c0 FROM rt1, rt0 GROUP BY rt0.c3, rt1.c3, rt1.c2, rt1.c1, rt1.c4, rt1.c0;
SELECT rt0.c3, rt1.c3, rt1.c2, rt1.c1, rt1.c4, rt1.c0 FROM rt1, rt0 WHERE ((CASE WHEN x'' THEN rt1.c4 ELSE rt1.c2 END IN ())) GROUP BY rt0.c3, rt1.c3, rt1.c2, rt1.c1, rt1.c4, rt1.c0 UNION SELECT ALL rt0.c3, rt1.c3, rt1.c2, rt1.c1, rt1.c4, rt1.c0 FROM rt1, rt0 WHERE ((NOT ((CASE WHEN x'' THEN rt1.c4 ELSE rt1.c2 END IN ())))) GROUP BY rt0.c3, rt1.c3, rt1.c2, rt1.c1, rt1.c4, rt1.c0 UNION SELECT ALL rt0.c3, rt1.c3, rt1.c2, rt1.c1, rt1.c4, rt1.c0 FROM rt1, rt0 WHERE ((((CASE WHEN x'' THEN rt1.c4 ELSE rt1.c2 END IN ())) ISNULL)) GROUP BY rt0.c3, rt1.c3, rt1.c2, rt1.c1, rt1.c4, rt1.c0;
SELECT rt0.c3, rt1.c3, rt1.c2, rt1.c1, rt1.c4, rt1.c0 FROM rt1, rt0 GROUP BY rt0.c3, rt1.c3, rt1.c2, rt1.c1, rt1.c4, rt1.c0;
SELECT rt1.c3 FROM rt0, rt1, v0 GROUP BY rt1.c3;
SELECT ALL rt1.c3 FROM rt0, rt1, v0 GROUP BY rt1.c3 HAVING TOTAL(TOTAL(MIN(TOTAL(GROUP_CONCAT(v0.c1))))) UNION ALL SELECT ALL rt1.c3 FROM rt0, rt1, v0 GROUP BY rt1.c3 HAVING (NOT (TOTAL(TOTAL(MIN(TOTAL(GROUP_CONCAT(v0.c1))))))) UNION ALL SELECT rt1.c3 FROM rt0, rt1, v0 GROUP BY rt1.c3 HAVING ((TOTAL(TOTAL(MIN(TOTAL(GROUP_CONCAT(v0.c1)))))) ISNULL);
SELECT * FROM v0, rt0, rt1;
SELECT * FROM v0, rt0, rt1 WHERE (CASE WHEN CASE WHEN rt1.c1 THEN v0.c0 WHEN v0.c1 THEN rt1.c0 WHEN v0.c1 THEN rt1.c1 ELSE rt0.c4 END THEN CAST(rt0.c0 AS REAL) END) UNION ALL SELECT ALL * FROM v0, rt0, rt1 WHERE ((NOT (CASE WHEN CASE WHEN rt1.c1 THEN v0.c0 WHEN v0.c1 THEN rt1.c0 WHEN v0.c1 THEN rt1.c1 ELSE rt0.c4 END THEN CAST(rt0.c0 AS REAL) END))) UNION ALL SELECT ALL * FROM v0, rt0, rt1 WHERE (((CASE WHEN CASE WHEN rt1.c1 THEN v0.c0 WHEN v0.c1 THEN rt1.c0 WHEN v0.c1 THEN rt1.c1 ELSE rt0.c4 END THEN CAST(rt0.c0 AS REAL) END) ISNULL));
SELECT * FROM v0, rt0, rt1;
SELECT DISTINCT * FROM rt1, rt0, v0;
SELECT DISTINCT * FROM rt1, rt0, v0 WHERE (x'a3ee') UNION SELECT DISTINCT * FROM rt1, rt0, v0 WHERE ((NOT (x'a3ee'))) UNION SELECT DISTINCT * FROM rt1, rt0, v0 WHERE (((x'a3ee') ISNULL));
SELECT DISTINCT * FROM rt1, rt0, v0;
SELECT ALL v0.c2, rt0.c0, v0.c1, v0.c0 FROM v0, rt0 GROUP BY v0.c2, rt0.c0, v0.c1, v0.c0;
SELECT v0.c2, rt0.c0, v0.c1, v0.c0 FROM v0, rt0 WHERE (((((0.19008889307304733)&(rt0.c3))) ISNULL)) GROUP BY v0.c2, rt0.c0, v0.c1, v0.c0 UNION SELECT v0.c2, rt0.c0, v0.c1, v0.c0 FROM v0, rt0 WHERE ((NOT (((((0.19008889307304733)&(rt0.c3))) ISNULL)))) GROUP BY v0.c2, rt0.c0, v0.c1, v0.c0 UNION SELECT v0.c2, rt0.c0, v0.c1, v0.c0 FROM v0, rt0 WHERE (((((((0.19008889307304733)&(rt0.c3))) ISNULL)) ISNULL)) GROUP BY v0.c2, rt0.c0, v0.c1, v0.c0;
SELECT ALL v0.c2, rt0.c0, v0.c1, v0.c0 FROM v0, rt0 GROUP BY v0.c2, rt0.c0, v0.c1, v0.c0;
SELECT rt1.c3, rt0.c4, rt0.c2, rt0.c0, rt1.c4, rt1.c1, v0.c1, rt0.c3, rt1.c2, rt0.c1 FROM v0, rt0, rt1 GROUP BY rt1.c3, rt0.c4, rt0.c2, rt0.c0, rt1.c4, rt1.c1, v0.c1, rt0.c3, rt1.c2, rt0.c1;
SELECT rt1.c3, rt0.c4, rt0.c2, rt0.c0, rt1.c4, rt1.c1, v0.c1, rt0.c3, rt1.c2, rt0.c1 FROM v0, rt0, rt1 GROUP BY rt1.c3, rt0.c4, rt0.c2, rt0.c0, rt1.c4, rt1.c1, v0.c1, rt0.c3, rt1.c2, rt0.c1 HAVING LIKELY(DISTINCT GROUP_CONCAT(SUM('-1938218066'))) UNION ALL SELECT ALL rt1.c3, rt0.c4, rt0.c2, rt0.c0, rt1.c4, rt1.c1, v0.c1, rt0.c3, rt1.c2, rt0.c1 FROM v0, rt0, rt1 GROUP BY rt1.c3, rt0.c4, rt0.c2, rt0.c0, rt1.c4, rt1.c1, v0.c1, rt0.c3, rt1.c2, rt0.c1 HAVING (NOT (LIKELY(DISTINCT GROUP_CONCAT(SUM('-1938218066'))))) UNION ALL SELECT rt1.c3, rt0.c4, rt0.c2, rt0.c0, rt1.c4, rt1.c1, v0.c1, rt0.c3, rt1.c2, rt0.c1 FROM v0, rt0, rt1 GROUP BY rt1.c3, rt0.c4, rt0.c2, rt0.c0, rt1.c4, rt1.c1, v0.c1, rt0.c3, rt1.c2, rt0.c1 HAVING ((LIKELY(DISTINCT GROUP_CONCAT(SUM('-1938218066')))) ISNULL);
SELECT * FROM rt1;
SELECT ALL * FROM rt1 WHERE (MIN((~ (rt1.c2)), rt1.c0)) UNION ALL SELECT * FROM rt1 WHERE ((NOT (MIN((~ (rt1.c2)), rt1.c0)))) UNION ALL SELECT ALL * FROM rt1 WHERE (((MIN((~ (rt1.c2)), rt1.c0)) ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT rt1.c0, rt1.c4 FROM rt1;
SELECT DISTINCT rt1.c0, rt1.c4 FROM rt1 WHERE (((CAST(rt1.c0 AS BLOB)) BETWEEN (((rt1.c2)>=(rt1.c4))) AND (CASE WHEN rt1.c2 THEN rt1.c3 END))) UNION SELECT DISTINCT rt1.c0, rt1.c4 FROM rt1 WHERE ((NOT (((CAST(rt1.c0 AS BLOB)) BETWEEN (((rt1.c2)>=(rt1.c4))) AND (CASE WHEN rt1.c2 THEN rt1.c3 END))))) UNION SELECT DISTINCT rt1.c0, rt1.c4 FROM rt1 WHERE (((((CAST(rt1.c0 AS BLOB)) BETWEEN (((rt1.c2)>=(rt1.c4))) AND (CASE WHEN rt1.c2 THEN rt1.c3 END))) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c4 FROM rt1;
SELECT ALL v0.c0, rt1.c4, rt1.c3, rt0.c2, rt1.c1, v0.c2, rt0.c1, v0.c1, rt1.c0 FROM rt1, rt0, v0 GROUP BY v0.c0, rt1.c4, rt1.c3, rt0.c2, rt1.c1, v0.c2, rt0.c1, v0.c1, rt1.c0;
SELECT v0.c0, rt1.c4, rt1.c3, rt0.c2, rt1.c1, v0.c2, rt0.c1, v0.c1, rt1.c0 FROM rt1, rt0, v0 WHERE (((((((((rt0.c0)OR((rt1.c2 IN ()))))OR((('')|(v0.c1)))))AND(CASE WHEN v0.c2 THEN rt0.c1 ELSE '-393528282' END)))AND(((((x'')OR(rt1.c1)))AND(rt1.c0))))) GROUP BY v0.c0, rt1.c4, rt1.c3, rt0.c2, rt1.c1, v0.c2, rt0.c1, v0.c1, rt1.c0 UNION SELECT ALL v0.c0, rt1.c4, rt1.c3, rt0.c2, rt1.c1, v0.c2, rt0.c1, v0.c1, rt1.c0 FROM rt1, rt0, v0 WHERE ((NOT (((((((((rt0.c0)OR((rt1.c2 IN ()))))OR((('')|(v0.c1)))))AND(CASE WHEN v0.c2 THEN rt0.c1 ELSE '-393528282' END)))AND(((((x'')OR(rt1.c1)))AND(rt1.c0))))))) GROUP BY v0.c0, rt1.c4, rt1.c3, rt0.c2, rt1.c1, v0.c2, rt0.c1, v0.c1, rt1.c0 UNION SELECT v0.c0, rt1.c4, rt1.c3, rt0.c2, rt1.c1, v0.c2, rt0.c1, v0.c1, rt1.c0 FROM rt1, rt0, v0 WHERE (((((((((((rt0.c0)OR((rt1.c2 IN ()))))OR((('')|(v0.c1)))))AND(CASE WHEN v0.c2 THEN rt0.c1 ELSE '-393528282' END)))AND(((((x'')OR(rt1.c1)))AND(rt1.c0))))) ISNULL)) GROUP BY v0.c0, rt1.c4, rt1.c3, rt0.c2, rt1.c1, v0.c2, rt0.c1, v0.c1, rt1.c0;
SELECT ALL v0.c0, rt1.c4, rt1.c3, rt0.c2, rt1.c1, v0.c2, rt0.c1, v0.c1, rt1.c0 FROM rt1, rt0, v0 GROUP BY v0.c0, rt1.c4, rt1.c3, rt0.c2, rt1.c1, v0.c2, rt0.c1, v0.c1, rt1.c0;
SELECT ALL rt1.c0, rt0.c4, rt0.c2, v0.c0, rt1.c2, v0.c1, v0.c2, rt0.c0, rt1.c4, rt1.c3, rt0.c1, rt1.c1, rt0.c3 FROM rt0, v0, rt1 GROUP BY rt1.c0, rt0.c4, rt0.c2, v0.c0, rt1.c2, v0.c1, v0.c2, rt0.c0, rt1.c4, rt1.c3, rt0.c1, rt1.c1, rt0.c3;
SELECT rt1.c0, rt0.c4, rt0.c2, v0.c0, rt1.c2, v0.c1, v0.c2, rt0.c0, rt1.c4, rt1.c3, rt0.c1, rt1.c1, rt0.c3 FROM rt0, v0, rt1 GROUP BY rt1.c0, rt0.c4, rt0.c2, v0.c0, rt1.c2, v0.c1, v0.c2, rt0.c0, rt1.c4, rt1.c3, rt0.c1, rt1.c1, rt0.c3 HAVING LOWER(AVG(rt0.c0)) UNION ALL SELECT rt1.c0, rt0.c4, rt0.c2, v0.c0, rt1.c2, v0.c1, v0.c2, rt0.c0, rt1.c4, rt1.c3, rt0.c1, rt1.c1, rt0.c3 FROM rt0, v0, rt1 GROUP BY rt1.c0, rt0.c4, rt0.c2, v0.c0, rt1.c2, v0.c1, v0.c2, rt0.c0, rt1.c4, rt1.c3, rt0.c1, rt1.c1, rt0.c3 HAVING (NOT (LOWER(AVG(rt0.c0)))) UNION ALL SELECT rt1.c0, rt0.c4, rt0.c2, v0.c0, rt1.c2, v0.c1, v0.c2, rt0.c0, rt1.c4, rt1.c3, rt0.c1, rt1.c1, rt0.c3 FROM rt0, v0, rt1 GROUP BY rt1.c0, rt0.c4, rt0.c2, v0.c0, rt1.c2, v0.c1, v0.c2, rt0.c0, rt1.c4, rt1.c3, rt0.c1, rt1.c1, rt0.c3 HAVING ((LOWER(AVG(rt0.c0))) ISNULL);
SELECT ALL rt1.c0, rt0.c4, rt0.c2, v0.c0, rt1.c2, v0.c1, v0.c2, rt0.c0, rt1.c4, rt1.c3, rt0.c1, rt1.c1, rt0.c3 FROM rt0, v0, rt1 GROUP BY rt1.c0, rt0.c4, rt0.c2, v0.c0, rt1.c2, v0.c1, v0.c2, rt0.c0, rt1.c4, rt1.c3, rt0.c1, rt1.c1, rt0.c3;
SELECT rt1.c0, rt0.c4, rt0.c2, v0.c0, rt1.c2, v0.c1, v0.c2, rt0.c0, rt1.c4, rt1.c3, rt0.c1, rt1.c1, rt0.c3 FROM rt0, v0, rt1 GROUP BY rt1.c0, rt0.c4, rt0.c2, v0.c0, rt1.c2, v0.c1, v0.c2, rt0.c0, rt1.c4, rt1.c3, rt0.c1, rt1.c1, rt0.c3 HAVING LOWER(AVG(rt0.c0)) UNION ALL SELECT rt1.c0, rt0.c4, rt0.c2, v0.c0, rt1.c2, v0.c1, v0.c2, rt0.c0, rt1.c4, rt1.c3, rt0.c1, rt1.c1, rt0.c3 FROM rt0, v0, rt1 GROUP BY rt1.c0, rt0.c4, rt0.c2, v0.c0, rt1.c2, v0.c1, v0.c2, rt0.c0, rt1.c4, rt1.c3, rt0.c1, rt1.c1, rt0.c3 HAVING (NOT (LOWER(AVG(rt0.c0)))) UNION ALL SELECT rt1.c0, rt0.c4, rt0.c2, v0.c0, rt1.c2, v0.c1, v0.c2, rt0.c0, rt1.c4, rt1.c3, rt0.c1, rt1.c1, rt0.c3 FROM rt0, v0, rt1 GROUP BY rt1.c0, rt0.c4, rt0.c2, v0.c0, rt1.c2, v0.c1, v0.c2, rt0.c0, rt1.c4, rt1.c3, rt0.c1, rt1.c1, rt0.c3 HAVING ((LOWER(AVG(rt0.c0))) ISNULL);
SELECT ALL rt1.c0, rt0.c4, rt0.c2, v0.c0, rt1.c2, v0.c1, v0.c2, rt0.c0, rt1.c4, rt1.c3, rt0.c1, rt1.c1, rt0.c3 FROM rt0, v0, rt1 GROUP BY rt1.c0, rt0.c4, rt0.c2, v0.c0, rt1.c2, v0.c1, v0.c2, rt0.c0, rt1.c4, rt1.c3, rt0.c1, rt1.c1, rt0.c3;
SELECT MAX(rt1.c1) FROM rt1 ORDER BY ((rt1.c0) BETWEEN (0.906035366952124) AND ((rt1.c4 IN ()))) ASC;
SELECT ALL * FROM v0, rt0;
SELECT * FROM v0, rt0 WHERE (((((v0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))+(CAST(0.6505154455796099 AS INTEGER)))) UNION ALL SELECT * FROM v0, rt0 WHERE ((NOT (((((v0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))+(CAST(0.6505154455796099 AS INTEGER)))))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE (((((((v0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))+(CAST(0.6505154455796099 AS INTEGER)))) ISNULL));
SELECT ALL * FROM v0, rt0;
SELECT DISTINCT v0.c1, v0.c0, v0.c2 FROM v0;
SELECT DISTINCT v0.c1, v0.c0, v0.c2 FROM v0 WHERE ((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c2))))AND(v0.c0 COLLATE RTRIM))) UNION SELECT DISTINCT v0.c1, v0.c0, v0.c2 FROM v0 WHERE ((NOT ((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c2))))AND(v0.c0 COLLATE RTRIM))))) UNION SELECT DISTINCT v0.c1, v0.c0, v0.c2 FROM v0 WHERE ((((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c2))))AND(v0.c0 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT v0.c1, v0.c0, v0.c2 FROM v0;
SELECT rt0.c4, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c1;
SELECT ALL rt0.c4, rt0.c3, rt0.c1 FROM rt0 WHERE ((((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c4)), ((((NULL)AND(rt0.c1)))OR(rt0.c2)), (((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3))), json(rt0.c2), ('-871273808' IN ())))<=((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c3)), '0.7808877956763992', (+ (rt0.c2)), ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c4)), CASE rt0.c3  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)))) GROUP BY rt0.c4, rt0.c3, rt0.c1 UNION SELECT ALL rt0.c4, rt0.c3, rt0.c1 FROM rt0 WHERE ((NOT ((((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c4)), ((((NULL)AND(rt0.c1)))OR(rt0.c2)), (((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3))), json(rt0.c2), ('-871273808' IN ())))<=((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c3)), '0.7808877956763992', (+ (rt0.c2)), ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c4)), CASE rt0.c3  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)))))) GROUP BY rt0.c4, rt0.c3, rt0.c1 UNION SELECT ALL rt0.c4, rt0.c3, rt0.c1 FROM rt0 WHERE ((((((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c4)), ((((NULL)AND(rt0.c1)))OR(rt0.c2)), (((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3))), json(rt0.c2), ('-871273808' IN ())))<=((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c3)), '0.7808877956763992', (+ (rt0.c2)), ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c4)), CASE rt0.c3  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)))) ISNULL)) GROUP BY rt0.c4, rt0.c3, rt0.c1;
SELECT rt0.c4, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c1;
SELECT rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c1;
SELECT ALL rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c1;
SELECT ALL rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c1;
SELECT * FROM v0;
SELECT * FROM v0 WHERE ((((((v0.c1)) BETWEEN ((v0.c2)) AND ((v0.c1))))<<(((v0.c2) BETWEEN (v0.c0) AND (v0.c1))))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT ((((((v0.c1)) BETWEEN ((v0.c2)) AND ((v0.c1))))<<(((v0.c2) BETWEEN (v0.c0) AND (v0.c1))))))) UNION ALL SELECT * FROM v0 WHERE ((((((((v0.c1)) BETWEEN ((v0.c2)) AND ((v0.c1))))<<(((v0.c2) BETWEEN (v0.c0) AND (v0.c1))))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT v0.c0, rt0.c2, rt0.c1 FROM rt0, v0 RIGHT OUTER JOIN rt1 ON CASE WHEN rt1.c1 COLLATE RTRIM THEN 0X3d0bd430 WHEN LAST_INSERT_ROWID() THEN rt1.c2 WHEN ((rt0.c0)%(v0.c1)) THEN 0X23fefedd END;
SELECT DISTINCT v0.c0, rt0.c2, rt0.c1 FROM rt0, v0 RIGHT OUTER JOIN rt1 ON CASE WHEN rt1.c1 COLLATE RTRIM THEN 0x3d0bd430 WHEN LAST_INSERT_ROWID() THEN rt1.c2 WHEN ((rt0.c0)%(v0.c1)) THEN 0x23fefedd END WHERE ((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((((rt1.c2) NOT BETWEEN (v0.c2) AND (v0.c0)))))) UNION SELECT DISTINCT v0.c0, rt0.c2, rt0.c1 FROM rt0, v0 RIGHT OUTER JOIN rt1 ON CASE WHEN rt1.c1 COLLATE RTRIM THEN 0X3d0bd430 WHEN LAST_INSERT_ROWID() THEN rt1.c2 WHEN ((rt0.c0)%(v0.c1)) THEN 0x23fefedd END WHERE ((NOT ((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((((rt1.c2) NOT BETWEEN (v0.c2) AND (v0.c0)))))))) UNION SELECT DISTINCT v0.c0, rt0.c2, rt0.c1 FROM rt0, v0 RIGHT OUTER JOIN rt1 ON CASE WHEN rt1.c1 COLLATE RTRIM THEN 0X3d0bd430 WHEN LAST_INSERT_ROWID() THEN rt1.c2 WHEN ((rt0.c0)%(v0.c1)) THEN 0X23fefedd END WHERE ((((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((((rt1.c2) NOT BETWEEN (v0.c2) AND (v0.c0)))))) ISNULL));
SELECT DISTINCT v0.c0, rt0.c2, rt0.c1 FROM rt0, v0 RIGHT OUTER JOIN rt1 ON CASE WHEN rt1.c1 COLLATE RTRIM THEN 0X3d0bd430 WHEN LAST_INSERT_ROWID() THEN rt1.c2 WHEN ((rt0.c0)%(v0.c1)) THEN 0X23fefedd END;
SELECT rt0.c2, rt0.c0, rt0.c4, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c4, rt0.c1, rt0.c3;
SELECT rt0.c2, rt0.c0, rt0.c4, rt0.c1, rt0.c3 FROM rt0 WHERE ((NOT (((0.5360203515620315) NOTNULL)))) GROUP BY rt0.c2, rt0.c0, rt0.c4, rt0.c1, rt0.c3 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c4, rt0.c1, rt0.c3 FROM rt0 WHERE ((NOT ((NOT (((0.5360203515620315) NOTNULL)))))) GROUP BY rt0.c2, rt0.c0, rt0.c4, rt0.c1, rt0.c3 UNION SELECT rt0.c2, rt0.c0, rt0.c4, rt0.c1, rt0.c3 FROM rt0 WHERE ((((NOT (((0.5360203515620315) NOTNULL)))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c4, rt0.c1, rt0.c3;
SELECT rt0.c2, rt0.c0, rt0.c4, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c4, rt0.c1, rt0.c3;
SELECT v0.c2, v0.c1 FROM v0 GROUP BY v0.c2, v0.c1;
SELECT v0.c2, v0.c1 FROM v0 GROUP BY v0.c2, v0.c1 HAVING '0.8361598605982917' UNION ALL SELECT ALL v0.c2, v0.c1 FROM v0 GROUP BY v0.c2, v0.c1 HAVING (NOT ('0.8361598605982917')) UNION ALL SELECT ALL v0.c2, v0.c1 FROM v0 GROUP BY v0.c2, v0.c1 HAVING (('0.8361598605982917') ISNULL);
SELECT v0.c2, v0.c1 FROM v0 GROUP BY v0.c2, v0.c1;
SELECT v0.c2, v0.c1 FROM v0 GROUP BY v0.c2, v0.c1 HAVING '0.8361598605982917' UNION ALL SELECT ALL v0.c2, v0.c1 FROM v0 GROUP BY v0.c2, v0.c1 HAVING (NOT ('0.8361598605982917')) UNION ALL SELECT ALL v0.c2, v0.c1 FROM v0 GROUP BY v0.c2, v0.c1 HAVING (('0.8361598605982917') ISNULL);
SELECT v0.c2, v0.c1 FROM v0 GROUP BY v0.c2, v0.c1;
SELECT ALL * FROM rt1;
SELECT * FROM rt1 WHERE (((CASE rt1.c0  WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c2 ELSE rt1.c3 END)>=('Lrc'))) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT (((CASE rt1.c0  WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c2 ELSE rt1.c3 END)>=('Lrc'))))) UNION ALL SELECT ALL * FROM rt1 WHERE (((((CASE rt1.c0  WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c2 ELSE rt1.c3 END)>=('Lrc'))) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT v0.c1, v0.c0, rt0.c2, rt0.c3, rt1.c1, rt0.c0, rt0.c4, rt1.c4, rt1.c0 FROM rt1 LEFT OUTER JOIN v0 ON CASE WHEN ((rt1.c1)/(rt1.c2)) THEN CASE WHEN rt1.c0 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c0 THEN v0.c1 WHEN v0.c1 THEN rt1.c0 ELSE v0.c1 END ELSE ((v0.c1) BETWEEN (v0.c0) AND (rt0.c1)) END RIGHT OUTER JOIN rt0 ON (((((((((((((rt1.c3)AND(v0.c2)))AND(rt1.c0)))OR(v0.c2)))AND(rt0.c4)))OR(rt0.c3)))OR(rt1.c1)) IN ());
SELECT v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0;
SELECT v0.c1, v0.c2, v0.c0 FROM v0 WHERE (((((v0.c2) IS FALSE))<>(((((((((((((v0.c0)OR(v0.c0)))AND(v0.c1)))AND(v0.c1)))OR(v0.c0)))AND(v0.c1)))AND(v0.c1))))) GROUP BY v0.c1, v0.c2, v0.c0 UNION SELECT ALL v0.c1, v0.c2, v0.c0 FROM v0 WHERE ((NOT (((((v0.c2) IS FALSE))!=(((((((((((((v0.c0)OR(v0.c0)))AND(v0.c1)))AND(v0.c1)))OR(v0.c0)))AND(v0.c1)))AND(v0.c1))))))) GROUP BY v0.c1, v0.c2, v0.c0 UNION SELECT ALL v0.c1, v0.c2, v0.c0 FROM v0 WHERE (((((((v0.c2) IS FALSE))!=(((((((((((((v0.c0)OR(v0.c0)))AND(v0.c1)))AND(v0.c1)))OR(v0.c0)))AND(v0.c1)))AND(v0.c1))))) ISNULL)) GROUP BY v0.c1, v0.c2, v0.c0;
SELECT v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0;
SELECT rt1.c3 FROM rt1, rt0 GROUP BY rt1.c3;
SELECT rt1.c3 FROM rt1, rt0 GROUP BY rt1.c3 HAVING rt0.c3 UNION ALL SELECT ALL rt1.c3 FROM rt1, rt0 GROUP BY rt1.c3 HAVING (NOT (rt0.c3)) UNION ALL SELECT rt1.c3 FROM rt1, rt0 GROUP BY rt1.c3 HAVING ((rt0.c3) ISNULL);
SELECT rt1.c3 FROM rt1, rt0 GROUP BY rt1.c3;
SELECT rt1.c3 FROM rt1, rt0 GROUP BY rt1.c3 HAVING rt0.c3 UNION ALL SELECT ALL rt1.c3 FROM rt1, rt0 GROUP BY rt1.c3 HAVING (NOT (rt0.c3)) UNION ALL SELECT rt1.c3 FROM rt1, rt0 GROUP BY rt1.c3 HAVING ((rt0.c3) ISNULL);
SELECT rt1.c3 FROM rt1, rt0 GROUP BY rt1.c3;
SELECT ALL rt1.c2, rt1.c0, rt1.c3, rt1.c4 FROM rt1;
SELECT rt1.c2, rt1.c0, rt1.c3, rt1.c4 FROM rt1 WHERE (CAST((rt1.c1 IN ()) AS INTEGER)) UNION ALL SELECT rt1.c2, rt1.c0, rt1.c3, rt1.c4 FROM rt1 WHERE ((NOT (CAST((rt1.c1 IN ()) AS INTEGER)))) UNION ALL SELECT ALL rt1.c2, rt1.c0, rt1.c3, rt1.c4 FROM rt1 WHERE (((CAST((rt1.c1 IN ()) AS INTEGER)) ISNULL));
SELECT ALL rt1.c2, rt1.c0, rt1.c3, rt1.c4 FROM rt1;
SELECT DISTINCT * FROM rt0, rt1 CROSS JOIN v0 ON ((((rt0.c3) ISNULL))%(rt1.c4));
SELECT DISTINCT * FROM rt0, rt1 CROSS JOIN v0 ON ((((rt0.c3) ISNULL))%(rt1.c4)) WHERE (v0.c1 COLLATE RTRIM COLLATE NOCASE COLLATE NOCASE) UNION SELECT DISTINCT * FROM rt0, rt1 CROSS JOIN v0 ON ((((rt0.c3) ISNULL))%(rt1.c4)) WHERE ((NOT (v0.c1 COLLATE RTRIM COLLATE NOCASE COLLATE NOCASE))) UNION SELECT DISTINCT * FROM rt0, rt1 CROSS JOIN v0 ON ((((rt0.c3) ISNULL))%(rt1.c4)) WHERE (((v0.c1 COLLATE RTRIM COLLATE NOCASE COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM rt0, rt1 CROSS JOIN v0 ON ((((rt0.c3) ISNULL))%(rt1.c4));
SELECT rt1.c2, rt0.c4, rt0.c3, rt1.c3, rt0.c1, rt0.c0, rt1.c1, rt0.c2 FROM rt0, rt1 GROUP BY rt1.c2, rt0.c4, rt0.c3, rt1.c3, rt0.c1, rt0.c0, rt1.c1, rt0.c2;
SELECT ALL rt1.c2, rt0.c4, rt0.c3, rt1.c3, rt0.c1, rt0.c0, rt1.c1, rt0.c2 FROM rt0, rt1 WHERE ((((((+ (rt0.c4)))OR((0.8175859157559784 IN ()))))AND(((rt1.c2) NOTNULL)))) GROUP BY rt1.c2, rt0.c4, rt0.c3, rt1.c3, rt0.c1, rt0.c0, rt1.c1, rt0.c2 UNION SELECT ALL rt1.c2, rt0.c4, rt0.c3, rt1.c3, rt0.c1, rt0.c0, rt1.c1, rt0.c2 FROM rt0, rt1 WHERE ((NOT ((((((+ (rt0.c4)))OR((0.8175859157559784 IN ()))))AND(((rt1.c2) NOTNULL)))))) GROUP BY rt1.c2, rt0.c4, rt0.c3, rt1.c3, rt0.c1, rt0.c0, rt1.c1, rt0.c2 UNION SELECT rt1.c2, rt0.c4, rt0.c3, rt1.c3, rt0.c1, rt0.c0, rt1.c1, rt0.c2 FROM rt0, rt1 WHERE ((((((((+ (rt0.c4)))OR((0.8175859157559784 IN ()))))AND(((rt1.c2) NOTNULL)))) ISNULL)) GROUP BY rt1.c2, rt0.c4, rt0.c3, rt1.c3, rt0.c1, rt0.c0, rt1.c1, rt0.c2;
SELECT rt1.c2, rt0.c4, rt0.c3, rt1.c3, rt0.c1, rt0.c0, rt1.c1, rt0.c2 FROM rt0, rt1 GROUP BY rt1.c2, rt0.c4, rt0.c3, rt1.c3, rt0.c1, rt0.c0, rt1.c1, rt0.c2;
SELECT v0.c1 FROM v0 GROUP BY v0.c1;
SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1 HAVING SUM(MAX(v0.c0)) UNION ALL SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1 HAVING (NOT (SUM(MAX(v0.c0)))) UNION ALL SELECT v0.c1 FROM v0 GROUP BY v0.c1 HAVING ((SUM(MAX(v0.c0))) ISNULL);
SELECT * FROM v0, rt0 CROSS JOIN rt1 ON (~ (((rt1.c4) NOT BETWEEN (v0.c1) AND (0.8560121324093588))));
SELECT * FROM v0, rt0 CROSS JOIN rt1 ON (~ (((rt1.c4) NOT BETWEEN (v0.c1) AND (0.8560121324093588)))) WHERE (((((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c1)))AND(('' IN (rt1.c3))))) UNION ALL SELECT ALL * FROM v0, rt0 CROSS JOIN rt1 ON (~ (((rt1.c4) NOT BETWEEN (v0.c1) AND (0.8560121324093588)))) WHERE ((NOT (((((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c1)))AND(('' IN (rt1.c3))))))) UNION ALL SELECT ALL * FROM v0, rt0 CROSS JOIN rt1 ON (~ (((rt1.c4) NOT BETWEEN (v0.c1) AND (0.8560121324093588)))) WHERE (((((((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c1)))AND(('' IN (rt1.c3))))) ISNULL));
SELECT * FROM v0, rt0 CROSS JOIN rt1 ON (~ (((rt1.c4) NOT BETWEEN (v0.c1) AND (0.8560121324093588))));
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE ((((CAST(v0.c2 AS TEXT)))<=(((((rt0.c0)) BETWEEN ((rt0.c4)) AND ((rt0.c3))))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT ((((CAST(v0.c2 AS TEXT)))<=(((((rt0.c0)) BETWEEN ((rt0.c4)) AND ((rt0.c3))))))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((((((CAST(v0.c2 AS TEXT)))<=(((((rt0.c0)) BETWEEN ((rt0.c4)) AND ((rt0.c3))))))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT rt0.c4, rt1.c3, rt1.c4, rt0.c1, v0.c2, rt0.c2, rt1.c1, v0.c1, rt0.c3, rt1.c0, rt0.c0 FROM v0 LEFT OUTER JOIN rt0 ON (((((((rt1.c4)OR(rt1.c1)))OR(v0.c2))))<=((((((((((rt1.c2)AND(rt1.c4)))AND(rt0.c3)))AND(rt1.c4)))AND(rt1.c3))))) LEFT OUTER JOIN rt1 ON (((rt0.c4)IS NOT(rt1.c0)) IN (UPPER(rt0.c0), (((rt1.c3)) NOT BETWEEN ((rt1.c1)) AND ((rt0.c4))))) GROUP BY rt0.c4, rt1.c3, rt1.c4, rt0.c1, v0.c2, rt0.c2, rt1.c1, v0.c1, rt0.c3, rt1.c0, rt0.c0;
SELECT ALL rt0.c4, rt0.c1, rt1.c3, rt0.c2, rt1.c0, rt0.c3, rt1.c2, rt0.c0, rt1.c4 FROM rt1, rt0 GROUP BY rt0.c4, rt0.c1, rt1.c3, rt0.c2, rt1.c0, rt0.c3, rt1.c2, rt0.c0, rt1.c4;
SELECT rt0.c4, rt0.c1, rt1.c3, rt0.c2, rt1.c0, rt0.c3, rt1.c2, rt0.c0, rt1.c4 FROM rt1, rt0 GROUP BY rt0.c4, rt0.c1, rt1.c3, rt0.c2, rt1.c0, rt0.c3, rt1.c2, rt0.c0, rt1.c4 HAVING TOTAL((MIN(AVG(TOTAL(rt1.c0))) IN (rt1.c4, rt1.c4))) UNION ALL SELECT ALL rt0.c4, rt0.c1, rt1.c3, rt0.c2, rt1.c0, rt0.c3, rt1.c2, rt0.c0, rt1.c4 FROM rt1, rt0 GROUP BY rt0.c4, rt0.c1, rt1.c3, rt0.c2, rt1.c0, rt0.c3, rt1.c2, rt0.c0, rt1.c4 HAVING (NOT (TOTAL((MIN(AVG(TOTAL(rt1.c0))) IN (rt1.c4, rt1.c4))))) UNION ALL SELECT ALL rt0.c4, rt0.c1, rt1.c3, rt0.c2, rt1.c0, rt0.c3, rt1.c2, rt0.c0, rt1.c4 FROM rt1, rt0 GROUP BY rt0.c4, rt0.c1, rt1.c3, rt0.c2, rt1.c0, rt0.c3, rt1.c2, rt0.c0, rt1.c4 HAVING ((TOTAL((MIN(AVG(TOTAL(rt1.c0))) IN (rt1.c4, rt1.c4)))) ISNULL);
SELECT MAX(rt0.c0) FROM rt1, rt0, v0;
SELECT rt0.c4, v0.c1, rt1.c2, rt0.c3, rt1.c0, v0.c0, rt1.c1 FROM rt1, v0, rt0;
SELECT rt0.c4, v0.c1, rt1.c2, rt0.c3, rt1.c0, v0.c0, rt1.c1 FROM rt1, v0, rt0 WHERE (((CAST(rt1.c4 AS BLOB))<(x'2fa8'))) UNION ALL SELECT rt0.c4, v0.c1, rt1.c2, rt0.c3, rt1.c0, v0.c0, rt1.c1 FROM rt1, v0, rt0 WHERE ((NOT (((CAST(rt1.c4 AS BLOB))<(x'2fa8'))))) UNION ALL SELECT rt0.c4, v0.c1, rt1.c2, rt0.c3, rt1.c0, v0.c0, rt1.c1 FROM rt1, v0, rt0 WHERE (((((CAST(rt1.c4 AS BLOB))<(x'2fa8'))) ISNULL));
SELECT rt0.c4, v0.c1, rt1.c2, rt0.c3, rt1.c0, v0.c0, rt1.c1 FROM rt1, v0, rt0;
SELECT DISTINCT rt0.c4, rt0.c3, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c4, rt0.c3, rt0.c0 FROM rt0 WHERE (((rt0.c2)IS NOT(CASE x'2cbf'  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c4 END))) UNION SELECT DISTINCT rt0.c4, rt0.c3, rt0.c0 FROM rt0 WHERE ((NOT (((rt0.c2)IS NOT(CASE x'2cbf'  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c4 END))))) UNION SELECT DISTINCT rt0.c4, rt0.c3, rt0.c0 FROM rt0 WHERE (((((rt0.c2)IS NOT(CASE x'2cbf'  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c4 END))) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c3, rt0.c0 FROM rt0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE (((((rt0.c1)IS(rt0.c3))) NOT BETWEEN ((rt0.c0 IN ())) AND (((((rt0.c3)OR(rt0.c4)))OR(rt0.c0))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c1)IS(rt0.c3))) NOT BETWEEN ((rt0.c0 IN ())) AND (((((rt0.c3)OR(rt0.c4)))OR(rt0.c0))))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE (((((((rt0.c1)IS(rt0.c3))) NOT BETWEEN ((rt0.c0 IN ())) AND (((((rt0.c3)OR(rt0.c4)))OR(rt0.c0))))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1, v0.c2, rt0.c0, rt1.c1, rt0.c3, v0.c0 FROM rt1, v0, rt0 GROUP BY rt0.c1, v0.c2, rt0.c0, rt1.c1, rt0.c3, v0.c0;
SELECT rt0.c1, v0.c2, rt0.c0, rt1.c1, rt0.c3, v0.c0 FROM rt1, v0, rt0 GROUP BY rt0.c1, v0.c2, rt0.c0, rt1.c1, rt0.c3, v0.c0 HAVING 0.13901980323522212 COLLATE RTRIM UNION ALL SELECT rt0.c1, v0.c2, rt0.c0, rt1.c1, rt0.c3, v0.c0 FROM rt1, v0, rt0 GROUP BY rt0.c1, v0.c2, rt0.c0, rt1.c1, rt0.c3, v0.c0 HAVING (NOT (0.13901980323522212 COLLATE RTRIM)) UNION ALL SELECT rt0.c1, v0.c2, rt0.c0, rt1.c1, rt0.c3, v0.c0 FROM rt1, v0, rt0 GROUP BY rt0.c1, v0.c2, rt0.c0, rt1.c1, rt0.c3, v0.c0 HAVING ((0.13901980323522212 COLLATE RTRIM) ISNULL);
SELECT ALL rt0.c1, v0.c2, rt0.c0, rt1.c1, rt0.c3, v0.c0 FROM rt1, v0, rt0 GROUP BY rt0.c1, v0.c2, rt0.c0, rt1.c1, rt0.c3, v0.c0;
SELECT rt0.c1, v0.c2, rt0.c0, rt1.c1, rt0.c3, v0.c0 FROM rt1, v0, rt0 GROUP BY rt0.c1, v0.c2, rt0.c0, rt1.c1, rt0.c3, v0.c0 HAVING 0.13901980323522212 COLLATE RTRIM UNION ALL SELECT rt0.c1, v0.c2, rt0.c0, rt1.c1, rt0.c3, v0.c0 FROM rt1, v0, rt0 GROUP BY rt0.c1, v0.c2, rt0.c0, rt1.c1, rt0.c3, v0.c0 HAVING (NOT (0.13901980323522212 COLLATE RTRIM)) UNION ALL SELECT rt0.c1, v0.c2, rt0.c0, rt1.c1, rt0.c3, v0.c0 FROM rt1, v0, rt0 GROUP BY rt0.c1, v0.c2, rt0.c0, rt1.c1, rt0.c3, v0.c0 HAVING ((0.13901980323522212 COLLATE RTRIM) ISNULL);
SELECT ALL rt0.c1, v0.c2, rt0.c0, rt1.c1, rt0.c3, v0.c0 FROM rt1, v0, rt0 GROUP BY rt0.c1, v0.c2, rt0.c0, rt1.c1, rt0.c3, v0.c0;
SELECT ALL * FROM v0, rt0 RIGHT OUTER JOIN rt1 ON NULLIF(DISTINCT ((rt1.c4) IS TRUE), load_extension(v0.c1));
SELECT ALL * FROM v0, rt0 RIGHT OUTER JOIN rt1 ON NULLIF(DISTINCT ((rt1.c4) IS TRUE), load_extension(v0.c1)) WHERE (CASE WHEN rt1.c1 THEN v0.c0 ELSE 0.7267968375307726 END COLLATE BINARY) UNION ALL SELECT * FROM v0, rt0 RIGHT OUTER JOIN rt1 ON NULLIF(DISTINCT ((rt1.c4) IS TRUE), load_extension(v0.c1)) WHERE ((NOT (CASE WHEN rt1.c1 THEN v0.c0 ELSE 0.7267968375307726 END COLLATE BINARY))) UNION ALL SELECT * FROM v0, rt0 RIGHT OUTER JOIN rt1 ON NULLIF(DISTINCT ((rt1.c4) IS TRUE), load_extension(v0.c1)) WHERE (((CASE WHEN rt1.c1 THEN v0.c0 ELSE 0.7267968375307726 END COLLATE BINARY) ISNULL));
SELECT ALL * FROM v0, rt0 RIGHT OUTER JOIN rt1 ON NULLIF(DISTINCT ((rt1.c4) IS TRUE), load_extension(v0.c1));
SELECT DISTINCT rt0.c3, rt0.c0, rt1.c4, v0.c1, v0.c0, v0.c2, rt1.c1, rt1.c3 FROM v0 FULL OUTER JOIN rt1 ON CAST(TRIM(DISTINCT rt1.c1, rt0.c2) AS INTEGER) FULL OUTER JOIN rt0 ON (((((('?PZoQZfS')AND(0.547578146286397)))OR(rt0.c1))) NOT BETWEEN (rt1.c1) AND (((rt0.c4)LIKE(x''))));
SELECT rt1.c4, rt0.c3, rt1.c2, rt0.c2, rt0.c1, rt1.c3, rt1.c1, v0.c0, rt1.c0 FROM rt1, v0, rt0 GROUP BY rt1.c4, rt0.c3, rt1.c2, rt0.c2, rt0.c1, rt1.c3, rt1.c1, v0.c0, rt1.c0;
SELECT rt1.c4, rt0.c3, rt1.c2, rt0.c2, rt0.c1, rt1.c3, rt1.c1, v0.c0, rt1.c0 FROM rt1, v0, rt0 WHERE (CASE rt0.c2  WHEN CASE 0.18353781143732095  WHEN rt1.c4 THEN rt1.c4 WHEN rt0.c1 THEN rt1.c1 WHEN rt1.c3 THEN v0.c0 ELSE rt0.c0 END THEN (((rt0.c1, v0.c1, rt0.c4))<=((rt0.c2, rt1.c2, rt0.c0))) WHEN IFNULL(rt0.c1, rt1.c4) THEN (+ (rt0.c4)) WHEN (rt0.c2 IN ()) THEN v0.c0 END) GROUP BY rt1.c4, rt0.c3, rt1.c2, rt0.c2, rt0.c1, rt1.c3, rt1.c1, v0.c0, rt1.c0 UNION SELECT rt1.c4, rt0.c3, rt1.c2, rt0.c2, rt0.c1, rt1.c3, rt1.c1, v0.c0, rt1.c0 FROM rt1, v0, rt0 WHERE ((NOT (CASE rt0.c2  WHEN CASE 0.18353781143732095  WHEN rt1.c4 THEN rt1.c4 WHEN rt0.c1 THEN rt1.c1 WHEN rt1.c3 THEN v0.c0 ELSE rt0.c0 END THEN (((rt0.c1, v0.c1, rt0.c4))<=((rt0.c2, rt1.c2, rt0.c0))) WHEN IFNULL(rt0.c1, rt1.c4) THEN (+ (rt0.c4)) WHEN (rt0.c2 IN ()) THEN v0.c0 END))) GROUP BY rt1.c4, rt0.c3, rt1.c2, rt0.c2, rt0.c1, rt1.c3, rt1.c1, v0.c0, rt1.c0 UNION SELECT rt1.c4, rt0.c3, rt1.c2, rt0.c2, rt0.c1, rt1.c3, rt1.c1, v0.c0, rt1.c0 FROM rt1, v0, rt0 WHERE (((CASE rt0.c2  WHEN CASE 0.18353781143732095  WHEN rt1.c4 THEN rt1.c4 WHEN rt0.c1 THEN rt1.c1 WHEN rt1.c3 THEN v0.c0 ELSE rt0.c0 END THEN (((rt0.c1, v0.c1, rt0.c4))<=((rt0.c2, rt1.c2, rt0.c0))) WHEN IFNULL(rt0.c1, rt1.c4) THEN (+ (rt0.c4)) WHEN (rt0.c2 IN ()) THEN v0.c0 END) ISNULL)) GROUP BY rt1.c4, rt0.c3, rt1.c2, rt0.c2, rt0.c1, rt1.c3, rt1.c1, v0.c0, rt1.c0;
SELECT rt1.c4, rt0.c3, rt1.c2, rt0.c2, rt0.c1, rt1.c3, rt1.c1, v0.c0, rt1.c0 FROM rt1, v0, rt0 GROUP BY rt1.c4, rt0.c3, rt1.c2, rt0.c2, rt0.c1, rt1.c3, rt1.c1, v0.c0, rt1.c0;
SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1;
SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1 HAVING COUNT(*) UNION ALL SELECT v0.c1 FROM v0 GROUP BY v0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1;
SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1 HAVING COUNT(*) UNION ALL SELECT v0.c1 FROM v0 GROUP BY v0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1;
SELECT ALL * FROM rt1, rt0;
SELECT ALL * FROM rt1, rt0 WHERE (((CASE rt0.c0  WHEN rt1.c3 THEN rt0.c4 END) BETWEEN (CASE rt0.c4  WHEN rt1.c4 THEN rt0.c1 WHEN rt1.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt1.c3 ELSE rt0.c4 END) AND (rt0.c1))) UNION ALL SELECT ALL * FROM rt1, rt0 WHERE ((NOT (((CASE rt0.c0  WHEN rt1.c3 THEN rt0.c4 END) BETWEEN (CASE rt0.c4  WHEN rt1.c4 THEN rt0.c1 WHEN rt1.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt1.c3 ELSE rt0.c4 END) AND (rt0.c1))))) UNION ALL SELECT * FROM rt1, rt0 WHERE (((((CASE rt0.c0  WHEN rt1.c3 THEN rt0.c4 END) BETWEEN (CASE rt0.c4  WHEN rt1.c4 THEN rt0.c1 WHEN rt1.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt1.c3 ELSE rt0.c4 END) AND (rt0.c1))) ISNULL));
SELECT ALL * FROM rt1, rt0;
SELECT DISTINCT * FROM rt1, v0, rt0;
SELECT DISTINCT * FROM rt1, v0, rt0 WHERE ((((((v0.c2))==((rt1.c3)))) NOT BETWEEN (rt0.c2 COLLATE BINARY) AND (((('', rt0.c2, v0.c1)) BETWEEN ((rt1.c3, rt1.c1, rt1.c2)) AND ((rt0.c1, rt0.c1, rt0.c2)))))) UNION SELECT DISTINCT * FROM rt1, v0, rt0 WHERE ((NOT ((((((v0.c2))==((rt1.c3)))) NOT BETWEEN (rt0.c2 COLLATE BINARY) AND (((('', rt0.c2, v0.c1)) BETWEEN ((rt1.c3, rt1.c1, rt1.c2)) AND ((rt0.c1, rt0.c1, rt0.c2)))))))) UNION SELECT DISTINCT * FROM rt1, v0, rt0 WHERE ((((((((v0.c2))==((rt1.c3)))) NOT BETWEEN (rt0.c2 COLLATE BINARY) AND (((('', rt0.c2, v0.c1)) BETWEEN ((rt1.c3, rt1.c1, rt1.c2)) AND ((rt0.c1, rt0.c1, rt0.c2)))))) ISNULL));
SELECT DISTINCT * FROM rt1, v0, rt0;
SELECT ALL rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0;
SELECT ALL rt1.c1, rt1.c0 FROM rt1 WHERE (CAST(CASE rt1.c2  WHEN rt1.c4 THEN rt1.c0 END AS BLOB)) GROUP BY rt1.c1, rt1.c0 UNION SELECT rt1.c1, rt1.c0 FROM rt1 WHERE ((NOT (CAST(CASE rt1.c2  WHEN rt1.c4 THEN rt1.c0 END AS BLOB)))) GROUP BY rt1.c1, rt1.c0 UNION SELECT rt1.c1, rt1.c0 FROM rt1 WHERE (((CAST(CASE rt1.c2  WHEN rt1.c4 THEN rt1.c0 END AS BLOB)) ISNULL)) GROUP BY rt1.c1, rt1.c0;
SELECT ALL rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0;
SELECT rt0.c2, rt1.c0, rt0.c3, rt1.c1, rt0.c0, rt1.c3, rt1.c4, rt1.c2, rt0.c1, rt0.c4 FROM rt0, rt1 GROUP BY rt0.c2, rt1.c0, rt0.c3, rt1.c1, rt0.c0, rt1.c3, rt1.c4, rt1.c2, rt0.c1, rt0.c4;
SELECT rt0.c2, rt1.c0, rt0.c3, rt1.c1, rt0.c0, rt1.c3, rt1.c4, rt1.c2, rt0.c1, rt0.c4 FROM rt0, rt1 GROUP BY rt0.c2, rt1.c0, rt0.c3, rt1.c1, rt0.c0, rt1.c3, rt1.c4, rt1.c2, rt0.c1, rt0.c4 HAVING ((MIN(SUM(rt0.c2))) NOTNULL) UNION ALL SELECT rt0.c2, rt1.c0, rt0.c3, rt1.c1, rt0.c0, rt1.c3, rt1.c4, rt1.c2, rt0.c1, rt0.c4 FROM rt0, rt1 GROUP BY rt0.c2, rt1.c0, rt0.c3, rt1.c1, rt0.c0, rt1.c3, rt1.c4, rt1.c2, rt0.c1, rt0.c4 HAVING (NOT (((MIN(SUM(rt0.c2))) NOTNULL))) UNION ALL SELECT ALL rt0.c2, rt1.c0, rt0.c3, rt1.c1, rt0.c0, rt1.c3, rt1.c4, rt1.c2, rt0.c1, rt0.c4 FROM rt0, rt1 GROUP BY rt0.c2, rt1.c0, rt0.c3, rt1.c1, rt0.c0, rt1.c3, rt1.c4, rt1.c2, rt0.c1, rt0.c4 HAVING ((((MIN(SUM(rt0.c2))) NOTNULL)) ISNULL);
SELECT * FROM rt0, rt1;
SELECT ALL * FROM rt0, rt1 WHERE (CASE WHEN rt0.c4 COLLATE NOCASE THEN ((rt0.c4)==(x'6ba1')) END) UNION ALL SELECT ALL * FROM rt0, rt1 WHERE ((NOT (CASE WHEN rt0.c4 COLLATE NOCASE THEN ((rt0.c4)=(x'6ba1')) END))) UNION ALL SELECT * FROM rt0, rt1 WHERE (((CASE WHEN rt0.c4 COLLATE NOCASE THEN ((rt0.c4)=(x'6ba1')) END) ISNULL));
SELECT * FROM rt0, rt1;
SELECT DISTINCT rt1.c2, rt1.c4, v0.c2, rt1.c3, v0.c0, rt1.c1, v0.c1, rt1.c0 FROM rt1, v0;
SELECT DISTINCT rt1.c2, rt1.c4, v0.c2, rt1.c3, v0.c0, rt1.c1, v0.c1, rt1.c0 FROM rt1, v0 WHERE ((((((NOT (0.27991607943234487)))AND((((0.40473045353532167))>=((rt1.c0))))))OR((((rt1.c3))>=((v0.c2)))))) UNION SELECT DISTINCT rt1.c2, rt1.c4, v0.c2, rt1.c3, v0.c0, rt1.c1, v0.c1, rt1.c0 FROM rt1, v0 WHERE ((NOT ((((((NOT (0.27991607943234487)))AND((((0.40473045353532167))>=((rt1.c0))))))OR((((rt1.c3))>=((v0.c2)))))))) UNION SELECT DISTINCT rt1.c2, rt1.c4, v0.c2, rt1.c3, v0.c0, rt1.c1, v0.c1, rt1.c0 FROM rt1, v0 WHERE ((((((((NOT (0.27991607943234487)))AND((((0.40473045353532167))>=((rt1.c0))))))OR((((rt1.c3))>=((v0.c2)))))) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c4, v0.c2, rt1.c3, v0.c0, rt1.c1, v0.c1, rt1.c0 FROM rt1, v0;
SELECT ALL v0.c0, rt0.c0, rt1.c4, rt0.c2, rt0.c3, v0.c2, rt0.c1, rt1.c0, rt1.c2, rt1.c3, rt1.c1, v0.c1 FROM rt1 CROSS JOIN rt0 ON rt0.c3 LEFT OUTER JOIN v0 ON ((CAST(rt0.c1 AS INTEGER))LIKE(rt1.c1)) GROUP BY v0.c0, rt0.c0, rt1.c4, rt0.c2, rt0.c3, v0.c2, rt0.c1, rt1.c0, rt1.c2, rt1.c3, rt1.c1, v0.c1;
SELECT ALL v0.c0, rt0.c0, rt1.c4, rt0.c2, rt0.c3, v0.c2, rt0.c1, rt1.c0, rt1.c2, rt1.c3, rt1.c1, v0.c1 FROM rt1 CROSS JOIN rt0 ON rt0.c3 LEFT OUTER JOIN v0 ON ((CAST(rt0.c1 AS INTEGER))LIKE(rt1.c1)) WHERE (((rt1.c4)*(rt1.c0)) COLLATE NOCASE) GROUP BY v0.c0, rt0.c0, rt1.c4, rt0.c2, rt0.c3, v0.c2, rt0.c1, rt1.c0, rt1.c2, rt1.c3, rt1.c1, v0.c1 UNION SELECT ALL v0.c0, rt0.c0, rt1.c4, rt0.c2, rt0.c3, v0.c2, rt0.c1, rt1.c0, rt1.c2, rt1.c3, rt1.c1, v0.c1 FROM rt1 CROSS JOIN rt0 ON rt0.c3 LEFT OUTER JOIN v0 ON ((CAST(rt0.c1 AS INTEGER))LIKE(rt1.c1)) WHERE ((NOT (((rt1.c4)*(rt1.c0)) COLLATE NOCASE))) GROUP BY v0.c0, rt0.c0, rt1.c4, rt0.c2, rt0.c3, v0.c2, rt0.c1, rt1.c0, rt1.c2, rt1.c3, rt1.c1, v0.c1 UNION SELECT ALL v0.c0, rt0.c0, rt1.c4, rt0.c2, rt0.c3, v0.c2, rt0.c1, rt1.c0, rt1.c2, rt1.c3, rt1.c1, v0.c1 FROM rt1 CROSS JOIN rt0 ON rt0.c3 LEFT OUTER JOIN v0 ON ((CAST(rt0.c1 AS INTEGER))LIKE(rt1.c1)) WHERE (((((rt1.c4)*(rt1.c0)) COLLATE NOCASE) ISNULL)) GROUP BY v0.c0, rt0.c0, rt1.c4, rt0.c2, rt0.c3, v0.c2, rt0.c1, rt1.c0, rt1.c2, rt1.c3, rt1.c1, v0.c1;
SELECT ALL v0.c0, rt0.c0, rt1.c4, rt0.c2, rt0.c3, v0.c2, rt0.c1, rt1.c0, rt1.c2, rt1.c3, rt1.c1, v0.c1 FROM rt1 CROSS JOIN rt0 ON rt0.c3 LEFT OUTER JOIN v0 ON ((CAST(rt0.c1 AS INTEGER))LIKE(rt1.c1)) GROUP BY v0.c0, rt0.c0, rt1.c4, rt0.c2, rt0.c3, v0.c2, rt0.c1, rt1.c0, rt1.c2, rt1.c3, rt1.c1, v0.c1;
SELECT v0.c0, rt0.c4, v0.c1, rt1.c0, rt0.c2, rt1.c4, rt1.c1 FROM v0 RIGHT OUTER JOIN rt1 ON (((v0.c2))<=((rt1.c4))) COLLATE RTRIM LEFT OUTER JOIN rt0 ON x'' GROUP BY v0.c0, rt0.c4, v0.c1, rt1.c0, rt0.c2, rt1.c4, rt1.c1;
SELECT ALL v0.c0, rt0.c4, v0.c1, rt1.c0, rt0.c2, rt1.c4, rt1.c1 FROM v0 RIGHT OUTER JOIN rt1 ON (((v0.c2))<=((rt1.c4))) COLLATE RTRIM LEFT OUTER JOIN rt0 ON x'' GROUP BY v0.c0, rt0.c4, v0.c1, rt1.c0, rt0.c2, rt1.c4, rt1.c1 HAVING (((TOTAL(rt1.c4)))<>((COUNT(TOTAL(rt1.c3))))) UNION ALL SELECT v0.c0, rt0.c4, v0.c1, rt1.c0, rt0.c2, rt1.c4, rt1.c1 FROM v0 RIGHT OUTER JOIN rt1 ON (((v0.c2))<=((rt1.c4))) COLLATE RTRIM LEFT OUTER JOIN rt0 ON x'' GROUP BY v0.c0, rt0.c4, v0.c1, rt1.c0, rt0.c2, rt1.c4, rt1.c1 HAVING (NOT ((((TOTAL(rt1.c4)))!=((COUNT(TOTAL(rt1.c3))))))) UNION ALL SELECT v0.c0, rt0.c4, v0.c1, rt1.c0, rt0.c2, rt1.c4, rt1.c1 FROM v0 RIGHT OUTER JOIN rt1 ON (((v0.c2))<=((rt1.c4))) COLLATE RTRIM LEFT OUTER JOIN rt0 ON x'' GROUP BY v0.c0, rt0.c4, v0.c1, rt1.c0, rt0.c2, rt1.c4, rt1.c1 HAVING (((((TOTAL(rt1.c4)))<>((COUNT(TOTAL(rt1.c3)))))) ISNULL);
SELECT MAX(((((((v0.c0) BETWEEN (rt1.c4) AND (rt1.c0)))OR(x'e1be')))AND(x''))) FROM v0, rt1, rt0 ORDER BY CASE WHEN (NOT (rt0.c2)) THEN CAST(rt0.c4 AS INTEGER) END DESC, rt0.c4 COLLATE BINARY  NULLS LAST;
SELECT ALL * FROM v0, rt0, rt1;
SELECT ALL * FROM v0, rt0, rt1 WHERE (ROUND((rt0.c3 IN ()), NULL)) UNION ALL SELECT ALL * FROM v0, rt0, rt1 WHERE ((NOT (ROUND((rt0.c3 IN ()), NULL)))) UNION ALL SELECT ALL * FROM v0, rt0, rt1 WHERE (((ROUND((rt0.c3 IN ()), NULL)) ISNULL));
SELECT ALL * FROM v0, rt0, rt1;
SELECT DISTINCT rt1.c1, rt1.c2, rt1.c3 FROM rt1 NOT INDEXED;
SELECT DISTINCT rt1.c1, rt1.c2, rt1.c3 FROM rt1 WHERE (rt1.c1) UNION SELECT DISTINCT rt1.c1, rt1.c2, rt1.c3 FROM rt1 WHERE ((NOT (rt1.c1))) UNION SELECT DISTINCT rt1.c1, rt1.c2, rt1.c3 FROM rt1 WHERE (((rt1.c1) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c2, rt1.c3 FROM rt1 NOT INDEXED;
SELECT ALL rt0.c3, rt1.c1, rt1.c4 FROM rt0 FULL OUTER JOIN rt1 ON (+ (NULL COLLATE BINARY)) GROUP BY rt0.c3, rt1.c1, rt1.c4;
SELECT ALL rt0.c3, rt1.c1, rt1.c4 FROM rt0 FULL OUTER JOIN rt1 ON (+ (NULL COLLATE BINARY)) WHERE (((((rt1.c2) IS TRUE)) ISNULL)) GROUP BY rt0.c3, rt1.c1, rt1.c4 UNION SELECT rt0.c3, rt1.c1, rt1.c4 FROM rt0 FULL OUTER JOIN rt1 ON (+ (NULL COLLATE BINARY)) WHERE ((NOT (((((rt1.c2) IS TRUE)) ISNULL)))) GROUP BY rt0.c3, rt1.c1, rt1.c4 UNION SELECT ALL rt0.c3, rt1.c1, rt1.c4 FROM rt0 FULL OUTER JOIN rt1 ON (+ (NULL COLLATE BINARY)) WHERE (((((((rt1.c2) IS TRUE)) ISNULL)) ISNULL)) GROUP BY rt0.c3, rt1.c1, rt1.c4;
SELECT ALL rt0.c3, rt1.c1, rt1.c4 FROM rt0 FULL OUTER JOIN rt1 ON (+ (NULL COLLATE BINARY)) GROUP BY rt0.c3, rt1.c1, rt1.c4;
SELECT v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2;
SELECT ALL v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2 HAVING MAX((v0.c1 IN ())) UNION ALL SELECT ALL v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2 HAVING (NOT (MAX((v0.c1 IN ())))) UNION ALL SELECT v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2 HAVING ((MAX((v0.c1 IN ()))) ISNULL);
SELECT v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2;
SELECT ALL v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2 HAVING MAX((v0.c1 IN ())) UNION ALL SELECT ALL v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2 HAVING (NOT (MAX((v0.c1 IN ())))) UNION ALL SELECT v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2 HAVING ((MAX((v0.c1 IN ()))) ISNULL);
SELECT v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2;
SELECT * FROM rt1, rt0;
SELECT * FROM rt1, rt0 WHERE ((+ (9.36663187E8))) UNION ALL SELECT ALL * FROM rt1, rt0 WHERE ((NOT ((+ (9.36663187E8))))) UNION ALL SELECT ALL * FROM rt1, rt0 WHERE ((((+ (9.36663187E8))) ISNULL));
SELECT * FROM rt1, rt0;
SELECT DISTINCT * FROM v0, rt1;
SELECT DISTINCT * FROM v0, rt1 WHERE ((((2.42562071E8 IN ())) NOTNULL)) UNION SELECT DISTINCT * FROM v0, rt1 WHERE ((NOT ((((2.42562071E8 IN ())) NOTNULL)))) UNION SELECT DISTINCT * FROM v0, rt1 WHERE ((((((2.42562071E8 IN ())) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM v0, rt1;
SELECT v0.c1, rt1.c1, rt0.c2, rt0.c4, rt1.c2, rt1.c4, rt0.c1, rt0.c3, v0.c2 FROM v0, rt1, rt0 GROUP BY v0.c1, rt1.c1, rt0.c2, rt0.c4, rt1.c2, rt1.c4, rt0.c1, rt0.c3, v0.c2;
SELECT ALL v0.c1, rt1.c1, rt0.c2, rt0.c4, rt1.c2, rt1.c4, rt0.c1, rt0.c3, v0.c2 FROM v0, rt1, rt0 WHERE ((+ ((((rt1.c4))<=((v0.c2)))))) GROUP BY v0.c1, rt1.c1, rt0.c2, rt0.c4, rt1.c2, rt1.c4, rt0.c1, rt0.c3, v0.c2 UNION SELECT v0.c1, rt1.c1, rt0.c2, rt0.c4, rt1.c2, rt1.c4, rt0.c1, rt0.c3, v0.c2 FROM v0, rt1, rt0 WHERE ((NOT ((+ ((((rt1.c4))<=((v0.c2)))))))) GROUP BY v0.c1, rt1.c1, rt0.c2, rt0.c4, rt1.c2, rt1.c4, rt0.c1, rt0.c3, v0.c2 UNION SELECT v0.c1, rt1.c1, rt0.c2, rt0.c4, rt1.c2, rt1.c4, rt0.c1, rt0.c3, v0.c2 FROM v0, rt1, rt0 WHERE ((((+ ((((rt1.c4))<=((v0.c2)))))) ISNULL)) GROUP BY v0.c1, rt1.c1, rt0.c2, rt0.c4, rt1.c2, rt1.c4, rt0.c1, rt0.c3, v0.c2;
SELECT v0.c1, rt1.c1, rt0.c2, rt0.c4, rt1.c2, rt1.c4, rt0.c1, rt0.c3, v0.c2 FROM v0, rt1, rt0 GROUP BY v0.c1, rt1.c1, rt0.c2, rt0.c4, rt1.c2, rt1.c4, rt0.c1, rt0.c3, v0.c2;
SELECT rt1.c2, rt1.c0 FROM v0 LEFT OUTER JOIN rt1 ON json_valid((((rt0.c3, rt1.c4, rt1.c3)) BETWEEN ((rt0.c0, v0.c0, rt1.c1)) AND ((rt0.c4, v0.c2, rt0.c0)))) LEFT OUTER JOIN rt0 ON ((CASE rt0.c3  WHEN rt0.c2 THEN rt1.c3 ELSE '}''n.6磺{}DC' END)*(-1.803418434E9)) GROUP BY rt1.c2, rt1.c0;
SELECT ALL rt1.c0, rt0.c4, v0.c2, rt1.c1 FROM rt0, rt1, v0;
SELECT ALL rt1.c0, rt0.c4, v0.c2, rt1.c1 FROM rt0, rt1, v0 WHERE ('-66447655') UNION ALL SELECT rt1.c0, rt0.c4, v0.c2, rt1.c1 FROM rt0, rt1, v0 WHERE ((NOT ('-66447655'))) UNION ALL SELECT rt1.c0, rt0.c4, v0.c2, rt1.c1 FROM rt0, rt1, v0 WHERE ((('-66447655') ISNULL));
SELECT ALL rt1.c0, rt0.c4, v0.c2, rt1.c1 FROM rt0, rt1, v0;
SELECT DISTINCT rt0.c3, rt1.c1, rt0.c0, rt1.c0, rt0.c4, rt1.c3, v0.c2, v0.c0 FROM v0, rt0, rt1;
SELECT DISTINCT rt0.c3, rt1.c1, rt0.c0, rt1.c0, rt0.c4, rt1.c3, v0.c2, v0.c0 FROM v0, rt0, rt1 WHERE (CAST(LENGTH(rt0.c1) AS TEXT)) UNION SELECT DISTINCT rt0.c3, rt1.c1, rt0.c0, rt1.c0, rt0.c4, rt1.c3, v0.c2, v0.c0 FROM v0, rt0, rt1 WHERE ((NOT (CAST(LENGTH(rt0.c1) AS TEXT)))) UNION SELECT DISTINCT rt0.c3, rt1.c1, rt0.c0, rt1.c0, rt0.c4, rt1.c3, v0.c2, v0.c0 FROM v0, rt0, rt1 WHERE (((CAST(LENGTH(rt0.c1) AS TEXT)) ISNULL));
SELECT DISTINCT rt0.c3, rt1.c1, rt0.c0, rt1.c0, rt0.c4, rt1.c3, v0.c2, v0.c0 FROM v0, rt0, rt1;
SELECT rt0.c0, v0.c1, rt0.c1, rt1.c1, rt1.c4, rt1.c3, rt0.c3 FROM rt1, rt0, v0 GROUP BY rt0.c0, v0.c1, rt0.c1, rt1.c1, rt1.c4, rt1.c3, rt0.c3;
SELECT rt0.c0, v0.c1, rt0.c1, rt1.c1, rt1.c4, rt1.c3, rt0.c3 FROM rt1, rt0, v0 WHERE (CAST(((v0.c0)+(rt1.c2)) AS BLOB)) GROUP BY rt0.c0, v0.c1, rt0.c1, rt1.c1, rt1.c4, rt1.c3, rt0.c3 UNION SELECT ALL rt0.c0, v0.c1, rt0.c1, rt1.c1, rt1.c4, rt1.c3, rt0.c3 FROM rt1, rt0, v0 WHERE ((NOT (CAST(((v0.c0)+(rt1.c2)) AS BLOB)))) GROUP BY rt0.c0, v0.c1, rt0.c1, rt1.c1, rt1.c4, rt1.c3, rt0.c3 UNION SELECT rt0.c0, v0.c1, rt0.c1, rt1.c1, rt1.c4, rt1.c3, rt0.c3 FROM rt1, rt0, v0 WHERE (((CAST(((v0.c0)+(rt1.c2)) AS BLOB)) ISNULL)) GROUP BY rt0.c0, v0.c1, rt0.c1, rt1.c1, rt1.c4, rt1.c3, rt0.c3;
SELECT rt0.c0, v0.c1, rt0.c1, rt1.c1, rt1.c4, rt1.c3, rt0.c3 FROM rt1, rt0, v0 GROUP BY rt0.c0, v0.c1, rt0.c1, rt1.c1, rt1.c4, rt1.c3, rt0.c3;
SELECT rt1.c3, v0.c1 FROM v0, rt1 GROUP BY rt1.c3, v0.c1;
SELECT rt1.c3, v0.c1 FROM v0, rt1 GROUP BY rt1.c3, v0.c1 HAVING COUNT(*) UNION ALL SELECT rt1.c3, v0.c1 FROM v0, rt1 GROUP BY rt1.c3, v0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c3, v0.c1 FROM v0 NOT INDEXED, rt1 GROUP BY rt1.c3, v0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c3, v0.c1 FROM v0, rt1 GROUP BY rt1.c3, v0.c1;
SELECT rt1.c3, v0.c1 FROM v0, rt1 GROUP BY rt1.c3, v0.c1 HAVING COUNT(*) UNION ALL SELECT rt1.c3, v0.c1 FROM v0, rt1 GROUP BY rt1.c3, v0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c3, v0.c1 FROM v0 NOT INDEXED, rt1 GROUP BY rt1.c3, v0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c3, v0.c1 FROM v0, rt1 GROUP BY rt1.c3, v0.c1;
SELECT ALL v0.c0, v0.c2 FROM v0;
SELECT v0.c0, v0.c2 FROM v0 WHERE (((ABS(v0.c0))-(((((((((v0.c2)OR(v0.c2)))OR(NULL)))OR(v0.c0)))AND(v0.c2))))) UNION ALL SELECT v0.c0, v0.c2 FROM v0 WHERE ((NOT (((ABS(v0.c0))-(((((((((v0.c2)OR(v0.c2)))OR(NULL)))OR(v0.c0)))AND(v0.c2))))))) UNION ALL SELECT v0.c0, v0.c2 FROM v0 WHERE (((((ABS(v0.c0))-(((((((((v0.c2)OR(v0.c2)))OR(NULL)))OR(v0.c0)))AND(v0.c2))))) ISNULL));
SELECT ALL v0.c0, v0.c2 FROM v0;
SELECT DISTINCT * FROM rt1, rt0, v0;
SELECT DISTINCT * FROM rt1, rt0, v0 WHERE (((v0.c2 COLLATE RTRIM)>>(HEX(DISTINCT v0.c1)))) UNION SELECT DISTINCT * FROM rt1, rt0, v0 WHERE ((NOT (((v0.c2 COLLATE RTRIM)>>(HEX(DISTINCT v0.c1)))))) UNION SELECT DISTINCT * FROM rt1, rt0, v0 WHERE (((((v0.c2 COLLATE RTRIM)>>(HEX(DISTINCT v0.c1)))) ISNULL));
SELECT DISTINCT * FROM rt1, rt0, v0;
SELECT rt0.c4, v0.c1, rt1.c1, rt0.c3, rt1.c3, rt1.c2, rt0.c1 FROM rt0, v0, rt1 GROUP BY rt0.c4, v0.c1, rt1.c1, rt0.c3, rt1.c3, rt1.c2, rt0.c1;
SELECT rt0.c4, v0.c1, rt1.c1, rt0.c3, rt1.c3, rt1.c2, rt0.c1 FROM rt0, v0, rt1 WHERE (((((((v0.c0)OR(v0.c2)))OR(rt1.c1)))OR((rt1.c2 IN (v0.c2))))) GROUP BY rt0.c4, v0.c1, rt1.c1, rt0.c3, rt1.c3, rt1.c2, rt0.c1 UNION SELECT ALL rt0.c4, v0.c1, rt1.c1, rt0.c3, rt1.c3, rt1.c2, rt0.c1 FROM rt0, v0, rt1 WHERE ((NOT (((((((v0.c0)OR(v0.c2)))OR(rt1.c1)))OR((rt1.c2 IN (v0.c2))))))) GROUP BY rt0.c4, v0.c1, rt1.c1, rt0.c3, rt1.c3, rt1.c2, rt0.c1 UNION SELECT ALL rt0.c4, v0.c1, rt1.c1, rt0.c3, rt1.c3, rt1.c2, rt0.c1 FROM rt0, v0, rt1 WHERE (((((((((v0.c0)OR(v0.c2)))OR(rt1.c1)))OR((rt1.c2 IN (v0.c2))))) ISNULL)) GROUP BY rt0.c4, v0.c1, rt1.c1, rt0.c3, rt1.c3, rt1.c2, rt0.c1;
SELECT rt0.c4, v0.c1, rt1.c1, rt0.c3, rt1.c3, rt1.c2, rt0.c1 FROM rt0, v0, rt1 GROUP BY rt0.c4, v0.c1, rt1.c1, rt0.c3, rt1.c3, rt1.c2, rt0.c1;
SELECT rt1.c0, v0.c2 FROM rt1, v0 GROUP BY rt1.c0, v0.c2;
SELECT rt1.c0, v0.c2 FROM rt1, v0 GROUP BY rt1.c0, v0.c2 HAVING COUNT(*) UNION ALL SELECT rt1.c0, v0.c2 FROM rt1, v0 GROUP BY rt1.c0, v0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c0, v0.c2 FROM rt1, v0 GROUP BY rt1.c0, v0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c0, v0.c2 FROM rt1, v0 GROUP BY rt1.c0, v0.c2;
SELECT rt1.c0, v0.c2 FROM rt1, v0 GROUP BY rt1.c0, v0.c2 HAVING COUNT(*) UNION ALL SELECT rt1.c0, v0.c2 FROM rt1, v0 GROUP BY rt1.c0, v0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c0, v0.c2 FROM rt1, v0 GROUP BY rt1.c0, v0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c0, v0.c2 FROM rt1, v0 GROUP BY rt1.c0, v0.c2;
SELECT * FROM rt1, v0;
SELECT ALL * FROM rt1, v0 WHERE (LENGTH(((v0.c1) IS TRUE))) UNION ALL SELECT * FROM rt1, v0 WHERE ((NOT (LENGTH(((v0.c1) IS TRUE))))) UNION ALL SELECT ALL * FROM rt1, v0 WHERE (((LENGTH(((v0.c1) IS TRUE))) ISNULL));
SELECT * FROM rt1, v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((x'')<(v0.c2)) IN (COALESCE(DISTINCT v0.c1, v0.c2)))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((x'')<(v0.c2)) IN (COALESCE(DISTINCT v0.c1, v0.c2)))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((x'')<(v0.c2)) IN (COALESCE(DISTINCT v0.c1, v0.c2)))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0 WHERE ((((((rt0.c3)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c0))))=((((rt0.c1, rt0.c4, 0.8573259153493569)) NOT BETWEEN ((rt0.c1, rt0.c4, rt0.c4)) AND ((rt0.c3, rt0.c2, rt0.c3)))))) GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((((((rt0.c3)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c0))))=((((rt0.c1, rt0.c4, 0.8573259153493569)) NOT BETWEEN ((rt0.c1, rt0.c4, rt0.c4)) AND ((rt0.c3, rt0.c2, rt0.c3)))))))) GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0 WHERE ((((((((rt0.c3)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c0))))=((((rt0.c1, rt0.c4, 0.8573259153493569)) NOT BETWEEN ((rt0.c1, rt0.c4, rt0.c4)) AND ((rt0.c3, rt0.c2, rt0.c3)))))) ISNULL)) GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0;
SELECT rt1.c2, rt0.c2, rt0.c0, rt1.c1, rt0.c1, rt0.c4 FROM rt1, rt0 NOT INDEXED GROUP BY rt1.c2, rt0.c2, rt0.c0, rt1.c1, rt0.c1, rt0.c4;
SELECT rt1.c2, rt0.c2, rt0.c0, rt1.c1, rt0.c1, rt0.c4 FROM rt1, rt0 GROUP BY rt1.c2, rt0.c2, rt0.c0, rt1.c1, rt0.c1, rt0.c4 HAVING rt1.c0 UNION ALL SELECT ALL rt1.c2, rt0.c2, rt0.c0, rt1.c1, rt0.c1, rt0.c4 FROM rt1, rt0 GROUP BY rt1.c2, rt0.c2, rt0.c0, rt1.c1, rt0.c1, rt0.c4 HAVING (NOT (rt1.c0)) UNION ALL SELECT ALL rt1.c2, rt0.c2, rt0.c0, rt1.c1, rt0.c1, rt0.c4 FROM rt1, rt0 GROUP BY rt1.c2, rt0.c2, rt0.c0, rt1.c1, rt0.c1, rt0.c4 HAVING ((rt1.c0) ISNULL);
SELECT rt1.c2, rt0.c2, rt0.c0, rt1.c1, rt0.c1, rt0.c4 FROM rt1, rt0 NOT INDEXED GROUP BY rt1.c2, rt0.c2, rt0.c0, rt1.c1, rt0.c1, rt0.c4;
SELECT rt1.c2, rt0.c2, rt0.c0, rt1.c1, rt0.c1, rt0.c4 FROM rt1, rt0 GROUP BY rt1.c2, rt0.c2, rt0.c0, rt1.c1, rt0.c1, rt0.c4 HAVING rt1.c0 UNION ALL SELECT ALL rt1.c2, rt0.c2, rt0.c0, rt1.c1, rt0.c1, rt0.c4 FROM rt1, rt0 GROUP BY rt1.c2, rt0.c2, rt0.c0, rt1.c1, rt0.c1, rt0.c4 HAVING (NOT (rt1.c0)) UNION ALL SELECT ALL rt1.c2, rt0.c2, rt0.c0, rt1.c1, rt0.c1, rt0.c4 FROM rt1, rt0 GROUP BY rt1.c2, rt0.c2, rt0.c0, rt1.c1, rt0.c1, rt0.c4 HAVING ((rt1.c0) ISNULL);
SELECT rt1.c2, rt0.c2, rt0.c0, rt1.c1, rt0.c1, rt0.c4 FROM rt1, rt0 NOT INDEXED GROUP BY rt1.c2, rt0.c2, rt0.c0, rt1.c1, rt0.c1, rt0.c4;
SELECT rt0.c4, v0.c1 FROM rt0, v0;
SELECT ALL rt0.c4, v0.c1 FROM rt0, v0 WHERE ((((rt0.c1, ((rt0.c3) IS FALSE), CAST(v0.c0 AS TEXT)))<=((LTRIM(rt0.c4), CAST(rt0.c4 AS BLOB), ((v0.c1) IS TRUE))))) UNION ALL SELECT rt0.c4, v0.c1 FROM rt0, v0 WHERE ((NOT ((((rt0.c1, ((rt0.c3) IS FALSE), CAST(v0.c0 AS TEXT)))<=((LTRIM(rt0.c4), CAST(rt0.c4 AS BLOB), ((v0.c1) IS TRUE))))))) UNION ALL SELECT rt0.c4, v0.c1 FROM rt0, v0 WHERE ((((((rt0.c1, ((rt0.c3) IS FALSE), CAST(v0.c0 AS TEXT)))<=((LTRIM(rt0.c4), CAST(rt0.c4 AS BLOB), ((v0.c1) IS TRUE))))) ISNULL));
SELECT rt0.c4, v0.c1 FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0, rt1;
SELECT DISTINCT * FROM rt0, v0, rt1 WHERE ((((v0.c1)>(rt0.c4)) IN ())) UNION SELECT DISTINCT * FROM rt0, v0, rt1 WHERE ((NOT ((((v0.c1)>(rt0.c4)) IN ())))) UNION SELECT DISTINCT * FROM rt0, v0, rt1 WHERE ((((((v0.c1)>(rt0.c4)) IN ())) ISNULL));
SELECT DISTINCT * FROM rt0, v0, rt1;
SELECT rt0.c0, rt0.c2, rt0.c4, rt1.c0, rt1.c3, rt1.c4, rt1.c1, rt1.c2 FROM rt0, rt1 GROUP BY rt0.c0, rt0.c2, rt0.c4, rt1.c0, rt1.c3, rt1.c4, rt1.c1, rt1.c2;
SELECT rt0.c0, rt0.c2, rt0.c4, rt1.c0, rt1.c3, rt1.c4, rt1.c1, rt1.c2 FROM rt0, rt1 WHERE (((((rt0.c0) BETWEEN (0X25892efc) AND (rt0.c2))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c4, rt1.c0, rt1.c3, rt1.c4, rt1.c1, rt1.c2 UNION SELECT rt0.c0, rt0.c2, rt0.c4, rt1.c0, rt1.c3, rt1.c4, rt1.c1, rt1.c2 FROM rt0, rt1 WHERE ((NOT (((((rt0.c0) BETWEEN (0X25892efc) AND (rt0.c2))) ISNULL)))) GROUP BY rt0.c0, rt0.c2, rt0.c4, rt1.c0, rt1.c3, rt1.c4, rt1.c1, rt1.c2 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c4, rt1.c0, rt1.c3, rt1.c4, rt1.c1, rt1.c2 FROM rt0, rt1 WHERE (((((((rt0.c0) BETWEEN (0X25892efc) AND (rt0.c2))) ISNULL)) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c4, rt1.c0, rt1.c3, rt1.c4, rt1.c1, rt1.c2;
SELECT rt0.c0, rt0.c2, rt0.c4, rt1.c0, rt1.c3, rt1.c4, rt1.c1, rt1.c2 FROM rt0, rt1 GROUP BY rt0.c0, rt0.c2, rt0.c4, rt1.c0, rt1.c3, rt1.c4, rt1.c1, rt1.c2;
SELECT v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0;
SELECT v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0 HAVING COUNT(GROUP_CONCAT(COUNT(v0.c1))) UNION ALL SELECT v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0 HAVING (NOT (COUNT(GROUP_CONCAT(COUNT(v0.c1))))) UNION ALL SELECT ALL v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0 HAVING ((COUNT(GROUP_CONCAT(COUNT(v0.c1)))) ISNULL);
SELECT ALL rt0.c3, v0.c2 FROM v0, rt1, rt0;
SELECT rt0.c3, v0.c2 FROM v0, rt1, rt0 WHERE (RTRIM((rt1.c2 IN ()))) UNION ALL SELECT ALL rt0.c3, v0.c2 FROM v0, rt1, rt0 WHERE ((NOT (RTRIM((rt1.c2 IN ()))))) UNION ALL SELECT ALL rt0.c3, v0.c2 FROM v0, rt1, rt0 WHERE (((RTRIM((rt1.c2 IN ()))) ISNULL));
SELECT ALL rt0.c3, v0.c2 FROM v0, rt1, rt0;
SELECT DISTINCT v0.c0, rt1.c1, v0.c2, rt1.c3, rt1.c2, v0.c1, rt1.c0, rt1.c4 FROM rt1, v0;
SELECT DISTINCT v0.c0, rt1.c1, v0.c2, rt1.c3, rt1.c2, v0.c1, rt1.c0, rt1.c4 FROM rt1, v0 WHERE ((NOT ((((v0.c1))>((v0.c2)))))) UNION SELECT DISTINCT v0.c0, rt1.c1, v0.c2, rt1.c3, rt1.c2, v0.c1, rt1.c0, rt1.c4 FROM rt1, v0 WHERE ((NOT ((NOT ((((v0.c1))>((v0.c2)))))))) UNION SELECT DISTINCT v0.c0, rt1.c1, v0.c2, rt1.c3, rt1.c2, v0.c1, rt1.c0, rt1.c4 FROM rt1, v0 WHERE ((((NOT ((((v0.c1))>((v0.c2)))))) ISNULL));
SELECT DISTINCT v0.c0, rt1.c1, v0.c2, rt1.c3, rt1.c2, v0.c1, rt1.c0, rt1.c4 FROM rt1, v0;
SELECT rt0.c3, rt1.c1 FROM rt0, rt1 GROUP BY rt0.c3, rt1.c1;
SELECT rt0.c3, rt1.c1 FROM rt0, rt1 WHERE (LIKELY(DISTINCT ((((rt0.c3)OR(rt1.c1)))OR(rt1.c2)))) GROUP BY rt0.c3, rt1.c1 UNION SELECT ALL rt0.c3, rt1.c1 FROM rt0, rt1 WHERE ((NOT (LIKELY(DISTINCT ((((rt0.c3)OR(rt1.c1)))OR(rt1.c2)))))) GROUP BY rt0.c3, rt1.c1 UNION SELECT rt0.c3, rt1.c1 FROM rt0, rt1 WHERE (((LIKELY(DISTINCT ((((rt0.c3)OR(rt1.c1)))OR(rt1.c2)))) ISNULL)) GROUP BY rt0.c3, rt1.c1;
SELECT rt0.c3, rt1.c1 FROM rt0, rt1 GROUP BY rt0.c3, rt1.c1;
SELECT rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM rt0 NOT INDEXED GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM rt0 NOT INDEXED GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c0;
SELECT MAX(((v0.c0) NOTNULL)) FROM rt1, v0, rt0;
SELECT ALL rt0.c3, rt0.c2, rt0.c4, rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c3, rt0.c2, rt0.c4, rt0.c1, rt0.c0 FROM rt0 WHERE (NULL) UNION ALL SELECT rt0.c3, rt0.c2, rt0.c4, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (NULL))) UNION ALL SELECT rt0.c3, rt0.c2, rt0.c4, rt0.c1, rt0.c0 FROM rt0 WHERE (((NULL) ISNULL));
SELECT ALL rt0.c3, rt0.c2, rt0.c4, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt1, v0, rt0;
SELECT DISTINCT * FROM rt1, v0, rt0 WHERE (((CAST(rt1.c1 AS INTEGER))>(((rt0.c4) NOT BETWEEN (v0.c1) AND (rt1.c2))))) UNION SELECT DISTINCT * FROM rt1, v0, rt0 WHERE ((NOT (((CAST(rt1.c1 AS INTEGER))>(((rt0.c4) NOT BETWEEN (v0.c1) AND (rt1.c2))))))) UNION SELECT DISTINCT * FROM rt1, v0, rt0 WHERE (((((CAST(rt1.c1 AS INTEGER))>(((rt0.c4) NOT BETWEEN (v0.c1) AND (rt1.c2))))) ISNULL));
SELECT DISTINCT * FROM rt1, v0, rt0;
SELECT rt0.c4, rt0.c3, rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c4, rt0.c3, rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((CAST(NULL AS BLOB) IN ())) GROUP BY rt0.c4, rt0.c3, rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c4, rt0.c3, rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((CAST(NULL AS BLOB) IN ())))) GROUP BY rt0.c4, rt0.c3, rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c4, rt0.c3, rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((CAST(NULL AS BLOB) IN ())) ISNULL)) GROUP BY rt0.c4, rt0.c3, rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c4, rt0.c3, rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c4, rt1.c0, rt1.c3, rt0.c3, rt0.c1 FROM rt0, rt1 GROUP BY rt0.c0, rt0.c4, rt1.c0, rt1.c3, rt0.c3, rt0.c1;
SELECT rt0.c0, rt0.c4, rt1.c0, rt1.c3, rt0.c3, rt0.c1 FROM rt0, rt1 GROUP BY rt0.c0, rt0.c4, rt1.c0, rt1.c3, rt0.c3, rt0.c1 HAVING COUNT(COUNT(*)) UNION ALL SELECT ALL rt0.c0, rt0.c4, rt1.c0, rt1.c3, rt0.c3, rt0.c1 FROM rt0, rt1 GROUP BY rt0.c0, rt0.c4, rt1.c0, rt1.c3, rt0.c3, rt0.c1 HAVING (NOT (COUNT(COUNT(*)))) UNION ALL SELECT ALL rt0.c0, rt0.c4, rt1.c0, rt1.c3, rt0.c3, rt0.c1 FROM rt0, rt1 GROUP BY rt0.c0, rt0.c4, rt1.c0, rt1.c3, rt0.c3, rt0.c1 HAVING ((COUNT(COUNT(*))) ISNULL);
SELECT ALL rt1.c2, rt1.c1, rt1.c4, rt1.c3, rt1.c0 FROM rt1;
SELECT rt1.c2, rt1.c1, rt1.c4, rt1.c3, rt1.c0 FROM rt1 WHERE (CAST((rt1.c2 IN ()) AS REAL)) UNION ALL SELECT rt1.c2, rt1.c1, rt1.c4, rt1.c3, rt1.c0 FROM rt1 WHERE ((NOT (CAST((rt1.c2 IN ()) AS REAL)))) UNION ALL SELECT ALL rt1.c2, rt1.c1, rt1.c4, rt1.c3, rt1.c0 FROM rt1 WHERE (((CAST((rt1.c2 IN ()) AS REAL)) ISNULL));
SELECT ALL rt1.c2, rt1.c1, rt1.c4, rt1.c3, rt1.c0 FROM rt1;
SELECT DISTINCT rt1.c3, rt0.c2, rt0.c4, v0.c2, rt1.c0, rt1.c4, rt0.c0, v0.c1 FROM v0 NOT INDEXED, rt1, rt0;
SELECT DISTINCT rt1.c3, rt0.c2, rt0.c4, v0.c2, rt1.c0, rt1.c4, rt0.c0, v0.c1 FROM v0, rt1, rt0 WHERE (((((rt1.c3)>=(v0.c0)))>=(LOWER(0.2375156009554269)))) UNION SELECT DISTINCT rt1.c3, rt0.c2, rt0.c4, v0.c2, rt1.c0, rt1.c4, rt0.c0, v0.c1 FROM v0, rt1, rt0 WHERE ((NOT (((((rt1.c3)>=(v0.c0)))>=(LOWER(0.2375156009554269)))))) UNION SELECT DISTINCT rt1.c3, rt0.c2, rt0.c4, v0.c2, rt1.c0, rt1.c4, rt0.c0, v0.c1 FROM v0, rt1, rt0 WHERE (((((((rt1.c3)>=(v0.c0)))>=(LOWER(0.2375156009554269)))) ISNULL));
SELECT DISTINCT rt1.c3, rt0.c2, rt0.c4, v0.c2, rt1.c0, rt1.c4, rt0.c0, v0.c1 FROM v0 NOT INDEXED, rt1, rt0;
SELECT rt1.c2, v0.c2, rt1.c4 FROM v0, rt1 GROUP BY rt1.c2, v0.c2, rt1.c4;
SELECT ALL rt1.c2, v0.c2, rt1.c4 FROM v0, rt1 WHERE (CAST(((v0.c0)IS(rt1.c1)) AS NUMERIC)) GROUP BY rt1.c2, v0.c2, rt1.c4 UNION SELECT ALL rt1.c2, v0.c2, rt1.c4 FROM v0, rt1 WHERE ((NOT (CAST(((v0.c0)IS(rt1.c1)) AS NUMERIC)))) GROUP BY rt1.c2, v0.c2, rt1.c4 UNION SELECT ALL rt1.c2, v0.c2, rt1.c4 FROM v0, rt1 WHERE (((CAST(((v0.c0)IS(rt1.c1)) AS NUMERIC)) ISNULL)) GROUP BY rt1.c2, v0.c2, rt1.c4;
SELECT rt1.c2, v0.c2, rt1.c4 FROM v0, rt1 GROUP BY rt1.c2, v0.c2, rt1.c4;
SELECT ALL rt1.c2, rt1.c3, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c3, rt1.c0;
SELECT rt1.c2, rt1.c3, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c3, rt1.c0 HAVING (((CAST(MAX(COUNT(MIN(rt1.c3))) AS TEXT)))<>((CAST(rt1.c0 AS NUMERIC)))) UNION ALL SELECT rt1.c2, rt1.c3, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c3, rt1.c0 HAVING (NOT ((((CAST(MAX(COUNT(MIN(rt1.c3))) AS TEXT)))<>((CAST(rt1.c0 AS NUMERIC)))))) UNION ALL SELECT rt1.c2, rt1.c3, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c3, rt1.c0 HAVING (((((CAST(MAX(COUNT(MIN(rt1.c3))) AS TEXT)))!=((CAST(rt1.c0 AS NUMERIC))))) ISNULL);
SELECT ALL v0.c0, v0.c2, rt0.c4, rt1.c0, rt0.c0 FROM rt1, v0 NATURAL JOIN rt0;
SELECT v0.c0, v0.c2, rt0.c4, rt1.c0, rt0.c0 FROM rt1, v0 NATURAL JOIN rt0 WHERE (CASE WHEN (~ (rt1.c1)) THEN (rt0.c0 IN (v0.c2)) END) UNION ALL SELECT ALL v0.c0, v0.c2, rt0.c4, rt1.c0, rt0.c0 FROM rt1, v0 NATURAL JOIN rt0 WHERE ((NOT (CASE WHEN (~ (rt1.c1)) THEN (rt0.c0 IN (v0.c2)) END))) UNION ALL SELECT v0.c0, v0.c2, rt0.c4, rt1.c0, rt0.c0 FROM rt1, v0 NATURAL JOIN rt0 WHERE (((CASE WHEN (~ (rt1.c1)) THEN (rt0.c0 IN (v0.c2)) END) ISNULL));
SELECT ALL v0.c0, v0.c2, rt0.c4, rt1.c0, rt0.c0 FROM rt1, v0 NATURAL JOIN rt0;
SELECT DISTINCT * FROM v0, rt1, rt0 NOT INDEXED;
SELECT DISTINCT * FROM v0, rt1, rt0 WHERE ((CAST(v0.c2 AS NUMERIC) IN ())) UNION SELECT DISTINCT * FROM v0, rt1, rt0 WHERE ((NOT ((CAST(v0.c2 AS NUMERIC) IN ())))) UNION SELECT DISTINCT * FROM v0, rt1, rt0 WHERE ((((CAST(v0.c2 AS NUMERIC) IN ())) ISNULL));
SELECT DISTINCT * FROM v0, rt1, rt0 NOT INDEXED;
SELECT rt1.c1, rt1.c3 FROM rt1 GROUP BY rt1.c1, rt1.c3;
SELECT ALL rt1.c1, rt1.c3 FROM rt1 WHERE (((((rt1.c1 COLLATE RTRIM)OR(((rt1.c4) NOT BETWEEN (rt1.c3) AND (0.9529734411637371)))))AND(PRINTF(rt1.c2)))) GROUP BY rt1.c1, rt1.c3 UNION SELECT ALL rt1.c1, rt1.c3 FROM rt1 WHERE ((NOT (((((rt1.c1 COLLATE RTRIM)OR(((rt1.c4) NOT BETWEEN (rt1.c3) AND (0.9529734411637371)))))AND(PRINTF(rt1.c2)))))) GROUP BY rt1.c1, rt1.c3 UNION SELECT ALL rt1.c1, rt1.c3 FROM rt1 WHERE (((((((rt1.c1 COLLATE RTRIM)OR(((rt1.c4) NOT BETWEEN (rt1.c3) AND (0.9529734411637371)))))AND(PRINTF(rt1.c2)))) ISNULL)) GROUP BY rt1.c1, rt1.c3;
SELECT rt1.c1, rt1.c3 FROM rt1 GROUP BY rt1.c1, rt1.c3;
SELECT ALL rt0.c3, rt1.c1, rt0.c1, rt1.c2 FROM v0, rt1, rt0 GROUP BY rt0.c3, rt1.c1, rt0.c1, rt1.c2;
SELECT rt0.c3, rt1.c1, rt0.c1, rt1.c2 FROM v0, rt1, rt0 GROUP BY rt0.c3, rt1.c1, rt0.c1, rt1.c2 HAVING TOTAL(rt0.c3) COLLATE RTRIM UNION ALL SELECT ALL rt0.c3, rt1.c1, rt0.c1, rt1.c2 FROM v0, rt1, rt0 GROUP BY rt0.c3, rt1.c1, rt0.c1, rt1.c2 HAVING (NOT (TOTAL(rt0.c3) COLLATE RTRIM)) UNION ALL SELECT rt0.c3, rt1.c1, rt0.c1, rt1.c2 FROM v0, rt1, rt0 GROUP BY rt0.c3, rt1.c1, rt0.c1, rt1.c2 HAVING ((TOTAL(rt0.c3) COLLATE RTRIM) ISNULL);
SELECT ALL rt0.c3, rt1.c1, rt0.c1, rt1.c2 FROM v0, rt1, rt0 GROUP BY rt0.c3, rt1.c1, rt0.c1, rt1.c2;
SELECT rt0.c3, rt1.c1, rt0.c1, rt1.c2 FROM v0, rt1, rt0 GROUP BY rt0.c3, rt1.c1, rt0.c1, rt1.c2 HAVING TOTAL(rt0.c3) COLLATE RTRIM UNION ALL SELECT ALL rt0.c3, rt1.c1, rt0.c1, rt1.c2 FROM v0, rt1, rt0 GROUP BY rt0.c3, rt1.c1, rt0.c1, rt1.c2 HAVING (NOT (TOTAL(rt0.c3) COLLATE RTRIM)) UNION ALL SELECT rt0.c3, rt1.c1, rt0.c1, rt1.c2 FROM v0, rt1, rt0 GROUP BY rt0.c3, rt1.c1, rt0.c1, rt1.c2 HAVING ((TOTAL(rt0.c3) COLLATE RTRIM) ISNULL);
SELECT ALL rt0.c3, rt1.c1, rt0.c1, rt1.c2 FROM v0, rt1, rt0 GROUP BY rt0.c3, rt1.c1, rt0.c1, rt1.c2;
SELECT ALL rt0.c3, rt1.c0, rt0.c1, rt1.c2, rt0.c0, rt0.c2 FROM rt0, rt1;
SELECT ALL rt0.c3, rt1.c0, rt0.c1, rt1.c2, rt0.c0, rt0.c2 FROM rt0, rt1 WHERE (((rt0.c1) ISNULL) COLLATE BINARY) UNION ALL SELECT ALL rt0.c3, rt1.c0, rt0.c1, rt1.c2, rt0.c0, rt0.c2 FROM rt0, rt1 WHERE ((NOT (((rt0.c1) ISNULL) COLLATE BINARY))) UNION ALL SELECT ALL rt0.c3, rt1.c0, rt0.c1, rt1.c2, rt0.c0, rt0.c2 FROM rt0, rt1 WHERE (((((rt0.c1) ISNULL) COLLATE BINARY) ISNULL));
SELECT ALL rt0.c3, rt1.c0, rt0.c1, rt1.c2, rt0.c0, rt0.c2 FROM rt0, rt1;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (((((NULL)<<(rt1.c1))) BETWEEN (((rt1.c4)>=(rt1.c1))) AND (0xffffffff8523f7be))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (((((NULL)<<(rt1.c1))) BETWEEN (((rt1.c4)>=(rt1.c1))) AND (0Xffffffff8523f7be))))) UNION SELECT DISTINCT * FROM rt1 WHERE (((((((NULL)<<(rt1.c1))) BETWEEN (((rt1.c4)>=(rt1.c1))) AND (0xffffffff8523f7be))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE (CAST((~ (rt0.c3)) AS TEXT)) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (CAST((~ (rt0.c3)) AS TEXT)))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE (((CAST((~ (rt0.c3)) AS TEXT)) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT v0.c2, v0.c1, rt0.c3, rt1.c2, rt1.c4, rt1.c3, rt0.c2, v0.c0, rt0.c0, rt0.c4, rt1.c0, rt1.c1 FROM rt1, rt0, v0 GROUP BY v0.c2, v0.c1, rt0.c3, rt1.c2, rt1.c4, rt1.c3, rt0.c2, v0.c0, rt0.c0, rt0.c4, rt1.c0, rt1.c1;
SELECT v0.c2, v0.c1, rt0.c3, rt1.c2, rt1.c4, rt1.c3, rt0.c2, v0.c0, rt0.c0, rt0.c4, rt1.c0, rt1.c1 FROM rt1, rt0, v0 GROUP BY v0.c2, v0.c1, rt0.c3, rt1.c2, rt1.c4, rt1.c3, rt0.c2, v0.c0, rt0.c0, rt0.c4, rt1.c0, rt1.c1 HAVING GROUP_CONCAT(COUNT(*)) UNION ALL SELECT v0.c2, v0.c1, rt0.c3, rt1.c2, rt1.c4, rt1.c3, rt0.c2, v0.c0, rt0.c0, rt0.c4, rt1.c0, rt1.c1 FROM rt1, rt0, v0 GROUP BY v0.c2, v0.c1, rt0.c3, rt1.c2, rt1.c4, rt1.c3, rt0.c2, v0.c0, rt0.c0, rt0.c4, rt1.c0, rt1.c1 HAVING (NOT (GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT ALL v0.c2, v0.c1, rt0.c3, rt1.c2, rt1.c4, rt1.c3, rt0.c2, v0.c0, rt0.c0, rt0.c4, rt1.c0, rt1.c1 FROM rt1, rt0, v0 GROUP BY v0.c2, v0.c1, rt0.c3, rt1.c2, rt1.c4, rt1.c3, rt0.c2, v0.c0, rt0.c0, rt0.c4, rt1.c0, rt1.c1 HAVING ((GROUP_CONCAT(COUNT(*))) ISNULL);
SELECT MAX(((((((rt1.c1) IS FALSE))AND((~ (rt1.c4)))))AND((~ (rt0.c3))))) FROM rt0, rt1 ORDER BY NULL COLLATE BINARY COLLATE BINARY ASC  NULLS LAST;
SELECT ALL * FROM rt1, v0, rt0;
SELECT * FROM rt1, v0, rt0 WHERE ((NOT ((((v0.c2, NULL, rt0.c3))<((rt0.c3, v0.c0, v0.c2)))))) UNION ALL SELECT * FROM rt1, v0, rt0 WHERE ((NOT ((NOT ((((v0.c2, NULL, rt0.c3))<((rt0.c3, v0.c0, v0.c2)))))))) UNION ALL SELECT * FROM rt1, v0, rt0 WHERE ((((NOT ((((v0.c2, NULL, rt0.c3))<((rt0.c3, v0.c0, v0.c2)))))) ISNULL));
SELECT ALL * FROM rt1, v0, rt0;
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN rt1 ON (((rt0.c4 IN ())) NOT BETWEEN (((rt1.c1) IS FALSE)) AND ((rt1.c3 IN (rt0.c3, rt0.c4))));
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN rt1 ON (((rt0.c4 IN ())) NOT BETWEEN (((rt1.c1) IS FALSE)) AND ((rt1.c3 IN (rt0.c3, rt0.c4)))) WHERE (((CASE rt1.c4  WHEN rt1.c3 THEN 'rK8[挢' WHEN rt1.c3 THEN rt0.c0 WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt1.c3 END)IS NOT(rt0.c4 COLLATE RTRIM))) UNION SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN rt1 ON (((rt0.c4 IN ())) NOT BETWEEN (((rt1.c1) IS FALSE)) AND ((rt1.c3 IN (rt0.c3, rt0.c4)))) WHERE ((NOT (((CASE rt1.c4  WHEN rt1.c3 THEN 'rK8[挢' WHEN rt1.c3 THEN rt0.c0 WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt1.c3 END)IS NOT(rt0.c4 COLLATE RTRIM))))) UNION SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN rt1 ON (((rt0.c4 IN ())) NOT BETWEEN (((rt1.c1) IS FALSE)) AND ((rt1.c3 IN (rt0.c3, rt0.c4)))) WHERE (((((CASE rt1.c4  WHEN rt1.c3 THEN 'rK8[挢' WHEN rt1.c3 THEN rt0.c0 WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt1.c3 END)IS NOT(rt0.c4 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN rt1 ON (((rt0.c4 IN ())) NOT BETWEEN (((rt1.c1) IS FALSE)) AND ((rt1.c3 IN (rt0.c3, rt0.c4))));
SELECT rt1.c3, v0.c0 FROM rt0, rt1, v0 GROUP BY rt1.c3, v0.c0;
SELECT ALL rt1.c3, v0.c0 FROM rt0, rt1, v0 WHERE ((- (SQLITE_COMPILEOPTION_USED(v0.c2)))) GROUP BY rt1.c3, v0.c0 UNION SELECT ALL rt1.c3, v0.c0 FROM rt0, rt1, v0 WHERE ((NOT ((- (SQLITE_COMPILEOPTION_USED(v0.c2)))))) GROUP BY rt1.c3, v0.c0 UNION SELECT rt1.c3, v0.c0 FROM rt0, rt1, v0 WHERE ((((- (SQLITE_COMPILEOPTION_USED(v0.c2)))) ISNULL)) GROUP BY rt1.c3, v0.c0;
SELECT rt1.c3, v0.c0 FROM rt0, rt1, v0 GROUP BY rt1.c3, v0.c0;
SELECT rt1.c2, v0.c0, rt1.c4, rt1.c0, rt1.c1, v0.c2, rt1.c3, v0.c1 FROM v0, rt1 GROUP BY rt1.c2, v0.c0, rt1.c4, rt1.c0, rt1.c1, v0.c2, rt1.c3, v0.c1;
SELECT ALL rt1.c2, v0.c0, rt1.c4, rt1.c0, rt1.c1, v0.c2, rt1.c3, v0.c1 FROM v0, rt1 GROUP BY rt1.c2, v0.c0, rt1.c4, rt1.c0, rt1.c1, v0.c2, rt1.c3, v0.c1 HAVING ((((AVG(rt1.c2)) IS FALSE)) ISNULL) UNION ALL SELECT ALL rt1.c2, v0.c0, rt1.c4, rt1.c0, rt1.c1, v0.c2, rt1.c3, v0.c1 FROM v0, rt1 GROUP BY rt1.c2, v0.c0, rt1.c4, rt1.c0, rt1.c1, v0.c2, rt1.c3, v0.c1 HAVING (NOT (((((AVG(rt1.c2)) IS FALSE)) ISNULL))) UNION ALL SELECT rt1.c2, v0.c0, rt1.c4, rt1.c0, rt1.c1, v0.c2, rt1.c3, v0.c1 FROM v0, rt1 GROUP BY rt1.c2, v0.c0, rt1.c4, rt1.c0, rt1.c1, v0.c2, rt1.c3, v0.c1 HAVING ((((((AVG(rt1.c2)) IS FALSE)) ISNULL)) ISNULL);
SELECT rt1.c2, v0.c0, rt1.c4, rt1.c0, rt1.c1, v0.c2, rt1.c3, v0.c1 FROM v0, rt1 GROUP BY rt1.c2, v0.c0, rt1.c4, rt1.c0, rt1.c1, v0.c2, rt1.c3, v0.c1;
SELECT ALL rt1.c2, v0.c0, rt1.c4, rt1.c0, rt1.c1, v0.c2, rt1.c3, v0.c1 FROM v0, rt1 GROUP BY rt1.c2, v0.c0, rt1.c4, rt1.c0, rt1.c1, v0.c2, rt1.c3, v0.c1 HAVING ((((AVG(rt1.c2)) IS FALSE)) ISNULL) UNION ALL SELECT ALL rt1.c2, v0.c0, rt1.c4, rt1.c0, rt1.c1, v0.c2, rt1.c3, v0.c1 FROM v0, rt1 GROUP BY rt1.c2, v0.c0, rt1.c4, rt1.c0, rt1.c1, v0.c2, rt1.c3, v0.c1 HAVING (NOT (((((AVG(rt1.c2)) IS FALSE)) ISNULL))) UNION ALL SELECT rt1.c2, v0.c0, rt1.c4, rt1.c0, rt1.c1, v0.c2, rt1.c3, v0.c1 FROM v0, rt1 GROUP BY rt1.c2, v0.c0, rt1.c4, rt1.c0, rt1.c1, v0.c2, rt1.c3, v0.c1 HAVING ((((((AVG(rt1.c2)) IS FALSE)) ISNULL)) ISNULL);
SELECT rt1.c2, v0.c0, rt1.c4, rt1.c0, rt1.c1, v0.c2, rt1.c3, v0.c1 FROM v0, rt1 GROUP BY rt1.c2, v0.c0, rt1.c4, rt1.c0, rt1.c1, v0.c2, rt1.c3, v0.c1;
SELECT * FROM v0 FULL OUTER JOIN rt0 ON ((CAST(rt0.c3 AS INTEGER)) NOT BETWEEN ('') AND (rt0.c2 COLLATE RTRIM));
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON ((CAST(rt0.c3 AS INTEGER)) NOT BETWEEN ('') AND (rt0.c2 COLLATE RTRIM)) WHERE ((((((rt0.c2)>(rt0.c4))))<=((((rt0.c0)/(0.4160093296617443)))))) UNION ALL SELECT * FROM v0 FULL OUTER JOIN rt0 ON ((CAST(rt0.c3 AS INTEGER)) NOT BETWEEN ('') AND (rt0.c2 COLLATE RTRIM)) WHERE ((NOT ((((((rt0.c2)>(rt0.c4))))<=((((rt0.c0)/(0.4160093296617443)))))))) UNION ALL SELECT * FROM v0 FULL OUTER JOIN rt0 ON ((CAST(rt0.c3 AS INTEGER)) NOT BETWEEN ('') AND (rt0.c2 COLLATE RTRIM)) WHERE ((((((((rt0.c2)>(rt0.c4))))<=((((rt0.c0)/(0.4160093296617443)))))) ISNULL));
SELECT * FROM v0 FULL OUTER JOIN rt0 ON ((CAST(rt0.c3 AS INTEGER)) NOT BETWEEN ('') AND (rt0.c2 COLLATE RTRIM));
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (CAST(CAST(rt0.c2 AS TEXT) AS INTEGER)) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (CAST(CAST(rt0.c2 AS TEXT) AS INTEGER)))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((CAST(CAST(rt0.c2 AS TEXT) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT ALL rt0.c0, rt0.c3, rt0.c2, v0.c1 FROM v0, rt0 GROUP BY rt0.c0, rt0.c3, rt0.c2, v0.c1;
SELECT rt0.c0, rt0.c3, rt0.c2, v0.c1 FROM v0, rt0 WHERE (((v0.c0 COLLATE RTRIM) IS FALSE)) GROUP BY rt0.c0, rt0.c3, rt0.c2, v0.c1 UNION SELECT ALL rt0.c0, rt0.c3, rt0.c2, v0.c1 FROM v0, rt0 WHERE ((NOT (((v0.c0 COLLATE RTRIM) IS FALSE)))) GROUP BY rt0.c0, rt0.c3, rt0.c2, v0.c1 UNION SELECT rt0.c0, rt0.c3, rt0.c2, v0.c1 FROM v0, rt0 WHERE (((((v0.c0 COLLATE RTRIM) IS FALSE)) ISNULL)) GROUP BY rt0.c0, rt0.c3, rt0.c2, v0.c1;
SELECT ALL rt0.c0, rt0.c3, rt0.c2, v0.c1 FROM v0, rt0 GROUP BY rt0.c0, rt0.c3, rt0.c2, v0.c1;
SELECT ALL v0.c2, v0.c0, rt1.c2, rt1.c4 FROM v0 INNER JOIN rt1 ON ((((((((x'7fdf')AND((~ (rt1.c3)))))OR(DATE(v0.c2, rt1.c2, rt1.c2, rt1.c3, rt1.c2))))AND(((rt1.c4) IS FALSE))))OR(((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c4)))) GROUP BY v0.c2, v0.c0, rt1.c2, rt1.c4;
SELECT ALL v0.c2, v0.c0, rt1.c2, rt1.c4 FROM v0 INNER JOIN rt1 ON ((((((((x'7fdf')AND((~ (rt1.c3)))))OR(DATE(v0.c2, rt1.c2, rt1.c2, rt1.c3, rt1.c2))))AND(((rt1.c4) IS FALSE))))OR(((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c4)))) GROUP BY v0.c2, v0.c0, rt1.c2, rt1.c4 HAVING CAST(AVG(COUNT(v0.c0)) AS BLOB) UNION ALL SELECT ALL v0.c2, v0.c0, rt1.c2, rt1.c4 FROM v0 INNER JOIN rt1 ON ((((((((x'7fdf')AND((~ (rt1.c3)))))OR(DATE(v0.c2, rt1.c2, rt1.c2, rt1.c3, rt1.c2))))AND(((rt1.c4) IS FALSE))))OR(((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c4)))) GROUP BY v0.c2, v0.c0, rt1.c2, rt1.c4 HAVING (NOT (CAST(AVG(COUNT(v0.c0)) AS BLOB))) UNION ALL SELECT v0.c2, v0.c0, rt1.c2, rt1.c4 FROM v0 INNER JOIN rt1 ON ((((((((x'7fdf')AND((~ (rt1.c3)))))OR(DATE(v0.c2, rt1.c2, rt1.c2, rt1.c3, rt1.c2))))AND(((rt1.c4) IS FALSE))))OR(((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c4)))) GROUP BY v0.c2, v0.c0, rt1.c2, rt1.c4 HAVING ((CAST(AVG(COUNT(v0.c0)) AS BLOB)) ISNULL);
SELECT v0.c0, rt1.c3 FROM rt1, rt0, v0;
SELECT v0.c0, rt1.c3 FROM rt1, rt0, v0 WHERE (v0.c0) UNION ALL SELECT v0.c0, rt1.c3 FROM rt1, rt0, v0 WHERE ((NOT (v0.c0))) UNION ALL SELECT ALL v0.c0, rt1.c3 FROM rt1, rt0, v0 WHERE (((v0.c0) ISNULL));
SELECT v0.c0, rt1.c3 FROM rt1, rt0, v0;
SELECT DISTINCT * FROM v0 INNER JOIN rt1 ON json_array_length(rt0.c2 COLLATE BINARY, HEX(v0.c0)) CROSS JOIN rt0 ON ((((v0.c1)|(rt1.c0)))<(((rt0.c1)>>(rt1.c1))));
SELECT DISTINCT * FROM v0 INNER JOIN rt1 ON json_array_length(rt0.c2 COLLATE BINARY, HEX(v0.c0)) CROSS JOIN rt0 ON ((((v0.c1)|(rt1.c0)))<(((rt0.c1)>>(rt1.c1)))) WHERE (((rt1.c4 IN ()) IN ())) UNION SELECT DISTINCT * FROM v0 INNER JOIN rt1 ON json_array_length(rt0.c2 COLLATE BINARY, HEX(v0.c0)) CROSS JOIN rt0 ON ((((v0.c1)|(rt1.c0)))<(((rt0.c1)>>(rt1.c1)))) WHERE ((NOT (((rt1.c4 IN ()) IN ())))) UNION SELECT DISTINCT * FROM v0 INNER JOIN rt1 ON json_array_length(rt0.c2 COLLATE BINARY, HEX(v0.c0)) CROSS JOIN rt0 ON ((((v0.c1)|(rt1.c0)))<(((rt0.c1)>>(rt1.c1)))) WHERE (((((rt1.c4 IN ()) IN ())) ISNULL));
SELECT DISTINCT * FROM v0 INNER JOIN rt1 ON json_array_length(rt0.c2 COLLATE BINARY, HEX(v0.c0)) CROSS JOIN rt0 ON ((((v0.c1)|(rt1.c0)))<(((rt0.c1)>>(rt1.c1))));
SELECT ALL rt0.c3 FROM rt0, v0, rt1 GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0, v0, rt1 WHERE (CASE WHEN ((rt1.c2)GLOB(rt1.c4)) THEN (((rt1.c1))<>((v0.c1))) WHEN ((((rt0.c3)AND(rt0.c2)))OR(rt1.c1)) THEN rt1.c0 WHEN (v0.c2 IN ()) THEN ((v0.c1) ISNULL) ELSE rt0.c2 END) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM rt0, v0, rt1 WHERE ((NOT (CASE WHEN ((rt1.c2)GLOB(rt1.c4)) THEN (((rt1.c1))<>((v0.c1))) WHEN ((((rt0.c3)AND(rt0.c2)))OR(rt1.c1)) THEN rt1.c0 WHEN (v0.c2 IN ()) THEN ((v0.c1) ISNULL) ELSE rt0.c2 END))) GROUP BY rt0.c3 UNION SELECT rt0.c3 FROM rt0, v0, rt1 WHERE (((CASE WHEN ((rt1.c2)GLOB(rt1.c4)) THEN (((rt1.c1))<>((v0.c1))) WHEN ((((rt0.c3)AND(rt0.c2)))OR(rt1.c1)) THEN rt1.c0 WHEN (v0.c2 IN ()) THEN ((v0.c1) ISNULL) ELSE rt0.c2 END) ISNULL)) GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0, v0, rt1 GROUP BY rt0.c3;
SELECT rt1.c3, rt1.c0, rt0.c0, v0.c2, rt1.c1, v0.c0, rt0.c2, rt0.c4, rt0.c1, rt0.c3, rt1.c2, rt1.c4, v0.c1 FROM rt0, v0, rt1 GROUP BY rt1.c3, rt1.c0, rt0.c0, v0.c2, rt1.c1, v0.c0, rt0.c2, rt0.c4, rt0.c1, rt0.c3, rt1.c2, rt1.c4, v0.c1;
SELECT ALL rt1.c3, rt1.c0, rt0.c0, v0.c2, rt1.c1, v0.c0, rt0.c2, rt0.c4, rt0.c1, rt0.c3, rt1.c2, rt1.c4, v0.c1 FROM rt0, v0, rt1 GROUP BY rt1.c3, rt1.c0, rt0.c0, v0.c2, rt1.c1, v0.c0, rt0.c2, rt0.c4, rt0.c1, rt0.c3, rt1.c2, rt1.c4, v0.c1 HAVING GROUP_CONCAT(AVG(rt0.c1)) UNION ALL SELECT ALL rt1.c3, rt1.c0, rt0.c0, v0.c2, rt1.c1, v0.c0, rt0.c2, rt0.c4, rt0.c1, rt0.c3, rt1.c2, rt1.c4, v0.c1 FROM rt0, v0, rt1 GROUP BY rt1.c3, rt1.c0, rt0.c0, v0.c2, rt1.c1, v0.c0, rt0.c2, rt0.c4, rt0.c1, rt0.c3, rt1.c2, rt1.c4, v0.c1 HAVING (NOT (GROUP_CONCAT(AVG(rt0.c1)))) UNION ALL SELECT ALL rt1.c3, rt1.c0, rt0.c0, v0.c2, rt1.c1, v0.c0, rt0.c2, rt0.c4, rt0.c1, rt0.c3, rt1.c2, rt1.c4, v0.c1 FROM rt0, v0, rt1 GROUP BY rt1.c3, rt1.c0, rt0.c0, v0.c2, rt1.c1, v0.c0, rt0.c2, rt0.c4, rt0.c1, rt0.c3, rt1.c2, rt1.c4, v0.c1 HAVING ((GROUP_CONCAT(AVG(rt0.c1))) ISNULL);
SELECT ALL * FROM v0, rt0, rt1;
SELECT ALL * FROM v0, rt0, rt1 WHERE (((rtreenode(rt1.c1, rt1.c2)) NOTNULL)) UNION ALL SELECT ALL * FROM v0, rt0, rt1 WHERE ((NOT (((rtreenode(rt1.c1, rt1.c2)) NOTNULL)))) UNION ALL SELECT ALL * FROM v0, rt0, rt1 WHERE (((((rtreenode(rt1.c1, rt1.c2)) NOTNULL)) ISNULL));
SELECT ALL * FROM v0, rt0, rt1;
SELECT DISTINCT v0.c2, rt1.c3 FROM v0 LEFT OUTER JOIN rt1 ON ((v0.c0)<<(((((rt1.c0)AND(rt1.c4)))AND(v0.c0))));
SELECT DISTINCT v0.c2, rt1.c3 FROM v0 LEFT OUTER JOIN rt1 ON ((v0.c0)<<(((((rt1.c0)AND(rt1.c4)))AND(v0.c0)))) WHERE (CASE x''  WHEN ((rt1.c4) IS TRUE) THEN (((v0.c1))>((rt1.c4))) ELSE LIKELIHOOD(v0.c1, 0.5419303855616643) END) UNION SELECT DISTINCT v0.c2, rt1.c3 FROM v0 LEFT OUTER JOIN rt1 ON ((v0.c0)<<(((((rt1.c0)AND(rt1.c4)))AND(v0.c0)))) WHERE ((NOT (CASE x''  WHEN ((rt1.c4) IS TRUE) THEN (((v0.c1))>((rt1.c4))) ELSE LIKELIHOOD(v0.c1, 0.5419303855616643) END))) UNION SELECT DISTINCT v0.c2, rt1.c3 FROM v0 LEFT OUTER JOIN rt1 ON ((v0.c0)<<(((((rt1.c0)AND(rt1.c4)))AND(v0.c0)))) WHERE (((CASE x''  WHEN ((rt1.c4) IS TRUE) THEN (((v0.c1))>((rt1.c4))) ELSE LIKELIHOOD(v0.c1, 0.5419303855616643) END) ISNULL));
SELECT DISTINCT v0.c2, rt1.c3 FROM v0 LEFT OUTER JOIN rt1 ON ((v0.c0)<<(((((rt1.c0)AND(rt1.c4)))AND(v0.c0))));
SELECT ALL rt0.c3, rt0.c2, rt1.c3, rt1.c2, rt0.c0, rt0.c4 FROM rt0 NATURAL JOIN rt1 GROUP BY rt0.c3, rt0.c2, rt1.c3, rt1.c2, rt0.c0, rt0.c4;
SELECT rt0.c3, rt0.c2, rt1.c3, rt1.c2, rt0.c0, rt0.c4 FROM rt0 NATURAL JOIN rt1 WHERE (SQLITE_COMPILEOPTION_USED(CASE WHEN rt0.c4 THEN rt0.c0 ELSE 0X241286f1 END)) GROUP BY rt0.c3, rt0.c2, rt1.c3, rt1.c2, rt0.c0, rt0.c4 UNION SELECT rt0.c3, rt0.c2, rt1.c3, rt1.c2, rt0.c0, rt0.c4 FROM rt0 NATURAL JOIN rt1 WHERE ((NOT (SQLITE_COMPILEOPTION_USED(CASE WHEN rt0.c4 THEN rt0.c0 ELSE 0x241286f1 END)))) GROUP BY rt0.c3, rt0.c2, rt1.c3, rt1.c2, rt0.c0, rt0.c4 UNION SELECT rt0.c3, rt0.c2, rt1.c3, rt1.c2, rt0.c0, rt0.c4 FROM rt0 NATURAL JOIN rt1 WHERE (((SQLITE_COMPILEOPTION_USED(CASE WHEN rt0.c4 THEN rt0.c0 ELSE 0X241286f1 END)) ISNULL)) GROUP BY rt0.c3, rt0.c2, rt1.c3, rt1.c2, rt0.c0, rt0.c4;
SELECT ALL rt0.c3, rt0.c2, rt1.c3, rt1.c2, rt0.c0, rt0.c4 FROM rt0 NATURAL JOIN rt1 GROUP BY rt0.c3, rt0.c2, rt1.c3, rt1.c2, rt0.c0, rt0.c4;
SELECT ALL rt0.c4, rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c4, rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c1, rt0.c2, rt0.c0 HAVING ((rt0.c4)>=(TOTAL(rt0.c1))) COLLATE NOCASE UNION ALL SELECT ALL rt0.c4, rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (((rt0.c4)>=(TOTAL(rt0.c1))) COLLATE NOCASE)) UNION ALL SELECT ALL rt0.c4, rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c1, rt0.c2, rt0.c0 HAVING ((((rt0.c4)>=(TOTAL(rt0.c1))) COLLATE NOCASE) ISNULL);
SELECT ALL rt0.c4, rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c4, rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c1, rt0.c2, rt0.c0 HAVING ((rt0.c4)>=(TOTAL(rt0.c1))) COLLATE NOCASE UNION ALL SELECT ALL rt0.c4, rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (((rt0.c4)>=(TOTAL(rt0.c1))) COLLATE NOCASE)) UNION ALL SELECT ALL rt0.c4, rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c1, rt0.c2, rt0.c0 HAVING ((((rt0.c4)>=(TOTAL(rt0.c1))) COLLATE NOCASE) ISNULL);
SELECT ALL rt0.c4, rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c1, rt0.c2, rt0.c0;
SELECT * FROM rt0, rt1;
SELECT ALL * FROM rt0, rt1 WHERE (((((rt1.c0) BETWEEN (NULL) AND (rt1.c1)))&((rt1.c0 IN ())))) UNION ALL SELECT * FROM rt0, rt1 WHERE ((NOT (((((rt1.c0) BETWEEN (NULL) AND (rt1.c1)))&((rt1.c0 IN ())))))) UNION ALL SELECT * FROM rt0, rt1 WHERE (((((((rt1.c0) BETWEEN (NULL) AND (rt1.c1)))&((rt1.c0 IN ())))) ISNULL));
SELECT * FROM rt0, rt1;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((((v0.c1)-(v0.c2))) IS FALSE)) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((v0.c1)-(v0.c2))) IS FALSE)))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((v0.c1)-(v0.c2))) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT v0.c0, rt0.c2, v0.c1, rt1.c2, rt0.c1, rt1.c0, rt0.c4, rt1.c1 FROM v0, rt1, rt0 GROUP BY v0.c0, rt0.c2, v0.c1, rt1.c2, rt0.c1, rt1.c0, rt0.c4, rt1.c1;
SELECT ALL v0.c0, rt0.c2, v0.c1, rt1.c2, rt0.c1, rt1.c0, rt0.c4, rt1.c1 FROM v0, rt1, rt0 WHERE (((x'9265faea') BETWEEN (((((rt1.c0)AND(rt0.c3)))OR(rt1.c1))) AND (((rt0.c0) IS TRUE)))) GROUP BY v0.c0, rt0.c2, v0.c1, rt1.c2, rt0.c1, rt1.c0, rt0.c4, rt1.c1 UNION SELECT ALL v0.c0, rt0.c2, v0.c1, rt1.c2, rt0.c1, rt1.c0, rt0.c4, rt1.c1 FROM v0, rt1, rt0 WHERE ((NOT (((x'9265faea') BETWEEN (((((rt1.c0)AND(rt0.c3)))OR(rt1.c1))) AND (((rt0.c0) IS TRUE)))))) GROUP BY v0.c0, rt0.c2, v0.c1, rt1.c2, rt0.c1, rt1.c0, rt0.c4, rt1.c1 UNION SELECT ALL v0.c0, rt0.c2, v0.c1, rt1.c2, rt0.c1, rt1.c0, rt0.c4, rt1.c1 FROM v0, rt1, rt0 WHERE (((((x'9265faea') BETWEEN (((((rt1.c0)AND(rt0.c3)))OR(rt1.c1))) AND (((rt0.c0) IS TRUE)))) ISNULL)) GROUP BY v0.c0, rt0.c2, v0.c1, rt1.c2, rt0.c1, rt1.c0, rt0.c4, rt1.c1;
SELECT v0.c0, rt0.c2, v0.c1, rt1.c2, rt0.c1, rt1.c0, rt0.c4, rt1.c1 FROM v0, rt1, rt0 GROUP BY v0.c0, rt0.c2, v0.c1, rt1.c2, rt0.c1, rt1.c0, rt0.c4, rt1.c1;
SELECT ALL v0.c0, rt0.c3, v0.c1, rt0.c0, rt0.c2, rt0.c1 FROM v0, rt0 GROUP BY v0.c0, rt0.c3, v0.c1, rt0.c0, rt0.c2, rt0.c1;
SELECT v0.c0, rt0.c3, v0.c1, rt0.c0, rt0.c2, rt0.c1 FROM v0, rt0 GROUP BY v0.c0, rt0.c3, v0.c1, rt0.c0, rt0.c2, rt0.c1 HAVING (- (NULL)) UNION ALL SELECT v0.c0, rt0.c3, v0.c1, rt0.c0, rt0.c2, rt0.c1 FROM v0, rt0 GROUP BY v0.c0, rt0.c3, v0.c1, rt0.c0, rt0.c2, rt0.c1 HAVING (NOT ((- (NULL)))) UNION ALL SELECT ALL v0.c0, rt0.c3, v0.c1, rt0.c0, rt0.c2, rt0.c1 FROM v0, rt0 GROUP BY v0.c0, rt0.c3, v0.c1, rt0.c0, rt0.c2, rt0.c1 HAVING (((- (NULL))) ISNULL);
SELECT ALL v0.c0, rt0.c3, v0.c1, rt0.c0, rt0.c2, rt0.c1 FROM v0, rt0 GROUP BY v0.c0, rt0.c3, v0.c1, rt0.c0, rt0.c2, rt0.c1;
SELECT v0.c0, rt0.c3, v0.c1, rt0.c0, rt0.c2, rt0.c1 FROM v0, rt0 GROUP BY v0.c0, rt0.c3, v0.c1, rt0.c0, rt0.c2, rt0.c1 HAVING (- (NULL)) UNION ALL SELECT v0.c0, rt0.c3, v0.c1, rt0.c0, rt0.c2, rt0.c1 FROM v0, rt0 GROUP BY v0.c0, rt0.c3, v0.c1, rt0.c0, rt0.c2, rt0.c1 HAVING (NOT ((- (NULL)))) UNION ALL SELECT ALL v0.c0, rt0.c3, v0.c1, rt0.c0, rt0.c2, rt0.c1 FROM v0, rt0 GROUP BY v0.c0, rt0.c3, v0.c1, rt0.c0, rt0.c2, rt0.c1 HAVING (((- (NULL))) ISNULL);
SELECT ALL v0.c0, rt0.c3, v0.c1, rt0.c0, rt0.c2, rt0.c1 FROM v0, rt0 GROUP BY v0.c0, rt0.c3, v0.c1, rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt1.c4, v0.c1, rt1.c0, rt1.c1 FROM rt1, v0;
SELECT ALL rt1.c4, v0.c1, rt1.c0, rt1.c1 FROM rt1, v0 WHERE (((((v0.c0, v0.c1, v0.c1)) BETWEEN ((rt1.c3, rt1.c0, 454203731)) AND ((rt1.c0, v0.c2, rt1.c2))) IN ())) UNION ALL SELECT rt1.c4, v0.c1, rt1.c0, rt1.c1 FROM rt1, v0 WHERE ((NOT (((((v0.c0, v0.c1, v0.c1)) BETWEEN ((rt1.c3, rt1.c0, 454203731)) AND ((rt1.c0, v0.c2, rt1.c2))) IN ())))) UNION ALL SELECT rt1.c4, v0.c1, rt1.c0, rt1.c1 FROM rt1, v0 WHERE (((((((v0.c0, v0.c1, v0.c1)) BETWEEN ((rt1.c3, rt1.c0, 454203731)) AND ((rt1.c0, v0.c2, rt1.c2))) IN ())) ISNULL));
SELECT ALL rt1.c4, v0.c1, rt1.c0, rt1.c1 FROM rt1, v0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (((highlight(NULL, rt1.c1, rt1.c4, rt1.c4)) NOT BETWEEN (CASE rt1.c0  WHEN rt1.c1 THEN rt1.c4 END) AND (NULL))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (((highlight(NULL, rt1.c1, rt1.c4, rt1.c4)) NOT BETWEEN (CASE rt1.c0  WHEN rt1.c1 THEN rt1.c4 END) AND (NULL))))) UNION SELECT DISTINCT * FROM rt1 WHERE (((((highlight(NULL, rt1.c1, rt1.c4, rt1.c4)) NOT BETWEEN (CASE rt1.c0  WHEN rt1.c1 THEN rt1.c4 END) AND (NULL))) ISNULL));
SELECT ALL rt0.c0, v0.c0 FROM rt0, v0 NOT INDEXED GROUP BY rt0.c0, v0.c0;
SELECT rt0.c0, v0.c0 FROM rt0, v0 WHERE (((0.6565483635263768)&(((v0.c1)>(rt0.c0))))) GROUP BY rt0.c0, v0.c0 UNION SELECT rt0.c0, v0.c0 FROM rt0, v0 WHERE ((NOT (((0.6565483635263768)&(((v0.c1)>(rt0.c0))))))) GROUP BY rt0.c0, v0.c0 UNION SELECT rt0.c0, v0.c0 FROM rt0, v0 WHERE (((((0.6565483635263768)&(((v0.c1)>(rt0.c0))))) ISNULL)) GROUP BY rt0.c0, v0.c0;
SELECT ALL rt0.c0, v0.c0 FROM rt0, v0 NOT INDEXED GROUP BY rt0.c0, v0.c0;
SELECT rt0.c4 FROM rt1, rt0 GROUP BY rt0.c4;
SELECT ALL rt0.c4 FROM rt1, rt0 GROUP BY rt0.c4 HAVING MIN(AVG(rt1.c2)) UNION ALL SELECT ALL rt0.c4 FROM rt1, rt0 GROUP BY rt0.c4 HAVING (NOT (MIN(AVG(rt1.c2)))) UNION ALL SELECT rt0.c4 FROM rt1, rt0 GROUP BY rt0.c4 HAVING ((MIN(AVG(rt1.c2))) ISNULL);
SELECT ALL v0.c2, v0.c1 FROM v0;
SELECT ALL v0.c2, v0.c1 FROM v0 WHERE ((- (((v0.c1)LIKE(v0.c1))))) UNION ALL SELECT ALL v0.c2, v0.c1 FROM v0 WHERE ((NOT ((- (((v0.c1)LIKE(v0.c1))))))) UNION ALL SELECT v0.c2, v0.c1 FROM v0 WHERE ((((- (((v0.c1)LIKE(v0.c1))))) ISNULL));
SELECT ALL v0.c2, v0.c1 FROM v0;
SELECT DISTINCT * FROM rt0, rt1, v0;
SELECT DISTINCT * FROM rt0, rt1, v0 WHERE (HEX(DISTINCT CAST(rt1.c2 AS NUMERIC))) UNION SELECT DISTINCT * FROM rt0, rt1, v0 WHERE ((NOT (HEX(DISTINCT CAST(rt1.c2 AS NUMERIC))))) UNION SELECT DISTINCT * FROM rt0, rt1, v0 WHERE (((HEX(DISTINCT CAST(rt1.c2 AS NUMERIC))) ISNULL));
SELECT DISTINCT * FROM rt0, rt1, v0;
SELECT ALL rt0.c3, rt0.c1, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c4, rt0.c2;
SELECT ALL rt0.c3, rt0.c1, rt0.c4, rt0.c2 FROM rt0 WHERE (((((rt0.c0) NOT NULL))IS(((x'')<>(rt0.c0))))) GROUP BY rt0.c3, rt0.c1, rt0.c4, rt0.c2 UNION SELECT rt0.c3, rt0.c1, rt0.c4, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c0) NOT NULL))IS(((x'')!=(rt0.c0))))))) GROUP BY rt0.c3, rt0.c1, rt0.c4, rt0.c2 UNION SELECT ALL rt0.c3, rt0.c1, rt0.c4, rt0.c2 FROM rt0 WHERE (((((((rt0.c0) NOT NULL))IS(((x'')<>(rt0.c0))))) ISNULL)) GROUP BY rt0.c3, rt0.c1, rt0.c4, rt0.c2;
SELECT ALL rt0.c3, rt0.c1, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c4, rt0.c2;
SELECT v0.c2, rt0.c3 FROM v0 NATURAL JOIN rt0 GROUP BY v0.c2, rt0.c3;
SELECT v0.c2, rt0.c3 FROM v0 NATURAL JOIN rt0 GROUP BY v0.c2, rt0.c3 HAVING AVG(COUNT(*)) UNION ALL SELECT v0.c2, rt0.c3 FROM v0 NATURAL JOIN rt0 GROUP BY v0.c2, rt0.c3 HAVING (NOT (AVG(COUNT(*)))) UNION ALL SELECT v0.c2, rt0.c3 FROM v0 NATURAL JOIN rt0 GROUP BY v0.c2, rt0.c3 HAVING ((AVG(COUNT(*))) ISNULL);
SELECT * FROM rt1, v0;
SELECT * FROM rt1, v0 WHERE (((CASE WHEN rt1.c4 THEN rt1.c0 END) NOT BETWEEN (((rt1.c1) NOT BETWEEN (v0.c2) AND (v0.c1))) AND ((~ (x''))))) UNION ALL SELECT ALL * FROM rt1, v0 WHERE ((NOT (((CASE WHEN rt1.c4 THEN rt1.c0 END) NOT BETWEEN (((rt1.c1) NOT BETWEEN (v0.c2) AND (v0.c1))) AND ((~ (x''))))))) UNION ALL SELECT ALL * FROM rt1, v0 WHERE (((((CASE WHEN rt1.c4 THEN rt1.c0 END) NOT BETWEEN (((rt1.c1) NOT BETWEEN (v0.c2) AND (v0.c1))) AND ((~ (x''))))) ISNULL));
SELECT * FROM rt1, v0;
SELECT DISTINCT v0.c0 FROM v0, rt0;
SELECT DISTINCT v0.c0 FROM v0, rt0 WHERE (((rt0.c2 COLLATE BINARY) IS FALSE)) UNION SELECT DISTINCT v0.c0 FROM v0, rt0 WHERE ((NOT (((rt0.c2 COLLATE BINARY) IS FALSE)))) UNION SELECT DISTINCT v0.c0 FROM v0, rt0 WHERE (((((rt0.c2 COLLATE BINARY) IS FALSE)) ISNULL));
SELECT DISTINCT v0.c0 FROM v0, rt0;
SELECT rt1.c2, rt1.c3, rt1.c1, rt1.c4, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c3, rt1.c1, rt1.c4, rt1.c0;
SELECT ALL rt1.c2, rt1.c3, rt1.c1, rt1.c4, rt1.c0 FROM rt1 WHERE (CAST(((NULL) NOT BETWEEN (rt1.c2) AND (rt1.c0)) AS NUMERIC)) GROUP BY rt1.c2, rt1.c3, rt1.c1, rt1.c4, rt1.c0 UNION SELECT rt1.c2, rt1.c3, rt1.c1, rt1.c4, rt1.c0 FROM rt1 WHERE ((NOT (CAST(((NULL) NOT BETWEEN (rt1.c2) AND (rt1.c0)) AS NUMERIC)))) GROUP BY rt1.c2, rt1.c3, rt1.c1, rt1.c4, rt1.c0 UNION SELECT rt1.c2, rt1.c3, rt1.c1, rt1.c4, rt1.c0 FROM rt1 WHERE (((CAST(((NULL) NOT BETWEEN (rt1.c2) AND (rt1.c0)) AS NUMERIC)) ISNULL)) GROUP BY rt1.c2, rt1.c3, rt1.c1, rt1.c4, rt1.c0;
SELECT rt1.c2, rt1.c3, rt1.c1, rt1.c4, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c3, rt1.c1, rt1.c4, rt1.c0;
SELECT v0.c1, rt0.c3, rt0.c1, rt0.c2, v0.c2 FROM rt0, v0 GROUP BY v0.c1, rt0.c3, rt0.c1, rt0.c2, v0.c2;
SELECT v0.c1, rt0.c3, rt0.c1, rt0.c2, v0.c2 FROM rt0, v0 GROUP BY v0.c1, rt0.c3, rt0.c1, rt0.c2, v0.c2 HAVING x'572d' UNION ALL SELECT v0.c1, rt0.c3, rt0.c1, rt0.c2, v0.c2 FROM rt0, v0 GROUP BY v0.c1, rt0.c3, rt0.c1, rt0.c2, v0.c2 HAVING (NOT (x'572d')) UNION ALL SELECT ALL v0.c1, rt0.c3, rt0.c1, rt0.c2, v0.c2 FROM rt0, v0 GROUP BY v0.c1, rt0.c3, rt0.c1, rt0.c2, v0.c2 HAVING ((x'572d') ISNULL);
SELECT v0.c1, rt0.c3, rt0.c1, rt0.c2, v0.c2 FROM rt0, v0 GROUP BY v0.c1, rt0.c3, rt0.c1, rt0.c2, v0.c2;
SELECT v0.c1, rt0.c3, rt0.c1, rt0.c2, v0.c2 FROM rt0, v0 GROUP BY v0.c1, rt0.c3, rt0.c1, rt0.c2, v0.c2 HAVING x'572d' UNION ALL SELECT v0.c1, rt0.c3, rt0.c1, rt0.c2, v0.c2 FROM rt0, v0 GROUP BY v0.c1, rt0.c3, rt0.c1, rt0.c2, v0.c2 HAVING (NOT (x'572d')) UNION ALL SELECT ALL v0.c1, rt0.c3, rt0.c1, rt0.c2, v0.c2 FROM rt0, v0 GROUP BY v0.c1, rt0.c3, rt0.c1, rt0.c2, v0.c2 HAVING ((x'572d') ISNULL);
SELECT v0.c1, rt0.c3, rt0.c1, rt0.c2, v0.c2 FROM rt0, v0 GROUP BY v0.c1, rt0.c3, rt0.c1, rt0.c2, v0.c2;
SELECT ALL * FROM v0, rt1, rt0;
SELECT * FROM v0, rt1, rt0 WHERE (((rt0.c4 COLLATE RTRIM)GLOB(((v0.c2)||(rt1.c1))))) UNION ALL SELECT * FROM v0, rt1, rt0 WHERE ((NOT (((rt0.c4 COLLATE RTRIM)GLOB(((v0.c2)||(rt1.c1))))))) UNION ALL SELECT * FROM v0, rt1, rt0 WHERE (((((rt0.c4 COLLATE RTRIM)GLOB(((v0.c2)||(rt1.c1))))) ISNULL));
SELECT ALL * FROM v0, rt1, rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((json_quote(v0.c2)) NOT BETWEEN (((v0.c1)-(v0.c0))) AND (0.45826928031850145))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((json_quote(v0.c2)) NOT BETWEEN (((v0.c1)-(v0.c0))) AND (0.45826928031850145))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((json_quote(v0.c2)) NOT BETWEEN (((v0.c1)-(v0.c0))) AND (0.45826928031850145))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL rt1.c2, rt1.c4, rt1.c1, rt1.c3, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c4, rt1.c1, rt1.c3, rt1.c0;
SELECT rt1.c2, rt1.c4, rt1.c1, rt1.c3, rt1.c0 FROM rt1 WHERE (((rt1.c3) IS TRUE) COLLATE RTRIM) GROUP BY rt1.c2, rt1.c4, rt1.c1, rt1.c3, rt1.c0 UNION SELECT rt1.c2, rt1.c4, rt1.c1, rt1.c3, rt1.c0 FROM rt1 WHERE ((NOT (((rt1.c3) IS TRUE) COLLATE RTRIM))) GROUP BY rt1.c2, rt1.c4, rt1.c1, rt1.c3, rt1.c0 UNION SELECT ALL rt1.c2, rt1.c4, rt1.c1, rt1.c3, rt1.c0 FROM rt1 WHERE (((((rt1.c3) IS TRUE) COLLATE RTRIM) ISNULL)) GROUP BY rt1.c2, rt1.c4, rt1.c1, rt1.c3, rt1.c0;
SELECT ALL rt1.c2, rt1.c4, rt1.c1, rt1.c3, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c4, rt1.c1, rt1.c3, rt1.c0;
SELECT rt0.c1, rt0.c4, rt1.c1, rt0.c2, v0.c2, rt1.c2 FROM rt1, rt0 CROSS JOIN v0 ON (((((rt1.c4))=((v0.c1)))) NOT BETWEEN (((rt1.c2)GLOB(rt1.c4))) AND (rt1.c1)) GROUP BY rt0.c1, rt0.c4, rt1.c1, rt0.c2, v0.c2, rt1.c2;
SELECT ALL rt0.c1, rt0.c4, rt1.c1, rt0.c2, v0.c2, rt1.c2 FROM rt1, rt0 CROSS JOIN v0 ON (((((rt1.c4))=((v0.c1)))) NOT BETWEEN (((rt1.c2)GLOB(rt1.c4))) AND (rt1.c1)) GROUP BY rt0.c1, rt0.c4, rt1.c1, rt0.c2, v0.c2, rt1.c2 HAVING GROUP_CONCAT(MAX(v0.c1)) UNION ALL SELECT ALL rt0.c1, rt0.c4, rt1.c1, rt0.c2, v0.c2, rt1.c2 FROM rt1, rt0 CROSS JOIN v0 ON (((((rt1.c4))==((v0.c1)))) NOT BETWEEN (((rt1.c2)GLOB(rt1.c4))) AND (rt1.c1)) GROUP BY rt0.c1, rt0.c4, rt1.c1, rt0.c2, v0.c2, rt1.c2 HAVING (NOT (GROUP_CONCAT(MAX(v0.c1)))) UNION ALL SELECT ALL rt0.c1, rt0.c4, rt1.c1, rt0.c2, v0.c2, rt1.c2 FROM rt1, rt0 CROSS JOIN v0 ON (((((rt1.c4))==((v0.c1)))) NOT BETWEEN (((rt1.c2)GLOB(rt1.c4))) AND (rt1.c1)) GROUP BY rt0.c1, rt0.c4, rt1.c1, rt0.c2, v0.c2, rt1.c2 HAVING ((GROUP_CONCAT(MAX(v0.c1))) ISNULL);
SELECT * FROM rt1, rt0, v0;
SELECT * FROM rt1, rt0, v0 WHERE (((v0.c0) IS TRUE)) UNION ALL SELECT ALL * FROM rt1, rt0, v0 WHERE ((NOT (((v0.c0) IS TRUE)))) UNION ALL SELECT ALL * FROM rt1, rt0, v0 WHERE (((((v0.c0) IS TRUE)) ISNULL));
SELECT * FROM rt1, rt0, v0;
SELECT DISTINCT v0.c1, rt0.c0, rt0.c3, rt0.c2, v0.c2, v0.c0 FROM v0, rt0;
SELECT DISTINCT v0.c1, rt0.c0, rt0.c3, rt0.c2, v0.c2, v0.c0 FROM v0, rt0 WHERE (CAST((rt0.c0 IN ()) AS TEXT)) UNION SELECT DISTINCT v0.c1, rt0.c0, rt0.c3, rt0.c2, v0.c2, v0.c0 FROM v0, rt0 WHERE ((NOT (CAST((rt0.c0 IN ()) AS TEXT)))) UNION SELECT DISTINCT v0.c1, rt0.c0, rt0.c3, rt0.c2, v0.c2, v0.c0 FROM v0, rt0 WHERE (((CAST((rt0.c0 IN ()) AS TEXT)) ISNULL));
SELECT DISTINCT v0.c1, rt0.c0, rt0.c3, rt0.c2, v0.c2, v0.c0 FROM v0, rt0;
SELECT ALL rt1.c2, rt1.c1, rt1.c3 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c3;
SELECT rt1.c2, rt1.c1, rt1.c3 FROM rt1 WHERE ((('-803256091') ISNULL)) GROUP BY rt1.c2, rt1.c1, rt1.c3 UNION SELECT rt1.c2, rt1.c1, rt1.c3 FROM rt1 WHERE ((NOT ((('-803256091') ISNULL)))) GROUP BY rt1.c2, rt1.c1, rt1.c3 UNION SELECT rt1.c2, rt1.c1, rt1.c3 FROM rt1 WHERE ((((('-803256091') ISNULL)) ISNULL)) GROUP BY rt1.c2, rt1.c1, rt1.c3;
SELECT ALL rt1.c2, rt1.c1, rt1.c3 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c3;
SELECT ALL rt0.c1, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c2;
SELECT ALL rt0.c1, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c2 HAVING MIN(COUNT(*)) UNION ALL SELECT rt0.c1, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c2 HAVING (NOT (MIN(COUNT(*)))) UNION ALL SELECT ALL rt0.c1, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c2 HAVING ((MIN(COUNT(*))) ISNULL);
SELECT ALL * FROM v0, rt1;
SELECT * FROM v0, rt1 WHERE (TYPEOF(DISTINCT rt1.c4)) UNION ALL SELECT ALL * FROM v0, rt1 WHERE ((NOT (TYPEOF(DISTINCT rt1.c4)))) UNION ALL SELECT ALL * FROM v0, rt1 WHERE (((TYPEOF(DISTINCT rt1.c4)) ISNULL));
SELECT ALL * FROM v0, rt1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((~ (rt0.c0))) BETWEEN (0.05360356745277528) AND (rt0.c2 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((~ (rt0.c0))) BETWEEN (0.05360356745277528) AND (rt0.c2 COLLATE NOCASE))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((~ (rt0.c0))) BETWEEN (0.05360356745277528) AND (rt0.c2 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt1.c3, rt1.c1 FROM rt1 GROUP BY rt1.c3, rt1.c1;
SELECT ALL rt1.c3, rt1.c1 FROM rt1 WHERE ((((((((((('	%-%yr')AND(rt1.c0)))AND(rt1.c1)))AND(rt1.c4)))AND(rt1.c0)))%(((rt1.c3) NOTNULL)))) GROUP BY rt1.c3, rt1.c1 UNION SELECT rt1.c3, rt1.c1 FROM rt1 WHERE ((NOT ((((((((((('	%-%yr')AND(rt1.c0)))AND(rt1.c1)))AND(rt1.c4)))AND(rt1.c0)))%(((rt1.c3) NOTNULL)))))) GROUP BY rt1.c3, rt1.c1 UNION SELECT rt1.c3, rt1.c1 FROM rt1 WHERE ((((((((((((('	%-%yr')AND(rt1.c0)))AND(rt1.c1)))AND(rt1.c4)))AND(rt1.c0)))%(((rt1.c3) NOTNULL)))) ISNULL)) GROUP BY rt1.c3, rt1.c1;
SELECT ALL rt1.c3, rt1.c1 FROM rt1 GROUP BY rt1.c3, rt1.c1;
SELECT ALL rt1.c1, rt0.c4, rt0.c1 FROM rt0, v0 FULL OUTER JOIN rt1 ON (~ (CAST(rt1.c1 AS BLOB))) GROUP BY rt1.c1, rt0.c4, rt0.c1;
SELECT ALL rt1.c1, rt0.c4, rt0.c1 FROM rt0, v0 FULL OUTER JOIN rt1 ON (~ (CAST(rt1.c1 AS BLOB))) GROUP BY rt1.c1, rt0.c4, rt0.c1 HAVING CASE ((((0.7425504208857103)OR(AVG(v0.c0))))OR(TOTAL(TOTAL(rt0.c3))))  WHEN SUM(rt1.c1) THEN ((rt0.c0) BETWEEN (AVG(MIN(rt1.c1))) AND (SUM(rt1.c0))) ELSE AVG(MIN(rt0.c1)) END UNION ALL SELECT rt1.c1, rt0.c4, rt0.c1 FROM rt0, v0 FULL OUTER JOIN rt1 ON (~ (CAST(rt1.c1 AS BLOB))) GROUP BY rt1.c1, rt0.c4, rt0.c1 HAVING (NOT (CASE ((((0.7425504208857103)OR(AVG(v0.c0))))OR(TOTAL(TOTAL(rt0.c3))))  WHEN SUM(rt1.c1) THEN ((rt0.c0) BETWEEN (AVG(MIN(rt1.c1))) AND (SUM(rt1.c0))) ELSE AVG(MIN(rt0.c1)) END)) UNION ALL SELECT ALL rt1.c1, rt0.c4, rt0.c1 FROM rt0, v0 FULL OUTER JOIN rt1 ON (~ (CAST(rt1.c1 AS BLOB))) GROUP BY rt1.c1, rt0.c4, rt0.c1 HAVING ((CASE ((((0.7425504208857103)OR(AVG(v0.c0))))OR(TOTAL(TOTAL(rt0.c3))))  WHEN SUM(rt1.c1) THEN ((rt0.c0) BETWEEN (AVG(MIN(rt1.c1))) AND (SUM(rt1.c0))) ELSE AVG(MIN(rt0.c1)) END) ISNULL);
SELECT rt0.c0 FROM rt0;
SELECT ALL rt0.c0 FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN (((rt0.c0 IN ()))) AND (((((rt0.c4, rt0.c2, rt0.c2))<((rt0.c4, x'', rt0.c1))))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c0)) NOT BETWEEN (((rt0.c0 IN ()))) AND (((((rt0.c4, rt0.c2, rt0.c2))<((rt0.c4, x'', rt0.c1))))))))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE ((((((rt0.c0)) NOT BETWEEN (((rt0.c0 IN ()))) AND (((((rt0.c4, rt0.c2, rt0.c2))<((rt0.c4, x'', rt0.c1))))))) ISNULL));
SELECT rt0.c0 FROM rt0;
SELECT DISTINCT rt1.c3, rt0.c1, rt0.c4, rt1.c4, v0.c1, v0.c0, rt1.c0, rt0.c3 FROM v0, rt0, rt1;
SELECT DISTINCT rt1.c3, rt0.c1, rt0.c4, rt1.c4, v0.c1, v0.c0, rt1.c0, rt0.c3 FROM v0 NOT INDEXED, rt0, rt1 WHERE (COALESCE(DISTINCT (rt1.c2 IN (rt1.c1)), (v0.c0 IN ()))) UNION SELECT DISTINCT rt1.c3, rt0.c1, rt0.c4, rt1.c4, v0.c1, v0.c0, rt1.c0, rt0.c3 FROM v0, rt0, rt1 WHERE ((NOT (COALESCE(DISTINCT (rt1.c2 IN (rt1.c1)), (v0.c0 IN ()))))) UNION SELECT DISTINCT rt1.c3, rt0.c1, rt0.c4, rt1.c4, v0.c1, v0.c0, rt1.c0, rt0.c3 FROM v0, rt0, rt1 WHERE (((COALESCE(DISTINCT (rt1.c2 IN (rt1.c1)), (v0.c0 IN ()))) ISNULL));
SELECT DISTINCT rt1.c3, rt0.c1, rt0.c4, rt1.c4, v0.c1, v0.c0, rt1.c0, rt0.c3 FROM v0, rt0, rt1;
SELECT rt0.c1, rt0.c3 FROM rt1, v0, rt0 GROUP BY rt0.c1, rt0.c3;
SELECT rt0.c1, rt0.c3 FROM rt1, v0, rt0 WHERE (((((((((rt0.c0 COLLATE RTRIM)AND((NOT (rt0.c0)))))AND(CAST(v0.c0 AS BLOB))))OR((((v0.c2, rt1.c0, rt1.c0))>((rt1.c4, v0.c0, rt0.c0))))))OR(((rt1.c0) IS TRUE)))) GROUP BY rt0.c1, rt0.c3 UNION SELECT ALL rt0.c1, rt0.c3 FROM rt1, v0, rt0 WHERE ((NOT (((((((((rt0.c0 COLLATE RTRIM)AND((NOT (rt0.c0)))))AND(CAST(v0.c0 AS BLOB))))OR((((v0.c2, rt1.c0, rt1.c0))>((rt1.c4, v0.c0, rt0.c0))))))OR(((rt1.c0) IS TRUE)))))) GROUP BY rt0.c1, rt0.c3 UNION SELECT ALL rt0.c1, rt0.c3 FROM rt1, v0, rt0 WHERE (((((((((((rt0.c0 COLLATE RTRIM)AND((NOT (rt0.c0)))))AND(CAST(v0.c0 AS BLOB))))OR((((v0.c2, rt1.c0, rt1.c0))>((rt1.c4, v0.c0, rt0.c0))))))OR(((rt1.c0) IS TRUE)))) ISNULL)) GROUP BY rt0.c1, rt0.c3;
SELECT rt0.c1, rt0.c3 FROM rt1, v0, rt0 GROUP BY rt0.c1, rt0.c3;
SELECT ALL rt0.c1 FROM rt0 RIGHT OUTER JOIN v0 ON (((((rt0.c0 IN ()))AND(CAST(rt0.c0 AS BLOB))))OR((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c4))))) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 RIGHT OUTER JOIN v0 ON (((((rt0.c0 IN ()))AND(CAST(rt0.c0 AS BLOB))))OR((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c4))))) GROUP BY rt0.c1 HAVING rt0.c1 UNION ALL SELECT ALL rt0.c1 FROM rt0 RIGHT OUTER JOIN v0 ON (((((rt0.c0 IN ()))AND(CAST(rt0.c0 AS BLOB))))OR((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c4))))) GROUP BY rt0.c1 HAVING (NOT (rt0.c1)) UNION ALL SELECT rt0.c1 FROM rt0 RIGHT OUTER JOIN v0 ON (((((rt0.c0 IN ()))AND(CAST(rt0.c0 AS BLOB))))OR((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c4))))) GROUP BY rt0.c1 HAVING ((rt0.c1) ISNULL);
SELECT ALL rt0.c1 FROM rt0 RIGHT OUTER JOIN v0 ON (((((rt0.c0 IN ()))AND(CAST(rt0.c0 AS BLOB))))OR((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c4))))) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 RIGHT OUTER JOIN v0 ON (((((rt0.c0 IN ()))AND(CAST(rt0.c0 AS BLOB))))OR((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c4))))) GROUP BY rt0.c1 HAVING rt0.c1 UNION ALL SELECT ALL rt0.c1 FROM rt0 RIGHT OUTER JOIN v0 ON (((((rt0.c0 IN ()))AND(CAST(rt0.c0 AS BLOB))))OR((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c4))))) GROUP BY rt0.c1 HAVING (NOT (rt0.c1)) UNION ALL SELECT rt0.c1 FROM rt0 RIGHT OUTER JOIN v0 ON (((((rt0.c0 IN ()))AND(CAST(rt0.c0 AS BLOB))))OR((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c4))))) GROUP BY rt0.c1 HAVING ((rt0.c1) ISNULL);
SELECT ALL rt0.c1 FROM rt0 RIGHT OUTER JOIN v0 ON (((((rt0.c0 IN ()))AND(CAST(rt0.c0 AS BLOB))))OR((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c4))))) GROUP BY rt0.c1;
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (json_valid((v0.c1 IN (v0.c2)))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (json_valid((v0.c1 IN (v0.c2)))))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((json_valid((v0.c1 IN (v0.c2)))) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c4, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c4, rt0.c2 FROM rt0 WHERE ((NOT (rt0.c3 COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c4, rt0.c2 FROM rt0 WHERE ((NOT ((NOT (rt0.c3 COLLATE RTRIM))))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c4, rt0.c2 FROM rt0 WHERE ((((NOT (rt0.c3 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c4, rt0.c2 FROM rt0;
SELECT ALL rt1.c4, rt1.c2, rt1.c3 FROM rt1 NATURAL JOIN rt0 GROUP BY rt1.c4, rt1.c2, rt1.c3;
SELECT ALL rt1.c4, rt1.c2, rt1.c3 FROM rt1 NATURAL JOIN rt0 WHERE (NULL) GROUP BY rt1.c4, rt1.c2, rt1.c3 UNION SELECT rt1.c4, rt1.c2, rt1.c3 FROM rt1 NATURAL JOIN rt0 WHERE ((NOT (NULL))) GROUP BY rt1.c4, rt1.c2, rt1.c3 UNION SELECT rt1.c4, rt1.c2, rt1.c3 FROM rt1 NATURAL JOIN rt0 WHERE (((NULL) ISNULL)) GROUP BY rt1.c4, rt1.c2, rt1.c3;
SELECT ALL rt1.c4, rt1.c2, rt1.c3 FROM rt1 NATURAL JOIN rt0 GROUP BY rt1.c4, rt1.c2, rt1.c3;
SELECT rt0.c0, rt1.c0, rt0.c4 FROM rt0, rt1, v0 GROUP BY rt0.c0, rt1.c0, rt0.c4;
SELECT rt0.c0, rt1.c0, rt0.c4 FROM rt0, rt1, v0 GROUP BY rt0.c0, rt1.c0, rt0.c4 HAVING COUNT(CASE WHEN AVG(v0.c2) THEN v0.c1 END) UNION ALL SELECT ALL rt0.c0, rt1.c0, rt0.c4 FROM rt0, rt1, v0 GROUP BY rt0.c0, rt1.c0, rt0.c4 HAVING (NOT (COUNT(CASE WHEN AVG(v0.c2) THEN v0.c1 END))) UNION ALL SELECT ALL rt0.c0, rt1.c0, rt0.c4 FROM rt0, rt1, v0 GROUP BY rt0.c0, rt1.c0, rt0.c4 HAVING ((COUNT(CASE WHEN AVG(v0.c2) THEN v0.c1 END)) ISNULL);
SELECT ALL * FROM rt1, v0, rt0;
SELECT ALL * FROM rt1, v0, rt0 WHERE ((((NOT (rt1.c4)))<>(938919908))) UNION ALL SELECT * FROM rt1, v0, rt0 WHERE ((NOT ((((NOT (rt1.c4)))<>(938919908))))) UNION ALL SELECT * FROM rt1, v0, rt0 WHERE ((((((NOT (rt1.c4)))<>(938919908))) ISNULL));
SELECT ALL * FROM rt1, v0, rt0;
SELECT DISTINCT rt1.c4, rt1.c3, rt1.c1 FROM v0, rt1;
SELECT DISTINCT rt1.c4, rt1.c3, rt1.c1 FROM v0, rt1 WHERE (((((((((((rt1.c0)OR(rt1.c0)))OR(v0.c1)))AND(v0.c1)))OR(rt1.c3))) IS TRUE)) UNION SELECT DISTINCT rt1.c4, rt1.c3, rt1.c1 FROM v0, rt1 WHERE ((NOT (((((((((((rt1.c0)OR(rt1.c0)))OR(v0.c1)))AND(v0.c1)))OR(rt1.c3))) IS TRUE)))) UNION SELECT DISTINCT rt1.c4, rt1.c3, rt1.c1 FROM v0, rt1 NOT INDEXED WHERE (((((((((((((rt1.c0)OR(rt1.c0)))OR(v0.c1)))AND(v0.c1)))OR(rt1.c3))) IS TRUE)) ISNULL));
SELECT DISTINCT rt1.c4, rt1.c3, rt1.c1 FROM v0, rt1;
SELECT ALL rt1.c4, rt0.c0, rt0.c4, v0.c2, rt1.c2, rt0.c3, rt1.c1, rt1.c0, v0.c0, rt1.c3, rt0.c2 FROM rt0, rt1, v0 GROUP BY rt1.c4, rt0.c0, rt0.c4, v0.c2, rt1.c2, rt0.c3, rt1.c1, rt1.c0, v0.c0, rt1.c3, rt0.c2;
SELECT ALL rt1.c4, rt0.c0, rt0.c4, v0.c2, rt1.c2, rt0.c3, rt1.c1, rt1.c0, v0.c0, rt1.c3, rt0.c2 FROM rt0, rt1, v0 WHERE (((CASE WHEN v0.c1 THEN rt0.c4 ELSE rt1.c2 END)=(((rt1.c3)*(rt0.c4))))) GROUP BY rt1.c4, rt0.c0, rt0.c4, v0.c2, rt1.c2, rt0.c3, rt1.c1, rt1.c0, v0.c0, rt1.c3, rt0.c2 UNION SELECT rt1.c4, rt0.c0, rt0.c4, v0.c2, rt1.c2, rt0.c3, rt1.c1, rt1.c0, v0.c0, rt1.c3, rt0.c2 FROM rt0, rt1, v0 WHERE ((NOT (((CASE WHEN v0.c1 THEN rt0.c4 ELSE rt1.c2 END)=(((rt1.c3)*(rt0.c4))))))) GROUP BY rt1.c4, rt0.c0, rt0.c4, v0.c2, rt1.c2, rt0.c3, rt1.c1, rt1.c0, v0.c0, rt1.c3, rt0.c2 UNION SELECT ALL rt1.c4, rt0.c0, rt0.c4, v0.c2, rt1.c2, rt0.c3, rt1.c1, rt1.c0, v0.c0, rt1.c3, rt0.c2 FROM rt0, rt1, v0 WHERE (((((CASE WHEN v0.c1 THEN rt0.c4 ELSE rt1.c2 END)==(((rt1.c3)*(rt0.c4))))) ISNULL)) GROUP BY rt1.c4, rt0.c0, rt0.c4, v0.c2, rt1.c2, rt0.c3, rt1.c1, rt1.c0, v0.c0, rt1.c3, rt0.c2;
SELECT ALL rt1.c4, rt0.c0, rt0.c4, v0.c2, rt1.c2, rt0.c3, rt1.c1, rt1.c0, v0.c0, rt1.c3, rt0.c2 FROM rt0, rt1, v0 GROUP BY rt1.c4, rt0.c0, rt0.c4, v0.c2, rt1.c2, rt0.c3, rt1.c1, rt1.c0, v0.c0, rt1.c3, rt0.c2;
SELECT rt1.c2, rt1.c1, rt1.c4, rt1.c3 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c4, rt1.c3;
SELECT rt1.c2, rt1.c1, rt1.c4, rt1.c3 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c4, rt1.c3 HAVING MIN(((((GROUP_CONCAT(rt1.c4))OR(rt1.c3)))AND('0.6392894711603092'))) UNION ALL SELECT rt1.c2, rt1.c1, rt1.c4, rt1.c3 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c4, rt1.c3 HAVING (NOT (MIN(((((GROUP_CONCAT(rt1.c4))OR(rt1.c3)))AND('0.6392894711603092'))))) UNION ALL SELECT ALL rt1.c2, rt1.c1, rt1.c4, rt1.c3 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c4, rt1.c3 HAVING ((MIN(((((GROUP_CONCAT(rt1.c4))OR(rt1.c3)))AND('0.6392894711603092')))) ISNULL);
SELECT * FROM rt0, v0;
SELECT ALL * FROM rt0, v0 WHERE (CASE (v0.c0 IN ())  WHEN CASE WHEN 'v,' THEN rt0.c4 ELSE rt0.c1 END THEN ((rt0.c4)%(rt0.c2)) WHEN ((v0.c2)%(rt0.c1)) THEN ((rt0.c1)<<(rt0.c0)) WHEN SQLITE_VERSION() THEN (((rt0.c0, rt0.c2, v0.c1)) NOT BETWEEN ((rt0.c4, rt0.c1, '2	')) AND ((v0.c0, rt0.c4, rt0.c3))) ELSE ((v0.c0) NOT BETWEEN (v0.c0) AND (rt0.c2)) END) UNION ALL SELECT * FROM rt0, v0 WHERE ((NOT (CASE (v0.c0 IN ())  WHEN CASE WHEN 'v,' THEN rt0.c4 ELSE rt0.c1 END THEN ((rt0.c4)%(rt0.c2)) WHEN ((v0.c2)%(rt0.c1)) THEN ((rt0.c1)<<(rt0.c0)) WHEN SQLITE_VERSION() THEN (((rt0.c0, rt0.c2, v0.c1)) NOT BETWEEN ((rt0.c4, rt0.c1, '2	')) AND ((v0.c0, rt0.c4, rt0.c3))) ELSE ((v0.c0) NOT BETWEEN (v0.c0) AND (rt0.c2)) END))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE (((CASE (v0.c0 IN ())  WHEN CASE WHEN 'v,' THEN rt0.c4 ELSE rt0.c1 END THEN ((rt0.c4)%(rt0.c2)) WHEN ((v0.c2)%(rt0.c1)) THEN ((rt0.c1)<<(rt0.c0)) WHEN SQLITE_VERSION() THEN (((rt0.c0, rt0.c2, v0.c1)) NOT BETWEEN ((rt0.c4, rt0.c1, '2	')) AND ((v0.c0, rt0.c4, rt0.c3))) ELSE ((v0.c0) NOT BETWEEN (v0.c0) AND (rt0.c2)) END) ISNULL));
SELECT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c3) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c3))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c3) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c3, rt0.c4, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1, rt0.c0;
SELECT ALL rt0.c3, rt0.c4, rt0.c1, rt0.c0 FROM rt0 WHERE (((((((rt0.c2)OR(rt0.c3)))AND(rt0.c0)))|(CAST(rt0.c2 AS REAL)))) GROUP BY rt0.c3, rt0.c4, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c3, rt0.c4, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((((((rt0.c2)OR(rt0.c3)))AND(rt0.c0)))|(CAST(rt0.c2 AS REAL)))))) GROUP BY rt0.c3, rt0.c4, rt0.c1, rt0.c0 UNION SELECT rt0.c3, rt0.c4, rt0.c1, rt0.c0 FROM rt0 WHERE (((((((((rt0.c2)OR(rt0.c3)))AND(rt0.c0)))|(CAST(rt0.c2 AS REAL)))) ISNULL)) GROUP BY rt0.c3, rt0.c4, rt0.c1, rt0.c0;
SELECT ALL rt0.c3, rt0.c4, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1, rt0.c0;
SELECT rt0.c0, rt1.c0, rt1.c4, rt1.c1, rt0.c4, rt1.c3, rt0.c3, rt0.c2, rt0.c1, rt1.c2 FROM rt0, rt1 GROUP BY rt0.c0, rt1.c0, rt1.c4, rt1.c1, rt0.c4, rt1.c3, rt0.c3, rt0.c2, rt0.c1, rt1.c2;
SELECT ALL rt0.c0, rt1.c0, rt1.c4, rt1.c1, rt0.c4, rt1.c3, rt0.c3, rt0.c2, rt0.c1, rt1.c2 FROM rt0, rt1 GROUP BY rt0.c0, rt1.c0, rt1.c4, rt1.c1, rt0.c4, rt1.c3, rt0.c3, rt0.c2, rt0.c1, rt1.c2 HAVING CASE AVG(rt0.c3)  WHEN rt0.c2 THEN COUNT(AVG(MAX(rt1.c4))) WHEN rt1.c2 THEN MAX(COUNT(rt1.c3)) WHEN MIN(rt0.c3) THEN COUNT(*) ELSE rt1.c3 END COLLATE BINARY UNION ALL SELECT ALL rt0.c0, rt1.c0, rt1.c4, rt1.c1, rt0.c4, rt1.c3, rt0.c3, rt0.c2, rt0.c1, rt1.c2 FROM rt0, rt1 GROUP BY rt0.c0, rt1.c0, rt1.c4, rt1.c1, rt0.c4, rt1.c3, rt0.c3, rt0.c2, rt0.c1, rt1.c2 HAVING (NOT (CASE AVG(rt0.c3)  WHEN rt0.c2 THEN COUNT(AVG(MAX(rt1.c4))) WHEN rt1.c2 THEN MAX(COUNT(rt1.c3)) WHEN MIN(rt0.c3) THEN COUNT(*) ELSE rt1.c3 END COLLATE BINARY)) UNION ALL SELECT rt0.c0, rt1.c0, rt1.c4, rt1.c1, rt0.c4, rt1.c3, rt0.c3, rt0.c2, rt0.c1, rt1.c2 FROM rt0, rt1 GROUP BY rt0.c0, rt1.c0, rt1.c4, rt1.c1, rt0.c4, rt1.c3, rt0.c3, rt0.c2, rt0.c1, rt1.c2 HAVING ((CASE AVG(rt0.c3)  WHEN rt0.c2 THEN COUNT(AVG(MAX(rt1.c4))) WHEN rt1.c2 THEN MAX(COUNT(rt1.c3)) WHEN MIN(rt0.c3) THEN COUNT(*) ELSE rt1.c3 END COLLATE BINARY) ISNULL);
SELECT * FROM rt0, rt1, v0;
SELECT * FROM rt0, rt1, v0 WHERE (((((((rt0.c4) ISNULL))AND(((v0.c1) NOTNULL))))AND((('虳_0WH0Pup') IS FALSE)))) UNION ALL SELECT ALL * FROM rt0, rt1, v0 WHERE ((NOT (((((((rt0.c4) ISNULL))AND(((v0.c1) NOTNULL))))AND((('虳_0WH0Pup') IS FALSE)))))) UNION ALL SELECT * FROM rt0, rt1, v0 WHERE (((((((((rt0.c4) ISNULL))AND(((v0.c1) NOTNULL))))AND((('虳_0WH0Pup') IS FALSE)))) ISNULL));
SELECT * FROM rt0, rt1, v0;
SELECT DISTINCT * FROM rt0, v0, rt1;
SELECT DISTINCT * FROM rt0, v0, rt1 WHERE (((v0.c1 COLLATE NOCASE) NOT BETWEEN (CAST(v0.c0 AS INTEGER)) AND (rt1.c3))) UNION SELECT DISTINCT * FROM rt0 NOT INDEXED, v0, rt1 WHERE ((NOT (((v0.c1 COLLATE NOCASE) NOT BETWEEN (CAST(v0.c0 AS INTEGER)) AND (rt1.c3))))) UNION SELECT DISTINCT * FROM rt0, v0, rt1 WHERE (((((v0.c1 COLLATE NOCASE) NOT BETWEEN (CAST(v0.c0 AS INTEGER)) AND (rt1.c3))) ISNULL));
SELECT DISTINCT * FROM rt0, v0, rt1;
SELECT rt0.c1, v0.c1, rt1.c2, rt1.c0, rt1.c3, v0.c2, rt1.c1, rt0.c0, v0.c0 FROM rt1, v0, rt0 GROUP BY rt0.c1, v0.c1, rt1.c2, rt1.c0, rt1.c3, v0.c2, rt1.c1, rt0.c0, v0.c0;
SELECT ALL rt0.c1, v0.c1, rt1.c2, rt1.c0, rt1.c3, v0.c2, rt1.c1, rt0.c0, v0.c0 FROM rt1, v0, rt0 WHERE (CASE WHEN '' THEN (v0.c2 IN ()) ELSE CASE v0.c1  WHEN rt1.c0 THEN rt0.c3 END END) GROUP BY rt0.c1, v0.c1, rt1.c2, rt1.c0, rt1.c3, v0.c2, rt1.c1, rt0.c0, v0.c0 UNION SELECT ALL rt0.c1, v0.c1, rt1.c2, rt1.c0, rt1.c3, v0.c2, rt1.c1, rt0.c0, v0.c0 FROM rt1, v0, rt0 WHERE ((NOT (CASE WHEN '' THEN (v0.c2 IN ()) ELSE CASE v0.c1  WHEN rt1.c0 THEN rt0.c3 END END))) GROUP BY rt0.c1, v0.c1, rt1.c2, rt1.c0, rt1.c3, v0.c2, rt1.c1, rt0.c0, v0.c0 UNION SELECT rt0.c1, v0.c1, rt1.c2, rt1.c0, rt1.c3, v0.c2, rt1.c1, rt0.c0, v0.c0 FROM rt1, v0, rt0 WHERE (((CASE WHEN '' THEN (v0.c2 IN ()) ELSE CASE v0.c1  WHEN rt1.c0 THEN rt0.c3 END END) ISNULL)) GROUP BY rt0.c1, v0.c1, rt1.c2, rt1.c0, rt1.c3, v0.c2, rt1.c1, rt0.c0, v0.c0;
SELECT rt0.c1, v0.c1, rt1.c2, rt1.c0, rt1.c3, v0.c2, rt1.c1, rt0.c0, v0.c0 FROM rt1, v0, rt0 GROUP BY rt0.c1, v0.c1, rt1.c2, rt1.c0, rt1.c3, v0.c2, rt1.c1, rt0.c0, v0.c0;
SELECT rt0.c3, rt0.c2, rt0.c4, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c4, rt0.c1, rt0.c0;
SELECT ALL rt0.c3, rt0.c2, rt0.c4, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c4, rt0.c1, rt0.c0 HAVING CASE WHEN AVG(GROUP_CONCAT(COUNT(*))) THEN SUM(COUNT(*)) ELSE AVG(AVG(AVG(rt0.c1))) END UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c4, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c4, rt0.c1, rt0.c0 HAVING (NOT (CASE WHEN AVG(GROUP_CONCAT(COUNT(*))) THEN SUM(COUNT(*)) ELSE AVG(AVG(AVG(rt0.c1))) END)) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c4, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c4, rt0.c1, rt0.c0 HAVING ((CASE WHEN AVG(GROUP_CONCAT(COUNT(*))) THEN SUM(COUNT(*)) ELSE AVG(AVG(AVG(rt0.c1))) END) ISNULL);
SELECT ALL rt1.c4, rt0.c0, rt0.c2 FROM rt1 FULL OUTER JOIN rt0 ON (NOT (rt0.c3 COLLATE BINARY));
SELECT ALL rt1.c4, rt0.c0, rt0.c2 FROM rt1 FULL OUTER JOIN rt0 ON (NOT (rt0.c3 COLLATE BINARY)) WHERE (CAST(rt1.c3 AS REAL)) UNION ALL SELECT ALL rt1.c4, rt0.c0, rt0.c2 FROM rt1 FULL OUTER JOIN rt0 ON (NOT (rt0.c3 COLLATE BINARY)) WHERE ((NOT (CAST(rt1.c3 AS REAL)))) UNION ALL SELECT rt1.c4, rt0.c0, rt0.c2 FROM rt1 FULL OUTER JOIN rt0 ON (NOT (rt0.c3 COLLATE BINARY)) WHERE (((CAST(rt1.c3 AS REAL)) ISNULL));
SELECT ALL rt1.c4, rt0.c0, rt0.c2 FROM rt1 FULL OUTER JOIN rt0 ON (NOT (rt0.c3 COLLATE BINARY));
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c4) ISNULL))AND(((rt0.c0) ISNULL)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c4) ISNULL))AND(((rt0.c0) ISNULL)))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c4) ISNULL))AND(((rt0.c0) ISNULL)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt1.c0, rt1.c4, rt0.c1, rt0.c0 FROM rt1, rt0 NATURAL JOIN v0 GROUP BY rt1.c0, rt1.c4, rt0.c1, rt0.c0;
SELECT rt1.c0, rt1.c4, rt0.c1, rt0.c0 FROM rt1, rt0 NATURAL JOIN v0 WHERE (((((rt1.c3)IS NOT(rt0.c4))) NOT BETWEEN (((v0.c2) IS TRUE)) AND (((v0.c2)IS NOT(v0.c1))))) GROUP BY rt1.c0, rt1.c4, rt0.c1, rt0.c0 UNION SELECT ALL rt1.c0, rt1.c4, rt0.c1, rt0.c0 FROM rt1, rt0 NATURAL JOIN v0 WHERE ((NOT (((((rt1.c3)IS NOT(rt0.c4))) NOT BETWEEN (((v0.c2) IS TRUE)) AND (((v0.c2)IS NOT(v0.c1))))))) GROUP BY rt1.c0, rt1.c4, rt0.c1, rt0.c0 UNION SELECT rt1.c0, rt1.c4, rt0.c1, rt0.c0 FROM rt1, rt0 NATURAL JOIN v0 WHERE (((((((rt1.c3)IS NOT(rt0.c4))) NOT BETWEEN (((v0.c2) IS TRUE)) AND (((v0.c2)IS NOT(v0.c1))))) ISNULL)) GROUP BY rt1.c0, rt1.c4, rt0.c1, rt0.c0;
SELECT ALL rt1.c0, rt1.c4, rt0.c1, rt0.c0 FROM rt1, rt0 NATURAL JOIN v0 GROUP BY rt1.c0, rt1.c4, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c3, rt1.c3, rt1.c1, rt0.c4, v0.c2, v0.c1, v0.c0, rt0.c1, rt1.c2, rt1.c4, rt1.c0, rt0.c0 FROM rt1, v0, rt0 GROUP BY rt0.c2, rt0.c3, rt1.c3, rt1.c1, rt0.c4, v0.c2, v0.c1, v0.c0, rt0.c1, rt1.c2, rt1.c4, rt1.c0, rt0.c0;
SELECT rt0.c2, rt0.c3, rt1.c3, rt1.c1, rt0.c4, v0.c2, v0.c1, v0.c0, rt0.c1, rt1.c2, rt1.c4, rt1.c0, rt0.c0 FROM rt1, v0, rt0 GROUP BY rt0.c2, rt0.c3, rt1.c3, rt1.c1, rt0.c4, v0.c2, v0.c1, v0.c0, rt0.c1, rt1.c2, rt1.c4, rt1.c0, rt0.c0 HAVING SUM(COUNT(v0.c0)) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt1.c3, rt1.c1, rt0.c4, v0.c2, v0.c1, v0.c0, rt0.c1, rt1.c2, rt1.c4, rt1.c0, rt0.c0 FROM rt1, v0, rt0 GROUP BY rt0.c2, rt0.c3, rt1.c3, rt1.c1, rt0.c4, v0.c2, v0.c1, v0.c0, rt0.c1, rt1.c2, rt1.c4, rt1.c0, rt0.c0 HAVING (NOT (SUM(COUNT(v0.c0)))) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt1.c3, rt1.c1, rt0.c4, v0.c2, v0.c1, v0.c0, rt0.c1, rt1.c2, rt1.c4, rt1.c0, rt0.c0 FROM rt1, v0, rt0 GROUP BY rt0.c2, rt0.c3, rt1.c3, rt1.c1, rt0.c4, v0.c2, v0.c1, v0.c0, rt0.c1, rt1.c2, rt1.c4, rt1.c0, rt0.c0 HAVING ((SUM(COUNT(v0.c0))) ISNULL);
SELECT * FROM rt1, rt0, v0;
SELECT * FROM rt1, rt0, v0 WHERE ((rt0.c2 IN ())) UNION ALL SELECT ALL * FROM rt1, rt0, v0 WHERE ((NOT ((rt0.c2 IN ())))) UNION ALL SELECT * FROM rt1, rt0, v0 WHERE ((((rt0.c2 IN ())) ISNULL));
SELECT * FROM rt1, rt0, v0;
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN rt1 ON ((rt0.c4)>>(((v0.c2)<(v0.c2)))) FULL OUTER JOIN v0 ON ((((rt0.c0)LIKE(rt0.c2)))>=(CASE rt1.c3  WHEN rt1.c1 THEN rt0.c4 END));
SELECT ALL v0.c2, rt1.c0, rt1.c1, rt1.c4, rt1.c3, rt1.c2 FROM v0, rt1 GROUP BY v0.c2, rt1.c0, rt1.c1, rt1.c4, rt1.c3, rt1.c2;
SELECT ALL v0.c2, rt1.c0, rt1.c1, rt1.c4, rt1.c3, rt1.c2 FROM v0, rt1 WHERE (((rt1.c4)>>(rt1.c3)) COLLATE RTRIM) GROUP BY v0.c2, rt1.c0, rt1.c1, rt1.c4, rt1.c3, rt1.c2 UNION SELECT ALL v0.c2, rt1.c0, rt1.c1, rt1.c4, rt1.c3, rt1.c2 FROM v0, rt1 WHERE ((NOT (((rt1.c4)>>(rt1.c3)) COLLATE RTRIM))) GROUP BY v0.c2, rt1.c0, rt1.c1, rt1.c4, rt1.c3, rt1.c2 UNION SELECT ALL v0.c2, rt1.c0, rt1.c1, rt1.c4, rt1.c3, rt1.c2 FROM v0, rt1 WHERE (((((rt1.c4)>>(rt1.c3)) COLLATE RTRIM) ISNULL)) GROUP BY v0.c2, rt1.c0, rt1.c1, rt1.c4, rt1.c3, rt1.c2;
SELECT ALL v0.c2, rt1.c0, rt1.c1, rt1.c4, rt1.c3, rt1.c2 FROM v0, rt1 GROUP BY v0.c2, rt1.c0, rt1.c1, rt1.c4, rt1.c3, rt1.c2;
SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1;
SELECT v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1 HAVING '-811961230' UNION ALL SELECT v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1 HAVING (NOT ('-811961230')) UNION ALL SELECT v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1 HAVING (('-811961230') ISNULL);
SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1;
SELECT v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1 HAVING '-811961230' UNION ALL SELECT v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1 HAVING (NOT ('-811961230')) UNION ALL SELECT v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1 HAVING (('-811961230') ISNULL);
SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1;
SELECT ALL v0.c2, v0.c0 FROM v0;
SELECT ALL v0.c2, v0.c0 FROM v0 WHERE (((((v0.c2) NOTNULL)) BETWEEN ((- (v0.c0))) AND ((v0.c0 IN (NULL))))) UNION ALL SELECT ALL v0.c2, v0.c0 FROM v0 WHERE ((NOT (((((v0.c2) NOTNULL)) BETWEEN ((- (v0.c0))) AND ((v0.c0 IN (NULL))))))) UNION ALL SELECT ALL v0.c2, v0.c0 FROM v0 WHERE (((((((v0.c2) NOTNULL)) BETWEEN ((- (v0.c0))) AND ((v0.c0 IN (NULL))))) ISNULL));
SELECT ALL v0.c2, v0.c0 FROM v0;
SELECT DISTINCT * FROM v0, rt0 NOT INDEXED;
SELECT DISTINCT * FROM v0, rt0 WHERE (CASE ('-807593731' IN (rt0.c4, rt0.c0))  WHEN (NOT (rt0.c0)) THEN (v0.c0 IN ()) ELSE v0.c2 COLLATE BINARY END) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (CASE ('-807593731' IN (rt0.c4, rt0.c0))  WHEN (NOT (rt0.c0)) THEN (v0.c0 IN ()) ELSE v0.c2 COLLATE BINARY END))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((CASE ('-807593731' IN (rt0.c4, rt0.c0))  WHEN (NOT (rt0.c0)) THEN (v0.c0 IN ()) ELSE v0.c2 COLLATE BINARY END) ISNULL));
SELECT DISTINCT * FROM v0, rt0 NOT INDEXED;
SELECT v0.c1, v0.c0, v0.c2, rt1.c1, rt0.c1, rt0.c0, rt1.c2, rt1.c3, rt0.c3, rt1.c0, rt1.c4 FROM rt0, rt1, v0 GROUP BY v0.c1, v0.c0, v0.c2, rt1.c1, rt0.c1, rt0.c0, rt1.c2, rt1.c3, rt0.c3, rt1.c0, rt1.c4;
SELECT v0.c1, v0.c0, v0.c2, rt1.c1, rt0.c1, rt0.c0, rt1.c2, rt1.c3, rt0.c3, rt1.c0, rt1.c4 FROM rt0, rt1, v0 WHERE (0xffffffffede1390c) GROUP BY v0.c1, v0.c0, v0.c2, rt1.c1, rt0.c1, rt0.c0, rt1.c2, rt1.c3, rt0.c3, rt1.c0, rt1.c4 UNION SELECT ALL v0.c1, v0.c0, v0.c2, rt1.c1, rt0.c1, rt0.c0, rt1.c2, rt1.c3, rt0.c3, rt1.c0, rt1.c4 FROM rt0, rt1, v0 WHERE ((NOT (0Xffffffffede1390c))) GROUP BY v0.c1, v0.c0, v0.c2, rt1.c1, rt0.c1, rt0.c0, rt1.c2, rt1.c3, rt0.c3, rt1.c0, rt1.c4 UNION SELECT v0.c1, v0.c0, v0.c2, rt1.c1, rt0.c1, rt0.c0, rt1.c2, rt1.c3, rt0.c3, rt1.c0, rt1.c4 FROM rt0, rt1, v0 WHERE (((0xffffffffede1390c) ISNULL)) GROUP BY v0.c1, v0.c0, v0.c2, rt1.c1, rt0.c1, rt0.c0, rt1.c2, rt1.c3, rt0.c3, rt1.c0, rt1.c4;
SELECT v0.c1, v0.c0, v0.c2, rt1.c1, rt0.c1, rt0.c0, rt1.c2, rt1.c3, rt0.c3, rt1.c0, rt1.c4 FROM rt0, rt1, v0 GROUP BY v0.c1, v0.c0, v0.c2, rt1.c1, rt0.c1, rt0.c0, rt1.c2, rt1.c3, rt0.c3, rt1.c0, rt1.c4;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((v0.c2 IN ()))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((NOT ((v0.c2 IN ()))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((NOT ((v0.c2 IN ())))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((v0.c2 IN ()))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((NOT ((v0.c2 IN ()))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((NOT ((v0.c2 IN ())))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c3 FROM rt1, rt0, v0;
SELECT ALL rt0.c3 FROM rt1, rt0, v0 WHERE (rt0.c0) UNION ALL SELECT ALL rt0.c3 FROM rt1, rt0, v0 WHERE ((NOT (rt0.c0))) UNION ALL SELECT rt0.c3 FROM rt1, rt0, v0 WHERE (((rt0.c0) ISNULL));
SELECT rt0.c3 FROM rt1, rt0, v0;
SELECT DISTINCT * FROM rt0 INNER JOIN v0 ON ((((v0.c1)|(v0.c2)))&((((rt0.c2))>((rt0.c1)))));
SELECT DISTINCT * FROM rt0 INNER JOIN v0 ON ((((v0.c1)|(v0.c2)))&((((rt0.c2))>((rt0.c1))))) WHERE (RTRIM(((rt0.c4) BETWEEN (rt0.c3) AND (v0.c2)))) UNION SELECT DISTINCT * FROM rt0 INNER JOIN v0 ON ((((v0.c1)|(v0.c2)))&((((rt0.c2))>((rt0.c1))))) WHERE ((NOT (RTRIM(((rt0.c4) BETWEEN (rt0.c3) AND (v0.c2)))))) UNION SELECT DISTINCT * FROM rt0 INNER JOIN v0 ON ((((v0.c1)|(v0.c2)))&((((rt0.c2))>((rt0.c1))))) WHERE (((RTRIM(((rt0.c4) BETWEEN (rt0.c3) AND (v0.c2)))) ISNULL));
SELECT DISTINCT * FROM rt0 INNER JOIN v0 ON ((((v0.c1)|(v0.c2)))&((((rt0.c2))>((rt0.c1)))));
SELECT v0.c2, rt1.c2, rt1.c3, rt1.c0 FROM v0, rt1 GROUP BY v0.c2, rt1.c2, rt1.c3, rt1.c0;
SELECT ALL v0.c2, rt1.c2, rt1.c3, rt1.c0 FROM v0, rt1 WHERE ((CASE WHEN v0.c1 THEN v0.c1 ELSE v0.c0 END IN (((((v0.c2)AND(rt1.c4)))AND(rt1.c2))))) GROUP BY v0.c2, rt1.c2, rt1.c3, rt1.c0 UNION SELECT ALL v0.c2, rt1.c2, rt1.c3, rt1.c0 FROM v0, rt1 WHERE ((NOT ((CASE WHEN v0.c1 THEN v0.c1 ELSE v0.c0 END IN (((((v0.c2)AND(rt1.c4)))AND(rt1.c2))))))) GROUP BY v0.c2, rt1.c2, rt1.c3, rt1.c0 UNION SELECT ALL v0.c2, rt1.c2, rt1.c3, rt1.c0 FROM v0, rt1 WHERE ((((CASE WHEN v0.c1 THEN v0.c1 ELSE v0.c0 END IN (((((v0.c2)AND(rt1.c4)))AND(rt1.c2))))) ISNULL)) GROUP BY v0.c2, rt1.c2, rt1.c3, rt1.c0;
SELECT v0.c2, rt1.c2, rt1.c3, rt1.c0 FROM v0, rt1 GROUP BY v0.c2, rt1.c2, rt1.c3, rt1.c0;
SELECT rt0.c1, rt1.c2, rt1.c3, rt0.c0, rt1.c1, rt0.c3, v0.c1, rt0.c2, rt0.c4, rt1.c0, v0.c2, rt1.c4 FROM v0, rt1, rt0 GROUP BY rt0.c1, rt1.c2, rt1.c3, rt0.c0, rt1.c1, rt0.c3, v0.c1, rt0.c2, rt0.c4, rt1.c0, v0.c2, rt1.c4;
SELECT ALL rt0.c1, rt1.c2, rt1.c3, rt0.c0, rt1.c1, rt0.c3, v0.c1, rt0.c2, rt0.c4, rt1.c0, v0.c2, rt1.c4 FROM v0, rt1, rt0 GROUP BY rt0.c1, rt1.c2, rt1.c3, rt0.c0, rt1.c1, rt0.c3, v0.c1, rt0.c2, rt0.c4, rt1.c0, v0.c2, rt1.c4 HAVING (-1153288462 IN ()) UNION ALL SELECT rt0.c1, rt1.c2, rt1.c3, rt0.c0, rt1.c1, rt0.c3, v0.c1, rt0.c2, rt0.c4, rt1.c0, v0.c2, rt1.c4 FROM v0, rt1, rt0 GROUP BY rt0.c1, rt1.c2, rt1.c3, rt0.c0, rt1.c1, rt0.c3, v0.c1, rt0.c2, rt0.c4, rt1.c0, v0.c2, rt1.c4 HAVING (NOT ((-1153288462 IN ()))) UNION ALL SELECT rt0.c1, rt1.c2, rt1.c3, rt0.c0, rt1.c1, rt0.c3, v0.c1, rt0.c2, rt0.c4, rt1.c0, v0.c2, rt1.c4 FROM v0, rt1, rt0 GROUP BY rt0.c1, rt1.c2, rt1.c3, rt0.c0, rt1.c1, rt0.c3, v0.c1, rt0.c2, rt0.c4, rt1.c0, v0.c2, rt1.c4 HAVING (((-1153288462 IN ())) ISNULL);
SELECT rt0.c1, rt1.c2, rt1.c3, rt0.c0, rt1.c1, rt0.c3, v0.c1, rt0.c2, rt0.c4, rt1.c0, v0.c2, rt1.c4 FROM v0, rt1, rt0 GROUP BY rt0.c1, rt1.c2, rt1.c3, rt0.c0, rt1.c1, rt0.c3, v0.c1, rt0.c2, rt0.c4, rt1.c0, v0.c2, rt1.c4;
SELECT ALL rt0.c1, rt1.c2, rt1.c3, rt0.c0, rt1.c1, rt0.c3, v0.c1, rt0.c2, rt0.c4, rt1.c0, v0.c2, rt1.c4 FROM v0, rt1, rt0 GROUP BY rt0.c1, rt1.c2, rt1.c3, rt0.c0, rt1.c1, rt0.c3, v0.c1, rt0.c2, rt0.c4, rt1.c0, v0.c2, rt1.c4 HAVING (-1153288462 IN ()) UNION ALL SELECT rt0.c1, rt1.c2, rt1.c3, rt0.c0, rt1.c1, rt0.c3, v0.c1, rt0.c2, rt0.c4, rt1.c0, v0.c2, rt1.c4 FROM v0, rt1, rt0 GROUP BY rt0.c1, rt1.c2, rt1.c3, rt0.c0, rt1.c1, rt0.c3, v0.c1, rt0.c2, rt0.c4, rt1.c0, v0.c2, rt1.c4 HAVING (NOT ((-1153288462 IN ()))) UNION ALL SELECT rt0.c1, rt1.c2, rt1.c3, rt0.c0, rt1.c1, rt0.c3, v0.c1, rt0.c2, rt0.c4, rt1.c0, v0.c2, rt1.c4 FROM v0, rt1, rt0 GROUP BY rt0.c1, rt1.c2, rt1.c3, rt0.c0, rt1.c1, rt0.c3, v0.c1, rt0.c2, rt0.c4, rt1.c0, v0.c2, rt1.c4 HAVING (((-1153288462 IN ())) ISNULL);
SELECT rt0.c1, rt1.c2, rt1.c3, rt0.c0, rt1.c1, rt0.c3, v0.c1, rt0.c2, rt0.c4, rt1.c0, v0.c2, rt1.c4 FROM v0, rt1, rt0 GROUP BY rt0.c1, rt1.c2, rt1.c3, rt0.c0, rt1.c1, rt0.c3, v0.c1, rt0.c2, rt0.c4, rt1.c0, v0.c2, rt1.c4;
SELECT ALL SUM(CASE RTRIM(rt0.c1)  WHEN UNLIKELY(DISTINCT v0.c1) THEN rt0.c3 END) FROM v0, rt0;
SELECT rt0.c3, rt0.c1, rt0.c0, rt0.c4, rt0.c2 FROM rt0;
SELECT ALL rt0.c3, rt0.c1, rt0.c0, rt0.c4, rt0.c2 FROM rt0 WHERE (((((rt0.c2)||(rt0.c2))) BETWEEN (CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c0 END) AND (((rt0.c0)>=(rt0.c3))))) UNION ALL SELECT rt0.c3, rt0.c1, rt0.c0, rt0.c4, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c2)||(rt0.c2))) BETWEEN (CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c0 END) AND (((rt0.c0)>=(rt0.c3))))))) UNION ALL SELECT rt0.c3, rt0.c1, rt0.c0, rt0.c4, rt0.c2 FROM rt0 WHERE (((((((rt0.c2)||(rt0.c2))) BETWEEN (CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c0 END) AND (((rt0.c0)>=(rt0.c3))))) ISNULL));
SELECT rt0.c3, rt0.c1, rt0.c0, rt0.c4, rt0.c2 FROM rt0;
SELECT DISTINCT v0.c2, v0.c1, rt0.c4, rt0.c2 FROM rt0, v0;
SELECT DISTINCT v0.c2, v0.c1, rt0.c4, rt0.c2 FROM rt0, v0 WHERE (SUBSTR(((rt0.c1) NOT NULL), UPPER(DISTINCT v0.c1))) UNION SELECT DISTINCT v0.c2, v0.c1, rt0.c4, rt0.c2 FROM rt0, v0 WHERE ((NOT (SUBSTR(((rt0.c1) NOT NULL), UPPER(DISTINCT v0.c1))))) UNION SELECT DISTINCT v0.c2, v0.c1, rt0.c4, rt0.c2 FROM rt0, v0 WHERE (((SUBSTR(((rt0.c1) NOT NULL), UPPER(DISTINCT v0.c1))) ISNULL));
SELECT DISTINCT v0.c2, v0.c1, rt0.c4, rt0.c2 FROM rt0, v0;
SELECT v0.c1, rt0.c4 FROM v0 CROSS JOIN rt0 ON UNICODE(v0.c1) COLLATE RTRIM GROUP BY v0.c1, rt0.c4;
SELECT ALL v0.c1, rt0.c4 FROM v0 CROSS JOIN rt0 ON UNICODE(v0.c1) COLLATE RTRIM WHERE (((CASE WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c1 THEN '2040851586' END)>>(((rt0.c0)GLOB(rt0.c4))))) GROUP BY v0.c1, rt0.c4 UNION SELECT v0.c1, rt0.c4 FROM v0 CROSS JOIN rt0 ON UNICODE(v0.c1) COLLATE RTRIM WHERE ((NOT (((CASE WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c1 THEN '2040851586' END)>>(((rt0.c0)GLOB(rt0.c4))))))) GROUP BY v0.c1, rt0.c4 UNION SELECT ALL v0.c1, rt0.c4 FROM v0 CROSS JOIN rt0 ON UNICODE(v0.c1) COLLATE RTRIM WHERE (((((CASE WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c1 THEN '2040851586' END)>>(((rt0.c0)GLOB(rt0.c4))))) ISNULL)) GROUP BY v0.c1, rt0.c4;
SELECT v0.c1, rt0.c4 FROM v0 CROSS JOIN rt0 ON UNICODE(v0.c1) COLLATE RTRIM GROUP BY v0.c1, rt0.c4;
SELECT ALL rt0.c1, v0.c2, rt0.c4, rt0.c3, v0.c0, v0.c1 FROM rt0, v0 GROUP BY rt0.c1, v0.c2, rt0.c4, rt0.c3, v0.c0, v0.c1;
SELECT rt0.c1, v0.c2, rt0.c4, rt0.c3, v0.c0, v0.c1 FROM rt0, v0 GROUP BY rt0.c1, v0.c2, rt0.c4, rt0.c3, v0.c0, v0.c1 HAVING GROUP_CONCAT(AVG(SUM(COUNT(*)))) UNION ALL SELECT rt0.c1, v0.c2, rt0.c4, rt0.c3, v0.c0, v0.c1 FROM rt0, v0 GROUP BY rt0.c1, v0.c2, rt0.c4, rt0.c3, v0.c0, v0.c1 HAVING (NOT (GROUP_CONCAT(AVG(SUM(COUNT(*)))))) UNION ALL SELECT rt0.c1, v0.c2, rt0.c4, rt0.c3, v0.c0, v0.c1 FROM rt0, v0 GROUP BY rt0.c1, v0.c2, rt0.c4, rt0.c3, v0.c0, v0.c1 HAVING ((GROUP_CONCAT(AVG(SUM(COUNT(*))))) ISNULL);
SELECT * FROM rt0, v0, rt1;
SELECT * FROM rt0, v0, rt1 WHERE ((((NULL))>((v0.c1))) COLLATE BINARY) UNION ALL SELECT ALL * FROM rt0, v0, rt1 WHERE ((NOT ((((NULL))>((v0.c1))) COLLATE BINARY))) UNION ALL SELECT * FROM rt0, v0, rt1 WHERE ((((((NULL))>((v0.c1))) COLLATE BINARY) ISNULL));
SELECT * FROM rt0, v0, rt1;
SELECT DISTINCT v0.c0, rt1.c2, v0.c1, rt1.c4, v0.c2, rt1.c0, rt1.c3, rt1.c1 FROM v0, rt1;
SELECT DISTINCT v0.c0, rt1.c2, v0.c1, rt1.c4, v0.c2, rt1.c0, rt1.c3, rt1.c1 FROM v0, rt1 WHERE (((CAST(v0.c1 AS REAL)) NOT NULL)) UNION SELECT DISTINCT v0.c0, rt1.c2, v0.c1, rt1.c4, v0.c2, rt1.c0, rt1.c3, rt1.c1 FROM v0, rt1 WHERE ((NOT (((CAST(v0.c1 AS REAL)) NOT NULL)))) UNION SELECT DISTINCT v0.c0, rt1.c2, v0.c1, rt1.c4, v0.c2, rt1.c0, rt1.c3, rt1.c1 FROM v0, rt1 WHERE (((((CAST(v0.c1 AS REAL)) NOT NULL)) ISNULL));
SELECT DISTINCT v0.c0, rt1.c2, v0.c1, rt1.c4, v0.c2, rt1.c0, rt1.c3, rt1.c1 FROM v0, rt1;
SELECT rt1.c1, rt1.c3, rt1.c4, rt1.c0, rt0.c2, rt0.c3, rt0.c4 FROM rt0, rt1 GROUP BY rt1.c1, rt1.c3, rt1.c4, rt1.c0, rt0.c2, rt0.c3, rt0.c4;
SELECT rt1.c1, rt1.c3, rt1.c4, rt1.c0, rt0.c2, rt0.c3, rt0.c4 FROM rt0, rt1 WHERE (0.45441434930181923) GROUP BY rt1.c1, rt1.c3, rt1.c4, rt1.c0, rt0.c2, rt0.c3, rt0.c4 UNION SELECT rt1.c1, rt1.c3, rt1.c4, rt1.c0, rt0.c2, rt0.c3, rt0.c4 FROM rt0, rt1 WHERE ((NOT (0.45441434930181923))) GROUP BY rt1.c1, rt1.c3, rt1.c4, rt1.c0, rt0.c2, rt0.c3, rt0.c4 UNION SELECT ALL rt1.c1, rt1.c3, rt1.c4, rt1.c0, rt0.c2, rt0.c3, rt0.c4 FROM rt0, rt1 WHERE (((0.45441434930181923) ISNULL)) GROUP BY rt1.c1, rt1.c3, rt1.c4, rt1.c0, rt0.c2, rt0.c3, rt0.c4;
SELECT rt1.c1, rt1.c3, rt1.c4, rt1.c0, rt0.c2, rt0.c3, rt0.c4 FROM rt0, rt1 GROUP BY rt1.c1, rt1.c3, rt1.c4, rt1.c0, rt0.c2, rt0.c3, rt0.c4;
SELECT rt0.c1, rt0.c3, rt1.c0 FROM rt0, rt1, v0 GROUP BY rt0.c1, rt0.c3, rt1.c0;
SELECT ALL rt0.c1, rt0.c3, rt1.c0 FROM rt0, rt1, v0 GROUP BY rt0.c1, rt0.c3, rt1.c0 HAVING ((((rt1.c0) BETWEEN (COUNT(*)) AND (COUNT(*)))) IS TRUE) UNION ALL SELECT ALL rt0.c1, rt0.c3, rt1.c0 FROM rt0, rt1, v0 GROUP BY rt0.c1, rt0.c3, rt1.c0 HAVING (NOT (((((rt1.c0) BETWEEN (COUNT(*)) AND (COUNT(*)))) IS TRUE))) UNION ALL SELECT ALL rt0.c1, rt0.c3, rt1.c0 FROM rt0, rt1, v0 GROUP BY rt0.c1, rt0.c3, rt1.c0 HAVING ((((((rt1.c0) BETWEEN (COUNT(*)) AND (COUNT(*)))) IS TRUE)) ISNULL);
SELECT rt0.c1, rt0.c3, rt1.c0 FROM rt0, rt1, v0 GROUP BY rt0.c1, rt0.c3, rt1.c0;
SELECT ALL rt0.c1, rt0.c3, rt1.c0 FROM rt0, rt1, v0 GROUP BY rt0.c1, rt0.c3, rt1.c0 HAVING ((((rt1.c0) BETWEEN (COUNT(*)) AND (COUNT(*)))) IS TRUE) UNION ALL SELECT ALL rt0.c1, rt0.c3, rt1.c0 FROM rt0, rt1, v0 GROUP BY rt0.c1, rt0.c3, rt1.c0 HAVING (NOT (((((rt1.c0) BETWEEN (COUNT(*)) AND (COUNT(*)))) IS TRUE))) UNION ALL SELECT ALL rt0.c1, rt0.c3, rt1.c0 FROM rt0, rt1, v0 GROUP BY rt0.c1, rt0.c3, rt1.c0 HAVING ((((((rt1.c0) BETWEEN (COUNT(*)) AND (COUNT(*)))) IS TRUE)) ISNULL);
SELECT rt0.c1, rt0.c3, rt1.c0 FROM rt0, rt1, v0 GROUP BY rt0.c1, rt0.c3, rt1.c0;
SELECT rt0.c3, rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c3, rt0.c1, rt0.c2 FROM rt0 NOT INDEXED WHERE (((rt0.c2 COLLATE RTRIM)|(((rt0.c0)/(rt0.c4))))) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((rt0.c2 COLLATE RTRIM)|(((rt0.c0)/(rt0.c4))))))) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c2 FROM rt0 WHERE (((((rt0.c2 COLLATE RTRIM)|(((rt0.c0)/(rt0.c4))))) ISNULL));
SELECT rt0.c3, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c3, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c3, rt0.c1 FROM rt0 WHERE (((TYPEOF(rt0.c0)) IS TRUE)) UNION SELECT DISTINCT rt0.c3, rt0.c1 FROM rt0 WHERE ((NOT (((TYPEOF(rt0.c0)) IS TRUE)))) UNION SELECT DISTINCT rt0.c3, rt0.c1 FROM rt0 WHERE (((((TYPEOF(rt0.c0)) IS TRUE)) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c1 FROM rt0;
SELECT ALL rt0.c3, rt0.c1, rt1.c4, rt0.c4, rt0.c2, rt1.c2, v0.c1, rt1.c3 FROM v0, rt1, rt0 GROUP BY rt0.c3, rt0.c1, rt1.c4, rt0.c4, rt0.c2, rt1.c2, v0.c1, rt1.c3;
SELECT rt0.c3, rt0.c1, rt1.c4, rt0.c4, rt0.c2, rt1.c2, v0.c1, rt1.c3 FROM v0, rt1, rt0 WHERE (((((rt1.c1)!=(rt0.c3))) BETWEEN (((((v0.c1)AND(v0.c0)))AND(v0.c2))) AND (CASE WHEN rt0.c4 THEN v0.c0 END))) GROUP BY rt0.c3, rt0.c1, rt1.c4, rt0.c4, rt0.c2, rt1.c2, v0.c1, rt1.c3 UNION SELECT ALL rt0.c3, rt0.c1, rt1.c4, rt0.c4, rt0.c2, rt1.c2, v0.c1, rt1.c3 FROM v0, rt1, rt0 WHERE ((NOT (((((rt1.c1)!=(rt0.c3))) BETWEEN (((((v0.c1)AND(v0.c0)))AND(v0.c2))) AND (CASE WHEN rt0.c4 THEN v0.c0 END))))) GROUP BY rt0.c3, rt0.c1, rt1.c4, rt0.c4, rt0.c2, rt1.c2, v0.c1, rt1.c3 UNION SELECT rt0.c3, rt0.c1, rt1.c4, rt0.c4, rt0.c2, rt1.c2, v0.c1, rt1.c3 FROM v0, rt1, rt0 WHERE (((((((rt1.c1)!=(rt0.c3))) BETWEEN (((((v0.c1)AND(v0.c0)))AND(v0.c2))) AND (CASE WHEN rt0.c4 THEN v0.c0 END))) ISNULL)) GROUP BY rt0.c3, rt0.c1, rt1.c4, rt0.c4, rt0.c2, rt1.c2, v0.c1, rt1.c3;
SELECT ALL rt0.c3, rt0.c1, rt1.c4, rt0.c4, rt0.c2, rt1.c2, v0.c1, rt1.c3 FROM v0, rt1, rt0 GROUP BY rt0.c3, rt0.c1, rt1.c4, rt0.c4, rt0.c2, rt1.c2, v0.c1, rt1.c3;
SELECT rt1.c2, rt0.c0, rt0.c1, rt1.c3, rt0.c4 FROM v0, rt1 LEFT OUTER JOIN rt0 ON ((((rt1.c2) IS TRUE))IS(COALESCE(rt1.c4, rt1.c4))) GROUP BY rt1.c2, rt0.c0, rt0.c1, rt1.c3, rt0.c4;
SELECT rt1.c2, rt0.c0, rt0.c1, rt1.c3, rt0.c4 FROM v0, rt1 LEFT OUTER JOIN rt0 ON ((((rt1.c2) IS TRUE))IS(COALESCE(rt1.c4, rt1.c4))) GROUP BY rt1.c2, rt0.c0, rt0.c1, rt1.c3, rt0.c4 HAVING GROUP_CONCAT(COUNT(v0.c0)) UNION ALL SELECT rt1.c2, rt0.c0, rt0.c1, rt1.c3, rt0.c4 FROM v0, rt1 LEFT OUTER JOIN rt0 ON ((((rt1.c2) IS TRUE))IS(COALESCE(rt1.c4, rt1.c4))) GROUP BY rt1.c2, rt0.c0, rt0.c1, rt1.c3, rt0.c4 HAVING (NOT (GROUP_CONCAT(COUNT(v0.c0)))) UNION ALL SELECT ALL rt1.c2, rt0.c0, rt0.c1, rt1.c3, rt0.c4 FROM v0, rt1 LEFT OUTER JOIN rt0 ON ((((rt1.c2) IS TRUE))IS(COALESCE(rt1.c4, rt1.c4))) GROUP BY rt1.c2, rt0.c0, rt0.c1, rt1.c3, rt0.c4 HAVING ((GROUP_CONCAT(COUNT(v0.c0))) ISNULL);
SELECT MIN(CASE WHEN CAST(rt0.c0 AS NUMERIC) THEN ((rt0.c1)||(rt1.c0)) END) FROM rt0, rt1, v0 ORDER BY v0.c2 DESC;
SELECT ALL * FROM rt1;
SELECT * FROM rt1 WHERE ((((((rt1.c2)OR(rt1.c4)))OR(rt1.c1)) IN (HEX(DISTINCT rt1.c4)))) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT ((((((rt1.c2)OR(rt1.c4)))OR(rt1.c1)) IN (HEX(DISTINCT rt1.c4)))))) UNION ALL SELECT * FROM rt1 WHERE ((((((((rt1.c2)OR(rt1.c4)))OR(rt1.c1)) IN (HEX(DISTINCT rt1.c4)))) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT v0.c0, v0.c1, rt0.c1, v0.c2, rt0.c0, rt0.c2, rt0.c4, rt0.c3 FROM rt0, v0;
SELECT DISTINCT v0.c0, v0.c1, rt0.c1, v0.c2, rt0.c0, rt0.c2, rt0.c4, rt0.c3 FROM rt0, v0 WHERE ((+ (((((rt0.c2)AND(rt0.c2)))AND(rt0.c0))))) UNION SELECT DISTINCT v0.c0, v0.c1, rt0.c1, v0.c2, rt0.c0, rt0.c2, rt0.c4, rt0.c3 FROM rt0, v0 WHERE ((NOT ((+ (((((rt0.c2)AND(rt0.c2)))AND(rt0.c0))))))) UNION SELECT DISTINCT v0.c0, v0.c1, rt0.c1, v0.c2, rt0.c0, rt0.c2, rt0.c4, rt0.c3 FROM rt0, v0 WHERE ((((+ (((((rt0.c2)AND(rt0.c2)))AND(rt0.c0))))) ISNULL));
SELECT DISTINCT v0.c0, v0.c1, rt0.c1, v0.c2, rt0.c0, rt0.c2, rt0.c4, rt0.c3 FROM rt0, v0;
SELECT rt1.c0, rt0.c4, rt0.c2, rt0.c0, rt1.c4, rt1.c3, rt1.c2 FROM rt1, rt0 GROUP BY rt1.c0, rt0.c4, rt0.c2, rt0.c0, rt1.c4, rt1.c3, rt1.c2;
SELECT ALL rt1.c0, rt0.c4, rt0.c2, rt0.c0, rt1.c4, rt1.c3, rt1.c2 FROM rt1, rt0 WHERE (CAST(CAST(rt1.c2 AS REAL) AS INTEGER)) GROUP BY rt1.c0, rt0.c4, rt0.c2, rt0.c0, rt1.c4, rt1.c3, rt1.c2 UNION SELECT ALL rt1.c0, rt0.c4, rt0.c2, rt0.c0, rt1.c4, rt1.c3, rt1.c2 FROM rt1, rt0 WHERE ((NOT (CAST(CAST(rt1.c2 AS REAL) AS INTEGER)))) GROUP BY rt1.c0, rt0.c4, rt0.c2, rt0.c0, rt1.c4, rt1.c3, rt1.c2 UNION SELECT ALL rt1.c0, rt0.c4, rt0.c2, rt0.c0, rt1.c4, rt1.c3, rt1.c2 FROM rt1, rt0 WHERE (((CAST(CAST(rt1.c2 AS REAL) AS INTEGER)) ISNULL)) GROUP BY rt1.c0, rt0.c4, rt0.c2, rt0.c0, rt1.c4, rt1.c3, rt1.c2;
SELECT rt1.c0, rt0.c4, rt0.c2, rt0.c0, rt1.c4, rt1.c3, rt1.c2 FROM rt1, rt0 GROUP BY rt1.c0, rt0.c4, rt0.c2, rt0.c0, rt1.c4, rt1.c3, rt1.c2;
SELECT v0.c1, rt0.c2, rt1.c1, rt1.c4, rt0.c3, rt1.c0, v0.c0, rt0.c0, rt1.c2, v0.c2, rt0.c1, rt1.c3 FROM v0, rt0, rt1 GROUP BY v0.c1, rt0.c2, rt1.c1, rt1.c4, rt0.c3, rt1.c0, v0.c0, rt0.c0, rt1.c2, v0.c2, rt0.c1, rt1.c3;
SELECT ALL v0.c1, rt0.c2, rt1.c1, rt1.c4, rt0.c3, rt1.c0, v0.c0, rt0.c0, rt1.c2, v0.c2, rt0.c1, rt1.c3 FROM v0, rt0, rt1 GROUP BY v0.c1, rt0.c2, rt1.c1, rt1.c4, rt0.c3, rt1.c0, v0.c0, rt0.c0, rt1.c2, v0.c2, rt0.c1, rt1.c3 HAVING GROUP_CONCAT(TOTAL(v0.c1)) UNION ALL SELECT ALL v0.c1, rt0.c2, rt1.c1, rt1.c4, rt0.c3, rt1.c0, v0.c0, rt0.c0, rt1.c2, v0.c2, rt0.c1, rt1.c3 FROM v0, rt0, rt1 GROUP BY v0.c1, rt0.c2, rt1.c1, rt1.c4, rt0.c3, rt1.c0, v0.c0, rt0.c0, rt1.c2, v0.c2, rt0.c1, rt1.c3 HAVING (NOT (GROUP_CONCAT(TOTAL(v0.c1)))) UNION ALL SELECT v0.c1, rt0.c2, rt1.c1, rt1.c4, rt0.c3, rt1.c0, v0.c0, rt0.c0, rt1.c2, v0.c2, rt0.c1, rt1.c3 FROM v0, rt0, rt1 GROUP BY v0.c1, rt0.c2, rt1.c1, rt1.c4, rt0.c3, rt1.c0, v0.c0, rt0.c0, rt1.c2, v0.c2, rt0.c1, rt1.c3 HAVING ((GROUP_CONCAT(TOTAL(v0.c1))) ISNULL);
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (CASE (('TT	ZlJ40') BETWEEN (v0.c2) AND (v0.c1))  WHEN ((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c0)) THEN ((v0.c1)-(v0.c0)) END) UNION ALL SELECT * FROM v0 WHERE ((NOT (CASE (('TT	ZlJ40') BETWEEN (v0.c2) AND (v0.c1))  WHEN ((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c0)) THEN ((v0.c1)-(v0.c0)) END))) UNION ALL SELECT * FROM v0 WHERE (((CASE (('TT	ZlJ40') BETWEEN (v0.c2) AND (v0.c1))  WHEN ((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c0)) THEN ((v0.c1)-(v0.c0)) END) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE ((((+ (rt0.c0))) ISNULL)) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT ((((+ (rt0.c0))) ISNULL)))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((((((+ (rt0.c0))) ISNULL)) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT rt1.c4, rt1.c2, rt0.c1 FROM rt0, rt1, v0 GROUP BY rt1.c4, rt1.c2, rt0.c1;
SELECT rt1.c4, rt1.c2, rt0.c1 FROM rt0, rt1, v0 WHERE (rt0.c0) GROUP BY rt1.c4, rt1.c2, rt0.c1 UNION SELECT rt1.c4, rt1.c2, rt0.c1 FROM rt0 NOT INDEXED, rt1, v0 WHERE ((NOT (rt0.c0))) GROUP BY rt1.c4, rt1.c2, rt0.c1 UNION SELECT rt1.c4, rt1.c2, rt0.c1 FROM rt0, rt1, v0 WHERE (((rt0.c0) ISNULL)) GROUP BY rt1.c4, rt1.c2, rt0.c1;
SELECT rt1.c4, rt1.c2, rt0.c1 FROM rt0, rt1, v0 GROUP BY rt1.c4, rt1.c2, rt0.c1;
SELECT ALL rt1.c0, rt1.c3, rt0.c0, rt1.c2, rt1.c4, rt0.c2 FROM rt1, rt0 GROUP BY rt1.c0, rt1.c3, rt0.c0, rt1.c2, rt1.c4, rt0.c2;
SELECT ALL rt1.c0, rt1.c3, rt0.c0, rt1.c2, rt1.c4, rt0.c2 FROM rt1, rt0 GROUP BY rt1.c0, rt1.c3, rt0.c0, rt1.c2, rt1.c4, rt0.c2 HAVING '-527329214' UNION ALL SELECT ALL rt1.c0, rt1.c3, rt0.c0, rt1.c2, rt1.c4, rt0.c2 FROM rt1, rt0 GROUP BY rt1.c0, rt1.c3, rt0.c0, rt1.c2, rt1.c4, rt0.c2 HAVING (NOT ('-527329214')) UNION ALL SELECT ALL rt1.c0, rt1.c3, rt0.c0, rt1.c2, rt1.c4, rt0.c2 FROM rt1, rt0 GROUP BY rt1.c0, rt1.c3, rt0.c0, rt1.c2, rt1.c4, rt0.c2 HAVING (('-527329214') ISNULL);
SELECT ALL rt1.c0, rt1.c3, rt0.c0, rt1.c2, rt1.c4, rt0.c2 FROM rt1, rt0 GROUP BY rt1.c0, rt1.c3, rt0.c0, rt1.c2, rt1.c4, rt0.c2;
SELECT ALL rt1.c0, rt1.c3, rt0.c0, rt1.c2, rt1.c4, rt0.c2 FROM rt1, rt0 GROUP BY rt1.c0, rt1.c3, rt0.c0, rt1.c2, rt1.c4, rt0.c2 HAVING '-527329214' UNION ALL SELECT ALL rt1.c0, rt1.c3, rt0.c0, rt1.c2, rt1.c4, rt0.c2 FROM rt1, rt0 GROUP BY rt1.c0, rt1.c3, rt0.c0, rt1.c2, rt1.c4, rt0.c2 HAVING (NOT ('-527329214')) UNION ALL SELECT ALL rt1.c0, rt1.c3, rt0.c0, rt1.c2, rt1.c4, rt0.c2 FROM rt1, rt0 GROUP BY rt1.c0, rt1.c3, rt0.c0, rt1.c2, rt1.c4, rt0.c2 HAVING (('-527329214') ISNULL);
SELECT ALL rt1.c0, rt1.c3, rt0.c0, rt1.c2, rt1.c4, rt0.c2 FROM rt1, rt0 GROUP BY rt1.c0, rt1.c3, rt0.c0, rt1.c2, rt1.c4, rt0.c2;
SELECT TOTAL(TRIM(((((((((rt1.c0)AND(x'')))AND('๿K')))OR(rt1.c1)))AND(rt1.c3)))) FROM rt1;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (NULL) UNION ALL SELECT * FROM rt0 WHERE ((NOT (NULL))) UNION ALL SELECT * FROM rt0 WHERE (((NULL) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c1) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1;
SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0 WHERE (((((((v0.c0)IS NOT(v0.c0)))OR(COALESCE(v0.c1, v0.c1))))OR(TOTAL_CHANGES()))) GROUP BY v0.c2, v0.c0, v0.c1 UNION SELECT v0.c2, v0.c0, v0.c1 FROM v0 WHERE ((NOT (((((((v0.c0)IS NOT(v0.c0)))OR(COALESCE(v0.c1, v0.c1))))OR(TOTAL_CHANGES()))))) GROUP BY v0.c2, v0.c0, v0.c1 UNION SELECT v0.c2, v0.c0, v0.c1 FROM v0 WHERE (((((((((v0.c0)IS NOT(v0.c0)))OR(COALESCE(v0.c1, v0.c1))))OR(TOTAL_CHANGES()))) ISNULL)) GROUP BY v0.c2, v0.c0, v0.c1;
SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1;
SELECT ALL v0.c0, rt1.c2 FROM v0, rt1 GROUP BY v0.c0, rt1.c2;
SELECT ALL v0.c0, rt1.c2 FROM v0, rt1 GROUP BY v0.c0, rt1.c2 HAVING ((AVG(v0.c2)) NOTNULL) UNION ALL SELECT v0.c0, rt1.c2 FROM v0, rt1 GROUP BY v0.c0, rt1.c2 HAVING (NOT (((AVG(v0.c2)) NOTNULL))) UNION ALL SELECT v0.c0, rt1.c2 FROM v0, rt1 GROUP BY v0.c0, rt1.c2 HAVING ((((AVG(v0.c2)) NOTNULL)) ISNULL);
SELECT ALL v0.c0, rt1.c2 FROM v0, rt1 GROUP BY v0.c0, rt1.c2;
SELECT ALL v0.c0, rt1.c2 FROM v0, rt1 GROUP BY v0.c0, rt1.c2 HAVING ((AVG(v0.c2)) NOTNULL) UNION ALL SELECT v0.c0, rt1.c2 FROM v0, rt1 GROUP BY v0.c0, rt1.c2 HAVING (NOT (((AVG(v0.c2)) NOTNULL))) UNION ALL SELECT v0.c0, rt1.c2 FROM v0, rt1 GROUP BY v0.c0, rt1.c2 HAVING ((((AVG(v0.c2)) NOTNULL)) ISNULL);
SELECT ALL v0.c0, rt1.c2 FROM v0, rt1 GROUP BY v0.c0, rt1.c2;
SELECT SUM(((((((((((((((rt0.c0)*(rt0.c0)))OR(CAST(rt0.c2 AS NUMERIC))))OR(((rt1.c2) BETWEEN (rt0.c3) AND (rt1.c4)))))AND((rt0.c1 IN ()))))OR((rt0.c0 IN (rt0.c2)))))AND(((rt1.c1) NOT NULL))))AND(((rt1.c3) NOT BETWEEN (rt0.c4) AND (rt0.c3))))) FROM rt1, rt0 ORDER BY ((((rt1.c1) BETWEEN (rt0.c1) AND (NULL))) NOT BETWEEN (((rt1.c4)+(0.937132197893137))) AND (((rt1.c4) BETWEEN (rt0.c1) AND (rt1.c2)))), CASE ((rt0.c2)>=(rt1.c3))  WHEN CAST(rt1.c4 AS TEXT) THEN ((rt1.c1)GLOB(rt1.c3)) END  NULLS FIRST;
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE ((v0.c0 IN ()) COLLATE BINARY) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT ((v0.c0 IN ()) COLLATE BINARY))) UNION ALL SELECT ALL * FROM v0 WHERE ((((v0.c0 IN ()) COLLATE BINARY) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT rt1.c4, rt0.c0, rt0.c1, v0.c1, v0.c2, rt1.c1, v0.c0, rt0.c4, rt0.c2, rt1.c0, rt1.c2 FROM rt0, rt1, v0;
SELECT DISTINCT rt1.c4, rt0.c0, rt0.c1, v0.c1, v0.c2, rt1.c1, v0.c0, rt0.c4, rt0.c2, rt1.c0, rt1.c2 FROM rt0, rt1, v0 WHERE (TYPEOF(((v0.c0) IS TRUE))) UNION SELECT DISTINCT rt1.c4, rt0.c0, rt0.c1, v0.c1, v0.c2, rt1.c1, v0.c0, rt0.c4, rt0.c2, rt1.c0, rt1.c2 FROM rt0, rt1, v0 WHERE ((NOT (TYPEOF(((v0.c0) IS TRUE))))) UNION SELECT DISTINCT rt1.c4, rt0.c0, rt0.c1, v0.c1, v0.c2, rt1.c1, v0.c0, rt0.c4, rt0.c2, rt1.c0, rt1.c2 FROM rt0, rt1, v0 WHERE (((TYPEOF(((v0.c0) IS TRUE))) ISNULL));
SELECT DISTINCT rt1.c4, rt0.c0, rt0.c1, v0.c1, v0.c2, rt1.c1, v0.c0, rt0.c4, rt0.c2, rt1.c0, rt1.c2 FROM rt0, rt1, v0;
SELECT ALL rt0.c0, v0.c0, rt1.c2 FROM v0, rt0, rt1 GROUP BY rt0.c0, v0.c0, rt1.c2;
SELECT rt0.c0, v0.c0, rt1.c2 FROM v0, rt0, rt1 WHERE (((rt0.c2)<<(rt0.c4)) COLLATE NOCASE) GROUP BY rt0.c0, v0.c0, rt1.c2 UNION SELECT rt0.c0, v0.c0, rt1.c2 FROM v0, rt0, rt1 WHERE ((NOT (((rt0.c2)<<(rt0.c4)) COLLATE NOCASE))) GROUP BY rt0.c0, v0.c0, rt1.c2 UNION SELECT ALL rt0.c0, v0.c0, rt1.c2 FROM v0, rt0, rt1 WHERE (((((rt0.c2)<<(rt0.c4)) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c0, v0.c0, rt1.c2;
SELECT ALL rt0.c0, v0.c0, rt1.c2 FROM v0, rt0, rt1 GROUP BY rt0.c0, v0.c0, rt1.c2;
SELECT ALL rt0.c3, v0.c2, rt1.c4, rt0.c1, rt0.c2, rt1.c0, v0.c0, rt1.c3, rt1.c2, rt0.c0, rt0.c4 FROM rt1, rt0, v0 GROUP BY rt0.c3, v0.c2, rt1.c4, rt0.c1, rt0.c2, rt1.c0, v0.c0, rt1.c3, rt1.c2, rt0.c0, rt0.c4;
SELECT ALL rt0.c3, v0.c2, rt1.c4, rt0.c1, rt0.c2, rt1.c0, v0.c0, rt1.c3, rt1.c2, rt0.c0, rt0.c4 FROM rt1, rt0, v0 GROUP BY rt0.c3, v0.c2, rt1.c4, rt0.c1, rt0.c2, rt1.c0, v0.c0, rt1.c3, rt1.c2, rt0.c0, rt0.c4 HAVING ((rt0.c0)GLOB(MIN(x''))) UNION ALL SELECT rt0.c3, v0.c2, rt1.c4, rt0.c1, rt0.c2, rt1.c0, v0.c0, rt1.c3, rt1.c2, rt0.c0, rt0.c4 FROM rt1, rt0, v0 GROUP BY rt0.c3, v0.c2, rt1.c4, rt0.c1, rt0.c2, rt1.c0, v0.c0, rt1.c3, rt1.c2, rt0.c0, rt0.c4 HAVING (NOT (((rt0.c0)GLOB(MIN(x''))))) UNION ALL SELECT ALL rt0.c3, v0.c2, rt1.c4, rt0.c1, rt0.c2, rt1.c0, v0.c0, rt1.c3, rt1.c2, rt0.c0, rt0.c4 FROM rt1, rt0, v0 GROUP BY rt0.c3, v0.c2, rt1.c4, rt0.c1, rt0.c2, rt1.c0, v0.c0, rt1.c3, rt1.c2, rt0.c0, rt0.c4 HAVING ((((rt0.c0)GLOB(MIN(x'')))) ISNULL);
SELECT ALL rt0.c3, v0.c2, rt1.c4, rt0.c1, rt0.c2, rt1.c0, v0.c0, rt1.c3, rt1.c2, rt0.c0, rt0.c4 FROM rt1, rt0, v0 GROUP BY rt0.c3, v0.c2, rt1.c4, rt0.c1, rt0.c2, rt1.c0, v0.c0, rt1.c3, rt1.c2, rt0.c0, rt0.c4;
SELECT ALL rt0.c3, v0.c2, rt1.c4, rt0.c1, rt0.c2, rt1.c0, v0.c0, rt1.c3, rt1.c2, rt0.c0, rt0.c4 FROM rt1, rt0, v0 GROUP BY rt0.c3, v0.c2, rt1.c4, rt0.c1, rt0.c2, rt1.c0, v0.c0, rt1.c3, rt1.c2, rt0.c0, rt0.c4 HAVING ((rt0.c0)GLOB(MIN(x''))) UNION ALL SELECT rt0.c3, v0.c2, rt1.c4, rt0.c1, rt0.c2, rt1.c0, v0.c0, rt1.c3, rt1.c2, rt0.c0, rt0.c4 FROM rt1, rt0, v0 GROUP BY rt0.c3, v0.c2, rt1.c4, rt0.c1, rt0.c2, rt1.c0, v0.c0, rt1.c3, rt1.c2, rt0.c0, rt0.c4 HAVING (NOT (((rt0.c0)GLOB(MIN(x''))))) UNION ALL SELECT ALL rt0.c3, v0.c2, rt1.c4, rt0.c1, rt0.c2, rt1.c0, v0.c0, rt1.c3, rt1.c2, rt0.c0, rt0.c4 FROM rt1, rt0, v0 GROUP BY rt0.c3, v0.c2, rt1.c4, rt0.c1, rt0.c2, rt1.c0, v0.c0, rt1.c3, rt1.c2, rt0.c0, rt0.c4 HAVING ((((rt0.c0)GLOB(MIN(x'')))) ISNULL);
SELECT ALL rt0.c3, v0.c2, rt1.c4, rt0.c1, rt0.c2, rt1.c0, v0.c0, rt1.c3, rt1.c2, rt0.c0, rt0.c4 FROM rt1, rt0, v0 GROUP BY rt0.c3, v0.c2, rt1.c4, rt0.c1, rt0.c2, rt1.c0, v0.c0, rt1.c3, rt1.c2, rt0.c0, rt0.c4;
SELECT ALL * FROM rt0, rt1;
SELECT * FROM rt0, rt1 WHERE ((+ (((NULL) ISNULL)))) UNION ALL SELECT * FROM rt0, rt1 WHERE ((NOT ((+ (((NULL) ISNULL)))))) UNION ALL SELECT ALL * FROM rt0, rt1 WHERE ((((+ (((NULL) ISNULL)))) ISNULL));
SELECT ALL * FROM rt0, rt1;
SELECT DISTINCT v0.c0, v0.c1, v0.c2 FROM v0;
SELECT DISTINCT v0.c0, v0.c1, v0.c2 FROM v0 WHERE (CAST(COALESCE(DISTINCT v0.c2, v0.c2) AS TEXT)) UNION SELECT DISTINCT v0.c0, v0.c1, v0.c2 FROM v0 WHERE ((NOT (CAST(COALESCE(DISTINCT v0.c2, v0.c2) AS TEXT)))) UNION SELECT DISTINCT v0.c0, v0.c1, v0.c2 FROM v0 WHERE (((CAST(COALESCE(DISTINCT v0.c2, v0.c2) AS TEXT)) ISNULL));
SELECT DISTINCT v0.c0, v0.c1, v0.c2 FROM v0;
SELECT rt0.c1, rt0.c2, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c4;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, rt0.c4 FROM rt0 WHERE ((((rt0.c0)) BETWEEN ((((('d	')) BETWEEN ((rt0.c4)) AND ((rt0.c0))))) AND (((NOT (0Xfffffffffd77b86b)))))) GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c4 UNION SELECT rt0.c1, rt0.c2, rt0.c0, rt0.c4 FROM rt0 WHERE ((NOT ((((rt0.c0)) BETWEEN ((((('d	')) BETWEEN ((rt0.c4)) AND ((rt0.c0))))) AND (((NOT (0Xfffffffffd77b86b)))))))) GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c4 UNION SELECT rt0.c1, rt0.c2, rt0.c0, rt0.c4 FROM rt0 WHERE ((((((rt0.c0)) BETWEEN ((((('d	')) BETWEEN ((rt0.c4)) AND ((rt0.c0))))) AND (((NOT (0xfffffffffd77b86b)))))) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c4;
SELECT rt0.c1, rt0.c2, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c4;
SELECT rt1.c3, v0.c1, rt1.c2, rt0.c4, v0.c0, rt0.c2, v0.c2, rt0.c1, rt1.c4, rt0.c0, rt0.c3 FROM v0 INNER JOIN rt1 ON ((rt1.c3 COLLATE RTRIM) BETWEEN (((rt0.c2) NOT NULL)) AND (x'')) RIGHT OUTER JOIN rt0 ON rt0.c1 GROUP BY rt1.c3, v0.c1, rt1.c2, rt0.c4, v0.c0, rt0.c2, v0.c2, rt0.c1, rt1.c4, rt0.c0, rt0.c3;
SELECT ALL rt0.c1, rt1.c4, rt1.c3, v0.c1, rt1.c2, v0.c0, rt0.c4, rt0.c3, rt1.c0, v0.c2, rt0.c2, rt0.c0, rt1.c1 FROM v0 RIGHT OUTER JOIN rt0 ON (NOT (((v0.c1) NOTNULL))) LEFT OUTER JOIN rt1 ON 0Xffffffffe2c89b93;
SELECT rt0.c1, rt1.c4, rt1.c3, v0.c1, rt1.c2, v0.c0, rt0.c4, rt0.c3, rt1.c0, v0.c2, rt0.c2, rt0.c0, rt1.c1 FROM v0 RIGHT OUTER JOIN rt0 ON (NOT (((v0.c1) NOTNULL))) LEFT OUTER JOIN rt1 ON 0Xffffffffe2c89b93 WHERE (CASE ((rt1.c0) BETWEEN (rt1.c0) AND (rt0.c3))  WHEN ((rt1.c0) NOTNULL) THEN ((rt1.c1)>=(rt0.c3)) WHEN CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt1.c0 END THEN CASE WHEN rt1.c2 THEN x'ed96' ELSE rt0.c4 END WHEN ((rt0.c1)GLOB(v0.c1)) THEN (rt1.c3 IN ()) ELSE ((((rt0.c4)OR('2083834665')))AND(rt1.c1)) END) UNION ALL SELECT ALL rt0.c1, rt1.c4, rt1.c3, v0.c1, rt1.c2, v0.c0, rt0.c4, rt0.c3, rt1.c0, v0.c2, rt0.c2, rt0.c0, rt1.c1 FROM v0 RIGHT OUTER JOIN rt0 ON (NOT (((v0.c1) NOTNULL))) LEFT OUTER JOIN rt1 ON 0xffffffffe2c89b93 WHERE ((NOT (CASE ((rt1.c0) BETWEEN (rt1.c0) AND (rt0.c3))  WHEN ((rt1.c0) NOTNULL) THEN ((rt1.c1)>=(rt0.c3)) WHEN CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt1.c0 END THEN CASE WHEN rt1.c2 THEN x'ed96' ELSE rt0.c4 END WHEN ((rt0.c1)GLOB(v0.c1)) THEN (rt1.c3 IN ()) ELSE ((((rt0.c4)OR('2083834665')))AND(rt1.c1)) END))) UNION ALL SELECT ALL rt0.c1, rt1.c4, rt1.c3, v0.c1, rt1.c2, v0.c0, rt0.c4, rt0.c3, rt1.c0, v0.c2, rt0.c2, rt0.c0, rt1.c1 FROM v0 RIGHT OUTER JOIN rt0 ON (NOT (((v0.c1) NOTNULL))) LEFT OUTER JOIN rt1 ON 0Xffffffffe2c89b93 WHERE (((CASE ((rt1.c0) BETWEEN (rt1.c0) AND (rt0.c3))  WHEN ((rt1.c0) NOTNULL) THEN ((rt1.c1)>=(rt0.c3)) WHEN CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt1.c0 END THEN CASE WHEN rt1.c2 THEN x'ed96' ELSE rt0.c4 END WHEN ((rt0.c1)GLOB(v0.c1)) THEN (rt1.c3 IN ()) ELSE ((((rt0.c4)OR('2083834665')))AND(rt1.c1)) END) ISNULL));
SELECT ALL rt0.c1, rt1.c4, rt1.c3, v0.c1, rt1.c2, v0.c0, rt0.c4, rt0.c3, rt1.c0, v0.c2, rt0.c2, rt0.c0, rt1.c1 FROM v0 RIGHT OUTER JOIN rt0 ON (NOT (((v0.c1) NOTNULL))) LEFT OUTER JOIN rt1 ON 0Xffffffffe2c89b93;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (((((rt1.c4 COLLATE NOCASE)AND(((((rt1.c3)OR(rt1.c0)))OR(x'19e9')))))AND(NULL))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (((((rt1.c4 COLLATE NOCASE)AND(((((rt1.c3)OR(rt1.c0)))OR(x'19e9')))))AND(NULL))))) UNION SELECT DISTINCT * FROM rt1 WHERE (((((((rt1.c4 COLLATE NOCASE)AND(((((rt1.c3)OR(rt1.c0)))OR(x'19e9')))))AND(NULL))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT rt0.c4, rt1.c4, rt1.c2 FROM rt1, rt0, v0 GROUP BY rt0.c4, rt1.c4, rt1.c2;
SELECT ALL rt0.c4, rt1.c4, rt1.c2 FROM rt1, rt0, v0 WHERE (CASE WHEN (NOT (rt0.c3)) THEN ((((((((v0.c0)AND(rt0.c4)))OR(v0.c1)))AND(rt1.c2)))OR(v0.c1)) ELSE ((rt1.c2) IS TRUE) END) GROUP BY rt0.c4, rt1.c4, rt1.c2 UNION SELECT ALL rt0.c4, rt1.c4, rt1.c2 FROM rt1, rt0, v0 WHERE ((NOT (CASE WHEN (NOT (rt0.c3)) THEN ((((((((v0.c0)AND(rt0.c4)))OR(v0.c1)))AND(rt1.c2)))OR(v0.c1)) ELSE ((rt1.c2) IS TRUE) END))) GROUP BY rt0.c4, rt1.c4, rt1.c2 UNION SELECT rt0.c4, rt1.c4, rt1.c2 FROM rt1, rt0, v0 WHERE (((CASE WHEN (NOT (rt0.c3)) THEN ((((((((v0.c0)AND(rt0.c4)))OR(v0.c1)))AND(rt1.c2)))OR(v0.c1)) ELSE ((rt1.c2) IS TRUE) END) ISNULL)) GROUP BY rt0.c4, rt1.c4, rt1.c2;
SELECT rt0.c4, rt1.c4, rt1.c2 FROM rt1, rt0, v0 GROUP BY rt0.c4, rt1.c4, rt1.c2;
SELECT rt1.c4, rt1.c2, rt0.c2, rt1.c1 FROM rt0, v0, rt1 GROUP BY rt1.c4, rt1.c2, rt0.c2, rt1.c1;
SELECT ALL rt1.c4, rt1.c2, rt0.c2, rt1.c1 FROM rt0, v0, rt1 GROUP BY rt1.c4, rt1.c2, rt0.c2, rt1.c1 HAVING (rt1.c0 IN ()) COLLATE NOCASE UNION ALL SELECT ALL rt1.c4, rt1.c2, rt0.c2, rt1.c1 FROM rt0, v0, rt1 GROUP BY rt1.c4, rt1.c2, rt0.c2, rt1.c1 HAVING (NOT ((rt1.c0 IN ()) COLLATE NOCASE)) UNION ALL SELECT ALL rt1.c4, rt1.c2, rt0.c2, rt1.c1 FROM rt0, v0, rt1 GROUP BY rt1.c4, rt1.c2, rt0.c2, rt1.c1 HAVING (((rt1.c0 IN ()) COLLATE NOCASE) ISNULL);
SELECT rt1.c4, rt1.c2, rt0.c2, rt1.c1 FROM rt0, v0, rt1 GROUP BY rt1.c4, rt1.c2, rt0.c2, rt1.c1;
SELECT ALL rt1.c4, rt1.c2, rt0.c2, rt1.c1 FROM rt0, v0, rt1 GROUP BY rt1.c4, rt1.c2, rt0.c2, rt1.c1 HAVING (rt1.c0 IN ()) COLLATE NOCASE UNION ALL SELECT ALL rt1.c4, rt1.c2, rt0.c2, rt1.c1 FROM rt0, v0, rt1 GROUP BY rt1.c4, rt1.c2, rt0.c2, rt1.c1 HAVING (NOT ((rt1.c0 IN ()) COLLATE NOCASE)) UNION ALL SELECT ALL rt1.c4, rt1.c2, rt0.c2, rt1.c1 FROM rt0, v0, rt1 GROUP BY rt1.c4, rt1.c2, rt0.c2, rt1.c1 HAVING (((rt1.c0 IN ()) COLLATE NOCASE) ISNULL);
SELECT rt1.c4, rt1.c2, rt0.c2, rt1.c1 FROM rt0, v0, rt1 GROUP BY rt1.c4, rt1.c2, rt0.c2, rt1.c1;
SELECT MAX(((((0.8053326304015257)>(x'e1b9'))) NOT NULL)) FROM v0, rt0, rt1;
SELECT ALL * FROM rt0, v0, rt1;
SELECT * FROM rt0, v0, rt1 WHERE (CASE WHEN rt1.c4 THEN NULLIF(rt1.c3, rt1.c0) WHEN (v0.c2 IN (rt0.c2)) THEN NULL WHEN (rt1.c1 IN (v0.c1, rt0.c3)) THEN ((rt0.c2)<(v0.c2)) WHEN rt1.c2 COLLATE RTRIM THEN CAST(rt1.c2 AS TEXT) WHEN CAST(rt0.c0 AS BLOB) THEN rt1.c4 END) UNION ALL SELECT * FROM rt0, v0, rt1 WHERE ((NOT (CASE WHEN rt1.c4 THEN NULLIF(rt1.c3, rt1.c0) WHEN (v0.c2 IN (rt0.c2)) THEN NULL WHEN (rt1.c1 IN (v0.c1, rt0.c3)) THEN ((rt0.c2)<(v0.c2)) WHEN rt1.c2 COLLATE RTRIM THEN CAST(rt1.c2 AS TEXT) WHEN CAST(rt0.c0 AS BLOB) THEN rt1.c4 END))) UNION ALL SELECT ALL * FROM rt0, v0, rt1 WHERE (((CASE WHEN rt1.c4 THEN NULLIF(rt1.c3, rt1.c0) WHEN (v0.c2 IN (rt0.c2)) THEN NULL WHEN (rt1.c1 IN (v0.c1, rt0.c3)) THEN ((rt0.c2)<(v0.c2)) WHEN rt1.c2 COLLATE RTRIM THEN CAST(rt1.c2 AS TEXT) WHEN CAST(rt0.c0 AS BLOB) THEN rt1.c4 END) ISNULL));
SELECT ALL * FROM rt0, v0, rt1;
SELECT DISTINCT rt1.c1, rt1.c4 FROM rt1;
SELECT DISTINCT rt1.c1, rt1.c4 FROM rt1 WHERE (((((rt1.c1)OR(rt1.c2))) NOT BETWEEN (((rt1.c1)+(rt1.c0))) AND (CAST(rt1.c4 AS TEXT)))) UNION SELECT DISTINCT rt1.c1, rt1.c4 FROM rt1 WHERE ((NOT (((((rt1.c1)OR(rt1.c2))) NOT BETWEEN (((rt1.c1)+(rt1.c0))) AND (CAST(rt1.c4 AS TEXT)))))) UNION SELECT DISTINCT rt1.c1, rt1.c4 FROM rt1 WHERE (((((((rt1.c1)OR(rt1.c2))) NOT BETWEEN (((rt1.c1)+(rt1.c0))) AND (CAST(rt1.c4 AS TEXT)))) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c4 FROM rt1;
SELECT v0.c0, rt0.c1 FROM v0, rt0 GROUP BY v0.c0, rt0.c1;
SELECT v0.c0, rt0.c1 FROM v0, rt0 WHERE (((((rt0.c3)*(v0.c1))) NOT BETWEEN (((((rt0.c2)AND(rt0.c2)))AND(rt0.c2))) AND (CAST(v0.c0 AS INTEGER)))) GROUP BY v0.c0, rt0.c1 UNION SELECT v0.c0, rt0.c1 FROM v0, rt0 WHERE ((NOT (((((rt0.c3)*(v0.c1))) NOT BETWEEN (((((rt0.c2)AND(rt0.c2)))AND(rt0.c2))) AND (CAST(v0.c0 AS INTEGER)))))) GROUP BY v0.c0, rt0.c1 UNION SELECT v0.c0, rt0.c1 FROM v0, rt0 WHERE (((((((rt0.c3)*(v0.c1))) NOT BETWEEN (((((rt0.c2)AND(rt0.c2)))AND(rt0.c2))) AND (CAST(v0.c0 AS INTEGER)))) ISNULL)) GROUP BY v0.c0, rt0.c1;
SELECT v0.c0, rt0.c1 FROM v0, rt0 GROUP BY v0.c0, rt0.c1;
SELECT ALL rt1.c2, rt1.c3, v0.c1, rt1.c0, rt1.c1, v0.c2 FROM rt1 NATURAL JOIN v0 GROUP BY rt1.c2, rt1.c3, v0.c1, rt1.c0, rt1.c1, v0.c2;
SELECT rt1.c2, rt1.c3, v0.c1, rt1.c0, rt1.c1, v0.c2 FROM rt1 NATURAL JOIN v0 GROUP BY rt1.c2, rt1.c3, v0.c1, rt1.c0, rt1.c1, v0.c2 HAVING AVG(((GROUP_CONCAT(AVG(MAX(TOTAL(GROUP_CONCAT(rt1.c0))))))%(rt1.c2))) UNION ALL SELECT rt1.c2, rt1.c3, v0.c1, rt1.c0, rt1.c1, v0.c2 FROM rt1 NATURAL JOIN v0 GROUP BY rt1.c2, rt1.c3, v0.c1, rt1.c0, rt1.c1, v0.c2 HAVING (NOT (AVG(((GROUP_CONCAT(AVG(MAX(TOTAL(GROUP_CONCAT(rt1.c0))))))%(rt1.c2))))) UNION ALL SELECT ALL rt1.c2, rt1.c3, v0.c1, rt1.c0, rt1.c1, v0.c2 FROM rt1 NATURAL JOIN v0 GROUP BY rt1.c2, rt1.c3, v0.c1, rt1.c0, rt1.c1, v0.c2 HAVING ((AVG(((GROUP_CONCAT(AVG(MAX(TOTAL(GROUP_CONCAT(rt1.c0))))))%(rt1.c2)))) ISNULL);
SELECT v0.c1, rt1.c4, rt1.c1, v0.c0, v0.c2, rt1.c2, rt1.c0 FROM rt1, v0;
SELECT ALL v0.c1, rt1.c4, rt1.c1, v0.c0, v0.c2, rt1.c2, rt1.c0 FROM rt1, v0 WHERE ((- (CAST(rt1.c2 AS TEXT)))) UNION ALL SELECT ALL v0.c1, rt1.c4, rt1.c1, v0.c0, v0.c2, rt1.c2, rt1.c0 FROM rt1, v0 WHERE ((NOT ((- (CAST(rt1.c2 AS TEXT)))))) UNION ALL SELECT ALL v0.c1, rt1.c4, rt1.c1, v0.c0, v0.c2, rt1.c2, rt1.c0 FROM rt1, v0 WHERE ((((- (CAST(rt1.c2 AS TEXT)))) ISNULL));
SELECT v0.c1, rt1.c4, rt1.c1, v0.c0, v0.c2, rt1.c2, rt1.c0 FROM rt1, v0;
SELECT DISTINCT rt0.c0, rt0.c1, v0.c2 FROM rt0, v0;
SELECT DISTINCT rt0.c0, rt0.c1, v0.c2 FROM rt0, v0 WHERE (((NULL) NOTNULL)) UNION SELECT DISTINCT rt0.c0, rt0.c1, v0.c2 FROM rt0, v0 WHERE ((NOT (((NULL) NOTNULL)))) UNION SELECT DISTINCT rt0.c0, rt0.c1, v0.c2 FROM rt0, v0 WHERE (((((NULL) NOTNULL)) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, v0.c2 FROM rt0, v0;
SELECT rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1;
SELECT ALL rt1.c2, rt1.c1 FROM rt1 WHERE (((((((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c3)))AND(((rt1.c3) BETWEEN (rt1.c1) AND ('-674076114')))))OR(((rt1.c4)==(rt1.c3))))) GROUP BY rt1.c2, rt1.c1 UNION SELECT ALL rt1.c2, rt1.c1 FROM rt1 WHERE ((NOT (((((((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c3)))AND(((rt1.c3) BETWEEN (rt1.c1) AND ('-674076114')))))OR(((rt1.c4)=(rt1.c3))))))) GROUP BY rt1.c2, rt1.c1 UNION SELECT ALL rt1.c2, rt1.c1 FROM rt1 WHERE (((((((((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c3)))AND(((rt1.c3) BETWEEN (rt1.c1) AND ('-674076114')))))OR(((rt1.c4)=(rt1.c3))))) ISNULL)) GROUP BY rt1.c2, rt1.c1;
SELECT rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1;
SELECT ALL rt0.c4, rt0.c0, rt1.c2, rt1.c1, v0.c0, rt1.c3 FROM rt1, rt0, v0 GROUP BY rt0.c4, rt0.c0, rt1.c2, rt1.c1, v0.c0, rt1.c3;
SELECT rt0.c4, rt0.c0, rt1.c2, rt1.c1, v0.c0, rt1.c3 FROM rt1, rt0, v0 GROUP BY rt0.c4, rt0.c0, rt1.c2, rt1.c1, v0.c0, rt1.c3 HAVING (~ (CAST(rt1.c1 AS INTEGER))) UNION ALL SELECT rt0.c4, rt0.c0, rt1.c2, rt1.c1, v0.c0, rt1.c3 FROM rt1, rt0, v0 GROUP BY rt0.c4, rt0.c0, rt1.c2, rt1.c1, v0.c0, rt1.c3 HAVING (NOT ((~ (CAST(rt1.c1 AS INTEGER))))) UNION ALL SELECT rt0.c4, rt0.c0, rt1.c2, rt1.c1, v0.c0, rt1.c3 FROM rt1, rt0, v0 GROUP BY rt0.c4, rt0.c0, rt1.c2, rt1.c1, v0.c0, rt1.c3 HAVING (((~ (CAST(rt1.c1 AS INTEGER)))) ISNULL);
SELECT ALL rt0.c4, rt0.c0, rt1.c2, rt1.c1, v0.c0, rt1.c3 FROM rt1, rt0, v0 GROUP BY rt0.c4, rt0.c0, rt1.c2, rt1.c1, v0.c0, rt1.c3;
SELECT rt0.c4, rt0.c0, rt1.c2, rt1.c1, v0.c0, rt1.c3 FROM rt1, rt0, v0 GROUP BY rt0.c4, rt0.c0, rt1.c2, rt1.c1, v0.c0, rt1.c3 HAVING (~ (CAST(rt1.c1 AS INTEGER))) UNION ALL SELECT rt0.c4, rt0.c0, rt1.c2, rt1.c1, v0.c0, rt1.c3 FROM rt1, rt0, v0 GROUP BY rt0.c4, rt0.c0, rt1.c2, rt1.c1, v0.c0, rt1.c3 HAVING (NOT ((~ (CAST(rt1.c1 AS INTEGER))))) UNION ALL SELECT rt0.c4, rt0.c0, rt1.c2, rt1.c1, v0.c0, rt1.c3 FROM rt1, rt0, v0 GROUP BY rt0.c4, rt0.c0, rt1.c2, rt1.c1, v0.c0, rt1.c3 HAVING (((~ (CAST(rt1.c1 AS INTEGER)))) ISNULL);
SELECT ALL rt0.c4, rt0.c0, rt1.c2, rt1.c1, v0.c0, rt1.c3 FROM rt1, rt0, v0 GROUP BY rt0.c4, rt0.c0, rt1.c2, rt1.c1, v0.c0, rt1.c3;
SELECT * FROM rt1, v0 FULL OUTER JOIN rt0 ON (((rt0.c2 IN ())) ISNULL);
SELECT * FROM rt1, v0 FULL OUTER JOIN rt0 ON (((rt0.c2 IN ())) ISNULL) WHERE ((((0.5278174925308855 IN ())) NOT BETWEEN (((((v0.c0)AND(rt0.c4)))AND(rt0.c2))) AND (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) UNION ALL SELECT ALL * FROM rt1, v0 FULL OUTER JOIN rt0 ON (((rt0.c2 IN ())) ISNULL) WHERE ((NOT ((((0.5278174925308855 IN ())) NOT BETWEEN (((((v0.c0)AND(rt0.c4)))AND(rt0.c2))) AND (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))))))) UNION ALL SELECT ALL * FROM rt1, v0 FULL OUTER JOIN rt0 ON (((rt0.c2 IN ())) ISNULL) WHERE ((((((0.5278174925308855 IN ())) NOT BETWEEN (((((v0.c0)AND(rt0.c4)))AND(rt0.c2))) AND (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) ISNULL));
SELECT * FROM rt1, v0 FULL OUTER JOIN rt0 ON (((rt0.c2 IN ())) ISNULL);
SELECT DISTINCT * FROM rt0, v0, rt1;
SELECT DISTINCT * FROM rt0, v0, rt1 WHERE ((~ (x''))) UNION SELECT DISTINCT * FROM rt0, v0, rt1 WHERE ((NOT ((~ (x''))))) UNION SELECT DISTINCT * FROM rt0, v0, rt1 WHERE ((((~ (x''))) ISNULL));
SELECT DISTINCT * FROM rt0, v0, rt1;
SELECT rt0.c0, rt0.c4, rt0.c2, v0.c2, rt0.c1, v0.c0, v0.c1 FROM rt0, v0 GROUP BY rt0.c0, rt0.c4, rt0.c2, v0.c2, rt0.c1, v0.c0, v0.c1;
SELECT ALL rt0.c0, rt0.c4, rt0.c2, v0.c2, rt0.c1, v0.c0, v0.c1 FROM rt0, v0 WHERE (((CASE rt0.c0  WHEN rt0.c0 THEN v0.c0 ELSE v0.c2 END) NOT BETWEEN (CASE rt0.c2  WHEN v0.c2 THEN v0.c0 ELSE v0.c2 END) AND ((((rt0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c4)))))) GROUP BY rt0.c0, rt0.c4, rt0.c2, v0.c2, rt0.c1, v0.c0, v0.c1 UNION SELECT rt0.c0, rt0.c4, rt0.c2, v0.c2, rt0.c1, v0.c0, v0.c1 FROM rt0, v0 WHERE ((NOT (((CASE rt0.c0  WHEN rt0.c0 THEN v0.c0 ELSE v0.c2 END) NOT BETWEEN (CASE rt0.c2  WHEN v0.c2 THEN v0.c0 ELSE v0.c2 END) AND ((((rt0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c4)))))))) GROUP BY rt0.c0, rt0.c4, rt0.c2, v0.c2, rt0.c1, v0.c0, v0.c1 UNION SELECT rt0.c0, rt0.c4, rt0.c2, v0.c2, rt0.c1, v0.c0, v0.c1 FROM rt0, v0 WHERE (((((CASE rt0.c0  WHEN rt0.c0 THEN v0.c0 ELSE v0.c2 END) NOT BETWEEN (CASE rt0.c2  WHEN v0.c2 THEN v0.c0 ELSE v0.c2 END) AND ((((rt0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c4)))))) ISNULL)) GROUP BY rt0.c0, rt0.c4, rt0.c2, v0.c2, rt0.c1, v0.c0, v0.c1;
SELECT rt0.c0, rt0.c4, rt0.c2, v0.c2, rt0.c1, v0.c0, v0.c1 FROM rt0, v0 GROUP BY rt0.c0, rt0.c4, rt0.c2, v0.c2, rt0.c1, v0.c0, v0.c1;
SELECT v0.c1, v0.c2, rt0.c2, rt0.c1, rt1.c0, rt0.c4, rt0.c0, rt1.c2, v0.c0 FROM v0, rt1, rt0 GROUP BY v0.c1, v0.c2, rt0.c2, rt0.c1, rt1.c0, rt0.c4, rt0.c0, rt1.c2, v0.c0;
SELECT ALL v0.c1, v0.c2, rt0.c2, rt0.c1, rt1.c0, rt0.c4, rt0.c0, rt1.c2, v0.c0 FROM v0, rt1, rt0 GROUP BY v0.c1, v0.c2, rt0.c2, rt0.c1, rt1.c0, rt0.c4, rt0.c0, rt1.c2, v0.c0 HAVING MAX(((((((((rt1.c3)OR(rt1.c4)))OR(rt0.c2)))OR(rt0.c3)))OR(SUM(rt1.c1)))) UNION ALL SELECT v0.c1, v0.c2, rt0.c2, rt0.c1, rt1.c0, rt0.c4, rt0.c0, rt1.c2, v0.c0 FROM v0, rt1, rt0 GROUP BY v0.c1, v0.c2, rt0.c2, rt0.c1, rt1.c0, rt0.c4, rt0.c0, rt1.c2, v0.c0 HAVING (NOT (MAX(((((((((rt1.c3)OR(rt1.c4)))OR(rt0.c2)))OR(rt0.c3)))OR(SUM(rt1.c1)))))) UNION ALL SELECT v0.c1, v0.c2, rt0.c2, rt0.c1, rt1.c0, rt0.c4, rt0.c0, rt1.c2, v0.c0 FROM v0, rt1, rt0 GROUP BY v0.c1, v0.c2, rt0.c2, rt0.c1, rt1.c0, rt0.c4, rt0.c0, rt1.c2, v0.c0 HAVING ((MAX(((((((((rt1.c3)OR(rt1.c4)))OR(rt0.c2)))OR(rt0.c3)))OR(SUM(rt1.c1))))) ISNULL);
SELECT rt1.c4, v0.c2, rt0.c1 FROM rt1, v0, rt0;
SELECT ALL rt1.c4, v0.c2, rt0.c1 FROM rt1, v0, rt0 WHERE ((NOT (rt1.c4 COLLATE BINARY))) UNION ALL SELECT ALL rt1.c4, v0.c2, rt0.c1 FROM rt1, v0, rt0 WHERE ((NOT ((NOT (rt1.c4 COLLATE BINARY))))) UNION ALL SELECT rt1.c4, v0.c2, rt0.c1 FROM rt1, v0, rt0 WHERE ((((NOT (rt1.c4 COLLATE BINARY))) ISNULL));
SELECT rt1.c4, v0.c2, rt0.c1 FROM rt1, v0, rt0;
SELECT DISTINCT rt1.c2, rt0.c4, rt0.c1, v0.c2, rt1.c1, rt0.c3 FROM rt1, rt0, v0;
SELECT DISTINCT rt1.c2, rt0.c4, rt0.c1, v0.c2, rt1.c1, rt0.c3 FROM rt1, rt0, v0 WHERE (CASE rt1.c2  WHEN ((rt1.c2)-(rt0.c1)) THEN ((v0.c0)<=(rt1.c3)) WHEN ((rt1.c0) IS TRUE) THEN CASE WHEN rt1.c2 THEN rt0.c4 END WHEN MAX(v0.c0, rt0.c0, rt1.c4, rt0.c4) THEN ((v0.c2) NOT BETWEEN (rt1.c2) AND (v0.c0)) END) UNION SELECT DISTINCT rt1.c2, rt0.c4, rt0.c1, v0.c2, rt1.c1, rt0.c3 FROM rt1, rt0, v0 WHERE ((NOT (CASE rt1.c2  WHEN ((rt1.c2)-(rt0.c1)) THEN ((v0.c0)<=(rt1.c3)) WHEN ((rt1.c0) IS TRUE) THEN CASE WHEN rt1.c2 THEN rt0.c4 END WHEN MAX(v0.c0, rt0.c0, rt1.c4, rt0.c4) THEN ((v0.c2) NOT BETWEEN (rt1.c2) AND (v0.c0)) END))) UNION SELECT DISTINCT rt1.c2, rt0.c4, rt0.c1, v0.c2, rt1.c1, rt0.c3 FROM rt1, rt0, v0 WHERE (((CASE rt1.c2  WHEN ((rt1.c2)-(rt0.c1)) THEN ((v0.c0)<=(rt1.c3)) WHEN ((rt1.c0) IS TRUE) THEN CASE WHEN rt1.c2 THEN rt0.c4 END WHEN MAX(v0.c0, rt0.c0, rt1.c4, rt0.c4) THEN ((v0.c2) NOT BETWEEN (rt1.c2) AND (v0.c0)) END) ISNULL));
SELECT DISTINCT rt1.c2, rt0.c4, rt0.c1, v0.c2, rt1.c1, rt0.c3 FROM rt1, rt0, v0;
SELECT ALL rt1.c4, v0.c2, v0.c1, rt1.c0, rt1.c1, v0.c0, rt1.c3 FROM rt1, v0 GROUP BY rt1.c4, v0.c2, v0.c1, rt1.c0, rt1.c1, v0.c0, rt1.c3;
SELECT rt1.c4, v0.c2, v0.c1, rt1.c0, rt1.c1, v0.c0, rt1.c3 FROM rt1, v0 WHERE ((((rt1.c3 IN (rt1.c2, v0.c0))) IS FALSE)) GROUP BY rt1.c4, v0.c2, v0.c1, rt1.c0, rt1.c1, v0.c0, rt1.c3 UNION SELECT rt1.c4, v0.c2, v0.c1, rt1.c0, rt1.c1, v0.c0, rt1.c3 FROM rt1, v0 WHERE ((NOT ((((rt1.c3 IN (rt1.c2, v0.c0))) IS FALSE)))) GROUP BY rt1.c4, v0.c2, v0.c1, rt1.c0, rt1.c1, v0.c0, rt1.c3 UNION SELECT rt1.c4, v0.c2, v0.c1, rt1.c0, rt1.c1, v0.c0, rt1.c3 FROM rt1 NOT INDEXED, v0 WHERE ((((((rt1.c3 IN (rt1.c2, v0.c0))) IS FALSE)) ISNULL)) GROUP BY rt1.c4, v0.c2, v0.c1, rt1.c0, rt1.c1, v0.c0, rt1.c3;
SELECT ALL rt1.c4, v0.c2, v0.c1, rt1.c0, rt1.c1, v0.c0, rt1.c3 FROM rt1, v0 GROUP BY rt1.c4, v0.c2, v0.c1, rt1.c0, rt1.c1, v0.c0, rt1.c3;
SELECT ALL rt0.c2, rt0.c4, v0.c1, rt0.c1, rt1.c4, v0.c2, v0.c0, rt0.c0, rt1.c2, rt1.c3, rt1.c1, rt1.c0 FROM v0 RIGHT OUTER JOIN rt1 ON (((v0.c1)AND(rt0.c2)) IN (((rt0.c0)*(rt0.c3)), CAST(rt0.c0 AS TEXT))) LEFT OUTER JOIN rt0 ON CASE rt1.c3  WHEN rt1.c4 THEN rt0.c0 ELSE rt1.c1 END COLLATE BINARY GROUP BY rt0.c2, rt0.c4, v0.c1, rt0.c1, rt1.c4, v0.c2, v0.c0, rt0.c0, rt1.c2, rt1.c3, rt1.c1, rt1.c0;
SELECT ALL * FROM rt1 RIGHT OUTER JOIN v0 ON ((((rt1.c4) BETWEEN (rt1.c2) AND (rt1.c1))) NOT NULL);
SELECT * FROM rt1 RIGHT OUTER JOIN v0 ON ((((rt1.c4) BETWEEN (rt1.c2) AND (rt1.c1))) NOT NULL) WHERE (((rt1.c1)-(v0.c2)) COLLATE BINARY) UNION ALL SELECT * FROM rt1 RIGHT OUTER JOIN v0 ON ((((rt1.c4) BETWEEN (rt1.c2) AND (rt1.c1))) NOT NULL) WHERE ((NOT (((rt1.c1)-(v0.c2)) COLLATE BINARY))) UNION ALL SELECT ALL * FROM rt1 RIGHT OUTER JOIN v0 ON ((((rt1.c4) BETWEEN (rt1.c2) AND (rt1.c1))) NOT NULL) WHERE (((((rt1.c1)-(v0.c2)) COLLATE BINARY) ISNULL));
SELECT ALL * FROM rt1 RIGHT OUTER JOIN v0 ON ((((rt1.c4) BETWEEN (rt1.c2) AND (rt1.c1))) NOT NULL);
SELECT DISTINCT v0.c1, rt1.c2, rt1.c3 FROM rt1 FULL OUTER JOIN v0 ON load_extension(((((v0.c2)AND(v0.c0)))OR(v0.c1)), CASE WHEN v0.c1 THEN rt1.c2 WHEN v0.c0 THEN rt1.c2 WHEN rt1.c4 THEN v0.c0 ELSE 0X694eaf56 END);
SELECT DISTINCT v0.c1, rt1.c2, rt1.c3 FROM rt1 FULL OUTER JOIN v0 ON load_extension(((((v0.c2)AND(v0.c0)))OR(v0.c1)), CASE WHEN v0.c1 THEN rt1.c2 WHEN v0.c0 THEN rt1.c2 WHEN rt1.c4 THEN v0.c0 ELSE 0x694eaf56 END) WHERE (((v0.c2 COLLATE BINARY) IS TRUE)) UNION SELECT DISTINCT v0.c1, rt1.c2, rt1.c3 FROM rt1 FULL OUTER JOIN v0 ON load_extension(((((v0.c2)AND(v0.c0)))OR(v0.c1)), CASE WHEN v0.c1 THEN rt1.c2 WHEN v0.c0 THEN rt1.c2 WHEN rt1.c4 THEN v0.c0 ELSE 0X694eaf56 END) WHERE ((NOT (((v0.c2 COLLATE BINARY) IS TRUE)))) UNION SELECT DISTINCT v0.c1, rt1.c2, rt1.c3 FROM rt1 FULL OUTER JOIN v0 ON load_extension(((((v0.c2)AND(v0.c0)))OR(v0.c1)), CASE WHEN v0.c1 THEN rt1.c2 WHEN v0.c0 THEN rt1.c2 WHEN rt1.c4 THEN v0.c0 ELSE 0x694eaf56 END) WHERE (((((v0.c2 COLLATE BINARY) IS TRUE)) ISNULL));
SELECT DISTINCT v0.c1, rt1.c2, rt1.c3 FROM rt1 FULL OUTER JOIN v0 ON load_extension(((((v0.c2)AND(v0.c0)))OR(v0.c1)), CASE WHEN v0.c1 THEN rt1.c2 WHEN v0.c0 THEN rt1.c2 WHEN rt1.c4 THEN v0.c0 ELSE 0X694eaf56 END);
SELECT rt0.c1, rt0.c4, rt1.c4, rt0.c0, rt1.c3, rt1.c0, rt1.c1, rt1.c2, rt0.c2 FROM rt0, rt1 GROUP BY rt0.c1, rt0.c4, rt1.c4, rt0.c0, rt1.c3, rt1.c0, rt1.c1, rt1.c2, rt0.c2;
SELECT rt0.c1, rt0.c4, rt1.c4, rt0.c0, rt1.c3, rt1.c0, rt1.c1, rt1.c2, rt0.c2 FROM rt0, rt1 WHERE (((((rt0.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c3))) IN ())) GROUP BY rt0.c1, rt0.c4, rt1.c4, rt0.c0, rt1.c3, rt1.c0, rt1.c1, rt1.c2, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c4, rt1.c4, rt0.c0, rt1.c3, rt1.c0, rt1.c1, rt1.c2, rt0.c2 FROM rt0, rt1 WHERE ((NOT (((((rt0.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c3))) IN ())))) GROUP BY rt0.c1, rt0.c4, rt1.c4, rt0.c0, rt1.c3, rt1.c0, rt1.c1, rt1.c2, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c4, rt1.c4, rt0.c0, rt1.c3, rt1.c0, rt1.c1, rt1.c2, rt0.c2 FROM rt0, rt1 WHERE (((((((rt0.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c3))) IN ())) ISNULL)) GROUP BY rt0.c1, rt0.c4, rt1.c4, rt0.c0, rt1.c3, rt1.c0, rt1.c1, rt1.c2, rt0.c2;
SELECT rt0.c1, rt0.c4, rt1.c4, rt0.c0, rt1.c3, rt1.c0, rt1.c1, rt1.c2, rt0.c2 FROM rt0, rt1 GROUP BY rt0.c1, rt0.c4, rt1.c4, rt0.c0, rt1.c3, rt1.c0, rt1.c1, rt1.c2, rt0.c2;
SELECT rt0.c1, rt1.c3, v0.c1, rt1.c4, rt1.c0, rt0.c0, v0.c2, rt0.c2, rt0.c3 FROM rt1, rt0, v0 GROUP BY rt0.c1, rt1.c3, v0.c1, rt1.c4, rt1.c0, rt0.c0, v0.c2, rt0.c2, rt0.c3;
SELECT rt0.c1, rt1.c3, v0.c1, rt1.c4, rt1.c0, rt0.c0, v0.c2, rt0.c2, rt0.c3 FROM rt1, rt0, v0 GROUP BY rt0.c1, rt1.c3, v0.c1, rt1.c4, rt1.c0, rt0.c0, v0.c2, rt0.c2, rt0.c3 HAVING MAX(SUM(NULL)) UNION ALL SELECT ALL rt0.c1, rt1.c3, v0.c1, rt1.c4, rt1.c0, rt0.c0, v0.c2, rt0.c2, rt0.c3 FROM rt1, rt0, v0 GROUP BY rt0.c1, rt1.c3, v0.c1, rt1.c4, rt1.c0, rt0.c0, v0.c2, rt0.c2, rt0.c3 HAVING (NOT (MAX(SUM(NULL)))) UNION ALL SELECT rt0.c1, rt1.c3, v0.c1, rt1.c4, rt1.c0, rt0.c0, v0.c2, rt0.c2, rt0.c3 FROM rt1, rt0, v0 GROUP BY rt0.c1, rt1.c3, v0.c1, rt1.c4, rt1.c0, rt0.c0, v0.c2, rt0.c2, rt0.c3 HAVING ((MAX(SUM(NULL))) ISNULL);
SELECT * FROM v0 CROSS JOIN rt0 ON CAST(v0.c2 AS INTEGER);
SELECT ALL * FROM v0 CROSS JOIN rt0 ON CAST(v0.c2 AS INTEGER) WHERE (((((('997662690') IS FALSE)))>(((rt0.c4 IN (rt0.c4)))))) UNION ALL SELECT * FROM v0 CROSS JOIN rt0 ON CAST(v0.c2 AS INTEGER) WHERE ((NOT (((((('997662690') IS FALSE)))>(((rt0.c4 IN (rt0.c4)))))))) UNION ALL SELECT * FROM v0 CROSS JOIN rt0 ON CAST(v0.c2 AS INTEGER) WHERE (((((((('997662690') IS FALSE)))>(((rt0.c4 IN (rt0.c4)))))) ISNULL));
SELECT * FROM v0 CROSS JOIN rt0 ON CAST(v0.c2 AS INTEGER);
SELECT DISTINCT * FROM v0 CROSS JOIN rt0 ON CAST(json_quote(x'') AS NUMERIC);
SELECT DISTINCT * FROM v0 CROSS JOIN rt0 ON CAST(json_quote(x'') AS NUMERIC) WHERE ((- (((rt0.c4)/(rt0.c2))))) UNION SELECT DISTINCT * FROM v0 CROSS JOIN rt0 ON CAST(json_quote(x'') AS NUMERIC) WHERE ((NOT ((- (((rt0.c4)/(rt0.c2))))))) UNION SELECT DISTINCT * FROM v0 CROSS JOIN rt0 ON CAST(json_quote(x'') AS NUMERIC) WHERE ((((- (((rt0.c4)/(rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM v0 CROSS JOIN rt0 ON CAST(json_quote(x'') AS NUMERIC);
SELECT ALL rt1.c0, rt1.c1, rt1.c4, rt1.c2, rt1.c3 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c4, rt1.c2, rt1.c3;
SELECT rt1.c0, rt1.c1, rt1.c4, rt1.c2, rt1.c3 FROM rt1 WHERE (((((CASE rt1.c0  WHEN 'xBJY' THEN rt1.c2 WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c3 END)AND(((rt1.c3)%(rt1.c4)))))AND((rt1.c2 IN ())))) GROUP BY rt1.c0, rt1.c1, rt1.c4, rt1.c2, rt1.c3 UNION SELECT ALL rt1.c0, rt1.c1, rt1.c4, rt1.c2, rt1.c3 FROM rt1 WHERE ((NOT (((((CASE rt1.c0  WHEN 'xBJY' THEN rt1.c2 WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c3 END)AND(((rt1.c3)%(rt1.c4)))))AND((rt1.c2 IN ())))))) GROUP BY rt1.c0, rt1.c1, rt1.c4, rt1.c2, rt1.c3 UNION SELECT rt1.c0, rt1.c1, rt1.c4, rt1.c2, rt1.c3 FROM rt1 WHERE (((((((CASE rt1.c0  WHEN 'xBJY' THEN rt1.c2 WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c3 END)AND(((rt1.c3)%(rt1.c4)))))AND((rt1.c2 IN ())))) ISNULL)) GROUP BY rt1.c0, rt1.c1, rt1.c4, rt1.c2, rt1.c3;
SELECT ALL rt1.c0, rt1.c1, rt1.c4, rt1.c2, rt1.c3 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c4, rt1.c2, rt1.c3;
SELECT ALL rt0.c3 FROM rt1, v0, rt0 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt1, v0, rt0 GROUP BY rt0.c3 HAVING AVG(MIN(rt0.c4)) UNION ALL SELECT rt0.c3 FROM rt1 NOT INDEXED, v0, rt0 GROUP BY rt0.c3 HAVING (NOT (AVG(MIN(rt0.c4)))) UNION ALL SELECT ALL rt0.c3 FROM rt1, v0, rt0 GROUP BY rt0.c3 HAVING ((AVG(MIN(rt0.c4))) ISNULL);
SELECT ALL rt1.c0, rt1.c1 FROM rt1;
SELECT ALL rt1.c0, rt1.c1 FROM rt1 WHERE (CAST(((((rt1.c2)AND(rt1.c4)))OR(rt1.c2)) AS TEXT)) UNION ALL SELECT ALL rt1.c0, rt1.c1 FROM rt1 WHERE ((NOT (CAST(((((rt1.c2)AND(rt1.c4)))OR(rt1.c2)) AS TEXT)))) UNION ALL SELECT ALL rt1.c0, rt1.c1 FROM rt1 WHERE (((CAST(((((rt1.c2)AND(rt1.c4)))OR(rt1.c2)) AS TEXT)) ISNULL));
SELECT ALL rt1.c0, rt1.c1 FROM rt1;
SELECT DISTINCT rt0.c2, v0.c1, rt1.c1, rt1.c4, rt0.c3, v0.c2, rt1.c2, rt1.c0, rt0.c1, rt1.c3, v0.c0 FROM rt0 FULL OUTER JOIN v0 ON ((((CAST(v0.c2 AS TEXT))OR(json(rt1.c4))))AND(((((rt1.c4)AND(rt0.c4)))AND(rt0.c2)))) FULL OUTER JOIN rt1 ON ((((2.019110552E9) NOTNULL)) IS FALSE);
SELECT v0.c2, v0.c1 FROM v0 GROUP BY v0.c2, v0.c1;
SELECT v0.c2, v0.c1 FROM v0 WHERE (((('-1731004180'))==((((v0.c0)>=(v0.c1)))))) GROUP BY v0.c2, v0.c1 UNION SELECT v0.c2, v0.c1 FROM v0 WHERE ((NOT (((('-1731004180'))==((((v0.c0)>=(v0.c1)))))))) GROUP BY v0.c2, v0.c1 UNION SELECT v0.c2, v0.c1 FROM v0 WHERE (((((('-1731004180'))=((((v0.c0)>=(v0.c1)))))) ISNULL)) GROUP BY v0.c2, v0.c1;
SELECT v0.c2, v0.c1 FROM v0 GROUP BY v0.c2, v0.c1;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING '212001443' UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT ('212001443')) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (('212001443') ISNULL);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING '212001443' UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT ('212001443')) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (('212001443') ISNULL);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT * FROM rt0, rt1, v0;
SELECT * FROM rt0, rt1, v0 WHERE ((~ (rt1.c4))) UNION ALL SELECT ALL * FROM rt0, rt1, v0 WHERE ((NOT ((~ (rt1.c4))))) UNION ALL SELECT * FROM rt0, rt1, v0 WHERE ((((~ (rt1.c4))) ISNULL));
SELECT * FROM rt0, rt1, v0;
SELECT DISTINCT rt1.c2, v0.c2, rt1.c0 FROM v0 NOT INDEXED, rt1;
SELECT DISTINCT rt1.c2, v0.c2, rt1.c0 FROM v0, rt1 WHERE ((((rt1.c1)) NOT BETWEEN ((CAST(v0.c0 AS TEXT))) AND ((((rt1.c3)&(v0.c1)))))) UNION SELECT DISTINCT rt1.c2, v0.c2, rt1.c0 FROM v0, rt1 WHERE ((NOT ((((rt1.c1)) NOT BETWEEN ((CAST(v0.c0 AS TEXT))) AND ((((rt1.c3)&(v0.c1)))))))) UNION SELECT DISTINCT rt1.c2, v0.c2, rt1.c0 FROM v0, rt1 WHERE ((((((rt1.c1)) NOT BETWEEN ((CAST(v0.c0 AS TEXT))) AND ((((rt1.c3)&(v0.c1)))))) ISNULL));
SELECT DISTINCT rt1.c2, v0.c2, rt1.c0 FROM v0 NOT INDEXED, rt1;
SELECT ALL rt0.c0, rt0.c4, rt0.c1, v0.c0, v0.c2, rt0.c2, rt0.c3 FROM rt0, v0 GROUP BY rt0.c0, rt0.c4, rt0.c1, v0.c0, v0.c2, rt0.c2, rt0.c3;
SELECT ALL rt0.c0, rt0.c4, rt0.c1, v0.c0, v0.c2, rt0.c2, rt0.c3 FROM rt0, v0 WHERE (((((((rt0.c4)AND(rt0.c2)))AND(rt0.c2))) NOT BETWEEN (0.6054513059832498) AND (((v0.c1)IS(v0.c0))))) GROUP BY rt0.c0, rt0.c4, rt0.c1, v0.c0, v0.c2, rt0.c2, rt0.c3 UNION SELECT ALL rt0.c0, rt0.c4, rt0.c1, v0.c0, v0.c2, rt0.c2, rt0.c3 FROM rt0, v0 WHERE ((NOT (((((((rt0.c4)AND(rt0.c2)))AND(rt0.c2))) NOT BETWEEN (0.6054513059832498) AND (((v0.c1)IS(v0.c0))))))) GROUP BY rt0.c0, rt0.c4, rt0.c1, v0.c0, v0.c2, rt0.c2, rt0.c3 UNION SELECT rt0.c0, rt0.c4, rt0.c1, v0.c0, v0.c2, rt0.c2, rt0.c3 FROM rt0, v0 WHERE (((((((((rt0.c4)AND(rt0.c2)))AND(rt0.c2))) NOT BETWEEN (0.6054513059832498) AND (((v0.c1)IS(v0.c0))))) ISNULL)) GROUP BY rt0.c0, rt0.c4, rt0.c1, v0.c0, v0.c2, rt0.c2, rt0.c3;
SELECT ALL rt0.c0, rt0.c4, rt0.c1, v0.c0, v0.c2, rt0.c2, rt0.c3 FROM rt0, v0 GROUP BY rt0.c0, rt0.c4, rt0.c1, v0.c0, v0.c2, rt0.c2, rt0.c3;
SELECT ALL rt1.c3, v0.c2, v0.c0 FROM rt1 FULL OUTER JOIN v0 ON ((((((v0.c2) NOT BETWEEN (rt1.c1) AND (rt1.c3)))AND(((v0.c1) NOT NULL))))AND(CAST(v0.c1 AS REAL))) GROUP BY rt1.c3, v0.c2, v0.c0;
SELECT ALL rt1.c3, v0.c2, v0.c0 FROM rt1 FULL OUTER JOIN v0 ON ((((((v0.c2) NOT BETWEEN (rt1.c1) AND (rt1.c3)))AND(((v0.c1) NOT NULL))))AND(CAST(v0.c1 AS REAL))) GROUP BY rt1.c3, v0.c2, v0.c0 HAVING MIN(((rt1.c1) IS FALSE)) UNION ALL SELECT rt1.c3, v0.c2, v0.c0 FROM rt1 FULL OUTER JOIN v0 ON ((((((v0.c2) NOT BETWEEN (rt1.c1) AND (rt1.c3)))AND(((v0.c1) NOT NULL))))AND(CAST(v0.c1 AS REAL))) GROUP BY rt1.c3, v0.c2, v0.c0 HAVING (NOT (MIN(((rt1.c1) IS FALSE)))) UNION ALL SELECT ALL rt1.c3, v0.c2, v0.c0 FROM rt1 FULL OUTER JOIN v0 ON ((((((v0.c2) NOT BETWEEN (rt1.c1) AND (rt1.c3)))AND(((v0.c1) NOT NULL))))AND(CAST(v0.c1 AS REAL))) GROUP BY rt1.c3, v0.c2, v0.c0 HAVING ((MIN(((rt1.c1) IS FALSE))) ISNULL);
SELECT ALL rt1.c3, v0.c2, v0.c0 FROM rt1 FULL OUTER JOIN v0 ON ((((((v0.c2) NOT BETWEEN (rt1.c1) AND (rt1.c3)))AND(((v0.c1) NOT NULL))))AND(CAST(v0.c1 AS REAL))) GROUP BY rt1.c3, v0.c2, v0.c0;
SELECT ALL rt1.c3, v0.c2, v0.c0 FROM rt1 FULL OUTER JOIN v0 ON ((((((v0.c2) NOT BETWEEN (rt1.c1) AND (rt1.c3)))AND(((v0.c1) NOT NULL))))AND(CAST(v0.c1 AS REAL))) GROUP BY rt1.c3, v0.c2, v0.c0 HAVING MIN(((rt1.c1) IS FALSE)) UNION ALL SELECT rt1.c3, v0.c2, v0.c0 FROM rt1 FULL OUTER JOIN v0 ON ((((((v0.c2) NOT BETWEEN (rt1.c1) AND (rt1.c3)))AND(((v0.c1) NOT NULL))))AND(CAST(v0.c1 AS REAL))) GROUP BY rt1.c3, v0.c2, v0.c0 HAVING (NOT (MIN(((rt1.c1) IS FALSE)))) UNION ALL SELECT ALL rt1.c3, v0.c2, v0.c0 FROM rt1 FULL OUTER JOIN v0 ON ((((((v0.c2) NOT BETWEEN (rt1.c1) AND (rt1.c3)))AND(((v0.c1) NOT NULL))))AND(CAST(v0.c1 AS REAL))) GROUP BY rt1.c3, v0.c2, v0.c0 HAVING ((MIN(((rt1.c1) IS FALSE))) ISNULL);
SELECT ALL rt1.c3, v0.c2, v0.c0 FROM rt1 FULL OUTER JOIN v0 ON ((((((v0.c2) NOT BETWEEN (rt1.c1) AND (rt1.c3)))AND(((v0.c1) NOT NULL))))AND(CAST(v0.c1 AS REAL))) GROUP BY rt1.c3, v0.c2, v0.c0;
SELECT ALL rt0.c1, rt0.c4, rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c4, rt0.c0 FROM rt0 WHERE ((((((rt0.c1, rt0.c2, rt0.c2))<>((rt0.c4, rt0.c1, rt0.c3)))) NOT BETWEEN ((~ (rt0.c2))) AND ((rt0.c4 IN (0.30845306396173133, rt0.c2))))) UNION ALL SELECT rt0.c1, rt0.c4, rt0.c0 FROM rt0 WHERE ((NOT ((((((rt0.c1, rt0.c2, rt0.c2))!=((rt0.c4, rt0.c1, rt0.c3)))) NOT BETWEEN ((~ (rt0.c2))) AND ((rt0.c4 IN (0.30845306396173133, rt0.c2))))))) UNION ALL SELECT rt0.c1, rt0.c4, rt0.c0 FROM rt0 WHERE ((((((((rt0.c1, rt0.c2, rt0.c2))!=((rt0.c4, rt0.c1, rt0.c3)))) NOT BETWEEN ((~ (rt0.c2))) AND ((rt0.c4 IN (0.30845306396173133, rt0.c2))))) ISNULL));
SELECT ALL rt0.c1, rt0.c4, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c3, rt0.c4, v0.c0, rt0.c1, v0.c2 FROM v0, rt0;
SELECT DISTINCT rt0.c0, rt0.c3, rt0.c4, v0.c0, rt0.c1, v0.c2 FROM v0, rt0 WHERE (x'') UNION SELECT DISTINCT rt0.c0, rt0.c3, rt0.c4, v0.c0, rt0.c1, v0.c2 FROM v0, rt0 WHERE ((NOT (x''))) UNION SELECT DISTINCT rt0.c0, rt0.c3, rt0.c4, v0.c0, rt0.c1, v0.c2 FROM v0, rt0 WHERE (((x'') ISNULL));
SELECT DISTINCT rt0.c0, rt0.c3, rt0.c4, v0.c0, rt0.c1, v0.c2 FROM v0, rt0;
SELECT rt0.c3, rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c3, rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((rt0.c4)AND((((rt0.c0))=((rt0.c4))))))AND(CAST(rt0.c2 AS TEXT)))) GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c3, rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c4)AND((((rt0.c0))==((rt0.c4))))))AND(CAST(rt0.c2 AS TEXT)))))) GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c3, rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((((rt0.c4)AND((((rt0.c0))==((rt0.c4))))))AND(CAST(rt0.c2 AS TEXT)))) ISNULL)) GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c3, rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c3, rt1.c0, rt1.c2, rt0.c1, rt1.c4, rt0.c2, rt1.c1 FROM rt0, rt1 GROUP BY rt0.c3, rt1.c0, rt1.c2, rt0.c1, rt1.c4, rt0.c2, rt1.c1;
SELECT rt0.c3, rt1.c0, rt1.c2, rt0.c1, rt1.c4, rt0.c2, rt1.c1 FROM rt0, rt1 GROUP BY rt0.c3, rt1.c0, rt1.c2, rt0.c1, rt1.c4, rt0.c2, rt1.c1 HAVING (SUM(rt1.c4) IN ()) UNION ALL SELECT ALL rt0.c3, rt1.c0, rt1.c2, rt0.c1, rt1.c4, rt0.c2, rt1.c1 FROM rt0, rt1 GROUP BY rt0.c3, rt1.c0, rt1.c2, rt0.c1, rt1.c4, rt0.c2, rt1.c1 HAVING (NOT ((SUM(rt1.c4) IN ()))) UNION ALL SELECT rt0.c3, rt1.c0, rt1.c2, rt0.c1, rt1.c4, rt0.c2, rt1.c1 FROM rt0, rt1 GROUP BY rt0.c3, rt1.c0, rt1.c2, rt0.c1, rt1.c4, rt0.c2, rt1.c1 HAVING (((SUM(rt1.c4) IN ())) ISNULL);
SELECT rt0.c3, rt1.c0, rt1.c2, rt0.c1, rt1.c4, rt0.c2, rt1.c1 FROM rt0, rt1 GROUP BY rt0.c3, rt1.c0, rt1.c2, rt0.c1, rt1.c4, rt0.c2, rt1.c1;
SELECT rt0.c3, rt1.c0, rt1.c2, rt0.c1, rt1.c4, rt0.c2, rt1.c1 FROM rt0, rt1 GROUP BY rt0.c3, rt1.c0, rt1.c2, rt0.c1, rt1.c4, rt0.c2, rt1.c1 HAVING (SUM(rt1.c4) IN ()) UNION ALL SELECT ALL rt0.c3, rt1.c0, rt1.c2, rt0.c1, rt1.c4, rt0.c2, rt1.c1 FROM rt0, rt1 GROUP BY rt0.c3, rt1.c0, rt1.c2, rt0.c1, rt1.c4, rt0.c2, rt1.c1 HAVING (NOT ((SUM(rt1.c4) IN ()))) UNION ALL SELECT rt0.c3, rt1.c0, rt1.c2, rt0.c1, rt1.c4, rt0.c2, rt1.c1 FROM rt0, rt1 GROUP BY rt0.c3, rt1.c0, rt1.c2, rt0.c1, rt1.c4, rt0.c2, rt1.c1 HAVING (((SUM(rt1.c4) IN ())) ISNULL);
SELECT rt0.c3, rt1.c0, rt1.c2, rt0.c1, rt1.c4, rt0.c2, rt1.c1 FROM rt0, rt1 GROUP BY rt0.c3, rt1.c0, rt1.c2, rt0.c1, rt1.c4, rt0.c2, rt1.c1;
SELECT ALL rt0.c3 FROM rt0;
SELECT ALL rt0.c3 FROM rt0 WHERE (TRIM(rt0.c0) COLLATE NOCASE) UNION ALL SELECT rt0.c3 FROM rt0 WHERE ((NOT (TRIM(rt0.c0) COLLATE NOCASE))) UNION ALL SELECT rt0.c3 FROM rt0 WHERE (((TRIM(rt0.c0) COLLATE NOCASE) ISNULL));
SELECT ALL rt0.c3 FROM rt0;
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN rt1 ON rt0.c3;
SELECT DISTINCT * FROM rt0 NOT INDEXED RIGHT OUTER JOIN rt1 ON rt0.c3 WHERE (CAST(LTRIM(rt1.c0, rt0.c3) AS BLOB)) UNION SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN rt1 ON rt0.c3 WHERE ((NOT (CAST(LTRIM(rt1.c0, rt0.c3) AS BLOB)))) UNION SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN rt1 ON rt0.c3 WHERE (((CAST(LTRIM(rt1.c0, rt0.c3) AS BLOB)) ISNULL));
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN rt1 ON rt0.c3;
SELECT rt0.c1, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2;
SELECT rt0.c1, rt0.c3, rt0.c2 FROM rt0 WHERE (((((rt0.c3) IS FALSE)) BETWEEN (((rt0.c0) NOT NULL)) AND (((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c4))))) GROUP BY rt0.c1, rt0.c3, rt0.c2 UNION SELECT rt0.c1, rt0.c3, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c3) IS FALSE)) BETWEEN (((rt0.c0) NOT NULL)) AND (((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c4))))))) GROUP BY rt0.c1, rt0.c3, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c3, rt0.c2 FROM rt0 WHERE (((((((rt0.c3) IS FALSE)) BETWEEN (((rt0.c0) NOT NULL)) AND (((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c4))))) ISNULL)) GROUP BY rt0.c1, rt0.c3, rt0.c2;
SELECT rt0.c1, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2;
SELECT rt0.c3, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c2;
SELECT ALL rt0.c3, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c2 HAVING ((((((AVG(rt0.c3)) ISNULL))AND(GROUP_CONCAT(COUNT(0.13166040534114276)))))AND(COUNT(COUNT(MAX(rt0.c0))))) UNION ALL SELECT rt0.c3, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c2 HAVING (NOT (((((((AVG(rt0.c3)) ISNULL))AND(GROUP_CONCAT(COUNT(0.13166040534114276)))))AND(COUNT(COUNT(MAX(rt0.c0))))))) UNION ALL SELECT rt0.c3, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c2 HAVING ((((((((AVG(rt0.c3)) ISNULL))AND(GROUP_CONCAT(COUNT(0.13166040534114276)))))AND(COUNT(COUNT(MAX(rt0.c0)))))) ISNULL);
SELECT ALL * FROM rt1, v0, rt0;
SELECT ALL * FROM rt1, v0, rt0 WHERE ((((CASE WHEN v0.c2 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 WHEN rt0.c4 THEN rt0.c3 ELSE rt1.c0 END, ((((v0.c1)OR(v0.c2)))OR(v0.c0)), (((rt1.c2)) BETWEEN ((v0.c0)) AND ((rt1.c0)))))<=(((v0.c0 IN ()), (+ (rt1.c4)), CASE WHEN rt0.c1 THEN rt0.c1 WHEN v0.c2 THEN rt0.c2 WHEN rt1.c2 THEN rt0.c0 END)))) UNION ALL SELECT ALL * FROM rt1, v0, rt0 WHERE ((NOT ((((CASE WHEN v0.c2 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 WHEN rt0.c4 THEN rt0.c3 ELSE rt1.c0 END, ((((v0.c1)OR(v0.c2)))OR(v0.c0)), (((rt1.c2)) BETWEEN ((v0.c0)) AND ((rt1.c0)))))<=(((v0.c0 IN ()), (+ (rt1.c4)), CASE WHEN rt0.c1 THEN rt0.c1 WHEN v0.c2 THEN rt0.c2 WHEN rt1.c2 THEN rt0.c0 END)))))) UNION ALL SELECT * FROM rt1, v0, rt0 WHERE ((((((CASE WHEN v0.c2 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 WHEN rt0.c4 THEN rt0.c3 ELSE rt1.c0 END, ((((v0.c1)OR(v0.c2)))OR(v0.c0)), (((rt1.c2)) BETWEEN ((v0.c0)) AND ((rt1.c0)))))<=(((v0.c0 IN ()), (+ (rt1.c4)), CASE WHEN rt0.c1 THEN rt0.c1 WHEN v0.c2 THEN rt0.c2 WHEN rt1.c2 THEN rt0.c0 END)))) ISNULL));
SELECT ALL * FROM rt1, v0, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((UPPER(rt0.c0)) IS TRUE)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((UPPER(rt0.c0)) IS TRUE)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((UPPER(rt0.c0)) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2, rt1.c1, v0.c1, rt1.c3, rt0.c1, v0.c0, rt0.c4, rt1.c4 FROM v0 RIGHT OUTER JOIN rt0 ON rt1.c0 CROSS JOIN rt1 ON rt1.c4 GROUP BY rt0.c2, rt1.c1, v0.c1, rt1.c3, rt0.c1, v0.c0, rt0.c4, rt1.c4;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING CASE WHEN (((TOTAL(rt0.c0)))=((MIN(rt0.c2)))) THEN AVG(COUNT(*)) ELSE ((rt0.c1) IS FALSE) END UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (CASE WHEN (((TOTAL(rt0.c0)))=((MIN(rt0.c2)))) THEN AVG(COUNT(*)) ELSE ((rt0.c1) IS FALSE) END)) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((CASE WHEN (((TOTAL(rt0.c0)))=((MIN(rt0.c2)))) THEN AVG(COUNT(*)) ELSE ((rt0.c1) IS FALSE) END) ISNULL);
SELECT * FROM v0, rt1, rt0;
SELECT ALL * FROM v0, rt1, rt0 WHERE ((('ne') NOT BETWEEN (((rt0.c0) NOTNULL)) AND (((rt0.c3) IS TRUE)))) UNION ALL SELECT * FROM v0, rt1, rt0 WHERE ((NOT ((('ne') NOT BETWEEN (((rt0.c0) NOTNULL)) AND (((rt0.c3) IS TRUE)))))) UNION ALL SELECT ALL * FROM v0, rt1, rt0 WHERE ((((('ne') NOT BETWEEN (((rt0.c0) NOTNULL)) AND (((rt0.c3) IS TRUE)))) ISNULL));
SELECT * FROM v0, rt1, rt0;
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN rt1 ON '-1260945361';
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN rt1 ON '-1260945361' WHERE (((v0.c0 IN ()) IN ())) UNION SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN rt1 ON '-1260945361' WHERE ((NOT (((v0.c0 IN ()) IN ())))) UNION SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN rt1 ON '-1260945361' WHERE (((((v0.c0 IN ()) IN ())) ISNULL));
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN rt1 ON '-1260945361';
SELECT rt1.c0, v0.c0, rt0.c2, rt1.c1, rt1.c2, rt0.c1 FROM rt0, rt1, v0 GROUP BY rt1.c0, v0.c0, rt0.c2, rt1.c1, rt1.c2, rt0.c1;
SELECT rt1.c0, v0.c0, rt0.c2, rt1.c1, rt1.c2, rt0.c1 FROM rt0, rt1, v0 WHERE (((((((rt1.c4) IS FALSE))OR(((rt0.c3)<>(v0.c0)))))OR(((rt0.c0)AND(rt1.c0))))) GROUP BY rt1.c0, v0.c0, rt0.c2, rt1.c1, rt1.c2, rt0.c1 UNION SELECT rt1.c0, v0.c0, rt0.c2, rt1.c1, rt1.c2, rt0.c1 FROM rt0, rt1, v0 WHERE ((NOT (((((((rt1.c4) IS FALSE))OR(((rt0.c3)<>(v0.c0)))))OR(((rt0.c0)AND(rt1.c0))))))) GROUP BY rt1.c0, v0.c0, rt0.c2, rt1.c1, rt1.c2, rt0.c1 UNION SELECT rt1.c0, v0.c0, rt0.c2, rt1.c1, rt1.c2, rt0.c1 FROM rt0, rt1, v0 WHERE (((((((((rt1.c4) IS FALSE))OR(((rt0.c3)<>(v0.c0)))))OR(((rt0.c0)AND(rt1.c0))))) ISNULL)) GROUP BY rt1.c0, v0.c0, rt0.c2, rt1.c1, rt1.c2, rt0.c1;
SELECT rt1.c0, v0.c0, rt0.c2, rt1.c1, rt1.c2, rt0.c1 FROM rt0, rt1, v0 GROUP BY rt1.c0, v0.c0, rt0.c2, rt1.c1, rt1.c2, rt0.c1;
SELECT rt1.c4, rt0.c1, rt1.c0, rt1.c1 FROM rt0, rt1 GROUP BY rt1.c4, rt0.c1, rt1.c0, rt1.c1;
SELECT rt1.c4, rt0.c1, rt1.c0, rt1.c1 FROM rt0, rt1 GROUP BY rt1.c4, rt0.c1, rt1.c0, rt1.c1 HAVING CASE WHEN SUM(rt1.c0) THEN TRIM(DISTINCT TOTAL(rt1.c1), MIN(COUNT(*))) WHEN COUNT(*) THEN ((rt1.c1)LIKE(TOTAL(AVG(GROUP_CONCAT(rt0.c4))))) WHEN AVG(COUNT(AVG(COUNT(*)))) THEN AVG(rt1.c0) END UNION ALL SELECT rt1.c4, rt0.c1, rt1.c0, rt1.c1 FROM rt0, rt1 GROUP BY rt1.c4, rt0.c1, rt1.c0, rt1.c1 HAVING (NOT (CASE WHEN SUM(rt1.c0) THEN TRIM(DISTINCT TOTAL(rt1.c1), MIN(COUNT(*))) WHEN COUNT(*) THEN ((rt1.c1)LIKE(TOTAL(AVG(GROUP_CONCAT(rt0.c4))))) WHEN AVG(COUNT(AVG(COUNT(*)))) THEN AVG(rt1.c0) END)) UNION ALL SELECT rt1.c4, rt0.c1, rt1.c0, rt1.c1 FROM rt0, rt1 GROUP BY rt1.c4, rt0.c1, rt1.c0, rt1.c1 HAVING ((CASE WHEN SUM(rt1.c0) THEN TRIM(DISTINCT TOTAL(rt1.c1), MIN(COUNT(*))) WHEN COUNT(*) THEN ((rt1.c1)LIKE(TOTAL(AVG(GROUP_CONCAT(rt0.c4))))) WHEN AVG(COUNT(AVG(COUNT(*)))) THEN AVG(rt1.c0) END) ISNULL);
SELECT * FROM v0, rt1, rt0;
SELECT ALL * FROM v0, rt1, rt0 WHERE ((- (((rt0.c0) IS TRUE)))) UNION ALL SELECT ALL * FROM v0, rt1, rt0 WHERE ((NOT ((- (((rt0.c0) IS TRUE)))))) UNION ALL SELECT * FROM v0, rt1, rt0 WHERE ((((- (((rt0.c0) IS TRUE)))) ISNULL));
SELECT * FROM v0, rt1, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c2)AND(NULL)))OR(rt0.c3)) IN (HEX(DISTINCT rt0.c0), ((rt0.c0) IS TRUE), ((rt0.c3)<(rt0.c1))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((((rt0.c2)AND(NULL)))OR(rt0.c3)) IN (HEX(DISTINCT rt0.c0), ((rt0.c0) IS TRUE), ((rt0.c3)<(rt0.c1))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((((rt0.c2)AND(NULL)))OR(rt0.c3)) IN (HEX(DISTINCT rt0.c0), ((rt0.c0) IS TRUE), ((rt0.c3)<(rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt1.c0, rt1.c3, v0.c2, v0.c1 FROM v0, rt1 GROUP BY rt1.c0, rt1.c3, v0.c2, v0.c1;
SELECT rt1.c0, rt1.c3, v0.c2, v0.c1 FROM v0, rt1 WHERE (CAST((((v0.c2)) NOT BETWEEN ((rt1.c4)) AND ((v0.c2))) AS REAL)) GROUP BY rt1.c0, rt1.c3, v0.c2, v0.c1 UNION SELECT rt1.c0, rt1.c3, v0.c2, v0.c1 FROM v0, rt1 WHERE ((NOT (CAST((((v0.c2)) NOT BETWEEN ((rt1.c4)) AND ((v0.c2))) AS REAL)))) GROUP BY rt1.c0, rt1.c3, v0.c2, v0.c1 UNION SELECT rt1.c0, rt1.c3, v0.c2, v0.c1 FROM v0, rt1 WHERE (((CAST((((v0.c2)) NOT BETWEEN ((rt1.c4)) AND ((v0.c2))) AS REAL)) ISNULL)) GROUP BY rt1.c0, rt1.c3, v0.c2, v0.c1;
SELECT ALL rt1.c0, rt1.c3, v0.c2, v0.c1 FROM v0, rt1 GROUP BY rt1.c0, rt1.c3, v0.c2, v0.c1;
SELECT v0.c0 FROM v0, rt0, rt1 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, rt0, rt1 GROUP BY v0.c0 HAVING TOTAL(((v0.c0)-(rt0.c3))) UNION ALL SELECT v0.c0 FROM v0, rt0, rt1 GROUP BY v0.c0 HAVING (NOT (TOTAL(((v0.c0)-(rt0.c3))))) UNION ALL SELECT v0.c0 FROM v0, rt0, rt1 GROUP BY v0.c0 HAVING ((TOTAL(((v0.c0)-(rt0.c3)))) ISNULL);
SELECT v0.c0 FROM v0, rt0, rt1 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, rt0, rt1 GROUP BY v0.c0 HAVING TOTAL(((v0.c0)-(rt0.c3))) UNION ALL SELECT v0.c0 FROM v0, rt0, rt1 GROUP BY v0.c0 HAVING (NOT (TOTAL(((v0.c0)-(rt0.c3))))) UNION ALL SELECT v0.c0 FROM v0, rt0, rt1 GROUP BY v0.c0 HAVING ((TOTAL(((v0.c0)-(rt0.c3)))) ISNULL);
SELECT v0.c0 FROM v0, rt0, rt1 GROUP BY v0.c0;
SELECT * FROM rt1, v0, rt0;
SELECT ALL * FROM rt1, v0, rt0 WHERE (CASE WHEN (rt0.c2 IN ()) THEN CASE '5Nm紏B'  WHEN rt0.c2 THEN x'' ELSE v0.c2 END END) UNION ALL SELECT ALL * FROM rt1, v0, rt0 WHERE ((NOT (CASE WHEN (rt0.c2 IN ()) THEN CASE '5Nm紏B'  WHEN rt0.c2 THEN x'' ELSE v0.c2 END END))) UNION ALL SELECT * FROM rt1, v0, rt0 WHERE (((CASE WHEN (rt0.c2 IN ()) THEN CASE '5Nm紏B'  WHEN rt0.c2 THEN x'' ELSE v0.c2 END END) ISNULL));
SELECT * FROM rt1, v0, rt0;
SELECT DISTINCT * FROM rt1 INNER JOIN rt0 ON (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c4))) COLLATE RTRIM;
SELECT DISTINCT * FROM rt1 INNER JOIN rt0 ON (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c4))) COLLATE RTRIM WHERE (((((((((CAST(rt1.c2 AS INTEGER))OR(((x'')=(rt1.c0)))))OR(CAST(rt1.c3 AS REAL))))OR(((rt1.c3) NOT NULL))))OR(((((rt1.c0)OR(rt1.c1)))OR(rt0.c0))))) UNION SELECT DISTINCT * FROM rt1 INNER JOIN rt0 ON (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c4))) COLLATE RTRIM WHERE ((NOT (((((((((CAST(rt1.c2 AS INTEGER))OR(((x'')==(rt1.c0)))))OR(CAST(rt1.c3 AS REAL))))OR(((rt1.c3) NOT NULL))))OR(((((rt1.c0)OR(rt1.c1)))OR(rt0.c0))))))) UNION SELECT DISTINCT * FROM rt1 INNER JOIN rt0 ON (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c4))) COLLATE RTRIM WHERE (((((((((((CAST(rt1.c2 AS INTEGER))OR(((x'')=(rt1.c0)))))OR(CAST(rt1.c3 AS REAL))))OR(((rt1.c3) NOT NULL))))OR(((((rt1.c0)OR(rt1.c1)))OR(rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt1 INNER JOIN rt0 ON (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c4))) COLLATE RTRIM;
SELECT ALL rt1.c0, rt1.c4, rt1.c3, v0.c0 FROM v0 LEFT OUTER JOIN rt0 ON (((rt0.c2)) NOT BETWEEN ((((v0.c1)&(rt1.c0)))) AND ((((((0.9959296377421267)AND(rt1.c4)))OR(rt1.c3))))) RIGHT OUTER JOIN rt1 ON ((((rt1.c2)||(x''))) NOT NULL) GROUP BY rt1.c0, rt1.c4, rt1.c3, v0.c0;
SELECT rt1.c3 FROM rt1 GROUP BY rt1.c3;
SELECT rt1.c3 FROM rt1 GROUP BY rt1.c3 HAVING COUNT(*) UNION ALL SELECT rt1.c3 FROM rt1 GROUP BY rt1.c3 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c3 FROM rt1 GROUP BY rt1.c3 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c3 FROM rt1 GROUP BY rt1.c3;
SELECT rt1.c3 FROM rt1 GROUP BY rt1.c3 HAVING COUNT(*) UNION ALL SELECT rt1.c3 FROM rt1 GROUP BY rt1.c3 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c3 FROM rt1 GROUP BY rt1.c3 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c3 FROM rt1 GROUP BY rt1.c3;
SELECT * FROM v0;
SELECT * FROM v0 WHERE (-16812787) UNION ALL SELECT * FROM v0 WHERE ((NOT (-16812787))) UNION ALL SELECT * FROM v0 WHERE (((-16812787) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN rt1 ON ((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)) COLLATE BINARY;
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN rt1 ON ((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)) COLLATE BINARY WHERE ((((+ (NULL))) NOT BETWEEN (((rt1.c3) NOT BETWEEN (rt0.c3) AND (rt1.c1))) AND (CASE rt1.c3  WHEN rt1.c2 THEN rt1.c3 END))) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN rt1 ON ((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)) COLLATE BINARY WHERE ((NOT ((((+ (NULL))) NOT BETWEEN (((rt1.c3) NOT BETWEEN (rt0.c3) AND (rt1.c1))) AND (CASE rt1.c3  WHEN rt1.c2 THEN rt1.c3 END))))) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN rt1 ON ((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)) COLLATE BINARY WHERE ((((((+ (NULL))) NOT BETWEEN (((rt1.c3) NOT BETWEEN (rt0.c3) AND (rt1.c1))) AND (CASE rt1.c3  WHEN rt1.c2 THEN rt1.c3 END))) ISNULL));
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN rt1 ON ((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)) COLLATE BINARY;
SELECT ALL rt0.c1, v0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c1, v0.c0, rt0.c2;
SELECT rt0.c1, v0.c0, rt0.c2 FROM v0, rt0 WHERE (rt0.c2) GROUP BY rt0.c1, v0.c0, rt0.c2 UNION SELECT ALL rt0.c1, v0.c0, rt0.c2 FROM v0, rt0 WHERE ((NOT (rt0.c2))) GROUP BY rt0.c1, v0.c0, rt0.c2 UNION SELECT ALL rt0.c1, v0.c0, rt0.c2 FROM v0, rt0 WHERE (((rt0.c2) ISNULL)) GROUP BY rt0.c1, v0.c0, rt0.c2;
SELECT ALL rt0.c1, v0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c1, v0.c0, rt0.c2;
SELECT ALL v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0;
SELECT v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0 HAVING SQLITE_SOURCE_ID() UNION ALL SELECT ALL v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0 HAVING (NOT (SQLITE_SOURCE_ID())) UNION ALL SELECT v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0 HAVING ((SQLITE_SOURCE_ID()) ISNULL);
SELECT ALL v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0;
SELECT v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0 HAVING SQLITE_SOURCE_ID() UNION ALL SELECT ALL v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0 HAVING (NOT (SQLITE_SOURCE_ID())) UNION ALL SELECT v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0 HAVING ((SQLITE_SOURCE_ID()) ISNULL);
SELECT ALL v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0;
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON (((((rt0.c4))=((0.2511341325303853))))|(0xffffffffe098d024));
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON (((((rt0.c4))==((0.2511341325303853))))|(0xffffffffe098d024)) WHERE (CASE ((v0.c1) BETWEEN (rt0.c0) AND (-1260945361))  WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((v0.c1))) THEN ((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c4)) END) UNION ALL SELECT * FROM rt0 LEFT OUTER JOIN v0 ON (((((rt0.c4))=((0.2511341325303853))))|(0Xffffffffe098d024)) WHERE ((NOT (CASE ((v0.c1) BETWEEN (rt0.c0) AND (-1260945361))  WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((v0.c1))) THEN ((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c4)) END))) UNION ALL SELECT ALL * FROM rt0 LEFT OUTER JOIN v0 ON (((((rt0.c4))==((0.2511341325303853))))|(0Xffffffffe098d024)) WHERE (((CASE ((v0.c1) BETWEEN (rt0.c0) AND (-1260945361))  WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((v0.c1))) THEN ((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c4)) END) ISNULL));
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON (((((rt0.c4))=((0.2511341325303853))))|(0xffffffffe098d024));
SELECT DISTINCT * FROM rt1, rt0;
SELECT DISTINCT * FROM rt1, rt0 WHERE (CAST((- (rt1.c3)) AS TEXT)) UNION SELECT DISTINCT * FROM rt1, rt0 WHERE ((NOT (CAST((- (rt1.c3)) AS TEXT)))) UNION SELECT DISTINCT * FROM rt1, rt0 WHERE (((CAST((- (rt1.c3)) AS TEXT)) ISNULL));
SELECT DISTINCT * FROM rt1, rt0;
SELECT v0.c1, v0.c0, rt0.c1, rt0.c3, rt1.c3, rt1.c1, rt0.c0, rt0.c4 FROM rt1 CROSS JOIN v0 ON CAST(rt0.c0 COLLATE NOCASE AS INTEGER) RIGHT OUTER JOIN rt0 ON CASE ((rt1.c1) ISNULL)  WHEN 0.7656048313302711 THEN rt0.c4 ELSE (NOT (v0.c0)) END GROUP BY v0.c1, v0.c0, rt0.c1, rt0.c3, rt1.c3, rt1.c1, rt0.c0, rt0.c4;
SELECT ALL v0.c1, v0.c0 FROM v0 GROUP BY v0.c1, v0.c0;
SELECT ALL v0.c1, v0.c0 FROM v0 GROUP BY v0.c1, v0.c0 HAVING COUNT(*) UNION ALL SELECT v0.c1, v0.c0 FROM v0 GROUP BY v0.c1, v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c1, v0.c0 FROM v0 GROUP BY v0.c1, v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c1, v0.c0 FROM v0 GROUP BY v0.c1, v0.c0;
SELECT ALL v0.c1, v0.c0 FROM v0 GROUP BY v0.c1, v0.c0 HAVING COUNT(*) UNION ALL SELECT v0.c1, v0.c0 FROM v0 GROUP BY v0.c1, v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c1, v0.c0 FROM v0 GROUP BY v0.c1, v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c1, v0.c0 FROM v0 GROUP BY v0.c1, v0.c0;
SELECT ALL * FROM rt1 LEFT OUTER JOIN rt0 ON ((((rt0.c2)>(rt0.c4)))%(((((rt0.c3)OR(rt1.c4)))OR(rt0.c1))));
SELECT ALL * FROM rt1 LEFT OUTER JOIN rt0 ON ((((rt0.c2)>(rt0.c4)))%(((((rt0.c3)OR(rt1.c4)))OR(rt0.c1)))) WHERE (((rt0.c3)>=(CAST(rt1.c2 AS INTEGER)))) UNION ALL SELECT ALL * FROM rt1 LEFT OUTER JOIN rt0 ON ((((rt0.c2)>(rt0.c4)))%(((((rt0.c3)OR(rt1.c4)))OR(rt0.c1)))) WHERE ((NOT (((rt0.c3)>=(CAST(rt1.c2 AS INTEGER)))))) UNION ALL SELECT * FROM rt1 LEFT OUTER JOIN rt0 ON ((((rt0.c2)>(rt0.c4)))%(((((rt0.c3)OR(rt1.c4)))OR(rt0.c1)))) WHERE (((((rt0.c3)>=(CAST(rt1.c2 AS INTEGER)))) ISNULL));
SELECT ALL * FROM rt1 LEFT OUTER JOIN rt0 ON ((((rt0.c2)>(rt0.c4)))%(((((rt0.c3)OR(rt1.c4)))OR(rt0.c1))));
SELECT DISTINCT v0.c2, v0.c1 FROM rt1 NATURAL JOIN v0;
SELECT DISTINCT v0.c2, v0.c1 FROM rt1 NATURAL JOIN v0 WHERE ((((TYPEOF(v0.c2)))<>((((rt1.c3) IS TRUE))))) UNION SELECT DISTINCT v0.c2, v0.c1 FROM rt1 NATURAL JOIN v0 WHERE ((NOT ((((TYPEOF(v0.c2)))!=((((rt1.c3) IS TRUE))))))) UNION SELECT DISTINCT v0.c2, v0.c1 FROM rt1 NATURAL JOIN v0 WHERE ((((((TYPEOF(v0.c2)))!=((((rt1.c3) IS TRUE))))) ISNULL));
SELECT DISTINCT v0.c2, v0.c1 FROM rt1 NATURAL JOIN v0;
SELECT ALL v0.c0, rt0.c4, rt0.c2, rt0.c0, rt0.c1, v0.c2, v0.c1, rt0.c3 FROM v0, rt0 GROUP BY v0.c0, rt0.c4, rt0.c2, rt0.c0, rt0.c1, v0.c2, v0.c1, rt0.c3;
SELECT v0.c0, rt0.c4, rt0.c2, rt0.c0, rt0.c1, v0.c2, v0.c1, rt0.c3 FROM v0, rt0 WHERE (TYPEOF(DISTINCT LOWER(v0.c1))) GROUP BY v0.c0, rt0.c4, rt0.c2, rt0.c0, rt0.c1, v0.c2, v0.c1, rt0.c3 UNION SELECT v0.c0, rt0.c4, rt0.c2, rt0.c0, rt0.c1, v0.c2, v0.c1, rt0.c3 FROM v0, rt0 WHERE ((NOT (TYPEOF(DISTINCT LOWER(v0.c1))))) GROUP BY v0.c0, rt0.c4, rt0.c2, rt0.c0, rt0.c1, v0.c2, v0.c1, rt0.c3 UNION SELECT v0.c0, rt0.c4, rt0.c2, rt0.c0, rt0.c1, v0.c2, v0.c1, rt0.c3 FROM v0, rt0 WHERE (((TYPEOF(DISTINCT LOWER(v0.c1))) ISNULL)) GROUP BY v0.c0, rt0.c4, rt0.c2, rt0.c0, rt0.c1, v0.c2, v0.c1, rt0.c3;
SELECT ALL v0.c0, rt0.c4, rt0.c2, rt0.c0, rt0.c1, v0.c2, v0.c1, rt0.c3 FROM v0, rt0 GROUP BY v0.c0, rt0.c4, rt0.c2, rt0.c0, rt0.c1, v0.c2, v0.c1, rt0.c3;
SELECT rt0.c1, rt0.c4, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c4, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c0, rt0.c2 HAVING CAST((AVG(AVG(rt0.c3)) IN ()) AS REAL) UNION ALL SELECT ALL rt0.c1, rt0.c4, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c0, rt0.c2 HAVING (NOT (CAST((AVG(AVG(rt0.c3)) IN ()) AS REAL))) UNION ALL SELECT ALL rt0.c1, rt0.c4, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c0, rt0.c2 HAVING ((CAST((AVG(AVG(rt0.c3)) IN ()) AS REAL)) ISNULL);
SELECT rt0.c1, rt0.c4, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c4, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c0, rt0.c2 HAVING CAST((AVG(AVG(rt0.c3)) IN ()) AS REAL) UNION ALL SELECT ALL rt0.c1, rt0.c4, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c0, rt0.c2 HAVING (NOT (CAST((AVG(AVG(rt0.c3)) IN ()) AS REAL))) UNION ALL SELECT ALL rt0.c1, rt0.c4, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c0, rt0.c2 HAVING ((CAST((AVG(AVG(rt0.c3)) IN ()) AS REAL)) ISNULL);
SELECT rt0.c1, rt0.c4, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c0, rt0.c2;
SELECT * FROM v0, rt1 NATURAL JOIN rt0;
SELECT ALL * FROM v0, rt1 NATURAL JOIN rt0 WHERE (CAST(CAST(rt0.c2 AS BLOB) AS BLOB)) UNION ALL SELECT * FROM v0, rt1 NATURAL JOIN rt0 WHERE ((NOT (CAST(CAST(rt0.c2 AS BLOB) AS BLOB)))) UNION ALL SELECT * FROM v0, rt1 NATURAL JOIN rt0 WHERE (((CAST(CAST(rt0.c2 AS BLOB) AS BLOB)) ISNULL));
SELECT * FROM v0, rt1 NATURAL JOIN rt0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (CAST(TYPEOF(DISTINCT '1657359772') AS NUMERIC)) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (CAST(TYPEOF(DISTINCT '1657359772') AS NUMERIC)))) UNION SELECT DISTINCT * FROM rt1 WHERE (((CAST(TYPEOF(DISTINCT '1657359772') AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT rt1.c2, rt1.c3, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c3, rt1.c1;
SELECT rt1.c2, rt1.c3, rt1.c1 FROM rt1 WHERE (((NULLIF(DISTINCT rt1.c1, 0.8309245835012323)) ISNULL)) GROUP BY rt1.c2, rt1.c3, rt1.c1 UNION SELECT ALL rt1.c2, rt1.c3, rt1.c1 FROM rt1 WHERE ((NOT (((NULLIF(DISTINCT rt1.c1, 0.8309245835012323)) ISNULL)))) GROUP BY rt1.c2, rt1.c3, rt1.c1 UNION SELECT rt1.c2, rt1.c3, rt1.c1 FROM rt1 WHERE (((((NULLIF(DISTINCT rt1.c1, 0.8309245835012323)) ISNULL)) ISNULL)) GROUP BY rt1.c2, rt1.c3, rt1.c1;
SELECT rt1.c2, rt1.c3, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c3, rt1.c1;
SELECT v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2;
SELECT v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2 HAVING (((- (0.21109165601563573))) NOT BETWEEN (COUNT(*)) AND (((v0.c1) BETWEEN (v0.c1) AND (COUNT(*))))) UNION ALL SELECT v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2 HAVING (NOT ((((- (0.21109165601563573))) NOT BETWEEN (COUNT(*)) AND (((v0.c1) BETWEEN (v0.c1) AND (COUNT(*))))))) UNION ALL SELECT v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2 HAVING (((((- (0.21109165601563573))) NOT BETWEEN (COUNT(*)) AND (((v0.c1) BETWEEN (v0.c1) AND (COUNT(*)))))) ISNULL);
SELECT v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2;
SELECT v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2 HAVING (((- (0.21109165601563573))) NOT BETWEEN (COUNT(*)) AND (((v0.c1) BETWEEN (v0.c1) AND (COUNT(*))))) UNION ALL SELECT v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2 HAVING (NOT ((((- (0.21109165601563573))) NOT BETWEEN (COUNT(*)) AND (((v0.c1) BETWEEN (v0.c1) AND (COUNT(*))))))) UNION ALL SELECT v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2 HAVING (((((- (0.21109165601563573))) NOT BETWEEN (COUNT(*)) AND (((v0.c1) BETWEEN (v0.c1) AND (COUNT(*)))))) ISNULL);
SELECT v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2;
SELECT * FROM v0 INNER JOIN rt1 ON (rt1.c0 IN ()) COLLATE RTRIM;
SELECT ALL * FROM v0 INNER JOIN rt1 ON (rt1.c0 IN ()) COLLATE RTRIM WHERE ((- (''))) UNION ALL SELECT * FROM v0 INNER JOIN rt1 ON (rt1.c0 IN ()) COLLATE RTRIM WHERE ((NOT ((- (''))))) UNION ALL SELECT * FROM v0 INNER JOIN rt1 ON (rt1.c0 IN ()) COLLATE RTRIM WHERE ((((- (''))) ISNULL));
SELECT * FROM v0 INNER JOIN rt1 ON (rt1.c0 IN ()) COLLATE RTRIM;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE ((- ((((rt1.c2)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c0)))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT ((- ((((rt1.c2)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c0)))))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((((- ((((rt1.c2)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c0)))))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT rt0.c1, rt1.c1 FROM rt0 NATURAL JOIN rt1 GROUP BY rt0.c1, rt1.c1;
SELECT ALL rt0.c1, rt1.c1 FROM rt0 NATURAL JOIN rt1 WHERE (CASE CAST(rt1.c0 AS INTEGER)  WHEN rt0.c1 COLLATE RTRIM THEN ((NULL) NOT NULL) WHEN (((rt1.c0))<>((rt1.c1))) THEN rt0.c3 WHEN rt1.c1 THEN ((rt1.c2) NOT BETWEEN (rt0.c3) AND (rt0.c1)) ELSE (rt1.c4 IN ()) END) GROUP BY rt0.c1, rt1.c1 UNION SELECT rt0.c1, rt1.c1 FROM rt0 NATURAL JOIN rt1 WHERE ((NOT (CASE CAST(rt1.c0 AS INTEGER)  WHEN rt0.c1 COLLATE RTRIM THEN ((NULL) NOT NULL) WHEN (((rt1.c0))<>((rt1.c1))) THEN rt0.c3 WHEN rt1.c1 THEN ((rt1.c2) NOT BETWEEN (rt0.c3) AND (rt0.c1)) ELSE (rt1.c4 IN ()) END))) GROUP BY rt0.c1, rt1.c1 UNION SELECT rt0.c1, rt1.c1 FROM rt0 NATURAL JOIN rt1 WHERE (((CASE CAST(rt1.c0 AS INTEGER)  WHEN rt0.c1 COLLATE RTRIM THEN ((NULL) NOT NULL) WHEN (((rt1.c0))!=((rt1.c1))) THEN rt0.c3 WHEN rt1.c1 THEN ((rt1.c2) NOT BETWEEN (rt0.c3) AND (rt0.c1)) ELSE (rt1.c4 IN ()) END) ISNULL)) GROUP BY rt0.c1, rt1.c1;
SELECT rt0.c1, rt1.c1 FROM rt0 NATURAL JOIN rt1 GROUP BY rt0.c1, rt1.c1;
SELECT rt0.c3, rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c3, rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c2 HAVING ((((rt0.c4)/(MIN(COUNT(*)))))<>(((AVG(rt0.c2))<=(AVG(rt0.c1))))) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (((((rt0.c4)/(MIN(COUNT(*)))))<>(((AVG(rt0.c2))<=(AVG(rt0.c1))))))) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c2 HAVING ((((((rt0.c4)/(MIN(COUNT(*)))))!=(((AVG(rt0.c2))<=(AVG(rt0.c1)))))) ISNULL);
SELECT rt1.c4, rt1.c0, rt1.c3 FROM rt1;
SELECT rt1.c4, rt1.c0, rt1.c3 FROM rt1 WHERE (CASE ((((((((rt1.c3)AND(rt1.c0)))AND(rt1.c3)))AND(rt1.c4)))OR(rt1.c1))  WHEN ((rt1.c2) IS FALSE) THEN NULL ELSE ((((((((rt1.c3)OR(rt1.c3)))OR(rt1.c2)))OR(rt1.c3)))AND(rt1.c1)) END) UNION ALL SELECT ALL rt1.c4, rt1.c0, rt1.c3 FROM rt1 WHERE ((NOT (CASE ((((((((rt1.c3)AND(rt1.c0)))AND(rt1.c3)))AND(rt1.c4)))OR(rt1.c1))  WHEN ((rt1.c2) IS FALSE) THEN NULL ELSE ((((((((rt1.c3)OR(rt1.c3)))OR(rt1.c2)))OR(rt1.c3)))AND(rt1.c1)) END))) UNION ALL SELECT ALL rt1.c4, rt1.c0, rt1.c3 FROM rt1 WHERE (((CASE ((((((((rt1.c3)AND(rt1.c0)))AND(rt1.c3)))AND(rt1.c4)))OR(rt1.c1))  WHEN ((rt1.c2) IS FALSE) THEN NULL ELSE ((((((((rt1.c3)OR(rt1.c3)))OR(rt1.c2)))OR(rt1.c3)))AND(rt1.c1)) END) ISNULL));
SELECT rt1.c4, rt1.c0, rt1.c3 FROM rt1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CAST(((rt0.c0)IS('B/hLa')) AS INTEGER)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CAST(((rt0.c0)IS('B/hLa')) AS INTEGER)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CAST(((rt0.c0)IS('B/hLa')) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt1.c3, rt1.c2, rt0.c3, rt1.c0, v0.c2, v0.c0, rt1.c1, rt0.c0, rt0.c4, rt0.c2, rt1.c4 FROM rt0, v0, rt1 GROUP BY rt1.c3, rt1.c2, rt0.c3, rt1.c0, v0.c2, v0.c0, rt1.c1, rt0.c0, rt0.c4, rt0.c2, rt1.c4;
SELECT ALL rt1.c3, rt1.c2, rt0.c3, rt1.c0, v0.c2, v0.c0, rt1.c1, rt0.c0, rt0.c4, rt0.c2, rt1.c4 FROM rt0, v0, rt1 WHERE (((((rt0.c0)<<(rt0.c3))) NOTNULL)) GROUP BY rt1.c3, rt1.c2, rt0.c3, rt1.c0, v0.c2, v0.c0, rt1.c1, rt0.c0, rt0.c4, rt0.c2, rt1.c4 UNION SELECT ALL rt1.c3, rt1.c2, rt0.c3, rt1.c0, v0.c2, v0.c0, rt1.c1, rt0.c0, rt0.c4, rt0.c2, rt1.c4 FROM rt0, v0, rt1 WHERE ((NOT (((((rt0.c0)<<(rt0.c3))) NOTNULL)))) GROUP BY rt1.c3, rt1.c2, rt0.c3, rt1.c0, v0.c2, v0.c0, rt1.c1, rt0.c0, rt0.c4, rt0.c2, rt1.c4 UNION SELECT rt1.c3, rt1.c2, rt0.c3, rt1.c0, v0.c2, v0.c0, rt1.c1, rt0.c0, rt0.c4, rt0.c2, rt1.c4 FROM rt0, v0, rt1 WHERE (((((((rt0.c0)<<(rt0.c3))) NOTNULL)) ISNULL)) GROUP BY rt1.c3, rt1.c2, rt0.c3, rt1.c0, v0.c2, v0.c0, rt1.c1, rt0.c0, rt0.c4, rt0.c2, rt1.c4;
SELECT rt1.c3, rt1.c2, rt0.c3, rt1.c0, v0.c2, v0.c0, rt1.c1, rt0.c0, rt0.c4, rt0.c2, rt1.c4 FROM rt0, v0, rt1 GROUP BY rt1.c3, rt1.c2, rt0.c3, rt1.c0, v0.c2, v0.c0, rt1.c1, rt0.c0, rt0.c4, rt0.c2, rt1.c4;
SELECT v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1;
SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1 HAVING COUNT(*) UNION ALL SELECT v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1;
SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1 HAVING COUNT(*) UNION ALL SELECT v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1;
SELECT ALL * FROM v0, rt1;
SELECT * FROM v0, rt1 WHERE (((rt1.c3)||(((rt1.c4)%(v0.c1))))) UNION ALL SELECT ALL * FROM v0, rt1 WHERE ((NOT (((rt1.c3)||(((rt1.c4)%(v0.c1))))))) UNION ALL SELECT ALL * FROM v0, rt1 WHERE (((((rt1.c3)||(((rt1.c4)%(v0.c1))))) ISNULL));
SELECT ALL * FROM v0, rt1;
SELECT DISTINCT * FROM v0 LEFT OUTER JOIN rt1 ON x'' CROSS JOIN rt0 ON load_extension(rt1.c2, rt1.c2 COLLATE RTRIM);
SELECT DISTINCT * FROM v0 LEFT OUTER JOIN rt1 ON x'' CROSS JOIN rt0 ON load_extension(rt1.c2, rt1.c2 COLLATE RTRIM) WHERE (((LTRIM(rt1.c2, rt1.c0)) NOTNULL)) UNION SELECT DISTINCT * FROM v0 LEFT OUTER JOIN rt1 ON x'' CROSS JOIN rt0 ON load_extension(rt1.c2, rt1.c2 COLLATE RTRIM) WHERE ((NOT (((LTRIM(rt1.c2, rt1.c0)) NOTNULL)))) UNION SELECT DISTINCT * FROM v0 LEFT OUTER JOIN rt1 ON x'' CROSS JOIN rt0 ON load_extension(rt1.c2, rt1.c2 COLLATE RTRIM) WHERE (((((LTRIM(rt1.c2, rt1.c0)) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM v0 LEFT OUTER JOIN rt1 ON x'' CROSS JOIN rt0 ON load_extension(rt1.c2, rt1.c2 COLLATE RTRIM);
SELECT v0.c1, rt1.c3, v0.c0, rt1.c4 FROM rt1, v0 GROUP BY v0.c1, rt1.c3, v0.c0, rt1.c4;
SELECT v0.c1, rt1.c3, v0.c0, rt1.c4 FROM rt1, v0 WHERE (((-9.808939E7) NOT BETWEEN (v0.c2) AND (CAST(rt1.c2 AS BLOB)))) GROUP BY v0.c1, rt1.c3, v0.c0, rt1.c4 UNION SELECT ALL v0.c1, rt1.c3, v0.c0, rt1.c4 FROM rt1, v0 WHERE ((NOT (((-9.808939E7) NOT BETWEEN (v0.c2) AND (CAST(rt1.c2 AS BLOB)))))) GROUP BY v0.c1, rt1.c3, v0.c0, rt1.c4 UNION SELECT v0.c1, rt1.c3, v0.c0, rt1.c4 FROM rt1, v0 WHERE (((((-9.808939E7) NOT BETWEEN (v0.c2) AND (CAST(rt1.c2 AS BLOB)))) ISNULL)) GROUP BY v0.c1, rt1.c3, v0.c0, rt1.c4;
SELECT v0.c1, rt1.c3, v0.c0, rt1.c4 FROM rt1, v0 GROUP BY v0.c1, rt1.c3, v0.c0, rt1.c4;
SELECT ALL rt0.c4 FROM rt0 GROUP BY rt0.c4;
SELECT ALL rt0.c4 FROM rt0 GROUP BY rt0.c4 HAVING COUNT(*) UNION ALL SELECT rt0.c4 FROM rt0 GROUP BY rt0.c4 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c4 FROM rt0 GROUP BY rt0.c4 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c4 FROM rt0 GROUP BY rt0.c4;
SELECT ALL rt0.c4 FROM rt0 GROUP BY rt0.c4 HAVING COUNT(*) UNION ALL SELECT rt0.c4 FROM rt0 GROUP BY rt0.c4 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c4 FROM rt0 GROUP BY rt0.c4 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c4 FROM rt0 GROUP BY rt0.c4;
SELECT ALL * FROM rt1, rt0;
SELECT ALL * FROM rt1, rt0 WHERE (CASE ((rt0.c0)<<(rt1.c2))  WHEN CAST(rt0.c4 AS TEXT) THEN (rt1.c2 IN ()) WHEN HEX(rt0.c3) THEN ((((((((rt1.c2)AND(rt0.c4)))OR(rt0.c3)))OR(rt0.c3)))AND(rt1.c4)) WHEN ((((((((((((rt0.c2)AND(rt0.c2)))AND(0.29305463661636233)))OR(rt0.c2)))OR(rt1.c4)))OR(rt0.c0)))OR(rt1.c3)) THEN ((rt0.c0) IS TRUE) END) UNION ALL SELECT * FROM rt1, rt0 WHERE ((NOT (CASE ((rt0.c0)<<(rt1.c2))  WHEN CAST(rt0.c4 AS TEXT) THEN (rt1.c2 IN ()) WHEN HEX(rt0.c3) THEN ((((((((rt1.c2)AND(rt0.c4)))OR(rt0.c3)))OR(rt0.c3)))AND(rt1.c4)) WHEN ((((((((((((rt0.c2)AND(rt0.c2)))AND(0.29305463661636233)))OR(rt0.c2)))OR(rt1.c4)))OR(rt0.c0)))OR(rt1.c3)) THEN ((rt0.c0) IS TRUE) END))) UNION ALL SELECT ALL * FROM rt1, rt0 WHERE (((CASE ((rt0.c0)<<(rt1.c2))  WHEN CAST(rt0.c4 AS TEXT) THEN (rt1.c2 IN ()) WHEN HEX(rt0.c3) THEN ((((((((rt1.c2)AND(rt0.c4)))OR(rt0.c3)))OR(rt0.c3)))AND(rt1.c4)) WHEN ((((((((((((rt0.c2)AND(rt0.c2)))AND(0.29305463661636233)))OR(rt0.c2)))OR(rt1.c4)))OR(rt0.c0)))OR(rt1.c3)) THEN ((rt0.c0) IS TRUE) END) ISNULL));
SELECT ALL * FROM rt1, rt0;
SELECT DISTINCT rt1.c0, v0.c1, v0.c2, rt1.c4, rt1.c1, v0.c0, rt1.c2 FROM v0, rt1;
SELECT DISTINCT rt1.c0, v0.c1, v0.c2, rt1.c4, rt1.c1, v0.c0, rt1.c2 FROM v0, rt1 WHERE ((- (CASE WHEN NULL THEN 0.17718411486596974 END))) UNION SELECT DISTINCT rt1.c0, v0.c1, v0.c2, rt1.c4, rt1.c1, v0.c0, rt1.c2 FROM v0, rt1 WHERE ((NOT ((- (CASE WHEN NULL THEN 0.17718411486596974 END))))) UNION SELECT DISTINCT rt1.c0, v0.c1, v0.c2, rt1.c4, rt1.c1, v0.c0, rt1.c2 FROM v0, rt1 WHERE ((((- (CASE WHEN NULL THEN 0.17718411486596974 END))) ISNULL));
SELECT DISTINCT rt1.c0, v0.c1, v0.c2, rt1.c4, rt1.c1, v0.c0, rt1.c2 FROM v0, rt1;
SELECT rt0.c1, rt0.c2, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c4;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, rt0.c4 FROM rt0 WHERE ((((rt0.c0) BETWEEN (rt0.c0) AND ('_d࠾\n2JMr')) IN ())) GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c4 UNION SELECT rt0.c1, rt0.c2, rt0.c0, rt0.c4 FROM rt0 WHERE ((NOT ((((rt0.c0) BETWEEN (rt0.c0) AND ('_d࠾\n2JMr')) IN ())))) GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c4 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0, rt0.c4 FROM rt0 WHERE ((((((rt0.c0) BETWEEN (rt0.c0) AND ('_d࠾\n2JMr')) IN ())) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c4;
SELECT rt0.c1, rt0.c2, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c4;
SELECT ALL v0.c0, v0.c1, v0.c2, rt0.c4, rt0.c2, rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY v0.c0, v0.c1, v0.c2, rt0.c4, rt0.c2, rt0.c1, rt0.c0;
SELECT v0.c0, v0.c1, v0.c2, rt0.c4, rt0.c2, rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY v0.c0, v0.c1, v0.c2, rt0.c4, rt0.c2, rt0.c1, rt0.c0 HAVING SUM(AVG(MIN(MAX(MIN(rt0.c3))))) UNION ALL SELECT v0.c0, v0.c1, v0.c2, rt0.c4, rt0.c2, rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY v0.c0, v0.c1, v0.c2, rt0.c4, rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (SUM(AVG(MIN(MAX(MIN(rt0.c3))))))) UNION ALL SELECT ALL v0.c0, v0.c1, v0.c2, rt0.c4, rt0.c2, rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY v0.c0, v0.c1, v0.c2, rt0.c4, rt0.c2, rt0.c1, rt0.c0 HAVING ((SUM(AVG(MIN(MAX(MIN(rt0.c3)))))) ISNULL);
SELECT ALL rt0.c4, rt0.c0, v0.c0, rt0.c3, v0.c1, rt0.c1, rt0.c2, v0.c2 FROM rt0, v0;
SELECT rt0.c4, rt0.c0, v0.c0, rt0.c3, v0.c1, rt0.c1, rt0.c2, v0.c2 FROM rt0, v0 WHERE ((+ ((('1695645867')IS NOT(rt0.c2))))) UNION ALL SELECT rt0.c4, rt0.c0, v0.c0, rt0.c3, v0.c1, rt0.c1, rt0.c2, v0.c2 FROM rt0, v0 WHERE ((NOT ((+ ((('1695645867')IS NOT(rt0.c2))))))) UNION ALL SELECT ALL rt0.c4, rt0.c0, v0.c0, rt0.c3, v0.c1, rt0.c1, rt0.c2, v0.c2 FROM rt0, v0 WHERE ((((+ ((('1695645867')IS NOT(rt0.c2))))) ISNULL));
SELECT ALL rt0.c4, rt0.c0, v0.c0, rt0.c3, v0.c1, rt0.c1, rt0.c2, v0.c2 FROM rt0, v0;
SELECT DISTINCT rt1.c4, rt1.c0, rt0.c1, rt0.c4, rt0.c0, rt1.c1, rt1.c2, rt0.c2, rt0.c3, rt1.c3 FROM rt0 NATURAL JOIN rt1;
SELECT DISTINCT rt1.c4, rt1.c0, rt0.c1, rt0.c4, rt0.c0, rt1.c1, rt1.c2, rt0.c2, rt0.c3, rt1.c3 FROM rt0 NATURAL JOIN rt1 WHERE (((rt1.c4)IS(((rt0.c0) NOT NULL)))) UNION SELECT DISTINCT rt1.c4, rt1.c0, rt0.c1, rt0.c4, rt0.c0, rt1.c1, rt1.c2, rt0.c2, rt0.c3, rt1.c3 FROM rt0 NATURAL JOIN rt1 WHERE ((NOT (((rt1.c4)IS(((rt0.c0) NOT NULL)))))) UNION SELECT DISTINCT rt1.c4, rt1.c0, rt0.c1, rt0.c4, rt0.c0, rt1.c1, rt1.c2, rt0.c2, rt0.c3, rt1.c3 FROM rt0 NATURAL JOIN rt1 WHERE (((((rt1.c4)IS(((rt0.c0) NOT NULL)))) ISNULL));
SELECT DISTINCT rt1.c4, rt1.c0, rt0.c1, rt0.c4, rt0.c0, rt1.c1, rt1.c2, rt0.c2, rt0.c3, rt1.c3 FROM rt0 NATURAL JOIN rt1;
SELECT rt0.c0, rt0.c4, rt0.c1, v0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c0, rt0.c4, rt0.c1, v0.c2, v0.c0;
SELECT rt0.c0, rt0.c4, rt0.c1, v0.c2, v0.c0 FROM rt0, v0 WHERE ((((v0.c2, v0.c0, rt0.c1)) BETWEEN ((((rt0.c4)+(rt0.c3)), HEX(DISTINCT rt0.c1), x'')) AND ((((rt0.c3) NOT BETWEEN (rt0.c3) AND (v0.c2)), (~ ('1606166487')), (v0.c2 IN (v0.c0)))))) GROUP BY rt0.c0, rt0.c4, rt0.c1, v0.c2, v0.c0 UNION SELECT rt0.c0, rt0.c4, rt0.c1, v0.c2, v0.c0 FROM rt0, v0 WHERE ((NOT ((((v0.c2, v0.c0, rt0.c1)) BETWEEN ((((rt0.c4)+(rt0.c3)), HEX(DISTINCT rt0.c1), x'')) AND ((((rt0.c3) NOT BETWEEN (rt0.c3) AND (v0.c2)), (~ ('1606166487')), (v0.c2 IN (v0.c0)))))))) GROUP BY rt0.c0, rt0.c4, rt0.c1, v0.c2, v0.c0 UNION SELECT rt0.c0, rt0.c4, rt0.c1, v0.c2, v0.c0 FROM rt0, v0 WHERE ((((((v0.c2, v0.c0, rt0.c1)) BETWEEN ((((rt0.c4)+(rt0.c3)), HEX(DISTINCT rt0.c1), x'')) AND ((((rt0.c3) NOT BETWEEN (rt0.c3) AND (v0.c2)), (~ ('1606166487')), (v0.c2 IN (v0.c0)))))) ISNULL)) GROUP BY rt0.c0, rt0.c4, rt0.c1, v0.c2, v0.c0;
SELECT rt0.c0, rt0.c4, rt0.c1, v0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c0, rt0.c4, rt0.c1, v0.c2, v0.c0;
SELECT ALL rt0.c3, rt1.c1, v0.c1, rt0.c4 FROM rt0, v0, rt1 GROUP BY rt0.c3, rt1.c1, v0.c1, rt0.c4;
SELECT rt0.c3, rt1.c1, v0.c1, rt0.c4 FROM rt0, v0, rt1 GROUP BY rt0.c3, rt1.c1, v0.c1, rt0.c4 HAVING AVG(AVG(GROUP_CONCAT(v0.c1))) UNION ALL SELECT rt0.c3, rt1.c1, v0.c1, rt0.c4 FROM rt0, v0, rt1 GROUP BY rt0.c3, rt1.c1, v0.c1, rt0.c4 HAVING (NOT (AVG(AVG(GROUP_CONCAT(v0.c1))))) UNION ALL SELECT rt0.c3, rt1.c1, v0.c1, rt0.c4 FROM rt0, v0, rt1 GROUP BY rt0.c3, rt1.c1, v0.c1, rt0.c4 HAVING ((AVG(AVG(GROUP_CONCAT(v0.c1)))) ISNULL);
SELECT ALL rt1.c1, v0.c0, rt1.c4, rt1.c0, v0.c2, rt1.c2, v0.c1 FROM rt1, v0;
SELECT rt1.c1, v0.c0, rt1.c4, rt1.c0, v0.c2, rt1.c2, v0.c1 FROM rt1, v0 WHERE (rt1.c2) UNION ALL SELECT ALL rt1.c1, v0.c0, rt1.c4, rt1.c0, v0.c2, rt1.c2, v0.c1 FROM rt1, v0 WHERE ((NOT (rt1.c2))) UNION ALL SELECT ALL rt1.c1, v0.c0, rt1.c4, rt1.c0, v0.c2, rt1.c2, v0.c1 FROM rt1, v0 WHERE (((rt1.c2) ISNULL));
SELECT ALL rt1.c1, v0.c0, rt1.c4, rt1.c0, v0.c2, rt1.c2, v0.c1 FROM rt1, v0;
SELECT DISTINCT * FROM rt1, rt0;
SELECT DISTINCT * FROM rt1, rt0 WHERE (CASE WHEN CASE rt1.c2  WHEN rt1.c4 THEN rt1.c3 END THEN (((rt1.c4)) BETWEEN ((rt0.c3)) AND ((rt1.c4))) END) UNION SELECT DISTINCT * FROM rt1, rt0 WHERE ((NOT (CASE WHEN CASE rt1.c2  WHEN rt1.c4 THEN rt1.c3 END THEN (((rt1.c4)) BETWEEN ((rt0.c3)) AND ((rt1.c4))) END))) UNION SELECT DISTINCT * FROM rt1, rt0 WHERE (((CASE WHEN CASE rt1.c2  WHEN rt1.c4 THEN rt1.c3 END THEN (((rt1.c4)) BETWEEN ((rt0.c3)) AND ((rt1.c4))) END) ISNULL));
SELECT DISTINCT * FROM rt1, rt0;
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0 WHERE (((CASE WHEN rt0.c4 THEN rt0.c1 END) NOT BETWEEN ('0.7044752548017605' COLLATE BINARY) AND ((((rt0.c4)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))))) GROUP BY rt0.c3 UNION SELECT rt0.c3 FROM rt0 WHERE ((NOT (((CASE WHEN rt0.c4 THEN rt0.c1 END) NOT BETWEEN ('0.7044752548017605' COLLATE BINARY) AND ((((rt0.c4)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))))))) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM rt0 WHERE (((((CASE WHEN rt0.c4 THEN rt0.c1 END) NOT BETWEEN ('0.7044752548017605' COLLATE BINARY) AND ((((rt0.c4)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))))) ISNULL)) GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT v0.c0, rt0.c1, rt0.c3, v0.c1, rt1.c1, rt1.c0, v0.c2, rt1.c3, rt0.c4, rt1.c2, rt0.c0 FROM v0 RIGHT OUTER JOIN rt1 ON ((((v0.c1)>(rt1.c0))) NOT BETWEEN ((NOT (v0.c1))) AND ((((rt1.c0, rt0.c3, rt1.c4))=((v0.c2, rt1.c1, v0.c2))))) FULL OUTER JOIN rt0 ON ((((rt0.c2) BETWEEN (rt1.c3) AND (v0.c1)))>>(((0.09408142018995103)|(rt0.c0)))) GROUP BY v0.c0, rt0.c1, rt0.c3, v0.c1, rt1.c1, rt1.c0, v0.c2, rt1.c3, rt0.c4, rt1.c2, rt0.c0;
SELECT rt0.c2, rt0.c3, rt1.c2, rt0.c4, v0.c1 FROM rt1, v0, rt0;
SELECT ALL rt0.c2, rt0.c3, rt1.c2, rt0.c4, v0.c1 FROM rt1, v0, rt0 WHERE (((v0.c0) NOT NULL) COLLATE RTRIM) UNION ALL SELECT rt0.c2, rt0.c3, rt1.c2, rt0.c4, v0.c1 FROM rt1, v0, rt0 WHERE ((NOT (((v0.c0) NOT NULL) COLLATE RTRIM))) UNION ALL SELECT rt0.c2, rt0.c3, rt1.c2, rt0.c4, v0.c1 FROM rt1, v0, rt0 WHERE (((((v0.c0) NOT NULL) COLLATE RTRIM) ISNULL));
SELECT rt0.c2, rt0.c3, rt1.c2, rt0.c4, v0.c1 FROM rt1, v0, rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (json_type(((((((((v0.c0)OR(0.9574549777647942)))AND(v0.c1)))OR(v0.c0)))OR(v0.c1)))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (json_type(((((((((v0.c0)OR(0.9574549777647942)))AND(v0.c1)))OR(v0.c0)))OR(v0.c1)))))) UNION SELECT DISTINCT * FROM v0 WHERE (((json_type(((((((((v0.c0)OR(0.9574549777647942)))AND(v0.c1)))OR(v0.c0)))OR(v0.c1)))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0 WHERE (COALESCE(((rt0.c3)LIKE(0.3855221682824147)), ((rt0.c2)OR(rt0.c4)))) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM rt0 WHERE ((NOT (COALESCE(((rt0.c3)LIKE(0.3855221682824147)), ((rt0.c2)OR(rt0.c4)))))) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM rt0 WHERE (((COALESCE(((rt0.c3)LIKE(0.3855221682824147)), ((rt0.c2)OR(rt0.c4)))) ISNULL)) GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT rt1.c2, rt1.c4 FROM rt1 GROUP BY rt1.c2, rt1.c4;
SELECT rt1.c2, rt1.c4 FROM rt1 GROUP BY rt1.c2, rt1.c4 HAVING COUNT(MIN(GROUP_CONCAT(rt1.c0))) UNION ALL SELECT ALL rt1.c2, rt1.c4 FROM rt1 GROUP BY rt1.c2, rt1.c4 HAVING (NOT (COUNT(MIN(GROUP_CONCAT(rt1.c0))))) UNION ALL SELECT ALL rt1.c2, rt1.c4 FROM rt1 GROUP BY rt1.c2, rt1.c4 HAVING ((COUNT(MIN(GROUP_CONCAT(rt1.c0)))) ISNULL);
SELECT ALL v0.c1, rt1.c4, rt1.c1, rt1.c2, v0.c2, rt1.c3 FROM rt1, v0;
SELECT ALL v0.c1, rt1.c4, rt1.c1, rt1.c2, v0.c2, rt1.c3 FROM rt1 NOT INDEXED, v0 WHERE (((((rt1.c0)*(rt1.c2))) NOT NULL)) UNION ALL SELECT ALL v0.c1, rt1.c4, rt1.c1, rt1.c2, v0.c2, rt1.c3 FROM rt1, v0 WHERE ((NOT (((((rt1.c0)*(rt1.c2))) NOT NULL)))) UNION ALL SELECT v0.c1, rt1.c4, rt1.c1, rt1.c2, v0.c2, rt1.c3 FROM rt1, v0 WHERE (((((((rt1.c0)*(rt1.c2))) NOT NULL)) ISNULL));
SELECT ALL v0.c1, rt1.c4, rt1.c1, rt1.c2, v0.c2, rt1.c3 FROM rt1, v0;
SELECT DISTINCT * FROM rt0, v0, rt1;
SELECT DISTINCT * FROM rt0, v0, rt1 WHERE (LIKELIHOOD(DISTINCT CASE WHEN v0.c2 THEN v0.c1 WHEN rt0.c2 THEN rt0.c3 WHEN rt1.c1 THEN '' ELSE v0.c0 END, 0.5199516049937967)) UNION SELECT DISTINCT * FROM rt0, v0, rt1 WHERE ((NOT (LIKELIHOOD(DISTINCT CASE WHEN v0.c2 THEN v0.c1 WHEN rt0.c2 THEN rt0.c3 WHEN rt1.c1 THEN '' ELSE v0.c0 END, 0.5199516049937967)))) UNION SELECT DISTINCT * FROM rt0, v0, rt1 WHERE (((LIKELIHOOD(DISTINCT CASE WHEN v0.c2 THEN v0.c1 WHEN rt0.c2 THEN rt0.c3 WHEN rt1.c1 THEN '' ELSE v0.c0 END, 0.5199516049937967)) ISNULL));
SELECT DISTINCT * FROM rt0, v0, rt1;
SELECT v0.c1, rt1.c2, rt1.c0, rt1.c1 FROM v0, rt1, rt0 GROUP BY v0.c1, rt1.c2, rt1.c0, rt1.c1;
SELECT v0.c1, rt1.c2, rt1.c0, rt1.c1 FROM v0, rt1, rt0 WHERE (CASE ((rt0.c2) ISNULL)  WHEN (rt0.c0 IN ()) THEN (rt1.c0 IN (rt0.c2)) ELSE ((v0.c0) NOT BETWEEN (rt0.c3) AND (NULL)) END) GROUP BY v0.c1, rt1.c2, rt1.c0, rt1.c1 UNION SELECT v0.c1, rt1.c2, rt1.c0, rt1.c1 FROM v0, rt1, rt0 WHERE ((NOT (CASE ((rt0.c2) ISNULL)  WHEN (rt0.c0 IN ()) THEN (rt1.c0 IN (rt0.c2)) ELSE ((v0.c0) NOT BETWEEN (rt0.c3) AND (NULL)) END))) GROUP BY v0.c1, rt1.c2, rt1.c0, rt1.c1 UNION SELECT v0.c1, rt1.c2, rt1.c0, rt1.c1 FROM v0, rt1, rt0 WHERE (((CASE ((rt0.c2) ISNULL)  WHEN (rt0.c0 IN ()) THEN (rt1.c0 IN (rt0.c2)) ELSE ((v0.c0) NOT BETWEEN (rt0.c3) AND (NULL)) END) ISNULL)) GROUP BY v0.c1, rt1.c2, rt1.c0, rt1.c1;
SELECT v0.c1, rt1.c2, rt1.c0, rt1.c1 FROM v0, rt1, rt0 GROUP BY v0.c1, rt1.c2, rt1.c0, rt1.c1;
SELECT rt1.c1, v0.c2, rt1.c0, rt0.c0, rt0.c1, rt0.c4 FROM rt0 FULL OUTER JOIN rt1 ON (((((rt1.c1)) BETWEEN ((v0.c1)) AND ((rt1.c0)))) BETWEEN (((rt1.c3)<>(rt0.c0))) AND (((NULL) NOT BETWEEN (rt1.c2) AND (rt0.c0)))) LEFT OUTER JOIN v0 ON (((rt0.c4) BETWEEN (rt1.c1) AND (rt0.c0)) IN ()) GROUP BY rt1.c1, v0.c2, rt1.c0, rt0.c0, rt0.c1, rt0.c4;
SELECT ALL rt0.c1, rt0.c4, v0.c1, rt0.c0, rt0.c2, v0.c0, v0.c2 FROM rt0, v0;
SELECT ALL rt0.c1, rt0.c4, v0.c1, rt0.c0, rt0.c2, v0.c0, v0.c2 FROM rt0, v0 WHERE (((((rt0.c0) BETWEEN (v0.c0) AND (v0.c1))) BETWEEN (((NULL)>=(rt0.c2))) AND (((v0.c1)*(rt0.c4))))) UNION ALL SELECT rt0.c1, rt0.c4, v0.c1, rt0.c0, rt0.c2, v0.c0, v0.c2 FROM rt0, v0 WHERE ((NOT (((((rt0.c0) BETWEEN (v0.c0) AND (v0.c1))) BETWEEN (((NULL)>=(rt0.c2))) AND (((v0.c1)*(rt0.c4))))))) UNION ALL SELECT ALL rt0.c1, rt0.c4, v0.c1, rt0.c0, rt0.c2, v0.c0, v0.c2 FROM rt0, v0 WHERE (((((((rt0.c0) BETWEEN (v0.c0) AND (v0.c1))) BETWEEN (((NULL)>=(rt0.c2))) AND (((v0.c1)*(rt0.c4))))) ISNULL));
SELECT ALL rt0.c1, rt0.c4, v0.c1, rt0.c0, rt0.c2, v0.c0, v0.c2 FROM rt0, v0;
SELECT DISTINCT * FROM rt1, v0, rt0;
SELECT DISTINCT * FROM rt1, v0, rt0 WHERE (v0.c0) UNION SELECT DISTINCT * FROM rt1, v0, rt0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT * FROM rt1, v0, rt0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT * FROM rt1, v0, rt0;
SELECT rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((rt0.c0)AND(rt0.c4)) IN ())) GROUP BY rt0.c3, rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c0)AND(rt0.c4)) IN ())))) GROUP BY rt0.c3, rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((((rt0.c0)AND(rt0.c4)) IN ())) ISNULL)) GROUP BY rt0.c3, rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2, rt0.c0;
SELECT rt1.c1, rt0.c4, v0.c2, v0.c1, rt1.c3, rt1.c0, rt0.c1, rt1.c4, rt0.c3, rt0.c0, rt0.c2, v0.c0 FROM rt0, rt1, v0 GROUP BY rt1.c1, rt0.c4, v0.c2, v0.c1, rt1.c3, rt1.c0, rt0.c1, rt1.c4, rt0.c3, rt0.c0, rt0.c2, v0.c0;
SELECT rt1.c1, rt0.c4, v0.c2, v0.c1, rt1.c3, rt1.c0, rt0.c1, rt1.c4, rt0.c3, rt0.c0, rt0.c2, v0.c0 FROM rt0, rt1, v0 GROUP BY rt1.c1, rt0.c4, v0.c2, v0.c1, rt1.c3, rt1.c0, rt0.c1, rt1.c4, rt0.c3, rt0.c0, rt0.c2, v0.c0 HAVING COUNT(*) UNION ALL SELECT rt1.c1, rt0.c4, v0.c2, v0.c1, rt1.c3, rt1.c0, rt0.c1, rt1.c4, rt0.c3, rt0.c0, rt0.c2, v0.c0 FROM rt0, rt1, v0 GROUP BY rt1.c1, rt0.c4, v0.c2, v0.c1, rt1.c3, rt1.c0, rt0.c1, rt1.c4, rt0.c3, rt0.c0, rt0.c2, v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c1, rt0.c4, v0.c2, v0.c1, rt1.c3, rt1.c0, rt0.c1, rt1.c4, rt0.c3, rt0.c0, rt0.c2, v0.c0 FROM rt0, rt1, v0 GROUP BY rt1.c1, rt0.c4, v0.c2, v0.c1, rt1.c3, rt1.c0, rt0.c1, rt1.c4, rt0.c3, rt0.c0, rt0.c2, v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c1, rt0.c4, v0.c2, v0.c1, rt1.c3, rt1.c0, rt0.c1, rt1.c4, rt0.c3, rt0.c0, rt0.c2, v0.c0 FROM rt0, rt1, v0 GROUP BY rt1.c1, rt0.c4, v0.c2, v0.c1, rt1.c3, rt1.c0, rt0.c1, rt1.c4, rt0.c3, rt0.c0, rt0.c2, v0.c0;
SELECT rt1.c1, rt0.c4, v0.c2, v0.c1, rt1.c3, rt1.c0, rt0.c1, rt1.c4, rt0.c3, rt0.c0, rt0.c2, v0.c0 FROM rt0, rt1, v0 GROUP BY rt1.c1, rt0.c4, v0.c2, v0.c1, rt1.c3, rt1.c0, rt0.c1, rt1.c4, rt0.c3, rt0.c0, rt0.c2, v0.c0 HAVING COUNT(*) UNION ALL SELECT rt1.c1, rt0.c4, v0.c2, v0.c1, rt1.c3, rt1.c0, rt0.c1, rt1.c4, rt0.c3, rt0.c0, rt0.c2, v0.c0 FROM rt0, rt1, v0 GROUP BY rt1.c1, rt0.c4, v0.c2, v0.c1, rt1.c3, rt1.c0, rt0.c1, rt1.c4, rt0.c3, rt0.c0, rt0.c2, v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c1, rt0.c4, v0.c2, v0.c1, rt1.c3, rt1.c0, rt0.c1, rt1.c4, rt0.c3, rt0.c0, rt0.c2, v0.c0 FROM rt0, rt1, v0 GROUP BY rt1.c1, rt0.c4, v0.c2, v0.c1, rt1.c3, rt1.c0, rt0.c1, rt1.c4, rt0.c3, rt0.c0, rt0.c2, v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c1, rt0.c4, v0.c2, v0.c1, rt1.c3, rt1.c0, rt0.c1, rt1.c4, rt0.c3, rt0.c0, rt0.c2, v0.c0 FROM rt0, rt1, v0 GROUP BY rt1.c1, rt0.c4, v0.c2, v0.c1, rt1.c3, rt1.c0, rt0.c1, rt1.c4, rt0.c3, rt0.c0, rt0.c2, v0.c0;
SELECT * FROM rt0, rt1, v0;
SELECT * FROM rt0, rt1, v0 WHERE (rt0.c0) UNION ALL SELECT ALL * FROM rt0, rt1, v0 WHERE ((NOT (rt0.c0))) UNION ALL SELECT ALL * FROM rt0, rt1, v0 WHERE (((rt0.c0) ISNULL));
SELECT * FROM rt0, rt1, v0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (rt1.c4) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (rt1.c4))) UNION SELECT DISTINCT * FROM rt1 WHERE (((rt1.c4) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL rt1.c2 FROM v0 NOT INDEXED, rt1 GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM v0, rt1 WHERE ((((('-130626553')OR(((rt1.c2)<=(rt1.c2)))))OR((((rt1.c1))=((v0.c1)))))) GROUP BY rt1.c2 UNION SELECT rt1.c2 FROM v0, rt1 WHERE ((NOT ((((('-130626553')OR(((rt1.c2)<=(rt1.c2)))))OR((((rt1.c1))==((v0.c1)))))))) GROUP BY rt1.c2 UNION SELECT rt1.c2 FROM v0, rt1 WHERE ((((((('-130626553')OR(((rt1.c2)<=(rt1.c2)))))OR((((rt1.c1))=((v0.c1)))))) ISNULL)) GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM v0 NOT INDEXED, rt1 GROUP BY rt1.c2;
SELECT rt1.c3, rt1.c1, v0.c2, rt1.c4, rt1.c0, rt1.c2, v0.c0 FROM rt1, v0 GROUP BY rt1.c3, rt1.c1, v0.c2, rt1.c4, rt1.c0, rt1.c2, v0.c0;
SELECT rt1.c3, rt1.c1, v0.c2, rt1.c4, rt1.c0, rt1.c2, v0.c0 FROM rt1, v0 GROUP BY rt1.c3, rt1.c1, v0.c2, rt1.c4, rt1.c0, rt1.c2, v0.c0 HAVING ((AVG(COUNT(*))) NOT BETWEEN (MAX(TOTAL(rt1.c1))) AND (rt1.c4)) UNION ALL SELECT rt1.c3, rt1.c1, v0.c2, rt1.c4, rt1.c0, rt1.c2, v0.c0 FROM rt1, v0 NOT INDEXED GROUP BY rt1.c3, rt1.c1, v0.c2, rt1.c4, rt1.c0, rt1.c2, v0.c0 HAVING (NOT (((AVG(COUNT(*))) NOT BETWEEN (MAX(TOTAL(rt1.c1))) AND (rt1.c4)))) UNION ALL SELECT ALL rt1.c3, rt1.c1, v0.c2, rt1.c4, rt1.c0, rt1.c2, v0.c0 FROM rt1, v0 GROUP BY rt1.c3, rt1.c1, v0.c2, rt1.c4, rt1.c0, rt1.c2, v0.c0 HAVING ((((AVG(COUNT(*))) NOT BETWEEN (MAX(TOTAL(rt1.c1))) AND (rt1.c4))) ISNULL);
SELECT * FROM rt1, rt0, v0;
SELECT * FROM rt1, rt0, v0 WHERE ((((v0.c0)) BETWEEN ((CAST(v0.c0 AS REAL))) AND ((rt0.c2)))) UNION ALL SELECT ALL * FROM rt1, rt0, v0 WHERE ((NOT ((((v0.c0)) BETWEEN ((CAST(v0.c0 AS REAL))) AND ((rt0.c2)))))) UNION ALL SELECT ALL * FROM rt1, rt0, v0 WHERE ((((((v0.c0)) BETWEEN ((CAST(v0.c0 AS REAL))) AND ((rt0.c2)))) ISNULL));
SELECT * FROM rt1, rt0, v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((((v0.c1) BETWEEN (v0.c1) AND (v0.c2)), (('-863178439') BETWEEN (v0.c0) AND (v0.c0)), (((0.02149653909370708, v0.c1, v0.c1)) NOT BETWEEN ((v0.c1, v0.c1, v0.c1)) AND ((v0.c1, 0Xffffffff844176e2, v0.c1)))))<((((v0.c1)>(v0.c0)), (((v0.c2)) NOT BETWEEN ((v0.c2)) AND ((v0.c0))), ((v0.c0) IS FALSE))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((((v0.c1) BETWEEN (v0.c1) AND (v0.c2)), (('-863178439') BETWEEN (v0.c0) AND (v0.c0)), (((0.02149653909370708, v0.c1, v0.c1)) NOT BETWEEN ((v0.c1, v0.c1, v0.c1)) AND ((v0.c1, 0xffffffff844176e2, v0.c1)))))<((((v0.c1)>(v0.c0)), (((v0.c2)) NOT BETWEEN ((v0.c2)) AND ((v0.c0))), ((v0.c0) IS FALSE))))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((((v0.c1) BETWEEN (v0.c1) AND (v0.c2)), (('-863178439') BETWEEN (v0.c0) AND (v0.c0)), (((0.02149653909370708, v0.c1, v0.c1)) NOT BETWEEN ((v0.c1, v0.c1, v0.c1)) AND ((v0.c1, 0xffffffff844176e2, v0.c1)))))<((((v0.c1)>(v0.c0)), (((v0.c2)) NOT BETWEEN ((v0.c2)) AND ((v0.c0))), ((v0.c0) IS FALSE))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT rt0.c0, rt0.c4, rt0.c1, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c4, rt0.c1, rt0.c2, rt0.c3;
SELECT ALL rt0.c0, rt0.c4, rt0.c1, rt0.c2, rt0.c3 FROM rt0 WHERE (CASE WHEN TRIM(rt0.c3) THEN (((rt0.c0, rt0.c3, rt0.c4))<=((rt0.c3, rt0.c1, rt0.c1))) END) GROUP BY rt0.c0, rt0.c4, rt0.c1, rt0.c2, rt0.c3 UNION SELECT rt0.c0, rt0.c4, rt0.c1, rt0.c2, rt0.c3 FROM rt0 WHERE ((NOT (CASE WHEN TRIM(rt0.c3) THEN (((rt0.c0, rt0.c3, rt0.c4))<=((rt0.c3, rt0.c1, rt0.c1))) END))) GROUP BY rt0.c0, rt0.c4, rt0.c1, rt0.c2, rt0.c3 UNION SELECT ALL rt0.c0, rt0.c4, rt0.c1, rt0.c2, rt0.c3 FROM rt0 WHERE (((CASE WHEN TRIM(rt0.c3) THEN (((rt0.c0, rt0.c3, rt0.c4))<=((rt0.c3, rt0.c1, rt0.c1))) END) ISNULL)) GROUP BY rt0.c0, rt0.c4, rt0.c1, rt0.c2, rt0.c3;
SELECT rt0.c0, rt0.c4, rt0.c1, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c4, rt0.c1, rt0.c2, rt0.c3;
SELECT rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0;
SELECT rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0 HAVING rt1.c0 UNION ALL SELECT rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0 HAVING (NOT (rt1.c0)) UNION ALL SELECT ALL rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0 HAVING ((rt1.c0) ISNULL);
SELECT rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0;
SELECT rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0 HAVING rt1.c0 UNION ALL SELECT rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0 HAVING (NOT (rt1.c0)) UNION ALL SELECT ALL rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0 HAVING ((rt1.c0) ISNULL);
SELECT rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0;
SELECT ALL * FROM v0, rt0;
SELECT ALL * FROM v0, rt0 WHERE (UNLIKELY(CASE rt0.c0  WHEN rt0.c2 THEN v0.c1 END)) UNION ALL SELECT * FROM v0, rt0 WHERE ((NOT (UNLIKELY(CASE rt0.c0  WHEN rt0.c2 THEN v0.c1 END)))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE (((UNLIKELY(CASE rt0.c0  WHEN rt0.c2 THEN v0.c1 END)) ISNULL));
SELECT ALL * FROM v0, rt0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (CASE CAST(rt1.c0 AS NUMERIC)  WHEN (((rt1.c1, rt1.c0, rt1.c2))>=((rt1.c4, rt1.c4, rt1.c3))) THEN ((rt1.c1)>(rt1.c0)) ELSE ((rt1.c0)<=(rt1.c2)) END) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (CASE CAST(rt1.c0 AS NUMERIC)  WHEN (((rt1.c1, rt1.c0, rt1.c2))>=((rt1.c4, rt1.c4, rt1.c3))) THEN ((rt1.c1)>(rt1.c0)) ELSE ((rt1.c0)<=(rt1.c2)) END))) UNION SELECT DISTINCT * FROM rt1 WHERE (((CASE CAST(rt1.c0 AS NUMERIC)  WHEN (((rt1.c1, rt1.c0, rt1.c2))>=((rt1.c4, rt1.c4, rt1.c3))) THEN ((rt1.c1)>(rt1.c0)) ELSE ((rt1.c0)<=(rt1.c2)) END) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL rt0.c0, rt0.c3, rt0.c4, v0.c1, v0.c2, rt0.c1, v0.c0, rt0.c2 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c0, rt0.c3, rt0.c4, v0.c1, v0.c2, rt0.c1, v0.c0, rt0.c2;
SELECT rt0.c0, rt0.c3, rt0.c4, v0.c1, v0.c2, rt0.c1, v0.c0, rt0.c2 FROM rt0 NATURAL JOIN v0 WHERE ((- (((v0.c1) NOTNULL)))) GROUP BY rt0.c0, rt0.c3, rt0.c4, v0.c1, v0.c2, rt0.c1, v0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c3, rt0.c4, v0.c1, v0.c2, rt0.c1, v0.c0, rt0.c2 FROM rt0 NATURAL JOIN v0 WHERE ((NOT ((- (((v0.c1) NOTNULL)))))) GROUP BY rt0.c0, rt0.c3, rt0.c4, v0.c1, v0.c2, rt0.c1, v0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c3, rt0.c4, v0.c1, v0.c2, rt0.c1, v0.c0, rt0.c2 FROM rt0 NATURAL JOIN v0 WHERE ((((- (((v0.c1) NOTNULL)))) ISNULL)) GROUP BY rt0.c0, rt0.c3, rt0.c4, v0.c1, v0.c2, rt0.c1, v0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c3, rt0.c4, v0.c1, v0.c2, rt0.c1, v0.c0, rt0.c2 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c0, rt0.c3, rt0.c4, v0.c1, v0.c2, rt0.c1, v0.c0, rt0.c2;
SELECT ALL rt1.c0 FROM rt1, v0 NATURAL JOIN rt0 GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM rt1, v0 NATURAL JOIN rt0 GROUP BY rt1.c0 HAVING ((json_array(MIN(COUNT(COUNT(SUM(COUNT(*))))), AVG(TOTAL(COUNT(*))), COUNT(GROUP_CONCAT(rt0.c3)), rt0.c3))IS(COUNT(*))) UNION ALL SELECT ALL rt1.c0 FROM rt1, v0 NATURAL JOIN rt0 GROUP BY rt1.c0 HAVING (NOT (((json_array(MIN(COUNT(COUNT(SUM(COUNT(*))))), AVG(TOTAL(COUNT(*))), COUNT(GROUP_CONCAT(rt0.c3)), rt0.c3))IS(COUNT(*))))) UNION ALL SELECT rt1.c0 FROM rt1, v0 NATURAL JOIN rt0 GROUP BY rt1.c0 HAVING ((((json_array(MIN(COUNT(COUNT(SUM(COUNT(*))))), AVG(TOTAL(COUNT(*))), COUNT(GROUP_CONCAT(rt0.c3)), rt0.c3))IS(COUNT(*)))) ISNULL);
SELECT SUM(NULL) FROM rt0, rt1;
SELECT ALL * FROM v0, rt0, rt1;
SELECT * FROM v0, rt0, rt1 WHERE (((v0.c1) BETWEEN (((rt0.c3)&(rt0.c1))) AND ((((rt1.c0, rt1.c0, '')) BETWEEN (('', rt0.c1, rt1.c0)) AND ((NULL, rt1.c2, rt0.c3)))))) UNION ALL SELECT * FROM v0, rt0, rt1 WHERE ((NOT (((v0.c1) BETWEEN (((rt0.c3)&(rt0.c1))) AND ((((rt1.c0, rt1.c0, '')) BETWEEN (('', rt0.c1, rt1.c0)) AND ((NULL, rt1.c2, rt0.c3)))))))) UNION ALL SELECT * FROM v0, rt0, rt1 WHERE (((((v0.c1) BETWEEN (((rt0.c3)&(rt0.c1))) AND ((((rt1.c0, rt1.c0, '')) BETWEEN (('', rt0.c1, rt1.c0)) AND ((NULL, rt1.c2, rt0.c3)))))) ISNULL));
SELECT ALL * FROM v0, rt0, rt1;
SELECT DISTINCT * FROM rt1, v0;
SELECT DISTINCT * FROM rt1, v0 WHERE (((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c3 THEN v0.c1 WHEN v0.c2 THEN v0.c1 ELSE rt1.c4 END) NOT NULL)) UNION SELECT DISTINCT * FROM rt1, v0 WHERE ((NOT (((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c3 THEN v0.c1 WHEN v0.c2 THEN v0.c1 ELSE rt1.c4 END) NOT NULL)))) UNION SELECT DISTINCT * FROM rt1, v0 WHERE (((((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c3 THEN v0.c1 WHEN v0.c2 THEN v0.c1 ELSE rt1.c4 END) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM rt1, v0;
SELECT ALL rt1.c4, rt1.c2, rt1.c0, rt0.c3, rt0.c2, rt0.c1, rt1.c1, v0.c2, v0.c1, rt0.c0, v0.c0 FROM v0, rt1, rt0 GROUP BY rt1.c4, rt1.c2, rt1.c0, rt0.c3, rt0.c2, rt0.c1, rt1.c1, v0.c2, v0.c1, rt0.c0, v0.c0;
SELECT rt1.c4, rt1.c2, rt1.c0, rt0.c3, rt0.c2, rt0.c1, rt1.c1, v0.c2, v0.c1, rt0.c0, v0.c0 FROM v0, rt1, rt0 WHERE ((((((((((rt1.c0 IN ()))OR(CAST(v0.c2 AS NUMERIC))))AND((x'' IN ()))))OR(rt0.c2)))AND((+ (v0.c1))))) GROUP BY rt1.c4, rt1.c2, rt1.c0, rt0.c3, rt0.c2, rt0.c1, rt1.c1, v0.c2, v0.c1, rt0.c0, v0.c0 UNION SELECT ALL rt1.c4, rt1.c2, rt1.c0, rt0.c3, rt0.c2, rt0.c1, rt1.c1, v0.c2, v0.c1, rt0.c0, v0.c0 FROM v0, rt1, rt0 WHERE ((NOT ((((((((((rt1.c0 IN ()))OR(CAST(v0.c2 AS NUMERIC))))AND((x'' IN ()))))OR(rt0.c2)))AND((+ (v0.c1))))))) GROUP BY rt1.c4, rt1.c2, rt1.c0, rt0.c3, rt0.c2, rt0.c1, rt1.c1, v0.c2, v0.c1, rt0.c0, v0.c0 UNION SELECT ALL rt1.c4, rt1.c2, rt1.c0, rt0.c3, rt0.c2, rt0.c1, rt1.c1, v0.c2, v0.c1, rt0.c0, v0.c0 FROM v0, rt1, rt0 WHERE ((((((((((((rt1.c0 IN ()))OR(CAST(v0.c2 AS NUMERIC))))AND((x'' IN ()))))OR(rt0.c2)))AND((+ (v0.c1))))) ISNULL)) GROUP BY rt1.c4, rt1.c2, rt1.c0, rt0.c3, rt0.c2, rt0.c1, rt1.c1, v0.c2, v0.c1, rt0.c0, v0.c0;
SELECT ALL rt1.c4, rt1.c2, rt1.c0, rt0.c3, rt0.c2, rt0.c1, rt1.c1, v0.c2, v0.c1, rt0.c0, v0.c0 FROM v0, rt1, rt0 GROUP BY rt1.c4, rt1.c2, rt1.c0, rt0.c3, rt0.c2, rt0.c1, rt1.c1, v0.c2, v0.c1, rt0.c0, v0.c0;
SELECT v0.c0, v0.c2, rt1.c1, rt1.c3, rt0.c1, rt1.c0, rt1.c2, rt0.c4, rt0.c2, rt0.c3 FROM rt1, rt0, v0 GROUP BY v0.c0, v0.c2, rt1.c1, rt1.c3, rt0.c1, rt1.c0, rt1.c2, rt0.c4, rt0.c2, rt0.c3;
SELECT ALL v0.c0, v0.c2, rt1.c1, rt1.c3, rt0.c1, rt1.c0, rt1.c2, rt0.c4, rt0.c2, rt0.c3 FROM rt1, rt0, v0 GROUP BY v0.c0, v0.c2, rt1.c1, rt1.c3, rt0.c1, rt1.c0, rt1.c2, rt0.c4, rt0.c2, rt0.c3 HAVING MAX(MIN(COUNT(*))) UNION ALL SELECT ALL v0.c0, v0.c2, rt1.c1, rt1.c3, rt0.c1, rt1.c0, rt1.c2, rt0.c4, rt0.c2, rt0.c3 FROM rt1, rt0, v0 GROUP BY v0.c0, v0.c2, rt1.c1, rt1.c3, rt0.c1, rt1.c0, rt1.c2, rt0.c4, rt0.c2, rt0.c3 HAVING (NOT (MAX(MIN(COUNT(*))))) UNION ALL SELECT ALL v0.c0, v0.c2, rt1.c1, rt1.c3, rt0.c1, rt1.c0, rt1.c2, rt0.c4, rt0.c2, rt0.c3 FROM rt1, rt0, v0 GROUP BY v0.c0, v0.c2, rt1.c1, rt1.c3, rt0.c1, rt1.c0, rt1.c2, rt0.c4, rt0.c2, rt0.c3 HAVING ((MAX(MIN(COUNT(*)))) ISNULL);
SELECT ALL v0.c2, rt1.c3, rt1.c1, v0.c1, rt1.c4, v0.c0, rt1.c0 FROM v0, rt1;
SELECT v0.c2, rt1.c3, rt1.c1, v0.c1, rt1.c4, v0.c0, rt1.c0 FROM v0, rt1 WHERE ((+ (v0.c2 COLLATE RTRIM))) UNION ALL SELECT v0.c2, rt1.c3, rt1.c1, v0.c1, rt1.c4, v0.c0, rt1.c0 FROM v0, rt1 WHERE ((NOT ((+ (v0.c2 COLLATE RTRIM))))) UNION ALL SELECT ALL v0.c2, rt1.c3, rt1.c1, v0.c1, rt1.c4, v0.c0, rt1.c0 FROM v0, rt1 WHERE ((((+ (v0.c2 COLLATE RTRIM))) ISNULL));
SELECT ALL v0.c2, rt1.c3, rt1.c1, v0.c1, rt1.c4, v0.c0, rt1.c0 FROM v0, rt1;
SELECT DISTINCT rt1.c2, v0.c0, rt1.c4, v0.c1, rt1.c3, rt1.c1, v0.c2 FROM v0, rt1;
SELECT DISTINCT rt1.c2, v0.c0, rt1.c4, v0.c1, rt1.c3, rt1.c1, v0.c2 FROM v0, rt1 WHERE (rt1.c1) UNION SELECT DISTINCT rt1.c2, v0.c0, rt1.c4, v0.c1, rt1.c3, rt1.c1, v0.c2 FROM v0, rt1 WHERE ((NOT (rt1.c1))) UNION SELECT DISTINCT rt1.c2, v0.c0, rt1.c4, v0.c1, rt1.c3, rt1.c1, v0.c2 FROM v0, rt1 WHERE (((rt1.c1) ISNULL));
SELECT DISTINCT rt1.c2, v0.c0, rt1.c4, v0.c1, rt1.c3, rt1.c1, v0.c2 FROM v0, rt1;
SELECT ALL rt0.c0, rt0.c2, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c4, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c4, rt0.c1 FROM rt0 WHERE (((~ (0X6e554aee)) IN ())) GROUP BY rt0.c0, rt0.c2, rt0.c4, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c4, rt0.c1 FROM rt0 WHERE ((NOT (((~ (0X6e554aee)) IN ())))) GROUP BY rt0.c0, rt0.c2, rt0.c4, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c4, rt0.c1 FROM rt0 WHERE (((((~ (0X6e554aee)) IN ())) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c4, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c4, rt0.c1;
SELECT rt0.c1 FROM v0, rt0 NOT INDEXED GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM v0, rt0 GROUP BY rt0.c1 HAVING SUM(v0.c0) UNION ALL SELECT rt0.c1 FROM v0, rt0 GROUP BY rt0.c1 HAVING (NOT (SUM(v0.c0))) UNION ALL SELECT ALL rt0.c1 FROM v0, rt0 GROUP BY rt0.c1 HAVING ((SUM(v0.c0)) ISNULL);
SELECT rt0.c1 FROM v0, rt0 NOT INDEXED GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM v0, rt0 GROUP BY rt0.c1 HAVING SUM(v0.c0) UNION ALL SELECT rt0.c1 FROM v0, rt0 GROUP BY rt0.c1 HAVING (NOT (SUM(v0.c0))) UNION ALL SELECT ALL rt0.c1 FROM v0, rt0 GROUP BY rt0.c1 HAVING ((SUM(v0.c0)) ISNULL);
SELECT rt0.c1 FROM v0, rt0 NOT INDEXED GROUP BY rt0.c1;
SELECT ALL * FROM rt1, v0, rt0;
SELECT ALL * FROM rt1, v0, rt0 WHERE (((NULLIF(DISTINCT rt0.c1, v0.c0)) NOTNULL)) UNION ALL SELECT * FROM rt1, v0, rt0 WHERE ((NOT (((NULLIF(DISTINCT rt0.c1, v0.c0)) NOTNULL)))) UNION ALL SELECT ALL * FROM rt1, v0, rt0 WHERE (((((NULLIF(DISTINCT rt0.c1, v0.c0)) NOTNULL)) ISNULL));
SELECT ALL * FROM rt1, v0, rt0;
SELECT DISTINCT rt0.c4, rt0.c2, rt0.c3, v0.c1, v0.c0, rt0.c1 FROM v0 FULL OUTER JOIN rt0 ON (((((rt0.c4)) NOT BETWEEN ((rt0.c1)) AND (('-682310947')))) NOTNULL);
SELECT DISTINCT rt0.c4, rt0.c2, rt0.c3, v0.c1, v0.c0, rt0.c1 FROM v0 FULL OUTER JOIN rt0 ON (((((rt0.c4)) NOT BETWEEN ((rt0.c1)) AND (('-682310947')))) NOTNULL) WHERE (((((((rt0.c3) IS FALSE))AND(CASE rt0.c1  WHEN v0.c2 THEN v0.c0 WHEN v0.c0 THEN v0.c2 WHEN rt0.c0 THEN v0.c2 END)))AND(((rt0.c4) BETWEEN (v0.c1) AND (rt0.c3))))) UNION SELECT DISTINCT rt0.c4, rt0.c2, rt0.c3, v0.c1, v0.c0, rt0.c1 FROM v0 FULL OUTER JOIN rt0 ON (((((rt0.c4)) NOT BETWEEN ((rt0.c1)) AND (('-682310947')))) NOTNULL) WHERE ((NOT (((((((rt0.c3) IS FALSE))AND(CASE rt0.c1  WHEN v0.c2 THEN v0.c0 WHEN v0.c0 THEN v0.c2 WHEN rt0.c0 THEN v0.c2 END)))AND(((rt0.c4) BETWEEN (v0.c1) AND (rt0.c3))))))) UNION SELECT DISTINCT rt0.c4, rt0.c2, rt0.c3, v0.c1, v0.c0, rt0.c1 FROM v0 FULL OUTER JOIN rt0 ON (((((rt0.c4)) NOT BETWEEN ((rt0.c1)) AND (('-682310947')))) NOTNULL) WHERE (((((((((rt0.c3) IS FALSE))AND(CASE rt0.c1  WHEN v0.c2 THEN v0.c0 WHEN v0.c0 THEN v0.c2 WHEN rt0.c0 THEN v0.c2 END)))AND(((rt0.c4) BETWEEN (v0.c1) AND (rt0.c3))))) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c2, rt0.c3, v0.c1, v0.c0, rt0.c1 FROM v0 FULL OUTER JOIN rt0 ON (((((rt0.c4)) NOT BETWEEN ((rt0.c1)) AND (('-682310947')))) NOTNULL);
SELECT ALL rt1.c4, rt1.c1, v0.c1, v0.c2 FROM rt1 INNER JOIN v0 ON ((json_insert(rt1.c3, rt1.c3, rt1.c2, v0.c2, 0xffffffffa4f17304)) IS TRUE) GROUP BY rt1.c4, rt1.c1, v0.c1, v0.c2;
SELECT rt1.c4, rt1.c1, v0.c1, v0.c2 FROM rt1 INNER JOIN v0 ON ((json_insert(rt1.c3, rt1.c3, rt1.c2, v0.c2, 0xffffffffa4f17304)) IS TRUE) WHERE (rt1.c3) GROUP BY rt1.c4, rt1.c1, v0.c1, v0.c2 UNION SELECT ALL rt1.c4, rt1.c1, v0.c1, v0.c2 FROM rt1 INNER JOIN v0 ON ((json_insert(rt1.c3, rt1.c3, rt1.c2, v0.c2, 0Xffffffffa4f17304)) IS TRUE) WHERE ((NOT (rt1.c3))) GROUP BY rt1.c4, rt1.c1, v0.c1, v0.c2 UNION SELECT ALL rt1.c4, rt1.c1, v0.c1, v0.c2 FROM rt1 INNER JOIN v0 ON ((json_insert(rt1.c3, rt1.c3, rt1.c2, v0.c2, 0xffffffffa4f17304)) IS TRUE) WHERE (((rt1.c3) ISNULL)) GROUP BY rt1.c4, rt1.c1, v0.c1, v0.c2;
SELECT ALL rt1.c4, rt1.c1, v0.c1, v0.c2 FROM rt1 INNER JOIN v0 ON ((json_insert(rt1.c3, rt1.c3, rt1.c2, v0.c2, 0xffffffffa4f17304)) IS TRUE) GROUP BY rt1.c4, rt1.c1, v0.c1, v0.c2;
SELECT rt1.c3, rt1.c2, rt1.c4 FROM rt1 GROUP BY rt1.c3, rt1.c2, rt1.c4;
SELECT rt1.c3, rt1.c2, rt1.c4 FROM rt1 GROUP BY rt1.c3, rt1.c2, rt1.c4 HAVING MIN(IFNULL(DISTINCT rt1.c3, TOTAL(rt1.c4))) UNION ALL SELECT ALL rt1.c3, rt1.c2, rt1.c4 FROM rt1 GROUP BY rt1.c3, rt1.c2, rt1.c4 HAVING (NOT (MIN(IFNULL(DISTINCT rt1.c3, TOTAL(rt1.c4))))) UNION ALL SELECT ALL rt1.c3, rt1.c2, rt1.c4 FROM rt1 GROUP BY rt1.c3, rt1.c2, rt1.c4 HAVING ((MIN(IFNULL(DISTINCT rt1.c3, TOTAL(rt1.c4)))) ISNULL);
SELECT ALL rt0.c4, v0.c0, rt1.c2, v0.c2, rt0.c0, rt1.c4, rt0.c2, rt0.c1, rt1.c0, rt1.c1, rt0.c3, rt1.c3, v0.c1 FROM v0, rt1 NATURAL JOIN rt0;
SELECT ALL rt0.c4, v0.c0, rt1.c2, v0.c2, rt0.c0, rt1.c4, rt0.c2, rt0.c1, rt1.c0, rt1.c1, rt0.c3, rt1.c3, v0.c1 FROM v0, rt1 NATURAL JOIN rt0 WHERE (CAST(CASE WHEN rt0.c1 THEN rt1.c1 ELSE rt1.c2 END AS BLOB)) UNION ALL SELECT rt0.c4, v0.c0, rt1.c2, v0.c2, rt0.c0, rt1.c4, rt0.c2, rt0.c1, rt1.c0, rt1.c1, rt0.c3, rt1.c3, v0.c1 FROM v0, rt1 NATURAL JOIN rt0 WHERE ((NOT (CAST(CASE WHEN rt0.c1 THEN rt1.c1 ELSE rt1.c2 END AS BLOB)))) UNION ALL SELECT ALL rt0.c4, v0.c0, rt1.c2, v0.c2, rt0.c0, rt1.c4, rt0.c2, rt0.c1, rt1.c0, rt1.c1, rt0.c3, rt1.c3, v0.c1 FROM v0, rt1 NATURAL JOIN rt0 WHERE (((CAST(CASE WHEN rt0.c1 THEN rt1.c1 ELSE rt1.c2 END AS BLOB)) ISNULL));
SELECT ALL rt0.c4, v0.c0, rt1.c2, v0.c2, rt0.c0, rt1.c4, rt0.c2, rt0.c1, rt1.c0, rt1.c1, rt0.c3, rt1.c3, v0.c1 FROM v0, rt1 NATURAL JOIN rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((~ (v0.c0)) COLLATE NOCASE) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((~ (v0.c0)) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM v0 WHERE ((((~ (v0.c0)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT rt1.c3, rt0.c1, rt1.c2, rt1.c1, rt0.c0, rt1.c0, rt0.c3, rt0.c2 FROM rt1 LEFT OUTER JOIN v0 ON (rt1.c3 COLLATE RTRIM IN ()) LEFT OUTER JOIN rt0 ON json_valid((NULL IN (v0.c0, rt1.c4))) GROUP BY rt1.c3, rt0.c1, rt1.c2, rt1.c1, rt0.c0, rt1.c0, rt0.c3, rt0.c2;
SELECT rt1.c3, rt0.c1, rt1.c2, rt1.c1, rt0.c0, rt1.c0, rt0.c3, rt0.c2 FROM rt1 LEFT OUTER JOIN v0 ON (rt1.c3 COLLATE RTRIM IN ()) LEFT OUTER JOIN rt0 ON json_valid((NULL IN (v0.c0, rt1.c4))) WHERE (CAST((NOT (rt0.c4)) AS TEXT)) GROUP BY rt1.c3, rt0.c1, rt1.c2, rt1.c1, rt0.c0, rt1.c0, rt0.c3, rt0.c2 UNION SELECT ALL rt1.c3, rt0.c1, rt1.c2, rt1.c1, rt0.c0, rt1.c0, rt0.c3, rt0.c2 FROM rt1 LEFT OUTER JOIN v0 ON (rt1.c3 COLLATE RTRIM IN ()) LEFT OUTER JOIN rt0 ON json_valid((NULL IN (v0.c0, rt1.c4))) WHERE ((NOT (CAST((NOT (rt0.c4)) AS TEXT)))) GROUP BY rt1.c3, rt0.c1, rt1.c2, rt1.c1, rt0.c0, rt1.c0, rt0.c3, rt0.c2 UNION SELECT ALL rt1.c3, rt0.c1, rt1.c2, rt1.c1, rt0.c0, rt1.c0, rt0.c3, rt0.c2 FROM rt1 LEFT OUTER JOIN v0 ON (rt1.c3 COLLATE RTRIM IN ()) LEFT OUTER JOIN rt0 ON json_valid((NULL IN (v0.c0, rt1.c4))) WHERE (((CAST((NOT (rt0.c4)) AS TEXT)) ISNULL)) GROUP BY rt1.c3, rt0.c1, rt1.c2, rt1.c1, rt0.c0, rt1.c0, rt0.c3, rt0.c2;
SELECT rt1.c3, rt0.c1, rt1.c2, rt1.c1, rt0.c0, rt1.c0, rt0.c3, rt0.c2 FROM rt1 LEFT OUTER JOIN v0 ON (rt1.c3 COLLATE RTRIM IN ()) LEFT OUTER JOIN rt0 ON json_valid((NULL IN (v0.c0, rt1.c4))) GROUP BY rt1.c3, rt0.c1, rt1.c2, rt1.c1, rt0.c0, rt1.c0, rt0.c3, rt0.c2;
SELECT ALL rt0.c0, rt0.c2, v0.c1 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2, v0.c1;
SELECT ALL rt0.c0, rt0.c2, v0.c1 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2, v0.c1 HAVING GLOB(v0.c2, '_S') COLLATE NOCASE UNION ALL SELECT ALL rt0.c0, rt0.c2, v0.c1 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2, v0.c1 HAVING (NOT (GLOB(v0.c2, '_S') COLLATE NOCASE)) UNION ALL SELECT rt0.c0, rt0.c2, v0.c1 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2, v0.c1 HAVING ((GLOB(v0.c2, '_S') COLLATE NOCASE) ISNULL);
SELECT ALL rt0.c0, rt0.c2, v0.c1 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2, v0.c1;
SELECT ALL rt0.c0, rt0.c2, v0.c1 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2, v0.c1 HAVING GLOB(v0.c2, '_S') COLLATE NOCASE UNION ALL SELECT ALL rt0.c0, rt0.c2, v0.c1 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2, v0.c1 HAVING (NOT (GLOB(v0.c2, '_S') COLLATE NOCASE)) UNION ALL SELECT rt0.c0, rt0.c2, v0.c1 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2, v0.c1 HAVING ((GLOB(v0.c2, '_S') COLLATE NOCASE) ISNULL);
SELECT ALL rt0.c0, rt0.c2, v0.c1 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2, v0.c1;
SELECT * FROM v0;
SELECT * FROM v0 WHERE (CASE WHEN LIKELIHOOD(0.7808877956763992, 0.867980307532148) THEN ((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c1)) WHEN ((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c1)) THEN CASE v0.c2  WHEN v0.c2 THEN v0.c2 ELSE v0.c2 END WHEN ((v0.c2) IS TRUE) THEN v0.c0 COLLATE NOCASE END) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (CASE WHEN LIKELIHOOD(0.7808877956763992, 0.867980307532148) THEN ((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c1)) WHEN ((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c1)) THEN CASE v0.c2  WHEN v0.c2 THEN v0.c2 ELSE v0.c2 END WHEN ((v0.c2) IS TRUE) THEN v0.c0 COLLATE NOCASE END))) UNION ALL SELECT * FROM v0 WHERE (((CASE WHEN LIKELIHOOD(0.7808877956763992, 0.867980307532148) THEN ((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c1)) WHEN ((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c1)) THEN CASE v0.c2  WHEN v0.c2 THEN v0.c2 ELSE v0.c2 END WHEN ((v0.c2) IS TRUE) THEN v0.c0 COLLATE NOCASE END) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM rt0, v0, rt1;
SELECT DISTINCT * FROM rt0, v0, rt1 WHERE (((rt0.c2 IN ()) IN ())) UNION SELECT DISTINCT * FROM rt0, v0, rt1 WHERE ((NOT (((rt0.c2 IN ()) IN ())))) UNION SELECT DISTINCT * FROM rt0, v0, rt1 WHERE (((((rt0.c2 IN ()) IN ())) ISNULL));
SELECT DISTINCT * FROM rt0, v0, rt1;
SELECT ALL rt1.c1, rt1.c2, v0.c2 FROM v0, rt0, rt1 GROUP BY rt1.c1, rt1.c2, v0.c2;
SELECT rt1.c1, rt1.c2, v0.c2 FROM v0, rt0, rt1 WHERE (0.7772623368343469) GROUP BY rt1.c1, rt1.c2, v0.c2 UNION SELECT rt1.c1, rt1.c2, v0.c2 FROM v0, rt0, rt1 WHERE ((NOT (0.7772623368343469))) GROUP BY rt1.c1, rt1.c2, v0.c2 UNION SELECT rt1.c1, rt1.c2, v0.c2 FROM v0, rt0, rt1 WHERE (((0.7772623368343469) ISNULL)) GROUP BY rt1.c1, rt1.c2, v0.c2;
SELECT ALL rt1.c1, rt1.c2, v0.c2 FROM v0, rt0, rt1 GROUP BY rt1.c1, rt1.c2, v0.c2;
SELECT ALL rt1.c0, rt1.c1, rt1.c3, rt0.c4, rt0.c2 FROM rt1, rt0 GROUP BY rt1.c0, rt1.c1, rt1.c3, rt0.c4, rt0.c2;
SELECT ALL rt1.c0, rt1.c1, rt1.c3, rt0.c4, rt0.c2 FROM rt1, rt0 GROUP BY rt1.c0, rt1.c1, rt1.c3, rt0.c4, rt0.c2 HAVING CASE COUNT(MIN(rt1.c1))  WHEN ((TOTAL(GROUP_CONCAT(COUNT(*))))IS(TOTAL(rt0.c1))) THEN TOTAL(rt1.c1) WHEN rt0.c0 COLLATE RTRIM THEN ((rt1.c3)-(COUNT(rt1.c4))) WHEN SUM(MIN(rt1.c4)) COLLATE NOCASE THEN (((rt1.c2)) NOT BETWEEN ((GROUP_CONCAT(COUNT(rt1.c0)))) AND ((AVG(MAX(rt0.c0))))) END UNION ALL SELECT ALL rt1.c0, rt1.c1, rt1.c3, rt0.c4, rt0.c2 FROM rt1, rt0 GROUP BY rt1.c0, rt1.c1, rt1.c3, rt0.c4, rt0.c2 HAVING (NOT (CASE COUNT(MIN(rt1.c1))  WHEN ((TOTAL(GROUP_CONCAT(COUNT(*))))IS(TOTAL(rt0.c1))) THEN TOTAL(rt1.c1) WHEN rt0.c0 COLLATE RTRIM THEN ((rt1.c3)-(COUNT(rt1.c4))) WHEN SUM(MIN(rt1.c4)) COLLATE NOCASE THEN (((rt1.c2)) NOT BETWEEN ((GROUP_CONCAT(COUNT(rt1.c0)))) AND ((AVG(MAX(rt0.c0))))) END)) UNION ALL SELECT rt1.c0, rt1.c1, rt1.c3, rt0.c4, rt0.c2 FROM rt1, rt0 GROUP BY rt1.c0, rt1.c1, rt1.c3, rt0.c4, rt0.c2 HAVING ((CASE COUNT(MIN(rt1.c1))  WHEN ((TOTAL(GROUP_CONCAT(COUNT(*))))IS(TOTAL(rt0.c1))) THEN TOTAL(rt1.c1) WHEN rt0.c0 COLLATE RTRIM THEN ((rt1.c3)-(COUNT(rt1.c4))) WHEN SUM(MIN(rt1.c4)) COLLATE NOCASE THEN (((rt1.c2)) NOT BETWEEN ((GROUP_CONCAT(COUNT(rt1.c0)))) AND ((AVG(MAX(rt0.c0))))) END) ISNULL);
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE ((NOT (CAST(v0.c0 AS NUMERIC)))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT ((NOT (CAST(v0.c0 AS NUMERIC)))))) UNION ALL SELECT ALL * FROM v0 WHERE ((((NOT (CAST(v0.c0 AS NUMERIC)))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((v0.c2)%(((v0.c1)IS(v0.c1))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((v0.c2)%(((v0.c1)IS(v0.c1))))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((v0.c2)%(((v0.c1)IS(v0.c1))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL v0.c1, rt1.c0, v0.c0, rt1.c1, rt1.c2, rt1.c4, v0.c2, rt1.c3 FROM v0, rt1 GROUP BY v0.c1, rt1.c0, v0.c0, rt1.c1, rt1.c2, rt1.c4, v0.c2, rt1.c3;
SELECT v0.c1, rt1.c0, v0.c0, rt1.c1, rt1.c2, rt1.c4, v0.c2, rt1.c3 FROM v0, rt1 WHERE (((LIKELIHOOD(rt1.c0, 0.7134676848694217))!=(TYPEOF(rt1.c1)))) GROUP BY v0.c1, rt1.c0, v0.c0, rt1.c1, rt1.c2, rt1.c4, v0.c2, rt1.c3 UNION SELECT ALL v0.c1, rt1.c0, v0.c0, rt1.c1, rt1.c2, rt1.c4, v0.c2, rt1.c3 FROM v0, rt1 WHERE ((NOT (((LIKELIHOOD(rt1.c0, 0.7134676848694217))!=(TYPEOF(rt1.c1)))))) GROUP BY v0.c1, rt1.c0, v0.c0, rt1.c1, rt1.c2, rt1.c4, v0.c2, rt1.c3 UNION SELECT ALL v0.c1, rt1.c0, v0.c0, rt1.c1, rt1.c2, rt1.c4, v0.c2, rt1.c3 FROM v0, rt1 WHERE (((((LIKELIHOOD(rt1.c0, 0.7134676848694217))!=(TYPEOF(rt1.c1)))) ISNULL)) GROUP BY v0.c1, rt1.c0, v0.c0, rt1.c1, rt1.c2, rt1.c4, v0.c2, rt1.c3;
SELECT ALL v0.c1, rt1.c0, v0.c0, rt1.c1, rt1.c2, rt1.c4, v0.c2, rt1.c3 FROM v0, rt1 GROUP BY v0.c1, rt1.c0, v0.c0, rt1.c1, rt1.c2, rt1.c4, v0.c2, rt1.c3;
SELECT ALL rt1.c4, v0.c0, v0.c1 FROM rt1, rt0, v0 GROUP BY rt1.c4, v0.c0, v0.c1;
SELECT rt1.c4, v0.c0, v0.c1 FROM rt1, rt0, v0 GROUP BY rt1.c4, v0.c0, v0.c1 HAVING (COUNT(rt1.c0) IN (((rt0.c3) NOT BETWEEN (MIN(COUNT(rt1.c1))) AND (rt1.c0)), SUM(COUNT(COUNT(rt1.c2))))) UNION ALL SELECT rt1.c4, v0.c0, v0.c1 FROM rt1, rt0, v0 GROUP BY rt1.c4, v0.c0, v0.c1 HAVING (NOT ((COUNT(rt1.c0) IN (((rt0.c3) NOT BETWEEN (MIN(COUNT(rt1.c1))) AND (rt1.c0)), SUM(COUNT(COUNT(rt1.c2))))))) UNION ALL SELECT ALL rt1.c4, v0.c0, v0.c1 FROM rt1, rt0, v0 GROUP BY rt1.c4, v0.c0, v0.c1 HAVING (((COUNT(rt1.c0) IN (((rt0.c3) NOT BETWEEN (MIN(COUNT(rt1.c1))) AND (rt1.c0)), SUM(COUNT(COUNT(rt1.c2)))))) ISNULL);
SELECT ALL * FROM rt0 INNER JOIN v0 ON (~ (COALESCE(DISTINCT rt0.c1, rt0.c1)));
SELECT * FROM rt0 INNER JOIN v0 ON (~ (COALESCE(DISTINCT rt0.c1, rt0.c1))) WHERE (((((~ (rt0.c1))))>((((v0.c2) NOT BETWEEN (NULL) AND (v0.c1)))))) UNION ALL SELECT ALL * FROM rt0 INNER JOIN v0 ON (~ (COALESCE(DISTINCT rt0.c1, rt0.c1))) WHERE ((NOT (((((~ (rt0.c1))))>((((v0.c2) NOT BETWEEN (NULL) AND (v0.c1)))))))) UNION ALL SELECT * FROM rt0 INNER JOIN v0 ON (~ (COALESCE(DISTINCT rt0.c1, rt0.c1))) WHERE (((((((~ (rt0.c1))))>((((v0.c2) NOT BETWEEN (NULL) AND (v0.c1)))))) ISNULL));
SELECT ALL * FROM rt0 INNER JOIN v0 ON (~ (COALESCE(DISTINCT rt0.c1, rt0.c1)));
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (CASE CASE WHEN rt1.c0 THEN rt1.c4 ELSE rt1.c0 END  WHEN (- (rt1.c4)) THEN CASE WHEN rt1.c2 THEN rt1.c4 WHEN rt1.c3 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c4 ELSE rt1.c2 END WHEN CASE rt1.c2  WHEN x'' THEN rt1.c2 WHEN 0X39f64dc6 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c3 END THEN ((rt1.c4) NOT BETWEEN (rt1.c4) AND (rt1.c0)) WHEN CAST(rt1.c0 AS REAL) THEN rt1.c2 COLLATE NOCASE END) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (CASE CASE WHEN rt1.c0 THEN rt1.c4 ELSE rt1.c0 END  WHEN (- (rt1.c4)) THEN CASE WHEN rt1.c2 THEN rt1.c4 WHEN rt1.c3 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c4 ELSE rt1.c2 END WHEN CASE rt1.c2  WHEN x'' THEN rt1.c2 WHEN 0x39f64dc6 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c3 END THEN ((rt1.c4) NOT BETWEEN (rt1.c4) AND (rt1.c0)) WHEN CAST(rt1.c0 AS REAL) THEN rt1.c2 COLLATE NOCASE END))) UNION SELECT DISTINCT * FROM rt1 WHERE (((CASE CASE WHEN rt1.c0 THEN rt1.c4 ELSE rt1.c0 END  WHEN (- (rt1.c4)) THEN CASE WHEN rt1.c2 THEN rt1.c4 WHEN rt1.c3 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c4 ELSE rt1.c2 END WHEN CASE rt1.c2  WHEN x'' THEN rt1.c2 WHEN 0X39f64dc6 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c3 END THEN ((rt1.c4) NOT BETWEEN (rt1.c4) AND (rt1.c0)) WHEN CAST(rt1.c0 AS REAL) THEN rt1.c2 COLLATE NOCASE END) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL rt1.c2, v0.c1, v0.c0, rt1.c1 FROM v0 RIGHT OUTER JOIN rt1 ON CAST((+ (rt1.c2)) AS TEXT) GROUP BY rt1.c2, v0.c1, v0.c0, rt1.c1;
SELECT ALL rt1.c2, v0.c1, v0.c0, rt1.c1 FROM v0 RIGHT OUTER JOIN rt1 ON CAST((+ (rt1.c2)) AS TEXT) WHERE (CASE WHEN (((v0.c2))=((rt1.c0))) THEN CASE WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c4 THEN v0.c2 END ELSE CASE WHEN v0.c0 THEN v0.c1 ELSE v0.c0 END END) GROUP BY rt1.c2, v0.c1, v0.c0, rt1.c1 UNION SELECT ALL rt1.c2, v0.c1, v0.c0, rt1.c1 FROM v0 RIGHT OUTER JOIN rt1 ON CAST((+ (rt1.c2)) AS TEXT) WHERE ((NOT (CASE WHEN (((v0.c2))=((rt1.c0))) THEN CASE WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c4 THEN v0.c2 END ELSE CASE WHEN v0.c0 THEN v0.c1 ELSE v0.c0 END END))) GROUP BY rt1.c2, v0.c1, v0.c0, rt1.c1 UNION SELECT rt1.c2, v0.c1, v0.c0, rt1.c1 FROM v0 RIGHT OUTER JOIN rt1 ON CAST((+ (rt1.c2)) AS TEXT) WHERE (((CASE WHEN (((v0.c2))=((rt1.c0))) THEN CASE WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c4 THEN v0.c2 END ELSE CASE WHEN v0.c0 THEN v0.c1 ELSE v0.c0 END END) ISNULL)) GROUP BY rt1.c2, v0.c1, v0.c0, rt1.c1;
SELECT ALL rt1.c2, v0.c1, v0.c0, rt1.c1 FROM v0 RIGHT OUTER JOIN rt1 ON CAST((+ (rt1.c2)) AS TEXT) GROUP BY rt1.c2, v0.c1, v0.c0, rt1.c1;
SELECT ALL rt1.c1, rt0.c4, rt0.c2 FROM rt1 RIGHT OUTER JOIN rt0 ON ((((rt0.c4) IS TRUE)) ISNULL) FULL OUTER JOIN v0 ON CAST(CASE WHEN rt0.c4 THEN v0.c1 END AS REAL) GROUP BY rt1.c1, rt0.c4, rt0.c2;
SELECT ALL rt1.c1, rt0.c4, rt0.c2 FROM rt1 RIGHT OUTER JOIN rt0 ON ((((rt0.c4) IS TRUE)) ISNULL) FULL OUTER JOIN v0 ON CAST(CASE WHEN rt0.c4 THEN v0.c1 END AS REAL) GROUP BY rt1.c1, rt0.c4, rt0.c2 HAVING ((((((v0.c2) NOT BETWEEN (MAX(SUM(rt1.c0))) AND (NULL)))OR(((rt1.c4) ISNULL))))AND(CASE GROUP_CONCAT(v0.c2)  WHEN SUM(rt1.c4) THEN rt1.c1 ELSE COUNT(rt1.c0) END)) UNION ALL SELECT rt1.c1, rt0.c4, rt0.c2 FROM rt1 RIGHT OUTER JOIN rt0 ON ((((rt0.c4) IS TRUE)) ISNULL) FULL OUTER JOIN v0 ON CAST(CASE WHEN rt0.c4 THEN v0.c1 END AS REAL) GROUP BY rt1.c1, rt0.c4, rt0.c2 HAVING (NOT (((((((v0.c2) NOT BETWEEN (MAX(SUM(rt1.c0))) AND (NULL)))OR(((rt1.c4) ISNULL))))AND(CASE GROUP_CONCAT(v0.c2)  WHEN SUM(rt1.c4) THEN rt1.c1 ELSE COUNT(rt1.c0) END)))) UNION ALL SELECT ALL rt1.c1, rt0.c4, rt0.c2 FROM rt1 RIGHT OUTER JOIN rt0 ON ((((rt0.c4) IS TRUE)) ISNULL) FULL OUTER JOIN v0 ON CAST(CASE WHEN rt0.c4 THEN v0.c1 END AS REAL) GROUP BY rt1.c1, rt0.c4, rt0.c2 HAVING ((((((((v0.c2) NOT BETWEEN (MAX(SUM(rt1.c0))) AND (NULL)))OR(((rt1.c4) ISNULL))))AND(CASE GROUP_CONCAT(v0.c2)  WHEN SUM(rt1.c4) THEN rt1.c1 ELSE COUNT(rt1.c0) END))) ISNULL);
SELECT * FROM v0, rt1;
SELECT ALL * FROM v0, rt1 WHERE (CASE (NOT (rt1.c3))  WHEN (((v0.c2)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c0))) THEN CASE WHEN rt1.c4 THEN v0.c1 WHEN v0.c2 THEN rt1.c1 WHEN rt1.c2 THEN v0.c0 ELSE rt1.c4 END END) UNION ALL SELECT ALL * FROM v0, rt1 WHERE ((NOT (CASE (NOT (rt1.c3))  WHEN (((v0.c2)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c0))) THEN CASE WHEN rt1.c4 THEN v0.c1 WHEN v0.c2 THEN rt1.c1 WHEN rt1.c2 THEN v0.c0 ELSE rt1.c4 END END))) UNION ALL SELECT * FROM v0, rt1 WHERE (((CASE (NOT (rt1.c3))  WHEN (((v0.c2)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c0))) THEN CASE WHEN rt1.c4 THEN v0.c1 WHEN v0.c2 THEN rt1.c1 WHEN rt1.c2 THEN v0.c0 ELSE rt1.c4 END END) ISNULL));
SELECT * FROM v0, rt1;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((((v0.c1)>>(v0.c0)))>(CASE x'7621'  WHEN v0.c1 THEN '1.nwa' ELSE v0.c0 END))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((v0.c1)>>(v0.c0)))>(CASE x'7621'  WHEN v0.c1 THEN '1.nwa' ELSE v0.c0 END))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((v0.c1)>>(v0.c0)))>(CASE x'7621'  WHEN v0.c1 THEN '1.nwa' ELSE v0.c0 END))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL rt0.c3, rt0.c1, rt0.c2 FROM v0, rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2;
SELECT rt0.c3, rt0.c1, rt0.c2 FROM v0, rt0 WHERE (json_type(v0.c0) COLLATE RTRIM) GROUP BY rt0.c3, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c3, rt0.c1, rt0.c2 FROM v0, rt0 WHERE ((NOT (json_type(v0.c0) COLLATE RTRIM))) GROUP BY rt0.c3, rt0.c1, rt0.c2 UNION SELECT rt0.c3, rt0.c1, rt0.c2 FROM v0, rt0 WHERE (((json_type(v0.c0) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c3, rt0.c1, rt0.c2;
SELECT ALL rt0.c3, rt0.c1, rt0.c2 FROM v0, rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0, rt1, v0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0, rt1, v0 GROUP BY rt0.c0, rt0.c2 HAVING (((COUNT(SUM(MIN(TOTAL(rt1.c2)))))) NOT BETWEEN ((SUM(COUNT(*)))) AND ((((rt0.c3)>>(rt1.c2))))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0, rt1, v0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT ((((COUNT(SUM(MIN(TOTAL(rt1.c2)))))) NOT BETWEEN ((SUM(COUNT(*)))) AND ((((rt0.c3)>>(rt1.c2))))))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0, rt1, v0 GROUP BY rt0.c0, rt0.c2 HAVING (((((COUNT(SUM(MIN(TOTAL(rt1.c2)))))) NOT BETWEEN ((SUM(COUNT(*)))) AND ((((rt0.c3)>>(rt1.c2)))))) ISNULL);
SELECT * FROM rt1, v0;
SELECT * FROM rt1, v0 WHERE (CAST(v0.c1 AS REAL) COLLATE RTRIM) UNION ALL SELECT * FROM rt1, v0 WHERE ((NOT (CAST(v0.c1 AS REAL) COLLATE RTRIM))) UNION ALL SELECT * FROM rt1, v0 WHERE (((CAST(v0.c1 AS REAL) COLLATE RTRIM) ISNULL));
SELECT * FROM rt1, v0;
SELECT DISTINCT * FROM rt0, rt1;
SELECT DISTINCT * FROM rt0, rt1 WHERE ('㢖P') UNION SELECT DISTINCT * FROM rt0, rt1 WHERE ((NOT ('㢖P'))) UNION SELECT DISTINCT * FROM rt0, rt1 WHERE ((('㢖P') ISNULL));
SELECT DISTINCT * FROM rt0, rt1;
SELECT ALL rt0.c3, v0.c1, rt0.c4 FROM rt0 LEFT OUTER JOIN v0 ON ((CASE WHEN v0.c2 THEN v0.c1 ELSE v0.c0 END) NOT BETWEEN ('-1e500') AND (-1750999770)) GROUP BY rt0.c3, v0.c1, rt0.c4;
SELECT rt0.c3, v0.c1, rt0.c4 FROM rt0 LEFT OUTER JOIN v0 ON ((CASE WHEN v0.c2 THEN v0.c1 ELSE v0.c0 END) NOT BETWEEN ('-1e500') AND (-1750999770)) WHERE (((((v0.c0)|(v0.c2))) NOTNULL)) GROUP BY rt0.c3, v0.c1, rt0.c4 UNION SELECT ALL rt0.c3, v0.c1, rt0.c4 FROM rt0 NOT INDEXED LEFT OUTER JOIN v0 ON ((CASE WHEN v0.c2 THEN v0.c1 ELSE v0.c0 END) NOT BETWEEN ('-1e500') AND (-1750999770)) WHERE ((NOT (((((v0.c0)|(v0.c2))) NOTNULL)))) GROUP BY rt0.c3, v0.c1, rt0.c4 UNION SELECT rt0.c3, v0.c1, rt0.c4 FROM rt0 LEFT OUTER JOIN v0 ON ((CASE WHEN v0.c2 THEN v0.c1 ELSE v0.c0 END) NOT BETWEEN ('-1e500') AND (-1750999770)) WHERE (((((((v0.c0)|(v0.c2))) NOTNULL)) ISNULL)) GROUP BY rt0.c3, v0.c1, rt0.c4;
SELECT ALL rt0.c3, v0.c1, rt0.c4 FROM rt0 LEFT OUTER JOIN v0 ON ((CASE WHEN v0.c2 THEN v0.c1 ELSE v0.c0 END) NOT BETWEEN ('-1e500') AND (-1750999770)) GROUP BY rt0.c3, v0.c1, rt0.c4;
SELECT rt0.c0, v0.c2, v0.c1, rt0.c3 FROM v0 NATURAL JOIN rt0 GROUP BY rt0.c0, v0.c2, v0.c1, rt0.c3;
SELECT rt0.c0, v0.c2, v0.c1, rt0.c3 FROM v0 NATURAL JOIN rt0 GROUP BY rt0.c0, v0.c2, v0.c1, rt0.c3 HAVING (+ (CASE TOTAL(SUM(v0.c1))  WHEN 0.8142706639921795 THEN v0.c0 ELSE v0.c1 END)) UNION ALL SELECT ALL rt0.c0, v0.c2, v0.c1, rt0.c3 FROM v0 NATURAL JOIN rt0 GROUP BY rt0.c0, v0.c2, v0.c1, rt0.c3 HAVING (NOT ((+ (CASE TOTAL(SUM(v0.c1))  WHEN 0.8142706639921795 THEN v0.c0 ELSE v0.c1 END)))) UNION ALL SELECT rt0.c0, v0.c2, v0.c1, rt0.c3 FROM v0 NATURAL JOIN rt0 GROUP BY rt0.c0, v0.c2, v0.c1, rt0.c3 HAVING (((+ (CASE TOTAL(SUM(v0.c1))  WHEN 0.8142706639921795 THEN v0.c0 ELSE v0.c1 END))) ISNULL);
SELECT ALL MIN(((((NULL)OR((rt0.c0 IN (rt0.c1, v0.c0)))))OR(((((rt0.c0)OR(rt0.c4)))AND(v0.c2))))) FROM rt0, v0;
SELECT * FROM v0, rt0;
SELECT * FROM v0, rt0 WHERE (((((rt0.c0)AND(v0.c0))) NOT BETWEEN (v0.c2 COLLATE BINARY) AND (CASE rt0.c3  WHEN rt0.c2 THEN v0.c1 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c2 END))) UNION ALL SELECT * FROM v0, rt0 WHERE ((NOT (((((rt0.c0)AND(v0.c0))) NOT BETWEEN (v0.c2 COLLATE BINARY) AND (CASE rt0.c3  WHEN rt0.c2 THEN v0.c1 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c2 END))))) UNION ALL SELECT * FROM v0, rt0 WHERE (((((((rt0.c0)AND(v0.c0))) NOT BETWEEN (v0.c2 COLLATE BINARY) AND (CASE rt0.c3  WHEN rt0.c2 THEN v0.c1 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c2 END))) ISNULL));
SELECT * FROM v0, rt0;
SELECT DISTINCT rt1.c1, rt1.c4, rt1.c0 FROM v0 FULL OUTER JOIN rt1 ON ((((rt1.c0) NOTNULL)) NOTNULL);
SELECT DISTINCT rt1.c1, rt1.c4, rt1.c0 FROM v0 FULL OUTER JOIN rt1 ON ((((rt1.c0) NOTNULL)) NOTNULL) WHERE (((0.1930225356831512 IN ()) IN ())) UNION SELECT DISTINCT rt1.c1, rt1.c4, rt1.c0 FROM v0 FULL OUTER JOIN rt1 ON ((((rt1.c0) NOTNULL)) NOTNULL) WHERE ((NOT (((0.1930225356831512 IN ()) IN ())))) UNION SELECT DISTINCT rt1.c1, rt1.c4, rt1.c0 FROM v0 FULL OUTER JOIN rt1 ON ((((rt1.c0) NOTNULL)) NOTNULL) WHERE (((((0.1930225356831512 IN ()) IN ())) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c4, rt1.c0 FROM v0 FULL OUTER JOIN rt1 ON ((((rt1.c0) NOTNULL)) NOTNULL);
SELECT rt1.c0, rt1.c1, rt1.c4, rt0.c1 FROM rt0 INNER JOIN v0 ON (((((+ (rt1.c2)))AND(((rt0.c0) IS FALSE))))OR(((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt1.c4)))) LEFT OUTER JOIN rt1 ON 0.1984072196720975 GROUP BY rt1.c0, rt1.c1, rt1.c4, rt0.c1;
SELECT rt1.c0, rt1.c1, rt1.c4, rt0.c1 FROM rt0 INNER JOIN v0 ON (((((+ (rt1.c2)))AND(((rt0.c0) IS FALSE))))OR(((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt1.c4)))) LEFT OUTER JOIN rt1 ON 0.1984072196720975 WHERE (rt1.c3) GROUP BY rt1.c0, rt1.c1, rt1.c4, rt0.c1 UNION SELECT ALL rt1.c0, rt1.c1, rt1.c4, rt0.c1 FROM rt0 INNER JOIN v0 ON (((((+ (rt1.c2)))AND(((rt0.c0) IS FALSE))))OR(((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt1.c4)))) LEFT OUTER JOIN rt1 ON 0.1984072196720975 WHERE ((NOT (rt1.c3))) GROUP BY rt1.c0, rt1.c1, rt1.c4, rt0.c1 UNION SELECT ALL rt1.c0, rt1.c1, rt1.c4, rt0.c1 FROM rt0 INNER JOIN v0 ON (((((+ (rt1.c2)))AND(((rt0.c0) IS FALSE))))OR(((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt1.c4)))) LEFT OUTER JOIN rt1 ON 0.1984072196720975 WHERE (((rt1.c3) ISNULL)) GROUP BY rt1.c0, rt1.c1, rt1.c4, rt0.c1;
SELECT rt1.c0, rt1.c1, rt1.c4, rt0.c1 FROM rt0 INNER JOIN v0 ON (((((+ (rt1.c2)))AND(((rt0.c0) IS FALSE))))OR(((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt1.c4)))) LEFT OUTER JOIN rt1 ON 0.1984072196720975 GROUP BY rt1.c0, rt1.c1, rt1.c4, rt0.c1;
SELECT rt1.c0, rt0.c1, rt0.c2, rt1.c4, rt1.c3 FROM rt0 CROSS JOIN rt1 ON -5.33107369E8 GROUP BY rt1.c0, rt0.c1, rt0.c2, rt1.c4, rt1.c3;
SELECT rt1.c0, rt0.c1, rt0.c2, rt1.c4, rt1.c3 FROM rt0 CROSS JOIN rt1 ON -5.33107369E8 GROUP BY rt1.c0, rt0.c1, rt0.c2, rt1.c4, rt1.c3 HAVING ((AVG(0.7008873756704092)) IS FALSE) UNION ALL SELECT rt1.c0, rt0.c1, rt0.c2, rt1.c4, rt1.c3 FROM rt0 CROSS JOIN rt1 ON -5.33107369E8 GROUP BY rt1.c0, rt0.c1, rt0.c2, rt1.c4, rt1.c3 HAVING (NOT (((AVG(0.7008873756704092)) IS FALSE))) UNION ALL SELECT rt1.c0, rt0.c1, rt0.c2, rt1.c4, rt1.c3 FROM rt0 CROSS JOIN rt1 ON -5.33107369E8 GROUP BY rt1.c0, rt0.c1, rt0.c2, rt1.c4, rt1.c3 HAVING ((((AVG(0.7008873756704092)) IS FALSE)) ISNULL);
SELECT rt1.c0, rt0.c1, rt0.c2, rt1.c4, rt1.c3 FROM rt0 CROSS JOIN rt1 ON -5.33107369E8 GROUP BY rt1.c0, rt0.c1, rt0.c2, rt1.c4, rt1.c3;
SELECT rt1.c0, rt0.c1, rt0.c2, rt1.c4, rt1.c3 FROM rt0 CROSS JOIN rt1 ON -5.33107369E8 GROUP BY rt1.c0, rt0.c1, rt0.c2, rt1.c4, rt1.c3 HAVING ((AVG(0.7008873756704092)) IS FALSE) UNION ALL SELECT rt1.c0, rt0.c1, rt0.c2, rt1.c4, rt1.c3 FROM rt0 CROSS JOIN rt1 ON -5.33107369E8 GROUP BY rt1.c0, rt0.c1, rt0.c2, rt1.c4, rt1.c3 HAVING (NOT (((AVG(0.7008873756704092)) IS FALSE))) UNION ALL SELECT rt1.c0, rt0.c1, rt0.c2, rt1.c4, rt1.c3 FROM rt0 CROSS JOIN rt1 ON -5.33107369E8 GROUP BY rt1.c0, rt0.c1, rt0.c2, rt1.c4, rt1.c3 HAVING ((((AVG(0.7008873756704092)) IS FALSE)) ISNULL);
SELECT rt1.c0, rt0.c1, rt0.c2, rt1.c4, rt1.c3 FROM rt0 CROSS JOIN rt1 ON -5.33107369E8 GROUP BY rt1.c0, rt0.c1, rt0.c2, rt1.c4, rt1.c3;
SELECT SUM(((((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1)))AND(CASE WHEN 0.21988872057320097 THEN rt1.c0 END))) FROM rt1;
SELECT ALL rt0.c2, rt1.c3, rt1.c0, rt1.c1, rt0.c4, rt0.c0 FROM rt0, rt1;
SELECT ALL rt0.c2, rt1.c3, rt1.c0, rt1.c1, rt0.c4, rt0.c0 FROM rt0, rt1 WHERE (rt1.c4 COLLATE RTRIM) UNION ALL SELECT rt0.c2, rt1.c3, rt1.c0, rt1.c1, rt0.c4, rt0.c0 FROM rt0, rt1 WHERE ((NOT (rt1.c4 COLLATE RTRIM))) UNION ALL SELECT ALL rt0.c2, rt1.c3, rt1.c0, rt1.c1, rt0.c4, rt0.c0 FROM rt0, rt1 WHERE (((rt1.c4 COLLATE RTRIM) ISNULL));
SELECT ALL rt0.c2, rt1.c3, rt1.c0, rt1.c1, rt0.c4, rt0.c0 FROM rt0, rt1;
SELECT DISTINCT rt1.c2, rt0.c0, rt1.c4, rt0.c2, rt1.c1 FROM rt1 LEFT OUTER JOIN rt0 ON rt0.c3;
SELECT DISTINCT rt1.c2, rt0.c0, rt1.c4, rt0.c2, rt1.c1 FROM rt1 LEFT OUTER JOIN rt0 ON rt0.c3 WHERE ((~ (((NULL)%(rt0.c2))))) UNION SELECT DISTINCT rt1.c2, rt0.c0, rt1.c4, rt0.c2, rt1.c1 FROM rt1 LEFT OUTER JOIN rt0 ON rt0.c3 WHERE ((NOT ((~ (((NULL)%(rt0.c2))))))) UNION SELECT DISTINCT rt1.c2, rt0.c0, rt1.c4, rt0.c2, rt1.c1 FROM rt1 LEFT OUTER JOIN rt0 ON rt0.c3 WHERE ((((~ (((NULL)%(rt0.c2))))) ISNULL));
SELECT DISTINCT rt1.c2, rt0.c0, rt1.c4, rt0.c2, rt1.c1 FROM rt1 LEFT OUTER JOIN rt0 ON rt0.c3;
SELECT rt1.c3, rt1.c2, rt1.c1 FROM v0 FULL OUTER JOIN rt1 ON (+ (rt0.c0)) FULL OUTER JOIN rt0 ON (((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt0.c2)) IN ()) GROUP BY rt1.c3, rt1.c2, rt1.c1;
SELECT rt0.c0, rt0.c2, v0.c2, v0.c1, v0.c0, rt0.c1, rt0.c3 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2, v0.c2, v0.c1, v0.c0, rt0.c1, rt0.c3;
SELECT ALL rt0.c0, rt0.c2, v0.c2, v0.c1, v0.c0, rt0.c1, rt0.c3 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2, v0.c2, v0.c1, v0.c0, rt0.c1, rt0.c3 HAVING CASE WHEN TOTAL(v0.c0) THEN MAX(TOTAL(rt0.c4)) END UNION ALL SELECT ALL rt0.c0, rt0.c2, v0.c2, v0.c1, v0.c0, rt0.c1, rt0.c3 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2, v0.c2, v0.c1, v0.c0, rt0.c1, rt0.c3 HAVING (NOT (CASE WHEN TOTAL(v0.c0) THEN MAX(TOTAL(rt0.c4)) END)) UNION ALL SELECT rt0.c0, rt0.c2, v0.c2, v0.c1, v0.c0, rt0.c1, rt0.c3 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2, v0.c2, v0.c1, v0.c0, rt0.c1, rt0.c3 HAVING ((CASE WHEN TOTAL(v0.c0) THEN MAX(TOTAL(rt0.c4)) END) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c1, rt0.c3 FROM rt0;
SELECT rt0.c2, rt0.c0, rt0.c1, rt0.c3 FROM rt0 WHERE (((CAST(rt0.c3 AS INTEGER)) NOT NULL)) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1, rt0.c3 FROM rt0 WHERE ((NOT (((CAST(rt0.c3 AS INTEGER)) NOT NULL)))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1, rt0.c3 FROM rt0 WHERE (((((CAST(rt0.c3 AS INTEGER)) NOT NULL)) ISNULL));
SELECT ALL rt0.c2, rt0.c0, rt0.c1, rt0.c3 FROM rt0;
SELECT DISTINCT * FROM rt0, rt1;
SELECT DISTINCT * FROM rt0, rt1 WHERE ((CAST(rt1.c3 AS INTEGER) IN ())) UNION SELECT DISTINCT * FROM rt0, rt1 WHERE ((NOT ((CAST(rt1.c3 AS INTEGER) IN ())))) UNION SELECT DISTINCT * FROM rt0, rt1 WHERE ((((CAST(rt1.c3 AS INTEGER) IN ())) ISNULL));
SELECT DISTINCT * FROM rt0, rt1;
SELECT rt0.c4, v0.c0 FROM v0, rt0 GROUP BY rt0.c4, v0.c0;
SELECT ALL rt0.c4, v0.c0 FROM v0, rt0 WHERE (((ABS(rt0.c0)) BETWEEN (((v0.c2) IS TRUE)) AND ((v0.c2 IN ())))) GROUP BY rt0.c4, v0.c0 UNION SELECT rt0.c4, v0.c0 FROM v0, rt0 WHERE ((NOT (((ABS(rt0.c0)) BETWEEN (((v0.c2) IS TRUE)) AND ((v0.c2 IN ())))))) GROUP BY rt0.c4, v0.c0 UNION SELECT ALL rt0.c4, v0.c0 FROM v0, rt0 WHERE (((((ABS(rt0.c0)) BETWEEN (((v0.c2) IS TRUE)) AND ((v0.c2 IN ())))) ISNULL)) GROUP BY rt0.c4, v0.c0;
SELECT rt0.c4, v0.c0 FROM v0, rt0 GROUP BY rt0.c4, v0.c0;
SELECT rt0.c4, v0.c2, rt0.c0, rt1.c1, rt0.c1, rt1.c4, v0.c1, rt1.c3, rt0.c2, rt0.c3, v0.c0, rt1.c2, rt1.c0 FROM v0, rt0, rt1 GROUP BY rt0.c4, v0.c2, rt0.c0, rt1.c1, rt0.c1, rt1.c4, v0.c1, rt1.c3, rt0.c2, rt0.c3, v0.c0, rt1.c2, rt1.c0;
SELECT rt0.c4, v0.c2, rt0.c0, rt1.c1, rt0.c1, rt1.c4, v0.c1, rt1.c3, rt0.c2, rt0.c3, v0.c0, rt1.c2, rt1.c0 FROM v0, rt0, rt1 GROUP BY rt0.c4, v0.c2, rt0.c0, rt1.c1, rt0.c1, rt1.c4, v0.c1, rt1.c3, rt0.c2, rt0.c3, v0.c0, rt1.c2, rt1.c0 HAVING MAX(SUM(-1.500817989E9)) COLLATE BINARY UNION ALL SELECT ALL rt0.c4, v0.c2, rt0.c0, rt1.c1, rt0.c1, rt1.c4, v0.c1, rt1.c3, rt0.c2, rt0.c3, v0.c0, rt1.c2, rt1.c0 FROM v0, rt0, rt1 GROUP BY rt0.c4, v0.c2, rt0.c0, rt1.c1, rt0.c1, rt1.c4, v0.c1, rt1.c3, rt0.c2, rt0.c3, v0.c0, rt1.c2, rt1.c0 HAVING (NOT (MAX(SUM(-1.500817989E9)) COLLATE BINARY)) UNION ALL SELECT rt0.c4, v0.c2, rt0.c0, rt1.c1, rt0.c1, rt1.c4, v0.c1, rt1.c3, rt0.c2, rt0.c3, v0.c0, rt1.c2, rt1.c0 FROM v0, rt0, rt1 GROUP BY rt0.c4, v0.c2, rt0.c0, rt1.c1, rt0.c1, rt1.c4, v0.c1, rt1.c3, rt0.c2, rt0.c3, v0.c0, rt1.c2, rt1.c0 HAVING ((MAX(SUM(-1.500817989E9)) COLLATE BINARY) ISNULL);
SELECT ALL * FROM rt1, v0;
SELECT ALL * FROM rt1, v0 WHERE (((('705088526' IN (rt1.c0, rt1.c3))) NOT BETWEEN (CASE NULL  WHEN v0.c1 THEN v0.c0 ELSE rt1.c0 END) AND (CHANGES()))) UNION ALL SELECT ALL * FROM rt1, v0 WHERE ((NOT (((('705088526' IN (rt1.c0, rt1.c3))) NOT BETWEEN (CASE NULL  WHEN v0.c1 THEN v0.c0 ELSE rt1.c0 END) AND (CHANGES()))))) UNION ALL SELECT * FROM rt1, v0 WHERE (((((('705088526' IN (rt1.c0, rt1.c3))) NOT BETWEEN (CASE NULL  WHEN v0.c1 THEN v0.c0 ELSE rt1.c0 END) AND (CHANGES()))) ISNULL));
SELECT ALL * FROM rt1, v0;
SELECT DISTINCT v0.c2, rt1.c1, rt1.c0, rt1.c4, v0.c1, rt1.c2 FROM v0, rt1;
SELECT DISTINCT v0.c2, rt1.c1, rt1.c0, rt1.c4, v0.c1, rt1.c2 FROM v0, rt1 WHERE (((CAST(x'1096' AS INTEGER))<=((NOT (0x39ae8ad1))))) UNION SELECT DISTINCT v0.c2, rt1.c1, rt1.c0, rt1.c4, v0.c1, rt1.c2 FROM v0, rt1 WHERE ((NOT (((CAST(x'1096' AS INTEGER))<=((NOT (0X39ae8ad1))))))) UNION SELECT DISTINCT v0.c2, rt1.c1, rt1.c0, rt1.c4, v0.c1, rt1.c2 FROM v0, rt1 WHERE (((((CAST(x'1096' AS INTEGER))<=((NOT (0x39ae8ad1))))) ISNULL));
SELECT DISTINCT v0.c2, rt1.c1, rt1.c0, rt1.c4, v0.c1, rt1.c2 FROM v0, rt1;
SELECT rt0.c0, rt0.c1, rt0.c3, v0.c2, rt1.c0 FROM v0, rt0 RIGHT OUTER JOIN rt1 ON v0.c2 GROUP BY rt0.c0, rt0.c1, rt0.c3, v0.c2, rt1.c0;
SELECT ALL rt0.c0, rt0.c1, rt0.c3, v0.c2, rt1.c0 FROM v0, rt0 RIGHT OUTER JOIN rt1 ON v0.c2 WHERE (((((v0.c2)LIKE(v0.c2)))>>((rt0.c4 IN ())))) GROUP BY rt0.c0, rt0.c1, rt0.c3, v0.c2, rt1.c0 UNION SELECT rt0.c0, rt0.c1, rt0.c3, v0.c2, rt1.c0 FROM v0, rt0 RIGHT OUTER JOIN rt1 ON v0.c2 WHERE ((NOT (((((v0.c2)LIKE(v0.c2)))>>((rt0.c4 IN ())))))) GROUP BY rt0.c0, rt0.c1, rt0.c3, v0.c2, rt1.c0 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c3, v0.c2, rt1.c0 FROM v0, rt0 RIGHT OUTER JOIN rt1 ON v0.c2 WHERE (((((((v0.c2)LIKE(v0.c2)))>>((rt0.c4 IN ())))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c3, v0.c2, rt1.c0;
SELECT rt0.c0, rt0.c1, rt0.c3, v0.c2, rt1.c0 FROM v0, rt0 RIGHT OUTER JOIN rt1 ON v0.c2 GROUP BY rt0.c0, rt0.c1, rt0.c3, v0.c2, rt1.c0;
SELECT rt1.c4, rt1.c1, v0.c0 FROM rt1, v0 GROUP BY rt1.c4, rt1.c1, v0.c0;
SELECT rt1.c4, rt1.c1, v0.c0 FROM rt1, v0 GROUP BY rt1.c4, rt1.c1, v0.c0 HAVING ((DATETIME(rt1.c1, rt1.c1, COUNT(rt1.c1))) NOT BETWEEN ((rt1.c4 IN ())) AND (((((v0.c2)AND(v0.c0)))AND(COUNT(*))))) UNION ALL SELECT rt1.c4, rt1.c1, v0.c0 FROM rt1, v0 GROUP BY rt1.c4, rt1.c1, v0.c0 HAVING (NOT (((DATETIME(rt1.c1, rt1.c1, COUNT(rt1.c1))) NOT BETWEEN ((rt1.c4 IN ())) AND (((((v0.c2)AND(v0.c0)))AND(COUNT(*))))))) UNION ALL SELECT ALL rt1.c4, rt1.c1, v0.c0 FROM rt1, v0 GROUP BY rt1.c4, rt1.c1, v0.c0 HAVING ((((DATETIME(rt1.c1, rt1.c1, COUNT(rt1.c1))) NOT BETWEEN ((rt1.c4 IN ())) AND (((((v0.c2)AND(v0.c0)))AND(COUNT(*)))))) ISNULL);
SELECT rt1.c4, rt1.c1, v0.c0 FROM rt1, v0 GROUP BY rt1.c4, rt1.c1, v0.c0;
SELECT rt1.c4, rt1.c1, v0.c0 FROM rt1, v0 GROUP BY rt1.c4, rt1.c1, v0.c0 HAVING ((DATETIME(rt1.c1, rt1.c1, COUNT(rt1.c1))) NOT BETWEEN ((rt1.c4 IN ())) AND (((((v0.c2)AND(v0.c0)))AND(COUNT(*))))) UNION ALL SELECT rt1.c4, rt1.c1, v0.c0 FROM rt1, v0 GROUP BY rt1.c4, rt1.c1, v0.c0 HAVING (NOT (((DATETIME(rt1.c1, rt1.c1, COUNT(rt1.c1))) NOT BETWEEN ((rt1.c4 IN ())) AND (((((v0.c2)AND(v0.c0)))AND(COUNT(*))))))) UNION ALL SELECT ALL rt1.c4, rt1.c1, v0.c0 FROM rt1, v0 GROUP BY rt1.c4, rt1.c1, v0.c0 HAVING ((((DATETIME(rt1.c1, rt1.c1, COUNT(rt1.c1))) NOT BETWEEN ((rt1.c4 IN ())) AND (((((v0.c2)AND(v0.c0)))AND(COUNT(*)))))) ISNULL);
SELECT rt1.c4, rt1.c1, v0.c0 FROM rt1, v0 GROUP BY rt1.c4, rt1.c1, v0.c0;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE ((((+ (rt0.c2)))>=(rt0.c4))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((((+ (rt0.c2)))>=(rt0.c4))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((((+ (rt0.c2)))>=(rt0.c4))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c1, v0.c0, rt0.c4, rt0.c3, rt1.c4, rt1.c2, rt1.c1 FROM rt0, rt1, v0;
SELECT DISTINCT rt0.c1, v0.c0, rt0.c4, rt0.c3, rt1.c4, rt1.c2, rt1.c1 FROM rt0, rt1, v0 WHERE (CASE CAST(rt1.c1 AS TEXT)  WHEN ((v0.c1)LIKE(rt1.c4)) THEN CASE WHEN rt0.c4 THEN rt1.c4 ELSE rt0.c3 END WHEN (+ (rt1.c4)) THEN (- (v0.c2)) WHEN ((rt1.c0)+(0.15880202214661399)) THEN CASE rt1.c0  WHEN v0.c0 THEN v0.c2 WHEN rt1.c0 THEN rt0.c2 WHEN rt0.c0 THEN v0.c0 ELSE rt1.c1 END ELSE IFNULL(rt0.c0, rt0.c1) END) UNION SELECT DISTINCT rt0.c1, v0.c0, rt0.c4, rt0.c3, rt1.c4, rt1.c2, rt1.c1 FROM rt0, rt1, v0 WHERE ((NOT (CASE CAST(rt1.c1 AS TEXT)  WHEN ((v0.c1)LIKE(rt1.c4)) THEN CASE WHEN rt0.c4 THEN rt1.c4 ELSE rt0.c3 END WHEN (+ (rt1.c4)) THEN (- (v0.c2)) WHEN ((rt1.c0)+(0.15880202214661399)) THEN CASE rt1.c0  WHEN v0.c0 THEN v0.c2 WHEN rt1.c0 THEN rt0.c2 WHEN rt0.c0 THEN v0.c0 ELSE rt1.c1 END ELSE IFNULL(rt0.c0, rt0.c1) END))) UNION SELECT DISTINCT rt0.c1, v0.c0, rt0.c4, rt0.c3, rt1.c4, rt1.c2, rt1.c1 FROM rt0, rt1, v0 WHERE (((CASE CAST(rt1.c1 AS TEXT)  WHEN ((v0.c1)LIKE(rt1.c4)) THEN CASE WHEN rt0.c4 THEN rt1.c4 ELSE rt0.c3 END WHEN (+ (rt1.c4)) THEN (- (v0.c2)) WHEN ((rt1.c0)+(0.15880202214661399)) THEN CASE rt1.c0  WHEN v0.c0 THEN v0.c2 WHEN rt1.c0 THEN rt0.c2 WHEN rt0.c0 THEN v0.c0 ELSE rt1.c1 END ELSE IFNULL(rt0.c0, rt0.c1) END) ISNULL));
SELECT DISTINCT rt0.c1, v0.c0, rt0.c4, rt0.c3, rt1.c4, rt1.c2, rt1.c1 FROM rt0, rt1, v0;
SELECT ALL rt1.c1, rt1.c4, rt1.c2, rt1.c3 FROM rt1 GROUP BY rt1.c1, rt1.c4, rt1.c2, rt1.c3;
SELECT rt1.c1, rt1.c4, rt1.c2, rt1.c3 FROM rt1 WHERE ((((rt1.c0, rt1.c4, rt1.c0)) NOT BETWEEN (((((rt1.c0))>((rt1.c4))), CAST(rt1.c2 AS INTEGER), CAST(rt1.c0 AS TEXT))) AND ((((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c2)), (rt1.c1 IN ()), CASE rt1.c4  WHEN '~T84㚈ioR?' THEN rt1.c2 END)))) GROUP BY rt1.c1, rt1.c4, rt1.c2, rt1.c3 UNION SELECT rt1.c1, rt1.c4, rt1.c2, rt1.c3 FROM rt1 WHERE ((NOT ((((rt1.c0, rt1.c4, rt1.c0)) NOT BETWEEN (((((rt1.c0))>((rt1.c4))), CAST(rt1.c2 AS INTEGER), CAST(rt1.c0 AS TEXT))) AND ((((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c2)), (rt1.c1 IN ()), CASE rt1.c4  WHEN '~T84㚈ioR?' THEN rt1.c2 END)))))) GROUP BY rt1.c1, rt1.c4, rt1.c2, rt1.c3 UNION SELECT rt1.c1, rt1.c4, rt1.c2, rt1.c3 FROM rt1 WHERE ((((((rt1.c0, rt1.c4, rt1.c0)) NOT BETWEEN (((((rt1.c0))>((rt1.c4))), CAST(rt1.c2 AS INTEGER), CAST(rt1.c0 AS TEXT))) AND ((((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c2)), (rt1.c1 IN ()), CASE rt1.c4  WHEN '~T84㚈ioR?' THEN rt1.c2 END)))) ISNULL)) GROUP BY rt1.c1, rt1.c4, rt1.c2, rt1.c3;
SELECT ALL rt1.c1, rt1.c4, rt1.c2, rt1.c3 FROM rt1 GROUP BY rt1.c1, rt1.c4, rt1.c2, rt1.c3;
SELECT v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1;
SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1 HAVING TOTAL(AVG(v0.c2)) UNION ALL SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1 HAVING (NOT (TOTAL(AVG(v0.c2)))) UNION ALL SELECT v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1 HAVING ((TOTAL(AVG(v0.c2))) ISNULL);
SELECT * FROM rt1, rt0;
SELECT ALL * FROM rt1, rt0 WHERE (((rt1.c0) BETWEEN (rt1.c4) AND (rt0.c2)) COLLATE NOCASE) UNION ALL SELECT ALL * FROM rt1, rt0 WHERE ((NOT (((rt1.c0) BETWEEN (rt1.c4) AND (rt0.c2)) COLLATE NOCASE))) UNION ALL SELECT ALL * FROM rt1, rt0 WHERE (((((rt1.c0) BETWEEN (rt1.c4) AND (rt0.c2)) COLLATE NOCASE) ISNULL));
SELECT * FROM rt1, rt0;
SELECT DISTINCT v0.c1, rt1.c2 FROM rt1 FULL OUTER JOIN v0 ON ((((((((v0.c2)OR(v0.c1)))AND(rt1.c0)))OR(v0.c1)))AND(rt1.c4)) COLLATE RTRIM;
SELECT DISTINCT v0.c1, rt1.c2 FROM rt1 FULL OUTER JOIN v0 ON ((((((((v0.c2)OR(v0.c1)))AND(rt1.c0)))OR(v0.c1)))AND(rt1.c4)) COLLATE RTRIM WHERE ((((v0.c0)) BETWEEN ((((v0.c2)<(rt1.c1)))) AND ((TRIM(DISTINCT rt1.c0))))) UNION SELECT DISTINCT v0.c1, rt1.c2 FROM rt1 FULL OUTER JOIN v0 ON ((((((((v0.c2)OR(v0.c1)))AND(rt1.c0)))OR(v0.c1)))AND(rt1.c4)) COLLATE RTRIM WHERE ((NOT ((((v0.c0)) BETWEEN ((((v0.c2)<(rt1.c1)))) AND ((TRIM(DISTINCT rt1.c0))))))) UNION SELECT DISTINCT v0.c1, rt1.c2 FROM rt1 FULL OUTER JOIN v0 ON ((((((((v0.c2)OR(v0.c1)))AND(rt1.c0)))OR(v0.c1)))AND(rt1.c4)) COLLATE RTRIM WHERE ((((((v0.c0)) BETWEEN ((((v0.c2)<(rt1.c1)))) AND ((TRIM(DISTINCT rt1.c0))))) ISNULL));
SELECT DISTINCT v0.c1, rt1.c2 FROM rt1 FULL OUTER JOIN v0 ON ((((((((v0.c2)OR(v0.c1)))AND(rt1.c0)))OR(v0.c1)))AND(rt1.c4)) COLLATE RTRIM;
SELECT ALL rt1.c1, rt1.c2, v0.c2, rt1.c3, rt1.c4 FROM v0, rt1 GROUP BY rt1.c1, rt1.c2, v0.c2, rt1.c3, rt1.c4;
SELECT ALL rt1.c1, rt1.c2, v0.c2, rt1.c3, rt1.c4 FROM v0, rt1 WHERE (CAST(rt1.c3 COLLATE NOCASE AS NUMERIC)) GROUP BY rt1.c1, rt1.c2, v0.c2, rt1.c3, rt1.c4 UNION SELECT ALL rt1.c1, rt1.c2, v0.c2, rt1.c3, rt1.c4 FROM v0, rt1 WHERE ((NOT (CAST(rt1.c3 COLLATE NOCASE AS NUMERIC)))) GROUP BY rt1.c1, rt1.c2, v0.c2, rt1.c3, rt1.c4 UNION SELECT rt1.c1, rt1.c2, v0.c2, rt1.c3, rt1.c4 FROM v0, rt1 WHERE (((CAST(rt1.c3 COLLATE NOCASE AS NUMERIC)) ISNULL)) GROUP BY rt1.c1, rt1.c2, v0.c2, rt1.c3, rt1.c4;
SELECT ALL rt1.c1, rt1.c2, v0.c2, rt1.c3, rt1.c4 FROM v0, rt1 GROUP BY rt1.c1, rt1.c2, v0.c2, rt1.c3, rt1.c4;
SELECT ALL rt1.c1, rt1.c0, v0.c0, v0.c1, rt1.c4 FROM rt1, v0 GROUP BY rt1.c1, rt1.c0, v0.c0, v0.c1, rt1.c4;
SELECT ALL rt1.c1, rt1.c0, v0.c0, v0.c1, rt1.c4 FROM rt1, v0 GROUP BY rt1.c1, rt1.c0, v0.c0, v0.c1, rt1.c4 HAVING ((((v0.c2) IS TRUE))IS(COUNT(rt1.c1))) UNION ALL SELECT ALL rt1.c1, rt1.c0, v0.c0, v0.c1, rt1.c4 FROM rt1, v0 GROUP BY rt1.c1, rt1.c0, v0.c0, v0.c1, rt1.c4 HAVING (NOT (((((v0.c2) IS TRUE))IS(COUNT(rt1.c1))))) UNION ALL SELECT ALL rt1.c1, rt1.c0, v0.c0, v0.c1, rt1.c4 FROM rt1, v0 GROUP BY rt1.c1, rt1.c0, v0.c0, v0.c1, rt1.c4 HAVING ((((((v0.c2) IS TRUE))IS(COUNT(rt1.c1)))) ISNULL);
SELECT ALL rt1.c1, rt1.c0, v0.c0, v0.c1, rt1.c4 FROM rt1, v0 GROUP BY rt1.c1, rt1.c0, v0.c0, v0.c1, rt1.c4;
SELECT ALL rt1.c1, rt1.c0, v0.c0, v0.c1, rt1.c4 FROM rt1, v0 GROUP BY rt1.c1, rt1.c0, v0.c0, v0.c1, rt1.c4 HAVING ((((v0.c2) IS TRUE))IS(COUNT(rt1.c1))) UNION ALL SELECT ALL rt1.c1, rt1.c0, v0.c0, v0.c1, rt1.c4 FROM rt1, v0 GROUP BY rt1.c1, rt1.c0, v0.c0, v0.c1, rt1.c4 HAVING (NOT (((((v0.c2) IS TRUE))IS(COUNT(rt1.c1))))) UNION ALL SELECT ALL rt1.c1, rt1.c0, v0.c0, v0.c1, rt1.c4 FROM rt1, v0 GROUP BY rt1.c1, rt1.c0, v0.c0, v0.c1, rt1.c4 HAVING ((((((v0.c2) IS TRUE))IS(COUNT(rt1.c1)))) ISNULL);
SELECT ALL rt1.c1, rt1.c0, v0.c0, v0.c1, rt1.c4 FROM rt1, v0 GROUP BY rt1.c1, rt1.c0, v0.c0, v0.c1, rt1.c4;
SELECT * FROM rt1, v0, rt0;
SELECT * FROM rt1, v0, rt0 WHERE ((+ ((('-650799980')/(rt1.c3))))) UNION ALL SELECT ALL * FROM rt1, v0, rt0 WHERE ((NOT ((+ ((('-650799980')/(rt1.c3))))))) UNION ALL SELECT ALL * FROM rt1, v0, rt0 WHERE ((((+ ((('-650799980')/(rt1.c3))))) ISNULL));
SELECT * FROM rt1, v0, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c0) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT v0.c0, v0.c1 FROM v0 GROUP BY v0.c0, v0.c1;
SELECT v0.c0, v0.c1 FROM v0 WHERE (x'' COLLATE NOCASE) GROUP BY v0.c0, v0.c1 UNION SELECT ALL v0.c0, v0.c1 FROM v0 WHERE ((NOT (x'' COLLATE NOCASE))) GROUP BY v0.c0, v0.c1 UNION SELECT ALL v0.c0, v0.c1 FROM v0 WHERE (((x'' COLLATE NOCASE) ISNULL)) GROUP BY v0.c0, v0.c1;
SELECT v0.c0, v0.c1 FROM v0 GROUP BY v0.c0, v0.c1;
SELECT rt1.c0, rt1.c1, v0.c2, v0.c1, rt0.c2, v0.c0, rt0.c1 FROM rt1, v0 RIGHT OUTER JOIN rt0 ON CASE WHEN CASE WHEN rt1.c1 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c3 WHEN rt1.c4 THEN rt0.c0 ELSE rt1.c3 END THEN ((rt0.c0)|(rt1.c1)) END GROUP BY rt1.c0, rt1.c1, v0.c2, v0.c1, rt0.c2, v0.c0, rt0.c1;
SELECT ALL rt1.c0, rt1.c1, v0.c2, v0.c1, rt0.c2, v0.c0, rt0.c1 FROM rt1, v0 RIGHT OUTER JOIN rt0 ON CASE WHEN CASE WHEN rt1.c1 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c3 WHEN rt1.c4 THEN rt0.c0 ELSE rt1.c3 END THEN ((rt0.c0)|(rt1.c1)) END GROUP BY rt1.c0, rt1.c1, v0.c2, v0.c1, rt0.c2, v0.c0, rt0.c1 HAVING ((GROUP_CONCAT(GROUP_CONCAT(COUNT(*)))) ISNULL) UNION ALL SELECT ALL rt1.c0, rt1.c1, v0.c2, v0.c1, rt0.c2, v0.c0, rt0.c1 FROM rt1, v0 RIGHT OUTER JOIN rt0 ON CASE WHEN CASE WHEN rt1.c1 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c3 WHEN rt1.c4 THEN rt0.c0 ELSE rt1.c3 END THEN ((rt0.c0)|(rt1.c1)) END GROUP BY rt1.c0, rt1.c1, v0.c2, v0.c1, rt0.c2, v0.c0, rt0.c1 HAVING (NOT (((GROUP_CONCAT(GROUP_CONCAT(COUNT(*)))) ISNULL))) UNION ALL SELECT rt1.c0, rt1.c1, v0.c2, v0.c1, rt0.c2, v0.c0, rt0.c1 FROM rt1, v0 RIGHT OUTER JOIN rt0 ON CASE WHEN CASE WHEN rt1.c1 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c3 WHEN rt1.c4 THEN rt0.c0 ELSE rt1.c3 END THEN ((rt0.c0)|(rt1.c1)) END GROUP BY rt1.c0, rt1.c1, v0.c2, v0.c1, rt0.c2, v0.c0, rt0.c1 HAVING ((((GROUP_CONCAT(GROUP_CONCAT(COUNT(*)))) ISNULL)) ISNULL);
SELECT MIN(CASE WHEN LIKELY(DISTINCT v0.c1) THEN CASE rt1.c4  WHEN rt1.c4 THEN rt1.c0 ELSE '0.07243231585234045' END END) FROM v0, rt1 ORDER BY (((v0.c0)IS NOT(rt1.c4)) IN (CASE WHEN NULL THEN rt1.c4 ELSE v0.c1 END, v0.c2)) DESC;
SELECT * FROM rt1;
SELECT ALL * FROM rt1 WHERE (((json_type(rt1.c3))*(3.59616612E8))) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT (((json_type(rt1.c3))*(3.59616612E8))))) UNION ALL SELECT * FROM rt1 WHERE (((((json_type(rt1.c3))*(3.59616612E8))) ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT * FROM rt1 RIGHT OUTER JOIN rt0 ON CASE (((rt0.c0, rt1.c2, rt1.c2))<((rt0.c1, rt0.c3, rt0.c1)))  WHEN ((rt1.c2)<<(rt0.c3)) THEN ((rt0.c3)/(rt0.c0)) WHEN ((rt1.c1)-(rt1.c1)) THEN x'' WHEN ((rt0.c4) NOT NULL) THEN ((rt0.c3)OR(rt1.c2)) ELSE rt1.c4 COLLATE RTRIM END;
SELECT DISTINCT * FROM rt1 RIGHT OUTER JOIN rt0 ON CASE (((rt0.c0, rt1.c2, rt1.c2))<((rt0.c1, rt0.c3, rt0.c1)))  WHEN ((rt1.c2)<<(rt0.c3)) THEN ((rt0.c3)/(rt0.c0)) WHEN ((rt1.c1)-(rt1.c1)) THEN x'' WHEN ((rt0.c4) NOT NULL) THEN ((rt0.c3)OR(rt1.c2)) ELSE rt1.c4 COLLATE RTRIM END WHERE ((rt0.c2 IN ()) COLLATE NOCASE) UNION SELECT DISTINCT * FROM rt1 RIGHT OUTER JOIN rt0 ON CASE (((rt0.c0, rt1.c2, rt1.c2))<((rt0.c1, rt0.c3, rt0.c1)))  WHEN ((rt1.c2)<<(rt0.c3)) THEN ((rt0.c3)/(rt0.c0)) WHEN ((rt1.c1)-(rt1.c1)) THEN x'' WHEN ((rt0.c4) NOT NULL) THEN ((rt0.c3)OR(rt1.c2)) ELSE rt1.c4 COLLATE RTRIM END WHERE ((NOT ((rt0.c2 IN ()) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM rt1 RIGHT OUTER JOIN rt0 ON CASE (((rt0.c0, rt1.c2, rt1.c2))<((rt0.c1, rt0.c3, rt0.c1)))  WHEN ((rt1.c2)<<(rt0.c3)) THEN ((rt0.c3)/(rt0.c0)) WHEN ((rt1.c1)-(rt1.c1)) THEN x'' WHEN ((rt0.c4) NOT NULL) THEN ((rt0.c3)OR(rt1.c2)) ELSE rt1.c4 COLLATE RTRIM END WHERE ((((rt0.c2 IN ()) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM rt1 RIGHT OUTER JOIN rt0 ON CASE (((rt0.c0, rt1.c2, rt1.c2))<((rt0.c1, rt0.c3, rt0.c1)))  WHEN ((rt1.c2)<<(rt0.c3)) THEN ((rt0.c3)/(rt0.c0)) WHEN ((rt1.c1)-(rt1.c1)) THEN x'' WHEN ((rt0.c4) NOT NULL) THEN ((rt0.c3)OR(rt1.c2)) ELSE rt1.c4 COLLATE RTRIM END;
SELECT ALL rt1.c4, rt1.c2, rt1.c1 FROM rt1 NOT INDEXED GROUP BY rt1.c4, rt1.c2, rt1.c1;
SELECT ALL rt1.c4, rt1.c2, rt1.c1 FROM rt1 WHERE (((rt1.c3 COLLATE BINARY) BETWEEN (ABS(DISTINCT rt1.c2)) AND (((rt1.c0)|(rt1.c1))))) GROUP BY rt1.c4, rt1.c2, rt1.c1 UNION SELECT ALL rt1.c4, rt1.c2, rt1.c1 FROM rt1 WHERE ((NOT (((rt1.c3 COLLATE BINARY) BETWEEN (ABS(DISTINCT rt1.c2)) AND (((rt1.c0)|(rt1.c1))))))) GROUP BY rt1.c4, rt1.c2, rt1.c1 UNION SELECT ALL rt1.c4, rt1.c2, rt1.c1 FROM rt1 WHERE (((((rt1.c3 COLLATE BINARY) BETWEEN (ABS(DISTINCT rt1.c2)) AND (((rt1.c0)|(rt1.c1))))) ISNULL)) GROUP BY rt1.c4, rt1.c2, rt1.c1;
SELECT ALL rt1.c4, rt1.c2, rt1.c1 FROM rt1 NOT INDEXED GROUP BY rt1.c4, rt1.c2, rt1.c1;
SELECT v0.c0, v0.c1, v0.c2 FROM v0 GROUP BY v0.c0, v0.c1, v0.c2;
SELECT ALL v0.c0, v0.c1, v0.c2 FROM v0 GROUP BY v0.c0, v0.c1, v0.c2 HAVING (((((MAX(v0.c0))||(GROUP_CONCAT(v0.c1))), TOTAL(MIN(v0.c0)), ((v0.c1)GLOB(-2070959127))))==((GROUP_CONCAT(v0.c0), CAST(v0.c2 AS BLOB), ((v0.c0) ISNULL)))) UNION ALL SELECT v0.c0, v0.c1, v0.c2 FROM v0 GROUP BY v0.c0, v0.c1, v0.c2 HAVING (NOT ((((((MAX(v0.c0))||(GROUP_CONCAT(v0.c1))), TOTAL(MIN(v0.c0)), ((v0.c1)GLOB(-2070959127))))==((GROUP_CONCAT(v0.c0), CAST(v0.c2 AS BLOB), ((v0.c0) ISNULL)))))) UNION ALL SELECT v0.c0, v0.c1, v0.c2 FROM v0 GROUP BY v0.c0, v0.c1, v0.c2 HAVING (((((((MAX(v0.c0))||(GROUP_CONCAT(v0.c1))), TOTAL(MIN(v0.c0)), ((v0.c1)GLOB(-2070959127))))==((GROUP_CONCAT(v0.c0), CAST(v0.c2 AS BLOB), ((v0.c0) ISNULL))))) ISNULL);
SELECT ALL v0.c0 FROM rt1, rt0 CROSS JOIN v0 ON ((rt1.c2)&(v0.c0)) COLLATE NOCASE;
SELECT ALL v0.c0 FROM rt1, rt0 CROSS JOIN v0 ON ((rt1.c2)&(v0.c0)) COLLATE NOCASE WHERE (v0.c2) UNION ALL SELECT ALL v0.c0 FROM rt1, rt0 CROSS JOIN v0 ON ((rt1.c2)&(v0.c0)) COLLATE NOCASE WHERE ((NOT (v0.c2))) UNION ALL SELECT v0.c0 FROM rt1, rt0 CROSS JOIN v0 ON ((rt1.c2)&(v0.c0)) COLLATE NOCASE WHERE (((v0.c2) ISNULL));
SELECT ALL v0.c0 FROM rt1, rt0 CROSS JOIN v0 ON ((rt1.c2)&(v0.c0)) COLLATE NOCASE;
SELECT DISTINCT * FROM v0, rt1, rt0;
SELECT DISTINCT * FROM v0, rt1, rt0 WHERE (((DATETIME(rt1.c0, x'', v0.c0))*(x'ca82'))) UNION SELECT DISTINCT * FROM v0, rt1, rt0 WHERE ((NOT (((DATETIME(rt1.c0, x'', v0.c0))*(x'ca82'))))) UNION SELECT DISTINCT * FROM v0, rt1, rt0 WHERE (((((DATETIME(rt1.c0, x'', v0.c0))*(x'ca82'))) ISNULL));
SELECT DISTINCT * FROM v0, rt1, rt0;
SELECT rt1.c0, rt1.c4, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c4, rt1.c1;
SELECT ALL rt1.c0, rt1.c4, rt1.c1 FROM rt1 WHERE ((((rt1.c4)) NOT BETWEEN ((CAST(rt1.c2 AS INTEGER))) AND ((((rt1.c4) BETWEEN (rt1.c4) AND (rt1.c2)))))) GROUP BY rt1.c0, rt1.c4, rt1.c1 UNION SELECT rt1.c0, rt1.c4, rt1.c1 FROM rt1 WHERE ((NOT ((((rt1.c4)) NOT BETWEEN ((CAST(rt1.c2 AS INTEGER))) AND ((((rt1.c4) BETWEEN (rt1.c4) AND (rt1.c2)))))))) GROUP BY rt1.c0, rt1.c4, rt1.c1 UNION SELECT ALL rt1.c0, rt1.c4, rt1.c1 FROM rt1 NOT INDEXED WHERE ((((((rt1.c4)) NOT BETWEEN ((CAST(rt1.c2 AS INTEGER))) AND ((((rt1.c4) BETWEEN (rt1.c4) AND (rt1.c2)))))) ISNULL)) GROUP BY rt1.c0, rt1.c4, rt1.c1;
SELECT rt1.c0, rt1.c4, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c4, rt1.c1;
SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1;
SELECT v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1 HAVING (('845857295')&(((TOTAL(AVG(0.140885156131193)))==(MIN(MIN(COUNT(GROUP_CONCAT(v0.c0)))))))) UNION ALL SELECT v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1 HAVING (NOT ((('845857295')&(((TOTAL(AVG(0.140885156131193)))==(MIN(MIN(COUNT(GROUP_CONCAT(v0.c0)))))))))) UNION ALL SELECT v0.c2, v0.c0, v0.c1 FROM v0 NOT INDEXED GROUP BY v0.c2, v0.c0, v0.c1 HAVING (((('845857295')&(((TOTAL(AVG(0.140885156131193)))=(MIN(MIN(COUNT(GROUP_CONCAT(v0.c0))))))))) ISNULL);
SELECT rt0.c4, rt0.c3, rt0.c1 FROM rt0;
SELECT rt0.c4, rt0.c3, rt0.c1 FROM rt0 WHERE ((NOT (CAST(rt0.c4 AS BLOB)))) UNION ALL SELECT ALL rt0.c4, rt0.c3, rt0.c1 FROM rt0 WHERE ((NOT ((NOT (CAST(rt0.c4 AS BLOB)))))) UNION ALL SELECT rt0.c4, rt0.c3, rt0.c1 FROM rt0 WHERE ((((NOT (CAST(rt0.c4 AS BLOB)))) ISNULL));
SELECT rt0.c4, rt0.c3, rt0.c1 FROM rt0;
SELECT DISTINCT rt1.c0 FROM rt1;
SELECT DISTINCT rt1.c0 FROM rt1 WHERE (((CAST('698442175' AS INTEGER)) ISNULL)) UNION SELECT DISTINCT rt1.c0 FROM rt1 WHERE ((NOT (((CAST('698442175' AS INTEGER)) ISNULL)))) UNION SELECT DISTINCT rt1.c0 FROM rt1 WHERE (((((CAST('698442175' AS INTEGER)) ISNULL)) ISNULL));
SELECT DISTINCT rt1.c0 FROM rt1;
SELECT v0.c2 FROM v0 GROUP BY v0.c2;
SELECT ALL v0.c2 FROM v0 WHERE (((((v0.c1) IS FALSE)) NOT BETWEEN (v0.c0) AND (((0.8682272088375045)<(v0.c2))))) GROUP BY v0.c2 UNION SELECT v0.c2 FROM v0 WHERE ((NOT (((((v0.c1) IS FALSE)) NOT BETWEEN (v0.c0) AND (((0.8682272088375045)<(v0.c2))))))) GROUP BY v0.c2 UNION SELECT v0.c2 FROM v0 WHERE (((((((v0.c1) IS FALSE)) NOT BETWEEN (v0.c0) AND (((0.8682272088375045)<(v0.c2))))) ISNULL)) GROUP BY v0.c2;
SELECT v0.c2 FROM v0 GROUP BY v0.c2;
SELECT ALL rt0.c0, rt1.c2, rt1.c0, rt0.c3, rt0.c1, rt0.c2, v0.c0, rt1.c4, v0.c1, rt1.c3 FROM rt1, rt0, v0 GROUP BY rt0.c0, rt1.c2, rt1.c0, rt0.c3, rt0.c1, rt0.c2, v0.c0, rt1.c4, v0.c1, rt1.c3;
SELECT ALL rt0.c0, rt1.c2, rt1.c0, rt0.c3, rt0.c1, rt0.c2, v0.c0, rt1.c4, v0.c1, rt1.c3 FROM rt1, rt0, v0 GROUP BY rt0.c0, rt1.c2, rt1.c0, rt0.c3, rt0.c1, rt0.c2, v0.c0, rt1.c4, v0.c1, rt1.c3 HAVING COUNT(*) UNION ALL SELECT rt0.c0, rt1.c2, rt1.c0, rt0.c3, rt0.c1, rt0.c2, v0.c0, rt1.c4, v0.c1, rt1.c3 FROM rt1, rt0, v0 NOT INDEXED GROUP BY rt0.c0, rt1.c2, rt1.c0, rt0.c3, rt0.c1, rt0.c2, v0.c0, rt1.c4, v0.c1, rt1.c3 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c0, rt1.c2, rt1.c0, rt0.c3, rt0.c1, rt0.c2, v0.c0, rt1.c4, v0.c1, rt1.c3 FROM rt1, rt0, v0 GROUP BY rt0.c0, rt1.c2, rt1.c0, rt0.c3, rt0.c1, rt0.c2, v0.c0, rt1.c4, v0.c1, rt1.c3 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0, rt1.c2, rt1.c0, rt0.c3, rt0.c1, rt0.c2, v0.c0, rt1.c4, v0.c1, rt1.c3 FROM rt1, rt0, v0 GROUP BY rt0.c0, rt1.c2, rt1.c0, rt0.c3, rt0.c1, rt0.c2, v0.c0, rt1.c4, v0.c1, rt1.c3;
SELECT ALL rt0.c0, rt1.c2, rt1.c0, rt0.c3, rt0.c1, rt0.c2, v0.c0, rt1.c4, v0.c1, rt1.c3 FROM rt1, rt0, v0 GROUP BY rt0.c0, rt1.c2, rt1.c0, rt0.c3, rt0.c1, rt0.c2, v0.c0, rt1.c4, v0.c1, rt1.c3 HAVING COUNT(*) UNION ALL SELECT rt0.c0, rt1.c2, rt1.c0, rt0.c3, rt0.c1, rt0.c2, v0.c0, rt1.c4, v0.c1, rt1.c3 FROM rt1, rt0, v0 NOT INDEXED GROUP BY rt0.c0, rt1.c2, rt1.c0, rt0.c3, rt0.c1, rt0.c2, v0.c0, rt1.c4, v0.c1, rt1.c3 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c0, rt1.c2, rt1.c0, rt0.c3, rt0.c1, rt0.c2, v0.c0, rt1.c4, v0.c1, rt1.c3 FROM rt1, rt0, v0 GROUP BY rt0.c0, rt1.c2, rt1.c0, rt0.c3, rt0.c1, rt0.c2, v0.c0, rt1.c4, v0.c1, rt1.c3 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0, rt1.c2, rt1.c0, rt0.c3, rt0.c1, rt0.c2, v0.c0, rt1.c4, v0.c1, rt1.c3 FROM rt1, rt0, v0 GROUP BY rt0.c0, rt1.c2, rt1.c0, rt0.c3, rt0.c1, rt0.c2, v0.c0, rt1.c4, v0.c1, rt1.c3;
SELECT * FROM v0, rt0;
SELECT * FROM v0, rt0 WHERE ((((((rt0.c1, rt0.c1, v0.c2))<=((rt0.c1, rt0.c2, v0.c1)))) BETWEEN (v0.c0 COLLATE NOCASE) AND ((rt0.c2 IN ())))) UNION ALL SELECT * FROM v0, rt0 WHERE ((NOT ((((((rt0.c1, rt0.c1, v0.c2))<=((rt0.c1, rt0.c2, v0.c1)))) BETWEEN (v0.c0 COLLATE NOCASE) AND ((rt0.c2 IN ())))))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((((((((rt0.c1, rt0.c1, v0.c2))<=((rt0.c1, rt0.c2, v0.c1)))) BETWEEN (v0.c0 COLLATE NOCASE) AND ((rt0.c2 IN ())))) ISNULL));
SELECT * FROM v0, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((~ ((('-1768213459')/(rt0.c1))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((~ ((('-1768213459')/(rt0.c1))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((~ ((('-1768213459')/(rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2;
SELECT ALL v0.c1, v0.c2 FROM v0 WHERE (((NULL) IS TRUE)) GROUP BY v0.c1, v0.c2 UNION SELECT v0.c1, v0.c2 FROM v0 WHERE ((NOT (((NULL) IS TRUE)))) GROUP BY v0.c1, v0.c2 UNION SELECT v0.c1, v0.c2 FROM v0 WHERE (((((NULL) IS TRUE)) ISNULL)) GROUP BY v0.c1, v0.c2;
SELECT v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2;
SELECT ALL rt0.c4, rt0.c3, rt1.c4, rt0.c1, v0.c2, v0.c0, v0.c1, rt1.c3, rt1.c0, rt0.c0, rt1.c1, rt1.c2, rt0.c2 FROM v0, rt0, rt1 GROUP BY rt0.c4, rt0.c3, rt1.c4, rt0.c1, v0.c2, v0.c0, v0.c1, rt1.c3, rt1.c0, rt0.c0, rt1.c1, rt1.c2, rt0.c2;
SELECT rt0.c4, rt0.c3, rt1.c4, rt0.c1, v0.c2, v0.c0, v0.c1, rt1.c3, rt1.c0, rt0.c0, rt1.c1, rt1.c2, rt0.c2 FROM v0, rt0, rt1 GROUP BY rt0.c4, rt0.c3, rt1.c4, rt0.c1, v0.c2, v0.c0, v0.c1, rt1.c3, rt1.c0, rt0.c0, rt1.c1, rt1.c2, rt0.c2 HAVING GROUP_CONCAT(CAST(TOTAL(rt1.c1) AS REAL)) UNION ALL SELECT rt0.c4, rt0.c3, rt1.c4, rt0.c1, v0.c2, v0.c0, v0.c1, rt1.c3, rt1.c0, rt0.c0, rt1.c1, rt1.c2, rt0.c2 FROM v0, rt0, rt1 GROUP BY rt0.c4, rt0.c3, rt1.c4, rt0.c1, v0.c2, v0.c0, v0.c1, rt1.c3, rt1.c0, rt0.c0, rt1.c1, rt1.c2, rt0.c2 HAVING (NOT (GROUP_CONCAT(CAST(TOTAL(rt1.c1) AS REAL)))) UNION ALL SELECT ALL rt0.c4, rt0.c3, rt1.c4, rt0.c1, v0.c2, v0.c0, v0.c1, rt1.c3, rt1.c0, rt0.c0, rt1.c1, rt1.c2, rt0.c2 FROM v0, rt0 NOT INDEXED, rt1 GROUP BY rt0.c4, rt0.c3, rt1.c4, rt0.c1, v0.c2, v0.c0, v0.c1, rt1.c3, rt1.c0, rt0.c0, rt1.c1, rt1.c2, rt0.c2 HAVING ((GROUP_CONCAT(CAST(TOTAL(rt1.c1) AS REAL))) ISNULL);
SELECT rt0.c0 FROM rt0 CROSS JOIN v0 ON DATE(TYPEOF(-2081567540), ((v0.c1) BETWEEN (rt0.c0) AND (v0.c2)), v0.c1, CHANGES(), (- (v0.c0)));
SELECT ALL rt0.c0 FROM rt0 CROSS JOIN v0 ON DATE(TYPEOF(-2081567540), ((v0.c1) BETWEEN (rt0.c0) AND (v0.c2)), v0.c1, CHANGES(), (- (v0.c0))) WHERE (((CAST(rt0.c0 AS BLOB))<(CASE v0.c0  WHEN 1321418552 THEN v0.c1 END))) UNION ALL SELECT rt0.c0 FROM rt0 CROSS JOIN v0 ON DATE(TYPEOF(-2081567540), ((v0.c1) BETWEEN (rt0.c0) AND (v0.c2)), v0.c1, CHANGES(), (- (v0.c0))) WHERE ((NOT (((CAST(rt0.c0 AS BLOB))<(CASE v0.c0  WHEN 1321418552 THEN v0.c1 END))))) UNION ALL SELECT rt0.c0 FROM rt0 CROSS JOIN v0 ON DATE(TYPEOF(-2081567540), ((v0.c1) BETWEEN (rt0.c0) AND (v0.c2)), v0.c1, CHANGES(), (- (v0.c0))) WHERE (((((CAST(rt0.c0 AS BLOB))<(CASE v0.c0  WHEN 1321418552 THEN v0.c1 END))) ISNULL));
SELECT rt0.c0 FROM rt0 CROSS JOIN v0 ON DATE(TYPEOF(-2081567540), ((v0.c1) BETWEEN (rt0.c0) AND (v0.c2)), v0.c1, CHANGES(), (- (v0.c0)));
SELECT DISTINCT * FROM v0, rt1;
SELECT DISTINCT * FROM v0, rt1 WHERE (((((v0.c2)<=(rt1.c3))) NOT NULL)) UNION SELECT DISTINCT * FROM v0, rt1 WHERE ((NOT (((((v0.c2)<=(rt1.c3))) NOT NULL)))) UNION SELECT DISTINCT * FROM v0, rt1 WHERE (((((((v0.c2)<=(rt1.c3))) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM v0, rt1;
SELECT rt0.c0, rt0.c2, rt1.c3, rt1.c2, rt1.c1, v0.c0, rt0.c4, rt0.c1, v0.c1, rt1.c4, rt0.c3, rt1.c0 FROM rt1, v0 NATURAL JOIN rt0 GROUP BY rt0.c0, rt0.c2, rt1.c3, rt1.c2, rt1.c1, v0.c0, rt0.c4, rt0.c1, v0.c1, rt1.c4, rt0.c3, rt1.c0;
SELECT ALL rt0.c0, rt0.c2, rt1.c3, rt1.c2, rt1.c1, v0.c0, rt0.c4, rt0.c1, v0.c1, rt1.c4, rt0.c3, rt1.c0 FROM rt1, v0 NATURAL JOIN rt0 WHERE (((((0.1761807940316732)AND(rt0.c2)))AND(((v0.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1))))) GROUP BY rt0.c0, rt0.c2, rt1.c3, rt1.c2, rt1.c1, v0.c0, rt0.c4, rt0.c1, v0.c1, rt1.c4, rt0.c3, rt1.c0 UNION SELECT rt0.c0, rt0.c2, rt1.c3, rt1.c2, rt1.c1, v0.c0, rt0.c4, rt0.c1, v0.c1, rt1.c4, rt0.c3, rt1.c0 FROM rt1, v0 NATURAL JOIN rt0 WHERE ((NOT (((((0.1761807940316732)AND(rt0.c2)))AND(((v0.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1))))))) GROUP BY rt0.c0, rt0.c2, rt1.c3, rt1.c2, rt1.c1, v0.c0, rt0.c4, rt0.c1, v0.c1, rt1.c4, rt0.c3, rt1.c0 UNION SELECT rt0.c0, rt0.c2, rt1.c3, rt1.c2, rt1.c1, v0.c0, rt0.c4, rt0.c1, v0.c1, rt1.c4, rt0.c3, rt1.c0 FROM rt1, v0 NATURAL JOIN rt0 WHERE (((((((0.1761807940316732)AND(rt0.c2)))AND(((v0.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1))))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt1.c3, rt1.c2, rt1.c1, v0.c0, rt0.c4, rt0.c1, v0.c1, rt1.c4, rt0.c3, rt1.c0;
SELECT rt0.c0, rt0.c2, rt1.c3, rt1.c2, rt1.c1, v0.c0, rt0.c4, rt0.c1, v0.c1, rt1.c4, rt0.c3, rt1.c0 FROM rt1, v0 NATURAL JOIN rt0 GROUP BY rt0.c0, rt0.c2, rt1.c3, rt1.c2, rt1.c1, v0.c0, rt0.c4, rt0.c1, v0.c1, rt1.c4, rt0.c3, rt1.c0;
SELECT ALL rt1.c3, rt0.c0, rt0.c4, rt1.c2, rt1.c4, v0.c1, rt1.c0, rt0.c2, rt0.c1, rt1.c1 FROM rt0, v0, rt1 GROUP BY rt1.c3, rt0.c0, rt0.c4, rt1.c2, rt1.c4, v0.c1, rt1.c0, rt0.c2, rt0.c1, rt1.c1;
SELECT ALL rt1.c3, rt0.c0, rt0.c4, rt1.c2, rt1.c4, v0.c1, rt1.c0, rt0.c2, rt0.c1, rt1.c1 FROM rt0, v0, rt1 GROUP BY rt1.c3, rt0.c0, rt0.c4, rt1.c2, rt1.c4, v0.c1, rt1.c0, rt0.c2, rt0.c1, rt1.c1 HAVING MAX(MIN(MIN(MIN(TOTAL(rt0.c1))))) UNION ALL SELECT ALL rt1.c3, rt0.c0, rt0.c4, rt1.c2, rt1.c4, v0.c1, rt1.c0, rt0.c2, rt0.c1, rt1.c1 FROM rt0, v0, rt1 GROUP BY rt1.c3, rt0.c0, rt0.c4, rt1.c2, rt1.c4, v0.c1, rt1.c0, rt0.c2, rt0.c1, rt1.c1 HAVING (NOT (MAX(MIN(MIN(MIN(TOTAL(rt0.c1))))))) UNION ALL SELECT rt1.c3, rt0.c0, rt0.c4, rt1.c2, rt1.c4, v0.c1, rt1.c0, rt0.c2, rt0.c1, rt1.c1 FROM rt0, v0, rt1 GROUP BY rt1.c3, rt0.c0, rt0.c4, rt1.c2, rt1.c4, v0.c1, rt1.c0, rt0.c2, rt0.c1, rt1.c1 HAVING ((MAX(MIN(MIN(MIN(TOTAL(rt0.c1)))))) ISNULL);
SELECT ALL * FROM rt1, v0;
SELECT * FROM rt1, v0 WHERE (v0.c1) UNION ALL SELECT * FROM rt1, v0 WHERE ((NOT (v0.c1))) UNION ALL SELECT * FROM rt1, v0 WHERE (((v0.c1) ISNULL));
SELECT ALL * FROM rt1, v0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CAST((rt0.c4 IN ()) AS TEXT)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CAST((rt0.c4 IN ()) AS TEXT)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CAST((rt0.c4 IN ()) AS TEXT)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL v0.c0, v0.c2, v0.c1, rt0.c4, rt0.c1, rt0.c2 FROM v0, rt0 GROUP BY v0.c0, v0.c2, v0.c1, rt0.c4, rt0.c1, rt0.c2;
SELECT v0.c0, v0.c2, v0.c1, rt0.c4, rt0.c1, rt0.c2 FROM v0, rt0 WHERE (CASE ((((v0.c1)AND(rt0.c3)))AND(rt0.c3))  WHEN json_array_length(rt0.c3, '-17959361') THEN (((rt0.c0))>=(('-436190097'))) WHEN CASE WHEN v0.c0 THEN v0.c2 END THEN (+ (rt0.c0)) WHEN x'fefa' THEN (+ (rt0.c1)) ELSE ((v0.c1) BETWEEN (v0.c0) AND (rt0.c1)) END) GROUP BY v0.c0, v0.c2, v0.c1, rt0.c4, rt0.c1, rt0.c2 UNION SELECT v0.c0, v0.c2, v0.c1, rt0.c4, rt0.c1, rt0.c2 FROM v0, rt0 WHERE ((NOT (CASE ((((v0.c1)AND(rt0.c3)))AND(rt0.c3))  WHEN json_array_length(rt0.c3, '-17959361') THEN (((rt0.c0))>=(('-436190097'))) WHEN CASE WHEN v0.c0 THEN v0.c2 END THEN (+ (rt0.c0)) WHEN x'fefa' THEN (+ (rt0.c1)) ELSE ((v0.c1) BETWEEN (v0.c0) AND (rt0.c1)) END))) GROUP BY v0.c0, v0.c2, v0.c1, rt0.c4, rt0.c1, rt0.c2 UNION SELECT v0.c0, v0.c2, v0.c1, rt0.c4, rt0.c1, rt0.c2 FROM v0, rt0 WHERE (((CASE ((((v0.c1)AND(rt0.c3)))AND(rt0.c3))  WHEN json_array_length(rt0.c3, '-17959361') THEN (((rt0.c0))>=(('-436190097'))) WHEN CASE WHEN v0.c0 THEN v0.c2 END THEN (+ (rt0.c0)) WHEN x'fefa' THEN (+ (rt0.c1)) ELSE ((v0.c1) BETWEEN (v0.c0) AND (rt0.c1)) END) ISNULL)) GROUP BY v0.c0, v0.c2, v0.c1, rt0.c4, rt0.c1, rt0.c2;
SELECT ALL v0.c0, v0.c2, v0.c1, rt0.c4, rt0.c1, rt0.c2 FROM v0, rt0 GROUP BY v0.c0, v0.c2, v0.c1, rt0.c4, rt0.c1, rt0.c2;
SELECT rt0.c2, rt0.c1, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c3, rt0.c4;
SELECT rt0.c2, rt0.c1, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c3, rt0.c4 HAVING (((rt0.c0)) BETWEEN ((((rt0.c1)<(TOTAL(rt0.c1))))) AND ((COUNT(TOTAL(rt0.c1))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c3, rt0.c4 HAVING (NOT ((((rt0.c0)) BETWEEN ((((rt0.c1)<(TOTAL(rt0.c1))))) AND ((COUNT(TOTAL(rt0.c1))))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c3, rt0.c4 HAVING (((((rt0.c0)) BETWEEN ((((rt0.c1)<(TOTAL(rt0.c1))))) AND ((COUNT(TOTAL(rt0.c1)))))) ISNULL);
SELECT ALL * FROM v0, rt0;
SELECT * FROM v0, rt0 WHERE (NULL) UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((NOT (NULL))) UNION ALL SELECT * FROM v0, rt0 WHERE (((NULL) ISNULL));
SELECT ALL * FROM v0, rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((v0.c1)<(v0.c2)) IN ())) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((v0.c1)<(v0.c2)) IN ())))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((v0.c1)<(v0.c2)) IN ())) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL rt1.c2, rt1.c3, rt1.c4, v0.c0, v0.c1 FROM rt1 CROSS JOIN v0 ON (((((v0.c0) NOT BETWEEN (rt1.c3) AND (rt1.c2))))<((((rt1.c4)>=(v0.c2))))) GROUP BY rt1.c2, rt1.c3, rt1.c4, v0.c0, v0.c1;
SELECT rt1.c2, rt1.c3, rt1.c4, v0.c0, v0.c1 FROM rt1 CROSS JOIN v0 ON (((((v0.c0) NOT BETWEEN (rt1.c3) AND (rt1.c2))))<((((rt1.c4)>=(v0.c2))))) WHERE (CAST(json_array(rt1.c3, rt1.c1, rt1.c0, rt1.c2, rt1.c0, rt1.c1) AS NUMERIC)) GROUP BY rt1.c2, rt1.c3, rt1.c4, v0.c0, v0.c1 UNION SELECT rt1.c2, rt1.c3, rt1.c4, v0.c0, v0.c1 FROM rt1 CROSS JOIN v0 ON (((((v0.c0) NOT BETWEEN (rt1.c3) AND (rt1.c2))))<((((rt1.c4)>=(v0.c2))))) WHERE ((NOT (CAST(json_array(rt1.c3, rt1.c1, rt1.c0, rt1.c2, rt1.c0, rt1.c1) AS NUMERIC)))) GROUP BY rt1.c2, rt1.c3, rt1.c4, v0.c0, v0.c1 UNION SELECT rt1.c2, rt1.c3, rt1.c4, v0.c0, v0.c1 FROM rt1 CROSS JOIN v0 ON (((((v0.c0) NOT BETWEEN (rt1.c3) AND (rt1.c2))))<((((rt1.c4)>=(v0.c2))))) WHERE (((CAST(json_array(rt1.c3, rt1.c1, rt1.c0, rt1.c2, rt1.c0, rt1.c1) AS NUMERIC)) ISNULL)) GROUP BY rt1.c2, rt1.c3, rt1.c4, v0.c0, v0.c1;
SELECT ALL rt1.c2, rt1.c3, rt1.c4, v0.c0, v0.c1 FROM rt1 CROSS JOIN v0 ON (((((v0.c0) NOT BETWEEN (rt1.c3) AND (rt1.c2))))<((((rt1.c4)>=(v0.c2))))) GROUP BY rt1.c2, rt1.c3, rt1.c4, v0.c0, v0.c1;
SELECT ALL v0.c1, rt0.c2, v0.c0, rt1.c4 FROM v0, rt0, rt1 GROUP BY v0.c1, rt0.c2, v0.c0, rt1.c4;
SELECT ALL v0.c1, rt0.c2, v0.c0, rt1.c4 FROM v0, rt0, rt1 GROUP BY v0.c1, rt0.c2, v0.c0, rt1.c4 HAVING AVG(AVG(TOTAL(rt0.c0))) UNION ALL SELECT ALL v0.c1, rt0.c2, v0.c0, rt1.c4 FROM v0, rt0, rt1 GROUP BY v0.c1, rt0.c2, v0.c0, rt1.c4 HAVING (NOT (AVG(AVG(TOTAL(rt0.c0))))) UNION ALL SELECT ALL v0.c1, rt0.c2, v0.c0, rt1.c4 FROM v0, rt0, rt1 GROUP BY v0.c1, rt0.c2, v0.c0, rt1.c4 HAVING ((AVG(AVG(TOTAL(rt0.c0)))) ISNULL);
SELECT rt1.c0, rt0.c4, rt0.c0, v0.c2, v0.c1, rt0.c1, rt1.c4, rt0.c3, rt1.c1, rt1.c2 FROM rt0, rt1, v0;
SELECT ALL rt1.c0, rt0.c4, rt0.c0, v0.c2, v0.c1, rt0.c1, rt1.c4, rt0.c3, rt1.c1, rt1.c2 FROM rt0, rt1, v0 WHERE (rt0.c0) UNION ALL SELECT rt1.c0, rt0.c4, rt0.c0, v0.c2, v0.c1, rt0.c1, rt1.c4, rt0.c3, rt1.c1, rt1.c2 FROM rt0, rt1, v0 WHERE ((NOT (rt0.c0))) UNION ALL SELECT rt1.c0, rt0.c4, rt0.c0, v0.c2, v0.c1, rt0.c1, rt1.c4, rt0.c3, rt1.c1, rt1.c2 FROM rt0, rt1, v0 WHERE (((rt0.c0) ISNULL));
SELECT rt1.c0, rt0.c4, rt0.c0, v0.c2, v0.c1, rt0.c1, rt1.c4, rt0.c3, rt1.c1, rt1.c2 FROM rt0, rt1, v0;
SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2, rt0.c3, rt1.c4, rt0.c0, rt0.c1, rt1.c3, rt0.c4, rt0.c2 FROM rt1 RIGHT OUTER JOIN rt0 ON LIKE(((rt0.c0) IS TRUE), CAST(rt1.c1 AS INTEGER));
SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2, rt0.c3, rt1.c4, rt0.c0, rt0.c1, rt1.c3, rt0.c4, rt0.c2 FROM rt1 RIGHT OUTER JOIN rt0 ON LIKE(((rt0.c0) IS TRUE), CAST(rt1.c1 AS INTEGER)) WHERE (((x'')>>(CAST(rt0.c4 AS INTEGER)))) UNION SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2, rt0.c3, rt1.c4, rt0.c0, rt0.c1, rt1.c3, rt0.c4, rt0.c2 FROM rt1 RIGHT OUTER JOIN rt0 ON LIKE(((rt0.c0) IS TRUE), CAST(rt1.c1 AS INTEGER)) WHERE ((NOT (((x'')>>(CAST(rt0.c4 AS INTEGER)))))) UNION SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2, rt0.c3, rt1.c4, rt0.c0, rt0.c1, rt1.c3, rt0.c4, rt0.c2 FROM rt1 RIGHT OUTER JOIN rt0 ON LIKE(((rt0.c0) IS TRUE), CAST(rt1.c1 AS INTEGER)) WHERE (((((x'')>>(CAST(rt0.c4 AS INTEGER)))) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2, rt0.c3, rt1.c4, rt0.c0, rt0.c1, rt1.c3, rt0.c4, rt0.c2 FROM rt1 RIGHT OUTER JOIN rt0 ON LIKE(((rt0.c0) IS TRUE), CAST(rt1.c1 AS INTEGER));
SELECT ALL v0.c2, rt0.c3, rt0.c1, v0.c1, rt0.c4, v0.c0, rt0.c2 FROM rt0 NATURAL JOIN v0 GROUP BY v0.c2, rt0.c3, rt0.c1, v0.c1, rt0.c4, v0.c0, rt0.c2;
SELECT v0.c2, rt0.c3, rt0.c1, v0.c1, rt0.c4, v0.c0, rt0.c2 FROM rt0 NATURAL JOIN v0 WHERE (CASE ((((((((rt0.c0)AND(0.30137707552576565)))OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c3))  WHEN ((rt0.c4)>=(rt0.c2)) THEN (((v0.c0))!=((v0.c0))) END) GROUP BY v0.c2, rt0.c3, rt0.c1, v0.c1, rt0.c4, v0.c0, rt0.c2 UNION SELECT ALL v0.c2, rt0.c3, rt0.c1, v0.c1, rt0.c4, v0.c0, rt0.c2 FROM rt0 NATURAL JOIN v0 WHERE ((NOT (CASE ((((((((rt0.c0)AND(0.30137707552576565)))OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c3))  WHEN ((rt0.c4)>=(rt0.c2)) THEN (((v0.c0))<>((v0.c0))) END))) GROUP BY v0.c2, rt0.c3, rt0.c1, v0.c1, rt0.c4, v0.c0, rt0.c2 UNION SELECT ALL v0.c2, rt0.c3, rt0.c1, v0.c1, rt0.c4, v0.c0, rt0.c2 FROM rt0 NATURAL JOIN v0 WHERE (((CASE ((((((((rt0.c0)AND(0.30137707552576565)))OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c3))  WHEN ((rt0.c4)>=(rt0.c2)) THEN (((v0.c0))<>((v0.c0))) END) ISNULL)) GROUP BY v0.c2, rt0.c3, rt0.c1, v0.c1, rt0.c4, v0.c0, rt0.c2;
SELECT ALL v0.c2, rt0.c3, rt0.c1, v0.c1, rt0.c4, v0.c0, rt0.c2 FROM rt0 NATURAL JOIN v0 GROUP BY v0.c2, rt0.c3, rt0.c1, v0.c1, rt0.c4, v0.c0, rt0.c2;
