-- Time: 2024/06/09 16:14:19
-- Database: database20
-- Database version: 3.40.0
-- seed value: 4056651920
PRAGMA cache_size = 50000; -- 7ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-8'; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 1ms;
INSERT OR ABORT INTO rt0 VALUES (24498695, NULL, 374182263); -- 0ms;
PRAGMA temp.ignore_check_constraints = false; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '4 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-88122523 sz=1851147160'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (- (1542732526)) THEN ((0.47143484370341704) BETWEEN ('_(ygFG') AND (0.7906815306760364)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE x''  WHEN 0.7906815306760364 THEN x'3767' ELSE x'b369' END THEN 0.14706252388343466 COLLATE BINARY WHEN ((1.85114716E9) NOT BETWEEN ('-179774712') AND (24498695)) THEN (0.3854887090828336 IN ()) WHEN (('24498695')*(0.14706252388343466)) THEN CAST(NULL AS TEXT) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=726556366 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (0.5499525644277965 IN ()) THEN CASE NULL  WHEN 0.08090066721805234 THEN 374182263 WHEN 726556366 THEN '-2119983237' WHEN '0.5499525644277965' THEN x'' WHEN '' THEN NULL WHEN 0X2675f702 THEN 'DB' END WHEN '' COLLATE RTRIM THEN ((('-401943135'))>=((NULL))) WHEN (x'' IN (0X723b563f)) THEN CAST(-2119983237 AS TEXT) ELSE (('-2119983237')<<(x'1869')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0x5ca8ac1d)AND(NULL)))AND(431170369)) IN (NULLIF(NULL, 0.9482900988453379))); -- 1ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '0.3854887090828336'; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1894999027 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=590680486 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '24498695 2 sz=-1422061212 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 -1762167416'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (CAST('1417464713' AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'' COLLATE NOCASE AS BLOB); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 sz=1916491327'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((('1916491327')OR(NULL)))AND('')))OR(NULL)))OR('374182263')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=804967809 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(x'' AS BLOB) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-179774712 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN (0.7354923635329763, x'')))<(CAST(NULL AS TEXT))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1542732526 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.029583497170291184 IN ())) NOT BETWEEN (MAX('-2099302864', 0.8103120703776724)) AND (-2047853050)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (MAX(x'', NULL) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1422061212 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1910988296 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((((('|c'))<>((NULL))))AND(x'' COLLATE NOCASE)))AND(((NULL)&(NULL)))))AND(('6.' IN (951561925)))))OR((((((((('-2099302864')OR(x'')))OR(-1.79774712E8)))OR(x'20c1')))OR('kksCK7')))))OR(IFNULL(DISTINCT NULL, 0.7354923635329763))))AND((x'' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-211359961') IS FALSE) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL COLLATE RTRIM; -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN TRIM(DISTINCT x'', 0.1285512530217584) THEN ((0.0521488268311987)IS NOT(0.27705809518871627)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1741139009 236379170 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LIKELY('-2119983237'))LIKE(CAST('1910988296' AS TEXT))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-290749447 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) IS FALSE)) NOTNULL); -- 1ms;
DELETE FROM sqlite_stat1 WHERE json_remove((('')+(0X29d8947a)), 0.03284848865561296); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)IS(NULL)), (+ ('')), (((24498695))>((''))), TRIM(DISTINCT 0.47143484370341704, 'U*[Xፁ햡,['), ((NULL)<(''))))<((NULL COLLATE RTRIM, ((0x70f363f3)%(x'')), '0.0521488268311987' COLLATE NOCASE, ('76841004' IN ()), (((0.27192480509558914, '19361429', '0.0521488268311987', 0Xffffffffcfb345e8, '.^P|'))>=((x'38dc', 0xffffffff8267ccb7, NULL, 0.924558750443824, x'0023')))))); -- 6ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN ()))%(((((((((-8.88007871E8)AND(NULL)))OR(NULL)))OR(0.6985080856402224)))OR(x'')))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'')OR(x'')))OR(x'3147')))!=('726556366' COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('1034173819' COLLATE BINARY IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1786164419'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((0.06797512026076435)OR(0.848674038903156)))AND(NULL)) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) BETWEEN (-1.7976931348623157E308) AND (645265154)))|(CASE WHEN '-986302944' THEN 0x17c061f8 ELSE x'' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LENGTH(CAST(0.25830464716547386 AS TEXT)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '' THEN NULL ELSE NULL END)IS((NOT ('1228140891')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1517102070 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1851147160 1140211290 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '931848968 0 sz=1910988296 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-687554241 sz=-1765204189 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE -1681618566; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((((0.9992607451196124)OR(0.48313949895125985)))OR(0.7078999584272202))  WHEN ((0Xffffffffb7c868b7)IS NOT(NULL)) THEN ((-1.79774712E8)|(0.670172838930658)) WHEN ((((0.3551476080571643)OR('')))OR(NULL)) THEN CASE WHEN 'TRUE' THEN x'' ELSE '' END WHEN ((0.16506681550851043)+(x'')) THEN ((x'')<=(NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('Ds')>>(x'')) COLLATE RTRIM; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1744744150 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-290749447 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '997844896 sz=-179774712 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1909494689'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 2ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-458753882 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((IFNULL(NULL, 'kksck7')) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2128460111'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)IS(0.3551476080571643 COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '4 0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)AND(NULL)))AND(-2.099302864E9))) BETWEEN (((('1969543260'))<=((x'')))) AND (((NULL) NOT BETWEEN ('C_쒞0^') AND (0X71bd156b)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((((x'')) NOT BETWEEN (('')) AND (('EJ자>햁?'))))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (x''))) BETWEEN (((((424741154)OR('0.08090066721805234')))OR('1417464713'))) AND (CAST('r_/,V8j' AS TEXT))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=1 noskipscan'); -- 7ms;
DELETE FROM sqlite_stat1 WHERE (((~ ('U*[Xፁ햡,['))) BETWEEN (((NULL)IS NOT(x''))) AND (((((x'ed4e')AND(NULL)))AND('wWDZ<C)S')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '-1389563392' THEN x'3278' WHEN x'' THEN NULL WHEN 0.499408851820353 THEN 0X2a44f16a WHEN 0.5615430701926938 THEN '997844896' WHEN NULL THEN 0.9214054173978187 ELSE '899736689' END) BETWEEN ((x'' IN ())) AND ('f4e-w' COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (-63990238))) NOT BETWEEN (((0.48642541501403125) ISNULL)) AND (((NULL) NOT BETWEEN (0X7dfef349) AND (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '256799273 1228140891 1417464713 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2015536962 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=927523718'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (~ ('')) THEN CASE 0X777ed592  WHEN ' }I(o-' THEN x'1612' WHEN 0X233511a6 THEN 2111608161 WHEN '' THEN '-514244607' END END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=236379170'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-1221924744 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE QUOTE(CASE 0.21310514942990966  WHEN -1247786747 THEN 0X1a0f0ced ELSE x'' END); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(NULL AS INTEGER) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((('ꭢBP}''!D}')LIKE(-888007871)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((('WWDZ<C)S', NULL, '0.9992607451196124'))>=(('pf<*+OiR\r', 1228140891, NULL)))  WHEN '' THEN ((-1389563392) NOT BETWEEN (x'5219') AND (NULL)) WHEN ((0.19835298711488247)LIKE(0.848674038903156)) THEN CAST(NULL AS TEXT) WHEN ((((((((((((NULL)AND(0.5615430701926938)))AND('-1e500')))OR('')))AND(0.10026491261079651)))AND('-1979090777')))AND(NULL)) THEN (NULL IN ()) ELSE ((NULL) NOT NULL) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 1900859064 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1652657601 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=12613352 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (CASE WHEN NULL THEN '1554557981' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'')AND('')))OR(0.41513966538710545))) BETWEEN (((0xffffffffa5128e95)/(''))) AND ((('')IS(0xffffffffd026960d)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.17646826843894747; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-836892425 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LIKELY(DISTINCT '-401943135'))OR(((0.7346498940914444) NOT BETWEEN ('0.1285512530217584') AND ('0.7078999584272202')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '128236651 0 sz=1557923738 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('12613352') NOT BETWEEN ('.m䡂Pfl8') AND ('0.3551476080571643'))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '150529497 sz=128236651 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-1107660286 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2127434673 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.14706252388343466) ISNULL)) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-650197858 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-518415977'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (CASE WHEN '0.48642541501403125' THEN x'' ELSE '-1173775235' END)); -- 1ms;
DELETE FROM sqlite_stat1 WHERE IFNULL((((NULL))<((''))), CAST('-1389563392' AS TEXT)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '374182263 2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-569979021 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-1613650011'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1687154934 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-486664555 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1981068048 sz=-31933314 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=265732833 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.1285512530217584; -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((x'')%(NULL)) THEN ((((((((x'')OR('')))AND(NULL)))OR(x'')))AND(x'442435d0')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-1190318964 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '972738463 sz=645265154 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-588637816'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '470115732 sz=-802777587'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('')GLOB(0.04365591159003224))) NOT BETWEEN ((('-309419331') IS FALSE)) AND (CASE WHEN NULL THEN NULL END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1220249376 sz=689265297 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1411039981 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=150529497'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNICODE((((0.27705809518871627)) BETWEEN ((-8.02777587E8)) AND ((x'bd69')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1226267264 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=341786481'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1727461037 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-321921882 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1091253949 sz=-2143493870 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=899736689'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-1525510507'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)|(NULL))) BETWEEN (json('2015536962')) AND ((((x'')) BETWEEN ((NULL)) AND ((0.9992607451196124))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((('1531144918') NOT NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- ('')))/(((((NULL)OR(NULL)))OR(9.72738463E8)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 -124122469'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1946907933 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL IN ()) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN NULL THEN '-813719854' WHEN '' THEN 0Xffffffffff014842 WHEN 0.7601675201230503 THEN NULL WHEN x'e9d8' THEN x'ed83061c' WHEN -141316243 THEN '-1038680550' END) NOT BETWEEN ((('-396606171')IS NOT(x''))) AND ((('-1845876723')>>('-88171505')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'', NULL, '2113860425')) BETWEEN (('645265154', '', 0.6985080856402224)) AND ((NULL, '265732833', 0.6305583271834668))) IN (x'' COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-687554241 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1506629735 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 1603525397 424741154 sz=-406590862'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CAST(x'' AS BLOB)  WHEN CAST(NULL AS TEXT) THEN CASE WHEN NULL THEN 0X648ff0f6 END WHEN ('-1774648367' IN ('-290749447')) THEN ((((NULL)OR(NULL)))AND(NULL)) WHEN ((x'154d') NOT NULL) THEN CASE '292829129'  WHEN '' THEN NULL ELSE NULL END END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ('S4' IN ())  WHEN ('' IN ()) THEN ((0Xffffffffde06cf73)!=(NULL)) ELSE x'' END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST('972738463' AS REAL) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1188655896 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(DISTINCT CASE 0.3902993385199467  WHEN NULL THEN 0.19835298711488247 ELSE x'' END); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('')*('')) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1173775235 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE RTRIM(CASE WHEN x'' THEN '-829346575' ELSE 0.7740004733150088 END); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN NULL THEN '' ELSE 0.8926061831734504 END) NOT BETWEEN (CAST(x'295a' AS TEXT)) AND (0X6ab91f85 COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('99.	DvV')OR(x'b88aabb2')))OR(2015536962)))<=(ABS(DISTINCT ''))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')<(NULL))) BETWEEN ((('hJ') NOT BETWEEN (0.806066620380961) AND (0x763eb59e))) AND (x'2fd3')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'5ba6'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (1796651391 IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '19361429 -1263886447 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('꿶\jmJD')/(0.029583497170291184)) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1363302259 sz=2130731944 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '590680486 sz=702059642 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1791232864 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((2.127434673E9)|('U*[Xፁ햡,[')) IN (CASE x'275e2629'  WHEN 0.7784924199737596 THEN NULL WHEN x'5932' THEN x'36f6' WHEN x'8223' THEN 0.7778981392206742 ELSE '-530273020' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((NULL) NOT BETWEEN ('8z') AND (x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('0.5499525644277965' IN ()) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-2112737622 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('-211359961')GLOB(2004130427)) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-2053930101'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.32049706884539564) NOTNULL) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL))!=((NULL)))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-514244607 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.21294016286619355))<((NULL)))) NOT BETWEEN (x'') AND ((((('1217374468')OR('׍]')))OR('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-1606926053 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1909494689 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1492775695 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1491248176 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1466195955 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=50126954 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-704086139 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.3716196026233819; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 0 sz=1663599955 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((((((0Xffffffffde06cf73)AND(0.4561379313792373)))OR(0.23224102104482358)))OR('_.)')))AND(x'ce04')) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((NULL)%(0.14558914446689708))  WHEN ((-4.01943135E8) BETWEEN (NULL) AND (0Xffffffffdc95f32e)) THEN ((0x1fb4e2aa) BETWEEN (0X20717411) AND (-458753882)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((UPPER(NULL)) NOT BETWEEN (((0.7199496026266746) BETWEEN ('3,v*') AND ('0.029583497170291184'))) AND ((('180780721') BETWEEN (0.2643180818351134) AND (0.4034908643270426)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'7c2a') BETWEEN (NULL) AND (''))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 0 sz=-1380607514 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-1652657601 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-726468355 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=702059642 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((('') IS TRUE))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (('-1038165229' IN ()) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 2.004800914E9; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=726556366 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1208083622 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) NOT BETWEEN ((CASE WHEN 'r_/,V8j' THEN 'PL' WHEN NULL THEN NULL WHEN x'' THEN 1627628974 END)) AND ((LIKELIHOOD(DISTINCT 1.687154934E9, 0.5277069495620764)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-612536875'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.19891108138007663 IN ()))LIKE(((NULL)<<('')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1122273140 sz=150529497 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1427529760 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1464807914'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1190318964 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('&>' AS INTEGER))GLOB(NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1322967034 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.9506514534490492) IS TRUE)) BETWEEN ((((('1554557981')OR(NULL)))OR(0.2717303821466285))) AND (CASE WHEN x'57b7' THEN 'JC' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELIHOOD(DISTINCT CASE '-1422061212'  WHEN -1.909494689E9 THEN '-528771384' END, 0.1664364557675212); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1542088042 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-2034573520'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.44344543171943773 COLLATE NOCASE) NOT BETWEEN (HEX(0.3087048947360719)) AND (((x'')-('0.848674038903156')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-401943135'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((('l>')AND('470115732')))OR(-8.10334744E8)), NULL COLLATE NOCASE, x'dfba4560' COLLATE RTRIM, x'8e4c' COLLATE BINARY, ((NULL)&(''))))!=(((((x'4cef8cba', x'', 'dG'))!=((0Xfffffffffabf5b65, NULL, NULL))), '-1221924744', 0.7478676058153797 COLLATE NOCASE, CASE WHEN 'L' THEN 1.916491327E9 ELSE x'5da8' END, (('O!䮪DL21') IS TRUE)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'2899' COLLATE BINARY) IS FALSE); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 4 sz=2125901079 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE x'' COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=1276097974 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((NULL)=(x''))  WHEN COALESCE(NULL, x'') THEN (((163825552, 0x6b0f229e, 8.99736689E8))<=((x'', x'ac0e', 0.9492590097139887))) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-227545751 sz=1741746227 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1131264867 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) IS TRUE)) NOT BETWEEN (NULL COLLATE BINARY) AND (((0.8103120703776724)=(0.47358129786610637)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '113851563 -657532948 sz=-1539533039 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NOT ('ᵇT')))AND(((0.5469193923292416) NOT BETWEEN (x'a8d2') AND ('#B4gFA')))))AND(((x'')==(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=121925737'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '' COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1416567386 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-1189290647 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1967391090 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-325944440 sz=-235732642 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(PRINTF(645265154, NULL, '') AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=846924645'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=951561925'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN (('')) AND ((x''))) COLLATE BINARY; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.8048086709072532 AS NUMERIC))<<(((((((((((((NULL)AND('927523718')))OR(x'a7c2')))OR('367178565')))OR('689265297')))OR('ds')))AND(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.32894251527658835)) NOT BETWEEN (((('')+('x3b⏶]FR')))) AND ((CASE 0.844878819397761  WHEN 'u' THEN 'Xeo磠>-Ohn' ELSE '' END))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=354455422 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('') NOTNULL)) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('768340828')) BETWEEN ((NULL)) AND (('334990158')))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1045357558 -592674103 sz=-757388802 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2085939972 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) BETWEEN ('1765955332') AND (0.09284630131108673))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1588079817 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.33314055360819905)>(CASE 0Xffffffffdcea1988  WHEN NULL THEN '0.23224102104482358' WHEN 0x4c71edf7 THEN '0.7784924199737596' WHEN NULL THEN x'' WHEN x'' THEN 726556366 WHEN 0.4178988085187756 THEN 'DB' ELSE '6' END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL IN ()) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.32663708807661296)>=(x'06bd'))) BETWEEN ((((x'90a7', 'TRUE', '-879407150'))<=((x'6ced', 1.228140891E9, 0xffffffffba099c7d)))) AND (('' IN ('0.41513966538710545')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0x490cd7a1)GLOB('1554557981')))|(((NULL)IS NOT('r_/,V8j')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=59481801 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=72098903 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '322677118 0 sz=927945783 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '424741154'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LAST_INSERT_ROWID(); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1668958508 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE LTRIM(((((1542732526)AND(0Xffffffffab3d1164)))OR(0.34224686375504165)), (('') NOT NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=770277339 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-183247663'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 sz=150529497'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (json_insert(0.6257560515861396, '', '1894999027'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-483526801 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-82025490'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '6 sz=-986302944 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1058881661 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-63990238'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=2004800914 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '390114366'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 -672154924 sz=374182263 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=2044777039 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE WHEN 'AV' THEN '' END THEN (('')<>('-50339045')) END; -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE '12613352'  WHEN (((601807690, x'536f', 0.5179490696157406))<>(('c13&wT%\r', x'03a2', NULL))) THEN CASE x'aaa5'  WHEN '' THEN x'' END ELSE NULL COLLATE NOCASE END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-2040412107'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=391229369 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('-145356092') BETWEEN (-1.613650011E9) AND ('	C')) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1979090777 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('pf<*+OiR\r')&(((((((((((((NULL)OR(x'')))AND(x'62c7')))OR(NULL)))AND(0x2e22a24b)))AND('')))OR('724963966')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=940433144 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1531020717 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.5598871572702744 IN ()))!=(0X72821fda)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-687554241'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=982457097 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1176029628 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((x'663e'))==((x''))) THEN CAST(NULL AS REAL) ELSE (+ (1.411039981E9)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1495615487'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL(DISTINCT NULLIF(0.9502987882491662, '-2047853050'), CAST('0.47143484370341704' AS TEXT)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '1077938435'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((-1.211602761E9) NOT BETWEEN (NULL) AND (0.806066620380961)))AND(CASE WHEN x'' THEN '1634155398' END)))AND(((((((((0.6768250625031206)OR(NULL)))AND(x'')))OR(x'')))OR(NULL)))))OR(((('X!~\n2aU^')) BETWEEN ((-802777587)) AND ((1140211290))))))AND((((x'')) BETWEEN ((NULL)) AND ((169956870))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL COLLATE NOCASE IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-931267903 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=488368274'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-915198156 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((711214621) NOTNULL))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1107660286 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)AND(1228140891)))OR(x'3459a2f7'))) BETWEEN (((0.6153412360923558) ISNULL)) AND ((('㍿븵\nfRl%?') NOTNULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=374182263'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-486664555 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('-1979090777') NOT BETWEEN (NULL) AND ('dG'))  WHEN x'' THEN '0.48313949895125985' COLLATE RTRIM ELSE (('now')%(x'3087')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'99e1')IS NOT(0.14059722275457642))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1634823103 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'e639'; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1517102070'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'' COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=2136614778 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-464936806 0 sz=1403693459'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=24498695 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1722551099 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.7321571699499843)IS(0.8374552774509411)))|(NULL COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1306005777 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1654067591'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((((((((NULL)OR(2015536962)))AND(0.6506435869991372)))OR(0.48423556342171536)))OR(NULL))  WHEN ('0.9502987882491662' IN ('1679633001')) THEN NULL COLLATE NOCASE END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1500600344 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1831435003 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('') NOT BETWEEN (CASE WHEN '' THEN 0.6047653797082048 END) AND (('-2062595661' IN (NULL, x'b1aa')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((((398483960)&(x'')))OR(CAST(0Xc17f3ad AS INTEGER))))OR(((NULL)-('398483960')))))AND(((x'')*(NULL)))))AND(((NULL)&(0x468a8f3b)))))OR(('w0%' IN (NULL)))))OR((+ (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'2d5fc390') BETWEEN ((+ (0.77660777721199))) AND (CASE WHEN x'55df' THEN 0X2a44f16a END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=424741154'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'a616') BETWEEN (2103182187) AND (1411039981)) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1378351076 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CAST(NULL AS REAL)  WHEN -1.173775235E9 COLLATE NOCASE THEN 0.21056679856888494 END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1328536194 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1806443382 2128460111'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((-948010032))>((0.25519120484034785))), ('.F广''?*U' IN ()), ((x'')>=(''))))<=((((((x'')OR('1910988296')))AND(x'fee9')), ((((NULL)OR(0xffffffffe2fe1695)))OR(0.18830041822409382)), ((-1671688939)>>(-1.190318964E9))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-494925051'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=405301537 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=702059642 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1322236409'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LIKELIHOOD(x'', 0.5035147850462586)) BETWEEN ((((('0.1285512530217584')AND('|u#')))OR('-725170841'))) AND (((0.5033783114464777) ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-63990238 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1389563392 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-2125626571 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1909494689'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST('496644505' AS REAL))AND('645265154' COLLATE BINARY)))AND(((x'e1aa') BETWEEN (0.02788637080496803) AND ('-2123730827')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=645265154 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1972749626 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1547372216 sz=24498695'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1222300272 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1933179733 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1969243809'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((-309419331)AND(NULL)))OR(NULL)))AND(0x791f2f98)))OR(0.3980297507707452)) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((TIME(x'', NULL, '127896643'))AND(IFNULL(DISTINCT NULL, x''))))AND((('-565949165')IS('-569979021')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CAST(x'd9c5' AS TEXT)))>=((((('|u#', x'', x'')) BETWEEN ((0.2146389934517472, '0.7354923635329763', ')Q')) AND (('-1909494689', 0.5515648865804548, 'tI,*')))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1557923738 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=927523718'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) IS FALSE))&(CAST('' AS TEXT))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')&(NULL)))>>((('-382906828') NOT BETWEEN (NULL) AND ('u')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('-290749447' IN (0.17646826843894747, NULL)) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1517102070 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE WHEN '1\nN,*~' THEN x'024e' WHEN 'l>' THEN x'f2ed' WHEN 0.5110824203220213 THEN x'' END)AND((('-802777587') NOT BETWEEN (x'c01d') AND ('?c뤅ph8Je')))))AND(TYPEOF(DISTINCT 931848968))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ''  WHEN ((0.370946131215798) IS FALSE) THEN LIKELY(x'16b0') ELSE NULL END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'7425' COLLATE NOCASE)OR((('0.03284848865561296')>(0.4424945011442586)))))OR(TYPEOF(NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=-1867259221'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) NOT BETWEEN ((((x'') NOTNULL))) AND ((((('57617420', -1.7976931348623157E308, x'547c')) BETWEEN ((NULL, NULL, '-1444419306')) AND (('488210018', '', NULL)))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-9223372036854775808 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('470115732')) BETWEEN ((x'')) AND ((NULL)))) NOT BETWEEN (((0.4277838476201308) NOT BETWEEN (2.3637917E8) AND (1.7976931348623157E308))) AND ((NULL IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'8d2d' AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=76841004 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('76409720') BETWEEN (((NULL)>>(NULL))) AND ((+ (0.4961973521529456)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1173775235'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=972738463 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-2124447685'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=128236651 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1247526872 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TRIM(0.6932332739068836, x'b514'))/((0.13742379684289352 IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1613650011 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'1892'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-830799659 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '424741154 2'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-2119983237') BETWEEN (CAST('-88122523' AS INTEGER)) AND (CASE WHEN '1910988296' THEN x'' WHEN -2.099302864E9 THEN NULL WHEN 0.02788637080496803 THEN 0.3690804944560946 ELSE NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1741139009 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1061259594 997844896 sz=-888007871 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST(NULL AS TEXT))AND(CAST(x'' AS INTEGER))))OR((('_*z|*4') NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-88122523 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE PRINTF(((0.5033783114464777)IS('uTm(')), (((NULL)) NOT BETWEEN ((NULL)) AND ((NULL))), ((((0.24999142915707107)OR(NULL)))AND('-1475422933'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1595636941 sz=-716972741 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 4 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1930470268'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=132025380'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULLIF(DISTINCT 0.9178325887543843, 0.08090066721805234))==(((0.14017031701596583) IS TRUE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=1983007482 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1594457537'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 2117678902 sz=-2051237670 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(COALESCE(DISTINCT '1859144488', NULL) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1247786747 sz=535738628 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-483772903'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE NULL  WHEN '-421010163' THEN 'v3' ELSE '1554557981' END COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((x'8301')/(0X4f1677dc)) THEN (('0.47143484370341704')AND(0.8550915612237735)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '12613352 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (NOT (x'')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1082899443 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '899736689 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-1127431254'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1380933922 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) NOTNULL) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-722224269 -175782763 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1127861678 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1140211290 4 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=398483960'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1765204189 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.8894719068325512)<<('-31933314')))OR(((0.54722992184018) BETWEEN ('7MH9)j3&') AND (NULL)))))AND(CAST('-1211602761' AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL)<=(0.16630435018420986)) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE SQLITE_SOURCE_ID()  WHEN ABS(DISTINCT -6.50197858E8) THEN (('')||(1244641457)) ELSE (('w0%') BETWEEN (0.42452917035276083) AND ('')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0xffffffffd404d61b, 0x9c3c790, '')) BETWEEN ((((NULL) BETWEEN ('') AND ('-1251064538')), (NOT ('431170369')), CASE WHEN '' THEN x'' END)) AND (((((x''))<>((x''))), (('')IS(0.8793109732388533)), ((x'e629') NOT BETWEEN ('') AND (x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=1244951416 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=1227104691 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1140211290 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1527210517 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((IFNULL(NULL, 0Xffffffffb56d17c1))<(((x'') BETWEEN (NULL) AND (x'8eac')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (MAX('-684148921', x''))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (CASE NULL  WHEN '' THEN NULL ELSE '.^p|' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=76728486 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((NULL, 0.9634453800128714, '-867996205')) NOT BETWEEN (('951561925', ((NULL) NOTNULL), ((NULL) NOT BETWEEN (0.6971138767890378) AND (NULL)))) AND (((((NULL)) NOT BETWEEN (('')) AND ((236379170))), ((NULL) IS TRUE), 1872495376))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-821972397 0 sz=-571764334 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE x'027f'  WHEN x'' THEN NULL END)/('9d\n')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 0 sz=1034173819'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE 0.953295649565029 COLLATE NOCASE  WHEN (+ (0.9482900988453379)) THEN CAST('' AS TEXT) WHEN (((('-251885806')OR(1417464713)))OR(NULL)) THEN ((x'')||(NULL)) WHEN ((('')) BETWEEN (('0.3087048947360719')) AND (('-1228417523'))) THEN (- (0.9910311822808228)) WHEN ((x'88c5') ISNULL) THEN CAST(x'' AS INTEGER) WHEN (('E_ F.Y	') NOT BETWEEN (0.0015064065727421472) AND ('鼶志镡o_섿>k')) THEN IFNULL('735798859', x'') END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-447679705'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1996045819 sz=1237395256 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1107660286 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1507827953 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-1864603261' COLLATE NOCASE)<=(((x'adf7')=(-724698988)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CAST(x'91a7' AS NUMERIC)))<>((CASE WHEN NULL THEN 'Za#T' ELSE x'3ec9' END))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1019472022 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((GLOB('!B\nF.U', '}K7'))+(0.9526498200541628)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2124410042 0 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (+ ((- ('Iw<w')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=709161322'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-835444932 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELIHOOD(DISTINCT HEX(x''), 0.5353690733690704); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1525510507 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'' IN (24498695, 0.9169907282398371)) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 -1249291279 sz=972738463'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '4'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE 0Xffffffffb7455d5c  WHEN '-1012348360' THEN '-1107660286' END THEN ((NULL)/(x'dd44')) ELSE ((NULL)+('0.17646826843894747')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=599049449'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-514244607'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-436272434'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=720190439 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((0.7133486908035979)OR(((NULL) IS TRUE))))OR((('FALSE')>(NULL)))))AND(('1744744150' IN (x'117b')))))OR(CASE x''  WHEN x'' THEN x'' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((1120259319, NULL, 0.7784924199737596)) NOT BETWEEN ((0.9818126634641618, 9.97844896E8, 0Xffffffffc5363620)) AND (('563415503', '''Y', '-810334744')))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.983977164065724 AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-514244607 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=355879011'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '294565616 sz=-1637050881 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (COALESCE(-8.10334744E8, 'kksCK7'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2138457441 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1908217195 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1253183734 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1900859064 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2113860425 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((+ (NULL)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-501305730 sz=1411039981 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('Pg)\n') NOT BETWEEN (NULL) AND (NULL)) COLLATE NOCASE; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=570189047 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'ba04'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1495877836 sz=499947699 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1 noskipscan'); -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-955234677'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=256799273 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('951561925') NOTNULL)) BETWEEN ((('') NOTNULL)) AND (DATETIME(NULL, x'', -2139825692))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1589260152'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE json(CASE '%rl.僋Jv&3'  WHEN '1432418087' THEN x'' ELSE 0.48313949895125985 END); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1651298047'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('225819881')<=(0.9808024400805474))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=150529497 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ ('*걁Z'))) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '686635292 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-328855419 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=842614146 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ('-1762167416')) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL, -1.211602761E9, 352644596, 0.2717303821466285, '0.7740004733150088'))>(('9d\n', 0.7409377952502524, NULL, x'', ''))) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((-1763930620) NOT NULL) AS INTEGER); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (+ (CASE WHEN x'' THEN x'a22f' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'', '-2119983237', NULL))<>((NULL, 0.9482735563631486, '408417474'))) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(((0X4851a2a1)IS('ᰬ/')), (('-486664555')/(''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1884707785 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1114464480 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((('', '-71572481', 0Xffffffff90025d6b)) NOT BETWEEN ((0.4916358948075623, 0x4da2d4ac, '%0{')) AND ((x'', 0.33777584347308265, NULL)))  WHEN ((NULL) NOT NULL) THEN ((0.7601675201230503) IS TRUE) WHEN -273143159 COLLATE NOCASE THEN CAST(x'e260' AS INTEGER) WHEN CASE 0.006057981501442211  WHEN NULL THEN 0.5695982792728306 END THEN CASE WHEN 0Xffffffffeba6ef2d THEN 398483960 ELSE 'pC***Qꞎ_' END END; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((7.09161322E8) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL(DISTINCT ((x'')IS NOT(2055632663)), (x'' IN ())); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '469572851 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '702059642'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER(DISTINCT 0.19835298711488247) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('0.7601675201230503' IN ())) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((-2119983237) NOT BETWEEN (NULL) AND ('-621809738')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((- (x'2761e013908e')))OR(((NULL) ISNULL))))AND(CASE WHEN x'' THEN x'' END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1487141737 sz=1554557981 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.6257560515861396)) NOT BETWEEN ((x'')) AND ((x'')))) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-1064451348 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('424741154') NOT BETWEEN (NULL) AND ('-1604020273')) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((0.7686004079311505)AND(x'')))OR(0.19813787731765298)))AND(0.2884683258593812)))OR(x'')))AND((('1908217195')<=('	Eg[纤4IH')))))AND((~ ('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-290749447 sz=-179313618'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1542732526 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL))==((0Xffffffffde4707d5))) IN ()); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1159138420'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-1591771002 IN ()))<(((((((((-1536867076)AND(0.3911643370250375)))OR(0.3256947316655797)))AND(0X439d72af)))OR(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE '0'  WHEN x'167b' THEN 0xffffffffa6a20478 END) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (NULL IN (x'5345', x'')) THEN (~ ('0.5110824203220213')) END; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '64967779 1088447327 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1411039981 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('-1410154342' IN (x'9f9e')) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1851147160 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2015536962 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-2145942638 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1128444292 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 1935408030 sz=-1597843868 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1741139009 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'' COLLATE RTRIM IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (x''))) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=804967809'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 0 sz=-19094186 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.7509982995650414; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS REAL))<<((((x''))<>((x'6448'))))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)==((('%rl.僋Jv&3') NOT BETWEEN (NULL) AND (0.7828057017964771)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((4.70115732E8)>=(0.7650735113505073)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=1147125829 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-515662686 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-179774712'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1417464713 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(GLOB(0.5110824203220213, NULL) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (x'')))AND((('0.27192480509558914')>('')))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-631867684 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') NOT BETWEEN ((-1218928721 IN (-2.90749447E8))) AND (CAST('' AS BLOB))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE RTRIM(((('-380593594', '', 'qg')) NOT BETWEEN ((0.3854887090828336, '917321437', '-1613650011')) AND ((x'', x'cc23', x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1511547152'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((((x'')OR('-1659967689')))OR('')) THEN (('')LIKE(NULL)) ELSE UNLIKELY('P0#qw馗P*') END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1511235509'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1050317353 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '34719628 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN NULL THEN '䎘-냰-1S7B' ELSE '䀀(' END)!=(JULIANDAY(NULL, '/V', x'66e4', x'', NULL, 1412573292, NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 -621484840 sz=-194073758'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=804967809 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '4 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1773998794 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1315251293'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1557923738 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=951561925 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=756697679 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '269534025 1425888350 sz=-500594402 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=833985135 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1121573243 sz=428867704 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT (('start of monthl') NOT BETWEEN (NULL) AND (NULL)), (((1075777715)) NOT BETWEEN ((NULL)) AND ((NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 2 sz=76761316 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS REAL))<(CASE WHEN '709161322' THEN '' ELSE x'' END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((1608441816)AND(x'')))AND(0.12860509942039533)) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-478559735 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 -88122523 sz=-457131370 unordered noskipscan'); -- 0ms;
REINDEX; -- 0ms;
PRAGMA temp.journal_mode = DELETE; -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (NULL, 'o2N', NULL); -- 0ms;
CREATE TEMPORARY TABLE IF NOT EXISTS t0 (c0 INTEGER , c1 INT , c2 INTEGER , PRIMARY KEY (c2, c0)); -- 0ms;
PRAGMA main.cell_size_check = false; -- 0ms;
INSERT OR ABORT INTO t0 VALUES (NULL, 'dp㡯Q爂k', '<Y()'), (x'', x'100c', x'e8ad'), (x'', NULL, '-1909494689'); -- 0ms;
UPDATE OR FAIL rt0 SET (c2, c1, c2)=(0.16365643314982836, '[|', 0x7ddc9561); -- 0ms;
PRAGMA stats; -- 0ms;
ALTER TABLE t0 ADD COLUMN c7 TEXT; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA legacy_file_format = false; -- 0ms;
UPDATE OR REPLACE t0 SET c7='J-ፁ1.r|>f' WHERE (((CAST(t0.c2 AS NUMERIC)))=((((((0.4034908643270426)AND(t0.c2)))OR(t0.c1))))); -- 0ms;
ANALYZE; -- 0ms;
DROP TABLE t0; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET (c1)=(NULL); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
UPDATE OR IGNORE rt0 SET (c1, c2, c0)=(1.50529497E8, '', '128236651'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.checkpoint_fullfsync; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER(DISTINCT NULL) COLLATE NOCASE; -- 0ms;
COMMIT TRANSACTION; -- 4ms;
INSERT OR REPLACE INTO rt0 VALUES (1604232292, 0.11061084904498608, x''), (x'ca65', x'', NULL), (0.8697249490693715, 'PS', 0.8048086709072532); -- 0ms;
INSERT OR ABORT INTO rt0 VALUES ('Y#Gvl([', x'', 0.9651517716160046), (NULL, 0.12005404206100345, x'92af'), (0.27670221809014206, 0.12895446139053623, -1007231719); -- 0ms;
INSERT OR FAIL INTO rt0(c2, c0) VALUES (0Xffffffffc7a85fe9, NULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c1) VALUES ('Y+'), (x'059c'), (NULL); -- 1ms;
INSERT OR IGNORE INTO rt0(c1, c0, c2) VALUES (x'', 0.6338382134986011, 'TI,*'), (0.5540257376011227, 0.7078999584272202, 3963589), (x'', 0.9291140030950048, '0.9482900988453379'), ('-1008197998', '12613352', 1.908217195E9), (NULL, 0.8808102235834047, NULL); -- 5ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO rt0(c2) VALUES ('hꝂu'); -- 0ms;
PRAGMA main.auto_vacuum; -- 0ms;
VACUUM main; -- 1ms;
INSERT OR IGNORE INTO rt0(c0) VALUES (7.6841004E7), (-326936345), (NULL); -- 4ms;
PRAGMA wal_autocheckpoint = 2273670908014598607; -- 0ms;
ANALYZE main; -- 1ms;
INSERT OR ROLLBACK INTO rt0(c2) VALUES (x'763f'); -- 0ms;
PRAGMA recursive_triggers; -- 0ms;
ANALYZE rt0; -- 0ms;
VACUUM main; -- 1ms;
UPDATE OR ABORT rt0 SET c0=1.7976931348623157E308, c1=-1408539501, c1=NULL WHERE (((rt0.c1)<=(rt0.c2)) IN ()); -- 0ms;
UPDATE OR IGNORE rt0 SET c0='1517102070', c0=1554557981; -- 0ms;
PRAGMA main.locking_mode; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c0, c1) VALUES ('', x''); -- 0ms;
INSERT OR ABORT INTO rt0 VALUES ('HA', '674102914', ''); -- 0ms;
INSERT OR FAIL INTO rt0(c2, c1) VALUES (NULL, x'7dcf'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
PRAGMA foreign_keys = false; -- 0ms;
INSERT OR IGNORE INTO rt0(c0) VALUES (NULL), (0.47182834208196245), ('1531826938'); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
END; -- 0ms;
INSERT OR FAIL INTO rt0(c1, c2, c0) VALUES (0.521609246148064, 0.3690804944560946, '0MgⲒ-'); -- 0ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (645265154), ('1298337006'), (NULL); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET c2=-1.221924744E9, c2='-2071702620'; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE rt0 SET c1=x'', c0=NULL; -- 0ms;
CREATE TEMPORARY VIEW v0(c0) AS SELECT ((((rt0.c1)AND(rt0.c1)))>(((rt0.c2)>(rt0.c2)))) FROM rt0; -- 0ms;
UPDATE OR REPLACE rt0 SET c2=x'7370ea68'; -- 0ms;
DELETE FROM rt0; -- 0ms;
PRAGMA defer_foreign_keys; -- 0ms;
UPDATE OR IGNORE rt0 SET c0=NULL, c0=x'', c0=NULL; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET c0=0.8618369244977876; -- 0ms;
UPDATE rt0 SET (c1, c2, c0)=(NULL, 'MTkDx', 0Xffffffffa43b61bd); -- 0ms;
UPDATE OR IGNORE rt0 SET c0=x''; -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c2) VALUES (x'', 726556366); -- 7ms;
COMMIT TRANSACTION; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED); -- 0ms;
UPDATE OR IGNORE rt0 SET (c1)=(''); -- 0ms;
UPDATE OR ABORT vt0 SET c0='590680486' WHERE (('2127434673')<((((3.74182263E8, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, NULL))))); -- 0ms;
UPDATE vt0 SET c0='1780354968' WHERE (CAST(vt0.c0 AS TEXT) IN (HEX(vt0.c0))); -- 0ms;
ANALYZE main; -- 0ms;
PRAGMA secure_delete; -- 0ms;
ANALYZE; -- 0ms;
UPDATE rt0 SET (c1)=(x'') WHERE ((((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))))>((((rt0.c2) ISNULL)))); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 13); -- 1ms;
PRAGMA temp.mmap_size; -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=('-399723910') WHERE SQLITE_VERSION() COLLATE RTRIM; -- 0ms;
UPDATE OR IGNORE vt0 SET c0='FL.MYJ'; -- 2ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
PRAGMA main.secure_delete = FAST; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', '2 1411039981 sz=-1148491361 unordered'); -- 1ms;
UPDATE OR IGNORE rt0 SET (c2)=(0.3044177518711926) WHERE (- (((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)))OR(NULL)))); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=NULL, c0=x''; -- 1ms;
REINDEX; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=9'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
PRAGMA main.incremental_vacuum; -- 0ms;
PRAGMA temp.application_id; -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c2) VALUES (NULL, x''); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL), (NULL), (NULL); -- 0ms;
PRAGMA main.incremental_vacuum; -- 0ms;
UPDATE OR IGNORE rt0 SET c0=x''; -- 1ms;
UPDATE OR FAIL vt0 SET c0=NULL WHERE (((vt0.c0)) NOT BETWEEN ((1517102070)) AND ((vt0.c0))); -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=('DB') WHERE (~ (((rt0.c2) NOTNULL))); -- 1ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET c0=0.18326340376941352; -- 0ms;
UPDATE OR REPLACE rt0 SET (c2)=('-2047853050'); -- 0ms;
UPDATE rt0 SET (c1)=(0.5897622631961149) WHERE ((((rt0.c2)>=(rt0.c2))) NOT BETWEEN (0Xffffffff833ad524) AND (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END)); -- 0ms;
UPDATE vt0 SET (c0)=(x''); -- 1ms;
UPDATE OR IGNORE rt0 SET (c0)=(0.1285512530217584); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c1, c0) VALUES ('*oꝌ5趠4㫮o', -689150425); -- 3ms;
UPDATE OR IGNORE rt0 SET (c0)=('') WHERE NULL; -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES ('jj'); -- 0ms;
UPDATE OR IGNORE vt0 SET c0='-2106783307'; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '62942'); -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE ((('-1519644940')>=(v0.c0 COLLATE RTRIM))) UNION ALL SELECT * FROM v0 WHERE ((NOT ((('-1519644940')>=(v0.c0 COLLATE RTRIM))))) UNION ALL SELECT * FROM v0 WHERE ((((('-1519644940')>=(v0.c0 COLLATE RTRIM))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON CASE WHEN (((v0.c0))>((v0.c0))) THEN ('-1473418436' IN ()) ELSE '}04NJ>Q9i' END;
SELECT DISTINCT v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON CASE WHEN (((v0.c0))>((v0.c0))) THEN ('-1473418436' IN ()) ELSE '}04NJ>Q9i' END WHERE (CAST(x'f582' AS BLOB)) UNION SELECT DISTINCT v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON CASE WHEN (((v0.c0))>((v0.c0))) THEN ('-1473418436' IN ()) ELSE '}04NJ>Q9i' END WHERE ((NOT (CAST(x'f582' AS BLOB)))) UNION SELECT DISTINCT v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON CASE WHEN (((v0.c0))>((v0.c0))) THEN ('-1473418436' IN ()) ELSE '}04NJ>Q9i' END WHERE (((CAST(x'f582' AS BLOB)) ISNULL));
SELECT DISTINCT v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON CASE WHEN (((v0.c0))>((v0.c0))) THEN ('-1473418436' IN ()) ELSE '}04NJ>Q9i' END;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((((+ (vt0.c0)))OR(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (x''))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((((+ (vt0.c0)))OR(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (x''))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((((+ (vt0.c0)))OR(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (x''))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c1, rt0.c2, vt0.c0, v0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c1, rt0.c2, vt0.c0, v0.c0;
SELECT ALL rt0.c1, rt0.c2, vt0.c0, v0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c1, rt0.c2, vt0.c0, v0.c0 HAVING (((((v0.c0) NOTNULL)))>=((COUNT(*)))) UNION ALL SELECT rt0.c1, rt0.c2, vt0.c0, v0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c1, rt0.c2, vt0.c0, v0.c0 HAVING (NOT ((((((v0.c0) NOTNULL)))>=((COUNT(*)))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, vt0.c0, v0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c1, rt0.c2, vt0.c0, v0.c0 HAVING (((((((v0.c0) NOTNULL)))>=((COUNT(*))))) ISNULL);
SELECT rt0.c1, rt0.c2, vt0.c0, v0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c1, rt0.c2, vt0.c0, v0.c0;
SELECT ALL rt0.c1, rt0.c2, vt0.c0, v0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c1, rt0.c2, vt0.c0, v0.c0 HAVING (((((v0.c0) NOTNULL)))>=((COUNT(*)))) UNION ALL SELECT rt0.c1, rt0.c2, vt0.c0, v0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c1, rt0.c2, vt0.c0, v0.c0 HAVING (NOT ((((((v0.c0) NOTNULL)))>=((COUNT(*)))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, vt0.c0, v0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c1, rt0.c2, vt0.c0, v0.c0 HAVING (((((((v0.c0) NOTNULL)))>=((COUNT(*))))) ISNULL);
SELECT rt0.c1, rt0.c2, vt0.c0, v0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c1, rt0.c2, vt0.c0, v0.c0;
SELECT ALL rt0.c1 FROM v0, rt0;
SELECT rt0.c1 FROM v0, rt0 WHERE (CAST(((rt0.c2) IS TRUE) AS NUMERIC)) UNION ALL SELECT rt0.c1 FROM v0, rt0 WHERE ((NOT (CAST(((rt0.c2) IS TRUE) AS NUMERIC)))) UNION ALL SELECT rt0.c1 FROM v0, rt0 WHERE (((CAST(((rt0.c2) IS TRUE) AS NUMERIC)) ISNULL));
SELECT ALL rt0.c1 FROM v0, rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (0.603305744475235) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (0.603305744475235))) UNION SELECT DISTINCT * FROM vt0 WHERE (((0.603305744475235) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT rt0.c0, v0.c0 FROM rt0, v0 GROUP BY rt0.c0, v0.c0;
SELECT ALL rt0.c0, v0.c0 FROM rt0, v0 WHERE (LOWER(DISTINCT highlight(rt0.c1, rt0.c1, rt0.c2, rt0.c2))) GROUP BY rt0.c0, v0.c0 UNION SELECT rt0.c0, v0.c0 FROM rt0, v0 WHERE ((NOT (LOWER(DISTINCT highlight(rt0.c1, rt0.c1, rt0.c2, rt0.c2))))) GROUP BY rt0.c0, v0.c0 UNION SELECT rt0.c0, v0.c0 FROM rt0, v0 WHERE (((LOWER(DISTINCT highlight(rt0.c1, rt0.c1, rt0.c2, rt0.c2))) ISNULL)) GROUP BY rt0.c0, v0.c0;
SELECT ALL rt0.c1 FROM v0, rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM v0, rt0 GROUP BY rt0.c1 HAVING CASE WHEN TYPEOF(DISTINCT MAX(rt0.c2)) THEN SUM(rt0.c2) ELSE (rt0.c2 IN ()) END UNION ALL SELECT ALL rt0.c1 FROM v0, rt0 GROUP BY rt0.c1 HAVING (NOT (CASE WHEN TYPEOF(DISTINCT MAX(rt0.c2)) THEN SUM(rt0.c2) ELSE (rt0.c2 IN ()) END)) UNION ALL SELECT ALL rt0.c1 FROM v0, rt0 GROUP BY rt0.c1 HAVING ((CASE WHEN TYPEOF(DISTINCT MAX(rt0.c2)) THEN SUM(rt0.c2) ELSE (rt0.c2 IN ()) END) ISNULL);
SELECT ALL rt0.c1 FROM v0, rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM v0, rt0 GROUP BY rt0.c1 HAVING CASE WHEN TYPEOF(DISTINCT MAX(rt0.c2)) THEN SUM(rt0.c2) ELSE (rt0.c2 IN ()) END UNION ALL SELECT ALL rt0.c1 FROM v0, rt0 GROUP BY rt0.c1 HAVING (NOT (CASE WHEN TYPEOF(DISTINCT MAX(rt0.c2)) THEN SUM(rt0.c2) ELSE (rt0.c2 IN ()) END)) UNION ALL SELECT ALL rt0.c1 FROM v0, rt0 GROUP BY rt0.c1 HAVING ((CASE WHEN TYPEOF(DISTINCT MAX(rt0.c2)) THEN SUM(rt0.c2) ELSE (rt0.c2 IN ()) END) ISNULL);
SELECT ALL rt0.c1 FROM v0, rt0 GROUP BY rt0.c1;
SELECT * FROM v0;
SELECT * FROM v0 WHERE (v0.c0) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (v0.c0))) UNION ALL SELECT * FROM v0 WHERE (((v0.c0) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM vt0, rt0, v0;
SELECT DISTINCT * FROM vt0, rt0, v0 WHERE (CASE LOWER(rt0.c0)  WHEN ((v0.c0)/(rt0.c2)) THEN ((((rt0.c1)OR(rt0.c0)))AND(vt0.c0)) END) UNION SELECT DISTINCT * FROM vt0, rt0, v0 WHERE ((NOT (CASE LOWER(rt0.c0)  WHEN ((v0.c0)/(rt0.c2)) THEN ((((rt0.c1)OR(rt0.c0)))AND(vt0.c0)) END))) UNION SELECT DISTINCT * FROM vt0, rt0, v0 WHERE (((CASE LOWER(rt0.c0)  WHEN ((v0.c0)/(rt0.c2)) THEN ((((rt0.c1)OR(rt0.c0)))AND(vt0.c0)) END) ISNULL));
SELECT DISTINCT * FROM vt0, rt0, v0;
SELECT ALL rt0.c0, v0.c0, rt0.c2, vt0.c0 FROM vt0, rt0, v0 GROUP BY rt0.c0, v0.c0, rt0.c2, vt0.c0;
SELECT ALL rt0.c0, v0.c0, rt0.c2, vt0.c0 FROM vt0, rt0, v0 WHERE (vt0.c0) GROUP BY rt0.c0, v0.c0, rt0.c2, vt0.c0 UNION SELECT ALL rt0.c0, v0.c0, rt0.c2, vt0.c0 FROM vt0, rt0, v0 WHERE ((NOT (vt0.c0))) GROUP BY rt0.c0, v0.c0, rt0.c2, vt0.c0 UNION SELECT ALL rt0.c0, v0.c0, rt0.c2, vt0.c0 FROM vt0, rt0, v0 WHERE (((vt0.c0) ISNULL)) GROUP BY rt0.c0, v0.c0, rt0.c2, vt0.c0;
SELECT ALL rt0.c0, v0.c0, rt0.c2, vt0.c0 FROM vt0, rt0, v0 GROUP BY rt0.c0, v0.c0, rt0.c2, vt0.c0;
SELECT ALL rt0.c1 FROM vt0 RIGHT OUTER JOIN rt0 ON (((rt0.c1) BETWEEN (NULL) AND (v0.c0)) IN ()) FULL OUTER JOIN v0 ON (((v0.c0 IN ())) NOT BETWEEN ('ꭢbp}''!d}') AND (rt0.c2)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM vt0 RIGHT OUTER JOIN rt0 ON (((rt0.c1) BETWEEN (NULL) AND (v0.c0)) IN ()) FULL OUTER JOIN v0 ON (((v0.c0 IN ())) NOT BETWEEN ('ꭢbp}''!d}') AND (rt0.c2)) GROUP BY rt0.c1 HAVING GROUP_CONCAT(MIN(v0.c0)) UNION ALL SELECT rt0.c1 FROM vt0 RIGHT OUTER JOIN rt0 ON (((rt0.c1) BETWEEN (NULL) AND (v0.c0)) IN ()) FULL OUTER JOIN v0 ON (((v0.c0 IN ())) NOT BETWEEN ('ꭢbp}''!d}') AND (rt0.c2)) GROUP BY rt0.c1 HAVING (NOT (GROUP_CONCAT(MIN(v0.c0)))) UNION ALL SELECT rt0.c1 FROM vt0 RIGHT OUTER JOIN rt0 ON (((rt0.c1) BETWEEN (NULL) AND (v0.c0)) IN ()) FULL OUTER JOIN v0 ON (((v0.c0 IN ())) NOT BETWEEN ('ꭢbp}''!d}') AND (rt0.c2)) GROUP BY rt0.c1 HAVING ((GROUP_CONCAT(MIN(v0.c0))) ISNULL);
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON (((- (rt0.c2))) NOT BETWEEN (('-1220249376' IN (rt0.c0))) AND (LOWER(rt0.c0))) FULL OUTER JOIN v0 ON (~ (rt0.c0)) COLLATE BINARY;
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON (((- (rt0.c2))) NOT BETWEEN (('-1220249376' IN (rt0.c0))) AND (LOWER(rt0.c0))) FULL OUTER JOIN v0 ON (~ (rt0.c0)) COLLATE BINARY WHERE (rt0.c1) UNION ALL SELECT * FROM vt0 FULL OUTER JOIN rt0 ON (((- (rt0.c2))) NOT BETWEEN (('-1220249376' IN (rt0.c0))) AND (LOWER(rt0.c0))) FULL OUTER JOIN v0 ON (~ (rt0.c0)) COLLATE BINARY WHERE ((NOT (rt0.c1))) UNION ALL SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON (((- (rt0.c2))) NOT BETWEEN (('-1220249376' IN (rt0.c0))) AND (LOWER(rt0.c0))) FULL OUTER JOIN v0 ON (~ (rt0.c0)) COLLATE BINARY WHERE (((rt0.c1) ISNULL));
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON (((- (rt0.c2))) NOT BETWEEN (('-1220249376' IN (rt0.c0))) AND (LOWER(rt0.c0))) FULL OUTER JOIN v0 ON (~ (rt0.c0)) COLLATE BINARY;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c0)==(rt0.c0))) NOT BETWEEN (('唓lx{' IN ())) AND (((rt0.c0)>=(rt0.c0))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c0)=(rt0.c0))) NOT BETWEEN (('唓lx{' IN ())) AND (((rt0.c0)>=(rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c0)=(rt0.c0))) NOT BETWEEN (('唓lx{' IN ())) AND (((rt0.c0)>=(rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (x'b369') GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (x'b369'))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((x'b369') ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c2, rt0.c1, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1, v0.c0, rt0.c0;
SELECT rt0.c2, rt0.c1, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1, v0.c0, rt0.c0 HAVING ((AVG(SUM(TOTAL(COUNT(NULL))))) NOTNULL) UNION ALL SELECT rt0.c2, rt0.c1, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1, v0.c0, rt0.c0 HAVING (NOT (((AVG(SUM(TOTAL(COUNT(NULL))))) NOTNULL))) UNION ALL SELECT ALL rt0.c2, rt0.c1, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1, v0.c0, rt0.c0 HAVING ((((AVG(SUM(TOTAL(COUNT(NULL))))) NOTNULL)) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((((rt0.c2)AND((((rt0.c0, x'bfbe', rt0.c1))<=((rt0.c1, rt0.c0, rt0.c1))))))OR(((((rt0.c1)OR(NULL)))AND(rt0.c2))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((((rt0.c2)AND((((rt0.c0, x'bfbe', rt0.c1))<=((rt0.c1, rt0.c0, rt0.c1))))))OR(((((rt0.c1)OR(NULL)))AND(rt0.c2))))))) UNION ALL SELECT * FROM rt0 WHERE (((((((rt0.c2)AND((((rt0.c0, x'bfbe', rt0.c1))<=((rt0.c1, rt0.c0, rt0.c1))))))OR(((((rt0.c1)OR(NULL)))AND(rt0.c2))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) IN ())) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) IN ())))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) IN ())) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0) NOTNULL))&((~ (vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) NOTNULL))&((~ (vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c0) NOTNULL))&((~ (vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT v0.c0 FROM rt0 RIGHT OUTER JOIN v0 ON CASE CAST(v0.c0 AS TEXT)  WHEN UNLIKELY(rt0.c1) THEN CAST(rt0.c2 AS NUMERIC) END GROUP BY v0.c0;
SELECT ALL v0.c0 FROM rt0 RIGHT OUTER JOIN v0 ON CASE CAST(v0.c0 AS TEXT)  WHEN UNLIKELY(rt0.c1) THEN CAST(rt0.c2 AS NUMERIC) END GROUP BY v0.c0 HAVING TOTAL(COUNT(*)) UNION ALL SELECT ALL v0.c0 FROM rt0 RIGHT OUTER JOIN v0 ON CASE CAST(v0.c0 AS TEXT)  WHEN UNLIKELY(rt0.c1) THEN CAST(rt0.c2 AS NUMERIC) END GROUP BY v0.c0 HAVING (NOT (TOTAL(COUNT(*)))) UNION ALL SELECT v0.c0 FROM rt0 RIGHT OUTER JOIN v0 ON CASE CAST(v0.c0 AS TEXT)  WHEN UNLIKELY(rt0.c1) THEN CAST(rt0.c2 AS NUMERIC) END GROUP BY v0.c0 HAVING ((TOTAL(COUNT(*))) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) NOT NULL)) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) NOT NULL)))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) NOT NULL)) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((rt0.c0 IN (((rt0.c1)<=(rt0.c2))))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((rt0.c0 IN (((rt0.c1)<=(rt0.c2))))))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((rt0.c0 IN (((rt0.c1)<=(rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0, v0 WHERE (((DATE(rt0.c0, rt0.c2, rt0.c0, rt0.c1, v0.c0, v0.c0, rt0.c2)) IS TRUE)) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 NOT INDEXED, v0 WHERE ((NOT (((DATE(rt0.c0, rt0.c2, rt0.c0, rt0.c1, v0.c0, v0.c0, rt0.c2)) IS TRUE)))) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0, v0 WHERE (((((DATE(rt0.c0, rt0.c2, rt0.c0, rt0.c1, v0.c0, v0.c0, rt0.c2)) IS TRUE)) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT((((v0.c0)) BETWEEN ((COUNT(GROUP_CONCAT(AVG(MAX(v0.c0)))))) AND ((v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT((((v0.c0)) BETWEEN ((COUNT(GROUP_CONCAT(AVG(MAX(v0.c0)))))) AND ((v0.c0)))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT((((v0.c0)) BETWEEN ((COUNT(GROUP_CONCAT(AVG(MAX(v0.c0)))))) AND ((v0.c0))))) ISNULL);
SELECT vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0;
SELECT ALL vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 WHERE (((NULL)<<(LIKELIHOOD(DISTINCT rt0.c2, 0.6282551974797207)))) UNION ALL SELECT ALL vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 WHERE ((NOT (((NULL)<<(LIKELIHOOD(DISTINCT rt0.c2, 0.6282551974797207)))))) UNION ALL SELECT ALL vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 WHERE (((((NULL)<<(LIKELIHOOD(DISTINCT rt0.c2, 0.6282551974797207)))) ISNULL));
SELECT vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0;
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN v0 ON (((((((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((v0.c0))))AND(((((v0.c0)AND(v0.c0)))AND(v0.c0)))))AND(vt0.c0)) LEFT OUTER JOIN vt0 ON CASE ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))  WHEN (NOT (rt0.c1)) THEN CAST(vt0.c0 AS TEXT) END;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 WHERE (x'') GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (x''))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE (((x'') ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING SUM(AVG(v0.c0)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (SUM(AVG(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((SUM(AVG(v0.c0))) ISNULL);
SELECT SUM(((((((((((((NULL)OR(vt0.c0)))OR(vt0.c0)))AND(v0.c0 COLLATE RTRIM)))AND(((v0.c0) BETWEEN ('-65968612') AND (vt0.c0)))))AND(CAST(v0.c0 AS BLOB))))OR(v0.c0))) FROM vt0, v0;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(INSTR(vt0.c0, vt0.c0))))AND(((vt0.c0)+(vt0.c0))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(INSTR(vt0.c0, vt0.c0))))AND(((vt0.c0)+(vt0.c0))))))) UNION ALL SELECT * FROM vt0 WHERE (((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(INSTR(vt0.c0, vt0.c0))))AND(((vt0.c0)+(vt0.c0))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((~ (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((~ (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((~ (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON (((((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))<=(((vt0.c0 IN ())))) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON (((((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))<=(((vt0.c0 IN ())))) WHERE (((v0.c0)<=(v0.c0)) COLLATE RTRIM) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON (((((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))<=(((vt0.c0 IN ())))) WHERE ((NOT (((v0.c0)<=(v0.c0)) COLLATE RTRIM))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON (((((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))<=(((vt0.c0 IN ())))) WHERE (((((v0.c0)<=(v0.c0)) COLLATE RTRIM) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON (((((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))<=(((vt0.c0 IN ())))) GROUP BY vt0.c0;
SELECT ALL rt0.c2, v0.c0, rt0.c1 FROM v0 RIGHT OUTER JOIN rt0 ON ((0.5049415331110291) IS TRUE) GROUP BY rt0.c2, v0.c0, rt0.c1;
SELECT ALL rt0.c2, v0.c0, rt0.c1 FROM v0 RIGHT OUTER JOIN rt0 ON ((0.5049415331110291) IS TRUE) GROUP BY rt0.c2, v0.c0, rt0.c1 HAVING ((MAX(rt0.c2))*(rt0.c0)) COLLATE BINARY UNION ALL SELECT ALL rt0.c2, v0.c0, rt0.c1 FROM v0 RIGHT OUTER JOIN rt0 ON ((0.5049415331110291) IS TRUE) GROUP BY rt0.c2, v0.c0, rt0.c1 HAVING (NOT (((MAX(rt0.c2))*(rt0.c0)) COLLATE BINARY)) UNION ALL SELECT rt0.c2, v0.c0, rt0.c1 FROM v0 RIGHT OUTER JOIN rt0 ON ((0.5049415331110291) IS TRUE) GROUP BY rt0.c2, v0.c0, rt0.c1 HAVING ((((MAX(rt0.c2))*(rt0.c0)) COLLATE BINARY) ISNULL);
SELECT ALL rt0.c2, v0.c0, rt0.c1 FROM v0 RIGHT OUTER JOIN rt0 ON ((0.5049415331110291) IS TRUE) GROUP BY rt0.c2, v0.c0, rt0.c1;
SELECT ALL rt0.c2, v0.c0, rt0.c1 FROM v0 RIGHT OUTER JOIN rt0 ON ((0.5049415331110291) IS TRUE) GROUP BY rt0.c2, v0.c0, rt0.c1 HAVING ((MAX(rt0.c2))*(rt0.c0)) COLLATE BINARY UNION ALL SELECT ALL rt0.c2, v0.c0, rt0.c1 FROM v0 RIGHT OUTER JOIN rt0 ON ((0.5049415331110291) IS TRUE) GROUP BY rt0.c2, v0.c0, rt0.c1 HAVING (NOT (((MAX(rt0.c2))*(rt0.c0)) COLLATE BINARY)) UNION ALL SELECT rt0.c2, v0.c0, rt0.c1 FROM v0 RIGHT OUTER JOIN rt0 ON ((0.5049415331110291) IS TRUE) GROUP BY rt0.c2, v0.c0, rt0.c1 HAVING ((((MAX(rt0.c2))*(rt0.c0)) COLLATE BINARY) ISNULL);
SELECT ALL rt0.c2, v0.c0, rt0.c1 FROM v0 RIGHT OUTER JOIN rt0 ON ((0.5049415331110291) IS TRUE) GROUP BY rt0.c2, v0.c0, rt0.c1;
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE ((((v0.c0 IN ()))>(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) UNION ALL SELECT * FROM v0 WHERE ((NOT ((((v0.c0 IN ()))>(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))))) UNION ALL SELECT ALL * FROM v0 WHERE ((((((v0.c0 IN ()))>(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (CASE WHEN NULL THEN (~ (v0.c0)) END) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (CASE WHEN NULL THEN (~ (v0.c0)) END))) UNION SELECT DISTINCT * FROM v0 WHERE (((CASE WHEN NULL THEN (~ (v0.c0)) END) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 WHERE (((CASE 0.5651269502627305  WHEN vt0.c0 THEN v0.c0 WHEN '-2099302864' THEN 0.26471740494785523 WHEN x'' THEN v0.c0 END)<=(v0.c0))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, v0 WHERE ((NOT (((CASE 0.5651269502627305  WHEN vt0.c0 THEN v0.c0 WHEN '-2099302864' THEN 0.26471740494785523 WHEN x'' THEN v0.c0 END)<=(v0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, v0 WHERE (((((CASE 0.5651269502627305  WHEN vt0.c0 THEN v0.c0 WHEN '-2099302864' THEN 0.26471740494785523 WHEN x'' THEN v0.c0 END)<=(v0.c0))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(TOTAL(vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(TOTAL(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(TOTAL(vt0.c0))) ISNULL);
SELECT ALL MAX((((((((v0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))))OR((v0.c0 IN ()))))AND(CASE WHEN vt0.c0 THEN vt0.c0 END))) FROM vt0, v0;
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (((CAST(vt0.c0 AS NUMERIC))*(NULL))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (((CAST(vt0.c0 AS NUMERIC))*(NULL))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((((CAST(vt0.c0 AS NUMERIC))*(NULL))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT rt0.c0, v0.c0, rt0.c1 FROM v0, vt0 NOT INDEXED, rt0 GROUP BY rt0.c0, v0.c0, rt0.c1;
SELECT ALL rt0.c0, v0.c0, rt0.c1 FROM v0, vt0, rt0 WHERE (IFNULL(DISTINCT ((v0.c0) ISNULL), (rt0.c2 IN ()))) GROUP BY rt0.c0, v0.c0, rt0.c1 UNION SELECT rt0.c0, v0.c0, rt0.c1 FROM v0, vt0, rt0 WHERE ((NOT (IFNULL(DISTINCT ((v0.c0) ISNULL), (rt0.c2 IN ()))))) GROUP BY rt0.c0, v0.c0, rt0.c1 UNION SELECT rt0.c0, v0.c0, rt0.c1 FROM v0, vt0, rt0 WHERE (((IFNULL(DISTINCT ((v0.c0) ISNULL), (rt0.c2 IN ()))) ISNULL)) GROUP BY rt0.c0, v0.c0, rt0.c1;
SELECT rt0.c0, v0.c0, rt0.c1 FROM v0, vt0 NOT INDEXED, rt0 GROUP BY rt0.c0, v0.c0, rt0.c1;
SELECT rt0.c0, v0.c0 FROM vt0, rt0, v0 GROUP BY rt0.c0, v0.c0;
SELECT ALL rt0.c0, v0.c0 FROM vt0, rt0, v0 GROUP BY rt0.c0, v0.c0 HAVING TOTAL((NOT (SUM(COUNT(*))))) UNION ALL SELECT ALL rt0.c0, v0.c0 FROM vt0, rt0, v0 GROUP BY rt0.c0, v0.c0 HAVING (NOT (TOTAL((NOT (SUM(COUNT(*))))))) UNION ALL SELECT ALL rt0.c0, v0.c0 FROM vt0, rt0, v0 GROUP BY rt0.c0, v0.c0 HAVING ((TOTAL((NOT (SUM(COUNT(*)))))) ISNULL);
SELECT ALL TOTAL((((('-88122523')/(rt0.c2)))||((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((v0.c0)))))) FROM vt0, v0, rt0 ORDER BY 0.9492590097139887 DESC  NULLS LAST, (((rt0.c0))<(((((v0.c0))<((0.27295379813355547)))))) DESC  NULLS FIRST;
SELECT ALL * FROM v0, rt0, vt0;
SELECT * FROM v0, rt0, vt0 WHERE (CASE WHEN x'' THEN (('bJkzk')<<(v0.c0)) END) UNION ALL SELECT * FROM v0, rt0, vt0 WHERE ((NOT (CASE WHEN x'' THEN (('bJkzk')<<(v0.c0)) END))) UNION ALL SELECT ALL * FROM v0, rt0, vt0 WHERE (((CASE WHEN x'' THEN (('bJkzk')<<(v0.c0)) END) ISNULL));
SELECT ALL * FROM v0, rt0, vt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (TYPEOF(((v0.c0)IS NOT(v0.c0)))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (TYPEOF(((v0.c0)IS NOT(v0.c0)))))) UNION SELECT DISTINCT * FROM v0 WHERE (((TYPEOF(((v0.c0)IS NOT(v0.c0)))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT rt0.c1 FROM v0, rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM v0, rt0 WHERE ((NOT ((((x'294f', rt0.c1, rt0.c2, v0.c0, v0.c0))<=((rt0.c1, rt0.c0, rt0.c1, -486664555, rt0.c2)))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM v0, rt0 WHERE ((NOT ((NOT ((((x'294f', rt0.c1, rt0.c2, v0.c0, v0.c0))<=((rt0.c1, rt0.c0, rt0.c1, -486664555, rt0.c2)))))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM v0, rt0 WHERE ((((NOT ((((x'294f', rt0.c1, rt0.c2, v0.c0, v0.c0))<=((rt0.c1, rt0.c0, rt0.c1, -486664555, rt0.c2)))))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM v0, rt0 GROUP BY rt0.c1;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((COUNT(MAX(v0.c0)))OR(MAX(v0.c0))))AND(MAX(MIN(GROUP_CONCAT(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((((COUNT(MAX(v0.c0)))OR(MAX(v0.c0))))AND(MAX(MIN(GROUP_CONCAT(v0.c0))))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((((COUNT(MAX(v0.c0)))OR(MAX(v0.c0))))AND(MAX(MIN(GROUP_CONCAT(v0.c0)))))) ISNULL);
SELECT ALL rt0.c2, rt0.c0, v0.c0, rt0.c1 FROM rt0, v0;
SELECT rt0.c2, rt0.c0, v0.c0, rt0.c1 FROM rt0, v0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN v0.c0 THEN rt0.c1 ELSE x'ee0b' END) NOT BETWEEN ((((rt0.c0))!=((rt0.c2)))) AND (CAST(rt0.c1 AS BLOB)))) UNION ALL SELECT ALL rt0.c2, rt0.c0, v0.c0, rt0.c1 FROM rt0, v0 WHERE ((NOT (((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN v0.c0 THEN rt0.c1 ELSE x'ee0b' END) NOT BETWEEN ((((rt0.c0))!=((rt0.c2)))) AND (CAST(rt0.c1 AS BLOB)))))) UNION ALL SELECT rt0.c2, rt0.c0, v0.c0, rt0.c1 FROM rt0, v0 WHERE (((((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN v0.c0 THEN rt0.c1 ELSE x'ee0b' END) NOT BETWEEN ((((rt0.c0))!=((rt0.c2)))) AND (CAST(rt0.c1 AS BLOB)))) ISNULL));
SELECT ALL rt0.c2, rt0.c0, v0.c0, rt0.c1 FROM rt0, v0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN ((+ (x''))) AND ((((vt0.c0))=((vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN ((+ (x''))) AND ((((vt0.c0))==((vt0.c0)))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN ((+ (x''))) AND ((((vt0.c0))=((vt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB)) BETWEEN (((vt0.c0) IS FALSE)) AND (((vt0.c0)IS NOT(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((CAST(vt0.c0 AS BLOB)) BETWEEN (((vt0.c0) IS FALSE)) AND (((vt0.c0)IS NOT(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((CAST(vt0.c0 AS BLOB)) BETWEEN (((vt0.c0) IS FALSE)) AND (((vt0.c0)IS NOT(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING SUM(((((MIN(rt0.c0))OR(AVG(COUNT(*)))))OR(rt0.c2))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (SUM(((((MIN(rt0.c0))OR(AVG(COUNT(*)))))OR(rt0.c2))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((SUM(((((MIN(rt0.c0))OR(AVG(COUNT(*)))))OR(rt0.c2)))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((rt0.c1, rt0.c1, rt0.c0)) BETWEEN ((((0.7078999584272202)IS(0xffffffffed8ea2bd)), ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)), ((0.08719107345162369)||(rt0.c0)))) AND ((rt0.c2 COLLATE NOCASE, (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))), (rt0.c0 IN ()))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((((rt0.c1, rt0.c1, rt0.c0)) BETWEEN ((((0.7078999584272202)IS(0xffffffffed8ea2bd)), ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)), ((0.08719107345162369)||(rt0.c0)))) AND ((rt0.c2 COLLATE NOCASE, (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))), (rt0.c0 IN ()))))))) UNION ALL SELECT * FROM rt0 WHERE ((((((rt0.c1, rt0.c1, rt0.c0)) BETWEEN ((((0.7078999584272202)IS(0xffffffffed8ea2bd)), ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)), ((0.08719107345162369)||(rt0.c0)))) AND ((rt0.c2 COLLATE NOCASE, (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))), (rt0.c0 IN ()))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0 INNER JOIN vt0 ON NULLIF(((rt0.c1) IS TRUE), CAST(rt0.c0 AS TEXT));
SELECT DISTINCT * FROM rt0 INNER JOIN vt0 ON NULLIF(((rt0.c1) IS TRUE), CAST(rt0.c0 AS TEXT)) WHERE (HEX((- (vt0.c0)))) UNION SELECT DISTINCT * FROM rt0 INNER JOIN vt0 ON NULLIF(((rt0.c1) IS TRUE), CAST(rt0.c0 AS TEXT)) WHERE ((NOT (HEX((- (vt0.c0)))))) UNION SELECT DISTINCT * FROM rt0 INNER JOIN vt0 ON NULLIF(((rt0.c1) IS TRUE), CAST(rt0.c0 AS TEXT)) WHERE (((HEX((- (vt0.c0)))) ISNULL));
SELECT DISTINCT * FROM rt0 INNER JOIN vt0 ON NULLIF(((rt0.c1) IS TRUE), CAST(rt0.c0 AS TEXT));
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((((LIKELIHOOD(DISTINCT v0.c0, 0.08419280000660745)))<>(((((((((('0.10026491261079651')AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR('')))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((((LIKELIHOOD(DISTINCT v0.c0, 0.08419280000660745)))!=(((((((((('0.10026491261079651')AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR('')))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((((LIKELIHOOD(DISTINCT v0.c0, 0.08419280000660745)))<>(((((((((('0.10026491261079651')AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR('')))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c2, rt0.c0, vt0.c0, v0.c0, rt0.c1 FROM vt0, v0, rt0 GROUP BY rt0.c2, rt0.c0, vt0.c0, v0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, vt0.c0, v0.c0, rt0.c1 FROM vt0, v0, rt0 GROUP BY rt0.c2, rt0.c0, vt0.c0, v0.c0, rt0.c1 HAVING TOTAL(GROUP_CONCAT(COUNT(*))) UNION ALL SELECT ALL rt0.c2, rt0.c0, vt0.c0, v0.c0, rt0.c1 FROM vt0, v0, rt0 GROUP BY rt0.c2, rt0.c0, vt0.c0, v0.c0, rt0.c1 HAVING (NOT (TOTAL(GROUP_CONCAT(COUNT(*))))) UNION ALL SELECT rt0.c2, rt0.c0, vt0.c0, v0.c0, rt0.c1 FROM vt0, v0, rt0 GROUP BY rt0.c2, rt0.c0, vt0.c0, v0.c0, rt0.c1 HAVING ((TOTAL(GROUP_CONCAT(COUNT(*)))) ISNULL);
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE ((((((v0.c0 IN ()))AND(((v0.c0) NOTNULL))))OR(((((v0.c0)AND(v0.c0)))OR(v0.c0))))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT ((((((v0.c0 IN ()))AND(((v0.c0) NOTNULL))))OR(((((v0.c0)AND(v0.c0)))OR(v0.c0))))))) UNION ALL SELECT * FROM v0 WHERE ((((((((v0.c0 IN ()))AND(((v0.c0) NOTNULL))))OR(((((v0.c0)AND(v0.c0)))OR(v0.c0))))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2, v0.c0, vt0.c0 FROM rt0, vt0, v0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2, v0.c0, vt0.c0 FROM rt0, vt0, v0 WHERE ((((v0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) IN ())) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2, v0.c0, vt0.c0 FROM rt0, vt0, v0 WHERE ((NOT ((((v0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) IN ())))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2, v0.c0, vt0.c0 FROM rt0, vt0, v0 WHERE ((((((v0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) IN ())) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2, v0.c0, vt0.c0 FROM rt0, vt0, v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((v0.c0 COLLATE RTRIM)>=((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((v0.c0 COLLATE RTRIM)>=((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0 COLLATE RTRIM)>=((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c2 FROM rt0, vt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0, vt0 GROUP BY rt0.c2 HAVING NULL UNION ALL SELECT ALL rt0.c2 FROM rt0, vt0 GROUP BY rt0.c2 HAVING (NOT (NULL)) UNION ALL SELECT rt0.c2 FROM rt0, vt0 GROUP BY rt0.c2 HAVING ((NULL) ISNULL);
SELECT ALL rt0.c2 FROM rt0, vt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0, vt0 GROUP BY rt0.c2 HAVING NULL UNION ALL SELECT ALL rt0.c2 FROM rt0, vt0 GROUP BY rt0.c2 HAVING (NOT (NULL)) UNION ALL SELECT rt0.c2 FROM rt0, vt0 GROUP BY rt0.c2 HAVING ((NULL) ISNULL);
SELECT ALL rt0.c2 FROM rt0, vt0 GROUP BY rt0.c2;
SELECT ALL * FROM rt0, vt0, v0;
SELECT * FROM rt0, vt0, v0 WHERE (((json_patch(x'', NULL))>(NULL))) UNION ALL SELECT * FROM rt0, vt0, v0 WHERE ((NOT (((json_patch(x'', NULL))>(NULL))))) UNION ALL SELECT ALL * FROM rt0, vt0, v0 WHERE (((((json_patch(x'', NULL))>(NULL))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((v0.c0) IS TRUE) IN ())) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((v0.c0) IS TRUE) IN ())))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((v0.c0) IS TRUE) IN ())) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL vt0.c0, rt0.c0 FROM v0, vt0, rt0 GROUP BY vt0.c0, rt0.c0;
SELECT vt0.c0, rt0.c0 FROM v0, vt0, rt0 WHERE (x'') GROUP BY vt0.c0, rt0.c0 UNION SELECT vt0.c0, rt0.c0 FROM v0, vt0, rt0 WHERE ((NOT (x''))) GROUP BY vt0.c0, rt0.c0 UNION SELECT vt0.c0, rt0.c0 FROM v0, vt0, rt0 WHERE (((x'') ISNULL)) GROUP BY vt0.c0, rt0.c0;
SELECT ALL vt0.c0, rt0.c0 FROM v0, vt0, rt0 GROUP BY vt0.c0, rt0.c0;
SELECT ALL rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0, vt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0, vt0.c0, rt0.c1 HAVING (+ (((AVG(rt0.c2))*(MAX(vt0.c0))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0, vt0.c0, rt0.c1 HAVING (NOT ((+ (((AVG(rt0.c2))*(MAX(vt0.c0))))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0, vt0.c0, rt0.c1 HAVING (((+ (((AVG(rt0.c2))*(MAX(vt0.c0)))))) ISNULL);
SELECT ALL rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0, vt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0, vt0.c0, rt0.c1 HAVING (+ (((AVG(rt0.c2))*(MAX(vt0.c0))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0, vt0.c0, rt0.c1 HAVING (NOT ((+ (((AVG(rt0.c2))*(MAX(vt0.c0))))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0, vt0.c0, rt0.c1 HAVING (((+ (((AVG(rt0.c2))*(MAX(vt0.c0)))))) ISNULL);
SELECT ALL rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0, vt0.c0, rt0.c1;
SELECT v0.c0, rt0.c0, vt0.c0, rt0.c1, rt0.c2 FROM vt0, v0, rt0;
SELECT ALL v0.c0, rt0.c0, vt0.c0, rt0.c1, rt0.c2 FROM vt0, v0 NOT INDEXED, rt0 WHERE (-414497510) UNION ALL SELECT v0.c0, rt0.c0, vt0.c0, rt0.c1, rt0.c2 FROM vt0, v0, rt0 WHERE ((NOT (-414497510))) UNION ALL SELECT ALL v0.c0, rt0.c0, vt0.c0, rt0.c1, rt0.c2 FROM vt0, v0, rt0 WHERE (((-414497510) ISNULL));
SELECT v0.c0, rt0.c0, vt0.c0, rt0.c1, rt0.c2 FROM vt0, v0, rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((((v0.c0) NOTNULL))%(((v0.c0)IS(v0.c0))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((((v0.c0) NOTNULL))%(((v0.c0)IS(v0.c0))))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((v0.c0) NOTNULL))%(((v0.c0)IS(v0.c0))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 WHERE ((((v0.c0 IN ())) BETWEEN (vt0.c0) AND (ABS(DISTINCT vt0.c0)))) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM vt0, v0 WHERE ((NOT ((((v0.c0 IN ())) BETWEEN (vt0.c0) AND (ABS(DISTINCT vt0.c0)))))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 WHERE ((((((v0.c0 IN ())) BETWEEN (vt0.c0) AND (ABS(DISTINCT vt0.c0)))) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT ALL rt0.c0, rt0.c2, vt0.c0, v0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c0, rt0.c2, vt0.c0, v0.c0;
SELECT rt0.c0, rt0.c2, vt0.c0, v0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c0, rt0.c2, vt0.c0, v0.c0 HAVING MAX(SUM(COUNT(rt0.c2))) UNION ALL SELECT ALL rt0.c0, rt0.c2, vt0.c0, v0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c0, rt0.c2, vt0.c0, v0.c0 HAVING (NOT (MAX(SUM(COUNT(rt0.c2))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, vt0.c0, v0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c0, rt0.c2, vt0.c0, v0.c0 HAVING ((MAX(SUM(COUNT(rt0.c2)))) ISNULL);
SELECT * FROM rt0, v0;
SELECT ALL * FROM rt0, v0 WHERE ((((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END, rt0.c1, ((((((((rt0.c2)OR(-8.88007871E8)))OR(rt0.c1)))OR(v0.c0)))AND(rt0.c0)), (((0.3329109012036042)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))), ((rt0.c1)>>(rt0.c1))))<=((((rt0.c0) IS FALSE), ((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c2)))AND('851531941')))AND(rt0.c0)), v0.c0 COLLATE BINARY, ((rt0.c1) IS TRUE), (- (rt0.c1)))))) UNION ALL SELECT * FROM rt0, v0 WHERE ((NOT ((((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END, rt0.c1, ((((((((rt0.c2)OR(-8.88007871E8)))OR(rt0.c1)))OR(v0.c0)))AND(rt0.c0)), (((0.3329109012036042)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))), ((rt0.c1)>>(rt0.c1))))<=((((rt0.c0) IS FALSE), ((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c2)))AND('851531941')))AND(rt0.c0)), v0.c0 COLLATE BINARY, ((rt0.c1) IS TRUE), (- (rt0.c1)))))))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((((((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END, rt0.c1, ((((((((rt0.c2)OR(-8.88007871E8)))OR(rt0.c1)))OR(v0.c0)))AND(rt0.c0)), (((0.3329109012036042)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))), ((rt0.c1)>>(rt0.c1))))<=((((rt0.c0) IS FALSE), ((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c2)))AND('851531941')))AND(rt0.c0)), v0.c0 COLLATE BINARY, ((rt0.c1) IS TRUE), (- (rt0.c1)))))) ISNULL));
SELECT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CAST(((rt0.c0)+(rt0.c0)) AS NUMERIC)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CAST(((rt0.c0)+(rt0.c0)) AS NUMERIC)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CAST(((rt0.c0)+(rt0.c0)) AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2, rt0.c0, vt0.c0 FROM rt0, v0, vt0 GROUP BY rt0.c2, rt0.c0, vt0.c0;
SELECT rt0.c2, rt0.c0, vt0.c0 FROM rt0, v0, vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) BETWEEN ((~ (rt0.c2))) AND (UPPER(DISTINCT rt0.c1)))) GROUP BY rt0.c2, rt0.c0, vt0.c0 UNION SELECT rt0.c2, rt0.c0, vt0.c0 FROM rt0, v0, vt0 WHERE ((NOT (((CAST(vt0.c0 AS INTEGER)) BETWEEN ((~ (rt0.c2))) AND (UPPER(DISTINCT rt0.c1)))))) GROUP BY rt0.c2, rt0.c0, vt0.c0 UNION SELECT ALL rt0.c2, rt0.c0, vt0.c0 FROM rt0, v0, vt0 WHERE (((((CAST(vt0.c0 AS INTEGER)) BETWEEN ((~ (rt0.c2))) AND (UPPER(DISTINCT rt0.c1)))) ISNULL)) GROUP BY rt0.c2, rt0.c0, vt0.c0;
SELECT rt0.c2, rt0.c0, vt0.c0 FROM rt0, v0, vt0 GROUP BY rt0.c2, rt0.c0, vt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING GROUP_CONCAT(MIN(v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (GROUP_CONCAT(MIN(v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((GROUP_CONCAT(MIN(v0.c0))) ISNULL);
SELECT * FROM vt0 FULL OUTER JOIN v0 ON ROUND(((0.9410336207825734)AND(v0.c0)), (((vt0.c0))>=((NULL)))) CROSS JOIN rt0 ON ((+ (vt0.c0)) IN (CASE rt0.c1  WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 0.3013821456442045 THEN v0.c0 ELSE rt0.c0 END, rt0.c2 COLLATE RTRIM, rt0.c0));
SELECT ALL * FROM vt0 FULL OUTER JOIN v0 ON ROUND(((0.9410336207825734)AND(v0.c0)), (((vt0.c0))>=((NULL)))) CROSS JOIN rt0 ON ((+ (vt0.c0)) IN (CASE rt0.c1  WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 0.3013821456442045 THEN v0.c0 ELSE rt0.c0 END, rt0.c2 COLLATE RTRIM, rt0.c0)) WHERE (((rt0.c1)GLOB(rt0.c0))) UNION ALL SELECT ALL * FROM vt0 FULL OUTER JOIN v0 ON ROUND(((0.9410336207825734)AND(v0.c0)), (((vt0.c0))>=((NULL)))) CROSS JOIN rt0 ON ((+ (vt0.c0)) IN (CASE rt0.c1  WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 0.3013821456442045 THEN v0.c0 ELSE rt0.c0 END, rt0.c2 COLLATE RTRIM, rt0.c0)) WHERE ((NOT (((rt0.c1)GLOB(rt0.c0))))) UNION ALL SELECT ALL * FROM vt0 FULL OUTER JOIN v0 ON ROUND(((0.9410336207825734)AND(v0.c0)), (((vt0.c0))>=((NULL)))) CROSS JOIN rt0 ON ((+ (vt0.c0)) IN (CASE rt0.c1  WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 0.3013821456442045 THEN v0.c0 ELSE rt0.c0 END, rt0.c2 COLLATE RTRIM, rt0.c0)) WHERE (((((rt0.c1)GLOB(rt0.c0))) ISNULL));
SELECT * FROM vt0 FULL OUTER JOIN v0 ON ROUND(((0.9410336207825734)AND(v0.c0)), (((vt0.c0))>=((NULL)))) CROSS JOIN rt0 ON ((+ (vt0.c0)) IN (CASE rt0.c1  WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 0.3013821456442045 THEN v0.c0 ELSE rt0.c0 END, rt0.c2 COLLATE RTRIM, rt0.c0));
SELECT DISTINCT * FROM vt0 NOT INDEXED, v0, rt0;
SELECT DISTINCT * FROM vt0, v0, rt0 WHERE ((json_patch(rt0.c2, rt0.c0) IN ())) UNION SELECT DISTINCT * FROM vt0 NOT INDEXED, v0, rt0 WHERE ((NOT ((json_patch(rt0.c2, rt0.c0) IN ())))) UNION SELECT DISTINCT * FROM vt0, v0, rt0 WHERE ((((json_patch(rt0.c2, rt0.c0) IN ())) ISNULL));
SELECT DISTINCT * FROM vt0 NOT INDEXED, v0, rt0;
SELECT rt0.c1, v0.c0, vt0.c0 FROM v0, vt0 FULL OUTER JOIN rt0 ON ((7.6841004E7 COLLATE BINARY)>=((((963226678)) BETWEEN ((vt0.c0)) AND ((v0.c0))))) GROUP BY rt0.c1, v0.c0, vt0.c0;
SELECT ALL rt0.c1, v0.c0, vt0.c0 FROM v0, vt0 FULL OUTER JOIN rt0 ON ((7.6841004E7 COLLATE BINARY)>=((((963226678)) BETWEEN ((vt0.c0)) AND ((v0.c0))))) WHERE (v0.c0) GROUP BY rt0.c1, v0.c0, vt0.c0 UNION SELECT ALL rt0.c1, v0.c0, vt0.c0 FROM v0, vt0 FULL OUTER JOIN rt0 ON ((7.6841004E7 COLLATE BINARY)>=((((963226678)) BETWEEN ((vt0.c0)) AND ((v0.c0))))) WHERE ((NOT (v0.c0))) GROUP BY rt0.c1, v0.c0, vt0.c0 UNION SELECT rt0.c1, v0.c0, vt0.c0 FROM v0, vt0 FULL OUTER JOIN rt0 ON ((7.6841004E7 COLLATE BINARY)>=((((963226678)) BETWEEN ((vt0.c0)) AND ((v0.c0))))) WHERE (((v0.c0) ISNULL)) GROUP BY rt0.c1, v0.c0, vt0.c0;
SELECT rt0.c1, v0.c0, vt0.c0 FROM v0, vt0 FULL OUTER JOIN rt0 ON ((7.6841004E7 COLLATE BINARY)>=((((963226678)) BETWEEN ((vt0.c0)) AND ((v0.c0))))) GROUP BY rt0.c1, v0.c0, vt0.c0;
SELECT vt0.c0 FROM rt0, v0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM rt0, v0, vt0 GROUP BY vt0.c0 HAVING rt0.c1 UNION ALL SELECT ALL vt0.c0 FROM rt0, v0, vt0 GROUP BY vt0.c0 HAVING (NOT (rt0.c1)) UNION ALL SELECT ALL vt0.c0 FROM rt0, v0, vt0 GROUP BY vt0.c0 HAVING ((rt0.c1) ISNULL);
SELECT vt0.c0 FROM rt0, v0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM rt0, v0, vt0 GROUP BY vt0.c0 HAVING rt0.c1 UNION ALL SELECT ALL vt0.c0 FROM rt0, v0, vt0 GROUP BY vt0.c0 HAVING (NOT (rt0.c1)) UNION ALL SELECT ALL vt0.c0 FROM rt0, v0, vt0 GROUP BY vt0.c0 HAVING ((rt0.c1) ISNULL);
SELECT vt0.c0 FROM rt0, v0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0, rt0.c2, rt0.c0, v0.c0, rt0.c1 FROM vt0, rt0, v0;
SELECT vt0.c0, rt0.c2, rt0.c0, v0.c0, rt0.c1 FROM vt0, rt0, v0 WHERE (CAST(TRIM(DISTINCT rt0.c0, rt0.c2) AS INTEGER)) UNION ALL SELECT ALL vt0.c0, rt0.c2, rt0.c0, v0.c0, rt0.c1 FROM vt0, rt0, v0 WHERE ((NOT (CAST(TRIM(DISTINCT rt0.c0, rt0.c2) AS INTEGER)))) UNION ALL SELECT vt0.c0, rt0.c2, rt0.c0, v0.c0, rt0.c1 FROM vt0, rt0, v0 WHERE (((CAST(TRIM(DISTINCT rt0.c0, rt0.c2) AS INTEGER)) ISNULL));
SELECT ALL vt0.c0, rt0.c2, rt0.c0, v0.c0, rt0.c1 FROM vt0, rt0, v0;
SELECT DISTINCT v0.c0, rt0.c0, vt0.c0 FROM v0, rt0, vt0;
SELECT DISTINCT v0.c0, rt0.c0, vt0.c0 FROM v0, rt0, vt0 WHERE (('' IN ())) UNION SELECT DISTINCT v0.c0, rt0.c0, vt0.c0 FROM v0, rt0, vt0 WHERE ((NOT (('' IN ())))) UNION SELECT DISTINCT v0.c0, rt0.c0, vt0.c0 FROM v0, rt0, vt0 WHERE (((('' IN ())) ISNULL));
SELECT DISTINCT v0.c0, rt0.c0, vt0.c0 FROM v0, rt0, vt0;
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, v0 WHERE (0X3fd6fe86) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, v0 WHERE ((NOT (0X3fd6fe86))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, v0 WHERE (((0X3fd6fe86) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT rt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM v0, vt0, rt0 GROUP BY rt0.c1, rt0.c2, vt0.c0, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM v0, vt0, rt0 GROUP BY rt0.c1, rt0.c2, vt0.c0, rt0.c0 HAVING 0x397c397b UNION ALL SELECT rt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM v0, vt0, rt0 GROUP BY rt0.c1, rt0.c2, vt0.c0, rt0.c0 HAVING (NOT (0x397c397b)) UNION ALL SELECT rt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM v0, vt0, rt0 GROUP BY rt0.c1, rt0.c2, vt0.c0, rt0.c0 HAVING ((0x397c397b) ISNULL);
SELECT rt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM v0, vt0, rt0 GROUP BY rt0.c1, rt0.c2, vt0.c0, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM v0, vt0, rt0 GROUP BY rt0.c1, rt0.c2, vt0.c0, rt0.c0 HAVING 0x397c397b UNION ALL SELECT rt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM v0, vt0, rt0 GROUP BY rt0.c1, rt0.c2, vt0.c0, rt0.c0 HAVING (NOT (0x397c397b)) UNION ALL SELECT rt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM v0, vt0, rt0 GROUP BY rt0.c1, rt0.c2, vt0.c0, rt0.c0 HAVING ((0x397c397b) ISNULL);
SELECT rt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM v0, vt0, rt0 GROUP BY rt0.c1, rt0.c2, vt0.c0, rt0.c0;
SELECT ALL * FROM v0, vt0 FULL OUTER JOIN rt0 ON CAST((~ (vt0.c0)) AS NUMERIC);
SELECT ALL * FROM v0, vt0 FULL OUTER JOIN rt0 ON CAST((~ (vt0.c0)) AS NUMERIC) WHERE (((LOWER(DISTINCT vt0.c0))IS(((rt0.c0) BETWEEN (vt0.c0) AND (0Xffffffff91a6f553))))) UNION ALL SELECT ALL * FROM v0 NOT INDEXED, vt0 FULL OUTER JOIN rt0 ON CAST((~ (vt0.c0)) AS NUMERIC) WHERE ((NOT (((LOWER(DISTINCT vt0.c0))IS(((rt0.c0) BETWEEN (vt0.c0) AND (0Xffffffff91a6f553))))))) UNION ALL SELECT * FROM v0, vt0 FULL OUTER JOIN rt0 ON CAST((~ (vt0.c0)) AS NUMERIC) WHERE (((((LOWER(DISTINCT vt0.c0))IS(((rt0.c0) BETWEEN (vt0.c0) AND (0xffffffff91a6f553))))) ISNULL));
SELECT ALL * FROM v0, vt0 FULL OUTER JOIN rt0 ON CAST((~ (vt0.c0)) AS NUMERIC);
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0)AND(0.41472063131271786)) COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((vt0.c0)AND(0.41472063131271786)) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0)AND(0.41472063131271786)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 END) IS FALSE)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((CASE WHEN vt0.c0 THEN vt0.c0 END) IS FALSE)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 END) IS FALSE)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c1, rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, vt0.c0;
SELECT rt0.c1, rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, vt0.c0 HAVING TOTAL(((((AVG(vt0.c0))AND(rt0.c0)))AND(vt0.c0))) UNION ALL SELECT ALL rt0.c1, rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, vt0.c0 HAVING (NOT (TOTAL(((((AVG(vt0.c0))AND(rt0.c0)))AND(vt0.c0))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, vt0.c0 HAVING ((TOTAL(((((AVG(vt0.c0))AND(rt0.c0)))AND(vt0.c0)))) ISNULL);
SELECT rt0.c1, vt0.c0, v0.c0, rt0.c2 FROM rt0, vt0, v0;
SELECT ALL rt0.c1, vt0.c0, v0.c0, rt0.c2 FROM rt0, vt0, v0 WHERE (((rt0.c0)==(rt0.c2)) COLLATE RTRIM) UNION ALL SELECT ALL rt0.c1, vt0.c0, v0.c0, rt0.c2 FROM rt0, vt0, v0 WHERE ((NOT (((rt0.c0)=(rt0.c2)) COLLATE RTRIM))) UNION ALL SELECT ALL rt0.c1, vt0.c0, v0.c0, rt0.c2 FROM rt0, vt0, v0 WHERE (((((rt0.c0)=(rt0.c2)) COLLATE RTRIM) ISNULL));
SELECT rt0.c1, vt0.c0, v0.c0, rt0.c2 FROM rt0, vt0, v0;
SELECT DISTINCT rt0.c1 FROM vt0, v0, rt0;
SELECT DISTINCT rt0.c1 FROM vt0, v0, rt0 WHERE (((((vt0.c0) IS FALSE))<=((((vt0.c0, rt0.c2, rt0.c1))<((rt0.c1, vt0.c0, rt0.c1)))))) UNION SELECT DISTINCT rt0.c1 FROM vt0, v0, rt0 WHERE ((NOT (((((vt0.c0) IS FALSE))<=((((vt0.c0, rt0.c2, rt0.c1))<((rt0.c1, vt0.c0, rt0.c1)))))))) UNION SELECT DISTINCT rt0.c1 FROM vt0, v0, rt0 WHERE (((((((vt0.c0) IS FALSE))<=((((vt0.c0, rt0.c2, rt0.c1))<((rt0.c1, vt0.c0, rt0.c1)))))) ISNULL));
SELECT DISTINCT rt0.c1 FROM vt0, v0, rt0;
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 WHERE (CASE WHEN CASE WHEN vt0.c0 THEN v0.c0 END THEN v0.c0 COLLATE NOCASE END) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, v0 WHERE ((NOT (CASE WHEN CASE WHEN vt0.c0 THEN v0.c0 END THEN v0.c0 COLLATE NOCASE END))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, v0 WHERE (((CASE WHEN CASE WHEN vt0.c0 THEN v0.c0 END THEN v0.c0 COLLATE NOCASE END) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (v0.c0) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (v0.c0))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((v0.c0) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((vt0.c0)<(vt0.c0))))>=((vt0.c0 COLLATE NOCASE)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((((((vt0.c0)<(vt0.c0))))>=((vt0.c0 COLLATE NOCASE)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((((vt0.c0)<(vt0.c0))))>=((vt0.c0 COLLATE NOCASE)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT rt0.c2, rt0.c1 FROM rt0, vt0, v0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0, vt0, v0 WHERE ((CAST(0xffffffffcb121341 AS BLOB) IN (((vt0.c0)<(0.9894845732490232))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0, vt0, v0 WHERE ((NOT ((CAST(0xffffffffcb121341 AS BLOB) IN (((vt0.c0)<(0.9894845732490232))))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0, vt0, v0 WHERE ((((CAST(0xffffffffcb121341 AS BLOB) IN (((vt0.c0)<(0.9894845732490232))))) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0, vt0, v0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL v0.c0, rt0.c2, rt0.c0, vt0.c0 FROM rt0, vt0, v0 GROUP BY v0.c0, rt0.c2, rt0.c0, vt0.c0;
SELECT v0.c0, rt0.c2, rt0.c0, vt0.c0 FROM rt0, vt0, v0 GROUP BY v0.c0, rt0.c2, rt0.c0, vt0.c0 HAVING MAX((((COUNT(rt0.c1)))>((GROUP_CONCAT(TOTAL(x'')))))) UNION ALL SELECT v0.c0, rt0.c2, rt0.c0, vt0.c0 FROM rt0, vt0, v0 GROUP BY v0.c0, rt0.c2, rt0.c0, vt0.c0 HAVING (NOT (MAX((((COUNT(rt0.c1)))>((GROUP_CONCAT(TOTAL(x'')))))))) UNION ALL SELECT ALL v0.c0, rt0.c2, rt0.c0, vt0.c0 FROM rt0, vt0, v0 GROUP BY v0.c0, rt0.c2, rt0.c0, vt0.c0 HAVING ((MAX((((COUNT(rt0.c1)))>((GROUP_CONCAT(TOTAL(x''))))))) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND(CAST(vt0.c0 AS BLOB)))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND(CAST(vt0.c0 AS BLOB)))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND(CAST(vt0.c0 AS BLOB)))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE ((rt0.c2 COLLATE NOCASE IN ())) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE ((NOT ((rt0.c2 COLLATE NOCASE IN ())))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE ((((rt0.c2 COLLATE NOCASE IN ())) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING RTRIM(UPPER(AVG(rt0.c1))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (RTRIM(UPPER(AVG(rt0.c1))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((RTRIM(UPPER(AVG(rt0.c1)))) ISNULL);
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING RTRIM(UPPER(AVG(rt0.c1))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (RTRIM(UPPER(AVG(rt0.c1))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((RTRIM(UPPER(AVG(rt0.c1)))) ISNULL);
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT * FROM v0, rt0;
SELECT * FROM v0, rt0 WHERE ((((v0.c0, v0.c0, '932099322')) NOT BETWEEN ((((rt0.c0)<<(rt0.c0)), ((rt0.c1)IS(rt0.c0)), (rt0.c2 IN ()))) AND ((((rt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), CASE rt0.c2  WHEN 0x499c1268 THEN rt0.c1 WHEN rt0.c0 THEN '1744744150' WHEN rt0.c2 THEN '0.09284630131108673' ELSE rt0.c0 END, (rt0.c2 IN ()))))) UNION ALL SELECT * FROM v0, rt0 WHERE ((NOT ((((v0.c0, v0.c0, '932099322')) NOT BETWEEN ((((rt0.c0)<<(rt0.c0)), ((rt0.c1)IS(rt0.c0)), (rt0.c2 IN ()))) AND ((((rt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), CASE rt0.c2  WHEN 0x499c1268 THEN rt0.c1 WHEN rt0.c0 THEN '1744744150' WHEN rt0.c2 THEN '0.09284630131108673' ELSE rt0.c0 END, (rt0.c2 IN ()))))))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((((((v0.c0, v0.c0, '932099322')) NOT BETWEEN ((((rt0.c0)<<(rt0.c0)), ((rt0.c1)IS(rt0.c0)), (rt0.c2 IN ()))) AND ((((rt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), CASE rt0.c2  WHEN 0x499c1268 THEN rt0.c1 WHEN rt0.c0 THEN '1744744150' WHEN rt0.c2 THEN '0.09284630131108673' ELSE rt0.c0 END, (rt0.c2 IN ()))))) ISNULL));
SELECT * FROM v0, rt0;
SELECT DISTINCT vt0.c0 FROM v0, rt0, vt0;
SELECT DISTINCT vt0.c0 FROM v0, rt0 NOT INDEXED, vt0 WHERE (((((-290749447)IS NOT(v0.c0)))||(rt0.c2 COLLATE BINARY))) UNION SELECT DISTINCT vt0.c0 FROM v0, rt0, vt0 WHERE ((NOT (((((-290749447)IS NOT(v0.c0)))||(rt0.c2 COLLATE BINARY))))) UNION SELECT DISTINCT vt0.c0 FROM v0, rt0, vt0 WHERE (((((((-290749447)IS NOT(v0.c0)))||(rt0.c2 COLLATE BINARY))) ISNULL));
SELECT DISTINCT vt0.c0 FROM v0, rt0, vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING MIN(TOTAL(MIN(COUNT(*)))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (MIN(TOTAL(MIN(COUNT(*)))))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((MIN(TOTAL(MIN(COUNT(*))))) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (TYPEOF(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (TYPEOF(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((TYPEOF(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((- (vt0.c0))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((- (vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((- (vt0.c0))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0, vt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM vt0, rt0 WHERE ((((LIKELY(DISTINCT rt0.c1)))<(((rt0.c0 IN ()))))) GROUP BY rt0.c2, rt0.c0, vt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM vt0, rt0 WHERE ((NOT ((((LIKELY(DISTINCT rt0.c1)))<(((rt0.c0 IN ()))))))) GROUP BY rt0.c2, rt0.c0, vt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM vt0, rt0 WHERE ((((((LIKELY(DISTINCT rt0.c1)))<(((rt0.c0 IN ()))))) ISNULL)) GROUP BY rt0.c2, rt0.c0, vt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0, vt0.c0, rt0.c1;
SELECT ALL vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM vt0 INNER JOIN rt0 ON ((((rt0.c0)<=(vt0.c0)))||(((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))) GROUP BY vt0.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM vt0 INNER JOIN rt0 ON ((((rt0.c0)<=(vt0.c0)))||(((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))) GROUP BY vt0.c0, rt0.c2, rt0.c0, rt0.c1 HAVING SUM(MAX(rt0.c1)) UNION ALL SELECT vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM vt0 INNER JOIN rt0 ON ((((rt0.c0)<=(vt0.c0)))||(((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))) GROUP BY vt0.c0, rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (SUM(MAX(rt0.c1)))) UNION ALL SELECT ALL vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM vt0 INNER JOIN rt0 ON ((((rt0.c0)<=(vt0.c0)))||(((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))) GROUP BY vt0.c0, rt0.c2, rt0.c0, rt0.c1 HAVING ((SUM(MAX(rt0.c1))) ISNULL);
SELECT v0.c0, rt0.c2, rt0.c0 FROM rt0, vt0, v0;
SELECT v0.c0, rt0.c2, rt0.c0 FROM rt0, vt0, v0 WHERE (((rt0.c1 IN ()) IN ())) UNION ALL SELECT v0.c0, rt0.c2, rt0.c0 FROM rt0, vt0, v0 WHERE ((NOT (((rt0.c1 IN ()) IN ())))) UNION ALL SELECT v0.c0, rt0.c2, rt0.c0 FROM rt0, vt0, v0 WHERE (((((rt0.c1 IN ()) IN ())) ISNULL));
SELECT v0.c0, rt0.c2, rt0.c0 FROM rt0, vt0, v0;
SELECT DISTINCT vt0.c0 FROM v0, vt0;
SELECT DISTINCT vt0.c0 FROM v0, vt0 WHERE ((NOT (((vt0.c0) IS TRUE)))) UNION SELECT DISTINCT vt0.c0 FROM v0, vt0 WHERE ((NOT ((NOT (((vt0.c0) IS TRUE)))))) UNION SELECT DISTINCT vt0.c0 FROM v0, vt0 NOT INDEXED WHERE ((((NOT (((vt0.c0) IS TRUE)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM v0, vt0;
SELECT ALL vt0.c0, v0.c0 FROM vt0 NATURAL JOIN v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0 NATURAL JOIN v0 WHERE (((('')>=(v0.c0)) IN (((vt0.c0) NOTNULL)))) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM vt0 NATURAL JOIN v0 WHERE ((NOT (((('')>=(v0.c0)) IN (((vt0.c0) NOTNULL)))))) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM vt0 NATURAL JOIN v0 WHERE (((((('')>=(v0.c0)) IN (((vt0.c0) NOTNULL)))) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0 NATURAL JOIN v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((SUM(x'') IN ()) IN ()) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((SUM(x'') IN ()) IN ()))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((SUM(x'') IN ()) IN ())) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((SUM(x'') IN ()) IN ()) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((SUM(x'') IN ()) IN ()))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((SUM(x'') IN ()) IN ())) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0;
SELECT ALL v0.c0 FROM vt0, v0 WHERE ((- (CASE v0.c0  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END))) ORDER BY ((((((vt0.c0) IS FALSE))AND((- (vt0.c0)))))AND(((vt0.c0)>(v0.c0)))) ASC, ((((((((((((vt0.c0)OR(v0.c0)))AND(v0.c0)))AND(json_array_length(v0.c0))))OR('UCo)\n2i')))OR(((vt0.c0)IS NOT(x'1bd2')))))AND(((v0.c0)|(v0.c0))))  NULLS LAST;
SELECT ALL v0.c0 FROM vt0, v0 WHERE ((NOT ((- (CASE v0.c0  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END))))) ORDER BY ((((((vt0.c0) IS FALSE))AND((- (vt0.c0)))))AND(((vt0.c0)>(v0.c0)))) ASC, ((((((((((((vt0.c0)OR(v0.c0)))AND(v0.c0)))AND(json_array_length(v0.c0))))OR('UCo)\n2i')))OR(((vt0.c0)IS NOT(x'1bd2')))))AND(((v0.c0)|(v0.c0))))  NULLS LAST;
SELECT ALL v0.c0 FROM vt0, v0 WHERE ((((- (CASE v0.c0  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END))) ISNULL)) ORDER BY ((((((vt0.c0) IS FALSE))AND((- (vt0.c0)))))AND(((vt0.c0)>(v0.c0)))) ASC, ((((((((((((vt0.c0)OR(v0.c0)))AND(v0.c0)))AND(json_array_length(v0.c0))))OR('UCo)\n2i')))OR(((vt0.c0)IS NOT(x'1bd2')))))AND(((v0.c0)|(v0.c0))))  NULLS LAST;
SELECT v0.c0 FROM vt0, v0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (((((((((((((((((((rt0.c0)IS NOT(rt0.c0)))OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))AND((((rt0.c2))>=((v0.c0))))))AND(CASE v0.c0  WHEN v0.c0 THEN 1851147160 END)))OR(rtreenode(rt0.c2, rt0.c1))))OR(x'd0d7')))OR(rt0.c1)))AND(0Xffffffff96f77588)))AND(NULL))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (((((((((((((((((((rt0.c0)IS NOT(rt0.c0)))OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))AND((((rt0.c2))>=((v0.c0))))))AND(CASE v0.c0  WHEN v0.c0 THEN 1851147160 END)))OR(rtreenode(rt0.c2, rt0.c1))))OR(x'd0d7')))OR(rt0.c1)))AND(0xffffffff96f77588)))AND(NULL))))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((((((((((((((((((((rt0.c0)IS NOT(rt0.c0)))OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))AND((((rt0.c2))>=((v0.c0))))))AND(CASE v0.c0  WHEN v0.c0 THEN 1851147160 END)))OR(rtreenode(rt0.c2, rt0.c1))))OR(x'd0d7')))OR(rt0.c1)))AND(0Xffffffff96f77588)))AND(NULL))) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT ALL v0.c0 FROM v0 FULL OUTER JOIN rt0 ON ((CAST(v0.c0 AS NUMERIC)) BETWEEN (((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)))AND(v0.c0))) AND (((rt0.c1)LIKE(v0.c0)))) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 FULL OUTER JOIN rt0 ON ((CAST(v0.c0 AS NUMERIC)) BETWEEN (((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)))AND(v0.c0))) AND (((rt0.c1)LIKE(v0.c0)))) WHERE (CASE WHEN (((v0.c0, rt0.c1, rt0.c0))>((rt0.c2, rt0.c2, rt0.c1))) THEN ((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c0)) ELSE NULL END) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 FULL OUTER JOIN rt0 ON ((CAST(v0.c0 AS NUMERIC)) BETWEEN (((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)))AND(v0.c0))) AND (((rt0.c1)LIKE(v0.c0)))) WHERE ((NOT (CASE WHEN (((v0.c0, rt0.c1, rt0.c0))>((rt0.c2, rt0.c2, rt0.c1))) THEN ((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c0)) ELSE NULL END))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 FULL OUTER JOIN rt0 ON ((CAST(v0.c0 AS NUMERIC)) BETWEEN (((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)))AND(v0.c0))) AND (((rt0.c1)LIKE(v0.c0)))) WHERE (((CASE WHEN (((v0.c0, rt0.c1, rt0.c0))>((rt0.c2, rt0.c2, rt0.c1))) THEN ((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c0)) ELSE NULL END) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 FULL OUTER JOIN rt0 ON ((CAST(v0.c0 AS NUMERIC)) BETWEEN (((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)))AND(v0.c0))) AND (((rt0.c1)LIKE(v0.c0)))) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 WHERE (CASE v0.c0 COLLATE RTRIM  WHEN ((vt0.c0)IS(v0.c0)) THEN CAST(vt0.c0 AS BLOB) END) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 WHERE ((NOT (CASE v0.c0 COLLATE RTRIM  WHEN ((vt0.c0)IS(v0.c0)) THEN CAST(vt0.c0 AS BLOB) END))) UNION ALL SELECT vt0.c0, v0.c0 FROM v0, vt0 WHERE (((CASE v0.c0 COLLATE RTRIM  WHEN ((vt0.c0)IS(v0.c0)) THEN CAST(vt0.c0 AS BLOB) END) ISNULL));
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((+ ((v0.c0 IN (v0.c0))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((+ ((v0.c0 IN (v0.c0))))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((+ ((v0.c0 IN (v0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT v0.c0, rt0.c1, vt0.c0, rt0.c0, rt0.c2 FROM rt0, vt0, v0 GROUP BY v0.c0, rt0.c1, vt0.c0, rt0.c0, rt0.c2;
SELECT v0.c0, rt0.c1, vt0.c0, rt0.c0, rt0.c2 FROM rt0, vt0, v0 WHERE (((((v0.c0) IS TRUE)) IS FALSE)) GROUP BY v0.c0, rt0.c1, vt0.c0, rt0.c0, rt0.c2 UNION SELECT v0.c0, rt0.c1, vt0.c0, rt0.c0, rt0.c2 FROM rt0, vt0, v0 WHERE ((NOT (((((v0.c0) IS TRUE)) IS FALSE)))) GROUP BY v0.c0, rt0.c1, vt0.c0, rt0.c0, rt0.c2 UNION SELECT ALL v0.c0, rt0.c1, vt0.c0, rt0.c0, rt0.c2 FROM rt0, vt0, v0 WHERE (((((((v0.c0) IS TRUE)) IS FALSE)) ISNULL)) GROUP BY v0.c0, rt0.c1, vt0.c0, rt0.c0, rt0.c2;
SELECT v0.c0, rt0.c1, vt0.c0, rt0.c0, rt0.c2 FROM rt0, vt0, v0 GROUP BY v0.c0, rt0.c1, vt0.c0, rt0.c0, rt0.c2;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING GROUP_CONCAT((v0.c0 IN ())) UNION ALL SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING (NOT (GROUP_CONCAT((v0.c0 IN ())))) UNION ALL SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING ((GROUP_CONCAT((v0.c0 IN ()))) ISNULL);
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING GROUP_CONCAT((v0.c0 IN ())) UNION ALL SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING (NOT (GROUP_CONCAT((v0.c0 IN ())))) UNION ALL SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING ((GROUP_CONCAT((v0.c0 IN ()))) ISNULL);
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT vt0.c0 FROM vt0, v0, rt0;
SELECT vt0.c0 FROM vt0, v0, rt0 WHERE (CAST(0.48761869448880635 AS NUMERIC)) UNION ALL SELECT ALL vt0.c0 FROM vt0, v0, rt0 WHERE ((NOT (CAST(0.48761869448880635 AS NUMERIC)))) UNION ALL SELECT vt0.c0 FROM vt0, v0, rt0 WHERE (((CAST(0.48761869448880635 AS NUMERIC)) ISNULL));
SELECT vt0.c0 FROM vt0, v0, rt0;
SELECT DISTINCT * FROM rt0, vt0, v0;
SELECT DISTINCT * FROM rt0, vt0, v0 WHERE (-1.525510507E9) UNION SELECT DISTINCT * FROM rt0, vt0, v0 WHERE ((NOT (-1.525510507E9))) UNION SELECT DISTINCT * FROM rt0, vt0, v0 WHERE (((-1.525510507E9) ISNULL));
SELECT DISTINCT * FROM rt0, vt0, v0;
SELECT ALL rt0.c2, rt0.c1 FROM v0, rt0, vt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM v0, rt0, vt0 WHERE ((~ (rt0.c0 COLLATE BINARY))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM v0, rt0, vt0 WHERE ((NOT ((~ (rt0.c0 COLLATE BINARY))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM v0, rt0, vt0 WHERE ((((~ (rt0.c0 COLLATE BINARY))) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM v0, rt0, vt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c1, rt0.c2, vt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c1)<(((rt0.c2)IS(vt0.c0)))) GROUP BY rt0.c1, rt0.c2, vt0.c0;
SELECT ALL rt0.c1, rt0.c2, vt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c1)<(((rt0.c2)IS(vt0.c0)))) GROUP BY rt0.c1, rt0.c2, vt0.c0 HAVING MAX(COUNT(*)) UNION ALL SELECT rt0.c1, rt0.c2, vt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c1)<(((rt0.c2)IS(vt0.c0)))) GROUP BY rt0.c1, rt0.c2, vt0.c0 HAVING (NOT (MAX(COUNT(*)))) UNION ALL SELECT ALL rt0.c1, rt0.c2, vt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c1)<(((rt0.c2)IS(vt0.c0)))) GROUP BY rt0.c1, rt0.c2, vt0.c0 HAVING ((MAX(COUNT(*))) ISNULL);
SELECT TOTAL(0.81802965791864) FROM v0, rt0, vt0 ORDER BY (~ (v0.c0)) DESC  NULLS LAST;
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE ('-1211602761') UNION ALL SELECT ALL * FROM v0 WHERE ((NOT ('-1211602761'))) UNION ALL SELECT ALL * FROM v0 WHERE ((('-1211602761') ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT rt0.c2, v0.c0, vt0.c0, rt0.c0 FROM rt0, v0, vt0;
SELECT DISTINCT rt0.c2, v0.c0, vt0.c0, rt0.c0 FROM rt0, v0, vt0 WHERE (((NULL) NOT NULL)) UNION SELECT DISTINCT rt0.c2, v0.c0, vt0.c0, rt0.c0 FROM rt0, v0, vt0 WHERE ((NOT (((NULL) NOT NULL)))) UNION SELECT DISTINCT rt0.c2, v0.c0, vt0.c0, rt0.c0 FROM rt0, v0, vt0 WHERE (((((NULL) NOT NULL)) ISNULL));
SELECT DISTINCT rt0.c2, v0.c0, vt0.c0, rt0.c0 FROM rt0, v0, vt0;
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 WHERE ((load_extension(vt0.c0, v0.c0) IN ())) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, v0 WHERE ((NOT ((load_extension(vt0.c0, v0.c0) IN ())))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, v0 WHERE ((((load_extension(vt0.c0, v0.c0) IN ())) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((SUM(AVG(vt0.c0))))<>((MIN(GROUP_CONCAT(COUNT(*)))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((SUM(AVG(vt0.c0))))!=((MIN(GROUP_CONCAT(COUNT(*)))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((SUM(AVG(vt0.c0))))!=((MIN(GROUP_CONCAT(COUNT(*))))))) ISNULL);
SELECT ALL rt0.c1, vt0.c0, rt0.c0 FROM vt0 INNER JOIN v0 ON ((PRINTF(rt0.c2, vt0.c0, v0.c0))>(((vt0.c0)IS NOT(rt0.c0)))) LEFT OUTER JOIN rt0 ON ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN v0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN 0.4691988975259834 END)AND(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))));
SELECT ALL rt0.c1, vt0.c0, rt0.c0 FROM vt0 INNER JOIN v0 ON ((PRINTF(rt0.c2, vt0.c0, v0.c0))>(((vt0.c0)IS NOT(rt0.c0)))) LEFT OUTER JOIN rt0 ON ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN v0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN 0.4691988975259834 END)AND(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))) WHERE ((((~ (0xfffffffff39d4b75))) IS TRUE)) UNION ALL SELECT ALL rt0.c1, vt0.c0, rt0.c0 FROM vt0 INNER JOIN v0 ON ((PRINTF(rt0.c2, vt0.c0, v0.c0))>(((vt0.c0)IS NOT(rt0.c0)))) LEFT OUTER JOIN rt0 ON ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN v0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN 0.4691988975259834 END)AND(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))) WHERE ((NOT ((((~ (0Xfffffffff39d4b75))) IS TRUE)))) UNION ALL SELECT rt0.c1, vt0.c0, rt0.c0 FROM vt0 INNER JOIN v0 ON ((PRINTF(rt0.c2, vt0.c0, v0.c0))>(((vt0.c0)IS NOT(rt0.c0)))) LEFT OUTER JOIN rt0 ON ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN v0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN 0.4691988975259834 END)AND(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))) WHERE ((((((~ (0xfffffffff39d4b75))) IS TRUE)) ISNULL));
SELECT ALL rt0.c1, vt0.c0, rt0.c0 FROM vt0 INNER JOIN v0 ON ((PRINTF(rt0.c2, vt0.c0, v0.c0))>(((vt0.c0)IS NOT(rt0.c0)))) LEFT OUTER JOIN rt0 ON ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN v0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN 0.4691988975259834 END)AND(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (rt0.c0) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT ALL v0.c0 FROM v0, rt0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, rt0 WHERE (CAST((~ (rt0.c0)) AS TEXT)) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, rt0 WHERE ((NOT (CAST((~ (rt0.c0)) AS TEXT)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, rt0 WHERE (((CAST((~ (rt0.c0)) AS TEXT)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, rt0 GROUP BY v0.c0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((((COUNT(*))AND((- (rt0.c1)))))AND(CASE MAX(MIN(SUM(0.8414735374071516)))  WHEN MIN(MIN(AVG(MIN(rt0.c1)))) THEN rt0.c2 ELSE rt0.c2 END)) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (((((COUNT(*))AND((- (rt0.c1)))))AND(CASE MAX(MIN(SUM(0.8414735374071516)))  WHEN MIN(MIN(AVG(MIN(rt0.c1)))) THEN rt0.c2 ELSE rt0.c2 END)))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((((((COUNT(*))AND((- (rt0.c1)))))AND(CASE MAX(MIN(SUM(0.8414735374071516)))  WHEN MIN(MIN(AVG(MIN(rt0.c1)))) THEN rt0.c2 ELSE rt0.c2 END))) ISNULL);
SELECT TOTAL(x'') FROM v0 ORDER BY ((((((v0.c0)IS(v0.c0)))AND(v0.c0 COLLATE NOCASE)))OR((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((0x717b4186, v0.c0, 0.10915179938105968)))))  NULLS LAST;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (json_extract((0Xffffffffb7c868b7 IN ()), ((x'bd4e')OR(rt0.c0)), x'', (rt0.c0 IN ()))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (json_extract((0xffffffffb7c868b7 IN ()), ((x'bd4e')OR(rt0.c0)), x'', (rt0.c0 IN ()))))) UNION ALL SELECT * FROM rt0 WHERE (((json_extract((0xffffffffb7c868b7 IN ()), ((x'bd4e')OR(rt0.c0)), x'', (rt0.c0 IN ()))) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))))>((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN -6.87554241E8 END)))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT ((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))))>((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN -6.87554241E8 END)))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))))>((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN -6.87554241E8 END)))) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((5.90680486E8 IN ())) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((5.90680486E8 IN ())))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((5.90680486E8 IN ())) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TOTAL(CAST(COUNT(*) AS INTEGER)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(CAST(COUNT(*) AS INTEGER)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(CAST(COUNT(*) AS INTEGER))) ISNULL);
SELECT * FROM vt0 NATURAL JOIN v0;
SELECT * FROM vt0 NATURAL JOIN v0 WHERE (((((((((((((v0.c0 COLLATE RTRIM)AND(NULL)))AND(((vt0.c0)IS NOT(vt0.c0)))))AND(vt0.c0 COLLATE NOCASE)))AND(((vt0.c0)/(vt0.c0)))))AND(((vt0.c0)+(vt0.c0)))))OR(((((v0.c0)OR(vt0.c0)))OR(v0.c0))))) UNION ALL SELECT * FROM vt0 NATURAL JOIN v0 WHERE ((NOT (((((((((((((v0.c0 COLLATE RTRIM)AND(NULL)))AND(((vt0.c0)IS NOT(vt0.c0)))))AND(vt0.c0 COLLATE NOCASE)))AND(((vt0.c0)/(vt0.c0)))))AND(((vt0.c0)+(vt0.c0)))))OR(((((v0.c0)OR(vt0.c0)))OR(v0.c0))))))) UNION ALL SELECT * FROM vt0 NATURAL JOIN v0 WHERE (((((((((((((((v0.c0 COLLATE RTRIM)AND(NULL)))AND(((vt0.c0)IS NOT(vt0.c0)))))AND(vt0.c0 COLLATE NOCASE)))AND(((vt0.c0)/(vt0.c0)))))AND(((vt0.c0)+(vt0.c0)))))OR(((((v0.c0)OR(vt0.c0)))OR(v0.c0))))) ISNULL));
SELECT * FROM vt0 NATURAL JOIN v0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (0x27c7b644) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (0x27c7b644))) UNION SELECT DISTINCT * FROM rt0 WHERE (((0x27c7b644) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL v0.c0, rt0.c1, rt0.c0 FROM rt0, v0, vt0 GROUP BY v0.c0, rt0.c1, rt0.c0;
SELECT v0.c0, rt0.c1, rt0.c0 FROM rt0, v0, vt0 WHERE (CASE rt0.c1  WHEN vt0.c0 THEN rt0.c2 END COLLATE RTRIM) GROUP BY v0.c0, rt0.c1, rt0.c0 UNION SELECT v0.c0, rt0.c1, rt0.c0 FROM rt0, v0, vt0 WHERE ((NOT (CASE rt0.c1  WHEN vt0.c0 THEN rt0.c2 END COLLATE RTRIM))) GROUP BY v0.c0, rt0.c1, rt0.c0 UNION SELECT ALL v0.c0, rt0.c1, rt0.c0 FROM rt0, v0, vt0 WHERE (((CASE rt0.c1  WHEN vt0.c0 THEN rt0.c2 END COLLATE RTRIM) ISNULL)) GROUP BY v0.c0, rt0.c1, rt0.c0;
SELECT ALL v0.c0, rt0.c1, rt0.c0 FROM rt0, v0, vt0 GROUP BY v0.c0, rt0.c1, rt0.c0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0, v0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0, v0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING GROUP_CONCAT(rt0.c1) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0, v0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (GROUP_CONCAT(rt0.c1))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0, v0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((GROUP_CONCAT(rt0.c1)) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0, v0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0, v0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING GROUP_CONCAT(rt0.c1) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0, v0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (GROUP_CONCAT(rt0.c1))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0, v0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((GROUP_CONCAT(rt0.c1)) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0, v0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (((((rt0.c1)IS(rt0.c2))) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))) AND (((rt0.c1)AND(rt0.c2))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((rt0.c1)IS(rt0.c2))) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))) AND (((rt0.c1)AND(rt0.c2))))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((rt0.c1)IS(rt0.c2))) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))) AND (((rt0.c1)AND(rt0.c2))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((((v0.c0))<((v0.c0)))) NOT BETWEEN ((+ (x''))) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((((v0.c0))<((v0.c0)))) NOT BETWEEN ((+ (x''))) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((((v0.c0))<((v0.c0)))) NOT BETWEEN ((+ (x''))) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CAST('1384255695' AS REAL)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CAST('1384255695' AS REAL)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST('1384255695' AS REAL)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM rt0, v0, vt0 GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM rt0, v0, vt0 GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM rt0, v0, vt0 GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM rt0, v0, vt0 GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM rt0, v0, vt0 GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM rt0, v0, vt0 GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM rt0, v0, vt0 GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM rt0, v0, vt0 GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM rt0, v0, vt0 GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c2;
SELECT ALL vt0.c0 FROM v0, rt0, vt0;
SELECT vt0.c0 FROM v0, rt0, vt0 WHERE (((((((((CAST(rt0.c2 AS INTEGER))AND('0.3902993385199467' COLLATE NOCASE)))AND(((v0.c0)>=(0.8219811068429751)))))OR(CAST(x'' AS NUMERIC))))AND(0.4671409376245782))) UNION ALL SELECT ALL vt0.c0 FROM v0, rt0, vt0 WHERE ((NOT (((((((((CAST(rt0.c2 AS INTEGER))AND('0.3902993385199467' COLLATE NOCASE)))AND(((v0.c0)>=(0.8219811068429751)))))OR(CAST(x'' AS NUMERIC))))AND(0.4671409376245782))))) UNION ALL SELECT ALL vt0.c0 FROM v0, rt0, vt0 WHERE (((((((((((CAST(rt0.c2 AS INTEGER))AND('0.3902993385199467' COLLATE NOCASE)))AND(((v0.c0)>=(0.8219811068429751)))))OR(CAST(x'' AS NUMERIC))))AND(0.4671409376245782))) ISNULL));
SELECT ALL vt0.c0 FROM v0, rt0, vt0;
SELECT DISTINCT * FROM v0, vt0, rt0;
SELECT DISTINCT * FROM v0, vt0, rt0 WHERE ((((((((((((((+ (rt0.c0)))OR((('')>(rt0.c1)))))OR(((rt0.c0)<>(vt0.c0)))))AND(((('', rt0.c1, v0.c0))<((v0.c0, rt0.c0, rt0.c0))))))OR(CAST(rt0.c0 AS REAL))))OR(((vt0.c0) IS TRUE))))AND((((v0.c0, vt0.c0, rt0.c2)) BETWEEN ((NULL, v0.c0, rt0.c1)) AND ((rt0.c1, v0.c0, rt0.c2)))))) UNION SELECT DISTINCT * FROM v0, vt0, rt0 NOT INDEXED WHERE ((NOT ((((((((((((((+ (rt0.c0)))OR((('')>(rt0.c1)))))OR(((rt0.c0)!=(vt0.c0)))))AND(((('', rt0.c1, v0.c0))<((v0.c0, rt0.c0, rt0.c0))))))OR(CAST(rt0.c0 AS REAL))))OR(((vt0.c0) IS TRUE))))AND((((v0.c0, vt0.c0, rt0.c2)) BETWEEN ((NULL, v0.c0, rt0.c1)) AND ((rt0.c1, v0.c0, rt0.c2)))))))) UNION SELECT DISTINCT * FROM v0, vt0, rt0 WHERE ((((((((((((((((+ (rt0.c0)))OR((('')>(rt0.c1)))))OR(((rt0.c0)<>(vt0.c0)))))AND(((('', rt0.c1, v0.c0))<((v0.c0, rt0.c0, rt0.c0))))))OR(CAST(rt0.c0 AS REAL))))OR(((vt0.c0) IS TRUE))))AND((((v0.c0, vt0.c0, rt0.c2)) BETWEEN ((NULL, v0.c0, rt0.c1)) AND ((rt0.c1, v0.c0, rt0.c2)))))) ISNULL));
SELECT DISTINCT * FROM v0, vt0, rt0;
SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 WHERE (CASE WHEN ((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 END END) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt0, v0 WHERE ((NOT (CASE WHEN ((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 END END))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt0, v0 WHERE (((CASE WHEN ((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 END END) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((((((((((((AVG(rt0.c0))AND(((rt0.c0) NOT BETWEEN (GROUP_CONCAT(COUNT(rt0.c0))) AND (MAX(MAX(rt0.c0)))))))AND(MIN(rt0.c0))))OR(((COUNT(rt0.c0)) NOT BETWEEN (1591791071) AND (rt0.c1)))))AND(MIN(rt0.c1))))OR(MIN(MAX(GROUP_CONCAT(rt0.c0))))))AND(((((MAX(rt0.c1))OR(rt0.c2)))AND(rt0.c2)))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (((((((((((((AVG(rt0.c0))AND(((rt0.c0) NOT BETWEEN (GROUP_CONCAT(COUNT(rt0.c0))) AND (MAX(MAX(rt0.c0)))))))AND(MIN(rt0.c0))))OR(((COUNT(rt0.c0)) NOT BETWEEN (1591791071) AND (rt0.c1)))))AND(MIN(rt0.c1))))OR(MIN(MAX(GROUP_CONCAT(rt0.c0))))))AND(((((MAX(rt0.c1))OR(rt0.c2)))AND(rt0.c2)))))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((((((((((((((AVG(rt0.c0))AND(((rt0.c0) NOT BETWEEN (GROUP_CONCAT(COUNT(rt0.c0))) AND (MAX(MAX(rt0.c0)))))))AND(MIN(rt0.c0))))OR(((COUNT(rt0.c0)) NOT BETWEEN (1591791071) AND (rt0.c1)))))AND(MIN(rt0.c1))))OR(MIN(MAX(GROUP_CONCAT(rt0.c0))))))AND(((((MAX(rt0.c1))OR(rt0.c2)))AND(rt0.c2))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((((x'', vt0.c0, vt0.c0)) BETWEEN (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), (((vt0.c0)) BETWEEN ((0.16586018512928868)) AND (('1910988296'))))) AND ((((vt0.c0)/(vt0.c0)), (NOT (vt0.c0)), ((vt0.c0)IS NOT(vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((x'', vt0.c0, vt0.c0)) BETWEEN (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), (((vt0.c0)) BETWEEN ((0.16586018512928868)) AND (('1910988296'))))) AND ((((vt0.c0)/(vt0.c0)), (NOT (vt0.c0)), ((vt0.c0)IS NOT(vt0.c0)))))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((((x'', vt0.c0, vt0.c0)) BETWEEN (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), (((vt0.c0)) BETWEEN ((0.16586018512928868)) AND (('1910988296'))))) AND ((((vt0.c0)/(vt0.c0)), (NOT (vt0.c0)), ((vt0.c0)IS NOT(vt0.c0)))))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT rt0.c2, vt0.c0, rt0.c0, v0.c0 FROM vt0 CROSS JOIN rt0 ON (+ ((v0.c0 IN ()))) FULL OUTER JOIN v0 ON (((((((x'')OR(x'')))AND(vt0.c0))))=((CAST(rt0.c2 AS REAL))));
SELECT DISTINCT rt0.c2, vt0.c0, rt0.c0, v0.c0 FROM vt0 CROSS JOIN rt0 ON (+ ((v0.c0 IN ()))) FULL OUTER JOIN v0 ON (((((((x'')OR(x'')))AND(vt0.c0))))=((CAST(rt0.c2 AS REAL)))) WHERE (load_extension((rt0.c2 IN (rt0.c2)))) UNION SELECT DISTINCT rt0.c2, vt0.c0, rt0.c0, v0.c0 FROM vt0 CROSS JOIN rt0 ON (+ ((v0.c0 IN ()))) FULL OUTER JOIN v0 ON (((((((x'')OR(x'')))AND(vt0.c0))))=((CAST(rt0.c2 AS REAL)))) WHERE ((NOT (load_extension((rt0.c2 IN (rt0.c2)))))) UNION SELECT DISTINCT rt0.c2, vt0.c0, rt0.c0, v0.c0 FROM vt0 CROSS JOIN rt0 ON (+ ((v0.c0 IN ()))) FULL OUTER JOIN v0 ON (((((((x'')OR(x'')))AND(vt0.c0))))=((CAST(rt0.c2 AS REAL)))) WHERE (((load_extension((rt0.c2 IN (rt0.c2)))) ISNULL));
SELECT DISTINCT rt0.c2, vt0.c0, rt0.c0, v0.c0 FROM vt0 CROSS JOIN rt0 ON (+ ((v0.c0 IN ()))) FULL OUTER JOIN v0 ON (((((((x'')OR(x'')))AND(vt0.c0))))=((CAST(rt0.c2 AS REAL))));
SELECT ALL vt0.c0, v0.c0, rt0.c1, rt0.c0, rt0.c2 FROM v0, rt0, vt0 GROUP BY vt0.c0, v0.c0, rt0.c1, rt0.c0, rt0.c2;
SELECT ALL vt0.c0, v0.c0, rt0.c1, rt0.c0, rt0.c2 FROM v0, rt0, vt0 WHERE (CAST(v0.c0 AS NUMERIC)) GROUP BY vt0.c0, v0.c0, rt0.c1, rt0.c0, rt0.c2 UNION SELECT vt0.c0, v0.c0, rt0.c1, rt0.c0, rt0.c2 FROM v0, rt0, vt0 WHERE ((NOT (CAST(v0.c0 AS NUMERIC)))) GROUP BY vt0.c0, v0.c0, rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL vt0.c0, v0.c0, rt0.c1, rt0.c0, rt0.c2 FROM v0, rt0, vt0 WHERE (((CAST(v0.c0 AS NUMERIC)) ISNULL)) GROUP BY vt0.c0, v0.c0, rt0.c1, rt0.c0, rt0.c2;
SELECT ALL vt0.c0, v0.c0, rt0.c1, rt0.c0, rt0.c2 FROM v0, rt0, vt0 GROUP BY vt0.c0, v0.c0, rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (((rt0.c2) IS TRUE) IN ()) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT ((((rt0.c2) IS TRUE) IN ()))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (((((rt0.c2) IS TRUE) IN ())) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (((rt0.c2) IS TRUE) IN ()) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT ((((rt0.c2) IS TRUE) IN ()))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (((((rt0.c2) IS TRUE) IN ())) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL v0.c0, rt0.c1, rt0.c2, rt0.c0 FROM v0, rt0;
SELECT v0.c0, rt0.c1, rt0.c2, rt0.c0 FROM v0, rt0 WHERE (LOWER(rt0.c0) COLLATE BINARY) UNION ALL SELECT v0.c0, rt0.c1, rt0.c2, rt0.c0 FROM v0, rt0 WHERE ((NOT (LOWER(rt0.c0) COLLATE BINARY))) UNION ALL SELECT ALL v0.c0, rt0.c1, rt0.c2, rt0.c0 FROM v0, rt0 WHERE (((LOWER(rt0.c0) COLLATE BINARY) ISNULL));
SELECT ALL v0.c0, rt0.c1, rt0.c2, rt0.c0 FROM v0, rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (UNLIKELY((((v0.c0))<=((v0.c0))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (UNLIKELY((((v0.c0))<=((v0.c0))))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((UNLIKELY((((v0.c0))<=((v0.c0))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((CAST(rt0.c1 AS REAL) IN ())) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((CAST(rt0.c1 AS REAL) IN ())))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((CAST(rt0.c1 AS REAL) IN ())) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c1, v0.c0, vt0.c0 FROM vt0 INNER JOIN v0 ON (((((vt0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((rt0.c0, v0.c0, vt0.c0)) AND ((rt0.c2, rt0.c2, NULL)))) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND ('2021850737')) CROSS JOIN rt0 ON (- ((+ (v0.c0)))) GROUP BY rt0.c1, v0.c0, vt0.c0;
SELECT rt0.c1, v0.c0, vt0.c0 FROM vt0 INNER JOIN v0 ON (((((vt0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((rt0.c0, v0.c0, vt0.c0)) AND ((rt0.c2, rt0.c2, NULL)))) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND ('2021850737')) CROSS JOIN rt0 ON (- ((+ (v0.c0)))) GROUP BY rt0.c1, v0.c0, vt0.c0 HAVING (AVG(rt0.c2) IN ()) UNION ALL SELECT ALL rt0.c1, v0.c0, vt0.c0 FROM vt0 INNER JOIN v0 ON (((((vt0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((rt0.c0, v0.c0, vt0.c0)) AND ((rt0.c2, rt0.c2, NULL)))) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND ('2021850737')) CROSS JOIN rt0 ON (- ((+ (v0.c0)))) GROUP BY rt0.c1, v0.c0, vt0.c0 HAVING (NOT ((AVG(rt0.c2) IN ()))) UNION ALL SELECT rt0.c1, v0.c0, vt0.c0 FROM vt0 INNER JOIN v0 ON (((((vt0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((rt0.c0, v0.c0, vt0.c0)) AND ((rt0.c2, rt0.c2, NULL)))) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND ('2021850737')) CROSS JOIN rt0 ON (- ((+ (v0.c0)))) GROUP BY rt0.c1, v0.c0, vt0.c0 HAVING (((AVG(rt0.c2) IN ())) ISNULL);
SELECT ALL rt0.c1, v0.c0, vt0.c0 FROM vt0 INNER JOIN v0 ON (((((vt0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((rt0.c0, v0.c0, vt0.c0)) AND ((rt0.c2, rt0.c2, NULL)))) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND ('2021850737')) CROSS JOIN rt0 ON (- ((+ (v0.c0)))) GROUP BY rt0.c1, v0.c0, vt0.c0;
SELECT rt0.c1, v0.c0, vt0.c0 FROM vt0 INNER JOIN v0 ON (((((vt0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((rt0.c0, v0.c0, vt0.c0)) AND ((rt0.c2, rt0.c2, NULL)))) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND ('2021850737')) CROSS JOIN rt0 ON (- ((+ (v0.c0)))) GROUP BY rt0.c1, v0.c0, vt0.c0 HAVING (AVG(rt0.c2) IN ()) UNION ALL SELECT ALL rt0.c1, v0.c0, vt0.c0 FROM vt0 INNER JOIN v0 ON (((((vt0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((rt0.c0, v0.c0, vt0.c0)) AND ((rt0.c2, rt0.c2, NULL)))) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND ('2021850737')) CROSS JOIN rt0 ON (- ((+ (v0.c0)))) GROUP BY rt0.c1, v0.c0, vt0.c0 HAVING (NOT ((AVG(rt0.c2) IN ()))) UNION ALL SELECT rt0.c1, v0.c0, vt0.c0 FROM vt0 INNER JOIN v0 ON (((((vt0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((rt0.c0, v0.c0, vt0.c0)) AND ((rt0.c2, rt0.c2, NULL)))) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND ('2021850737')) CROSS JOIN rt0 ON (- ((+ (v0.c0)))) GROUP BY rt0.c1, v0.c0, vt0.c0 HAVING (((AVG(rt0.c2) IN ())) ISNULL);
SELECT ALL rt0.c1, v0.c0, vt0.c0 FROM vt0 INNER JOIN v0 ON (((((vt0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((rt0.c0, v0.c0, vt0.c0)) AND ((rt0.c2, rt0.c2, NULL)))) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND ('2021850737')) CROSS JOIN rt0 ON (- ((+ (v0.c0)))) GROUP BY rt0.c1, v0.c0, vt0.c0;
SELECT rt0.c2, rt0.c0, vt0.c0, rt0.c1, v0.c0 FROM vt0, rt0, v0;
SELECT rt0.c2, rt0.c0, vt0.c0, rt0.c1, v0.c0 FROM vt0, rt0, v0 WHERE ((rt0.c1 IN ())) UNION ALL SELECT rt0.c2, rt0.c0, vt0.c0, rt0.c1, v0.c0 FROM vt0, rt0, v0 WHERE ((NOT ((rt0.c1 IN ())))) UNION ALL SELECT ALL rt0.c2, rt0.c0, vt0.c0, rt0.c1, v0.c0 FROM vt0, rt0, v0 WHERE ((((rt0.c1 IN ())) ISNULL));
SELECT rt0.c2, rt0.c0, vt0.c0, rt0.c1, v0.c0 FROM vt0, rt0, v0;
SELECT DISTINCT * FROM rt0, v0 INNER JOIN vt0 ON (((((rt0.c0, rt0.c1, rt0.c2))>=((rt0.c2, vt0.c0, vt0.c0))))>>(((v0.c0) BETWEEN (rt0.c2) AND (590680486))));
SELECT DISTINCT * FROM rt0, v0 INNER JOIN vt0 ON (((((rt0.c0, rt0.c1, rt0.c2))>=((rt0.c2, vt0.c0, vt0.c0))))>>(((v0.c0) BETWEEN (rt0.c2) AND (590680486)))) WHERE (COALESCE(DISTINCT (~ (rt0.c1)), ((rt0.c0) IS FALSE), rt0.c1 COLLATE RTRIM, (rt0.c1 IN ()))) UNION SELECT DISTINCT * FROM rt0, v0 INNER JOIN vt0 ON (((((rt0.c0, rt0.c1, rt0.c2))>=((rt0.c2, vt0.c0, vt0.c0))))>>(((v0.c0) BETWEEN (rt0.c2) AND (590680486)))) WHERE ((NOT (COALESCE(DISTINCT (~ (rt0.c1)), ((rt0.c0) IS FALSE), rt0.c1 COLLATE RTRIM, (rt0.c1 IN ()))))) UNION SELECT DISTINCT * FROM rt0, v0 INNER JOIN vt0 ON (((((rt0.c0, rt0.c1, rt0.c2))>=((rt0.c2, vt0.c0, vt0.c0))))>>(((v0.c0) BETWEEN (rt0.c2) AND (590680486)))) WHERE (((COALESCE(DISTINCT (~ (rt0.c1)), ((rt0.c0) IS FALSE), rt0.c1 COLLATE RTRIM, (rt0.c1 IN ()))) ISNULL));
SELECT DISTINCT * FROM rt0, v0 INNER JOIN vt0 ON (((((rt0.c0, rt0.c1, rt0.c2))>=((rt0.c2, vt0.c0, vt0.c0))))>>(((v0.c0) BETWEEN (rt0.c2) AND (590680486))));
SELECT ALL vt0.c0, v0.c0 FROM vt0 NOT INDEXED RIGHT OUTER JOIN v0 ON 0.8593407627865042 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON 0.8593407627865042 WHERE (((((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, NULL, v0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))<((vt0.c0)))) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON 0.8593407627865042 WHERE ((NOT (((((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, NULL, v0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))<((vt0.c0)))))) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON 0.8593407627865042 WHERE (((((((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, NULL, v0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))<((vt0.c0)))) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0 NOT INDEXED RIGHT OUTER JOIN v0 ON 0.8593407627865042 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (- ((((AVG(vt0.c0), SUM(vt0.c0), vt0.c0))<>((COUNT(MAX(vt0.c0)), COUNT(AVG(TOTAL(vt0.c0))), vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((- ((((AVG(vt0.c0), SUM(vt0.c0), vt0.c0))!=((COUNT(MAX(vt0.c0)), COUNT(AVG(TOTAL(vt0.c0))), vt0.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((- ((((AVG(vt0.c0), SUM(vt0.c0), vt0.c0))<>((COUNT(MAX(vt0.c0)), COUNT(AVG(TOTAL(vt0.c0))), vt0.c0)))))) ISNULL);
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 WHERE (vt0.c0) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE (((vt0.c0) ISNULL));
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0;
SELECT DISTINCT rt0.c2 FROM rt0 INNER JOIN vt0 ON (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c0))))<>((((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c2)))));
SELECT DISTINCT rt0.c2 FROM rt0 INNER JOIN vt0 ON (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c0))))<>((((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c2))))) WHERE (CAST((rt0.c1 IN ()) AS INTEGER)) UNION SELECT DISTINCT rt0.c2 FROM rt0 INNER JOIN vt0 ON (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c0))))<>((((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c2))))) WHERE ((NOT (CAST((rt0.c1 IN ()) AS INTEGER)))) UNION SELECT DISTINCT rt0.c2 FROM rt0 INNER JOIN vt0 ON (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c0))))<>((((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c2))))) WHERE (((CAST((rt0.c1 IN ()) AS INTEGER)) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0 INNER JOIN vt0 ON (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c0))))<>((((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c2)))));
SELECT ALL vt0.c0, rt0.c1 FROM rt0 FULL OUTER JOIN v0 ON ((((((rt0.c2)AND(v0.c0)))OR(vt0.c0)))IS((v0.c0 IN (x'8d0f', v0.c0)))) FULL OUTER JOIN vt0 ON HEX(((rt0.c1) ISNULL)) GROUP BY vt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c2 FROM rt0, vt0 NOT INDEXED, v0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0, vt0, v0 GROUP BY rt0.c0, rt0.c2 HAVING SUM(TOTAL(SUM(COUNT(MAX(TOTAL(rt0.c1)))))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0, vt0, v0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (SUM(TOTAL(SUM(COUNT(MAX(TOTAL(rt0.c1)))))))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0, vt0, v0 GROUP BY rt0.c0, rt0.c2 HAVING ((SUM(TOTAL(SUM(COUNT(MAX(TOTAL(rt0.c1))))))) ISNULL);
SELECT * FROM vt0, rt0, v0;
SELECT * FROM vt0, rt0, v0 WHERE (HEX(((rt0.c1)%(v0.c0)))) UNION ALL SELECT * FROM vt0, rt0, v0 WHERE ((NOT (HEX(((rt0.c1)%(v0.c0)))))) UNION ALL SELECT * FROM vt0, rt0, v0 WHERE (((HEX(((rt0.c1)%(v0.c0)))) ISNULL));
SELECT * FROM vt0, rt0, v0;
SELECT DISTINCT * FROM v0, vt0, rt0;
SELECT DISTINCT * FROM v0, vt0, rt0 WHERE ((((((rt0.c1)GLOB(rt0.c0))))<(('-1247786747')))) UNION SELECT DISTINCT * FROM v0, vt0, rt0 WHERE ((NOT ((((((rt0.c1)GLOB(rt0.c0))))<(('-1247786747')))))) UNION SELECT DISTINCT * FROM v0, vt0, rt0 WHERE ((((((((rt0.c1)GLOB(rt0.c0))))<(('-1247786747')))) ISNULL));
SELECT DISTINCT * FROM v0, vt0, rt0;
SELECT vt0.c0, v0.c0 FROM v0 CROSS JOIN vt0 ON ((((((v0.c0)AND(vt0.c0)))OR(vt0.c0))) NOT BETWEEN (((v0.c0) IS TRUE)) AND (vt0.c0)) GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0 CROSS JOIN vt0 ON ((((((v0.c0)AND(vt0.c0)))OR(vt0.c0))) NOT BETWEEN (((v0.c0) IS TRUE)) AND (vt0.c0)) WHERE (vt0.c0) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM v0 CROSS JOIN vt0 ON ((((((v0.c0)AND(vt0.c0)))OR(vt0.c0))) NOT BETWEEN (((v0.c0) IS TRUE)) AND (vt0.c0)) WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM v0 CROSS JOIN vt0 ON ((((((v0.c0)AND(vt0.c0)))OR(vt0.c0))) NOT BETWEEN (((v0.c0) IS TRUE)) AND (vt0.c0)) WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM v0 CROSS JOIN vt0 ON ((((((v0.c0)AND(vt0.c0)))OR(vt0.c0))) NOT BETWEEN (((v0.c0) IS TRUE)) AND (vt0.c0)) GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CAST(AVG(vt0.c0) AS REAL) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CAST(AVG(vt0.c0) AS REAL))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CAST(AVG(vt0.c0) AS REAL)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CAST(AVG(vt0.c0) AS REAL) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CAST(AVG(vt0.c0) AS REAL))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CAST(AVG(vt0.c0) AS REAL)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE ((0Xffffffffed8ea2bd IN (((vt0.c0) ISNULL)))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((0xffffffffed8ea2bd IN (((vt0.c0) ISNULL)))))) UNION ALL SELECT * FROM vt0 WHERE ((((0xffffffffed8ea2bd IN (((vt0.c0) ISNULL)))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (rt0.c0) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (rt0.c0))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((rt0.c0) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MIN(SUM(vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MIN(SUM(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN(SUM(vt0.c0))) ISNULL);
SELECT rt0.c0, rt0.c1 FROM rt0 CROSS JOIN vt0 ON ((CASE WHEN rt0.c2 THEN rt0.c1 END)&(rt0.c0));
SELECT ALL rt0.c0, rt0.c1 FROM rt0 CROSS JOIN vt0 ON ((CASE WHEN rt0.c2 THEN rt0.c1 END)&(rt0.c0)) WHERE (((0X3903573c) NOT BETWEEN ((((rt0.c0, rt0.c1, -1.6693182E7))<>((rt0.c2, 0x378ae308, rt0.c0)))) AND (((vt0.c0) BETWEEN (rt0.c2) AND (vt0.c0))))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 NOT INDEXED CROSS JOIN vt0 ON ((CASE WHEN rt0.c2 THEN rt0.c1 END)&(rt0.c0)) WHERE ((NOT (((0X3903573c) NOT BETWEEN ((((rt0.c0, rt0.c1, -1.6693182E7))<>((rt0.c2, 0X378ae308, rt0.c0)))) AND (((vt0.c0) BETWEEN (rt0.c2) AND (vt0.c0))))))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 CROSS JOIN vt0 ON ((CASE WHEN rt0.c2 THEN rt0.c1 END)&(rt0.c0)) WHERE (((((0X3903573c) NOT BETWEEN ((((rt0.c0, rt0.c1, -1.6693182E7))<>((rt0.c2, 0x378ae308, rt0.c0)))) AND (((vt0.c0) BETWEEN (rt0.c2) AND (vt0.c0))))) ISNULL));
SELECT rt0.c0, rt0.c1 FROM rt0 CROSS JOIN vt0 ON ((CASE WHEN rt0.c2 THEN rt0.c1 END)&(rt0.c0));
SELECT DISTINCT rt0.c1 FROM v0, rt0;
SELECT DISTINCT rt0.c1 FROM v0, rt0 WHERE (((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c2)) COLLATE BINARY) UNION SELECT DISTINCT rt0.c1 FROM v0, rt0 WHERE ((NOT (((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c2)) COLLATE BINARY))) UNION SELECT DISTINCT rt0.c1 FROM v0, rt0 WHERE (((((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c2)) COLLATE BINARY) ISNULL));
SELECT DISTINCT rt0.c1 FROM v0, rt0;
SELECT vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM v0 LEFT OUTER JOIN rt0 ON x'e5ad' CROSS JOIN vt0 ON ((((((vt0.c0) NOTNULL))AND(((v0.c0)>(v0.c0)))))AND('ᵇT')) GROUP BY vt0.c0, rt0.c0, rt0.c1, rt0.c2;
SELECT vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM v0 LEFT OUTER JOIN rt0 ON x'e5ad' CROSS JOIN vt0 ON ((((((vt0.c0) NOTNULL))AND(((v0.c0)>(v0.c0)))))AND('ᵇT')) WHERE (((((((rt0.c1)||(NULL)))OR(json(vt0.c0))))AND(LIKELIHOOD(v0.c0, 0.14041837158659876)))) GROUP BY vt0.c0, rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM v0 LEFT OUTER JOIN rt0 ON x'e5ad' CROSS JOIN vt0 ON ((((((vt0.c0) NOTNULL))AND(((v0.c0)>(v0.c0)))))AND('ᵇT')) WHERE ((NOT (((((((rt0.c1)||(NULL)))OR(json(vt0.c0))))AND(LIKELIHOOD(v0.c0, 0.14041837158659876)))))) GROUP BY vt0.c0, rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM v0 LEFT OUTER JOIN rt0 ON x'e5ad' CROSS JOIN vt0 ON ((((((vt0.c0) NOTNULL))AND(((v0.c0)>(v0.c0)))))AND('ᵇT')) WHERE (((((((((rt0.c1)||(NULL)))OR(json(vt0.c0))))AND(LIKELIHOOD(v0.c0, 0.14041837158659876)))) ISNULL)) GROUP BY vt0.c0, rt0.c0, rt0.c1, rt0.c2;
SELECT vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM v0 LEFT OUTER JOIN rt0 ON x'e5ad' CROSS JOIN vt0 ON ((((((vt0.c0) NOTNULL))AND(((v0.c0)>(v0.c0)))))AND('ᵇT')) GROUP BY vt0.c0, rt0.c0, rt0.c1, rt0.c2;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING MIN(v0.c0) COLLATE RTRIM UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MIN(v0.c0) COLLATE RTRIM)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MIN(v0.c0) COLLATE RTRIM) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING MIN(v0.c0) COLLATE RTRIM UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MIN(v0.c0) COLLATE RTRIM)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MIN(v0.c0) COLLATE RTRIM) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT * FROM rt0, vt0;
SELECT ALL * FROM rt0, vt0 WHERE (x'') UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((NOT (x''))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE (((x'') ISNULL));
SELECT * FROM rt0, vt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (((vt0.c0 IN (rt0.c2)) IN ())) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (((vt0.c0 IN (rt0.c2)) IN ())))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((((vt0.c0 IN (rt0.c2)) IN ())) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT rt0.c1, rt0.c2, v0.c0, rt0.c0 FROM rt0 LEFT OUTER JOIN v0 ON CASE ((v0.c0)+(rt0.c2))  WHEN UPPER(vt0.c0) THEN (- (vt0.c0)) WHEN (+ (-85313579)) THEN ((((((((rt0.c1)AND(x'a1c2')))OR(v0.c0)))AND(rt0.c2)))AND(x'')) WHEN CAST(7.6841004E7 AS TEXT) THEN ((((rt0.c0)AND(vt0.c0)))OR(vt0.c0)) ELSE ((rt0.c1) ISNULL) END LEFT OUTER JOIN vt0 ON (((((vt0.c0) IS FALSE), IFNULL(rt0.c2, '0.0'), ((rt0.c2)>=(vt0.c0))))>((((((((((NULL)AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)), (NOT (0.6370462893748231)), ((((((((v0.c0)AND(rt0.c2)))AND(rt0.c0)))AND(vt0.c0)))OR(rt0.c2))))) GROUP BY rt0.c1, rt0.c2, v0.c0, rt0.c0;
SELECT ALL rt0.c2, v0.c0, rt0.c1 FROM v0 CROSS JOIN rt0 ON CASE ((rt0.c2)<=(rt0.c2))  WHEN CAST(rt0.c2 AS INTEGER) THEN ((rt0.c2) BETWEEN (rt0.c1) AND (v0.c0)) WHEN ((rt0.c0)==(rt0.c0)) THEN (NOT (rt0.c1)) WHEN ((rt0.c2)<<(rt0.c0)) THEN rt0.c0 END GROUP BY rt0.c2, v0.c0, rt0.c1;
SELECT ALL rt0.c2, v0.c0, rt0.c1 FROM v0 CROSS JOIN rt0 ON CASE ((rt0.c2)<=(rt0.c2))  WHEN CAST(rt0.c2 AS INTEGER) THEN ((rt0.c2) BETWEEN (rt0.c1) AND (v0.c0)) WHEN ((rt0.c0)==(rt0.c0)) THEN (NOT (rt0.c1)) WHEN ((rt0.c2)<<(rt0.c0)) THEN rt0.c0 END GROUP BY rt0.c2, v0.c0, rt0.c1 HAVING MAX(((rt0.c2) NOT NULL)) UNION ALL SELECT rt0.c2, v0.c0, rt0.c1 FROM v0 CROSS JOIN rt0 ON CASE ((rt0.c2)<=(rt0.c2))  WHEN CAST(rt0.c2 AS INTEGER) THEN ((rt0.c2) BETWEEN (rt0.c1) AND (v0.c0)) WHEN ((rt0.c0)=(rt0.c0)) THEN (NOT (rt0.c1)) WHEN ((rt0.c2)<<(rt0.c0)) THEN rt0.c0 END GROUP BY rt0.c2, v0.c0, rt0.c1 HAVING (NOT (MAX(((rt0.c2) NOT NULL)))) UNION ALL SELECT rt0.c2, v0.c0, rt0.c1 FROM v0 CROSS JOIN rt0 ON CASE ((rt0.c2)<=(rt0.c2))  WHEN CAST(rt0.c2 AS INTEGER) THEN ((rt0.c2) BETWEEN (rt0.c1) AND (v0.c0)) WHEN ((rt0.c0)=(rt0.c0)) THEN (NOT (rt0.c1)) WHEN ((rt0.c2)<<(rt0.c0)) THEN rt0.c0 END GROUP BY rt0.c2, v0.c0, rt0.c1 HAVING ((MAX(((rt0.c2) NOT NULL))) ISNULL);
SELECT ALL rt0.c2, v0.c0, rt0.c1 FROM v0 CROSS JOIN rt0 ON CASE ((rt0.c2)<=(rt0.c2))  WHEN CAST(rt0.c2 AS INTEGER) THEN ((rt0.c2) BETWEEN (rt0.c1) AND (v0.c0)) WHEN ((rt0.c0)==(rt0.c0)) THEN (NOT (rt0.c1)) WHEN ((rt0.c2)<<(rt0.c0)) THEN rt0.c0 END GROUP BY rt0.c2, v0.c0, rt0.c1;
SELECT ALL rt0.c2, v0.c0, rt0.c1 FROM v0 CROSS JOIN rt0 ON CASE ((rt0.c2)<=(rt0.c2))  WHEN CAST(rt0.c2 AS INTEGER) THEN ((rt0.c2) BETWEEN (rt0.c1) AND (v0.c0)) WHEN ((rt0.c0)==(rt0.c0)) THEN (NOT (rt0.c1)) WHEN ((rt0.c2)<<(rt0.c0)) THEN rt0.c0 END GROUP BY rt0.c2, v0.c0, rt0.c1 HAVING MAX(((rt0.c2) NOT NULL)) UNION ALL SELECT rt0.c2, v0.c0, rt0.c1 FROM v0 CROSS JOIN rt0 ON CASE ((rt0.c2)<=(rt0.c2))  WHEN CAST(rt0.c2 AS INTEGER) THEN ((rt0.c2) BETWEEN (rt0.c1) AND (v0.c0)) WHEN ((rt0.c0)=(rt0.c0)) THEN (NOT (rt0.c1)) WHEN ((rt0.c2)<<(rt0.c0)) THEN rt0.c0 END GROUP BY rt0.c2, v0.c0, rt0.c1 HAVING (NOT (MAX(((rt0.c2) NOT NULL)))) UNION ALL SELECT rt0.c2, v0.c0, rt0.c1 FROM v0 CROSS JOIN rt0 ON CASE ((rt0.c2)<=(rt0.c2))  WHEN CAST(rt0.c2 AS INTEGER) THEN ((rt0.c2) BETWEEN (rt0.c1) AND (v0.c0)) WHEN ((rt0.c0)=(rt0.c0)) THEN (NOT (rt0.c1)) WHEN ((rt0.c2)<<(rt0.c0)) THEN rt0.c0 END GROUP BY rt0.c2, v0.c0, rt0.c1 HAVING ((MAX(((rt0.c2) NOT NULL))) ISNULL);
SELECT ALL rt0.c2, v0.c0, rt0.c1 FROM v0 CROSS JOIN rt0 ON CASE ((rt0.c2)<=(rt0.c2))  WHEN CAST(rt0.c2 AS INTEGER) THEN ((rt0.c2) BETWEEN (rt0.c1) AND (v0.c0)) WHEN ((rt0.c0)==(rt0.c0)) THEN (NOT (rt0.c1)) WHEN ((rt0.c2)<<(rt0.c0)) THEN rt0.c0 END GROUP BY rt0.c2, v0.c0, rt0.c1;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (CASE (rt0.c1 IN ())  WHEN ((rt0.c0)/(-488610979)) THEN CAST(rt0.c2 AS REAL) WHEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END THEN '0[' WHEN rt0.c0 THEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END END) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (CASE (rt0.c1 IN ())  WHEN ((rt0.c0)/(-488610979)) THEN CAST(rt0.c2 AS REAL) WHEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END THEN '0[' WHEN rt0.c0 THEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END END))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((CASE (rt0.c1 IN ())  WHEN ((rt0.c0)/(-488610979)) THEN CAST(rt0.c2 AS REAL) WHEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END THEN '0[' WHEN rt0.c0 THEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END END) ISNULL));
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((((v0.c0)-(NULL)))IS NOT((((v0.c0))==((v0.c0)))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((v0.c0)-(NULL)))IS NOT((((v0.c0))=((v0.c0)))))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((v0.c0)-(NULL)))IS NOT((((v0.c0))=((v0.c0)))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL rt0.c0, rt0.c1, vt0.c0, v0.c0 FROM rt0, v0, vt0 GROUP BY rt0.c0, rt0.c1, vt0.c0, v0.c0;
SELECT rt0.c0, rt0.c1, vt0.c0, v0.c0 FROM rt0, v0, vt0 WHERE (('ey\n' IN ())) GROUP BY rt0.c0, rt0.c1, vt0.c0, v0.c0 UNION SELECT ALL rt0.c0, rt0.c1, vt0.c0, v0.c0 FROM rt0, v0, vt0 WHERE ((NOT (('ey\n' IN ())))) GROUP BY rt0.c0, rt0.c1, vt0.c0, v0.c0 UNION SELECT rt0.c0, rt0.c1, vt0.c0, v0.c0 FROM rt0, v0, vt0 WHERE (((('ey\n' IN ())) ISNULL)) GROUP BY rt0.c0, rt0.c1, vt0.c0, v0.c0;
SELECT ALL rt0.c0, rt0.c1, vt0.c0, v0.c0 FROM rt0, v0, vt0 GROUP BY rt0.c0, rt0.c1, vt0.c0, v0.c0;
SELECT ALL rt0.c2, rt0.c1, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1, v0.c0, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1, v0.c0, rt0.c0 HAVING COUNT(GROUP_CONCAT(v0.c0)) UNION ALL SELECT ALL rt0.c2, rt0.c1, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1, v0.c0, rt0.c0 HAVING (NOT (COUNT(GROUP_CONCAT(v0.c0)))) UNION ALL SELECT rt0.c2, rt0.c1, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1, v0.c0, rt0.c0 HAVING ((COUNT(GROUP_CONCAT(v0.c0))) ISNULL);
SELECT ALL rt0.c2 FROM rt0;
SELECT rt0.c2 FROM rt0 NOT INDEXED WHERE (((NULLIF(rt0.c0, rt0.c2))||(((NULL)|(rt0.c2))))) UNION ALL SELECT rt0.c2 FROM rt0 WHERE ((NOT (((NULLIF(rt0.c0, rt0.c2))||(((NULL)|(rt0.c2))))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE (((((NULLIF(rt0.c0, rt0.c2))||(((NULL)|(rt0.c2))))) ISNULL));
SELECT ALL rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END))>=((((rt0.c2)IS NOT(rt0.c0)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END))>=((((rt0.c2)IS NOT(rt0.c0)))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END))>=((((rt0.c2)IS NOT(rt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((rt0.c2) NOT NULL))>(((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)))OR('2015536962')))OR(rt0.c2))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c2) NOT NULL))>(((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)))OR('2015536962')))OR(rt0.c2))))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((((rt0.c2) NOT NULL))>(((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)))OR('2015536962')))OR(rt0.c2))))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (((NULL) IS FALSE)) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((NULL) IS FALSE)))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((((NULL) IS FALSE)) ISNULL));
SELECT ALL rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0 CROSS JOIN vt0 ON 0X723b563f COLLATE NOCASE;
SELECT DISTINCT * FROM rt0 CROSS JOIN vt0 ON 0X723b563f COLLATE NOCASE WHERE (CAST(((rt0.c1)<<(rt0.c0)) AS NUMERIC)) UNION SELECT DISTINCT * FROM rt0 CROSS JOIN vt0 ON 0X723b563f COLLATE NOCASE WHERE ((NOT (CAST(((rt0.c1)<<(rt0.c0)) AS NUMERIC)))) UNION SELECT DISTINCT * FROM rt0 CROSS JOIN vt0 ON 0x723b563f COLLATE NOCASE WHERE (((CAST(((rt0.c1)<<(rt0.c0)) AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM rt0 CROSS JOIN vt0 ON 0X723b563f COLLATE NOCASE;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (rt0.c0) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (rt0.c0))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (((rt0.c0) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c0 FROM v0, vt0, rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM v0, vt0, rt0 GROUP BY rt0.c0 HAVING (NOT (MAX(MAX(COUNT(*))))) UNION ALL SELECT ALL rt0.c0 FROM v0, vt0, rt0 GROUP BY rt0.c0 HAVING (NOT ((NOT (MAX(MAX(COUNT(*))))))) UNION ALL SELECT ALL rt0.c0 FROM v0, vt0, rt0 GROUP BY rt0.c0 HAVING (((NOT (MAX(MAX(COUNT(*)))))) ISNULL);
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE ((((((((((NOT (v0.c0)))AND(((v0.c0)>(v0.c0)))))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))AND(((v0.c0)==(v0.c0)))))AND((v0.c0 IN (v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT ((((((((((NOT (v0.c0)))AND(((v0.c0)>(v0.c0)))))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))AND(((v0.c0)=(v0.c0)))))AND((v0.c0 IN (v0.c0))))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((((((((((((NOT (v0.c0)))AND(((v0.c0)>(v0.c0)))))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))AND(((v0.c0)=(v0.c0)))))AND((v0.c0 IN (v0.c0))))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT v0.c0, vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt0 INNER JOIN rt0 ON ((rt0.c1)IS NOT(rt0.c0 COLLATE NOCASE)) CROSS JOIN v0 ON ((((((((((vt0.c0)OR(vt0.c0)))OR(rt0.c1)))OR(v0.c0)))OR(0xffffffffe30def7f))) ISNULL) GROUP BY v0.c0, vt0.c0, rt0.c0, rt0.c1, rt0.c2;
SELECT v0.c0, vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt0 INNER JOIN rt0 ON ((rt0.c1)IS NOT(rt0.c0 COLLATE NOCASE)) CROSS JOIN v0 ON ((((((((((vt0.c0)OR(vt0.c0)))OR(rt0.c1)))OR(v0.c0)))OR(0Xffffffffe30def7f))) ISNULL) WHERE (NULL COLLATE NOCASE) GROUP BY v0.c0, vt0.c0, rt0.c0, rt0.c1, rt0.c2 UNION SELECT v0.c0, vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt0 INNER JOIN rt0 ON ((rt0.c1)IS NOT(rt0.c0 COLLATE NOCASE)) CROSS JOIN v0 ON ((((((((((vt0.c0)OR(vt0.c0)))OR(rt0.c1)))OR(v0.c0)))OR(0xffffffffe30def7f))) ISNULL) WHERE ((NOT (NULL COLLATE NOCASE))) GROUP BY v0.c0, vt0.c0, rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL v0.c0, vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt0 INNER JOIN rt0 ON ((rt0.c1)IS NOT(rt0.c0 COLLATE NOCASE)) CROSS JOIN v0 ON ((((((((((vt0.c0)OR(vt0.c0)))OR(rt0.c1)))OR(v0.c0)))OR(0Xffffffffe30def7f))) ISNULL) WHERE (((NULL COLLATE NOCASE) ISNULL)) GROUP BY v0.c0, vt0.c0, rt0.c0, rt0.c1, rt0.c2;
SELECT v0.c0, vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt0 INNER JOIN rt0 ON ((rt0.c1)IS NOT(rt0.c0 COLLATE NOCASE)) CROSS JOIN v0 ON ((((((((((vt0.c0)OR(vt0.c0)))OR(rt0.c1)))OR(v0.c0)))OR(0xffffffffe30def7f))) ISNULL) GROUP BY v0.c0, vt0.c0, rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (~ (GROUP_CONCAT(rt0.c2))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT ((~ (GROUP_CONCAT(rt0.c2))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (((~ (GROUP_CONCAT(rt0.c2)))) ISNULL);
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (~ (GROUP_CONCAT(rt0.c2))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT ((~ (GROUP_CONCAT(rt0.c2))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (((~ (GROUP_CONCAT(rt0.c2)))) ISNULL);
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT TOTAL(rt0.c2) FROM rt0, vt0;
SELECT * FROM v0, vt0;
SELECT * FROM v0, vt0 WHERE ((((((vt0.c0)<<(v0.c0))))>=(((+ (v0.c0)))))) UNION ALL SELECT * FROM v0, vt0 WHERE ((NOT ((((((vt0.c0)<<(v0.c0))))>=(((+ (v0.c0)))))))) UNION ALL SELECT ALL * FROM v0, vt0 WHERE ((((((((vt0.c0)<<(v0.c0))))>=(((+ (v0.c0)))))) ISNULL));
SELECT * FROM v0, vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CASE WHEN (((rt0.c1, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c1)) AND ((rt0.c2, rt0.c1, rt0.c2))) THEN CAST(x'fb5c' AS INTEGER) ELSE ((rt0.c1)IS NOT(rt0.c1)) END) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CASE WHEN (((rt0.c1, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c1)) AND ((rt0.c2, rt0.c1, rt0.c2))) THEN CAST(x'fb5c' AS INTEGER) ELSE ((rt0.c1)IS NOT(rt0.c1)) END))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CASE WHEN (((rt0.c1, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c1)) AND ((rt0.c2, rt0.c1, rt0.c2))) THEN CAST(x'fb5c' AS INTEGER) ELSE ((rt0.c1)IS NOT(rt0.c1)) END) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, vt0.c0, v0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 INNER JOIN v0 ON (- (rt0.c2 COLLATE BINARY)) GROUP BY rt0.c0, vt0.c0, v0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, vt0.c0, v0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 INNER JOIN v0 ON (- (rt0.c2 COLLATE BINARY)) WHERE (((((rt0.c0) IS FALSE)) IS FALSE)) GROUP BY rt0.c0, vt0.c0, v0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, vt0.c0, v0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 INNER JOIN v0 ON (- (rt0.c2 COLLATE BINARY)) WHERE ((NOT (((((rt0.c0) IS FALSE)) IS FALSE)))) GROUP BY rt0.c0, vt0.c0, v0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, vt0.c0, v0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 INNER JOIN v0 ON (- (rt0.c2 COLLATE BINARY)) WHERE (((((((rt0.c0) IS FALSE)) IS FALSE)) ISNULL)) GROUP BY rt0.c0, vt0.c0, v0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, vt0.c0, v0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 INNER JOIN v0 ON (- (rt0.c2 COLLATE BINARY)) GROUP BY rt0.c0, vt0.c0, v0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING AVG(TOTAL(MAX(GROUP_CONCAT(rt0.c0)))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (AVG(TOTAL(MAX(GROUP_CONCAT(rt0.c0)))))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((AVG(TOTAL(MAX(GROUP_CONCAT(rt0.c0))))) ISNULL);
SELECT * FROM vt0, v0, rt0;
SELECT ALL * FROM vt0, v0, rt0 WHERE ((- (rt0.c1)) COLLATE BINARY) UNION ALL SELECT * FROM vt0, v0, rt0 WHERE ((NOT ((- (rt0.c1)) COLLATE BINARY))) UNION ALL SELECT ALL * FROM vt0, v0, rt0 WHERE ((((- (rt0.c1)) COLLATE BINARY) ISNULL));
SELECT * FROM vt0, v0, rt0;
SELECT DISTINCT v0.c0, rt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM v0, vt0, rt0;
SELECT DISTINCT v0.c0, rt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM v0, vt0, rt0 WHERE (LOWER(DISTINCT (rt0.c0 IN (2128460111)))) UNION SELECT DISTINCT v0.c0, rt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM v0, vt0, rt0 WHERE ((NOT (LOWER(DISTINCT (rt0.c0 IN (2128460111)))))) UNION SELECT DISTINCT v0.c0, rt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM v0, vt0, rt0 WHERE (((LOWER(DISTINCT (rt0.c0 IN (2128460111)))) ISNULL));
SELECT DISTINCT v0.c0, rt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM v0, vt0, rt0;
SELECT ALL rt0.c1 FROM vt0, rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM vt0, rt0 WHERE (rt0.c1 COLLATE RTRIM) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM vt0, rt0 WHERE ((NOT (rt0.c1 COLLATE RTRIM))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM vt0, rt0 WHERE (((rt0.c1 COLLATE RTRIM) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM vt0, rt0 GROUP BY rt0.c1;
SELECT rt0.c1, rt0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c1, rt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c1, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, rt0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c1, rt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c1, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, rt0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CASE WHEN CASE WHEN rt0.c0 THEN rt0.c1 END THEN rt0.c1 COLLATE BINARY END) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CASE WHEN CASE WHEN rt0.c0 THEN rt0.c1 END THEN rt0.c1 COLLATE BINARY END))) UNION ALL SELECT * FROM rt0 WHERE (((CASE WHEN CASE WHEN rt0.c0 THEN rt0.c1 END THEN rt0.c1 COLLATE BINARY END) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT v0.c0, rt0.c0, rt0.c2, vt0.c0, rt0.c1 FROM vt0, rt0, v0;
SELECT DISTINCT v0.c0, rt0.c0, rt0.c2, vt0.c0, rt0.c1 FROM vt0, rt0, v0 WHERE (((rt0.c0)>=(NULL)) COLLATE BINARY) UNION SELECT DISTINCT v0.c0, rt0.c0, rt0.c2, vt0.c0, rt0.c1 FROM vt0, rt0, v0 WHERE ((NOT (((rt0.c0)>=(NULL)) COLLATE BINARY))) UNION SELECT DISTINCT v0.c0, rt0.c0, rt0.c2, vt0.c0, rt0.c1 FROM vt0, rt0, v0 WHERE (((((rt0.c0)>=(NULL)) COLLATE BINARY) ISNULL));
SELECT DISTINCT v0.c0, rt0.c0, rt0.c2, vt0.c0, rt0.c1 FROM vt0, rt0, v0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (2.127434673E9) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (2.127434673E9))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((2.127434673E9) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING CAST(COUNT(*) AS BLOB) COLLATE RTRIM UNION ALL SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING (NOT (CAST(COUNT(*) AS BLOB) COLLATE RTRIM)) UNION ALL SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING ((CAST(COUNT(*) AS BLOB) COLLATE RTRIM) ISNULL);
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING CAST(COUNT(*) AS BLOB) COLLATE RTRIM UNION ALL SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING (NOT (CAST(COUNT(*) AS BLOB) COLLATE RTRIM)) UNION ALL SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING ((CAST(COUNT(*) AS BLOB) COLLATE RTRIM) ISNULL);
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT rt0.c2, vt0.c0, rt0.c0, v0.c0, rt0.c1 FROM vt0, v0, rt0;
SELECT rt0.c2, vt0.c0, rt0.c0, v0.c0, rt0.c1 FROM vt0, v0, rt0 WHERE (((((x'')OR((((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))))))OR(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN v0.c0 THEN rt0.c2 WHEN '930472583' THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c2 END))) UNION ALL SELECT rt0.c2, vt0.c0, rt0.c0, v0.c0, rt0.c1 FROM vt0, v0 NOT INDEXED, rt0 WHERE ((NOT (((((x'')OR((((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))))))OR(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN v0.c0 THEN rt0.c2 WHEN '930472583' THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c2 END))))) UNION ALL SELECT ALL rt0.c2, vt0.c0, rt0.c0, v0.c0, rt0.c1 FROM vt0, v0, rt0 WHERE (((((((x'')OR((((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))))))OR(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN v0.c0 THEN rt0.c2 WHEN '930472583' THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c2 END))) ISNULL));
SELECT rt0.c2, vt0.c0, rt0.c0, v0.c0, rt0.c1 FROM vt0, v0, rt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (HEX(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (HEX(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((HEX(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM vt0 INNER JOIN rt0 ON CASE WHEN ((rt0.c1)IS NOT(rt0.c0)) THEN (((rt0.c1))>((rt0.c0))) ELSE (((((((('Nࣷ')OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)) END GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM vt0 INNER JOIN rt0 ON CASE WHEN ((rt0.c1)IS NOT(rt0.c0)) THEN (((rt0.c1))>((rt0.c0))) ELSE (((((((('Nࣷ')OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)) END WHERE ((((rt0.c1)) BETWEEN (((rt0.c1 IN (rt0.c2, rt0.c2, rt0.c1)))) AND ((rt0.c2)))) GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM vt0 INNER JOIN rt0 ON CASE WHEN ((rt0.c1)IS NOT(rt0.c0)) THEN (((rt0.c1))>((rt0.c0))) ELSE (((((((('Nࣷ')OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)) END WHERE ((NOT ((((rt0.c1)) BETWEEN (((rt0.c1 IN (rt0.c2, rt0.c2, rt0.c1)))) AND ((rt0.c2)))))) GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM vt0 INNER JOIN rt0 ON CASE WHEN ((rt0.c1)IS NOT(rt0.c0)) THEN (((rt0.c1))>((rt0.c0))) ELSE (((((((('Nࣷ')OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)) END WHERE ((((((rt0.c1)) BETWEEN (((rt0.c1 IN (rt0.c2, rt0.c2, rt0.c1)))) AND ((rt0.c2)))) ISNULL)) GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM vt0 INNER JOIN rt0 ON CASE WHEN ((rt0.c1)IS NOT(rt0.c0)) THEN (((rt0.c1))>((rt0.c0))) ELSE (((((((('Nࣷ')OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)) END GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c2;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((vt0.c0)) NOT BETWEEN ((((vt0.c0)|(vt0.c0)))) AND ((((x'f1d3') BETWEEN (AVG(-2123623342)) AND (TOTAL(COUNT(AVG(MAX(vt0.c0))))))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((vt0.c0)) NOT BETWEEN ((((vt0.c0)|(vt0.c0)))) AND ((((x'f1d3') BETWEEN (AVG(-2123623342)) AND (TOTAL(COUNT(AVG(MAX(vt0.c0))))))))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((vt0.c0)) NOT BETWEEN ((((vt0.c0)|(vt0.c0)))) AND ((((x'f1d3') BETWEEN (AVG(-2123623342)) AND (TOTAL(COUNT(AVG(MAX(vt0.c0)))))))))) ISNULL);
SELECT ALL v0.c0 FROM v0, vt0;
SELECT v0.c0 FROM v0, vt0 WHERE (TYPEOF(DISTINCT (((vt0.c0, vt0.c0, v0.c0))<=((v0.c0, v0.c0, vt0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0, vt0 WHERE ((NOT (TYPEOF(DISTINCT (((vt0.c0, vt0.c0, v0.c0))<=((v0.c0, v0.c0, vt0.c0))))))) UNION ALL SELECT ALL v0.c0 FROM v0, vt0 WHERE (((TYPEOF(DISTINCT (((vt0.c0, vt0.c0, v0.c0))<=((v0.c0, v0.c0, vt0.c0))))) ISNULL));
SELECT ALL v0.c0 FROM v0, vt0;
SELECT DISTINCT * FROM v0 FULL OUTER JOIN vt0 ON (((rt0.c2 IN (rt0.c2, rt0.c0)))+((((rt0.c1))<=((vt0.c0))))) CROSS JOIN rt0 ON rt0.c2;
SELECT ALL v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON (((v0.c0 IN ())) ISNULL) GROUP BY v0.c0;
SELECT v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON (((v0.c0 IN ())) ISNULL) WHERE (((((vt0.c0)IS NOT(v0.c0)))IS NOT(CASE WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON (((v0.c0 IN ())) ISNULL) WHERE ((NOT (((((vt0.c0)IS NOT(v0.c0)))IS NOT(CASE WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON (((v0.c0 IN ())) ISNULL) WHERE (((((((vt0.c0)IS NOT(v0.c0)))IS NOT(CASE WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON (((v0.c0 IN ())) ISNULL) GROUP BY v0.c0;
SELECT v0.c0, rt0.c2, vt0.c0, rt0.c0 FROM vt0, rt0, v0 GROUP BY v0.c0, rt0.c2, vt0.c0, rt0.c0;
SELECT v0.c0, rt0.c2, vt0.c0, rt0.c0 FROM vt0, rt0, v0 GROUP BY v0.c0, rt0.c2, vt0.c0, rt0.c0 HAVING GROUP_CONCAT(SUM(x'')) UNION ALL SELECT v0.c0, rt0.c2, vt0.c0, rt0.c0 FROM vt0, rt0, v0 GROUP BY v0.c0, rt0.c2, vt0.c0, rt0.c0 HAVING (NOT (GROUP_CONCAT(SUM(x'')))) UNION ALL SELECT v0.c0, rt0.c2, vt0.c0, rt0.c0 FROM vt0, rt0, v0 NOT INDEXED GROUP BY v0.c0, rt0.c2, vt0.c0, rt0.c0 HAVING ((GROUP_CONCAT(SUM(x''))) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE))) UNION ALL SELECT * FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT rt0.c1, v0.c0 FROM v0, rt0;
SELECT DISTINCT rt0.c1, v0.c0 FROM v0, rt0 WHERE (CAST(((v0.c0) IS TRUE) AS NUMERIC)) UNION SELECT DISTINCT rt0.c1, v0.c0 FROM v0, rt0 WHERE ((NOT (CAST(((v0.c0) IS TRUE) AS NUMERIC)))) UNION SELECT DISTINCT rt0.c1, v0.c0 FROM v0, rt0 WHERE (((CAST(((v0.c0) IS TRUE) AS NUMERIC)) ISNULL));
SELECT DISTINCT rt0.c1, v0.c0 FROM v0, rt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((v0.c0) NOTNULL)) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((v0.c0) NOTNULL)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0) NOTNULL)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (x'') UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (x''))) UNION ALL SELECT * FROM vt0 WHERE (((x'') ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (json_extract(((vt0.c0)=(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND ('1910988296')))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (json_extract(((vt0.c0)=(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND ('1910988296')))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((json_extract(((vt0.c0)==(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND ('1910988296')))) ISNULL));
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)AND(((((rt0.c2)AND(rt0.c1)))OR(rt0.c0))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)AND(((((rt0.c2)AND(rt0.c1)))OR(rt0.c0))))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)AND(((((rt0.c2)AND(rt0.c1)))OR(rt0.c0))))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL v0.c0, rt0.c0 FROM vt0, v0, rt0 GROUP BY v0.c0, rt0.c0;
SELECT ALL v0.c0, rt0.c0 FROM vt0 NOT INDEXED, v0, rt0 GROUP BY v0.c0, rt0.c0 HAVING ((MIN(TOTAL(vt0.c0)) COLLATE NOCASE)&(((COUNT(*)) BETWEEN (rt0.c1) AND (vt0.c0)))) UNION ALL SELECT ALL v0.c0, rt0.c0 FROM vt0, v0 NOT INDEXED, rt0 GROUP BY v0.c0, rt0.c0 HAVING (NOT (((MIN(TOTAL(vt0.c0)) COLLATE NOCASE)&(((COUNT(*)) BETWEEN (rt0.c1) AND (vt0.c0)))))) UNION ALL SELECT v0.c0, rt0.c0 FROM vt0, v0, rt0 GROUP BY v0.c0, rt0.c0 HAVING ((((MIN(TOTAL(vt0.c0)) COLLATE NOCASE)&(((COUNT(*)) BETWEEN (rt0.c1) AND (vt0.c0))))) ISNULL);
SELECT ALL vt0.c0, rt0.c2 FROM v0, vt0, rt0;
SELECT ALL vt0.c0, rt0.c2 FROM v0, vt0, rt0 WHERE (0.844878819397761) UNION ALL SELECT ALL vt0.c0, rt0.c2 FROM v0, vt0, rt0 WHERE ((NOT (0.844878819397761))) UNION ALL SELECT vt0.c0, rt0.c2 FROM v0, vt0, rt0 WHERE (((0.844878819397761) ISNULL));
SELECT ALL vt0.c0, rt0.c2 FROM v0, vt0, rt0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM v0, rt0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM v0, rt0 WHERE (UNLIKELY(DISTINCT v0.c0)) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM v0, rt0 WHERE ((NOT (UNLIKELY(DISTINCT v0.c0)))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM v0, rt0 WHERE (((UNLIKELY(DISTINCT v0.c0)) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2 FROM v0, rt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (TRIM(((vt0.c0) NOT NULL))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (TRIM(((vt0.c0) NOT NULL))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((TRIM(((vt0.c0) NOT NULL))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON (((((vt0.c0)) BETWEEN ((rt0.c2)) AND ((v0.c0)))) NOT BETWEEN (((v0.c0) NOT NULL)) AND (TYPEOF(rt0.c0))) LEFT OUTER JOIN rt0 ON ((x'499b')%((v0.c0 IN ()))) GROUP BY rt0.c2, rt0.c0;
SELECT ALL * FROM vt0, rt0, v0;
SELECT * FROM vt0, rt0, v0 WHERE (UPPER((~ (rt0.c1)))) UNION ALL SELECT * FROM vt0, rt0, v0 WHERE ((NOT (UPPER((~ (rt0.c1)))))) UNION ALL SELECT ALL * FROM vt0, rt0, v0 WHERE (((UPPER((~ (rt0.c1)))) ISNULL));
SELECT ALL * FROM vt0, rt0, v0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((- (0.8852889797079772))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((- (0.8852889797079772))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((- (0.8852889797079772))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE (CAST(CASE rt0.c1  WHEN rt0.c2 THEN 0xc22417 ELSE rt0.c0 END AS NUMERIC)) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (CAST(CASE rt0.c1  WHEN rt0.c2 THEN 0xc22417 ELSE rt0.c0 END AS NUMERIC)))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE (((CAST(CASE rt0.c1  WHEN rt0.c2 THEN 0xc22417 ELSE rt0.c0 END AS NUMERIC)) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c1, v0.c0, rt0.c0, vt0.c0, rt0.c2 FROM rt0, vt0, v0 GROUP BY rt0.c1, v0.c0, rt0.c0, vt0.c0, rt0.c2;
SELECT rt0.c1, v0.c0, rt0.c0, vt0.c0, rt0.c2 FROM rt0, vt0, v0 GROUP BY rt0.c1, v0.c0, rt0.c0, vt0.c0, rt0.c2 HAVING SUM((TOTAL(MIN(COUNT(*))) IN ())) UNION ALL SELECT rt0.c1, v0.c0, rt0.c0, vt0.c0, rt0.c2 FROM rt0 NOT INDEXED, vt0, v0 GROUP BY rt0.c1, v0.c0, rt0.c0, vt0.c0, rt0.c2 HAVING (NOT (SUM((TOTAL(MIN(COUNT(*))) IN ())))) UNION ALL SELECT ALL rt0.c1, v0.c0, rt0.c0, vt0.c0, rt0.c2 FROM rt0, vt0, v0 GROUP BY rt0.c1, v0.c0, rt0.c0, vt0.c0, rt0.c2 HAVING ((SUM((TOTAL(MIN(COUNT(*))) IN ()))) ISNULL);
SELECT rt0.c1, v0.c0, rt0.c0, vt0.c0, rt0.c2 FROM rt0, vt0, v0 GROUP BY rt0.c1, v0.c0, rt0.c0, vt0.c0, rt0.c2;
SELECT rt0.c1, v0.c0, rt0.c0, vt0.c0, rt0.c2 FROM rt0, vt0, v0 GROUP BY rt0.c1, v0.c0, rt0.c0, vt0.c0, rt0.c2 HAVING SUM((TOTAL(MIN(COUNT(*))) IN ())) UNION ALL SELECT rt0.c1, v0.c0, rt0.c0, vt0.c0, rt0.c2 FROM rt0 NOT INDEXED, vt0, v0 GROUP BY rt0.c1, v0.c0, rt0.c0, vt0.c0, rt0.c2 HAVING (NOT (SUM((TOTAL(MIN(COUNT(*))) IN ())))) UNION ALL SELECT ALL rt0.c1, v0.c0, rt0.c0, vt0.c0, rt0.c2 FROM rt0, vt0, v0 GROUP BY rt0.c1, v0.c0, rt0.c0, vt0.c0, rt0.c2 HAVING ((SUM((TOTAL(MIN(COUNT(*))) IN ()))) ISNULL);
SELECT rt0.c1, v0.c0, rt0.c0, vt0.c0, rt0.c2 FROM rt0, vt0, v0 GROUP BY rt0.c1, v0.c0, rt0.c0, vt0.c0, rt0.c2;
SELECT ALL MIN((NOT (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) FROM rt0;
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (((json_remove(v0.c0, NULL)) NOT BETWEEN (json_array_length(v0.c0)) AND (v0.c0 COLLATE RTRIM))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (((json_remove(v0.c0, NULL)) NOT BETWEEN (json_array_length(v0.c0)) AND (v0.c0 COLLATE RTRIM))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((((json_remove(v0.c0, NULL)) NOT BETWEEN (json_array_length(v0.c0)) AND (v0.c0 COLLATE RTRIM))) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((((CAST(v0.c0 AS INTEGER)))<=(((v0.c0 IN ()))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((((CAST(v0.c0 AS INTEGER)))<=(((v0.c0 IN ()))))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((CAST(v0.c0 AS INTEGER)))<=(((v0.c0 IN ()))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT rt0.c0, rt0.c2, vt0.c0, v0.c0 FROM v0, rt0, vt0 GROUP BY rt0.c0, rt0.c2, vt0.c0, v0.c0;
SELECT ALL rt0.c0, rt0.c2, vt0.c0, v0.c0 FROM v0, rt0, vt0 WHERE (((CAST(x'5fa6' AS BLOB)) NOTNULL)) GROUP BY rt0.c0, rt0.c2, vt0.c0, v0.c0 UNION SELECT ALL rt0.c0, rt0.c2, vt0.c0, v0.c0 FROM v0, rt0, vt0 WHERE ((NOT (((CAST(x'5fa6' AS BLOB)) NOTNULL)))) GROUP BY rt0.c0, rt0.c2, vt0.c0, v0.c0 UNION SELECT rt0.c0, rt0.c2, vt0.c0, v0.c0 FROM v0, rt0, vt0 WHERE (((((CAST(x'5fa6' AS BLOB)) NOTNULL)) ISNULL)) GROUP BY rt0.c0, rt0.c2, vt0.c0, v0.c0;
SELECT rt0.c0, rt0.c2, vt0.c0, v0.c0 FROM v0, rt0, vt0 GROUP BY rt0.c0, rt0.c2, vt0.c0, v0.c0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c0, rt0.c1 HAVING MIN((rt0.c2 IN ())) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (MIN((rt0.c2 IN ())))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c0, rt0.c1 HAVING ((MIN((rt0.c2 IN ()))) ISNULL);
SELECT ALL rt0.c0, rt0.c1 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c0, rt0.c1 HAVING MIN((rt0.c2 IN ())) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (MIN((rt0.c2 IN ())))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c0, rt0.c1 HAVING ((MIN((rt0.c2 IN ()))) ISNULL);
SELECT ALL rt0.c0, rt0.c1 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE ('-1008369982') UNION ALL SELECT * FROM v0 WHERE ((NOT ('-1008369982'))) UNION ALL SELECT ALL * FROM v0 WHERE ((('-1008369982') ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT rt0.c2, rt0.c0, v0.c0 FROM v0, rt0;
SELECT DISTINCT rt0.c2, rt0.c0, v0.c0 FROM v0, rt0 WHERE (v0.c0) UNION SELECT DISTINCT rt0.c2, rt0.c0, v0.c0 FROM v0, rt0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT rt0.c2, rt0.c0, v0.c0 FROM v0, rt0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, v0.c0 FROM v0, rt0;
SELECT ALL rt0.c1, vt0.c0, v0.c0 FROM vt0, rt0, v0 GROUP BY rt0.c1, vt0.c0, v0.c0;
SELECT ALL rt0.c1, vt0.c0, v0.c0 FROM vt0, rt0, v0 WHERE (CASE ((rt0.c1) NOTNULL)  WHEN rt0.c2 COLLATE NOCASE THEN NULL WHEN (~ (rt0.c1)) THEN ((rt0.c2) BETWEEN (rt0.c1) AND (v0.c0)) WHEN ((((((((vt0.c0)AND(rt0.c0)))AND(v0.c0)))OR(rt0.c0)))OR(NULL)) THEN v0.c0 ELSE COALESCE(v0.c0, v0.c0) END) GROUP BY rt0.c1, vt0.c0, v0.c0 UNION SELECT ALL rt0.c1, vt0.c0, v0.c0 FROM vt0, rt0, v0 WHERE ((NOT (CASE ((rt0.c1) NOTNULL)  WHEN rt0.c2 COLLATE NOCASE THEN NULL WHEN (~ (rt0.c1)) THEN ((rt0.c2) BETWEEN (rt0.c1) AND (v0.c0)) WHEN ((((((((vt0.c0)AND(rt0.c0)))AND(v0.c0)))OR(rt0.c0)))OR(NULL)) THEN v0.c0 ELSE COALESCE(v0.c0, v0.c0) END))) GROUP BY rt0.c1, vt0.c0, v0.c0 UNION SELECT ALL rt0.c1, vt0.c0, v0.c0 FROM vt0, rt0, v0 WHERE (((CASE ((rt0.c1) NOTNULL)  WHEN rt0.c2 COLLATE NOCASE THEN NULL WHEN (~ (rt0.c1)) THEN ((rt0.c2) BETWEEN (rt0.c1) AND (v0.c0)) WHEN ((((((((vt0.c0)AND(rt0.c0)))AND(v0.c0)))OR(rt0.c0)))OR(NULL)) THEN v0.c0 ELSE COALESCE(v0.c0, v0.c0) END) ISNULL)) GROUP BY rt0.c1, vt0.c0, v0.c0;
SELECT ALL rt0.c1, vt0.c0, v0.c0 FROM vt0, rt0, v0 GROUP BY rt0.c1, vt0.c0, v0.c0;
SELECT vt0.c0, rt0.c0 FROM v0, vt0 FULL OUTER JOIN rt0 ON (+ (((((((((rt0.c0)AND(vt0.c0)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c2)))) GROUP BY vt0.c0, rt0.c0;
SELECT ALL vt0.c0, rt0.c0 FROM v0, vt0 FULL OUTER JOIN rt0 ON (+ (((((((((rt0.c0)AND(vt0.c0)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c2)))) GROUP BY vt0.c0, rt0.c0 HAVING TOTAL((~ (vt0.c0))) UNION ALL SELECT vt0.c0, rt0.c0 FROM v0, vt0 FULL OUTER JOIN rt0 ON (+ (((((((((rt0.c0)AND(vt0.c0)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c2)))) GROUP BY vt0.c0, rt0.c0 HAVING (NOT (TOTAL((~ (vt0.c0))))) UNION ALL SELECT ALL vt0.c0, rt0.c0 FROM v0, vt0 FULL OUTER JOIN rt0 ON (+ (((((((((rt0.c0)AND(vt0.c0)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c2)))) GROUP BY vt0.c0, rt0.c0 HAVING ((TOTAL((~ (vt0.c0)))) ISNULL);
SELECT vt0.c0, rt0.c0 FROM v0, vt0 FULL OUTER JOIN rt0 ON (+ (((((((((rt0.c0)AND(vt0.c0)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c2)))) GROUP BY vt0.c0, rt0.c0;
SELECT ALL vt0.c0, rt0.c0 FROM v0, vt0 FULL OUTER JOIN rt0 ON (+ (((((((((rt0.c0)AND(vt0.c0)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c2)))) GROUP BY vt0.c0, rt0.c0 HAVING TOTAL((~ (vt0.c0))) UNION ALL SELECT vt0.c0, rt0.c0 FROM v0, vt0 FULL OUTER JOIN rt0 ON (+ (((((((((rt0.c0)AND(vt0.c0)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c2)))) GROUP BY vt0.c0, rt0.c0 HAVING (NOT (TOTAL((~ (vt0.c0))))) UNION ALL SELECT ALL vt0.c0, rt0.c0 FROM v0, vt0 FULL OUTER JOIN rt0 ON (+ (((((((((rt0.c0)AND(vt0.c0)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c2)))) GROUP BY vt0.c0, rt0.c0 HAVING ((TOTAL((~ (vt0.c0)))) ISNULL);
SELECT vt0.c0, rt0.c0 FROM v0, vt0 FULL OUTER JOIN rt0 ON (+ (((((((((rt0.c0)AND(vt0.c0)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c2)))) GROUP BY vt0.c0, rt0.c0;
SELECT MAX(((((((vt0.c0))>((0.5469193923292416)))))>=(((((vt0.c0)) NOT BETWEEN ((0.7363629486196589)) AND ((vt0.c0))))))) FROM vt0;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 NOT INDEXED WHERE ((((((rt0.c0))=((rt0.c2))))IS(UPPER('1554557981')))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((((rt0.c0))=((rt0.c2))))IS(UPPER('1554557981')))))) UNION ALL SELECT * FROM rt0 WHERE ((((((((rt0.c0))=((rt0.c2))))IS(UPPER('1554557981')))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE (CAST((~ (rt0.c1)) AS BLOB)) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (CAST((~ (rt0.c1)) AS BLOB)))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE (((CAST((~ (rt0.c1)) AS BLOB)) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((((951561925)OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND((+ (vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((951561925)OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND((+ (vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((951561925)OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND((+ (vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c1, rt0.c2 FROM rt0, vt0, v0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0, vt0, v0 GROUP BY rt0.c1, rt0.c2 HAVING CAST(((TOTAL(AVG(rt0.c1))) NOTNULL) AS REAL) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0, vt0, v0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (CAST(((TOTAL(AVG(rt0.c1))) NOTNULL) AS REAL))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0, vt0, v0 GROUP BY rt0.c1, rt0.c2 HAVING ((CAST(((TOTAL(AVG(rt0.c1))) NOTNULL) AS REAL)) ISNULL);
SELECT rt0.c0, rt0.c1 FROM v0, vt0, rt0;
SELECT ALL rt0.c0, rt0.c1 FROM v0, vt0, rt0 WHERE (SQLITE_COMPILEOPTION_USED(rt0.c1)) UNION ALL SELECT rt0.c0, rt0.c1 FROM v0, vt0, rt0 WHERE ((NOT (SQLITE_COMPILEOPTION_USED(rt0.c1)))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM v0, vt0, rt0 WHERE (((SQLITE_COMPILEOPTION_USED(rt0.c1)) ISNULL));
SELECT rt0.c0, rt0.c1 FROM v0, vt0, rt0;
SELECT DISTINCT rt0.c2 FROM v0 FULL OUTER JOIN rt0 ON (((((0x2d36009d))>=((rt0.c2)))) NOT BETWEEN (CASE rt0.c1  WHEN rt0.c2 THEN v0.c0 WHEN rt0.c1 THEN v0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END) AND (CAST(rt0.c2 AS TEXT)));
SELECT DISTINCT rt0.c2 FROM v0 FULL OUTER JOIN rt0 ON (((((0x2d36009d))>=((rt0.c2)))) NOT BETWEEN (CASE rt0.c1  WHEN rt0.c2 THEN v0.c0 WHEN rt0.c1 THEN v0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END) AND (CAST(rt0.c2 AS TEXT))) WHERE (((((rt0.c2) NOTNULL))&(v0.c0))) UNION SELECT DISTINCT rt0.c2 FROM v0 FULL OUTER JOIN rt0 ON (((((0X2d36009d))>=((rt0.c2)))) NOT BETWEEN (CASE rt0.c1  WHEN rt0.c2 THEN v0.c0 WHEN rt0.c1 THEN v0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END) AND (CAST(rt0.c2 AS TEXT))) WHERE ((NOT (((((rt0.c2) NOTNULL))&(v0.c0))))) UNION SELECT DISTINCT rt0.c2 FROM v0 FULL OUTER JOIN rt0 ON (((((0X2d36009d))>=((rt0.c2)))) NOT BETWEEN (CASE rt0.c1  WHEN rt0.c2 THEN v0.c0 WHEN rt0.c1 THEN v0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END) AND (CAST(rt0.c2 AS TEXT))) WHERE (((((((rt0.c2) NOTNULL))&(v0.c0))) ISNULL));
SELECT DISTINCT rt0.c2 FROM v0 FULL OUTER JOIN rt0 ON (((((0x2d36009d))>=((rt0.c2)))) NOT BETWEEN (CASE rt0.c1  WHEN rt0.c2 THEN v0.c0 WHEN rt0.c1 THEN v0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END) AND (CAST(rt0.c2 AS TEXT)));
SELECT rt0.c1 FROM vt0, v0, rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM vt0, v0, rt0 WHERE ((((((rt0.c1) NOT NULL), x'', v0.c0 COLLATE BINARY, ((x'') IS FALSE), 'n豍]'))>((((rt0.c2) BETWEEN (v0.c0) AND (v0.c0)), (v0.c0 IN ()), ((vt0.c0)-(rt0.c0)), ((rt0.c2)LIKE(rt0.c2)), '-1618950829')))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM vt0, v0, rt0 WHERE ((NOT ((((((rt0.c1) NOT NULL), x'', v0.c0 COLLATE BINARY, ((x'') IS FALSE), 'n豍]'))>((((rt0.c2) BETWEEN (v0.c0) AND (v0.c0)), (v0.c0 IN ()), ((vt0.c0)-(rt0.c0)), ((rt0.c2)LIKE(rt0.c2)), '-1618950829')))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM vt0, v0, rt0 WHERE ((((((((rt0.c1) NOT NULL), x'', v0.c0 COLLATE BINARY, ((x'') IS FALSE), 'n豍]'))>((((rt0.c2) BETWEEN (v0.c0) AND (v0.c0)), (v0.c0 IN ()), ((vt0.c0)-(rt0.c0)), ((rt0.c2)LIKE(rt0.c2)), '-1618950829')))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM vt0, v0, rt0 GROUP BY rt0.c1;
SELECT ALL v0.c0 FROM rt0, vt0 NATURAL JOIN v0 GROUP BY v0.c0;
SELECT v0.c0 FROM rt0, vt0 NATURAL JOIN v0 GROUP BY v0.c0 HAVING ((((MAX(COUNT(rt0.c1))) NOT BETWEEN (-29470039) AND (rt0.c1))) NOT BETWEEN (((COUNT(*))<(MAX(SUM(COUNT(*)))))) AND (v0.c0)) UNION ALL SELECT ALL v0.c0 FROM rt0, vt0 NATURAL JOIN v0 GROUP BY v0.c0 HAVING (NOT (((((MAX(COUNT(rt0.c1))) NOT BETWEEN (-29470039) AND (rt0.c1))) NOT BETWEEN (((COUNT(*))<(MAX(SUM(COUNT(*)))))) AND (v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM rt0, vt0 NATURAL JOIN v0 GROUP BY v0.c0 HAVING ((((((MAX(COUNT(rt0.c1))) NOT BETWEEN (-29470039) AND (rt0.c1))) NOT BETWEEN (((COUNT(*))<(MAX(SUM(COUNT(*)))))) AND (v0.c0))) ISNULL);
SELECT vt0.c0, v0.c0 FROM vt0, v0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE ((NOT ((((v0.c0, vt0.c0, v0.c0))<=((v0.c0, v0.c0, v0.c0)))))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE ((NOT ((NOT ((((v0.c0, vt0.c0, v0.c0))<=((v0.c0, v0.c0, v0.c0)))))))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE ((((NOT ((((v0.c0, vt0.c0, v0.c0))<=((v0.c0, v0.c0, v0.c0)))))) ISNULL));
SELECT vt0.c0, v0.c0 FROM vt0, v0;
SELECT DISTINCT * FROM v0, vt0, rt0;
SELECT DISTINCT * FROM v0, vt0, rt0 WHERE (CASE LIKE(v0.c0, rt0.c1)  WHEN (((rt0.c1, rt0.c1, rt0.c0))>=((rt0.c0, rt0.c2, v0.c0))) THEN (((v0.c0, rt0.c1, v0.c0)) NOT BETWEEN (('', vt0.c0, vt0.c0)) AND ((rt0.c1, rt0.c0, 1554557981))) END) UNION SELECT DISTINCT * FROM v0, vt0, rt0 WHERE ((NOT (CASE LIKE(v0.c0, rt0.c1)  WHEN (((rt0.c1, rt0.c1, rt0.c0))>=((rt0.c0, rt0.c2, v0.c0))) THEN (((v0.c0, rt0.c1, v0.c0)) NOT BETWEEN (('', vt0.c0, vt0.c0)) AND ((rt0.c1, rt0.c0, 1554557981))) END))) UNION SELECT DISTINCT * FROM v0, vt0, rt0 WHERE (((CASE LIKE(v0.c0, rt0.c1)  WHEN (((rt0.c1, rt0.c1, rt0.c0))>=((rt0.c0, rt0.c2, v0.c0))) THEN (((v0.c0, rt0.c1, v0.c0)) NOT BETWEEN (('', vt0.c0, vt0.c0)) AND ((rt0.c1, rt0.c0, 1554557981))) END) ISNULL));
SELECT DISTINCT * FROM v0, vt0, rt0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM v0, rt0, vt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM v0, rt0 NOT INDEXED, vt0 WHERE ('qyx') GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM v0, rt0, vt0 WHERE ((NOT ('qyx'))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM v0, rt0, vt0 WHERE ((('qyx') ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM v0, rt0, vt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((CASE WHEN MIN(v0.c0) THEN v0.c0 ELSE SUM(MAX(AVG(TOTAL(SUM(MIN(v0.c0)))))) END)AND(TOTAL(TOTAL(v0.c0)))))OR(TOTAL(SUM(MAX(v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((((CASE WHEN MIN(v0.c0) THEN v0.c0 ELSE SUM(MAX(AVG(TOTAL(SUM(MIN(v0.c0)))))) END)AND(TOTAL(TOTAL(v0.c0)))))OR(TOTAL(SUM(MAX(v0.c0))))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((((CASE WHEN MIN(v0.c0) THEN v0.c0 ELSE SUM(MAX(AVG(TOTAL(SUM(MIN(v0.c0)))))) END)AND(TOTAL(TOTAL(v0.c0)))))OR(TOTAL(SUM(MAX(v0.c0)))))) ISNULL);
SELECT * FROM vt0, rt0;
SELECT * FROM vt0, rt0 WHERE (vt0.c0) UNION ALL SELECT * FROM vt0, rt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE (((vt0.c0) ISNULL));
SELECT * FROM vt0, rt0;
SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt0;
SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt0 WHERE (CASE WHEN CHANGES() THEN ((vt0.c0) NOT NULL) END) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt0 WHERE ((NOT (CASE WHEN CHANGES() THEN ((vt0.c0) NOT NULL) END))) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt0 WHERE (((CASE WHEN CHANGES() THEN ((vt0.c0) NOT NULL) END) ISNULL));
SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt0;
SELECT vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM v0, rt0, vt0 GROUP BY vt0.c0, rt0.c0, rt0.c1, rt0.c2;
SELECT ALL vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM v0, rt0, vt0 WHERE (ABS(CASE WHEN rt0.c0 THEN NULL END)) GROUP BY vt0.c0, rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM v0, rt0, vt0 WHERE ((NOT (ABS(CASE WHEN rt0.c0 THEN NULL END)))) GROUP BY vt0.c0, rt0.c0, rt0.c1, rt0.c2 UNION SELECT vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM v0, rt0, vt0 WHERE (((ABS(CASE WHEN rt0.c0 THEN NULL END)) ISNULL)) GROUP BY vt0.c0, rt0.c0, rt0.c1, rt0.c2;
SELECT vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM v0, rt0, vt0 GROUP BY vt0.c0, rt0.c0, rt0.c1, rt0.c2;
SELECT v0.c0, rt0.c0, rt0.c1, vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON ((((v0.c0)||(rt0.c0))) NOT NULL) RIGHT OUTER JOIN rt0 ON LIKELY(DISTINCT ((v0.c0)*(rt0.c2))) GROUP BY v0.c0, rt0.c0, rt0.c1, vt0.c0;
SELECT * FROM v0, vt0, rt0;
SELECT * FROM v0, vt0, rt0 WHERE ((((('BG')=(rt0.c0)))>>(UNICODE(vt0.c0)))) UNION ALL SELECT ALL * FROM v0, vt0, rt0 WHERE ((NOT ((((('BG')=(rt0.c0)))>>(UNICODE(vt0.c0)))))) UNION ALL SELECT * FROM v0, vt0, rt0 WHERE ((((((('BG')==(rt0.c0)))>>(UNICODE(vt0.c0)))) ISNULL));
SELECT * FROM v0, vt0, rt0;
SELECT DISTINCT v0.c0 FROM vt0, v0;
SELECT DISTINCT v0.c0 FROM vt0, v0 WHERE (((v0.c0) BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND ((vt0.c0 IN ())))) UNION SELECT DISTINCT v0.c0 FROM vt0, v0 WHERE ((NOT (((v0.c0) BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND ((vt0.c0 IN ())))))) UNION SELECT DISTINCT v0.c0 FROM vt0, v0 WHERE (((((v0.c0) BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND ((vt0.c0 IN ())))) ISNULL));
SELECT DISTINCT v0.c0 FROM vt0, v0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 WHERE (((rt0.c2)OR(rt0.c2)) COLLATE NOCASE) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT (((rt0.c2)OR(rt0.c2)) COLLATE NOCASE))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE (((((rt0.c2)OR(rt0.c2)) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(LIKELY(TOTAL(v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(LIKELY(TOTAL(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(LIKELY(TOTAL(v0.c0)))) ISNULL);
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE ((((((v0.c0 IN ()))AND(v0.c0 COLLATE NOCASE)))OR(((v0.c0)||(v0.c0))))) UNION ALL SELECT * FROM v0 WHERE ((NOT ((((((v0.c0 IN ()))AND(v0.c0 COLLATE NOCASE)))OR(((v0.c0)||(v0.c0))))))) UNION ALL SELECT ALL * FROM v0 WHERE ((((((((v0.c0 IN ()))AND(v0.c0 COLLATE NOCASE)))OR(((v0.c0)||(v0.c0))))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT rt0.c1, vt0.c0, rt0.c2 FROM rt0 INNER JOIN vt0 ON CAST(rt0.c1 AS BLOB) COLLATE NOCASE LEFT OUTER JOIN v0 ON ((HEX(DISTINCT v0.c0)) BETWEEN ((rt0.c2 IN (0.3902993385199467, rt0.c2))) AND (((v0.c0) NOT NULL)));
SELECT DISTINCT rt0.c1, vt0.c0, rt0.c2 FROM rt0 INNER JOIN vt0 ON CAST(rt0.c1 AS BLOB) COLLATE NOCASE LEFT OUTER JOIN v0 ON ((HEX(DISTINCT v0.c0)) BETWEEN ((rt0.c2 IN (0.3902993385199467, rt0.c2))) AND (((v0.c0) NOT NULL))) WHERE (9223372036854775807) UNION SELECT DISTINCT rt0.c1, vt0.c0, rt0.c2 FROM rt0 INNER JOIN vt0 ON CAST(rt0.c1 AS BLOB) COLLATE NOCASE LEFT OUTER JOIN v0 ON ((HEX(DISTINCT v0.c0)) BETWEEN ((rt0.c2 IN (0.3902993385199467, rt0.c2))) AND (((v0.c0) NOT NULL))) WHERE ((NOT (9223372036854775807))) UNION SELECT DISTINCT rt0.c1, vt0.c0, rt0.c2 FROM rt0 INNER JOIN vt0 ON CAST(rt0.c1 AS BLOB) COLLATE NOCASE LEFT OUTER JOIN v0 ON ((HEX(DISTINCT v0.c0)) BETWEEN ((rt0.c2 IN (0.3902993385199467, rt0.c2))) AND (((v0.c0) NOT NULL))) WHERE (((9223372036854775807) ISNULL));
SELECT DISTINCT rt0.c1, vt0.c0, rt0.c2 FROM rt0 INNER JOIN vt0 ON CAST(rt0.c1 AS BLOB) COLLATE NOCASE LEFT OUTER JOIN v0 ON ((HEX(DISTINCT v0.c0)) BETWEEN ((rt0.c2 IN (0.3902993385199467, rt0.c2))) AND (((v0.c0) NOT NULL)));
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 WHERE (((((v0.c0)AND(v0.c0))) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (((vt0.c0) NOTNULL)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, v0 WHERE ((NOT (((((v0.c0)AND(v0.c0))) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (((vt0.c0) NOTNULL)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, v0 WHERE (((((((v0.c0)AND(v0.c0))) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (((vt0.c0) NOTNULL)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING SUM(MIN(SUM(TOTAL('-1220249376')))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (SUM(MIN(SUM(TOTAL('-1220249376')))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((SUM(MIN(SUM(TOTAL('-1220249376'))))) ISNULL);
SELECT ALL * FROM rt0, v0 NATURAL JOIN vt0;
SELECT ALL * FROM rt0, v0 NATURAL JOIN vt0 WHERE (CAST(rt0.c2 AS TEXT) COLLATE BINARY) UNION ALL SELECT * FROM rt0, v0 NATURAL JOIN vt0 WHERE ((NOT (CAST(rt0.c2 AS TEXT) COLLATE BINARY))) UNION ALL SELECT * FROM rt0, v0 NATURAL JOIN vt0 WHERE (((CAST(rt0.c2 AS TEXT) COLLATE BINARY) ISNULL));
SELECT ALL * FROM rt0, v0 NATURAL JOIN vt0;
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(CAST(rt0.c0 AS TEXT) AS NUMERIC);
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(CAST(rt0.c0 AS TEXT) AS NUMERIC) WHERE ((~ (((vt0.c0)>=(rt0.c1))))) UNION SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(CAST(rt0.c0 AS TEXT) AS NUMERIC) WHERE ((NOT ((~ (((vt0.c0)>=(rt0.c1))))))) UNION SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(CAST(rt0.c0 AS TEXT) AS NUMERIC) WHERE ((((~ (((vt0.c0)>=(rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(CAST(rt0.c0 AS TEXT) AS NUMERIC);
SELECT ALL rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM vt0, rt0 WHERE ((~ ((vt0.c0 IN ())))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM vt0, rt0 WHERE ((NOT ((~ ((vt0.c0 IN ())))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM vt0, rt0 WHERE ((((~ ((vt0.c0 IN ())))) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING NULL UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (NULL)) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((NULL) ISNULL);
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING NULL UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (NULL)) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((NULL) ISNULL);
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL * FROM vt0, v0 CROSS JOIN rt0 ON ((CAST(rt0.c0 AS NUMERIC))<((~ (rt0.c2))));
SELECT ALL * FROM vt0, v0 CROSS JOIN rt0 ON ((CAST(rt0.c0 AS NUMERIC))<((~ (rt0.c2)))) WHERE (CAST(((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c1)) AS REAL)) UNION ALL SELECT * FROM vt0, v0 CROSS JOIN rt0 ON ((CAST(rt0.c0 AS NUMERIC))<((~ (rt0.c2)))) WHERE ((NOT (CAST(((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c1)) AS REAL)))) UNION ALL SELECT ALL * FROM vt0, v0 CROSS JOIN rt0 ON ((CAST(rt0.c0 AS NUMERIC))<((~ (rt0.c2)))) WHERE (((CAST(((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c1)) AS REAL)) ISNULL));
SELECT ALL * FROM vt0, v0 CROSS JOIN rt0 ON ((CAST(rt0.c0 AS NUMERIC))<((~ (rt0.c2))));
SELECT DISTINCT v0.c0, rt0.c2 FROM v0 CROSS JOIN rt0 ON CAST((((rt0.c2, 0X5ca8ac1d, rt0.c0, rt0.c0, 1134091413)) NOT BETWEEN ((rt0.c0, x'', rt0.c2, 0.7616607204750181, 997844896)) AND ((rt0.c2, 0.7579780964172342, rt0.c1, rt0.c1, v0.c0))) AS NUMERIC);
SELECT DISTINCT v0.c0, rt0.c2 FROM v0 CROSS JOIN rt0 ON CAST((((rt0.c2, 0x5ca8ac1d, rt0.c0, rt0.c0, 1134091413)) NOT BETWEEN ((rt0.c0, x'', rt0.c2, 0.7616607204750181, 997844896)) AND ((rt0.c2, 0.7579780964172342, rt0.c1, rt0.c1, v0.c0))) AS NUMERIC) WHERE (TRIM(DISTINCT NULL)) UNION SELECT DISTINCT v0.c0, rt0.c2 FROM v0 CROSS JOIN rt0 ON CAST((((rt0.c2, 0x5ca8ac1d, rt0.c0, rt0.c0, 1134091413)) NOT BETWEEN ((rt0.c0, x'', rt0.c2, 0.7616607204750181, 997844896)) AND ((rt0.c2, 0.7579780964172342, rt0.c1, rt0.c1, v0.c0))) AS NUMERIC) WHERE ((NOT (TRIM(DISTINCT NULL)))) UNION SELECT DISTINCT v0.c0, rt0.c2 FROM v0 CROSS JOIN rt0 ON CAST((((rt0.c2, 0x5ca8ac1d, rt0.c0, rt0.c0, 1134091413)) NOT BETWEEN ((rt0.c0, x'', rt0.c2, 0.7616607204750181, 997844896)) AND ((rt0.c2, 0.7579780964172342, rt0.c1, rt0.c1, v0.c0))) AS NUMERIC) WHERE (((TRIM(DISTINCT NULL)) ISNULL));
SELECT DISTINCT v0.c0, rt0.c2 FROM v0 CROSS JOIN rt0 ON CAST((((rt0.c2, 0X5ca8ac1d, rt0.c0, rt0.c0, 1134091413)) NOT BETWEEN ((rt0.c0, x'', rt0.c2, 0.7616607204750181, 997844896)) AND ((rt0.c2, 0.7579780964172342, rt0.c1, rt0.c1, v0.c0))) AS NUMERIC);
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, vt0 WHERE (((((((x'3ba4') NOT BETWEEN (v0.c0) AND (vt0.c0)))AND((~ (v0.c0)))))AND(((v0.c0) IS TRUE)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM v0, vt0 WHERE ((NOT (((((((x'3ba4') NOT BETWEEN (v0.c0) AND (vt0.c0)))AND((~ (v0.c0)))))AND(((v0.c0) IS TRUE)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM v0, vt0 WHERE (((((((((x'3ba4') NOT BETWEEN (v0.c0) AND (vt0.c0)))AND((~ (v0.c0)))))AND(((v0.c0) IS TRUE)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING MAX(((v0.c0) NOT NULL)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MAX(((v0.c0) NOT NULL)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MAX(((v0.c0) NOT NULL))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING MAX(((v0.c0) NOT NULL)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MAX(((v0.c0) NOT NULL)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MAX(((v0.c0) NOT NULL))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt0 NOT INDEXED;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt0 WHERE (vt0.c0) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt0 WHERE (((vt0.c0) ISNULL));
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt0 NOT INDEXED;
SELECT DISTINCT rt0.c0 FROM vt0, rt0;
SELECT DISTINCT rt0.c0 FROM vt0, rt0 WHERE ((((rt0.c1)/(rt0.c2)) IN ())) UNION SELECT DISTINCT rt0.c0 FROM vt0, rt0 WHERE ((NOT ((((rt0.c1)/(rt0.c2)) IN ())))) UNION SELECT DISTINCT rt0.c0 FROM vt0, rt0 WHERE ((((((rt0.c1)/(rt0.c2)) IN ())) ISNULL));
SELECT DISTINCT rt0.c0 FROM vt0, rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 NOT INDEXED GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)), CAST(rt0.c2 AS BLOB), rt0.c0))<=((((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)), rt0.c0, ((rt0.c1) IS TRUE))))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 NOT INDEXED WHERE ((NOT ((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)), CAST(rt0.c2 AS BLOB), rt0.c0))<=((((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)), rt0.c0, ((rt0.c1) IS TRUE))))))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)), CAST(rt0.c2 AS BLOB), rt0.c0))<=((((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)), rt0.c0, ((rt0.c1) IS TRUE))))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 NOT INDEXED GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, v0.c0, rt0.c2, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, v0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, v0.c0, rt0.c2, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, v0.c0, rt0.c2, rt0.c1 HAVING ((COUNT(*)) NOT BETWEEN (MIN(rt0.c1)) AND ((~ (COUNT(*))))) UNION ALL SELECT ALL rt0.c0, v0.c0, rt0.c2, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, v0.c0, rt0.c2, rt0.c1 HAVING (NOT (((COUNT(*)) NOT BETWEEN (MIN(rt0.c1)) AND ((~ (COUNT(*))))))) UNION ALL SELECT ALL rt0.c0, v0.c0, rt0.c2, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, v0.c0, rt0.c2, rt0.c1 HAVING ((((COUNT(*)) NOT BETWEEN (MIN(rt0.c1)) AND ((~ (COUNT(*)))))) ISNULL);
SELECT rt0.c0, v0.c0, rt0.c2, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, v0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, v0.c0, rt0.c2, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, v0.c0, rt0.c2, rt0.c1 HAVING ((COUNT(*)) NOT BETWEEN (MIN(rt0.c1)) AND ((~ (COUNT(*))))) UNION ALL SELECT ALL rt0.c0, v0.c0, rt0.c2, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, v0.c0, rt0.c2, rt0.c1 HAVING (NOT (((COUNT(*)) NOT BETWEEN (MIN(rt0.c1)) AND ((~ (COUNT(*))))))) UNION ALL SELECT ALL rt0.c0, v0.c0, rt0.c2, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, v0.c0, rt0.c2, rt0.c1 HAVING ((((COUNT(*)) NOT BETWEEN (MIN(rt0.c1)) AND ((~ (COUNT(*)))))) ISNULL);
SELECT rt0.c0, v0.c0, rt0.c2, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, v0.c0, rt0.c2, rt0.c1;
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, '1200-179-912-1679 377T1077T', ((vt0.c0) NOTNULL))) AND (((~ (vt0.c0)), ((vt0.c0) ISNULL), ((vt0.c0)<>(vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, '1200-179-912-1679 377T1077T', ((vt0.c0) NOTNULL))) AND (((~ (vt0.c0)), ((vt0.c0) ISNULL), ((vt0.c0)!=(vt0.c0)))))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, '1200-179-912-1679 377T1077T', ((vt0.c0) NOTNULL))) AND (((~ (vt0.c0)), ((vt0.c0) ISNULL), ((vt0.c0)<>(vt0.c0)))))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CAST((((rt0.c1))>=((rt0.c2))) AS TEXT)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CAST((((rt0.c1))>=((rt0.c2))) AS TEXT)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CAST((((rt0.c1))>=((rt0.c2))) AS TEXT)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT v0.c0, rt0.c1, rt0.c0 FROM vt0, rt0, v0 GROUP BY v0.c0, rt0.c1, rt0.c0;
SELECT v0.c0, rt0.c1, rt0.c0 FROM vt0, rt0, v0 WHERE ((((v0.c0)>=(vt0.c0)) IN (v0.c0 COLLATE RTRIM))) GROUP BY v0.c0, rt0.c1, rt0.c0 UNION SELECT v0.c0, rt0.c1, rt0.c0 FROM vt0, rt0, v0 WHERE ((NOT ((((v0.c0)>=(vt0.c0)) IN (v0.c0 COLLATE RTRIM))))) GROUP BY v0.c0, rt0.c1, rt0.c0 UNION SELECT ALL v0.c0, rt0.c1, rt0.c0 FROM vt0, rt0, v0 WHERE ((((((v0.c0)>=(vt0.c0)) IN (v0.c0 COLLATE RTRIM))) ISNULL)) GROUP BY v0.c0, rt0.c1, rt0.c0;
SELECT v0.c0, rt0.c1, rt0.c0 FROM vt0, rt0, v0 GROUP BY v0.c0, rt0.c1, rt0.c0;
SELECT rt0.c0, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1, v0.c0;
SELECT rt0.c0, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1, v0.c0 HAVING (~ (AVG(AVG(v0.c0)))) UNION ALL SELECT rt0.c0, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1, v0.c0 HAVING (NOT ((~ (AVG(AVG(v0.c0)))))) UNION ALL SELECT rt0.c0, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1, v0.c0 HAVING (((~ (AVG(AVG(v0.c0))))) ISNULL);
SELECT ALL TOTAL(CASE WHEN CAST(vt0.c0 AS REAL) THEN ((rt0.c1) NOT NULL) ELSE ((rt0.c1) BETWEEN (rt0.c1) AND (0.9328913317542873)) END) FROM vt0, rt0 ORDER BY rt0.c2 COLLATE NOCASE COLLATE RTRIM COLLATE NOCASE DESC, rt0.c0 DESC;
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (0.20990886195567127) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (0.20990886195567127))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((0.20990886195567127) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CASE WHEN ((vt0.c0)GLOB(vt0.c0)) THEN ((vt0.c0) IS TRUE) END) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CASE WHEN ((vt0.c0)GLOB(vt0.c0)) THEN ((vt0.c0) IS TRUE) END))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CASE WHEN ((vt0.c0)GLOB(vt0.c0)) THEN ((vt0.c0) IS TRUE) END) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL rt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM vt0 INNER JOIN rt0 ON ((((rt0.c1)OR(vt0.c0)))OR(rt0.c0)) COLLATE RTRIM GROUP BY rt0.c1, rt0.c2, vt0.c0, rt0.c0;
SELECT rt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM vt0 INNER JOIN rt0 ON ((((rt0.c1)OR(vt0.c0)))OR(rt0.c0)) COLLATE RTRIM WHERE (CASE WHEN ((0Xfffffffffc3678a2)GLOB(rt0.c0)) THEN CASE rt0.c0  WHEN rt0.c2 THEN vt0.c0 END END) GROUP BY rt0.c1, rt0.c2, vt0.c0, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM vt0 INNER JOIN rt0 ON ((((rt0.c1)OR(vt0.c0)))OR(rt0.c0)) COLLATE RTRIM WHERE ((NOT (CASE WHEN ((0xfffffffffc3678a2)GLOB(rt0.c0)) THEN CASE rt0.c0  WHEN rt0.c2 THEN vt0.c0 END END))) GROUP BY rt0.c1, rt0.c2, vt0.c0, rt0.c0 UNION SELECT rt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM vt0 INNER JOIN rt0 ON ((((rt0.c1)OR(vt0.c0)))OR(rt0.c0)) COLLATE RTRIM WHERE (((CASE WHEN ((0xfffffffffc3678a2)GLOB(rt0.c0)) THEN CASE rt0.c0  WHEN rt0.c2 THEN vt0.c0 END END) ISNULL)) GROUP BY rt0.c1, rt0.c2, vt0.c0, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM vt0 INNER JOIN rt0 ON ((((rt0.c1)OR(vt0.c0)))OR(rt0.c0)) COLLATE RTRIM GROUP BY rt0.c1, rt0.c2, vt0.c0, rt0.c0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, v0.c0 FROM vt0, rt0, v0 GROUP BY rt0.c2, rt0.c0, rt0.c1, v0.c0;
SELECT rt0.c2, rt0.c0, rt0.c1, v0.c0 FROM vt0, rt0, v0 GROUP BY rt0.c2, rt0.c0, rt0.c1, v0.c0 HAVING (rt0.c2 IN ()) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1, v0.c0 FROM vt0, rt0, v0 GROUP BY rt0.c2, rt0.c0, rt0.c1, v0.c0 HAVING (NOT ((rt0.c2 IN ()))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1, v0.c0 FROM vt0, rt0, v0 GROUP BY rt0.c2, rt0.c0, rt0.c1, v0.c0 HAVING (((rt0.c2 IN ())) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c1, v0.c0 FROM vt0, rt0, v0 GROUP BY rt0.c2, rt0.c0, rt0.c1, v0.c0;
SELECT rt0.c2, rt0.c0, rt0.c1, v0.c0 FROM vt0, rt0, v0 GROUP BY rt0.c2, rt0.c0, rt0.c1, v0.c0 HAVING (rt0.c2 IN ()) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1, v0.c0 FROM vt0, rt0, v0 GROUP BY rt0.c2, rt0.c0, rt0.c1, v0.c0 HAVING (NOT ((rt0.c2 IN ()))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1, v0.c0 FROM vt0, rt0, v0 GROUP BY rt0.c2, rt0.c0, rt0.c1, v0.c0 HAVING (((rt0.c2 IN ())) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c1, v0.c0 FROM vt0, rt0, v0 GROUP BY rt0.c2, rt0.c0, rt0.c1, v0.c0;
SELECT ALL * FROM v0 NATURAL JOIN vt0;
SELECT * FROM v0 NATURAL JOIN vt0 WHERE (((((v0.c0)>>(vt0.c0)))*((((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0)))))) UNION ALL SELECT ALL * FROM v0 NATURAL JOIN vt0 WHERE ((NOT (((((v0.c0)>>(vt0.c0)))*((((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0)))))))) UNION ALL SELECT * FROM v0 NATURAL JOIN vt0 WHERE (((((((v0.c0)>>(vt0.c0)))*((((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0)))))) ISNULL));
SELECT ALL * FROM v0 NATURAL JOIN vt0;
SELECT DISTINCT vt0.c0, rt0.c2, rt0.c1, rt0.c0, v0.c0 FROM v0, vt0, rt0;
SELECT DISTINCT vt0.c0, rt0.c2, rt0.c1, rt0.c0, v0.c0 FROM v0, vt0, rt0 WHERE (((CAST(rt0.c0 AS INTEGER))-(vt0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT vt0.c0, rt0.c2, rt0.c1, rt0.c0, v0.c0 FROM v0, vt0, rt0 WHERE ((NOT (((CAST(rt0.c0 AS INTEGER))-(vt0.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT vt0.c0, rt0.c2, rt0.c1, rt0.c0, v0.c0 FROM v0, vt0, rt0 WHERE (((((CAST(rt0.c0 AS INTEGER))-(vt0.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c2, rt0.c1, rt0.c0, v0.c0 FROM v0, vt0, rt0;
SELECT rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0;
SELECT ALL rt0.c2, vt0.c0 FROM rt0, vt0 WHERE (vt0.c0) GROUP BY rt0.c2, vt0.c0 UNION SELECT ALL rt0.c2, vt0.c0 FROM rt0, vt0 WHERE ((NOT (vt0.c0))) GROUP BY rt0.c2, vt0.c0 UNION SELECT rt0.c2, vt0.c0 FROM rt0, vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY rt0.c2, vt0.c0;
SELECT rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((((((((MAX(AVG(rt0.c2)))AND(GROUP_CONCAT(rt0.c2))))AND(SUM(rt0.c0))))AND(CASE COUNT(rt0.c0)  WHEN COUNT(*) THEN rt0.c0 END)))OR(COUNT(SUM(rt0.c1)))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (((((((((MAX(AVG(rt0.c2)))AND(GROUP_CONCAT(rt0.c2))))AND(SUM(rt0.c0))))AND(CASE COUNT(rt0.c0)  WHEN COUNT(*) THEN rt0.c0 END)))OR(COUNT(SUM(rt0.c1)))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((((((((((MAX(AVG(rt0.c2)))AND(GROUP_CONCAT(rt0.c2))))AND(SUM(rt0.c0))))AND(CASE COUNT(rt0.c0)  WHEN COUNT(*) THEN rt0.c0 END)))OR(COUNT(SUM(rt0.c1))))) ISNULL);
SELECT ALL SUM((LIKELY(DISTINCT vt0.c0) IN ())) FROM rt0, vt0;
SELECT ALL rt0.c1 FROM v0, rt0;
SELECT rt0.c1 FROM v0, rt0 WHERE ((- ('-1390369652'))) UNION ALL SELECT ALL rt0.c1 FROM v0, rt0 WHERE ((NOT ((- ('-1390369652'))))) UNION ALL SELECT ALL rt0.c1 FROM v0, rt0 WHERE ((((- ('-1390369652'))) ISNULL));
SELECT ALL rt0.c1 FROM v0, rt0;
SELECT DISTINCT vt0.c0, v0.c0 FROM rt0, vt0, v0;
SELECT DISTINCT vt0.c0, v0.c0 FROM rt0, vt0, v0 WHERE ((- (CASE WHEN rt0.c1 THEN rt0.c0 END))) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM rt0, vt0, v0 WHERE ((NOT ((- (CASE WHEN rt0.c1 THEN rt0.c0 END))))) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM rt0, vt0, v0 WHERE ((((- (CASE WHEN rt0.c1 THEN rt0.c0 END))) ISNULL));
SELECT DISTINCT vt0.c0, v0.c0 FROM rt0, vt0, v0;
SELECT rt0.c1, v0.c0 FROM v0 CROSS JOIN rt0 ON -787099905 GROUP BY rt0.c1, v0.c0;
SELECT rt0.c1, v0.c0 FROM v0 CROSS JOIN rt0 ON -787099905 WHERE ((((rt0.c0 IN ()))LIKE(((rt0.c0)||(rt0.c1))))) GROUP BY rt0.c1, v0.c0 UNION SELECT ALL rt0.c1, v0.c0 FROM v0 CROSS JOIN rt0 ON -787099905 WHERE ((NOT ((((rt0.c0 IN ()))LIKE(((rt0.c0)||(rt0.c1))))))) GROUP BY rt0.c1, v0.c0 UNION SELECT ALL rt0.c1, v0.c0 FROM v0 CROSS JOIN rt0 ON -787099905 WHERE ((((((rt0.c0 IN ()))LIKE(((rt0.c0)||(rt0.c1))))) ISNULL)) GROUP BY rt0.c1, v0.c0;
SELECT rt0.c1, v0.c0 FROM v0 CROSS JOIN rt0 ON -787099905 GROUP BY rt0.c1, v0.c0;
SELECT ALL rt0.c1 FROM v0, rt0, vt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM v0, rt0, vt0 GROUP BY rt0.c1 HAVING CASE ((((COUNT(vt0.c0))OR(vt0.c0)))OR(rt0.c2))  WHEN (+ (v0.c0)) THEN COUNT(COUNT(rt0.c0)) ELSE (+ (TOTAL(rt0.c0))) END UNION ALL SELECT ALL rt0.c1 FROM v0, rt0, vt0 GROUP BY rt0.c1 HAVING (NOT (CASE ((((COUNT(vt0.c0))OR(vt0.c0)))OR(rt0.c2))  WHEN (+ (v0.c0)) THEN COUNT(COUNT(rt0.c0)) ELSE (+ (TOTAL(rt0.c0))) END)) UNION ALL SELECT ALL rt0.c1 FROM v0, rt0, vt0 GROUP BY rt0.c1 HAVING ((CASE ((((COUNT(vt0.c0))OR(vt0.c0)))OR(rt0.c2))  WHEN (+ (v0.c0)) THEN COUNT(COUNT(rt0.c0)) ELSE (+ (TOTAL(rt0.c0))) END) ISNULL);
SELECT ALL rt0.c1, vt0.c0, rt0.c0, rt0.c2 FROM rt0, vt0;
SELECT rt0.c1, vt0.c0, rt0.c0, rt0.c2 FROM rt0, vt0 WHERE (CASE rt0.c1  WHEN rt0.c0 THEN vt0.c0 END COLLATE NOCASE) UNION ALL SELECT rt0.c1, vt0.c0, rt0.c0, rt0.c2 FROM rt0, vt0 WHERE ((NOT (CASE rt0.c1  WHEN rt0.c0 THEN vt0.c0 END COLLATE NOCASE))) UNION ALL SELECT rt0.c1, vt0.c0, rt0.c0, rt0.c2 FROM rt0, vt0 WHERE (((CASE rt0.c1  WHEN rt0.c0 THEN vt0.c0 END COLLATE NOCASE) ISNULL));
SELECT ALL rt0.c1, vt0.c0, rt0.c0, rt0.c2 FROM rt0, vt0;
SELECT DISTINCT * FROM v0 FULL OUTER JOIN vt0 ON (((- (v0.c0)))LIKE(CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END));
SELECT DISTINCT * FROM v0 FULL OUTER JOIN vt0 ON (((- (v0.c0)))LIKE(CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END)) WHERE (CASE v0.c0 COLLATE NOCASE  WHEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) THEN ((vt0.c0) NOT NULL) ELSE v0.c0 END) UNION SELECT DISTINCT * FROM v0 FULL OUTER JOIN vt0 ON (((- (v0.c0)))LIKE(CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END)) WHERE ((NOT (CASE v0.c0 COLLATE NOCASE  WHEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) THEN ((vt0.c0) NOT NULL) ELSE v0.c0 END))) UNION SELECT DISTINCT * FROM v0 FULL OUTER JOIN vt0 ON (((- (v0.c0)))LIKE(CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END)) WHERE (((CASE v0.c0 COLLATE NOCASE  WHEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) THEN ((vt0.c0) NOT NULL) ELSE v0.c0 END) ISNULL));
SELECT DISTINCT * FROM v0 FULL OUTER JOIN vt0 ON (((- (v0.c0)))LIKE(CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END));
SELECT ALL vt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c2, rt0.c1;
SELECT ALL vt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 WHERE (((((rt0.c2) IS TRUE)) BETWEEN (x'83a0') AND (((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)))AND(0.713892598513971)))AND(vt0.c0))))) GROUP BY vt0.c0, rt0.c2, rt0.c1 UNION SELECT vt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 WHERE ((NOT (((((rt0.c2) IS TRUE)) BETWEEN (x'83a0') AND (((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)))AND(0.713892598513971)))AND(vt0.c0))))))) GROUP BY vt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL vt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 WHERE (((((((rt0.c2) IS TRUE)) BETWEEN (x'83a0') AND (((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)))AND(0.713892598513971)))AND(vt0.c0))))) ISNULL)) GROUP BY vt0.c0, rt0.c2, rt0.c1;
SELECT ALL vt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c2, rt0.c1;
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING ((SUM(v0.c0)) IS TRUE) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (((SUM(v0.c0)) IS TRUE))) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING ((((SUM(v0.c0)) IS TRUE)) ISNULL);
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING ((SUM(v0.c0)) IS TRUE) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (((SUM(v0.c0)) IS TRUE))) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING ((((SUM(v0.c0)) IS TRUE)) ISNULL);
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT * FROM v0 INNER JOIN vt0 ON vt0.c0;
SELECT * FROM v0 INNER JOIN vt0 ON vt0.c0 WHERE (((v0.c0 COLLATE RTRIM) NOTNULL)) UNION ALL SELECT ALL * FROM v0 INNER JOIN vt0 ON vt0.c0 WHERE ((NOT (((v0.c0 COLLATE RTRIM) NOTNULL)))) UNION ALL SELECT ALL * FROM v0 INNER JOIN vt0 ON vt0.c0 WHERE (((((v0.c0 COLLATE RTRIM) NOTNULL)) ISNULL));
SELECT * FROM v0 INNER JOIN vt0 ON vt0.c0;
SELECT DISTINCT vt0.c0, rt0.c2 FROM v0 LEFT OUTER JOIN rt0 ON (((((rt0.c2, v0.c0, rt0.c1))>=((rt0.c0, v0.c0, v0.c0)))) BETWEEN (((rt0.c0)<<(rt0.c2))) AND ((rt0.c0 IN ()))) LEFT OUTER JOIN vt0 ON rt0.c0;
SELECT DISTINCT vt0.c0, rt0.c2 FROM v0 LEFT OUTER JOIN rt0 ON (((((rt0.c2, v0.c0, rt0.c1))>=((rt0.c0, v0.c0, v0.c0)))) BETWEEN (((rt0.c0)<<(rt0.c2))) AND ((rt0.c0 IN ()))) LEFT OUTER JOIN vt0 ON rt0.c0 WHERE (CASE ((rt0.c1)%(vt0.c0))  WHEN ((v0.c0)>(rt0.c2)) THEN ((rt0.c0)!=(rt0.c2)) END) UNION SELECT DISTINCT vt0.c0, rt0.c2 FROM v0 LEFT OUTER JOIN rt0 ON (((((rt0.c2, v0.c0, rt0.c1))>=((rt0.c0, v0.c0, v0.c0)))) BETWEEN (((rt0.c0)<<(rt0.c2))) AND ((rt0.c0 IN ()))) LEFT OUTER JOIN vt0 ON rt0.c0 WHERE ((NOT (CASE ((rt0.c1)%(vt0.c0))  WHEN ((v0.c0)>(rt0.c2)) THEN ((rt0.c0)!=(rt0.c2)) END))) UNION SELECT DISTINCT vt0.c0, rt0.c2 FROM v0 LEFT OUTER JOIN rt0 ON (((((rt0.c2, v0.c0, rt0.c1))>=((rt0.c0, v0.c0, v0.c0)))) BETWEEN (((rt0.c0)<<(rt0.c2))) AND ((rt0.c0 IN ()))) LEFT OUTER JOIN vt0 ON rt0.c0 WHERE (((CASE ((rt0.c1)%(vt0.c0))  WHEN ((v0.c0)>(rt0.c2)) THEN ((rt0.c0)<>(rt0.c2)) END) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c2 FROM v0 LEFT OUTER JOIN rt0 ON (((((rt0.c2, v0.c0, rt0.c1))>=((rt0.c0, v0.c0, v0.c0)))) BETWEEN (((rt0.c0)<<(rt0.c2))) AND ((rt0.c0 IN ()))) LEFT OUTER JOIN vt0 ON rt0.c0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE (UNLIKELY(DISTINCT (vt0.c0 IN ()))) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE ((NOT (UNLIKELY(DISTINCT (vt0.c0 IN ()))))) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE (((UNLIKELY(DISTINCT (vt0.c0 IN ()))) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON (- (CASE rt0.c2  WHEN vt0.c0 THEN rt0.c2 END)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON (- (CASE rt0.c2  WHEN vt0.c0 THEN rt0.c2 END)) GROUP BY vt0.c0 HAVING NULL UNION ALL SELECT vt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON (- (CASE rt0.c2  WHEN vt0.c0 THEN rt0.c2 END)) GROUP BY vt0.c0 HAVING (NOT (NULL)) UNION ALL SELECT ALL vt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON (- (CASE rt0.c2  WHEN vt0.c0 THEN rt0.c2 END)) GROUP BY vt0.c0 HAVING ((NULL) ISNULL);
SELECT vt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON (- (CASE rt0.c2  WHEN vt0.c0 THEN rt0.c2 END)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON (- (CASE rt0.c2  WHEN vt0.c0 THEN rt0.c2 END)) GROUP BY vt0.c0 HAVING NULL UNION ALL SELECT vt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON (- (CASE rt0.c2  WHEN vt0.c0 THEN rt0.c2 END)) GROUP BY vt0.c0 HAVING (NOT (NULL)) UNION ALL SELECT ALL vt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON (- (CASE rt0.c2  WHEN vt0.c0 THEN rt0.c2 END)) GROUP BY vt0.c0 HAVING ((NULL) ISNULL);
SELECT vt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON (- (CASE rt0.c2  WHEN vt0.c0 THEN rt0.c2 END)) GROUP BY vt0.c0;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((('') NOTNULL)) ORDER BY LIKELY(DISTINCT ((((rt0.c2)OR(rt0.c2)))OR(0.7078999584272202))) DESC  NULLS FIRST, (((rt0.c0)) BETWEEN (((((rt0.c1))=((rt0.c2))))) AND ((CAST(rt0.c1 AS INTEGER)))) DESC  NULLS FIRST, LIKELY(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))) ASC;
SELECT ALL * FROM rt0 WHERE ((NOT ((('') NOTNULL)))) ORDER BY LIKELY(DISTINCT ((((rt0.c2)OR(rt0.c2)))OR(0.7078999584272202))) DESC  NULLS FIRST, (((rt0.c0)) BETWEEN (((((rt0.c1))=((rt0.c2))))) AND ((CAST(rt0.c1 AS INTEGER)))) DESC  NULLS FIRST, LIKELY(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))) ASC;
SELECT ALL * FROM rt0 WHERE ((((('') NOTNULL)) ISNULL)) ORDER BY LIKELY(DISTINCT ((((rt0.c2)OR(rt0.c2)))OR(0.7078999584272202))) DESC  NULLS FIRST, (((rt0.c0)) BETWEEN (((((rt0.c1))==((rt0.c2))))) AND ((CAST(rt0.c1 AS INTEGER)))) DESC  NULLS FIRST, LIKELY(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))) ASC;
SELECT * FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0, v0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0, v0 WHERE (((CASE WHEN rt0.c2 THEN v0.c0 ELSE v0.c0 END) IS TRUE)) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0, v0 WHERE ((NOT (((CASE WHEN rt0.c2 THEN v0.c0 ELSE v0.c0 END) IS TRUE)))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0, v0 WHERE (((((CASE WHEN rt0.c2 THEN v0.c0 ELSE v0.c0 END) IS TRUE)) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0, v0;
SELECT rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM v0, rt0 WHERE (ABS(DISTINCT ((rt0.c1)||(rt0.c2)))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM v0, rt0 WHERE ((NOT (ABS(DISTINCT ((rt0.c1)||(rt0.c2)))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM v0, rt0 WHERE (((ABS(DISTINCT ((rt0.c1)||(rt0.c2)))) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, vt0.c0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, vt0.c0 HAVING (~ (MAX(GROUP_CONCAT(COUNT(rt0.c0))))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, vt0.c0 HAVING (NOT ((~ (MAX(GROUP_CONCAT(COUNT(rt0.c0))))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, vt0.c0 HAVING (((~ (MAX(GROUP_CONCAT(COUNT(rt0.c0)))))) ISNULL);
SELECT ALL * FROM v0, vt0, rt0;
SELECT ALL * FROM v0, vt0, rt0 WHERE (((v0.c0 COLLATE BINARY) NOTNULL)) UNION ALL SELECT * FROM v0, vt0, rt0 WHERE ((NOT (((v0.c0 COLLATE BINARY) NOTNULL)))) UNION ALL SELECT ALL * FROM v0, vt0, rt0 WHERE (((((v0.c0 COLLATE BINARY) NOTNULL)) ISNULL));
SELECT ALL * FROM v0, vt0, rt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((('8z' COLLATE BINARY) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (vt0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((('8z' COLLATE BINARY) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (vt0.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 NOT INDEXED WHERE ((((('8z' COLLATE BINARY) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (vt0.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT rt0.c2, vt0.c0 FROM rt0, v0, vt0 GROUP BY rt0.c2, vt0.c0;
SELECT rt0.c2, vt0.c0 FROM rt0, v0, vt0 WHERE (((((v0.c0) IS FALSE))GLOB(TYPEOF(DISTINCT rt0.c0)))) GROUP BY rt0.c2, vt0.c0 UNION SELECT rt0.c2, vt0.c0 FROM rt0, v0, vt0 WHERE ((NOT (((((v0.c0) IS FALSE))GLOB(TYPEOF(DISTINCT rt0.c0)))))) GROUP BY rt0.c2, vt0.c0 UNION SELECT rt0.c2, vt0.c0 FROM rt0, v0, vt0 WHERE (((((((v0.c0) IS FALSE))GLOB(TYPEOF(DISTINCT rt0.c0)))) ISNULL)) GROUP BY rt0.c2, vt0.c0;
SELECT rt0.c2, vt0.c0 FROM rt0, v0, vt0 GROUP BY rt0.c2, vt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (+ (COUNT(TOTAL(v0.c0)) COLLATE NOCASE)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((+ (COUNT(TOTAL(v0.c0)) COLLATE NOCASE)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((+ (COUNT(TOTAL(v0.c0)) COLLATE NOCASE))) ISNULL);
SELECT * FROM rt0, v0;
SELECT * FROM rt0, v0 WHERE ('') UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((NOT (''))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((('') ISNULL));
SELECT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0, vt0;
SELECT DISTINCT * FROM rt0, v0, vt0 WHERE ((+ (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 END))) UNION SELECT DISTINCT * FROM rt0, v0, vt0 WHERE ((NOT ((+ (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 END))))) UNION SELECT DISTINCT * FROM rt0, v0, vt0 WHERE ((((+ (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 END))) ISNULL));
SELECT DISTINCT * FROM rt0, v0, vt0;
SELECT vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON (((1.14021129E9, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0 COLLATE RTRIM, (('1e500') NOT NULL), (((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0))), vt0.c0)) AND ((v0.c0, v0.c0 COLLATE BINARY, CASE WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 END, (~ (v0.c0)), ((v0.c0) BETWEEN (vt0.c0) AND (v0.c0))))) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON (((1.14021129E9, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0 COLLATE RTRIM, (('1e500') NOT NULL), (((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0))), vt0.c0)) AND ((v0.c0, v0.c0 COLLATE BINARY, CASE WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 END, (~ (v0.c0)), ((v0.c0) BETWEEN (vt0.c0) AND (v0.c0))))) WHERE (LIKELY(DISTINCT (((v0.c0))<=((v0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON (((1.14021129E9, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0 COLLATE RTRIM, (('1e500') NOT NULL), (((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0))), vt0.c0)) AND ((v0.c0, v0.c0 COLLATE BINARY, CASE WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 END, (~ (v0.c0)), ((v0.c0) BETWEEN (vt0.c0) AND (v0.c0))))) WHERE ((NOT (LIKELY(DISTINCT (((v0.c0))<=((v0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON (((1.14021129E9, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0 COLLATE RTRIM, (('1e500') NOT NULL), (((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0))), vt0.c0)) AND ((v0.c0, v0.c0 COLLATE BINARY, CASE WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 END, (~ (v0.c0)), ((v0.c0) BETWEEN (vt0.c0) AND (v0.c0))))) WHERE (((LIKELY(DISTINCT (((v0.c0))<=((v0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON (((1.14021129E9, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0 COLLATE RTRIM, (('1e500') NOT NULL), (((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0))), vt0.c0)) AND ((v0.c0, v0.c0 COLLATE BINARY, CASE WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 END, (~ (v0.c0)), ((v0.c0) BETWEEN (vt0.c0) AND (v0.c0))))) GROUP BY vt0.c0;
SELECT ALL v0.c0, rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM rt0, vt0, v0 GROUP BY v0.c0, rt0.c1, rt0.c0, vt0.c0, rt0.c2;
SELECT v0.c0, rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM rt0, vt0, v0 GROUP BY v0.c0, rt0.c1, rt0.c0, vt0.c0, rt0.c2 HAVING 1578992209 UNION ALL SELECT ALL v0.c0, rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM rt0, vt0, v0 NOT INDEXED GROUP BY v0.c0, rt0.c1, rt0.c0, vt0.c0, rt0.c2 HAVING (NOT (1578992209)) UNION ALL SELECT ALL v0.c0, rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM rt0, vt0, v0 GROUP BY v0.c0, rt0.c1, rt0.c0, vt0.c0, rt0.c2 HAVING ((1578992209) ISNULL);
SELECT ALL v0.c0, rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM rt0, vt0, v0 GROUP BY v0.c0, rt0.c1, rt0.c0, vt0.c0, rt0.c2;
SELECT v0.c0, rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM rt0, vt0, v0 GROUP BY v0.c0, rt0.c1, rt0.c0, vt0.c0, rt0.c2 HAVING 1578992209 UNION ALL SELECT ALL v0.c0, rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM rt0, vt0, v0 NOT INDEXED GROUP BY v0.c0, rt0.c1, rt0.c0, vt0.c0, rt0.c2 HAVING (NOT (1578992209)) UNION ALL SELECT ALL v0.c0, rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM rt0, vt0, v0 GROUP BY v0.c0, rt0.c1, rt0.c0, vt0.c0, rt0.c2 HAVING ((1578992209) ISNULL);
SELECT ALL v0.c0, rt0.c1, rt0.c0, vt0.c0, rt0.c2 FROM rt0, vt0, v0 GROUP BY v0.c0, rt0.c1, rt0.c0, vt0.c0, rt0.c2;
SELECT TOTAL(((vt0.c0 COLLATE RTRIM) IS FALSE)) FROM v0, vt0;
SELECT vt0.c0 FROM vt0 NOT INDEXED;
SELECT ALL vt0.c0 FROM vt0 WHERE (CAST(((vt0.c0) NOTNULL) AS BLOB)) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (CAST(((vt0.c0) NOTNULL) AS BLOB)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST(((vt0.c0) NOTNULL) AS BLOB)) ISNULL));
SELECT vt0.c0 FROM vt0 NOT INDEXED;
SELECT DISTINCT * FROM vt0, rt0, v0;
SELECT DISTINCT * FROM vt0, rt0, v0 WHERE (NULL) UNION SELECT DISTINCT * FROM vt0, rt0, v0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM vt0, rt0, v0 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM vt0, rt0, v0;
SELECT rt0.c1, vt0.c0, rt0.c2, rt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON NULL GROUP BY rt0.c1, vt0.c0, rt0.c2, rt0.c0;
SELECT rt0.c1, vt0.c0, rt0.c2, rt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON NULL WHERE ('337546493') GROUP BY rt0.c1, vt0.c0, rt0.c2, rt0.c0 UNION SELECT rt0.c1, vt0.c0, rt0.c2, rt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON NULL WHERE ((NOT ('337546493'))) GROUP BY rt0.c1, vt0.c0, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, vt0.c0, rt0.c2, rt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON NULL WHERE ((('337546493') ISNULL)) GROUP BY rt0.c1, vt0.c0, rt0.c2, rt0.c0;
SELECT rt0.c1, vt0.c0, rt0.c2, rt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON NULL GROUP BY rt0.c1, vt0.c0, rt0.c2, rt0.c0;
SELECT v0.c0, rt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM vt0, v0 FULL OUTER JOIN rt0 ON rt0.c0 GROUP BY v0.c0, rt0.c2, rt0.c1, rt0.c0, vt0.c0;
SELECT ALL v0.c0, rt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM vt0, v0 FULL OUTER JOIN rt0 ON rt0.c0 GROUP BY v0.c0, rt0.c2, rt0.c1, rt0.c0, vt0.c0 HAVING GROUP_CONCAT(COUNT(*)) UNION ALL SELECT ALL v0.c0, rt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM vt0, v0 FULL OUTER JOIN rt0 ON rt0.c0 GROUP BY v0.c0, rt0.c2, rt0.c1, rt0.c0, vt0.c0 HAVING (NOT (GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT ALL v0.c0, rt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM vt0, v0 FULL OUTER JOIN rt0 ON rt0.c0 GROUP BY v0.c0, rt0.c2, rt0.c1, rt0.c0, vt0.c0 HAVING ((GROUP_CONCAT(COUNT(*))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (json_valid(CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 END)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (json_valid(CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 END)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((json_valid(CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 END)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c0, v0.c0, rt0.c2 FROM rt0 LEFT OUTER JOIN v0 ON ((((rt0.c2)<<(v0.c0)))GLOB((rt0.c2 IN (NULL))));
SELECT DISTINCT rt0.c0, v0.c0, rt0.c2 FROM rt0 LEFT OUTER JOIN v0 ON ((((rt0.c2)<<(v0.c0)))GLOB((rt0.c2 IN (NULL)))) WHERE ((- ((~ (rt0.c1))))) UNION SELECT DISTINCT rt0.c0, v0.c0, rt0.c2 FROM rt0 LEFT OUTER JOIN v0 ON ((((rt0.c2)<<(v0.c0)))GLOB((rt0.c2 IN (NULL)))) WHERE ((NOT ((- ((~ (rt0.c1))))))) UNION SELECT DISTINCT rt0.c0, v0.c0, rt0.c2 FROM rt0 LEFT OUTER JOIN v0 ON ((((rt0.c2)<<(v0.c0)))GLOB((rt0.c2 IN (NULL)))) WHERE ((((- ((~ (rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c0, v0.c0, rt0.c2 FROM rt0 LEFT OUTER JOIN v0 ON ((((rt0.c2)<<(v0.c0)))GLOB((rt0.c2 IN (NULL))));
SELECT ALL rt0.c1, v0.c0 FROM vt0, rt0 LEFT OUTER JOIN v0 ON (((rt0.c1)) NOT BETWEEN ((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)) AND ((((rt0.c2) IS TRUE)))) GROUP BY rt0.c1, v0.c0;
SELECT rt0.c1, v0.c0 FROM vt0, rt0 LEFT OUTER JOIN v0 ON (((rt0.c1)) NOT BETWEEN ((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)) AND ((((rt0.c2) IS TRUE)))) WHERE (((((rt0.c2) IS TRUE))AND(((((rt0.c0)AND(v0.c0)))OR(rt0.c0))))) GROUP BY rt0.c1, v0.c0 UNION SELECT ALL rt0.c1, v0.c0 FROM vt0, rt0 LEFT OUTER JOIN v0 ON (((rt0.c1)) NOT BETWEEN ((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)) AND ((((rt0.c2) IS TRUE)))) WHERE ((NOT (((((rt0.c2) IS TRUE))AND(((((rt0.c0)AND(v0.c0)))OR(rt0.c0))))))) GROUP BY rt0.c1, v0.c0 UNION SELECT rt0.c1, v0.c0 FROM vt0, rt0 LEFT OUTER JOIN v0 ON (((rt0.c1)) NOT BETWEEN ((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)) AND ((((rt0.c2) IS TRUE)))) WHERE (((((((rt0.c2) IS TRUE))AND(((((rt0.c0)AND(v0.c0)))OR(rt0.c0))))) ISNULL)) GROUP BY rt0.c1, v0.c0;
SELECT ALL rt0.c1, v0.c0 FROM vt0, rt0 LEFT OUTER JOIN v0 ON (((rt0.c1)) NOT BETWEEN ((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)) AND ((((rt0.c2) IS TRUE)))) GROUP BY rt0.c1, v0.c0;
SELECT ALL rt0.c0, v0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c0, v0.c0;
SELECT ALL rt0.c0, v0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c0, v0.c0 HAVING ((MAX(COUNT(AVG(GROUP_CONCAT(x''))))) NOTNULL) UNION ALL SELECT rt0.c0, v0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c0, v0.c0 HAVING (NOT (((MAX(COUNT(AVG(GROUP_CONCAT(x''))))) NOTNULL))) UNION ALL SELECT ALL rt0.c0, v0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c0, v0.c0 HAVING ((((MAX(COUNT(AVG(GROUP_CONCAT(x''))))) NOTNULL)) ISNULL);
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE ((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND (('-2047853050'))))GLOB((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))))) UNION ALL SELECT * FROM v0 WHERE ((NOT ((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND (('-2047853050'))))GLOB((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))))))) UNION ALL SELECT * FROM v0 WHERE ((((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND (('-2047853050'))))GLOB((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((((0x4933f15b, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)) AND ((v0.c0, PRINTF(v0.c0), ((v0.c0)+(v0.c0)))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((((0x4933f15b, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)) AND ((v0.c0, PRINTF(v0.c0), ((v0.c0)+(v0.c0)))))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((0x4933f15b, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)) AND ((v0.c0, PRINTF(v0.c0), ((v0.c0)+(v0.c0)))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL v0.c0, rt0.c1, vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON ((((x'df12')OR(NULL)))OR(rt0.c2 COLLATE NOCASE)) INNER JOIN rt0 ON (((- (rt0.c1))) BETWEEN (ABS(v0.c0)) AND ((NOT (rt0.c1)))) GROUP BY v0.c0, rt0.c1, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON (((v0.c0) IS FALSE) IN ()) GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON (((v0.c0) IS FALSE) IN ()) GROUP BY v0.c0, vt0.c0 HAVING COUNT(TOTAL(MIN(v0.c0))) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON (((v0.c0) IS FALSE) IN ()) GROUP BY v0.c0, vt0.c0 HAVING (NOT (COUNT(TOTAL(MIN(v0.c0))))) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON (((v0.c0) IS FALSE) IN ()) GROUP BY v0.c0, vt0.c0 HAVING ((COUNT(TOTAL(MIN(v0.c0)))) ISNULL);
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((rt0.c1 IN ()) IN ())) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((rt0.c1 IN ()) IN ())))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((rt0.c1 IN ()) IN ())) ISNULL));
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE (CASE CASE WHEN vt0.c0 THEN v0.c0 END  WHEN (NOT (vt0.c0)) THEN vt0.c0 END) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT (CASE CASE WHEN vt0.c0 THEN v0.c0 END  WHEN (NOT (vt0.c0)) THEN vt0.c0 END))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE (((CASE CASE WHEN vt0.c0 THEN v0.c0 END  WHEN (NOT (vt0.c0)) THEN vt0.c0 END) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT ALL vt0.c0, rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON rt0.c1 RIGHT OUTER JOIN v0 ON 'VL狶NshE' GROUP BY vt0.c0, rt0.c2;
SELECT ALL vt0.c0, rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON rt0.c1 RIGHT OUTER JOIN v0 ON 'VL狶NshE' WHERE (((((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))) BETWEEN (((((((((v0.c0)AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c2)))AND(vt0.c0))) AND (CASE x'61a1'  WHEN rt0.c2 THEN rt0.c2 END))) GROUP BY vt0.c0, rt0.c2 UNION SELECT vt0.c0, rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON rt0.c1 RIGHT OUTER JOIN v0 ON 'VL狶NshE' WHERE ((NOT (((((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))) BETWEEN (((((((((v0.c0)AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c2)))AND(vt0.c0))) AND (CASE x'61a1'  WHEN rt0.c2 THEN rt0.c2 END))))) GROUP BY vt0.c0, rt0.c2 UNION SELECT vt0.c0, rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON rt0.c1 RIGHT OUTER JOIN v0 ON 'VL狶NshE' WHERE (((((((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))) BETWEEN (((((((((v0.c0)AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c2)))AND(vt0.c0))) AND (CASE x'61a1'  WHEN rt0.c2 THEN rt0.c2 END))) ISNULL)) GROUP BY vt0.c0, rt0.c2;
SELECT ALL vt0.c0, rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON rt0.c1 RIGHT OUTER JOIN v0 ON 'VL狶NshE' GROUP BY vt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL * FROM v0, vt0;
SELECT ALL * FROM v0, vt0 WHERE ((((((v0.c0))<=((vt0.c0)))) IS TRUE)) UNION ALL SELECT * FROM v0, vt0 WHERE ((NOT ((((((v0.c0))<=((vt0.c0)))) IS TRUE)))) UNION ALL SELECT * FROM v0, vt0 WHERE ((((((((v0.c0))<=((vt0.c0)))) IS TRUE)) ISNULL));
SELECT ALL * FROM v0, vt0;
SELECT DISTINCT rt0.c1, vt0.c0, rt0.c0 FROM rt0, v0, vt0;
SELECT DISTINCT rt0.c1, vt0.c0, rt0.c0 FROM rt0, v0, vt0 WHERE (rt0.c2) UNION SELECT DISTINCT rt0.c1, vt0.c0, rt0.c0 FROM rt0, v0, vt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT rt0.c1, vt0.c0, rt0.c0 FROM rt0, v0, vt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT rt0.c1, vt0.c0, rt0.c0 FROM rt0, v0, vt0;
SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 WHERE (highlight(((v0.c0)GLOB(0.7900878300387288)), (((v0.c0, vt0.c0, '0.370946131215798'))>=((v0.c0, v0.c0, vt0.c0))), ((((v0.c0)OR(vt0.c0)))AND(vt0.c0)), 0.6741711110289365)) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt0, v0 WHERE ((NOT (highlight(((v0.c0)GLOB(0.7900878300387288)), (((v0.c0, vt0.c0, '0.370946131215798'))>=((v0.c0, v0.c0, vt0.c0))), ((((v0.c0)OR(vt0.c0)))AND(vt0.c0)), 0.6741711110289365)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt0, v0 WHERE (((highlight(((v0.c0)GLOB(0.7900878300387288)), (((v0.c0, vt0.c0, '0.370946131215798'))>=((v0.c0, v0.c0, vt0.c0))), ((((v0.c0)OR(vt0.c0)))AND(vt0.c0)), 0.6741711110289365)) ISNULL)) GROUP BY v0.c0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING NULL UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (NULL)) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((NULL) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING NULL UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (NULL)) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((NULL) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0;
SELECT rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0 WHERE ((+ ((((vt0.c0)) BETWEEN ((rt0.c2)) AND ((vt0.c0)))))) UNION ALL SELECT rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0 WHERE ((NOT ((+ ((((vt0.c0)) BETWEEN ((rt0.c2)) AND ((vt0.c0)))))))) UNION ALL SELECT rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0 WHERE ((((+ ((((vt0.c0)) BETWEEN ((rt0.c2)) AND ((vt0.c0)))))) ISNULL));
SELECT ALL rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((~ ((v0.c0 IN ())))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((~ ((v0.c0 IN ())))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((~ ((v0.c0 IN ())))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT rt0.c1, rt0.c0, v0.c0, vt0.c0 FROM v0, vt0 CROSS JOIN rt0 ON ((((((((LIKELIHOOD(rt0.c0, 0.8116597044959798))OR('-1707716914')))AND(LIKELY(vt0.c0))))OR(rt0.c0 COLLATE NOCASE)))AND((rt0.c0 IN ()))) GROUP BY rt0.c1, rt0.c0, v0.c0, vt0.c0;
SELECT ALL rt0.c1, rt0.c0, v0.c0, vt0.c0 FROM v0, vt0 CROSS JOIN rt0 ON ((((((((LIKELIHOOD(rt0.c0, 0.8116597044959798))OR('-1707716914')))AND(LIKELY(vt0.c0))))OR(rt0.c0 COLLATE NOCASE)))AND((rt0.c0 IN ()))) WHERE (v0.c0) GROUP BY rt0.c1, rt0.c0, v0.c0, vt0.c0 UNION SELECT ALL rt0.c1, rt0.c0, v0.c0, vt0.c0 FROM v0, vt0 CROSS JOIN rt0 ON ((((((((LIKELIHOOD(rt0.c0, 0.8116597044959798))OR('-1707716914')))AND(LIKELY(vt0.c0))))OR(rt0.c0 COLLATE NOCASE)))AND((rt0.c0 IN ()))) WHERE ((NOT (v0.c0))) GROUP BY rt0.c1, rt0.c0, v0.c0, vt0.c0 UNION SELECT ALL rt0.c1, rt0.c0, v0.c0, vt0.c0 FROM v0, vt0 CROSS JOIN rt0 ON ((((((((LIKELIHOOD(rt0.c0, 0.8116597044959798))OR('-1707716914')))AND(LIKELY(vt0.c0))))OR(rt0.c0 COLLATE NOCASE)))AND((rt0.c0 IN ()))) WHERE (((v0.c0) ISNULL)) GROUP BY rt0.c1, rt0.c0, v0.c0, vt0.c0;
SELECT rt0.c1, rt0.c0, v0.c0, vt0.c0 FROM v0, vt0 CROSS JOIN rt0 ON ((((((((LIKELIHOOD(rt0.c0, 0.8116597044959798))OR('-1707716914')))AND(LIKELY(vt0.c0))))OR(rt0.c0 COLLATE NOCASE)))AND((rt0.c0 IN ()))) GROUP BY rt0.c1, rt0.c0, v0.c0, vt0.c0;
SELECT vt0.c0, rt0.c1, rt0.c2 FROM v0, rt0, vt0 GROUP BY vt0.c0, rt0.c1, rt0.c2;
SELECT ALL vt0.c0, rt0.c1, rt0.c2 FROM v0, rt0, vt0 GROUP BY vt0.c0, rt0.c1, rt0.c2 HAVING CASE COUNT(vt0.c0)  WHEN COUNT(rt0.c0) THEN COUNT(vt0.c0) ELSE AVG(TOTAL(SUM(vt0.c0))) END UNION ALL SELECT vt0.c0, rt0.c1, rt0.c2 FROM v0, rt0, vt0 GROUP BY vt0.c0, rt0.c1, rt0.c2 HAVING (NOT (CASE COUNT(vt0.c0)  WHEN COUNT(rt0.c0) THEN COUNT(vt0.c0) ELSE AVG(TOTAL(SUM(vt0.c0))) END)) UNION ALL SELECT vt0.c0, rt0.c1, rt0.c2 FROM v0, rt0, vt0 GROUP BY vt0.c0, rt0.c1, rt0.c2 HAVING ((CASE COUNT(vt0.c0)  WHEN COUNT(rt0.c0) THEN COUNT(vt0.c0) ELSE AVG(TOTAL(SUM(vt0.c0))) END) ISNULL);
SELECT * FROM vt0, v0, rt0;
SELECT * FROM vt0, v0, rt0 WHERE ((((rt0.c0))<((rt0.c1))) COLLATE BINARY) UNION ALL SELECT ALL * FROM vt0, v0, rt0 WHERE ((NOT ((((rt0.c0))<((rt0.c1))) COLLATE BINARY))) UNION ALL SELECT * FROM vt0, v0, rt0 WHERE ((((((rt0.c0))<((rt0.c1))) COLLATE BINARY) ISNULL));
SELECT * FROM vt0, v0, rt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (((((vt0.c0) IS TRUE))<=(CAST(rt0.c1 AS INTEGER)))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (((((vt0.c0) IS TRUE))<=(CAST(rt0.c1 AS INTEGER)))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((((((vt0.c0) IS TRUE))<=(CAST(rt0.c1 AS INTEGER)))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 WHERE (((0.848674038903156)/(((vt0.c0)!=(vt0.c0))))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 WHERE ((NOT (((0.848674038903156)/(((vt0.c0)<>(vt0.c0))))))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 WHERE (((((0.848674038903156)/(((vt0.c0)<>(vt0.c0))))) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING SUM(((GROUP_CONCAT(SUM(COUNT(*))))LIKE(rt0.c1))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (SUM(((GROUP_CONCAT(SUM(COUNT(*))))LIKE(rt0.c1))))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((SUM(((GROUP_CONCAT(SUM(COUNT(*))))LIKE(rt0.c1)))) ISNULL);
SELECT rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0;
SELECT ALL rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0 WHERE ((((vt0.c0 IN ())) BETWEEN (((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c2))) AND (CASE rt0.c0  WHEN rt0.c2 THEN '1744744150' END))) UNION ALL SELECT ALL rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0 WHERE ((NOT ((((vt0.c0 IN ())) BETWEEN (((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c2))) AND (CASE rt0.c0  WHEN rt0.c2 THEN '1744744150' END))))) UNION ALL SELECT rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0 WHERE ((((((vt0.c0 IN ())) BETWEEN (((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c2))) AND (CASE rt0.c0  WHEN rt0.c2 THEN '1744744150' END))) ISNULL));
SELECT rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0;
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE (LIKELIHOOD(DISTINCT (((v0.c0, '-1605401910', v0.c0)) NOT BETWEEN ((v0.c0, vt0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))), 0.3522775526238203)) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT (LIKELIHOOD(DISTINCT (((v0.c0, '-1605401910', v0.c0)) NOT BETWEEN ((v0.c0, vt0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))), 0.3522775526238203)))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE (((LIKELIHOOD(DISTINCT (((v0.c0, '-1605401910', v0.c0)) NOT BETWEEN ((v0.c0, vt0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))), 0.3522775526238203)) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((v0.c0) NOTNULL) COLLATE NOCASE COLLATE RTRIM) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((v0.c0) NOTNULL) COLLATE NOCASE COLLATE RTRIM))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((v0.c0) NOTNULL) COLLATE NOCASE COLLATE RTRIM) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c2, rt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON ((((((((((((UPPER(DISTINCT x'024720e7'))AND(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)))))OR(rt0.c0)))AND(((rt0.c1) NOT NULL))))AND(CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 END)))OR(0.6783513615694401)) GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON ((((((((((((UPPER(DISTINCT x'024720e7'))AND(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)))))OR(rt0.c0)))AND(((rt0.c1) NOT NULL))))AND(CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 END)))OR(0.6783513615694401)) GROUP BY rt0.c2, rt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON ((((((((((((UPPER(DISTINCT x'024720e7'))AND(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)))))OR(rt0.c0)))AND(((rt0.c1) NOT NULL))))AND(CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 END)))OR(0.6783513615694401)) GROUP BY rt0.c2, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON ((((((((((((UPPER(DISTINCT x'024720e7'))AND(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)))))OR(rt0.c0)))AND(((rt0.c1) NOT NULL))))AND(CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 END)))OR(0.6783513615694401)) GROUP BY rt0.c2, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c2, rt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON ((((((((((((UPPER(DISTINCT x'024720e7'))AND(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)))))OR(rt0.c0)))AND(((rt0.c1) NOT NULL))))AND(CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 END)))OR(0.6783513615694401)) GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON ((((((((((((UPPER(DISTINCT x'024720e7'))AND(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)))))OR(rt0.c0)))AND(((rt0.c1) NOT NULL))))AND(CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 END)))OR(0.6783513615694401)) GROUP BY rt0.c2, rt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON ((((((((((((UPPER(DISTINCT x'024720e7'))AND(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)))))OR(rt0.c0)))AND(((rt0.c1) NOT NULL))))AND(CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 END)))OR(0.6783513615694401)) GROUP BY rt0.c2, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON ((((((((((((UPPER(DISTINCT x'024720e7'))AND(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)))))OR(rt0.c0)))AND(((rt0.c1) NOT NULL))))AND(CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 END)))OR(0.6783513615694401)) GROUP BY rt0.c2, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c2, rt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON ((((((((((((UPPER(DISTINCT x'024720e7'))AND(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)))))OR(rt0.c0)))AND(((rt0.c1) NOT NULL))))AND(CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 END)))OR(0.6783513615694401)) GROUP BY rt0.c2, rt0.c1;
SELECT ALL * FROM v0, rt0;
SELECT ALL * FROM v0, rt0 WHERE ('150529497') UNION ALL SELECT * FROM v0, rt0 NOT INDEXED WHERE ((NOT ('150529497'))) UNION ALL SELECT * FROM v0, rt0 WHERE ((('150529497') ISNULL));
SELECT ALL * FROM v0, rt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((vt0.c0 COLLATE RTRIM)OR(CAST(vt0.c0 AS REAL))))AND(((vt0.c0)AND(vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0 COLLATE RTRIM)OR(CAST(vt0.c0 AS REAL))))AND(((vt0.c0)AND(vt0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((vt0.c0 COLLATE RTRIM)OR(CAST(vt0.c0 AS REAL))))AND(((vt0.c0)AND(vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((((rt0.c0)IS(rt0.c0)), ((((rt0.c2)AND(rt0.c0)))OR(rt0.c0)), ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))))=((((((((((rt0.c0)OR(rt0.c1)))AND('')))OR(rt0.c1)))AND(rt0.c1)), (((rt0.c1))<>((rt0.c2))), ((rt0.c0) NOTNULL))))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((((((rt0.c0)IS(rt0.c0)), ((((rt0.c2)AND(rt0.c0)))OR(rt0.c0)), ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))))=((((((((((rt0.c0)OR(rt0.c1)))AND('')))OR(rt0.c1)))AND(rt0.c1)), (((rt0.c1))<>((rt0.c2))), ((rt0.c0) NOTNULL))))))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((((((rt0.c0)IS(rt0.c0)), ((((rt0.c2)AND(rt0.c0)))OR(rt0.c0)), ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))))=((((((((((rt0.c0)OR(rt0.c1)))AND('')))OR(rt0.c1)))AND(rt0.c1)), (((rt0.c1))!=((rt0.c2))), ((rt0.c0) NOTNULL))))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT v0.c0, rt0.c1, vt0.c0, rt0.c2 FROM v0 LEFT OUTER JOIN vt0 ON ((+ (v0.c0)) IN ()) RIGHT OUTER JOIN rt0 ON ((CASE WHEN rt0.c2 THEN rt0.c1 WHEN v0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN v0.c0 WHEN rt0.c2 THEN rt0.c1 END) NOT NULL) GROUP BY v0.c0, rt0.c1, vt0.c0, rt0.c2;
SELECT ALL v0.c0, rt0.c1, vt0.c0, rt0.c2 FROM v0 LEFT OUTER JOIN vt0 ON ((+ (v0.c0)) IN ()) RIGHT OUTER JOIN rt0 ON ((CASE WHEN rt0.c2 THEN rt0.c1 WHEN v0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN v0.c0 WHEN rt0.c2 THEN rt0.c1 END) NOT NULL) GROUP BY v0.c0, rt0.c1, vt0.c0, rt0.c2 HAVING GROUP_CONCAT(TOTAL(AVG(vt0.c0))) COLLATE RTRIM UNION ALL SELECT v0.c0, rt0.c1, vt0.c0, rt0.c2 FROM v0 LEFT OUTER JOIN vt0 ON ((+ (v0.c0)) IN ()) RIGHT OUTER JOIN rt0 ON ((CASE WHEN rt0.c2 THEN rt0.c1 WHEN v0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN v0.c0 WHEN rt0.c2 THEN rt0.c1 END) NOT NULL) GROUP BY v0.c0, rt0.c1, vt0.c0, rt0.c2 HAVING (NOT (GROUP_CONCAT(TOTAL(AVG(vt0.c0))) COLLATE RTRIM)) UNION ALL SELECT v0.c0, rt0.c1, vt0.c0, rt0.c2 FROM v0 LEFT OUTER JOIN vt0 ON ((+ (v0.c0)) IN ()) RIGHT OUTER JOIN rt0 ON ((CASE WHEN rt0.c2 THEN rt0.c1 WHEN v0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN v0.c0 WHEN rt0.c2 THEN rt0.c1 END) NOT NULL) GROUP BY v0.c0, rt0.c1, vt0.c0, rt0.c2 HAVING ((GROUP_CONCAT(TOTAL(AVG(vt0.c0))) COLLATE RTRIM) ISNULL);
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (v0.c0) UNION ALL SELECT * FROM v0 WHERE ((NOT (v0.c0))) UNION ALL SELECT ALL * FROM v0 WHERE (((v0.c0) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((((((vt0.c0))==((vt0.c0))))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))AND(((vt0.c0) IS TRUE)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((((((vt0.c0))==((vt0.c0))))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))AND(((vt0.c0) IS TRUE)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((((((vt0.c0))==((vt0.c0))))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))AND(((vt0.c0) IS TRUE)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((IFNULL(v0.c0, v0.c0) IN ())) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((IFNULL(v0.c0, v0.c0) IN ())))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((IFNULL(v0.c0, v0.c0) IN ())) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG(((vt0.c0) NOT NULL)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (AVG(((vt0.c0) NOT NULL)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG(((vt0.c0) NOT NULL))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG(((vt0.c0) NOT NULL)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (AVG(((vt0.c0) NOT NULL)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG(((vt0.c0) NOT NULL))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM vt0, rt0, v0;
SELECT * FROM vt0, rt0, v0 WHERE (((((v0.c0) NOTNULL)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0))) AND ((vt0.c0 IN ())))) UNION ALL SELECT ALL * FROM vt0, rt0, v0 WHERE ((NOT (((((v0.c0) NOTNULL)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0))) AND ((vt0.c0 IN ())))))) UNION ALL SELECT ALL * FROM vt0, rt0, v0 WHERE (((((((v0.c0) NOTNULL)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0))) AND ((vt0.c0 IN ())))) ISNULL));
SELECT * FROM vt0, rt0, v0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((((((((rt0.c0) ISNULL))OR(NULLIF(DISTINCT rt0.c1, rt0.c1))))AND(((rt0.c1)*(rt0.c2)))))OR(rt0.c2 COLLATE NOCASE)))AND(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((((((((rt0.c0) ISNULL))OR(NULLIF(DISTINCT rt0.c1, rt0.c1))))AND(((rt0.c1)*(rt0.c2)))))OR(rt0.c2 COLLATE NOCASE)))AND(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((((((((rt0.c0) ISNULL))OR(NULLIF(DISTINCT rt0.c1, rt0.c1))))AND(((rt0.c1)*(rt0.c2)))))OR(rt0.c2 COLLATE NOCASE)))AND(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ('-1122152531') GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ('-1122152531'))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((('-1122152531') ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING LIKE(CAST(rt0.c2 AS NUMERIC), (- (rt0.c2))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (LIKE(CAST(rt0.c2 AS NUMERIC), (- (rt0.c2))))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((LIKE(CAST(rt0.c2 AS NUMERIC), (- (rt0.c2)))) ISNULL);
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING LIKE(CAST(rt0.c2 AS NUMERIC), (- (rt0.c2))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (LIKE(CAST(rt0.c2 AS NUMERIC), (- (rt0.c2))))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((LIKE(CAST(rt0.c2 AS NUMERIC), (- (rt0.c2)))) ISNULL);
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (vt0.c0) UNION ALL SELECT * FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT v0.c0, rt0.c1 FROM v0 INNER JOIN rt0 ON (((TRIM(rt0.c1, rt0.c1), ((rt0.c2)<<(rt0.c1)), GLOB(v0.c0, rt0.c1)))>(((((x''))>((rt0.c0))), (((('')AND(rt0.c0)))AND(v0.c0)), (+ (v0.c0)))));
SELECT DISTINCT v0.c0, rt0.c1 FROM v0 INNER JOIN rt0 ON (((TRIM(rt0.c1, rt0.c1), ((rt0.c2)<<(rt0.c1)), GLOB(v0.c0, rt0.c1)))>(((((x''))>((rt0.c0))), (((('')AND(rt0.c0)))AND(v0.c0)), (+ (v0.c0))))) WHERE ((((DATETIME(rt0.c2, rt0.c2, rt0.c1, rt0.c0, rt0.c0)))!=(('-1422061212')))) UNION SELECT DISTINCT v0.c0, rt0.c1 FROM v0 INNER JOIN rt0 ON (((TRIM(rt0.c1, rt0.c1), ((rt0.c2)<<(rt0.c1)), GLOB(v0.c0, rt0.c1)))>(((((x''))>((rt0.c0))), (((('')AND(rt0.c0)))AND(v0.c0)), (+ (v0.c0))))) WHERE ((NOT ((((DATETIME(rt0.c2, rt0.c2, rt0.c1, rt0.c0, rt0.c0)))<>(('-1422061212')))))) UNION SELECT DISTINCT v0.c0, rt0.c1 FROM v0 INNER JOIN rt0 ON (((TRIM(rt0.c1, rt0.c1), ((rt0.c2)<<(rt0.c1)), GLOB(v0.c0, rt0.c1)))>(((((x''))>((rt0.c0))), (((('')AND(rt0.c0)))AND(v0.c0)), (+ (v0.c0))))) WHERE ((((((DATETIME(rt0.c2, rt0.c2, rt0.c1, rt0.c0, rt0.c0)))<>(('-1422061212')))) ISNULL));
SELECT DISTINCT v0.c0, rt0.c1 FROM v0 INNER JOIN rt0 ON (((TRIM(rt0.c1, rt0.c1), ((rt0.c2)<<(rt0.c1)), GLOB(v0.c0, rt0.c1)))>(((((x''))>((rt0.c0))), (((('')AND(rt0.c0)))AND(v0.c0)), (+ (v0.c0)))));
SELECT rt0.c1 FROM rt0, vt0 INNER JOIN v0 ON ((rt0.c1 COLLATE NOCASE)GLOB((((vt0.c0))<=((rt0.c1))))) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0, vt0 INNER JOIN v0 ON ((rt0.c1 COLLATE NOCASE)GLOB((((vt0.c0))<=((rt0.c1))))) WHERE (SQLITE_COMPILEOPTION_USED((((0X5bf43aee, v0.c0, vt0.c0))=((rt0.c0, vt0.c0, rt0.c1))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0, vt0 INNER JOIN v0 ON ((rt0.c1 COLLATE NOCASE)GLOB((((vt0.c0))<=((rt0.c1))))) WHERE ((NOT (SQLITE_COMPILEOPTION_USED((((0x5bf43aee, v0.c0, vt0.c0))=((rt0.c0, vt0.c0, rt0.c1))))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0, vt0 INNER JOIN v0 ON ((rt0.c1 COLLATE NOCASE)GLOB((((vt0.c0))<=((rt0.c1))))) WHERE (((SQLITE_COMPILEOPTION_USED((((0X5bf43aee, v0.c0, vt0.c0))=((rt0.c0, vt0.c0, rt0.c1))))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0, vt0 INNER JOIN v0 ON ((rt0.c1 COLLATE NOCASE)GLOB((((vt0.c0))<=((rt0.c1))))) GROUP BY rt0.c1;
SELECT v0.c0 FROM vt0, rt0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, rt0, v0 GROUP BY v0.c0 HAVING MIN(SUM(rt0.c0)) UNION ALL SELECT ALL v0.c0 FROM vt0, rt0 NOT INDEXED, v0 GROUP BY v0.c0 HAVING (NOT (MIN(SUM(rt0.c0)))) UNION ALL SELECT v0.c0 FROM vt0, rt0, v0 GROUP BY v0.c0 HAVING ((MIN(SUM(rt0.c0))) ISNULL);
SELECT ALL * FROM vt0, v0, rt0;
SELECT ALL * FROM vt0, v0, rt0 WHERE (x'') UNION ALL SELECT * FROM vt0, v0 NOT INDEXED, rt0 WHERE ((NOT (x''))) UNION ALL SELECT * FROM vt0, v0, rt0 WHERE (((x'') ISNULL));
SELECT ALL * FROM vt0, v0, rt0;
SELECT DISTINCT rt0.c0, vt0.c0, rt0.c1, v0.c0, rt0.c2 FROM rt0, vt0, v0;
SELECT DISTINCT rt0.c0, vt0.c0, rt0.c1, v0.c0, rt0.c2 FROM rt0, vt0, v0 WHERE (CAST((((vt0.c0, vt0.c0, v0.c0)) NOT BETWEEN ((v0.c0, 0.08090066721805234, rt0.c2)) AND ((rt0.c0, rt0.c0, x'a36f'))) AS BLOB)) UNION SELECT DISTINCT rt0.c0, vt0.c0, rt0.c1, v0.c0, rt0.c2 FROM rt0, vt0, v0 WHERE ((NOT (CAST((((vt0.c0, vt0.c0, v0.c0)) NOT BETWEEN ((v0.c0, 0.08090066721805234, rt0.c2)) AND ((rt0.c0, rt0.c0, x'a36f'))) AS BLOB)))) UNION SELECT DISTINCT rt0.c0, vt0.c0, rt0.c1, v0.c0, rt0.c2 FROM rt0, vt0, v0 WHERE (((CAST((((vt0.c0, vt0.c0, v0.c0)) NOT BETWEEN ((v0.c0, 0.08090066721805234, rt0.c2)) AND ((rt0.c0, rt0.c0, x'a36f'))) AS BLOB)) ISNULL));
SELECT DISTINCT rt0.c0, vt0.c0, rt0.c1, v0.c0, rt0.c2 FROM rt0, vt0, v0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (CASE ((((vt0.c0)OR(vt0.c0)))AND(0.7855868829975615))  WHEN vt0.c0 COLLATE RTRIM THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CASE ((((vt0.c0)OR(vt0.c0)))AND(0.7855868829975615))  WHEN vt0.c0 COLLATE RTRIM THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((CASE ((((vt0.c0)OR(vt0.c0)))AND(0.7855868829975615))  WHEN vt0.c0 COLLATE RTRIM THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (- (rt0.c1 COLLATE RTRIM)) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT ((- (rt0.c1 COLLATE RTRIM)))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (((- (rt0.c1 COLLATE RTRIM))) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (- (rt0.c1 COLLATE RTRIM)) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT ((- (rt0.c1 COLLATE RTRIM)))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (((- (rt0.c1 COLLATE RTRIM))) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL * FROM v0 CROSS JOIN vt0 ON ((rt0.c1 COLLATE BINARY) IS FALSE) LEFT OUTER JOIN rt0 ON ((((rt0.c0 COLLATE RTRIM)OR((((rt0.c0, rt0.c0, x'')) BETWEEN ((rt0.c0, NULL, rt0.c2)) AND ((vt0.c0, rt0.c1, x''))))))AND(vt0.c0 COLLATE BINARY));
SELECT ALL * FROM v0 CROSS JOIN vt0 ON ((rt0.c1 COLLATE BINARY) IS FALSE) LEFT OUTER JOIN rt0 ON ((((rt0.c0 COLLATE RTRIM)OR((((rt0.c0, rt0.c0, x'')) BETWEEN ((rt0.c0, NULL, rt0.c2)) AND ((vt0.c0, rt0.c1, x''))))))AND(vt0.c0 COLLATE BINARY)) WHERE ('1741139009') UNION ALL SELECT ALL * FROM v0 CROSS JOIN vt0 ON ((rt0.c1 COLLATE BINARY) IS FALSE) LEFT OUTER JOIN rt0 ON ((((rt0.c0 COLLATE RTRIM)OR((((rt0.c0, rt0.c0, x'')) BETWEEN ((rt0.c0, NULL, rt0.c2)) AND ((vt0.c0, rt0.c1, x''))))))AND(vt0.c0 COLLATE BINARY)) WHERE ((NOT ('1741139009'))) UNION ALL SELECT ALL * FROM v0 CROSS JOIN vt0 ON ((rt0.c1 COLLATE BINARY) IS FALSE) LEFT OUTER JOIN rt0 ON ((((rt0.c0 COLLATE RTRIM)OR((((rt0.c0, rt0.c0, x'')) BETWEEN ((rt0.c0, NULL, rt0.c2)) AND ((vt0.c0, rt0.c1, x''))))))AND(vt0.c0 COLLATE BINARY)) WHERE ((('1741139009') ISNULL));
SELECT ALL * FROM v0 CROSS JOIN vt0 ON ((rt0.c1 COLLATE BINARY) IS FALSE) LEFT OUTER JOIN rt0 ON ((((rt0.c0 COLLATE RTRIM)OR((((rt0.c0, rt0.c0, x'')) BETWEEN ((rt0.c0, NULL, rt0.c2)) AND ((vt0.c0, rt0.c1, x''))))))AND(vt0.c0 COLLATE BINARY));
SELECT DISTINCT * FROM rt0, vt0, v0;
SELECT DISTINCT * FROM rt0, vt0, v0 WHERE (CAST(CASE -62470871  WHEN vt0.c0 THEN rt0.c1 END AS TEXT)) UNION SELECT DISTINCT * FROM rt0, vt0 NOT INDEXED, v0 WHERE ((NOT (CAST(CASE -62470871  WHEN vt0.c0 THEN rt0.c1 END AS TEXT)))) UNION SELECT DISTINCT * FROM rt0, vt0, v0 WHERE (((CAST(CASE -62470871  WHEN vt0.c0 THEN rt0.c1 END AS TEXT)) ISNULL));
SELECT DISTINCT * FROM rt0, vt0, v0;
SELECT rt0.c2, rt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON rt0.c2 RIGHT OUTER JOIN rt0 ON (((rt0.c0 IN (rt0.c2))) BETWEEN (NULL) AND ((- (v0.c0)))) GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING COUNT(*) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING COUNT(*) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL * FROM v0, rt0;
SELECT ALL * FROM v0, rt0 WHERE ((((- (rt0.c0))) IS TRUE)) UNION ALL SELECT * FROM v0, rt0 WHERE ((NOT ((((- (rt0.c0))) IS TRUE)))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((((((- (rt0.c0))) IS TRUE)) ISNULL));
SELECT ALL * FROM v0, rt0;
SELECT DISTINCT vt0.c0 FROM vt0, v0;
SELECT DISTINCT vt0.c0 FROM vt0, v0 WHERE (((v0.c0 COLLATE BINARY) BETWEEN ((~ (vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 END))) UNION SELECT DISTINCT vt0.c0 FROM vt0, v0 WHERE ((NOT (((v0.c0 COLLATE BINARY) BETWEEN ((~ (vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 END))))) UNION SELECT DISTINCT vt0.c0 FROM vt0, v0 WHERE (((((v0.c0 COLLATE BINARY) BETWEEN ((~ (vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 END))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0, v0;
SELECT ALL rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM v0, rt0 WHERE ((DATE(rt0.c2, rt0.c2, rt0.c1) IN ())) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM v0, rt0 WHERE ((NOT ((DATE(rt0.c2, rt0.c2, rt0.c1) IN ())))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM v0, rt0 WHERE ((((DATE(rt0.c2, rt0.c2, rt0.c1) IN ())) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL v0.c0 FROM v0, rt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, rt0 GROUP BY v0.c0 HAVING ((((((((((rt0.c0)OR(rt0.c1)))OR(NULL)))AND(COUNT(AVG(rt0.c0)))))OR(MIN(TOTAL(GROUP_CONCAT(COUNT(v0.c0)))))))-((rt0.c0 IN ()))) UNION ALL SELECT ALL v0.c0 FROM v0, rt0 GROUP BY v0.c0 HAVING (NOT (((((((((((rt0.c0)OR(rt0.c1)))OR(NULL)))AND(COUNT(AVG(rt0.c0)))))OR(MIN(TOTAL(GROUP_CONCAT(COUNT(v0.c0)))))))-((rt0.c0 IN ()))))) UNION ALL SELECT v0.c0 FROM v0, rt0 GROUP BY v0.c0 HAVING ((((((((((((rt0.c0)OR(rt0.c1)))OR(NULL)))AND(COUNT(AVG(rt0.c0)))))OR(MIN(TOTAL(GROUP_CONCAT(COUNT(v0.c0)))))))-((rt0.c0 IN ())))) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt0 WHERE (vt0.c0) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt0 WHERE (((vt0.c0) ISNULL));
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (((((rt0.c0)|(x'')))+(CASE WHEN vt0.c0 THEN rt0.c1 ELSE vt0.c0 END))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (((((rt0.c0)|(x'')))+(CASE WHEN vt0.c0 THEN rt0.c1 ELSE vt0.c0 END))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((((((rt0.c0)|(x'')))+(CASE WHEN vt0.c0 THEN rt0.c1 ELSE vt0.c0 END))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT rt0.c0, vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c1;
SELECT rt0.c0, vt0.c0, rt0.c1 FROM rt0, vt0 WHERE ((+ ((NOT (rt0.c1))))) GROUP BY rt0.c0, vt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, vt0.c0, rt0.c1 FROM rt0, vt0 WHERE ((NOT ((+ ((NOT (rt0.c1))))))) GROUP BY rt0.c0, vt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, vt0.c0, rt0.c1 FROM rt0, vt0 WHERE ((((+ ((NOT (rt0.c1))))) ISNULL)) GROUP BY rt0.c0, vt0.c0, rt0.c1;
SELECT rt0.c0, vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM v0, rt0, vt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM v0, rt0, vt0 GROUP BY rt0.c0, rt0.c1 HAVING (((rt0.c1)) NOT BETWEEN ((AVG(v0.c0))) AND ((CASE WHEN rt0.c2 THEN rt0.c2 END))) UNION ALL SELECT rt0.c0, rt0.c1 FROM v0, rt0, vt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT ((((rt0.c1)) NOT BETWEEN ((AVG(v0.c0))) AND ((CASE WHEN rt0.c2 THEN rt0.c2 END))))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM v0, rt0, vt0 GROUP BY rt0.c0, rt0.c1 HAVING (((((rt0.c1)) NOT BETWEEN ((AVG(v0.c0))) AND ((CASE WHEN rt0.c2 THEN rt0.c2 END)))) ISNULL);
SELECT rt0.c0, rt0.c1 FROM v0, rt0, vt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM v0, rt0, vt0 GROUP BY rt0.c0, rt0.c1 HAVING (((rt0.c1)) NOT BETWEEN ((AVG(v0.c0))) AND ((CASE WHEN rt0.c2 THEN rt0.c2 END))) UNION ALL SELECT rt0.c0, rt0.c1 FROM v0, rt0, vt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT ((((rt0.c1)) NOT BETWEEN ((AVG(v0.c0))) AND ((CASE WHEN rt0.c2 THEN rt0.c2 END))))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM v0, rt0, vt0 GROUP BY rt0.c0, rt0.c1 HAVING (((((rt0.c1)) NOT BETWEEN ((AVG(v0.c0))) AND ((CASE WHEN rt0.c2 THEN rt0.c2 END)))) ISNULL);
SELECT rt0.c0, rt0.c1 FROM v0, rt0, vt0 GROUP BY rt0.c0, rt0.c1;
SELECT TOTAL(CASE WHEN ((((((((rt0.c2)OR(x'')))OR(vt0.c0)))OR(rt0.c0)))OR(vt0.c0)) THEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) WHEN (rt0.c1 IN (rt0.c2)) THEN ((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)) WHEN IFNULL(vt0.c0, 0Xfffffffff2f5b748) THEN x'f16e' END) FROM rt0, vt0 ORDER BY CASE WHEN ((rt0.c0)LIKE(rt0.c1)) THEN rt0.c2 ELSE (((rt0.c0))!=((vt0.c0))) END ASC  NULLS LAST;
SELECT ALL * FROM vt0, v0, rt0;
SELECT ALL * FROM vt0, v0, rt0 WHERE ((vt0.c0 COLLATE NOCASE IN ())) UNION ALL SELECT ALL * FROM vt0, v0, rt0 WHERE ((NOT ((vt0.c0 COLLATE NOCASE IN ())))) UNION ALL SELECT ALL * FROM vt0, v0, rt0 NOT INDEXED WHERE ((((vt0.c0 COLLATE NOCASE IN ())) ISNULL));
SELECT ALL * FROM vt0, v0, rt0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE (COALESCE(DISTINCT (((0.5499525644277965, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND ((rt0.c2, rt0.c0, rt0.c1))), ((rt0.c2) NOTNULL))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT (COALESCE(DISTINCT (((0.5499525644277965, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND ((rt0.c2, rt0.c0, rt0.c1))), ((rt0.c2) NOTNULL))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((COALESCE(DISTINCT (((0.5499525644277965, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND ((rt0.c2, rt0.c0, rt0.c1))), ((rt0.c2) NOTNULL))) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT ALL vt0.c0, rt0.c1, rt0.c2, rt0.c0, v0.c0 FROM v0, vt0, rt0 GROUP BY vt0.c0, rt0.c1, rt0.c2, rt0.c0, v0.c0;
SELECT ALL vt0.c0, rt0.c1, rt0.c2, rt0.c0, v0.c0 FROM v0, vt0, rt0 WHERE (CAST(v0.c0 AS NUMERIC)) GROUP BY vt0.c0, rt0.c1, rt0.c2, rt0.c0, v0.c0 UNION SELECT vt0.c0, rt0.c1, rt0.c2, rt0.c0, v0.c0 FROM v0, vt0, rt0 WHERE ((NOT (CAST(v0.c0 AS NUMERIC)))) GROUP BY vt0.c0, rt0.c1, rt0.c2, rt0.c0, v0.c0 UNION SELECT vt0.c0, rt0.c1, rt0.c2, rt0.c0, v0.c0 FROM v0, vt0, rt0 WHERE (((CAST(v0.c0 AS NUMERIC)) ISNULL)) GROUP BY vt0.c0, rt0.c1, rt0.c2, rt0.c0, v0.c0;
SELECT ALL vt0.c0, rt0.c1, rt0.c2, rt0.c0, v0.c0 FROM v0, vt0, rt0 GROUP BY vt0.c0, rt0.c1, rt0.c2, rt0.c0, v0.c0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING SUM(TOTAL(GROUP_CONCAT(rt0.c0))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (SUM(TOTAL(GROUP_CONCAT(rt0.c0))))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((SUM(TOTAL(GROUP_CONCAT(rt0.c0)))) ISNULL);
SELECT ALL * FROM rt0, v0, vt0;
SELECT * FROM rt0, v0, vt0 WHERE (json_array_length((((rt0.c0, rt0.c2, rt0.c1, v0.c0, vt0.c0)) NOT BETWEEN ((v0.c0, rt0.c2, vt0.c0, v0.c0, rt0.c1)) AND ((rt0.c0, rt0.c0, rt0.c1, rt0.c1, rt0.c0))))) UNION ALL SELECT * FROM rt0, v0, vt0 WHERE ((NOT (json_array_length((((rt0.c0, rt0.c2, rt0.c1, v0.c0, vt0.c0)) NOT BETWEEN ((v0.c0, rt0.c2, vt0.c0, v0.c0, rt0.c1)) AND ((rt0.c0, rt0.c0, rt0.c1, rt0.c1, rt0.c0))))))) UNION ALL SELECT ALL * FROM rt0, v0, vt0 WHERE (((json_array_length((((rt0.c0, rt0.c2, rt0.c1, v0.c0, vt0.c0)) NOT BETWEEN ((v0.c0, rt0.c2, vt0.c0, v0.c0, rt0.c1)) AND ((rt0.c0, rt0.c0, rt0.c1, rt0.c1, rt0.c0))))) ISNULL));
SELECT ALL * FROM rt0, v0, vt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((~ (((v0.c0) NOTNULL)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((~ (((v0.c0) NOTNULL)))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((~ (((v0.c0) NOTNULL)))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT rt0.c2, vt0.c0 FROM vt0, rt0, v0 NOT INDEXED GROUP BY rt0.c2, vt0.c0;
SELECT ALL rt0.c2, vt0.c0 FROM vt0, rt0, v0 WHERE (NULL) GROUP BY rt0.c2, vt0.c0 UNION SELECT ALL rt0.c2, vt0.c0 FROM vt0, rt0, v0 WHERE ((NOT (NULL))) GROUP BY rt0.c2, vt0.c0 UNION SELECT ALL rt0.c2, vt0.c0 FROM vt0, rt0, v0 WHERE (((NULL) ISNULL)) GROUP BY rt0.c2, vt0.c0;
SELECT rt0.c2, vt0.c0 FROM vt0, rt0, v0 NOT INDEXED GROUP BY rt0.c2, vt0.c0;
SELECT ALL rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM rt0, v0, vt0 GROUP BY rt0.c2, rt0.c0, vt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM rt0, v0, vt0 GROUP BY rt0.c2, rt0.c0, vt0.c0, rt0.c1 HAVING ((SUM(rt0.c0)) IS FALSE) UNION ALL SELECT rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM rt0, v0, vt0 GROUP BY rt0.c2, rt0.c0, vt0.c0, rt0.c1 HAVING (NOT (((SUM(rt0.c0)) IS FALSE))) UNION ALL SELECT rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM rt0, v0, vt0 GROUP BY rt0.c2, rt0.c0, vt0.c0, rt0.c1 HAVING ((((SUM(rt0.c0)) IS FALSE)) ISNULL);
SELECT ALL rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM rt0, v0, vt0 GROUP BY rt0.c2, rt0.c0, vt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM rt0, v0, vt0 GROUP BY rt0.c2, rt0.c0, vt0.c0, rt0.c1 HAVING ((SUM(rt0.c0)) IS FALSE) UNION ALL SELECT rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM rt0, v0, vt0 GROUP BY rt0.c2, rt0.c0, vt0.c0, rt0.c1 HAVING (NOT (((SUM(rt0.c0)) IS FALSE))) UNION ALL SELECT rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM rt0, v0, vt0 GROUP BY rt0.c2, rt0.c0, vt0.c0, rt0.c1 HAVING ((((SUM(rt0.c0)) IS FALSE)) ISNULL);
SELECT ALL rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM rt0, v0, vt0 GROUP BY rt0.c2, rt0.c0, vt0.c0, rt0.c1;
SELECT SUM(((((rt0.c1)LIKE(rt0.c1))) ISNULL)) FROM rt0;
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE (1.908217195E9) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (1.908217195E9))) UNION ALL SELECT ALL * FROM v0 WHERE (((1.908217195E9) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN v0 ON CAST((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((vt0.c0))) AS INTEGER) RIGHT OUTER JOIN vt0 ON ((((rt0.c2) NOTNULL))OR(((rt0.c1)!=(rt0.c2))));
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((~ (vt0.c0 COLLATE RTRIM))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((~ (vt0.c0 COLLATE RTRIM))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((~ (vt0.c0 COLLATE RTRIM))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c2, rt0.c1 HAVING (+ (COUNT(rt0.c1))) UNION ALL SELECT rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c2, rt0.c1 HAVING (NOT ((+ (COUNT(rt0.c1))))) UNION ALL SELECT ALL rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c2, rt0.c1 HAVING (((+ (COUNT(rt0.c1)))) ISNULL);
SELECT rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c2, rt0.c1 HAVING (+ (COUNT(rt0.c1))) UNION ALL SELECT rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c2, rt0.c1 HAVING (NOT ((+ (COUNT(rt0.c1))))) UNION ALL SELECT ALL rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c2, rt0.c1 HAVING (((+ (COUNT(rt0.c1)))) ISNULL);
SELECT rt0.c0, vt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c2, rt0.c1;
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE (load_extension(v0.c0 COLLATE RTRIM)) UNION ALL SELECT * FROM v0 WHERE ((NOT (load_extension(v0.c0 COLLATE RTRIM)))) UNION ALL SELECT ALL * FROM v0 WHERE (((load_extension(v0.c0 COLLATE RTRIM)) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((+ (CAST(v0.c0 AS REAL)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((+ (CAST(v0.c0 AS REAL)))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((+ (CAST(v0.c0 AS REAL)))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((((rt0.c1)<=(rt0.c2))))<(((('r+(Q%?nFF')-(rt0.c1)))))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((((((rt0.c1)<=(rt0.c2))))<(((('r+(Q%?nFF')-(rt0.c1)))))))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((((((rt0.c1)<=(rt0.c2))))<(((('r+(Q%?nFF')-(rt0.c1)))))) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1 HAVING MIN(MAX(SUM(MAX(MAX(rt0.c1))))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (MIN(MAX(SUM(MAX(MAX(rt0.c1))))))) UNION ALL SELECT rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((MIN(MAX(SUM(MAX(MAX(rt0.c1)))))) ISNULL);
SELECT * FROM vt0, v0;
SELECT * FROM vt0, v0 WHERE (((CASE NULL  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END)OR(((v0.c0)AND(vt0.c0))))) UNION ALL SELECT ALL * FROM vt0, v0 WHERE ((NOT (((CASE NULL  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END)OR(((v0.c0)AND(vt0.c0))))))) UNION ALL SELECT ALL * FROM vt0, v0 WHERE (((((CASE NULL  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END)OR(((v0.c0)AND(vt0.c0))))) ISNULL));
SELECT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN v0 ON LIKELY(DISTINCT CAST(vt0.c0 AS INTEGER)) FULL OUTER JOIN rt0 ON (json_extract(rt0.c0, vt0.c0) IN ());
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN v0 ON LIKELY(DISTINCT CAST(vt0.c0 AS INTEGER)) FULL OUTER JOIN rt0 ON (json_extract(rt0.c0, vt0.c0) IN ()) WHERE (((((((vt0.c0)AND(rt0.c0)))OR(rt0.c2)))AND(((((((((rt0.c1)AND(rt0.c0)))OR(vt0.c0)))AND(rt0.c1)))OR(rt0.c0))))) UNION SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN v0 ON LIKELY(DISTINCT CAST(vt0.c0 AS INTEGER)) FULL OUTER JOIN rt0 ON (json_extract(rt0.c0, vt0.c0) IN ()) WHERE ((NOT (((((((vt0.c0)AND(rt0.c0)))OR(rt0.c2)))AND(((((((((rt0.c1)AND(rt0.c0)))OR(vt0.c0)))AND(rt0.c1)))OR(rt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN v0 ON LIKELY(DISTINCT CAST(vt0.c0 AS INTEGER)) FULL OUTER JOIN rt0 ON (json_extract(rt0.c0, vt0.c0) IN ()) WHERE (((((((((vt0.c0)AND(rt0.c0)))OR(rt0.c2)))AND(((((((((rt0.c1)AND(rt0.c0)))OR(vt0.c0)))AND(rt0.c1)))OR(rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN v0 ON LIKELY(DISTINCT CAST(vt0.c0 AS INTEGER)) FULL OUTER JOIN rt0 ON (json_extract(rt0.c0, vt0.c0) IN ());
SELECT ALL rt0.c1, rt0.c0, vt0.c0, v0.c0 FROM v0, rt0, vt0 GROUP BY rt0.c1, rt0.c0, vt0.c0, v0.c0;
SELECT rt0.c1, rt0.c0, vt0.c0, v0.c0 FROM v0, rt0, vt0 WHERE ((x'f6d9' IN ())) GROUP BY rt0.c1, rt0.c0, vt0.c0, v0.c0 UNION SELECT rt0.c1, rt0.c0, vt0.c0, v0.c0 FROM v0, rt0, vt0 WHERE ((NOT ((x'f6d9' IN ())))) GROUP BY rt0.c1, rt0.c0, vt0.c0, v0.c0 UNION SELECT rt0.c1, rt0.c0, vt0.c0, v0.c0 FROM v0, rt0, vt0 WHERE ((((x'f6d9' IN ())) ISNULL)) GROUP BY rt0.c1, rt0.c0, vt0.c0, v0.c0;
SELECT ALL rt0.c1, rt0.c0, vt0.c0, v0.c0 FROM v0, rt0, vt0 GROUP BY rt0.c1, rt0.c0, vt0.c0, v0.c0;
SELECT ALL vt0.c0 FROM v0 CROSS JOIN vt0 ON TYPEOF(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0 CROSS JOIN vt0 ON TYPEOF(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) GROUP BY vt0.c0 HAVING TOTAL(CAST(vt0.c0 AS INTEGER)) UNION ALL SELECT ALL vt0.c0 FROM v0 CROSS JOIN vt0 ON TYPEOF(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) GROUP BY vt0.c0 HAVING (NOT (TOTAL(CAST(vt0.c0 AS INTEGER)))) UNION ALL SELECT vt0.c0 FROM v0 CROSS JOIN vt0 ON TYPEOF(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) GROUP BY vt0.c0 HAVING ((TOTAL(CAST(vt0.c0 AS INTEGER))) ISNULL);
SELECT ALL vt0.c0 FROM v0 CROSS JOIN vt0 ON TYPEOF(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0 CROSS JOIN vt0 ON TYPEOF(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) GROUP BY vt0.c0 HAVING TOTAL(CAST(vt0.c0 AS INTEGER)) UNION ALL SELECT ALL vt0.c0 FROM v0 CROSS JOIN vt0 ON TYPEOF(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) GROUP BY vt0.c0 HAVING (NOT (TOTAL(CAST(vt0.c0 AS INTEGER)))) UNION ALL SELECT vt0.c0 FROM v0 CROSS JOIN vt0 ON TYPEOF(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) GROUP BY vt0.c0 HAVING ((TOTAL(CAST(vt0.c0 AS INTEGER))) ISNULL);
SELECT ALL vt0.c0 FROM v0 CROSS JOIN vt0 ON TYPEOF(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) GROUP BY vt0.c0;
SELECT vt0.c0, v0.c0 FROM v0 LEFT OUTER JOIN vt0 ON ((vt0.c0)|(NULLIF(DISTINCT v0.c0, v0.c0)));
SELECT ALL vt0.c0, v0.c0 FROM v0 LEFT OUTER JOIN vt0 ON ((vt0.c0)|(NULLIF(DISTINCT v0.c0, v0.c0))) WHERE ((((v0.c0)<=(vt0.c0)) IN ())) UNION ALL SELECT vt0.c0, v0.c0 FROM v0 LEFT OUTER JOIN vt0 ON ((vt0.c0)|(NULLIF(DISTINCT v0.c0, v0.c0))) WHERE ((NOT ((((v0.c0)<=(vt0.c0)) IN ())))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0 LEFT OUTER JOIN vt0 ON ((vt0.c0)|(NULLIF(DISTINCT v0.c0, v0.c0))) WHERE ((((((v0.c0)<=(vt0.c0)) IN ())) ISNULL));
SELECT vt0.c0, v0.c0 FROM v0 LEFT OUTER JOIN vt0 ON ((vt0.c0)|(NULLIF(DISTINCT v0.c0, v0.c0)));
SELECT DISTINCT rt0.c1, v0.c0 FROM rt0, v0;
SELECT DISTINCT rt0.c1, v0.c0 FROM rt0, v0 WHERE (((((~ (rt0.c1))))>=((((((rt0.c0)OR(v0.c0)))OR(rt0.c0)))))) UNION SELECT DISTINCT rt0.c1, v0.c0 FROM rt0, v0 WHERE ((NOT (((((~ (rt0.c1))))>=((((((rt0.c0)OR(v0.c0)))OR(rt0.c0)))))))) UNION SELECT DISTINCT rt0.c1, v0.c0 FROM rt0, v0 WHERE (((((((~ (rt0.c1))))>=((((((rt0.c0)OR(v0.c0)))OR(rt0.c0)))))) ISNULL));
SELECT DISTINCT rt0.c1, v0.c0 FROM rt0, v0;
SELECT vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c0, rt0.c1, rt0.c2;
SELECT ALL vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 WHERE (((((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)))/(((rt0.c2) IS FALSE)))) GROUP BY vt0.c0, rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 WHERE ((NOT (((((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)))/(((rt0.c2) IS FALSE)))))) GROUP BY vt0.c0, rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 WHERE (((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)))/(((rt0.c2) IS FALSE)))) ISNULL)) GROUP BY vt0.c0, rt0.c0, rt0.c1, rt0.c2;
SELECT vt0.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c0, rt0.c1, rt0.c2;
SELECT ALL vt0.c0 FROM vt0 CROSS JOIN v0 ON ((((v0.c0) IS FALSE))<(json_patch(v0.c0, v0.c0))) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 CROSS JOIN v0 ON ((((v0.c0) IS FALSE))<(json_patch(v0.c0, v0.c0))) GROUP BY vt0.c0 HAVING MAX(AVG(COUNT(v0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 CROSS JOIN v0 ON ((((v0.c0) IS FALSE))<(json_patch(v0.c0, v0.c0))) GROUP BY vt0.c0 HAVING (NOT (MAX(AVG(COUNT(v0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 CROSS JOIN v0 ON ((((v0.c0) IS FALSE))<(json_patch(v0.c0, v0.c0))) GROUP BY vt0.c0 HAVING ((MAX(AVG(COUNT(v0.c0)))) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM rt0 CROSS JOIN v0 ON ((((((((((rt0.c2)AND(v0.c0)))AND(rt0.c0)))OR(rt0.c2)))OR(v0.c0))) BETWEEN (((rt0.c1)/(rt0.c1))) AND (((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c2)))) FULL OUTER JOIN vt0 ON CAST(((vt0.c0) BETWEEN (x'') AND (rt0.c1)) AS INTEGER);
SELECT DISTINCT rt0.c0, rt0.c1 FROM v0, rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM v0, rt0 WHERE (((LIKELIHOOD(rt0.c1, 0.6621572915049793)) NOT BETWEEN (IFNULL(DISTINCT rt0.c0, v0.c0)) AND (x''))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM v0, rt0 WHERE ((NOT (((LIKELIHOOD(rt0.c1, 0.6621572915049793)) NOT BETWEEN (IFNULL(DISTINCT rt0.c0, v0.c0)) AND (x''))))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM v0, rt0 WHERE (((((LIKELIHOOD(rt0.c1, 0.6621572915049793)) NOT BETWEEN (IFNULL(DISTINCT rt0.c0, v0.c0)) AND (x''))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1 FROM v0, rt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((((((((((v0.c0)OR(x'0391')))OR(v0.c0)))OR(v0.c0)))OR('2111608161')))<=(0.370946131215798))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((((((((v0.c0)OR(x'0391')))OR(v0.c0)))OR(v0.c0)))OR('2111608161')))<=(0.370946131215798))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 NOT INDEXED WHERE (((((((((((((v0.c0)OR(x'0391')))OR(v0.c0)))OR(v0.c0)))OR('2111608161')))<=(0.370946131215798))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(((vt0.c0)OR(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(((vt0.c0)OR(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(((vt0.c0)OR(vt0.c0)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(((vt0.c0)OR(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(((vt0.c0)OR(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(((vt0.c0)OR(vt0.c0)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE (CASE json_object(v0.c0, v0.c0)  WHEN (+ (v0.c0)) THEN ((v0.c0) NOT NULL) END) UNION ALL SELECT * FROM v0 WHERE ((NOT (CASE json_object(v0.c0, v0.c0)  WHEN (+ (v0.c0)) THEN ((v0.c0) NOT NULL) END))) UNION ALL SELECT ALL * FROM v0 WHERE (((CASE json_object(v0.c0, v0.c0)  WHEN (+ (v0.c0)) THEN ((v0.c0) NOT NULL) END) ISNULL));
SELECT DISTINCT * FROM rt0, vt0, v0;
SELECT DISTINCT * FROM rt0, vt0, v0 WHERE (((((v0.c0)GLOB(rt0.c2))) ISNULL)) UNION SELECT DISTINCT * FROM rt0, vt0, v0 WHERE ((NOT (((((v0.c0)GLOB(rt0.c2))) ISNULL)))) UNION SELECT DISTINCT * FROM rt0, vt0, v0 WHERE (((((((v0.c0)GLOB(rt0.c2))) ISNULL)) ISNULL));
SELECT DISTINCT * FROM rt0, vt0, v0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(vt0.c0 COLLATE NOCASE)))OR(vt0.c0))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(vt0.c0 COLLATE NOCASE)))OR(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(vt0.c0 COLLATE NOCASE)))OR(vt0.c0))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c2 FROM rt0 CROSS JOIN vt0 ON (((vt0.c0))>((' >'))) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 CROSS JOIN vt0 ON (((vt0.c0))>((' >'))) GROUP BY rt0.c2 HAVING ((rt0.c1) IS TRUE) UNION ALL SELECT rt0.c2 FROM rt0 CROSS JOIN vt0 ON (((vt0.c0))>((' >'))) GROUP BY rt0.c2 HAVING (NOT (((rt0.c1) IS TRUE))) UNION ALL SELECT ALL rt0.c2 FROM rt0 CROSS JOIN vt0 ON (((vt0.c0))>((' >'))) GROUP BY rt0.c2 HAVING ((((rt0.c1) IS TRUE)) ISNULL);
SELECT ALL rt0.c2 FROM rt0 CROSS JOIN vt0 ON (((vt0.c0))>((' >'))) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 CROSS JOIN vt0 ON (((vt0.c0))>((' >'))) GROUP BY rt0.c2 HAVING ((rt0.c1) IS TRUE) UNION ALL SELECT rt0.c2 FROM rt0 CROSS JOIN vt0 ON (((vt0.c0))>((' >'))) GROUP BY rt0.c2 HAVING (NOT (((rt0.c1) IS TRUE))) UNION ALL SELECT ALL rt0.c2 FROM rt0 CROSS JOIN vt0 ON (((vt0.c0))>((' >'))) GROUP BY rt0.c2 HAVING ((((rt0.c1) IS TRUE)) ISNULL);
SELECT ALL rt0.c2 FROM rt0 CROSS JOIN vt0 ON (((vt0.c0))>((' >'))) GROUP BY rt0.c2;
SELECT ALL MIN(((((rt0.c0) IS FALSE))IS((((rt0.c1, rt0.c0, vt0.c0, rt0.c1, rt0.c0))!=((rt0.c1, rt0.c1, vt0.c0, vt0.c0, rt0.c1)))))) FROM rt0, vt0 ORDER BY (+ (((rt0.c0)<<(vt0.c0)))) DESC  NULLS LAST, ((((rt0.c1) IS TRUE))+(((rt0.c1) NOTNULL)))  NULLS FIRST;
SELECT * FROM vt0, v0;
SELECT * FROM vt0, v0 WHERE (((((vt0.c0)<<(v0.c0))) BETWEEN (((v0.c0)|(0Xffffffffbb74f632))) AND ((NOT (vt0.c0))))) UNION ALL SELECT * FROM vt0, v0 WHERE ((NOT (((((vt0.c0)<<(v0.c0))) BETWEEN (((v0.c0)|(0Xffffffffbb74f632))) AND ((NOT (vt0.c0))))))) UNION ALL SELECT ALL * FROM vt0, v0 WHERE (((((((vt0.c0)<<(v0.c0))) BETWEEN (((v0.c0)|(0Xffffffffbb74f632))) AND ((NOT (vt0.c0))))) ISNULL));
SELECT * FROM vt0, v0;
SELECT DISTINCT * FROM v0, rt0, vt0;
SELECT DISTINCT * FROM v0, rt0, vt0 WHERE ((((rt0.c2))<>((rt0.c0))) COLLATE BINARY) UNION SELECT DISTINCT * FROM v0, rt0, vt0 WHERE ((NOT ((((rt0.c2))<>((rt0.c0))) COLLATE BINARY))) UNION SELECT DISTINCT * FROM v0, rt0, vt0 WHERE ((((((rt0.c2))<>((rt0.c0))) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM v0, rt0, vt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, '-1981068048')) AND ((v0.c0, v0.c0, v0.c0)))) BETWEEN (((v0.c0)>=(v0.c0))) AND (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, '-1981068048')) AND ((v0.c0, v0.c0, v0.c0)))) BETWEEN (((v0.c0)>=(v0.c0))) AND (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, '-1981068048')) AND ((v0.c0, v0.c0, v0.c0)))) BETWEEN (((v0.c0)>=(v0.c0))) AND (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c0, rt0.c1, v0.c0, rt0.c2, vt0.c0 FROM vt0, v0, rt0;
SELECT ALL rt0.c0, rt0.c1, v0.c0, rt0.c2, vt0.c0 FROM vt0, v0, rt0 WHERE (CAST(CASE rt0.c0  WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c0 THEN 'N5' END AS BLOB)) UNION ALL SELECT rt0.c0, rt0.c1, v0.c0, rt0.c2, vt0.c0 FROM vt0, v0, rt0 WHERE ((NOT (CAST(CASE rt0.c0  WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c0 THEN 'N5' END AS BLOB)))) UNION ALL SELECT rt0.c0, rt0.c1, v0.c0, rt0.c2, vt0.c0 FROM vt0, v0, rt0 WHERE (((CAST(CASE rt0.c0  WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c0 THEN 'N5' END AS BLOB)) ISNULL));
SELECT ALL rt0.c0, rt0.c1, v0.c0, rt0.c2, vt0.c0 FROM vt0, v0, rt0;
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN vt0 ON (((+ (vt0.c0))) BETWEEN (UPPER(DISTINCT vt0.c0)) AND (vt0.c0));
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN vt0 ON (((+ (vt0.c0))) BETWEEN (UPPER(DISTINCT vt0.c0)) AND (vt0.c0)) WHERE (COALESCE(CAST(vt0.c0 AS BLOB), ((vt0.c0)-(vt0.c0)))) UNION SELECT DISTINCT * FROM v0 NOT INDEXED RIGHT OUTER JOIN vt0 ON (((+ (vt0.c0))) BETWEEN (UPPER(DISTINCT vt0.c0)) AND (vt0.c0)) WHERE ((NOT (COALESCE(CAST(vt0.c0 AS BLOB), ((vt0.c0)-(vt0.c0)))))) UNION SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN vt0 ON (((+ (vt0.c0))) BETWEEN (UPPER(DISTINCT vt0.c0)) AND (vt0.c0)) WHERE (((COALESCE(CAST(vt0.c0 AS BLOB), ((vt0.c0)-(vt0.c0)))) ISNULL));
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN vt0 ON (((+ (vt0.c0))) BETWEEN (UPPER(DISTINCT vt0.c0)) AND (vt0.c0));
SELECT ALL v0.c0 FROM v0, rt0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, rt0 WHERE (((((rt0.c0) IS FALSE))>=((0.32894251527658835 IN ())))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, rt0 WHERE ((NOT (((((rt0.c0) IS FALSE))>=((0.32894251527658835 IN ())))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, rt0 WHERE (((((((rt0.c0) IS FALSE))>=((0.32894251527658835 IN ())))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, rt0 GROUP BY v0.c0;
SELECT ALL rt0.c0, rt0.c1, v0.c0, rt0.c2, vt0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c0, rt0.c1, v0.c0, rt0.c2, vt0.c0;
SELECT rt0.c0, rt0.c1, v0.c0, rt0.c2, vt0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c0, rt0.c1, v0.c0, rt0.c2, vt0.c0 HAVING MIN(vt0.c0 COLLATE NOCASE) UNION ALL SELECT rt0.c0, rt0.c1, v0.c0, rt0.c2, vt0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c0, rt0.c1, v0.c0, rt0.c2, vt0.c0 HAVING (NOT (MIN(vt0.c0 COLLATE NOCASE))) UNION ALL SELECT rt0.c0, rt0.c1, v0.c0, rt0.c2, vt0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c0, rt0.c1, v0.c0, rt0.c2, vt0.c0 HAVING ((MIN(vt0.c0 COLLATE NOCASE)) ISNULL);
SELECT ALL rt0.c0, rt0.c1, v0.c0, rt0.c2, vt0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c0, rt0.c1, v0.c0, rt0.c2, vt0.c0;
SELECT rt0.c0, rt0.c1, v0.c0, rt0.c2, vt0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c0, rt0.c1, v0.c0, rt0.c2, vt0.c0 HAVING MIN(vt0.c0 COLLATE NOCASE) UNION ALL SELECT rt0.c0, rt0.c1, v0.c0, rt0.c2, vt0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c0, rt0.c1, v0.c0, rt0.c2, vt0.c0 HAVING (NOT (MIN(vt0.c0 COLLATE NOCASE))) UNION ALL SELECT rt0.c0, rt0.c1, v0.c0, rt0.c2, vt0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c0, rt0.c1, v0.c0, rt0.c2, vt0.c0 HAVING ((MIN(vt0.c0 COLLATE NOCASE)) ISNULL);
SELECT ALL rt0.c0, rt0.c1, v0.c0, rt0.c2, vt0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c0, rt0.c1, v0.c0, rt0.c2, vt0.c0;
SELECT vt0.c0, v0.c0 FROM v0, vt0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 WHERE (v0.c0) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 WHERE ((NOT (v0.c0))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 WHERE (((v0.c0) ISNULL));
SELECT vt0.c0, v0.c0 FROM v0, vt0;
SELECT DISTINCT rt0.c0, vt0.c0, rt0.c2 FROM vt0, rt0;
SELECT DISTINCT rt0.c0, vt0.c0, rt0.c2 FROM vt0, rt0 WHERE ((((((vt0.c0)IS NOT(rt0.c1))))<=((CAST(vt0.c0 AS INTEGER))))) UNION SELECT DISTINCT rt0.c0, vt0.c0, rt0.c2 FROM vt0, rt0 WHERE ((NOT ((((((vt0.c0)IS NOT(rt0.c1))))<=((CAST(vt0.c0 AS INTEGER))))))) UNION SELECT DISTINCT rt0.c0, vt0.c0, rt0.c2 FROM vt0, rt0 WHERE ((((((((vt0.c0)IS NOT(rt0.c1))))<=((CAST(vt0.c0 AS INTEGER))))) ISNULL));
SELECT DISTINCT rt0.c0, vt0.c0, rt0.c2 FROM vt0, rt0;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, vt0 WHERE (((LOWER(v0.c0))+((((v0.c0))>=((v0.c0)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM v0, vt0 WHERE ((NOT (((LOWER(v0.c0))+((((v0.c0))>=((v0.c0)))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM v0, vt0 WHERE (((((LOWER(v0.c0))+((((v0.c0))>=((v0.c0)))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CASE WHEN '198325704' THEN ((SUM(vt0.c0)) BETWEEN (vt0.c0) AND (TOTAL(-1920316829))) ELSE (((MAX(COUNT(COUNT(TOTAL(GROUP_CONCAT(vt0.c0))))))) NOT BETWEEN ((vt0.c0)) AND ((COUNT(MIN(vt0.c0))))) END UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CASE WHEN '198325704' THEN ((SUM(vt0.c0)) BETWEEN (vt0.c0) AND (TOTAL(-1920316829))) ELSE (((MAX(COUNT(COUNT(TOTAL(GROUP_CONCAT(vt0.c0))))))) NOT BETWEEN ((vt0.c0)) AND ((COUNT(MIN(vt0.c0))))) END)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CASE WHEN '198325704' THEN ((SUM(vt0.c0)) BETWEEN (vt0.c0) AND (TOTAL(-1920316829))) ELSE (((MAX(COUNT(COUNT(TOTAL(GROUP_CONCAT(vt0.c0))))))) NOT BETWEEN ((vt0.c0)) AND ((COUNT(MIN(vt0.c0))))) END) ISNULL);
SELECT ALL rt0.c1 FROM rt0 INNER JOIN vt0 ON ((NULL) IS FALSE) FULL OUTER JOIN v0 ON (v0.c0 COLLATE BINARY IN ());
SELECT rt0.c1 FROM rt0 INNER JOIN vt0 ON ((NULL) IS FALSE) FULL OUTER JOIN v0 ON (v0.c0 COLLATE BINARY IN ()) WHERE (CASE rt0.c2  WHEN rt0.c1 THEN vt0.c0 ELSE v0.c0 END COLLATE NOCASE) UNION ALL SELECT rt0.c1 FROM rt0 INNER JOIN vt0 ON ((NULL) IS FALSE) FULL OUTER JOIN v0 ON (v0.c0 COLLATE BINARY IN ()) WHERE ((NOT (CASE rt0.c2  WHEN rt0.c1 THEN vt0.c0 ELSE v0.c0 END COLLATE NOCASE))) UNION ALL SELECT rt0.c1 FROM rt0 INNER JOIN vt0 ON ((NULL) IS FALSE) FULL OUTER JOIN v0 ON (v0.c0 COLLATE BINARY IN ()) WHERE (((CASE rt0.c2  WHEN rt0.c1 THEN vt0.c0 ELSE v0.c0 END COLLATE NOCASE) ISNULL));
SELECT ALL rt0.c1 FROM rt0 INNER JOIN vt0 ON ((NULL) IS FALSE) FULL OUTER JOIN v0 ON (v0.c0 COLLATE BINARY IN ());
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((- (((vt0.c0)<=(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((- (((vt0.c0)<=(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((- (((vt0.c0)<=(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING NULL UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (NULL)) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING ((NULL) ISNULL);
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING NULL UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (NULL)) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING ((NULL) ISNULL);
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM vt0, rt0;
SELECT rt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM vt0, rt0 WHERE (((((((rt0.c2)AND(rt0.c2)))OR(rt0.c1))) BETWEEN (((((((((rt0.c2)AND(rt0.c0)))AND(0.27705809518871627)))AND(rt0.c0)))OR(rt0.c2))) AND (((rt0.c2)IS(vt0.c0))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM vt0, rt0 WHERE ((NOT (((((((rt0.c2)AND(rt0.c2)))OR(rt0.c1))) BETWEEN (((((((((rt0.c2)AND(rt0.c0)))AND(0.27705809518871627)))AND(rt0.c0)))OR(rt0.c2))) AND (((rt0.c2)IS(vt0.c0))))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM vt0, rt0 WHERE (((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c1))) BETWEEN (((((((((rt0.c2)AND(rt0.c0)))AND(0.27705809518871627)))AND(rt0.c0)))OR(rt0.c2))) AND (((rt0.c2)IS(vt0.c0))))) ISNULL));
SELECT rt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM vt0, rt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)>((NOT (vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((CASE WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)>((NOT (vt0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((CASE WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)>((NOT (vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (STRFTIME((('a䤅䎘)') ISNULL), IFNULL(DISTINCT rt0.c0, rt0.c2), ((rt0.c1)/(rt0.c0)))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (STRFTIME((('a䤅䎘)') ISNULL), IFNULL(DISTINCT rt0.c0, rt0.c2), ((rt0.c1)/(rt0.c0)))))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((STRFTIME((('a䤅䎘)') ISNULL), IFNULL(DISTINCT rt0.c0, rt0.c2), ((rt0.c1)/(rt0.c0)))) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, vt0.c0, rt0.c0 FROM rt0, v0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c0;
SELECT ALL rt0.c1, vt0.c0, rt0.c0 FROM rt0, v0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c0 HAVING rt0.c1 UNION ALL SELECT ALL rt0.c1, vt0.c0, rt0.c0 FROM rt0, v0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c0 HAVING (NOT (rt0.c1)) UNION ALL SELECT ALL rt0.c1, vt0.c0, rt0.c0 FROM rt0, v0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c0 HAVING ((rt0.c1) ISNULL);
SELECT ALL rt0.c1, vt0.c0, rt0.c0 FROM rt0, v0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c0;
SELECT ALL rt0.c1, vt0.c0, rt0.c0 FROM rt0, v0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c0 HAVING rt0.c1 UNION ALL SELECT ALL rt0.c1, vt0.c0, rt0.c0 FROM rt0, v0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c0 HAVING (NOT (rt0.c1)) UNION ALL SELECT ALL rt0.c1, vt0.c0, rt0.c0 FROM rt0, v0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c0 HAVING ((rt0.c1) ISNULL);
SELECT ALL rt0.c1, vt0.c0, rt0.c0 FROM rt0, v0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c0;
SELECT ALL * FROM rt0, v0;
SELECT * FROM rt0, v0 WHERE (json_extract(((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)), ((rt0.c0)LIKE(rt0.c2)))) UNION ALL SELECT * FROM rt0, v0 WHERE ((NOT (json_extract(((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)), ((rt0.c0)LIKE(rt0.c2)))))) UNION ALL SELECT * FROM rt0, v0 WHERE (((json_extract(((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)), ((rt0.c0)LIKE(rt0.c2)))) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((((rt0.c0)<=(rt0.c2))) NOT BETWEEN (rt0.c2) AND (UNICODE(rt0.c1)))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c0)<=(rt0.c2))) NOT BETWEEN (rt0.c2) AND (UNICODE(rt0.c1)))))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((((((rt0.c0)<=(rt0.c2))) NOT BETWEEN (rt0.c2) AND (UNICODE(rt0.c1)))) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT ALL rt0.c1 FROM v0, rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM v0, rt0 WHERE ('-1264356369') GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM v0, rt0 WHERE ((NOT ('-1264356369'))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM v0, rt0 WHERE ((('-1264356369') ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM v0, rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1, vt0.c0, rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, vt0.c0, rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c0, rt0.c2 HAVING ((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((vt0.c0))) IN ()) UNION ALL SELECT ALL rt0.c1, vt0.c0, rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c0, rt0.c2 HAVING (NOT (((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((vt0.c0))) IN ()))) UNION ALL SELECT ALL rt0.c1, vt0.c0, rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c0, rt0.c2 HAVING ((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((vt0.c0))) IN ())) ISNULL);
SELECT ALL rt0.c1, vt0.c0, rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, vt0.c0, rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c0, rt0.c2 HAVING ((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((vt0.c0))) IN ()) UNION ALL SELECT ALL rt0.c1, vt0.c0, rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c0, rt0.c2 HAVING (NOT (((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((vt0.c0))) IN ()))) UNION ALL SELECT ALL rt0.c1, vt0.c0, rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c0, rt0.c2 HAVING ((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((vt0.c0))) IN ())) ISNULL);
SELECT ALL rt0.c1, vt0.c0, rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c0, rt0.c2;
SELECT rt0.c0 FROM rt0, vt0, v0;
SELECT ALL rt0.c0 FROM rt0, vt0, v0 NOT INDEXED WHERE (((((((v0.c0))>=((vt0.c0)))))<((CASE vt0.c0  WHEN rt0.c2 THEN v0.c0 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 END)))) UNION ALL SELECT rt0.c0 FROM rt0, vt0, v0 WHERE ((NOT (((((((v0.c0))>=((vt0.c0)))))<((CASE vt0.c0  WHEN rt0.c2 THEN v0.c0 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 END)))))) UNION ALL SELECT rt0.c0 FROM rt0, vt0, v0 WHERE (((((((((v0.c0))>=((vt0.c0)))))<((CASE vt0.c0  WHEN rt0.c2 THEN v0.c0 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 END)))) ISNULL));
SELECT rt0.c0 FROM rt0, vt0, v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 NOT INDEXED WHERE (((v0.c0)<>(v0.c0)) COLLATE BINARY) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((v0.c0)!=(v0.c0)) COLLATE BINARY))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((v0.c0)!=(v0.c0)) COLLATE BINARY) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL rt0.c1 FROM rt0, v0, vt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, v0, vt0 WHERE ((~ (rt0.c2 COLLATE RTRIM))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0, v0, vt0 WHERE ((NOT ((~ (rt0.c2 COLLATE RTRIM))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0, v0, vt0 WHERE ((((~ (rt0.c2 COLLATE RTRIM))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, v0, vt0 GROUP BY rt0.c1;
SELECT vt0.c0, rt0.c2 FROM rt0 CROSS JOIN v0 ON ((NOT (1731970190)) IN ()) CROSS JOIN vt0 ON ((CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c1 END) IS FALSE) GROUP BY vt0.c0, rt0.c2;
SELECT vt0.c0, rt0.c2 FROM rt0 CROSS JOIN v0 ON ((NOT (1731970190)) IN ()) CROSS JOIN vt0 ON ((CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c1 END) IS FALSE) GROUP BY vt0.c0, rt0.c2 HAVING MIN(TOTAL(MAX(GROUP_CONCAT(v0.c0)))) UNION ALL SELECT vt0.c0, rt0.c2 FROM rt0 CROSS JOIN v0 ON ((NOT (1731970190)) IN ()) CROSS JOIN vt0 ON ((CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c1 END) IS FALSE) GROUP BY vt0.c0, rt0.c2 HAVING (NOT (MIN(TOTAL(MAX(GROUP_CONCAT(v0.c0)))))) UNION ALL SELECT vt0.c0, rt0.c2 FROM rt0 CROSS JOIN v0 ON ((NOT (1731970190)) IN ()) CROSS JOIN vt0 ON ((CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c1 END) IS FALSE) GROUP BY vt0.c0, rt0.c2 HAVING ((MIN(TOTAL(MAX(GROUP_CONCAT(v0.c0))))) ISNULL);
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON (rt0.c0 IN ()) COLLATE RTRIM;
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON (rt0.c0 IN ()) COLLATE RTRIM WHERE (((7.26556366E8 COLLATE RTRIM) IS TRUE)) UNION ALL SELECT ALL * FROM rt0 CROSS JOIN vt0 ON (rt0.c0 IN ()) COLLATE RTRIM WHERE ((NOT (((7.26556366E8 COLLATE RTRIM) IS TRUE)))) UNION ALL SELECT ALL * FROM rt0 CROSS JOIN vt0 ON (rt0.c0 IN ()) COLLATE RTRIM WHERE (((((7.26556366E8 COLLATE RTRIM) IS TRUE)) ISNULL));
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON (rt0.c0 IN ()) COLLATE RTRIM;
SELECT DISTINCT vt0.c0, rt0.c0 FROM rt0, vt0;
SELECT DISTINCT vt0.c0, rt0.c0 FROM rt0, vt0 WHERE (0.13363423910872818) UNION SELECT DISTINCT vt0.c0, rt0.c0 FROM rt0, vt0 WHERE ((NOT (0.13363423910872818))) UNION SELECT DISTINCT vt0.c0, rt0.c0 FROM rt0, vt0 WHERE (((0.13363423910872818) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c0 FROM rt0, vt0;
SELECT vt0.c0, v0.c0 FROM vt0 NOT INDEXED, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE (vt0.c0 COLLATE NOCASE) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE ((NOT (vt0.c0 COLLATE NOCASE))) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE (((vt0.c0 COLLATE NOCASE) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0 NOT INDEXED, v0 GROUP BY vt0.c0, v0.c0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CASE NULL  WHEN rt0.c0 THEN (+ (rt0.c0)) ELSE (rt0.c0 IN ()) END) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (CASE NULL  WHEN rt0.c0 THEN (+ (rt0.c0)) ELSE (rt0.c0 IN ()) END))) UNION ALL SELECT ALL * FROM rt0 WHERE (((CASE NULL  WHEN rt0.c0 THEN (+ (rt0.c0)) ELSE (rt0.c0 IN ()) END) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT v0.c0, vt0.c0 FROM rt0, v0, vt0;
SELECT DISTINCT v0.c0, vt0.c0 FROM rt0, v0, vt0 WHERE (CASE rt0.c1  WHEN (rt0.c2 IN (x'fbc4', rt0.c1)) THEN ((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c2)) END) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM rt0, v0, vt0 WHERE ((NOT (CASE rt0.c1  WHEN (rt0.c2 IN (x'fbc4', rt0.c1)) THEN ((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c2)) END))) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM rt0, v0, vt0 WHERE (((CASE rt0.c1  WHEN (rt0.c2 IN (x'fbc4', rt0.c1)) THEN ((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c2)) END) ISNULL));
SELECT DISTINCT v0.c0, vt0.c0 FROM rt0, v0, vt0;
SELECT rt0.c1, v0.c0, rt0.c2, vt0.c0, rt0.c0 FROM vt0, rt0 NOT INDEXED, v0 GROUP BY rt0.c1, v0.c0, rt0.c2, vt0.c0, rt0.c0;
SELECT rt0.c1, v0.c0, rt0.c2, vt0.c0, rt0.c0 FROM vt0, rt0, v0 WHERE (rt0.c0) GROUP BY rt0.c1, v0.c0, rt0.c2, vt0.c0, rt0.c0 UNION SELECT ALL rt0.c1, v0.c0, rt0.c2, vt0.c0, rt0.c0 FROM vt0, rt0, v0 WHERE ((NOT (rt0.c0))) GROUP BY rt0.c1, v0.c0, rt0.c2, vt0.c0, rt0.c0 UNION SELECT rt0.c1, v0.c0, rt0.c2, vt0.c0, rt0.c0 FROM vt0, rt0, v0 WHERE (((rt0.c0) ISNULL)) GROUP BY rt0.c1, v0.c0, rt0.c2, vt0.c0, rt0.c0;
SELECT rt0.c1, v0.c0, rt0.c2, vt0.c0, rt0.c0 FROM vt0, rt0 NOT INDEXED, v0 GROUP BY rt0.c1, v0.c0, rt0.c2, vt0.c0, rt0.c0;
SELECT ALL v0.c0, rt0.c2 FROM rt0 CROSS JOIN vt0 ON (NOT (LIKELY(DISTINCT x'0740'))) LEFT OUTER JOIN v0 ON ((HEX(rt0.c1))>(((v0.c0) IS TRUE))) GROUP BY v0.c0, rt0.c2;
SELECT ALL v0.c0, rt0.c2 FROM rt0 CROSS JOIN vt0 ON (NOT (LIKELY(DISTINCT x'0740'))) LEFT OUTER JOIN v0 ON ((HEX(rt0.c1))>(((v0.c0) IS TRUE))) GROUP BY v0.c0, rt0.c2 HAVING GROUP_CONCAT(MIN(COUNT(*))) UNION ALL SELECT ALL v0.c0, rt0.c2 FROM rt0 CROSS JOIN vt0 ON (NOT (LIKELY(DISTINCT x'0740'))) LEFT OUTER JOIN v0 ON ((HEX(rt0.c1))>(((v0.c0) IS TRUE))) GROUP BY v0.c0, rt0.c2 HAVING (NOT (GROUP_CONCAT(MIN(COUNT(*))))) UNION ALL SELECT ALL v0.c0, rt0.c2 FROM rt0 CROSS JOIN vt0 ON (NOT (LIKELY(DISTINCT x'0740'))) LEFT OUTER JOIN v0 ON ((HEX(rt0.c1))>(((v0.c0) IS TRUE))) GROUP BY v0.c0, rt0.c2 HAVING ((GROUP_CONCAT(MIN(COUNT(*)))) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (CAST((('') NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS TEXT)) UNION ALL SELECT * FROM vt0 WHERE ((NOT (CAST((('') NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS TEXT)))) UNION ALL SELECT ALL * FROM vt0 WHERE (((CAST((('') NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS TEXT)) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT rt0.c0 FROM vt0, v0, rt0;
SELECT DISTINCT rt0.c0 FROM vt0, v0, rt0 WHERE (((((CASE WHEN vt0.c0 THEN rt0.c2 END)OR(((vt0.c0)>(1.28236651E8)))))AND(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))))) UNION SELECT DISTINCT rt0.c0 FROM vt0, v0, rt0 WHERE ((NOT (((((CASE WHEN vt0.c0 THEN rt0.c2 END)OR(((vt0.c0)>(1.28236651E8)))))AND(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))))))) UNION SELECT DISTINCT rt0.c0 FROM vt0, v0, rt0 WHERE (((((((CASE WHEN vt0.c0 THEN rt0.c2 END)OR(((vt0.c0)>(1.28236651E8)))))AND(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c0 FROM vt0, v0, rt0;
SELECT ALL v0.c0 FROM v0, vt0, rt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0, rt0 WHERE (rt0.c0) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, vt0, rt0 WHERE ((NOT (rt0.c0))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, vt0, rt0 WHERE (((rt0.c0) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0, rt0 GROUP BY v0.c0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((TOTAL(rt0.c0))+(MAX(COUNT(rt0.c1)))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (((TOTAL(rt0.c0))+(MAX(COUNT(rt0.c1)))))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((((TOTAL(rt0.c0))+(MAX(COUNT(rt0.c1))))) ISNULL);
SELECT * FROM vt0 LEFT OUTER JOIN v0 ON (((((vt0.c0)) BETWEEN (('')) AND ((v0.c0)))) IS FALSE);
SELECT * FROM vt0 LEFT OUTER JOIN v0 ON (((((vt0.c0)) BETWEEN (('')) AND ((v0.c0)))) IS FALSE) WHERE (CAST(json_valid(vt0.c0) AS TEXT)) UNION ALL SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON (((((vt0.c0)) BETWEEN (('')) AND ((v0.c0)))) IS FALSE) WHERE ((NOT (CAST(json_valid(vt0.c0) AS TEXT)))) UNION ALL SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON (((((vt0.c0)) BETWEEN (('')) AND ((v0.c0)))) IS FALSE) WHERE (((CAST(json_valid(vt0.c0) AS TEXT)) ISNULL));
SELECT * FROM vt0 LEFT OUTER JOIN v0 ON (((((vt0.c0)) BETWEEN (('')) AND ((v0.c0)))) IS FALSE);
SELECT DISTINCT * FROM vt0, v0, rt0;
SELECT DISTINCT * FROM vt0, v0, rt0 NOT INDEXED WHERE ((((vt0.c0)) NOT BETWEEN (((NOT (vt0.c0)))) AND ((((vt0.c0) IS FALSE))))) UNION SELECT DISTINCT * FROM vt0, v0, rt0 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN (((NOT (vt0.c0)))) AND ((((vt0.c0) IS FALSE))))))) UNION SELECT DISTINCT * FROM vt0, v0, rt0 WHERE ((((((vt0.c0)) NOT BETWEEN (((NOT (vt0.c0)))) AND ((((vt0.c0) IS FALSE))))) ISNULL));
SELECT DISTINCT * FROM vt0, v0, rt0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((- (rt0.c2)))<=(CAST(rt0.c0 AS INTEGER)))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((((- (rt0.c2)))<=(CAST(rt0.c0 AS INTEGER)))))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((((- (rt0.c2)))<=(CAST(rt0.c0 AS INTEGER)))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1 HAVING rt0.c0 UNION ALL SELECT rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (rt0.c0)) UNION ALL SELECT rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((rt0.c0) ISNULL);
SELECT ALL rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1 HAVING rt0.c0 UNION ALL SELECT rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (rt0.c0)) UNION ALL SELECT rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((rt0.c0) ISNULL);
SELECT ALL rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE ((((((~ (vt0.c0)))OR((- (vt0.c0)))))OR(vt0.c0))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((((((~ (vt0.c0)))OR((- (vt0.c0)))))OR(vt0.c0))))) UNION ALL SELECT * FROM vt0 WHERE ((((((((~ (vt0.c0)))OR((- (vt0.c0)))))OR(vt0.c0))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) NOT BETWEEN (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) AND (UPPER(v0.c0)))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) NOT BETWEEN (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) AND (UPPER(v0.c0)))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) NOT BETWEEN (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) AND (UPPER(v0.c0)))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL vt0.c0, rt0.c1 FROM rt0 CROSS JOIN v0 ON ((((((((json_valid(rt0.c0))OR(vt0.c0 COLLATE NOCASE)))AND((((rt0.c0))<=((rt0.c1))))))AND(((((vt0.c0)AND(rt0.c2)))AND(rt0.c0)))))AND(((rt0.c1) ISNULL))) LEFT OUTER JOIN vt0 ON CAST(rt0.c0 AS BLOB) GROUP BY vt0.c0, rt0.c1;
SELECT vt0.c0, rt0.c1 FROM rt0 CROSS JOIN v0 ON ((((((((json_valid(rt0.c0))OR(vt0.c0 COLLATE NOCASE)))AND((((rt0.c0))<=((rt0.c1))))))AND(((((vt0.c0)AND(rt0.c2)))AND(rt0.c0)))))AND(((rt0.c1) ISNULL))) LEFT OUTER JOIN vt0 ON CAST(rt0.c0 AS BLOB) WHERE ((((~ (rt0.c0))) NOT BETWEEN (CAST(rt0.c1 AS INTEGER)) AND (((rt0.c2) ISNULL)))) GROUP BY vt0.c0, rt0.c1 UNION SELECT ALL vt0.c0, rt0.c1 FROM rt0 CROSS JOIN v0 ON ((((((((json_valid(rt0.c0))OR(vt0.c0 COLLATE NOCASE)))AND((((rt0.c0))<=((rt0.c1))))))AND(((((vt0.c0)AND(rt0.c2)))AND(rt0.c0)))))AND(((rt0.c1) ISNULL))) LEFT OUTER JOIN vt0 ON CAST(rt0.c0 AS BLOB) WHERE ((NOT ((((~ (rt0.c0))) NOT BETWEEN (CAST(rt0.c1 AS INTEGER)) AND (((rt0.c2) ISNULL)))))) GROUP BY vt0.c0, rt0.c1 UNION SELECT ALL vt0.c0, rt0.c1 FROM rt0 CROSS JOIN v0 ON ((((((((json_valid(rt0.c0))OR(vt0.c0 COLLATE NOCASE)))AND((((rt0.c0))<=((rt0.c1))))))AND(((((vt0.c0)AND(rt0.c2)))AND(rt0.c0)))))AND(((rt0.c1) ISNULL))) LEFT OUTER JOIN vt0 ON CAST(rt0.c0 AS BLOB) WHERE ((((((~ (rt0.c0))) NOT BETWEEN (CAST(rt0.c1 AS INTEGER)) AND (((rt0.c2) ISNULL)))) ISNULL)) GROUP BY vt0.c0, rt0.c1;
SELECT ALL vt0.c0, rt0.c1 FROM rt0 CROSS JOIN v0 ON ((((((((json_valid(rt0.c0))OR(vt0.c0 COLLATE NOCASE)))AND((((rt0.c0))<=((rt0.c1))))))AND(((((vt0.c0)AND(rt0.c2)))AND(rt0.c0)))))AND(((rt0.c1) ISNULL))) LEFT OUTER JOIN vt0 ON CAST(rt0.c0 AS BLOB) GROUP BY vt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1, vt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1, vt0.c0, rt0.c2 HAVING MAX(COUNT(*)) UNION ALL SELECT rt0.c0, rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1, vt0.c0, rt0.c2 HAVING (NOT (MAX(COUNT(*)))) UNION ALL SELECT ALL rt0.c0, rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1, vt0.c0, rt0.c2 HAVING ((MAX(COUNT(*))) ISNULL);
SELECT ALL * FROM rt0 CROSS JOIN v0 ON UPPER(((rt0.c0) IS FALSE));
SELECT ALL * FROM rt0 CROSS JOIN v0 ON UPPER(((rt0.c0) IS FALSE)) WHERE (((((rt0.c2)AND(v0.c0)))OR(v0.c0)) COLLATE NOCASE) UNION ALL SELECT * FROM rt0 CROSS JOIN v0 ON UPPER(((rt0.c0) IS FALSE)) WHERE ((NOT (((((rt0.c2)AND(v0.c0)))OR(v0.c0)) COLLATE NOCASE))) UNION ALL SELECT ALL * FROM rt0 CROSS JOIN v0 ON UPPER(((rt0.c0) IS FALSE)) WHERE (((((((rt0.c2)AND(v0.c0)))OR(v0.c0)) COLLATE NOCASE) ISNULL));
SELECT ALL * FROM rt0 CROSS JOIN v0 ON UPPER(((rt0.c0) IS FALSE));
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c0))<((rt0.c2))) IN ())) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c0))<((rt0.c2))) IN ())))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c0))<((rt0.c2))) IN ())) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE (((v0.c0)>=(vt0.c0))) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM vt0, v0 WHERE ((NOT (((v0.c0)>=(vt0.c0))))) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM vt0, v0 WHERE (((((v0.c0)>=(vt0.c0))) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c0;
SELECT rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c0;
SELECT rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c0;
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (((LIKELIHOOD(DISTINCT v0.c0, 0.8473396185488077)) NOT BETWEEN (CASE WHEN v0.c0 THEN v0.c0 END) AND (0.452189878320032))) UNION ALL SELECT * FROM v0 WHERE ((NOT (((LIKELIHOOD(DISTINCT v0.c0, 0.8473396185488077)) NOT BETWEEN (CASE WHEN v0.c0 THEN v0.c0 END) AND (0.452189878320032))))) UNION ALL SELECT * FROM v0 WHERE (((((LIKELIHOOD(DISTINCT v0.c0, 0.8473396185488077)) NOT BETWEEN (CASE WHEN v0.c0 THEN v0.c0 END) AND (0.452189878320032))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT rt0.c2 FROM vt0, rt0, v0;
SELECT DISTINCT rt0.c2 FROM vt0, rt0, v0 WHERE ((((rt0.c0 IN (vt0.c0, rt0.c1, vt0.c0))) ISNULL)) UNION SELECT DISTINCT rt0.c2 FROM vt0, rt0, v0 WHERE ((NOT ((((rt0.c0 IN (vt0.c0, rt0.c1, vt0.c0))) ISNULL)))) UNION SELECT DISTINCT rt0.c2 FROM vt0, rt0, v0 WHERE ((((((rt0.c0 IN (vt0.c0, rt0.c1, vt0.c0))) ISNULL)) ISNULL));
SELECT DISTINCT rt0.c2 FROM vt0, rt0, v0;
SELECT ALL vt0.c0, v0.c0, rt0.c1 FROM vt0, rt0, v0 GROUP BY vt0.c0, v0.c0, rt0.c1;
SELECT ALL vt0.c0, v0.c0, rt0.c1 FROM vt0, rt0, v0 WHERE (((((951561925)IS NOT(vt0.c0)))==(((v0.c0)IS NOT(v0.c0))))) GROUP BY vt0.c0, v0.c0, rt0.c1 UNION SELECT ALL vt0.c0, v0.c0, rt0.c1 FROM vt0, rt0, v0 WHERE ((NOT (((((951561925)IS NOT(vt0.c0)))=(((v0.c0)IS NOT(v0.c0))))))) GROUP BY vt0.c0, v0.c0, rt0.c1 UNION SELECT ALL vt0.c0, v0.c0, rt0.c1 FROM vt0, rt0, v0 WHERE (((((((951561925)IS NOT(vt0.c0)))=(((v0.c0)IS NOT(v0.c0))))) ISNULL)) GROUP BY vt0.c0, v0.c0, rt0.c1;
SELECT ALL vt0.c0, v0.c0, rt0.c1 FROM vt0, rt0, v0 GROUP BY vt0.c0, v0.c0, rt0.c1;
SELECT rt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON (((('')OR(rt0.c1))) NOT BETWEEN (((rt0.c1) IS FALSE)) AND (((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))) GROUP BY rt0.c0;
SELECT rt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON (((('')OR(rt0.c1))) NOT BETWEEN (((rt0.c1) IS FALSE)) AND (((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))) GROUP BY rt0.c0 HAVING COUNT(MIN(MAX(rt0.c2))) UNION ALL SELECT ALL rt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON (((('')OR(rt0.c1))) NOT BETWEEN (((rt0.c1) IS FALSE)) AND (((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))) GROUP BY rt0.c0 HAVING (NOT (COUNT(MIN(MAX(rt0.c2))))) UNION ALL SELECT ALL rt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON (((('')OR(rt0.c1))) NOT BETWEEN (((rt0.c1) IS FALSE)) AND (((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))) GROUP BY rt0.c0 HAVING ((COUNT(MIN(MAX(rt0.c2)))) ISNULL);
SELECT ALL rt0.c2, rt0.c1, v0.c0 FROM rt0 FULL OUTER JOIN v0 ON ((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))) IS TRUE);
SELECT rt0.c2, rt0.c1, v0.c0 FROM rt0 FULL OUTER JOIN v0 ON ((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))) IS TRUE) WHERE (UPPER(DISTINCT rt0.c2 COLLATE BINARY)) UNION ALL SELECT rt0.c2, rt0.c1, v0.c0 FROM rt0 FULL OUTER JOIN v0 ON ((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))) IS TRUE) WHERE ((NOT (UPPER(DISTINCT rt0.c2 COLLATE BINARY)))) UNION ALL SELECT ALL rt0.c2, rt0.c1, v0.c0 FROM rt0 FULL OUTER JOIN v0 ON ((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))) IS TRUE) WHERE (((UPPER(DISTINCT rt0.c2 COLLATE BINARY)) ISNULL));
SELECT ALL rt0.c2, rt0.c1, v0.c0 FROM rt0 FULL OUTER JOIN v0 ON ((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))) IS TRUE);
SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0;
SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0 WHERE (vt0.c0) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0;
SELECT rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0, vt0 WHERE (LOWER(DISTINCT CASE NULL  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0, vt0 WHERE ((NOT (LOWER(DISTINCT CASE NULL  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)))) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0, vt0 WHERE (((LOWER(DISTINCT CASE NULL  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING rt0.c2 UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (rt0.c2)) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((rt0.c2) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING rt0.c2 UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (rt0.c2)) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((rt0.c2) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (('b#.⸰呒+' IN ())) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (('b#.⸰呒+' IN ())))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((('b#.⸰呒+' IN ())) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT vt0.c0 FROM vt0, v0;
SELECT DISTINCT vt0.c0 FROM vt0, v0 WHERE (CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END AS BLOB)) UNION SELECT DISTINCT vt0.c0 FROM vt0, v0 WHERE ((NOT (CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END AS BLOB)))) UNION SELECT DISTINCT vt0.c0 FROM vt0, v0 WHERE (((CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END AS BLOB)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0, v0;
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, v0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, v0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING COUNT((- (v0.c0))) UNION ALL SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING (NOT (COUNT((- (v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING ((COUNT((- (v0.c0)))) ISNULL);
SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING COUNT((- (v0.c0))) UNION ALL SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING (NOT (COUNT((- (v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING ((COUNT((- (v0.c0)))) ISNULL);
SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE BINARY) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE BINARY))) UNION ALL SELECT * FROM rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE BINARY) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM vt0 INNER JOIN v0 ON ((((((((TIME(rt0.c1, rt0.c1, rt0.c2, '-223086562', rt0.c0))AND(((rt0.c2) IS FALSE))))OR(CAST(rt0.c2 AS BLOB))))OR(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END)))AND(((((((((((((rt0.c2)OR(0.30776494436368107)))OR(v0.c0)))AND('')))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)))) LEFT OUTER JOIN rt0 ON CAST(rt0.c0 AS TEXT) COLLATE NOCASE;
SELECT DISTINCT * FROM vt0 INNER JOIN v0 ON ((((((((TIME(rt0.c1, rt0.c1, rt0.c2, '-223086562', rt0.c0))AND(((rt0.c2) IS FALSE))))OR(CAST(rt0.c2 AS BLOB))))OR(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END)))AND(((((((((((((rt0.c2)OR(0.30776494436368107)))OR(v0.c0)))AND('')))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)))) LEFT OUTER JOIN rt0 ON CAST(rt0.c0 AS TEXT) COLLATE NOCASE WHERE (((((((rt0.c1) ISNULL))OR(((((v0.c0)AND(rt0.c2)))OR(rt0.c0)))))OR(vt0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt0 INNER JOIN v0 ON ((((((((TIME(rt0.c1, rt0.c1, rt0.c2, '-223086562', rt0.c0))AND(((rt0.c2) IS FALSE))))OR(CAST(rt0.c2 AS BLOB))))OR(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END)))AND(((((((((((((rt0.c2)OR(0.30776494436368107)))OR(v0.c0)))AND('')))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)))) LEFT OUTER JOIN rt0 ON CAST(rt0.c0 AS TEXT) COLLATE NOCASE WHERE ((NOT (((((((rt0.c1) ISNULL))OR(((((v0.c0)AND(rt0.c2)))OR(rt0.c0)))))OR(vt0.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT * FROM vt0 INNER JOIN v0 ON ((((((((TIME(rt0.c1, rt0.c1, rt0.c2, '-223086562', rt0.c0))AND(((rt0.c2) IS FALSE))))OR(CAST(rt0.c2 AS BLOB))))OR(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END)))AND(((((((((((((rt0.c2)OR(0.30776494436368107)))OR(v0.c0)))AND('')))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)))) LEFT OUTER JOIN rt0 ON CAST(rt0.c0 AS TEXT) COLLATE NOCASE WHERE (((((((((rt0.c1) ISNULL))OR(((((v0.c0)AND(rt0.c2)))OR(rt0.c0)))))OR(vt0.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT * FROM vt0 INNER JOIN v0 ON ((((((((TIME(rt0.c1, rt0.c1, rt0.c2, '-223086562', rt0.c0))AND(((rt0.c2) IS FALSE))))OR(CAST(rt0.c2 AS BLOB))))OR(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END)))AND(((((((((((((rt0.c2)OR(0.30776494436368107)))OR(v0.c0)))AND('')))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)))) LEFT OUTER JOIN rt0 ON CAST(rt0.c0 AS TEXT) COLLATE NOCASE;
SELECT ALL rt0.c0, vt0.c0, rt0.c2, rt0.c1, v0.c0 FROM v0, rt0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c2, rt0.c1, v0.c0;
SELECT ALL rt0.c0, vt0.c0, rt0.c2, rt0.c1, v0.c0 FROM v0, rt0, vt0 WHERE (CASE WHEN ABS(rt0.c0) THEN CASE WHEN rt0.c2 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN rt0.c2 THEN v0.c0 WHEN v0.c0 THEN '-1208935270' WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c0 END END) GROUP BY rt0.c0, vt0.c0, rt0.c2, rt0.c1, v0.c0 UNION SELECT ALL rt0.c0, vt0.c0, rt0.c2, rt0.c1, v0.c0 FROM v0, rt0, vt0 WHERE ((NOT (CASE WHEN ABS(rt0.c0) THEN CASE WHEN rt0.c2 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN rt0.c2 THEN v0.c0 WHEN v0.c0 THEN '-1208935270' WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c0 END END))) GROUP BY rt0.c0, vt0.c0, rt0.c2, rt0.c1, v0.c0 UNION SELECT rt0.c0, vt0.c0, rt0.c2, rt0.c1, v0.c0 FROM v0, rt0, vt0 WHERE (((CASE WHEN ABS(rt0.c0) THEN CASE WHEN rt0.c2 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN rt0.c2 THEN v0.c0 WHEN v0.c0 THEN '-1208935270' WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c0 END END) ISNULL)) GROUP BY rt0.c0, vt0.c0, rt0.c2, rt0.c1, v0.c0;
SELECT ALL rt0.c0, vt0.c0, rt0.c2, rt0.c1, v0.c0 FROM v0, rt0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c2, rt0.c1, v0.c0;
SELECT ALL v0.c0, rt0.c0 FROM rt0, v0 GROUP BY v0.c0, rt0.c0;
SELECT ALL v0.c0, rt0.c0 FROM rt0, v0 GROUP BY v0.c0, rt0.c0 HAVING (COUNT(AVG(rt0.c1)) IN (((rt0.c0) NOT BETWEEN (GROUP_CONCAT(GROUP_CONCAT(MIN(rt0.c0)))) AND (rt0.c1)))) UNION ALL SELECT ALL v0.c0, rt0.c0 FROM rt0, v0 GROUP BY v0.c0, rt0.c0 HAVING (NOT ((COUNT(AVG(rt0.c1)) IN (((rt0.c0) NOT BETWEEN (GROUP_CONCAT(GROUP_CONCAT(MIN(rt0.c0)))) AND (rt0.c1)))))) UNION ALL SELECT ALL v0.c0, rt0.c0 FROM rt0, v0 GROUP BY v0.c0, rt0.c0 HAVING (((COUNT(AVG(rt0.c1)) IN (((rt0.c0) NOT BETWEEN (GROUP_CONCAT(GROUP_CONCAT(MIN(rt0.c0)))) AND (rt0.c1))))) ISNULL);
SELECT vt0.c0 FROM v0, vt0, rt0;
SELECT vt0.c0 FROM v0, vt0, rt0 WHERE (((((0.27874673342579703) BETWEEN (rt0.c2) AND (v0.c0))) NOT BETWEEN (vt0.c0) AND (CAST(v0.c0 AS INTEGER)))) UNION ALL SELECT vt0.c0 FROM v0, vt0, rt0 WHERE ((NOT (((((0.27874673342579703) BETWEEN (rt0.c2) AND (v0.c0))) NOT BETWEEN (vt0.c0) AND (CAST(v0.c0 AS INTEGER)))))) UNION ALL SELECT ALL vt0.c0 FROM v0, vt0, rt0 WHERE (((((((0.27874673342579703) BETWEEN (rt0.c2) AND (v0.c0))) NOT BETWEEN (vt0.c0) AND (CAST(v0.c0 AS INTEGER)))) ISNULL));
SELECT vt0.c0 FROM v0, vt0, rt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (LIKELIHOOD(((vt0.c0)>=('645265154')), 0.0165647921769998)) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (LIKELIHOOD(((vt0.c0)>=('645265154')), 0.0165647921769998)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((LIKELIHOOD(((vt0.c0)>=('645265154')), 0.0165647921769998)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT v0.c0 FROM v0 FULL OUTER JOIN rt0 ON CASE ((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt0.c0))  WHEN v0.c0 COLLATE RTRIM THEN '-458753882' END RIGHT OUTER JOIN vt0 ON (((rt0.c1)) BETWEEN ((((rt0.c2) IS FALSE))) AND ((((rt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c0))))) GROUP BY v0.c0;
SELECT ALL v0.c0, rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c0, rt0.c2;
SELECT v0.c0, rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c0, rt0.c2 HAVING ((GROUP_CONCAT(v0.c0)) BETWEEN (INSTR(rt0.c2, rt0.c0)) AND (TOTAL(COUNT(GROUP_CONCAT(AVG(COUNT(v0.c0))))))) UNION ALL SELECT v0.c0, rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c0, rt0.c2 HAVING (NOT (((GROUP_CONCAT(v0.c0)) BETWEEN (INSTR(rt0.c2, rt0.c0)) AND (TOTAL(COUNT(GROUP_CONCAT(AVG(COUNT(v0.c0))))))))) UNION ALL SELECT ALL v0.c0, rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c0, rt0.c2 HAVING ((((GROUP_CONCAT(v0.c0)) BETWEEN (INSTR(rt0.c2, rt0.c0)) AND (TOTAL(COUNT(GROUP_CONCAT(AVG(COUNT(v0.c0)))))))) ISNULL);
SELECT ALL rt0.c1 FROM vt0, rt0;
SELECT rt0.c1 FROM vt0, rt0 WHERE (CASE WHEN (rt0.c0 IN ()) THEN (+ (rt0.c1)) ELSE CASE WHEN rt0.c1 THEN rt0.c0 ELSE vt0.c0 END END) UNION ALL SELECT rt0.c1 FROM vt0, rt0 WHERE ((NOT (CASE WHEN (rt0.c0 IN ()) THEN (+ (rt0.c1)) ELSE CASE WHEN rt0.c1 THEN rt0.c0 ELSE vt0.c0 END END))) UNION ALL SELECT rt0.c1 FROM vt0, rt0 WHERE (((CASE WHEN (rt0.c0 IN ()) THEN (+ (rt0.c1)) ELSE CASE WHEN rt0.c1 THEN rt0.c0 ELSE vt0.c0 END END) ISNULL));
SELECT ALL rt0.c1 FROM vt0, rt0;
SELECT DISTINCT * FROM v0 CROSS JOIN vt0 ON CASE WHEN ((rt0.c1) IS TRUE) THEN ((rt0.c1) NOTNULL) END LEFT OUTER JOIN rt0 ON ((CAST(rt0.c2 AS TEXT))>>(((v0.c0) BETWEEN (rt0.c1) AND (rt0.c0))));
SELECT DISTINCT * FROM v0 CROSS JOIN vt0 ON CASE WHEN ((rt0.c1) IS TRUE) THEN ((rt0.c1) NOTNULL) END LEFT OUTER JOIN rt0 ON ((CAST(rt0.c2 AS TEXT))>>(((v0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))) WHERE (vt0.c0) UNION SELECT DISTINCT * FROM v0 CROSS JOIN vt0 ON CASE WHEN ((rt0.c1) IS TRUE) THEN ((rt0.c1) NOTNULL) END LEFT OUTER JOIN rt0 ON ((CAST(rt0.c2 AS TEXT))>>(((v0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))) WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM v0 CROSS JOIN vt0 ON CASE WHEN ((rt0.c1) IS TRUE) THEN ((rt0.c1) NOTNULL) END LEFT OUTER JOIN rt0 ON ((CAST(rt0.c2 AS TEXT))>>(((v0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))) WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM v0 CROSS JOIN vt0 ON CASE WHEN ((rt0.c1) IS TRUE) THEN ((rt0.c1) NOTNULL) END LEFT OUTER JOIN rt0 ON ((CAST(rt0.c2 AS TEXT))>>(((v0.c0) BETWEEN (rt0.c1) AND (rt0.c0))));
SELECT rt0.c0, v0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c0, v0.c0;
SELECT ALL rt0.c0, v0.c0 FROM rt0, vt0, v0 WHERE (((((((rt0.c1)OR(rt0.c1)))OR(rt0.c1))) NOTNULL)) GROUP BY rt0.c0, v0.c0 UNION SELECT rt0.c0, v0.c0 FROM rt0, vt0, v0 WHERE ((NOT (((((((rt0.c1)OR(rt0.c1)))OR(rt0.c1))) NOTNULL)))) GROUP BY rt0.c0, v0.c0 UNION SELECT rt0.c0, v0.c0 FROM rt0, vt0, v0 WHERE (((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c1))) NOTNULL)) ISNULL)) GROUP BY rt0.c0, v0.c0;
SELECT rt0.c0, v0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c0, v0.c0;
SELECT rt0.c1, v0.c0, rt0.c0, vt0.c0 FROM rt0, v0, vt0 GROUP BY rt0.c1, v0.c0, rt0.c0, vt0.c0;
SELECT rt0.c1, v0.c0, rt0.c0, vt0.c0 FROM rt0, v0, vt0 GROUP BY rt0.c1, v0.c0, rt0.c0, vt0.c0 HAVING ((((((((TOTAL(TOTAL(GROUP_CONCAT(COUNT(SUM(COUNT(COUNT(*))))))))AND(TOTAL(TOTAL(rt0.c1)))))OR(MIN(AVG(rt0.c2)))))AND(MIN(COUNT(MIN(''))))))AND(CAST(rt0.c0 AS INTEGER))) UNION ALL SELECT rt0.c1, v0.c0, rt0.c0, vt0.c0 FROM rt0, v0, vt0 GROUP BY rt0.c1, v0.c0, rt0.c0, vt0.c0 HAVING (NOT (((((((((TOTAL(TOTAL(GROUP_CONCAT(COUNT(SUM(COUNT(COUNT(*))))))))AND(TOTAL(TOTAL(rt0.c1)))))OR(MIN(AVG(rt0.c2)))))AND(MIN(COUNT(MIN(''))))))AND(CAST(rt0.c0 AS INTEGER))))) UNION ALL SELECT rt0.c1, v0.c0, rt0.c0, vt0.c0 FROM rt0, v0, vt0 GROUP BY rt0.c1, v0.c0, rt0.c0, vt0.c0 HAVING ((((((((((TOTAL(TOTAL(GROUP_CONCAT(COUNT(SUM(COUNT(COUNT(*))))))))AND(TOTAL(TOTAL(rt0.c1)))))OR(MIN(AVG(rt0.c2)))))AND(MIN(COUNT(MIN(''))))))AND(CAST(rt0.c0 AS INTEGER)))) ISNULL);
SELECT ALL vt0.c0, rt0.c2, rt0.c0 FROM vt0, v0, rt0;
SELECT ALL vt0.c0, rt0.c2, rt0.c0 FROM vt0, v0, rt0 WHERE (((MAX(rt0.c2, v0.c0))>>(((((rt0.c1)OR(rt0.c1)))AND(vt0.c0))))) UNION ALL SELECT vt0.c0, rt0.c2, rt0.c0 FROM vt0, v0, rt0 WHERE ((NOT (((MAX(rt0.c2, v0.c0))>>(((((rt0.c1)OR(rt0.c1)))AND(vt0.c0))))))) UNION ALL SELECT vt0.c0, rt0.c2, rt0.c0 FROM vt0, v0, rt0 WHERE (((((MAX(rt0.c2, v0.c0))>>(((((rt0.c1)OR(rt0.c1)))AND(vt0.c0))))) ISNULL));
SELECT ALL vt0.c0, rt0.c2, rt0.c0 FROM vt0, v0, rt0;
SELECT DISTINCT rt0.c2 FROM rt0, vt0;
SELECT DISTINCT rt0.c2 FROM rt0, vt0 WHERE (0.6938884386992686) UNION SELECT DISTINCT rt0.c2 FROM rt0, vt0 WHERE ((NOT (0.6938884386992686))) UNION SELECT DISTINCT rt0.c2 FROM rt0, vt0 WHERE (((0.6938884386992686) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0, vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (LOWER(DISTINCT ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (LOWER(DISTINCT ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((LOWER(DISTINCT ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING MAX(((rt0.c2)LIKE(rt0.c0))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (MAX(((rt0.c2)LIKE(rt0.c0))))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((MAX(((rt0.c2)LIKE(rt0.c0)))) ISNULL);
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING MAX(((rt0.c2)LIKE(rt0.c0))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (MAX(((rt0.c2)LIKE(rt0.c0))))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((MAX(((rt0.c2)LIKE(rt0.c0)))) ISNULL);
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL * FROM vt0, rt0, v0;
SELECT ALL * FROM vt0, rt0, v0 WHERE (vt0.c0) UNION ALL SELECT ALL * FROM vt0, rt0, v0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT * FROM vt0, rt0, v0 WHERE (((vt0.c0) ISNULL));
SELECT ALL * FROM vt0, rt0, v0;
SELECT DISTINCT rt0.c0, vt0.c0, v0.c0, rt0.c2 FROM v0, vt0, rt0;
SELECT DISTINCT rt0.c0, vt0.c0, v0.c0, rt0.c2 FROM v0 NOT INDEXED, vt0, rt0 WHERE (json(TYPEOF(rt0.c1))) UNION SELECT DISTINCT rt0.c0, vt0.c0, v0.c0, rt0.c2 FROM v0, vt0, rt0 WHERE ((NOT (json(TYPEOF(rt0.c1))))) UNION SELECT DISTINCT rt0.c0, vt0.c0, v0.c0, rt0.c2 FROM v0, vt0, rt0 WHERE (((json(TYPEOF(rt0.c1))) ISNULL));
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (rt0.c0) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (rt0.c0))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (((rt0.c0) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2, v0.c0;
SELECT ALL rt0.c0, rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2, v0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c0, rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2, v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c0, rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2, v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0, rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2, v0.c0;
SELECT ALL rt0.c0, rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2, v0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c0, rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2, v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c0, rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2, v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0, rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2, v0.c0;
SELECT ALL * FROM vt0, rt0, v0;
SELECT * FROM vt0, rt0, v0 WHERE ((((((v0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c0))))<<(((vt0.c0)*(vt0.c0))))) UNION ALL SELECT * FROM vt0, rt0, v0 WHERE ((NOT ((((((v0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c0))))<<(((vt0.c0)*(vt0.c0))))))) UNION ALL SELECT ALL * FROM vt0, rt0, v0 WHERE ((((((((v0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c0))))<<(((vt0.c0)*(vt0.c0))))) ISNULL));
SELECT ALL * FROM vt0, rt0, v0;
SELECT DISTINCT rt0.c1 FROM rt0, v0;
SELECT DISTINCT rt0.c1 FROM rt0, v0 WHERE ((((((rt0.c0)+(rt0.c2))))=((((((rt0.c1)OR(rt0.c0)))OR(x'')))))) UNION SELECT DISTINCT rt0.c1 FROM rt0, v0 WHERE ((NOT ((((((rt0.c0)+(rt0.c2))))==((((((rt0.c1)OR(rt0.c0)))OR(x'')))))))) UNION SELECT DISTINCT rt0.c1 FROM rt0, v0 WHERE ((((((((rt0.c0)+(rt0.c2))))=((((((rt0.c1)OR(rt0.c0)))OR(x'')))))) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0, v0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM v0, rt0 WHERE (((((rt0.c2)>>(rt0.c0))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM v0, rt0 WHERE ((NOT (((((rt0.c2)>>(rt0.c0))) ISNULL)))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM v0, rt0 WHERE (((((((rt0.c2)>>(rt0.c0))) ISNULL)) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING v0.c0 UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((v0.c0) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING v0.c0 UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((v0.c0) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (x'2b99') UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (x'2b99'))) UNION ALL SELECT ALL * FROM rt0 WHERE (((x'2b99') ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (UNLIKELY(DISTINCT (v0.c0 IN ()))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (UNLIKELY(DISTINCT (v0.c0 IN ()))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((UNLIKELY(DISTINCT (v0.c0 IN ()))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT rt0.c0, rt0.c2, vt0.c0, rt0.c1, v0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c0, rt0.c2, vt0.c0, rt0.c1, v0.c0;
SELECT ALL rt0.c0, rt0.c2, vt0.c0, rt0.c1, v0.c0 FROM rt0, vt0, v0 WHERE ((NOT ((+ (rt0.c1))))) GROUP BY rt0.c0, rt0.c2, vt0.c0, rt0.c1, v0.c0 UNION SELECT rt0.c0, rt0.c2, vt0.c0, rt0.c1, v0.c0 FROM rt0, vt0, v0 WHERE ((NOT ((NOT ((+ (rt0.c1))))))) GROUP BY rt0.c0, rt0.c2, vt0.c0, rt0.c1, v0.c0 UNION SELECT ALL rt0.c0, rt0.c2, vt0.c0, rt0.c1, v0.c0 FROM rt0, vt0, v0 WHERE ((((NOT ((+ (rt0.c1))))) ISNULL)) GROUP BY rt0.c0, rt0.c2, vt0.c0, rt0.c1, v0.c0;
SELECT rt0.c0, rt0.c2, vt0.c0, rt0.c1, v0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c0, rt0.c2, vt0.c0, rt0.c1, v0.c0;
SELECT rt0.c0, rt0.c1 FROM v0, vt0, rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM v0, vt0, rt0 GROUP BY rt0.c0, rt0.c1 HAVING GROUP_CONCAT(MAX(vt0.c0)) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM v0, vt0, rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (GROUP_CONCAT(MAX(vt0.c0)))) UNION ALL SELECT rt0.c0, rt0.c1 FROM v0, vt0, rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((GROUP_CONCAT(MAX(vt0.c0))) ISNULL);
SELECT ALL * FROM rt0, vt0, v0;
SELECT * FROM rt0, vt0, v0 WHERE ((- (CASE rt0.c2  WHEN vt0.c0 THEN vt0.c0 END))) UNION ALL SELECT * FROM rt0, vt0, v0 WHERE ((NOT ((- (CASE rt0.c2  WHEN vt0.c0 THEN vt0.c0 END))))) UNION ALL SELECT * FROM rt0, vt0, v0 WHERE ((((- (CASE rt0.c2  WHEN vt0.c0 THEN vt0.c0 END))) ISNULL));
SELECT ALL * FROM rt0, vt0, v0;
SELECT DISTINCT * FROM vt0, rt0, v0;
SELECT DISTINCT * FROM vt0, rt0, v0 WHERE (((LAST_INSERT_ROWID())>>(v0.c0))) UNION SELECT DISTINCT * FROM vt0, rt0, v0 WHERE ((NOT (((LAST_INSERT_ROWID())>>(v0.c0))))) UNION SELECT DISTINCT * FROM vt0, rt0, v0 WHERE (((((LAST_INSERT_ROWID())>>(v0.c0))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0, v0;
SELECT rt0.c0, v0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, v0.c0, rt0.c1;
SELECT ALL rt0.c0, v0.c0, rt0.c1 FROM rt0, v0 WHERE (((rt0.c2 COLLATE NOCASE)&((~ (rt0.c2))))) GROUP BY rt0.c0, v0.c0, rt0.c1 UNION SELECT ALL rt0.c0, v0.c0, rt0.c1 FROM rt0, v0 WHERE ((NOT (((rt0.c2 COLLATE NOCASE)&((~ (rt0.c2))))))) GROUP BY rt0.c0, v0.c0, rt0.c1 UNION SELECT rt0.c0, v0.c0, rt0.c1 FROM rt0, v0 NOT INDEXED WHERE (((((rt0.c2 COLLATE NOCASE)&((~ (rt0.c2))))) ISNULL)) GROUP BY rt0.c0, v0.c0, rt0.c1;
SELECT rt0.c0, v0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, v0.c0, rt0.c1;
SELECT rt0.c1, v0.c0, rt0.c0 FROM rt0, v0, vt0 GROUP BY rt0.c1, v0.c0, rt0.c0;
SELECT ALL rt0.c1, v0.c0, rt0.c0 FROM rt0, v0, vt0 GROUP BY rt0.c1, v0.c0, rt0.c0 HAVING ((TOTAL('')) NOT BETWEEN (MIN(rt0.c1)) AND (((GROUP_CONCAT(AVG(SUM(rt0.c1)))) NOT NULL))) UNION ALL SELECT ALL rt0.c1, v0.c0, rt0.c0 FROM rt0, v0, vt0 GROUP BY rt0.c1, v0.c0, rt0.c0 HAVING (NOT (((TOTAL('')) NOT BETWEEN (MIN(rt0.c1)) AND (((GROUP_CONCAT(AVG(SUM(rt0.c1)))) NOT NULL))))) UNION ALL SELECT rt0.c1, v0.c0, rt0.c0 FROM rt0, v0, vt0 GROUP BY rt0.c1, v0.c0, rt0.c0 HAVING ((((TOTAL('')) NOT BETWEEN (MIN(rt0.c1)) AND (((GROUP_CONCAT(AVG(SUM(rt0.c1)))) NOT NULL)))) ISNULL);
SELECT rt0.c2, rt0.c1 FROM vt0, rt0;
SELECT rt0.c2, rt0.c1 FROM vt0, rt0 WHERE (((CAST(rt0.c2 AS TEXT)) NOTNULL)) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM vt0, rt0 WHERE ((NOT (((CAST(rt0.c2 AS TEXT)) NOTNULL)))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM vt0, rt0 WHERE (((((CAST(rt0.c2 AS TEXT)) NOTNULL)) ISNULL));
SELECT rt0.c2, rt0.c1 FROM vt0, rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((+ (rt0.c1))))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((NOT ((+ (rt0.c1))))))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE ((((NOT ((+ (rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 WHERE (IFNULL(LIKE(v0.c0, 'V_', '3'), ((vt0.c0)GLOB(v0.c0)))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 WHERE ((NOT (IFNULL(LIKE(v0.c0, 'V_', '3'), ((vt0.c0)GLOB(v0.c0)))))) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM v0, vt0 WHERE (((IFNULL(LIKE(v0.c0, 'V_', '3'), ((vt0.c0)GLOB(v0.c0)))) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt0.c0;
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE ((NOT (CAST(v0.c0 AS REAL)))) UNION ALL SELECT * FROM v0 WHERE ((NOT ((NOT (CAST(v0.c0 AS REAL)))))) UNION ALL SELECT ALL * FROM v0 WHERE ((((NOT (CAST(v0.c0 AS REAL)))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((((v0.c0) IS FALSE))>=(((v0.c0) NOT NULL)))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((v0.c0) IS FALSE))>=(((v0.c0) NOT NULL)))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((v0.c0) IS FALSE))>=(((v0.c0) NOT NULL)))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 WHERE (x'5ccb') GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 WHERE ((NOT (x'5ccb'))) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM v0, vt0 WHERE (((x'5ccb') ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING GROUP_CONCAT(SUM(v0.c0)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (GROUP_CONCAT(SUM(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((GROUP_CONCAT(SUM(v0.c0))) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (CASE WHEN (v0.c0 IN ()) THEN ((v0.c0)<=(v0.c0)) ELSE ((((v0.c0)AND(v0.c0)))OR(v0.c0)) END) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CASE WHEN (v0.c0 IN ()) THEN ((v0.c0)<=(v0.c0)) ELSE ((((v0.c0)AND(v0.c0)))OR(v0.c0)) END))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((CASE WHEN (v0.c0 IN ()) THEN ((v0.c0)<=(v0.c0)) ELSE ((((v0.c0)AND(v0.c0)))OR(v0.c0)) END) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM vt0, v0, rt0;
SELECT DISTINCT v0.c0 FROM vt0, v0, rt0 WHERE ((rt0.c2 IN ())) UNION SELECT DISTINCT v0.c0 FROM vt0, v0, rt0 WHERE ((NOT ((rt0.c2 IN ())))) UNION SELECT DISTINCT v0.c0 FROM vt0, v0, rt0 WHERE ((((rt0.c2 IN ())) ISNULL));
SELECT DISTINCT v0.c0 FROM vt0, v0, rt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((CAST(v0.c0 AS REAL))<<(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((CAST(v0.c0 AS REAL))<<(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((CAST(v0.c0 AS REAL))<<(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c0, v0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c2;
SELECT rt0.c0, v0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c2 HAVING x'f48e' UNION ALL SELECT rt0.c0, v0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c2 HAVING (NOT (x'f48e')) UNION ALL SELECT ALL rt0.c0, v0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c2 HAVING ((x'f48e') ISNULL);
SELECT ALL rt0.c0, v0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c2;
SELECT rt0.c0, v0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c2 HAVING x'f48e' UNION ALL SELECT rt0.c0, v0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c2 HAVING (NOT (x'f48e')) UNION ALL SELECT ALL rt0.c0, v0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c2 HAVING ((x'f48e') ISNULL);
SELECT ALL rt0.c0, v0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c2;
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (-1909494689) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (-1909494689))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((-1909494689) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT rt0.c2, rt0.c1, vt0.c0 FROM rt0, vt0, v0;
SELECT DISTINCT rt0.c2, rt0.c1, vt0.c0 FROM rt0, vt0, v0 WHERE ((((vt0.c0) NOTNULL) IN ())) UNION SELECT DISTINCT rt0.c2, rt0.c1, vt0.c0 FROM rt0, vt0, v0 WHERE ((NOT ((((vt0.c0) NOTNULL) IN ())))) UNION SELECT DISTINCT rt0.c2, rt0.c1, vt0.c0 FROM rt0, vt0, v0 WHERE ((((((vt0.c0) NOTNULL) IN ())) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, vt0.c0 FROM rt0, vt0, v0;
SELECT vt0.c0, v0.c0 FROM v0 FULL OUTER JOIN vt0 ON ((rt0.c1 COLLATE RTRIM) BETWEEN (((rt0.c0)IS(rt0.c2))) AND (((rt0.c2)+(0.5742829547955383)))) FULL OUTER JOIN rt0 ON ((((((((rt0.c1 COLLATE BINARY)AND((((rt0.c0, v0.c0, rt0.c2)) NOT BETWEEN ((rt0.c1, v0.c0, rt0.c2)) AND ((vt0.c0, rt0.c1, rt0.c1))))))OR((NOT (rt0.c2)))))OR(((vt0.c0)<<(vt0.c0)))))AND(((rt0.c2) ISNULL))) GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0, rt0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0, rt0 GROUP BY vt0.c0, v0.c0 HAVING ((((COUNT(rt0.c0))OR(MAX(rt0.c0))))AND(v0.c0)) COLLATE NOCASE UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0, rt0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (((((COUNT(rt0.c0))OR(MAX(rt0.c0))))AND(v0.c0)) COLLATE NOCASE)) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, v0, rt0 GROUP BY vt0.c0, v0.c0 HAVING ((((((COUNT(rt0.c0))OR(MAX(rt0.c0))))AND(v0.c0)) COLLATE NOCASE) ISNULL);
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0, rt0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0, rt0 GROUP BY vt0.c0, v0.c0 HAVING ((((COUNT(rt0.c0))OR(MAX(rt0.c0))))AND(v0.c0)) COLLATE NOCASE UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0, rt0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (((((COUNT(rt0.c0))OR(MAX(rt0.c0))))AND(v0.c0)) COLLATE NOCASE)) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, v0, rt0 GROUP BY vt0.c0, v0.c0 HAVING ((((((COUNT(rt0.c0))OR(MAX(rt0.c0))))AND(v0.c0)) COLLATE NOCASE) ISNULL);
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0, rt0 GROUP BY vt0.c0, v0.c0;
SELECT rt0.c1, vt0.c0, rt0.c0 FROM rt0, v0, vt0;
SELECT ALL rt0.c1, vt0.c0, rt0.c0 FROM rt0, v0, vt0 WHERE ('') UNION ALL SELECT ALL rt0.c1, vt0.c0, rt0.c0 FROM rt0, v0, vt0 WHERE ((NOT (''))) UNION ALL SELECT ALL rt0.c1, vt0.c0, rt0.c0 FROM rt0, v0, vt0 WHERE ((('') ISNULL));
SELECT rt0.c1, vt0.c0, rt0.c0 FROM rt0, v0, vt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE ((((((rt0.c1, vt0.c0, rt0.c1)) BETWEEN ((vt0.c0, vt0.c0, rt0.c1)) AND ((vt0.c0, rt0.c2, rt0.c2)))) NOT BETWEEN (HEX(rt0.c2)) AND (rt0.c1 COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT ((((((rt0.c1, vt0.c0, rt0.c1)) BETWEEN ((vt0.c0, vt0.c0, rt0.c1)) AND ((vt0.c0, rt0.c2, rt0.c2)))) NOT BETWEEN (HEX(rt0.c2)) AND (rt0.c1 COLLATE RTRIM))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((((((((rt0.c1, vt0.c0, rt0.c1)) BETWEEN ((vt0.c0, vt0.c0, rt0.c1)) AND ((vt0.c0, rt0.c2, rt0.c2)))) NOT BETWEEN (HEX(rt0.c2)) AND (rt0.c1 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT ALL rt0.c0, v0.c0, rt0.c2 FROM v0, rt0, vt0 GROUP BY rt0.c0, v0.c0, rt0.c2;
SELECT rt0.c0, v0.c0, rt0.c2 FROM v0, rt0, vt0 WHERE (((((v0.c0)IS(rt0.c0))) IS TRUE)) GROUP BY rt0.c0, v0.c0, rt0.c2 UNION SELECT ALL rt0.c0, v0.c0, rt0.c2 FROM v0, rt0, vt0 WHERE ((NOT (((((v0.c0)IS(rt0.c0))) IS TRUE)))) GROUP BY rt0.c0, v0.c0, rt0.c2 UNION SELECT ALL rt0.c0, v0.c0, rt0.c2 FROM v0, rt0, vt0 WHERE (((((((v0.c0)IS(rt0.c0))) IS TRUE)) ISNULL)) GROUP BY rt0.c0, v0.c0, rt0.c2;
SELECT ALL rt0.c0, v0.c0, rt0.c2 FROM v0, rt0, vt0 GROUP BY rt0.c0, v0.c0, rt0.c2;
SELECT ALL vt0.c0, v0.c0 FROM v0 INNER JOIN vt0 ON (CASE WHEN rt0.c2 THEN rt0.c0 END IN (((((((((v0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(rt0.c2)))OR(rt0.c0)), ((((((((vt0.c0)AND(rt0.c0)))OR(vt0.c0)))OR(NULL)))AND(rt0.c1)))) CROSS JOIN rt0 ON (('3䎘') BETWEEN (((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))) AND (RTRIM(NULL))) GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0 INNER JOIN vt0 ON (CASE WHEN rt0.c2 THEN rt0.c0 END IN (((((((((v0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(rt0.c2)))OR(rt0.c0)), ((((((((vt0.c0)AND(rt0.c0)))OR(vt0.c0)))OR(NULL)))AND(rt0.c1)))) CROSS JOIN rt0 ON (('3䎘') BETWEEN (((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))) AND (RTRIM(NULL))) GROUP BY vt0.c0, v0.c0 HAVING '538630367' UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0 INNER JOIN vt0 ON (CASE WHEN rt0.c2 THEN rt0.c0 END IN (((((((((v0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(rt0.c2)))OR(rt0.c0)), ((((((((vt0.c0)AND(rt0.c0)))OR(vt0.c0)))OR(NULL)))AND(rt0.c1)))) CROSS JOIN rt0 ON (('3䎘') BETWEEN (((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))) AND (RTRIM(NULL))) GROUP BY vt0.c0, v0.c0 HAVING (NOT ('538630367')) UNION ALL SELECT vt0.c0, v0.c0 FROM v0 INNER JOIN vt0 ON (CASE WHEN rt0.c2 THEN rt0.c0 END IN (((((((((v0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(rt0.c2)))OR(rt0.c0)), ((((((((vt0.c0)AND(rt0.c0)))OR(vt0.c0)))OR(NULL)))AND(rt0.c1)))) CROSS JOIN rt0 ON (('3䎘') BETWEEN (((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))) AND (RTRIM(NULL))) GROUP BY vt0.c0, v0.c0 HAVING (('538630367') ISNULL);
SELECT ALL vt0.c0, v0.c0 FROM v0 INNER JOIN vt0 ON (CASE WHEN rt0.c2 THEN rt0.c0 END IN (((((((((v0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(rt0.c2)))OR(rt0.c0)), ((((((((vt0.c0)AND(rt0.c0)))OR(vt0.c0)))OR(NULL)))AND(rt0.c1)))) CROSS JOIN rt0 ON (('3䎘') BETWEEN (((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))) AND (RTRIM(NULL))) GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0 INNER JOIN vt0 ON (CASE WHEN rt0.c2 THEN rt0.c0 END IN (((((((((v0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(rt0.c2)))OR(rt0.c0)), ((((((((vt0.c0)AND(rt0.c0)))OR(vt0.c0)))OR(NULL)))AND(rt0.c1)))) CROSS JOIN rt0 ON (('3䎘') BETWEEN (((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))) AND (RTRIM(NULL))) GROUP BY vt0.c0, v0.c0 HAVING '538630367' UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0 INNER JOIN vt0 ON (CASE WHEN rt0.c2 THEN rt0.c0 END IN (((((((((v0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(rt0.c2)))OR(rt0.c0)), ((((((((vt0.c0)AND(rt0.c0)))OR(vt0.c0)))OR(NULL)))AND(rt0.c1)))) CROSS JOIN rt0 ON (('3䎘') BETWEEN (((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))) AND (RTRIM(NULL))) GROUP BY vt0.c0, v0.c0 HAVING (NOT ('538630367')) UNION ALL SELECT vt0.c0, v0.c0 FROM v0 INNER JOIN vt0 ON (CASE WHEN rt0.c2 THEN rt0.c0 END IN (((((((((v0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(rt0.c2)))OR(rt0.c0)), ((((((((vt0.c0)AND(rt0.c0)))OR(vt0.c0)))OR(NULL)))AND(rt0.c1)))) CROSS JOIN rt0 ON (('3䎘') BETWEEN (((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))) AND (RTRIM(NULL))) GROUP BY vt0.c0, v0.c0 HAVING (('538630367') ISNULL);
SELECT ALL vt0.c0, v0.c0 FROM v0 INNER JOIN vt0 ON (CASE WHEN rt0.c2 THEN rt0.c0 END IN (((((((((v0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(rt0.c2)))OR(rt0.c0)), ((((((((vt0.c0)AND(rt0.c0)))OR(vt0.c0)))OR(NULL)))AND(rt0.c1)))) CROSS JOIN rt0 ON (('3䎘') BETWEEN (((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))) AND (RTRIM(NULL))) GROUP BY vt0.c0, v0.c0;
SELECT ALL v0.c0 FROM rt0, v0, vt0;
SELECT ALL v0.c0 FROM rt0, v0, vt0 WHERE (rt0.c0) UNION ALL SELECT v0.c0 FROM rt0, v0, vt0 WHERE ((NOT (rt0.c0))) UNION ALL SELECT ALL v0.c0 FROM rt0, v0, vt0 WHERE (((rt0.c0) ISNULL));
SELECT ALL v0.c0 FROM rt0, v0, vt0;
SELECT DISTINCT * FROM rt0, v0, vt0;
SELECT DISTINCT * FROM rt0, v0, vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((~ (v0.c0)))) AND ((((((vt0.c0)OR(rt0.c0)))OR(rt0.c2)))))) UNION SELECT DISTINCT * FROM rt0, v0, vt0 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN (((~ (v0.c0)))) AND ((((((vt0.c0)OR(rt0.c0)))OR(rt0.c2)))))))) UNION SELECT DISTINCT * FROM rt0, v0, vt0 WHERE ((((((vt0.c0)) NOT BETWEEN (((~ (v0.c0)))) AND ((((((vt0.c0)OR(rt0.c0)))OR(rt0.c2)))))) ISNULL));
SELECT DISTINCT * FROM rt0, v0, vt0;
SELECT rt0.c0, vt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, rt0.c1;
SELECT ALL rt0.c0, vt0.c0, rt0.c1 FROM vt0, rt0 WHERE (rt0.c2) GROUP BY rt0.c0, vt0.c0, rt0.c1 UNION SELECT rt0.c0, vt0.c0, rt0.c1 FROM vt0, rt0 WHERE ((NOT (rt0.c2))) GROUP BY rt0.c0, vt0.c0, rt0.c1 UNION SELECT rt0.c0, vt0.c0, rt0.c1 FROM vt0, rt0 WHERE (((rt0.c2) ISNULL)) GROUP BY rt0.c0, vt0.c0, rt0.c1;
SELECT rt0.c0, vt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, rt0.c1;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING SUM(TOTAL(v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (SUM(TOTAL(v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((SUM(TOTAL(v0.c0))) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE ((((vt0.c0)*(vt0.c0)) IN ('927523718'))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((((vt0.c0)*(vt0.c0)) IN ('927523718'))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)*(vt0.c0)) IN ('927523718'))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((NOT (vt0.c0))))<((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((NOT (vt0.c0))))<((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((NOT (vt0.c0))))<((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0)) BETWEEN ((((((v0.c0)OR(v0.c0)))OR(v0.c0)), (0.430208089921158 IN ()), CAST(v0.c0 AS TEXT))) AND ((((v0.c0)==(v0.c0)), (((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))<((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))), ((((v0.c0)OR(NULL)))AND(x'')))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((((v0.c0, v0.c0, v0.c0)) BETWEEN ((((((v0.c0)OR(v0.c0)))OR(v0.c0)), (0.430208089921158 IN ()), CAST(v0.c0 AS TEXT))) AND ((((v0.c0)==(v0.c0)), (((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))<((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))), ((((v0.c0)OR(NULL)))AND(x'')))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((((v0.c0, v0.c0, v0.c0)) BETWEEN ((((((v0.c0)OR(v0.c0)))OR(v0.c0)), (0.430208089921158 IN ()), CAST(v0.c0 AS TEXT))) AND ((((v0.c0)=(v0.c0)), (((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))<((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))), ((((v0.c0)OR(NULL)))AND(x'')))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING MIN((- (rt0.c1))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (MIN((- (rt0.c1))))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((MIN((- (rt0.c1)))) ISNULL);
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING MIN((- (rt0.c1))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (MIN((- (rt0.c1))))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((MIN((- (rt0.c1)))) ISNULL);
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL * FROM rt0, vt0, v0;
SELECT ALL * FROM rt0, vt0, v0 WHERE (((LIKE(rt0.c0, rt0.c1, 'b'))<<(((rt0.c1)-(rt0.c2))))) UNION ALL SELECT ALL * FROM rt0 NOT INDEXED, vt0, v0 WHERE ((NOT (((LIKE(rt0.c0, rt0.c1, 'b'))<<(((rt0.c1)-(rt0.c2))))))) UNION ALL SELECT * FROM rt0, vt0, v0 WHERE (((((LIKE(rt0.c0, rt0.c1, 'b'))<<(((rt0.c1)-(rt0.c2))))) ISNULL));
SELECT ALL * FROM rt0, vt0, v0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((x'5a0d' IN ())) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((x'5a0d' IN ())))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((x'5a0d' IN ())) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0 NATURAL JOIN vt0 GROUP BY vt0.c0, rt0.c1, rt0.c0, rt0.c2;
SELECT vt0.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0 NATURAL JOIN vt0 WHERE (((CAST(rt0.c0 AS INTEGER))OR(((rt0.c1) ISNULL)))) GROUP BY vt0.c0, rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL vt0.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0 NATURAL JOIN vt0 WHERE ((NOT (((CAST(rt0.c0 AS INTEGER))OR(((rt0.c1) ISNULL)))))) GROUP BY vt0.c0, rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL vt0.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0 NATURAL JOIN vt0 WHERE (((((CAST(rt0.c0 AS INTEGER))OR(((rt0.c1) ISNULL)))) ISNULL)) GROUP BY vt0.c0, rt0.c1, rt0.c0, rt0.c2;
SELECT vt0.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0 NATURAL JOIN vt0 GROUP BY vt0.c0, rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c2, vt0.c0, v0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c2, vt0.c0, v0.c0;
SELECT rt0.c2, vt0.c0, v0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c2, vt0.c0, v0.c0 HAVING v0.c0 UNION ALL SELECT rt0.c2, vt0.c0, v0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c2, vt0.c0, v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT rt0.c2, vt0.c0, v0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c2, vt0.c0, v0.c0 HAVING ((v0.c0) ISNULL);
SELECT rt0.c2, vt0.c0, v0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c2, vt0.c0, v0.c0;
SELECT rt0.c2, vt0.c0, v0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c2, vt0.c0, v0.c0 HAVING v0.c0 UNION ALL SELECT rt0.c2, vt0.c0, v0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c2, vt0.c0, v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT rt0.c2, vt0.c0, v0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c2, vt0.c0, v0.c0 HAVING ((v0.c0) ISNULL);
SELECT rt0.c2, vt0.c0, v0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c2, vt0.c0, v0.c0;
SELECT * FROM v0;
SELECT * FROM v0 WHERE (CASE ((v0.c0)<=(v0.c0))  WHEN CAST(v0.c0 AS REAL) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) END) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (CASE ((v0.c0)<=(v0.c0))  WHEN CAST(v0.c0 AS REAL) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) END))) UNION ALL SELECT ALL * FROM v0 WHERE (((CASE ((v0.c0)<=(v0.c0))  WHEN CAST(v0.c0 AS REAL) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) END) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0, v0, vt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0, v0, vt0 WHERE ((~ (((((rt0.c2)AND(vt0.c0)))OR(rt0.c2))))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0, v0, vt0 WHERE ((NOT ((~ (((((rt0.c2)AND(vt0.c0)))OR(rt0.c2))))))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0, v0, vt0 WHERE ((((~ (((((rt0.c2)AND(vt0.c0)))OR(rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0, v0, vt0;
SELECT rt0.c0, vt0.c0, rt0.c1 FROM vt0, v0, rt0 GROUP BY rt0.c0, vt0.c0, rt0.c1;
SELECT rt0.c0, vt0.c0, rt0.c1 FROM vt0, v0, rt0 WHERE (((NOT (rt0.c2)) IN (RTRIM(rt0.c1), ((vt0.c0)*(rt0.c0))))) GROUP BY rt0.c0, vt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, vt0.c0, rt0.c1 FROM vt0, v0, rt0 WHERE ((NOT (((NOT (rt0.c2)) IN (RTRIM(rt0.c1), ((vt0.c0)*(rt0.c0))))))) GROUP BY rt0.c0, vt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, vt0.c0, rt0.c1 FROM vt0, v0, rt0 WHERE (((((NOT (rt0.c2)) IN (RTRIM(rt0.c1), ((vt0.c0)*(rt0.c0))))) ISNULL)) GROUP BY rt0.c0, vt0.c0, rt0.c1;
SELECT rt0.c0, vt0.c0, rt0.c1 FROM vt0, v0, rt0 GROUP BY rt0.c0, vt0.c0, rt0.c1;
SELECT ALL rt0.c1, vt0.c0, rt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON ((rt0.c1)GLOB(rt0.c2)) COLLATE BINARY GROUP BY rt0.c1, vt0.c0, rt0.c0;
SELECT rt0.c1, vt0.c0, rt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON ((rt0.c1)GLOB(rt0.c2)) COLLATE BINARY GROUP BY rt0.c1, vt0.c0, rt0.c0 HAVING ((MIN(rt0.c2)) NOT NULL) UNION ALL SELECT rt0.c1, vt0.c0, rt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON ((rt0.c1)GLOB(rt0.c2)) COLLATE BINARY GROUP BY rt0.c1, vt0.c0, rt0.c0 HAVING (NOT (((MIN(rt0.c2)) NOT NULL))) UNION ALL SELECT rt0.c1, vt0.c0, rt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON ((rt0.c1)GLOB(rt0.c2)) COLLATE BINARY GROUP BY rt0.c1, vt0.c0, rt0.c0 HAVING ((((MIN(rt0.c2)) NOT NULL)) ISNULL);
SELECT ALL rt0.c1, vt0.c0, rt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON ((rt0.c1)GLOB(rt0.c2)) COLLATE BINARY GROUP BY rt0.c1, vt0.c0, rt0.c0;
SELECT rt0.c1, vt0.c0, rt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON ((rt0.c1)GLOB(rt0.c2)) COLLATE BINARY GROUP BY rt0.c1, vt0.c0, rt0.c0 HAVING ((MIN(rt0.c2)) NOT NULL) UNION ALL SELECT rt0.c1, vt0.c0, rt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON ((rt0.c1)GLOB(rt0.c2)) COLLATE BINARY GROUP BY rt0.c1, vt0.c0, rt0.c0 HAVING (NOT (((MIN(rt0.c2)) NOT NULL))) UNION ALL SELECT rt0.c1, vt0.c0, rt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON ((rt0.c1)GLOB(rt0.c2)) COLLATE BINARY GROUP BY rt0.c1, vt0.c0, rt0.c0 HAVING ((((MIN(rt0.c2)) NOT NULL)) ISNULL);
SELECT ALL rt0.c1, vt0.c0, rt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON ((rt0.c1)GLOB(rt0.c2)) COLLATE BINARY GROUP BY rt0.c1, vt0.c0, rt0.c0;
SELECT vt0.c0, rt0.c1, rt0.c0, v0.c0 FROM rt0, vt0 NOT INDEXED, v0;
SELECT vt0.c0, rt0.c1, rt0.c0, v0.c0 FROM rt0, vt0, v0 WHERE (CASE (NOT (vt0.c0))  WHEN CASE rt0.c0  WHEN v0.c0 THEN v0.c0 END THEN (rt0.c1 IN ()) WHEN rt0.c1 COLLATE NOCASE THEN ((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) WHEN v0.c0 THEN (NOT (rt0.c1)) ELSE ((v0.c0)<>('-514244607')) END) UNION ALL SELECT ALL vt0.c0, rt0.c1, rt0.c0, v0.c0 FROM rt0, vt0, v0 WHERE ((NOT (CASE (NOT (vt0.c0))  WHEN CASE rt0.c0  WHEN v0.c0 THEN v0.c0 END THEN (rt0.c1 IN ()) WHEN rt0.c1 COLLATE NOCASE THEN ((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) WHEN v0.c0 THEN (NOT (rt0.c1)) ELSE ((v0.c0)<>('-514244607')) END))) UNION ALL SELECT ALL vt0.c0, rt0.c1, rt0.c0, v0.c0 FROM rt0, vt0, v0 WHERE (((CASE (NOT (vt0.c0))  WHEN CASE rt0.c0  WHEN v0.c0 THEN v0.c0 END THEN (rt0.c1 IN ()) WHEN rt0.c1 COLLATE NOCASE THEN ((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) WHEN v0.c0 THEN (NOT (rt0.c1)) ELSE ((v0.c0)<>('-514244607')) END) ISNULL));
SELECT vt0.c0, rt0.c1, rt0.c0, v0.c0 FROM rt0, vt0 NOT INDEXED, v0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (IFNULL(((vt0.c0)+(vt0.c0)), ((vt0.c0)GLOB(vt0.c0)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (IFNULL(((vt0.c0)+(vt0.c0)), ((vt0.c0)GLOB(vt0.c0)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((IFNULL(((vt0.c0)+(vt0.c0)), ((vt0.c0)GLOB(vt0.c0)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, rt0 WHERE (CASE (rt0.c2 IN (rt0.c0))  WHEN (~ (rt0.c0)) THEN ((((rt0.c2)AND(rt0.c1)))OR(vt0.c0)) WHEN ((rt0.c0) ISNULL) THEN (((rt0.c2))<=((vt0.c0))) WHEN LIKELY(DISTINCT rt0.c2) THEN '' ELSE '' END) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, rt0 WHERE ((NOT (CASE (rt0.c2 IN (rt0.c0))  WHEN (~ (rt0.c0)) THEN ((((rt0.c2)AND(rt0.c1)))OR(vt0.c0)) WHEN ((rt0.c0) ISNULL) THEN (((rt0.c2))<=((vt0.c0))) WHEN LIKELY(DISTINCT rt0.c2) THEN '' ELSE '' END))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, rt0 WHERE (((CASE (rt0.c2 IN (rt0.c0))  WHEN (~ (rt0.c0)) THEN ((((rt0.c2)AND(rt0.c1)))OR(vt0.c0)) WHEN ((rt0.c0) ISNULL) THEN (((rt0.c2))<=((vt0.c0))) WHEN LIKELY(DISTINCT rt0.c2) THEN '' ELSE '' END) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING 1808472754 COLLATE NOCASE UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (1808472754 COLLATE NOCASE)) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING ((1808472754 COLLATE NOCASE) ISNULL);
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING 1808472754 COLLATE NOCASE UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (1808472754 COLLATE NOCASE)) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING ((1808472754 COLLATE NOCASE) ISNULL);
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt0 ON (((((x'318a')<=(v0.c0)), (rt0.c0 IN ()), ((rt0.c2) BETWEEN (-1303263273) AND (v0.c0))))<>((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END, ((rt0.c0)+(rt0.c2)), ((rt0.c0)>=(rt0.c2)))));
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt0 ON (((((x'318a')<=(v0.c0)), (rt0.c0 IN ()), ((rt0.c2) BETWEEN (-1303263273) AND (v0.c0))))!=((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END, ((rt0.c0)+(rt0.c2)), ((rt0.c0)>=(rt0.c2))))) WHERE (((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 END) IS FALSE)) UNION ALL SELECT ALL * FROM v0 RIGHT OUTER JOIN rt0 ON (((((x'318a')<=(v0.c0)), (rt0.c0 IN ()), ((rt0.c2) BETWEEN (-1303263273) AND (v0.c0))))!=((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END, ((rt0.c0)+(rt0.c2)), ((rt0.c0)>=(rt0.c2))))) WHERE ((NOT (((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 END) IS FALSE)))) UNION ALL SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON (((((x'318a')<=(v0.c0)), (rt0.c0 IN ()), ((rt0.c2) BETWEEN (-1303263273) AND (v0.c0))))!=((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END, ((rt0.c0)+(rt0.c2)), ((rt0.c0)>=(rt0.c2))))) WHERE (((((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 END) IS FALSE)) ISNULL));
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt0 ON (((((x'318a')<=(v0.c0)), (rt0.c0 IN ()), ((rt0.c2) BETWEEN (-1303263273) AND (v0.c0))))<>((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END, ((rt0.c0)+(rt0.c2)), ((rt0.c0)>=(rt0.c2)))));
SELECT DISTINCT * FROM vt0, rt0 INNER JOIN v0 ON ((((((rt0.c0)>=(v0.c0)))OR((rt0.c0 IN (rt0.c2)))))OR((- (vt0.c0))));
SELECT DISTINCT * FROM vt0, rt0 INNER JOIN v0 ON ((((((rt0.c0)>=(v0.c0)))OR((rt0.c0 IN (rt0.c2)))))OR((- (vt0.c0)))) WHERE ((((~ (rt0.c2)))+((rt0.c2 IN ())))) UNION SELECT DISTINCT * FROM vt0, rt0 INNER JOIN v0 ON ((((((rt0.c0)>=(v0.c0)))OR((rt0.c0 IN (rt0.c2)))))OR((- (vt0.c0)))) WHERE ((NOT ((((~ (rt0.c2)))+((rt0.c2 IN ())))))) UNION SELECT DISTINCT * FROM vt0, rt0 INNER JOIN v0 ON ((((((rt0.c0)>=(v0.c0)))OR((rt0.c0 IN (rt0.c2)))))OR((- (vt0.c0)))) WHERE ((((((~ (rt0.c2)))+((rt0.c2 IN ())))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0 INNER JOIN v0 ON ((((((rt0.c0)>=(v0.c0)))OR((rt0.c0 IN (rt0.c2)))))OR((- (vt0.c0))));
SELECT rt0.c1, rt0.c0 FROM v0 NOT INDEXED FULL OUTER JOIN rt0 ON json_insert((NOT (v0.c0)), (+ (vt0.c0)), ((rt0.c0)IS NOT(rt0.c2))) INNER JOIN vt0 ON (((+ (vt0.c0)))OR(CAST(rt0.c2 AS BLOB))) GROUP BY rt0.c1, rt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((AVG(GROUP_CONCAT(vt0.c0)), ((((vt0.c0)OR(vt0.c0)))AND(MAX(SUM(MIN(vt0.c0))))), ((COUNT(MIN(vt0.c0))) BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((SUM(vt0.c0), ((((vt0.c0)AND(vt0.c0)))AND(SUM(MAX(COUNT(*))))), ((MAX(vt0.c0)) IS TRUE)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((AVG(GROUP_CONCAT(vt0.c0)), ((((vt0.c0)OR(vt0.c0)))AND(MAX(SUM(MIN(vt0.c0))))), ((COUNT(MIN(vt0.c0))) BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((SUM(vt0.c0), ((((vt0.c0)AND(vt0.c0)))AND(SUM(MAX(COUNT(*))))), ((MAX(vt0.c0)) IS TRUE)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((AVG(GROUP_CONCAT(vt0.c0)), ((((vt0.c0)OR(vt0.c0)))AND(MAX(SUM(MIN(vt0.c0))))), ((COUNT(MIN(vt0.c0))) BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((SUM(vt0.c0), ((((vt0.c0)AND(vt0.c0)))AND(SUM(MAX(COUNT(*))))), ((MAX(vt0.c0)) IS TRUE))))) ISNULL);
SELECT ALL MIN((json_valid(NULL) IN ())) FROM vt0, v0, rt0 ORDER BY CAST(((rt0.c0)>(v0.c0)) AS TEXT)  NULLS LAST, (+ (rt0.c2 COLLATE BINARY)) ASC;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (((((vt0.c0) ISNULL))<<(vt0.c0 COLLATE NOCASE))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((((vt0.c0) ISNULL))<<(vt0.c0 COLLATE NOCASE))))) UNION ALL SELECT * FROM vt0 WHERE (((((((vt0.c0) ISNULL))<<(vt0.c0 COLLATE NOCASE))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE (0.793073542993253) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (0.793073542993253))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE (((0.793073542993253) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT ALL v0.c0, vt0.c0 FROM vt0 CROSS JOIN v0 ON CAST(((((v0.c0)AND(v0.c0)))AND('275185546')) AS BLOB) GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0 CROSS JOIN v0 ON CAST(((((v0.c0)AND(v0.c0)))AND('275185546')) AS BLOB) WHERE (((((((((((vt0.c0)OR(vt0.c0)))AND(v0.c0)))OR(v0.c0)))OR(vt0.c0)))IS NOT(UNLIKELY(DISTINCT '-1542736297')))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM vt0 CROSS JOIN v0 ON CAST(((((v0.c0)AND(v0.c0)))AND('275185546')) AS BLOB) WHERE ((NOT (((((((((((vt0.c0)OR(vt0.c0)))AND(v0.c0)))OR(v0.c0)))OR(vt0.c0)))IS NOT(UNLIKELY(DISTINCT '-1542736297')))))) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM vt0 CROSS JOIN v0 ON CAST(((((v0.c0)AND(v0.c0)))AND('275185546')) AS BLOB) WHERE (((((((((((((vt0.c0)OR(vt0.c0)))AND(v0.c0)))OR(v0.c0)))OR(vt0.c0)))IS NOT(UNLIKELY(DISTINCT '-1542736297')))) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0 CROSS JOIN v0 ON CAST(((((v0.c0)AND(v0.c0)))AND('275185546')) AS BLOB) GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING COUNT(COUNT(COUNT(vt0.c0))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (COUNT(COUNT(COUNT(vt0.c0))))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING ((COUNT(COUNT(COUNT(vt0.c0)))) ISNULL);
SELECT ALL v0.c0, rt0.c0, vt0.c0 FROM vt0, rt0, v0;
SELECT v0.c0, rt0.c0, vt0.c0 FROM vt0, rt0, v0 WHERE (CAST(((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0)) AS NUMERIC)) UNION ALL SELECT v0.c0, rt0.c0, vt0.c0 FROM vt0, rt0, v0 WHERE ((NOT (CAST(((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0)) AS NUMERIC)))) UNION ALL SELECT v0.c0, rt0.c0, vt0.c0 FROM vt0, rt0, v0 WHERE (((CAST(((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0)) AS NUMERIC)) ISNULL));
SELECT ALL v0.c0, rt0.c0, vt0.c0 FROM vt0, rt0, v0;
SELECT DISTINCT * FROM rt0, vt0, v0;
SELECT DISTINCT * FROM rt0, vt0, v0 WHERE (rt0.c1) UNION SELECT DISTINCT * FROM rt0, vt0, v0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT * FROM rt0, vt0, v0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT * FROM rt0, vt0, v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (NULL) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (NULL))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((NULL) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0, vt0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0, v0 GROUP BY v0.c0, vt0.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT ALL v0.c0, vt0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0, v0 GROUP BY v0.c0, vt0.c0, rt0.c2, rt0.c1, rt0.c0 HAVING AVG(MAX(AVG(rt0.c0))) UNION ALL SELECT ALL v0.c0, vt0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0, v0 GROUP BY v0.c0, vt0.c0, rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (AVG(MAX(AVG(rt0.c0))))) UNION ALL SELECT v0.c0, vt0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0, v0 GROUP BY v0.c0, vt0.c0, rt0.c2, rt0.c1, rt0.c0 HAVING ((AVG(MAX(AVG(rt0.c0)))) ISNULL);
SELECT ALL vt0.c0, rt0.c0, rt0.c1, v0.c0, rt0.c2 FROM vt0, rt0, v0;
SELECT vt0.c0, rt0.c0, rt0.c1, v0.c0, rt0.c2 FROM vt0, rt0, v0 WHERE (vt0.c0) UNION ALL SELECT ALL vt0.c0, rt0.c0, rt0.c1, v0.c0, rt0.c2 FROM vt0, rt0, v0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL vt0.c0, rt0.c0, rt0.c1, v0.c0, rt0.c2 FROM vt0, rt0, v0 WHERE (((vt0.c0) ISNULL));
SELECT ALL vt0.c0, rt0.c0, rt0.c1, v0.c0, rt0.c2 FROM vt0, rt0, v0;
SELECT DISTINCT v0.c0 FROM vt0, v0;
SELECT DISTINCT v0.c0 FROM vt0, v0 WHERE ((vt0.c0 COLLATE BINARY IN (((v0.c0)%('(p'))))) UNION SELECT DISTINCT v0.c0 FROM vt0, v0 WHERE ((NOT ((vt0.c0 COLLATE BINARY IN (((v0.c0)%('(p'))))))) UNION SELECT DISTINCT v0.c0 FROM vt0, v0 WHERE ((((vt0.c0 COLLATE BINARY IN (((v0.c0)%('(p'))))) ISNULL));
SELECT DISTINCT v0.c0 FROM vt0, v0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((0.2146752576059574) NOT BETWEEN (((0X67c7ac41) NOTNULL)) AND (TYPEOF(vt0.c0)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((0.2146752576059574) NOT BETWEEN (((0X67c7ac41) NOTNULL)) AND (TYPEOF(vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((0.2146752576059574) NOT BETWEEN (((0X67c7ac41) NOTNULL)) AND (TYPEOF(vt0.c0)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT * FROM v0 LEFT OUTER JOIN vt0 ON ((((v0.c0)OR(vt0.c0)))OR('ᆦWse7XHh!')) COLLATE RTRIM;
SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON ((((v0.c0)OR(vt0.c0)))OR('ᆦWse7XHh!')) COLLATE RTRIM WHERE (NULL) UNION ALL SELECT * FROM v0 LEFT OUTER JOIN vt0 ON ((((v0.c0)OR(vt0.c0)))OR('ᆦWse7XHh!')) COLLATE RTRIM WHERE ((NOT (NULL))) UNION ALL SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON ((((v0.c0)OR(vt0.c0)))OR('ᆦWse7XHh!')) COLLATE RTRIM WHERE (((NULL) ISNULL));
SELECT * FROM v0 LEFT OUTER JOIN vt0 ON ((((v0.c0)OR(vt0.c0)))OR('ᆦWse7XHh!')) COLLATE RTRIM;
SELECT DISTINCT * FROM vt0, rt0, v0;
SELECT DISTINCT * FROM vt0, rt0, v0 WHERE ((((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((x'0dc4'))))AND(((rt0.c1) NOTNULL))))OR(MIN(rt0.c2, v0.c0)))) UNION SELECT DISTINCT * FROM vt0, rt0, v0 WHERE ((NOT ((((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((x'0dc4'))))AND(((rt0.c1) NOTNULL))))OR(MIN(rt0.c2, v0.c0)))))) UNION SELECT DISTINCT * FROM vt0, rt0, v0 WHERE ((((((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((x'0dc4'))))AND(((rt0.c1) NOTNULL))))OR(MIN(rt0.c2, v0.c0)))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0, v0;
SELECT ALL rt0.c2, v0.c0, vt0.c0 FROM vt0, rt0 LEFT OUTER JOIN v0 ON ((rt0.c1) NOTNULL) GROUP BY rt0.c2, v0.c0, vt0.c0;
SELECT rt0.c2, v0.c0, vt0.c0 FROM vt0, rt0 LEFT OUTER JOIN v0 ON ((rt0.c1) NOTNULL) WHERE (((UPPER(DISTINCT rt0.c1)) BETWEEN (((rt0.c2)GLOB(v0.c0))) AND (((((((((rt0.c0)AND(0Xffffffffb2947420)))AND(rt0.c0)))OR(rt0.c1)))AND(vt0.c0))))) GROUP BY rt0.c2, v0.c0, vt0.c0 UNION SELECT ALL rt0.c2, v0.c0, vt0.c0 FROM vt0, rt0 LEFT OUTER JOIN v0 ON ((rt0.c1) NOTNULL) WHERE ((NOT (((UPPER(DISTINCT rt0.c1)) BETWEEN (((rt0.c2)GLOB(v0.c0))) AND (((((((((rt0.c0)AND(0Xffffffffb2947420)))AND(rt0.c0)))OR(rt0.c1)))AND(vt0.c0))))))) GROUP BY rt0.c2, v0.c0, vt0.c0 UNION SELECT rt0.c2, v0.c0, vt0.c0 FROM vt0, rt0 LEFT OUTER JOIN v0 ON ((rt0.c1) NOTNULL) WHERE (((((UPPER(DISTINCT rt0.c1)) BETWEEN (((rt0.c2)GLOB(v0.c0))) AND (((((((((rt0.c0)AND(0Xffffffffb2947420)))AND(rt0.c0)))OR(rt0.c1)))AND(vt0.c0))))) ISNULL)) GROUP BY rt0.c2, v0.c0, vt0.c0;
SELECT ALL rt0.c2, v0.c0, vt0.c0 FROM vt0, rt0 LEFT OUTER JOIN v0 ON ((rt0.c1) NOTNULL) GROUP BY rt0.c2, v0.c0, vt0.c0;
SELECT vt0.c0, v0.c0 FROM v0 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c0 AS TEXT))&((((rt0.c1, rt0.c2, rt0.c0))>((rt0.c1, vt0.c0, rt0.c1))))) INNER JOIN vt0 ON ((((rt0.c1)>(vt0.c0)))!=(rt0.c0)) GROUP BY vt0.c0, v0.c0;
SELECT rt0.c0, v0.c0, rt0.c1 FROM v0 LEFT OUTER JOIN rt0 ON ((((rt0.c1 IN ())))<=(((((vt0.c0))!=((vt0.c0)))))) RIGHT OUTER JOIN vt0 ON ((((rt0.c0) IS TRUE))LIKE(((rt0.c1)IS NOT(rt0.c1))));
SELECT DISTINCT rt0.c1, v0.c0, rt0.c0, rt0.c2, vt0.c0 FROM vt0, rt0, v0;
SELECT DISTINCT rt0.c1, v0.c0, rt0.c0, rt0.c2, vt0.c0 FROM vt0, rt0, v0 WHERE (rt0.c1) UNION SELECT DISTINCT rt0.c1, v0.c0, rt0.c0, rt0.c2, vt0.c0 FROM vt0, rt0, v0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT rt0.c1, v0.c0, rt0.c0, rt0.c2, vt0.c0 FROM vt0, rt0, v0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT rt0.c1, v0.c0, rt0.c0, rt0.c2, vt0.c0 FROM vt0, rt0, v0;
SELECT rt0.c2, vt0.c0, v0.c0, rt0.c1, rt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON (((rt0.c1))!=((((v0.c0)||(v0.c0))))) RIGHT OUTER JOIN v0 ON ((CASE WHEN rt0.c0 THEN v0.c0 END) NOT BETWEEN ((rt0.c1 IN ())) AND ((rt0.c1 IN (rt0.c0)))) GROUP BY rt0.c2, vt0.c0, v0.c0, rt0.c1, rt0.c0;
SELECT ALL vt0.c0, rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2, rt0.c0;
SELECT ALL vt0.c0, rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2, rt0.c0 HAVING TOTAL(AVG(AVG(SUM(vt0.c0)))) UNION ALL SELECT ALL vt0.c0, rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2, rt0.c0 HAVING (NOT (TOTAL(AVG(AVG(SUM(vt0.c0)))))) UNION ALL SELECT ALL vt0.c0, rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2, rt0.c0 HAVING ((TOTAL(AVG(AVG(SUM(vt0.c0))))) ISNULL);
SELECT * FROM vt0, rt0;
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c0) UNION ALL SELECT * FROM vt0, rt0 WHERE ((NOT (rt0.c0))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c0) ISNULL));
SELECT * FROM vt0, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c2 COLLATE NOCASE)AND(((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)))))AND(rt0.c1))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c2 COLLATE NOCASE)AND(((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)))))AND(rt0.c1))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c2 COLLATE NOCASE)AND(((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)))))AND(rt0.c1))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (rt0.c2) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (rt0.c2))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((rt0.c2) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT vt0.c0 FROM vt0, rt0 FULL OUTER JOIN v0 ON vt0.c0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, rt0 FULL OUTER JOIN v0 ON vt0.c0 GROUP BY vt0.c0 HAVING TOTAL(INSTR(GROUP_CONCAT(COUNT(*)), SUM(SUM(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0, rt0 FULL OUTER JOIN v0 ON vt0.c0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(INSTR(GROUP_CONCAT(COUNT(*)), SUM(SUM(vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0, rt0 FULL OUTER JOIN v0 ON vt0.c0 GROUP BY vt0.c0 HAVING ((TOTAL(INSTR(GROUP_CONCAT(COUNT(*)), SUM(SUM(vt0.c0))))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((NULL)*((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((NULL)*((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))))) UNION ALL SELECT * FROM vt0 WHERE (((((NULL)*((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CAST((+ (vt0.c0)) AS TEXT)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CAST((+ (vt0.c0)) AS TEXT)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CAST((+ (vt0.c0)) AS TEXT)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL rt0.c2, rt0.c1 FROM v0 CROSS JOIN vt0 ON ((((((rt0.c2)OR(rt0.c2)))OR('1744744150')))<=(TRIM(DISTINCT NULL, rt0.c0))) RIGHT OUTER JOIN rt0 ON CASE rt0.c2 COLLATE RTRIM  WHEN ((NULL) IS FALSE) THEN ((vt0.c0) BETWEEN (v0.c0) AND (rt0.c2)) WHEN IFNULL(vt0.c0, rt0.c1) THEN IFNULL(rt0.c2, rt0.c1) WHEN rt0.c1 COLLATE RTRIM THEN v0.c0 COLLATE NOCASE ELSE ((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)) END GROUP BY rt0.c2, rt0.c1;
SELECT vt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0, v0 GROUP BY vt0.c0, rt0.c2, rt0.c1;
SELECT ALL vt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0, v0 GROUP BY vt0.c0, rt0.c2, rt0.c1 HAVING ((((MAX(COUNT(*)))OR(((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c1)))))OR(MIN(vt0.c0))) UNION ALL SELECT vt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0, v0 GROUP BY vt0.c0, rt0.c2, rt0.c1 HAVING (NOT (((((MAX(COUNT(*)))OR(((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c1)))))OR(MIN(vt0.c0))))) UNION ALL SELECT vt0.c0, rt0.c2, rt0.c1 FROM vt0 NOT INDEXED, rt0, v0 GROUP BY vt0.c0, rt0.c2, rt0.c1 HAVING ((((((MAX(COUNT(*)))OR(((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c1)))))OR(MIN(vt0.c0)))) ISNULL);
SELECT ALL MIN(NULL) FROM v0, rt0 ORDER BY ((v0.c0) IS TRUE) COLLATE BINARY ASC, ((CASE v0.c0  WHEN rt0.c0 THEN -3.09419331E8 END)*((((0.09284630131108673)) BETWEEN ((rt0.c0)) AND ((v0.c0))))) DESC;
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (CAST(((vt0.c0) NOTNULL) AS REAL)) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (CAST(((vt0.c0) NOTNULL) AS REAL)))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((CAST(((vt0.c0) NOTNULL) AS REAL)) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (NULL) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT v0.c0, rt0.c2, vt0.c0 FROM vt0, rt0, v0 GROUP BY v0.c0, rt0.c2, vt0.c0;
SELECT v0.c0, rt0.c2, vt0.c0 FROM vt0, rt0, v0 WHERE (((CASE vt0.c0  WHEN rt0.c0 THEN v0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN v0.c0 THEN rt0.c2 ELSE x'c93b' END) BETWEEN (((rt0.c2)<<(rt0.c0))) AND (((rt0.c2) BETWEEN ('lM~xQ1꜌n') AND (rt0.c1))))) GROUP BY v0.c0, rt0.c2, vt0.c0 UNION SELECT ALL v0.c0, rt0.c2, vt0.c0 FROM vt0, rt0, v0 WHERE ((NOT (((CASE vt0.c0  WHEN rt0.c0 THEN v0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN v0.c0 THEN rt0.c2 ELSE x'c93b' END) BETWEEN (((rt0.c2)<<(rt0.c0))) AND (((rt0.c2) BETWEEN ('lM~xQ1꜌n') AND (rt0.c1))))))) GROUP BY v0.c0, rt0.c2, vt0.c0 UNION SELECT v0.c0, rt0.c2, vt0.c0 FROM vt0, rt0, v0 WHERE (((((CASE vt0.c0  WHEN rt0.c0 THEN v0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN v0.c0 THEN rt0.c2 ELSE x'c93b' END) BETWEEN (((rt0.c2)<<(rt0.c0))) AND (((rt0.c2) BETWEEN ('lM~xQ1꜌n') AND (rt0.c1))))) ISNULL)) GROUP BY v0.c0, rt0.c2, vt0.c0;
SELECT v0.c0, rt0.c2, vt0.c0 FROM vt0, rt0, v0 GROUP BY v0.c0, rt0.c2, vt0.c0;
SELECT rt0.c0, rt0.c2, vt0.c0, v0.c0, rt0.c1 FROM vt0, v0, rt0 GROUP BY rt0.c0, rt0.c2, vt0.c0, v0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, vt0.c0, v0.c0, rt0.c1 FROM vt0, v0, rt0 GROUP BY rt0.c0, rt0.c2, vt0.c0, v0.c0, rt0.c1 HAVING ABS(GROUP_CONCAT(TOTAL(AVG(rt0.c1)))) UNION ALL SELECT rt0.c0, rt0.c2, vt0.c0, v0.c0, rt0.c1 FROM vt0, v0, rt0 GROUP BY rt0.c0, rt0.c2, vt0.c0, v0.c0, rt0.c1 HAVING (NOT (ABS(GROUP_CONCAT(TOTAL(AVG(rt0.c1)))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, vt0.c0, v0.c0, rt0.c1 FROM vt0, v0, rt0 GROUP BY rt0.c0, rt0.c2, vt0.c0, v0.c0, rt0.c1 HAVING ((ABS(GROUP_CONCAT(TOTAL(AVG(rt0.c1))))) ISNULL);
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE ((- (json_quote(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((- (json_quote(v0.c0)))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((((- (json_quote(v0.c0)))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT * FROM vt0, rt0, v0;
SELECT DISTINCT * FROM vt0, rt0, v0 WHERE (((((CAST(vt0.c0 AS REAL))OR('1379073886')))AND(((rt0.c0) IS TRUE)))) UNION SELECT DISTINCT * FROM vt0, rt0, v0 WHERE ((NOT (((((CAST(vt0.c0 AS REAL))OR('1379073886')))AND(((rt0.c0) IS TRUE)))))) UNION SELECT DISTINCT * FROM vt0, rt0, v0 WHERE (((((((CAST(vt0.c0 AS REAL))OR('1379073886')))AND(((rt0.c0) IS TRUE)))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0, v0;
SELECT ALL v0.c0, rt0.c0, vt0.c0, rt0.c2 FROM rt0, vt0, v0 GROUP BY v0.c0, rt0.c0, vt0.c0, rt0.c2;
SELECT v0.c0, rt0.c0, vt0.c0, rt0.c2 FROM rt0, vt0, v0 WHERE (TRIM((vt0.c0 IN ()))) GROUP BY v0.c0, rt0.c0, vt0.c0, rt0.c2 UNION SELECT ALL v0.c0, rt0.c0, vt0.c0, rt0.c2 FROM rt0, vt0, v0 WHERE ((NOT (TRIM((vt0.c0 IN ()))))) GROUP BY v0.c0, rt0.c0, vt0.c0, rt0.c2 UNION SELECT ALL v0.c0, rt0.c0, vt0.c0, rt0.c2 FROM rt0, vt0, v0 WHERE (((TRIM((vt0.c0 IN ()))) ISNULL)) GROUP BY v0.c0, rt0.c0, vt0.c0, rt0.c2;
SELECT ALL v0.c0, rt0.c0, vt0.c0, rt0.c2 FROM rt0, vt0, v0 GROUP BY v0.c0, rt0.c0, vt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING '2015536962' UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT ('2015536962')) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (('2015536962') ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING '2015536962' UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT ('2015536962')) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (('2015536962') ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL MIN((((x''))>((CAST(rt0.c0 AS BLOB))))) FROM v0, vt0, rt0 ORDER BY (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((rt0.c2, (+ (rt0.c0)), CASE vt0.c0  WHEN v0.c0 THEN v0.c0 END)) AND ((rt0.c0, PRINTF(rt0.c1), (rt0.c1 IN (rt0.c1))))) ASC  NULLS LAST, CAST(vt0.c0 AS INTEGER) COLLATE NOCASE DESC;
SELECT rt0.c0, rt0.c1 FROM rt0, vt0;
SELECT rt0.c0, rt0.c1 FROM rt0, vt0 WHERE (TOTAL_CHANGES()) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0, vt0 WHERE ((NOT (TOTAL_CHANGES()))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0, vt0 WHERE (((TOTAL_CHANGES()) ISNULL));
SELECT rt0.c0, rt0.c1 FROM rt0, vt0;
SELECT DISTINCT rt0.c2 FROM rt0, vt0 LEFT OUTER JOIN v0 ON (CASE rt0.c2  WHEN rt0.c2 THEN v0.c0 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END IN ());
SELECT DISTINCT rt0.c2 FROM rt0, vt0 LEFT OUTER JOIN v0 ON (CASE rt0.c2  WHEN rt0.c2 THEN v0.c0 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END IN ()) WHERE ((((((+ (rt0.c0)))OR(CASE WHEN x'' THEN v0.c0 WHEN NULL THEN rt0.c2 WHEN 1658057952 THEN rt0.c2 END)))AND(CAST(vt0.c0 AS NUMERIC)))) UNION SELECT DISTINCT rt0.c2 FROM rt0, vt0 LEFT OUTER JOIN v0 ON (CASE rt0.c2  WHEN rt0.c2 THEN v0.c0 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END IN ()) WHERE ((NOT ((((((+ (rt0.c0)))OR(CASE WHEN x'' THEN v0.c0 WHEN NULL THEN rt0.c2 WHEN 1658057952 THEN rt0.c2 END)))AND(CAST(vt0.c0 AS NUMERIC)))))) UNION SELECT DISTINCT rt0.c2 FROM rt0, vt0 LEFT OUTER JOIN v0 ON (CASE rt0.c2  WHEN rt0.c2 THEN v0.c0 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END IN ()) WHERE ((((((((+ (rt0.c0)))OR(CASE WHEN x'' THEN v0.c0 WHEN NULL THEN rt0.c2 WHEN 1658057952 THEN rt0.c2 END)))AND(CAST(vt0.c0 AS NUMERIC)))) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0, vt0 LEFT OUTER JOIN v0 ON (CASE rt0.c2  WHEN rt0.c2 THEN v0.c0 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END IN ());
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((v0.c0 COLLATE NOCASE) NOTNULL)) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((v0.c0 COLLATE NOCASE) NOTNULL)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((v0.c0 COLLATE NOCASE) NOTNULL)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c0 FROM rt0, v0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, v0 GROUP BY rt0.c0 HAVING COUNT(((((GROUP_CONCAT(rt0.c0))OR(COUNT(MIN(TOTAL(x''))))))AND(rt0.c1))) UNION ALL SELECT ALL rt0.c0 FROM rt0, v0 GROUP BY rt0.c0 HAVING (NOT (COUNT(((((GROUP_CONCAT(rt0.c0))OR(COUNT(MIN(TOTAL(x''))))))AND(rt0.c1))))) UNION ALL SELECT ALL rt0.c0 FROM rt0, v0 GROUP BY rt0.c0 HAVING ((COUNT(((((GROUP_CONCAT(rt0.c0))OR(COUNT(MIN(TOTAL(x''))))))AND(rt0.c1)))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0 IN ())))>=((vt0.c0 COLLATE RTRIM)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0 IN ())))>=((vt0.c0 COLLATE RTRIM)))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((((vt0.c0 IN ())))>=((vt0.c0 COLLATE RTRIM)))) ISNULL));
SELECT vt0.c0 FROM vt0;
