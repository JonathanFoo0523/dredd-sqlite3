-- Time: 2024/06/10 04:42:23
-- Database: database9
-- Database version: 3.40.0
-- seed value: 2225354409
PRAGMA cache_size = 50000; -- 8ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16'; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, c3, c4); -- 1ms;
INSERT OR REPLACE INTO rt0(c3, c0) VALUES (NULL, ''); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR ABORT INTO rt0(c0, c2) VALUES (0.9183922640163811, x''), (x'', 0X7ac44a92), (0x526209da, 2.059684498E9); -- 0ms;
INSERT OR ABORT INTO rt0(c3, c0, c1, c2) VALUES (0.9183922640163811, NULL, '2059684498', x''); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c3, c2, c0, c4) VALUES (0.6854287140325488, NULL, '2059684498', 0.6854287140325488, '0.9183922640163811'), ('-318048869', NULL, NULL, 0.6854287140325488, -3.18048869E8), (0.8634360037429213, 0.9183922640163811, NULL, '1727364730', 'wJn_AlQAT'); -- 0ms;
PRAGMA temp.application_id = 6429478521338773518; -- 2ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c3, c1) VALUES (-318048869, NULL, '{,'); -- 0ms;
PRAGMA wal_checkpoint(PASSIVE); -- 1ms;
PRAGMA temp.busy_timeout; -- 1ms;
UPDATE OR IGNORE rt0 SET (c1)=(x'2646') WHERE (rt0.c1 COLLATE BINARY IN (rt0.c3 COLLATE BINARY)); -- 0ms;
UPDATE rt0 SET (c4)=(0.6854287140325488) WHERE '._'; -- 0ms;
CREATE TEMPORARY TABLE t0 (c0 INT , c1 REAL , c2 TEXT ); -- 0ms;
UPDATE t0 SET (c0)=(-617830847) WHERE (+ (t0.c0)) COLLATE NOCASE; -- 0ms;
PRAGMA auto_vacuum; -- 0ms;
PRAGMA cell_size_check = true; -- 0ms;
INSERT OR FAIL INTO rt0(c4) VALUES (NULL); -- 0ms;
INSERT OR FAIL INTO t0(c2, c1, c0) VALUES (NULL, x'', 0Xffffffffdb2ca641); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST('Ss' AS INTEGER) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=2059684498 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN TRIM(DISTINCT NULL, '-2123261342') THEN (((('2059684498')AND(1.382156762E9)))AND(NULL)) ELSE ((0.8634360037429213)/(NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0X7ac44a92 IN ('3Bei')) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1727364730 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', '1857329787 0 sz=-48325434 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1831506781 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)OR(1.857329787E9)))AND(NULL)) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' sz=-71786086'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=855577785 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE NULL  WHEN '-732806947' THEN '1857329787' END)<(((x'ad6a')=(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=581507098 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('0.0' IN (((x'7f4b')/('')))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=581507098 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-71786086 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 sz=583897510 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', '-1389276378'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', '0 sz=-2123261342 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1566061898 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=102048611 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-778682781 sz=1727364730 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', '1831506781'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=1873820934 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((('581507098'))>((0.8463093593404266))) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN x'' THEN 0.8463093593404266 END)|('-617830847' COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1377907874 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '1651915885 sz=673922414 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' sz=859038969 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1727364730'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (-2123261342)) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(DISTINCT 0.604486081690892 COLLATE BINARY, CASE WHEN 1345282985 THEN 0.613034922483648 WHEN x'' THEN NULL WHEN ' ahJIZRA' THEN 0.6017021662875737 ELSE x'' END); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE WHEN 0X6d2a935d THEN x'2281' WHEN x'79c7' THEN 0.9708131162204613 WHEN 0.604486081690892 THEN '' ELSE NULL END)AND(0.8463093593404266 COLLATE BINARY)))OR(('pg' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1651915885 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=-540334903'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('I&+S') BETWEEN (x'') AND (NULL)) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-253047751'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1041187416 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((NOT (0Xffffffffe5b32b1f)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 0 859038969'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1325291802 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2 sz=-1040945909'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 -253047751 sz=1570954019 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-1185292229' COLLATE BINARY) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1185292229 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1305164594'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', '583897510 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL AS TEXT) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-1455523667'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)%((NOT (0.6017021662875737)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE HEX(0.12694319727625247) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-72539198'))>((NULL)))) BETWEEN ('') AND (((343683931)LIKE(0.6557721512259972)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-1016036956 sz=859038969 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'' IN ()) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=1092889576 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=673922414 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((0.12694319727625247 IN (-69506688)) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=-1147012821'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((1.857329787E9) BETWEEN (x'') AND ('-2123261342')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', '0 0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST(0.8216900139085839 AS BLOB))OR((NULL IN ()))))OR((- (0xffffffffc1507a93)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('-984408272' AS NUMERIC)) NOT BETWEEN (CASE WHEN '1922330674' THEN x'' ELSE 0.12812075217427266 END) AND (('fz' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) ISNULL) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', '0 sz=-2082023761 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=2095153321 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-441242849 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL AS REAL) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)&('-617830847')))AND(((0X66f57e7a)IS NOT(0.0197148727852946)))))OR((('1873820934') NOT BETWEEN (NULL) AND (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (CASE ',h螵'  WHEN 'Bk%~\>O.' THEN NULL WHEN x'' THEN -1.377907874E9 WHEN 0.5957135880863941 THEN NULL ELSE 0X3333e4f9 END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER(((((-2.53047751E8)OR('pX\nS!읰<')))OR(x''))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'')IS NOT('Uo戲g!p')) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.9460883785549384 COLLATE NOCASE AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1570954019 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (CAST(NULL AS NUMERIC) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((((' ahJIZRA')) NOT BETWEEN ((x'')) AND (('-342603018'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-1016036956 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=1372943491 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((x'' IN (0.09911437379044818)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('''') BETWEEN ('7(\n<B ') AND ('')))<(CASE -540334903  WHEN '' THEN 'WeFfnXwf' ELSE '-2123261342' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=793513156 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '4 2 0 sz=1570954019 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-715904214 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1522658148 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('._')) BETWEEN (((((x'')) BETWEEN ((x'6ee1')) AND ((x''))))) AND ((((0.8634360037429213) NOTNULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER(NULL COLLATE RTRIM); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-69506688 583897510 sz=1438082312 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' sz=1265662028 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1873820934 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1455523667 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (0.613034922483648)) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((-1302826095) NOTNULL) THEN '㬲T' COLLATE NOCASE END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((('-337593243')) BETWEEN (('pg')) AND (('H~'))) THEN ((NULL)IS('Uo戲g!p')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1207672270 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-778682781'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (0.21597901004124942)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((-1.455523667E9 IN (x'')))OR((- ('-2069119098')))))OR((('-2069119098') NOTNULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=583897510'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2 -71786086 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=978250154 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '583897510 sz=-1820836024 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-1302826095 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1212848522 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=855577785 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (1.265662028E9)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1833791202 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) BETWEEN ((CASE ''  WHEN -715904214 THEN x'' WHEN 978250154 THEN NULL WHEN NULL THEN NULL END)) AND (((((((((('s')AND(NULL)))OR(x'')))OR('')))OR(NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-318048869 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' sz=-1969023917 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1459598727 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' sz=102048611'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE load_extension(CAST('343683931' AS BLOB), ((-717198914)>=(NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((0.8616702552760725, 0.27674810792099236, 1099986775)) BETWEEN (('', NULL, NULL)) AND ((-1801203522, 0.6792887623075247, x''))) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE RTRIM) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', '0 765895428 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', '4 sz=-1820836024'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=556671577 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CAST(NULL AS BLOB) THEN UPPER(NULL) ELSE ((((-318048869)OR('793513156')))AND('1e500')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((0.8216900139085839)%(0.8616702552760725)) THEN NULL COLLATE NOCASE ELSE (('')=(x'')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ('6~n\n')) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', '-85676365 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS BLOB))>=(CAST('虸' AS INTEGER))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')==(x'')) IN (((x'') NOT BETWEEN ('-618459241') AND (x'')), (+ (x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-715904214 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 253093574 sz=-1820836024'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', '0 sz=-618459241 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1597063002 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 -617830847 sz=-198745458 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '531018234 77488843 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((NULLIF(1.305164594E9, 0.09911437379044818))/(CAST(0X3333e4f9 AS REAL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'') NOT BETWEEN (7.65895428E8) AND ('tf~㑨^2gRv')))AND((NULL IN ()))))OR('--<_8x㹣' COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-892699649 2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1212848522 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'' IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '402015051 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((NULL) NOT BETWEEN (NULL) AND (x'83b9')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1945963476 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL COLLATE BINARY))<=((((0.14675650539262652)>=('2095153321'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1016762268 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-441242849 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-1886697607 0 sz=519752360'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER((('-72539198')GLOB(x''))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL) NOT NULL) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '454854264 -855943241 sz=-1299314778 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((~ (0.6017021662875737)) IN ((('374105001') ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=756615270 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE NULL  WHEN 0.8977285666873404 THEN x'' END)|(((0x41907757)AND(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1392548564 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((CASE '-1264710311'  WHEN 0.5551638517305679 THEN 0.6792887623075247 WHEN x'cb6f' THEN '454854264' WHEN x'3605' THEN '' ELSE 0xffffffff89737efa END) BETWEEN (TYPEOF(DISTINCT '')) AND (((0xffffffffaddecb5e)<<(0.26782294292328657)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN HEX(1972286565) THEN (- (x'')) ELSE CASE WHEN '-85676365' THEN x'' ELSE '' END END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE RTRIM) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('zj洋i-*!')OR(x'a862')))AND('')) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0Xfffffffffa8d0d29 COLLATE NOCASE IN (0.7402610929896392 COLLATE RTRIM, (('1305164594')>>('-2010400906')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS BLOB)) NOT BETWEEN (ABS('793513156')) AND (((-53391603) NOT BETWEEN (x'') AND (x'88c4')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 sz=-1693058304'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((((0.8570376473173561)OR(740884526)))AND(-7.1786086E7)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((x'091a' IN ()) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=626448498 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=556671577 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('')+(x'b519'))) NOT BETWEEN ((((('u')OR(0.7394823419005033)))OR(0.19897818910897713))) AND (((1557288693)%(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE HEX(DISTINCT CASE WHEN 0.16682864625891014 THEN NULL END); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE WHEN x'' THEN NULL END THEN CAST(0.6343009777716344 AS REAL) ELSE ((0.53830059141504) NOT BETWEEN (NULL) AND (0.9799843714309451)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=338499051 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-47616677 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('-53391603' AS REAL) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((x'ea79')%('|]_\n)o')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1008217886 sz=-56586921 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', '2109407416 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (x'')))%(CASE WHEN x'2c0b' THEN '-563202519' WHEN NULL THEN NULL WHEN 'tf~㑨22gRv' THEN 1514864009 END)); -- 5ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', '-1608179477 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 -53391603 sz=1436181264'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=871046634 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)AND('Uo戲g!p')))OR('mlSn2XB\ni')) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.16486340426108936 AS BLOB))!=(CASE WHEN '-939555860' THEN x'ec76748d' ELSE '-916223149' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1886697607 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1801203522 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL) BETWEEN (NULL) AND (NULL)))AND('1522658148' COLLATE RTRIM)))AND(((('-441242849', '裶XW', 0.5447783224311478, '', x'03f0', 0.8463093593404266, 0.6220470120282363)) BETWEEN ((0.2567309848519701, '硌', '-1699149570', x'4111', x'', '256053704', 1454219612)) AND ((x'', '', NULL, NULL, 'VUE ', '-53391603', x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1522658148 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((((0.48982672406898))>(('_3ziP/8'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', '0 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN NULL THEN ((((x'2dbe')AND(0.19897818910897713)))AND(0.4121413274368243)) ELSE ((('TIAjKZ8~D')) BETWEEN ((0.16330481355969662)) AND (('b \r'))) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', '-892699649 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1568814521 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=183285746 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((NULL) NOT BETWEEN (NULL) AND (0.14675650539262652))  WHEN CASE WHEN '-1353561540' THEN 0Xfffffffffcd14f0d ELSE x'' END THEN NULL COLLATE BINARY END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-317138137 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '0.8634360037429213'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0xffffffffa822ebdd)<<(-1245357402)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(1265662028 COLLATE NOCASE AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-400944822 sz=-44628263 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY(((NULL) BETWEEN ('') AND (NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-531444809 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', '960443261 756615270 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', '-211440663 0 sz=-1975508726'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1 2 sz=-2000429294 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) ISNULL) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=317988925 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-540334903 sz=1811276328 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1719628730'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.53830059141504) IS TRUE))OR((+ ('1099986775')))))OR((NULL IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.9112408858925342)|(NULL))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CAST(NULL AS NUMERIC))AND((('-9223372036854775808') BETWEEN (0Xffffffff9e7d046c) AND (-604505702)))))OR((('-2123261342')OR(NULL)))))AND(CASE NULL  WHEN NULL THEN '4iYmZ' ELSE 0.5293951262860238 END)))OR(('-1072704000' IN ('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', '0 sz=205703454'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-48325434'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((x'')OR(NULL)))AND(0.19858648926343148))))>=(('Mk1now~' COLLATE NOCASE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'3eb5'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'') IS TRUE) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN ((('-778682781' IN ()))) AND ((((x'')<=(x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=446161368 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((NOT (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1216832035 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-391077224 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=56841962 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 -1872965046 sz=740923632 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-565867103 sz=1890931723 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((1196205851)IS NOT('')))AND((('Ʌ8')=(1.522658148E9)))))OR(((('', x'fd12', NULL))>=(('', '-2069119098', 'U久bO'))))))OR((x'' IN ()))))OR(((x'a8a35c89')+('1778103939')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 1873820934 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=129251191'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((NULL)) NOT BETWEEN (('-926655678')) AND ((138173765))) THEN (('-1264710311')||(0x2da6a304)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0X3333e4f9) BETWEEN ((0.9818236018512484 IN ())) AND (((((NULL)OR(0.9696578607032752)))AND(0x16a9dd4b)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (x''))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1627662706 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.6107800428618801) NOT BETWEEN (x'') AND (x''))))>=((CAST('-1' AS BLOB)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-717198914 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.42751418425850884) NOT NULL))OR((('-1693058304') NOT BETWEEN (0x71f404f3) AND (NULL)))))AND((((0.520429149984206)) NOT BETWEEN ((-1824414960)) AND ((1905413304))))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' sz=-984408272 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((-318048869)!=(NULL))  WHEN ((((((((NULL)OR('740884526')))OR('')))OR(NULL)))AND(0.9182340928182844)) THEN ((('-1266114826')) BETWEEN ((0.36807594149997525)) AND ((NULL))) WHEN (('BN') NOT NULL) THEN CASE 'M\/玑臗\r릴'  WHEN '1459598727' THEN NULL END WHEN (((((((('740884526')OR('0.6792887623075247')))AND('0.21597901004124942')))AND('Af''2ja')))OR(0x3f274a9c)) THEN (('1459598727')>>(x'')) ELSE CAST(x'' AS INTEGER) END; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-1185292229 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=853591364'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('' AS TEXT)) NOT BETWEEN (((('454854264')) NOT BETWEEN (('-1763516216')) AND (('0.613034922483648')))) AND (CASE WHEN 0Xfffffffff279136f THEN x'e4bb' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1070728731'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((SUBSTR(NULL, NULL))==('0.6854287140325488')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', '2 sz=-318048869 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((-7.32806947E8)AND('6a')))AND('BG')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', '793513156 sz=-2126261923 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('{I,2UUHa')|(NULL)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=863045675 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ ('BK%~\>O.')))||(NULL COLLATE RTRIM)); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (UPPER('') IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS INTEGER)) NOT BETWEEN ('') AND (((0Xffffffffb4a5e8ad) NOT BETWEEN ('h') AND ('v5-u')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ''  WHEN ((x'')LIKE(NULL)) THEN '-1872606020' ELSE (~ ('minutes')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1651915885'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1264710311 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'eb93')) BETWEEN ((543388838)) AND ((x'cd20')))))<>((x'08ca'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)%((((''))<>((0.13700757833516153))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1027993945 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('' AS REAL))LIKE((0.4443275045097149 IN ()))); -- 3ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' sz=-515871196 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=927860816 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0Xffffffff81080636) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(0.27674810792099236 AS NUMERIC) IN ('' COLLATE BINARY, ((x'')<>(0.5427163901087971)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 0.47480087397762494 THEN 'nbo콚' WHEN NULL THEN x'' WHEN x'9f3fad7f' THEN NULL ELSE '-1040945909' END COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1566061898'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.892138841411668)+('-1051690349')))|((('-2123261342') NOT BETWEEN (NULL) AND (0.6183618527762738)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=1770350882 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.6434824516089778)AND(x'')))OR(NULL)))>((1.382156762E9 IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(((NULL)==(NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '1158032727 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((+ (x'')))OR(CAST(x'' AS INTEGER))))AND(CAST(0.5742469675185014 AS TEXT))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '337418283 sz=1570954019'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' sz=102048611 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-1374431946 sz=1866774898'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '4 2089928560 sz=1563063064 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-2079209858'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN NULL COLLATE RTRIM THEN ((((0.7463890431933808)AND(x'')))AND(NULL)) ELSE CAST(NULL AS NUMERIC) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)) NOT BETWEEN (('G,')) AND ((x'eacb94d7'))))%(((x'')IS NOT(0.6017021662875737)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '299326543 0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) ISNULL)) BETWEEN ((('0.0197148727852946') IS FALSE)) AND ((('j%E++tY') NOT BETWEEN ('0.9460883785549384') AND ('虸')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=556671577'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1599097957 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1886697607 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=-1492820248 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1372943491 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LOWER(920237193))>(((0.7270598668380743)<(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '151268306'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((NULL)OR(x'')))AND('2095153321')))AND('')))OR(x''))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((~ (0.0015601569867403908)))AND((0xad2ea3d IN ()))))AND((((x'a6c1')) BETWEEN (('1458194499')) AND ((NULL))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 -1801203522 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0xffffffffdfcb24c9)) NOT BETWEEN ((CAST(0Xffffffff9564ec03 AS BLOB))) AND ((0x646491c0 COLLATE BINARY))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=343683931 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((NULL))<((0.53830059141504))) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=516025425 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1228592253 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE BINARY) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE NOCASE)OR(((NULL) IS FALSE))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((+ (x''))))<=((NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('j') NOT BETWEEN (NULL) AND (''))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1234497224 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1999744599 sz=1393622101 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', '-1016036956 sz=-788993510 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS BLOB))/((((x'')) NOT BETWEEN ((x'')) AND ((0.8091517364510166))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', '2 0 sz=1641239001 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE -317253696; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('-442792011')OR('1265662028')))AND(x'')))|(((NULL) BETWEEN (-1e500) AND (0.5152396244153388)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', '0 sz=-549683633'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY(((NULL)>=(x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '115516188 sz=300442104 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0 AS INTEGER))||((((-0.0, x'', 0.8772308225817284))<>((NULL, '-c䢌鏛n', 379765167))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 -1693058304 sz=-69506688 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-961297496 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-308464303'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('-441242849' AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN (((('1620620122') BETWEEN (0Xfffffffff2af350d) AND ('-9223372036854775808')))) AND ((CAST('1922330674' AS INTEGER)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-232347824 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((0.587446133708714)OR(0.8182383633355662)))AND(NULL)))OR(((('', x'7ce3', x'eba8', x'', '1226674343'))=(('-1147012821', NULL, 1.382156762E9, NULL, x''))))))OR((0.021155184670553884 IN ()))))OR((x'' IN ()))))AND(json_remove(NULL, NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-488236907 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', '-1185292229 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (0.7946198377795917)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2 sz=-1655322244 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1070108135 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '765895428 0 sz=1910609413 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-832158319 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((TYPEOF(DISTINCT 'miHutes'))OR((x'' IN ()))))OR(CAST(x'' AS INTEGER))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1056955426 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (x'' IN ()) THEN x'' END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 1414196536 sz=752162480 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-1228432366, x'', 'o⍣c&6>5')) NOT BETWEEN ((((0x1640ce14)=('778687660')), CASE '-1040945909'  WHEN -1 THEN 'Y5' END, 0.2919983663041603 COLLATE NOCASE)) AND ((((x'')<=(NULL)), ((NULL) ISNULL), LIKE(x'9160d481', 1156340516)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-53391603'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1146275228 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' sz=1795237932 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', '4 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1727364730 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.9551944131012883 COLLATE NOCASE)||('1831506781' COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ('-1392548564')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=374105001 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1248599984 sz=-202013912 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', '-344980104 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 4ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)*(-1820836024)))>(NULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', '130214711 sz=-1484066868 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') NOT BETWEEN ((NOT ('0.5742469675185014'))) AND (CAST('402015051' AS TEXT))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=19750470'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' sz=-1552934837 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((0x4c3bc951) NOTNULL) THEN (- (x'')) ELSE x'' COLLATE NOCASE END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((0.5293951262860238)OR('581507098')))OR(NULL)) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-198745458 sz=-1016762268 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1570954019'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('0.9182340928182844')AND('-2082023761')))IS NOT((('') IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((NULL)-('2060334558')) THEN CASE x''  WHEN '' THEN NULL WHEN NULL THEN 0.24070393775956134 WHEN NULL THEN '' ELSE 'Bq' END END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((0.3895430159188751)IS('1815017175')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=1438082312'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', '0 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', '1936353289 sz=-1337200701 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((('')OR('0.6183618527762738')))AND('')))AND((+ (x'1bb3')))))OR(CASE NULL  WHEN 0.8656572684196353 THEN 1922330674 WHEN NULL THEN NULL WHEN x'88474b50' THEN ')e' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', '2 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '144913512 sz=-1652421116 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN x'aa89698c' THEN NULL WHEN 998996337 THEN '-1820836024' WHEN 0.8998210270253837 THEN '' WHEN x'90bf' THEN NULL WHEN '0.9818236018512484' THEN NULL WHEN 'nN' THEN '1907483639' WHEN 467102897 THEN 1.857329787E9 END)LIKE(((x'')IS NOT('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.08931326026971287 AS BLOB) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-91419351 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-2024552218 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', '144913512 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=77488843 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'') NOTNULL) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-1392548564')|(0.2672282129627027))) NOT BETWEEN (((((NULL)OR(0.8754920528309117)))AND(0.8680864432624225))) AND (CAST(0.7826053137718333 AS INTEGER))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-311928524'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-860629130'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 68759758; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', '0 531018234'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1500830512'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' sz=-9223372036854775808 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-770769035 sz=-1702512790 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0x49b00d0c IN ()) IN ((((x''))<=(('-1389276378'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE NOCASE) NOT BETWEEN (((-1.051690349E9) NOT BETWEEN ('558720027') AND (NULL))) AND ((('0.8977285666873404') NOT NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1992795449'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=102048611 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL, 0.26138792225416785, 0.9523242969607302))>((NULL, '494559969', '-1207672270'))))=((('') IS TRUE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' sz=-1780387178 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', '-1389276378 0 sz=-618459241 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL IN (0x62f5bb00)) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-2003399039 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-694897335 -85676365 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(COALESCE(DISTINCT NULL, x'') AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', '0 -401227459 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'344a' AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((1092889576)&('531018234'))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE -1988919558 COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'') ISNULL) IN (0.0197148727852946, x'')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((NOT (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '402015051 -250957222 sz=198300758'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((((x'7948')AND(0.7610682632643155)))OR(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '351930371 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'gT' COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2 sz=-800977051 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', '6813870 sz=-732806947 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 1.972286565E9; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'' IN ('?ev9{L掩', x'')) COLLATE NOCASE COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOT NULL))*(NULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('')+(x''))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-48240716 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2047422080 sz=1868877807'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' sz=624308239'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-617830847 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((1.382156762E9)>(x''))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((0.8634360037429213)IS NOT(NULL)) THEN (((NULL)) BETWEEN (('0.5427163901087971')) AND (('GI'))) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '794462762 sz=77488843 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', '1031960357'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)OR((((x'', x'484a52fcc57e', 'gT')) NOT BETWEEN ((NULL, x'', x'')) AND (('}\rMOHXomt', 0.6502853447262086, '䖅}r'))))))AND(((((((((NULL)AND(x'')))AND(343683931)))OR('1538246093')))AND(-200422605)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1042917020 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 15765060 sz=2089928560'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS(DISTINCT ((x'')>>('\ru<c'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-2123261342 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=139030898 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('556671577')<<(CASE WHEN NULL THEN x'' ELSE '' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((x'', 1972286565, 0X40378c42, NULL, x''))<=((0Xffffffffc04e081e, 0.2672282129627027, '-1391163463', 0.20155920348553324, '{I,2UUH '))))AND(((((x'')OR(x'')))OR(-514681592)))))OR('431903283')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=2053528000 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 1306542526 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-2056618611'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', '-617830847 sz=387699652 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((x'' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-776942874 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-650338769 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-311129500 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', '9223372036854775807 1618909403 sz=-1926934108 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-545267496'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1380880661 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '4 sz=626448498 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE WHEN NULL THEN NULL ELSE '' END IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CHANGES(); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1933362170 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TRIM(0.9708131162204613, x'')) NOTNULL); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', '0 2 -855943241'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('+s' COLLATE BINARY) NOT BETWEEN (0.5819721687723501 COLLATE BINARY) AND (((('1382156762')) BETWEEN (('1566061898')) AND ((1345282985))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-1797112317'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.6462397288801104 IN ('-1455523667', NULL)))LIKE(((x'') NOT BETWEEN (NULL) AND (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1185292229'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((x'b6b9')AND('0.021155184670553884')))AND(NULL)))AND(CAST('0.5957135880863941' AS REAL))))OR(((((0.3236978572983029)AND(0.9358378800122311)))OR('1635306379')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=-1207672270 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 sz=144913512 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-1036610833 sz=2099079709 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-783792192 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'' COLLATE NOCASE IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.79736460507565 IN ()))OR(((0.20888752252608445)&('RgzXyrEn')))))OR(TRIM(NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=-441242849 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=647355720'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1250115777 sz=-1299314778'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=2095153321'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-641988091 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('4iYmZ')|(0.9799843714309451))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=424315299 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((NULL)) BETWEEN ((0xffffffffb7b56676)) AND ((398031341))) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', '-1027979266 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (('817916042' IN ('-733493626', '-801975638')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=394891072 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0Xffffffff8aa31453) NOT BETWEEN (0.09040645431437644) AND (x'')))<<((0xfffffffff427628e IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'') NOT NULL), CASE WHEN '1305164594' THEN '-1343329911' ELSE NULL END, ((0.4443275045097149)|('2091289849'))))!=((((x'')|('h')), ((NULL)!=(662147111)), ((x'da6883f1') NOT BETWEEN (x'') AND (''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' sz=-1191403561 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOT NULL)) NOT BETWEEN ((('') NOT BETWEEN ('TIAJKZ8~D') AND (-7.17198914E8))) AND (CAST(NULL AS REAL))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'', 1352253651, '1094245856'))<((NULL, x'9bbf', x''))))>(((x'36e4')/(0.7737891733161296)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=312823275 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=189276844 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '270637485 sz=-1801203522 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1414196536 sz=-1693058304 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-1185292229 0 sz=882931784 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1455523667 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=2022511649 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((- ('-2123261342')))AND(CAST(NULL AS REAL))))OR(((0.4791105416688076) NOT BETWEEN ('1727364730') AND ('1041187416')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'0247' AS INTEGER))IS NOT(TYPEOF(DISTINCT -1373584182))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1543794044 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((((x'')AND(x'')))AND(0.21314550032165303)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x''))>=((0.2683248203310933))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-192169841 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (('1061344856' IN (0.5369256714343301, 0xf15e6c6)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(json_array_length('c') AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=1739761300 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'' IN ())))>=((((((((((((((((((NULL)AND('-1051690349')))OR(0.846985003219151)))AND('-1712206896')))OR(0.27718570667133013)))AND(0.18100630580414767)))AND('\n[')))OR(-6.17830847E8)))OR(''))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=1141971862 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1972286565 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=436548288'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-290176972'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.4121413274368243)) NOT BETWEEN ((('2095153321' IN ()))) AND ((CAST(x'' AS TEXT)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1572693807 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) NOTNULL) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL, x'', '124565780')) NOT BETWEEN (((~ ('')), ((NULL) ISNULL), (NULL IN ()))) AND ((CAST(NULL AS BLOB), (('-732806947')/(NULL)), CAST('L' AS REAL)))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=374105001 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '4 -69506688 sz=1038950465 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (CAST(0.9551944131012883 AS INTEGER))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '863096069 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.9318345929322528; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((')') BETWEEN (x'4e98') AND (x''))  WHEN ((NULL) NOTNULL) THEN CASE '-618459241'  WHEN NULL THEN '' ELSE x'71a5' END ELSE (((NULL)) NOT BETWEEN ((0.8520664551777403)) AND ((x''))) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-934196211 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(UPPER(DISTINCT -984408272) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('|iD]i\n')<(NULL))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', '1136173355 sz=-198745458 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=1414196536 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0x1647eae4 COLLATE NOCASE)OR(NULL COLLATE BINARY)))OR('' COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-2355639 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((((((((('1e500')OR('Bk%~\>O.')))OR(NULL)))AND(-8.5676365E7)))OR(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=740884526 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((0.1360658632669398 IN ()))<<(((((708446822)AND('-330873928')))OR(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=253093574 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(((x'') BETWEEN (0x28c39555) AND (0.9919954964154044)), (((('1323141779')OR(NULL)))OR(NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE 'C[-UoQ_'  WHEN ((0.9996366199681473)*(0.13685388407253563)) THEN x'a9f6' COLLATE BINARY WHEN ((-198745458)OR(-997301794)) THEN 1.972286565E9 COLLATE NOCASE WHEN ((x'')%(1784418122)) THEN 0.6493173445223057 COLLATE NOCASE ELSE (NOT (NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'', NULL, -0.0)) BETWEEN ((((1021054448) NOTNULL), (('') NOT NULL), ((((((((((((x'')AND(NULL)))AND(0.7623077614244744)))AND(-7.32806947E8)))OR(x'')))OR('0.6557721512259972')))OR(-337593243)))) AND ((((((((((0.1891880914904449)OR(NULL)))OR(NULL)))AND('-1284618519')))OR('1734478075')), 0.9183922640163811 COLLATE NOCASE, (~ ('-69506688'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2 374105001'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=765895428 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.79736460507565 COLLATE RTRIM)-((((0.604486081690892)) BETWEEN ((0X7c07737e)) AND ((NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '4 sz=1855117349 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1646221977 583897510 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CASE WHEN 3.43683931E8 THEN NULL ELSE 0.6081326093809356 END))=((((NULL)%(0.18100630580414767))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.8869631947272967) ISNULL) COLLATE BINARY COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.3525099597420672 COLLATE BINARY) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=374105001 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((json_insert('2scVDR刟xt', '1727364730', x'', 0.6756498610338006, NULL))OR((((''))>=((')X[~a7M)'))))))OR(((x'') BETWEEN (0.8441670111283962) AND ('Jg9^)j')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((x'6abd')AND(((0.7782650160284855)>>(NULL)))))OR((+ (NULL)))))OR(((NULL)|(0.558626803978535)))))OR((('r\')OR('1993329932')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') BETWEEN ('-318048869') AND (0.5748918092877812)) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2 71682047 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL IN ()) COLLATE NOCASE; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE NOCASE) BETWEEN (1.345282985E9) AND (((x'03fa') NOT BETWEEN ('1014963859') AND (x'cb3d1a9a')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.738200975744487) NOT BETWEEN (((')')<(NULL))) AND (((-1.299314778E9) NOT NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-68904647 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=42883357'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((NULL)|('0.6557721512259972')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', '1420319863 0 sz=-718577375 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CASE WHEN NULL THEN '845895514' WHEN 0.8823990332295524 THEN NULL WHEN '*c2?x6' THEN 0.9207281930337392 ELSE 0.3162658406923682 END))<=(((0.48284108880505283 IN ('?#h'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-1629643914'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CAST(x'' AS BLOB), ((951608377)&(NULL)), ((NULL)AND(NULL))))>=(('ZAYUg-T' COLLATE NOCASE, ((('Km', 0X2dfc374f, '387364054')) NOT BETWEEN ((x'', NULL, 0.16330481355969662)) AND (('zj洋i-*!', 2.095153321E9, NULL))), (~ (x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=793513156'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 0 sz=519752360 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')GLOB(NULL)) IN ('123383271')); -- 0ms;
INSERT OR ABORT INTO rt0(c3, c0) VALUES ('0.613034922483648', NULL); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (NULL); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO rt0 VALUES (0.8770299248785464, 0.19858648926343148, NULL, NULL, -53391603), (x'c73ab9e58fff', '322842149', '', '', 0.4355529610011548), (-71786086, 0x72947032, '1977279010', NULL, '2095153321'), (0.2873081904410699, NULL, 0.2954091545436599, x'b331', 0Xffffffff8f8b4779), (0X3e0f4258, 48775334, NULL, x'2c45', 0.42867938488105184); -- 0ms;
INSERT OR IGNORE INTO rt0(c3) VALUES (((((NULL) NOT BETWEEN (0.9286071848417443) AND (x''))) BETWEEN (CAST('-618459241' AS NUMERIC)) AND (((NULL) BETWEEN (NULL) AND (-1068022881))))); -- 0ms;
INSERT OR REPLACE INTO rt0(c2, c0, c1) VALUES ('{	', 0.9922657130760166, NULL); -- 0ms;
UPDATE OR IGNORE rt0 SET (c4, c0)=(0.31244900350383464, '1195553419') WHERE ((((((((NULL)AND(((x'')GLOB(rt0.c2)))))OR((((rt0.c0, rt0.c1, x'')) BETWEEN ((rt0.c3, rt0.c0, rt0.c4)) AND ((rt0.c3, rt0.c0, rt0.c3))))))AND(((0.5957135880863941)GLOB(rt0.c3)))))AND('_is4D/V')); -- 0ms;
UPDATE OR IGNORE rt0 SET (c0, c1)=(0X8a33468, 0.9551944131012883) WHERE (((0.7739736807766903)) BETWEEN ((rt0.c0)) AND ((rt0.c4))) COLLATE BINARY; -- 0ms;
UPDATE OR ROLLBACK rt0 SET (c2, c4, c3)=(0.47330008371103494, '?\r', 0.803642394045008); -- 0ms;
UPDATE OR IGNORE rt0 SET c2='n빙/&', c3=0.33465532154320154 WHERE (rt0.c4 IN (((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c3)))OR(rt0.c4)))AND(rt0.c0)))); -- 0ms;
END TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA locking_mode = EXCLUSIVE; -- 1ms;
INSERT OR IGNORE INTO rt0(c4, c3) VALUES ('-253047751', ''); -- 0ms;
UPDATE OR IGNORE rt0 SET (c3)=('-732806947'); -- 1ms;
INSERT OR IGNORE INTO rt0(c3, c0, c4, c1) VALUES (x'de73', x'', NULL, NULL), (0.04657824912957653, '', NULL, x''), ('1857329787', NULL, x'', 0.16486340426108936); -- 0ms;
ANALYZE; -- 0ms;
UPDATE rt0 SET (c3)=(''); -- 0ms;
END TRANSACTION; -- 0ms;
PRAGMA temp.legacy_file_format = true; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c3, c4, c2) VALUES ('1265662028', NULL, 0.1029761857175121, NULL); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=(NULL); -- 0ms;
END; -- 0ms;
UPDATE OR IGNORE rt0 SET c2=x'', c3='-1154890402'; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ABORT INTO rt0(c3) VALUES ('0.6502853447262086'); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c4, c3, c0, c2) VALUES (NULL, '', '-862639876', x''), (0xffffffff8101a05e, NULL, 0.8327689171834819, x''), (0.23113053908935632, '1372943491', NULL, '276849801'); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c4, c2) VALUES (NULL, 0xffffffffb49e0d59, NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
UPDATE OR FAIL rt0 SET c1='374105001' WHERE rt0.c1; -- 0ms;
UPDATE OR IGNORE rt0 SET c0='1104749782'; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
UPDATE OR ABORT rt0 SET (c0, c3)=(NULL, '1382156762'); -- 0ms;
UPDATE OR IGNORE rt0 SET (c2)=('?*9rVM8ዂ^') WHERE (((('') NOT BETWEEN (rt0.c3) AND (rt0.c0))) NOT BETWEEN (CAST(rt0.c2 AS BLOB)) AND (((((rt0.c0)AND(rt0.c1)))AND(rt0.c2)))); -- 0ms;
PRAGMA cache_spill = -555279062516403247; -- 0ms;
INSERT OR REPLACE INTO rt0(c2) VALUES (5.31018234E8), (x''), (0xfec899d); -- 0ms;
INSERT OR REPLACE INTO rt0(c4, c0, c2, c3) VALUES ('secondsTrX)', '2059684498', '-746008184', NULL); -- 0ms;
INSERT OR FAIL INTO rt0 VALUES (0.12765699141979048, '', 0Xffffffffe2896b09, '1857329787', ''), (NULL, '-1886697607', 0.9112408858925342, 0x3fdece92, x''), (136954664, '/2I6w|G', '-778682781', 0.4353288949946732, 1.438082312E9); -- 0ms;
INSERT OR ABORT INTO rt0(c1, c0, c3, c4) VALUES (0.9457082181020697, '341412524', '-48325434', NULL); -- 0ms;
INSERT OR REPLACE INTO rt0(c4, c0, c2) VALUES (0.05111380897415774, 0x62763c6d, -4.8325434E7); -- 0ms;
INSERT OR REPLACE INTO rt0(c0) VALUES ('-1134925923'), (0x6152363), (x'39dd'); -- 0ms;
INSERT OR FAIL INTO rt0(c2) VALUES (x''); -- 0ms;
PRAGMA mmap_size = -6669625283290253305; -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=(x'') WHERE ((rt0.c2)/(((rt0.c3)%(NULL)))); -- 0ms;
REINDEX RTRIM; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO rt0(c4) VALUES (x''), ('-69506688'), (-2123261342); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c4, c2) VALUES (0xffffffffa38ca4ff, '1459598727', x''); -- 0ms;
UPDATE OR REPLACE rt0 SET c3=765895428 WHERE rt0.c0; -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=(0.6724946003686082); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c4, c0, c2) VALUES (x'1180', NULL, 0.26589662426352034, 2.53093574E8); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-961313582 unordered'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET (c2)=(NULL) WHERE CASE WHEN ((rt0.c0) IS TRUE) THEN (((rt0.c4, rt0.c3, rt0.c0))>((rt0.c1, '-540334903', NULL))) ELSE INSTR(rt0.c1, rt0.c2) END; -- 0ms;
UPDATE OR IGNORE rt0 SET (c1, c1)=(0.8361894207631668, x'7fc9') WHERE (0.08800840908955165 IN ()); -- 0ms;
UPDATE rt0 SET (c4)=('-1302826095'); -- 0ms;
UPDATE OR IGNORE rt0 SET c1=0.8570376473173561; -- 0ms;
VACUUM main; -- 0ms;
VACUUM temp; -- 0ms;
END TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET (c3)=(0.507392306306549); -- 0ms;
COMMIT; -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c3, c4, c2) VALUES (972161321, -2128070758, x'', 0.5704468692584583); -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c4, c1) VALUES ('-741732221', x'8251', 'minutes'); -- 0ms;
INSERT OR FAIL INTO rt0(c2, c1) VALUES (NULL, NULL); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT OR FAIL INTO rt0(c3, c1, c0) VALUES (0.6864002388306117, '-s姺[&*F71', '{쳛'), (x'', 'CX', 'now⬟eI'), (x'', x'', x''); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c2, c3, c4) VALUES ('-720661143', '-697511655', '''蹮)!>{ ', x''); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c3) VALUES (0.09042512487029963, '-1264710311'); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c1, c0, c2, c4) VALUES (0X267e6532, '-470873587', '-2082479713', x'602b'); -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c0, c1, c3) VALUES ('-1147012821', '', x'2b4eaea8', x''), (NULL, '-617830847', x'', '8Mu'), (NULL, '', x'64d4', NULL); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
UPDATE rt0 SET c2='1878282315', c0=x'' WHERE (rt0.c3 IN ()); -- 0ms;
UPDATE OR IGNORE rt0 SET c4=-855943241, c1=NULL, c2=x'a7bb' WHERE CAST(((rt0.c3)<<(rt0.c3)) AS BLOB); -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
UPDATE rt0 SET (c4)=(NULL); -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=(NULL); -- 0ms;
ANALYZE; -- 0ms;
PRAGMA main.application_id; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0); -- 1ms;
UPDATE vt0 SET c0=x''; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(0.43760317426813056) WHERE ''; -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES ('-1241218462'); -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
VACUUM; -- 1ms;
ANALYZE; -- 0ms;
UPDATE OR IGNORE rt0 SET (c0, c4)=(253093574, '8De]*') WHERE ((((((rt0.c4)&(rt0.c1)))AND(CASE WHEN rt0.c0 THEN 0xffffffffa0cec0a6 END)))OR(rt0.c2)); -- 1ms;
UPDATE OR IGNORE rt0 SET c0='-1585865797'; -- 0ms;
PRAGMA temp.integrity_check; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES ('253093574'); -- 0ms;
UPDATE rt0 SET c4=0x4265f297, c2='minutes'; -- 0ms;
ANALYZE; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 1ms;
UPDATE OR ABORT vt0 SET c0='1dh['; -- 0ms;
UPDATE OR IGNORE rt0 SET c2=x''; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT rt0.c2, rt0.c4 FROM rt0;
SELECT ALL rt0.c2, rt0.c4 FROM rt0 WHERE ((((x'') IS FALSE) IN ((((rt0.c0, rt0.c0, rt0.c1))<((rt0.c4, rt0.c2, rt0.c2)))))) UNION ALL SELECT ALL rt0.c2, rt0.c4 FROM rt0 WHERE ((NOT ((((x'') IS FALSE) IN ((((rt0.c0, rt0.c0, rt0.c1))<((rt0.c4, rt0.c2, rt0.c2)))))))) UNION ALL SELECT rt0.c2, rt0.c4 FROM rt0 WHERE ((((((x'') IS FALSE) IN ((((rt0.c0, rt0.c0, rt0.c1))<((rt0.c4, rt0.c2, rt0.c2)))))) ISNULL));
SELECT rt0.c2, rt0.c4 FROM rt0;
SELECT DISTINCT rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c3 FROM rt0 WHERE (TIME((((rt0.c4, rt0.c0, rt0.c4)) NOT BETWEEN ((rt0.c4, rt0.c4, rt0.c0)) AND ((NULL, NULL, x'df74'))), CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END, TYPEOF(DISTINCT rt0.c0))) UNION SELECT DISTINCT rt0.c3 FROM rt0 WHERE ((NOT (TIME((((rt0.c4, rt0.c0, rt0.c4)) NOT BETWEEN ((rt0.c4, rt0.c4, rt0.c0)) AND ((NULL, NULL, x'df74'))), CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END, TYPEOF(DISTINCT rt0.c0))))) UNION SELECT DISTINCT rt0.c3 FROM rt0 WHERE (((TIME((((rt0.c4, rt0.c0, rt0.c4)) NOT BETWEEN ((rt0.c4, rt0.c4, rt0.c0)) AND ((NULL, NULL, x'df74'))), CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END, TYPEOF(DISTINCT rt0.c0))) ISNULL));
SELECT DISTINCT rt0.c3 FROM rt0;
SELECT ALL rt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON ((((rt0.c4) BETWEEN (rt0.c4) AND (vt0.c0))) NOT BETWEEN (((rt0.c1)GLOB(rt0.c1))) AND (load_extension(rt0.c0))) GROUP BY rt0.c1;
SELECT rt0.c3, rt0.c1, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c4, rt0.c2;
SELECT ALL rt0.c3, rt0.c1, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c4, rt0.c2 HAVING CASE TOTAL(rt0.c4)  WHEN rt0.c3 THEN COUNT(rt0.c3) WHEN (~ (rt0.c0)) THEN (SUM(COUNT(TOTAL(rt0.c3))) IN ()) WHEN CASE WHEN rt0.c3 THEN rt0.c0 END THEN ((rt0.c0)-(COUNT(*))) END UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c4, rt0.c2 HAVING (NOT (CASE TOTAL(rt0.c4)  WHEN rt0.c3 THEN COUNT(rt0.c3) WHEN (~ (rt0.c0)) THEN (SUM(COUNT(TOTAL(rt0.c3))) IN ()) WHEN CASE WHEN rt0.c3 THEN rt0.c0 END THEN ((rt0.c0)-(COUNT(*))) END)) UNION ALL SELECT rt0.c3, rt0.c1, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c4, rt0.c2 HAVING ((CASE TOTAL(rt0.c4)  WHEN rt0.c3 THEN COUNT(rt0.c3) WHEN (~ (rt0.c0)) THEN (SUM(COUNT(TOTAL(rt0.c3))) IN ()) WHEN CASE WHEN rt0.c3 THEN rt0.c0 END THEN ((rt0.c0)-(COUNT(*))) END) ISNULL);
SELECT rt0.c3, rt0.c1, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c4, rt0.c2;
SELECT ALL rt0.c3, rt0.c1, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c4, rt0.c2 HAVING CASE TOTAL(rt0.c4)  WHEN rt0.c3 THEN COUNT(rt0.c3) WHEN (~ (rt0.c0)) THEN (SUM(COUNT(TOTAL(rt0.c3))) IN ()) WHEN CASE WHEN rt0.c3 THEN rt0.c0 END THEN ((rt0.c0)-(COUNT(*))) END UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c4, rt0.c2 HAVING (NOT (CASE TOTAL(rt0.c4)  WHEN rt0.c3 THEN COUNT(rt0.c3) WHEN (~ (rt0.c0)) THEN (SUM(COUNT(TOTAL(rt0.c3))) IN ()) WHEN CASE WHEN rt0.c3 THEN rt0.c0 END THEN ((rt0.c0)-(COUNT(*))) END)) UNION ALL SELECT rt0.c3, rt0.c1, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c4, rt0.c2 HAVING ((CASE TOTAL(rt0.c4)  WHEN rt0.c3 THEN COUNT(rt0.c3) WHEN (~ (rt0.c0)) THEN (SUM(COUNT(TOTAL(rt0.c3))) IN ()) WHEN CASE WHEN rt0.c3 THEN rt0.c0 END THEN ((rt0.c0)-(COUNT(*))) END) ISNULL);
SELECT rt0.c3, rt0.c1, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c4, rt0.c2;
SELECT ALL rt0.c0, rt0.c4, rt0.c2 FROM rt0;
SELECT rt0.c0, rt0.c4, rt0.c2 FROM rt0 WHERE (((NULL) BETWEEN (((rt0.c3) NOTNULL)) AND (CAST(rt0.c1 AS INTEGER)))) UNION ALL SELECT ALL rt0.c0, rt0.c4, rt0.c2 FROM rt0 WHERE ((NOT (((NULL) BETWEEN (((rt0.c3) NOTNULL)) AND (CAST(rt0.c1 AS INTEGER)))))) UNION ALL SELECT rt0.c0, rt0.c4, rt0.c2 FROM rt0 WHERE (((((NULL) BETWEEN (((rt0.c3) NOTNULL)) AND (CAST(rt0.c1 AS INTEGER)))) ISNULL));
SELECT ALL rt0.c0, rt0.c4, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (((rt0.c4)=((rt0.c1 IN ())))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (((rt0.c4)==((rt0.c1 IN ())))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((((rt0.c4)=((rt0.c1 IN ())))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT ALL rt0.c1, rt0.c4, rt0.c2, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c3, rt0.c0;
SELECT rt0.c1, rt0.c4, rt0.c2, rt0.c3, rt0.c0 FROM rt0 WHERE (-1085690098) GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c3, rt0.c0 UNION SELECT rt0.c1, rt0.c4, rt0.c2, rt0.c3, rt0.c0 FROM rt0 WHERE ((NOT (-1085690098))) GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c3, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c4, rt0.c2, rt0.c3, rt0.c0 FROM rt0 WHERE (((-1085690098) ISNULL)) GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c3, rt0.c0;
SELECT ALL rt0.c1, rt0.c4, rt0.c2, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c3, rt0.c0;
SELECT ALL rt0.c0, vt0.c0, rt0.c4, rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, rt0.c4, rt0.c2, rt0.c1;
SELECT rt0.c0, vt0.c0, rt0.c4, rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, rt0.c4, rt0.c2, rt0.c1 HAVING (- (GROUP_CONCAT(rt0.c4))) UNION ALL SELECT rt0.c0, vt0.c0, rt0.c4, rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, rt0.c4, rt0.c2, rt0.c1 HAVING (NOT ((- (GROUP_CONCAT(rt0.c4))))) UNION ALL SELECT ALL rt0.c0, vt0.c0, rt0.c4, rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, rt0.c4, rt0.c2, rt0.c1 HAVING (((- (GROUP_CONCAT(rt0.c4)))) ISNULL);
SELECT ALL rt0.c0, vt0.c0, rt0.c4, rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, rt0.c4, rt0.c2, rt0.c1;
SELECT rt0.c0, vt0.c0, rt0.c4, rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, rt0.c4, rt0.c2, rt0.c1 HAVING (- (GROUP_CONCAT(rt0.c4))) UNION ALL SELECT rt0.c0, vt0.c0, rt0.c4, rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, rt0.c4, rt0.c2, rt0.c1 HAVING (NOT ((- (GROUP_CONCAT(rt0.c4))))) UNION ALL SELECT ALL rt0.c0, vt0.c0, rt0.c4, rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, rt0.c4, rt0.c2, rt0.c1 HAVING (((- (GROUP_CONCAT(rt0.c4)))) ISNULL);
SELECT ALL rt0.c0, vt0.c0, rt0.c4, rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, rt0.c4, rt0.c2, rt0.c1;
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0))>=((x'')))) IS FALSE)) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((((vt0.c0))>=((x'')))) IS FALSE)))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((((((vt0.c0))>=((x'')))) IS FALSE)) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (CASE WHEN (0.7394823419005033 IN ()) THEN rt0.c3 COLLATE BINARY ELSE ((rt0.c0)<>(vt0.c0)) END) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (CASE WHEN (0.7394823419005033 IN ()) THEN rt0.c3 COLLATE BINARY ELSE ((rt0.c0)!=(vt0.c0)) END))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((CASE WHEN (0.7394823419005033 IN ()) THEN rt0.c3 COLLATE BINARY ELSE ((rt0.c0)!=(vt0.c0)) END) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT ALL rt0.c2, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1;
SELECT rt0.c2, rt0.c3, rt0.c1 FROM rt0 WHERE (((rt0.c3)|(rt0.c0 COLLATE BINARY))) GROUP BY rt0.c2, rt0.c3, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c3, rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c3)|(rt0.c0 COLLATE BINARY))))) GROUP BY rt0.c2, rt0.c3, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c3, rt0.c1 FROM rt0 WHERE (((((rt0.c3)|(rt0.c0 COLLATE BINARY))) ISNULL)) GROUP BY rt0.c2, rt0.c3, rt0.c1;
SELECT ALL rt0.c2, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1;
SELECT ALL rt0.c1, rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c4;
SELECT rt0.c1, rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c4 HAVING CAST(rt0.c2 AS NUMERIC) COLLATE BINARY UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c4 HAVING (NOT (CAST(rt0.c2 AS NUMERIC) COLLATE BINARY)) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c4 HAVING ((CAST(rt0.c2 AS NUMERIC) COLLATE BINARY) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c4;
SELECT rt0.c1, rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c4 HAVING CAST(rt0.c2 AS NUMERIC) COLLATE BINARY UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c4 HAVING (NOT (CAST(rt0.c2 AS NUMERIC) COLLATE BINARY)) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c4 HAVING ((CAST(rt0.c2 AS NUMERIC) COLLATE BINARY) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c4;
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ('') UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (''))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((('') ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (((((NULL) NOT BETWEEN (rt0.c1) AND (rt0.c2))) NOT BETWEEN (((vt0.c0)<>(rt0.c3))) AND ('581507098'))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (((((NULL) NOT BETWEEN (rt0.c1) AND (rt0.c2))) NOT BETWEEN (((vt0.c0)!=(rt0.c3))) AND ('581507098'))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((((((NULL) NOT BETWEEN (rt0.c1) AND (rt0.c2))) NOT BETWEEN (((vt0.c0)<>(rt0.c3))) AND ('581507098'))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT ALL rt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON ((((((((((rt0.c3)OR('-253047751')))OR(rt0.c0)))OR(vt0.c0)))AND(rt0.c3))) NOT BETWEEN (rt0.c4) AND ((+ (rt0.c1)))) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON ((((((((((rt0.c3)OR('-253047751')))OR(rt0.c0)))OR(vt0.c0)))AND(rt0.c3))) NOT BETWEEN (rt0.c4) AND ((+ (rt0.c1)))) WHERE (((((rt0.c3)<>(rt0.c4))) ISNULL)) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON ((((((((((rt0.c3)OR('-253047751')))OR(rt0.c0)))OR(vt0.c0)))AND(rt0.c3))) NOT BETWEEN (rt0.c4) AND ((+ (rt0.c1)))) WHERE ((NOT (((((rt0.c3)<>(rt0.c4))) ISNULL)))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON ((((((((((rt0.c3)OR('-253047751')))OR(rt0.c0)))OR(vt0.c0)))AND(rt0.c3))) NOT BETWEEN (rt0.c4) AND ((+ (rt0.c1)))) WHERE (((((((rt0.c3)!=(rt0.c4))) ISNULL)) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON ((((((((((rt0.c3)OR('-253047751')))OR(rt0.c0)))OR(vt0.c0)))AND(rt0.c3))) NOT BETWEEN (rt0.c4) AND ((+ (rt0.c1)))) GROUP BY rt0.c1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX(COUNT(vt0.c0)) COLLATE BINARY UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(COUNT(vt0.c0)) COLLATE BINARY)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(COUNT(vt0.c0)) COLLATE BINARY) ISNULL);
SELECT ALL MAX((- (((vt0.c0)*(''))))) FROM vt0 ORDER BY ((vt0.c0) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT ALL * FROM vt0, rt0;
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c1) NOT NULL)) BETWEEN ((((rt0.c4, rt0.c1, 5.1975236E8)) BETWEEN ((rt0.c2, 0.5158996406681123, rt0.c3)) AND ((rt0.c3, 0Xffffffff88103de4, rt0.c4)))) AND (((rt0.c2)>=(rt0.c4))))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE ((NOT (((((rt0.c1) NOT NULL)) BETWEEN ((((rt0.c4, rt0.c1, 5.1975236E8)) BETWEEN ((rt0.c2, 0.5158996406681123, rt0.c3)) AND ((rt0.c3, 0xffffffff88103de4, rt0.c4)))) AND (((rt0.c2)>=(rt0.c4))))))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE (((((((rt0.c1) NOT NULL)) BETWEEN ((((rt0.c4, rt0.c1, 5.1975236E8)) BETWEEN ((rt0.c2, 0.5158996406681123, rt0.c3)) AND ((rt0.c3, 0Xffffffff88103de4, rt0.c4)))) AND (((rt0.c2)>=(rt0.c4))))) ISNULL));
SELECT ALL * FROM vt0, rt0;
SELECT DISTINCT rt0.c2 FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((rt0.c2)AND(rt0.c0)))OR(rt0.c3))) NOT BETWEEN (((x'') NOT BETWEEN (rt0.c1) AND (vt0.c0))) AND (((rt0.c0)<<(rt0.c3))));
SELECT DISTINCT rt0.c2 FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((rt0.c2)AND(rt0.c0)))OR(rt0.c3))) NOT BETWEEN (((x'') NOT BETWEEN (rt0.c1) AND (vt0.c0))) AND (((rt0.c0)<<(rt0.c3)))) WHERE ((((rt0.c1 IN ('1873820934', rt0.c2)))*(rt0.c2 COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c2 FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((rt0.c2)AND(rt0.c0)))OR(rt0.c3))) NOT BETWEEN (((x'') NOT BETWEEN (rt0.c1) AND (vt0.c0))) AND (((rt0.c0)<<(rt0.c3)))) WHERE ((NOT ((((rt0.c1 IN ('1873820934', rt0.c2)))*(rt0.c2 COLLATE RTRIM))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((rt0.c2)AND(rt0.c0)))OR(rt0.c3))) NOT BETWEEN (((x'') NOT BETWEEN (rt0.c1) AND (vt0.c0))) AND (((rt0.c0)<<(rt0.c3)))) WHERE ((((((rt0.c1 IN ('1873820934', rt0.c2)))*(rt0.c2 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((rt0.c2)AND(rt0.c0)))OR(rt0.c3))) NOT BETWEEN (((x'') NOT BETWEEN (rt0.c1) AND (vt0.c0))) AND (((rt0.c0)<<(rt0.c3))));
SELECT ALL vt0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c4 FROM rt0 NATURAL JOIN vt0 GROUP BY vt0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c4;
SELECT vt0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c4 FROM rt0 NATURAL JOIN vt0 WHERE (((UPPER(rt0.c1))>=(((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c3))))) GROUP BY vt0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c4 UNION SELECT ALL vt0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c4 FROM rt0 NATURAL JOIN vt0 WHERE ((NOT (((UPPER(rt0.c1))>=(((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c3))))))) GROUP BY vt0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c4 UNION SELECT vt0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c4 FROM rt0 NATURAL JOIN vt0 WHERE (((((UPPER(rt0.c1))>=(((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c3))))) ISNULL)) GROUP BY vt0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c4;
SELECT ALL vt0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c4 FROM rt0 NATURAL JOIN vt0 GROUP BY vt0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c4;
SELECT ALL vt0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c0 FROM rt0 INNER JOIN vt0 ON CAST(((rt0.c4)IS NOT(rt0.c2)) AS TEXT) GROUP BY vt0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c0;
SELECT vt0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c0 FROM rt0 INNER JOIN vt0 ON CAST(((rt0.c4)IS NOT(rt0.c2)) AS TEXT) GROUP BY vt0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c0 HAVING COUNT(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1))) UNION ALL SELECT vt0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c0 FROM rt0 INNER JOIN vt0 ON CAST(((rt0.c4)IS NOT(rt0.c2)) AS TEXT) GROUP BY vt0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c0 HAVING (NOT (COUNT(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) UNION ALL SELECT ALL vt0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c0 FROM rt0 INNER JOIN vt0 ON CAST(((rt0.c4)IS NOT(rt0.c2)) AS TEXT) GROUP BY vt0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c0 HAVING ((COUNT(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) ISNULL);
SELECT ALL vt0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c0 FROM rt0 INNER JOIN vt0 ON CAST(((rt0.c4)IS NOT(rt0.c2)) AS TEXT) GROUP BY vt0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c0;
SELECT vt0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c0 FROM rt0 INNER JOIN vt0 ON CAST(((rt0.c4)IS NOT(rt0.c2)) AS TEXT) GROUP BY vt0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c0 HAVING COUNT(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1))) UNION ALL SELECT vt0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c0 FROM rt0 INNER JOIN vt0 ON CAST(((rt0.c4)IS NOT(rt0.c2)) AS TEXT) GROUP BY vt0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c0 HAVING (NOT (COUNT(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) UNION ALL SELECT ALL vt0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c0 FROM rt0 INNER JOIN vt0 ON CAST(((rt0.c4)IS NOT(rt0.c2)) AS TEXT) GROUP BY vt0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c0 HAVING ((COUNT(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) ISNULL);
SELECT ALL vt0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c0 FROM rt0 INNER JOIN vt0 ON CAST(((rt0.c4)IS NOT(rt0.c2)) AS TEXT) GROUP BY vt0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c0;
SELECT ALL rt0.c4, rt0.c3, vt0.c0 FROM rt0, vt0;
SELECT ALL rt0.c4, rt0.c3, vt0.c0 FROM rt0, vt0 WHERE (((((rt0.c0) NOT NULL)) IS TRUE)) UNION ALL SELECT ALL rt0.c4, rt0.c3, vt0.c0 FROM rt0, vt0 WHERE ((NOT (((((rt0.c0) NOT NULL)) IS TRUE)))) UNION ALL SELECT rt0.c4, rt0.c3, vt0.c0 FROM rt0, vt0 WHERE (((((((rt0.c0) NOT NULL)) IS TRUE)) ISNULL));
SELECT ALL rt0.c4, rt0.c3, vt0.c0 FROM rt0, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (x'') UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (x''))) UNION SELECT DISTINCT * FROM vt0 WHERE (((x'') ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT rt0.c4, rt0.c0, rt0.c2, rt0.c3, vt0.c0, rt0.c1 FROM vt0 CROSS JOIN rt0 ON (((((rt0.c4 IN ()))AND(((rt0.c4)<(rt0.c1)))))OR(((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c0)))) GROUP BY rt0.c4, rt0.c0, rt0.c2, rt0.c3, vt0.c0, rt0.c1;
SELECT ALL rt0.c4, rt0.c0, rt0.c2, rt0.c3, vt0.c0, rt0.c1 FROM vt0 CROSS JOIN rt0 ON (((((rt0.c4 IN ()))AND(((rt0.c4)<(rt0.c1)))))OR(((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c0)))) WHERE ((+ (rt0.c4))) GROUP BY rt0.c4, rt0.c0, rt0.c2, rt0.c3, vt0.c0, rt0.c1 UNION SELECT rt0.c4, rt0.c0, rt0.c2, rt0.c3, vt0.c0, rt0.c1 FROM vt0 CROSS JOIN rt0 ON (((((rt0.c4 IN ()))AND(((rt0.c4)<(rt0.c1)))))OR(((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c0)))) WHERE ((NOT ((+ (rt0.c4))))) GROUP BY rt0.c4, rt0.c0, rt0.c2, rt0.c3, vt0.c0, rt0.c1 UNION SELECT ALL rt0.c4, rt0.c0, rt0.c2, rt0.c3, vt0.c0, rt0.c1 FROM vt0 CROSS JOIN rt0 ON (((((rt0.c4 IN ()))AND(((rt0.c4)<(rt0.c1)))))OR(((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c0)))) WHERE ((((+ (rt0.c4))) ISNULL)) GROUP BY rt0.c4, rt0.c0, rt0.c2, rt0.c3, vt0.c0, rt0.c1;
SELECT rt0.c4, rt0.c0, rt0.c2, rt0.c3, vt0.c0, rt0.c1 FROM vt0 CROSS JOIN rt0 ON (((((rt0.c4 IN ()))AND(((rt0.c4)<(rt0.c1)))))OR(((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c0)))) GROUP BY rt0.c4, rt0.c0, rt0.c2, rt0.c3, vt0.c0, rt0.c1;
SELECT ALL rt0.c1, rt0.c2, rt0.c4, rt0.c3 FROM vt0 FULL OUTER JOIN rt0 ON -1.693058304E9 COLLATE BINARY GROUP BY rt0.c1, rt0.c2, rt0.c4, rt0.c3;
SELECT rt0.c1, rt0.c2, rt0.c4, rt0.c3 FROM vt0 FULL OUTER JOIN rt0 ON -1.693058304E9 COLLATE BINARY GROUP BY rt0.c1, rt0.c2, rt0.c4, rt0.c3 HAVING TOTAL(rt0.c1 COLLATE RTRIM) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c4, rt0.c3 FROM vt0 FULL OUTER JOIN rt0 ON -1.693058304E9 COLLATE BINARY GROUP BY rt0.c1, rt0.c2, rt0.c4, rt0.c3 HAVING (NOT (TOTAL(rt0.c1 COLLATE RTRIM))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c4, rt0.c3 FROM vt0 FULL OUTER JOIN rt0 ON -1.693058304E9 COLLATE BINARY GROUP BY rt0.c1, rt0.c2, rt0.c4, rt0.c3 HAVING ((TOTAL(rt0.c1 COLLATE RTRIM)) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c4, rt0.c3 FROM vt0 FULL OUTER JOIN rt0 ON -1.693058304E9 COLLATE BINARY GROUP BY rt0.c1, rt0.c2, rt0.c4, rt0.c3;
SELECT rt0.c1, rt0.c2, rt0.c4, rt0.c3 FROM vt0 FULL OUTER JOIN rt0 ON -1.693058304E9 COLLATE BINARY GROUP BY rt0.c1, rt0.c2, rt0.c4, rt0.c3 HAVING TOTAL(rt0.c1 COLLATE RTRIM) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c4, rt0.c3 FROM vt0 FULL OUTER JOIN rt0 ON -1.693058304E9 COLLATE BINARY GROUP BY rt0.c1, rt0.c2, rt0.c4, rt0.c3 HAVING (NOT (TOTAL(rt0.c1 COLLATE RTRIM))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c4, rt0.c3 FROM vt0 FULL OUTER JOIN rt0 ON -1.693058304E9 COLLATE BINARY GROUP BY rt0.c1, rt0.c2, rt0.c4, rt0.c3 HAVING ((TOTAL(rt0.c1 COLLATE RTRIM)) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c4, rt0.c3 FROM vt0 FULL OUTER JOIN rt0 ON -1.693058304E9 COLLATE BINARY GROUP BY rt0.c1, rt0.c2, rt0.c4, rt0.c3;
SELECT rt0.c3, rt0.c0 FROM vt0, rt0;
SELECT rt0.c3, rt0.c0 FROM vt0, rt0 WHERE ((((CAST(rt0.c1 AS NUMERIC)))>=(((- (vt0.c0)))))) UNION ALL SELECT ALL rt0.c3, rt0.c0 FROM vt0, rt0 WHERE ((NOT ((((CAST(rt0.c1 AS NUMERIC)))>=(((- (vt0.c0)))))))) UNION ALL SELECT rt0.c3, rt0.c0 FROM vt0, rt0 WHERE ((((((CAST(rt0.c1 AS NUMERIC)))>=(((- (vt0.c0)))))) ISNULL));
SELECT rt0.c3, rt0.c0 FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (CASE ((rt0.c4)<(rt0.c0))  WHEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt0.c0)) THEN ((rt0.c3) IS TRUE) WHEN (NOT (rt0.c1)) THEN ((rt0.c1)AND(rt0.c3)) WHEN rt0.c3 THEN ((rt0.c3)/(rt0.c2)) ELSE (rt0.c0 IN ()) END) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (CASE ((rt0.c4)<(rt0.c0))  WHEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt0.c0)) THEN ((rt0.c3) IS TRUE) WHEN (NOT (rt0.c1)) THEN ((rt0.c1)AND(rt0.c3)) WHEN rt0.c3 THEN ((rt0.c3)/(rt0.c2)) ELSE (rt0.c0 IN ()) END))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((CASE ((rt0.c4)<(rt0.c0))  WHEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt0.c0)) THEN ((rt0.c3) IS TRUE) WHEN (NOT (rt0.c1)) THEN ((rt0.c1)AND(rt0.c3)) WHEN rt0.c3 THEN ((rt0.c3)/(rt0.c2)) ELSE (rt0.c0 IN ()) END) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT ALL rt0.c4, rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM rt0 NOT INDEXED GROUP BY rt0.c4, rt0.c3, rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c4, rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (rt0.c1) GROUP BY rt0.c4, rt0.c3, rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c4, rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (rt0.c1))) GROUP BY rt0.c4, rt0.c3, rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c4, rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((rt0.c1) ISNULL)) GROUP BY rt0.c4, rt0.c3, rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c4, rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM rt0 NOT INDEXED GROUP BY rt0.c4, rt0.c3, rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING SUM(AVG(MAX(COUNT(AVG(COUNT(*)))))) UNION ALL SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING (NOT (SUM(AVG(MAX(COUNT(AVG(COUNT(*)))))))) UNION ALL SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING ((SUM(AVG(MAX(COUNT(AVG(COUNT(*))))))) ISNULL);
SELECT ALL rt0.c4, rt0.c3, rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c4, rt0.c3, rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((rt0.c4 IN ())) UNION ALL SELECT rt0.c4, rt0.c3, rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((rt0.c4 IN ())))) UNION ALL SELECT rt0.c4, rt0.c3, rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((rt0.c4 IN ())) ISNULL));
SELECT ALL rt0.c4, rt0.c3, rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c3, rt0.c2, vt0.c0 FROM rt0, vt0;
SELECT DISTINCT rt0.c1, rt0.c3, rt0.c2, vt0.c0 FROM rt0, vt0 WHERE (rt0.c3) UNION SELECT DISTINCT rt0.c1, rt0.c3, rt0.c2, vt0.c0 FROM rt0, vt0 WHERE ((NOT (rt0.c3))) UNION SELECT DISTINCT rt0.c1, rt0.c3, rt0.c2, vt0.c0 FROM rt0, vt0 WHERE (((rt0.c3) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c3, rt0.c2, vt0.c0 FROM rt0, vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0) IS TRUE))+(x''))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) IS TRUE))+(x''))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((((vt0.c0) IS TRUE))+(x''))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c2, rt0.c3, vt0.c0, rt0.c4, rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c3, vt0.c0, rt0.c4, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c3, vt0.c0, rt0.c4, rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c3, vt0.c0, rt0.c4, rt0.c0, rt0.c1 HAVING (((NOT (vt0.c0)))<=(GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT ALL rt0.c2, rt0.c3, vt0.c0, rt0.c4, rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c3, vt0.c0, rt0.c4, rt0.c0, rt0.c1 HAVING (NOT ((((NOT (vt0.c0)))<=(GROUP_CONCAT(COUNT(*)))))) UNION ALL SELECT ALL rt0.c2, rt0.c3, vt0.c0, rt0.c4, rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c3, vt0.c0, rt0.c4, rt0.c0, rt0.c1 HAVING (((((NOT (vt0.c0)))<=(GROUP_CONCAT(COUNT(*))))) ISNULL);
SELECT ALL * FROM rt0, vt0;
SELECT * FROM rt0, vt0 WHERE ((('-329847937' COLLATE BINARY) BETWEEN (CASE WHEN rt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c4 END) AND (((((((((((((rt0.c4)OR('Z')))AND('756615270')))OR(rt0.c4)))AND(rt0.c0)))OR(rt0.c1)))AND(vt0.c0))))) UNION ALL SELECT * FROM rt0, vt0 WHERE ((NOT ((('-329847937' COLLATE BINARY) BETWEEN (CASE WHEN rt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c4 END) AND (((((((((((((rt0.c4)OR('Z')))AND('756615270')))OR(rt0.c4)))AND(rt0.c0)))OR(rt0.c1)))AND(vt0.c0))))))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((((('-329847937' COLLATE BINARY) BETWEEN (CASE WHEN rt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c4 END) AND (((((((((((((rt0.c4)OR('Z')))AND('756615270')))OR(rt0.c4)))AND(rt0.c0)))OR(rt0.c1)))AND(vt0.c0))))) ISNULL));
SELECT ALL * FROM rt0, vt0;
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c3) NOTNULL) COLLATE RTRIM COLLATE NOCASE;
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c3) NOTNULL) COLLATE RTRIM COLLATE NOCASE WHERE (((((((rt0.c2)OR(rt0.c3)))OR(vt0.c0)))=(LIKELIHOOD(DISTINCT vt0.c0, 0.005075263627511095)))) UNION SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c3) NOTNULL) COLLATE RTRIM COLLATE NOCASE WHERE ((NOT (((((((rt0.c2)OR(rt0.c3)))OR(vt0.c0)))=(LIKELIHOOD(DISTINCT vt0.c0, 0.005075263627511095)))))) UNION SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c3) NOTNULL) COLLATE RTRIM COLLATE NOCASE WHERE (((((((((rt0.c2)OR(rt0.c3)))OR(vt0.c0)))=(LIKELIHOOD(DISTINCT vt0.c0, 0.005075263627511095)))) ISNULL));
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c3) NOTNULL) COLLATE RTRIM COLLATE NOCASE;
SELECT ALL rt0.c2, rt0.c4, rt0.c3 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c4, rt0.c3;
SELECT ALL rt0.c2, rt0.c4, rt0.c3 FROM vt0, rt0 WHERE (((rt0.c1)IS(rt0.c2)) COLLATE RTRIM) GROUP BY rt0.c2, rt0.c4, rt0.c3 UNION SELECT rt0.c2, rt0.c4, rt0.c3 FROM vt0, rt0 WHERE ((NOT (((rt0.c1)IS(rt0.c2)) COLLATE RTRIM))) GROUP BY rt0.c2, rt0.c4, rt0.c3 UNION SELECT rt0.c2, rt0.c4, rt0.c3 FROM vt0, rt0 WHERE (((((rt0.c1)IS(rt0.c2)) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c2, rt0.c4, rt0.c3;
SELECT ALL rt0.c2, rt0.c4, rt0.c3 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c4, rt0.c3;
SELECT rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c3;
SELECT rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c3 HAVING COUNT(COUNT(TOTAL(rt0.c3))) UNION ALL SELECT rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c3 HAVING (NOT (COUNT(COUNT(TOTAL(rt0.c3))))) UNION ALL SELECT rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c3 HAVING ((COUNT(COUNT(TOTAL(rt0.c3)))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((((~ (vt0.c0))) ISNULL)) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((~ (vt0.c0))) ISNULL)))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((((~ (vt0.c0))) ISNULL)) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((NULL COLLATE RTRIM) IS FALSE)) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((NULL COLLATE RTRIM) IS FALSE)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((NULL COLLATE RTRIM) IS FALSE)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT rt0.c4, rt0.c3, rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c4, rt0.c3, rt0.c1, rt0.c0, vt0.c0;
SELECT rt0.c4, rt0.c3, rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 WHERE (((((json_array(vt0.c0, vt0.c0))AND(CASE WHEN rt0.c0 THEN rt0.c2 END)))AND((rt0.c2 IN ())))) GROUP BY rt0.c4, rt0.c3, rt0.c1, rt0.c0, vt0.c0 UNION SELECT rt0.c4, rt0.c3, rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 WHERE ((NOT (((((json_array(vt0.c0, vt0.c0))AND(CASE WHEN rt0.c0 THEN rt0.c2 END)))AND((rt0.c2 IN ())))))) GROUP BY rt0.c4, rt0.c3, rt0.c1, rt0.c0, vt0.c0 UNION SELECT rt0.c4, rt0.c3, rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 WHERE (((((((json_array(vt0.c0, vt0.c0))AND(CASE WHEN rt0.c0 THEN rt0.c2 END)))AND((rt0.c2 IN ())))) ISNULL)) GROUP BY rt0.c4, rt0.c3, rt0.c1, rt0.c0, vt0.c0;
SELECT rt0.c4, rt0.c3, rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c4, rt0.c3, rt0.c1, rt0.c0, vt0.c0;
SELECT ALL vt0.c0 FROM rt0 NATURAL JOIN vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM rt0 NATURAL JOIN vt0 GROUP BY vt0.c0 HAVING COUNT(GROUP_CONCAT(MIN(rt0.c1))) UNION ALL SELECT vt0.c0 FROM rt0 NATURAL JOIN vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(GROUP_CONCAT(MIN(rt0.c1))))) UNION ALL SELECT ALL vt0.c0 FROM rt0 NATURAL JOIN vt0 GROUP BY vt0.c0 HAVING ((COUNT(GROUP_CONCAT(MIN(rt0.c1)))) ISNULL);
SELECT ALL rt0.c2, rt0.c3 FROM rt0, vt0;
SELECT ALL rt0.c2, rt0.c3 FROM rt0, vt0 WHERE (CASE WHEN TRIM(1.44913512E8, rt0.c1) THEN ((rt0.c4)+(rt0.c1)) WHEN CASE WHEN 0Xffffffffe22ae637 THEN rt0.c4 ELSE '''y''tB7' END THEN NULL WHEN vt0.c0 THEN UNLIKELY(rt0.c2) ELSE rt0.c3 COLLATE BINARY END) ORDER BY 0.010588979337058935 DESC, ((CASE WHEN rt0.c2 THEN rt0.c4 END) IS TRUE)  NULLS LAST, ((((rt0.c3)>=(rt0.c2))) IS TRUE) ASC;
SELECT rt0.c2, rt0.c3 FROM rt0, vt0 WHERE ((NOT (CASE WHEN TRIM(1.44913512E8, rt0.c1) THEN ((rt0.c4)+(rt0.c1)) WHEN CASE WHEN 0xffffffffe22ae637 THEN rt0.c4 ELSE '''y''tB7' END THEN NULL WHEN vt0.c0 THEN UNLIKELY(rt0.c2) ELSE rt0.c3 COLLATE BINARY END))) ORDER BY 0.010588979337058935 DESC, ((CASE WHEN rt0.c2 THEN rt0.c4 END) IS TRUE)  NULLS LAST, ((((rt0.c3)>=(rt0.c2))) IS TRUE) ASC;
SELECT ALL rt0.c2, rt0.c3 FROM rt0, vt0 WHERE (((CASE WHEN TRIM(1.44913512E8, rt0.c1) THEN ((rt0.c4)+(rt0.c1)) WHEN CASE WHEN 0xffffffffe22ae637 THEN rt0.c4 ELSE '''y''tB7' END THEN NULL WHEN vt0.c0 THEN UNLIKELY(rt0.c2) ELSE rt0.c3 COLLATE BINARY END) ISNULL)) ORDER BY 0.010588979337058935 DESC, ((CASE WHEN rt0.c2 THEN rt0.c4 END) IS TRUE)  NULLS LAST, ((((rt0.c3)>=(rt0.c2))) IS TRUE) ASC;
SELECT ALL rt0.c2, rt0.c3 FROM rt0, vt0;
SELECT DISTINCT rt0.c2 FROM vt0, rt0;
SELECT DISTINCT rt0.c2 FROM vt0, rt0 WHERE (CASE WHEN ((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c1)) THEN rt0.c4 END) UNION SELECT DISTINCT rt0.c2 FROM vt0, rt0 WHERE ((NOT (CASE WHEN ((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c1)) THEN rt0.c4 END))) UNION SELECT DISTINCT rt0.c2 FROM vt0, rt0 WHERE (((CASE WHEN ((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c1)) THEN rt0.c4 END) ISNULL));
SELECT DISTINCT rt0.c2 FROM vt0, rt0;
SELECT ALL rt0.c0, vt0.c0, rt0.c4 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c4;
SELECT ALL rt0.c0, vt0.c0, rt0.c4 FROM rt0, vt0 WHERE ((((((((((((('')AND(rt0.c0)))AND(rt0.c2)))AND(((rt0.c1) ISNULL))))AND(((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c4)))))AND('0.9460883785549384')))AND('Jk쩠Gw攬??'))) GROUP BY rt0.c0, vt0.c0, rt0.c4 UNION SELECT ALL rt0.c0, vt0.c0, rt0.c4 FROM rt0, vt0 WHERE ((NOT ((((((((((((('')AND(rt0.c0)))AND(rt0.c2)))AND(((rt0.c1) ISNULL))))AND(((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c4)))))AND('0.9460883785549384')))AND('Jk쩠Gw攬??'))))) GROUP BY rt0.c0, vt0.c0, rt0.c4 UNION SELECT rt0.c0, vt0.c0, rt0.c4 FROM rt0, vt0 WHERE ((((((((((((((('')AND(rt0.c0)))AND(rt0.c2)))AND(((rt0.c1) ISNULL))))AND(((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c4)))))AND('0.9460883785549384')))AND('Jk쩠Gw攬??'))) ISNULL)) GROUP BY rt0.c0, vt0.c0, rt0.c4;
SELECT ALL rt0.c0, vt0.c0, rt0.c4 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c4;
SELECT ALL rt0.c1, rt0.c4, vt0.c0, rt0.c2, rt0.c3, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c4, vt0.c0, rt0.c2, rt0.c3, rt0.c0;
SELECT rt0.c1, rt0.c4, vt0.c0, rt0.c2, rt0.c3, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c4, vt0.c0, rt0.c2, rt0.c3, rt0.c0 HAVING NULL UNION ALL SELECT rt0.c1, rt0.c4, vt0.c0, rt0.c2, rt0.c3, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c4, vt0.c0, rt0.c2, rt0.c3, rt0.c0 HAVING (NOT (NULL)) UNION ALL SELECT ALL rt0.c1, rt0.c4, vt0.c0, rt0.c2, rt0.c3, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c4, vt0.c0, rt0.c2, rt0.c3, rt0.c0 HAVING ((NULL) ISNULL);
SELECT ALL rt0.c1, rt0.c4, vt0.c0, rt0.c2, rt0.c3, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c4, vt0.c0, rt0.c2, rt0.c3, rt0.c0;
SELECT rt0.c1, rt0.c4, vt0.c0, rt0.c2, rt0.c3, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c4, vt0.c0, rt0.c2, rt0.c3, rt0.c0 HAVING NULL UNION ALL SELECT rt0.c1, rt0.c4, vt0.c0, rt0.c2, rt0.c3, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c4, vt0.c0, rt0.c2, rt0.c3, rt0.c0 HAVING (NOT (NULL)) UNION ALL SELECT ALL rt0.c1, rt0.c4, vt0.c0, rt0.c2, rt0.c3, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c4, vt0.c0, rt0.c2, rt0.c3, rt0.c0 HAVING ((NULL) ISNULL);
SELECT ALL rt0.c1, rt0.c4, vt0.c0, rt0.c2, rt0.c3, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c4, vt0.c0, rt0.c2, rt0.c3, rt0.c0;
SELECT ALL * FROM vt0, rt0;
SELECT ALL * FROM vt0, rt0 WHERE (0Xffffffffeddc56ee) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE ((NOT (0xffffffffeddc56ee))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE (((0xffffffffeddc56ee) ISNULL));
SELECT ALL * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((((NULL)AND((vt0.c0 IN (vt0.c0)))))AND((vt0.c0 IN ())))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((NULL)AND((vt0.c0 IN (vt0.c0)))))AND((vt0.c0 IN ())))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((((NULL)AND((vt0.c0 IN (vt0.c0)))))AND((vt0.c0 IN ())))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c4, rt0.c2, rt0.c1, rt0.c3 FROM vt0, rt0 GROUP BY rt0.c4, rt0.c2, rt0.c1, rt0.c3;
SELECT rt0.c4, rt0.c2, rt0.c1, rt0.c3 FROM vt0, rt0 GROUP BY rt0.c4, rt0.c2, rt0.c1, rt0.c3 HAVING UPPER(DISTINCT COUNT(rt0.c3)) UNION ALL SELECT ALL rt0.c4, rt0.c2, rt0.c1, rt0.c3 FROM vt0, rt0 GROUP BY rt0.c4, rt0.c2, rt0.c1, rt0.c3 HAVING (NOT (UPPER(DISTINCT COUNT(rt0.c3)))) UNION ALL SELECT rt0.c4, rt0.c2, rt0.c1, rt0.c3 FROM vt0, rt0 GROUP BY rt0.c4, rt0.c2, rt0.c1, rt0.c3 HAVING ((UPPER(DISTINCT COUNT(rt0.c3))) ISNULL);
SELECT rt0.c4, rt0.c2, rt0.c1, rt0.c3 FROM vt0, rt0 GROUP BY rt0.c4, rt0.c2, rt0.c1, rt0.c3;
SELECT rt0.c4, rt0.c2, rt0.c1, rt0.c3 FROM vt0, rt0 GROUP BY rt0.c4, rt0.c2, rt0.c1, rt0.c3 HAVING UPPER(DISTINCT COUNT(rt0.c3)) UNION ALL SELECT ALL rt0.c4, rt0.c2, rt0.c1, rt0.c3 FROM vt0, rt0 GROUP BY rt0.c4, rt0.c2, rt0.c1, rt0.c3 HAVING (NOT (UPPER(DISTINCT COUNT(rt0.c3)))) UNION ALL SELECT rt0.c4, rt0.c2, rt0.c1, rt0.c3 FROM vt0, rt0 GROUP BY rt0.c4, rt0.c2, rt0.c1, rt0.c3 HAVING ((UPPER(DISTINCT COUNT(rt0.c3))) ISNULL);
SELECT rt0.c4, rt0.c2, rt0.c1, rt0.c3 FROM vt0, rt0 GROUP BY rt0.c4, rt0.c2, rt0.c1, rt0.c3;
SELECT ALL rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (((((CAST(rt0.c4 AS TEXT))OR(TRIM(DISTINCT rt0.c4))))OR(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 END))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((((CAST(rt0.c4 AS TEXT))OR(TRIM(DISTINCT rt0.c4))))OR(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 END))))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (((((((CAST(rt0.c4 AS TEXT))OR(TRIM(DISTINCT rt0.c4))))OR(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 END))) ISNULL));
SELECT ALL rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CASE TRIM(vt0.c0)  WHEN ((vt0.c0)IS(vt0.c0)) THEN vt0.c0 COLLATE RTRIM ELSE NULL COLLATE RTRIM END) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CASE TRIM(vt0.c0)  WHEN ((vt0.c0)IS(vt0.c0)) THEN vt0.c0 COLLATE RTRIM ELSE NULL COLLATE RTRIM END))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CASE TRIM(vt0.c0)  WHEN ((vt0.c0)IS(vt0.c0)) THEN vt0.c0 COLLATE RTRIM ELSE NULL COLLATE RTRIM END) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((+ ((('T睗兒{T⢍#e')||(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((+ ((('T睗兒{T⢍#e')||(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((+ ((('T睗兒{T⢍#e')||(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0, rt0.c2 FROM rt0 INNER JOIN vt0 ON ((((((((((((((vt0.c0)GLOB(rt0.c0)))OR(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c4 WHEN vt0.c0 THEN rt0.c4 END)))OR(((rt0.c4)OR(0.9799843714309451)))))OR(((rt0.c4)OR(rt0.c1)))))AND(((vt0.c0)<<(rt0.c4)))))OR((~ (rt0.c0)))))OR(rt0.c3 COLLATE NOCASE)) GROUP BY vt0.c0, rt0.c2;
SELECT vt0.c0, rt0.c2 FROM rt0 INNER JOIN vt0 ON ((((((((((((((vt0.c0)GLOB(rt0.c0)))OR(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c4 WHEN vt0.c0 THEN rt0.c4 END)))OR(((rt0.c4)OR(0.9799843714309451)))))OR(((rt0.c4)OR(rt0.c1)))))AND(((vt0.c0)<<(rt0.c4)))))OR((~ (rt0.c0)))))OR(rt0.c3 COLLATE NOCASE)) GROUP BY vt0.c0, rt0.c2 HAVING TOTAL(CAST(rt0.c2 AS NUMERIC)) UNION ALL SELECT ALL vt0.c0, rt0.c2 FROM rt0 INNER JOIN vt0 ON ((((((((((((((vt0.c0)GLOB(rt0.c0)))OR(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c4 WHEN vt0.c0 THEN rt0.c4 END)))OR(((rt0.c4)OR(0.9799843714309451)))))OR(((rt0.c4)OR(rt0.c1)))))AND(((vt0.c0)<<(rt0.c4)))))OR((~ (rt0.c0)))))OR(rt0.c3 COLLATE NOCASE)) GROUP BY vt0.c0, rt0.c2 HAVING (NOT (TOTAL(CAST(rt0.c2 AS NUMERIC)))) UNION ALL SELECT ALL vt0.c0, rt0.c2 FROM rt0 INNER JOIN vt0 ON ((((((((((((((vt0.c0)GLOB(rt0.c0)))OR(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c4 WHEN vt0.c0 THEN rt0.c4 END)))OR(((rt0.c4)OR(0.9799843714309451)))))OR(((rt0.c4)OR(rt0.c1)))))AND(((vt0.c0)<<(rt0.c4)))))OR((~ (rt0.c0)))))OR(rt0.c3 COLLATE NOCASE)) GROUP BY vt0.c0, rt0.c2 HAVING ((TOTAL(CAST(rt0.c2 AS NUMERIC))) ISNULL);
SELECT vt0.c0, rt0.c2 FROM rt0 INNER JOIN vt0 ON ((((((((((((((vt0.c0)GLOB(rt0.c0)))OR(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c4 WHEN vt0.c0 THEN rt0.c4 END)))OR(((rt0.c4)OR(0.9799843714309451)))))OR(((rt0.c4)OR(rt0.c1)))))AND(((vt0.c0)<<(rt0.c4)))))OR((~ (rt0.c0)))))OR(rt0.c3 COLLATE NOCASE)) GROUP BY vt0.c0, rt0.c2;
SELECT vt0.c0, rt0.c2 FROM rt0 INNER JOIN vt0 ON ((((((((((((((vt0.c0)GLOB(rt0.c0)))OR(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c4 WHEN vt0.c0 THEN rt0.c4 END)))OR(((rt0.c4)OR(0.9799843714309451)))))OR(((rt0.c4)OR(rt0.c1)))))AND(((vt0.c0)<<(rt0.c4)))))OR((~ (rt0.c0)))))OR(rt0.c3 COLLATE NOCASE)) GROUP BY vt0.c0, rt0.c2 HAVING TOTAL(CAST(rt0.c2 AS NUMERIC)) UNION ALL SELECT ALL vt0.c0, rt0.c2 FROM rt0 INNER JOIN vt0 ON ((((((((((((((vt0.c0)GLOB(rt0.c0)))OR(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c4 WHEN vt0.c0 THEN rt0.c4 END)))OR(((rt0.c4)OR(0.9799843714309451)))))OR(((rt0.c4)OR(rt0.c1)))))AND(((vt0.c0)<<(rt0.c4)))))OR((~ (rt0.c0)))))OR(rt0.c3 COLLATE NOCASE)) GROUP BY vt0.c0, rt0.c2 HAVING (NOT (TOTAL(CAST(rt0.c2 AS NUMERIC)))) UNION ALL SELECT ALL vt0.c0, rt0.c2 FROM rt0 INNER JOIN vt0 ON ((((((((((((((vt0.c0)GLOB(rt0.c0)))OR(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c4 WHEN vt0.c0 THEN rt0.c4 END)))OR(((rt0.c4)OR(0.9799843714309451)))))OR(((rt0.c4)OR(rt0.c1)))))AND(((vt0.c0)<<(rt0.c4)))))OR((~ (rt0.c0)))))OR(rt0.c3 COLLATE NOCASE)) GROUP BY vt0.c0, rt0.c2 HAVING ((TOTAL(CAST(rt0.c2 AS NUMERIC))) ISNULL);
SELECT vt0.c0, rt0.c2 FROM rt0 INNER JOIN vt0 ON ((((((((((((((vt0.c0)GLOB(rt0.c0)))OR(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c4 WHEN vt0.c0 THEN rt0.c4 END)))OR(((rt0.c4)OR(0.9799843714309451)))))OR(((rt0.c4)OR(rt0.c1)))))AND(((vt0.c0)<<(rt0.c4)))))OR((~ (rt0.c0)))))OR(rt0.c3 COLLATE NOCASE)) GROUP BY vt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (CASE WHEN (((rt0.c2, rt0.c3, rt0.c0)) BETWEEN ((rt0.c3, rt0.c3, rt0.c3)) AND ((rt0.c4, 'UrC', rt0.c1))) THEN '272884828' WHEN (((rt0.c1))>=((rt0.c3))) THEN CAST(rt0.c2 AS INTEGER) WHEN CAST(rt0.c4 AS NUMERIC) THEN ((rt0.c4)>>(rt0.c2)) ELSE NULL END) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (CASE WHEN (((rt0.c2, rt0.c3, rt0.c0)) BETWEEN ((rt0.c3, rt0.c3, rt0.c3)) AND ((rt0.c4, 'UrC', rt0.c1))) THEN '272884828' WHEN (((rt0.c1))>=((rt0.c3))) THEN CAST(rt0.c2 AS INTEGER) WHEN CAST(rt0.c4 AS NUMERIC) THEN ((rt0.c4)>>(rt0.c2)) ELSE NULL END))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (((CASE WHEN (((rt0.c2, rt0.c3, rt0.c0)) BETWEEN ((rt0.c3, rt0.c3, rt0.c3)) AND ((rt0.c4, 'UrC', rt0.c1))) THEN '272884828' WHEN (((rt0.c1))>=((rt0.c3))) THEN CAST(rt0.c2 AS INTEGER) WHEN CAST(rt0.c4 AS NUMERIC) THEN ((rt0.c4)>>(rt0.c2)) ELSE NULL END) ISNULL));
SELECT rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE ((+ (rt0.c0))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT ((+ (rt0.c0))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((((+ (rt0.c0))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT ALL rt0.c4 FROM rt0 GROUP BY rt0.c4;
SELECT rt0.c4 FROM rt0 WHERE ((- (rt0.c3)) COLLATE RTRIM) GROUP BY rt0.c4 UNION SELECT ALL rt0.c4 FROM rt0 WHERE ((NOT ((- (rt0.c3)) COLLATE RTRIM))) GROUP BY rt0.c4 UNION SELECT rt0.c4 FROM rt0 WHERE ((((- (rt0.c3)) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c4;
SELECT ALL rt0.c4 FROM rt0 GROUP BY rt0.c4;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING AVG(GROUP_CONCAT(MIN(MAX(rt0.c0)))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (AVG(GROUP_CONCAT(MIN(MAX(rt0.c0)))))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((AVG(GROUP_CONCAT(MIN(MAX(rt0.c0))))) ISNULL);
SELECT ALL rt0.c2 FROM rt0, vt0;
SELECT rt0.c2 FROM rt0, vt0 WHERE ((NOT (((((((((rt0.c3)OR(0.3252791282600682)))AND(rt0.c0)))AND(vt0.c0)))OR(rt0.c3))))) UNION ALL SELECT ALL rt0.c2 FROM rt0, vt0 WHERE ((NOT ((NOT (((((((((rt0.c3)OR(0.3252791282600682)))AND(rt0.c0)))AND(vt0.c0)))OR(rt0.c3))))))) UNION ALL SELECT ALL rt0.c2 FROM rt0, vt0 WHERE ((((NOT (((((((((rt0.c3)OR(0.3252791282600682)))AND(rt0.c0)))AND(vt0.c0)))OR(rt0.c3))))) ISNULL));
SELECT ALL rt0.c2 FROM rt0, vt0;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((((((rt0.c1)OR(rt0.c4)))AND(rt0.c3)))IS(((rt0.c4)<=(rt0.c2))))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT (((((((rt0.c1)OR(rt0.c4)))AND(rt0.c3)))IS(((rt0.c4)<=(rt0.c2))))))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((((((((rt0.c1)OR(rt0.c4)))AND(rt0.c3)))IS(((rt0.c4)<=(rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER))%(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 2.095153321E9 END))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((CAST(vt0.c0 AS INTEGER))%(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 2.095153321E9 END))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((CAST(vt0.c0 AS INTEGER))%(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 2.095153321E9 END))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c4, vt0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON (+ (CASE rt0.c3  WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c0 END)) GROUP BY rt0.c4, vt0.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c4, vt0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON (+ (CASE rt0.c3  WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c0 END)) GROUP BY rt0.c4, vt0.c0, rt0.c2, rt0.c1, rt0.c0 HAVING SUM(MIN(-1394946907)) UNION ALL SELECT rt0.c4, vt0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON (+ (CASE rt0.c3  WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c0 END)) GROUP BY rt0.c4, vt0.c0, rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (SUM(MIN(-1394946907)))) UNION ALL SELECT rt0.c4, vt0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON (+ (CASE rt0.c3  WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c0 END)) GROUP BY rt0.c4, vt0.c0, rt0.c2, rt0.c1, rt0.c0 HAVING ((SUM(MIN(-1394946907))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (-1.016036956E9) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (-1.016036956E9))) UNION ALL SELECT ALL * FROM rt0 WHERE (((-1.016036956E9) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c4 FROM rt0, vt0;
SELECT DISTINCT rt0.c4 FROM rt0, vt0 WHERE ((((CAST(x'e8f7' AS REAL)))>=((((rt0.c4)%(x'')))))) UNION SELECT DISTINCT rt0.c4 FROM rt0, vt0 WHERE ((NOT ((((CAST(x'e8f7' AS REAL)))>=((((rt0.c4)%(x'')))))))) UNION SELECT DISTINCT rt0.c4 FROM rt0, vt0 WHERE ((((((CAST(x'e8f7' AS REAL)))>=((((rt0.c4)%(x'')))))) ISNULL));
SELECT DISTINCT rt0.c4 FROM rt0, vt0;
SELECT ALL rt0.c2, rt0.c0, vt0.c0, rt0.c4 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0, vt0.c0, rt0.c4;
SELECT ALL rt0.c2, rt0.c0, vt0.c0, rt0.c4 FROM rt0, vt0 WHERE (((rt0.c1)==(rt0.c1)) COLLATE RTRIM) GROUP BY rt0.c2, rt0.c0, vt0.c0, rt0.c4 UNION SELECT rt0.c2, rt0.c0, vt0.c0, rt0.c4 FROM rt0, vt0 WHERE ((NOT (((rt0.c1)=(rt0.c1)) COLLATE RTRIM))) GROUP BY rt0.c2, rt0.c0, vt0.c0, rt0.c4 UNION SELECT rt0.c2, rt0.c0, vt0.c0, rt0.c4 FROM rt0, vt0 WHERE (((((rt0.c1)==(rt0.c1)) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c2, rt0.c0, vt0.c0, rt0.c4;
SELECT ALL rt0.c2, rt0.c0, vt0.c0, rt0.c4 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0, vt0.c0, rt0.c4;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (~ (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((~ (COUNT(*))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((~ (COUNT(*)))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (~ (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((~ (COUNT(*))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((~ (COUNT(*)))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c3 FROM rt0, vt0;
SELECT rt0.c3 FROM rt0, vt0 WHERE (((((NULL) NOT BETWEEN (rt0.c4) AND (rt0.c2)))OR(CASE WHEN rt0.c1 THEN rt0.c0 END))) UNION ALL SELECT rt0.c3 FROM rt0, vt0 WHERE ((NOT (((((NULL) NOT BETWEEN (rt0.c4) AND (rt0.c2)))OR(CASE WHEN rt0.c1 THEN rt0.c0 END))))) UNION ALL SELECT ALL rt0.c3 FROM rt0, vt0 WHERE (((((((NULL) NOT BETWEEN (rt0.c4) AND (rt0.c2)))OR(CASE WHEN rt0.c1 THEN rt0.c0 END))) ISNULL));
SELECT rt0.c3 FROM rt0, vt0;
SELECT DISTINCT rt0.c1, vt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON CAST(CASE WHEN rt0.c3 THEN rt0.c1 END AS REAL);
SELECT DISTINCT rt0.c1, vt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON CAST(CASE WHEN rt0.c3 THEN rt0.c1 END AS REAL) WHERE (((((rt0.c3) IS FALSE))||(0.12369226659106314))) UNION SELECT DISTINCT rt0.c1, vt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON CAST(CASE WHEN rt0.c3 THEN rt0.c1 END AS REAL) WHERE ((NOT (((((rt0.c3) IS FALSE))||(0.12369226659106314))))) UNION SELECT DISTINCT rt0.c1, vt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON CAST(CASE WHEN rt0.c3 THEN rt0.c1 END AS REAL) WHERE (((((((rt0.c3) IS FALSE))||(0.12369226659106314))) ISNULL));
SELECT DISTINCT rt0.c1, vt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON CAST(CASE WHEN rt0.c3 THEN rt0.c1 END AS REAL);
SELECT ALL rt0.c0, rt0.c4, rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c4, rt0.c3, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c4, rt0.c3, rt0.c1, rt0.c2 FROM rt0 WHERE (((CAST(rt0.c2 AS NUMERIC))<>(rt0.c2 COLLATE BINARY))) GROUP BY rt0.c0, rt0.c4, rt0.c3, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c4, rt0.c3, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((CAST(rt0.c2 AS NUMERIC))<>(rt0.c2 COLLATE BINARY))))) GROUP BY rt0.c0, rt0.c4, rt0.c3, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c4, rt0.c3, rt0.c1, rt0.c2 FROM rt0 WHERE (((((CAST(rt0.c2 AS NUMERIC))<>(rt0.c2 COLLATE BINARY))) ISNULL)) GROUP BY rt0.c0, rt0.c4, rt0.c3, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c4, rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c4, rt0.c3, rt0.c1, rt0.c2;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c0, rt0.c3, rt0.c4, rt0.c1 FROM rt0, vt0;
SELECT ALL rt0.c0, rt0.c3, rt0.c4, rt0.c1 FROM rt0, vt0 WHERE ((((+ (vt0.c0)))AND(((rt0.c0) ISNULL)))) UNION ALL SELECT rt0.c0, rt0.c3, rt0.c4, rt0.c1 FROM rt0, vt0 WHERE ((NOT ((((+ (vt0.c0)))AND(((rt0.c0) ISNULL)))))) UNION ALL SELECT rt0.c0, rt0.c3, rt0.c4, rt0.c1 FROM rt0, vt0 WHERE ((((((+ (vt0.c0)))AND(((rt0.c0) ISNULL)))) ISNULL));
SELECT rt0.c0, rt0.c3, rt0.c4, rt0.c1 FROM rt0, vt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE (((((((((((('dk4B|\n_')) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))AND((((0.7407266567097986, rt0.c0, -1.016036956E9))>=((rt0.c3, rt0.c0, rt0.c2))))))OR(((rt0.c4) IS TRUE))))AND(rt0.c0 COLLATE RTRIM)))OR(rt0.c4))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((((((((((('dk4B|\n_')) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))AND((((0.7407266567097986, rt0.c0, -1.016036956E9))>=((rt0.c3, rt0.c0, rt0.c2))))))OR(((rt0.c4) IS TRUE))))AND(rt0.c0 COLLATE RTRIM)))OR(rt0.c4))))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE (((((((((((((('dk4B|\n_')) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))AND((((0.7407266567097986, rt0.c0, -1.016036956E9))>=((rt0.c3, rt0.c0, rt0.c2))))))OR(((rt0.c4) IS TRUE))))AND(rt0.c0 COLLATE RTRIM)))OR(rt0.c4))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0) NOTNULL))-(vt0.c0 COLLATE NOCASE))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) NOTNULL))-(vt0.c0 COLLATE NOCASE))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c0) NOTNULL))-(vt0.c0 COLLATE NOCASE))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c2, vt0.c0, rt0.c3, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0, rt0.c3, rt0.c1;
SELECT ALL rt0.c2, vt0.c0, rt0.c3, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0, rt0.c3, rt0.c1 HAVING rt0.c3 UNION ALL SELECT rt0.c2, vt0.c0, rt0.c3, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0, rt0.c3, rt0.c1 HAVING (NOT (rt0.c3)) UNION ALL SELECT ALL rt0.c2, vt0.c0, rt0.c3, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0, rt0.c3, rt0.c1 HAVING ((rt0.c3) ISNULL);
SELECT ALL rt0.c2, vt0.c0, rt0.c3, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0, rt0.c3, rt0.c1;
SELECT ALL rt0.c2, vt0.c0, rt0.c3, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0, rt0.c3, rt0.c1 HAVING rt0.c3 UNION ALL SELECT rt0.c2, vt0.c0, rt0.c3, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0, rt0.c3, rt0.c1 HAVING (NOT (rt0.c3)) UNION ALL SELECT ALL rt0.c2, vt0.c0, rt0.c3, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0, rt0.c3, rt0.c1 HAVING ((rt0.c3) ISNULL);
SELECT ALL rt0.c2, vt0.c0, rt0.c3, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0, rt0.c3, rt0.c1;
SELECT TOTAL((((('1305164594')OR(vt0.c0)))OR(rt0.c0)) COLLATE NOCASE) FROM rt0, vt0 ORDER BY x'17ad'  NULLS LAST;
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON (((rt0.c0, rt0.c1, rt0.c1)) NOT BETWEEN (((NULL IN (rt0.c4, vt0.c0)), ((rt0.c0) IS FALSE), (rt0.c4 IN ()))) AND (((rt0.c0 IN ()), ((((rt0.c3)OR(rt0.c1)))OR(rt0.c3)), ((rt0.c4) NOTNULL))));
SELECT * FROM vt0 CROSS JOIN rt0 ON (((rt0.c0, rt0.c1, rt0.c1)) NOT BETWEEN (((NULL IN (rt0.c4, vt0.c0)), ((rt0.c0) IS FALSE), (rt0.c4 IN ()))) AND (((rt0.c0 IN ()), ((((rt0.c3)OR(rt0.c1)))OR(rt0.c3)), ((rt0.c4) NOTNULL)))) WHERE ((((rt0.c3 IN ()))>>(((NULL)*(rt0.c4))))) UNION ALL SELECT ALL * FROM vt0 CROSS JOIN rt0 ON (((rt0.c0, rt0.c1, rt0.c1)) NOT BETWEEN (((NULL IN (rt0.c4, vt0.c0)), ((rt0.c0) IS FALSE), (rt0.c4 IN ()))) AND (((rt0.c0 IN ()), ((((rt0.c3)OR(rt0.c1)))OR(rt0.c3)), ((rt0.c4) NOTNULL)))) WHERE ((NOT ((((rt0.c3 IN ()))>>(((NULL)*(rt0.c4))))))) UNION ALL SELECT * FROM vt0 CROSS JOIN rt0 ON (((rt0.c0, rt0.c1, rt0.c1)) NOT BETWEEN (((NULL IN (rt0.c4, vt0.c0)), ((rt0.c0) IS FALSE), (rt0.c4 IN ()))) AND (((rt0.c0 IN ()), ((((rt0.c3)OR(rt0.c1)))OR(rt0.c3)), ((rt0.c4) NOTNULL)))) WHERE ((((((rt0.c3 IN ()))>>(((NULL)*(rt0.c4))))) ISNULL));
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON (((rt0.c0, rt0.c1, rt0.c1)) NOT BETWEEN (((NULL IN (rt0.c4, vt0.c0)), ((rt0.c0) IS FALSE), (rt0.c4 IN ()))) AND (((rt0.c0 IN ()), ((((rt0.c3)OR(rt0.c1)))OR(rt0.c3)), ((rt0.c4) NOTNULL))));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c0 COLLATE NOCASE)))OR(CASE WHEN vt0.c0 THEN vt0.c0 END)))AND(((vt0.c0)%(vt0.c0)))))OR(vt0.c0))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((((((vt0.c0)AND(vt0.c0 COLLATE NOCASE)))OR(CASE WHEN vt0.c0 THEN vt0.c0 END)))AND(((vt0.c0)%(vt0.c0)))))OR(vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c0 COLLATE NOCASE)))OR(CASE WHEN vt0.c0 THEN vt0.c0 END)))AND(((vt0.c0)%(vt0.c0)))))OR(vt0.c0))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (TRIM(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (TRIM(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((TRIM(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c0 UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c0 UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c4, rt0.c3, rt0.c1, vt0.c0, rt0.c0, rt0.c2 FROM rt0, vt0;
SELECT ALL rt0.c4, rt0.c3, rt0.c1, vt0.c0, rt0.c0, rt0.c2 FROM rt0, vt0 WHERE (((((rt0.c0)AND(rt0.c1)))AND(rt0.c2)) COLLATE RTRIM) UNION ALL SELECT ALL rt0.c4, rt0.c3, rt0.c1, vt0.c0, rt0.c0, rt0.c2 FROM rt0, vt0 WHERE ((NOT (((((rt0.c0)AND(rt0.c1)))AND(rt0.c2)) COLLATE RTRIM))) UNION ALL SELECT ALL rt0.c4, rt0.c3, rt0.c1, vt0.c0, rt0.c0, rt0.c2 FROM rt0, vt0 WHERE (((((((rt0.c0)AND(rt0.c1)))AND(rt0.c2)) COLLATE RTRIM) ISNULL));
SELECT ALL rt0.c4, rt0.c3, rt0.c1, vt0.c0, rt0.c0, rt0.c2 FROM rt0, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE x'7e42' END IN (CAST(vt0.c0 AS INTEGER)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE x'7e42' END IN (CAST(vt0.c0 AS INTEGER)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE x'7e42' END IN (CAST(vt0.c0 AS INTEGER)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (NULL) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (NULL))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((NULL) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c0, rt0.c2, rt0.c3, vt0.c0, rt0.c4, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c3, vt0.c0, rt0.c4, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c3, vt0.c0, rt0.c4, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c3, vt0.c0, rt0.c4, rt0.c1 HAVING CASE MAX(SUM(rt0.c1))  WHEN (MAX(TOTAL(rt0.c1)) IN ()) THEN rt0.c2 COLLATE NOCASE END UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c3, vt0.c0, rt0.c4, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c3, vt0.c0, rt0.c4, rt0.c1 HAVING (NOT (CASE MAX(SUM(rt0.c1))  WHEN (MAX(TOTAL(rt0.c1)) IN ()) THEN rt0.c2 COLLATE NOCASE END)) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c3, vt0.c0, rt0.c4, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c3, vt0.c0, rt0.c4, rt0.c1 HAVING ((CASE MAX(SUM(rt0.c1))  WHEN (MAX(TOTAL(rt0.c1)) IN ()) THEN rt0.c2 COLLATE NOCASE END) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE ((vt0.c0 COLLATE NOCASE IN ())) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((vt0.c0 COLLATE NOCASE IN ())))) UNION ALL SELECT * FROM vt0 WHERE ((((vt0.c0 COLLATE NOCASE IN ())) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((('713840097')OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN ').' THEN '}Ou^u' WHEN '710323438' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '5+' WHEN NULL THEN vt0.c0 ELSE vt0.c0 END))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((((('713840097')OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN ').' THEN '}Ou^u' WHEN '710323438' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '5+' WHEN NULL THEN vt0.c0 ELSE vt0.c0 END))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((('713840097')OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN ').' THEN '}Ou^u' WHEN '710323438' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '5+' WHEN NULL THEN vt0.c0 ELSE vt0.c0 END))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL rt0.c2, vt0.c0, rt0.c4, rt0.c3 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c4, rt0.c3;
SELECT ALL rt0.c2, vt0.c0, rt0.c4, rt0.c3 FROM rt0, vt0 WHERE (CASE WHEN '댰ㇹ' THEN ((((vt0.c0)OR(vt0.c0)))OR(rt0.c0)) END) GROUP BY rt0.c2, vt0.c0, rt0.c4, rt0.c3 UNION SELECT ALL rt0.c2, vt0.c0, rt0.c4, rt0.c3 FROM rt0, vt0 WHERE ((NOT (CASE WHEN '댰ㇹ' THEN ((((vt0.c0)OR(vt0.c0)))OR(rt0.c0)) END))) GROUP BY rt0.c2, vt0.c0, rt0.c4, rt0.c3 UNION SELECT rt0.c2, vt0.c0, rt0.c4, rt0.c3 FROM rt0, vt0 WHERE (((CASE WHEN '댰ㇹ' THEN ((((vt0.c0)OR(vt0.c0)))OR(rt0.c0)) END) ISNULL)) GROUP BY rt0.c2, vt0.c0, rt0.c4, rt0.c3;
SELECT ALL rt0.c2, vt0.c0, rt0.c4, rt0.c3 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c4, rt0.c3;
SELECT ALL rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0 HAVING CAST(COUNT(*) AS INTEGER) UNION ALL SELECT rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0 HAVING (NOT (CAST(COUNT(*) AS INTEGER))) UNION ALL SELECT rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0 HAVING ((CAST(COUNT(*) AS INTEGER)) ISNULL);
SELECT ALL rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0 HAVING CAST(COUNT(*) AS INTEGER) UNION ALL SELECT rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0 HAVING (NOT (CAST(COUNT(*) AS INTEGER))) UNION ALL SELECT rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0 HAVING ((CAST(COUNT(*) AS INTEGER)) ISNULL);
SELECT ALL rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0;
SELECT ALL MAX(((json_array(rt0.c1, rt0.c3))/((((rt0.c1, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c4, rt0.c4, vt0.c0)) AND ((rt0.c2, rt0.c3, rt0.c0)))))) FROM rt0, vt0;
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (IFNULL(((vt0.c0) IS TRUE), (((('-1416354214')AND(vt0.c0)))OR(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (IFNULL(((vt0.c0) IS TRUE), (((('-1416354214')AND(vt0.c0)))OR(vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((IFNULL(((vt0.c0) IS TRUE), (((('-1416354214')AND(vt0.c0)))OR(vt0.c0)))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT rt0.c1, rt0.c4, rt0.c3, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c4, rt0.c3, rt0.c0 FROM rt0 WHERE (((((rt0.c2)IS(rt0.c3))) BETWEEN (((rt0.c2)IS NOT(rt0.c2))) AND (((((rt0.c3)AND(x'3200')))OR(rt0.c1))))) UNION SELECT DISTINCT rt0.c1, rt0.c4, rt0.c3, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c2)IS(rt0.c3))) BETWEEN (((rt0.c2)IS NOT(rt0.c2))) AND (((((rt0.c3)AND(x'3200')))OR(rt0.c1))))))) UNION SELECT DISTINCT rt0.c1, rt0.c4, rt0.c3, rt0.c0 FROM rt0 WHERE (((((((rt0.c2)IS(rt0.c3))) BETWEEN (((rt0.c2)IS NOT(rt0.c2))) AND (((((rt0.c3)AND(x'3200')))OR(rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c4, rt0.c3, rt0.c0 FROM rt0;
SELECT ALL vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((CAST(0Xf46c42a AS NUMERIC))) AND ((CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c0 END)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, rt0 WHERE ((NOT ((((rt0.c1)) NOT BETWEEN ((CAST(0xf46c42a AS NUMERIC))) AND ((CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c0 END)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, rt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((CAST(0Xf46c42a AS NUMERIC))) AND ((CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c0 END)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0;
SELECT ALL rt0.c3, rt0.c4, rt0.c2, vt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON (((((rt0.c3)OR(rt0.c3)))AND(rt0.c4)) IN ()) GROUP BY rt0.c3, rt0.c4, rt0.c2, vt0.c0;
SELECT ALL rt0.c3, rt0.c4, rt0.c2, vt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON (((((rt0.c3)OR(rt0.c3)))AND(rt0.c4)) IN ()) GROUP BY rt0.c3, rt0.c4, rt0.c2, vt0.c0 HAVING (('') NOT BETWEEN (TOTAL(rt0.c1)) AND (SUM(rt0.c4))) UNION ALL SELECT ALL rt0.c3, rt0.c4, rt0.c2, vt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON (((((rt0.c3)OR(rt0.c3)))AND(rt0.c4)) IN ()) GROUP BY rt0.c3, rt0.c4, rt0.c2, vt0.c0 HAVING (NOT ((('') NOT BETWEEN (TOTAL(rt0.c1)) AND (SUM(rt0.c4))))) UNION ALL SELECT ALL rt0.c3, rt0.c4, rt0.c2, vt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON (((((rt0.c3)OR(rt0.c3)))AND(rt0.c4)) IN ()) GROUP BY rt0.c3, rt0.c4, rt0.c2, vt0.c0 HAVING (((('') NOT BETWEEN (TOTAL(rt0.c1)) AND (SUM(rt0.c4)))) ISNULL);
SELECT ALL rt0.c3, rt0.c4, rt0.c2, vt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON (((((rt0.c3)OR(rt0.c3)))AND(rt0.c4)) IN ()) GROUP BY rt0.c3, rt0.c4, rt0.c2, vt0.c0;
SELECT ALL rt0.c3, rt0.c4, rt0.c2, vt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON (((((rt0.c3)OR(rt0.c3)))AND(rt0.c4)) IN ()) GROUP BY rt0.c3, rt0.c4, rt0.c2, vt0.c0 HAVING (('') NOT BETWEEN (TOTAL(rt0.c1)) AND (SUM(rt0.c4))) UNION ALL SELECT ALL rt0.c3, rt0.c4, rt0.c2, vt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON (((((rt0.c3)OR(rt0.c3)))AND(rt0.c4)) IN ()) GROUP BY rt0.c3, rt0.c4, rt0.c2, vt0.c0 HAVING (NOT ((('') NOT BETWEEN (TOTAL(rt0.c1)) AND (SUM(rt0.c4))))) UNION ALL SELECT ALL rt0.c3, rt0.c4, rt0.c2, vt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON (((((rt0.c3)OR(rt0.c3)))AND(rt0.c4)) IN ()) GROUP BY rt0.c3, rt0.c4, rt0.c2, vt0.c0 HAVING (((('') NOT BETWEEN (TOTAL(rt0.c1)) AND (SUM(rt0.c4)))) ISNULL);
SELECT ALL rt0.c3, rt0.c4, rt0.c2, vt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON (((((rt0.c3)OR(rt0.c3)))AND(rt0.c4)) IN ()) GROUP BY rt0.c3, rt0.c4, rt0.c2, vt0.c0;
SELECT rt0.c0, rt0.c1 FROM vt0, rt0;
SELECT ALL rt0.c0, rt0.c1 FROM vt0, rt0 WHERE (((((vt0.c0) IS FALSE)) NOT BETWEEN ((((('Jk쩠Gw攬??')AND(rt0.c3)))OR(rt0.c2))) AND (((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c3))))) UNION ALL SELECT rt0.c0, rt0.c1 FROM vt0, rt0 WHERE ((NOT (((((vt0.c0) IS FALSE)) NOT BETWEEN ((((('Jk쩠Gw攬??')AND(rt0.c3)))OR(rt0.c2))) AND (((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c3))))))) UNION ALL SELECT rt0.c0, rt0.c1 FROM vt0, rt0 WHERE (((((((vt0.c0) IS FALSE)) NOT BETWEEN ((((('Jk쩠Gw攬??')AND(rt0.c3)))OR(rt0.c2))) AND (((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c3))))) ISNULL));
SELECT rt0.c0, rt0.c1 FROM vt0, rt0;
SELECT DISTINCT rt0.c0, vt0.c0, rt0.c4, rt0.c2, rt0.c1 FROM vt0, rt0;
SELECT DISTINCT rt0.c0, vt0.c0, rt0.c4, rt0.c2, rt0.c1 FROM vt0, rt0 WHERE (((((rt0.c1 IN (rt0.c3, rt0.c2))))>((CAST(rt0.c2 AS INTEGER))))) UNION SELECT DISTINCT rt0.c0, vt0.c0, rt0.c4, rt0.c2, rt0.c1 FROM vt0, rt0 WHERE ((NOT (((((rt0.c1 IN (rt0.c3, rt0.c2))))>((CAST(rt0.c2 AS INTEGER))))))) UNION SELECT DISTINCT rt0.c0, vt0.c0, rt0.c4, rt0.c2, rt0.c1 FROM vt0, rt0 WHERE (((((((rt0.c1 IN (rt0.c3, rt0.c2))))>((CAST(rt0.c2 AS INTEGER))))) ISNULL));
SELECT DISTINCT rt0.c0, vt0.c0, rt0.c4, rt0.c2, rt0.c1 FROM vt0, rt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (CAST(UPPER(vt0.c0) AS BLOB)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CAST(UPPER(vt0.c0) AS BLOB)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((CAST(UPPER(vt0.c0) AS BLOB)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c4, rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c2, rt0.c0;
SELECT rt0.c4, rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c2, rt0.c0 HAVING MAX(GROUP_CONCAT(rt0.c3)) UNION ALL SELECT ALL rt0.c4, rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c2, rt0.c0 HAVING (NOT (MAX(GROUP_CONCAT(rt0.c3)))) UNION ALL SELECT rt0.c4, rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c2, rt0.c0 HAVING ((MAX(GROUP_CONCAT(rt0.c3))) ISNULL);
SELECT ALL * FROM rt0, vt0;
SELECT * FROM rt0, vt0 WHERE (CASE TYPEOF(DISTINCT rt0.c3)  WHEN ((((rt0.c2)AND(rt0.c0)))OR(rt0.c0)) THEN ((NULL) BETWEEN (vt0.c0) AND ('-1377907874')) ELSE (((rt0.c4, rt0.c4, vt0.c0)) NOT BETWEEN ((vt0.c0, rt0.c3, rt0.c2)) AND ((rt0.c3, vt0.c0, rt0.c3))) END) UNION ALL SELECT * FROM rt0, vt0 WHERE ((NOT (CASE TYPEOF(DISTINCT rt0.c3)  WHEN ((((rt0.c2)AND(rt0.c0)))OR(rt0.c0)) THEN ((NULL) BETWEEN (vt0.c0) AND ('-1377907874')) ELSE (((rt0.c4, rt0.c4, vt0.c0)) NOT BETWEEN ((vt0.c0, rt0.c3, rt0.c2)) AND ((rt0.c3, vt0.c0, rt0.c3))) END))) UNION ALL SELECT * FROM rt0, vt0 WHERE (((CASE TYPEOF(DISTINCT rt0.c3)  WHEN ((((rt0.c2)AND(rt0.c0)))OR(rt0.c0)) THEN ((NULL) BETWEEN (vt0.c0) AND ('-1377907874')) ELSE (((rt0.c4, rt0.c4, vt0.c0)) NOT BETWEEN ((vt0.c0, rt0.c3, rt0.c2)) AND ((rt0.c3, vt0.c0, rt0.c3))) END) ISNULL));
SELECT ALL * FROM rt0, vt0;
SELECT DISTINCT rt0.c4, rt0.c0 FROM rt0, vt0;
SELECT DISTINCT rt0.c4, rt0.c0 FROM rt0, vt0 WHERE ((CASE WHEN rt0.c3 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c1 END IN ((rt0.c3 IN ())))) UNION SELECT DISTINCT rt0.c4, rt0.c0 FROM rt0, vt0 WHERE ((NOT ((CASE WHEN rt0.c3 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c1 END IN ((rt0.c3 IN ())))))) UNION SELECT DISTINCT rt0.c4, rt0.c0 FROM rt0, vt0 WHERE ((((CASE WHEN rt0.c3 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c1 END IN ((rt0.c3 IN ())))) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c0 FROM rt0, vt0;
SELECT rt0.c3 FROM vt0, rt0 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM vt0, rt0 WHERE (((CASE rt0.c4  WHEN rt0.c4 THEN 'ᥔaྗ*,㖱m❹\n' END)IS NOT(((vt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c1))))) GROUP BY rt0.c3 UNION SELECT rt0.c3 FROM vt0, rt0 WHERE ((NOT (((CASE rt0.c4  WHEN rt0.c4 THEN 'ᥔaྗ*,㖱m❹\n' END)IS NOT(((vt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c1))))))) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM vt0, rt0 WHERE (((((CASE rt0.c4  WHEN rt0.c4 THEN 'ᥔaྗ*,㖱m❹\n' END)IS NOT(((vt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c1))))) ISNULL)) GROUP BY rt0.c3;
SELECT rt0.c3 FROM vt0, rt0 GROUP BY rt0.c3;
SELECT ALL rt0.c4, rt0.c1, rt0.c2, vt0.c0, rt0.c0, rt0.c3 FROM rt0, vt0 GROUP BY rt0.c4, rt0.c1, rt0.c2, vt0.c0, rt0.c0, rt0.c3;
SELECT rt0.c4, rt0.c1, rt0.c2, vt0.c0, rt0.c0, rt0.c3 FROM rt0, vt0 GROUP BY rt0.c4, rt0.c1, rt0.c2, vt0.c0, rt0.c0, rt0.c3 HAVING ((((GROUP_CONCAT(TOTAL(vt0.c0))) BETWEEN (rt0.c4) AND (rt0.c3))) IS FALSE) UNION ALL SELECT ALL rt0.c4, rt0.c1, rt0.c2, vt0.c0, rt0.c0, rt0.c3 FROM rt0, vt0 GROUP BY rt0.c4, rt0.c1, rt0.c2, vt0.c0, rt0.c0, rt0.c3 HAVING (NOT (((((GROUP_CONCAT(TOTAL(vt0.c0))) BETWEEN (rt0.c4) AND (rt0.c3))) IS FALSE))) UNION ALL SELECT rt0.c4, rt0.c1, rt0.c2, vt0.c0, rt0.c0, rt0.c3 FROM rt0, vt0 GROUP BY rt0.c4, rt0.c1, rt0.c2, vt0.c0, rt0.c0, rt0.c3 HAVING ((((((GROUP_CONCAT(TOTAL(vt0.c0))) BETWEEN (rt0.c4) AND (rt0.c3))) IS FALSE)) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((+ (NULL))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((+ (NULL))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((+ (NULL))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)))AND(((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c1)))))OR((rt0.c3 IN ())))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)))AND(((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c1)))))OR((rt0.c3 IN ())))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)))AND(((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c1)))))OR((rt0.c3 IN ())))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c3, rt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2, vt0.c0, rt0.c0;
SELECT rt0.c3, rt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM vt0, rt0 WHERE (((((rt0.c2)AND(((rt0.c1) IS TRUE))))OR(((((rt0.c4)AND(rt0.c3)))AND(vt0.c0))))) GROUP BY rt0.c3, rt0.c1, rt0.c2, vt0.c0, rt0.c0 UNION SELECT rt0.c3, rt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM vt0, rt0 WHERE ((NOT (((((rt0.c2)AND(((rt0.c1) IS TRUE))))OR(((((rt0.c4)AND(rt0.c3)))AND(vt0.c0))))))) GROUP BY rt0.c3, rt0.c1, rt0.c2, vt0.c0, rt0.c0 UNION SELECT rt0.c3, rt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM vt0, rt0 WHERE (((((((rt0.c2)AND(((rt0.c1) IS TRUE))))OR(((((rt0.c4)AND(rt0.c3)))AND(vt0.c0))))) ISNULL)) GROUP BY rt0.c3, rt0.c1, rt0.c2, vt0.c0, rt0.c0;
SELECT rt0.c3, rt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2, vt0.c0, rt0.c0;
SELECT ALL rt0.c3, rt0.c1, rt0.c2, rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2, rt0.c4, rt0.c0;
SELECT rt0.c3, rt0.c1, rt0.c2, rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2, rt0.c4, rt0.c0 HAVING GROUP_CONCAT(TOTAL(MIN(MAX(COUNT(*))))) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c2, rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2, rt0.c4, rt0.c0 HAVING (NOT (GROUP_CONCAT(TOTAL(MIN(MAX(COUNT(*))))))) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c2, rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2, rt0.c4, rt0.c0 HAVING ((GROUP_CONCAT(TOTAL(MIN(MAX(COUNT(*)))))) ISNULL);
SELECT rt0.c0, rt0.c4 FROM rt0;
SELECT ALL rt0.c0, rt0.c4 FROM rt0 NOT INDEXED WHERE ((((x''))<((CASE WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c0 WHEN NULL THEN rt0.c1 ELSE rt0.c3 END)))) UNION ALL SELECT ALL rt0.c0, rt0.c4 FROM rt0 WHERE ((NOT ((((x''))<((CASE WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c0 WHEN NULL THEN rt0.c1 ELSE rt0.c3 END)))))) UNION ALL SELECT ALL rt0.c0, rt0.c4 FROM rt0 WHERE ((((((x''))<((CASE WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c0 WHEN NULL THEN rt0.c1 ELSE rt0.c3 END)))) ISNULL));
SELECT rt0.c0, rt0.c4 FROM rt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE ((((rt0.c0 COLLATE RTRIM))<((((rt0.c0) IS TRUE))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT ((((rt0.c0 COLLATE RTRIM))<((((rt0.c0) IS TRUE))))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((((((rt0.c0 COLLATE RTRIM))<((((rt0.c0) IS TRUE))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0)&(vt0.c0)) COLLATE RTRIM) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0)&(vt0.c0)) COLLATE RTRIM))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0)&(vt0.c0)) COLLATE RTRIM) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c2 FROM rt0, vt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0, vt0 GROUP BY rt0.c2 HAVING TOTAL(AVG(rt0.c4)) UNION ALL SELECT ALL rt0.c2 FROM rt0, vt0 GROUP BY rt0.c2 HAVING (NOT (TOTAL(AVG(rt0.c4)))) UNION ALL SELECT ALL rt0.c2 FROM rt0, vt0 GROUP BY rt0.c2 HAVING ((TOTAL(AVG(rt0.c4))) ISNULL);
SELECT rt0.c0, rt0.c3, rt0.c2 FROM vt0, rt0;
SELECT ALL rt0.c0, rt0.c3, rt0.c2 FROM vt0, rt0 WHERE ((CAST(vt0.c0 AS BLOB) IN ())) UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c2 FROM vt0, rt0 WHERE ((NOT ((CAST(vt0.c0 AS BLOB) IN ())))) UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c2 FROM vt0, rt0 WHERE ((((CAST(vt0.c0 AS BLOB) IN ())) ISNULL));
SELECT rt0.c0, rt0.c3, rt0.c2 FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (((IFNULL(DISTINCT rt0.c2, rt0.c3))IS NOT('1459598727'))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (((IFNULL(DISTINCT rt0.c2, rt0.c3))IS NOT('1459598727'))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((((IFNULL(DISTINCT rt0.c2, rt0.c3))IS NOT('1459598727'))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT rt0.c2, rt0.c1, rt0.c4, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, rt0.c4, vt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c4, vt0.c0 FROM rt0, vt0 WHERE (((((0.9081758183395775)||(vt0.c0))) IS FALSE)) GROUP BY rt0.c2, rt0.c1, rt0.c4, vt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c4, vt0.c0 FROM rt0, vt0 WHERE ((NOT (((((0.9081758183395775)||(vt0.c0))) IS FALSE)))) GROUP BY rt0.c2, rt0.c1, rt0.c4, vt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c4, vt0.c0 FROM rt0, vt0 WHERE (((((((0.9081758183395775)||(vt0.c0))) IS FALSE)) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c4, vt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c4, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, rt0.c4, vt0.c0;
SELECT rt0.c3, rt0.c2, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c4;
SELECT ALL rt0.c3, rt0.c2, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c4 HAVING GROUP_CONCAT(TOTAL(rt0.c2)) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c4 HAVING (NOT (GROUP_CONCAT(TOTAL(rt0.c2)))) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c4 HAVING ((GROUP_CONCAT(TOTAL(rt0.c2))) ISNULL);
SELECT ALL * FROM vt0, rt0;
SELECT * FROM vt0, rt0 WHERE (((((rt0.c2)-(rt0.c2))) BETWEEN (((((((((((((rt0.c1)OR(rt0.c1)))OR(x'')))OR(rt0.c4)))AND(x'')))AND(rt0.c4)))OR(rt0.c2))) AND ((rt0.c4 IN ())))) UNION ALL SELECT * FROM vt0, rt0 WHERE ((NOT (((((rt0.c2)-(rt0.c2))) BETWEEN (((((((((((((rt0.c1)OR(rt0.c1)))OR(x'')))OR(rt0.c4)))AND(x'')))AND(rt0.c4)))OR(rt0.c2))) AND ((rt0.c4 IN ())))))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE (((((((rt0.c2)-(rt0.c2))) BETWEEN (((((((((((((rt0.c1)OR(rt0.c1)))OR(x'')))OR(rt0.c4)))AND(x'')))AND(rt0.c4)))OR(rt0.c2))) AND ((rt0.c4 IN ())))) ISNULL));
SELECT ALL * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (((LIKE(rt0.c1, rt0.c0, '1')) IS FALSE)) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (((LIKE(rt0.c1, rt0.c0, '1')) IS FALSE)))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((((LIKE(rt0.c1, rt0.c0, '1')) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT rt0.c4, rt0.c0, vt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM vt0 FULL OUTER JOIN rt0 ON RTRIM(NULL) GROUP BY rt0.c4, rt0.c0, vt0.c0, rt0.c3, rt0.c1, rt0.c2;
SELECT ALL rt0.c4, rt0.c0, vt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM vt0 FULL OUTER JOIN rt0 ON RTRIM(NULL) WHERE (((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3)) COLLATE RTRIM) GROUP BY rt0.c4, rt0.c0, vt0.c0, rt0.c3, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c4, rt0.c0, vt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM vt0 FULL OUTER JOIN rt0 ON RTRIM(NULL) WHERE ((NOT (((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3)) COLLATE RTRIM))) GROUP BY rt0.c4, rt0.c0, vt0.c0, rt0.c3, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c4, rt0.c0, vt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM vt0 FULL OUTER JOIN rt0 ON RTRIM(NULL) WHERE (((((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3)) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c4, rt0.c0, vt0.c0, rt0.c3, rt0.c1, rt0.c2;
SELECT rt0.c4, rt0.c0, vt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM vt0 FULL OUTER JOIN rt0 ON RTRIM(NULL) GROUP BY rt0.c4, rt0.c0, vt0.c0, rt0.c3, rt0.c1, rt0.c2;
SELECT ALL rt0.c2, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c4;
SELECT ALL rt0.c2, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c4 HAVING SUM(rt0.c1) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c4 HAVING (NOT (SUM(rt0.c1))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c4 HAVING ((SUM(rt0.c1)) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c4;
SELECT ALL rt0.c2, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c4 HAVING SUM(rt0.c1) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c4 HAVING (NOT (SUM(rt0.c1))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c4 HAVING ((SUM(rt0.c1)) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c4;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (((rtreenode(x'', 0.604486081690892)) IS TRUE)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((rtreenode(x'', 0.604486081690892)) IS TRUE)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((rtreenode(x'', 0.604486081690892)) IS TRUE)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c3, rt0.c2, rt0.c4, vt0.c0 FROM rt0, vt0;
SELECT DISTINCT rt0.c1, rt0.c3, rt0.c2, rt0.c4, vt0.c0 FROM rt0, vt0 WHERE (((vt0.c0)<=(rt0.c3)) COLLATE RTRIM) UNION SELECT DISTINCT rt0.c1, rt0.c3, rt0.c2, rt0.c4, vt0.c0 FROM rt0, vt0 WHERE ((NOT (((vt0.c0)<=(rt0.c3)) COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c1, rt0.c3, rt0.c2, rt0.c4, vt0.c0 FROM rt0, vt0 WHERE (((((vt0.c0)<=(rt0.c3)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c3, rt0.c2, rt0.c4, vt0.c0 FROM rt0, vt0;
SELECT ALL rt0.c0, rt0.c4 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c4;
SELECT rt0.c0, rt0.c4 FROM vt0, rt0 WHERE ((SQLITE_VERSION() IN ())) GROUP BY rt0.c0, rt0.c4 UNION SELECT rt0.c0, rt0.c4 FROM vt0, rt0 WHERE ((NOT ((SQLITE_VERSION() IN ())))) GROUP BY rt0.c0, rt0.c4 UNION SELECT rt0.c0, rt0.c4 FROM vt0, rt0 WHERE ((((SQLITE_VERSION() IN ())) ISNULL)) GROUP BY rt0.c0, rt0.c4;
SELECT ALL rt0.c0, rt0.c4 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c4;
SELECT rt0.c4, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c0;
SELECT ALL rt0.c4, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c0 HAVING rt0.c2 UNION ALL SELECT ALL rt0.c4, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c0 HAVING (NOT (rt0.c2)) UNION ALL SELECT ALL rt0.c4, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c0 HAVING ((rt0.c2) ISNULL);
SELECT rt0.c4, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c0;
SELECT ALL rt0.c4, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c0 HAVING rt0.c2 UNION ALL SELECT ALL rt0.c4, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c0 HAVING (NOT (rt0.c2)) UNION ALL SELECT ALL rt0.c4, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c0 HAVING ((rt0.c2) ISNULL);
SELECT rt0.c4, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c0;
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c0))<=((vt0.c0)))) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE NULL END) AND (vt0.c0 COLLATE BINARY))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((((vt0.c0))<=((vt0.c0)))) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE NULL END) AND (vt0.c0 COLLATE BINARY))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((((((vt0.c0))<=((vt0.c0)))) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE NULL END) AND (vt0.c0 COLLATE BINARY))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (((vt0.c0 COLLATE RTRIM) NOT NULL)) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (((vt0.c0 COLLATE RTRIM) NOT NULL)))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((((vt0.c0 COLLATE RTRIM) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT rt0.c3, rt0.c4, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c3, rt0.c4, vt0.c0;
SELECT ALL rt0.c3, rt0.c4, vt0.c0 FROM rt0, vt0 WHERE (CASE WHEN ((rt0.c0) ISNULL) THEN (~ (rt0.c0)) ELSE ((rt0.c0)<(rt0.c2)) END) GROUP BY rt0.c3, rt0.c4, vt0.c0 UNION SELECT rt0.c3, rt0.c4, vt0.c0 FROM rt0, vt0 WHERE ((NOT (CASE WHEN ((rt0.c0) ISNULL) THEN (~ (rt0.c0)) ELSE ((rt0.c0)<(rt0.c2)) END))) GROUP BY rt0.c3, rt0.c4, vt0.c0 UNION SELECT ALL rt0.c3, rt0.c4, vt0.c0 FROM rt0, vt0 WHERE (((CASE WHEN ((rt0.c0) ISNULL) THEN (~ (rt0.c0)) ELSE ((rt0.c0)<(rt0.c2)) END) ISNULL)) GROUP BY rt0.c3, rt0.c4, vt0.c0;
SELECT rt0.c3, rt0.c4, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c3, rt0.c4, vt0.c0;
SELECT rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c1;
SELECT ALL rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c1 HAVING MIN((MIN(GROUP_CONCAT(AVG(COUNT(*)))) IN ())) UNION ALL SELECT ALL rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c1 HAVING (NOT (MIN((MIN(GROUP_CONCAT(AVG(COUNT(*)))) IN ())))) UNION ALL SELECT rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c1 HAVING ((MIN((MIN(GROUP_CONCAT(AVG(COUNT(*)))) IN ()))) ISNULL);
SELECT rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c1;
SELECT ALL rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c1 HAVING MIN((MIN(GROUP_CONCAT(AVG(COUNT(*)))) IN ())) UNION ALL SELECT ALL rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c1 HAVING (NOT (MIN((MIN(GROUP_CONCAT(AVG(COUNT(*)))) IN ())))) UNION ALL SELECT rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c1 HAVING ((MIN((MIN(GROUP_CONCAT(AVG(COUNT(*)))) IN ()))) ISNULL);
SELECT rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c1;
SELECT ALL * FROM vt0, rt0;
SELECT * FROM vt0, rt0 WHERE (CASE QUOTE(rt0.c1)  WHEN rt0.c1 COLLATE RTRIM THEN rt0.c4 COLLATE BINARY ELSE rt0.c3 END) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE ((NOT (CASE QUOTE(rt0.c1)  WHEN rt0.c1 COLLATE RTRIM THEN rt0.c4 COLLATE BINARY ELSE rt0.c3 END))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE (((CASE QUOTE(rt0.c1)  WHEN rt0.c1 COLLATE RTRIM THEN rt0.c4 COLLATE BINARY ELSE rt0.c3 END) ISNULL));
SELECT ALL * FROM vt0, rt0;
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt0 ON json(((((((((rt0.c0)OR(rt0.c3)))AND(rt0.c1)))AND(rt0.c4)))AND(rt0.c0)));
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt0 ON json(((((((((rt0.c0)OR(rt0.c3)))AND(rt0.c1)))AND(rt0.c4)))AND(rt0.c0))) WHERE ((((((((rt0.c3))!=((rt0.c4))))AND(((rt0.c2)<<(rt0.c3)))))AND(((rt0.c4) NOT BETWEEN (rt0.c3) AND (NULL))))) UNION SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt0 ON json(((((((((rt0.c0)OR(rt0.c3)))AND(rt0.c1)))AND(rt0.c4)))AND(rt0.c0))) WHERE ((NOT ((((((((rt0.c3))<>((rt0.c4))))AND(((rt0.c2)<<(rt0.c3)))))AND(((rt0.c4) NOT BETWEEN (rt0.c3) AND (NULL))))))) UNION SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt0 ON json(((((((((rt0.c0)OR(rt0.c3)))AND(rt0.c1)))AND(rt0.c4)))AND(rt0.c0))) WHERE ((((((((((rt0.c3))!=((rt0.c4))))AND(((rt0.c2)<<(rt0.c3)))))AND(((rt0.c4) NOT BETWEEN (rt0.c3) AND (NULL))))) ISNULL));
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt0 ON json(((((((((rt0.c0)OR(rt0.c3)))AND(rt0.c1)))AND(rt0.c4)))AND(rt0.c0)));
SELECT rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0, vt0 WHERE ((('^1^Y')=((NOT (vt0.c0))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0, vt0 WHERE ((NOT ((('^1^Y')=((NOT (vt0.c0))))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0, vt0 WHERE ((((('^1^Y')==((NOT (vt0.c0))))) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c3, rt0.c2, vt0.c0, rt0.c4, rt0.c1, rt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON ((((((NULL)OR(vt0.c0)))OR(vt0.c0)))>(CAST(rt0.c0 AS INTEGER))) GROUP BY rt0.c3, rt0.c2, vt0.c0, rt0.c4, rt0.c1, rt0.c0;
SELECT ALL rt0.c3, rt0.c2, vt0.c0, rt0.c4, rt0.c1, rt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON ((((((NULL)OR(vt0.c0)))OR(vt0.c0)))>(CAST(rt0.c0 AS INTEGER))) GROUP BY rt0.c3, rt0.c2, vt0.c0, rt0.c4, rt0.c1, rt0.c0 HAVING GROUP_CONCAT((~ (COUNT(*)))) UNION ALL SELECT rt0.c3, rt0.c2, vt0.c0, rt0.c4, rt0.c1, rt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON ((((((NULL)OR(vt0.c0)))OR(vt0.c0)))>(CAST(rt0.c0 AS INTEGER))) GROUP BY rt0.c3, rt0.c2, vt0.c0, rt0.c4, rt0.c1, rt0.c0 HAVING (NOT (GROUP_CONCAT((~ (COUNT(*)))))) UNION ALL SELECT ALL rt0.c3, rt0.c2, vt0.c0, rt0.c4, rt0.c1, rt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON ((((((NULL)OR(vt0.c0)))OR(vt0.c0)))>(CAST(rt0.c0 AS INTEGER))) GROUP BY rt0.c3, rt0.c2, vt0.c0, rt0.c4, rt0.c1, rt0.c0 HAVING ((GROUP_CONCAT((~ (COUNT(*))))) ISNULL);
SELECT ALL TOTAL((((((rt0.c4) IS TRUE)))<((HEX(rt0.c3))))) FROM vt0, rt0;
SELECT ALL * FROM vt0, rt0;
SELECT * FROM vt0, rt0 WHERE ((((vt0.c0 IN ()))|(rt0.c4))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE ((NOT ((((vt0.c0 IN ()))|(rt0.c4))))) UNION ALL SELECT * FROM vt0, rt0 WHERE ((((((vt0.c0 IN ()))|(rt0.c4))) ISNULL));
SELECT ALL * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0 CROSS JOIN rt0 ON (~ (((rt0.c1)LIKE(vt0.c0))));
SELECT DISTINCT * FROM vt0 CROSS JOIN rt0 ON (~ (((rt0.c1)LIKE(vt0.c0)))) WHERE (CAST(rt0.c0 AS BLOB) COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt0 CROSS JOIN rt0 ON (~ (((rt0.c1)LIKE(vt0.c0)))) WHERE ((NOT (CAST(rt0.c0 AS BLOB) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt0 CROSS JOIN rt0 ON (~ (((rt0.c1)LIKE(vt0.c0)))) WHERE (((CAST(rt0.c0 AS BLOB) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt0 CROSS JOIN rt0 ON (~ (((rt0.c1)LIKE(vt0.c0))));
SELECT ALL rt0.c2, rt0.c4, rt0.c0, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c0, rt0.c1, rt0.c3;
SELECT ALL rt0.c2, rt0.c4, rt0.c0, rt0.c1, rt0.c3 FROM rt0 WHERE ((((rt0.c1 IN (rt0.c3))) NOT BETWEEN (((rt0.c2)<<(rt0.c3))) AND (rt0.c3 COLLATE NOCASE))) GROUP BY rt0.c2, rt0.c4, rt0.c0, rt0.c1, rt0.c3 UNION SELECT rt0.c2, rt0.c4, rt0.c0, rt0.c1, rt0.c3 FROM rt0 WHERE ((NOT ((((rt0.c1 IN (rt0.c3))) NOT BETWEEN (((rt0.c2)<<(rt0.c3))) AND (rt0.c3 COLLATE NOCASE))))) GROUP BY rt0.c2, rt0.c4, rt0.c0, rt0.c1, rt0.c3 UNION SELECT ALL rt0.c2, rt0.c4, rt0.c0, rt0.c1, rt0.c3 FROM rt0 WHERE ((((((rt0.c1 IN (rt0.c3))) NOT BETWEEN (((rt0.c2)<<(rt0.c3))) AND (rt0.c3 COLLATE NOCASE))) ISNULL)) GROUP BY rt0.c2, rt0.c4, rt0.c0, rt0.c1, rt0.c3;
SELECT ALL rt0.c2, rt0.c4, rt0.c0, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c0, rt0.c1, rt0.c3;
SELECT ALL rt0.c4, rt0.c1, rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c0, rt0.c3;
SELECT ALL rt0.c4, rt0.c1, rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c0, rt0.c3 HAVING (NOT (rt0.c0)) UNION ALL SELECT rt0.c4, rt0.c1, rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c0, rt0.c3 HAVING (NOT ((NOT (rt0.c0)))) UNION ALL SELECT ALL rt0.c4, rt0.c1, rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c0, rt0.c3 HAVING (((NOT (rt0.c0))) ISNULL);
SELECT ALL rt0.c4, rt0.c1, rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c0, rt0.c3;
SELECT ALL rt0.c4, rt0.c1, rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c0, rt0.c3 HAVING (NOT (rt0.c0)) UNION ALL SELECT rt0.c4, rt0.c1, rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c0, rt0.c3 HAVING (NOT ((NOT (rt0.c0)))) UNION ALL SELECT ALL rt0.c4, rt0.c1, rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c0, rt0.c3 HAVING (((NOT (rt0.c0))) ISNULL);
SELECT ALL rt0.c4, rt0.c1, rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c0, rt0.c3;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (((((vt0.c0) NOTNULL)) NOT NULL)) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((((vt0.c0) NOTNULL)) NOT NULL)))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((((vt0.c0) NOTNULL)) NOT NULL)) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (UNICODE(((((rt0.c2)AND(rt0.c1)))AND(rt0.c3)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (UNICODE(((((rt0.c2)AND(rt0.c1)))AND(rt0.c3)))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((UNICODE(((((rt0.c2)AND(rt0.c1)))AND(rt0.c3)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c4, vt0.c0, rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON (((rt0.c1)) NOT BETWEEN ((UNLIKELY(rt0.c0))) AND ((x''))) GROUP BY rt0.c4, vt0.c0, rt0.c1, rt0.c2, rt0.c3, rt0.c0;
SELECT ALL rt0.c4, vt0.c0, rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON (((rt0.c1)) NOT BETWEEN ((UNLIKELY(rt0.c0))) AND ((x''))) WHERE (((((((((NULL)AND(NULL)))OR(((((rt0.c0)AND(rt0.c3)))OR(rt0.c3)))))OR(((((rt0.c2)OR(rt0.c2)))AND(rt0.c3)))))OR(((rt0.c2) ISNULL)))) GROUP BY rt0.c4, vt0.c0, rt0.c1, rt0.c2, rt0.c3, rt0.c0 UNION SELECT rt0.c4, vt0.c0, rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON (((rt0.c1)) NOT BETWEEN ((UNLIKELY(rt0.c0))) AND ((x''))) WHERE ((NOT (((((((((NULL)AND(NULL)))OR(((((rt0.c0)AND(rt0.c3)))OR(rt0.c3)))))OR(((((rt0.c2)OR(rt0.c2)))AND(rt0.c3)))))OR(((rt0.c2) ISNULL)))))) GROUP BY rt0.c4, vt0.c0, rt0.c1, rt0.c2, rt0.c3, rt0.c0 UNION SELECT rt0.c4, vt0.c0, rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON (((rt0.c1)) NOT BETWEEN ((UNLIKELY(rt0.c0))) AND ((x''))) WHERE (((((((((((NULL)AND(NULL)))OR(((((rt0.c0)AND(rt0.c3)))OR(rt0.c3)))))OR(((((rt0.c2)OR(rt0.c2)))AND(rt0.c3)))))OR(((rt0.c2) ISNULL)))) ISNULL)) GROUP BY rt0.c4, vt0.c0, rt0.c1, rt0.c2, rt0.c3, rt0.c0;
SELECT ALL rt0.c4, vt0.c0, rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON (((rt0.c1)) NOT BETWEEN ((UNLIKELY(rt0.c0))) AND ((x''))) GROUP BY rt0.c4, vt0.c0, rt0.c1, rt0.c2, rt0.c3, rt0.c0;
SELECT rt0.c2, rt0.c0, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c3, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c3, rt0.c1 HAVING MIN(MIN(rt0.c1)) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c3, rt0.c1 HAVING (NOT (MIN(MIN(rt0.c1)))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c3, rt0.c1 HAVING ((MIN(MIN(rt0.c1))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((((rt0.c0)+(rt0.c1)))>(((rt0.c0)|(rt0.c0))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((rt0.c0)+(rt0.c1)))>(((rt0.c0)|(rt0.c0))))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((rt0.c0)+(rt0.c1)))>(((rt0.c0)|(rt0.c0))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((JULIANDAY(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))*(UNLIKELY(DISTINCT vt0.c0)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((JULIANDAY(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))*(UNLIKELY(DISTINCT vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((JULIANDAY(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))*(UNLIKELY(DISTINCT vt0.c0)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT rt0.c1, rt0.c0, vt0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c4, rt0.c3, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, vt0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0, vt0 WHERE ((NOT (vt0.c0))) GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c4, rt0.c3, rt0.c2 UNION SELECT rt0.c1, rt0.c0, vt0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0, vt0 WHERE ((NOT ((NOT (vt0.c0))))) GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c4, rt0.c3, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, vt0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0, vt0 WHERE ((((NOT (vt0.c0))) ISNULL)) GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c4, rt0.c3, rt0.c2;
SELECT rt0.c1, rt0.c0, vt0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, vt0.c0, rt0.c4, rt0.c3, rt0.c2;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((((MIN(rt0.c2))-(rt0.c3)))<>(MIN(rt0.c4))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (((((MIN(rt0.c2))-(rt0.c3)))<>(MIN(rt0.c4))))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((((((MIN(rt0.c2))-(rt0.c3)))<>(MIN(rt0.c4)))) ISNULL);
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((((MIN(rt0.c2))-(rt0.c3)))<>(MIN(rt0.c4))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (((((MIN(rt0.c2))-(rt0.c3)))<>(MIN(rt0.c4))))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((((((MIN(rt0.c2))-(rt0.c3)))<>(MIN(rt0.c4)))) ISNULL);
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c4, vt0.c0, rt0.c3, rt0.c1, rt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON (((((((((~ (rt0.c4)))AND(((rt0.c2) ISNULL))))AND(rt0.c0)))AND((((rt0.c0)) BETWEEN ((rt0.c4)) AND ((vt0.c0))))))AND(((rt0.c1)GLOB(rt0.c3))));
SELECT ALL rt0.c4, vt0.c0, rt0.c3, rt0.c1, rt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON (((((((((~ (rt0.c4)))AND(((rt0.c2) ISNULL))))AND(rt0.c0)))AND((((rt0.c0)) BETWEEN ((rt0.c4)) AND ((vt0.c0))))))AND(((rt0.c1)GLOB(rt0.c3)))) WHERE (load_extension(((((((((vt0.c0)OR(vt0.c0)))OR(rt0.c1)))OR(vt0.c0)))OR(rt0.c1)))) UNION ALL SELECT rt0.c4, vt0.c0, rt0.c3, rt0.c1, rt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON (((((((((~ (rt0.c4)))AND(((rt0.c2) ISNULL))))AND(rt0.c0)))AND((((rt0.c0)) BETWEEN ((rt0.c4)) AND ((vt0.c0))))))AND(((rt0.c1)GLOB(rt0.c3)))) WHERE ((NOT (load_extension(((((((((vt0.c0)OR(vt0.c0)))OR(rt0.c1)))OR(vt0.c0)))OR(rt0.c1)))))) UNION ALL SELECT rt0.c4, vt0.c0, rt0.c3, rt0.c1, rt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON (((((((((~ (rt0.c4)))AND(((rt0.c2) ISNULL))))AND(rt0.c0)))AND((((rt0.c0)) BETWEEN ((rt0.c4)) AND ((vt0.c0))))))AND(((rt0.c1)GLOB(rt0.c3)))) WHERE (((load_extension(((((((((vt0.c0)OR(vt0.c0)))OR(rt0.c1)))OR(vt0.c0)))OR(rt0.c1)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER)) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, vt0 WHERE (((((5.8389751E8) NOTNULL))<((NOT (rt0.c2))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0, vt0 WHERE ((NOT (((((5.8389751E8) NOTNULL))<((NOT (rt0.c2))))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0, vt0 WHERE (((((((5.8389751E8) NOTNULL))<((NOT (rt0.c2))))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0 HAVING TOTAL(GROUP_CONCAT(NULL)) UNION ALL SELECT rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0 HAVING (NOT (TOTAL(GROUP_CONCAT(NULL)))) UNION ALL SELECT rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0 HAVING ((TOTAL(GROUP_CONCAT(NULL))) ISNULL);
SELECT ALL rt0.c0, vt0.c0, rt0.c1, rt0.c3, rt0.c4, rt0.c2 FROM rt0, vt0;
SELECT rt0.c0, vt0.c0, rt0.c1, rt0.c3, rt0.c4, rt0.c2 FROM rt0, vt0 WHERE (NULL) UNION ALL SELECT rt0.c0, vt0.c0, rt0.c1, rt0.c3, rt0.c4, rt0.c2 FROM rt0, vt0 WHERE ((NOT (NULL))) UNION ALL SELECT ALL rt0.c0, vt0.c0, rt0.c1, rt0.c3, rt0.c4, rt0.c2 FROM rt0, vt0 WHERE (((NULL) ISNULL));
SELECT ALL rt0.c0, vt0.c0, rt0.c1, rt0.c3, rt0.c4, rt0.c2 FROM rt0, vt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM rt0 WHERE ((~ (rt0.c2)) COLLATE NOCASE) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM rt0 WHERE ((NOT ((~ (rt0.c2)) COLLATE NOCASE))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM rt0 WHERE ((((~ (rt0.c2)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM rt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((+ ((((vt0.c0)) BETWEEN (('0.8570376473173561')) AND ((vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((+ ((((vt0.c0)) BETWEEN (('0.8570376473173561')) AND ((vt0.c0)))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((+ ((((vt0.c0)) BETWEEN (('0.8570376473173561')) AND ((vt0.c0)))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c2, rt0.c4 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c4;
SELECT ALL rt0.c2, rt0.c4 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c4 HAVING rt0.c3 UNION ALL SELECT rt0.c2, rt0.c4 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c4 HAVING (NOT (rt0.c3)) UNION ALL SELECT ALL rt0.c2, rt0.c4 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c4 HAVING ((rt0.c3) ISNULL);
SELECT ALL rt0.c2, rt0.c4 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c4;
SELECT ALL rt0.c2, rt0.c4 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c4 HAVING rt0.c3 UNION ALL SELECT rt0.c2, rt0.c4 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c4 HAVING (NOT (rt0.c3)) UNION ALL SELECT ALL rt0.c2, rt0.c4 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c4 HAVING ((rt0.c3) ISNULL);
SELECT ALL rt0.c2, rt0.c4 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c4;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (rt0.c1) UNION ALL SELECT * FROM rt0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT * FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c0))>((vt0.c0)))) ISNULL)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((((vt0.c0))>((vt0.c0)))) ISNULL)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((((vt0.c0))>((vt0.c0)))) ISNULL)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt0, rt0 WHERE (((rt0.c2 COLLATE BINARY)<(rt0.c2))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM vt0, rt0 WHERE ((NOT (((rt0.c2 COLLATE BINARY)<(rt0.c2))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM vt0, rt0 WHERE (((((rt0.c2 COLLATE BINARY)<(rt0.c2))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c1, rt0.c4, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c4, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c1, rt0.c4, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c1, rt0.c4, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c1, rt0.c4, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c4, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c1, rt0.c4, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c1, rt0.c4, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c1, rt0.c4, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c0;
SELECT * FROM rt0, vt0;
SELECT ALL * FROM rt0, vt0 WHERE ((((1347634596))<((load_extension(rt0.c3))))) UNION ALL SELECT * FROM rt0, vt0 WHERE ((NOT ((((1347634596))<((load_extension(rt0.c3))))))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((((((1347634596))<((load_extension(rt0.c3))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c2) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0, vt0 WHERE ('qY') GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0, vt0 WHERE ((NOT ('qY'))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0, vt0 WHERE ((('qY') ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c1;
SELECT ALL rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c1 HAVING (((rt0.c4) IS FALSE) IN ()) UNION ALL SELECT ALL rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c1 HAVING (NOT ((((rt0.c4) IS FALSE) IN ()))) UNION ALL SELECT rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c1 HAVING (((((rt0.c4) IS FALSE) IN ())) ISNULL);
SELECT rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c1;
SELECT ALL rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c1 HAVING (((rt0.c4) IS FALSE) IN ()) UNION ALL SELECT ALL rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c1 HAVING (NOT ((((rt0.c4) IS FALSE) IN ()))) UNION ALL SELECT rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c1 HAVING (((((rt0.c4) IS FALSE) IN ())) ISNULL);
SELECT rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c1;
SELECT ALL rt0.c1, rt0.c3, rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c3, rt0.c0 FROM rt0 WHERE (((TYPEOF(DISTINCT rt0.c1)) NOT NULL)) UNION ALL SELECT ALL rt0.c1, rt0.c3, rt0.c0 FROM rt0 WHERE ((NOT (((TYPEOF(DISTINCT rt0.c1)) NOT NULL)))) UNION ALL SELECT ALL rt0.c1, rt0.c3, rt0.c0 FROM rt0 WHERE (((((TYPEOF(DISTINCT rt0.c1)) NOT NULL)) ISNULL));
SELECT ALL rt0.c1, rt0.c3, rt0.c0 FROM rt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((vt0.c0)&(vt0.c0)) IN (CAST(vt0.c0 AS REAL)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0)&(vt0.c0)) IN (CAST(vt0.c0 AS REAL)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 NOT INDEXED WHERE ((((((vt0.c0)&(vt0.c0)) IN (CAST(vt0.c0 AS REAL)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL rt0.c4, rt0.c1, rt0.c0, vt0.c0, rt0.c2, rt0.c3 FROM vt0, rt0 GROUP BY rt0.c4, rt0.c1, rt0.c0, vt0.c0, rt0.c2, rt0.c3;
SELECT ALL rt0.c4, rt0.c1, rt0.c0, vt0.c0, rt0.c2, rt0.c3 FROM vt0, rt0 WHERE (((rt0.c0)GLOB(rt0.c3)) COLLATE BINARY COLLATE BINARY) GROUP BY rt0.c4, rt0.c1, rt0.c0, vt0.c0, rt0.c2, rt0.c3 UNION SELECT rt0.c4, rt0.c1, rt0.c0, vt0.c0, rt0.c2, rt0.c3 FROM vt0, rt0 WHERE ((NOT (((rt0.c0)GLOB(rt0.c3)) COLLATE BINARY COLLATE BINARY))) GROUP BY rt0.c4, rt0.c1, rt0.c0, vt0.c0, rt0.c2, rt0.c3 UNION SELECT ALL rt0.c4, rt0.c1, rt0.c0, vt0.c0, rt0.c2, rt0.c3 FROM vt0, rt0 WHERE (((((rt0.c0)GLOB(rt0.c3)) COLLATE BINARY COLLATE BINARY) ISNULL)) GROUP BY rt0.c4, rt0.c1, rt0.c0, vt0.c0, rt0.c2, rt0.c3;
SELECT ALL rt0.c4, rt0.c1, rt0.c0, vt0.c0, rt0.c2, rt0.c3 FROM vt0, rt0 GROUP BY rt0.c4, rt0.c1, rt0.c0, vt0.c0, rt0.c2, rt0.c3;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG(CAST('' AS NUMERIC)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (AVG(CAST('' AS NUMERIC)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG(CAST('' AS NUMERIC))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG(CAST('' AS NUMERIC)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (AVG(CAST('' AS NUMERIC)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG(CAST('' AS NUMERIC))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT MIN(CASE UNLIKELY(DISTINCT rt0.c4)  WHEN ((rt0.c3)||(rt0.c0)) THEN (rt0.c1 IN (rt0.c0)) ELSE 'P]\nF*Xe' END) FROM rt0;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CASE ((((rt0.c4)AND(rt0.c2)))OR(0.9708131162204613))  WHEN ((rt0.c0)==(rt0.c4)) THEN rt0.c3 WHEN '1180034609' THEN rt0.c2 WHEN ((rt0.c3)GLOB(rt0.c4)) THEN (- (rt0.c0)) ELSE ((rt0.c0) NOT NULL) END) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CASE ((((rt0.c4)AND(rt0.c2)))OR(0.9708131162204613))  WHEN ((rt0.c0)=(rt0.c4)) THEN rt0.c3 WHEN '1180034609' THEN rt0.c2 WHEN ((rt0.c3)GLOB(rt0.c4)) THEN (- (rt0.c0)) ELSE ((rt0.c0) NOT NULL) END))) UNION ALL SELECT * FROM rt0 WHERE (((CASE ((((rt0.c4)AND(rt0.c2)))OR(0.9708131162204613))  WHEN ((rt0.c0)==(rt0.c4)) THEN rt0.c3 WHEN '1180034609' THEN rt0.c2 WHEN ((rt0.c3)GLOB(rt0.c4)) THEN (- (rt0.c0)) ELSE ((rt0.c0) NOT NULL) END) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1, rt0.c4, vt0.c0 FROM rt0, vt0 NOT INDEXED;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1, rt0.c4, vt0.c0 FROM rt0, vt0 WHERE (((CAST(0.03410776976825325 AS NUMERIC)) IS TRUE)) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1, rt0.c4, vt0.c0 FROM rt0, vt0 WHERE ((NOT (((CAST(0.03410776976825325 AS NUMERIC)) IS TRUE)))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1, rt0.c4, vt0.c0 FROM rt0, vt0 WHERE (((((CAST(0.03410776976825325 AS NUMERIC)) IS TRUE)) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1, rt0.c4, vt0.c0 FROM rt0, vt0 NOT INDEXED;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (x'') GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (x''))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((x'') ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c4, rt0.c0, vt0.c0 FROM vt0 NATURAL JOIN rt0 GROUP BY rt0.c4, rt0.c0, vt0.c0;
SELECT rt0.c4, rt0.c0, vt0.c0 FROM vt0 NATURAL JOIN rt0 GROUP BY rt0.c4, rt0.c0, vt0.c0 HAVING GROUP_CONCAT(SQLITE_VERSION()) UNION ALL SELECT ALL rt0.c4, rt0.c0, vt0.c0 FROM vt0 NATURAL JOIN rt0 GROUP BY rt0.c4, rt0.c0, vt0.c0 HAVING (NOT (GROUP_CONCAT(SQLITE_VERSION()))) UNION ALL SELECT ALL rt0.c4, rt0.c0, vt0.c0 FROM vt0 NATURAL JOIN rt0 GROUP BY rt0.c4, rt0.c0, vt0.c0 HAVING ((GROUP_CONCAT(SQLITE_VERSION())) ISNULL);
SELECT ALL rt0.c4, rt0.c0, vt0.c0 FROM vt0 NATURAL JOIN rt0 GROUP BY rt0.c4, rt0.c0, vt0.c0;
SELECT rt0.c4, rt0.c0, vt0.c0 FROM vt0 NATURAL JOIN rt0 GROUP BY rt0.c4, rt0.c0, vt0.c0 HAVING GROUP_CONCAT(SQLITE_VERSION()) UNION ALL SELECT ALL rt0.c4, rt0.c0, vt0.c0 FROM vt0 NATURAL JOIN rt0 GROUP BY rt0.c4, rt0.c0, vt0.c0 HAVING (NOT (GROUP_CONCAT(SQLITE_VERSION()))) UNION ALL SELECT ALL rt0.c4, rt0.c0, vt0.c0 FROM vt0 NATURAL JOIN rt0 GROUP BY rt0.c4, rt0.c0, vt0.c0 HAVING ((GROUP_CONCAT(SQLITE_VERSION())) ISNULL);
SELECT ALL rt0.c4, rt0.c0, vt0.c0 FROM vt0 NATURAL JOIN rt0 GROUP BY rt0.c4, rt0.c0, vt0.c0;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE ((((((rt0.c2)OR(rt0.c4)))OR(rt0.c1)) IN ())) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((((((rt0.c2)OR(rt0.c4)))OR(rt0.c1)) IN ())))) UNION ALL SELECT * FROM rt0 WHERE ((((((((rt0.c2)OR(rt0.c4)))OR(rt0.c1)) IN ())) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c0, vt0.c0, rt0.c2 FROM rt0, vt0;
SELECT DISTINCT rt0.c0, vt0.c0, rt0.c2 FROM rt0, vt0 WHERE ((((rt0.c3, rt0.c3, rt0.c4)) NOT BETWEEN ((((0xfffffffffd8f0169)*(vt0.c0)), ((((rt0.c3)AND(rt0.c3)))AND(rt0.c3)), json_type(rt0.c0))) AND ((((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (NOT (rt0.c0)), ((rt0.c1)>=(rt0.c0)))))) UNION SELECT DISTINCT rt0.c0, vt0.c0, rt0.c2 FROM rt0, vt0 WHERE ((NOT ((((rt0.c3, rt0.c3, rt0.c4)) NOT BETWEEN ((((0Xfffffffffd8f0169)*(vt0.c0)), ((((rt0.c3)AND(rt0.c3)))AND(rt0.c3)), json_type(rt0.c0))) AND ((((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (NOT (rt0.c0)), ((rt0.c1)>=(rt0.c0)))))))) UNION SELECT DISTINCT rt0.c0, vt0.c0, rt0.c2 FROM rt0, vt0 WHERE ((((((rt0.c3, rt0.c3, rt0.c4)) NOT BETWEEN ((((0xfffffffffd8f0169)*(vt0.c0)), ((((rt0.c3)AND(rt0.c3)))AND(rt0.c3)), json_type(rt0.c0))) AND ((((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (NOT (rt0.c0)), ((rt0.c1)>=(rt0.c0)))))) ISNULL));
SELECT DISTINCT rt0.c0, vt0.c0, rt0.c2 FROM rt0, vt0;
SELECT rt0.c1, rt0.c0, rt0.c2, rt0.c4 FROM vt0 RIGHT OUTER JOIN rt0 ON MIN(((((rt0.c4)OR(rt0.c2)))AND(rt0.c1)), vt0.c0) GROUP BY rt0.c1, rt0.c0, rt0.c2, rt0.c4;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, rt0.c4 FROM vt0 RIGHT OUTER JOIN rt0 ON MIN(((((rt0.c4)OR(rt0.c2)))AND(rt0.c1)), vt0.c0) WHERE (CAST((+ (rt0.c3)) AS INTEGER)) GROUP BY rt0.c1, rt0.c0, rt0.c2, rt0.c4 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2, rt0.c4 FROM vt0 RIGHT OUTER JOIN rt0 ON MIN(((((rt0.c4)OR(rt0.c2)))AND(rt0.c1)), vt0.c0) WHERE ((NOT (CAST((+ (rt0.c3)) AS INTEGER)))) GROUP BY rt0.c1, rt0.c0, rt0.c2, rt0.c4 UNION SELECT rt0.c1, rt0.c0, rt0.c2, rt0.c4 FROM vt0 RIGHT OUTER JOIN rt0 ON MIN(((((rt0.c4)OR(rt0.c2)))AND(rt0.c1)), vt0.c0) WHERE (((CAST((+ (rt0.c3)) AS INTEGER)) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2, rt0.c4;
SELECT rt0.c1, rt0.c0, rt0.c2, rt0.c4 FROM vt0 RIGHT OUTER JOIN rt0 ON MIN(((((rt0.c4)OR(rt0.c2)))AND(rt0.c1)), vt0.c0) GROUP BY rt0.c1, rt0.c0, rt0.c2, rt0.c4;
SELECT ALL rt0.c0, rt0.c4, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c4, vt0.c0;
SELECT ALL rt0.c0, rt0.c4, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c4, vt0.c0 HAVING TOTAL(COUNT(*)) UNION ALL SELECT rt0.c0, rt0.c4, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c4, vt0.c0 HAVING (NOT (TOTAL(COUNT(*)))) UNION ALL SELECT ALL rt0.c0, rt0.c4, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c4, vt0.c0 HAVING ((TOTAL(COUNT(*))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((((((NULL, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, x'08be')) AND ((vt0.c0, vt0.c0, vt0.c0)))) NOT NULL)) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((((((NULL, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, x'08be')) AND ((vt0.c0, vt0.c0, vt0.c0)))) NOT NULL)))) UNION ALL SELECT * FROM vt0 WHERE ((((((((NULL, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, x'08be')) AND ((vt0.c0, vt0.c0, vt0.c0)))) NOT NULL)) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT rt0.c4, rt0.c2, rt0.c1 FROM vt0, rt0 NOT INDEXED;
SELECT DISTINCT rt0.c4, rt0.c2, rt0.c1 FROM vt0, rt0 WHERE (((((((((CAST(rt0.c2 AS NUMERIC))OR(((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0)))))OR(HEX(rt0.c1))))AND(((vt0.c0)<<(vt0.c0)))))OR(TYPEOF(rt0.c3)))) UNION SELECT DISTINCT rt0.c4, rt0.c2, rt0.c1 FROM vt0, rt0 WHERE ((NOT (((((((((CAST(rt0.c2 AS NUMERIC))OR(((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0)))))OR(HEX(rt0.c1))))AND(((vt0.c0)<<(vt0.c0)))))OR(TYPEOF(rt0.c3)))))) UNION SELECT DISTINCT rt0.c4, rt0.c2, rt0.c1 FROM vt0, rt0 WHERE (((((((((((CAST(rt0.c2 AS NUMERIC))OR(((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0)))))OR(HEX(rt0.c1))))AND(((vt0.c0)<<(vt0.c0)))))OR(TYPEOF(rt0.c3)))) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c2, rt0.c1 FROM vt0, rt0 NOT INDEXED;
SELECT rt0.c4 FROM rt0, vt0 GROUP BY rt0.c4;
SELECT rt0.c4 FROM rt0, vt0 WHERE (((((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c3)))AND(((rt0.c2) NOT BETWEEN (rt0.c2) AND (NULL))))) GROUP BY rt0.c4 UNION SELECT ALL rt0.c4 FROM rt0, vt0 WHERE ((NOT (((((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c3)))AND(((rt0.c2) NOT BETWEEN (rt0.c2) AND (NULL))))))) GROUP BY rt0.c4 UNION SELECT rt0.c4 FROM rt0, vt0 WHERE (((((((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c3)))AND(((rt0.c2) NOT BETWEEN (rt0.c2) AND (NULL))))) ISNULL)) GROUP BY rt0.c4;
SELECT rt0.c4 FROM rt0, vt0 GROUP BY rt0.c4;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG(((MIN(vt0.c0))-(MIN(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (AVG(((MIN(vt0.c0))-(MIN(vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG(((MIN(vt0.c0))-(MIN(vt0.c0))))) ISNULL);
SELECT ALL rt0.c0, vt0.c0 FROM rt0, vt0;
SELECT rt0.c0, vt0.c0 FROM rt0, vt0 WHERE (((((rt0.c0)OR(vt0.c0)))AND(rt0.c3)) COLLATE NOCASE) UNION ALL SELECT rt0.c0, vt0.c0 FROM rt0, vt0 WHERE ((NOT (((((rt0.c0)OR(vt0.c0)))AND(rt0.c3)) COLLATE NOCASE))) UNION ALL SELECT ALL rt0.c0, vt0.c0 FROM rt0, vt0 WHERE (((((((rt0.c0)OR(vt0.c0)))AND(rt0.c3)) COLLATE NOCASE) ISNULL));
SELECT ALL rt0.c0, vt0.c0 FROM rt0, vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((json_array_length(vt0.c0))<<(vt0.c0 COLLATE RTRIM))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((json_array_length(vt0.c0))<<(vt0.c0 COLLATE RTRIM))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((json_array_length(vt0.c0))<<(vt0.c0 COLLATE RTRIM))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL rt0.c3, rt0.c4 FROM vt0 RIGHT OUTER JOIN rt0 ON x'6327' GROUP BY rt0.c3, rt0.c4;
SELECT rt0.c3, rt0.c4 FROM vt0 RIGHT OUTER JOIN rt0 ON x'6327' GROUP BY rt0.c3, rt0.c4 HAVING MAX(MIN(MAX(MIN(AVG(TOTAL(MAX(SUM(rt0.c4)))))))) UNION ALL SELECT rt0.c3, rt0.c4 FROM vt0 RIGHT OUTER JOIN rt0 ON x'6327' GROUP BY rt0.c3, rt0.c4 HAVING (NOT (MAX(MIN(MAX(MIN(AVG(TOTAL(MAX(SUM(rt0.c4)))))))))) UNION ALL SELECT rt0.c3, rt0.c4 FROM vt0 RIGHT OUTER JOIN rt0 ON x'6327' GROUP BY rt0.c3, rt0.c4 HAVING ((MAX(MIN(MAX(MIN(AVG(TOTAL(MAX(SUM(rt0.c4))))))))) ISNULL);
SELECT rt0.c1, rt0.c4, rt0.c2, rt0.c0 FROM vt0, rt0;
SELECT rt0.c1, rt0.c4, rt0.c2, rt0.c0 FROM vt0, rt0 WHERE (CAST(COALESCE(rt0.c2, rt0.c3) AS NUMERIC)) UNION ALL SELECT ALL rt0.c1, rt0.c4, rt0.c2, rt0.c0 FROM vt0, rt0 WHERE ((NOT (CAST(COALESCE(rt0.c2, rt0.c3) AS NUMERIC)))) UNION ALL SELECT ALL rt0.c1, rt0.c4, rt0.c2, rt0.c0 FROM vt0, rt0 WHERE (((CAST(COALESCE(rt0.c2, rt0.c3) AS NUMERIC)) ISNULL));
SELECT rt0.c1, rt0.c4, rt0.c2, rt0.c0 FROM vt0, rt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOTNULL)) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOTNULL)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOTNULL)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT rt0.c1, rt0.c4, vt0.c0, rt0.c2, rt0.c3, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c4, vt0.c0, rt0.c2, rt0.c3, rt0.c0;
SELECT rt0.c1, rt0.c4, vt0.c0, rt0.c2, rt0.c3, rt0.c0 FROM rt0, vt0 WHERE ((((((NOT (rt0.c4)))OR(TRIM(vt0.c0, rt0.c0))))AND(CASE WHEN '' THEN rt0.c4 END))) GROUP BY rt0.c1, rt0.c4, vt0.c0, rt0.c2, rt0.c3, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c4, vt0.c0, rt0.c2, rt0.c3, rt0.c0 FROM rt0, vt0 WHERE ((NOT ((((((NOT (rt0.c4)))OR(TRIM(vt0.c0, rt0.c0))))AND(CASE WHEN '' THEN rt0.c4 END))))) GROUP BY rt0.c1, rt0.c4, vt0.c0, rt0.c2, rt0.c3, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c4, vt0.c0, rt0.c2, rt0.c3, rt0.c0 FROM rt0, vt0 WHERE ((((((((NOT (rt0.c4)))OR(TRIM(vt0.c0, rt0.c0))))AND(CASE WHEN '' THEN rt0.c4 END))) ISNULL)) GROUP BY rt0.c1, rt0.c4, vt0.c0, rt0.c2, rt0.c3, rt0.c0;
SELECT rt0.c1, rt0.c4, vt0.c0, rt0.c2, rt0.c3, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c4, vt0.c0, rt0.c2, rt0.c3, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c4 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c4;
SELECT rt0.c1, rt0.c2, rt0.c4 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c4 HAVING ((((((((((COUNT(*)) NOT BETWEEN (MIN(vt0.c0)) AND (AVG(MIN(COUNT(vt0.c0))))))AND((rt0.c2 IN ()))))AND(COUNT(rt0.c1))))AND(((MAX(rt0.c2)) IS TRUE))))AND(AVG(MIN('')))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c4 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c4 HAVING (NOT (((((((((((COUNT(*)) NOT BETWEEN (MIN(vt0.c0)) AND (AVG(MIN(COUNT(vt0.c0))))))AND((rt0.c2 IN ()))))AND(COUNT(rt0.c1))))AND(((MAX(rt0.c2)) IS TRUE))))AND(AVG(MIN('')))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c4 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c4 HAVING ((((((((((((COUNT(*)) NOT BETWEEN (MIN(vt0.c0)) AND (AVG(MIN(COUNT(vt0.c0))))))AND((rt0.c2 IN ()))))AND(COUNT(rt0.c1))))AND(((MAX(rt0.c2)) IS TRUE))))AND(AVG(MIN(''))))) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c4 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c4;
SELECT rt0.c1, rt0.c2, rt0.c4 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c4 HAVING ((((((((((COUNT(*)) NOT BETWEEN (MIN(vt0.c0)) AND (AVG(MIN(COUNT(vt0.c0))))))AND((rt0.c2 IN ()))))AND(COUNT(rt0.c1))))AND(((MAX(rt0.c2)) IS TRUE))))AND(AVG(MIN('')))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c4 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c4 HAVING (NOT (((((((((((COUNT(*)) NOT BETWEEN (MIN(vt0.c0)) AND (AVG(MIN(COUNT(vt0.c0))))))AND((rt0.c2 IN ()))))AND(COUNT(rt0.c1))))AND(((MAX(rt0.c2)) IS TRUE))))AND(AVG(MIN('')))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c4 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c4 HAVING ((((((((((((COUNT(*)) NOT BETWEEN (MIN(vt0.c0)) AND (AVG(MIN(COUNT(vt0.c0))))))AND((rt0.c2 IN ()))))AND(COUNT(rt0.c1))))AND(((MAX(rt0.c2)) IS TRUE))))AND(AVG(MIN(''))))) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c4 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c4;
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c0))>=((vt0.c0))))LIKE(LIKELY(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((((vt0.c0))>=((vt0.c0))))LIKE(LIKELY(vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((((((vt0.c0))>=((vt0.c0))))LIKE(LIKELY(vt0.c0)))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT rt0.c1 FROM rt0, vt0;
SELECT DISTINCT rt0.c1 FROM rt0, vt0 WHERE ((rt0.c3 IN ())) UNION SELECT DISTINCT rt0.c1 FROM rt0, vt0 WHERE ((NOT ((rt0.c3 IN ())))) UNION SELECT DISTINCT rt0.c1 FROM rt0, vt0 WHERE ((((rt0.c3 IN ())) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0, vt0;
SELECT rt0.c4, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c3;
SELECT rt0.c4, rt0.c0, rt0.c3 FROM rt0 WHERE (x'') GROUP BY rt0.c4, rt0.c0, rt0.c3 UNION SELECT rt0.c4, rt0.c0, rt0.c3 FROM rt0 WHERE ((NOT (x''))) GROUP BY rt0.c4, rt0.c0, rt0.c3 UNION SELECT rt0.c4, rt0.c0, rt0.c3 FROM rt0 WHERE (((x'') ISNULL)) GROUP BY rt0.c4, rt0.c0, rt0.c3;
SELECT rt0.c4, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c3;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING AVG(TOTAL(rt0.c2)) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (AVG(TOTAL(rt0.c2)))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((AVG(TOTAL(rt0.c2))) ISNULL);
SELECT rt0.c4, rt0.c3, rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON (((((NULL))=((rt0.c3))))<<((~ (NULL))));
SELECT rt0.c4, rt0.c3, rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON (((((NULL))=((rt0.c3))))<<((~ (NULL)))) WHERE (((((rt0.c4 IN ())))<=((CAST(x'3e5e' AS NUMERIC))))) UNION ALL SELECT ALL rt0.c4, rt0.c3, rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON (((((NULL))==((rt0.c3))))<<((~ (NULL)))) WHERE ((NOT (((((rt0.c4 IN ())))<=((CAST(x'3e5e' AS NUMERIC))))))) UNION ALL SELECT ALL rt0.c4, rt0.c3, rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON (((((NULL))=((rt0.c3))))<<((~ (NULL)))) WHERE (((((((rt0.c4 IN ())))<=((CAST(x'3e5e' AS NUMERIC))))) ISNULL));
SELECT rt0.c4, rt0.c3, rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON (((((NULL))=((rt0.c3))))<<((~ (NULL))));
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CAST((((vt0.c0)) BETWEEN (('')) AND ((vt0.c0))) AS TEXT)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CAST((((vt0.c0)) BETWEEN (('')) AND ((vt0.c0))) AS TEXT)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CAST((((vt0.c0)) BETWEEN (('')) AND ((vt0.c0))) AS TEXT)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0, rt0.c4, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c4, rt0.c1;
SELECT ALL vt0.c0, rt0.c4, rt0.c1 FROM rt0, vt0 WHERE ((((((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)), ((x'cd7f992e')>=('')), ((rt0.c1)/(rt0.c1))))<=(((- (rt0.c2)), (rt0.c0 IN ()), rt0.c0 COLLATE NOCASE)))) GROUP BY vt0.c0, rt0.c4, rt0.c1 UNION SELECT ALL vt0.c0, rt0.c4, rt0.c1 FROM rt0, vt0 WHERE ((NOT ((((((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)), ((x'cd7f992e')>=('')), ((rt0.c1)/(rt0.c1))))<=(((- (rt0.c2)), (rt0.c0 IN ()), rt0.c0 COLLATE NOCASE)))))) GROUP BY vt0.c0, rt0.c4, rt0.c1 UNION SELECT vt0.c0, rt0.c4, rt0.c1 FROM rt0, vt0 WHERE ((((((((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)), ((x'cd7f992e')>=('')), ((rt0.c1)/(rt0.c1))))<=(((- (rt0.c2)), (rt0.c0 IN ()), rt0.c0 COLLATE NOCASE)))) ISNULL)) GROUP BY vt0.c0, rt0.c4, rt0.c1;
SELECT ALL vt0.c0, rt0.c4, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c4, rt0.c1;
SELECT ALL rt0.c0, rt0.c4, rt0.c3 FROM rt0 INNER JOIN vt0 ON CAST(0.6412914017941347 COLLATE NOCASE AS REAL) GROUP BY rt0.c0, rt0.c4, rt0.c3;
SELECT rt0.c0, rt0.c4, rt0.c3 FROM rt0 INNER JOIN vt0 ON CAST(0.6412914017941347 COLLATE NOCASE AS REAL) GROUP BY rt0.c0, rt0.c4, rt0.c3 HAVING ((((MIN(rt0.c4))OR(AVG(rt0.c2))))OR(SUM(rt0.c3))) UNION ALL SELECT ALL rt0.c0, rt0.c4, rt0.c3 FROM rt0 INNER JOIN vt0 ON CAST(0.6412914017941347 COLLATE NOCASE AS REAL) GROUP BY rt0.c0, rt0.c4, rt0.c3 HAVING (NOT (((((MIN(rt0.c4))OR(AVG(rt0.c2))))OR(SUM(rt0.c3))))) UNION ALL SELECT ALL rt0.c0, rt0.c4, rt0.c3 FROM rt0 INNER JOIN vt0 ON CAST(0.6412914017941347 COLLATE NOCASE AS REAL) GROUP BY rt0.c0, rt0.c4, rt0.c3 HAVING ((((((MIN(rt0.c4))OR(AVG(rt0.c2))))OR(SUM(rt0.c3)))) ISNULL);
SELECT ALL rt0.c0, rt0.c4, rt0.c3 FROM rt0 INNER JOIN vt0 ON CAST(0.6412914017941347 COLLATE NOCASE AS REAL) GROUP BY rt0.c0, rt0.c4, rt0.c3;
SELECT rt0.c0, rt0.c4, rt0.c3 FROM rt0 INNER JOIN vt0 ON CAST(0.6412914017941347 COLLATE NOCASE AS REAL) GROUP BY rt0.c0, rt0.c4, rt0.c3 HAVING ((((MIN(rt0.c4))OR(AVG(rt0.c2))))OR(SUM(rt0.c3))) UNION ALL SELECT ALL rt0.c0, rt0.c4, rt0.c3 FROM rt0 INNER JOIN vt0 ON CAST(0.6412914017941347 COLLATE NOCASE AS REAL) GROUP BY rt0.c0, rt0.c4, rt0.c3 HAVING (NOT (((((MIN(rt0.c4))OR(AVG(rt0.c2))))OR(SUM(rt0.c3))))) UNION ALL SELECT ALL rt0.c0, rt0.c4, rt0.c3 FROM rt0 INNER JOIN vt0 ON CAST(0.6412914017941347 COLLATE NOCASE AS REAL) GROUP BY rt0.c0, rt0.c4, rt0.c3 HAVING ((((((MIN(rt0.c4))OR(AVG(rt0.c2))))OR(SUM(rt0.c3)))) ISNULL);
SELECT ALL rt0.c0, rt0.c4, rt0.c3 FROM rt0 INNER JOIN vt0 ON CAST(0.6412914017941347 COLLATE NOCASE AS REAL) GROUP BY rt0.c0, rt0.c4, rt0.c3;
SELECT ALL rt0.c1 FROM vt0, rt0;
SELECT rt0.c1 FROM vt0, rt0 WHERE ((((rt0.c4 IN ())) BETWEEN (((rt0.c3) NOT BETWEEN (NULL) AND (rt0.c2))) AND (((rt0.c2) IS FALSE)))) UNION ALL SELECT rt0.c1 FROM vt0, rt0 WHERE ((NOT ((((rt0.c4 IN ())) BETWEEN (((rt0.c3) NOT BETWEEN (NULL) AND (rt0.c2))) AND (((rt0.c2) IS FALSE)))))) UNION ALL SELECT rt0.c1 FROM vt0, rt0 WHERE ((((((rt0.c4 IN ())) BETWEEN (((rt0.c3) NOT BETWEEN (NULL) AND (rt0.c2))) AND (((rt0.c2) IS FALSE)))) ISNULL));
SELECT ALL rt0.c1 FROM vt0, rt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CASE WHEN (vt0.c0 IN ()) THEN vt0.c0 END) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN (vt0.c0 IN ()) THEN vt0.c0 END))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CASE WHEN (vt0.c0 IN ()) THEN vt0.c0 END) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((- (((vt0.c0)<=(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((- (((vt0.c0)<=(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((- (((vt0.c0)<=(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM rt0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM rt0, vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT(((x'')>=(MAX(x'')))) UNION ALL SELECT vt0.c0 FROM rt0, vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(((x'')>=(MAX(x'')))))) UNION ALL SELECT ALL vt0.c0 FROM rt0, vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(((x'')>=(MAX(x''))))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((((rt0.c2)<<(rt0.c2))) ISNULL)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((rt0.c2)<<(rt0.c2))) ISNULL)))) UNION ALL SELECT * FROM rt0 WHERE (((((((rt0.c2)<<(rt0.c2))) ISNULL)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c4, rt0.c2, rt0.c3, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c4, rt0.c2, rt0.c3, rt0.c0 FROM rt0 WHERE ((rt0.c4 COLLATE NOCASE IN ((rt0.c3 IN (rt0.c2))))) UNION SELECT DISTINCT rt0.c4, rt0.c2, rt0.c3, rt0.c0 FROM rt0 WHERE ((NOT ((rt0.c4 COLLATE NOCASE IN ((rt0.c3 IN (rt0.c2))))))) UNION SELECT DISTINCT rt0.c4, rt0.c2, rt0.c3, rt0.c0 FROM rt0 WHERE ((((rt0.c4 COLLATE NOCASE IN ((rt0.c3 IN (rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c2, rt0.c3, rt0.c0 FROM rt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((GLOB(vt0.c0, vt0.c0)) BETWEEN (LIKELIHOOD(DISTINCT vt0.c0, 0.17867500649085843)) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((GLOB(vt0.c0, vt0.c0)) BETWEEN (LIKELIHOOD(DISTINCT vt0.c0, 0.17867500649085843)) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((GLOB(vt0.c0, vt0.c0)) BETWEEN (LIKELIHOOD(DISTINCT vt0.c0, 0.17867500649085843)) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c1 FROM vt0, rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM vt0, rt0 GROUP BY rt0.c1 HAVING (- (GROUP_CONCAT(rt0.c3))) UNION ALL SELECT ALL rt0.c1 FROM vt0, rt0 GROUP BY rt0.c1 HAVING (NOT ((- (GROUP_CONCAT(rt0.c3))))) UNION ALL SELECT rt0.c1 FROM vt0, rt0 GROUP BY rt0.c1 HAVING (((- (GROUP_CONCAT(rt0.c3)))) ISNULL);
SELECT ALL rt0.c1 FROM vt0, rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM vt0, rt0 GROUP BY rt0.c1 HAVING (- (GROUP_CONCAT(rt0.c3))) UNION ALL SELECT ALL rt0.c1 FROM vt0, rt0 GROUP BY rt0.c1 HAVING (NOT ((- (GROUP_CONCAT(rt0.c3))))) UNION ALL SELECT rt0.c1 FROM vt0, rt0 GROUP BY rt0.c1 HAVING (((- (GROUP_CONCAT(rt0.c3)))) ISNULL);
SELECT ALL rt0.c1 FROM vt0, rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c0, rt0.c4, rt0.c2 FROM rt0;
SELECT ALL rt0.c0, rt0.c4, rt0.c2 FROM rt0 WHERE (((((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c1))) NOT BETWEEN ((((rt0.c1))>=((rt0.c4)))) AND ((((rt0.c4, rt0.c2, rt0.c2))>((rt0.c0, rt0.c0, rt0.c4)))))) UNION ALL SELECT rt0.c0, rt0.c4, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c1))) NOT BETWEEN ((((rt0.c1))>=((rt0.c4)))) AND ((((rt0.c4, rt0.c2, rt0.c2))>((rt0.c0, rt0.c0, rt0.c4)))))))) UNION ALL SELECT ALL rt0.c0, rt0.c4, rt0.c2 FROM rt0 WHERE (((((((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c1))) NOT BETWEEN ((((rt0.c1))>=((rt0.c4)))) AND ((((rt0.c4, rt0.c2, rt0.c2))>((rt0.c0, rt0.c0, rt0.c4)))))) ISNULL));
SELECT ALL rt0.c0, rt0.c4, rt0.c2 FROM rt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((vt0.c0 COLLATE BINARY))=(((vt0.c0 IN (vt0.c0)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0 COLLATE BINARY))==(((vt0.c0 IN (vt0.c0)))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((vt0.c0 COLLATE BINARY))=(((vt0.c0 IN (vt0.c0)))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG(MAX(MAX(vt0.c0)))) NOT NULL) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((AVG(MAX(MAX(vt0.c0)))) NOT NULL))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((AVG(MAX(MAX(vt0.c0)))) NOT NULL)) ISNULL);
SELECT * FROM vt0, rt0;
SELECT * FROM vt0, rt0 WHERE (rtreenode(x'c1f0', ((vt0.c0)<<(vt0.c0)))) UNION ALL SELECT * FROM vt0, rt0 WHERE ((NOT (rtreenode(x'c1f0', ((vt0.c0)<<(vt0.c0)))))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE (((rtreenode(x'c1f0', ((vt0.c0)<<(vt0.c0)))) ISNULL));
SELECT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (x'4603') UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (x'4603'))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((x'4603') ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0;
SELECT rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0 HAVING TOTAL(CASE WHEN 0.8018811134206125 THEN TOTAL(x'8f54') END) UNION ALL SELECT rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0 HAVING (NOT (TOTAL(CASE WHEN 0.8018811134206125 THEN TOTAL(x'8f54') END))) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0 HAVING ((TOTAL(CASE WHEN 0.8018811134206125 THEN TOTAL(x'8f54') END)) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c0)LIKE(vt0.c0)))OR(((vt0.c0) NOT NULL))))OR('m_G^뫃/屈'))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((((vt0.c0)LIKE(vt0.c0)))OR(((vt0.c0) NOT NULL))))OR('m_G^뫃/屈'))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((((((((vt0.c0)LIKE(vt0.c0)))OR(((vt0.c0) NOT NULL))))OR('m_G^뫃/屈'))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0 NOT INDEXED, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (((CAST(rt0.c1 AS NUMERIC))<>(((rt0.c4) NOT NULL)))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (((CAST(rt0.c1 AS NUMERIC))<>(((rt0.c4) NOT NULL)))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((((CAST(rt0.c1 AS NUMERIC))!=(((rt0.c4) NOT NULL)))) ISNULL));
SELECT DISTINCT * FROM vt0 NOT INDEXED, rt0;
SELECT ALL rt0.c2, rt0.c1, rt0.c4 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, rt0.c4;
SELECT ALL rt0.c2, rt0.c1, rt0.c4 FROM rt0, vt0 WHERE (((CAST(rt0.c2 AS BLOB))>((((0.5446907299534088)) NOT BETWEEN ((NULL)) AND ((rt0.c0)))))) GROUP BY rt0.c2, rt0.c1, rt0.c4 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c4 FROM rt0, vt0 WHERE ((NOT (((CAST(rt0.c2 AS BLOB))>((((0.5446907299534088)) NOT BETWEEN ((NULL)) AND ((rt0.c0)))))))) GROUP BY rt0.c2, rt0.c1, rt0.c4 UNION SELECT rt0.c2, rt0.c1, rt0.c4 FROM rt0, vt0 WHERE (((((CAST(rt0.c2 AS BLOB))>((((0.5446907299534088)) NOT BETWEEN ((NULL)) AND ((rt0.c0)))))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c4;
SELECT ALL rt0.c2, rt0.c1, rt0.c4 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, rt0.c4;
SELECT ALL rt0.c0, rt0.c4, rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c4, rt0.c3, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c4, rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c4, rt0.c3, rt0.c1, rt0.c2 HAVING MIN(MIN(rt0.c1)) UNION ALL SELECT ALL rt0.c0, rt0.c4, rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c4, rt0.c3, rt0.c1, rt0.c2 HAVING (NOT (MIN(MIN(rt0.c1)))) UNION ALL SELECT ALL rt0.c0, rt0.c4, rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c4, rt0.c3, rt0.c1, rt0.c2 HAVING ((MIN(MIN(rt0.c1))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((~ (0.2881445757590405))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((~ (0.2881445757590405))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((~ (0.2881445757590405))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c3, rt0.c4, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c3, rt0.c4, rt0.c2 FROM rt0 WHERE (((((rt0.c4)/(x'8400'))) NOT BETWEEN (0.5761505311588152) AND (((rt0.c4)==(rt0.c1))))) UNION SELECT DISTINCT rt0.c1, rt0.c3, rt0.c4, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c4)/(x'8400'))) NOT BETWEEN (0.5761505311588152) AND (((rt0.c4)==(rt0.c1))))))) UNION SELECT DISTINCT rt0.c1, rt0.c3, rt0.c4, rt0.c2 FROM rt0 WHERE (((((((rt0.c4)/(x'8400'))) NOT BETWEEN (0.5761505311588152) AND (((rt0.c4)=(rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c3, rt0.c4, rt0.c2 FROM rt0;
SELECT ALL rt0.c3, vt0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON ((((rt0.c4) NOTNULL)) NOT BETWEEN (((((((((rt0.c4)AND(rt0.c4)))OR(rt0.c1)))OR(rt0.c3)))AND(rt0.c0))) AND (CASE WHEN NULL THEN rt0.c1 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c4 THEN vt0.c0 ELSE 0x49eefbeb END)) GROUP BY rt0.c3, vt0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c0;
SELECT rt0.c3, vt0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON ((((rt0.c4) NOTNULL)) NOT BETWEEN (((((((((rt0.c4)AND(rt0.c4)))OR(rt0.c1)))OR(rt0.c3)))AND(rt0.c0))) AND (CASE WHEN NULL THEN rt0.c1 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c4 THEN vt0.c0 ELSE 0x49eefbeb END)) WHERE (((((x'7ed7')AND(('-617830847' IN ()))))AND(((vt0.c0) NOTNULL)))) GROUP BY rt0.c3, vt0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c0 UNION SELECT rt0.c3, vt0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON ((((rt0.c4) NOTNULL)) NOT BETWEEN (((((((((rt0.c4)AND(rt0.c4)))OR(rt0.c1)))OR(rt0.c3)))AND(rt0.c0))) AND (CASE WHEN NULL THEN rt0.c1 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c4 THEN vt0.c0 ELSE 0x49eefbeb END)) WHERE ((NOT (((((x'7ed7')AND(('-617830847' IN ()))))AND(((vt0.c0) NOTNULL)))))) GROUP BY rt0.c3, vt0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c0 UNION SELECT rt0.c3, vt0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON ((((rt0.c4) NOTNULL)) NOT BETWEEN (((((((((rt0.c4)AND(rt0.c4)))OR(rt0.c1)))OR(rt0.c3)))AND(rt0.c0))) AND (CASE WHEN NULL THEN rt0.c1 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c4 THEN vt0.c0 ELSE 0x49eefbeb END)) WHERE (((((((x'7ed7')AND(('-617830847' IN ()))))AND(((vt0.c0) NOTNULL)))) ISNULL)) GROUP BY rt0.c3, vt0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c0;
SELECT ALL rt0.c3, vt0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON ((((rt0.c4) NOTNULL)) NOT BETWEEN (((((((((rt0.c4)AND(rt0.c4)))OR(rt0.c1)))OR(rt0.c3)))AND(rt0.c0))) AND (CASE WHEN NULL THEN rt0.c1 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c4 THEN vt0.c0 ELSE 0x49eefbeb END)) GROUP BY rt0.c3, vt0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING x'' UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (x'')) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((x'') ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING x'' UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (x'')) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((x'') ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c4, rt0.c3, rt0.c1 FROM vt0, rt0;
SELECT ALL rt0.c4, rt0.c3, rt0.c1 FROM vt0, rt0 WHERE ((((((((rt0.c1, NULL, rt0.c0))<((rt0.c0, vt0.c0, rt0.c0))))OR((~ (rt0.c2)))))OR(((((rt0.c0)OR(rt0.c3)))AND(rt0.c2))))) UNION ALL SELECT ALL rt0.c4, rt0.c3, rt0.c1 FROM vt0, rt0 WHERE ((NOT ((((((((rt0.c1, NULL, rt0.c0))<((rt0.c0, vt0.c0, rt0.c0))))OR((~ (rt0.c2)))))OR(((((rt0.c0)OR(rt0.c3)))AND(rt0.c2))))))) UNION ALL SELECT rt0.c4, rt0.c3, rt0.c1 FROM vt0, rt0 WHERE ((((((((((rt0.c1, NULL, rt0.c0))<((rt0.c0, vt0.c0, rt0.c0))))OR((~ (rt0.c2)))))OR(((((rt0.c0)OR(rt0.c3)))AND(rt0.c2))))) ISNULL));
SELECT ALL rt0.c4, rt0.c3, rt0.c1 FROM vt0, rt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE ((((((rt0.c1))>=((rt0.c2))))%((rt0.c4 IN ())))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT ((((((rt0.c1))>=((rt0.c2))))%((rt0.c4 IN ())))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((((((((rt0.c1))>=((rt0.c2))))%((rt0.c4 IN ())))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT rt0.c0, rt0.c1, rt0.c3, vt0.c0, rt0.c4, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3, vt0.c0, rt0.c4, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c3, vt0.c0, rt0.c4, rt0.c2 FROM vt0, rt0 WHERE (UPPER(DISTINCT ((((((((vt0.c0)OR(rt0.c2)))OR(rt0.c2)))AND(vt0.c0)))AND(rt0.c1)))) GROUP BY rt0.c0, rt0.c1, rt0.c3, vt0.c0, rt0.c4, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c3, vt0.c0, rt0.c4, rt0.c2 FROM vt0, rt0 WHERE ((NOT (UPPER(DISTINCT ((((((((vt0.c0)OR(rt0.c2)))OR(rt0.c2)))AND(vt0.c0)))AND(rt0.c1)))))) GROUP BY rt0.c0, rt0.c1, rt0.c3, vt0.c0, rt0.c4, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c3, vt0.c0, rt0.c4, rt0.c2 FROM vt0, rt0 WHERE (((UPPER(DISTINCT ((((((((vt0.c0)OR(rt0.c2)))OR(rt0.c2)))AND(vt0.c0)))AND(rt0.c1)))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c3, vt0.c0, rt0.c4, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c3, vt0.c0, rt0.c4, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3, vt0.c0, rt0.c4, rt0.c2;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c0 HAVING GROUP_CONCAT(MIN(vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(MIN(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(MIN(vt0.c0))) ISNULL);
SELECT ALL rt0.c4, rt0.c2, rt0.c3 FROM rt0;
SELECT ALL rt0.c4, rt0.c2, rt0.c3 FROM rt0 WHERE ((((rt0.c0)) BETWEEN ((((rt0.c4)||(x'')))) AND ((((1714559052) NOTNULL))))) UNION ALL SELECT ALL rt0.c4, rt0.c2, rt0.c3 FROM rt0 WHERE ((NOT ((((rt0.c0)) BETWEEN ((((rt0.c4)||(x'')))) AND ((((1714559052) NOTNULL))))))) UNION ALL SELECT ALL rt0.c4, rt0.c2, rt0.c3 FROM rt0 WHERE ((((((rt0.c0)) BETWEEN ((((rt0.c4)||(x'')))) AND ((((1714559052) NOTNULL))))) ISNULL));
SELECT ALL rt0.c4, rt0.c2, rt0.c3 FROM rt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE ((((((rt0.c2)AND(x'7654'))))<((rt0.c2)))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT ((((((rt0.c2)AND(x'7654'))))<((rt0.c2)))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((((((((rt0.c2)AND(x'7654'))))<((rt0.c2)))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT ALL rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((- (rt0.c1))) BETWEEN ('2089928560') AND (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((((- (rt0.c1))) BETWEEN ('2089928560') AND (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))))))) GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((((- (rt0.c1))) BETWEEN ('2089928560') AND (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) ISNULL)) GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c0;
SELECT vt0.c0, rt0.c1, rt0.c0, rt0.c2, rt0.c3, rt0.c4 FROM vt0 FULL OUTER JOIN rt0 ON (((rt0.c4, rt0.c4, rt0.c0)) BETWEEN (((((x'')) BETWEEN ((0.8416131610636558)) AND ((rt0.c1))), UNLIKELY(rt0.c4), ((0.04419210128683815) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) AND ((vt0.c0 COLLATE BINARY, (+ (rt0.c0)), ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c4))))) GROUP BY vt0.c0, rt0.c1, rt0.c0, rt0.c2, rt0.c3, rt0.c4;
SELECT ALL vt0.c0, rt0.c1, rt0.c0, rt0.c2, rt0.c3, rt0.c4 FROM vt0 FULL OUTER JOIN rt0 ON (((rt0.c4, rt0.c4, rt0.c0)) BETWEEN (((((x'')) BETWEEN ((0.8416131610636558)) AND ((rt0.c1))), UNLIKELY(rt0.c4), ((0.04419210128683815) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) AND ((vt0.c0 COLLATE BINARY, (+ (rt0.c0)), ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c4))))) GROUP BY vt0.c0, rt0.c1, rt0.c0, rt0.c2, rt0.c3, rt0.c4 HAVING ((((GROUP_CONCAT(rt0.c2))) NOT BETWEEN ((MAX(COUNT(rt0.c3)))) AND ((vt0.c0))) IN ()) UNION ALL SELECT ALL vt0.c0, rt0.c1, rt0.c0, rt0.c2, rt0.c3, rt0.c4 FROM vt0 FULL OUTER JOIN rt0 ON (((rt0.c4, rt0.c4, rt0.c0)) BETWEEN (((((x'')) BETWEEN ((0.8416131610636558)) AND ((rt0.c1))), UNLIKELY(rt0.c4), ((0.04419210128683815) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) AND ((vt0.c0 COLLATE BINARY, (+ (rt0.c0)), ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c4))))) GROUP BY vt0.c0, rt0.c1, rt0.c0, rt0.c2, rt0.c3, rt0.c4 HAVING (NOT (((((GROUP_CONCAT(rt0.c2))) NOT BETWEEN ((MAX(COUNT(rt0.c3)))) AND ((vt0.c0))) IN ()))) UNION ALL SELECT ALL vt0.c0, rt0.c1, rt0.c0, rt0.c2, rt0.c3, rt0.c4 FROM vt0 FULL OUTER JOIN rt0 ON (((rt0.c4, rt0.c4, rt0.c0)) BETWEEN (((((x'')) BETWEEN ((0.8416131610636558)) AND ((rt0.c1))), UNLIKELY(rt0.c4), ((0.04419210128683815) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) AND ((vt0.c0 COLLATE BINARY, (+ (rt0.c0)), ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c4))))) GROUP BY vt0.c0, rt0.c1, rt0.c0, rt0.c2, rt0.c3, rt0.c4 HAVING ((((((GROUP_CONCAT(rt0.c2))) NOT BETWEEN ((MAX(COUNT(rt0.c3)))) AND ((vt0.c0))) IN ())) ISNULL);
SELECT vt0.c0, rt0.c1, rt0.c0, rt0.c2, rt0.c3, rt0.c4 FROM vt0 FULL OUTER JOIN rt0 ON (((rt0.c4, rt0.c4, rt0.c0)) BETWEEN (((((x'')) BETWEEN ((0.8416131610636558)) AND ((rt0.c1))), UNLIKELY(rt0.c4), ((0.04419210128683815) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) AND ((vt0.c0 COLLATE BINARY, (+ (rt0.c0)), ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c4))))) GROUP BY vt0.c0, rt0.c1, rt0.c0, rt0.c2, rt0.c3, rt0.c4;
SELECT ALL vt0.c0, rt0.c1, rt0.c0, rt0.c2, rt0.c3, rt0.c4 FROM vt0 FULL OUTER JOIN rt0 ON (((rt0.c4, rt0.c4, rt0.c0)) BETWEEN (((((x'')) BETWEEN ((0.8416131610636558)) AND ((rt0.c1))), UNLIKELY(rt0.c4), ((0.04419210128683815) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) AND ((vt0.c0 COLLATE BINARY, (+ (rt0.c0)), ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c4))))) GROUP BY vt0.c0, rt0.c1, rt0.c0, rt0.c2, rt0.c3, rt0.c4 HAVING ((((GROUP_CONCAT(rt0.c2))) NOT BETWEEN ((MAX(COUNT(rt0.c3)))) AND ((vt0.c0))) IN ()) UNION ALL SELECT ALL vt0.c0, rt0.c1, rt0.c0, rt0.c2, rt0.c3, rt0.c4 FROM vt0 FULL OUTER JOIN rt0 ON (((rt0.c4, rt0.c4, rt0.c0)) BETWEEN (((((x'')) BETWEEN ((0.8416131610636558)) AND ((rt0.c1))), UNLIKELY(rt0.c4), ((0.04419210128683815) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) AND ((vt0.c0 COLLATE BINARY, (+ (rt0.c0)), ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c4))))) GROUP BY vt0.c0, rt0.c1, rt0.c0, rt0.c2, rt0.c3, rt0.c4 HAVING (NOT (((((GROUP_CONCAT(rt0.c2))) NOT BETWEEN ((MAX(COUNT(rt0.c3)))) AND ((vt0.c0))) IN ()))) UNION ALL SELECT ALL vt0.c0, rt0.c1, rt0.c0, rt0.c2, rt0.c3, rt0.c4 FROM vt0 FULL OUTER JOIN rt0 ON (((rt0.c4, rt0.c4, rt0.c0)) BETWEEN (((((x'')) BETWEEN ((0.8416131610636558)) AND ((rt0.c1))), UNLIKELY(rt0.c4), ((0.04419210128683815) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) AND ((vt0.c0 COLLATE BINARY, (+ (rt0.c0)), ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c4))))) GROUP BY vt0.c0, rt0.c1, rt0.c0, rt0.c2, rt0.c3, rt0.c4 HAVING ((((((GROUP_CONCAT(rt0.c2))) NOT BETWEEN ((MAX(COUNT(rt0.c3)))) AND ((vt0.c0))) IN ())) ISNULL);
SELECT vt0.c0, rt0.c1, rt0.c0, rt0.c2, rt0.c3, rt0.c4 FROM vt0 FULL OUTER JOIN rt0 ON (((rt0.c4, rt0.c4, rt0.c0)) BETWEEN (((((x'')) BETWEEN ((0.8416131610636558)) AND ((rt0.c1))), UNLIKELY(rt0.c4), ((0.04419210128683815) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) AND ((vt0.c0 COLLATE BINARY, (+ (rt0.c0)), ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c4))))) GROUP BY vt0.c0, rt0.c1, rt0.c0, rt0.c2, rt0.c3, rt0.c4;
SELECT SUM((((vt0.c0)/(vt0.c0)) IN ())) FROM vt0;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0) NOT NULL) AS NUMERIC)) UNION ALL SELECT * FROM vt0 WHERE ((NOT (CAST(((vt0.c0) NOT NULL) AS NUMERIC)))) UNION ALL SELECT ALL * FROM vt0 WHERE (((CAST(((vt0.c0) NOT NULL) AS NUMERIC)) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CAST(vt0.c0 COLLATE BINARY AS TEXT)) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (CAST(vt0.c0 COLLATE BINARY AS TEXT)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CAST(vt0.c0 COLLATE BINARY AS TEXT)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL rt0.c2, rt0.c0, rt0.c4, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c4, rt0.c1, rt0.c3;
SELECT ALL rt0.c2, rt0.c0, rt0.c4, rt0.c1, rt0.c3 FROM rt0 WHERE ((- (rt0.c3)) COLLATE BINARY COLLATE NOCASE) GROUP BY rt0.c2, rt0.c0, rt0.c4, rt0.c1, rt0.c3 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c4, rt0.c1, rt0.c3 FROM rt0 WHERE ((NOT ((- (rt0.c3)) COLLATE BINARY COLLATE NOCASE))) GROUP BY rt0.c2, rt0.c0, rt0.c4, rt0.c1, rt0.c3 UNION SELECT rt0.c2, rt0.c0, rt0.c4, rt0.c1, rt0.c3 FROM rt0 WHERE ((((- (rt0.c3)) COLLATE BINARY COLLATE NOCASE) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c4, rt0.c1, rt0.c3;
SELECT ALL rt0.c2, rt0.c0, rt0.c4, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c4, rt0.c1, rt0.c3;
SELECT ALL rt0.c1, rt0.c4, vt0.c0, rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c4, vt0.c0, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c4, vt0.c0, rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c4, vt0.c0, rt0.c0, rt0.c2 HAVING ((MAX(AVG(rt0.c2)))IS NOT(((SUM(TOTAL(TOTAL(rt0.c2)))) ISNULL))) UNION ALL SELECT rt0.c1, rt0.c4, vt0.c0, rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c4, vt0.c0, rt0.c0, rt0.c2 HAVING (NOT (((MAX(AVG(rt0.c2)))IS NOT(((SUM(TOTAL(TOTAL(rt0.c2)))) ISNULL))))) UNION ALL SELECT ALL rt0.c1, rt0.c4, vt0.c0, rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c4, vt0.c0, rt0.c0, rt0.c2 HAVING ((((MAX(AVG(rt0.c2)))IS NOT(((SUM(TOTAL(TOTAL(rt0.c2)))) ISNULL)))) ISNULL);
SELECT TOTAL(LIKELIHOOD(((0X3333e4f9) NOT BETWEEN (rt0.c1) AND (NULL)), 0.39572030196826935)) FROM rt0;
SELECT ALL rt0.c1, rt0.c0, vt0.c0, rt0.c3, rt0.c4, rt0.c2 FROM rt0, vt0;
SELECT ALL rt0.c1, rt0.c0, vt0.c0, rt0.c3, rt0.c4, rt0.c2 FROM rt0, vt0 WHERE (rt0.c4) UNION ALL SELECT rt0.c1, rt0.c0, vt0.c0, rt0.c3, rt0.c4, rt0.c2 FROM rt0, vt0 WHERE ((NOT (rt0.c4))) UNION ALL SELECT ALL rt0.c1, rt0.c0, vt0.c0, rt0.c3, rt0.c4, rt0.c2 FROM rt0, vt0 WHERE (((rt0.c4) ISNULL));
SELECT ALL rt0.c1, rt0.c0, vt0.c0, rt0.c3, rt0.c4, rt0.c2 FROM rt0, vt0;
SELECT DISTINCT rt0.c4, rt0.c2, rt0.c3 FROM vt0, rt0;
SELECT DISTINCT rt0.c4, rt0.c2, rt0.c3 FROM vt0, rt0 WHERE (NULLIF(CAST(rt0.c3 AS INTEGER), ((((NULL)OR(vt0.c0)))OR(rt0.c3)))) UNION SELECT DISTINCT rt0.c4, rt0.c2, rt0.c3 FROM vt0, rt0 WHERE ((NOT (NULLIF(CAST(rt0.c3 AS INTEGER), ((((NULL)OR(vt0.c0)))OR(rt0.c3)))))) UNION SELECT DISTINCT rt0.c4, rt0.c2, rt0.c3 FROM vt0, rt0 WHERE (((NULLIF(CAST(rt0.c3 AS INTEGER), ((((NULL)OR(vt0.c0)))OR(rt0.c3)))) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c2, rt0.c3 FROM vt0, rt0;
SELECT ALL rt0.c3, rt0.c1, rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c4, rt0.c0;
SELECT rt0.c3, rt0.c1, rt0.c4, rt0.c0 FROM rt0 WHERE (((((((((NULLIF(DISTINCT rt0.c0, rt0.c2))AND(((rt0.c0) NOT NULL))))AND(((rt0.c3) IS TRUE))))AND((((rt0.c4))>=((rt0.c2))))))AND(CAST(rt0.c4 AS BLOB)))) GROUP BY rt0.c3, rt0.c1, rt0.c4, rt0.c0 UNION SELECT ALL rt0.c3, rt0.c1, rt0.c4, rt0.c0 FROM rt0 WHERE ((NOT (((((((((NULLIF(DISTINCT rt0.c0, rt0.c2))AND(((rt0.c0) NOT NULL))))AND(((rt0.c3) IS TRUE))))AND((((rt0.c4))>=((rt0.c2))))))AND(CAST(rt0.c4 AS BLOB)))))) GROUP BY rt0.c3, rt0.c1, rt0.c4, rt0.c0 UNION SELECT ALL rt0.c3, rt0.c1, rt0.c4, rt0.c0 FROM rt0 WHERE (((((((((((NULLIF(DISTINCT rt0.c0, rt0.c2))AND(((rt0.c0) NOT NULL))))AND(((rt0.c3) IS TRUE))))AND((((rt0.c4))>=((rt0.c2))))))AND(CAST(rt0.c4 AS BLOB)))) ISNULL)) GROUP BY rt0.c3, rt0.c1, rt0.c4, rt0.c0;
SELECT ALL rt0.c3, rt0.c1, rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c4, rt0.c0;
SELECT ALL rt0.c4, rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c3, rt0.c2, rt0.c1;
SELECT ALL rt0.c4, rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c3, rt0.c2, rt0.c1 HAVING COUNT(UNLIKELY(MAX(NULL))) UNION ALL SELECT ALL rt0.c4, rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c3, rt0.c2, rt0.c1 HAVING (NOT (COUNT(UNLIKELY(MAX(NULL))))) UNION ALL SELECT rt0.c4, rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c3, rt0.c2, rt0.c1 HAVING ((COUNT(UNLIKELY(MAX(NULL)))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((TYPEOF(DISTINCT vt0.c0), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, json_array_length(vt0.c0, vt0.c0))) AND (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), (vt0.c0 IN ()))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((TYPEOF(DISTINCT vt0.c0), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, json_array_length(vt0.c0, vt0.c0))) AND (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), (vt0.c0 IN ()))))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((TYPEOF(DISTINCT vt0.c0), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, json_array_length(vt0.c0, vt0.c0))) AND (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), (vt0.c0 IN ()))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (((((rt0.c1)!=(rt0.c4)))/(((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (((((rt0.c1)!=(rt0.c4)))/(((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((((((rt0.c1)<>(rt0.c4)))/(((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((CAST(vt0.c0 AS REAL))&((x'' IN (vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((CAST(vt0.c0 AS REAL))&((x'' IN (vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((CAST(vt0.c0 AS REAL))&((x'' IN (vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c2, rt0.c4, rt0.c3 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c4, rt0.c3;
SELECT rt0.c2, rt0.c4, rt0.c3 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c4, rt0.c3 HAVING ((((((AVG(rt0.c4))IS NOT(rt0.c3)))OR(MIN(rt0.c0))))OR(COUNT(*))) UNION ALL SELECT rt0.c2, rt0.c4, rt0.c3 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c4, rt0.c3 HAVING (NOT (((((((AVG(rt0.c4))IS NOT(rt0.c3)))OR(MIN(rt0.c0))))OR(COUNT(*))))) UNION ALL SELECT rt0.c2, rt0.c4, rt0.c3 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c4, rt0.c3 HAVING ((((((((AVG(rt0.c4))IS NOT(rt0.c3)))OR(MIN(rt0.c0))))OR(COUNT(*)))) ISNULL);
SELECT rt0.c2, rt0.c4, rt0.c3 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c4, rt0.c3;
SELECT rt0.c2, rt0.c4, rt0.c3 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c4, rt0.c3 HAVING ((((((AVG(rt0.c4))IS NOT(rt0.c3)))OR(MIN(rt0.c0))))OR(COUNT(*))) UNION ALL SELECT rt0.c2, rt0.c4, rt0.c3 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c4, rt0.c3 HAVING (NOT (((((((AVG(rt0.c4))IS NOT(rt0.c3)))OR(MIN(rt0.c0))))OR(COUNT(*))))) UNION ALL SELECT rt0.c2, rt0.c4, rt0.c3 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c4, rt0.c3 HAVING ((((((((AVG(rt0.c4))IS NOT(rt0.c3)))OR(MIN(rt0.c0))))OR(COUNT(*)))) ISNULL);
SELECT rt0.c2, rt0.c4, rt0.c3 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c4, rt0.c3;
SELECT ALL MAX(((((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c0))) NOT BETWEEN ((rt0.c4 IN (rt0.c4))) AND (rt0.c0 COLLATE RTRIM))) FROM rt0 ORDER BY CASE (- (rt0.c2))  WHEN (((rt0.c3, rt0.c1, rt0.c4))<=((rt0.c0, rt0.c0, rt0.c3))) THEN (((rt0.c4)) BETWEEN ((rt0.c1)) AND ((NULL))) END DESC, ')X[~A7M)' DESC  NULLS LAST;
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((- ((vt0.c0 IN ())))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((- ((vt0.c0 IN ())))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((- ((vt0.c0 IN ())))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c4)/(rt0.c0)))<=(((rt0.c0) NOT NULL)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c4)/(rt0.c0)))<=(((rt0.c0) NOT NULL)))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c4)/(rt0.c0)))<=(((rt0.c0) NOT NULL)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2, rt0.c0, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, rt0.c4;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, rt0.c4 FROM rt0 WHERE (((((((('1936925991'))!=((rt0.c1))))OR(NULL)))AND(((((((((rt0.c2)AND(rt0.c4)))OR(rt0.c4)))AND(rt0.c3)))OR(0.13700757833516153))))) GROUP BY rt0.c2, rt0.c0, rt0.c1, rt0.c4 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1, rt0.c4 FROM rt0 WHERE ((NOT (((((((('1936925991'))<>((rt0.c1))))OR(NULL)))AND(((((((((rt0.c2)AND(rt0.c4)))OR(rt0.c4)))AND(rt0.c3)))OR(0.13700757833516153))))))) GROUP BY rt0.c2, rt0.c0, rt0.c1, rt0.c4 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1, rt0.c4 FROM rt0 WHERE (((((((((('1936925991'))<>((rt0.c1))))OR(NULL)))AND(((((((((rt0.c2)AND(rt0.c4)))OR(rt0.c4)))AND(rt0.c3)))OR(0.13700757833516153))))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1, rt0.c4;
SELECT rt0.c2, rt0.c0, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, rt0.c4;
SELECT ALL rt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2, vt0.c0, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2, vt0.c0, rt0.c0 HAVING (((((rt0.c3))>=((GROUP_CONCAT(AVG(AVG(rt0.c4))))))) NOT BETWEEN (MAX(0.16963930993894338)) AND (((((rt0.c1)AND(vt0.c0)))OR(MAX(rt0.c2))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2, vt0.c0, rt0.c0 HAVING (NOT ((((((rt0.c3))>=((GROUP_CONCAT(AVG(AVG(rt0.c4))))))) NOT BETWEEN (MAX(0.16963930993894338)) AND (((((rt0.c1)AND(vt0.c0)))OR(MAX(rt0.c2))))))) UNION ALL SELECT rt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2, vt0.c0, rt0.c0 HAVING (((((((rt0.c3))>=((GROUP_CONCAT(AVG(AVG(rt0.c4))))))) NOT BETWEEN (MAX(0.16963930993894338)) AND (((((rt0.c1)AND(vt0.c0)))OR(MAX(rt0.c2)))))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ())))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(CAST(vt0.c0 AS BLOB))))AND((((vt0.c0))>((vt0.c0)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(CAST(vt0.c0 AS BLOB))))AND((((vt0.c0))>((vt0.c0)))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(CAST(vt0.c0 AS BLOB))))AND((((vt0.c0))>((vt0.c0)))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT rt0.c0, vt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, rt0.c2;
SELECT ALL rt0.c0, vt0.c0, rt0.c2 FROM vt0, rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1))) BETWEEN ((rt0.c2 IN ())) AND (x''))) GROUP BY rt0.c0, vt0.c0, rt0.c2 UNION SELECT rt0.c0, vt0.c0, rt0.c2 FROM vt0, rt0 WHERE ((NOT (((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1))) BETWEEN ((rt0.c2 IN ())) AND (x''))))) GROUP BY rt0.c0, vt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, vt0.c0, rt0.c2 FROM vt0, rt0 WHERE (((((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1))) BETWEEN ((rt0.c2 IN ())) AND (x''))) ISNULL)) GROUP BY rt0.c0, vt0.c0, rt0.c2;
SELECT rt0.c0, vt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c2, rt0.c4, rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2, rt0.c4, rt0.c0, vt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c4, rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2, rt0.c4, rt0.c0, vt0.c0 HAVING SUM(rt0.c2) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c4, rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2, rt0.c4, rt0.c0, vt0.c0 HAVING (NOT (SUM(rt0.c2))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c4, rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2, rt0.c4, rt0.c0, vt0.c0 HAVING ((SUM(rt0.c2)) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c4, rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2, rt0.c4, rt0.c0, vt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c4, rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2, rt0.c4, rt0.c0, vt0.c0 HAVING SUM(rt0.c2) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c4, rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2, rt0.c4, rt0.c0, vt0.c0 HAVING (NOT (SUM(rt0.c2))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c4, rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2, rt0.c4, rt0.c0, vt0.c0 HAVING ((SUM(rt0.c2)) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c4, rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2, rt0.c4, rt0.c0, vt0.c0;
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON (+ (((rt0.c2)<(rt0.c4))));
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON (+ (((rt0.c2)<(rt0.c4)))) WHERE (((rt0.c4)=(rt0.c3)) COLLATE BINARY) UNION ALL SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON (+ (((rt0.c2)<(rt0.c4)))) WHERE ((NOT (((rt0.c4)=(rt0.c3)) COLLATE BINARY))) UNION ALL SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON (+ (((rt0.c2)<(rt0.c4)))) WHERE (((((rt0.c4)==(rt0.c3)) COLLATE BINARY) ISNULL));
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON (+ (((rt0.c2)<(rt0.c4))));
SELECT DISTINCT rt0.c2, vt0.c0, rt0.c4 FROM vt0, rt0;
SELECT DISTINCT rt0.c2, vt0.c0, rt0.c4 FROM vt0, rt0 WHERE (0xffffffffca1e81b7 COLLATE RTRIM) UNION SELECT DISTINCT rt0.c2, vt0.c0, rt0.c4 FROM vt0, rt0 WHERE ((NOT (0xffffffffca1e81b7 COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c2, vt0.c0, rt0.c4 FROM vt0, rt0 WHERE (((0Xffffffffca1e81b7 COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt0.c2, vt0.c0, rt0.c4 FROM vt0, rt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0)*(vt0.c0)))>>(CAST(vt0.c0 AS TEXT)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0)*(vt0.c0)))>>(CAST(vt0.c0 AS TEXT)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((((vt0.c0)*(vt0.c0)))>>(CAST(vt0.c0 AS TEXT)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0 HAVING vt0.c0 UNION ALL SELECT ALL rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0 HAVING vt0.c0 UNION ALL SELECT ALL rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c4, rt0.c3, rt0.c0 FROM rt0, vt0;
SELECT ALL rt0.c1, rt0.c2, rt0.c4, rt0.c3, rt0.c0 FROM rt0, vt0 WHERE (((((((rt0.c0)AND(rt0.c2)))AND(rt0.c3)))|(rt0.c0))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c4, rt0.c3, rt0.c0 FROM rt0, vt0 WHERE ((NOT (((((((rt0.c0)AND(rt0.c2)))AND(rt0.c3)))|(rt0.c0))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c4, rt0.c3, rt0.c0 FROM rt0, vt0 WHERE (((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c3)))|(rt0.c0))) ISNULL));
SELECT ALL rt0.c1, rt0.c2, rt0.c4, rt0.c3, rt0.c0 FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (CASE vt0.c0  WHEN (rt0.c3 IN ()) THEN ((rt0.c0)<(vt0.c0)) ELSE ((rt0.c3) BETWEEN (rt0.c0) AND (vt0.c0)) END) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (CASE vt0.c0  WHEN (rt0.c3 IN ()) THEN ((rt0.c0)<(vt0.c0)) ELSE ((rt0.c3) BETWEEN (rt0.c0) AND (vt0.c0)) END))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((CASE vt0.c0  WHEN (rt0.c3 IN ()) THEN ((rt0.c0)<(vt0.c0)) ELSE ((rt0.c3) BETWEEN (rt0.c0) AND (vt0.c0)) END) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT rt0.c2, rt0.c4, rt0.c3 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c4, rt0.c3;
SELECT rt0.c2, rt0.c4, rt0.c3 FROM vt0, rt0 WHERE (rt0.c4) GROUP BY rt0.c2, rt0.c4, rt0.c3 UNION SELECT rt0.c2, rt0.c4, rt0.c3 FROM vt0, rt0 WHERE ((NOT (rt0.c4))) GROUP BY rt0.c2, rt0.c4, rt0.c3 UNION SELECT rt0.c2, rt0.c4, rt0.c3 FROM vt0, rt0 WHERE (((rt0.c4) ISNULL)) GROUP BY rt0.c2, rt0.c4, rt0.c3;
SELECT rt0.c2, rt0.c4, rt0.c3 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c4, rt0.c3;
SELECT ALL rt0.c4, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c3;
SELECT ALL rt0.c4, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c3 HAVING LOWER(TOTAL(rt0.c4)) UNION ALL SELECT ALL rt0.c4, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c3 HAVING (NOT (LOWER(TOTAL(rt0.c4)))) UNION ALL SELECT rt0.c4, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c3 HAVING ((LOWER(TOTAL(rt0.c4))) ISNULL);
SELECT ALL rt0.c4, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c3;
SELECT ALL rt0.c4, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c3 HAVING LOWER(TOTAL(rt0.c4)) UNION ALL SELECT ALL rt0.c4, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c3 HAVING (NOT (LOWER(TOTAL(rt0.c4)))) UNION ALL SELECT rt0.c4, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c3 HAVING ((LOWER(TOTAL(rt0.c4))) ISNULL);
SELECT ALL rt0.c4, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c3;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((rt0.c0) BETWEEN (NULL) AND (rt0.c0)) COLLATE RTRIM) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((rt0.c0) BETWEEN (NULL) AND (rt0.c0)) COLLATE RTRIM))) UNION ALL SELECT * FROM rt0 WHERE (((((rt0.c0) BETWEEN (NULL) AND (rt0.c0)) COLLATE RTRIM) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c3, rt0.c4 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c3, rt0.c4 FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN NULL END) NOTNULL)) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c3, rt0.c4 FROM rt0 WHERE ((NOT (((CASE WHEN rt0.c1 THEN NULL END) NOTNULL)))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c3, rt0.c4 FROM rt0 NOT INDEXED WHERE (((((CASE WHEN rt0.c1 THEN NULL END) NOTNULL)) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c3, rt0.c4 FROM rt0;
SELECT rt0.c1, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c4;
SELECT rt0.c1, rt0.c3, rt0.c4 FROM rt0 WHERE ((NULL COLLATE RTRIM IN ())) GROUP BY rt0.c1, rt0.c3, rt0.c4 UNION SELECT rt0.c1, rt0.c3, rt0.c4 FROM rt0 WHERE ((NOT ((NULL COLLATE RTRIM IN ())))) GROUP BY rt0.c1, rt0.c3, rt0.c4 UNION SELECT rt0.c1, rt0.c3, rt0.c4 FROM rt0 WHERE ((((NULL COLLATE RTRIM IN ())) ISNULL)) GROUP BY rt0.c1, rt0.c3, rt0.c4;
SELECT rt0.c1, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c4;
SELECT rt0.c3, rt0.c4, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c3, rt0.c4, rt0.c0;
SELECT ALL rt0.c3, rt0.c4, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c3, rt0.c4, rt0.c0 HAVING ((AVG(rt0.c2))<<(CAST(GROUP_CONCAT(GROUP_CONCAT(SUM(rt0.c0))) AS BLOB))) UNION ALL SELECT rt0.c3, rt0.c4, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c3, rt0.c4, rt0.c0 HAVING (NOT (((AVG(rt0.c2))<<(CAST(GROUP_CONCAT(GROUP_CONCAT(SUM(rt0.c0))) AS BLOB))))) UNION ALL SELECT ALL rt0.c3, rt0.c4, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c3, rt0.c4, rt0.c0 HAVING ((((AVG(rt0.c2))<<(CAST(GROUP_CONCAT(GROUP_CONCAT(SUM(rt0.c0))) AS BLOB)))) ISNULL);
SELECT * FROM rt0, vt0;
SELECT * FROM rt0, vt0 WHERE (CAST((((rt0.c2))<=((rt0.c3))) AS BLOB)) UNION ALL SELECT * FROM rt0, vt0 WHERE ((NOT (CAST((((rt0.c2))<=((rt0.c3))) AS BLOB)))) UNION ALL SELECT * FROM rt0, vt0 WHERE (((CAST((((rt0.c2))<=((rt0.c3))) AS BLOB)) ISNULL));
SELECT * FROM rt0, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0)LIKE(vt0.c0)))) AND ((((vt0.c0)/(vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN ((((vt0.c0)LIKE(vt0.c0)))) AND ((((vt0.c0)/(vt0.c0)))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((((vt0.c0)LIKE(vt0.c0)))) AND ((((vt0.c0)/(vt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT rt0.c3, rt0.c0, rt0.c1 FROM rt0 CROSS JOIN vt0 ON CAST(DATE(vt0.c0, 0.056037732416093, vt0.c0) AS TEXT) GROUP BY rt0.c3, rt0.c0, rt0.c1;
SELECT ALL rt0.c3, rt0.c0, rt0.c1 FROM rt0 CROSS JOIN vt0 ON CAST(DATE(vt0.c0, 0.056037732416093, vt0.c0) AS TEXT) WHERE (CAST(GLOB(rt0.c2, rt0.c1) AS TEXT)) GROUP BY rt0.c3, rt0.c0, rt0.c1 UNION SELECT rt0.c3, rt0.c0, rt0.c1 FROM rt0 CROSS JOIN vt0 ON CAST(DATE(vt0.c0, 0.056037732416093, vt0.c0) AS TEXT) WHERE ((NOT (CAST(GLOB(rt0.c2, rt0.c1) AS TEXT)))) GROUP BY rt0.c3, rt0.c0, rt0.c1 UNION SELECT rt0.c3, rt0.c0, rt0.c1 FROM rt0 CROSS JOIN vt0 ON CAST(DATE(vt0.c0, 0.056037732416093, vt0.c0) AS TEXT) WHERE (((CAST(GLOB(rt0.c2, rt0.c1) AS TEXT)) ISNULL)) GROUP BY rt0.c3, rt0.c0, rt0.c1;
SELECT rt0.c3, rt0.c0, rt0.c1 FROM rt0 CROSS JOIN vt0 ON CAST(DATE(vt0.c0, 0.056037732416093, vt0.c0) AS TEXT) GROUP BY rt0.c3, rt0.c0, rt0.c1;
SELECT rt0.c1, vt0.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON ((((vt0.c0) ISNULL)) NOT BETWEEN (rt0.c4) AND ((+ (rt0.c4)))) GROUP BY rt0.c1, vt0.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, vt0.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON ((((vt0.c0) ISNULL)) NOT BETWEEN (rt0.c4) AND ((+ (rt0.c4)))) GROUP BY rt0.c1, vt0.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c0 HAVING rt0.c2 UNION ALL SELECT ALL rt0.c1, vt0.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON ((((vt0.c0) ISNULL)) NOT BETWEEN (rt0.c4) AND ((+ (rt0.c4)))) GROUP BY rt0.c1, vt0.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c0 HAVING (NOT (rt0.c2)) UNION ALL SELECT ALL rt0.c1, vt0.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON ((((vt0.c0) ISNULL)) NOT BETWEEN (rt0.c4) AND ((+ (rt0.c4)))) GROUP BY rt0.c1, vt0.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c0 HAVING ((rt0.c2) ISNULL);
SELECT rt0.c1, vt0.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON ((((vt0.c0) ISNULL)) NOT BETWEEN (rt0.c4) AND ((+ (rt0.c4)))) GROUP BY rt0.c1, vt0.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, vt0.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON ((((vt0.c0) ISNULL)) NOT BETWEEN (rt0.c4) AND ((+ (rt0.c4)))) GROUP BY rt0.c1, vt0.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c0 HAVING rt0.c2 UNION ALL SELECT ALL rt0.c1, vt0.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON ((((vt0.c0) ISNULL)) NOT BETWEEN (rt0.c4) AND ((+ (rt0.c4)))) GROUP BY rt0.c1, vt0.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c0 HAVING (NOT (rt0.c2)) UNION ALL SELECT ALL rt0.c1, vt0.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON ((((vt0.c0) ISNULL)) NOT BETWEEN (rt0.c4) AND ((+ (rt0.c4)))) GROUP BY rt0.c1, vt0.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c0 HAVING ((rt0.c2) ISNULL);
SELECT rt0.c1, vt0.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON ((((vt0.c0) ISNULL)) NOT BETWEEN (rt0.c4) AND ((+ (rt0.c4)))) GROUP BY rt0.c1, vt0.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, vt0.c0, rt0.c3, rt0.c4 FROM rt0, vt0;
SELECT rt0.c1, rt0.c2, vt0.c0, rt0.c3, rt0.c4 FROM rt0, vt0 WHERE (((rt0.c0)=(rt0.c0))) UNION ALL SELECT rt0.c1, rt0.c2, vt0.c0, rt0.c3, rt0.c4 FROM rt0, vt0 NOT INDEXED WHERE ((NOT (((rt0.c0)=(rt0.c0))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, vt0.c0, rt0.c3, rt0.c4 FROM rt0, vt0 WHERE (((((rt0.c0)=(rt0.c0))) ISNULL));
SELECT ALL rt0.c1, rt0.c2, vt0.c0, rt0.c3, rt0.c4 FROM rt0, vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((TIME(vt0.c0, vt0.c0, vt0.c0))%(IFNULL(DISTINCT vt0.c0, vt0.c0)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((TIME(vt0.c0, vt0.c0, vt0.c0))%(IFNULL(DISTINCT vt0.c0, vt0.c0)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 NOT INDEXED WHERE (((((TIME(vt0.c0, vt0.c0, vt0.c0))%(IFNULL(DISTINCT vt0.c0, vt0.c0)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT rt0.c0, vt0.c0, rt0.c1, rt0.c3 FROM vt0 INNER JOIN rt0 ON CASE rt0.c3 COLLATE RTRIM  WHEN (vt0.c0 IN ()) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)) WHEN ((rt0.c0) NOT NULL) THEN TRIM(DISTINCT rt0.c1, rt0.c2) WHEN (~ (rt0.c3)) THEN ABS(rt0.c1) WHEN ((rt0.c1) IS TRUE) THEN ((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c2)) WHEN '673922414' THEN ((rt0.c3)OR(rt0.c0)) END GROUP BY rt0.c0, vt0.c0, rt0.c1, rt0.c3;
SELECT rt0.c0, vt0.c0, rt0.c1, rt0.c3 FROM vt0 INNER JOIN rt0 ON CASE rt0.c3 COLLATE RTRIM  WHEN (vt0.c0 IN ()) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)) WHEN ((rt0.c0) NOT NULL) THEN TRIM(DISTINCT rt0.c1, rt0.c2) WHEN (~ (rt0.c3)) THEN ABS(rt0.c1) WHEN ((rt0.c1) IS TRUE) THEN ((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c2)) WHEN '673922414' THEN ((rt0.c3)OR(rt0.c0)) END WHERE (CASE WHEN CAST(vt0.c0 AS BLOB) THEN ((rt0.c3)<>(rt0.c4)) ELSE rt0.c3 END) GROUP BY rt0.c0, vt0.c0, rt0.c1, rt0.c3 UNION SELECT ALL rt0.c0, vt0.c0, rt0.c1, rt0.c3 FROM vt0 INNER JOIN rt0 ON CASE rt0.c3 COLLATE RTRIM  WHEN (vt0.c0 IN ()) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)) WHEN ((rt0.c0) NOT NULL) THEN TRIM(DISTINCT rt0.c1, rt0.c2) WHEN (~ (rt0.c3)) THEN ABS(rt0.c1) WHEN ((rt0.c1) IS TRUE) THEN ((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c2)) WHEN '673922414' THEN ((rt0.c3)OR(rt0.c0)) END WHERE ((NOT (CASE WHEN CAST(vt0.c0 AS BLOB) THEN ((rt0.c3)!=(rt0.c4)) ELSE rt0.c3 END))) GROUP BY rt0.c0, vt0.c0, rt0.c1, rt0.c3 UNION SELECT rt0.c0, vt0.c0, rt0.c1, rt0.c3 FROM vt0 INNER JOIN rt0 ON CASE rt0.c3 COLLATE RTRIM  WHEN (vt0.c0 IN ()) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)) WHEN ((rt0.c0) NOT NULL) THEN TRIM(DISTINCT rt0.c1, rt0.c2) WHEN (~ (rt0.c3)) THEN ABS(rt0.c1) WHEN ((rt0.c1) IS TRUE) THEN ((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c2)) WHEN '673922414' THEN ((rt0.c3)OR(rt0.c0)) END WHERE (((CASE WHEN CAST(vt0.c0 AS BLOB) THEN ((rt0.c3)!=(rt0.c4)) ELSE rt0.c3 END) ISNULL)) GROUP BY rt0.c0, vt0.c0, rt0.c1, rt0.c3;
SELECT rt0.c0, vt0.c0, rt0.c1, rt0.c3 FROM vt0 INNER JOIN rt0 ON CASE rt0.c3 COLLATE RTRIM  WHEN (vt0.c0 IN ()) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)) WHEN ((rt0.c0) NOT NULL) THEN TRIM(DISTINCT rt0.c1, rt0.c2) WHEN (~ (rt0.c3)) THEN ABS(rt0.c1) WHEN ((rt0.c1) IS TRUE) THEN ((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c2)) WHEN '673922414' THEN ((rt0.c3)OR(rt0.c0)) END GROUP BY rt0.c0, vt0.c0, rt0.c1, rt0.c3;
SELECT rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c0;
SELECT ALL rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c0 HAVING CAST(x'0ab8' AS INTEGER) UNION ALL SELECT ALL rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c0 HAVING (NOT (CAST(x'0ab8' AS INTEGER))) UNION ALL SELECT rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c0 HAVING ((CAST(x'0ab8' AS INTEGER)) ISNULL);
SELECT rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c0;
SELECT ALL rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c0 HAVING CAST(x'0ab8' AS INTEGER) UNION ALL SELECT ALL rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c0 HAVING (NOT (CAST(x'0ab8' AS INTEGER))) UNION ALL SELECT rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c0 HAVING ((CAST(x'0ab8' AS INTEGER)) ISNULL);
SELECT rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c0;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (CASE WHEN CAST(vt0.c0 AS INTEGER) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN LTRIM(vt0.c0) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN (vt0.c0 IN (vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) END) UNION ALL SELECT * FROM vt0 WHERE ((NOT (CASE WHEN CAST(vt0.c0 AS INTEGER) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN LTRIM(vt0.c0) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN (vt0.c0 IN (vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) END))) UNION ALL SELECT * FROM vt0 WHERE (((CASE WHEN CAST(vt0.c0 AS INTEGER) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN LTRIM(vt0.c0) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN (vt0.c0 IN (vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) END) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (((((rt0.c1)|('|F')))+(((((rt0.c3)AND(rt0.c0)))AND(rt0.c2))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (((((rt0.c1)|('|F')))+(((((rt0.c3)AND(rt0.c0)))AND(rt0.c2))))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((((((rt0.c1)|('|F')))+(((((rt0.c3)AND(rt0.c0)))AND(rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT rt0.c1, rt0.c3, rt0.c4, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c4, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c3, rt0.c4, rt0.c2, rt0.c0 FROM rt0 WHERE (((+ (rt0.c2)) IN (rt0.c4))) GROUP BY rt0.c1, rt0.c3, rt0.c4, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c3, rt0.c4, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((+ (rt0.c2)) IN (rt0.c4))))) GROUP BY rt0.c1, rt0.c3, rt0.c4, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c3, rt0.c4, rt0.c2, rt0.c0 FROM rt0 WHERE (((((+ (rt0.c2)) IN (rt0.c4))) ISNULL)) GROUP BY rt0.c1, rt0.c3, rt0.c4, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c3, rt0.c4, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c4, rt0.c2, rt0.c0;
SELECT ALL rt0.c4 FROM rt0 RIGHT OUTER JOIN vt0 ON 0.5968508078738866 GROUP BY rt0.c4;
SELECT ALL rt0.c4 FROM rt0 RIGHT OUTER JOIN vt0 ON 0.5968508078738866 GROUP BY rt0.c4 HAVING ((AVG(rt0.c0))|(MAX(GROUP_CONCAT(GROUP_CONCAT(rt0.c2))))) UNION ALL SELECT rt0.c4 FROM rt0 RIGHT OUTER JOIN vt0 ON 0.5968508078738866 GROUP BY rt0.c4 HAVING (NOT (((AVG(rt0.c0))|(MAX(GROUP_CONCAT(GROUP_CONCAT(rt0.c2))))))) UNION ALL SELECT ALL rt0.c4 FROM rt0 RIGHT OUTER JOIN vt0 ON 0.5968508078738866 GROUP BY rt0.c4 HAVING ((((AVG(rt0.c0))|(MAX(GROUP_CONCAT(GROUP_CONCAT(rt0.c2)))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (vt0.c0) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE ((((NOT (rt0.c3))) NOT BETWEEN (((rt0.c3)+(rt0.c2))) AND ((((rt0.c3)) BETWEEN ((rt0.c2)) AND ((0x2556d872)))))) UNION SELECT DISTINCT * FROM rt0, vt0 NOT INDEXED WHERE ((NOT ((((NOT (rt0.c3))) NOT BETWEEN (((rt0.c3)+(rt0.c2))) AND ((((rt0.c3)) BETWEEN ((rt0.c2)) AND ((0X2556d872)))))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((((((NOT (rt0.c3))) NOT BETWEEN (((rt0.c3)+(rt0.c2))) AND ((((rt0.c3)) BETWEEN ((rt0.c2)) AND ((0X2556d872)))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT ALL rt0.c3, rt0.c2, rt0.c4 FROM rt0, vt0 GROUP BY rt0.c3, rt0.c2, rt0.c4;
SELECT ALL rt0.c3, rt0.c2, rt0.c4 FROM rt0, vt0 WHERE (((rt0.c2)<=(LENGTH(rt0.c4)))) GROUP BY rt0.c3, rt0.c2, rt0.c4 UNION SELECT ALL rt0.c3, rt0.c2, rt0.c4 FROM rt0, vt0 WHERE ((NOT (((rt0.c2)<=(LENGTH(rt0.c4)))))) GROUP BY rt0.c3, rt0.c2, rt0.c4 UNION SELECT ALL rt0.c3, rt0.c2, rt0.c4 FROM rt0, vt0 NOT INDEXED WHERE (((((rt0.c2)<=(LENGTH(rt0.c4)))) ISNULL)) GROUP BY rt0.c3, rt0.c2, rt0.c4;
SELECT ALL rt0.c3, rt0.c2, rt0.c4 FROM rt0, vt0 GROUP BY rt0.c3, rt0.c2, rt0.c4;
SELECT rt0.c4, rt0.c2, rt0.c1, vt0.c0, rt0.c0 FROM rt0 NOT INDEXED LEFT OUTER JOIN vt0 ON ((CASE WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c0 END)AND((((vt0.c0, vt0.c0, '', rt0.c4, rt0.c2)) BETWEEN ((rt0.c1, rt0.c2, 0.903749684117906, vt0.c0, 2095153321)) AND ((rt0.c1, rt0.c2, rt0.c2, rt0.c2, rt0.c3))))) GROUP BY rt0.c4, rt0.c2, rt0.c1, vt0.c0, rt0.c0;
SELECT rt0.c4, rt0.c2, rt0.c1, vt0.c0, rt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON ((CASE WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c0 END)AND((((vt0.c0, vt0.c0, '', rt0.c4, rt0.c2)) BETWEEN ((rt0.c1, rt0.c2, 0.903749684117906, vt0.c0, 2095153321)) AND ((rt0.c1, rt0.c2, rt0.c2, rt0.c2, rt0.c3))))) GROUP BY rt0.c4, rt0.c2, rt0.c1, vt0.c0, rt0.c0 HAVING (((((((vt0.c0)) NOT BETWEEN ((6.26448498E8)) AND ((AVG(vt0.c0)))))OR(SUM(SUM(SUM(rt0.c4))))))OR(x'')) UNION ALL SELECT rt0.c4, rt0.c2, rt0.c1, vt0.c0, rt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON ((CASE WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c0 END)AND((((vt0.c0, vt0.c0, '', rt0.c4, rt0.c2)) BETWEEN ((rt0.c1, rt0.c2, 0.903749684117906, vt0.c0, 2095153321)) AND ((rt0.c1, rt0.c2, rt0.c2, rt0.c2, rt0.c3))))) GROUP BY rt0.c4, rt0.c2, rt0.c1, vt0.c0, rt0.c0 HAVING (NOT ((((((((vt0.c0)) NOT BETWEEN ((6.26448498E8)) AND ((AVG(vt0.c0)))))OR(SUM(SUM(SUM(rt0.c4))))))OR(x'')))) UNION ALL SELECT ALL rt0.c4, rt0.c2, rt0.c1, vt0.c0, rt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON ((CASE WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c0 END)AND((((vt0.c0, vt0.c0, '', rt0.c4, rt0.c2)) BETWEEN ((rt0.c1, rt0.c2, 0.903749684117906, vt0.c0, 2095153321)) AND ((rt0.c1, rt0.c2, rt0.c2, rt0.c2, rt0.c3))))) GROUP BY rt0.c4, rt0.c2, rt0.c1, vt0.c0, rt0.c0 HAVING (((((((((vt0.c0)) NOT BETWEEN ((6.26448498E8)) AND ((AVG(vt0.c0)))))OR(SUM(SUM(SUM(rt0.c4))))))OR(x''))) ISNULL);
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON (((vt0.c0 IN (vt0.c0))) NOT NULL);
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON (((vt0.c0 IN (vt0.c0))) NOT NULL) WHERE (rt0.c4) UNION ALL SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON (((vt0.c0 IN (vt0.c0))) NOT NULL) WHERE ((NOT (rt0.c4))) UNION ALL SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON (((vt0.c0 IN (vt0.c0))) NOT NULL) WHERE (((rt0.c4) ISNULL));
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON (((vt0.c0 IN (vt0.c0))) NOT NULL);
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (CAST(((vt0.c0) IS TRUE) AS REAL)) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (CAST(((vt0.c0) IS TRUE) AS REAL)))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((CAST(((vt0.c0) IS TRUE) AS REAL)) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT rt0.c4, rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c2, rt0.c0;
SELECT rt0.c4, rt0.c3, rt0.c2, rt0.c0 FROM rt0 WHERE (rt0.c3) GROUP BY rt0.c4, rt0.c3, rt0.c2, rt0.c0 UNION SELECT rt0.c4, rt0.c3, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (rt0.c3))) GROUP BY rt0.c4, rt0.c3, rt0.c2, rt0.c0 UNION SELECT rt0.c4, rt0.c3, rt0.c2, rt0.c0 FROM rt0 WHERE (((rt0.c3) ISNULL)) GROUP BY rt0.c4, rt0.c3, rt0.c2, rt0.c0;
SELECT rt0.c4, rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c2, rt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX(COUNT(*)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(COUNT(*)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(COUNT(*))) ISNULL);
SELECT * FROM vt0, rt0;
SELECT ALL * FROM vt0 NOT INDEXED, rt0 WHERE (0X4913bf15) UNION ALL SELECT * FROM vt0, rt0 WHERE ((NOT (0X4913bf15))) UNION ALL SELECT * FROM vt0, rt0 WHERE (((0x4913bf15) ISNULL));
SELECT * FROM vt0, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CASE CASE rt0.c1  WHEN rt0.c4 THEN rt0.c0 WHEN '793513156' THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END  WHEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) THEN NULLIF(rt0.c1, rt0.c3) ELSE ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c2)) END) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CASE CASE rt0.c1  WHEN rt0.c4 THEN rt0.c0 WHEN '793513156' THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END  WHEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) THEN NULLIF(rt0.c1, rt0.c3) ELSE ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c2)) END))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CASE CASE rt0.c1  WHEN rt0.c4 THEN rt0.c0 WHEN '793513156' THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END  WHEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) THEN NULLIF(rt0.c1, rt0.c3) ELSE ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c2)) END) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt0, rt0 WHERE (CASE WHEN rt0.c0 THEN rt0.c2 END COLLATE BINARY) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM vt0, rt0 WHERE ((NOT (CASE WHEN rt0.c0 THEN rt0.c2 END COLLATE BINARY))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM vt0, rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c2 END COLLATE BINARY) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (~ (((TOTAL(vt0.c0)) BETWEEN (MIN(vt0.c0)) AND (vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((~ (((TOTAL(vt0.c0)) BETWEEN (MIN(vt0.c0)) AND (vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((~ (((TOTAL(vt0.c0)) BETWEEN (MIN(vt0.c0)) AND (vt0.c0))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (~ (((TOTAL(vt0.c0)) BETWEEN (MIN(vt0.c0)) AND (vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((~ (((TOTAL(vt0.c0)) BETWEEN (MIN(vt0.c0)) AND (vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((~ (((TOTAL(vt0.c0)) BETWEEN (MIN(vt0.c0)) AND (vt0.c0))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (rt0.c3 COLLATE BINARY) UNION ALL SELECT * FROM rt0 WHERE ((NOT (rt0.c3 COLLATE BINARY))) UNION ALL SELECT ALL * FROM rt0 WHERE (((rt0.c3 COLLATE BINARY) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((NOT ('9223372036854775807'))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((NOT ('9223372036854775807'))))) UNION SELECT DISTINCT * FROM rt0 NOT INDEXED WHERE ((((NOT ('9223372036854775807'))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0, vt0.c0, rt0.c4, rt0.c3, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c4, rt0.c3, rt0.c1;
SELECT rt0.c0, vt0.c0, rt0.c4, rt0.c3, rt0.c1 FROM rt0, vt0 WHERE ((((+ (0.7394823419005033))) IS FALSE)) GROUP BY rt0.c0, vt0.c0, rt0.c4, rt0.c3, rt0.c1 UNION SELECT rt0.c0, vt0.c0, rt0.c4, rt0.c3, rt0.c1 FROM rt0, vt0 WHERE ((NOT ((((+ (0.7394823419005033))) IS FALSE)))) GROUP BY rt0.c0, vt0.c0, rt0.c4, rt0.c3, rt0.c1 UNION SELECT ALL rt0.c0, vt0.c0, rt0.c4, rt0.c3, rt0.c1 FROM rt0, vt0 WHERE ((((((+ (0.7394823419005033))) IS FALSE)) ISNULL)) GROUP BY rt0.c0, vt0.c0, rt0.c4, rt0.c3, rt0.c1;
SELECT rt0.c0, vt0.c0, rt0.c4, rt0.c3, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c4, rt0.c3, rt0.c1;
SELECT ALL rt0.c1, vt0.c0, rt0.c0, rt0.c4 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c0, rt0.c4;
SELECT ALL rt0.c1, vt0.c0, rt0.c0, rt0.c4 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c0, rt0.c4 HAVING TOTAL(COUNT(*)) UNION ALL SELECT rt0.c1, vt0.c0, rt0.c0, rt0.c4 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c0, rt0.c4 HAVING (NOT (TOTAL(COUNT(*)))) UNION ALL SELECT ALL rt0.c1, vt0.c0, rt0.c0, rt0.c4 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c0, rt0.c4 HAVING ((TOTAL(COUNT(*))) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c4 FROM rt0, vt0;
SELECT rt0.c2, rt0.c1, rt0.c4 FROM rt0, vt0 WHERE (((((((((CAST(rt0.c4 AS BLOB))AND((- (rt0.c1)))))OR((((rt0.c2))<>((rt0.c3))))))OR(((((rt0.c1)OR(rt0.c4)))AND(rt0.c0)))))AND(((rt0.c2)<(rt0.c3))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c4 FROM rt0, vt0 WHERE ((NOT (((((((((CAST(rt0.c4 AS BLOB))AND((- (rt0.c1)))))OR((((rt0.c2))!=((rt0.c3))))))OR(((((rt0.c1)OR(rt0.c4)))AND(rt0.c0)))))AND(((rt0.c2)<(rt0.c3))))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c4 FROM rt0, vt0 WHERE (((((((((((CAST(rt0.c4 AS BLOB))AND((- (rt0.c1)))))OR((((rt0.c2))!=((rt0.c3))))))OR(((((rt0.c1)OR(rt0.c4)))AND(rt0.c0)))))AND(((rt0.c2)<(rt0.c3))))) ISNULL));
SELECT ALL rt0.c2, rt0.c1, rt0.c4 FROM rt0, vt0;
SELECT DISTINCT rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c3 FROM rt0 WHERE (((rt0.c2)|(((rt0.c2) ISNULL)))) UNION SELECT DISTINCT rt0.c3 FROM rt0 WHERE ((NOT (((rt0.c2)|(((rt0.c2) ISNULL)))))) UNION SELECT DISTINCT rt0.c3 FROM rt0 WHERE (((((rt0.c2)|(((rt0.c2) ISNULL)))) ISNULL));
SELECT DISTINCT rt0.c3 FROM rt0;
SELECT ALL rt0.c3, rt0.c0, rt0.c2, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1, rt0.c4;
SELECT ALL rt0.c3, rt0.c0, rt0.c2, rt0.c1, rt0.c4 FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c4 END)) AND ((UNLIKELY(rt0.c2))))) GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1, rt0.c4 UNION SELECT ALL rt0.c3, rt0.c0, rt0.c2, rt0.c1, rt0.c4 FROM rt0 WHERE ((NOT ((((rt0.c2)) NOT BETWEEN ((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c4 END)) AND ((UNLIKELY(rt0.c2))))))) GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1, rt0.c4 UNION SELECT rt0.c3, rt0.c0, rt0.c2, rt0.c1, rt0.c4 FROM rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c4 END)) AND ((UNLIKELY(rt0.c2))))) ISNULL)) GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1, rt0.c4;
SELECT ALL rt0.c3, rt0.c0, rt0.c2, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1, rt0.c4;
SELECT rt0.c0, rt0.c2, rt0.c3, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c3, rt0.c4, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c3, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c3, rt0.c4, rt0.c1 HAVING MIN((((COUNT(rt0.c1), rt0.c1, NULL, rt0.c1, rt0.c4)) NOT BETWEEN ((COUNT(*), TOTAL(MIN(rt0.c0)), TOTAL(TOTAL(MIN(GROUP_CONCAT(MIN(rt0.c2))))), rt0.c3, rt0.c3)) AND ((AVG(rt0.c0), GROUP_CONCAT(MIN(MAX(MIN(AVG(SUM(GROUP_CONCAT(COUNT(MAX(rt0.c4))))))))), rt0.c1, COUNT(*), rt0.c1)))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c3, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c3, rt0.c4, rt0.c1 HAVING (NOT (MIN((((COUNT(rt0.c1), rt0.c1, NULL, rt0.c1, rt0.c4)) NOT BETWEEN ((COUNT(*), TOTAL(MIN(rt0.c0)), TOTAL(TOTAL(MIN(GROUP_CONCAT(MIN(rt0.c2))))), rt0.c3, rt0.c3)) AND ((AVG(rt0.c0), GROUP_CONCAT(MIN(MAX(MIN(AVG(SUM(GROUP_CONCAT(COUNT(MAX(rt0.c4))))))))), rt0.c1, COUNT(*), rt0.c1)))))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c3, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c3, rt0.c4, rt0.c1 HAVING ((MIN((((COUNT(rt0.c1), rt0.c1, NULL, rt0.c1, rt0.c4)) NOT BETWEEN ((COUNT(*), TOTAL(MIN(rt0.c0)), TOTAL(TOTAL(MIN(GROUP_CONCAT(MIN(rt0.c2))))), rt0.c3, rt0.c3)) AND ((AVG(rt0.c0), GROUP_CONCAT(MIN(MAX(MIN(AVG(SUM(GROUP_CONCAT(COUNT(MAX(rt0.c4))))))))), rt0.c1, COUNT(*), rt0.c1))))) ISNULL);
SELECT ALL rt0.c1, rt0.c2 FROM rt0, vt0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0, vt0 WHERE (((((vt0.c0) NOTNULL))LIKE((((rt0.c0))>((rt0.c0)))))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0, vt0 WHERE ((NOT (((((vt0.c0) NOTNULL))LIKE((((rt0.c0))>((rt0.c0)))))))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0, vt0 WHERE (((((((vt0.c0) NOTNULL))LIKE((((rt0.c0))>((rt0.c0)))))) ISNULL));
SELECT ALL rt0.c1, rt0.c2 FROM rt0, vt0;
SELECT DISTINCT rt0.c3, rt0.c0, rt0.c4, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c3, rt0.c0, rt0.c4, rt0.c1, rt0.c2 FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))AND(0Xffffffffffffffff))) UNION SELECT DISTINCT rt0.c3, rt0.c0, rt0.c4, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))AND(0xffffffffffffffff))))) UNION SELECT DISTINCT rt0.c3, rt0.c0, rt0.c4, rt0.c1, rt0.c2 FROM rt0 WHERE (((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))AND(0Xffffffffffffffff))) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c0, rt0.c4, rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c0, rt0.c4 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c4;
SELECT rt0.c0, rt0.c4 FROM rt0, vt0 WHERE (((rt0.c4) BETWEEN ('-1764443367') AND (rt0.c0))) GROUP BY rt0.c0, rt0.c4 UNION SELECT rt0.c0, rt0.c4 FROM rt0, vt0 WHERE ((NOT (((rt0.c4) BETWEEN ('-1764443367') AND (rt0.c0))))) GROUP BY rt0.c0, rt0.c4 UNION SELECT rt0.c0, rt0.c4 FROM rt0, vt0 WHERE (((((rt0.c4) BETWEEN ('-1764443367') AND (rt0.c0))) ISNULL)) GROUP BY rt0.c0, rt0.c4;
SELECT ALL rt0.c0, rt0.c4 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c4;
SELECT ALL rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3;
SELECT rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3 HAVING MIN(((COUNT(*))<(MIN(rt0.c1)))) UNION ALL SELECT rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3 HAVING (NOT (MIN(((COUNT(*))<(MIN(rt0.c1)))))) UNION ALL SELECT rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3 HAVING ((MIN(((COUNT(*))<(MIN(rt0.c1))))) ISNULL);
SELECT TOTAL(((((- (x''))))>=((CAST(vt0.c0 AS REAL))))) FROM vt0 ORDER BY DATETIME(COALESCE(DISTINCT vt0.c0, vt0.c0, vt0.c0, vt0.c0), CASE vt0.c0  WHEN vt0.c0 THEN '-1237159426' ELSE vt0.c0 END, vt0.c0 COLLATE RTRIM, ((NULL) NOT NULL), ((vt0.c0)IS NOT(vt0.c0))) DESC, vt0.c0 ASC  NULLS LAST;
SELECT vt0.c0 FROM rt0, vt0;
SELECT ALL vt0.c0 FROM rt0, vt0 WHERE (CASE WHEN json_array_length(rt0.c1, vt0.c0) THEN ((rt0.c4)<=(NULL)) ELSE ((rt0.c4)AND(rt0.c1)) END) UNION ALL SELECT ALL vt0.c0 FROM rt0, vt0 WHERE ((NOT (CASE WHEN json_array_length(rt0.c1, vt0.c0) THEN ((rt0.c4)<=(NULL)) ELSE ((rt0.c4)AND(rt0.c1)) END))) UNION ALL SELECT vt0.c0 FROM rt0, vt0 WHERE (((CASE WHEN json_array_length(rt0.c1, vt0.c0) THEN ((rt0.c4)<=(NULL)) ELSE ((rt0.c4)AND(rt0.c1)) END) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c0))=((vt0.c0)))) NOT NULL)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((((vt0.c0))==((vt0.c0)))) NOT NULL)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((((vt0.c0))=((vt0.c0)))) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT rt0.c4, vt0.c0, rt0.c3, rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c4, vt0.c0, rt0.c3, rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c4, vt0.c0, rt0.c3, rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 WHERE (CAST(((((rt0.c4)AND(rt0.c1)))OR(rt0.c2)) AS NUMERIC)) GROUP BY rt0.c4, vt0.c0, rt0.c3, rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c4, vt0.c0, rt0.c3, rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 WHERE ((NOT (CAST(((((rt0.c4)AND(rt0.c1)))OR(rt0.c2)) AS NUMERIC)))) GROUP BY rt0.c4, vt0.c0, rt0.c3, rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c4, vt0.c0, rt0.c3, rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 WHERE (((CAST(((((rt0.c4)AND(rt0.c1)))OR(rt0.c2)) AS NUMERIC)) ISNULL)) GROUP BY rt0.c4, vt0.c0, rt0.c3, rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c4, vt0.c0, rt0.c3, rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c4, vt0.c0, rt0.c3, rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c4, rt0.c3, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c2, rt0.c1;
SELECT ALL rt0.c4, rt0.c3, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c2, rt0.c1 HAVING ((((rt0.c4) BETWEEN (rt0.c0) AND (MAX(TOTAL('-976083593'))))) BETWEEN (CAST(rt0.c3 AS INTEGER)) AND (MIN(rt0.c0))) UNION ALL SELECT ALL rt0.c4, rt0.c3, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c2, rt0.c1 HAVING (NOT (((((rt0.c4) BETWEEN (rt0.c0) AND (MAX(TOTAL('-976083593'))))) BETWEEN (CAST(rt0.c3 AS INTEGER)) AND (MIN(rt0.c0))))) UNION ALL SELECT ALL rt0.c4, rt0.c3, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c2, rt0.c1 HAVING ((((((rt0.c4) BETWEEN (rt0.c0) AND (MAX(TOTAL('-976083593'))))) BETWEEN (CAST(rt0.c3 AS INTEGER)) AND (MIN(rt0.c0)))) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (((((((vt0.c0) NOT NULL))AND(vt0.c0)))AND(LOWER(vt0.c0)))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((((((vt0.c0) NOT NULL))AND(vt0.c0)))AND(LOWER(vt0.c0)))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((((((vt0.c0) NOT NULL))AND(vt0.c0)))AND(LOWER(vt0.c0)))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0) ISNULL)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((vt0.c0) ISNULL)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0) ISNULL)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL rt0.c2, rt0.c1, rt0.c3 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c3;
SELECT ALL rt0.c2, rt0.c1, rt0.c3 FROM vt0, rt0 WHERE (((((rt0.c4 IN ())))>=((CAST(rt0.c4 AS INTEGER))))) GROUP BY rt0.c2, rt0.c1, rt0.c3 UNION SELECT rt0.c2, rt0.c1, rt0.c3 FROM vt0, rt0 WHERE ((NOT (((((rt0.c4 IN ())))>=((CAST(rt0.c4 AS INTEGER))))))) GROUP BY rt0.c2, rt0.c1, rt0.c3 UNION SELECT rt0.c2, rt0.c1, rt0.c3 FROM vt0, rt0 WHERE (((((((rt0.c4 IN ())))>=((CAST(rt0.c4 AS INTEGER))))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c3;
SELECT ALL rt0.c2, rt0.c1, rt0.c3 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c3;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((SUM(rt0.c4)) BETWEEN (MIN(rt0.c2)) AND (AVG(rt0.c3))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (((SUM(rt0.c4)) BETWEEN (MIN(rt0.c2)) AND (AVG(rt0.c3))))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((((SUM(rt0.c4)) BETWEEN (MIN(rt0.c2)) AND (AVG(rt0.c3)))) ISNULL);
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((SUM(rt0.c4)) BETWEEN (MIN(rt0.c2)) AND (AVG(rt0.c3))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (((SUM(rt0.c4)) BETWEEN (MIN(rt0.c2)) AND (AVG(rt0.c3))))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((((SUM(rt0.c4)) BETWEEN (MIN(rt0.c2)) AND (AVG(rt0.c3)))) ISNULL);
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((rt0.c2)>=(rt0.c3)) COLLATE NOCASE) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c2)>=(rt0.c3)) COLLATE NOCASE))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (((((rt0.c2)>=(rt0.c3)) COLLATE NOCASE) ISNULL));
SELECT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (((rt0.c1) IS FALSE) COLLATE NOCASE) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (((rt0.c1) IS FALSE) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((((rt0.c1) IS FALSE) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT ALL vt0.c0, rt0.c2, rt0.c0, rt0.c3, rt0.c4, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2, rt0.c0, rt0.c3, rt0.c4, rt0.c1;
SELECT ALL vt0.c0, rt0.c2, rt0.c0, rt0.c3, rt0.c4, rt0.c1 FROM rt0, vt0 WHERE ((+ (vt0.c0))) GROUP BY vt0.c0, rt0.c2, rt0.c0, rt0.c3, rt0.c4, rt0.c1 UNION SELECT ALL vt0.c0, rt0.c2, rt0.c0, rt0.c3, rt0.c4, rt0.c1 FROM rt0, vt0 WHERE ((NOT ((+ (vt0.c0))))) GROUP BY vt0.c0, rt0.c2, rt0.c0, rt0.c3, rt0.c4, rt0.c1 UNION SELECT ALL vt0.c0, rt0.c2, rt0.c0, rt0.c3, rt0.c4, rt0.c1 FROM rt0, vt0 WHERE ((((+ (vt0.c0))) ISNULL)) GROUP BY vt0.c0, rt0.c2, rt0.c0, rt0.c3, rt0.c4, rt0.c1;
SELECT ALL vt0.c0, rt0.c2, rt0.c0, rt0.c3, rt0.c4, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2, rt0.c0, rt0.c3, rt0.c4, rt0.c1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG(AVG(COUNT(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c0 HAVING (NOT (AVG(AVG(COUNT(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG(AVG(COUNT(vt0.c0)))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (((((rt0.c4)<(rt0.c4)))+((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((((rt0.c4)<(rt0.c4)))+((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((rt0.c4)<(rt0.c4)))+((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((((0.6196551301555462)GLOB(rt0.c3)))OR(CAST(0.6385366230655165 AS TEXT))))AND((((rt0.c0, rt0.c1, 0.9603080518408026)) NOT BETWEEN ((rt0.c4, rt0.c2, rt0.c1)) AND ((rt0.c2, rt0.c0, 1.092889576E9)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((((0.6196551301555462)GLOB(rt0.c3)))OR(CAST(0.6385366230655165 AS TEXT))))AND((((rt0.c0, rt0.c1, 0.9603080518408026)) NOT BETWEEN ((rt0.c4, rt0.c2, rt0.c1)) AND ((rt0.c2, rt0.c0, 1.092889576E9)))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((((0.6196551301555462)GLOB(rt0.c3)))OR(CAST(0.6385366230655165 AS TEXT))))AND((((rt0.c0, rt0.c1, 0.9603080518408026)) NOT BETWEEN ((rt0.c4, rt0.c2, rt0.c1)) AND ((rt0.c2, rt0.c0, 1.092889576E9)))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (CAST(LIKELY(vt0.c0) AS INTEGER)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CAST(LIKELY(vt0.c0) AS INTEGER)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST(LIKELY(vt0.c0) AS INTEGER)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3;
SELECT ALL rt0.c1, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3 HAVING CAST(COUNT(rt0.c2) AS NUMERIC) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3 HAVING (NOT (CAST(COUNT(rt0.c2) AS NUMERIC))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3 HAVING ((CAST(COUNT(rt0.c2) AS NUMERIC)) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3;
SELECT ALL rt0.c1, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3 HAVING CAST(COUNT(rt0.c2) AS NUMERIC) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3 HAVING (NOT (CAST(COUNT(rt0.c2) AS NUMERIC))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3 HAVING ((CAST(COUNT(rt0.c2) AS NUMERIC)) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3;
SELECT ALL rt0.c1, rt0.c3, rt0.c4, rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c3, rt0.c4, rt0.c0 FROM rt0 WHERE (CASE WHEN rt0.c0 COLLATE RTRIM THEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) ELSE ((rt0.c2)<(rt0.c2)) END) UNION ALL SELECT ALL rt0.c1, rt0.c3, rt0.c4, rt0.c0 FROM rt0 WHERE ((NOT (CASE WHEN rt0.c0 COLLATE RTRIM THEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) ELSE ((rt0.c2)<(rt0.c2)) END))) UNION ALL SELECT ALL rt0.c1, rt0.c3, rt0.c4, rt0.c0 FROM rt0 WHERE (((CASE WHEN rt0.c0 COLLATE RTRIM THEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) ELSE ((rt0.c2)<(rt0.c2)) END) ISNULL));
SELECT ALL rt0.c1, rt0.c3, rt0.c4, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt0 ON 0.03120394712896779;
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt0 ON 0.03120394712896779 WHERE (((NOT (rt0.c0)) IN ())) UNION SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt0 ON 0.03120394712896779 WHERE ((NOT (((NOT (rt0.c0)) IN ())))) UNION SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt0 ON 0.03120394712896779 WHERE (((((NOT (rt0.c0)) IN ())) ISNULL));
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt0 ON 0.03120394712896779;
SELECT vt0.c0, rt0.c0, rt0.c4, rt0.c3 FROM vt0 NATURAL JOIN rt0 GROUP BY vt0.c0, rt0.c0, rt0.c4, rt0.c3;
SELECT ALL vt0.c0, rt0.c0, rt0.c4, rt0.c3 FROM vt0 NATURAL JOIN rt0 WHERE ((((((rt0.c0 IN (vt0.c0, rt0.c2)))OR((NOT (rt0.c0)))))AND(0.9885006436859214))) GROUP BY vt0.c0, rt0.c0, rt0.c4, rt0.c3 UNION SELECT vt0.c0, rt0.c0, rt0.c4, rt0.c3 FROM vt0 NATURAL JOIN rt0 WHERE ((NOT ((((((rt0.c0 IN (vt0.c0, rt0.c2)))OR((NOT (rt0.c0)))))AND(0.9885006436859214))))) GROUP BY vt0.c0, rt0.c0, rt0.c4, rt0.c3 UNION SELECT vt0.c0, rt0.c0, rt0.c4, rt0.c3 FROM vt0 NATURAL JOIN rt0 WHERE ((((((((rt0.c0 IN (vt0.c0, rt0.c2)))OR((NOT (rt0.c0)))))AND(0.9885006436859214))) ISNULL)) GROUP BY vt0.c0, rt0.c0, rt0.c4, rt0.c3;
SELECT vt0.c0, rt0.c0, rt0.c4, rt0.c3 FROM vt0 NATURAL JOIN rt0 GROUP BY vt0.c0, rt0.c0, rt0.c4, rt0.c3;
SELECT ALL rt0.c2, rt0.c4, vt0.c0, rt0.c3, rt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON ((((0.8248192064350597)LIKE(rt0.c1)))<(CASE rt0.c0  WHEN rt0.c3 THEN rt0.c2 END)) GROUP BY rt0.c2, rt0.c4, vt0.c0, rt0.c3, rt0.c1;
SELECT ALL rt0.c2, rt0.c4, vt0.c0, rt0.c3, rt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON ((((0.8248192064350597)LIKE(rt0.c1)))<(CASE rt0.c0  WHEN rt0.c3 THEN rt0.c2 END)) GROUP BY rt0.c2, rt0.c4, vt0.c0, rt0.c3, rt0.c1 HAVING SUM(((MAX(MIN(''))) NOT NULL)) UNION ALL SELECT ALL rt0.c2, rt0.c4, vt0.c0, rt0.c3, rt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON ((((0.8248192064350597)LIKE(rt0.c1)))<(CASE rt0.c0  WHEN rt0.c3 THEN rt0.c2 END)) GROUP BY rt0.c2, rt0.c4, vt0.c0, rt0.c3, rt0.c1 HAVING (NOT (SUM(((MAX(MIN(''))) NOT NULL)))) UNION ALL SELECT ALL rt0.c2, rt0.c4, vt0.c0, rt0.c3, rt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON ((((0.8248192064350597)LIKE(rt0.c1)))<(CASE rt0.c0  WHEN rt0.c3 THEN rt0.c2 END)) GROUP BY rt0.c2, rt0.c4, vt0.c0, rt0.c3, rt0.c1 HAVING ((SUM(((MAX(MIN(''))) NOT NULL))) ISNULL);
SELECT rt0.c1, vt0.c0, rt0.c3, rt0.c0, rt0.c2 FROM vt0, rt0;
SELECT ALL rt0.c1, vt0.c0, rt0.c3, rt0.c0, rt0.c2 FROM vt0, rt0 WHERE ((rt0.c1 COLLATE BINARY IN ())) UNION ALL SELECT ALL rt0.c1, vt0.c0, rt0.c3, rt0.c0, rt0.c2 FROM vt0, rt0 WHERE ((NOT ((rt0.c1 COLLATE BINARY IN ())))) UNION ALL SELECT rt0.c1, vt0.c0, rt0.c3, rt0.c0, rt0.c2 FROM vt0, rt0 WHERE ((((rt0.c1 COLLATE BINARY IN ())) ISNULL));
SELECT rt0.c1, vt0.c0, rt0.c3, rt0.c0, rt0.c2 FROM vt0, rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (vt0.c0 COLLATE BINARY) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (vt0.c0 COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT rt0.c1, rt0.c2, vt0.c0, rt0.c0, rt0.c3, rt0.c4 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c2, vt0.c0, rt0.c0, rt0.c3, rt0.c4;
SELECT rt0.c1, rt0.c2, vt0.c0, rt0.c0, rt0.c3, rt0.c4 FROM vt0, rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c2))) NOT BETWEEN (((rt0.c0)&(vt0.c0))) AND (rt0.c3 COLLATE RTRIM))) GROUP BY rt0.c1, rt0.c2, vt0.c0, rt0.c0, rt0.c3, rt0.c4 UNION SELECT rt0.c1, rt0.c2, vt0.c0, rt0.c0, rt0.c3, rt0.c4 FROM vt0, rt0 WHERE ((NOT (((((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c2))) NOT BETWEEN (((rt0.c0)&(vt0.c0))) AND (rt0.c3 COLLATE RTRIM))))) GROUP BY rt0.c1, rt0.c2, vt0.c0, rt0.c0, rt0.c3, rt0.c4 UNION SELECT rt0.c1, rt0.c2, vt0.c0, rt0.c0, rt0.c3, rt0.c4 FROM vt0, rt0 WHERE (((((((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c2))) NOT BETWEEN (((rt0.c0)&(vt0.c0))) AND (rt0.c3 COLLATE RTRIM))) ISNULL)) GROUP BY rt0.c1, rt0.c2, vt0.c0, rt0.c0, rt0.c3, rt0.c4;
SELECT rt0.c1, rt0.c2, vt0.c0, rt0.c0, rt0.c3, rt0.c4 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c2, vt0.c0, rt0.c0, rt0.c3, rt0.c4;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (MAX(MAX(AVG(vt0.c0))) IN ()) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((MAX(MAX(AVG(vt0.c0))) IN ()))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((MAX(MAX(AVG(vt0.c0))) IN ())) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (MAX(MAX(AVG(vt0.c0))) IN ()) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((MAX(MAX(AVG(vt0.c0))) IN ()))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((MAX(MAX(AVG(vt0.c0))) IN ())) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c0, rt0.c4, rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c0, rt0.c4, rt0.c2, rt0.c1 FROM rt0 WHERE (((((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c0))) NOT BETWEEN (((rt0.c0)&(rt0.c3))) AND (CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c0 END))) UNION ALL SELECT ALL rt0.c0, rt0.c4, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c0))) NOT BETWEEN (((rt0.c0)&(rt0.c3))) AND (CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c0 END))))) UNION ALL SELECT ALL rt0.c0, rt0.c4, rt0.c2, rt0.c1 FROM rt0 WHERE (((((((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c0))) NOT BETWEEN (((rt0.c0)&(rt0.c3))) AND (CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c0 END))) ISNULL));
SELECT ALL rt0.c0, rt0.c4, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1, vt0.c0, rt0.c4, rt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON (((vt0.c0, x'', rt0.c4)) BETWEEN ((rt0.c3, x'080e', rt0.c4)) AND ((rt0.c0, rt0.c4, rt0.c1))) COLLATE NOCASE;
SELECT DISTINCT rt0.c2, rt0.c1, vt0.c0, rt0.c4, rt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON (((vt0.c0, x'', rt0.c4)) BETWEEN ((rt0.c3, x'080e', rt0.c4)) AND ((rt0.c0, rt0.c4, rt0.c1))) COLLATE NOCASE WHERE ((rt0.c2 IN ())) UNION SELECT DISTINCT rt0.c2, rt0.c1, vt0.c0, rt0.c4, rt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON (((vt0.c0, x'', rt0.c4)) BETWEEN ((rt0.c3, x'080e', rt0.c4)) AND ((rt0.c0, rt0.c4, rt0.c1))) COLLATE NOCASE WHERE ((NOT ((rt0.c2 IN ())))) UNION SELECT DISTINCT rt0.c2, rt0.c1, vt0.c0, rt0.c4, rt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON (((vt0.c0, x'', rt0.c4)) BETWEEN ((rt0.c3, x'080e', rt0.c4)) AND ((rt0.c0, rt0.c4, rt0.c1))) COLLATE NOCASE WHERE ((((rt0.c2 IN ())) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, vt0.c0, rt0.c4, rt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON (((vt0.c0, x'', rt0.c4)) BETWEEN ((rt0.c3, x'080e', rt0.c4)) AND ((rt0.c0, rt0.c4, rt0.c1))) COLLATE NOCASE;
SELECT rt0.c0, rt0.c3, vt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c3, vt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c3, vt0.c0, rt0.c1 FROM vt0, rt0 WHERE (((((rt0.c3) IS TRUE))IS(((rt0.c1) ISNULL)))) GROUP BY rt0.c0, rt0.c3, vt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c3, vt0.c0, rt0.c1 FROM vt0, rt0 WHERE ((NOT (((((rt0.c3) IS TRUE))IS(((rt0.c1) ISNULL)))))) GROUP BY rt0.c0, rt0.c3, vt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c3, vt0.c0, rt0.c1 FROM vt0, rt0 WHERE (((((((rt0.c3) IS TRUE))IS(((rt0.c1) ISNULL)))) ISNULL)) GROUP BY rt0.c0, rt0.c3, vt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c3, vt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c3, vt0.c0, rt0.c1;
SELECT vt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON (((((rt0.c4, rt0.c4, rt0.c1))>=((x'', rt0.c2, rt0.c2)))) BETWEEN (((rt0.c1)IS(rt0.c1))) AND (((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c2)))) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON (((((rt0.c4, rt0.c4, rt0.c1))>=((x'', rt0.c2, rt0.c2)))) BETWEEN (((rt0.c1)IS(rt0.c1))) AND (((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c2)))) GROUP BY vt0.c0 HAVING LIKELY(((rt0.c4) IS FALSE)) UNION ALL SELECT ALL vt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON (((((rt0.c4, rt0.c4, rt0.c1))>=((x'', rt0.c2, rt0.c2)))) BETWEEN (((rt0.c1)IS(rt0.c1))) AND (((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c2)))) GROUP BY vt0.c0 HAVING (NOT (LIKELY(((rt0.c4) IS FALSE)))) UNION ALL SELECT vt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON (((((rt0.c4, rt0.c4, rt0.c1))>=((x'', rt0.c2, rt0.c2)))) BETWEEN (((rt0.c1)IS(rt0.c1))) AND (((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c2)))) GROUP BY vt0.c0 HAVING ((LIKELY(((rt0.c4) IS FALSE))) ISNULL);
SELECT vt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON (((((rt0.c4, rt0.c4, rt0.c1))>=((x'', rt0.c2, rt0.c2)))) BETWEEN (((rt0.c1)IS(rt0.c1))) AND (((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c2)))) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON (((((rt0.c4, rt0.c4, rt0.c1))>=((x'', rt0.c2, rt0.c2)))) BETWEEN (((rt0.c1)IS(rt0.c1))) AND (((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c2)))) GROUP BY vt0.c0 HAVING LIKELY(((rt0.c4) IS FALSE)) UNION ALL SELECT ALL vt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON (((((rt0.c4, rt0.c4, rt0.c1))>=((x'', rt0.c2, rt0.c2)))) BETWEEN (((rt0.c1)IS(rt0.c1))) AND (((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c2)))) GROUP BY vt0.c0 HAVING (NOT (LIKELY(((rt0.c4) IS FALSE)))) UNION ALL SELECT vt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON (((((rt0.c4, rt0.c4, rt0.c1))>=((x'', rt0.c2, rt0.c2)))) BETWEEN (((rt0.c1)IS(rt0.c1))) AND (((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c2)))) GROUP BY vt0.c0 HAVING ((LIKELY(((rt0.c4) IS FALSE))) ISNULL);
SELECT vt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON (((((rt0.c4, rt0.c4, rt0.c1))>=((x'', rt0.c2, rt0.c2)))) BETWEEN (((rt0.c1)IS(rt0.c1))) AND (((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c2)))) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))<=(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))<=(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))<=(vt0.c0))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt0 ON (((NOT (vt0.c0)))<<((vt0.c0 IN (rt0.c0))));
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt0 ON (((NOT (vt0.c0)))<<((vt0.c0 IN (rt0.c0)))) WHERE (SUBSTR(((((rt0.c3)AND(rt0.c3)))AND(rt0.c1)), ((rt0.c0) IS TRUE))) UNION SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt0 ON (((NOT (vt0.c0)))<<((vt0.c0 IN (rt0.c0)))) WHERE ((NOT (SUBSTR(((((rt0.c3)AND(rt0.c3)))AND(rt0.c1)), ((rt0.c0) IS TRUE))))) UNION SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt0 ON (((NOT (vt0.c0)))<<((vt0.c0 IN (rt0.c0)))) WHERE (((SUBSTR(((((rt0.c3)AND(rt0.c3)))AND(rt0.c1)), ((rt0.c0) IS TRUE))) ISNULL));
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt0 ON (((NOT (vt0.c0)))<<((vt0.c0 IN (rt0.c0))));
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c3 FROM rt0, vt0 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0 NOT INDEXED, vt0 GROUP BY rt0.c3 HAVING COUNT(*) UNION ALL SELECT rt0.c3 FROM rt0, vt0 GROUP BY rt0.c3 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c3 FROM rt0, vt0 GROUP BY rt0.c3 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c3 FROM rt0, vt0 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0 NOT INDEXED, vt0 GROUP BY rt0.c3 HAVING COUNT(*) UNION ALL SELECT rt0.c3 FROM rt0, vt0 GROUP BY rt0.c3 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c3 FROM rt0, vt0 GROUP BY rt0.c3 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c3 FROM rt0, vt0 GROUP BY rt0.c3;
SELECT ALL rt0.c3, vt0.c0, rt0.c0, rt0.c2 FROM vt0 FULL OUTER JOIN rt0 ON (((rt0.c3 IN ()))<=(''));
SELECT rt0.c3, vt0.c0, rt0.c0, rt0.c2 FROM vt0 FULL OUTER JOIN rt0 ON (((rt0.c3 IN ()))<=('')) WHERE ((((((vt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c4))))LIKE('-1207672270'))) UNION ALL SELECT rt0.c3, vt0.c0, rt0.c0, rt0.c2 FROM vt0 FULL OUTER JOIN rt0 ON (((rt0.c3 IN ()))<=('')) WHERE ((NOT ((((((vt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c4))))LIKE('-1207672270'))))) UNION ALL SELECT ALL rt0.c3, vt0.c0, rt0.c0, rt0.c2 FROM vt0 FULL OUTER JOIN rt0 ON (((rt0.c3 IN ()))<=('')) WHERE ((((((((vt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c4))))LIKE('-1207672270'))) ISNULL));
SELECT ALL rt0.c3, vt0.c0, rt0.c0, rt0.c2 FROM vt0 FULL OUTER JOIN rt0 ON (((rt0.c3 IN ()))<=(''));
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c3, rt0.c2, rt0.c3)) BETWEEN (((rt0.c0 IN ()), ((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c3)))OR('q!~VLL&')))OR(rt0.c3)), LIKE(rt0.c0, rt0.c4))) AND ((rt0.c1 COLLATE RTRIM, ((rt0.c1)+(rt0.c3)), rt0.c3 COLLATE NOCASE)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((rt0.c3, rt0.c2, rt0.c3)) BETWEEN (((rt0.c0 IN ()), ((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c3)))OR('q!~VLL&')))OR(rt0.c3)), LIKE(rt0.c0, rt0.c4))) AND ((rt0.c1 COLLATE RTRIM, ((rt0.c1)+(rt0.c3)), rt0.c3 COLLATE NOCASE)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c3, rt0.c2, rt0.c3)) BETWEEN (((rt0.c0 IN ()), ((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c3)))OR('q!~VLL&')))OR(rt0.c3)), LIKE(rt0.c0, rt0.c4))) AND ((rt0.c1 COLLATE RTRIM, ((rt0.c1)+(rt0.c3)), rt0.c3 COLLATE NOCASE)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM vt0, rt0 WHERE ((((((vt0.c0)) BETWEEN ((rt0.c3)) AND ((1.922330674E9))))<<(TRIM(rt0.c3)))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM vt0, rt0 WHERE ((NOT ((((((vt0.c0)) BETWEEN ((rt0.c3)) AND ((1.922330674E9))))<<(TRIM(rt0.c3)))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM vt0, rt0 WHERE ((((((((vt0.c0)) BETWEEN ((rt0.c3)) AND ((1.922330674E9))))<<(TRIM(rt0.c3)))) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX('-1090715789') UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX('-1090715789'))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX('-1090715789')) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX('-1090715789') UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX('-1090715789'))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX('-1090715789')) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c1, rt0.c4, vt0.c0, rt0.c0 FROM vt0, rt0;
SELECT ALL rt0.c1, rt0.c4, vt0.c0, rt0.c0 FROM vt0, rt0 WHERE ((((rt0.c2 IN ())) IS TRUE)) UNION ALL SELECT ALL rt0.c1, rt0.c4, vt0.c0, rt0.c0 FROM vt0, rt0 WHERE ((NOT ((((rt0.c2 IN ())) IS TRUE)))) UNION ALL SELECT ALL rt0.c1, rt0.c4, vt0.c0, rt0.c0 FROM vt0, rt0 WHERE ((((((rt0.c2 IN ())) IS TRUE)) ISNULL));
SELECT ALL rt0.c1, rt0.c4, vt0.c0, rt0.c0 FROM vt0, rt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (((rt0.c0)>(vt0.c0)) COLLATE RTRIM) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (((rt0.c0)>(vt0.c0)) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((((rt0.c0)>(vt0.c0)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT ALL rt0.c3, rt0.c4, rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1, rt0.c0;
SELECT rt0.c3, rt0.c4, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE (((((rt0.c1 IN (rt0.c0, rt0.c4))))>((((((rt0.c3)AND('-72539198')))OR(rt0.c3)))))) GROUP BY rt0.c3, rt0.c4, rt0.c1, rt0.c0 UNION SELECT rt0.c3, rt0.c4, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE ((NOT (((((rt0.c1 IN (rt0.c0, rt0.c4))))>((((((rt0.c3)AND('-72539198')))OR(rt0.c3)))))))) GROUP BY rt0.c3, rt0.c4, rt0.c1, rt0.c0 UNION SELECT rt0.c3, rt0.c4, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE (((((((rt0.c1 IN (rt0.c0, rt0.c4))))>((((((rt0.c3)AND('-72539198')))OR(rt0.c3)))))) ISNULL)) GROUP BY rt0.c3, rt0.c4, rt0.c1, rt0.c0;
SELECT ALL rt0.c3, rt0.c4, rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1, rt0.c0;
SELECT ALL rt0.c4, rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c4, rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c2, rt0.c0, rt0.c1 HAVING (+ (CASE rt0.c1  WHEN TOTAL(rt0.c3) THEN 0.9438439865248114 END)) UNION ALL SELECT rt0.c4, rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c2, rt0.c0, rt0.c1 HAVING (NOT ((+ (CASE rt0.c1  WHEN TOTAL(rt0.c3) THEN 0.9438439865248114 END)))) UNION ALL SELECT rt0.c4, rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c2, rt0.c0, rt0.c1 HAVING (((+ (CASE rt0.c1  WHEN TOTAL(rt0.c3) THEN 0.9438439865248114 END))) ISNULL);
SELECT ALL rt0.c4, rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c4, rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c2, rt0.c0, rt0.c1 HAVING (+ (CASE rt0.c1  WHEN TOTAL(rt0.c3) THEN 0.9438439865248114 END)) UNION ALL SELECT rt0.c4, rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c2, rt0.c0, rt0.c1 HAVING (NOT ((+ (CASE rt0.c1  WHEN TOTAL(rt0.c3) THEN 0.9438439865248114 END)))) UNION ALL SELECT rt0.c4, rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c2, rt0.c0, rt0.c1 HAVING (((+ (CASE rt0.c1  WHEN TOTAL(rt0.c3) THEN 0.9438439865248114 END))) ISNULL);
SELECT ALL rt0.c4, rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c2, rt0.c0, rt0.c1;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (CASE WHEN x'' COLLATE BINARY THEN vt0.c0 COLLATE RTRIM ELSE CAST(vt0.c0 AS TEXT) END) UNION ALL SELECT * FROM vt0 WHERE ((NOT (CASE WHEN x'' COLLATE BINARY THEN vt0.c0 COLLATE RTRIM ELSE CAST(vt0.c0 AS TEXT) END))) UNION ALL SELECT * FROM vt0 WHERE (((CASE WHEN x'' COLLATE BINARY THEN vt0.c0 COLLATE RTRIM ELSE CAST(vt0.c0 AS TEXT) END) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (rt0.c4) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (rt0.c4))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((rt0.c4) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT rt0.c2, vt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0, rt0.c1;
SELECT rt0.c2, vt0.c0, rt0.c1 FROM vt0, rt0 WHERE ((((~ (rt0.c2))) BETWEEN ((rt0.c4 IN ())) AND (CAST(rt0.c2 AS REAL)))) GROUP BY rt0.c2, vt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, vt0.c0, rt0.c1 FROM vt0, rt0 WHERE ((NOT ((((~ (rt0.c2))) BETWEEN ((rt0.c4 IN ())) AND (CAST(rt0.c2 AS REAL)))))) GROUP BY rt0.c2, vt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, vt0.c0, rt0.c1 FROM vt0, rt0 NOT INDEXED WHERE ((((((~ (rt0.c2))) BETWEEN ((rt0.c4 IN ())) AND (CAST(rt0.c2 AS REAL)))) ISNULL)) GROUP BY rt0.c2, vt0.c0, rt0.c1;
SELECT rt0.c2, vt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0, rt0.c1;
SELECT ALL rt0.c4, rt0.c1, rt0.c0, rt0.c3, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c4, rt0.c1, rt0.c0, rt0.c3, rt0.c2;
SELECT rt0.c4, rt0.c1, rt0.c0, rt0.c3, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c4, rt0.c1, rt0.c0, rt0.c3, rt0.c2 HAVING COUNT(rt0.c2) UNION ALL SELECT ALL rt0.c4, rt0.c1, rt0.c0, rt0.c3, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c4, rt0.c1, rt0.c0, rt0.c3, rt0.c2 HAVING (NOT (COUNT(rt0.c2))) UNION ALL SELECT rt0.c4, rt0.c1, rt0.c0, rt0.c3, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c4, rt0.c1, rt0.c0, rt0.c3, rt0.c2 HAVING ((COUNT(rt0.c2)) ISNULL);
SELECT ALL rt0.c4, rt0.c1, rt0.c0, rt0.c3, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c4, rt0.c1, rt0.c0, rt0.c3, rt0.c2;
SELECT rt0.c4, rt0.c1, rt0.c0, rt0.c3, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c4, rt0.c1, rt0.c0, rt0.c3, rt0.c2 HAVING COUNT(rt0.c2) UNION ALL SELECT ALL rt0.c4, rt0.c1, rt0.c0, rt0.c3, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c4, rt0.c1, rt0.c0, rt0.c3, rt0.c2 HAVING (NOT (COUNT(rt0.c2))) UNION ALL SELECT rt0.c4, rt0.c1, rt0.c0, rt0.c3, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c4, rt0.c1, rt0.c0, rt0.c3, rt0.c2 HAVING ((COUNT(rt0.c2)) ISNULL);
SELECT ALL rt0.c4, rt0.c1, rt0.c0, rt0.c3, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c4, rt0.c1, rt0.c0, rt0.c3, rt0.c2;
SELECT ALL rt0.c4 FROM vt0, rt0;
SELECT rt0.c4 FROM vt0, rt0 WHERE (load_extension(vt0.c0) COLLATE RTRIM) UNION ALL SELECT rt0.c4 FROM vt0, rt0 WHERE ((NOT (load_extension(vt0.c0) COLLATE RTRIM))) UNION ALL SELECT ALL rt0.c4 FROM vt0, rt0 WHERE (((load_extension(vt0.c0) COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c3, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c3, rt0.c2 FROM rt0 WHERE (((+ (rt0.c4)) IN ())) UNION SELECT DISTINCT rt0.c1, rt0.c3, rt0.c2 FROM rt0 WHERE ((NOT (((+ (rt0.c4)) IN ())))) UNION SELECT DISTINCT rt0.c1, rt0.c3, rt0.c2 FROM rt0 WHERE (((((+ (rt0.c4)) IN ())) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c3, rt0.c2 FROM rt0;
SELECT rt0.c3, rt0.c1, rt0.c0, rt0.c4 FROM rt0 FULL OUTER JOIN vt0 ON CAST(vt0.c0 AS REAL) COLLATE BINARY GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c4;
SELECT rt0.c3, rt0.c1, rt0.c0, rt0.c4 FROM rt0 FULL OUTER JOIN vt0 ON CAST(vt0.c0 AS REAL) COLLATE BINARY WHERE ((CASE WHEN rt0.c2 THEN 0.10165635076762358 ELSE rt0.c4 END IN ())) GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c4 UNION SELECT rt0.c3, rt0.c1, rt0.c0, rt0.c4 FROM rt0 FULL OUTER JOIN vt0 ON CAST(vt0.c0 AS REAL) COLLATE BINARY WHERE ((NOT ((CASE WHEN rt0.c2 THEN 0.10165635076762358 ELSE rt0.c4 END IN ())))) GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c4 UNION SELECT rt0.c3, rt0.c1, rt0.c0, rt0.c4 FROM rt0 FULL OUTER JOIN vt0 ON CAST(vt0.c0 AS REAL) COLLATE BINARY WHERE ((((CASE WHEN rt0.c2 THEN 0.10165635076762358 ELSE rt0.c4 END IN ())) ISNULL)) GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c4;
SELECT rt0.c3, rt0.c1, rt0.c0, rt0.c4 FROM rt0 FULL OUTER JOIN vt0 ON CAST(vt0.c0 AS REAL) COLLATE BINARY GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c4;
SELECT rt0.c2, rt0.c4, rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c3, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c4, rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c3, rt0.c1, rt0.c0 HAVING ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c3)))AND(MIN(AVG(rt0.c1)))) UNION ALL SELECT rt0.c2, rt0.c4, rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c3, rt0.c1, rt0.c0 HAVING (NOT (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c3)))AND(MIN(AVG(rt0.c1)))))) UNION ALL SELECT rt0.c2, rt0.c4, rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c3, rt0.c1, rt0.c0 HAVING ((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c3)))AND(MIN(AVG(rt0.c1))))) ISNULL);
SELECT * FROM vt0, rt0;
SELECT * FROM vt0, rt0 WHERE (JULIANDAY(json_object(vt0.c0, rt0.c2), NULL, rt0.c0, CAST(rt0.c2 AS TEXT), CAST(vt0.c0 AS NUMERIC))) UNION ALL SELECT * FROM vt0, rt0 WHERE ((NOT (JULIANDAY(json_object(vt0.c0, rt0.c2), NULL, rt0.c0, CAST(rt0.c2 AS TEXT), CAST(vt0.c0 AS NUMERIC))))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE (((JULIANDAY(json_object(vt0.c0, rt0.c2), NULL, rt0.c0, CAST(rt0.c2 AS TEXT), CAST(vt0.c0 AS NUMERIC))) ISNULL));
SELECT * FROM vt0, rt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE ((((CAST(rt0.c1 AS TEXT)))!=((((vt0.c0)>(rt0.c2)))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT ((((CAST(rt0.c1 AS TEXT)))!=((((vt0.c0)>(rt0.c2)))))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((((((CAST(rt0.c1 AS TEXT)))<>((((vt0.c0)>(rt0.c2)))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT rt0.c1, rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c3;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, rt0.c3 FROM rt0 WHERE (((((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c2)))AND('F*')))AND(rt0.c2)))IS NOT(rt0.c4))) GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c3 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0, rt0.c3 FROM rt0 WHERE ((NOT (((((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c2)))AND('F*')))AND(rt0.c2)))IS NOT(rt0.c4))))) GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c3 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0, rt0.c3 FROM rt0 WHERE (((((((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c2)))AND('F*')))AND(rt0.c2)))IS NOT(rt0.c4))) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c3;
SELECT rt0.c1, rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c3;
SELECT ALL rt0.c4, rt0.c3, rt0.c1, vt0.c0, rt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON ((((1831506781)AND((rt0.c0 IN ()))))OR(2.53093574E8)) GROUP BY rt0.c4, rt0.c3, rt0.c1, vt0.c0, rt0.c0;
SELECT ALL rt0.c4, rt0.c3, rt0.c1, vt0.c0, rt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON ((((1831506781)AND((rt0.c0 IN ()))))OR(2.53093574E8)) GROUP BY rt0.c4, rt0.c3, rt0.c1, vt0.c0, rt0.c0 HAVING ((MIN(rt0.c1))|(((vt0.c0)*(SUM(MIN(MIN(rt0.c4))))))) UNION ALL SELECT rt0.c4, rt0.c3, rt0.c1, vt0.c0, rt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON ((((1831506781)AND((rt0.c0 IN ()))))OR(2.53093574E8)) GROUP BY rt0.c4, rt0.c3, rt0.c1, vt0.c0, rt0.c0 HAVING (NOT (((MIN(rt0.c1))|(((vt0.c0)*(SUM(MIN(MIN(rt0.c4))))))))) UNION ALL SELECT ALL rt0.c4, rt0.c3, rt0.c1, vt0.c0, rt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON ((((1831506781)AND((rt0.c0 IN ()))))OR(2.53093574E8)) GROUP BY rt0.c4, rt0.c3, rt0.c1, vt0.c0, rt0.c0 HAVING ((((MIN(rt0.c1))|(((vt0.c0)*(SUM(MIN(MIN(rt0.c4)))))))) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (CASE WHEN ((0.587446133708714)&(vt0.c0)) THEN (+ (vt0.c0)) END) UNION ALL SELECT * FROM vt0 WHERE ((NOT (CASE WHEN ((0.587446133708714)&(vt0.c0)) THEN (+ (vt0.c0)) END))) UNION ALL SELECT * FROM vt0 WHERE (((CASE WHEN ((0.587446133708714)&(vt0.c0)) THEN (+ (vt0.c0)) END) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt0 ON (((- (rt0.c4))) BETWEEN (TRIM(rt0.c4)) AND (CASE rt0.c0  WHEN rt0.c3 THEN NULL WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END));
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt0 ON (((- (rt0.c4))) BETWEEN (TRIM(rt0.c4)) AND (CASE rt0.c0  WHEN rt0.c3 THEN NULL WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END)) WHERE (CASE WHEN (rt0.c3 IN ()) THEN ((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c4)))OR(rt0.c1)))OR(rt0.c4)) END) UNION SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt0 ON (((- (rt0.c4))) BETWEEN (TRIM(rt0.c4)) AND (CASE rt0.c0  WHEN rt0.c3 THEN NULL WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END)) WHERE ((NOT (CASE WHEN (rt0.c3 IN ()) THEN ((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c4)))OR(rt0.c1)))OR(rt0.c4)) END))) UNION SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt0 ON (((- (rt0.c4))) BETWEEN (TRIM(rt0.c4)) AND (CASE rt0.c0  WHEN rt0.c3 THEN NULL WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END)) WHERE (((CASE WHEN (rt0.c3 IN ()) THEN ((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c4)))OR(rt0.c1)))OR(rt0.c4)) END) ISNULL));
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt0 ON (((- (rt0.c4))) BETWEEN (TRIM(rt0.c4)) AND (CASE rt0.c0  WHEN rt0.c3 THEN NULL WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END));
SELECT ALL rt0.c3, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c4;
SELECT rt0.c3, rt0.c0, rt0.c4 FROM rt0 WHERE (CASE ((rt0.c4)&(rt0.c0))  WHEN ((rt0.c3)%(rt0.c0)) THEN rt0.c3 COLLATE NOCASE WHEN ((rt0.c4)<<(rt0.c1)) THEN ((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c4)))OR('6~n\n')))OR(rt0.c4)) WHEN x'' THEN ((rt0.c1) ISNULL) ELSE (NOT (rt0.c4)) END) GROUP BY rt0.c3, rt0.c0, rt0.c4 UNION SELECT rt0.c3, rt0.c0, rt0.c4 FROM rt0 WHERE ((NOT (CASE ((rt0.c4)&(rt0.c0))  WHEN ((rt0.c3)%(rt0.c0)) THEN rt0.c3 COLLATE NOCASE WHEN ((rt0.c4)<<(rt0.c1)) THEN ((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c4)))OR('6~n\n')))OR(rt0.c4)) WHEN x'' THEN ((rt0.c1) ISNULL) ELSE (NOT (rt0.c4)) END))) GROUP BY rt0.c3, rt0.c0, rt0.c4 UNION SELECT ALL rt0.c3, rt0.c0, rt0.c4 FROM rt0 WHERE (((CASE ((rt0.c4)&(rt0.c0))  WHEN ((rt0.c3)%(rt0.c0)) THEN rt0.c3 COLLATE NOCASE WHEN ((rt0.c4)<<(rt0.c1)) THEN ((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c4)))OR('6~n\n')))OR(rt0.c4)) WHEN x'' THEN ((rt0.c1) ISNULL) ELSE (NOT (rt0.c4)) END) ISNULL)) GROUP BY rt0.c3, rt0.c0, rt0.c4;
SELECT ALL rt0.c3, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c4;
SELECT ALL rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c3;
SELECT rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c3 HAVING MIN(CAST(COUNT(rt0.c0) AS REAL)) UNION ALL SELECT ALL rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c3 HAVING (NOT (MIN(CAST(COUNT(rt0.c0) AS REAL)))) UNION ALL SELECT rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c3 HAVING ((MIN(CAST(COUNT(rt0.c0) AS REAL))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((((rt0.c3)+(rt0.c0))) NOT BETWEEN (CAST(rt0.c1 AS REAL)) AND (((((((((rt0.c3)OR(rt0.c0)))OR(rt0.c3)))OR(rt0.c3)))AND(rt0.c1))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((((rt0.c3)+(rt0.c0))) NOT BETWEEN (CAST(rt0.c1 AS REAL)) AND (((((((((rt0.c3)OR(rt0.c0)))OR(rt0.c3)))OR(rt0.c3)))AND(rt0.c1))))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((rt0.c3)+(rt0.c0))) NOT BETWEEN (CAST(rt0.c1 AS REAL)) AND (((((((((rt0.c3)OR(rt0.c0)))OR(rt0.c3)))OR(rt0.c3)))AND(rt0.c1))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c3 FROM rt0 WHERE ((((rt0.c2 IN (rt0.c3, '\nME\0#D')))||(((rt0.c2) IS TRUE)))) UNION SELECT DISTINCT rt0.c1, rt0.c3 FROM rt0 WHERE ((NOT ((((rt0.c2 IN (rt0.c3, '\nME\0#D')))||(((rt0.c2) IS TRUE)))))) UNION SELECT DISTINCT rt0.c1, rt0.c3 FROM rt0 WHERE ((((((rt0.c2 IN (rt0.c3, '\nME\0#D')))||(((rt0.c2) IS TRUE)))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c3 FROM rt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (CAST(((vt0.c0)=(vt0.c0)) AS REAL)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CAST(((vt0.c0)==(vt0.c0)) AS REAL)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST(((vt0.c0)=(vt0.c0)) AS REAL)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING SUM((COUNT(*) IN ())) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (SUM((COUNT(*) IN ())))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM((COUNT(*) IN ()))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING SUM((COUNT(*) IN ())) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (SUM((COUNT(*) IN ())))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM((COUNT(*) IN ()))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c0, rt0.c3 FROM vt0, rt0;
SELECT ALL rt0.c0, rt0.c3 FROM vt0, rt0 WHERE ((('2095153321') IS TRUE)) UNION ALL SELECT ALL rt0.c0, rt0.c3 FROM vt0, rt0 WHERE ((NOT ((('2095153321') IS TRUE)))) UNION ALL SELECT ALL rt0.c0, rt0.c3 FROM vt0, rt0 WHERE ((((('2095153321') IS TRUE)) ISNULL));
SELECT rt0.c0, rt0.c3 FROM vt0, rt0;
SELECT DISTINCT rt0.c2, rt0.c4 FROM vt0 INNER JOIN rt0 ON ((NULLIF(rt0.c3, rt0.c2)) NOT NULL);
SELECT DISTINCT rt0.c2, rt0.c4 FROM vt0 INNER JOIN rt0 ON ((NULLIF(rt0.c3, rt0.c2)) NOT NULL) WHERE (((((((rt0.c1) BETWEEN (0xffffffffdc535b70) AND (rt0.c2)))OR(((((rt0.c2)AND(rt0.c0)))AND(rt0.c4)))))AND(((((((((rt0.c3)OR(rt0.c4)))AND(rt0.c4)))AND(rt0.c4)))OR(vt0.c0))))) UNION SELECT DISTINCT rt0.c2, rt0.c4 FROM vt0 NOT INDEXED INNER JOIN rt0 ON ((NULLIF(rt0.c3, rt0.c2)) NOT NULL) WHERE ((NOT (((((((rt0.c1) BETWEEN (0Xffffffffdc535b70) AND (rt0.c2)))OR(((((rt0.c2)AND(rt0.c0)))AND(rt0.c4)))))AND(((((((((rt0.c3)OR(rt0.c4)))AND(rt0.c4)))AND(rt0.c4)))OR(vt0.c0))))))) UNION SELECT DISTINCT rt0.c2, rt0.c4 FROM vt0 INNER JOIN rt0 ON ((NULLIF(rt0.c3, rt0.c2)) NOT NULL) WHERE (((((((((rt0.c1) BETWEEN (0xffffffffdc535b70) AND (rt0.c2)))OR(((((rt0.c2)AND(rt0.c0)))AND(rt0.c4)))))AND(((((((((rt0.c3)OR(rt0.c4)))AND(rt0.c4)))AND(rt0.c4)))OR(vt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c4 FROM vt0 INNER JOIN rt0 ON ((NULLIF(rt0.c3, rt0.c2)) NOT NULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((((((('')AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) IN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((((((('')AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) IN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((((((('')AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) IN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((LIKELY(DISTINCT rt0.c4))>(CAST(COUNT(GROUP_CONCAT(AVG(rt0.c4))) AS BLOB))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (((LIKELY(DISTINCT rt0.c4))>(CAST(COUNT(GROUP_CONCAT(AVG(rt0.c4))) AS BLOB))))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((((LIKELY(DISTINCT rt0.c4))>(CAST(COUNT(GROUP_CONCAT(AVG(rt0.c4))) AS BLOB)))) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (TYPEOF((((vt0.c0))<((vt0.c0))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (TYPEOF((((vt0.c0))<((vt0.c0))))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((TYPEOF((((vt0.c0))<((vt0.c0))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CASE DATE(rt0.c1, rt0.c3, rt0.c4, '1540000581', rt0.c4)  WHEN rt0.c0 THEN UNLIKELY(rt0.c0) END) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CASE DATE(rt0.c1, rt0.c3, rt0.c4, '1540000581', rt0.c4)  WHEN rt0.c0 THEN UNLIKELY(rt0.c0) END))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CASE DATE(rt0.c1, rt0.c3, rt0.c4, '1540000581', rt0.c4)  WHEN rt0.c0 THEN UNLIKELY(rt0.c0) END) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0, rt0.c4 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c4;
SELECT ALL rt0.c0, rt0.c4 FROM vt0, rt0 WHERE (((NULLIF(rt0.c2, rt0.c0))>(x''))) GROUP BY rt0.c0, rt0.c4 UNION SELECT ALL rt0.c0, rt0.c4 FROM vt0, rt0 WHERE ((NOT (((NULLIF(rt0.c2, rt0.c0))>(x''))))) GROUP BY rt0.c0, rt0.c4 UNION SELECT ALL rt0.c0, rt0.c4 FROM vt0, rt0 WHERE (((((NULLIF(rt0.c2, rt0.c0))>(x''))) ISNULL)) GROUP BY rt0.c0, rt0.c4;
SELECT rt0.c0, rt0.c4 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c4;
SELECT ALL rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0;
SELECT rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0 HAVING (((COUNT(SUM(rt0.c0)))>>(rt0.c0)) IN (SUM(COUNT(rt0.c4)))) UNION ALL SELECT ALL rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0 HAVING (NOT ((((COUNT(SUM(rt0.c0)))>>(rt0.c0)) IN (SUM(COUNT(rt0.c4)))))) UNION ALL SELECT rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0 HAVING (((((COUNT(SUM(rt0.c0)))>>(rt0.c0)) IN (SUM(COUNT(rt0.c4))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((('' IN ()) IN ())) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((('' IN ()) IN ())))) UNION ALL SELECT * FROM rt0 WHERE ((((('' IN ()) IN ())) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c3, rt0.c2, vt0.c0, rt0.c4 FROM vt0, rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c3, rt0.c2, vt0.c0, rt0.c4 FROM vt0, rt0 WHERE (CASE rt0.c4 COLLATE BINARY  WHEN LIKELY(rt0.c3) THEN (~ (rt0.c0)) ELSE LOWER(DISTINCT vt0.c0) END) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c3, rt0.c2, vt0.c0, rt0.c4 FROM vt0, rt0 WHERE ((NOT (CASE rt0.c4 COLLATE BINARY  WHEN LIKELY(rt0.c3) THEN (~ (rt0.c0)) ELSE LOWER(DISTINCT vt0.c0) END))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c3, rt0.c2, vt0.c0, rt0.c4 FROM vt0, rt0 WHERE (((CASE rt0.c4 COLLATE BINARY  WHEN LIKELY(rt0.c3) THEN (~ (rt0.c0)) ELSE LOWER(DISTINCT vt0.c0) END) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c3, rt0.c2, vt0.c0, rt0.c4 FROM vt0, rt0;
SELECT vt0.c0 FROM rt0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM rt0, vt0 WHERE (((((('gikG+P')&(vt0.c0))))>=((0.4791105416688076)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM rt0, vt0 WHERE ((NOT (((((('gikG+P')&(vt0.c0))))>=((0.4791105416688076)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM rt0, vt0 WHERE (((((((('gikG+P')&(vt0.c0))))>=((0.4791105416688076)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM rt0, vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c4, rt0.c3, vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c4, rt0.c3, vt0.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c4, rt0.c3, vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c4, rt0.c3, vt0.c0, rt0.c2, rt0.c0, rt0.c1 HAVING INSTR(TOTAL(0.12694319727625247), SUM(vt0.c0)) UNION ALL SELECT ALL rt0.c4, rt0.c3, vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c4, rt0.c3, vt0.c0, rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (INSTR(TOTAL(0.12694319727625247), SUM(vt0.c0)))) UNION ALL SELECT rt0.c4, rt0.c3, vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c4, rt0.c3, vt0.c0, rt0.c2, rt0.c0, rt0.c1 HAVING ((INSTR(TOTAL(0.12694319727625247), SUM(vt0.c0))) ISNULL);
SELECT ALL rt0.c4, rt0.c3, vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c4, rt0.c3, vt0.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c4, rt0.c3, vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c4, rt0.c3, vt0.c0, rt0.c2, rt0.c0, rt0.c1 HAVING INSTR(TOTAL(0.12694319727625247), SUM(vt0.c0)) UNION ALL SELECT ALL rt0.c4, rt0.c3, vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c4, rt0.c3, vt0.c0, rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (INSTR(TOTAL(0.12694319727625247), SUM(vt0.c0)))) UNION ALL SELECT rt0.c4, rt0.c3, vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c4, rt0.c3, vt0.c0, rt0.c2, rt0.c0, rt0.c1 HAVING ((INSTR(TOTAL(0.12694319727625247), SUM(vt0.c0))) ISNULL);
SELECT ALL rt0.c4, rt0.c3, vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c4, rt0.c3, vt0.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CASE WHEN NULL THEN rt0.c3 ELSE rt0.c1 END COLLATE NOCASE) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (CASE WHEN NULL THEN rt0.c3 ELSE rt0.c1 END COLLATE NOCASE))) UNION ALL SELECT * FROM rt0 WHERE (((CASE WHEN NULL THEN rt0.c3 ELSE rt0.c1 END COLLATE NOCASE) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (((((rt0.c1)%(rt0.c0))) NOT BETWEEN (rt0.c4) AND (CASE WHEN rt0.c4 THEN rt0.c4 END))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (((((rt0.c1)%(rt0.c0))) NOT BETWEEN (rt0.c4) AND (CASE WHEN rt0.c4 THEN rt0.c4 END))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((((((rt0.c1)%(rt0.c0))) NOT BETWEEN (rt0.c4) AND (CASE WHEN rt0.c4 THEN rt0.c4 END))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0) IS FALSE)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0) IS FALSE)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0) IS FALSE)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(COUNT(vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(COUNT(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(COUNT(vt0.c0))) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (TYPEOF(((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (TYPEOF(((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((TYPEOF(((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0 NATURAL JOIN rt0;
SELECT DISTINCT * FROM vt0 NATURAL JOIN rt0 WHERE ((((((rt0.c3)) BETWEEN ((rt0.c4)) AND (('F?Q/T<')))) IS TRUE)) UNION SELECT DISTINCT * FROM vt0 NATURAL JOIN rt0 WHERE ((NOT ((((((rt0.c3)) BETWEEN ((rt0.c4)) AND (('F?Q/T<')))) IS TRUE)))) UNION SELECT DISTINCT * FROM vt0 NATURAL JOIN rt0 WHERE ((((((((rt0.c3)) BETWEEN ((rt0.c4)) AND (('F?Q/T<')))) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM vt0 NATURAL JOIN rt0;
SELECT rt0.c2, rt0.c3, rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c4, rt0.c0;
SELECT ALL rt0.c2, rt0.c3, rt0.c4, rt0.c0 FROM rt0 WHERE (((((((rt0.c4)AND(rt0.c2)))AND(rt0.c4))) IS FALSE)) GROUP BY rt0.c2, rt0.c3, rt0.c4, rt0.c0 UNION SELECT rt0.c2, rt0.c3, rt0.c4, rt0.c0 FROM rt0 WHERE ((NOT (((((((rt0.c4)AND(rt0.c2)))AND(rt0.c4))) IS FALSE)))) GROUP BY rt0.c2, rt0.c3, rt0.c4, rt0.c0 UNION SELECT rt0.c2, rt0.c3, rt0.c4, rt0.c0 FROM rt0 WHERE (((((((((rt0.c4)AND(rt0.c2)))AND(rt0.c4))) IS FALSE)) ISNULL)) GROUP BY rt0.c2, rt0.c3, rt0.c4, rt0.c0;
SELECT rt0.c2, rt0.c3, rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c4, rt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING SUM((NOT (MIN(0.3559008553494807)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (SUM((NOT (MIN(0.3559008553494807)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM((NOT (MIN(0.3559008553494807))))) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c4 FROM rt0, vt0;
SELECT rt0.c1, rt0.c2, rt0.c4 FROM rt0, vt0 NOT INDEXED WHERE (((vt0.c0) NOT NULL)) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c4 FROM rt0, vt0 WHERE ((NOT (((vt0.c0) NOT NULL)))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c4 FROM rt0, vt0 WHERE (((((vt0.c0) NOT NULL)) ISNULL));
SELECT ALL rt0.c1, rt0.c2, rt0.c4 FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (CAST(rt0.c4 AS INTEGER)) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (CAST(rt0.c4 AS INTEGER)))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((CAST(rt0.c4 AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT rt0.c3 FROM vt0, rt0 GROUP BY rt0.c3;
SELECT rt0.c3 FROM vt0, rt0 WHERE (((((((((((rt0.c2)<(rt0.c4)))AND(CAST(vt0.c0 AS BLOB))))AND((rt0.c2 IN ()))))AND((~ (rt0.c3)))))OR(((rt0.c2)AND(rt0.c2))))) GROUP BY rt0.c3 UNION SELECT rt0.c3 FROM vt0, rt0 WHERE ((NOT (((((((((((rt0.c2)<(rt0.c4)))AND(CAST(vt0.c0 AS BLOB))))AND((rt0.c2 IN ()))))AND((~ (rt0.c3)))))OR(((rt0.c2)AND(rt0.c2))))))) GROUP BY rt0.c3 UNION SELECT rt0.c3 FROM vt0, rt0 WHERE (((((((((((((rt0.c2)<(rt0.c4)))AND(CAST(vt0.c0 AS BLOB))))AND((rt0.c2 IN ()))))AND((~ (rt0.c3)))))OR(((rt0.c2)AND(rt0.c2))))) ISNULL)) GROUP BY rt0.c3;
SELECT rt0.c3 FROM vt0, rt0 GROUP BY rt0.c3;
SELECT rt0.c4, rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c3, rt0.c2, rt0.c0;
SELECT rt0.c4, rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c3, rt0.c2, rt0.c0 HAVING MIN(GROUP_CONCAT(rt0.c4)) UNION ALL SELECT ALL rt0.c4, rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c3, rt0.c2, rt0.c0 HAVING (NOT (MIN(GROUP_CONCAT(rt0.c4)))) UNION ALL SELECT ALL rt0.c4, rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c3, rt0.c2, rt0.c0 HAVING ((MIN(GROUP_CONCAT(rt0.c4))) ISNULL);
SELECT ALL * FROM rt0, vt0;
SELECT * FROM rt0, vt0 WHERE (CAST((((rt0.c2))>((rt0.c3))) AS BLOB)) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((NOT (CAST((((rt0.c2))>((rt0.c3))) AS BLOB)))) UNION ALL SELECT * FROM rt0, vt0 WHERE (((CAST((((rt0.c2))>((rt0.c3))) AS BLOB)) ISNULL));
SELECT ALL * FROM rt0, vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (NULL) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL rt0.c4, rt0.c3, vt0.c0, rt0.c1, rt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c4, rt0.c3, vt0.c0, rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c4, rt0.c3, vt0.c0, rt0.c1, rt0.c0, rt0.c2 FROM vt0, rt0 WHERE ((((rt0.c4 IN (rt0.c1))) ISNULL)) GROUP BY rt0.c4, rt0.c3, vt0.c0, rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c4, rt0.c3, vt0.c0, rt0.c1, rt0.c0, rt0.c2 FROM vt0, rt0 WHERE ((NOT ((((rt0.c4 IN (rt0.c1))) ISNULL)))) GROUP BY rt0.c4, rt0.c3, vt0.c0, rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c4, rt0.c3, vt0.c0, rt0.c1, rt0.c0, rt0.c2 FROM vt0, rt0 WHERE ((((((rt0.c4 IN (rt0.c1))) ISNULL)) ISNULL)) GROUP BY rt0.c4, rt0.c3, vt0.c0, rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c4, rt0.c3, vt0.c0, rt0.c1, rt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c4, rt0.c3, vt0.c0, rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c4, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c3, rt0.c0;
SELECT ALL rt0.c1, rt0.c4, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c3, rt0.c0 HAVING ((rt0.c1) NOT BETWEEN (rt0.c2) AND (TOTAL(TOTAL(rt0.c1)))) COLLATE NOCASE UNION ALL SELECT rt0.c1, rt0.c4, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c3, rt0.c0 HAVING (NOT (((rt0.c1) NOT BETWEEN (rt0.c2) AND (TOTAL(TOTAL(rt0.c1)))) COLLATE NOCASE)) UNION ALL SELECT rt0.c1, rt0.c4, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c3, rt0.c0 HAVING ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (TOTAL(TOTAL(rt0.c1)))) COLLATE NOCASE) ISNULL);
SELECT ALL rt0.c2 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 WHERE (CASE ((rt0.c0)>=(rt0.c2))  WHEN (~ (rt0.c0)) THEN CAST(rt0.c1 AS BLOB) ELSE (- (rt0.c0)) END) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (CASE ((rt0.c0)>=(rt0.c2))  WHEN (~ (rt0.c0)) THEN CAST(rt0.c1 AS BLOB) ELSE (- (rt0.c0)) END))) UNION ALL SELECT rt0.c2 FROM rt0 WHERE (((CASE ((rt0.c0)>=(rt0.c2))  WHEN (~ (rt0.c0)) THEN CAST(rt0.c1 AS BLOB) ELSE (- (rt0.c0)) END) ISNULL));
SELECT ALL rt0.c2 FROM rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (0xffffffffaddefb38) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (0Xffffffffaddefb38))) UNION SELECT DISTINCT * FROM vt0 WHERE (((0Xffffffffaddefb38) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((CAST(vt0.c0 AS TEXT))OR(((vt0.c0)AND(vt0.c0)))))OR((NOT (vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((CAST(vt0.c0 AS TEXT))OR(((vt0.c0)AND(vt0.c0)))))OR((NOT (vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((((CAST(vt0.c0 AS TEXT))OR(((vt0.c0)AND(vt0.c0)))))OR((NOT (vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c4;
SELECT rt0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c4 HAVING ((((rt0.c1) IS FALSE)) IS FALSE) UNION ALL SELECT rt0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c4 HAVING (NOT (((((rt0.c1) IS FALSE)) IS FALSE))) UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c4 HAVING ((((((rt0.c1) IS FALSE)) IS FALSE)) ISNULL);
SELECT rt0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c4;
SELECT rt0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c4 HAVING ((((rt0.c1) IS FALSE)) IS FALSE) UNION ALL SELECT rt0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c4 HAVING (NOT (((((rt0.c1) IS FALSE)) IS FALSE))) UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c4 HAVING ((((((rt0.c1) IS FALSE)) IS FALSE)) ISNULL);
SELECT rt0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c4;
SELECT ALL SUM(LIKELIHOOD((rt0.c1 IN ()), 0.9062035303474784)) FROM vt0, rt0 ORDER BY ((((((((((vt0.c0)IS(rt0.c1)))OR(((((rt0.c0)OR(rt0.c4)))AND(0.6292417617840663)))))OR(((((rt0.c1)OR(rt0.c2)))OR(rt0.c3)))))AND(CASE WHEN rt0.c1 THEN rt0.c0 END)))OR((NOT (rt0.c0)))), ((CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c3 END) BETWEEN (TRIM(rt0.c1)) AND (CAST(rt0.c0 AS TEXT)));
SELECT ALL rt0.c1, rt0.c4 FROM vt0 NOT INDEXED RIGHT OUTER JOIN rt0 ON TYPEOF(((((vt0.c0)OR(0.04020239040822238)))AND(vt0.c0)));
SELECT ALL rt0.c1, rt0.c4 FROM vt0 RIGHT OUTER JOIN rt0 ON TYPEOF(((((vt0.c0)OR(0.04020239040822238)))AND(vt0.c0))) WHERE ((((rt0.c4)) NOT BETWEEN ((((vt0.c0) ISNULL))) AND ((rt0.c3 COLLATE NOCASE)))) UNION ALL SELECT ALL rt0.c1, rt0.c4 FROM vt0 RIGHT OUTER JOIN rt0 ON TYPEOF(((((vt0.c0)OR(0.04020239040822238)))AND(vt0.c0))) WHERE ((NOT ((((rt0.c4)) NOT BETWEEN ((((vt0.c0) ISNULL))) AND ((rt0.c3 COLLATE NOCASE)))))) UNION ALL SELECT ALL rt0.c1, rt0.c4 FROM vt0 RIGHT OUTER JOIN rt0 ON TYPEOF(((((vt0.c0)OR(0.04020239040822238)))AND(vt0.c0))) WHERE ((((((rt0.c4)) NOT BETWEEN ((((vt0.c0) ISNULL))) AND ((rt0.c3 COLLATE NOCASE)))) ISNULL));
SELECT ALL rt0.c1, rt0.c4 FROM vt0 NOT INDEXED RIGHT OUTER JOIN rt0 ON TYPEOF(((((vt0.c0)OR(0.04020239040822238)))AND(vt0.c0)));
SELECT DISTINCT rt0.c0, vt0.c0 FROM vt0, rt0;
SELECT DISTINCT rt0.c0, vt0.c0 FROM vt0, rt0 WHERE (rt0.c0) UNION SELECT DISTINCT rt0.c0, vt0.c0 FROM vt0, rt0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT rt0.c0, vt0.c0 FROM vt0, rt0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT rt0.c0, vt0.c0 FROM vt0, rt0;
SELECT rt0.c1, vt0.c0, rt0.c0, rt0.c4, rt0.c2, rt0.c3 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c0, rt0.c4, rt0.c2, rt0.c3;
SELECT rt0.c1, vt0.c0, rt0.c0, rt0.c4, rt0.c2, rt0.c3 FROM rt0, vt0 WHERE ((((((rt0.c4)+(rt0.c1)), ((rt0.c4)|('')), ((rt0.c3)IS NOT(rt0.c1))))<>((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c4)))AND('-1016036956')), ((((rt0.c3)OR(vt0.c0)))OR(rt0.c4)), (((rt0.c1))<((rt0.c0))))))) GROUP BY rt0.c1, vt0.c0, rt0.c0, rt0.c4, rt0.c2, rt0.c3 UNION SELECT rt0.c1, vt0.c0, rt0.c0, rt0.c4, rt0.c2, rt0.c3 FROM rt0, vt0 WHERE ((NOT ((((((rt0.c4)+(rt0.c1)), ((rt0.c4)|('')), ((rt0.c3)IS NOT(rt0.c1))))!=((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c4)))AND('-1016036956')), ((((rt0.c3)OR(vt0.c0)))OR(rt0.c4)), (((rt0.c1))<((rt0.c0))))))))) GROUP BY rt0.c1, vt0.c0, rt0.c0, rt0.c4, rt0.c2, rt0.c3 UNION SELECT ALL rt0.c1, vt0.c0, rt0.c0, rt0.c4, rt0.c2, rt0.c3 FROM rt0, vt0 WHERE ((((((((rt0.c4)+(rt0.c1)), ((rt0.c4)|('')), ((rt0.c3)IS NOT(rt0.c1))))<>((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c4)))AND('-1016036956')), ((((rt0.c3)OR(vt0.c0)))OR(rt0.c4)), (((rt0.c1))<((rt0.c0))))))) ISNULL)) GROUP BY rt0.c1, vt0.c0, rt0.c0, rt0.c4, rt0.c2, rt0.c3;
SELECT rt0.c1, vt0.c0, rt0.c0, rt0.c4, rt0.c2, rt0.c3 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c0, rt0.c4, rt0.c2, rt0.c3;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c0 UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c0 UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM vt0, rt0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE (LIKELY((+ (0x6152363)))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE ((NOT (LIKELY((+ (0x6152363)))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE (((LIKELY((+ (0X6152363)))) ISNULL));
SELECT rt0.c2, rt0.c1, rt0.c0 FROM vt0, rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (NULL) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM vt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c0)))) AND ((0x433c5eac)))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c1)) NOT BETWEEN ((((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c0)))) AND ((0X433c5eac)))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c0)))) AND ((0X433c5eac)))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c4;
SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c4 HAVING ((((rt0.c4) IS TRUE))GLOB(CASE WHEN rt0.c4 THEN NULL END)) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c4 HAVING (NOT (((((rt0.c4) IS TRUE))GLOB(CASE WHEN rt0.c4 THEN NULL END)))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c4 HAVING ((((((rt0.c4) IS TRUE))GLOB(CASE WHEN rt0.c4 THEN NULL END))) ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c4;
SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c4 HAVING ((((rt0.c4) IS TRUE))GLOB(CASE WHEN rt0.c4 THEN NULL END)) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c4 HAVING (NOT (((((rt0.c4) IS TRUE))GLOB(CASE WHEN rt0.c4 THEN NULL END)))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c4 HAVING ((((((rt0.c4) IS TRUE))GLOB(CASE WHEN rt0.c4 THEN NULL END))) ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c4;
SELECT * FROM rt0, vt0;
SELECT ALL * FROM rt0, vt0 WHERE ((~ (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((NOT ((~ (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))))))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((((~ (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) ISNULL));
SELECT * FROM rt0, vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR('1398570804')))OR('W75楔U]*')))/(vt0.c0))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR('1398570804')))OR('W75楔U]*')))/(vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR('1398570804')))OR('W75楔U]*')))/(vt0.c0))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (json_remove((+ (vt0.c0)), ((vt0.c0)/(vt0.c0)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (json_remove((+ (vt0.c0)), ((vt0.c0)/(vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((json_remove((+ (vt0.c0)), ((vt0.c0)/(vt0.c0)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL rt0.c0, rt0.c3, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c4;
SELECT ALL rt0.c0, rt0.c3, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c4 HAVING MAX(((((MAX(MIN(rt0.c2)))AND(rt0.c2)))OR(rt0.c1))) UNION ALL SELECT rt0.c0, rt0.c3, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c4 HAVING (NOT (MAX(((((MAX(MIN(rt0.c2)))AND(rt0.c2)))OR(rt0.c1))))) UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c4 HAVING ((MAX(((((MAX(MIN(rt0.c2)))AND(rt0.c2)))OR(rt0.c1)))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((((((((~ (rt0.c4)))AND(((rt0.c1) NOTNULL))))AND(((rt0.c2)LIKE(NULL)))))OR((x'a46a' IN ()))))AND(((rt0.c3)IS(rt0.c4))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((((((((((~ (rt0.c4)))AND(((rt0.c1) NOTNULL))))AND(((rt0.c2)LIKE(NULL)))))OR((x'a46a' IN ()))))AND(((rt0.c3)IS(rt0.c4))))))) UNION ALL SELECT * FROM rt0 WHERE ((((((((((((~ (rt0.c4)))AND(((rt0.c1) NOTNULL))))AND(((rt0.c2)LIKE(NULL)))))OR((x'a46a' IN ()))))AND(((rt0.c3)IS(rt0.c4))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c3, rt0.c2, rt0.c4, vt0.c0, rt0.c0 FROM vt0, rt0;
SELECT DISTINCT rt0.c1, rt0.c3, rt0.c2, rt0.c4, vt0.c0, rt0.c0 FROM vt0, rt0 WHERE ((((((rt0.c2))<>((vt0.c0))))IS NOT(((x'2032') NOT BETWEEN (rt0.c2) AND (rt0.c1))))) UNION SELECT DISTINCT rt0.c1, rt0.c3, rt0.c2, rt0.c4, vt0.c0, rt0.c0 FROM vt0, rt0 WHERE ((NOT ((((((rt0.c2))!=((vt0.c0))))IS NOT(((x'2032') NOT BETWEEN (rt0.c2) AND (rt0.c1))))))) UNION SELECT DISTINCT rt0.c1, rt0.c3, rt0.c2, rt0.c4, vt0.c0, rt0.c0 FROM vt0, rt0 WHERE ((((((((rt0.c2))<>((vt0.c0))))IS NOT(((x'2032') NOT BETWEEN (rt0.c2) AND (rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c3, rt0.c2, rt0.c4, vt0.c0, rt0.c0 FROM vt0, rt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CAST(((vt0.c0) IS FALSE) AS INTEGER)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CAST(((vt0.c0) IS FALSE) AS INTEGER)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((CAST(((vt0.c0) IS FALSE) AS INTEGER)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING COUNT(TOTAL(GROUP_CONCAT(rt0.c0))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (COUNT(TOTAL(GROUP_CONCAT(rt0.c0))))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((COUNT(TOTAL(GROUP_CONCAT(rt0.c0)))) ISNULL);
SELECT rt0.c2, rt0.c4, vt0.c0, rt0.c3 FROM rt0, vt0;
SELECT ALL rt0.c2, rt0.c4, vt0.c0, rt0.c3 FROM rt0, vt0 WHERE (((rt0.c1) ISNULL)) UNION ALL SELECT ALL rt0.c2, rt0.c4, vt0.c0, rt0.c3 FROM rt0, vt0 WHERE ((NOT (((rt0.c1) ISNULL)))) UNION ALL SELECT ALL rt0.c2, rt0.c4, vt0.c0, rt0.c3 FROM rt0, vt0 WHERE (((((rt0.c1) ISNULL)) ISNULL));
SELECT rt0.c2, rt0.c4, vt0.c0, rt0.c3 FROM rt0, vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c1) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (x'') GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (x''))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((x'') ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c1, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4;
SELECT ALL rt0.c1, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4 HAVING ((((AVG(rt0.c3))AND(TOTAL(rt0.c0))))AND(((COUNT(*))IS NOT(rt0.c0)))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4 HAVING (NOT (((((AVG(rt0.c3))AND(TOTAL(rt0.c0))))AND(((COUNT(*))IS NOT(rt0.c0)))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4 HAVING ((((((AVG(rt0.c3))AND(TOTAL(rt0.c0))))AND(((COUNT(*))IS NOT(rt0.c0))))) ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4;
SELECT ALL rt0.c1, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4 HAVING ((((AVG(rt0.c3))AND(TOTAL(rt0.c0))))AND(((COUNT(*))IS NOT(rt0.c0)))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4 HAVING (NOT (((((AVG(rt0.c3))AND(TOTAL(rt0.c0))))AND(((COUNT(*))IS NOT(rt0.c0)))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4 HAVING ((((((AVG(rt0.c3))AND(TOTAL(rt0.c0))))AND(((COUNT(*))IS NOT(rt0.c0))))) ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4;
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON ((rt0.c0 COLLATE BINARY) NOT BETWEEN (rt0.c1 COLLATE NOCASE) AND (rt0.c4 COLLATE RTRIM));
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON ((rt0.c0 COLLATE BINARY) NOT BETWEEN (rt0.c1 COLLATE NOCASE) AND (rt0.c4 COLLATE RTRIM)) WHERE ((((rt0.c4)|(rt0.c4)) IN (CASE rt0.c4  WHEN rt0.c2 THEN rt0.c3 END))) UNION ALL SELECT * FROM vt0 CROSS JOIN rt0 ON ((rt0.c0 COLLATE BINARY) NOT BETWEEN (rt0.c1 COLLATE NOCASE) AND (rt0.c4 COLLATE RTRIM)) WHERE ((NOT ((((rt0.c4)|(rt0.c4)) IN (CASE rt0.c4  WHEN rt0.c2 THEN rt0.c3 END))))) UNION ALL SELECT ALL * FROM vt0 CROSS JOIN rt0 ON ((rt0.c0 COLLATE BINARY) NOT BETWEEN (rt0.c1 COLLATE NOCASE) AND (rt0.c4 COLLATE RTRIM)) WHERE ((((((rt0.c4)|(rt0.c4)) IN (CASE rt0.c4  WHEN rt0.c2 THEN rt0.c3 END))) ISNULL));
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON ((rt0.c0 COLLATE BINARY) NOT BETWEEN (rt0.c1 COLLATE NOCASE) AND (rt0.c4 COLLATE RTRIM));
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (TYPEOF(DISTINCT CAST(vt0.c0 AS INTEGER))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (TYPEOF(DISTINCT CAST(vt0.c0 AS INTEGER))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((TYPEOF(DISTINCT CAST(vt0.c0 AS INTEGER))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0)%(vt0.c0))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0)%(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0)%(vt0.c0))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT((vt0.c0 IN (vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT((vt0.c0 IN (vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT((vt0.c0 IN (vt0.c0)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT((vt0.c0 IN (vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT((vt0.c0 IN (vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT((vt0.c0 IN (vt0.c0)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0, rt0.c2, rt0.c1, rt0.c3, rt0.c0, rt0.c4 FROM rt0, vt0;
SELECT ALL vt0.c0, rt0.c2, rt0.c1, rt0.c3, rt0.c0, rt0.c4 FROM rt0, vt0 WHERE (0xffffffffb67d70cb) UNION ALL SELECT ALL vt0.c0, rt0.c2, rt0.c1, rt0.c3, rt0.c0, rt0.c4 FROM rt0, vt0 WHERE ((NOT (0Xffffffffb67d70cb))) UNION ALL SELECT ALL vt0.c0, rt0.c2, rt0.c1, rt0.c3, rt0.c0, rt0.c4 FROM rt0, vt0 WHERE (((0Xffffffffb67d70cb) ISNULL));
SELECT vt0.c0, rt0.c2, rt0.c1, rt0.c3, rt0.c0, rt0.c4 FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE ((~ ((NOT (rt0.c3))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT ((~ ((NOT (rt0.c3))))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((((~ ((NOT (rt0.c3))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((vt0.c0))>=((vt0.c0))) COLLATE BINARY) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0))>=((vt0.c0))) COLLATE BINARY))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c0))>=((vt0.c0))) COLLATE BINARY) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c1;
SELECT rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c1 HAVING TRIM(AVG(TOTAL(MIN(TOTAL(TOTAL(rt0.c3)))))) UNION ALL SELECT ALL rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c1 HAVING (NOT (TRIM(AVG(TOTAL(MIN(TOTAL(TOTAL(rt0.c3)))))))) UNION ALL SELECT rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c1 HAVING ((TRIM(AVG(TOTAL(MIN(TOTAL(TOTAL(rt0.c3))))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (((((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c2)))&(rt0.c0 COLLATE RTRIM))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c2)))&(rt0.c0 COLLATE RTRIM))))) UNION ALL SELECT * FROM rt0 WHERE (((((((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c2)))&(rt0.c0 COLLATE RTRIM))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL rt0.c2, rt0.c0, vt0.c0, rt0.c3 FROM vt0 NATURAL JOIN rt0 GROUP BY rt0.c2, rt0.c0, vt0.c0, rt0.c3;
SELECT ALL rt0.c2, rt0.c0, vt0.c0, rt0.c3 FROM vt0 NATURAL JOIN rt0 WHERE (json_remove(((rt0.c3)<=(rt0.c1)), ((vt0.c0)&(rt0.c0)))) GROUP BY rt0.c2, rt0.c0, vt0.c0, rt0.c3 UNION SELECT ALL rt0.c2, rt0.c0, vt0.c0, rt0.c3 FROM vt0 NATURAL JOIN rt0 WHERE ((NOT (json_remove(((rt0.c3)<=(rt0.c1)), ((vt0.c0)&(rt0.c0)))))) GROUP BY rt0.c2, rt0.c0, vt0.c0, rt0.c3 UNION SELECT ALL rt0.c2, rt0.c0, vt0.c0, rt0.c3 FROM vt0 NATURAL JOIN rt0 WHERE (((json_remove(((rt0.c3)<=(rt0.c1)), ((vt0.c0)&(rt0.c0)))) ISNULL)) GROUP BY rt0.c2, rt0.c0, vt0.c0, rt0.c3;
SELECT ALL rt0.c2, rt0.c0, vt0.c0, rt0.c3 FROM vt0 NATURAL JOIN rt0 GROUP BY rt0.c2, rt0.c0, vt0.c0, rt0.c3;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (~ (((vt0.c0) BETWEEN (vt0.c0) AND (TOTAL(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((~ (((vt0.c0) BETWEEN (vt0.c0) AND (TOTAL(vt0.c0))))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((~ (((vt0.c0) BETWEEN (vt0.c0) AND (TOTAL(vt0.c0)))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (~ (((vt0.c0) BETWEEN (vt0.c0) AND (TOTAL(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((~ (((vt0.c0) BETWEEN (vt0.c0) AND (TOTAL(vt0.c0))))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((~ (((vt0.c0) BETWEEN (vt0.c0) AND (TOTAL(vt0.c0)))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c2, vt0.c0, rt0.c4, rt0.c0, rt0.c3, rt0.c1 FROM vt0, rt0;
SELECT ALL rt0.c2, vt0.c0, rt0.c4, rt0.c0, rt0.c3, rt0.c1 FROM vt0, rt0 WHERE (NULL) UNION ALL SELECT rt0.c2, vt0.c0, rt0.c4, rt0.c0, rt0.c3, rt0.c1 FROM vt0, rt0 WHERE ((NOT (NULL))) UNION ALL SELECT ALL rt0.c2, vt0.c0, rt0.c4, rt0.c0, rt0.c3, rt0.c1 FROM vt0, rt0 WHERE (((NULL) ISNULL));
SELECT rt0.c2, vt0.c0, rt0.c4, rt0.c0, rt0.c3, rt0.c1 FROM vt0, rt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE ((x'' IN ())) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT ((x'' IN ())))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((((x'' IN ())) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE (CASE WHEN ((rt0.c1)&(rt0.c4)) THEN rt0.c2 ELSE (rt0.c1 IN ()) END) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (CASE WHEN ((rt0.c1)&(rt0.c4)) THEN rt0.c2 ELSE (rt0.c1 IN ()) END))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE (((CASE WHEN ((rt0.c1)&(rt0.c4)) THEN rt0.c2 ELSE (rt0.c1 IN ()) END) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c3, vt0.c0, rt0.c2, rt0.c1, rt0.c4 FROM vt0, rt0 GROUP BY rt0.c3, vt0.c0, rt0.c2, rt0.c1, rt0.c4;
SELECT rt0.c3, vt0.c0, rt0.c2, rt0.c1, rt0.c4 FROM vt0, rt0 GROUP BY rt0.c3, vt0.c0, rt0.c2, rt0.c1, rt0.c4 HAVING ((COUNT(*)) NOT BETWEEN ((~ (rt0.c3))) AND (MIN('r~>鳆'))) UNION ALL SELECT rt0.c3, vt0.c0, rt0.c2, rt0.c1, rt0.c4 FROM vt0, rt0 GROUP BY rt0.c3, vt0.c0, rt0.c2, rt0.c1, rt0.c4 HAVING (NOT (((COUNT(*)) NOT BETWEEN ((~ (rt0.c3))) AND (MIN('r~>鳆'))))) UNION ALL SELECT ALL rt0.c3, vt0.c0, rt0.c2, rt0.c1, rt0.c4 FROM vt0, rt0 GROUP BY rt0.c3, vt0.c0, rt0.c2, rt0.c1, rt0.c4 HAVING ((((COUNT(*)) NOT BETWEEN ((~ (rt0.c3))) AND (MIN('r~>鳆')))) ISNULL);
SELECT ALL rt0.c3, vt0.c0, rt0.c2, rt0.c1, rt0.c4 FROM vt0, rt0 GROUP BY rt0.c3, vt0.c0, rt0.c2, rt0.c1, rt0.c4;
SELECT rt0.c3, vt0.c0, rt0.c2, rt0.c1, rt0.c4 FROM vt0, rt0 GROUP BY rt0.c3, vt0.c0, rt0.c2, rt0.c1, rt0.c4 HAVING ((COUNT(*)) NOT BETWEEN ((~ (rt0.c3))) AND (MIN('r~>鳆'))) UNION ALL SELECT rt0.c3, vt0.c0, rt0.c2, rt0.c1, rt0.c4 FROM vt0, rt0 GROUP BY rt0.c3, vt0.c0, rt0.c2, rt0.c1, rt0.c4 HAVING (NOT (((COUNT(*)) NOT BETWEEN ((~ (rt0.c3))) AND (MIN('r~>鳆'))))) UNION ALL SELECT ALL rt0.c3, vt0.c0, rt0.c2, rt0.c1, rt0.c4 FROM vt0, rt0 GROUP BY rt0.c3, vt0.c0, rt0.c2, rt0.c1, rt0.c4 HAVING ((((COUNT(*)) NOT BETWEEN ((~ (rt0.c3))) AND (MIN('r~>鳆')))) ISNULL);
SELECT ALL rt0.c3, vt0.c0, rt0.c2, rt0.c1, rt0.c4 FROM vt0, rt0 GROUP BY rt0.c3, vt0.c0, rt0.c2, rt0.c1, rt0.c4;
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON ((((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c2))) NOTNULL);
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON ((((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c2))) NOTNULL) WHERE (((((vt0.c0)/(rt0.c3)))!=((+ (rt0.c2))))) UNION ALL SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON ((((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c2))) NOTNULL) WHERE ((NOT (((((vt0.c0)/(rt0.c3)))!=((+ (rt0.c2))))))) UNION ALL SELECT * FROM rt0 FULL OUTER JOIN vt0 ON ((((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c2))) NOTNULL) WHERE (((((((vt0.c0)/(rt0.c3)))<>((+ (rt0.c2))))) ISNULL));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON ((((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c2))) NOTNULL);
SELECT DISTINCT rt0.c3, rt0.c2, rt0.c4, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c3, rt0.c2, rt0.c4, rt0.c1, rt0.c0 FROM rt0 WHERE ((~ (TYPEOF(NULL)))) UNION SELECT DISTINCT rt0.c3, rt0.c2, rt0.c4, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((~ (TYPEOF(NULL)))))) UNION SELECT DISTINCT rt0.c3, rt0.c2, rt0.c4, rt0.c1, rt0.c0 FROM rt0 WHERE ((((~ (TYPEOF(NULL)))) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c2, rt0.c4, rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c4, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c4, rt0.c0;
SELECT ALL rt0.c4, rt0.c0 FROM rt0, vt0 WHERE ((('0.4791105416688076' COLLATE RTRIM) NOT BETWEEN (((rt0.c1)<(rt0.c0))) AND (CASE NULL  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c2 END))) GROUP BY rt0.c4, rt0.c0 UNION SELECT ALL rt0.c4, rt0.c0 FROM rt0, vt0 WHERE ((NOT ((('0.4791105416688076' COLLATE RTRIM) NOT BETWEEN (((rt0.c1)<(rt0.c0))) AND (CASE NULL  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c2 END))))) GROUP BY rt0.c4, rt0.c0 UNION SELECT ALL rt0.c4, rt0.c0 FROM rt0, vt0 WHERE ((((('0.4791105416688076' COLLATE RTRIM) NOT BETWEEN (((rt0.c1)<(rt0.c0))) AND (CASE NULL  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c2 END))) ISNULL)) GROUP BY rt0.c4, rt0.c0;
SELECT rt0.c4, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c4, rt0.c0;
SELECT rt0.c4, rt0.c2, rt0.c3, rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c4, rt0.c2, rt0.c3, rt0.c0, rt0.c1, vt0.c0;
SELECT rt0.c4, rt0.c2, rt0.c3, rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c4, rt0.c2, rt0.c3, rt0.c0, rt0.c1, vt0.c0 HAVING MAX(AVG(rt0.c3)) UNION ALL SELECT ALL rt0.c4, rt0.c2, rt0.c3, rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c4, rt0.c2, rt0.c3, rt0.c0, rt0.c1, vt0.c0 HAVING (NOT (MAX(AVG(rt0.c3)))) UNION ALL SELECT ALL rt0.c4, rt0.c2, rt0.c3, rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c4, rt0.c2, rt0.c3, rt0.c0, rt0.c1, vt0.c0 HAVING ((MAX(AVG(rt0.c3))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((CAST(x'' AS INTEGER) IN ())) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((CAST(x'' AS INTEGER) IN ())))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((CAST(x'' AS INTEGER) IN ())) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT rt0.c3, rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0;
SELECT DISTINCT rt0.c3, rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0 WHERE (CAST(((((rt0.c4)AND(rt0.c4)))AND(rt0.c3)) AS REAL)) UNION SELECT DISTINCT rt0.c3, rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0 WHERE ((NOT (CAST(((((rt0.c4)AND(rt0.c4)))AND(rt0.c3)) AS REAL)))) UNION SELECT DISTINCT rt0.c3, rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0 WHERE (((CAST(((((rt0.c4)AND(rt0.c4)))AND(rt0.c3)) AS REAL)) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (0X1) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (0x1))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((0X1) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING x'ca31014a' UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (x'ca31014a')) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((x'ca31014a') ISNULL);
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING x'ca31014a' UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (x'ca31014a')) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((x'ca31014a') ISNULL);
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((CASE 0.7372873371393759  WHEN rt0.c3 THEN rt0.c3 WHEN x'' THEN rt0.c2 WHEN '1373793285' THEN rt0.c1 ELSE rt0.c3 END)<(rt0.c4 COLLATE BINARY))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((CASE 0.7372873371393759  WHEN rt0.c3 THEN rt0.c3 WHEN x'' THEN rt0.c2 WHEN '1373793285' THEN rt0.c1 ELSE rt0.c3 END)<(rt0.c4 COLLATE BINARY))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((CASE 0.7372873371393759  WHEN rt0.c3 THEN rt0.c3 WHEN x'' THEN rt0.c2 WHEN '1373793285' THEN rt0.c1 ELSE rt0.c3 END)<(rt0.c4 COLLATE BINARY))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c4, rt0.c2, rt0.c1, vt0.c0 FROM rt0, vt0;
SELECT DISTINCT rt0.c4, rt0.c2, rt0.c1, vt0.c0 FROM rt0, vt0 WHERE ((((vt0.c0 IN ())) NOT BETWEEN (((rt0.c2)<>(vt0.c0))) AND (rt0.c3))) UNION SELECT DISTINCT rt0.c4, rt0.c2, rt0.c1, vt0.c0 FROM rt0, vt0 WHERE ((NOT ((((vt0.c0 IN ())) NOT BETWEEN (((rt0.c2)<>(vt0.c0))) AND (rt0.c3))))) UNION SELECT DISTINCT rt0.c4, rt0.c2, rt0.c1, vt0.c0 FROM rt0, vt0 WHERE ((((((vt0.c0 IN ())) NOT BETWEEN (((rt0.c2)<>(vt0.c0))) AND (rt0.c3))) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c2, rt0.c1, vt0.c0 FROM rt0, vt0;
SELECT rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE (NULLIF(((rt0.c0) IS FALSE), rt0.c1 COLLATE BINARY)) GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE ((NOT (NULLIF(((rt0.c0) IS FALSE), rt0.c1 COLLATE BINARY)))) GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE (((NULLIF(((rt0.c0) IS FALSE), rt0.c1 COLLATE BINARY)) ISNULL)) GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING json_array(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), MAX(SUM(SUM(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (json_array(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), MAX(SUM(SUM(vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((json_array(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), MAX(SUM(SUM(vt0.c0))))) ISNULL);
SELECT rt0.c1, rt0.c4, rt0.c0, rt0.c2, rt0.c3 FROM rt0, vt0;
SELECT ALL rt0.c1, rt0.c4, rt0.c0, rt0.c2, rt0.c3 FROM rt0, vt0 WHERE ((((((x'', x'', rt0.c4))<=((rt0.c0, rt0.c3, vt0.c0))))GLOB((((rt0.c3, x'', rt0.c4, rt0.c0, rt0.c3))=((vt0.c0, vt0.c0, rt0.c0, rt0.c2, vt0.c0)))))) UNION ALL SELECT rt0.c1, rt0.c4, rt0.c0, rt0.c2, rt0.c3 FROM rt0, vt0 WHERE ((NOT ((((((x'', x'', rt0.c4))<=((rt0.c0, rt0.c3, vt0.c0))))GLOB((((rt0.c3, x'', rt0.c4, rt0.c0, rt0.c3))==((vt0.c0, vt0.c0, rt0.c0, rt0.c2, vt0.c0)))))))) UNION ALL SELECT rt0.c1, rt0.c4, rt0.c0, rt0.c2, rt0.c3 FROM rt0, vt0 WHERE ((((((((x'', x'', rt0.c4))<=((rt0.c0, rt0.c3, vt0.c0))))GLOB((((rt0.c3, x'', rt0.c4, rt0.c0, rt0.c3))==((vt0.c0, vt0.c0, rt0.c0, rt0.c2, vt0.c0)))))) ISNULL));
SELECT rt0.c1, rt0.c4, rt0.c0, rt0.c2, rt0.c3 FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (((((CAST(rt0.c0 AS REAL))AND((((NULL))>=((rt0.c2))))))AND(((rt0.c2) NOTNULL)))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (((((CAST(rt0.c0 AS REAL))AND((((NULL))>=((rt0.c2))))))AND(((rt0.c2) NOTNULL)))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((((((CAST(rt0.c0 AS REAL))AND((((NULL))>=((rt0.c2))))))AND(((rt0.c2) NOTNULL)))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT rt0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c4;
SELECT rt0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c4 FROM rt0 WHERE (rt0.c1) GROUP BY rt0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c4 UNION SELECT rt0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c4 FROM rt0 WHERE ((NOT (rt0.c1))) GROUP BY rt0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c4 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c4 FROM rt0 WHERE (((rt0.c1) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c4;
SELECT rt0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c4;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM(MAX(TOTAL(1.566061898E9))))-((x'' IN ()))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((SUM(MAX(TOTAL(1.566061898E9))))-((x'' IN ()))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((SUM(MAX(TOTAL(1.566061898E9))))-((x'' IN ())))) ISNULL);
SELECT * FROM rt0, vt0;
SELECT * FROM rt0, vt0 WHERE ((- (((rt0.c1) NOTNULL)))) UNION ALL SELECT * FROM rt0, vt0 WHERE ((NOT ((- (((rt0.c1) NOTNULL)))))) UNION ALL SELECT * FROM rt0, vt0 WHERE ((((- (((rt0.c1) NOTNULL)))) ISNULL));
SELECT * FROM rt0, vt0;
SELECT DISTINCT rt0.c3, rt0.c1, rt0.c4, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c3, rt0.c1, rt0.c4, rt0.c2 FROM rt0 WHERE ((((rt0.c0) NOT NULL) IN ())) UNION SELECT DISTINCT rt0.c3, rt0.c1, rt0.c4, rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c0) NOT NULL) IN ())))) UNION SELECT DISTINCT rt0.c3, rt0.c1, rt0.c4, rt0.c2 FROM rt0 NOT INDEXED WHERE ((((((rt0.c0) NOT NULL) IN ())) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c1, rt0.c4, rt0.c2 FROM rt0;
SELECT rt0.c2, rt0.c4, rt0.c1, rt0.c3, rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c4, rt0.c1, rt0.c3, rt0.c0, vt0.c0;
SELECT ALL rt0.c2, rt0.c4, rt0.c1, rt0.c3, rt0.c0, vt0.c0 FROM vt0, rt0 WHERE ((((CAST(rt0.c4 AS BLOB)))>((CAST(rt0.c4 AS NUMERIC))))) GROUP BY rt0.c2, rt0.c4, rt0.c1, rt0.c3, rt0.c0, vt0.c0 UNION SELECT ALL rt0.c2, rt0.c4, rt0.c1, rt0.c3, rt0.c0, vt0.c0 FROM vt0, rt0 WHERE ((NOT ((((CAST(rt0.c4 AS BLOB)))>((CAST(rt0.c4 AS NUMERIC))))))) GROUP BY rt0.c2, rt0.c4, rt0.c1, rt0.c3, rt0.c0, vt0.c0 UNION SELECT ALL rt0.c2, rt0.c4, rt0.c1, rt0.c3, rt0.c0, vt0.c0 FROM vt0, rt0 WHERE ((((((CAST(rt0.c4 AS BLOB)))>((CAST(rt0.c4 AS NUMERIC))))) ISNULL)) GROUP BY rt0.c2, rt0.c4, rt0.c1, rt0.c3, rt0.c0, vt0.c0;
SELECT rt0.c2, rt0.c4, rt0.c1, rt0.c3, rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c4, rt0.c1, rt0.c3, rt0.c0, vt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, rt0.c4 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c4;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, rt0.c4 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c4 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0, rt0.c4 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c4 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0, rt0.c4 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c4 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c0, rt0.c4 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c4;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, rt0.c4 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c4 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0, rt0.c4 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c4 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0, rt0.c4 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c4 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c0, rt0.c4 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c4;
SELECT ALL * FROM rt0 NOT INDEXED;
SELECT ALL * FROM rt0 WHERE ((((rt0.c2) BETWEEN ('1099986775') AND (NULL)) IN ())) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((rt0.c2) BETWEEN ('1099986775') AND (NULL)) IN ())))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((((rt0.c2) BETWEEN ('1099986775') AND (NULL)) IN ())) ISNULL));
SELECT ALL * FROM rt0 NOT INDEXED;
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt0 ON NULL;
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt0 ON NULL WHERE (CAST((- (rt0.c1)) AS INTEGER)) UNION SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt0 ON NULL WHERE ((NOT (CAST((- (rt0.c1)) AS INTEGER)))) UNION SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt0 ON NULL WHERE (((CAST((- (rt0.c1)) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt0 ON NULL;
SELECT rt0.c4, rt0.c0, vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c4, rt0.c0, vt0.c0, rt0.c1;
SELECT ALL rt0.c4, rt0.c0, vt0.c0, rt0.c1 FROM rt0, vt0 WHERE (CASE WHEN (+ (rt0.c4)) THEN MAX(rt0.c2, rt0.c4) END) GROUP BY rt0.c4, rt0.c0, vt0.c0, rt0.c1 UNION SELECT ALL rt0.c4, rt0.c0, vt0.c0, rt0.c1 FROM rt0, vt0 WHERE ((NOT (CASE WHEN (+ (rt0.c4)) THEN MAX(rt0.c2, rt0.c4) END))) GROUP BY rt0.c4, rt0.c0, vt0.c0, rt0.c1 UNION SELECT ALL rt0.c4, rt0.c0, vt0.c0, rt0.c1 FROM rt0, vt0 WHERE (((CASE WHEN (+ (rt0.c4)) THEN MAX(rt0.c2, rt0.c4) END) ISNULL)) GROUP BY rt0.c4, rt0.c0, vt0.c0, rt0.c1;
SELECT rt0.c4, rt0.c0, vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c4, rt0.c0, vt0.c0, rt0.c1;
SELECT ALL vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c1;
SELECT ALL vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c1 HAVING MIN(AVG(TOTAL(MIN(vt0.c0)))) UNION ALL SELECT vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c1 HAVING (NOT (MIN(AVG(TOTAL(MIN(vt0.c0)))))) UNION ALL SELECT ALL vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c1 HAVING ((MIN(AVG(TOTAL(MIN(vt0.c0))))) ISNULL);
SELECT rt0.c3, rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c3, rt0.c0, rt0.c1 FROM rt0 WHERE (((((((rt0.c4)OR(rt0.c2)))OR(rt0.c4))) IS FALSE)) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((((((rt0.c4)OR(rt0.c2)))OR(rt0.c4))) IS FALSE)))) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c1 FROM rt0 WHERE (((((((((rt0.c4)OR(rt0.c2)))OR(rt0.c4))) IS FALSE)) ISNULL));
SELECT rt0.c3, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 NOT INDEXED WHERE (((((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))), vt0.c0 COLLATE RTRIM, ((-495281815) NOT BETWEEN (vt0.c0) AND (vt0.c0))))>((((vt0.c0)IS NOT(vt0.c0)), vt0.c0, ((vt0.c0)*(vt0.c0)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))), vt0.c0 COLLATE RTRIM, ((-495281815) NOT BETWEEN (vt0.c0) AND (vt0.c0))))>((((vt0.c0)IS NOT(vt0.c0)), vt0.c0, ((vt0.c0)*(vt0.c0)))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))), vt0.c0 COLLATE RTRIM, ((-495281815) NOT BETWEEN (vt0.c0) AND (vt0.c0))))>((((vt0.c0)IS NOT(vt0.c0)), vt0.c0, ((vt0.c0)*(vt0.c0)))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (CASE WHEN highlight(vt0.c0, vt0.c0, vt0.c0, vt0.c0) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) END) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN highlight(vt0.c0, vt0.c0, vt0.c0, vt0.c0) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) END))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((CASE WHEN highlight(vt0.c0, vt0.c0, vt0.c0, vt0.c0) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) END) ISNULL)) GROUP BY vt0.c0;
SELECT ALL rt0.c2, rt0.c4, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c3, rt0.c1;
SELECT ALL rt0.c2, rt0.c4, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c3, rt0.c1 HAVING ((((((((MAX(AVG(rt0.c4)))AND((~ (rt0.c3)))))OR(AVG(SUM(AVG(GROUP_CONCAT(rt0.c4)))))))OR(TOTAL(AVG(rt0.c2)))))AND(COUNT(*))) UNION ALL SELECT rt0.c2, rt0.c4, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c3, rt0.c1 HAVING (NOT (((((((((MAX(AVG(rt0.c4)))AND((~ (rt0.c3)))))OR(AVG(SUM(AVG(GROUP_CONCAT(rt0.c4)))))))OR(TOTAL(AVG(rt0.c2)))))AND(COUNT(*))))) UNION ALL SELECT ALL rt0.c2, rt0.c4, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c3, rt0.c1 HAVING ((((((((((MAX(AVG(rt0.c4)))AND((~ (rt0.c3)))))OR(AVG(SUM(AVG(GROUP_CONCAT(rt0.c4)))))))OR(TOTAL(AVG(rt0.c2)))))AND(COUNT(*)))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0) NOTNULL)) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) AND (((vt0.c0)*(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) NOTNULL)) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) AND (((vt0.c0)*(vt0.c0))))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((((vt0.c0) NOTNULL)) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) AND (((vt0.c0)*(vt0.c0))))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1, rt0.c3, vt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON CASE (~ (rt0.c2))  WHEN rt0.c2 COLLATE BINARY THEN (((rt0.c3))>=((vt0.c0))) END;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1, rt0.c3, vt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON CASE (~ (rt0.c2))  WHEN rt0.c2 COLLATE BINARY THEN (((rt0.c3))>=((vt0.c0))) END WHERE ((('2111765923')==(((NULL) BETWEEN (vt0.c0) AND (rt0.c4))))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1, rt0.c3, vt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON CASE (~ (rt0.c2))  WHEN rt0.c2 COLLATE BINARY THEN (((rt0.c3))>=((vt0.c0))) END WHERE ((NOT ((('2111765923')=(((NULL) BETWEEN (vt0.c0) AND (rt0.c4))))))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1, rt0.c3, vt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON CASE (~ (rt0.c2))  WHEN rt0.c2 COLLATE BINARY THEN (((rt0.c3))>=((vt0.c0))) END WHERE ((((('2111765923')=(((NULL) BETWEEN (vt0.c0) AND (rt0.c4))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1, rt0.c3, vt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON CASE (~ (rt0.c2))  WHEN rt0.c2 COLLATE BINARY THEN (((rt0.c3))>=((vt0.c0))) END;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 WHERE (((rt0.c2 COLLATE BINARY)&((rt0.c0 IN (rt0.c4, rt0.c0))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 WHERE ((NOT (((rt0.c2 COLLATE BINARY)&((rt0.c0 IN (rt0.c4, rt0.c0))))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 WHERE (((((rt0.c2 COLLATE BINARY)&((rt0.c0 IN (rt0.c4, rt0.c0))))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c0 UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c0 UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, rt0.c4, vt0.c0, rt0.c3 FROM rt0, vt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, rt0.c4, vt0.c0, rt0.c3 FROM rt0, vt0 WHERE ((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((((NULL)+(rt0.c4)))))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2, rt0.c4, vt0.c0, rt0.c3 FROM rt0, vt0 WHERE ((NOT ((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((((NULL)+(rt0.c4)))))))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2, rt0.c4, vt0.c0, rt0.c3 FROM rt0, vt0 WHERE ((((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((((NULL)+(rt0.c4)))))) ISNULL));
SELECT ALL rt0.c1, rt0.c0, rt0.c2, rt0.c4, vt0.c0, rt0.c3 FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (((((rt0.c0) IS TRUE))*(((rt0.c0)|(rt0.c2))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (((((rt0.c0) IS TRUE))*(((rt0.c0)|(rt0.c2))))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((((((rt0.c0) IS TRUE))*(((rt0.c0)|(rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT ALL rt0.c3, rt0.c1, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c4;
SELECT rt0.c3, rt0.c1, rt0.c0, rt0.c4 FROM rt0 WHERE (((((rt0.c0)/(rt0.c4)))IS NOT((rt0.c3 IN (rt0.c4))))) GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c4 UNION SELECT ALL rt0.c3, rt0.c1, rt0.c0, rt0.c4 FROM rt0 WHERE ((NOT (((((rt0.c0)/(rt0.c4)))IS NOT((rt0.c3 IN (rt0.c4))))))) GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c4 UNION SELECT ALL rt0.c3, rt0.c1, rt0.c0, rt0.c4 FROM rt0 WHERE (((((((rt0.c0)/(rt0.c4)))IS NOT((rt0.c3 IN (rt0.c4))))) ISNULL)) GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c4;
SELECT ALL rt0.c3, rt0.c1, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c4;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MIN(CASE vt0.c0  WHEN vt0.c0 THEN MAX(MIN(MIN(vt0.c0))) END) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MIN(CASE vt0.c0  WHEN vt0.c0 THEN MAX(MIN(MIN(vt0.c0))) END))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN(CASE vt0.c0  WHEN vt0.c0 THEN MAX(MIN(MIN(vt0.c0))) END)) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (UNLIKELY(((vt0.c0)*(vt0.c0)))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (UNLIKELY(((vt0.c0)*(vt0.c0)))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((UNLIKELY(((vt0.c0)*(vt0.c0)))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0 INNER JOIN rt0 ON ((CASE rt0.c4  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c4 WHEN vt0.c0 THEN rt0.c2 END) NOT BETWEEN (((rt0.c0)*(rt0.c3))) AND (rt0.c2 COLLATE RTRIM));
SELECT DISTINCT * FROM vt0 INNER JOIN rt0 ON ((CASE rt0.c4  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c4 WHEN vt0.c0 THEN rt0.c2 END) NOT BETWEEN (((rt0.c0)*(rt0.c3))) AND (rt0.c2 COLLATE RTRIM)) WHERE (CAST(rt0.c2 AS INTEGER)) UNION SELECT DISTINCT * FROM vt0 INNER JOIN rt0 ON ((CASE rt0.c4  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c4 WHEN vt0.c0 THEN rt0.c2 END) NOT BETWEEN (((rt0.c0)*(rt0.c3))) AND (rt0.c2 COLLATE RTRIM)) WHERE ((NOT (CAST(rt0.c2 AS INTEGER)))) UNION SELECT DISTINCT * FROM vt0 INNER JOIN rt0 ON ((CASE rt0.c4  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c4 WHEN vt0.c0 THEN rt0.c2 END) NOT BETWEEN (((rt0.c0)*(rt0.c3))) AND (rt0.c2 COLLATE RTRIM)) WHERE (((CAST(rt0.c2 AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM vt0 INNER JOIN rt0 ON ((CASE rt0.c4  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c4 WHEN vt0.c0 THEN rt0.c2 END) NOT BETWEEN (((rt0.c0)*(rt0.c3))) AND (rt0.c2 COLLATE RTRIM));
SELECT rt0.c2, rt0.c3, rt0.c0, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c4, rt0.c1;
SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c4, rt0.c1 FROM rt0 WHERE (CASE ((rt0.c1)>>(50271226))  WHEN ((((rt0.c3)OR(rt0.c3)))AND(rt0.c4)) THEN ((rt0.c0) IS FALSE) WHEN ((rt0.c2)&(rt0.c0)) THEN ((((rt0.c2)OR(rt0.c3)))OR(NULL)) WHEN ((rt0.c0) IS FALSE) THEN 'X3' WHEN (((2.53093574E8, rt0.c0, rt0.c0))<=((rt0.c2, rt0.c0, rt0.c0))) THEN (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3))) WHEN CASE WHEN rt0.c0 THEN rt0.c1 END THEN (~ (rt0.c1)) END) GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c4, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c4, rt0.c1 FROM rt0 WHERE ((NOT (CASE ((rt0.c1)>>(50271226))  WHEN ((((rt0.c3)OR(rt0.c3)))AND(rt0.c4)) THEN ((rt0.c0) IS FALSE) WHEN ((rt0.c2)&(rt0.c0)) THEN ((((rt0.c2)OR(rt0.c3)))OR(NULL)) WHEN ((rt0.c0) IS FALSE) THEN 'X3' WHEN (((2.53093574E8, rt0.c0, rt0.c0))<=((rt0.c2, rt0.c0, rt0.c0))) THEN (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3))) WHEN CASE WHEN rt0.c0 THEN rt0.c1 END THEN (~ (rt0.c1)) END))) GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c4, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c4, rt0.c1 FROM rt0 WHERE (((CASE ((rt0.c1)>>(50271226))  WHEN ((((rt0.c3)OR(rt0.c3)))AND(rt0.c4)) THEN ((rt0.c0) IS FALSE) WHEN ((rt0.c2)&(rt0.c0)) THEN ((((rt0.c2)OR(rt0.c3)))OR(NULL)) WHEN ((rt0.c0) IS FALSE) THEN 'X3' WHEN (((2.53093574E8, rt0.c0, rt0.c0))<=((rt0.c2, rt0.c0, rt0.c0))) THEN (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3))) WHEN CASE WHEN rt0.c0 THEN rt0.c1 END THEN (~ (rt0.c1)) END) ISNULL)) GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c4, rt0.c1;
SELECT rt0.c2, rt0.c3, rt0.c0, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c4, rt0.c1;
SELECT rt0.c1, rt0.c0, rt0.c2, rt0.c4 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, rt0.c4;
SELECT rt0.c1, rt0.c0, rt0.c2, rt0.c4 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, rt0.c4 HAVING (GROUP_CONCAT(rt0.c0) IN ()) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2, rt0.c4 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, rt0.c4 HAVING (NOT ((GROUP_CONCAT(rt0.c0) IN ()))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2, rt0.c4 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, rt0.c4 HAVING (((GROUP_CONCAT(rt0.c0) IN ())) ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c2, rt0.c4 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, rt0.c4;
SELECT rt0.c1, rt0.c0, rt0.c2, rt0.c4 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, rt0.c4 HAVING (GROUP_CONCAT(rt0.c0) IN ()) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2, rt0.c4 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, rt0.c4 HAVING (NOT ((GROUP_CONCAT(rt0.c0) IN ()))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2, rt0.c4 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, rt0.c4 HAVING (((GROUP_CONCAT(rt0.c0) IN ())) ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c2, rt0.c4 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, rt0.c4;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((((CAST(vt0.c0 AS INTEGER))AND(CAST(vt0.c0 AS NUMERIC))))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((((CAST(vt0.c0 AS INTEGER))AND(CAST(vt0.c0 AS NUMERIC))))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((((CAST(vt0.c0 AS INTEGER))AND(CAST(vt0.c0 AS NUMERIC))))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE ((((rt0.c0 IN ()))=(CASE rt0.c3  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c4 END))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT ((((rt0.c0 IN ()))=(CASE rt0.c3  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c4 END))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((((((rt0.c0 IN ()))=(CASE rt0.c3  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c4 END))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT rt0.c3, rt0.c2, rt0.c1, rt0.c0, vt0.c0, rt0.c4 FROM rt0, vt0 GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c0, vt0.c0, rt0.c4;
SELECT rt0.c3, rt0.c2, rt0.c1, rt0.c0, vt0.c0, rt0.c4 FROM rt0, vt0 WHERE (json_array(json_remove(rt0.c3, vt0.c0), CASE WHEN vt0.c0 THEN rt0.c2 END)) GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c0, vt0.c0, rt0.c4 UNION SELECT rt0.c3, rt0.c2, rt0.c1, rt0.c0, vt0.c0, rt0.c4 FROM rt0, vt0 WHERE ((NOT (json_array(json_remove(rt0.c3, vt0.c0), CASE WHEN vt0.c0 THEN rt0.c2 END)))) GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c0, vt0.c0, rt0.c4 UNION SELECT rt0.c3, rt0.c2, rt0.c1, rt0.c0, vt0.c0, rt0.c4 FROM rt0, vt0 WHERE (((json_array(json_remove(rt0.c3, vt0.c0), CASE WHEN vt0.c0 THEN rt0.c2 END)) ISNULL)) GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c0, vt0.c0, rt0.c4;
SELECT ALL rt0.c3, rt0.c4, rt0.c0, rt0.c2, rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c3, rt0.c4, rt0.c0, rt0.c2, rt0.c1, vt0.c0;
SELECT rt0.c3, rt0.c4, rt0.c0, rt0.c2, rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c3, rt0.c4, rt0.c0, rt0.c2, rt0.c1, vt0.c0 HAVING ((MIN(vt0.c0)) NOT NULL) UNION ALL SELECT ALL rt0.c3, rt0.c4, rt0.c0, rt0.c2, rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c3, rt0.c4, rt0.c0, rt0.c2, rt0.c1, vt0.c0 HAVING (NOT (((MIN(vt0.c0)) NOT NULL))) UNION ALL SELECT rt0.c3, rt0.c4, rt0.c0, rt0.c2, rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c3, rt0.c4, rt0.c0, rt0.c2, rt0.c1, vt0.c0 HAVING ((((MIN(vt0.c0)) NOT NULL)) ISNULL);
SELECT ALL rt0.c3, rt0.c4, rt0.c0, rt0.c2, rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c3, rt0.c4, rt0.c0, rt0.c2, rt0.c1, vt0.c0;
SELECT rt0.c3, rt0.c4, rt0.c0, rt0.c2, rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c3, rt0.c4, rt0.c0, rt0.c2, rt0.c1, vt0.c0 HAVING ((MIN(vt0.c0)) NOT NULL) UNION ALL SELECT ALL rt0.c3, rt0.c4, rt0.c0, rt0.c2, rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c3, rt0.c4, rt0.c0, rt0.c2, rt0.c1, vt0.c0 HAVING (NOT (((MIN(vt0.c0)) NOT NULL))) UNION ALL SELECT rt0.c3, rt0.c4, rt0.c0, rt0.c2, rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c3, rt0.c4, rt0.c0, rt0.c2, rt0.c1, vt0.c0 HAVING ((((MIN(vt0.c0)) NOT NULL)) ISNULL);
SELECT ALL rt0.c3, rt0.c4, rt0.c0, rt0.c2, rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c3, rt0.c4, rt0.c0, rt0.c2, rt0.c1, vt0.c0;
SELECT MIN(((((rt0.c0)!=(vt0.c0)))<=(CAST(x'' AS BLOB)))) FROM rt0, vt0 ORDER BY CAST(rt0.c3 COLLATE BINARY AS NUMERIC);
SELECT rt0.c3, rt0.c2, rt0.c1, rt0.c4, rt0.c0, vt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((((((rt0.c3)<(rt0.c3)))AND(((rt0.c1)>>(rt0.c4)))))AND('-2082023761')))OR(((((rt0.c2)AND(rt0.c4)))OR(rt0.c3)))))AND((- (rt0.c3))));
SELECT rt0.c3, rt0.c2, rt0.c1, rt0.c4, rt0.c0, vt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((((((rt0.c3)<(rt0.c3)))AND(((rt0.c1)>>(rt0.c4)))))AND('-2082023761')))OR(((((rt0.c2)AND(rt0.c4)))OR(rt0.c3)))))AND((- (rt0.c3)))) WHERE ((((0.5692589952299237)<>(vt0.c0)) IN (((rt0.c3)<(rt0.c1))))) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c1, rt0.c4, rt0.c0, vt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((((((rt0.c3)<(rt0.c3)))AND(((rt0.c1)>>(rt0.c4)))))AND('-2082023761')))OR(((((rt0.c2)AND(rt0.c4)))OR(rt0.c3)))))AND((- (rt0.c3)))) WHERE ((NOT ((((0.5692589952299237)<>(vt0.c0)) IN (((rt0.c3)<(rt0.c1))))))) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c1, rt0.c4, rt0.c0, vt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((((((rt0.c3)<(rt0.c3)))AND(((rt0.c1)>>(rt0.c4)))))AND('-2082023761')))OR(((((rt0.c2)AND(rt0.c4)))OR(rt0.c3)))))AND((- (rt0.c3)))) WHERE ((((((0.5692589952299237)!=(vt0.c0)) IN (((rt0.c3)<(rt0.c1))))) ISNULL));
SELECT rt0.c3, rt0.c2, rt0.c1, rt0.c4, rt0.c0, vt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((((((rt0.c3)<(rt0.c3)))AND(((rt0.c1)>>(rt0.c4)))))AND('-2082023761')))OR(((((rt0.c2)AND(rt0.c4)))OR(rt0.c3)))))AND((- (rt0.c3))));
SELECT DISTINCT rt0.c4, rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c4, rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0 WHERE (((((((rt0.c3)AND(rt0.c4)))OR(x'')))GLOB((rt0.c2 IN ())))) UNION SELECT DISTINCT rt0.c4, rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((((((rt0.c3)AND(rt0.c4)))OR(x'')))GLOB((rt0.c2 IN ())))))) UNION SELECT DISTINCT rt0.c4, rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0 WHERE (((((((((rt0.c3)AND(rt0.c4)))OR(x'')))GLOB((rt0.c2 IN ())))) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, vt0 WHERE (((vt0.c0 COLLATE RTRIM) NOTNULL)) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0, vt0 WHERE ((NOT (((vt0.c0 COLLATE RTRIM) NOTNULL)))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0, vt0 WHERE (((((vt0.c0 COLLATE RTRIM) NOTNULL)) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG(GROUP_CONCAT('T睗兒{T⢍#e')) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (AVG(GROUP_CONCAT('T睗兒{T⢍#e')))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG(GROUP_CONCAT('T睗兒{T⢍#e'))) ISNULL);
SELECT rt0.c0, rt0.c4, rt0.c2, rt0.c3 FROM rt0;
SELECT rt0.c0, rt0.c4, rt0.c2, rt0.c3 FROM rt0 WHERE (((((rt0.c3)<(rt0.c2))) NOTNULL)) UNION ALL SELECT rt0.c0, rt0.c4, rt0.c2, rt0.c3 FROM rt0 WHERE ((NOT (((((rt0.c3)<(rt0.c2))) NOTNULL)))) UNION ALL SELECT ALL rt0.c0, rt0.c4, rt0.c2, rt0.c3 FROM rt0 WHERE (((((((rt0.c3)<(rt0.c2))) NOTNULL)) ISNULL));
SELECT rt0.c0, rt0.c4, rt0.c2, rt0.c3 FROM rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((CAST(vt0.c0 AS REAL))%((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((CAST(vt0.c0 AS REAL))%((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((CAST(vt0.c0 AS REAL))%((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL rt0.c3, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1;
SELECT rt0.c3, rt0.c0, rt0.c1 FROM rt0 WHERE (((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c3)) COLLATE NOCASE) GROUP BY rt0.c3, rt0.c0, rt0.c1 UNION SELECT rt0.c3, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c3)) COLLATE NOCASE))) GROUP BY rt0.c3, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c3, rt0.c0, rt0.c1 FROM rt0 WHERE (((((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c3)) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c3, rt0.c0, rt0.c1;
SELECT ALL rt0.c3, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING rt0.c1 UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (rt0.c1)) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((rt0.c1) ISNULL);
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING rt0.c1 UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (rt0.c1)) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((rt0.c1) ISNULL);
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c0, rt0.c3 FROM rt0;
SELECT rt0.c0, rt0.c3 FROM rt0 WHERE (((((rt0.c1)OR(rt0.c4)))OR('75260733')) COLLATE RTRIM) UNION ALL SELECT rt0.c0, rt0.c3 FROM rt0 WHERE ((NOT (((((rt0.c1)OR(rt0.c4)))OR('75260733')) COLLATE RTRIM))) UNION ALL SELECT rt0.c0, rt0.c3 FROM rt0 NOT INDEXED WHERE (((((((rt0.c1)OR(rt0.c4)))OR('75260733')) COLLATE RTRIM) ISNULL));
SELECT ALL rt0.c0, rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c3, rt0.c2, rt0.c4 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c3, rt0.c2, rt0.c4 FROM rt0 WHERE (((((rt0.c4) IS TRUE))=(((rt0.c0)AND(rt0.c3))))) UNION SELECT DISTINCT rt0.c1, rt0.c3, rt0.c2, rt0.c4 FROM rt0 WHERE ((NOT (((((rt0.c4) IS TRUE))=(((rt0.c0)AND(rt0.c3))))))) UNION SELECT DISTINCT rt0.c1, rt0.c3, rt0.c2, rt0.c4 FROM rt0 WHERE (((((((rt0.c4) IS TRUE))==(((rt0.c0)AND(rt0.c3))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c3, rt0.c2, rt0.c4 FROM rt0;
SELECT ALL rt0.c4, rt0.c2, rt0.c0, rt0.c1, vt0.c0, rt0.c3 FROM rt0, vt0 GROUP BY rt0.c4, rt0.c2, rt0.c0, rt0.c1, vt0.c0, rt0.c3;
SELECT ALL rt0.c4, rt0.c2, rt0.c0, rt0.c1, vt0.c0, rt0.c3 FROM rt0, vt0 WHERE (((CAST(rt0.c3 AS BLOB)) NOT NULL)) GROUP BY rt0.c4, rt0.c2, rt0.c0, rt0.c1, vt0.c0, rt0.c3 UNION SELECT ALL rt0.c4, rt0.c2, rt0.c0, rt0.c1, vt0.c0, rt0.c3 FROM rt0, vt0 WHERE ((NOT (((CAST(rt0.c3 AS BLOB)) NOT NULL)))) GROUP BY rt0.c4, rt0.c2, rt0.c0, rt0.c1, vt0.c0, rt0.c3 UNION SELECT rt0.c4, rt0.c2, rt0.c0, rt0.c1, vt0.c0, rt0.c3 FROM rt0, vt0 WHERE (((((CAST(rt0.c3 AS BLOB)) NOT NULL)) ISNULL)) GROUP BY rt0.c4, rt0.c2, rt0.c0, rt0.c1, vt0.c0, rt0.c3;
SELECT ALL rt0.c4, rt0.c2, rt0.c0, rt0.c1, vt0.c0, rt0.c3 FROM rt0, vt0 GROUP BY rt0.c4, rt0.c2, rt0.c0, rt0.c1, vt0.c0, rt0.c3;
SELECT ALL vt0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c4, rt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON '-1016762268' GROUP BY vt0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c4, rt0.c0;
SELECT ALL vt0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c4, rt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON '-1016762268' GROUP BY vt0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c4, rt0.c0 HAVING AVG(COUNT(SUM(SUM(MAX(rt0.c0))))) UNION ALL SELECT ALL vt0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c4, rt0.c0 FROM rt0 NOT INDEXED RIGHT OUTER JOIN vt0 ON '-1016762268' GROUP BY vt0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c4, rt0.c0 HAVING (NOT (AVG(COUNT(SUM(SUM(MAX(rt0.c0))))))) UNION ALL SELECT ALL vt0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c4, rt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON '-1016762268' GROUP BY vt0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c4, rt0.c0 HAVING ((AVG(COUNT(SUM(SUM(MAX(rt0.c0)))))) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND (((+ (vt0.c0)))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((((vt0.c0)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND (((+ (vt0.c0)))))))) UNION ALL SELECT * FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND (((+ (vt0.c0)))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0;
SELECT DISTINCT rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE (((CAST(vt0.c0 AS TEXT))IS NOT(((rt0.c1)>=(rt0.c3))))) UNION SELECT DISTINCT rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE ((NOT (((CAST(vt0.c0 AS TEXT))IS NOT(((rt0.c1)>=(rt0.c3))))))) UNION SELECT DISTINCT rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE (((((CAST(vt0.c0 AS TEXT))IS NOT(((rt0.c1)>=(rt0.c3))))) ISNULL));
SELECT DISTINCT rt0.c2, vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0;
SELECT rt0.c0, rt0.c2, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c3, rt0.c4;
SELECT rt0.c0, rt0.c2, rt0.c3, rt0.c4 FROM rt0 WHERE ((~ (rt0.c4))) GROUP BY rt0.c0, rt0.c2, rt0.c3, rt0.c4 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c3, rt0.c4 FROM rt0 WHERE ((NOT ((~ (rt0.c4))))) GROUP BY rt0.c0, rt0.c2, rt0.c3, rt0.c4 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c3, rt0.c4 FROM rt0 WHERE ((((~ (rt0.c4))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c3, rt0.c4;
SELECT rt0.c0, rt0.c2, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c3, rt0.c4;
SELECT ALL rt0.c0, rt0.c1, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c4, rt0.c3;
SELECT rt0.c0, rt0.c1, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c4, rt0.c3 HAVING COUNT(*) COLLATE NOCASE UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c4, rt0.c3 HAVING (NOT (COUNT(*) COLLATE NOCASE)) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c4, rt0.c3 HAVING ((COUNT(*) COLLATE NOCASE) ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c4, rt0.c3;
SELECT rt0.c0, rt0.c1, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c4, rt0.c3 HAVING COUNT(*) COLLATE NOCASE UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c4, rt0.c3 HAVING (NOT (COUNT(*) COLLATE NOCASE)) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c4, rt0.c3 HAVING ((COUNT(*) COLLATE NOCASE) ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c4, rt0.c3;
SELECT ALL TOTAL(rt0.c4) FROM rt0 ORDER BY ((CAST(rt0.c2 AS BLOB))IS(((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c3)))) DESC;
SELECT * FROM rt0, vt0;
SELECT * FROM rt0, vt0 WHERE ((+ (CASE rt0.c3  WHEN rt0.c1 THEN rt0.c4 END))) UNION ALL SELECT * FROM rt0, vt0 WHERE ((NOT ((+ (CASE rt0.c3  WHEN rt0.c1 THEN rt0.c4 END))))) UNION ALL SELECT * FROM rt0, vt0 WHERE ((((+ (CASE rt0.c3  WHEN rt0.c1 THEN rt0.c4 END))) ISNULL));
SELECT * FROM rt0, vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0 HAVING SUM(AVG(rt0.c4)) UNION ALL SELECT rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (SUM(AVG(rt0.c4)))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((SUM(AVG(rt0.c4))) ISNULL);
SELECT rt0.c2 FROM rt0;
SELECT rt0.c2 FROM rt0 WHERE (((rt0.c2) IS TRUE)) UNION ALL SELECT rt0.c2 FROM rt0 WHERE ((NOT (((rt0.c2) IS TRUE)))) UNION ALL SELECT rt0.c2 FROM rt0 WHERE (((((rt0.c2) IS TRUE)) ISNULL));
SELECT rt0.c2 FROM rt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE ((((vt0.c0)) BETWEEN ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE vt0.c0 END)) AND ((((((rt0.c1)OR(rt0.c1)))OR(rt0.c4)))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT ((((vt0.c0)) BETWEEN ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE vt0.c0 END)) AND ((((((rt0.c1)OR(rt0.c1)))OR(rt0.c4)))))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((((((vt0.c0)) BETWEEN ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE vt0.c0 END)) AND ((((((rt0.c1)OR(rt0.c1)))OR(rt0.c4)))))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT rt0.c3 FROM vt0 LEFT OUTER JOIN rt0 ON ((vt0.c0)GLOB(rt0.c1)) COLLATE BINARY GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM vt0 LEFT OUTER JOIN rt0 ON ((vt0.c0)GLOB(rt0.c1)) COLLATE BINARY WHERE (((rt0.c0) ISNULL)) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM vt0 LEFT OUTER JOIN rt0 ON ((vt0.c0)GLOB(rt0.c1)) COLLATE BINARY WHERE ((NOT (((rt0.c0) ISNULL)))) GROUP BY rt0.c3 UNION SELECT rt0.c3 FROM vt0 LEFT OUTER JOIN rt0 ON ((vt0.c0)GLOB(rt0.c1)) COLLATE BINARY WHERE (((((rt0.c0) ISNULL)) ISNULL)) GROUP BY rt0.c3;
SELECT rt0.c3 FROM vt0 LEFT OUTER JOIN rt0 ON ((vt0.c0)GLOB(rt0.c1)) COLLATE BINARY GROUP BY rt0.c3;
SELECT ALL rt0.c4, vt0.c0, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c4, vt0.c0, rt0.c0, rt0.c1;
SELECT ALL rt0.c4, vt0.c0, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c4, vt0.c0, rt0.c0, rt0.c1 HAVING COUNT(((((COUNT(*))AND(rt0.c3)))AND(AVG(MAX(MIN(TOTAL(COUNT(GROUP_CONCAT(rt0.c2))))))))) UNION ALL SELECT rt0.c4, vt0.c0, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c4, vt0.c0, rt0.c0, rt0.c1 HAVING (NOT (COUNT(((((COUNT(*))AND(rt0.c3)))AND(AVG(MAX(MIN(TOTAL(COUNT(GROUP_CONCAT(rt0.c2))))))))))) UNION ALL SELECT rt0.c4, vt0.c0, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c4, vt0.c0, rt0.c0, rt0.c1 HAVING ((COUNT(((((COUNT(*))AND(rt0.c3)))AND(AVG(MAX(MIN(TOTAL(COUNT(GROUP_CONCAT(rt0.c2)))))))))) ISNULL);
SELECT ALL * FROM vt0, rt0;
SELECT * FROM vt0, rt0 WHERE (CHAR(CASE WHEN vt0.c0 THEN rt0.c4 END)) UNION ALL SELECT * FROM vt0, rt0 WHERE ((NOT (CHAR(CASE WHEN vt0.c0 THEN rt0.c4 END)))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE (((CHAR(CASE WHEN vt0.c0 THEN rt0.c4 END)) ISNULL));
SELECT ALL * FROM vt0, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CASE ((((rt0.c3)OR(rt0.c3)))AND(rt0.c2))  WHEN (rt0.c1 IN (rt0.c4)) THEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) END) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CASE ((((rt0.c3)OR(rt0.c3)))AND(rt0.c2))  WHEN (rt0.c1 IN (rt0.c4)) THEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) END))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CASE ((((rt0.c3)OR(rt0.c3)))AND(rt0.c2))  WHEN (rt0.c1 IN (rt0.c4)) THEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) END) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c4, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c0;
SELECT rt0.c4, rt0.c1, rt0.c0 FROM rt0 WHERE (((((rt0.c1) NOTNULL))<<((rt0.c0 IN ())))) GROUP BY rt0.c4, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c4, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c1) NOTNULL))<<((rt0.c0 IN ())))))) GROUP BY rt0.c4, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c4, rt0.c1, rt0.c0 FROM rt0 WHERE (((((((rt0.c1) NOTNULL))<<((rt0.c0 IN ())))) ISNULL)) GROUP BY rt0.c4, rt0.c1, rt0.c0;
SELECT rt0.c4, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c0;
SELECT ALL rt0.c4, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c2, rt0.c1;
SELECT ALL rt0.c4, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c2, rt0.c1 HAVING CAST(SUM(MIN(COUNT(*))) AS NUMERIC) UNION ALL SELECT ALL rt0.c4, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c2, rt0.c1 HAVING (NOT (CAST(SUM(MIN(COUNT(*))) AS NUMERIC))) UNION ALL SELECT ALL rt0.c4, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c2, rt0.c1 HAVING ((CAST(SUM(MIN(COUNT(*))) AS NUMERIC)) ISNULL);
SELECT ALL rt0.c0, vt0.c0, rt0.c4, rt0.c3, rt0.c2 FROM vt0, rt0;
SELECT rt0.c0, vt0.c0, rt0.c4, rt0.c3, rt0.c2 FROM vt0, rt0 WHERE (((vt0.c0) IS FALSE) COLLATE RTRIM) UNION ALL SELECT rt0.c0, vt0.c0, rt0.c4, rt0.c3, rt0.c2 FROM vt0, rt0 WHERE ((NOT (((vt0.c0) IS FALSE) COLLATE RTRIM))) UNION ALL SELECT ALL rt0.c0, vt0.c0, rt0.c4, rt0.c3, rt0.c2 FROM vt0, rt0 WHERE (((((vt0.c0) IS FALSE) COLLATE RTRIM) ISNULL));
SELECT ALL rt0.c0, vt0.c0, rt0.c4, rt0.c3, rt0.c2 FROM vt0, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((~ (((rt0.c0) NOTNULL)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((~ (((rt0.c0) NOTNULL)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((~ (((rt0.c0) NOTNULL)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c3;
SELECT ALL rt0.c2, rt0.c0, rt0.c3 FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN (((rt0.c3 IN ()))) AND ((rt0.c4)))) GROUP BY rt0.c2, rt0.c0, rt0.c3 UNION SELECT rt0.c2, rt0.c0, rt0.c3 FROM rt0 WHERE ((NOT ((((rt0.c0)) NOT BETWEEN (((rt0.c3 IN ()))) AND ((rt0.c4)))))) GROUP BY rt0.c2, rt0.c0, rt0.c3 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c3 FROM rt0 WHERE ((((((rt0.c0)) NOT BETWEEN (((rt0.c3 IN ()))) AND ((rt0.c4)))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c3;
SELECT rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c3;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TOTAL((((MAX(TOTAL(vt0.c0)), x'', TOTAL(COUNT(vt0.c0))))<=((vt0.c0, vt0.c0, MIN(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL((((MAX(TOTAL(vt0.c0)), x'', TOTAL(COUNT(vt0.c0))))<=((vt0.c0, vt0.c0, MIN(vt0.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL((((MAX(TOTAL(vt0.c0)), x'', TOTAL(COUNT(vt0.c0))))<=((vt0.c0, vt0.c0, MIN(vt0.c0)))))) ISNULL);
SELECT ALL rt0.c4, rt0.c2, rt0.c0, vt0.c0, rt0.c3, rt0.c1 FROM vt0, rt0;
SELECT rt0.c4, rt0.c2, rt0.c0, vt0.c0, rt0.c3, rt0.c1 FROM vt0, rt0 WHERE (TRIM(DISTINCT ('^r' IN ()), (NOT (rt0.c4)))) UNION ALL SELECT rt0.c4, rt0.c2, rt0.c0, vt0.c0, rt0.c3, rt0.c1 FROM vt0, rt0 WHERE ((NOT (TRIM(DISTINCT ('^r' IN ()), (NOT (rt0.c4)))))) UNION ALL SELECT ALL rt0.c4, rt0.c2, rt0.c0, vt0.c0, rt0.c3, rt0.c1 FROM vt0, rt0 WHERE (((TRIM(DISTINCT ('^r' IN ()), (NOT (rt0.c4)))) ISNULL));
SELECT ALL rt0.c4, rt0.c2, rt0.c0, vt0.c0, rt0.c3, rt0.c1 FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (x'b7e0201f') UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (x'b7e0201f'))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((x'b7e0201f') ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT ALL rt0.c1 FROM vt0, rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM vt0, rt0 WHERE (((rt0.c2)LIKE(rt0.c4)) COLLATE RTRIM) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM vt0, rt0 WHERE ((NOT (((rt0.c2)LIKE(rt0.c4)) COLLATE RTRIM))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM vt0, rt0 WHERE (((((rt0.c2)LIKE(rt0.c4)) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM vt0, rt0 GROUP BY rt0.c1;
SELECT rt0.c0, vt0.c0, rt0.c1, rt0.c3, rt0.c4, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c1, rt0.c3, rt0.c4, rt0.c2;
SELECT rt0.c0, vt0.c0, rt0.c1, rt0.c3, rt0.c4, rt0.c2 FROM rt0 NOT INDEXED, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c1, rt0.c3, rt0.c4, rt0.c2 HAVING TOTAL(MAX(AVG(MAX(rt0.c2)))) UNION ALL SELECT rt0.c0, vt0.c0, rt0.c1, rt0.c3, rt0.c4, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c1, rt0.c3, rt0.c4, rt0.c2 HAVING (NOT (TOTAL(MAX(AVG(MAX(rt0.c2)))))) UNION ALL SELECT rt0.c0, vt0.c0, rt0.c1, rt0.c3, rt0.c4, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c1, rt0.c3, rt0.c4, rt0.c2 HAVING ((TOTAL(MAX(AVG(MAX(rt0.c2))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE ((((NOT (rt0.c0)))&(rt0.c1 COLLATE NOCASE))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((((NOT (rt0.c0)))&(rt0.c1 COLLATE NOCASE))))) UNION ALL SELECT * FROM rt0 WHERE ((((((NOT (rt0.c0)))&(rt0.c1 COLLATE NOCASE))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT vt0.c0, rt0.c3 FROM vt0, rt0;
SELECT DISTINCT vt0.c0, rt0.c3 FROM vt0, rt0 WHERE ((((NULL IN ())) ISNULL)) UNION SELECT DISTINCT vt0.c0, rt0.c3 FROM vt0, rt0 WHERE ((NOT ((((NULL IN ())) ISNULL)))) UNION SELECT DISTINCT vt0.c0, rt0.c3 FROM vt0, rt0 WHERE ((((((NULL IN ())) ISNULL)) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c3 FROM vt0, rt0;
SELECT ALL rt0.c3, rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1, vt0.c0;
SELECT ALL rt0.c3, rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0 WHERE (CAST(rt0.c4 COLLATE RTRIM AS NUMERIC)) GROUP BY rt0.c3, rt0.c0, rt0.c1, vt0.c0 UNION SELECT ALL rt0.c3, rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0 WHERE ((NOT (CAST(rt0.c4 COLLATE RTRIM AS NUMERIC)))) GROUP BY rt0.c3, rt0.c0, rt0.c1, vt0.c0 UNION SELECT rt0.c3, rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0 WHERE (((CAST(rt0.c4 COLLATE RTRIM AS NUMERIC)) ISNULL)) GROUP BY rt0.c3, rt0.c0, rt0.c1, vt0.c0;
SELECT ALL rt0.c3, rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1, vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING IFNULL(SUM(vt0.c0), vt0.c0) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (IFNULL(SUM(vt0.c0), vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((IFNULL(SUM(vt0.c0), vt0.c0)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING IFNULL(SUM(vt0.c0), vt0.c0) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (IFNULL(SUM(vt0.c0), vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((IFNULL(SUM(vt0.c0), vt0.c0)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c4, rt0.c2, rt0.c3, vt0.c0, rt0.c1 FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)))==(rt0.c1));
SELECT ALL rt0.c4, rt0.c2, rt0.c3, vt0.c0, rt0.c1 FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)))==(rt0.c1)) WHERE (((rt0.c4 COLLATE BINARY) ISNULL)) UNION ALL SELECT rt0.c4, rt0.c2, rt0.c3, vt0.c0, rt0.c1 FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)))=(rt0.c1)) WHERE ((NOT (((rt0.c4 COLLATE BINARY) ISNULL)))) UNION ALL SELECT ALL rt0.c4, rt0.c2, rt0.c3, vt0.c0, rt0.c1 FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)))==(rt0.c1)) WHERE (((((rt0.c4 COLLATE BINARY) ISNULL)) ISNULL));
SELECT rt0.c4, rt0.c2, rt0.c3, vt0.c0, rt0.c1 FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)))==(rt0.c1));
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c1)+(rt0.c3))))<=((((((rt0.c4)AND(rt0.c1)))AND(rt0.c0)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((((rt0.c1)+(rt0.c3))))<=((((((rt0.c4)AND(rt0.c1)))AND(rt0.c0)))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((((rt0.c1)+(rt0.c3))))<=((((((rt0.c4)AND(rt0.c1)))AND(rt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT vt0.c0, rt0.c3 FROM vt0 FULL OUTER JOIN rt0 ON rt0.c2 COLLATE NOCASE COLLATE NOCASE GROUP BY vt0.c0, rt0.c3;
SELECT vt0.c0, rt0.c3 FROM vt0 FULL OUTER JOIN rt0 ON rt0.c2 COLLATE NOCASE COLLATE NOCASE WHERE (CASE WHEN rt0.c1 COLLATE BINARY THEN COALESCE(rt0.c3, rt0.c4) END) GROUP BY vt0.c0, rt0.c3 UNION SELECT ALL vt0.c0, rt0.c3 FROM vt0 FULL OUTER JOIN rt0 ON rt0.c2 COLLATE NOCASE COLLATE NOCASE WHERE ((NOT (CASE WHEN rt0.c1 COLLATE BINARY THEN COALESCE(rt0.c3, rt0.c4) END))) GROUP BY vt0.c0, rt0.c3 UNION SELECT vt0.c0, rt0.c3 FROM vt0 FULL OUTER JOIN rt0 ON rt0.c2 COLLATE NOCASE COLLATE NOCASE WHERE (((CASE WHEN rt0.c1 COLLATE BINARY THEN COALESCE(rt0.c3, rt0.c4) END) ISNULL)) GROUP BY vt0.c0, rt0.c3;
SELECT vt0.c0, rt0.c3 FROM vt0 FULL OUTER JOIN rt0 ON rt0.c2 COLLATE NOCASE COLLATE NOCASE GROUP BY vt0.c0, rt0.c3;
SELECT ALL rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1 HAVING ((((((((TOTAL(TOTAL(SUM(rt0.c4))))OR(SUM(MAX(COUNT(*))))))OR(GROUP_CONCAT(COUNT(TOTAL(x''))))))OR(((SUM(rt0.c1)) NOT BETWEEN (rt0.c2) AND (vt0.c0)))))OR(GROUP_CONCAT(rt0.c1))) UNION ALL SELECT rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1 HAVING (NOT (((((((((TOTAL(TOTAL(SUM(rt0.c4))))OR(SUM(MAX(COUNT(*))))))OR(GROUP_CONCAT(COUNT(TOTAL(x''))))))OR(((SUM(rt0.c1)) NOT BETWEEN (rt0.c2) AND (vt0.c0)))))OR(GROUP_CONCAT(rt0.c1))))) UNION ALL SELECT ALL rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1 HAVING ((((((((((TOTAL(TOTAL(SUM(rt0.c4))))OR(SUM(MAX(COUNT(*))))))OR(GROUP_CONCAT(COUNT(TOTAL(x''))))))OR(((SUM(rt0.c1)) NOT BETWEEN (rt0.c2) AND (vt0.c0)))))OR(GROUP_CONCAT(rt0.c1)))) ISNULL);
SELECT SUM((((rt0.c1, rt0.c4, rt0.c2)) BETWEEN ((((rt0.c1) IS TRUE), CASE WHEN vt0.c0 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c2 END, ((vt0.c0) ISNULL))) AND ((CAST(0.3115147441978402 AS TEXT), CAST(vt0.c0 AS REAL), ((vt0.c0)*(rt0.c4)))))) FROM vt0, rt0 ORDER BY LOWER((+ (rt0.c1))) ASC  NULLS FIRST;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((((((rt0.c0)OR('\5')))AND(rt0.c1)))<>(x''))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((((rt0.c0)OR('\5')))AND(rt0.c1)))<>(x''))))) UNION ALL SELECT * FROM rt0 WHERE (((((((((rt0.c0)OR('\5')))AND(rt0.c1)))<>(x''))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN rt0 ON CASE (NOT (rt0.c3))  WHEN rt0.c0 THEN 0.6006867916770322 END;
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN rt0 ON CASE (NOT (rt0.c3))  WHEN rt0.c0 THEN 0.6006867916770322 END WHERE ('wJn_AlQAT') UNION SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN rt0 ON CASE (NOT (rt0.c3))  WHEN rt0.c0 THEN 0.6006867916770322 END WHERE ((NOT ('wJn_AlQAT'))) UNION SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN rt0 ON CASE (NOT (rt0.c3))  WHEN rt0.c0 THEN 0.6006867916770322 END WHERE ((('wJn_AlQAT') ISNULL));
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN rt0 ON CASE (NOT (rt0.c3))  WHEN rt0.c0 THEN 0.6006867916770322 END;
SELECT rt0.c2, rt0.c4 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c4;
SELECT ALL rt0.c2, rt0.c4 FROM vt0, rt0 WHERE ((((rt0.c4 IN (rt0.c2, rt0.c3)))*(((((rt0.c3)AND(rt0.c3)))OR(rt0.c1))))) GROUP BY rt0.c2, rt0.c4 UNION SELECT ALL rt0.c2, rt0.c4 FROM vt0, rt0 WHERE ((NOT ((((rt0.c4 IN (rt0.c2, rt0.c3)))*(((((rt0.c3)AND(rt0.c3)))OR(rt0.c1))))))) GROUP BY rt0.c2, rt0.c4 UNION SELECT ALL rt0.c2, rt0.c4 FROM vt0, rt0 WHERE ((((((rt0.c4 IN (rt0.c2, rt0.c3)))*(((((rt0.c3)AND(rt0.c3)))OR(rt0.c1))))) ISNULL)) GROUP BY rt0.c2, rt0.c4;
SELECT rt0.c2, rt0.c4 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c4;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON (((((((vt0.c0)AND(vt0.c0)))OR(rt0.c1))))<((rt0.c4 COLLATE BINARY)));
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON (((((((vt0.c0)AND(vt0.c0)))OR(rt0.c1))))<((rt0.c4 COLLATE BINARY))) WHERE (((((rt0.c3) IS FALSE))<(rt0.c3 COLLATE RTRIM))) UNION ALL SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON (((((((vt0.c0)AND(vt0.c0)))OR(rt0.c1))))<((rt0.c4 COLLATE BINARY))) WHERE ((NOT (((((rt0.c3) IS FALSE))<(rt0.c3 COLLATE RTRIM))))) UNION ALL SELECT * FROM vt0 FULL OUTER JOIN rt0 ON (((((((vt0.c0)AND(vt0.c0)))OR(rt0.c1))))<((rt0.c4 COLLATE BINARY))) WHERE (((((((rt0.c3) IS FALSE))<(rt0.c3 COLLATE RTRIM))) ISNULL));
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON (((((((vt0.c0)AND(vt0.c0)))OR(rt0.c1))))<((rt0.c4 COLLATE BINARY)));
SELECT DISTINCT rt0.c2, rt0.c4 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c4 FROM rt0 WHERE ((((((((rt0.c4)) BETWEEN ((rt0.c3)) AND ((rt0.c0))))AND((x'' IN ()))))OR(((((rt0.c2)OR(rt0.c2)))AND(rt0.c2))))) UNION SELECT DISTINCT rt0.c2, rt0.c4 FROM rt0 WHERE ((NOT ((((((((rt0.c4)) BETWEEN ((rt0.c3)) AND ((rt0.c0))))AND((x'' IN ()))))OR(((((rt0.c2)OR(rt0.c2)))AND(rt0.c2))))))) UNION SELECT DISTINCT rt0.c2, rt0.c4 FROM rt0 WHERE ((((((((((rt0.c4)) BETWEEN ((rt0.c3)) AND ((rt0.c0))))AND((x'' IN ()))))OR(((((rt0.c2)OR(rt0.c2)))AND(rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c4 FROM rt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((0.26138792225416785))<(((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((0.26138792225416785))<(((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((0.26138792225416785))<(((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2;
SELECT rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2 HAVING JULIANDAY((NOT (AVG(SUM(rt0.c3)))), DATETIME(COUNT(COUNT(MIN(rt0.c0))), rt0.c4, GROUP_CONCAT(rt0.c2)), GROUP_CONCAT(AVG(TOTAL(rt0.c2)))) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2 HAVING (NOT (JULIANDAY((NOT (AVG(SUM(rt0.c3)))), DATETIME(COUNT(COUNT(MIN(rt0.c0))), rt0.c4, GROUP_CONCAT(rt0.c2)), GROUP_CONCAT(AVG(TOTAL(rt0.c2)))))) UNION ALL SELECT rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2 HAVING ((JULIANDAY((NOT (AVG(SUM(rt0.c3)))), DATETIME(COUNT(COUNT(MIN(rt0.c0))), rt0.c4, GROUP_CONCAT(rt0.c2)), GROUP_CONCAT(AVG(TOTAL(rt0.c2))))) ISNULL);
SELECT rt0.c1, rt0.c3, rt0.c2, rt0.c0, rt0.c4 FROM rt0;
SELECT ALL rt0.c1, rt0.c3, rt0.c2, rt0.c0, rt0.c4 FROM rt0 WHERE (((((rt0.c3)OR(rt0.c1)))AND(rt0.c4)) COLLATE NOCASE) UNION ALL SELECT rt0.c1, rt0.c3, rt0.c2, rt0.c0, rt0.c4 FROM rt0 WHERE ((NOT (((((rt0.c3)OR(rt0.c1)))AND(rt0.c4)) COLLATE NOCASE))) UNION ALL SELECT rt0.c1, rt0.c3, rt0.c2, rt0.c0, rt0.c4 FROM rt0 WHERE (((((((rt0.c3)OR(rt0.c1)))AND(rt0.c4)) COLLATE NOCASE) ISNULL));
SELECT rt0.c1, rt0.c3, rt0.c2, rt0.c0, rt0.c4 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c2 IN (rt0.c0, rt0.c2)))AND(CAST(rt0.c0 AS INTEGER))))OR(rt0.c0))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((((rt0.c2 IN (rt0.c0, rt0.c2)))AND(CAST(rt0.c0 AS INTEGER))))OR(rt0.c0))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((((rt0.c2 IN (rt0.c0, rt0.c2)))AND(CAST(rt0.c0 AS INTEGER))))OR(rt0.c0))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((((- (vt0.c0)))OR(UNLIKELY(vt0.c0))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((((- (vt0.c0)))OR(UNLIKELY(vt0.c0))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((((- (vt0.c0)))OR(UNLIKELY(vt0.c0))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c3, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2;
SELECT ALL rt0.c3, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2 HAVING GROUP_CONCAT(CASE WHEN COUNT(rt0.c0) THEN rt0.c2 END) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2 HAVING (NOT (GROUP_CONCAT(CASE WHEN COUNT(rt0.c0) THEN rt0.c2 END))) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2 HAVING ((GROUP_CONCAT(CASE WHEN COUNT(rt0.c0) THEN rt0.c2 END)) ISNULL);
SELECT ALL * FROM vt0, rt0;
SELECT * FROM vt0, rt0 WHERE (((((x'')OR(rt0.c4)))AND((rt0.c3 IN (rt0.c0, rt0.c1))))) UNION ALL SELECT * FROM vt0, rt0 WHERE ((NOT (((((x'')OR(rt0.c4)))AND((rt0.c3 IN (rt0.c0, rt0.c1))))))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE (((((((x'')OR(rt0.c4)))AND((rt0.c3 IN (rt0.c0, rt0.c1))))) ISNULL));
SELECT ALL * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE ((((rt0.c0 IN ()))&(DATE(rt0.c2, rt0.c4, rt0.c4, x'', rt0.c2)))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT ((((rt0.c0 IN ()))&(DATE(rt0.c2, rt0.c4, rt0.c4, x'', rt0.c2)))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((((((rt0.c0 IN ()))&(DATE(rt0.c2, rt0.c4, rt0.c4, x'', rt0.c2)))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c3;
SELECT rt0.c1, rt0.c3 FROM rt0 WHERE (((((0.4034145263854819) NOT NULL))LIKE(((rt0.c2)&(rt0.c2))))) GROUP BY rt0.c1, rt0.c3 UNION SELECT rt0.c1, rt0.c3 FROM rt0 WHERE ((NOT (((((0.4034145263854819) NOT NULL))LIKE(((rt0.c2)&(rt0.c2))))))) GROUP BY rt0.c1, rt0.c3 UNION SELECT ALL rt0.c1, rt0.c3 FROM rt0 WHERE (((((((0.4034145263854819) NOT NULL))LIKE(((rt0.c2)&(rt0.c2))))) ISNULL)) GROUP BY rt0.c1, rt0.c3;
SELECT rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c3;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING SUM(((vt0.c0)%(MIN(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (SUM(((vt0.c0)%(MIN(vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM(((vt0.c0)%(MIN(vt0.c0))))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((((- (vt0.c0)))-(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((- (vt0.c0)))-(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((((- (vt0.c0)))-(vt0.c0))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (0.8680864432624225) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (0.8680864432624225))) UNION SELECT DISTINCT * FROM vt0 WHERE (((0.8680864432624225) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c4, rt0.c2, vt0.c0, rt0.c3 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1, rt0.c4, rt0.c2, vt0.c0, rt0.c3;
SELECT ALL rt0.c0, rt0.c1, rt0.c4, rt0.c2, vt0.c0, rt0.c3 FROM rt0, vt0 WHERE ((~ ('e'))) GROUP BY rt0.c0, rt0.c1, rt0.c4, rt0.c2, vt0.c0, rt0.c3 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c4, rt0.c2, vt0.c0, rt0.c3 FROM rt0, vt0 WHERE ((NOT ((~ ('e'))))) GROUP BY rt0.c0, rt0.c1, rt0.c4, rt0.c2, vt0.c0, rt0.c3 UNION SELECT rt0.c0, rt0.c1, rt0.c4, rt0.c2, vt0.c0, rt0.c3 FROM rt0, vt0 WHERE ((((~ ('e'))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c4, rt0.c2, vt0.c0, rt0.c3;
SELECT ALL rt0.c0, rt0.c1, rt0.c4, rt0.c2, vt0.c0, rt0.c3 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1, rt0.c4, rt0.c2, vt0.c0, rt0.c3;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX(MIN(MIN(COUNT(*)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(MIN(MIN(COUNT(*)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(MIN(MIN(COUNT(*))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((+ (vt0.c0)))GLOB(((((vt0.c0)AND(vt0.c0)))OR('!U'))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((+ (vt0.c0)))GLOB(((((vt0.c0)AND(vt0.c0)))OR('!U'))))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((((+ (vt0.c0)))GLOB(((((vt0.c0)AND(vt0.c0)))OR('!U'))))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT rt0.c0, vt0.c0, rt0.c1, rt0.c4, rt0.c3 FROM rt0, vt0;
SELECT DISTINCT rt0.c0, vt0.c0, rt0.c1, rt0.c4, rt0.c3 FROM rt0, vt0 WHERE (UNLIKELY(DISTINCT rt0.c2) COLLATE RTRIM) UNION SELECT DISTINCT rt0.c0, vt0.c0, rt0.c1, rt0.c4, rt0.c3 FROM rt0, vt0 WHERE ((NOT (UNLIKELY(DISTINCT rt0.c2) COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c0, vt0.c0, rt0.c1, rt0.c4, rt0.c3 FROM rt0, vt0 WHERE (((UNLIKELY(DISTINCT rt0.c2) COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt0.c0, vt0.c0, rt0.c1, rt0.c4, rt0.c3 FROM rt0, vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((((x'd337') IS TRUE))AND(IFNULL(vt0.c0, vt0.c0))))AND(vt0.c0 COLLATE NOCASE))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((((x'd337') IS TRUE))AND(IFNULL(vt0.c0, vt0.c0))))AND(vt0.c0 COLLATE NOCASE))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((((x'd337') IS TRUE))AND(IFNULL(vt0.c0, vt0.c0))))AND(vt0.c0 COLLATE NOCASE))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG(CAST(COUNT(*) AS TEXT)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (AVG(CAST(COUNT(*) AS TEXT)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG(CAST(COUNT(*) AS TEXT))) ISNULL);
SELECT ALL rt0.c2, rt0.c4 FROM rt0;
SELECT ALL rt0.c2, rt0.c4 FROM rt0 WHERE (x'') UNION ALL SELECT rt0.c2, rt0.c4 FROM rt0 WHERE ((NOT (x''))) UNION ALL SELECT rt0.c2, rt0.c4 FROM rt0 WHERE (((x'') ISNULL));
SELECT ALL rt0.c2, rt0.c4 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c3 IN ())) BETWEEN ((~ (rt0.c0))) AND (rt0.c4 COLLATE BINARY))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((rt0.c3 IN ())) BETWEEN ((~ (rt0.c0))) AND (rt0.c4 COLLATE BINARY))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c3 IN ())) BETWEEN ((~ (rt0.c0))) AND (rt0.c4 COLLATE BINARY))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, rt0.c3, rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c3, rt0.c1, vt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c3, rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0 WHERE (((((CAST(rt0.c0 AS INTEGER))AND(((rt0.c2) NOT NULL))))OR(((vt0.c0)/(rt0.c1))))) GROUP BY rt0.c0, rt0.c3, rt0.c1, vt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c3, rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0 WHERE ((NOT (((((CAST(rt0.c0 AS INTEGER))AND(((rt0.c2) NOT NULL))))OR(((vt0.c0)/(rt0.c1))))))) GROUP BY rt0.c0, rt0.c3, rt0.c1, vt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c3, rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0 WHERE (((((((CAST(rt0.c0 AS INTEGER))AND(((rt0.c2) NOT NULL))))OR(((vt0.c0)/(rt0.c1))))) ISNULL)) GROUP BY rt0.c0, rt0.c3, rt0.c1, vt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c3, rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c3, rt0.c1, vt0.c0, rt0.c2;
SELECT vt0.c0 FROM rt0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM rt0, vt0 GROUP BY vt0.c0 HAVING ((((rt0.c3)AND(MIN(TOTAL(x'')))))OR(rt0.c3)) COLLATE NOCASE UNION ALL SELECT ALL vt0.c0 FROM rt0, vt0 GROUP BY vt0.c0 HAVING (NOT (((((rt0.c3)AND(MIN(TOTAL(x'')))))OR(rt0.c3)) COLLATE NOCASE)) UNION ALL SELECT vt0.c0 FROM rt0, vt0 GROUP BY vt0.c0 HAVING ((((((rt0.c3)AND(MIN(TOTAL(x'')))))OR(rt0.c3)) COLLATE NOCASE) ISNULL);
SELECT * FROM rt0, vt0;
SELECT ALL * FROM rt0, vt0 WHERE ((- ((rt0.c0 IN (rt0.c3))))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((NOT ((- ((rt0.c0 IN (rt0.c3))))))) UNION ALL SELECT * FROM rt0, vt0 WHERE ((((- ((rt0.c0 IN (rt0.c3))))) ISNULL));
SELECT * FROM rt0, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (TOTAL_CHANGES()) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (TOTAL_CHANGES()))) UNION SELECT DISTINCT * FROM vt0 WHERE (((TOTAL_CHANGES()) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL rt0.c4, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c4, rt0.c1;
SELECT rt0.c4, rt0.c1 FROM rt0, vt0 WHERE ((((NULL IN (rt0.c4, vt0.c0))) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND ((~ (rt0.c0))))) GROUP BY rt0.c4, rt0.c1 UNION SELECT rt0.c4, rt0.c1 FROM rt0, vt0 WHERE ((NOT ((((NULL IN (rt0.c4, vt0.c0))) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND ((~ (rt0.c0))))))) GROUP BY rt0.c4, rt0.c1 UNION SELECT ALL rt0.c4, rt0.c1 FROM rt0, vt0 WHERE ((((((NULL IN (rt0.c4, vt0.c0))) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND ((~ (rt0.c0))))) ISNULL)) GROUP BY rt0.c4, rt0.c1;
SELECT ALL rt0.c4, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c4, rt0.c1;
SELECT rt0.c2, rt0.c3, rt0.c1, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0, rt0.c4;
SELECT rt0.c2, rt0.c3, rt0.c1, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0, rt0.c4 HAVING MAX(((((rt0.c3)OR(rt0.c2)))AND(rt0.c4))) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0, rt0.c4 HAVING (NOT (MAX(((((rt0.c3)OR(rt0.c2)))AND(rt0.c4))))) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0, rt0.c4 HAVING ((MAX(((((rt0.c3)OR(rt0.c2)))AND(rt0.c4)))) ISNULL);
SELECT rt0.c2, rt0.c3, rt0.c1, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0, rt0.c4;
SELECT rt0.c2, rt0.c3, rt0.c1, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0, rt0.c4 HAVING MAX(((((rt0.c3)OR(rt0.c2)))AND(rt0.c4))) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0, rt0.c4 HAVING (NOT (MAX(((((rt0.c3)OR(rt0.c2)))AND(rt0.c4))))) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0, rt0.c4 HAVING ((MAX(((((rt0.c3)OR(rt0.c2)))AND(rt0.c4)))) ISNULL);
SELECT rt0.c2, rt0.c3, rt0.c1, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0, rt0.c4;
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) BETWEEN (vt0.c0 COLLATE BINARY) AND ((vt0.c0 IN (vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0 COLLATE BINARY) BETWEEN (vt0.c0 COLLATE BINARY) AND ((vt0.c0 IN (vt0.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0 COLLATE BINARY) BETWEEN (vt0.c0 COLLATE BINARY) AND ((vt0.c0 IN (vt0.c0))))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT rt0.c1, rt0.c4, rt0.c0, rt0.c3 FROM rt0, vt0;
SELECT DISTINCT rt0.c1, rt0.c4, rt0.c0, rt0.c3 FROM rt0, vt0 WHERE (((((rt0.c1)=(0.5112771799379027))) ISNULL)) UNION SELECT DISTINCT rt0.c1, rt0.c4, rt0.c0, rt0.c3 FROM rt0, vt0 WHERE ((NOT (((((rt0.c1)=(0.5112771799379027))) ISNULL)))) UNION SELECT DISTINCT rt0.c1, rt0.c4, rt0.c0, rt0.c3 FROM rt0, vt0 WHERE (((((((rt0.c1)==(0.5112771799379027))) ISNULL)) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c4, rt0.c0, rt0.c3 FROM rt0, vt0;
SELECT rt0.c2, rt0.c1, vt0.c0, rt0.c4, rt0.c0, rt0.c3 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, vt0.c0, rt0.c4, rt0.c0, rt0.c3;
SELECT rt0.c2, rt0.c1, vt0.c0, rt0.c4, rt0.c0, rt0.c3 FROM rt0, vt0 WHERE (CASE WHEN CAST(rt0.c0 AS INTEGER) THEN (- (rt0.c4)) WHEN CAST(rt0.c1 AS BLOB) THEN (((rt0.c1, rt0.c2, '-72539198'))>((rt0.c2, rt0.c3, rt0.c2))) WHEN ((((rt0.c4)OR(rt0.c2)))OR(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)) WHEN ((((x'')OR(vt0.c0)))AND(vt0.c0)) THEN (((rt0.c4))<>((rt0.c4))) WHEN (rt0.c1 IN ()) THEN (~ (rt0.c0)) ELSE CAST(rt0.c4 AS TEXT) END) GROUP BY rt0.c2, rt0.c1, vt0.c0, rt0.c4, rt0.c0, rt0.c3 UNION SELECT rt0.c2, rt0.c1, vt0.c0, rt0.c4, rt0.c0, rt0.c3 FROM rt0, vt0 WHERE ((NOT (CASE WHEN CAST(rt0.c0 AS INTEGER) THEN (- (rt0.c4)) WHEN CAST(rt0.c1 AS BLOB) THEN (((rt0.c1, rt0.c2, '-72539198'))>((rt0.c2, rt0.c3, rt0.c2))) WHEN ((((rt0.c4)OR(rt0.c2)))OR(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)) WHEN ((((x'')OR(vt0.c0)))AND(vt0.c0)) THEN (((rt0.c4))<>((rt0.c4))) WHEN (rt0.c1 IN ()) THEN (~ (rt0.c0)) ELSE CAST(rt0.c4 AS TEXT) END))) GROUP BY rt0.c2, rt0.c1, vt0.c0, rt0.c4, rt0.c0, rt0.c3 UNION SELECT ALL rt0.c2, rt0.c1, vt0.c0, rt0.c4, rt0.c0, rt0.c3 FROM rt0, vt0 WHERE (((CASE WHEN CAST(rt0.c0 AS INTEGER) THEN (- (rt0.c4)) WHEN CAST(rt0.c1 AS BLOB) THEN (((rt0.c1, rt0.c2, '-72539198'))>((rt0.c2, rt0.c3, rt0.c2))) WHEN ((((rt0.c4)OR(rt0.c2)))OR(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)) WHEN ((((x'')OR(vt0.c0)))AND(vt0.c0)) THEN (((rt0.c4))<>((rt0.c4))) WHEN (rt0.c1 IN ()) THEN (~ (rt0.c0)) ELSE CAST(rt0.c4 AS TEXT) END) ISNULL)) GROUP BY rt0.c2, rt0.c1, vt0.c0, rt0.c4, rt0.c0, rt0.c3;
SELECT rt0.c2, rt0.c1, vt0.c0, rt0.c4, rt0.c0, rt0.c3 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, vt0.c0, rt0.c4, rt0.c0, rt0.c3;
SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c4, rt0.c0;
SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c4, rt0.c0 HAVING MAX(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c4))) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c1, rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c4, rt0.c0 HAVING (NOT (MAX(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c4))))) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c1, rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c4, rt0.c0 HAVING ((MAX(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c4)))) ISNULL);
SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c4, rt0.c0;
SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c4, rt0.c0 HAVING MAX(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c4))) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c1, rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c4, rt0.c0 HAVING (NOT (MAX(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c4))))) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c1, rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c4, rt0.c0 HAVING ((MAX(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c4)))) ISNULL);
SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c4, rt0.c0;
SELECT rt0.c3 FROM rt0;
SELECT ALL rt0.c3 FROM rt0 WHERE (TYPEOF(DISTINCT ((rt0.c0)<(rt0.c1)))) UNION ALL SELECT ALL rt0.c3 FROM rt0 WHERE ((NOT (TYPEOF(DISTINCT ((rt0.c0)<(rt0.c1)))))) UNION ALL SELECT rt0.c3 FROM rt0 WHERE (((TYPEOF(DISTINCT ((rt0.c0)<(rt0.c1)))) ISNULL));
SELECT rt0.c3 FROM rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (LOWER((('446348231') NOT BETWEEN (vt0.c0) AND (vt0.c0)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (LOWER((('446348231') NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((LOWER((('446348231') NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL rt0.c4, rt0.c1, vt0.c0, rt0.c3, rt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON rt0.c3 GROUP BY rt0.c4, rt0.c1, vt0.c0, rt0.c3, rt0.c0;
SELECT ALL rt0.c4, rt0.c1, vt0.c0, rt0.c3, rt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON rt0.c3 WHERE (CAST(LIKELY(rt0.c2) AS TEXT)) GROUP BY rt0.c4, rt0.c1, vt0.c0, rt0.c3, rt0.c0 UNION SELECT ALL rt0.c4, rt0.c1, vt0.c0, rt0.c3, rt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON rt0.c3 WHERE ((NOT (CAST(LIKELY(rt0.c2) AS TEXT)))) GROUP BY rt0.c4, rt0.c1, vt0.c0, rt0.c3, rt0.c0 UNION SELECT rt0.c4, rt0.c1, vt0.c0, rt0.c3, rt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON rt0.c3 WHERE (((CAST(LIKELY(rt0.c2) AS TEXT)) ISNULL)) GROUP BY rt0.c4, rt0.c1, vt0.c0, rt0.c3, rt0.c0;
SELECT ALL rt0.c4, rt0.c1, vt0.c0, rt0.c3, rt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON rt0.c3 GROUP BY rt0.c4, rt0.c1, vt0.c0, rt0.c3, rt0.c0;
SELECT ALL rt0.c1, rt0.c4, vt0.c0, rt0.c2, rt0.c0, rt0.c3 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c4, vt0.c0, rt0.c2, rt0.c0, rt0.c3;
SELECT ALL rt0.c1, rt0.c4, vt0.c0, rt0.c2, rt0.c0, rt0.c3 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c4, vt0.c0, rt0.c2, rt0.c0, rt0.c3 HAVING (((GROUP_CONCAT(MIN(rt0.c1))) NOT BETWEEN ('') AND (GROUP_CONCAT(rt0.c3))) IN (CAST(COUNT(*) AS REAL), ((SUM(rt0.c1)) BETWEEN (SUM(MIN(vt0.c0))) AND (TOTAL(MAX(rt0.c3)))))) UNION ALL SELECT ALL rt0.c1, rt0.c4, vt0.c0, rt0.c2, rt0.c0, rt0.c3 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c4, vt0.c0, rt0.c2, rt0.c0, rt0.c3 HAVING (NOT ((((GROUP_CONCAT(MIN(rt0.c1))) NOT BETWEEN ('') AND (GROUP_CONCAT(rt0.c3))) IN (CAST(COUNT(*) AS REAL), ((SUM(rt0.c1)) BETWEEN (SUM(MIN(vt0.c0))) AND (TOTAL(MAX(rt0.c3)))))))) UNION ALL SELECT ALL rt0.c1, rt0.c4, vt0.c0, rt0.c2, rt0.c0, rt0.c3 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c4, vt0.c0, rt0.c2, rt0.c0, rt0.c3 HAVING (((((GROUP_CONCAT(MIN(rt0.c1))) NOT BETWEEN ('') AND (GROUP_CONCAT(rt0.c3))) IN (CAST(COUNT(*) AS REAL), ((SUM(rt0.c1)) BETWEEN (SUM(MIN(vt0.c0))) AND (TOTAL(MAX(rt0.c3))))))) ISNULL);
SELECT * FROM rt0, vt0;
SELECT * FROM rt0, vt0 WHERE (rt0.c4) UNION ALL SELECT * FROM rt0, vt0 WHERE ((NOT (rt0.c4))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE (((rt0.c4) ISNULL));
SELECT * FROM rt0, vt0;
SELECT DISTINCT rt0.c4, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt0;
SELECT DISTINCT rt0.c4, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt0 WHERE ((((rt0.c4 IN (rt0.c1)))>(((rt0.c1)||(rt0.c0))))) UNION SELECT DISTINCT rt0.c4, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt0 WHERE ((NOT ((((rt0.c4 IN (rt0.c1)))>(((rt0.c1)||(rt0.c0))))))) UNION SELECT DISTINCT rt0.c4, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt0 WHERE ((((((rt0.c4 IN (rt0.c1)))>(((rt0.c1)||(rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((~ (LIKELIHOOD(vt0.c0, 0.09297185948658704)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((~ (LIKELIHOOD(vt0.c0, 0.09297185948658704)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((~ (LIKELIHOOD(vt0.c0, 0.09297185948658704)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (+ (MAX(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((+ (MAX(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((+ (MAX(vt0.c0)))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (+ (MAX(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((+ (MAX(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((+ (MAX(vt0.c0)))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c1 FROM rt0;
SELECT rt0.c1 FROM rt0 WHERE ((rt0.c1 COLLATE NOCASE IN (((rt0.c1)&(rt0.c0))))) UNION ALL SELECT rt0.c1 FROM rt0 WHERE ((NOT ((rt0.c1 COLLATE NOCASE IN (((rt0.c1)&(rt0.c0))))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE ((((rt0.c1 COLLATE NOCASE IN (((rt0.c1)&(rt0.c0))))) ISNULL));
SELECT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c3, vt0.c0, rt0.c1, rt0.c4, rt0.c2 FROM vt0, rt0;
SELECT DISTINCT rt0.c0, rt0.c3, vt0.c0, rt0.c1, rt0.c4, rt0.c2 FROM vt0, rt0 WHERE ((((((((((((rt0.c2)OR(rt0.c3)))AND(rt0.c2)))AND(rt0.c4)))OR(rt0.c4))))>(((+ (rt0.c3)))))) UNION SELECT DISTINCT rt0.c0, rt0.c3, vt0.c0, rt0.c1, rt0.c4, rt0.c2 FROM vt0, rt0 WHERE ((NOT ((((((((((((rt0.c2)OR(rt0.c3)))AND(rt0.c2)))AND(rt0.c4)))OR(rt0.c4))))>(((+ (rt0.c3)))))))) UNION SELECT DISTINCT rt0.c0, rt0.c3, vt0.c0, rt0.c1, rt0.c4, rt0.c2 FROM vt0, rt0 WHERE ((((((((((((((rt0.c2)OR(rt0.c3)))AND(rt0.c2)))AND(rt0.c4)))OR(rt0.c4))))>(((+ (rt0.c3)))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c3, vt0.c0, rt0.c1, rt0.c4, rt0.c2 FROM vt0, rt0;
SELECT rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c4;
SELECT rt0.c1, rt0.c4 FROM rt0 WHERE (((((rt0.c2)>>(rt0.c2)))GLOB(((((rt0.c0)OR(rt0.c0)))AND(rt0.c4))))) GROUP BY rt0.c1, rt0.c4 UNION SELECT rt0.c1, rt0.c4 FROM rt0 WHERE ((NOT (((((rt0.c2)>>(rt0.c2)))GLOB(((((rt0.c0)OR(rt0.c0)))AND(rt0.c4))))))) GROUP BY rt0.c1, rt0.c4 UNION SELECT rt0.c1, rt0.c4 FROM rt0 WHERE (((((((rt0.c2)>>(rt0.c2)))GLOB(((((rt0.c0)OR(rt0.c0)))AND(rt0.c4))))) ISNULL)) GROUP BY rt0.c1, rt0.c4;
SELECT rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c4;
SELECT rt0.c3, rt0.c0, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c4;
SELECT ALL rt0.c3, rt0.c0, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c4 HAVING GROUP_CONCAT(CASE WHEN TOTAL(MAX(MIN(rt0.c3))) THEN COUNT(*) WHEN rt0.c4 THEN MIN(rt0.c1) WHEN rt0.c2 THEN AVG(rt0.c3) ELSE '' END) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c4 HAVING (NOT (GROUP_CONCAT(CASE WHEN TOTAL(MAX(MIN(rt0.c3))) THEN COUNT(*) WHEN rt0.c4 THEN MIN(rt0.c1) WHEN rt0.c2 THEN AVG(rt0.c3) ELSE '' END))) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c4 HAVING ((GROUP_CONCAT(CASE WHEN TOTAL(MAX(MIN(rt0.c3))) THEN COUNT(*) WHEN rt0.c4 THEN MIN(rt0.c1) WHEN rt0.c2 THEN AVG(rt0.c3) ELSE '' END)) ISNULL);
SELECT ALL rt0.c3, rt0.c2, rt0.c1, rt0.c4 FROM rt0;
SELECT ALL rt0.c3, rt0.c2, rt0.c1, rt0.c4 FROM rt0 WHERE (((((((((rtreenode(rt0.c2, rt0.c1))OR((rt0.c1 IN ()))))OR(rt0.c3 COLLATE NOCASE)))OR(rt0.c2 COLLATE RTRIM)))AND((rt0.c0 IN ())))) UNION ALL SELECT rt0.c3, rt0.c2, rt0.c1, rt0.c4 FROM rt0 WHERE ((NOT (((((((((rtreenode(rt0.c2, rt0.c1))OR((rt0.c1 IN ()))))OR(rt0.c3 COLLATE NOCASE)))OR(rt0.c2 COLLATE RTRIM)))AND((rt0.c0 IN ())))))) UNION ALL SELECT rt0.c3, rt0.c2, rt0.c1, rt0.c4 FROM rt0 WHERE (((((((((((rtreenode(rt0.c2, rt0.c1))OR((rt0.c1 IN ()))))OR(rt0.c3 COLLATE NOCASE)))OR(rt0.c2 COLLATE RTRIM)))AND((rt0.c0 IN ())))) ISNULL));
SELECT ALL rt0.c3, rt0.c2, rt0.c1, rt0.c4 FROM rt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)), ((vt0.c0)<<(vt0.c0)), ((vt0.c0)<<(vt0.c0)))) AND ((((vt0.c0)>>(vt0.c0)), (vt0.c0 IN (vt0.c0, x'')), ((vt0.c0)>(NULL)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)), ((vt0.c0)<<(vt0.c0)), ((vt0.c0)<<(vt0.c0)))) AND ((((vt0.c0)>>(vt0.c0)), (vt0.c0 IN (vt0.c0, x'')), ((vt0.c0)>(NULL)))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)), ((vt0.c0)<<(vt0.c0)), ((vt0.c0)<<(vt0.c0)))) AND ((((vt0.c0)>>(vt0.c0)), (vt0.c0 IN (vt0.c0, x'')), ((vt0.c0)>(NULL)))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE ((~ (((NULL)<=(rt0.c1))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 NOT INDEXED WHERE ((NOT ((~ (((NULL)<=(rt0.c1))))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((((~ (((NULL)<=(rt0.c1))))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT vt0.c0, rt0.c0 FROM rt0 NOT INDEXED, vt0 GROUP BY vt0.c0, rt0.c0;
SELECT vt0.c0, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c0 HAVING (COUNT(GROUP_CONCAT(MIN(rt0.c0))) IN ()) UNION ALL SELECT vt0.c0, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c0 HAVING (NOT ((COUNT(GROUP_CONCAT(MIN(rt0.c0))) IN ()))) UNION ALL SELECT vt0.c0, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c0 HAVING (((COUNT(GROUP_CONCAT(MIN(rt0.c0))) IN ())) ISNULL);
SELECT vt0.c0, rt0.c0 FROM rt0 NOT INDEXED, vt0 GROUP BY vt0.c0, rt0.c0;
SELECT vt0.c0, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c0 HAVING (COUNT(GROUP_CONCAT(MIN(rt0.c0))) IN ()) UNION ALL SELECT vt0.c0, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c0 HAVING (NOT ((COUNT(GROUP_CONCAT(MIN(rt0.c0))) IN ()))) UNION ALL SELECT vt0.c0, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c0 HAVING (((COUNT(GROUP_CONCAT(MIN(rt0.c0))) IN ())) ISNULL);
SELECT vt0.c0, rt0.c0 FROM rt0 NOT INDEXED, vt0 GROUP BY vt0.c0, rt0.c0;
SELECT ALL * FROM vt0, rt0;
SELECT ALL * FROM vt0, rt0 WHERE ((((+ (rt0.c3))) NOT BETWEEN (((vt0.c0)!=(rt0.c3))) AND (ABS(rt0.c0)))) UNION ALL SELECT * FROM vt0, rt0 WHERE ((NOT ((((+ (rt0.c3))) NOT BETWEEN (((vt0.c0)!=(rt0.c3))) AND (ABS(rt0.c0)))))) UNION ALL SELECT * FROM vt0, rt0 WHERE ((((((+ (rt0.c3))) NOT BETWEEN (((vt0.c0)<>(rt0.c3))) AND (ABS(rt0.c0)))) ISNULL));
SELECT ALL * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (((HEX(vt0.c0))<=(((rt0.c3)>>(rt0.c0))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (((HEX(vt0.c0))<=(((rt0.c3)>>(rt0.c0))))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((((HEX(vt0.c0))<=(((rt0.c3)>>(rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT ALL rt0.c1, rt0.c4, vt0.c0, rt0.c3 FROM rt0 FULL OUTER JOIN vt0 ON rt0.c3 GROUP BY rt0.c1, rt0.c4, vt0.c0, rt0.c3;
SELECT ALL rt0.c1, rt0.c4, vt0.c0, rt0.c3 FROM rt0 FULL OUTER JOIN vt0 ON rt0.c3 WHERE ((((((rt0.c0, 'Y\', rt0.c2)) BETWEEN ((rt0.c1, rt0.c3, rt0.c2)) AND ((rt0.c2, rt0.c2, rt0.c1))))/(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c4 END))) GROUP BY rt0.c1, rt0.c4, vt0.c0, rt0.c3 UNION SELECT rt0.c1, rt0.c4, vt0.c0, rt0.c3 FROM rt0 FULL OUTER JOIN vt0 ON rt0.c3 WHERE ((NOT ((((((rt0.c0, 'Y\', rt0.c2)) BETWEEN ((rt0.c1, rt0.c3, rt0.c2)) AND ((rt0.c2, rt0.c2, rt0.c1))))/(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c4 END))))) GROUP BY rt0.c1, rt0.c4, vt0.c0, rt0.c3 UNION SELECT ALL rt0.c1, rt0.c4, vt0.c0, rt0.c3 FROM rt0 FULL OUTER JOIN vt0 ON rt0.c3 WHERE ((((((((rt0.c0, 'Y\', rt0.c2)) BETWEEN ((rt0.c1, rt0.c3, rt0.c2)) AND ((rt0.c2, rt0.c2, rt0.c1))))/(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c4 END))) ISNULL)) GROUP BY rt0.c1, rt0.c4, vt0.c0, rt0.c3;
SELECT ALL rt0.c1, rt0.c4, vt0.c0, rt0.c3 FROM rt0 FULL OUTER JOIN vt0 ON rt0.c3 GROUP BY rt0.c1, rt0.c4, vt0.c0, rt0.c3;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c0 COLLATE RTRIM AS REAL)) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (CAST(vt0.c0 COLLATE RTRIM AS REAL)))) UNION ALL SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 COLLATE RTRIM AS REAL)) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT rt0.c2 FROM vt0, rt0;
SELECT DISTINCT rt0.c2 FROM vt0, rt0 WHERE (CAST(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c3 END AS INTEGER)) UNION SELECT DISTINCT rt0.c2 FROM vt0, rt0 WHERE ((NOT (CAST(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c3 END AS INTEGER)))) UNION SELECT DISTINCT rt0.c2 FROM vt0, rt0 WHERE (((CAST(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c3 END AS INTEGER)) ISNULL));
SELECT DISTINCT rt0.c2 FROM vt0, rt0;
SELECT vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, rt0 WHERE ('pX\nS!읰<') GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, rt0 WHERE ((NOT ('pX\nS!읰<'))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, rt0 WHERE ((('pX\nS!읰<') ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0;
SELECT rt0.c2, rt0.c1, vt0.c0, rt0.c3, rt0.c0, rt0.c4 FROM vt0 FULL OUTER JOIN rt0 ON ((x'') NOT NULL) GROUP BY rt0.c2, rt0.c1, vt0.c0, rt0.c3, rt0.c0, rt0.c4;
SELECT ALL rt0.c2, rt0.c1, vt0.c0, rt0.c3, rt0.c0, rt0.c4 FROM vt0 FULL OUTER JOIN rt0 ON ((x'') NOT NULL) GROUP BY rt0.c2, rt0.c1, vt0.c0, rt0.c3, rt0.c0, rt0.c4 HAVING MAX(SUM(rt0.c1)) UNION ALL SELECT rt0.c2, rt0.c1, vt0.c0, rt0.c3, rt0.c0, rt0.c4 FROM vt0 FULL OUTER JOIN rt0 ON ((x'') NOT NULL) GROUP BY rt0.c2, rt0.c1, vt0.c0, rt0.c3, rt0.c0, rt0.c4 HAVING (NOT (MAX(SUM(rt0.c1)))) UNION ALL SELECT rt0.c2, rt0.c1, vt0.c0, rt0.c3, rt0.c0, rt0.c4 FROM vt0 FULL OUTER JOIN rt0 ON ((x'') NOT NULL) GROUP BY rt0.c2, rt0.c1, vt0.c0, rt0.c3, rt0.c0, rt0.c4 HAVING ((MAX(SUM(rt0.c1))) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (((vt0.c0)>(NULL)) COLLATE RTRIM) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((vt0.c0)>(NULL)) COLLATE RTRIM))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((vt0.c0)>(NULL)) COLLATE RTRIM) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CASE WHEN (rt0.c3 IN ()) THEN rt0.c4 END) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CASE WHEN (rt0.c3 IN ()) THEN rt0.c4 END))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CASE WHEN (rt0.c3 IN ()) THEN rt0.c4 END) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT vt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c2;
SELECT ALL vt0.c0, rt0.c2 FROM vt0, rt0 WHERE (((UNICODE(rt0.c0))<>((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) GROUP BY vt0.c0, rt0.c2 UNION SELECT ALL vt0.c0, rt0.c2 FROM vt0, rt0 WHERE ((NOT (((UNICODE(rt0.c0))<>((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))))) GROUP BY vt0.c0, rt0.c2 UNION SELECT vt0.c0, rt0.c2 FROM vt0, rt0 WHERE (((((UNICODE(rt0.c0))<>((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ISNULL)) GROUP BY vt0.c0, rt0.c2;
SELECT vt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c2;
SELECT ALL rt0.c3, rt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON rt0.c3 GROUP BY rt0.c3, rt0.c0;
SELECT ALL rt0.c3, rt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON rt0.c3 GROUP BY rt0.c3, rt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c3, rt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON rt0.c3 GROUP BY rt0.c3, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c3, rt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON rt0.c3 GROUP BY rt0.c3, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c3, rt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON rt0.c3 GROUP BY rt0.c3, rt0.c0;
SELECT ALL rt0.c3, rt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON rt0.c3 GROUP BY rt0.c3, rt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c3, rt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON rt0.c3 GROUP BY rt0.c3, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c3, rt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON rt0.c3 GROUP BY rt0.c3, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c3, rt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON rt0.c3 GROUP BY rt0.c3, rt0.c0;
SELECT * FROM vt0 INNER JOIN rt0 ON ((((vt0.c0) BETWEEN (rt0.c4) AND (rt0.c4))) IS TRUE);
SELECT * FROM vt0 INNER JOIN rt0 ON ((((vt0.c0) BETWEEN (rt0.c4) AND (rt0.c4))) IS TRUE) WHERE (((CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c1 THEN vt0.c0 END)AND(((rt0.c3)+(rt0.c1))))) UNION ALL SELECT ALL * FROM vt0 INNER JOIN rt0 ON ((((vt0.c0) BETWEEN (rt0.c4) AND (rt0.c4))) IS TRUE) WHERE ((NOT (((CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c1 THEN vt0.c0 END)AND(((rt0.c3)+(rt0.c1))))))) UNION ALL SELECT ALL * FROM vt0 INNER JOIN rt0 ON ((((vt0.c0) BETWEEN (rt0.c4) AND (rt0.c4))) IS TRUE) WHERE (((((CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c1 THEN vt0.c0 END)AND(((rt0.c3)+(rt0.c1))))) ISNULL));
SELECT * FROM vt0 INNER JOIN rt0 ON ((((vt0.c0) BETWEEN (rt0.c4) AND (rt0.c4))) IS TRUE);
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((vt0.c0)<<(vt0.c0))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0)<<(vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((vt0.c0)<<(vt0.c0))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT rt0.c1, vt0.c0, rt0.c3 FROM rt0 INNER JOIN vt0 ON ((rt0.c0)>=(CASE WHEN rt0.c2 THEN rt0.c4 END)) GROUP BY rt0.c1, vt0.c0, rt0.c3;
SELECT rt0.c1, vt0.c0, rt0.c3 FROM rt0 INNER JOIN vt0 ON ((rt0.c0)>=(CASE WHEN rt0.c2 THEN rt0.c4 END)) WHERE (vt0.c0) GROUP BY rt0.c1, vt0.c0, rt0.c3 UNION SELECT rt0.c1, vt0.c0, rt0.c3 FROM rt0 INNER JOIN vt0 ON ((rt0.c0)>=(CASE WHEN rt0.c2 THEN rt0.c4 END)) WHERE ((NOT (vt0.c0))) GROUP BY rt0.c1, vt0.c0, rt0.c3 UNION SELECT rt0.c1, vt0.c0, rt0.c3 FROM rt0 INNER JOIN vt0 ON ((rt0.c0)>=(CASE WHEN rt0.c2 THEN rt0.c4 END)) WHERE (((vt0.c0) ISNULL)) GROUP BY rt0.c1, vt0.c0, rt0.c3;
SELECT rt0.c1, vt0.c0, rt0.c3 FROM rt0 INNER JOIN vt0 ON ((rt0.c0)>=(CASE WHEN rt0.c2 THEN rt0.c4 END)) GROUP BY rt0.c1, vt0.c0, rt0.c3;
SELECT ALL rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2 HAVING (~ (((TOTAL(COUNT(*))) NOT BETWEEN (MAX(MAX(AVG(rt0.c2)))) AND (MIN('㤤T-/'))))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT ((~ (((TOTAL(COUNT(*))) NOT BETWEEN (MAX(MAX(AVG(rt0.c2)))) AND (MIN('㤤T-/'))))))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2 HAVING (((~ (((TOTAL(COUNT(*))) NOT BETWEEN (MAX(MAX(AVG(rt0.c2)))) AND (MIN('㤤T-/')))))) ISNULL);
SELECT ALL * FROM vt0, rt0;
SELECT * FROM vt0, rt0 WHERE (x'5f0c') UNION ALL SELECT * FROM vt0, rt0 WHERE ((NOT (x'5f0c'))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE (((x'5f0c') ISNULL));
SELECT ALL * FROM vt0, rt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
