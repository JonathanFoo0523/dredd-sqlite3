-- Time: 2024/06/12 07:00:40
-- Database: database19
-- Database version: 3.40.0
-- seed value: 3696496819
PRAGMA cache_size = 50000; -- 7ms;
PRAGMA temp_store=MEMORY; -- 1ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-8'; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 4ms;
COMMIT; -- 3ms;
ANALYZE; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA temp.auto_vacuum; -- 1ms;
UPDATE OR IGNORE rt0 SET (c2)=(''); -- 0ms;
PRAGMA temp.soft_heap_limit; -- 0ms;
ANALYZE; -- 0ms;
REINDEX  rt0; -- 0ms;
PRAGMA secure_delete; -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=('-1986291908') WHERE (((rt0.c1, rt0.c1, rt0.c0, rt0.c0, rt0.c2)) BETWEEN (((rt0.c1 IN ()), CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END, 0.18965292746734952, NULL, ((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))) AND ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)), (rt0.c0 IN (rt0.c1, 0.29137097056087)), (rt0.c1 IN ()), (rt0.c1 IN ()), rt0.c0 COLLATE BINARY))); -- 1ms;
ROLLBACK TRANSACTION; -- 1ms;
PRAGMA reverse_unordered_selects; -- 0ms;
UPDATE rt0 SET (c1)=(NULL); -- 0ms;
REINDEX NOCASE; -- 1ms;
END; -- 0ms;
UPDATE OR IGNORE rt0 SET c2=0Xffffffff899b973c; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
ANALYZE rt0; -- 1ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (0.18965292746734952); -- 0ms;
INSERT OR FAIL INTO rt0(c0, c1) VALUES (NULL, NULL); -- 1ms;
COMMIT TRANSACTION; -- 1ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (x''); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 1ms;
PRAGMA short_column_names; -- 0ms;
INSERT OR ABORT INTO rt0(c0) VALUES (0.7549679600117148); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO rt0 VALUES (-1.986291908E9, '}1', 0.9226546180339993); -- 1ms;
UPDATE rt0 SET c2=x'14f9320c'; -- 0ms;
REINDEX  rt0; -- 0ms;
REINDEX; -- 1ms;
INSERT OR REPLACE INTO rt0(c1) VALUES (-1184165530); -- 3ms;
UPDATE rt0 SET c0=','; -- 1ms;
UPDATE OR IGNORE rt0 SET (c1)=(NULL) WHERE (((rt0.c2)) BETWEEN ((0.18965292746734952)) AND ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))))); -- 0ms;
VACUUM; -- 1ms;
UPDATE OR IGNORE rt0 SET c0=NULL, c1=''; -- 0ms;
INSERT OR REPLACE INTO rt0 VALUES (x'', '-1184165530', '1266939206'); -- 1ms;
PRAGMA recursive_triggers; -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR ABORT INTO rt0(c0) VALUES (0.31577672552630764), (-1.18416553E9), (-1184165530); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c1, c2, c0) VALUES (NULL, x'', 0.7549679600117148), (NULL, 'c碊#w[', NULL), ('c碊#w[', 0.2544092786601325, 0x3b3d00bc); -- 0ms;
INSERT OR ABORT INTO rt0(c2, c1) VALUES ('2104444686', '-1160933783'); -- 1ms;
INSERT OR IGNORE INTO rt0(c0) VALUES (0.6271098184167211); -- 1ms;
CREATE VIRTUAL TABLE rt1 USING rtree(c0, c1, c2, c3, c4, +c5 REAL , +c6 BLOB ); -- 1ms;
PRAGMA temp.recursive_triggers = false; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'd531')OR('')) AS NUMERIC); -- 0ms;
INSERT OR ROLLBACK INTO rt1(c2, c3) VALUES (x'13b3', 0Xffffffffc689b80b); -- 1ms;
END TRANSACTION; -- 1ms;
CREATE TABLE t55 (c0 REAL UNIQUE ON CONFLICT IGNORE , c1 INT , c2 REAL ); -- 0ms;
PRAGMA temp.threads = 4571195570432398117; -- 0ms;
INSERT OR IGNORE INTO rt1(c6, c2) VALUES (NULL, '-1551861622'), ('Wc/sA', NULL), (0.1804209916359879, NULL); -- 1ms;
INSERT OR ABORT INTO t55 VALUES (0.1304205169451973, 0.4901324796578823, NULL); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c2) VALUES (0.8463291394219475); -- 1ms;
COMMIT; -- 1ms;
ANALYZE t55; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
PRAGMA incremental_vacuum(-391433418); -- 0ms;
COMMIT; -- 0ms;
INSERT OR IGNORE INTO rt1 VALUES (x'', -785370278, x'', NULL, NULL, '1474553729', 1.474553729E9); -- 0ms;
INSERT OR ROLLBACK INTO rt1(c0) VALUES (x''), (''), (NULL); -- 1ms;
INSERT OR ROLLBACK INTO rt1(c4, c1, c0, c6, c5, c2, c3) VALUES ((((- (x'b05f'))) ISNULL), '0.29137097056087', x'064d', 0.2544092786601325, '}1', '2118539729', 'P8'), (NULL, x'', x'', -1928850190, '', 'DJT', x''), ('-1463481776', 2104444686, NULL, x'', 0.4643577925342527, x'', '0.1304205169451973'); -- 1ms;
INSERT OR IGNORE INTO rt0(c1) VALUES (2.118539729E9); -- 0ms;
PRAGMA optimize; -- 0ms;
PRAGMA temp.journal_mode; -- 0ms;
ALTER TABLE t55 RENAME COLUMN c2 TO c64; -- 1ms;
ALTER TABLE t55 RENAME TO t0; -- 1ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL t0.c1 FROM rt0, t0;
SELECT ALL t0.c1 FROM rt0, t0 WHERE ((((rt0.c0))>=(((- (t0.c1)))))) UNION ALL SELECT ALL t0.c1 FROM rt0, t0 WHERE ((NOT ((((rt0.c0))>=(((- (t0.c1)))))))) UNION ALL SELECT t0.c1 FROM rt0, t0 WHERE ((((((rt0.c0))>=(((- (t0.c1)))))) ISNULL));
SELECT ALL t0.c1 FROM rt0, t0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((~ (rt0.c0))) NOT BETWEEN (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 END) AND (((rt0.c0)&(rt0.c0))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((~ (rt0.c0))) NOT BETWEEN (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 END) AND (((rt0.c0)&(rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((~ (rt0.c0))) NOT BETWEEN (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 END) AND (((rt0.c0)&(rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt1.c6, t0.c64, rt1.c2, rt1.c0, rt1.c3, t0.c1 FROM t0 RIGHT OUTER JOIN rt1 ON CASE WHEN ((rt1.c3)<=(rt1.c3)) THEN rt1.c2 COLLATE RTRIM END GROUP BY rt1.c6, t0.c64, rt1.c2, rt1.c0, rt1.c3, t0.c1;
SELECT rt1.c6, t0.c64, rt1.c2, rt1.c0, rt1.c3, t0.c1 FROM t0 RIGHT OUTER JOIN rt1 ON CASE WHEN ((rt1.c3)<=(rt1.c3)) THEN rt1.c2 COLLATE RTRIM END WHERE (t0.c0) GROUP BY rt1.c6, t0.c64, rt1.c2, rt1.c0, rt1.c3, t0.c1 UNION SELECT rt1.c6, t0.c64, rt1.c2, rt1.c0, rt1.c3, t0.c1 FROM t0 RIGHT OUTER JOIN rt1 ON CASE WHEN ((rt1.c3)<=(rt1.c3)) THEN rt1.c2 COLLATE RTRIM END WHERE ((NOT (t0.c0))) GROUP BY rt1.c6, t0.c64, rt1.c2, rt1.c0, rt1.c3, t0.c1 UNION SELECT ALL rt1.c6, t0.c64, rt1.c2, rt1.c0, rt1.c3, t0.c1 FROM t0 RIGHT OUTER JOIN rt1 ON CASE WHEN ((rt1.c3)<=(rt1.c3)) THEN rt1.c2 COLLATE RTRIM END WHERE (((t0.c0) ISNULL)) GROUP BY rt1.c6, t0.c64, rt1.c2, rt1.c0, rt1.c3, t0.c1;
SELECT rt1.c6, t0.c64, rt1.c2, rt1.c0, rt1.c3, t0.c1 FROM t0 RIGHT OUTER JOIN rt1 ON CASE WHEN ((rt1.c3)<=(rt1.c3)) THEN rt1.c2 COLLATE RTRIM END GROUP BY rt1.c6, t0.c64, rt1.c2, rt1.c0, rt1.c3, t0.c1;
SELECT t0.c1 FROM t0 GROUP BY t0.c1;
SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1 HAVING CAST(GROUP_CONCAT(t0.c1) AS REAL) UNION ALL SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1 HAVING (NOT (CAST(GROUP_CONCAT(t0.c1) AS REAL))) UNION ALL SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1 HAVING ((CAST(GROUP_CONCAT(t0.c1) AS REAL)) ISNULL);
SELECT t0.c1 FROM t0 GROUP BY t0.c1;
SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1 HAVING CAST(GROUP_CONCAT(t0.c1) AS REAL) UNION ALL SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1 HAVING (NOT (CAST(GROUP_CONCAT(t0.c1) AS REAL))) UNION ALL SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1 HAVING ((CAST(GROUP_CONCAT(t0.c1) AS REAL)) ISNULL);
SELECT t0.c1 FROM t0 GROUP BY t0.c1;
SELECT rt0.c2, t0.c64, rt0.c0 FROM t0 RIGHT OUTER JOIN rt0 ON rt0.c2;
SELECT ALL rt0.c2, t0.c64, rt0.c0 FROM t0 RIGHT OUTER JOIN rt0 ON rt0.c2 WHERE ((- ((+ (rt0.c0))))) UNION ALL SELECT rt0.c2, t0.c64, rt0.c0 FROM t0 RIGHT OUTER JOIN rt0 ON rt0.c2 WHERE ((NOT ((- ((+ (rt0.c0))))))) UNION ALL SELECT ALL rt0.c2, t0.c64, rt0.c0 FROM t0 RIGHT OUTER JOIN rt0 ON rt0.c2 WHERE ((((- ((+ (rt0.c0))))) ISNULL));
SELECT rt0.c2, t0.c64, rt0.c0 FROM t0 RIGHT OUTER JOIN rt0 ON rt0.c2;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (rt1.c4) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (rt1.c4))) UNION SELECT DISTINCT * FROM rt1 WHERE (((rt1.c4) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL t0.c1, rt1.c0, rt1.c1, rt1.c5, t0.c64, rt0.c0, rt0.c1, rt1.c2, t0.c0, rt1.c3, rt1.c6, rt0.c2 FROM rt1, rt0 CROSS JOIN t0 ON ((x'') BETWEEN (rt1.c0) AND (rt0.c0)) COLLATE BINARY COLLATE BINARY GROUP BY t0.c1, rt1.c0, rt1.c1, rt1.c5, t0.c64, rt0.c0, rt0.c1, rt1.c2, t0.c0, rt1.c3, rt1.c6, rt0.c2;
SELECT ALL t0.c1, rt1.c0, rt1.c1, rt1.c5, t0.c64, rt0.c0, rt0.c1, rt1.c2, t0.c0, rt1.c3, rt1.c6, rt0.c2 FROM rt1, rt0 CROSS JOIN t0 ON ((x'') BETWEEN (rt1.c0) AND (rt0.c0)) COLLATE BINARY COLLATE BINARY WHERE (TYPEOF(((rt0.c0) NOT BETWEEN (rt1.c6) AND (rt1.c4)))) GROUP BY t0.c1, rt1.c0, rt1.c1, rt1.c5, t0.c64, rt0.c0, rt0.c1, rt1.c2, t0.c0, rt1.c3, rt1.c6, rt0.c2 UNION SELECT t0.c1, rt1.c0, rt1.c1, rt1.c5, t0.c64, rt0.c0, rt0.c1, rt1.c2, t0.c0, rt1.c3, rt1.c6, rt0.c2 FROM rt1, rt0 CROSS JOIN t0 ON ((x'') BETWEEN (rt1.c0) AND (rt0.c0)) COLLATE BINARY COLLATE BINARY WHERE ((NOT (TYPEOF(((rt0.c0) NOT BETWEEN (rt1.c6) AND (rt1.c4)))))) GROUP BY t0.c1, rt1.c0, rt1.c1, rt1.c5, t0.c64, rt0.c0, rt0.c1, rt1.c2, t0.c0, rt1.c3, rt1.c6, rt0.c2 UNION SELECT ALL t0.c1, rt1.c0, rt1.c1, rt1.c5, t0.c64, rt0.c0, rt0.c1, rt1.c2, t0.c0, rt1.c3, rt1.c6, rt0.c2 FROM rt1, rt0 CROSS JOIN t0 ON ((x'') BETWEEN (rt1.c0) AND (rt0.c0)) COLLATE BINARY COLLATE BINARY WHERE (((TYPEOF(((rt0.c0) NOT BETWEEN (rt1.c6) AND (rt1.c4)))) ISNULL)) GROUP BY t0.c1, rt1.c0, rt1.c1, rt1.c5, t0.c64, rt0.c0, rt0.c1, rt1.c2, t0.c0, rt1.c3, rt1.c6, rt0.c2;
SELECT ALL t0.c1, rt1.c0, rt1.c1, rt1.c5, t0.c64, rt0.c0, rt0.c1, rt1.c2, t0.c0, rt1.c3, rt1.c6, rt0.c2 FROM rt1, rt0 CROSS JOIN t0 ON ((x'') BETWEEN (rt1.c0) AND (rt0.c0)) COLLATE BINARY COLLATE BINARY GROUP BY t0.c1, rt1.c0, rt1.c1, rt1.c5, t0.c64, rt0.c0, rt0.c1, rt1.c2, t0.c0, rt1.c3, rt1.c6, rt0.c2;
SELECT t0.c1, rt1.c6 FROM t0 LEFT OUTER JOIN rt0 ON rt1.c0 FULL OUTER JOIN rt1 ON ((rt1.c3) NOT BETWEEN (rt1.c6) AND (t0.c1)) COLLATE RTRIM COLLATE NOCASE GROUP BY t0.c1, rt1.c6;
SELECT ALL * FROM rt1;
SELECT * FROM rt1 WHERE ((((~ (rt1.c0))) NOT NULL)) UNION ALL SELECT * FROM rt1 WHERE ((NOT ((((~ (rt1.c0))) NOT NULL)))) UNION ALL SELECT ALL * FROM rt1 WHERE ((((((~ (rt1.c0))) NOT NULL)) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT rt1.c6 FROM rt1;
SELECT DISTINCT rt1.c6 FROM rt1 NOT INDEXED WHERE ((((x'9fae')) NOT BETWEEN (((rt1.c3 IN (rt1.c3, rt1.c5)))) AND ((((rt1.c2)*(rt1.c3)))))) UNION SELECT DISTINCT rt1.c6 FROM rt1 WHERE ((NOT ((((x'9fae')) NOT BETWEEN (((rt1.c3 IN (rt1.c3, rt1.c5)))) AND ((((rt1.c2)*(rt1.c3)))))))) UNION SELECT DISTINCT rt1.c6 FROM rt1 WHERE ((((((x'9fae')) NOT BETWEEN (((rt1.c3 IN (rt1.c3, rt1.c5)))) AND ((((rt1.c2)*(rt1.c3)))))) ISNULL));
SELECT DISTINCT rt1.c6 FROM rt1;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 WHERE (CASE WHEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) THEN 684648272 WHEN (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) THEN (rt0.c2 IN ()) WHEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND ('6[a[CX4M')) THEN rt0.c2 COLLATE RTRIM WHEN ((rt0.c1) IS TRUE) THEN ((rt0.c0)%(NULL)) WHEN rt0.c1 THEN CASE WHEN NULL THEN rt0.c1 END END) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (CASE WHEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) THEN 684648272 WHEN (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) THEN (rt0.c2 IN ()) WHEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND ('6[a[CX4M')) THEN rt0.c2 COLLATE RTRIM WHEN ((rt0.c1) IS TRUE) THEN ((rt0.c0)%(NULL)) WHEN rt0.c1 THEN CASE WHEN NULL THEN rt0.c1 END END))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (((CASE WHEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) THEN 684648272 WHEN (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) THEN (rt0.c2 IN ()) WHEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND ('6[a[CX4M')) THEN rt0.c2 COLLATE RTRIM WHEN ((rt0.c1) IS TRUE) THEN ((rt0.c0)%(NULL)) WHEN rt0.c1 THEN CASE WHEN NULL THEN rt0.c1 END END) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt1.c3, rt1.c1, rt1.c5, rt1.c0, rt1.c4, rt1.c6 FROM rt1 GROUP BY rt1.c3, rt1.c1, rt1.c5, rt1.c0, rt1.c4, rt1.c6;
SELECT rt1.c3, rt1.c1, rt1.c5, rt1.c0, rt1.c4, rt1.c6 FROM rt1 GROUP BY rt1.c3, rt1.c1, rt1.c5, rt1.c0, rt1.c4, rt1.c6 HAVING GROUP_CONCAT(COUNT(rt1.c6)) UNION ALL SELECT ALL rt1.c3, rt1.c1, rt1.c5, rt1.c0, rt1.c4, rt1.c6 FROM rt1 GROUP BY rt1.c3, rt1.c1, rt1.c5, rt1.c0, rt1.c4, rt1.c6 HAVING (NOT (GROUP_CONCAT(COUNT(rt1.c6)))) UNION ALL SELECT rt1.c3, rt1.c1, rt1.c5, rt1.c0, rt1.c4, rt1.c6 FROM rt1 GROUP BY rt1.c3, rt1.c1, rt1.c5, rt1.c0, rt1.c4, rt1.c6 HAVING ((GROUP_CONCAT(COUNT(rt1.c6))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c0, rt0.c2, rt0.c1))<>((rt0.c2, rt0.c0, 0.38266985745382853)))) IS TRUE)) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((((rt0.c0, rt0.c2, rt0.c1))!=((rt0.c2, rt0.c0, 0.38266985745382853)))) IS TRUE)))) UNION ALL SELECT * FROM rt0 WHERE ((((((((rt0.c0, rt0.c2, rt0.c1))!=((rt0.c2, rt0.c0, 0.38266985745382853)))) IS TRUE)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (SUBSTR(CAST(rt0.c1 AS TEXT), (((rt0.c2))>((0.1948194927108592))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (SUBSTR(CAST(rt0.c1 AS TEXT), (((rt0.c2))>((0.1948194927108592))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((SUBSTR(CAST(rt0.c1 AS TEXT), (((rt0.c2))>((0.1948194927108592))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt1.c1, rt1.c6, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c6, rt1.c2;
SELECT rt1.c1, rt1.c6, rt1.c2 FROM rt1 WHERE ((TYPEOF(rt1.c4) IN ())) GROUP BY rt1.c1, rt1.c6, rt1.c2 UNION SELECT rt1.c1, rt1.c6, rt1.c2 FROM rt1 WHERE ((NOT ((TYPEOF(rt1.c4) IN ())))) GROUP BY rt1.c1, rt1.c6, rt1.c2 UNION SELECT ALL rt1.c1, rt1.c6, rt1.c2 FROM rt1 WHERE ((((TYPEOF(rt1.c4) IN ())) ISNULL)) GROUP BY rt1.c1, rt1.c6, rt1.c2;
SELECT rt1.c1, rt1.c6, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c6, rt1.c2;
SELECT ALL rt1.c2, rt1.c3, rt1.c1, t0.c0, t0.c1, rt1.c5 FROM t0, rt1 GROUP BY rt1.c2, rt1.c3, rt1.c1, t0.c0, t0.c1, rt1.c5;
SELECT ALL rt1.c2, rt1.c3, rt1.c1, t0.c0, t0.c1, rt1.c5 FROM t0, rt1 GROUP BY rt1.c2, rt1.c3, rt1.c1, t0.c0, t0.c1, rt1.c5 HAVING ((SUM(rt1.c3)) BETWEEN (COUNT(*)) AND (MIN(rt1.c3))) UNION ALL SELECT rt1.c2, rt1.c3, rt1.c1, t0.c0, t0.c1, rt1.c5 FROM t0, rt1 GROUP BY rt1.c2, rt1.c3, rt1.c1, t0.c0, t0.c1, rt1.c5 HAVING (NOT (((SUM(rt1.c3)) BETWEEN (COUNT(*)) AND (MIN(rt1.c3))))) UNION ALL SELECT rt1.c2, rt1.c3, rt1.c1, t0.c0, t0.c1, rt1.c5 FROM t0, rt1 GROUP BY rt1.c2, rt1.c3, rt1.c1, t0.c0, t0.c1, rt1.c5 HAVING ((((SUM(rt1.c3)) BETWEEN (COUNT(*)) AND (MIN(rt1.c3)))) ISNULL);
SELECT ALL rt1.c2, rt1.c3, rt1.c1, t0.c0, t0.c1, rt1.c5 FROM t0, rt1 GROUP BY rt1.c2, rt1.c3, rt1.c1, t0.c0, t0.c1, rt1.c5;
SELECT ALL rt1.c2, rt1.c3, rt1.c1, t0.c0, t0.c1, rt1.c5 FROM t0, rt1 GROUP BY rt1.c2, rt1.c3, rt1.c1, t0.c0, t0.c1, rt1.c5 HAVING ((SUM(rt1.c3)) BETWEEN (COUNT(*)) AND (MIN(rt1.c3))) UNION ALL SELECT rt1.c2, rt1.c3, rt1.c1, t0.c0, t0.c1, rt1.c5 FROM t0, rt1 GROUP BY rt1.c2, rt1.c3, rt1.c1, t0.c0, t0.c1, rt1.c5 HAVING (NOT (((SUM(rt1.c3)) BETWEEN (COUNT(*)) AND (MIN(rt1.c3))))) UNION ALL SELECT rt1.c2, rt1.c3, rt1.c1, t0.c0, t0.c1, rt1.c5 FROM t0, rt1 GROUP BY rt1.c2, rt1.c3, rt1.c1, t0.c0, t0.c1, rt1.c5 HAVING ((((SUM(rt1.c3)) BETWEEN (COUNT(*)) AND (MIN(rt1.c3)))) ISNULL);
SELECT ALL rt1.c2, rt1.c3, rt1.c1, t0.c0, t0.c1, rt1.c5 FROM t0, rt1 GROUP BY rt1.c2, rt1.c3, rt1.c1, t0.c0, t0.c1, rt1.c5;
SELECT * FROM rt0 LEFT OUTER JOIN rt1 ON (((rt0.c2))>=((rt1.c6))) COLLATE BINARY;
SELECT * FROM rt0 LEFT OUTER JOIN rt1 ON (((rt0.c2))>=((rt1.c6))) COLLATE BINARY WHERE (((CAST(rt1.c4 AS NUMERIC)) NOT BETWEEN (CAST(rt1.c5 AS INTEGER)) AND (((rt1.c5) NOT BETWEEN (rt1.c3) AND (rt1.c2))))) UNION ALL SELECT * FROM rt0 LEFT OUTER JOIN rt1 ON (((rt0.c2))>=((rt1.c6))) COLLATE BINARY WHERE ((NOT (((CAST(rt1.c4 AS NUMERIC)) NOT BETWEEN (CAST(rt1.c5 AS INTEGER)) AND (((rt1.c5) NOT BETWEEN (rt1.c3) AND (rt1.c2))))))) UNION ALL SELECT ALL * FROM rt0 LEFT OUTER JOIN rt1 ON (((rt0.c2))>=((rt1.c6))) COLLATE BINARY WHERE (((((CAST(rt1.c4 AS NUMERIC)) NOT BETWEEN (CAST(rt1.c5 AS INTEGER)) AND (((rt1.c5) NOT BETWEEN (rt1.c3) AND (rt1.c2))))) ISNULL));
SELECT * FROM rt0 LEFT OUTER JOIN rt1 ON (((rt0.c2))>=((rt1.c6))) COLLATE BINARY;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE ((('2104444686')/(QUOTE(rt1.c0)))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT ((('2104444686')/(QUOTE(rt1.c0)))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((((('2104444686')/(QUOTE(rt1.c0)))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL rt1.c1, rt0.c2, rt1.c0, rt1.c3, rt0.c0, rt0.c1, rt1.c2, rt1.c4 FROM rt0, rt1 GROUP BY rt1.c1, rt0.c2, rt1.c0, rt1.c3, rt0.c0, rt0.c1, rt1.c2, rt1.c4;
SELECT rt1.c1, rt0.c2, rt1.c0, rt1.c3, rt0.c0, rt0.c1, rt1.c2, rt1.c4 FROM rt0, rt1 WHERE (((LOWER(rt1.c6)) IS FALSE)) GROUP BY rt1.c1, rt0.c2, rt1.c0, rt1.c3, rt0.c0, rt0.c1, rt1.c2, rt1.c4 UNION SELECT rt1.c1, rt0.c2, rt1.c0, rt1.c3, rt0.c0, rt0.c1, rt1.c2, rt1.c4 FROM rt0, rt1 WHERE ((NOT (((LOWER(rt1.c6)) IS FALSE)))) GROUP BY rt1.c1, rt0.c2, rt1.c0, rt1.c3, rt0.c0, rt0.c1, rt1.c2, rt1.c4 UNION SELECT rt1.c1, rt0.c2, rt1.c0, rt1.c3, rt0.c0, rt0.c1, rt1.c2, rt1.c4 FROM rt0, rt1 NOT INDEXED WHERE (((((LOWER(rt1.c6)) IS FALSE)) ISNULL)) GROUP BY rt1.c1, rt0.c2, rt1.c0, rt1.c3, rt0.c0, rt0.c1, rt1.c2, rt1.c4;
SELECT ALL rt1.c1, rt0.c2, rt1.c0, rt1.c3, rt0.c0, rt0.c1, rt1.c2, rt1.c4 FROM rt0, rt1 GROUP BY rt1.c1, rt0.c2, rt1.c0, rt1.c3, rt0.c0, rt0.c1, rt1.c2, rt1.c4;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING TOTAL(((GROUP_CONCAT(COUNT(*))) BETWEEN ('-2114073898') AND (rt0.c1))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (TOTAL(((GROUP_CONCAT(COUNT(*))) BETWEEN ('-2114073898') AND (rt0.c1))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((TOTAL(((GROUP_CONCAT(COUNT(*))) BETWEEN ('-2114073898') AND (rt0.c1)))) ISNULL);
SELECT t0.c0 FROM rt0, t0;
SELECT ALL t0.c0 FROM rt0, t0 WHERE (NULL) UNION ALL SELECT t0.c0 FROM rt0, t0 WHERE ((NOT (NULL))) UNION ALL SELECT t0.c0 FROM rt0, t0 WHERE (((NULL) ISNULL));
SELECT t0.c0 FROM rt0, t0;
SELECT DISTINCT rt0.c1 FROM t0, rt0;
SELECT DISTINCT rt0.c1 FROM t0, rt0 WHERE (((t0.c64)>(t0.c64)) COLLATE RTRIM) UNION SELECT DISTINCT rt0.c1 FROM t0, rt0 WHERE ((NOT (((t0.c64)>(t0.c64)) COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c1 FROM t0, rt0 WHERE (((((t0.c64)>(t0.c64)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt0.c1 FROM t0, rt0;
SELECT rt1.c0, rt1.c5, rt1.c3, rt0.c1, rt1.c1 FROM rt1 INNER JOIN rt0 ON CAST('-647959307' AS REAL) GROUP BY rt1.c0, rt1.c5, rt1.c3, rt0.c1, rt1.c1;
SELECT ALL rt1.c0, rt1.c5, rt1.c3, rt0.c1, rt1.c1 FROM rt1 INNER JOIN rt0 ON CAST('-647959307' AS REAL) WHERE ((+ (((rt1.c3)<=(rt0.c0))))) GROUP BY rt1.c0, rt1.c5, rt1.c3, rt0.c1, rt1.c1 UNION SELECT rt1.c0, rt1.c5, rt1.c3, rt0.c1, rt1.c1 FROM rt1 INNER JOIN rt0 ON CAST('-647959307' AS REAL) WHERE ((NOT ((+ (((rt1.c3)<=(rt0.c0))))))) GROUP BY rt1.c0, rt1.c5, rt1.c3, rt0.c1, rt1.c1 UNION SELECT ALL rt1.c0, rt1.c5, rt1.c3, rt0.c1, rt1.c1 FROM rt1 INNER JOIN rt0 ON CAST('-647959307' AS REAL) WHERE ((((+ (((rt1.c3)<=(rt0.c0))))) ISNULL)) GROUP BY rt1.c0, rt1.c5, rt1.c3, rt0.c1, rt1.c1;
SELECT rt1.c0, rt1.c5, rt1.c3, rt0.c1, rt1.c1 FROM rt1 INNER JOIN rt0 ON CAST('-647959307' AS REAL) GROUP BY rt1.c0, rt1.c5, rt1.c3, rt0.c1, rt1.c1;
SELECT rt0.c0, t0.c64, rt1.c4, rt1.c3, rt1.c1, rt1.c6, rt1.c2, rt0.c2, rt1.c5, t0.c0 FROM t0, rt0, rt1 GROUP BY rt0.c0, t0.c64, rt1.c4, rt1.c3, rt1.c1, rt1.c6, rt1.c2, rt0.c2, rt1.c5, t0.c0;
SELECT ALL rt0.c0, t0.c64, rt1.c4, rt1.c3, rt1.c1, rt1.c6, rt1.c2, rt0.c2, rt1.c5, t0.c0 FROM t0, rt0, rt1 GROUP BY rt0.c0, t0.c64, rt1.c4, rt1.c3, rt1.c1, rt1.c6, rt1.c2, rt0.c2, rt1.c5, t0.c0 HAVING MAX(((MIN(rt1.c3)) IS TRUE)) UNION ALL SELECT rt0.c0, t0.c64, rt1.c4, rt1.c3, rt1.c1, rt1.c6, rt1.c2, rt0.c2, rt1.c5, t0.c0 FROM t0, rt0, rt1 GROUP BY rt0.c0, t0.c64, rt1.c4, rt1.c3, rt1.c1, rt1.c6, rt1.c2, rt0.c2, rt1.c5, t0.c0 HAVING (NOT (MAX(((MIN(rt1.c3)) IS TRUE)))) UNION ALL SELECT ALL rt0.c0, t0.c64, rt1.c4, rt1.c3, rt1.c1, rt1.c6, rt1.c2, rt0.c2, rt1.c5, t0.c0 FROM t0, rt0, rt1 GROUP BY rt0.c0, t0.c64, rt1.c4, rt1.c3, rt1.c1, rt1.c6, rt1.c2, rt0.c2, rt1.c5, t0.c0 HAVING ((MAX(((MIN(rt1.c3)) IS TRUE))) ISNULL);
SELECT ALL MAX(rt0.c2) FROM rt0, t0 ORDER BY ((('1X/!')%(rt0.c2)) IN (((t0.c0)<<(t0.c0)))) DESC;
SELECT ALL * FROM rt0, t0 NATURAL JOIN rt1;
SELECT * FROM rt0, t0 NATURAL JOIN rt1 WHERE (CASE ((rt1.c3)-(rt1.c5))  WHEN (((1e500))>=((rt1.c0))) THEN ((rt1.c1)*(rt1.c5)) END) UNION ALL SELECT * FROM rt0, t0 NOT INDEXED NATURAL JOIN rt1 WHERE ((NOT (CASE ((rt1.c3)-(rt1.c5))  WHEN (((1e500))>=((rt1.c0))) THEN ((rt1.c1)*(rt1.c5)) END))) UNION ALL SELECT ALL * FROM rt0, t0 NATURAL JOIN rt1 WHERE (((CASE ((rt1.c3)-(rt1.c5))  WHEN (((1e500))>=((rt1.c0))) THEN ((rt1.c1)*(rt1.c5)) END) ISNULL));
SELECT ALL * FROM rt0, t0 NATURAL JOIN rt1;
SELECT DISTINCT t0.c64, rt1.c0, rt1.c6, rt0.c1, t0.c1, rt1.c1, rt1.c5, rt1.c2, rt1.c4, rt0.c2, rt1.c3, t0.c0, rt0.c0 FROM rt0, rt1, t0;
SELECT DISTINCT t0.c64, rt1.c0, rt1.c6, rt0.c1, t0.c1, rt1.c1, rt1.c5, rt1.c2, rt1.c4, rt0.c2, rt1.c3, t0.c0, rt0.c0 FROM rt0, rt1, t0 WHERE ('') UNION SELECT DISTINCT t0.c64, rt1.c0, rt1.c6, rt0.c1, t0.c1, rt1.c1, rt1.c5, rt1.c2, rt1.c4, rt0.c2, rt1.c3, t0.c0, rt0.c0 FROM rt0, rt1, t0 WHERE ((NOT (''))) UNION SELECT DISTINCT t0.c64, rt1.c0, rt1.c6, rt0.c1, t0.c1, rt1.c1, rt1.c5, rt1.c2, rt1.c4, rt0.c2, rt1.c3, t0.c0, rt0.c0 FROM rt0, rt1, t0 WHERE ((('') ISNULL));
SELECT DISTINCT t0.c64, rt1.c0, rt1.c6, rt0.c1, t0.c1, rt1.c1, rt1.c5, rt1.c2, rt1.c4, rt0.c2, rt1.c3, t0.c0, rt0.c0 FROM rt0, rt1, t0;
SELECT ALL rt1.c6, rt1.c3, rt1.c4, rt1.c0, t0.c64 FROM t0 FULL OUTER JOIN rt1 ON ((((rt1.c0)OR(rt1.c2)))AND(rt1.c3)) COLLATE NOCASE GROUP BY rt1.c6, rt1.c3, rt1.c4, rt1.c0, t0.c64;
SELECT ALL rt1.c6, rt1.c3, rt1.c4, rt1.c0, t0.c64 FROM t0 FULL OUTER JOIN rt1 ON ((((rt1.c0)OR(rt1.c2)))AND(rt1.c3)) COLLATE NOCASE WHERE (CASE (((t0.c1))==((rt1.c5)))  WHEN ((rt1.c0) NOT NULL) THEN rt1.c4 ELSE CASE rt1.c2  WHEN rt1.c6 THEN rt1.c3 ELSE rt1.c2 END END) GROUP BY rt1.c6, rt1.c3, rt1.c4, rt1.c0, t0.c64 UNION SELECT rt1.c6, rt1.c3, rt1.c4, rt1.c0, t0.c64 FROM t0 FULL OUTER JOIN rt1 ON ((((rt1.c0)OR(rt1.c2)))AND(rt1.c3)) COLLATE NOCASE WHERE ((NOT (CASE (((t0.c1))==((rt1.c5)))  WHEN ((rt1.c0) NOT NULL) THEN rt1.c4 ELSE CASE rt1.c2  WHEN rt1.c6 THEN rt1.c3 ELSE rt1.c2 END END))) GROUP BY rt1.c6, rt1.c3, rt1.c4, rt1.c0, t0.c64 UNION SELECT rt1.c6, rt1.c3, rt1.c4, rt1.c0, t0.c64 FROM t0 FULL OUTER JOIN rt1 ON ((((rt1.c0)OR(rt1.c2)))AND(rt1.c3)) COLLATE NOCASE WHERE (((CASE (((t0.c1))==((rt1.c5)))  WHEN ((rt1.c0) NOT NULL) THEN rt1.c4 ELSE CASE rt1.c2  WHEN rt1.c6 THEN rt1.c3 ELSE rt1.c2 END END) ISNULL)) GROUP BY rt1.c6, rt1.c3, rt1.c4, rt1.c0, t0.c64;
SELECT ALL rt1.c6, rt1.c3, rt1.c4, rt1.c0, t0.c64 FROM t0 FULL OUTER JOIN rt1 ON ((((rt1.c0)OR(rt1.c2)))AND(rt1.c3)) COLLATE NOCASE GROUP BY rt1.c6, rt1.c3, rt1.c4, rt1.c0, t0.c64;
SELECT rt1.c2, t0.c64, rt1.c3 FROM t0 NOT INDEXED, rt1 GROUP BY rt1.c2, t0.c64, rt1.c3;
SELECT ALL rt1.c2, t0.c64, rt1.c3 FROM t0, rt1 GROUP BY rt1.c2, t0.c64, rt1.c3 HAVING MAX(CAST(TOTAL(rt1.c2) AS BLOB)) UNION ALL SELECT ALL rt1.c2, t0.c64, rt1.c3 FROM t0, rt1 GROUP BY rt1.c2, t0.c64, rt1.c3 HAVING (NOT (MAX(CAST(TOTAL(rt1.c2) AS BLOB)))) UNION ALL SELECT ALL rt1.c2, t0.c64, rt1.c3 FROM t0, rt1 GROUP BY rt1.c2, t0.c64, rt1.c3 HAVING ((MAX(CAST(TOTAL(rt1.c2) AS BLOB))) ISNULL);
SELECT ALL * FROM rt1;
SELECT * FROM rt1 WHERE ((NOT (((((rt1.c0)OR(0.18965292746734952)))AND(rt1.c6))))) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT ((NOT (((((rt1.c0)OR(0.18965292746734952)))AND(rt1.c6))))))) UNION ALL SELECT * FROM rt1 WHERE ((((NOT (((((rt1.c0)OR(0.18965292746734952)))AND(rt1.c6))))) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((((((((CAST(rt0.c2 AS TEXT))AND(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 END)))OR(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))))AND('UBLL9d')))OR(rt0.c1))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT (((((((((CAST(rt0.c2 AS TEXT))AND(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 END)))OR(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))))AND('UBLL9d')))OR(rt0.c1))))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((((((((((CAST(rt0.c2 AS TEXT))AND(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 END)))OR(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))))AND('UBLL9d')))OR(rt0.c1))) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT ALL rt0.c2, rt1.c1, rt0.c1, rt1.c2, rt0.c0, rt1.c3 FROM rt0, rt1 GROUP BY rt0.c2, rt1.c1, rt0.c1, rt1.c2, rt0.c0, rt1.c3;
SELECT ALL rt0.c2, rt1.c1, rt0.c1, rt1.c2, rt0.c0, rt1.c3 FROM rt0, rt1 WHERE (((NULL) BETWEEN (rt1.c2) AND (rt1.c5)) COLLATE NOCASE) GROUP BY rt0.c2, rt1.c1, rt0.c1, rt1.c2, rt0.c0, rt1.c3 UNION SELECT rt0.c2, rt1.c1, rt0.c1, rt1.c2, rt0.c0, rt1.c3 FROM rt0, rt1 WHERE ((NOT (((NULL) BETWEEN (rt1.c2) AND (rt1.c5)) COLLATE NOCASE))) GROUP BY rt0.c2, rt1.c1, rt0.c1, rt1.c2, rt0.c0, rt1.c3 UNION SELECT ALL rt0.c2, rt1.c1, rt0.c1, rt1.c2, rt0.c0, rt1.c3 FROM rt0, rt1 WHERE (((((NULL) BETWEEN (rt1.c2) AND (rt1.c5)) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c2, rt1.c1, rt0.c1, rt1.c2, rt0.c0, rt1.c3;
SELECT ALL rt0.c2, rt1.c1, rt0.c1, rt1.c2, rt0.c0, rt1.c3 FROM rt0, rt1 GROUP BY rt0.c2, rt1.c1, rt0.c1, rt1.c2, rt0.c0, rt1.c3;
SELECT ALL rt0.c2, t0.c64, rt1.c2 FROM rt0, rt1, t0 GROUP BY rt0.c2, t0.c64, rt1.c2;
SELECT rt0.c2, t0.c64, rt1.c2 FROM rt0, rt1, t0 GROUP BY rt0.c2, t0.c64, rt1.c2 HAVING NULL UNION ALL SELECT rt0.c2, t0.c64, rt1.c2 FROM rt0, rt1, t0 GROUP BY rt0.c2, t0.c64, rt1.c2 HAVING (NOT (NULL)) UNION ALL SELECT rt0.c2, t0.c64, rt1.c2 FROM rt0, rt1, t0 GROUP BY rt0.c2, t0.c64, rt1.c2 HAVING ((NULL) ISNULL);
SELECT ALL rt0.c2, t0.c64, rt1.c2 FROM rt0, rt1, t0 GROUP BY rt0.c2, t0.c64, rt1.c2;
SELECT rt0.c2, t0.c64, rt1.c2 FROM rt0, rt1, t0 GROUP BY rt0.c2, t0.c64, rt1.c2 HAVING NULL UNION ALL SELECT rt0.c2, t0.c64, rt1.c2 FROM rt0, rt1, t0 GROUP BY rt0.c2, t0.c64, rt1.c2 HAVING (NOT (NULL)) UNION ALL SELECT rt0.c2, t0.c64, rt1.c2 FROM rt0, rt1, t0 GROUP BY rt0.c2, t0.c64, rt1.c2 HAVING ((NULL) ISNULL);
SELECT ALL rt0.c2, t0.c64, rt1.c2 FROM rt0, rt1, t0 GROUP BY rt0.c2, t0.c64, rt1.c2;
SELECT ALL * FROM rt0, rt1, t0;
SELECT ALL * FROM rt0, rt1, t0 WHERE ('2104444686') UNION ALL SELECT ALL * FROM rt0, rt1, t0 WHERE ((NOT ('2104444686'))) UNION ALL SELECT * FROM rt0, rt1, t0 WHERE ((('2104444686') ISNULL));
SELECT ALL * FROM rt0, rt1, t0;
SELECT DISTINCT rt1.c6, rt1.c5, rt1.c4, t0.c0, t0.c64, rt0.c0, rt1.c0, rt1.c2, rt1.c3, t0.c1, rt0.c2 FROM t0, rt0, rt1;
SELECT DISTINCT rt1.c6, rt1.c5, rt1.c4, t0.c0, t0.c64, rt0.c0, rt1.c0, rt1.c2, rt1.c3, t0.c1, rt0.c2 FROM t0, rt0, rt1 WHERE (rt0.c2) UNION SELECT DISTINCT rt1.c6, rt1.c5, rt1.c4, t0.c0, t0.c64, rt0.c0, rt1.c0, rt1.c2, rt1.c3, t0.c1, rt0.c2 FROM t0, rt0, rt1 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT rt1.c6, rt1.c5, rt1.c4, t0.c0, t0.c64, rt0.c0, rt1.c0, rt1.c2, rt1.c3, t0.c1, rt0.c2 FROM t0, rt0, rt1 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT rt1.c6, rt1.c5, rt1.c4, t0.c0, t0.c64, rt0.c0, rt1.c0, rt1.c2, rt1.c3, t0.c1, rt0.c2 FROM t0, rt0, rt1;
SELECT rt0.c2 FROM rt0 NOT INDEXED GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE (((((rt0.c1)>(rt0.c2)))>(((rt0.c2)|(rt0.c0))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c1)>(rt0.c2)))>(((rt0.c2)|(rt0.c0))))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE (((((((rt0.c1)>(rt0.c2)))>(((rt0.c2)|(rt0.c0))))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 NOT INDEXED GROUP BY rt0.c2;
SELECT rt1.c2, t0.c1, rt1.c0, rt1.c5, rt1.c3, t0.c0, rt1.c1, t0.c64, rt1.c4, rt1.c6 FROM rt1 FULL OUTER JOIN t0 ON ((((rt1.c1)<(rt1.c5)))<<(NULL)) GROUP BY rt1.c2, t0.c1, rt1.c0, rt1.c5, rt1.c3, t0.c0, rt1.c1, t0.c64, rt1.c4, rt1.c6;
SELECT ALL rt1.c2, t0.c1, rt1.c0, rt1.c5, rt1.c3, t0.c0, rt1.c1, t0.c64, rt1.c4, rt1.c6 FROM rt1 FULL OUTER JOIN t0 ON ((((rt1.c1)<(rt1.c5)))<<(NULL)) GROUP BY rt1.c2, t0.c1, rt1.c0, rt1.c5, rt1.c3, t0.c0, rt1.c1, t0.c64, rt1.c4, rt1.c6 HAVING AVG(SUM(rt1.c4)) UNION ALL SELECT ALL rt1.c2, t0.c1, rt1.c0, rt1.c5, rt1.c3, t0.c0, rt1.c1, t0.c64, rt1.c4, rt1.c6 FROM rt1 FULL OUTER JOIN t0 ON ((((rt1.c1)<(rt1.c5)))<<(NULL)) GROUP BY rt1.c2, t0.c1, rt1.c0, rt1.c5, rt1.c3, t0.c0, rt1.c1, t0.c64, rt1.c4, rt1.c6 HAVING (NOT (AVG(SUM(rt1.c4)))) UNION ALL SELECT rt1.c2, t0.c1, rt1.c0, rt1.c5, rt1.c3, t0.c0, rt1.c1, t0.c64, rt1.c4, rt1.c6 FROM rt1 FULL OUTER JOIN t0 ON ((((rt1.c1)<(rt1.c5)))<<(NULL)) GROUP BY rt1.c2, t0.c1, rt1.c0, rt1.c5, rt1.c3, t0.c0, rt1.c1, t0.c64, rt1.c4, rt1.c6 HAVING ((AVG(SUM(rt1.c4))) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((rt0.c2)AND(((rt0.c1)||(rt0.c1)))))AND((+ (rt0.c1))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c2)AND(((rt0.c1)||(rt0.c1)))))AND((+ (rt0.c1))))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((((rt0.c2)AND(((rt0.c1)||(rt0.c1)))))AND((+ (rt0.c1))))) ISNULL));
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt1.c6, rt1.c5, t0.c0, rt0.c0, rt1.c2, rt1.c1, rt0.c2, t0.c64, t0.c1, rt0.c1, rt1.c3, rt1.c4, rt1.c0 FROM rt0, rt1 CROSS JOIN t0 ON ((0.38485596770096564)*((((rt0.c2))<((t0.c64)))));
SELECT DISTINCT rt1.c6, rt1.c5, t0.c0, rt0.c0, rt1.c2, rt1.c1, rt0.c2, t0.c64, t0.c1, rt0.c1, rt1.c3, rt1.c4, rt1.c0 FROM rt0, rt1 CROSS JOIN t0 ON ((0.38485596770096564)*((((rt0.c2))<((t0.c64))))) WHERE ((((+ (rt0.c0))) BETWEEN ((rt1.c2 IN ())) AND (((t0.c0) NOTNULL)))) UNION SELECT DISTINCT rt1.c6, rt1.c5, t0.c0, rt0.c0, rt1.c2, rt1.c1, rt0.c2, t0.c64, t0.c1, rt0.c1, rt1.c3, rt1.c4, rt1.c0 FROM rt0, rt1 CROSS JOIN t0 ON ((0.38485596770096564)*((((rt0.c2))<((t0.c64))))) WHERE ((NOT ((((+ (rt0.c0))) BETWEEN ((rt1.c2 IN ())) AND (((t0.c0) NOTNULL)))))) UNION SELECT DISTINCT rt1.c6, rt1.c5, t0.c0, rt0.c0, rt1.c2, rt1.c1, rt0.c2, t0.c64, t0.c1, rt0.c1, rt1.c3, rt1.c4, rt1.c0 FROM rt0, rt1 CROSS JOIN t0 ON ((0.38485596770096564)*((((rt0.c2))<((t0.c64))))) WHERE ((((((+ (rt0.c0))) BETWEEN ((rt1.c2 IN ())) AND (((t0.c0) NOTNULL)))) ISNULL));
SELECT DISTINCT rt1.c6, rt1.c5, t0.c0, rt0.c0, rt1.c2, rt1.c1, rt0.c2, t0.c64, t0.c1, rt0.c1, rt1.c3, rt1.c4, rt1.c0 FROM rt0, rt1 CROSS JOIN t0 ON ((0.38485596770096564)*((((rt0.c2))<((t0.c64)))));
SELECT ALL t0.c1, rt0.c2, rt0.c1, rt1.c5, rt0.c0, rt1.c1, t0.c0, rt1.c3, rt1.c4, rt1.c6 FROM rt1, t0, rt0 GROUP BY t0.c1, rt0.c2, rt0.c1, rt1.c5, rt0.c0, rt1.c1, t0.c0, rt1.c3, rt1.c4, rt1.c6;
SELECT ALL t0.c1, rt0.c2, rt0.c1, rt1.c5, rt0.c0, rt1.c1, t0.c0, rt1.c3, rt1.c4, rt1.c6 FROM rt1, t0, rt0 WHERE (rt1.c3) GROUP BY t0.c1, rt0.c2, rt0.c1, rt1.c5, rt0.c0, rt1.c1, t0.c0, rt1.c3, rt1.c4, rt1.c6 UNION SELECT t0.c1, rt0.c2, rt0.c1, rt1.c5, rt0.c0, rt1.c1, t0.c0, rt1.c3, rt1.c4, rt1.c6 FROM rt1, t0, rt0 WHERE ((NOT (rt1.c3))) GROUP BY t0.c1, rt0.c2, rt0.c1, rt1.c5, rt0.c0, rt1.c1, t0.c0, rt1.c3, rt1.c4, rt1.c6 UNION SELECT ALL t0.c1, rt0.c2, rt0.c1, rt1.c5, rt0.c0, rt1.c1, t0.c0, rt1.c3, rt1.c4, rt1.c6 FROM rt1, t0, rt0 NOT INDEXED WHERE (((rt1.c3) ISNULL)) GROUP BY t0.c1, rt0.c2, rt0.c1, rt1.c5, rt0.c0, rt1.c1, t0.c0, rt1.c3, rt1.c4, rt1.c6;
SELECT ALL t0.c1, rt0.c2, rt0.c1, rt1.c5, rt0.c0, rt1.c1, t0.c0, rt1.c3, rt1.c4, rt1.c6 FROM rt1, t0, rt0 GROUP BY t0.c1, rt0.c2, rt0.c1, rt1.c5, rt0.c0, rt1.c1, t0.c0, rt1.c3, rt1.c4, rt1.c6;
SELECT rt1.c5, rt1.c4 FROM rt0, rt1 GROUP BY rt1.c5, rt1.c4;
SELECT rt1.c5, rt1.c4 FROM rt0, rt1 GROUP BY rt1.c5, rt1.c4 HAVING ((NULLIF(DISTINCT rt0.c0, TOTAL(rt1.c3))) NOTNULL) UNION ALL SELECT ALL rt1.c5, rt1.c4 FROM rt0, rt1 GROUP BY rt1.c5, rt1.c4 HAVING (NOT (((NULLIF(DISTINCT rt0.c0, TOTAL(rt1.c3))) NOTNULL))) UNION ALL SELECT rt1.c5, rt1.c4 FROM rt0, rt1 GROUP BY rt1.c5, rt1.c4 HAVING ((((NULLIF(DISTINCT rt0.c0, TOTAL(rt1.c3))) NOTNULL)) ISNULL);
SELECT rt1.c5, rt1.c4 FROM rt0, rt1 GROUP BY rt1.c5, rt1.c4;
SELECT rt1.c5, rt1.c4 FROM rt0, rt1 GROUP BY rt1.c5, rt1.c4 HAVING ((NULLIF(DISTINCT rt0.c0, TOTAL(rt1.c3))) NOTNULL) UNION ALL SELECT ALL rt1.c5, rt1.c4 FROM rt0, rt1 GROUP BY rt1.c5, rt1.c4 HAVING (NOT (((NULLIF(DISTINCT rt0.c0, TOTAL(rt1.c3))) NOTNULL))) UNION ALL SELECT rt1.c5, rt1.c4 FROM rt0, rt1 GROUP BY rt1.c5, rt1.c4 HAVING ((((NULLIF(DISTINCT rt0.c0, TOTAL(rt1.c3))) NOTNULL)) ISNULL);
SELECT rt1.c5, rt1.c4 FROM rt0, rt1 GROUP BY rt1.c5, rt1.c4;
SELECT rt1.c3, t0.c0, rt0.c0, rt1.c5, rt1.c4 FROM t0, rt0, rt1;
SELECT rt1.c3, t0.c0, rt0.c0, rt1.c5, rt1.c4 FROM t0, rt0, rt1 WHERE ((((~ (rt1.c6)))OR((NOT (rt1.c0))))) UNION ALL SELECT ALL rt1.c3, t0.c0, rt0.c0, rt1.c5, rt1.c4 FROM t0, rt0, rt1 WHERE ((NOT ((((~ (rt1.c6)))OR((NOT (rt1.c0))))))) UNION ALL SELECT ALL rt1.c3, t0.c0, rt0.c0, rt1.c5, rt1.c4 FROM t0, rt0, rt1 WHERE ((((((~ (rt1.c6)))OR((NOT (rt1.c0))))) ISNULL));
SELECT rt1.c3, t0.c0, rt0.c0, rt1.c5, rt1.c4 FROM t0, rt0, rt1;
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))<=((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((t0.c64)))))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT ((((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))<=((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((t0.c64)))))))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((((((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))<=((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((t0.c64)))))) ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1;
SELECT t0.c1 FROM t0 WHERE ((- (LIKELY(DISTINCT t0.c1)))) GROUP BY t0.c1 UNION SELECT t0.c1 FROM t0 WHERE ((NOT ((- (LIKELY(DISTINCT t0.c1)))))) GROUP BY t0.c1 UNION SELECT ALL t0.c1 FROM t0 WHERE ((((- (LIKELY(DISTINCT t0.c1)))) ISNULL)) GROUP BY t0.c1;
SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1;
SELECT ALL t0.c64, rt1.c3, rt1.c0, rt1.c4, t0.c0, rt1.c6, t0.c1, rt0.c1, rt0.c2, rt1.c2, rt1.c5 FROM rt1, rt0, t0 GROUP BY t0.c64, rt1.c3, rt1.c0, rt1.c4, t0.c0, rt1.c6, t0.c1, rt0.c1, rt0.c2, rt1.c2, rt1.c5;
SELECT ALL t0.c64, rt1.c3, rt1.c0, rt1.c4, t0.c0, rt1.c6, t0.c1, rt0.c1, rt0.c2, rt1.c2, rt1.c5 FROM rt1, rt0, t0 GROUP BY t0.c64, rt1.c3, rt1.c0, rt1.c4, t0.c0, rt1.c6, t0.c1, rt0.c1, rt0.c2, rt1.c2, rt1.c5 HAVING GROUP_CONCAT((~ (MAX(COUNT(*))))) UNION ALL SELECT t0.c64, rt1.c3, rt1.c0, rt1.c4, t0.c0, rt1.c6, t0.c1, rt0.c1, rt0.c2, rt1.c2, rt1.c5 FROM rt1, rt0, t0 GROUP BY t0.c64, rt1.c3, rt1.c0, rt1.c4, t0.c0, rt1.c6, t0.c1, rt0.c1, rt0.c2, rt1.c2, rt1.c5 HAVING (NOT (GROUP_CONCAT((~ (MAX(COUNT(*))))))) UNION ALL SELECT ALL t0.c64, rt1.c3, rt1.c0, rt1.c4, t0.c0, rt1.c6, t0.c1, rt0.c1, rt0.c2, rt1.c2, rt1.c5 FROM rt1, rt0, t0 GROUP BY t0.c64, rt1.c3, rt1.c0, rt1.c4, t0.c0, rt1.c6, t0.c1, rt0.c1, rt0.c2, rt1.c2, rt1.c5 HAVING ((GROUP_CONCAT((~ (MAX(COUNT(*)))))) ISNULL);
SELECT rt0.c0, t0.c64, rt1.c3 FROM rt0 FULL OUTER JOIN rt1 ON (((rt0.c0))!=(((((t0.c64)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c4)))))) FULL OUTER JOIN t0 ON ((((rt1.c4)AND(((rt1.c2)/(rt1.c4)))))AND(CASE WHEN rt0.c0 THEN '0s6|CG' END));
SELECT DISTINCT * FROM rt0, rt1, t0;
SELECT DISTINCT * FROM rt0, rt1, t0 WHERE (((rt0.c1) BETWEEN ((NOT (rt0.c0))) AND (NULL))) UNION SELECT DISTINCT * FROM rt0, rt1, t0 WHERE ((NOT (((rt0.c1) BETWEEN ((NOT (rt0.c0))) AND (NULL))))) UNION SELECT DISTINCT * FROM rt0, rt1, t0 WHERE (((((rt0.c1) BETWEEN ((NOT (rt0.c0))) AND (NULL))) ISNULL));
SELECT DISTINCT * FROM rt0, rt1, t0;
SELECT ALL t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0;
SELECT t0.c1, t0.c0 FROM t0 WHERE (((t0.c1 COLLATE RTRIM) NOT NULL)) GROUP BY t0.c1, t0.c0 UNION SELECT t0.c1, t0.c0 FROM t0 WHERE ((NOT (((t0.c1 COLLATE RTRIM) NOT NULL)))) GROUP BY t0.c1, t0.c0 UNION SELECT ALL t0.c1, t0.c0 FROM t0 WHERE (((((t0.c1 COLLATE RTRIM) NOT NULL)) ISNULL)) GROUP BY t0.c1, t0.c0;
SELECT ALL t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0;
SELECT ALL rt1.c6, rt0.c2, rt1.c4, t0.c64 FROM rt0, rt1, t0 GROUP BY rt1.c6, rt0.c2, rt1.c4, t0.c64;
SELECT ALL rt1.c6, rt0.c2, rt1.c4, t0.c64 FROM rt0, rt1, t0 GROUP BY rt1.c6, rt0.c2, rt1.c4, t0.c64 HAVING CAST(HEX(rt1.c5) AS BLOB) UNION ALL SELECT rt1.c6, rt0.c2, rt1.c4, t0.c64 FROM rt0, rt1, t0 GROUP BY rt1.c6, rt0.c2, rt1.c4, t0.c64 HAVING (NOT (CAST(HEX(rt1.c5) AS BLOB))) UNION ALL SELECT rt1.c6, rt0.c2, rt1.c4, t0.c64 FROM rt0, rt1, t0 GROUP BY rt1.c6, rt0.c2, rt1.c4, t0.c64 HAVING ((CAST(HEX(rt1.c5) AS BLOB)) ISNULL);
SELECT ALL rt1.c6, rt0.c2, rt1.c4, t0.c64 FROM rt0, rt1, t0 GROUP BY rt1.c6, rt0.c2, rt1.c4, t0.c64;
SELECT ALL rt1.c6, rt0.c2, rt1.c4, t0.c64 FROM rt0, rt1, t0 GROUP BY rt1.c6, rt0.c2, rt1.c4, t0.c64 HAVING CAST(HEX(rt1.c5) AS BLOB) UNION ALL SELECT rt1.c6, rt0.c2, rt1.c4, t0.c64 FROM rt0, rt1, t0 GROUP BY rt1.c6, rt0.c2, rt1.c4, t0.c64 HAVING (NOT (CAST(HEX(rt1.c5) AS BLOB))) UNION ALL SELECT rt1.c6, rt0.c2, rt1.c4, t0.c64 FROM rt0, rt1, t0 GROUP BY rt1.c6, rt0.c2, rt1.c4, t0.c64 HAVING ((CAST(HEX(rt1.c5) AS BLOB)) ISNULL);
SELECT ALL rt1.c6, rt0.c2, rt1.c4, t0.c64 FROM rt0, rt1, t0 GROUP BY rt1.c6, rt0.c2, rt1.c4, t0.c64;
SELECT rt0.c0 FROM rt0, rt1;
SELECT rt0.c0 FROM rt0, rt1 WHERE ((((rt1.c4) NOT NULL) IN ())) UNION ALL SELECT ALL rt0.c0 FROM rt0, rt1 WHERE ((NOT ((((rt1.c4) NOT NULL) IN ())))) UNION ALL SELECT ALL rt0.c0 FROM rt0, rt1 WHERE ((((((rt1.c4) NOT NULL) IN ())) ISNULL));
SELECT rt0.c0 FROM rt0, rt1;
SELECT DISTINCT rt1.c6, rt1.c3, rt1.c1 FROM rt1, rt0, t0;
SELECT DISTINCT rt1.c6, rt1.c3, rt1.c1 FROM rt1, rt0, t0 WHERE (rt1.c5 COLLATE RTRIM) UNION SELECT DISTINCT rt1.c6, rt1.c3, rt1.c1 FROM rt1, rt0, t0 WHERE ((NOT (rt1.c5 COLLATE RTRIM))) UNION SELECT DISTINCT rt1.c6, rt1.c3, rt1.c1 FROM rt1, rt0, t0 WHERE (((rt1.c5 COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt1.c6, rt1.c3, rt1.c1 FROM rt1, rt0, t0;
SELECT rt0.c2 FROM rt0, t0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, t0 WHERE (rt0.c1) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0, t0 WHERE ((NOT (rt0.c1))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0, t0 WHERE (((rt0.c1) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, t0 GROUP BY rt0.c2;
SELECT rt1.c4, rt0.c0, rt0.c2, rt0.c1 FROM t0, rt1, rt0 GROUP BY rt1.c4, rt0.c0, rt0.c2, rt0.c1;
SELECT rt1.c4, rt0.c0, rt0.c2, rt0.c1 FROM t0, rt1, rt0 GROUP BY rt1.c4, rt0.c0, rt0.c2, rt0.c1 HAVING SUM((rt1.c6 IN (MAX(rt1.c0), COUNT(SUM(AVG(SUM(rt1.c3))))))) UNION ALL SELECT ALL rt1.c4, rt0.c0, rt0.c2, rt0.c1 FROM t0, rt1, rt0 GROUP BY rt1.c4, rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (SUM((rt1.c6 IN (MAX(rt1.c0), COUNT(SUM(AVG(SUM(rt1.c3))))))))) UNION ALL SELECT ALL rt1.c4, rt0.c0, rt0.c2, rt0.c1 FROM t0, rt1, rt0 GROUP BY rt1.c4, rt0.c0, rt0.c2, rt0.c1 HAVING ((SUM((rt1.c6 IN (MAX(rt1.c0), COUNT(SUM(AVG(SUM(rt1.c3)))))))) ISNULL);
SELECT * FROM t0, rt0, rt1;
SELECT * FROM t0, rt0, rt1 WHERE (((t0.c1 COLLATE BINARY) NOT NULL)) UNION ALL SELECT ALL * FROM t0, rt0, rt1 WHERE ((NOT (((t0.c1 COLLATE BINARY) NOT NULL)))) UNION ALL SELECT ALL * FROM t0, rt0, rt1 WHERE (((((t0.c1 COLLATE BINARY) NOT NULL)) ISNULL));
SELECT * FROM t0, rt0, rt1;
SELECT DISTINCT rt1.c0, rt1.c1 FROM rt1, rt0;
SELECT DISTINCT rt1.c0, rt1.c1 FROM rt1, rt0 WHERE (x'50fc') UNION SELECT DISTINCT rt1.c0, rt1.c1 FROM rt1, rt0 WHERE ((NOT (x'50fc'))) UNION SELECT DISTINCT rt1.c0, rt1.c1 FROM rt1, rt0 WHERE (((x'50fc') ISNULL));
SELECT DISTINCT rt1.c0, rt1.c1 FROM rt1, rt0;
SELECT ALL rt1.c6, rt1.c0, t0.c64 FROM rt0, rt1, t0 GROUP BY rt1.c6, rt1.c0, t0.c64;
SELECT rt1.c6, rt1.c0, t0.c64 FROM rt0, rt1, t0 WHERE ((~ (t0.c64)) COLLATE NOCASE) GROUP BY rt1.c6, rt1.c0, t0.c64 UNION SELECT ALL rt1.c6, rt1.c0, t0.c64 FROM rt0, rt1, t0 WHERE ((NOT ((~ (t0.c64)) COLLATE NOCASE))) GROUP BY rt1.c6, rt1.c0, t0.c64 UNION SELECT ALL rt1.c6, rt1.c0, t0.c64 FROM rt0, rt1, t0 WHERE ((((~ (t0.c64)) COLLATE NOCASE) ISNULL)) GROUP BY rt1.c6, rt1.c0, t0.c64;
SELECT ALL rt1.c6, rt1.c0, t0.c64 FROM rt0, rt1, t0 GROUP BY rt1.c6, rt1.c0, t0.c64;
SELECT ALL rt1.c1, rt1.c3, rt1.c6 FROM rt1 GROUP BY rt1.c1, rt1.c3, rt1.c6;
SELECT ALL rt1.c1, rt1.c3, rt1.c6 FROM rt1 GROUP BY rt1.c1, rt1.c3, rt1.c6 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c1, rt1.c3, rt1.c6 FROM rt1 GROUP BY rt1.c1, rt1.c3, rt1.c6 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c1, rt1.c3, rt1.c6 FROM rt1 GROUP BY rt1.c1, rt1.c3, rt1.c6 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c1, rt1.c3, rt1.c6 FROM rt1 GROUP BY rt1.c1, rt1.c3, rt1.c6;
SELECT ALL rt1.c1, rt1.c3, rt1.c6 FROM rt1 GROUP BY rt1.c1, rt1.c3, rt1.c6 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c1, rt1.c3, rt1.c6 FROM rt1 GROUP BY rt1.c1, rt1.c3, rt1.c6 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c1, rt1.c3, rt1.c6 FROM rt1 GROUP BY rt1.c1, rt1.c3, rt1.c6 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c1, rt1.c3, rt1.c6 FROM rt1 GROUP BY rt1.c1, rt1.c3, rt1.c6;
SELECT ALL * FROM rt0, rt1;
SELECT * FROM rt0, rt1 WHERE (((9.93853628E8) NOTNULL)) UNION ALL SELECT * FROM rt0, rt1 WHERE ((NOT (((9.93853628E8) NOTNULL)))) UNION ALL SELECT ALL * FROM rt0, rt1 WHERE (((((9.93853628E8) NOTNULL)) ISNULL));
SELECT ALL * FROM rt0, rt1;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (CASE WHEN CAST(t0.c1 AS TEXT) THEN ((t0.c1)<<(t0.c1)) WHEN t0.c64 THEN ((t0.c64)LIKE(t0.c1)) WHEN (((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c64, t0.c1, t0.c0)) AND ((t0.c0, t0.c1, t0.c64))) THEN (((t0.c64))<>((t0.c1))) ELSE (~ (t0.c1)) END) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (CASE WHEN CAST(t0.c1 AS TEXT) THEN ((t0.c1)<<(t0.c1)) WHEN t0.c64 THEN ((t0.c64)LIKE(t0.c1)) WHEN (((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c64, t0.c1, t0.c0)) AND ((t0.c0, t0.c1, t0.c64))) THEN (((t0.c64))<>((t0.c1))) ELSE (~ (t0.c1)) END))) UNION SELECT DISTINCT * FROM t0 WHERE (((CASE WHEN CAST(t0.c1 AS TEXT) THEN ((t0.c1)<<(t0.c1)) WHEN t0.c64 THEN ((t0.c64)LIKE(t0.c1)) WHEN (((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c64, t0.c1, t0.c0)) AND ((t0.c0, t0.c1, t0.c64))) THEN (((t0.c64))!=((t0.c1))) ELSE (~ (t0.c1)) END) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT rt1.c2, t0.c0, t0.c1, rt1.c6, rt1.c4 FROM rt1, t0, rt0 GROUP BY rt1.c2, t0.c0, t0.c1, rt1.c6, rt1.c4;
SELECT rt1.c2, t0.c0, t0.c1, rt1.c6, rt1.c4 FROM rt1, t0, rt0 WHERE (((t0.c0) BETWEEN (rt1.c5 COLLATE RTRIM) AND (((rt1.c2) NOTNULL)))) GROUP BY rt1.c2, t0.c0, t0.c1, rt1.c6, rt1.c4 UNION SELECT rt1.c2, t0.c0, t0.c1, rt1.c6, rt1.c4 FROM rt1 NOT INDEXED, t0, rt0 WHERE ((NOT (((t0.c0) BETWEEN (rt1.c5 COLLATE RTRIM) AND (((rt1.c2) NOTNULL)))))) GROUP BY rt1.c2, t0.c0, t0.c1, rt1.c6, rt1.c4 UNION SELECT ALL rt1.c2, t0.c0, t0.c1, rt1.c6, rt1.c4 FROM rt1, t0, rt0 WHERE (((((t0.c0) BETWEEN (rt1.c5 COLLATE RTRIM) AND (((rt1.c2) NOTNULL)))) ISNULL)) GROUP BY rt1.c2, t0.c0, t0.c1, rt1.c6, rt1.c4;
SELECT rt1.c2, t0.c0, t0.c1, rt1.c6, rt1.c4 FROM rt1, t0, rt0 GROUP BY rt1.c2, t0.c0, t0.c1, rt1.c6, rt1.c4;
SELECT ALL rt1.c3, t0.c0, t0.c1 FROM rt1, rt0, t0 GROUP BY rt1.c3, t0.c0, t0.c1;
SELECT rt1.c3, t0.c0, t0.c1 FROM rt1, rt0, t0 GROUP BY rt1.c3, t0.c0, t0.c1 HAVING (((MIN(COUNT(*)), SUM(COUNT(*)), AVG(GROUP_CONCAT(rt0.c0))))<>((((GROUP_CONCAT(rt1.c3))LIKE(rt1.c0)), IFNULL(rt1.c5, rt1.c0), SUM(rt1.c0)))) UNION ALL SELECT ALL rt1.c3, t0.c0, t0.c1 FROM rt1, rt0, t0 GROUP BY rt1.c3, t0.c0, t0.c1 HAVING (NOT ((((MIN(COUNT(*)), SUM(COUNT(*)), AVG(GROUP_CONCAT(rt0.c0))))!=((((GROUP_CONCAT(rt1.c3))LIKE(rt1.c0)), IFNULL(rt1.c5, rt1.c0), SUM(rt1.c0)))))) UNION ALL SELECT ALL rt1.c3, t0.c0, t0.c1 FROM rt1, rt0, t0 GROUP BY rt1.c3, t0.c0, t0.c1 HAVING (((((MIN(COUNT(*)), SUM(COUNT(*)), AVG(GROUP_CONCAT(rt0.c0))))!=((((GROUP_CONCAT(rt1.c3))LIKE(rt1.c0)), IFNULL(rt1.c5, rt1.c0), SUM(rt1.c0))))) ISNULL);
SELECT ALL * FROM rt0, rt1;
SELECT * FROM rt0, rt1 WHERE ((((NULL)) NOT BETWEEN ((((rt1.c5) IS TRUE))) AND ((rt1.c0)))) UNION ALL SELECT * FROM rt0, rt1 WHERE ((NOT ((((NULL)) NOT BETWEEN ((((rt1.c5) IS TRUE))) AND ((rt1.c0)))))) UNION ALL SELECT ALL * FROM rt0, rt1 WHERE ((((((NULL)) NOT BETWEEN ((((rt1.c5) IS TRUE))) AND ((rt1.c0)))) ISNULL));
SELECT ALL * FROM rt0, rt1;
SELECT DISTINCT t0.c1, t0.c0, rt1.c6, rt1.c2 FROM rt1, t0, rt0;
SELECT DISTINCT t0.c1, t0.c0, rt1.c6, rt1.c2 FROM rt1, t0, rt0 WHERE (rt1.c5) UNION SELECT DISTINCT t0.c1, t0.c0, rt1.c6, rt1.c2 FROM rt1, t0, rt0 WHERE ((NOT (rt1.c5))) UNION SELECT DISTINCT t0.c1, t0.c0, rt1.c6, rt1.c2 FROM rt1, t0, rt0 WHERE (((rt1.c5) ISNULL));
SELECT DISTINCT t0.c1, t0.c0, rt1.c6, rt1.c2 FROM rt1, t0, rt0;
SELECT rt1.c5, rt0.c1, rt1.c6, rt1.c0, rt1.c3, rt0.c2, rt1.c2, rt1.c4, rt1.c1 FROM rt0, rt1 GROUP BY rt1.c5, rt0.c1, rt1.c6, rt1.c0, rt1.c3, rt0.c2, rt1.c2, rt1.c4, rt1.c1;
SELECT ALL rt1.c5, rt0.c1, rt1.c6, rt1.c0, rt1.c3, rt0.c2, rt1.c2, rt1.c4, rt1.c1 FROM rt0, rt1 WHERE ((- ((+ (rt1.c2))))) GROUP BY rt1.c5, rt0.c1, rt1.c6, rt1.c0, rt1.c3, rt0.c2, rt1.c2, rt1.c4, rt1.c1 UNION SELECT ALL rt1.c5, rt0.c1, rt1.c6, rt1.c0, rt1.c3, rt0.c2, rt1.c2, rt1.c4, rt1.c1 FROM rt0, rt1 WHERE ((NOT ((- ((+ (rt1.c2))))))) GROUP BY rt1.c5, rt0.c1, rt1.c6, rt1.c0, rt1.c3, rt0.c2, rt1.c2, rt1.c4, rt1.c1 UNION SELECT ALL rt1.c5, rt0.c1, rt1.c6, rt1.c0, rt1.c3, rt0.c2, rt1.c2, rt1.c4, rt1.c1 FROM rt0, rt1 WHERE ((((- ((+ (rt1.c2))))) ISNULL)) GROUP BY rt1.c5, rt0.c1, rt1.c6, rt1.c0, rt1.c3, rt0.c2, rt1.c2, rt1.c4, rt1.c1;
SELECT rt1.c5, rt0.c1, rt1.c6, rt1.c0, rt1.c3, rt0.c2, rt1.c2, rt1.c4, rt1.c1 FROM rt0, rt1 GROUP BY rt1.c5, rt0.c1, rt1.c6, rt1.c0, rt1.c3, rt0.c2, rt1.c2, rt1.c4, rt1.c1;
SELECT ALL rt1.c6, rt1.c4, rt0.c1 FROM rt0, rt1 GROUP BY rt1.c6, rt1.c4, rt0.c1;
SELECT ALL rt1.c6, rt1.c4, rt0.c1 FROM rt0, rt1 GROUP BY rt1.c6, rt1.c4, rt0.c1 HAVING rt1.c5 UNION ALL SELECT rt1.c6, rt1.c4, rt0.c1 FROM rt0, rt1 GROUP BY rt1.c6, rt1.c4, rt0.c1 HAVING (NOT (rt1.c5)) UNION ALL SELECT rt1.c6, rt1.c4, rt0.c1 FROM rt0, rt1 GROUP BY rt1.c6, rt1.c4, rt0.c1 HAVING ((rt1.c5) ISNULL);
SELECT ALL rt1.c6, rt1.c4, rt0.c1 FROM rt0, rt1 GROUP BY rt1.c6, rt1.c4, rt0.c1;
SELECT ALL rt1.c6, rt1.c4, rt0.c1 FROM rt0, rt1 GROUP BY rt1.c6, rt1.c4, rt0.c1 HAVING rt1.c5 UNION ALL SELECT rt1.c6, rt1.c4, rt0.c1 FROM rt0, rt1 GROUP BY rt1.c6, rt1.c4, rt0.c1 HAVING (NOT (rt1.c5)) UNION ALL SELECT rt1.c6, rt1.c4, rt0.c1 FROM rt0, rt1 GROUP BY rt1.c6, rt1.c4, rt0.c1 HAVING ((rt1.c5) ISNULL);
SELECT ALL rt1.c6, rt1.c4, rt0.c1 FROM rt0, rt1 GROUP BY rt1.c6, rt1.c4, rt0.c1;
SELECT * FROM rt0, t0, rt1;
SELECT * FROM rt0, t0, rt1 NOT INDEXED WHERE (CAST((((rt0.c0))>((t0.c1))) AS NUMERIC)) UNION ALL SELECT * FROM rt0, t0, rt1 WHERE ((NOT (CAST((((rt0.c0))>((t0.c1))) AS NUMERIC)))) UNION ALL SELECT * FROM rt0, t0, rt1 WHERE (((CAST((((rt0.c0))>((t0.c1))) AS NUMERIC)) ISNULL));
SELECT * FROM rt0, t0, rt1;
SELECT DISTINCT t0.c0 FROM t0, rt1;
SELECT DISTINCT t0.c0 FROM t0, rt1 WHERE (CASE WHEN ((rt1.c3)*(0.6661715524265422)) THEN CASE t0.c1  WHEN t0.c0 THEN t0.c64 END END) UNION SELECT DISTINCT t0.c0 FROM t0, rt1 WHERE ((NOT (CASE WHEN ((rt1.c3)*(0.6661715524265422)) THEN CASE t0.c1  WHEN t0.c0 THEN t0.c64 END END))) UNION SELECT DISTINCT t0.c0 FROM t0, rt1 WHERE (((CASE WHEN ((rt1.c3)*(0.6661715524265422)) THEN CASE t0.c1  WHEN t0.c0 THEN t0.c64 END END) ISNULL));
SELECT DISTINCT t0.c0 FROM t0, rt1;
SELECT rt1.c5, rt1.c6, rt1.c0 FROM rt1 GROUP BY rt1.c5, rt1.c6, rt1.c0;
SELECT ALL rt1.c5, rt1.c6, rt1.c0 FROM rt1 WHERE (CAST(rt1.c2 AS INTEGER)) GROUP BY rt1.c5, rt1.c6, rt1.c0 UNION SELECT rt1.c5, rt1.c6, rt1.c0 FROM rt1 WHERE ((NOT (CAST(rt1.c2 AS INTEGER)))) GROUP BY rt1.c5, rt1.c6, rt1.c0 UNION SELECT ALL rt1.c5, rt1.c6, rt1.c0 FROM rt1 WHERE (((CAST(rt1.c2 AS INTEGER)) ISNULL)) GROUP BY rt1.c5, rt1.c6, rt1.c0;
SELECT rt1.c5, rt1.c6, rt1.c0 FROM rt1 GROUP BY rt1.c5, rt1.c6, rt1.c0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING MIN('-841401832') UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (MIN('-841401832'))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((MIN('-841401832')) ISNULL);
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING MIN('-841401832') UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (MIN('-841401832'))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((MIN('-841401832')) ISNULL);
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((rt0.c2) IS TRUE) IN ((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))), ((((rt0.c0)AND(rt0.c2)))AND(0.9325788569724699))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((rt0.c2) IS TRUE) IN ((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))), ((((rt0.c0)AND(rt0.c2)))AND(0.9325788569724699))))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((((rt0.c2) IS TRUE) IN ((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))), ((((rt0.c0)AND(rt0.c2)))AND(0.9325788569724699))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt1.c0, t0.c1, t0.c0, rt1.c2, rt1.c5, rt1.c1, t0.c64, rt1.c3, rt1.c6, rt1.c4, rt0.c0 FROM rt0, t0, rt1;
SELECT DISTINCT rt0.c2, rt0.c1, rt1.c0, t0.c1, t0.c0, rt1.c2, rt1.c5, rt1.c1, t0.c64, rt1.c3, rt1.c6, rt1.c4, rt0.c0 FROM rt0, t0, rt1 WHERE ((json_extract(rt1.c2, rt1.c1) IN ())) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt1.c0, t0.c1, t0.c0, rt1.c2, rt1.c5, rt1.c1, t0.c64, rt1.c3, rt1.c6, rt1.c4, rt0.c0 FROM rt0, t0, rt1 WHERE ((NOT ((json_extract(rt1.c2, rt1.c1) IN ())))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt1.c0, t0.c1, t0.c0, rt1.c2, rt1.c5, rt1.c1, t0.c64, rt1.c3, rt1.c6, rt1.c4, rt0.c0 FROM rt0, t0, rt1 WHERE ((((json_extract(rt1.c2, rt1.c1) IN ())) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, rt1.c0, t0.c1, t0.c0, rt1.c2, rt1.c5, rt1.c1, t0.c64, rt1.c3, rt1.c6, rt1.c4, rt0.c0 FROM rt0, t0, rt1;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 WHERE (CASE WHEN NULLIF(rt0.c0, rt0.c1) THEN ((rt0.c2) IS FALSE) WHEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)) THEN ((rt0.c0)IS(rt0.c0)) WHEN ((rt0.c1) IS FALSE) THEN (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1))) WHEN ((rt0.c0)%(rt0.c0)) THEN (~ (0.8463291394219475)) WHEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)) THEN ('' IN (rt0.c1)) END) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (CASE WHEN NULLIF(rt0.c0, rt0.c1) THEN ((rt0.c2) IS FALSE) WHEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)) THEN ((rt0.c0)IS(rt0.c0)) WHEN ((rt0.c1) IS FALSE) THEN (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1))) WHEN ((rt0.c0)%(rt0.c0)) THEN (~ (0.8463291394219475)) WHEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)) THEN ('' IN (rt0.c1)) END))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE (((CASE WHEN NULLIF(rt0.c0, rt0.c1) THEN ((rt0.c2) IS FALSE) WHEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)) THEN ((rt0.c0)IS(rt0.c0)) WHEN ((rt0.c1) IS FALSE) THEN (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1))) WHEN ((rt0.c0)%(rt0.c0)) THEN (~ (0.8463291394219475)) WHEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)) THEN ('' IN (rt0.c1)) END) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING TOTAL(rt0.c1) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (TOTAL(rt0.c1))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((TOTAL(rt0.c1)) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING TOTAL(rt0.c1) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (TOTAL(rt0.c1))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((TOTAL(rt0.c1)) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c2 END) ISNULL)) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((CASE WHEN rt0.c2 THEN rt0.c2 END) ISNULL)))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((CASE WHEN rt0.c2 THEN rt0.c2 END) ISNULL)) ISNULL));
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM t0 FULL OUTER JOIN rt1 ON (((((((((((((('') ISNULL))OR(rt1.c0)))AND(LENGTH(rt1.c0))))OR(CASE rt1.c4  WHEN t0.c1 THEN rt1.c5 END)))AND(((x'') NOT NULL))))OR(LIKELIHOOD(rt1.c2, 0.3436860236388313))))AND(((t0.c1) ISNULL)));
SELECT DISTINCT * FROM t0 FULL OUTER JOIN rt1 ON (((((((((((((('') ISNULL))OR(rt1.c0)))AND(LENGTH(rt1.c0))))OR(CASE rt1.c4  WHEN t0.c1 THEN rt1.c5 END)))AND(((x'') NOT NULL))))OR(LIKELIHOOD(rt1.c2, 0.3436860236388313))))AND(((t0.c1) ISNULL))) WHERE (((((rt1.c4) NOTNULL))LIKE(((rt1.c6)IS(rt1.c2))))) UNION SELECT DISTINCT * FROM t0 FULL OUTER JOIN rt1 ON (((((((((((((('') ISNULL))OR(rt1.c0)))AND(LENGTH(rt1.c0))))OR(CASE rt1.c4  WHEN t0.c1 THEN rt1.c5 END)))AND(((x'') NOT NULL))))OR(LIKELIHOOD(rt1.c2, 0.3436860236388313))))AND(((t0.c1) ISNULL))) WHERE ((NOT (((((rt1.c4) NOTNULL))LIKE(((rt1.c6)IS(rt1.c2))))))) UNION SELECT DISTINCT * FROM t0 FULL OUTER JOIN rt1 ON (((((((((((((('') ISNULL))OR(rt1.c0)))AND(LENGTH(rt1.c0))))OR(CASE rt1.c4  WHEN t0.c1 THEN rt1.c5 END)))AND(((x'') NOT NULL))))OR(LIKELIHOOD(rt1.c2, 0.3436860236388313))))AND(((t0.c1) ISNULL))) WHERE (((((((rt1.c4) NOTNULL))LIKE(((rt1.c6)IS(rt1.c2))))) ISNULL));
SELECT DISTINCT * FROM t0 FULL OUTER JOIN rt1 ON (((((((((((((('') ISNULL))OR(rt1.c0)))AND(LENGTH(rt1.c0))))OR(CASE rt1.c4  WHEN t0.c1 THEN rt1.c5 END)))AND(((x'') NOT NULL))))OR(LIKELIHOOD(rt1.c2, 0.3436860236388313))))AND(((t0.c1) ISNULL)));
SELECT ALL rt1.c6, rt1.c3 FROM rt1 GROUP BY rt1.c6, rt1.c3;
SELECT rt1.c6, rt1.c3 FROM rt1 WHERE (rt1.c0) GROUP BY rt1.c6, rt1.c3 UNION SELECT ALL rt1.c6, rt1.c3 FROM rt1 WHERE ((NOT (rt1.c0))) GROUP BY rt1.c6, rt1.c3 UNION SELECT ALL rt1.c6, rt1.c3 FROM rt1 WHERE (((rt1.c0) ISNULL)) GROUP BY rt1.c6, rt1.c3;
SELECT ALL rt1.c6, rt1.c3 FROM rt1 GROUP BY rt1.c6, rt1.c3;
SELECT ALL rt1.c4, rt1.c1, rt0.c2, rt0.c0, rt1.c5, t0.c1, rt1.c0, rt1.c3 FROM rt1, t0, rt0 GROUP BY rt1.c4, rt1.c1, rt0.c2, rt0.c0, rt1.c5, t0.c1, rt1.c0, rt1.c3;
SELECT rt1.c4, rt1.c1, rt0.c2, rt0.c0, rt1.c5, t0.c1, rt1.c0, rt1.c3 FROM rt1, t0, rt0 NOT INDEXED GROUP BY rt1.c4, rt1.c1, rt0.c2, rt0.c0, rt1.c5, t0.c1, rt1.c0, rt1.c3 HAVING (NOT (GROUP_CONCAT(SUM(rt0.c2)))) UNION ALL SELECT ALL rt1.c4, rt1.c1, rt0.c2, rt0.c0, rt1.c5, t0.c1, rt1.c0, rt1.c3 FROM rt1, t0, rt0 GROUP BY rt1.c4, rt1.c1, rt0.c2, rt0.c0, rt1.c5, t0.c1, rt1.c0, rt1.c3 HAVING (NOT ((NOT (GROUP_CONCAT(SUM(rt0.c2)))))) UNION ALL SELECT ALL rt1.c4, rt1.c1, rt0.c2, rt0.c0, rt1.c5, t0.c1, rt1.c0, rt1.c3 FROM rt1, t0, rt0 GROUP BY rt1.c4, rt1.c1, rt0.c2, rt0.c0, rt1.c5, t0.c1, rt1.c0, rt1.c3 HAVING (((NOT (GROUP_CONCAT(SUM(rt0.c2))))) ISNULL);
SELECT ALL MAX(((rt1.c1 COLLATE NOCASE)GLOB(rt0.c0))) FROM rt0, rt1, t0 ORDER BY ((t0.c64 COLLATE BINARY) ISNULL) DESC  NULLS LAST, ((NULL) IS FALSE);
SELECT ALL t0.c1, rt0.c2 FROM t0 CROSS JOIN rt0 ON (~ (t0.c0 COLLATE RTRIM));
SELECT ALL t0.c1, rt0.c2 FROM t0 CROSS JOIN rt0 ON (~ (t0.c0 COLLATE RTRIM)) WHERE ((((+ (rt0.c0)))<<(CASE WHEN t0.c64 THEN t0.c1 WHEN t0.c64 THEN 0.37553525219563977 WHEN rt0.c2 THEN rt0.c0 END))) UNION ALL SELECT ALL t0.c1, rt0.c2 FROM t0 CROSS JOIN rt0 ON (~ (t0.c0 COLLATE RTRIM)) WHERE ((NOT ((((+ (rt0.c0)))<<(CASE WHEN t0.c64 THEN t0.c1 WHEN t0.c64 THEN 0.37553525219563977 WHEN rt0.c2 THEN rt0.c0 END))))) UNION ALL SELECT t0.c1, rt0.c2 FROM t0 CROSS JOIN rt0 ON (~ (t0.c0 COLLATE RTRIM)) WHERE ((((((+ (rt0.c0)))<<(CASE WHEN t0.c64 THEN t0.c1 WHEN t0.c64 THEN 0.37553525219563977 WHEN rt0.c2 THEN rt0.c0 END))) ISNULL));
SELECT ALL t0.c1, rt0.c2 FROM t0 CROSS JOIN rt0 ON (~ (t0.c0 COLLATE RTRIM));
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (CAST(COALESCE(DISTINCT t0.c64, t0.c1) AS INTEGER)) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (CAST(COALESCE(DISTINCT t0.c64, t0.c1) AS INTEGER)))) UNION SELECT DISTINCT * FROM t0 WHERE (((CAST(COALESCE(DISTINCT t0.c64, t0.c1) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT rt1.c5, rt1.c6, rt1.c2, rt1.c4 FROM rt1 GROUP BY rt1.c5, rt1.c6, rt1.c2, rt1.c4;
SELECT ALL rt1.c5, rt1.c6, rt1.c2, rt1.c4 FROM rt1 WHERE ((NOT (rt1.c6))) GROUP BY rt1.c5, rt1.c6, rt1.c2, rt1.c4 UNION SELECT rt1.c5, rt1.c6, rt1.c2, rt1.c4 FROM rt1 WHERE ((NOT ((NOT (rt1.c6))))) GROUP BY rt1.c5, rt1.c6, rt1.c2, rt1.c4 UNION SELECT ALL rt1.c5, rt1.c6, rt1.c2, rt1.c4 FROM rt1 WHERE ((((NOT (rt1.c6))) ISNULL)) GROUP BY rt1.c5, rt1.c6, rt1.c2, rt1.c4;
SELECT rt1.c5, rt1.c6, rt1.c2, rt1.c4 FROM rt1 GROUP BY rt1.c5, rt1.c6, rt1.c2, rt1.c4;
SELECT rt1.c1, rt1.c0, rt1.c3, rt1.c2, rt0.c1, rt1.c4, rt0.c2 FROM rt1 FULL OUTER JOIN rt0 ON (((rt1.c2)>=(x'3527')) IN ()) GROUP BY rt1.c1, rt1.c0, rt1.c3, rt1.c2, rt0.c1, rt1.c4, rt0.c2;
SELECT ALL rt1.c1, rt1.c0, rt1.c3, rt1.c2, rt0.c1, rt1.c4, rt0.c2 FROM rt1 FULL OUTER JOIN rt0 ON (((rt1.c2)>=(x'3527')) IN ()) GROUP BY rt1.c1, rt1.c0, rt1.c3, rt1.c2, rt0.c1, rt1.c4, rt0.c2 HAVING (- ((((AVG(rt0.c0)))>=((COUNT(*)))))) UNION ALL SELECT rt1.c1, rt1.c0, rt1.c3, rt1.c2, rt0.c1, rt1.c4, rt0.c2 FROM rt1 FULL OUTER JOIN rt0 ON (((rt1.c2)>=(x'3527')) IN ()) GROUP BY rt1.c1, rt1.c0, rt1.c3, rt1.c2, rt0.c1, rt1.c4, rt0.c2 HAVING (NOT ((- ((((AVG(rt0.c0)))>=((COUNT(*)))))))) UNION ALL SELECT rt1.c1, rt1.c0, rt1.c3, rt1.c2, rt0.c1, rt1.c4, rt0.c2 FROM rt1 FULL OUTER JOIN rt0 ON (((rt1.c2)>=(x'3527')) IN ()) GROUP BY rt1.c1, rt1.c0, rt1.c3, rt1.c2, rt0.c1, rt1.c4, rt0.c2 HAVING (((- ((((AVG(rt0.c0)))>=((COUNT(*))))))) ISNULL);
SELECT rt1.c1, rt1.c0, rt1.c3, rt1.c2, rt0.c1, rt1.c4, rt0.c2 FROM rt1 FULL OUTER JOIN rt0 ON (((rt1.c2)>=(x'3527')) IN ()) GROUP BY rt1.c1, rt1.c0, rt1.c3, rt1.c2, rt0.c1, rt1.c4, rt0.c2;
SELECT ALL rt1.c1, rt1.c0, rt1.c3, rt1.c2, rt0.c1, rt1.c4, rt0.c2 FROM rt1 FULL OUTER JOIN rt0 ON (((rt1.c2)>=(x'3527')) IN ()) GROUP BY rt1.c1, rt1.c0, rt1.c3, rt1.c2, rt0.c1, rt1.c4, rt0.c2 HAVING (- ((((AVG(rt0.c0)))>=((COUNT(*)))))) UNION ALL SELECT rt1.c1, rt1.c0, rt1.c3, rt1.c2, rt0.c1, rt1.c4, rt0.c2 FROM rt1 FULL OUTER JOIN rt0 ON (((rt1.c2)>=(x'3527')) IN ()) GROUP BY rt1.c1, rt1.c0, rt1.c3, rt1.c2, rt0.c1, rt1.c4, rt0.c2 HAVING (NOT ((- ((((AVG(rt0.c0)))>=((COUNT(*)))))))) UNION ALL SELECT rt1.c1, rt1.c0, rt1.c3, rt1.c2, rt0.c1, rt1.c4, rt0.c2 FROM rt1 FULL OUTER JOIN rt0 ON (((rt1.c2)>=(x'3527')) IN ()) GROUP BY rt1.c1, rt1.c0, rt1.c3, rt1.c2, rt0.c1, rt1.c4, rt0.c2 HAVING (((- ((((AVG(rt0.c0)))>=((COUNT(*))))))) ISNULL);
SELECT rt1.c1, rt1.c0, rt1.c3, rt1.c2, rt0.c1, rt1.c4, rt0.c2 FROM rt1 FULL OUTER JOIN rt0 ON (((rt1.c2)>=(x'3527')) IN ()) GROUP BY rt1.c1, rt1.c0, rt1.c3, rt1.c2, rt0.c1, rt1.c4, rt0.c2;
SELECT ALL rt1.c2, t0.c64, t0.c1, rt1.c4, rt1.c3, t0.c0, rt0.c0 FROM rt1, rt0, t0;
SELECT rt1.c2, t0.c64, t0.c1, rt1.c4, rt1.c3, t0.c0, rt0.c0 FROM rt1, rt0, t0 WHERE (t0.c1) UNION ALL SELECT ALL rt1.c2, t0.c64, t0.c1, rt1.c4, rt1.c3, t0.c0, rt0.c0 FROM rt1, rt0, t0 WHERE ((NOT (t0.c1))) UNION ALL SELECT rt1.c2, t0.c64, t0.c1, rt1.c4, rt1.c3, t0.c0, rt0.c0 FROM rt1, rt0, t0 WHERE (((t0.c1) ISNULL));
SELECT ALL rt1.c2, t0.c64, t0.c1, rt1.c4, rt1.c3, t0.c0, rt0.c0 FROM rt1, rt0, t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((((((- (t0.c0)))OR(((-3.91433418E8) BETWEEN (t0.c0) AND (t0.c1)))))OR(CAST(t0.c1 AS NUMERIC)))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((((((- (t0.c0)))OR(((-3.91433418E8) BETWEEN (t0.c0) AND (t0.c1)))))OR(CAST(t0.c1 AS NUMERIC)))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((((((- (t0.c0)))OR(((-3.91433418E8) BETWEEN (t0.c0) AND (t0.c1)))))OR(CAST(t0.c1 AS NUMERIC)))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT rt0.c2, rt1.c5, rt0.c1, rt1.c3, rt0.c0, t0.c64, rt1.c1, rt1.c6, rt1.c2, rt1.c4, t0.c1, t0.c0, rt1.c0 FROM t0 RIGHT OUTER JOIN rt1 ON ((((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c6)))/((('-1184165530') NOT BETWEEN (rt1.c3) AND (rt1.c5)))) RIGHT OUTER JOIN rt0 ON (((rt1.c2)) BETWEEN ((CASE WHEN NULL THEN rt1.c4 END)) AND ((rt1.c0 COLLATE BINARY))) GROUP BY rt0.c2, rt1.c5, rt0.c1, rt1.c3, rt0.c0, t0.c64, rt1.c1, rt1.c6, rt1.c2, rt1.c4, t0.c1, t0.c0, rt1.c0;
SELECT rt0.c2, rt1.c5, rt0.c1, rt1.c3, rt0.c0, t0.c64, rt1.c1, rt1.c6, rt1.c2, rt1.c4, t0.c1, t0.c0, rt1.c0 FROM t0 RIGHT OUTER JOIN rt1 ON ((((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c6)))/((('-1184165530') NOT BETWEEN (rt1.c3) AND (rt1.c5)))) RIGHT OUTER JOIN rt0 ON (((rt1.c2)) BETWEEN ((CASE WHEN NULL THEN rt1.c4 END)) AND ((rt1.c0 COLLATE BINARY))) WHERE (-1.18416553E9) GROUP BY rt0.c2, rt1.c5, rt0.c1, rt1.c3, rt0.c0, t0.c64, rt1.c1, rt1.c6, rt1.c2, rt1.c4, t0.c1, t0.c0, rt1.c0 UNION SELECT ALL rt0.c2, rt1.c5, rt0.c1, rt1.c3, rt0.c0, t0.c64, rt1.c1, rt1.c6, rt1.c2, rt1.c4, t0.c1, t0.c0, rt1.c0 FROM t0 RIGHT OUTER JOIN rt1 ON ((((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c6)))/((('-1184165530') NOT BETWEEN (rt1.c3) AND (rt1.c5)))) RIGHT OUTER JOIN rt0 ON (((rt1.c2)) BETWEEN ((CASE WHEN NULL THEN rt1.c4 END)) AND ((rt1.c0 COLLATE BINARY))) WHERE ((NOT (-1.18416553E9))) GROUP BY rt0.c2, rt1.c5, rt0.c1, rt1.c3, rt0.c0, t0.c64, rt1.c1, rt1.c6, rt1.c2, rt1.c4, t0.c1, t0.c0, rt1.c0 UNION SELECT ALL rt0.c2, rt1.c5, rt0.c1, rt1.c3, rt0.c0, t0.c64, rt1.c1, rt1.c6, rt1.c2, rt1.c4, t0.c1, t0.c0, rt1.c0 FROM t0 RIGHT OUTER JOIN rt1 ON ((((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c6)))/((('-1184165530') NOT BETWEEN (rt1.c3) AND (rt1.c5)))) RIGHT OUTER JOIN rt0 ON (((rt1.c2)) BETWEEN ((CASE WHEN NULL THEN rt1.c4 END)) AND ((rt1.c0 COLLATE BINARY))) WHERE (((-1.18416553E9) ISNULL)) GROUP BY rt0.c2, rt1.c5, rt0.c1, rt1.c3, rt0.c0, t0.c64, rt1.c1, rt1.c6, rt1.c2, rt1.c4, t0.c1, t0.c0, rt1.c0;
SELECT rt0.c2, rt1.c5, rt0.c1, rt1.c3, rt0.c0, t0.c64, rt1.c1, rt1.c6, rt1.c2, rt1.c4, t0.c1, t0.c0, rt1.c0 FROM t0 RIGHT OUTER JOIN rt1 ON ((((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c6)))/((('-1184165530') NOT BETWEEN (rt1.c3) AND (rt1.c5)))) RIGHT OUTER JOIN rt0 ON (((rt1.c2)) BETWEEN ((CASE WHEN NULL THEN rt1.c4 END)) AND ((rt1.c0 COLLATE BINARY))) GROUP BY rt0.c2, rt1.c5, rt0.c1, rt1.c3, rt0.c0, t0.c64, rt1.c1, rt1.c6, rt1.c2, rt1.c4, t0.c1, t0.c0, rt1.c0;
SELECT ALL t0.c0, t0.c1, rt1.c3 FROM t0, rt1, rt0 GROUP BY t0.c0, t0.c1, rt1.c3;
SELECT t0.c0, t0.c1, rt1.c3 FROM t0, rt1, rt0 GROUP BY t0.c0, t0.c1, rt1.c3 HAVING ((((((((((COUNT(*))OR(rt1.c3)))AND(MAX(rt1.c0))))AND(rt1.c2)))OR(rt0.c1))) NOT BETWEEN (((((MAX(TOTAL(MAX(rt0.c0))))OR(rt1.c5)))AND(COUNT(rt1.c6)))) AND (COUNT(t0.c0) COLLATE RTRIM)) UNION ALL SELECT t0.c0, t0.c1, rt1.c3 FROM t0, rt1, rt0 GROUP BY t0.c0, t0.c1, rt1.c3 HAVING (NOT (((((((((((COUNT(*))OR(rt1.c3)))AND(MAX(rt1.c0))))AND(rt1.c2)))OR(rt0.c1))) NOT BETWEEN (((((MAX(TOTAL(MAX(rt0.c0))))OR(rt1.c5)))AND(COUNT(rt1.c6)))) AND (COUNT(t0.c0) COLLATE RTRIM)))) UNION ALL SELECT t0.c0, t0.c1, rt1.c3 FROM t0, rt1, rt0 GROUP BY t0.c0, t0.c1, rt1.c3 HAVING ((((((((((((COUNT(*))OR(rt1.c3)))AND(MAX(rt1.c0))))AND(rt1.c2)))OR(rt0.c1))) NOT BETWEEN (((((MAX(TOTAL(MAX(rt0.c0))))OR(rt1.c5)))AND(COUNT(rt1.c6)))) AND (COUNT(t0.c0) COLLATE RTRIM))) ISNULL);
SELECT SUM(((((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)))OR(((rt0.c0)GLOB(rt0.c1)))))AND(CASE rt0.c1  WHEN rt0.c1 THEN x'' ELSE rt0.c1 END))) FROM rt0;
SELECT t0.c1, t0.c64, t0.c0 FROM t0;
SELECT ALL t0.c1, t0.c64, t0.c0 FROM t0 WHERE (((((t0.c0)/(t0.c1)))IS NOT(((((((((t0.c64)AND(t0.c64)))AND(t0.c64)))AND(t0.c0)))AND(x'4cdd'))))) UNION ALL SELECT ALL t0.c1, t0.c64, t0.c0 FROM t0 WHERE ((NOT (((((t0.c0)/(t0.c1)))IS NOT(((((((((t0.c64)AND(t0.c64)))AND(t0.c64)))AND(t0.c0)))AND(x'4cdd'))))))) UNION ALL SELECT ALL t0.c1, t0.c64, t0.c0 FROM t0 WHERE (((((((t0.c0)/(t0.c1)))IS NOT(((((((((t0.c64)AND(t0.c64)))AND(t0.c64)))AND(t0.c0)))AND(x'4cdd'))))) ISNULL));
SELECT t0.c1, t0.c64, t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (CAST(((t0.c64) BETWEEN ('j0') AND (0.5655553180943435)) AS REAL)) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (CAST(((t0.c64) BETWEEN ('j0') AND (0.5655553180943435)) AS REAL)))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((CAST(((t0.c64) BETWEEN ('j0') AND (0.5655553180943435)) AS REAL)) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT rt0.c2, rt0.c1, rt1.c6, rt0.c0, rt1.c1 FROM rt1, rt0 GROUP BY rt0.c2, rt0.c1, rt1.c6, rt0.c0, rt1.c1;
SELECT rt0.c2, rt0.c1, rt1.c6, rt0.c0, rt1.c1 FROM rt1, rt0 WHERE (LAST_INSERT_ROWID() COLLATE BINARY) GROUP BY rt0.c2, rt0.c1, rt1.c6, rt0.c0, rt1.c1 UNION SELECT rt0.c2, rt0.c1, rt1.c6, rt0.c0, rt1.c1 FROM rt1, rt0 WHERE ((NOT (LAST_INSERT_ROWID() COLLATE BINARY))) GROUP BY rt0.c2, rt0.c1, rt1.c6, rt0.c0, rt1.c1 UNION SELECT ALL rt0.c2, rt0.c1, rt1.c6, rt0.c0, rt1.c1 FROM rt1, rt0 WHERE (((LAST_INSERT_ROWID() COLLATE BINARY) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt1.c6, rt0.c0, rt1.c1;
SELECT rt0.c2, rt0.c1, rt1.c6, rt0.c0, rt1.c1 FROM rt1, rt0 GROUP BY rt0.c2, rt0.c1, rt1.c6, rt0.c0, rt1.c1;
SELECT rt1.c5, rt0.c1, rt0.c0, rt1.c6, rt1.c1, rt1.c2, rt1.c3, rt1.c4, rt0.c2, rt1.c0 FROM rt0, rt1 GROUP BY rt1.c5, rt0.c1, rt0.c0, rt1.c6, rt1.c1, rt1.c2, rt1.c3, rt1.c4, rt0.c2, rt1.c0;
SELECT rt1.c5, rt0.c1, rt0.c0, rt1.c6, rt1.c1, rt1.c2, rt1.c3, rt1.c4, rt0.c2, rt1.c0 FROM rt0, rt1 GROUP BY rt1.c5, rt0.c1, rt0.c0, rt1.c6, rt1.c1, rt1.c2, rt1.c3, rt1.c4, rt0.c2, rt1.c0 HAVING ((x'') ISNULL) UNION ALL SELECT ALL rt1.c5, rt0.c1, rt0.c0, rt1.c6, rt1.c1, rt1.c2, rt1.c3, rt1.c4, rt0.c2, rt1.c0 FROM rt0, rt1 GROUP BY rt1.c5, rt0.c1, rt0.c0, rt1.c6, rt1.c1, rt1.c2, rt1.c3, rt1.c4, rt0.c2, rt1.c0 HAVING (NOT (((x'') ISNULL))) UNION ALL SELECT ALL rt1.c5, rt0.c1, rt0.c0, rt1.c6, rt1.c1, rt1.c2, rt1.c3, rt1.c4, rt0.c2, rt1.c0 FROM rt0, rt1 GROUP BY rt1.c5, rt0.c1, rt0.c0, rt1.c6, rt1.c1, rt1.c2, rt1.c3, rt1.c4, rt0.c2, rt1.c0 HAVING ((((x'') ISNULL)) ISNULL);
SELECT rt1.c5, rt0.c1, rt0.c0, rt1.c6, rt1.c1, rt1.c2, rt1.c3, rt1.c4, rt0.c2, rt1.c0 FROM rt0, rt1 GROUP BY rt1.c5, rt0.c1, rt0.c0, rt1.c6, rt1.c1, rt1.c2, rt1.c3, rt1.c4, rt0.c2, rt1.c0;
SELECT rt1.c5, rt0.c1, rt0.c0, rt1.c6, rt1.c1, rt1.c2, rt1.c3, rt1.c4, rt0.c2, rt1.c0 FROM rt0, rt1 GROUP BY rt1.c5, rt0.c1, rt0.c0, rt1.c6, rt1.c1, rt1.c2, rt1.c3, rt1.c4, rt0.c2, rt1.c0 HAVING ((x'') ISNULL) UNION ALL SELECT ALL rt1.c5, rt0.c1, rt0.c0, rt1.c6, rt1.c1, rt1.c2, rt1.c3, rt1.c4, rt0.c2, rt1.c0 FROM rt0, rt1 GROUP BY rt1.c5, rt0.c1, rt0.c0, rt1.c6, rt1.c1, rt1.c2, rt1.c3, rt1.c4, rt0.c2, rt1.c0 HAVING (NOT (((x'') ISNULL))) UNION ALL SELECT ALL rt1.c5, rt0.c1, rt0.c0, rt1.c6, rt1.c1, rt1.c2, rt1.c3, rt1.c4, rt0.c2, rt1.c0 FROM rt0, rt1 GROUP BY rt1.c5, rt0.c1, rt0.c0, rt1.c6, rt1.c1, rt1.c2, rt1.c3, rt1.c4, rt0.c2, rt1.c0 HAVING ((((x'') ISNULL)) ISNULL);
SELECT rt1.c5, rt0.c1, rt0.c0, rt1.c6, rt1.c1, rt1.c2, rt1.c3, rt1.c4, rt0.c2, rt1.c0 FROM rt0, rt1 GROUP BY rt1.c5, rt0.c1, rt0.c0, rt1.c6, rt1.c1, rt1.c2, rt1.c3, rt1.c4, rt0.c2, rt1.c0;
SELECT t0.c64, rt0.c2, rt1.c5, t0.c1, rt1.c4, rt1.c2, rt1.c1, t0.c0, rt1.c0, rt1.c6, rt0.c1 FROM t0, rt1, rt0;
SELECT ALL t0.c64, rt0.c2, rt1.c5, t0.c1, rt1.c4, rt1.c2, rt1.c1, t0.c0, rt1.c0, rt1.c6, rt0.c1 FROM t0, rt1, rt0 WHERE (((CAST(rt0.c2 AS BLOB)) NOT NULL)) UNION ALL SELECT t0.c64, rt0.c2, rt1.c5, t0.c1, rt1.c4, rt1.c2, rt1.c1, t0.c0, rt1.c0, rt1.c6, rt0.c1 FROM t0, rt1, rt0 WHERE ((NOT (((CAST(rt0.c2 AS BLOB)) NOT NULL)))) UNION ALL SELECT t0.c64, rt0.c2, rt1.c5, t0.c1, rt1.c4, rt1.c2, rt1.c1, t0.c0, rt1.c0, rt1.c6, rt0.c1 FROM t0, rt1, rt0 WHERE (((((CAST(rt0.c2 AS BLOB)) NOT NULL)) ISNULL));
SELECT t0.c64, rt0.c2, rt1.c5, t0.c1, rt1.c4, rt1.c2, rt1.c1, t0.c0, rt1.c0, rt1.c6, rt0.c1 FROM t0, rt1, rt0;
SELECT DISTINCT * FROM rt1 CROSS JOIN rt0 ON x'1cf6' CROSS JOIN t0 ON ((0.08089406383044973) NOT BETWEEN (((((rt1.c1)OR(x'9b57')))OR(t0.c1))) AND (CAST(t0.c1 AS INTEGER)));
SELECT DISTINCT * FROM rt1 CROSS JOIN rt0 ON x'1cf6' CROSS JOIN t0 ON ((0.08089406383044973) NOT BETWEEN (((((rt1.c1)OR(x'9b57')))OR(t0.c1))) AND (CAST(t0.c1 AS INTEGER))) WHERE ((((((rt1.c0)||(t0.c1))))!=(((((rt1.c2, 0.0906187200385109, rt1.c0)) NOT BETWEEN ((rt0.c1, t0.c1, rt0.c0)) AND ((rt1.c1, rt0.c0, 'u|'))))))) UNION SELECT DISTINCT * FROM rt1 CROSS JOIN rt0 ON x'1cf6' CROSS JOIN t0 ON ((0.08089406383044973) NOT BETWEEN (((((rt1.c1)OR(x'9b57')))OR(t0.c1))) AND (CAST(t0.c1 AS INTEGER))) WHERE ((NOT ((((((rt1.c0)||(t0.c1))))!=(((((rt1.c2, 0.0906187200385109, rt1.c0)) NOT BETWEEN ((rt0.c1, t0.c1, rt0.c0)) AND ((rt1.c1, rt0.c0, 'u|'))))))))) UNION SELECT DISTINCT * FROM rt1 CROSS JOIN rt0 ON x'1cf6' CROSS JOIN t0 ON ((0.08089406383044973) NOT BETWEEN (((((rt1.c1)OR(x'9b57')))OR(t0.c1))) AND (CAST(t0.c1 AS INTEGER))) WHERE ((((((((rt1.c0)||(t0.c1))))!=(((((rt1.c2, 0.0906187200385109, rt1.c0)) NOT BETWEEN ((rt0.c1, t0.c1, rt0.c0)) AND ((rt1.c1, rt0.c0, 'u|'))))))) ISNULL));
SELECT DISTINCT * FROM rt1 CROSS JOIN rt0 ON x'1cf6' CROSS JOIN t0 ON ((0.08089406383044973) NOT BETWEEN (((((rt1.c1)OR(x'9b57')))OR(t0.c1))) AND (CAST(t0.c1 AS INTEGER)));
SELECT ALL rt0.c2, rt1.c4, rt1.c0, rt1.c6, t0.c0, rt1.c2, rt1.c3, rt1.c1, t0.c64, rt0.c0 FROM rt0, t0, rt1 GROUP BY rt0.c2, rt1.c4, rt1.c0, rt1.c6, t0.c0, rt1.c2, rt1.c3, rt1.c1, t0.c64, rt0.c0;
SELECT ALL rt0.c2, rt1.c4, rt1.c0, rt1.c6, t0.c0, rt1.c2, rt1.c3, rt1.c1, t0.c64, rt0.c0 FROM rt0, t0, rt1 WHERE (CASE WHEN TYPEOF(DISTINCT rt1.c5) THEN ((((0.1304205169451973)AND(t0.c1)))OR(rt0.c2)) WHEN (NOT (t0.c0)) THEN ((rt1.c3) ISNULL) WHEN CAST(rt1.c2 AS INTEGER) THEN '-32710839' END) GROUP BY rt0.c2, rt1.c4, rt1.c0, rt1.c6, t0.c0, rt1.c2, rt1.c3, rt1.c1, t0.c64, rt0.c0 UNION SELECT rt0.c2, rt1.c4, rt1.c0, rt1.c6, t0.c0, rt1.c2, rt1.c3, rt1.c1, t0.c64, rt0.c0 FROM rt0, t0, rt1 WHERE ((NOT (CASE WHEN TYPEOF(DISTINCT rt1.c5) THEN ((((0.1304205169451973)AND(t0.c1)))OR(rt0.c2)) WHEN (NOT (t0.c0)) THEN ((rt1.c3) ISNULL) WHEN CAST(rt1.c2 AS INTEGER) THEN '-32710839' END))) GROUP BY rt0.c2, rt1.c4, rt1.c0, rt1.c6, t0.c0, rt1.c2, rt1.c3, rt1.c1, t0.c64, rt0.c0 UNION SELECT ALL rt0.c2, rt1.c4, rt1.c0, rt1.c6, t0.c0, rt1.c2, rt1.c3, rt1.c1, t0.c64, rt0.c0 FROM rt0, t0, rt1 WHERE (((CASE WHEN TYPEOF(DISTINCT rt1.c5) THEN ((((0.1304205169451973)AND(t0.c1)))OR(rt0.c2)) WHEN (NOT (t0.c0)) THEN ((rt1.c3) ISNULL) WHEN CAST(rt1.c2 AS INTEGER) THEN '-32710839' END) ISNULL)) GROUP BY rt0.c2, rt1.c4, rt1.c0, rt1.c6, t0.c0, rt1.c2, rt1.c3, rt1.c1, t0.c64, rt0.c0;
SELECT ALL rt0.c2, rt1.c4, rt1.c0, rt1.c6, t0.c0, rt1.c2, rt1.c3, rt1.c1, t0.c64, rt0.c0 FROM rt0, t0, rt1 GROUP BY rt0.c2, rt1.c4, rt1.c0, rt1.c6, t0.c0, rt1.c2, rt1.c3, rt1.c1, t0.c64, rt0.c0;
SELECT rt1.c5, rt1.c3 FROM rt1 GROUP BY rt1.c5, rt1.c3;
SELECT ALL rt1.c5, rt1.c3 FROM rt1 GROUP BY rt1.c5, rt1.c3 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c5, rt1.c3 FROM rt1 GROUP BY rt1.c5, rt1.c3 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c5, rt1.c3 FROM rt1 GROUP BY rt1.c5, rt1.c3 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c5, rt1.c3 FROM rt1 GROUP BY rt1.c5, rt1.c3;
SELECT ALL rt1.c5, rt1.c3 FROM rt1 GROUP BY rt1.c5, rt1.c3 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c5, rt1.c3 FROM rt1 GROUP BY rt1.c5, rt1.c3 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c5, rt1.c3 FROM rt1 GROUP BY rt1.c5, rt1.c3 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c5, rt1.c3 FROM rt1 GROUP BY rt1.c5, rt1.c3;
SELECT SUM(STRFTIME(((rt1.c4) NOT BETWEEN (rt1.c2) AND (rt1.c1)), CAST(rt1.c5 AS INTEGER), NULLIF(rt1.c3, rt1.c1))) FROM rt1 ORDER BY (rt1.c6 IN ()) DESC  NULLS FIRST;
SELECT * FROM t0, rt1;
SELECT ALL * FROM t0, rt1 WHERE (HEX(((t0.c1) NOTNULL))) UNION ALL SELECT ALL * FROM t0, rt1 WHERE ((NOT (HEX(((t0.c1) NOTNULL))))) UNION ALL SELECT ALL * FROM t0, rt1 WHERE (((HEX(((t0.c1) NOTNULL))) ISNULL));
SELECT * FROM t0, rt1;
SELECT DISTINCT * FROM rt0, t0, rt1;
SELECT DISTINCT * FROM rt0, t0, rt1 WHERE ((((- (rt1.c1)))>((rt0.c0 IN ())))) UNION SELECT DISTINCT * FROM rt0, t0, rt1 WHERE ((NOT ((((- (rt1.c1)))>((rt0.c0 IN ())))))) UNION SELECT DISTINCT * FROM rt0, t0, rt1 WHERE ((((((- (rt1.c1)))>((rt0.c0 IN ())))) ISNULL));
SELECT DISTINCT * FROM rt0, t0, rt1;
SELECT ALL rt1.c0, rt1.c1, t0.c0, rt0.c2, rt0.c1 FROM t0, rt0, rt1 GROUP BY rt1.c0, rt1.c1, t0.c0, rt0.c2, rt0.c1;
SELECT ALL rt1.c0, rt1.c1, t0.c0, rt0.c2, rt0.c1 FROM t0, rt0, rt1 WHERE ((((t0.c1 IN (rt1.c3)))<(((t0.c0)<(t0.c1))))) GROUP BY rt1.c0, rt1.c1, t0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt1.c0, rt1.c1, t0.c0, rt0.c2, rt0.c1 FROM t0, rt0, rt1 WHERE ((NOT ((((t0.c1 IN (rt1.c3)))<(((t0.c0)<(t0.c1))))))) GROUP BY rt1.c0, rt1.c1, t0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt1.c0, rt1.c1, t0.c0, rt0.c2, rt0.c1 FROM t0, rt0, rt1 WHERE ((((((t0.c1 IN (rt1.c3)))<(((t0.c0)<(t0.c1))))) ISNULL)) GROUP BY rt1.c0, rt1.c1, t0.c0, rt0.c2, rt0.c1;
SELECT ALL rt1.c0, rt1.c1, t0.c0, rt0.c2, rt0.c1 FROM t0, rt0, rt1 GROUP BY rt1.c0, rt1.c1, t0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt1.c6, rt0.c0, rt1.c2, t0.c64, rt1.c0, rt1.c3, rt0.c1, rt1.c4, rt1.c1, t0.c0, t0.c1 FROM rt1, rt0 CROSS JOIN t0 ON (((t0.c0) NOT BETWEEN (t0.c1) AND (rt1.c6)) IN ()) GROUP BY rt0.c2, rt1.c6, rt0.c0, rt1.c2, t0.c64, rt1.c0, rt1.c3, rt0.c1, rt1.c4, rt1.c1, t0.c0, t0.c1;
SELECT ALL rt0.c2, rt1.c6, rt0.c0, rt1.c2, t0.c64, rt1.c0, rt1.c3, rt0.c1, rt1.c4, rt1.c1, t0.c0, t0.c1 FROM rt1, rt0 CROSS JOIN t0 ON (((t0.c0) NOT BETWEEN (t0.c1) AND (rt1.c6)) IN ()) GROUP BY rt0.c2, rt1.c6, rt0.c0, rt1.c2, t0.c64, rt1.c0, rt1.c3, rt0.c1, rt1.c4, rt1.c1, t0.c0, t0.c1 HAVING MIN(((rt0.c2) NOT BETWEEN (rt1.c1) AND (0.9457602124509843))) UNION ALL SELECT ALL rt0.c2, rt1.c6, rt0.c0, rt1.c2, t0.c64, rt1.c0, rt1.c3, rt0.c1, rt1.c4, rt1.c1, t0.c0, t0.c1 FROM rt1, rt0 CROSS JOIN t0 ON (((t0.c0) NOT BETWEEN (t0.c1) AND (rt1.c6)) IN ()) GROUP BY rt0.c2, rt1.c6, rt0.c0, rt1.c2, t0.c64, rt1.c0, rt1.c3, rt0.c1, rt1.c4, rt1.c1, t0.c0, t0.c1 HAVING (NOT (MIN(((rt0.c2) NOT BETWEEN (rt1.c1) AND (0.9457602124509843))))) UNION ALL SELECT rt0.c2, rt1.c6, rt0.c0, rt1.c2, t0.c64, rt1.c0, rt1.c3, rt0.c1, rt1.c4, rt1.c1, t0.c0, t0.c1 FROM rt1, rt0 CROSS JOIN t0 ON (((t0.c0) NOT BETWEEN (t0.c1) AND (rt1.c6)) IN ()) GROUP BY rt0.c2, rt1.c6, rt0.c0, rt1.c2, t0.c64, rt1.c0, rt1.c3, rt0.c1, rt1.c4, rt1.c1, t0.c0, t0.c1 HAVING ((MIN(((rt0.c2) NOT BETWEEN (rt1.c1) AND (0.9457602124509843)))) ISNULL);
SELECT ALL rt0.c2, rt1.c6, rt0.c0, rt1.c2, t0.c64, rt1.c0, rt1.c3, rt0.c1, rt1.c4, rt1.c1, t0.c0, t0.c1 FROM rt1, rt0 CROSS JOIN t0 ON (((t0.c0) NOT BETWEEN (t0.c1) AND (rt1.c6)) IN ()) GROUP BY rt0.c2, rt1.c6, rt0.c0, rt1.c2, t0.c64, rt1.c0, rt1.c3, rt0.c1, rt1.c4, rt1.c1, t0.c0, t0.c1;
SELECT ALL rt0.c2, rt1.c6, rt0.c0, rt1.c2, t0.c64, rt1.c0, rt1.c3, rt0.c1, rt1.c4, rt1.c1, t0.c0, t0.c1 FROM rt1, rt0 CROSS JOIN t0 ON (((t0.c0) NOT BETWEEN (t0.c1) AND (rt1.c6)) IN ()) GROUP BY rt0.c2, rt1.c6, rt0.c0, rt1.c2, t0.c64, rt1.c0, rt1.c3, rt0.c1, rt1.c4, rt1.c1, t0.c0, t0.c1 HAVING MIN(((rt0.c2) NOT BETWEEN (rt1.c1) AND (0.9457602124509843))) UNION ALL SELECT ALL rt0.c2, rt1.c6, rt0.c0, rt1.c2, t0.c64, rt1.c0, rt1.c3, rt0.c1, rt1.c4, rt1.c1, t0.c0, t0.c1 FROM rt1, rt0 CROSS JOIN t0 ON (((t0.c0) NOT BETWEEN (t0.c1) AND (rt1.c6)) IN ()) GROUP BY rt0.c2, rt1.c6, rt0.c0, rt1.c2, t0.c64, rt1.c0, rt1.c3, rt0.c1, rt1.c4, rt1.c1, t0.c0, t0.c1 HAVING (NOT (MIN(((rt0.c2) NOT BETWEEN (rt1.c1) AND (0.9457602124509843))))) UNION ALL SELECT rt0.c2, rt1.c6, rt0.c0, rt1.c2, t0.c64, rt1.c0, rt1.c3, rt0.c1, rt1.c4, rt1.c1, t0.c0, t0.c1 FROM rt1, rt0 CROSS JOIN t0 ON (((t0.c0) NOT BETWEEN (t0.c1) AND (rt1.c6)) IN ()) GROUP BY rt0.c2, rt1.c6, rt0.c0, rt1.c2, t0.c64, rt1.c0, rt1.c3, rt0.c1, rt1.c4, rt1.c1, t0.c0, t0.c1 HAVING ((MIN(((rt0.c2) NOT BETWEEN (rt1.c1) AND (0.9457602124509843)))) ISNULL);
SELECT ALL rt0.c2, rt1.c6, rt0.c0, rt1.c2, t0.c64, rt1.c0, rt1.c3, rt0.c1, rt1.c4, rt1.c1, t0.c0, t0.c1 FROM rt1, rt0 CROSS JOIN t0 ON (((t0.c0) NOT BETWEEN (t0.c1) AND (rt1.c6)) IN ()) GROUP BY rt0.c2, rt1.c6, rt0.c0, rt1.c2, t0.c64, rt1.c0, rt1.c3, rt0.c1, rt1.c4, rt1.c1, t0.c0, t0.c1;
SELECT * FROM rt1;
SELECT ALL * FROM rt1 WHERE ((((((rt1.c3 IN ()))OR(((rt1.c5) NOTNULL))))OR((rt1.c0 IN ())))) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT ((((((rt1.c3 IN ()))OR(((rt1.c5) NOTNULL))))OR((rt1.c0 IN ())))))) UNION ALL SELECT ALL * FROM rt1 NOT INDEXED WHERE ((((((((rt1.c3 IN ()))OR(((rt1.c5) NOTNULL))))OR((rt1.c0 IN ())))) ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT rt0.c0, t0.c0, rt1.c6 FROM rt1, t0, rt0;
SELECT DISTINCT rt0.c0, t0.c0, rt1.c6 FROM rt1, t0, rt0 WHERE (((((((rt1.c4)GLOB(t0.c0)))OR((t0.c64 IN ()))))OR(TYPEOF(DISTINCT rt0.c2)))) UNION SELECT DISTINCT rt0.c0, t0.c0, rt1.c6 FROM rt1, t0, rt0 WHERE ((NOT (((((((rt1.c4)GLOB(t0.c0)))OR((t0.c64 IN ()))))OR(TYPEOF(DISTINCT rt0.c2)))))) UNION SELECT DISTINCT rt0.c0, t0.c0, rt1.c6 FROM rt1, t0, rt0 WHERE (((((((((rt1.c4)GLOB(t0.c0)))OR((t0.c64 IN ()))))OR(TYPEOF(DISTINCT rt0.c2)))) ISNULL));
SELECT DISTINCT rt0.c0, t0.c0, rt1.c6 FROM rt1, t0, rt0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE ((~ ((rt0.c2 IN ())))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT ((~ ((rt0.c2 IN ())))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((((~ ((rt0.c2 IN ())))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt1.c2, rt1.c3, rt1.c1, rt1.c4 FROM rt1 GROUP BY rt1.c2, rt1.c3, rt1.c1, rt1.c4;
SELECT ALL rt1.c2, rt1.c3, rt1.c1, rt1.c4 FROM rt1 GROUP BY rt1.c2, rt1.c3, rt1.c1, rt1.c4 HAVING TOTAL(AVG(rt1.c4)) UNION ALL SELECT ALL rt1.c2, rt1.c3, rt1.c1, rt1.c4 FROM rt1 GROUP BY rt1.c2, rt1.c3, rt1.c1, rt1.c4 HAVING (NOT (TOTAL(AVG(rt1.c4)))) UNION ALL SELECT ALL rt1.c2, rt1.c3, rt1.c1, rt1.c4 FROM rt1 GROUP BY rt1.c2, rt1.c3, rt1.c1, rt1.c4 HAVING ((TOTAL(AVG(rt1.c4))) ISNULL);
SELECT * FROM rt0, t0;
SELECT ALL * FROM rt0, t0 WHERE ((((((t0.c1))>=((0.5480187114604587))))<(((x'')<(t0.c0))))) UNION ALL SELECT ALL * FROM rt0, t0 WHERE ((NOT ((((((t0.c1))>=((0.5480187114604587))))<(((x'')<(t0.c0))))))) UNION ALL SELECT ALL * FROM rt0, t0 WHERE ((((((((t0.c1))>=((0.5480187114604587))))<(((x'')<(t0.c0))))) ISNULL));
SELECT * FROM rt0, t0;
SELECT DISTINCT t0.c0, t0.c64, rt0.c2, rt0.c0, rt0.c1 FROM t0, rt0;
SELECT DISTINCT t0.c0, t0.c64, rt0.c2, rt0.c0, rt0.c1 FROM t0, rt0 WHERE (((((((t0.c1)AND(t0.c1)))AND(rt0.c0))) NOT BETWEEN ((((0Xffffffff8fc403e4)) NOT BETWEEN ((t0.c64)) AND ((rt0.c0)))) AND ((((t0.c1, t0.c1, t0.c64)) BETWEEN ((rt0.c2, rt0.c1, t0.c64)) AND ((t0.c0, rt0.c1, t0.c1)))))) UNION SELECT DISTINCT t0.c0, t0.c64, rt0.c2, rt0.c0, rt0.c1 FROM t0, rt0 WHERE ((NOT (((((((t0.c1)AND(t0.c1)))AND(rt0.c0))) NOT BETWEEN ((((0Xffffffff8fc403e4)) NOT BETWEEN ((t0.c64)) AND ((rt0.c0)))) AND ((((t0.c1, t0.c1, t0.c64)) BETWEEN ((rt0.c2, rt0.c1, t0.c64)) AND ((t0.c0, rt0.c1, t0.c1)))))))) UNION SELECT DISTINCT t0.c0, t0.c64, rt0.c2, rt0.c0, rt0.c1 FROM t0, rt0 WHERE (((((((((t0.c1)AND(t0.c1)))AND(rt0.c0))) NOT BETWEEN ((((0Xffffffff8fc403e4)) NOT BETWEEN ((t0.c64)) AND ((rt0.c0)))) AND ((((t0.c1, t0.c1, t0.c64)) BETWEEN ((rt0.c2, rt0.c1, t0.c64)) AND ((t0.c0, rt0.c1, t0.c1)))))) ISNULL));
SELECT DISTINCT t0.c0, t0.c64, rt0.c2, rt0.c0, rt0.c1 FROM t0, rt0;
SELECT rt0.c2, rt1.c0, t0.c64, rt1.c3, rt1.c2, rt1.c1, rt0.c0, rt1.c4, t0.c1 FROM rt1, rt0, t0 GROUP BY rt0.c2, rt1.c0, t0.c64, rt1.c3, rt1.c2, rt1.c1, rt0.c0, rt1.c4, t0.c1;
SELECT ALL rt0.c2, rt1.c0, t0.c64, rt1.c3, rt1.c2, rt1.c1, rt0.c0, rt1.c4, t0.c1 FROM rt1, rt0, t0 WHERE (CAST(rt1.c4 AS REAL)) GROUP BY rt0.c2, rt1.c0, t0.c64, rt1.c3, rt1.c2, rt1.c1, rt0.c0, rt1.c4, t0.c1 UNION SELECT rt0.c2, rt1.c0, t0.c64, rt1.c3, rt1.c2, rt1.c1, rt0.c0, rt1.c4, t0.c1 FROM rt1, rt0, t0 WHERE ((NOT (CAST(rt1.c4 AS REAL)))) GROUP BY rt0.c2, rt1.c0, t0.c64, rt1.c3, rt1.c2, rt1.c1, rt0.c0, rt1.c4, t0.c1 UNION SELECT rt0.c2, rt1.c0, t0.c64, rt1.c3, rt1.c2, rt1.c1, rt0.c0, rt1.c4, t0.c1 FROM rt1, rt0, t0 WHERE (((CAST(rt1.c4 AS REAL)) ISNULL)) GROUP BY rt0.c2, rt1.c0, t0.c64, rt1.c3, rt1.c2, rt1.c1, rt0.c0, rt1.c4, t0.c1;
SELECT rt0.c2, rt1.c0, t0.c64, rt1.c3, rt1.c2, rt1.c1, rt0.c0, rt1.c4, t0.c1 FROM rt1, rt0, t0 GROUP BY rt0.c2, rt1.c0, t0.c64, rt1.c3, rt1.c2, rt1.c1, rt0.c0, rt1.c4, t0.c1;
SELECT ALL rt1.c1, t0.c0, rt1.c3, rt0.c0, rt1.c4, t0.c1 FROM t0, rt1, rt0 GROUP BY rt1.c1, t0.c0, rt1.c3, rt0.c0, rt1.c4, t0.c1;
SELECT ALL rt1.c1, t0.c0, rt1.c3, rt0.c0, rt1.c4, t0.c1 FROM t0, rt1, rt0 GROUP BY rt1.c1, t0.c0, rt1.c3, rt0.c0, rt1.c4, t0.c1 HAVING ((((((((CAST(rt0.c2 AS BLOB))OR((NOT (MIN(rt1.c1))))))AND(((t0.c1)*(SUM(COUNT(*)))))))AND(TOTAL(rt1.c4))))OR(('-554580372' IN (rt1.c2)))) UNION ALL SELECT ALL rt1.c1, t0.c0, rt1.c3, rt0.c0, rt1.c4, t0.c1 FROM t0, rt1, rt0 GROUP BY rt1.c1, t0.c0, rt1.c3, rt0.c0, rt1.c4, t0.c1 HAVING (NOT (((((((((CAST(rt0.c2 AS BLOB))OR((NOT (MIN(rt1.c1))))))AND(((t0.c1)*(SUM(COUNT(*)))))))AND(TOTAL(rt1.c4))))OR(('-554580372' IN (rt1.c2)))))) UNION ALL SELECT ALL rt1.c1, t0.c0, rt1.c3, rt0.c0, rt1.c4, t0.c1 FROM t0, rt1, rt0 GROUP BY rt1.c1, t0.c0, rt1.c3, rt0.c0, rt1.c4, t0.c1 HAVING ((((((((((CAST(rt0.c2 AS BLOB))OR((NOT (MIN(rt1.c1))))))AND(((t0.c1)*(SUM(COUNT(*)))))))AND(TOTAL(rt1.c4))))OR(('-554580372' IN (rt1.c2))))) ISNULL);
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE (CAST(CAST(t0.c64 AS INTEGER) AS REAL)) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (CAST(CAST(t0.c64 AS INTEGER) AS REAL)))) UNION ALL SELECT ALL * FROM t0 WHERE (((CAST(CAST(t0.c64 AS INTEGER) AS REAL)) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ((((NOT (rt0.c0))) NOT BETWEEN (rt0.c0) AND ((rt0.c0 IN (rt0.c2, rt0.c2))))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((((NOT (rt0.c0))) NOT BETWEEN (rt0.c0) AND ((rt0.c0 IN (rt0.c2, rt0.c2))))))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ((((((NOT (rt0.c0))) NOT BETWEEN (rt0.c0) AND ((rt0.c0 IN (rt0.c2, rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT ALL t0.c1, rt0.c1, rt0.c2 FROM rt0, t0 GROUP BY t0.c1, rt0.c1, rt0.c2;
SELECT t0.c1, rt0.c1, rt0.c2 FROM rt0, t0 WHERE (CAST((((t0.c0))<=((t0.c64))) AS BLOB)) GROUP BY t0.c1, rt0.c1, rt0.c2 UNION SELECT ALL t0.c1, rt0.c1, rt0.c2 FROM rt0, t0 WHERE ((NOT (CAST((((t0.c0))<=((t0.c64))) AS BLOB)))) GROUP BY t0.c1, rt0.c1, rt0.c2 UNION SELECT ALL t0.c1, rt0.c1, rt0.c2 FROM rt0, t0 WHERE (((CAST((((t0.c0))<=((t0.c64))) AS BLOB)) ISNULL)) GROUP BY t0.c1, rt0.c1, rt0.c2;
SELECT ALL t0.c1, rt0.c1, rt0.c2 FROM rt0, t0 GROUP BY t0.c1, rt0.c1, rt0.c2;
SELECT ALL rt1.c2 FROM t0, rt1 GROUP BY rt1.c2;
SELECT rt1.c2 FROM t0, rt1 GROUP BY rt1.c2 HAVING GROUP_CONCAT(MAX(rt1.c4)) COLLATE BINARY UNION ALL SELECT ALL rt1.c2 FROM t0, rt1 GROUP BY rt1.c2 HAVING (NOT (GROUP_CONCAT(MAX(rt1.c4)) COLLATE BINARY)) UNION ALL SELECT rt1.c2 FROM t0, rt1 GROUP BY rt1.c2 HAVING ((GROUP_CONCAT(MAX(rt1.c4)) COLLATE BINARY) ISNULL);
SELECT ALL rt1.c6, rt0.c1, rt0.c0, rt1.c2 FROM rt0, rt1;
SELECT rt1.c6, rt0.c1, rt0.c0, rt1.c2 FROM rt0, rt1 WHERE (rt1.c2 COLLATE BINARY) UNION ALL SELECT rt1.c6, rt0.c1, rt0.c0, rt1.c2 FROM rt0, rt1 WHERE ((NOT (rt1.c2 COLLATE BINARY))) UNION ALL SELECT rt1.c6, rt0.c1, rt0.c0, rt1.c2 FROM rt0, rt1 WHERE (((rt1.c2 COLLATE BINARY) ISNULL));
SELECT ALL rt1.c6, rt0.c1, rt0.c0, rt1.c2 FROM rt0, rt1;
SELECT DISTINCT * FROM rt0 CROSS JOIN t0 ON (((rt1.c6)) BETWEEN ((CAST(rt1.c3 AS BLOB))) AND ((CASE rt0.c2  WHEN t0.c1 THEN rt1.c5 END))) RIGHT OUTER JOIN rt1 ON ((((rt0.c0) NOTNULL)) BETWEEN (((((rt1.c1)AND(rt1.c3)))AND(rt0.c0))) AND ((((t0.c0)) BETWEEN ((rt1.c2)) AND ((NULL)))));
SELECT t0.c0, t0.c64 FROM t0 GROUP BY t0.c0, t0.c64;
SELECT t0.c0, t0.c64 FROM t0 WHERE (CASE WHEN ((t0.c0) IS TRUE) THEN CASE t0.c0  WHEN t0.c64 THEN t0.c64 ELSE t0.c1 END END) GROUP BY t0.c0, t0.c64 UNION SELECT ALL t0.c0, t0.c64 FROM t0 WHERE ((NOT (CASE WHEN ((t0.c0) IS TRUE) THEN CASE t0.c0  WHEN t0.c64 THEN t0.c64 ELSE t0.c1 END END))) GROUP BY t0.c0, t0.c64 UNION SELECT t0.c0, t0.c64 FROM t0 WHERE (((CASE WHEN ((t0.c0) IS TRUE) THEN CASE t0.c0  WHEN t0.c64 THEN t0.c64 ELSE t0.c1 END END) ISNULL)) GROUP BY t0.c0, t0.c64;
SELECT t0.c0, t0.c64 FROM t0 GROUP BY t0.c0, t0.c64;
SELECT ALL rt1.c0, rt0.c2, rt0.c1 FROM t0, rt1 FULL OUTER JOIN rt0 ON ((json_insert(t0.c64, rt0.c2, rt1.c0)) NOT BETWEEN (rt0.c2 COLLATE BINARY) AND (((((rt1.c5)AND(rt0.c0)))AND(rt1.c6)))) GROUP BY rt1.c0, rt0.c2, rt0.c1;
SELECT ALL rt1.c0, rt0.c2, rt0.c1 FROM t0, rt1 FULL OUTER JOIN rt0 ON ((json_insert(t0.c64, rt0.c2, rt1.c0)) NOT BETWEEN (rt0.c2 COLLATE BINARY) AND (((((rt1.c5)AND(rt0.c0)))AND(rt1.c6)))) GROUP BY rt1.c0, rt0.c2, rt0.c1 HAVING (MAX(TOTAL(rt0.c1)) IN ()) UNION ALL SELECT rt1.c0, rt0.c2, rt0.c1 FROM t0, rt1 FULL OUTER JOIN rt0 ON ((json_insert(t0.c64, rt0.c2, rt1.c0)) NOT BETWEEN (rt0.c2 COLLATE BINARY) AND (((((rt1.c5)AND(rt0.c0)))AND(rt1.c6)))) GROUP BY rt1.c0, rt0.c2, rt0.c1 HAVING (NOT ((MAX(TOTAL(rt0.c1)) IN ()))) UNION ALL SELECT ALL rt1.c0, rt0.c2, rt0.c1 FROM t0, rt1 FULL OUTER JOIN rt0 ON ((json_insert(t0.c64, rt0.c2, rt1.c0)) NOT BETWEEN (rt0.c2 COLLATE BINARY) AND (((((rt1.c5)AND(rt0.c0)))AND(rt1.c6)))) GROUP BY rt1.c0, rt0.c2, rt0.c1 HAVING (((MAX(TOTAL(rt0.c1)) IN ())) ISNULL);
SELECT ALL rt1.c0, rt0.c2, rt0.c1 FROM t0, rt1 FULL OUTER JOIN rt0 ON ((json_insert(t0.c64, rt0.c2, rt1.c0)) NOT BETWEEN (rt0.c2 COLLATE BINARY) AND (((((rt1.c5)AND(rt0.c0)))AND(rt1.c6)))) GROUP BY rt1.c0, rt0.c2, rt0.c1;
SELECT ALL rt1.c0, rt0.c2, rt0.c1 FROM t0, rt1 FULL OUTER JOIN rt0 ON ((json_insert(t0.c64, rt0.c2, rt1.c0)) NOT BETWEEN (rt0.c2 COLLATE BINARY) AND (((((rt1.c5)AND(rt0.c0)))AND(rt1.c6)))) GROUP BY rt1.c0, rt0.c2, rt0.c1 HAVING (MAX(TOTAL(rt0.c1)) IN ()) UNION ALL SELECT rt1.c0, rt0.c2, rt0.c1 FROM t0, rt1 FULL OUTER JOIN rt0 ON ((json_insert(t0.c64, rt0.c2, rt1.c0)) NOT BETWEEN (rt0.c2 COLLATE BINARY) AND (((((rt1.c5)AND(rt0.c0)))AND(rt1.c6)))) GROUP BY rt1.c0, rt0.c2, rt0.c1 HAVING (NOT ((MAX(TOTAL(rt0.c1)) IN ()))) UNION ALL SELECT ALL rt1.c0, rt0.c2, rt0.c1 FROM t0, rt1 FULL OUTER JOIN rt0 ON ((json_insert(t0.c64, rt0.c2, rt1.c0)) NOT BETWEEN (rt0.c2 COLLATE BINARY) AND (((((rt1.c5)AND(rt0.c0)))AND(rt1.c6)))) GROUP BY rt1.c0, rt0.c2, rt0.c1 HAVING (((MAX(TOTAL(rt0.c1)) IN ())) ISNULL);
SELECT ALL rt1.c0, rt0.c2, rt0.c1 FROM t0, rt1 FULL OUTER JOIN rt0 ON ((json_insert(t0.c64, rt0.c2, rt1.c0)) NOT BETWEEN (rt0.c2 COLLATE BINARY) AND (((((rt1.c5)AND(rt0.c0)))AND(rt1.c6)))) GROUP BY rt1.c0, rt0.c2, rt0.c1;
SELECT * FROM t0;
SELECT * FROM t0 WHERE (x'') UNION ALL SELECT * FROM t0 WHERE ((NOT (x''))) UNION ALL SELECT * FROM t0 WHERE (((x'') ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c1) IS FALSE))IS NOT(((rt0.c2)>=(rt0.c1))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c1) IS FALSE))IS NOT(((rt0.c2)>=(rt0.c1))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c1) IS FALSE))IS NOT(((rt0.c2)>=(rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL t0.c0, rt1.c2, rt1.c0, t0.c64, rt1.c4, rt1.c1, t0.c1, rt1.c5 FROM t0, rt1 GROUP BY t0.c0, rt1.c2, rt1.c0, t0.c64, rt1.c4, rt1.c1, t0.c1, rt1.c5;
SELECT ALL t0.c0, rt1.c2, rt1.c0, t0.c64, rt1.c4, rt1.c1, t0.c1, rt1.c5 FROM t0, rt1 WHERE (((((t0.c64) NOT NULL)) NOTNULL)) GROUP BY t0.c0, rt1.c2, rt1.c0, t0.c64, rt1.c4, rt1.c1, t0.c1, rt1.c5 UNION SELECT t0.c0, rt1.c2, rt1.c0, t0.c64, rt1.c4, rt1.c1, t0.c1, rt1.c5 FROM t0, rt1 WHERE ((NOT (((((t0.c64) NOT NULL)) NOTNULL)))) GROUP BY t0.c0, rt1.c2, rt1.c0, t0.c64, rt1.c4, rt1.c1, t0.c1, rt1.c5 UNION SELECT ALL t0.c0, rt1.c2, rt1.c0, t0.c64, rt1.c4, rt1.c1, t0.c1, rt1.c5 FROM t0, rt1 WHERE (((((((t0.c64) NOT NULL)) NOTNULL)) ISNULL)) GROUP BY t0.c0, rt1.c2, rt1.c0, t0.c64, rt1.c4, rt1.c1, t0.c1, rt1.c5;
SELECT ALL t0.c0, rt1.c2, rt1.c0, t0.c64, rt1.c4, rt1.c1, t0.c1, rt1.c5 FROM t0, rt1 GROUP BY t0.c0, rt1.c2, rt1.c0, t0.c64, rt1.c4, rt1.c1, t0.c1, rt1.c5;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((((((((MIN(rt0.c2))AND(TOTAL(rt0.c1))))OR(((SUM(COUNT(MAX(GROUP_CONCAT(rt0.c1)))))+(COUNT(*))))))OR(TOTAL(MAX(GROUP_CONCAT(rt0.c2))))))AND(((TOTAL(GROUP_CONCAT(SUM(rt0.c1))))IS NOT(AVG(rt0.c0))))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (((((((((MIN(rt0.c2))AND(TOTAL(rt0.c1))))OR(((SUM(COUNT(MAX(GROUP_CONCAT(rt0.c1)))))+(COUNT(*))))))OR(TOTAL(MAX(GROUP_CONCAT(rt0.c2))))))AND(((TOTAL(GROUP_CONCAT(SUM(rt0.c1))))IS NOT(AVG(rt0.c0))))))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((((((((((MIN(rt0.c2))AND(TOTAL(rt0.c1))))OR(((SUM(COUNT(MAX(GROUP_CONCAT(rt0.c1)))))+(COUNT(*))))))OR(TOTAL(MAX(GROUP_CONCAT(rt0.c2))))))AND(((TOTAL(GROUP_CONCAT(SUM(rt0.c1))))IS NOT(AVG(rt0.c0)))))) ISNULL);
SELECT t0.c64, rt0.c0 FROM t0, rt0;
SELECT ALL t0.c64, rt0.c0 FROM t0, rt0 WHERE ((((((NULL))<((rt0.c2)))) NOT BETWEEN ((t0.c64 IN (t0.c0))) AND (((rt0.c2)<>(rt0.c1))))) UNION ALL SELECT t0.c64, rt0.c0 FROM t0, rt0 WHERE ((NOT ((((((NULL))<((rt0.c2)))) NOT BETWEEN ((t0.c64 IN (t0.c0))) AND (((rt0.c2)<>(rt0.c1))))))) UNION ALL SELECT t0.c64, rt0.c0 FROM t0, rt0 WHERE ((((((((NULL))<((rt0.c2)))) NOT BETWEEN ((t0.c64 IN (t0.c0))) AND (((rt0.c2)<>(rt0.c1))))) ISNULL));
SELECT t0.c64, rt0.c0 FROM t0, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CASE WHEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)) THEN ((x'') BETWEEN (rt0.c2) AND (rt0.c1)) END) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CASE WHEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)) THEN ((x'') BETWEEN (rt0.c2) AND (rt0.c1)) END))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CASE WHEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)) THEN ((x'') BETWEEN (rt0.c2) AND (rt0.c1)) END) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL t0.c1, t0.c64, rt0.c1, rt0.c2 FROM rt0, t0 GROUP BY t0.c1, t0.c64, rt0.c1, rt0.c2;
SELECT ALL t0.c1, t0.c64, rt0.c1, rt0.c2 FROM rt0, t0 WHERE ((((CAST(t0.c64 AS INTEGER)))==((((((x'')AND(t0.c0)))OR(rt0.c2)))))) GROUP BY t0.c1, t0.c64, rt0.c1, rt0.c2 UNION SELECT ALL t0.c1, t0.c64, rt0.c1, rt0.c2 FROM rt0, t0 WHERE ((NOT ((((CAST(t0.c64 AS INTEGER)))=((((((x'')AND(t0.c0)))OR(rt0.c2)))))))) GROUP BY t0.c1, t0.c64, rt0.c1, rt0.c2 UNION SELECT ALL t0.c1, t0.c64, rt0.c1, rt0.c2 FROM rt0, t0 WHERE ((((((CAST(t0.c64 AS INTEGER)))=((((((x'')AND(t0.c0)))OR(rt0.c2)))))) ISNULL)) GROUP BY t0.c1, t0.c64, rt0.c1, rt0.c2;
SELECT ALL t0.c1, t0.c64, rt0.c1, rt0.c2 FROM rt0, t0 GROUP BY t0.c1, t0.c64, rt0.c1, rt0.c2;
SELECT rt1.c4, rt0.c1, rt1.c1, rt0.c2, rt1.c3, rt1.c6 FROM rt1, rt0 GROUP BY rt1.c4, rt0.c1, rt1.c1, rt0.c2, rt1.c3, rt1.c6;
SELECT ALL rt1.c4, rt0.c1, rt1.c1, rt0.c2, rt1.c3, rt1.c6 FROM rt1, rt0 GROUP BY rt1.c4, rt0.c1, rt1.c1, rt0.c2, rt1.c3, rt1.c6 HAVING GROUP_CONCAT(SUM(AVG(TOTAL(rt1.c4)))) UNION ALL SELECT ALL rt1.c4, rt0.c1, rt1.c1, rt0.c2, rt1.c3, rt1.c6 FROM rt1, rt0 GROUP BY rt1.c4, rt0.c1, rt1.c1, rt0.c2, rt1.c3, rt1.c6 HAVING (NOT (GROUP_CONCAT(SUM(AVG(TOTAL(rt1.c4)))))) UNION ALL SELECT ALL rt1.c4, rt0.c1, rt1.c1, rt0.c2, rt1.c3, rt1.c6 FROM rt1, rt0 GROUP BY rt1.c4, rt0.c1, rt1.c1, rt0.c2, rt1.c3, rt1.c6 HAVING ((GROUP_CONCAT(SUM(AVG(TOTAL(rt1.c4))))) ISNULL);
SELECT ALL SUM(x'') FROM t0;
SELECT ALL rt1.c6, t0.c1, t0.c64, rt1.c0, rt1.c3, rt1.c5, rt1.c2 FROM rt0, t0, rt1;
SELECT rt1.c6, t0.c1, t0.c64, rt1.c0, rt1.c3, rt1.c5, rt1.c2 FROM rt0, t0, rt1 WHERE (((t0.c0 IN (t0.c0)) IN ())) UNION ALL SELECT ALL rt1.c6, t0.c1, t0.c64, rt1.c0, rt1.c3, rt1.c5, rt1.c2 FROM rt0, t0, rt1 WHERE ((NOT (((t0.c0 IN (t0.c0)) IN ())))) UNION ALL SELECT rt1.c6, t0.c1, t0.c64, rt1.c0, rt1.c3, rt1.c5, rt1.c2 FROM rt0, t0, rt1 WHERE (((((t0.c0 IN (t0.c0)) IN ())) ISNULL));
SELECT ALL rt1.c6, t0.c1, t0.c64, rt1.c0, rt1.c3, rt1.c5, rt1.c2 FROM rt0, t0, rt1;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE ((((rt1.c2)) BETWEEN ((TRIM(DISTINCT '-881095989'))) AND ((CAST(rt1.c6 AS REAL))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT ((((rt1.c2)) BETWEEN ((TRIM(DISTINCT '-881095989'))) AND ((CAST(rt1.c6 AS REAL))))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((((((rt1.c2)) BETWEEN ((TRIM(DISTINCT '-881095989'))) AND ((CAST(rt1.c6 AS REAL))))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL rt1.c6, rt1.c4, rt0.c1, rt1.c1, rt1.c3, rt1.c5 FROM rt0, rt1 GROUP BY rt1.c6, rt1.c4, rt0.c1, rt1.c1, rt1.c3, rt1.c5;
SELECT ALL rt1.c6, rt1.c4, rt0.c1, rt1.c1, rt1.c3, rt1.c5 FROM rt0, rt1 WHERE (rt1.c2) GROUP BY rt1.c6, rt1.c4, rt0.c1, rt1.c1, rt1.c3, rt1.c5 UNION SELECT rt1.c6, rt1.c4, rt0.c1, rt1.c1, rt1.c3, rt1.c5 FROM rt0, rt1 WHERE ((NOT (rt1.c2))) GROUP BY rt1.c6, rt1.c4, rt0.c1, rt1.c1, rt1.c3, rt1.c5 UNION SELECT rt1.c6, rt1.c4, rt0.c1, rt1.c1, rt1.c3, rt1.c5 FROM rt0, rt1 WHERE (((rt1.c2) ISNULL)) GROUP BY rt1.c6, rt1.c4, rt0.c1, rt1.c1, rt1.c3, rt1.c5;
SELECT ALL rt1.c6, rt1.c4, rt0.c1, rt1.c1, rt1.c3, rt1.c5 FROM rt0, rt1 GROUP BY rt1.c6, rt1.c4, rt0.c1, rt1.c1, rt1.c3, rt1.c5;
SELECT ALL rt0.c0 FROM rt0 FULL OUTER JOIN rt1 ON CAST((((rt0.c2))==((rt1.c2))) AS TEXT) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 FULL OUTER JOIN rt1 ON CAST((((rt0.c2))=((rt1.c2))) AS TEXT) GROUP BY rt0.c0 HAVING ((((AVG(rt1.c4) IN (rt1.c0, rt1.c2)), json_array_length(rt0.c1, rt1.c5), GROUP_CONCAT(rt1.c1)))>=((TOTAL(rt1.c3), COUNT(*), MIN(rt1.c0)))) UNION ALL SELECT rt0.c0 FROM rt0 FULL OUTER JOIN rt1 ON CAST((((rt0.c2))=((rt1.c2))) AS TEXT) GROUP BY rt0.c0 HAVING (NOT (((((AVG(rt1.c4) IN (rt1.c0, rt1.c2)), json_array_length(rt0.c1, rt1.c5), GROUP_CONCAT(rt1.c1)))>=((TOTAL(rt1.c3), COUNT(*), MIN(rt1.c0)))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 FULL OUTER JOIN rt1 ON CAST((((rt0.c2))==((rt1.c2))) AS TEXT) GROUP BY rt0.c0 HAVING ((((((AVG(rt1.c4) IN (rt1.c0, rt1.c2)), json_array_length(rt0.c1, rt1.c5), GROUP_CONCAT(rt1.c1)))>=((TOTAL(rt1.c3), COUNT(*), MIN(rt1.c0))))) ISNULL);
SELECT ALL rt0.c0 FROM rt0 FULL OUTER JOIN rt1 ON CAST((((rt0.c2))==((rt1.c2))) AS TEXT) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 FULL OUTER JOIN rt1 ON CAST((((rt0.c2))=((rt1.c2))) AS TEXT) GROUP BY rt0.c0 HAVING ((((AVG(rt1.c4) IN (rt1.c0, rt1.c2)), json_array_length(rt0.c1, rt1.c5), GROUP_CONCAT(rt1.c1)))>=((TOTAL(rt1.c3), COUNT(*), MIN(rt1.c0)))) UNION ALL SELECT rt0.c0 FROM rt0 FULL OUTER JOIN rt1 ON CAST((((rt0.c2))=((rt1.c2))) AS TEXT) GROUP BY rt0.c0 HAVING (NOT (((((AVG(rt1.c4) IN (rt1.c0, rt1.c2)), json_array_length(rt0.c1, rt1.c5), GROUP_CONCAT(rt1.c1)))>=((TOTAL(rt1.c3), COUNT(*), MIN(rt1.c0)))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 FULL OUTER JOIN rt1 ON CAST((((rt0.c2))==((rt1.c2))) AS TEXT) GROUP BY rt0.c0 HAVING ((((((AVG(rt1.c4) IN (rt1.c0, rt1.c2)), json_array_length(rt0.c1, rt1.c5), GROUP_CONCAT(rt1.c1)))>=((TOTAL(rt1.c3), COUNT(*), MIN(rt1.c0))))) ISNULL);
SELECT ALL rt0.c0 FROM rt0 FULL OUTER JOIN rt1 ON CAST((((rt0.c2))==((rt1.c2))) AS TEXT) GROUP BY rt0.c0;
SELECT rt1.c0, rt1.c3 FROM rt1 NATURAL JOIN rt0;
SELECT rt1.c0, rt1.c3 FROM rt1 NATURAL JOIN rt0 WHERE (((((CAST(x'' AS TEXT))AND(((rt1.c6)>=(rt0.c2)))))AND(1.053687541E9 COLLATE BINARY))) UNION ALL SELECT ALL rt1.c0, rt1.c3 FROM rt1 NATURAL JOIN rt0 WHERE ((NOT (((((CAST(x'' AS TEXT))AND(((rt1.c6)>=(rt0.c2)))))AND(1.053687541E9 COLLATE BINARY))))) UNION ALL SELECT ALL rt1.c0, rt1.c3 FROM rt1 NATURAL JOIN rt0 WHERE (((((((CAST(x'' AS TEXT))AND(((rt1.c6)>=(rt0.c2)))))AND(1.053687541E9 COLLATE BINARY))) ISNULL));
SELECT rt1.c0, rt1.c3 FROM rt1 NATURAL JOIN rt0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (PRINTF(rt1.c3 COLLATE RTRIM)) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (PRINTF(rt1.c3 COLLATE RTRIM)))) UNION SELECT DISTINCT * FROM rt1 WHERE (((PRINTF(rt1.c3 COLLATE RTRIM)) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (t0.c0 COLLATE NOCASE) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (t0.c0 COLLATE NOCASE))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((t0.c0 COLLATE NOCASE) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT rt1.c5, rt1.c1, rt1.c3, rt1.c0, rt0.c2, rt1.c4, rt0.c0, rt1.c6, t0.c64, rt1.c2, t0.c1, rt0.c1, t0.c0 FROM t0, rt1, rt0 GROUP BY rt1.c5, rt1.c1, rt1.c3, rt1.c0, rt0.c2, rt1.c4, rt0.c0, rt1.c6, t0.c64, rt1.c2, t0.c1, rt0.c1, t0.c0;
SELECT rt1.c5, rt1.c1, rt1.c3, rt1.c0, rt0.c2, rt1.c4, rt0.c0, rt1.c6, t0.c64, rt1.c2, t0.c1, rt0.c1, t0.c0 FROM t0, rt1, rt0 GROUP BY rt1.c5, rt1.c1, rt1.c3, rt1.c0, rt0.c2, rt1.c4, rt0.c0, rt1.c6, t0.c64, rt1.c2, t0.c1, rt0.c1, t0.c0 HAVING TOTAL(COUNT(rt1.c6)) UNION ALL SELECT rt1.c5, rt1.c1, rt1.c3, rt1.c0, rt0.c2, rt1.c4, rt0.c0, rt1.c6, t0.c64, rt1.c2, t0.c1, rt0.c1, t0.c0 FROM t0, rt1, rt0 GROUP BY rt1.c5, rt1.c1, rt1.c3, rt1.c0, rt0.c2, rt1.c4, rt0.c0, rt1.c6, t0.c64, rt1.c2, t0.c1, rt0.c1, t0.c0 HAVING (NOT (TOTAL(COUNT(rt1.c6)))) UNION ALL SELECT rt1.c5, rt1.c1, rt1.c3, rt1.c0, rt0.c2, rt1.c4, rt0.c0, rt1.c6, t0.c64, rt1.c2, t0.c1, rt0.c1, t0.c0 FROM t0, rt1, rt0 GROUP BY rt1.c5, rt1.c1, rt1.c3, rt1.c0, rt0.c2, rt1.c4, rt0.c0, rt1.c6, t0.c64, rt1.c2, t0.c1, rt0.c1, t0.c0 HAVING ((TOTAL(COUNT(rt1.c6))) ISNULL);
SELECT rt1.c6, rt1.c3 FROM rt1;
SELECT rt1.c6, rt1.c3 FROM rt1 WHERE (rt1.c3) UNION ALL SELECT rt1.c6, rt1.c3 FROM rt1 WHERE ((NOT (rt1.c3))) UNION ALL SELECT ALL rt1.c6, rt1.c3 FROM rt1 WHERE (((rt1.c3) ISNULL));
SELECT rt1.c6, rt1.c3 FROM rt1;
SELECT DISTINCT t0.c64, t0.c0, t0.c1 FROM t0;
SELECT DISTINCT t0.c64, t0.c0, t0.c1 FROM t0 WHERE (((json_quote(t0.c0)) IS FALSE)) UNION SELECT DISTINCT t0.c64, t0.c0, t0.c1 FROM t0 WHERE ((NOT (((json_quote(t0.c0)) IS FALSE)))) UNION SELECT DISTINCT t0.c64, t0.c0, t0.c1 FROM t0 WHERE (((((json_quote(t0.c0)) IS FALSE)) ISNULL));
SELECT DISTINCT t0.c64, t0.c0, t0.c1 FROM t0;
SELECT ALL rt1.c0, rt1.c4, rt1.c5, t0.c64, rt1.c3, rt1.c2, rt1.c1, t0.c1 FROM t0 INNER JOIN rt1 ON NULL GROUP BY rt1.c0, rt1.c4, rt1.c5, t0.c64, rt1.c3, rt1.c2, rt1.c1, t0.c1;
SELECT ALL rt1.c0, rt1.c4, rt1.c5, t0.c64, rt1.c3, rt1.c2, rt1.c1, t0.c1 FROM t0 INNER JOIN rt1 ON NULL WHERE (SUBSTR(((((rt1.c0)AND(t0.c0)))AND(rt1.c3)), (~ (0xffffffff855f4803)))) GROUP BY rt1.c0, rt1.c4, rt1.c5, t0.c64, rt1.c3, rt1.c2, rt1.c1, t0.c1 UNION SELECT rt1.c0, rt1.c4, rt1.c5, t0.c64, rt1.c3, rt1.c2, rt1.c1, t0.c1 FROM t0 INNER JOIN rt1 ON NULL WHERE ((NOT (SUBSTR(((((rt1.c0)AND(t0.c0)))AND(rt1.c3)), (~ (0Xffffffff855f4803)))))) GROUP BY rt1.c0, rt1.c4, rt1.c5, t0.c64, rt1.c3, rt1.c2, rt1.c1, t0.c1 UNION SELECT ALL rt1.c0, rt1.c4, rt1.c5, t0.c64, rt1.c3, rt1.c2, rt1.c1, t0.c1 FROM t0 INNER JOIN rt1 ON NULL WHERE (((SUBSTR(((((rt1.c0)AND(t0.c0)))AND(rt1.c3)), (~ (0Xffffffff855f4803)))) ISNULL)) GROUP BY rt1.c0, rt1.c4, rt1.c5, t0.c64, rt1.c3, rt1.c2, rt1.c1, t0.c1;
SELECT ALL rt1.c0, rt1.c4, rt1.c5, t0.c64, rt1.c3, rt1.c2, rt1.c1, t0.c1 FROM t0 INNER JOIN rt1 ON NULL GROUP BY rt1.c0, rt1.c4, rt1.c5, t0.c64, rt1.c3, rt1.c2, rt1.c1, t0.c1;
SELECT rt1.c2, rt1.c4, rt1.c1, rt1.c0, rt1.c6, rt1.c3 FROM rt1 GROUP BY rt1.c2, rt1.c4, rt1.c1, rt1.c0, rt1.c6, rt1.c3;
SELECT ALL rt1.c2, rt1.c4, rt1.c1, rt1.c0, rt1.c6, rt1.c3 FROM rt1 GROUP BY rt1.c2, rt1.c4, rt1.c1, rt1.c0, rt1.c6, rt1.c3 HAVING CAST(TOTAL(GROUP_CONCAT(MAX(rt1.c3))) AS INTEGER) UNION ALL SELECT ALL rt1.c2, rt1.c4, rt1.c1, rt1.c0, rt1.c6, rt1.c3 FROM rt1 GROUP BY rt1.c2, rt1.c4, rt1.c1, rt1.c0, rt1.c6, rt1.c3 HAVING (NOT (CAST(TOTAL(GROUP_CONCAT(MAX(rt1.c3))) AS INTEGER))) UNION ALL SELECT ALL rt1.c2, rt1.c4, rt1.c1, rt1.c0, rt1.c6, rt1.c3 FROM rt1 GROUP BY rt1.c2, rt1.c4, rt1.c1, rt1.c0, rt1.c6, rt1.c3 HAVING ((CAST(TOTAL(GROUP_CONCAT(MAX(rt1.c3))) AS INTEGER)) ISNULL);
SELECT ALL rt0.c0 FROM rt0;
SELECT ALL rt0.c0 FROM rt0 WHERE (((((rt0.c0) NOTNULL))!=(UPPER(rt0.c1)))) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c0) NOTNULL))!=(UPPER(rt0.c1)))))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE (((((((rt0.c0) NOTNULL))<>(UPPER(rt0.c1)))) ISNULL));
SELECT ALL rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE ((((((((((((rt1.c6)) BETWEEN ((rt1.c6)) AND ((rt1.c0))))AND((rt1.c3 IN ()))))OR(((((rt1.c6)AND(rt1.c0)))OR(rt1.c0)))))OR(CAST(rt1.c3 AS INTEGER))))AND(((rt1.c5)<>(rt1.c6))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT ((((((((((((rt1.c6)) BETWEEN ((rt1.c6)) AND ((rt1.c0))))AND((rt1.c3 IN ()))))OR(((((rt1.c6)AND(rt1.c0)))OR(rt1.c0)))))OR(CAST(rt1.c3 AS INTEGER))))AND(((rt1.c5)<>(rt1.c6))))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((((((((((((((rt1.c6)) BETWEEN ((rt1.c6)) AND ((rt1.c0))))AND((rt1.c3 IN ()))))OR(((((rt1.c6)AND(rt1.c0)))OR(rt1.c0)))))OR(CAST(rt1.c3 AS INTEGER))))AND(((rt1.c5)!=(rt1.c6))))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 WHERE (CASE ((rt0.c1)<(rt0.c2))  WHEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END THEN rt0.c1 COLLATE BINARY ELSE CAST(rt0.c0 AS INTEGER) END) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (CASE ((rt0.c1)<(rt0.c2))  WHEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END THEN rt0.c1 COLLATE BINARY ELSE CAST(rt0.c0 AS INTEGER) END))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE (((CASE ((rt0.c1)<(rt0.c2))  WHEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END THEN rt0.c1 COLLATE BINARY ELSE CAST(rt0.c0 AS INTEGER) END) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT t0.c64, rt1.c1, rt1.c0, rt1.c4, rt0.c0, rt0.c1, t0.c0, rt1.c3, rt1.c5, rt0.c2, rt1.c2 FROM t0 RIGHT OUTER JOIN rt1 ON ABS(CASE WHEN rt1.c4 THEN -8.41401832E8 END) INNER JOIN rt0 ON ((((CASE WHEN t0.c0 THEN 1715798436 END)AND('-2057353213')))OR(x'')) GROUP BY t0.c64, rt1.c1, rt1.c0, rt1.c4, rt0.c0, rt0.c1, t0.c0, rt1.c3, rt1.c5, rt0.c2, rt1.c2;
SELECT t0.c64, rt1.c1, rt1.c0, rt1.c4, rt0.c0, rt0.c1, t0.c0, rt1.c3, rt1.c5, rt0.c2, rt1.c2 FROM t0 RIGHT OUTER JOIN rt1 ON ABS(CASE WHEN rt1.c4 THEN -8.41401832E8 END) INNER JOIN rt0 ON ((((CASE WHEN t0.c0 THEN 1715798436 END)AND('-2057353213')))OR(x'')) GROUP BY t0.c64, rt1.c1, rt1.c0, rt1.c4, rt0.c0, rt0.c1, t0.c0, rt1.c3, rt1.c5, rt0.c2, rt1.c2 HAVING (((CAST(0.988883438047989 AS NUMERIC), (((MIN(t0.c0))) BETWEEN ((COUNT(*))) AND ((rt1.c2))), TOTAL(COUNT(t0.c0))))<=((SUM(rt0.c2), MIN(MIN(SUM(MIN(MAX(TOTAL(rt1.c4)))))), MAX(GROUP_CONCAT(rt0.c0))))) UNION ALL SELECT ALL t0.c64, rt1.c1, rt1.c0, rt1.c4, rt0.c0, rt0.c1, t0.c0, rt1.c3, rt1.c5, rt0.c2, rt1.c2 FROM t0 RIGHT OUTER JOIN rt1 ON ABS(CASE WHEN rt1.c4 THEN -8.41401832E8 END) INNER JOIN rt0 ON ((((CASE WHEN t0.c0 THEN 1715798436 END)AND('-2057353213')))OR(x'')) GROUP BY t0.c64, rt1.c1, rt1.c0, rt1.c4, rt0.c0, rt0.c1, t0.c0, rt1.c3, rt1.c5, rt0.c2, rt1.c2 HAVING (NOT ((((CAST(0.988883438047989 AS NUMERIC), (((MIN(t0.c0))) BETWEEN ((COUNT(*))) AND ((rt1.c2))), TOTAL(COUNT(t0.c0))))<=((SUM(rt0.c2), MIN(MIN(SUM(MIN(MAX(TOTAL(rt1.c4)))))), MAX(GROUP_CONCAT(rt0.c0))))))) UNION ALL SELECT t0.c64, rt1.c1, rt1.c0, rt1.c4, rt0.c0, rt0.c1, t0.c0, rt1.c3, rt1.c5, rt0.c2, rt1.c2 FROM t0 RIGHT OUTER JOIN rt1 ON ABS(CASE WHEN rt1.c4 THEN -8.41401832E8 END) INNER JOIN rt0 ON ((((CASE WHEN t0.c0 THEN 1715798436 END)AND('-2057353213')))OR(x'')) GROUP BY t0.c64, rt1.c1, rt1.c0, rt1.c4, rt0.c0, rt0.c1, t0.c0, rt1.c3, rt1.c5, rt0.c2, rt1.c2 HAVING (((((CAST(0.988883438047989 AS NUMERIC), (((MIN(t0.c0))) BETWEEN ((COUNT(*))) AND ((rt1.c2))), TOTAL(COUNT(t0.c0))))<=((SUM(rt0.c2), MIN(MIN(SUM(MIN(MAX(TOTAL(rt1.c4)))))), MAX(GROUP_CONCAT(rt0.c0)))))) ISNULL);
SELECT ALL rt1.c0, rt1.c2, t0.c64, t0.c0 FROM t0, rt1;
SELECT rt1.c0, rt1.c2, t0.c64, t0.c0 FROM t0, rt1 WHERE ((CHANGES() IN ('Rᒸ', CAST(t0.c0 AS REAL)))) UNION ALL SELECT rt1.c0, rt1.c2, t0.c64, t0.c0 FROM t0, rt1 WHERE ((NOT ((CHANGES() IN ('Rᒸ', CAST(t0.c0 AS REAL)))))) UNION ALL SELECT rt1.c0, rt1.c2, t0.c64, t0.c0 FROM t0, rt1 WHERE ((((CHANGES() IN ('Rᒸ', CAST(t0.c0 AS REAL)))) ISNULL));
SELECT ALL rt1.c0, rt1.c2, t0.c64, t0.c0 FROM t0, rt1;
SELECT DISTINCT * FROM rt0, rt1;
SELECT DISTINCT * FROM rt0, rt1 WHERE (((((rt1.c4))>=((rt1.c1))) IN ())) UNION SELECT DISTINCT * FROM rt0, rt1 WHERE ((NOT (((((rt1.c4))>=((rt1.c1))) IN ())))) UNION SELECT DISTINCT * FROM rt0, rt1 WHERE (((((((rt1.c4))>=((rt1.c1))) IN ())) ISNULL));
SELECT DISTINCT * FROM rt0, rt1;
SELECT ALL rt1.c0, t0.c1, rt1.c6, rt0.c0, rt1.c2, t0.c64, rt0.c2, rt1.c4, t0.c0, rt0.c1, rt1.c3, rt1.c1 FROM rt0, t0 CROSS JOIN rt1 ON ((((rt0.c1)<=(rt1.c0)))LIKE(rt0.c1)) GROUP BY rt1.c0, t0.c1, rt1.c6, rt0.c0, rt1.c2, t0.c64, rt0.c2, rt1.c4, t0.c0, rt0.c1, rt1.c3, rt1.c1;
SELECT rt1.c0, t0.c1, rt1.c6, rt0.c0, rt1.c2, t0.c64, rt0.c2, rt1.c4, t0.c0, rt0.c1, rt1.c3, rt1.c1 FROM rt0, t0 CROSS JOIN rt1 ON ((((rt0.c1)<=(rt1.c0)))LIKE(rt0.c1)) WHERE (LTRIM(CAST(rt1.c6 AS REAL), rt1.c5)) GROUP BY rt1.c0, t0.c1, rt1.c6, rt0.c0, rt1.c2, t0.c64, rt0.c2, rt1.c4, t0.c0, rt0.c1, rt1.c3, rt1.c1 UNION SELECT ALL rt1.c0, t0.c1, rt1.c6, rt0.c0, rt1.c2, t0.c64, rt0.c2, rt1.c4, t0.c0, rt0.c1, rt1.c3, rt1.c1 FROM rt0, t0 CROSS JOIN rt1 ON ((((rt0.c1)<=(rt1.c0)))LIKE(rt0.c1)) WHERE ((NOT (LTRIM(CAST(rt1.c6 AS REAL), rt1.c5)))) GROUP BY rt1.c0, t0.c1, rt1.c6, rt0.c0, rt1.c2, t0.c64, rt0.c2, rt1.c4, t0.c0, rt0.c1, rt1.c3, rt1.c1 UNION SELECT ALL rt1.c0, t0.c1, rt1.c6, rt0.c0, rt1.c2, t0.c64, rt0.c2, rt1.c4, t0.c0, rt0.c1, rt1.c3, rt1.c1 FROM rt0, t0 CROSS JOIN rt1 ON ((((rt0.c1)<=(rt1.c0)))LIKE(rt0.c1)) WHERE (((LTRIM(CAST(rt1.c6 AS REAL), rt1.c5)) ISNULL)) GROUP BY rt1.c0, t0.c1, rt1.c6, rt0.c0, rt1.c2, t0.c64, rt0.c2, rt1.c4, t0.c0, rt0.c1, rt1.c3, rt1.c1;
SELECT ALL rt1.c0, t0.c1, rt1.c6, rt0.c0, rt1.c2, t0.c64, rt0.c2, rt1.c4, t0.c0, rt0.c1, rt1.c3, rt1.c1 FROM rt0, t0 CROSS JOIN rt1 ON ((((rt0.c1)<=(rt1.c0)))LIKE(rt0.c1)) GROUP BY rt1.c0, t0.c1, rt1.c6, rt0.c0, rt1.c2, t0.c64, rt0.c2, rt1.c4, t0.c0, rt0.c1, rt1.c3, rt1.c1;
SELECT rt1.c4, rt1.c6, rt1.c0 FROM t0, rt0 NATURAL JOIN rt1 GROUP BY rt1.c4, rt1.c6, rt1.c0;
SELECT rt1.c4, rt1.c6, rt1.c0 FROM t0, rt0 NATURAL JOIN rt1 GROUP BY rt1.c4, rt1.c6, rt1.c0 HAVING CAST(MIN(COUNT(*)) AS TEXT) UNION ALL SELECT ALL rt1.c4, rt1.c6, rt1.c0 FROM t0, rt0 NATURAL JOIN rt1 GROUP BY rt1.c4, rt1.c6, rt1.c0 HAVING (NOT (CAST(MIN(COUNT(*)) AS TEXT))) UNION ALL SELECT rt1.c4, rt1.c6, rt1.c0 FROM t0, rt0 NATURAL JOIN rt1 GROUP BY rt1.c4, rt1.c6, rt1.c0 HAVING ((CAST(MIN(COUNT(*)) AS TEXT)) ISNULL);
SELECT ALL * FROM rt0, rt1 NOT INDEXED NATURAL JOIN t0;
SELECT * FROM rt0, rt1 NATURAL JOIN t0 WHERE ((NOT (CASE t0.c1  WHEN x'' THEN rt0.c1 END))) UNION ALL SELECT ALL * FROM rt0, rt1 NATURAL JOIN t0 WHERE ((NOT ((NOT (CASE t0.c1  WHEN x'' THEN rt0.c1 END))))) UNION ALL SELECT * FROM rt0, rt1 NATURAL JOIN t0 WHERE ((((NOT (CASE t0.c1  WHEN x'' THEN rt0.c1 END))) ISNULL));
SELECT ALL * FROM rt0, rt1 NOT INDEXED NATURAL JOIN t0;
SELECT DISTINCT * FROM rt0, t0;
SELECT DISTINCT * FROM rt0, t0 WHERE (((((t0.c64) ISNULL))&(ABS(DISTINCT rt0.c2)))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((NOT (((((t0.c64) ISNULL))&(ABS(DISTINCT rt0.c2)))))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE (((((((t0.c64) ISNULL))&(ABS(DISTINCT rt0.c2)))) ISNULL));
SELECT DISTINCT * FROM rt0, t0;
SELECT rt1.c6, rt0.c2, rt1.c1, t0.c1, t0.c0, rt1.c5, rt1.c2, t0.c64, rt1.c4, rt0.c1, rt1.c3 FROM rt1, t0, rt0 GROUP BY rt1.c6, rt0.c2, rt1.c1, t0.c1, t0.c0, rt1.c5, rt1.c2, t0.c64, rt1.c4, rt0.c1, rt1.c3;
SELECT rt1.c6, rt0.c2, rt1.c1, t0.c1, t0.c0, rt1.c5, rt1.c2, t0.c64, rt1.c4, rt0.c1, rt1.c3 FROM rt1, t0, rt0 WHERE ((((rt1.c5)||(rt1.c2)) IN ())) GROUP BY rt1.c6, rt0.c2, rt1.c1, t0.c1, t0.c0, rt1.c5, rt1.c2, t0.c64, rt1.c4, rt0.c1, rt1.c3 UNION SELECT ALL rt1.c6, rt0.c2, rt1.c1, t0.c1, t0.c0, rt1.c5, rt1.c2, t0.c64, rt1.c4, rt0.c1, rt1.c3 FROM rt1, t0, rt0 WHERE ((NOT ((((rt1.c5)||(rt1.c2)) IN ())))) GROUP BY rt1.c6, rt0.c2, rt1.c1, t0.c1, t0.c0, rt1.c5, rt1.c2, t0.c64, rt1.c4, rt0.c1, rt1.c3 UNION SELECT ALL rt1.c6, rt0.c2, rt1.c1, t0.c1, t0.c0, rt1.c5, rt1.c2, t0.c64, rt1.c4, rt0.c1, rt1.c3 FROM rt1, t0, rt0 WHERE ((((((rt1.c5)||(rt1.c2)) IN ())) ISNULL)) GROUP BY rt1.c6, rt0.c2, rt1.c1, t0.c1, t0.c0, rt1.c5, rt1.c2, t0.c64, rt1.c4, rt0.c1, rt1.c3;
SELECT rt1.c6, rt0.c2, rt1.c1, t0.c1, t0.c0, rt1.c5, rt1.c2, t0.c64, rt1.c4, rt0.c1, rt1.c3 FROM rt1, t0, rt0 GROUP BY rt1.c6, rt0.c2, rt1.c1, t0.c1, t0.c0, rt1.c5, rt1.c2, t0.c64, rt1.c4, rt0.c1, rt1.c3;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING MIN(COUNT(rt0.c0)) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (MIN(COUNT(rt0.c0)))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((MIN(COUNT(rt0.c0))) ISNULL);
SELECT ALL * FROM rt1 INNER JOIN t0 ON ((rt1.c2 COLLATE NOCASE)>>(CASE WHEN rt1.c2 THEN rt0.c2 END)) CROSS JOIN rt0 ON ((((((((((((((x'5d96def0')>>(rt0.c0)))AND(CASE WHEN rt1.c5 THEN rt1.c4 END)))OR(UNLIKELY(DISTINCT t0.c1))))OR((NOT (rt0.c1)))))AND(rt1.c2 COLLATE BINARY)))OR((NOT (rt0.c0)))))OR(rt1.c1));
SELECT ALL * FROM rt1 INNER JOIN t0 ON ((rt1.c2 COLLATE NOCASE)>>(CASE WHEN rt1.c2 THEN rt0.c2 END)) CROSS JOIN rt0 ON ((((((((((((((x'5d96def0')>>(rt0.c0)))AND(CASE WHEN rt1.c5 THEN rt1.c4 END)))OR(UNLIKELY(DISTINCT t0.c1))))OR((NOT (rt0.c1)))))AND(rt1.c2 COLLATE BINARY)))OR((NOT (rt0.c0)))))OR(rt1.c1)) WHERE ((((rt1.c5)=(rt0.c0)) IN ())) UNION ALL SELECT * FROM rt1 INNER JOIN t0 ON ((rt1.c2 COLLATE NOCASE)>>(CASE WHEN rt1.c2 THEN rt0.c2 END)) CROSS JOIN rt0 ON ((((((((((((((x'5d96def0')>>(rt0.c0)))AND(CASE WHEN rt1.c5 THEN rt1.c4 END)))OR(UNLIKELY(DISTINCT t0.c1))))OR((NOT (rt0.c1)))))AND(rt1.c2 COLLATE BINARY)))OR((NOT (rt0.c0)))))OR(rt1.c1)) WHERE ((NOT ((((rt1.c5)=(rt0.c0)) IN ())))) UNION ALL SELECT ALL * FROM rt1 INNER JOIN t0 ON ((rt1.c2 COLLATE NOCASE)>>(CASE WHEN rt1.c2 THEN rt0.c2 END)) CROSS JOIN rt0 ON ((((((((((((((x'5d96def0')>>(rt0.c0)))AND(CASE WHEN rt1.c5 THEN rt1.c4 END)))OR(UNLIKELY(DISTINCT t0.c1))))OR((NOT (rt0.c1)))))AND(rt1.c2 COLLATE BINARY)))OR((NOT (rt0.c0)))))OR(rt1.c1)) WHERE ((((((rt1.c5)==(rt0.c0)) IN ())) ISNULL));
SELECT ALL * FROM rt1 INNER JOIN t0 ON ((rt1.c2 COLLATE NOCASE)>>(CASE WHEN rt1.c2 THEN rt0.c2 END)) CROSS JOIN rt0 ON ((((((((((((((x'5d96def0')>>(rt0.c0)))AND(CASE WHEN rt1.c5 THEN rt1.c4 END)))OR(UNLIKELY(DISTINCT t0.c1))))OR((NOT (rt0.c1)))))AND(rt1.c2 COLLATE BINARY)))OR((NOT (rt0.c0)))))OR(rt1.c1));
SELECT DISTINCT * FROM rt0, t0, rt1;
SELECT DISTINCT * FROM rt0, t0, rt1 WHERE (((((rt1.c6 COLLATE BINARY)AND((- (rt1.c5)))))AND('-1393311884'))) UNION SELECT DISTINCT * FROM rt0, t0, rt1 WHERE ((NOT (((((rt1.c6 COLLATE BINARY)AND((- (rt1.c5)))))AND('-1393311884'))))) UNION SELECT DISTINCT * FROM rt0, t0, rt1 WHERE (((((((rt1.c6 COLLATE BINARY)AND((- (rt1.c5)))))AND('-1393311884'))) ISNULL));
SELECT DISTINCT * FROM rt0, t0, rt1;
SELECT ALL rt0.c2, rt1.c6, rt1.c3, rt0.c1, rt1.c5, rt1.c4, rt1.c2, rt1.c1, rt0.c0, rt1.c0 FROM rt0, rt1 GROUP BY rt0.c2, rt1.c6, rt1.c3, rt0.c1, rt1.c5, rt1.c4, rt1.c2, rt1.c1, rt0.c0, rt1.c0;
SELECT rt0.c2, rt1.c6, rt1.c3, rt0.c1, rt1.c5, rt1.c4, rt1.c2, rt1.c1, rt0.c0, rt1.c0 FROM rt0, rt1 WHERE (TYPEOF(DISTINCT ((rt1.c6) BETWEEN (rt0.c2) AND (rt1.c4)))) GROUP BY rt0.c2, rt1.c6, rt1.c3, rt0.c1, rt1.c5, rt1.c4, rt1.c2, rt1.c1, rt0.c0, rt1.c0 UNION SELECT ALL rt0.c2, rt1.c6, rt1.c3, rt0.c1, rt1.c5, rt1.c4, rt1.c2, rt1.c1, rt0.c0, rt1.c0 FROM rt0, rt1 WHERE ((NOT (TYPEOF(DISTINCT ((rt1.c6) BETWEEN (rt0.c2) AND (rt1.c4)))))) GROUP BY rt0.c2, rt1.c6, rt1.c3, rt0.c1, rt1.c5, rt1.c4, rt1.c2, rt1.c1, rt0.c0, rt1.c0 UNION SELECT ALL rt0.c2, rt1.c6, rt1.c3, rt0.c1, rt1.c5, rt1.c4, rt1.c2, rt1.c1, rt0.c0, rt1.c0 FROM rt0, rt1 WHERE (((TYPEOF(DISTINCT ((rt1.c6) BETWEEN (rt0.c2) AND (rt1.c4)))) ISNULL)) GROUP BY rt0.c2, rt1.c6, rt1.c3, rt0.c1, rt1.c5, rt1.c4, rt1.c2, rt1.c1, rt0.c0, rt1.c0;
SELECT ALL rt0.c2, rt1.c6, rt1.c3, rt0.c1, rt1.c5, rt1.c4, rt1.c2, rt1.c1, rt0.c0, rt1.c0 FROM rt0, rt1 GROUP BY rt0.c2, rt1.c6, rt1.c3, rt0.c1, rt1.c5, rt1.c4, rt1.c2, rt1.c1, rt0.c0, rt1.c0;
SELECT rt1.c3, rt1.c5, t0.c64, rt1.c1, rt1.c4, rt1.c2 FROM rt0, t0, rt1 GROUP BY rt1.c3, rt1.c5, t0.c64, rt1.c1, rt1.c4, rt1.c2;
SELECT rt1.c3, rt1.c5, t0.c64, rt1.c1, rt1.c4, rt1.c2 FROM rt0, t0, rt1 GROUP BY rt1.c3, rt1.c5, t0.c64, rt1.c1, rt1.c4, rt1.c2 HAVING SUM(GROUP_CONCAT(COUNT(TOTAL(TOTAL(MIN(rt0.c0)))))) UNION ALL SELECT ALL rt1.c3, rt1.c5, t0.c64, rt1.c1, rt1.c4, rt1.c2 FROM rt0, t0, rt1 GROUP BY rt1.c3, rt1.c5, t0.c64, rt1.c1, rt1.c4, rt1.c2 HAVING (NOT (SUM(GROUP_CONCAT(COUNT(TOTAL(TOTAL(MIN(rt0.c0)))))))) UNION ALL SELECT ALL rt1.c3, rt1.c5, t0.c64, rt1.c1, rt1.c4, rt1.c2 FROM rt0, t0, rt1 GROUP BY rt1.c3, rt1.c5, t0.c64, rt1.c1, rt1.c4, rt1.c2 HAVING ((SUM(GROUP_CONCAT(COUNT(TOTAL(TOTAL(MIN(rt0.c0))))))) ISNULL);
SELECT MAX('-647959307' COLLATE BINARY) FROM t0;
SELECT t0.c0, t0.c64, t0.c1 FROM t0;
SELECT ALL t0.c0, t0.c64, t0.c1 FROM t0 WHERE ((((t0.c64) NOT BETWEEN (t0.c1) AND (t0.c64)) IN ((NOT (t0.c1)), CAST(t0.c0 AS TEXT)))) UNION ALL SELECT t0.c0, t0.c64, t0.c1 FROM t0 WHERE ((NOT ((((t0.c64) NOT BETWEEN (t0.c1) AND (t0.c64)) IN ((NOT (t0.c1)), CAST(t0.c0 AS TEXT)))))) UNION ALL SELECT ALL t0.c0, t0.c64, t0.c1 FROM t0 WHERE ((((((t0.c64) NOT BETWEEN (t0.c1) AND (t0.c64)) IN ((NOT (t0.c1)), CAST(t0.c0 AS TEXT)))) ISNULL));
SELECT t0.c0, t0.c64, t0.c1 FROM t0;
SELECT DISTINCT rt1.c4, rt1.c0, rt1.c3, rt1.c2 FROM t0, rt0, rt1;
SELECT DISTINCT rt1.c4, rt1.c0, rt1.c3, rt1.c2 FROM t0, rt0, rt1 WHERE ((JULIANDAY(t0.c0, rt0.c1, t0.c64) IN ())) UNION SELECT DISTINCT rt1.c4, rt1.c0, rt1.c3, rt1.c2 FROM t0, rt0, rt1 WHERE ((NOT ((JULIANDAY(t0.c0, rt0.c1, t0.c64) IN ())))) UNION SELECT DISTINCT rt1.c4, rt1.c0, rt1.c3, rt1.c2 FROM t0, rt0, rt1 WHERE ((((JULIANDAY(t0.c0, rt0.c1, t0.c64) IN ())) ISNULL));
SELECT DISTINCT rt1.c4, rt1.c0, rt1.c3, rt1.c2 FROM t0, rt0, rt1;
SELECT ALL rt0.c2, rt1.c3, rt1.c1, rt0.c0, rt1.c4 FROM rt0, t0, rt1 GROUP BY rt0.c2, rt1.c3, rt1.c1, rt0.c0, rt1.c4;
SELECT ALL rt0.c2, rt1.c3, rt1.c1, rt0.c0, rt1.c4 FROM rt0, t0, rt1 WHERE (((((t0.c1) IS TRUE)) BETWEEN (((rt0.c2) BETWEEN (rt1.c0) AND (t0.c1))) AND (((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c3))))) GROUP BY rt0.c2, rt1.c3, rt1.c1, rt0.c0, rt1.c4 UNION SELECT ALL rt0.c2, rt1.c3, rt1.c1, rt0.c0, rt1.c4 FROM rt0, t0, rt1 WHERE ((NOT (((((t0.c1) IS TRUE)) BETWEEN (((rt0.c2) BETWEEN (rt1.c0) AND (t0.c1))) AND (((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c3))))))) GROUP BY rt0.c2, rt1.c3, rt1.c1, rt0.c0, rt1.c4 UNION SELECT ALL rt0.c2, rt1.c3, rt1.c1, rt0.c0, rt1.c4 FROM rt0, t0, rt1 WHERE (((((((t0.c1) IS TRUE)) BETWEEN (((rt0.c2) BETWEEN (rt1.c0) AND (t0.c1))) AND (((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c3))))) ISNULL)) GROUP BY rt0.c2, rt1.c3, rt1.c1, rt0.c0, rt1.c4;
SELECT ALL rt0.c2, rt1.c3, rt1.c1, rt0.c0, rt1.c4 FROM rt0, t0, rt1 GROUP BY rt0.c2, rt1.c3, rt1.c1, rt0.c0, rt1.c4;
SELECT rt0.c2, rt0.c1, t0.c1, rt1.c6, t0.c0, rt1.c0, rt1.c3, rt1.c5, rt1.c1, t0.c64 FROM t0, rt1, rt0 GROUP BY rt0.c2, rt0.c1, t0.c1, rt1.c6, t0.c0, rt1.c0, rt1.c3, rt1.c5, rt1.c1, t0.c64;
SELECT ALL rt0.c2, rt0.c1, t0.c1, rt1.c6, t0.c0, rt1.c0, rt1.c3, rt1.c5, rt1.c1, t0.c64 FROM t0, rt1, rt0 GROUP BY rt0.c2, rt0.c1, t0.c1, rt1.c6, t0.c0, rt1.c0, rt1.c3, rt1.c5, rt1.c1, t0.c64 HAVING MIN(CAST(MAX(rt1.c5) AS TEXT)) UNION ALL SELECT rt0.c2, rt0.c1, t0.c1, rt1.c6, t0.c0, rt1.c0, rt1.c3, rt1.c5, rt1.c1, t0.c64 FROM t0, rt1, rt0 GROUP BY rt0.c2, rt0.c1, t0.c1, rt1.c6, t0.c0, rt1.c0, rt1.c3, rt1.c5, rt1.c1, t0.c64 HAVING (NOT (MIN(CAST(MAX(rt1.c5) AS TEXT)))) UNION ALL SELECT ALL rt0.c2, rt0.c1, t0.c1, rt1.c6, t0.c0, rt1.c0, rt1.c3, rt1.c5, rt1.c1, t0.c64 FROM t0, rt1, rt0 GROUP BY rt0.c2, rt0.c1, t0.c1, rt1.c6, t0.c0, rt1.c0, rt1.c3, rt1.c5, rt1.c1, t0.c64 HAVING ((MIN(CAST(MAX(rt1.c5) AS TEXT))) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt1.c6 FROM rt1 LEFT OUTER JOIN rt0 ON -1913609740;
SELECT ALL rt0.c1, rt0.c0, rt1.c6 FROM rt1 LEFT OUTER JOIN rt0 ON -1913609740 WHERE (0.5172655027921076) UNION ALL SELECT rt0.c1, rt0.c0, rt1.c6 FROM rt1 LEFT OUTER JOIN rt0 ON -1913609740 WHERE ((NOT (0.5172655027921076))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt1.c6 FROM rt1 LEFT OUTER JOIN rt0 ON -1913609740 WHERE (((0.5172655027921076) ISNULL));
SELECT ALL rt0.c1, rt0.c0, rt1.c6 FROM rt1 LEFT OUTER JOIN rt0 ON -1913609740;
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE (CAST((rt0.c0 IN ()) AS INTEGER)) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT (CAST((rt0.c0 IN ()) AS INTEGER)))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE (((CAST((rt0.c0 IN ()) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT ALL rt1.c4, rt1.c0, t0.c1, rt1.c6, rt0.c0, rt1.c3, rt1.c2 FROM rt0, rt1, t0 GROUP BY rt1.c4, rt1.c0, t0.c1, rt1.c6, rt0.c0, rt1.c3, rt1.c2;
SELECT ALL rt1.c4, rt1.c0, t0.c1, rt1.c6, rt0.c0, rt1.c3, rt1.c2 FROM rt0, rt1, t0 WHERE (CAST(((rt1.c0) ISNULL) AS NUMERIC)) GROUP BY rt1.c4, rt1.c0, t0.c1, rt1.c6, rt0.c0, rt1.c3, rt1.c2 UNION SELECT rt1.c4, rt1.c0, t0.c1, rt1.c6, rt0.c0, rt1.c3, rt1.c2 FROM rt0, rt1, t0 WHERE ((NOT (CAST(((rt1.c0) ISNULL) AS NUMERIC)))) GROUP BY rt1.c4, rt1.c0, t0.c1, rt1.c6, rt0.c0, rt1.c3, rt1.c2 UNION SELECT ALL rt1.c4, rt1.c0, t0.c1, rt1.c6, rt0.c0, rt1.c3, rt1.c2 FROM rt0, rt1, t0 WHERE (((CAST(((rt1.c0) ISNULL) AS NUMERIC)) ISNULL)) GROUP BY rt1.c4, rt1.c0, t0.c1, rt1.c6, rt0.c0, rt1.c3, rt1.c2;
SELECT ALL rt1.c4, rt1.c0, t0.c1, rt1.c6, rt0.c0, rt1.c3, rt1.c2 FROM rt0, rt1, t0 GROUP BY rt1.c4, rt1.c0, t0.c1, rt1.c6, rt0.c0, rt1.c3, rt1.c2;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (SQLITE_SOURCE_ID() IN ()) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ((SQLITE_SOURCE_ID() IN ()))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((SQLITE_SOURCE_ID() IN ())) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (SQLITE_SOURCE_ID() IN ()) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ((SQLITE_SOURCE_ID() IN ()))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((SQLITE_SOURCE_ID() IN ())) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT * FROM rt0 FULL OUTER JOIN rt1 ON (CASE rt1.c0  WHEN rt1.c4 THEN rt1.c1 END IN ()) FULL OUTER JOIN t0 ON json_insert(((NULL)>>(rt0.c2)), ((rt1.c2) NOT NULL), ((rt1.c0)>=(rt0.c2)));
SELECT * FROM rt0 FULL OUTER JOIN rt1 ON (CASE rt1.c0  WHEN rt1.c4 THEN rt1.c1 END IN ()) FULL OUTER JOIN t0 ON json_insert(((NULL)>>(rt0.c2)), ((rt1.c2) NOT NULL), ((rt1.c0)>=(rt0.c2))) WHERE (CAST(rt1.c5 AS REAL) COLLATE RTRIM) UNION ALL SELECT * FROM rt0 FULL OUTER JOIN rt1 ON (CASE rt1.c0  WHEN rt1.c4 THEN rt1.c1 END IN ()) FULL OUTER JOIN t0 ON json_insert(((NULL)>>(rt0.c2)), ((rt1.c2) NOT NULL), ((rt1.c0)>=(rt0.c2))) WHERE ((NOT (CAST(rt1.c5 AS REAL) COLLATE RTRIM))) UNION ALL SELECT * FROM rt0 FULL OUTER JOIN rt1 ON (CASE rt1.c0  WHEN rt1.c4 THEN rt1.c1 END IN ()) FULL OUTER JOIN t0 ON json_insert(((NULL)>>(rt0.c2)), ((rt1.c2) NOT NULL), ((rt1.c0)>=(rt0.c2))) WHERE (((CAST(rt1.c5 AS REAL) COLLATE RTRIM) ISNULL));
SELECT * FROM rt0 FULL OUTER JOIN rt1 ON (CASE rt1.c0  WHEN rt1.c4 THEN rt1.c1 END IN ()) FULL OUTER JOIN t0 ON json_insert(((NULL)>>(rt0.c2)), ((rt1.c2) NOT NULL), ((rt1.c0)>=(rt0.c2)));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE (LIKELIHOOD(((((rt0.c2)OR(NULL)))OR(rt0.c0)), 0.6725343714136526)) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT (LIKELIHOOD(((((rt0.c2)OR(NULL)))OR(rt0.c0)), 0.6725343714136526)))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((LIKELIHOOD(((((rt0.c2)OR(NULL)))OR(rt0.c0)), 0.6725343714136526)) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (CASE WHEN CAST(rt0.c0 AS BLOB) THEN ((rt0.c2)-(rt0.c0)) END) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (CASE WHEN CAST(rt0.c0 AS BLOB) THEN ((rt0.c2)-(rt0.c0)) END))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (((CASE WHEN CAST(rt0.c0 AS BLOB) THEN ((rt0.c2)-(rt0.c0)) END) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt1.c3, rt1.c1, rt1.c6 FROM rt1 GROUP BY rt1.c3, rt1.c1, rt1.c6;
SELECT rt1.c3, rt1.c1, rt1.c6 FROM rt1 GROUP BY rt1.c3, rt1.c1, rt1.c6 HAVING (((((TOTAL(TOTAL(rt1.c0)) IN ()))AND(TOTAL(MIN(rt1.c1)))))OR((((rt1.c2)) BETWEEN ((MAX(rt1.c6))) AND ((rt1.c1))))) UNION ALL SELECT ALL rt1.c3, rt1.c1, rt1.c6 FROM rt1 GROUP BY rt1.c3, rt1.c1, rt1.c6 HAVING (NOT ((((((TOTAL(TOTAL(rt1.c0)) IN ()))AND(TOTAL(MIN(rt1.c1)))))OR((((rt1.c2)) BETWEEN ((MAX(rt1.c6))) AND ((rt1.c1))))))) UNION ALL SELECT rt1.c3, rt1.c1, rt1.c6 FROM rt1 GROUP BY rt1.c3, rt1.c1, rt1.c6 HAVING (((((((TOTAL(TOTAL(rt1.c0)) IN ()))AND(TOTAL(MIN(rt1.c1)))))OR((((rt1.c2)) BETWEEN ((MAX(rt1.c6))) AND ((rt1.c1)))))) ISNULL);
SELECT ALL rt1.c3, rt1.c1, rt1.c6 FROM rt1 GROUP BY rt1.c3, rt1.c1, rt1.c6;
SELECT rt1.c3, rt1.c1, rt1.c6 FROM rt1 GROUP BY rt1.c3, rt1.c1, rt1.c6 HAVING (((((TOTAL(TOTAL(rt1.c0)) IN ()))AND(TOTAL(MIN(rt1.c1)))))OR((((rt1.c2)) BETWEEN ((MAX(rt1.c6))) AND ((rt1.c1))))) UNION ALL SELECT ALL rt1.c3, rt1.c1, rt1.c6 FROM rt1 GROUP BY rt1.c3, rt1.c1, rt1.c6 HAVING (NOT ((((((TOTAL(TOTAL(rt1.c0)) IN ()))AND(TOTAL(MIN(rt1.c1)))))OR((((rt1.c2)) BETWEEN ((MAX(rt1.c6))) AND ((rt1.c1))))))) UNION ALL SELECT rt1.c3, rt1.c1, rt1.c6 FROM rt1 GROUP BY rt1.c3, rt1.c1, rt1.c6 HAVING (((((((TOTAL(TOTAL(rt1.c0)) IN ()))AND(TOTAL(MIN(rt1.c1)))))OR((((rt1.c2)) BETWEEN ((MAX(rt1.c6))) AND ((rt1.c1)))))) ISNULL);
SELECT ALL rt1.c3, rt1.c1, rt1.c6 FROM rt1 GROUP BY rt1.c3, rt1.c1, rt1.c6;
SELECT rt0.c0, rt0.c2, rt1.c1, rt0.c1, rt1.c0, rt1.c2 FROM rt1, rt0;
SELECT ALL rt0.c0, rt0.c2, rt1.c1, rt0.c1, rt1.c0, rt1.c2 FROM rt1, rt0 WHERE (((CASE x''  WHEN rt1.c2 THEN rt0.c2 END)<=((rt0.c1 IN ())))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt1.c1, rt0.c1, rt1.c0, rt1.c2 FROM rt1, rt0 WHERE ((NOT (((CASE x''  WHEN rt1.c2 THEN rt0.c2 END)<=((rt0.c1 IN ())))))) UNION ALL SELECT rt0.c0, rt0.c2, rt1.c1, rt0.c1, rt1.c0, rt1.c2 FROM rt1, rt0 WHERE (((((CASE x''  WHEN rt1.c2 THEN rt0.c2 END)<=((rt0.c1 IN ())))) ISNULL));
SELECT rt0.c0, rt0.c2, rt1.c1, rt0.c1, rt1.c0, rt1.c2 FROM rt1, rt0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE ((((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c5))) COLLATE NOCASE) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT ((((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c5))) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM rt1 WHERE ((((((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c5))) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0;
SELECT t0.c1, t0.c0 FROM t0 WHERE (((((x'') NOT BETWEEN (t0.c0) AND (t0.c64)))|(((((t0.c1)OR(t0.c0)))AND(t0.c0))))) GROUP BY t0.c1, t0.c0 UNION SELECT t0.c1, t0.c0 FROM t0 WHERE ((NOT (((((x'') NOT BETWEEN (t0.c0) AND (t0.c64)))|(((((t0.c1)OR(t0.c0)))AND(t0.c0))))))) GROUP BY t0.c1, t0.c0 UNION SELECT ALL t0.c1, t0.c0 FROM t0 WHERE (((((((x'') NOT BETWEEN (t0.c0) AND (t0.c64)))|(((((t0.c1)OR(t0.c0)))AND(t0.c0))))) ISNULL)) GROUP BY t0.c1, t0.c0;
SELECT t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING TOTAL((((rt0.c1, MAX(rt0.c0), rt0.c2)) NOT BETWEEN ((TOTAL(COUNT(*)), MAX(TOTAL(AVG(rt0.c0))), COUNT(COUNT(MIN(rt0.c2))))) AND ((rt0.c1, GROUP_CONCAT(rt0.c0), 0xffffffffe607b64f)))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (TOTAL((((rt0.c1, MAX(rt0.c0), rt0.c2)) NOT BETWEEN ((TOTAL(COUNT(*)), MAX(TOTAL(AVG(rt0.c0))), COUNT(COUNT(MIN(rt0.c2))))) AND ((rt0.c1, GROUP_CONCAT(rt0.c0), 0xffffffffe607b64f)))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((TOTAL((((rt0.c1, MAX(rt0.c0), rt0.c2)) NOT BETWEEN ((TOTAL(COUNT(*)), MAX(TOTAL(AVG(rt0.c0))), COUNT(COUNT(MIN(rt0.c2))))) AND ((rt0.c1, GROUP_CONCAT(rt0.c0), 0Xffffffffe607b64f))))) ISNULL);
SELECT ALL t0.c0, t0.c64 FROM t0;
SELECT ALL t0.c0, t0.c64 FROM t0 WHERE (-1.160933783E9) UNION ALL SELECT ALL t0.c0, t0.c64 FROM t0 WHERE ((NOT (-1.160933783E9))) UNION ALL SELECT ALL t0.c0, t0.c64 FROM t0 WHERE (((-1.160933783E9) ISNULL));
SELECT ALL t0.c0, t0.c64 FROM t0;
SELECT DISTINCT * FROM t0 NOT INDEXED, rt1, rt0;
SELECT DISTINCT * FROM t0, rt1, rt0 WHERE (rt1.c0) UNION SELECT DISTINCT * FROM t0, rt1, rt0 WHERE ((NOT (rt1.c0))) UNION SELECT DISTINCT * FROM t0, rt1, rt0 WHERE (((rt1.c0) ISNULL));
SELECT DISTINCT * FROM t0 NOT INDEXED, rt1, rt0;
SELECT rt1.c5, rt1.c6 FROM t0 INNER JOIN rt1 ON ((((rt1.c3)||(rt1.c4)))-((NOT (t0.c1)))) INNER JOIN rt0 ON (((((rt1.c4, t0.c1, t0.c1, t0.c1, rt1.c0))>=((x'099c', rt1.c6, rt0.c2, rt1.c5, t0.c64))))<<(((t0.c1)-(t0.c1)))) GROUP BY rt1.c5, rt1.c6;
SELECT ALL rt1.c5, rt1.c6 FROM t0 INNER JOIN rt1 ON ((((rt1.c3)||(rt1.c4)))-((NOT (t0.c1)))) INNER JOIN rt0 ON (((((rt1.c4, t0.c1, t0.c1, t0.c1, rt1.c0))>=((x'099c', rt1.c6, rt0.c2, rt1.c5, t0.c64))))<<(((t0.c1)-(t0.c1)))) WHERE ((((t0.c64, '-1393311884', t0.c1)) BETWEEN ((rt1.c6, ((((((((rt1.c4)AND(rt1.c1)))OR(rt0.c2)))OR(rt1.c0)))AND(rt1.c5)), x'217f' COLLATE BINARY)) AND ((ABS(rt1.c1), (((t0.c64))>((rt0.c0))), LIKELY(DISTINCT rt1.c1))))) GROUP BY rt1.c5, rt1.c6 UNION SELECT rt1.c5, rt1.c6 FROM t0 INNER JOIN rt1 ON ((((rt1.c3)||(rt1.c4)))-((NOT (t0.c1)))) INNER JOIN rt0 ON (((((rt1.c4, t0.c1, t0.c1, t0.c1, rt1.c0))>=((x'099c', rt1.c6, rt0.c2, rt1.c5, t0.c64))))<<(((t0.c1)-(t0.c1)))) WHERE ((NOT ((((t0.c64, '-1393311884', t0.c1)) BETWEEN ((rt1.c6, ((((((((rt1.c4)AND(rt1.c1)))OR(rt0.c2)))OR(rt1.c0)))AND(rt1.c5)), x'217f' COLLATE BINARY)) AND ((ABS(rt1.c1), (((t0.c64))>((rt0.c0))), LIKELY(DISTINCT rt1.c1))))))) GROUP BY rt1.c5, rt1.c6 UNION SELECT rt1.c5, rt1.c6 FROM t0 INNER JOIN rt1 ON ((((rt1.c3)||(rt1.c4)))-((NOT (t0.c1)))) INNER JOIN rt0 ON (((((rt1.c4, t0.c1, t0.c1, t0.c1, rt1.c0))>=((x'099c', rt1.c6, rt0.c2, rt1.c5, t0.c64))))<<(((t0.c1)-(t0.c1)))) WHERE ((((((t0.c64, '-1393311884', t0.c1)) BETWEEN ((rt1.c6, ((((((((rt1.c4)AND(rt1.c1)))OR(rt0.c2)))OR(rt1.c0)))AND(rt1.c5)), x'217f' COLLATE BINARY)) AND ((ABS(rt1.c1), (((t0.c64))>((rt0.c0))), LIKELY(DISTINCT rt1.c1))))) ISNULL)) GROUP BY rt1.c5, rt1.c6;
SELECT rt1.c5, rt1.c6 FROM t0 INNER JOIN rt1 ON ((((rt1.c3)||(rt1.c4)))-((NOT (t0.c1)))) INNER JOIN rt0 ON (((((rt1.c4, t0.c1, t0.c1, t0.c1, rt1.c0))>=((x'099c', rt1.c6, rt0.c2, rt1.c5, t0.c64))))<<(((t0.c1)-(t0.c1)))) GROUP BY rt1.c5, rt1.c6;
SELECT ALL rt1.c2 FROM rt1, rt0, t0 GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1, rt0, t0 GROUP BY rt1.c2 HAVING rt0.c1 UNION ALL SELECT rt1.c2 FROM rt1, rt0, t0 GROUP BY rt1.c2 HAVING (NOT (rt0.c1)) UNION ALL SELECT rt1.c2 FROM rt1, rt0, t0 GROUP BY rt1.c2 HAVING ((rt0.c1) ISNULL);
SELECT ALL rt1.c2 FROM rt1, rt0, t0 GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1, rt0, t0 GROUP BY rt1.c2 HAVING rt0.c1 UNION ALL SELECT rt1.c2 FROM rt1, rt0, t0 GROUP BY rt1.c2 HAVING (NOT (rt0.c1)) UNION ALL SELECT rt1.c2 FROM rt1, rt0, t0 GROUP BY rt1.c2 HAVING ((rt0.c1) ISNULL);
SELECT ALL rt1.c2 FROM rt1, rt0, t0 GROUP BY rt1.c2;
SELECT * FROM rt1;
SELECT ALL * FROM rt1 WHERE ((rt1.c3 IN ()) COLLATE RTRIM) UNION ALL SELECT * FROM rt1 WHERE ((NOT ((rt1.c3 IN ()) COLLATE RTRIM))) UNION ALL SELECT * FROM rt1 WHERE ((((rt1.c3 IN ()) COLLATE RTRIM) ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT * FROM t0, rt1;
SELECT DISTINCT * FROM t0, rt1 WHERE (((CASE rt1.c5  WHEN t0.c1 THEN rt1.c2 ELSE rt1.c0 END) NOTNULL)) UNION SELECT DISTINCT * FROM t0, rt1 WHERE ((NOT (((CASE rt1.c5  WHEN t0.c1 THEN rt1.c2 ELSE rt1.c0 END) NOTNULL)))) UNION SELECT DISTINCT * FROM t0, rt1 WHERE (((((CASE rt1.c5  WHEN t0.c1 THEN rt1.c2 ELSE rt1.c0 END) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM t0, rt1;
SELECT ALL rt0.c1, rt1.c2 FROM rt0, rt1 GROUP BY rt0.c1, rt1.c2;
SELECT rt0.c1, rt1.c2 FROM rt0, rt1 WHERE ((((((((rt1.c6)AND(rt1.c6)))AND(rt1.c3)), CAST(rt1.c0 AS NUMERIC), ((rt1.c3) NOT BETWEEN (rt0.c2) AND (rt1.c6))))<=(((NOT (rt1.c1)), CASE rt1.c2  WHEN rt1.c6 THEN rt1.c0 END, ((((rt1.c1)OR(rt0.c1)))AND(rt1.c5)))))) GROUP BY rt0.c1, rt1.c2 UNION SELECT rt0.c1, rt1.c2 FROM rt0, rt1 WHERE ((NOT ((((((((rt1.c6)AND(rt1.c6)))AND(rt1.c3)), CAST(rt1.c0 AS NUMERIC), ((rt1.c3) NOT BETWEEN (rt0.c2) AND (rt1.c6))))<=(((NOT (rt1.c1)), CASE rt1.c2  WHEN rt1.c6 THEN rt1.c0 END, ((((rt1.c1)OR(rt0.c1)))AND(rt1.c5)))))))) GROUP BY rt0.c1, rt1.c2 UNION SELECT ALL rt0.c1, rt1.c2 FROM rt0, rt1 WHERE ((((((((((rt1.c6)AND(rt1.c6)))AND(rt1.c3)), CAST(rt1.c0 AS NUMERIC), ((rt1.c3) NOT BETWEEN (rt0.c2) AND (rt1.c6))))<=(((NOT (rt1.c1)), CASE rt1.c2  WHEN rt1.c6 THEN rt1.c0 END, ((((rt1.c1)OR(rt0.c1)))AND(rt1.c5)))))) ISNULL)) GROUP BY rt0.c1, rt1.c2;
SELECT ALL rt0.c1, rt1.c2 FROM rt0, rt1 GROUP BY rt0.c1, rt1.c2;
SELECT t0.c1, rt0.c1, rt1.c1, rt0.c0, rt1.c5, rt0.c2, rt1.c0, rt1.c6, t0.c64, rt1.c3, rt1.c2 FROM t0, rt1, rt0 GROUP BY t0.c1, rt0.c1, rt1.c1, rt0.c0, rt1.c5, rt0.c2, rt1.c0, rt1.c6, t0.c64, rt1.c3, rt1.c2;
SELECT ALL t0.c1, rt0.c1, rt1.c1, rt0.c0, rt1.c5, rt0.c2, rt1.c0, rt1.c6, t0.c64, rt1.c3, rt1.c2 FROM t0, rt1, rt0 GROUP BY t0.c1, rt0.c1, rt1.c1, rt0.c0, rt1.c5, rt0.c2, rt1.c0, rt1.c6, t0.c64, rt1.c3, rt1.c2 HAVING COUNT(AVG(t0.c64)) UNION ALL SELECT ALL t0.c1, rt0.c1, rt1.c1, rt0.c0, rt1.c5, rt0.c2, rt1.c0, rt1.c6, t0.c64, rt1.c3, rt1.c2 FROM t0, rt1, rt0 GROUP BY t0.c1, rt0.c1, rt1.c1, rt0.c0, rt1.c5, rt0.c2, rt1.c0, rt1.c6, t0.c64, rt1.c3, rt1.c2 HAVING (NOT (COUNT(AVG(t0.c64)))) UNION ALL SELECT ALL t0.c1, rt0.c1, rt1.c1, rt0.c0, rt1.c5, rt0.c2, rt1.c0, rt1.c6, t0.c64, rt1.c3, rt1.c2 FROM t0, rt1, rt0 GROUP BY t0.c1, rt0.c1, rt1.c1, rt0.c0, rt1.c5, rt0.c2, rt1.c0, rt1.c6, t0.c64, rt1.c3, rt1.c2 HAVING ((COUNT(AVG(t0.c64))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CASE WHEN HEX(rt0.c1) THEN ((rt0.c2)-(rt0.c0)) END) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CASE WHEN HEX(rt0.c1) THEN ((rt0.c2)-(rt0.c0)) END))) UNION ALL SELECT * FROM rt0 WHERE (((CASE WHEN HEX(rt0.c1) THEN ((rt0.c2)-(rt0.c0)) END) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT t0.c64, rt1.c4, rt1.c1, t0.c1 FROM t0, rt0, rt1;
SELECT DISTINCT t0.c64, rt1.c4, rt1.c1, t0.c1 FROM t0, rt0, rt1 WHERE ((((rt0.c0 IN ())) IS FALSE)) UNION SELECT DISTINCT t0.c64, rt1.c4, rt1.c1, t0.c1 FROM t0, rt0, rt1 WHERE ((NOT ((((rt0.c0 IN ())) IS FALSE)))) UNION SELECT DISTINCT t0.c64, rt1.c4, rt1.c1, t0.c1 FROM t0, rt0, rt1 WHERE ((((((rt0.c0 IN ())) IS FALSE)) ISNULL));
SELECT DISTINCT t0.c64, rt1.c4, rt1.c1, t0.c1 FROM t0, rt0, rt1;
SELECT rt1.c5, t0.c64, rt1.c6, rt1.c1, rt1.c2, t0.c0, rt1.c0, rt1.c3 FROM rt1, t0 GROUP BY rt1.c5, t0.c64, rt1.c6, rt1.c1, rt1.c2, t0.c0, rt1.c0, rt1.c3;
SELECT ALL rt1.c5, t0.c64, rt1.c6, rt1.c1, rt1.c2, t0.c0, rt1.c0, rt1.c3 FROM rt1, t0 WHERE ((('XgcCyI!Am') IS FALSE)) GROUP BY rt1.c5, t0.c64, rt1.c6, rt1.c1, rt1.c2, t0.c0, rt1.c0, rt1.c3 UNION SELECT ALL rt1.c5, t0.c64, rt1.c6, rt1.c1, rt1.c2, t0.c0, rt1.c0, rt1.c3 FROM rt1, t0 WHERE ((NOT ((('XgcCyI!Am') IS FALSE)))) GROUP BY rt1.c5, t0.c64, rt1.c6, rt1.c1, rt1.c2, t0.c0, rt1.c0, rt1.c3 UNION SELECT rt1.c5, t0.c64, rt1.c6, rt1.c1, rt1.c2, t0.c0, rt1.c0, rt1.c3 FROM rt1, t0 WHERE ((((('XgcCyI!Am') IS FALSE)) ISNULL)) GROUP BY rt1.c5, t0.c64, rt1.c6, rt1.c1, rt1.c2, t0.c0, rt1.c0, rt1.c3;
SELECT rt1.c5, t0.c64, rt1.c6, rt1.c1, rt1.c2, t0.c0, rt1.c0, rt1.c3 FROM rt1, t0 GROUP BY rt1.c5, t0.c64, rt1.c6, rt1.c1, rt1.c2, t0.c0, rt1.c0, rt1.c3;
SELECT rt1.c3, rt1.c6, rt1.c2, rt1.c4, rt1.c5, rt1.c0 FROM rt1 GROUP BY rt1.c3, rt1.c6, rt1.c2, rt1.c4, rt1.c5, rt1.c0;
SELECT rt1.c3, rt1.c6, rt1.c2, rt1.c4, rt1.c5, rt1.c0 FROM rt1 GROUP BY rt1.c3, rt1.c6, rt1.c2, rt1.c4, rt1.c5, rt1.c0 HAVING GROUP_CONCAT(((TOTAL(MAX(GROUP_CONCAT(rt1.c2)))) NOT BETWEEN (COUNT(*)) AND (rt1.c2))) UNION ALL SELECT ALL rt1.c3, rt1.c6, rt1.c2, rt1.c4, rt1.c5, rt1.c0 FROM rt1 GROUP BY rt1.c3, rt1.c6, rt1.c2, rt1.c4, rt1.c5, rt1.c0 HAVING (NOT (GROUP_CONCAT(((TOTAL(MAX(GROUP_CONCAT(rt1.c2)))) NOT BETWEEN (COUNT(*)) AND (rt1.c2))))) UNION ALL SELECT rt1.c3, rt1.c6, rt1.c2, rt1.c4, rt1.c5, rt1.c0 FROM rt1 GROUP BY rt1.c3, rt1.c6, rt1.c2, rt1.c4, rt1.c5, rt1.c0 HAVING ((GROUP_CONCAT(((TOTAL(MAX(GROUP_CONCAT(rt1.c2)))) NOT BETWEEN (COUNT(*)) AND (rt1.c2)))) ISNULL);
SELECT ALL * FROM t0 NATURAL JOIN rt1;
SELECT ALL * FROM t0 NATURAL JOIN rt1 WHERE ((((((rt1.c0) IS FALSE)))==((((rt1.c1) IS TRUE))))) UNION ALL SELECT * FROM t0 NATURAL JOIN rt1 WHERE ((NOT ((((((rt1.c0) IS FALSE)))=((((rt1.c1) IS TRUE))))))) UNION ALL SELECT * FROM t0 NATURAL JOIN rt1 WHERE ((((((((rt1.c0) IS FALSE)))==((((rt1.c1) IS TRUE))))) ISNULL));
SELECT ALL * FROM t0 NATURAL JOIN rt1;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (((CAST(rt1.c4 AS NUMERIC)) NOT NULL)) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (((CAST(rt1.c4 AS NUMERIC)) NOT NULL)))) UNION SELECT DISTINCT * FROM rt1 WHERE (((((CAST(rt1.c4 AS NUMERIC)) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL rt1.c5, rt1.c4 FROM rt1 GROUP BY rt1.c5, rt1.c4;
SELECT rt1.c5, rt1.c4 FROM rt1 WHERE (((((((((((rt1.c2)OR(rt1.c0)))OR(rt1.c1)))AND(rt1.c4)))OR(rt1.c2)))IS NOT(json(rt1.c1)))) GROUP BY rt1.c5, rt1.c4 UNION SELECT rt1.c5, rt1.c4 FROM rt1 WHERE ((NOT (((((((((((rt1.c2)OR(rt1.c0)))OR(rt1.c1)))AND(rt1.c4)))OR(rt1.c2)))IS NOT(json(rt1.c1)))))) GROUP BY rt1.c5, rt1.c4 UNION SELECT rt1.c5, rt1.c4 FROM rt1 WHERE (((((((((((((rt1.c2)OR(rt1.c0)))OR(rt1.c1)))AND(rt1.c4)))OR(rt1.c2)))IS NOT(json(rt1.c1)))) ISNULL)) GROUP BY rt1.c5, rt1.c4;
SELECT ALL rt1.c5, rt1.c4 FROM rt1 GROUP BY rt1.c5, rt1.c4;
SELECT rt1.c4, rt1.c5, rt0.c1, t0.c64, rt0.c0, rt1.c0 FROM rt1, rt0 RIGHT OUTER JOIN t0 ON (((x'813f')) NOT BETWEEN ((UPPER(DISTINCT rt1.c2))) AND (((((rt1.c0))<>((rt1.c0)))))) GROUP BY rt1.c4, rt1.c5, rt0.c1, t0.c64, rt0.c0, rt1.c0;
SELECT rt1.c4, rt1.c5, rt0.c1, t0.c64, rt0.c0, rt1.c0 FROM rt1, rt0 RIGHT OUTER JOIN t0 ON (((x'813f')) NOT BETWEEN ((UPPER(DISTINCT rt1.c2))) AND (((((rt1.c0))<>((rt1.c0)))))) GROUP BY rt1.c4, rt1.c5, rt0.c1, t0.c64, rt0.c0, rt1.c0 HAVING (((((rt1.c4)AND(MAX(MIN(rt1.c0)))))AND(rt0.c2)) IN ()) UNION ALL SELECT rt1.c4, rt1.c5, rt0.c1, t0.c64, rt0.c0, rt1.c0 FROM rt1, rt0 RIGHT OUTER JOIN t0 ON (((x'813f')) NOT BETWEEN ((UPPER(DISTINCT rt1.c2))) AND (((((rt1.c0))!=((rt1.c0)))))) GROUP BY rt1.c4, rt1.c5, rt0.c1, t0.c64, rt0.c0, rt1.c0 HAVING (NOT ((((((rt1.c4)AND(MAX(MIN(rt1.c0)))))AND(rt0.c2)) IN ()))) UNION ALL SELECT ALL rt1.c4, rt1.c5, rt0.c1, t0.c64, rt0.c0, rt1.c0 FROM rt1, rt0 RIGHT OUTER JOIN t0 ON (((x'813f')) NOT BETWEEN ((UPPER(DISTINCT rt1.c2))) AND (((((rt1.c0))<>((rt1.c0)))))) GROUP BY rt1.c4, rt1.c5, rt0.c1, t0.c64, rt0.c0, rt1.c0 HAVING (((((((rt1.c4)AND(MAX(MIN(rt1.c0)))))AND(rt0.c2)) IN ())) ISNULL);
SELECT rt1.c4, rt1.c5, rt0.c1, t0.c64, rt0.c0, rt1.c0 FROM rt1, rt0 RIGHT OUTER JOIN t0 ON (((x'813f')) NOT BETWEEN ((UPPER(DISTINCT rt1.c2))) AND (((((rt1.c0))<>((rt1.c0)))))) GROUP BY rt1.c4, rt1.c5, rt0.c1, t0.c64, rt0.c0, rt1.c0;
SELECT rt1.c4, rt1.c5, rt0.c1, t0.c64, rt0.c0, rt1.c0 FROM rt1, rt0 RIGHT OUTER JOIN t0 ON (((x'813f')) NOT BETWEEN ((UPPER(DISTINCT rt1.c2))) AND (((((rt1.c0))<>((rt1.c0)))))) GROUP BY rt1.c4, rt1.c5, rt0.c1, t0.c64, rt0.c0, rt1.c0 HAVING (((((rt1.c4)AND(MAX(MIN(rt1.c0)))))AND(rt0.c2)) IN ()) UNION ALL SELECT rt1.c4, rt1.c5, rt0.c1, t0.c64, rt0.c0, rt1.c0 FROM rt1, rt0 RIGHT OUTER JOIN t0 ON (((x'813f')) NOT BETWEEN ((UPPER(DISTINCT rt1.c2))) AND (((((rt1.c0))!=((rt1.c0)))))) GROUP BY rt1.c4, rt1.c5, rt0.c1, t0.c64, rt0.c0, rt1.c0 HAVING (NOT ((((((rt1.c4)AND(MAX(MIN(rt1.c0)))))AND(rt0.c2)) IN ()))) UNION ALL SELECT ALL rt1.c4, rt1.c5, rt0.c1, t0.c64, rt0.c0, rt1.c0 FROM rt1, rt0 RIGHT OUTER JOIN t0 ON (((x'813f')) NOT BETWEEN ((UPPER(DISTINCT rt1.c2))) AND (((((rt1.c0))<>((rt1.c0)))))) GROUP BY rt1.c4, rt1.c5, rt0.c1, t0.c64, rt0.c0, rt1.c0 HAVING (((((((rt1.c4)AND(MAX(MIN(rt1.c0)))))AND(rt0.c2)) IN ())) ISNULL);
SELECT rt1.c4, rt1.c5, rt0.c1, t0.c64, rt0.c0, rt1.c0 FROM rt1, rt0 RIGHT OUTER JOIN t0 ON (((x'813f')) NOT BETWEEN ((UPPER(DISTINCT rt1.c2))) AND (((((rt1.c0))<>((rt1.c0)))))) GROUP BY rt1.c4, rt1.c5, rt0.c1, t0.c64, rt0.c0, rt1.c0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((rt0.c1))>((rt0.c0))) IN ())) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c1))>((rt0.c0))) IN ())))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((((rt0.c1))>((rt0.c0))) IN ())) ISNULL));
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM t0, rt1;
SELECT DISTINCT * FROM t0, rt1 WHERE (((rt1.c6) NOT BETWEEN (rt1.c0) AND (rt1.c6)) COLLATE RTRIM) UNION SELECT DISTINCT * FROM t0, rt1 WHERE ((NOT (((rt1.c6) NOT BETWEEN (rt1.c0) AND (rt1.c6)) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM t0, rt1 WHERE (((((rt1.c6) NOT BETWEEN (rt1.c0) AND (rt1.c6)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM t0, rt1;
SELECT ALL rt1.c6, rt0.c0, t0.c64, rt1.c1, rt1.c3, rt1.c0, rt0.c1, rt1.c5, t0.c0 FROM rt0, rt1, t0 GROUP BY rt1.c6, rt0.c0, t0.c64, rt1.c1, rt1.c3, rt1.c0, rt0.c1, rt1.c5, t0.c0;
SELECT ALL rt1.c6, rt0.c0, t0.c64, rt1.c1, rt1.c3, rt1.c0, rt0.c1, rt1.c5, t0.c0 FROM rt0, rt1, t0 WHERE (((CASE WHEN rt0.c0 THEN rt1.c5 WHEN t0.c0 THEN rt1.c2 WHEN 'GMy}꒗wr' THEN rt0.c1 ELSE rt1.c1 END)/(((rt1.c3)>>(t0.c1))))) GROUP BY rt1.c6, rt0.c0, t0.c64, rt1.c1, rt1.c3, rt1.c0, rt0.c1, rt1.c5, t0.c0 UNION SELECT rt1.c6, rt0.c0, t0.c64, rt1.c1, rt1.c3, rt1.c0, rt0.c1, rt1.c5, t0.c0 FROM rt0, rt1, t0 WHERE ((NOT (((CASE WHEN rt0.c0 THEN rt1.c5 WHEN t0.c0 THEN rt1.c2 WHEN 'GMy}꒗wr' THEN rt0.c1 ELSE rt1.c1 END)/(((rt1.c3)>>(t0.c1))))))) GROUP BY rt1.c6, rt0.c0, t0.c64, rt1.c1, rt1.c3, rt1.c0, rt0.c1, rt1.c5, t0.c0 UNION SELECT rt1.c6, rt0.c0, t0.c64, rt1.c1, rt1.c3, rt1.c0, rt0.c1, rt1.c5, t0.c0 FROM rt0, rt1, t0 WHERE (((((CASE WHEN rt0.c0 THEN rt1.c5 WHEN t0.c0 THEN rt1.c2 WHEN 'GMy}꒗wr' THEN rt0.c1 ELSE rt1.c1 END)/(((rt1.c3)>>(t0.c1))))) ISNULL)) GROUP BY rt1.c6, rt0.c0, t0.c64, rt1.c1, rt1.c3, rt1.c0, rt0.c1, rt1.c5, t0.c0;
SELECT ALL rt1.c6, rt0.c0, t0.c64, rt1.c1, rt1.c3, rt1.c0, rt0.c1, rt1.c5, t0.c0 FROM rt0, rt1, t0 GROUP BY rt1.c6, rt0.c0, t0.c64, rt1.c1, rt1.c3, rt1.c0, rt0.c1, rt1.c5, t0.c0;
SELECT rt1.c3, t0.c0, rt1.c0, t0.c1, rt0.c2, rt0.c0, rt1.c5, rt1.c6, rt0.c1, rt1.c1, rt1.c2 FROM rt0, t0, rt1 GROUP BY rt1.c3, t0.c0, rt1.c0, t0.c1, rt0.c2, rt0.c0, rt1.c5, rt1.c6, rt0.c1, rt1.c1, rt1.c2;
SELECT rt1.c3, t0.c0, rt1.c0, t0.c1, rt0.c2, rt0.c0, rt1.c5, rt1.c6, rt0.c1, rt1.c1, rt1.c2 FROM rt0, t0, rt1 GROUP BY rt1.c3, t0.c0, rt1.c0, t0.c1, rt0.c2, rt0.c0, rt1.c5, rt1.c6, rt0.c1, rt1.c1, rt1.c2 HAVING SUM((NOT (rt1.c4))) UNION ALL SELECT ALL rt1.c3, t0.c0, rt1.c0, t0.c1, rt0.c2, rt0.c0, rt1.c5, rt1.c6, rt0.c1, rt1.c1, rt1.c2 FROM rt0, t0, rt1 GROUP BY rt1.c3, t0.c0, rt1.c0, t0.c1, rt0.c2, rt0.c0, rt1.c5, rt1.c6, rt0.c1, rt1.c1, rt1.c2 HAVING (NOT (SUM((NOT (rt1.c4))))) UNION ALL SELECT ALL rt1.c3, t0.c0, rt1.c0, t0.c1, rt0.c2, rt0.c0, rt1.c5, rt1.c6, rt0.c1, rt1.c1, rt1.c2 FROM rt0, t0, rt1 GROUP BY rt1.c3, t0.c0, rt1.c0, t0.c1, rt0.c2, rt0.c0, rt1.c5, rt1.c6, rt0.c1, rt1.c1, rt1.c2 HAVING ((SUM((NOT (rt1.c4)))) ISNULL);
SELECT rt1.c3, t0.c0, rt1.c0, t0.c1, rt0.c2, rt0.c0, rt1.c5, rt1.c6, rt0.c1, rt1.c1, rt1.c2 FROM rt0, t0, rt1 GROUP BY rt1.c3, t0.c0, rt1.c0, t0.c1, rt0.c2, rt0.c0, rt1.c5, rt1.c6, rt0.c1, rt1.c1, rt1.c2;
SELECT rt1.c3, t0.c0, rt1.c0, t0.c1, rt0.c2, rt0.c0, rt1.c5, rt1.c6, rt0.c1, rt1.c1, rt1.c2 FROM rt0, t0, rt1 GROUP BY rt1.c3, t0.c0, rt1.c0, t0.c1, rt0.c2, rt0.c0, rt1.c5, rt1.c6, rt0.c1, rt1.c1, rt1.c2 HAVING SUM((NOT (rt1.c4))) UNION ALL SELECT ALL rt1.c3, t0.c0, rt1.c0, t0.c1, rt0.c2, rt0.c0, rt1.c5, rt1.c6, rt0.c1, rt1.c1, rt1.c2 FROM rt0, t0, rt1 GROUP BY rt1.c3, t0.c0, rt1.c0, t0.c1, rt0.c2, rt0.c0, rt1.c5, rt1.c6, rt0.c1, rt1.c1, rt1.c2 HAVING (NOT (SUM((NOT (rt1.c4))))) UNION ALL SELECT ALL rt1.c3, t0.c0, rt1.c0, t0.c1, rt0.c2, rt0.c0, rt1.c5, rt1.c6, rt0.c1, rt1.c1, rt1.c2 FROM rt0, t0, rt1 GROUP BY rt1.c3, t0.c0, rt1.c0, t0.c1, rt0.c2, rt0.c0, rt1.c5, rt1.c6, rt0.c1, rt1.c1, rt1.c2 HAVING ((SUM((NOT (rt1.c4)))) ISNULL);
SELECT rt1.c3, t0.c0, rt1.c0, t0.c1, rt0.c2, rt0.c0, rt1.c5, rt1.c6, rt0.c1, rt1.c1, rt1.c2 FROM rt0, t0, rt1 GROUP BY rt1.c3, t0.c0, rt1.c0, t0.c1, rt0.c2, rt0.c0, rt1.c5, rt1.c6, rt0.c1, rt1.c1, rt1.c2;
SELECT * FROM rt1, rt0;
SELECT ALL * FROM rt1, rt0 WHERE (((((rt1.c6)<(rt1.c6)))/(((rt1.c6)IS NOT(rt1.c6))))) UNION ALL SELECT ALL * FROM rt1, rt0 WHERE ((NOT (((((rt1.c6)<(rt1.c6)))/(((rt1.c6)IS NOT(rt1.c6))))))) UNION ALL SELECT * FROM rt1, rt0 WHERE (((((((rt1.c6)<(rt1.c6)))/(((rt1.c6)IS NOT(rt1.c6))))) ISNULL));
SELECT * FROM rt1, rt0;
SELECT DISTINCT rt1.c2, rt1.c1, rt1.c4, rt1.c3 FROM rt1;
SELECT DISTINCT rt1.c2, rt1.c1, rt1.c4, rt1.c3 FROM rt1 WHERE ((((NOT (rt1.c6)))<(((rt1.c1)==(rt1.c6))))) UNION SELECT DISTINCT rt1.c2, rt1.c1, rt1.c4, rt1.c3 FROM rt1 WHERE ((NOT ((((NOT (rt1.c6)))<(((rt1.c1)=(rt1.c6))))))) UNION SELECT DISTINCT rt1.c2, rt1.c1, rt1.c4, rt1.c3 FROM rt1 WHERE ((((((NOT (rt1.c6)))<(((rt1.c1)=(rt1.c6))))) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c1, rt1.c4, rt1.c3 FROM rt1;
SELECT rt1.c0, rt1.c5, rt0.c1, t0.c1, rt1.c1, t0.c0, rt1.c6 FROM rt1, t0 FULL OUTER JOIN rt0 ON ((((((((rt1.c3)AND(t0.c0)))AND(rt1.c3)))OR(rt1.c0)))AND(rt1.c3)) COLLATE RTRIM GROUP BY rt1.c0, rt1.c5, rt0.c1, t0.c1, rt1.c1, t0.c0, rt1.c6;
SELECT ALL rt1.c0, rt1.c5, rt0.c1, t0.c1, rt1.c1, t0.c0, rt1.c6 FROM rt1, t0 FULL OUTER JOIN rt0 ON ((((((((rt1.c3)AND(t0.c0)))AND(rt1.c3)))OR(rt1.c0)))AND(rt1.c3)) COLLATE RTRIM WHERE (CAST(CAST(t0.c0 AS NUMERIC) AS INTEGER)) GROUP BY rt1.c0, rt1.c5, rt0.c1, t0.c1, rt1.c1, t0.c0, rt1.c6 UNION SELECT rt1.c0, rt1.c5, rt0.c1, t0.c1, rt1.c1, t0.c0, rt1.c6 FROM rt1 NOT INDEXED, t0 FULL OUTER JOIN rt0 ON ((((((((rt1.c3)AND(t0.c0)))AND(rt1.c3)))OR(rt1.c0)))AND(rt1.c3)) COLLATE RTRIM WHERE ((NOT (CAST(CAST(t0.c0 AS NUMERIC) AS INTEGER)))) GROUP BY rt1.c0, rt1.c5, rt0.c1, t0.c1, rt1.c1, t0.c0, rt1.c6 UNION SELECT rt1.c0, rt1.c5, rt0.c1, t0.c1, rt1.c1, t0.c0, rt1.c6 FROM rt1, t0 FULL OUTER JOIN rt0 ON ((((((((rt1.c3)AND(t0.c0)))AND(rt1.c3)))OR(rt1.c0)))AND(rt1.c3)) COLLATE RTRIM WHERE (((CAST(CAST(t0.c0 AS NUMERIC) AS INTEGER)) ISNULL)) GROUP BY rt1.c0, rt1.c5, rt0.c1, t0.c1, rt1.c1, t0.c0, rt1.c6;
SELECT rt1.c0, rt1.c5, rt0.c1, t0.c1, rt1.c1, t0.c0, rt1.c6 FROM rt1, t0 FULL OUTER JOIN rt0 ON ((((((((rt1.c3)AND(t0.c0)))AND(rt1.c3)))OR(rt1.c0)))AND(rt1.c3)) COLLATE RTRIM GROUP BY rt1.c0, rt1.c5, rt0.c1, t0.c1, rt1.c1, t0.c0, rt1.c6;
SELECT rt1.c5, t0.c1, rt1.c4 FROM t0, rt1 GROUP BY rt1.c5, t0.c1, rt1.c4;
SELECT rt1.c5, t0.c1, rt1.c4 FROM t0, rt1 GROUP BY rt1.c5, t0.c1, rt1.c4 HAVING ((MAX(rt1.c4))/((- (COUNT(MAX(TOTAL(MIN(rt1.c3)))))))) UNION ALL SELECT ALL rt1.c5, t0.c1, rt1.c4 FROM t0, rt1 GROUP BY rt1.c5, t0.c1, rt1.c4 HAVING (NOT (((MAX(rt1.c4))/((- (COUNT(MAX(TOTAL(MIN(rt1.c3)))))))))) UNION ALL SELECT rt1.c5, t0.c1, rt1.c4 FROM t0, rt1 GROUP BY rt1.c5, t0.c1, rt1.c4 HAVING ((((MAX(rt1.c4))/((- (COUNT(MAX(TOTAL(MIN(rt1.c3))))))))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (rt0.c1) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT * FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM t0 NATURAL JOIN rt1;
SELECT DISTINCT * FROM t0 NATURAL JOIN rt1 WHERE (((rt1.c2) BETWEEN (rt1.c0) AND (NULL)) COLLATE BINARY) UNION SELECT DISTINCT * FROM t0 NATURAL JOIN rt1 WHERE ((NOT (((rt1.c2) BETWEEN (rt1.c0) AND (NULL)) COLLATE BINARY))) UNION SELECT DISTINCT * FROM t0 NATURAL JOIN rt1 WHERE (((((rt1.c2) BETWEEN (rt1.c0) AND (NULL)) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM t0 NATURAL JOIN rt1;
SELECT ALL t0.c64, rt0.c1, rt0.c0 FROM rt0, t0 GROUP BY t0.c64, rt0.c1, rt0.c0;
SELECT t0.c64, rt0.c1, rt0.c0 FROM rt0, t0 WHERE (rt0.c2 COLLATE NOCASE COLLATE NOCASE COLLATE NOCASE) GROUP BY t0.c64, rt0.c1, rt0.c0 UNION SELECT ALL t0.c64, rt0.c1, rt0.c0 FROM rt0, t0 WHERE ((NOT (rt0.c2 COLLATE NOCASE COLLATE NOCASE COLLATE NOCASE))) GROUP BY t0.c64, rt0.c1, rt0.c0 UNION SELECT ALL t0.c64, rt0.c1, rt0.c0 FROM rt0, t0 WHERE (((rt0.c2 COLLATE NOCASE COLLATE NOCASE COLLATE NOCASE) ISNULL)) GROUP BY t0.c64, rt0.c1, rt0.c0;
SELECT ALL t0.c64, rt0.c1, rt0.c0 FROM rt0, t0 GROUP BY t0.c64, rt0.c1, rt0.c0;
SELECT ALL t0.c1, t0.c0, t0.c64 FROM t0 GROUP BY t0.c1, t0.c0, t0.c64;
SELECT ALL t0.c1, t0.c0, t0.c64 FROM t0 GROUP BY t0.c1, t0.c0, t0.c64 HAVING TOTAL(((t0.c64)*(MAX(t0.c1)))) UNION ALL SELECT t0.c1, t0.c0, t0.c64 FROM t0 GROUP BY t0.c1, t0.c0, t0.c64 HAVING (NOT (TOTAL(((t0.c64)*(MAX(t0.c1)))))) UNION ALL SELECT ALL t0.c1, t0.c0, t0.c64 FROM t0 GROUP BY t0.c1, t0.c0, t0.c64 HAVING ((TOTAL(((t0.c64)*(MAX(t0.c1))))) ISNULL);
SELECT * FROM rt1, rt0;
SELECT * FROM rt1, rt0 WHERE (0Xa3da6b7) UNION ALL SELECT ALL * FROM rt1, rt0 WHERE ((NOT (0Xa3da6b7))) UNION ALL SELECT * FROM rt1, rt0 WHERE (((0xa3da6b7) ISNULL));
SELECT * FROM rt1, rt0;
SELECT DISTINCT rt1.c6, rt1.c3, t0.c64, t0.c1, rt1.c0, rt1.c2 FROM t0, rt1;
SELECT DISTINCT rt1.c6, rt1.c3, t0.c64, t0.c1, rt1.c0, rt1.c2 FROM t0, rt1 WHERE (CASE CAST(rt1.c1 AS BLOB)  WHEN (~ (t0.c1)) THEN ((rt1.c0)OR(rt1.c1)) ELSE ((rt1.c6) NOT BETWEEN (rt1.c3) AND (rt1.c4)) END) UNION SELECT DISTINCT rt1.c6, rt1.c3, t0.c64, t0.c1, rt1.c0, rt1.c2 FROM t0, rt1 WHERE ((NOT (CASE CAST(rt1.c1 AS BLOB)  WHEN (~ (t0.c1)) THEN ((rt1.c0)OR(rt1.c1)) ELSE ((rt1.c6) NOT BETWEEN (rt1.c3) AND (rt1.c4)) END))) UNION SELECT DISTINCT rt1.c6, rt1.c3, t0.c64, t0.c1, rt1.c0, rt1.c2 FROM t0, rt1 WHERE (((CASE CAST(rt1.c1 AS BLOB)  WHEN (~ (t0.c1)) THEN ((rt1.c0)OR(rt1.c1)) ELSE ((rt1.c6) NOT BETWEEN (rt1.c3) AND (rt1.c4)) END) ISNULL));
SELECT DISTINCT rt1.c6, rt1.c3, t0.c64, t0.c1, rt1.c0, rt1.c2 FROM t0, rt1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((rt0.c2, rt0.c0, rt0.c1)) BETWEEN (((rt0.c2 IN ()), ((rt0.c0)AND(rt0.c1)), CASE WHEN rt0.c0 THEN rt0.c1 END)) AND (((rt0.c1 IN ()), (- (rt0.c2)), ((('%g\rEbey', rt0.c1, rt0.c1)) BETWEEN ((rt0.c1, '', rt0.c0)) AND ((rt0.c2, x'58b5', x'5bd3'))))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c2, rt0.c0, rt0.c1)) BETWEEN (((rt0.c2 IN ()), ((rt0.c0)AND(rt0.c1)), CASE WHEN rt0.c0 THEN rt0.c1 END)) AND (((rt0.c1 IN ()), (- (rt0.c2)), ((('%g\rEbey', rt0.c1, rt0.c1)) BETWEEN ((rt0.c1, '', rt0.c0)) AND ((rt0.c2, x'58b5', x'5bd3'))))))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((((rt0.c2, rt0.c0, rt0.c1)) BETWEEN (((rt0.c2 IN ()), ((rt0.c0)AND(rt0.c1)), CASE WHEN rt0.c0 THEN rt0.c1 END)) AND (((rt0.c1 IN ()), (- (rt0.c2)), ((('%g\rEbey', rt0.c1, rt0.c1)) BETWEEN ((rt0.c1, '', rt0.c0)) AND ((rt0.c2, x'58b5', x'5bd3'))))))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt1.c3, rt1.c0, t0.c64, rt0.c1, t0.c1, t0.c0, rt1.c4, rt0.c0 FROM rt0 INNER JOIN rt1 ON CAST(rt1.c5 COLLATE RTRIM AS NUMERIC) FULL OUTER JOIN t0 ON ((t0.c0) BETWEEN (((rt0.c0) BETWEEN (rt1.c1) AND (rt1.c2))) AND (NULL)) GROUP BY rt1.c3, rt1.c0, t0.c64, rt0.c1, t0.c1, t0.c0, rt1.c4, rt0.c0;
SELECT rt1.c3, rt1.c0, t0.c64, rt0.c1, t0.c1, t0.c0, rt1.c4, rt0.c0 FROM rt0 INNER JOIN rt1 ON CAST(rt1.c5 COLLATE RTRIM AS NUMERIC) FULL OUTER JOIN t0 ON ((t0.c0) BETWEEN (((rt0.c0) BETWEEN (rt1.c1) AND (rt1.c2))) AND (NULL)) GROUP BY rt1.c3, rt1.c0, t0.c64, rt0.c1, t0.c1, t0.c0, rt1.c4, rt0.c0 HAVING MAX(MIN(t0.c1)) UNION ALL SELECT ALL rt1.c3, rt1.c0, t0.c64, rt0.c1, t0.c1, t0.c0, rt1.c4, rt0.c0 FROM rt0 INNER JOIN rt1 ON CAST(rt1.c5 COLLATE RTRIM AS NUMERIC) FULL OUTER JOIN t0 ON ((t0.c0) BETWEEN (((rt0.c0) BETWEEN (rt1.c1) AND (rt1.c2))) AND (NULL)) GROUP BY rt1.c3, rt1.c0, t0.c64, rt0.c1, t0.c1, t0.c0, rt1.c4, rt0.c0 HAVING (NOT (MAX(MIN(t0.c1)))) UNION ALL SELECT ALL rt1.c3, rt1.c0, t0.c64, rt0.c1, t0.c1, t0.c0, rt1.c4, rt0.c0 FROM rt0 INNER JOIN rt1 ON CAST(rt1.c5 COLLATE RTRIM AS NUMERIC) FULL OUTER JOIN t0 ON ((t0.c0) BETWEEN (((rt0.c0) BETWEEN (rt1.c1) AND (rt1.c2))) AND (NULL)) GROUP BY rt1.c3, rt1.c0, t0.c64, rt0.c1, t0.c1, t0.c0, rt1.c4, rt0.c0 HAVING ((MAX(MIN(t0.c1))) ISNULL);
SELECT rt0.c1, rt1.c2, t0.c0, rt0.c2, rt1.c1, rt1.c4, t0.c64, t0.c1, rt1.c5, rt1.c3, rt0.c0, rt1.c6, rt1.c0 FROM rt0, rt1 CROSS JOIN t0 ON CASE WHEN t0.c1 THEN rt0.c1 END COLLATE RTRIM;
SELECT rt0.c1, rt1.c2, t0.c0, rt0.c2, rt1.c1, rt1.c4, t0.c64, t0.c1, rt1.c5, rt1.c3, rt0.c0, rt1.c6, rt1.c0 FROM rt0, rt1 CROSS JOIN t0 ON CASE WHEN t0.c1 THEN rt0.c1 END COLLATE RTRIM WHERE (CAST(((rt1.c6)&(rt1.c5)) AS BLOB)) UNION ALL SELECT rt0.c1, rt1.c2, t0.c0, rt0.c2, rt1.c1, rt1.c4, t0.c64, t0.c1, rt1.c5, rt1.c3, rt0.c0, rt1.c6, rt1.c0 FROM rt0, rt1 CROSS JOIN t0 ON CASE WHEN t0.c1 THEN rt0.c1 END COLLATE RTRIM WHERE ((NOT (CAST(((rt1.c6)&(rt1.c5)) AS BLOB)))) UNION ALL SELECT rt0.c1, rt1.c2, t0.c0, rt0.c2, rt1.c1, rt1.c4, t0.c64, t0.c1, rt1.c5, rt1.c3, rt0.c0, rt1.c6, rt1.c0 FROM rt0, rt1 CROSS JOIN t0 ON CASE WHEN t0.c1 THEN rt0.c1 END COLLATE RTRIM WHERE (((CAST(((rt1.c6)&(rt1.c5)) AS BLOB)) ISNULL));
SELECT rt0.c1, rt1.c2, t0.c0, rt0.c2, rt1.c1, rt1.c4, t0.c64, t0.c1, rt1.c5, rt1.c3, rt0.c0, rt1.c6, rt1.c0 FROM rt0, rt1 CROSS JOIN t0 ON CASE WHEN t0.c1 THEN rt0.c1 END COLLATE RTRIM;
SELECT DISTINCT * FROM t0, rt0, rt1;
SELECT DISTINCT * FROM t0, rt0, rt1 WHERE (TIME((((rt1.c2))>((0.49424252205567965))), DATETIME(rt1.c5, rt1.c3, rt1.c5), ((((rt1.c2)AND(t0.c1)))AND(rt1.c2)), CAST(0.6900601023457142 AS REAL), ((t0.c64)=(rt1.c5)), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)), CASE t0.c1  WHEN t0.c64 THEN rt0.c2 END)) UNION SELECT DISTINCT * FROM t0, rt0, rt1 WHERE ((NOT (TIME((((rt1.c2))>((0.49424252205567965))), DATETIME(rt1.c5, rt1.c3, rt1.c5), ((((rt1.c2)AND(t0.c1)))AND(rt1.c2)), CAST(0.6900601023457142 AS REAL), ((t0.c64)=(rt1.c5)), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)), CASE t0.c1  WHEN t0.c64 THEN rt0.c2 END)))) UNION SELECT DISTINCT * FROM t0, rt0, rt1 WHERE (((TIME((((rt1.c2))>((0.49424252205567965))), DATETIME(rt1.c5, rt1.c3, rt1.c5), ((((rt1.c2)AND(t0.c1)))AND(rt1.c2)), CAST(0.6900601023457142 AS REAL), ((t0.c64)=(rt1.c5)), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)), CASE t0.c1  WHEN t0.c64 THEN rt0.c2 END)) ISNULL));
SELECT DISTINCT * FROM t0, rt0, rt1;
SELECT t0.c1 FROM rt1, t0, rt0 GROUP BY t0.c1;
SELECT t0.c1 FROM rt1, t0, rt0 WHERE (1.71812535E8) GROUP BY t0.c1 UNION SELECT t0.c1 FROM rt1, t0, rt0 WHERE ((NOT (1.71812535E8))) GROUP BY t0.c1 UNION SELECT ALL t0.c1 FROM rt1, t0, rt0 WHERE (((1.71812535E8) ISNULL)) GROUP BY t0.c1;
SELECT t0.c1 FROM rt1, t0, rt0 GROUP BY t0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING GROUP_CONCAT(((rt0.c2)GLOB(rt0.c0))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (GROUP_CONCAT(((rt0.c2)GLOB(rt0.c0))))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((GROUP_CONCAT(((rt0.c2)GLOB(rt0.c0)))) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING GROUP_CONCAT(((rt0.c2)GLOB(rt0.c0))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (GROUP_CONCAT(((rt0.c2)GLOB(rt0.c0))))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((GROUP_CONCAT(((rt0.c2)GLOB(rt0.c0)))) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL * FROM rt0, rt1, t0;
SELECT * FROM rt0, rt1, t0 WHERE ((((CASE rt1.c2  WHEN rt1.c6 THEN rt1.c5 END))<(((0x6cd2ff3f IN (NULL)))))) UNION ALL SELECT ALL * FROM rt0, rt1, t0 WHERE ((NOT ((((CASE rt1.c2  WHEN rt1.c6 THEN rt1.c5 END))<(((0x6cd2ff3f IN (NULL)))))))) UNION ALL SELECT ALL * FROM rt0, rt1, t0 WHERE ((((((CASE rt1.c2  WHEN rt1.c6 THEN rt1.c5 END))<(((0x6cd2ff3f IN (NULL)))))) ISNULL));
SELECT ALL * FROM rt0, rt1, t0;
SELECT DISTINCT * FROM rt0, t0, rt1;
SELECT DISTINCT * FROM rt0, t0, rt1 WHERE (NULL) UNION SELECT DISTINCT * FROM rt0, t0, rt1 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM rt0, t0, rt1 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM rt0, t0, rt1;
SELECT t0.c0, rt0.c0 FROM t0, rt0 GROUP BY t0.c0, rt0.c0;
SELECT t0.c0, rt0.c0 FROM t0, rt0 WHERE ((((((rt0.c2) BETWEEN (rt0.c2) AND (t0.c64))))<(((rt0.c2 IN (t0.c0)))))) GROUP BY t0.c0, rt0.c0 UNION SELECT t0.c0, rt0.c0 FROM t0, rt0 WHERE ((NOT ((((((rt0.c2) BETWEEN (rt0.c2) AND (t0.c64))))<(((rt0.c2 IN (t0.c0)))))))) GROUP BY t0.c0, rt0.c0 UNION SELECT ALL t0.c0, rt0.c0 FROM t0, rt0 WHERE ((((((((rt0.c2) BETWEEN (rt0.c2) AND (t0.c64))))<(((rt0.c2 IN (t0.c0)))))) ISNULL)) GROUP BY t0.c0, rt0.c0;
SELECT t0.c0, rt0.c0 FROM t0, rt0 GROUP BY t0.c0, rt0.c0;
SELECT ALL rt1.c5, rt1.c3, rt1.c0, rt1.c6 FROM rt1 GROUP BY rt1.c5, rt1.c3, rt1.c0, rt1.c6;
SELECT ALL rt1.c5, rt1.c3, rt1.c0, rt1.c6 FROM rt1 GROUP BY rt1.c5, rt1.c3, rt1.c0, rt1.c6 HAVING MAX((((rt1.c2, AVG(rt1.c3), rt1.c5)) BETWEEN ((TOTAL(rt1.c5), rt1.c1, NULL)) AND ((rt1.c1, rt1.c2, rt1.c2)))) UNION ALL SELECT ALL rt1.c5, rt1.c3, rt1.c0, rt1.c6 FROM rt1 GROUP BY rt1.c5, rt1.c3, rt1.c0, rt1.c6 HAVING (NOT (MAX((((rt1.c2, AVG(rt1.c3), rt1.c5)) BETWEEN ((TOTAL(rt1.c5), rt1.c1, NULL)) AND ((rt1.c1, rt1.c2, rt1.c2)))))) UNION ALL SELECT rt1.c5, rt1.c3, rt1.c0, rt1.c6 FROM rt1 GROUP BY rt1.c5, rt1.c3, rt1.c0, rt1.c6 HAVING ((MAX((((rt1.c2, AVG(rt1.c3), rt1.c5)) BETWEEN ((TOTAL(rt1.c5), rt1.c1, NULL)) AND ((rt1.c1, rt1.c2, rt1.c2))))) ISNULL);
SELECT ALL SUM(CAST(((rt0.c0)<<(rt1.c2)) AS REAL)) FROM t0, rt0, rt1 ORDER BY 7.4025741E7, (((('-593338172') BETWEEN (t0.c1) AND (rt0.c0))) NOTNULL) DESC  NULLS FIRST;
SELECT ALL * FROM t0, rt0, rt1;
SELECT * FROM t0, rt0, rt1 WHERE (CAST((('-1816751643') NOT BETWEEN (rt1.c4) AND (rt1.c5)) AS NUMERIC)) UNION ALL SELECT * FROM t0, rt0, rt1 WHERE ((NOT (CAST((('-1816751643') NOT BETWEEN (rt1.c4) AND (rt1.c5)) AS NUMERIC)))) UNION ALL SELECT * FROM t0, rt0, rt1 WHERE (((CAST((('-1816751643') NOT BETWEEN (rt1.c4) AND (rt1.c5)) AS NUMERIC)) ISNULL));
SELECT ALL * FROM t0, rt0, rt1;
SELECT DISTINCT t0.c1, rt0.c0, rt0.c2 FROM t0, rt0;
SELECT DISTINCT t0.c1, rt0.c0, rt0.c2 FROM t0, rt0 WHERE ((((t0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)) IN ())) UNION SELECT DISTINCT t0.c1, rt0.c0, rt0.c2 FROM t0, rt0 WHERE ((NOT ((((t0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)) IN ())))) UNION SELECT DISTINCT t0.c1, rt0.c0, rt0.c2 FROM t0, rt0 WHERE ((((((t0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)) IN ())) ISNULL));
SELECT DISTINCT t0.c1, rt0.c0, rt0.c2 FROM t0, rt0;
SELECT t0.c1 FROM t0 GROUP BY t0.c1;
SELECT t0.c1 FROM t0 WHERE (((((0.6661715524265422) NOT BETWEEN (t0.c0) AND (t0.c1)))*(CAST(t0.c1 AS NUMERIC)))) GROUP BY t0.c1 UNION SELECT t0.c1 FROM t0 WHERE ((NOT (((((0.6661715524265422) NOT BETWEEN (t0.c0) AND (t0.c1)))*(CAST(t0.c1 AS NUMERIC)))))) GROUP BY t0.c1 UNION SELECT ALL t0.c1 FROM t0 WHERE (((((((0.6661715524265422) NOT BETWEEN (t0.c0) AND (t0.c1)))*(CAST(t0.c1 AS NUMERIC)))) ISNULL)) GROUP BY t0.c1;
SELECT t0.c1 FROM t0 GROUP BY t0.c1;
SELECT rt1.c6, rt1.c2 FROM rt1 GROUP BY rt1.c6, rt1.c2;
SELECT rt1.c6, rt1.c2 FROM rt1 GROUP BY rt1.c6, rt1.c2 HAVING (SUM(rt1.c5) IN ()) UNION ALL SELECT ALL rt1.c6, rt1.c2 FROM rt1 GROUP BY rt1.c6, rt1.c2 HAVING (NOT ((SUM(rt1.c5) IN ()))) UNION ALL SELECT ALL rt1.c6, rt1.c2 FROM rt1 GROUP BY rt1.c6, rt1.c2 HAVING (((SUM(rt1.c5) IN ())) ISNULL);
SELECT rt1.c6, rt1.c2 FROM rt1 GROUP BY rt1.c6, rt1.c2;
SELECT rt1.c6, rt1.c2 FROM rt1 GROUP BY rt1.c6, rt1.c2 HAVING (SUM(rt1.c5) IN ()) UNION ALL SELECT ALL rt1.c6, rt1.c2 FROM rt1 GROUP BY rt1.c6, rt1.c2 HAVING (NOT ((SUM(rt1.c5) IN ()))) UNION ALL SELECT ALL rt1.c6, rt1.c2 FROM rt1 GROUP BY rt1.c6, rt1.c2 HAVING (((SUM(rt1.c5) IN ())) ISNULL);
SELECT rt1.c6, rt1.c2 FROM rt1 GROUP BY rt1.c6, rt1.c2;
SELECT ALL * FROM rt0, rt1, t0;
SELECT ALL * FROM rt0, rt1, t0 WHERE (TYPEOF(((rt1.c1)>=(NULL)))) UNION ALL SELECT * FROM rt0, rt1, t0 WHERE ((NOT (TYPEOF(((rt1.c1)>=(NULL)))))) UNION ALL SELECT ALL * FROM rt0, rt1, t0 WHERE (((TYPEOF(((rt1.c1)>=(NULL)))) ISNULL));
SELECT ALL * FROM rt0, rt1, t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((((((NOT (t0.c0)))AND(JULIANDAY(t0.c1, 0.0, t0.c1, t0.c0, t0.c0, t0.c64, t0.c1))))OR(((t0.c64)LIKE(t0.c1))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((((((NOT (t0.c0)))AND(JULIANDAY(t0.c1, 0.0, t0.c1, t0.c0, t0.c0, t0.c64, t0.c1))))OR(((t0.c64)LIKE(t0.c1))))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((((((NOT (t0.c0)))AND(JULIANDAY(t0.c1, 0.0, t0.c1, t0.c0, t0.c0, t0.c64, t0.c1))))OR(((t0.c64)LIKE(t0.c1))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT rt0.c2, rt0.c1, rt1.c4, rt1.c0 FROM rt0, t0, rt1 GROUP BY rt0.c2, rt0.c1, rt1.c4, rt1.c0;
SELECT rt0.c2, rt0.c1, rt1.c4, rt1.c0 FROM rt0, t0, rt1 WHERE ((((rt1.c1, 0.028531766936822578, rt0.c2))>((rt1.c4, rt1.c3, rt0.c1))) COLLATE NOCASE) GROUP BY rt0.c2, rt0.c1, rt1.c4, rt1.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt1.c4, rt1.c0 FROM rt0, t0, rt1 NOT INDEXED WHERE ((NOT ((((rt1.c1, 0.028531766936822578, rt0.c2))>((rt1.c4, rt1.c3, rt0.c1))) COLLATE NOCASE))) GROUP BY rt0.c2, rt0.c1, rt1.c4, rt1.c0 UNION SELECT rt0.c2, rt0.c1, rt1.c4, rt1.c0 FROM rt0, t0, rt1 WHERE ((((((rt1.c1, 0.028531766936822578, rt0.c2))>((rt1.c4, rt1.c3, rt0.c1))) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt1.c4, rt1.c0;
SELECT rt0.c2, rt0.c1, rt1.c4, rt1.c0 FROM rt0, t0, rt1 GROUP BY rt0.c2, rt0.c1, rt1.c4, rt1.c0;
SELECT rt0.c0, t0.c64, rt0.c1, t0.c0, rt0.c2 FROM t0, rt0 GROUP BY rt0.c0, t0.c64, rt0.c1, t0.c0, rt0.c2;
SELECT ALL rt0.c0, t0.c64, rt0.c1, t0.c0, rt0.c2 FROM t0, rt0 GROUP BY rt0.c0, t0.c64, rt0.c1, t0.c0, rt0.c2 HAVING ((TOTAL(rt0.c1))<=(COUNT(*))) UNION ALL SELECT rt0.c0, t0.c64, rt0.c1, t0.c0, rt0.c2 FROM t0, rt0 GROUP BY rt0.c0, t0.c64, rt0.c1, t0.c0, rt0.c2 HAVING (NOT (((TOTAL(rt0.c1))<=(COUNT(*))))) UNION ALL SELECT ALL rt0.c0, t0.c64, rt0.c1, t0.c0, rt0.c2 FROM t0, rt0 GROUP BY rt0.c0, t0.c64, rt0.c1, t0.c0, rt0.c2 HAVING ((((TOTAL(rt0.c1))<=(COUNT(*)))) ISNULL);
SELECT rt0.c0, t0.c64, rt0.c1, t0.c0, rt0.c2 FROM t0, rt0 GROUP BY rt0.c0, t0.c64, rt0.c1, t0.c0, rt0.c2;
SELECT ALL rt0.c0, t0.c64, rt0.c1, t0.c0, rt0.c2 FROM t0, rt0 GROUP BY rt0.c0, t0.c64, rt0.c1, t0.c0, rt0.c2 HAVING ((TOTAL(rt0.c1))<=(COUNT(*))) UNION ALL SELECT rt0.c0, t0.c64, rt0.c1, t0.c0, rt0.c2 FROM t0, rt0 GROUP BY rt0.c0, t0.c64, rt0.c1, t0.c0, rt0.c2 HAVING (NOT (((TOTAL(rt0.c1))<=(COUNT(*))))) UNION ALL SELECT ALL rt0.c0, t0.c64, rt0.c1, t0.c0, rt0.c2 FROM t0, rt0 GROUP BY rt0.c0, t0.c64, rt0.c1, t0.c0, rt0.c2 HAVING ((((TOTAL(rt0.c1))<=(COUNT(*)))) ISNULL);
SELECT rt0.c0, t0.c64, rt0.c1, t0.c0, rt0.c2 FROM t0, rt0 GROUP BY rt0.c0, t0.c64, rt0.c1, t0.c0, rt0.c2;
SELECT ALL MIN(CAST((- (rt1.c0)) AS REAL)) FROM rt0, rt1, t0;
SELECT rt0.c1, t0.c64, rt1.c5, t0.c0, t0.c1, rt1.c6 FROM rt1 RIGHT OUTER JOIN rt0 ON ((((NULL)<=(t0.c64))) BETWEEN (LIKELY(rt1.c2)) AND (rt1.c1)) INNER JOIN t0 ON ((((rt1.c6)*(rt0.c2)))LIKE(((((rt0.c0)AND(t0.c64)))AND(rt1.c5))));
SELECT DISTINCT t0.c64, rt1.c1, rt0.c2, rt0.c0, t0.c0, rt1.c6, rt1.c5, rt1.c4, rt1.c2, rt1.c0, rt0.c1, t0.c1, rt1.c3 FROM t0, rt1, rt0;
SELECT DISTINCT t0.c64, rt1.c1, rt0.c2, rt0.c0, t0.c0, rt1.c6, rt1.c5, rt1.c4, rt1.c2, rt1.c0, rt0.c1, t0.c1, rt1.c3 FROM t0, rt1, rt0 WHERE ('-1502937999') UNION SELECT DISTINCT t0.c64, rt1.c1, rt0.c2, rt0.c0, t0.c0, rt1.c6, rt1.c5, rt1.c4, rt1.c2, rt1.c0, rt0.c1, t0.c1, rt1.c3 FROM t0, rt1, rt0 WHERE ((NOT ('-1502937999'))) UNION SELECT DISTINCT t0.c64, rt1.c1, rt0.c2, rt0.c0, t0.c0, rt1.c6, rt1.c5, rt1.c4, rt1.c2, rt1.c0, rt0.c1, t0.c1, rt1.c3 FROM t0, rt1, rt0 WHERE ((('-1502937999') ISNULL));
SELECT DISTINCT t0.c64, rt1.c1, rt0.c2, rt0.c0, t0.c0, rt1.c6, rt1.c5, rt1.c4, rt1.c2, rt1.c0, rt0.c1, t0.c1, rt1.c3 FROM t0, rt1, rt0;
SELECT t0.c0, t0.c64, t0.c1 FROM t0 GROUP BY t0.c0, t0.c64, t0.c1;
SELECT t0.c0, t0.c64, t0.c1 FROM t0 WHERE ((((t0.c0)*(t0.c64)) IN ())) GROUP BY t0.c0, t0.c64, t0.c1 UNION SELECT ALL t0.c0, t0.c64, t0.c1 FROM t0 WHERE ((NOT ((((t0.c0)*(t0.c64)) IN ())))) GROUP BY t0.c0, t0.c64, t0.c1 UNION SELECT t0.c0, t0.c64, t0.c1 FROM t0 WHERE ((((((t0.c0)*(t0.c64)) IN ())) ISNULL)) GROUP BY t0.c0, t0.c64, t0.c1;
SELECT t0.c0, t0.c64, t0.c1 FROM t0 GROUP BY t0.c0, t0.c64, t0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (+ (MAX(NULL))) COLLATE BINARY UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT ((+ (MAX(NULL))) COLLATE BINARY)) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (((+ (MAX(NULL))) COLLATE BINARY) ISNULL);
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (+ (MAX(NULL))) COLLATE BINARY UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT ((+ (MAX(NULL))) COLLATE BINARY)) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (((+ (MAX(NULL))) COLLATE BINARY) ISNULL);
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt1.c2, rt1.c6, rt0.c1, t0.c64, t0.c0, rt1.c5, rt1.c4, rt0.c2 FROM rt0, rt1, t0;
SELECT rt1.c2, rt1.c6, rt0.c1, t0.c64, t0.c0, rt1.c5, rt1.c4, rt0.c2 FROM rt0, rt1, t0 WHERE ((((rt1.c5, t0.c64, rt1.c5)) BETWEEN (((((t0.c64)) BETWEEN ((rt0.c2)) AND ((rt1.c2))), CASE WHEN rt1.c0 THEN t0.c1 ELSE t0.c1 END, rt1.c5)) AND (((~ (rt1.c5)), ((t0.c0) NOT BETWEEN (t0.c0) AND (rt1.c4)), (+ (rt1.c4)))))) UNION ALL SELECT rt1.c2, rt1.c6, rt0.c1, t0.c64, t0.c0, rt1.c5, rt1.c4, rt0.c2 FROM rt0, rt1, t0 WHERE ((NOT ((((rt1.c5, t0.c64, rt1.c5)) BETWEEN (((((t0.c64)) BETWEEN ((rt0.c2)) AND ((rt1.c2))), CASE WHEN rt1.c0 THEN t0.c1 ELSE t0.c1 END, rt1.c5)) AND (((~ (rt1.c5)), ((t0.c0) NOT BETWEEN (t0.c0) AND (rt1.c4)), (+ (rt1.c4)))))))) UNION ALL SELECT ALL rt1.c2, rt1.c6, rt0.c1, t0.c64, t0.c0, rt1.c5, rt1.c4, rt0.c2 FROM rt0, rt1, t0 WHERE ((((((rt1.c5, t0.c64, rt1.c5)) BETWEEN (((((t0.c64)) BETWEEN ((rt0.c2)) AND ((rt1.c2))), CASE WHEN rt1.c0 THEN t0.c1 ELSE t0.c1 END, rt1.c5)) AND (((~ (rt1.c5)), ((t0.c0) NOT BETWEEN (t0.c0) AND (rt1.c4)), (+ (rt1.c4)))))) ISNULL));
SELECT rt1.c2, rt1.c6, rt0.c1, t0.c64, t0.c0, rt1.c5, rt1.c4, rt0.c2 FROM rt0, rt1, t0;
SELECT DISTINCT t0.c64, rt1.c0, t0.c1, rt1.c5, rt1.c4, rt1.c2, rt1.c3, t0.c0, rt1.c1 FROM rt1 FULL OUTER JOIN t0 ON t0.c0;
SELECT DISTINCT t0.c64, rt1.c0, t0.c1, rt1.c5, rt1.c4, rt1.c2, rt1.c3, t0.c0, rt1.c1 FROM rt1 FULL OUTER JOIN t0 ON t0.c0 WHERE (CAST(t0.c64 AS REAL) COLLATE BINARY) UNION SELECT DISTINCT t0.c64, rt1.c0, t0.c1, rt1.c5, rt1.c4, rt1.c2, rt1.c3, t0.c0, rt1.c1 FROM rt1 FULL OUTER JOIN t0 ON t0.c0 WHERE ((NOT (CAST(t0.c64 AS REAL) COLLATE BINARY))) UNION SELECT DISTINCT t0.c64, rt1.c0, t0.c1, rt1.c5, rt1.c4, rt1.c2, rt1.c3, t0.c0, rt1.c1 FROM rt1 FULL OUTER JOIN t0 ON t0.c0 WHERE (((CAST(t0.c64 AS REAL) COLLATE BINARY) ISNULL));
SELECT DISTINCT t0.c64, rt1.c0, t0.c1, rt1.c5, rt1.c4, rt1.c2, rt1.c3, t0.c0, rt1.c1 FROM rt1 FULL OUTER JOIN t0 ON t0.c0;
SELECT rt1.c0, t0.c64, rt1.c2, t0.c0, rt1.c3, rt1.c5, rt1.c4, rt1.c1, rt1.c6 FROM rt1, t0 GROUP BY rt1.c0, t0.c64, rt1.c2, t0.c0, rt1.c3, rt1.c5, rt1.c4, rt1.c1, rt1.c6;
SELECT rt1.c0, t0.c64, rt1.c2, t0.c0, rt1.c3, rt1.c5, rt1.c4, rt1.c1, rt1.c6 FROM rt1, t0 WHERE (((CAST(rt1.c4 AS BLOB))IS NOT(CAST(x'' AS TEXT)))) GROUP BY rt1.c0, t0.c64, rt1.c2, t0.c0, rt1.c3, rt1.c5, rt1.c4, rt1.c1, rt1.c6 UNION SELECT ALL rt1.c0, t0.c64, rt1.c2, t0.c0, rt1.c3, rt1.c5, rt1.c4, rt1.c1, rt1.c6 FROM rt1, t0 NOT INDEXED WHERE ((NOT (((CAST(rt1.c4 AS BLOB))IS NOT(CAST(x'' AS TEXT)))))) GROUP BY rt1.c0, t0.c64, rt1.c2, t0.c0, rt1.c3, rt1.c5, rt1.c4, rt1.c1, rt1.c6 UNION SELECT rt1.c0, t0.c64, rt1.c2, t0.c0, rt1.c3, rt1.c5, rt1.c4, rt1.c1, rt1.c6 FROM rt1, t0 WHERE (((((CAST(rt1.c4 AS BLOB))IS NOT(CAST(x'' AS TEXT)))) ISNULL)) GROUP BY rt1.c0, t0.c64, rt1.c2, t0.c0, rt1.c3, rt1.c5, rt1.c4, rt1.c1, rt1.c6;
SELECT rt1.c0, t0.c64, rt1.c2, t0.c0, rt1.c3, rt1.c5, rt1.c4, rt1.c1, rt1.c6 FROM rt1, t0 GROUP BY rt1.c0, t0.c64, rt1.c2, t0.c0, rt1.c3, rt1.c5, rt1.c4, rt1.c1, rt1.c6;
SELECT rt1.c1, rt1.c4, rt1.c6, rt1.c5, rt1.c2, rt1.c3, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c4, rt1.c6, rt1.c5, rt1.c2, rt1.c3, rt1.c0;
SELECT rt1.c1, rt1.c4, rt1.c6, rt1.c5, rt1.c2, rt1.c3, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c4, rt1.c6, rt1.c5, rt1.c2, rt1.c3, rt1.c0 HAVING COUNT(*) UNION ALL SELECT rt1.c1, rt1.c4, rt1.c6, rt1.c5, rt1.c2, rt1.c3, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c4, rt1.c6, rt1.c5, rt1.c2, rt1.c3, rt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c1, rt1.c4, rt1.c6, rt1.c5, rt1.c2, rt1.c3, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c4, rt1.c6, rt1.c5, rt1.c2, rt1.c3, rt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c1, rt1.c4, rt1.c6, rt1.c5, rt1.c2, rt1.c3, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c4, rt1.c6, rt1.c5, rt1.c2, rt1.c3, rt1.c0;
SELECT rt1.c1, rt1.c4, rt1.c6, rt1.c5, rt1.c2, rt1.c3, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c4, rt1.c6, rt1.c5, rt1.c2, rt1.c3, rt1.c0 HAVING COUNT(*) UNION ALL SELECT rt1.c1, rt1.c4, rt1.c6, rt1.c5, rt1.c2, rt1.c3, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c4, rt1.c6, rt1.c5, rt1.c2, rt1.c3, rt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c1, rt1.c4, rt1.c6, rt1.c5, rt1.c2, rt1.c3, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c4, rt1.c6, rt1.c5, rt1.c2, rt1.c3, rt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c1, rt1.c4, rt1.c6, rt1.c5, rt1.c2, rt1.c3, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c4, rt1.c6, rt1.c5, rt1.c2, rt1.c3, rt1.c0;
SELECT * FROM rt1, t0, rt0;
SELECT ALL * FROM rt1, t0, rt0 WHERE ((((rt1.c0)) BETWEEN ((json_valid(rt1.c2))) AND (((+ (rt0.c2)))))) UNION ALL SELECT ALL * FROM rt1, t0, rt0 WHERE ((NOT ((((rt1.c0)) BETWEEN ((json_valid(rt1.c2))) AND (((+ (rt0.c2)))))))) UNION ALL SELECT ALL * FROM rt1, t0, rt0 WHERE ((((((rt1.c0)) BETWEEN ((json_valid(rt1.c2))) AND (((+ (rt0.c2)))))) ISNULL));
SELECT * FROM rt1, t0, rt0;
SELECT DISTINCT t0.c0, rt1.c5, rt1.c3, t0.c1 FROM rt0 CROSS JOIN t0 ON ((((((t0.c64)||(t0.c0)))OR((t0.c1 IN (rt0.c0)))))OR(rt1.c2)) LEFT OUTER JOIN rt1 ON CASE WHEN ((t0.c64)>(0.1670052907619286)) THEN x'' WHEN ((rt1.c0) IS FALSE) THEN ((rt1.c5)IS NOT(rt1.c6)) WHEN (- (rt1.c5)) THEN IFNULL(rt1.c1, rt0.c1) END;
SELECT DISTINCT t0.c0, rt1.c5, rt1.c3, t0.c1 FROM rt0 CROSS JOIN t0 ON ((((((t0.c64)||(t0.c0)))OR((t0.c1 IN (rt0.c0)))))OR(rt1.c2)) LEFT OUTER JOIN rt1 ON CASE WHEN ((t0.c64)>(0.1670052907619286)) THEN x'' WHEN ((rt1.c0) IS FALSE) THEN ((rt1.c5)IS NOT(rt1.c6)) WHEN (- (rt1.c5)) THEN IFNULL(rt1.c1, rt0.c1) END WHERE ((((rt1.c2, rt1.c1, rt1.c5)) NOT BETWEEN ((((t0.c64)LIKE(rt0.c2)), (rt0.c1 IN (rt1.c1)), '-1184165530' COLLATE NOCASE)) AND ((rt1.c0 COLLATE RTRIM, COALESCE(rt1.c1, rt0.c2), ('tupiD!4' IN ()))))) UNION SELECT DISTINCT t0.c0, rt1.c5, rt1.c3, t0.c1 FROM rt0 CROSS JOIN t0 ON ((((((t0.c64)||(t0.c0)))OR((t0.c1 IN (rt0.c0)))))OR(rt1.c2)) LEFT OUTER JOIN rt1 ON CASE WHEN ((t0.c64)>(0.1670052907619286)) THEN x'' WHEN ((rt1.c0) IS FALSE) THEN ((rt1.c5)IS NOT(rt1.c6)) WHEN (- (rt1.c5)) THEN IFNULL(rt1.c1, rt0.c1) END WHERE ((NOT ((((rt1.c2, rt1.c1, rt1.c5)) NOT BETWEEN ((((t0.c64)LIKE(rt0.c2)), (rt0.c1 IN (rt1.c1)), '-1184165530' COLLATE NOCASE)) AND ((rt1.c0 COLLATE RTRIM, COALESCE(rt1.c1, rt0.c2), ('tupiD!4' IN ()))))))) UNION SELECT DISTINCT t0.c0, rt1.c5, rt1.c3, t0.c1 FROM rt0 CROSS JOIN t0 ON ((((((t0.c64)||(t0.c0)))OR((t0.c1 IN (rt0.c0)))))OR(rt1.c2)) LEFT OUTER JOIN rt1 ON CASE WHEN ((t0.c64)>(0.1670052907619286)) THEN x'' WHEN ((rt1.c0) IS FALSE) THEN ((rt1.c5)IS NOT(rt1.c6)) WHEN (- (rt1.c5)) THEN IFNULL(rt1.c1, rt0.c1) END WHERE ((((((rt1.c2, rt1.c1, rt1.c5)) NOT BETWEEN ((((t0.c64)LIKE(rt0.c2)), (rt0.c1 IN (rt1.c1)), '-1184165530' COLLATE NOCASE)) AND ((rt1.c0 COLLATE RTRIM, COALESCE(rt1.c1, rt0.c2), ('tupiD!4' IN ()))))) ISNULL));
SELECT DISTINCT t0.c0, rt1.c5, rt1.c3, t0.c1 FROM rt0 CROSS JOIN t0 ON ((((((t0.c64)||(t0.c0)))OR((t0.c1 IN (rt0.c0)))))OR(rt1.c2)) LEFT OUTER JOIN rt1 ON CASE WHEN ((t0.c64)>(0.1670052907619286)) THEN x'' WHEN ((rt1.c0) IS FALSE) THEN ((rt1.c5)IS NOT(rt1.c6)) WHEN (- (rt1.c5)) THEN IFNULL(rt1.c1, rt0.c1) END;
SELECT ALL rt1.c2, rt1.c1, rt1.c4, rt1.c5, rt1.c3, t0.c64, rt0.c1, rt1.c0, t0.c1, t0.c0, rt0.c2, rt0.c0 FROM t0, rt0 FULL OUTER JOIN rt1 ON ((((NULL) NOT BETWEEN (rt1.c0) AND (rt0.c0)))-(CASE rt1.c2  WHEN rt1.c0 THEN 0.48026695744168935 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN t0.c1 ELSE rt1.c4 END)) GROUP BY rt1.c2, rt1.c1, rt1.c4, rt1.c5, rt1.c3, t0.c64, rt0.c1, rt1.c0, t0.c1, t0.c0, rt0.c2, rt0.c0;
SELECT ALL rt1.c2, rt1.c1, rt1.c4, rt1.c5, rt1.c3, t0.c64, rt0.c1, rt1.c0, t0.c1, t0.c0, rt0.c2, rt0.c0 FROM t0, rt0 FULL OUTER JOIN rt1 ON ((((NULL) NOT BETWEEN (rt1.c0) AND (rt0.c0)))-(CASE rt1.c2  WHEN rt1.c0 THEN 0.48026695744168935 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN t0.c1 ELSE rt1.c4 END)) WHERE ((((((rt1.c2)>('-1014540618')), ((((rt1.c5)OR(rt1.c2)))OR(rt0.c2)), rt1.c5))<>((t0.c64, ((rt1.c4)||(rt1.c0)), ((rt1.c2) NOT BETWEEN (rt1.c4) AND (t0.c1)))))) GROUP BY rt1.c2, rt1.c1, rt1.c4, rt1.c5, rt1.c3, t0.c64, rt0.c1, rt1.c0, t0.c1, t0.c0, rt0.c2, rt0.c0 UNION SELECT ALL rt1.c2, rt1.c1, rt1.c4, rt1.c5, rt1.c3, t0.c64, rt0.c1, rt1.c0, t0.c1, t0.c0, rt0.c2, rt0.c0 FROM t0, rt0 FULL OUTER JOIN rt1 ON ((((NULL) NOT BETWEEN (rt1.c0) AND (rt0.c0)))-(CASE rt1.c2  WHEN rt1.c0 THEN 0.48026695744168935 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN t0.c1 ELSE rt1.c4 END)) WHERE ((NOT ((((((rt1.c2)>('-1014540618')), ((((rt1.c5)OR(rt1.c2)))OR(rt0.c2)), rt1.c5))!=((t0.c64, ((rt1.c4)||(rt1.c0)), ((rt1.c2) NOT BETWEEN (rt1.c4) AND (t0.c1)))))))) GROUP BY rt1.c2, rt1.c1, rt1.c4, rt1.c5, rt1.c3, t0.c64, rt0.c1, rt1.c0, t0.c1, t0.c0, rt0.c2, rt0.c0 UNION SELECT ALL rt1.c2, rt1.c1, rt1.c4, rt1.c5, rt1.c3, t0.c64, rt0.c1, rt1.c0, t0.c1, t0.c0, rt0.c2, rt0.c0 FROM t0, rt0 FULL OUTER JOIN rt1 ON ((((NULL) NOT BETWEEN (rt1.c0) AND (rt0.c0)))-(CASE rt1.c2  WHEN rt1.c0 THEN 0.48026695744168935 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN t0.c1 ELSE rt1.c4 END)) WHERE ((((((((rt1.c2)>('-1014540618')), ((((rt1.c5)OR(rt1.c2)))OR(rt0.c2)), rt1.c5))<>((t0.c64, ((rt1.c4)||(rt1.c0)), ((rt1.c2) NOT BETWEEN (rt1.c4) AND (t0.c1)))))) ISNULL)) GROUP BY rt1.c2, rt1.c1, rt1.c4, rt1.c5, rt1.c3, t0.c64, rt0.c1, rt1.c0, t0.c1, t0.c0, rt0.c2, rt0.c0;
SELECT ALL rt1.c2, rt1.c1, rt1.c4, rt1.c5, rt1.c3, t0.c64, rt0.c1, rt1.c0, t0.c1, t0.c0, rt0.c2, rt0.c0 FROM t0, rt0 FULL OUTER JOIN rt1 ON ((((NULL) NOT BETWEEN (rt1.c0) AND (rt0.c0)))-(CASE rt1.c2  WHEN rt1.c0 THEN 0.48026695744168935 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN t0.c1 ELSE rt1.c4 END)) GROUP BY rt1.c2, rt1.c1, rt1.c4, rt1.c5, rt1.c3, t0.c64, rt0.c1, rt1.c0, t0.c1, t0.c0, rt0.c2, rt0.c0;
SELECT rt0.c0, rt0.c1, t0.c64, t0.c0, t0.c1 FROM rt0, t0 GROUP BY rt0.c0, rt0.c1, t0.c64, t0.c0, t0.c1;
SELECT rt0.c0, rt0.c1, t0.c64, t0.c0, t0.c1 FROM rt0, t0 GROUP BY rt0.c0, rt0.c1, t0.c64, t0.c0, t0.c1 HAVING GROUP_CONCAT(AVG(rt0.c0)) UNION ALL SELECT rt0.c0, rt0.c1, t0.c64, t0.c0, t0.c1 FROM rt0, t0 GROUP BY rt0.c0, rt0.c1, t0.c64, t0.c0, t0.c1 HAVING (NOT (GROUP_CONCAT(AVG(rt0.c0)))) UNION ALL SELECT rt0.c0, rt0.c1, t0.c64, t0.c0, t0.c1 FROM rt0, t0 GROUP BY rt0.c0, rt0.c1, t0.c64, t0.c0, t0.c1 HAVING ((GROUP_CONCAT(AVG(rt0.c0))) ISNULL);
SELECT rt0.c1, rt0.c0 FROM t0, rt1, rt0;
SELECT rt0.c1, rt0.c0 FROM t0, rt1, rt0 WHERE (((((((((((rt1.c6)OR(rt1.c3)))AND(t0.c0)))OR(rt1.c5)))AND('-1513891202')))<=(NULL))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM t0, rt1, rt0 WHERE ((NOT (((((((((((rt1.c6)OR(rt1.c3)))AND(t0.c0)))OR(rt1.c5)))AND('-1513891202')))<=(NULL))))) UNION ALL SELECT rt0.c1, rt0.c0 FROM t0, rt1, rt0 WHERE (((((((((((((rt1.c6)OR(rt1.c3)))AND(t0.c0)))OR(rt1.c5)))AND('-1513891202')))<=(NULL))) ISNULL));
SELECT rt0.c1, rt0.c0 FROM t0, rt1, rt0;
SELECT DISTINCT t0.c64, t0.c1 FROM t0;
SELECT DISTINCT t0.c64, t0.c1 FROM t0 WHERE (LIKELIHOOD(DISTINCT t0.c0 COLLATE RTRIM, 0.960911244039967)) UNION SELECT DISTINCT t0.c64, t0.c1 FROM t0 WHERE ((NOT (LIKELIHOOD(DISTINCT t0.c0 COLLATE RTRIM, 0.960911244039967)))) UNION SELECT DISTINCT t0.c64, t0.c1 FROM t0 WHERE (((LIKELIHOOD(DISTINCT t0.c0 COLLATE RTRIM, 0.960911244039967)) ISNULL));
SELECT DISTINCT t0.c64, t0.c1 FROM t0;
SELECT ALL t0.c64, t0.c0, t0.c1 FROM t0 GROUP BY t0.c64, t0.c0, t0.c1;
SELECT t0.c64, t0.c0, t0.c1 FROM t0 WHERE (t0.c0) GROUP BY t0.c64, t0.c0, t0.c1 UNION SELECT ALL t0.c64, t0.c0, t0.c1 FROM t0 WHERE ((NOT (t0.c0))) GROUP BY t0.c64, t0.c0, t0.c1 UNION SELECT ALL t0.c64, t0.c0, t0.c1 FROM t0 WHERE (((t0.c0) ISNULL)) GROUP BY t0.c64, t0.c0, t0.c1;
SELECT ALL t0.c64, t0.c0, t0.c1 FROM t0 GROUP BY t0.c64, t0.c0, t0.c1;
SELECT t0.c64, t0.c0 FROM t0 GROUP BY t0.c64, t0.c0;
SELECT t0.c64, t0.c0 FROM t0 GROUP BY t0.c64, t0.c0 HAVING ((TOTAL(TOTAL(t0.c1)))&(AVG(SUM(MIN(COUNT(SUM(t0.c64))))))) UNION ALL SELECT t0.c64, t0.c0 FROM t0 GROUP BY t0.c64, t0.c0 HAVING (NOT (((TOTAL(TOTAL(t0.c1)))&(AVG(SUM(MIN(COUNT(SUM(t0.c64))))))))) UNION ALL SELECT t0.c64, t0.c0 FROM t0 GROUP BY t0.c64, t0.c0 HAVING ((((TOTAL(TOTAL(t0.c1)))&(AVG(SUM(MIN(COUNT(SUM(t0.c64)))))))) ISNULL);
SELECT MAX(((CAST(0x4c8fdc50 AS BLOB))/(-6.47959307E8))) FROM t0, rt1 ORDER BY CASE ((rt1.c1) IS FALSE)  WHEN CAST(rt1.c0 AS INTEGER) THEN ((rt1.c3)<>(rt1.c0)) ELSE rt1.c3 END ASC  NULLS LAST, x''  NULLS FIRST, ((0.2857341316141101) BETWEEN ((rt1.c4 IN (rt1.c4))) AND (1742816098)) ASC;
SELECT ALL * FROM rt1, t0;
SELECT ALL * FROM rt1, t0 WHERE (rt1.c4) UNION ALL SELECT ALL * FROM rt1, t0 WHERE ((NOT (rt1.c4))) UNION ALL SELECT * FROM rt1, t0 WHERE (((rt1.c4) ISNULL));
SELECT ALL * FROM rt1, t0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (CASE WHEN ((rt1.c6) ISNULL) THEN (rt1.c5 IN ()) WHEN ((rt1.c0)LIKE(rt1.c1)) THEN ((rt1.c3)<=(rt1.c5)) WHEN rt1.c2 COLLATE RTRIM THEN (('0.2613649127198123') IS TRUE) ELSE CASE rt1.c3  WHEN rt1.c5 THEN rt1.c2 END END) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (CASE WHEN ((rt1.c6) ISNULL) THEN (rt1.c5 IN ()) WHEN ((rt1.c0)LIKE(rt1.c1)) THEN ((rt1.c3)<=(rt1.c5)) WHEN rt1.c2 COLLATE RTRIM THEN (('0.2613649127198123') IS TRUE) ELSE CASE rt1.c3  WHEN rt1.c5 THEN rt1.c2 END END))) UNION SELECT DISTINCT * FROM rt1 WHERE (((CASE WHEN ((rt1.c6) ISNULL) THEN (rt1.c5 IN ()) WHEN ((rt1.c0)LIKE(rt1.c1)) THEN ((rt1.c3)<=(rt1.c5)) WHEN rt1.c2 COLLATE RTRIM THEN (('0.2613649127198123') IS TRUE) ELSE CASE rt1.c3  WHEN rt1.c5 THEN rt1.c2 END END) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT rt1.c5, rt1.c1 FROM rt1, rt0 GROUP BY rt1.c5, rt1.c1;
SELECT rt1.c5, rt1.c1 FROM rt1, rt0 WHERE (NULL) GROUP BY rt1.c5, rt1.c1 UNION SELECT ALL rt1.c5, rt1.c1 FROM rt1, rt0 WHERE ((NOT (NULL))) GROUP BY rt1.c5, rt1.c1 UNION SELECT ALL rt1.c5, rt1.c1 FROM rt1, rt0 WHERE (((NULL) ISNULL)) GROUP BY rt1.c5, rt1.c1;
SELECT rt1.c5, rt1.c1 FROM rt1, rt0 GROUP BY rt1.c5, rt1.c1;
SELECT rt0.c2, rt0.c1, t0.c0 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1, t0.c0;
SELECT ALL rt0.c2, rt0.c1, t0.c0 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1, t0.c0 HAVING MAX(SUM(rt0.c0)) UNION ALL SELECT rt0.c2, rt0.c1, t0.c0 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1, t0.c0 HAVING (NOT (MAX(SUM(rt0.c0)))) UNION ALL SELECT ALL rt0.c2, rt0.c1, t0.c0 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1, t0.c0 HAVING ((MAX(SUM(rt0.c0))) ISNULL);
SELECT t0.c1, rt0.c0, t0.c64, rt0.c2, rt0.c1 FROM t0, rt0;
SELECT ALL t0.c1, rt0.c0, t0.c64, rt0.c2, rt0.c1 FROM t0, rt0 WHERE (((t0.c64 IN (t0.c0)) IN ())) UNION ALL SELECT t0.c1, rt0.c0, t0.c64, rt0.c2, rt0.c1 FROM t0, rt0 WHERE ((NOT (((t0.c64 IN (t0.c0)) IN ())))) UNION ALL SELECT ALL t0.c1, rt0.c0, t0.c64, rt0.c2, rt0.c1 FROM t0, rt0 WHERE (((((t0.c64 IN (t0.c0)) IN ())) ISNULL));
SELECT t0.c1, rt0.c0, t0.c64, rt0.c2, rt0.c1 FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt1;
SELECT DISTINCT * FROM t0, rt1 WHERE (((((rt1.c6) NOT BETWEEN (t0.c1) AND (rt1.c2))) BETWEEN (0.943809028574218 COLLATE NOCASE) AND ((- (rt1.c2))))) UNION SELECT DISTINCT * FROM t0, rt1 WHERE ((NOT (((((rt1.c6) NOT BETWEEN (t0.c1) AND (rt1.c2))) BETWEEN (0.943809028574218 COLLATE NOCASE) AND ((- (rt1.c2))))))) UNION SELECT DISTINCT * FROM t0, rt1 WHERE (((((((rt1.c6) NOT BETWEEN (t0.c1) AND (rt1.c2))) BETWEEN (0.943809028574218 COLLATE NOCASE) AND ((- (rt1.c2))))) ISNULL));
SELECT DISTINCT * FROM t0, rt1;
SELECT ALL rt0.c1, t0.c64, t0.c0, t0.c1, rt0.c0 FROM rt0, t0 GROUP BY rt0.c1, t0.c64, t0.c0, t0.c1, rt0.c0;
SELECT ALL rt0.c1, t0.c64, t0.c0, t0.c1, rt0.c0 FROM rt0, t0 WHERE (((rt0.c0)IS(rt0.c1)) COLLATE RTRIM) GROUP BY rt0.c1, t0.c64, t0.c0, t0.c1, rt0.c0 UNION SELECT rt0.c1, t0.c64, t0.c0, t0.c1, rt0.c0 FROM rt0, t0 WHERE ((NOT (((rt0.c0)IS(rt0.c1)) COLLATE RTRIM))) GROUP BY rt0.c1, t0.c64, t0.c0, t0.c1, rt0.c0 UNION SELECT rt0.c1, t0.c64, t0.c0, t0.c1, rt0.c0 FROM rt0, t0 WHERE (((((rt0.c0)IS(rt0.c1)) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c1, t0.c64, t0.c0, t0.c1, rt0.c0;
SELECT ALL rt0.c1, t0.c64, t0.c0, t0.c1, rt0.c0 FROM rt0, t0 GROUP BY rt0.c1, t0.c64, t0.c0, t0.c1, rt0.c0;
SELECT ALL rt1.c1, t0.c64, rt1.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt1 INNER JOIN t0 ON '1657091037' LEFT OUTER JOIN rt0 ON (rt1.c1 IN (rt1.c2)) COLLATE RTRIM GROUP BY rt1.c1, t0.c64, rt1.c0, rt0.c1, rt0.c2, rt0.c0;
SELECT rt1.c1, t0.c64, rt1.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt1 INNER JOIN t0 ON '1657091037' LEFT OUTER JOIN rt0 ON (rt1.c1 IN (rt1.c2)) COLLATE RTRIM GROUP BY rt1.c1, t0.c64, rt1.c0, rt0.c1, rt0.c2, rt0.c0 HAVING CASE WHEN COUNT(SUM(rt1.c3)) COLLATE RTRIM THEN (~ (t0.c1)) ELSE GROUP_CONCAT('nQ') END UNION ALL SELECT ALL rt1.c1, t0.c64, rt1.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt1 INNER JOIN t0 ON '1657091037' LEFT OUTER JOIN rt0 ON (rt1.c1 IN (rt1.c2)) COLLATE RTRIM GROUP BY rt1.c1, t0.c64, rt1.c0, rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (CASE WHEN COUNT(SUM(rt1.c3)) COLLATE RTRIM THEN (~ (t0.c1)) ELSE GROUP_CONCAT('nQ') END)) UNION ALL SELECT ALL rt1.c1, t0.c64, rt1.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt1 INNER JOIN t0 ON '1657091037' LEFT OUTER JOIN rt0 ON (rt1.c1 IN (rt1.c2)) COLLATE RTRIM GROUP BY rt1.c1, t0.c64, rt1.c0, rt0.c1, rt0.c2, rt0.c0 HAVING ((CASE WHEN COUNT(SUM(rt1.c3)) COLLATE RTRIM THEN (~ (t0.c1)) ELSE GROUP_CONCAT('nQ') END) ISNULL);
SELECT * FROM rt0, rt1 NATURAL JOIN t0;
SELECT * FROM rt0, rt1 NATURAL JOIN t0 WHERE (((((t0.c64) NOT BETWEEN (rt1.c0) AND (rt0.c0)))=(((rt0.c0)IS(rt1.c1))))) UNION ALL SELECT ALL * FROM rt0, rt1 NATURAL JOIN t0 WHERE ((NOT (((((t0.c64) NOT BETWEEN (rt1.c0) AND (rt0.c0)))=(((rt0.c0)IS(rt1.c1))))))) UNION ALL SELECT ALL * FROM rt0, rt1 NATURAL JOIN t0 WHERE (((((((t0.c64) NOT BETWEEN (rt1.c0) AND (rt0.c0)))==(((rt0.c0)IS(rt1.c1))))) ISNULL));
SELECT * FROM rt0, rt1 NATURAL JOIN t0;
SELECT DISTINCT rt0.c0, rt1.c0, rt1.c4, t0.c1, rt1.c5, rt1.c6, t0.c64, rt0.c1, rt1.c1, t0.c0, rt0.c2 FROM rt0, t0, rt1;
SELECT DISTINCT rt0.c0, rt1.c0, rt1.c4, t0.c1, rt1.c5, rt1.c6, t0.c64, rt0.c1, rt1.c1, t0.c0, rt0.c2 FROM rt0, t0, rt1 WHERE ((((((rt1.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))) IS FALSE)) UNION SELECT DISTINCT rt0.c0, rt1.c0, rt1.c4, t0.c1, rt1.c5, rt1.c6, t0.c64, rt0.c1, rt1.c1, t0.c0, rt0.c2 FROM rt0, t0, rt1 WHERE ((NOT ((((((rt1.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))) IS FALSE)))) UNION SELECT DISTINCT rt0.c0, rt1.c0, rt1.c4, t0.c1, rt1.c5, rt1.c6, t0.c64, rt0.c1, rt1.c1, t0.c0, rt0.c2 FROM rt0, t0, rt1 WHERE ((((((((rt1.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))) IS FALSE)) ISNULL));
SELECT DISTINCT rt0.c0, rt1.c0, rt1.c4, t0.c1, rt1.c5, rt1.c6, t0.c64, rt0.c1, rt1.c1, t0.c0, rt0.c2 FROM rt0, t0, rt1;
SELECT rt0.c0, rt1.c0, rt1.c3 FROM rt1, rt0 GROUP BY rt0.c0, rt1.c0, rt1.c3;
SELECT rt0.c0, rt1.c0, rt1.c3 FROM rt1, rt0 WHERE (rt0.c1) GROUP BY rt0.c0, rt1.c0, rt1.c3 UNION SELECT rt0.c0, rt1.c0, rt1.c3 FROM rt1, rt0 WHERE ((NOT (rt0.c1))) GROUP BY rt0.c0, rt1.c0, rt1.c3 UNION SELECT ALL rt0.c0, rt1.c0, rt1.c3 FROM rt1, rt0 WHERE (((rt0.c1) ISNULL)) GROUP BY rt0.c0, rt1.c0, rt1.c3;
SELECT rt0.c0, rt1.c0, rt1.c3 FROM rt1, rt0 GROUP BY rt0.c0, rt1.c0, rt1.c3;
SELECT ALL t0.c64, t0.c0 FROM t0 GROUP BY t0.c64, t0.c0;
SELECT t0.c64, t0.c0 FROM t0 GROUP BY t0.c64, t0.c0 HAVING SUM(COUNT(t0.c64)) UNION ALL SELECT ALL t0.c64, t0.c0 FROM t0 GROUP BY t0.c64, t0.c0 HAVING (NOT (SUM(COUNT(t0.c64)))) UNION ALL SELECT ALL t0.c64, t0.c0 FROM t0 GROUP BY t0.c64, t0.c0 HAVING ((SUM(COUNT(t0.c64))) ISNULL);
SELECT ALL * FROM t0, rt1;
SELECT * FROM t0, rt1 WHERE (((t0.c0) IS TRUE)) UNION ALL SELECT * FROM t0, rt1 WHERE ((NOT (((t0.c0) IS TRUE)))) UNION ALL SELECT * FROM t0, rt1 WHERE (((((t0.c0) IS TRUE)) ISNULL));
SELECT ALL * FROM t0, rt1;
SELECT DISTINCT * FROM rt0, t0, rt1;
SELECT DISTINCT * FROM rt0, t0, rt1 WHERE ((((~ (rt1.c5)))<(rt1.c0))) UNION SELECT DISTINCT * FROM rt0, t0, rt1 WHERE ((NOT ((((~ (rt1.c5)))<(rt1.c0))))) UNION SELECT DISTINCT * FROM rt0, t0, rt1 WHERE ((((((~ (rt1.c5)))<(rt1.c0))) ISNULL));
SELECT DISTINCT * FROM rt0, t0, rt1;
SELECT ALL rt0.c1, rt1.c0, rt1.c6, rt1.c4, rt0.c2, rt0.c0, rt1.c2, rt1.c1 FROM rt0, rt1 GROUP BY rt0.c1, rt1.c0, rt1.c6, rt1.c4, rt0.c2, rt0.c0, rt1.c2, rt1.c1;
SELECT rt0.c1, rt1.c0, rt1.c6, rt1.c4, rt0.c2, rt0.c0, rt1.c2, rt1.c1 FROM rt0, rt1 WHERE (CAST(((rt1.c2)>(rt0.c2)) AS NUMERIC)) GROUP BY rt0.c1, rt1.c0, rt1.c6, rt1.c4, rt0.c2, rt0.c0, rt1.c2, rt1.c1 UNION SELECT ALL rt0.c1, rt1.c0, rt1.c6, rt1.c4, rt0.c2, rt0.c0, rt1.c2, rt1.c1 FROM rt0, rt1 WHERE ((NOT (CAST(((rt1.c2)>(rt0.c2)) AS NUMERIC)))) GROUP BY rt0.c1, rt1.c0, rt1.c6, rt1.c4, rt0.c2, rt0.c0, rt1.c2, rt1.c1 UNION SELECT rt0.c1, rt1.c0, rt1.c6, rt1.c4, rt0.c2, rt0.c0, rt1.c2, rt1.c1 FROM rt0, rt1 WHERE (((CAST(((rt1.c2)>(rt0.c2)) AS NUMERIC)) ISNULL)) GROUP BY rt0.c1, rt1.c0, rt1.c6, rt1.c4, rt0.c2, rt0.c0, rt1.c2, rt1.c1;
SELECT ALL rt0.c1, rt1.c0, rt1.c6, rt1.c4, rt0.c2, rt0.c0, rt1.c2, rt1.c1 FROM rt0, rt1 GROUP BY rt0.c1, rt1.c0, rt1.c6, rt1.c4, rt0.c2, rt0.c0, rt1.c2, rt1.c1;
SELECT rt0.c0, rt1.c0 FROM t0, rt0, rt1 GROUP BY rt0.c0, rt1.c0;
SELECT rt0.c0, rt1.c0 FROM t0, rt0, rt1 GROUP BY rt0.c0, rt1.c0 HAVING SUM(GROUP_CONCAT(GROUP_CONCAT(t0.c1))) UNION ALL SELECT ALL rt0.c0, rt1.c0 FROM t0, rt0, rt1 GROUP BY rt0.c0, rt1.c0 HAVING (NOT (SUM(GROUP_CONCAT(GROUP_CONCAT(t0.c1))))) UNION ALL SELECT rt0.c0, rt1.c0 FROM t0, rt0, rt1 GROUP BY rt0.c0, rt1.c0 HAVING ((SUM(GROUP_CONCAT(GROUP_CONCAT(t0.c1)))) ISNULL);
SELECT ALL MIN((CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END IN (json_valid(rt0.c1), (NOT (rt0.c0))))) FROM rt0;
SELECT * FROM rt0 RIGHT OUTER JOIN rt1 ON ((((1264267488)OR(CASE rt1.c3  WHEN t0.c0 THEN rt0.c1 WHEN rt1.c0 THEN rt1.c6 WHEN rt1.c1 THEN rt0.c0 ELSE rt1.c1 END)))OR((- (rt1.c2)))) FULL OUTER JOIN t0 ON (+ (((rt1.c0) ISNULL)));
SELECT DISTINCT * FROM t0, rt1;
SELECT DISTINCT * FROM t0, rt1 WHERE (NULL) UNION SELECT DISTINCT * FROM t0, rt1 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM t0, rt1 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM t0, rt1;
SELECT ALL rt1.c5, rt1.c1, rt1.c2, rt1.c3 FROM rt1 GROUP BY rt1.c5, rt1.c1, rt1.c2, rt1.c3;
SELECT rt1.c5, rt1.c1, rt1.c2, rt1.c3 FROM rt1 WHERE (((TYPEOF(rt1.c0)) BETWEEN (rt1.c0 COLLATE RTRIM) AND ((rt1.c6 IN ())))) GROUP BY rt1.c5, rt1.c1, rt1.c2, rt1.c3 UNION SELECT ALL rt1.c5, rt1.c1, rt1.c2, rt1.c3 FROM rt1 WHERE ((NOT (((TYPEOF(rt1.c0)) BETWEEN (rt1.c0 COLLATE RTRIM) AND ((rt1.c6 IN ())))))) GROUP BY rt1.c5, rt1.c1, rt1.c2, rt1.c3 UNION SELECT ALL rt1.c5, rt1.c1, rt1.c2, rt1.c3 FROM rt1 WHERE (((((TYPEOF(rt1.c0)) BETWEEN (rt1.c0 COLLATE RTRIM) AND ((rt1.c6 IN ())))) ISNULL)) GROUP BY rt1.c5, rt1.c1, rt1.c2, rt1.c3;
SELECT ALL rt1.c5, rt1.c1, rt1.c2, rt1.c3 FROM rt1 GROUP BY rt1.c5, rt1.c1, rt1.c2, rt1.c3;
SELECT ALL rt0.c1, t0.c1, t0.c0, t0.c64, rt0.c2 FROM rt0, t0 GROUP BY rt0.c1, t0.c1, t0.c0, t0.c64, rt0.c2;
SELECT rt0.c1, t0.c1, t0.c0, t0.c64, rt0.c2 FROM rt0, t0 GROUP BY rt0.c1, t0.c1, t0.c0, t0.c64, rt0.c2 HAVING MIN(CAST(t0.c1 AS NUMERIC)) UNION ALL SELECT ALL rt0.c1, t0.c1, t0.c0, t0.c64, rt0.c2 FROM rt0, t0 GROUP BY rt0.c1, t0.c1, t0.c0, t0.c64, rt0.c2 HAVING (NOT (MIN(CAST(t0.c1 AS NUMERIC)))) UNION ALL SELECT ALL rt0.c1, t0.c1, t0.c0, t0.c64, rt0.c2 FROM rt0, t0 GROUP BY rt0.c1, t0.c1, t0.c0, t0.c64, rt0.c2 HAVING ((MIN(CAST(t0.c1 AS NUMERIC))) ISNULL);
SELECT ALL rt0.c1, t0.c1, t0.c0, t0.c64, rt0.c2 FROM rt0, t0 GROUP BY rt0.c1, t0.c1, t0.c0, t0.c64, rt0.c2;
SELECT rt0.c1, t0.c1, t0.c0, t0.c64, rt0.c2 FROM rt0, t0 GROUP BY rt0.c1, t0.c1, t0.c0, t0.c64, rt0.c2 HAVING MIN(CAST(t0.c1 AS NUMERIC)) UNION ALL SELECT ALL rt0.c1, t0.c1, t0.c0, t0.c64, rt0.c2 FROM rt0, t0 GROUP BY rt0.c1, t0.c1, t0.c0, t0.c64, rt0.c2 HAVING (NOT (MIN(CAST(t0.c1 AS NUMERIC)))) UNION ALL SELECT ALL rt0.c1, t0.c1, t0.c0, t0.c64, rt0.c2 FROM rt0, t0 GROUP BY rt0.c1, t0.c1, t0.c0, t0.c64, rt0.c2 HAVING ((MIN(CAST(t0.c1 AS NUMERIC))) ISNULL);
SELECT ALL rt0.c1, t0.c1, t0.c0, t0.c64, rt0.c2 FROM rt0, t0 GROUP BY rt0.c1, t0.c1, t0.c0, t0.c64, rt0.c2;
SELECT * FROM rt0 LEFT OUTER JOIN rt1 ON ((CAST(rt1.c3 AS NUMERIC)) NOTNULL);
SELECT ALL * FROM rt0 LEFT OUTER JOIN rt1 ON ((CAST(rt1.c3 AS NUMERIC)) NOTNULL) WHERE ((((('-1375791944')/(rt1.c0)))AND(CAST(rt1.c5 AS TEXT)))) UNION ALL SELECT ALL * FROM rt0 LEFT OUTER JOIN rt1 ON ((CAST(rt1.c3 AS NUMERIC)) NOTNULL) WHERE ((NOT ((((('-1375791944')/(rt1.c0)))AND(CAST(rt1.c5 AS TEXT)))))) UNION ALL SELECT ALL * FROM rt0 LEFT OUTER JOIN rt1 ON ((CAST(rt1.c3 AS NUMERIC)) NOTNULL) WHERE ((((((('-1375791944')/(rt1.c0)))AND(CAST(rt1.c5 AS TEXT)))) ISNULL));
SELECT * FROM rt0 LEFT OUTER JOIN rt1 ON ((CAST(rt1.c3 AS NUMERIC)) NOTNULL);
SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2, rt1.c6, rt1.c3, rt1.c5 FROM rt1;
SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2, rt1.c6, rt1.c3, rt1.c5 FROM rt1 NOT INDEXED WHERE (CASE WHEN (rt1.c5 IN (rt1.c1)) THEN IFNULL(rt1.c2, rt1.c3) WHEN ((((((((rt1.c2)AND(rt1.c5)))OR(rt1.c2)))OR(rt1.c2)))AND(rt1.c3)) THEN rt1.c0 COLLATE BINARY WHEN ((rt1.c5) NOT BETWEEN (rt1.c5) AND (rt1.c0)) THEN ((NULL) NOT BETWEEN (rt1.c6) AND (rt1.c6)) ELSE UNLIKELY(rt1.c5) END) UNION SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2, rt1.c6, rt1.c3, rt1.c5 FROM rt1 WHERE ((NOT (CASE WHEN (rt1.c5 IN (rt1.c1)) THEN IFNULL(rt1.c2, rt1.c3) WHEN ((((((((rt1.c2)AND(rt1.c5)))OR(rt1.c2)))OR(rt1.c2)))AND(rt1.c3)) THEN rt1.c0 COLLATE BINARY WHEN ((rt1.c5) NOT BETWEEN (rt1.c5) AND (rt1.c0)) THEN ((NULL) NOT BETWEEN (rt1.c6) AND (rt1.c6)) ELSE UNLIKELY(rt1.c5) END))) UNION SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2, rt1.c6, rt1.c3, rt1.c5 FROM rt1 WHERE (((CASE WHEN (rt1.c5 IN (rt1.c1)) THEN IFNULL(rt1.c2, rt1.c3) WHEN ((((((((rt1.c2)AND(rt1.c5)))OR(rt1.c2)))OR(rt1.c2)))AND(rt1.c3)) THEN rt1.c0 COLLATE BINARY WHEN ((rt1.c5) NOT BETWEEN (rt1.c5) AND (rt1.c0)) THEN ((NULL) NOT BETWEEN (rt1.c6) AND (rt1.c6)) ELSE UNLIKELY(rt1.c5) END) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2, rt1.c6, rt1.c3, rt1.c5 FROM rt1;
SELECT rt1.c2, rt1.c3 FROM rt1 GROUP BY rt1.c2, rt1.c3;
SELECT rt1.c2, rt1.c3 FROM rt1 WHERE (CASE CAST(rt1.c1 AS REAL)  WHEN x'' THEN ((((rt1.c6)AND(rt1.c6)))OR(rt1.c2)) WHEN CAST(rt1.c6 AS REAL) THEN CAST('-668677626' AS BLOB) WHEN ((rt1.c1)||(rt1.c5)) THEN (rt1.c3 IN (rt1.c5)) ELSE NULL COLLATE BINARY END) GROUP BY rt1.c2, rt1.c3 UNION SELECT ALL rt1.c2, rt1.c3 FROM rt1 WHERE ((NOT (CASE CAST(rt1.c1 AS REAL)  WHEN x'' THEN ((((rt1.c6)AND(rt1.c6)))OR(rt1.c2)) WHEN CAST(rt1.c6 AS REAL) THEN CAST('-668677626' AS BLOB) WHEN ((rt1.c1)||(rt1.c5)) THEN (rt1.c3 IN (rt1.c5)) ELSE NULL COLLATE BINARY END))) GROUP BY rt1.c2, rt1.c3 UNION SELECT ALL rt1.c2, rt1.c3 FROM rt1 WHERE (((CASE CAST(rt1.c1 AS REAL)  WHEN x'' THEN ((((rt1.c6)AND(rt1.c6)))OR(rt1.c2)) WHEN CAST(rt1.c6 AS REAL) THEN CAST('-668677626' AS BLOB) WHEN ((rt1.c1)||(rt1.c5)) THEN (rt1.c3 IN (rt1.c5)) ELSE NULL COLLATE BINARY END) ISNULL)) GROUP BY rt1.c2, rt1.c3;
SELECT rt1.c2, rt1.c3 FROM rt1 GROUP BY rt1.c2, rt1.c3;
SELECT ALL t0.c64 FROM rt1, t0 GROUP BY t0.c64;
SELECT t0.c64 FROM rt1, t0 GROUP BY t0.c64 HAVING TOTAL(MIN(rt1.c4)) UNION ALL SELECT t0.c64 FROM rt1, t0 GROUP BY t0.c64 HAVING (NOT (TOTAL(MIN(rt1.c4)))) UNION ALL SELECT t0.c64 FROM rt1, t0 GROUP BY t0.c64 HAVING ((TOTAL(MIN(rt1.c4))) ISNULL);
SELECT ALL * FROM rt1, t0, rt0;
SELECT ALL * FROM rt1, t0, rt0 WHERE (CASE WHEN rt0.c2 THEN (rt1.c6 IN ()) ELSE 1284496464 END) UNION ALL SELECT ALL * FROM rt1, t0, rt0 WHERE ((NOT (CASE WHEN rt0.c2 THEN (rt1.c6 IN ()) ELSE 1284496464 END))) UNION ALL SELECT * FROM rt1, t0, rt0 WHERE (((CASE WHEN rt0.c2 THEN (rt1.c6 IN ()) ELSE 1284496464 END) ISNULL));
SELECT ALL * FROM rt1, t0, rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((rt0.c2)||(rt0.c1)))IS((~ (rt0.c1))))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c2)||(rt0.c1)))IS((~ (rt0.c1))))))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((((rt0.c2)||(rt0.c1)))IS((~ (rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (((((rt0.c1)GLOB(rt0.c2))) IS FALSE)) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c1)GLOB(rt0.c2))) IS FALSE)))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (((((((rt0.c1)GLOB(rt0.c2))) IS FALSE)) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT t0.c0, rt1.c6, rt1.c5, t0.c1, rt0.c2, rt1.c0 FROM rt0 LEFT OUTER JOIN t0 ON CASE WHEN rt0.c2 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c3 WHEN t0.c1 THEN rt1.c5 ELSE t0.c64 END COLLATE RTRIM LEFT OUTER JOIN rt1 ON (((NOT (rt1.c1))) ISNULL) GROUP BY t0.c0, rt1.c6, rt1.c5, t0.c1, rt0.c2, rt1.c0;
SELECT ALL rt0.c1, rt0.c0, t0.c64, rt1.c3, rt1.c2 FROM t0, rt0 LEFT OUTER JOIN rt1 ON ((rt1.c1) IS TRUE);
SELECT rt0.c1, rt0.c0, t0.c64, rt1.c3, rt1.c2 FROM t0, rt0 LEFT OUTER JOIN rt1 ON ((rt1.c1) IS TRUE) WHERE ((~ (((((rt1.c1)OR(t0.c1)))OR(rt1.c4))))) UNION ALL SELECT rt0.c1, rt0.c0, t0.c64, rt1.c3, rt1.c2 FROM t0, rt0 LEFT OUTER JOIN rt1 ON ((rt1.c1) IS TRUE) WHERE ((NOT ((~ (((((rt1.c1)OR(t0.c1)))OR(rt1.c4))))))) UNION ALL SELECT rt0.c1, rt0.c0, t0.c64, rt1.c3, rt1.c2 FROM t0, rt0 LEFT OUTER JOIN rt1 ON ((rt1.c1) IS TRUE) WHERE ((((~ (((((rt1.c1)OR(t0.c1)))OR(rt1.c4))))) ISNULL));
SELECT ALL rt0.c1, rt0.c0, t0.c64, rt1.c3, rt1.c2 FROM t0, rt0 LEFT OUTER JOIN rt1 ON ((rt1.c1) IS TRUE);
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (TRIM(DISTINCT CAST(rt0.c2 AS NUMERIC), ((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (TRIM(DISTINCT CAST(rt0.c2 AS NUMERIC), ((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((TRIM(DISTINCT CAST(rt0.c2 AS NUMERIC), ((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1, rt1.c3 FROM t0, rt0, rt1 GROUP BY rt0.c1, rt1.c3;
SELECT ALL rt0.c1, rt1.c3 FROM t0, rt0 NOT INDEXED, rt1 WHERE (CAST(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt1.c6)) AS INTEGER)) GROUP BY rt0.c1, rt1.c3 UNION SELECT ALL rt0.c1, rt1.c3 FROM t0, rt0, rt1 WHERE ((NOT (CAST(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt1.c6)) AS INTEGER)))) GROUP BY rt0.c1, rt1.c3 UNION SELECT ALL rt0.c1, rt1.c3 FROM t0, rt0, rt1 NOT INDEXED WHERE (((CAST(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt1.c6)) AS INTEGER)) ISNULL)) GROUP BY rt0.c1, rt1.c3;
SELECT rt0.c1, rt1.c3 FROM t0, rt0, rt1 GROUP BY rt0.c1, rt1.c3;
SELECT rt0.c2, rt1.c3, rt1.c6, rt0.c1, rt1.c1, rt1.c5 FROM rt0, rt1 GROUP BY rt0.c2, rt1.c3, rt1.c6, rt0.c1, rt1.c1, rt1.c5;
SELECT ALL rt0.c2, rt1.c3, rt1.c6, rt0.c1, rt1.c1, rt1.c5 FROM rt0, rt1 GROUP BY rt0.c2, rt1.c3, rt1.c6, rt0.c1, rt1.c1, rt1.c5 HAVING TOTAL(((COUNT(*))<(SUM(MAX(rt1.c1))))) UNION ALL SELECT rt0.c2, rt1.c3, rt1.c6, rt0.c1, rt1.c1, rt1.c5 FROM rt0, rt1 GROUP BY rt0.c2, rt1.c3, rt1.c6, rt0.c1, rt1.c1, rt1.c5 HAVING (NOT (TOTAL(((COUNT(*))<(SUM(MAX(rt1.c1))))))) UNION ALL SELECT rt0.c2, rt1.c3, rt1.c6, rt0.c1, rt1.c1, rt1.c5 FROM rt0, rt1 GROUP BY rt0.c2, rt1.c3, rt1.c6, rt0.c1, rt1.c1, rt1.c5 HAVING ((TOTAL(((COUNT(*))<(SUM(MAX(rt1.c1)))))) ISNULL);
SELECT ALL rt0.c0, t0.c0, rt0.c2, rt0.c1 FROM t0, rt0;
SELECT ALL rt0.c0, t0.c0, rt0.c2, rt0.c1 FROM t0, rt0 WHERE (CAST(((t0.c64)IS NOT(rt0.c1)) AS REAL)) UNION ALL SELECT rt0.c0, t0.c0, rt0.c2, rt0.c1 FROM t0, rt0 WHERE ((NOT (CAST(((t0.c64)IS NOT(rt0.c1)) AS REAL)))) UNION ALL SELECT rt0.c0, t0.c0, rt0.c2, rt0.c1 FROM t0, rt0 WHERE (((CAST(((t0.c64)IS NOT(rt0.c1)) AS REAL)) ISNULL));
SELECT ALL rt0.c0, t0.c0, rt0.c2, rt0.c1 FROM t0, rt0;
SELECT DISTINCT rt1.c1, rt1.c4, rt1.c6, rt1.c2, rt1.c3 FROM t0, rt1;
SELECT DISTINCT rt1.c1, rt1.c4, rt1.c6, rt1.c2, rt1.c3 FROM t0, rt1 WHERE (TRIM(CAST(rt1.c6 AS TEXT))) UNION SELECT DISTINCT rt1.c1, rt1.c4, rt1.c6, rt1.c2, rt1.c3 FROM t0, rt1 WHERE ((NOT (TRIM(CAST(rt1.c6 AS TEXT))))) UNION SELECT DISTINCT rt1.c1, rt1.c4, rt1.c6, rt1.c2, rt1.c3 FROM t0, rt1 WHERE (((TRIM(CAST(rt1.c6 AS TEXT))) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c4, rt1.c6, rt1.c2, rt1.c3 FROM t0, rt1;
SELECT ALL rt1.c5, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c5, rt1.c0, rt1.c1;
SELECT ALL rt1.c5, rt1.c0, rt1.c1 FROM rt1 WHERE (CAST(((((NULL)AND('ꚷ(ܹ.j)c')))OR(rt1.c5)) AS TEXT)) GROUP BY rt1.c5, rt1.c0, rt1.c1 UNION SELECT rt1.c5, rt1.c0, rt1.c1 FROM rt1 WHERE ((NOT (CAST(((((NULL)AND('ꚷ(ܹ.j)c')))OR(rt1.c5)) AS TEXT)))) GROUP BY rt1.c5, rt1.c0, rt1.c1 UNION SELECT ALL rt1.c5, rt1.c0, rt1.c1 FROM rt1 WHERE (((CAST(((((NULL)AND('ꚷ(ܹ.j)c')))OR(rt1.c5)) AS TEXT)) ISNULL)) GROUP BY rt1.c5, rt1.c0, rt1.c1;
SELECT ALL rt1.c5, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c5, rt1.c0, rt1.c1;
SELECT ALL t0.c1, rt1.c5 FROM rt0, rt1 NATURAL JOIN t0 GROUP BY t0.c1, rt1.c5;
SELECT t0.c1, rt1.c5 FROM rt0, rt1 NATURAL JOIN t0 GROUP BY t0.c1, rt1.c5 HAVING GROUP_CONCAT(GROUP_CONCAT(TOTAL(t0.c64))) UNION ALL SELECT t0.c1, rt1.c5 FROM rt0, rt1 NATURAL JOIN t0 GROUP BY t0.c1, rt1.c5 HAVING (NOT (GROUP_CONCAT(GROUP_CONCAT(TOTAL(t0.c64))))) UNION ALL SELECT ALL t0.c1, rt1.c5 FROM rt0, rt1 NATURAL JOIN t0 GROUP BY t0.c1, rt1.c5 HAVING ((GROUP_CONCAT(GROUP_CONCAT(TOTAL(t0.c64)))) ISNULL);
SELECT ALL rt1.c1, rt1.c3, rt1.c5 FROM rt1;
SELECT ALL rt1.c1, rt1.c3, rt1.c5 FROM rt1 WHERE (CASE WHEN ((rt1.c1)%(x'')) THEN rt1.c2 COLLATE BINARY WHEN CAST(rt1.c2 AS INTEGER) THEN ((rt1.c2)/(rt1.c4)) WHEN NULL THEN (NOT (rt1.c4)) WHEN CAST(rt1.c3 AS NUMERIC) THEN CAST(rt1.c1 AS REAL) WHEN CASE rt1.c1  WHEN rt1.c3 THEN rt1.c6 END THEN (rt1.c6 IN ()) ELSE ((rt1.c1)>(rt1.c5)) END) UNION ALL SELECT rt1.c1, rt1.c3, rt1.c5 FROM rt1 WHERE ((NOT (CASE WHEN ((rt1.c1)%(x'')) THEN rt1.c2 COLLATE BINARY WHEN CAST(rt1.c2 AS INTEGER) THEN ((rt1.c2)/(rt1.c4)) WHEN NULL THEN (NOT (rt1.c4)) WHEN CAST(rt1.c3 AS NUMERIC) THEN CAST(rt1.c1 AS REAL) WHEN CASE rt1.c1  WHEN rt1.c3 THEN rt1.c6 END THEN (rt1.c6 IN ()) ELSE ((rt1.c1)>(rt1.c5)) END))) UNION ALL SELECT ALL rt1.c1, rt1.c3, rt1.c5 FROM rt1 WHERE (((CASE WHEN ((rt1.c1)%(x'')) THEN rt1.c2 COLLATE BINARY WHEN CAST(rt1.c2 AS INTEGER) THEN ((rt1.c2)/(rt1.c4)) WHEN NULL THEN (NOT (rt1.c4)) WHEN CAST(rt1.c3 AS NUMERIC) THEN CAST(rt1.c1 AS REAL) WHEN CASE rt1.c1  WHEN rt1.c3 THEN rt1.c6 END THEN (rt1.c6 IN ()) ELSE ((rt1.c1)>(rt1.c5)) END) ISNULL));
SELECT ALL rt1.c1, rt1.c3, rt1.c5 FROM rt1;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((((((rt0.c2))<>((rt0.c2)))) NOTNULL)) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT ((((((rt0.c2))!=((rt0.c2)))) NOTNULL)))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((((((((rt0.c2))!=((rt0.c2)))) NOTNULL)) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT ALL t0.c0, rt1.c0, rt1.c3, rt1.c6, rt1.c2, t0.c1, t0.c64, rt1.c5, rt1.c4 FROM t0, rt1 GROUP BY t0.c0, rt1.c0, rt1.c3, rt1.c6, rt1.c2, t0.c1, t0.c64, rt1.c5, rt1.c4;
SELECT t0.c0, rt1.c0, rt1.c3, rt1.c6, rt1.c2, t0.c1, t0.c64, rt1.c5, rt1.c4 FROM t0, rt1 WHERE (((rt1.c1) IS TRUE)) GROUP BY t0.c0, rt1.c0, rt1.c3, rt1.c6, rt1.c2, t0.c1, t0.c64, rt1.c5, rt1.c4 UNION SELECT ALL t0.c0, rt1.c0, rt1.c3, rt1.c6, rt1.c2, t0.c1, t0.c64, rt1.c5, rt1.c4 FROM t0, rt1 WHERE ((NOT (((rt1.c1) IS TRUE)))) GROUP BY t0.c0, rt1.c0, rt1.c3, rt1.c6, rt1.c2, t0.c1, t0.c64, rt1.c5, rt1.c4 UNION SELECT ALL t0.c0, rt1.c0, rt1.c3, rt1.c6, rt1.c2, t0.c1, t0.c64, rt1.c5, rt1.c4 FROM t0, rt1 WHERE (((((rt1.c1) IS TRUE)) ISNULL)) GROUP BY t0.c0, rt1.c0, rt1.c3, rt1.c6, rt1.c2, t0.c1, t0.c64, rt1.c5, rt1.c4;
SELECT ALL t0.c0, rt1.c0, rt1.c3, rt1.c6, rt1.c2, t0.c1, t0.c64, rt1.c5, rt1.c4 FROM t0, rt1 GROUP BY t0.c0, rt1.c0, rt1.c3, rt1.c6, rt1.c2, t0.c1, t0.c64, rt1.c5, rt1.c4;
SELECT ALL rt1.c4, rt1.c1, rt1.c3, rt1.c2, rt1.c0, rt1.c5, rt1.c6 FROM rt1 GROUP BY rt1.c4, rt1.c1, rt1.c3, rt1.c2, rt1.c0, rt1.c5, rt1.c6;
SELECT ALL rt1.c4, rt1.c1, rt1.c3, rt1.c2, rt1.c0, rt1.c5, rt1.c6 FROM rt1 GROUP BY rt1.c4, rt1.c1, rt1.c3, rt1.c2, rt1.c0, rt1.c5, rt1.c6 HAVING GROUP_CONCAT(TOTAL(rt1.c3)) UNION ALL SELECT rt1.c4, rt1.c1, rt1.c3, rt1.c2, rt1.c0, rt1.c5, rt1.c6 FROM rt1 GROUP BY rt1.c4, rt1.c1, rt1.c3, rt1.c2, rt1.c0, rt1.c5, rt1.c6 HAVING (NOT (GROUP_CONCAT(TOTAL(rt1.c3)))) UNION ALL SELECT ALL rt1.c4, rt1.c1, rt1.c3, rt1.c2, rt1.c0, rt1.c5, rt1.c6 FROM rt1 GROUP BY rt1.c4, rt1.c1, rt1.c3, rt1.c2, rt1.c0, rt1.c5, rt1.c6 HAVING ((GROUP_CONCAT(TOTAL(rt1.c3))) ISNULL);
SELECT ALL rt1.c6, rt1.c5, rt1.c1, rt1.c3, t0.c0 FROM t0, rt1;
SELECT ALL rt1.c6, rt1.c5, rt1.c1, rt1.c3, t0.c0 FROM t0, rt1 WHERE (((((((rt1.c3)OR(t0.c64)))OR(rt1.c3)))&(CASE WHEN rt1.c6 THEN rt1.c1 END))) UNION ALL SELECT rt1.c6, rt1.c5, rt1.c1, rt1.c3, t0.c0 FROM t0, rt1 WHERE ((NOT (((((((rt1.c3)OR(t0.c64)))OR(rt1.c3)))&(CASE WHEN rt1.c6 THEN rt1.c1 END))))) UNION ALL SELECT rt1.c6, rt1.c5, rt1.c1, rt1.c3, t0.c0 FROM t0, rt1 WHERE (((((((((rt1.c3)OR(t0.c64)))OR(rt1.c3)))&(CASE WHEN rt1.c6 THEN rt1.c1 END))) ISNULL));
SELECT ALL rt1.c6, rt1.c5, rt1.c1, rt1.c3, t0.c0 FROM t0, rt1;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((0x38c995ea))))>>((rt0.c1 IN ())))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((0X38c995ea))))>>((rt0.c1 IN ())))))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((((((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((0X38c995ea))))>>((rt0.c1 IN ())))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT ALL t0.c0, t0.c1, t0.c64 FROM t0 GROUP BY t0.c0, t0.c1, t0.c64;
SELECT t0.c0, t0.c1, t0.c64 FROM t0 WHERE ((((((t0.c1) NOT BETWEEN (t0.c64) AND (t0.c64)), CAST(t0.c1 AS REAL), ((t0.c64)OR(t0.c64))))<=(((t0.c64 IN ()), (t0.c64 IN ()), t0.c1 COLLATE NOCASE)))) GROUP BY t0.c0, t0.c1, t0.c64 UNION SELECT ALL t0.c0, t0.c1, t0.c64 FROM t0 WHERE ((NOT ((((((t0.c1) NOT BETWEEN (t0.c64) AND (t0.c64)), CAST(t0.c1 AS REAL), ((t0.c64)OR(t0.c64))))<=(((t0.c64 IN ()), (t0.c64 IN ()), t0.c1 COLLATE NOCASE)))))) GROUP BY t0.c0, t0.c1, t0.c64 UNION SELECT t0.c0, t0.c1, t0.c64 FROM t0 WHERE ((((((((t0.c1) NOT BETWEEN (t0.c64) AND (t0.c64)), CAST(t0.c1 AS REAL), ((t0.c64)OR(t0.c64))))<=(((t0.c64 IN ()), (t0.c64 IN ()), t0.c1 COLLATE NOCASE)))) ISNULL)) GROUP BY t0.c0, t0.c1, t0.c64;
SELECT ALL t0.c0, t0.c1, t0.c64 FROM t0 GROUP BY t0.c0, t0.c1, t0.c64;
SELECT ALL t0.c0, rt1.c4, rt1.c3, rt1.c6, rt0.c1, rt1.c1, t0.c64, rt1.c0, rt0.c0, t0.c1, rt0.c2, rt1.c2, rt1.c5 FROM rt1 CROSS JOIN rt0 ON '1742816098' INNER JOIN t0 ON ((LIKE(rt1.c6, rt1.c1)) NOT NULL) GROUP BY t0.c0, rt1.c4, rt1.c3, rt1.c6, rt0.c1, rt1.c1, t0.c64, rt1.c0, rt0.c0, t0.c1, rt0.c2, rt1.c2, rt1.c5;
SELECT ALL t0.c0, rt1.c4, rt1.c3, rt1.c6, rt0.c1, rt1.c1, t0.c64, rt1.c0, rt0.c0, t0.c1, rt0.c2, rt1.c2, rt1.c5 FROM rt1 CROSS JOIN rt0 ON '1742816098' INNER JOIN t0 ON ((LIKE(rt1.c6, rt1.c1)) NOT NULL) GROUP BY t0.c0, rt1.c4, rt1.c3, rt1.c6, rt0.c1, rt1.c1, t0.c64, rt1.c0, rt0.c0, t0.c1, rt0.c2, rt1.c2, rt1.c5 HAVING COUNT(SUM(rt1.c2)) UNION ALL SELECT ALL t0.c0, rt1.c4, rt1.c3, rt1.c6, rt0.c1, rt1.c1, t0.c64, rt1.c0, rt0.c0, t0.c1, rt0.c2, rt1.c2, rt1.c5 FROM rt1 CROSS JOIN rt0 ON '1742816098' INNER JOIN t0 ON ((LIKE(rt1.c6, rt1.c1)) NOT NULL) GROUP BY t0.c0, rt1.c4, rt1.c3, rt1.c6, rt0.c1, rt1.c1, t0.c64, rt1.c0, rt0.c0, t0.c1, rt0.c2, rt1.c2, rt1.c5 HAVING (NOT (COUNT(SUM(rt1.c2)))) UNION ALL SELECT ALL t0.c0, rt1.c4, rt1.c3, rt1.c6, rt0.c1, rt1.c1, t0.c64, rt1.c0, rt0.c0, t0.c1, rt0.c2, rt1.c2, rt1.c5 FROM rt1 CROSS JOIN rt0 ON '1742816098' INNER JOIN t0 ON ((LIKE(rt1.c6, rt1.c1)) NOT NULL) GROUP BY t0.c0, rt1.c4, rt1.c3, rt1.c6, rt0.c1, rt1.c1, t0.c64, rt1.c0, rt0.c0, t0.c1, rt0.c2, rt1.c2, rt1.c5 HAVING ((COUNT(SUM(rt1.c2))) ISNULL);
SELECT * FROM rt0, t0, rt1 NOT INDEXED;
SELECT ALL * FROM rt0, t0, rt1 WHERE (CAST(((rt1.c1) ISNULL) AS INTEGER)) UNION ALL SELECT * FROM rt0, t0, rt1 WHERE ((NOT (CAST(((rt1.c1) ISNULL) AS INTEGER)))) UNION ALL SELECT * FROM rt0, t0, rt1 WHERE (((CAST(((rt1.c1) ISNULL) AS INTEGER)) ISNULL));
SELECT * FROM rt0, t0, rt1 NOT INDEXED;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c0)>(rt0.c0))) IS TRUE)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c0)>(rt0.c0))) IS TRUE)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c0)>(rt0.c0))) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL t0.c64 FROM t0 GROUP BY t0.c64;
SELECT t0.c64 FROM t0 WHERE (CASE t0.c0  WHEN ((t0.c64)<(t0.c1)) THEN ((0X18f1e198) BETWEEN (t0.c1) AND (t0.c0)) END) GROUP BY t0.c64 UNION SELECT ALL t0.c64 FROM t0 WHERE ((NOT (CASE t0.c0  WHEN ((t0.c64)<(t0.c1)) THEN ((0X18f1e198) BETWEEN (t0.c1) AND (t0.c0)) END))) GROUP BY t0.c64 UNION SELECT ALL t0.c64 FROM t0 WHERE (((CASE t0.c0  WHEN ((t0.c64)<(t0.c1)) THEN ((0x18f1e198) BETWEEN (t0.c1) AND (t0.c0)) END) ISNULL)) GROUP BY t0.c64;
SELECT ALL t0.c64 FROM t0 GROUP BY t0.c64;
SELECT ALL rt1.c6, rt1.c5, rt1.c3, rt1.c2 FROM rt1 GROUP BY rt1.c6, rt1.c5, rt1.c3, rt1.c2;
SELECT ALL rt1.c6, rt1.c5, rt1.c3, rt1.c2 FROM rt1 GROUP BY rt1.c6, rt1.c5, rt1.c3, rt1.c2 HAVING ((MIN(rt1.c0))*((((rt1.c0, MIN(COUNT(*)), MAX(SUM(rt1.c3)))) BETWEEN ((rt1.c5, COUNT(*), rt1.c6)) AND ((COUNT(COUNT(*)), rt1.c3, rt1.c5))))) UNION ALL SELECT ALL rt1.c6, rt1.c5, rt1.c3, rt1.c2 FROM rt1 GROUP BY rt1.c6, rt1.c5, rt1.c3, rt1.c2 HAVING (NOT (((MIN(rt1.c0))*((((rt1.c0, MIN(COUNT(*)), MAX(SUM(rt1.c3)))) BETWEEN ((rt1.c5, COUNT(*), rt1.c6)) AND ((COUNT(COUNT(*)), rt1.c3, rt1.c5))))))) UNION ALL SELECT ALL rt1.c6, rt1.c5, rt1.c3, rt1.c2 FROM rt1 GROUP BY rt1.c6, rt1.c5, rt1.c3, rt1.c2 HAVING ((((MIN(rt1.c0))*((((rt1.c0, MIN(COUNT(*)), MAX(SUM(rt1.c3)))) BETWEEN ((rt1.c5, COUNT(*), rt1.c6)) AND ((COUNT(COUNT(*)), rt1.c3, rt1.c5)))))) ISNULL);
SELECT ALL * FROM t0;
SELECT ALL * FROM t0 WHERE ((((((t0.c0)) BETWEEN ((t0.c64)) AND ((t0.c0))))|(CAST(t0.c1 AS BLOB)))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT ((((((t0.c0)) BETWEEN ((t0.c64)) AND ((t0.c0))))|(CAST(t0.c1 AS BLOB)))))) UNION ALL SELECT * FROM t0 WHERE ((((((((t0.c0)) BETWEEN ((t0.c64)) AND ((t0.c0))))|(CAST(t0.c1 AS BLOB)))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (NULL) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM rt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))|(rt0.c2))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))|(rt0.c2))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))|(rt0.c2))) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING COUNT(GROUP_CONCAT(AVG(GROUP_CONCAT(rt0.c0)))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (COUNT(GROUP_CONCAT(AVG(GROUP_CONCAT(rt0.c0)))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((COUNT(GROUP_CONCAT(AVG(GROUP_CONCAT(rt0.c0))))) ISNULL);
SELECT ALL * FROM rt1, rt0, t0;
SELECT * FROM rt1, rt0, t0 WHERE (CAST(rt0.c1 AS REAL)) UNION ALL SELECT ALL * FROM rt1, rt0, t0 WHERE ((NOT (CAST(rt0.c1 AS REAL)))) UNION ALL SELECT * FROM rt1, rt0, t0 WHERE (((CAST(rt0.c1 AS REAL)) ISNULL));
SELECT ALL * FROM rt1, rt0, t0;
SELECT DISTINCT t0.c64, rt1.c3, t0.c0, t0.c1, rt1.c4, rt1.c1, rt1.c5 FROM t0, rt1;
SELECT DISTINCT t0.c64, rt1.c3, t0.c0, t0.c1, rt1.c4, rt1.c1, rt1.c5 FROM t0, rt1 WHERE ((((t0.c0)) NOT BETWEEN (((~ (rt1.c2)))) AND ((rt1.c2 COLLATE BINARY)))) UNION SELECT DISTINCT t0.c64, rt1.c3, t0.c0, t0.c1, rt1.c4, rt1.c1, rt1.c5 FROM t0, rt1 WHERE ((NOT ((((t0.c0)) NOT BETWEEN (((~ (rt1.c2)))) AND ((rt1.c2 COLLATE BINARY)))))) UNION SELECT DISTINCT t0.c64, rt1.c3, t0.c0, t0.c1, rt1.c4, rt1.c1, rt1.c5 FROM t0, rt1 WHERE ((((((t0.c0)) NOT BETWEEN (((~ (rt1.c2)))) AND ((rt1.c2 COLLATE BINARY)))) ISNULL));
SELECT DISTINCT t0.c64, rt1.c3, t0.c0, t0.c1, rt1.c4, rt1.c1, rt1.c5 FROM t0, rt1;
SELECT ALL t0.c0 FROM t0, rt0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, rt0 WHERE ((- (NULL))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0, rt0 WHERE ((NOT ((- (NULL))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0, rt0 WHERE ((((- (NULL))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, rt0 GROUP BY t0.c0;
SELECT rt0.c0, rt1.c5, rt1.c2, rt1.c1 FROM rt0, rt1 GROUP BY rt0.c0, rt1.c5, rt1.c2, rt1.c1;
SELECT ALL rt0.c0, rt1.c5, rt1.c2, rt1.c1 FROM rt0, rt1 GROUP BY rt0.c0, rt1.c5, rt1.c2, rt1.c1 HAVING TOTAL(MIN(MIN(rt0.c2))) UNION ALL SELECT rt0.c0, rt1.c5, rt1.c2, rt1.c1 FROM rt0, rt1 GROUP BY rt0.c0, rt1.c5, rt1.c2, rt1.c1 HAVING (NOT (TOTAL(MIN(MIN(rt0.c2))))) UNION ALL SELECT rt0.c0, rt1.c5, rt1.c2, rt1.c1 FROM rt0, rt1 GROUP BY rt0.c0, rt1.c5, rt1.c2, rt1.c1 HAVING ((TOTAL(MIN(MIN(rt0.c2)))) ISNULL);
SELECT ALL rt1.c0, rt1.c3, rt0.c0, rt1.c2, rt0.c2, rt1.c5, t0.c1 FROM rt1, t0 FULL OUTER JOIN rt0 ON (rt1.c6 COLLATE RTRIM IN ());
SELECT rt1.c0, rt1.c3, rt0.c0, rt1.c2, rt0.c2, rt1.c5, t0.c1 FROM rt1, t0 FULL OUTER JOIN rt0 ON (rt1.c6 COLLATE RTRIM IN ()) WHERE (((((rt1.c3) NOTNULL)) IS FALSE)) UNION ALL SELECT ALL rt1.c0, rt1.c3, rt0.c0, rt1.c2, rt0.c2, rt1.c5, t0.c1 FROM rt1, t0 FULL OUTER JOIN rt0 ON (rt1.c6 COLLATE RTRIM IN ()) WHERE ((NOT (((((rt1.c3) NOTNULL)) IS FALSE)))) UNION ALL SELECT rt1.c0, rt1.c3, rt0.c0, rt1.c2, rt0.c2, rt1.c5, t0.c1 FROM rt1, t0 FULL OUTER JOIN rt0 ON (rt1.c6 COLLATE RTRIM IN ()) WHERE (((((((rt1.c3) NOTNULL)) IS FALSE)) ISNULL));
SELECT ALL rt1.c0, rt1.c3, rt0.c0, rt1.c2, rt0.c2, rt1.c5, t0.c1 FROM rt1, t0 FULL OUTER JOIN rt0 ON (rt1.c6 COLLATE RTRIM IN ());
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c0) AND (x'982a'))) IS FALSE)) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT (((((rt0.c2) NOT BETWEEN (rt0.c0) AND (x'982a'))) IS FALSE)))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE (((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (x'982a'))) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT t0.c1, t0.c64 FROM t0 GROUP BY t0.c1, t0.c64;
SELECT ALL t0.c1, t0.c64 FROM t0 WHERE (((((((((t0.c64 COLLATE NOCASE)OR((- (t0.c1)))))AND(CASE WHEN t0.c0 THEN t0.c1 ELSE t0.c1 END)))AND(t0.c64 COLLATE BINARY)))AND(CASE WHEN t0.c1 THEN t0.c1 END))) GROUP BY t0.c1, t0.c64 UNION SELECT t0.c1, t0.c64 FROM t0 WHERE ((NOT (((((((((t0.c64 COLLATE NOCASE)OR((- (t0.c1)))))AND(CASE WHEN t0.c0 THEN t0.c1 ELSE t0.c1 END)))AND(t0.c64 COLLATE BINARY)))AND(CASE WHEN t0.c1 THEN t0.c1 END))))) GROUP BY t0.c1, t0.c64 UNION SELECT t0.c1, t0.c64 FROM t0 WHERE (((((((((((t0.c64 COLLATE NOCASE)OR((- (t0.c1)))))AND(CASE WHEN t0.c0 THEN t0.c1 ELSE t0.c1 END)))AND(t0.c64 COLLATE BINARY)))AND(CASE WHEN t0.c1 THEN t0.c1 END))) ISNULL)) GROUP BY t0.c1, t0.c64;
SELECT t0.c1, t0.c64 FROM t0 GROUP BY t0.c1, t0.c64;
SELECT t0.c64, rt0.c1, t0.c1, rt0.c0, t0.c0, rt0.c2 FROM t0, rt0 GROUP BY t0.c64, rt0.c1, t0.c1, rt0.c0, t0.c0, rt0.c2;
SELECT t0.c64, rt0.c1, t0.c1, rt0.c0, t0.c0, rt0.c2 FROM t0, rt0 GROUP BY t0.c64, rt0.c1, t0.c1, rt0.c0, t0.c0, rt0.c2 HAVING (((-1.962430655E9)<<(t0.c64)) IN ()) UNION ALL SELECT ALL t0.c64, rt0.c1, t0.c1, rt0.c0, t0.c0, rt0.c2 FROM t0, rt0 GROUP BY t0.c64, rt0.c1, t0.c1, rt0.c0, t0.c0, rt0.c2 HAVING (NOT ((((-1.962430655E9)<<(t0.c64)) IN ()))) UNION ALL SELECT t0.c64, rt0.c1, t0.c1, rt0.c0, t0.c0, rt0.c2 FROM t0, rt0 GROUP BY t0.c64, rt0.c1, t0.c1, rt0.c0, t0.c0, rt0.c2 HAVING (((((-1.962430655E9)<<(t0.c64)) IN ())) ISNULL);
SELECT t0.c64, rt0.c1, t0.c1, rt0.c0, t0.c0, rt0.c2 FROM t0, rt0 GROUP BY t0.c64, rt0.c1, t0.c1, rt0.c0, t0.c0, rt0.c2;
SELECT t0.c64, rt0.c1, t0.c1, rt0.c0, t0.c0, rt0.c2 FROM t0, rt0 GROUP BY t0.c64, rt0.c1, t0.c1, rt0.c0, t0.c0, rt0.c2 HAVING (((-1.962430655E9)<<(t0.c64)) IN ()) UNION ALL SELECT ALL t0.c64, rt0.c1, t0.c1, rt0.c0, t0.c0, rt0.c2 FROM t0, rt0 GROUP BY t0.c64, rt0.c1, t0.c1, rt0.c0, t0.c0, rt0.c2 HAVING (NOT ((((-1.962430655E9)<<(t0.c64)) IN ()))) UNION ALL SELECT t0.c64, rt0.c1, t0.c1, rt0.c0, t0.c0, rt0.c2 FROM t0, rt0 GROUP BY t0.c64, rt0.c1, t0.c1, rt0.c0, t0.c0, rt0.c2 HAVING (((((-1.962430655E9)<<(t0.c64)) IN ())) ISNULL);
SELECT t0.c64, rt0.c1, t0.c1, rt0.c0, t0.c0, rt0.c2 FROM t0, rt0 GROUP BY t0.c64, rt0.c1, t0.c1, rt0.c0, t0.c0, rt0.c2;
SELECT ALL * FROM rt0, rt1;
SELECT ALL * FROM rt0, rt1 WHERE ('u|') UNION ALL SELECT * FROM rt0, rt1 WHERE ((NOT ('u|'))) UNION ALL SELECT ALL * FROM rt0, rt1 WHERE ((('u|') ISNULL));
SELECT ALL * FROM rt0, rt1;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE (CASE WHEN ('XgcCyI!Am' IN (rt0.c1)) THEN (rt0.c2 IN ()) ELSE SUBSTR(NULL, rt0.c1) END) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (CASE WHEN ('XgcCyI!Am' IN (rt0.c1)) THEN (rt0.c2 IN ()) ELSE SUBSTR(NULL, rt0.c1) END))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE (((CASE WHEN ('XgcCyI!Am' IN (rt0.c1)) THEN (rt0.c2 IN ()) ELSE SUBSTR(NULL, rt0.c1) END) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT t0.c64, t0.c0, t0.c1, rt1.c5, rt1.c3 FROM rt1 INNER JOIN t0 ON (((NOT (rt1.c0)))>=(LIKE(rt1.c1, rt1.c3, '1'))) GROUP BY t0.c64, t0.c0, t0.c1, rt1.c5, rt1.c3;
SELECT t0.c64, t0.c0, t0.c1, rt1.c5, rt1.c3 FROM rt1 INNER JOIN t0 ON (((NOT (rt1.c0)))>=(LIKE(rt1.c1, rt1.c3, '1'))) WHERE ((((rt1.c3 IN ()))IS NOT((+ (t0.c0))))) GROUP BY t0.c64, t0.c0, t0.c1, rt1.c5, rt1.c3 UNION SELECT t0.c64, t0.c0, t0.c1, rt1.c5, rt1.c3 FROM rt1 INNER JOIN t0 ON (((NOT (rt1.c0)))>=(LIKE(rt1.c1, rt1.c3, '1'))) WHERE ((NOT ((((rt1.c3 IN ()))IS NOT((+ (t0.c0))))))) GROUP BY t0.c64, t0.c0, t0.c1, rt1.c5, rt1.c3 UNION SELECT ALL t0.c64, t0.c0, t0.c1, rt1.c5, rt1.c3 FROM rt1 INNER JOIN t0 ON (((NOT (rt1.c0)))>=(LIKE(rt1.c1, rt1.c3, '1'))) WHERE ((((((rt1.c3 IN ()))IS NOT((+ (t0.c0))))) ISNULL)) GROUP BY t0.c64, t0.c0, t0.c1, rt1.c5, rt1.c3;
SELECT t0.c64, t0.c0, t0.c1, rt1.c5, rt1.c3 FROM rt1 INNER JOIN t0 ON (((NOT (rt1.c0)))>=(LIKE(rt1.c1, rt1.c3, '1'))) GROUP BY t0.c64, t0.c0, t0.c1, rt1.c5, rt1.c3;
SELECT rt1.c2, rt0.c0, rt1.c6, rt1.c4, rt1.c3, rt0.c2 FROM rt1, rt0 GROUP BY rt1.c2, rt0.c0, rt1.c6, rt1.c4, rt1.c3, rt0.c2;
SELECT ALL rt1.c2, rt0.c0, rt1.c6, rt1.c4, rt1.c3, rt0.c2 FROM rt1, rt0 GROUP BY rt1.c2, rt0.c0, rt1.c6, rt1.c4, rt1.c3, rt0.c2 HAVING TOTAL(GROUP_CONCAT(rt1.c2)) UNION ALL SELECT ALL rt1.c2, rt0.c0, rt1.c6, rt1.c4, rt1.c3, rt0.c2 FROM rt1, rt0 GROUP BY rt1.c2, rt0.c0, rt1.c6, rt1.c4, rt1.c3, rt0.c2 HAVING (NOT (TOTAL(GROUP_CONCAT(rt1.c2)))) UNION ALL SELECT rt1.c2, rt0.c0, rt1.c6, rt1.c4, rt1.c3, rt0.c2 FROM rt1, rt0 GROUP BY rt1.c2, rt0.c0, rt1.c6, rt1.c4, rt1.c3, rt0.c2 HAVING ((TOTAL(GROUP_CONCAT(rt1.c2))) ISNULL);
SELECT * FROM rt1, rt0;
SELECT * FROM rt1, rt0 WHERE (CAST(((rt1.c2)||(rt1.c5)) AS TEXT)) UNION ALL SELECT * FROM rt1, rt0 WHERE ((NOT (CAST(((rt1.c2)||(rt1.c5)) AS TEXT)))) UNION ALL SELECT * FROM rt1, rt0 WHERE (((CAST(((rt1.c2)||(rt1.c5)) AS TEXT)) ISNULL));
SELECT * FROM rt1, rt0;
SELECT DISTINCT rt1.c5 FROM rt1, rt0;
SELECT DISTINCT rt1.c5 FROM rt1, rt0 WHERE ((NOT (((rt1.c4)&(rt1.c4))))) UNION SELECT DISTINCT rt1.c5 FROM rt1, rt0 WHERE ((NOT ((NOT (((rt1.c4)&(rt1.c4))))))) UNION SELECT DISTINCT rt1.c5 FROM rt1, rt0 WHERE ((((NOT (((rt1.c4)&(rt1.c4))))) ISNULL));
SELECT DISTINCT rt1.c5 FROM rt1, rt0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (x'') GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (x''))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((x'') ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt1.c3, rt0.c0, rt1.c0 FROM rt0, rt1 GROUP BY rt1.c3, rt0.c0, rt1.c0;
SELECT ALL rt1.c3, rt0.c0, rt1.c0 FROM rt0, rt1 GROUP BY rt1.c3, rt0.c0, rt1.c0 HAVING GROUP_CONCAT(((rt1.c2) BETWEEN (rt0.c2) AND (SUM(rt1.c2)))) UNION ALL SELECT ALL rt1.c3, rt0.c0, rt1.c0 FROM rt0, rt1 GROUP BY rt1.c3, rt0.c0, rt1.c0 HAVING (NOT (GROUP_CONCAT(((rt1.c2) BETWEEN (rt0.c2) AND (SUM(rt1.c2)))))) UNION ALL SELECT ALL rt1.c3, rt0.c0, rt1.c0 FROM rt0, rt1 GROUP BY rt1.c3, rt0.c0, rt1.c0 HAVING ((GROUP_CONCAT(((rt1.c2) BETWEEN (rt0.c2) AND (SUM(rt1.c2))))) ISNULL);
SELECT rt1.c6, rt0.c2, rt0.c1, rt0.c0, rt1.c4, rt1.c0, t0.c64 FROM rt0, t0, rt1;
SELECT rt1.c6, rt0.c2, rt0.c1, rt0.c0, rt1.c4, rt1.c0, t0.c64 FROM rt0, t0, rt1 WHERE (NULL) UNION ALL SELECT ALL rt1.c6, rt0.c2, rt0.c1, rt0.c0, rt1.c4, rt1.c0, t0.c64 FROM rt0, t0, rt1 WHERE ((NOT (NULL))) UNION ALL SELECT ALL rt1.c6, rt0.c2, rt0.c1, rt0.c0, rt1.c4, rt1.c0, t0.c64 FROM rt0, t0, rt1 WHERE (((NULL) ISNULL));
SELECT rt1.c6, rt0.c2, rt0.c1, rt0.c0, rt1.c4, rt1.c0, t0.c64 FROM rt0, t0, rt1;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE ((rt1.c3 COLLATE BINARY IN ())) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT ((rt1.c3 COLLATE BINARY IN ())))) UNION SELECT DISTINCT * FROM rt1 WHERE ((((rt1.c3 COLLATE BINARY IN ())) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL rt1.c3, rt1.c6, t0.c0, rt1.c1, rt0.c1, rt1.c4 FROM rt0, t0, rt1 GROUP BY rt1.c3, rt1.c6, t0.c0, rt1.c1, rt0.c1, rt1.c4;
SELECT ALL rt1.c3, rt1.c6, t0.c0, rt1.c1, rt0.c1, rt1.c4 FROM rt0, t0, rt1 WHERE (((((rt1.c4) IS FALSE))=(((rt1.c0)&(t0.c0))))) GROUP BY rt1.c3, rt1.c6, t0.c0, rt1.c1, rt0.c1, rt1.c4 UNION SELECT rt1.c3, rt1.c6, t0.c0, rt1.c1, rt0.c1, rt1.c4 FROM rt0, t0, rt1 WHERE ((NOT (((((rt1.c4) IS FALSE))==(((rt1.c0)&(t0.c0))))))) GROUP BY rt1.c3, rt1.c6, t0.c0, rt1.c1, rt0.c1, rt1.c4 UNION SELECT rt1.c3, rt1.c6, t0.c0, rt1.c1, rt0.c1, rt1.c4 FROM rt0, t0, rt1 WHERE (((((((rt1.c4) IS FALSE))=(((rt1.c0)&(t0.c0))))) ISNULL)) GROUP BY rt1.c3, rt1.c6, t0.c0, rt1.c1, rt0.c1, rt1.c4;
SELECT ALL rt1.c3, rt1.c6, t0.c0, rt1.c1, rt0.c1, rt1.c4 FROM rt0, t0, rt1 GROUP BY rt1.c3, rt1.c6, t0.c0, rt1.c1, rt0.c1, rt1.c4;
SELECT ALL rt1.c5, rt0.c1 FROM t0, rt0, rt1 GROUP BY rt1.c5, rt0.c1;
SELECT rt1.c5, rt0.c1 FROM t0, rt0, rt1 GROUP BY rt1.c5, rt0.c1 HAVING AVG(MIN(MAX(t0.c64))) UNION ALL SELECT ALL rt1.c5, rt0.c1 FROM t0, rt0, rt1 GROUP BY rt1.c5, rt0.c1 HAVING (NOT (AVG(MIN(MAX(t0.c64))))) UNION ALL SELECT ALL rt1.c5, rt0.c1 FROM t0, rt0, rt1 GROUP BY rt1.c5, rt0.c1 HAVING ((AVG(MIN(MAX(t0.c64)))) ISNULL);
SELECT ALL * FROM rt0 NATURAL JOIN t0;
SELECT ALL * FROM rt0 NATURAL JOIN t0 WHERE (CAST(t0.c64 AS BLOB)) UNION ALL SELECT ALL * FROM rt0 NOT INDEXED NATURAL JOIN t0 WHERE ((NOT (CAST(t0.c64 AS BLOB)))) UNION ALL SELECT ALL * FROM rt0 NATURAL JOIN t0 WHERE (((CAST(t0.c64 AS BLOB)) ISNULL));
SELECT ALL * FROM rt0 NATURAL JOIN t0;
SELECT DISTINCT rt1.c3 FROM t0, rt0, rt1;
SELECT DISTINCT rt1.c3 FROM t0, rt0, rt1 WHERE ((((rt1.c1)IS(rt1.c2)) IN ())) UNION SELECT DISTINCT rt1.c3 FROM t0, rt0, rt1 WHERE ((NOT ((((rt1.c1)IS(rt1.c2)) IN ())))) UNION SELECT DISTINCT rt1.c3 FROM t0, rt0, rt1 WHERE ((((((rt1.c1)IS(rt1.c2)) IN ())) ISNULL));
SELECT DISTINCT rt1.c3 FROM t0, rt0, rt1;
SELECT t0.c64, t0.c0, t0.c1 FROM t0 GROUP BY t0.c64, t0.c0, t0.c1;
SELECT t0.c64, t0.c0, t0.c1 FROM t0 WHERE (CAST(CASE WHEN t0.c64 THEN t0.c0 END AS BLOB)) GROUP BY t0.c64, t0.c0, t0.c1 UNION SELECT t0.c64, t0.c0, t0.c1 FROM t0 WHERE ((NOT (CAST(CASE WHEN t0.c64 THEN t0.c0 END AS BLOB)))) GROUP BY t0.c64, t0.c0, t0.c1 UNION SELECT t0.c64, t0.c0, t0.c1 FROM t0 WHERE (((CAST(CASE WHEN t0.c64 THEN t0.c0 END AS BLOB)) ISNULL)) GROUP BY t0.c64, t0.c0, t0.c1;
SELECT t0.c64, t0.c0, t0.c1 FROM t0 GROUP BY t0.c64, t0.c0, t0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (((COUNT(*))) BETWEEN ((GROUP_CONCAT(rt0.c0))) AND (((~ (rt0.c0))))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT ((((COUNT(*))) BETWEEN ((GROUP_CONCAT(rt0.c0))) AND (((~ (rt0.c0))))))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (((((COUNT(*))) BETWEEN ((GROUP_CONCAT(rt0.c0))) AND (((~ (rt0.c0)))))) ISNULL);
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (((COUNT(*))) BETWEEN ((GROUP_CONCAT(rt0.c0))) AND (((~ (rt0.c0))))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT ((((COUNT(*))) BETWEEN ((GROUP_CONCAT(rt0.c0))) AND (((~ (rt0.c0))))))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (((((COUNT(*))) BETWEEN ((GROUP_CONCAT(rt0.c0))) AND (((~ (rt0.c0)))))) ISNULL);
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL MIN((- (rt1.c5))) FROM rt1, t0;
SELECT rt1.c1, rt0.c0, rt0.c2, rt1.c4, rt1.c3, rt1.c2 FROM rt1, rt0;
SELECT ALL rt1.c1, rt0.c0, rt0.c2, rt1.c4, rt1.c3, rt1.c2 FROM rt1, rt0 WHERE ((((LOWER(DISTINCT rt1.c5)))>((((rt0.c1) NOT BETWEEN (rt1.c5) AND (rt1.c4)))))) UNION ALL SELECT rt1.c1, rt0.c0, rt0.c2, rt1.c4, rt1.c3, rt1.c2 FROM rt1, rt0 WHERE ((NOT ((((LOWER(DISTINCT rt1.c5)))>((((rt0.c1) NOT BETWEEN (rt1.c5) AND (rt1.c4)))))))) UNION ALL SELECT ALL rt1.c1, rt0.c0, rt0.c2, rt1.c4, rt1.c3, rt1.c2 FROM rt1, rt0 WHERE ((((((LOWER(DISTINCT rt1.c5)))>((((rt0.c1) NOT BETWEEN (rt1.c5) AND (rt1.c4)))))) ISNULL));
SELECT rt1.c1, rt0.c0, rt0.c2, rt1.c4, rt1.c3, rt1.c2 FROM rt1, rt0;
SELECT DISTINCT rt1.c0, rt1.c2, t0.c64, rt1.c4, rt1.c1, rt1.c3, rt1.c6 FROM t0, rt1;
SELECT DISTINCT rt1.c0, rt1.c2, t0.c64, rt1.c4, rt1.c1, rt1.c3, rt1.c6 FROM t0, rt1 WHERE (((CAST(rt1.c4 AS TEXT))-(rt1.c1 COLLATE BINARY))) UNION SELECT DISTINCT rt1.c0, rt1.c2, t0.c64, rt1.c4, rt1.c1, rt1.c3, rt1.c6 FROM t0, rt1 WHERE ((NOT (((CAST(rt1.c4 AS TEXT))-(rt1.c1 COLLATE BINARY))))) UNION SELECT DISTINCT rt1.c0, rt1.c2, t0.c64, rt1.c4, rt1.c1, rt1.c3, rt1.c6 FROM t0, rt1 WHERE (((((CAST(rt1.c4 AS TEXT))-(rt1.c1 COLLATE BINARY))) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c2, t0.c64, rt1.c4, rt1.c1, rt1.c3, rt1.c6 FROM t0, rt1;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE ((((((rt0.c0, rt0.c0, rt0.c0))>=((rt0.c2, rt0.c0, rt0.c1)))) IS TRUE)) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT ((((((rt0.c0, rt0.c0, rt0.c0))>=((rt0.c2, rt0.c0, rt0.c1)))) IS TRUE)))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((((((((rt0.c0, rt0.c0, rt0.c0))>=((rt0.c2, rt0.c0, rt0.c1)))) IS TRUE)) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt1.c6, rt1.c3, rt1.c4, rt1.c1, rt1.c5, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c6, rt1.c3, rt1.c4, rt1.c1, rt1.c5, rt1.c0, rt1.c2;
SELECT ALL rt1.c6, rt1.c3, rt1.c4, rt1.c1, rt1.c5, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c6, rt1.c3, rt1.c4, rt1.c1, rt1.c5, rt1.c0, rt1.c2 HAVING ((((MIN(rt1.c5))AND(rt1.c2)))OR(TOTAL(TOTAL(COUNT(*))))) COLLATE NOCASE UNION ALL SELECT rt1.c6, rt1.c3, rt1.c4, rt1.c1, rt1.c5, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c6, rt1.c3, rt1.c4, rt1.c1, rt1.c5, rt1.c0, rt1.c2 HAVING (NOT (((((MIN(rt1.c5))AND(rt1.c2)))OR(TOTAL(TOTAL(COUNT(*))))) COLLATE NOCASE)) UNION ALL SELECT rt1.c6, rt1.c3, rt1.c4, rt1.c1, rt1.c5, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c6, rt1.c3, rt1.c4, rt1.c1, rt1.c5, rt1.c0, rt1.c2 HAVING ((((((MIN(rt1.c5))AND(rt1.c2)))OR(TOTAL(TOTAL(COUNT(*))))) COLLATE NOCASE) ISNULL);
SELECT rt1.c3, rt1.c1, rt0.c0, rt1.c2, rt0.c1, rt1.c6, t0.c64, rt0.c2, rt1.c5, rt1.c0 FROM t0, rt0 CROSS JOIN rt1 ON ((((((((((rt1.c0)OR(rt1.c0)))OR(t0.c1)))AND(rt1.c3)))AND(rt1.c0)))*(((rt1.c6)*(rt1.c6))));
SELECT rt1.c3, rt1.c1, rt0.c0, rt1.c2, rt0.c1, rt1.c6, t0.c64, rt0.c2, rt1.c5, rt1.c0 FROM t0, rt0 CROSS JOIN rt1 ON ((((((((((rt1.c0)OR(rt1.c0)))OR(t0.c1)))AND(rt1.c3)))AND(rt1.c0)))*(((rt1.c6)*(rt1.c6)))) WHERE (0.7848219318830886) UNION ALL SELECT rt1.c3, rt1.c1, rt0.c0, rt1.c2, rt0.c1, rt1.c6, t0.c64, rt0.c2, rt1.c5, rt1.c0 FROM t0, rt0 CROSS JOIN rt1 ON ((((((((((rt1.c0)OR(rt1.c0)))OR(t0.c1)))AND(rt1.c3)))AND(rt1.c0)))*(((rt1.c6)*(rt1.c6)))) WHERE ((NOT (0.7848219318830886))) UNION ALL SELECT rt1.c3, rt1.c1, rt0.c0, rt1.c2, rt0.c1, rt1.c6, t0.c64, rt0.c2, rt1.c5, rt1.c0 FROM t0, rt0 CROSS JOIN rt1 ON ((((((((((rt1.c0)OR(rt1.c0)))OR(t0.c1)))AND(rt1.c3)))AND(rt1.c0)))*(((rt1.c6)*(rt1.c6)))) WHERE (((0.7848219318830886) ISNULL));
SELECT rt1.c3, rt1.c1, rt0.c0, rt1.c2, rt0.c1, rt1.c6, t0.c64, rt0.c2, rt1.c5, rt1.c0 FROM t0, rt0 CROSS JOIN rt1 ON ((((((((((rt1.c0)OR(rt1.c0)))OR(t0.c1)))AND(rt1.c3)))AND(rt1.c0)))*(((rt1.c6)*(rt1.c6))));
SELECT DISTINCT * FROM rt1, rt0;
SELECT DISTINCT * FROM rt1, rt0 WHERE (((rt1.c0) IS FALSE) COLLATE NOCASE) UNION SELECT DISTINCT * FROM rt1, rt0 WHERE ((NOT (((rt1.c0) IS FALSE) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM rt1, rt0 WHERE (((((rt1.c0) IS FALSE) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM rt1, rt0;
SELECT ALL rt0.c2, t0.c1 FROM t0, rt0 GROUP BY rt0.c2, t0.c1;
SELECT ALL rt0.c2, t0.c1 FROM t0, rt0 WHERE (((((((t0.c1)OR(rt0.c0)))OR(0X6fe92a3f)))OR(CAST(t0.c1 AS BLOB)))) GROUP BY rt0.c2, t0.c1 UNION SELECT rt0.c2, t0.c1 FROM t0, rt0 WHERE ((NOT (((((((t0.c1)OR(rt0.c0)))OR(0x6fe92a3f)))OR(CAST(t0.c1 AS BLOB)))))) GROUP BY rt0.c2, t0.c1 UNION SELECT ALL rt0.c2, t0.c1 FROM t0, rt0 WHERE (((((((((t0.c1)OR(rt0.c0)))OR(0x6fe92a3f)))OR(CAST(t0.c1 AS BLOB)))) ISNULL)) GROUP BY rt0.c2, t0.c1;
SELECT ALL rt0.c2, t0.c1 FROM t0, rt0 GROUP BY rt0.c2, t0.c1;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING GROUP_CONCAT(TOTAL(COUNT(COUNT(COUNT(*))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (GROUP_CONCAT(TOTAL(COUNT(COUNT(COUNT(*))))))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((GROUP_CONCAT(TOTAL(COUNT(COUNT(COUNT(*)))))) ISNULL);
SELECT ALL * FROM rt1, rt0;
SELECT * FROM rt1, rt0 WHERE (CAST(((rt0.c2) ISNULL) AS INTEGER)) UNION ALL SELECT * FROM rt1, rt0 WHERE ((NOT (CAST(((rt0.c2) ISNULL) AS INTEGER)))) UNION ALL SELECT * FROM rt1, rt0 WHERE (((CAST(((rt0.c2) ISNULL) AS INTEGER)) ISNULL));
SELECT ALL * FROM rt1, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c0)&(rt0.c0)))=(((((rt0.c0)AND(rt0.c1)))OR(rt0.c0))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c0)&(rt0.c0)))==(((((rt0.c0)AND(rt0.c1)))OR(rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c0)&(rt0.c0)))=(((((rt0.c0)AND(rt0.c1)))OR(rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ((+ ((((t0.c64, t0.c1, t0.c0)) NOT BETWEEN ((t0.c0, NULL, t0.c64)) AND ((t0.c0, t0.c0, t0.c1)))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((+ ((((t0.c64, t0.c1, t0.c0)) NOT BETWEEN ((t0.c0, NULL, t0.c64)) AND ((t0.c0, t0.c0, t0.c1)))))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((((+ ((((t0.c64, t0.c1, t0.c0)) NOT BETWEEN ((t0.c0, NULL, t0.c64)) AND ((t0.c0, t0.c0, t0.c1)))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT rt1.c2, rt1.c3, rt0.c0, t0.c0, rt0.c2, rt1.c4 FROM rt0, rt1 FULL OUTER JOIN t0 ON ((((t0.c64) NOT BETWEEN (t0.c1) AND (rt0.c0))) IS FALSE) GROUP BY rt1.c2, rt1.c3, rt0.c0, t0.c0, rt0.c2, rt1.c4;
SELECT ALL rt1.c2, rt1.c3, rt0.c0, t0.c0, rt0.c2, rt1.c4 FROM rt0, rt1 FULL OUTER JOIN t0 ON ((((t0.c64) NOT BETWEEN (t0.c1) AND (rt0.c0))) IS FALSE) GROUP BY rt1.c2, rt1.c3, rt0.c0, t0.c0, rt0.c2, rt1.c4 HAVING TOTAL(CASE WHEN rt0.c1 THEN rt1.c6 ELSE rt1.c6 END) UNION ALL SELECT rt1.c2, rt1.c3, rt0.c0, t0.c0, rt0.c2, rt1.c4 FROM rt0, rt1 FULL OUTER JOIN t0 ON ((((t0.c64) NOT BETWEEN (t0.c1) AND (rt0.c0))) IS FALSE) GROUP BY rt1.c2, rt1.c3, rt0.c0, t0.c0, rt0.c2, rt1.c4 HAVING (NOT (TOTAL(CASE WHEN rt0.c1 THEN rt1.c6 ELSE rt1.c6 END))) UNION ALL SELECT ALL rt1.c2, rt1.c3, rt0.c0, t0.c0, rt0.c2, rt1.c4 FROM rt0, rt1 FULL OUTER JOIN t0 ON ((((t0.c64) NOT BETWEEN (t0.c1) AND (rt0.c0))) IS FALSE) GROUP BY rt1.c2, rt1.c3, rt0.c0, t0.c0, rt0.c2, rt1.c4 HAVING ((TOTAL(CASE WHEN rt0.c1 THEN rt1.c6 ELSE rt1.c6 END)) ISNULL);
SELECT rt1.c2, rt1.c3, rt0.c0, t0.c0, rt0.c2, rt1.c4 FROM rt0, rt1 FULL OUTER JOIN t0 ON ((((t0.c64) NOT BETWEEN (t0.c1) AND (rt0.c0))) IS FALSE) GROUP BY rt1.c2, rt1.c3, rt0.c0, t0.c0, rt0.c2, rt1.c4;
SELECT ALL rt1.c2, rt1.c3, rt0.c0, t0.c0, rt0.c2, rt1.c4 FROM rt0, rt1 FULL OUTER JOIN t0 ON ((((t0.c64) NOT BETWEEN (t0.c1) AND (rt0.c0))) IS FALSE) GROUP BY rt1.c2, rt1.c3, rt0.c0, t0.c0, rt0.c2, rt1.c4 HAVING TOTAL(CASE WHEN rt0.c1 THEN rt1.c6 ELSE rt1.c6 END) UNION ALL SELECT rt1.c2, rt1.c3, rt0.c0, t0.c0, rt0.c2, rt1.c4 FROM rt0, rt1 FULL OUTER JOIN t0 ON ((((t0.c64) NOT BETWEEN (t0.c1) AND (rt0.c0))) IS FALSE) GROUP BY rt1.c2, rt1.c3, rt0.c0, t0.c0, rt0.c2, rt1.c4 HAVING (NOT (TOTAL(CASE WHEN rt0.c1 THEN rt1.c6 ELSE rt1.c6 END))) UNION ALL SELECT ALL rt1.c2, rt1.c3, rt0.c0, t0.c0, rt0.c2, rt1.c4 FROM rt0, rt1 FULL OUTER JOIN t0 ON ((((t0.c64) NOT BETWEEN (t0.c1) AND (rt0.c0))) IS FALSE) GROUP BY rt1.c2, rt1.c3, rt0.c0, t0.c0, rt0.c2, rt1.c4 HAVING ((TOTAL(CASE WHEN rt0.c1 THEN rt1.c6 ELSE rt1.c6 END)) ISNULL);
SELECT rt1.c2, rt1.c3, rt0.c0, t0.c0, rt0.c2, rt1.c4 FROM rt0, rt1 FULL OUTER JOIN t0 ON ((((t0.c64) NOT BETWEEN (t0.c1) AND (rt0.c0))) IS FALSE) GROUP BY rt1.c2, rt1.c3, rt0.c0, t0.c0, rt0.c2, rt1.c4;
SELECT ALL * FROM rt0, rt1;
SELECT * FROM rt0, rt1 WHERE ((- ((- (rt1.c5))))) UNION ALL SELECT * FROM rt0, rt1 WHERE ((NOT ((- ((- (rt1.c5))))))) UNION ALL SELECT * FROM rt0, rt1 WHERE ((((- ((- (rt1.c5))))) ISNULL));
SELECT ALL * FROM rt0, rt1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ('') UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (''))) UNION SELECT DISTINCT * FROM rt0 WHERE ((('') ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE ((((((rt0.c1))<((rt0.c0)))) BETWEEN (((rt0.c1) IS TRUE)) AND (0.7238253599124058))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT ((((((rt0.c1))<((rt0.c0)))) BETWEEN (((rt0.c1) IS TRUE)) AND (0.7238253599124058))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((((((((rt0.c1))<((rt0.c0)))) BETWEEN (((rt0.c1) IS TRUE)) AND (0.7238253599124058))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt1.c4, rt1.c5 FROM rt1, t0 RIGHT OUTER JOIN rt0 ON NULL GROUP BY rt1.c4, rt1.c5;
SELECT ALL rt1.c4, rt1.c5 FROM rt1, t0 RIGHT OUTER JOIN rt0 ON NULL GROUP BY rt1.c4, rt1.c5 HAVING GROUP_CONCAT(((rt1.c3)>(rt1.c2))) UNION ALL SELECT rt1.c4, rt1.c5 FROM rt1, t0 RIGHT OUTER JOIN rt0 ON NULL GROUP BY rt1.c4, rt1.c5 HAVING (NOT (GROUP_CONCAT(((rt1.c3)>(rt1.c2))))) UNION ALL SELECT ALL rt1.c4, rt1.c5 FROM rt1, t0 RIGHT OUTER JOIN rt0 ON NULL GROUP BY rt1.c4, rt1.c5 HAVING ((GROUP_CONCAT(((rt1.c3)>(rt1.c2)))) ISNULL);
SELECT ALL rt1.c4, rt1.c5 FROM rt1, t0 RIGHT OUTER JOIN rt0 ON NULL GROUP BY rt1.c4, rt1.c5;
SELECT ALL rt1.c4, rt1.c5 FROM rt1, t0 RIGHT OUTER JOIN rt0 ON NULL GROUP BY rt1.c4, rt1.c5 HAVING GROUP_CONCAT(((rt1.c3)>(rt1.c2))) UNION ALL SELECT rt1.c4, rt1.c5 FROM rt1, t0 RIGHT OUTER JOIN rt0 ON NULL GROUP BY rt1.c4, rt1.c5 HAVING (NOT (GROUP_CONCAT(((rt1.c3)>(rt1.c2))))) UNION ALL SELECT ALL rt1.c4, rt1.c5 FROM rt1, t0 RIGHT OUTER JOIN rt0 ON NULL GROUP BY rt1.c4, rt1.c5 HAVING ((GROUP_CONCAT(((rt1.c3)>(rt1.c2)))) ISNULL);
SELECT ALL rt1.c4, rt1.c5 FROM rt1, t0 RIGHT OUTER JOIN rt0 ON NULL GROUP BY rt1.c4, rt1.c5;
SELECT ALL t0.c0, t0.c64, rt1.c1 FROM rt0 NOT INDEXED, t0, rt1;
SELECT ALL t0.c0, t0.c64, rt1.c1 FROM rt0 NOT INDEXED, t0, rt1 WHERE (CAST(((rt1.c5) ISNULL) AS NUMERIC)) UNION ALL SELECT ALL t0.c0, t0.c64, rt1.c1 FROM rt0, t0, rt1 WHERE ((NOT (CAST(((rt1.c5) ISNULL) AS NUMERIC)))) UNION ALL SELECT ALL t0.c0, t0.c64, rt1.c1 FROM rt0, t0, rt1 WHERE (((CAST(((rt1.c5) ISNULL) AS NUMERIC)) ISNULL));
SELECT ALL t0.c0, t0.c64, rt1.c1 FROM rt0 NOT INDEXED, t0, rt1;
SELECT DISTINCT rt1.c3, rt0.c2, rt1.c6 FROM rt1 NOT INDEXED, t0, rt0;
SELECT DISTINCT rt1.c3, rt0.c2, rt1.c6 FROM rt1, t0, rt0 WHERE (CASE WHEN json_extract(rt1.c2, rt0.c0) THEN CASE WHEN rt1.c4 THEN rt1.c5 END ELSE json_extract(rt1.c5, t0.c0, rt1.c4, rt1.c4, rt0.c0, rt1.c0) END) UNION SELECT DISTINCT rt1.c3, rt0.c2, rt1.c6 FROM rt1, t0, rt0 WHERE ((NOT (CASE WHEN json_extract(rt1.c2, rt0.c0) THEN CASE WHEN rt1.c4 THEN rt1.c5 END ELSE json_extract(rt1.c5, t0.c0, rt1.c4, rt1.c4, rt0.c0, rt1.c0) END))) UNION SELECT DISTINCT rt1.c3, rt0.c2, rt1.c6 FROM rt1, t0, rt0 WHERE (((CASE WHEN json_extract(rt1.c2, rt0.c0) THEN CASE WHEN rt1.c4 THEN rt1.c5 END ELSE json_extract(rt1.c5, t0.c0, rt1.c4, rt1.c4, rt0.c0, rt1.c0) END) ISNULL));
SELECT rt1.c2, rt1.c0, rt1.c4, rt1.c1, t0.c0, rt1.c3, t0.c64, rt0.c2, rt1.c6, rt1.c5, rt0.c0, rt0.c1, t0.c1 FROM rt1, t0, rt0 GROUP BY rt1.c2, rt1.c0, rt1.c4, rt1.c1, t0.c0, rt1.c3, t0.c64, rt0.c2, rt1.c6, rt1.c5, rt0.c0, rt0.c1, t0.c1;
SELECT ALL rt1.c2, rt1.c0, rt1.c4, rt1.c1, t0.c0, rt1.c3, t0.c64, rt0.c2, rt1.c6, rt1.c5, rt0.c0, rt0.c1, t0.c1 FROM rt1, t0, rt0 WHERE ((((((rt1.c5) BETWEEN (t0.c1) AND (rt1.c1))))=((rt1.c2 COLLATE BINARY)))) GROUP BY rt1.c2, rt1.c0, rt1.c4, rt1.c1, t0.c0, rt1.c3, t0.c64, rt0.c2, rt1.c6, rt1.c5, rt0.c0, rt0.c1, t0.c1 UNION SELECT rt1.c2, rt1.c0, rt1.c4, rt1.c1, t0.c0, rt1.c3, t0.c64, rt0.c2, rt1.c6, rt1.c5, rt0.c0, rt0.c1, t0.c1 FROM rt1, t0, rt0 WHERE ((NOT ((((((rt1.c5) BETWEEN (t0.c1) AND (rt1.c1))))=((rt1.c2 COLLATE BINARY)))))) GROUP BY rt1.c2, rt1.c0, rt1.c4, rt1.c1, t0.c0, rt1.c3, t0.c64, rt0.c2, rt1.c6, rt1.c5, rt0.c0, rt0.c1, t0.c1 UNION SELECT ALL rt1.c2, rt1.c0, rt1.c4, rt1.c1, t0.c0, rt1.c3, t0.c64, rt0.c2, rt1.c6, rt1.c5, rt0.c0, rt0.c1, t0.c1 FROM rt1, t0, rt0 WHERE ((((((((rt1.c5) BETWEEN (t0.c1) AND (rt1.c1))))=((rt1.c2 COLLATE BINARY)))) ISNULL)) GROUP BY rt1.c2, rt1.c0, rt1.c4, rt1.c1, t0.c0, rt1.c3, t0.c64, rt0.c2, rt1.c6, rt1.c5, rt0.c0, rt0.c1, t0.c1;
SELECT rt1.c2, rt1.c0, rt1.c4, rt1.c1, t0.c0, rt1.c3, t0.c64, rt0.c2, rt1.c6, rt1.c5, rt0.c0, rt0.c1, t0.c1 FROM rt1, t0, rt0 GROUP BY rt1.c2, rt1.c0, rt1.c4, rt1.c1, t0.c0, rt1.c3, t0.c64, rt0.c2, rt1.c6, rt1.c5, rt0.c0, rt0.c1, t0.c1;
SELECT ALL rt1.c0, t0.c64, rt1.c4, t0.c0, rt1.c1, rt0.c1, rt1.c6, rt1.c5 FROM rt1, t0, rt0 GROUP BY rt1.c0, t0.c64, rt1.c4, t0.c0, rt1.c1, rt0.c1, rt1.c6, rt1.c5;
SELECT rt1.c0, t0.c64, rt1.c4, t0.c0, rt1.c1, rt0.c1, rt1.c6, rt1.c5 FROM rt1, t0, rt0 GROUP BY rt1.c0, t0.c64, rt1.c4, t0.c0, rt1.c1, rt0.c1, rt1.c6, rt1.c5 HAVING MIN(rt1.c5 COLLATE BINARY) UNION ALL SELECT rt1.c0, t0.c64, rt1.c4, t0.c0, rt1.c1, rt0.c1, rt1.c6, rt1.c5 FROM rt1, t0, rt0 GROUP BY rt1.c0, t0.c64, rt1.c4, t0.c0, rt1.c1, rt0.c1, rt1.c6, rt1.c5 HAVING (NOT (MIN(rt1.c5 COLLATE BINARY))) UNION ALL SELECT ALL rt1.c0, t0.c64, rt1.c4, t0.c0, rt1.c1, rt0.c1, rt1.c6, rt1.c5 FROM rt1, t0, rt0 GROUP BY rt1.c0, t0.c64, rt1.c4, t0.c0, rt1.c1, rt0.c1, rt1.c6, rt1.c5 HAVING ((MIN(rt1.c5 COLLATE BINARY)) ISNULL);
SELECT ALL rt1.c0, t0.c64, rt1.c4, t0.c0, rt1.c1, rt0.c1, rt1.c6, rt1.c5 FROM rt1, t0, rt0 GROUP BY rt1.c0, t0.c64, rt1.c4, t0.c0, rt1.c1, rt0.c1, rt1.c6, rt1.c5;
SELECT rt1.c0, t0.c64, rt1.c4, t0.c0, rt1.c1, rt0.c1, rt1.c6, rt1.c5 FROM rt1, t0, rt0 GROUP BY rt1.c0, t0.c64, rt1.c4, t0.c0, rt1.c1, rt0.c1, rt1.c6, rt1.c5 HAVING MIN(rt1.c5 COLLATE BINARY) UNION ALL SELECT rt1.c0, t0.c64, rt1.c4, t0.c0, rt1.c1, rt0.c1, rt1.c6, rt1.c5 FROM rt1, t0, rt0 GROUP BY rt1.c0, t0.c64, rt1.c4, t0.c0, rt1.c1, rt0.c1, rt1.c6, rt1.c5 HAVING (NOT (MIN(rt1.c5 COLLATE BINARY))) UNION ALL SELECT ALL rt1.c0, t0.c64, rt1.c4, t0.c0, rt1.c1, rt0.c1, rt1.c6, rt1.c5 FROM rt1, t0, rt0 GROUP BY rt1.c0, t0.c64, rt1.c4, t0.c0, rt1.c1, rt0.c1, rt1.c6, rt1.c5 HAVING ((MIN(rt1.c5 COLLATE BINARY)) ISNULL);
SELECT ALL rt1.c0, t0.c64, rt1.c4, t0.c0, rt1.c1, rt0.c1, rt1.c6, rt1.c5 FROM rt1, t0, rt0 GROUP BY rt1.c0, t0.c64, rt1.c4, t0.c0, rt1.c1, rt0.c1, rt1.c6, rt1.c5;
SELECT * FROM rt1, t0;
SELECT * FROM rt1, t0 WHERE (t0.c64) UNION ALL SELECT * FROM rt1, t0 WHERE ((NOT (t0.c64))) UNION ALL SELECT * FROM rt1, t0 NOT INDEXED WHERE (((t0.c64) ISNULL));
SELECT * FROM rt1, t0;
SELECT DISTINCT rt0.c2 FROM t0 LEFT OUTER JOIN rt0 ON ((((((((((rt0.c2)AND(rt0.c0)))AND(t0.c64)))AND(rt0.c0)))AND(rt1.c6)))GLOB((- (t0.c64)))) INNER JOIN rt1 ON ((CASE rt1.c2  WHEN rt0.c2 THEN rt1.c4 END) ISNULL);
SELECT t0.c1, t0.c0, t0.c64 FROM t0 GROUP BY t0.c1, t0.c0, t0.c64;
SELECT t0.c1, t0.c0, t0.c64 FROM t0 WHERE (((((((((NULL)AND(CASE t0.c1  WHEN t0.c0 THEN t0.c1 ELSE t0.c0 END)))AND(CAST(t0.c0 AS BLOB))))AND((t0.c0 IN ()))))OR(t0.c1))) GROUP BY t0.c1, t0.c0, t0.c64 UNION SELECT ALL t0.c1, t0.c0, t0.c64 FROM t0 WHERE ((NOT (((((((((NULL)AND(CASE t0.c1  WHEN t0.c0 THEN t0.c1 ELSE t0.c0 END)))AND(CAST(t0.c0 AS BLOB))))AND((t0.c0 IN ()))))OR(t0.c1))))) GROUP BY t0.c1, t0.c0, t0.c64 UNION SELECT ALL t0.c1, t0.c0, t0.c64 FROM t0 WHERE (((((((((((NULL)AND(CASE t0.c1  WHEN t0.c0 THEN t0.c1 ELSE t0.c0 END)))AND(CAST(t0.c0 AS BLOB))))AND((t0.c0 IN ()))))OR(t0.c1))) ISNULL)) GROUP BY t0.c1, t0.c0, t0.c64;
SELECT t0.c1, t0.c0, t0.c64 FROM t0 GROUP BY t0.c1, t0.c0, t0.c64;
SELECT ALL rt0.c1, rt1.c0, rt1.c2, t0.c0, rt1.c6, rt1.c4, t0.c64, rt0.c2, rt1.c1, t0.c1, rt1.c3, rt1.c5 FROM rt0, rt1, t0 GROUP BY rt0.c1, rt1.c0, rt1.c2, t0.c0, rt1.c6, rt1.c4, t0.c64, rt0.c2, rt1.c1, t0.c1, rt1.c3, rt1.c5;
SELECT ALL rt0.c1, rt1.c0, rt1.c2, t0.c0, rt1.c6, rt1.c4, t0.c64, rt0.c2, rt1.c1, t0.c1, rt1.c3, rt1.c5 FROM rt0, rt1, t0 GROUP BY rt0.c1, rt1.c0, rt1.c2, t0.c0, rt1.c6, rt1.c4, t0.c64, rt0.c2, rt1.c1, t0.c1, rt1.c3, rt1.c5 HAVING GROUP_CONCAT(t0.c1 COLLATE BINARY) UNION ALL SELECT ALL rt0.c1, rt1.c0, rt1.c2, t0.c0, rt1.c6, rt1.c4, t0.c64, rt0.c2, rt1.c1, t0.c1, rt1.c3, rt1.c5 FROM rt0, rt1, t0 GROUP BY rt0.c1, rt1.c0, rt1.c2, t0.c0, rt1.c6, rt1.c4, t0.c64, rt0.c2, rt1.c1, t0.c1, rt1.c3, rt1.c5 HAVING (NOT (GROUP_CONCAT(t0.c1 COLLATE BINARY))) UNION ALL SELECT rt0.c1, rt1.c0, rt1.c2, t0.c0, rt1.c6, rt1.c4, t0.c64, rt0.c2, rt1.c1, t0.c1, rt1.c3, rt1.c5 FROM rt0, rt1, t0 GROUP BY rt0.c1, rt1.c0, rt1.c2, t0.c0, rt1.c6, rt1.c4, t0.c64, rt0.c2, rt1.c1, t0.c1, rt1.c3, rt1.c5 HAVING ((GROUP_CONCAT(t0.c1 COLLATE BINARY)) ISNULL);
SELECT ALL rt0.c1, rt1.c0, rt1.c2, t0.c0, rt1.c6, rt1.c4, t0.c64, rt0.c2, rt1.c1, t0.c1, rt1.c3, rt1.c5 FROM rt0, rt1, t0 GROUP BY rt0.c1, rt1.c0, rt1.c2, t0.c0, rt1.c6, rt1.c4, t0.c64, rt0.c2, rt1.c1, t0.c1, rt1.c3, rt1.c5;
SELECT ALL rt0.c1, rt1.c0, rt1.c2, t0.c0, rt1.c6, rt1.c4, t0.c64, rt0.c2, rt1.c1, t0.c1, rt1.c3, rt1.c5 FROM rt0, rt1, t0 GROUP BY rt0.c1, rt1.c0, rt1.c2, t0.c0, rt1.c6, rt1.c4, t0.c64, rt0.c2, rt1.c1, t0.c1, rt1.c3, rt1.c5 HAVING GROUP_CONCAT(t0.c1 COLLATE BINARY) UNION ALL SELECT ALL rt0.c1, rt1.c0, rt1.c2, t0.c0, rt1.c6, rt1.c4, t0.c64, rt0.c2, rt1.c1, t0.c1, rt1.c3, rt1.c5 FROM rt0, rt1, t0 GROUP BY rt0.c1, rt1.c0, rt1.c2, t0.c0, rt1.c6, rt1.c4, t0.c64, rt0.c2, rt1.c1, t0.c1, rt1.c3, rt1.c5 HAVING (NOT (GROUP_CONCAT(t0.c1 COLLATE BINARY))) UNION ALL SELECT rt0.c1, rt1.c0, rt1.c2, t0.c0, rt1.c6, rt1.c4, t0.c64, rt0.c2, rt1.c1, t0.c1, rt1.c3, rt1.c5 FROM rt0, rt1, t0 GROUP BY rt0.c1, rt1.c0, rt1.c2, t0.c0, rt1.c6, rt1.c4, t0.c64, rt0.c2, rt1.c1, t0.c1, rt1.c3, rt1.c5 HAVING ((GROUP_CONCAT(t0.c1 COLLATE BINARY)) ISNULL);
SELECT ALL rt0.c1, rt1.c0, rt1.c2, t0.c0, rt1.c6, rt1.c4, t0.c64, rt0.c2, rt1.c1, t0.c1, rt1.c3, rt1.c5 FROM rt0, rt1, t0 GROUP BY rt0.c1, rt1.c0, rt1.c2, t0.c0, rt1.c6, rt1.c4, t0.c64, rt0.c2, rt1.c1, t0.c1, rt1.c3, rt1.c5;
SELECT ALL rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 NOT INDEXED WHERE (json_array_length((- (rt0.c2)), (NOT (rt0.c1)))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (json_array_length((- (rt0.c2)), (NOT (rt0.c1)))))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (((json_array_length((- (rt0.c2)), (NOT (rt0.c1)))) ISNULL));
SELECT DISTINCT t0.c0, rt0.c0, rt0.c1, t0.c64, rt1.c5 FROM t0, rt0, rt1;
SELECT DISTINCT t0.c0, rt0.c0, rt0.c1, t0.c64, rt1.c5 FROM t0, rt0, rt1 WHERE ((- (CAST(t0.c64 AS BLOB)))) UNION SELECT DISTINCT t0.c0, rt0.c0, rt0.c1, t0.c64, rt1.c5 FROM t0, rt0, rt1 WHERE ((NOT ((- (CAST(t0.c64 AS BLOB)))))) UNION SELECT DISTINCT t0.c0, rt0.c0, rt0.c1, t0.c64, rt1.c5 FROM t0 NOT INDEXED, rt0, rt1 WHERE ((((- (CAST(t0.c64 AS BLOB)))) ISNULL));
SELECT DISTINCT t0.c0, rt0.c0, rt0.c1, t0.c64, rt1.c5 FROM t0, rt0, rt1;
SELECT rt0.c2, rt1.c6, rt1.c2, t0.c0 FROM rt1, t0, rt0 GROUP BY rt0.c2, rt1.c6, rt1.c2, t0.c0;
SELECT rt0.c2, rt1.c6, rt1.c2, t0.c0 FROM rt1, t0, rt0 WHERE ((((((t0.c0)) NOT BETWEEN ((t0.c1)) AND ((rt1.c1))))||(UNLIKELY(DISTINCT rt1.c2)))) GROUP BY rt0.c2, rt1.c6, rt1.c2, t0.c0 UNION SELECT ALL rt0.c2, rt1.c6, rt1.c2, t0.c0 FROM rt1, t0, rt0 WHERE ((NOT ((((((t0.c0)) NOT BETWEEN ((t0.c1)) AND ((rt1.c1))))||(UNLIKELY(DISTINCT rt1.c2)))))) GROUP BY rt0.c2, rt1.c6, rt1.c2, t0.c0 UNION SELECT rt0.c2, rt1.c6, rt1.c2, t0.c0 FROM rt1, t0, rt0 WHERE ((((((((t0.c0)) NOT BETWEEN ((t0.c1)) AND ((rt1.c1))))||(UNLIKELY(DISTINCT rt1.c2)))) ISNULL)) GROUP BY rt0.c2, rt1.c6, rt1.c2, t0.c0;
SELECT rt0.c2, rt1.c6, rt1.c2, t0.c0 FROM rt1, t0, rt0 GROUP BY rt0.c2, rt1.c6, rt1.c2, t0.c0;
SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1;
SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1 HAVING (((AVG(MAX(t0.c0))))<((TOTAL(t0.c64)))) UNION ALL SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1 HAVING (NOT ((((AVG(MAX(t0.c0))))<((TOTAL(t0.c64)))))) UNION ALL SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1 HAVING (((((AVG(MAX(t0.c0))))<((TOTAL(t0.c64))))) ISNULL);
SELECT t0.c64, t0.c0 FROM t0;
SELECT ALL t0.c64, t0.c0 FROM t0 WHERE (CASE ((t0.c64)<=(t0.c1))  WHEN t0.c0 COLLATE BINARY THEN INSTR(t0.c64, -1.782074705E9) ELSE CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c1 THEN t0.c1 WHEN t0.c64 THEN t0.c64 END END) UNION ALL SELECT ALL t0.c64, t0.c0 FROM t0 WHERE ((NOT (CASE ((t0.c64)<=(t0.c1))  WHEN t0.c0 COLLATE BINARY THEN INSTR(t0.c64, -1.782074705E9) ELSE CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c1 THEN t0.c1 WHEN t0.c64 THEN t0.c64 END END))) UNION ALL SELECT t0.c64, t0.c0 FROM t0 WHERE (((CASE ((t0.c64)<=(t0.c1))  WHEN t0.c0 COLLATE BINARY THEN INSTR(t0.c64, -1.782074705E9) ELSE CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c1 THEN t0.c1 WHEN t0.c64 THEN t0.c64 END END) ISNULL));
SELECT t0.c64, t0.c0 FROM t0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE ((((((rt0.c2)) NOT BETWEEN (('1813189696')) AND ((rt0.c2))))&(NULL))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((((((rt0.c2)) NOT BETWEEN (('1813189696')) AND ((rt0.c2))))&(NULL))))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE ((((((((rt0.c2)) NOT BETWEEN (('1813189696')) AND ((rt0.c2))))&(NULL))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT rt1.c2, t0.c1, rt0.c2, rt1.c3, rt1.c1, t0.c64, rt0.c0, t0.c0, rt0.c1, rt1.c6, rt1.c4, rt1.c5 FROM rt1, rt0, t0 GROUP BY rt1.c2, t0.c1, rt0.c2, rt1.c3, rt1.c1, t0.c64, rt0.c0, t0.c0, rt0.c1, rt1.c6, rt1.c4, rt1.c5;
SELECT rt1.c2, t0.c1, rt0.c2, rt1.c3, rt1.c1, t0.c64, rt0.c0, t0.c0, rt0.c1, rt1.c6, rt1.c4, rt1.c5 FROM rt1, rt0, t0 WHERE (((((t0.c64)<(t0.c64)))LIKE(UNLIKELY(rt1.c2)))) GROUP BY rt1.c2, t0.c1, rt0.c2, rt1.c3, rt1.c1, t0.c64, rt0.c0, t0.c0, rt0.c1, rt1.c6, rt1.c4, rt1.c5 UNION SELECT rt1.c2, t0.c1, rt0.c2, rt1.c3, rt1.c1, t0.c64, rt0.c0, t0.c0, rt0.c1, rt1.c6, rt1.c4, rt1.c5 FROM rt1, rt0, t0 WHERE ((NOT (((((t0.c64)<(t0.c64)))LIKE(UNLIKELY(rt1.c2)))))) GROUP BY rt1.c2, t0.c1, rt0.c2, rt1.c3, rt1.c1, t0.c64, rt0.c0, t0.c0, rt0.c1, rt1.c6, rt1.c4, rt1.c5 UNION SELECT rt1.c2, t0.c1, rt0.c2, rt1.c3, rt1.c1, t0.c64, rt0.c0, t0.c0, rt0.c1, rt1.c6, rt1.c4, rt1.c5 FROM rt1, rt0, t0 WHERE (((((((t0.c64)<(t0.c64)))LIKE(UNLIKELY(rt1.c2)))) ISNULL)) GROUP BY rt1.c2, t0.c1, rt0.c2, rt1.c3, rt1.c1, t0.c64, rt0.c0, t0.c0, rt0.c1, rt1.c6, rt1.c4, rt1.c5;
SELECT rt1.c2, t0.c1, rt0.c2, rt1.c3, rt1.c1, t0.c64, rt0.c0, t0.c0, rt0.c1, rt1.c6, rt1.c4, rt1.c5 FROM rt1, rt0, t0 GROUP BY rt1.c2, t0.c1, rt0.c2, rt1.c3, rt1.c1, t0.c64, rt0.c0, t0.c0, rt0.c1, rt1.c6, rt1.c4, rt1.c5;
SELECT ALL t0.c0, rt1.c6 FROM rt0, rt1 FULL OUTER JOIN t0 ON CAST((((rt1.c5))==((rt1.c2))) AS REAL) GROUP BY t0.c0, rt1.c6;
SELECT t0.c0, rt1.c6 FROM rt0, rt1 FULL OUTER JOIN t0 ON CAST((((rt1.c5))==((rt1.c2))) AS REAL) GROUP BY t0.c0, rt1.c6 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0, rt1.c6 FROM rt0, rt1 FULL OUTER JOIN t0 ON CAST((((rt1.c5))=((rt1.c2))) AS REAL) GROUP BY t0.c0, rt1.c6 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0, rt1.c6 FROM rt0, rt1 FULL OUTER JOIN t0 ON CAST((((rt1.c5))==((rt1.c2))) AS REAL) GROUP BY t0.c0, rt1.c6 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c0, rt1.c6 FROM rt0, rt1 FULL OUTER JOIN t0 ON CAST((((rt1.c5))==((rt1.c2))) AS REAL) GROUP BY t0.c0, rt1.c6;
SELECT t0.c0, rt1.c6 FROM rt0, rt1 FULL OUTER JOIN t0 ON CAST((((rt1.c5))==((rt1.c2))) AS REAL) GROUP BY t0.c0, rt1.c6 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0, rt1.c6 FROM rt0, rt1 FULL OUTER JOIN t0 ON CAST((((rt1.c5))=((rt1.c2))) AS REAL) GROUP BY t0.c0, rt1.c6 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0, rt1.c6 FROM rt0, rt1 FULL OUTER JOIN t0 ON CAST((((rt1.c5))==((rt1.c2))) AS REAL) GROUP BY t0.c0, rt1.c6 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c0, rt1.c6 FROM rt0, rt1 FULL OUTER JOIN t0 ON CAST((((rt1.c5))==((rt1.c2))) AS REAL) GROUP BY t0.c0, rt1.c6;
SELECT ALL MAX(rt1.c5 COLLATE RTRIM) FROM rt0, t0, rt1;
SELECT t0.c1 FROM t0;
SELECT ALL t0.c1 FROM t0 WHERE (((((t0.c0) IS FALSE)) NOT BETWEEN (CAST(t0.c0 AS BLOB)) AND (CASE WHEN t0.c0 THEN x'' ELSE t0.c64 END))) UNION ALL SELECT ALL t0.c1 FROM t0 WHERE ((NOT (((((t0.c0) IS FALSE)) NOT BETWEEN (CAST(t0.c0 AS BLOB)) AND (CASE WHEN t0.c0 THEN x'' ELSE t0.c64 END))))) UNION ALL SELECT t0.c1 FROM t0 WHERE (((((((t0.c0) IS FALSE)) NOT BETWEEN (CAST(t0.c0 AS BLOB)) AND (CASE WHEN t0.c0 THEN x'' ELSE t0.c64 END))) ISNULL));
SELECT t0.c1 FROM t0;
SELECT DISTINCT * FROM rt0, t0, rt1;
SELECT DISTINCT * FROM rt0, t0, rt1 WHERE ('0.4099741700499402') UNION SELECT DISTINCT * FROM rt0, t0, rt1 WHERE ((NOT ('0.4099741700499402'))) UNION SELECT DISTINCT * FROM rt0, t0, rt1 WHERE ((('0.4099741700499402') ISNULL));
SELECT DISTINCT * FROM rt0, t0, rt1;
SELECT t0.c1, t0.c64, rt1.c3, rt0.c0, rt1.c5 FROM rt0, rt1, t0 GROUP BY t0.c1, t0.c64, rt1.c3, rt0.c0, rt1.c5;
SELECT t0.c1, t0.c64, rt1.c3, rt0.c0, rt1.c5 FROM rt0, rt1, t0 WHERE (((CAST(rt1.c5 AS INTEGER)) NOTNULL)) GROUP BY t0.c1, t0.c64, rt1.c3, rt0.c0, rt1.c5 UNION SELECT t0.c1, t0.c64, rt1.c3, rt0.c0, rt1.c5 FROM rt0, rt1, t0 WHERE ((NOT (((CAST(rt1.c5 AS INTEGER)) NOTNULL)))) GROUP BY t0.c1, t0.c64, rt1.c3, rt0.c0, rt1.c5 UNION SELECT ALL t0.c1, t0.c64, rt1.c3, rt0.c0, rt1.c5 FROM rt0, rt1, t0 WHERE (((((CAST(rt1.c5 AS INTEGER)) NOTNULL)) ISNULL)) GROUP BY t0.c1, t0.c64, rt1.c3, rt0.c0, rt1.c5;
SELECT t0.c1, t0.c64, rt1.c3, rt0.c0, rt1.c5 FROM rt0, rt1, t0 GROUP BY t0.c1, t0.c64, rt1.c3, rt0.c0, rt1.c5;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING CAST(((((rt0.c1)OR(rt0.c2)))AND(SUM(rt0.c2))) AS INTEGER) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (CAST(((((rt0.c1)OR(rt0.c2)))AND(SUM(rt0.c2))) AS INTEGER))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((CAST(((((rt0.c1)OR(rt0.c2)))AND(SUM(rt0.c2))) AS INTEGER)) ISNULL);
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING CAST(((((rt0.c1)OR(rt0.c2)))AND(SUM(rt0.c2))) AS INTEGER) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (CAST(((((rt0.c1)OR(rt0.c2)))AND(SUM(rt0.c2))) AS INTEGER))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((CAST(((((rt0.c1)OR(rt0.c2)))AND(SUM(rt0.c2))) AS INTEGER)) ISNULL);
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT * FROM rt1;
SELECT ALL * FROM rt1 WHERE (((0.3157225540586994 COLLATE BINARY) BETWEEN (((rt1.c5)&(rt1.c6))) AND (((rt1.c1)IS NOT(rt1.c5))))) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT (((0.3157225540586994 COLLATE BINARY) BETWEEN (((rt1.c5)&(rt1.c6))) AND (((rt1.c1)IS NOT(rt1.c5))))))) UNION ALL SELECT ALL * FROM rt1 WHERE (((((0.3157225540586994 COLLATE BINARY) BETWEEN (((rt1.c5)&(rt1.c6))) AND (((rt1.c1)IS NOT(rt1.c5))))) ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT rt1.c2, rt0.c1, rt0.c2, rt1.c3, rt1.c5, rt1.c1 FROM rt1, rt0;
SELECT DISTINCT rt1.c2, rt0.c1, rt0.c2, rt1.c3, rt1.c5, rt1.c1 FROM rt1, rt0 WHERE (((UPPER(rt1.c0))!=(CASE rt1.c2  WHEN rt1.c4 THEN rt0.c1 ELSE rt1.c4 END))) UNION SELECT DISTINCT rt1.c2, rt0.c1, rt0.c2, rt1.c3, rt1.c5, rt1.c1 FROM rt1, rt0 WHERE ((NOT (((UPPER(rt1.c0))<>(CASE rt1.c2  WHEN rt1.c4 THEN rt0.c1 ELSE rt1.c4 END))))) UNION SELECT DISTINCT rt1.c2, rt0.c1, rt0.c2, rt1.c3, rt1.c5, rt1.c1 FROM rt1, rt0 WHERE (((((UPPER(rt1.c0))<>(CASE rt1.c2  WHEN rt1.c4 THEN rt0.c1 ELSE rt1.c4 END))) ISNULL));
SELECT DISTINCT rt1.c2, rt0.c1, rt0.c2, rt1.c3, rt1.c5, rt1.c1 FROM rt1, rt0;
SELECT rt0.c0, rt1.c2 FROM rt1 FULL OUTER JOIN rt0 ON ((((rt0.c2)<>(rt0.c1)))+(((rt1.c0)==(rt1.c3)))) GROUP BY rt0.c0, rt1.c2;
SELECT ALL rt0.c0, rt1.c2 FROM rt1 FULL OUTER JOIN rt0 ON ((((rt0.c2)!=(rt0.c1)))+(((rt1.c0)=(rt1.c3)))) WHERE (rt0.c2) GROUP BY rt0.c0, rt1.c2 UNION SELECT ALL rt0.c0, rt1.c2 FROM rt1 FULL OUTER JOIN rt0 ON ((((rt0.c2)!=(rt0.c1)))+(((rt1.c0)==(rt1.c3)))) WHERE ((NOT (rt0.c2))) GROUP BY rt0.c0, rt1.c2 UNION SELECT ALL rt0.c0, rt1.c2 FROM rt1 FULL OUTER JOIN rt0 ON ((((rt0.c2)<>(rt0.c1)))+(((rt1.c0)=(rt1.c3)))) WHERE (((rt0.c2) ISNULL)) GROUP BY rt0.c0, rt1.c2;
SELECT rt0.c0, rt1.c2 FROM rt1 FULL OUTER JOIN rt0 ON ((((rt0.c2)<>(rt0.c1)))+(((rt1.c0)==(rt1.c3)))) GROUP BY rt0.c0, rt1.c2;
SELECT rt0.c0, t0.c1 FROM t0, rt0 GROUP BY rt0.c0, t0.c1;
SELECT rt0.c0, t0.c1 FROM t0, rt0 GROUP BY rt0.c0, t0.c1 HAVING SUM(((COUNT(rt0.c2))GLOB(AVG(t0.c0)))) UNION ALL SELECT rt0.c0, t0.c1 FROM t0, rt0 GROUP BY rt0.c0, t0.c1 HAVING (NOT (SUM(((COUNT(rt0.c2))GLOB(AVG(t0.c0)))))) UNION ALL SELECT ALL rt0.c0, t0.c1 FROM t0, rt0 GROUP BY rt0.c0, t0.c1 HAVING ((SUM(((COUNT(rt0.c2))GLOB(AVG(t0.c0))))) ISNULL);
SELECT ALL rt0.c2, t0.c64, rt1.c0, rt1.c3, rt0.c0 FROM rt0, rt1, t0;
SELECT ALL rt0.c2, t0.c64, rt1.c0, rt1.c3, rt0.c0 FROM rt0, rt1, t0 WHERE (CASE rt1.c2  WHEN rt1.c2 THEN 0.4314378571913223 ELSE rt1.c2 END COLLATE BINARY) UNION ALL SELECT ALL rt0.c2, t0.c64, rt1.c0, rt1.c3, rt0.c0 FROM rt0, rt1, t0 WHERE ((NOT (CASE rt1.c2  WHEN rt1.c2 THEN 0.4314378571913223 ELSE rt1.c2 END COLLATE BINARY))) UNION ALL SELECT rt0.c2, t0.c64, rt1.c0, rt1.c3, rt0.c0 FROM rt0, rt1, t0 WHERE (((CASE rt1.c2  WHEN rt1.c2 THEN 0.4314378571913223 ELSE rt1.c2 END COLLATE BINARY) ISNULL));
SELECT ALL rt0.c2, t0.c64, rt1.c0, rt1.c3, rt0.c0 FROM rt0, rt1, t0;
SELECT DISTINCT t0.c1, rt1.c5, rt1.c2, rt1.c3, rt1.c0, rt1.c6, rt0.c2, rt0.c1, t0.c64, rt0.c0 FROM rt0, rt1, t0;
SELECT DISTINCT t0.c1, rt1.c5, rt1.c2, rt1.c3, rt1.c0, rt1.c6, rt0.c2, rt0.c1, t0.c64, rt0.c0 FROM rt0, rt1, t0 WHERE (((CASE 0.931127530914481  WHEN rt0.c0 THEN rt1.c2 ELSE rt1.c4 END) BETWEEN (((t0.c0) IS FALSE)) AND (rt1.c6 COLLATE BINARY))) UNION SELECT DISTINCT t0.c1, rt1.c5, rt1.c2, rt1.c3, rt1.c0, rt1.c6, rt0.c2, rt0.c1, t0.c64, rt0.c0 FROM rt0, rt1, t0 WHERE ((NOT (((CASE 0.931127530914481  WHEN rt0.c0 THEN rt1.c2 ELSE rt1.c4 END) BETWEEN (((t0.c0) IS FALSE)) AND (rt1.c6 COLLATE BINARY))))) UNION SELECT DISTINCT t0.c1, rt1.c5, rt1.c2, rt1.c3, rt1.c0, rt1.c6, rt0.c2, rt0.c1, t0.c64, rt0.c0 FROM rt0, rt1, t0 WHERE (((((CASE 0.931127530914481  WHEN rt0.c0 THEN rt1.c2 ELSE rt1.c4 END) BETWEEN (((t0.c0) IS FALSE)) AND (rt1.c6 COLLATE BINARY))) ISNULL));
SELECT DISTINCT t0.c1, rt1.c5, rt1.c2, rt1.c3, rt1.c0, rt1.c6, rt0.c2, rt0.c1, t0.c64, rt0.c0 FROM rt0, rt1, t0;
SELECT rt0.c1, rt1.c2, rt1.c5, rt0.c2, t0.c1, rt1.c6 FROM t0, rt1, rt0 GROUP BY rt0.c1, rt1.c2, rt1.c5, rt0.c2, t0.c1, rt1.c6;
SELECT rt0.c1, rt1.c2, rt1.c5, rt0.c2, t0.c1, rt1.c6 FROM t0, rt1, rt0 WHERE (rt0.c1 COLLATE BINARY) GROUP BY rt0.c1, rt1.c2, rt1.c5, rt0.c2, t0.c1, rt1.c6 UNION SELECT rt0.c1, rt1.c2, rt1.c5, rt0.c2, t0.c1, rt1.c6 FROM t0, rt1, rt0 WHERE ((NOT (rt0.c1 COLLATE BINARY))) GROUP BY rt0.c1, rt1.c2, rt1.c5, rt0.c2, t0.c1, rt1.c6 UNION SELECT rt0.c1, rt1.c2, rt1.c5, rt0.c2, t0.c1, rt1.c6 FROM t0, rt1, rt0 WHERE (((rt0.c1 COLLATE BINARY) ISNULL)) GROUP BY rt0.c1, rt1.c2, rt1.c5, rt0.c2, t0.c1, rt1.c6;
SELECT rt0.c1, rt1.c2, rt1.c5, rt0.c2, t0.c1, rt1.c6 FROM t0, rt1, rt0 GROUP BY rt0.c1, rt1.c2, rt1.c5, rt0.c2, t0.c1, rt1.c6;
SELECT ALL t0.c1, t0.c0, rt0.c1, rt1.c1 FROM rt1 RIGHT OUTER JOIN t0 ON (((~ (rt1.c2))) ISNULL) LEFT OUTER JOIN rt0 ON (NULL IN (0.19475021894259337, t0.c64 COLLATE RTRIM)) GROUP BY t0.c1, t0.c0, rt0.c1, rt1.c1;
SELECT ALL t0.c1, t0.c0, rt0.c1, rt1.c1 FROM rt1 RIGHT OUTER JOIN t0 ON (((~ (rt1.c2))) ISNULL) LEFT OUTER JOIN rt0 ON (NULL IN (0.19475021894259337, t0.c64 COLLATE RTRIM)) GROUP BY t0.c1, t0.c0, rt0.c1, rt1.c1 HAVING (NOT (MAX(rt1.c2))) UNION ALL SELECT t0.c1, t0.c0, rt0.c1, rt1.c1 FROM rt1 RIGHT OUTER JOIN t0 ON (((~ (rt1.c2))) ISNULL) LEFT OUTER JOIN rt0 ON (NULL IN (0.19475021894259337, t0.c64 COLLATE RTRIM)) GROUP BY t0.c1, t0.c0, rt0.c1, rt1.c1 HAVING (NOT ((NOT (MAX(rt1.c2))))) UNION ALL SELECT ALL t0.c1, t0.c0, rt0.c1, rt1.c1 FROM rt1 RIGHT OUTER JOIN t0 ON (((~ (rt1.c2))) ISNULL) LEFT OUTER JOIN rt0 ON (NULL IN (0.19475021894259337, t0.c64 COLLATE RTRIM)) GROUP BY t0.c1, t0.c0, rt0.c1, rt1.c1 HAVING (((NOT (MAX(rt1.c2)))) ISNULL);
SELECT ALL t0.c1, t0.c0, rt0.c1, rt1.c1 FROM rt1 RIGHT OUTER JOIN t0 ON (((~ (rt1.c2))) ISNULL) LEFT OUTER JOIN rt0 ON (NULL IN (0.19475021894259337, t0.c64 COLLATE RTRIM)) GROUP BY t0.c1, t0.c0, rt0.c1, rt1.c1;
SELECT ALL t0.c1, t0.c0, rt0.c1, rt1.c1 FROM rt1 RIGHT OUTER JOIN t0 ON (((~ (rt1.c2))) ISNULL) LEFT OUTER JOIN rt0 ON (NULL IN (0.19475021894259337, t0.c64 COLLATE RTRIM)) GROUP BY t0.c1, t0.c0, rt0.c1, rt1.c1 HAVING (NOT (MAX(rt1.c2))) UNION ALL SELECT t0.c1, t0.c0, rt0.c1, rt1.c1 FROM rt1 RIGHT OUTER JOIN t0 ON (((~ (rt1.c2))) ISNULL) LEFT OUTER JOIN rt0 ON (NULL IN (0.19475021894259337, t0.c64 COLLATE RTRIM)) GROUP BY t0.c1, t0.c0, rt0.c1, rt1.c1 HAVING (NOT ((NOT (MAX(rt1.c2))))) UNION ALL SELECT ALL t0.c1, t0.c0, rt0.c1, rt1.c1 FROM rt1 RIGHT OUTER JOIN t0 ON (((~ (rt1.c2))) ISNULL) LEFT OUTER JOIN rt0 ON (NULL IN (0.19475021894259337, t0.c64 COLLATE RTRIM)) GROUP BY t0.c1, t0.c0, rt0.c1, rt1.c1 HAVING (((NOT (MAX(rt1.c2)))) ISNULL);
SELECT ALL t0.c1, t0.c0, rt0.c1, rt1.c1 FROM rt1 RIGHT OUTER JOIN t0 ON (((~ (rt1.c2))) ISNULL) LEFT OUTER JOIN rt0 ON (NULL IN (0.19475021894259337, t0.c64 COLLATE RTRIM)) GROUP BY t0.c1, t0.c0, rt0.c1, rt1.c1;
SELECT rt1.c0, rt1.c4, t0.c1, rt1.c6, rt0.c0 FROM rt0, rt1 CROSS JOIN t0 ON (((rt1.c2)<(rt1.c6)) IN (CASE t0.c1  WHEN rt0.c1 THEN rt1.c1 WHEN rt1.c0 THEN t0.c64 WHEN rt1.c6 THEN rt1.c1 ELSE rt0.c0 END));
SELECT ALL rt1.c0, rt1.c4, t0.c1, rt1.c6, rt0.c0 FROM rt0, rt1 CROSS JOIN t0 ON (((rt1.c2)<(rt1.c6)) IN (CASE t0.c1  WHEN rt0.c1 THEN rt1.c1 WHEN rt1.c0 THEN t0.c64 WHEN rt1.c6 THEN rt1.c1 ELSE rt0.c0 END)) WHERE (((((rt0.c0)IS(rt1.c5))) NOTNULL)) UNION ALL SELECT rt1.c0, rt1.c4, t0.c1, rt1.c6, rt0.c0 FROM rt0, rt1 CROSS JOIN t0 ON (((rt1.c2)<(rt1.c6)) IN (CASE t0.c1  WHEN rt0.c1 THEN rt1.c1 WHEN rt1.c0 THEN t0.c64 WHEN rt1.c6 THEN rt1.c1 ELSE rt0.c0 END)) WHERE ((NOT (((((rt0.c0)IS(rt1.c5))) NOTNULL)))) UNION ALL SELECT ALL rt1.c0, rt1.c4, t0.c1, rt1.c6, rt0.c0 FROM rt0, rt1 CROSS JOIN t0 ON (((rt1.c2)<(rt1.c6)) IN (CASE t0.c1  WHEN rt0.c1 THEN rt1.c1 WHEN rt1.c0 THEN t0.c64 WHEN rt1.c6 THEN rt1.c1 ELSE rt0.c0 END)) WHERE (((((((rt0.c0)IS(rt1.c5))) NOTNULL)) ISNULL));
SELECT rt1.c0, rt1.c4, t0.c1, rt1.c6, rt0.c0 FROM rt0, rt1 CROSS JOIN t0 ON (((rt1.c2)<(rt1.c6)) IN (CASE t0.c1  WHEN rt0.c1 THEN rt1.c1 WHEN rt1.c0 THEN t0.c64 WHEN rt1.c6 THEN rt1.c1 ELSE rt0.c0 END));
SELECT DISTINCT rt1.c5, rt1.c4, rt1.c0, rt1.c6, rt1.c3 FROM rt1;
SELECT DISTINCT rt1.c5, rt1.c4, rt1.c0, rt1.c6, rt1.c3 FROM rt1 WHERE ((NOT (((rt1.c4)||(rt1.c4))))) UNION SELECT DISTINCT rt1.c5, rt1.c4, rt1.c0, rt1.c6, rt1.c3 FROM rt1 WHERE ((NOT ((NOT (((rt1.c4)||(rt1.c4))))))) UNION SELECT DISTINCT rt1.c5, rt1.c4, rt1.c0, rt1.c6, rt1.c3 FROM rt1 WHERE ((((NOT (((rt1.c4)||(rt1.c4))))) ISNULL));
SELECT DISTINCT rt1.c5, rt1.c4, rt1.c0, rt1.c6, rt1.c3 FROM rt1;
SELECT ALL t0.c1, t0.c64, t0.c0 FROM t0 GROUP BY t0.c1, t0.c64, t0.c0;
SELECT ALL t0.c1, t0.c64, t0.c0 FROM t0 WHERE ((((t0.c64)) BETWEEN (((((t0.c0, t0.c0, x''))>((0.6316364623416549, t0.c0, t0.c1))))) AND ((((t0.c1) NOT NULL))))) GROUP BY t0.c1, t0.c64, t0.c0 UNION SELECT t0.c1, t0.c64, t0.c0 FROM t0 WHERE ((NOT ((((t0.c64)) BETWEEN (((((t0.c0, t0.c0, x''))>((0.6316364623416549, t0.c0, t0.c1))))) AND ((((t0.c1) NOT NULL))))))) GROUP BY t0.c1, t0.c64, t0.c0 UNION SELECT t0.c1, t0.c64, t0.c0 FROM t0 WHERE ((((((t0.c64)) BETWEEN (((((t0.c0, t0.c0, x''))>((0.6316364623416549, t0.c0, t0.c1))))) AND ((((t0.c1) NOT NULL))))) ISNULL)) GROUP BY t0.c1, t0.c64, t0.c0;
SELECT ALL t0.c1, t0.c64, t0.c0 FROM t0 GROUP BY t0.c1, t0.c64, t0.c0;
SELECT rt1.c2 FROM rt1, t0 GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1, t0 GROUP BY rt1.c2 HAVING GROUP_CONCAT(MIN(rt1.c0)) UNION ALL SELECT rt1.c2 FROM rt1, t0 GROUP BY rt1.c2 HAVING (NOT (GROUP_CONCAT(MIN(rt1.c0)))) UNION ALL SELECT ALL rt1.c2 FROM rt1, t0 GROUP BY rt1.c2 HAVING ((GROUP_CONCAT(MIN(rt1.c0))) ISNULL);
SELECT * FROM t0 FULL OUTER JOIN rt0 ON ((rt1.c4 COLLATE NOCASE)%(CASE WHEN rt1.c3 THEN rt0.c2 END)) INNER JOIN rt1 ON (((rt0.c0)+(rt1.c6)) IN ());
SELECT ALL * FROM t0 FULL OUTER JOIN rt0 ON ((rt1.c4 COLLATE NOCASE)%(CASE WHEN rt1.c3 THEN rt0.c2 END)) INNER JOIN rt1 ON (((rt0.c0)+(rt1.c6)) IN ()) WHERE (((((rt1.c3 COLLATE BINARY)AND(t0.c0)))AND((- (rt1.c1))))) UNION ALL SELECT ALL * FROM t0 FULL OUTER JOIN rt0 ON ((rt1.c4 COLLATE NOCASE)%(CASE WHEN rt1.c3 THEN rt0.c2 END)) INNER JOIN rt1 ON (((rt0.c0)+(rt1.c6)) IN ()) WHERE ((NOT (((((rt1.c3 COLLATE BINARY)AND(t0.c0)))AND((- (rt1.c1))))))) UNION ALL SELECT * FROM t0 FULL OUTER JOIN rt0 ON ((rt1.c4 COLLATE NOCASE)%(CASE WHEN rt1.c3 THEN rt0.c2 END)) INNER JOIN rt1 ON (((rt0.c0)+(rt1.c6)) IN ()) WHERE (((((((rt1.c3 COLLATE BINARY)AND(t0.c0)))AND((- (rt1.c1))))) ISNULL));
SELECT * FROM t0 FULL OUTER JOIN rt0 ON ((rt1.c4 COLLATE NOCASE)%(CASE WHEN rt1.c3 THEN rt0.c2 END)) INNER JOIN rt1 ON (((rt0.c0)+(rt1.c6)) IN ());
SELECT DISTINCT * FROM rt0, rt1;
SELECT DISTINCT * FROM rt0, rt1 WHERE ((((((rt1.c0, rt1.c0, rt1.c2)) BETWEEN ((rt0.c1, rt1.c2, rt1.c6)) AND ((rt0.c0, rt1.c5, rt1.c0))))<(CAST(rt1.c2 AS NUMERIC)))) UNION SELECT DISTINCT * FROM rt0, rt1 WHERE ((NOT ((((((rt1.c0, rt1.c0, rt1.c2)) BETWEEN ((rt0.c1, rt1.c2, rt1.c6)) AND ((rt0.c0, rt1.c5, rt1.c0))))<(CAST(rt1.c2 AS NUMERIC)))))) UNION SELECT DISTINCT * FROM rt0, rt1 WHERE ((((((((rt1.c0, rt1.c0, rt1.c2)) BETWEEN ((rt0.c1, rt1.c2, rt1.c6)) AND ((rt0.c0, rt1.c5, rt1.c0))))<(CAST(rt1.c2 AS NUMERIC)))) ISNULL));
SELECT DISTINCT * FROM rt0, rt1;
SELECT ALL rt1.c4, rt1.c0, rt1.c3, rt1.c2 FROM rt0, t0, rt1 NOT INDEXED GROUP BY rt1.c4, rt1.c0, rt1.c3, rt1.c2;
SELECT rt1.c4, rt1.c0, rt1.c3, rt1.c2 FROM rt0, t0, rt1 WHERE (CAST(rt1.c1 AS REAL) COLLATE NOCASE) GROUP BY rt1.c4, rt1.c0, rt1.c3, rt1.c2 UNION SELECT rt1.c4, rt1.c0, rt1.c3, rt1.c2 FROM rt0, t0, rt1 WHERE ((NOT (CAST(rt1.c1 AS REAL) COLLATE NOCASE))) GROUP BY rt1.c4, rt1.c0, rt1.c3, rt1.c2 UNION SELECT rt1.c4, rt1.c0, rt1.c3, rt1.c2 FROM rt0, t0, rt1 WHERE (((CAST(rt1.c1 AS REAL) COLLATE NOCASE) ISNULL)) GROUP BY rt1.c4, rt1.c0, rt1.c3, rt1.c2;
SELECT ALL rt1.c4, rt1.c0, rt1.c3, rt1.c2 FROM rt0, t0, rt1 NOT INDEXED GROUP BY rt1.c4, rt1.c0, rt1.c3, rt1.c2;
SELECT ALL rt1.c1, rt1.c0, rt1.c6, rt1.c4, rt1.c3, rt1.c2, rt1.c5 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c6, rt1.c4, rt1.c3, rt1.c2, rt1.c5;
SELECT ALL rt1.c1, rt1.c0, rt1.c6, rt1.c4, rt1.c3, rt1.c2, rt1.c5 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c6, rt1.c4, rt1.c3, rt1.c2, rt1.c5 HAVING -222767602 UNION ALL SELECT rt1.c1, rt1.c0, rt1.c6, rt1.c4, rt1.c3, rt1.c2, rt1.c5 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c6, rt1.c4, rt1.c3, rt1.c2, rt1.c5 HAVING (NOT (-222767602)) UNION ALL SELECT rt1.c1, rt1.c0, rt1.c6, rt1.c4, rt1.c3, rt1.c2, rt1.c5 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c6, rt1.c4, rt1.c3, rt1.c2, rt1.c5 HAVING ((-222767602) ISNULL);
SELECT ALL rt1.c1, rt1.c0, rt1.c6, rt1.c4, rt1.c3, rt1.c2, rt1.c5 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c6, rt1.c4, rt1.c3, rt1.c2, rt1.c5;
SELECT ALL rt1.c1, rt1.c0, rt1.c6, rt1.c4, rt1.c3, rt1.c2, rt1.c5 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c6, rt1.c4, rt1.c3, rt1.c2, rt1.c5 HAVING -222767602 UNION ALL SELECT rt1.c1, rt1.c0, rt1.c6, rt1.c4, rt1.c3, rt1.c2, rt1.c5 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c6, rt1.c4, rt1.c3, rt1.c2, rt1.c5 HAVING (NOT (-222767602)) UNION ALL SELECT rt1.c1, rt1.c0, rt1.c6, rt1.c4, rt1.c3, rt1.c2, rt1.c5 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c6, rt1.c4, rt1.c3, rt1.c2, rt1.c5 HAVING ((-222767602) ISNULL);
SELECT ALL rt1.c1, rt1.c0, rt1.c6, rt1.c4, rt1.c3, rt1.c2, rt1.c5 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c6, rt1.c4, rt1.c3, rt1.c2, rt1.c5;
SELECT ALL * FROM rt1, rt0;
SELECT * FROM rt1, rt0 WHERE (CAST(((rt0.c1)>>(-2.22767602E8)) AS NUMERIC)) UNION ALL SELECT ALL * FROM rt1, rt0 WHERE ((NOT (CAST(((rt0.c1)>>(-2.22767602E8)) AS NUMERIC)))) UNION ALL SELECT * FROM rt1, rt0 WHERE (((CAST(((rt0.c1)>>(-2.22767602E8)) AS NUMERIC)) ISNULL));
SELECT ALL * FROM rt1, rt0;
SELECT DISTINCT * FROM rt1 CROSS JOIN t0 ON (- ((rt1.c4 IN ())));
SELECT DISTINCT * FROM rt1 CROSS JOIN t0 ON (- ((rt1.c4 IN ()))) WHERE (rt1.c1) UNION SELECT DISTINCT * FROM rt1 CROSS JOIN t0 ON (- ((rt1.c4 IN ()))) WHERE ((NOT (rt1.c1))) UNION SELECT DISTINCT * FROM rt1 CROSS JOIN t0 ON (- ((rt1.c4 IN ()))) WHERE (((rt1.c1) ISNULL));
SELECT DISTINCT * FROM rt1 CROSS JOIN t0 ON (- ((rt1.c4 IN ())));
SELECT rt1.c6, t0.c1, rt1.c5, rt0.c2 FROM rt0 LEFT OUTER JOIN t0 ON 0.29507821890358865 CROSS JOIN rt1 ON CAST(load_extension(0Xffffffffa380788a, x'') AS BLOB) GROUP BY rt1.c6, t0.c1, rt1.c5, rt0.c2;
SELECT rt1.c6, rt1.c5, rt1.c2, rt1.c0, rt1.c3, rt1.c4, rt1.c1 FROM rt1 GROUP BY rt1.c6, rt1.c5, rt1.c2, rt1.c0, rt1.c3, rt1.c4, rt1.c1;
SELECT rt1.c6, rt1.c5, rt1.c2, rt1.c0, rt1.c3, rt1.c4, rt1.c1 FROM rt1 NOT INDEXED GROUP BY rt1.c6, rt1.c5, rt1.c2, rt1.c0, rt1.c3, rt1.c4, rt1.c1 HAVING UPPER(DISTINCT TOTAL(MIN(GROUP_CONCAT(rt1.c1)))) UNION ALL SELECT ALL rt1.c6, rt1.c5, rt1.c2, rt1.c0, rt1.c3, rt1.c4, rt1.c1 FROM rt1 GROUP BY rt1.c6, rt1.c5, rt1.c2, rt1.c0, rt1.c3, rt1.c4, rt1.c1 HAVING (NOT (UPPER(DISTINCT TOTAL(MIN(GROUP_CONCAT(rt1.c1)))))) UNION ALL SELECT ALL rt1.c6, rt1.c5, rt1.c2, rt1.c0, rt1.c3, rt1.c4, rt1.c1 FROM rt1 GROUP BY rt1.c6, rt1.c5, rt1.c2, rt1.c0, rt1.c3, rt1.c4, rt1.c1 HAVING ((UPPER(DISTINCT TOTAL(MIN(GROUP_CONCAT(rt1.c1))))) ISNULL);
SELECT ALL * FROM t0, rt1, rt0;
SELECT ALL * FROM t0, rt1, rt0 WHERE ('1603938693') UNION ALL SELECT * FROM t0, rt1, rt0 WHERE ((NOT ('1603938693'))) UNION ALL SELECT ALL * FROM t0, rt1, rt0 WHERE ((('1603938693') ISNULL));
SELECT ALL * FROM t0, rt1, rt0;
SELECT DISTINCT * FROM t0, rt0, rt1;
SELECT DISTINCT * FROM t0, rt0, rt1 WHERE (((NOT (0.5842737144818874)) IN ((rt0.c2 IN ()), ((rt0.c0) ISNULL)))) UNION SELECT DISTINCT * FROM t0, rt0, rt1 WHERE ((NOT (((NOT (0.5842737144818874)) IN ((rt0.c2 IN ()), ((rt0.c0) ISNULL)))))) UNION SELECT DISTINCT * FROM t0, rt0, rt1 WHERE (((((NOT (0.5842737144818874)) IN ((rt0.c2 IN ()), ((rt0.c0) ISNULL)))) ISNULL));
SELECT DISTINCT * FROM t0, rt0, rt1;
SELECT rt0.c1, rt0.c2, rt0.c0, t0.c0, t0.c1, t0.c64 FROM t0 INNER JOIN rt0 ON rt0.c0 GROUP BY rt0.c1, rt0.c2, rt0.c0, t0.c0, t0.c1, t0.c64;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, t0.c0, t0.c1, t0.c64 FROM t0 INNER JOIN rt0 ON rt0.c0 WHERE (((((x'')AND((+ (t0.c1)))))OR(((t0.c0)>>(rt0.c2))))) GROUP BY rt0.c1, rt0.c2, rt0.c0, t0.c0, t0.c1, t0.c64 UNION SELECT rt0.c1, rt0.c2, rt0.c0, t0.c0, t0.c1, t0.c64 FROM t0 INNER JOIN rt0 ON rt0.c0 WHERE ((NOT (((((x'')AND((+ (t0.c1)))))OR(((t0.c0)>>(rt0.c2))))))) GROUP BY rt0.c1, rt0.c2, rt0.c0, t0.c0, t0.c1, t0.c64 UNION SELECT rt0.c1, rt0.c2, rt0.c0, t0.c0, t0.c1, t0.c64 FROM t0 INNER JOIN rt0 ON rt0.c0 WHERE (((((((x'')AND((+ (t0.c1)))))OR(((t0.c0)>>(rt0.c2))))) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0, t0.c0, t0.c1, t0.c64;
SELECT rt0.c1, rt0.c2, rt0.c0, t0.c0, t0.c1, t0.c64 FROM t0 INNER JOIN rt0 ON rt0.c0 GROUP BY rt0.c1, rt0.c2, rt0.c0, t0.c0, t0.c1, t0.c64;
SELECT t0.c64, t0.c1 FROM t0 NATURAL JOIN rt0 GROUP BY t0.c64, t0.c1;
SELECT t0.c64, t0.c1 FROM t0 NATURAL JOIN rt0 GROUP BY t0.c64, t0.c1 HAVING 0.8082529257371448 UNION ALL SELECT ALL t0.c64, t0.c1 FROM t0 NATURAL JOIN rt0 GROUP BY t0.c64, t0.c1 HAVING (NOT (0.8082529257371448)) UNION ALL SELECT t0.c64, t0.c1 FROM t0 NATURAL JOIN rt0 GROUP BY t0.c64, t0.c1 HAVING ((0.8082529257371448) ISNULL);
SELECT t0.c64, t0.c1 FROM t0 NATURAL JOIN rt0 GROUP BY t0.c64, t0.c1;
SELECT t0.c64, t0.c1 FROM t0 NATURAL JOIN rt0 GROUP BY t0.c64, t0.c1 HAVING 0.8082529257371448 UNION ALL SELECT ALL t0.c64, t0.c1 FROM t0 NATURAL JOIN rt0 GROUP BY t0.c64, t0.c1 HAVING (NOT (0.8082529257371448)) UNION ALL SELECT t0.c64, t0.c1 FROM t0 NATURAL JOIN rt0 GROUP BY t0.c64, t0.c1 HAVING ((0.8082529257371448) ISNULL);
SELECT t0.c64, t0.c1 FROM t0 NATURAL JOIN rt0 GROUP BY t0.c64, t0.c1;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((((((((NULL)AND(((rt0.c0)>=(rt0.c2)))))AND((NOT (rt0.c0)))))OR((rt0.c0 IN (rt0.c0, rt0.c1)))))AND(((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c2))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((((((((NULL)AND(((rt0.c0)>=(rt0.c2)))))AND((NOT (rt0.c0)))))OR((rt0.c0 IN (rt0.c0, rt0.c1)))))AND(((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c2))))))) UNION ALL SELECT * FROM rt0 WHERE (((((((((((NULL)AND(((rt0.c0)>=(rt0.c2)))))AND((NOT (rt0.c0)))))OR((rt0.c0 IN (rt0.c0, rt0.c1)))))AND(((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c2))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM t0, rt1;
SELECT DISTINCT * FROM t0, rt1 WHERE (((load_extension(t0.c64, rt1.c1)) BETWEEN (t0.c0) AND (((rt1.c6) IS FALSE)))) UNION SELECT DISTINCT * FROM t0, rt1 WHERE ((NOT (((load_extension(t0.c64, rt1.c1)) BETWEEN (t0.c0) AND (((rt1.c6) IS FALSE)))))) UNION SELECT DISTINCT * FROM t0, rt1 WHERE (((((load_extension(t0.c64, rt1.c1)) BETWEEN (t0.c0) AND (((rt1.c6) IS FALSE)))) ISNULL));
SELECT ALL rt1.c3, rt1.c4, rt1.c5, rt1.c2, t0.c1, t0.c64, rt1.c1 FROM t0 NATURAL JOIN rt1 GROUP BY rt1.c3, rt1.c4, rt1.c5, rt1.c2, t0.c1, t0.c64, rt1.c1;
SELECT ALL rt1.c3, rt1.c4, rt1.c5, rt1.c2, t0.c1, t0.c64, rt1.c1 FROM t0 NATURAL JOIN rt1 WHERE (((CAST(rt1.c5 AS REAL))-(CAST(rt1.c0 AS INTEGER)))) GROUP BY rt1.c3, rt1.c4, rt1.c5, rt1.c2, t0.c1, t0.c64, rt1.c1 UNION SELECT ALL rt1.c3, rt1.c4, rt1.c5, rt1.c2, t0.c1, t0.c64, rt1.c1 FROM t0 NATURAL JOIN rt1 WHERE ((NOT (((CAST(rt1.c5 AS REAL))-(CAST(rt1.c0 AS INTEGER)))))) GROUP BY rt1.c3, rt1.c4, rt1.c5, rt1.c2, t0.c1, t0.c64, rt1.c1 UNION SELECT ALL rt1.c3, rt1.c4, rt1.c5, rt1.c2, t0.c1, t0.c64, rt1.c1 FROM t0 NATURAL JOIN rt1 WHERE (((((CAST(rt1.c5 AS REAL))-(CAST(rt1.c0 AS INTEGER)))) ISNULL)) GROUP BY rt1.c3, rt1.c4, rt1.c5, rt1.c2, t0.c1, t0.c64, rt1.c1;
SELECT ALL rt1.c3, rt1.c4, rt1.c5, rt1.c2, t0.c1, t0.c64, rt1.c1 FROM t0 NATURAL JOIN rt1 GROUP BY rt1.c3, rt1.c4, rt1.c5, rt1.c2, t0.c1, t0.c64, rt1.c1;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((((((((COUNT(MAX(rt0.c2)))AND(SUM(MIN(rt0.c0)))))AND(MAX(MAX(MIN(COUNT(*)))))))OR(SUM(MIN(MIN(rt0.c2))))))AND(CAST(COUNT(COUNT(TOTAL(rt0.c2))) AS INTEGER))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (((((((((COUNT(MAX(rt0.c2)))AND(SUM(MIN(rt0.c0)))))AND(MAX(MAX(MIN(COUNT(*)))))))OR(SUM(MIN(MIN(rt0.c2))))))AND(CAST(COUNT(COUNT(TOTAL(rt0.c2))) AS INTEGER))))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((((((((((COUNT(MAX(rt0.c2)))AND(SUM(MIN(rt0.c0)))))AND(MAX(MAX(MIN(COUNT(*)))))))OR(SUM(MIN(MIN(rt0.c2))))))AND(CAST(COUNT(COUNT(TOTAL(rt0.c2))) AS INTEGER)))) ISNULL);
SELECT rt1.c6, rt0.c1, rt1.c0, rt1.c3, t0.c64, rt1.c1 FROM rt0, t0 CROSS JOIN rt1 ON (((t0.c1)) NOT BETWEEN ((LIKELY(DISTINCT rt1.c2))) AND ((rt1.c2 COLLATE RTRIM)));
SELECT rt1.c6, rt0.c1, rt1.c0, rt1.c3, t0.c64, rt1.c1 FROM rt0, t0 CROSS JOIN rt1 ON (((t0.c1)) NOT BETWEEN ((LIKELY(DISTINCT rt1.c2))) AND ((rt1.c2 COLLATE RTRIM))) WHERE ('418505112') UNION ALL SELECT rt1.c6, rt0.c1, rt1.c0, rt1.c3, t0.c64, rt1.c1 FROM rt0, t0 CROSS JOIN rt1 ON (((t0.c1)) NOT BETWEEN ((LIKELY(DISTINCT rt1.c2))) AND ((rt1.c2 COLLATE RTRIM))) WHERE ((NOT ('418505112'))) UNION ALL SELECT rt1.c6, rt0.c1, rt1.c0, rt1.c3, t0.c64, rt1.c1 FROM rt0, t0 CROSS JOIN rt1 ON (((t0.c1)) NOT BETWEEN ((LIKELY(DISTINCT rt1.c2))) AND ((rt1.c2 COLLATE RTRIM))) WHERE ((('418505112') ISNULL));
SELECT rt1.c6, rt0.c1, rt1.c0, rt1.c3, t0.c64, rt1.c1 FROM rt0, t0 CROSS JOIN rt1 ON (((t0.c1)) NOT BETWEEN ((LIKELY(DISTINCT rt1.c2))) AND ((rt1.c2 COLLATE RTRIM)));
SELECT DISTINCT t0.c0, rt0.c1, rt0.c0, rt1.c0, rt1.c5, rt1.c2, rt1.c3, rt1.c6, rt0.c2, rt1.c4 FROM t0 CROSS JOIN rt0 ON ((((((rt1.c4) IS TRUE))OR(t0.c64)))OR(((((rt0.c2)AND(x'')))OR(rt1.c1)))) INNER JOIN rt1 ON UNLIKELY(COALESCE(rt1.c5, rt1.c5));
SELECT DISTINCT t0.c0, rt0.c1, rt0.c0, rt1.c0, rt1.c5, rt1.c2, rt1.c3, rt1.c6, rt0.c2, rt1.c4 FROM t0 CROSS JOIN rt0 ON ((((((rt1.c4) IS TRUE))OR(t0.c64)))OR(((((rt0.c2)AND(x'')))OR(rt1.c1)))) INNER JOIN rt1 ON UNLIKELY(COALESCE(rt1.c5, rt1.c5)) WHERE (((((((((CAST(t0.c64 AS BLOB))AND(((t0.c1) NOT BETWEEN (t0.c64) AND (rt1.c2)))))OR(((rt1.c2) IS TRUE))))AND(((rt1.c4)||(rt0.c1)))))AND(CASE WHEN rt1.c6 THEN rt0.c2 ELSE rt1.c1 END))) UNION SELECT DISTINCT t0.c0, rt0.c1, rt0.c0, rt1.c0, rt1.c5, rt1.c2, rt1.c3, rt1.c6, rt0.c2, rt1.c4 FROM t0 CROSS JOIN rt0 ON ((((((rt1.c4) IS TRUE))OR(t0.c64)))OR(((((rt0.c2)AND(x'')))OR(rt1.c1)))) INNER JOIN rt1 ON UNLIKELY(COALESCE(rt1.c5, rt1.c5)) WHERE ((NOT (((((((((CAST(t0.c64 AS BLOB))AND(((t0.c1) NOT BETWEEN (t0.c64) AND (rt1.c2)))))OR(((rt1.c2) IS TRUE))))AND(((rt1.c4)||(rt0.c1)))))AND(CASE WHEN rt1.c6 THEN rt0.c2 ELSE rt1.c1 END))))) UNION SELECT DISTINCT t0.c0, rt0.c1, rt0.c0, rt1.c0, rt1.c5, rt1.c2, rt1.c3, rt1.c6, rt0.c2, rt1.c4 FROM t0 CROSS JOIN rt0 ON ((((((rt1.c4) IS TRUE))OR(t0.c64)))OR(((((rt0.c2)AND(x'')))OR(rt1.c1)))) INNER JOIN rt1 ON UNLIKELY(COALESCE(rt1.c5, rt1.c5)) WHERE (((((((((((CAST(t0.c64 AS BLOB))AND(((t0.c1) NOT BETWEEN (t0.c64) AND (rt1.c2)))))OR(((rt1.c2) IS TRUE))))AND(((rt1.c4)||(rt0.c1)))))AND(CASE WHEN rt1.c6 THEN rt0.c2 ELSE rt1.c1 END))) ISNULL));
SELECT DISTINCT t0.c0, rt0.c1, rt0.c0, rt1.c0, rt1.c5, rt1.c2, rt1.c3, rt1.c6, rt0.c2, rt1.c4 FROM t0 CROSS JOIN rt0 ON ((((((rt1.c4) IS TRUE))OR(t0.c64)))OR(((((rt0.c2)AND(x'')))OR(rt1.c1)))) INNER JOIN rt1 ON UNLIKELY(COALESCE(rt1.c5, rt1.c5));
SELECT rt0.c0, t0.c64, rt0.c1, t0.c0, rt0.c2 FROM rt0, t0 GROUP BY rt0.c0, t0.c64, rt0.c1, t0.c0, rt0.c2;
SELECT ALL rt0.c0, t0.c64, rt0.c1, t0.c0, rt0.c2 FROM rt0, t0 WHERE (LOWER(((t0.c1) NOT BETWEEN (rt0.c2) AND (t0.c64)))) GROUP BY rt0.c0, t0.c64, rt0.c1, t0.c0, rt0.c2 UNION SELECT rt0.c0, t0.c64, rt0.c1, t0.c0, rt0.c2 FROM rt0, t0 WHERE ((NOT (LOWER(((t0.c1) NOT BETWEEN (rt0.c2) AND (t0.c64)))))) GROUP BY rt0.c0, t0.c64, rt0.c1, t0.c0, rt0.c2 UNION SELECT ALL rt0.c0, t0.c64, rt0.c1, t0.c0, rt0.c2 FROM rt0, t0 WHERE (((LOWER(((t0.c1) NOT BETWEEN (rt0.c2) AND (t0.c64)))) ISNULL)) GROUP BY rt0.c0, t0.c64, rt0.c1, t0.c0, rt0.c2;
SELECT rt0.c0, t0.c64, rt0.c1, t0.c0, rt0.c2 FROM rt0, t0 GROUP BY rt0.c0, t0.c64, rt0.c1, t0.c0, rt0.c2;
SELECT ALL t0.c64, rt0.c2, rt0.c1, t0.c1, t0.c0, rt0.c0 FROM t0, rt0 GROUP BY t0.c64, rt0.c2, rt0.c1, t0.c1, t0.c0, rt0.c0;
SELECT t0.c64, rt0.c2, rt0.c1, t0.c1, t0.c0, rt0.c0 FROM t0, rt0 GROUP BY t0.c64, rt0.c2, rt0.c1, t0.c1, t0.c0, rt0.c0 HAVING GROUP_CONCAT(TOTAL(TOTAL(t0.c1))) UNION ALL SELECT ALL t0.c64, rt0.c2, rt0.c1, t0.c1, t0.c0, rt0.c0 FROM t0, rt0 GROUP BY t0.c64, rt0.c2, rt0.c1, t0.c1, t0.c0, rt0.c0 HAVING (NOT (GROUP_CONCAT(TOTAL(TOTAL(t0.c1))))) UNION ALL SELECT ALL t0.c64, rt0.c2, rt0.c1, t0.c1, t0.c0, rt0.c0 FROM t0, rt0 GROUP BY t0.c64, rt0.c2, rt0.c1, t0.c1, t0.c0, rt0.c0 HAVING ((GROUP_CONCAT(TOTAL(TOTAL(t0.c1)))) ISNULL);
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt1 ON (((((rt1.c4) BETWEEN (rt0.c1) AND (rt0.c0))))>((ROUND(x'', rt1.c4)))) FULL OUTER JOIN rt0 ON ((((t0.c64)>=(rt0.c1))) IS FALSE);
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN (((- (rt0.c0)))) AND (((+ (rt0.c1)))))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c1)) NOT BETWEEN (((- (rt0.c0)))) AND (((+ (rt0.c1)))))))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE ((((((rt0.c1)) NOT BETWEEN (((- (rt0.c0)))) AND (((+ (rt0.c1)))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt1.c3, rt0.c0, rt1.c5 FROM t0, rt1 INNER JOIN rt0 ON TYPEOF(((rt1.c0)<=(rt1.c0))) GROUP BY rt1.c3, rt0.c0, rt1.c5;
SELECT rt1.c3, rt0.c0, rt1.c5 FROM t0, rt1 INNER JOIN rt0 ON TYPEOF(((rt1.c0)<=(rt1.c0))) WHERE (((('' IN (rt1.c3)))<(rt0.c2))) GROUP BY rt1.c3, rt0.c0, rt1.c5 UNION SELECT rt1.c3, rt0.c0, rt1.c5 FROM t0, rt1 INNER JOIN rt0 ON TYPEOF(((rt1.c0)<=(rt1.c0))) WHERE ((NOT (((('' IN (rt1.c3)))<(rt0.c2))))) GROUP BY rt1.c3, rt0.c0, rt1.c5 UNION SELECT rt1.c3, rt0.c0, rt1.c5 FROM t0, rt1 INNER JOIN rt0 ON TYPEOF(((rt1.c0)<=(rt1.c0))) WHERE (((((('' IN (rt1.c3)))<(rt0.c2))) ISNULL)) GROUP BY rt1.c3, rt0.c0, rt1.c5;
SELECT ALL rt1.c3, rt0.c0, rt1.c5 FROM t0, rt1 INNER JOIN rt0 ON TYPEOF(((rt1.c0)<=(rt1.c0))) GROUP BY rt1.c3, rt0.c0, rt1.c5;
SELECT rt1.c3, rt1.c4, t0.c64, t0.c0, rt1.c2, t0.c1 FROM rt1, t0 LEFT OUTER JOIN rt0 ON NULL GROUP BY rt1.c3, rt1.c4, t0.c64, t0.c0, rt1.c2, t0.c1;
SELECT ALL rt1.c3, rt1.c4, t0.c64, t0.c0, rt1.c2, t0.c1 FROM rt1, t0 LEFT OUTER JOIN rt0 ON NULL GROUP BY rt1.c3, rt1.c4, t0.c64, t0.c0, rt1.c2, t0.c1 HAVING COUNT(CAST(AVG(GROUP_CONCAT(rt1.c6)) AS BLOB)) UNION ALL SELECT ALL rt1.c3, rt1.c4, t0.c64, t0.c0, rt1.c2, t0.c1 FROM rt1, t0 LEFT OUTER JOIN rt0 ON NULL GROUP BY rt1.c3, rt1.c4, t0.c64, t0.c0, rt1.c2, t0.c1 HAVING (NOT (COUNT(CAST(AVG(GROUP_CONCAT(rt1.c6)) AS BLOB)))) UNION ALL SELECT rt1.c3, rt1.c4, t0.c64, t0.c0, rt1.c2, t0.c1 FROM rt1, t0 LEFT OUTER JOIN rt0 ON NULL GROUP BY rt1.c3, rt1.c4, t0.c64, t0.c0, rt1.c2, t0.c1 HAVING ((COUNT(CAST(AVG(GROUP_CONCAT(rt1.c6)) AS BLOB))) ISNULL);
SELECT ALL rt1.c6, t0.c0, rt1.c5, rt1.c1, rt1.c4 FROM rt1, t0;
SELECT ALL rt1.c6, t0.c0, rt1.c5, rt1.c1, rt1.c4 FROM rt1, t0 WHERE ((((((('')OR(-679991138)))AND(rt1.c5)))||(((rt1.c0) ISNULL)))) UNION ALL SELECT ALL rt1.c6, t0.c0, rt1.c5, rt1.c1, rt1.c4 FROM rt1, t0 WHERE ((NOT ((((((('')OR(-679991138)))AND(rt1.c5)))||(((rt1.c0) ISNULL)))))) UNION ALL SELECT ALL rt1.c6, t0.c0, rt1.c5, rt1.c1, rt1.c4 FROM rt1, t0 WHERE ((((((((('')OR(-679991138)))AND(rt1.c5)))||(((rt1.c0) ISNULL)))) ISNULL));
SELECT ALL rt1.c6, t0.c0, rt1.c5, rt1.c1, rt1.c4 FROM rt1, t0;
SELECT DISTINCT t0.c0, rt1.c2, rt0.c2, rt1.c4 FROM rt0, rt1, t0;
SELECT DISTINCT t0.c0, rt1.c2, rt0.c2, rt1.c4 FROM rt0, rt1, t0 WHERE (json_quote(((rt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c1)))) UNION SELECT DISTINCT t0.c0, rt1.c2, rt0.c2, rt1.c4 FROM rt0, rt1, t0 WHERE ((NOT (json_quote(((rt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c1)))))) UNION SELECT DISTINCT t0.c0, rt1.c2, rt0.c2, rt1.c4 FROM rt0, rt1, t0 WHERE (((json_quote(((rt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c1)))) ISNULL));
SELECT DISTINCT t0.c0, rt1.c2, rt0.c2, rt1.c4 FROM rt0, rt1, t0;
SELECT rt1.c5, t0.c64, rt1.c3, rt0.c2, rt1.c4, rt1.c0, t0.c1, rt1.c1, rt0.c1 FROM t0, rt0, rt1 GROUP BY rt1.c5, t0.c64, rt1.c3, rt0.c2, rt1.c4, rt1.c0, t0.c1, rt1.c1, rt0.c1;
SELECT rt1.c5, t0.c64, rt1.c3, rt0.c2, rt1.c4, rt1.c0, t0.c1, rt1.c1, rt0.c1 FROM t0, rt0, rt1 WHERE (((((((rt1.c3) NOT BETWEEN (rt1.c5) AND (rt1.c4)))AND(((rt1.c6)/(rt1.c0)))))OR(rt1.c4 COLLATE RTRIM))) GROUP BY rt1.c5, t0.c64, rt1.c3, rt0.c2, rt1.c4, rt1.c0, t0.c1, rt1.c1, rt0.c1 UNION SELECT rt1.c5, t0.c64, rt1.c3, rt0.c2, rt1.c4, rt1.c0, t0.c1, rt1.c1, rt0.c1 FROM t0, rt0, rt1 WHERE ((NOT (((((((rt1.c3) NOT BETWEEN (rt1.c5) AND (rt1.c4)))AND(((rt1.c6)/(rt1.c0)))))OR(rt1.c4 COLLATE RTRIM))))) GROUP BY rt1.c5, t0.c64, rt1.c3, rt0.c2, rt1.c4, rt1.c0, t0.c1, rt1.c1, rt0.c1 UNION SELECT rt1.c5, t0.c64, rt1.c3, rt0.c2, rt1.c4, rt1.c0, t0.c1, rt1.c1, rt0.c1 FROM t0, rt0, rt1 WHERE (((((((((rt1.c3) NOT BETWEEN (rt1.c5) AND (rt1.c4)))AND(((rt1.c6)/(rt1.c0)))))OR(rt1.c4 COLLATE RTRIM))) ISNULL)) GROUP BY rt1.c5, t0.c64, rt1.c3, rt0.c2, rt1.c4, rt1.c0, t0.c1, rt1.c1, rt0.c1;
SELECT rt1.c5, t0.c64, rt1.c3, rt0.c2, rt1.c4, rt1.c0, t0.c1, rt1.c1, rt0.c1 FROM t0, rt0, rt1 GROUP BY rt1.c5, t0.c64, rt1.c3, rt0.c2, rt1.c4, rt1.c0, t0.c1, rt1.c1, rt0.c1;
SELECT ALL t0.c1, rt0.c2, rt0.c1, rt0.c0, t0.c0 FROM t0 INNER JOIN rt0 ON ((((rt0.c2)GLOB(t0.c1)))AND(CAST(rt0.c1 AS TEXT))) GROUP BY t0.c1, rt0.c2, rt0.c1, rt0.c0, t0.c0;
SELECT t0.c1, rt0.c2, rt0.c1, rt0.c0, t0.c0 FROM t0 INNER JOIN rt0 ON ((((rt0.c2)GLOB(t0.c1)))AND(CAST(rt0.c1 AS TEXT))) GROUP BY t0.c1, rt0.c2, rt0.c1, rt0.c0, t0.c0 HAVING INSTR(((t0.c1) BETWEEN (COUNT(*)) AND (rt0.c2)), SUM(rt0.c2)) UNION ALL SELECT ALL t0.c1, rt0.c2, rt0.c1, rt0.c0, t0.c0 FROM t0 INNER JOIN rt0 ON ((((rt0.c2)GLOB(t0.c1)))AND(CAST(rt0.c1 AS TEXT))) GROUP BY t0.c1, rt0.c2, rt0.c1, rt0.c0, t0.c0 HAVING (NOT (INSTR(((t0.c1) BETWEEN (COUNT(*)) AND (rt0.c2)), SUM(rt0.c2)))) UNION ALL SELECT t0.c1, rt0.c2, rt0.c1, rt0.c0, t0.c0 FROM t0 INNER JOIN rt0 ON ((((rt0.c2)GLOB(t0.c1)))AND(CAST(rt0.c1 AS TEXT))) GROUP BY t0.c1, rt0.c2, rt0.c1, rt0.c0, t0.c0 HAVING ((INSTR(((t0.c1) BETWEEN (COUNT(*)) AND (rt0.c2)), SUM(rt0.c2))) ISNULL);
SELECT ALL t0.c1, rt0.c2, rt0.c1, rt0.c0, t0.c0 FROM t0 INNER JOIN rt0 ON ((((rt0.c2)GLOB(t0.c1)))AND(CAST(rt0.c1 AS TEXT))) GROUP BY t0.c1, rt0.c2, rt0.c1, rt0.c0, t0.c0;
SELECT t0.c1, rt0.c2, rt0.c1, rt0.c0, t0.c0 FROM t0 INNER JOIN rt0 ON ((((rt0.c2)GLOB(t0.c1)))AND(CAST(rt0.c1 AS TEXT))) GROUP BY t0.c1, rt0.c2, rt0.c1, rt0.c0, t0.c0 HAVING INSTR(((t0.c1) BETWEEN (COUNT(*)) AND (rt0.c2)), SUM(rt0.c2)) UNION ALL SELECT ALL t0.c1, rt0.c2, rt0.c1, rt0.c0, t0.c0 FROM t0 INNER JOIN rt0 ON ((((rt0.c2)GLOB(t0.c1)))AND(CAST(rt0.c1 AS TEXT))) GROUP BY t0.c1, rt0.c2, rt0.c1, rt0.c0, t0.c0 HAVING (NOT (INSTR(((t0.c1) BETWEEN (COUNT(*)) AND (rt0.c2)), SUM(rt0.c2)))) UNION ALL SELECT t0.c1, rt0.c2, rt0.c1, rt0.c0, t0.c0 FROM t0 INNER JOIN rt0 ON ((((rt0.c2)GLOB(t0.c1)))AND(CAST(rt0.c1 AS TEXT))) GROUP BY t0.c1, rt0.c2, rt0.c1, rt0.c0, t0.c0 HAVING ((INSTR(((t0.c1) BETWEEN (COUNT(*)) AND (rt0.c2)), SUM(rt0.c2))) ISNULL);
SELECT ALL t0.c1, rt0.c2, rt0.c1, rt0.c0, t0.c0 FROM t0 INNER JOIN rt0 ON ((((rt0.c2)GLOB(t0.c1)))AND(CAST(rt0.c1 AS TEXT))) GROUP BY t0.c1, rt0.c2, rt0.c1, rt0.c0, t0.c0;
SELECT * FROM t0, rt1;
SELECT ALL * FROM t0, rt1 WHERE (x'') UNION ALL SELECT * FROM t0, rt1 WHERE ((NOT (x''))) UNION ALL SELECT ALL * FROM t0, rt1 WHERE (((x'') ISNULL));
SELECT * FROM t0, rt1;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (CASE WHEN ((((((((rt1.c3)OR(rt1.c1)))OR(rt1.c5)))OR(rt1.c6)))OR(rt1.c3)) THEN (rt1.c6 IN ()) END) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (CASE WHEN ((((((((rt1.c3)OR(rt1.c1)))OR(rt1.c5)))OR(rt1.c6)))OR(rt1.c3)) THEN (rt1.c6 IN ()) END))) UNION SELECT DISTINCT * FROM rt1 WHERE (((CASE WHEN ((((((((rt1.c3)OR(rt1.c1)))OR(rt1.c5)))OR(rt1.c6)))OR(rt1.c3)) THEN (rt1.c6 IN ()) END) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT rt1.c3, rt1.c0, rt0.c2, rt0.c0, t0.c1 FROM rt0, t0 CROSS JOIN rt1 ON (- (CASE WHEN rt1.c3 THEN rt0.c2 WHEN rt1.c6 THEN t0.c0 WHEN rt1.c4 THEN rt0.c1 END)) GROUP BY rt1.c3, rt1.c0, rt0.c2, rt0.c0, t0.c1;
SELECT rt1.c3, rt1.c0, rt0.c2, rt0.c0, t0.c1 FROM rt0, t0 NOT INDEXED CROSS JOIN rt1 ON (- (CASE WHEN rt1.c3 THEN rt0.c2 WHEN rt1.c6 THEN t0.c0 WHEN rt1.c4 THEN rt0.c1 END)) WHERE (((NULL) IS TRUE)) GROUP BY rt1.c3, rt1.c0, rt0.c2, rt0.c0, t0.c1 UNION SELECT rt1.c3, rt1.c0, rt0.c2, rt0.c0, t0.c1 FROM rt0, t0 CROSS JOIN rt1 ON (- (CASE WHEN rt1.c3 THEN rt0.c2 WHEN rt1.c6 THEN t0.c0 WHEN rt1.c4 THEN rt0.c1 END)) WHERE ((NOT (((NULL) IS TRUE)))) GROUP BY rt1.c3, rt1.c0, rt0.c2, rt0.c0, t0.c1 UNION SELECT ALL rt1.c3, rt1.c0, rt0.c2, rt0.c0, t0.c1 FROM rt0, t0 CROSS JOIN rt1 ON (- (CASE WHEN rt1.c3 THEN rt0.c2 WHEN rt1.c6 THEN t0.c0 WHEN rt1.c4 THEN rt0.c1 END)) WHERE (((((NULL) IS TRUE)) ISNULL)) GROUP BY rt1.c3, rt1.c0, rt0.c2, rt0.c0, t0.c1;
SELECT rt1.c3, rt1.c0, rt0.c2, rt0.c0, t0.c1 FROM rt0, t0 CROSS JOIN rt1 ON (- (CASE WHEN rt1.c3 THEN rt0.c2 WHEN rt1.c6 THEN t0.c0 WHEN rt1.c4 THEN rt0.c1 END)) GROUP BY rt1.c3, rt1.c0, rt0.c2, rt0.c0, t0.c1;
SELECT ALL t0.c1, t0.c64, rt1.c0, rt0.c2, rt1.c5, rt1.c3, rt0.c1, t0.c0, rt1.c6 FROM t0, rt1, rt0 GROUP BY t0.c1, t0.c64, rt1.c0, rt0.c2, rt1.c5, rt1.c3, rt0.c1, t0.c0, rt1.c6;
SELECT ALL t0.c1, t0.c64, rt1.c0, rt0.c2, rt1.c5, rt1.c3, rt0.c1, t0.c0, rt1.c6 FROM t0, rt1, rt0 GROUP BY t0.c1, t0.c64, rt1.c0, rt0.c2, rt1.c5, rt1.c3, rt0.c1, t0.c0, rt1.c6 HAVING CAST((rt1.c2 IN ()) AS REAL) UNION ALL SELECT t0.c1, t0.c64, rt1.c0, rt0.c2, rt1.c5, rt1.c3, rt0.c1, t0.c0, rt1.c6 FROM t0, rt1, rt0 GROUP BY t0.c1, t0.c64, rt1.c0, rt0.c2, rt1.c5, rt1.c3, rt0.c1, t0.c0, rt1.c6 HAVING (NOT (CAST((rt1.c2 IN ()) AS REAL))) UNION ALL SELECT ALL t0.c1, t0.c64, rt1.c0, rt0.c2, rt1.c5, rt1.c3, rt0.c1, t0.c0, rt1.c6 FROM t0, rt1, rt0 GROUP BY t0.c1, t0.c64, rt1.c0, rt0.c2, rt1.c5, rt1.c3, rt0.c1, t0.c0, rt1.c6 HAVING ((CAST((rt1.c2 IN ()) AS REAL)) ISNULL);
SELECT ALL t0.c1, t0.c64, rt1.c0, rt0.c2, rt1.c5, rt1.c3, rt0.c1, t0.c0, rt1.c6 FROM t0, rt1, rt0 GROUP BY t0.c1, t0.c64, rt1.c0, rt0.c2, rt1.c5, rt1.c3, rt0.c1, t0.c0, rt1.c6;
SELECT ALL t0.c1, t0.c64, rt1.c0, rt0.c2, rt1.c5, rt1.c3, rt0.c1, t0.c0, rt1.c6 FROM t0, rt1, rt0 GROUP BY t0.c1, t0.c64, rt1.c0, rt0.c2, rt1.c5, rt1.c3, rt0.c1, t0.c0, rt1.c6 HAVING CAST((rt1.c2 IN ()) AS REAL) UNION ALL SELECT t0.c1, t0.c64, rt1.c0, rt0.c2, rt1.c5, rt1.c3, rt0.c1, t0.c0, rt1.c6 FROM t0, rt1, rt0 GROUP BY t0.c1, t0.c64, rt1.c0, rt0.c2, rt1.c5, rt1.c3, rt0.c1, t0.c0, rt1.c6 HAVING (NOT (CAST((rt1.c2 IN ()) AS REAL))) UNION ALL SELECT ALL t0.c1, t0.c64, rt1.c0, rt0.c2, rt1.c5, rt1.c3, rt0.c1, t0.c0, rt1.c6 FROM t0, rt1, rt0 GROUP BY t0.c1, t0.c64, rt1.c0, rt0.c2, rt1.c5, rt1.c3, rt0.c1, t0.c0, rt1.c6 HAVING ((CAST((rt1.c2 IN ()) AS REAL)) ISNULL);
SELECT ALL t0.c1, t0.c64, rt1.c0, rt0.c2, rt1.c5, rt1.c3, rt0.c1, t0.c0, rt1.c6 FROM t0, rt1, rt0 GROUP BY t0.c1, t0.c64, rt1.c0, rt0.c2, rt1.c5, rt1.c3, rt0.c1, t0.c0, rt1.c6;
SELECT TOTAL(rt0.c0) FROM rt1, t0, rt0;
SELECT * FROM rt0, rt1, t0;
SELECT * FROM rt0, rt1, t0 WHERE (((rt1.c1 COLLATE BINARY)>((~ (rt1.c3))))) UNION ALL SELECT ALL * FROM rt0, rt1, t0 WHERE ((NOT (((rt1.c1 COLLATE BINARY)>((~ (rt1.c3))))))) UNION ALL SELECT ALL * FROM rt0, rt1, t0 WHERE (((((rt1.c1 COLLATE BINARY)>((~ (rt1.c3))))) ISNULL));
SELECT * FROM rt0, rt1, t0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (ABS(DISTINCT rt1.c4) COLLATE RTRIM) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (ABS(DISTINCT rt1.c4) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM rt1 WHERE (((ABS(DISTINCT rt1.c4) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT rt0.c2, rt1.c3, rt1.c2, t0.c1 FROM rt1, rt0 FULL OUTER JOIN t0 ON (((t0.c64) IS TRUE) IN ()) GROUP BY rt0.c2, rt1.c3, rt1.c2, t0.c1;
SELECT ALL rt0.c2, rt1.c3, rt1.c2, t0.c1 FROM rt1, rt0 FULL OUTER JOIN t0 ON (((t0.c64) IS TRUE) IN ()) WHERE (CASE WHEN ((rt1.c4) NOT BETWEEN (t0.c1) AND (rt1.c1)) THEN CAST(rt0.c1 AS TEXT) WHEN t0.c1 COLLATE NOCASE THEN x'' WHEN ((t0.c64) NOTNULL) THEN CASE WHEN rt1.c0 THEN t0.c64 END END) GROUP BY rt0.c2, rt1.c3, rt1.c2, t0.c1 UNION SELECT rt0.c2, rt1.c3, rt1.c2, t0.c1 FROM rt1, rt0 FULL OUTER JOIN t0 ON (((t0.c64) IS TRUE) IN ()) WHERE ((NOT (CASE WHEN ((rt1.c4) NOT BETWEEN (t0.c1) AND (rt1.c1)) THEN CAST(rt0.c1 AS TEXT) WHEN t0.c1 COLLATE NOCASE THEN x'' WHEN ((t0.c64) NOTNULL) THEN CASE WHEN rt1.c0 THEN t0.c64 END END))) GROUP BY rt0.c2, rt1.c3, rt1.c2, t0.c1 UNION SELECT rt0.c2, rt1.c3, rt1.c2, t0.c1 FROM rt1, rt0 FULL OUTER JOIN t0 ON (((t0.c64) IS TRUE) IN ()) WHERE (((CASE WHEN ((rt1.c4) NOT BETWEEN (t0.c1) AND (rt1.c1)) THEN CAST(rt0.c1 AS TEXT) WHEN t0.c1 COLLATE NOCASE THEN x'' WHEN ((t0.c64) NOTNULL) THEN CASE WHEN rt1.c0 THEN t0.c64 END END) ISNULL)) GROUP BY rt0.c2, rt1.c3, rt1.c2, t0.c1;
SELECT rt0.c2, rt1.c3, rt1.c2, t0.c1 FROM rt1, rt0 FULL OUTER JOIN t0 ON (((t0.c64) IS TRUE) IN ()) GROUP BY rt0.c2, rt1.c3, rt1.c2, t0.c1;
SELECT t0.c64, rt1.c2, rt1.c4, rt1.c3, rt1.c6, t0.c0, rt1.c5, rt1.c0, rt0.c1 FROM t0, rt0, rt1 GROUP BY t0.c64, rt1.c2, rt1.c4, rt1.c3, rt1.c6, t0.c0, rt1.c5, rt1.c0, rt0.c1;
SELECT t0.c64, rt1.c2, rt1.c4, rt1.c3, rt1.c6, t0.c0, rt1.c5, rt1.c0, rt0.c1 FROM t0, rt0, rt1 GROUP BY t0.c64, rt1.c2, rt1.c4, rt1.c3, rt1.c6, t0.c0, rt1.c5, rt1.c0, rt0.c1 HAVING TOTAL(COUNT(t0.c64)) UNION ALL SELECT t0.c64, rt1.c2, rt1.c4, rt1.c3, rt1.c6, t0.c0, rt1.c5, rt1.c0, rt0.c1 FROM t0, rt0, rt1 GROUP BY t0.c64, rt1.c2, rt1.c4, rt1.c3, rt1.c6, t0.c0, rt1.c5, rt1.c0, rt0.c1 HAVING (NOT (TOTAL(COUNT(t0.c64)))) UNION ALL SELECT t0.c64, rt1.c2, rt1.c4, rt1.c3, rt1.c6, t0.c0, rt1.c5, rt1.c0, rt0.c1 FROM t0, rt0, rt1 GROUP BY t0.c64, rt1.c2, rt1.c4, rt1.c3, rt1.c6, t0.c0, rt1.c5, rt1.c0, rt0.c1 HAVING ((TOTAL(COUNT(t0.c64))) ISNULL);
SELECT t0.c0, rt1.c1 FROM rt1, rt0, t0;
SELECT t0.c0, rt1.c1 FROM rt1, rt0, t0 WHERE ((((t0.c64))=((((t0.c64)IS NOT(rt1.c4)))))) UNION ALL SELECT t0.c0, rt1.c1 FROM rt1, rt0, t0 WHERE ((NOT ((((t0.c64))=((((t0.c64)IS NOT(rt1.c4)))))))) UNION ALL SELECT t0.c0, rt1.c1 FROM rt1, rt0, t0 WHERE ((((((t0.c64))==((((t0.c64)IS NOT(rt1.c4)))))) ISNULL));
SELECT t0.c0, rt1.c1 FROM rt1, rt0, t0;
SELECT DISTINCT rt1.c4, rt1.c2, t0.c0, rt0.c2, rt1.c5, t0.c1, rt1.c6, rt0.c0, rt0.c1 FROM rt1, rt0, t0;
SELECT DISTINCT rt1.c4, rt1.c2, t0.c0, rt0.c2, rt1.c5, t0.c1, rt1.c6, rt0.c0, rt0.c1 FROM rt1, rt0, t0 WHERE ('506881618') UNION SELECT DISTINCT rt1.c4, rt1.c2, t0.c0, rt0.c2, rt1.c5, t0.c1, rt1.c6, rt0.c0, rt0.c1 FROM rt1, rt0, t0 WHERE ((NOT ('506881618'))) UNION SELECT DISTINCT rt1.c4, rt1.c2, t0.c0, rt0.c2, rt1.c5, t0.c1, rt1.c6, rt0.c0, rt0.c1 FROM rt1, rt0, t0 WHERE ((('506881618') ISNULL));
SELECT DISTINCT rt1.c4, rt1.c2, t0.c0, rt0.c2, rt1.c5, t0.c1, rt1.c6, rt0.c0, rt0.c1 FROM rt1, rt0, t0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 WHERE (CASE WHEN rt0.c0 THEN ((rt0.c0)OR(rt0.c2)) WHEN CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 END THEN ((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)) WHEN json_array_length(rt0.c2, rt0.c2) THEN rt0.c2 COLLATE RTRIM END) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (CASE WHEN rt0.c0 THEN ((rt0.c0)OR(rt0.c2)) WHEN CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 END THEN ((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)) WHEN json_array_length(rt0.c2, rt0.c2) THEN rt0.c2 COLLATE RTRIM END))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (((CASE WHEN rt0.c0 THEN ((rt0.c0)OR(rt0.c2)) WHEN CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 END THEN ((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)) WHEN json_array_length(rt0.c2, rt0.c2) THEN rt0.c2 COLLATE RTRIM END) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt1.c4, rt0.c1 FROM t0, rt1, rt0 GROUP BY rt1.c4, rt0.c1;
SELECT rt1.c4, rt0.c1 FROM t0, rt1, rt0 GROUP BY rt1.c4, rt0.c1 HAVING ((rt1.c0) BETWEEN (CAST(rt1.c3 AS INTEGER)) AND (((rt0.c0)AND(rt1.c0)))) UNION ALL SELECT rt1.c4, rt0.c1 FROM t0, rt1, rt0 GROUP BY rt1.c4, rt0.c1 HAVING (NOT (((rt1.c0) BETWEEN (CAST(rt1.c3 AS INTEGER)) AND (((rt0.c0)AND(rt1.c0)))))) UNION ALL SELECT ALL rt1.c4, rt0.c1 FROM t0, rt1, rt0 GROUP BY rt1.c4, rt0.c1 HAVING ((((rt1.c0) BETWEEN (CAST(rt1.c3 AS INTEGER)) AND (((rt0.c0)AND(rt1.c0))))) ISNULL);
SELECT rt1.c4, rt0.c1 FROM t0, rt1, rt0 GROUP BY rt1.c4, rt0.c1;
SELECT rt1.c4, rt0.c1 FROM t0, rt1, rt0 GROUP BY rt1.c4, rt0.c1 HAVING ((rt1.c0) BETWEEN (CAST(rt1.c3 AS INTEGER)) AND (((rt0.c0)AND(rt1.c0)))) UNION ALL SELECT rt1.c4, rt0.c1 FROM t0, rt1, rt0 GROUP BY rt1.c4, rt0.c1 HAVING (NOT (((rt1.c0) BETWEEN (CAST(rt1.c3 AS INTEGER)) AND (((rt0.c0)AND(rt1.c0)))))) UNION ALL SELECT ALL rt1.c4, rt0.c1 FROM t0, rt1, rt0 GROUP BY rt1.c4, rt0.c1 HAVING ((((rt1.c0) BETWEEN (CAST(rt1.c3 AS INTEGER)) AND (((rt0.c0)AND(rt1.c0))))) ISNULL);
SELECT rt1.c4, rt0.c1 FROM t0, rt1, rt0 GROUP BY rt1.c4, rt0.c1;
SELECT ALL * FROM rt0, t0;
SELECT * FROM rt0, t0 WHERE (((rt0.c2)<>(((rt0.c0) BETWEEN ('(X') AND (t0.c1))))) UNION ALL SELECT * FROM rt0, t0 NOT INDEXED WHERE ((NOT (((rt0.c2)!=(((rt0.c0) BETWEEN ('(X') AND (t0.c1))))))) UNION ALL SELECT ALL * FROM rt0, t0 WHERE (((((rt0.c2)!=(((rt0.c0) BETWEEN ('(X') AND (t0.c1))))) ISNULL));
SELECT ALL * FROM rt0, t0;
SELECT DISTINCT t0.c0, t0.c1, t0.c64 FROM t0;
SELECT DISTINCT t0.c0, t0.c1, t0.c64 FROM t0 WHERE ((((t0.c1) BETWEEN ('\rBz47P걋?') AND (t0.c1)) IN ((((t0.c1)) BETWEEN ((t0.c1)) AND ((t0.c0)))))) UNION SELECT DISTINCT t0.c0, t0.c1, t0.c64 FROM t0 WHERE ((NOT ((((t0.c1) BETWEEN ('\rBz47P걋?') AND (t0.c1)) IN ((((t0.c1)) BETWEEN ((t0.c1)) AND ((t0.c0)))))))) UNION SELECT DISTINCT t0.c0, t0.c1, t0.c64 FROM t0 WHERE ((((((t0.c1) BETWEEN ('\rBz47P걋?') AND (t0.c1)) IN ((((t0.c1)) BETWEEN ((t0.c1)) AND ((t0.c0)))))) ISNULL));
SELECT DISTINCT t0.c0, t0.c1, t0.c64 FROM t0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE (((CAST(rt0.c2 AS TEXT)) NOT NULL)) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (((CAST(rt0.c2 AS TEXT)) NOT NULL)))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE (((((CAST(rt0.c2 AS TEXT)) NOT NULL)) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT t0.c64 FROM t0 GROUP BY t0.c64;
SELECT ALL t0.c64 FROM t0 GROUP BY t0.c64 HAVING CASE GROUP_CONCAT(t0.c1)  WHEN AVG('2040218146') THEN LIKELIHOOD(t0.c64, 0.9976744699391331) END UNION ALL SELECT ALL t0.c64 FROM t0 GROUP BY t0.c64 HAVING (NOT (CASE GROUP_CONCAT(t0.c1)  WHEN AVG('2040218146') THEN LIKELIHOOD(t0.c64, 0.9976744699391331) END)) UNION ALL SELECT t0.c64 FROM t0 GROUP BY t0.c64 HAVING ((CASE GROUP_CONCAT(t0.c1)  WHEN AVG('2040218146') THEN LIKELIHOOD(t0.c64, 0.9976744699391331) END) ISNULL);
SELECT t0.c64 FROM t0 GROUP BY t0.c64;
SELECT ALL t0.c64 FROM t0 GROUP BY t0.c64 HAVING CASE GROUP_CONCAT(t0.c1)  WHEN AVG('2040218146') THEN LIKELIHOOD(t0.c64, 0.9976744699391331) END UNION ALL SELECT ALL t0.c64 FROM t0 GROUP BY t0.c64 HAVING (NOT (CASE GROUP_CONCAT(t0.c1)  WHEN AVG('2040218146') THEN LIKELIHOOD(t0.c64, 0.9976744699391331) END)) UNION ALL SELECT t0.c64 FROM t0 GROUP BY t0.c64 HAVING ((CASE GROUP_CONCAT(t0.c1)  WHEN AVG('2040218146') THEN LIKELIHOOD(t0.c64, 0.9976744699391331) END) ISNULL);
SELECT t0.c64 FROM t0 GROUP BY t0.c64;
SELECT ALL MAX(((CAST(rt0.c0 AS INTEGER)) IS TRUE)) FROM rt0, t0, rt1;
SELECT rt0.c2, rt1.c1, rt1.c4, rt1.c2, rt1.c6, rt1.c3, rt0.c0, rt1.c5 FROM rt0, rt1;
SELECT ALL rt0.c2, rt1.c1, rt1.c4, rt1.c2, rt1.c6, rt1.c3, rt0.c0, rt1.c5 FROM rt0, rt1 WHERE (rt1.c1) UNION ALL SELECT rt0.c2, rt1.c1, rt1.c4, rt1.c2, rt1.c6, rt1.c3, rt0.c0, rt1.c5 FROM rt0, rt1 WHERE ((NOT (rt1.c1))) UNION ALL SELECT rt0.c2, rt1.c1, rt1.c4, rt1.c2, rt1.c6, rt1.c3, rt0.c0, rt1.c5 FROM rt0, rt1 WHERE (((rt1.c1) ISNULL));
SELECT rt0.c2, rt1.c1, rt1.c4, rt1.c2, rt1.c6, rt1.c3, rt0.c0, rt1.c5 FROM rt0, rt1;
SELECT DISTINCT * FROM rt0, rt1;
SELECT DISTINCT * FROM rt0, rt1 WHERE ((((- (rt0.c1)))AND(0.02313317620671307))) UNION SELECT DISTINCT * FROM rt0, rt1 WHERE ((NOT ((((- (rt0.c1)))AND(0.02313317620671307))))) UNION SELECT DISTINCT * FROM rt0, rt1 WHERE ((((((- (rt0.c1)))AND(0.02313317620671307))) ISNULL));
SELECT DISTINCT * FROM rt0, rt1;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((rt0.c2 COLLATE BINARY)GLOB(((rt0.c1) NOT NULL)))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((rt0.c2 COLLATE BINARY)GLOB(((rt0.c1) NOT NULL)))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((((rt0.c2 COLLATE BINARY)GLOB(((rt0.c1) NOT NULL)))) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING MIN(((t0.c1)&(SUM(COUNT(SUM(GROUP_CONCAT(COUNT(SUM(COUNT(t0.c64)))))))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MIN(((t0.c1)&(SUM(COUNT(SUM(GROUP_CONCAT(COUNT(SUM(COUNT(t0.c64)))))))))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MIN(((t0.c1)&(SUM(COUNT(SUM(GROUP_CONCAT(COUNT(SUM(COUNT(t0.c64))))))))))) ISNULL);
SELECT ALL * FROM t0, rt0, rt1;
SELECT ALL * FROM t0, rt0, rt1 WHERE ((((rt0.c1 IN ())) NOTNULL)) UNION ALL SELECT * FROM t0, rt0, rt1 WHERE ((NOT ((((rt0.c1 IN ())) NOTNULL)))) UNION ALL SELECT * FROM t0, rt0, rt1 WHERE ((((((rt0.c1 IN ())) NOTNULL)) ISNULL));
SELECT ALL * FROM t0, rt0, rt1;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE ((((rt1.c2 IN ()))<<(rt1.c6))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT ((((rt1.c2 IN ()))<<(rt1.c6))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((((((rt1.c2 IN ()))<<(rt1.c6))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE (0.977057009039541) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT (0.977057009039541))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE (((0.977057009039541) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1, rt0.c2, rt1.c2, t0.c64, t0.c1, rt1.c6, rt1.c4, rt1.c1, rt0.c0, rt1.c5, rt1.c3, rt1.c0, t0.c0 FROM rt1, t0, rt0 GROUP BY rt0.c1, rt0.c2, rt1.c2, t0.c64, t0.c1, rt1.c6, rt1.c4, rt1.c1, rt0.c0, rt1.c5, rt1.c3, rt1.c0, t0.c0;
SELECT rt0.c1, rt0.c2, rt1.c2, t0.c64, t0.c1, rt1.c6, rt1.c4, rt1.c1, rt0.c0, rt1.c5, rt1.c3, rt1.c0, t0.c0 FROM rt1, t0, rt0 GROUP BY rt0.c1, rt0.c2, rt1.c2, t0.c64, t0.c1, rt1.c6, rt1.c4, rt1.c1, rt0.c0, rt1.c5, rt1.c3, rt1.c0, t0.c0 HAVING AVG((((MAX(NULL))) BETWEEN ((rt1.c6)) AND ((AVG(rt1.c6))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt1.c2, t0.c64, t0.c1, rt1.c6, rt1.c4, rt1.c1, rt0.c0, rt1.c5, rt1.c3, rt1.c0, t0.c0 FROM rt1, t0, rt0 GROUP BY rt0.c1, rt0.c2, rt1.c2, t0.c64, t0.c1, rt1.c6, rt1.c4, rt1.c1, rt0.c0, rt1.c5, rt1.c3, rt1.c0, t0.c0 HAVING (NOT (AVG((((MAX(NULL))) BETWEEN ((rt1.c6)) AND ((AVG(rt1.c6))))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt1.c2, t0.c64, t0.c1, rt1.c6, rt1.c4, rt1.c1, rt0.c0, rt1.c5, rt1.c3, rt1.c0, t0.c0 FROM rt1, t0, rt0 GROUP BY rt0.c1, rt0.c2, rt1.c2, t0.c64, t0.c1, rt1.c6, rt1.c4, rt1.c1, rt0.c0, rt1.c5, rt1.c3, rt1.c0, t0.c0 HAVING ((AVG((((MAX(NULL))) BETWEEN ((rt1.c6)) AND ((AVG(rt1.c6)))))) ISNULL);
SELECT rt1.c2, rt1.c4, rt1.c0, t0.c0, rt1.c1, rt1.c6, t0.c1, rt1.c5, rt0.c1, rt1.c3, t0.c64, rt0.c2, rt0.c0 FROM t0, rt0 RIGHT OUTER JOIN rt1 ON CASE (rt0.c2 IN ())  WHEN CASE WHEN t0.c1 THEN rt1.c4 ELSE rt0.c0 END THEN ((((((((rt1.c5)OR(rt1.c5)))AND(t0.c0)))OR(rt1.c1)))AND(rt0.c2)) ELSE ((rt1.c3) NOT BETWEEN (rt0.c0) AND (rt1.c4)) END;
SELECT rt1.c2, rt1.c4, rt1.c0, t0.c0, rt1.c1, rt1.c6, t0.c1, rt1.c5, rt0.c1, rt1.c3, t0.c64, rt0.c2, rt0.c0 FROM t0, rt0 RIGHT OUTER JOIN rt1 ON CASE (rt0.c2 IN ())  WHEN CASE WHEN t0.c1 THEN rt1.c4 ELSE rt0.c0 END THEN ((((((((rt1.c5)OR(rt1.c5)))AND(t0.c0)))OR(rt1.c1)))AND(rt0.c2)) ELSE ((rt1.c3) NOT BETWEEN (rt0.c0) AND (rt1.c4)) END WHERE ((+ (MIN(rt1.c6, rt1.c2)))) UNION ALL SELECT ALL rt1.c2, rt1.c4, rt1.c0, t0.c0, rt1.c1, rt1.c6, t0.c1, rt1.c5, rt0.c1, rt1.c3, t0.c64, rt0.c2, rt0.c0 FROM t0, rt0 RIGHT OUTER JOIN rt1 ON CASE (rt0.c2 IN ())  WHEN CASE WHEN t0.c1 THEN rt1.c4 ELSE rt0.c0 END THEN ((((((((rt1.c5)OR(rt1.c5)))AND(t0.c0)))OR(rt1.c1)))AND(rt0.c2)) ELSE ((rt1.c3) NOT BETWEEN (rt0.c0) AND (rt1.c4)) END WHERE ((NOT ((+ (MIN(rt1.c6, rt1.c2)))))) UNION ALL SELECT ALL rt1.c2, rt1.c4, rt1.c0, t0.c0, rt1.c1, rt1.c6, t0.c1, rt1.c5, rt0.c1, rt1.c3, t0.c64, rt0.c2, rt0.c0 FROM t0, rt0 RIGHT OUTER JOIN rt1 ON CASE (rt0.c2 IN ())  WHEN CASE WHEN t0.c1 THEN rt1.c4 ELSE rt0.c0 END THEN ((((((((rt1.c5)OR(rt1.c5)))AND(t0.c0)))OR(rt1.c1)))AND(rt0.c2)) ELSE ((rt1.c3) NOT BETWEEN (rt0.c0) AND (rt1.c4)) END WHERE ((((+ (MIN(rt1.c6, rt1.c2)))) ISNULL));
SELECT rt1.c2, rt1.c4, rt1.c0, t0.c0, rt1.c1, rt1.c6, t0.c1, rt1.c5, rt0.c1, rt1.c3, t0.c64, rt0.c2, rt0.c0 FROM t0, rt0 RIGHT OUTER JOIN rt1 ON CASE (rt0.c2 IN ())  WHEN CASE WHEN t0.c1 THEN rt1.c4 ELSE rt0.c0 END THEN ((((((((rt1.c5)OR(rt1.c5)))AND(t0.c0)))OR(rt1.c1)))AND(rt0.c2)) ELSE ((rt1.c3) NOT BETWEEN (rt0.c0) AND (rt1.c4)) END;
SELECT DISTINCT t0.c1, rt0.c1, rt0.c2, t0.c64, t0.c0 FROM t0 INNER JOIN rt0 ON rt0.c2;
SELECT DISTINCT t0.c1, rt0.c1, rt0.c2, t0.c64, t0.c0 FROM t0 INNER JOIN rt0 ON rt0.c2 WHERE (((((CASE WHEN x'' THEN t0.c1 WHEN t0.c64 THEN t0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE t0.c0 END)AND((- (t0.c0)))))AND(t0.c1 COLLATE NOCASE))) UNION SELECT DISTINCT t0.c1, rt0.c1, rt0.c2, t0.c64, t0.c0 FROM t0 NOT INDEXED INNER JOIN rt0 ON rt0.c2 WHERE ((NOT (((((CASE WHEN x'' THEN t0.c1 WHEN t0.c64 THEN t0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE t0.c0 END)AND((- (t0.c0)))))AND(t0.c1 COLLATE NOCASE))))) UNION SELECT DISTINCT t0.c1, rt0.c1, rt0.c2, t0.c64, t0.c0 FROM t0 INNER JOIN rt0 ON rt0.c2 WHERE (((((((CASE WHEN x'' THEN t0.c1 WHEN t0.c64 THEN t0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE t0.c0 END)AND((- (t0.c0)))))AND(t0.c1 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT t0.c1, rt0.c1, rt0.c2, t0.c64, t0.c0 FROM t0 INNER JOIN rt0 ON rt0.c2;
SELECT rt1.c6, rt1.c1, rt1.c5, rt1.c2, rt1.c0 FROM rt0 RIGHT OUTER JOIN t0 ON ((NULL)<(MIN(rt0.c0, rt0.c0))) RIGHT OUTER JOIN rt1 ON CASE WHEN ((rt1.c2) ISNULL) THEN (((rt0.c2)) NOT BETWEEN ((rt1.c6)) AND ((rt1.c4))) ELSE 'vd|wgb믘3' END GROUP BY rt1.c6, rt1.c1, rt1.c5, rt1.c2, rt1.c0;
SELECT rt1.c6, rt1.c1, rt1.c5, rt1.c2, rt1.c0 FROM rt0 RIGHT OUTER JOIN t0 ON ((NULL)<(MIN(rt0.c0, rt0.c0))) RIGHT OUTER JOIN rt1 ON CASE WHEN ((rt1.c2) ISNULL) THEN (((rt0.c2)) NOT BETWEEN ((rt1.c6)) AND ((rt1.c4))) ELSE 'vd|wgb믘3' END WHERE ((((((((((((((((((NOT (rt1.c2)))AND((t0.c0 IN ()))))AND((rt1.c2 IN ()))))AND(((rt1.c4) IS FALSE))))OR(0.24318436999646298)))OR((rt0.c2 IN ()))))AND(ABS(t0.c64))))AND(((rt0.c2) NOTNULL))))OR(-1.91360974E9))) GROUP BY rt1.c6, rt1.c1, rt1.c5, rt1.c2, rt1.c0 UNION SELECT ALL rt1.c6, rt1.c1, rt1.c5, rt1.c2, rt1.c0 FROM rt0 NOT INDEXED RIGHT OUTER JOIN t0 ON ((NULL)<(MIN(rt0.c0, rt0.c0))) RIGHT OUTER JOIN rt1 ON CASE WHEN ((rt1.c2) ISNULL) THEN (((rt0.c2)) NOT BETWEEN ((rt1.c6)) AND ((rt1.c4))) ELSE 'vd|wgb믘3' END WHERE ((NOT ((((((((((((((((((NOT (rt1.c2)))AND((t0.c0 IN ()))))AND((rt1.c2 IN ()))))AND(((rt1.c4) IS FALSE))))OR(0.24318436999646298)))OR((rt0.c2 IN ()))))AND(ABS(t0.c64))))AND(((rt0.c2) NOTNULL))))OR(-1.91360974E9))))) GROUP BY rt1.c6, rt1.c1, rt1.c5, rt1.c2, rt1.c0 UNION SELECT rt1.c6, rt1.c1, rt1.c5, rt1.c2, rt1.c0 FROM rt0 RIGHT OUTER JOIN t0 ON ((NULL)<(MIN(rt0.c0, rt0.c0))) RIGHT OUTER JOIN rt1 ON CASE WHEN ((rt1.c2) ISNULL) THEN (((rt0.c2)) NOT BETWEEN ((rt1.c6)) AND ((rt1.c4))) ELSE 'vd|wgb믘3' END WHERE ((((((((((((((((((((NOT (rt1.c2)))AND((t0.c0 IN ()))))AND((rt1.c2 IN ()))))AND(((rt1.c4) IS FALSE))))OR(0.24318436999646298)))OR((rt0.c2 IN ()))))AND(ABS(t0.c64))))AND(((rt0.c2) NOTNULL))))OR(-1.91360974E9))) ISNULL)) GROUP BY rt1.c6, rt1.c1, rt1.c5, rt1.c2, rt1.c0;
SELECT rt1.c6, rt1.c1, rt1.c5, rt1.c2, rt1.c0 FROM rt0 RIGHT OUTER JOIN t0 ON ((NULL)<(MIN(rt0.c0, rt0.c0))) RIGHT OUTER JOIN rt1 ON CASE WHEN ((rt1.c2) ISNULL) THEN (((rt0.c2)) NOT BETWEEN ((rt1.c6)) AND ((rt1.c4))) ELSE 'vd|wgb믘3' END GROUP BY rt1.c6, rt1.c1, rt1.c5, rt1.c2, rt1.c0;
SELECT rt0.c1, t0.c64, rt0.c2, rt0.c0, t0.c0 FROM rt0, t0 GROUP BY rt0.c1, t0.c64, rt0.c2, rt0.c0, t0.c0;
SELECT ALL rt0.c1, t0.c64, rt0.c2, rt0.c0, t0.c0 FROM rt0, t0 GROUP BY rt0.c1, t0.c64, rt0.c2, rt0.c0, t0.c0 HAVING CASE (t0.c1 IN ())  WHEN SUM(rt0.c1) THEN SUM(rt0.c0) WHEN TOTAL(MAX(MIN(COUNT(MAX(AVG(t0.c64)))))) THEN MAX(COUNT(*)) WHEN CAST(rt0.c2 AS TEXT) THEN ((rt0.c2)||(MIN(rt0.c1))) ELSE COUNT(*) END UNION ALL SELECT rt0.c1, t0.c64, rt0.c2, rt0.c0, t0.c0 FROM rt0, t0 GROUP BY rt0.c1, t0.c64, rt0.c2, rt0.c0, t0.c0 HAVING (NOT (CASE (t0.c1 IN ())  WHEN SUM(rt0.c1) THEN SUM(rt0.c0) WHEN TOTAL(MAX(MIN(COUNT(MAX(AVG(t0.c64)))))) THEN MAX(COUNT(*)) WHEN CAST(rt0.c2 AS TEXT) THEN ((rt0.c2)||(MIN(rt0.c1))) ELSE COUNT(*) END)) UNION ALL SELECT rt0.c1, t0.c64, rt0.c2, rt0.c0, t0.c0 FROM rt0, t0 GROUP BY rt0.c1, t0.c64, rt0.c2, rt0.c0, t0.c0 HAVING ((CASE (t0.c1 IN ())  WHEN SUM(rt0.c1) THEN SUM(rt0.c0) WHEN TOTAL(MAX(MIN(COUNT(MAX(AVG(t0.c64)))))) THEN MAX(COUNT(*)) WHEN CAST(rt0.c2 AS TEXT) THEN ((rt0.c2)||(MIN(rt0.c1))) ELSE COUNT(*) END) ISNULL);
SELECT rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (((((rt0.c0) NOT NULL))AND(((((rt0.c1)OR(rt0.c1)))OR(rt0.c2))))) ORDER BY CASE CAST(rt0.c2 AS TEXT)  WHEN (rt0.c0 IN ()) THEN CAST(rt0.c2 AS NUMERIC) WHEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)) THEN ((rt0.c1)IS(rt0.c1)) WHEN rt0.c0 THEN LIKELY(rt0.c2) WHEN (((rt0.c1))>((rt0.c1))) THEN CASE WHEN rt0.c0 THEN rt0.c0 END WHEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)) THEN ((rt0.c2)%(rt0.c0)) END  NULLS LAST;
SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c0) NOT NULL))AND(((((rt0.c1)OR(rt0.c1)))OR(rt0.c2))))))) ORDER BY CASE CAST(rt0.c2 AS TEXT)  WHEN (rt0.c0 IN ()) THEN CAST(rt0.c2 AS NUMERIC) WHEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)) THEN ((rt0.c1)IS(rt0.c1)) WHEN rt0.c0 THEN LIKELY(rt0.c2) WHEN (((rt0.c1))>((rt0.c1))) THEN CASE WHEN rt0.c0 THEN rt0.c0 END WHEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)) THEN ((rt0.c2)%(rt0.c0)) END  NULLS LAST;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (((((((rt0.c0) NOT NULL))AND(((((rt0.c1)OR(rt0.c1)))OR(rt0.c2))))) ISNULL)) ORDER BY CASE CAST(rt0.c2 AS TEXT)  WHEN (rt0.c0 IN ()) THEN CAST(rt0.c2 AS NUMERIC) WHEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)) THEN ((rt0.c1)IS(rt0.c1)) WHEN rt0.c0 THEN LIKELY(rt0.c2) WHEN (((rt0.c1))>((rt0.c1))) THEN CASE WHEN rt0.c0 THEN rt0.c0 END WHEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)) THEN ((rt0.c2)%(rt0.c0)) END  NULLS LAST;
SELECT rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt1, t0;
SELECT DISTINCT * FROM rt1, t0 WHERE ('-1782074705') UNION SELECT DISTINCT * FROM rt1, t0 WHERE ((NOT ('-1782074705'))) UNION SELECT DISTINCT * FROM rt1, t0 WHERE ((('-1782074705') ISNULL));
SELECT DISTINCT * FROM rt1, t0;
SELECT ALL rt0.c2, t0.c0, rt1.c3, rt1.c6, rt1.c2, rt1.c1, t0.c1, rt1.c0, t0.c64 FROM rt0, rt1, t0 GROUP BY rt0.c2, t0.c0, rt1.c3, rt1.c6, rt1.c2, rt1.c1, t0.c1, rt1.c0, t0.c64;
SELECT ALL rt0.c2, t0.c0, rt1.c3, rt1.c6, rt1.c2, rt1.c1, t0.c1, rt1.c0, t0.c64 FROM rt0, rt1, t0 WHERE (CASE rt0.c0 COLLATE BINARY  WHEN rt0.c2 THEN LIKELY(DISTINCT rt1.c0) ELSE rt1.c4 END) GROUP BY rt0.c2, t0.c0, rt1.c3, rt1.c6, rt1.c2, rt1.c1, t0.c1, rt1.c0, t0.c64 UNION SELECT ALL rt0.c2, t0.c0, rt1.c3, rt1.c6, rt1.c2, rt1.c1, t0.c1, rt1.c0, t0.c64 FROM rt0, rt1, t0 WHERE ((NOT (CASE rt0.c0 COLLATE BINARY  WHEN rt0.c2 THEN LIKELY(DISTINCT rt1.c0) ELSE rt1.c4 END))) GROUP BY rt0.c2, t0.c0, rt1.c3, rt1.c6, rt1.c2, rt1.c1, t0.c1, rt1.c0, t0.c64 UNION SELECT ALL rt0.c2, t0.c0, rt1.c3, rt1.c6, rt1.c2, rt1.c1, t0.c1, rt1.c0, t0.c64 FROM rt0, rt1, t0 WHERE (((CASE rt0.c0 COLLATE BINARY  WHEN rt0.c2 THEN LIKELY(DISTINCT rt1.c0) ELSE rt1.c4 END) ISNULL)) GROUP BY rt0.c2, t0.c0, rt1.c3, rt1.c6, rt1.c2, rt1.c1, t0.c1, rt1.c0, t0.c64;
SELECT ALL rt0.c2, t0.c0, rt1.c3, rt1.c6, rt1.c2, rt1.c1, t0.c1, rt1.c0, t0.c64 FROM rt0, rt1, t0 GROUP BY rt0.c2, t0.c0, rt1.c3, rt1.c6, rt1.c2, rt1.c1, t0.c1, rt1.c0, t0.c64;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING load_extension(((SUM(MIN(rt0.c0))) BETWEEN (rt0.c2) AND (rt0.c1))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (load_extension(((SUM(MIN(rt0.c0))) BETWEEN (rt0.c2) AND (rt0.c1))))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((load_extension(((SUM(MIN(rt0.c0))) BETWEEN (rt0.c2) AND (rt0.c1)))) ISNULL);
SELECT ALL rt0.c0, t0.c1, rt0.c2, t0.c0 FROM rt0, t0;
SELECT ALL rt0.c0, t0.c1, rt0.c2, t0.c0 FROM rt0, t0 WHERE (rt0.c1) UNION ALL SELECT ALL rt0.c0, t0.c1, rt0.c2, t0.c0 FROM rt0, t0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT ALL rt0.c0, t0.c1, rt0.c2, t0.c0 FROM rt0, t0 NOT INDEXED WHERE (((rt0.c1) ISNULL));
SELECT ALL rt0.c0, t0.c1, rt0.c2, t0.c0 FROM rt0, t0;
SELECT DISTINCT * FROM rt0, t0;
SELECT DISTINCT * FROM rt0, t0 WHERE (((CASE WHEN t0.c1 THEN t0.c64 WHEN t0.c0 THEN rt0.c1 WHEN rt0.c1 THEN x'' ELSE t0.c1 END) BETWEEN (((((t0.c0)OR(rt0.c1)))OR(rt0.c2))) AND ((((rt0.c0)) NOT BETWEEN ((t0.c64)) AND ((t0.c1)))))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((NOT (((CASE WHEN t0.c1 THEN t0.c64 WHEN t0.c0 THEN rt0.c1 WHEN rt0.c1 THEN x'' ELSE t0.c1 END) BETWEEN (((((t0.c0)OR(rt0.c1)))OR(rt0.c2))) AND ((((rt0.c0)) NOT BETWEEN ((t0.c64)) AND ((t0.c1)))))))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE (((((CASE WHEN t0.c1 THEN t0.c64 WHEN t0.c0 THEN rt0.c1 WHEN rt0.c1 THEN x'' ELSE t0.c1 END) BETWEEN (((((t0.c0)OR(rt0.c1)))OR(rt0.c2))) AND ((((rt0.c0)) NOT BETWEEN ((t0.c64)) AND ((t0.c1)))))) ISNULL));
SELECT DISTINCT * FROM rt0, t0;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((rt0.c2 COLLATE RTRIM) NOT BETWEEN (((((0.4901324796578823)OR(rt0.c2)))AND(rt0.c1))) AND ((rt0.c0 IN ())))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c2 COLLATE RTRIM) NOT BETWEEN (((((0.4901324796578823)OR(rt0.c2)))AND(rt0.c1))) AND ((rt0.c0 IN ())))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((((rt0.c2 COLLATE RTRIM) NOT BETWEEN (((((0.4901324796578823)OR(rt0.c2)))AND(rt0.c1))) AND ((rt0.c0 IN ())))) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt1.c5, rt1.c1, rt0.c0, rt1.c3, rt1.c4, rt1.c6, rt0.c2, rt1.c0 FROM rt0, rt1 GROUP BY rt1.c5, rt1.c1, rt0.c0, rt1.c3, rt1.c4, rt1.c6, rt0.c2, rt1.c0;
SELECT ALL rt1.c5, rt1.c1, rt0.c0, rt1.c3, rt1.c4, rt1.c6, rt0.c2, rt1.c0 FROM rt0, rt1 GROUP BY rt1.c5, rt1.c1, rt0.c0, rt1.c3, rt1.c4, rt1.c6, rt0.c2, rt1.c0 HAVING (COUNT(rt1.c1) IN ()) UNION ALL SELECT rt1.c5, rt1.c1, rt0.c0, rt1.c3, rt1.c4, rt1.c6, rt0.c2, rt1.c0 FROM rt0, rt1 GROUP BY rt1.c5, rt1.c1, rt0.c0, rt1.c3, rt1.c4, rt1.c6, rt0.c2, rt1.c0 HAVING (NOT ((COUNT(rt1.c1) IN ()))) UNION ALL SELECT ALL rt1.c5, rt1.c1, rt0.c0, rt1.c3, rt1.c4, rt1.c6, rt0.c2, rt1.c0 FROM rt0, rt1 GROUP BY rt1.c5, rt1.c1, rt0.c0, rt1.c3, rt1.c4, rt1.c6, rt0.c2, rt1.c0 HAVING (((COUNT(rt1.c1) IN ())) ISNULL);
SELECT rt1.c5, rt1.c1, rt0.c0, rt1.c3, rt1.c4, rt1.c6, rt0.c2, rt1.c0 FROM rt0, rt1 GROUP BY rt1.c5, rt1.c1, rt0.c0, rt1.c3, rt1.c4, rt1.c6, rt0.c2, rt1.c0;
SELECT ALL rt1.c5, rt1.c1, rt0.c0, rt1.c3, rt1.c4, rt1.c6, rt0.c2, rt1.c0 FROM rt0, rt1 GROUP BY rt1.c5, rt1.c1, rt0.c0, rt1.c3, rt1.c4, rt1.c6, rt0.c2, rt1.c0 HAVING (COUNT(rt1.c1) IN ()) UNION ALL SELECT rt1.c5, rt1.c1, rt0.c0, rt1.c3, rt1.c4, rt1.c6, rt0.c2, rt1.c0 FROM rt0, rt1 GROUP BY rt1.c5, rt1.c1, rt0.c0, rt1.c3, rt1.c4, rt1.c6, rt0.c2, rt1.c0 HAVING (NOT ((COUNT(rt1.c1) IN ()))) UNION ALL SELECT ALL rt1.c5, rt1.c1, rt0.c0, rt1.c3, rt1.c4, rt1.c6, rt0.c2, rt1.c0 FROM rt0, rt1 GROUP BY rt1.c5, rt1.c1, rt0.c0, rt1.c3, rt1.c4, rt1.c6, rt0.c2, rt1.c0 HAVING (((COUNT(rt1.c1) IN ())) ISNULL);
SELECT rt1.c5, rt1.c1, rt0.c0, rt1.c3, rt1.c4, rt1.c6, rt0.c2, rt1.c0 FROM rt0, rt1 GROUP BY rt1.c5, rt1.c1, rt0.c0, rt1.c3, rt1.c4, rt1.c6, rt0.c2, rt1.c0;
SELECT rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c0, rt0.c2 FROM rt0 WHERE (rt0.c1) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN t0 ON ((((rt0.c0)>=(rt0.c2))) IS FALSE);
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN t0 ON ((((rt0.c0)>=(rt0.c2))) IS FALSE) WHERE (t0.c0) UNION SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN t0 ON ((((rt0.c0)>=(rt0.c2))) IS FALSE) WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN t0 ON ((((rt0.c0)>=(rt0.c2))) IS FALSE) WHERE (((t0.c0) ISNULL));
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN t0 ON ((((rt0.c0)>=(rt0.c2))) IS FALSE);
SELECT rt1.c2, rt1.c6, rt1.c5, rt1.c0, rt1.c4 FROM rt1 GROUP BY rt1.c2, rt1.c6, rt1.c5, rt1.c0, rt1.c4;
SELECT rt1.c2, rt1.c6, rt1.c5, rt1.c0, rt1.c4 FROM rt1 WHERE ((((CAST(rt1.c0 AS NUMERIC)))<((((rt1.c4)||(rt1.c2)))))) GROUP BY rt1.c2, rt1.c6, rt1.c5, rt1.c0, rt1.c4 UNION SELECT ALL rt1.c2, rt1.c6, rt1.c5, rt1.c0, rt1.c4 FROM rt1 WHERE ((NOT ((((CAST(rt1.c0 AS NUMERIC)))<((((rt1.c4)||(rt1.c2)))))))) GROUP BY rt1.c2, rt1.c6, rt1.c5, rt1.c0, rt1.c4 UNION SELECT rt1.c2, rt1.c6, rt1.c5, rt1.c0, rt1.c4 FROM rt1 WHERE ((((((CAST(rt1.c0 AS NUMERIC)))<((((rt1.c4)||(rt1.c2)))))) ISNULL)) GROUP BY rt1.c2, rt1.c6, rt1.c5, rt1.c0, rt1.c4;
SELECT rt1.c2, rt1.c6, rt1.c5, rt1.c0, rt1.c4 FROM rt1 GROUP BY rt1.c2, rt1.c6, rt1.c5, rt1.c0, rt1.c4;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, t0.c64 FROM t0 INNER JOIN rt0 ON (- (UNLIKELY(t0.c1))) GROUP BY rt0.c0, rt0.c2, rt0.c1, t0.c64;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, t0.c64 FROM t0 INNER JOIN rt0 ON (- (UNLIKELY(t0.c1))) GROUP BY rt0.c0, rt0.c2, rt0.c1, t0.c64 HAVING UPPER((((SUM(TOTAL(t0.c1))))!=((t0.c0)))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1, t0.c64 FROM t0 INNER JOIN rt0 ON (- (UNLIKELY(t0.c1))) GROUP BY rt0.c0, rt0.c2, rt0.c1, t0.c64 HAVING (NOT (UPPER((((SUM(TOTAL(t0.c1))))<>((t0.c0)))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1, t0.c64 FROM t0 INNER JOIN rt0 ON (- (UNLIKELY(t0.c1))) GROUP BY rt0.c0, rt0.c2, rt0.c1, t0.c64 HAVING ((UPPER((((SUM(TOTAL(t0.c1))))<>((t0.c0))))) ISNULL);
SELECT rt1.c2, rt1.c0, rt1.c5, rt1.c3, rt1.c4 FROM rt1;
SELECT rt1.c2, rt1.c0, rt1.c5, rt1.c3, rt1.c4 FROM rt1 WHERE (((json_array(rt1.c1, '', rt1.c5, 0.712658339669061))>=(CASE 1844686898  WHEN rt1.c3 THEN 0xffffffffe87cc266 WHEN rt1.c1 THEN rt1.c5 WHEN rt1.c5 THEN rt1.c4 ELSE rt1.c0 END))) UNION ALL SELECT rt1.c2, rt1.c0, rt1.c5, rt1.c3, rt1.c4 FROM rt1 WHERE ((NOT (((json_array(rt1.c1, '', rt1.c5, 0.712658339669061))>=(CASE 1844686898  WHEN rt1.c3 THEN 0xffffffffe87cc266 WHEN rt1.c1 THEN rt1.c5 WHEN rt1.c5 THEN rt1.c4 ELSE rt1.c0 END))))) UNION ALL SELECT ALL rt1.c2, rt1.c0, rt1.c5, rt1.c3, rt1.c4 FROM rt1 WHERE (((((json_array(rt1.c1, '', rt1.c5, 0.712658339669061))>=(CASE 1844686898  WHEN rt1.c3 THEN 0Xffffffffe87cc266 WHEN rt1.c1 THEN rt1.c5 WHEN rt1.c5 THEN rt1.c4 ELSE rt1.c0 END))) ISNULL));
SELECT rt1.c2, rt1.c0, rt1.c5, rt1.c3, rt1.c4 FROM rt1;
SELECT DISTINCT rt1.c3, rt1.c4, rt1.c2, t0.c64, rt0.c1, rt0.c0 FROM t0 FULL OUTER JOIN rt1 ON CAST(((rt1.c6)>>(t0.c1)) AS REAL) CROSS JOIN rt0 ON ((((((((((t0.c1)OR(rt1.c5)))AND(rt1.c4)))OR(rt0.c0)))OR(t0.c0)))*(((((((((rt0.c1)AND(rt1.c3)))AND(rt1.c2)))OR(rt1.c1)))AND(rt1.c1))));
SELECT DISTINCT rt1.c3, rt1.c4, rt1.c2, t0.c64, rt0.c1, rt0.c0 FROM t0 FULL OUTER JOIN rt1 ON CAST(((rt1.c6)>>(t0.c1)) AS REAL) CROSS JOIN rt0 ON ((((((((((t0.c1)OR(rt1.c5)))AND(rt1.c4)))OR(rt0.c0)))OR(t0.c0)))*(((((((((rt0.c1)AND(rt1.c3)))AND(rt1.c2)))OR(rt1.c1)))AND(rt1.c1)))) WHERE (CAST((- (t0.c1)) AS REAL)) UNION SELECT DISTINCT rt1.c3, rt1.c4, rt1.c2, t0.c64, rt0.c1, rt0.c0 FROM t0 FULL OUTER JOIN rt1 ON CAST(((rt1.c6)>>(t0.c1)) AS REAL) CROSS JOIN rt0 ON ((((((((((t0.c1)OR(rt1.c5)))AND(rt1.c4)))OR(rt0.c0)))OR(t0.c0)))*(((((((((rt0.c1)AND(rt1.c3)))AND(rt1.c2)))OR(rt1.c1)))AND(rt1.c1)))) WHERE ((NOT (CAST((- (t0.c1)) AS REAL)))) UNION SELECT DISTINCT rt1.c3, rt1.c4, rt1.c2, t0.c64, rt0.c1, rt0.c0 FROM t0 FULL OUTER JOIN rt1 ON CAST(((rt1.c6)>>(t0.c1)) AS REAL) CROSS JOIN rt0 ON ((((((((((t0.c1)OR(rt1.c5)))AND(rt1.c4)))OR(rt0.c0)))OR(t0.c0)))*(((((((((rt0.c1)AND(rt1.c3)))AND(rt1.c2)))OR(rt1.c1)))AND(rt1.c1)))) WHERE (((CAST((- (t0.c1)) AS REAL)) ISNULL));
SELECT DISTINCT rt1.c3, rt1.c4, rt1.c2, t0.c64, rt0.c1, rt0.c0 FROM t0 FULL OUTER JOIN rt1 ON CAST(((rt1.c6)>>(t0.c1)) AS REAL) CROSS JOIN rt0 ON ((((((((((t0.c1)OR(rt1.c5)))AND(rt1.c4)))OR(rt0.c0)))OR(t0.c0)))*(((((((((rt0.c1)AND(rt1.c3)))AND(rt1.c2)))OR(rt1.c1)))AND(rt1.c1))));
SELECT ALL t0.c64 FROM t0 GROUP BY t0.c64;
SELECT ALL t0.c64 FROM t0 WHERE (json(NULL)) GROUP BY t0.c64 UNION SELECT ALL t0.c64 FROM t0 WHERE ((NOT (json(NULL)))) GROUP BY t0.c64 UNION SELECT ALL t0.c64 FROM t0 WHERE (((json(NULL)) ISNULL)) GROUP BY t0.c64;
SELECT ALL t0.c64 FROM t0 GROUP BY t0.c64;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING CAST(MIN(rt0.c2) AS REAL) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (CAST(MIN(rt0.c2) AS REAL))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((CAST(MIN(rt0.c2) AS REAL)) ISNULL);
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING CAST(MIN(rt0.c2) AS REAL) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (CAST(MIN(rt0.c2) AS REAL))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((CAST(MIN(rt0.c2) AS REAL)) ISNULL);
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL * FROM rt1, t0;
SELECT ALL * FROM rt1, t0 WHERE ((((((rt1.c3)OR(t0.c0)))OR(rt1.c1)) IN ())) UNION ALL SELECT ALL * FROM rt1, t0 WHERE ((NOT ((((((rt1.c3)OR(t0.c0)))OR(rt1.c1)) IN ())))) UNION ALL SELECT ALL * FROM rt1, t0 NOT INDEXED WHERE ((((((((rt1.c3)OR(t0.c0)))OR(rt1.c1)) IN ())) ISNULL));
SELECT ALL * FROM rt1, t0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((UNLIKELY(rt0.c1) IN (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2))))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((UNLIKELY(rt0.c1) IN (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2))))))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((UNLIKELY(rt0.c1) IN (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c0, rt1.c4, rt1.c3, rt1.c1, rt0.c2, t0.c64, t0.c1, rt1.c6, t0.c0, rt1.c0, rt1.c5, rt1.c2 FROM rt0, rt1, t0 GROUP BY rt0.c0, rt1.c4, rt1.c3, rt1.c1, rt0.c2, t0.c64, t0.c1, rt1.c6, t0.c0, rt1.c0, rt1.c5, rt1.c2;
SELECT ALL rt0.c0, rt1.c4, rt1.c3, rt1.c1, rt0.c2, t0.c64, t0.c1, rt1.c6, t0.c0, rt1.c0, rt1.c5, rt1.c2 FROM rt0, rt1, t0 WHERE (LAST_INSERT_ROWID()) GROUP BY rt0.c0, rt1.c4, rt1.c3, rt1.c1, rt0.c2, t0.c64, t0.c1, rt1.c6, t0.c0, rt1.c0, rt1.c5, rt1.c2 UNION SELECT ALL rt0.c0, rt1.c4, rt1.c3, rt1.c1, rt0.c2, t0.c64, t0.c1, rt1.c6, t0.c0, rt1.c0, rt1.c5, rt1.c2 FROM rt0, rt1, t0 WHERE ((NOT (LAST_INSERT_ROWID()))) GROUP BY rt0.c0, rt1.c4, rt1.c3, rt1.c1, rt0.c2, t0.c64, t0.c1, rt1.c6, t0.c0, rt1.c0, rt1.c5, rt1.c2 UNION SELECT ALL rt0.c0, rt1.c4, rt1.c3, rt1.c1, rt0.c2, t0.c64, t0.c1, rt1.c6, t0.c0, rt1.c0, rt1.c5, rt1.c2 FROM rt0, rt1, t0 WHERE (((LAST_INSERT_ROWID()) ISNULL)) GROUP BY rt0.c0, rt1.c4, rt1.c3, rt1.c1, rt0.c2, t0.c64, t0.c1, rt1.c6, t0.c0, rt1.c0, rt1.c5, rt1.c2;
SELECT ALL rt0.c0, rt1.c4, rt1.c3, rt1.c1, rt0.c2, t0.c64, t0.c1, rt1.c6, t0.c0, rt1.c0, rt1.c5, rt1.c2 FROM rt0, rt1, t0 GROUP BY rt0.c0, rt1.c4, rt1.c3, rt1.c1, rt0.c2, t0.c64, t0.c1, rt1.c6, t0.c0, rt1.c0, rt1.c5, rt1.c2;
SELECT t0.c0, rt1.c5, t0.c64, rt1.c3 FROM t0, rt1 GROUP BY t0.c0, rt1.c5, t0.c64, rt1.c3;
SELECT ALL t0.c0, rt1.c5, t0.c64, rt1.c3 FROM t0, rt1 GROUP BY t0.c0, rt1.c5, t0.c64, rt1.c3 HAVING MIN(AVG(COUNT(COUNT(*)))) UNION ALL SELECT ALL t0.c0, rt1.c5, t0.c64, rt1.c3 FROM t0, rt1 GROUP BY t0.c0, rt1.c5, t0.c64, rt1.c3 HAVING (NOT (MIN(AVG(COUNT(COUNT(*)))))) UNION ALL SELECT t0.c0, rt1.c5, t0.c64, rt1.c3 FROM t0, rt1 GROUP BY t0.c0, rt1.c5, t0.c64, rt1.c3 HAVING ((MIN(AVG(COUNT(COUNT(*))))) ISNULL);
SELECT ALL rt0.c1, rt1.c5, t0.c64, rt0.c0, t0.c0, rt1.c2, rt1.c6 FROM rt0, t0, rt1;
SELECT rt0.c1, rt1.c5, t0.c64, rt0.c0, t0.c0, rt1.c2, rt1.c6 FROM rt0, t0, rt1 WHERE (((rt1.c1 COLLATE RTRIM) NOT BETWEEN (((((((((rt0.c0)AND(rt1.c4)))AND(rt0.c0)))OR(rt1.c1)))AND(rt1.c4))) AND (((((rt0.c1)AND(NULL)))AND(rt1.c2))))) UNION ALL SELECT ALL rt0.c1, rt1.c5, t0.c64, rt0.c0, t0.c0, rt1.c2, rt1.c6 FROM rt0, t0, rt1 WHERE ((NOT (((rt1.c1 COLLATE RTRIM) NOT BETWEEN (((((((((rt0.c0)AND(rt1.c4)))AND(rt0.c0)))OR(rt1.c1)))AND(rt1.c4))) AND (((((rt0.c1)AND(NULL)))AND(rt1.c2))))))) UNION ALL SELECT rt0.c1, rt1.c5, t0.c64, rt0.c0, t0.c0, rt1.c2, rt1.c6 FROM rt0, t0, rt1 WHERE (((((rt1.c1 COLLATE RTRIM) NOT BETWEEN (((((((((rt0.c0)AND(rt1.c4)))AND(rt0.c0)))OR(rt1.c1)))AND(rt1.c4))) AND (((((rt0.c1)AND(NULL)))AND(rt1.c2))))) ISNULL));
SELECT ALL rt0.c1, rt1.c5, t0.c64, rt0.c0, t0.c0, rt1.c2, rt1.c6 FROM rt0, t0, rt1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (0.7582221387210791) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (0.7582221387210791))) UNION SELECT DISTINCT * FROM rt0 WHERE (((0.7582221387210791) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt1.c2, rt1.c1, rt1.c4, t0.c1, rt1.c3, t0.c0, rt1.c5 FROM t0 INNER JOIN rt1 ON (((rt1.c4 COLLATE BINARY, (+ (rt1.c1)), CAST(rt1.c0 AS TEXT)))>=((((rt1.c4)&(rt1.c4)), CAST(t0.c64 AS BLOB), (NOT (t0.c0))))) GROUP BY rt1.c2, rt1.c1, rt1.c4, t0.c1, rt1.c3, t0.c0, rt1.c5;
SELECT rt1.c2, rt1.c1, rt1.c4, t0.c1, rt1.c3, t0.c0, rt1.c5 FROM t0 INNER JOIN rt1 ON (((rt1.c4 COLLATE BINARY, (+ (rt1.c1)), CAST(rt1.c0 AS TEXT)))>=((((rt1.c4)&(rt1.c4)), CAST(t0.c64 AS BLOB), (NOT (t0.c0))))) WHERE (((((rt1.c3)AND(rt1.c0)))AND(rt1.c3)) COLLATE BINARY) GROUP BY rt1.c2, rt1.c1, rt1.c4, t0.c1, rt1.c3, t0.c0, rt1.c5 UNION SELECT rt1.c2, rt1.c1, rt1.c4, t0.c1, rt1.c3, t0.c0, rt1.c5 FROM t0 INNER JOIN rt1 ON (((rt1.c4 COLLATE BINARY, (+ (rt1.c1)), CAST(rt1.c0 AS TEXT)))>=((((rt1.c4)&(rt1.c4)), CAST(t0.c64 AS BLOB), (NOT (t0.c0))))) WHERE ((NOT (((((rt1.c3)AND(rt1.c0)))AND(rt1.c3)) COLLATE BINARY))) GROUP BY rt1.c2, rt1.c1, rt1.c4, t0.c1, rt1.c3, t0.c0, rt1.c5 UNION SELECT rt1.c2, rt1.c1, rt1.c4, t0.c1, rt1.c3, t0.c0, rt1.c5 FROM t0 INNER JOIN rt1 ON (((rt1.c4 COLLATE BINARY, (+ (rt1.c1)), CAST(rt1.c0 AS TEXT)))>=((((rt1.c4)&(rt1.c4)), CAST(t0.c64 AS BLOB), (NOT (t0.c0))))) WHERE (((((((rt1.c3)AND(rt1.c0)))AND(rt1.c3)) COLLATE BINARY) ISNULL)) GROUP BY rt1.c2, rt1.c1, rt1.c4, t0.c1, rt1.c3, t0.c0, rt1.c5;
SELECT ALL rt1.c2, rt1.c1, rt1.c4, t0.c1, rt1.c3, t0.c0, rt1.c5 FROM t0 INNER JOIN rt1 ON (((rt1.c4 COLLATE BINARY, (+ (rt1.c1)), CAST(rt1.c0 AS TEXT)))>=((((rt1.c4)&(rt1.c4)), CAST(t0.c64 AS BLOB), (NOT (t0.c0))))) GROUP BY rt1.c2, rt1.c1, rt1.c4, t0.c1, rt1.c3, t0.c0, rt1.c5;
SELECT t0.c1 FROM t0 GROUP BY t0.c1;
SELECT t0.c1 FROM t0 GROUP BY t0.c1 HAVING (((COUNT(SUM(t0.c0)) IN ()))IS(((((((((TOTAL(t0.c64))OR(MIN(COUNT(*)))))OR(t0.c64)))OR(MAX(t0.c0))))OR(TOTAL(MAX(MAX(COUNT(*)))))))) UNION ALL SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1 HAVING (NOT ((((COUNT(SUM(t0.c0)) IN ()))IS(((((((((TOTAL(t0.c64))OR(MIN(COUNT(*)))))OR(t0.c64)))OR(MAX(t0.c0))))OR(TOTAL(MAX(MAX(COUNT(*)))))))))) UNION ALL SELECT t0.c1 FROM t0 GROUP BY t0.c1 HAVING (((((COUNT(SUM(t0.c0)) IN ()))IS(((((((((TOTAL(t0.c64))OR(MIN(COUNT(*)))))OR(t0.c64)))OR(MAX(t0.c0))))OR(TOTAL(MAX(MAX(COUNT(*))))))))) ISNULL);
SELECT * FROM rt0, rt1;
SELECT ALL * FROM rt0, rt1 WHERE ((((~ (rt1.c4)))IS(((((rt1.c2)AND(rt1.c4)))OR(rt1.c4))))) UNION ALL SELECT ALL * FROM rt0, rt1 WHERE ((NOT ((((~ (rt1.c4)))IS(((((rt1.c2)AND(rt1.c4)))OR(rt1.c4))))))) UNION ALL SELECT * FROM rt0, rt1 WHERE ((((((~ (rt1.c4)))IS(((((rt1.c2)AND(rt1.c4)))OR(rt1.c4))))) ISNULL));
SELECT * FROM rt0, rt1;
SELECT DISTINCT * FROM t0, rt1, rt0;
SELECT DISTINCT * FROM t0, rt1, rt0 WHERE (((t0.c64) IS TRUE) COLLATE RTRIM) UNION SELECT DISTINCT * FROM t0, rt1, rt0 WHERE ((NOT (((t0.c64) IS TRUE) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM t0, rt1, rt0 WHERE (((((t0.c64) IS TRUE) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM t0, rt1, rt0;
SELECT ALL t0.c1, rt1.c5, t0.c0, rt1.c1, rt1.c6, rt1.c4, rt1.c3, t0.c64, rt1.c2 FROM t0, rt1 GROUP BY t0.c1, rt1.c5, t0.c0, rt1.c1, rt1.c6, rt1.c4, rt1.c3, t0.c64, rt1.c2;
SELECT t0.c1, rt1.c5, t0.c0, rt1.c1, rt1.c6, rt1.c4, rt1.c3, t0.c64, rt1.c2 FROM t0, rt1 WHERE (0.9439126686318292) GROUP BY t0.c1, rt1.c5, t0.c0, rt1.c1, rt1.c6, rt1.c4, rt1.c3, t0.c64, rt1.c2 UNION SELECT t0.c1, rt1.c5, t0.c0, rt1.c1, rt1.c6, rt1.c4, rt1.c3, t0.c64, rt1.c2 FROM t0, rt1 WHERE ((NOT (0.9439126686318292))) GROUP BY t0.c1, rt1.c5, t0.c0, rt1.c1, rt1.c6, rt1.c4, rt1.c3, t0.c64, rt1.c2 UNION SELECT ALL t0.c1, rt1.c5, t0.c0, rt1.c1, rt1.c6, rt1.c4, rt1.c3, t0.c64, rt1.c2 FROM t0, rt1 WHERE (((0.9439126686318292) ISNULL)) GROUP BY t0.c1, rt1.c5, t0.c0, rt1.c1, rt1.c6, rt1.c4, rt1.c3, t0.c64, rt1.c2;
SELECT ALL t0.c1, rt1.c5, t0.c0, rt1.c1, rt1.c6, rt1.c4, rt1.c3, t0.c64, rt1.c2 FROM t0, rt1 GROUP BY t0.c1, rt1.c5, t0.c0, rt1.c1, rt1.c6, rt1.c4, rt1.c3, t0.c64, rt1.c2;
SELECT rt1.c6, rt1.c1, rt0.c1, rt1.c5, rt0.c0, rt1.c2, rt1.c0, rt0.c2, rt1.c3, rt1.c4 FROM rt0, rt1, t0 GROUP BY rt1.c6, rt1.c1, rt0.c1, rt1.c5, rt0.c0, rt1.c2, rt1.c0, rt0.c2, rt1.c3, rt1.c4;
SELECT rt1.c6, rt1.c1, rt0.c1, rt1.c5, rt0.c0, rt1.c2, rt1.c0, rt0.c2, rt1.c3, rt1.c4 FROM rt0, rt1, t0 GROUP BY rt1.c6, rt1.c1, rt0.c1, rt1.c5, rt0.c0, rt1.c2, rt1.c0, rt0.c2, rt1.c3, rt1.c4 HAVING SQLITE_COMPILEOPTION_USED((((AVG(GROUP_CONCAT(rt1.c6)), rt1.c1, COUNT(*), rt1.c3, t0.c1))<=((SUM(rt1.c0), MAX(COUNT(*)), COUNT(rt1.c4), t0.c64, t0.c0)))) UNION ALL SELECT rt1.c6, rt1.c1, rt0.c1, rt1.c5, rt0.c0, rt1.c2, rt1.c0, rt0.c2, rt1.c3, rt1.c4 FROM rt0, rt1, t0 GROUP BY rt1.c6, rt1.c1, rt0.c1, rt1.c5, rt0.c0, rt1.c2, rt1.c0, rt0.c2, rt1.c3, rt1.c4 HAVING (NOT (SQLITE_COMPILEOPTION_USED((((AVG(GROUP_CONCAT(rt1.c6)), rt1.c1, COUNT(*), rt1.c3, t0.c1))<=((SUM(rt1.c0), MAX(COUNT(*)), COUNT(rt1.c4), t0.c64, t0.c0)))))) UNION ALL SELECT rt1.c6, rt1.c1, rt0.c1, rt1.c5, rt0.c0, rt1.c2, rt1.c0, rt0.c2, rt1.c3, rt1.c4 FROM rt0, rt1, t0 GROUP BY rt1.c6, rt1.c1, rt0.c1, rt1.c5, rt0.c0, rt1.c2, rt1.c0, rt0.c2, rt1.c3, rt1.c4 HAVING ((SQLITE_COMPILEOPTION_USED((((AVG(GROUP_CONCAT(rt1.c6)), rt1.c1, COUNT(*), rt1.c3, t0.c1))<=((SUM(rt1.c0), MAX(COUNT(*)), COUNT(rt1.c4), t0.c64, t0.c0))))) ISNULL);
SELECT * FROM rt1, t0, rt0;
SELECT * FROM rt1, t0, rt0 WHERE (((0.19878605587732878)=(CASE WHEN rt1.c5 THEN rt0.c2 WHEN rt1.c5 THEN rt0.c0 WHEN rt1.c1 THEN t0.c64 END))) UNION ALL SELECT * FROM rt1, t0, rt0 WHERE ((NOT (((0.19878605587732878)==(CASE WHEN rt1.c5 THEN rt0.c2 WHEN rt1.c5 THEN rt0.c0 WHEN rt1.c1 THEN t0.c64 END))))) UNION ALL SELECT * FROM rt1, t0, rt0 WHERE (((((0.19878605587732878)=(CASE WHEN rt1.c5 THEN rt0.c2 WHEN rt1.c5 THEN rt0.c0 WHEN rt1.c1 THEN t0.c64 END))) ISNULL));
SELECT * FROM rt1, t0, rt0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (((((((((((0x2d657eb1)AND(rt1.c4)))OR(rt1.c5)))OR(rt1.c0)))AND(rt1.c2))) IS TRUE)) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (((((((((((0x2d657eb1)AND(rt1.c4)))OR(rt1.c5)))OR(rt1.c0)))AND(rt1.c2))) IS TRUE)))) UNION SELECT DISTINCT * FROM rt1 WHERE (((((((((((((0X2d657eb1)AND(rt1.c4)))OR(rt1.c5)))OR(rt1.c0)))AND(rt1.c2))) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE (((rt0.c1) BETWEEN (NULL) AND (((rt0.c0)-(rt0.c1))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c1) BETWEEN (NULL) AND (((rt0.c0)-(rt0.c1))))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE (((((rt0.c1) BETWEEN (NULL) AND (((rt0.c0)-(rt0.c1))))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((((GROUP_CONCAT(SUM(rt0.c2)))=(MAX(rt0.c2))))<(GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (((((GROUP_CONCAT(SUM(rt0.c2)))==(MAX(rt0.c2))))<(GROUP_CONCAT(COUNT(*)))))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((((((GROUP_CONCAT(SUM(rt0.c2)))=(MAX(rt0.c2))))<(GROUP_CONCAT(COUNT(*))))) ISNULL);
SELECT ALL TOTAL(((NULL) BETWEEN (t0.c0) AND (t0.c64)) COLLATE RTRIM) FROM rt0, t0;
SELECT ALL rt0.c0 FROM rt0;
SELECT ALL rt0.c0 FROM rt0 WHERE (((((((((((((rt0.c1)OR('0.19475021894259337')))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c2)))AND((~ ('718582345')))))AND(((rt0.c2)-(rt0.c2))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (((((((((((((rt0.c1)OR('0.19475021894259337')))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c2)))AND((~ ('718582345')))))AND(((rt0.c2)-(rt0.c2))))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE (((((((((((((((rt0.c1)OR('0.19475021894259337')))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c2)))AND((~ ('718582345')))))AND(((rt0.c2)-(rt0.c2))))) ISNULL));
SELECT ALL rt0.c0 FROM rt0;
SELECT DISTINCT rt1.c0, rt1.c1, rt1.c5, rt0.c0, rt1.c3, rt1.c4, rt1.c2 FROM rt1, rt0;
SELECT DISTINCT rt1.c0, rt1.c1, rt1.c5, rt0.c0, rt1.c3, rt1.c4, rt1.c2 FROM rt1, rt0 WHERE ('-627964103') UNION SELECT DISTINCT rt1.c0, rt1.c1, rt1.c5, rt0.c0, rt1.c3, rt1.c4, rt1.c2 FROM rt1, rt0 WHERE ((NOT ('-627964103'))) UNION SELECT DISTINCT rt1.c0, rt1.c1, rt1.c5, rt0.c0, rt1.c3, rt1.c4, rt1.c2 FROM rt1, rt0 WHERE ((('-627964103') ISNULL));
SELECT DISTINCT rt1.c0, rt1.c1, rt1.c5, rt0.c0, rt1.c3, rt1.c4, rt1.c2 FROM rt1, rt0;
SELECT rt1.c3, rt1.c5, rt0.c1, rt1.c2, rt0.c2, rt0.c0, rt1.c6, rt1.c1 FROM rt0 FULL OUTER JOIN rt1 ON TOTAL_CHANGES() GROUP BY rt1.c3, rt1.c5, rt0.c1, rt1.c2, rt0.c2, rt0.c0, rt1.c6, rt1.c1;
SELECT rt1.c3, rt1.c5, rt0.c1, rt1.c2, rt0.c2, rt0.c0, rt1.c6, rt1.c1 FROM rt0 FULL OUTER JOIN rt1 ON TOTAL_CHANGES() WHERE (CASE (- (rt1.c2))  WHEN CAST(rt1.c3 AS TEXT) THEN ((((rt1.c2)OR(rt1.c0)))OR(rt0.c1)) ELSE (x'fca4' IN ()) END) GROUP BY rt1.c3, rt1.c5, rt0.c1, rt1.c2, rt0.c2, rt0.c0, rt1.c6, rt1.c1 UNION SELECT ALL rt1.c3, rt1.c5, rt0.c1, rt1.c2, rt0.c2, rt0.c0, rt1.c6, rt1.c1 FROM rt0 FULL OUTER JOIN rt1 ON TOTAL_CHANGES() WHERE ((NOT (CASE (- (rt1.c2))  WHEN CAST(rt1.c3 AS TEXT) THEN ((((rt1.c2)OR(rt1.c0)))OR(rt0.c1)) ELSE (x'fca4' IN ()) END))) GROUP BY rt1.c3, rt1.c5, rt0.c1, rt1.c2, rt0.c2, rt0.c0, rt1.c6, rt1.c1 UNION SELECT rt1.c3, rt1.c5, rt0.c1, rt1.c2, rt0.c2, rt0.c0, rt1.c6, rt1.c1 FROM rt0 FULL OUTER JOIN rt1 ON TOTAL_CHANGES() WHERE (((CASE (- (rt1.c2))  WHEN CAST(rt1.c3 AS TEXT) THEN ((((rt1.c2)OR(rt1.c0)))OR(rt0.c1)) ELSE (x'fca4' IN ()) END) ISNULL)) GROUP BY rt1.c3, rt1.c5, rt0.c1, rt1.c2, rt0.c2, rt0.c0, rt1.c6, rt1.c1;
SELECT rt1.c3, rt1.c5, rt0.c1, rt1.c2, rt0.c2, rt0.c0, rt1.c6, rt1.c1 FROM rt0 FULL OUTER JOIN rt1 ON TOTAL_CHANGES() GROUP BY rt1.c3, rt1.c5, rt0.c1, rt1.c2, rt0.c2, rt0.c0, rt1.c6, rt1.c1;
SELECT ALL rt1.c0, rt1.c1, rt1.c2, t0.c0, rt1.c6, rt1.c4, t0.c1, rt1.c3, t0.c64, rt0.c1, rt0.c0 FROM rt1 NOT INDEXED, t0, rt0 GROUP BY rt1.c0, rt1.c1, rt1.c2, t0.c0, rt1.c6, rt1.c4, t0.c1, rt1.c3, t0.c64, rt0.c1, rt0.c0;
SELECT rt1.c0, rt1.c1, rt1.c2, t0.c0, rt1.c6, rt1.c4, t0.c1, rt1.c3, t0.c64, rt0.c1, rt0.c0 FROM rt1, t0, rt0 GROUP BY rt1.c0, rt1.c1, rt1.c2, t0.c0, rt1.c6, rt1.c4, t0.c1, rt1.c3, t0.c64, rt0.c1, rt0.c0 HAVING MAX(TOTAL(COUNT(*))) UNION ALL SELECT rt1.c0, rt1.c1, rt1.c2, t0.c0, rt1.c6, rt1.c4, t0.c1, rt1.c3, t0.c64, rt0.c1, rt0.c0 FROM rt1, t0, rt0 GROUP BY rt1.c0, rt1.c1, rt1.c2, t0.c0, rt1.c6, rt1.c4, t0.c1, rt1.c3, t0.c64, rt0.c1, rt0.c0 HAVING (NOT (MAX(TOTAL(COUNT(*))))) UNION ALL SELECT ALL rt1.c0, rt1.c1, rt1.c2, t0.c0, rt1.c6, rt1.c4, t0.c1, rt1.c3, t0.c64, rt0.c1, rt0.c0 FROM rt1, t0, rt0 GROUP BY rt1.c0, rt1.c1, rt1.c2, t0.c0, rt1.c6, rt1.c4, t0.c1, rt1.c3, t0.c64, rt0.c1, rt0.c0 HAVING ((MAX(TOTAL(COUNT(*)))) ISNULL);
SELECT * FROM rt1, t0 NOT INDEXED;
SELECT * FROM rt1, t0 WHERE ((- (t0.c1 COLLATE BINARY))) UNION ALL SELECT * FROM rt1, t0 WHERE ((NOT ((- (t0.c1 COLLATE BINARY))))) UNION ALL SELECT * FROM rt1, t0 NOT INDEXED WHERE ((((- (t0.c1 COLLATE BINARY))) ISNULL));
SELECT * FROM rt1, t0 NOT INDEXED;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (((((rt1.c2) IS TRUE))IS((rt1.c2 IN ())))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (((((rt1.c2) IS TRUE))IS((rt1.c2 IN ())))))) UNION SELECT DISTINCT * FROM rt1 WHERE (((((((rt1.c2) IS TRUE))IS((rt1.c2 IN ())))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (CAST(CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END AS INTEGER)) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (CAST(CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END AS INTEGER)))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (((CAST(CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END AS INTEGER)) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c1 FROM rt1 FULL OUTER JOIN rt0 ON NULL GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt1 FULL OUTER JOIN rt0 ON NULL GROUP BY rt0.c1 HAVING MIN(CAST(GROUP_CONCAT(rt1.c3) AS INTEGER)) UNION ALL SELECT ALL rt0.c1 FROM rt1 FULL OUTER JOIN rt0 ON NULL GROUP BY rt0.c1 HAVING (NOT (MIN(CAST(GROUP_CONCAT(rt1.c3) AS INTEGER)))) UNION ALL SELECT ALL rt0.c1 FROM rt1 FULL OUTER JOIN rt0 ON NULL GROUP BY rt0.c1 HAVING ((MIN(CAST(GROUP_CONCAT(rt1.c3) AS INTEGER))) ISNULL);
SELECT ALL rt1.c3, rt1.c1, rt1.c4 FROM rt1;
SELECT ALL rt1.c3, rt1.c1, rt1.c4 FROM rt1 WHERE (CAST(((rt1.c0)<<('')) AS TEXT)) UNION ALL SELECT ALL rt1.c3, rt1.c1, rt1.c4 FROM rt1 WHERE ((NOT (CAST(((rt1.c0)<<('')) AS TEXT)))) UNION ALL SELECT rt1.c3, rt1.c1, rt1.c4 FROM rt1 WHERE (((CAST(((rt1.c0)<<('')) AS TEXT)) ISNULL));
SELECT ALL rt1.c3, rt1.c1, rt1.c4 FROM rt1;
SELECT DISTINCT rt0.c2 FROM t0, rt0;
SELECT DISTINCT rt0.c2 FROM t0, rt0 WHERE (CASE WHEN ((rt0.c2)IS NOT(rt0.c2)) THEN (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) WHEN CASE WHEN t0.c64 THEN t0.c1 WHEN t0.c0 THEN t0.c1 WHEN rt0.c1 THEN rt0.c2 END THEN (('')IS NOT(x'')) WHEN ((((x'5e0c')OR(rt0.c1)))AND(rt0.c2)) THEN t0.c1 WHEN 0xffffffffaba3510b COLLATE BINARY THEN '-199564930' COLLATE NOCASE WHEN (((t0.c1)) NOT BETWEEN ((t0.c1)) AND ((t0.c64))) THEN (- (rt0.c2)) END) UNION SELECT DISTINCT rt0.c2 FROM t0, rt0 WHERE ((NOT (CASE WHEN ((rt0.c2)IS NOT(rt0.c2)) THEN (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) WHEN CASE WHEN t0.c64 THEN t0.c1 WHEN t0.c0 THEN t0.c1 WHEN rt0.c1 THEN rt0.c2 END THEN (('')IS NOT(x'')) WHEN ((((x'5e0c')OR(rt0.c1)))AND(rt0.c2)) THEN t0.c1 WHEN 0Xffffffffaba3510b COLLATE BINARY THEN '-199564930' COLLATE NOCASE WHEN (((t0.c1)) NOT BETWEEN ((t0.c1)) AND ((t0.c64))) THEN (- (rt0.c2)) END))) UNION SELECT DISTINCT rt0.c2 FROM t0, rt0 WHERE (((CASE WHEN ((rt0.c2)IS NOT(rt0.c2)) THEN (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) WHEN CASE WHEN t0.c64 THEN t0.c1 WHEN t0.c0 THEN t0.c1 WHEN rt0.c1 THEN rt0.c2 END THEN (('')IS NOT(x'')) WHEN ((((x'5e0c')OR(rt0.c1)))AND(rt0.c2)) THEN t0.c1 WHEN 0xffffffffaba3510b COLLATE BINARY THEN '-199564930' COLLATE NOCASE WHEN (((t0.c1)) NOT BETWEEN ((t0.c1)) AND ((t0.c64))) THEN (- (rt0.c2)) END) ISNULL));
SELECT DISTINCT rt0.c2 FROM t0, rt0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (LTRIM((((rt0.c0, rt0.c0, rt0.c2))>=(('1150773485', rt0.c1, rt0.c1))))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (LTRIM((((rt0.c0, rt0.c0, rt0.c2))>=(('1150773485', rt0.c1, rt0.c1))))))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((LTRIM((((rt0.c0, rt0.c0, rt0.c2))>=(('1150773485', rt0.c1, rt0.c1))))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING TOTAL(((MAX(AVG(rt0.c0)))<<(GROUP_CONCAT(rt0.c1)))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (TOTAL(((MAX(AVG(rt0.c0)))<<(GROUP_CONCAT(rt0.c1)))))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((TOTAL(((MAX(AVG(rt0.c0)))<<(GROUP_CONCAT(rt0.c1))))) ISNULL);
SELECT ALL rt0.c1 FROM rt0;
SELECT ALL rt0.c1 FROM rt0 WHERE (rt0.c1) UNION ALL SELECT rt0.c1 FROM rt0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT rt0.c1 FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT ALL rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CASE (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))  WHEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)) THEN ((rt0.c1) NOTNULL) WHEN (('')*(rt0.c0)) THEN ((x'233f')*(rt0.c2)) WHEN rt0.c0 THEN CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END END) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CASE (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))  WHEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)) THEN ((rt0.c1) NOTNULL) WHEN (('')*(rt0.c0)) THEN ((x'233f')*(rt0.c2)) WHEN rt0.c0 THEN CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END END))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CASE (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))  WHEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)) THEN ((rt0.c1) NOTNULL) WHEN (('')*(rt0.c0)) THEN ((x'233f')*(rt0.c2)) WHEN rt0.c0 THEN CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END END) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt1.c4, rt1.c5, rt1.c6, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c4, rt1.c5, rt1.c6, rt1.c1, rt1.c2;
SELECT rt1.c4, rt1.c5, rt1.c6, rt1.c1, rt1.c2 FROM rt1 WHERE (HEX(rt1.c2) COLLATE BINARY) GROUP BY rt1.c4, rt1.c5, rt1.c6, rt1.c1, rt1.c2 UNION SELECT ALL rt1.c4, rt1.c5, rt1.c6, rt1.c1, rt1.c2 FROM rt1 WHERE ((NOT (HEX(rt1.c2) COLLATE BINARY))) GROUP BY rt1.c4, rt1.c5, rt1.c6, rt1.c1, rt1.c2 UNION SELECT rt1.c4, rt1.c5, rt1.c6, rt1.c1, rt1.c2 FROM rt1 WHERE (((HEX(rt1.c2) COLLATE BINARY) ISNULL)) GROUP BY rt1.c4, rt1.c5, rt1.c6, rt1.c1, rt1.c2;
SELECT rt1.c4, rt1.c5, rt1.c6, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c4, rt1.c5, rt1.c6, rt1.c1, rt1.c2;
SELECT rt1.c6, rt1.c4, rt1.c0, rt1.c2, rt1.c5, rt1.c1 FROM rt1 GROUP BY rt1.c6, rt1.c4, rt1.c0, rt1.c2, rt1.c5, rt1.c1;
SELECT ALL rt1.c6, rt1.c4, rt1.c0, rt1.c2, rt1.c5, rt1.c1 FROM rt1 GROUP BY rt1.c6, rt1.c4, rt1.c0, rt1.c2, rt1.c5, rt1.c1 HAVING GROUP_CONCAT(((rt1.c5)IS NOT(''))) UNION ALL SELECT ALL rt1.c6, rt1.c4, rt1.c0, rt1.c2, rt1.c5, rt1.c1 FROM rt1 GROUP BY rt1.c6, rt1.c4, rt1.c0, rt1.c2, rt1.c5, rt1.c1 HAVING (NOT (GROUP_CONCAT(((rt1.c5)IS NOT(''))))) UNION ALL SELECT rt1.c6, rt1.c4, rt1.c0, rt1.c2, rt1.c5, rt1.c1 FROM rt1 GROUP BY rt1.c6, rt1.c4, rt1.c0, rt1.c2, rt1.c5, rt1.c1 HAVING ((GROUP_CONCAT(((rt1.c5)IS NOT('')))) ISNULL);
SELECT rt1.c6, rt1.c4, rt1.c0, rt1.c2, rt1.c5, rt1.c1 FROM rt1 GROUP BY rt1.c6, rt1.c4, rt1.c0, rt1.c2, rt1.c5, rt1.c1;
SELECT ALL rt1.c6, rt1.c4, rt1.c0, rt1.c2, rt1.c5, rt1.c1 FROM rt1 GROUP BY rt1.c6, rt1.c4, rt1.c0, rt1.c2, rt1.c5, rt1.c1 HAVING GROUP_CONCAT(((rt1.c5)IS NOT(''))) UNION ALL SELECT ALL rt1.c6, rt1.c4, rt1.c0, rt1.c2, rt1.c5, rt1.c1 FROM rt1 GROUP BY rt1.c6, rt1.c4, rt1.c0, rt1.c2, rt1.c5, rt1.c1 HAVING (NOT (GROUP_CONCAT(((rt1.c5)IS NOT(''))))) UNION ALL SELECT rt1.c6, rt1.c4, rt1.c0, rt1.c2, rt1.c5, rt1.c1 FROM rt1 GROUP BY rt1.c6, rt1.c4, rt1.c0, rt1.c2, rt1.c5, rt1.c1 HAVING ((GROUP_CONCAT(((rt1.c5)IS NOT('')))) ISNULL);
SELECT rt1.c6, rt1.c4, rt1.c0, rt1.c2, rt1.c5, rt1.c1 FROM rt1 GROUP BY rt1.c6, rt1.c4, rt1.c0, rt1.c2, rt1.c5, rt1.c1;
SELECT * FROM rt0, rt1;
SELECT * FROM rt0, rt1 WHERE (((((((((((((((((rt1.c4)OR(rt1.c1)))OR(rt1.c1)))OR(x'')))AND(((rt1.c5)<(rt1.c1)))))OR(((rt1.c5) BETWEEN (rt1.c1) AND (rt0.c2)))))OR(IFNULL(rt1.c5, rt1.c4))))AND((+ (rt0.c2)))))OR(rt1.c0))) UNION ALL SELECT * FROM rt0, rt1 WHERE ((NOT (((((((((((((((((rt1.c4)OR(rt1.c1)))OR(rt1.c1)))OR(x'')))AND(((rt1.c5)<(rt1.c1)))))OR(((rt1.c5) BETWEEN (rt1.c1) AND (rt0.c2)))))OR(IFNULL(rt1.c5, rt1.c4))))AND((+ (rt0.c2)))))OR(rt1.c0))))) UNION ALL SELECT * FROM rt0, rt1 WHERE (((((((((((((((((((rt1.c4)OR(rt1.c1)))OR(rt1.c1)))OR(x'')))AND(((rt1.c5)<(rt1.c1)))))OR(((rt1.c5) BETWEEN (rt1.c1) AND (rt0.c2)))))OR(IFNULL(rt1.c5, rt1.c4))))AND((+ (rt0.c2)))))OR(rt1.c0))) ISNULL));
SELECT * FROM rt0, rt1;
SELECT DISTINCT * FROM rt1, t0, rt0;
SELECT DISTINCT * FROM rt1, t0, rt0 WHERE (CASE WHEN ((t0.c64)<<(rt1.c0)) THEN (~ (t0.c64)) END) UNION SELECT DISTINCT * FROM rt1, t0, rt0 WHERE ((NOT (CASE WHEN ((t0.c64)<<(rt1.c0)) THEN (~ (t0.c64)) END))) UNION SELECT DISTINCT * FROM rt1, t0, rt0 WHERE (((CASE WHEN ((t0.c64)<<(rt1.c0)) THEN (~ (t0.c64)) END) ISNULL));
SELECT DISTINCT * FROM rt1, t0, rt0;
SELECT rt1.c1, rt0.c1, t0.c0, rt0.c0, rt1.c5, rt1.c6 FROM t0, rt1, rt0 GROUP BY rt1.c1, rt0.c1, t0.c0, rt0.c0, rt1.c5, rt1.c6;
SELECT rt1.c1, rt0.c1, t0.c0, rt0.c0, rt1.c5, rt1.c6 FROM t0, rt1, rt0 WHERE (((((rt1.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt1.c4))) IN ())) GROUP BY rt1.c1, rt0.c1, t0.c0, rt0.c0, rt1.c5, rt1.c6 UNION SELECT rt1.c1, rt0.c1, t0.c0, rt0.c0, rt1.c5, rt1.c6 FROM t0, rt1, rt0 WHERE ((NOT (((((rt1.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt1.c4))) IN ())))) GROUP BY rt1.c1, rt0.c1, t0.c0, rt0.c0, rt1.c5, rt1.c6 UNION SELECT ALL rt1.c1, rt0.c1, t0.c0, rt0.c0, rt1.c5, rt1.c6 FROM t0, rt1, rt0 WHERE (((((((rt1.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt1.c4))) IN ())) ISNULL)) GROUP BY rt1.c1, rt0.c1, t0.c0, rt0.c0, rt1.c5, rt1.c6;
SELECT rt1.c1, rt0.c1, t0.c0, rt0.c0, rt1.c5, rt1.c6 FROM t0, rt1, rt0 GROUP BY rt1.c1, rt0.c1, t0.c0, rt0.c0, rt1.c5, rt1.c6;
SELECT t0.c1, rt1.c4, rt1.c1, t0.c64 FROM t0, rt1 GROUP BY t0.c1, rt1.c4, rt1.c1, t0.c64;
SELECT t0.c1, rt1.c4, rt1.c1, t0.c64 FROM t0, rt1 GROUP BY t0.c1, rt1.c4, rt1.c1, t0.c64 HAVING MAX(GROUP_CONCAT(rt1.c0)) UNION ALL SELECT t0.c1, rt1.c4, rt1.c1, t0.c64 FROM t0, rt1 GROUP BY t0.c1, rt1.c4, rt1.c1, t0.c64 HAVING (NOT (MAX(GROUP_CONCAT(rt1.c0)))) UNION ALL SELECT ALL t0.c1, rt1.c4, rt1.c1, t0.c64 FROM t0, rt1 GROUP BY t0.c1, rt1.c4, rt1.c1, t0.c64 HAVING ((MAX(GROUP_CONCAT(rt1.c0))) ISNULL);
SELECT SUM((((((rt0.c0))>((rt0.c2)))) NOT BETWEEN (x'68fc') AND ((+ (rt0.c1))))) FROM rt0;
SELECT ALL t0.c1, rt1.c3, rt1.c2 FROM t0, rt1;
SELECT ALL t0.c1, rt1.c3, rt1.c2 FROM t0, rt1 WHERE (((rtreenode(t0.c1, rt1.c6)) IS TRUE)) UNION ALL SELECT t0.c1, rt1.c3, rt1.c2 FROM t0, rt1 WHERE ((NOT (((rtreenode(t0.c1, rt1.c6)) IS TRUE)))) UNION ALL SELECT ALL t0.c1, rt1.c3, rt1.c2 FROM t0, rt1 WHERE (((((rtreenode(t0.c1, rt1.c6)) IS TRUE)) ISNULL));
SELECT ALL t0.c1, rt1.c3, rt1.c2 FROM t0, rt1;
SELECT DISTINCT rt1.c5, rt1.c4, rt0.c0, rt1.c6, t0.c0, rt1.c1, rt0.c1, rt0.c2, t0.c1, rt1.c0, rt1.c2, t0.c64 FROM rt0, rt1, t0;
SELECT DISTINCT rt1.c5, rt1.c4, rt0.c0, rt1.c6, t0.c0, rt1.c1, rt0.c1, rt0.c2, t0.c1, rt1.c0, rt1.c2, t0.c64 FROM rt0, rt1, t0 WHERE (((((((rt1.c1))!=((rt1.c4))), '68246613', (((rt0.c2)) BETWEEN ((t0.c0)) AND ((rt1.c2)))))!=(((((rt0.c0, rt0.c2, rt1.c5)) NOT BETWEEN ((t0.c64, rt1.c5, rt1.c3)) AND ((x'fa33aa96', rt1.c4, rt0.c1))), ((rt1.c3)&(rt1.c6)), (+ (rt1.c6)))))) UNION SELECT DISTINCT rt1.c5, rt1.c4, rt0.c0, rt1.c6, t0.c0, rt1.c1, rt0.c1, rt0.c2, t0.c1, rt1.c0, rt1.c2, t0.c64 FROM rt0, rt1, t0 WHERE ((NOT (((((((rt1.c1))!=((rt1.c4))), '68246613', (((rt0.c2)) BETWEEN ((t0.c0)) AND ((rt1.c2)))))!=(((((rt0.c0, rt0.c2, rt1.c5)) NOT BETWEEN ((t0.c64, rt1.c5, rt1.c3)) AND ((x'fa33aa96', rt1.c4, rt0.c1))), ((rt1.c3)&(rt1.c6)), (+ (rt1.c6)))))))) UNION SELECT DISTINCT rt1.c5, rt1.c4, rt0.c0, rt1.c6, t0.c0, rt1.c1, rt0.c1, rt0.c2, t0.c1, rt1.c0, rt1.c2, t0.c64 FROM rt0, rt1, t0 WHERE (((((((((rt1.c1))!=((rt1.c4))), '68246613', (((rt0.c2)) BETWEEN ((t0.c0)) AND ((rt1.c2)))))<>(((((rt0.c0, rt0.c2, rt1.c5)) NOT BETWEEN ((t0.c64, rt1.c5, rt1.c3)) AND ((x'fa33aa96', rt1.c4, rt0.c1))), ((rt1.c3)&(rt1.c6)), (+ (rt1.c6)))))) ISNULL));
SELECT DISTINCT rt1.c5, rt1.c4, rt0.c0, rt1.c6, t0.c0, rt1.c1, rt0.c1, rt0.c2, t0.c1, rt1.c0, rt1.c2, t0.c64 FROM rt0, rt1, t0;
SELECT ALL rt0.c2, rt1.c3, rt1.c5, t0.c64, rt0.c1, rt0.c0, rt1.c1, rt1.c2, rt1.c4, rt1.c6, rt1.c0, t0.c0 FROM rt0, rt1, t0 GROUP BY rt0.c2, rt1.c3, rt1.c5, t0.c64, rt0.c1, rt0.c0, rt1.c1, rt1.c2, rt1.c4, rt1.c6, rt1.c0, t0.c0;
SELECT ALL rt0.c2, rt1.c3, rt1.c5, t0.c64, rt0.c1, rt0.c0, rt1.c1, rt1.c2, rt1.c4, rt1.c6, rt1.c0, t0.c0 FROM rt0, rt1, t0 WHERE (CAST(((t0.c1)||(rt1.c2)) AS TEXT)) GROUP BY rt0.c2, rt1.c3, rt1.c5, t0.c64, rt0.c1, rt0.c0, rt1.c1, rt1.c2, rt1.c4, rt1.c6, rt1.c0, t0.c0 UNION SELECT ALL rt0.c2, rt1.c3, rt1.c5, t0.c64, rt0.c1, rt0.c0, rt1.c1, rt1.c2, rt1.c4, rt1.c6, rt1.c0, t0.c0 FROM rt0, rt1, t0 WHERE ((NOT (CAST(((t0.c1)||(rt1.c2)) AS TEXT)))) GROUP BY rt0.c2, rt1.c3, rt1.c5, t0.c64, rt0.c1, rt0.c0, rt1.c1, rt1.c2, rt1.c4, rt1.c6, rt1.c0, t0.c0 UNION SELECT ALL rt0.c2, rt1.c3, rt1.c5, t0.c64, rt0.c1, rt0.c0, rt1.c1, rt1.c2, rt1.c4, rt1.c6, rt1.c0, t0.c0 FROM rt0, rt1, t0 WHERE (((CAST(((t0.c1)||(rt1.c2)) AS TEXT)) ISNULL)) GROUP BY rt0.c2, rt1.c3, rt1.c5, t0.c64, rt0.c1, rt0.c0, rt1.c1, rt1.c2, rt1.c4, rt1.c6, rt1.c0, t0.c0;
SELECT ALL rt0.c2, rt1.c3, rt1.c5, t0.c64, rt0.c1, rt0.c0, rt1.c1, rt1.c2, rt1.c4, rt1.c6, rt1.c0, t0.c0 FROM rt0, rt1, t0 GROUP BY rt0.c2, rt1.c3, rt1.c5, t0.c64, rt0.c1, rt0.c0, rt1.c1, rt1.c2, rt1.c4, rt1.c6, rt1.c0, t0.c0;
SELECT rt0.c1, t0.c1, rt0.c0, t0.c64, t0.c0, rt0.c2 FROM rt0 LEFT OUTER JOIN t0 ON (((((- (t0.c0)))OR((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))))AND(rt0.c1 COLLATE RTRIM)) GROUP BY rt0.c1, t0.c1, rt0.c0, t0.c64, t0.c0, rt0.c2;
SELECT ALL rt0.c1, t0.c1, rt0.c0, t0.c64, t0.c0, rt0.c2 FROM rt0 LEFT OUTER JOIN t0 ON (((((- (t0.c0)))OR((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))))AND(rt0.c1 COLLATE RTRIM)) GROUP BY rt0.c1, t0.c1, rt0.c0, t0.c64, t0.c0, rt0.c2 HAVING CASE WHEN MIN(t0.c1) THEN MIN(MAX(MAX(GROUP_CONCAT(MAX(rt0.c1))))) ELSE SUM(t0.c1) END UNION ALL SELECT ALL rt0.c1, t0.c1, rt0.c0, t0.c64, t0.c0, rt0.c2 FROM rt0 LEFT OUTER JOIN t0 ON (((((- (t0.c0)))OR((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))))AND(rt0.c1 COLLATE RTRIM)) GROUP BY rt0.c1, t0.c1, rt0.c0, t0.c64, t0.c0, rt0.c2 HAVING (NOT (CASE WHEN MIN(t0.c1) THEN MIN(MAX(MAX(GROUP_CONCAT(MAX(rt0.c1))))) ELSE SUM(t0.c1) END)) UNION ALL SELECT rt0.c1, t0.c1, rt0.c0, t0.c64, t0.c0, rt0.c2 FROM rt0 LEFT OUTER JOIN t0 ON (((((- (t0.c0)))OR((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))))AND(rt0.c1 COLLATE RTRIM)) GROUP BY rt0.c1, t0.c1, rt0.c0, t0.c64, t0.c0, rt0.c2 HAVING ((CASE WHEN MIN(t0.c1) THEN MIN(MAX(MAX(GROUP_CONCAT(MAX(rt0.c1))))) ELSE SUM(t0.c1) END) ISNULL);
SELECT rt1.c6, rt1.c3, rt1.c4, rt1.c1, rt1.c0, rt1.c5, rt1.c2 FROM rt1;
SELECT rt1.c6, rt1.c3, rt1.c4, rt1.c1, rt1.c0, rt1.c5, rt1.c2 FROM rt1 WHERE ((((rt1.c6)) NOT BETWEEN ((IFNULL(rt1.c0, rt1.c4))) AND ((CAST(rt1.c1 AS REAL))))) UNION ALL SELECT ALL rt1.c6, rt1.c3, rt1.c4, rt1.c1, rt1.c0, rt1.c5, rt1.c2 FROM rt1 WHERE ((NOT ((((rt1.c6)) NOT BETWEEN ((IFNULL(rt1.c0, rt1.c4))) AND ((CAST(rt1.c1 AS REAL))))))) UNION ALL SELECT rt1.c6, rt1.c3, rt1.c4, rt1.c1, rt1.c0, rt1.c5, rt1.c2 FROM rt1 WHERE ((((((rt1.c6)) NOT BETWEEN ((IFNULL(rt1.c0, rt1.c4))) AND ((CAST(rt1.c1 AS REAL))))) ISNULL));
SELECT rt1.c6, rt1.c3, rt1.c4, rt1.c1, rt1.c0, rt1.c5, rt1.c2 FROM rt1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((rt0.c1 COLLATE BINARY IN ())) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((rt0.c1 COLLATE BINARY IN ())))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c1 COLLATE BINARY IN ())) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2, rt0.c0 FROM rt1 INNER JOIN rt0 ON ((((rt1.c2)GLOB(-219248974)))=((- (rt1.c4)))) GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt1 INNER JOIN rt0 ON ((((rt1.c2)GLOB(-219248974)))=((- (rt1.c4)))) WHERE ((((rt1.c4 IN (rt1.c1))) IS TRUE)) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt1 INNER JOIN rt0 ON ((((rt1.c2)GLOB(-219248974)))=((- (rt1.c4)))) WHERE ((NOT ((((rt1.c4 IN (rt1.c1))) IS TRUE)))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt1 INNER JOIN rt0 ON ((((rt1.c2)GLOB(-219248974)))=((- (rt1.c4)))) WHERE ((((((rt1.c4 IN (rt1.c1))) IS TRUE)) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt1 INNER JOIN rt0 ON ((((rt1.c2)GLOB(-219248974)))=((- (rt1.c4)))) GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((SUM(rt0.c2)) BETWEEN (SUM(SUM(rt0.c0))) AND (CAST(rt0.c0 AS NUMERIC))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (((SUM(rt0.c2)) BETWEEN (SUM(SUM(rt0.c0))) AND (CAST(rt0.c0 AS NUMERIC))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((((SUM(rt0.c2)) BETWEEN (SUM(SUM(rt0.c0))) AND (CAST(rt0.c0 AS NUMERIC)))) ISNULL);
SELECT rt1.c4, rt1.c5, rt1.c3, rt1.c1, rt1.c0, t0.c1, t0.c64, rt1.c2, t0.c0 FROM rt1, t0;
SELECT rt1.c4, rt1.c5, rt1.c3, rt1.c1, rt1.c0, t0.c1, t0.c64, rt1.c2, t0.c0 FROM rt1, t0 WHERE (((((t0.c0) NOT NULL))>(SQLITE_VERSION()))) UNION ALL SELECT ALL rt1.c4, rt1.c5, rt1.c3, rt1.c1, rt1.c0, t0.c1, t0.c64, rt1.c2, t0.c0 FROM rt1, t0 WHERE ((NOT (((((t0.c0) NOT NULL))>(SQLITE_VERSION()))))) UNION ALL SELECT ALL rt1.c4, rt1.c5, rt1.c3, rt1.c1, rt1.c0, t0.c1, t0.c64, rt1.c2, t0.c0 FROM rt1, t0 WHERE (((((((t0.c0) NOT NULL))>(SQLITE_VERSION()))) ISNULL));
SELECT rt1.c4, rt1.c5, rt1.c3, rt1.c1, rt1.c0, t0.c1, t0.c64, rt1.c2, t0.c0 FROM rt1, t0;
SELECT DISTINCT t0.c64, rt1.c6, rt1.c1, rt1.c2, t0.c1 FROM rt1, t0;
SELECT DISTINCT t0.c64, rt1.c6, rt1.c1, rt1.c2, t0.c1 FROM rt1, t0 WHERE ((NOT (rt1.c3)) COLLATE RTRIM) UNION SELECT DISTINCT t0.c64, rt1.c6, rt1.c1, rt1.c2, t0.c1 FROM rt1, t0 WHERE ((NOT ((NOT (rt1.c3)) COLLATE RTRIM))) UNION SELECT DISTINCT t0.c64, rt1.c6, rt1.c1, rt1.c2, t0.c1 FROM rt1, t0 WHERE ((((NOT (rt1.c3)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT t0.c64, rt1.c6, rt1.c1, rt1.c2, t0.c1 FROM rt1, t0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 WHERE (((((((-2115657986)AND(rt0.c2)))OR(rt0.c0)))>=(((rt0.c0) NOT NULL)))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((((((-2115657986)AND(rt0.c2)))OR(rt0.c0)))>=(((rt0.c0) NOT NULL)))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (((((((((-2115657986)AND(rt0.c2)))OR(rt0.c0)))>=(((rt0.c0) NOT NULL)))) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT t0.c1, rt0.c2, rt1.c0, rt1.c5, rt1.c6, rt1.c2, rt0.c0, rt0.c1, t0.c0, rt1.c4, t0.c64, rt1.c1 FROM rt0, rt1, t0 GROUP BY t0.c1, rt0.c2, rt1.c0, rt1.c5, rt1.c6, rt1.c2, rt0.c0, rt0.c1, t0.c0, rt1.c4, t0.c64, rt1.c1;
SELECT ALL t0.c1, rt0.c2, rt1.c0, rt1.c5, rt1.c6, rt1.c2, rt0.c0, rt0.c1, t0.c0, rt1.c4, t0.c64, rt1.c1 FROM rt0, rt1, t0 GROUP BY t0.c1, rt0.c2, rt1.c0, rt1.c5, rt1.c6, rt1.c2, rt0.c0, rt0.c1, t0.c0, rt1.c4, t0.c64, rt1.c1 HAVING 0.6967068271221769 UNION ALL SELECT t0.c1, rt0.c2, rt1.c0, rt1.c5, rt1.c6, rt1.c2, rt0.c0, rt0.c1, t0.c0, rt1.c4, t0.c64, rt1.c1 FROM rt0, rt1, t0 GROUP BY t0.c1, rt0.c2, rt1.c0, rt1.c5, rt1.c6, rt1.c2, rt0.c0, rt0.c1, t0.c0, rt1.c4, t0.c64, rt1.c1 HAVING (NOT (0.6967068271221769)) UNION ALL SELECT t0.c1, rt0.c2, rt1.c0, rt1.c5, rt1.c6, rt1.c2, rt0.c0, rt0.c1, t0.c0, rt1.c4, t0.c64, rt1.c1 FROM rt0, rt1, t0 GROUP BY t0.c1, rt0.c2, rt1.c0, rt1.c5, rt1.c6, rt1.c2, rt0.c0, rt0.c1, t0.c0, rt1.c4, t0.c64, rt1.c1 HAVING ((0.6967068271221769) ISNULL);
SELECT t0.c1, rt0.c2, rt1.c0, rt1.c5, rt1.c6, rt1.c2, rt0.c0, rt0.c1, t0.c0, rt1.c4, t0.c64, rt1.c1 FROM rt0, rt1, t0 GROUP BY t0.c1, rt0.c2, rt1.c0, rt1.c5, rt1.c6, rt1.c2, rt0.c0, rt0.c1, t0.c0, rt1.c4, t0.c64, rt1.c1;
SELECT ALL t0.c1, rt0.c2, rt1.c0, rt1.c5, rt1.c6, rt1.c2, rt0.c0, rt0.c1, t0.c0, rt1.c4, t0.c64, rt1.c1 FROM rt0, rt1, t0 GROUP BY t0.c1, rt0.c2, rt1.c0, rt1.c5, rt1.c6, rt1.c2, rt0.c0, rt0.c1, t0.c0, rt1.c4, t0.c64, rt1.c1 HAVING 0.6967068271221769 UNION ALL SELECT t0.c1, rt0.c2, rt1.c0, rt1.c5, rt1.c6, rt1.c2, rt0.c0, rt0.c1, t0.c0, rt1.c4, t0.c64, rt1.c1 FROM rt0, rt1, t0 GROUP BY t0.c1, rt0.c2, rt1.c0, rt1.c5, rt1.c6, rt1.c2, rt0.c0, rt0.c1, t0.c0, rt1.c4, t0.c64, rt1.c1 HAVING (NOT (0.6967068271221769)) UNION ALL SELECT t0.c1, rt0.c2, rt1.c0, rt1.c5, rt1.c6, rt1.c2, rt0.c0, rt0.c1, t0.c0, rt1.c4, t0.c64, rt1.c1 FROM rt0, rt1, t0 GROUP BY t0.c1, rt0.c2, rt1.c0, rt1.c5, rt1.c6, rt1.c2, rt0.c0, rt0.c1, t0.c0, rt1.c4, t0.c64, rt1.c1 HAVING ((0.6967068271221769) ISNULL);
SELECT t0.c1, rt0.c2, rt1.c0, rt1.c5, rt1.c6, rt1.c2, rt0.c0, rt0.c1, t0.c0, rt1.c4, t0.c64, rt1.c1 FROM rt0, rt1, t0 GROUP BY t0.c1, rt0.c2, rt1.c0, rt1.c5, rt1.c6, rt1.c2, rt0.c0, rt0.c1, t0.c0, rt1.c4, t0.c64, rt1.c1;
SELECT rt1.c3, t0.c1, rt1.c5, rt1.c1, t0.c0, t0.c64 FROM t0, rt1;
SELECT rt1.c3, t0.c1, rt1.c5, rt1.c1, t0.c0, t0.c64 FROM t0, rt1 WHERE (((((((rt1.c1)!=('-1451998970')))OR((((rt1.c4))<>((rt1.c1))))))OR('-1584775738'))) UNION ALL SELECT ALL rt1.c3, t0.c1, rt1.c5, rt1.c1, t0.c0, t0.c64 FROM t0, rt1 WHERE ((NOT (((((((rt1.c1)<>('-1451998970')))OR((((rt1.c4))<>((rt1.c1))))))OR('-1584775738'))))) UNION ALL SELECT rt1.c3, t0.c1, rt1.c5, rt1.c1, t0.c0, t0.c64 FROM t0, rt1 WHERE (((((((((rt1.c1)!=('-1451998970')))OR((((rt1.c4))<>((rt1.c1))))))OR('-1584775738'))) ISNULL));
SELECT rt1.c3, t0.c1, rt1.c5, rt1.c1, t0.c0, t0.c64 FROM t0, rt1;
SELECT DISTINCT rt1.c2, rt1.c0, rt1.c6, rt1.c4, t0.c1, t0.c0, rt1.c3 FROM t0, rt0, rt1;
SELECT DISTINCT rt1.c2, rt1.c0, rt1.c6, rt1.c4, t0.c1, t0.c0, rt1.c3 FROM t0, rt0, rt1 WHERE ((((rt0.c0)) NOT BETWEEN (((('1715798436') NOT BETWEEN (rt1.c6) AND (rt1.c2)))) AND ((LTRIM(rt1.c3))))) UNION SELECT DISTINCT rt1.c2, rt1.c0, rt1.c6, rt1.c4, t0.c1, t0.c0, rt1.c3 FROM t0, rt0, rt1 WHERE ((NOT ((((rt0.c0)) NOT BETWEEN (((('1715798436') NOT BETWEEN (rt1.c6) AND (rt1.c2)))) AND ((LTRIM(rt1.c3))))))) UNION SELECT DISTINCT rt1.c2, rt1.c0, rt1.c6, rt1.c4, t0.c1, t0.c0, rt1.c3 FROM t0, rt0, rt1 WHERE ((((((rt0.c0)) NOT BETWEEN (((('1715798436') NOT BETWEEN (rt1.c6) AND (rt1.c2)))) AND ((LTRIM(rt1.c3))))) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c0, rt1.c6, rt1.c4, t0.c1, t0.c0, rt1.c3 FROM t0, rt0, rt1;
SELECT rt1.c2, rt1.c1, t0.c64, rt1.c3, rt1.c5 FROM t0 NATURAL JOIN rt1 GROUP BY rt1.c2, rt1.c1, t0.c64, rt1.c3, rt1.c5;
SELECT rt1.c2, rt1.c1, t0.c64, rt1.c3, rt1.c5 FROM t0 NATURAL JOIN rt1 WHERE (t0.c1) GROUP BY rt1.c2, rt1.c1, t0.c64, rt1.c3, rt1.c5 UNION SELECT rt1.c2, rt1.c1, t0.c64, rt1.c3, rt1.c5 FROM t0 NATURAL JOIN rt1 WHERE ((NOT (t0.c1))) GROUP BY rt1.c2, rt1.c1, t0.c64, rt1.c3, rt1.c5 UNION SELECT rt1.c2, rt1.c1, t0.c64, rt1.c3, rt1.c5 FROM t0 NATURAL JOIN rt1 WHERE (((t0.c1) ISNULL)) GROUP BY rt1.c2, rt1.c1, t0.c64, rt1.c3, rt1.c5;
SELECT rt1.c2, rt1.c1, t0.c64, rt1.c3, rt1.c5 FROM t0 NATURAL JOIN rt1 GROUP BY rt1.c2, rt1.c1, t0.c64, rt1.c3, rt1.c5;
SELECT ALL t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1;
SELECT ALL t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1 HAVING SUM(TOTAL(t0.c0)) UNION ALL SELECT t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1 HAVING (NOT (SUM(TOTAL(t0.c0)))) UNION ALL SELECT t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1 HAVING ((SUM(TOTAL(t0.c0))) ISNULL);
SELECT * FROM rt0, rt1;
SELECT * FROM rt0, rt1 WHERE (rt1.c6) UNION ALL SELECT ALL * FROM rt0, rt1 WHERE ((NOT (rt1.c6))) UNION ALL SELECT * FROM rt0, rt1 WHERE (((rt1.c6) ISNULL));
SELECT * FROM rt0, rt1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((+ ((~ (rt0.c2))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((+ ((~ (rt0.c2))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((+ ((~ (rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt1.c5, rt1.c0, rt0.c2, rt1.c3, t0.c1, t0.c0, rt0.c0, rt0.c1, t0.c64, rt1.c1, rt1.c6, rt1.c2, rt1.c4 FROM rt1, rt0, t0 GROUP BY rt1.c5, rt1.c0, rt0.c2, rt1.c3, t0.c1, t0.c0, rt0.c0, rt0.c1, t0.c64, rt1.c1, rt1.c6, rt1.c2, rt1.c4;
SELECT rt1.c5, rt1.c0, rt0.c2, rt1.c3, t0.c1, t0.c0, rt0.c0, rt0.c1, t0.c64, rt1.c1, rt1.c6, rt1.c2, rt1.c4 FROM rt1, rt0, t0 WHERE (CAST((rt1.c1 IN ()) AS NUMERIC)) GROUP BY rt1.c5, rt1.c0, rt0.c2, rt1.c3, t0.c1, t0.c0, rt0.c0, rt0.c1, t0.c64, rt1.c1, rt1.c6, rt1.c2, rt1.c4 UNION SELECT ALL rt1.c5, rt1.c0, rt0.c2, rt1.c3, t0.c1, t0.c0, rt0.c0, rt0.c1, t0.c64, rt1.c1, rt1.c6, rt1.c2, rt1.c4 FROM rt1, rt0, t0 WHERE ((NOT (CAST((rt1.c1 IN ()) AS NUMERIC)))) GROUP BY rt1.c5, rt1.c0, rt0.c2, rt1.c3, t0.c1, t0.c0, rt0.c0, rt0.c1, t0.c64, rt1.c1, rt1.c6, rt1.c2, rt1.c4 UNION SELECT rt1.c5, rt1.c0, rt0.c2, rt1.c3, t0.c1, t0.c0, rt0.c0, rt0.c1, t0.c64, rt1.c1, rt1.c6, rt1.c2, rt1.c4 FROM rt1, rt0, t0 WHERE (((CAST((rt1.c1 IN ()) AS NUMERIC)) ISNULL)) GROUP BY rt1.c5, rt1.c0, rt0.c2, rt1.c3, t0.c1, t0.c0, rt0.c0, rt0.c1, t0.c64, rt1.c1, rt1.c6, rt1.c2, rt1.c4;
SELECT ALL rt1.c5, rt1.c0, rt0.c2, rt1.c3, t0.c1, t0.c0, rt0.c0, rt0.c1, t0.c64, rt1.c1, rt1.c6, rt1.c2, rt1.c4 FROM rt1, rt0, t0 GROUP BY rt1.c5, rt1.c0, rt0.c2, rt1.c3, t0.c1, t0.c0, rt0.c0, rt0.c1, t0.c64, rt1.c1, rt1.c6, rt1.c2, rt1.c4;
SELECT t0.c64, rt0.c2, rt1.c6, rt1.c1, rt1.c3, rt1.c0 FROM rt0 RIGHT OUTER JOIN t0 ON ((rt1.c4) NOT BETWEEN (CAST(rt1.c4 AS TEXT)) AND ((- (t0.c1)))) RIGHT OUTER JOIN rt1 ON CASE WHEN (rt1.c4 IN (rt1.c1, t0.c1)) THEN rt1.c4 WHEN (rt1.c0 IN ()) THEN rt0.c0 WHEN CASE WHEN t0.c64 THEN t0.c1 ELSE rt0.c2 END THEN 0.6700630606946467 END GROUP BY t0.c64, rt0.c2, rt1.c6, rt1.c1, rt1.c3, rt1.c0;
SELECT ALL rt1.c3, rt1.c5, rt1.c1, rt1.c4, rt1.c0, rt1.c6 FROM rt1;
SELECT ALL rt1.c3, rt1.c5, rt1.c1, rt1.c4, rt1.c0, rt1.c6 FROM rt1 WHERE (CAST(rt1.c0 COLLATE BINARY AS BLOB)) UNION ALL SELECT ALL rt1.c3, rt1.c5, rt1.c1, rt1.c4, rt1.c0, rt1.c6 FROM rt1 WHERE ((NOT (CAST(rt1.c0 COLLATE BINARY AS BLOB)))) UNION ALL SELECT ALL rt1.c3, rt1.c5, rt1.c1, rt1.c4, rt1.c0, rt1.c6 FROM rt1 WHERE (((CAST(rt1.c0 COLLATE BINARY AS BLOB)) ISNULL));
SELECT ALL rt1.c3, rt1.c5, rt1.c1, rt1.c4, rt1.c0, rt1.c6 FROM rt1;
SELECT DISTINCT rt0.c0, t0.c64, rt0.c1 FROM rt0, t0;
SELECT DISTINCT rt0.c0, t0.c64, rt0.c1 FROM rt0, t0 WHERE (((((CAST(t0.c1 AS INTEGER))OR(CAST(rt0.c0 AS NUMERIC))))AND(t0.c0))) UNION SELECT DISTINCT rt0.c0, t0.c64, rt0.c1 FROM rt0, t0 WHERE ((NOT (((((CAST(t0.c1 AS INTEGER))OR(CAST(rt0.c0 AS NUMERIC))))AND(t0.c0))))) UNION SELECT DISTINCT rt0.c0, t0.c64, rt0.c1 FROM rt0, t0 WHERE (((((((CAST(t0.c1 AS INTEGER))OR(CAST(rt0.c0 AS NUMERIC))))AND(t0.c0))) ISNULL));
SELECT DISTINCT rt0.c0, t0.c64, rt0.c1 FROM rt0, t0;
SELECT ALL rt1.c0, rt1.c1 FROM rt1, rt0 GROUP BY rt1.c0, rt1.c1;
SELECT rt1.c0, rt1.c1 FROM rt1, rt0 WHERE ((((rt1.c5)) BETWEEN ((((rt1.c5) ISNULL))) AND ((((0.18484446631545204)=(x'')))))) GROUP BY rt1.c0, rt1.c1 UNION SELECT ALL rt1.c0, rt1.c1 FROM rt1, rt0 WHERE ((NOT ((((rt1.c5)) BETWEEN ((((rt1.c5) ISNULL))) AND ((((0.18484446631545204)=(x'')))))))) GROUP BY rt1.c0, rt1.c1 UNION SELECT ALL rt1.c0, rt1.c1 FROM rt1, rt0 WHERE ((((((rt1.c5)) BETWEEN ((((rt1.c5) ISNULL))) AND ((((0.18484446631545204)=(x'')))))) ISNULL)) GROUP BY rt1.c0, rt1.c1;
SELECT ALL rt1.c0, rt1.c1 FROM rt1, rt0 GROUP BY rt1.c0, rt1.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0, t0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0, t0 GROUP BY rt0.c2, rt0.c1 HAVING ((COUNT(*)) NOT BETWEEN (TOTAL(t0.c0)) AND (TYPEOF(NULL))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0, t0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (((COUNT(*)) NOT BETWEEN (TOTAL(t0.c0)) AND (TYPEOF(NULL))))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0, t0 GROUP BY rt0.c2, rt0.c1 HAVING ((((COUNT(*)) NOT BETWEEN (TOTAL(t0.c0)) AND (TYPEOF(NULL)))) ISNULL);
SELECT ALL rt0.c2, rt0.c1 FROM rt0, t0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0, t0 GROUP BY rt0.c2, rt0.c1 HAVING ((COUNT(*)) NOT BETWEEN (TOTAL(t0.c0)) AND (TYPEOF(NULL))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0, t0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (((COUNT(*)) NOT BETWEEN (TOTAL(t0.c0)) AND (TYPEOF(NULL))))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0, t0 GROUP BY rt0.c2, rt0.c1 HAVING ((((COUNT(*)) NOT BETWEEN (TOTAL(t0.c0)) AND (TYPEOF(NULL)))) ISNULL);
SELECT ALL rt0.c2, rt0.c1 FROM rt0, t0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL * FROM t0;
SELECT ALL * FROM t0 WHERE (((t0.c0)<>(((t0.c1)-(''))))) UNION ALL SELECT * FROM t0 WHERE ((NOT (((t0.c0)!=(((t0.c1)-(''))))))) UNION ALL SELECT * FROM t0 WHERE (((((t0.c0)<>(((t0.c1)-(''))))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM rt1 INNER JOIN rt0 ON (+ (LOWER(NULL))) RIGHT OUTER JOIN t0 ON t0.c0;
SELECT DISTINCT * FROM rt1 INNER JOIN rt0 ON (+ (LOWER(NULL))) RIGHT OUTER JOIN t0 ON t0.c0 WHERE ((((rt0.c1 IN ()))LIKE(((t0.c1)AND(rt1.c0))))) UNION SELECT DISTINCT * FROM rt1 INNER JOIN rt0 ON (+ (LOWER(NULL))) RIGHT OUTER JOIN t0 ON t0.c0 WHERE ((NOT ((((rt0.c1 IN ()))LIKE(((t0.c1)AND(rt1.c0))))))) UNION SELECT DISTINCT * FROM rt1 INNER JOIN rt0 ON (+ (LOWER(NULL))) RIGHT OUTER JOIN t0 ON t0.c0 WHERE ((((((rt0.c1 IN ()))LIKE(((t0.c1)AND(rt1.c0))))) ISNULL));
SELECT DISTINCT * FROM rt1 INNER JOIN rt0 ON (+ (LOWER(NULL))) RIGHT OUTER JOIN t0 ON t0.c0;
SELECT ALL rt1.c0, t0.c1, rt1.c2, rt1.c4, t0.c0, t0.c64, rt1.c3, rt1.c1 FROM rt1, t0 GROUP BY rt1.c0, t0.c1, rt1.c2, rt1.c4, t0.c0, t0.c64, rt1.c3, rt1.c1;
SELECT rt1.c0, t0.c1, rt1.c2, rt1.c4, t0.c0, t0.c64, rt1.c3, rt1.c1 FROM rt1, t0 WHERE (((rt1.c3) ISNULL) COLLATE BINARY) GROUP BY rt1.c0, t0.c1, rt1.c2, rt1.c4, t0.c0, t0.c64, rt1.c3, rt1.c1 UNION SELECT ALL rt1.c0, t0.c1, rt1.c2, rt1.c4, t0.c0, t0.c64, rt1.c3, rt1.c1 FROM rt1, t0 WHERE ((NOT (((rt1.c3) ISNULL) COLLATE BINARY))) GROUP BY rt1.c0, t0.c1, rt1.c2, rt1.c4, t0.c0, t0.c64, rt1.c3, rt1.c1 UNION SELECT rt1.c0, t0.c1, rt1.c2, rt1.c4, t0.c0, t0.c64, rt1.c3, rt1.c1 FROM rt1, t0 WHERE (((((rt1.c3) ISNULL) COLLATE BINARY) ISNULL)) GROUP BY rt1.c0, t0.c1, rt1.c2, rt1.c4, t0.c0, t0.c64, rt1.c3, rt1.c1;
SELECT ALL rt1.c0, t0.c1, rt1.c2, rt1.c4, t0.c0, t0.c64, rt1.c3, rt1.c1 FROM rt1, t0 GROUP BY rt1.c0, t0.c1, rt1.c2, rt1.c4, t0.c0, t0.c64, rt1.c3, rt1.c1;
SELECT ALL t0.c64, t0.c1, rt1.c4, rt1.c0 FROM rt1 LEFT OUTER JOIN rt0 ON ((NULL) ISNULL) LEFT OUTER JOIN t0 ON UPPER(DISTINCT (rt1.c4 IN ())) GROUP BY t0.c64, t0.c1, rt1.c4, rt1.c0;
SELECT t0.c64, t0.c1, rt1.c4, rt1.c0 FROM rt1 LEFT OUTER JOIN rt0 ON ((NULL) ISNULL) LEFT OUTER JOIN t0 ON UPPER(DISTINCT (rt1.c4 IN ())) GROUP BY t0.c64, t0.c1, rt1.c4, rt1.c0 HAVING (((- (rt1.c3)))<<((~ (MIN(AVG(AVG(SUM(rt1.c5)))))))) UNION ALL SELECT t0.c64, t0.c1, rt1.c4, rt1.c0 FROM rt1 LEFT OUTER JOIN rt0 ON ((NULL) ISNULL) LEFT OUTER JOIN t0 ON UPPER(DISTINCT (rt1.c4 IN ())) GROUP BY t0.c64, t0.c1, rt1.c4, rt1.c0 HAVING (NOT ((((- (rt1.c3)))<<((~ (MIN(AVG(AVG(SUM(rt1.c5)))))))))) UNION ALL SELECT ALL t0.c64, t0.c1, rt1.c4, rt1.c0 FROM rt1 LEFT OUTER JOIN rt0 ON ((NULL) ISNULL) LEFT OUTER JOIN t0 ON UPPER(DISTINCT (rt1.c4 IN ())) GROUP BY t0.c64, t0.c1, rt1.c4, rt1.c0 HAVING (((((- (rt1.c3)))<<((~ (MIN(AVG(AVG(SUM(rt1.c5))))))))) ISNULL);
SELECT MIN((((~ (rt1.c6))) NOTNULL)) FROM rt0, rt1 ORDER BY (- (CAST(rt1.c1 AS REAL)));
SELECT rt0.c2, t0.c0, t0.c1 FROM rt0, t0;
SELECT rt0.c2, t0.c0, t0.c1 FROM rt0, t0 WHERE (((((((((((((t0.c64)AND(((rt0.c2)<<(t0.c64)))))OR(((((t0.c0)OR(t0.c64)))AND(rt0.c0)))))OR(((((rt0.c1)AND(rt0.c2)))OR(rt0.c1)))))OR((((t0.c64)) NOT BETWEEN ((t0.c64)) AND ((t0.c0))))))AND(t0.c0 COLLATE RTRIM)))AND(((rt0.c2)<(t0.c64))))) UNION ALL SELECT ALL rt0.c2, t0.c0, t0.c1 FROM rt0, t0 WHERE ((NOT (((((((((((((t0.c64)AND(((rt0.c2)<<(t0.c64)))))OR(((((t0.c0)OR(t0.c64)))AND(rt0.c0)))))OR(((((rt0.c1)AND(rt0.c2)))OR(rt0.c1)))))OR((((t0.c64)) NOT BETWEEN ((t0.c64)) AND ((t0.c0))))))AND(t0.c0 COLLATE RTRIM)))AND(((rt0.c2)<(t0.c64))))))) UNION ALL SELECT rt0.c2, t0.c0, t0.c1 FROM rt0, t0 WHERE (((((((((((((((t0.c64)AND(((rt0.c2)<<(t0.c64)))))OR(((((t0.c0)OR(t0.c64)))AND(rt0.c0)))))OR(((((rt0.c1)AND(rt0.c2)))OR(rt0.c1)))))OR((((t0.c64)) NOT BETWEEN ((t0.c64)) AND ((t0.c0))))))AND(t0.c0 COLLATE RTRIM)))AND(((rt0.c2)<(t0.c64))))) ISNULL));
SELECT rt0.c2, t0.c0, t0.c1 FROM rt0, t0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((0.22353822186896843 COLLATE RTRIM)<<(rt0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((0.22353822186896843 COLLATE RTRIM)<<(rt0.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((0.22353822186896843 COLLATE RTRIM)<<(rt0.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (t0.c1) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (t0.c1))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((t0.c1) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING CAST(rt0.c2 AS TEXT) COLLATE RTRIM UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (CAST(rt0.c2 AS TEXT) COLLATE RTRIM)) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((CAST(rt0.c2 AS TEXT) COLLATE RTRIM) ISNULL);
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING CAST(rt0.c2 AS TEXT) COLLATE RTRIM UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (CAST(rt0.c2 AS TEXT) COLLATE RTRIM)) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((CAST(rt0.c2 AS TEXT) COLLATE RTRIM) ISNULL);
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT * FROM rt1, rt0;
SELECT * FROM rt1, rt0 WHERE (((IFNULL(DISTINCT x'', x''))+(((rt0.c1)OR(rt1.c2))))) UNION ALL SELECT * FROM rt1, rt0 WHERE ((NOT (((IFNULL(DISTINCT x'', x''))+(((rt0.c1)OR(rt1.c2))))))) UNION ALL SELECT ALL * FROM rt1, rt0 WHERE (((((IFNULL(DISTINCT x'', x''))+(((rt0.c1)OR(rt1.c2))))) ISNULL));
SELECT * FROM rt1, rt0;
SELECT DISTINCT rt0.c0, rt1.c6, rt1.c4, rt1.c3, t0.c64, rt1.c5, t0.c1, rt0.c2, rt1.c0, t0.c0, rt1.c1, rt0.c1 FROM rt0, t0, rt1;
SELECT DISTINCT rt0.c0, rt1.c6, rt1.c4, rt1.c3, t0.c64, rt1.c5, t0.c1, rt0.c2, rt1.c0, t0.c0, rt1.c1, rt0.c1 FROM rt0, t0, rt1 WHERE (CAST(x'' AS INTEGER)) UNION SELECT DISTINCT rt0.c0, rt1.c6, rt1.c4, rt1.c3, t0.c64, rt1.c5, t0.c1, rt0.c2, rt1.c0, t0.c0, rt1.c1, rt0.c1 FROM rt0, t0, rt1 WHERE ((NOT (CAST(x'' AS INTEGER)))) UNION SELECT DISTINCT rt0.c0, rt1.c6, rt1.c4, rt1.c3, t0.c64, rt1.c5, t0.c1, rt0.c2, rt1.c0, t0.c0, rt1.c1, rt0.c1 FROM rt0, t0, rt1 WHERE (((CAST(x'' AS INTEGER)) ISNULL));
SELECT DISTINCT rt0.c0, rt1.c6, rt1.c4, rt1.c3, t0.c64, rt1.c5, t0.c1, rt0.c2, rt1.c0, t0.c0, rt1.c1, rt0.c1 FROM rt0, t0, rt1;
SELECT ALL t0.c64, t0.c0, t0.c1 FROM t0 GROUP BY t0.c64, t0.c0, t0.c1;
SELECT ALL t0.c64, t0.c0, t0.c1 FROM t0 WHERE ((((((t0.c64)) BETWEEN ((t0.c0)) AND ((t0.c0))))/(NULL))) GROUP BY t0.c64, t0.c0, t0.c1 UNION SELECT t0.c64, t0.c0, t0.c1 FROM t0 WHERE ((NOT ((((((t0.c64)) BETWEEN ((t0.c0)) AND ((t0.c0))))/(NULL))))) GROUP BY t0.c64, t0.c0, t0.c1 UNION SELECT ALL t0.c64, t0.c0, t0.c1 FROM t0 WHERE ((((((((t0.c64)) BETWEEN ((t0.c0)) AND ((t0.c0))))/(NULL))) ISNULL)) GROUP BY t0.c64, t0.c0, t0.c1;
SELECT ALL t0.c64, t0.c0, t0.c1 FROM t0 GROUP BY t0.c64, t0.c0, t0.c1;
SELECT rt1.c6, rt1.c1, rt1.c5, rt1.c3, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c6, rt1.c1, rt1.c5, rt1.c3, rt1.c2, rt1.c0;
SELECT ALL rt1.c6, rt1.c1, rt1.c5, rt1.c3, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c6, rt1.c1, rt1.c5, rt1.c3, rt1.c2, rt1.c0 HAVING MIN(GROUP_CONCAT(rt1.c5)) COLLATE RTRIM UNION ALL SELECT rt1.c6, rt1.c1, rt1.c5, rt1.c3, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c6, rt1.c1, rt1.c5, rt1.c3, rt1.c2, rt1.c0 HAVING (NOT (MIN(GROUP_CONCAT(rt1.c5)) COLLATE RTRIM)) UNION ALL SELECT rt1.c6, rt1.c1, rt1.c5, rt1.c3, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c6, rt1.c1, rt1.c5, rt1.c3, rt1.c2, rt1.c0 HAVING ((MIN(GROUP_CONCAT(rt1.c5)) COLLATE RTRIM) ISNULL);
SELECT rt1.c1, rt1.c3, rt1.c0, rt1.c5 FROM rt1;
SELECT rt1.c1, rt1.c3, rt1.c0, rt1.c5 FROM rt1 WHERE (((rt1.c0)*(rt1.c6)) COLLATE BINARY) UNION ALL SELECT ALL rt1.c1, rt1.c3, rt1.c0, rt1.c5 FROM rt1 WHERE ((NOT (((rt1.c0)*(rt1.c6)) COLLATE BINARY))) UNION ALL SELECT rt1.c1, rt1.c3, rt1.c0, rt1.c5 FROM rt1 WHERE (((((rt1.c0)*(rt1.c6)) COLLATE BINARY) ISNULL));
SELECT rt1.c1, rt1.c3, rt1.c0, rt1.c5 FROM rt1;
SELECT DISTINCT rt1.c6, rt1.c1, rt0.c0, rt0.c2, rt1.c3 FROM rt1, rt0;
SELECT DISTINCT rt1.c6, rt1.c1, rt0.c0, rt0.c2, rt1.c3 FROM rt1, rt0 WHERE (((((NULL) NOT NULL)) BETWEEN (rt0.c2) AND ((rt1.c6 IN ())))) UNION SELECT DISTINCT rt1.c6, rt1.c1, rt0.c0, rt0.c2, rt1.c3 FROM rt1, rt0 WHERE ((NOT (((((NULL) NOT NULL)) BETWEEN (rt0.c2) AND ((rt1.c6 IN ())))))) UNION SELECT DISTINCT rt1.c6, rt1.c1, rt0.c0, rt0.c2, rt1.c3 FROM rt1, rt0 WHERE (((((((NULL) NOT NULL)) BETWEEN (rt0.c2) AND ((rt1.c6 IN ())))) ISNULL));
SELECT DISTINCT rt1.c6, rt1.c1, rt0.c0, rt0.c2, rt1.c3 FROM rt1, rt0;
SELECT ALL rt1.c3, rt0.c2, rt1.c4, rt0.c0, t0.c0, t0.c1 FROM t0, rt0, rt1 GROUP BY rt1.c3, rt0.c2, rt1.c4, rt0.c0, t0.c0, t0.c1;
SELECT rt1.c3, rt0.c2, rt1.c4, rt0.c0, t0.c0, t0.c1 FROM t0, rt0, rt1 WHERE ((((rt0.c1 IN ())) ISNULL)) GROUP BY rt1.c3, rt0.c2, rt1.c4, rt0.c0, t0.c0, t0.c1 UNION SELECT rt1.c3, rt0.c2, rt1.c4, rt0.c0, t0.c0, t0.c1 FROM t0, rt0, rt1 WHERE ((NOT ((((rt0.c1 IN ())) ISNULL)))) GROUP BY rt1.c3, rt0.c2, rt1.c4, rt0.c0, t0.c0, t0.c1 UNION SELECT rt1.c3, rt0.c2, rt1.c4, rt0.c0, t0.c0, t0.c1 FROM t0, rt0, rt1 WHERE ((((((rt0.c1 IN ())) ISNULL)) ISNULL)) GROUP BY rt1.c3, rt0.c2, rt1.c4, rt0.c0, t0.c0, t0.c1;
SELECT ALL rt1.c3, rt0.c2, rt1.c4, rt0.c0, t0.c0, t0.c1 FROM t0, rt0, rt1 GROUP BY rt1.c3, rt0.c2, rt1.c4, rt0.c0, t0.c0, t0.c1;
SELECT ALL rt0.c1, t0.c64, rt0.c2 FROM rt0, t0 GROUP BY rt0.c1, t0.c64, rt0.c2;
SELECT rt0.c1, t0.c64, rt0.c2 FROM rt0, t0 GROUP BY rt0.c1, t0.c64, rt0.c2 HAVING CAST(((((TOTAL(rt0.c1))OR(COUNT(*))))OR(TOTAL(AVG(SUM(0.7640742473802574))))) AS BLOB) UNION ALL SELECT rt0.c1, t0.c64, rt0.c2 FROM rt0, t0 GROUP BY rt0.c1, t0.c64, rt0.c2 HAVING (NOT (CAST(((((TOTAL(rt0.c1))OR(COUNT(*))))OR(TOTAL(AVG(SUM(0.7640742473802574))))) AS BLOB))) UNION ALL SELECT ALL rt0.c1, t0.c64, rt0.c2 FROM rt0, t0 GROUP BY rt0.c1, t0.c64, rt0.c2 HAVING ((CAST(((((TOTAL(rt0.c1))OR(COUNT(*))))OR(TOTAL(AVG(SUM(0.7640742473802574))))) AS BLOB)) ISNULL);
SELECT * FROM rt1;
SELECT ALL * FROM rt1 WHERE (CAST(NULL AS REAL)) UNION ALL SELECT * FROM rt1 WHERE ((NOT (CAST(NULL AS REAL)))) UNION ALL SELECT * FROM rt1 WHERE (((CAST(NULL AS REAL)) ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((((rt0.c2, rt0.c0, rt0.c2)) NOT BETWEEN (((rt0.c0 IN ()), rtreenode('', rt0.c2), (rt0.c0 IN ()))) AND ((((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c1)))OR(NULL)))OR(rt0.c0)), ((rt0.c1)|(-1422287308)), ((rt0.c1)!=(rt0.c1)))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c2, rt0.c0, rt0.c2)) NOT BETWEEN (((rt0.c0 IN ()), rtreenode('', rt0.c2), (rt0.c0 IN ()))) AND ((((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c1)))OR(NULL)))OR(rt0.c0)), ((rt0.c1)|(-1422287308)), ((rt0.c1)!=(rt0.c1)))))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((((((rt0.c2, rt0.c0, rt0.c2)) NOT BETWEEN (((rt0.c0 IN ()), rtreenode('', rt0.c2), (rt0.c0 IN ()))) AND ((((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c1)))OR(NULL)))OR(rt0.c0)), ((rt0.c1)|(-1422287308)), ((rt0.c1)<>(rt0.c1)))))) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT rt1.c4, rt0.c0, rt1.c2, rt1.c5 FROM rt1, rt0 GROUP BY rt1.c4, rt0.c0, rt1.c2, rt1.c5;
SELECT rt1.c4, rt0.c0, rt1.c2, rt1.c5 FROM rt1, rt0 WHERE ((((rt1.c0)) BETWEEN ((rt0.c0 COLLATE RTRIM)) AND ((((rt1.c2)|(rt0.c0)))))) GROUP BY rt1.c4, rt0.c0, rt1.c2, rt1.c5 UNION SELECT rt1.c4, rt0.c0, rt1.c2, rt1.c5 FROM rt1, rt0 WHERE ((NOT ((((rt1.c0)) BETWEEN ((rt0.c0 COLLATE RTRIM)) AND ((((rt1.c2)|(rt0.c0)))))))) GROUP BY rt1.c4, rt0.c0, rt1.c2, rt1.c5 UNION SELECT rt1.c4, rt0.c0, rt1.c2, rt1.c5 FROM rt1, rt0 WHERE ((((((rt1.c0)) BETWEEN ((rt0.c0 COLLATE RTRIM)) AND ((((rt1.c2)|(rt0.c0)))))) ISNULL)) GROUP BY rt1.c4, rt0.c0, rt1.c2, rt1.c5;
SELECT rt1.c4, rt0.c0, rt1.c2, rt1.c5 FROM rt1, rt0 GROUP BY rt1.c4, rt0.c0, rt1.c2, rt1.c5;
SELECT rt1.c1, rt1.c6, t0.c0, rt1.c2, rt1.c0 FROM t0, rt1, rt0 GROUP BY rt1.c1, rt1.c6, t0.c0, rt1.c2, rt1.c0;
SELECT ALL rt1.c1, rt1.c6, t0.c0, rt1.c2, rt1.c0 FROM t0, rt1, rt0 GROUP BY rt1.c1, rt1.c6, t0.c0, rt1.c2, rt1.c0 HAVING (CAST(rt1.c5 AS BLOB) IN (COUNT(*), TOTAL(rt1.c3))) UNION ALL SELECT ALL rt1.c1, rt1.c6, t0.c0, rt1.c2, rt1.c0 FROM t0, rt1, rt0 GROUP BY rt1.c1, rt1.c6, t0.c0, rt1.c2, rt1.c0 HAVING (NOT ((CAST(rt1.c5 AS BLOB) IN (COUNT(*), TOTAL(rt1.c3))))) UNION ALL SELECT ALL rt1.c1, rt1.c6, t0.c0, rt1.c2, rt1.c0 FROM t0, rt1, rt0 GROUP BY rt1.c1, rt1.c6, t0.c0, rt1.c2, rt1.c0 HAVING (((CAST(rt1.c5 AS BLOB) IN (COUNT(*), TOTAL(rt1.c3)))) ISNULL);
SELECT rt1.c1, rt1.c6, t0.c0, rt1.c2, rt1.c0 FROM t0, rt1, rt0 GROUP BY rt1.c1, rt1.c6, t0.c0, rt1.c2, rt1.c0;
SELECT ALL rt1.c1, rt1.c6, t0.c0, rt1.c2, rt1.c0 FROM t0, rt1, rt0 GROUP BY rt1.c1, rt1.c6, t0.c0, rt1.c2, rt1.c0 HAVING (CAST(rt1.c5 AS BLOB) IN (COUNT(*), TOTAL(rt1.c3))) UNION ALL SELECT ALL rt1.c1, rt1.c6, t0.c0, rt1.c2, rt1.c0 FROM t0, rt1, rt0 GROUP BY rt1.c1, rt1.c6, t0.c0, rt1.c2, rt1.c0 HAVING (NOT ((CAST(rt1.c5 AS BLOB) IN (COUNT(*), TOTAL(rt1.c3))))) UNION ALL SELECT ALL rt1.c1, rt1.c6, t0.c0, rt1.c2, rt1.c0 FROM t0, rt1, rt0 GROUP BY rt1.c1, rt1.c6, t0.c0, rt1.c2, rt1.c0 HAVING (((CAST(rt1.c5 AS BLOB) IN (COUNT(*), TOTAL(rt1.c3)))) ISNULL);
SELECT rt1.c1, rt1.c6, t0.c0, rt1.c2, rt1.c0 FROM t0, rt1, rt0 GROUP BY rt1.c1, rt1.c6, t0.c0, rt1.c2, rt1.c0;
SELECT ALL * FROM t0 INNER JOIN rt1 ON (((rt1.c6 IN (t0.c0)))>=(LIKELIHOOD(t0.c0, 0.2427345583692363)));
SELECT ALL * FROM t0 INNER JOIN rt1 ON (((rt1.c6 IN (t0.c0)))>=(LIKELIHOOD(t0.c0, 0.2427345583692363))) WHERE (((CASE rt1.c1  WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c5 THEN t0.c64 WHEN rt1.c6 THEN rt1.c3 WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c0 THEN t0.c0 END)|(ABS(DISTINCT rt1.c3)))) UNION ALL SELECT ALL * FROM t0 INNER JOIN rt1 ON (((rt1.c6 IN (t0.c0)))>=(LIKELIHOOD(t0.c0, 0.2427345583692363))) WHERE ((NOT (((CASE rt1.c1  WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c5 THEN t0.c64 WHEN rt1.c6 THEN rt1.c3 WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c0 THEN t0.c0 END)|(ABS(DISTINCT rt1.c3)))))) UNION ALL SELECT * FROM t0 INNER JOIN rt1 ON (((rt1.c6 IN (t0.c0)))>=(LIKELIHOOD(t0.c0, 0.2427345583692363))) WHERE (((((CASE rt1.c1  WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c5 THEN t0.c64 WHEN rt1.c6 THEN rt1.c3 WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c0 THEN t0.c0 END)|(ABS(DISTINCT rt1.c3)))) ISNULL));
SELECT ALL * FROM t0 INNER JOIN rt1 ON (((rt1.c6 IN (t0.c0)))>=(LIKELIHOOD(t0.c0, 0.2427345583692363)));
SELECT DISTINCT t0.c0, t0.c64, rt0.c0, t0.c1 FROM rt0, t0;
SELECT DISTINCT t0.c0, t0.c64, rt0.c0, t0.c1 FROM rt0, t0 WHERE (rt0.c1) UNION SELECT DISTINCT t0.c0, t0.c64, rt0.c0, t0.c1 FROM rt0, t0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT t0.c0, t0.c64, rt0.c0, t0.c1 FROM rt0, t0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT t0.c0, t0.c64, rt0.c0, t0.c1 FROM rt0, t0;
SELECT rt0.c2, rt0.c0 FROM t0, rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM t0, rt0 WHERE (((((((rt0.c2)AND(t0.c1)))OR(t0.c1)))>(((rt0.c1)<(t0.c0))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM t0, rt0 WHERE ((NOT (((((((rt0.c2)AND(t0.c1)))OR(t0.c1)))>(((rt0.c1)<(t0.c0))))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM t0, rt0 WHERE (((((((((rt0.c2)AND(t0.c1)))OR(t0.c1)))>(((rt0.c1)<(t0.c0))))) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM t0, rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt1.c2, rt1.c1, rt1.c5, rt1.c6, rt1.c3 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c5, rt1.c6, rt1.c3;
SELECT rt1.c2, rt1.c1, rt1.c5, rt1.c6, rt1.c3 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c5, rt1.c6, rt1.c3 HAVING ((AVG(rt1.c6))IS NOT(SUM(GROUP_CONCAT(rt1.c3)))) UNION ALL SELECT rt1.c2, rt1.c1, rt1.c5, rt1.c6, rt1.c3 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c5, rt1.c6, rt1.c3 HAVING (NOT (((AVG(rt1.c6))IS NOT(SUM(GROUP_CONCAT(rt1.c3)))))) UNION ALL SELECT rt1.c2, rt1.c1, rt1.c5, rt1.c6, rt1.c3 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c5, rt1.c6, rt1.c3 HAVING ((((AVG(rt1.c6))IS NOT(SUM(GROUP_CONCAT(rt1.c3))))) ISNULL);
SELECT rt1.c2, rt1.c5, t0.c0, rt0.c0, rt1.c0, rt1.c3, rt1.c4, rt1.c6, rt1.c1, t0.c64, rt0.c2, t0.c1 FROM t0, rt0, rt1;
SELECT rt1.c2, rt1.c5, t0.c0, rt0.c0, rt1.c0, rt1.c3, rt1.c4, rt1.c6, rt1.c1, t0.c64, rt0.c2, t0.c1 FROM t0, rt0, rt1 WHERE (CAST(CASE WHEN rt0.c1 THEN t0.c64 WHEN rt1.c5 THEN rt1.c3 WHEN t0.c64 THEN rt1.c4 ELSE NULL END AS NUMERIC)) UNION ALL SELECT rt1.c2, rt1.c5, t0.c0, rt0.c0, rt1.c0, rt1.c3, rt1.c4, rt1.c6, rt1.c1, t0.c64, rt0.c2, t0.c1 FROM t0, rt0, rt1 WHERE ((NOT (CAST(CASE WHEN rt0.c1 THEN t0.c64 WHEN rt1.c5 THEN rt1.c3 WHEN t0.c64 THEN rt1.c4 ELSE NULL END AS NUMERIC)))) UNION ALL SELECT ALL rt1.c2, rt1.c5, t0.c0, rt0.c0, rt1.c0, rt1.c3, rt1.c4, rt1.c6, rt1.c1, t0.c64, rt0.c2, t0.c1 FROM t0, rt0, rt1 WHERE (((CAST(CASE WHEN rt0.c1 THEN t0.c64 WHEN rt1.c5 THEN rt1.c3 WHEN t0.c64 THEN rt1.c4 ELSE NULL END AS NUMERIC)) ISNULL));
SELECT rt1.c2, rt1.c5, t0.c0, rt0.c0, rt1.c0, rt1.c3, rt1.c4, rt1.c6, rt1.c1, t0.c64, rt0.c2, t0.c1 FROM t0, rt0, rt1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c0) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt1.c2 FROM rt0, rt1, t0 GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt0, rt1, t0 WHERE (((((rt1.c3)*(rt0.c1))) NOT BETWEEN ((t0.c0 IN ())) AND (UNLIKELY(DISTINCT t0.c0)))) GROUP BY rt1.c2 UNION SELECT rt1.c2 FROM rt0, rt1, t0 WHERE ((NOT (((((rt1.c3)*(rt0.c1))) NOT BETWEEN ((t0.c0 IN ())) AND (UNLIKELY(DISTINCT t0.c0)))))) GROUP BY rt1.c2 UNION SELECT ALL rt1.c2 FROM rt0, rt1, t0 WHERE (((((((rt1.c3)*(rt0.c1))) NOT BETWEEN ((t0.c0 IN ())) AND (UNLIKELY(DISTINCT t0.c0)))) ISNULL)) GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt0, rt1, t0 GROUP BY rt1.c2;
SELECT rt1.c3, t0.c0, rt1.c0, rt1.c5, rt0.c1, rt0.c0, rt1.c1, rt1.c4, rt1.c2, t0.c64, rt1.c6, t0.c1 FROM t0, rt1, rt0 GROUP BY rt1.c3, t0.c0, rt1.c0, rt1.c5, rt0.c1, rt0.c0, rt1.c1, rt1.c4, rt1.c2, t0.c64, rt1.c6, t0.c1;
SELECT rt1.c3, t0.c0, rt1.c0, rt1.c5, rt0.c1, rt0.c0, rt1.c1, rt1.c4, rt1.c2, t0.c64, rt1.c6, t0.c1 FROM t0, rt1, rt0 GROUP BY rt1.c3, t0.c0, rt1.c0, rt1.c5, rt0.c1, rt0.c0, rt1.c1, rt1.c4, rt1.c2, t0.c64, rt1.c6, t0.c1 HAVING ((rt0.c0 COLLATE NOCASE)AND(TOTAL(SUM(MAX(COUNT(MAX(rt1.c5))))))) UNION ALL SELECT rt1.c3, t0.c0, rt1.c0, rt1.c5, rt0.c1, rt0.c0, rt1.c1, rt1.c4, rt1.c2, t0.c64, rt1.c6, t0.c1 FROM t0, rt1, rt0 GROUP BY rt1.c3, t0.c0, rt1.c0, rt1.c5, rt0.c1, rt0.c0, rt1.c1, rt1.c4, rt1.c2, t0.c64, rt1.c6, t0.c1 HAVING (NOT (((rt0.c0 COLLATE NOCASE)AND(TOTAL(SUM(MAX(COUNT(MAX(rt1.c5))))))))) UNION ALL SELECT rt1.c3, t0.c0, rt1.c0, rt1.c5, rt0.c1, rt0.c0, rt1.c1, rt1.c4, rt1.c2, t0.c64, rt1.c6, t0.c1 FROM t0, rt1, rt0 GROUP BY rt1.c3, t0.c0, rt1.c0, rt1.c5, rt0.c1, rt0.c0, rt1.c1, rt1.c4, rt1.c2, t0.c64, rt1.c6, t0.c1 HAVING ((((rt0.c0 COLLATE NOCASE)AND(TOTAL(SUM(MAX(COUNT(MAX(rt1.c5)))))))) ISNULL);
SELECT ALL rt0.c0 FROM t0, rt0, rt1;
SELECT ALL rt0.c0 FROM t0, rt0, rt1 WHERE ((('')>(TIME(rt1.c5, rt0.c1, rt1.c2)))) UNION ALL SELECT ALL rt0.c0 FROM t0, rt0, rt1 WHERE ((NOT ((('')>(TIME(rt1.c5, rt0.c1, rt1.c2)))))) UNION ALL SELECT ALL rt0.c0 FROM t0, rt0, rt1 WHERE ((((('')>(TIME(rt1.c5, rt0.c1, rt1.c2)))) ISNULL));
SELECT ALL rt0.c0 FROM t0, rt0, rt1;
SELECT DISTINCT rt1.c6, rt1.c3, rt1.c0, rt1.c5, rt1.c1, rt1.c2, rt1.c4 FROM rt1;
SELECT DISTINCT rt1.c6, rt1.c3, rt1.c0, rt1.c5, rt1.c1, rt1.c2, rt1.c4 FROM rt1 WHERE (CASE ((rt1.c1) IS FALSE)  WHEN rt1.c0 COLLATE BINARY THEN (rt1.c3 IN (rt1.c0, rt1.c3)) END) UNION SELECT DISTINCT rt1.c6, rt1.c3, rt1.c0, rt1.c5, rt1.c1, rt1.c2, rt1.c4 FROM rt1 WHERE ((NOT (CASE ((rt1.c1) IS FALSE)  WHEN rt1.c0 COLLATE BINARY THEN (rt1.c3 IN (rt1.c0, rt1.c3)) END))) UNION SELECT DISTINCT rt1.c6, rt1.c3, rt1.c0, rt1.c5, rt1.c1, rt1.c2, rt1.c4 FROM rt1 WHERE (((CASE ((rt1.c1) IS FALSE)  WHEN rt1.c0 COLLATE BINARY THEN (rt1.c3 IN (rt1.c0, rt1.c3)) END) ISNULL));
SELECT DISTINCT rt1.c6, rt1.c3, rt1.c0, rt1.c5, rt1.c1, rt1.c2, rt1.c4 FROM rt1;
SELECT ALL rt1.c4, rt1.c3, t0.c64 FROM t0, rt1 GROUP BY rt1.c4, rt1.c3, t0.c64;
SELECT rt1.c4, rt1.c3, t0.c64 FROM t0, rt1 WHERE (((((((((((rt1.c3) BETWEEN (t0.c64) AND (rt1.c2)))AND(((rt1.c1)<(t0.c64)))))AND(LIKELIHOOD(rt1.c1, 0.43842188988835606))))OR(t0.c64 COLLATE RTRIM)))OR(((((rt1.c0)AND(t0.c1)))AND(x'575b'))))) GROUP BY rt1.c4, rt1.c3, t0.c64 UNION SELECT rt1.c4, rt1.c3, t0.c64 FROM t0, rt1 WHERE ((NOT (((((((((((rt1.c3) BETWEEN (t0.c64) AND (rt1.c2)))AND(((rt1.c1)<(t0.c64)))))AND(LIKELIHOOD(rt1.c1, 0.43842188988835606))))OR(t0.c64 COLLATE RTRIM)))OR(((((rt1.c0)AND(t0.c1)))AND(x'575b'))))))) GROUP BY rt1.c4, rt1.c3, t0.c64 UNION SELECT ALL rt1.c4, rt1.c3, t0.c64 FROM t0, rt1 WHERE (((((((((((((rt1.c3) BETWEEN (t0.c64) AND (rt1.c2)))AND(((rt1.c1)<(t0.c64)))))AND(LIKELIHOOD(rt1.c1, 0.43842188988835606))))OR(t0.c64 COLLATE RTRIM)))OR(((((rt1.c0)AND(t0.c1)))AND(x'575b'))))) ISNULL)) GROUP BY rt1.c4, rt1.c3, t0.c64;
SELECT ALL rt1.c4, rt1.c3, t0.c64 FROM t0, rt1 GROUP BY rt1.c4, rt1.c3, t0.c64;
SELECT rt1.c6, rt0.c0, rt1.c5, rt1.c0, rt1.c3, rt0.c1, t0.c1, rt0.c2, rt1.c1, t0.c0, rt1.c4 FROM rt1, t0, rt0 GROUP BY rt1.c6, rt0.c0, rt1.c5, rt1.c0, rt1.c3, rt0.c1, t0.c1, rt0.c2, rt1.c1, t0.c0, rt1.c4;
SELECT ALL rt1.c6, rt0.c0, rt1.c5, rt1.c0, rt1.c3, rt0.c1, t0.c1, rt0.c2, rt1.c1, t0.c0, rt1.c4 FROM rt1, t0, rt0 GROUP BY rt1.c6, rt0.c0, rt1.c5, rt1.c0, rt1.c3, rt0.c1, t0.c1, rt0.c2, rt1.c1, t0.c0, rt1.c4 HAVING (((MIN(MIN(rt1.c1)) IN ()))-(COUNT(COUNT(MIN(rt1.c6))))) UNION ALL SELECT ALL rt1.c6, rt0.c0, rt1.c5, rt1.c0, rt1.c3, rt0.c1, t0.c1, rt0.c2, rt1.c1, t0.c0, rt1.c4 FROM rt1, t0, rt0 GROUP BY rt1.c6, rt0.c0, rt1.c5, rt1.c0, rt1.c3, rt0.c1, t0.c1, rt0.c2, rt1.c1, t0.c0, rt1.c4 HAVING (NOT ((((MIN(MIN(rt1.c1)) IN ()))-(COUNT(COUNT(MIN(rt1.c6))))))) UNION ALL SELECT ALL rt1.c6, rt0.c0, rt1.c5, rt1.c0, rt1.c3, rt0.c1, t0.c1, rt0.c2, rt1.c1, t0.c0, rt1.c4 FROM rt1, t0, rt0 GROUP BY rt1.c6, rt0.c0, rt1.c5, rt1.c0, rt1.c3, rt0.c1, t0.c1, rt0.c2, rt1.c1, t0.c0, rt1.c4 HAVING (((((MIN(MIN(rt1.c1)) IN ()))-(COUNT(COUNT(MIN(rt1.c6)))))) ISNULL);
SELECT ALL MIN(((((rt1.c6)>>(t0.c0)))<(((((((((rt1.c6)OR(rt1.c1)))AND(rt1.c3)))AND(t0.c64)))OR(rt1.c1))))) FROM t0, rt1 ORDER BY ((((t0.c1) NOTNULL)) IS FALSE) DESC, CAST(((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c5)) AS NUMERIC) DESC  NULLS LAST;
SELECT * FROM rt0, t0;
SELECT * FROM rt0, t0 WHERE (CASE WHEN rt0.c2 THEN CASE rt0.c0  WHEN 0.6196662226026444 THEN t0.c0 ELSE t0.c0 END ELSE ((rt0.c0)=(rt0.c0)) END) UNION ALL SELECT ALL * FROM rt0 NOT INDEXED, t0 WHERE ((NOT (CASE WHEN rt0.c2 THEN CASE rt0.c0  WHEN 0.6196662226026444 THEN t0.c0 ELSE t0.c0 END ELSE ((rt0.c0)==(rt0.c0)) END))) UNION ALL SELECT * FROM rt0, t0 WHERE (((CASE WHEN rt0.c2 THEN CASE rt0.c0  WHEN 0.6196662226026444 THEN t0.c0 ELSE t0.c0 END ELSE ((rt0.c0)=(rt0.c0)) END) ISNULL));
SELECT * FROM rt0, t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (NULL) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM t0 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT rt0.c1, rt0.c2, rt1.c4, rt1.c2, rt1.c6, rt1.c0, rt1.c3, rt1.c1, rt1.c5 FROM rt0, rt1 GROUP BY rt0.c1, rt0.c2, rt1.c4, rt1.c2, rt1.c6, rt1.c0, rt1.c3, rt1.c1, rt1.c5;
SELECT rt0.c1, rt0.c2, rt1.c4, rt1.c2, rt1.c6, rt1.c0, rt1.c3, rt1.c1, rt1.c5 FROM rt0, rt1 WHERE (rt0.c0) GROUP BY rt0.c1, rt0.c2, rt1.c4, rt1.c2, rt1.c6, rt1.c0, rt1.c3, rt1.c1, rt1.c5 UNION SELECT rt0.c1, rt0.c2, rt1.c4, rt1.c2, rt1.c6, rt1.c0, rt1.c3, rt1.c1, rt1.c5 FROM rt0, rt1 WHERE ((NOT (rt0.c0))) GROUP BY rt0.c1, rt0.c2, rt1.c4, rt1.c2, rt1.c6, rt1.c0, rt1.c3, rt1.c1, rt1.c5 UNION SELECT ALL rt0.c1, rt0.c2, rt1.c4, rt1.c2, rt1.c6, rt1.c0, rt1.c3, rt1.c1, rt1.c5 FROM rt0, rt1 WHERE (((rt0.c0) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt1.c4, rt1.c2, rt1.c6, rt1.c0, rt1.c3, rt1.c1, rt1.c5;
SELECT rt0.c1, rt0.c2, rt1.c4, rt1.c2, rt1.c6, rt1.c0, rt1.c3, rt1.c1, rt1.c5 FROM rt0, rt1 GROUP BY rt0.c1, rt0.c2, rt1.c4, rt1.c2, rt1.c6, rt1.c0, rt1.c3, rt1.c1, rt1.c5;
SELECT rt1.c2, rt1.c0, t0.c1, rt1.c4, rt1.c5, rt1.c1, t0.c64, rt1.c6, rt1.c3 FROM rt1, t0 GROUP BY rt1.c2, rt1.c0, t0.c1, rt1.c4, rt1.c5, rt1.c1, t0.c64, rt1.c6, rt1.c3;
SELECT ALL rt1.c2, rt1.c0, t0.c1, rt1.c4, rt1.c5, rt1.c1, t0.c64, rt1.c6, rt1.c3 FROM rt1, t0 GROUP BY rt1.c2, rt1.c0, t0.c1, rt1.c4, rt1.c5, rt1.c1, t0.c64, rt1.c6, rt1.c3 HAVING COUNT((((SUM(0.6730780537992467), t0.c0, MAX(SUM(rt1.c3))))>=((TOTAL(rt1.c3), COUNT(*), rt1.c1)))) UNION ALL SELECT rt1.c2, rt1.c0, t0.c1, rt1.c4, rt1.c5, rt1.c1, t0.c64, rt1.c6, rt1.c3 FROM rt1, t0 GROUP BY rt1.c2, rt1.c0, t0.c1, rt1.c4, rt1.c5, rt1.c1, t0.c64, rt1.c6, rt1.c3 HAVING (NOT (COUNT((((SUM(0.6730780537992467), t0.c0, MAX(SUM(rt1.c3))))>=((TOTAL(rt1.c3), COUNT(*), rt1.c1)))))) UNION ALL SELECT ALL rt1.c2, rt1.c0, t0.c1, rt1.c4, rt1.c5, rt1.c1, t0.c64, rt1.c6, rt1.c3 FROM rt1, t0 GROUP BY rt1.c2, rt1.c0, t0.c1, rt1.c4, rt1.c5, rt1.c1, t0.c64, rt1.c6, rt1.c3 HAVING ((COUNT((((SUM(0.6730780537992467), t0.c0, MAX(SUM(rt1.c3))))>=((TOTAL(rt1.c3), COUNT(*), rt1.c1))))) ISNULL);
SELECT t0.c64, rt1.c2, rt1.c0, t0.c0, rt1.c3, rt1.c5, rt1.c1, rt1.c4, rt1.c6, t0.c1 FROM t0, rt1;
SELECT t0.c64, rt1.c2, rt1.c0, t0.c0, rt1.c3, rt1.c5, rt1.c1, rt1.c4, rt1.c6, t0.c1 FROM t0, rt1 WHERE ((((rt1.c5 IN (t0.c64))) NOTNULL)) UNION ALL SELECT ALL t0.c64, rt1.c2, rt1.c0, t0.c0, rt1.c3, rt1.c5, rt1.c1, rt1.c4, rt1.c6, t0.c1 FROM t0, rt1 WHERE ((NOT ((((rt1.c5 IN (t0.c64))) NOTNULL)))) UNION ALL SELECT ALL t0.c64, rt1.c2, rt1.c0, t0.c0, rt1.c3, rt1.c5, rt1.c1, rt1.c4, rt1.c6, t0.c1 FROM t0, rt1 WHERE ((((((rt1.c5 IN (t0.c64))) NOTNULL)) ISNULL));
SELECT t0.c64, rt1.c2, rt1.c0, t0.c0, rt1.c3, rt1.c5, rt1.c1, rt1.c4, rt1.c6, t0.c1 FROM t0, rt1;
SELECT DISTINCT * FROM rt0 INNER JOIN rt1 ON (((((rt1.c0) IS TRUE)))!=((((rt1.c2)|(rt0.c1)))));
SELECT DISTINCT * FROM rt0 INNER JOIN rt1 ON (((((rt1.c0) IS TRUE)))<>((((rt1.c2)|(rt0.c1))))) WHERE ((- ((rt0.c1 IN ())))) UNION SELECT DISTINCT * FROM rt0 INNER JOIN rt1 ON (((((rt1.c0) IS TRUE)))<>((((rt1.c2)|(rt0.c1))))) WHERE ((NOT ((- ((rt0.c1 IN ())))))) UNION SELECT DISTINCT * FROM rt0 INNER JOIN rt1 ON (((((rt1.c0) IS TRUE)))!=((((rt1.c2)|(rt0.c1))))) WHERE ((((- ((rt0.c1 IN ())))) ISNULL));
SELECT DISTINCT * FROM rt0 INNER JOIN rt1 ON (((((rt1.c0) IS TRUE)))!=((((rt1.c2)|(rt0.c1)))));
SELECT rt0.c0, rt0.c1, t0.c64, rt1.c4, rt0.c2, rt1.c6, rt1.c3 FROM rt0, t0 LEFT OUTER JOIN rt1 ON (((((((rt1.c6))<=((rt0.c1))))OR(((rt1.c5) BETWEEN (rt0.c2) AND (NULL)))))AND(((t0.c0)|(t0.c0)))) GROUP BY rt0.c0, rt0.c1, t0.c64, rt1.c4, rt0.c2, rt1.c6, rt1.c3;
SELECT ALL rt0.c0, rt0.c1, t0.c64, rt1.c4, rt0.c2, rt1.c6, rt1.c3 FROM rt0, t0 LEFT OUTER JOIN rt1 ON (((((((rt1.c6))<=((rt0.c1))))OR(((rt1.c5) BETWEEN (rt0.c2) AND (NULL)))))AND(((t0.c0)|(t0.c0)))) WHERE (CASE (rt0.c1 IN ())  WHEN (~ (rt1.c2)) THEN NULL WHEN CAST(rt1.c1 AS BLOB) THEN GLOB(rt1.c2, rt1.c6) WHEN rt0.c2 COLLATE RTRIM THEN (rt1.c1 IN ()) END) GROUP BY rt0.c0, rt0.c1, t0.c64, rt1.c4, rt0.c2, rt1.c6, rt1.c3 UNION SELECT rt0.c0, rt0.c1, t0.c64, rt1.c4, rt0.c2, rt1.c6, rt1.c3 FROM rt0, t0 LEFT OUTER JOIN rt1 ON (((((((rt1.c6))<=((rt0.c1))))OR(((rt1.c5) BETWEEN (rt0.c2) AND (NULL)))))AND(((t0.c0)|(t0.c0)))) WHERE ((NOT (CASE (rt0.c1 IN ())  WHEN (~ (rt1.c2)) THEN NULL WHEN CAST(rt1.c1 AS BLOB) THEN GLOB(rt1.c2, rt1.c6) WHEN rt0.c2 COLLATE RTRIM THEN (rt1.c1 IN ()) END))) GROUP BY rt0.c0, rt0.c1, t0.c64, rt1.c4, rt0.c2, rt1.c6, rt1.c3 UNION SELECT rt0.c0, rt0.c1, t0.c64, rt1.c4, rt0.c2, rt1.c6, rt1.c3 FROM rt0, t0 LEFT OUTER JOIN rt1 ON (((((((rt1.c6))<=((rt0.c1))))OR(((rt1.c5) BETWEEN (rt0.c2) AND (NULL)))))AND(((t0.c0)|(t0.c0)))) WHERE (((CASE (rt0.c1 IN ())  WHEN (~ (rt1.c2)) THEN NULL WHEN CAST(rt1.c1 AS BLOB) THEN GLOB(rt1.c2, rt1.c6) WHEN rt0.c2 COLLATE RTRIM THEN (rt1.c1 IN ()) END) ISNULL)) GROUP BY rt0.c0, rt0.c1, t0.c64, rt1.c4, rt0.c2, rt1.c6, rt1.c3;
SELECT rt0.c0, rt0.c1, t0.c64, rt1.c4, rt0.c2, rt1.c6, rt1.c3 FROM rt0, t0 LEFT OUTER JOIN rt1 ON (((((((rt1.c6))<=((rt0.c1))))OR(((rt1.c5) BETWEEN (rt0.c2) AND (NULL)))))AND(((t0.c0)|(t0.c0)))) GROUP BY rt0.c0, rt0.c1, t0.c64, rt1.c4, rt0.c2, rt1.c6, rt1.c3;
SELECT ALL rt0.c1, rt0.c2 FROM rt0, rt1 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0, rt1 GROUP BY rt0.c1, rt0.c2 HAVING (((rt0.c0) NOT BETWEEN (COUNT(GROUP_CONCAT(rt1.c5))) AND (rt1.c6)) IN (COUNT(*), (((rt1.c6))>=((rt1.c1))))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0, rt1 GROUP BY rt0.c1, rt0.c2 HAVING (NOT ((((rt0.c0) NOT BETWEEN (COUNT(GROUP_CONCAT(rt1.c5))) AND (rt1.c6)) IN (COUNT(*), (((rt1.c6))>=((rt1.c1))))))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0, rt1 GROUP BY rt0.c1, rt0.c2 HAVING (((((rt0.c0) NOT BETWEEN (COUNT(GROUP_CONCAT(rt1.c5))) AND (rt1.c6)) IN (COUNT(*), (((rt1.c6))>=((rt1.c1)))))) ISNULL);
SELECT rt1.c3, rt1.c1, rt1.c6, rt1.c5, rt1.c4, rt1.c0, rt1.c2 FROM rt1;
SELECT rt1.c3, rt1.c1, rt1.c6, rt1.c5, rt1.c4, rt1.c0, rt1.c2 FROM rt1 WHERE (rt1.c1) UNION ALL SELECT rt1.c3, rt1.c1, rt1.c6, rt1.c5, rt1.c4, rt1.c0, rt1.c2 FROM rt1 NOT INDEXED WHERE ((NOT (rt1.c1))) UNION ALL SELECT rt1.c3, rt1.c1, rt1.c6, rt1.c5, rt1.c4, rt1.c0, rt1.c2 FROM rt1 WHERE (((rt1.c1) ISNULL));
SELECT rt1.c3, rt1.c1, rt1.c6, rt1.c5, rt1.c4, rt1.c0, rt1.c2 FROM rt1;
SELECT DISTINCT * FROM t0, rt0, rt1;
SELECT DISTINCT * FROM t0, rt0, rt1 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT * FROM t0, rt0, rt1 WHERE ((NOT ((NOT (rt0.c0))))) UNION SELECT DISTINCT * FROM t0, rt0, rt1 WHERE ((((NOT (rt0.c0))) ISNULL));
SELECT DISTINCT * FROM t0, rt0, rt1;
SELECT ALL t0.c64, t0.c0 FROM t0 GROUP BY t0.c64, t0.c0;
SELECT ALL t0.c64, t0.c0 FROM t0 WHERE (((((CASE WHEN t0.c1 THEN t0.c1 END)AND(((t0.c1) NOT NULL))))OR(CASE t0.c64  WHEN t0.c64 THEN t0.c0 WHEN t0.c64 THEN t0.c0 WHEN t0.c1 THEN t0.c1 END))) GROUP BY t0.c64, t0.c0 UNION SELECT ALL t0.c64, t0.c0 FROM t0 WHERE ((NOT (((((CASE WHEN t0.c1 THEN t0.c1 END)AND(((t0.c1) NOT NULL))))OR(CASE t0.c64  WHEN t0.c64 THEN t0.c0 WHEN t0.c64 THEN t0.c0 WHEN t0.c1 THEN t0.c1 END))))) GROUP BY t0.c64, t0.c0 UNION SELECT t0.c64, t0.c0 FROM t0 WHERE (((((((CASE WHEN t0.c1 THEN t0.c1 END)AND(((t0.c1) NOT NULL))))OR(CASE t0.c64  WHEN t0.c64 THEN t0.c0 WHEN t0.c64 THEN t0.c0 WHEN t0.c1 THEN t0.c1 END))) ISNULL)) GROUP BY t0.c64, t0.c0;
SELECT ALL t0.c64, t0.c0 FROM t0 GROUP BY t0.c64, t0.c0;
SELECT ALL rt1.c6, rt1.c1, rt0.c1, rt1.c0, t0.c1, rt1.c3 FROM rt0, t0, rt1 GROUP BY rt1.c6, rt1.c1, rt0.c1, rt1.c0, t0.c1, rt1.c3;
SELECT ALL rt1.c6, rt1.c1, rt0.c1, rt1.c0, t0.c1, rt1.c3 FROM rt0, t0, rt1 GROUP BY rt1.c6, rt1.c1, rt0.c1, rt1.c0, t0.c1, rt1.c3 HAVING CAST(GROUP_CONCAT(COUNT(rt0.c0)) AS REAL) UNION ALL SELECT rt1.c6, rt1.c1, rt0.c1, rt1.c0, t0.c1, rt1.c3 FROM rt0, t0, rt1 GROUP BY rt1.c6, rt1.c1, rt0.c1, rt1.c0, t0.c1, rt1.c3 HAVING (NOT (CAST(GROUP_CONCAT(COUNT(rt0.c0)) AS REAL))) UNION ALL SELECT rt1.c6, rt1.c1, rt0.c1, rt1.c0, t0.c1, rt1.c3 FROM rt0, t0, rt1 GROUP BY rt1.c6, rt1.c1, rt0.c1, rt1.c0, t0.c1, rt1.c3 HAVING ((CAST(GROUP_CONCAT(COUNT(rt0.c0)) AS REAL)) ISNULL);
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE (((((t0.c0 IN ())))==((IFNULL(t0.c1, '쓅y'))))) UNION ALL SELECT * FROM t0 WHERE ((NOT (((((t0.c0 IN ())))==((IFNULL(t0.c1, '쓅y'))))))) UNION ALL SELECT ALL * FROM t0 WHERE (((((((t0.c0 IN ())))==((IFNULL(t0.c1, '쓅y'))))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT t0.c64 FROM rt1, t0, rt0;
SELECT DISTINCT t0.c64 FROM rt1, t0, rt0 WHERE (((((8.9296621E8)>(rt1.c5))) ISNULL)) UNION SELECT DISTINCT t0.c64 FROM rt1 NOT INDEXED, t0, rt0 WHERE ((NOT (((((8.9296621E8)>(rt1.c5))) ISNULL)))) UNION SELECT DISTINCT t0.c64 FROM rt1, t0 NOT INDEXED, rt0 WHERE (((((((8.9296621E8)>(rt1.c5))) ISNULL)) ISNULL));
SELECT DISTINCT t0.c64 FROM rt1, t0, rt0;
SELECT ALL rt1.c5, rt1.c0, t0.c64, rt0.c1, rt0.c0, rt0.c2, t0.c0, rt1.c3, rt1.c2 FROM rt0, rt1, t0 GROUP BY rt1.c5, rt1.c0, t0.c64, rt0.c1, rt0.c0, rt0.c2, t0.c0, rt1.c3, rt1.c2;
SELECT ALL rt1.c5, rt1.c0, t0.c64, rt0.c1, rt0.c0, rt0.c2, t0.c0, rt1.c3, rt1.c2 FROM rt0, rt1, t0 WHERE (rt1.c0) GROUP BY rt1.c5, rt1.c0, t0.c64, rt0.c1, rt0.c0, rt0.c2, t0.c0, rt1.c3, rt1.c2 UNION SELECT rt1.c5, rt1.c0, t0.c64, rt0.c1, rt0.c0, rt0.c2, t0.c0, rt1.c3, rt1.c2 FROM rt0, rt1, t0 WHERE ((NOT (rt1.c0))) GROUP BY rt1.c5, rt1.c0, t0.c64, rt0.c1, rt0.c0, rt0.c2, t0.c0, rt1.c3, rt1.c2 UNION SELECT rt1.c5, rt1.c0, t0.c64, rt0.c1, rt0.c0, rt0.c2, t0.c0, rt1.c3, rt1.c2 FROM rt0, rt1, t0 WHERE (((rt1.c0) ISNULL)) GROUP BY rt1.c5, rt1.c0, t0.c64, rt0.c1, rt0.c0, rt0.c2, t0.c0, rt1.c3, rt1.c2;
SELECT ALL rt1.c5, rt1.c0, t0.c64, rt0.c1, rt0.c0, rt0.c2, t0.c0, rt1.c3, rt1.c2 FROM rt0, rt1, t0 GROUP BY rt1.c5, rt1.c0, t0.c64, rt0.c1, rt0.c0, rt0.c2, t0.c0, rt1.c3, rt1.c2;
SELECT rt1.c2, rt1.c6, rt0.c2, rt1.c5, t0.c1, t0.c0, t0.c64, rt0.c0, rt1.c0, rt1.c1, rt1.c3, rt0.c1 FROM rt0, t0, rt1 GROUP BY rt1.c2, rt1.c6, rt0.c2, rt1.c5, t0.c1, t0.c0, t0.c64, rt0.c0, rt1.c0, rt1.c1, rt1.c3, rt0.c1;
SELECT rt1.c2, rt1.c6, rt0.c2, rt1.c5, t0.c1, t0.c0, t0.c64, rt0.c0, rt1.c0, rt1.c1, rt1.c3, rt0.c1 FROM rt0, t0, rt1 GROUP BY rt1.c2, rt1.c6, rt0.c2, rt1.c5, t0.c1, t0.c0, t0.c64, rt0.c0, rt1.c0, rt1.c1, rt1.c3, rt0.c1 HAVING AVG(CHAR(COUNT(SUM(rt0.c0)))) UNION ALL SELECT ALL rt1.c2, rt1.c6, rt0.c2, rt1.c5, t0.c1, t0.c0, t0.c64, rt0.c0, rt1.c0, rt1.c1, rt1.c3, rt0.c1 FROM rt0, t0, rt1 GROUP BY rt1.c2, rt1.c6, rt0.c2, rt1.c5, t0.c1, t0.c0, t0.c64, rt0.c0, rt1.c0, rt1.c1, rt1.c3, rt0.c1 HAVING (NOT (AVG(CHAR(COUNT(SUM(rt0.c0)))))) UNION ALL SELECT rt1.c2, rt1.c6, rt0.c2, rt1.c5, t0.c1, t0.c0, t0.c64, rt0.c0, rt1.c0, rt1.c1, rt1.c3, rt0.c1 FROM rt0, t0, rt1 GROUP BY rt1.c2, rt1.c6, rt0.c2, rt1.c5, t0.c1, t0.c0, t0.c64, rt0.c0, rt1.c0, rt1.c1, rt1.c3, rt0.c1 HAVING ((AVG(CHAR(COUNT(SUM(rt0.c0))))) ISNULL);
SELECT ALL rt1.c1, t0.c1, rt1.c5, rt1.c3, rt1.c6, rt1.c0, t0.c64, rt1.c4, t0.c0, rt1.c2 FROM t0, rt1;
SELECT rt1.c1, t0.c1, rt1.c5, rt1.c3, rt1.c6, rt1.c0, t0.c64, rt1.c4, t0.c0, rt1.c2 FROM t0, rt1 WHERE ((((((t0.c0)&(rt1.c2)), (rt1.c6 IN (rt1.c3)), ((t0.c64)%(rt1.c0))))<((t0.c64, t0.c1, ((rt1.c4) IS FALSE))))) UNION ALL SELECT rt1.c1, t0.c1, rt1.c5, rt1.c3, rt1.c6, rt1.c0, t0.c64, rt1.c4, t0.c0, rt1.c2 FROM t0, rt1 WHERE ((NOT ((((((t0.c0)&(rt1.c2)), (rt1.c6 IN (rt1.c3)), ((t0.c64)%(rt1.c0))))<((t0.c64, t0.c1, ((rt1.c4) IS FALSE))))))) UNION ALL SELECT rt1.c1, t0.c1, rt1.c5, rt1.c3, rt1.c6, rt1.c0, t0.c64, rt1.c4, t0.c0, rt1.c2 FROM t0, rt1 WHERE ((((((((t0.c0)&(rt1.c2)), (rt1.c6 IN (rt1.c3)), ((t0.c64)%(rt1.c0))))<((t0.c64, t0.c1, ((rt1.c4) IS FALSE))))) ISNULL));
SELECT ALL rt1.c1, t0.c1, rt1.c5, rt1.c3, rt1.c6, rt1.c0, t0.c64, rt1.c4, t0.c0, rt1.c2 FROM t0, rt1;
SELECT DISTINCT rt1.c0, rt0.c0, rt1.c4 FROM rt0 NATURAL JOIN rt1;
SELECT DISTINCT rt1.c0, rt0.c0, rt1.c4 FROM rt0 NATURAL JOIN rt1 WHERE (CAST(((rt0.c1)||(rt0.c1)) AS TEXT)) UNION SELECT DISTINCT rt1.c0, rt0.c0, rt1.c4 FROM rt0 NATURAL JOIN rt1 WHERE ((NOT (CAST(((rt0.c1)||(rt0.c1)) AS TEXT)))) UNION SELECT DISTINCT rt1.c0, rt0.c0, rt1.c4 FROM rt0 NATURAL JOIN rt1 WHERE (((CAST(((rt0.c1)||(rt0.c1)) AS TEXT)) ISNULL));
SELECT DISTINCT rt1.c0, rt0.c0, rt1.c4 FROM rt0 NATURAL JOIN rt1;
SELECT t0.c1, t0.c64 FROM t0 GROUP BY t0.c1, t0.c64;
SELECT ALL t0.c1, t0.c64 FROM t0 WHERE (((CASE WHEN t0.c1 THEN t0.c1 ELSE t0.c0 END) ISNULL)) GROUP BY t0.c1, t0.c64 UNION SELECT ALL t0.c1, t0.c64 FROM t0 WHERE ((NOT (((CASE WHEN t0.c1 THEN t0.c1 ELSE t0.c0 END) ISNULL)))) GROUP BY t0.c1, t0.c64 UNION SELECT t0.c1, t0.c64 FROM t0 WHERE (((((CASE WHEN t0.c1 THEN t0.c1 ELSE t0.c0 END) ISNULL)) ISNULL)) GROUP BY t0.c1, t0.c64;
SELECT t0.c1, t0.c64 FROM t0 GROUP BY t0.c1, t0.c64;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING COUNT(rt0.c1 COLLATE BINARY) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (COUNT(rt0.c1 COLLATE BINARY))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((COUNT(rt0.c1 COLLATE BINARY)) ISNULL);
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING COUNT(rt0.c1 COLLATE BINARY) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (COUNT(rt0.c1 COLLATE BINARY))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((COUNT(rt0.c1 COLLATE BINARY)) ISNULL);
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT * FROM rt1 CROSS JOIN rt0 ON ((((rt0.c2) BETWEEN (rt1.c3) AND (rt1.c2))) NOT BETWEEN (rt1.c5) AND ((((rt0.c0))<=((rt1.c6)))));
SELECT * FROM rt1 CROSS JOIN rt0 ON ((((rt0.c2) BETWEEN (rt1.c3) AND (rt1.c2))) NOT BETWEEN (rt1.c5) AND ((((rt0.c0))<=((rt1.c6))))) WHERE (LOWER(rt1.c4) COLLATE RTRIM) UNION ALL SELECT * FROM rt1 CROSS JOIN rt0 ON ((((rt0.c2) BETWEEN (rt1.c3) AND (rt1.c2))) NOT BETWEEN (rt1.c5) AND ((((rt0.c0))<=((rt1.c6))))) WHERE ((NOT (LOWER(rt1.c4) COLLATE RTRIM))) UNION ALL SELECT ALL * FROM rt1 CROSS JOIN rt0 ON ((((rt0.c2) BETWEEN (rt1.c3) AND (rt1.c2))) NOT BETWEEN (rt1.c5) AND ((((rt0.c0))<=((rt1.c6))))) WHERE (((LOWER(rt1.c4) COLLATE RTRIM) ISNULL));
SELECT * FROM rt1 CROSS JOIN rt0 ON ((((rt0.c2) BETWEEN (rt1.c3) AND (rt1.c2))) NOT BETWEEN (rt1.c5) AND ((((rt0.c0))<=((rt1.c6)))));
SELECT DISTINCT * FROM rt1, t0;
SELECT DISTINCT * FROM rt1, t0 WHERE ((~ (CASE t0.c1  WHEN t0.c0 THEN t0.c64 ELSE rt1.c3 END))) UNION SELECT DISTINCT * FROM rt1, t0 WHERE ((NOT ((~ (CASE t0.c1  WHEN t0.c0 THEN t0.c64 ELSE rt1.c3 END))))) UNION SELECT DISTINCT * FROM rt1, t0 WHERE ((((~ (CASE t0.c1  WHEN t0.c0 THEN t0.c64 ELSE rt1.c3 END))) ISNULL));
SELECT DISTINCT * FROM rt1, t0;
SELECT ALL rt1.c0, rt1.c1, rt1.c2, rt1.c6, rt1.c4, t0.c0, rt0.c1 FROM rt1, t0, rt0 GROUP BY rt1.c0, rt1.c1, rt1.c2, rt1.c6, rt1.c4, t0.c0, rt0.c1;
SELECT rt1.c0, rt1.c1, rt1.c2, rt1.c6, rt1.c4, t0.c0, rt0.c1 FROM rt1, t0, rt0 WHERE (((CAST(rt1.c0 AS TEXT))/(((rt0.c2)AND(rt1.c3))))) GROUP BY rt1.c0, rt1.c1, rt1.c2, rt1.c6, rt1.c4, t0.c0, rt0.c1 UNION SELECT ALL rt1.c0, rt1.c1, rt1.c2, rt1.c6, rt1.c4, t0.c0, rt0.c1 FROM rt1, t0, rt0 WHERE ((NOT (((CAST(rt1.c0 AS TEXT))/(((rt0.c2)AND(rt1.c3))))))) GROUP BY rt1.c0, rt1.c1, rt1.c2, rt1.c6, rt1.c4, t0.c0, rt0.c1 UNION SELECT ALL rt1.c0, rt1.c1, rt1.c2, rt1.c6, rt1.c4, t0.c0, rt0.c1 FROM rt1, t0, rt0 WHERE (((((CAST(rt1.c0 AS TEXT))/(((rt0.c2)AND(rt1.c3))))) ISNULL)) GROUP BY rt1.c0, rt1.c1, rt1.c2, rt1.c6, rt1.c4, t0.c0, rt0.c1;
SELECT ALL rt1.c0, rt1.c1, rt1.c2, rt1.c6, rt1.c4, t0.c0, rt0.c1 FROM rt1, t0, rt0 GROUP BY rt1.c0, rt1.c1, rt1.c2, rt1.c6, rt1.c4, t0.c0, rt0.c1;
SELECT ALL rt0.c0, t0.c64, rt0.c1, t0.c1, t0.c0, rt0.c2 FROM rt0 INNER JOIN t0 ON ((x'')=((((rt0.c0)) BETWEEN ((t0.c0)) AND ((t0.c1))))) GROUP BY rt0.c0, t0.c64, rt0.c1, t0.c1, t0.c0, rt0.c2;
SELECT rt0.c0, t0.c64, rt0.c1, t0.c1, t0.c0, rt0.c2 FROM rt0 INNER JOIN t0 ON ((x'')==((((rt0.c0)) BETWEEN ((t0.c0)) AND ((t0.c1))))) GROUP BY rt0.c0, t0.c64, rt0.c1, t0.c1, t0.c0, rt0.c2 HAVING (MAX(GROUP_CONCAT(SUM(COUNT(TOTAL(AVG(AVG(''))))))) IN (CASE WHEN SUM(t0.c1) THEN MIN(rt0.c0) ELSE t0.c0 END)) UNION ALL SELECT rt0.c0, t0.c64, rt0.c1, t0.c1, t0.c0, rt0.c2 FROM rt0 INNER JOIN t0 ON ((x'')=((((rt0.c0)) BETWEEN ((t0.c0)) AND ((t0.c1))))) GROUP BY rt0.c0, t0.c64, rt0.c1, t0.c1, t0.c0, rt0.c2 HAVING (NOT ((MAX(GROUP_CONCAT(SUM(COUNT(TOTAL(AVG(AVG(''))))))) IN (CASE WHEN SUM(t0.c1) THEN MIN(rt0.c0) ELSE t0.c0 END)))) UNION ALL SELECT ALL rt0.c0, t0.c64, rt0.c1, t0.c1, t0.c0, rt0.c2 FROM rt0 INNER JOIN t0 ON ((x'')==((((rt0.c0)) BETWEEN ((t0.c0)) AND ((t0.c1))))) GROUP BY rt0.c0, t0.c64, rt0.c1, t0.c1, t0.c0, rt0.c2 HAVING (((MAX(GROUP_CONCAT(SUM(COUNT(TOTAL(AVG(AVG(''))))))) IN (CASE WHEN SUM(t0.c1) THEN MIN(rt0.c0) ELSE t0.c0 END))) ISNULL);
SELECT ALL rt1.c3, rt0.c1, rt0.c2, rt1.c2, rt1.c0, rt1.c6, rt1.c1, t0.c64, t0.c0 FROM rt0, t0, rt1;
SELECT ALL rt1.c3, rt0.c1, rt0.c2, rt1.c2, rt1.c0, rt1.c6, rt1.c1, t0.c64, t0.c0 FROM rt0, t0, rt1 WHERE (rt1.c3) UNION ALL SELECT ALL rt1.c3, rt0.c1, rt0.c2, rt1.c2, rt1.c0, rt1.c6, rt1.c1, t0.c64, t0.c0 FROM rt0, t0, rt1 WHERE ((NOT (rt1.c3))) UNION ALL SELECT ALL rt1.c3, rt0.c1, rt0.c2, rt1.c2, rt1.c0, rt1.c6, rt1.c1, t0.c64, t0.c0 FROM rt0, t0, rt1 WHERE (((rt1.c3) ISNULL));
SELECT ALL rt1.c3, rt0.c1, rt0.c2, rt1.c2, rt1.c0, rt1.c6, rt1.c1, t0.c64, t0.c0 FROM rt0, t0, rt1;
SELECT DISTINCT rt1.c5, rt0.c1 FROM rt0, t0, rt1;
SELECT DISTINCT rt1.c5, rt0.c1 FROM rt0, t0, rt1 WHERE (rt1.c3) UNION SELECT DISTINCT rt1.c5, rt0.c1 FROM rt0, t0, rt1 WHERE ((NOT (rt1.c3))) UNION SELECT DISTINCT rt1.c5, rt0.c1 FROM rt0, t0, rt1 WHERE (((rt1.c3) ISNULL));
SELECT DISTINCT rt1.c5, rt0.c1 FROM rt0, t0, rt1;
SELECT rt1.c1, rt1.c5, rt1.c4 FROM rt1 GROUP BY rt1.c1, rt1.c5, rt1.c4;
SELECT ALL rt1.c1, rt1.c5, rt1.c4 FROM rt1 WHERE ((+ (rt1.c4)) COLLATE BINARY) GROUP BY rt1.c1, rt1.c5, rt1.c4 UNION SELECT rt1.c1, rt1.c5, rt1.c4 FROM rt1 WHERE ((NOT ((+ (rt1.c4)) COLLATE BINARY))) GROUP BY rt1.c1, rt1.c5, rt1.c4 UNION SELECT rt1.c1, rt1.c5, rt1.c4 FROM rt1 WHERE ((((+ (rt1.c4)) COLLATE BINARY) ISNULL)) GROUP BY rt1.c1, rt1.c5, rt1.c4;
SELECT rt1.c1, rt1.c5, rt1.c4 FROM rt1 GROUP BY rt1.c1, rt1.c5, rt1.c4;
SELECT rt1.c3 FROM rt1 GROUP BY rt1.c3;
SELECT ALL rt1.c3 FROM rt1 GROUP BY rt1.c3 HAVING (COUNT(*) IN ()) UNION ALL SELECT ALL rt1.c3 FROM rt1 GROUP BY rt1.c3 HAVING (NOT ((COUNT(*) IN ()))) UNION ALL SELECT rt1.c3 FROM rt1 GROUP BY rt1.c3 HAVING (((COUNT(*) IN ())) ISNULL);
SELECT rt1.c3 FROM rt1 GROUP BY rt1.c3;
SELECT ALL rt1.c3 FROM rt1 GROUP BY rt1.c3 HAVING (COUNT(*) IN ()) UNION ALL SELECT ALL rt1.c3 FROM rt1 GROUP BY rt1.c3 HAVING (NOT ((COUNT(*) IN ()))) UNION ALL SELECT rt1.c3 FROM rt1 GROUP BY rt1.c3 HAVING (((COUNT(*) IN ())) ISNULL);
SELECT rt1.c3 FROM rt1 GROUP BY rt1.c3;
SELECT ALL t0.c1 FROM t0;
SELECT ALL t0.c1 FROM t0 WHERE (TYPEOF(TYPEOF(t0.c0))) UNION ALL SELECT ALL t0.c1 FROM t0 WHERE ((NOT (TYPEOF(TYPEOF(t0.c0))))) UNION ALL SELECT t0.c1 FROM t0 WHERE (((TYPEOF(TYPEOF(t0.c0))) ISNULL));
SELECT ALL t0.c1 FROM t0;
SELECT DISTINCT rt1.c0, rt1.c6, t0.c0, rt0.c0, rt0.c1, rt1.c2, rt0.c2, t0.c1, rt1.c4 FROM rt1 RIGHT OUTER JOIN rt0 ON (((rt0.c1)) BETWEEN ((((rt0.c0)&(rt1.c6)))) AND ((CASE rt1.c1  WHEN rt0.c1 THEN t0.c1 END))) FULL OUTER JOIN t0 ON (((((((((rt1.c1)AND('1574866879')))AND(rt1.c4)))OR(t0.c64)))OR(t0.c64)) IN ());
SELECT ALL rt1.c5, rt1.c1, t0.c1, rt1.c6, rt1.c3, rt1.c0, t0.c0 FROM rt1, t0 GROUP BY rt1.c5, rt1.c1, t0.c1, rt1.c6, rt1.c3, rt1.c0, t0.c0;
SELECT rt1.c5, rt1.c1, t0.c1, rt1.c6, rt1.c3, rt1.c0, t0.c0 FROM rt1, t0 WHERE ((((((((((+ (rt1.c0)))AND((- (rt1.c4)))))OR(((((rt1.c1)AND(rt1.c6)))OR(x'')))))OR(((rt1.c1) BETWEEN (rt1.c1) AND (t0.c64)))))OR(((rt1.c5)AND(t0.c64))))) GROUP BY rt1.c5, rt1.c1, t0.c1, rt1.c6, rt1.c3, rt1.c0, t0.c0 UNION SELECT rt1.c5, rt1.c1, t0.c1, rt1.c6, rt1.c3, rt1.c0, t0.c0 FROM rt1, t0 WHERE ((NOT ((((((((((+ (rt1.c0)))AND((- (rt1.c4)))))OR(((((rt1.c1)AND(rt1.c6)))OR(x'')))))OR(((rt1.c1) BETWEEN (rt1.c1) AND (t0.c64)))))OR(((rt1.c5)AND(t0.c64))))))) GROUP BY rt1.c5, rt1.c1, t0.c1, rt1.c6, rt1.c3, rt1.c0, t0.c0 UNION SELECT rt1.c5, rt1.c1, t0.c1, rt1.c6, rt1.c3, rt1.c0, t0.c0 FROM rt1, t0 WHERE ((((((((((((+ (rt1.c0)))AND((- (rt1.c4)))))OR(((((rt1.c1)AND(rt1.c6)))OR(x'')))))OR(((rt1.c1) BETWEEN (rt1.c1) AND (t0.c64)))))OR(((rt1.c5)AND(t0.c64))))) ISNULL)) GROUP BY rt1.c5, rt1.c1, t0.c1, rt1.c6, rt1.c3, rt1.c0, t0.c0;
SELECT ALL rt1.c5, rt1.c1, t0.c1, rt1.c6, rt1.c3, rt1.c0, t0.c0 FROM rt1, t0 GROUP BY rt1.c5, rt1.c1, t0.c1, rt1.c6, rt1.c3, rt1.c0, t0.c0;
SELECT rt1.c4, t0.c0, rt1.c0, t0.c64, rt1.c2, rt1.c6 FROM t0, rt1 GROUP BY rt1.c4, t0.c0, rt1.c0, t0.c64, rt1.c2, rt1.c6;
SELECT ALL rt1.c4, t0.c0, rt1.c0, t0.c64, rt1.c2, rt1.c6 FROM t0, rt1 GROUP BY rt1.c4, t0.c0, rt1.c0, t0.c64, rt1.c2, rt1.c6 HAVING COALESCE(DISTINCT TOTAL(GROUP_CONCAT('dNE~MYi')), COUNT(*)) UNION ALL SELECT rt1.c4, t0.c0, rt1.c0, t0.c64, rt1.c2, rt1.c6 FROM t0, rt1 GROUP BY rt1.c4, t0.c0, rt1.c0, t0.c64, rt1.c2, rt1.c6 HAVING (NOT (COALESCE(DISTINCT TOTAL(GROUP_CONCAT('dNE~MYi')), COUNT(*)))) UNION ALL SELECT rt1.c4, t0.c0, rt1.c0, t0.c64, rt1.c2, rt1.c6 FROM t0, rt1 GROUP BY rt1.c4, t0.c0, rt1.c0, t0.c64, rt1.c2, rt1.c6 HAVING ((COALESCE(DISTINCT TOTAL(GROUP_CONCAT('dNE~MYi')), COUNT(*))) ISNULL);
SELECT * FROM t0;
SELECT * FROM t0 WHERE (CASE WHEN ABS(DISTINCT t0.c64) THEN CAST(t0.c1 AS BLOB) WHEN (NOT (t0.c0)) THEN ((t0.c0) NOT BETWEEN (t0.c64) AND (t0.c1)) WHEN CAST(t0.c1 AS TEXT) THEN ((t0.c64)<=(t0.c0)) END) UNION ALL SELECT * FROM t0 WHERE ((NOT (CASE WHEN ABS(DISTINCT t0.c64) THEN CAST(t0.c1 AS BLOB) WHEN (NOT (t0.c0)) THEN ((t0.c0) NOT BETWEEN (t0.c64) AND (t0.c1)) WHEN CAST(t0.c1 AS TEXT) THEN ((t0.c64)<=(t0.c0)) END))) UNION ALL SELECT * FROM t0 WHERE (((CASE WHEN ABS(DISTINCT t0.c64) THEN CAST(t0.c1 AS BLOB) WHEN (NOT (t0.c0)) THEN ((t0.c0) NOT BETWEEN (t0.c64) AND (t0.c1)) WHEN CAST(t0.c1 AS TEXT) THEN ((t0.c64)<=(t0.c0)) END) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT rt0.c0, rt1.c5, rt1.c1, rt0.c2 FROM rt1, t0, rt0;
SELECT DISTINCT rt0.c0, rt1.c5, rt1.c1, rt0.c2 FROM rt1, t0, rt0 WHERE (((((rt1.c6)||(rt1.c6)))|(((t0.c0) NOT NULL)))) UNION SELECT DISTINCT rt0.c0, rt1.c5, rt1.c1, rt0.c2 FROM rt1, t0, rt0 WHERE ((NOT (((((rt1.c6)||(rt1.c6)))|(((t0.c0) NOT NULL)))))) UNION SELECT DISTINCT rt0.c0, rt1.c5, rt1.c1, rt0.c2 FROM rt1, t0, rt0 WHERE (((((((rt1.c6)||(rt1.c6)))|(((t0.c0) NOT NULL)))) ISNULL));
SELECT DISTINCT rt0.c0, rt1.c5, rt1.c1, rt0.c2 FROM rt1, t0, rt0;
SELECT ALL rt1.c4, rt1.c6, t0.c1, rt1.c0, t0.c64, t0.c0 FROM rt0, t0, rt1 GROUP BY rt1.c4, rt1.c6, t0.c1, rt1.c0, t0.c64, t0.c0;
SELECT rt1.c4, rt1.c6, t0.c1, rt1.c0, t0.c64, t0.c0 FROM rt0, t0, rt1 WHERE (TOTAL_CHANGES()) GROUP BY rt1.c4, rt1.c6, t0.c1, rt1.c0, t0.c64, t0.c0 UNION SELECT ALL rt1.c4, rt1.c6, t0.c1, rt1.c0, t0.c64, t0.c0 FROM rt0, t0, rt1 WHERE ((NOT (TOTAL_CHANGES()))) GROUP BY rt1.c4, rt1.c6, t0.c1, rt1.c0, t0.c64, t0.c0 UNION SELECT ALL rt1.c4, rt1.c6, t0.c1, rt1.c0, t0.c64, t0.c0 FROM rt0, t0, rt1 WHERE (((TOTAL_CHANGES()) ISNULL)) GROUP BY rt1.c4, rt1.c6, t0.c1, rt1.c0, t0.c64, t0.c0;
SELECT ALL rt1.c4, rt1.c6, t0.c1, rt1.c0, t0.c64, t0.c0 FROM rt0, t0, rt1 GROUP BY rt1.c4, rt1.c6, t0.c1, rt1.c0, t0.c64, t0.c0;
SELECT ALL t0.c0, rt0.c0, rt1.c2, rt1.c4, rt0.c1, rt1.c1 FROM t0 RIGHT OUTER JOIN rt1 ON (((t0.c0 IN ())) IS FALSE) LEFT OUTER JOIN rt0 ON ((CASE WHEN rt1.c5 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c4 THEN rt1.c6 END) ISNULL) GROUP BY t0.c0, rt0.c0, rt1.c2, rt1.c4, rt0.c1, rt1.c1;
SELECT t0.c0, rt0.c0, rt1.c2, rt1.c4, rt0.c1, rt1.c1 FROM t0 RIGHT OUTER JOIN rt1 ON (((t0.c0 IN ())) IS FALSE) LEFT OUTER JOIN rt0 ON ((CASE WHEN rt1.c5 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c4 THEN rt1.c6 END) ISNULL) GROUP BY t0.c0, rt0.c0, rt1.c2, rt1.c4, rt0.c1, rt1.c1 HAVING GROUP_CONCAT(GROUP_CONCAT(rt1.c0)) UNION ALL SELECT ALL t0.c0, rt0.c0, rt1.c2, rt1.c4, rt0.c1, rt1.c1 FROM t0 RIGHT OUTER JOIN rt1 ON (((t0.c0 IN ())) IS FALSE) LEFT OUTER JOIN rt0 ON ((CASE WHEN rt1.c5 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c4 THEN rt1.c6 END) ISNULL) GROUP BY t0.c0, rt0.c0, rt1.c2, rt1.c4, rt0.c1, rt1.c1 HAVING (NOT (GROUP_CONCAT(GROUP_CONCAT(rt1.c0)))) UNION ALL SELECT ALL t0.c0, rt0.c0, rt1.c2, rt1.c4, rt0.c1, rt1.c1 FROM t0 RIGHT OUTER JOIN rt1 ON (((t0.c0 IN ())) IS FALSE) LEFT OUTER JOIN rt0 ON ((CASE WHEN rt1.c5 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c4 THEN rt1.c6 END) ISNULL) GROUP BY t0.c0, rt0.c0, rt1.c2, rt1.c4, rt0.c1, rt1.c1 HAVING ((GROUP_CONCAT(GROUP_CONCAT(rt1.c0))) ISNULL);
SELECT * FROM t0 LEFT OUTER JOIN rt0 ON ((rt0.c1)IS(((rt1.c3)%(rt1.c0)))) FULL OUTER JOIN rt1 ON ((((x'') IS FALSE))IS NOT((t0.c1 IN (rt0.c2))));
SELECT DISTINCT * FROM rt0, t0;
SELECT DISTINCT * FROM rt0, t0 WHERE (((((((t0.c1)OR(rt0.c2)))OR(rt0.c0)))>=((+ (t0.c0))))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((NOT (((((((t0.c1)OR(rt0.c2)))OR(rt0.c0)))>=((+ (t0.c0))))))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE (((((((((t0.c1)OR(rt0.c2)))OR(rt0.c0)))>=((+ (t0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0, t0;
SELECT rt0.c1, t0.c1, rt0.c2, rt0.c0, t0.c0 FROM rt0, t0 GROUP BY rt0.c1, t0.c1, rt0.c2, rt0.c0, t0.c0;
SELECT ALL rt0.c1, t0.c1, rt0.c2, rt0.c0, t0.c0 FROM rt0, t0 WHERE ((((rt0.c1)) BETWEEN (((((x'd4046b92', rt0.c2, t0.c0))!=((rt0.c2, t0.c1, rt0.c0))))) AND ((((((((((rt0.c1)OR(rt0.c2)))AND(t0.c1)))OR(t0.c64)))AND(t0.c64)))))) GROUP BY rt0.c1, t0.c1, rt0.c2, rt0.c0, t0.c0 UNION SELECT ALL rt0.c1, t0.c1, rt0.c2, rt0.c0, t0.c0 FROM rt0, t0 WHERE ((NOT ((((rt0.c1)) BETWEEN (((((x'd4046b92', rt0.c2, t0.c0))<>((rt0.c2, t0.c1, rt0.c0))))) AND ((((((((((rt0.c1)OR(rt0.c2)))AND(t0.c1)))OR(t0.c64)))AND(t0.c64)))))))) GROUP BY rt0.c1, t0.c1, rt0.c2, rt0.c0, t0.c0 UNION SELECT rt0.c1, t0.c1, rt0.c2, rt0.c0, t0.c0 FROM rt0, t0 WHERE ((((((rt0.c1)) BETWEEN (((((x'd4046b92', rt0.c2, t0.c0))<>((rt0.c2, t0.c1, rt0.c0))))) AND ((((((((((rt0.c1)OR(rt0.c2)))AND(t0.c1)))OR(t0.c64)))AND(t0.c64)))))) ISNULL)) GROUP BY rt0.c1, t0.c1, rt0.c2, rt0.c0, t0.c0;
SELECT rt0.c1, t0.c1, rt0.c2, rt0.c0, t0.c0 FROM rt0, t0 GROUP BY rt0.c1, t0.c1, rt0.c2, rt0.c0, t0.c0;
SELECT ALL rt1.c1 FROM rt1, t0 GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt1, t0 GROUP BY rt1.c1 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c1 FROM rt1, t0 GROUP BY rt1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c1 FROM rt1, t0 GROUP BY rt1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c1 FROM rt1, t0 GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt1, t0 GROUP BY rt1.c1 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c1 FROM rt1, t0 GROUP BY rt1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c1 FROM rt1, t0 GROUP BY rt1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c1 FROM rt1, t0 GROUP BY rt1.c1;
SELECT rt1.c3 FROM rt1;
SELECT rt1.c3 FROM rt1 WHERE (COALESCE(DISTINCT ((((rt1.c3)OR(rt1.c4)))AND(rt1.c0)), (((rt1.c1, rt1.c3, rt1.c3)) BETWEEN ((rt1.c4, rt1.c4, rt1.c3)) AND ((rt1.c3, rt1.c5, rt1.c2))))) UNION ALL SELECT ALL rt1.c3 FROM rt1 WHERE ((NOT (COALESCE(DISTINCT ((((rt1.c3)OR(rt1.c4)))AND(rt1.c0)), (((rt1.c1, rt1.c3, rt1.c3)) BETWEEN ((rt1.c4, rt1.c4, rt1.c3)) AND ((rt1.c3, rt1.c5, rt1.c2))))))) UNION ALL SELECT rt1.c3 FROM rt1 WHERE (((COALESCE(DISTINCT ((((rt1.c3)OR(rt1.c4)))AND(rt1.c0)), (((rt1.c1, rt1.c3, rt1.c3)) BETWEEN ((rt1.c4, rt1.c4, rt1.c3)) AND ((rt1.c3, rt1.c5, rt1.c2))))) ISNULL));
SELECT rt1.c3 FROM rt1;
SELECT DISTINCT rt1.c5 FROM t0 INNER JOIN rt0 ON ((((((NULL) BETWEEN (t0.c64) AND (t0.c0)))OR(CAST(rt0.c1 AS TEXT))))OR(CASE rt1.c4  WHEN 0.576613547441254 THEN t0.c1 END)) RIGHT OUTER JOIN rt1 ON (((rt1.c1)) NOT BETWEEN ((rt1.c5)) AND ((''))) COLLATE RTRIM;
SELECT rt0.c0, rt1.c5, rt1.c6, rt0.c1, rt1.c3, rt1.c1, t0.c0 FROM rt0, rt1, t0 GROUP BY rt0.c0, rt1.c5, rt1.c6, rt0.c1, rt1.c3, rt1.c1, t0.c0;
SELECT ALL rt0.c0, rt1.c5, rt1.c6, rt0.c1, rt1.c3, rt1.c1, t0.c0 FROM rt0, rt1, t0 WHERE (((((t0.c0))>=((rt1.c5))) IN ())) GROUP BY rt0.c0, rt1.c5, rt1.c6, rt0.c1, rt1.c3, rt1.c1, t0.c0 UNION SELECT ALL rt0.c0, rt1.c5, rt1.c6, rt0.c1, rt1.c3, rt1.c1, t0.c0 FROM rt0, rt1, t0 WHERE ((NOT (((((t0.c0))>=((rt1.c5))) IN ())))) GROUP BY rt0.c0, rt1.c5, rt1.c6, rt0.c1, rt1.c3, rt1.c1, t0.c0 UNION SELECT ALL rt0.c0, rt1.c5, rt1.c6, rt0.c1, rt1.c3, rt1.c1, t0.c0 FROM rt0, rt1, t0 WHERE (((((((t0.c0))>=((rt1.c5))) IN ())) ISNULL)) GROUP BY rt0.c0, rt1.c5, rt1.c6, rt0.c1, rt1.c3, rt1.c1, t0.c0;
SELECT rt0.c0, rt1.c5, rt1.c6, rt0.c1, rt1.c3, rt1.c1, t0.c0 FROM rt0, rt1, t0 GROUP BY rt0.c0, rt1.c5, rt1.c6, rt0.c1, rt1.c3, rt1.c1, t0.c0;
SELECT rt1.c4, t0.c0, rt1.c0, rt0.c2, rt1.c5, t0.c64, rt1.c1, rt1.c2, rt0.c1, rt1.c6, rt1.c3 FROM t0, rt0 RIGHT OUTER JOIN rt1 ON CAST(rt0.c0 AS REAL) GROUP BY rt1.c4, t0.c0, rt1.c0, rt0.c2, rt1.c5, t0.c64, rt1.c1, rt1.c2, rt0.c1, rt1.c6, rt1.c3;
SELECT ALL rt1.c4, t0.c0, rt1.c0, rt0.c2, rt1.c5, t0.c64, rt1.c1, rt1.c2, rt0.c1, rt1.c6, rt1.c3 FROM t0, rt0 RIGHT OUTER JOIN rt1 ON CAST(rt0.c0 AS REAL) GROUP BY rt1.c4, t0.c0, rt1.c0, rt0.c2, rt1.c5, t0.c64, rt1.c1, rt1.c2, rt0.c1, rt1.c6, rt1.c3 HAVING AVG(SUM(t0.c64)) UNION ALL SELECT ALL rt1.c4, t0.c0, rt1.c0, rt0.c2, rt1.c5, t0.c64, rt1.c1, rt1.c2, rt0.c1, rt1.c6, rt1.c3 FROM t0, rt0 RIGHT OUTER JOIN rt1 ON CAST(rt0.c0 AS REAL) GROUP BY rt1.c4, t0.c0, rt1.c0, rt0.c2, rt1.c5, t0.c64, rt1.c1, rt1.c2, rt0.c1, rt1.c6, rt1.c3 HAVING (NOT (AVG(SUM(t0.c64)))) UNION ALL SELECT rt1.c4, t0.c0, rt1.c0, rt0.c2, rt1.c5, t0.c64, rt1.c1, rt1.c2, rt0.c1, rt1.c6, rt1.c3 FROM t0, rt0 RIGHT OUTER JOIN rt1 ON CAST(rt0.c0 AS REAL) GROUP BY rt1.c4, t0.c0, rt1.c0, rt0.c2, rt1.c5, t0.c64, rt1.c1, rt1.c2, rt0.c1, rt1.c6, rt1.c3 HAVING ((AVG(SUM(t0.c64))) ISNULL);
SELECT ALL * FROM rt1;
SELECT * FROM rt1 WHERE (((((rt1.c3) IS FALSE)) BETWEEN (rt1.c6) AND (((((rt1.c2)AND(x'948537c3')))OR(rt1.c4))))) UNION ALL SELECT * FROM rt1 WHERE ((NOT (((((rt1.c3) IS FALSE)) BETWEEN (rt1.c6) AND (((((rt1.c2)AND(x'948537c3')))OR(rt1.c4))))))) UNION ALL SELECT * FROM rt1 WHERE (((((((rt1.c3) IS FALSE)) BETWEEN (rt1.c6) AND (((((rt1.c2)AND(x'948537c3')))OR(rt1.c4))))) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT * FROM rt0, t0;
SELECT DISTINCT * FROM rt0, t0 WHERE ((rt0.c1 IN (rt0.c1)) COLLATE NOCASE) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((NOT ((rt0.c1 IN (rt0.c1)) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((((rt0.c1 IN (rt0.c1)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM rt0, t0;
SELECT rt1.c0, rt1.c5, t0.c1, rt1.c1, rt1.c4, rt1.c6, t0.c0, rt1.c2 FROM t0 INNER JOIN rt1 ON json_remove(t0.c1, rt1.c2, rt1.c0, rt1.c6) COLLATE NOCASE GROUP BY rt1.c0, rt1.c5, t0.c1, rt1.c1, rt1.c4, rt1.c6, t0.c0, rt1.c2;
SELECT t0.c0, t0.c1, rt1.c3, rt0.c2, rt0.c0, rt1.c6, rt1.c4, t0.c64, rt1.c2, rt1.c5, rt1.c1 FROM t0, rt1, rt0 GROUP BY t0.c0, t0.c1, rt1.c3, rt0.c2, rt0.c0, rt1.c6, rt1.c4, t0.c64, rt1.c2, rt1.c5, rt1.c1;
SELECT ALL t0.c0, t0.c1, rt1.c3, rt0.c2, rt0.c0, rt1.c6, rt1.c4, t0.c64, rt1.c2, rt1.c5, rt1.c1 FROM t0, rt1, rt0 GROUP BY t0.c0, t0.c1, rt1.c3, rt0.c2, rt0.c0, rt1.c6, rt1.c4, t0.c64, rt1.c2, rt1.c5, rt1.c1 HAVING ((COUNT(*)) BETWEEN (AVG(AVG(GROUP_CONCAT(rt1.c4)))) AND ((NOT (rt1.c2)))) UNION ALL SELECT ALL t0.c0, t0.c1, rt1.c3, rt0.c2, rt0.c0, rt1.c6, rt1.c4, t0.c64, rt1.c2, rt1.c5, rt1.c1 FROM t0, rt1, rt0 GROUP BY t0.c0, t0.c1, rt1.c3, rt0.c2, rt0.c0, rt1.c6, rt1.c4, t0.c64, rt1.c2, rt1.c5, rt1.c1 HAVING (NOT (((COUNT(*)) BETWEEN (AVG(AVG(GROUP_CONCAT(rt1.c4)))) AND ((NOT (rt1.c2)))))) UNION ALL SELECT t0.c0, t0.c1, rt1.c3, rt0.c2, rt0.c0, rt1.c6, rt1.c4, t0.c64, rt1.c2, rt1.c5, rt1.c1 FROM t0, rt1, rt0 GROUP BY t0.c0, t0.c1, rt1.c3, rt0.c2, rt0.c0, rt1.c6, rt1.c4, t0.c64, rt1.c2, rt1.c5, rt1.c1 HAVING ((((COUNT(*)) BETWEEN (AVG(AVG(GROUP_CONCAT(rt1.c4)))) AND ((NOT (rt1.c2))))) ISNULL);
SELECT rt1.c2, rt1.c0, rt1.c5, rt1.c1 FROM rt1;
SELECT rt1.c2, rt1.c0, rt1.c5, rt1.c1 FROM rt1 WHERE (CAST(((((NULL)OR(rt1.c2)))AND(rt1.c3)) AS REAL)) UNION ALL SELECT rt1.c2, rt1.c0, rt1.c5, rt1.c1 FROM rt1 WHERE ((NOT (CAST(((((NULL)OR(rt1.c2)))AND(rt1.c3)) AS REAL)))) UNION ALL SELECT ALL rt1.c2, rt1.c0, rt1.c5, rt1.c1 FROM rt1 WHERE (((CAST(((((NULL)OR(rt1.c2)))AND(rt1.c3)) AS REAL)) ISNULL));
SELECT rt1.c2, rt1.c0, rt1.c5, rt1.c1 FROM rt1;
SELECT DISTINCT rt1.c2, rt1.c3, rt1.c0, rt1.c4 FROM rt1;
SELECT DISTINCT rt1.c2, rt1.c3, rt1.c0, rt1.c4 FROM rt1 WHERE (LIKELY((NOT ('1446091017')))) UNION SELECT DISTINCT rt1.c2, rt1.c3, rt1.c0, rt1.c4 FROM rt1 WHERE ((NOT (LIKELY((NOT ('1446091017')))))) UNION SELECT DISTINCT rt1.c2, rt1.c3, rt1.c0, rt1.c4 FROM rt1 WHERE (((LIKELY((NOT ('1446091017')))) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c3, rt1.c0, rt1.c4 FROM rt1;
SELECT rt1.c0, t0.c64, rt1.c3, rt1.c4, rt1.c1, t0.c1, t0.c0 FROM t0 FULL OUTER JOIN rt1 ON ((((-264661390)AND(INSTR(rt1.c0, rt1.c0))))AND((((t0.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1))))) INNER JOIN rt0 ON ((((rt0.c2) NOT BETWEEN (t0.c64) AND (rt1.c5))) IS TRUE) GROUP BY rt1.c0, t0.c64, rt1.c3, rt1.c4, rt1.c1, t0.c1, t0.c0;
SELECT ALL rt1.c0, t0.c64, rt1.c3, rt1.c4, rt1.c1, t0.c1, t0.c0 FROM t0 FULL OUTER JOIN rt1 ON ((((-264661390)AND(INSTR(rt1.c0, rt1.c0))))AND((((t0.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1))))) INNER JOIN rt0 ON ((((rt0.c2) NOT BETWEEN (t0.c64) AND (rt1.c5))) IS TRUE) WHERE (((NULLIF(rt1.c2, rt1.c3)) ISNULL)) GROUP BY rt1.c0, t0.c64, rt1.c3, rt1.c4, rt1.c1, t0.c1, t0.c0 UNION SELECT ALL rt1.c0, t0.c64, rt1.c3, rt1.c4, rt1.c1, t0.c1, t0.c0 FROM t0 FULL OUTER JOIN rt1 ON ((((-264661390)AND(INSTR(rt1.c0, rt1.c0))))AND((((t0.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1))))) INNER JOIN rt0 ON ((((rt0.c2) NOT BETWEEN (t0.c64) AND (rt1.c5))) IS TRUE) WHERE ((NOT (((NULLIF(rt1.c2, rt1.c3)) ISNULL)))) GROUP BY rt1.c0, t0.c64, rt1.c3, rt1.c4, rt1.c1, t0.c1, t0.c0 UNION SELECT rt1.c0, t0.c64, rt1.c3, rt1.c4, rt1.c1, t0.c1, t0.c0 FROM t0 FULL OUTER JOIN rt1 ON ((((-264661390)AND(INSTR(rt1.c0, rt1.c0))))AND((((t0.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1))))) INNER JOIN rt0 ON ((((rt0.c2) NOT BETWEEN (t0.c64) AND (rt1.c5))) IS TRUE) WHERE (((((NULLIF(rt1.c2, rt1.c3)) ISNULL)) ISNULL)) GROUP BY rt1.c0, t0.c64, rt1.c3, rt1.c4, rt1.c1, t0.c1, t0.c0;
SELECT rt1.c0, t0.c64, rt1.c3, rt1.c4, rt1.c1, t0.c1, t0.c0 FROM t0 FULL OUTER JOIN rt1 ON ((((-264661390)AND(INSTR(rt1.c0, rt1.c0))))AND((((t0.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1))))) INNER JOIN rt0 ON ((((rt0.c2) NOT BETWEEN (t0.c64) AND (rt1.c5))) IS TRUE) GROUP BY rt1.c0, t0.c64, rt1.c3, rt1.c4, rt1.c1, t0.c1, t0.c0;
SELECT ALL rt0.c0, rt1.c1, rt0.c1, rt1.c4, rt1.c0, t0.c0, rt1.c6, rt0.c2, t0.c64, t0.c1, rt1.c2, rt1.c3 FROM rt1, t0, rt0 GROUP BY rt0.c0, rt1.c1, rt0.c1, rt1.c4, rt1.c0, t0.c0, rt1.c6, rt0.c2, t0.c64, t0.c1, rt1.c2, rt1.c3;
SELECT ALL rt0.c0, rt1.c1, rt0.c1, rt1.c4, rt1.c0, t0.c0, rt1.c6, rt0.c2, t0.c64, t0.c1, rt1.c2, rt1.c3 FROM rt1, t0, rt0 GROUP BY rt0.c0, rt1.c1, rt0.c1, rt1.c4, rt1.c0, t0.c0, rt1.c6, rt0.c2, t0.c64, t0.c1, rt1.c2, rt1.c3 HAVING ((MAX(COUNT(*)))%(CAST(AVG(TOTAL(rt1.c0)) AS INTEGER))) UNION ALL SELECT ALL rt0.c0, rt1.c1, rt0.c1, rt1.c4, rt1.c0, t0.c0, rt1.c6, rt0.c2, t0.c64, t0.c1, rt1.c2, rt1.c3 FROM rt1, t0, rt0 GROUP BY rt0.c0, rt1.c1, rt0.c1, rt1.c4, rt1.c0, t0.c0, rt1.c6, rt0.c2, t0.c64, t0.c1, rt1.c2, rt1.c3 HAVING (NOT (((MAX(COUNT(*)))%(CAST(AVG(TOTAL(rt1.c0)) AS INTEGER))))) UNION ALL SELECT ALL rt0.c0, rt1.c1, rt0.c1, rt1.c4, rt1.c0, t0.c0, rt1.c6, rt0.c2, t0.c64, t0.c1, rt1.c2, rt1.c3 FROM rt1, t0, rt0 GROUP BY rt0.c0, rt1.c1, rt0.c1, rt1.c4, rt1.c0, t0.c0, rt1.c6, rt0.c2, t0.c64, t0.c1, rt1.c2, rt1.c3 HAVING ((((MAX(COUNT(*)))%(CAST(AVG(TOTAL(rt1.c0)) AS INTEGER)))) ISNULL);
SELECT * FROM rt1;
SELECT ALL * FROM rt1 WHERE ((~ (rt1.c1)) COLLATE RTRIM) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT ((~ (rt1.c1)) COLLATE RTRIM))) UNION ALL SELECT * FROM rt1 WHERE ((((~ (rt1.c1)) COLLATE RTRIM) ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE (CAST(((rt0.c2)>(rt0.c0)) AS NUMERIC)) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (CAST(((rt0.c2)>(rt0.c0)) AS NUMERIC)))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE (((CAST(((rt0.c2)>(rt0.c0)) AS NUMERIC)) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT rt1.c4, rt0.c0, rt1.c5, rt1.c0, rt0.c2, rt0.c1, rt1.c2, rt1.c3 FROM rt1, rt0 GROUP BY rt1.c4, rt0.c0, rt1.c5, rt1.c0, rt0.c2, rt0.c1, rt1.c2, rt1.c3;
SELECT ALL rt1.c4, rt0.c0, rt1.c5, rt1.c0, rt0.c2, rt0.c1, rt1.c2, rt1.c3 FROM rt1, rt0 WHERE ((((~ (rt1.c6))) NOT BETWEEN (((rt0.c0)!=(rt1.c4))) AND (rt1.c5))) GROUP BY rt1.c4, rt0.c0, rt1.c5, rt1.c0, rt0.c2, rt0.c1, rt1.c2, rt1.c3 UNION SELECT ALL rt1.c4, rt0.c0, rt1.c5, rt1.c0, rt0.c2, rt0.c1, rt1.c2, rt1.c3 FROM rt1, rt0 WHERE ((NOT ((((~ (rt1.c6))) NOT BETWEEN (((rt0.c0)!=(rt1.c4))) AND (rt1.c5))))) GROUP BY rt1.c4, rt0.c0, rt1.c5, rt1.c0, rt0.c2, rt0.c1, rt1.c2, rt1.c3 UNION SELECT ALL rt1.c4, rt0.c0, rt1.c5, rt1.c0, rt0.c2, rt0.c1, rt1.c2, rt1.c3 FROM rt1 NOT INDEXED, rt0 WHERE ((((((~ (rt1.c6))) NOT BETWEEN (((rt0.c0)!=(rt1.c4))) AND (rt1.c5))) ISNULL)) GROUP BY rt1.c4, rt0.c0, rt1.c5, rt1.c0, rt0.c2, rt0.c1, rt1.c2, rt1.c3;
SELECT rt1.c4, rt0.c0, rt1.c5, rt1.c0, rt0.c2, rt0.c1, rt1.c2, rt1.c3 FROM rt1, rt0 GROUP BY rt1.c4, rt0.c0, rt1.c5, rt1.c0, rt0.c2, rt0.c1, rt1.c2, rt1.c3;
SELECT ALL rt0.c2, t0.c0, t0.c1, rt0.c0, t0.c64 FROM t0, rt0 GROUP BY rt0.c2, t0.c0, t0.c1, rt0.c0, t0.c64;
SELECT ALL rt0.c2, t0.c0, t0.c1, rt0.c0, t0.c64 FROM t0, rt0 GROUP BY rt0.c2, t0.c0, t0.c1, rt0.c0, t0.c64 HAVING ((((TOTAL(GROUP_CONCAT(SUM(rt0.c1))))<=(SUM(GROUP_CONCAT(rt0.c1)))))LIKE((((('1558525888')AND(rt0.c1)))OR(GROUP_CONCAT(MIN(GROUP_CONCAT(rt0.c2))))))) UNION ALL SELECT rt0.c2, t0.c0, t0.c1, rt0.c0, t0.c64 FROM t0, rt0 GROUP BY rt0.c2, t0.c0, t0.c1, rt0.c0, t0.c64 HAVING (NOT (((((TOTAL(GROUP_CONCAT(SUM(rt0.c1))))<=(SUM(GROUP_CONCAT(rt0.c1)))))LIKE((((('1558525888')AND(rt0.c1)))OR(GROUP_CONCAT(MIN(GROUP_CONCAT(rt0.c2))))))))) UNION ALL SELECT rt0.c2, t0.c0, t0.c1, rt0.c0, t0.c64 FROM t0, rt0 GROUP BY rt0.c2, t0.c0, t0.c1, rt0.c0, t0.c64 HAVING ((((((TOTAL(GROUP_CONCAT(SUM(rt0.c1))))<=(SUM(GROUP_CONCAT(rt0.c1)))))LIKE((((('1558525888')AND(rt0.c1)))OR(GROUP_CONCAT(MIN(GROUP_CONCAT(rt0.c2)))))))) ISNULL);
SELECT ALL * FROM rt1 NATURAL JOIN rt0;
SELECT ALL * FROM rt1 NOT INDEXED NATURAL JOIN rt0 WHERE ((((rt1.c5)) BETWEEN ((((-1.18416553E9) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) AND (((- (rt1.c1)))))) UNION ALL SELECT ALL * FROM rt1 NATURAL JOIN rt0 WHERE ((NOT ((((rt1.c5)) BETWEEN ((((-1.18416553E9) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) AND (((- (rt1.c1)))))))) UNION ALL SELECT * FROM rt1 NATURAL JOIN rt0 WHERE ((((((rt1.c5)) BETWEEN ((((-1.18416553E9) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) AND (((- (rt1.c1)))))) ISNULL));
SELECT ALL * FROM rt1 NATURAL JOIN rt0;
SELECT DISTINCT rt1.c1, rt1.c2, rt1.c5, rt1.c0 FROM rt1;
SELECT DISTINCT rt1.c1, rt1.c2, rt1.c5, rt1.c0 FROM rt1 WHERE (0.838737293912197) UNION SELECT DISTINCT rt1.c1, rt1.c2, rt1.c5, rt1.c0 FROM rt1 WHERE ((NOT (0.838737293912197))) UNION SELECT DISTINCT rt1.c1, rt1.c2, rt1.c5, rt1.c0 FROM rt1 WHERE (((0.838737293912197) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c2, rt1.c5, rt1.c0 FROM rt1;
SELECT t0.c64, rt1.c4, rt1.c3, rt0.c0, rt1.c0, rt1.c5, rt1.c2, rt1.c6 FROM t0, rt1 RIGHT OUTER JOIN rt0 ON (((((rt0.c2)) NOT BETWEEN ((rt1.c6)) AND ((rt1.c4))))<<((+ (t0.c1)))) GROUP BY t0.c64, rt1.c4, rt1.c3, rt0.c0, rt1.c0, rt1.c5, rt1.c2, rt1.c6;
SELECT t0.c64, rt1.c4, rt1.c3, rt0.c0, rt1.c0, rt1.c5, rt1.c2, rt1.c6 FROM t0, rt1 RIGHT OUTER JOIN rt0 ON (((((rt0.c2)) NOT BETWEEN ((rt1.c6)) AND ((rt1.c4))))<<((+ (t0.c1)))) WHERE (ROUND(((rt1.c4) IS TRUE), ((t0.c0)-(t0.c0)))) GROUP BY t0.c64, rt1.c4, rt1.c3, rt0.c0, rt1.c0, rt1.c5, rt1.c2, rt1.c6 UNION SELECT ALL t0.c64, rt1.c4, rt1.c3, rt0.c0, rt1.c0, rt1.c5, rt1.c2, rt1.c6 FROM t0, rt1 RIGHT OUTER JOIN rt0 ON (((((rt0.c2)) NOT BETWEEN ((rt1.c6)) AND ((rt1.c4))))<<((+ (t0.c1)))) WHERE ((NOT (ROUND(((rt1.c4) IS TRUE), ((t0.c0)-(t0.c0)))))) GROUP BY t0.c64, rt1.c4, rt1.c3, rt0.c0, rt1.c0, rt1.c5, rt1.c2, rt1.c6 UNION SELECT t0.c64, rt1.c4, rt1.c3, rt0.c0, rt1.c0, rt1.c5, rt1.c2, rt1.c6 FROM t0, rt1 RIGHT OUTER JOIN rt0 ON (((((rt0.c2)) NOT BETWEEN ((rt1.c6)) AND ((rt1.c4))))<<((+ (t0.c1)))) WHERE (((ROUND(((rt1.c4) IS TRUE), ((t0.c0)-(t0.c0)))) ISNULL)) GROUP BY t0.c64, rt1.c4, rt1.c3, rt0.c0, rt1.c0, rt1.c5, rt1.c2, rt1.c6;
SELECT t0.c64, rt1.c4, rt1.c3, rt0.c0, rt1.c0, rt1.c5, rt1.c2, rt1.c6 FROM t0, rt1 RIGHT OUTER JOIN rt0 ON (((((rt0.c2)) NOT BETWEEN ((rt1.c6)) AND ((rt1.c4))))<<((+ (t0.c1)))) GROUP BY t0.c64, rt1.c4, rt1.c3, rt0.c0, rt1.c0, rt1.c5, rt1.c2, rt1.c6;
SELECT ALL rt0.c0, rt1.c1, rt1.c2, rt0.c2 FROM rt1, t0, rt0 GROUP BY rt0.c0, rt1.c1, rt1.c2, rt0.c2;
SELECT rt0.c0, rt1.c1, rt1.c2, rt0.c2 FROM rt1, t0, rt0 GROUP BY rt0.c0, rt1.c1, rt1.c2, rt0.c2 HAVING NULL UNION ALL SELECT ALL rt0.c0, rt1.c1, rt1.c2, rt0.c2 FROM rt1, t0, rt0 GROUP BY rt0.c0, rt1.c1, rt1.c2, rt0.c2 HAVING (NOT (NULL)) UNION ALL SELECT ALL rt0.c0, rt1.c1, rt1.c2, rt0.c2 FROM rt1, t0, rt0 GROUP BY rt0.c0, rt1.c1, rt1.c2, rt0.c2 HAVING ((NULL) ISNULL);
SELECT ALL rt0.c0, rt1.c1, rt1.c2, rt0.c2 FROM rt1, t0, rt0 GROUP BY rt0.c0, rt1.c1, rt1.c2, rt0.c2;
SELECT rt0.c0, rt1.c1, rt1.c2, rt0.c2 FROM rt1, t0, rt0 GROUP BY rt0.c0, rt1.c1, rt1.c2, rt0.c2 HAVING NULL UNION ALL SELECT ALL rt0.c0, rt1.c1, rt1.c2, rt0.c2 FROM rt1, t0, rt0 GROUP BY rt0.c0, rt1.c1, rt1.c2, rt0.c2 HAVING (NOT (NULL)) UNION ALL SELECT ALL rt0.c0, rt1.c1, rt1.c2, rt0.c2 FROM rt1, t0, rt0 GROUP BY rt0.c0, rt1.c1, rt1.c2, rt0.c2 HAVING ((NULL) ISNULL);
SELECT ALL rt0.c0, rt1.c1, rt1.c2, rt0.c2 FROM rt1, t0, rt0 GROUP BY rt0.c0, rt1.c1, rt1.c2, rt0.c2;
SELECT ALL * FROM rt1;
SELECT * FROM rt1 WHERE (((((6.84648272E8)OR(SQLITE_COMPILEOPTION_GET(rt1.c6))))OR(rt1.c3 COLLATE BINARY))) UNION ALL SELECT * FROM rt1 WHERE ((NOT (((((6.84648272E8)OR(SQLITE_COMPILEOPTION_GET(rt1.c6))))OR(rt1.c3 COLLATE BINARY))))) UNION ALL SELECT * FROM rt1 WHERE (((((((6.84648272E8)OR(SQLITE_COMPILEOPTION_GET(rt1.c6))))OR(rt1.c3 COLLATE BINARY))) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT * FROM rt1 LEFT OUTER JOIN rt0 ON ((((rt0.c2)<=(x'')))+(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c1 END)) CROSS JOIN t0 ON INSTR(((rt1.c2) NOT BETWEEN (t0.c1) AND (rt0.c2)), ((t0.c64)<(t0.c64)));
SELECT rt1.c4, t0.c0, rt0.c2, rt1.c3, rt1.c6, rt1.c0, t0.c1, t0.c64, rt1.c2 FROM rt0, t0, rt1 GROUP BY rt1.c4, t0.c0, rt0.c2, rt1.c3, rt1.c6, rt1.c0, t0.c1, t0.c64, rt1.c2;
SELECT ALL rt1.c4, t0.c0, rt0.c2, rt1.c3, rt1.c6, rt1.c0, t0.c1, t0.c64, rt1.c2 FROM rt0, t0, rt1 WHERE (((((rt1.c3)<(rt1.c2))) IS TRUE)) GROUP BY rt1.c4, t0.c0, rt0.c2, rt1.c3, rt1.c6, rt1.c0, t0.c1, t0.c64, rt1.c2 UNION SELECT rt1.c4, t0.c0, rt0.c2, rt1.c3, rt1.c6, rt1.c0, t0.c1, t0.c64, rt1.c2 FROM rt0, t0, rt1 WHERE ((NOT (((((rt1.c3)<(rt1.c2))) IS TRUE)))) GROUP BY rt1.c4, t0.c0, rt0.c2, rt1.c3, rt1.c6, rt1.c0, t0.c1, t0.c64, rt1.c2 UNION SELECT rt1.c4, t0.c0, rt0.c2, rt1.c3, rt1.c6, rt1.c0, t0.c1, t0.c64, rt1.c2 FROM rt0, t0, rt1 WHERE (((((((rt1.c3)<(rt1.c2))) IS TRUE)) ISNULL)) GROUP BY rt1.c4, t0.c0, rt0.c2, rt1.c3, rt1.c6, rt1.c0, t0.c1, t0.c64, rt1.c2;
SELECT rt1.c4, t0.c0, rt0.c2, rt1.c3, rt1.c6, rt1.c0, t0.c1, t0.c64, rt1.c2 FROM rt0, t0, rt1 GROUP BY rt1.c4, t0.c0, rt0.c2, rt1.c3, rt1.c6, rt1.c0, t0.c1, t0.c64, rt1.c2;
SELECT ALL rt1.c1, rt1.c2, rt1.c6, rt1.c0, rt1.c4, rt1.c5 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c6, rt1.c0, rt1.c4, rt1.c5;
SELECT ALL rt1.c1, rt1.c2, rt1.c6, rt1.c0, rt1.c4, rt1.c5 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c6, rt1.c0, rt1.c4, rt1.c5 HAVING CASE WHEN rt1.c0 THEN MIN(rt1.c0) END UNION ALL SELECT ALL rt1.c1, rt1.c2, rt1.c6, rt1.c0, rt1.c4, rt1.c5 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c6, rt1.c0, rt1.c4, rt1.c5 HAVING (NOT (CASE WHEN rt1.c0 THEN MIN(rt1.c0) END)) UNION ALL SELECT ALL rt1.c1, rt1.c2, rt1.c6, rt1.c0, rt1.c4, rt1.c5 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c6, rt1.c0, rt1.c4, rt1.c5 HAVING ((CASE WHEN rt1.c0 THEN MIN(rt1.c0) END) ISNULL);
SELECT ALL rt1.c1, rt1.c2, rt1.c6, rt1.c0, rt1.c4, rt1.c5 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c6, rt1.c0, rt1.c4, rt1.c5;
SELECT ALL rt1.c1, rt1.c2, rt1.c6, rt1.c0, rt1.c4, rt1.c5 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c6, rt1.c0, rt1.c4, rt1.c5 HAVING CASE WHEN rt1.c0 THEN MIN(rt1.c0) END UNION ALL SELECT ALL rt1.c1, rt1.c2, rt1.c6, rt1.c0, rt1.c4, rt1.c5 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c6, rt1.c0, rt1.c4, rt1.c5 HAVING (NOT (CASE WHEN rt1.c0 THEN MIN(rt1.c0) END)) UNION ALL SELECT ALL rt1.c1, rt1.c2, rt1.c6, rt1.c0, rt1.c4, rt1.c5 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c6, rt1.c0, rt1.c4, rt1.c5 HAVING ((CASE WHEN rt1.c0 THEN MIN(rt1.c0) END) ISNULL);
SELECT ALL rt1.c1, rt1.c2, rt1.c6, rt1.c0, rt1.c4, rt1.c5 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c6, rt1.c0, rt1.c4, rt1.c5;
SELECT ALL rt1.c0, rt1.c2, rt1.c1, rt0.c1 FROM rt1 FULL OUTER JOIN rt0 ON ((CASE WHEN rt1.c1 THEN rt1.c4 END) ISNULL);
SELECT rt1.c0, rt1.c2, rt1.c1, rt0.c1 FROM rt1 FULL OUTER JOIN rt0 ON ((CASE WHEN rt1.c1 THEN rt1.c4 END) ISNULL) WHERE (((PRINTF(rt0.c0, rt1.c5, rt1.c1)) ISNULL)) UNION ALL SELECT rt1.c0, rt1.c2, rt1.c1, rt0.c1 FROM rt1 FULL OUTER JOIN rt0 ON ((CASE WHEN rt1.c1 THEN rt1.c4 END) ISNULL) WHERE ((NOT (((PRINTF(rt0.c0, rt1.c5, rt1.c1)) ISNULL)))) UNION ALL SELECT ALL rt1.c0, rt1.c2, rt1.c1, rt0.c1 FROM rt1 FULL OUTER JOIN rt0 ON ((CASE WHEN rt1.c1 THEN rt1.c4 END) ISNULL) WHERE (((((PRINTF(rt0.c0, rt1.c5, rt1.c1)) ISNULL)) ISNULL));
SELECT ALL rt1.c0, rt1.c2, rt1.c1, rt0.c1 FROM rt1 FULL OUTER JOIN rt0 ON ((CASE WHEN rt1.c1 THEN rt1.c4 END) ISNULL);
SELECT DISTINCT * FROM t0, rt1 LEFT OUTER JOIN rt0 ON CAST(CASE x''  WHEN t0.c1 THEN rt1.c6 END AS BLOB);
SELECT DISTINCT * FROM t0, rt1 LEFT OUTER JOIN rt0 ON CAST(CASE x''  WHEN t0.c1 THEN rt1.c6 END AS BLOB) WHERE (-1.882979356E9) UNION SELECT DISTINCT * FROM t0, rt1 LEFT OUTER JOIN rt0 ON CAST(CASE x''  WHEN t0.c1 THEN rt1.c6 END AS BLOB) WHERE ((NOT (-1.882979356E9))) UNION SELECT DISTINCT * FROM t0, rt1 LEFT OUTER JOIN rt0 ON CAST(CASE x''  WHEN t0.c1 THEN rt1.c6 END AS BLOB) WHERE (((-1.882979356E9) ISNULL));
SELECT DISTINCT * FROM t0, rt1 LEFT OUTER JOIN rt0 ON CAST(CASE x''  WHEN t0.c1 THEN rt1.c6 END AS BLOB);
SELECT ALL t0.c1, rt0.c2, rt1.c0, t0.c64, rt1.c1, t0.c0, rt1.c3, rt1.c6, rt0.c0, rt1.c2, rt1.c4, rt0.c1 FROM t0, rt1 LEFT OUTER JOIN rt0 ON CAST((('-841401832') IS FALSE) AS BLOB) GROUP BY t0.c1, rt0.c2, rt1.c0, t0.c64, rt1.c1, t0.c0, rt1.c3, rt1.c6, rt0.c0, rt1.c2, rt1.c4, rt0.c1;
SELECT ALL t0.c1, rt0.c2, rt1.c0, t0.c64, rt1.c1, t0.c0, rt1.c3, rt1.c6, rt0.c0, rt1.c2, rt1.c4, rt0.c1 FROM t0, rt1 LEFT OUTER JOIN rt0 ON CAST((('-841401832') IS FALSE) AS BLOB) WHERE (((TRIM(DISTINCT -1e500, rt0.c2))<(CAST(rt0.c2 AS NUMERIC)))) GROUP BY t0.c1, rt0.c2, rt1.c0, t0.c64, rt1.c1, t0.c0, rt1.c3, rt1.c6, rt0.c0, rt1.c2, rt1.c4, rt0.c1 UNION SELECT t0.c1, rt0.c2, rt1.c0, t0.c64, rt1.c1, t0.c0, rt1.c3, rt1.c6, rt0.c0, rt1.c2, rt1.c4, rt0.c1 FROM t0, rt1 LEFT OUTER JOIN rt0 ON CAST((('-841401832') IS FALSE) AS BLOB) WHERE ((NOT (((TRIM(DISTINCT -1e500, rt0.c2))<(CAST(rt0.c2 AS NUMERIC)))))) GROUP BY t0.c1, rt0.c2, rt1.c0, t0.c64, rt1.c1, t0.c0, rt1.c3, rt1.c6, rt0.c0, rt1.c2, rt1.c4, rt0.c1 UNION SELECT t0.c1, rt0.c2, rt1.c0, t0.c64, rt1.c1, t0.c0, rt1.c3, rt1.c6, rt0.c0, rt1.c2, rt1.c4, rt0.c1 FROM t0, rt1 LEFT OUTER JOIN rt0 ON CAST((('-841401832') IS FALSE) AS BLOB) WHERE (((((TRIM(DISTINCT -1e500, rt0.c2))<(CAST(rt0.c2 AS NUMERIC)))) ISNULL)) GROUP BY t0.c1, rt0.c2, rt1.c0, t0.c64, rt1.c1, t0.c0, rt1.c3, rt1.c6, rt0.c0, rt1.c2, rt1.c4, rt0.c1;
SELECT ALL t0.c1, rt0.c2, rt1.c0, t0.c64, rt1.c1, t0.c0, rt1.c3, rt1.c6, rt0.c0, rt1.c2, rt1.c4, rt0.c1 FROM t0, rt1 LEFT OUTER JOIN rt0 ON CAST((('-841401832') IS FALSE) AS BLOB) GROUP BY t0.c1, rt0.c2, rt1.c0, t0.c64, rt1.c1, t0.c0, rt1.c3, rt1.c6, rt0.c0, rt1.c2, rt1.c4, rt0.c1;
SELECT rt1.c1, rt1.c3, rt0.c1 FROM t0, rt0, rt1 GROUP BY rt1.c1, rt1.c3, rt0.c1;
SELECT rt1.c1, rt1.c3, rt0.c1 FROM t0, rt0, rt1 GROUP BY rt1.c1, rt1.c3, rt0.c1 HAVING (((MIN(MIN(rt1.c5))) IS FALSE) IN (-6.47959307E8, (- (NULL)))) UNION ALL SELECT rt1.c1, rt1.c3, rt0.c1 FROM t0, rt0, rt1 GROUP BY rt1.c1, rt1.c3, rt0.c1 HAVING (NOT ((((MIN(MIN(rt1.c5))) IS FALSE) IN (-6.47959307E8, (- (NULL)))))) UNION ALL SELECT ALL rt1.c1, rt1.c3, rt0.c1 FROM t0, rt0, rt1 GROUP BY rt1.c1, rt1.c3, rt0.c1 HAVING (((((MIN(MIN(rt1.c5))) IS FALSE) IN (-6.47959307E8, (- (NULL))))) ISNULL);
SELECT * FROM rt0, t0, rt1 NOT INDEXED;
SELECT ALL * FROM rt0, t0, rt1 WHERE (((((((t0.c0)&(rt1.c3)))OR(((t0.c1) NOT NULL))))AND(((((t0.c64)AND(rt0.c2)))OR(-2.114073898E9))))) UNION ALL SELECT ALL * FROM rt0, t0, rt1 WHERE ((NOT (((((((t0.c0)&(rt1.c3)))OR(((t0.c1) NOT NULL))))AND(((((t0.c64)AND(rt0.c2)))OR(-2.114073898E9))))))) UNION ALL SELECT * FROM rt0, t0 NOT INDEXED, rt1 WHERE (((((((((t0.c0)&(rt1.c3)))OR(((t0.c1) NOT NULL))))AND(((((t0.c64)AND(rt0.c2)))OR(-2.114073898E9))))) ISNULL));
SELECT * FROM rt0, t0, rt1 NOT INDEXED;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((((rt0.c2)AND(rt0.c0)))OR(rt0.c0)))<(((rt0.c2)>(rt0.c2))))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((((((rt0.c2)AND(rt0.c0)))OR(rt0.c0)))<(((rt0.c2)>(rt0.c2))))))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c0)))<(((rt0.c2)>(rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c0, rt1.c2, t0.c64, rt1.c4, rt1.c1, t0.c0, rt1.c3 FROM rt0, rt1, t0 GROUP BY rt0.c0, rt1.c2, t0.c64, rt1.c4, rt1.c1, t0.c0, rt1.c3;
SELECT ALL rt0.c0, rt1.c2, t0.c64, rt1.c4, rt1.c1, t0.c0, rt1.c3 FROM rt0, rt1, t0 WHERE (((((t0.c0) IS FALSE))<=(((rt1.c1)%(t0.c1))))) GROUP BY rt0.c0, rt1.c2, t0.c64, rt1.c4, rt1.c1, t0.c0, rt1.c3 UNION SELECT ALL rt0.c0, rt1.c2, t0.c64, rt1.c4, rt1.c1, t0.c0, rt1.c3 FROM rt0, rt1, t0 WHERE ((NOT (((((t0.c0) IS FALSE))<=(((rt1.c1)%(t0.c1))))))) GROUP BY rt0.c0, rt1.c2, t0.c64, rt1.c4, rt1.c1, t0.c0, rt1.c3 UNION SELECT rt0.c0, rt1.c2, t0.c64, rt1.c4, rt1.c1, t0.c0, rt1.c3 FROM rt0, rt1, t0 WHERE (((((((t0.c0) IS FALSE))<=(((rt1.c1)%(t0.c1))))) ISNULL)) GROUP BY rt0.c0, rt1.c2, t0.c64, rt1.c4, rt1.c1, t0.c0, rt1.c3;
SELECT ALL rt0.c0, rt1.c2, t0.c64, rt1.c4, rt1.c1, t0.c0, rt1.c3 FROM rt0, rt1, t0 GROUP BY rt0.c0, rt1.c2, t0.c64, rt1.c4, rt1.c1, t0.c0, rt1.c3;
SELECT ALL t0.c64, t0.c0, t0.c1 FROM t0 GROUP BY t0.c64, t0.c0, t0.c1;
SELECT ALL t0.c64, t0.c0, t0.c1 FROM t0 GROUP BY t0.c64, t0.c0, t0.c1 HAVING COUNT(((GROUP_CONCAT(4883581)) BETWEEN (COUNT(*)) AND (COUNT(t0.c1)))) UNION ALL SELECT t0.c64, t0.c0, t0.c1 FROM t0 GROUP BY t0.c64, t0.c0, t0.c1 HAVING (NOT (COUNT(((GROUP_CONCAT(4883581)) BETWEEN (COUNT(*)) AND (COUNT(t0.c1)))))) UNION ALL SELECT ALL t0.c64, t0.c0, t0.c1 FROM t0 GROUP BY t0.c64, t0.c0, t0.c1 HAVING ((COUNT(((GROUP_CONCAT(4883581)) BETWEEN (COUNT(*)) AND (COUNT(t0.c1))))) ISNULL);
SELECT ALL t0.c64, t0.c1 FROM t0;
SELECT t0.c64, t0.c1 FROM t0 WHERE ('') UNION ALL SELECT t0.c64, t0.c1 FROM t0 WHERE ((NOT (''))) UNION ALL SELECT ALL t0.c64, t0.c1 FROM t0 WHERE ((('') ISNULL));
SELECT ALL t0.c64, t0.c1 FROM t0;
SELECT DISTINCT t0.c0, t0.c64, t0.c1 FROM rt0, t0;
SELECT DISTINCT t0.c0, t0.c64, t0.c1 FROM rt0, t0 WHERE (rt0.c0) UNION SELECT DISTINCT t0.c0, t0.c64, t0.c1 FROM rt0, t0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT t0.c0, t0.c64, t0.c1 FROM rt0, t0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT t0.c0, t0.c64, t0.c1 FROM rt0, t0;
SELECT t0.c0, t0.c1, rt0.c0 FROM rt0, t0 GROUP BY t0.c0, t0.c1, rt0.c0;
SELECT ALL t0.c0, t0.c1, rt0.c0 FROM rt0, t0 WHERE (CAST(((((t0.c1)OR(rt0.c2)))OR(rt0.c2)) AS INTEGER)) GROUP BY t0.c0, t0.c1, rt0.c0 UNION SELECT ALL t0.c0, t0.c1, rt0.c0 FROM rt0, t0 WHERE ((NOT (CAST(((((t0.c1)OR(rt0.c2)))OR(rt0.c2)) AS INTEGER)))) GROUP BY t0.c0, t0.c1, rt0.c0 UNION SELECT t0.c0, t0.c1, rt0.c0 FROM rt0, t0 WHERE (((CAST(((((t0.c1)OR(rt0.c2)))OR(rt0.c2)) AS INTEGER)) ISNULL)) GROUP BY t0.c0, t0.c1, rt0.c0;
SELECT t0.c0, t0.c1, rt0.c0 FROM rt0, t0 GROUP BY t0.c0, t0.c1, rt0.c0;
