-- Time: 2024/06/09 19:22:40
-- Database: database28
-- Database version: 3.40.0
-- seed value: 477238328
PRAGMA cache_size = 50000; -- 10ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 1ms;
PRAGMA encoding = 'UTF-16'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0, c1 UNINDEXED, c2, notindexed=c0); -- 1ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0); -- 1ms;
PRAGMA checkpoint_fullfsync = false; -- 0ms;
PRAGMA temp.locking_mode = NORMAL; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', 473553700);\n; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ANALYZE vt1; -- 2ms;
ANALYZE temp; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c0, c2, c1) VALUES (1759892212, '1759892212', '1759892212'); -- 0ms;
CREATE VIRTUAL TABLE vt2 USING fts4(c0); -- 2ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO vt1(c0) VALUES (0.8446832859604567), (x''), ('1759892212'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
REINDEX; -- 3ms;
INSERT OR REPLACE INTO vt0(c2) VALUES ('1626668511'), ('1626668511'), (4.735537E8); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt2', 'vt1', ' unordered noskipscan'); -- 0ms;
END TRANSACTION; -- 1ms;
PRAGMA ignore_check_constraints = true; -- 1ms;
ANALYZE main; -- 1ms;
PRAGMA application_id; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR ABORT INTO vt2 VALUES (x''); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 2088843034); -- 2ms;
PRAGMA temp.application_id = -5559115962017033837; -- 0ms;
INSERT OR REPLACE INTO vt2(c0) VALUES ('tkJQi+ড'); -- 1ms;
INSERT INTO vt2(vt2, rank) VALUES('crisismerge', 192629890); -- 1ms;
INSERT INTO vt2(vt2, rank) VALUES('pgsz', '60654'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt2(vt2) VALUES('integrity-check'); -- 1ms;
ANALYZE; -- 0ms;
INSERT INTO vt2(vt2, rank) VALUES('crisismerge', 888897321); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 14); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 13); -- 0ms;
INSERT INTO vt2(vt2) VALUES('optimize'); -- 0ms;
INSERT INTO vt2(vt2, rank) VALUES('usermerge', 11); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 12); -- 2ms;
INSERT INTO vt2(vt2, rank) VALUES('crisismerge', 1026069567); -- 0ms;
INSERT INTO vt2(vt2, rank) VALUES('pgsz', '44611'); -- 0ms;
INSERT INTO vt2(vt2) VALUES('optimize'); -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES ('遲m~?3q'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO vt0(c2, c0) VALUES ((- (0.4661881437310711)) COLLATE RTRIM, 0x60f4fddf), ('473553700', '730903403'), (NULL, '-1915430043'); -- 2ms;
INSERT OR IGNORE INTO vt1 VALUES (-1061586118); -- 1ms;
INSERT OR IGNORE INTO vt2(c0) VALUES ('-2071678105'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1791597407); -- 0ms;
INSERT INTO vt2(vt2) VALUES('rebuild'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt2(vt2) VALUES('rebuild'); -- 10ms;
INSERT OR IGNORE INTO vt2(c0) VALUES (0x2b90b36b), (1759892212), (x''); -- 1ms;
PRAGMA journal_size_limit; -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0, c2) VALUES (0.5453491825103359, '遲m~?3q'); -- 1ms;
PRAGMA temp.foreign_keys = true; -- 0ms;
INSERT INTO vt2(vt2) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO vt0(c2, c0) VALUES (791675972, 7.91675972E8), (0.04854988414920858, '-1915430043'), (0.22603350485537033, '-2071678105'); -- 1ms;
ANALYZE; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt2', 'sqlite_autoindex_vt2_segdir_1', '613690873 sz=-1061586118'); -- 0ms;
INSERT OR ABORT INTO vt1(c0) VALUES (0.919238162544407); -- 1ms;
CREATE TEMPORARY TABLE IF NOT EXISTS t0 (c0 INT PRIMARY KEY ON CONFLICT REPLACE NOT NULL CHECK ( ((((((c0)AND(c0)))AND(c0)))&((NOT (c0))))) UNIQUE ) WITHOUT ROWID; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 791781180);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 12); -- 1ms;
INSERT INTO vt2(vt2) VALUES('rebuild'); -- 4ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt2(c0) VALUES (x''); -- 0ms;
DROP TABLE IF EXISTS vt2; -- 2ms;
INSERT OR FAIL INTO t0 VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (473553700, '~N', NULL); -- 0ms;
END TRANSACTION; -- 0ms;
ALTER TABLE t0 ADD COLUMN c46 REAL; -- 0ms;
INSERT OR ABORT INTO vt0(c2, c0) VALUES ('G]', x''); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 3); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 4); -- 0ms;
PRAGMA optimize; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 9ms;
PRAGMA temp.auto_vacuum = FULL; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES ('\nr\r蠂', x'ba38', x''); -- 0ms;
INSERT OR IGNORE INTO vt0(c2, c1) VALUES ('1759892212', x'89e7'), (0.4661881437310711, -1.061586118E9), ('1626668511', NULL); -- 1ms;
INSERT OR IGNORE INTO vt1 VALUES (NULL); -- 0ms;
ALTER TABLE t0 ADD COLUMN c19 INTEGER; -- 0ms;
INSERT OR ROLLBACK INTO vt1 VALUES (NULL), ('-1915430043'), (0X5d4698a); -- 1ms;
INSERT OR IGNORE INTO t0(c19, c46) VALUES (x'', 0X60f4fddf), ('遲m~?3q', 0.7501226450059799), (0.21897950915388253, 0.9101410791935319), (0.946174043124825, '-673334220'), ('2027203276', x'ba89'); -- 0ms;
PRAGMA temp.recursive_triggers; -- 0ms;
ANALYZE; -- 1ms;
ALTER TABLE t0 RENAME COLUMN c19 TO c50; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 11ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
UPDATE OR ROLLBACK vt0 SET (c0, c0)=(0.006532993285001454, 0x73e48802) WHERE CASE WHEN CASE '862530587'  WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c0 END THEN CAST(vt0.c0 AS NUMERIC) WHEN ((vt0.c2)IS NOT(vt0.c0)) THEN json_array_length(vt0.c2, vt0.c1) WHEN NULL THEN (((vt0.c2, vt0.c0, 0.18987704558158836))<((vt0.c2, vt0.c2, vt0.c2))) ELSE vt0.c1 END; -- 1ms;
UPDATE OR IGNORE t0 SET (c46)=(x''); -- 0ms;
UPDATE OR IGNORE t0 SET c0=0.21897950915388253 WHERE (NOT (((t0.c50)<<(t0.c0)))); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
UPDATE OR IGNORE vt1 SET c0=NULL; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
PRAGMA temp.secure_delete; -- 0ms;
PRAGMA temp.locking_mode = EXCLUSIVE; -- 0ms;
PRAGMA temp.ignore_check_constraints; -- 1ms;
CREATE INDEX i27 ON t0(((((c46)==(c46))) NOT NULL) ASC,CAST(((((c46)OR(NULL)))AND(c0)) AS REAL),'-1915430043' COLLATE NOCASE DESC); -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i46 ON t0(((c46)>>(0.8869818875266923)) COLLATE RTRIM COLLATE NOCASE ASC,((c50 COLLATE RTRIM) NOT NULL),(((((((('1597967287')AND(((c50) NOT BETWEEN (c50) AND (c46)))))AND(PRINTF(c0))))OR(((c46)*(c0)))))AND(((c46)>=(c0)))) DESC) WHERE ((c50)>(((((c46)OR(c46)))AND(c50)))); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
UPDATE vt0 SET (c0)=(-6.7333422E8) WHERE ((((vt0.c2) NOTNULL))>=(((vt0.c1) NOT BETWEEN ('') AND (vt0.c1)))); -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', 1005714798);\n; -- 0ms;
INSERT OR IGNORE INTO t0(c50, c46, c0) VALUES ('731343529', x'', 473553700); -- 0ms;
PRAGMA journal_size_limit = 2672039893652871425; -- 0ms;
INSERT OR ROLLBACK INTO t0(c0, c46, c50) VALUES (0x14e691a8, NULL, '-338147851'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1467858233); -- 8ms;
INSERT OR IGNORE INTO vt1 VALUES (-1.915430043E9); -- 0ms;
CREATE UNIQUE INDEX i72 ON t0((((c50 IN (c46)))<>(c46 COLLATE BINARY)),CASE 0xffffffffd7ddbc34  WHEN ((c46) NOT NULL) THEN ((c46) NOT NULL) WHEN json_quote(NULL) THEN '-2071678105' COLLATE RTRIM WHEN c46 THEN (((c46)) BETWEEN ((c46)) AND ((c46))) END COLLATE RTRIM,((((((c0) BETWEEN (c46) AND (c46)))OR((('-338147851')/(c46)))))OR((c50 IN ()))) COLLATE BINARY DESC); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES ('1759892212', '⊺obo\n', '730903403'); -- 4ms;
INSERT OR ABORT INTO vt0(c0, c1) VALUES ('1385885802', 0.6341039458884116); -- 3ms;
COMMIT; -- 1ms;
PRAGMA cache_spill; -- 0ms;
INSERT OR REPLACE INTO vt1 VALUES (x''), (0x7dbcb0f4), (x''); -- 2ms;
UPDATE vt1 SET (c0)=('48427288') WHERE x'e3df'; -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('', -964019880, 'ꆻ7X&쀏⭼y'), ('_5M%kD&a', '', 0.5453491825103359), ('-1449885819', 1.626668511E9, x''); -- 0ms;
END; -- 0ms;
PRAGMA temp.journal_size_limit = -7905340238489521441; -- 4ms;
PRAGMA default_cache_size = 688701984; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 2ms;
ROLLBACK TRANSACTION; -- 3ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL vt1.c0, vt0.c1 FROM vt1 NATURAL JOIN vt0;
SELECT ALL vt1.c0, vt0.c1 FROM vt1 NATURAL JOIN vt0 WHERE (vt0.c2) UNION ALL SELECT ALL vt1.c0, vt0.c1 FROM vt1 NATURAL JOIN vt0 WHERE ((NOT (vt0.c2))) UNION ALL SELECT vt1.c0, vt0.c1 FROM vt1 NATURAL JOIN vt0 WHERE (((vt0.c2) ISNULL));
SELECT ALL vt1.c0, vt0.c1 FROM vt1 NATURAL JOIN vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((((0.09887800878312591)OR(NULL)))OR(vt0.c2)))>=(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c2))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((((0.09887800878312591)OR(NULL)))OR(vt0.c2)))>=(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c2))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((((0.09887800878312591)OR(NULL)))OR(vt0.c2)))>=(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c2))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((((vt1.c0) BETWEEN (x'aeee') AND (vt1.c0))) NOT BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) AND (vt1.c0 COLLATE NOCASE))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0) BETWEEN (x'aeee') AND (vt1.c0))) NOT BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) AND (vt1.c0 COLLATE NOCASE))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((((vt1.c0) BETWEEN (x'aeee') AND (vt1.c0))) NOT BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) AND (vt1.c0 COLLATE NOCASE))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT t0.c50 FROM t0 NOT INDEXED GROUP BY t0.c50;
SELECT t0.c50 FROM t0 GROUP BY t0.c50 HAVING AVG(((((AVG(0.7454470973726007))OR(t0.c50)))AND(t0.c50))) UNION ALL SELECT t0.c50 FROM t0 GROUP BY t0.c50 HAVING (NOT (AVG(((((AVG(0.7454470973726007))OR(t0.c50)))AND(t0.c50))))) UNION ALL SELECT ALL t0.c50 FROM t0 GROUP BY t0.c50 HAVING ((AVG(((((AVG(0.7454470973726007))OR(t0.c50)))AND(t0.c50)))) ISNULL);
SELECT t0.c50, t0.c46, vt0.c1, vt0.c2 FROM vt1, vt0, t0;
SELECT t0.c50, t0.c46, vt0.c1, vt0.c2 FROM vt1, vt0, t0 WHERE ((NOT (x''))) UNION ALL SELECT ALL t0.c50, t0.c46, vt0.c1, vt0.c2 FROM vt1, vt0, t0 WHERE ((NOT ((NOT (x''))))) UNION ALL SELECT ALL t0.c50, t0.c46, vt0.c1, vt0.c2 FROM vt1 NOT INDEXED, vt0, t0 WHERE ((((NOT (x''))) ISNULL));
SELECT t0.c50, t0.c46, vt0.c1, vt0.c2 FROM vt1, vt0, t0;
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN vt1 ON ((((((((((t0.c0)OR(x'')))AND('b')))OR(vt1.c0)))OR(t0.c46))) BETWEEN (((t0.c46)LIKE(vt1.c0))) AND (CASE t0.c0  WHEN t0.c50 THEN t0.c0 END));
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN vt1 ON ((((((((((t0.c0)OR(x'')))AND('b')))OR(vt1.c0)))OR(t0.c46))) BETWEEN (((t0.c46)LIKE(vt1.c0))) AND (CASE t0.c0  WHEN t0.c50 THEN t0.c0 END)) WHERE (CAST(CAST(vt1.c0 AS TEXT) AS NUMERIC)) UNION SELECT DISTINCT * FROM t0 LEFT OUTER JOIN vt1 ON ((((((((((t0.c0)OR(x'')))AND('b')))OR(vt1.c0)))OR(t0.c46))) BETWEEN (((t0.c46)LIKE(vt1.c0))) AND (CASE t0.c0  WHEN t0.c50 THEN t0.c0 END)) WHERE ((NOT (CAST(CAST(vt1.c0 AS TEXT) AS NUMERIC)))) UNION SELECT DISTINCT * FROM t0 LEFT OUTER JOIN vt1 ON ((((((((((t0.c0)OR(x'')))AND('b')))OR(vt1.c0)))OR(t0.c46))) BETWEEN (((t0.c46)LIKE(vt1.c0))) AND (CASE t0.c0  WHEN t0.c50 THEN t0.c0 END)) WHERE (((CAST(CAST(vt1.c0 AS TEXT) AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN vt1 ON ((((((((((t0.c0)OR(x'')))AND('b')))OR(vt1.c0)))OR(t0.c46))) BETWEEN (((t0.c46)LIKE(vt1.c0))) AND (CASE t0.c0  WHEN t0.c50 THEN t0.c0 END));
SELECT t0.c50, t0.c46 FROM vt1, vt0 FULL OUTER JOIN t0 ON ((((vt0.c2)<<(t0.c50)))IS(((NULL) NOTNULL))) GROUP BY t0.c50, t0.c46;
SELECT ALL t0.c50, t0.c46 FROM vt1, vt0 FULL OUTER JOIN t0 ON ((((vt0.c2)<<(t0.c50)))IS(((NULL) NOTNULL))) WHERE ((+ ((~ (vt1.c0))))) GROUP BY t0.c50, t0.c46 UNION SELECT ALL t0.c50, t0.c46 FROM vt1, vt0 FULL OUTER JOIN t0 ON ((((vt0.c2)<<(t0.c50)))IS(((NULL) NOTNULL))) WHERE ((NOT ((+ ((~ (vt1.c0))))))) GROUP BY t0.c50, t0.c46 UNION SELECT t0.c50, t0.c46 FROM vt1, vt0 FULL OUTER JOIN t0 ON ((((vt0.c2)<<(t0.c50)))IS(((NULL) NOTNULL))) WHERE ((((+ ((~ (vt1.c0))))) ISNULL)) GROUP BY t0.c50, t0.c46;
SELECT t0.c50, t0.c46 FROM vt1, vt0 FULL OUTER JOIN t0 ON ((((vt0.c2)<<(t0.c50)))IS(((NULL) NOTNULL))) GROUP BY t0.c50, t0.c46;
SELECT ALL t0.c50, vt0.c0, vt0.c2, t0.c0, vt1.c0, t0.c46 FROM vt1 NOT INDEXED CROSS JOIN t0 ON SQLITE_COMPILEOPTION_GET('83738639') RIGHT OUTER JOIN vt0 ON HEX(DISTINCT LIKELIHOOD(DISTINCT vt0.c2, 0.7325044462839984)) GROUP BY t0.c50, vt0.c0, vt0.c2, t0.c0, vt1.c0, t0.c46;
SELECT ALL t0.c50, vt0.c0, vt0.c2, t0.c0, vt1.c0, t0.c46 FROM vt1 CROSS JOIN t0 ON SQLITE_COMPILEOPTION_GET('83738639') RIGHT OUTER JOIN vt0 ON HEX(DISTINCT LIKELIHOOD(DISTINCT vt0.c2, 0.7325044462839984)) GROUP BY t0.c50, vt0.c0, vt0.c2, t0.c0, vt1.c0, t0.c46 HAVING ((TOTAL(vt0.c1)) NOTNULL) UNION ALL SELECT t0.c50, vt0.c0, vt0.c2, t0.c0, vt1.c0, t0.c46 FROM vt1 CROSS JOIN t0 ON SQLITE_COMPILEOPTION_GET('83738639') RIGHT OUTER JOIN vt0 ON HEX(DISTINCT LIKELIHOOD(DISTINCT vt0.c2, 0.7325044462839984)) GROUP BY t0.c50, vt0.c0, vt0.c2, t0.c0, vt1.c0, t0.c46 HAVING (NOT (((TOTAL(vt0.c1)) NOTNULL))) UNION ALL SELECT t0.c50, vt0.c0, vt0.c2, t0.c0, vt1.c0, t0.c46 FROM vt1 CROSS JOIN t0 ON SQLITE_COMPILEOPTION_GET('83738639') RIGHT OUTER JOIN vt0 ON HEX(DISTINCT LIKELIHOOD(DISTINCT vt0.c2, 0.7325044462839984)) GROUP BY t0.c50, vt0.c0, vt0.c2, t0.c0, vt1.c0, t0.c46 HAVING ((((TOTAL(vt0.c1)) NOTNULL)) ISNULL);
SELECT ALL t0.c50, vt0.c0, vt0.c2, t0.c0, vt1.c0, t0.c46 FROM vt1 NOT INDEXED CROSS JOIN t0 ON SQLITE_COMPILEOPTION_GET('83738639') RIGHT OUTER JOIN vt0 ON HEX(DISTINCT LIKELIHOOD(DISTINCT vt0.c2, 0.7325044462839984)) GROUP BY t0.c50, vt0.c0, vt0.c2, t0.c0, vt1.c0, t0.c46;
SELECT ALL t0.c50, vt0.c0, vt0.c2, t0.c0, vt1.c0, t0.c46 FROM vt1 CROSS JOIN t0 ON SQLITE_COMPILEOPTION_GET('83738639') RIGHT OUTER JOIN vt0 ON HEX(DISTINCT LIKELIHOOD(DISTINCT vt0.c2, 0.7325044462839984)) GROUP BY t0.c50, vt0.c0, vt0.c2, t0.c0, vt1.c0, t0.c46 HAVING ((TOTAL(vt0.c1)) NOTNULL) UNION ALL SELECT t0.c50, vt0.c0, vt0.c2, t0.c0, vt1.c0, t0.c46 FROM vt1 CROSS JOIN t0 ON SQLITE_COMPILEOPTION_GET('83738639') RIGHT OUTER JOIN vt0 ON HEX(DISTINCT LIKELIHOOD(DISTINCT vt0.c2, 0.7325044462839984)) GROUP BY t0.c50, vt0.c0, vt0.c2, t0.c0, vt1.c0, t0.c46 HAVING (NOT (((TOTAL(vt0.c1)) NOTNULL))) UNION ALL SELECT t0.c50, vt0.c0, vt0.c2, t0.c0, vt1.c0, t0.c46 FROM vt1 CROSS JOIN t0 ON SQLITE_COMPILEOPTION_GET('83738639') RIGHT OUTER JOIN vt0 ON HEX(DISTINCT LIKELIHOOD(DISTINCT vt0.c2, 0.7325044462839984)) GROUP BY t0.c50, vt0.c0, vt0.c2, t0.c0, vt1.c0, t0.c46 HAVING ((((TOTAL(vt0.c1)) NOTNULL)) ISNULL);
SELECT ALL t0.c50, vt0.c0, vt0.c2, t0.c0, vt1.c0, t0.c46 FROM vt1 NOT INDEXED CROSS JOIN t0 ON SQLITE_COMPILEOPTION_GET('83738639') RIGHT OUTER JOIN vt0 ON HEX(DISTINCT LIKELIHOOD(DISTINCT vt0.c2, 0.7325044462839984)) GROUP BY t0.c50, vt0.c0, vt0.c2, t0.c0, vt1.c0, t0.c46;
SELECT * FROM vt0 FULL OUTER JOIN t0 ON (~ ((((x'', t0.c0, vt0.c1))>((vt0.c2, vt0.c2, vt0.c0)))));
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON (~ ((((x'', t0.c0, vt0.c1))>((vt0.c2, vt0.c2, vt0.c0))))) WHERE (NULL) UNION ALL SELECT * FROM vt0 FULL OUTER JOIN t0 ON (~ ((((x'', t0.c0, vt0.c1))>((vt0.c2, vt0.c2, vt0.c0))))) WHERE ((NOT (NULL))) UNION ALL SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON (~ ((((x'', t0.c0, vt0.c1))>((vt0.c2, vt0.c2, vt0.c0))))) WHERE (((NULL) ISNULL));
SELECT * FROM vt0 FULL OUTER JOIN t0 ON (~ ((((x'', t0.c0, vt0.c1))>((vt0.c2, vt0.c2, vt0.c0)))));
SELECT DISTINCT * FROM vt0, t0, vt1;
SELECT DISTINCT * FROM vt0, t0, vt1 WHERE ((((('\nb(쀏\a')AND(CAST(vt0.c0 AS BLOB))))AND(((((((((t0.c46)OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c2)))AND(t0.c50))))) UNION SELECT DISTINCT * FROM vt0, t0, vt1 WHERE ((NOT ((((('\nb(쀏\a')AND(CAST(vt0.c0 AS BLOB))))AND(((((((((t0.c46)OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c2)))AND(t0.c50))))))) UNION SELECT DISTINCT * FROM vt0, t0, vt1 WHERE ((((((('\nb(쀏\a')AND(CAST(vt0.c0 AS BLOB))))AND(((((((((t0.c46)OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c2)))AND(t0.c50))))) ISNULL));
SELECT DISTINCT * FROM vt0, t0, vt1;
SELECT t0.c50, t0.c0, t0.c46 FROM t0 GROUP BY t0.c50, t0.c0, t0.c46;
SELECT t0.c50, t0.c0, t0.c46 FROM t0 WHERE (CASE t0.c0  WHEN t0.c46 THEN t0.c50 WHEN t0.c46 THEN t0.c0 WHEN t0.c50 THEN t0.c0 END COLLATE RTRIM) GROUP BY t0.c50, t0.c0, t0.c46 UNION SELECT t0.c50, t0.c0, t0.c46 FROM t0 WHERE ((NOT (CASE t0.c0  WHEN t0.c46 THEN t0.c50 WHEN t0.c46 THEN t0.c0 WHEN t0.c50 THEN t0.c0 END COLLATE RTRIM))) GROUP BY t0.c50, t0.c0, t0.c46 UNION SELECT ALL t0.c50, t0.c0, t0.c46 FROM t0 WHERE (((CASE t0.c0  WHEN t0.c46 THEN t0.c50 WHEN t0.c46 THEN t0.c0 WHEN t0.c50 THEN t0.c0 END COLLATE RTRIM) ISNULL)) GROUP BY t0.c50, t0.c0, t0.c46;
SELECT t0.c50, t0.c0, t0.c46 FROM t0 GROUP BY t0.c50, t0.c0, t0.c46;
SELECT t0.c0 FROM vt0, vt1, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM vt0, vt1, t0 GROUP BY t0.c0 HAVING MAX(SUM(t0.c46)) UNION ALL SELECT t0.c0 FROM vt0, vt1, t0 GROUP BY t0.c0 HAVING (NOT (MAX(SUM(t0.c46)))) UNION ALL SELECT t0.c0 FROM vt0, vt1, t0 GROUP BY t0.c0 HAVING ((MAX(SUM(t0.c46))) ISNULL);
SELECT vt1.c0, vt0.c0, t0.c0, vt0.c2 FROM t0, vt0, vt1;
SELECT vt1.c0, vt0.c0, t0.c0, vt0.c2 FROM t0, vt0, vt1 WHERE (vt0.c0 COLLATE NOCASE) UNION ALL SELECT ALL vt1.c0, vt0.c0, t0.c0, vt0.c2 FROM t0, vt0, vt1 WHERE ((NOT (vt0.c0 COLLATE NOCASE))) UNION ALL SELECT ALL vt1.c0, vt0.c0, t0.c0, vt0.c2 FROM t0, vt0, vt1 WHERE (((vt0.c0 COLLATE NOCASE) ISNULL));
SELECT vt1.c0, vt0.c0, t0.c0, vt0.c2 FROM t0, vt0, vt1;
SELECT DISTINCT vt0.c0, vt0.c2, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c2, vt0.c1 FROM vt0 WHERE (CAST(((vt0.c1)||(vt0.c2)) AS BLOB)) UNION SELECT DISTINCT vt0.c0, vt0.c2, vt0.c1 FROM vt0 WHERE ((NOT (CAST(((vt0.c1)||(vt0.c2)) AS BLOB)))) UNION SELECT DISTINCT vt0.c0, vt0.c2, vt0.c1 FROM vt0 WHERE (((CAST(((vt0.c1)||(vt0.c2)) AS BLOB)) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c2, vt0.c1 FROM vt0;
SELECT ALL t0.c0, t0.c46, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, t0.c46, vt0.c0;
SELECT t0.c0, t0.c46, vt0.c0 FROM vt0, t0 WHERE (((((('-964019880') NOT BETWEEN (vt0.c0) AND (t0.c50))))<=((CASE WHEN vt0.c0 THEN t0.c46 ELSE NULL END)))) GROUP BY t0.c0, t0.c46, vt0.c0 UNION SELECT t0.c0, t0.c46, vt0.c0 FROM vt0, t0 WHERE ((NOT (((((('-964019880') NOT BETWEEN (vt0.c0) AND (t0.c50))))<=((CASE WHEN vt0.c0 THEN t0.c46 ELSE NULL END)))))) GROUP BY t0.c0, t0.c46, vt0.c0 UNION SELECT ALL t0.c0, t0.c46, vt0.c0 FROM vt0, t0 WHERE (((((((('-964019880') NOT BETWEEN (vt0.c0) AND (t0.c50))))<=((CASE WHEN vt0.c0 THEN t0.c46 ELSE NULL END)))) ISNULL)) GROUP BY t0.c0, t0.c46, vt0.c0;
SELECT ALL t0.c0, t0.c46, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, t0.c46, vt0.c0;
SELECT t0.c46, vt1.c0, t0.c50 FROM t0, vt1 GROUP BY t0.c46, vt1.c0, t0.c50;
SELECT ALL t0.c46, vt1.c0, t0.c50 FROM t0, vt1 GROUP BY t0.c46, vt1.c0, t0.c50 HAVING UPPER(DISTINCT MAX(vt1.c0)) UNION ALL SELECT t0.c46, vt1.c0, t0.c50 FROM t0, vt1 GROUP BY t0.c46, vt1.c0, t0.c50 HAVING (NOT (UPPER(DISTINCT MAX(vt1.c0)))) UNION ALL SELECT ALL t0.c46, vt1.c0, t0.c50 FROM t0, vt1 GROUP BY t0.c46, vt1.c0, t0.c50 HAVING ((UPPER(DISTINCT MAX(vt1.c0))) ISNULL);
SELECT t0.c46, vt1.c0, t0.c50 FROM t0, vt1 GROUP BY t0.c46, vt1.c0, t0.c50;
SELECT ALL t0.c46, vt1.c0, t0.c50 FROM t0, vt1 GROUP BY t0.c46, vt1.c0, t0.c50 HAVING UPPER(DISTINCT MAX(vt1.c0)) UNION ALL SELECT t0.c46, vt1.c0, t0.c50 FROM t0, vt1 GROUP BY t0.c46, vt1.c0, t0.c50 HAVING (NOT (UPPER(DISTINCT MAX(vt1.c0)))) UNION ALL SELECT ALL t0.c46, vt1.c0, t0.c50 FROM t0, vt1 GROUP BY t0.c46, vt1.c0, t0.c50 HAVING ((UPPER(DISTINCT MAX(vt1.c0))) ISNULL);
SELECT t0.c46, vt1.c0, t0.c50 FROM t0, vt1 GROUP BY t0.c46, vt1.c0, t0.c50;
SELECT ALL * FROM t0, vt1 NOT INDEXED;
SELECT * FROM t0, vt1 WHERE (CASE ((vt1.c0) ISNULL)  WHEN ((t0.c0) IS TRUE) THEN t0.c50 COLLATE BINARY WHEN ((vt1.c0)OR(vt1.c0)) THEN (- (t0.c50)) WHEN ((vt1.c0)<>(t0.c0)) THEN (((t0.c0, t0.c50, t0.c46))>=((t0.c46, t0.c46, 48427288))) ELSE '-1031996147' END) UNION ALL SELECT ALL * FROM t0, vt1 WHERE ((NOT (CASE ((vt1.c0) ISNULL)  WHEN ((t0.c0) IS TRUE) THEN t0.c50 COLLATE BINARY WHEN ((vt1.c0)OR(vt1.c0)) THEN (- (t0.c50)) WHEN ((vt1.c0)!=(t0.c0)) THEN (((t0.c0, t0.c50, t0.c46))>=((t0.c46, t0.c46, 48427288))) ELSE '-1031996147' END))) UNION ALL SELECT * FROM t0, vt1 WHERE (((CASE ((vt1.c0) ISNULL)  WHEN ((t0.c0) IS TRUE) THEN t0.c50 COLLATE BINARY WHEN ((vt1.c0)OR(vt1.c0)) THEN (- (t0.c50)) WHEN ((vt1.c0)!=(t0.c0)) THEN (((t0.c0, t0.c50, t0.c46))>=((t0.c46, t0.c46, 48427288))) ELSE '-1031996147' END) ISNULL));
SELECT ALL * FROM t0, vt1 NOT INDEXED;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((((vt1.c0 IN ()))OR((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((((vt1.c0 IN ()))OR((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((((vt1.c0 IN ()))OR((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT t0.c50, t0.c46, t0.c0 FROM t0, vt1 GROUP BY t0.c50, t0.c46, t0.c0;
SELECT ALL t0.c50, t0.c46, t0.c0 FROM t0, vt1 WHERE (((((CASE t0.c50  WHEN t0.c46 THEN t0.c0 WHEN vt1.c0 THEN t0.c50 WHEN t0.c46 THEN vt1.c0 ELSE t0.c46 END)OR(vt1.c0 COLLATE NOCASE)))AND(((((((((t0.c0)OR(t0.c50)))AND(t0.c46)))OR(t0.c0)))AND(t0.c46))))) GROUP BY t0.c50, t0.c46, t0.c0 UNION SELECT t0.c50, t0.c46, t0.c0 FROM t0, vt1 WHERE ((NOT (((((CASE t0.c50  WHEN t0.c46 THEN t0.c0 WHEN vt1.c0 THEN t0.c50 WHEN t0.c46 THEN vt1.c0 ELSE t0.c46 END)OR(vt1.c0 COLLATE NOCASE)))AND(((((((((t0.c0)OR(t0.c50)))AND(t0.c46)))OR(t0.c0)))AND(t0.c46))))))) GROUP BY t0.c50, t0.c46, t0.c0 UNION SELECT ALL t0.c50, t0.c46, t0.c0 FROM t0, vt1 WHERE (((((((CASE t0.c50  WHEN t0.c46 THEN t0.c0 WHEN vt1.c0 THEN t0.c50 WHEN t0.c46 THEN vt1.c0 ELSE t0.c46 END)OR(vt1.c0 COLLATE NOCASE)))AND(((((((((t0.c0)OR(t0.c50)))AND(t0.c46)))OR(t0.c0)))AND(t0.c46))))) ISNULL)) GROUP BY t0.c50, t0.c46, t0.c0;
SELECT t0.c50, t0.c46, t0.c0 FROM t0, vt1 GROUP BY t0.c50, t0.c46, t0.c0;
SELECT vt0.c1, vt0.c0, vt1.c0, vt0.c2 FROM vt0, vt1 GROUP BY vt0.c1, vt0.c0, vt1.c0, vt0.c2;
SELECT ALL vt0.c1, vt0.c0, vt1.c0, vt0.c2 FROM vt0, vt1 GROUP BY vt0.c1, vt0.c0, vt1.c0, vt0.c2 HAVING SUM(CAST(TOTAL(vt0.c2) AS INTEGER)) UNION ALL SELECT vt0.c1, vt0.c0, vt1.c0, vt0.c2 FROM vt0, vt1 GROUP BY vt0.c1, vt0.c0, vt1.c0, vt0.c2 HAVING (NOT (SUM(CAST(TOTAL(vt0.c2) AS INTEGER)))) UNION ALL SELECT ALL vt0.c1, vt0.c0, vt1.c0, vt0.c2 FROM vt0, vt1 GROUP BY vt0.c1, vt0.c0, vt1.c0, vt0.c2 HAVING ((SUM(CAST(TOTAL(vt0.c2) AS INTEGER))) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE ((('Pc')IS(CAST(vt0.c1 AS REAL)))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((('Pc')IS(CAST(vt0.c1 AS REAL)))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((('Pc')IS(CAST(vt0.c1 AS REAL)))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (CAST((- (vt1.c0)) AS INTEGER)) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (CAST((- (vt1.c0)) AS INTEGER)))) UNION SELECT DISTINCT * FROM vt1 WHERE (((CAST((- (vt1.c0)) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL t0.c46, vt1.c0, t0.c50 FROM vt1, vt0, t0 GROUP BY t0.c46, vt1.c0, t0.c50;
SELECT ALL t0.c46, vt1.c0, t0.c50 FROM vt1, vt0, t0 WHERE (TYPEOF(vt0.c1)) GROUP BY t0.c46, vt1.c0, t0.c50 UNION SELECT ALL t0.c46, vt1.c0, t0.c50 FROM vt1, vt0, t0 WHERE ((NOT (TYPEOF(vt0.c1)))) GROUP BY t0.c46, vt1.c0, t0.c50 UNION SELECT t0.c46, vt1.c0, t0.c50 FROM vt1, vt0, t0 WHERE (((TYPEOF(vt0.c1)) ISNULL)) GROUP BY t0.c46, vt1.c0, t0.c50;
SELECT ALL t0.c46, vt1.c0, t0.c50 FROM vt1, vt0, t0 GROUP BY t0.c46, vt1.c0, t0.c50;
SELECT ALL vt0.c1, t0.c50 FROM t0, vt0 GROUP BY vt0.c1, t0.c50;
SELECT ALL vt0.c1, t0.c50 FROM t0, vt0 GROUP BY vt0.c1, t0.c50 HAVING GROUP_CONCAT(CASE WHEN COUNT(t0.c50) THEN TOTAL(AVG(vt0.c2)) ELSE COUNT(*) END) UNION ALL SELECT vt0.c1, t0.c50 FROM t0, vt0 GROUP BY vt0.c1, t0.c50 HAVING (NOT (GROUP_CONCAT(CASE WHEN COUNT(t0.c50) THEN TOTAL(AVG(vt0.c2)) ELSE COUNT(*) END))) UNION ALL SELECT vt0.c1, t0.c50 FROM t0, vt0 NOT INDEXED GROUP BY vt0.c1, t0.c50 HAVING ((GROUP_CONCAT(CASE WHEN COUNT(t0.c50) THEN TOTAL(AVG(vt0.c2)) ELSE COUNT(*) END)) ISNULL);
SELECT ALL * FROM t0, vt0;
SELECT ALL * FROM t0, vt0 WHERE (NULL) UNION ALL SELECT * FROM t0, vt0 WHERE ((NOT (NULL))) UNION ALL SELECT * FROM t0, vt0 WHERE (((NULL) ISNULL));
SELECT ALL * FROM t0, vt0;
SELECT DISTINCT vt0.c1, vt1.c0 FROM vt0, vt1;
SELECT DISTINCT vt0.c1, vt1.c0 FROM vt0, vt1 WHERE ((+ ((((vt0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c1)))))) UNION SELECT DISTINCT vt0.c1, vt1.c0 FROM vt0, vt1 WHERE ((NOT ((+ ((((vt0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c1)))))))) UNION SELECT DISTINCT vt0.c1, vt1.c0 FROM vt0, vt1 WHERE ((((+ ((((vt0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c1)))))) ISNULL));
SELECT DISTINCT vt0.c1, vt1.c0 FROM vt0, vt1;
SELECT vt1.c0 FROM vt1 INDEXED BY i72 GROUP BY vt1.c0;
SELECT vt1.c0, t0.c50 FROM vt1, t0, vt0 GROUP BY vt1.c0, t0.c50;
SELECT ALL vt1.c0, t0.c50 FROM vt1, t0, vt0 GROUP BY vt1.c0, t0.c50 HAVING SUM(((t0.c0)*(AVG(MAX(SUM(t0.c46)))))) UNION ALL SELECT ALL vt1.c0, t0.c50 FROM vt1, t0, vt0 GROUP BY vt1.c0, t0.c50 HAVING (NOT (SUM(((t0.c0)*(AVG(MAX(SUM(t0.c46)))))))) UNION ALL SELECT vt1.c0, t0.c50 FROM vt1, t0, vt0 GROUP BY vt1.c0, t0.c50 HAVING ((SUM(((t0.c0)*(AVG(MAX(SUM(t0.c46))))))) ISNULL);
SELECT ALL * FROM vt1, t0;
SELECT * FROM vt1, t0 WHERE (CASE WHEN ((((t0.c0)AND(t0.c46)))OR(vt1.c0)) THEN ((vt1.c0)OR(t0.c50)) ELSE (+ (t0.c0)) END) UNION ALL SELECT ALL * FROM vt1, t0 NOT INDEXED WHERE ((NOT (CASE WHEN ((((t0.c0)AND(t0.c46)))OR(vt1.c0)) THEN ((vt1.c0)OR(t0.c50)) ELSE (+ (t0.c0)) END))) UNION ALL SELECT ALL * FROM vt1, t0 WHERE (((CASE WHEN ((((t0.c0)AND(t0.c46)))OR(vt1.c0)) THEN ((vt1.c0)OR(t0.c50)) ELSE (+ (t0.c0)) END) ISNULL));
SELECT ALL * FROM vt1, t0;
SELECT DISTINCT t0.c46, vt0.c0, vt0.c2, t0.c0, vt1.c0, vt0.c1 FROM vt1, t0 NATURAL JOIN vt0;
SELECT DISTINCT t0.c46, vt0.c0, vt0.c2, t0.c0, vt1.c0, vt0.c1 FROM vt1, t0 NATURAL JOIN vt0 WHERE (LIKE(x'', 0.7931215660832197, '0')) UNION SELECT DISTINCT t0.c46, vt0.c0, vt0.c2, t0.c0, vt1.c0, vt0.c1 FROM vt1, t0 NOT INDEXED NATURAL JOIN vt0 WHERE ((NOT (LIKE(x'', 0.7931215660832197, '0')))) UNION SELECT DISTINCT t0.c46, vt0.c0, vt0.c2, t0.c0, vt1.c0, vt0.c1 FROM vt1, t0 NATURAL JOIN vt0 WHERE (((LIKE(x'', 0.7931215660832197, '0')) ISNULL));
SELECT DISTINCT t0.c46, vt0.c0, vt0.c2, t0.c0, vt1.c0, vt0.c1 FROM vt1, t0 NATURAL JOIN vt0;
SELECT t0.c0, t0.c50 FROM t0 GROUP BY t0.c0, t0.c50;
SELECT ALL t0.c0, t0.c50 FROM t0 WHERE ((NOT (t0.c46 COLLATE RTRIM))) GROUP BY t0.c0, t0.c50 UNION SELECT t0.c0, t0.c50 FROM t0 WHERE ((NOT ((NOT (t0.c46 COLLATE RTRIM))))) GROUP BY t0.c0, t0.c50 UNION SELECT ALL t0.c0, t0.c50 FROM t0 WHERE ((((NOT (t0.c46 COLLATE RTRIM))) ISNULL)) GROUP BY t0.c0, t0.c50;
SELECT t0.c0, t0.c50 FROM t0 GROUP BY t0.c0, t0.c50;
SELECT t0.c50, t0.c46, t0.c0, vt0.c1, vt0.c0, vt0.c2 FROM vt0, vt1, t0 GROUP BY t0.c50, t0.c46, t0.c0, vt0.c1, vt0.c0, vt0.c2;
SELECT ALL t0.c50, t0.c46, t0.c0, vt0.c1, vt0.c0, vt0.c2 FROM vt0, vt1, t0 GROUP BY t0.c50, t0.c46, t0.c0, vt0.c1, vt0.c0, vt0.c2 HAVING MIN(TOTAL(SUM(TOTAL('-360537669')))) UNION ALL SELECT t0.c50, t0.c46, t0.c0, vt0.c1, vt0.c0, vt0.c2 FROM vt0, vt1, t0 GROUP BY t0.c50, t0.c46, t0.c0, vt0.c1, vt0.c0, vt0.c2 HAVING (NOT (MIN(TOTAL(SUM(TOTAL('-360537669')))))) UNION ALL SELECT ALL t0.c50, t0.c46, t0.c0, vt0.c1, vt0.c0, vt0.c2 FROM vt0, vt1, t0 GROUP BY t0.c50, t0.c46, t0.c0, vt0.c1, vt0.c0, vt0.c2 HAVING ((MIN(TOTAL(SUM(TOTAL('-360537669'))))) ISNULL);
SELECT vt0.c0, vt1.c0 FROM vt0, vt1;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((((((NULL)AND(vt0.c1)))AND(vt0.c2)) IN ())) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((NOT ((((((NULL)AND(vt0.c1)))AND(vt0.c2)) IN ())))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((((((((NULL)AND(vt0.c1)))AND(vt0.c2)) IN ())) ISNULL));
SELECT vt0.c0, vt1.c0 FROM vt0, vt1;
SELECT DISTINCT vt0.c2 FROM vt0;
SELECT DISTINCT vt0.c2 FROM vt0 WHERE (((((vt0.c1)*(vt0.c1)))GLOB((((vt0.c1, vt0.c2, vt0.c0, vt0.c2, vt0.c1))<=((vt0.c1, vt0.c2, vt0.c0, vt0.c2, vt0.c0)))))) UNION SELECT DISTINCT vt0.c2 FROM vt0 WHERE ((NOT (((((vt0.c1)*(vt0.c1)))GLOB((((vt0.c1, vt0.c2, vt0.c0, vt0.c2, vt0.c1))<=((vt0.c1, vt0.c2, vt0.c0, vt0.c2, vt0.c0)))))))) UNION SELECT DISTINCT vt0.c2 FROM vt0 WHERE (((((((vt0.c1)*(vt0.c1)))GLOB((((vt0.c1, vt0.c2, vt0.c0, vt0.c2, vt0.c1))<=((vt0.c1, vt0.c2, vt0.c0, vt0.c2, vt0.c0)))))) ISNULL));
SELECT DISTINCT vt0.c2 FROM vt0;
SELECT ALL t0.c0, t0.c50, vt0.c2 FROM t0, vt0 GROUP BY t0.c0, t0.c50, vt0.c2;
SELECT ALL t0.c0, t0.c50, vt0.c2 FROM t0, vt0 WHERE (LIKE((((vt0.c0)) NOT BETWEEN ((x'')) AND ((t0.c46))), CASE vt0.c0  WHEN t0.c0 THEN t0.c46 WHEN vt0.c1 THEN t0.c50 WHEN vt0.c0 THEN t0.c0 ELSE x'bcc1' END)) GROUP BY t0.c0, t0.c50, vt0.c2 UNION SELECT ALL t0.c0, t0.c50, vt0.c2 FROM t0, vt0 WHERE ((NOT (LIKE((((vt0.c0)) NOT BETWEEN ((x'')) AND ((t0.c46))), CASE vt0.c0  WHEN t0.c0 THEN t0.c46 WHEN vt0.c1 THEN t0.c50 WHEN vt0.c0 THEN t0.c0 ELSE x'bcc1' END)))) GROUP BY t0.c0, t0.c50, vt0.c2 UNION SELECT ALL t0.c0, t0.c50, vt0.c2 FROM t0, vt0 WHERE (((LIKE((((vt0.c0)) NOT BETWEEN ((x'')) AND ((t0.c46))), CASE vt0.c0  WHEN t0.c0 THEN t0.c46 WHEN vt0.c1 THEN t0.c50 WHEN vt0.c0 THEN t0.c0 ELSE x'bcc1' END)) ISNULL)) GROUP BY t0.c0, t0.c50, vt0.c2;
SELECT ALL t0.c0, t0.c50, vt0.c2 FROM t0, vt0 GROUP BY t0.c0, t0.c50, vt0.c2;
SELECT ALL vt0.c1, vt1.c0, vt0.c0, vt0.c2 FROM vt0, vt1 GROUP BY vt0.c1, vt1.c0, vt0.c0, vt0.c2;
SELECT vt0.c1, vt1.c0, vt0.c0, vt0.c2 FROM vt0, vt1 GROUP BY vt0.c1, vt1.c0, vt0.c0, vt0.c2 HAVING SUM(SUM(vt0.c2)) UNION ALL SELECT vt0.c1, vt1.c0, vt0.c0, vt0.c2 FROM vt0, vt1 GROUP BY vt0.c1, vt1.c0, vt0.c0, vt0.c2 HAVING (NOT (SUM(SUM(vt0.c2)))) UNION ALL SELECT vt0.c1, vt1.c0, vt0.c0, vt0.c2 FROM vt0, vt1 GROUP BY vt0.c1, vt1.c0, vt0.c0, vt0.c2 HAVING ((SUM(SUM(vt0.c2))) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (((((vt1.c0)OR(vt1.c0)))AND((((NULL))=((vt1.c0)))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0)OR(vt1.c0)))AND((((NULL))==((vt1.c0)))))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((((((vt1.c0)OR(vt1.c0)))AND((((NULL))=((vt1.c0)))))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0, t0.c46, t0.c0, vt0.c1 FROM vt1, vt0, t0;
SELECT DISTINCT vt1.c0, t0.c46, t0.c0, vt0.c1 FROM vt1, vt0, t0 WHERE (t0.c46) UNION SELECT DISTINCT vt1.c0, t0.c46, t0.c0, vt0.c1 FROM vt1, vt0, t0 WHERE ((NOT (t0.c46))) UNION SELECT DISTINCT vt1.c0, t0.c46, t0.c0, vt0.c1 FROM vt1, vt0, t0 WHERE (((t0.c46) ISNULL));
SELECT DISTINCT vt1.c0, t0.c46, t0.c0, vt0.c1 FROM vt1, vt0, t0;
SELECT ALL vt1.c0, t0.c50 FROM vt0, vt1 CROSS JOIN t0 ON ((((vt1.c0) NOT NULL))||(CAST(vt0.c0 AS TEXT))) GROUP BY vt1.c0, t0.c50;
SELECT ALL vt1.c0, t0.c50 FROM vt0, vt1 CROSS JOIN t0 ON ((((vt1.c0) NOT NULL))||(CAST(vt0.c0 AS TEXT))) WHERE (CASE WHEN t0.c46 THEN 'Xび' WHEN vt1.c0 THEN t0.c50 WHEN vt0.c0 THEN t0.c50 WHEN t0.c0 THEN t0.c46 WHEN vt0.c2 THEN vt0.c1 ELSE t0.c0 END COLLATE RTRIM) GROUP BY vt1.c0, t0.c50 UNION SELECT ALL vt1.c0, t0.c50 FROM vt0, vt1 CROSS JOIN t0 ON ((((vt1.c0) NOT NULL))||(CAST(vt0.c0 AS TEXT))) WHERE ((NOT (CASE WHEN t0.c46 THEN 'Xび' WHEN vt1.c0 THEN t0.c50 WHEN vt0.c0 THEN t0.c50 WHEN t0.c0 THEN t0.c46 WHEN vt0.c2 THEN vt0.c1 ELSE t0.c0 END COLLATE RTRIM))) GROUP BY vt1.c0, t0.c50 UNION SELECT vt1.c0, t0.c50 FROM vt0, vt1 CROSS JOIN t0 ON ((((vt1.c0) NOT NULL))||(CAST(vt0.c0 AS TEXT))) WHERE (((CASE WHEN t0.c46 THEN 'Xび' WHEN vt1.c0 THEN t0.c50 WHEN vt0.c0 THEN t0.c50 WHEN t0.c0 THEN t0.c46 WHEN vt0.c2 THEN vt0.c1 ELSE t0.c0 END COLLATE RTRIM) ISNULL)) GROUP BY vt1.c0, t0.c50;
SELECT ALL vt1.c0, t0.c50 FROM vt0, vt1 CROSS JOIN t0 ON ((((vt1.c0) NOT NULL))||(CAST(vt0.c0 AS TEXT))) GROUP BY vt1.c0, t0.c50;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c0 FROM t0 NOT INDEXED GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c0 FROM t0 NOT INDEXED GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL vt0.c2, vt0.c1 FROM vt0;
SELECT vt0.c2, vt0.c1 FROM vt0 WHERE (((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))AND(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c2)))))OR(((vt0.c1)+(vt0.c0))))) UNION ALL SELECT ALL vt0.c2, vt0.c1 FROM vt0 WHERE ((NOT (((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))AND(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c2)))))OR(((vt0.c1)+(vt0.c0))))))) UNION ALL SELECT vt0.c2, vt0.c1 FROM vt0 WHERE (((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))AND(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c2)))))OR(((vt0.c1)+(vt0.c0))))) ISNULL));
SELECT ALL vt0.c2, vt0.c1 FROM vt0;
SELECT DISTINCT t0.c50, vt0.c2, vt0.c0, vt0.c1 FROM t0 LEFT OUTER JOIN vt0 ON CAST(vt0.c1 AS INTEGER) INNER JOIN vt1 ON (((+ (vt0.c2))) BETWEEN (t0.c46) AND (t0.c46 COLLATE RTRIM));
SELECT DISTINCT t0.c50, vt0.c2, vt0.c0, vt0.c1 FROM t0 LEFT OUTER JOIN vt0 ON CAST(vt0.c1 AS INTEGER) INNER JOIN vt1 ON (((+ (vt0.c2))) BETWEEN (t0.c46) AND (t0.c46 COLLATE RTRIM)) WHERE (((((vt0.c1)/(vt0.c1)))>=(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c2))))) UNION SELECT DISTINCT t0.c50, vt0.c2, vt0.c0, vt0.c1 FROM t0 LEFT OUTER JOIN vt0 ON CAST(vt0.c1 AS INTEGER) INNER JOIN vt1 ON (((+ (vt0.c2))) BETWEEN (t0.c46) AND (t0.c46 COLLATE RTRIM)) WHERE ((NOT (((((vt0.c1)/(vt0.c1)))>=(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c2))))))) UNION SELECT DISTINCT t0.c50, vt0.c2, vt0.c0, vt0.c1 FROM t0 LEFT OUTER JOIN vt0 ON CAST(vt0.c1 AS INTEGER) INNER JOIN vt1 ON (((+ (vt0.c2))) BETWEEN (t0.c46) AND (t0.c46 COLLATE RTRIM)) WHERE (((((((vt0.c1)/(vt0.c1)))>=(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c2))))) ISNULL));
SELECT DISTINCT t0.c50, vt0.c2, vt0.c0, vt0.c1 FROM t0 LEFT OUTER JOIN vt0 ON CAST(vt0.c1 AS INTEGER) INNER JOIN vt1 ON (((+ (vt0.c2))) BETWEEN (t0.c46) AND (t0.c46 COLLATE RTRIM));
SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, vt0 WHERE (CAST(vt0.c1 AS TEXT) COLLATE RTRIM) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt1, vt0 WHERE ((NOT (CAST(vt0.c1 AS TEXT) COLLATE RTRIM))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt1, vt0 WHERE (((CAST(vt0.c1 AS TEXT) COLLATE RTRIM) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT ALL t0.c0, vt0.c2, t0.c46 FROM vt0 RIGHT OUTER JOIN t0 ON CASE WHEN ((vt0.c2) IS TRUE) THEN ((vt0.c0)||(vt1.c0)) END LEFT OUTER JOIN vt1 ON (((((((((((x'3bcb')) NOT BETWEEN ((t0.c0)) AND ((0.3907631152009228))))AND(CAST('698219203' AS INTEGER))))OR(((vt0.c2) NOT BETWEEN (t0.c46) AND (t0.c46)))))AND((('3LN(C')>=(t0.c46)))))AND(CASE vt0.c2  WHEN t0.c0 THEN vt0.c1 ELSE vt0.c0 END)) GROUP BY t0.c0, vt0.c2, t0.c46;
SELECT ALL MAX(((((((t0.c0) NOTNULL))AND(vt0.c0)))OR(((((((((t0.c46)OR(t0.c46)))AND(vt0.c2)))AND(t0.c0)))OR(vt1.c0))))) FROM vt0, vt1, t0;
SELECT t0.c46, t0.c50, t0.c0 FROM vt1 LEFT OUTER JOIN t0 ON (t0.c46 IN ());
SELECT t0.c46, t0.c50, t0.c0 FROM vt1 LEFT OUTER JOIN t0 ON (t0.c46 IN ()) WHERE (CAST((~ (t0.c50)) AS REAL)) UNION ALL SELECT ALL t0.c46, t0.c50, t0.c0 FROM vt1 LEFT OUTER JOIN t0 ON (t0.c46 IN ()) WHERE ((NOT (CAST((~ (t0.c50)) AS REAL)))) UNION ALL SELECT t0.c46, t0.c50, t0.c0 FROM vt1 LEFT OUTER JOIN t0 ON (t0.c46 IN ()) WHERE (((CAST((~ (t0.c50)) AS REAL)) ISNULL));
SELECT t0.c46, t0.c50, t0.c0 FROM vt1 LEFT OUTER JOIN t0 ON (t0.c46 IN ());
SELECT DISTINCT t0.c46 FROM vt1 RIGHT OUTER JOIN t0 ON t0.c46;
SELECT DISTINCT t0.c46 FROM vt1 RIGHT OUTER JOIN t0 ON t0.c46 WHERE (((((t0.c0) BETWEEN (t0.c46) AND (t0.c0)))IS NOT(((t0.c50) BETWEEN (t0.c0) AND (t0.c0))))) UNION SELECT DISTINCT t0.c46 FROM vt1 RIGHT OUTER JOIN t0 ON t0.c46 WHERE ((NOT (((((t0.c0) BETWEEN (t0.c46) AND (t0.c0)))IS NOT(((t0.c50) BETWEEN (t0.c0) AND (t0.c0))))))) UNION SELECT DISTINCT t0.c46 FROM vt1 RIGHT OUTER JOIN t0 ON t0.c46 WHERE (((((((t0.c0) BETWEEN (t0.c46) AND (t0.c0)))IS NOT(((t0.c50) BETWEEN (t0.c0) AND (t0.c0))))) ISNULL));
SELECT DISTINCT t0.c46 FROM vt1 RIGHT OUTER JOIN t0 ON t0.c46;
SELECT ALL t0.c46, vt0.c2, vt0.c1, t0.c0 FROM vt1 CROSS JOIN vt0 ON CASE vt1.c0  WHEN ((t0.c46) NOT NULL) THEN ((t0.c0) IS FALSE) END INNER JOIN t0 ON CASE (((t0.c46, vt1.c0, vt0.c0)) NOT BETWEEN ((t0.c0, vt0.c2, t0.c46)) AND ((vt1.c0, t0.c46, NULL)))  WHEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (t0.c46)) THEN ((((((((t0.c0)AND(t0.c0)))OR(vt1.c0)))AND(vt0.c2)))AND(vt1.c0)) WHEN t0.c46 COLLATE RTRIM THEN vt0.c0 WHEN (((t0.c46)) NOT BETWEEN ((7.91675972E8)) AND ((vt1.c0))) THEN t0.c0 COLLATE NOCASE END GROUP BY t0.c46, vt0.c2, vt0.c1, t0.c0;
SELECT ALL t0.c46, vt0.c2, vt0.c1, t0.c0 FROM vt1 CROSS JOIN vt0 ON CASE vt1.c0  WHEN ((t0.c46) NOT NULL) THEN ((t0.c0) IS FALSE) END INNER JOIN t0 ON CASE (((t0.c46, vt1.c0, vt0.c0)) NOT BETWEEN ((t0.c0, vt0.c2, t0.c46)) AND ((vt1.c0, t0.c46, NULL)))  WHEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (t0.c46)) THEN ((((((((t0.c0)AND(t0.c0)))OR(vt1.c0)))AND(vt0.c2)))AND(vt1.c0)) WHEN t0.c46 COLLATE RTRIM THEN vt0.c0 WHEN (((t0.c46)) NOT BETWEEN ((7.91675972E8)) AND ((vt1.c0))) THEN t0.c0 COLLATE NOCASE END WHERE (((((~ (t0.c0))))>((0.5930279860057097)))) GROUP BY t0.c46, vt0.c2, vt0.c1, t0.c0 UNION SELECT ALL t0.c46, vt0.c2, vt0.c1, t0.c0 FROM vt1 CROSS JOIN vt0 ON CASE vt1.c0  WHEN ((t0.c46) NOT NULL) THEN ((t0.c0) IS FALSE) END INNER JOIN t0 ON CASE (((t0.c46, vt1.c0, vt0.c0)) NOT BETWEEN ((t0.c0, vt0.c2, t0.c46)) AND ((vt1.c0, t0.c46, NULL)))  WHEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (t0.c46)) THEN ((((((((t0.c0)AND(t0.c0)))OR(vt1.c0)))AND(vt0.c2)))AND(vt1.c0)) WHEN t0.c46 COLLATE RTRIM THEN vt0.c0 WHEN (((t0.c46)) NOT BETWEEN ((7.91675972E8)) AND ((vt1.c0))) THEN t0.c0 COLLATE NOCASE END WHERE ((NOT (((((~ (t0.c0))))>((0.5930279860057097)))))) GROUP BY t0.c46, vt0.c2, vt0.c1, t0.c0 UNION SELECT t0.c46, vt0.c2, vt0.c1, t0.c0 FROM vt1 CROSS JOIN vt0 ON CASE vt1.c0  WHEN ((t0.c46) NOT NULL) THEN ((t0.c0) IS FALSE) END INNER JOIN t0 ON CASE (((t0.c46, vt1.c0, vt0.c0)) NOT BETWEEN ((t0.c0, vt0.c2, t0.c46)) AND ((vt1.c0, t0.c46, NULL)))  WHEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (t0.c46)) THEN ((((((((t0.c0)AND(t0.c0)))OR(vt1.c0)))AND(vt0.c2)))AND(vt1.c0)) WHEN t0.c46 COLLATE RTRIM THEN vt0.c0 WHEN (((t0.c46)) NOT BETWEEN ((7.91675972E8)) AND ((vt1.c0))) THEN t0.c0 COLLATE NOCASE END WHERE (((((((~ (t0.c0))))>((0.5930279860057097)))) ISNULL)) GROUP BY t0.c46, vt0.c2, vt0.c1, t0.c0;
SELECT ALL t0.c46, vt0.c2, vt0.c1, t0.c0 FROM vt1 CROSS JOIN vt0 ON CASE vt1.c0  WHEN ((t0.c46) NOT NULL) THEN ((t0.c0) IS FALSE) END INNER JOIN t0 ON CASE (((t0.c46, vt1.c0, vt0.c0)) NOT BETWEEN ((t0.c0, vt0.c2, t0.c46)) AND ((vt1.c0, t0.c46, NULL)))  WHEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (t0.c46)) THEN ((((((((t0.c0)AND(t0.c0)))OR(vt1.c0)))AND(vt0.c2)))AND(vt1.c0)) WHEN t0.c46 COLLATE RTRIM THEN vt0.c0 WHEN (((t0.c46)) NOT BETWEEN ((7.91675972E8)) AND ((vt1.c0))) THEN t0.c0 COLLATE NOCASE END GROUP BY t0.c46, vt0.c2, vt0.c1, t0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(COUNT(*)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(COUNT(*)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(COUNT(*))) ISNULL);
SELECT ALL * FROM vt1, t0, vt0;
SELECT * FROM vt1, t0, vt0 WHERE (((-2093519965) NOT BETWEEN (vt0.c2) AND (t0.c50)) COLLATE BINARY) UNION ALL SELECT * FROM vt1, t0, vt0 WHERE ((NOT (((-2093519965) NOT BETWEEN (vt0.c2) AND (t0.c50)) COLLATE BINARY))) UNION ALL SELECT ALL * FROM vt1, t0, vt0 WHERE (((((-2093519965) NOT BETWEEN (vt0.c2) AND (t0.c50)) COLLATE BINARY) ISNULL));
SELECT ALL * FROM vt1, t0, vt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (json_array_length(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END, ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (json_array_length(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END, ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((json_array_length(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END, ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))) ISNULL));
SELECT t0.c46, t0.c50, t0.c0, vt0.c0 FROM t0, vt1, vt0 GROUP BY t0.c46, t0.c50, t0.c0, vt0.c0;
SELECT ALL t0.c46, t0.c50, t0.c0, vt0.c0 FROM t0, vt1, vt0 WHERE ((((vt1.c0)-(vt0.c0)) IN ())) GROUP BY t0.c46, t0.c50, t0.c0, vt0.c0 UNION SELECT t0.c46, t0.c50, t0.c0, vt0.c0 FROM t0, vt1, vt0 WHERE ((NOT ((((vt1.c0)-(vt0.c0)) IN ())))) GROUP BY t0.c46, t0.c50, t0.c0, vt0.c0 UNION SELECT ALL t0.c46, t0.c50, t0.c0, vt0.c0 FROM t0, vt1, vt0 NOT INDEXED WHERE ((((((vt1.c0)-(vt0.c0)) IN ())) ISNULL)) GROUP BY t0.c46, t0.c50, t0.c0, vt0.c0;
SELECT t0.c46, t0.c50, t0.c0, vt0.c0 FROM t0, vt1, vt0 GROUP BY t0.c46, t0.c50, t0.c0, vt0.c0;
SELECT t0.c0, vt0.c2 FROM vt1, t0 RIGHT OUTER JOIN vt0 ON LIKELIHOOD(vt0.c2, 0.9782159450081334) GROUP BY t0.c0, vt0.c2;
SELECT ALL t0.c0, vt0.c2 FROM vt1, t0 RIGHT OUTER JOIN vt0 ON LIKELIHOOD(vt0.c2, 0.9782159450081334) GROUP BY t0.c0, vt0.c2 HAVING COUNT(AVG(AVG(t0.c46))) UNION ALL SELECT ALL t0.c0, vt0.c2 FROM vt1, t0 RIGHT OUTER JOIN vt0 ON LIKELIHOOD(vt0.c2, 0.9782159450081334) GROUP BY t0.c0, vt0.c2 HAVING (NOT (COUNT(AVG(AVG(t0.c46))))) UNION ALL SELECT t0.c0, vt0.c2 FROM vt1, t0 RIGHT OUTER JOIN vt0 ON LIKELIHOOD(vt0.c2, 0.9782159450081334) GROUP BY t0.c0, vt0.c2 HAVING ((COUNT(AVG(AVG(t0.c46)))) ISNULL);
SELECT * FROM vt0, t0 RIGHT OUTER JOIN vt1 ON ((CAST(t0.c50 AS REAL))+(((t0.c0)>=(t0.c46))));
SELECT ALL * FROM vt0, t0 RIGHT OUTER JOIN vt1 ON ((CAST(t0.c50 AS REAL))+(((t0.c0)>=(t0.c46)))) WHERE (vt1.c0) UNION ALL SELECT * FROM vt0, t0 RIGHT OUTER JOIN vt1 ON ((CAST(t0.c50 AS REAL))+(((t0.c0)>=(t0.c46)))) WHERE ((NOT (vt1.c0))) UNION ALL SELECT * FROM vt0, t0 RIGHT OUTER JOIN vt1 ON ((CAST(t0.c50 AS REAL))+(((t0.c0)>=(t0.c46)))) WHERE (((vt1.c0) ISNULL));
SELECT * FROM vt0, t0 RIGHT OUTER JOIN vt1 ON ((CAST(t0.c50 AS REAL))+(((t0.c0)>=(t0.c46))));
SELECT DISTINCT vt0.c0, t0.c0, vt0.c2, vt1.c0, vt0.c1, t0.c50 FROM vt1 INNER JOIN vt0 ON CAST(CAST(vt0.c2 AS TEXT) AS BLOB) CROSS JOIN t0 ON (('224348846') BETWEEN (LAST_INSERT_ROWID()) AND (((vt0.c0)>(NULL))));
SELECT DISTINCT vt0.c0, t0.c0, vt0.c2, vt1.c0, vt0.c1, t0.c50 FROM vt1 INNER JOIN vt0 ON CAST(CAST(vt0.c2 AS TEXT) AS BLOB) CROSS JOIN t0 ON (('224348846') BETWEEN (LAST_INSERT_ROWID()) AND (((vt0.c0)>(NULL)))) WHERE (((((vt0.c2) NOT NULL)) BETWEEN (CASE WHEN t0.c50 THEN t0.c46 ELSE t0.c50 END) AND (CAST(t0.c46 AS REAL)))) UNION SELECT DISTINCT vt0.c0, t0.c0, vt0.c2, vt1.c0, vt0.c1, t0.c50 FROM vt1 INNER JOIN vt0 ON CAST(CAST(vt0.c2 AS TEXT) AS BLOB) CROSS JOIN t0 ON (('224348846') BETWEEN (LAST_INSERT_ROWID()) AND (((vt0.c0)>(NULL)))) WHERE ((NOT (((((vt0.c2) NOT NULL)) BETWEEN (CASE WHEN t0.c50 THEN t0.c46 ELSE t0.c50 END) AND (CAST(t0.c46 AS REAL)))))) UNION SELECT DISTINCT vt0.c0, t0.c0, vt0.c2, vt1.c0, vt0.c1, t0.c50 FROM vt1 INNER JOIN vt0 ON CAST(CAST(vt0.c2 AS TEXT) AS BLOB) CROSS JOIN t0 ON (('224348846') BETWEEN (LAST_INSERT_ROWID()) AND (((vt0.c0)>(NULL)))) WHERE (((((((vt0.c2) NOT NULL)) BETWEEN (CASE WHEN t0.c50 THEN t0.c46 ELSE t0.c50 END) AND (CAST(t0.c46 AS REAL)))) ISNULL));
SELECT DISTINCT vt0.c0, t0.c0, vt0.c2, vt1.c0, vt0.c1, t0.c50 FROM vt1 INNER JOIN vt0 ON CAST(CAST(vt0.c2 AS TEXT) AS BLOB) CROSS JOIN t0 ON (('224348846') BETWEEN (LAST_INSERT_ROWID()) AND (((vt0.c0)>(NULL))));
SELECT t0.c50, t0.c0, vt0.c1 FROM vt0, vt1, t0 GROUP BY t0.c50, t0.c0, vt0.c1;
SELECT ALL t0.c50, t0.c0, vt0.c1 FROM vt0, vt1, t0 WHERE (CASE CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c2 END  WHEN '-486796862' THEN vt0.c0 END) GROUP BY t0.c50, t0.c0, vt0.c1 UNION SELECT t0.c50, t0.c0, vt0.c1 FROM vt0, vt1, t0 WHERE ((NOT (CASE CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c2 END  WHEN '-486796862' THEN vt0.c0 END))) GROUP BY t0.c50, t0.c0, vt0.c1 UNION SELECT t0.c50, t0.c0, vt0.c1 FROM vt0, vt1, t0 WHERE (((CASE CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c2 END  WHEN '-486796862' THEN vt0.c0 END) ISNULL)) GROUP BY t0.c50, t0.c0, vt0.c1;
SELECT t0.c50, t0.c0, vt0.c1 FROM vt0, vt1, t0 GROUP BY t0.c50, t0.c0, vt0.c1;
SELECT t0.c46 FROM t0 GROUP BY t0.c46;
SELECT t0.c46 FROM t0 GROUP BY t0.c46 HAVING ((((t0.c50)OR(0.8886775863128713)))AND(TOTAL(t0.c0))) COLLATE RTRIM UNION ALL SELECT t0.c46 FROM t0 GROUP BY t0.c46 HAVING (NOT (((((t0.c50)OR(0.8886775863128713)))AND(TOTAL(t0.c0))) COLLATE RTRIM)) UNION ALL SELECT t0.c46 FROM t0 GROUP BY t0.c46 HAVING ((((((t0.c50)OR(0.8886775863128713)))AND(TOTAL(t0.c0))) COLLATE RTRIM) ISNULL);
SELECT t0.c46 FROM t0 GROUP BY t0.c46;
SELECT t0.c46 FROM t0 GROUP BY t0.c46 HAVING ((((t0.c50)OR(0.8886775863128713)))AND(TOTAL(t0.c0))) COLLATE RTRIM UNION ALL SELECT t0.c46 FROM t0 GROUP BY t0.c46 HAVING (NOT (((((t0.c50)OR(0.8886775863128713)))AND(TOTAL(t0.c0))) COLLATE RTRIM)) UNION ALL SELECT t0.c46 FROM t0 GROUP BY t0.c46 HAVING ((((((t0.c50)OR(0.8886775863128713)))AND(TOTAL(t0.c0))) COLLATE RTRIM) ISNULL);
SELECT t0.c46 FROM t0 GROUP BY t0.c46;
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE (((vt1.c0 COLLATE BINARY)<=(((vt1.c0)>(vt1.c0))))) UNION ALL SELECT * FROM vt1 WHERE ((NOT (((vt1.c0 COLLATE BINARY)<=(((vt1.c0)>(vt1.c0))))))) UNION ALL SELECT ALL * FROM vt1 WHERE (((((vt1.c0 COLLATE BINARY)<=(((vt1.c0)>(vt1.c0))))) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 NOT INDEXED WHERE (((((vt1.c0)OR(((vt1.c0)<(vt1.c0)))))AND(((vt1.c0)<=(vt1.c0))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((((vt1.c0)OR(((vt1.c0)<(vt1.c0)))))AND(((vt1.c0)<=(vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((((vt1.c0)OR(((vt1.c0)<(vt1.c0)))))AND(((vt1.c0)<=(vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL t0.c50 FROM t0 GROUP BY t0.c50;
SELECT ALL t0.c50 FROM t0 WHERE (NULL) GROUP BY t0.c50 UNION SELECT t0.c50 FROM t0 WHERE ((NOT (NULL))) GROUP BY t0.c50 UNION SELECT t0.c50 FROM t0 WHERE (((NULL) ISNULL)) GROUP BY t0.c50;
SELECT ALL t0.c50 FROM t0 GROUP BY t0.c50;
SELECT ALL t0.c46, t0.c50, vt0.c0 FROM vt1 LEFT OUTER JOIN t0 ON ((((((((load_extension('', vt0.c2))AND(((vt0.c2) NOT BETWEEN (t0.c46) AND (vt1.c0)))))OR(((vt0.c0)>(t0.c50)))))AND(vt1.c0)))AND(CASE vt0.c1  WHEN t0.c0 THEN t0.c0 END)) FULL OUTER JOIN vt0 ON CAST(t0.c50 COLLATE BINARY AS INTEGER) GROUP BY t0.c46, t0.c50, vt0.c0;
SELECT ALL * FROM t0 LEFT OUTER JOIN vt1 ON (- ((- (t0.c46))));
SELECT ALL * FROM t0 LEFT OUTER JOIN vt1 ON (- ((- (t0.c46)))) WHERE (t0.c46) UNION ALL SELECT * FROM t0 LEFT OUTER JOIN vt1 ON (- ((- (t0.c46)))) WHERE ((NOT (t0.c46))) UNION ALL SELECT ALL * FROM t0 LEFT OUTER JOIN vt1 ON (- ((- (t0.c46)))) WHERE (((t0.c46) ISNULL));
SELECT ALL * FROM t0 LEFT OUTER JOIN vt1 ON (- ((- (t0.c46))));
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (t0.c46) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (t0.c46))) UNION SELECT DISTINCT * FROM t0 WHERE (((t0.c46) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL vt1.c0, vt0.c1, vt0.c0, vt0.c2 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1, vt0.c0, vt0.c2;
SELECT vt1.c0, vt0.c1, vt0.c0, vt0.c2 FROM vt1, vt0 WHERE (x'') GROUP BY vt1.c0, vt0.c1, vt0.c0, vt0.c2 UNION SELECT ALL vt1.c0, vt0.c1, vt0.c0, vt0.c2 FROM vt1, vt0 WHERE ((NOT (x''))) GROUP BY vt1.c0, vt0.c1, vt0.c0, vt0.c2 UNION SELECT ALL vt1.c0, vt0.c1, vt0.c0, vt0.c2 FROM vt1, vt0 WHERE (((x'') ISNULL)) GROUP BY vt1.c0, vt0.c1, vt0.c0, vt0.c2;
SELECT ALL vt1.c0, vt0.c1, vt0.c0, vt0.c2 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1, vt0.c0, vt0.c2;
SELECT vt0.c0 FROM t0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT(COUNT(TOTAL(MAX(MAX(SUM(t0.c0)))))) UNION ALL SELECT vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(COUNT(TOTAL(MAX(MAX(SUM(t0.c0)))))))) UNION ALL SELECT ALL vt0.c0 FROM t0 NOT INDEXED, vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(COUNT(TOTAL(MAX(MAX(SUM(t0.c0))))))) ISNULL);
SELECT ALL t0.c50 FROM vt1, t0;
SELECT t0.c50 FROM vt1, t0 WHERE (((QUOTE(t0.c0))*(vt1.c0 COLLATE NOCASE))) UNION ALL SELECT ALL t0.c50 FROM vt1, t0 WHERE ((NOT (((QUOTE(t0.c0))*(vt1.c0 COLLATE NOCASE))))) UNION ALL SELECT ALL t0.c50 FROM vt1, t0 WHERE (((((QUOTE(t0.c0))*(vt1.c0 COLLATE NOCASE))) ISNULL));
SELECT ALL t0.c50 FROM vt1, t0;
SELECT DISTINCT t0.c50 FROM vt0, vt1, t0;
SELECT DISTINCT t0.c50 FROM vt0, vt1, t0 WHERE (((vt1.c0)-(t0.c0)) COLLATE RTRIM) UNION SELECT DISTINCT t0.c50 FROM vt0, vt1, t0 WHERE ((NOT (((vt1.c0)-(t0.c0)) COLLATE RTRIM))) UNION SELECT DISTINCT t0.c50 FROM vt0, vt1, t0 WHERE (((((vt1.c0)-(t0.c0)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT t0.c50 FROM vt0, vt1, t0;
SELECT ALL t0.c46, vt0.c2, vt1.c0 FROM vt0, t0, vt1 GROUP BY t0.c46, vt0.c2, vt1.c0;
SELECT t0.c46, vt0.c2, vt1.c0 FROM vt0, t0, vt1 WHERE (((t0.c50)GLOB(vt0.c2)) COLLATE BINARY) GROUP BY t0.c46, vt0.c2, vt1.c0 UNION SELECT ALL t0.c46, vt0.c2, vt1.c0 FROM vt0, t0, vt1 WHERE ((NOT (((t0.c50)GLOB(vt0.c2)) COLLATE BINARY))) GROUP BY t0.c46, vt0.c2, vt1.c0 UNION SELECT t0.c46, vt0.c2, vt1.c0 FROM vt0, t0, vt1 WHERE (((((t0.c50)GLOB(vt0.c2)) COLLATE BINARY) ISNULL)) GROUP BY t0.c46, vt0.c2, vt1.c0;
SELECT ALL t0.c46, vt0.c2, vt1.c0 FROM vt0, t0, vt1 GROUP BY t0.c46, vt0.c2, vt1.c0;
SELECT t0.c50, vt0.c2, vt0.c1, t0.c46, vt0.c0, t0.c0 FROM t0, vt0 GROUP BY t0.c50, vt0.c2, vt0.c1, t0.c46, vt0.c0, t0.c0;
SELECT t0.c50, vt0.c2, vt0.c1, t0.c46, vt0.c0, t0.c0 FROM t0, vt0 GROUP BY t0.c50, vt0.c2, vt0.c1, t0.c46, vt0.c0, t0.c0 HAVING GROUP_CONCAT(SUM(TOTAL(COUNT(*)))) UNION ALL SELECT ALL t0.c50, vt0.c2, vt0.c1, t0.c46, vt0.c0, t0.c0 FROM t0, vt0 GROUP BY t0.c50, vt0.c2, vt0.c1, t0.c46, vt0.c0, t0.c0 HAVING (NOT (GROUP_CONCAT(SUM(TOTAL(COUNT(*)))))) UNION ALL SELECT ALL t0.c50, vt0.c2, vt0.c1, t0.c46, vt0.c0, t0.c0 FROM t0, vt0 GROUP BY t0.c50, vt0.c2, vt0.c1, t0.c46, vt0.c0, t0.c0 HAVING ((GROUP_CONCAT(SUM(TOTAL(COUNT(*))))) ISNULL);
SELECT vt1.c0, vt0.c1, vt0.c0, vt0.c2 FROM vt0, vt1;
SELECT vt1.c0, vt0.c1, vt0.c0, vt0.c2 FROM vt0, vt1 WHERE (((((((((((((vt1.c0)AND(vt0.c1)))AND(vt0.c1)))OR((((vt1.c0))>((vt1.c0))))))AND(vt0.c2 COLLATE BINARY)))OR(CAST(vt0.c1 AS REAL))))OR(vt0.c1))) UNION ALL SELECT vt1.c0, vt0.c1, vt0.c0, vt0.c2 FROM vt0, vt1 WHERE ((NOT (((((((((((((vt1.c0)AND(vt0.c1)))AND(vt0.c1)))OR((((vt1.c0))>((vt1.c0))))))AND(vt0.c2 COLLATE BINARY)))OR(CAST(vt0.c1 AS REAL))))OR(vt0.c1))))) UNION ALL SELECT vt1.c0, vt0.c1, vt0.c0, vt0.c2 FROM vt0 NOT INDEXED, vt1 WHERE (((((((((((((((vt1.c0)AND(vt0.c1)))AND(vt0.c1)))OR((((vt1.c0))>((vt1.c0))))))AND(vt0.c2 COLLATE BINARY)))OR(CAST(vt0.c1 AS REAL))))OR(vt0.c1))) ISNULL));
SELECT vt1.c0, vt0.c1, vt0.c0, vt0.c2 FROM vt0, vt1;
SELECT DISTINCT vt1.c0, vt0.c0, vt0.c1, t0.c0 FROM t0, vt0, vt1 INDEXED BY i46;
SELECT ALL vt0.c2, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c1, vt0.c0;
SELECT vt0.c2, vt0.c1, vt0.c0 FROM vt0 WHERE (((((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c0)))=(CAST(vt0.c1 AS BLOB)))) GROUP BY vt0.c2, vt0.c1, vt0.c0 UNION SELECT ALL vt0.c2, vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c0)))=(CAST(vt0.c1 AS BLOB)))))) GROUP BY vt0.c2, vt0.c1, vt0.c0 UNION SELECT vt0.c2, vt0.c1, vt0.c0 FROM vt0 WHERE (((((((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c0)))==(CAST(vt0.c1 AS BLOB)))) ISNULL)) GROUP BY vt0.c2, vt0.c1, vt0.c0;
SELECT ALL vt0.c2, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c1, vt0.c0;
SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1;
SELECT vt0.c2, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1 HAVING (((vt0.c0 IN ()))OR(COUNT(COUNT(vt0.c2)))) UNION ALL SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1 HAVING (NOT ((((vt0.c0 IN ()))OR(COUNT(COUNT(vt0.c2)))))) UNION ALL SELECT vt0.c2, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1 HAVING (((((vt0.c0 IN ()))OR(COUNT(COUNT(vt0.c2))))) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE ((((((((((((NULL)OR(vt1.c0)))OR('83738639')))AND(vt1.c0)))OR(0.8959026844310003))))<((((('')) BETWEEN ((vt1.c0)) AND ((vt1.c0))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((((((((((NULL)OR(vt1.c0)))OR('83738639')))AND(vt1.c0)))OR(0.8959026844310003))))<((((('')) BETWEEN ((vt1.c0)) AND ((vt1.c0))))))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((((((((((((((NULL)OR(vt1.c0)))OR('83738639')))AND(vt1.c0)))OR(0.8959026844310003))))<((((('')) BETWEEN ((vt1.c0)) AND ((vt1.c0))))))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT t0.c46 FROM t0 CROSS JOIN vt1 ON (((((('^4tFXv0fk')AND(vt1.c0)))OR(0x354d588a))) BETWEEN (((vt1.c0)IS NOT(vt1.c0))) AND (x''));
SELECT DISTINCT t0.c46 FROM t0 CROSS JOIN vt1 ON (((((('^4tFXv0fk')AND(vt1.c0)))OR(0X354d588a))) BETWEEN (((vt1.c0)IS NOT(vt1.c0))) AND (x'')) WHERE (t0.c0) UNION SELECT DISTINCT t0.c46 FROM t0 CROSS JOIN vt1 ON (((((('^4tFXv0fk')AND(vt1.c0)))OR(0x354d588a))) BETWEEN (((vt1.c0)IS NOT(vt1.c0))) AND (x'')) WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT t0.c46 FROM t0 CROSS JOIN vt1 ON (((((('^4tFXv0fk')AND(vt1.c0)))OR(0X354d588a))) BETWEEN (((vt1.c0)IS NOT(vt1.c0))) AND (x'')) WHERE (((t0.c0) ISNULL));
SELECT DISTINCT t0.c46 FROM t0 CROSS JOIN vt1 ON (((((('^4tFXv0fk')AND(vt1.c0)))OR(0x354d588a))) BETWEEN (((vt1.c0)IS NOT(vt1.c0))) AND (x''));
SELECT ALL t0.c50, t0.c0 FROM t0 GROUP BY t0.c50, t0.c0;
SELECT t0.c50, t0.c0 FROM t0 WHERE (CASE 'FI'  WHEN CASE WHEN t0.c46 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c50 THEN t0.c46 WHEN t0.c46 THEN t0.c46 WHEN t0.c46 THEN t0.c0 END THEN t0.c46 ELSE (((t0.c50)) BETWEEN ((t0.c46)) AND ((t0.c46))) END) GROUP BY t0.c50, t0.c0 UNION SELECT t0.c50, t0.c0 FROM t0 WHERE ((NOT (CASE 'FI'  WHEN CASE WHEN t0.c46 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c50 THEN t0.c46 WHEN t0.c46 THEN t0.c46 WHEN t0.c46 THEN t0.c0 END THEN t0.c46 ELSE (((t0.c50)) BETWEEN ((t0.c46)) AND ((t0.c46))) END))) GROUP BY t0.c50, t0.c0 UNION SELECT t0.c50, t0.c0 FROM t0 WHERE (((CASE 'FI'  WHEN CASE WHEN t0.c46 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c50 THEN t0.c46 WHEN t0.c46 THEN t0.c46 WHEN t0.c46 THEN t0.c0 END THEN t0.c46 ELSE (((t0.c50)) BETWEEN ((t0.c46)) AND ((t0.c46))) END) ISNULL)) GROUP BY t0.c50, t0.c0;
SELECT ALL t0.c50, t0.c0 FROM t0 GROUP BY t0.c50, t0.c0;
SELECT ALL vt1.c0, t0.c50 FROM vt1 INNER JOIN t0 ON '531397673' GROUP BY vt1.c0, t0.c50;
SELECT ALL vt1.c0, t0.c50 FROM vt1 INNER JOIN t0 ON '531397673' GROUP BY vt1.c0, t0.c50 HAVING GROUP_CONCAT(GROUP_CONCAT(SUM(GROUP_CONCAT(t0.c0)))) UNION ALL SELECT vt1.c0, t0.c50 FROM vt1 INNER JOIN t0 ON '531397673' GROUP BY vt1.c0, t0.c50 HAVING (NOT (GROUP_CONCAT(GROUP_CONCAT(SUM(GROUP_CONCAT(t0.c0)))))) UNION ALL SELECT vt1.c0, t0.c50 FROM vt1 INNER JOIN t0 ON '531397673' GROUP BY vt1.c0, t0.c50 HAVING ((GROUP_CONCAT(GROUP_CONCAT(SUM(GROUP_CONCAT(t0.c0))))) ISNULL);
SELECT ALL MAX(vt0.c2) FROM t0, vt0 ORDER BY (((vt0.c0 IN ())) BETWEEN (((48427288) IS FALSE)) AND (((vt0.c1)>=(t0.c46)))) ASC;
SELECT ALL vt0.c1, vt1.c0, t0.c46, t0.c0 FROM vt1, vt0, t0;
SELECT ALL vt0.c1, vt1.c0, t0.c46, t0.c0 FROM vt1, vt0, t0 WHERE (ABS(((((vt1.c0)AND(t0.c50)))OR(t0.c46)))) UNION ALL SELECT vt0.c1, vt1.c0, t0.c46, t0.c0 FROM vt1, vt0, t0 WHERE ((NOT (ABS(((((vt1.c0)AND(t0.c50)))OR(t0.c46)))))) UNION ALL SELECT vt0.c1, vt1.c0, t0.c46, t0.c0 FROM vt1, vt0, t0 WHERE (((ABS(((((vt1.c0)AND(t0.c50)))OR(t0.c46)))) ISNULL));
SELECT ALL vt0.c1, vt1.c0, t0.c46, t0.c0 FROM vt1, vt0, t0;
SELECT DISTINCT vt0.c2, t0.c46 FROM vt0, t0, vt1;
SELECT DISTINCT vt0.c2, t0.c46 FROM vt0, t0, vt1 WHERE (vt0.c2) UNION SELECT DISTINCT vt0.c2, t0.c46 FROM vt0, t0, vt1 WHERE ((NOT (vt0.c2))) UNION SELECT DISTINCT vt0.c2, t0.c46 FROM vt0, t0, vt1 WHERE (((vt0.c2) ISNULL));
SELECT DISTINCT vt0.c2, t0.c46 FROM vt0, t0, vt1;
SELECT t0.c0, vt0.c2, vt0.c0, vt0.c1, t0.c46, vt1.c0 FROM t0, vt0, vt1 GROUP BY t0.c0, vt0.c2, vt0.c0, vt0.c1, t0.c46, vt1.c0;
SELECT t0.c0, vt0.c2, vt0.c0, vt0.c1, t0.c46, vt1.c0 FROM t0, vt0, vt1 WHERE (((((0.1752598143763161) NOTNULL))>=(t0.c0 COLLATE BINARY))) GROUP BY t0.c0, vt0.c2, vt0.c0, vt0.c1, t0.c46, vt1.c0 UNION SELECT ALL t0.c0, vt0.c2, vt0.c0, vt0.c1, t0.c46, vt1.c0 FROM t0, vt0, vt1 WHERE ((NOT (((((0.1752598143763161) NOTNULL))>=(t0.c0 COLLATE BINARY))))) GROUP BY t0.c0, vt0.c2, vt0.c0, vt0.c1, t0.c46, vt1.c0 UNION SELECT ALL t0.c0, vt0.c2, vt0.c0, vt0.c1, t0.c46, vt1.c0 FROM t0, vt0, vt1 WHERE (((((((0.1752598143763161) NOTNULL))>=(t0.c0 COLLATE BINARY))) ISNULL)) GROUP BY t0.c0, vt0.c2, vt0.c0, vt0.c1, t0.c46, vt1.c0;
SELECT t0.c0, vt0.c2, vt0.c0, vt0.c1, t0.c46, vt1.c0 FROM t0, vt0, vt1 GROUP BY t0.c0, vt0.c2, vt0.c0, vt0.c1, t0.c46, vt1.c0;
SELECT t0.c50 FROM vt1, t0 GROUP BY t0.c50;
SELECT ALL t0.c50 FROM vt1, t0 GROUP BY t0.c50 HAVING (MIN(t0.c46) IN ()) COLLATE RTRIM UNION ALL SELECT t0.c50 FROM vt1, t0 GROUP BY t0.c50 HAVING (NOT ((MIN(t0.c46) IN ()) COLLATE RTRIM)) UNION ALL SELECT ALL t0.c50 FROM vt1, t0 GROUP BY t0.c50 HAVING (((MIN(t0.c46) IN ()) COLLATE RTRIM) ISNULL);
SELECT t0.c50 FROM vt1, t0 GROUP BY t0.c50;
SELECT ALL t0.c50 FROM vt1, t0 GROUP BY t0.c50 HAVING (MIN(t0.c46) IN ()) COLLATE RTRIM UNION ALL SELECT t0.c50 FROM vt1, t0 GROUP BY t0.c50 HAVING (NOT ((MIN(t0.c46) IN ()) COLLATE RTRIM)) UNION ALL SELECT ALL t0.c50 FROM vt1, t0 GROUP BY t0.c50 HAVING (((MIN(t0.c46) IN ()) COLLATE RTRIM) ISNULL);
SELECT t0.c50 FROM vt1, t0 GROUP BY t0.c50;
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 NOT INDEXED WHERE (CAST(((vt1.c0) NOT NULL) AS INTEGER)) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (CAST(((vt1.c0) NOT NULL) AS INTEGER)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((CAST(((vt1.c0) NOT NULL) AS INTEGER)) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM t0, vt1, vt0;
SELECT DISTINCT * FROM t0, vt1, vt0 WHERE (CASE WHEN 0x24942df9 THEN vt0.c2 END) UNION SELECT DISTINCT * FROM t0, vt1, vt0 WHERE ((NOT (CASE WHEN 0x24942df9 THEN vt0.c2 END))) UNION SELECT DISTINCT * FROM t0, vt1, vt0 WHERE (((CASE WHEN 0X24942df9 THEN vt0.c2 END) ISNULL));
SELECT DISTINCT * FROM t0, vt1, vt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((((((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))OR(json_valid('519010180'))))AND(x'')))OR(((vt1.c0) IS TRUE))))AND('R*'))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))OR(json_valid('519010180'))))AND(x'')))OR(((vt1.c0) IS TRUE))))AND('R*'))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((((((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))OR(json_valid('519010180'))))AND(x'')))OR(((vt1.c0) IS TRUE))))AND('R*'))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0, vt0.c1, t0.c50, vt0.c0, vt0.c2, t0.c0, t0.c46 FROM vt0, vt1, t0 GROUP BY vt1.c0, vt0.c1, t0.c50, vt0.c0, vt0.c2, t0.c0, t0.c46;
SELECT vt1.c0, vt0.c1, t0.c50, vt0.c0, vt0.c2, t0.c0, t0.c46 FROM vt0, vt1, t0 GROUP BY vt1.c0, vt0.c1, t0.c50, vt0.c0, vt0.c2, t0.c0, t0.c46 HAVING AVG(MAX(AVG(t0.c0))) UNION ALL SELECT vt1.c0, vt0.c1, t0.c50, vt0.c0, vt0.c2, t0.c0, t0.c46 FROM vt0, vt1, t0 GROUP BY vt1.c0, vt0.c1, t0.c50, vt0.c0, vt0.c2, t0.c0, t0.c46 HAVING (NOT (AVG(MAX(AVG(t0.c0))))) UNION ALL SELECT vt1.c0, vt0.c1, t0.c50, vt0.c0, vt0.c2, t0.c0, t0.c46 FROM vt0, vt1, t0 NOT INDEXED GROUP BY vt1.c0, vt0.c1, t0.c50, vt0.c0, vt0.c2, t0.c0, t0.c46 HAVING ((AVG(MAX(AVG(t0.c0)))) ISNULL);
SELECT SUM((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN (((((t0.c46))>((0.7312579467568382))), CHANGES(), ((t0.c50)*(vt0.c2)))) AND ((CASE WHEN vt0.c0 THEN t0.c50 WHEN x'' THEN t0.c46 WHEN t0.c46 THEN vt0.c0 ELSE vt0.c2 END, ((((((((vt0.c0)AND(t0.c46)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)), (((t0.c46)) NOT BETWEEN ((vt0.c2)) AND ((t0.c50))))))) FROM t0, vt0 ORDER BY ((t0.c0)<=(-1.987701633E9)) COLLATE RTRIM  NULLS LAST;
SELECT t0.c46, t0.c50 FROM t0;
SELECT t0.c46, t0.c50 FROM t0 WHERE (((((t0.c46)||(t0.c46))) BETWEEN (((t0.c50) IS FALSE)) AND (((((t0.c46)AND(t0.c0)))AND(t0.c50))))) UNION ALL SELECT ALL t0.c46, t0.c50 FROM t0 WHERE ((NOT (((((t0.c46)||(t0.c46))) BETWEEN (((t0.c50) IS FALSE)) AND (((((t0.c46)AND(t0.c0)))AND(t0.c50))))))) UNION ALL SELECT ALL t0.c46, t0.c50 FROM t0 WHERE (((((((t0.c46)||(t0.c46))) BETWEEN (((t0.c50) IS FALSE)) AND (((((t0.c46)AND(t0.c0)))AND(t0.c50))))) ISNULL));
SELECT t0.c46, t0.c50 FROM t0;
SELECT DISTINCT vt0.c0, vt0.c1, t0.c50, t0.c46 FROM vt1, vt0, t0;
SELECT DISTINCT vt0.c0, vt0.c1, t0.c50, t0.c46 FROM vt1, vt0, t0 WHERE ((((((t0.c0 IN ()))OR(x'')))AND((t0.c46 IN ())))) UNION SELECT DISTINCT vt0.c0, vt0.c1, t0.c50, t0.c46 FROM vt1, vt0, t0 WHERE ((NOT ((((((t0.c0 IN ()))OR(x'')))AND((t0.c46 IN ())))))) UNION SELECT DISTINCT vt0.c0, vt0.c1, t0.c50, t0.c46 FROM vt1, vt0, t0 WHERE ((((((((t0.c0 IN ()))OR(x'')))AND((t0.c46 IN ())))) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1, t0.c50, t0.c46 FROM vt1, vt0, t0;
SELECT ALL t0.c50 FROM t0, vt0, vt1 GROUP BY t0.c50;
SELECT ALL t0.c50 FROM t0, vt0, vt1 WHERE (CASE WHEN ((0.9759529666892914)>=(vt0.c1)) THEN ((t0.c50) NOT NULL) WHEN ((t0.c46) BETWEEN (vt0.c0) AND (vt1.c0)) THEN '738792904' WHEN ((vt0.c0)>=(t0.c0)) THEN vt0.c2 END) GROUP BY t0.c50 UNION SELECT t0.c50 FROM t0, vt0, vt1 WHERE ((NOT (CASE WHEN ((0.9759529666892914)>=(vt0.c1)) THEN ((t0.c50) NOT NULL) WHEN ((t0.c46) BETWEEN (vt0.c0) AND (vt1.c0)) THEN '738792904' WHEN ((vt0.c0)>=(t0.c0)) THEN vt0.c2 END))) GROUP BY t0.c50 UNION SELECT ALL t0.c50 FROM t0, vt0, vt1 WHERE (((CASE WHEN ((0.9759529666892914)>=(vt0.c1)) THEN ((t0.c50) NOT NULL) WHEN ((t0.c46) BETWEEN (vt0.c0) AND (vt1.c0)) THEN '738792904' WHEN ((vt0.c0)>=(t0.c0)) THEN vt0.c2 END) ISNULL)) GROUP BY t0.c50;
SELECT ALL t0.c50 FROM t0, vt0, vt1 GROUP BY t0.c50;
SELECT ALL vt0.c0, vt1.c0, vt0.c2 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0, vt0.c2;
SELECT ALL vt0.c0, vt1.c0, vt0.c2 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0, vt0.c2 HAVING (SUM(vt0.c2) IN ()) UNION ALL SELECT vt0.c0, vt1.c0, vt0.c2 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0, vt0.c2 HAVING (NOT ((SUM(vt0.c2) IN ()))) UNION ALL SELECT vt0.c0, vt1.c0, vt0.c2 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0, vt0.c2 HAVING (((SUM(vt0.c2) IN ())) ISNULL);
SELECT ALL vt0.c0, vt1.c0, vt0.c2 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0, vt0.c2;
SELECT ALL vt0.c0, vt1.c0, vt0.c2 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0, vt0.c2 HAVING (SUM(vt0.c2) IN ()) UNION ALL SELECT vt0.c0, vt1.c0, vt0.c2 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0, vt0.c2 HAVING (NOT ((SUM(vt0.c2) IN ()))) UNION ALL SELECT vt0.c0, vt1.c0, vt0.c2 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0, vt0.c2 HAVING (((SUM(vt0.c2) IN ())) ISNULL);
SELECT ALL vt0.c0, vt1.c0, vt0.c2 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0, vt0.c2;
SELECT vt1.c0, vt0.c2, t0.c0, vt0.c0, t0.c50, t0.c46 FROM vt0, t0, vt1;
SELECT ALL vt1.c0, vt0.c2, t0.c0, vt0.c0, t0.c50, t0.c46 FROM vt0, t0, vt1 WHERE (0.9413401007384447) UNION ALL SELECT ALL vt1.c0, vt0.c2, t0.c0, vt0.c0, t0.c50, t0.c46 FROM vt0, t0 NOT INDEXED, vt1 WHERE ((NOT (0.9413401007384447))) UNION ALL SELECT vt1.c0, vt0.c2, t0.c0, vt0.c0, t0.c50, t0.c46 FROM vt0, t0, vt1 WHERE (((0.9413401007384447) ISNULL));
SELECT vt1.c0, vt0.c2, t0.c0, vt0.c0, t0.c50, t0.c46 FROM vt0, t0, vt1;
SELECT DISTINCT vt1.c0 FROM vt0, t0 INNER JOIN vt1 ON CASE WHEN ((vt0.c1)<<(t0.c0)) THEN ((((vt1.c0)OR(-1061586118)))AND(vt0.c2)) ELSE CAST(vt1.c0 AS REAL) END;
SELECT DISTINCT vt1.c0 FROM vt0, t0 INNER JOIN vt1 ON CASE WHEN ((vt0.c1)<<(t0.c0)) THEN ((((vt1.c0)OR(-1061586118)))AND(vt0.c2)) ELSE CAST(vt1.c0 AS REAL) END WHERE ('-2093519965') UNION SELECT DISTINCT vt1.c0 FROM vt0, t0 INNER JOIN vt1 ON CASE WHEN ((vt0.c1)<<(t0.c0)) THEN ((((vt1.c0)OR(-1061586118)))AND(vt0.c2)) ELSE CAST(vt1.c0 AS REAL) END WHERE ((NOT ('-2093519965'))) UNION SELECT DISTINCT vt1.c0 FROM vt0, t0 INNER JOIN vt1 ON CASE WHEN ((vt0.c1)<<(t0.c0)) THEN ((((vt1.c0)OR(-1061586118)))AND(vt0.c2)) ELSE CAST(vt1.c0 AS REAL) END WHERE ((('-2093519965') ISNULL));
SELECT DISTINCT vt1.c0 FROM vt0, t0 INNER JOIN vt1 ON CASE WHEN ((vt0.c1)<<(t0.c0)) THEN ((((vt1.c0)OR(-1061586118)))AND(vt0.c2)) ELSE CAST(vt1.c0 AS REAL) END;
SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c2, vt0.c1;
SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt0 WHERE (LIKELIHOOD(((vt0.c2)<=(vt0.c1)), 0.6021042360967065)) GROUP BY vt0.c0, vt0.c2, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0 WHERE ((NOT (LIKELIHOOD(((vt0.c2)<=(vt0.c1)), 0.6021042360967065)))) GROUP BY vt0.c0, vt0.c2, vt0.c1 UNION SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt0 WHERE (((LIKELIHOOD(((vt0.c2)<=(vt0.c1)), 0.6021042360967065)) ISNULL)) GROUP BY vt0.c0, vt0.c2, vt0.c1;
SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c2, vt0.c1;
SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c2, vt0.c1;
SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c2, vt0.c1 HAVING 'Sx顿mA' UNION ALL SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c2, vt0.c1 HAVING (NOT ('Sx顿mA')) UNION ALL SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c2, vt0.c1 HAVING (('Sx顿mA') ISNULL);
SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c2, vt0.c1;
SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c2, vt0.c1 HAVING 'Sx顿mA' UNION ALL SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c2, vt0.c1 HAVING (NOT ('Sx顿mA')) UNION ALL SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c2, vt0.c1 HAVING (('Sx顿mA') ISNULL);
SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c2, vt0.c1;
SELECT MAX(vt0.c2) FROM vt0 ORDER BY ((vt0.c2) BETWEEN (CASE vt0.c2  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c2 END) AND ((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))) ASC;
SELECT ALL * FROM vt1, t0 FULL OUTER JOIN vt0 ON x'aded';
SELECT ALL * FROM vt1, t0 FULL OUTER JOIN vt0 ON x'aded' WHERE (((((t0.c46) BETWEEN (vt1.c0) AND (vt0.c2)))>((~ (t0.c0))))) UNION ALL SELECT ALL * FROM vt1, t0 FULL OUTER JOIN vt0 ON x'aded' WHERE ((NOT (((((t0.c46) BETWEEN (vt1.c0) AND (vt0.c2)))>((~ (t0.c0))))))) UNION ALL SELECT ALL * FROM vt1, t0 FULL OUTER JOIN vt0 ON x'aded' WHERE (((((((t0.c46) BETWEEN (vt1.c0) AND (vt0.c2)))>((~ (t0.c0))))) ISNULL));
SELECT ALL * FROM vt1, t0 FULL OUTER JOIN vt0 ON x'aded';
SELECT DISTINCT t0.c46, t0.c0 FROM t0 INNER JOIN vt1 ON (((t0.c46)) BETWEEN ((CAST(vt1.c0 AS NUMERIC))) AND ((t0.c50 COLLATE NOCASE)));
SELECT DISTINCT t0.c46, t0.c0 FROM t0 INNER JOIN vt1 ON (((t0.c46)) BETWEEN ((CAST(vt1.c0 AS NUMERIC))) AND ((t0.c50 COLLATE NOCASE))) WHERE ((((CASE WHEN vt1.c0 THEN t0.c50 WHEN t0.c46 THEN t0.c46 WHEN t0.c50 THEN t0.c50 ELSE 'KZM}!x㥘\rV' END))<((((t0.c0)||(t0.c46)))))) UNION SELECT DISTINCT t0.c46, t0.c0 FROM t0 INNER JOIN vt1 ON (((t0.c46)) BETWEEN ((CAST(vt1.c0 AS NUMERIC))) AND ((t0.c50 COLLATE NOCASE))) WHERE ((NOT ((((CASE WHEN vt1.c0 THEN t0.c50 WHEN t0.c46 THEN t0.c46 WHEN t0.c50 THEN t0.c50 ELSE 'KZM}!x㥘\rV' END))<((((t0.c0)||(t0.c46)))))))) UNION SELECT DISTINCT t0.c46, t0.c0 FROM t0 INNER JOIN vt1 ON (((t0.c46)) BETWEEN ((CAST(vt1.c0 AS NUMERIC))) AND ((t0.c50 COLLATE NOCASE))) WHERE ((((((CASE WHEN vt1.c0 THEN t0.c50 WHEN t0.c46 THEN t0.c46 WHEN t0.c50 THEN t0.c50 ELSE 'KZM}!x㥘\rV' END))<((((t0.c0)||(t0.c46)))))) ISNULL));
SELECT DISTINCT t0.c46, t0.c0 FROM t0 INNER JOIN vt1 ON (((t0.c46)) BETWEEN ((CAST(vt1.c0 AS NUMERIC))) AND ((t0.c50 COLLATE NOCASE)));
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((('20328563'))==((((vt0.c2) BETWEEN (vt0.c2) AND (vt1.c0)))))) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT (((('20328563'))=((((vt0.c2) BETWEEN (vt0.c2) AND (vt1.c0)))))))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((((('20328563'))==((((vt0.c2) BETWEEN (vt0.c2) AND (vt1.c0)))))) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT vt0.c2 FROM vt0 INNER JOIN vt1 ON '2018219493' LEFT OUTER JOIN t0 ON x'' GROUP BY vt0.c2;
SELECT vt0.c2 FROM vt0 INNER JOIN vt1 ON '2018219493' LEFT OUTER JOIN t0 ON x'' GROUP BY vt0.c2 HAVING ((SUM(vt1.c0)) NOT BETWEEN (AVG(GROUP_CONCAT(vt0.c0))) AND (COUNT(*))) UNION ALL SELECT vt0.c2 FROM vt0 INNER JOIN vt1 ON '2018219493' LEFT OUTER JOIN t0 ON x'' GROUP BY vt0.c2 HAVING (NOT (((SUM(vt1.c0)) NOT BETWEEN (AVG(GROUP_CONCAT(vt0.c0))) AND (COUNT(*))))) UNION ALL SELECT ALL vt0.c2 FROM vt0 INNER JOIN vt1 ON '2018219493' LEFT OUTER JOIN t0 ON x'' GROUP BY vt0.c2 HAVING ((((SUM(vt1.c0)) NOT BETWEEN (AVG(GROUP_CONCAT(vt0.c0))) AND (COUNT(*)))) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (0.8886775863128713) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (0.8886775863128713))) UNION ALL SELECT * FROM vt0 WHERE (((0.8886775863128713) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT t0.c46, t0.c0, vt1.c0, vt0.c2, t0.c50, vt0.c0 FROM vt0, t0, vt1;
SELECT DISTINCT t0.c46, t0.c0, vt1.c0, vt0.c2, t0.c50, vt0.c0 FROM vt0, t0, vt1 WHERE (((((vt0.c0)-(x''))) NOT BETWEEN ((((vt1.c0))==((t0.c0)))) AND (((t0.c46) NOTNULL)))) UNION SELECT DISTINCT t0.c46, t0.c0, vt1.c0, vt0.c2, t0.c50, vt0.c0 FROM vt0, t0, vt1 WHERE ((NOT (((((vt0.c0)-(x''))) NOT BETWEEN ((((vt1.c0))=((t0.c0)))) AND (((t0.c46) NOTNULL)))))) UNION SELECT DISTINCT t0.c46, t0.c0, vt1.c0, vt0.c2, t0.c50, vt0.c0 FROM vt0, t0, vt1 WHERE (((((((vt0.c0)-(x''))) NOT BETWEEN ((((vt1.c0))==((t0.c0)))) AND (((t0.c46) NOTNULL)))) ISNULL));
SELECT DISTINCT t0.c46, t0.c0, vt1.c0, vt0.c2, t0.c50, vt0.c0 FROM vt0, t0, vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 NOT INDEXED WHERE (CASE WHEN ((0X5488f8d6)%('20328563')) THEN ((vt1.c0)>>(vt1.c0)) END) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (CASE WHEN ((0x5488f8d6)%('20328563')) THEN ((vt1.c0)>>(vt1.c0)) END))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((CASE WHEN ((0X5488f8d6)%('20328563')) THEN ((vt1.c0)>>(vt1.c0)) END) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c1, vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.c2;
SELECT ALL vt0.c1, vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.c2 HAVING COUNT((MIN(vt0.c2) IN ())) UNION ALL SELECT ALL vt0.c1, vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.c2 HAVING (NOT (COUNT((MIN(vt0.c2) IN ())))) UNION ALL SELECT ALL vt0.c1, vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.c2 HAVING ((COUNT((MIN(vt0.c2) IN ()))) ISNULL);
SELECT ALL vt0.c1, vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.c2;
SELECT ALL vt0.c1, vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.c2 HAVING COUNT((MIN(vt0.c2) IN ())) UNION ALL SELECT ALL vt0.c1, vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.c2 HAVING (NOT (COUNT((MIN(vt0.c2) IN ())))) UNION ALL SELECT ALL vt0.c1, vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.c2 HAVING ((COUNT((MIN(vt0.c2) IN ()))) ISNULL);
SELECT ALL vt0.c1, vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.c2;
SELECT vt0.c1, vt0.c0 FROM vt1, vt0;
SELECT ALL vt0.c1, vt0.c0 FROM vt1, vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.c2 ELSE vt1.c0 END COLLATE BINARY) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt1, vt0 WHERE ((NOT (CASE WHEN vt0.c0 THEN vt0.c2 ELSE vt1.c0 END COLLATE BINARY))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt1, vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c2 ELSE vt1.c0 END COLLATE BINARY) ISNULL));
SELECT vt0.c1, vt0.c0 FROM vt1, vt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))<=(''))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))<=(''))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))<=(''))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT t0.c50, t0.c0, t0.c46 FROM t0 GROUP BY t0.c50, t0.c0, t0.c46;
SELECT t0.c50, t0.c0, t0.c46 FROM t0 WHERE ((+ (((t0.c0)-(t0.c46))))) GROUP BY t0.c50, t0.c0, t0.c46 UNION SELECT ALL t0.c50, t0.c0, t0.c46 FROM t0 WHERE ((NOT ((+ (((t0.c0)-(t0.c46))))))) GROUP BY t0.c50, t0.c0, t0.c46 UNION SELECT ALL t0.c50, t0.c0, t0.c46 FROM t0 WHERE ((((+ (((t0.c0)-(t0.c46))))) ISNULL)) GROUP BY t0.c50, t0.c0, t0.c46;
SELECT t0.c50, t0.c0, t0.c46 FROM t0 GROUP BY t0.c50, t0.c0, t0.c46;
SELECT vt0.c2 FROM vt0 GROUP BY vt0.c2;
SELECT ALL vt0.c2 FROM vt0 GROUP BY vt0.c2 HAVING ((COUNT(vt0.c2))AND(CAST(vt0.c2 AS NUMERIC))) UNION ALL SELECT ALL vt0.c2 FROM vt0 GROUP BY vt0.c2 HAVING (NOT (((COUNT(vt0.c2))AND(CAST(vt0.c2 AS NUMERIC))))) UNION ALL SELECT ALL vt0.c2 FROM vt0 GROUP BY vt0.c2 HAVING ((((COUNT(vt0.c2))AND(CAST(vt0.c2 AS NUMERIC)))) ISNULL);
SELECT vt0.c2 FROM vt0 GROUP BY vt0.c2;
SELECT ALL vt0.c2 FROM vt0 GROUP BY vt0.c2 HAVING ((COUNT(vt0.c2))AND(CAST(vt0.c2 AS NUMERIC))) UNION ALL SELECT ALL vt0.c2 FROM vt0 GROUP BY vt0.c2 HAVING (NOT (((COUNT(vt0.c2))AND(CAST(vt0.c2 AS NUMERIC))))) UNION ALL SELECT ALL vt0.c2 FROM vt0 GROUP BY vt0.c2 HAVING ((((COUNT(vt0.c2))AND(CAST(vt0.c2 AS NUMERIC)))) ISNULL);
SELECT vt0.c2 FROM vt0 GROUP BY vt0.c2;
SELECT * FROM t0, vt0, vt1;
SELECT ALL * FROM t0, vt0, vt1 WHERE (((CASE vt0.c1  WHEN t0.c0 THEN t0.c0 END) BETWEEN (DATE(vt0.c0, vt0.c2, vt1.c0)) AND ((((0.33154930884605116, vt0.c0, vt0.c0, t0.c0, t0.c50)) BETWEEN ((vt0.c0, vt0.c1, t0.c0, vt0.c1, t0.c0)) AND ((vt1.c0, vt0.c1, vt0.c0, NULL, vt1.c0)))))) UNION ALL SELECT ALL * FROM t0, vt0, vt1 WHERE ((NOT (((CASE vt0.c1  WHEN t0.c0 THEN t0.c0 END) BETWEEN (DATE(vt0.c0, vt0.c2, vt1.c0)) AND ((((0.33154930884605116, vt0.c0, vt0.c0, t0.c0, t0.c50)) BETWEEN ((vt0.c0, vt0.c1, t0.c0, vt0.c1, t0.c0)) AND ((vt1.c0, vt0.c1, vt0.c0, NULL, vt1.c0)))))))) UNION ALL SELECT * FROM t0, vt0, vt1 WHERE (((((CASE vt0.c1  WHEN t0.c0 THEN t0.c0 END) BETWEEN (DATE(vt0.c0, vt0.c2, vt1.c0)) AND ((((0.33154930884605116, vt0.c0, vt0.c0, t0.c0, t0.c50)) BETWEEN ((vt0.c0, vt0.c1, t0.c0, vt0.c1, t0.c0)) AND ((vt1.c0, vt0.c1, vt0.c0, NULL, vt1.c0)))))) ISNULL));
SELECT * FROM t0, vt0, vt1;
SELECT DISTINCT vt0.c0, vt0.c2, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c2, vt0.c1 FROM vt0 WHERE (((((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c2)))AND(vt0.c0)))AND(vt0.c1))) NOT BETWEEN (CAST(vt0.c1 AS REAL)) AND (x''))) UNION SELECT DISTINCT vt0.c0, vt0.c2, vt0.c1 FROM vt0 WHERE ((NOT (((((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c2)))AND(vt0.c0)))AND(vt0.c1))) NOT BETWEEN (CAST(vt0.c1 AS REAL)) AND (x''))))) UNION SELECT DISTINCT vt0.c0, vt0.c2, vt0.c1 FROM vt0 WHERE (((((((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c2)))AND(vt0.c0)))AND(vt0.c1))) NOT BETWEEN (CAST(vt0.c1 AS REAL)) AND (x''))) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c2, vt0.c1 FROM vt0;
SELECT ALL vt0.c0 FROM vt0, t0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, t0 WHERE (((((vt0.c1)AND((NOT (vt0.c2)))))AND(((t0.c50) NOT BETWEEN (vt0.c2) AND (''))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, t0 WHERE ((NOT (((((vt0.c1)AND((NOT (vt0.c2)))))AND(((t0.c50) NOT BETWEEN (vt0.c2) AND (''))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, t0 WHERE (((((((vt0.c1)AND((NOT (vt0.c2)))))AND(((t0.c50) NOT BETWEEN (vt0.c2) AND (''))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, t0 GROUP BY vt0.c0;
SELECT ALL vt1.c0, t0.c46, vt0.c1, vt0.c0 FROM vt1, vt0, t0 GROUP BY vt1.c0, t0.c46, vt0.c1, vt0.c0;
SELECT ALL vt1.c0, t0.c46, vt0.c1, vt0.c0 FROM vt1, vt0, t0 GROUP BY vt1.c0, t0.c46, vt0.c1, vt0.c0 HAVING ((TOTAL(AVG(vt0.c2)))LIKE((t0.c50 IN ()))) UNION ALL SELECT ALL vt1.c0, t0.c46, vt0.c1, vt0.c0 FROM vt1, vt0, t0 GROUP BY vt1.c0, t0.c46, vt0.c1, vt0.c0 HAVING (NOT (((TOTAL(AVG(vt0.c2)))LIKE((t0.c50 IN ()))))) UNION ALL SELECT vt1.c0, t0.c46, vt0.c1, vt0.c0 FROM vt1, vt0 NOT INDEXED, t0 GROUP BY vt1.c0, t0.c46, vt0.c1, vt0.c0 HAVING ((((TOTAL(AVG(vt0.c2)))LIKE((t0.c50 IN ())))) ISNULL);
SELECT * FROM t0, vt1;
SELECT * FROM t0, vt1 WHERE ((+ (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c50 END))) UNION ALL SELECT * FROM t0, vt1 WHERE ((NOT ((+ (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c50 END))))) UNION ALL SELECT * FROM t0, vt1 WHERE ((((+ (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c50 END))) ISNULL));
SELECT * FROM t0, vt1;
SELECT DISTINCT vt0.c2, vt0.c0, t0.c50 FROM vt0, t0;
SELECT DISTINCT vt0.c2, vt0.c0, t0.c50 FROM vt0, t0 WHERE ((- (vt0.c0 COLLATE BINARY))) UNION SELECT DISTINCT vt0.c2, vt0.c0, t0.c50 FROM vt0, t0 WHERE ((NOT ((- (vt0.c0 COLLATE BINARY))))) UNION SELECT DISTINCT vt0.c2, vt0.c0, t0.c50 FROM vt0, t0 WHERE ((((- (vt0.c0 COLLATE BINARY))) ISNULL));
SELECT DISTINCT vt0.c2, vt0.c0, t0.c50 FROM vt0, t0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (NULL) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (NULL))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((NULL) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING GROUP_CONCAT(MIN(SUM(TOTAL(TOTAL(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (GROUP_CONCAT(MIN(SUM(TOTAL(TOTAL(vt1.c0))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((GROUP_CONCAT(MIN(SUM(TOTAL(TOTAL(vt1.c0)))))) ISNULL);
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE (((((TRIM(vt1.c0))AND((+ (vt1.c0)))))AND(((vt1.c0)!=(vt1.c0))))) UNION ALL SELECT * FROM vt1 WHERE ((NOT (((((TRIM(vt1.c0))AND((+ (vt1.c0)))))AND(((vt1.c0)!=(vt1.c0))))))) UNION ALL SELECT ALL * FROM vt1 WHERE (((((((TRIM(vt1.c0))AND((+ (vt1.c0)))))AND(((vt1.c0)!=(vt1.c0))))) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON CAST(IFNULL(vt0.c1, vt1.c0) AS INTEGER);
SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON CAST(IFNULL(vt0.c1, vt1.c0) AS INTEGER) WHERE ((- (TYPEOF(vt0.c0)))) UNION SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON CAST(IFNULL(vt0.c1, vt1.c0) AS INTEGER) WHERE ((NOT ((- (TYPEOF(vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON CAST(IFNULL(vt0.c1, vt1.c0) AS INTEGER) WHERE ((((- (TYPEOF(vt0.c0)))) ISNULL));
SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON CAST(IFNULL(vt0.c1, vt1.c0) AS INTEGER);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (((t0.c46 COLLATE NOCASE) NOTNULL)) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((t0.c46 COLLATE NOCASE) NOTNULL)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((((t0.c46 COLLATE NOCASE) NOTNULL)) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(vt1.c0 COLLATE RTRIM) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(vt1.c0 COLLATE RTRIM))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(vt1.c0 COLLATE RTRIM)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(vt1.c0 COLLATE RTRIM) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(vt1.c0 COLLATE RTRIM))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(vt1.c0 COLLATE RTRIM)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (NULLIF((vt0.c1 IN (vt0.c1, vt0.c2)), ((((vt0.c1)OR(vt0.c1)))AND(vt0.c2)))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (NULLIF((vt0.c1 IN (vt0.c1, vt0.c2)), ((((vt0.c1)OR(vt0.c1)))AND(vt0.c2)))))) UNION ALL SELECT * FROM vt0 WHERE (((NULLIF((vt0.c1 IN (vt0.c1, vt0.c2)), ((((vt0.c1)OR(vt0.c1)))AND(vt0.c2)))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c0, t0.c46, t0.c0 FROM vt0, t0;
SELECT DISTINCT vt0.c0, t0.c46, t0.c0 FROM vt0, t0 WHERE (CASE vt0.c0  WHEN t0.c0 THEN vt0.c0 ELSE NULL END COLLATE BINARY) UNION SELECT DISTINCT vt0.c0, t0.c46, t0.c0 FROM vt0, t0 WHERE ((NOT (CASE vt0.c0  WHEN t0.c0 THEN vt0.c0 ELSE NULL END COLLATE BINARY))) UNION SELECT DISTINCT vt0.c0, t0.c46, t0.c0 FROM vt0, t0 WHERE (((CASE vt0.c0  WHEN t0.c0 THEN vt0.c0 ELSE NULL END COLLATE BINARY) ISNULL));
SELECT DISTINCT vt0.c0, t0.c46, t0.c0 FROM vt0, t0;
SELECT vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON ((+ (vt0.c2)) IN ()) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON ((+ (vt0.c2)) IN ()) WHERE (((CAST(NULL AS TEXT))!=(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON ((+ (vt0.c2)) IN ()) WHERE ((NOT (((CAST(NULL AS TEXT))!=(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON ((+ (vt0.c2)) IN ()) WHERE (((((CAST(NULL AS TEXT))!=(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON ((+ (vt0.c2)) IN ()) GROUP BY vt0.c0;
SELECT ALL vt1.c0 FROM vt1 INDEXED BY i72 GROUP BY vt1.c0;
SELECT * FROM t0, vt0 NATURAL JOIN vt1;
SELECT ALL * FROM t0, vt0 NATURAL JOIN vt1 WHERE ((((t0.c50)GLOB(vt0.c2)) IN ())) UNION ALL SELECT ALL * FROM t0, vt0 NATURAL JOIN vt1 WHERE ((NOT ((((t0.c50)GLOB(vt0.c2)) IN ())))) UNION ALL SELECT * FROM t0, vt0 NATURAL JOIN vt1 WHERE ((((((t0.c50)GLOB(vt0.c2)) IN ())) ISNULL));
SELECT * FROM t0, vt0 NATURAL JOIN vt1;
SELECT DISTINCT * FROM vt0 CROSS JOIN vt1 ON (((CAST(vt1.c0 AS NUMERIC)))<=((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)))));
SELECT DISTINCT * FROM vt0 CROSS JOIN vt1 ON (((CAST(vt1.c0 AS NUMERIC)))<=((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1))))) WHERE (((CAST('572719045' AS BLOB))/(((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c1))))) UNION SELECT DISTINCT * FROM vt0 CROSS JOIN vt1 ON (((CAST(vt1.c0 AS NUMERIC)))<=((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1))))) WHERE ((NOT (((CAST('572719045' AS BLOB))/(((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c1))))))) UNION SELECT DISTINCT * FROM vt0 CROSS JOIN vt1 ON (((CAST(vt1.c0 AS NUMERIC)))<=((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1))))) WHERE (((((CAST('572719045' AS BLOB))/(((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c1))))) ISNULL));
SELECT DISTINCT * FROM vt0 CROSS JOIN vt1 ON (((CAST(vt1.c0 AS NUMERIC)))<=((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)))));
SELECT ALL vt0.c1, vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.c2;
SELECT ALL vt0.c1, vt0.c0, vt0.c2 FROM vt0 WHERE ((((((vt0.c2)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))<>(((vt0.c1)&(vt0.c2))))) GROUP BY vt0.c1, vt0.c0, vt0.c2 UNION SELECT ALL vt0.c1, vt0.c0, vt0.c2 FROM vt0 WHERE ((NOT ((((((vt0.c2)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))!=(((vt0.c1)&(vt0.c2))))))) GROUP BY vt0.c1, vt0.c0, vt0.c2 UNION SELECT ALL vt0.c1, vt0.c0, vt0.c2 FROM vt0 WHERE ((((((((vt0.c2)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))<>(((vt0.c1)&(vt0.c2))))) ISNULL)) GROUP BY vt0.c1, vt0.c0, vt0.c2;
SELECT ALL vt0.c1, vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.c2;
SELECT ALL t0.c50 FROM t0 GROUP BY t0.c50;
SELECT t0.c50 FROM t0 GROUP BY t0.c50 HAVING SUM(((t0.c0)OR(MIN(t0.c50)))) UNION ALL SELECT t0.c50 FROM t0 GROUP BY t0.c50 HAVING (NOT (SUM(((t0.c0)OR(MIN(t0.c50)))))) UNION ALL SELECT t0.c50 FROM t0 GROUP BY t0.c50 HAVING ((SUM(((t0.c0)OR(MIN(t0.c50))))) ISNULL);
SELECT vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON CAST((- (vt0.c1)) AS TEXT) LEFT OUTER JOIN t0 ON x'';
SELECT vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON CAST((- (vt0.c1)) AS TEXT) LEFT OUTER JOIN t0 ON x'' WHERE (ROUND('/5' COLLATE NOCASE, (((vt0.c2)) BETWEEN ((t0.c50)) AND ((t0.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON CAST((- (vt0.c1)) AS TEXT) LEFT OUTER JOIN t0 ON x'' WHERE ((NOT (ROUND('/5' COLLATE NOCASE, (((vt0.c2)) BETWEEN ((t0.c50)) AND ((t0.c0))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON CAST((- (vt0.c1)) AS TEXT) LEFT OUTER JOIN t0 ON x'' WHERE (((ROUND('/5' COLLATE NOCASE, (((vt0.c2)) BETWEEN ((t0.c50)) AND ((t0.c0))))) ISNULL));
SELECT vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON CAST((- (vt0.c1)) AS TEXT) LEFT OUTER JOIN t0 ON x'';
SELECT DISTINCT vt1.c0 FROM vt0, vt1, t0;
SELECT DISTINCT vt1.c0 FROM vt0, vt1, t0 WHERE ((NOT (((t0.c0)>=(t0.c0))))) UNION SELECT DISTINCT vt1.c0 FROM vt0, vt1, t0 WHERE ((NOT ((NOT (((t0.c0)>=(t0.c0))))))) UNION SELECT DISTINCT vt1.c0 FROM vt0, vt1, t0 WHERE ((((NOT (((t0.c0)>=(t0.c0))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt0, vt1, t0;
SELECT vt1.c0, vt0.c1, t0.c46 FROM vt1, vt0 CROSS JOIN t0 ON ((CAST(vt0.c1 AS NUMERIC))<<(((x'')AND(t0.c46)))) GROUP BY vt1.c0, vt0.c1, t0.c46;
SELECT ALL vt1.c0, vt0.c1, t0.c46 FROM vt1, vt0 CROSS JOIN t0 ON ((CAST(vt0.c1 AS NUMERIC))<<(((x'')AND(t0.c46)))) WHERE (vt0.c2) GROUP BY vt1.c0, vt0.c1, t0.c46 UNION SELECT vt1.c0, vt0.c1, t0.c46 FROM vt1, vt0 CROSS JOIN t0 ON ((CAST(vt0.c1 AS NUMERIC))<<(((x'')AND(t0.c46)))) WHERE ((NOT (vt0.c2))) GROUP BY vt1.c0, vt0.c1, t0.c46 UNION SELECT ALL vt1.c0, vt0.c1, t0.c46 FROM vt1, vt0 CROSS JOIN t0 ON ((CAST(vt0.c1 AS NUMERIC))<<(((x'')AND(t0.c46)))) WHERE (((vt0.c2) ISNULL)) GROUP BY vt1.c0, vt0.c1, t0.c46;
SELECT vt1.c0, vt0.c1, t0.c46 FROM vt1, vt0 CROSS JOIN t0 ON ((CAST(vt0.c1 AS NUMERIC))<<(((x'')AND(t0.c46)))) GROUP BY vt1.c0, vt0.c1, t0.c46;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((CASE WHEN vt1.c0 THEN TOTAL(vt1.c0) WHEN MAX(vt1.c0) THEN vt1.c0 WHEN AVG(TOTAL(vt1.c0)) THEN vt1.c0 ELSE COUNT(vt1.c0) END) NOT BETWEEN ('m') AND (MAX(vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((CASE WHEN vt1.c0 THEN TOTAL(vt1.c0) WHEN MAX(vt1.c0) THEN vt1.c0 WHEN AVG(TOTAL(vt1.c0)) THEN vt1.c0 ELSE COUNT(vt1.c0) END) NOT BETWEEN ('m') AND (MAX(vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((CASE WHEN vt1.c0 THEN TOTAL(vt1.c0) WHEN MAX(vt1.c0) THEN vt1.c0 WHEN AVG(TOTAL(vt1.c0)) THEN vt1.c0 ELSE COUNT(vt1.c0) END) NOT BETWEEN ('m') AND (MAX(vt1.c0)))) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c2)), (- (vt0.c1)), vt0.c0 COLLATE BINARY))>=((((((((((((((((((vt0.c0)AND(vt0.c2)))OR(0x64c49f41)))AND(vt0.c1)))OR(vt0.c2)))AND(x'9af4')))OR(vt0.c2)))AND('')))AND(vt0.c2)), ((vt0.c0)<<(vt0.c2)), ((((((((((((vt0.c1)AND(vt0.c2)))OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c2)))AND(vt0.c1)))OR(vt0.c1)))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((((((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c2)), (- (vt0.c1)), vt0.c0 COLLATE BINARY))>=((((((((((((((((((vt0.c0)AND(vt0.c2)))OR(0X64c49f41)))AND(vt0.c1)))OR(vt0.c2)))AND(x'9af4')))OR(vt0.c2)))AND('')))AND(vt0.c2)), ((vt0.c0)<<(vt0.c2)), ((((((((((((vt0.c1)AND(vt0.c2)))OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c2)))AND(vt0.c1)))OR(vt0.c1)))))))) UNION ALL SELECT * FROM vt0 WHERE ((((((((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c2)), (- (vt0.c1)), vt0.c0 COLLATE BINARY))>=((((((((((((((((((vt0.c0)AND(vt0.c2)))OR(0X64c49f41)))AND(vt0.c1)))OR(vt0.c2)))AND(x'9af4')))OR(vt0.c2)))AND('')))AND(vt0.c2)), ((vt0.c0)<<(vt0.c2)), ((((((((((((vt0.c1)AND(vt0.c2)))OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c2)))AND(vt0.c1)))OR(vt0.c1)))))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM t0 FULL OUTER JOIN vt1 ON COALESCE(t0.c50, t0.c0) COLLATE BINARY;
SELECT DISTINCT * FROM t0 FULL OUTER JOIN vt1 ON COALESCE(t0.c50, t0.c0) COLLATE BINARY WHERE (((((t0.c50) NOT NULL)) NOT BETWEEN ((t0.c50 IN ())) AND (CAST(vt1.c0 AS NUMERIC)))) UNION SELECT DISTINCT * FROM t0 FULL OUTER JOIN vt1 ON COALESCE(t0.c50, t0.c0) COLLATE BINARY WHERE ((NOT (((((t0.c50) NOT NULL)) NOT BETWEEN ((t0.c50 IN ())) AND (CAST(vt1.c0 AS NUMERIC)))))) UNION SELECT DISTINCT * FROM t0 FULL OUTER JOIN vt1 ON COALESCE(t0.c50, t0.c0) COLLATE BINARY WHERE (((((((t0.c50) NOT NULL)) NOT BETWEEN ((t0.c50 IN ())) AND (CAST(vt1.c0 AS NUMERIC)))) ISNULL));
SELECT DISTINCT * FROM t0 FULL OUTER JOIN vt1 ON COALESCE(t0.c50, t0.c0) COLLATE BINARY;
SELECT vt0.c1, vt0.c0, vt0.c2, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt0.c0, vt0.c2, vt1.c0;
SELECT vt0.c1, vt0.c0, vt0.c2, vt1.c0 FROM vt0, vt1 WHERE (CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE BINARY) GROUP BY vt0.c1, vt0.c0, vt0.c2, vt1.c0 UNION SELECT vt0.c1, vt0.c0, vt0.c2, vt1.c0 FROM vt0, vt1 WHERE ((NOT (CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE BINARY))) GROUP BY vt0.c1, vt0.c0, vt0.c2, vt1.c0 UNION SELECT vt0.c1, vt0.c0, vt0.c2, vt1.c0 FROM vt0, vt1 WHERE (((CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE BINARY) ISNULL)) GROUP BY vt0.c1, vt0.c0, vt0.c2, vt1.c0;
SELECT vt0.c1, vt0.c0, vt0.c2, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt0.c0, vt0.c2, vt1.c0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING IFNULL(COUNT(vt0.c1), SUM(vt0.c0)) COLLATE RTRIM UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (IFNULL(COUNT(vt0.c1), SUM(vt0.c0)) COLLATE RTRIM)) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((IFNULL(COUNT(vt0.c1), SUM(vt0.c0)) COLLATE RTRIM) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING IFNULL(COUNT(vt0.c1), SUM(vt0.c0)) COLLATE RTRIM UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (IFNULL(COUNT(vt0.c1), SUM(vt0.c0)) COLLATE RTRIM)) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((IFNULL(COUNT(vt0.c1), SUM(vt0.c0)) COLLATE RTRIM) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL SUM((HEX(DISTINCT vt0.c0) IN (((vt0.c0)OR(1376504464))))) FROM vt0;
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((NOT (vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((((NOT (vt1.c0))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT vt0.c0, vt0.c2 FROM vt1, vt0, t0;
SELECT DISTINCT vt0.c0, vt0.c2 FROM vt1, vt0, t0 WHERE (((((vt0.c0)OR(((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c2)))))OR(0X5488f8d6))) UNION SELECT DISTINCT vt0.c0, vt0.c2 FROM vt1, vt0, t0 WHERE ((NOT (((((vt0.c0)OR(((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c2)))))OR(0x5488f8d6))))) UNION SELECT DISTINCT vt0.c0, vt0.c2 FROM vt1, vt0, t0 WHERE (((((((vt0.c0)OR(((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c2)))))OR(0X5488f8d6))) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c2 FROM vt1, vt0, t0;
SELECT ALL vt0.c2, t0.c0, vt0.c1 FROM vt1, vt0, t0 GROUP BY vt0.c2, t0.c0, vt0.c1;
SELECT ALL vt0.c2, t0.c0, vt0.c1 FROM vt1, vt0, t0 WHERE ((((((t0.c50)AND(vt0.c0)))AND(t0.c0)) IN ())) GROUP BY vt0.c2, t0.c0, vt0.c1 UNION SELECT ALL vt0.c2, t0.c0, vt0.c1 FROM vt1, vt0, t0 WHERE ((NOT ((((((t0.c50)AND(vt0.c0)))AND(t0.c0)) IN ())))) GROUP BY vt0.c2, t0.c0, vt0.c1 UNION SELECT ALL vt0.c2, t0.c0, vt0.c1 FROM vt1, vt0, t0 WHERE ((((((((t0.c50)AND(vt0.c0)))AND(t0.c0)) IN ())) ISNULL)) GROUP BY vt0.c2, t0.c0, vt0.c1;
SELECT ALL vt0.c2, t0.c0, vt0.c1 FROM vt1, vt0, t0 GROUP BY vt0.c2, t0.c0, vt0.c1;
SELECT ALL vt0.c0, t0.c0 FROM t0 CROSS JOIN vt0 ON (((((t0.c50)) BETWEEN ((t0.c50)) AND ((vt0.c0))))!=(((t0.c50) BETWEEN (t0.c50) AND (vt0.c2)))) GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM t0 CROSS JOIN vt0 ON (((((t0.c50)) BETWEEN ((t0.c50)) AND ((vt0.c0))))!=(((t0.c50) BETWEEN (t0.c50) AND (vt0.c2)))) GROUP BY vt0.c0, t0.c0 HAVING (NOT (t0.c46)) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM t0 CROSS JOIN vt0 ON (((((t0.c50)) BETWEEN ((t0.c50)) AND ((vt0.c0))))!=(((t0.c50) BETWEEN (t0.c50) AND (vt0.c2)))) GROUP BY vt0.c0, t0.c0 HAVING (NOT ((NOT (t0.c46)))) UNION ALL SELECT vt0.c0, t0.c0 FROM t0 CROSS JOIN vt0 ON (((((t0.c50)) BETWEEN ((t0.c50)) AND ((vt0.c0))))!=(((t0.c50) BETWEEN (t0.c50) AND (vt0.c2)))) GROUP BY vt0.c0, t0.c0 HAVING (((NOT (t0.c46))) ISNULL);
SELECT ALL vt0.c0, t0.c0 FROM t0 CROSS JOIN vt0 ON (((((t0.c50)) BETWEEN ((t0.c50)) AND ((vt0.c0))))!=(((t0.c50) BETWEEN (t0.c50) AND (vt0.c2)))) GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM t0 CROSS JOIN vt0 ON (((((t0.c50)) BETWEEN ((t0.c50)) AND ((vt0.c0))))!=(((t0.c50) BETWEEN (t0.c50) AND (vt0.c2)))) GROUP BY vt0.c0, t0.c0 HAVING (NOT (t0.c46)) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM t0 CROSS JOIN vt0 ON (((((t0.c50)) BETWEEN ((t0.c50)) AND ((vt0.c0))))!=(((t0.c50) BETWEEN (t0.c50) AND (vt0.c2)))) GROUP BY vt0.c0, t0.c0 HAVING (NOT ((NOT (t0.c46)))) UNION ALL SELECT vt0.c0, t0.c0 FROM t0 CROSS JOIN vt0 ON (((((t0.c50)) BETWEEN ((t0.c50)) AND ((vt0.c0))))!=(((t0.c50) BETWEEN (t0.c50) AND (vt0.c2)))) GROUP BY vt0.c0, t0.c0 HAVING (((NOT (t0.c46))) ISNULL);
SELECT ALL vt0.c0, t0.c0 FROM t0 CROSS JOIN vt0 ON (((((t0.c50)) BETWEEN ((t0.c50)) AND ((vt0.c0))))!=(((t0.c50) BETWEEN (t0.c50) AND (vt0.c2)))) GROUP BY vt0.c0, t0.c0;
SELECT * FROM vt0, vt1;
SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c2)) BETWEEN ((CASE WHEN vt1.c0 THEN vt0.c2 ELSE vt1.c0 END)) AND (((~ (vt1.c0)))))) UNION ALL SELECT * FROM vt0, vt1 WHERE ((NOT ((((vt0.c2)) BETWEEN ((CASE WHEN vt1.c0 THEN vt0.c2 ELSE vt1.c0 END)) AND (((~ (vt1.c0)))))))) UNION ALL SELECT * FROM vt0, vt1 WHERE ((((((vt0.c2)) BETWEEN ((CASE WHEN vt1.c0 THEN vt0.c2 ELSE vt1.c0 END)) AND (((~ (vt1.c0)))))) ISNULL));
SELECT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CASE (+ (vt0.c0))  WHEN ((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c0)) THEN x'' WHEN CASE vt0.c2  WHEN vt0.c0 THEN vt0.c0 END THEN vt0.c1 WHEN ((vt0.c1) IS TRUE) THEN ((vt0.c0)||(vt0.c1)) END) UNION SELECT DISTINCT * FROM vt0 NOT INDEXED WHERE ((NOT (CASE (+ (vt0.c0))  WHEN ((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c0)) THEN x'' WHEN CASE vt0.c2  WHEN vt0.c0 THEN vt0.c0 END THEN vt0.c1 WHEN ((vt0.c1) IS TRUE) THEN ((vt0.c0)||(vt0.c1)) END))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CASE (+ (vt0.c0))  WHEN ((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c0)) THEN x'' WHEN CASE vt0.c2  WHEN vt0.c0 THEN vt0.c0 END THEN vt0.c1 WHEN ((vt0.c1) IS TRUE) THEN ((vt0.c0)||(vt0.c1)) END) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt1, t0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, t0, vt0 WHERE (t0.c0) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt1, t0, vt0 WHERE ((NOT (t0.c0))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt1, t0, vt0 WHERE (((t0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, t0, vt0 GROUP BY vt0.c0;
SELECT t0.c46, vt0.c0, vt1.c0, t0.c0, t0.c50, vt0.c2, vt0.c1 FROM t0, vt1, vt0 GROUP BY t0.c46, vt0.c0, vt1.c0, t0.c0, t0.c50, vt0.c2, vt0.c1;
SELECT ALL t0.c46, vt0.c0, vt1.c0, t0.c0, t0.c50, vt0.c2, vt0.c1 FROM t0, vt1, vt0 GROUP BY t0.c46, vt0.c0, vt1.c0, t0.c0, t0.c50, vt0.c2, vt0.c1 HAVING GROUP_CONCAT(SUM(t0.c0)) UNION ALL SELECT ALL t0.c46, vt0.c0, vt1.c0, t0.c0, t0.c50, vt0.c2, vt0.c1 FROM t0, vt1, vt0 GROUP BY t0.c46, vt0.c0, vt1.c0, t0.c0, t0.c50, vt0.c2, vt0.c1 HAVING (NOT (GROUP_CONCAT(SUM(t0.c0)))) UNION ALL SELECT ALL t0.c46, vt0.c0, vt1.c0, t0.c0, t0.c50, vt0.c2, vt0.c1 FROM t0, vt1, vt0 GROUP BY t0.c46, vt0.c0, vt1.c0, t0.c0, t0.c50, vt0.c2, vt0.c1 HAVING ((GROUP_CONCAT(SUM(t0.c0))) ISNULL);
SELECT t0.c46, vt1.c0, t0.c0, t0.c50 FROM t0 INNER JOIN vt1 ON vt1.c0;
SELECT t0.c46, vt1.c0, t0.c0, t0.c50 FROM t0 NOT INDEXED INNER JOIN vt1 ON vt1.c0 WHERE (vt1.c0) UNION ALL SELECT ALL t0.c46, vt1.c0, t0.c0, t0.c50 FROM t0 INNER JOIN vt1 ON vt1.c0 WHERE ((NOT (vt1.c0))) UNION ALL SELECT t0.c46, vt1.c0, t0.c0, t0.c50 FROM t0 INNER JOIN vt1 ON vt1.c0 WHERE (((vt1.c0) ISNULL));
SELECT t0.c46, vt1.c0, t0.c0, t0.c50 FROM t0 INNER JOIN vt1 ON vt1.c0;
SELECT DISTINCT * FROM vt0, t0, vt1;
SELECT DISTINCT * FROM vt0, t0, vt1 WHERE (((((vt0.c1) ISNULL)) NOT NULL)) UNION SELECT DISTINCT * FROM vt0, t0, vt1 WHERE ((NOT (((((vt0.c1) ISNULL)) NOT NULL)))) UNION SELECT DISTINCT * FROM vt0, t0, vt1 WHERE (((((((vt0.c1) ISNULL)) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM vt0, t0, vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((((((((((vt1.c0 COLLATE BINARY)OR(vt1.c0 COLLATE BINARY)))AND(CAST('0.885498494885058' AS TEXT))))AND(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND((+ (vt1.c0)))))OR(((vt1.c0)>>(vt1.c0)))))AND((NOT (0.22135701336876434))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((((((((((vt1.c0 COLLATE BINARY)OR(vt1.c0 COLLATE BINARY)))AND(CAST('0.885498494885058' AS TEXT))))AND(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND((+ (vt1.c0)))))OR(((vt1.c0)>>(vt1.c0)))))AND((NOT (0.22135701336876434))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((((((((((((vt1.c0 COLLATE BINARY)OR(vt1.c0 COLLATE BINARY)))AND(CAST('0.885498494885058' AS TEXT))))AND(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND((+ (vt1.c0)))))OR(((vt1.c0)>>(vt1.c0)))))AND((NOT (0.22135701336876434))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL t0.c46, vt1.c0, t0.c50, vt0.c2, vt0.c0 FROM t0, vt1, vt0 GROUP BY t0.c46, vt1.c0, t0.c50, vt0.c2, vt0.c0;
SELECT ALL t0.c46, vt1.c0, t0.c50, vt0.c2, vt0.c0 FROM t0, vt1, vt0 GROUP BY t0.c46, vt1.c0, t0.c50, vt0.c2, vt0.c0 HAVING MAX(TOTAL(GROUP_CONCAT('-1357057062'))) UNION ALL SELECT ALL t0.c46, vt1.c0, t0.c50, vt0.c2, vt0.c0 FROM t0, vt1, vt0 GROUP BY t0.c46, vt1.c0, t0.c50, vt0.c2, vt0.c0 HAVING (NOT (MAX(TOTAL(GROUP_CONCAT('-1357057062'))))) UNION ALL SELECT t0.c46, vt1.c0, t0.c50, vt0.c2, vt0.c0 FROM t0, vt1, vt0 GROUP BY t0.c46, vt1.c0, t0.c50, vt0.c2, vt0.c0 HAVING ((MAX(TOTAL(GROUP_CONCAT('-1357057062')))) ISNULL);
SELECT MAX(((t0.c50 COLLATE RTRIM) BETWEEN ((((''))<=((t0.c0)))) AND ((t0.c50 IN (t0.c50))))) FROM t0 NOT INDEXED;
SELECT ALL t0.c50 FROM t0 CROSS JOIN vt1 ON (('1788249613')||(((t0.c0) NOT BETWEEN (t0.c46) AND (t0.c50)))) CROSS JOIN vt0 ON 'l&闥''ۋ';
SELECT t0.c50 FROM t0 CROSS JOIN vt1 ON (('1788249613')||(((t0.c0) NOT BETWEEN (t0.c46) AND (t0.c50)))) CROSS JOIN vt0 ON 'l&闥''ۋ' WHERE ((NOT (vt0.c1)) COLLATE NOCASE) UNION ALL SELECT ALL t0.c50 FROM t0 CROSS JOIN vt1 ON (('1788249613')||(((t0.c0) NOT BETWEEN (t0.c46) AND (t0.c50)))) CROSS JOIN vt0 ON 'l&闥''ۋ' WHERE ((NOT ((NOT (vt0.c1)) COLLATE NOCASE))) UNION ALL SELECT ALL t0.c50 FROM t0 CROSS JOIN vt1 ON (('1788249613')||(((t0.c0) NOT BETWEEN (t0.c46) AND (t0.c50)))) CROSS JOIN vt0 ON 'l&闥''ۋ' WHERE ((((NOT (vt0.c1)) COLLATE NOCASE) ISNULL));
SELECT ALL t0.c50 FROM t0 CROSS JOIN vt1 ON (('1788249613')||(((t0.c0) NOT BETWEEN (t0.c46) AND (t0.c50)))) CROSS JOIN vt0 ON 'l&闥''ۋ';
SELECT DISTINCT * FROM vt0, t0 INDEXED BY i46, vt1;
SELECT ALL vt1.c0, vt0.c1, t0.c50 FROM vt0 LEFT OUTER JOIN t0 ON CASE WHEN CHAR('-252149890') THEN ((t0.c46) NOT BETWEEN (t0.c46) AND (t0.c50)) END INNER JOIN vt1 ON CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM GROUP BY vt1.c0, vt0.c1, t0.c50;
SELECT vt1.c0, vt0.c1, t0.c50 FROM vt0 LEFT OUTER JOIN t0 ON CASE WHEN CHAR('-252149890') THEN ((t0.c46) NOT BETWEEN (t0.c46) AND (t0.c50)) END INNER JOIN vt1 ON CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM WHERE (((SUBSTR(vt0.c2, vt0.c1)) IS FALSE)) GROUP BY vt1.c0, vt0.c1, t0.c50 UNION SELECT ALL vt1.c0, vt0.c1, t0.c50 FROM vt0 LEFT OUTER JOIN t0 ON CASE WHEN CHAR('-252149890') THEN ((t0.c46) NOT BETWEEN (t0.c46) AND (t0.c50)) END INNER JOIN vt1 ON CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM WHERE ((NOT (((SUBSTR(vt0.c2, vt0.c1)) IS FALSE)))) GROUP BY vt1.c0, vt0.c1, t0.c50 UNION SELECT ALL vt1.c0, vt0.c1, t0.c50 FROM vt0 LEFT OUTER JOIN t0 ON CASE WHEN CHAR('-252149890') THEN ((t0.c46) NOT BETWEEN (t0.c46) AND (t0.c50)) END INNER JOIN vt1 ON CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM WHERE (((((SUBSTR(vt0.c2, vt0.c1)) IS FALSE)) ISNULL)) GROUP BY vt1.c0, vt0.c1, t0.c50;
SELECT ALL vt1.c0, vt0.c1, t0.c50 FROM vt0 LEFT OUTER JOIN t0 ON CASE WHEN CHAR('-252149890') THEN ((t0.c46) NOT BETWEEN (t0.c46) AND (t0.c50)) END INNER JOIN vt1 ON CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM GROUP BY vt1.c0, vt0.c1, t0.c50;
SELECT ALL vt1.c0, vt0.c0, vt0.c2 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c2;
SELECT ALL vt1.c0, vt0.c0, vt0.c2 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c2 HAVING '-1915430043' UNION ALL SELECT vt1.c0, vt0.c0, vt0.c2 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c2 HAVING (NOT ('-1915430043')) UNION ALL SELECT ALL vt1.c0, vt0.c0, vt0.c2 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c2 HAVING (('-1915430043') ISNULL);
SELECT ALL vt1.c0, vt0.c0, vt0.c2 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c2;
SELECT ALL vt1.c0, vt0.c0, vt0.c2 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c2 HAVING '-1915430043' UNION ALL SELECT vt1.c0, vt0.c0, vt0.c2 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c2 HAVING (NOT ('-1915430043')) UNION ALL SELECT ALL vt1.c0, vt0.c0, vt0.c2 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c2 HAVING (('-1915430043') ISNULL);
SELECT ALL vt1.c0, vt0.c0, vt0.c2 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c2;
SELECT * FROM vt1, t0;
SELECT * FROM vt1, t0 WHERE (((((t0.c50)GLOB(t0.c46))) NOT NULL)) UNION ALL SELECT ALL * FROM vt1, t0 WHERE ((NOT (((((t0.c50)GLOB(t0.c46))) NOT NULL)))) UNION ALL SELECT * FROM vt1, t0 WHERE (((((((t0.c50)GLOB(t0.c46))) NOT NULL)) ISNULL));
SELECT * FROM vt1, t0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((1810504770) BETWEEN ((vt1.c0 IN ())) AND (((vt1.c0)>=(vt1.c0))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((1810504770) BETWEEN ((vt1.c0 IN ())) AND (((vt1.c0)>=(vt1.c0))))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((1810504770) BETWEEN ((vt1.c0 IN ())) AND (((vt1.c0)>=(vt1.c0))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL t0.c0, t0.c46, t0.c50 FROM t0, vt1 GROUP BY t0.c0, t0.c46, t0.c50;
SELECT t0.c0, t0.c46, t0.c50 FROM t0, vt1 WHERE ((+ (CAST(t0.c0 AS REAL)))) GROUP BY t0.c0, t0.c46, t0.c50 UNION SELECT t0.c0, t0.c46, t0.c50 FROM t0, vt1 WHERE ((NOT ((+ (CAST(t0.c0 AS REAL)))))) GROUP BY t0.c0, t0.c46, t0.c50 UNION SELECT t0.c0, t0.c46, t0.c50 FROM t0, vt1 WHERE ((((+ (CAST(t0.c0 AS REAL)))) ISNULL)) GROUP BY t0.c0, t0.c46, t0.c50;
SELECT ALL t0.c0, t0.c46, t0.c50 FROM t0, vt1 GROUP BY t0.c0, t0.c46, t0.c50;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING CAST(t0.c0 COLLATE NOCASE AS REAL) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (CAST(t0.c0 COLLATE NOCASE AS REAL))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((CAST(t0.c0 COLLATE NOCASE AS REAL)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING CAST(t0.c0 COLLATE NOCASE AS REAL) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (CAST(t0.c0 COLLATE NOCASE AS REAL))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((CAST(t0.c0 COLLATE NOCASE AS REAL)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) IS FALSE))GLOB(((vt0.c0) ISNULL)))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((((vt0.c0) IS FALSE))GLOB(((vt0.c0) ISNULL)))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((((vt0.c0) IS FALSE))GLOB(((vt0.c0) ISNULL)))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM t0 CROSS JOIN vt1 ON t0.c50;
SELECT DISTINCT * FROM t0 CROSS JOIN vt1 ON t0.c50 WHERE ((((((t0.c46))==((t0.c50)))) BETWEEN (t0.c50 COLLATE BINARY) AND (t0.c0))) UNION SELECT DISTINCT * FROM t0 CROSS JOIN vt1 ON t0.c50 WHERE ((NOT ((((((t0.c46))==((t0.c50)))) BETWEEN (t0.c50 COLLATE BINARY) AND (t0.c0))))) UNION SELECT DISTINCT * FROM t0 CROSS JOIN vt1 ON t0.c50 WHERE ((((((((t0.c46))=((t0.c50)))) BETWEEN (t0.c50 COLLATE BINARY) AND (t0.c0))) ISNULL));
SELECT DISTINCT * FROM t0 CROSS JOIN vt1 ON t0.c50;
SELECT t0.c50, t0.c0, vt0.c1, vt0.c2, t0.c46, vt1.c0, vt0.c0 FROM vt1, vt0 NATURAL JOIN t0 GROUP BY t0.c50, t0.c0, vt0.c1, vt0.c2, t0.c46, vt1.c0, vt0.c0;
SELECT t0.c50, t0.c0, vt0.c1, vt0.c2, t0.c46, vt1.c0, vt0.c0 FROM vt1, vt0 NATURAL JOIN t0 WHERE ((((CASE t0.c50  WHEN vt0.c0 THEN t0.c0 WHEN vt0.c1 THEN t0.c0 WHEN vt1.c0 THEN vt0.c1 ELSE '' END))<=((CAST(vt0.c2 AS BLOB))))) GROUP BY t0.c50, t0.c0, vt0.c1, vt0.c2, t0.c46, vt1.c0, vt0.c0 UNION SELECT t0.c50, t0.c0, vt0.c1, vt0.c2, t0.c46, vt1.c0, vt0.c0 FROM vt1, vt0 NATURAL JOIN t0 WHERE ((NOT ((((CASE t0.c50  WHEN vt0.c0 THEN t0.c0 WHEN vt0.c1 THEN t0.c0 WHEN vt1.c0 THEN vt0.c1 ELSE '' END))<=((CAST(vt0.c2 AS BLOB))))))) GROUP BY t0.c50, t0.c0, vt0.c1, vt0.c2, t0.c46, vt1.c0, vt0.c0 UNION SELECT t0.c50, t0.c0, vt0.c1, vt0.c2, t0.c46, vt1.c0, vt0.c0 FROM vt1, vt0 NATURAL JOIN t0 WHERE ((((((CASE t0.c50  WHEN vt0.c0 THEN t0.c0 WHEN vt0.c1 THEN t0.c0 WHEN vt1.c0 THEN vt0.c1 ELSE '' END))<=((CAST(vt0.c2 AS BLOB))))) ISNULL)) GROUP BY t0.c50, t0.c0, vt0.c1, vt0.c2, t0.c46, vt1.c0, vt0.c0;
SELECT t0.c50, t0.c0, vt0.c1, vt0.c2, t0.c46, vt1.c0, vt0.c0 FROM vt1, vt0 NATURAL JOIN t0 GROUP BY t0.c50, t0.c0, vt0.c1, vt0.c2, t0.c46, vt1.c0, vt0.c0;
SELECT t0.c0 FROM vt0, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt0, t0 GROUP BY t0.c0 HAVING TOTAL(COUNT(*)) UNION ALL SELECT t0.c0 FROM vt0, t0 GROUP BY t0.c0 HAVING (NOT (TOTAL(COUNT(*)))) UNION ALL SELECT ALL t0.c0 FROM vt0, t0 GROUP BY t0.c0 HAVING ((TOTAL(COUNT(*))) ISNULL);
SELECT MAX((NOT (t0.c50 COLLATE RTRIM))) FROM vt0, vt1, t0 ORDER BY (NOT (0.536895958369159)) ASC;
SELECT * FROM vt1;
SELECT ALL * FROM vt1 WHERE (CAST((vt1.c0 IN (vt1.c0)) AS INTEGER)) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (CAST((vt1.c0 IN (vt1.c0)) AS INTEGER)))) UNION ALL SELECT * FROM vt1 WHERE (((CAST((vt1.c0 IN (vt1.c0)) AS INTEGER)) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT vt1.c0, vt0.c1 FROM vt1, vt0;
SELECT DISTINCT vt1.c0, vt0.c1 FROM vt1, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt1.c0)||(vt0.c2)))) AND ((vt0.c2)))) UNION SELECT DISTINCT vt1.c0, vt0.c1 FROM vt1, vt0 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN ((((vt1.c0)||(vt0.c2)))) AND ((vt0.c2)))))) UNION SELECT DISTINCT vt1.c0, vt0.c1 FROM vt1, vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((((vt1.c0)||(vt0.c2)))) AND ((vt0.c2)))) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c1 FROM vt1, vt0;
SELECT t0.c46, vt0.c2, t0.c50, vt0.c1, vt0.c0 FROM t0, vt1, vt0 GROUP BY t0.c46, vt0.c2, t0.c50, vt0.c1, vt0.c0;
SELECT ALL t0.c46, vt0.c2, t0.c50, vt0.c1, vt0.c0 FROM t0, vt1, vt0 WHERE (json_array_length(((((-3.96535287E8)AND(vt0.c2)))AND(t0.c0)))) GROUP BY t0.c46, vt0.c2, t0.c50, vt0.c1, vt0.c0 UNION SELECT ALL t0.c46, vt0.c2, t0.c50, vt0.c1, vt0.c0 FROM t0, vt1, vt0 WHERE ((NOT (json_array_length(((((-3.96535287E8)AND(vt0.c2)))AND(t0.c0)))))) GROUP BY t0.c46, vt0.c2, t0.c50, vt0.c1, vt0.c0 UNION SELECT ALL t0.c46, vt0.c2, t0.c50, vt0.c1, vt0.c0 FROM t0, vt1, vt0 WHERE (((json_array_length(((((-3.96535287E8)AND(vt0.c2)))AND(t0.c0)))) ISNULL)) GROUP BY t0.c46, vt0.c2, t0.c50, vt0.c1, vt0.c0;
SELECT t0.c46, vt0.c2, t0.c50, vt0.c1, vt0.c0 FROM t0, vt1, vt0 GROUP BY t0.c46, vt0.c2, t0.c50, vt0.c1, vt0.c0;
SELECT ALL t0.c46, vt1.c0, t0.c0, vt0.c2 FROM vt1, vt0, t0 GROUP BY t0.c46, vt1.c0, t0.c0, vt0.c2;
SELECT t0.c46, vt1.c0, t0.c0, vt0.c2 FROM vt1, vt0, t0 GROUP BY t0.c46, vt1.c0, t0.c0, vt0.c2 HAVING MIN(((vt0.c0)/(vt1.c0))) UNION ALL SELECT t0.c46, vt1.c0, t0.c0, vt0.c2 FROM vt1, vt0, t0 GROUP BY t0.c46, vt1.c0, t0.c0, vt0.c2 HAVING (NOT (MIN(((vt0.c0)/(vt1.c0))))) UNION ALL SELECT t0.c46, vt1.c0, t0.c0, vt0.c2 FROM vt1, vt0, t0 GROUP BY t0.c46, vt1.c0, t0.c0, vt0.c2 HAVING ((MIN(((vt0.c0)/(vt1.c0)))) ISNULL);
SELECT ALL t0.c46, vt1.c0, t0.c0, vt0.c2 FROM vt1, vt0, t0 GROUP BY t0.c46, vt1.c0, t0.c0, vt0.c2;
SELECT t0.c46, vt1.c0, t0.c0, vt0.c2 FROM vt1, vt0, t0 GROUP BY t0.c46, vt1.c0, t0.c0, vt0.c2 HAVING MIN(((vt0.c0)/(vt1.c0))) UNION ALL SELECT t0.c46, vt1.c0, t0.c0, vt0.c2 FROM vt1, vt0, t0 GROUP BY t0.c46, vt1.c0, t0.c0, vt0.c2 HAVING (NOT (MIN(((vt0.c0)/(vt1.c0))))) UNION ALL SELECT t0.c46, vt1.c0, t0.c0, vt0.c2 FROM vt1, vt0, t0 GROUP BY t0.c46, vt1.c0, t0.c0, vt0.c2 HAVING ((MIN(((vt0.c0)/(vt1.c0)))) ISNULL);
SELECT ALL t0.c46, vt1.c0, t0.c0, vt0.c2 FROM vt1, vt0, t0 GROUP BY t0.c46, vt1.c0, t0.c0, vt0.c2;
SELECT ALL vt0.c2, vt0.c1, vt0.c0 FROM vt0;
SELECT ALL vt0.c2, vt0.c1, vt0.c0 FROM vt0 WHERE (((((0.02014806761083132) NOTNULL))<(((((vt0.c2)OR(vt0.c1)))OR(vt0.c0))))) UNION ALL SELECT vt0.c2, vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((((0.02014806761083132) NOTNULL))<(((((vt0.c2)OR(vt0.c1)))OR(vt0.c0))))))) UNION ALL SELECT vt0.c2, vt0.c1, vt0.c0 FROM vt0 WHERE (((((((0.02014806761083132) NOTNULL))<(((((vt0.c2)OR(vt0.c1)))OR(vt0.c0))))) ISNULL));
SELECT ALL vt0.c2, vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (vt1.c0) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM t0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM t0, vt1 WHERE (-1) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM t0, vt1 WHERE ((NOT (-1))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM t0, vt1 WHERE (((-1) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM t0, vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c2 FROM t0, vt1 INDEXED BY i46, vt0 GROUP BY vt0.c2;
SELECT vt0.c0, t0.c46, vt0.c2, t0.c50 FROM vt0, t0, vt1;
SELECT ALL vt0.c0, t0.c46, vt0.c2, t0.c50 FROM vt0, t0, vt1 WHERE (CAST(((vt0.c1) NOT BETWEEN (t0.c46) AND (t0.c50)) AS INTEGER)) UNION ALL SELECT ALL vt0.c0, t0.c46, vt0.c2, t0.c50 FROM vt0, t0, vt1 WHERE ((NOT (CAST(((vt0.c1) NOT BETWEEN (t0.c46) AND (t0.c50)) AS INTEGER)))) UNION ALL SELECT ALL vt0.c0, t0.c46, vt0.c2, t0.c50 FROM vt0, t0, vt1 WHERE (((CAST(((vt0.c1) NOT BETWEEN (t0.c46) AND (t0.c50)) AS INTEGER)) ISNULL));
SELECT vt0.c0, t0.c46, vt0.c2, t0.c50 FROM vt0, t0, vt1;
SELECT DISTINCT * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0 WHERE ((((vt0.c0 IN (vt0.c1))) BETWEEN ('dxCE2T!') AND (t0.c50))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((NOT ((((vt0.c0 IN (vt0.c1))) BETWEEN ('dxCE2T!') AND (t0.c50))))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((((((vt0.c0 IN (vt0.c1))) BETWEEN ('dxCE2T!') AND (t0.c50))) ISNULL));
SELECT DISTINCT * FROM t0, vt0;
SELECT ALL t0.c46, vt0.c2, t0.c50, vt0.c1 FROM vt1, vt0, t0 GROUP BY t0.c46, vt0.c2, t0.c50, vt0.c1;
SELECT t0.c46, vt0.c2, t0.c50, vt0.c1 FROM vt1, vt0, t0 WHERE (((IFNULL(t0.c50, vt0.c1))=((((vt1.c0, vt0.c0, 1581564786)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((t0.c0, vt0.c2, vt0.c1)))))) GROUP BY t0.c46, vt0.c2, t0.c50, vt0.c1 UNION SELECT t0.c46, vt0.c2, t0.c50, vt0.c1 FROM vt1, vt0, t0 WHERE ((NOT (((IFNULL(t0.c50, vt0.c1))=((((vt1.c0, vt0.c0, 1581564786)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((t0.c0, vt0.c2, vt0.c1)))))))) GROUP BY t0.c46, vt0.c2, t0.c50, vt0.c1 UNION SELECT ALL t0.c46, vt0.c2, t0.c50, vt0.c1 FROM vt1, vt0, t0 WHERE (((((IFNULL(t0.c50, vt0.c1))=((((vt1.c0, vt0.c0, 1581564786)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((t0.c0, vt0.c2, vt0.c1)))))) ISNULL)) GROUP BY t0.c46, vt0.c2, t0.c50, vt0.c1;
SELECT ALL t0.c46, vt0.c2, t0.c50, vt0.c1 FROM vt1, vt0, t0 GROUP BY t0.c46, vt0.c2, t0.c50, vt0.c1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (GROUP_CONCAT(TOTAL(vt1.c0)) COLLATE BINARY)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((NOT (GROUP_CONCAT(TOTAL(vt1.c0)) COLLATE BINARY)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((NOT (GROUP_CONCAT(TOTAL(vt1.c0)) COLLATE BINARY))) ISNULL);
SELECT ALL vt1.c0, t0.c46, t0.c0, t0.c50 FROM t0, vt1;
SELECT vt1.c0, t0.c46, t0.c0, t0.c50 FROM t0, vt1 WHERE ((((t0.c46, NULL, t0.c46)) BETWEEN ((((vt1.c0)LIKE('-1357057062')), ((t0.c46) ISNULL), ((t0.c46)AND(t0.c0)))) AND ((((t0.c0) NOTNULL), t0.c0 COLLATE NOCASE, ((((t0.c50)AND(t0.c46)))AND('')))))) UNION ALL SELECT ALL vt1.c0, t0.c46, t0.c0, t0.c50 FROM t0, vt1 WHERE ((NOT ((((t0.c46, NULL, t0.c46)) BETWEEN ((((vt1.c0)LIKE('-1357057062')), ((t0.c46) ISNULL), ((t0.c46)AND(t0.c0)))) AND ((((t0.c0) NOTNULL), t0.c0 COLLATE NOCASE, ((((t0.c50)AND(t0.c46)))AND('')))))))) UNION ALL SELECT ALL vt1.c0, t0.c46, t0.c0, t0.c50 FROM t0 NOT INDEXED, vt1 WHERE ((((((t0.c46, NULL, t0.c46)) BETWEEN ((((vt1.c0)LIKE('-1357057062')), ((t0.c46) ISNULL), ((t0.c46)AND(t0.c0)))) AND ((((t0.c0) NOTNULL), t0.c0 COLLATE NOCASE, ((((t0.c50)AND(t0.c46)))AND('')))))) ISNULL));
SELECT ALL vt1.c0, t0.c46, t0.c0, t0.c50 FROM t0, vt1;
SELECT DISTINCT vt0.c2, t0.c50, t0.c46, t0.c0, vt0.c0 FROM vt0 INNER JOIN t0 ON ((CAST(0.3795872634948909 AS INTEGER)) BETWEEN (((((t0.c50)AND(vt0.c2)))OR(t0.c50))) AND (IFNULL(t0.c0, t0.c46)));
SELECT DISTINCT vt0.c2, t0.c50, t0.c46, t0.c0, vt0.c0 FROM vt0 INNER JOIN t0 ON ((CAST(0.3795872634948909 AS INTEGER)) BETWEEN (((((t0.c50)AND(vt0.c2)))OR(t0.c50))) AND (IFNULL(t0.c0, t0.c46))) WHERE (((t0.c46) NOT NULL)) UNION SELECT DISTINCT vt0.c2, t0.c50, t0.c46, t0.c0, vt0.c0 FROM vt0 INNER JOIN t0 ON ((CAST(0.3795872634948909 AS INTEGER)) BETWEEN (((((t0.c50)AND(vt0.c2)))OR(t0.c50))) AND (IFNULL(t0.c0, t0.c46))) WHERE ((NOT (((t0.c46) NOT NULL)))) UNION SELECT DISTINCT vt0.c2, t0.c50, t0.c46, t0.c0, vt0.c0 FROM vt0 INNER JOIN t0 ON ((CAST(0.3795872634948909 AS INTEGER)) BETWEEN (((((t0.c50)AND(vt0.c2)))OR(t0.c50))) AND (IFNULL(t0.c0, t0.c46))) WHERE (((((t0.c46) NOT NULL)) ISNULL));
SELECT DISTINCT vt0.c2, t0.c50, t0.c46, t0.c0, vt0.c0 FROM vt0 INNER JOIN t0 ON ((CAST(0.3795872634948909 AS INTEGER)) BETWEEN (((((t0.c50)AND(vt0.c2)))OR(t0.c50))) AND (IFNULL(t0.c0, t0.c46)));
SELECT t0.c0, t0.c46 FROM vt0, t0 GROUP BY t0.c0, t0.c46;
SELECT ALL t0.c0, t0.c46 FROM vt0, t0 WHERE ((((((vt0.c0 IN ()))AND(((t0.c50) BETWEEN (vt0.c0) AND (t0.c46)))))AND(vt0.c2 COLLATE BINARY))) GROUP BY t0.c0, t0.c46 UNION SELECT t0.c0, t0.c46 FROM vt0, t0 WHERE ((NOT ((((((vt0.c0 IN ()))AND(((t0.c50) BETWEEN (vt0.c0) AND (t0.c46)))))AND(vt0.c2 COLLATE BINARY))))) GROUP BY t0.c0, t0.c46 UNION SELECT t0.c0, t0.c46 FROM vt0, t0 WHERE ((((((((vt0.c0 IN ()))AND(((t0.c50) BETWEEN (vt0.c0) AND (t0.c46)))))AND(vt0.c2 COLLATE BINARY))) ISNULL)) GROUP BY t0.c0, t0.c46;
SELECT t0.c0, t0.c46 FROM vt0, t0 GROUP BY t0.c0, t0.c46;
SELECT ALL vt1.c0, t0.c50, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c50, t0.c0;
SELECT ALL vt1.c0, t0.c50, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c50, t0.c0 HAVING CAST(SUM(AVG(t0.c0)) AS BLOB) UNION ALL SELECT vt1.c0, t0.c50, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c50, t0.c0 HAVING (NOT (CAST(SUM(AVG(t0.c0)) AS BLOB))) UNION ALL SELECT vt1.c0, t0.c50, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c50, t0.c0 HAVING ((CAST(SUM(AVG(t0.c0)) AS BLOB)) ISNULL);
SELECT ALL vt0.c1 FROM vt1, vt0;
SELECT vt0.c1 FROM vt1, vt0 WHERE ((- (((vt0.c2)/(vt0.c2))))) UNION ALL SELECT vt0.c1 FROM vt1, vt0 WHERE ((NOT ((- (((vt0.c2)/(vt0.c2))))))) UNION ALL SELECT vt0.c1 FROM vt1, vt0 WHERE ((((- (((vt0.c2)/(vt0.c2))))) ISNULL));
SELECT ALL vt0.c1 FROM vt1, vt0;
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN vt0 ON (((((~ (NULL)))OR('^][_wijGQ')))AND(((t0.c46) NOT NULL))) FULL OUTER JOIN vt1 ON CAST(vt1.c0 COLLATE BINARY AS NUMERIC);
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN vt0 ON (((((~ (NULL)))OR('^][_wijGQ')))AND(((t0.c46) NOT NULL))) FULL OUTER JOIN vt1 ON CAST(vt1.c0 COLLATE BINARY AS NUMERIC) WHERE (((((vt1.c0) NOT BETWEEN (-2.071678105E9) AND (vt1.c0)))<((((t0.c46))!=((t0.c0)))))) UNION SELECT DISTINCT * FROM t0 LEFT OUTER JOIN vt0 ON (((((~ (NULL)))OR('^][_wijGQ')))AND(((t0.c46) NOT NULL))) FULL OUTER JOIN vt1 ON CAST(vt1.c0 COLLATE BINARY AS NUMERIC) WHERE ((NOT (((((vt1.c0) NOT BETWEEN (-2.071678105E9) AND (vt1.c0)))<((((t0.c46))<>((t0.c0)))))))) UNION SELECT DISTINCT * FROM t0 LEFT OUTER JOIN vt0 ON (((((~ (NULL)))OR('^][_wijGQ')))AND(((t0.c46) NOT NULL))) FULL OUTER JOIN vt1 ON CAST(vt1.c0 COLLATE BINARY AS NUMERIC) WHERE (((((((vt1.c0) NOT BETWEEN (-2.071678105E9) AND (vt1.c0)))<((((t0.c46))<>((t0.c0)))))) ISNULL));
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN vt0 ON (((((~ (NULL)))OR('^][_wijGQ')))AND(((t0.c46) NOT NULL))) FULL OUTER JOIN vt1 ON CAST(vt1.c0 COLLATE BINARY AS NUMERIC);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))))AND(CAST(vt1.c0 AS BLOB)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))))AND(CAST(vt1.c0 AS BLOB)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))))AND(CAST(vt1.c0 AS BLOB)))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(TOTAL(vt1.c0)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(TOTAL(vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(TOTAL(vt1.c0))) ISNULL);
SELECT t0.c46 FROM vt1, t0;
SELECT t0.c46 FROM vt1, t0 WHERE (CAST((((vt1.c0)) BETWEEN ((NULL)) AND ((t0.c46))) AS TEXT)) UNION ALL SELECT ALL t0.c46 FROM vt1 NOT INDEXED, t0 WHERE ((NOT (CAST((((vt1.c0)) BETWEEN ((NULL)) AND ((t0.c46))) AS TEXT)))) UNION ALL SELECT t0.c46 FROM vt1, t0 WHERE (((CAST((((vt1.c0)) BETWEEN ((NULL)) AND ((t0.c46))) AS TEXT)) ISNULL));
SELECT t0.c46 FROM vt1, t0;
SELECT DISTINCT * FROM t0, vt1;
SELECT DISTINCT * FROM t0, vt1 WHERE (CASE ((x'')-(t0.c50))  WHEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c50 THEN t0.c50 WHEN t0.c0 THEN t0.c46 WHEN vt1.c0 THEN vt1.c0 ELSE t0.c0 END THEN ((t0.c50) BETWEEN (t0.c0) AND (t0.c46)) WHEN (+ (t0.c46)) THEN ((t0.c46)IS(t0.c46)) WHEN ((t0.c0) IS TRUE) THEN t0.c46 END) UNION SELECT DISTINCT * FROM t0, vt1 WHERE ((NOT (CASE ((x'')-(t0.c50))  WHEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c50 THEN t0.c50 WHEN t0.c0 THEN t0.c46 WHEN vt1.c0 THEN vt1.c0 ELSE t0.c0 END THEN ((t0.c50) BETWEEN (t0.c0) AND (t0.c46)) WHEN (+ (t0.c46)) THEN ((t0.c46)IS(t0.c46)) WHEN ((t0.c0) IS TRUE) THEN t0.c46 END))) UNION SELECT DISTINCT * FROM t0, vt1 WHERE (((CASE ((x'')-(t0.c50))  WHEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c50 THEN t0.c50 WHEN t0.c0 THEN t0.c46 WHEN vt1.c0 THEN vt1.c0 ELSE t0.c0 END THEN ((t0.c50) BETWEEN (t0.c0) AND (t0.c46)) WHEN (+ (t0.c46)) THEN ((t0.c46)IS(t0.c46)) WHEN ((t0.c0) IS TRUE) THEN t0.c46 END) ISNULL));
SELECT DISTINCT * FROM t0, vt1;
SELECT ALL vt0.c1 FROM vt0, vt1 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0, vt1 WHERE ((('L(>\')IS NOT(((NULL)+(vt0.c1))))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0, vt1 WHERE ((NOT ((('L(>\')IS NOT(((NULL)+(vt0.c1))))))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0, vt1 WHERE ((((('L(>\')IS NOT(((NULL)+(vt0.c1))))) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0, vt1 GROUP BY vt0.c1;
SELECT ALL vt0.c1, t0.c50 FROM vt1 CROSS JOIN t0 ON CAST(NULLIF(vt0.c2, t0.c50) AS INTEGER) INNER JOIN vt0 ON t0.c46 GROUP BY vt0.c1, t0.c50;
SELECT vt0.c1, t0.c50 FROM vt1 CROSS JOIN t0 ON CAST(NULLIF(vt0.c2, t0.c50) AS INTEGER) INNER JOIN vt0 ON t0.c46 GROUP BY vt0.c1, t0.c50 HAVING COUNT(COUNT(*)) UNION ALL SELECT vt0.c1, t0.c50 FROM vt1 CROSS JOIN t0 ON CAST(NULLIF(vt0.c2, t0.c50) AS INTEGER) INNER JOIN vt0 ON t0.c46 GROUP BY vt0.c1, t0.c50 HAVING (NOT (COUNT(COUNT(*)))) UNION ALL SELECT vt0.c1, t0.c50 FROM vt1 CROSS JOIN t0 ON CAST(NULLIF(vt0.c2, t0.c50) AS INTEGER) INNER JOIN vt0 ON t0.c46 GROUP BY vt0.c1, t0.c50 HAVING ((COUNT(COUNT(*))) ISNULL);
SELECT * FROM vt0, t0, vt1;
SELECT ALL * FROM vt0, t0, vt1 WHERE ((((((t0.c46)AND(1.944356866E9)))OR(vt0.c2)) IN ())) UNION ALL SELECT * FROM vt0, t0, vt1 WHERE ((NOT ((((((t0.c46)AND(1.944356866E9)))OR(vt0.c2)) IN ())))) UNION ALL SELECT * FROM vt0, t0, vt1 WHERE ((((((((t0.c46)AND(1.944356866E9)))OR(vt0.c2)) IN ())) ISNULL));
SELECT * FROM vt0, t0, vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((((vt1.c0)>(vt1.c0)) IN ())) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((((vt1.c0)>(vt1.c0)) IN ())))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((((vt1.c0)>(vt1.c0)) IN ())) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT t0.c0, vt0.c1, t0.c50, vt1.c0 FROM vt1, t0, vt0 GROUP BY t0.c0, vt0.c1, t0.c50, vt1.c0;
SELECT ALL t0.c0, vt0.c1, t0.c50, vt1.c0 FROM vt1, t0, vt0 WHERE ((((((vt1.c0))<>((t0.c0)))) IS TRUE)) GROUP BY t0.c0, vt0.c1, t0.c50, vt1.c0 UNION SELECT ALL t0.c0, vt0.c1, t0.c50, vt1.c0 FROM vt1, t0, vt0 WHERE ((NOT ((((((vt1.c0))!=((t0.c0)))) IS TRUE)))) GROUP BY t0.c0, vt0.c1, t0.c50, vt1.c0 UNION SELECT t0.c0, vt0.c1, t0.c50, vt1.c0 FROM vt1, t0, vt0 WHERE ((((((((vt1.c0))!=((t0.c0)))) IS TRUE)) ISNULL)) GROUP BY t0.c0, vt0.c1, t0.c50, vt1.c0;
SELECT t0.c0, vt0.c1, t0.c50, vt1.c0 FROM vt1, t0, vt0 GROUP BY t0.c0, vt0.c1, t0.c50, vt1.c0;
SELECT ALL vt0.c0, t0.c46 FROM vt1, vt0, t0 GROUP BY vt0.c0, t0.c46;
SELECT vt0.c0, t0.c46 FROM vt1, vt0, t0 GROUP BY vt0.c0, t0.c46 HAVING MIN(LIKELY(vt1.c0)) UNION ALL SELECT vt0.c0, t0.c46 FROM vt1, vt0, t0 GROUP BY vt0.c0, t0.c46 HAVING (NOT (MIN(LIKELY(vt1.c0)))) UNION ALL SELECT vt0.c0, t0.c46 FROM vt1, vt0, t0 GROUP BY vt0.c0, t0.c46 HAVING ((MIN(LIKELY(vt1.c0))) ISNULL);
SELECT ALL vt0.c0, t0.c46 FROM vt1, vt0, t0 GROUP BY vt0.c0, t0.c46;
SELECT vt0.c0, t0.c46 FROM vt1, vt0, t0 GROUP BY vt0.c0, t0.c46 HAVING MIN(LIKELY(vt1.c0)) UNION ALL SELECT vt0.c0, t0.c46 FROM vt1, vt0, t0 GROUP BY vt0.c0, t0.c46 HAVING (NOT (MIN(LIKELY(vt1.c0)))) UNION ALL SELECT vt0.c0, t0.c46 FROM vt1, vt0, t0 GROUP BY vt0.c0, t0.c46 HAVING ((MIN(LIKELY(vt1.c0))) ISNULL);
SELECT ALL vt0.c0, t0.c46 FROM vt1, vt0, t0 GROUP BY vt0.c0, t0.c46;
SELECT ALL vt0.c0, vt0.c1, t0.c0, vt0.c2 FROM vt0, t0;
SELECT vt0.c0, vt0.c1, t0.c0, vt0.c2 FROM vt0, t0 WHERE (t0.c46) UNION ALL SELECT ALL vt0.c0, vt0.c1, t0.c0, vt0.c2 FROM vt0, t0 WHERE ((NOT (t0.c46))) UNION ALL SELECT vt0.c0, vt0.c1, t0.c0, vt0.c2 FROM vt0, t0 WHERE (((t0.c46) ISNULL));
SELECT ALL vt0.c0, vt0.c1, t0.c0, vt0.c2 FROM vt0, t0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (LIKELIHOOD(DISTINCT ABS(DISTINCT vt1.c0), 0.3080091209629813)) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (LIKELIHOOD(DISTINCT ABS(DISTINCT vt1.c0), 0.3080091209629813)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((LIKELIHOOD(DISTINCT ABS(DISTINCT vt1.c0), 0.3080091209629813)) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((((vt1.c0)AND(vt1.c0)))>(TRIM(vt1.c0)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0)AND(vt1.c0)))>(TRIM(vt1.c0)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c0)))>(TRIM(vt1.c0)))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((ABS(0.20923527636099704))AND(CAST(COUNT(*) AS BLOB))))OR(((vt1.c0) ISNULL))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((((ABS(0.20923527636099704))AND(CAST(COUNT(*) AS BLOB))))OR(((vt1.c0) ISNULL))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((((ABS(0.20923527636099704))AND(CAST(COUNT(*) AS BLOB))))OR(((vt1.c0) ISNULL)))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((ABS(0.20923527636099704))AND(CAST(COUNT(*) AS BLOB))))OR(((vt1.c0) ISNULL))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((((ABS(0.20923527636099704))AND(CAST(COUNT(*) AS BLOB))))OR(((vt1.c0) ISNULL))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((((ABS(0.20923527636099704))AND(CAST(COUNT(*) AS BLOB))))OR(((vt1.c0) ISNULL)))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT * FROM t0, vt0;
SELECT * FROM t0, vt0 WHERE ((((t0.c46 IN ())) IS FALSE)) UNION ALL SELECT ALL * FROM t0, vt0 WHERE ((NOT ((((t0.c46 IN ())) IS FALSE)))) UNION ALL SELECT ALL * FROM t0, vt0 WHERE ((((((t0.c46 IN ())) IS FALSE)) ISNULL));
SELECT * FROM t0, vt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((+ ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((0.5542816282150059, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((+ ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((0.5542816282150059, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((+ ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((0.5542816282150059, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT t0.c0, vt0.c0 FROM vt0, vt1, t0 GROUP BY t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM vt0, vt1, t0 WHERE (CAST(((vt0.c0) BETWEEN (t0.c50) AND (vt1.c0)) AS REAL)) GROUP BY t0.c0, vt0.c0 UNION SELECT ALL t0.c0, vt0.c0 FROM vt0, vt1, t0 WHERE ((NOT (CAST(((vt0.c0) BETWEEN (t0.c50) AND (vt1.c0)) AS REAL)))) GROUP BY t0.c0, vt0.c0 UNION SELECT ALL t0.c0, vt0.c0 FROM vt0, vt1, t0 WHERE (((CAST(((vt0.c0) BETWEEN (t0.c50) AND (vt1.c0)) AS REAL)) ISNULL)) GROUP BY t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM vt0, vt1, t0 GROUP BY t0.c0, vt0.c0;
SELECT t0.c50, t0.c0, vt0.c0, t0.c46, vt0.c1 FROM t0, vt0 GROUP BY t0.c50, t0.c0, vt0.c0, t0.c46, vt0.c1;
SELECT t0.c50, t0.c0, vt0.c0, t0.c46, vt0.c1 FROM t0, vt0 GROUP BY t0.c50, t0.c0, vt0.c0, t0.c46, vt0.c1 HAVING CAST(COUNT(*) AS BLOB) UNION ALL SELECT ALL t0.c50, t0.c0, vt0.c0, t0.c46, vt0.c1 FROM t0, vt0 GROUP BY t0.c50, t0.c0, vt0.c0, t0.c46, vt0.c1 HAVING (NOT (CAST(COUNT(*) AS BLOB))) UNION ALL SELECT t0.c50, t0.c0, vt0.c0, t0.c46, vt0.c1 FROM t0, vt0 GROUP BY t0.c50, t0.c0, vt0.c0, t0.c46, vt0.c1 HAVING ((CAST(COUNT(*) AS BLOB)) ISNULL);
SELECT t0.c50, t0.c0, vt0.c0, t0.c46, vt0.c1 FROM t0, vt0 GROUP BY t0.c50, t0.c0, vt0.c0, t0.c46, vt0.c1;
SELECT t0.c50, t0.c0, vt0.c0, t0.c46, vt0.c1 FROM t0, vt0 GROUP BY t0.c50, t0.c0, vt0.c0, t0.c46, vt0.c1 HAVING CAST(COUNT(*) AS BLOB) UNION ALL SELECT ALL t0.c50, t0.c0, vt0.c0, t0.c46, vt0.c1 FROM t0, vt0 GROUP BY t0.c50, t0.c0, vt0.c0, t0.c46, vt0.c1 HAVING (NOT (CAST(COUNT(*) AS BLOB))) UNION ALL SELECT t0.c50, t0.c0, vt0.c0, t0.c46, vt0.c1 FROM t0, vt0 GROUP BY t0.c50, t0.c0, vt0.c0, t0.c46, vt0.c1 HAVING ((CAST(COUNT(*) AS BLOB)) ISNULL);
SELECT t0.c50, t0.c0, vt0.c0, t0.c46, vt0.c1 FROM t0, vt0 GROUP BY t0.c50, t0.c0, vt0.c0, t0.c46, vt0.c1;
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)==(775754096))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0 COLLATE RTRIM)=(775754096))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0 COLLATE RTRIM)==(775754096))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ('-492561172') UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ('-492561172'))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((('-492561172') ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt0.c0, t0.c50, t0.c46 FROM t0, vt0 GROUP BY vt0.c0, t0.c50, t0.c46;
SELECT vt0.c0, t0.c50, t0.c46 FROM t0, vt0 WHERE (-1.77780489E9) GROUP BY vt0.c0, t0.c50, t0.c46 UNION SELECT ALL vt0.c0, t0.c50, t0.c46 FROM t0, vt0 WHERE ((NOT (-1.77780489E9))) GROUP BY vt0.c0, t0.c50, t0.c46 UNION SELECT ALL vt0.c0, t0.c50, t0.c46 FROM t0, vt0 WHERE (((-1.77780489E9) ISNULL)) GROUP BY vt0.c0, t0.c50, t0.c46;
SELECT vt0.c0, t0.c50, t0.c46 FROM t0, vt0 GROUP BY vt0.c0, t0.c50, t0.c46;
SELECT t0.c46, vt0.c0, vt1.c0 FROM vt1, vt0, t0 GROUP BY t0.c46, vt0.c0, vt1.c0;
SELECT t0.c46, vt0.c0, vt1.c0 FROM vt1, vt0, t0 GROUP BY t0.c46, vt0.c0, vt1.c0 HAVING ((NULL COLLATE BINARY) NOTNULL) UNION ALL SELECT t0.c46, vt0.c0, vt1.c0 FROM vt1, vt0, t0 GROUP BY t0.c46, vt0.c0, vt1.c0 HAVING (NOT (((NULL COLLATE BINARY) NOTNULL))) UNION ALL SELECT t0.c46, vt0.c0, vt1.c0 FROM vt1, vt0, t0 GROUP BY t0.c46, vt0.c0, vt1.c0 HAVING ((((NULL COLLATE BINARY) NOTNULL)) ISNULL);
SELECT t0.c46, vt0.c0, vt1.c0 FROM vt1, vt0, t0 GROUP BY t0.c46, vt0.c0, vt1.c0;
SELECT t0.c46, vt0.c0, vt1.c0 FROM vt1, vt0, t0 GROUP BY t0.c46, vt0.c0, vt1.c0 HAVING ((NULL COLLATE BINARY) NOTNULL) UNION ALL SELECT t0.c46, vt0.c0, vt1.c0 FROM vt1, vt0, t0 GROUP BY t0.c46, vt0.c0, vt1.c0 HAVING (NOT (((NULL COLLATE BINARY) NOTNULL))) UNION ALL SELECT t0.c46, vt0.c0, vt1.c0 FROM vt1, vt0, t0 GROUP BY t0.c46, vt0.c0, vt1.c0 HAVING ((((NULL COLLATE BINARY) NOTNULL)) ISNULL);
SELECT t0.c46, vt0.c0, vt1.c0 FROM vt1, vt0, t0 GROUP BY t0.c46, vt0.c0, vt1.c0;
SELECT * FROM vt1, vt0;
SELECT * FROM vt1, vt0 WHERE (NULL) UNION ALL SELECT * FROM vt1, vt0 WHERE ((NOT (NULL))) UNION ALL SELECT * FROM vt1, vt0 WHERE (((NULL) ISNULL));
SELECT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (CASE WHEN vt1.c0 COLLATE NOCASE THEN (NOT (vt1.c0)) WHEN x'' THEN ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(0.772897623204911)))OR(vt1.c0)) WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END THEN (vt1.c0 IN ()) WHEN NULLIF(vt1.c0, vt1.c0) THEN ((vt1.c0)LIKE(vt1.c0)) WHEN (NULL IN ()) THEN (+ (vt1.c0)) ELSE ((vt1.c0) IS FALSE) END) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (CASE WHEN vt1.c0 COLLATE NOCASE THEN (NOT (vt1.c0)) WHEN x'' THEN ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(0.772897623204911)))OR(vt1.c0)) WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END THEN (vt1.c0 IN ()) WHEN NULLIF(vt1.c0, vt1.c0) THEN ((vt1.c0)LIKE(vt1.c0)) WHEN (NULL IN ()) THEN (+ (vt1.c0)) ELSE ((vt1.c0) IS FALSE) END))) UNION SELECT DISTINCT * FROM vt1 WHERE (((CASE WHEN vt1.c0 COLLATE NOCASE THEN (NOT (vt1.c0)) WHEN x'' THEN ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(0.772897623204911)))OR(vt1.c0)) WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END THEN (vt1.c0 IN ()) WHEN NULLIF(vt1.c0, vt1.c0) THEN ((vt1.c0)LIKE(vt1.c0)) WHEN (NULL IN ()) THEN (+ (vt1.c0)) ELSE ((vt1.c0) IS FALSE) END) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(NULL)))AND(vt1.c0)) IN ())) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(NULL)))AND(vt1.c0)) IN ())))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(NULL)))AND(vt1.c0)) IN ())) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL t0.c46, vt0.c0, t0.c0, t0.c50 FROM vt0, t0, vt1 GROUP BY t0.c46, vt0.c0, t0.c0, t0.c50;
SELECT ALL t0.c46, vt0.c0, t0.c0, t0.c50 FROM vt0, t0, vt1 GROUP BY t0.c46, vt0.c0, t0.c0, t0.c50 HAVING ABS(COUNT(vt0.c1)) UNION ALL SELECT ALL t0.c46, vt0.c0, t0.c0, t0.c50 FROM vt0, t0, vt1 GROUP BY t0.c46, vt0.c0, t0.c0, t0.c50 HAVING (NOT (ABS(COUNT(vt0.c1)))) UNION ALL SELECT ALL t0.c46, vt0.c0, t0.c0, t0.c50 FROM vt0, t0, vt1 GROUP BY t0.c46, vt0.c0, t0.c0, t0.c50 HAVING ((ABS(COUNT(vt0.c1))) ISNULL);
SELECT ALL t0.c46, vt0.c0, t0.c0, t0.c50 FROM vt0, t0, vt1 GROUP BY t0.c46, vt0.c0, t0.c0, t0.c50;
SELECT ALL t0.c46, vt0.c0, t0.c0, t0.c50 FROM vt0, t0, vt1 GROUP BY t0.c46, vt0.c0, t0.c0, t0.c50 HAVING ABS(COUNT(vt0.c1)) UNION ALL SELECT ALL t0.c46, vt0.c0, t0.c0, t0.c50 FROM vt0, t0, vt1 GROUP BY t0.c46, vt0.c0, t0.c0, t0.c50 HAVING (NOT (ABS(COUNT(vt0.c1)))) UNION ALL SELECT ALL t0.c46, vt0.c0, t0.c0, t0.c50 FROM vt0, t0, vt1 GROUP BY t0.c46, vt0.c0, t0.c0, t0.c50 HAVING ((ABS(COUNT(vt0.c1))) ISNULL);
SELECT ALL t0.c46, vt0.c0, t0.c0, t0.c50 FROM vt0, t0, vt1 GROUP BY t0.c46, vt0.c0, t0.c0, t0.c50;
SELECT vt1.c0, vt0.c1, vt0.c2, vt0.c0, t0.c0, t0.c46, t0.c50 FROM vt1, vt0, t0;
SELECT vt1.c0, vt0.c1, vt0.c2, vt0.c0, t0.c0, t0.c46, t0.c50 FROM vt1, vt0, t0 WHERE (IFNULL(t0.c0, vt0.c2) COLLATE NOCASE) UNION ALL SELECT vt1.c0, vt0.c1, vt0.c2, vt0.c0, t0.c0, t0.c46, t0.c50 FROM vt1, vt0, t0 WHERE ((NOT (IFNULL(t0.c0, vt0.c2) COLLATE NOCASE))) UNION ALL SELECT vt1.c0, vt0.c1, vt0.c2, vt0.c0, t0.c0, t0.c46, t0.c50 FROM vt1, vt0, t0 WHERE (((IFNULL(t0.c0, vt0.c2) COLLATE NOCASE) ISNULL));
SELECT vt1.c0, vt0.c1, vt0.c2, vt0.c0, t0.c0, t0.c46, t0.c50 FROM vt1, vt0, t0;
SELECT DISTINCT * FROM t0, vt1;
SELECT DISTINCT * FROM t0, vt1 WHERE ((((t0.c0)*(t0.c0)) IN (NULL, vt1.c0))) UNION SELECT DISTINCT * FROM t0, vt1 WHERE ((NOT ((((t0.c0)*(t0.c0)) IN (NULL, vt1.c0))))) UNION SELECT DISTINCT * FROM t0, vt1 WHERE ((((((t0.c0)*(t0.c0)) IN (NULL, vt1.c0))) ISNULL));
SELECT DISTINCT * FROM t0, vt1;
SELECT ALL t0.c0, t0.c50, vt0.c0, vt0.c1, t0.c46, vt0.c2 FROM vt0 CROSS JOIN vt1 ON (((((t0.c50))>=((t0.c46))))*(CASE WHEN vt0.c0 THEN vt0.c0 ELSE t0.c50 END)) CROSS JOIN t0 ON (((vt0.c2 IN ()))>=(((((((((vt0.c1)AND(vt0.c2)))OR(vt0.c0)))AND(0.26492502135754437)))AND(0.5653070980008335)))) GROUP BY t0.c0, t0.c50, vt0.c0, vt0.c1, t0.c46, vt0.c2;
SELECT ALL t0.c0, t0.c50, vt0.c0, vt0.c1, t0.c46, vt0.c2 FROM vt0 CROSS JOIN vt1 ON (((((t0.c50))>=((t0.c46))))*(CASE WHEN vt0.c0 THEN vt0.c0 ELSE t0.c50 END)) CROSS JOIN t0 ON (((vt0.c2 IN ()))>=(((((((((vt0.c1)AND(vt0.c2)))OR(vt0.c0)))AND(0.26492502135754437)))AND(0.5653070980008335)))) WHERE (vt1.c0) GROUP BY t0.c0, t0.c50, vt0.c0, vt0.c1, t0.c46, vt0.c2 UNION SELECT ALL t0.c0, t0.c50, vt0.c0, vt0.c1, t0.c46, vt0.c2 FROM vt0 CROSS JOIN vt1 ON (((((t0.c50))>=((t0.c46))))*(CASE WHEN vt0.c0 THEN vt0.c0 ELSE t0.c50 END)) CROSS JOIN t0 ON (((vt0.c2 IN ()))>=(((((((((vt0.c1)AND(vt0.c2)))OR(vt0.c0)))AND(0.26492502135754437)))AND(0.5653070980008335)))) WHERE ((NOT (vt1.c0))) GROUP BY t0.c0, t0.c50, vt0.c0, vt0.c1, t0.c46, vt0.c2 UNION SELECT ALL t0.c0, t0.c50, vt0.c0, vt0.c1, t0.c46, vt0.c2 FROM vt0 CROSS JOIN vt1 ON (((((t0.c50))>=((t0.c46))))*(CASE WHEN vt0.c0 THEN vt0.c0 ELSE t0.c50 END)) CROSS JOIN t0 ON (((vt0.c2 IN ()))>=(((((((((vt0.c1)AND(vt0.c2)))OR(vt0.c0)))AND(0.26492502135754437)))AND(0.5653070980008335)))) WHERE (((vt1.c0) ISNULL)) GROUP BY t0.c0, t0.c50, vt0.c0, vt0.c1, t0.c46, vt0.c2;
SELECT ALL t0.c0, t0.c50, vt0.c0, vt0.c1, t0.c46, vt0.c2 FROM vt0 CROSS JOIN vt1 ON (((((t0.c50))>=((t0.c46))))*(CASE WHEN vt0.c0 THEN vt0.c0 ELSE t0.c50 END)) CROSS JOIN t0 ON (((vt0.c2 IN ()))>=(((((((((vt0.c1)AND(vt0.c2)))OR(vt0.c0)))AND(0.26492502135754437)))AND(0.5653070980008335)))) GROUP BY t0.c0, t0.c50, vt0.c0, vt0.c1, t0.c46, vt0.c2;
SELECT vt0.c2, t0.c46, t0.c50, vt0.c1, vt1.c0, vt0.c0 FROM vt0 FULL OUTER JOIN vt1 ON ((((((vt0.c0)OR(t0.c50)))AND(0.09887800878312591)))LIKE(UNLIKELY(t0.c0))) FULL OUTER JOIN t0 ON (((((((((+ (t0.c46)))AND(NULL COLLATE NOCASE)))AND((vt0.c1 IN ()))))AND(CASE vt0.c1  WHEN vt0.c1 THEN t0.c50 END)))AND('2018219493')) GROUP BY vt0.c2, t0.c46, t0.c50, vt0.c1, vt1.c0, vt0.c0;
SELECT ALL t0.c50, vt0.c0, vt0.c2 FROM vt0, t0, vt1;
SELECT ALL t0.c50, vt0.c0, vt0.c2 FROM vt0, t0, vt1 WHERE (((CASE WHEN vt0.c2 THEN vt0.c1 ELSE t0.c46 END) IS TRUE)) UNION ALL SELECT t0.c50, vt0.c0, vt0.c2 FROM vt0, t0, vt1 WHERE ((NOT (((CASE WHEN vt0.c2 THEN vt0.c1 ELSE t0.c46 END) IS TRUE)))) UNION ALL SELECT t0.c50, vt0.c0, vt0.c2 FROM vt0, t0, vt1 WHERE (((((CASE WHEN vt0.c2 THEN vt0.c1 ELSE t0.c46 END) IS TRUE)) ISNULL));
SELECT ALL t0.c50, vt0.c0, vt0.c2 FROM vt0, t0, vt1;
SELECT DISTINCT * FROM vt1, t0 CROSS JOIN vt0 ON ((((((vt0.c2)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))<>((0.24488581544095667 COLLATE NOCASE)));
SELECT DISTINCT * FROM vt1, t0 CROSS JOIN vt0 ON ((((((vt0.c2)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))<>((0.24488581544095667 COLLATE NOCASE))) WHERE (CASE ((vt0.c1) NOT BETWEEN (vt0.c0) AND (t0.c0))  WHEN vt0.c0 COLLATE RTRIM THEN t0.c46 COLLATE BINARY END) UNION SELECT DISTINCT * FROM vt1, t0 CROSS JOIN vt0 ON ((((((vt0.c2)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))<>((0.24488581544095667 COLLATE NOCASE))) WHERE ((NOT (CASE ((vt0.c1) NOT BETWEEN (vt0.c0) AND (t0.c0))  WHEN vt0.c0 COLLATE RTRIM THEN t0.c46 COLLATE BINARY END))) UNION SELECT DISTINCT * FROM vt1 NOT INDEXED, t0 CROSS JOIN vt0 ON ((((((vt0.c2)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))<>((0.24488581544095667 COLLATE NOCASE))) WHERE (((CASE ((vt0.c1) NOT BETWEEN (vt0.c0) AND (t0.c0))  WHEN vt0.c0 COLLATE RTRIM THEN t0.c46 COLLATE BINARY END) ISNULL));
SELECT DISTINCT * FROM vt1, t0 CROSS JOIN vt0 ON ((((((vt0.c2)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))<>((0.24488581544095667 COLLATE NOCASE)));
SELECT t0.c46, vt0.c1, vt1.c0 FROM vt1, t0, vt0 GROUP BY t0.c46, vt0.c1, vt1.c0;
SELECT ALL t0.c46, vt0.c1, vt1.c0 FROM vt1, t0, vt0 WHERE (((CAST(vt0.c0 AS REAL))>>(vt1.c0 COLLATE RTRIM))) GROUP BY t0.c46, vt0.c1, vt1.c0 UNION SELECT t0.c46, vt0.c1, vt1.c0 FROM vt1, t0, vt0 WHERE ((NOT (((CAST(vt0.c0 AS REAL))>>(vt1.c0 COLLATE RTRIM))))) GROUP BY t0.c46, vt0.c1, vt1.c0 UNION SELECT ALL t0.c46, vt0.c1, vt1.c0 FROM vt1, t0, vt0 WHERE (((((CAST(vt0.c0 AS REAL))>>(vt1.c0 COLLATE RTRIM))) ISNULL)) GROUP BY t0.c46, vt0.c1, vt1.c0;
SELECT t0.c46, vt0.c1, vt1.c0 FROM vt1, t0, vt0 GROUP BY t0.c46, vt0.c1, vt1.c0;
SELECT t0.c0, t0.c46, t0.c50 FROM vt1, t0 GROUP BY t0.c0, t0.c46, t0.c50;
SELECT ALL t0.c0, t0.c46, t0.c50 FROM vt1, t0 GROUP BY t0.c0, t0.c46, t0.c50 HAVING COUNT(GROUP_CONCAT(t0.c50)) UNION ALL SELECT ALL t0.c0, t0.c46, t0.c50 FROM vt1, t0 GROUP BY t0.c0, t0.c46, t0.c50 HAVING (NOT (COUNT(GROUP_CONCAT(t0.c50)))) UNION ALL SELECT ALL t0.c0, t0.c46, t0.c50 FROM vt1, t0 GROUP BY t0.c0, t0.c46, t0.c50 HAVING ((COUNT(GROUP_CONCAT(t0.c50))) ISNULL);
SELECT vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON ((CASE WHEN vt0.c2 THEN vt0.c0 END) ISNULL);
SELECT vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON ((CASE WHEN vt0.c2 THEN vt0.c0 END) ISNULL) WHERE (CASE ((((((((vt0.c0)AND(vt0.c2)))AND(vt0.c2)))OR(vt0.c2)))OR(vt0.c0))  WHEN ((vt0.c0)-(vt1.c0)) THEN CAST(vt1.c0 AS INTEGER) WHEN ((vt0.c0) IS TRUE) THEN 0.7596104223743457 WHEN vt0.c0 THEN CASE vt0.c0  WHEN vt1.c0 THEN vt0.c1 END END) UNION ALL SELECT ALL vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON ((CASE WHEN vt0.c2 THEN vt0.c0 END) ISNULL) WHERE ((NOT (CASE ((((((((vt0.c0)AND(vt0.c2)))AND(vt0.c2)))OR(vt0.c2)))OR(vt0.c0))  WHEN ((vt0.c0)-(vt1.c0)) THEN CAST(vt1.c0 AS INTEGER) WHEN ((vt0.c0) IS TRUE) THEN 0.7596104223743457 WHEN vt0.c0 THEN CASE vt0.c0  WHEN vt1.c0 THEN vt0.c1 END END))) UNION ALL SELECT ALL vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON ((CASE WHEN vt0.c2 THEN vt0.c0 END) ISNULL) WHERE (((CASE ((((((((vt0.c0)AND(vt0.c2)))AND(vt0.c2)))OR(vt0.c2)))OR(vt0.c0))  WHEN ((vt0.c0)-(vt1.c0)) THEN CAST(vt1.c0 AS INTEGER) WHEN ((vt0.c0) IS TRUE) THEN 0.7596104223743457 WHEN vt0.c0 THEN CASE vt0.c0  WHEN vt1.c0 THEN vt0.c1 END END) ISNULL));
SELECT vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON ((CASE WHEN vt0.c2 THEN vt0.c0 END) ISNULL);
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (LENGTH(((vt0.c2)LIKE(vt0.c0)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (LENGTH(((vt0.c2)LIKE(vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((LENGTH(((vt0.c2)LIKE(vt0.c0)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT t0.c46, t0.c50 FROM t0 GROUP BY t0.c46, t0.c50;
SELECT ALL t0.c46, t0.c50 FROM t0 WHERE ((((((t0.c50))<=((t0.c50)))) IS FALSE)) GROUP BY t0.c46, t0.c50 UNION SELECT t0.c46, t0.c50 FROM t0 WHERE ((NOT ((((((t0.c50))<=((t0.c50)))) IS FALSE)))) GROUP BY t0.c46, t0.c50 UNION SELECT ALL t0.c46, t0.c50 FROM t0 WHERE ((((((((t0.c50))<=((t0.c50)))) IS FALSE)) ISNULL)) GROUP BY t0.c46, t0.c50;
SELECT t0.c46, t0.c50 FROM t0 GROUP BY t0.c46, t0.c50;
SELECT t0.c0, t0.c46 FROM t0 CROSS JOIN vt1 ON CAST((~ (vt1.c0)) AS TEXT) GROUP BY t0.c0, t0.c46;
SELECT t0.c0, t0.c46 FROM t0 NOT INDEXED CROSS JOIN vt1 ON CAST((~ (vt1.c0)) AS TEXT) GROUP BY t0.c0, t0.c46 HAVING SUM(AVG(AVG(t0.c50))) UNION ALL SELECT ALL t0.c0, t0.c46 FROM t0 CROSS JOIN vt1 ON CAST((~ (vt1.c0)) AS TEXT) GROUP BY t0.c0, t0.c46 HAVING (NOT (SUM(AVG(AVG(t0.c50))))) UNION ALL SELECT ALL t0.c0, t0.c46 FROM t0 CROSS JOIN vt1 ON CAST((~ (vt1.c0)) AS TEXT) GROUP BY t0.c0, t0.c46 HAVING ((SUM(AVG(AVG(t0.c50)))) ISNULL);
SELECT * FROM vt1, t0, vt0;
SELECT * FROM vt1, t0, vt0 WHERE (((vt0.c2 COLLATE NOCASE)IS NOT((vt1.c0 IN (t0.c46))))) UNION ALL SELECT * FROM vt1, t0, vt0 WHERE ((NOT (((vt0.c2 COLLATE NOCASE)IS NOT((vt1.c0 IN (t0.c46))))))) UNION ALL SELECT ALL * FROM vt1, t0, vt0 WHERE (((((vt0.c2 COLLATE NOCASE)IS NOT((vt1.c0 IN (t0.c46))))) ISNULL));
SELECT * FROM vt1, t0, vt0;
SELECT DISTINCT t0.c50, vt0.c2, vt0.c1, vt1.c0 FROM vt0, vt1, t0;
SELECT DISTINCT t0.c50, vt0.c2, vt0.c1, vt1.c0 FROM vt0, vt1, t0 WHERE (CASE ((vt1.c0) NOT NULL)  WHEN (t0.c50 IN ()) THEN (t0.c50 IN (vt1.c0, vt0.c0)) END) UNION SELECT DISTINCT t0.c50, vt0.c2, vt0.c1, vt1.c0 FROM vt0, vt1, t0 WHERE ((NOT (CASE ((vt1.c0) NOT NULL)  WHEN (t0.c50 IN ()) THEN (t0.c50 IN (vt1.c0, vt0.c0)) END))) UNION SELECT DISTINCT t0.c50, vt0.c2, vt0.c1, vt1.c0 FROM vt0, vt1, t0 WHERE (((CASE ((vt1.c0) NOT NULL)  WHEN (t0.c50 IN ()) THEN (t0.c50 IN (vt1.c0, vt0.c0)) END) ISNULL));
SELECT DISTINCT t0.c50, vt0.c2, vt0.c1, vt1.c0 FROM vt0, vt1, t0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((vt1.c0 IN ())) NOTNULL)) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0 IN ())) NOTNULL)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((((vt1.c0 IN ())) NOTNULL)) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL t0.c50, t0.c0 FROM t0 GROUP BY t0.c50, t0.c0;
SELECT t0.c50, t0.c0 FROM t0 GROUP BY t0.c50, t0.c0 HAVING ((MIN(SUM(COUNT(*))))&(CAST(t0.c50 AS BLOB))) UNION ALL SELECT ALL t0.c50, t0.c0 FROM t0 GROUP BY t0.c50, t0.c0 HAVING (NOT (((MIN(SUM(COUNT(*))))&(CAST(t0.c50 AS BLOB))))) UNION ALL SELECT ALL t0.c50, t0.c0 FROM t0 GROUP BY t0.c50, t0.c0 HAVING ((((MIN(SUM(COUNT(*))))&(CAST(t0.c50 AS BLOB)))) ISNULL);
SELECT t0.c0, vt0.c1, vt0.c2 FROM vt0 INNER JOIN t0 ON (((t0.c46)) BETWEEN ((((t0.c0)*('%G')))) AND (((t0.c50 IN (t0.c46))))) LEFT OUTER JOIN vt1 ON ((((vt0.c2) NOT BETWEEN (t0.c0) AND (vt1.c0)))&(((vt1.c0)<<(t0.c46))));
SELECT ALL t0.c0, vt0.c1, vt0.c2 FROM vt0 INNER JOIN t0 ON (((t0.c46)) BETWEEN ((((t0.c0)*('%G')))) AND (((t0.c50 IN (t0.c46))))) LEFT OUTER JOIN vt1 ON ((((vt0.c2) NOT BETWEEN (t0.c0) AND (vt1.c0)))&(((vt1.c0)<<(t0.c46)))) WHERE (0.09246529992105867) UNION ALL SELECT t0.c0, vt0.c1, vt0.c2 FROM vt0 INNER JOIN t0 ON (((t0.c46)) BETWEEN ((((t0.c0)*('%G')))) AND (((t0.c50 IN (t0.c46))))) LEFT OUTER JOIN vt1 ON ((((vt0.c2) NOT BETWEEN (t0.c0) AND (vt1.c0)))&(((vt1.c0)<<(t0.c46)))) WHERE ((NOT (0.09246529992105867))) UNION ALL SELECT ALL t0.c0, vt0.c1, vt0.c2 FROM vt0 INNER JOIN t0 ON (((t0.c46)) BETWEEN ((((t0.c0)*('%G')))) AND (((t0.c50 IN (t0.c46))))) LEFT OUTER JOIN vt1 ON ((((vt0.c2) NOT BETWEEN (t0.c0) AND (vt1.c0)))&(((vt1.c0)<<(t0.c46)))) WHERE (((0.09246529992105867) ISNULL));
SELECT t0.c0, vt0.c1, vt0.c2 FROM vt0 INNER JOIN t0 ON (((t0.c46)) BETWEEN ((((t0.c0)*('%G')))) AND (((t0.c50 IN (t0.c46))))) LEFT OUTER JOIN vt1 ON ((((vt0.c2) NOT BETWEEN (t0.c0) AND (vt1.c0)))&(((vt1.c0)<<(t0.c46))));
SELECT DISTINCT t0.c0, t0.c46, vt0.c0, t0.c50 FROM vt1, vt0, t0 NOT INDEXED;
SELECT DISTINCT t0.c0, t0.c46, vt0.c0, t0.c50 FROM vt1, vt0, t0 WHERE (((((((vt1.c0) NOTNULL))OR(x'90945696')))OR(CAST(t0.c46 AS NUMERIC)))) UNION SELECT DISTINCT t0.c0, t0.c46, vt0.c0, t0.c50 FROM vt1, vt0, t0 WHERE ((NOT (((((((vt1.c0) NOTNULL))OR(x'90945696')))OR(CAST(t0.c46 AS NUMERIC)))))) UNION SELECT DISTINCT t0.c0, t0.c46, vt0.c0, t0.c50 FROM vt1, vt0, t0 WHERE (((((((((vt1.c0) NOTNULL))OR(x'90945696')))OR(CAST(t0.c46 AS NUMERIC)))) ISNULL));
SELECT DISTINCT t0.c0, t0.c46, vt0.c0, t0.c50 FROM vt1, vt0, t0 NOT INDEXED;
SELECT t0.c46, vt0.c1, t0.c50, vt1.c0, t0.c0 FROM t0 INNER JOIN vt0 ON ((((((((((((((((((((vt0.c2)AND(t0.c46)))AND(t0.c50)))OR(vt0.c2)))OR(vt0.c2)))OR(((t0.c0) BETWEEN (vt1.c0) AND (t0.c50)))))AND((~ (t0.c0)))))OR(((vt0.c0)<(t0.c50)))))AND(((((t0.c0)OR(t0.c50)))AND(NULL)))))OR((t0.c50 IN ()))))OR(((((((((vt0.c2)OR(vt0.c1)))AND(vt0.c2)))AND(t0.c50)))OR(t0.c46)))) FULL OUTER JOIN vt1 ON CASE WHEN ((((vt0.c0)AND(vt0.c1)))OR(t0.c50)) THEN ((vt0.c1) ISNULL) END GROUP BY t0.c46, vt0.c1, t0.c50, vt1.c0, t0.c0;
SELECT vt1.c0, vt0.c2 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c2;
SELECT ALL vt1.c0, vt0.c2 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c2 HAVING GROUP_CONCAT((NOT (vt0.c2))) UNION ALL SELECT ALL vt1.c0, vt0.c2 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c2 HAVING (NOT (GROUP_CONCAT((NOT (vt0.c2))))) UNION ALL SELECT ALL vt1.c0, vt0.c2 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c2 HAVING ((GROUP_CONCAT((NOT (vt0.c2)))) ISNULL);
SELECT vt1.c0, vt0.c2 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c2;
SELECT ALL vt1.c0, vt0.c2 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c2 HAVING GROUP_CONCAT((NOT (vt0.c2))) UNION ALL SELECT ALL vt1.c0, vt0.c2 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c2 HAVING (NOT (GROUP_CONCAT((NOT (vt0.c2))))) UNION ALL SELECT ALL vt1.c0, vt0.c2 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c2 HAVING ((GROUP_CONCAT((NOT (vt0.c2)))) ISNULL);
SELECT vt1.c0, vt0.c2 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c2;
SELECT ALL * FROM t0, vt0, vt1;
SELECT * FROM t0, vt0, vt1 WHERE (t0.c0) UNION ALL SELECT * FROM t0, vt0, vt1 WHERE ((NOT (t0.c0))) UNION ALL SELECT * FROM t0, vt0, vt1 WHERE (((t0.c0) ISNULL));
SELECT ALL * FROM t0, vt0, vt1;
SELECT DISTINCT * FROM t0, vt0, vt1;
SELECT DISTINCT * FROM t0, vt0, vt1 WHERE (CASE WHEN json_type(t0.c46) THEN ((((t0.c50)AND(t0.c46)))AND(x'')) END) UNION SELECT DISTINCT * FROM t0, vt0, vt1 WHERE ((NOT (CASE WHEN json_type(t0.c46) THEN ((((t0.c50)AND(t0.c46)))AND(x'')) END))) UNION SELECT DISTINCT * FROM t0, vt0, vt1 WHERE (((CASE WHEN json_type(t0.c46) THEN ((((t0.c50)AND(t0.c46)))AND(x'')) END) ISNULL));
SELECT ALL t0.c0, vt0.c1, t0.c46 FROM t0 INNER JOIN vt1 ON 0Xffffffffcb2b81ba INNER JOIN vt0 ON t0.c50 GROUP BY t0.c0, vt0.c1, t0.c46;
SELECT ALL t0.c0, vt0.c1, t0.c46 FROM t0 INNER JOIN vt1 ON 0xffffffffcb2b81ba INNER JOIN vt0 ON t0.c50 WHERE (TRIM(DISTINCT CAST(t0.c0 AS TEXT))) GROUP BY t0.c0, vt0.c1, t0.c46 UNION SELECT ALL t0.c0, vt0.c1, t0.c46 FROM t0 INNER JOIN vt1 ON 0xffffffffcb2b81ba INNER JOIN vt0 ON t0.c50 WHERE ((NOT (TRIM(DISTINCT CAST(t0.c0 AS TEXT))))) GROUP BY t0.c0, vt0.c1, t0.c46 UNION SELECT ALL t0.c0, vt0.c1, t0.c46 FROM t0 INNER JOIN vt1 ON 0xffffffffcb2b81ba INNER JOIN vt0 ON t0.c50 WHERE (((TRIM(DISTINCT CAST(t0.c0 AS TEXT))) ISNULL)) GROUP BY t0.c0, vt0.c1, t0.c46;
SELECT ALL t0.c0, vt0.c1, t0.c46 FROM t0 INNER JOIN vt1 ON 0Xffffffffcb2b81ba INNER JOIN vt0 ON t0.c50 GROUP BY t0.c0, vt0.c1, t0.c46;
SELECT t0.c0, vt0.c1, vt0.c2, vt1.c0, t0.c50, vt0.c0 FROM vt1, t0, vt0 GROUP BY t0.c0, vt0.c1, vt0.c2, vt1.c0, t0.c50, vt0.c0;
SELECT t0.c0, vt0.c1, vt0.c2, vt1.c0, t0.c50, vt0.c0 FROM vt1, t0, vt0 GROUP BY t0.c0, vt0.c1, vt0.c2, vt1.c0, t0.c50, vt0.c0 HAVING MIN(MAX(vt0.c0)) UNION ALL SELECT ALL t0.c0, vt0.c1, vt0.c2, vt1.c0, t0.c50, vt0.c0 FROM vt1, t0, vt0 GROUP BY t0.c0, vt0.c1, vt0.c2, vt1.c0, t0.c50, vt0.c0 HAVING (NOT (MIN(MAX(vt0.c0)))) UNION ALL SELECT t0.c0, vt0.c1, vt0.c2, vt1.c0, t0.c50, vt0.c0 FROM vt1, t0, vt0 GROUP BY t0.c0, vt0.c1, vt0.c2, vt1.c0, t0.c50, vt0.c0 HAVING ((MIN(MAX(vt0.c0))) ISNULL);
SELECT ALL t0.c0, t0.c46 FROM vt1, t0;
SELECT t0.c0, t0.c46 FROM vt1, t0 WHERE (t0.c46) UNION ALL SELECT ALL t0.c0, t0.c46 FROM vt1, t0 WHERE ((NOT (t0.c46))) UNION ALL SELECT ALL t0.c0, t0.c46 FROM vt1, t0 WHERE (((t0.c46) ISNULL));
SELECT ALL t0.c0, t0.c46 FROM vt1, t0;
SELECT DISTINCT t0.c0, t0.c50, vt0.c2, vt0.c0, vt0.c1 FROM vt1, vt0, t0;
SELECT DISTINCT t0.c0, t0.c50, vt0.c2, vt0.c0, vt0.c1 FROM vt1, vt0, t0 WHERE (((vt1.c0) NOT NULL) COLLATE BINARY) UNION SELECT DISTINCT t0.c0, t0.c50, vt0.c2, vt0.c0, vt0.c1 FROM vt1, vt0, t0 WHERE ((NOT (((vt1.c0) NOT NULL) COLLATE BINARY))) UNION SELECT DISTINCT t0.c0, t0.c50, vt0.c2, vt0.c0, vt0.c1 FROM vt1, vt0, t0 WHERE (((((vt1.c0) NOT NULL) COLLATE BINARY) ISNULL));
SELECT DISTINCT t0.c0, t0.c50, vt0.c2, vt0.c0, vt0.c1 FROM vt1, vt0, t0;
SELECT ALL t0.c50, t0.c46, vt0.c1, vt0.c0, t0.c0, vt0.c2 FROM vt0, t0 GROUP BY t0.c50, t0.c46, vt0.c1, vt0.c0, t0.c0, vt0.c2;
SELECT ALL t0.c50, t0.c46, vt0.c1, vt0.c0, t0.c0, vt0.c2 FROM vt0, t0 WHERE ((((((NULL))!=((vt0.c1)))) IS FALSE)) GROUP BY t0.c50, t0.c46, vt0.c1, vt0.c0, t0.c0, vt0.c2 UNION SELECT t0.c50, t0.c46, vt0.c1, vt0.c0, t0.c0, vt0.c2 FROM vt0, t0 WHERE ((NOT ((((((NULL))!=((vt0.c1)))) IS FALSE)))) GROUP BY t0.c50, t0.c46, vt0.c1, vt0.c0, t0.c0, vt0.c2 UNION SELECT ALL t0.c50, t0.c46, vt0.c1, vt0.c0, t0.c0, vt0.c2 FROM vt0, t0 WHERE ((((((((NULL))!=((vt0.c1)))) IS FALSE)) ISNULL)) GROUP BY t0.c50, t0.c46, vt0.c1, vt0.c0, t0.c0, vt0.c2;
SELECT ALL t0.c50, t0.c46, vt0.c1, vt0.c0, t0.c0, vt0.c2 FROM vt0, t0 GROUP BY t0.c50, t0.c46, vt0.c1, vt0.c0, t0.c0, vt0.c2;
SELECT ALL vt0.c0, vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2;
SELECT vt0.c0, vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2 HAVING ((GROUP_CONCAT(vt0.c1)) IS FALSE) UNION ALL SELECT vt0.c0, vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2 HAVING (NOT (((GROUP_CONCAT(vt0.c1)) IS FALSE))) UNION ALL SELECT ALL vt0.c0, vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2 HAVING ((((GROUP_CONCAT(vt0.c1)) IS FALSE)) ISNULL);
SELECT ALL vt0.c0, vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2;
SELECT vt0.c0, vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2 HAVING ((GROUP_CONCAT(vt0.c1)) IS FALSE) UNION ALL SELECT vt0.c0, vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2 HAVING (NOT (((GROUP_CONCAT(vt0.c1)) IS FALSE))) UNION ALL SELECT ALL vt0.c0, vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2 HAVING ((((GROUP_CONCAT(vt0.c1)) IS FALSE)) ISNULL);
SELECT ALL vt0.c0, vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2;
SELECT ALL vt0.c0, t0.c50, vt0.c2, vt1.c0, t0.c0 FROM vt1 CROSS JOIN t0 ON ((t0.c50 COLLATE RTRIM)<=(((((vt0.c0)OR(vt0.c2)))AND(t0.c50)))) FULL OUTER JOIN vt0 ON (+ (((NULL)<=(t0.c50))));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (CASE (+ (vt1.c0))  WHEN NULL THEN ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) WHEN ((vt1.c0) NOTNULL) THEN NULL WHEN (~ (vt1.c0)) THEN CASE vt1.c0  WHEN vt1.c0 THEN '-360537669' END END) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (CASE (+ (vt1.c0))  WHEN NULL THEN ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) WHEN ((vt1.c0) NOTNULL) THEN NULL WHEN (~ (vt1.c0)) THEN CASE vt1.c0  WHEN vt1.c0 THEN '-360537669' END END))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((CASE (+ (vt1.c0))  WHEN NULL THEN ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) WHEN ((vt1.c0) NOTNULL) THEN NULL WHEN (~ (vt1.c0)) THEN CASE vt1.c0  WHEN vt1.c0 THEN '-360537669' END END) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt1.c0, t0.c50, vt0.c1, vt0.c0, t0.c46, t0.c0 FROM vt1, t0, vt0 GROUP BY vt1.c0, t0.c50, vt0.c1, vt0.c0, t0.c46, t0.c0;
SELECT vt1.c0, t0.c50, vt0.c1, vt0.c0, t0.c46, t0.c0 FROM vt1, t0, vt0 WHERE (x'35ef') GROUP BY vt1.c0, t0.c50, vt0.c1, vt0.c0, t0.c46, t0.c0 UNION SELECT vt1.c0, t0.c50, vt0.c1, vt0.c0, t0.c46, t0.c0 FROM vt1, t0, vt0 WHERE ((NOT (x'35ef'))) GROUP BY vt1.c0, t0.c50, vt0.c1, vt0.c0, t0.c46, t0.c0 UNION SELECT ALL vt1.c0, t0.c50, vt0.c1, vt0.c0, t0.c46, t0.c0 FROM vt1, t0, vt0 WHERE (((x'35ef') ISNULL)) GROUP BY vt1.c0, t0.c50, vt0.c1, vt0.c0, t0.c46, t0.c0;
SELECT vt1.c0, t0.c50, vt0.c1, vt0.c0, t0.c46, t0.c0 FROM vt1, t0, vt0 GROUP BY vt1.c0, t0.c50, vt0.c1, vt0.c0, t0.c46, t0.c0;
SELECT ALL vt0.c2, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c2, vt1.c0;
SELECT ALL vt0.c2, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c2, vt1.c0 HAVING CAST(COUNT(*) AS REAL) UNION ALL SELECT ALL vt0.c2, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c2, vt1.c0 HAVING (NOT (CAST(COUNT(*) AS REAL))) UNION ALL SELECT vt0.c2, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c2, vt1.c0 HAVING ((CAST(COUNT(*) AS REAL)) ISNULL);
SELECT ALL vt0.c2, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c2, vt1.c0;
SELECT ALL vt0.c2, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c2, vt1.c0 HAVING CAST(COUNT(*) AS REAL) UNION ALL SELECT ALL vt0.c2, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c2, vt1.c0 HAVING (NOT (CAST(COUNT(*) AS REAL))) UNION ALL SELECT vt0.c2, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c2, vt1.c0 HAVING ((CAST(COUNT(*) AS REAL)) ISNULL);
SELECT ALL vt0.c2, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c2, vt1.c0;
SELECT ALL vt0.c2, vt1.c0, vt0.c0, vt0.c1, t0.c46 FROM vt1, t0, vt0;
SELECT vt0.c2, vt1.c0, vt0.c0, vt0.c1, t0.c46 FROM vt1, t0, vt0 WHERE ('') UNION ALL SELECT vt0.c2, vt1.c0, vt0.c0, vt0.c1, t0.c46 FROM vt1, t0, vt0 WHERE ((NOT (''))) UNION ALL SELECT vt0.c2, vt1.c0, vt0.c0, vt0.c1, t0.c46 FROM vt1, t0, vt0 WHERE ((('') ISNULL));
SELECT ALL vt0.c2, vt1.c0, vt0.c0, vt0.c1, t0.c46 FROM vt1, t0, vt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((SUBSTR(vt1.c0, vt1.c0)) IS FALSE)) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((SUBSTR(vt1.c0, vt1.c0)) IS FALSE)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((SUBSTR(vt1.c0, vt1.c0)) IS FALSE)) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL t0.c46, t0.c0, vt0.c1, t0.c50, vt0.c2, vt0.c0 FROM t0, vt0 GROUP BY t0.c46, t0.c0, vt0.c1, t0.c50, vt0.c2, vt0.c0;
SELECT ALL t0.c46, t0.c0, vt0.c1, t0.c50, vt0.c2, vt0.c0 FROM t0, vt0 WHERE (((((t0.c46)>(vt0.c1))) BETWEEN ((vt0.c1 IN (t0.c50, vt0.c2, t0.c46))) AND (CASE WHEN t0.c0 THEN vt0.c1 ELSE vt0.c1 END))) GROUP BY t0.c46, t0.c0, vt0.c1, t0.c50, vt0.c2, vt0.c0 UNION SELECT ALL t0.c46, t0.c0, vt0.c1, t0.c50, vt0.c2, vt0.c0 FROM t0, vt0 WHERE ((NOT (((((t0.c46)>(vt0.c1))) BETWEEN ((vt0.c1 IN (t0.c50, vt0.c2, t0.c46))) AND (CASE WHEN t0.c0 THEN vt0.c1 ELSE vt0.c1 END))))) GROUP BY t0.c46, t0.c0, vt0.c1, t0.c50, vt0.c2, vt0.c0 UNION SELECT ALL t0.c46, t0.c0, vt0.c1, t0.c50, vt0.c2, vt0.c0 FROM t0, vt0 WHERE (((((((t0.c46)>(vt0.c1))) BETWEEN ((vt0.c1 IN (t0.c50, vt0.c2, t0.c46))) AND (CASE WHEN t0.c0 THEN vt0.c1 ELSE vt0.c1 END))) ISNULL)) GROUP BY t0.c46, t0.c0, vt0.c1, t0.c50, vt0.c2, vt0.c0;
SELECT ALL t0.c46, t0.c0, vt0.c1, t0.c50, vt0.c2, vt0.c0 FROM t0, vt0 GROUP BY t0.c46, t0.c0, vt0.c1, t0.c50, vt0.c2, vt0.c0;
SELECT t0.c46 FROM vt0, vt1, t0 GROUP BY t0.c46;
SELECT ALL t0.c46 FROM vt0, vt1, t0 GROUP BY t0.c46 HAVING 0.13264122063855577 UNION ALL SELECT t0.c46 FROM vt0, vt1, t0 GROUP BY t0.c46 HAVING (NOT (0.13264122063855577)) UNION ALL SELECT t0.c46 FROM vt0, vt1, t0 GROUP BY t0.c46 HAVING ((0.13264122063855577) ISNULL);
SELECT t0.c46 FROM vt0, vt1, t0 GROUP BY t0.c46;
SELECT ALL t0.c46 FROM vt0, vt1, t0 GROUP BY t0.c46 HAVING 0.13264122063855577 UNION ALL SELECT t0.c46 FROM vt0, vt1, t0 GROUP BY t0.c46 HAVING (NOT (0.13264122063855577)) UNION ALL SELECT t0.c46 FROM vt0, vt1, t0 GROUP BY t0.c46 HAVING ((0.13264122063855577) ISNULL);
SELECT t0.c46 FROM vt0, vt1, t0 GROUP BY t0.c46;
SELECT t0.c50 FROM t0;
SELECT ALL t0.c50 FROM t0 WHERE (TOTAL_CHANGES()) UNION ALL SELECT t0.c50 FROM t0 WHERE ((NOT (TOTAL_CHANGES()))) UNION ALL SELECT t0.c50 FROM t0 WHERE (((TOTAL_CHANGES()) ISNULL));
SELECT t0.c50 FROM t0;
SELECT DISTINCT t0.c46, vt0.c0, t0.c50, vt0.c1 FROM t0, vt0;
SELECT DISTINCT t0.c46, vt0.c0, t0.c50, vt0.c1 FROM t0, vt0 WHERE (t0.c0 COLLATE BINARY) UNION SELECT DISTINCT t0.c46, vt0.c0, t0.c50, vt0.c1 FROM t0, vt0 WHERE ((NOT (t0.c0 COLLATE BINARY))) UNION SELECT DISTINCT t0.c46, vt0.c0, t0.c50, vt0.c1 FROM t0, vt0 WHERE (((t0.c0 COLLATE BINARY) ISNULL));
SELECT DISTINCT t0.c46, vt0.c0, t0.c50, vt0.c1 FROM t0, vt0;
SELECT ALL vt0.c1, vt0.c2, vt0.c0, t0.c0 FROM t0 CROSS JOIN vt0 ON (+ (t0.c50)) COLLATE RTRIM GROUP BY vt0.c1, vt0.c2, vt0.c0, t0.c0;
SELECT ALL vt0.c1, vt0.c2, vt0.c0, t0.c0 FROM t0 CROSS JOIN vt0 ON (+ (t0.c50)) COLLATE RTRIM WHERE (((vt0.c1) NOT BETWEEN (t0.c0) AND (vt0.c1)) COLLATE BINARY) GROUP BY vt0.c1, vt0.c2, vt0.c0, t0.c0 UNION SELECT ALL vt0.c1, vt0.c2, vt0.c0, t0.c0 FROM t0 CROSS JOIN vt0 ON (+ (t0.c50)) COLLATE RTRIM WHERE ((NOT (((vt0.c1) NOT BETWEEN (t0.c0) AND (vt0.c1)) COLLATE BINARY))) GROUP BY vt0.c1, vt0.c2, vt0.c0, t0.c0 UNION SELECT vt0.c1, vt0.c2, vt0.c0, t0.c0 FROM t0 CROSS JOIN vt0 ON (+ (t0.c50)) COLLATE RTRIM WHERE (((((vt0.c1) NOT BETWEEN (t0.c0) AND (vt0.c1)) COLLATE BINARY) ISNULL)) GROUP BY vt0.c1, vt0.c2, vt0.c0, t0.c0;
SELECT ALL vt0.c1, vt0.c2, vt0.c0, t0.c0 FROM t0 CROSS JOIN vt0 ON (+ (t0.c50)) COLLATE RTRIM GROUP BY vt0.c1, vt0.c2, vt0.c0, t0.c0;
SELECT ALL t0.c46, t0.c50, t0.c0, vt1.c0 FROM vt1, t0 GROUP BY t0.c46, t0.c50, t0.c0, vt1.c0;
SELECT t0.c46, t0.c50, t0.c0, vt1.c0 FROM vt1, t0 GROUP BY t0.c46, t0.c50, t0.c0, vt1.c0 HAVING TOTAL(((COUNT(COUNT(t0.c0))) IS FALSE)) UNION ALL SELECT ALL t0.c46, t0.c50, t0.c0, vt1.c0 FROM vt1, t0 GROUP BY t0.c46, t0.c50, t0.c0, vt1.c0 HAVING (NOT (TOTAL(((COUNT(COUNT(t0.c0))) IS FALSE)))) UNION ALL SELECT ALL t0.c46, t0.c50, t0.c0, vt1.c0 FROM vt1, t0 GROUP BY t0.c46, t0.c50, t0.c0, vt1.c0 HAVING ((TOTAL(((COUNT(COUNT(t0.c0))) IS FALSE))) ISNULL);
SELECT ALL * FROM vt0, t0, vt1;
SELECT ALL * FROM vt0, t0, vt1 WHERE ((((vt0.c2) ISNULL) IN ())) UNION ALL SELECT ALL * FROM vt0, t0, vt1 WHERE ((NOT ((((vt0.c2) ISNULL) IN ())))) UNION ALL SELECT * FROM vt0, t0, vt1 WHERE ((((((vt0.c2) ISNULL) IN ())) ISNULL));
SELECT ALL * FROM vt0, t0, vt1;
SELECT DISTINCT t0.c0, t0.c50 FROM t0;
SELECT DISTINCT t0.c0, t0.c50 FROM t0 WHERE (((CAST(t0.c46 AS REAL))|(((((t0.c50)AND(t0.c50)))OR(t0.c46))))) UNION SELECT DISTINCT t0.c0, t0.c50 FROM t0 WHERE ((NOT (((CAST(t0.c46 AS REAL))|(((((t0.c50)AND(t0.c50)))OR(t0.c46))))))) UNION SELECT DISTINCT t0.c0, t0.c50 FROM t0 WHERE (((((CAST(t0.c46 AS REAL))|(((((t0.c50)AND(t0.c50)))OR(t0.c46))))) ISNULL));
SELECT DISTINCT t0.c0, t0.c50 FROM t0;
SELECT ALL t0.c50, t0.c46, vt0.c2, vt0.c1, t0.c0 FROM t0, vt0, vt1 GROUP BY t0.c50, t0.c46, vt0.c2, vt0.c1, t0.c0;
SELECT ALL t0.c50, t0.c46, vt0.c2, vt0.c1, t0.c0 FROM t0, vt0, vt1 WHERE (((((vt0.c2)) NOT BETWEEN ((x'')) AND ((t0.c0))) IN (x''))) GROUP BY t0.c50, t0.c46, vt0.c2, vt0.c1, t0.c0 UNION SELECT ALL t0.c50, t0.c46, vt0.c2, vt0.c1, t0.c0 FROM t0, vt0, vt1 WHERE ((NOT (((((vt0.c2)) NOT BETWEEN ((x'')) AND ((t0.c0))) IN (x''))))) GROUP BY t0.c50, t0.c46, vt0.c2, vt0.c1, t0.c0 UNION SELECT ALL t0.c50, t0.c46, vt0.c2, vt0.c1, t0.c0 FROM t0, vt0, vt1 WHERE (((((((vt0.c2)) NOT BETWEEN ((x'')) AND ((t0.c0))) IN (x''))) ISNULL)) GROUP BY t0.c50, t0.c46, vt0.c2, vt0.c1, t0.c0;
SELECT ALL t0.c50, t0.c46, vt0.c2, vt0.c1, t0.c0 FROM t0, vt0, vt1 GROUP BY t0.c50, t0.c46, vt0.c2, vt0.c1, t0.c0;
SELECT ALL t0.c0, vt0.c2, t0.c46 FROM vt1, t0, vt0 GROUP BY t0.c0, vt0.c2, t0.c46;
SELECT ALL t0.c0, vt0.c2, t0.c46 FROM vt1, t0, vt0 GROUP BY t0.c0, vt0.c2, t0.c46 HAVING ((MIN(MIN(MAX(t0.c0))))>=(((((vt0.c2)AND(COUNT(t0.c50))))AND(TOTAL(COUNT(TOTAL(t0.c50))))))) UNION ALL SELECT ALL t0.c0, vt0.c2, t0.c46 FROM vt1, t0, vt0 GROUP BY t0.c0, vt0.c2, t0.c46 HAVING (NOT (((MIN(MIN(MAX(t0.c0))))>=(((((vt0.c2)AND(COUNT(t0.c50))))AND(TOTAL(COUNT(TOTAL(t0.c50))))))))) UNION ALL SELECT t0.c0, vt0.c2, t0.c46 FROM vt1, t0, vt0 GROUP BY t0.c0, vt0.c2, t0.c46 HAVING ((((MIN(MIN(MAX(t0.c0))))>=(((((vt0.c2)AND(COUNT(t0.c50))))AND(TOTAL(COUNT(TOTAL(t0.c50)))))))) ISNULL);
SELECT ALL t0.c46 FROM t0;
SELECT t0.c46 FROM t0 WHERE (((t0.c0 COLLATE NOCASE)%((- (t0.c0))))) UNION ALL SELECT t0.c46 FROM t0 WHERE ((NOT (((t0.c0 COLLATE NOCASE)%((- (t0.c0))))))) UNION ALL SELECT ALL t0.c46 FROM t0 WHERE (((((t0.c0 COLLATE NOCASE)%((- (t0.c0))))) ISNULL));
SELECT ALL t0.c46 FROM t0;
SELECT DISTINCT vt1.c0 FROM vt1 NOT INDEXED;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((~ (((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((~ (((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((~ (((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1 NOT INDEXED;
SELECT ALL vt0.c0, t0.c0, vt1.c0 FROM t0, vt0, vt1 GROUP BY vt0.c0, t0.c0, vt1.c0;
SELECT ALL vt0.c0, t0.c0, vt1.c0 FROM t0 NOT INDEXED, vt0, vt1 WHERE ((((vt1.c0)) BETWEEN ((t0.c50)) AND ((0Xffffffffb296f846)))) GROUP BY vt0.c0, t0.c0, vt1.c0 UNION SELECT vt0.c0, t0.c0, vt1.c0 FROM t0, vt0, vt1 WHERE ((NOT ((((vt1.c0)) BETWEEN ((t0.c50)) AND ((0Xffffffffb296f846)))))) GROUP BY vt0.c0, t0.c0, vt1.c0 UNION SELECT ALL vt0.c0, t0.c0, vt1.c0 FROM t0, vt0, vt1 WHERE ((((((vt1.c0)) BETWEEN ((t0.c50)) AND ((0xffffffffb296f846)))) ISNULL)) GROUP BY vt0.c0, t0.c0, vt1.c0;
SELECT ALL vt0.c0, t0.c0, vt1.c0 FROM t0, vt0, vt1 GROUP BY vt0.c0, t0.c0, vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING CASE WHEN x'' THEN ((((vt1.c0)OR(GROUP_CONCAT(GROUP_CONCAT(vt1.c0)))))OR(AVG(AVG(x'8c80')))) ELSE TOTAL(NULL) END UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (CASE WHEN x'' THEN ((((vt1.c0)OR(GROUP_CONCAT(GROUP_CONCAT(vt1.c0)))))OR(AVG(AVG(x'8c80')))) ELSE TOTAL(NULL) END)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((CASE WHEN x'' THEN ((((vt1.c0)OR(GROUP_CONCAT(GROUP_CONCAT(vt1.c0)))))OR(AVG(AVG(x'8c80')))) ELSE TOTAL(NULL) END) ISNULL);
SELECT TOTAL(TRIM(DISTINCT vt1.c0 COLLATE RTRIM, ((vt1.c0)AND('-338147851')))) FROM vt1 ORDER BY CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS REAL)  NULLS LAST;
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE (CAST((vt1.c0 IN (vt1.c0)) AS NUMERIC)) UNION ALL SELECT * FROM vt1 WHERE ((NOT (CAST((vt1.c0 IN (vt1.c0)) AS NUMERIC)))) UNION ALL SELECT ALL * FROM vt1 WHERE (((CAST((vt1.c0 IN (vt1.c0)) AS NUMERIC)) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0 WHERE (((((((((((t0.c0)AND(vt0.c0)))OR(t0.c0)))OR(t0.c46)))AND(vt0.c0))) IS FALSE)) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((NOT (((((((((((t0.c0)AND(vt0.c0)))OR(t0.c0)))OR(t0.c46)))AND(vt0.c0))) IS FALSE)))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE (((((((((((((t0.c0)AND(vt0.c0)))OR(t0.c0)))OR(t0.c46)))AND(vt0.c0))) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM t0, vt0;
SELECT vt0.c2, vt1.c0, vt0.c1, t0.c50, t0.c46, t0.c0, vt0.c0 FROM vt1, vt0, t0 GROUP BY vt0.c2, vt1.c0, vt0.c1, t0.c50, t0.c46, t0.c0, vt0.c0;
SELECT vt0.c2, vt1.c0, vt0.c1, t0.c50, t0.c46, t0.c0, vt0.c0 FROM vt1, vt0, t0 WHERE (((CASE WHEN vt0.c2 THEN t0.c50 ELSE t0.c50 END) NOT BETWEEN (t0.c50) AND ((('-1649730867')IS NOT(vt1.c0))))) GROUP BY vt0.c2, vt1.c0, vt0.c1, t0.c50, t0.c46, t0.c0, vt0.c0 UNION SELECT ALL vt0.c2, vt1.c0, vt0.c1, t0.c50, t0.c46, t0.c0, vt0.c0 FROM vt1, vt0, t0 WHERE ((NOT (((CASE WHEN vt0.c2 THEN t0.c50 ELSE t0.c50 END) NOT BETWEEN (t0.c50) AND ((('-1649730867')IS NOT(vt1.c0))))))) GROUP BY vt0.c2, vt1.c0, vt0.c1, t0.c50, t0.c46, t0.c0, vt0.c0 UNION SELECT ALL vt0.c2, vt1.c0, vt0.c1, t0.c50, t0.c46, t0.c0, vt0.c0 FROM vt1, vt0, t0 WHERE (((((CASE WHEN vt0.c2 THEN t0.c50 ELSE t0.c50 END) NOT BETWEEN (t0.c50) AND ((('-1649730867')IS NOT(vt1.c0))))) ISNULL)) GROUP BY vt0.c2, vt1.c0, vt0.c1, t0.c50, t0.c46, t0.c0, vt0.c0;
SELECT vt0.c2, vt1.c0, vt0.c1, t0.c50, t0.c46, t0.c0, vt0.c0 FROM vt1, vt0, t0 GROUP BY vt0.c2, vt1.c0, vt0.c1, t0.c50, t0.c46, t0.c0, vt0.c0;
SELECT vt1.c0, vt0.c1, vt0.c0, vt0.c2 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1, vt0.c0, vt0.c2;
SELECT vt1.c0, vt0.c1, vt0.c0, vt0.c2 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1, vt0.c0, vt0.c2 HAVING ((MIN(vt0.c1))||(AVG(MAX(vt0.c1)))) UNION ALL SELECT vt1.c0, vt0.c1, vt0.c0, vt0.c2 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1, vt0.c0, vt0.c2 HAVING (NOT (((MIN(vt0.c1))||(AVG(MAX(vt0.c1)))))) UNION ALL SELECT vt1.c0, vt0.c1, vt0.c0, vt0.c2 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1, vt0.c0, vt0.c2 HAVING ((((MIN(vt0.c1))||(AVG(MAX(vt0.c1))))) ISNULL);
SELECT ALL * FROM vt1, t0;
SELECT ALL * FROM vt1, t0 WHERE ((~ ((- (t0.c0))))) UNION ALL SELECT ALL * FROM vt1, t0 WHERE ((NOT ((~ ((- (t0.c0))))))) UNION ALL SELECT ALL * FROM vt1, t0 WHERE ((((~ ((- (t0.c0))))) ISNULL));
SELECT ALL * FROM vt1, t0;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE (CAST(vt0.c2 AS NUMERIC)) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT (CAST(vt0.c2 AS NUMERIC)))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE (((CAST(vt0.c2 AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT ALL t0.c46 FROM t0 GROUP BY t0.c46;
SELECT t0.c46 FROM t0 WHERE (CAST(((((t0.c46)AND(t0.c0)))OR(t0.c46)) AS BLOB)) GROUP BY t0.c46 UNION SELECT ALL t0.c46 FROM t0 WHERE ((NOT (CAST(((((t0.c46)AND(t0.c0)))OR(t0.c46)) AS BLOB)))) GROUP BY t0.c46 UNION SELECT t0.c46 FROM t0 WHERE (((CAST(((((t0.c46)AND(t0.c0)))OR(t0.c46)) AS BLOB)) ISNULL)) GROUP BY t0.c46;
SELECT ALL t0.c46 FROM t0 GROUP BY t0.c46;
SELECT ALL vt0.c2 FROM vt0, t0 GROUP BY vt0.c2;
SELECT ALL vt0.c2 FROM vt0, t0 GROUP BY vt0.c2 HAVING TOTAL(MAX(AVG(COUNT(GROUP_CONCAT(t0.c46))))) UNION ALL SELECT vt0.c2 FROM vt0, t0 GROUP BY vt0.c2 HAVING (NOT (TOTAL(MAX(AVG(COUNT(GROUP_CONCAT(t0.c46))))))) UNION ALL SELECT vt0.c2 FROM vt0, t0 GROUP BY vt0.c2 HAVING ((TOTAL(MAX(AVG(COUNT(GROUP_CONCAT(t0.c46)))))) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((((((CAST(vt1.c0 AS BLOB))AND(CAST(vt1.c0 AS TEXT))))OR((((vt1.c0))>((vt1.c0))))))OR(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))))AND((vt1.c0 IN ())))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((((((CAST(vt1.c0 AS BLOB))AND(CAST(vt1.c0 AS TEXT))))OR((((vt1.c0))>((vt1.c0))))))OR(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))))AND((vt1.c0 IN ())))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((((((((((CAST(vt1.c0 AS BLOB))AND(CAST(vt1.c0 AS TEXT))))OR((((vt1.c0))>((vt1.c0))))))OR(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))))AND((vt1.c0 IN ())))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((NOT (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((NOT (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT t0.c46, t0.c50, t0.c0 FROM t0, vt1 GROUP BY t0.c46, t0.c50, t0.c0;
SELECT t0.c46, t0.c50, t0.c0 FROM t0, vt1 WHERE ((((((~ (t0.c0)))AND(t0.c0 COLLATE BINARY)))OR(CASE WHEN vt1.c0 THEN vt1.c0 END))) GROUP BY t0.c46, t0.c50, t0.c0 UNION SELECT ALL t0.c46, t0.c50, t0.c0 FROM t0, vt1 WHERE ((NOT ((((((~ (t0.c0)))AND(t0.c0 COLLATE BINARY)))OR(CASE WHEN vt1.c0 THEN vt1.c0 END))))) GROUP BY t0.c46, t0.c50, t0.c0 UNION SELECT t0.c46, t0.c50, t0.c0 FROM t0, vt1 WHERE ((((((((~ (t0.c0)))AND(t0.c0 COLLATE BINARY)))OR(CASE WHEN vt1.c0 THEN vt1.c0 END))) ISNULL)) GROUP BY t0.c46, t0.c50, t0.c0;
SELECT t0.c46, t0.c50, t0.c0 FROM t0, vt1 GROUP BY t0.c46, t0.c50, t0.c0;
SELECT vt0.c1, vt0.c2, t0.c0, vt0.c0 FROM vt0, t0 GROUP BY vt0.c1, vt0.c2, t0.c0, vt0.c0;
SELECT ALL vt0.c1, vt0.c2, t0.c0, vt0.c0 FROM vt0, t0 GROUP BY vt0.c1, vt0.c2, t0.c0, vt0.c0 HAVING SUM(CAST(vt0.c1 AS BLOB)) UNION ALL SELECT vt0.c1, vt0.c2, t0.c0, vt0.c0 FROM vt0, t0 GROUP BY vt0.c1, vt0.c2, t0.c0, vt0.c0 HAVING (NOT (SUM(CAST(vt0.c1 AS BLOB)))) UNION ALL SELECT vt0.c1, vt0.c2, t0.c0, vt0.c0 FROM vt0, t0 GROUP BY vt0.c1, vt0.c2, t0.c0, vt0.c0 HAVING ((SUM(CAST(vt0.c1 AS BLOB))) ISNULL);
SELECT vt0.c1, vt0.c2, t0.c0, vt0.c0 FROM vt0, t0 GROUP BY vt0.c1, vt0.c2, t0.c0, vt0.c0;
SELECT ALL vt0.c1, vt0.c2, t0.c0, vt0.c0 FROM vt0, t0 GROUP BY vt0.c1, vt0.c2, t0.c0, vt0.c0 HAVING SUM(CAST(vt0.c1 AS BLOB)) UNION ALL SELECT vt0.c1, vt0.c2, t0.c0, vt0.c0 FROM vt0, t0 GROUP BY vt0.c1, vt0.c2, t0.c0, vt0.c0 HAVING (NOT (SUM(CAST(vt0.c1 AS BLOB)))) UNION ALL SELECT vt0.c1, vt0.c2, t0.c0, vt0.c0 FROM vt0, t0 GROUP BY vt0.c1, vt0.c2, t0.c0, vt0.c0 HAVING ((SUM(CAST(vt0.c1 AS BLOB))) ISNULL);
SELECT vt0.c1, vt0.c2, t0.c0, vt0.c0 FROM vt0, t0 GROUP BY vt0.c1, vt0.c2, t0.c0, vt0.c0;
SELECT ALL t0.c50, vt1.c0, t0.c0 FROM t0, vt1;
SELECT ALL t0.c50, vt1.c0, t0.c0 FROM t0, vt1 WHERE ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE t0.c46 END IN ((((t0.c50)) NOT BETWEEN ((t0.c46)) AND ((t0.c46)))))) UNION ALL SELECT ALL t0.c50, vt1.c0, t0.c0 FROM t0, vt1 WHERE ((NOT ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE t0.c46 END IN ((((t0.c50)) NOT BETWEEN ((t0.c46)) AND ((t0.c46)))))))) UNION ALL SELECT ALL t0.c50, vt1.c0, t0.c0 FROM t0, vt1 WHERE ((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE t0.c46 END IN ((((t0.c50)) NOT BETWEEN ((t0.c46)) AND ((t0.c46)))))) ISNULL));
SELECT ALL t0.c50, vt1.c0, t0.c0 FROM t0, vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (vt1.c0) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT t0.c46, t0.c50 FROM t0 GROUP BY t0.c46, t0.c50;
SELECT t0.c46, t0.c50 FROM t0 WHERE (CASE WHEN ((t0.c0) IS TRUE) THEN CASE WHEN t0.c50 THEN t0.c0 END WHEN '()' THEN ((t0.c50)-(t0.c0)) WHEN ((((t0.c50)OR(t0.c50)))AND(t0.c46)) THEN LIKELY(t0.c0) ELSE ((t0.c0) BETWEEN (t0.c0) AND (t0.c50)) END) GROUP BY t0.c46, t0.c50 UNION SELECT t0.c46, t0.c50 FROM t0 WHERE ((NOT (CASE WHEN ((t0.c0) IS TRUE) THEN CASE WHEN t0.c50 THEN t0.c0 END WHEN '()' THEN ((t0.c50)-(t0.c0)) WHEN ((((t0.c50)OR(t0.c50)))AND(t0.c46)) THEN LIKELY(t0.c0) ELSE ((t0.c0) BETWEEN (t0.c0) AND (t0.c50)) END))) GROUP BY t0.c46, t0.c50 UNION SELECT t0.c46, t0.c50 FROM t0 WHERE (((CASE WHEN ((t0.c0) IS TRUE) THEN CASE WHEN t0.c50 THEN t0.c0 END WHEN '()' THEN ((t0.c50)-(t0.c0)) WHEN ((((t0.c50)OR(t0.c50)))AND(t0.c46)) THEN LIKELY(t0.c0) ELSE ((t0.c0) BETWEEN (t0.c0) AND (t0.c50)) END) ISNULL)) GROUP BY t0.c46, t0.c50;
SELECT t0.c46, t0.c50 FROM t0 GROUP BY t0.c46, t0.c50;
SELECT ALL vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0;
SELECT vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0 HAVING SUM((TOTAL(AVG(AVG(MAX(t0.c46)))) IN ())) UNION ALL SELECT vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0 HAVING (NOT (SUM((TOTAL(AVG(AVG(MAX(t0.c46)))) IN ())))) UNION ALL SELECT ALL vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0 HAVING ((SUM((TOTAL(AVG(AVG(MAX(t0.c46)))) IN ()))) ISNULL);
SELECT ALL vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0;
SELECT vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0 HAVING SUM((TOTAL(AVG(AVG(MAX(t0.c46)))) IN ())) UNION ALL SELECT vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0 HAVING (NOT (SUM((TOTAL(AVG(AVG(MAX(t0.c46)))) IN ())))) UNION ALL SELECT ALL vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0 HAVING ((SUM((TOTAL(AVG(AVG(MAX(t0.c46)))) IN ()))) ISNULL);
SELECT ALL vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0;
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE ((vt1.c0 IN ()) COLLATE NOCASE) UNION ALL SELECT * FROM vt1 WHERE ((NOT ((vt1.c0 IN ()) COLLATE NOCASE))) UNION ALL SELECT * FROM vt1 WHERE ((((vt1.c0 IN ()) COLLATE NOCASE) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (CAST(0.2559154494974689 COLLATE BINARY AS TEXT)) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (CAST(0.2559154494974689 COLLATE BINARY AS TEXT)))) UNION SELECT DISTINCT * FROM vt1 WHERE (((CAST(0.2559154494974689 COLLATE BINARY AS TEXT)) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) COLLATE BINARY) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) COLLATE BINARY))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) COLLATE BINARY) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c2, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c1, vt0.c0;
SELECT vt0.c2, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c1, vt0.c0 HAVING COUNT(AVG(AVG(vt0.c2))) UNION ALL SELECT vt0.c2, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c1, vt0.c0 HAVING (NOT (COUNT(AVG(AVG(vt0.c2))))) UNION ALL SELECT vt0.c2, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c1, vt0.c0 HAVING ((COUNT(AVG(AVG(vt0.c2)))) ISNULL);
SELECT ALL vt0.c0, t0.c50 FROM vt1, t0, vt0;
SELECT ALL vt0.c0, t0.c50 FROM vt1, t0, vt0 WHERE ((((vt0.c1 IN ()))|(((vt0.c1) ISNULL)))) UNION ALL SELECT ALL vt0.c0, t0.c50 FROM vt1, t0, vt0 WHERE ((NOT ((((vt0.c1 IN ()))|(((vt0.c1) ISNULL)))))) UNION ALL SELECT vt0.c0, t0.c50 FROM vt1, t0, vt0 WHERE ((((((vt0.c1 IN ()))|(((vt0.c1) ISNULL)))) ISNULL));
SELECT ALL vt0.c0, t0.c50 FROM vt1, t0, vt0;
SELECT DISTINCT vt0.c1, vt0.c0, t0.c46 FROM vt0, t0, vt1 NOT INDEXED;
SELECT DISTINCT vt0.c1, vt0.c0, t0.c46 FROM vt0, t0, vt1 WHERE (((((t0.c50)<=(t0.c0))) BETWEEN ((t0.c46 IN ())) AND (((t0.c46) NOT BETWEEN (vt0.c1) AND (t0.c50))))) UNION SELECT DISTINCT vt0.c1, vt0.c0, t0.c46 FROM vt0, t0, vt1 WHERE ((NOT (((((t0.c50)<=(t0.c0))) BETWEEN ((t0.c46 IN ())) AND (((t0.c46) NOT BETWEEN (vt0.c1) AND (t0.c50))))))) UNION SELECT DISTINCT vt0.c1, vt0.c0, t0.c46 FROM vt0, t0, vt1 WHERE (((((((t0.c50)<=(t0.c0))) BETWEEN ((t0.c46 IN ())) AND (((t0.c46) NOT BETWEEN (vt0.c1) AND (t0.c50))))) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0, t0.c46 FROM vt0, t0, vt1 NOT INDEXED;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (vt1.c0) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((vt1.c0) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT t0.c0, t0.c50, vt0.c1, vt0.c2, vt0.c0, t0.c46, vt1.c0 FROM vt0 LEFT OUTER JOIN t0 ON ((((vt0.c0 IN (vt0.c1, vt0.c2))))>((((((vt1.c0)OR(t0.c46)))OR(t0.c50))))) CROSS JOIN vt1 ON ((((((vt0.c1)AND(t0.c0)))AND(t0.c46)))OR(((vt0.c0)%(vt0.c1)))) GROUP BY t0.c0, t0.c50, vt0.c1, vt0.c2, vt0.c0, t0.c46, vt1.c0;
SELECT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((vt1.c0))<=((vt1.c0))) COLLATE NOCASE) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0))<=((vt1.c0))) COLLATE NOCASE))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((((((vt1.c0))<=((vt1.c0))) COLLATE NOCASE) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT vt0.c1, t0.c0, vt0.c2, t0.c50, vt0.c0 FROM vt0, t0, vt1;
SELECT DISTINCT vt0.c1, t0.c0, vt0.c2, t0.c50, vt0.c0 FROM vt0, t0, vt1 WHERE (((0.6033418925991539)>>(((((vt1.c0)AND(vt0.c0)))AND(t0.c50))))) UNION SELECT DISTINCT vt0.c1, t0.c0, vt0.c2, t0.c50, vt0.c0 FROM vt0, t0, vt1 WHERE ((NOT (((0.6033418925991539)>>(((((vt1.c0)AND(vt0.c0)))AND(t0.c50))))))) UNION SELECT DISTINCT vt0.c1, t0.c0, vt0.c2, t0.c50, vt0.c0 FROM vt0, t0, vt1 WHERE (((((0.6033418925991539)>>(((((vt1.c0)AND(vt0.c0)))AND(t0.c50))))) ISNULL));
SELECT DISTINCT vt0.c1, t0.c0, vt0.c2, t0.c50, vt0.c0 FROM vt0, t0, vt1;
SELECT vt0.c0, vt0.c1, vt0.c2 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c1, vt0.c2;
SELECT vt0.c0, vt0.c1, vt0.c2 FROM vt0, vt1 WHERE (((((vt0.c2) IS FALSE))|((((vt0.c1)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0)))))) GROUP BY vt0.c0, vt0.c1, vt0.c2 UNION SELECT ALL vt0.c0, vt0.c1, vt0.c2 FROM vt0, vt1 WHERE ((NOT (((((vt0.c2) IS FALSE))|((((vt0.c1)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0)))))))) GROUP BY vt0.c0, vt0.c1, vt0.c2 UNION SELECT vt0.c0, vt0.c1, vt0.c2 FROM vt0, vt1 WHERE (((((((vt0.c2) IS FALSE))|((((vt0.c1)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0)))))) ISNULL)) GROUP BY vt0.c0, vt0.c1, vt0.c2;
SELECT vt0.c0, vt0.c1, vt0.c2 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c1, vt0.c2;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MIN(SUM(GROUP_CONCAT(vt1.c0)))) NOT BETWEEN (MIN(MIN(TOTAL(COUNT(*))))) AND (COUNT(TOTAL(vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((MIN(SUM(GROUP_CONCAT(vt1.c0)))) NOT BETWEEN (MIN(MIN(TOTAL(COUNT(*))))) AND (COUNT(TOTAL(vt1.c0)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((MIN(SUM(GROUP_CONCAT(vt1.c0)))) NOT BETWEEN (MIN(MIN(TOTAL(COUNT(*))))) AND (COUNT(TOTAL(vt1.c0))))) ISNULL);
SELECT ALL * FROM vt0, vt1;
SELECT * FROM vt0, vt1 WHERE (((vt0.c1 IN (vt0.c2)) IN ())) UNION ALL SELECT * FROM vt0, vt1 WHERE ((NOT (((vt0.c1 IN (vt0.c2)) IN ())))) UNION ALL SELECT * FROM vt0, vt1 WHERE (((((vt0.c1 IN (vt0.c2)) IN ())) ISNULL));
SELECT ALL * FROM vt0, vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (1391638581) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (1391638581))) UNION SELECT DISTINCT * FROM vt1 WHERE (((1391638581) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt0.c0, t0.c0, t0.c50 FROM vt0, t0, vt1 GROUP BY vt0.c0, t0.c0, t0.c50;
SELECT ALL vt0.c0, t0.c0, t0.c50 FROM vt0, t0, vt1 WHERE ((vt1.c0 COLLATE NOCASE IN (CASE t0.c0  WHEN t0.c0 THEN t0.c50 ELSE vt0.c1 END))) GROUP BY vt0.c0, t0.c0, t0.c50 UNION SELECT vt0.c0, t0.c0, t0.c50 FROM vt0, t0, vt1 WHERE ((NOT ((vt1.c0 COLLATE NOCASE IN (CASE t0.c0  WHEN t0.c0 THEN t0.c50 ELSE vt0.c1 END))))) GROUP BY vt0.c0, t0.c0, t0.c50 UNION SELECT vt0.c0, t0.c0, t0.c50 FROM vt0, t0, vt1 WHERE ((((vt1.c0 COLLATE NOCASE IN (CASE t0.c0  WHEN t0.c0 THEN t0.c50 ELSE vt0.c1 END))) ISNULL)) GROUP BY vt0.c0, t0.c0, t0.c50;
SELECT ALL vt0.c0, t0.c0, t0.c50 FROM vt0, t0, vt1 GROUP BY vt0.c0, t0.c0, t0.c50;
SELECT vt0.c1, vt0.c2, t0.c0, t0.c50 FROM vt0, t0 GROUP BY vt0.c1, vt0.c2, t0.c0, t0.c50;
SELECT vt0.c1, vt0.c2, t0.c0, t0.c50 FROM vt0, t0 GROUP BY vt0.c1, vt0.c2, t0.c0, t0.c50 HAVING ((TOTAL(t0.c0))IS((((COUNT(vt0.c1))) BETWEEN ((t0.c0)) AND ((vt0.c1))))) UNION ALL SELECT vt0.c1, vt0.c2, t0.c0, t0.c50 FROM vt0, t0 GROUP BY vt0.c1, vt0.c2, t0.c0, t0.c50 HAVING (NOT (((TOTAL(t0.c0))IS((((COUNT(vt0.c1))) BETWEEN ((t0.c0)) AND ((vt0.c1))))))) UNION ALL SELECT vt0.c1, vt0.c2, t0.c0, t0.c50 FROM vt0, t0 GROUP BY vt0.c1, vt0.c2, t0.c0, t0.c50 HAVING ((((TOTAL(t0.c0))IS((((COUNT(vt0.c1))) BETWEEN ((t0.c0)) AND ((vt0.c1)))))) ISNULL);
SELECT vt0.c1, vt0.c2, t0.c0, t0.c50 FROM vt0, t0 GROUP BY vt0.c1, vt0.c2, t0.c0, t0.c50;
SELECT vt0.c1, vt0.c2, t0.c0, t0.c50 FROM vt0, t0 GROUP BY vt0.c1, vt0.c2, t0.c0, t0.c50 HAVING ((TOTAL(t0.c0))IS((((COUNT(vt0.c1))) BETWEEN ((t0.c0)) AND ((vt0.c1))))) UNION ALL SELECT vt0.c1, vt0.c2, t0.c0, t0.c50 FROM vt0, t0 GROUP BY vt0.c1, vt0.c2, t0.c0, t0.c50 HAVING (NOT (((TOTAL(t0.c0))IS((((COUNT(vt0.c1))) BETWEEN ((t0.c0)) AND ((vt0.c1))))))) UNION ALL SELECT vt0.c1, vt0.c2, t0.c0, t0.c50 FROM vt0, t0 GROUP BY vt0.c1, vt0.c2, t0.c0, t0.c50 HAVING ((((TOTAL(t0.c0))IS((((COUNT(vt0.c1))) BETWEEN ((t0.c0)) AND ((vt0.c1)))))) ISNULL);
SELECT vt0.c1, vt0.c2, t0.c0, t0.c50 FROM vt0, t0 GROUP BY vt0.c1, vt0.c2, t0.c0, t0.c50;
SELECT ALL SUM((('')*(vt1.c0)) COLLATE RTRIM) FROM vt1, t0 ORDER BY ((((t0.c46)>(t0.c46)))<=((NOT (vt1.c0)))) ASC, (vt1.c0 IN ()) DESC  NULLS LAST;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE ((((~ (vt0.c0)))GLOB(CAST(vt0.c1 AS INTEGER)))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((((~ (vt0.c0)))GLOB(CAST(vt0.c1 AS INTEGER)))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((((~ (vt0.c0)))GLOB(CAST(vt0.c1 AS INTEGER)))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c2, vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c2, vt0.c1, vt0.c0 FROM vt0 WHERE (CAST(((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c2)) AS REAL)) UNION SELECT DISTINCT vt0.c2, vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (CAST(((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c2)) AS REAL)))) UNION SELECT DISTINCT vt0.c2, vt0.c1, vt0.c0 FROM vt0 WHERE (((CAST(((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c2)) AS REAL)) ISNULL));
SELECT DISTINCT vt0.c2, vt0.c1, vt0.c0 FROM vt0;
SELECT ALL t0.c50 FROM t0, vt0, vt1 GROUP BY t0.c50;
SELECT t0.c50 FROM t0, vt0, vt1 WHERE ('') GROUP BY t0.c50 UNION SELECT t0.c50 FROM t0, vt0, vt1 WHERE ((NOT (''))) GROUP BY t0.c50 UNION SELECT t0.c50 FROM t0, vt0, vt1 WHERE ((('') ISNULL)) GROUP BY t0.c50;
SELECT ALL t0.c50 FROM t0, vt0, vt1 GROUP BY t0.c50;
SELECT ALL vt1.c0 FROM vt0, vt1 INDEXED BY i72 GROUP BY vt1.c0;
SELECT ALL t0.c50, vt1.c0 FROM t0, vt1, vt0;
SELECT ALL t0.c50, vt1.c0 FROM t0, vt1, vt0 WHERE (((((vt0.c2)IS(t0.c46))) NOTNULL)) UNION ALL SELECT t0.c50, vt1.c0 FROM t0, vt1, vt0 WHERE ((NOT (((((vt0.c2)IS(t0.c46))) NOTNULL)))) UNION ALL SELECT ALL t0.c50, vt1.c0 FROM t0, vt1, vt0 WHERE (((((((vt0.c2)IS(t0.c46))) NOTNULL)) ISNULL));
SELECT ALL t0.c50, vt1.c0 FROM t0, vt1, vt0;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE (((((vt0.c1, '0', vt0.c1))<=((vt1.c0, vt1.c0, vt0.c1))) IN ())) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (((((vt0.c1, '0', vt0.c1))<=((vt1.c0, vt1.c0, vt0.c1))) IN ())))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE (((((((vt0.c1, '0', vt0.c1))<=((vt1.c0, vt1.c0, vt0.c1))) IN ())) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT ALL vt0.c1, t0.c50, t0.c0, vt0.c0 FROM vt1, vt0, t0 GROUP BY vt0.c1, t0.c50, t0.c0, vt0.c0;
SELECT ALL vt0.c1, t0.c50, t0.c0, vt0.c0 FROM vt1, vt0, t0 WHERE ((((((t0.c0, t0.c50, t0.c50))<((vt0.c0, vt0.c0, vt0.c1))))%(((((t0.c46)OR(t0.c0)))OR(t0.c0))))) GROUP BY vt0.c1, t0.c50, t0.c0, vt0.c0 UNION SELECT vt0.c1, t0.c50, t0.c0, vt0.c0 FROM vt1, vt0, t0 WHERE ((NOT ((((((t0.c0, t0.c50, t0.c50))<((vt0.c0, vt0.c0, vt0.c1))))%(((((t0.c46)OR(t0.c0)))OR(t0.c0))))))) GROUP BY vt0.c1, t0.c50, t0.c0, vt0.c0 UNION SELECT ALL vt0.c1, t0.c50, t0.c0, vt0.c0 FROM vt1, vt0, t0 WHERE ((((((((t0.c0, t0.c50, t0.c50))<((vt0.c0, vt0.c0, vt0.c1))))%(((((t0.c46)OR(t0.c0)))OR(t0.c0))))) ISNULL)) GROUP BY vt0.c1, t0.c50, t0.c0, vt0.c0;
SELECT ALL vt0.c1, t0.c50, t0.c0, vt0.c0 FROM vt1, vt0, t0 GROUP BY vt0.c1, t0.c50, t0.c0, vt0.c0;
SELECT vt0.c0, vt1.c0, vt0.c2, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0, vt0.c2, vt0.c1;
SELECT ALL vt0.c0, vt1.c0, vt0.c2, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0, vt0.c2, vt0.c1 HAVING ((CAST(vt0.c2 AS INTEGER))<=(COUNT(*))) UNION ALL SELECT ALL vt0.c0, vt1.c0, vt0.c2, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0, vt0.c2, vt0.c1 HAVING (NOT (((CAST(vt0.c2 AS INTEGER))<=(COUNT(*))))) UNION ALL SELECT ALL vt0.c0, vt1.c0, vt0.c2, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0, vt0.c2, vt0.c1 HAVING ((((CAST(vt0.c2 AS INTEGER))<=(COUNT(*)))) ISNULL);
SELECT vt0.c0, vt1.c0, vt0.c2, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0, vt0.c2, vt0.c1;
SELECT ALL vt0.c0, vt1.c0, vt0.c2, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0, vt0.c2, vt0.c1 HAVING ((CAST(vt0.c2 AS INTEGER))<=(COUNT(*))) UNION ALL SELECT ALL vt0.c0, vt1.c0, vt0.c2, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0, vt0.c2, vt0.c1 HAVING (NOT (((CAST(vt0.c2 AS INTEGER))<=(COUNT(*))))) UNION ALL SELECT ALL vt0.c0, vt1.c0, vt0.c2, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0, vt0.c2, vt0.c1 HAVING ((((CAST(vt0.c2 AS INTEGER))<=(COUNT(*)))) ISNULL);
SELECT vt0.c0, vt1.c0, vt0.c2, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0, vt0.c2, vt0.c1;
SELECT ALL * FROM vt0, vt1 INNER JOIN t0 ON (('384143609')==(((vt0.c1)>>(0.294513978827586))));
SELECT * FROM vt0, vt1 INNER JOIN t0 ON (('384143609')=(((vt0.c1)>>(0.294513978827586)))) WHERE (CAST(t0.c46 AS BLOB)) UNION ALL SELECT ALL * FROM vt0, vt1 INNER JOIN t0 ON (('384143609')==(((vt0.c1)>>(0.294513978827586)))) WHERE ((NOT (CAST(t0.c46 AS BLOB)))) UNION ALL SELECT ALL * FROM vt0, vt1 INNER JOIN t0 ON (('384143609')==(((vt0.c1)>>(0.294513978827586)))) WHERE (((CAST(t0.c46 AS BLOB)) ISNULL));
SELECT ALL * FROM vt0, vt1 INNER JOIN t0 ON (('384143609')==(((vt0.c1)>>(0.294513978827586))));
SELECT DISTINCT vt0.c2, vt0.c1, vt1.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON x'';
SELECT DISTINCT vt0.c2, vt0.c1, vt1.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON x'' WHERE ((+ (CASE WHEN vt0.c0 THEN vt1.c0 END))) UNION SELECT DISTINCT vt0.c2, vt0.c1, vt1.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON x'' WHERE ((NOT ((+ (CASE WHEN vt0.c0 THEN vt1.c0 END))))) UNION SELECT DISTINCT vt0.c2, vt0.c1, vt1.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON x'' WHERE ((((+ (CASE WHEN vt0.c0 THEN vt1.c0 END))) ISNULL));
SELECT DISTINCT vt0.c2, vt0.c1, vt1.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON x'';
SELECT ALL t0.c0, t0.c50, vt0.c2, vt0.c1, vt1.c0 FROM vt1 FULL OUTER JOIN t0 ON NULL RIGHT OUTER JOIN vt0 ON (((vt0.c1 IN ())) NOT BETWEEN (((t0.c50) NOT BETWEEN (t0.c0) AND (t0.c50))) AND ((NOT (vt0.c1)))) GROUP BY t0.c0, t0.c50, vt0.c2, vt0.c1, vt1.c0;
SELECT t0.c0, t0.c50, vt0.c2, vt0.c1, vt1.c0 FROM vt1 FULL OUTER JOIN t0 ON NULL RIGHT OUTER JOIN vt0 ON (((vt0.c1 IN ())) NOT BETWEEN (((t0.c50) NOT BETWEEN (t0.c0) AND (t0.c50))) AND ((NOT (vt0.c1)))) WHERE (vt0.c0) GROUP BY t0.c0, t0.c50, vt0.c2, vt0.c1, vt1.c0 UNION SELECT t0.c0, t0.c50, vt0.c2, vt0.c1, vt1.c0 FROM vt1 FULL OUTER JOIN t0 ON NULL RIGHT OUTER JOIN vt0 ON (((vt0.c1 IN ())) NOT BETWEEN (((t0.c50) NOT BETWEEN (t0.c0) AND (t0.c50))) AND ((NOT (vt0.c1)))) WHERE ((NOT (vt0.c0))) GROUP BY t0.c0, t0.c50, vt0.c2, vt0.c1, vt1.c0 UNION SELECT ALL t0.c0, t0.c50, vt0.c2, vt0.c1, vt1.c0 FROM vt1 FULL OUTER JOIN t0 ON NULL RIGHT OUTER JOIN vt0 ON (((vt0.c1 IN ())) NOT BETWEEN (((t0.c50) NOT BETWEEN (t0.c0) AND (t0.c50))) AND ((NOT (vt0.c1)))) WHERE (((vt0.c0) ISNULL)) GROUP BY t0.c0, t0.c50, vt0.c2, vt0.c1, vt1.c0;
SELECT ALL t0.c0, t0.c50, vt0.c2, vt0.c1, vt1.c0 FROM vt1 FULL OUTER JOIN t0 ON NULL RIGHT OUTER JOIN vt0 ON (((vt0.c1 IN ())) NOT BETWEEN (((t0.c50) NOT BETWEEN (t0.c0) AND (t0.c50))) AND ((NOT (vt0.c1)))) GROUP BY t0.c0, t0.c50, vt0.c2, vt0.c1, vt1.c0;
SELECT vt0.c2 FROM vt0, vt1 INNER JOIN t0 ON vt0.c0 COLLATE BINARY COLLATE BINARY GROUP BY vt0.c2;
SELECT vt0.c2 FROM vt0, vt1 INNER JOIN t0 ON vt0.c0 COLLATE BINARY COLLATE BINARY GROUP BY vt0.c2 HAVING ((AVG(t0.c50))<<(COUNT(*))) UNION ALL SELECT vt0.c2 FROM vt0, vt1 INNER JOIN t0 ON vt0.c0 COLLATE BINARY COLLATE BINARY GROUP BY vt0.c2 HAVING (NOT (((AVG(t0.c50))<<(COUNT(*))))) UNION ALL SELECT ALL vt0.c2 FROM vt0, vt1 INNER JOIN t0 ON vt0.c0 COLLATE BINARY COLLATE BINARY GROUP BY vt0.c2 HAVING ((((AVG(t0.c50))<<(COUNT(*)))) ISNULL);
SELECT vt0.c2 FROM vt0, vt1 INNER JOIN t0 ON vt0.c0 COLLATE BINARY COLLATE BINARY GROUP BY vt0.c2;
SELECT vt0.c2 FROM vt0, vt1 INNER JOIN t0 ON vt0.c0 COLLATE BINARY COLLATE BINARY GROUP BY vt0.c2 HAVING ((AVG(t0.c50))<<(COUNT(*))) UNION ALL SELECT vt0.c2 FROM vt0, vt1 INNER JOIN t0 ON vt0.c0 COLLATE BINARY COLLATE BINARY GROUP BY vt0.c2 HAVING (NOT (((AVG(t0.c50))<<(COUNT(*))))) UNION ALL SELECT ALL vt0.c2 FROM vt0, vt1 INNER JOIN t0 ON vt0.c0 COLLATE BINARY COLLATE BINARY GROUP BY vt0.c2 HAVING ((((AVG(t0.c50))<<(COUNT(*)))) ISNULL);
SELECT vt0.c2 FROM vt0, vt1 INNER JOIN t0 ON vt0.c0 COLLATE BINARY COLLATE BINARY GROUP BY vt0.c2;
SELECT ALL t0.c0, vt0.c0, t0.c46 FROM vt1, t0 INNER JOIN vt0 ON RTRIM((- (t0.c46)));
SELECT t0.c0, vt0.c0, t0.c46 FROM vt1, t0 INNER JOIN vt0 ON RTRIM((- (t0.c46))) WHERE (x'da505e6b') UNION ALL SELECT ALL t0.c0, vt0.c0, t0.c46 FROM vt1, t0 INNER JOIN vt0 ON RTRIM((- (t0.c46))) WHERE ((NOT (x'da505e6b'))) UNION ALL SELECT ALL t0.c0, vt0.c0, t0.c46 FROM vt1, t0 INNER JOIN vt0 ON RTRIM((- (t0.c46))) WHERE (((x'da505e6b') ISNULL));
SELECT ALL t0.c0, vt0.c0, t0.c46 FROM vt1, t0 INNER JOIN vt0 ON RTRIM((- (t0.c46)));
SELECT DISTINCT vt0.c2, t0.c50, t0.c0, t0.c46 FROM vt0, t0;
SELECT DISTINCT vt0.c2, t0.c50, t0.c0, t0.c46 FROM vt0, t0 WHERE ('1553391193') UNION SELECT DISTINCT vt0.c2, t0.c50, t0.c0, t0.c46 FROM vt0, t0 WHERE ((NOT ('1553391193'))) UNION SELECT DISTINCT vt0.c2, t0.c50, t0.c0, t0.c46 FROM vt0, t0 WHERE ((('1553391193') ISNULL));
SELECT DISTINCT vt0.c2, t0.c50, t0.c0, t0.c46 FROM vt0, t0;
SELECT t0.c0 FROM vt1, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt1, t0 WHERE (((((t0.c0)OR(t0.c46))) NOT BETWEEN ((((t0.c50))=((vt1.c0)))) AND ((t0.c0 IN ())))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM vt1, t0 WHERE ((NOT (((((t0.c0)OR(t0.c46))) NOT BETWEEN ((((t0.c50))==((vt1.c0)))) AND ((t0.c0 IN ())))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM vt1, t0 WHERE (((((((t0.c0)OR(t0.c46))) NOT BETWEEN ((((t0.c50))==((vt1.c0)))) AND ((t0.c0 IN ())))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM vt1, t0 GROUP BY t0.c0;
SELECT vt0.c1, vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt1.c0, vt0.c0;
SELECT ALL vt0.c1, vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt1.c0, vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c1, vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt1.c0, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c1, vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt1.c0, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c1, vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt1.c0, vt0.c0;
SELECT ALL vt0.c1, vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt1.c0, vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c1, vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt1.c0, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c1, vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt1.c0, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c1, vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt1.c0, vt0.c0;
SELECT ALL * FROM vt1 NATURAL JOIN t0;
SELECT ALL * FROM vt1 NATURAL JOIN t0 WHERE ((182576275 IN ())) UNION ALL SELECT * FROM vt1 NATURAL JOIN t0 WHERE ((NOT ((182576275 IN ())))) UNION ALL SELECT ALL * FROM vt1 NATURAL JOIN t0 WHERE ((((182576275 IN ())) ISNULL));
SELECT ALL * FROM vt1 NATURAL JOIN t0;
SELECT DISTINCT t0.c0, t0.c50, t0.c46 FROM t0;
SELECT DISTINCT t0.c0, t0.c50, t0.c46 FROM t0 WHERE (CAST(((t0.c50) NOT BETWEEN (t0.c0) AND (t0.c46)) AS BLOB)) UNION SELECT DISTINCT t0.c0, t0.c50, t0.c46 FROM t0 WHERE ((NOT (CAST(((t0.c50) NOT BETWEEN (t0.c0) AND (t0.c46)) AS BLOB)))) UNION SELECT DISTINCT t0.c0, t0.c50, t0.c46 FROM t0 WHERE (((CAST(((t0.c50) NOT BETWEEN (t0.c0) AND (t0.c46)) AS BLOB)) ISNULL));
SELECT DISTINCT t0.c0, t0.c50, t0.c46 FROM t0;
SELECT vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c2;
SELECT ALL vt0.c0, vt0.c2 FROM vt0 WHERE (CAST('j9igOh*g' AS REAL)) GROUP BY vt0.c0, vt0.c2 UNION SELECT ALL vt0.c0, vt0.c2 FROM vt0 WHERE ((NOT (CAST('j9igOh*g' AS REAL)))) GROUP BY vt0.c0, vt0.c2 UNION SELECT vt0.c0, vt0.c2 FROM vt0 WHERE (((CAST('j9igOh*g' AS REAL)) ISNULL)) GROUP BY vt0.c0, vt0.c2;
SELECT vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c2;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (((((vt0.c1)==(vt0.c2)))-((((vt0.c0, vt0.c0, vt0.c2))<=((vt0.c0, vt0.c0, vt0.c1)))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((((vt0.c1)==(vt0.c2)))-((((vt0.c0, vt0.c0, vt0.c2))<=((vt0.c0, vt0.c0, vt0.c1)))))))) UNION ALL SELECT * FROM vt0 WHERE (((((((vt0.c1)==(vt0.c2)))-((((vt0.c0, vt0.c0, vt0.c2))<=((vt0.c0, vt0.c0, vt0.c1)))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON (((vt0.c0)LIKE(vt1.c0)) IN (LIKELY(DISTINCT vt0.c0), vt1.c0));
SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON (((vt0.c0)LIKE(vt1.c0)) IN (LIKELY(DISTINCT vt0.c0), vt1.c0)) WHERE (vt0.c1) UNION SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON (((vt0.c0)LIKE(vt1.c0)) IN (LIKELY(DISTINCT vt0.c0), vt1.c0)) WHERE ((NOT (vt0.c1))) UNION SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON (((vt0.c0)LIKE(vt1.c0)) IN (LIKELY(DISTINCT vt0.c0), vt1.c0)) WHERE (((vt0.c1) ISNULL));
SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON (((vt0.c0)LIKE(vt1.c0)) IN (LIKELY(DISTINCT vt0.c0), vt1.c0));
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (UPPER(DISTINCT (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (UPPER(DISTINCT (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((UPPER(DISTINCT (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL t0.c46, vt1.c0 FROM vt1, t0 GROUP BY t0.c46, vt1.c0;
SELECT ALL t0.c46, vt1.c0 FROM vt1, t0 GROUP BY t0.c46, vt1.c0 HAVING MIN(GROUP_CONCAT(COUNT(SUM(SUM(AVG(t0.c46)))))) UNION ALL SELECT ALL t0.c46, vt1.c0 FROM vt1, t0 GROUP BY t0.c46, vt1.c0 HAVING (NOT (MIN(GROUP_CONCAT(COUNT(SUM(SUM(AVG(t0.c46)))))))) UNION ALL SELECT t0.c46, vt1.c0 FROM vt1, t0 GROUP BY t0.c46, vt1.c0 HAVING ((MIN(GROUP_CONCAT(COUNT(SUM(SUM(AVG(t0.c46))))))) ISNULL);
SELECT ALL * FROM t0, vt1, vt0;
SELECT ALL * FROM t0, vt1, vt0 WHERE (((((vt0.c1)<(vt0.c2)))%(((t0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0))))) UNION ALL SELECT ALL * FROM t0, vt1, vt0 WHERE ((NOT (((((vt0.c1)<(vt0.c2)))%(((t0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0))))))) UNION ALL SELECT * FROM t0, vt1, vt0 WHERE (((((((vt0.c1)<(vt0.c2)))%(((t0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0))))) ISNULL));
SELECT ALL * FROM t0, vt1, vt0;
SELECT DISTINCT vt0.c1, vt0.c2, vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT DISTINCT vt0.c1, vt0.c2, vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((+ (((((vt0.c2)OR(vt0.c1)))OR(vt0.c0))))) UNION SELECT DISTINCT vt0.c1, vt0.c2, vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT ((+ (((((vt0.c2)OR(vt0.c1)))OR(vt0.c0))))))) UNION SELECT DISTINCT vt0.c1, vt0.c2, vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((((+ (((((vt0.c2)OR(vt0.c1)))OR(vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c2, vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT t0.c46, vt0.c0, vt0.c1 FROM vt1, vt0, t0 GROUP BY t0.c46, vt0.c0, vt0.c1;
SELECT ALL t0.c46, vt0.c0, vt0.c1 FROM vt1, vt0, t0 WHERE (CASE WHEN COALESCE(vt0.c1, t0.c46, t0.c50, vt0.c1) THEN CASE WHEN t0.c50 THEN t0.c0 END WHEN (t0.c50 IN ()) THEN x'' WHEN (((t0.c50)) BETWEEN ((vt0.c1)) AND ((t0.c46))) THEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (t0.c46)) ELSE ('fa' IN ()) END) GROUP BY t0.c46, vt0.c0, vt0.c1 UNION SELECT t0.c46, vt0.c0, vt0.c1 FROM vt1, vt0, t0 WHERE ((NOT (CASE WHEN COALESCE(vt0.c1, t0.c46, t0.c50, vt0.c1) THEN CASE WHEN t0.c50 THEN t0.c0 END WHEN (t0.c50 IN ()) THEN x'' WHEN (((t0.c50)) BETWEEN ((vt0.c1)) AND ((t0.c46))) THEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (t0.c46)) ELSE ('fa' IN ()) END))) GROUP BY t0.c46, vt0.c0, vt0.c1 UNION SELECT t0.c46, vt0.c0, vt0.c1 FROM vt1, vt0, t0 WHERE (((CASE WHEN COALESCE(vt0.c1, t0.c46, t0.c50, vt0.c1) THEN CASE WHEN t0.c50 THEN t0.c0 END WHEN (t0.c50 IN ()) THEN x'' WHEN (((t0.c50)) BETWEEN ((vt0.c1)) AND ((t0.c46))) THEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (t0.c46)) ELSE ('fa' IN ()) END) ISNULL)) GROUP BY t0.c46, vt0.c0, vt0.c1;
SELECT t0.c46, vt0.c0, vt0.c1 FROM vt1, vt0, t0 GROUP BY t0.c46, vt0.c0, vt0.c1;
SELECT vt0.c2, t0.c0, t0.c46, vt0.c0, vt1.c0, vt0.c1, t0.c50 FROM vt1, vt0, t0 GROUP BY vt0.c2, t0.c0, t0.c46, vt0.c0, vt1.c0, vt0.c1, t0.c50;
SELECT ALL vt0.c2, t0.c0, t0.c46, vt0.c0, vt1.c0, vt0.c1, t0.c50 FROM vt1, vt0, t0 GROUP BY vt0.c2, t0.c0, t0.c46, vt0.c0, vt1.c0, vt0.c1, t0.c50 HAVING ((TOTAL(t0.c50))IS(COUNT(t0.c0))) UNION ALL SELECT vt0.c2, t0.c0, t0.c46, vt0.c0, vt1.c0, vt0.c1, t0.c50 FROM vt1, vt0, t0 GROUP BY vt0.c2, t0.c0, t0.c46, vt0.c0, vt1.c0, vt0.c1, t0.c50 HAVING (NOT (((TOTAL(t0.c50))IS(COUNT(t0.c0))))) UNION ALL SELECT vt0.c2, t0.c0, t0.c46, vt0.c0, vt1.c0, vt0.c1, t0.c50 FROM vt1, vt0, t0 GROUP BY vt0.c2, t0.c0, t0.c46, vt0.c0, vt1.c0, vt0.c1, t0.c50 HAVING ((((TOTAL(t0.c50))IS(COUNT(t0.c0)))) ISNULL);
SELECT vt0.c2, t0.c0, t0.c46, vt0.c0, vt1.c0, vt0.c1, t0.c50 FROM vt1, vt0, t0 GROUP BY vt0.c2, t0.c0, t0.c46, vt0.c0, vt1.c0, vt0.c1, t0.c50;
SELECT ALL vt0.c2, t0.c0, t0.c46, vt0.c0, vt1.c0, vt0.c1, t0.c50 FROM vt1, vt0, t0 GROUP BY vt0.c2, t0.c0, t0.c46, vt0.c0, vt1.c0, vt0.c1, t0.c50 HAVING ((TOTAL(t0.c50))IS(COUNT(t0.c0))) UNION ALL SELECT vt0.c2, t0.c0, t0.c46, vt0.c0, vt1.c0, vt0.c1, t0.c50 FROM vt1, vt0, t0 GROUP BY vt0.c2, t0.c0, t0.c46, vt0.c0, vt1.c0, vt0.c1, t0.c50 HAVING (NOT (((TOTAL(t0.c50))IS(COUNT(t0.c0))))) UNION ALL SELECT vt0.c2, t0.c0, t0.c46, vt0.c0, vt1.c0, vt0.c1, t0.c50 FROM vt1, vt0, t0 GROUP BY vt0.c2, t0.c0, t0.c46, vt0.c0, vt1.c0, vt0.c1, t0.c50 HAVING ((((TOTAL(t0.c50))IS(COUNT(t0.c0)))) ISNULL);
SELECT vt0.c2, t0.c0, t0.c46, vt0.c0, vt1.c0, vt0.c1, t0.c50 FROM vt1, vt0, t0 GROUP BY vt0.c2, t0.c0, t0.c46, vt0.c0, vt1.c0, vt0.c1, t0.c50;
SELECT vt0.c2, vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0 INDEXED BY i72;
SELECT DISTINCT t0.c50, vt0.c0 FROM vt1, vt0, t0;
SELECT DISTINCT t0.c50, vt0.c0 FROM vt1, vt0, t0 WHERE ((((vt1.c0, (- (t0.c46)), ((vt0.c1)AND(vt1.c0)), (~ (vt0.c1)), (((vt0.c1)) NOT BETWEEN ((t0.c50)) AND ((x'')))))>=((((((vt1.c0)AND(vt1.c0)))AND(t0.c50)), ((t0.c0)/(-1987701633)), CASE t0.c46  WHEN 1471258216 THEN NULL ELSE vt0.c0 END, x'ea81', ((vt0.c2)==(t0.c0)))))) UNION SELECT DISTINCT t0.c50, vt0.c0 FROM vt1, vt0, t0 WHERE ((NOT ((((vt1.c0, (- (t0.c46)), ((vt0.c1)AND(vt1.c0)), (~ (vt0.c1)), (((vt0.c1)) NOT BETWEEN ((t0.c50)) AND ((x'')))))>=((((((vt1.c0)AND(vt1.c0)))AND(t0.c50)), ((t0.c0)/(-1987701633)), CASE t0.c46  WHEN 1471258216 THEN NULL ELSE vt0.c0 END, x'ea81', ((vt0.c2)=(t0.c0)))))))) UNION SELECT DISTINCT t0.c50, vt0.c0 FROM vt1, vt0, t0 WHERE ((((((vt1.c0, (- (t0.c46)), ((vt0.c1)AND(vt1.c0)), (~ (vt0.c1)), (((vt0.c1)) NOT BETWEEN ((t0.c50)) AND ((x'')))))>=((((((vt1.c0)AND(vt1.c0)))AND(t0.c50)), ((t0.c0)/(-1987701633)), CASE t0.c46  WHEN 1471258216 THEN NULL ELSE vt0.c0 END, x'ea81', ((vt0.c2)=(t0.c0)))))) ISNULL));
SELECT DISTINCT t0.c50, vt0.c0 FROM vt1, vt0, t0;
SELECT ALL t0.c50 FROM vt1, t0 GROUP BY t0.c50;
SELECT t0.c50 FROM vt1, t0 WHERE (t0.c0) GROUP BY t0.c50 UNION SELECT ALL t0.c50 FROM vt1, t0 WHERE ((NOT (t0.c0))) GROUP BY t0.c50 UNION SELECT t0.c50 FROM vt1, t0 WHERE (((t0.c0) ISNULL)) GROUP BY t0.c50;
SELECT ALL t0.c50 FROM vt1, t0 GROUP BY t0.c50;
SELECT ALL t0.c46, t0.c0, vt1.c0, vt0.c1, vt0.c2 FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt0.c2)) BETWEEN (((t0.c46 IN ()))) AND ((((((vt1.c0)AND(vt0.c2)))AND(vt0.c1))))) RIGHT OUTER JOIN t0 ON CAST(t0.c50 COLLATE BINARY AS TEXT) GROUP BY t0.c46, t0.c0, vt1.c0, vt0.c1, vt0.c2;
SELECT ALL t0.c46, t0.c0, vt1.c0, vt0.c1, vt0.c2 FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt0.c2)) BETWEEN (((t0.c46 IN ()))) AND ((((((vt1.c0)AND(vt0.c2)))AND(vt0.c1))))) RIGHT OUTER JOIN t0 ON CAST(t0.c50 COLLATE BINARY AS TEXT) GROUP BY t0.c46, t0.c0, vt1.c0, vt0.c1, vt0.c2 HAVING MAX(SQLITE_COMPILEOPTION_GET(vt0.c1)) UNION ALL SELECT t0.c46, t0.c0, vt1.c0, vt0.c1, vt0.c2 FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt0.c2)) BETWEEN (((t0.c46 IN ()))) AND ((((((vt1.c0)AND(vt0.c2)))AND(vt0.c1))))) RIGHT OUTER JOIN t0 ON CAST(t0.c50 COLLATE BINARY AS TEXT) GROUP BY t0.c46, t0.c0, vt1.c0, vt0.c1, vt0.c2 HAVING (NOT (MAX(SQLITE_COMPILEOPTION_GET(vt0.c1)))) UNION ALL SELECT ALL t0.c46, t0.c0, vt1.c0, vt0.c1, vt0.c2 FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt0.c2)) BETWEEN (((t0.c46 IN ()))) AND ((((((vt1.c0)AND(vt0.c2)))AND(vt0.c1))))) RIGHT OUTER JOIN t0 ON CAST(t0.c50 COLLATE BINARY AS TEXT) GROUP BY t0.c46, t0.c0, vt1.c0, vt0.c1, vt0.c2 HAVING ((MAX(SQLITE_COMPILEOPTION_GET(vt0.c1))) ISNULL);
SELECT ALL t0.c46, t0.c0, vt1.c0, vt0.c1, vt0.c2 FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt0.c2)) BETWEEN (((t0.c46 IN ()))) AND ((((((vt1.c0)AND(vt0.c2)))AND(vt0.c1))))) RIGHT OUTER JOIN t0 ON CAST(t0.c50 COLLATE BINARY AS TEXT) GROUP BY t0.c46, t0.c0, vt1.c0, vt0.c1, vt0.c2;
SELECT ALL t0.c46, t0.c0, vt1.c0, vt0.c1, vt0.c2 FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt0.c2)) BETWEEN (((t0.c46 IN ()))) AND ((((((vt1.c0)AND(vt0.c2)))AND(vt0.c1))))) RIGHT OUTER JOIN t0 ON CAST(t0.c50 COLLATE BINARY AS TEXT) GROUP BY t0.c46, t0.c0, vt1.c0, vt0.c1, vt0.c2 HAVING MAX(SQLITE_COMPILEOPTION_GET(vt0.c1)) UNION ALL SELECT t0.c46, t0.c0, vt1.c0, vt0.c1, vt0.c2 FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt0.c2)) BETWEEN (((t0.c46 IN ()))) AND ((((((vt1.c0)AND(vt0.c2)))AND(vt0.c1))))) RIGHT OUTER JOIN t0 ON CAST(t0.c50 COLLATE BINARY AS TEXT) GROUP BY t0.c46, t0.c0, vt1.c0, vt0.c1, vt0.c2 HAVING (NOT (MAX(SQLITE_COMPILEOPTION_GET(vt0.c1)))) UNION ALL SELECT ALL t0.c46, t0.c0, vt1.c0, vt0.c1, vt0.c2 FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt0.c2)) BETWEEN (((t0.c46 IN ()))) AND ((((((vt1.c0)AND(vt0.c2)))AND(vt0.c1))))) RIGHT OUTER JOIN t0 ON CAST(t0.c50 COLLATE BINARY AS TEXT) GROUP BY t0.c46, t0.c0, vt1.c0, vt0.c1, vt0.c2 HAVING ((MAX(SQLITE_COMPILEOPTION_GET(vt0.c1))) ISNULL);
SELECT ALL t0.c46, t0.c0, vt1.c0, vt0.c1, vt0.c2 FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt0.c2)) BETWEEN (((t0.c46 IN ()))) AND ((((((vt1.c0)AND(vt0.c2)))AND(vt0.c1))))) RIGHT OUTER JOIN t0 ON CAST(t0.c50 COLLATE BINARY AS TEXT) GROUP BY t0.c46, t0.c0, vt1.c0, vt0.c1, vt0.c2;
SELECT ALL * FROM vt0 INDEXED BY i72;
SELECT DISTINCT vt0.c0, vt1.c0, t0.c46 FROM t0 INNER JOIN vt0 ON ((((t0.c0) BETWEEN (t0.c0) AND (t0.c46))) BETWEEN (vt0.c0) AND ((((t0.c0))>=((vt0.c1))))) CROSS JOIN vt1 ON (NOT (t0.c50)) COLLATE RTRIM;
SELECT DISTINCT vt0.c0, vt1.c0, t0.c46 FROM t0 INNER JOIN vt0 ON ((((t0.c0) BETWEEN (t0.c0) AND (t0.c46))) BETWEEN (vt0.c0) AND ((((t0.c0))>=((vt0.c1))))) CROSS JOIN vt1 ON (NOT (t0.c50)) COLLATE RTRIM WHERE ((((- (vt0.c1))) ISNULL)) UNION SELECT DISTINCT vt0.c0, vt1.c0, t0.c46 FROM t0 INNER JOIN vt0 ON ((((t0.c0) BETWEEN (t0.c0) AND (t0.c46))) BETWEEN (vt0.c0) AND ((((t0.c0))>=((vt0.c1))))) CROSS JOIN vt1 ON (NOT (t0.c50)) COLLATE RTRIM WHERE ((NOT ((((- (vt0.c1))) ISNULL)))) UNION SELECT DISTINCT vt0.c0, vt1.c0, t0.c46 FROM t0 INNER JOIN vt0 ON ((((t0.c0) BETWEEN (t0.c0) AND (t0.c46))) BETWEEN (vt0.c0) AND ((((t0.c0))>=((vt0.c1))))) CROSS JOIN vt1 ON (NOT (t0.c50)) COLLATE RTRIM WHERE ((((((- (vt0.c1))) ISNULL)) ISNULL));
SELECT DISTINCT vt0.c0, vt1.c0, t0.c46 FROM t0 INNER JOIN vt0 ON ((((t0.c0) BETWEEN (t0.c0) AND (t0.c46))) BETWEEN (vt0.c0) AND ((((t0.c0))>=((vt0.c1))))) CROSS JOIN vt1 ON (NOT (t0.c50)) COLLATE RTRIM;
SELECT t0.c0, vt1.c0, t0.c46, vt0.c0, vt0.c2, vt0.c1, t0.c50 FROM vt0, t0, vt1 GROUP BY t0.c0, vt1.c0, t0.c46, vt0.c0, vt0.c2, vt0.c1, t0.c50;
SELECT ALL t0.c0, vt1.c0, t0.c46, vt0.c0, vt0.c2, vt0.c1, t0.c50 FROM vt0, t0, vt1 WHERE (((((t0.c0)<=(t0.c46)))AND((- (vt0.c1))))) GROUP BY t0.c0, vt1.c0, t0.c46, vt0.c0, vt0.c2, vt0.c1, t0.c50 UNION SELECT ALL t0.c0, vt1.c0, t0.c46, vt0.c0, vt0.c2, vt0.c1, t0.c50 FROM vt0, t0, vt1 WHERE ((NOT (((((t0.c0)<=(t0.c46)))AND((- (vt0.c1))))))) GROUP BY t0.c0, vt1.c0, t0.c46, vt0.c0, vt0.c2, vt0.c1, t0.c50 UNION SELECT t0.c0, vt1.c0, t0.c46, vt0.c0, vt0.c2, vt0.c1, t0.c50 FROM vt0, t0, vt1 WHERE (((((((t0.c0)<=(t0.c46)))AND((- (vt0.c1))))) ISNULL)) GROUP BY t0.c0, vt1.c0, t0.c46, vt0.c0, vt0.c2, vt0.c1, t0.c50;
SELECT t0.c0, vt1.c0, t0.c46, vt0.c0, vt0.c2, vt0.c1, t0.c50 FROM vt0, t0, vt1 GROUP BY t0.c0, vt1.c0, t0.c46, vt0.c0, vt0.c2, vt0.c1, t0.c50;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((CASE x''  WHEN COUNT(vt1.c0) THEN MAX(vt1.c0) WHEN vt1.c0 THEN AVG(COUNT(vt1.c0)) WHEN vt1.c0 THEN MAX(vt1.c0) END)GLOB(GROUP_CONCAT(AVG(GROUP_CONCAT(COUNT(*)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((CASE x''  WHEN COUNT(vt1.c0) THEN MAX(vt1.c0) WHEN vt1.c0 THEN AVG(COUNT(vt1.c0)) WHEN vt1.c0 THEN MAX(vt1.c0) END)GLOB(GROUP_CONCAT(AVG(GROUP_CONCAT(COUNT(*)))))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((CASE x''  WHEN COUNT(vt1.c0) THEN MAX(vt1.c0) WHEN vt1.c0 THEN AVG(COUNT(vt1.c0)) WHEN vt1.c0 THEN MAX(vt1.c0) END)GLOB(GROUP_CONCAT(AVG(GROUP_CONCAT(COUNT(*))))))) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (CASE WHEN JULIANDAY(vt1.c0, vt1.c0, vt1.c0) THEN CASE WHEN vt1.c0 THEN vt1.c0 END END) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (CASE WHEN JULIANDAY(vt1.c0, vt1.c0, vt1.c0) THEN CASE WHEN vt1.c0 THEN vt1.c0 END END))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((CASE WHEN JULIANDAY(vt1.c0, vt1.c0, vt1.c0) THEN CASE WHEN vt1.c0 THEN vt1.c0 END END) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT t0.c46, vt0.c0, vt0.c2, vt1.c0, t0.c50 FROM vt1, t0, vt0;
SELECT DISTINCT t0.c46, vt0.c0, vt0.c2, vt1.c0, t0.c50 FROM vt1, t0, vt0 WHERE (vt1.c0) UNION SELECT DISTINCT t0.c46, vt0.c0, vt0.c2, vt1.c0, t0.c50 FROM vt1, t0, vt0 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT t0.c46, vt0.c0, vt0.c2, vt1.c0, t0.c50 FROM vt1, t0, vt0 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT t0.c46, vt0.c0, vt0.c2, vt1.c0, t0.c50 FROM vt1, t0, vt0;
SELECT vt0.c2, vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c2, vt0.c0, t0.c0;
SELECT vt0.c2, vt0.c0, t0.c0 FROM vt0, t0 WHERE ((+ (((t0.c0)IS(vt0.c0))))) GROUP BY vt0.c2, vt0.c0, t0.c0 UNION SELECT ALL vt0.c2, vt0.c0, t0.c0 FROM vt0, t0 WHERE ((NOT ((+ (((t0.c0)IS(vt0.c0))))))) GROUP BY vt0.c2, vt0.c0, t0.c0 UNION SELECT vt0.c2, vt0.c0, t0.c0 FROM vt0, t0 WHERE ((((+ (((t0.c0)IS(vt0.c0))))) ISNULL)) GROUP BY vt0.c2, vt0.c0, t0.c0;
SELECT vt0.c2, vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c2, vt0.c0, t0.c0;
SELECT vt0.c2, vt0.c1, t0.c0 FROM t0, vt1, vt0 GROUP BY vt0.c2, vt0.c1, t0.c0;
SELECT vt0.c2, vt0.c1, t0.c0 FROM t0, vt1, vt0 GROUP BY vt0.c2, vt0.c1, t0.c0 HAVING GROUP_CONCAT(((AVG(t0.c46)) BETWEEN (t0.c50) AND (NULL))) UNION ALL SELECT ALL vt0.c2, vt0.c1, t0.c0 FROM t0, vt1, vt0 GROUP BY vt0.c2, vt0.c1, t0.c0 HAVING (NOT (GROUP_CONCAT(((AVG(t0.c46)) BETWEEN (t0.c50) AND (NULL))))) UNION ALL SELECT vt0.c2, vt0.c1, t0.c0 FROM t0, vt1, vt0 GROUP BY vt0.c2, vt0.c1, t0.c0 HAVING ((GROUP_CONCAT(((AVG(t0.c46)) BETWEEN (t0.c50) AND (NULL)))) ISNULL);
SELECT MAX(((((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c0)))IS(CAST(vt1.c0 AS TEXT)))) FROM vt1;
SELECT ALL * FROM vt1, vt0, t0;
SELECT ALL * FROM vt1, vt0, t0 WHERE (LOWER(DISTINCT x'7c59')) UNION ALL SELECT * FROM vt1, vt0, t0 WHERE ((NOT (LOWER(DISTINCT x'7c59')))) UNION ALL SELECT ALL * FROM vt1, vt0, t0 WHERE (((LOWER(DISTINCT x'7c59')) ISNULL));
SELECT ALL * FROM vt1, vt0, t0;
SELECT DISTINCT vt0.c1 FROM t0, vt0 NATURAL JOIN vt1;
SELECT DISTINCT vt0.c1 FROM t0, vt0 NATURAL JOIN vt1 WHERE ((((vt0.c2, vt1.c0, vt0.c2)) BETWEEN ((CASE vt1.c0  WHEN vt1.c0 THEN t0.c50 END, CAST(vt0.c0 AS TEXT), NULL)) AND ((((vt0.c1) IS FALSE), CASE WHEN t0.c0 THEN t0.c0 ELSE vt0.c2 END, vt1.c0 COLLATE RTRIM)))) UNION SELECT DISTINCT vt0.c1 FROM t0, vt0 NATURAL JOIN vt1 WHERE ((NOT ((((vt0.c2, vt1.c0, vt0.c2)) BETWEEN ((CASE vt1.c0  WHEN vt1.c0 THEN t0.c50 END, CAST(vt0.c0 AS TEXT), NULL)) AND ((((vt0.c1) IS FALSE), CASE WHEN t0.c0 THEN t0.c0 ELSE vt0.c2 END, vt1.c0 COLLATE RTRIM)))))) UNION SELECT DISTINCT vt0.c1 FROM t0, vt0 NATURAL JOIN vt1 WHERE ((((((vt0.c2, vt1.c0, vt0.c2)) BETWEEN ((CASE vt1.c0  WHEN vt1.c0 THEN t0.c50 END, CAST(vt0.c0 AS TEXT), NULL)) AND ((((vt0.c1) IS FALSE), CASE WHEN t0.c0 THEN t0.c0 ELSE vt0.c2 END, vt1.c0 COLLATE RTRIM)))) ISNULL));
SELECT DISTINCT vt0.c1 FROM t0, vt0 NATURAL JOIN vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (UNLIKELY((((vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, vt1.c0))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (UNLIKELY((((vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((UNLIKELY((((vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT t0.c46, t0.c50, vt1.c0, t0.c0 FROM t0, vt1 GROUP BY t0.c46, t0.c50, vt1.c0, t0.c0;
SELECT ALL t0.c46, t0.c50, vt1.c0, t0.c0 FROM t0, vt1 GROUP BY t0.c46, t0.c50, vt1.c0, t0.c0 HAVING x'' UNION ALL SELECT ALL t0.c46, t0.c50, vt1.c0, t0.c0 FROM t0, vt1 GROUP BY t0.c46, t0.c50, vt1.c0, t0.c0 HAVING (NOT (x'')) UNION ALL SELECT t0.c46, t0.c50, vt1.c0, t0.c0 FROM t0, vt1 GROUP BY t0.c46, t0.c50, vt1.c0, t0.c0 HAVING ((x'') ISNULL);
SELECT t0.c46, t0.c50, vt1.c0, t0.c0 FROM t0, vt1 GROUP BY t0.c46, t0.c50, vt1.c0, t0.c0;
SELECT ALL t0.c46, t0.c50, vt1.c0, t0.c0 FROM t0, vt1 GROUP BY t0.c46, t0.c50, vt1.c0, t0.c0 HAVING x'' UNION ALL SELECT ALL t0.c46, t0.c50, vt1.c0, t0.c0 FROM t0, vt1 GROUP BY t0.c46, t0.c50, vt1.c0, t0.c0 HAVING (NOT (x'')) UNION ALL SELECT t0.c46, t0.c50, vt1.c0, t0.c0 FROM t0, vt1 GROUP BY t0.c46, t0.c50, vt1.c0, t0.c0 HAVING ((x'') ISNULL);
SELECT t0.c46, t0.c50, vt1.c0, t0.c0 FROM t0, vt1 GROUP BY t0.c46, t0.c50, vt1.c0, t0.c0;
SELECT ALL * FROM t0, vt1, vt0;
SELECT * FROM t0, vt1, vt0 WHERE (((vt1.c0) IS FALSE)) UNION ALL SELECT * FROM t0, vt1, vt0 WHERE ((NOT (((vt1.c0) IS FALSE)))) UNION ALL SELECT * FROM t0, vt1, vt0 WHERE (((((vt1.c0) IS FALSE)) ISNULL));
SELECT ALL * FROM t0, vt1, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((x'd605')) AND ((x''))))==(vt0.c1 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((((vt0.c0)) NOT BETWEEN ((x'd605')) AND ((x''))))=(vt0.c1 COLLATE NOCASE))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((((vt0.c0)) NOT BETWEEN ((x'd605')) AND ((x''))))=(vt0.c1 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c1, vt0.c2 FROM vt0 INDEXED BY i46 GROUP BY vt0.c1, vt0.c2;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING ((((((((MIN(MIN(vt0.c0)))AND((((COUNT(*)))<>((SUM(vt0.c1)))))))OR(TOTAL(vt0.c1))))AND(COUNT(vt0.c1))))OR((vt0.c1 IN (vt0.c0)))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING (NOT (((((((((MIN(MIN(vt0.c0)))AND((((COUNT(*)))<>((SUM(vt0.c1)))))))OR(TOTAL(vt0.c1))))AND(COUNT(vt0.c1))))OR((vt0.c1 IN (vt0.c0)))))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING ((((((((((MIN(MIN(vt0.c0)))AND((((COUNT(*)))!=((SUM(vt0.c1)))))))OR(TOTAL(vt0.c1))))AND(COUNT(vt0.c1))))OR((vt0.c1 IN (vt0.c0))))) ISNULL);
SELECT ALL * FROM vt0, t0;
SELECT * FROM vt0, t0 WHERE (NULL) UNION ALL SELECT * FROM vt0, t0 WHERE ((NOT (NULL))) UNION ALL SELECT ALL * FROM vt0, t0 WHERE (((NULL) ISNULL));
SELECT ALL * FROM vt0, t0;
SELECT DISTINCT * FROM vt1 CROSS JOIN t0 ON (CASE WHEN vt0.c1 THEN vt0.c2 END IN ()) CROSS JOIN vt0 ON CAST(json_valid(vt1.c0) AS BLOB);
SELECT DISTINCT * FROM vt1 CROSS JOIN t0 ON (CASE WHEN vt0.c1 THEN vt0.c2 END IN ()) CROSS JOIN vt0 ON CAST(json_valid(vt1.c0) AS BLOB) WHERE (5.1901018E8) UNION SELECT DISTINCT * FROM vt1 CROSS JOIN t0 ON (CASE WHEN vt0.c1 THEN vt0.c2 END IN ()) CROSS JOIN vt0 ON CAST(json_valid(vt1.c0) AS BLOB) WHERE ((NOT (5.1901018E8))) UNION SELECT DISTINCT * FROM vt1 CROSS JOIN t0 ON (CASE WHEN vt0.c1 THEN vt0.c2 END IN ()) CROSS JOIN vt0 ON CAST(json_valid(vt1.c0) AS BLOB) WHERE (((5.1901018E8) ISNULL));
SELECT DISTINCT * FROM vt1 CROSS JOIN t0 ON (CASE WHEN vt0.c1 THEN vt0.c2 END IN ()) CROSS JOIN vt0 ON CAST(json_valid(vt1.c0) AS BLOB);
SELECT t0.c0, t0.c50, vt0.c2, vt0.c0, t0.c46, vt1.c0, vt0.c1 FROM t0, vt1, vt0 GROUP BY t0.c0, t0.c50, vt0.c2, vt0.c0, t0.c46, vt1.c0, vt0.c1;
SELECT ALL t0.c0, t0.c50, vt0.c2, vt0.c0, t0.c46, vt1.c0, vt0.c1 FROM t0, vt1, vt0 WHERE (CASE ((vt0.c0)*(t0.c46))  WHEN ((vt0.c2) NOT NULL) THEN ((vt0.c0)<(vt0.c2)) WHEN ((vt1.c0) IS TRUE) THEN CAST(t0.c46 AS INTEGER) WHEN (vt0.c0 IN (vt0.c2)) THEN CAST(t0.c50 AS NUMERIC) ELSE CAST(t0.c46 AS INTEGER) END) GROUP BY t0.c0, t0.c50, vt0.c2, vt0.c0, t0.c46, vt1.c0, vt0.c1 UNION SELECT ALL t0.c0, t0.c50, vt0.c2, vt0.c0, t0.c46, vt1.c0, vt0.c1 FROM t0, vt1, vt0 WHERE ((NOT (CASE ((vt0.c0)*(t0.c46))  WHEN ((vt0.c2) NOT NULL) THEN ((vt0.c0)<(vt0.c2)) WHEN ((vt1.c0) IS TRUE) THEN CAST(t0.c46 AS INTEGER) WHEN (vt0.c0 IN (vt0.c2)) THEN CAST(t0.c50 AS NUMERIC) ELSE CAST(t0.c46 AS INTEGER) END))) GROUP BY t0.c0, t0.c50, vt0.c2, vt0.c0, t0.c46, vt1.c0, vt0.c1 UNION SELECT ALL t0.c0, t0.c50, vt0.c2, vt0.c0, t0.c46, vt1.c0, vt0.c1 FROM t0, vt1, vt0 WHERE (((CASE ((vt0.c0)*(t0.c46))  WHEN ((vt0.c2) NOT NULL) THEN ((vt0.c0)<(vt0.c2)) WHEN ((vt1.c0) IS TRUE) THEN CAST(t0.c46 AS INTEGER) WHEN (vt0.c0 IN (vt0.c2)) THEN CAST(t0.c50 AS NUMERIC) ELSE CAST(t0.c46 AS INTEGER) END) ISNULL)) GROUP BY t0.c0, t0.c50, vt0.c2, vt0.c0, t0.c46, vt1.c0, vt0.c1;
SELECT t0.c0, t0.c50, vt0.c2, vt0.c0, t0.c46, vt1.c0, vt0.c1 FROM t0, vt1, vt0 GROUP BY t0.c0, t0.c50, vt0.c2, vt0.c0, t0.c46, vt1.c0, vt0.c1;
SELECT ALL t0.c46, vt0.c2, vt0.c1, t0.c0, vt0.c0 FROM vt0, t0, vt1 GROUP BY t0.c46, vt0.c2, vt0.c1, t0.c0, vt0.c0;
SELECT t0.c46, vt0.c2, vt0.c1, t0.c0, vt0.c0 FROM vt0, t0, vt1 GROUP BY t0.c46, vt0.c2, vt0.c1, t0.c0, vt0.c0 HAVING json_valid((- (COUNT(vt0.c1)))) UNION ALL SELECT ALL t0.c46, vt0.c2, vt0.c1, t0.c0, vt0.c0 FROM vt0, t0, vt1 GROUP BY t0.c46, vt0.c2, vt0.c1, t0.c0, vt0.c0 HAVING (NOT (json_valid((- (COUNT(vt0.c1)))))) UNION ALL SELECT ALL t0.c46, vt0.c2, vt0.c1, t0.c0, vt0.c0 FROM vt0, t0, vt1 GROUP BY t0.c46, vt0.c2, vt0.c1, t0.c0, vt0.c0 HAVING ((json_valid((- (COUNT(vt0.c1))))) ISNULL);
SELECT ALL t0.c46, vt0.c2, vt0.c1, t0.c0, vt0.c0 FROM vt0, t0, vt1 GROUP BY t0.c46, vt0.c2, vt0.c1, t0.c0, vt0.c0;
SELECT t0.c46, vt0.c2, vt0.c1, t0.c0, vt0.c0 FROM vt0, t0, vt1 GROUP BY t0.c46, vt0.c2, vt0.c1, t0.c0, vt0.c0 HAVING json_valid((- (COUNT(vt0.c1)))) UNION ALL SELECT ALL t0.c46, vt0.c2, vt0.c1, t0.c0, vt0.c0 FROM vt0, t0, vt1 GROUP BY t0.c46, vt0.c2, vt0.c1, t0.c0, vt0.c0 HAVING (NOT (json_valid((- (COUNT(vt0.c1)))))) UNION ALL SELECT ALL t0.c46, vt0.c2, vt0.c1, t0.c0, vt0.c0 FROM vt0, t0, vt1 GROUP BY t0.c46, vt0.c2, vt0.c1, t0.c0, vt0.c0 HAVING ((json_valid((- (COUNT(vt0.c1))))) ISNULL);
SELECT ALL t0.c46, vt0.c2, vt0.c1, t0.c0, vt0.c0 FROM vt0, t0, vt1 GROUP BY t0.c46, vt0.c2, vt0.c1, t0.c0, vt0.c0;
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE (CASE WHEN vt1.c0 COLLATE BINARY THEN ((x'') IS FALSE) WHEN ((vt1.c0)+(vt1.c0)) THEN vt1.c0 COLLATE NOCASE WHEN (vt1.c0 IN (vt1.c0)) THEN (0.11342441579629747 IN ()) ELSE (((vt1.c0))<((NULL))) END) UNION ALL SELECT * FROM vt1 WHERE ((NOT (CASE WHEN vt1.c0 COLLATE BINARY THEN ((x'') IS FALSE) WHEN ((vt1.c0)+(vt1.c0)) THEN vt1.c0 COLLATE NOCASE WHEN (vt1.c0 IN (vt1.c0)) THEN (0.11342441579629747 IN ()) ELSE (((vt1.c0))<((NULL))) END))) UNION ALL SELECT * FROM vt1 WHERE (((CASE WHEN vt1.c0 COLLATE BINARY THEN ((x'') IS FALSE) WHEN ((vt1.c0)+(vt1.c0)) THEN vt1.c0 COLLATE NOCASE WHEN (vt1.c0 IN (vt1.c0)) THEN (0.11342441579629747 IN ()) ELSE (((vt1.c0))<((NULL))) END) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM vt1, t0, vt0;
SELECT DISTINCT * FROM vt1, t0, vt0 WHERE (((((t0.c46)>>(vt0.c2)))<=(t0.c46 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt1, t0, vt0 WHERE ((NOT (((((t0.c46)>>(vt0.c2)))<=(t0.c46 COLLATE NOCASE))))) UNION SELECT DISTINCT * FROM vt1, t0, vt0 WHERE (((((((t0.c46)>>(vt0.c2)))<=(t0.c46 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT * FROM vt1, t0, vt0;
SELECT vt1.c0, t0.c46, t0.c50 FROM vt1, t0 GROUP BY vt1.c0, t0.c46, t0.c50;
SELECT ALL vt1.c0, t0.c46, t0.c50 FROM vt1, t0 WHERE (((((TIME(t0.c46, vt1.c0, t0.c0))OR(((0.3314182727109194)||(t0.c50)))))OR(t0.c46 COLLATE RTRIM))) GROUP BY vt1.c0, t0.c46, t0.c50 UNION SELECT ALL vt1.c0, t0.c46, t0.c50 FROM vt1, t0 WHERE ((NOT (((((TIME(t0.c46, vt1.c0, t0.c0))OR(((0.3314182727109194)||(t0.c50)))))OR(t0.c46 COLLATE RTRIM))))) GROUP BY vt1.c0, t0.c46, t0.c50 UNION SELECT vt1.c0, t0.c46, t0.c50 FROM vt1, t0 WHERE (((((((TIME(t0.c46, vt1.c0, t0.c0))OR(((0.3314182727109194)||(t0.c50)))))OR(t0.c46 COLLATE RTRIM))) ISNULL)) GROUP BY vt1.c0, t0.c46, t0.c50;
SELECT vt1.c0, t0.c46, t0.c50 FROM vt1, t0 GROUP BY vt1.c0, t0.c46, t0.c50;
SELECT ALL vt1.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1;
SELECT ALL vt1.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1 HAVING MAX(MAX(MAX(COUNT(*)))) UNION ALL SELECT vt1.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1 HAVING (NOT (MAX(MAX(MAX(COUNT(*)))))) UNION ALL SELECT vt1.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1 HAVING ((MAX(MAX(MAX(COUNT(*))))) ISNULL);
SELECT ALL t0.c0, t0.c50 FROM t0;
SELECT ALL t0.c0, t0.c50 FROM t0 WHERE (CASE t0.c50  WHEN (t0.c50 IN ()) THEN ((t0.c46) IS FALSE) END) UNION ALL SELECT ALL t0.c0, t0.c50 FROM t0 WHERE ((NOT (CASE t0.c50  WHEN (t0.c50 IN ()) THEN ((t0.c46) IS FALSE) END))) UNION ALL SELECT ALL t0.c0, t0.c50 FROM t0 WHERE (((CASE t0.c50  WHEN (t0.c50 IN ()) THEN ((t0.c46) IS FALSE) END) ISNULL));
SELECT ALL t0.c0, t0.c50 FROM t0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((CAST(vt1.c0 AS REAL) IN (CAST(vt1.c0 AS BLOB)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((CAST(vt1.c0 AS REAL) IN (CAST(vt1.c0 AS BLOB)))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((CAST(vt1.c0 AS REAL) IN (CAST(vt1.c0 AS BLOB)))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL t0.c46, t0.c0 FROM t0 GROUP BY t0.c46, t0.c0;
SELECT ALL t0.c46, t0.c0 FROM t0 WHERE (t0.c50) GROUP BY t0.c46, t0.c0 UNION SELECT t0.c46, t0.c0 FROM t0 WHERE ((NOT (t0.c50))) GROUP BY t0.c46, t0.c0 UNION SELECT t0.c46, t0.c0 FROM t0 WHERE (((t0.c50) ISNULL)) GROUP BY t0.c46, t0.c0;
SELECT ALL t0.c46, t0.c0 FROM t0 GROUP BY t0.c46, t0.c0;
SELECT ALL t0.c0, vt0.c1 FROM vt1, t0, vt0 GROUP BY t0.c0, vt0.c1;
SELECT t0.c0, vt0.c1 FROM vt1, t0 NOT INDEXED, vt0 GROUP BY t0.c0, vt0.c1 HAVING json_insert(SUM(vt1.c0), (vt1.c0 IN ()), (NOT (MAX(0.041953394363420715)))) UNION ALL SELECT t0.c0, vt0.c1 FROM vt1, t0, vt0 GROUP BY t0.c0, vt0.c1 HAVING (NOT (json_insert(SUM(vt1.c0), (vt1.c0 IN ()), (NOT (MAX(0.041953394363420715)))))) UNION ALL SELECT t0.c0, vt0.c1 FROM vt1, t0, vt0 GROUP BY t0.c0, vt0.c1 HAVING ((json_insert(SUM(vt1.c0), (vt1.c0 IN ()), (NOT (MAX(0.041953394363420715))))) ISNULL);
SELECT t0.c50, vt0.c1, vt0.c2, vt1.c0 FROM vt1, vt0, t0;
SELECT t0.c50, vt0.c1, vt0.c2, vt1.c0 FROM vt1, vt0, t0 WHERE (((((vt0.c1) NOTNULL))AND(((vt1.c0) NOT BETWEEN (x'') AND ('832825085'))))) UNION ALL SELECT ALL t0.c50, vt0.c1, vt0.c2, vt1.c0 FROM vt1, vt0, t0 WHERE ((NOT (((((vt0.c1) NOTNULL))AND(((vt1.c0) NOT BETWEEN (x'') AND ('832825085'))))))) UNION ALL SELECT ALL t0.c50, vt0.c1, vt0.c2, vt1.c0 FROM vt1, vt0, t0 WHERE (((((((vt0.c1) NOTNULL))AND(((vt1.c0) NOT BETWEEN (x'') AND ('832825085'))))) ISNULL));
SELECT t0.c50, vt0.c1, vt0.c2, vt1.c0 FROM vt1, vt0, t0;
SELECT DISTINCT t0.c50, vt0.c2, t0.c46, vt0.c1, vt1.c0, t0.c0 FROM t0, vt1, vt0;
SELECT DISTINCT t0.c50, vt0.c2, t0.c46, vt0.c1, vt1.c0, t0.c0 FROM t0, vt1, vt0 WHERE ((~ (x''))) UNION SELECT DISTINCT t0.c50, vt0.c2, t0.c46, vt0.c1, vt1.c0, t0.c0 FROM t0, vt1, vt0 WHERE ((NOT ((~ (x''))))) UNION SELECT DISTINCT t0.c50, vt0.c2, t0.c46, vt0.c1, vt1.c0, t0.c0 FROM t0, vt1 NOT INDEXED, vt0 WHERE ((((~ (x''))) ISNULL));
SELECT DISTINCT t0.c50, vt0.c2, t0.c46, vt0.c1, vt1.c0, t0.c0 FROM t0, vt1, vt0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((CASE WHEN t0.c50 THEN t0.c0 WHEN t0.c50 THEN t0.c46 WHEN t0.c50 THEN t0.c50 ELSE t0.c50 END) NOT BETWEEN (((t0.c50) NOT BETWEEN (t0.c46) AND (NULL))) AND (CAST(t0.c46 AS REAL)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((CASE WHEN t0.c50 THEN t0.c0 WHEN t0.c50 THEN t0.c46 WHEN t0.c50 THEN t0.c50 ELSE t0.c50 END) NOT BETWEEN (((t0.c50) NOT BETWEEN (t0.c46) AND (NULL))) AND (CAST(t0.c46 AS REAL)))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((CASE WHEN t0.c50 THEN t0.c0 WHEN t0.c50 THEN t0.c46 WHEN t0.c50 THEN t0.c50 ELSE t0.c50 END) NOT BETWEEN (((t0.c50) NOT BETWEEN (t0.c46) AND (NULL))) AND (CAST(t0.c46 AS REAL)))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c46, t0.c0, vt0.c0, vt0.c2, t0.c50 FROM vt0, vt1, t0 GROUP BY t0.c46, t0.c0, vt0.c0, vt0.c2, t0.c50;
SELECT ALL t0.c46, t0.c0, vt0.c0, vt0.c2, t0.c50 FROM vt0, vt1, t0 GROUP BY t0.c46, t0.c0, vt0.c0, vt0.c2, t0.c50 HAVING (((GROUP_CONCAT(t0.c0))) BETWEEN ((AVG(t0.c0))) AND ((GROUP_CONCAT(MAX(vt0.c0))))) UNION ALL SELECT ALL t0.c46, t0.c0, vt0.c0, vt0.c2, t0.c50 FROM vt0, vt1, t0 NOT INDEXED GROUP BY t0.c46, t0.c0, vt0.c0, vt0.c2, t0.c50 HAVING (NOT ((((GROUP_CONCAT(t0.c0))) BETWEEN ((AVG(t0.c0))) AND ((GROUP_CONCAT(MAX(vt0.c0))))))) UNION ALL SELECT t0.c46, t0.c0, vt0.c0, vt0.c2, t0.c50 FROM vt0, vt1, t0 GROUP BY t0.c46, t0.c0, vt0.c0, vt0.c2, t0.c50 HAVING (((((GROUP_CONCAT(t0.c0))) BETWEEN ((AVG(t0.c0))) AND ((GROUP_CONCAT(MAX(vt0.c0)))))) ISNULL);
SELECT vt0.c2, t0.c0 FROM t0, vt1, vt0;
SELECT vt0.c2, t0.c0 FROM t0, vt1, vt0 WHERE ((((((vt0.c1))>=((vt1.c0))))=((~ (vt0.c2))))) UNION ALL SELECT ALL vt0.c2, t0.c0 FROM t0, vt1, vt0 WHERE ((NOT ((((((vt0.c1))>=((vt1.c0))))==((~ (vt0.c2))))))) UNION ALL SELECT ALL vt0.c2, t0.c0 FROM t0, vt1 NOT INDEXED, vt0 WHERE ((((((((vt0.c1))>=((vt1.c0))))=((~ (vt0.c2))))) ISNULL));
SELECT vt0.c2, t0.c0 FROM t0, vt1, vt0;
SELECT DISTINCT * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0 WHERE ((- (((vt0.c1) IS TRUE)))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((NOT ((- (((vt0.c1) IS TRUE)))))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((((- (((vt0.c1) IS TRUE)))) ISNULL));
SELECT DISTINCT * FROM t0, vt0;
SELECT ALL vt0.c0, t0.c0, vt0.c2, t0.c50, vt1.c0, vt0.c1 FROM vt1, t0, vt0 GROUP BY vt0.c0, t0.c0, vt0.c2, t0.c50, vt1.c0, vt0.c1;
SELECT vt0.c0, t0.c0, vt0.c2, t0.c50, vt1.c0, vt0.c1 FROM vt1, t0, vt0 WHERE (rtreenode(vt0.c0, t0.c46) COLLATE NOCASE) GROUP BY vt0.c0, t0.c0, vt0.c2, t0.c50, vt1.c0, vt0.c1 UNION SELECT ALL vt0.c0, t0.c0, vt0.c2, t0.c50, vt1.c0, vt0.c1 FROM vt1, t0, vt0 WHERE ((NOT (rtreenode(vt0.c0, t0.c46) COLLATE NOCASE))) GROUP BY vt0.c0, t0.c0, vt0.c2, t0.c50, vt1.c0, vt0.c1 UNION SELECT ALL vt0.c0, t0.c0, vt0.c2, t0.c50, vt1.c0, vt0.c1 FROM vt1, t0, vt0 WHERE (((rtreenode(vt0.c0, t0.c46) COLLATE NOCASE) ISNULL)) GROUP BY vt0.c0, t0.c0, vt0.c2, t0.c50, vt1.c0, vt0.c1;
SELECT ALL vt0.c0, t0.c0, vt0.c2, t0.c50, vt1.c0, vt0.c1 FROM vt1, t0, vt0 GROUP BY vt0.c0, t0.c0, vt0.c2, t0.c50, vt1.c0, vt0.c1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL TOTAL(CASE WHEN ((vt0.c2) BETWEEN (vt0.c2) AND (t0.c50)) THEN vt0.c2 END) FROM t0, vt1, vt0 ORDER BY ((vt0.c0 COLLATE BINARY)<<(((t0.c46) NOT BETWEEN (t0.c0) AND (vt1.c0)))) DESC  NULLS FIRST, (((vt0.c2 IN ())) BETWEEN ((vt0.c2 IN ())) AND (((vt0.c2) NOT BETWEEN (vt1.c0) AND (vt0.c0)))) DESC, vt0.c0 ASC  NULLS LAST;
SELECT * FROM t0, vt0;
SELECT * FROM t0, vt0 WHERE ((~ (UPPER(DISTINCT t0.c46)))) UNION ALL SELECT * FROM t0, vt0 WHERE ((NOT ((~ (UPPER(DISTINCT t0.c46)))))) UNION ALL SELECT ALL * FROM t0, vt0 WHERE ((((~ (UPPER(DISTINCT t0.c46)))) ISNULL));
SELECT * FROM t0, vt0;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE (((((vt0.c2)IS NOT(vt1.c0)))AND(((((vt0.c1)OR(vt0.c0)))AND(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (((((vt0.c2)IS NOT(vt1.c0)))AND(((((vt0.c1)OR(vt0.c0)))AND(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE (((((((vt0.c2)IS NOT(vt1.c0)))AND(((((vt0.c1)OR(vt0.c0)))AND(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT vt0.c1, vt0.c0, t0.c50 FROM t0, vt0, vt1 GROUP BY vt0.c1, vt0.c0, t0.c50;
SELECT vt0.c1, vt0.c0, t0.c50 FROM t0, vt0, vt1 WHERE (IFNULL(COALESCE(DISTINCT vt1.c0, vt1.c0), ((vt1.c0) NOT BETWEEN (t0.c50) AND (t0.c0)))) GROUP BY vt0.c1, vt0.c0, t0.c50 UNION SELECT vt0.c1, vt0.c0, t0.c50 FROM t0, vt0, vt1 WHERE ((NOT (IFNULL(COALESCE(DISTINCT vt1.c0, vt1.c0), ((vt1.c0) NOT BETWEEN (t0.c50) AND (t0.c0)))))) GROUP BY vt0.c1, vt0.c0, t0.c50 UNION SELECT vt0.c1, vt0.c0, t0.c50 FROM t0 NOT INDEXED, vt0, vt1 WHERE (((IFNULL(COALESCE(DISTINCT vt1.c0, vt1.c0), ((vt1.c0) NOT BETWEEN (t0.c50) AND (t0.c0)))) ISNULL)) GROUP BY vt0.c1, vt0.c0, t0.c50;
SELECT vt0.c1, vt0.c0, t0.c50 FROM t0, vt0, vt1 GROUP BY vt0.c1, vt0.c0, t0.c50;
SELECT t0.c50 FROM t0, vt0 GROUP BY t0.c50;
SELECT t0.c50 FROM t0, vt0 GROUP BY t0.c50 HAVING CAST(SUM(MAX(MAX(t0.c50))) AS REAL) UNION ALL SELECT ALL t0.c50 FROM t0, vt0 GROUP BY t0.c50 HAVING (NOT (CAST(SUM(MAX(MAX(t0.c50))) AS REAL))) UNION ALL SELECT t0.c50 FROM t0, vt0 GROUP BY t0.c50 HAVING ((CAST(SUM(MAX(MAX(t0.c50))) AS REAL)) ISNULL);
SELECT vt1.c0, t0.c50, t0.c0 FROM vt0, vt1, t0;
SELECT ALL vt1.c0, t0.c50, t0.c0 FROM vt0, vt1, t0 WHERE (((STRFTIME(0.13518896871433395, vt0.c1, vt0.c0))+(x''))) UNION ALL SELECT vt1.c0, t0.c50, t0.c0 FROM vt0, vt1, t0 WHERE ((NOT (((STRFTIME(0.13518896871433395, vt0.c1, vt0.c0))+(x''))))) UNION ALL SELECT ALL vt1.c0, t0.c50, t0.c0 FROM vt0, vt1, t0 WHERE (((((STRFTIME(0.13518896871433395, vt0.c1, vt0.c0))+(x''))) ISNULL));
SELECT vt1.c0, t0.c50, t0.c0 FROM vt0, vt1, t0;
SELECT DISTINCT * FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0 WHERE ((((vt0.c1)) BETWEEN ((NULL)) AND ((((t0.c50) IS TRUE))))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((NOT ((((vt0.c1)) BETWEEN ((NULL)) AND ((((t0.c50) IS TRUE))))))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((((((vt0.c1)) BETWEEN ((NULL)) AND ((((t0.c50) IS TRUE))))) ISNULL));
SELECT DISTINCT * FROM vt0, t0;
SELECT t0.c46, vt0.c2, t0.c50, vt0.c0, t0.c0, vt1.c0 FROM vt1, t0, vt0 GROUP BY t0.c46, vt0.c2, t0.c50, vt0.c0, t0.c0, vt1.c0;
SELECT t0.c46, vt0.c2, t0.c50, vt0.c0, t0.c0, vt1.c0 FROM vt1, t0, vt0 WHERE ((((- (vt0.c1))) ISNULL)) GROUP BY t0.c46, vt0.c2, t0.c50, vt0.c0, t0.c0, vt1.c0 UNION SELECT t0.c46, vt0.c2, t0.c50, vt0.c0, t0.c0, vt1.c0 FROM vt1, t0, vt0 WHERE ((NOT ((((- (vt0.c1))) ISNULL)))) GROUP BY t0.c46, vt0.c2, t0.c50, vt0.c0, t0.c0, vt1.c0 UNION SELECT ALL t0.c46, vt0.c2, t0.c50, vt0.c0, t0.c0, vt1.c0 FROM vt1, t0, vt0 WHERE ((((((- (vt0.c1))) ISNULL)) ISNULL)) GROUP BY t0.c46, vt0.c2, t0.c50, vt0.c0, t0.c0, vt1.c0;
SELECT t0.c46, vt0.c2, t0.c50, vt0.c0, t0.c0, vt1.c0 FROM vt1, t0, vt0 GROUP BY t0.c46, vt0.c2, t0.c50, vt0.c0, t0.c0, vt1.c0;
SELECT vt0.c2, t0.c0, vt1.c0, t0.c50, vt0.c1 FROM vt1, vt0, t0 GROUP BY vt0.c2, t0.c0, vt1.c0, t0.c50, vt0.c1;
SELECT vt0.c2, t0.c0, vt1.c0, t0.c50, vt0.c1 FROM vt1, vt0, t0 GROUP BY vt0.c2, t0.c0, vt1.c0, t0.c50, vt0.c1 HAVING AVG(MAX(GROUP_CONCAT(SUM(MIN(t0.c46))))) UNION ALL SELECT vt0.c2, t0.c0, vt1.c0, t0.c50, vt0.c1 FROM vt1, vt0, t0 GROUP BY vt0.c2, t0.c0, vt1.c0, t0.c50, vt0.c1 HAVING (NOT (AVG(MAX(GROUP_CONCAT(SUM(MIN(t0.c46))))))) UNION ALL SELECT vt0.c2, t0.c0, vt1.c0, t0.c50, vt0.c1 FROM vt1, vt0, t0 GROUP BY vt0.c2, t0.c0, vt1.c0, t0.c50, vt0.c1 HAVING ((AVG(MAX(GROUP_CONCAT(SUM(MIN(t0.c46)))))) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt0;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c2)))OR(((vt0.c1)!=(vt0.c1)))))OR(TRIM(vt0.c0)))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c2)))OR(((vt0.c1)!=(vt0.c1)))))OR(TRIM(vt0.c0)))))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (((((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c2)))OR(((vt0.c1)!=(vt0.c1)))))OR(TRIM(vt0.c0)))) ISNULL));
SELECT ALL vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN t0 ON CASE WHEN ((t0.c50) IS TRUE) THEN ((0X5f3f0bb7) NOTNULL) WHEN ((((((((vt0.c1)AND(t0.c46)))OR(vt1.c0)))AND(vt0.c0)))OR(t0.c50)) THEN CAST(t0.c46 AS REAL) WHEN ((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c2)) THEN ((t0.c46)<=(vt0.c0)) END RIGHT OUTER JOIN vt1 ON NULL;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS INTEGER)) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS INTEGER)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS INTEGER)) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT t0.c50, t0.c46 FROM t0, vt1, vt0 GROUP BY t0.c50, t0.c46;
SELECT ALL t0.c50, t0.c46 FROM t0, vt1, vt0 GROUP BY t0.c50, t0.c46 HAVING MIN(COUNT(*)) UNION ALL SELECT t0.c50, t0.c46 FROM t0, vt1, vt0 GROUP BY t0.c50, t0.c46 HAVING (NOT (MIN(COUNT(*)))) UNION ALL SELECT ALL t0.c50, t0.c46 FROM t0, vt1, vt0 GROUP BY t0.c50, t0.c46 HAVING ((MIN(COUNT(*))) ISNULL);
SELECT t0.c0, vt1.c0 FROM t0, vt1, vt0;
SELECT t0.c0, vt1.c0 FROM t0, vt1, vt0 WHERE (((CASE vt0.c0  WHEN vt0.c2 THEN vt0.c1 END) NOTNULL)) UNION ALL SELECT ALL t0.c0, vt1.c0 FROM t0, vt1, vt0 WHERE ((NOT (((CASE vt0.c0  WHEN vt0.c2 THEN vt0.c1 END) NOTNULL)))) UNION ALL SELECT ALL t0.c0, vt1.c0 FROM t0, vt1, vt0 WHERE (((((CASE vt0.c0  WHEN vt0.c2 THEN vt0.c1 END) NOTNULL)) ISNULL));
SELECT t0.c0, vt1.c0 FROM t0, vt1, vt0;
SELECT DISTINCT vt0.c0, vt0.c2, vt0.c1, vt1.c0 FROM vt0, vt1;
SELECT DISTINCT vt0.c0, vt0.c2, vt0.c1, vt1.c0 FROM vt0, vt1 WHERE (vt0.c2) UNION SELECT DISTINCT vt0.c0, vt0.c2, vt0.c1, vt1.c0 FROM vt0, vt1 WHERE ((NOT (vt0.c2))) UNION SELECT DISTINCT vt0.c0, vt0.c2, vt0.c1, vt1.c0 FROM vt0, vt1 WHERE (((vt0.c2) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c2, vt0.c1, vt1.c0 FROM vt0, vt1;
SELECT vt0.c0, t0.c50, vt1.c0 FROM vt1, vt0 RIGHT OUTER JOIN t0 ON ((t0.c46 COLLATE RTRIM) NOTNULL) GROUP BY vt0.c0, t0.c50, vt1.c0;
SELECT ALL vt0.c0, t0.c50, vt1.c0 FROM vt1, vt0 RIGHT OUTER JOIN t0 ON ((t0.c46 COLLATE RTRIM) NOTNULL) WHERE (CAST(((0.3705311691739962) NOT BETWEEN (vt0.c1) AND (vt0.c2)) AS INTEGER)) GROUP BY vt0.c0, t0.c50, vt1.c0 UNION SELECT vt0.c0, t0.c50, vt1.c0 FROM vt1, vt0 RIGHT OUTER JOIN t0 ON ((t0.c46 COLLATE RTRIM) NOTNULL) WHERE ((NOT (CAST(((0.3705311691739962) NOT BETWEEN (vt0.c1) AND (vt0.c2)) AS INTEGER)))) GROUP BY vt0.c0, t0.c50, vt1.c0 UNION SELECT ALL vt0.c0, t0.c50, vt1.c0 FROM vt1, vt0 RIGHT OUTER JOIN t0 ON ((t0.c46 COLLATE RTRIM) NOTNULL) WHERE (((CAST(((0.3705311691739962) NOT BETWEEN (vt0.c1) AND (vt0.c2)) AS INTEGER)) ISNULL)) GROUP BY vt0.c0, t0.c50, vt1.c0;
SELECT vt0.c0, t0.c50, vt1.c0 FROM vt1, vt0 RIGHT OUTER JOIN t0 ON ((t0.c46 COLLATE RTRIM) NOTNULL) GROUP BY vt0.c0, t0.c50, vt1.c0;
SELECT ALL t0.c0, vt0.c2, t0.c46, vt0.c0, vt1.c0, vt0.c1 FROM vt0, vt1, t0 GROUP BY t0.c0, vt0.c2, t0.c46, vt0.c0, vt1.c0, vt0.c1;
SELECT ALL t0.c0, vt0.c2, t0.c46, vt0.c0, vt1.c0, vt0.c1 FROM vt0, vt1, t0 GROUP BY t0.c0, vt0.c2, t0.c46, vt0.c0, vt1.c0, vt0.c1 HAVING GROUP_CONCAT((((MIN(vt1.c0))) NOT BETWEEN ((MIN(t0.c50))) AND ((SUM(MAX(COUNT(t0.c46))))))) UNION ALL SELECT t0.c0, vt0.c2, t0.c46, vt0.c0, vt1.c0, vt0.c1 FROM vt0, vt1, t0 GROUP BY t0.c0, vt0.c2, t0.c46, vt0.c0, vt1.c0, vt0.c1 HAVING (NOT (GROUP_CONCAT((((MIN(vt1.c0))) NOT BETWEEN ((MIN(t0.c50))) AND ((SUM(MAX(COUNT(t0.c46))))))))) UNION ALL SELECT ALL t0.c0, vt0.c2, t0.c46, vt0.c0, vt1.c0, vt0.c1 FROM vt0, vt1, t0 GROUP BY t0.c0, vt0.c2, t0.c46, vt0.c0, vt1.c0, vt0.c1 HAVING ((GROUP_CONCAT((((MIN(vt1.c0))) NOT BETWEEN ((MIN(t0.c50))) AND ((SUM(MAX(COUNT(t0.c46)))))))) ISNULL);
SELECT vt0.c1, vt0.c2 FROM vt1, vt0;
SELECT vt0.c1, vt0.c2 FROM vt1, vt0 WHERE ('*\nn') UNION ALL SELECT ALL vt0.c1, vt0.c2 FROM vt1, vt0 WHERE ((NOT ('*\nn'))) UNION ALL SELECT ALL vt0.c1, vt0.c2 FROM vt1, vt0 WHERE ((('*\nn') ISNULL));
SELECT vt0.c1, vt0.c2 FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, t0;
SELECT DISTINCT * FROM vt1, t0 WHERE (((t0.c46)||((((vt1.c0, vt1.c0, t0.c0))<=((t0.c0, t0.c0, vt1.c0)))))) UNION SELECT DISTINCT * FROM vt1, t0 WHERE ((NOT (((t0.c46)||((((vt1.c0, vt1.c0, t0.c0))<=((t0.c0, t0.c0, vt1.c0)))))))) UNION SELECT DISTINCT * FROM vt1, t0 WHERE (((((t0.c46)||((((vt1.c0, vt1.c0, t0.c0))<=((t0.c0, t0.c0, vt1.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt1, t0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((('-1852415159'))>=((vt1.c0))))>(vt1.c0))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((('-1852415159'))>=((vt1.c0))))>(vt1.c0))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((((('-1852415159'))>=((vt1.c0))))>(vt1.c0))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT t0.c0, t0.c46 FROM t0 GROUP BY t0.c0, t0.c46;
SELECT ALL t0.c0, t0.c46 FROM t0 GROUP BY t0.c0, t0.c46 HAVING (AVG(t0.c46) IN (MIN(t0.c50), TOTAL(t0.c0))) UNION ALL SELECT ALL t0.c0, t0.c46 FROM t0 GROUP BY t0.c0, t0.c46 HAVING (NOT ((AVG(t0.c46) IN (MIN(t0.c50), TOTAL(t0.c0))))) UNION ALL SELECT ALL t0.c0, t0.c46 FROM t0 GROUP BY t0.c0, t0.c46 HAVING (((AVG(t0.c46) IN (MIN(t0.c50), TOTAL(t0.c0)))) ISNULL);
SELECT t0.c0, t0.c46 FROM t0 GROUP BY t0.c0, t0.c46;
SELECT ALL t0.c0, t0.c46 FROM t0 GROUP BY t0.c0, t0.c46 HAVING (AVG(t0.c46) IN (MIN(t0.c50), TOTAL(t0.c0))) UNION ALL SELECT ALL t0.c0, t0.c46 FROM t0 GROUP BY t0.c0, t0.c46 HAVING (NOT ((AVG(t0.c46) IN (MIN(t0.c50), TOTAL(t0.c0))))) UNION ALL SELECT ALL t0.c0, t0.c46 FROM t0 GROUP BY t0.c0, t0.c46 HAVING (((AVG(t0.c46) IN (MIN(t0.c50), TOTAL(t0.c0)))) ISNULL);
SELECT t0.c0, t0.c46 FROM t0 GROUP BY t0.c0, t0.c46;
SELECT ALL vt0.c0, vt0.c1 FROM vt0, vt1;
SELECT vt0.c0, vt0.c1 FROM vt0, vt1 WHERE ((((vt0.c2, vt0.c0, vt1.c0, vt1.c0, 'E?')) NOT BETWEEN (((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt1.c0))), ((vt0.c1) NOTNULL), DATE(vt0.c0, vt0.c1, vt0.c1), ((((vt0.c2)OR(x'')))AND(vt0.c0)), vt0.c2 COLLATE BINARY)) AND ((0.1983278261544359, ((vt0.c1)*(vt0.c0)), (vt0.c0 IN (vt1.c0, vt0.c0)), ((vt1.c0) NOT NULL), ((vt0.c2)GLOB(vt1.c0)))))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0, vt1 WHERE ((NOT ((((vt0.c2, vt0.c0, vt1.c0, vt1.c0, 'E?')) NOT BETWEEN (((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt1.c0))), ((vt0.c1) NOTNULL), DATE(vt0.c0, vt0.c1, vt0.c1), ((((vt0.c2)OR(x'')))AND(vt0.c0)), vt0.c2 COLLATE BINARY)) AND ((0.1983278261544359, ((vt0.c1)*(vt0.c0)), (vt0.c0 IN (vt1.c0, vt0.c0)), ((vt1.c0) NOT NULL), ((vt0.c2)GLOB(vt1.c0)))))))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0, vt1 WHERE ((((((vt0.c2, vt0.c0, vt1.c0, vt1.c0, 'E?')) NOT BETWEEN (((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt1.c0))), ((vt0.c1) NOTNULL), DATE(vt0.c0, vt0.c1, vt0.c1), ((((vt0.c2)OR(x'')))AND(vt0.c0)), vt0.c2 COLLATE BINARY)) AND ((0.1983278261544359, ((vt0.c1)*(vt0.c0)), (vt0.c0 IN (vt1.c0, vt0.c0)), ((vt1.c0) NOT NULL), ((vt0.c2)GLOB(vt1.c0)))))) ISNULL));
SELECT ALL vt0.c0, vt0.c1 FROM vt0, vt1;
SELECT DISTINCT vt0.c1, vt0.c2, vt0.c0, t0.c50, t0.c0, vt1.c0 FROM vt0, vt1, t0;
SELECT DISTINCT vt0.c1, vt0.c2, vt0.c0, t0.c50, t0.c0, vt1.c0 FROM vt0, vt1, t0 WHERE (((((((((((((((t0.c46)/(vt0.c1)))OR((((vt0.c1)) NOT BETWEEN ((vt0.c2)) AND ((t0.c46))))))OR(vt0.c1)))OR((((t0.c50)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c1))))))AND(TRIM(DISTINCT vt0.c1, vt0.c0))))OR((NOT (vt1.c0)))))AND(((t0.c46) NOT BETWEEN (t0.c46) AND (vt0.c0))))) UNION SELECT DISTINCT vt0.c1, vt0.c2, vt0.c0, t0.c50, t0.c0, vt1.c0 FROM vt0, vt1, t0 WHERE ((NOT (((((((((((((((t0.c46)/(vt0.c1)))OR((((vt0.c1)) NOT BETWEEN ((vt0.c2)) AND ((t0.c46))))))OR(vt0.c1)))OR((((t0.c50)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c1))))))AND(TRIM(DISTINCT vt0.c1, vt0.c0))))OR((NOT (vt1.c0)))))AND(((t0.c46) NOT BETWEEN (t0.c46) AND (vt0.c0))))))) UNION SELECT DISTINCT vt0.c1, vt0.c2, vt0.c0, t0.c50, t0.c0, vt1.c0 FROM vt0, vt1, t0 WHERE (((((((((((((((((t0.c46)/(vt0.c1)))OR((((vt0.c1)) NOT BETWEEN ((vt0.c2)) AND ((t0.c46))))))OR(vt0.c1)))OR((((t0.c50)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c1))))))AND(TRIM(DISTINCT vt0.c1, vt0.c0))))OR((NOT (vt1.c0)))))AND(((t0.c46) NOT BETWEEN (t0.c46) AND (vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c2, vt0.c0, t0.c50, t0.c0, vt1.c0 FROM vt0, vt1, t0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (MIN(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)), (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))), CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, ((vt1.c0) NOT NULL))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (MIN(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)), (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))), CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, ((vt1.c0) NOT NULL))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((MIN(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)), (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))), CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, ((vt1.c0) NOT NULL))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c2, vt1.c0, t0.c46, t0.c50, t0.c0 FROM vt1, t0, vt0 GROUP BY vt0.c2, vt1.c0, t0.c46, t0.c50, t0.c0;
SELECT vt0.c2, vt1.c0, t0.c46, t0.c50, t0.c0 FROM vt1, t0, vt0 GROUP BY vt0.c2, vt1.c0, t0.c46, t0.c50, t0.c0 HAVING 0.07773468715973697 UNION ALL SELECT vt0.c2, vt1.c0, t0.c46, t0.c50, t0.c0 FROM vt1, t0, vt0 GROUP BY vt0.c2, vt1.c0, t0.c46, t0.c50, t0.c0 HAVING (NOT (0.07773468715973697)) UNION ALL SELECT ALL vt0.c2, vt1.c0, t0.c46, t0.c50, t0.c0 FROM vt1, t0, vt0 GROUP BY vt0.c2, vt1.c0, t0.c46, t0.c50, t0.c0 HAVING ((0.07773468715973697) ISNULL);
SELECT ALL vt0.c2, vt1.c0, t0.c46, t0.c50, t0.c0 FROM vt1, t0, vt0 GROUP BY vt0.c2, vt1.c0, t0.c46, t0.c50, t0.c0;
SELECT vt0.c2, vt1.c0, t0.c46, t0.c50, t0.c0 FROM vt1, t0, vt0 GROUP BY vt0.c2, vt1.c0, t0.c46, t0.c50, t0.c0 HAVING 0.07773468715973697 UNION ALL SELECT vt0.c2, vt1.c0, t0.c46, t0.c50, t0.c0 FROM vt1, t0, vt0 GROUP BY vt0.c2, vt1.c0, t0.c46, t0.c50, t0.c0 HAVING (NOT (0.07773468715973697)) UNION ALL SELECT ALL vt0.c2, vt1.c0, t0.c46, t0.c50, t0.c0 FROM vt1, t0, vt0 GROUP BY vt0.c2, vt1.c0, t0.c46, t0.c50, t0.c0 HAVING ((0.07773468715973697) ISNULL);
SELECT ALL vt0.c2, vt1.c0, t0.c46, t0.c50, t0.c0 FROM vt1, t0, vt0 GROUP BY vt0.c2, vt1.c0, t0.c46, t0.c50, t0.c0;
SELECT t0.c50, vt0.c1, vt0.c2 FROM vt0, t0;
SELECT t0.c50, vt0.c1, vt0.c2 FROM vt0, t0 WHERE (HEX(vt0.c0) COLLATE BINARY) UNION ALL SELECT t0.c50, vt0.c1, vt0.c2 FROM vt0, t0 WHERE ((NOT (HEX(vt0.c0) COLLATE BINARY))) UNION ALL SELECT ALL t0.c50, vt0.c1, vt0.c2 FROM vt0, t0 WHERE (((HEX(vt0.c0) COLLATE BINARY) ISNULL));
SELECT t0.c50, vt0.c1, vt0.c2 FROM vt0, t0;
SELECT DISTINCT vt0.c0 FROM t0, vt0;
SELECT DISTINCT vt0.c0 FROM t0, vt0 WHERE (((((((t0.c46)AND(t0.c46)))OR(0.08053626444809237)))IS((- (t0.c50))))) UNION SELECT DISTINCT vt0.c0 FROM t0, vt0 WHERE ((NOT (((((((t0.c46)AND(t0.c46)))OR(0.08053626444809237)))IS((- (t0.c50))))))) UNION SELECT DISTINCT vt0.c0 FROM t0, vt0 WHERE (((((((((t0.c46)AND(t0.c46)))OR(0.08053626444809237)))IS((- (t0.c50))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM t0, vt0;
SELECT vt0.c2, vt0.c1, t0.c50 FROM vt0, t0, vt1 GROUP BY vt0.c2, vt0.c1, t0.c50;
SELECT vt0.c2, vt0.c1, t0.c50 FROM vt0, t0, vt1 WHERE ((((((t0.c50)!=(vt0.c1))))<=((NULLIF(DISTINCT vt0.c1, vt0.c0))))) GROUP BY vt0.c2, vt0.c1, t0.c50 UNION SELECT ALL vt0.c2, vt0.c1, t0.c50 FROM vt0, t0, vt1 WHERE ((NOT ((((((t0.c50)<>(vt0.c1))))<=((NULLIF(DISTINCT vt0.c1, vt0.c0))))))) GROUP BY vt0.c2, vt0.c1, t0.c50 UNION SELECT ALL vt0.c2, vt0.c1, t0.c50 FROM vt0, t0, vt1 WHERE ((((((((t0.c50)<>(vt0.c1))))<=((NULLIF(DISTINCT vt0.c1, vt0.c0))))) ISNULL)) GROUP BY vt0.c2, vt0.c1, t0.c50;
SELECT vt0.c2, vt0.c1, t0.c50 FROM vt0, t0, vt1 GROUP BY vt0.c2, vt0.c1, t0.c50;
SELECT vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c0;
SELECT vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c0 HAVING MAX(GROUP_CONCAT(MIN(vt0.c2))) UNION ALL SELECT ALL vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c0 HAVING (NOT (MAX(GROUP_CONCAT(MIN(vt0.c2))))) UNION ALL SELECT vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c0 HAVING ((MAX(GROUP_CONCAT(MIN(vt0.c2)))) ISNULL);
SELECT ALL TOTAL(t0.c46) FROM t0;
SELECT ALL vt1.c0, t0.c50, t0.c46, t0.c0 FROM vt1 CROSS JOIN t0 ON CASE ((((((((t0.c50)OR(t0.c46)))AND(t0.c46)))OR(t0.c50)))AND(t0.c50))  WHEN t0.c50 COLLATE BINARY THEN CASE WHEN vt1.c0 THEN vt1.c0 END END;
SELECT ALL vt1.c0, t0.c50, t0.c46, t0.c0 FROM vt1 CROSS JOIN t0 ON CASE ((((((((t0.c50)OR(t0.c46)))AND(t0.c46)))OR(t0.c50)))AND(t0.c50))  WHEN t0.c50 COLLATE BINARY THEN CASE WHEN vt1.c0 THEN vt1.c0 END END WHERE (((0Xffffffffb296f846)/(CAST(t0.c0 AS NUMERIC)))) UNION ALL SELECT vt1.c0, t0.c50, t0.c46, t0.c0 FROM vt1 CROSS JOIN t0 ON CASE ((((((((t0.c50)OR(t0.c46)))AND(t0.c46)))OR(t0.c50)))AND(t0.c50))  WHEN t0.c50 COLLATE BINARY THEN CASE WHEN vt1.c0 THEN vt1.c0 END END WHERE ((NOT (((0Xffffffffb296f846)/(CAST(t0.c0 AS NUMERIC)))))) UNION ALL SELECT vt1.c0, t0.c50, t0.c46, t0.c0 FROM vt1 CROSS JOIN t0 ON CASE ((((((((t0.c50)OR(t0.c46)))AND(t0.c46)))OR(t0.c50)))AND(t0.c50))  WHEN t0.c50 COLLATE BINARY THEN CASE WHEN vt1.c0 THEN vt1.c0 END END WHERE (((((0Xffffffffb296f846)/(CAST(t0.c0 AS NUMERIC)))) ISNULL));
SELECT ALL vt1.c0, t0.c50, t0.c46, t0.c0 FROM vt1 CROSS JOIN t0 ON CASE ((((((((t0.c50)OR(t0.c46)))AND(t0.c46)))OR(t0.c50)))AND(t0.c50))  WHEN t0.c50 COLLATE BINARY THEN CASE WHEN vt1.c0 THEN vt1.c0 END END;
SELECT DISTINCT vt0.c2 FROM t0, vt1, vt0;
SELECT DISTINCT vt0.c2 FROM t0, vt1, vt0 WHERE (((((t0.c0) IS FALSE))OR(((t0.c0)>>(vt0.c1))))) UNION SELECT DISTINCT vt0.c2 FROM t0, vt1, vt0 WHERE ((NOT (((((t0.c0) IS FALSE))OR(((t0.c0)>>(vt0.c1))))))) UNION SELECT DISTINCT vt0.c2 FROM t0, vt1, vt0 WHERE (((((((t0.c0) IS FALSE))OR(((t0.c0)>>(vt0.c1))))) ISNULL));
SELECT DISTINCT vt0.c2 FROM t0, vt1, vt0;
SELECT ALL vt1.c0 FROM t0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM t0, vt1 WHERE (UPPER(DISTINCT ((vt1.c0) ISNULL))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM t0, vt1 WHERE ((NOT (UPPER(DISTINCT ((vt1.c0) ISNULL))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM t0, vt1 WHERE (((UPPER(DISTINCT ((vt1.c0) ISNULL))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM t0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0, t0.c0 FROM vt0, t0, vt1 GROUP BY vt1.c0, t0.c0;
SELECT vt1.c0, t0.c0 FROM vt0, t0, vt1 GROUP BY vt1.c0, t0.c0 HAVING ((vt0.c2) NOT NULL) COLLATE NOCASE UNION ALL SELECT vt1.c0, t0.c0 FROM vt0, t0, vt1 GROUP BY vt1.c0, t0.c0 HAVING (NOT (((vt0.c2) NOT NULL) COLLATE NOCASE)) UNION ALL SELECT vt1.c0, t0.c0 FROM vt0, t0, vt1 GROUP BY vt1.c0, t0.c0 HAVING ((((vt0.c2) NOT NULL) COLLATE NOCASE) ISNULL);
SELECT ALL vt1.c0, t0.c0 FROM vt0, t0, vt1 GROUP BY vt1.c0, t0.c0;
SELECT vt1.c0, t0.c0 FROM vt0, t0, vt1 GROUP BY vt1.c0, t0.c0 HAVING ((vt0.c2) NOT NULL) COLLATE NOCASE UNION ALL SELECT vt1.c0, t0.c0 FROM vt0, t0, vt1 GROUP BY vt1.c0, t0.c0 HAVING (NOT (((vt0.c2) NOT NULL) COLLATE NOCASE)) UNION ALL SELECT vt1.c0, t0.c0 FROM vt0, t0, vt1 GROUP BY vt1.c0, t0.c0 HAVING ((((vt0.c2) NOT NULL) COLLATE NOCASE) ISNULL);
SELECT ALL vt1.c0, t0.c0 FROM vt0, t0, vt1 GROUP BY vt1.c0, t0.c0;
SELECT ALL MAX(448480235) FROM vt1 ORDER BY (NOT (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) ASC;
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (vt0.c1) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c1))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((vt0.c1) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((vt1.c0 COLLATE BINARY)IS NOT((vt1.c0 IN ())))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0 COLLATE BINARY)IS NOT((vt1.c0 IN ())))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((vt1.c0 COLLATE BINARY)IS NOT((vt1.c0 IN ())))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt0.c1, t0.c50, t0.c0, t0.c46, vt0.c2, vt0.c0 FROM t0, vt0 GROUP BY vt0.c1, t0.c50, t0.c0, t0.c46, vt0.c2, vt0.c0;
SELECT ALL vt0.c1, t0.c50, t0.c0, t0.c46, vt0.c2, vt0.c0 FROM t0, vt0 WHERE ('') GROUP BY vt0.c1, t0.c50, t0.c0, t0.c46, vt0.c2, vt0.c0 UNION SELECT vt0.c1, t0.c50, t0.c0, t0.c46, vt0.c2, vt0.c0 FROM t0, vt0 WHERE ((NOT (''))) GROUP BY vt0.c1, t0.c50, t0.c0, t0.c46, vt0.c2, vt0.c0 UNION SELECT ALL vt0.c1, t0.c50, t0.c0, t0.c46, vt0.c2, vt0.c0 FROM t0, vt0 WHERE ((('') ISNULL)) GROUP BY vt0.c1, t0.c50, t0.c0, t0.c46, vt0.c2, vt0.c0;
SELECT ALL vt0.c1, t0.c50, t0.c0, t0.c46, vt0.c2, vt0.c0 FROM t0, vt0 GROUP BY vt0.c1, t0.c50, t0.c0, t0.c46, vt0.c2, vt0.c0;
SELECT ALL vt1.c0, vt0.c2, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c2, vt0.c0;
SELECT ALL vt1.c0, vt0.c2, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c2, vt0.c0 HAVING (vt0.c0 IN (vt0.c2)) COLLATE RTRIM UNION ALL SELECT ALL vt1.c0, vt0.c2, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c2, vt0.c0 HAVING (NOT ((vt0.c0 IN (vt0.c2)) COLLATE RTRIM)) UNION ALL SELECT vt1.c0, vt0.c2, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c2, vt0.c0 HAVING (((vt0.c0 IN (vt0.c2)) COLLATE RTRIM) ISNULL);
SELECT ALL vt1.c0, vt0.c2, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c2, vt0.c0;
SELECT ALL vt1.c0, vt0.c2, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c2, vt0.c0 HAVING (vt0.c0 IN (vt0.c2)) COLLATE RTRIM UNION ALL SELECT ALL vt1.c0, vt0.c2, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c2, vt0.c0 HAVING (NOT ((vt0.c0 IN (vt0.c2)) COLLATE RTRIM)) UNION ALL SELECT vt1.c0, vt0.c2, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c2, vt0.c0 HAVING (((vt0.c0 IN (vt0.c2)) COLLATE RTRIM) ISNULL);
SELECT ALL vt1.c0, vt0.c2, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c2, vt0.c0;
SELECT ALL vt0.c2 FROM vt1, t0, vt0;
SELECT ALL vt0.c2 FROM vt1 NOT INDEXED, t0, vt0 WHERE ((- ((((t0.c46, t0.c50, vt0.c0))>=((vt1.c0, vt1.c0, vt0.c2)))))) UNION ALL SELECT vt0.c2 FROM vt1, t0, vt0 WHERE ((NOT ((- ((((t0.c46, t0.c50, vt0.c0))>=((vt1.c0, vt1.c0, vt0.c2)))))))) UNION ALL SELECT ALL vt0.c2 FROM vt1, t0, vt0 WHERE ((((- ((((t0.c46, t0.c50, vt0.c0))>=((vt1.c0, vt1.c0, vt0.c2)))))) ISNULL));
SELECT ALL vt0.c2 FROM vt1, t0, vt0;
SELECT DISTINCT * FROM vt1 INNER JOIN vt0 ON ((((LIKELIHOOD(DISTINCT vt0.c1, 0.7493448079361424))OR(vt0.c1 COLLATE BINARY)))OR((~ (vt1.c0))));
SELECT DISTINCT * FROM vt1 INNER JOIN vt0 ON ((((LIKELIHOOD(DISTINCT vt0.c1, 0.7493448079361424))OR(vt0.c1 COLLATE BINARY)))OR((~ (vt1.c0)))) WHERE (((((((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0)))OR((((vt0.c2)) BETWEEN ((vt0.c1)) AND ((vt1.c0))))))OR(vt0.c0 COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt1 INNER JOIN vt0 ON ((((LIKELIHOOD(DISTINCT vt0.c1, 0.7493448079361424))OR(vt0.c1 COLLATE BINARY)))OR((~ (vt1.c0)))) WHERE ((NOT (((((((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0)))OR((((vt0.c2)) BETWEEN ((vt0.c1)) AND ((vt1.c0))))))OR(vt0.c0 COLLATE BINARY))))) UNION SELECT DISTINCT * FROM vt1 INNER JOIN vt0 ON ((((LIKELIHOOD(DISTINCT vt0.c1, 0.7493448079361424))OR(vt0.c1 COLLATE BINARY)))OR((~ (vt1.c0)))) WHERE (((((((((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0)))OR((((vt0.c2)) BETWEEN ((vt0.c1)) AND ((vt1.c0))))))OR(vt0.c0 COLLATE BINARY))) ISNULL));
SELECT DISTINCT * FROM vt1 INNER JOIN vt0 ON ((((LIKELIHOOD(DISTINCT vt0.c1, 0.7493448079361424))OR(vt0.c1 COLLATE BINARY)))OR((~ (vt1.c0))));
SELECT ALL t0.c46, t0.c0 FROM t0 GROUP BY t0.c46, t0.c0;
SELECT ALL t0.c46, t0.c0 FROM t0 WHERE (((NULL) NOT BETWEEN (t0.c0) AND (UNLIKELY(t0.c50)))) GROUP BY t0.c46, t0.c0 UNION SELECT ALL t0.c46, t0.c0 FROM t0 WHERE ((NOT (((NULL) NOT BETWEEN (t0.c0) AND (UNLIKELY(t0.c50)))))) GROUP BY t0.c46, t0.c0 UNION SELECT ALL t0.c46, t0.c0 FROM t0 WHERE (((((NULL) NOT BETWEEN (t0.c0) AND (UNLIKELY(t0.c50)))) ISNULL)) GROUP BY t0.c46, t0.c0;
SELECT ALL t0.c46, t0.c0 FROM t0 GROUP BY t0.c46, t0.c0;
SELECT vt1.c0, t0.c50 FROM vt1 NATURAL JOIN t0 GROUP BY vt1.c0, t0.c50;
SELECT vt1.c0, t0.c50 FROM vt1 NATURAL JOIN t0 GROUP BY vt1.c0, t0.c50 HAVING COUNT(((TOTAL(SUM(t0.c0)))LIKE(t0.c46))) UNION ALL SELECT vt1.c0, t0.c50 FROM vt1 NATURAL JOIN t0 GROUP BY vt1.c0, t0.c50 HAVING (NOT (COUNT(((TOTAL(SUM(t0.c0)))LIKE(t0.c46))))) UNION ALL SELECT ALL vt1.c0, t0.c50 FROM vt1 NATURAL JOIN t0 GROUP BY vt1.c0, t0.c50 HAVING ((COUNT(((TOTAL(SUM(t0.c0)))LIKE(t0.c46)))) ISNULL);
SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0;
SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0 WHERE (CAST((vt0.c0 IN ()) AS INTEGER)) UNION ALL SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt0 WHERE ((NOT (CAST((vt0.c0 IN ()) AS INTEGER)))) UNION ALL SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt0 WHERE (((CAST((vt0.c0 IN ()) AS INTEGER)) ISNULL));
SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0;
SELECT DISTINCT vt1.c0, vt0.c0, vt0.c2 FROM vt0, vt1, t0;
SELECT DISTINCT vt1.c0, vt0.c0, vt0.c2 FROM vt0, vt1, t0 WHERE ((((('-1416648076')-(vt0.c2)))%((((vt0.c0))<>((vt0.c1)))))) UNION SELECT DISTINCT vt1.c0, vt0.c0, vt0.c2 FROM vt0, vt1, t0 WHERE ((NOT ((((('-1416648076')-(vt0.c2)))%((((vt0.c0))<>((vt0.c1)))))))) UNION SELECT DISTINCT vt1.c0, vt0.c0, vt0.c2 FROM vt0, vt1, t0 WHERE ((((((('-1416648076')-(vt0.c2)))%((((vt0.c0))!=((vt0.c1)))))) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c0, vt0.c2 FROM vt0, vt1, t0;
SELECT ALL t0.c0, t0.c46, vt0.c1, t0.c50 FROM vt1, vt0, t0 GROUP BY t0.c0, t0.c46, vt0.c1, t0.c50;
SELECT ALL t0.c0, t0.c46, vt0.c1, t0.c50 FROM vt1, vt0, t0 WHERE ((t0.c50 IN (vt0.c1, vt0.c0)) COLLATE BINARY) GROUP BY t0.c0, t0.c46, vt0.c1, t0.c50 UNION SELECT t0.c0, t0.c46, vt0.c1, t0.c50 FROM vt1, vt0, t0 WHERE ((NOT ((t0.c50 IN (vt0.c1, vt0.c0)) COLLATE BINARY))) GROUP BY t0.c0, t0.c46, vt0.c1, t0.c50 UNION SELECT t0.c0, t0.c46, vt0.c1, t0.c50 FROM vt1, vt0, t0 WHERE ((((t0.c50 IN (vt0.c1, vt0.c0)) COLLATE BINARY) ISNULL)) GROUP BY t0.c0, t0.c46, vt0.c1, t0.c50;
SELECT ALL t0.c0, t0.c46, vt0.c1, t0.c50 FROM vt1, vt0, t0 GROUP BY t0.c0, t0.c46, vt0.c1, t0.c50;
SELECT vt0.c0, vt0.c2, t0.c50, t0.c46 FROM vt0, t0, vt1 GROUP BY vt0.c0, vt0.c2, t0.c50, t0.c46;
SELECT ALL vt0.c0, vt0.c2, t0.c50, t0.c46 FROM vt0, t0, vt1 GROUP BY vt0.c0, vt0.c2, t0.c50, t0.c46 HAVING (+ (SUM(vt1.c0))) UNION ALL SELECT ALL vt0.c0, vt0.c2, t0.c50, t0.c46 FROM vt0, t0, vt1 GROUP BY vt0.c0, vt0.c2, t0.c50, t0.c46 HAVING (NOT ((+ (SUM(vt1.c0))))) UNION ALL SELECT vt0.c0, vt0.c2, t0.c50, t0.c46 FROM vt0, t0, vt1 GROUP BY vt0.c0, vt0.c2, t0.c50, t0.c46 HAVING (((+ (SUM(vt1.c0)))) ISNULL);
SELECT vt0.c0, vt0.c2, t0.c50, t0.c46 FROM vt0, t0, vt1 GROUP BY vt0.c0, vt0.c2, t0.c50, t0.c46;
SELECT ALL vt0.c0, vt0.c2, t0.c50, t0.c46 FROM vt0, t0, vt1 GROUP BY vt0.c0, vt0.c2, t0.c50, t0.c46 HAVING (+ (SUM(vt1.c0))) UNION ALL SELECT ALL vt0.c0, vt0.c2, t0.c50, t0.c46 FROM vt0, t0, vt1 GROUP BY vt0.c0, vt0.c2, t0.c50, t0.c46 HAVING (NOT ((+ (SUM(vt1.c0))))) UNION ALL SELECT vt0.c0, vt0.c2, t0.c50, t0.c46 FROM vt0, t0, vt1 GROUP BY vt0.c0, vt0.c2, t0.c50, t0.c46 HAVING (((+ (SUM(vt1.c0)))) ISNULL);
SELECT vt0.c0, vt0.c2, t0.c50, t0.c46 FROM vt0, t0, vt1 GROUP BY vt0.c0, vt0.c2, t0.c50, t0.c46;
SELECT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE ((((((('613690873')AND(vt1.c0)))AND(vt1.c0)))+(((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT ((((((('613690873')AND(vt1.c0)))AND(vt1.c0)))+(((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((((((((('613690873')AND(vt1.c0)))AND(vt1.c0)))+(((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))))) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT t0.c46, vt1.c0, t0.c0, t0.c50 FROM vt1, t0;
SELECT DISTINCT t0.c46, vt1.c0, t0.c0, t0.c50 FROM vt1, t0 WHERE (((((t0.c0 IN (vt1.c0, vt1.c0))))<=((((t0.c0)>=(t0.c46)))))) UNION SELECT DISTINCT t0.c46, vt1.c0, t0.c0, t0.c50 FROM vt1, t0 WHERE ((NOT (((((t0.c0 IN (vt1.c0, vt1.c0))))<=((((t0.c0)>=(t0.c46)))))))) UNION SELECT DISTINCT t0.c46, vt1.c0, t0.c0, t0.c50 FROM vt1, t0 WHERE (((((((t0.c0 IN (vt1.c0, vt1.c0))))<=((((t0.c0)>=(t0.c46)))))) ISNULL));
SELECT DISTINCT t0.c46, vt1.c0, t0.c0, t0.c50 FROM vt1, t0;
SELECT ALL vt0.c1, vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c2, vt0.c0;
SELECT vt0.c1, vt0.c2, vt0.c0 FROM vt0 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c2)) COLLATE RTRIM) GROUP BY vt0.c1, vt0.c2, vt0.c0 UNION SELECT vt0.c1, vt0.c2, vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c2)) COLLATE RTRIM))) GROUP BY vt0.c1, vt0.c2, vt0.c0 UNION SELECT vt0.c1, vt0.c2, vt0.c0 FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c2)) COLLATE RTRIM) ISNULL)) GROUP BY vt0.c1, vt0.c2, vt0.c0;
SELECT ALL vt0.c1, vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c2, vt0.c0;
SELECT ALL vt1.c0, t0.c50, vt0.c2, t0.c46 FROM t0 LEFT OUTER JOIN vt0 ON ((CAST(vt0.c1 AS TEXT))<>(CAST(vt0.c2 AS REAL))) INNER JOIN vt1 ON SQLITE_SOURCE_ID() GROUP BY vt1.c0, t0.c50, vt0.c2, t0.c46;
SELECT vt1.c0, t0.c50, vt0.c2, t0.c46 FROM t0 LEFT OUTER JOIN vt0 ON ((CAST(vt0.c1 AS TEXT))!=(CAST(vt0.c2 AS REAL))) INNER JOIN vt1 ON SQLITE_SOURCE_ID() GROUP BY vt1.c0, t0.c50, vt0.c2, t0.c46 HAVING MAX((((t0.c0))<=((COUNT(*))))) UNION ALL SELECT vt1.c0, t0.c50, vt0.c2, t0.c46 FROM t0 LEFT OUTER JOIN vt0 ON ((CAST(vt0.c1 AS TEXT))!=(CAST(vt0.c2 AS REAL))) INNER JOIN vt1 ON SQLITE_SOURCE_ID() GROUP BY vt1.c0, t0.c50, vt0.c2, t0.c46 HAVING (NOT (MAX((((t0.c0))<=((COUNT(*))))))) UNION ALL SELECT ALL vt1.c0, t0.c50, vt0.c2, t0.c46 FROM t0 LEFT OUTER JOIN vt0 ON ((CAST(vt0.c1 AS TEXT))!=(CAST(vt0.c2 AS REAL))) INNER JOIN vt1 ON SQLITE_SOURCE_ID() GROUP BY vt1.c0, t0.c50, vt0.c2, t0.c46 HAVING ((MAX((((t0.c0))<=((COUNT(*)))))) ISNULL);
SELECT ALL t0.c46, t0.c0, vt1.c0 FROM t0, vt1;
SELECT ALL t0.c46, t0.c0, vt1.c0 FROM t0, vt1 WHERE ((((t0.c0) BETWEEN (t0.c50) AND (t0.c46)) IN ())) UNION ALL SELECT ALL t0.c46, t0.c0, vt1.c0 FROM t0, vt1 WHERE ((NOT ((((t0.c0) BETWEEN (t0.c50) AND (t0.c46)) IN ())))) UNION ALL SELECT t0.c46, t0.c0, vt1.c0 FROM t0, vt1 NOT INDEXED WHERE ((((((t0.c0) BETWEEN (t0.c50) AND (t0.c46)) IN ())) ISNULL));
SELECT ALL t0.c46, t0.c0, vt1.c0 FROM t0, vt1;
SELECT DISTINCT vt0.c0, vt0.c2, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c2, vt0.c1 FROM vt0 WHERE (((((0.5453491825103359) NOT BETWEEN (vt0.c1) AND (vt0.c1))) BETWEEN (vt0.c1 COLLATE RTRIM) AND (vt0.c1 COLLATE BINARY))) UNION SELECT DISTINCT vt0.c0, vt0.c2, vt0.c1 FROM vt0 WHERE ((NOT (((((0.5453491825103359) NOT BETWEEN (vt0.c1) AND (vt0.c1))) BETWEEN (vt0.c1 COLLATE RTRIM) AND (vt0.c1 COLLATE BINARY))))) UNION SELECT DISTINCT vt0.c0, vt0.c2, vt0.c1 FROM vt0 WHERE (((((((0.5453491825103359) NOT BETWEEN (vt0.c1) AND (vt0.c1))) BETWEEN (vt0.c1 COLLATE RTRIM) AND (vt0.c1 COLLATE BINARY))) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c2, vt0.c1 FROM vt0;
SELECT ALL vt1.c0, t0.c46, t0.c0, vt0.c0, vt0.c1, t0.c50 FROM vt0 NOT INDEXED, vt1, t0 GROUP BY vt1.c0, t0.c46, t0.c0, vt0.c0, vt0.c1, t0.c50;
SELECT vt1.c0, t0.c46, t0.c0, vt0.c0, vt0.c1, t0.c50 FROM vt0, vt1, t0 WHERE (((((t0.c50)|(t0.c46)))>>(((t0.c46)>=(vt0.c0))))) GROUP BY vt1.c0, t0.c46, t0.c0, vt0.c0, vt0.c1, t0.c50 UNION SELECT ALL vt1.c0, t0.c46, t0.c0, vt0.c0, vt0.c1, t0.c50 FROM vt0, vt1, t0 WHERE ((NOT (((((t0.c50)|(t0.c46)))>>(((t0.c46)>=(vt0.c0))))))) GROUP BY vt1.c0, t0.c46, t0.c0, vt0.c0, vt0.c1, t0.c50 UNION SELECT vt1.c0, t0.c46, t0.c0, vt0.c0, vt0.c1, t0.c50 FROM vt0, vt1, t0 WHERE (((((((t0.c50)|(t0.c46)))>>(((t0.c46)>=(vt0.c0))))) ISNULL)) GROUP BY vt1.c0, t0.c46, t0.c0, vt0.c0, vt0.c1, t0.c50;
SELECT ALL vt1.c0, t0.c46, t0.c0, vt0.c0, vt0.c1, t0.c50 FROM vt0 NOT INDEXED, vt1, t0 GROUP BY vt1.c0, t0.c46, t0.c0, vt0.c0, vt0.c1, t0.c50;
SELECT t0.c50 FROM t0 GROUP BY t0.c50;
SELECT ALL t0.c50 FROM t0 GROUP BY t0.c50 HAVING SUM('j]F''') UNION ALL SELECT t0.c50 FROM t0 GROUP BY t0.c50 HAVING (NOT (SUM('j]F'''))) UNION ALL SELECT t0.c50 FROM t0 GROUP BY t0.c50 HAVING ((SUM('j]F''')) ISNULL);
SELECT t0.c50 FROM t0 GROUP BY t0.c50;
SELECT ALL t0.c50 FROM t0 GROUP BY t0.c50 HAVING SUM('j]F''') UNION ALL SELECT t0.c50 FROM t0 GROUP BY t0.c50 HAVING (NOT (SUM('j]F'''))) UNION ALL SELECT t0.c50 FROM t0 GROUP BY t0.c50 HAVING ((SUM('j]F''')) ISNULL);
SELECT t0.c50 FROM t0 GROUP BY t0.c50;
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE (((((((((((vt1.c0)/(vt1.c0)))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR(((vt1.c0)==(vt1.c0)))))OR(vt1.c0)))AND((- (vt1.c0))))) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (((((((((((vt1.c0)/(vt1.c0)))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR(((vt1.c0)=(vt1.c0)))))OR(vt1.c0)))AND((- (vt1.c0))))))) UNION ALL SELECT ALL * FROM vt1 WHERE (((((((((((((vt1.c0)/(vt1.c0)))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR(((vt1.c0)==(vt1.c0)))))OR(vt1.c0)))AND((- (vt1.c0))))) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0 WHERE (CASE '-452010446'  WHEN ((vt0.c2) NOT BETWEEN (t0.c50) AND (t0.c50)) THEN (((vt0.c0, vt0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c50, t0.c0, t0.c50))) END) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((NOT (CASE '-452010446'  WHEN ((vt0.c2) NOT BETWEEN (t0.c50) AND (t0.c50)) THEN (((vt0.c0, vt0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c50, t0.c0, t0.c50))) END))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE (((CASE '-452010446'  WHEN ((vt0.c2) NOT BETWEEN (t0.c50) AND (t0.c50)) THEN (((vt0.c0, vt0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c50, t0.c0, t0.c50))) END) ISNULL));
SELECT DISTINCT * FROM t0, vt0;
SELECT ALL vt0.c2, t0.c46, t0.c50, vt0.c1, t0.c0 FROM vt0, t0 GROUP BY vt0.c2, t0.c46, t0.c50, vt0.c1, t0.c0;
SELECT ALL vt0.c2, t0.c46, t0.c50, vt0.c1, t0.c0 FROM vt0, t0 WHERE (IFNULL(DISTINCT vt0.c1, t0.c0) COLLATE RTRIM) GROUP BY vt0.c2, t0.c46, t0.c50, vt0.c1, t0.c0 UNION SELECT vt0.c2, t0.c46, t0.c50, vt0.c1, t0.c0 FROM vt0, t0 WHERE ((NOT (IFNULL(DISTINCT vt0.c1, t0.c0) COLLATE RTRIM))) GROUP BY vt0.c2, t0.c46, t0.c50, vt0.c1, t0.c0 UNION SELECT vt0.c2, t0.c46, t0.c50, vt0.c1, t0.c0 FROM vt0, t0 WHERE (((IFNULL(DISTINCT vt0.c1, t0.c0) COLLATE RTRIM) ISNULL)) GROUP BY vt0.c2, t0.c46, t0.c50, vt0.c1, t0.c0;
SELECT ALL vt0.c2, t0.c46, t0.c50, vt0.c1, t0.c0 FROM vt0, t0 GROUP BY vt0.c2, t0.c46, t0.c50, vt0.c1, t0.c0;
SELECT ALL vt0.c2 FROM vt0 GROUP BY vt0.c2;
SELECT ALL vt0.c2 FROM vt0 GROUP BY vt0.c2 HAVING 0.12306380013708518 UNION ALL SELECT ALL vt0.c2 FROM vt0 GROUP BY vt0.c2 HAVING (NOT (0.12306380013708518)) UNION ALL SELECT ALL vt0.c2 FROM vt0 GROUP BY vt0.c2 HAVING ((0.12306380013708518) ISNULL);
SELECT ALL vt0.c2 FROM vt0 GROUP BY vt0.c2;
SELECT ALL vt0.c2 FROM vt0 GROUP BY vt0.c2 HAVING 0.12306380013708518 UNION ALL SELECT ALL vt0.c2 FROM vt0 GROUP BY vt0.c2 HAVING (NOT (0.12306380013708518)) UNION ALL SELECT ALL vt0.c2 FROM vt0 GROUP BY vt0.c2 HAVING ((0.12306380013708518) ISNULL);
SELECT ALL vt0.c2 FROM vt0 GROUP BY vt0.c2;
SELECT ALL t0.c46, t0.c0, t0.c50, vt0.c0, vt1.c0, vt0.c2, vt0.c1 FROM vt1 INDEXED BY i46, vt0, t0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((- (((vt1.c0)==(vt1.c0))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((- (((vt1.c0)==(vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((- (((vt1.c0)==(vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt0.c0, vt1.c0, vt0.c1, vt0.c2 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0, vt0.c1, vt0.c2;
SELECT ALL vt0.c0, vt1.c0, vt0.c1, vt0.c2 FROM vt0, vt1 WHERE ((((('훜{') BETWEEN (vt0.c1) AND (vt0.c0)))GLOB(((vt0.c2) NOT BETWEEN (vt1.c0) AND (vt0.c2))))) GROUP BY vt0.c0, vt1.c0, vt0.c1, vt0.c2 UNION SELECT ALL vt0.c0, vt1.c0, vt0.c1, vt0.c2 FROM vt0, vt1 WHERE ((NOT ((((('훜{') BETWEEN (vt0.c1) AND (vt0.c0)))GLOB(((vt0.c2) NOT BETWEEN (vt1.c0) AND (vt0.c2))))))) GROUP BY vt0.c0, vt1.c0, vt0.c1, vt0.c2 UNION SELECT ALL vt0.c0, vt1.c0, vt0.c1, vt0.c2 FROM vt0, vt1 WHERE ((((((('훜{') BETWEEN (vt0.c1) AND (vt0.c0)))GLOB(((vt0.c2) NOT BETWEEN (vt1.c0) AND (vt0.c2))))) ISNULL)) GROUP BY vt0.c0, vt1.c0, vt0.c1, vt0.c2;
SELECT vt0.c0, vt1.c0, vt0.c1, vt0.c2 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0, vt0.c1, vt0.c2;
SELECT vt0.c2, vt0.c0, t0.c46, vt0.c1, t0.c0 FROM vt0, vt1, t0 GROUP BY vt0.c2, vt0.c0, t0.c46, vt0.c1, t0.c0;
SELECT ALL vt0.c2, vt0.c0, t0.c46, vt0.c1, t0.c0 FROM vt0, vt1, t0 GROUP BY vt0.c2, vt0.c0, t0.c46, vt0.c1, t0.c0 HAVING MIN(GROUP_CONCAT(COUNT('{}0a&4'))) UNION ALL SELECT ALL vt0.c2, vt0.c0, t0.c46, vt0.c1, t0.c0 FROM vt0, vt1, t0 GROUP BY vt0.c2, vt0.c0, t0.c46, vt0.c1, t0.c0 HAVING (NOT (MIN(GROUP_CONCAT(COUNT('{}0a&4'))))) UNION ALL SELECT vt0.c2, vt0.c0, t0.c46, vt0.c1, t0.c0 FROM vt0, vt1, t0 GROUP BY vt0.c2, vt0.c0, t0.c46, vt0.c1, t0.c0 HAVING ((MIN(GROUP_CONCAT(COUNT('{}0a&4')))) ISNULL);
SELECT ALL * FROM vt0 NOT INDEXED LEFT OUTER JOIN t0 ON ((((vt1.c0))!=((vt0.c0))) IN ()) CROSS JOIN vt1 ON IFNULL(((((NULL)AND(t0.c0)))AND(vt0.c2)), LOWER(DISTINCT vt0.c1));
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON ((((vt1.c0))<>((vt0.c0))) IN ()) CROSS JOIN vt1 ON IFNULL(((((NULL)AND(t0.c0)))AND(vt0.c2)), LOWER(DISTINCT vt0.c1)) WHERE (TRIM(DISTINCT ((t0.c0)==(t0.c0)))) UNION ALL SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON ((((vt1.c0))<>((vt0.c0))) IN ()) CROSS JOIN vt1 ON IFNULL(((((NULL)AND(t0.c0)))AND(vt0.c2)), LOWER(DISTINCT vt0.c1)) WHERE ((NOT (TRIM(DISTINCT ((t0.c0)==(t0.c0)))))) UNION ALL SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON ((((vt1.c0))<>((vt0.c0))) IN ()) CROSS JOIN vt1 ON IFNULL(((((NULL)AND(t0.c0)))AND(vt0.c2)), LOWER(DISTINCT vt0.c1)) WHERE (((TRIM(DISTINCT ((t0.c0)==(t0.c0)))) ISNULL));
SELECT ALL * FROM vt0 NOT INDEXED LEFT OUTER JOIN t0 ON ((((vt1.c0))!=((vt0.c0))) IN ()) CROSS JOIN vt1 ON IFNULL(((((NULL)AND(t0.c0)))AND(vt0.c2)), LOWER(DISTINCT vt0.c1));
SELECT DISTINCT t0.c50 FROM vt1, t0;
SELECT DISTINCT t0.c50 FROM vt1, t0 WHERE (((((t0.c46)==(vt1.c0)))%((+ (t0.c0))))) UNION SELECT DISTINCT t0.c50 FROM vt1, t0 WHERE ((NOT (((((t0.c46)==(vt1.c0)))%((+ (t0.c0))))))) UNION SELECT DISTINCT t0.c50 FROM vt1, t0 WHERE (((((((t0.c46)==(vt1.c0)))%((+ (t0.c0))))) ISNULL));
SELECT DISTINCT t0.c50 FROM vt1, t0;
SELECT ALL vt0.c1, vt0.c2, vt0.c0 FROM vt1 INNER JOIN vt0 ON ((GLOB(vt1.c0, vt0.c1))||(0.7070134711483131)) GROUP BY vt0.c1, vt0.c2, vt0.c0;
SELECT vt0.c1, vt0.c2, vt0.c0 FROM vt1 INNER JOIN vt0 ON ((GLOB(vt1.c0, vt0.c1))||(0.7070134711483131)) WHERE ((((vt1.c0, '350654888', vt0.c0, vt0.c2, vt0.c1)) NOT BETWEEN ((vt0.c2, vt0.c1, vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c2, x'', vt0.c1, vt1.c0, vt0.c0))) COLLATE BINARY) GROUP BY vt0.c1, vt0.c2, vt0.c0 UNION SELECT vt0.c1, vt0.c2, vt0.c0 FROM vt1 INNER JOIN vt0 ON ((GLOB(vt1.c0, vt0.c1))||(0.7070134711483131)) WHERE ((NOT ((((vt1.c0, '350654888', vt0.c0, vt0.c2, vt0.c1)) NOT BETWEEN ((vt0.c2, vt0.c1, vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c2, x'', vt0.c1, vt1.c0, vt0.c0))) COLLATE BINARY))) GROUP BY vt0.c1, vt0.c2, vt0.c0 UNION SELECT vt0.c1, vt0.c2, vt0.c0 FROM vt1 INNER JOIN vt0 ON ((GLOB(vt1.c0, vt0.c1))||(0.7070134711483131)) WHERE ((((((vt1.c0, '350654888', vt0.c0, vt0.c2, vt0.c1)) NOT BETWEEN ((vt0.c2, vt0.c1, vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c2, x'', vt0.c1, vt1.c0, vt0.c0))) COLLATE BINARY) ISNULL)) GROUP BY vt0.c1, vt0.c2, vt0.c0;
SELECT ALL vt0.c1, vt0.c2, vt0.c0 FROM vt1 INNER JOIN vt0 ON ((GLOB(vt1.c0, vt0.c1))||(0.7070134711483131)) GROUP BY vt0.c1, vt0.c2, vt0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(vt1.c0) COLLATE RTRIM UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(vt1.c0) COLLATE RTRIM)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(vt1.c0) COLLATE RTRIM) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(vt1.c0) COLLATE RTRIM UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(vt1.c0) COLLATE RTRIM)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(vt1.c0) COLLATE RTRIM) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CASE ((vt0.c1)||(vt0.c0))  WHEN ((vt0.c1)<(vt0.c0)) THEN CAST(vt0.c2 AS TEXT) ELSE vt0.c0 END) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CASE ((vt0.c1)||(vt0.c0))  WHEN ((vt0.c1)<(vt0.c0)) THEN CAST(vt0.c2 AS TEXT) ELSE vt0.c0 END))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((CASE ((vt0.c1)||(vt0.c0))  WHEN ((vt0.c1)<(vt0.c0)) THEN CAST(vt0.c2 AS TEXT) ELSE vt0.c0 END) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) IN ())) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) IN ())))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) IN ())) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((((vt1.c0) IS TRUE))AND('20328563')))OR(vt1.c0))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((((vt1.c0) IS TRUE))AND('20328563')))OR(vt1.c0))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((((((vt1.c0) IS TRUE))AND('20328563')))OR(vt1.c0))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0, t0.c50, t0.c46, vt0.c0, t0.c0 FROM vt0, vt1 NATURAL JOIN t0 GROUP BY vt1.c0, t0.c50, t0.c46, vt0.c0, t0.c0;
SELECT ALL vt1.c0, t0.c50, t0.c46, vt0.c0, t0.c0 FROM vt0, vt1 NATURAL JOIN t0 GROUP BY vt1.c0, t0.c50, t0.c46, vt0.c0, t0.c0 HAVING SUM(COUNT(SUM(GROUP_CONCAT(t0.c50)))) UNION ALL SELECT ALL vt1.c0, t0.c50, t0.c46, vt0.c0, t0.c0 FROM vt0, vt1 NATURAL JOIN t0 GROUP BY vt1.c0, t0.c50, t0.c46, vt0.c0, t0.c0 HAVING (NOT (SUM(COUNT(SUM(GROUP_CONCAT(t0.c50)))))) UNION ALL SELECT vt1.c0, t0.c50, t0.c46, vt0.c0, t0.c0 FROM vt0, vt1 NATURAL JOIN t0 GROUP BY vt1.c0, t0.c50, t0.c46, vt0.c0, t0.c0 HAVING ((SUM(COUNT(SUM(GROUP_CONCAT(t0.c50))))) ISNULL);
SELECT ALL * FROM vt1, t0 NOT INDEXED, vt0;
SELECT * FROM vt1, t0, vt0 WHERE (((((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c1)))|(vt0.c0))) UNION ALL SELECT ALL * FROM vt1, t0, vt0 WHERE ((NOT (((((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c1)))|(vt0.c0))))) UNION ALL SELECT * FROM vt1, t0, vt0 WHERE (((((((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c1)))|(vt0.c0))) ISNULL));
SELECT ALL * FROM vt1, t0 NOT INDEXED, vt0;
SELECT DISTINCT vt1.c0, vt0.c2, vt0.c0 FROM vt1, vt0;
SELECT DISTINCT vt1.c0, vt0.c2, vt0.c0 FROM vt1, vt0 WHERE ((((vt0.c1) NOT NULL) IN ())) UNION SELECT DISTINCT vt1.c0, vt0.c2, vt0.c0 FROM vt1, vt0 WHERE ((NOT ((((vt0.c1) NOT NULL) IN ())))) UNION SELECT DISTINCT vt1.c0, vt0.c2, vt0.c0 FROM vt1, vt0 WHERE ((((((vt0.c1) NOT NULL) IN ())) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c2, vt0.c0 FROM vt1, vt0;
SELECT ALL t0.c46, t0.c0, t0.c50 FROM t0 GROUP BY t0.c46, t0.c0, t0.c50;
SELECT t0.c46, t0.c0, t0.c50 FROM t0 WHERE ((((t0.c0 IN ()))>>(((t0.c50) BETWEEN (t0.c46) AND (t0.c0))))) GROUP BY t0.c46, t0.c0, t0.c50 UNION SELECT t0.c46, t0.c0, t0.c50 FROM t0 WHERE ((NOT ((((t0.c0 IN ()))>>(((t0.c50) BETWEEN (t0.c46) AND (t0.c0))))))) GROUP BY t0.c46, t0.c0, t0.c50 UNION SELECT t0.c46, t0.c0, t0.c50 FROM t0 WHERE ((((((t0.c0 IN ()))>>(((t0.c50) BETWEEN (t0.c46) AND (t0.c0))))) ISNULL)) GROUP BY t0.c46, t0.c0, t0.c50;
SELECT ALL t0.c46, t0.c0, t0.c50 FROM t0 GROUP BY t0.c46, t0.c0, t0.c50;
SELECT t0.c50, t0.c0, t0.c46 FROM t0 GROUP BY t0.c50, t0.c0, t0.c46;
SELECT ALL t0.c50, t0.c0, t0.c46 FROM t0 GROUP BY t0.c50, t0.c0, t0.c46 HAVING COUNT(*) UNION ALL SELECT t0.c50, t0.c0, t0.c46 FROM t0 GROUP BY t0.c50, t0.c0, t0.c46 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c50, t0.c0, t0.c46 FROM t0 GROUP BY t0.c50, t0.c0, t0.c46 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c50, t0.c0, t0.c46 FROM t0 GROUP BY t0.c50, t0.c0, t0.c46;
SELECT ALL t0.c50, t0.c0, t0.c46 FROM t0 GROUP BY t0.c50, t0.c0, t0.c46 HAVING COUNT(*) UNION ALL SELECT t0.c50, t0.c0, t0.c46 FROM t0 GROUP BY t0.c50, t0.c0, t0.c46 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c50, t0.c0, t0.c46 FROM t0 GROUP BY t0.c50, t0.c0, t0.c46 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c50, t0.c0, t0.c46 FROM t0 GROUP BY t0.c50, t0.c0, t0.c46;
SELECT * FROM vt1, vt0, t0;
SELECT * FROM vt1, vt0, t0 WHERE (((CASE WHEN vt1.c0 THEN vt0.c2 END)%(((((((((vt0.c1)AND(vt0.c1)))OR(t0.c50)))OR(vt0.c2)))AND(vt1.c0))))) UNION ALL SELECT * FROM vt1, vt0, t0 WHERE ((NOT (((CASE WHEN vt1.c0 THEN vt0.c2 END)%(((((((((vt0.c1)AND(vt0.c1)))OR(t0.c50)))OR(vt0.c2)))AND(vt1.c0))))))) UNION ALL SELECT ALL * FROM vt1, vt0, t0 WHERE (((((CASE WHEN vt1.c0 THEN vt0.c2 END)%(((((((((vt0.c1)AND(vt0.c1)))OR(t0.c50)))OR(vt0.c2)))AND(vt1.c0))))) ISNULL));
SELECT * FROM vt1, vt0, t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ('677192214') UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ('677192214'))) UNION SELECT DISTINCT * FROM t0 WHERE ((('677192214') ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((CAST(vt1.c0 AS NUMERIC)) NOT NULL)) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((CAST(vt1.c0 AS NUMERIC)) NOT NULL)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((CAST(vt1.c0 AS NUMERIC)) NOT NULL)) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CASE WHEN ((MAX(vt0.c2))&(MAX(vt0.c2))) THEN AVG(COUNT(COUNT(*))) WHEN COUNT(vt0.c1) THEN MIN(vt0.c1) WHEN COUNT(*) THEN MIN(COUNT(vt0.c1)) END UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CASE WHEN ((MAX(vt0.c2))&(MAX(vt0.c2))) THEN AVG(COUNT(COUNT(*))) WHEN COUNT(vt0.c1) THEN MIN(vt0.c1) WHEN COUNT(*) THEN MIN(COUNT(vt0.c1)) END)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CASE WHEN ((MAX(vt0.c2))&(MAX(vt0.c2))) THEN AVG(COUNT(COUNT(*))) WHEN COUNT(vt0.c1) THEN MIN(vt0.c1) WHEN COUNT(*) THEN MIN(COUNT(vt0.c1)) END) ISNULL);
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE ((NOT ((('350654888') NOT BETWEEN (vt1.c0) AND (vt1.c0))))) UNION ALL SELECT * FROM vt1 WHERE ((NOT ((NOT ((('350654888') NOT BETWEEN (vt1.c0) AND (vt1.c0))))))) UNION ALL SELECT ALL * FROM vt1 WHERE ((((NOT ((('350654888') NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM vt1, vt0, t0;
SELECT DISTINCT * FROM vt1, vt0, t0 WHERE (((x'') IS TRUE)) UNION SELECT DISTINCT * FROM vt1, vt0, t0 WHERE ((NOT (((x'') IS TRUE)))) UNION SELECT DISTINCT * FROM vt1, vt0, t0 WHERE (((((x'') IS TRUE)) ISNULL));
SELECT DISTINCT * FROM vt1, vt0, t0;
SELECT ALL vt0.c2, vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON CAST(((t0.c50) BETWEEN ('2R\8/g') AND (t0.c50)) AS REAL) LEFT OUTER JOIN t0 ON (((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt1.c0)) IN ()) GROUP BY vt0.c2, vt0.c0;
SELECT ALL t0.c50, t0.c0, t0.c46 FROM t0 GROUP BY t0.c50, t0.c0, t0.c46;
SELECT ALL t0.c50, t0.c0, t0.c46 FROM t0 GROUP BY t0.c50, t0.c0, t0.c46 HAVING MIN(MAX(TOTAL(AVG(t0.c46)))) UNION ALL SELECT ALL t0.c50, t0.c0, t0.c46 FROM t0 GROUP BY t0.c50, t0.c0, t0.c46 HAVING (NOT (MIN(MAX(TOTAL(AVG(t0.c46)))))) UNION ALL SELECT ALL t0.c50, t0.c0, t0.c46 FROM t0 GROUP BY t0.c50, t0.c0, t0.c46 HAVING ((MIN(MAX(TOTAL(AVG(t0.c46))))) ISNULL);
SELECT ALL vt1.c0 FROM vt1, t0;
SELECT ALL vt1.c0 FROM vt1, t0 WHERE (CASE json_array_length(t0.c0)  WHEN ((vt1.c0)&(t0.c50)) THEN LOWER(DISTINCT x'') ELSE ((t0.c0)LIKE(t0.c50)) END) UNION ALL SELECT vt1.c0 FROM vt1, t0 WHERE ((NOT (CASE json_array_length(t0.c0)  WHEN ((vt1.c0)&(t0.c50)) THEN LOWER(DISTINCT x'') ELSE ((t0.c0)LIKE(t0.c50)) END))) UNION ALL SELECT ALL vt1.c0 FROM vt1, t0 WHERE (((CASE json_array_length(t0.c0)  WHEN ((vt1.c0)&(t0.c50)) THEN LOWER(DISTINCT x'') ELSE ((t0.c0)LIKE(t0.c50)) END) ISNULL));
SELECT DISTINCT vt1.c0 FROM t0, vt0, vt1;
SELECT DISTINCT vt1.c0 FROM t0, vt0, vt1 WHERE (CASE CAST(vt0.c1 AS NUMERIC)  WHEN ((t0.c0) ISNULL) THEN ((vt0.c0) ISNULL) ELSE x'' END) UNION SELECT DISTINCT vt1.c0 FROM t0, vt0, vt1 WHERE ((NOT (CASE CAST(vt0.c1 AS NUMERIC)  WHEN ((t0.c0) ISNULL) THEN ((vt0.c0) ISNULL) ELSE x'' END))) UNION SELECT DISTINCT vt1.c0 FROM t0, vt0, vt1 WHERE (((CASE CAST(vt0.c1 AS NUMERIC)  WHEN ((t0.c0) ISNULL) THEN ((vt0.c0) ISNULL) ELSE x'' END) ISNULL));
SELECT DISTINCT vt1.c0 FROM t0, vt0, vt1;
SELECT ALL t0.c0, vt0.c2, t0.c50, vt0.c0, vt0.c1, t0.c46 FROM t0, vt0 GROUP BY t0.c0, vt0.c2, t0.c50, vt0.c0, vt0.c1, t0.c46;
SELECT t0.c0, vt0.c2, t0.c50, vt0.c0, vt0.c1, t0.c46 FROM t0, vt0 WHERE ((((~ (vt0.c0))) IS TRUE)) GROUP BY t0.c0, vt0.c2, t0.c50, vt0.c0, vt0.c1, t0.c46 UNION SELECT t0.c0, vt0.c2, t0.c50, vt0.c0, vt0.c1, t0.c46 FROM t0, vt0 WHERE ((NOT ((((~ (vt0.c0))) IS TRUE)))) GROUP BY t0.c0, vt0.c2, t0.c50, vt0.c0, vt0.c1, t0.c46 UNION SELECT t0.c0, vt0.c2, t0.c50, vt0.c0, vt0.c1, t0.c46 FROM t0, vt0 WHERE ((((((~ (vt0.c0))) IS TRUE)) ISNULL)) GROUP BY t0.c0, vt0.c2, t0.c50, vt0.c0, vt0.c1, t0.c46;
SELECT ALL t0.c0, vt0.c2, t0.c50, vt0.c0, vt0.c1, t0.c46 FROM t0, vt0 GROUP BY t0.c0, vt0.c2, t0.c50, vt0.c0, vt0.c1, t0.c46;
SELECT vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c2;
SELECT vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c2 HAVING rtreenode(((TOTAL(vt0.c2)) ISNULL), ((AVG(vt0.c0))AND(vt0.c1))) UNION ALL SELECT ALL vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c2 HAVING (NOT (rtreenode(((TOTAL(vt0.c2)) ISNULL), ((AVG(vt0.c0))AND(vt0.c1))))) UNION ALL SELECT vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c2 HAVING ((rtreenode(((TOTAL(vt0.c2)) ISNULL), ((AVG(vt0.c0))AND(vt0.c1)))) ISNULL);
SELECT vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c2;
SELECT vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c2 HAVING rtreenode(((TOTAL(vt0.c2)) ISNULL), ((AVG(vt0.c0))AND(vt0.c1))) UNION ALL SELECT ALL vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c2 HAVING (NOT (rtreenode(((TOTAL(vt0.c2)) ISNULL), ((AVG(vt0.c0))AND(vt0.c1))))) UNION ALL SELECT vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c2 HAVING ((rtreenode(((TOTAL(vt0.c2)) ISNULL), ((AVG(vt0.c0))AND(vt0.c1)))) ISNULL);
SELECT vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c2;
SELECT t0.c50, vt0.c1 FROM vt1, vt0 LEFT OUTER JOIN t0 ON t0.c46;
SELECT ALL t0.c50, vt0.c1 FROM vt1, vt0 LEFT OUTER JOIN t0 ON t0.c46 WHERE (CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE NOCASE) UNION ALL SELECT ALL t0.c50, vt0.c1 FROM vt1, vt0 LEFT OUTER JOIN t0 ON t0.c46 WHERE ((NOT (CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE NOCASE))) UNION ALL SELECT ALL t0.c50, vt0.c1 FROM vt1, vt0 LEFT OUTER JOIN t0 ON t0.c46 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE NOCASE) ISNULL));
SELECT t0.c50, vt0.c1 FROM vt1, vt0 LEFT OUTER JOIN t0 ON t0.c46;
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN vt0 ON vt0.c2 CROSS JOIN vt1 ON 0.1682082194309069;
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN vt0 ON vt0.c2 CROSS JOIN vt1 ON 0.1682082194309069 WHERE (CASE WHEN CASE vt0.c2  WHEN t0.c0 THEN vt1.c0 WHEN vt0.c2 THEN t0.c0 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN t0.c50 THEN vt1.c0 END THEN t0.c0 ELSE ((vt0.c2) BETWEEN (0.6000444282226526) AND (t0.c0)) END) UNION SELECT DISTINCT * FROM t0 LEFT OUTER JOIN vt0 ON vt0.c2 CROSS JOIN vt1 ON 0.1682082194309069 WHERE ((NOT (CASE WHEN CASE vt0.c2  WHEN t0.c0 THEN vt1.c0 WHEN vt0.c2 THEN t0.c0 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN t0.c50 THEN vt1.c0 END THEN t0.c0 ELSE ((vt0.c2) BETWEEN (0.6000444282226526) AND (t0.c0)) END))) UNION SELECT DISTINCT * FROM t0 LEFT OUTER JOIN vt0 ON vt0.c2 CROSS JOIN vt1 ON 0.1682082194309069 WHERE (((CASE WHEN CASE vt0.c2  WHEN t0.c0 THEN vt1.c0 WHEN vt0.c2 THEN t0.c0 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN t0.c50 THEN vt1.c0 END THEN t0.c0 ELSE ((vt0.c2) BETWEEN (0.6000444282226526) AND (t0.c0)) END) ISNULL));
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN vt0 ON vt0.c2 CROSS JOIN vt1 ON 0.1682082194309069;
SELECT ALL t0.c50, t0.c46, t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c50, t0.c46, t0.c0, vt1.c0;
SELECT ALL t0.c50, t0.c46, t0.c0, vt1.c0 FROM t0, vt1 WHERE (CAST(t0.c46 COLLATE NOCASE AS INTEGER)) GROUP BY t0.c50, t0.c46, t0.c0, vt1.c0 UNION SELECT t0.c50, t0.c46, t0.c0, vt1.c0 FROM t0, vt1 WHERE ((NOT (CAST(t0.c46 COLLATE NOCASE AS INTEGER)))) GROUP BY t0.c50, t0.c46, t0.c0, vt1.c0 UNION SELECT ALL t0.c50, t0.c46, t0.c0, vt1.c0 FROM t0, vt1 WHERE (((CAST(t0.c46 COLLATE NOCASE AS INTEGER)) ISNULL)) GROUP BY t0.c50, t0.c46, t0.c0, vt1.c0;
SELECT ALL t0.c50, t0.c46, t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c50, t0.c46, t0.c0, vt1.c0;
SELECT ALL t0.c50, t0.c0 FROM t0, vt1 GROUP BY t0.c50, t0.c0;
SELECT t0.c50, t0.c0 FROM t0, vt1 GROUP BY t0.c50, t0.c0 HAVING ((((COUNT(*))OR(COUNT(0.625497738478908))))+(AVG(t0.c50))) UNION ALL SELECT ALL t0.c50, t0.c0 FROM t0, vt1 GROUP BY t0.c50, t0.c0 HAVING (NOT (((((COUNT(*))OR(COUNT(0.625497738478908))))+(AVG(t0.c50))))) UNION ALL SELECT t0.c50, t0.c0 FROM t0, vt1 GROUP BY t0.c50, t0.c0 HAVING ((((((COUNT(*))OR(COUNT(0.625497738478908))))+(AVG(t0.c50)))) ISNULL);
SELECT ALL t0.c50, t0.c0 FROM t0, vt1 GROUP BY t0.c50, t0.c0;
SELECT t0.c50, t0.c0 FROM t0, vt1 GROUP BY t0.c50, t0.c0 HAVING ((((COUNT(*))OR(COUNT(0.625497738478908))))+(AVG(t0.c50))) UNION ALL SELECT ALL t0.c50, t0.c0 FROM t0, vt1 GROUP BY t0.c50, t0.c0 HAVING (NOT (((((COUNT(*))OR(COUNT(0.625497738478908))))+(AVG(t0.c50))))) UNION ALL SELECT t0.c50, t0.c0 FROM t0, vt1 GROUP BY t0.c50, t0.c0 HAVING ((((((COUNT(*))OR(COUNT(0.625497738478908))))+(AVG(t0.c50)))) ISNULL);
SELECT ALL t0.c50, t0.c0 FROM t0, vt1 GROUP BY t0.c50, t0.c0;
SELECT ALL TOTAL(((NULLIF(x'', vt1.c0))IS(((vt1.c0)&(vt1.c0))))) FROM vt1;
SELECT * FROM vt0, t0, vt1;
SELECT * FROM vt0, t0, vt1 WHERE (((((((t0.c0) BETWEEN (vt1.c0) AND (vt0.c2)))OR((vt0.c0 IN ()))))OR(CASE vt1.c0  WHEN vt0.c1 THEN 0xae1e493 END))) UNION ALL SELECT * FROM vt0, t0, vt1 WHERE ((NOT (((((((t0.c0) BETWEEN (vt1.c0) AND (vt0.c2)))OR((vt0.c0 IN ()))))OR(CASE vt1.c0  WHEN vt0.c1 THEN 0Xae1e493 END))))) UNION ALL SELECT * FROM vt0, t0, vt1 WHERE (((((((((t0.c0) BETWEEN (vt1.c0) AND (vt0.c2)))OR((vt0.c0 IN ()))))OR(CASE vt1.c0  WHEN vt0.c1 THEN 0Xae1e493 END))) ISNULL));
SELECT * FROM vt0, t0, vt1;
SELECT DISTINCT t0.c50, t0.c0, vt0.c0, t0.c46, vt0.c2 FROM t0, vt1, vt0;
SELECT DISTINCT t0.c50, t0.c0, vt0.c0, t0.c46, vt0.c2 FROM t0, vt1, vt0 WHERE (((((t0.c46)OR(CASE WHEN x'' THEN vt0.c1 END)))OR(CHAR(vt0.c2)))) UNION SELECT DISTINCT t0.c50, t0.c0, vt0.c0, t0.c46, vt0.c2 FROM t0, vt1, vt0 WHERE ((NOT (((((t0.c46)OR(CASE WHEN x'' THEN vt0.c1 END)))OR(CHAR(vt0.c2)))))) UNION SELECT DISTINCT t0.c50, t0.c0, vt0.c0, t0.c46, vt0.c2 FROM t0, vt1, vt0 WHERE (((((((t0.c46)OR(CASE WHEN x'' THEN vt0.c1 END)))OR(CHAR(vt0.c2)))) ISNULL));
SELECT DISTINCT t0.c50, t0.c0, vt0.c0, t0.c46, vt0.c2 FROM t0, vt1, vt0;
SELECT ALL vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c1;
SELECT vt0.c2, vt0.c1 FROM vt0 WHERE (((HEX(vt0.c1)) NOTNULL)) GROUP BY vt0.c2, vt0.c1 UNION SELECT ALL vt0.c2, vt0.c1 FROM vt0 WHERE ((NOT (((HEX(vt0.c1)) NOTNULL)))) GROUP BY vt0.c2, vt0.c1 UNION SELECT ALL vt0.c2, vt0.c1 FROM vt0 WHERE (((((HEX(vt0.c1)) NOTNULL)) ISNULL)) GROUP BY vt0.c2, vt0.c1;
SELECT ALL vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING COUNT(((GROUP_CONCAT(vt0.c0)) BETWEEN (vt0.c2) AND (vt0.c0))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (COUNT(((GROUP_CONCAT(vt0.c0)) BETWEEN (vt0.c2) AND (vt0.c0))))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((COUNT(((GROUP_CONCAT(vt0.c0)) BETWEEN (vt0.c2) AND (vt0.c0)))) ISNULL);
SELECT TOTAL(vt0.c2) FROM vt0, vt1 ORDER BY 0.5765744890123329  NULLS LAST, (((((vt0.c2)) BETWEEN ((NULL)) AND ((vt0.c2)))) ISNULL);
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON ((((vt0.c1) NOT BETWEEN (vt1.c0) AND (''))) NOTNULL);
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON ((((vt0.c1) NOT BETWEEN (vt1.c0) AND (''))) NOTNULL) WHERE (((vt0.c0) NOT BETWEEN ('}M') AND (vt0.c2)) COLLATE BINARY) UNION ALL SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON ((((vt0.c1) NOT BETWEEN (vt1.c0) AND (''))) NOTNULL) WHERE ((NOT (((vt0.c0) NOT BETWEEN ('}M') AND (vt0.c2)) COLLATE BINARY))) UNION ALL SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON ((((vt0.c1) NOT BETWEEN (vt1.c0) AND (''))) NOTNULL) WHERE (((((vt0.c0) NOT BETWEEN ('}M') AND (vt0.c2)) COLLATE BINARY) ISNULL));
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON ((((vt0.c1) NOT BETWEEN (vt1.c0) AND (''))) NOTNULL);
SELECT DISTINCT * FROM vt1, t0 NATURAL JOIN vt0;
SELECT DISTINCT * FROM vt1, t0 NATURAL JOIN vt0 WHERE (((vt0.c0) ISNULL)) UNION SELECT DISTINCT * FROM vt1, t0 NATURAL JOIN vt0 WHERE ((NOT (((vt0.c0) ISNULL)))) UNION SELECT DISTINCT * FROM vt1, t0 NATURAL JOIN vt0 WHERE (((((vt0.c0) ISNULL)) ISNULL));
SELECT DISTINCT * FROM vt1, t0 NATURAL JOIN vt0;
SELECT ALL vt0.c2 FROM vt0 GROUP BY vt0.c2;
SELECT ALL vt0.c2 FROM vt0 WHERE (vt0.c2) GROUP BY vt0.c2 UNION SELECT ALL vt0.c2 FROM vt0 WHERE ((NOT (vt0.c2))) GROUP BY vt0.c2 UNION SELECT ALL vt0.c2 FROM vt0 WHERE (((vt0.c2) ISNULL)) GROUP BY vt0.c2;
SELECT ALL vt0.c2 FROM vt0 GROUP BY vt0.c2;
SELECT ALL vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c2;
SELECT ALL vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c2 HAVING SUM(vt0.c2) COLLATE RTRIM UNION ALL SELECT ALL vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c2 HAVING (NOT (SUM(vt0.c2) COLLATE RTRIM)) UNION ALL SELECT ALL vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c2 HAVING ((SUM(vt0.c2) COLLATE RTRIM) ISNULL);
SELECT ALL vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c2;
SELECT ALL vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c2 HAVING SUM(vt0.c2) COLLATE RTRIM UNION ALL SELECT ALL vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c2 HAVING (NOT (SUM(vt0.c2) COLLATE RTRIM)) UNION ALL SELECT ALL vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c2 HAVING ((SUM(vt0.c2) COLLATE RTRIM) ISNULL);
SELECT ALL vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c2;
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE (((CAST(vt1.c0 AS INTEGER))AND(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) UNION ALL SELECT * FROM vt1 WHERE ((NOT (((CAST(vt1.c0 AS INTEGER))AND(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))))) UNION ALL SELECT ALL * FROM vt1 WHERE (((((CAST(vt1.c0 AS INTEGER))AND(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN t0 ON CAST((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c50))) AS BLOB);
SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN t0 ON CAST((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c50))) AS BLOB) WHERE (CAST(((((t0.c50)OR(t0.c0)))OR(vt1.c0)) AS BLOB)) UNION SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN t0 ON CAST((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c50))) AS BLOB) WHERE ((NOT (CAST(((((t0.c50)OR(t0.c0)))OR(vt1.c0)) AS BLOB)))) UNION SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN t0 ON CAST((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c50))) AS BLOB) WHERE (((CAST(((((t0.c50)OR(t0.c0)))OR(vt1.c0)) AS BLOB)) ISNULL));
SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN t0 ON CAST((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c50))) AS BLOB);
SELECT ALL t0.c50, vt0.c0, vt0.c1 FROM vt0, vt1, t0 GROUP BY t0.c50, vt0.c0, vt0.c1;
SELECT ALL t0.c50, vt0.c0, vt0.c1 FROM vt0, vt1, t0 WHERE (((((((vt0.c1)AND(t0.c46)))OR(t0.c50)))%((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0)))))) GROUP BY t0.c50, vt0.c0, vt0.c1 UNION SELECT ALL t0.c50, vt0.c0, vt0.c1 FROM vt0, vt1, t0 WHERE ((NOT (((((((vt0.c1)AND(t0.c46)))OR(t0.c50)))%((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0)))))))) GROUP BY t0.c50, vt0.c0, vt0.c1 UNION SELECT t0.c50, vt0.c0, vt0.c1 FROM vt0, vt1, t0 WHERE (((((((((vt0.c1)AND(t0.c46)))OR(t0.c50)))%((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0)))))) ISNULL)) GROUP BY t0.c50, vt0.c0, vt0.c1;
SELECT ALL t0.c50, vt0.c0, vt0.c1 FROM vt0, vt1, t0 GROUP BY t0.c50, vt0.c0, vt0.c1;
SELECT ALL t0.c50, t0.c46, t0.c0 FROM t0 GROUP BY t0.c50, t0.c46, t0.c0;
SELECT t0.c50, t0.c46, t0.c0 FROM t0 GROUP BY t0.c50, t0.c46, t0.c0 HAVING ((MIN(t0.c46))<<(((t0.c46) NOT BETWEEN (t0.c0) AND (TOTAL(t0.c46))))) UNION ALL SELECT t0.c50, t0.c46, t0.c0 FROM t0 GROUP BY t0.c50, t0.c46, t0.c0 HAVING (NOT (((MIN(t0.c46))<<(((t0.c46) NOT BETWEEN (t0.c0) AND (TOTAL(t0.c46))))))) UNION ALL SELECT t0.c50, t0.c46, t0.c0 FROM t0 GROUP BY t0.c50, t0.c46, t0.c0 HAVING ((((MIN(t0.c46))<<(((t0.c46) NOT BETWEEN (t0.c0) AND (TOTAL(t0.c46)))))) ISNULL);
SELECT ALL t0.c50, t0.c46, t0.c0 FROM t0 GROUP BY t0.c50, t0.c46, t0.c0;
SELECT t0.c50, t0.c46, t0.c0 FROM t0 GROUP BY t0.c50, t0.c46, t0.c0 HAVING ((MIN(t0.c46))<<(((t0.c46) NOT BETWEEN (t0.c0) AND (TOTAL(t0.c46))))) UNION ALL SELECT t0.c50, t0.c46, t0.c0 FROM t0 GROUP BY t0.c50, t0.c46, t0.c0 HAVING (NOT (((MIN(t0.c46))<<(((t0.c46) NOT BETWEEN (t0.c0) AND (TOTAL(t0.c46))))))) UNION ALL SELECT t0.c50, t0.c46, t0.c0 FROM t0 GROUP BY t0.c50, t0.c46, t0.c0 HAVING ((((MIN(t0.c46))<<(((t0.c46) NOT BETWEEN (t0.c0) AND (TOTAL(t0.c46)))))) ISNULL);
SELECT ALL t0.c50, t0.c46, t0.c0 FROM t0 GROUP BY t0.c50, t0.c46, t0.c0;
SELECT ALL vt0.c2, t0.c50, vt0.c1, t0.c46 FROM vt1, vt0, t0;
SELECT vt0.c2, t0.c50, vt0.c1, t0.c46 FROM vt1, vt0, t0 WHERE (vt0.c1) UNION ALL SELECT ALL vt0.c2, t0.c50, vt0.c1, t0.c46 FROM vt1, vt0, t0 WHERE ((NOT (vt0.c1))) UNION ALL SELECT vt0.c2, t0.c50, vt0.c1, t0.c46 FROM vt1, vt0, t0 WHERE (((vt0.c1) ISNULL));
SELECT ALL vt0.c2, t0.c50, vt0.c1, t0.c46 FROM vt1, vt0, t0;
SELECT DISTINCT vt1.c0, vt0.c2, t0.c0, t0.c46, vt0.c0, t0.c50 FROM vt1, t0 CROSS JOIN vt0 ON ((t0.c46) BETWEEN (vt0.c2 COLLATE RTRIM) AND (vt0.c2 COLLATE NOCASE));
SELECT DISTINCT vt1.c0, vt0.c2, t0.c0, t0.c46, vt0.c0, t0.c50 FROM vt1, t0 CROSS JOIN vt0 ON ((t0.c46) BETWEEN (vt0.c2 COLLATE RTRIM) AND (vt0.c2 COLLATE NOCASE)) WHERE ((((vt0.c0)) NOT BETWEEN (((vt0.c1 IN ()))) AND ((CASE WHEN vt0.c1 THEN vt0.c1 END)))) UNION SELECT DISTINCT vt1.c0, vt0.c2, t0.c0, t0.c46, vt0.c0, t0.c50 FROM vt1, t0 CROSS JOIN vt0 ON ((t0.c46) BETWEEN (vt0.c2 COLLATE RTRIM) AND (vt0.c2 COLLATE NOCASE)) WHERE ((NOT ((((vt0.c0)) NOT BETWEEN (((vt0.c1 IN ()))) AND ((CASE WHEN vt0.c1 THEN vt0.c1 END)))))) UNION SELECT DISTINCT vt1.c0, vt0.c2, t0.c0, t0.c46, vt0.c0, t0.c50 FROM vt1, t0 CROSS JOIN vt0 ON ((t0.c46) BETWEEN (vt0.c2 COLLATE RTRIM) AND (vt0.c2 COLLATE NOCASE)) WHERE ((((((vt0.c0)) NOT BETWEEN (((vt0.c1 IN ()))) AND ((CASE WHEN vt0.c1 THEN vt0.c1 END)))) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c2, t0.c0, t0.c46, vt0.c0, t0.c50 FROM vt1, t0 CROSS JOIN vt0 ON ((t0.c46) BETWEEN (vt0.c2 COLLATE RTRIM) AND (vt0.c2 COLLATE NOCASE));
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((+ (vt1.c0)) COLLATE BINARY) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((+ (vt1.c0)) COLLATE BINARY))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((+ (vt1.c0)) COLLATE BINARY) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c2, t0.c46, vt0.c0 FROM vt1 CROSS JOIN t0 ON ((((vt0.c0)/(vt1.c0))) IS TRUE) RIGHT OUTER JOIN vt0 ON UNICODE(((vt0.c0) IS TRUE)) GROUP BY vt0.c2, t0.c46, vt0.c0;
SELECT * FROM vt1;
SELECT ALL * FROM vt1 WHERE (CASE WHEN vt1.c0 COLLATE RTRIM THEN ((vt1.c0)LIKE(vt1.c0)) WHEN vt1.c0 COLLATE RTRIM THEN vt1.c0 WHEN TYPEOF(DISTINCT vt1.c0) THEN CAST(vt1.c0 AS REAL) ELSE 't灍쪎9*G\r+' END) UNION ALL SELECT * FROM vt1 WHERE ((NOT (CASE WHEN vt1.c0 COLLATE RTRIM THEN ((vt1.c0)LIKE(vt1.c0)) WHEN vt1.c0 COLLATE RTRIM THEN vt1.c0 WHEN TYPEOF(DISTINCT vt1.c0) THEN CAST(vt1.c0 AS REAL) ELSE 't灍쪎9*G\r+' END))) UNION ALL SELECT * FROM vt1 WHERE (((CASE WHEN vt1.c0 COLLATE RTRIM THEN ((vt1.c0)LIKE(vt1.c0)) WHEN vt1.c0 COLLATE RTRIM THEN vt1.c0 WHEN TYPEOF(DISTINCT vt1.c0) THEN CAST(vt1.c0 AS REAL) ELSE 't灍쪎9*G\r+' END) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((((t0.c50) IS TRUE))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((((t0.c50) IS TRUE))))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((((t0.c50) IS TRUE))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((('Rw') IS TRUE)) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((('Rw') IS TRUE)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((('Rw') IS TRUE)) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0, vt0.c1, t0.c0, vt0.c0, t0.c50, t0.c46 FROM vt0, t0, vt1 GROUP BY vt1.c0, vt0.c1, t0.c0, vt0.c0, t0.c50, t0.c46;
SELECT vt1.c0, vt0.c1, t0.c0, vt0.c0, t0.c50, t0.c46 FROM vt0, t0, vt1 GROUP BY vt1.c0, vt0.c1, t0.c0, vt0.c0, t0.c50, t0.c46 HAVING TOTAL(((((t0.c0)OR(t0.c50)))OR(COUNT(*)))) UNION ALL SELECT vt1.c0, vt0.c1, t0.c0, vt0.c0, t0.c50, t0.c46 FROM vt0, t0, vt1 GROUP BY vt1.c0, vt0.c1, t0.c0, vt0.c0, t0.c50, t0.c46 HAVING (NOT (TOTAL(((((t0.c0)OR(t0.c50)))OR(COUNT(*)))))) UNION ALL SELECT vt1.c0, vt0.c1, t0.c0, vt0.c0, t0.c50, t0.c46 FROM vt0, t0, vt1 GROUP BY vt1.c0, vt0.c1, t0.c0, vt0.c0, t0.c50, t0.c46 HAVING ((TOTAL(((((t0.c0)OR(t0.c50)))OR(COUNT(*))))) ISNULL);
SELECT vt0.c2, vt1.c0, vt0.c1 FROM vt1, t0, vt0;
SELECT vt0.c2, vt1.c0, vt0.c1 FROM vt1, t0, vt0 WHERE (CASE ((t0.c0)LIKE(vt1.c0))  WHEN json_valid(vt0.c1) THEN ((vt0.c0) NOTNULL) WHEN (+ (vt0.c2)) THEN vt1.c0 WHEN t0.c0 THEN ((vt1.c0)LIKE(vt1.c0)) ELSE ((((vt1.c0)OR(t0.c46)))AND(vt0.c1)) END) UNION ALL SELECT ALL vt0.c2, vt1.c0, vt0.c1 FROM vt1, t0, vt0 WHERE ((NOT (CASE ((t0.c0)LIKE(vt1.c0))  WHEN json_valid(vt0.c1) THEN ((vt0.c0) NOTNULL) WHEN (+ (vt0.c2)) THEN vt1.c0 WHEN t0.c0 THEN ((vt1.c0)LIKE(vt1.c0)) ELSE ((((vt1.c0)OR(t0.c46)))AND(vt0.c1)) END))) UNION ALL SELECT vt0.c2, vt1.c0, vt0.c1 FROM vt1, t0, vt0 WHERE (((CASE ((t0.c0)LIKE(vt1.c0))  WHEN json_valid(vt0.c1) THEN ((vt0.c0) NOTNULL) WHEN (+ (vt0.c2)) THEN vt1.c0 WHEN t0.c0 THEN ((vt1.c0)LIKE(vt1.c0)) ELSE ((((vt1.c0)OR(t0.c46)))AND(vt0.c1)) END) ISNULL));
SELECT vt0.c2, vt1.c0, vt0.c1 FROM vt1, t0, vt0;
SELECT DISTINCT vt0.c2, vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c2, vt0.c1, vt0.c0 FROM vt0 WHERE (CAST(vt0.c1 AS REAL) COLLATE RTRIM) UNION SELECT DISTINCT vt0.c2, vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (CAST(vt0.c1 AS REAL) COLLATE RTRIM))) UNION SELECT DISTINCT vt0.c2, vt0.c1, vt0.c0 FROM vt0 WHERE (((CAST(vt0.c1 AS REAL) COLLATE RTRIM) ISNULL));
SELECT DISTINCT vt0.c2, vt0.c1, vt0.c0 FROM vt0;
SELECT ALL t0.c50, t0.c0, t0.c46 FROM vt1, t0 GROUP BY t0.c50, t0.c0, t0.c46;
SELECT t0.c50, t0.c0, t0.c46 FROM vt1, t0 WHERE (((((t0.c50)GLOB(t0.c46))) BETWEEN (rtreenode(vt1.c0, vt1.c0)) AND (vt1.c0))) GROUP BY t0.c50, t0.c0, t0.c46 UNION SELECT t0.c50, t0.c0, t0.c46 FROM vt1, t0 WHERE ((NOT (((((t0.c50)GLOB(t0.c46))) BETWEEN (rtreenode(vt1.c0, vt1.c0)) AND (vt1.c0))))) GROUP BY t0.c50, t0.c0, t0.c46 UNION SELECT ALL t0.c50, t0.c0, t0.c46 FROM vt1, t0 WHERE (((((((t0.c50)GLOB(t0.c46))) BETWEEN (rtreenode(vt1.c0, vt1.c0)) AND (vt1.c0))) ISNULL)) GROUP BY t0.c50, t0.c0, t0.c46;
SELECT ALL t0.c50, t0.c0, t0.c46 FROM vt1, t0 GROUP BY t0.c50, t0.c0, t0.c46;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING AVG(((vt1.c0) ISNULL)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (AVG(((vt1.c0) ISNULL)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((AVG(((vt1.c0) ISNULL))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING AVG(((vt1.c0) ISNULL)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (AVG(((vt1.c0) ISNULL)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((AVG(((vt1.c0) ISNULL))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT * FROM t0, vt0, vt1;
SELECT ALL * FROM t0, vt0, vt1 WHERE (t0.c46) UNION ALL SELECT * FROM t0, vt0, vt1 WHERE ((NOT (t0.c46))) UNION ALL SELECT ALL * FROM t0, vt0, vt1 WHERE (((t0.c46) ISNULL));
SELECT * FROM t0, vt0, vt1;
SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON x'';
SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON x'' WHERE (CASE WHEN CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c2 END THEN (vt1.c0 IN ()) ELSE ((vt0.c2) BETWEEN (0.5499052682566047) AND (vt1.c0)) END) UNION SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON x'' WHERE ((NOT (CASE WHEN CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c2 END THEN (vt1.c0 IN ()) ELSE ((vt0.c2) BETWEEN (0.5499052682566047) AND (vt1.c0)) END))) UNION SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON x'' WHERE (((CASE WHEN CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c2 END THEN (vt1.c0 IN ()) ELSE ((vt0.c2) BETWEEN (0.5499052682566047) AND (vt1.c0)) END) ISNULL));
SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON x'';
SELECT t0.c0 FROM t0, vt1, vt0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, vt1, vt0 NOT INDEXED WHERE ((((vt1.c0)) BETWEEN ((((t0.c46)/(t0.c46)))) AND ((NULL)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0, vt1, vt0 WHERE ((NOT ((((vt1.c0)) BETWEEN ((((t0.c46)/(t0.c46)))) AND ((NULL)))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0, vt1, vt0 WHERE ((((((vt1.c0)) BETWEEN ((((t0.c46)/(t0.c46)))) AND ((NULL)))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0, vt1, vt0 GROUP BY t0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING CAST(MIN(MAX(GROUP_CONCAT(GROUP_CONCAT(vt1.c0)))) AS BLOB) COLLATE NOCASE UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (CAST(MIN(MAX(GROUP_CONCAT(GROUP_CONCAT(vt1.c0)))) AS BLOB) COLLATE NOCASE)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((CAST(MIN(MAX(GROUP_CONCAT(GROUP_CONCAT(vt1.c0)))) AS BLOB) COLLATE NOCASE) ISNULL);
SELECT ALL * FROM t0, vt1, vt0;
SELECT * FROM t0, vt1, vt0 WHERE ((NOT (((vt0.c2)||(vt0.c2))))) UNION ALL SELECT * FROM t0, vt1, vt0 WHERE ((NOT ((NOT (((vt0.c2)||(vt0.c2))))))) UNION ALL SELECT * FROM t0, vt1, vt0 WHERE ((((NOT (((vt0.c2)||(vt0.c2))))) ISNULL));
SELECT ALL * FROM t0, vt1, vt0;
SELECT DISTINCT t0.c0 FROM t0, vt1;
SELECT DISTINCT t0.c0 FROM t0, vt1 WHERE (0.8251054409702853) UNION SELECT DISTINCT t0.c0 FROM t0, vt1 WHERE ((NOT (0.8251054409702853))) UNION SELECT DISTINCT t0.c0 FROM t0 NOT INDEXED, vt1 WHERE (((0.8251054409702853) ISNULL));
SELECT DISTINCT t0.c0 FROM t0, vt1;
SELECT vt0.c2, t0.c0, vt0.c0, vt0.c1, vt1.c0, t0.c50 FROM vt0 INNER JOIN vt1 ON CAST(((t0.c46) BETWEEN (t0.c0) AND (vt1.c0)) AS BLOB) FULL OUTER JOIN t0 ON (NOT (((t0.c50) NOT BETWEEN (t0.c50) AND (t0.c50)))) GROUP BY vt0.c2, t0.c0, vt0.c0, vt0.c1, vt1.c0, t0.c50;
SELECT vt0.c2 FROM vt0 GROUP BY vt0.c2;
SELECT ALL vt0.c2 FROM vt0 GROUP BY vt0.c2 HAVING COUNT(SUM(vt0.c0)) UNION ALL SELECT ALL vt0.c2 FROM vt0 GROUP BY vt0.c2 HAVING (NOT (COUNT(SUM(vt0.c0)))) UNION ALL SELECT vt0.c2 FROM vt0 GROUP BY vt0.c2 HAVING ((COUNT(SUM(vt0.c0))) ISNULL);
SELECT * FROM t0, vt1 FULL OUTER JOIN vt0 ON vt0.c2;
SELECT ALL * FROM t0, vt1 FULL OUTER JOIN vt0 ON vt0.c2 WHERE (((((vt0.c2)AND((0.5734148813027949 IN (vt0.c1)))))AND((NOT (vt1.c0))))) UNION ALL SELECT * FROM t0, vt1 FULL OUTER JOIN vt0 ON vt0.c2 WHERE ((NOT (((((vt0.c2)AND((0.5734148813027949 IN (vt0.c1)))))AND((NOT (vt1.c0))))))) UNION ALL SELECT ALL * FROM t0, vt1 FULL OUTER JOIN vt0 ON vt0.c2 WHERE (((((((vt0.c2)AND((0.5734148813027949 IN (vt0.c1)))))AND((NOT (vt1.c0))))) ISNULL));
SELECT * FROM t0, vt1 FULL OUTER JOIN vt0 ON vt0.c2;
SELECT DISTINCT * FROM t0, vt1 FULL OUTER JOIN vt0 ON ((((t0.c50)<=(t0.c50))) BETWEEN (t0.c46) AND ((t0.c0 IN ())));
SELECT DISTINCT * FROM t0, vt1 FULL OUTER JOIN vt0 ON ((((t0.c50)<=(t0.c50))) BETWEEN (t0.c46) AND ((t0.c0 IN ()))) WHERE (((NOT (vt0.c2)) IN ())) UNION SELECT DISTINCT * FROM t0, vt1 FULL OUTER JOIN vt0 ON ((((t0.c50)<=(t0.c50))) BETWEEN (t0.c46) AND ((t0.c0 IN ()))) WHERE ((NOT (((NOT (vt0.c2)) IN ())))) UNION SELECT DISTINCT * FROM t0, vt1 FULL OUTER JOIN vt0 ON ((((t0.c50)<=(t0.c50))) BETWEEN (t0.c46) AND ((t0.c0 IN ()))) WHERE (((((NOT (vt0.c2)) IN ())) ISNULL));
SELECT DISTINCT * FROM t0, vt1 FULL OUTER JOIN vt0 ON ((((t0.c50)<=(t0.c50))) BETWEEN (t0.c46) AND ((t0.c0 IN ())));
SELECT ALL t0.c46, t0.c50, vt0.c1 FROM t0 INNER JOIN vt0 ON t0.c46 FULL OUTER JOIN vt1 ON LOWER(t0.c0 COLLATE RTRIM) GROUP BY t0.c46, t0.c50, vt0.c1;
SELECT ALL t0.c46, t0.c50, vt0.c1 FROM t0 INNER JOIN vt0 ON t0.c46 FULL OUTER JOIN vt1 ON LOWER(t0.c0 COLLATE RTRIM) WHERE (((vt1.c0) IS FALSE) COLLATE NOCASE) GROUP BY t0.c46, t0.c50, vt0.c1 UNION SELECT t0.c46, t0.c50, vt0.c1 FROM t0 INNER JOIN vt0 ON t0.c46 FULL OUTER JOIN vt1 ON LOWER(t0.c0 COLLATE RTRIM) WHERE ((NOT (((vt1.c0) IS FALSE) COLLATE NOCASE))) GROUP BY t0.c46, t0.c50, vt0.c1 UNION SELECT t0.c46, t0.c50, vt0.c1 FROM t0 INNER JOIN vt0 ON t0.c46 FULL OUTER JOIN vt1 ON LOWER(t0.c0 COLLATE RTRIM) WHERE (((((vt1.c0) IS FALSE) COLLATE NOCASE) ISNULL)) GROUP BY t0.c46, t0.c50, vt0.c1;
SELECT ALL t0.c46, t0.c50, vt0.c1 FROM t0 INNER JOIN vt0 ON t0.c46 FULL OUTER JOIN vt1 ON LOWER(t0.c0 COLLATE RTRIM) GROUP BY t0.c46, t0.c50, vt0.c1;
SELECT ALL t0.c46, vt0.c0, t0.c50, vt0.c1, t0.c0, vt0.c2 FROM vt0, t0 GROUP BY t0.c46, vt0.c0, t0.c50, vt0.c1, t0.c0, vt0.c2;
SELECT ALL t0.c46, vt0.c0, t0.c50, vt0.c1, t0.c0, vt0.c2 FROM vt0, t0 GROUP BY t0.c46, vt0.c0, t0.c50, vt0.c1, t0.c0, vt0.c2 HAVING ((TOTAL(TOTAL(vt0.c0)))GLOB(((t0.c0) IS TRUE))) UNION ALL SELECT t0.c46, vt0.c0, t0.c50, vt0.c1, t0.c0, vt0.c2 FROM vt0, t0 GROUP BY t0.c46, vt0.c0, t0.c50, vt0.c1, t0.c0, vt0.c2 HAVING (NOT (((TOTAL(TOTAL(vt0.c0)))GLOB(((t0.c0) IS TRUE))))) UNION ALL SELECT t0.c46, vt0.c0, t0.c50, vt0.c1, t0.c0, vt0.c2 FROM vt0, t0 GROUP BY t0.c46, vt0.c0, t0.c50, vt0.c1, t0.c0, vt0.c2 HAVING ((((TOTAL(TOTAL(vt0.c0)))GLOB(((t0.c0) IS TRUE)))) ISNULL);
SELECT t0.c0, vt1.c0, t0.c46, t0.c50 FROM vt1, t0;
SELECT t0.c0, vt1.c0, t0.c46, t0.c50 FROM vt1, t0 WHERE (((((vt1.c0)IS(t0.c46)))-(x''))) UNION ALL SELECT ALL t0.c0, vt1.c0, t0.c46, t0.c50 FROM vt1, t0 WHERE ((NOT (((((vt1.c0)IS(t0.c46)))-(x''))))) UNION ALL SELECT ALL t0.c0, vt1.c0, t0.c46, t0.c50 FROM vt1, t0 WHERE (((((((vt1.c0)IS(t0.c46)))-(x''))) ISNULL));
SELECT t0.c0, vt1.c0, t0.c46, t0.c50 FROM vt1, t0;
SELECT DISTINCT vt0.c0 FROM vt0, vt1 NATURAL JOIN t0;
SELECT DISTINCT vt0.c0 FROM vt0, vt1 NATURAL JOIN t0 WHERE ((((+ (t0.c50))) NOT BETWEEN (((((((((((((vt0.c0)OR(vt0.c2)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))AND(t0.c46)))OR(vt0.c0))) AND (((t0.c46) NOT NULL)))) UNION SELECT DISTINCT vt0.c0 FROM vt0, vt1 NATURAL JOIN t0 WHERE ((NOT ((((+ (t0.c50))) NOT BETWEEN (((((((((((((vt0.c0)OR(vt0.c2)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))AND(t0.c46)))OR(vt0.c0))) AND (((t0.c46) NOT NULL)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0, vt1 NATURAL JOIN t0 WHERE ((((((+ (t0.c50))) NOT BETWEEN (((((((((((((vt0.c0)OR(vt0.c2)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))AND(t0.c46)))OR(vt0.c0))) AND (((t0.c46) NOT NULL)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0, vt1 NATURAL JOIN t0;
SELECT vt1.c0, t0.c50 FROM vt1 INNER JOIN t0 ON (((t0.c50)) BETWEEN ((json_insert(vt1.c0, t0.c46, t0.c0, t0.c46, t0.c50))) AND (((NOT (t0.c46))))) GROUP BY vt1.c0, t0.c50;
SELECT t0.c50, t0.c46 FROM vt0 LEFT OUTER JOIN t0 ON t0.c46 GROUP BY t0.c50, t0.c46;
SELECT t0.c50, t0.c46 FROM vt0 LEFT OUTER JOIN t0 ON t0.c46 GROUP BY t0.c50, t0.c46 HAVING ((((COUNT(*)) IS TRUE))LIKE(((((GROUP_CONCAT(vt0.c2))OR(COUNT(*))))OR(t0.c0)))) UNION ALL SELECT t0.c50, t0.c46 FROM vt0 LEFT OUTER JOIN t0 ON t0.c46 GROUP BY t0.c50, t0.c46 HAVING (NOT (((((COUNT(*)) IS TRUE))LIKE(((((GROUP_CONCAT(vt0.c2))OR(COUNT(*))))OR(t0.c0)))))) UNION ALL SELECT t0.c50, t0.c46 FROM vt0 LEFT OUTER JOIN t0 ON t0.c46 GROUP BY t0.c50, t0.c46 HAVING ((((((COUNT(*)) IS TRUE))LIKE(((((GROUP_CONCAT(vt0.c2))OR(COUNT(*))))OR(t0.c0))))) ISNULL);
SELECT t0.c50, t0.c46 FROM vt0 LEFT OUTER JOIN t0 ON t0.c46 GROUP BY t0.c50, t0.c46;
SELECT t0.c50, t0.c46 FROM vt0 LEFT OUTER JOIN t0 ON t0.c46 GROUP BY t0.c50, t0.c46 HAVING ((((COUNT(*)) IS TRUE))LIKE(((((GROUP_CONCAT(vt0.c2))OR(COUNT(*))))OR(t0.c0)))) UNION ALL SELECT t0.c50, t0.c46 FROM vt0 LEFT OUTER JOIN t0 ON t0.c46 GROUP BY t0.c50, t0.c46 HAVING (NOT (((((COUNT(*)) IS TRUE))LIKE(((((GROUP_CONCAT(vt0.c2))OR(COUNT(*))))OR(t0.c0)))))) UNION ALL SELECT t0.c50, t0.c46 FROM vt0 LEFT OUTER JOIN t0 ON t0.c46 GROUP BY t0.c50, t0.c46 HAVING ((((((COUNT(*)) IS TRUE))LIKE(((((GROUP_CONCAT(vt0.c2))OR(COUNT(*))))OR(t0.c0))))) ISNULL);
SELECT t0.c50, t0.c46 FROM vt0 LEFT OUTER JOIN t0 ON t0.c46 GROUP BY t0.c50, t0.c46;
SELECT t0.c46, vt1.c0, t0.c50, t0.c0 FROM vt1, t0;
SELECT t0.c46, vt1.c0, t0.c50, t0.c0 FROM vt1, t0 WHERE (((((((t0.c0)OR(t0.c50)))OR(vt1.c0))) IS TRUE)) UNION ALL SELECT ALL t0.c46, vt1.c0, t0.c50, t0.c0 FROM vt1, t0 WHERE ((NOT (((((((t0.c0)OR(t0.c50)))OR(vt1.c0))) IS TRUE)))) UNION ALL SELECT ALL t0.c46, vt1.c0, t0.c50, t0.c0 FROM vt1, t0 WHERE (((((((((t0.c0)OR(t0.c50)))OR(vt1.c0))) IS TRUE)) ISNULL));
SELECT t0.c46, vt1.c0, t0.c50, t0.c0 FROM vt1, t0;
SELECT DISTINCT * FROM t0, vt1;
SELECT DISTINCT * FROM t0, vt1 WHERE ((((((((t0.c50)) NOT BETWEEN ((t0.c50)) AND ((t0.c50))))AND(((t0.c46) BETWEEN (t0.c0) AND (t0.c50)))))AND(''))) UNION SELECT DISTINCT * FROM t0, vt1 WHERE ((NOT ((((((((t0.c50)) NOT BETWEEN ((t0.c50)) AND ((t0.c50))))AND(((t0.c46) BETWEEN (t0.c0) AND (t0.c50)))))AND(''))))) UNION SELECT DISTINCT * FROM t0, vt1 WHERE ((((((((((t0.c50)) NOT BETWEEN ((t0.c50)) AND ((t0.c50))))AND(((t0.c46) BETWEEN (t0.c0) AND (t0.c50)))))AND(''))) ISNULL));
SELECT DISTINCT * FROM t0, vt1;
SELECT t0.c50, t0.c0, t0.c46 FROM t0 GROUP BY t0.c50, t0.c0, t0.c46;
SELECT t0.c50, t0.c0, t0.c46 FROM t0 WHERE (((((t0.c46))<=((t0.c46))) IN ())) GROUP BY t0.c50, t0.c0, t0.c46 UNION SELECT t0.c50, t0.c0, t0.c46 FROM t0 WHERE ((NOT (((((t0.c46))<=((t0.c46))) IN ())))) GROUP BY t0.c50, t0.c0, t0.c46 UNION SELECT ALL t0.c50, t0.c0, t0.c46 FROM t0 WHERE (((((((t0.c46))<=((t0.c46))) IN ())) ISNULL)) GROUP BY t0.c50, t0.c0, t0.c46;
SELECT t0.c50, t0.c0, t0.c46 FROM t0 GROUP BY t0.c50, t0.c0, t0.c46;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MAX(COUNT(vt1.c0)) COLLATE BINARY UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MAX(COUNT(vt1.c0)) COLLATE BINARY)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MAX(COUNT(vt1.c0)) COLLATE BINARY) ISNULL);
SELECT ALL * FROM t0, vt0 NATURAL JOIN vt1;
SELECT ALL * FROM t0, vt0 NATURAL JOIN vt1 WHERE (vt0.c2) UNION ALL SELECT * FROM t0, vt0 NATURAL JOIN vt1 WHERE ((NOT (vt0.c2))) UNION ALL SELECT ALL * FROM t0, vt0 NATURAL JOIN vt1 WHERE (((vt0.c2) ISNULL));
SELECT ALL * FROM t0, vt0 NATURAL JOIN vt1;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (CASE WHEN (- (t0.c50)) THEN ((t0.c50)>=(t0.c46)) ELSE t0.c50 COLLATE NOCASE END) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (CASE WHEN (- (t0.c50)) THEN ((t0.c50)>=(t0.c46)) ELSE t0.c50 COLLATE NOCASE END))) UNION SELECT DISTINCT * FROM t0 WHERE (((CASE WHEN (- (t0.c50)) THEN ((t0.c50)>=(t0.c46)) ELSE t0.c50 COLLATE NOCASE END) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 WHERE (SQLITE_SOURCE_ID()) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE ((NOT (SQLITE_SOURCE_ID()))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE (((SQLITE_SOURCE_ID()) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1, t0.c0, vt0.c0, t0.c46, t0.c50, vt0.c2, vt1.c0 FROM vt1 NOT INDEXED, vt0, t0 GROUP BY vt0.c1, t0.c0, vt0.c0, t0.c46, t0.c50, vt0.c2, vt1.c0;
SELECT vt0.c1, t0.c0, vt0.c0, t0.c46, t0.c50, vt0.c2, vt1.c0 FROM vt1, vt0, t0 GROUP BY vt0.c1, t0.c0, vt0.c0, t0.c46, t0.c50, vt0.c2, vt1.c0 HAVING JULIANDAY(vt0.c0 COLLATE BINARY, COUNT(MAX(COUNT(*))), TOTAL(AVG(vt0.c2)), CASE WHEN SUM(vt1.c0) THEN t0.c46 ELSE COUNT(t0.c50) END, DATE(vt0.c0, AVG(MAX(MAX(t0.c0))), t0.c46)) UNION ALL SELECT ALL vt0.c1, t0.c0, vt0.c0, t0.c46, t0.c50, vt0.c2, vt1.c0 FROM vt1, vt0, t0 GROUP BY vt0.c1, t0.c0, vt0.c0, t0.c46, t0.c50, vt0.c2, vt1.c0 HAVING (NOT (JULIANDAY(vt0.c0 COLLATE BINARY, COUNT(MAX(COUNT(*))), TOTAL(AVG(vt0.c2)), CASE WHEN SUM(vt1.c0) THEN t0.c46 ELSE COUNT(t0.c50) END, DATE(vt0.c0, AVG(MAX(MAX(t0.c0))), t0.c46)))) UNION ALL SELECT vt0.c1, t0.c0, vt0.c0, t0.c46, t0.c50, vt0.c2, vt1.c0 FROM vt1, vt0, t0 GROUP BY vt0.c1, t0.c0, vt0.c0, t0.c46, t0.c50, vt0.c2, vt1.c0 HAVING ((JULIANDAY(vt0.c0 COLLATE BINARY, COUNT(MAX(COUNT(*))), TOTAL(AVG(vt0.c2)), CASE WHEN SUM(vt1.c0) THEN t0.c46 ELSE COUNT(t0.c50) END, DATE(vt0.c0, AVG(MAX(MAX(t0.c0))), t0.c46))) ISNULL);
SELECT t0.c0 FROM vt0, vt1, t0;
SELECT t0.c0 FROM vt0, vt1, t0 WHERE (CAST(((t0.c50)&(vt0.c1)) AS NUMERIC)) UNION ALL SELECT ALL t0.c0 FROM vt0, vt1, t0 WHERE ((NOT (CAST(((t0.c50)&(vt0.c1)) AS NUMERIC)))) UNION ALL SELECT t0.c0 FROM vt0, vt1, t0 WHERE (((CAST(((t0.c50)&(vt0.c1)) AS NUMERIC)) ISNULL));
SELECT t0.c0 FROM vt0, vt1, t0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((vt1.c0) NOT NULL)) IS TRUE)) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0) NOT NULL)) IS TRUE)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((((vt1.c0) NOT NULL)) IS TRUE)) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL t0.c46, t0.c50, t0.c0, vt0.c1, vt1.c0, vt0.c0, vt0.c2 FROM t0, vt1 RIGHT OUTER JOIN vt0 ON ((t0.c0) BETWEEN (((t0.c50) NOTNULL)) AND ((+ (t0.c0)))) GROUP BY t0.c46, t0.c50, t0.c0, vt0.c1, vt1.c0, vt0.c0, vt0.c2;
SELECT t0.c46, t0.c50, t0.c0, vt0.c1, vt1.c0, vt0.c0, vt0.c2 FROM t0, vt1 RIGHT OUTER JOIN vt0 ON ((t0.c0) BETWEEN (((t0.c50) NOTNULL)) AND ((+ (t0.c0)))) WHERE ((((t0.c0 IN ()))<=(((vt1.c0)OR(NULL))))) GROUP BY t0.c46, t0.c50, t0.c0, vt0.c1, vt1.c0, vt0.c0, vt0.c2 UNION SELECT t0.c46, t0.c50, t0.c0, vt0.c1, vt1.c0, vt0.c0, vt0.c2 FROM t0, vt1 RIGHT OUTER JOIN vt0 ON ((t0.c0) BETWEEN (((t0.c50) NOTNULL)) AND ((+ (t0.c0)))) WHERE ((NOT ((((t0.c0 IN ()))<=(((vt1.c0)OR(NULL))))))) GROUP BY t0.c46, t0.c50, t0.c0, vt0.c1, vt1.c0, vt0.c0, vt0.c2 UNION SELECT t0.c46, t0.c50, t0.c0, vt0.c1, vt1.c0, vt0.c0, vt0.c2 FROM t0, vt1 RIGHT OUTER JOIN vt0 ON ((t0.c0) BETWEEN (((t0.c50) NOTNULL)) AND ((+ (t0.c0)))) WHERE ((((((t0.c0 IN ()))<=(((vt1.c0)OR(NULL))))) ISNULL)) GROUP BY t0.c46, t0.c50, t0.c0, vt0.c1, vt1.c0, vt0.c0, vt0.c2;
SELECT ALL t0.c46, t0.c50, t0.c0, vt0.c1, vt1.c0, vt0.c0, vt0.c2 FROM t0, vt1 RIGHT OUTER JOIN vt0 ON ((t0.c0) BETWEEN (((t0.c50) NOTNULL)) AND ((+ (t0.c0)))) GROUP BY t0.c46, t0.c50, t0.c0, vt0.c1, vt1.c0, vt0.c0, vt0.c2;
SELECT t0.c0 FROM t0, vt1 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, vt1 GROUP BY t0.c0 HAVING ((MAX(t0.c46)) NOT BETWEEN (SUM(t0.c50)) AND (MAX(SUM(AVG(TOTAL(vt1.c0)))))) UNION ALL SELECT ALL t0.c0 FROM t0, vt1 GROUP BY t0.c0 HAVING (NOT (((MAX(t0.c46)) NOT BETWEEN (SUM(t0.c50)) AND (MAX(SUM(AVG(TOTAL(vt1.c0)))))))) UNION ALL SELECT t0.c0 FROM t0, vt1 GROUP BY t0.c0 HAVING ((((MAX(t0.c46)) NOT BETWEEN (SUM(t0.c50)) AND (MAX(SUM(AVG(TOTAL(vt1.c0))))))) ISNULL);
SELECT * FROM t0;
SELECT * FROM t0 WHERE (CASE t0.c46  WHEN t0.c50 THEN t0.c46 WHEN t0.c50 THEN t0.c46 WHEN t0.c50 THEN t0.c0 END COLLATE RTRIM) UNION ALL SELECT * FROM t0 WHERE ((NOT (CASE t0.c46  WHEN t0.c50 THEN t0.c46 WHEN t0.c50 THEN t0.c46 WHEN t0.c50 THEN t0.c0 END COLLATE RTRIM))) UNION ALL SELECT ALL * FROM t0 WHERE (((CASE t0.c46  WHEN t0.c50 THEN t0.c46 WHEN t0.c50 THEN t0.c46 WHEN t0.c50 THEN t0.c0 END COLLATE RTRIM) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT vt0.c2, t0.c46, vt0.c1, vt0.c0, t0.c0, t0.c50 FROM vt0, t0;
SELECT DISTINCT vt0.c2, t0.c46, vt0.c1, vt0.c0, t0.c0, t0.c50 FROM vt0, t0 WHERE (((((CAST(t0.c50 AS NUMERIC))OR(CAST(NULL AS TEXT))))OR(ABS(t0.c46)))) UNION SELECT DISTINCT vt0.c2, t0.c46, vt0.c1, vt0.c0, t0.c0, t0.c50 FROM vt0, t0 WHERE ((NOT (((((CAST(t0.c50 AS NUMERIC))OR(CAST(NULL AS TEXT))))OR(ABS(t0.c46)))))) UNION SELECT DISTINCT vt0.c2, t0.c46, vt0.c1, vt0.c0, t0.c0, t0.c50 FROM vt0, t0 WHERE (((((((CAST(t0.c50 AS NUMERIC))OR(CAST(NULL AS TEXT))))OR(ABS(t0.c46)))) ISNULL));
SELECT DISTINCT vt0.c2, t0.c46, vt0.c1, vt0.c0, t0.c0, t0.c50 FROM vt0, t0;
SELECT t0.c46 FROM t0, vt1 GROUP BY t0.c46;
SELECT t0.c46 FROM t0, vt1 WHERE ((((vt1.c0)) BETWEEN ((((((t0.c50)AND(t0.c46)))AND(t0.c50)))) AND (((- (t0.c0)))))) GROUP BY t0.c46 UNION SELECT t0.c46 FROM t0, vt1 NOT INDEXED WHERE ((NOT ((((vt1.c0)) BETWEEN ((((((t0.c50)AND(t0.c46)))AND(t0.c50)))) AND (((- (t0.c0)))))))) GROUP BY t0.c46 UNION SELECT ALL t0.c46 FROM t0, vt1 WHERE ((((((vt1.c0)) BETWEEN ((((((t0.c50)AND(t0.c46)))AND(t0.c50)))) AND (((- (t0.c0)))))) ISNULL)) GROUP BY t0.c46;
SELECT t0.c46 FROM t0, vt1 GROUP BY t0.c46;
SELECT ALL vt0.c2, vt1.c0, vt0.c1 FROM vt0, t0 LEFT OUTER JOIN vt1 ON (NULL IN ()) GROUP BY vt0.c2, vt1.c0, vt0.c1;
SELECT vt0.c2, vt1.c0, vt0.c1 FROM vt0, t0 LEFT OUTER JOIN vt1 ON (NULL IN ()) GROUP BY vt0.c2, vt1.c0, vt0.c1 HAVING AVG((GROUP_CONCAT(GROUP_CONCAT(AVG(vt0.c0))) IN ())) UNION ALL SELECT vt0.c2, vt1.c0, vt0.c1 FROM vt0, t0 LEFT OUTER JOIN vt1 ON (NULL IN ()) GROUP BY vt0.c2, vt1.c0, vt0.c1 HAVING (NOT (AVG((GROUP_CONCAT(GROUP_CONCAT(AVG(vt0.c0))) IN ())))) UNION ALL SELECT ALL vt0.c2, vt1.c0, vt0.c1 FROM vt0, t0 LEFT OUTER JOIN vt1 ON (NULL IN ()) GROUP BY vt0.c2, vt1.c0, vt0.c1 HAVING ((AVG((GROUP_CONCAT(GROUP_CONCAT(AVG(vt0.c0))) IN ()))) ISNULL);
SELECT ALL vt0.c2, vt1.c0, vt0.c1 FROM vt0, t0 LEFT OUTER JOIN vt1 ON (NULL IN ()) GROUP BY vt0.c2, vt1.c0, vt0.c1;
SELECT vt0.c2, vt1.c0, vt0.c1 FROM vt0, t0 LEFT OUTER JOIN vt1 ON (NULL IN ()) GROUP BY vt0.c2, vt1.c0, vt0.c1 HAVING AVG((GROUP_CONCAT(GROUP_CONCAT(AVG(vt0.c0))) IN ())) UNION ALL SELECT vt0.c2, vt1.c0, vt0.c1 FROM vt0, t0 LEFT OUTER JOIN vt1 ON (NULL IN ()) GROUP BY vt0.c2, vt1.c0, vt0.c1 HAVING (NOT (AVG((GROUP_CONCAT(GROUP_CONCAT(AVG(vt0.c0))) IN ())))) UNION ALL SELECT ALL vt0.c2, vt1.c0, vt0.c1 FROM vt0, t0 LEFT OUTER JOIN vt1 ON (NULL IN ()) GROUP BY vt0.c2, vt1.c0, vt0.c1 HAVING ((AVG((GROUP_CONCAT(GROUP_CONCAT(AVG(vt0.c0))) IN ()))) ISNULL);
SELECT ALL vt0.c2, vt1.c0, vt0.c1 FROM vt0, t0 LEFT OUTER JOIN vt1 ON (NULL IN ()) GROUP BY vt0.c2, vt1.c0, vt0.c1;
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE (0.52714919079563) UNION ALL SELECT * FROM vt1 WHERE ((NOT (0.52714919079563))) UNION ALL SELECT * FROM vt1 WHERE (((0.52714919079563) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((t0.c50) NOT BETWEEN (t0.c50) AND (t0.c46)) COLLATE RTRIM) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((t0.c50) NOT BETWEEN (t0.c50) AND (t0.c46)) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM t0 WHERE (((((t0.c50) NOT BETWEEN (t0.c50) AND (t0.c46)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c50, vt1.c0 FROM t0, vt1 GROUP BY t0.c50, vt1.c0;
SELECT ALL t0.c50, vt1.c0 FROM t0, vt1 WHERE ((((~ (t0.c0))) BETWEEN (t0.c0 COLLATE NOCASE) AND (LTRIM(t0.c50)))) GROUP BY t0.c50, vt1.c0 UNION SELECT ALL t0.c50, vt1.c0 FROM t0, vt1 WHERE ((NOT ((((~ (t0.c0))) BETWEEN (t0.c0 COLLATE NOCASE) AND (LTRIM(t0.c50)))))) GROUP BY t0.c50, vt1.c0 UNION SELECT t0.c50, vt1.c0 FROM t0, vt1 WHERE ((((((~ (t0.c0))) BETWEEN (t0.c0 COLLATE NOCASE) AND (LTRIM(t0.c50)))) ISNULL)) GROUP BY t0.c50, vt1.c0;
SELECT t0.c50, vt1.c0 FROM t0, vt1 GROUP BY t0.c50, vt1.c0;
SELECT t0.c0, t0.c46 FROM t0 GROUP BY t0.c0, t0.c46;
SELECT ALL t0.c0, t0.c46 FROM t0 GROUP BY t0.c0, t0.c46 HAVING AVG(0.33154930884605116) UNION ALL SELECT t0.c0, t0.c46 FROM t0 GROUP BY t0.c0, t0.c46 HAVING (NOT (AVG(0.33154930884605116))) UNION ALL SELECT ALL t0.c0, t0.c46 FROM t0 GROUP BY t0.c0, t0.c46 HAVING ((AVG(0.33154930884605116)) ISNULL);
SELECT t0.c0, t0.c46 FROM t0 GROUP BY t0.c0, t0.c46;
SELECT ALL t0.c0, t0.c46 FROM t0 GROUP BY t0.c0, t0.c46 HAVING AVG(0.33154930884605116) UNION ALL SELECT t0.c0, t0.c46 FROM t0 GROUP BY t0.c0, t0.c46 HAVING (NOT (AVG(0.33154930884605116))) UNION ALL SELECT ALL t0.c0, t0.c46 FROM t0 GROUP BY t0.c0, t0.c46 HAVING ((AVG(0.33154930884605116)) ISNULL);
SELECT t0.c0, t0.c46 FROM t0 GROUP BY t0.c0, t0.c46;
SELECT ALL t0.c0, t0.c46 FROM t0;
SELECT ALL t0.c0, t0.c46 FROM t0 WHERE (load_extension(((NULL) IS FALSE))) UNION ALL SELECT t0.c0, t0.c46 FROM t0 WHERE ((NOT (load_extension(((NULL) IS FALSE))))) UNION ALL SELECT ALL t0.c0, t0.c46 FROM t0 WHERE (((load_extension(((NULL) IS FALSE))) ISNULL));
SELECT DISTINCT * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0 WHERE (((LOWER(vt0.c2))>>((((vt0.c0))>((t0.c50)))))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((NOT (((LOWER(vt0.c2))>>((((vt0.c0))>((t0.c50)))))))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE (((((LOWER(vt0.c2))>>((((vt0.c0))>((t0.c50)))))) ISNULL));
SELECT DISTINCT * FROM t0, vt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (CASE (vt1.c0 IN (vt1.c0))  WHEN (- (vt1.c0)) THEN (vt1.c0 IN (vt1.c0, vt1.c0)) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN (+ (0.5279028102355137)) WHEN HEX(vt1.c0) THEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) ELSE ((vt1.c0)%(vt1.c0)) END) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (CASE (vt1.c0 IN (vt1.c0))  WHEN (- (vt1.c0)) THEN (vt1.c0 IN (vt1.c0, vt1.c0)) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN (+ (0.5279028102355137)) WHEN HEX(vt1.c0) THEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) ELSE ((vt1.c0)%(vt1.c0)) END))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((CASE (vt1.c0 IN (vt1.c0))  WHEN (- (vt1.c0)) THEN (vt1.c0 IN (vt1.c0, vt1.c0)) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN (+ (0.5279028102355137)) WHEN HEX(vt1.c0) THEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) ELSE ((vt1.c0)%(vt1.c0)) END) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c2 FROM vt1 LEFT OUTER JOIN vt0 ON (((vt1.c0)) NOT BETWEEN (((- (vt0.c0)))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))))) GROUP BY vt0.c2;
SELECT ALL vt0.c2 FROM vt1 LEFT OUTER JOIN vt0 ON (((vt1.c0)) NOT BETWEEN (((- (vt0.c0)))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))))) GROUP BY vt0.c2 HAVING AVG(vt0.c1) COLLATE RTRIM UNION ALL SELECT ALL vt0.c2 FROM vt1 LEFT OUTER JOIN vt0 ON (((vt1.c0)) NOT BETWEEN (((- (vt0.c0)))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))))) GROUP BY vt0.c2 HAVING (NOT (AVG(vt0.c1) COLLATE RTRIM)) UNION ALL SELECT vt0.c2 FROM vt1 LEFT OUTER JOIN vt0 ON (((vt1.c0)) NOT BETWEEN (((- (vt0.c0)))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))))) GROUP BY vt0.c2 HAVING ((AVG(vt0.c1) COLLATE RTRIM) ISNULL);
SELECT vt0.c2 FROM vt1 LEFT OUTER JOIN vt0 ON (((vt1.c0)) NOT BETWEEN (((- (vt0.c0)))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))))) GROUP BY vt0.c2;
SELECT ALL vt0.c2 FROM vt1 LEFT OUTER JOIN vt0 ON (((vt1.c0)) NOT BETWEEN (((- (vt0.c0)))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))))) GROUP BY vt0.c2 HAVING AVG(vt0.c1) COLLATE RTRIM UNION ALL SELECT ALL vt0.c2 FROM vt1 LEFT OUTER JOIN vt0 ON (((vt1.c0)) NOT BETWEEN (((- (vt0.c0)))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))))) GROUP BY vt0.c2 HAVING (NOT (AVG(vt0.c1) COLLATE RTRIM)) UNION ALL SELECT vt0.c2 FROM vt1 LEFT OUTER JOIN vt0 ON (((vt1.c0)) NOT BETWEEN (((- (vt0.c0)))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))))) GROUP BY vt0.c2 HAVING ((AVG(vt0.c1) COLLATE RTRIM) ISNULL);
SELECT vt0.c2 FROM vt1 LEFT OUTER JOIN vt0 ON (((vt1.c0)) NOT BETWEEN (((- (vt0.c0)))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))))) GROUP BY vt0.c2;
SELECT ALL * FROM t0, vt0 LEFT OUTER JOIN vt1 ON vt0.c0;
SELECT * FROM t0, vt0 LEFT OUTER JOIN vt1 ON vt0.c0 WHERE ((- ((((t0.c50))<((0.42570989696127737)))))) UNION ALL SELECT * FROM t0, vt0 LEFT OUTER JOIN vt1 ON vt0.c0 WHERE ((NOT ((- ((((t0.c50))<((0.42570989696127737)))))))) UNION ALL SELECT ALL * FROM t0, vt0 NOT INDEXED LEFT OUTER JOIN vt1 ON vt0.c0 WHERE ((((- ((((t0.c50))<((0.42570989696127737)))))) ISNULL));
SELECT ALL * FROM t0, vt0 LEFT OUTER JOIN vt1 ON vt0.c0;
SELECT DISTINCT vt1.c0, t0.c50, t0.c46, t0.c0, vt0.c1, vt0.c2, vt0.c0 FROM vt1, vt0, t0;
SELECT DISTINCT vt1.c0, t0.c50, t0.c46, t0.c0, vt0.c1, vt0.c2, vt0.c0 FROM vt1, vt0, t0 WHERE (((((t0.c0)OR(vt0.c1)))-(1.626668511E9))) UNION SELECT DISTINCT vt1.c0, t0.c50, t0.c46, t0.c0, vt0.c1, vt0.c2, vt0.c0 FROM vt1, vt0, t0 WHERE ((NOT (((((t0.c0)OR(vt0.c1)))-(1.626668511E9))))) UNION SELECT DISTINCT vt1.c0, t0.c50, t0.c46, t0.c0, vt0.c1, vt0.c2, vt0.c0 FROM vt1, vt0, t0 WHERE (((((((t0.c0)OR(vt0.c1)))-(1.626668511E9))) ISNULL));
SELECT DISTINCT vt1.c0, t0.c50, t0.c46, t0.c0, vt0.c1, vt0.c2, vt0.c0 FROM vt1, vt0, t0;
SELECT ALL t0.c50, vt0.c2 FROM vt1, vt0 CROSS JOIN t0 ON (NOT ((((t0.c0)) BETWEEN ((vt0.c1)) AND ((t0.c0))))) GROUP BY t0.c50, vt0.c2;
SELECT ALL t0.c50, vt0.c2 FROM vt1, vt0 CROSS JOIN t0 ON (NOT ((((t0.c0)) BETWEEN ((vt0.c1)) AND ((t0.c0))))) WHERE (x'' COLLATE RTRIM COLLATE RTRIM) GROUP BY t0.c50, vt0.c2 UNION SELECT ALL t0.c50, vt0.c2 FROM vt1, vt0 CROSS JOIN t0 ON (NOT ((((t0.c0)) BETWEEN ((vt0.c1)) AND ((t0.c0))))) WHERE ((NOT (x'' COLLATE RTRIM COLLATE RTRIM))) GROUP BY t0.c50, vt0.c2 UNION SELECT ALL t0.c50, vt0.c2 FROM vt1, vt0 CROSS JOIN t0 ON (NOT ((((t0.c0)) BETWEEN ((vt0.c1)) AND ((t0.c0))))) WHERE (((x'' COLLATE RTRIM COLLATE RTRIM) ISNULL)) GROUP BY t0.c50, vt0.c2;
SELECT ALL t0.c50, vt0.c2 FROM vt1, vt0 CROSS JOIN t0 ON (NOT ((((t0.c0)) BETWEEN ((vt0.c1)) AND ((t0.c0))))) GROUP BY t0.c50, vt0.c2;
SELECT vt0.c0, vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2;
SELECT ALL vt0.c0, vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2 HAVING ((MIN(GROUP_CONCAT(AVG(SUM(vt0.c1))))) BETWEEN (SUM(vt0.c2)) AND (TOTAL(vt0.c0))) UNION ALL SELECT vt0.c0, vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2 HAVING (NOT (((MIN(GROUP_CONCAT(AVG(SUM(vt0.c1))))) BETWEEN (SUM(vt0.c2)) AND (TOTAL(vt0.c0))))) UNION ALL SELECT vt0.c0, vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2 HAVING ((((MIN(GROUP_CONCAT(AVG(SUM(vt0.c1))))) BETWEEN (SUM(vt0.c2)) AND (TOTAL(vt0.c0)))) ISNULL);
SELECT ALL t0.c46, vt0.c2, t0.c0 FROM t0, vt0, vt1;
SELECT t0.c46, vt0.c2, t0.c0 FROM t0, vt0, vt1 WHERE (((((vt1.c0)IS NOT(t0.c0)))>=((t0.c46 IN ())))) UNION ALL SELECT t0.c46, vt0.c2, t0.c0 FROM t0, vt0, vt1 WHERE ((NOT (((((vt1.c0)IS NOT(t0.c0)))>=((t0.c46 IN ())))))) UNION ALL SELECT ALL t0.c46, vt0.c2, t0.c0 FROM t0, vt0, vt1 WHERE (((((((vt1.c0)IS NOT(t0.c0)))>=((t0.c46 IN ())))) ISNULL));
SELECT ALL t0.c46, vt0.c2, t0.c0 FROM t0, vt0, vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 END) ISNULL)) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((CASE WHEN vt1.c0 THEN vt1.c0 END) ISNULL)))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((CASE WHEN vt1.c0 THEN vt1.c0 END) ISNULL)) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((((vt1.c0) IS FALSE)) IS TRUE)) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0) IS FALSE)) IS TRUE)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((((vt1.c0) IS FALSE)) IS TRUE)) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON (~ (x'')) LEFT OUTER JOIN t0 ON vt0.c0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 NOT INDEXED FULL OUTER JOIN vt0 ON (~ (x'')) LEFT OUTER JOIN t0 ON vt0.c0 GROUP BY vt1.c0 HAVING GROUP_CONCAT(AVG(0.456593492373349)) UNION ALL SELECT ALL vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON (~ (x'')) LEFT OUTER JOIN t0 ON vt0.c0 GROUP BY vt1.c0 HAVING (NOT (GROUP_CONCAT(AVG(0.456593492373349)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON (~ (x'')) LEFT OUTER JOIN t0 ON vt0.c0 GROUP BY vt1.c0 HAVING ((GROUP_CONCAT(AVG(0.456593492373349))) ISNULL);
SELECT * FROM t0, vt1, vt0;
SELECT ALL * FROM t0, vt1, vt0 WHERE (((((t0.c0)>=(t0.c46))) IS TRUE)) UNION ALL SELECT ALL * FROM t0 NOT INDEXED, vt1, vt0 WHERE ((NOT (((((t0.c0)>=(t0.c46))) IS TRUE)))) UNION ALL SELECT * FROM t0, vt1, vt0 WHERE (((((((t0.c0)>=(t0.c46))) IS TRUE)) ISNULL));
SELECT * FROM t0, vt1, vt0;
SELECT DISTINCT t0.c50 FROM vt0 INNER JOIN vt1 ON CASE t0.c0 COLLATE BINARY  WHEN CASE WHEN t0.c0 THEN vt0.c2 WHEN t0.c46 THEN vt0.c2 WHEN vt0.c2 THEN t0.c0 ELSE vt0.c1 END THEN t0.c0 WHEN t0.c50 THEN (((vt1.c0))<=((t0.c50))) WHEN ((vt1.c0) NOT BETWEEN (t0.c0) AND (t0.c46)) THEN x'f6d4' WHEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (2.68187822E8)) THEN x'' WHEN vt0.c2 COLLATE NOCASE THEN (((t0.c50)) NOT BETWEEN ((vt0.c2)) AND ((vt1.c0))) ELSE vt0.c0 COLLATE RTRIM END INNER JOIN t0 ON ((CAST(vt0.c1 AS REAL)) NOT BETWEEN (vt1.c0) AND (t0.c0 COLLATE BINARY));
SELECT DISTINCT t0.c50 FROM vt0 INNER JOIN vt1 ON CASE t0.c0 COLLATE BINARY  WHEN CASE WHEN t0.c0 THEN vt0.c2 WHEN t0.c46 THEN vt0.c2 WHEN vt0.c2 THEN t0.c0 ELSE vt0.c1 END THEN t0.c0 WHEN t0.c50 THEN (((vt1.c0))<=((t0.c50))) WHEN ((vt1.c0) NOT BETWEEN (t0.c0) AND (t0.c46)) THEN x'f6d4' WHEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (2.68187822E8)) THEN x'' WHEN vt0.c2 COLLATE NOCASE THEN (((t0.c50)) NOT BETWEEN ((vt0.c2)) AND ((vt1.c0))) ELSE vt0.c0 COLLATE RTRIM END INNER JOIN t0 ON ((CAST(vt0.c1 AS REAL)) NOT BETWEEN (vt1.c0) AND (t0.c0 COLLATE BINARY)) WHERE ((LIKELIHOOD(DISTINCT vt1.c0, 0.671450347765444) IN ())) UNION SELECT DISTINCT t0.c50 FROM vt0 INNER JOIN vt1 ON CASE t0.c0 COLLATE BINARY  WHEN CASE WHEN t0.c0 THEN vt0.c2 WHEN t0.c46 THEN vt0.c2 WHEN vt0.c2 THEN t0.c0 ELSE vt0.c1 END THEN t0.c0 WHEN t0.c50 THEN (((vt1.c0))<=((t0.c50))) WHEN ((vt1.c0) NOT BETWEEN (t0.c0) AND (t0.c46)) THEN x'f6d4' WHEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (2.68187822E8)) THEN x'' WHEN vt0.c2 COLLATE NOCASE THEN (((t0.c50)) NOT BETWEEN ((vt0.c2)) AND ((vt1.c0))) ELSE vt0.c0 COLLATE RTRIM END INNER JOIN t0 ON ((CAST(vt0.c1 AS REAL)) NOT BETWEEN (vt1.c0) AND (t0.c0 COLLATE BINARY)) WHERE ((NOT ((LIKELIHOOD(DISTINCT vt1.c0, 0.671450347765444) IN ())))) UNION SELECT DISTINCT t0.c50 FROM vt0 INNER JOIN vt1 ON CASE t0.c0 COLLATE BINARY  WHEN CASE WHEN t0.c0 THEN vt0.c2 WHEN t0.c46 THEN vt0.c2 WHEN vt0.c2 THEN t0.c0 ELSE vt0.c1 END THEN t0.c0 WHEN t0.c50 THEN (((vt1.c0))<=((t0.c50))) WHEN ((vt1.c0) NOT BETWEEN (t0.c0) AND (t0.c46)) THEN x'f6d4' WHEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (2.68187822E8)) THEN x'' WHEN vt0.c2 COLLATE NOCASE THEN (((t0.c50)) NOT BETWEEN ((vt0.c2)) AND ((vt1.c0))) ELSE vt0.c0 COLLATE RTRIM END INNER JOIN t0 ON ((CAST(vt0.c1 AS REAL)) NOT BETWEEN (vt1.c0) AND (t0.c0 COLLATE BINARY)) WHERE ((((LIKELIHOOD(DISTINCT vt1.c0, 0.671450347765444) IN ())) ISNULL));
SELECT DISTINCT t0.c50 FROM vt0 INNER JOIN vt1 ON CASE t0.c0 COLLATE BINARY  WHEN CASE WHEN t0.c0 THEN vt0.c2 WHEN t0.c46 THEN vt0.c2 WHEN vt0.c2 THEN t0.c0 ELSE vt0.c1 END THEN t0.c0 WHEN t0.c50 THEN (((vt1.c0))<=((t0.c50))) WHEN ((vt1.c0) NOT BETWEEN (t0.c0) AND (t0.c46)) THEN x'f6d4' WHEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (2.68187822E8)) THEN x'' WHEN vt0.c2 COLLATE NOCASE THEN (((t0.c50)) NOT BETWEEN ((vt0.c2)) AND ((vt1.c0))) ELSE vt0.c0 COLLATE RTRIM END INNER JOIN t0 ON ((CAST(vt0.c1 AS REAL)) NOT BETWEEN (vt1.c0) AND (t0.c0 COLLATE BINARY));
SELECT vt0.c1, t0.c0, t0.c50 FROM vt1, vt0, t0 GROUP BY vt0.c1, t0.c0, t0.c50;
SELECT vt0.c1, t0.c0, t0.c50 FROM vt1, vt0, t0 WHERE (((vt0.c2 COLLATE RTRIM)=(((t0.c50)>=(0Xffffffffc3178985))))) GROUP BY vt0.c1, t0.c0, t0.c50 UNION SELECT ALL vt0.c1, t0.c0, t0.c50 FROM vt1, vt0, t0 WHERE ((NOT (((vt0.c2 COLLATE RTRIM)=(((t0.c50)>=(0xffffffffc3178985))))))) GROUP BY vt0.c1, t0.c0, t0.c50 UNION SELECT ALL vt0.c1, t0.c0, t0.c50 FROM vt1, vt0, t0 WHERE (((((vt0.c2 COLLATE RTRIM)=(((t0.c50)>=(0Xffffffffc3178985))))) ISNULL)) GROUP BY vt0.c1, t0.c0, t0.c50;
SELECT vt0.c1, t0.c0, t0.c50 FROM vt1, vt0, t0 GROUP BY vt0.c1, t0.c0, t0.c50;
SELECT t0.c0, vt1.c0, t0.c46, t0.c50 FROM t0, vt1 GROUP BY t0.c0, vt1.c0, t0.c46, t0.c50;
SELECT t0.c0, vt1.c0, t0.c46, t0.c50 FROM t0, vt1 GROUP BY t0.c0, vt1.c0, t0.c46, t0.c50 HAVING CAST((((AVG(AVG(TOTAL(COUNT(*)))))) BETWEEN ((COUNT(t0.c50))) AND ((t0.c0))) AS REAL) UNION ALL SELECT t0.c0, vt1.c0, t0.c46, t0.c50 FROM t0, vt1 GROUP BY t0.c0, vt1.c0, t0.c46, t0.c50 HAVING (NOT (CAST((((AVG(AVG(TOTAL(COUNT(*)))))) BETWEEN ((COUNT(t0.c50))) AND ((t0.c0))) AS REAL))) UNION ALL SELECT ALL t0.c0, vt1.c0, t0.c46, t0.c50 FROM t0, vt1 GROUP BY t0.c0, vt1.c0, t0.c46, t0.c50 HAVING ((CAST((((AVG(AVG(TOTAL(COUNT(*)))))) BETWEEN ((COUNT(t0.c50))) AND ((t0.c0))) AS REAL)) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE ((~ (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT ((~ (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((((~ (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT t0.c50, vt0.c2, vt0.c1, vt0.c0 FROM vt0, t0;
SELECT DISTINCT t0.c50, vt0.c2, vt0.c1, vt0.c0 FROM vt0, t0 WHERE (CAST(NULL AS REAL)) UNION SELECT DISTINCT t0.c50, vt0.c2, vt0.c1, vt0.c0 FROM vt0, t0 WHERE ((NOT (CAST(NULL AS REAL)))) UNION SELECT DISTINCT t0.c50, vt0.c2, vt0.c1, vt0.c0 FROM vt0, t0 WHERE (((CAST(NULL AS REAL)) ISNULL));
SELECT DISTINCT t0.c50, vt0.c2, vt0.c1, vt0.c0 FROM vt0, t0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((((NOT (vt1.c0))) IS TRUE)) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((NOT (vt1.c0))) IS TRUE)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((((NOT (vt1.c0))) IS TRUE)) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c2 FROM vt0, t0 GROUP BY vt0.c2;
SELECT vt0.c2 FROM vt0, t0 GROUP BY vt0.c2 HAVING AVG((((AVG(SUM(vt0.c0)))) NOT BETWEEN ((AVG(t0.c46))) AND ((vt0.c2)))) UNION ALL SELECT vt0.c2 FROM vt0, t0 GROUP BY vt0.c2 HAVING (NOT (AVG((((AVG(SUM(vt0.c0)))) NOT BETWEEN ((AVG(t0.c46))) AND ((vt0.c2)))))) UNION ALL SELECT vt0.c2 FROM vt0, t0 GROUP BY vt0.c2 HAVING ((AVG((((AVG(SUM(vt0.c0)))) NOT BETWEEN ((AVG(t0.c46))) AND ((vt0.c2))))) ISNULL);
SELECT ALL MAX(t0.c46) FROM vt0, vt1, t0 ORDER BY ((((vt0.c0)||(vt0.c1))) NOT NULL) ASC  NULLS FIRST, (- (t0.c46)) COLLATE RTRIM;
SELECT ALL * FROM vt1 NATURAL JOIN t0;
SELECT * FROM vt1 NATURAL JOIN t0 WHERE ((TRIM(t0.c46) IN ())) UNION ALL SELECT ALL * FROM vt1 NOT INDEXED NATURAL JOIN t0 WHERE ((NOT ((TRIM(t0.c46) IN ())))) UNION ALL SELECT * FROM vt1 NATURAL JOIN t0 WHERE ((((TRIM(t0.c46) IN ())) ISNULL));
SELECT ALL * FROM vt1 NATURAL JOIN t0;
SELECT DISTINCT vt1.c0, vt0.c1, t0.c50 FROM vt1 RIGHT OUTER JOIN t0 ON ((NULL)+(((2.0328563E7)=(vt0.c2)))) LEFT OUTER JOIN vt0 ON CASE WHEN vt0.c0 THEN vt0.c2 WHEN t0.c0 THEN t0.c50 WHEN vt0.c0 THEN t0.c46 WHEN t0.c50 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE t0.c0 END COLLATE RTRIM;
SELECT ALL vt0.c0, vt0.c2, t0.c0, t0.c46, vt1.c0 FROM vt1, vt0, t0 GROUP BY vt0.c0, vt0.c2, t0.c0, t0.c46, vt1.c0;
SELECT ALL vt0.c0, vt0.c2, t0.c0, t0.c46, vt1.c0 FROM vt1, vt0, t0 WHERE (NULL) GROUP BY vt0.c0, vt0.c2, t0.c0, t0.c46, vt1.c0 UNION SELECT ALL vt0.c0, vt0.c2, t0.c0, t0.c46, vt1.c0 FROM vt1, vt0, t0 WHERE ((NOT (NULL))) GROUP BY vt0.c0, vt0.c2, t0.c0, t0.c46, vt1.c0 UNION SELECT ALL vt0.c0, vt0.c2, t0.c0, t0.c46, vt1.c0 FROM vt1, vt0, t0 WHERE (((NULL) ISNULL)) GROUP BY vt0.c0, vt0.c2, t0.c0, t0.c46, vt1.c0;
SELECT ALL vt0.c0, vt0.c2, t0.c0, t0.c46, vt1.c0 FROM vt1, vt0, t0 GROUP BY vt0.c0, vt0.c2, t0.c0, t0.c46, vt1.c0;
SELECT t0.c0, t0.c46, t0.c50 FROM t0 GROUP BY t0.c0, t0.c46, t0.c50;
SELECT t0.c0, t0.c46, t0.c50 FROM t0 GROUP BY t0.c0, t0.c46, t0.c50 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0, t0.c46, t0.c50 FROM t0 GROUP BY t0.c0, t0.c46, t0.c50 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0, t0.c46, t0.c50 FROM t0 GROUP BY t0.c0, t0.c46, t0.c50 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0, t0.c46, t0.c50 FROM t0 GROUP BY t0.c0, t0.c46, t0.c50;
SELECT t0.c0, t0.c46, t0.c50 FROM t0 GROUP BY t0.c0, t0.c46, t0.c50 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0, t0.c46, t0.c50 FROM t0 GROUP BY t0.c0, t0.c46, t0.c50 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0, t0.c46, t0.c50 FROM t0 GROUP BY t0.c0, t0.c46, t0.c50 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0, t0.c46, t0.c50 FROM t0 GROUP BY t0.c0, t0.c46, t0.c50;
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (((vt1.c0 COLLATE BINARY) NOT NULL)) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0 COLLATE BINARY) NOT NULL)))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((((vt1.c0 COLLATE BINARY) NOT NULL)) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT t0.c0, vt0.c1, t0.c46, t0.c50, vt0.c2 FROM t0, vt0;
SELECT DISTINCT t0.c0, vt0.c1, t0.c46, t0.c50, vt0.c2 FROM t0, vt0 WHERE (1.263615426E9) UNION SELECT DISTINCT t0.c0, vt0.c1, t0.c46, t0.c50, vt0.c2 FROM t0, vt0 WHERE ((NOT (1.263615426E9))) UNION SELECT DISTINCT t0.c0, vt0.c1, t0.c46, t0.c50, vt0.c2 FROM t0, vt0 WHERE (((1.263615426E9) ISNULL));
SELECT DISTINCT t0.c0, vt0.c1, t0.c46, t0.c50, vt0.c2 FROM t0, vt0;
SELECT vt0.c2, t0.c0, t0.c46, t0.c50, vt0.c1 FROM vt0, t0 GROUP BY vt0.c2, t0.c0, t0.c46, t0.c50, vt0.c1;
SELECT vt0.c2, t0.c0, t0.c46, t0.c50, vt0.c1 FROM vt0, t0 WHERE (t0.c46) GROUP BY vt0.c2, t0.c0, t0.c46, t0.c50, vt0.c1 UNION SELECT vt0.c2, t0.c0, t0.c46, t0.c50, vt0.c1 FROM vt0, t0 WHERE ((NOT (t0.c46))) GROUP BY vt0.c2, t0.c0, t0.c46, t0.c50, vt0.c1 UNION SELECT vt0.c2, t0.c0, t0.c46, t0.c50, vt0.c1 FROM vt0, t0 WHERE (((t0.c46) ISNULL)) GROUP BY vt0.c2, t0.c0, t0.c46, t0.c50, vt0.c1;
SELECT vt0.c2, t0.c0, t0.c46, t0.c50, vt0.c1 FROM vt0, t0 GROUP BY vt0.c2, t0.c0, t0.c46, t0.c50, vt0.c1;
SELECT ALL vt1.c0 FROM vt1 CROSS JOIN vt0 ON CASE WHEN NULL THEN vt0.c1 END COLLATE NOCASE COLLATE RTRIM GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 CROSS JOIN vt0 ON CASE WHEN NULL THEN vt0.c1 END COLLATE NOCASE COLLATE RTRIM GROUP BY vt1.c0 HAVING SUM(GROUP_CONCAT(vt0.c1)) UNION ALL SELECT vt1.c0 FROM vt1 CROSS JOIN vt0 ON CASE WHEN NULL THEN vt0.c1 END COLLATE NOCASE COLLATE RTRIM GROUP BY vt1.c0 HAVING (NOT (SUM(GROUP_CONCAT(vt0.c1)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 CROSS JOIN vt0 ON CASE WHEN NULL THEN vt0.c1 END COLLATE NOCASE COLLATE RTRIM GROUP BY vt1.c0 HAVING ((SUM(GROUP_CONCAT(vt0.c1))) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE ((+ (((vt0.c1)=(vt0.c1))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((+ (((vt0.c1)==(vt0.c1))))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((+ (((vt0.c1)==(vt0.c1))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM t0 FULL OUTER JOIN vt1 ON CASE WHEN vt1.c0 THEN t0.c50 END COLLATE NOCASE;
SELECT DISTINCT * FROM t0 FULL OUTER JOIN vt1 ON CASE WHEN vt1.c0 THEN t0.c50 END COLLATE NOCASE WHERE (vt1.c0) UNION SELECT DISTINCT * FROM t0 FULL OUTER JOIN vt1 ON CASE WHEN vt1.c0 THEN t0.c50 END COLLATE NOCASE WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT * FROM t0 FULL OUTER JOIN vt1 ON CASE WHEN vt1.c0 THEN t0.c50 END COLLATE NOCASE WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT * FROM t0 FULL OUTER JOIN vt1 ON CASE WHEN vt1.c0 THEN t0.c50 END COLLATE NOCASE;
SELECT ALL t0.c0, t0.c50 FROM vt1, t0 GROUP BY t0.c0, t0.c50;
SELECT t0.c0, t0.c50 FROM vt1, t0 WHERE (TRIM(DISTINCT t0.c50, t0.c0) COLLATE NOCASE) GROUP BY t0.c0, t0.c50 UNION SELECT t0.c0, t0.c50 FROM vt1, t0 WHERE ((NOT (TRIM(DISTINCT t0.c50, t0.c0) COLLATE NOCASE))) GROUP BY t0.c0, t0.c50 UNION SELECT t0.c0, t0.c50 FROM vt1, t0 WHERE (((TRIM(DISTINCT t0.c50, t0.c0) COLLATE NOCASE) ISNULL)) GROUP BY t0.c0, t0.c50;
SELECT ALL t0.c0, t0.c50 FROM vt1, t0 GROUP BY t0.c0, t0.c50;
SELECT vt1.c0, vt0.c2, vt0.c0, t0.c46, t0.c50 FROM t0, vt1, vt0 GROUP BY vt1.c0, vt0.c2, vt0.c0, t0.c46, t0.c50;
SELECT vt1.c0, vt0.c2, vt0.c0, t0.c46, t0.c50 FROM t0, vt1, vt0 GROUP BY vt1.c0, vt0.c2, vt0.c0, t0.c46, t0.c50 HAVING AVG(((t0.c0) NOT BETWEEN (COUNT(vt0.c1)) AND (MAX(MIN(t0.c46))))) UNION ALL SELECT vt1.c0, vt0.c2, vt0.c0, t0.c46, t0.c50 FROM t0, vt1, vt0 GROUP BY vt1.c0, vt0.c2, vt0.c0, t0.c46, t0.c50 HAVING (NOT (AVG(((t0.c0) NOT BETWEEN (COUNT(vt0.c1)) AND (MAX(MIN(t0.c46))))))) UNION ALL SELECT ALL vt1.c0, vt0.c2, vt0.c0, t0.c46, t0.c50 FROM t0, vt1, vt0 GROUP BY vt1.c0, vt0.c2, vt0.c0, t0.c46, t0.c50 HAVING ((AVG(((t0.c0) NOT BETWEEN (COUNT(vt0.c1)) AND (MAX(MIN(t0.c46)))))) ISNULL);
SELECT ALL SUM(((((vt1.c0)LIKE(vt1.c0)))<(vt1.c0))) FROM vt1;
SELECT * FROM t0;
SELECT * FROM t0 WHERE (IFNULL(CAST(t0.c46 AS TEXT), ((('NL^!')) BETWEEN ((t0.c0)) AND ((t0.c0))))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (IFNULL(CAST(t0.c46 AS TEXT), ((('NL^!')) BETWEEN ((t0.c0)) AND ((t0.c0))))))) UNION ALL SELECT * FROM t0 WHERE (((IFNULL(CAST(t0.c46 AS TEXT), ((('NL^!')) BETWEEN ((t0.c0)) AND ((t0.c0))))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT vt0.c2, t0.c0, vt0.c0, t0.c50 FROM vt1, t0, vt0;
SELECT DISTINCT vt0.c2, t0.c0, vt0.c0, t0.c50 FROM vt1, t0, vt0 WHERE (vt1.c0) UNION SELECT DISTINCT vt0.c2, t0.c0, vt0.c0, t0.c50 FROM vt1, t0, vt0 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT vt0.c2, t0.c0, vt0.c0, t0.c50 FROM vt1, t0, vt0 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT vt0.c2, t0.c0, vt0.c0, t0.c50 FROM vt1, t0, vt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (CASE CAST(vt1.c0 AS BLOB)  WHEN vt1.c0 THEN SQLITE_VERSION() END) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (CASE CAST(vt1.c0 AS BLOB)  WHEN vt1.c0 THEN SQLITE_VERSION() END))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((CASE CAST(vt1.c0 AS BLOB)  WHEN vt1.c0 THEN SQLITE_VERSION() END) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT t0.c0 FROM t0, vt0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, vt0 GROUP BY t0.c0 HAVING MIN(((((vt0.c2)AND(MIN(t0.c0))))AND(t0.c0))) UNION ALL SELECT t0.c0 FROM t0, vt0 GROUP BY t0.c0 HAVING (NOT (MIN(((((vt0.c2)AND(MIN(t0.c0))))AND(t0.c0))))) UNION ALL SELECT ALL t0.c0 FROM t0, vt0 GROUP BY t0.c0 HAVING ((MIN(((((vt0.c2)AND(MIN(t0.c0))))AND(t0.c0)))) ISNULL);
SELECT t0.c0, vt0.c0, t0.c46, vt0.c2, vt0.c1 FROM vt1, vt0, t0;
SELECT ALL t0.c0, vt0.c0, t0.c46, vt0.c2, vt0.c1 FROM vt1, vt0, t0 WHERE (((((vt0.c0) NOT NULL)) NOT BETWEEN (((t0.c0)*(vt0.c0))) AND (LIKELIHOOD(vt0.c0, 0.529648267733492)))) UNION ALL SELECT ALL t0.c0, vt0.c0, t0.c46, vt0.c2, vt0.c1 FROM vt1, vt0, t0 WHERE ((NOT (((((vt0.c0) NOT NULL)) NOT BETWEEN (((t0.c0)*(vt0.c0))) AND (LIKELIHOOD(vt0.c0, 0.529648267733492)))))) UNION ALL SELECT t0.c0, vt0.c0, t0.c46, vt0.c2, vt0.c1 FROM vt1, vt0, t0 WHERE (((((((vt0.c0) NOT NULL)) NOT BETWEEN (((t0.c0)*(vt0.c0))) AND (LIKELIHOOD(vt0.c0, 0.529648267733492)))) ISNULL));
SELECT t0.c0, vt0.c0, t0.c46, vt0.c2, vt0.c1 FROM vt1, vt0, t0;
SELECT DISTINCT vt0.c1 FROM vt0, vt1;
SELECT DISTINCT vt0.c1 FROM vt0, vt1 WHERE (((((vt0.c0)>>(vt0.c1)))<(((vt1.c0) NOTNULL)))) UNION SELECT DISTINCT vt0.c1 FROM vt0 NOT INDEXED, vt1 WHERE ((NOT (((((vt0.c0)>>(vt0.c1)))<(((vt1.c0) NOTNULL)))))) UNION SELECT DISTINCT vt0.c1 FROM vt0, vt1 WHERE (((((((vt0.c0)>>(vt0.c1)))<(((vt1.c0) NOTNULL)))) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0, vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (CASE (+ (vt1.c0))  WHEN CAST(vt1.c0 AS NUMERIC) THEN HEX(DISTINCT vt1.c0) ELSE ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (CASE (+ (vt1.c0))  WHEN CAST(vt1.c0 AS NUMERIC) THEN HEX(DISTINCT vt1.c0) ELSE ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((CASE (+ (vt1.c0))  WHEN CAST(vt1.c0 AS NUMERIC) THEN HEX(DISTINCT vt1.c0) ELSE ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT t0.c46, t0.c50, vt0.c1, vt0.c2 FROM t0, vt0 GROUP BY t0.c46, t0.c50, vt0.c1, vt0.c2;
SELECT t0.c46, t0.c50, vt0.c1, vt0.c2 FROM t0, vt0 GROUP BY t0.c46, t0.c50, vt0.c1, vt0.c2 HAVING MIN((NOT (COUNT(COUNT(*))))) UNION ALL SELECT t0.c46, t0.c50, vt0.c1, vt0.c2 FROM t0, vt0 GROUP BY t0.c46, t0.c50, vt0.c1, vt0.c2 HAVING (NOT (MIN((NOT (COUNT(COUNT(*))))))) UNION ALL SELECT ALL t0.c46, t0.c50, vt0.c1, vt0.c2 FROM t0, vt0 GROUP BY t0.c46, t0.c50, vt0.c1, vt0.c2 HAVING ((MIN((NOT (COUNT(COUNT(*)))))) ISNULL);
SELECT * FROM t0 INNER JOIN vt0 ON (((((NULL)>(t0.c50)), vt0.c0, IFNULL(vt0.c2, vt0.c0)))==(((((t0.c50, t0.c46, t0.c46))>((t0.c46, vt0.c2, vt0.c0))), vt0.c1, PRINTF(vt0.c2, t0.c50, vt0.c2))));
SELECT ALL * FROM t0 INNER JOIN vt0 ON (((((NULL)>(t0.c50)), vt0.c0, IFNULL(vt0.c2, vt0.c0)))=(((((t0.c50, t0.c46, t0.c46))>((t0.c46, vt0.c2, vt0.c0))), vt0.c1, PRINTF(vt0.c2, t0.c50, vt0.c2)))) WHERE ((((t0.c46 IN ())) BETWEEN (((vt0.c2)&(t0.c0))) AND ((t0.c46 IN ())))) UNION ALL SELECT ALL * FROM t0 INNER JOIN vt0 ON (((((NULL)>(t0.c50)), vt0.c0, IFNULL(vt0.c2, vt0.c0)))=(((((t0.c50, t0.c46, t0.c46))>((t0.c46, vt0.c2, vt0.c0))), vt0.c1, PRINTF(vt0.c2, t0.c50, vt0.c2)))) WHERE ((NOT ((((t0.c46 IN ())) BETWEEN (((vt0.c2)&(t0.c0))) AND ((t0.c46 IN ())))))) UNION ALL SELECT ALL * FROM t0 INNER JOIN vt0 ON (((((NULL)>(t0.c50)), vt0.c0, IFNULL(vt0.c2, vt0.c0)))=(((((t0.c50, t0.c46, t0.c46))>((t0.c46, vt0.c2, vt0.c0))), vt0.c1, PRINTF(vt0.c2, t0.c50, vt0.c2)))) WHERE ((((((t0.c46 IN ())) BETWEEN (((vt0.c2)&(t0.c0))) AND ((t0.c46 IN ())))) ISNULL));
SELECT * FROM t0 INNER JOIN vt0 ON (((((NULL)>(t0.c50)), vt0.c0, IFNULL(vt0.c2, vt0.c0)))==(((((t0.c50, t0.c46, t0.c46))>((t0.c46, vt0.c2, vt0.c0))), vt0.c1, PRINTF(vt0.c2, t0.c50, vt0.c2))));
SELECT DISTINCT t0.c0, t0.c46 FROM vt0, t0 CROSS JOIN vt1 ON ((((vt0.c0) IS FALSE))|(((t0.c50)<(vt1.c0))));
SELECT DISTINCT t0.c0, t0.c46 FROM vt0, t0 CROSS JOIN vt1 ON ((((vt0.c0) IS FALSE))|(((t0.c50)<(vt1.c0)))) WHERE (((t0.c0 IN (vt0.c0, vt1.c0)) IN ())) UNION SELECT DISTINCT t0.c0, t0.c46 FROM vt0, t0 CROSS JOIN vt1 ON ((((vt0.c0) IS FALSE))|(((t0.c50)<(vt1.c0)))) WHERE ((NOT (((t0.c0 IN (vt0.c0, vt1.c0)) IN ())))) UNION SELECT DISTINCT t0.c0, t0.c46 FROM vt0, t0 CROSS JOIN vt1 ON ((((vt0.c0) IS FALSE))|(((t0.c50)<(vt1.c0)))) WHERE (((((t0.c0 IN (vt0.c0, vt1.c0)) IN ())) ISNULL));
SELECT DISTINCT t0.c0, t0.c46 FROM vt0, t0 CROSS JOIN vt1 ON ((((vt0.c0) IS FALSE))|(((t0.c50)<(vt1.c0))));
SELECT ALL vt0.c0, vt0.c1, t0.c46, vt1.c0 FROM vt1, vt0, t0 GROUP BY vt0.c0, vt0.c1, t0.c46, vt1.c0;
SELECT ALL vt0.c0, vt0.c1, t0.c46, vt1.c0 FROM vt1, vt0, t0 WHERE (t0.c0) GROUP BY vt0.c0, vt0.c1, t0.c46, vt1.c0 UNION SELECT vt0.c0, vt0.c1, t0.c46, vt1.c0 FROM vt1, vt0, t0 WHERE ((NOT (t0.c0))) GROUP BY vt0.c0, vt0.c1, t0.c46, vt1.c0 UNION SELECT vt0.c0, vt0.c1, t0.c46, vt1.c0 FROM vt1, vt0, t0 WHERE (((t0.c0) ISNULL)) GROUP BY vt0.c0, vt0.c1, t0.c46, vt1.c0;
SELECT ALL vt0.c0, vt0.c1, t0.c46, vt1.c0 FROM vt1, vt0, t0 GROUP BY vt0.c0, vt0.c1, t0.c46, vt1.c0;
SELECT vt0.c2, vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt0.c2, vt1.c0, vt0.c0;
SELECT ALL vt0.c2, vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt0.c2, vt1.c0, vt0.c0 HAVING ((GROUP_CONCAT(vt0.c2))&(MAX(vt0.c1))) UNION ALL SELECT ALL vt0.c2, vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt0.c2, vt1.c0, vt0.c0 HAVING (NOT (((GROUP_CONCAT(vt0.c2))&(MAX(vt0.c1))))) UNION ALL SELECT ALL vt0.c2, vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt0.c2, vt1.c0, vt0.c0 HAVING ((((GROUP_CONCAT(vt0.c2))&(MAX(vt0.c1)))) ISNULL);
SELECT vt0.c2, vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt0.c2, vt1.c0, vt0.c0;
SELECT ALL vt0.c2, vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt0.c2, vt1.c0, vt0.c0 HAVING ((GROUP_CONCAT(vt0.c2))&(MAX(vt0.c1))) UNION ALL SELECT ALL vt0.c2, vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt0.c2, vt1.c0, vt0.c0 HAVING (NOT (((GROUP_CONCAT(vt0.c2))&(MAX(vt0.c1))))) UNION ALL SELECT ALL vt0.c2, vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt0.c2, vt1.c0, vt0.c0 HAVING ((((GROUP_CONCAT(vt0.c2))&(MAX(vt0.c1)))) ISNULL);
SELECT vt0.c2, vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt0.c2, vt1.c0, vt0.c0;
SELECT vt0.c1, vt1.c0, vt0.c0 FROM vt0, vt1;
SELECT vt0.c1, vt1.c0, vt0.c0 FROM vt0, vt1 WHERE ((((0.2590162657993349) NOT NULL) IN ())) UNION ALL SELECT ALL vt0.c1, vt1.c0, vt0.c0 FROM vt0, vt1 WHERE ((NOT ((((0.2590162657993349) NOT NULL) IN ())))) UNION ALL SELECT vt0.c1, vt1.c0, vt0.c0 FROM vt0, vt1 WHERE ((((((0.2590162657993349) NOT NULL) IN ())) ISNULL));
SELECT vt0.c1, vt1.c0, vt0.c0 FROM vt0, vt1;
SELECT DISTINCT * FROM vt1 INDEXED BY i46, vt0, t0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (vt1.c0) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((vt1.c0) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MAX(MIN(COUNT(COUNT(*)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MAX(MIN(COUNT(COUNT(*)))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MAX(MIN(COUNT(COUNT(*))))) ISNULL);
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE ((NOT ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) ORDER BY vt1.c0  NULLS LAST, CASE WHEN (- (vt1.c0)) THEN LENGTH(vt1.c0) END DESC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE ((NOT ((NOT ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))))) ORDER BY vt1.c0  NULLS LAST, CASE WHEN (- (vt1.c0)) THEN LENGTH(vt1.c0) END DESC  NULLS FIRST;
SELECT * FROM vt1 WHERE ((((NOT ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) ISNULL)) ORDER BY vt1.c0  NULLS LAST, CASE WHEN (- (vt1.c0)) THEN LENGTH(vt1.c0) END DESC  NULLS FIRST;
SELECT ALL * FROM vt1;
SELECT DISTINCT t0.c46, vt1.c0, t0.c0, t0.c50 FROM t0 CROSS JOIN vt1 ON ((t0.c0 COLLATE RTRIM) IS TRUE);
SELECT DISTINCT t0.c46, vt1.c0, t0.c0, t0.c50 FROM t0 CROSS JOIN vt1 ON ((t0.c0 COLLATE RTRIM) IS TRUE) WHERE (((((((((CAST(vt1.c0 AS BLOB))AND(LENGTH(vt1.c0))))OR(((((t0.c0)OR(t0.c50)))OR(t0.c0)))))AND(((((t0.c0)AND(t0.c50)))AND(t0.c50)))))AND((((t0.c0, t0.c0, t0.c50)) NOT BETWEEN ((vt1.c0, t0.c0, t0.c0)) AND ((t0.c50, t0.c46, t0.c46)))))) UNION SELECT DISTINCT t0.c46, vt1.c0, t0.c0, t0.c50 FROM t0 CROSS JOIN vt1 ON ((t0.c0 COLLATE RTRIM) IS TRUE) WHERE ((NOT (((((((((CAST(vt1.c0 AS BLOB))AND(LENGTH(vt1.c0))))OR(((((t0.c0)OR(t0.c50)))OR(t0.c0)))))AND(((((t0.c0)AND(t0.c50)))AND(t0.c50)))))AND((((t0.c0, t0.c0, t0.c50)) NOT BETWEEN ((vt1.c0, t0.c0, t0.c0)) AND ((t0.c50, t0.c46, t0.c46)))))))) UNION SELECT DISTINCT t0.c46, vt1.c0, t0.c0, t0.c50 FROM t0 CROSS JOIN vt1 ON ((t0.c0 COLLATE RTRIM) IS TRUE) WHERE (((((((((((CAST(vt1.c0 AS BLOB))AND(LENGTH(vt1.c0))))OR(((((t0.c0)OR(t0.c50)))OR(t0.c0)))))AND(((((t0.c0)AND(t0.c50)))AND(t0.c50)))))AND((((t0.c0, t0.c0, t0.c50)) NOT BETWEEN ((vt1.c0, t0.c0, t0.c0)) AND ((t0.c50, t0.c46, t0.c46)))))) ISNULL));
SELECT DISTINCT t0.c46, vt1.c0, t0.c0, t0.c50 FROM t0 CROSS JOIN vt1 ON ((t0.c0 COLLATE RTRIM) IS TRUE);
SELECT t0.c50 FROM t0, vt0 GROUP BY t0.c50;
SELECT ALL t0.c50 FROM t0, vt0 WHERE ((2017812362 IN ((~ (t0.c50)), ((((((((t0.c46)OR(vt0.c2)))AND(t0.c0)))AND(vt0.c2)))OR(vt0.c2))))) GROUP BY t0.c50 UNION SELECT t0.c50 FROM t0, vt0 WHERE ((NOT ((2017812362 IN ((~ (t0.c50)), ((((((((t0.c46)OR(vt0.c2)))AND(t0.c0)))AND(vt0.c2)))OR(vt0.c2))))))) GROUP BY t0.c50 UNION SELECT t0.c50 FROM t0, vt0 WHERE ((((2017812362 IN ((~ (t0.c50)), ((((((((t0.c46)OR(vt0.c2)))AND(t0.c0)))AND(vt0.c2)))OR(vt0.c2))))) ISNULL)) GROUP BY t0.c50;
SELECT t0.c50 FROM t0, vt0 GROUP BY t0.c50;
SELECT ALL vt0.c1, vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c2, vt0.c0;
SELECT ALL vt0.c1, vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c2, vt0.c0 HAVING CAST(MAX(COUNT(SUM(vt0.c1))) AS TEXT) UNION ALL SELECT ALL vt0.c1, vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c2, vt0.c0 HAVING (NOT (CAST(MAX(COUNT(SUM(vt0.c1))) AS TEXT))) UNION ALL SELECT ALL vt0.c1, vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c2, vt0.c0 HAVING ((CAST(MAX(COUNT(SUM(vt0.c1))) AS TEXT)) ISNULL);
SELECT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (((CAST(NULL AS INTEGER)) IS FALSE)) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (((CAST(NULL AS INTEGER)) IS FALSE)))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((((CAST(NULL AS INTEGER)) IS FALSE)) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((((t0.c50)OR('*#2w츞')))OR(t0.c50)) COLLATE BINARY) UNION SELECT DISTINCT * FROM t0 NOT INDEXED WHERE ((NOT (((((t0.c50)OR('*#2w츞')))OR(t0.c50)) COLLATE BINARY))) UNION SELECT DISTINCT * FROM t0 WHERE (((((((t0.c50)OR('*#2w츞')))OR(t0.c50)) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT vt0.c2, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c1, vt0.c0;
SELECT ALL vt0.c2, vt0.c1, vt0.c0 FROM vt0 WHERE (CASE ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c2))  WHEN -252149890 THEN CAST(vt0.c2 AS REAL) WHEN UNLIKELY(DISTINCT 'lHVu') THEN (NULL IN (vt0.c0)) WHEN (~ (x'')) THEN ((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c0)) END) GROUP BY vt0.c2, vt0.c1, vt0.c0 UNION SELECT vt0.c2, vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (CASE ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c2))  WHEN -252149890 THEN CAST(vt0.c2 AS REAL) WHEN UNLIKELY(DISTINCT 'lHVu') THEN (NULL IN (vt0.c0)) WHEN (~ (x'')) THEN ((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c0)) END))) GROUP BY vt0.c2, vt0.c1, vt0.c0 UNION SELECT vt0.c2, vt0.c1, vt0.c0 FROM vt0 WHERE (((CASE ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c2))  WHEN -252149890 THEN CAST(vt0.c2 AS REAL) WHEN UNLIKELY(DISTINCT 'lHVu') THEN (NULL IN (vt0.c0)) WHEN (~ (x'')) THEN ((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c0)) END) ISNULL)) GROUP BY vt0.c2, vt0.c1, vt0.c0;
SELECT vt0.c2, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c1, vt0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING NULLIF(DISTINCT ((COUNT(t0.c46))+(COUNT(AVG(MIN(t0.c46))))), MAX(t0.c46)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (NULLIF(DISTINCT ((COUNT(t0.c46))+(COUNT(AVG(MIN(t0.c46))))), MAX(t0.c46)))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((NULLIF(DISTINCT ((COUNT(t0.c46))+(COUNT(AVG(MIN(t0.c46))))), MAX(t0.c46))) ISNULL);
SELECT ALL * FROM vt0, t0;
SELECT * FROM vt0, t0 WHERE ((((((t0.c0, vt0.c1, 0.9104395073809189)) NOT BETWEEN (('0.8430899222536032', t0.c50, t0.c50)) AND ((vt0.c1, vt0.c2, NULL)))) NOTNULL)) UNION ALL SELECT ALL * FROM vt0, t0 WHERE ((NOT ((((((t0.c0, vt0.c1, 0.9104395073809189)) NOT BETWEEN (('0.8430899222536032', t0.c50, t0.c50)) AND ((vt0.c1, vt0.c2, NULL)))) NOTNULL)))) UNION ALL SELECT ALL * FROM vt0, t0 WHERE ((((((((t0.c0, vt0.c1, 0.9104395073809189)) NOT BETWEEN (('0.8430899222536032', t0.c50, t0.c50)) AND ((vt0.c1, vt0.c2, NULL)))) NOTNULL)) ISNULL));
SELECT ALL * FROM vt0, t0;
SELECT DISTINCT * FROM vt1, vt0, t0;
SELECT DISTINCT * FROM vt1, vt0, t0 WHERE ((((((t0.c46)) NOT BETWEEN ((t0.c46)) AND ((vt0.c1))))&(((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) UNION SELECT DISTINCT * FROM vt1, vt0, t0 WHERE ((NOT ((((((t0.c46)) NOT BETWEEN ((t0.c46)) AND ((vt0.c1))))&(((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c1))))))) UNION SELECT DISTINCT * FROM vt1, vt0, t0 WHERE ((((((((t0.c46)) NOT BETWEEN ((t0.c46)) AND ((vt0.c1))))&(((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0, t0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (vt1.c0) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((vt1.c0) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c2, vt0.c0, t0.c0, t0.c46 FROM t0, vt0 GROUP BY vt0.c2, vt0.c0, t0.c0, t0.c46;
SELECT vt0.c2, vt0.c0, t0.c0, t0.c46 FROM t0, vt0 GROUP BY vt0.c2, vt0.c0, t0.c0, t0.c46 HAVING GROUP_CONCAT(GROUP_CONCAT(vt0.c1)) UNION ALL SELECT vt0.c2, vt0.c0, t0.c0, t0.c46 FROM t0, vt0 GROUP BY vt0.c2, vt0.c0, t0.c0, t0.c46 HAVING (NOT (GROUP_CONCAT(GROUP_CONCAT(vt0.c1)))) UNION ALL SELECT vt0.c2, vt0.c0, t0.c0, t0.c46 FROM t0, vt0 GROUP BY vt0.c2, vt0.c0, t0.c0, t0.c46 HAVING ((GROUP_CONCAT(GROUP_CONCAT(vt0.c1))) ISNULL);
SELECT vt1.c0, vt0.c1, vt0.c2, vt0.c0 FROM vt1, vt0;
SELECT vt1.c0, vt0.c1, vt0.c2, vt0.c0 FROM vt1, vt0 WHERE (((DATE(vt0.c0, vt1.c0, vt0.c0, vt0.c1, vt0.c0, vt0.c2, vt0.c2)) ISNULL)) UNION ALL SELECT vt1.c0, vt0.c1, vt0.c2, vt0.c0 FROM vt1, vt0 WHERE ((NOT (((DATE(vt0.c0, vt1.c0, vt0.c0, vt0.c1, vt0.c0, vt0.c2, vt0.c2)) ISNULL)))) UNION ALL SELECT ALL vt1.c0, vt0.c1, vt0.c2, vt0.c0 FROM vt1, vt0 WHERE (((((DATE(vt0.c0, vt1.c0, vt0.c0, vt0.c1, vt0.c0, vt0.c2, vt0.c2)) ISNULL)) ISNULL));
SELECT vt1.c0, vt0.c1, vt0.c2, vt0.c0 FROM vt1, vt0;
SELECT DISTINCT * FROM t0, vt1;
SELECT DISTINCT * FROM t0, vt1 WHERE (x'1d3d') UNION SELECT DISTINCT * FROM t0, vt1 WHERE ((NOT (x'1d3d'))) UNION SELECT DISTINCT * FROM t0, vt1 WHERE (((x'1d3d') ISNULL));
SELECT DISTINCT * FROM t0, vt1;
SELECT vt0.c0, t0.c50 FROM t0 RIGHT OUTER JOIN vt1 ON t0.c0 FULL OUTER JOIN vt0 ON TYPEOF((0.41211338962809474 IN (t0.c0, vt0.c1))) GROUP BY vt0.c0, t0.c50;
SELECT ALL vt0.c0, t0.c50 FROM t0 RIGHT OUTER JOIN vt1 ON t0.c0 FULL OUTER JOIN vt0 ON TYPEOF((0.41211338962809474 IN (t0.c0, vt0.c1))) WHERE ((((vt1.c0)) NOT BETWEEN ((((((((((vt0.c1)AND(vt0.c0)))AND(t0.c46)))AND(t0.c46)))AND(vt0.c0)))) AND ((vt0.c2)))) GROUP BY vt0.c0, t0.c50 UNION SELECT vt0.c0, t0.c50 FROM t0 RIGHT OUTER JOIN vt1 ON t0.c0 FULL OUTER JOIN vt0 ON TYPEOF((0.41211338962809474 IN (t0.c0, vt0.c1))) WHERE ((NOT ((((vt1.c0)) NOT BETWEEN ((((((((((vt0.c1)AND(vt0.c0)))AND(t0.c46)))AND(t0.c46)))AND(vt0.c0)))) AND ((vt0.c2)))))) GROUP BY vt0.c0, t0.c50 UNION SELECT vt0.c0, t0.c50 FROM t0 RIGHT OUTER JOIN vt1 ON t0.c0 FULL OUTER JOIN vt0 ON TYPEOF((0.41211338962809474 IN (t0.c0, vt0.c1))) WHERE ((((((vt1.c0)) NOT BETWEEN ((((((((((vt0.c1)AND(vt0.c0)))AND(t0.c46)))AND(t0.c46)))AND(vt0.c0)))) AND ((vt0.c2)))) ISNULL)) GROUP BY vt0.c0, t0.c50;
SELECT vt0.c0, t0.c50 FROM t0 RIGHT OUTER JOIN vt1 ON t0.c0 FULL OUTER JOIN vt0 ON TYPEOF((0.41211338962809474 IN (t0.c0, vt0.c1))) GROUP BY vt0.c0, t0.c50;
SELECT ALL t0.c46, t0.c50, t0.c0 FROM t0 GROUP BY t0.c46, t0.c50, t0.c0;
SELECT t0.c46, t0.c50, t0.c0 FROM t0 GROUP BY t0.c46, t0.c50, t0.c0 HAVING GROUP_CONCAT(t0.c0 COLLATE NOCASE) UNION ALL SELECT ALL t0.c46, t0.c50, t0.c0 FROM t0 GROUP BY t0.c46, t0.c50, t0.c0 HAVING (NOT (GROUP_CONCAT(t0.c0 COLLATE NOCASE))) UNION ALL SELECT ALL t0.c46, t0.c50, t0.c0 FROM t0 GROUP BY t0.c46, t0.c50, t0.c0 HAVING ((GROUP_CONCAT(t0.c0 COLLATE NOCASE)) ISNULL);
SELECT ALL t0.c46, t0.c50, t0.c0 FROM t0 GROUP BY t0.c46, t0.c50, t0.c0;
SELECT t0.c46, t0.c50, t0.c0 FROM t0 GROUP BY t0.c46, t0.c50, t0.c0 HAVING GROUP_CONCAT(t0.c0 COLLATE NOCASE) UNION ALL SELECT ALL t0.c46, t0.c50, t0.c0 FROM t0 GROUP BY t0.c46, t0.c50, t0.c0 HAVING (NOT (GROUP_CONCAT(t0.c0 COLLATE NOCASE))) UNION ALL SELECT ALL t0.c46, t0.c50, t0.c0 FROM t0 GROUP BY t0.c46, t0.c50, t0.c0 HAVING ((GROUP_CONCAT(t0.c0 COLLATE NOCASE)) ISNULL);
SELECT ALL t0.c46, t0.c50, t0.c0 FROM t0 GROUP BY t0.c46, t0.c50, t0.c0;
SELECT ALL * FROM vt0, vt1, t0;
SELECT ALL * FROM vt0, vt1, t0 WHERE (LENGTH(vt0.c1)) UNION ALL SELECT * FROM vt0, vt1, t0 WHERE ((NOT (LENGTH(vt0.c1)))) UNION ALL SELECT ALL * FROM vt0, vt1, t0 WHERE (((LENGTH(vt0.c1)) ISNULL));
SELECT ALL * FROM vt0, vt1, t0;
SELECT DISTINCT * FROM vt1, vt0, t0;
SELECT DISTINCT * FROM vt1, vt0, t0 WHERE (((((t0.c46 COLLATE BINARY)AND(((vt0.c2) NOT BETWEEN ('-427414660') AND (vt1.c0)))))AND(((vt1.c0)+(vt0.c1))))) UNION SELECT DISTINCT * FROM vt1, vt0, t0 WHERE ((NOT (((((t0.c46 COLLATE BINARY)AND(((vt0.c2) NOT BETWEEN ('-427414660') AND (vt1.c0)))))AND(((vt1.c0)+(vt0.c1))))))) UNION SELECT DISTINCT * FROM vt1, vt0, t0 WHERE (((((((t0.c46 COLLATE BINARY)AND(((vt0.c2) NOT BETWEEN ('-427414660') AND (vt1.c0)))))AND(((vt1.c0)+(vt0.c1))))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0, t0;
SELECT vt0.c2, t0.c46, t0.c50, vt0.c1 FROM t0, vt0 GROUP BY vt0.c2, t0.c46, t0.c50, vt0.c1;
SELECT vt0.c2, t0.c46, t0.c50, vt0.c1 FROM t0, vt0 WHERE (((UPPER(t0.c50)) NOTNULL)) GROUP BY vt0.c2, t0.c46, t0.c50, vt0.c1 UNION SELECT ALL vt0.c2, t0.c46, t0.c50, vt0.c1 FROM t0, vt0 WHERE ((NOT (((UPPER(t0.c50)) NOTNULL)))) GROUP BY vt0.c2, t0.c46, t0.c50, vt0.c1 UNION SELECT ALL vt0.c2, t0.c46, t0.c50, vt0.c1 FROM t0, vt0 WHERE (((((UPPER(t0.c50)) NOTNULL)) ISNULL)) GROUP BY vt0.c2, t0.c46, t0.c50, vt0.c1;
SELECT vt0.c2, t0.c46, t0.c50, vt0.c1 FROM t0, vt0 GROUP BY vt0.c2, t0.c46, t0.c50, vt0.c1;
SELECT vt1.c0, vt0.c1, vt0.c2, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1, vt0.c2, vt0.c0;
SELECT ALL vt1.c0, vt0.c1, vt0.c2, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1, vt0.c2, vt0.c0 HAVING ((vt0.c0)-(AVG(0.8466069759150416))) UNION ALL SELECT ALL vt1.c0, vt0.c1, vt0.c2, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1, vt0.c2, vt0.c0 HAVING (NOT (((vt0.c0)-(AVG(0.8466069759150416))))) UNION ALL SELECT vt1.c0, vt0.c1, vt0.c2, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1, vt0.c2, vt0.c0 HAVING ((((vt0.c0)-(AVG(0.8466069759150416)))) ISNULL);
SELECT vt1.c0, vt0.c1, vt0.c2, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1, vt0.c2, vt0.c0;
SELECT ALL vt1.c0, vt0.c1, vt0.c2, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1, vt0.c2, vt0.c0 HAVING ((vt0.c0)-(AVG(0.8466069759150416))) UNION ALL SELECT ALL vt1.c0, vt0.c1, vt0.c2, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1, vt0.c2, vt0.c0 HAVING (NOT (((vt0.c0)-(AVG(0.8466069759150416))))) UNION ALL SELECT vt1.c0, vt0.c1, vt0.c2, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1, vt0.c2, vt0.c0 HAVING ((((vt0.c0)-(AVG(0.8466069759150416)))) ISNULL);
SELECT vt1.c0, vt0.c1, vt0.c2, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1, vt0.c2, vt0.c0;
SELECT * FROM vt0 INNER JOIN t0 ON (((vt1.c0)) NOT BETWEEN ((((((((((vt0.c2)AND(t0.c50)))AND(x'')))OR(vt1.c0)))OR(t0.c0)))) AND (((~ (NULL))))) LEFT OUTER JOIN vt1 ON ((((((t0.c50)||(vt1.c0)))OR(((t0.c46) BETWEEN (vt0.c1) AND (t0.c46)))))OR(((t0.c0) NOT NULL)));
SELECT ALL * FROM vt0 INNER JOIN t0 ON (((vt1.c0)) NOT BETWEEN ((((((((((vt0.c2)AND(t0.c50)))AND(x'')))OR(vt1.c0)))OR(t0.c0)))) AND (((~ (NULL))))) LEFT OUTER JOIN vt1 ON ((((((t0.c50)||(vt1.c0)))OR(((t0.c46) BETWEEN (vt0.c1) AND (t0.c46)))))OR(((t0.c0) NOT NULL))) WHERE (((HEX(vt0.c0))OR(json_insert(vt0.c0, t0.c50, vt0.c2)))) UNION ALL SELECT * FROM vt0 INNER JOIN t0 ON (((vt1.c0)) NOT BETWEEN ((((((((((vt0.c2)AND(t0.c50)))AND(x'')))OR(vt1.c0)))OR(t0.c0)))) AND (((~ (NULL))))) LEFT OUTER JOIN vt1 ON ((((((t0.c50)||(vt1.c0)))OR(((t0.c46) BETWEEN (vt0.c1) AND (t0.c46)))))OR(((t0.c0) NOT NULL))) WHERE ((NOT (((HEX(vt0.c0))OR(json_insert(vt0.c0, t0.c50, vt0.c2)))))) UNION ALL SELECT ALL * FROM vt0 INNER JOIN t0 ON (((vt1.c0)) NOT BETWEEN ((((((((((vt0.c2)AND(t0.c50)))AND(x'')))OR(vt1.c0)))OR(t0.c0)))) AND (((~ (NULL))))) LEFT OUTER JOIN vt1 ON ((((((t0.c50)||(vt1.c0)))OR(((t0.c46) BETWEEN (vt0.c1) AND (t0.c46)))))OR(((t0.c0) NOT NULL))) WHERE (((((HEX(vt0.c0))OR(json_insert(vt0.c0, t0.c50, vt0.c2)))) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c0, vt0.c2, t0.c0, t0.c46, vt0.c1 FROM t0, vt1, vt0;
SELECT DISTINCT vt1.c0, vt0.c0, vt0.c2, t0.c0, t0.c46, vt0.c1 FROM t0, vt1, vt0 WHERE (CAST(((((t0.c0)OR(vt1.c0)))OR(t0.c50)) AS BLOB)) UNION SELECT DISTINCT vt1.c0, vt0.c0, vt0.c2, t0.c0, t0.c46, vt0.c1 FROM t0, vt1, vt0 WHERE ((NOT (CAST(((((t0.c0)OR(vt1.c0)))OR(t0.c50)) AS BLOB)))) UNION SELECT DISTINCT vt1.c0, vt0.c0, vt0.c2, t0.c0, t0.c46, vt0.c1 FROM t0, vt1, vt0 WHERE (((CAST(((((t0.c0)OR(vt1.c0)))OR(t0.c50)) AS BLOB)) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c0, vt0.c2, t0.c0, t0.c46, vt0.c1 FROM t0, vt1, vt0;
SELECT vt0.c1, vt0.c2 FROM vt1, t0, vt0 GROUP BY vt0.c1, vt0.c2;
SELECT ALL vt0.c1, vt0.c2 FROM vt1, t0, vt0 WHERE ((LOWER(t0.c0) IN (vt0.c2 COLLATE RTRIM, CASE WHEN vt1.c0 THEN t0.c0 END))) GROUP BY vt0.c1, vt0.c2 UNION SELECT ALL vt0.c1, vt0.c2 FROM vt1, t0, vt0 WHERE ((NOT ((LOWER(t0.c0) IN (vt0.c2 COLLATE RTRIM, CASE WHEN vt1.c0 THEN t0.c0 END))))) GROUP BY vt0.c1, vt0.c2 UNION SELECT vt0.c1, vt0.c2 FROM vt1, t0, vt0 WHERE ((((LOWER(t0.c0) IN (vt0.c2 COLLATE RTRIM, CASE WHEN vt1.c0 THEN t0.c0 END))) ISNULL)) GROUP BY vt0.c1, vt0.c2;
SELECT vt0.c1, vt0.c2 FROM vt1, t0, vt0 GROUP BY vt0.c1, vt0.c2;
SELECT vt1.c0, t0.c46, t0.c0, t0.c50 FROM t0, vt1 GROUP BY vt1.c0, t0.c46, t0.c0, t0.c50;
SELECT vt1.c0, t0.c46, t0.c0, t0.c50 FROM t0, vt1 GROUP BY vt1.c0, t0.c46, t0.c0, t0.c50 HAVING ((((((((GROUP_CONCAT(t0.c0))OR(((t0.c0)<(COUNT(*))))))AND(CASE COUNT(TOTAL(COUNT(t0.c46)))  WHEN MAX(TOTAL(vt1.c0)) THEN TOTAL(TOTAL(COUNT(vt1.c0))) WHEN vt1.c0 THEN COUNT(t0.c46) WHEN AVG(AVG(t0.c0)) THEN t0.c46 ELSE t0.c50 END)))AND(AVG(t0.c50))))AND(CAST(t0.c50 AS TEXT))) UNION ALL SELECT ALL vt1.c0, t0.c46, t0.c0, t0.c50 FROM t0, vt1 GROUP BY vt1.c0, t0.c46, t0.c0, t0.c50 HAVING (NOT (((((((((GROUP_CONCAT(t0.c0))OR(((t0.c0)<(COUNT(*))))))AND(CASE COUNT(TOTAL(COUNT(t0.c46)))  WHEN MAX(TOTAL(vt1.c0)) THEN TOTAL(TOTAL(COUNT(vt1.c0))) WHEN vt1.c0 THEN COUNT(t0.c46) WHEN AVG(AVG(t0.c0)) THEN t0.c46 ELSE t0.c50 END)))AND(AVG(t0.c50))))AND(CAST(t0.c50 AS TEXT))))) UNION ALL SELECT vt1.c0, t0.c46, t0.c0, t0.c50 FROM t0, vt1 GROUP BY vt1.c0, t0.c46, t0.c0, t0.c50 HAVING ((((((((((GROUP_CONCAT(t0.c0))OR(((t0.c0)<(COUNT(*))))))AND(CASE COUNT(TOTAL(COUNT(t0.c46)))  WHEN MAX(TOTAL(vt1.c0)) THEN TOTAL(TOTAL(COUNT(vt1.c0))) WHEN vt1.c0 THEN COUNT(t0.c46) WHEN AVG(AVG(t0.c0)) THEN t0.c46 ELSE t0.c50 END)))AND(AVG(t0.c50))))AND(CAST(t0.c50 AS TEXT)))) ISNULL);
SELECT ALL vt1.c0, vt0.c0, vt0.c1, t0.c0 FROM vt1, vt0, t0;
SELECT ALL vt1.c0, vt0.c0, vt0.c1, t0.c0 FROM vt1, vt0, t0 WHERE (vt0.c0 COLLATE RTRIM) UNION ALL SELECT ALL vt1.c0, vt0.c0, vt0.c1, t0.c0 FROM vt1, vt0, t0 WHERE ((NOT (vt0.c0 COLLATE RTRIM))) UNION ALL SELECT ALL vt1.c0, vt0.c0, vt0.c1, t0.c0 FROM vt1, vt0, t0 WHERE (((vt0.c0 COLLATE RTRIM) ISNULL));
SELECT ALL vt1.c0, vt0.c0, vt0.c1, t0.c0 FROM vt1, vt0, t0;
SELECT DISTINCT t0.c50, t0.c0, vt0.c0, t0.c46, vt0.c2 FROM vt0, t0;
SELECT DISTINCT t0.c50, t0.c0, vt0.c0, t0.c46, vt0.c2 FROM vt0, t0 WHERE (((t0.c0) NOTNULL) COLLATE BINARY) UNION SELECT DISTINCT t0.c50, t0.c0, vt0.c0, t0.c46, vt0.c2 FROM vt0, t0 WHERE ((NOT (((t0.c0) NOTNULL) COLLATE BINARY))) UNION SELECT DISTINCT t0.c50, t0.c0, vt0.c0, t0.c46, vt0.c2 FROM vt0, t0 WHERE (((((t0.c0) NOTNULL) COLLATE BINARY) ISNULL));
SELECT DISTINCT t0.c50, t0.c0, vt0.c0, t0.c46, vt0.c2 FROM vt0, t0;
SELECT vt0.c1, vt0.c2, vt0.c0, vt1.c0 FROM vt1 INDEXED BY i46, vt0 GROUP BY vt0.c1, vt0.c2, vt0.c0, vt1.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((((TOTAL(t0.c0)) IS TRUE))OR(TOTAL(TOTAL(SUM(t0.c46))) COLLATE NOCASE)))AND(AVG(t0.c0))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((((((TOTAL(t0.c0)) IS TRUE))OR(TOTAL(TOTAL(SUM(t0.c46))) COLLATE NOCASE)))AND(AVG(t0.c0))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((((((TOTAL(t0.c0)) IS TRUE))OR(TOTAL(TOTAL(SUM(t0.c46))) COLLATE NOCASE)))AND(AVG(t0.c0)))) ISNULL);
SELECT t0.c50, t0.c0, vt0.c2 FROM vt0 INNER JOIN t0 ON CASE vt0.c1  WHEN vt0.c2 THEN NULL ELSE t0.c46 END COLLATE NOCASE;
SELECT t0.c50, t0.c0, vt0.c2 FROM vt0 INNER JOIN t0 ON CASE vt0.c1  WHEN vt0.c2 THEN NULL ELSE t0.c46 END COLLATE NOCASE WHERE (((((vt0.c2) IS TRUE))>=(((t0.c0)&(t0.c50))))) UNION ALL SELECT t0.c50, t0.c0, vt0.c2 FROM vt0 INNER JOIN t0 ON CASE vt0.c1  WHEN vt0.c2 THEN NULL ELSE t0.c46 END COLLATE NOCASE WHERE ((NOT (((((vt0.c2) IS TRUE))>=(((t0.c0)&(t0.c50))))))) UNION ALL SELECT ALL t0.c50, t0.c0, vt0.c2 FROM vt0 INNER JOIN t0 ON CASE vt0.c1  WHEN vt0.c2 THEN NULL ELSE t0.c46 END COLLATE NOCASE WHERE (((((((vt0.c2) IS TRUE))>=(((t0.c0)&(t0.c50))))) ISNULL));
SELECT t0.c50, t0.c0, vt0.c2 FROM vt0 INNER JOIN t0 ON CASE vt0.c1  WHEN vt0.c2 THEN NULL ELSE t0.c46 END COLLATE NOCASE;
SELECT DISTINCT vt0.c0 FROM vt0, vt1, t0;
SELECT DISTINCT vt0.c0 FROM vt0, vt1, t0 WHERE (CAST(vt0.c2 AS INTEGER)) UNION SELECT DISTINCT vt0.c0 FROM vt0, vt1, t0 WHERE ((NOT (CAST(vt0.c2 AS INTEGER)))) UNION SELECT DISTINCT vt0.c0 FROM vt0, vt1, t0 WHERE (((CAST(vt0.c2 AS INTEGER)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0, vt1, t0;
SELECT vt0.c2, vt0.c0, vt1.c0 FROM vt1 LEFT OUTER JOIN t0 ON x'' INNER JOIN vt0 ON ((((t0.c50)OR(vt0.c1))) BETWEEN ((((vt0.c2))<((t0.c0)))) AND (CAST(vt0.c2 AS TEXT))) GROUP BY vt0.c2, vt0.c0, vt1.c0;
SELECT ALL vt0.c2, vt0.c0, vt1.c0 FROM vt1 LEFT OUTER JOIN t0 ON x'' INNER JOIN vt0 ON ((((t0.c50)OR(vt0.c1))) BETWEEN ((((vt0.c2))<((t0.c0)))) AND (CAST(vt0.c2 AS TEXT))) WHERE (0.17188548895071598) GROUP BY vt0.c2, vt0.c0, vt1.c0 UNION SELECT ALL vt0.c2, vt0.c0, vt1.c0 FROM vt1 LEFT OUTER JOIN t0 ON x'' INNER JOIN vt0 ON ((((t0.c50)OR(vt0.c1))) BETWEEN ((((vt0.c2))<((t0.c0)))) AND (CAST(vt0.c2 AS TEXT))) WHERE ((NOT (0.17188548895071598))) GROUP BY vt0.c2, vt0.c0, vt1.c0 UNION SELECT vt0.c2, vt0.c0, vt1.c0 FROM vt1 LEFT OUTER JOIN t0 ON x'' INNER JOIN vt0 ON ((((t0.c50)OR(vt0.c1))) BETWEEN ((((vt0.c2))<((t0.c0)))) AND (CAST(vt0.c2 AS TEXT))) WHERE (((0.17188548895071598) ISNULL)) GROUP BY vt0.c2, vt0.c0, vt1.c0;
SELECT vt0.c2, vt0.c0, vt1.c0 FROM vt1 LEFT OUTER JOIN t0 ON x'' INNER JOIN vt0 ON ((((t0.c50)OR(vt0.c1))) BETWEEN ((((vt0.c2))<((t0.c0)))) AND (CAST(vt0.c2 AS TEXT))) GROUP BY vt0.c2, vt0.c0, vt1.c0;
SELECT ALL t0.c0, vt0.c1, t0.c50 FROM vt0, t0, vt1 GROUP BY t0.c0, vt0.c1, t0.c50;
SELECT ALL t0.c0, vt0.c1, t0.c50 FROM vt0, t0, vt1 GROUP BY t0.c0, vt0.c1, t0.c50 HAVING json_valid(((COUNT(COUNT(AVG(vt0.c1)))) NOT BETWEEN (SUM(MAX(MIN('k4.툎a_ꎖT')))) AND (SUM(MIN(vt0.c0))))) UNION ALL SELECT ALL t0.c0, vt0.c1, t0.c50 FROM vt0, t0, vt1 GROUP BY t0.c0, vt0.c1, t0.c50 HAVING (NOT (json_valid(((COUNT(COUNT(AVG(vt0.c1)))) NOT BETWEEN (SUM(MAX(MIN('k4.툎a_ꎖT')))) AND (SUM(MIN(vt0.c0))))))) UNION ALL SELECT ALL t0.c0, vt0.c1, t0.c50 FROM vt0, t0, vt1 GROUP BY t0.c0, vt0.c1, t0.c50 HAVING ((json_valid(((COUNT(COUNT(AVG(vt0.c1)))) NOT BETWEEN (SUM(MAX(MIN('k4.툎a_ꎖT')))) AND (SUM(MIN(vt0.c0)))))) ISNULL);
SELECT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE (((((((t0.c0)OR(x'')))AND(t0.c50)))||(((t0.c50)>=(t0.c50))))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT (((((((t0.c0)OR(x'')))AND(t0.c50)))||(((t0.c50)>=(t0.c50))))))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE (((((((((t0.c0)OR(x'')))AND(t0.c50)))||(((t0.c50)>=(t0.c50))))) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((((t0.c0)>>(t0.c46)) IN ((t0.c0 IN (t0.c0, t0.c0))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((((t0.c0)>>(t0.c46)) IN ((t0.c0 IN (t0.c0, t0.c0))))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((((t0.c0)>>(t0.c46)) IN ((t0.c0 IN (t0.c0, t0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL vt1.c0, vt0.c1, t0.c0 FROM vt0, vt1, t0 GROUP BY vt1.c0, vt0.c1, t0.c0;
SELECT vt1.c0, vt0.c1, t0.c0 FROM vt0, vt1, t0 WHERE (((((vt0.c2)GLOB(t0.c50))) NOTNULL)) GROUP BY vt1.c0, vt0.c1, t0.c0 UNION SELECT vt1.c0, vt0.c1, t0.c0 FROM vt0, vt1, t0 WHERE ((NOT (((((vt0.c2)GLOB(t0.c50))) NOTNULL)))) GROUP BY vt1.c0, vt0.c1, t0.c0 UNION SELECT ALL vt1.c0, vt0.c1, t0.c0 FROM vt0, vt1, t0 WHERE (((((((vt0.c2)GLOB(t0.c50))) NOTNULL)) ISNULL)) GROUP BY vt1.c0, vt0.c1, t0.c0;
SELECT ALL vt1.c0, vt0.c1, t0.c0 FROM vt0, vt1, t0 GROUP BY vt1.c0, vt0.c1, t0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING SUM(MIN(GROUP_CONCAT(AVG(TOTAL(MIN(AVG(MIN(vt0.c0)))))))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (SUM(MIN(GROUP_CONCAT(AVG(TOTAL(MIN(AVG(MIN(vt0.c0)))))))))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((SUM(MIN(GROUP_CONCAT(AVG(TOTAL(MIN(AVG(MIN(vt0.c0))))))))) ISNULL);
SELECT ALL vt0.c1, vt0.c2, t0.c46 FROM vt0 NATURAL JOIN t0;
SELECT ALL vt0.c1, vt0.c2, t0.c46 FROM vt0 NATURAL JOIN t0 WHERE (vt0.c1) UNION ALL SELECT ALL vt0.c1, vt0.c2, t0.c46 FROM vt0 NATURAL JOIN t0 WHERE ((NOT (vt0.c1))) UNION ALL SELECT ALL vt0.c1, vt0.c2, t0.c46 FROM vt0 NATURAL JOIN t0 WHERE (((vt0.c1) ISNULL));
SELECT ALL vt0.c1, vt0.c2, t0.c46 FROM vt0 NATURAL JOIN t0;
SELECT DISTINCT * FROM t0, vt0 NATURAL JOIN vt1;
SELECT DISTINCT * FROM t0, vt0 NATURAL JOIN vt1 WHERE (((0xffffffffcb2b81ba) NOT BETWEEN (CASE t0.c46  WHEN t0.c0 THEN t0.c46 END) AND (((vt0.c1)/(t0.c50))))) UNION SELECT DISTINCT * FROM t0, vt0 NATURAL JOIN vt1 WHERE ((NOT (((0Xffffffffcb2b81ba) NOT BETWEEN (CASE t0.c46  WHEN t0.c0 THEN t0.c46 END) AND (((vt0.c1)/(t0.c50))))))) UNION SELECT DISTINCT * FROM t0, vt0 NATURAL JOIN vt1 WHERE (((((0xffffffffcb2b81ba) NOT BETWEEN (CASE t0.c46  WHEN t0.c0 THEN t0.c46 END) AND (((vt0.c1)/(t0.c50))))) ISNULL));
SELECT DISTINCT * FROM t0, vt0 NATURAL JOIN vt1;
SELECT t0.c0, t0.c46, t0.c50, vt1.c0 FROM vt1, t0, vt0 GROUP BY t0.c0, t0.c46, t0.c50, vt1.c0;
SELECT t0.c0, t0.c46, t0.c50, vt1.c0 FROM vt1, t0, vt0 WHERE (TRIM(NULL)) GROUP BY t0.c0, t0.c46, t0.c50, vt1.c0 UNION SELECT ALL t0.c0, t0.c46, t0.c50, vt1.c0 FROM vt1, t0, vt0 WHERE ((NOT (TRIM(NULL)))) GROUP BY t0.c0, t0.c46, t0.c50, vt1.c0 UNION SELECT ALL t0.c0, t0.c46, t0.c50, vt1.c0 FROM vt1, t0, vt0 WHERE (((TRIM(NULL)) ISNULL)) GROUP BY t0.c0, t0.c46, t0.c50, vt1.c0;
SELECT t0.c0, t0.c46, t0.c50, vt1.c0 FROM vt1, t0, vt0 GROUP BY t0.c0, t0.c46, t0.c50, vt1.c0;
SELECT vt0.c0, t0.c0 FROM vt0, t0, vt1 GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM vt0, t0, vt1 GROUP BY vt0.c0, t0.c0 HAVING CASE CASE WHEN COUNT(MAX(vt0.c1)) THEN MAX(AVG(t0.c46)) ELSE MIN(COUNT(*)) END  WHEN ((((((((vt0.c0)AND(MIN(vt1.c0))))AND(vt0.c0)))AND(COUNT(*))))OR(TOTAL(AVG(1.63266656E9)))) THEN (vt1.c0 IN ()) WHEN COUNT(COUNT(*)) THEN COUNT(TOTAL(MIN(GROUP_CONCAT(COUNT(*))))) WHEN MAX(MAX(vt0.c1)) THEN ((GROUP_CONCAT(t0.c0))>(t0.c46)) END UNION ALL SELECT ALL vt0.c0, t0.c0 FROM vt0, t0, vt1 GROUP BY vt0.c0, t0.c0 HAVING (NOT (CASE CASE WHEN COUNT(MAX(vt0.c1)) THEN MAX(AVG(t0.c46)) ELSE MIN(COUNT(*)) END  WHEN ((((((((vt0.c0)AND(MIN(vt1.c0))))AND(vt0.c0)))AND(COUNT(*))))OR(TOTAL(AVG(1.63266656E9)))) THEN (vt1.c0 IN ()) WHEN COUNT(COUNT(*)) THEN COUNT(TOTAL(MIN(GROUP_CONCAT(COUNT(*))))) WHEN MAX(MAX(vt0.c1)) THEN ((GROUP_CONCAT(t0.c0))>(t0.c46)) END)) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM vt0, t0, vt1 GROUP BY vt0.c0, t0.c0 HAVING ((CASE CASE WHEN COUNT(MAX(vt0.c1)) THEN MAX(AVG(t0.c46)) ELSE MIN(COUNT(*)) END  WHEN ((((((((vt0.c0)AND(MIN(vt1.c0))))AND(vt0.c0)))AND(COUNT(*))))OR(TOTAL(AVG(1.63266656E9)))) THEN (vt1.c0 IN ()) WHEN COUNT(COUNT(*)) THEN COUNT(TOTAL(MIN(GROUP_CONCAT(COUNT(*))))) WHEN MAX(MAX(vt0.c1)) THEN ((GROUP_CONCAT(t0.c0))>(t0.c46)) END) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (((((vt1.c0) IS TRUE)) ISNULL)) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0) IS TRUE)) ISNULL)))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((((((vt1.c0) IS TRUE)) ISNULL)) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt1, vt0, t0;
SELECT DISTINCT * FROM vt1, vt0, t0 WHERE (CAST(json_patch(vt0.c0, t0.c46) AS BLOB)) UNION SELECT DISTINCT * FROM vt1, vt0, t0 WHERE ((NOT (CAST(json_patch(vt0.c0, t0.c46) AS BLOB)))) UNION SELECT DISTINCT * FROM vt1, vt0, t0 WHERE (((CAST(json_patch(vt0.c0, t0.c46) AS BLOB)) ISNULL));
SELECT ALL vt0.c2 FROM vt0 GROUP BY vt0.c2;
SELECT ALL vt0.c2 FROM vt0 WHERE (LENGTH(json_type(vt0.c0))) GROUP BY vt0.c2 UNION SELECT vt0.c2 FROM vt0 WHERE ((NOT (LENGTH(json_type(vt0.c0))))) GROUP BY vt0.c2 UNION SELECT vt0.c2 FROM vt0 WHERE (((LENGTH(json_type(vt0.c0))) ISNULL)) GROUP BY vt0.c2;
SELECT t0.c46 FROM vt1, t0, vt0 GROUP BY t0.c46;
SELECT t0.c46 FROM vt1, t0, vt0 GROUP BY t0.c46 HAVING AVG(SUM(vt1.c0)) COLLATE BINARY UNION ALL SELECT t0.c46 FROM vt1, t0, vt0 GROUP BY t0.c46 HAVING (NOT (AVG(SUM(vt1.c0)) COLLATE BINARY)) UNION ALL SELECT t0.c46 FROM vt1, t0, vt0 GROUP BY t0.c46 HAVING ((AVG(SUM(vt1.c0)) COLLATE BINARY) ISNULL);
SELECT * FROM vt0, vt1 NOT INDEXED;
SELECT ALL * FROM vt0, vt1 WHERE (1310963247) UNION ALL SELECT * FROM vt0, vt1 WHERE ((NOT (1310963247))) UNION ALL SELECT * FROM vt0, vt1 WHERE (((1310963247) ISNULL));
SELECT * FROM vt0, vt1 NOT INDEXED;
SELECT DISTINCT vt0.c2 FROM vt0;
SELECT DISTINCT vt0.c2 FROM vt0 WHERE ((((vt0.c2 IN (vt0.c2)))|(vt0.c2 COLLATE BINARY))) UNION SELECT DISTINCT vt0.c2 FROM vt0 WHERE ((NOT ((((vt0.c2 IN (vt0.c2)))|(vt0.c2 COLLATE BINARY))))) UNION SELECT DISTINCT vt0.c2 FROM vt0 WHERE ((((((vt0.c2 IN (vt0.c2)))|(vt0.c2 COLLATE BINARY))) ISNULL));
SELECT DISTINCT vt0.c2 FROM vt0;
SELECT ALL vt0.c2, t0.c46, t0.c50, vt0.c1 FROM vt0 LEFT OUTER JOIN t0 ON (((vt0.c1)LIKE(t0.c0)) IN (((vt0.c2) ISNULL))) GROUP BY vt0.c2, t0.c46, t0.c50, vt0.c1;
SELECT vt0.c2, t0.c46, t0.c50, vt0.c1 FROM vt0 LEFT OUTER JOIN t0 ON (((vt0.c1)LIKE(t0.c0)) IN (((vt0.c2) ISNULL))) WHERE ((((((t0.c50)<(vt0.c2)), (vt0.c2 IN (t0.c0)), LIKELY(vt0.c2)))<(((vt0.c2 IN (t0.c0)), ((t0.c46)-(vt0.c2)), ((((((((vt0.c0)OR(t0.c46)))OR(vt0.c0)))OR(vt0.c2)))AND(vt0.c0)))))) GROUP BY vt0.c2, t0.c46, t0.c50, vt0.c1 UNION SELECT vt0.c2, t0.c46, t0.c50, vt0.c1 FROM vt0 LEFT OUTER JOIN t0 ON (((vt0.c1)LIKE(t0.c0)) IN (((vt0.c2) ISNULL))) WHERE ((NOT ((((((t0.c50)<(vt0.c2)), (vt0.c2 IN (t0.c0)), LIKELY(vt0.c2)))<(((vt0.c2 IN (t0.c0)), ((t0.c46)-(vt0.c2)), ((((((((vt0.c0)OR(t0.c46)))OR(vt0.c0)))OR(vt0.c2)))AND(vt0.c0)))))))) GROUP BY vt0.c2, t0.c46, t0.c50, vt0.c1 UNION SELECT vt0.c2, t0.c46, t0.c50, vt0.c1 FROM vt0 LEFT OUTER JOIN t0 ON (((vt0.c1)LIKE(t0.c0)) IN (((vt0.c2) ISNULL))) WHERE ((((((((t0.c50)<(vt0.c2)), (vt0.c2 IN (t0.c0)), LIKELY(vt0.c2)))<(((vt0.c2 IN (t0.c0)), ((t0.c46)-(vt0.c2)), ((((((((vt0.c0)OR(t0.c46)))OR(vt0.c0)))OR(vt0.c2)))AND(vt0.c0)))))) ISNULL)) GROUP BY vt0.c2, t0.c46, t0.c50, vt0.c1;
SELECT ALL vt0.c2, t0.c46, t0.c50, vt0.c1 FROM vt0 LEFT OUTER JOIN t0 ON (((vt0.c1)LIKE(t0.c0)) IN (((vt0.c2) ISNULL))) GROUP BY vt0.c2, t0.c46, t0.c50, vt0.c1;
SELECT t0.c50, vt0.c1, vt0.c2, t0.c46, vt0.c0 FROM t0, vt0 GROUP BY t0.c50, vt0.c1, vt0.c2, t0.c46, vt0.c0;
SELECT t0.c50, vt0.c1, vt0.c2, t0.c46, vt0.c0 FROM t0, vt0 GROUP BY t0.c50, vt0.c1, vt0.c2, t0.c46, vt0.c0 HAVING json_array(((((t0.c0)AND(t0.c46)))OR(GROUP_CONCAT(SUM(vt0.c0)))), COUNT(*)) UNION ALL SELECT t0.c50, vt0.c1, vt0.c2, t0.c46, vt0.c0 FROM t0, vt0 GROUP BY t0.c50, vt0.c1, vt0.c2, t0.c46, vt0.c0 HAVING (NOT (json_array(((((t0.c0)AND(t0.c46)))OR(GROUP_CONCAT(SUM(vt0.c0)))), COUNT(*)))) UNION ALL SELECT ALL t0.c50, vt0.c1, vt0.c2, t0.c46, vt0.c0 FROM t0 NOT INDEXED, vt0 GROUP BY t0.c50, vt0.c1, vt0.c2, t0.c46, vt0.c0 HAVING ((json_array(((((t0.c0)AND(t0.c46)))OR(GROUP_CONCAT(SUM(vt0.c0)))), COUNT(*))) ISNULL);
SELECT ALL MIN(((((+ (t0.c50)), CASE WHEN t0.c0 THEN vt0.c2 ELSE vt0.c2 END, ((t0.c0) IS TRUE)))<(((((vt1.c0)) BETWEEN ((t0.c50)) AND ((t0.c46))), ((vt0.c2) NOT BETWEEN (t0.c46) AND (t0.c50)), CASE WHEN vt0.c0 THEN t0.c0 ELSE '-990362749' END)))) FROM vt0, vt1, t0 ORDER BY CAST(LIKE(t0.c50, 0.8959026844310003, '젼') AS NUMERIC)  NULLS LAST, (NOT ('1625007277')) ASC, ((vt0.c2 COLLATE NOCASE) ISNULL) DESC, ((((vt0.c0)) BETWEEN ((vt0.c2)) AND ((NULL))) IN (((((((((t0.c46)AND(vt1.c0)))OR(NULL)))OR(t0.c46)))AND(vt0.c2))));
SELECT ALL vt0.c2 FROM vt0;
SELECT ALL vt0.c2 FROM vt0 WHERE (((vt0.c0) IS FALSE) COLLATE RTRIM) UNION ALL SELECT ALL vt0.c2 FROM vt0 WHERE ((NOT (((vt0.c0) IS FALSE) COLLATE RTRIM))) UNION ALL SELECT ALL vt0.c2 FROM vt0 WHERE (((((vt0.c0) IS FALSE) COLLATE RTRIM) ISNULL));
SELECT ALL vt0.c2 FROM vt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS INTEGER)) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS INTEGER)))) UNION SELECT DISTINCT * FROM vt1 WHERE (((CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt1.c0, t0.c0, vt0.c2, vt0.c1, t0.c50, vt0.c0, t0.c46 FROM t0 FULL OUTER JOIN vt1 ON vt0.c0 INNER JOIN vt0 ON CASE ((vt1.c0)!=(vt0.c0))  WHEN ((t0.c0) NOT BETWEEN (vt1.c0) AND (t0.c46)) THEN ((((((((vt0.c2)OR(vt0.c0)))OR(t0.c50)))AND(NULL)))AND(vt0.c2)) END GROUP BY vt1.c0, t0.c0, vt0.c2, vt0.c1, t0.c50, vt0.c0, t0.c46;
SELECT ALL t0.c46 FROM t0 GROUP BY t0.c46;
SELECT ALL t0.c46 FROM t0 GROUP BY t0.c46 HAVING MAX(((t0.c50) IS TRUE)) UNION ALL SELECT t0.c46 FROM t0 GROUP BY t0.c46 HAVING (NOT (MAX(((t0.c50) IS TRUE)))) UNION ALL SELECT ALL t0.c46 FROM t0 GROUP BY t0.c46 HAVING ((MAX(((t0.c50) IS TRUE))) ISNULL);
SELECT ALL t0.c46 FROM t0 GROUP BY t0.c46;
SELECT ALL t0.c46 FROM t0 GROUP BY t0.c46 HAVING MAX(((t0.c50) IS TRUE)) UNION ALL SELECT t0.c46 FROM t0 GROUP BY t0.c46 HAVING (NOT (MAX(((t0.c50) IS TRUE)))) UNION ALL SELECT ALL t0.c46 FROM t0 GROUP BY t0.c46 HAVING ((MAX(((t0.c50) IS TRUE))) ISNULL);
SELECT ALL t0.c46 FROM t0 GROUP BY t0.c46;
