-- Time: 2024/06/09 00:24:56
-- Database: database54
-- Database version: 3.40.0
-- seed value: 598109854
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, c3, c4); -- 1ms;
CREATE TABLE t1 (c0 BLOB ); -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
INSERT OR REPLACE INTO t1(c0) VALUES (NULL), (0.12673290745132038), (''); -- 0ms;
ANALYZE; -- 2ms;
INSERT OR IGNORE INTO t1(c0) VALUES (0.12673290745132038), ('1394147181'), (0.14788228303734385); -- 0ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (NULL); -- 3ms;
CREATE INDEX IF NOT EXISTS i55 ON t1(((((((c0)&(c0)))OR(((((c0)AND(c0)))OR(c0)))))AND(CASE x'e9e5'  WHEN c0 THEN c0 ELSE c0 END)) COLLATE RTRIM) WHERE (- (CAST(c0 AS INTEGER))); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
REINDEX  t1; -- 0ms;
INSERT OR ABORT INTO rt0(c3) VALUES ('0.12673290745132038'); -- 0ms;
INSERT OR FAIL INTO t1 VALUES (x''); -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c0) VALUES (0.12673290745132038, 0.8416412228646735); -- 0ms;
PRAGMA temp.cache_spill; -- 0ms;
REINDEX; -- 0ms;
INSERT OR FAIL INTO rt0(c3, c4, c2) VALUES (NULL, x'', NULL); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c4, c0, c3, c2) VALUES ('582305774', NULL, 0.14788228303734385, 0xffffffffd80ca6e9); -- 0ms;
INSERT OR FAIL INTO t1(c0) VALUES ('1394147181'); -- 1ms;
ANALYZE i55; -- 0ms;
PRAGMA wal_autocheckpoint = -6831739067801841358; -- 0ms;
INSERT OR IGNORE INTO rt0(c4, c2, c1, c0) VALUES (NULL, NULL, NULL, 0.5955113058660104); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
CREATE VIEW  IF NOT EXISTS v0(c0) AS SELECT DISTINCT SUM((- (rt0.c4)) COLLATE BINARY) FROM rt0, t1 WHERE (NULLIF('306861841', CAST('.K葹ｭvj' AS NUMERIC))); -- 0ms;
INSERT OR IGNORE INTO t1(c0) VALUES ('d'); -- 1ms;
CREATE VIRTUAL TABLE rt1 USING rtree(c0, c1, c2, +c3 TEXT ); -- 3ms;
UPDATE OR ROLLBACK rt0 SET c3='Q⪒-/6뿫>'; -- 1ms;
ANALYZE main; -- 0ms;
INSERT OR REPLACE INTO rt0(c2, c4, c1, c3) VALUES ('59183054', NULL, NULL, x''); -- 0ms;
ANALYZE temp; -- 0ms;
INSERT OR IGNORE INTO rt1(c2, c0, c1) VALUES (NULL, NULL, x''), ('0.14788228303734385', x'', -47000396), ('#N?7q ', x'', NULL); -- 0ms;
INSERT OR IGNORE INTO t1(c0) VALUES (''), (x''), (0.9583522688575646), (x''), ('1826091579'); -- 1ms;
END; -- 1ms;
CREATE UNIQUE INDEX IF NOT EXISTS i43 ON t1((c0 IN ()) COLLATE BINARY ASC); -- 0ms;
CREATE INDEX i35 ON t1((- (((c0)||(c0)))) COLLATE RTRIM); -- 0ms;
CREATE UNIQUE INDEX i16 ON t1(NULL COLLATE NOCASE DESC); -- 3ms;
PRAGMA journal_mode = WAL; -- 7ms;
INSERT OR REPLACE INTO rt1(c0, c3, c1) VALUES ('-265082319', '306861841', NULL), (0.8416412228646735, '-47000396', x''), (0Xffffffffb46a254e, NULL, NULL); -- 0ms;
INSERT OR IGNORE INTO rt1(c0, c1, c2) VALUES ('-377569301', '306861841', x''); -- 0ms;
VACUUM temp; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO rt1(c1, c2, c0) VALUES (NULL, -405171714, x''), (193102969, '^?&{PgY\', ''), ('-265082319', '582305774', '-1883085219'), (NULL, 'sqrq', NULL), ('#O㪂m5]P>''', -1740926390, LOWER(((((x'a645')AND(NULL)))AND('|S')))); -- 0ms;
INSERT OR FAIL INTO rt0(c0, c4, c1) VALUES (x'', 0.630281578261218, x''), (NULL, 0.5441216616218787, x''), (NULL, x'6255', '-377569301'); -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c4, c0, c3) VALUES (NULL, '-1', NULL, NULL); -- 0ms;
UPDATE OR IGNORE t1 SET c0=NULL WHERE SQLITE_SOURCE_ID(); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
PRAGMA locking_mode = NORMAL; -- 0ms;
PRAGMA main.reverse_unordered_selects; -- 0ms;
INSERT OR ABORT INTO rt1(c3, c2, c1, c0) VALUES ('''', '*', -265082319, x''); -- 0ms;
INSERT OR IGNORE INTO t1 VALUES ('*'); -- 0ms;
INSERT OR IGNORE INTO rt1(c3, c1, c2, c0) VALUES (485897317, 0.8903444626559096, -3.77569301E8, x'675a8575'), (x'', x'', x'e495', ''''), ('59183054', '', x'', '^?&{PgY\'); -- 1ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt1(c2) VALUES (1826091579), (0.630281578261218), (NULL); -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM temp; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT; -- 1ms;
CREATE TEMPORARY TABLE IF NOT EXISTS t0 (c0 REAL , c1 BLOB , c2 INTEGER ); -- 0ms;
INSERT OR IGNORE INTO rt1(c3, c2, c1, c0) VALUES (NULL, x'e057', '*>X)''G', -2.65082319E8); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES (x'', x'', ''); -- 5ms;
ANALYZE; -- 0ms;
INSERT OR ABORT INTO t0(c0, c2) VALUES (-1.26811205E9, 1043495188); -- 1ms;
BEGIN  TRANSACTION; -- 4ms;
ANALYZE main; -- 1ms;
INSERT OR IGNORE INTO t1(c0) VALUES (NULL); -- 0ms;
REINDEX  rt0; -- 0ms;
REINDEX; -- 1ms;
PRAGMA temp.wal_autocheckpoint = -5700229640247743498; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i35', ' sz=967383647 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO rt1(c3, c0, c2) VALUES (0.7708968962232681, '1843955718', NULL), (((CAST(x'e2fb89be' AS NUMERIC))-((('582305774')OR(9.27283842E8)))), '*>X)''G', x''), (x'', x'', 0xffffffffca397180), (x'', x'327b', '582305774'), (204081735, NULL, NULL); -- 1ms;
PRAGMA temp.wal_autocheckpoint = -7854960544984590362; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((0.868614000215783) NOTNULL)  WHEN 0.9622014084260463 COLLATE BINARY THEN CASE NULL  WHEN '|s' THEN -804836233 END WHEN GLOB(0.975206022101024, '1070353131') THEN (('B''釾') NOT BETWEEN ('1043495188') AND (NULL)) WHEN (((0.9086733014834713)) NOT BETWEEN (('')) AND ((-489185842))) THEN x'c40e' COLLATE NOCASE END; -- 0ms;
INSERT OR FAIL INTO t1 VALUES ('365656158'); -- 0ms;
INSERT OR FAIL INTO t0(c2) VALUES (0x22b547ee); -- 1ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
END; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL t0.c2 FROM t0;
SELECT ALL t0.c2 FROM t0 WHERE (((((((t0.c0) ISNULL))OR(t0.c1)))OR(t0.c1))) UNION ALL SELECT ALL t0.c2 FROM t0 WHERE ((NOT (((((((t0.c0) ISNULL))OR(t0.c1)))OR(t0.c1))))) UNION ALL SELECT ALL t0.c2 FROM t0 WHERE (((((((((t0.c0) ISNULL))OR(t0.c1)))OR(t0.c1))) ISNULL));
SELECT ALL t0.c2 FROM t0;
SELECT DISTINCT * FROM v0 FULL OUTER JOIN rt0 ON CASE CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c4 THEN t1.c0 ELSE rt0.c3 END  WHEN CAST(rt0.c2 AS BLOB) THEN (rt0.c4 IN (rt0.c1)) END LEFT OUTER JOIN t1 ON (((t1.c0)) BETWEEN ((((((((((v0.c0)AND(v0.c0)))AND(rt0.c1)))AND(rt0.c1)))OR(t1.c0)))) AND ((((((rt0.c3)AND(rt0.c0)))OR(rt0.c2)))));
SELECT t1.c0, rt0.c3 FROM rt1, rt0, t1 GROUP BY t1.c0, rt0.c3;
SELECT ALL t1.c0, rt0.c3 FROM rt1, rt0, t1 WHERE (TYPEOF(0.17764785627056034)) GROUP BY t1.c0, rt0.c3 UNION SELECT t1.c0, rt0.c3 FROM rt1, rt0, t1 WHERE ((NOT (TYPEOF(0.17764785627056034)))) GROUP BY t1.c0, rt0.c3 UNION SELECT ALL t1.c0, rt0.c3 FROM rt1, rt0, t1 WHERE (((TYPEOF(0.17764785627056034)) ISNULL)) GROUP BY t1.c0, rt0.c3;
SELECT t1.c0, rt0.c3 FROM rt1, rt0, t1 GROUP BY t1.c0, rt0.c3;
SELECT rt0.c0, rt1.c0, v0.c0, rt0.c3, t1.c0 FROM t0, t1, rt1, rt0, v0 GROUP BY rt0.c0, rt1.c0, v0.c0, rt0.c3, t1.c0;
SELECT ALL rt0.c0, rt1.c0, v0.c0, rt0.c3, t1.c0 FROM t0, t1, rt1, rt0, v0 GROUP BY rt0.c0, rt1.c0, v0.c0, rt0.c3, t1.c0 HAVING MAX(MIN(COUNT(*))) UNION ALL SELECT rt0.c0, rt1.c0, v0.c0, rt0.c3, t1.c0 FROM t0, t1, rt1, rt0, v0 GROUP BY rt0.c0, rt1.c0, v0.c0, rt0.c3, t1.c0 HAVING (NOT (MAX(MIN(COUNT(*))))) UNION ALL SELECT rt0.c0, rt1.c0, v0.c0, rt0.c3, t1.c0 FROM t0, t1, rt1, rt0, v0 GROUP BY rt0.c0, rt1.c0, v0.c0, rt0.c3, t1.c0 HAVING ((MAX(MIN(COUNT(*)))) ISNULL);
SELECT * FROM t0 LEFT OUTER JOIN v0 ON CAST(((rt1.c1)>=('927283842')) AS NUMERIC) RIGHT OUTER JOIN rt0 ON ((~ ('581804899')) IN ()) INNER JOIN t1 ON CAST(SQLITE_VERSION() AS BLOB) LEFT OUTER JOIN rt1 ON ((((rt1.c0)<=(rt1.c0)))IS NOT(((rt1.c0)%(rt1.c3))));
SELECT DISTINCT * FROM t1, rt1;
SELECT DISTINCT * FROM t1, rt1 WHERE ((~ (((rt1.c0)+(0.5955113058660104))))) UNION SELECT DISTINCT * FROM t1, rt1 WHERE ((NOT ((~ (((rt1.c0)+(0.5955113058660104))))))) UNION SELECT DISTINCT * FROM t1, rt1 WHERE ((((~ (((rt1.c0)+(0.5955113058660104))))) ISNULL));
SELECT DISTINCT * FROM t1, rt1;
SELECT rt0.c2, rt0.c4, rt0.c0, rt1.c3, rt0.c3, rt1.c1, rt1.c2, rt0.c1 FROM rt0, rt1 GROUP BY rt0.c2, rt0.c4, rt0.c0, rt1.c3, rt0.c3, rt1.c1, rt1.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c4, rt0.c0, rt1.c3, rt0.c3, rt1.c1, rt1.c2, rt0.c1 FROM rt0, rt1 WHERE (((CAST('-265082319' AS REAL))/((x'' IN ())))) GROUP BY rt0.c2, rt0.c4, rt0.c0, rt1.c3, rt0.c3, rt1.c1, rt1.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c4, rt0.c0, rt1.c3, rt0.c3, rt1.c1, rt1.c2, rt0.c1 FROM rt0, rt1 WHERE ((NOT (((CAST('-265082319' AS REAL))/((x'' IN ())))))) GROUP BY rt0.c2, rt0.c4, rt0.c0, rt1.c3, rt0.c3, rt1.c1, rt1.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c4, rt0.c0, rt1.c3, rt0.c3, rt1.c1, rt1.c2, rt0.c1 FROM rt0, rt1 WHERE (((((CAST('-265082319' AS REAL))/((x'' IN ())))) ISNULL)) GROUP BY rt0.c2, rt0.c4, rt0.c0, rt1.c3, rt0.c3, rt1.c1, rt1.c2, rt0.c1;
SELECT rt0.c2, rt0.c4, rt0.c0, rt1.c3, rt0.c3, rt1.c1, rt1.c2, rt0.c1 FROM rt0, rt1 GROUP BY rt0.c2, rt0.c4, rt0.c0, rt1.c3, rt0.c3, rt1.c1, rt1.c2, rt0.c1;
SELECT ALL t0.c0, v0.c0 FROM v0, t1, t0 INDEXED BY i55 GROUP BY t0.c0, v0.c0;
SELECT * FROM rt0, t1, t0;
SELECT * FROM rt0, t1, t0 WHERE (((((- (rt0.c0))))<=((rt0.c3)))) UNION ALL SELECT ALL * FROM rt0, t1, t0 WHERE ((NOT (((((- (rt0.c0))))<=((rt0.c3)))))) UNION ALL SELECT ALL * FROM rt0, t1, t0 WHERE (((((((- (rt0.c0))))<=((rt0.c3)))) ISNULL));
SELECT * FROM rt0, t1, t0;
SELECT DISTINCT rt0.c4, v0.c0, rt0.c1 FROM t1 INNER JOIN t0 ON ((((rt1.c0) IS TRUE)) ISNULL) FULL OUTER JOIN rt1 ON highlight((t0.c0 IN ()), t0.c0, ((t1.c0)>>(rt0.c0)), ((rt0.c2)LIKE(t1.c0))) LEFT OUTER JOIN rt0 ON ((t1.c0 IN ()) IN ()) CROSS JOIN v0 ON (((((t0.c2, rt1.c3, t0.c0)) NOT BETWEEN ((rt0.c1, v0.c0, rt1.c2)) AND ((t0.c2, rt0.c0, v0.c0))))IS(rt0.c4));
SELECT ALL v0.c0 FROM rt1, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM rt1, v0 WHERE ((x'' IN ())) GROUP BY v0.c0 UNION SELECT v0.c0 FROM rt1, v0 WHERE ((NOT ((x'' IN ())))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM rt1, v0 WHERE ((((x'' IN ())) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM rt1, v0 GROUP BY v0.c0;
SELECT ALL t0.c1, rt0.c3, t0.c2, rt0.c4, rt0.c0, t0.c0 FROM t0, rt0 RIGHT OUTER JOIN t1 ON ((rt0.c3)|((((rt0.c0)) BETWEEN ((t0.c0)) AND ((t0.c2))))) GROUP BY t0.c1, rt0.c3, t0.c2, rt0.c4, rt0.c0, t0.c0;
SELECT ALL t0.c1, rt0.c3, t0.c2, rt0.c4, rt0.c0, t0.c0 FROM t0, rt0 RIGHT OUTER JOIN t1 ON ((rt0.c3)|((((rt0.c0)) BETWEEN ((t0.c0)) AND ((t0.c2))))) GROUP BY t0.c1, rt0.c3, t0.c2, rt0.c4, rt0.c0, t0.c0 HAVING (rt0.c4 IN (TOTAL(COUNT(t0.c2)))) UNION ALL SELECT ALL t0.c1, rt0.c3, t0.c2, rt0.c4, rt0.c0, t0.c0 FROM t0, rt0 RIGHT OUTER JOIN t1 ON ((rt0.c3)|((((rt0.c0)) BETWEEN ((t0.c0)) AND ((t0.c2))))) GROUP BY t0.c1, rt0.c3, t0.c2, rt0.c4, rt0.c0, t0.c0 HAVING (NOT ((rt0.c4 IN (TOTAL(COUNT(t0.c2)))))) UNION ALL SELECT t0.c1, rt0.c3, t0.c2, rt0.c4, rt0.c0, t0.c0 FROM t0, rt0 RIGHT OUTER JOIN t1 ON ((rt0.c3)|((((rt0.c0)) BETWEEN ((t0.c0)) AND ((t0.c2))))) GROUP BY t0.c1, rt0.c3, t0.c2, rt0.c4, rt0.c0, t0.c0 HAVING (((rt0.c4 IN (TOTAL(COUNT(t0.c2))))) ISNULL);
SELECT ALL * FROM t0, rt0, v0;
SELECT ALL * FROM t0, rt0, v0 WHERE ((((~ (0.7401038040011645))) NOT BETWEEN ((5.82305774E8 IN ())) AND (CASE WHEN rt0.c2 THEN v0.c0 ELSE rt0.c3 END))) UNION ALL SELECT * FROM t0, rt0, v0 WHERE ((NOT ((((~ (0.7401038040011645))) NOT BETWEEN ((5.82305774E8 IN ())) AND (CASE WHEN rt0.c2 THEN v0.c0 ELSE rt0.c3 END))))) UNION ALL SELECT ALL * FROM t0, rt0, v0 WHERE ((((((~ (0.7401038040011645))) NOT BETWEEN ((5.82305774E8 IN ())) AND (CASE WHEN rt0.c2 THEN v0.c0 ELSE rt0.c3 END))) ISNULL));
SELECT ALL * FROM t0, rt0, v0;
SELECT DISTINCT rt1.c3, rt1.c0, v0.c0, rt1.c1, rt0.c3, rt0.c2, t0.c2, rt1.c2, rt0.c4, rt0.c0, t0.c0, rt0.c1, t0.c1 FROM v0 INDEXED BY i55, rt1, rt0 INDEXED BY i35, t0;
SELECT t0.c2, rt0.c1, v0.c0, t0.c0, rt0.c2, rt0.c4, rt1.c1, rt1.c2, rt1.c3, rt0.c0, t1.c0, rt1.c0 FROM rt0, v0, rt1, t0, t1 GROUP BY t0.c2, rt0.c1, v0.c0, t0.c0, rt0.c2, rt0.c4, rt1.c1, rt1.c2, rt1.c3, rt0.c0, t1.c0, rt1.c0;
SELECT ALL t0.c2, rt0.c1, v0.c0, t0.c0, rt0.c2, rt0.c4, rt1.c1, rt1.c2, rt1.c3, rt0.c0, t1.c0, rt1.c0 FROM rt0, v0, rt1, t0, t1 WHERE ((~ (((((rt0.c2)AND(t0.c0)))AND(rt1.c2))))) GROUP BY t0.c2, rt0.c1, v0.c0, t0.c0, rt0.c2, rt0.c4, rt1.c1, rt1.c2, rt1.c3, rt0.c0, t1.c0, rt1.c0 UNION SELECT t0.c2, rt0.c1, v0.c0, t0.c0, rt0.c2, rt0.c4, rt1.c1, rt1.c2, rt1.c3, rt0.c0, t1.c0, rt1.c0 FROM rt0, v0, rt1, t0, t1 WHERE ((NOT ((~ (((((rt0.c2)AND(t0.c0)))AND(rt1.c2))))))) GROUP BY t0.c2, rt0.c1, v0.c0, t0.c0, rt0.c2, rt0.c4, rt1.c1, rt1.c2, rt1.c3, rt0.c0, t1.c0, rt1.c0 UNION SELECT ALL t0.c2, rt0.c1, v0.c0, t0.c0, rt0.c2, rt0.c4, rt1.c1, rt1.c2, rt1.c3, rt0.c0, t1.c0, rt1.c0 FROM rt0, v0, rt1, t0, t1 WHERE ((((~ (((((rt0.c2)AND(t0.c0)))AND(rt1.c2))))) ISNULL)) GROUP BY t0.c2, rt0.c1, v0.c0, t0.c0, rt0.c2, rt0.c4, rt1.c1, rt1.c2, rt1.c3, rt0.c0, t1.c0, rt1.c0;
SELECT t0.c2, rt0.c1, v0.c0, t0.c0, rt0.c2, rt0.c4, rt1.c1, rt1.c2, rt1.c3, rt0.c0, t1.c0, rt1.c0 FROM rt0, v0, rt1, t0, t1 GROUP BY t0.c2, rt0.c1, v0.c0, t0.c0, rt0.c2, rt0.c4, rt1.c1, rt1.c2, rt1.c3, rt0.c0, t1.c0, rt1.c0;
SELECT t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1;
SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1 HAVING '' UNION ALL SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1 HAVING (NOT ('')) UNION ALL SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1 HAVING (('') ISNULL);
SELECT t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1;
SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1 HAVING '' UNION ALL SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1 HAVING (NOT ('')) UNION ALL SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1 HAVING (('') ISNULL);
SELECT t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1;
SELECT * FROM t1 CROSS JOIN rt0 ON ((((rt0.c1)||(rt0.c3)))||(CASE WHEN rt0.c1 THEN rt0.c3 END));
SELECT * FROM t1 CROSS JOIN rt0 ON ((((rt0.c1)||(rt0.c3)))||(CASE WHEN rt0.c1 THEN rt0.c3 END)) WHERE (SQLITE_VERSION()) UNION ALL SELECT * FROM t1 CROSS JOIN rt0 ON ((((rt0.c1)||(rt0.c3)))||(CASE WHEN rt0.c1 THEN rt0.c3 END)) WHERE ((NOT (SQLITE_VERSION()))) UNION ALL SELECT ALL * FROM t1 CROSS JOIN rt0 ON ((((rt0.c1)||(rt0.c3)))||(CASE WHEN rt0.c1 THEN rt0.c3 END)) WHERE (((SQLITE_VERSION()) ISNULL));
SELECT * FROM t1 CROSS JOIN rt0 ON ((((rt0.c1)||(rt0.c3)))||(CASE WHEN rt0.c1 THEN rt0.c3 END));
SELECT DISTINCT rt1.c2 FROM rt1, t1, v0;
SELECT DISTINCT rt1.c2 FROM rt1, t1, v0 WHERE (((DATETIME(rt1.c1, t1.c0, t1.c0)) IS TRUE)) UNION SELECT DISTINCT rt1.c2 FROM rt1, t1, v0 WHERE ((NOT (((DATETIME(rt1.c1, t1.c0, t1.c0)) IS TRUE)))) UNION SELECT DISTINCT rt1.c2 FROM rt1, t1, v0 WHERE (((((DATETIME(rt1.c1, t1.c0, t1.c0)) IS TRUE)) ISNULL));
SELECT DISTINCT rt1.c2 FROM rt1, t1, v0;
SELECT ALL t1.c0, rt0.c2 FROM t0, rt0, t1, v0 GROUP BY t1.c0, rt0.c2;
SELECT t1.c0, rt0.c2 FROM t0, rt0, t1, v0 WHERE (((rt0.c2 COLLATE NOCASE)/(((rt0.c2)>(rt0.c1))))) GROUP BY t1.c0, rt0.c2 UNION SELECT t1.c0, rt0.c2 FROM t0, rt0, t1, v0 WHERE ((NOT (((rt0.c2 COLLATE NOCASE)/(((rt0.c2)>(rt0.c1))))))) GROUP BY t1.c0, rt0.c2 UNION SELECT ALL t1.c0, rt0.c2 FROM t0, rt0, t1, v0 WHERE (((((rt0.c2 COLLATE NOCASE)/(((rt0.c2)>(rt0.c1))))) ISNULL)) GROUP BY t1.c0, rt0.c2;
SELECT ALL t1.c0, rt0.c2 FROM t0, rt0, t1, v0 GROUP BY t1.c0, rt0.c2;
SELECT ALL t0.c0, t0.c1, rt0.c0, rt0.c1, rt1.c2 FROM t0, rt1 RIGHT OUTER JOIN rt0 ON CASE WHEN CAST(x'' AS TEXT) THEN CASE t0.c1  WHEN rt1.c0 THEN t0.c2 WHEN NULL THEN rt1.c0 WHEN '1921079715' THEN t0.c1 END END INNER JOIN v0 ON 0Xd7c2adb GROUP BY t0.c0, t0.c1, rt0.c0, rt0.c1, rt1.c2;
SELECT ALL t0.c0, t0.c1, rt0.c0, rt0.c1, rt1.c2 FROM t0, rt1 RIGHT OUTER JOIN rt0 ON CASE WHEN CAST(x'' AS TEXT) THEN CASE t0.c1  WHEN rt1.c0 THEN t0.c2 WHEN NULL THEN rt1.c0 WHEN '1921079715' THEN t0.c1 END END INNER JOIN v0 ON 0Xd7c2adb GROUP BY t0.c0, t0.c1, rt0.c0, rt0.c1, rt1.c2 HAVING -555744804 UNION ALL SELECT ALL t0.c0, t0.c1, rt0.c0, rt0.c1, rt1.c2 FROM t0, rt1 RIGHT OUTER JOIN rt0 ON CASE WHEN CAST(x'' AS TEXT) THEN CASE t0.c1  WHEN rt1.c0 THEN t0.c2 WHEN NULL THEN rt1.c0 WHEN '1921079715' THEN t0.c1 END END INNER JOIN v0 ON 0xd7c2adb GROUP BY t0.c0, t0.c1, rt0.c0, rt0.c1, rt1.c2 HAVING (NOT (-555744804)) UNION ALL SELECT ALL t0.c0, t0.c1, rt0.c0, rt0.c1, rt1.c2 FROM t0, rt1 RIGHT OUTER JOIN rt0 ON CASE WHEN CAST(x'' AS TEXT) THEN CASE t0.c1  WHEN rt1.c0 THEN t0.c2 WHEN NULL THEN rt1.c0 WHEN '1921079715' THEN t0.c1 END END INNER JOIN v0 ON 0xd7c2adb GROUP BY t0.c0, t0.c1, rt0.c0, rt0.c1, rt1.c2 HAVING ((-555744804) ISNULL);
SELECT ALL t0.c0, t0.c1, rt0.c0, rt0.c1, rt1.c2 FROM t0, rt1 RIGHT OUTER JOIN rt0 ON CASE WHEN CAST(x'' AS TEXT) THEN CASE t0.c1  WHEN rt1.c0 THEN t0.c2 WHEN NULL THEN rt1.c0 WHEN '1921079715' THEN t0.c1 END END INNER JOIN v0 ON 0Xd7c2adb GROUP BY t0.c0, t0.c1, rt0.c0, rt0.c1, rt1.c2;
SELECT ALL t0.c0, t0.c1, rt0.c0, rt0.c1, rt1.c2 FROM t0, rt1 RIGHT OUTER JOIN rt0 ON CASE WHEN CAST(x'' AS TEXT) THEN CASE t0.c1  WHEN rt1.c0 THEN t0.c2 WHEN NULL THEN rt1.c0 WHEN '1921079715' THEN t0.c1 END END INNER JOIN v0 ON 0Xd7c2adb GROUP BY t0.c0, t0.c1, rt0.c0, rt0.c1, rt1.c2 HAVING -555744804 UNION ALL SELECT ALL t0.c0, t0.c1, rt0.c0, rt0.c1, rt1.c2 FROM t0, rt1 RIGHT OUTER JOIN rt0 ON CASE WHEN CAST(x'' AS TEXT) THEN CASE t0.c1  WHEN rt1.c0 THEN t0.c2 WHEN NULL THEN rt1.c0 WHEN '1921079715' THEN t0.c1 END END INNER JOIN v0 ON 0xd7c2adb GROUP BY t0.c0, t0.c1, rt0.c0, rt0.c1, rt1.c2 HAVING (NOT (-555744804)) UNION ALL SELECT ALL t0.c0, t0.c1, rt0.c0, rt0.c1, rt1.c2 FROM t0, rt1 RIGHT OUTER JOIN rt0 ON CASE WHEN CAST(x'' AS TEXT) THEN CASE t0.c1  WHEN rt1.c0 THEN t0.c2 WHEN NULL THEN rt1.c0 WHEN '1921079715' THEN t0.c1 END END INNER JOIN v0 ON 0xd7c2adb GROUP BY t0.c0, t0.c1, rt0.c0, rt0.c1, rt1.c2 HAVING ((-555744804) ISNULL);
SELECT ALL t0.c0, t0.c1, rt0.c0, rt0.c1, rt1.c2 FROM t0, rt1 RIGHT OUTER JOIN rt0 ON CASE WHEN CAST(x'' AS TEXT) THEN CASE t0.c1  WHEN rt1.c0 THEN t0.c2 WHEN NULL THEN rt1.c0 WHEN '1921079715' THEN t0.c1 END END INNER JOIN v0 ON 0Xd7c2adb GROUP BY t0.c0, t0.c1, rt0.c0, rt0.c1, rt1.c2;
SELECT v0.c0 FROM t1 INDEXED BY i16, v0;
SELECT ALL v0.c0 FROM t1 INDEXED BY i16, v0 WHERE (((((((((((((((t1.c0)&(t1.c0)))AND((('131118493')*(t1.c0)))))OR(((v0.c0)GLOB(v0.c0)))))OR(t1.c0)))AND('828089736')))AND(t1.c0 COLLATE BINARY)))OR(load_extension(t1.c0)))) UNION ALL SELECT ALL v0.c0 FROM t1 INDEXED BY i16, v0 WHERE ((NOT (((((((((((((((t1.c0)&(t1.c0)))AND((('131118493')*(t1.c0)))))OR(((v0.c0)GLOB(v0.c0)))))OR(t1.c0)))AND('828089736')))AND(t1.c0 COLLATE BINARY)))OR(load_extension(t1.c0)))))) UNION ALL SELECT v0.c0 FROM t1 INDEXED BY i16, v0 WHERE (((((((((((((((((t1.c0)&(t1.c0)))AND((('131118493')*(t1.c0)))))OR(((v0.c0)GLOB(v0.c0)))))OR(t1.c0)))AND('828089736')))AND(t1.c0 COLLATE BINARY)))OR(load_extension(t1.c0)))) ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE ((((t1.c0 IN ()))|(t1.c0 COLLATE NOCASE))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT ((((t1.c0 IN ()))|(t1.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((((((t1.c0 IN ()))|(t1.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT ALL rt1.c1, rt0.c2 FROM rt0, rt1, t0, v0 GROUP BY rt1.c1, rt0.c2;
SELECT ALL rt1.c1, rt0.c2 FROM rt0, rt1, t0, v0 WHERE ((((rt0.c4 IN ('1826091579', rt1.c1)))|((((rt0.c4)) BETWEEN (('cp')) AND ((rt1.c3)))))) GROUP BY rt1.c1, rt0.c2 UNION SELECT rt1.c1, rt0.c2 FROM rt0, rt1, t0, v0 WHERE ((NOT ((((rt0.c4 IN ('1826091579', rt1.c1)))|((((rt0.c4)) BETWEEN (('cp')) AND ((rt1.c3)))))))) GROUP BY rt1.c1, rt0.c2 UNION SELECT rt1.c1, rt0.c2 FROM rt0, rt1, t0, v0 WHERE ((((((rt0.c4 IN ('1826091579', rt1.c1)))|((((rt0.c4)) BETWEEN (('cp')) AND ((rt1.c3)))))) ISNULL)) GROUP BY rt1.c1, rt0.c2;
SELECT ALL rt1.c1, rt0.c2 FROM rt0, rt1, t0, v0 GROUP BY rt1.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c4 FROM rt0 NOT INDEXED GROUP BY rt0.c1, rt0.c4;
SELECT rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c4 HAVING (((SQLITE_SOURCE_ID(), AVG(AVG(COUNT(TOTAL(rt0.c0)))), x''))<=((MAX(rt0.c4), (TOTAL(rt0.c3) IN (COUNT(*), rt0.c0)), MAX(rt0.c2)))) UNION ALL SELECT rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c4 HAVING (NOT ((((SQLITE_SOURCE_ID(), AVG(AVG(COUNT(TOTAL(rt0.c0)))), x''))<=((MAX(rt0.c4), (TOTAL(rt0.c3) IN (COUNT(*), rt0.c0)), MAX(rt0.c2)))))) UNION ALL SELECT rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c4 HAVING (((((SQLITE_SOURCE_ID(), AVG(AVG(COUNT(TOTAL(rt0.c0)))), x''))<=((MAX(rt0.c4), (TOTAL(rt0.c3) IN (COUNT(*), rt0.c0)), MAX(rt0.c2))))) ISNULL);
SELECT ALL rt0.c1, rt1.c2, rt0.c0, rt0.c2, rt1.c0, rt1.c3, rt0.c4, rt1.c1 FROM rt0, rt1;
SELECT ALL rt0.c1, rt1.c2, rt0.c0, rt0.c2, rt1.c0, rt1.c3, rt0.c4, rt1.c1 FROM rt0, rt1 WHERE ((((rt0.c4 IN ())) NOT BETWEEN (((((rt1.c1)OR(rt0.c0)))OR(rt0.c1))) AND (x'29cb'))) UNION ALL SELECT ALL rt0.c1, rt1.c2, rt0.c0, rt0.c2, rt1.c0, rt1.c3, rt0.c4, rt1.c1 FROM rt0, rt1 WHERE ((NOT ((((rt0.c4 IN ())) NOT BETWEEN (((((rt1.c1)OR(rt0.c0)))OR(rt0.c1))) AND (x'29cb'))))) UNION ALL SELECT ALL rt0.c1, rt1.c2, rt0.c0, rt0.c2, rt1.c0, rt1.c3, rt0.c4, rt1.c1 FROM rt0, rt1 WHERE ((((((rt0.c4 IN ())) NOT BETWEEN (((((rt1.c1)OR(rt0.c0)))OR(rt0.c1))) AND (x'29cb'))) ISNULL));
SELECT ALL rt0.c1, rt1.c2, rt0.c0, rt0.c2, rt1.c0, rt1.c3, rt0.c4, rt1.c1 FROM rt0, rt1;
SELECT DISTINCT * FROM v0, t0, rt1, t1, rt0;
SELECT DISTINCT * FROM v0, t0, rt1, t1, rt0 NOT INDEXED WHERE (COALESCE(((((t0.c0)OR(v0.c0)))AND(rt0.c1)), LIKELY(DISTINCT '0.12673290745132038'))) UNION SELECT DISTINCT * FROM v0, t0, rt1, t1, rt0 WHERE ((NOT (COALESCE(((((t0.c0)OR(v0.c0)))AND(rt0.c1)), LIKELY(DISTINCT '0.12673290745132038'))))) UNION SELECT DISTINCT * FROM v0, t0, rt1, t1, rt0 WHERE (((COALESCE(((((t0.c0)OR(v0.c0)))AND(rt0.c1)), LIKELY(DISTINCT '0.12673290745132038'))) ISNULL));
SELECT DISTINCT * FROM v0, t0, rt1, t1, rt0;
SELECT t1.c0, rt1.c1, rt1.c3, t0.c2, v0.c0, rt1.c2 FROM t1 RIGHT OUTER JOIN v0 ON ((CASE t0.c0  WHEN t0.c2 THEN t0.c1 END)/(((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c1)))) FULL OUTER JOIN rt1 ON rtreenode(t0.c1, t0.c1) COLLATE BINARY RIGHT OUTER JOIN t0 ON CAST(rt1.c0 AS TEXT) GROUP BY t1.c0, rt1.c1, rt1.c3, t0.c2, v0.c0, rt1.c2;
SELECT ALL t1.c0, rt0.c4 FROM rt1 NOT INDEXED, t0, t1, rt0, v0 GROUP BY t1.c0, rt0.c4;
SELECT ALL t1.c0, rt0.c4 FROM rt1, t0, t1, rt0, v0 GROUP BY t1.c0, rt0.c4 HAVING COUNT(*) UNION ALL SELECT t1.c0, rt0.c4 FROM rt1, t0, t1, rt0, v0 GROUP BY t1.c0, rt0.c4 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t1.c0, rt0.c4 FROM rt1, t0, t1, rt0, v0 GROUP BY t1.c0, rt0.c4 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t1.c0, rt0.c4 FROM rt1 NOT INDEXED, t0, t1, rt0, v0 GROUP BY t1.c0, rt0.c4;
SELECT ALL t1.c0, rt0.c4 FROM rt1, t0, t1, rt0, v0 GROUP BY t1.c0, rt0.c4 HAVING COUNT(*) UNION ALL SELECT t1.c0, rt0.c4 FROM rt1, t0, t1, rt0, v0 GROUP BY t1.c0, rt0.c4 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t1.c0, rt0.c4 FROM rt1, t0, t1, rt0, v0 GROUP BY t1.c0, rt0.c4 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t1.c0, rt0.c4 FROM rt1 NOT INDEXED, t0, t1, rt0, v0 GROUP BY t1.c0, rt0.c4;
SELECT ALL rt0.c3, rt0.c4, rt1.c0, t1.c0, rt1.c2, v0.c0, rt0.c2, rt1.c1, rt0.c0 FROM t1, rt0, rt1, v0;
SELECT rt0.c3, rt0.c4, rt1.c0, t1.c0, rt1.c2, v0.c0, rt0.c2, rt1.c1, rt0.c0 FROM t1, rt0, rt1, v0 WHERE ((((rt1.c3 IN ())) NOT NULL)) UNION ALL SELECT ALL rt0.c3, rt0.c4, rt1.c0, t1.c0, rt1.c2, v0.c0, rt0.c2, rt1.c1, rt0.c0 FROM t1, rt0, rt1, v0 WHERE ((NOT ((((rt1.c3 IN ())) NOT NULL)))) UNION ALL SELECT rt0.c3, rt0.c4, rt1.c0, t1.c0, rt1.c2, v0.c0, rt0.c2, rt1.c1, rt0.c0 FROM t1, rt0, rt1, v0 WHERE ((((((rt1.c3 IN ())) NOT NULL)) ISNULL));
SELECT ALL rt0.c3, rt0.c4, rt1.c0, t1.c0, rt1.c2, v0.c0, rt0.c2, rt1.c1, rt0.c0 FROM t1, rt0, rt1, v0;
SELECT DISTINCT rt0.c1, rt0.c0, v0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0, v0;
SELECT DISTINCT rt0.c1, rt0.c0, v0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0, v0 WHERE ((((v0.c0) ISNULL) IN ((~ (v0.c0))))) UNION SELECT DISTINCT rt0.c1, rt0.c0, v0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0, v0 WHERE ((NOT ((((v0.c0) ISNULL) IN ((~ (v0.c0))))))) UNION SELECT DISTINCT rt0.c1, rt0.c0, v0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0, v0 WHERE ((((((v0.c0) ISNULL) IN ((~ (v0.c0))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, v0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0, v0;
SELECT v0.c0 FROM t1, v0, t0 GROUP BY v0.c0;
SELECT v0.c0 FROM t1, v0, t0 WHERE ((((((((t1.c0)OR(0xffffffffbf366f08)))AND(v0.c0))))==((t1.c0 COLLATE NOCASE)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM t1, v0, t0 WHERE ((NOT ((((((((t1.c0)OR(0xffffffffbf366f08)))AND(v0.c0))))=((t1.c0 COLLATE NOCASE)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM t1, v0, t0 WHERE ((((((((((t1.c0)OR(0Xffffffffbf366f08)))AND(v0.c0))))=((t1.c0 COLLATE NOCASE)))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM t1, v0, t0 GROUP BY v0.c0;
SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1;
SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING COUNT(*) UNION ALL SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1;
SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING COUNT(*) UNION ALL SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1;
SELECT * FROM rt1 LEFT OUTER JOIN v0 ON ((rt1.c1 IN ()) IN (CAST(rt0.c2 AS REAL))) INNER JOIN rt0 ON ABS(((rt0.c3)%(rt0.c0)));
SELECT DISTINCT * FROM t0, rt0, t1;
SELECT DISTINCT * FROM t0, rt0, t1 WHERE (((CAST(rt0.c4 AS NUMERIC))LIKE((((rt0.c4))=((t0.c2)))))) UNION SELECT DISTINCT * FROM t0, rt0, t1 WHERE ((NOT (((CAST(rt0.c4 AS NUMERIC))LIKE((((rt0.c4))=((t0.c2)))))))) UNION SELECT DISTINCT * FROM t0, rt0, t1 WHERE (((((CAST(rt0.c4 AS NUMERIC))LIKE((((rt0.c4))=((t0.c2)))))) ISNULL));
SELECT DISTINCT * FROM t0, rt0, t1;
SELECT ALL rt0.c2 FROM rt1, rt0 NOT INDEXED, t1, v0, t0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt1, rt0, t1, v0, t0 WHERE (ABS(((rt1.c2) NOT NULL))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt1, rt0, t1, v0, t0 WHERE ((NOT (ABS(((rt1.c2) NOT NULL))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt1, rt0, t1, v0, t0 WHERE (((ABS(((rt1.c2) NOT NULL))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt1, rt0 NOT INDEXED, t1, v0, t0 GROUP BY rt0.c2;
SELECT t0.c0, t0.c2, rt0.c3 FROM t0, rt0, t1 NATURAL JOIN v0 GROUP BY t0.c0, t0.c2, rt0.c3;
SELECT ALL t0.c0, t0.c2, rt0.c3 FROM t0, rt0, t1 NATURAL JOIN v0 GROUP BY t0.c0, t0.c2, rt0.c3 HAVING CASE ((rt0.c3) BETWEEN (AVG(COUNT(*))) AND (GROUP_CONCAT(rt0.c1)))  WHEN (('-759212189') ISNULL) THEN ((rt0.c0) BETWEEN (t1.c0) AND (SUM(COUNT(*)))) ELSE MIN(v0.c0) END UNION ALL SELECT t0.c0, t0.c2, rt0.c3 FROM t0, rt0, t1 NATURAL JOIN v0 GROUP BY t0.c0, t0.c2, rt0.c3 HAVING (NOT (CASE ((rt0.c3) BETWEEN (AVG(COUNT(*))) AND (GROUP_CONCAT(rt0.c1)))  WHEN (('-759212189') ISNULL) THEN ((rt0.c0) BETWEEN (t1.c0) AND (SUM(COUNT(*)))) ELSE MIN(v0.c0) END)) UNION ALL SELECT ALL t0.c0, t0.c2, rt0.c3 FROM t0, rt0, t1 NATURAL JOIN v0 GROUP BY t0.c0, t0.c2, rt0.c3 HAVING ((CASE ((rt0.c3) BETWEEN (AVG(COUNT(*))) AND (GROUP_CONCAT(rt0.c1)))  WHEN (('-759212189') ISNULL) THEN ((rt0.c0) BETWEEN (t1.c0) AND (SUM(COUNT(*)))) ELSE MIN(v0.c0) END) ISNULL);
SELECT MIN(CAST(v0.c0 AS REAL)) FROM v0;
SELECT rt0.c4, v0.c0, rt1.c0, t0.c0, rt0.c0, rt0.c1, rt1.c2, rt1.c1, rt1.c3 FROM rt1 INNER JOIN v0 ON ((((t0.c1)|(t0.c1))) BETWEEN (((t0.c2) NOT BETWEEN (rt0.c3) AND (rt1.c2))) AND (((((t0.c0)AND(0.9583522688575646)))AND(rt0.c3)))) RIGHT OUTER JOIN rt0 ON (('Z/')&(NULL)) LEFT OUTER JOIN t0 ON (((rt0.c4 IN ())) ISNULL);
SELECT DISTINCT t0.c2, rt0.c0 FROM t0, rt1, rt0;
SELECT DISTINCT t0.c2, rt0.c0 FROM t0, rt1, rt0 WHERE ((+ (rt1.c0 COLLATE RTRIM))) UNION SELECT DISTINCT t0.c2, rt0.c0 FROM t0, rt1, rt0 WHERE ((NOT ((+ (rt1.c0 COLLATE RTRIM))))) UNION SELECT DISTINCT t0.c2, rt0.c0 FROM t0, rt1, rt0 WHERE ((((+ (rt1.c0 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT t0.c2, rt0.c0 FROM t0, rt1, rt0;
SELECT rt0.c0, rt1.c0, t0.c1, rt0.c4, rt1.c2, rt0.c1, rt1.c1, rt0.c2, rt1.c3, t0.c2 FROM rt0 INDEXED BY i55, rt1, t0 GROUP BY rt0.c0, rt1.c0, t0.c1, rt0.c4, rt1.c2, rt0.c1, rt1.c1, rt0.c2, rt1.c3, t0.c2;
SELECT t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0;
SELECT t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0 HAVING MAX(SUM(t0.c0)) UNION ALL SELECT t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0 HAVING (NOT (MAX(SUM(t0.c0)))) UNION ALL SELECT ALL t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0 HAVING ((MAX(SUM(t0.c0))) ISNULL);
SELECT t1.c0 FROM t1;
SELECT t1.c0 FROM t1 WHERE (CAST(((t1.c0)<<(t1.c0)) AS INTEGER)) UNION ALL SELECT ALL t1.c0 FROM t1 WHERE ((NOT (CAST(((t1.c0)<<(t1.c0)) AS INTEGER)))) UNION ALL SELECT ALL t1.c0 FROM t1 WHERE (((CAST(((t1.c0)<<(t1.c0)) AS INTEGER)) ISNULL));
SELECT t1.c0 FROM t1;
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 NOT INDEXED WHERE (((0.736837564045541) NOT BETWEEN (((t0.c1)>=(t0.c2))) AND (((((t0.c0)OR(t0.c0)))AND(rt0.c0))))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT (((0.736837564045541) NOT BETWEEN (((t0.c1)>=(t0.c2))) AND (((((t0.c0)OR(t0.c0)))AND(rt0.c0))))))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE (((((0.736837564045541) NOT BETWEEN (((t0.c1)>=(t0.c2))) AND (((((t0.c0)OR(t0.c0)))AND(rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT ALL rt1.c2, rt1.c0, rt1.c1, rt1.c3 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1, rt1.c3;
SELECT rt1.c2, rt1.c0, rt1.c1, rt1.c3 FROM rt1 WHERE ((((((((((~ (rt1.c1)))AND((NOT (rt1.c3)))))AND(CASE WHEN rt1.c3 THEN rt1.c3 END)))AND((('') NOTNULL))))AND('-1172838439'))) GROUP BY rt1.c2, rt1.c0, rt1.c1, rt1.c3 UNION SELECT ALL rt1.c2, rt1.c0, rt1.c1, rt1.c3 FROM rt1 NOT INDEXED WHERE ((NOT ((((((((((~ (rt1.c1)))AND((NOT (rt1.c3)))))AND(CASE WHEN rt1.c3 THEN rt1.c3 END)))AND((('') NOTNULL))))AND('-1172838439'))))) GROUP BY rt1.c2, rt1.c0, rt1.c1, rt1.c3 UNION SELECT rt1.c2, rt1.c0, rt1.c1, rt1.c3 FROM rt1 WHERE ((((((((((((~ (rt1.c1)))AND((NOT (rt1.c3)))))AND(CASE WHEN rt1.c3 THEN rt1.c3 END)))AND((('') NOTNULL))))AND('-1172838439'))) ISNULL)) GROUP BY rt1.c2, rt1.c0, rt1.c1, rt1.c3;
SELECT ALL rt1.c2, rt1.c0, rt1.c1, rt1.c3 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1, rt1.c3;
SELECT rt1.c3, rt1.c2, rt1.c0, t1.c0, rt1.c1 FROM t1, rt1 GROUP BY rt1.c3, rt1.c2, rt1.c0, t1.c0, rt1.c1;
SELECT rt1.c3, rt1.c2, rt1.c0, t1.c0, rt1.c1 FROM t1, rt1 GROUP BY rt1.c3, rt1.c2, rt1.c0, t1.c0, rt1.c1 HAVING TOTAL(GROUP_CONCAT(MAX(MAX(SUM(rt1.c2))))) UNION ALL SELECT rt1.c3, rt1.c2, rt1.c0, t1.c0, rt1.c1 FROM t1, rt1 GROUP BY rt1.c3, rt1.c2, rt1.c0, t1.c0, rt1.c1 HAVING (NOT (TOTAL(GROUP_CONCAT(MAX(MAX(SUM(rt1.c2))))))) UNION ALL SELECT ALL rt1.c3, rt1.c2, rt1.c0, t1.c0, rt1.c1 FROM t1, rt1 GROUP BY rt1.c3, rt1.c2, rt1.c0, t1.c0, rt1.c1 HAVING ((TOTAL(GROUP_CONCAT(MAX(MAX(SUM(rt1.c2)))))) ISNULL);
SELECT * FROM rt1;
SELECT ALL * FROM rt1 WHERE (((((rt1.c0) NOTNULL)) ISNULL)) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT (((((rt1.c0) NOTNULL)) ISNULL)))) UNION ALL SELECT ALL * FROM rt1 WHERE (((((((rt1.c0) NOTNULL)) ISNULL)) ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT rt0.c3, rt0.c4, t0.c1, rt0.c1 FROM rt0, t0, v0;
SELECT DISTINCT rt0.c3, rt0.c4, t0.c1, rt0.c1 FROM rt0, t0, v0 WHERE (((((((t0.c2)AND(t0.c1)))AND(NULL)))=(rt0.c2 COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c3, rt0.c4, t0.c1, rt0.c1 FROM rt0, t0, v0 WHERE ((NOT (((((((t0.c2)AND(t0.c1)))AND(NULL)))=(rt0.c2 COLLATE RTRIM))))) UNION SELECT DISTINCT rt0.c3, rt0.c4, t0.c1, rt0.c1 FROM rt0, t0, v0 WHERE (((((((((t0.c2)AND(t0.c1)))AND(NULL)))==(rt0.c2 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c4, t0.c1, rt0.c1 FROM rt0, t0, v0;
SELECT ALL rt1.c1, rt1.c2, t0.c1 FROM t0, rt1, t1 GROUP BY rt1.c1, rt1.c2, t0.c1;
SELECT rt1.c1, rt1.c2, t0.c1 FROM t0, rt1, t1 WHERE (((((t0.c2 IN ())))>(('')))) GROUP BY rt1.c1, rt1.c2, t0.c1 UNION SELECT ALL rt1.c1, rt1.c2, t0.c1 FROM t0, rt1, t1 WHERE ((NOT (((((t0.c2 IN ())))>(('')))))) GROUP BY rt1.c1, rt1.c2, t0.c1 UNION SELECT rt1.c1, rt1.c2, t0.c1 FROM t0, rt1, t1 WHERE (((((((t0.c2 IN ())))>(('')))) ISNULL)) GROUP BY rt1.c1, rt1.c2, t0.c1;
SELECT ALL rt1.c1, rt1.c2, t0.c1 FROM t0, rt1, t1 GROUP BY rt1.c1, rt1.c2, t0.c1;
SELECT ALL t0.c0, rt1.c3 FROM t1, rt1, t0, v0 GROUP BY t0.c0, rt1.c3;
SELECT ALL t0.c0, rt1.c3 FROM t1, rt1, t0, v0 GROUP BY t0.c0, rt1.c3 HAVING MAX('s%T쯵eD') UNION ALL SELECT ALL t0.c0, rt1.c3 FROM t1, rt1, t0, v0 GROUP BY t0.c0, rt1.c3 HAVING (NOT (MAX('s%T쯵eD'))) UNION ALL SELECT t0.c0, rt1.c3 FROM t1, rt1, t0, v0 GROUP BY t0.c0, rt1.c3 HAVING ((MAX('s%T쯵eD')) ISNULL);
SELECT ALL t0.c0, rt1.c3 FROM t1, rt1, t0, v0 GROUP BY t0.c0, rt1.c3;
SELECT ALL t0.c0, rt1.c3 FROM t1, rt1, t0, v0 GROUP BY t0.c0, rt1.c3 HAVING MAX('s%T쯵eD') UNION ALL SELECT ALL t0.c0, rt1.c3 FROM t1, rt1, t0, v0 GROUP BY t0.c0, rt1.c3 HAVING (NOT (MAX('s%T쯵eD'))) UNION ALL SELECT t0.c0, rt1.c3 FROM t1, rt1, t0, v0 GROUP BY t0.c0, rt1.c3 HAVING ((MAX('s%T쯵eD')) ISNULL);
SELECT ALL t0.c0, rt1.c3 FROM t1, rt1, t0, v0 GROUP BY t0.c0, rt1.c3;
SELECT ALL MAX((~ (((rt0.c3) BETWEEN (t0.c2) AND (''))))) FROM rt0, rt1, t1, t0 ORDER BY ((((((NULL)AND(rt0.c2)))AND(rt0.c2))) ISNULL) ASC  NULLS FIRST;
SELECT ALL * FROM v0, rt1 LEFT OUTER JOIN t0 ON -1638821550 LEFT OUTER JOIN t1 ON 5.81804899E8 INNER JOIN rt0 ON (((t0.c0) NOT BETWEEN (rt1.c0) AND (rt1.c3)) IN ());
SELECT * FROM v0, rt1 LEFT OUTER JOIN t0 ON -1638821550 LEFT OUTER JOIN t1 ON 5.81804899E8 INNER JOIN rt0 ON (((t0.c0) NOT BETWEEN (rt1.c0) AND (rt1.c3)) IN ()) WHERE (((rt1.c1)*(NULLIF(DISTINCT rt1.c3, t1.c0)))) UNION ALL SELECT * FROM v0, rt1 LEFT OUTER JOIN t0 ON -1638821550 LEFT OUTER JOIN t1 ON 5.81804899E8 INNER JOIN rt0 ON (((t0.c0) NOT BETWEEN (rt1.c0) AND (rt1.c3)) IN ()) WHERE ((NOT (((rt1.c1)*(NULLIF(DISTINCT rt1.c3, t1.c0)))))) UNION ALL SELECT * FROM v0, rt1 LEFT OUTER JOIN t0 ON -1638821550 LEFT OUTER JOIN t1 ON 5.81804899E8 INNER JOIN rt0 ON (((t0.c0) NOT BETWEEN (rt1.c0) AND (rt1.c3)) IN ()) WHERE (((((rt1.c1)*(NULLIF(DISTINCT rt1.c3, t1.c0)))) ISNULL));
SELECT ALL * FROM v0, rt1 LEFT OUTER JOIN t0 ON -1638821550 LEFT OUTER JOIN t1 ON 5.81804899E8 INNER JOIN rt0 ON (((t0.c0) NOT BETWEEN (rt1.c0) AND (rt1.c3)) IN ());
SELECT DISTINCT * FROM t1, rt1;
SELECT DISTINCT * FROM t1, rt1 WHERE ((((rt1.c1)) BETWEEN (((~ (rt1.c1)))) AND ((((rt1.c0) BETWEEN ('-1675350073') AND (t1.c0)))))) UNION SELECT DISTINCT * FROM t1, rt1 WHERE ((NOT ((((rt1.c1)) BETWEEN (((~ (rt1.c1)))) AND ((((rt1.c0) BETWEEN ('-1675350073') AND (t1.c0)))))))) UNION SELECT DISTINCT * FROM t1, rt1 WHERE ((((((rt1.c1)) BETWEEN (((~ (rt1.c1)))) AND ((((rt1.c0) BETWEEN ('-1675350073') AND (t1.c0)))))) ISNULL));
SELECT DISTINCT * FROM t1, rt1;
SELECT ALL rt0.c2, t0.c2, rt0.c3, t0.c1, rt0.c4, t0.c0, rt0.c0, t1.c0 FROM t1, rt0 FULL OUTER JOIN t0 ON (((((rt0.c2) BETWEEN (rt0.c4) AND (x''))))>=((((((((((rt0.c3)OR(rt0.c0)))AND(t0.c2)))AND(rt0.c2)))OR(t0.c0))))) GROUP BY rt0.c2, t0.c2, rt0.c3, t0.c1, rt0.c4, t0.c0, rt0.c0, t1.c0;
SELECT ALL rt0.c2, t0.c2, rt0.c3, t0.c1, rt0.c4, t0.c0, rt0.c0, t1.c0 FROM t1, rt0 FULL OUTER JOIN t0 ON (((((rt0.c2) BETWEEN (rt0.c4) AND (x''))))>=((((((((((rt0.c3)OR(rt0.c0)))AND(t0.c2)))AND(rt0.c2)))OR(t0.c0))))) WHERE ((((NULL)) NOT BETWEEN ((((rt0.c3) BETWEEN (rt0.c3) AND (t0.c2)))) AND (((NOT (t1.c0)))))) GROUP BY rt0.c2, t0.c2, rt0.c3, t0.c1, rt0.c4, t0.c0, rt0.c0, t1.c0 UNION SELECT rt0.c2, t0.c2, rt0.c3, t0.c1, rt0.c4, t0.c0, rt0.c0, t1.c0 FROM t1, rt0 FULL OUTER JOIN t0 ON (((((rt0.c2) BETWEEN (rt0.c4) AND (x''))))>=((((((((((rt0.c3)OR(rt0.c0)))AND(t0.c2)))AND(rt0.c2)))OR(t0.c0))))) WHERE ((NOT ((((NULL)) NOT BETWEEN ((((rt0.c3) BETWEEN (rt0.c3) AND (t0.c2)))) AND (((NOT (t1.c0)))))))) GROUP BY rt0.c2, t0.c2, rt0.c3, t0.c1, rt0.c4, t0.c0, rt0.c0, t1.c0 UNION SELECT ALL rt0.c2, t0.c2, rt0.c3, t0.c1, rt0.c4, t0.c0, rt0.c0, t1.c0 FROM t1, rt0 FULL OUTER JOIN t0 ON (((((rt0.c2) BETWEEN (rt0.c4) AND (x''))))>=((((((((((rt0.c3)OR(rt0.c0)))AND(t0.c2)))AND(rt0.c2)))OR(t0.c0))))) WHERE ((((((NULL)) NOT BETWEEN ((((rt0.c3) BETWEEN (rt0.c3) AND (t0.c2)))) AND (((NOT (t1.c0)))))) ISNULL)) GROUP BY rt0.c2, t0.c2, rt0.c3, t0.c1, rt0.c4, t0.c0, rt0.c0, t1.c0;
SELECT ALL rt0.c2, t0.c2, rt0.c3, t0.c1, rt0.c4, t0.c0, rt0.c0, t1.c0 FROM t1, rt0 FULL OUTER JOIN t0 ON (((((rt0.c2) BETWEEN (rt0.c4) AND (x''))))>=((((((((((rt0.c3)OR(rt0.c0)))AND(t0.c2)))AND(rt0.c2)))OR(t0.c0))))) GROUP BY rt0.c2, t0.c2, rt0.c3, t0.c1, rt0.c4, t0.c0, rt0.c0, t1.c0;
SELECT t0.c0, rt1.c0, rt0.c4, rt0.c2, rt0.c0, t0.c1, t1.c0, rt1.c2, t0.c2 FROM rt0, t1, rt1, t0 GROUP BY t0.c0, rt1.c0, rt0.c4, rt0.c2, rt0.c0, t0.c1, t1.c0, rt1.c2, t0.c2;
SELECT ALL t0.c0, rt1.c0, rt0.c4, rt0.c2, rt0.c0, t0.c1, t1.c0, rt1.c2, t0.c2 FROM rt0, t1, rt1, t0 GROUP BY t0.c0, rt1.c0, rt0.c4, rt0.c2, rt0.c0, t0.c1, t1.c0, rt1.c2, t0.c2 HAVING COUNT(*) UNION ALL SELECT t0.c0, rt1.c0, rt0.c4, rt0.c2, rt0.c0, t0.c1, t1.c0, rt1.c2, t0.c2 FROM rt0, t1, rt1, t0 GROUP BY t0.c0, rt1.c0, rt0.c4, rt0.c2, rt0.c0, t0.c1, t1.c0, rt1.c2, t0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0, rt1.c0, rt0.c4, rt0.c2, rt0.c0, t0.c1, t1.c0, rt1.c2, t0.c2 FROM rt0, t1, rt1, t0 GROUP BY t0.c0, rt1.c0, rt0.c4, rt0.c2, rt0.c0, t0.c1, t1.c0, rt1.c2, t0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0, rt1.c0, rt0.c4, rt0.c2, rt0.c0, t0.c1, t1.c0, rt1.c2, t0.c2 FROM rt0, t1, rt1, t0 GROUP BY t0.c0, rt1.c0, rt0.c4, rt0.c2, rt0.c0, t0.c1, t1.c0, rt1.c2, t0.c2;
SELECT ALL t0.c0, rt1.c0, rt0.c4, rt0.c2, rt0.c0, t0.c1, t1.c0, rt1.c2, t0.c2 FROM rt0, t1, rt1, t0 GROUP BY t0.c0, rt1.c0, rt0.c4, rt0.c2, rt0.c0, t0.c1, t1.c0, rt1.c2, t0.c2 HAVING COUNT(*) UNION ALL SELECT t0.c0, rt1.c0, rt0.c4, rt0.c2, rt0.c0, t0.c1, t1.c0, rt1.c2, t0.c2 FROM rt0, t1, rt1, t0 GROUP BY t0.c0, rt1.c0, rt0.c4, rt0.c2, rt0.c0, t0.c1, t1.c0, rt1.c2, t0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0, rt1.c0, rt0.c4, rt0.c2, rt0.c0, t0.c1, t1.c0, rt1.c2, t0.c2 FROM rt0, t1, rt1, t0 GROUP BY t0.c0, rt1.c0, rt0.c4, rt0.c2, rt0.c0, t0.c1, t1.c0, rt1.c2, t0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0, rt1.c0, rt0.c4, rt0.c2, rt0.c0, t0.c1, t1.c0, rt1.c2, t0.c2 FROM rt0, t1, rt1, t0 GROUP BY t0.c0, rt1.c0, rt0.c4, rt0.c2, rt0.c0, t0.c1, t1.c0, rt1.c2, t0.c2;
SELECT * FROM rt1, rt0, v0;
SELECT ALL * FROM rt1, rt0, v0 WHERE (((rt0.c0 IN ()) IN ())) UNION ALL SELECT ALL * FROM rt1, rt0, v0 WHERE ((NOT (((rt0.c0 IN ()) IN ())))) UNION ALL SELECT ALL * FROM rt1, rt0, v0 WHERE (((((rt0.c0 IN ()) IN ())) ISNULL));
SELECT * FROM rt1, rt0, v0;
SELECT DISTINCT * FROM t1, t0 CROSS JOIN v0 ON ((((((t0.c1)AND(v0.c0)))OR(t0.c0)))IS(((t0.c1) BETWEEN (t1.c0) AND (v0.c0))));
SELECT DISTINCT * FROM t1, t0 CROSS JOIN v0 ON ((((((t0.c1)AND(v0.c0)))OR(t0.c0)))IS(((t0.c1) BETWEEN (t1.c0) AND (v0.c0)))) WHERE (CAST((t0.c1 IN (0x1c739966)) AS BLOB)) UNION SELECT DISTINCT * FROM t1, t0 CROSS JOIN v0 ON ((((((t0.c1)AND(v0.c0)))OR(t0.c0)))IS(((t0.c1) BETWEEN (t1.c0) AND (v0.c0)))) WHERE ((NOT (CAST((t0.c1 IN (0X1c739966)) AS BLOB)))) UNION SELECT DISTINCT * FROM t1, t0 CROSS JOIN v0 ON ((((((t0.c1)AND(v0.c0)))OR(t0.c0)))IS(((t0.c1) BETWEEN (t1.c0) AND (v0.c0)))) WHERE (((CAST((t0.c1 IN (0x1c739966)) AS BLOB)) ISNULL));
SELECT DISTINCT * FROM t1, t0 CROSS JOIN v0 ON ((((((t0.c1)AND(v0.c0)))OR(t0.c0)))IS(((t0.c1) BETWEEN (t1.c0) AND (v0.c0))));
SELECT ALL rt0.c1, t0.c2, rt0.c3, rt0.c0, rt0.c4 FROM rt0, t0 GROUP BY rt0.c1, t0.c2, rt0.c3, rt0.c0, rt0.c4;
SELECT rt0.c1, t0.c2, rt0.c3, rt0.c0, rt0.c4 FROM rt0, t0 WHERE ((+ (((rt0.c0) NOT NULL)))) GROUP BY rt0.c1, t0.c2, rt0.c3, rt0.c0, rt0.c4 UNION SELECT rt0.c1, t0.c2, rt0.c3, rt0.c0, rt0.c4 FROM rt0, t0 WHERE ((NOT ((+ (((rt0.c0) NOT NULL)))))) GROUP BY rt0.c1, t0.c2, rt0.c3, rt0.c0, rt0.c4 UNION SELECT rt0.c1, t0.c2, rt0.c3, rt0.c0, rt0.c4 FROM rt0, t0 WHERE ((((+ (((rt0.c0) NOT NULL)))) ISNULL)) GROUP BY rt0.c1, t0.c2, rt0.c3, rt0.c0, rt0.c4;
SELECT ALL rt0.c1, t0.c2, rt0.c3, rt0.c0, rt0.c4 FROM rt0, t0 GROUP BY rt0.c1, t0.c2, rt0.c3, rt0.c0, rt0.c4;
SELECT rt0.c0, rt0.c1, rt0.c4 FROM t1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c4;
SELECT rt0.c0, rt0.c1, rt0.c4 FROM t1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c4 HAVING ((COUNT(rt0.c3))<=(MIN('Khso['))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c4 FROM t1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c4 HAVING (NOT (((COUNT(rt0.c3))<=(MIN('Khso['))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c4 FROM t1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c4 HAVING ((((COUNT(rt0.c3))<=(MIN('Khso[')))) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c4 FROM t1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c4;
SELECT rt0.c0, rt0.c1, rt0.c4 FROM t1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c4 HAVING ((COUNT(rt0.c3))<=(MIN('Khso['))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c4 FROM t1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c4 HAVING (NOT (((COUNT(rt0.c3))<=(MIN('Khso['))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c4 FROM t1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c4 HAVING ((((COUNT(rt0.c3))<=(MIN('Khso[')))) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c4 FROM t1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c4;
SELECT ALL rt0.c1, rt0.c4, t1.c0, rt0.c3, rt0.c2, rt0.c0 FROM t1, rt0, v0;
SELECT ALL rt0.c1, rt0.c4, t1.c0, rt0.c3, rt0.c2, rt0.c0 FROM t1, rt0, v0 WHERE ((((rt0.c1)GLOB(rt0.c0)) IN (((rt0.c0)+(rt0.c3))))) UNION ALL SELECT rt0.c1, rt0.c4, t1.c0, rt0.c3, rt0.c2, rt0.c0 FROM t1, rt0, v0 WHERE ((NOT ((((rt0.c1)GLOB(rt0.c0)) IN (((rt0.c0)+(rt0.c3))))))) UNION ALL SELECT rt0.c1, rt0.c4, t1.c0, rt0.c3, rt0.c2, rt0.c0 FROM t1, rt0, v0 WHERE ((((((rt0.c1)GLOB(rt0.c0)) IN (((rt0.c0)+(rt0.c3))))) ISNULL));
SELECT ALL rt0.c1, rt0.c4, t1.c0, rt0.c3, rt0.c2, rt0.c0 FROM t1, rt0, v0;
SELECT DISTINCT rt1.c2, rt0.c2, rt0.c0, rt1.c0 FROM rt0, rt1 INNER JOIN t1 ON LIKELIHOOD(((((rt1.c1)OR(rt1.c0)))AND(rt0.c0)), 0.4730872262652991);
SELECT DISTINCT rt1.c2, rt0.c2, rt0.c0, rt1.c0 FROM rt0, rt1 INNER JOIN t1 ON LIKELIHOOD(((((rt1.c1)OR(rt1.c0)))AND(rt0.c0)), 0.4730872262652991) WHERE (TIME((rt0.c0 IN ()), ((rt0.c4) NOT BETWEEN ('-1675350073') AND (rt0.c3)), ((NULL)IS(rt0.c0)))) UNION SELECT DISTINCT rt1.c2, rt0.c2, rt0.c0, rt1.c0 FROM rt0, rt1 INNER JOIN t1 ON LIKELIHOOD(((((rt1.c1)OR(rt1.c0)))AND(rt0.c0)), 0.4730872262652991) WHERE ((NOT (TIME((rt0.c0 IN ()), ((rt0.c4) NOT BETWEEN ('-1675350073') AND (rt0.c3)), ((NULL)IS(rt0.c0)))))) UNION SELECT DISTINCT rt1.c2, rt0.c2, rt0.c0, rt1.c0 FROM rt0, rt1 INNER JOIN t1 ON LIKELIHOOD(((((rt1.c1)OR(rt1.c0)))AND(rt0.c0)), 0.4730872262652991) WHERE (((TIME((rt0.c0 IN ()), ((rt0.c4) NOT BETWEEN ('-1675350073') AND (rt0.c3)), ((NULL)IS(rt0.c0)))) ISNULL));
SELECT DISTINCT rt1.c2, rt0.c2, rt0.c0, rt1.c0 FROM rt0, rt1 INNER JOIN t1 ON LIKELIHOOD(((((rt1.c1)OR(rt1.c0)))AND(rt0.c0)), 0.4730872262652991);
SELECT rt1.c1, rt0.c1, t0.c2 FROM t0, t1 FULL OUTER JOIN v0 ON ((t0.c1 COLLATE NOCASE) NOT BETWEEN (((0.6788815641016253) ISNULL)) AND (rtreenode('1053559561', '-1268112050'))) CROSS JOIN rt1 ON rt0.c2 FULL OUTER JOIN rt0 ON CASE WHEN SQLITE_SOURCE_ID() THEN (t0.c1 IN ()) END GROUP BY rt1.c1, rt0.c1, t0.c2;
SELECT rt1.c3, rt0.c1, rt1.c0, t1.c0, rt1.c2, v0.c0, rt0.c0, rt0.c4, rt1.c1, rt0.c2, rt0.c3 FROM v0, t1, rt0, rt1 GROUP BY rt1.c3, rt0.c1, rt1.c0, t1.c0, rt1.c2, v0.c0, rt0.c0, rt0.c4, rt1.c1, rt0.c2, rt0.c3;
SELECT rt1.c3, rt0.c1, rt1.c0, t1.c0, rt1.c2, v0.c0, rt0.c0, rt0.c4, rt1.c1, rt0.c2, rt0.c3 FROM v0, t1, rt0, rt1 GROUP BY rt1.c3, rt0.c1, rt1.c0, t1.c0, rt1.c2, v0.c0, rt0.c0, rt0.c4, rt1.c1, rt0.c2, rt0.c3 HAVING CASE WHEN '311978180' THEN ((v0.c0) IS TRUE) ELSE ((AVG(rt1.c1)) ISNULL) END UNION ALL SELECT rt1.c3, rt0.c1, rt1.c0, t1.c0, rt1.c2, v0.c0, rt0.c0, rt0.c4, rt1.c1, rt0.c2, rt0.c3 FROM v0, t1, rt0, rt1 GROUP BY rt1.c3, rt0.c1, rt1.c0, t1.c0, rt1.c2, v0.c0, rt0.c0, rt0.c4, rt1.c1, rt0.c2, rt0.c3 HAVING (NOT (CASE WHEN '311978180' THEN ((v0.c0) IS TRUE) ELSE ((AVG(rt1.c1)) ISNULL) END)) UNION ALL SELECT ALL rt1.c3, rt0.c1, rt1.c0, t1.c0, rt1.c2, v0.c0, rt0.c0, rt0.c4, rt1.c1, rt0.c2, rt0.c3 FROM v0, t1, rt0, rt1 GROUP BY rt1.c3, rt0.c1, rt1.c0, t1.c0, rt1.c2, v0.c0, rt0.c0, rt0.c4, rt1.c1, rt0.c2, rt0.c3 HAVING ((CASE WHEN '311978180' THEN ((v0.c0) IS TRUE) ELSE ((AVG(rt1.c1)) ISNULL) END) ISNULL);
SELECT rt1.c3, rt0.c1, rt1.c0, t1.c0, rt1.c2, v0.c0, rt0.c0, rt0.c4, rt1.c1, rt0.c2, rt0.c3 FROM v0, t1, rt0, rt1 GROUP BY rt1.c3, rt0.c1, rt1.c0, t1.c0, rt1.c2, v0.c0, rt0.c0, rt0.c4, rt1.c1, rt0.c2, rt0.c3;
SELECT rt1.c3, rt0.c1, rt1.c0, t1.c0, rt1.c2, v0.c0, rt0.c0, rt0.c4, rt1.c1, rt0.c2, rt0.c3 FROM v0, t1, rt0, rt1 GROUP BY rt1.c3, rt0.c1, rt1.c0, t1.c0, rt1.c2, v0.c0, rt0.c0, rt0.c4, rt1.c1, rt0.c2, rt0.c3 HAVING CASE WHEN '311978180' THEN ((v0.c0) IS TRUE) ELSE ((AVG(rt1.c1)) ISNULL) END UNION ALL SELECT rt1.c3, rt0.c1, rt1.c0, t1.c0, rt1.c2, v0.c0, rt0.c0, rt0.c4, rt1.c1, rt0.c2, rt0.c3 FROM v0, t1, rt0, rt1 GROUP BY rt1.c3, rt0.c1, rt1.c0, t1.c0, rt1.c2, v0.c0, rt0.c0, rt0.c4, rt1.c1, rt0.c2, rt0.c3 HAVING (NOT (CASE WHEN '311978180' THEN ((v0.c0) IS TRUE) ELSE ((AVG(rt1.c1)) ISNULL) END)) UNION ALL SELECT ALL rt1.c3, rt0.c1, rt1.c0, t1.c0, rt1.c2, v0.c0, rt0.c0, rt0.c4, rt1.c1, rt0.c2, rt0.c3 FROM v0, t1, rt0, rt1 GROUP BY rt1.c3, rt0.c1, rt1.c0, t1.c0, rt1.c2, v0.c0, rt0.c0, rt0.c4, rt1.c1, rt0.c2, rt0.c3 HAVING ((CASE WHEN '311978180' THEN ((v0.c0) IS TRUE) ELSE ((AVG(rt1.c1)) ISNULL) END) ISNULL);
SELECT rt1.c3, rt0.c1, rt1.c0, t1.c0, rt1.c2, v0.c0, rt0.c0, rt0.c4, rt1.c1, rt0.c2, rt0.c3 FROM v0, t1, rt0, rt1 GROUP BY rt1.c3, rt0.c1, rt1.c0, t1.c0, rt1.c2, v0.c0, rt0.c0, rt0.c4, rt1.c1, rt0.c2, rt0.c3;
SELECT ALL t0.c2 FROM t0;
SELECT ALL t0.c2 FROM t0 WHERE (((((((((((((((t0.c0)%(t0.c1)))AND(((t0.c0) NOTNULL))))OR(((t0.c0) NOTNULL))))AND(t0.c0 COLLATE NOCASE)))OR((('1827772608') NOT BETWEEN (-1053356094) AND (t0.c2)))))AND((~ (t0.c1)))))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c1))))) UNION ALL SELECT t0.c2 FROM t0 WHERE ((NOT (((((((((((((((t0.c0)%(t0.c1)))AND(((t0.c0) NOTNULL))))OR(((t0.c0) NOTNULL))))AND(t0.c0 COLLATE NOCASE)))OR((('1827772608') NOT BETWEEN (-1053356094) AND (t0.c2)))))AND((~ (t0.c1)))))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c1))))))) UNION ALL SELECT ALL t0.c2 FROM t0 WHERE (((((((((((((((((t0.c0)%(t0.c1)))AND(((t0.c0) NOTNULL))))OR(((t0.c0) NOTNULL))))AND(t0.c0 COLLATE NOCASE)))OR((('1827772608') NOT BETWEEN (-1053356094) AND (t0.c2)))))AND((~ (t0.c1)))))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c1))))) ISNULL));
SELECT ALL t0.c2 FROM t0;
SELECT DISTINCT * FROM t0, t1, v0, rt1;
SELECT DISTINCT * FROM t0, t1, v0, rt1 WHERE (((NULL)==(((((((((((((rt1.c0)OR(rt1.c2)))OR(t0.c1)))OR(t0.c1)))OR(rt1.c1)))OR(-734286246)))OR(t0.c0))))) UNION SELECT DISTINCT * FROM t0, t1, v0, rt1 WHERE ((NOT (((NULL)=(((((((((((((rt1.c0)OR(rt1.c2)))OR(t0.c1)))OR(t0.c1)))OR(rt1.c1)))OR(-734286246)))OR(t0.c0))))))) UNION SELECT DISTINCT * FROM t0, t1, v0, rt1 WHERE (((((NULL)==(((((((((((((rt1.c0)OR(rt1.c2)))OR(t0.c1)))OR(t0.c1)))OR(rt1.c1)))OR(-734286246)))OR(t0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0, t1, v0, rt1;
SELECT v0.c0, t1.c0 FROM t1, v0 GROUP BY v0.c0, t1.c0;
SELECT ALL v0.c0, t1.c0 FROM t1, v0 WHERE ((((v0.c0 IN ())) NOT BETWEEN (((((((((t1.c0)OR(x'')))AND(t1.c0)))OR('By')))OR(v0.c0))) AND (v0.c0 COLLATE RTRIM))) GROUP BY v0.c0, t1.c0 UNION SELECT v0.c0, t1.c0 FROM t1, v0 WHERE ((NOT ((((v0.c0 IN ())) NOT BETWEEN (((((((((t1.c0)OR(x'')))AND(t1.c0)))OR('By')))OR(v0.c0))) AND (v0.c0 COLLATE RTRIM))))) GROUP BY v0.c0, t1.c0 UNION SELECT v0.c0, t1.c0 FROM t1, v0 WHERE ((((((v0.c0 IN ())) NOT BETWEEN (((((((((t1.c0)OR(x'')))AND(t1.c0)))OR('By')))OR(v0.c0))) AND (v0.c0 COLLATE RTRIM))) ISNULL)) GROUP BY v0.c0, t1.c0;
SELECT v0.c0, t1.c0 FROM t1, v0 GROUP BY v0.c0, t1.c0;
SELECT rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3;
SELECT ALL rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3 HAVING ((AVG(rt0.c2) COLLATE BINARY) NOTNULL) UNION ALL SELECT ALL rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3 HAVING (NOT (((AVG(rt0.c2) COLLATE BINARY) NOTNULL))) UNION ALL SELECT ALL rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3 HAVING ((((AVG(rt0.c2) COLLATE BINARY) NOTNULL)) ISNULL);
SELECT rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3;
SELECT ALL rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3 HAVING ((AVG(rt0.c2) COLLATE BINARY) NOTNULL) UNION ALL SELECT ALL rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3 HAVING (NOT (((AVG(rt0.c2) COLLATE BINARY) NOTNULL))) UNION ALL SELECT ALL rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3 HAVING ((((AVG(rt0.c2) COLLATE BINARY) NOTNULL)) ISNULL);
SELECT rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3;
SELECT * FROM rt0, rt1;
SELECT * FROM rt0, rt1 WHERE ((((rt0.c4) IS TRUE) IN ((rt0.c0 IN ()), ((NULL)+(rt1.c2))))) UNION ALL SELECT ALL * FROM rt0, rt1 WHERE ((NOT ((((rt0.c4) IS TRUE) IN ((rt0.c0 IN ()), ((NULL)+(rt1.c2))))))) UNION ALL SELECT * FROM rt0, rt1 WHERE ((((((rt0.c4) IS TRUE) IN ((rt0.c0 IN ()), ((NULL)+(rt1.c2))))) ISNULL));
SELECT * FROM rt0, rt1;
SELECT DISTINCT * FROM t0, rt0, v0 INDEXED BY i55;
SELECT rt0.c0, rt1.c2 FROM rt1, rt0, t0, v0 GROUP BY rt0.c0, rt1.c2;
SELECT ALL rt0.c0, rt1.c2 FROM rt1, rt0, t0, v0 WHERE (((((rt0.c1)OR(rt0.c1)))OR(rt0.c4)) COLLATE NOCASE) GROUP BY rt0.c0, rt1.c2 UNION SELECT rt0.c0, rt1.c2 FROM rt1, rt0, t0, v0 WHERE ((NOT (((((rt0.c1)OR(rt0.c1)))OR(rt0.c4)) COLLATE NOCASE))) GROUP BY rt0.c0, rt1.c2 UNION SELECT rt0.c0, rt1.c2 FROM rt1, rt0, t0, v0 WHERE (((((((rt0.c1)OR(rt0.c1)))OR(rt0.c4)) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c0, rt1.c2;
SELECT rt0.c0, rt1.c2 FROM rt1, rt0, t0, v0 GROUP BY rt0.c0, rt1.c2;
SELECT t0.c2, t0.c1 FROM v0, t0 GROUP BY t0.c2, t0.c1;
SELECT ALL t0.c2, t0.c1 FROM v0, t0 GROUP BY t0.c2, t0.c1 HAVING MIN(((t0.c0) BETWEEN (MIN(v0.c0)) AND (TOTAL(MIN(COUNT(v0.c0)))))) UNION ALL SELECT ALL t0.c2, t0.c1 FROM v0, t0 GROUP BY t0.c2, t0.c1 HAVING (NOT (MIN(((t0.c0) BETWEEN (MIN(v0.c0)) AND (TOTAL(MIN(COUNT(v0.c0)))))))) UNION ALL SELECT t0.c2, t0.c1 FROM v0, t0 GROUP BY t0.c2, t0.c1 HAVING ((MIN(((t0.c0) BETWEEN (MIN(v0.c0)) AND (TOTAL(MIN(COUNT(v0.c0))))))) ISNULL);
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE (((UNICODE(v0.c0)) NOTNULL)) UNION ALL SELECT * FROM v0 WHERE ((NOT (((UNICODE(v0.c0)) NOTNULL)))) UNION ALL SELECT * FROM v0 WHERE (((((UNICODE(v0.c0)) NOTNULL)) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT t0.c0 FROM t1, rt0, v0, t0 NOT INDEXED;
SELECT DISTINCT t0.c0 FROM t1, rt0, v0, t0 WHERE ((((0x315ba588)) NOT BETWEEN (((((rt0.c2))<=((t1.c0))))) AND ((((rt0.c1)>(t0.c1)))))) UNION SELECT DISTINCT t0.c0 FROM t1, rt0, v0, t0 WHERE ((NOT ((((0X315ba588)) NOT BETWEEN (((((rt0.c2))<=((t1.c0))))) AND ((((rt0.c1)>(t0.c1)))))))) UNION SELECT DISTINCT t0.c0 FROM t1, rt0, v0, t0 WHERE ((((((0x315ba588)) NOT BETWEEN (((((rt0.c2))<=((t1.c0))))) AND ((((rt0.c1)>(t0.c1)))))) ISNULL));
SELECT DISTINCT t0.c0 FROM t1, rt0, v0, t0 NOT INDEXED;
SELECT t0.c2, rt0.c1, t0.c0, rt0.c2, rt1.c0, t1.c0, t0.c1, rt1.c2, rt0.c3, rt0.c4, rt1.c1, rt1.c3, v0.c0, rt0.c0 FROM rt0, t0, v0, t1, rt1 GROUP BY t0.c2, rt0.c1, t0.c0, rt0.c2, rt1.c0, t1.c0, t0.c1, rt1.c2, rt0.c3, rt0.c4, rt1.c1, rt1.c3, v0.c0, rt0.c0;
SELECT t0.c2, rt0.c1, t0.c0, rt0.c2, rt1.c0, t1.c0, t0.c1, rt1.c2, rt0.c3, rt0.c4, rt1.c1, rt1.c3, v0.c0, rt0.c0 FROM rt0, t0, v0, t1, rt1 WHERE (((rt0.c0 COLLATE RTRIM)/(((rt1.c2)GLOB('-20305262'))))) GROUP BY t0.c2, rt0.c1, t0.c0, rt0.c2, rt1.c0, t1.c0, t0.c1, rt1.c2, rt0.c3, rt0.c4, rt1.c1, rt1.c3, v0.c0, rt0.c0 UNION SELECT ALL t0.c2, rt0.c1, t0.c0, rt0.c2, rt1.c0, t1.c0, t0.c1, rt1.c2, rt0.c3, rt0.c4, rt1.c1, rt1.c3, v0.c0, rt0.c0 FROM rt0, t0, v0, t1, rt1 WHERE ((NOT (((rt0.c0 COLLATE RTRIM)/(((rt1.c2)GLOB('-20305262'))))))) GROUP BY t0.c2, rt0.c1, t0.c0, rt0.c2, rt1.c0, t1.c0, t0.c1, rt1.c2, rt0.c3, rt0.c4, rt1.c1, rt1.c3, v0.c0, rt0.c0 UNION SELECT ALL t0.c2, rt0.c1, t0.c0, rt0.c2, rt1.c0, t1.c0, t0.c1, rt1.c2, rt0.c3, rt0.c4, rt1.c1, rt1.c3, v0.c0, rt0.c0 FROM rt0, t0, v0, t1, rt1 WHERE (((((rt0.c0 COLLATE RTRIM)/(((rt1.c2)GLOB('-20305262'))))) ISNULL)) GROUP BY t0.c2, rt0.c1, t0.c0, rt0.c2, rt1.c0, t1.c0, t0.c1, rt1.c2, rt0.c3, rt0.c4, rt1.c1, rt1.c3, v0.c0, rt0.c0;
SELECT t0.c2, rt0.c1, t0.c0, rt0.c2, rt1.c0, t1.c0, t0.c1, rt1.c2, rt0.c3, rt0.c4, rt1.c1, rt1.c3, v0.c0, rt0.c0 FROM rt0, t0, v0, t1, rt1 GROUP BY t0.c2, rt0.c1, t0.c0, rt0.c2, rt1.c0, t1.c0, t0.c1, rt1.c2, rt0.c3, rt0.c4, rt1.c1, rt1.c3, v0.c0, rt0.c0;
SELECT rt1.c0, rt1.c1 FROM t0 FULL OUTER JOIN rt1 ON CAST((rt1.c3 IN ()) AS INTEGER) GROUP BY rt1.c0, rt1.c1;
SELECT ALL rt1.c0, rt1.c1 FROM t0 FULL OUTER JOIN rt1 ON CAST((rt1.c3 IN ()) AS INTEGER) GROUP BY rt1.c0, rt1.c1 HAVING MIN(AVG(t0.c2)) UNION ALL SELECT ALL rt1.c0, rt1.c1 FROM t0 FULL OUTER JOIN rt1 ON CAST((rt1.c3 IN ()) AS INTEGER) GROUP BY rt1.c0, rt1.c1 HAVING (NOT (MIN(AVG(t0.c2)))) UNION ALL SELECT rt1.c0, rt1.c1 FROM t0 FULL OUTER JOIN rt1 ON CAST((rt1.c3 IN ()) AS INTEGER) GROUP BY rt1.c0, rt1.c1 HAVING ((MIN(AVG(t0.c2))) ISNULL);
SELECT ALL rt0.c0, rt0.c3 FROM rt0;
SELECT rt0.c0, rt0.c3 FROM rt0 WHERE ((((rt0.c4 IN ())) NOT NULL)) UNION ALL SELECT ALL rt0.c0, rt0.c3 FROM rt0 WHERE ((NOT ((((rt0.c4 IN ())) NOT NULL)))) UNION ALL SELECT rt0.c0, rt0.c3 FROM rt0 WHERE ((((((rt0.c4 IN ())) NOT NULL)) ISNULL));
SELECT ALL rt0.c0, rt0.c3 FROM rt0;
SELECT DISTINCT * FROM rt1, rt0, t0, v0;
SELECT DISTINCT * FROM rt1, rt0, t0, v0 WHERE (rt1.c2) UNION SELECT DISTINCT * FROM rt1, rt0, t0, v0 WHERE ((NOT (rt1.c2))) UNION SELECT DISTINCT * FROM rt1, rt0, t0, v0 WHERE (((rt1.c2) ISNULL));
SELECT DISTINCT * FROM rt1, rt0, t0, v0;
SELECT ALL rt0.c2, v0.c0 FROM rt0, v0 INDEXED BY i35 GROUP BY rt0.c2, v0.c0;
SELECT ALL v0.c0, rt0.c1 FROM v0, t1, rt0 INDEXED BY i16, t0, rt1 GROUP BY v0.c0, rt0.c1;
SELECT t0.c2, rt0.c4, rt0.c1, t1.c0, rt0.c3, t0.c1, t0.c0 FROM t1, rt0, t0;
SELECT ALL t0.c2, rt0.c4, rt0.c1, t1.c0, rt0.c3, t0.c1, t0.c0 FROM t1, rt0, t0 WHERE (UNLIKELY((((t0.c0)) BETWEEN ((t0.c1)) AND ((t0.c0))))) ORDER BY (((NULL))<>((GLOB(rt0.c1, t0.c1))))  NULLS FIRST;
SELECT ALL t0.c2, rt0.c4, rt0.c1, t1.c0, rt0.c3, t0.c1, t0.c0 FROM t1, rt0, t0 WHERE ((NOT (UNLIKELY((((t0.c0)) BETWEEN ((t0.c1)) AND ((t0.c0))))))) ORDER BY (((NULL))!=((GLOB(rt0.c1, t0.c1))))  NULLS FIRST;
SELECT ALL t0.c2, rt0.c4, rt0.c1, t1.c0, rt0.c3, t0.c1, t0.c0 FROM t1, rt0, t0 WHERE (((UNLIKELY((((t0.c0)) BETWEEN ((t0.c1)) AND ((t0.c0))))) ISNULL)) ORDER BY (((NULL))<>((GLOB(rt0.c1, t0.c1))))  NULLS FIRST;
SELECT t0.c2, rt0.c4, rt0.c1, t1.c0, rt0.c3, t0.c1, t0.c0 FROM t1, rt0, t0;
SELECT DISTINCT t0.c0 FROM t0, t1, rt0;
SELECT DISTINCT t0.c0 FROM t0, t1, rt0 WHERE ((((- (t0.c1)))IS NOT(CASE t0.c0  WHEN t0.c0 THEN rt0.c4 WHEN '妣n' THEN t0.c1 WHEN '0.323972646227473' THEN rt0.c0 END))) UNION SELECT DISTINCT t0.c0 FROM t0, t1, rt0 WHERE ((NOT ((((- (t0.c1)))IS NOT(CASE t0.c0  WHEN t0.c0 THEN rt0.c4 WHEN '妣n' THEN t0.c1 WHEN '0.323972646227473' THEN rt0.c0 END))))) UNION SELECT DISTINCT t0.c0 FROM t0, t1, rt0 WHERE ((((((- (t0.c1)))IS NOT(CASE t0.c0  WHEN t0.c0 THEN rt0.c4 WHEN '妣n' THEN t0.c1 WHEN '0.323972646227473' THEN rt0.c0 END))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0, t1, rt0;
SELECT ALL rt0.c3, t0.c0, rt0.c0, rt1.c0, rt0.c4, rt0.c1, t0.c1, t0.c2, rt1.c1, rt1.c2, rt0.c2 FROM t1, rt0, rt1, t0 GROUP BY rt0.c3, t0.c0, rt0.c0, rt1.c0, rt0.c4, rt0.c1, t0.c1, t0.c2, rt1.c1, rt1.c2, rt0.c2;
SELECT ALL rt0.c3, t0.c0, rt0.c0, rt1.c0, rt0.c4, rt0.c1, t0.c1, t0.c2, rt1.c1, rt1.c2, rt0.c2 FROM t1, rt0, rt1, t0 WHERE (CAST(((((rt1.c3)AND(t0.c1)))AND(t0.c2)) AS BLOB)) GROUP BY rt0.c3, t0.c0, rt0.c0, rt1.c0, rt0.c4, rt0.c1, t0.c1, t0.c2, rt1.c1, rt1.c2, rt0.c2 UNION SELECT ALL rt0.c3, t0.c0, rt0.c0, rt1.c0, rt0.c4, rt0.c1, t0.c1, t0.c2, rt1.c1, rt1.c2, rt0.c2 FROM t1, rt0, rt1, t0 WHERE ((NOT (CAST(((((rt1.c3)AND(t0.c1)))AND(t0.c2)) AS BLOB)))) GROUP BY rt0.c3, t0.c0, rt0.c0, rt1.c0, rt0.c4, rt0.c1, t0.c1, t0.c2, rt1.c1, rt1.c2, rt0.c2 UNION SELECT ALL rt0.c3, t0.c0, rt0.c0, rt1.c0, rt0.c4, rt0.c1, t0.c1, t0.c2, rt1.c1, rt1.c2, rt0.c2 FROM t1, rt0, rt1, t0 WHERE (((CAST(((((rt1.c3)AND(t0.c1)))AND(t0.c2)) AS BLOB)) ISNULL)) GROUP BY rt0.c3, t0.c0, rt0.c0, rt1.c0, rt0.c4, rt0.c1, t0.c1, t0.c2, rt1.c1, rt1.c2, rt0.c2;
SELECT ALL rt0.c3, t0.c0, rt0.c0, rt1.c0, rt0.c4, rt0.c1, t0.c1, t0.c2, rt1.c1, rt1.c2, rt0.c2 FROM t1, rt0, rt1, t0 GROUP BY rt0.c3, t0.c0, rt0.c0, rt1.c0, rt0.c4, rt0.c1, t0.c1, t0.c2, rt1.c1, rt1.c2, rt0.c2;
SELECT rt0.c1, rt1.c1, rt1.c3, t1.c0, rt1.c2, rt0.c4 FROM rt0 INNER JOIN t1 ON (NOT ((((rt0.c0))<((t1.c0))))) RIGHT OUTER JOIN rt1 ON 0Xffffffff83f5b492 GROUP BY rt0.c1, rt1.c1, rt1.c3, t1.c0, rt1.c2, rt0.c4;
SELECT ALL rt0.c1, rt1.c1, rt1.c3, t1.c0, rt1.c2, rt0.c4 FROM rt0 INNER JOIN t1 ON (NOT ((((rt0.c0))<((t1.c0))))) RIGHT OUTER JOIN rt1 ON 0Xffffffff83f5b492 GROUP BY rt0.c1, rt1.c1, rt1.c3, t1.c0, rt1.c2, rt0.c4 HAVING AVG(COUNT(*)) UNION ALL SELECT rt0.c1, rt1.c1, rt1.c3, t1.c0, rt1.c2, rt0.c4 FROM rt0 INNER JOIN t1 ON (NOT ((((rt0.c0))<((t1.c0))))) RIGHT OUTER JOIN rt1 ON 0Xffffffff83f5b492 GROUP BY rt0.c1, rt1.c1, rt1.c3, t1.c0, rt1.c2, rt0.c4 HAVING (NOT (AVG(COUNT(*)))) UNION ALL SELECT ALL rt0.c1, rt1.c1, rt1.c3, t1.c0, rt1.c2, rt0.c4 FROM rt0 INNER JOIN t1 ON (NOT ((((rt0.c0))<((t1.c0))))) RIGHT OUTER JOIN rt1 ON 0xffffffff83f5b492 GROUP BY rt0.c1, rt1.c1, rt1.c3, t1.c0, rt1.c2, rt0.c4 HAVING ((AVG(COUNT(*))) ISNULL);
SELECT * FROM rt1 CROSS JOIN rt0 ON ((((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c0))) NOTNULL) RIGHT OUTER JOIN t1 ON rt1.c1;
SELECT * FROM rt1 CROSS JOIN rt0 ON ((((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c0))) NOTNULL) RIGHT OUTER JOIN t1 ON rt1.c1 WHERE (((((x'') IS FALSE)) IS FALSE)) UNION ALL SELECT * FROM rt1 CROSS JOIN rt0 ON ((((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c0))) NOTNULL) RIGHT OUTER JOIN t1 ON rt1.c1 WHERE ((NOT (((((x'') IS FALSE)) IS FALSE)))) UNION ALL SELECT * FROM rt1 CROSS JOIN rt0 ON ((((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c0))) NOTNULL) RIGHT OUTER JOIN t1 ON rt1.c1 WHERE (((((((x'') IS FALSE)) IS FALSE)) ISNULL));
SELECT * FROM rt1 CROSS JOIN rt0 ON ((((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c0))) NOTNULL) RIGHT OUTER JOIN t1 ON rt1.c1;
SELECT DISTINCT t0.c2 FROM rt0 INNER JOIN t1 ON NULL LEFT OUTER JOIN t0 ON ((rt0.c1) IS FALSE) COLLATE BINARY CROSS JOIN rt1 ON ((UPPER(NULL)) NOT BETWEEN (((rt0.c2) IS TRUE)) AND (rt0.c1 COLLATE BINARY));
SELECT DISTINCT t0.c2 FROM rt0 INNER JOIN t1 ON NULL LEFT OUTER JOIN t0 ON ((rt0.c1) IS FALSE) COLLATE BINARY CROSS JOIN rt1 ON ((UPPER(NULL)) NOT BETWEEN (((rt0.c2) IS TRUE)) AND (rt0.c1 COLLATE BINARY)) WHERE (CAST(LOWER(DISTINCT rt1.c2) AS TEXT)) UNION SELECT DISTINCT t0.c2 FROM rt0 INNER JOIN t1 ON NULL LEFT OUTER JOIN t0 ON ((rt0.c1) IS FALSE) COLLATE BINARY CROSS JOIN rt1 ON ((UPPER(NULL)) NOT BETWEEN (((rt0.c2) IS TRUE)) AND (rt0.c1 COLLATE BINARY)) WHERE ((NOT (CAST(LOWER(DISTINCT rt1.c2) AS TEXT)))) UNION SELECT DISTINCT t0.c2 FROM rt0 INNER JOIN t1 ON NULL LEFT OUTER JOIN t0 ON ((rt0.c1) IS FALSE) COLLATE BINARY CROSS JOIN rt1 ON ((UPPER(NULL)) NOT BETWEEN (((rt0.c2) IS TRUE)) AND (rt0.c1 COLLATE BINARY)) WHERE (((CAST(LOWER(DISTINCT rt1.c2) AS TEXT)) ISNULL));
SELECT DISTINCT t0.c2 FROM rt0 INNER JOIN t1 ON NULL LEFT OUTER JOIN t0 ON ((rt0.c1) IS FALSE) COLLATE BINARY CROSS JOIN rt1 ON ((UPPER(NULL)) NOT BETWEEN (((rt0.c2) IS TRUE)) AND (rt0.c1 COLLATE BINARY));
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((v0.c0 COLLATE BINARY)AND((v0.c0 IN (v0.c0, v0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((v0.c0 COLLATE BINARY)AND((v0.c0 IN (v0.c0, v0.c0))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0 COLLATE BINARY)AND((v0.c0 IN (v0.c0, v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT t0.c0, rt1.c2, rt1.c0, t1.c0, t0.c1, rt1.c3, t0.c2, rt1.c1 FROM rt1 FULL OUTER JOIN t0 ON CAST((('쯵*67}j3') NOT BETWEEN (NULL) AND (t0.c1)) AS INTEGER) INNER JOIN t1 ON ((LTRIM(t0.c0))OR(((t1.c0)||(t0.c2)))) GROUP BY t0.c0, rt1.c2, rt1.c0, t1.c0, t0.c1, rt1.c3, t0.c2, rt1.c1;
SELECT t0.c0, rt1.c2, rt1.c0, t1.c0, t0.c1, rt1.c3, t0.c2, rt1.c1 FROM rt1 FULL OUTER JOIN t0 ON CAST((('쯵*67}j3') NOT BETWEEN (NULL) AND (t0.c1)) AS INTEGER) INNER JOIN t1 ON ((LTRIM(t0.c0))OR(((t1.c0)||(t0.c2)))) GROUP BY t0.c0, rt1.c2, rt1.c0, t1.c0, t0.c1, rt1.c3, t0.c2, rt1.c1 HAVING AVG(((t1.c0)>=(MAX(rt1.c0)))) UNION ALL SELECT t0.c0, rt1.c2, rt1.c0, t1.c0, t0.c1, rt1.c3, t0.c2, rt1.c1 FROM rt1 FULL OUTER JOIN t0 ON CAST((('쯵*67}j3') NOT BETWEEN (NULL) AND (t0.c1)) AS INTEGER) INNER JOIN t1 ON ((LTRIM(t0.c0))OR(((t1.c0)||(t0.c2)))) GROUP BY t0.c0, rt1.c2, rt1.c0, t1.c0, t0.c1, rt1.c3, t0.c2, rt1.c1 HAVING (NOT (AVG(((t1.c0)>=(MAX(rt1.c0)))))) UNION ALL SELECT ALL t0.c0, rt1.c2, rt1.c0, t1.c0, t0.c1, rt1.c3, t0.c2, rt1.c1 FROM rt1 FULL OUTER JOIN t0 ON CAST((('쯵*67}j3') NOT BETWEEN (NULL) AND (t0.c1)) AS INTEGER) INNER JOIN t1 ON ((LTRIM(t0.c0))OR(((t1.c0)||(t0.c2)))) GROUP BY t0.c0, rt1.c2, rt1.c0, t1.c0, t0.c1, rt1.c3, t0.c2, rt1.c1 HAVING ((AVG(((t1.c0)>=(MAX(rt1.c0))))) ISNULL);
SELECT t0.c2, rt1.c1, rt0.c0, rt0.c2, rt0.c4 FROM rt1, rt0, t1, v0, t0;
SELECT ALL t0.c2, rt1.c1, rt0.c0, rt0.c2, rt0.c4 FROM rt1, rt0, t1, v0, t0 WHERE (((TIME(t1.c0, rt1.c1, rt0.c2))LIKE(((((((((((((rt0.c1)AND(rt0.c0)))AND(t0.c2)))OR('-1357205383')))AND(t1.c0)))OR(rt0.c0)))OR(t1.c0))))) UNION ALL SELECT t0.c2, rt1.c1, rt0.c0, rt0.c2, rt0.c4 FROM rt1, rt0, t1, v0, t0 WHERE ((NOT (((TIME(t1.c0, rt1.c1, rt0.c2))LIKE(((((((((((((rt0.c1)AND(rt0.c0)))AND(t0.c2)))OR('-1357205383')))AND(t1.c0)))OR(rt0.c0)))OR(t1.c0))))))) UNION ALL SELECT ALL t0.c2, rt1.c1, rt0.c0, rt0.c2, rt0.c4 FROM rt1, rt0, t1, v0, t0 WHERE (((((TIME(t1.c0, rt1.c1, rt0.c2))LIKE(((((((((((((rt0.c1)AND(rt0.c0)))AND(t0.c2)))OR('-1357205383')))AND(t1.c0)))OR(rt0.c0)))OR(t1.c0))))) ISNULL));
SELECT t0.c2, rt1.c1, rt0.c0, rt0.c2, rt0.c4 FROM rt1, rt0, t1, v0, t0;
SELECT DISTINCT rt1.c1, rt1.c3, t0.c0 FROM t0, rt1, rt0;
SELECT DISTINCT rt1.c1, rt1.c3, t0.c0 FROM t0, rt1, rt0 WHERE (((CHANGES())=('845128179'))) UNION SELECT DISTINCT rt1.c1, rt1.c3, t0.c0 FROM t0, rt1, rt0 WHERE ((NOT (((CHANGES())==('845128179'))))) UNION SELECT DISTINCT rt1.c1, rt1.c3, t0.c0 FROM t0, rt1, rt0 WHERE (((((CHANGES())==('845128179'))) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c3, t0.c0 FROM t0, rt1, rt0;
SELECT ALL rt0.c3, rt0.c1, rt1.c3, t0.c0, v0.c0, rt1.c0, rt0.c2, rt1.c1, rt0.c4, rt1.c2 FROM rt1 LEFT OUTER JOIN rt0 ON (((((rt0.c0 IN (t0.c0)))OR(CASE t1.c0  WHEN rt0.c1 THEN 0.9583522688575646 ELSE t0.c0 END)))OR((rt1.c1 IN (rt1.c1)))) INNER JOIN v0 ON 0.9243904083458744 INNER JOIN t0 ON (((((('') NOT BETWEEN (rt1.c3) AND (rt1.c2)))OR(((t0.c0) NOT NULL))))AND(((((((((((((rt1.c3)AND(rt1.c1)))AND(t0.c0)))OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c4)))OR(NULL)))) LEFT OUTER JOIN t1 ON (((((((t0.c1))!=((rt0.c0))))AND((((t0.c0, rt0.c2, rt0.c4)) BETWEEN ((rt0.c1, t0.c1, t0.c1)) AND ((rt0.c3, rt1.c1, rt0.c3))))))AND((rt0.c3 IN (rt1.c1)))) GROUP BY rt0.c3, rt0.c1, rt1.c3, t0.c0, v0.c0, rt1.c0, rt0.c2, rt1.c1, rt0.c4, rt1.c2;
SELECT ALL rt0.c1, rt0.c0, t0.c2 FROM rt0 INNER JOIN t0 ON (((((((((t0.c2)AND(rt0.c0)))OR(0X3c62d107)))AND(rt0.c4)))OR(rt0.c0)) IN ()) GROUP BY rt0.c1, rt0.c0, t0.c2;
SELECT ALL rt0.c1, rt0.c0, t0.c2 FROM rt0 INNER JOIN t0 ON (((((((((t0.c2)AND(rt0.c0)))OR(0X3c62d107)))AND(rt0.c4)))OR(rt0.c0)) IN ()) GROUP BY rt0.c1, rt0.c0, t0.c2 HAVING MIN((((SUM(rt0.c1)))<>((t0.c1)))) UNION ALL SELECT rt0.c1, rt0.c0, t0.c2 FROM rt0 INNER JOIN t0 ON (((((((((t0.c2)AND(rt0.c0)))OR(0X3c62d107)))AND(rt0.c4)))OR(rt0.c0)) IN ()) GROUP BY rt0.c1, rt0.c0, t0.c2 HAVING (NOT (MIN((((SUM(rt0.c1)))!=((t0.c1)))))) UNION ALL SELECT rt0.c1, rt0.c0, t0.c2 FROM rt0 INNER JOIN t0 ON (((((((((t0.c2)AND(rt0.c0)))OR(0X3c62d107)))AND(rt0.c4)))OR(rt0.c0)) IN ()) GROUP BY rt0.c1, rt0.c0, t0.c2 HAVING ((MIN((((SUM(rt0.c1)))!=((t0.c1))))) ISNULL);
SELECT rt0.c3, rt0.c0, rt0.c2, rt0.c4 FROM rt0, v0;
SELECT ALL rt0.c3, rt0.c0, rt0.c2, rt0.c4 FROM rt0, v0 WHERE (json_type((+ (rt0.c4)))) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c2, rt0.c4 FROM rt0, v0 WHERE ((NOT (json_type((+ (rt0.c4)))))) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c2, rt0.c4 FROM rt0, v0 WHERE (((json_type((+ (rt0.c4)))) ISNULL));
SELECT rt0.c3, rt0.c0, rt0.c2, rt0.c4 FROM rt0, v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ('865096139') UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ('865096139'))) UNION SELECT DISTINCT * FROM v0 WHERE ((('865096139') ISNULL));
SELECT DISTINCT * FROM v0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE (((t1.c0)<=(t1.c0)) COLLATE NOCASE) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT (((t1.c0)<=(t1.c0)) COLLATE NOCASE))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE (((((t1.c0)<=(t1.c0)) COLLATE NOCASE) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((COUNT(rt0.c4))<(CASE WHEN AVG(AVG(rt0.c4)) THEN rt0.c1 END)) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (((COUNT(rt0.c4))<(CASE WHEN AVG(AVG(rt0.c4)) THEN rt0.c1 END)))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((((COUNT(rt0.c4))<(CASE WHEN AVG(AVG(rt0.c4)) THEN rt0.c1 END))) ISNULL);
SELECT ALL * FROM t0, rt1;
SELECT ALL * FROM t0, rt1 WHERE (CAST(rt1.c0 AS TEXT) COLLATE NOCASE) UNION ALL SELECT * FROM t0, rt1 WHERE ((NOT (CAST(rt1.c0 AS TEXT) COLLATE NOCASE))) UNION ALL SELECT * FROM t0, rt1 WHERE (((CAST(rt1.c0 AS TEXT) COLLATE NOCASE) ISNULL));
SELECT ALL * FROM t0, rt1;
SELECT DISTINCT * FROM t0, rt1, v0, t1, rt0;
SELECT DISTINCT * FROM t0, rt1, v0, t1, rt0 WHERE ('-432444159') UNION SELECT DISTINCT * FROM t0, rt1, v0, t1, rt0 WHERE ((NOT ('-432444159'))) UNION SELECT DISTINCT * FROM t0, rt1, v0, t1, rt0 WHERE ((('-432444159') ISNULL));
SELECT DISTINCT * FROM t0, rt1, v0, t1, rt0;
SELECT rt0.c0, v0.c0, rt1.c0, rt0.c2 FROM v0, t1 LEFT OUTER JOIN rt0 ON NULL CROSS JOIN rt1 ON ((((rt0.c4 COLLATE NOCASE)OR((((rt1.c2, rt0.c3, rt0.c3))!=((rt0.c0, rt0.c3, rt0.c0))))))AND(((((((((t1.c0)AND(v0.c0)))AND(rt0.c4)))AND(rt0.c3)))OR(rt1.c1)))) GROUP BY rt0.c0, v0.c0, rt1.c0, rt0.c2;
SELECT rt0.c0, v0.c0, rt1.c0, rt0.c2 FROM v0, t1 LEFT OUTER JOIN rt0 ON NULL CROSS JOIN rt1 ON ((((rt0.c4 COLLATE NOCASE)OR((((rt1.c2, rt0.c3, rt0.c3))<>((rt0.c0, rt0.c3, rt0.c0))))))AND(((((((((t1.c0)AND(v0.c0)))AND(rt0.c4)))AND(rt0.c3)))OR(rt1.c1)))) WHERE (CAST(rt1.c0 AS NUMERIC)) GROUP BY rt0.c0, v0.c0, rt1.c0, rt0.c2 UNION SELECT ALL rt0.c0, v0.c0, rt1.c0, rt0.c2 FROM v0, t1 LEFT OUTER JOIN rt0 ON NULL CROSS JOIN rt1 ON ((((rt0.c4 COLLATE NOCASE)OR((((rt1.c2, rt0.c3, rt0.c3))<>((rt0.c0, rt0.c3, rt0.c0))))))AND(((((((((t1.c0)AND(v0.c0)))AND(rt0.c4)))AND(rt0.c3)))OR(rt1.c1)))) WHERE ((NOT (CAST(rt1.c0 AS NUMERIC)))) GROUP BY rt0.c0, v0.c0, rt1.c0, rt0.c2 UNION SELECT rt0.c0, v0.c0, rt1.c0, rt0.c2 FROM v0, t1 LEFT OUTER JOIN rt0 ON NULL CROSS JOIN rt1 ON ((((rt0.c4 COLLATE NOCASE)OR((((rt1.c2, rt0.c3, rt0.c3))<>((rt0.c0, rt0.c3, rt0.c0))))))AND(((((((((t1.c0)AND(v0.c0)))AND(rt0.c4)))AND(rt0.c3)))OR(rt1.c1)))) WHERE (((CAST(rt1.c0 AS NUMERIC)) ISNULL)) GROUP BY rt0.c0, v0.c0, rt1.c0, rt0.c2;
SELECT rt0.c0, v0.c0, rt1.c0, rt0.c2 FROM v0, t1 LEFT OUTER JOIN rt0 ON NULL CROSS JOIN rt1 ON ((((rt0.c4 COLLATE NOCASE)OR((((rt1.c2, rt0.c3, rt0.c3))!=((rt0.c0, rt0.c3, rt0.c0))))))AND(((((((((t1.c0)AND(v0.c0)))AND(rt0.c4)))AND(rt0.c3)))OR(rt1.c1)))) GROUP BY rt0.c0, v0.c0, rt1.c0, rt0.c2;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (- (t1.c0)) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT ((- (t1.c0)))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (((- (t1.c0))) ISNULL);
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (- (t1.c0)) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT ((- (t1.c0)))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (((- (t1.c0))) ISNULL);
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((rt0.c3)%(rt0.c4)) COLLATE NOCASE) UNION ALL SELECT ALL * FROM rt0 NOT INDEXED WHERE ((NOT (((rt0.c3)%(rt0.c4)) COLLATE NOCASE))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((rt0.c3)%(rt0.c4)) COLLATE NOCASE) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT t1.c0, t0.c1 FROM t1, v0, t0;
SELECT DISTINCT t1.c0, t0.c1 FROM t1, v0, t0 WHERE (CASE WHEN (~ (t0.c1)) THEN json(v0.c0) ELSE ((t0.c0) IS TRUE) END) UNION SELECT DISTINCT t1.c0, t0.c1 FROM t1, v0, t0 WHERE ((NOT (CASE WHEN (~ (t0.c1)) THEN json(v0.c0) ELSE ((t0.c0) IS TRUE) END))) UNION SELECT DISTINCT t1.c0, t0.c1 FROM t1, v0, t0 WHERE (((CASE WHEN (~ (t0.c1)) THEN json(v0.c0) ELSE ((t0.c0) IS TRUE) END) ISNULL));
SELECT DISTINCT t1.c0, t0.c1 FROM t1, v0, t0;
SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM rt1 WHERE (((+ (rt1.c1)) IN ())) GROUP BY rt1.c0 UNION SELECT rt1.c0 FROM rt1 WHERE ((NOT (((+ (rt1.c1)) IN ())))) GROUP BY rt1.c0 UNION SELECT ALL rt1.c0 FROM rt1 WHERE (((((+ (rt1.c1)) IN ())) ISNULL)) GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT ALL rt0.c4, rt0.c2, t0.c0 FROM rt0, t0 GROUP BY rt0.c4, rt0.c2, t0.c0;
SELECT rt0.c4, rt0.c2, t0.c0 FROM rt0, t0 GROUP BY rt0.c4, rt0.c2, t0.c0 HAVING ((((((((CAST(rt0.c3 AS TEXT))AND(((rt0.c2)LIKE(MIN(rt0.c2))))))OR(MIN(MAX(rt0.c2)))))AND(GROUP_CONCAT(COUNT(AVG(TOTAL(AVG(MAX(rt0.c1)))))))))AND(COUNT(rt0.c1))) UNION ALL SELECT ALL rt0.c4, rt0.c2, t0.c0 FROM rt0, t0 GROUP BY rt0.c4, rt0.c2, t0.c0 HAVING (NOT (((((((((CAST(rt0.c3 AS TEXT))AND(((rt0.c2)LIKE(MIN(rt0.c2))))))OR(MIN(MAX(rt0.c2)))))AND(GROUP_CONCAT(COUNT(AVG(TOTAL(AVG(MAX(rt0.c1)))))))))AND(COUNT(rt0.c1))))) UNION ALL SELECT ALL rt0.c4, rt0.c2, t0.c0 FROM rt0, t0 GROUP BY rt0.c4, rt0.c2, t0.c0 HAVING ((((((((((CAST(rt0.c3 AS TEXT))AND(((rt0.c2)LIKE(MIN(rt0.c2))))))OR(MIN(MAX(rt0.c2)))))AND(GROUP_CONCAT(COUNT(AVG(TOTAL(AVG(MAX(rt0.c1)))))))))AND(COUNT(rt0.c1)))) ISNULL);
SELECT ALL * FROM rt0, v0;
SELECT ALL * FROM rt0, v0 WHERE (DATETIME(((NULL)LIKE(rt0.c2)), (((rt0.c0, v0.c0, rt0.c0))<=((v0.c0, v0.c0, rt0.c2))), ((rt0.c1)||(rt0.c1)))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((NOT (DATETIME(((NULL)LIKE(rt0.c2)), (((rt0.c0, v0.c0, rt0.c0))<=((v0.c0, v0.c0, rt0.c2))), ((rt0.c1)||(rt0.c1)))))) UNION ALL SELECT * FROM rt0, v0 WHERE (((DATETIME(((NULL)LIKE(rt0.c2)), (((rt0.c0, v0.c0, rt0.c0))<=((v0.c0, v0.c0, rt0.c2))), ((rt0.c1)||(rt0.c1)))) ISNULL));
SELECT ALL * FROM rt0, v0;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE ((((+ (t1.c0)))<>((+ (t1.c0))))) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT ((((+ (t1.c0)))!=((+ (t1.c0))))))) UNION SELECT DISTINCT * FROM t1 WHERE ((((((+ (t1.c0)))!=((+ (t1.c0))))) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT rt0.c3, rt0.c1, rt0.c2, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2, rt0.c0, rt0.c4;
SELECT ALL rt0.c3, rt0.c1, rt0.c2, rt0.c0, rt0.c4 FROM rt0 WHERE (((((((rt0.c0)AND('-1998870419')))OR(rt0.c2)))==((+ (rt0.c3))))) GROUP BY rt0.c3, rt0.c1, rt0.c2, rt0.c0, rt0.c4 UNION SELECT ALL rt0.c3, rt0.c1, rt0.c2, rt0.c0, rt0.c4 FROM rt0 WHERE ((NOT (((((((rt0.c0)AND('-1998870419')))OR(rt0.c2)))==((+ (rt0.c3))))))) GROUP BY rt0.c3, rt0.c1, rt0.c2, rt0.c0, rt0.c4 UNION SELECT ALL rt0.c3, rt0.c1, rt0.c2, rt0.c0, rt0.c4 FROM rt0 WHERE (((((((((rt0.c0)AND('-1998870419')))OR(rt0.c2)))==((+ (rt0.c3))))) ISNULL)) GROUP BY rt0.c3, rt0.c1, rt0.c2, rt0.c0, rt0.c4;
SELECT rt0.c3, rt0.c1, rt0.c2, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2, rt0.c0, rt0.c4;
SELECT t0.c1, t0.c2, t0.c0 FROM t0 GROUP BY t0.c1, t0.c2, t0.c0;
SELECT t0.c1, t0.c2, t0.c0 FROM t0 GROUP BY t0.c1, t0.c2, t0.c0 HAVING ((((t0.c1)IS NOT(MIN(t0.c1)))) BETWEEN (COUNT(t0.c2)) AND ((((COUNT(*), t0.c1, t0.c1, COUNT(t0.c2), t0.c1))<((GROUP_CONCAT(t0.c2), t0.c1, MIN(MIN(t0.c2)), COUNT(*), COUNT(t0.c2)))))) UNION ALL SELECT t0.c1, t0.c2, t0.c0 FROM t0 GROUP BY t0.c1, t0.c2, t0.c0 HAVING (NOT (((((t0.c1)IS NOT(MIN(t0.c1)))) BETWEEN (COUNT(t0.c2)) AND ((((COUNT(*), t0.c1, t0.c1, COUNT(t0.c2), t0.c1))<((GROUP_CONCAT(t0.c2), t0.c1, MIN(MIN(t0.c2)), COUNT(*), COUNT(t0.c2)))))))) UNION ALL SELECT t0.c1, t0.c2, t0.c0 FROM t0 GROUP BY t0.c1, t0.c2, t0.c0 HAVING ((((((t0.c1)IS NOT(MIN(t0.c1)))) BETWEEN (COUNT(t0.c2)) AND ((((COUNT(*), t0.c1, t0.c1, COUNT(t0.c2), t0.c1))<((GROUP_CONCAT(t0.c2), t0.c1, MIN(MIN(t0.c2)), COUNT(*), COUNT(t0.c2))))))) ISNULL);
SELECT * FROM t1, v0;
SELECT ALL * FROM t1, v0 WHERE (((((v0.c0) IS TRUE))AND(((((v0.c0)OR(v0.c0)))OR(v0.c0))))) UNION ALL SELECT * FROM t1, v0 WHERE ((NOT (((((v0.c0) IS TRUE))AND(((((v0.c0)OR(v0.c0)))OR(v0.c0))))))) UNION ALL SELECT ALL * FROM t1, v0 WHERE (((((((v0.c0) IS TRUE))AND(((((v0.c0)OR(v0.c0)))OR(v0.c0))))) ISNULL));
SELECT * FROM t1, v0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (CAST((((rt1.c1)) BETWEEN ((rt1.c2)) AND ((rt1.c2))) AS TEXT)) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (CAST((((rt1.c1)) BETWEEN ((rt1.c2)) AND ((rt1.c2))) AS TEXT)))) UNION SELECT DISTINCT * FROM rt1 WHERE (((CAST((((rt1.c1)) BETWEEN ((rt1.c2)) AND ((rt1.c2))) AS TEXT)) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (UNICODE(((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (UNICODE(((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((UNICODE(((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt1.c0, rt1.c3 FROM rt1 GROUP BY rt1.c0, rt1.c3;
SELECT ALL rt1.c0, rt1.c3 FROM rt1 GROUP BY rt1.c0, rt1.c3 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c0, rt1.c3 FROM rt1 GROUP BY rt1.c0, rt1.c3 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c0, rt1.c3 FROM rt1 GROUP BY rt1.c0, rt1.c3 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c0, rt1.c3 FROM rt1 GROUP BY rt1.c0, rt1.c3;
SELECT ALL rt1.c0, rt1.c3 FROM rt1 GROUP BY rt1.c0, rt1.c3 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c0, rt1.c3 FROM rt1 GROUP BY rt1.c0, rt1.c3 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c0, rt1.c3 FROM rt1 GROUP BY rt1.c0, rt1.c3 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c0, rt1.c3 FROM rt1 GROUP BY rt1.c0, rt1.c3;
SELECT ALL * FROM t0;
SELECT ALL * FROM t0 WHERE (((((((((((t0.c1)AND(t0.c0)))AND(t0.c2)))AND(t0.c0)))AND(t0.c0)))>('1442305262'))) UNION ALL SELECT * FROM t0 WHERE ((NOT (((((((((((t0.c1)AND(t0.c0)))AND(t0.c2)))AND(t0.c0)))AND(t0.c0)))>('1442305262'))))) UNION ALL SELECT ALL * FROM t0 WHERE (((((((((((((t0.c1)AND(t0.c0)))AND(t0.c2)))AND(t0.c0)))AND(t0.c0)))>('1442305262'))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT rt0.c2, rt0.c4 FROM t1, rt0;
SELECT DISTINCT rt0.c2, rt0.c4 FROM t1, rt0 WHERE (rt0.c4) UNION SELECT DISTINCT rt0.c2, rt0.c4 FROM t1, rt0 WHERE ((NOT (rt0.c4))) UNION SELECT DISTINCT rt0.c2, rt0.c4 FROM t1, rt0 WHERE (((rt0.c4) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c4 FROM t1, rt0;
SELECT rt1.c1, t0.c0, t1.c0, rt1.c2 FROM rt0, t0, v0, t1, rt1 INDEXED BY i35 GROUP BY rt1.c1, t0.c0, t1.c0, rt1.c2;
SELECT v0.c0 FROM v0, t1 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, t1 GROUP BY v0.c0 HAVING UPPER(DISTINCT v0.c0) UNION ALL SELECT ALL v0.c0 FROM v0, t1 GROUP BY v0.c0 HAVING (NOT (UPPER(DISTINCT v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0, t1 GROUP BY v0.c0 HAVING ((UPPER(DISTINCT v0.c0)) ISNULL);
SELECT v0.c0 FROM v0, t1 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, t1 GROUP BY v0.c0 HAVING UPPER(DISTINCT v0.c0) UNION ALL SELECT ALL v0.c0 FROM v0, t1 GROUP BY v0.c0 HAVING (NOT (UPPER(DISTINCT v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0, t1 GROUP BY v0.c0 HAVING ((UPPER(DISTINCT v0.c0)) ISNULL);
SELECT v0.c0 FROM v0, t1 GROUP BY v0.c0;
SELECT * FROM t1, rt0 CROSS JOIN v0 ON ((LIKELY(rt0.c4))GLOB(((t0.c1)<>(t0.c2)))) RIGHT OUTER JOIN t0 ON '' FULL OUTER JOIN rt1 ON CASE ((((rt1.c3)OR(t1.c0)))AND(rt0.c1))  WHEN ((rt0.c1)LIKE(rt0.c2)) THEN ((x'') NOT NULL) ELSE rt0.c1 COLLATE RTRIM END;
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN rt1 ON (NOT (t0.c1 COLLATE NOCASE)) FULL OUTER JOIN t0 ON ((((rt0.c4) NOT BETWEEN (rt1.c3) AND (rt0.c3)))IS NOT(((rt0.c0)GLOB(rt0.c0))));
SELECT ALL rt0.c0, rt0.c4, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c4, rt0.c1, rt0.c3;
SELECT ALL rt0.c0, rt0.c4, rt0.c1, rt0.c3 FROM rt0 WHERE (CAST(((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c1)) AS REAL)) GROUP BY rt0.c0, rt0.c4, rt0.c1, rt0.c3 UNION SELECT ALL rt0.c0, rt0.c4, rt0.c1, rt0.c3 FROM rt0 WHERE ((NOT (CAST(((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c1)) AS REAL)))) GROUP BY rt0.c0, rt0.c4, rt0.c1, rt0.c3 UNION SELECT rt0.c0, rt0.c4, rt0.c1, rt0.c3 FROM rt0 WHERE (((CAST(((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c1)) AS REAL)) ISNULL)) GROUP BY rt0.c0, rt0.c4, rt0.c1, rt0.c3;
SELECT ALL rt0.c0, rt0.c4, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c4, rt0.c1, rt0.c3;
SELECT rt1.c0, rt0.c3, t1.c0, rt1.c3, rt1.c2, rt1.c1, rt0.c2, t0.c0, rt0.c0, t0.c2, rt0.c1, t0.c1, rt0.c4 FROM t0 CROSS JOIN t1 ON ((((((((((((((((t0.c0)OR(rt0.c3)))OR(t0.c0)))OR(rt0.c3)))AND(rt1.c2)))AND(CASE WHEN rt1.c2 THEN t0.c2 ELSE '' END)))AND(GLOB(rt0.c1, rt0.c4))))OR((('떝k')LIKE(t0.c2)))))AND((((rt1.c3))<=((rt0.c4))))) INNER JOIN rt1 ON (+ ((t0.c2 IN ()))) LEFT OUTER JOIN rt0 ON ((0.9466240587295469)IS NOT(((rt1.c0) IS FALSE))) GROUP BY rt1.c0, rt0.c3, t1.c0, rt1.c3, rt1.c2, rt1.c1, rt0.c2, t0.c0, rt0.c0, t0.c2, rt0.c1, t0.c1, rt0.c4;
SELECT ALL rt1.c0, rt0.c3, t1.c0, rt1.c3, rt1.c2, rt1.c1, rt0.c2, t0.c0, rt0.c0, t0.c2, rt0.c1, t0.c1, rt0.c4 FROM t0 CROSS JOIN t1 ON ((((((((((((((((t0.c0)OR(rt0.c3)))OR(t0.c0)))OR(rt0.c3)))AND(rt1.c2)))AND(CASE WHEN rt1.c2 THEN t0.c2 ELSE '' END)))AND(GLOB(rt0.c1, rt0.c4))))OR((('떝k')LIKE(t0.c2)))))AND((((rt1.c3))<=((rt0.c4))))) INNER JOIN rt1 ON (+ ((t0.c2 IN ()))) LEFT OUTER JOIN rt0 ON ((0.9466240587295469)IS NOT(((rt1.c0) IS FALSE))) GROUP BY rt1.c0, rt0.c3, t1.c0, rt1.c3, rt1.c2, rt1.c1, rt0.c2, t0.c0, rt0.c0, t0.c2, rt0.c1, t0.c1, rt0.c4 HAVING TOTAL((TOTAL(rt0.c4) IN (rt0.c1))) UNION ALL SELECT ALL rt1.c0, rt0.c3, t1.c0, rt1.c3, rt1.c2, rt1.c1, rt0.c2, t0.c0, rt0.c0, t0.c2, rt0.c1, t0.c1, rt0.c4 FROM t0 CROSS JOIN t1 ON ((((((((((((((((t0.c0)OR(rt0.c3)))OR(t0.c0)))OR(rt0.c3)))AND(rt1.c2)))AND(CASE WHEN rt1.c2 THEN t0.c2 ELSE '' END)))AND(GLOB(rt0.c1, rt0.c4))))OR((('떝k')LIKE(t0.c2)))))AND((((rt1.c3))<=((rt0.c4))))) INNER JOIN rt1 ON (+ ((t0.c2 IN ()))) LEFT OUTER JOIN rt0 ON ((0.9466240587295469)IS NOT(((rt1.c0) IS FALSE))) GROUP BY rt1.c0, rt0.c3, t1.c0, rt1.c3, rt1.c2, rt1.c1, rt0.c2, t0.c0, rt0.c0, t0.c2, rt0.c1, t0.c1, rt0.c4 HAVING (NOT (TOTAL((TOTAL(rt0.c4) IN (rt0.c1))))) UNION ALL SELECT ALL rt1.c0, rt0.c3, t1.c0, rt1.c3, rt1.c2, rt1.c1, rt0.c2, t0.c0, rt0.c0, t0.c2, rt0.c1, t0.c1, rt0.c4 FROM t0 CROSS JOIN t1 ON ((((((((((((((((t0.c0)OR(rt0.c3)))OR(t0.c0)))OR(rt0.c3)))AND(rt1.c2)))AND(CASE WHEN rt1.c2 THEN t0.c2 ELSE '' END)))AND(GLOB(rt0.c1, rt0.c4))))OR((('떝k')LIKE(t0.c2)))))AND((((rt1.c3))<=((rt0.c4))))) INNER JOIN rt1 ON (+ ((t0.c2 IN ()))) LEFT OUTER JOIN rt0 ON ((0.9466240587295469)IS NOT(((rt1.c0) IS FALSE))) GROUP BY rt1.c0, rt0.c3, t1.c0, rt1.c3, rt1.c2, rt1.c1, rt0.c2, t0.c0, rt0.c0, t0.c2, rt0.c1, t0.c1, rt0.c4 HAVING ((TOTAL((TOTAL(rt0.c4) IN (rt0.c1)))) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (((UPPER(DISTINCT v0.c0))/(((v0.c0)AND(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((UPPER(DISTINCT v0.c0))/(((v0.c0)AND(v0.c0))))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((((UPPER(DISTINCT v0.c0))/(((v0.c0)AND(v0.c0))))) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT rt0.c2, t0.c0, t1.c0, rt1.c3, v0.c0, rt1.c1, rt0.c3, t0.c1, rt0.c0, rt0.c4, rt1.c0, rt1.c2 FROM v0, t0 LEFT OUTER JOIN rt1 ON '204081735' RIGHT OUTER JOIN t1 ON 'So{|''.a ' FULL OUTER JOIN rt0 ON (((((t0.c1)IS NOT(rt0.c3))))>((((NULL) NOT BETWEEN (0X380594e2) AND (t0.c1)))));
SELECT DISTINCT rt0.c2, t0.c0, t1.c0, rt1.c3, v0.c0, rt1.c1, rt0.c3, t0.c1, rt0.c0, rt0.c4, rt1.c0, rt1.c2 FROM v0, t0 LEFT OUTER JOIN rt1 ON '204081735' RIGHT OUTER JOIN t1 ON 'So{|''.a ' FULL OUTER JOIN rt0 ON (((((t0.c1)IS NOT(rt0.c3))))>((((NULL) NOT BETWEEN (0X380594e2) AND (t0.c1))))) WHERE (((((rt0.c0)-(t1.c0))) NOT NULL)) UNION SELECT DISTINCT rt0.c2, t0.c0, t1.c0, rt1.c3, v0.c0, rt1.c1, rt0.c3, t0.c1, rt0.c0, rt0.c4, rt1.c0, rt1.c2 FROM v0, t0 LEFT OUTER JOIN rt1 ON '204081735' RIGHT OUTER JOIN t1 ON 'So{|''.a ' FULL OUTER JOIN rt0 ON (((((t0.c1)IS NOT(rt0.c3))))>((((NULL) NOT BETWEEN (0X380594e2) AND (t0.c1))))) WHERE ((NOT (((((rt0.c0)-(t1.c0))) NOT NULL)))) UNION SELECT DISTINCT rt0.c2, t0.c0, t1.c0, rt1.c3, v0.c0, rt1.c1, rt0.c3, t0.c1, rt0.c0, rt0.c4, rt1.c0, rt1.c2 FROM v0, t0 LEFT OUTER JOIN rt1 ON '204081735' RIGHT OUTER JOIN t1 ON 'So{|''.a ' FULL OUTER JOIN rt0 ON (((((t0.c1)IS NOT(rt0.c3))))>((((NULL) NOT BETWEEN (0X380594e2) AND (t0.c1))))) WHERE (((((((rt0.c0)-(t1.c0))) NOT NULL)) ISNULL));
SELECT DISTINCT rt0.c2, t0.c0, t1.c0, rt1.c3, v0.c0, rt1.c1, rt0.c3, t0.c1, rt0.c0, rt0.c4, rt1.c0, rt1.c2 FROM v0, t0 LEFT OUTER JOIN rt1 ON '204081735' RIGHT OUTER JOIN t1 ON 'So{|''.a ' FULL OUTER JOIN rt0 ON (((((t0.c1)IS NOT(rt0.c3))))>((((NULL) NOT BETWEEN (0X380594e2) AND (t0.c1)))));
SELECT rt0.c3, rt0.c1 FROM rt0, v0, rt1 GROUP BY rt0.c3, rt0.c1;
SELECT ALL rt0.c3, rt0.c1 FROM rt0, v0, rt1 WHERE (((((((rt1.c1)) BETWEEN ((rt1.c3)) AND ((NULL))), ((((rt0.c2)OR('-658822584')))AND(rt0.c3)), CAST(NULL AS REAL)))>((UNICODE(rt0.c0), (~ (rt1.c1)), rt0.c3 COLLATE NOCASE)))) GROUP BY rt0.c3, rt0.c1 UNION SELECT rt0.c3, rt0.c1 FROM rt0, v0, rt1 WHERE ((NOT (((((((rt1.c1)) BETWEEN ((rt1.c3)) AND ((NULL))), ((((rt0.c2)OR('-658822584')))AND(rt0.c3)), CAST(NULL AS REAL)))>((UNICODE(rt0.c0), (~ (rt1.c1)), rt0.c3 COLLATE NOCASE)))))) GROUP BY rt0.c3, rt0.c1 UNION SELECT rt0.c3, rt0.c1 FROM rt0, v0, rt1 WHERE (((((((((rt1.c1)) BETWEEN ((rt1.c3)) AND ((NULL))), ((((rt0.c2)OR('-658822584')))AND(rt0.c3)), CAST(NULL AS REAL)))>((UNICODE(rt0.c0), (~ (rt1.c1)), rt0.c3 COLLATE NOCASE)))) ISNULL)) GROUP BY rt0.c3, rt0.c1;
SELECT rt0.c3, rt0.c1 FROM rt0, v0, rt1 GROUP BY rt0.c3, rt0.c1;
SELECT ALL rt1.c2 FROM rt1 RIGHT OUTER JOIN t0 ON ((rt1.c1) BETWEEN ((t0.c1 IN ())) AND (COALESCE(DISTINCT t0.c1, t1.c0))) RIGHT OUTER JOIN t1 ON '753912921' GROUP BY rt1.c2;
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 END) NOT NULL)) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (((CASE WHEN v0.c0 THEN v0.c0 END) NOT NULL)))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((((CASE WHEN v0.c0 THEN v0.c0 END) NOT NULL)) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT t0.c1 FROM rt1, v0, rt0, t1, t0;
SELECT DISTINCT t0.c1 FROM rt1, v0, rt0, t1, t0 WHERE ((((rt0.c1)>>(rt0.c4)) IN ())) UNION SELECT DISTINCT t0.c1 FROM rt1, v0, rt0, t1, t0 WHERE ((NOT ((((rt0.c1)>>(rt0.c4)) IN ())))) UNION SELECT DISTINCT t0.c1 FROM rt1, v0, rt0, t1, t0 WHERE ((((((rt0.c1)>>(rt0.c4)) IN ())) ISNULL));
SELECT DISTINCT t0.c1 FROM rt1, v0, rt0, t1, t0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END, '891773303', ((v0.c0)>(v0.c0)))) AND (((((v0.c0))=((v0.c0))), ((((((((v0.c0)OR(v0.c0)))AND(x'a615')))OR(0.62079504932408)))OR(v0.c0)), CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END, '891773303', ((v0.c0)>(v0.c0)))) AND (((((v0.c0))==((v0.c0))), ((((((((v0.c0)OR(v0.c0)))AND(x'a615')))OR(0.62079504932408)))OR(v0.c0)), CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END, '891773303', ((v0.c0)>(v0.c0)))) AND (((((v0.c0))=((v0.c0))), ((((((((v0.c0)OR(v0.c0)))AND(x'a615')))OR(0.62079504932408)))OR(v0.c0)), CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL t0.c0, rt1.c1, rt1.c0, t0.c2, rt1.c3, t0.c1, v0.c0, rt1.c2 FROM t0, v0, rt1 GROUP BY t0.c0, rt1.c1, rt1.c0, t0.c2, rt1.c3, t0.c1, v0.c0, rt1.c2;
SELECT ALL t0.c0, rt1.c1, rt1.c0, t0.c2, rt1.c3, t0.c1, v0.c0, rt1.c2 FROM t0, v0, rt1 GROUP BY t0.c0, rt1.c1, rt1.c0, t0.c2, rt1.c3, t0.c1, v0.c0, rt1.c2 HAVING (~ (CASE MIN(rt1.c0)  WHEN COUNT(SUM(AVG('j'''))) THEN v0.c0 ELSE 'h' END)) UNION ALL SELECT t0.c0, rt1.c1, rt1.c0, t0.c2, rt1.c3, t0.c1, v0.c0, rt1.c2 FROM t0, v0, rt1 GROUP BY t0.c0, rt1.c1, rt1.c0, t0.c2, rt1.c3, t0.c1, v0.c0, rt1.c2 HAVING (NOT ((~ (CASE MIN(rt1.c0)  WHEN COUNT(SUM(AVG('j'''))) THEN v0.c0 ELSE 'h' END)))) UNION ALL SELECT ALL t0.c0, rt1.c1, rt1.c0, t0.c2, rt1.c3, t0.c1, v0.c0, rt1.c2 FROM t0, v0, rt1 GROUP BY t0.c0, rt1.c1, rt1.c0, t0.c2, rt1.c3, t0.c1, v0.c0, rt1.c2 HAVING (((~ (CASE MIN(rt1.c0)  WHEN COUNT(SUM(AVG('j'''))) THEN v0.c0 ELSE 'h' END))) ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c3, rt0.c2, rt0.c4, t1.c0 FROM rt0, t1;
SELECT ALL rt0.c1, rt0.c0, rt0.c3, rt0.c2, rt0.c4, t1.c0 FROM rt0, t1 WHERE (((((rt0.c3)>>(rt0.c3))) NOT BETWEEN (CAST(rt0.c2 AS INTEGER)) AND ((- (t1.c0))))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c3, rt0.c2, rt0.c4, t1.c0 FROM rt0, t1 WHERE ((NOT (((((rt0.c3)>>(rt0.c3))) NOT BETWEEN (CAST(rt0.c2 AS INTEGER)) AND ((- (t1.c0))))))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c3, rt0.c2, rt0.c4, t1.c0 FROM rt0, t1 WHERE (((((((rt0.c3)>>(rt0.c3))) NOT BETWEEN (CAST(rt0.c2 AS INTEGER)) AND ((- (t1.c0))))) ISNULL));
SELECT rt0.c1, rt0.c0, rt0.c3, rt0.c2, rt0.c4, t1.c0 FROM rt0, t1;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt1 INNER JOIN t0 ON ((((t0.c1)AND((NOT (rt0.c2)))))OR(rt0.c1 COLLATE RTRIM)) FULL OUTER JOIN rt0 ON COALESCE(((rt1.c0) NOT BETWEEN (rt1.c0) AND (t0.c0)), (rt1.c1 IN ()), (((t0.c1))>((rt0.c2))), 0.5441216616218787) LEFT OUTER JOIN v0 ON ((~ (rt1.c0)) IN ()) CROSS JOIN t1 ON x'';
SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt1 WHERE (rt1.c2) GROUP BY rt1.c1 UNION SELECT rt1.c1 FROM rt1 WHERE ((NOT (rt1.c2))) GROUP BY rt1.c1 UNION SELECT rt1.c1 FROM rt1 WHERE (((rt1.c2) ISNULL)) GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT ALL t0.c0, rt0.c0, t1.c0, rt1.c3, rt0.c2, rt0.c4, rt1.c1, rt0.c3, rt1.c0, v0.c0, rt1.c2 FROM rt1, rt0, t1, t0, v0 GROUP BY t0.c0, rt0.c0, t1.c0, rt1.c3, rt0.c2, rt0.c4, rt1.c1, rt0.c3, rt1.c0, v0.c0, rt1.c2;
SELECT ALL t0.c0, rt0.c0, t1.c0, rt1.c3, rt0.c2, rt0.c4, rt1.c1, rt0.c3, rt1.c0, v0.c0, rt1.c2 FROM rt1, rt0, t1, t0, v0 GROUP BY t0.c0, rt0.c0, t1.c0, rt1.c3, rt0.c2, rt0.c4, rt1.c1, rt0.c3, rt1.c0, v0.c0, rt1.c2 HAVING ((TOTAL(rt0.c0))/((~ (v0.c0)))) UNION ALL SELECT t0.c0, rt0.c0, t1.c0, rt1.c3, rt0.c2, rt0.c4, rt1.c1, rt0.c3, rt1.c0, v0.c0, rt1.c2 FROM rt1, rt0, t1, t0, v0 GROUP BY t0.c0, rt0.c0, t1.c0, rt1.c3, rt0.c2, rt0.c4, rt1.c1, rt0.c3, rt1.c0, v0.c0, rt1.c2 HAVING (NOT (((TOTAL(rt0.c0))/((~ (v0.c0)))))) UNION ALL SELECT ALL t0.c0, rt0.c0, t1.c0, rt1.c3, rt0.c2, rt0.c4, rt1.c1, rt0.c3, rt1.c0, v0.c0, rt1.c2 FROM rt1, rt0, t1, t0, v0 GROUP BY t0.c0, rt0.c0, t1.c0, rt1.c3, rt0.c2, rt0.c4, rt1.c1, rt0.c3, rt1.c0, v0.c0, rt1.c2 HAVING ((((TOTAL(rt0.c0))/((~ (v0.c0))))) ISNULL);
SELECT ALL t0.c0, rt0.c0, t1.c0, rt1.c3, rt0.c2, rt0.c4, rt1.c1, rt0.c3, rt1.c0, v0.c0, rt1.c2 FROM rt1, rt0, t1, t0, v0 GROUP BY t0.c0, rt0.c0, t1.c0, rt1.c3, rt0.c2, rt0.c4, rt1.c1, rt0.c3, rt1.c0, v0.c0, rt1.c2;
SELECT ALL t0.c0, rt0.c0, t1.c0, rt1.c3, rt0.c2, rt0.c4, rt1.c1, rt0.c3, rt1.c0, v0.c0, rt1.c2 FROM rt1, rt0, t1, t0, v0 GROUP BY t0.c0, rt0.c0, t1.c0, rt1.c3, rt0.c2, rt0.c4, rt1.c1, rt0.c3, rt1.c0, v0.c0, rt1.c2 HAVING ((TOTAL(rt0.c0))/((~ (v0.c0)))) UNION ALL SELECT t0.c0, rt0.c0, t1.c0, rt1.c3, rt0.c2, rt0.c4, rt1.c1, rt0.c3, rt1.c0, v0.c0, rt1.c2 FROM rt1, rt0, t1, t0, v0 GROUP BY t0.c0, rt0.c0, t1.c0, rt1.c3, rt0.c2, rt0.c4, rt1.c1, rt0.c3, rt1.c0, v0.c0, rt1.c2 HAVING (NOT (((TOTAL(rt0.c0))/((~ (v0.c0)))))) UNION ALL SELECT ALL t0.c0, rt0.c0, t1.c0, rt1.c3, rt0.c2, rt0.c4, rt1.c1, rt0.c3, rt1.c0, v0.c0, rt1.c2 FROM rt1, rt0, t1, t0, v0 GROUP BY t0.c0, rt0.c0, t1.c0, rt1.c3, rt0.c2, rt0.c4, rt1.c1, rt0.c3, rt1.c0, v0.c0, rt1.c2 HAVING ((((TOTAL(rt0.c0))/((~ (v0.c0))))) ISNULL);
SELECT ALL t0.c0, rt0.c0, t1.c0, rt1.c3, rt0.c2, rt0.c4, rt1.c1, rt0.c3, rt1.c0, v0.c0, rt1.c2 FROM rt1, rt0, t1, t0, v0 GROUP BY t0.c0, rt0.c0, t1.c0, rt1.c3, rt0.c2, rt0.c4, rt1.c1, rt0.c3, rt1.c0, v0.c0, rt1.c2;
SELECT ALL * FROM rt0, t0, rt1, v0, t1;
SELECT * FROM rt0, t0, rt1, v0, t1 WHERE (CASE LIKELY(rt0.c1)  WHEN ((((((((t0.c0)OR(rt0.c1)))OR(rt0.c3)))OR(rt1.c0)))OR('0.46822376487581885')) THEN (- (rt0.c2)) WHEN (NOT (rt0.c3)) THEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c0))) WHEN ((((t0.c2)OR(t0.c1)))OR(t0.c0)) THEN TRIM(t0.c1) WHEN t0.c2 COLLATE BINARY THEN (('') IS FALSE) WHEN (NOT (t1.c0)) THEN COALESCE(rt1.c2, rt0.c0) END) UNION ALL SELECT ALL * FROM rt0, t0, rt1, v0, t1 WHERE ((NOT (CASE LIKELY(rt0.c1)  WHEN ((((((((t0.c0)OR(rt0.c1)))OR(rt0.c3)))OR(rt1.c0)))OR('0.46822376487581885')) THEN (- (rt0.c2)) WHEN (NOT (rt0.c3)) THEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c0))) WHEN ((((t0.c2)OR(t0.c1)))OR(t0.c0)) THEN TRIM(t0.c1) WHEN t0.c2 COLLATE BINARY THEN (('') IS FALSE) WHEN (NOT (t1.c0)) THEN COALESCE(rt1.c2, rt0.c0) END))) UNION ALL SELECT ALL * FROM rt0, t0, rt1, v0, t1 WHERE (((CASE LIKELY(rt0.c1)  WHEN ((((((((t0.c0)OR(rt0.c1)))OR(rt0.c3)))OR(rt1.c0)))OR('0.46822376487581885')) THEN (- (rt0.c2)) WHEN (NOT (rt0.c3)) THEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c0))) WHEN ((((t0.c2)OR(t0.c1)))OR(t0.c0)) THEN TRIM(t0.c1) WHEN t0.c2 COLLATE BINARY THEN (('') IS FALSE) WHEN (NOT (t1.c0)) THEN COALESCE(rt1.c2, rt0.c0) END) ISNULL));
SELECT ALL * FROM rt0, t0, rt1, v0, t1;
SELECT DISTINCT rt0.c1, rt1.c1, t1.c0, rt0.c3 FROM rt1, rt0, t1;
SELECT DISTINCT rt0.c1, rt1.c1, t1.c0, rt0.c3 FROM rt1, rt0, t1 WHERE ((((((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt0.c2)))) IS TRUE)) UNION SELECT DISTINCT rt0.c1, rt1.c1, t1.c0, rt0.c3 FROM rt1, rt0, t1 WHERE ((NOT ((((((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt0.c2)))) IS TRUE)))) UNION SELECT DISTINCT rt0.c1, rt1.c1, t1.c0, rt0.c3 FROM rt1, rt0, t1 WHERE ((((((((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt0.c2)))) IS TRUE)) ISNULL));
SELECT DISTINCT rt0.c1, rt1.c1, t1.c0, rt0.c3 FROM rt1, rt0, t1;
SELECT ALL t0.c1 FROM t1, t0 GROUP BY t0.c1;
SELECT t0.c1 FROM t1, t0 WHERE (t1.c0) GROUP BY t0.c1 UNION SELECT t0.c1 FROM t1, t0 WHERE ((NOT (t1.c0))) GROUP BY t0.c1 UNION SELECT ALL t0.c1 FROM t1, t0 WHERE (((t1.c0) ISNULL)) GROUP BY t0.c1;
SELECT ALL t0.c1 FROM t1, t0 GROUP BY t0.c1;
SELECT ALL rt1.c2, rt0.c3, rt0.c0, rt0.c4, rt0.c1 FROM rt0, t1, rt1, v0 GROUP BY rt1.c2, rt0.c3, rt0.c0, rt0.c4, rt0.c1;
SELECT ALL rt1.c2, rt0.c3, rt0.c0, rt0.c4, rt0.c1 FROM rt0, t1, rt1, v0 GROUP BY rt1.c2, rt0.c3, rt0.c0, rt0.c4, rt0.c1 HAVING MIN(COUNT(COUNT(rt1.c2))) UNION ALL SELECT ALL rt1.c2, rt0.c3, rt0.c0, rt0.c4, rt0.c1 FROM rt0, t1, rt1, v0 GROUP BY rt1.c2, rt0.c3, rt0.c0, rt0.c4, rt0.c1 HAVING (NOT (MIN(COUNT(COUNT(rt1.c2))))) UNION ALL SELECT rt1.c2, rt0.c3, rt0.c0, rt0.c4, rt0.c1 FROM rt0, t1, rt1, v0 GROUP BY rt1.c2, rt0.c3, rt0.c0, rt0.c4, rt0.c1 HAVING ((MIN(COUNT(COUNT(rt1.c2)))) ISNULL);
SELECT ALL t1.c0 FROM t1;
SELECT t1.c0 FROM t1 WHERE (((((t1.c0, t1.c0, '-1190014527', t1.c0, t1.c0)) NOT BETWEEN ((t1.c0, t1.c0, t1.c0, t1.c0, t1.c0)) AND ((-47000396, t1.c0, t1.c0, t1.c0, x''))) IN (CAST(t1.c0 AS TEXT)))) UNION ALL SELECT ALL t1.c0 FROM t1 WHERE ((NOT (((((t1.c0, t1.c0, '-1190014527', t1.c0, t1.c0)) NOT BETWEEN ((t1.c0, t1.c0, t1.c0, t1.c0, t1.c0)) AND ((-47000396, t1.c0, t1.c0, t1.c0, x''))) IN (CAST(t1.c0 AS TEXT)))))) UNION ALL SELECT t1.c0 FROM t1 WHERE (((((((t1.c0, t1.c0, '-1190014527', t1.c0, t1.c0)) NOT BETWEEN ((t1.c0, t1.c0, t1.c0, t1.c0, t1.c0)) AND ((-47000396, t1.c0, t1.c0, t1.c0, x''))) IN (CAST(t1.c0 AS TEXT)))) ISNULL));
SELECT ALL t1.c0 FROM t1;
SELECT DISTINCT * FROM t0, rt1, v0;
SELECT DISTINCT * FROM t0, rt1, v0 WHERE (((rt1.c2) IS FALSE)) UNION SELECT DISTINCT * FROM t0, rt1, v0 WHERE ((NOT (((rt1.c2) IS FALSE)))) UNION SELECT DISTINCT * FROM t0, rt1, v0 WHERE (((((rt1.c2) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM t0, rt1, v0;
SELECT rt1.c3, rt1.c1 FROM rt1 RIGHT OUTER JOIN v0 ON CAST(CASE WHEN rt1.c2 THEN NULL WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END AS INTEGER) GROUP BY rt1.c3, rt1.c1;
SELECT ALL rt1.c3, rt1.c1 FROM rt1 NOT INDEXED RIGHT OUTER JOIN v0 ON CAST(CASE WHEN rt1.c2 THEN NULL WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END AS INTEGER) WHERE (((CAST(rt1.c3 AS BLOB))<(CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN 0xeadb994 WHEN rt1.c0 THEN rt1.c1 END))) GROUP BY rt1.c3, rt1.c1 UNION SELECT ALL rt1.c3, rt1.c1 FROM rt1 RIGHT OUTER JOIN v0 ON CAST(CASE WHEN rt1.c2 THEN NULL WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END AS INTEGER) WHERE ((NOT (((CAST(rt1.c3 AS BLOB))<(CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN 0Xeadb994 WHEN rt1.c0 THEN rt1.c1 END))))) GROUP BY rt1.c3, rt1.c1 UNION SELECT rt1.c3, rt1.c1 FROM rt1 RIGHT OUTER JOIN v0 ON CAST(CASE WHEN rt1.c2 THEN NULL WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END AS INTEGER) WHERE (((((CAST(rt1.c3 AS BLOB))<(CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN 0Xeadb994 WHEN rt1.c0 THEN rt1.c1 END))) ISNULL)) GROUP BY rt1.c3, rt1.c1;
SELECT rt1.c3, rt1.c1 FROM rt1 RIGHT OUTER JOIN v0 ON CAST(CASE WHEN rt1.c2 THEN NULL WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END AS INTEGER) GROUP BY rt1.c3, rt1.c1;
SELECT t1.c0, rt1.c0, rt1.c2, t0.c0, t0.c1 FROM t0 INDEXED BY i35, rt1, t1 GROUP BY t1.c0, rt1.c0, rt1.c2, t0.c0, t0.c1;
SELECT * FROM rt1, t0;
SELECT * FROM rt1, t0 WHERE (((CAST(t0.c0 AS INTEGER)) ISNULL)) UNION ALL SELECT ALL * FROM rt1, t0 WHERE ((NOT (((CAST(t0.c0 AS INTEGER)) ISNULL)))) UNION ALL SELECT * FROM rt1, t0 WHERE (((((CAST(t0.c0 AS INTEGER)) ISNULL)) ISNULL));
SELECT * FROM rt1, t0;
SELECT DISTINCT * FROM rt1, t0, t1, v0, rt0;
SELECT DISTINCT * FROM rt1, t0, t1, v0, rt0 WHERE ((((NULL)) BETWEEN ((CAST(rt0.c2 AS NUMERIC))) AND ((((((v0.c0)OR(rt0.c1)))AND(t1.c0)))))) UNION SELECT DISTINCT * FROM rt1, t0, t1, v0, rt0 WHERE ((NOT ((((NULL)) BETWEEN ((CAST(rt0.c2 AS NUMERIC))) AND ((((((v0.c0)OR(rt0.c1)))AND(t1.c0)))))))) UNION SELECT DISTINCT * FROM rt1, t0, t1, v0, rt0 WHERE ((((((NULL)) BETWEEN ((CAST(rt0.c2 AS NUMERIC))) AND ((((((v0.c0)OR(rt0.c1)))AND(t1.c0)))))) ISNULL));
SELECT DISTINCT * FROM rt1, t0, t1, v0, rt0;
SELECT t1.c0, rt1.c3, rt1.c0, t0.c0, v0.c0, rt0.c4, t0.c2, rt1.c1, rt0.c1, t0.c1, rt0.c2, rt0.c0 FROM rt1, t1, t0, rt0, v0 GROUP BY t1.c0, rt1.c3, rt1.c0, t0.c0, v0.c0, rt0.c4, t0.c2, rt1.c1, rt0.c1, t0.c1, rt0.c2, rt0.c0;
SELECT t1.c0, rt1.c3, rt1.c0, t0.c0, v0.c0, rt0.c4, t0.c2, rt1.c1, rt0.c1, t0.c1, rt0.c2, rt0.c0 FROM rt1, t1, t0, rt0, v0 WHERE (CAST((~ (rt1.c1)) AS REAL)) GROUP BY t1.c0, rt1.c3, rt1.c0, t0.c0, v0.c0, rt0.c4, t0.c2, rt1.c1, rt0.c1, t0.c1, rt0.c2, rt0.c0 UNION SELECT t1.c0, rt1.c3, rt1.c0, t0.c0, v0.c0, rt0.c4, t0.c2, rt1.c1, rt0.c1, t0.c1, rt0.c2, rt0.c0 FROM rt1, t1, t0, rt0, v0 WHERE ((NOT (CAST((~ (rt1.c1)) AS REAL)))) GROUP BY t1.c0, rt1.c3, rt1.c0, t0.c0, v0.c0, rt0.c4, t0.c2, rt1.c1, rt0.c1, t0.c1, rt0.c2, rt0.c0 UNION SELECT t1.c0, rt1.c3, rt1.c0, t0.c0, v0.c0, rt0.c4, t0.c2, rt1.c1, rt0.c1, t0.c1, rt0.c2, rt0.c0 FROM rt1, t1, t0, rt0, v0 WHERE (((CAST((~ (rt1.c1)) AS REAL)) ISNULL)) GROUP BY t1.c0, rt1.c3, rt1.c0, t0.c0, v0.c0, rt0.c4, t0.c2, rt1.c1, rt0.c1, t0.c1, rt0.c2, rt0.c0;
SELECT t1.c0, rt1.c3, rt1.c0, t0.c0, v0.c0, rt0.c4, t0.c2, rt1.c1, rt0.c1, t0.c1, rt0.c2, rt0.c0 FROM rt1, t1, t0, rt0, v0 GROUP BY t1.c0, rt1.c3, rt1.c0, t0.c0, v0.c0, rt0.c4, t0.c2, rt1.c1, rt0.c1, t0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c2, t0.c0, rt1.c2, v0.c0, rt0.c4, rt0.c1, t0.c2, rt1.c1, rt1.c3, rt0.c3, rt0.c0 FROM rt1, v0, rt0, t0 GROUP BY rt0.c2, t0.c0, rt1.c2, v0.c0, rt0.c4, rt0.c1, t0.c2, rt1.c1, rt1.c3, rt0.c3, rt0.c0;
SELECT ALL rt0.c2, t0.c0, rt1.c2, v0.c0, rt0.c4, rt0.c1, t0.c2, rt1.c1, rt1.c3, rt0.c3, rt0.c0 FROM rt1, v0, rt0, t0 GROUP BY rt0.c2, t0.c0, rt1.c2, v0.c0, rt0.c4, rt0.c1, t0.c2, rt1.c1, rt1.c3, rt0.c3, rt0.c0 HAVING rt1.c3 UNION ALL SELECT rt0.c2, t0.c0, rt1.c2, v0.c0, rt0.c4, rt0.c1, t0.c2, rt1.c1, rt1.c3, rt0.c3, rt0.c0 FROM rt1, v0, rt0, t0 GROUP BY rt0.c2, t0.c0, rt1.c2, v0.c0, rt0.c4, rt0.c1, t0.c2, rt1.c1, rt1.c3, rt0.c3, rt0.c0 HAVING (NOT (rt1.c3)) UNION ALL SELECT ALL rt0.c2, t0.c0, rt1.c2, v0.c0, rt0.c4, rt0.c1, t0.c2, rt1.c1, rt1.c3, rt0.c3, rt0.c0 FROM rt1, v0, rt0, t0 GROUP BY rt0.c2, t0.c0, rt1.c2, v0.c0, rt0.c4, rt0.c1, t0.c2, rt1.c1, rt1.c3, rt0.c3, rt0.c0 HAVING ((rt1.c3) ISNULL);
SELECT ALL rt0.c2, t0.c0, rt1.c2, v0.c0, rt0.c4, rt0.c1, t0.c2, rt1.c1, rt1.c3, rt0.c3, rt0.c0 FROM rt1, v0, rt0, t0 GROUP BY rt0.c2, t0.c0, rt1.c2, v0.c0, rt0.c4, rt0.c1, t0.c2, rt1.c1, rt1.c3, rt0.c3, rt0.c0;
SELECT ALL rt0.c2, t0.c0, rt1.c2, v0.c0, rt0.c4, rt0.c1, t0.c2, rt1.c1, rt1.c3, rt0.c3, rt0.c0 FROM rt1, v0, rt0, t0 GROUP BY rt0.c2, t0.c0, rt1.c2, v0.c0, rt0.c4, rt0.c1, t0.c2, rt1.c1, rt1.c3, rt0.c3, rt0.c0 HAVING rt1.c3 UNION ALL SELECT rt0.c2, t0.c0, rt1.c2, v0.c0, rt0.c4, rt0.c1, t0.c2, rt1.c1, rt1.c3, rt0.c3, rt0.c0 FROM rt1, v0, rt0, t0 GROUP BY rt0.c2, t0.c0, rt1.c2, v0.c0, rt0.c4, rt0.c1, t0.c2, rt1.c1, rt1.c3, rt0.c3, rt0.c0 HAVING (NOT (rt1.c3)) UNION ALL SELECT ALL rt0.c2, t0.c0, rt1.c2, v0.c0, rt0.c4, rt0.c1, t0.c2, rt1.c1, rt1.c3, rt0.c3, rt0.c0 FROM rt1, v0, rt0, t0 GROUP BY rt0.c2, t0.c0, rt1.c2, v0.c0, rt0.c4, rt0.c1, t0.c2, rt1.c1, rt1.c3, rt0.c3, rt0.c0 HAVING ((rt1.c3) ISNULL);
SELECT ALL rt0.c2, t0.c0, rt1.c2, v0.c0, rt0.c4, rt0.c1, t0.c2, rt1.c1, rt1.c3, rt0.c3, rt0.c0 FROM rt1, v0, rt0, t0 GROUP BY rt0.c2, t0.c0, rt1.c2, v0.c0, rt0.c4, rt0.c1, t0.c2, rt1.c1, rt1.c3, rt0.c3, rt0.c0;
SELECT ALL * FROM rt0 CROSS JOIN v0 ON ((CAST(rt0.c4 AS TEXT)) BETWEEN ((((rt0.c4))>((rt1.c1)))) AND (rt1.c2 COLLATE RTRIM)) FULL OUTER JOIN rt1 ON ((((CAST(rt1.c3 AS TEXT))OR(0.5229037968323001)))AND(SQLITE_SOURCE_ID())) FULL OUTER JOIN t1 ON ((CASE rt0.c1  WHEN rt0.c4 THEN t0.c0 WHEN rt0.c0 THEN rt1.c3 WHEN rt0.c4 THEN t1.c0 END)>=((rt0.c3 IN ()))) CROSS JOIN t0 ON (((- (t0.c0))) NOT NULL);
SELECT DISTINCT rt1.c1, t1.c0, rt0.c3, rt0.c4, v0.c0, rt0.c0, rt1.c0, rt1.c3, rt0.c1, rt1.c2 FROM rt1, t1, rt0 INNER JOIN v0 ON -762583045;
SELECT DISTINCT rt1.c1, t1.c0, rt0.c3, rt0.c4, v0.c0, rt0.c0, rt1.c0, rt1.c3, rt0.c1, rt1.c2 FROM rt1, t1, rt0 INNER JOIN v0 ON -762583045 WHERE ((((-202474939, t1.c0, rt0.c2))>((rt0.c2, t1.c0, rt0.c1))) COLLATE NOCASE) UNION SELECT DISTINCT rt1.c1, t1.c0, rt0.c3, rt0.c4, v0.c0, rt0.c0, rt1.c0, rt1.c3, rt0.c1, rt1.c2 FROM rt1, t1, rt0 INNER JOIN v0 ON -762583045 WHERE ((NOT ((((-202474939, t1.c0, rt0.c2))>((rt0.c2, t1.c0, rt0.c1))) COLLATE NOCASE))) UNION SELECT DISTINCT rt1.c1, t1.c0, rt0.c3, rt0.c4, v0.c0, rt0.c0, rt1.c0, rt1.c3, rt0.c1, rt1.c2 FROM rt1, t1, rt0 INNER JOIN v0 ON -762583045 WHERE ((((((-202474939, t1.c0, rt0.c2))>((rt0.c2, t1.c0, rt0.c1))) COLLATE NOCASE) ISNULL));
SELECT DISTINCT rt1.c1, t1.c0, rt0.c3, rt0.c4, v0.c0, rt0.c0, rt1.c0, rt1.c3, rt0.c1, rt1.c2 FROM rt1, t1, rt0 INNER JOIN v0 ON -762583045;
SELECT ALL t1.c0, t0.c1, t0.c2, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c1, t0.c2, t0.c0;
SELECT ALL t1.c0, t0.c1, t0.c2, t0.c0 FROM t0, t1 WHERE ((NOT (t1.c0)) COLLATE BINARY) GROUP BY t1.c0, t0.c1, t0.c2, t0.c0 UNION SELECT ALL t1.c0, t0.c1, t0.c2, t0.c0 FROM t0, t1 WHERE ((NOT ((NOT (t1.c0)) COLLATE BINARY))) GROUP BY t1.c0, t0.c1, t0.c2, t0.c0 UNION SELECT t1.c0, t0.c1, t0.c2, t0.c0 FROM t0, t1 WHERE ((((NOT (t1.c0)) COLLATE BINARY) ISNULL)) GROUP BY t1.c0, t0.c1, t0.c2, t0.c0;
SELECT ALL t1.c0, t0.c1, t0.c2, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c1, t0.c2, t0.c0;
SELECT ALL t1.c0 FROM t1, t0 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1, t0 GROUP BY t1.c0 HAVING SUM('-236531070') UNION ALL SELECT ALL t1.c0 FROM t1, t0 GROUP BY t1.c0 HAVING (NOT (SUM('-236531070'))) UNION ALL SELECT ALL t1.c0 FROM t1, t0 GROUP BY t1.c0 HAVING ((SUM('-236531070')) ISNULL);
SELECT ALL t1.c0 FROM t1, t0 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1, t0 GROUP BY t1.c0 HAVING SUM('-236531070') UNION ALL SELECT ALL t1.c0 FROM t1, t0 GROUP BY t1.c0 HAVING (NOT (SUM('-236531070'))) UNION ALL SELECT ALL t1.c0 FROM t1, t0 GROUP BY t1.c0 HAVING ((SUM('-236531070')) ISNULL);
SELECT ALL t1.c0 FROM t1, t0 GROUP BY t1.c0;
SELECT rt1.c3, rt1.c0 FROM rt1;
SELECT rt1.c3, rt1.c0 FROM rt1 WHERE (0.648132297523446) UNION ALL SELECT ALL rt1.c3, rt1.c0 FROM rt1 WHERE ((NOT (0.648132297523446))) UNION ALL SELECT rt1.c3, rt1.c0 FROM rt1 WHERE (((0.648132297523446) ISNULL));
SELECT rt1.c3, rt1.c0 FROM rt1;
SELECT DISTINCT * FROM v0 FULL OUTER JOIN rt0 ON (~ (((rt0.c0)LIKE(rt0.c3))));
SELECT DISTINCT * FROM v0 FULL OUTER JOIN rt0 ON (~ (((rt0.c0)LIKE(rt0.c3)))) WHERE (CASE WHEN 'o晝2' THEN 0.832445268402781 ELSE ((rt0.c2)=(rt0.c2)) END) UNION SELECT DISTINCT * FROM v0 FULL OUTER JOIN rt0 ON (~ (((rt0.c0)LIKE(rt0.c3)))) WHERE ((NOT (CASE WHEN 'o晝2' THEN 0.832445268402781 ELSE ((rt0.c2)==(rt0.c2)) END))) UNION SELECT DISTINCT * FROM v0 FULL OUTER JOIN rt0 ON (~ (((rt0.c0)LIKE(rt0.c3)))) WHERE (((CASE WHEN 'o晝2' THEN 0.832445268402781 ELSE ((rt0.c2)==(rt0.c2)) END) ISNULL));
SELECT DISTINCT * FROM v0 FULL OUTER JOIN rt0 ON (~ (((rt0.c0)LIKE(rt0.c3))));
SELECT ALL rt0.c1, t0.c0, rt0.c2, t0.c2, rt0.c3, rt0.c4, t0.c1, t1.c0 FROM t0 RIGHT OUTER JOIN rt0 ON t0.c2 CROSS JOIN t1 ON (((((0.8542714133521909)AND(t0.c0)))OR('-1357205383')) IN ()) GROUP BY rt0.c1, t0.c0, rt0.c2, t0.c2, rt0.c3, rt0.c4, t0.c1, t1.c0;
SELECT rt0.c1, t0.c0, rt0.c2, t0.c2, rt0.c3, rt0.c4, t0.c1, t1.c0 FROM t0 RIGHT OUTER JOIN rt0 ON t0.c2 CROSS JOIN t1 ON (((((0.8542714133521909)AND(t0.c0)))OR('-1357205383')) IN ()) WHERE ((NOT ('-1190014527'))) GROUP BY rt0.c1, t0.c0, rt0.c2, t0.c2, rt0.c3, rt0.c4, t0.c1, t1.c0 UNION SELECT rt0.c1, t0.c0, rt0.c2, t0.c2, rt0.c3, rt0.c4, t0.c1, t1.c0 FROM t0 RIGHT OUTER JOIN rt0 ON t0.c2 CROSS JOIN t1 ON (((((0.8542714133521909)AND(t0.c0)))OR('-1357205383')) IN ()) WHERE ((NOT ((NOT ('-1190014527'))))) GROUP BY rt0.c1, t0.c0, rt0.c2, t0.c2, rt0.c3, rt0.c4, t0.c1, t1.c0 UNION SELECT ALL rt0.c1, t0.c0, rt0.c2, t0.c2, rt0.c3, rt0.c4, t0.c1, t1.c0 FROM t0 RIGHT OUTER JOIN rt0 ON t0.c2 CROSS JOIN t1 ON (((((0.8542714133521909)AND(t0.c0)))OR('-1357205383')) IN ()) WHERE ((((NOT ('-1190014527'))) ISNULL)) GROUP BY rt0.c1, t0.c0, rt0.c2, t0.c2, rt0.c3, rt0.c4, t0.c1, t1.c0;
SELECT ALL rt0.c1, t0.c0, rt0.c2, t0.c2, rt0.c3, rt0.c4, t0.c1, t1.c0 FROM t0 RIGHT OUTER JOIN rt0 ON t0.c2 CROSS JOIN t1 ON (((((0.8542714133521909)AND(t0.c0)))OR('-1357205383')) IN ()) GROUP BY rt0.c1, t0.c0, rt0.c2, t0.c2, rt0.c3, rt0.c4, t0.c1, t1.c0;
SELECT ALL rt1.c0, rt1.c3 FROM rt1 NATURAL JOIN t0 GROUP BY rt1.c0, rt1.c3;
SELECT ALL rt1.c0, rt1.c3 FROM rt1 NATURAL JOIN t0 GROUP BY rt1.c0, rt1.c3 HAVING (- (GROUP_CONCAT(t0.c2))) UNION ALL SELECT rt1.c0, rt1.c3 FROM rt1 NATURAL JOIN t0 GROUP BY rt1.c0, rt1.c3 HAVING (NOT ((- (GROUP_CONCAT(t0.c2))))) UNION ALL SELECT rt1.c0, rt1.c3 FROM rt1 NATURAL JOIN t0 GROUP BY rt1.c0, rt1.c3 HAVING (((- (GROUP_CONCAT(t0.c2)))) ISNULL);
SELECT ALL rt1.c0, rt1.c3 FROM rt1 NATURAL JOIN t0 GROUP BY rt1.c0, rt1.c3;
SELECT ALL rt1.c0, rt1.c3 FROM rt1 NATURAL JOIN t0 GROUP BY rt1.c0, rt1.c3 HAVING (- (GROUP_CONCAT(t0.c2))) UNION ALL SELECT rt1.c0, rt1.c3 FROM rt1 NATURAL JOIN t0 GROUP BY rt1.c0, rt1.c3 HAVING (NOT ((- (GROUP_CONCAT(t0.c2))))) UNION ALL SELECT rt1.c0, rt1.c3 FROM rt1 NATURAL JOIN t0 GROUP BY rt1.c0, rt1.c3 HAVING (((- (GROUP_CONCAT(t0.c2)))) ISNULL);
SELECT ALL rt1.c0, rt1.c3 FROM rt1 NATURAL JOIN t0 GROUP BY rt1.c0, rt1.c3;
SELECT ALL rt0.c4, t0.c0, rt1.c0, rt0.c2, rt0.c0, v0.c0, t0.c2 FROM t0 INNER JOIN v0 ON ((rt0.c3) NOTNULL) LEFT OUTER JOIN rt0 ON x'' LEFT OUTER JOIN rt1 ON (((t0.c2))<=((rt1.c3)));
SELECT ALL rt0.c4, t0.c0, rt1.c0, rt0.c2, rt0.c0, v0.c0, t0.c2 FROM t0 INNER JOIN v0 ON ((rt0.c3) NOTNULL) LEFT OUTER JOIN rt0 ON x'' LEFT OUTER JOIN rt1 ON (((t0.c2))<=((rt1.c3))) WHERE (((((((rt0.c3)OR(rt1.c0)))AND(t0.c0)))GLOB((- (rt0.c1))))) UNION ALL SELECT rt0.c4, t0.c0, rt1.c0, rt0.c2, rt0.c0, v0.c0, t0.c2 FROM t0 INNER JOIN v0 ON ((rt0.c3) NOTNULL) LEFT OUTER JOIN rt0 ON x'' LEFT OUTER JOIN rt1 ON (((t0.c2))<=((rt1.c3))) WHERE ((NOT (((((((rt0.c3)OR(rt1.c0)))AND(t0.c0)))GLOB((- (rt0.c1))))))) UNION ALL SELECT ALL rt0.c4, t0.c0, rt1.c0, rt0.c2, rt0.c0, v0.c0, t0.c2 FROM t0 INNER JOIN v0 ON ((rt0.c3) NOTNULL) LEFT OUTER JOIN rt0 ON x'' LEFT OUTER JOIN rt1 ON (((t0.c2))<=((rt1.c3))) WHERE (((((((((rt0.c3)OR(rt1.c0)))AND(t0.c0)))GLOB((- (rt0.c1))))) ISNULL));
SELECT ALL rt0.c4, t0.c0, rt1.c0, rt0.c2, rt0.c0, v0.c0, t0.c2 FROM t0 INNER JOIN v0 ON ((rt0.c3) NOTNULL) LEFT OUTER JOIN rt0 ON x'' LEFT OUTER JOIN rt1 ON (((t0.c2))<=((rt1.c3)));
SELECT DISTINCT rt0.c1, rt0.c0, t0.c1, rt0.c3 FROM rt0, t0;
SELECT DISTINCT rt0.c1, rt0.c0, t0.c1, rt0.c3 FROM rt0, t0 WHERE ((((((t0.c1 IN ()))OR((rt0.c0 IN ()))))OR(CAST(rt0.c2 AS NUMERIC)))) UNION SELECT DISTINCT rt0.c1, rt0.c0, t0.c1, rt0.c3 FROM rt0, t0 WHERE ((NOT ((((((t0.c1 IN ()))OR((rt0.c0 IN ()))))OR(CAST(rt0.c2 AS NUMERIC)))))) UNION SELECT DISTINCT rt0.c1, rt0.c0, t0.c1, rt0.c3 FROM rt0, t0 WHERE ((((((((t0.c1 IN ()))OR((rt0.c0 IN ()))))OR(CAST(rt0.c2 AS NUMERIC)))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, t0.c1, rt0.c3 FROM rt0, t0;
SELECT ALL t0.c2, t1.c0, t0.c0, t0.c1, v0.c0 FROM v0, t1, t0 GROUP BY t0.c2, t1.c0, t0.c0, t0.c1, v0.c0;
SELECT ALL t0.c2, t1.c0, t0.c0, t0.c1, v0.c0 FROM v0, t1, t0 WHERE (NULL) GROUP BY t0.c2, t1.c0, t0.c0, t0.c1, v0.c0 UNION SELECT ALL t0.c2, t1.c0, t0.c0, t0.c1, v0.c0 FROM v0, t1, t0 WHERE ((NOT (NULL))) GROUP BY t0.c2, t1.c0, t0.c0, t0.c1, v0.c0 UNION SELECT t0.c2, t1.c0, t0.c0, t0.c1, v0.c0 FROM v0, t1, t0 WHERE (((NULL) ISNULL)) GROUP BY t0.c2, t1.c0, t0.c0, t0.c1, v0.c0;
SELECT ALL t0.c2, t1.c0, t0.c0, t0.c1, v0.c0 FROM v0, t1, t0 GROUP BY t0.c2, t1.c0, t0.c0, t0.c1, v0.c0;
SELECT ALL rt1.c2, rt1.c1 FROM rt1, t1, v0 GROUP BY rt1.c2, rt1.c1;
SELECT rt1.c2, rt1.c1 FROM rt1, t1, v0 GROUP BY rt1.c2, rt1.c1 HAVING COUNT(COUNT(TOTAL(TOTAL(AVG(v0.c0))))) UNION ALL SELECT rt1.c2, rt1.c1 FROM rt1, t1, v0 GROUP BY rt1.c2, rt1.c1 HAVING (NOT (COUNT(COUNT(TOTAL(TOTAL(AVG(v0.c0))))))) UNION ALL SELECT ALL rt1.c2, rt1.c1 FROM rt1, t1, v0 GROUP BY rt1.c2, rt1.c1 HAVING ((COUNT(COUNT(TOTAL(TOTAL(AVG(v0.c0)))))) ISNULL);
SELECT ALL t1.c0, v0.c0, rt0.c0, rt0.c4, t0.c1, rt1.c2, rt1.c1, rt0.c3, rt0.c1, rt1.c0, rt0.c2, t0.c0, rt1.c3, t0.c2 FROM rt1, t0, v0, rt0, t1;
SELECT t1.c0, v0.c0, rt0.c0, rt0.c4, t0.c1, rt1.c2, rt1.c1, rt0.c3, rt0.c1, rt1.c0, rt0.c2, t0.c0, rt1.c3, t0.c2 FROM rt1, t0, v0, rt0, t1 WHERE (rt1.c2) UNION ALL SELECT t1.c0, v0.c0, rt0.c0, rt0.c4, t0.c1, rt1.c2, rt1.c1, rt0.c3, rt0.c1, rt1.c0, rt0.c2, t0.c0, rt1.c3, t0.c2 FROM rt1, t0, v0, rt0, t1 WHERE ((NOT (rt1.c2))) UNION ALL SELECT t1.c0, v0.c0, rt0.c0, rt0.c4, t0.c1, rt1.c2, rt1.c1, rt0.c3, rt0.c1, rt1.c0, rt0.c2, t0.c0, rt1.c3, t0.c2 FROM rt1, t0, v0, rt0, t1 WHERE (((rt1.c2) ISNULL));
SELECT ALL t1.c0, v0.c0, rt0.c0, rt0.c4, t0.c1, rt1.c2, rt1.c1, rt0.c3, rt0.c1, rt1.c0, rt0.c2, t0.c0, rt1.c3, t0.c2 FROM rt1, t0, v0, rt0, t1;
SELECT DISTINCT * FROM v0 LEFT OUTER JOIN rt0 ON CASE WHEN CAST(rt0.c2 AS INTEGER) THEN ((((NULL)AND(t0.c2)))OR(rt0.c0)) ELSE (NOT (x'')) END LEFT OUTER JOIN t0 ON ((((((t0.c0) BETWEEN (rt0.c0) AND (rt0.c4)))OR(rt0.c2)))OR((rt0.c4 IN ()))) RIGHT OUTER JOIN t1 ON CAST((+ (rt0.c1)) AS INTEGER);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((((v0.c0)) BETWEEN ((((((v0.c0)OR(v0.c0)))AND(v0.c0)))) AND ((((v0.c0) NOT BETWEEN (0Xffffffff983b924a) AND (x'd800')))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((((v0.c0)) BETWEEN ((((((v0.c0)OR(v0.c0)))AND(v0.c0)))) AND ((((v0.c0) NOT BETWEEN (0Xffffffff983b924a) AND (x'd800')))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((((v0.c0)) BETWEEN ((((((v0.c0)OR(v0.c0)))AND(v0.c0)))) AND ((((v0.c0) NOT BETWEEN (0Xffffffff983b924a) AND (x'd800')))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c3, t1.c0, t0.c1, rt0.c4, rt0.c2, rt1.c3 FROM t0 INNER JOIN rt0 ON x'' CROSS JOIN t1 ON (((rt1.c3 IN (rt0.c1, t0.c0))) NOT BETWEEN ((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c3)))) AND (((rt1.c2) NOT BETWEEN (rt0.c0) AND (t0.c1)))) CROSS JOIN v0 ON COALESCE(DISTINCT CASE WHEN rt1.c2 THEN rt1.c0 WHEN 0.8542714133521909 THEN rt1.c2 WHEN t0.c1 THEN rt1.c1 END, ((((((((rt1.c2)AND(t0.c0)))AND(rt0.c3)))OR('atJCy')))OR(0x728159a3)), (NOT (v0.c0)), t0.c2) RIGHT OUTER JOIN rt1 ON rt0.c0 GROUP BY rt0.c3, t1.c0, t0.c1, rt0.c4, rt0.c2, rt1.c3;
SELECT * FROM rt0, t1, rt1, t0, v0;
SELECT * FROM rt0, t1, rt1, t0, v0 WHERE (((((((((((rt0.c3)IS(rt0.c2)))AND(((t1.c0)+(t0.c0)))))AND((rt0.c0 IN (0xffffffffcb1736a5)))))AND((((rt0.c2, t0.c1, t0.c1)) NOT BETWEEN ((rt1.c3, x'24e3', NULL)) AND ((rt1.c0, t0.c2, rt1.c0))))))AND(CAST(rt1.c3 AS INTEGER)))) UNION ALL SELECT * FROM rt0, t1, rt1, t0, v0 WHERE ((NOT (((((((((((rt0.c3)IS(rt0.c2)))AND(((t1.c0)+(t0.c0)))))AND((rt0.c0 IN (0Xffffffffcb1736a5)))))AND((((rt0.c2, t0.c1, t0.c1)) NOT BETWEEN ((rt1.c3, x'24e3', NULL)) AND ((rt1.c0, t0.c2, rt1.c0))))))AND(CAST(rt1.c3 AS INTEGER)))))) UNION ALL SELECT * FROM rt0, t1, rt1, t0, v0 WHERE (((((((((((((rt0.c3)IS(rt0.c2)))AND(((t1.c0)+(t0.c0)))))AND((rt0.c0 IN (0xffffffffcb1736a5)))))AND((((rt0.c2, t0.c1, t0.c1)) NOT BETWEEN ((rt1.c3, x'24e3', NULL)) AND ((rt1.c0, t0.c2, rt1.c0))))))AND(CAST(rt1.c3 AS INTEGER)))) ISNULL));
SELECT * FROM rt0, t1, rt1, t0, v0;
SELECT DISTINCT t0.c1, t0.c0, t1.c0, t0.c2 FROM t1 LEFT OUTER JOIN t0 ON (((~ (t0.c0))) ISNULL);
SELECT DISTINCT t0.c1, t0.c0, t1.c0, t0.c2 FROM t1 LEFT OUTER JOIN t0 ON (((~ (t0.c0))) ISNULL) WHERE (((x'') NOT BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (CASE x''  WHEN t0.c2 THEN t1.c0 WHEN t1.c0 THEN t0.c1 WHEN t1.c0 THEN t0.c1 END))) UNION SELECT DISTINCT t0.c1, t0.c0, t1.c0, t0.c2 FROM t1 LEFT OUTER JOIN t0 ON (((~ (t0.c0))) ISNULL) WHERE ((NOT (((x'') NOT BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (CASE x''  WHEN t0.c2 THEN t1.c0 WHEN t1.c0 THEN t0.c1 WHEN t1.c0 THEN t0.c1 END))))) UNION SELECT DISTINCT t0.c1, t0.c0, t1.c0, t0.c2 FROM t1 LEFT OUTER JOIN t0 ON (((~ (t0.c0))) ISNULL) WHERE (((((x'') NOT BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (CASE x''  WHEN t0.c2 THEN t1.c0 WHEN t1.c0 THEN t0.c1 WHEN t1.c0 THEN t0.c1 END))) ISNULL));
SELECT DISTINCT t0.c1, t0.c0, t1.c0, t0.c2 FROM t1 LEFT OUTER JOIN t0 ON (((~ (t0.c0))) ISNULL);
SELECT ALL t1.c0 FROM t1 FULL OUTER JOIN rt1 ON CAST(t1.c0 AS REAL) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 FULL OUTER JOIN rt1 ON CAST(t1.c0 AS REAL) WHERE ((((~ (t1.c0)))>((((rt1.c1))<((0.2543407860677269)))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 FULL OUTER JOIN rt1 ON CAST(t1.c0 AS REAL) WHERE ((NOT ((((~ (t1.c0)))>((((rt1.c1))<((0.2543407860677269)))))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 FULL OUTER JOIN rt1 ON CAST(t1.c0 AS REAL) WHERE ((((((~ (t1.c0)))>((((rt1.c1))<((0.2543407860677269)))))) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 FULL OUTER JOIN rt1 ON CAST(t1.c0 AS REAL) GROUP BY t1.c0;
SELECT ALL rt1.c0 FROM t1, t0, rt0, rt1, v0 GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM t1 NOT INDEXED, t0, rt0, rt1, v0 GROUP BY rt1.c0 HAVING CAST(MAX(v0.c0) AS REAL) UNION ALL SELECT ALL rt1.c0 FROM t1, t0, rt0, rt1, v0 GROUP BY rt1.c0 HAVING (NOT (CAST(MAX(v0.c0) AS REAL))) UNION ALL SELECT ALL rt1.c0 FROM t1, t0, rt0, rt1, v0 GROUP BY rt1.c0 HAVING ((CAST(MAX(v0.c0) AS REAL)) ISNULL);
SELECT ALL rt1.c0 FROM t1, t0, rt0, rt1, v0 GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM t1 NOT INDEXED, t0, rt0, rt1, v0 GROUP BY rt1.c0 HAVING CAST(MAX(v0.c0) AS REAL) UNION ALL SELECT ALL rt1.c0 FROM t1, t0, rt0, rt1, v0 GROUP BY rt1.c0 HAVING (NOT (CAST(MAX(v0.c0) AS REAL))) UNION ALL SELECT ALL rt1.c0 FROM t1, t0, rt0, rt1, v0 GROUP BY rt1.c0 HAVING ((CAST(MAX(v0.c0) AS REAL)) ISNULL);
SELECT ALL rt1.c0 FROM t1, t0, rt0, rt1, v0 GROUP BY rt1.c0;
SELECT SUM(x'') FROM rt1;
SELECT * FROM v0, rt0;
SELECT ALL * FROM v0, rt0 WHERE (NULL) UNION ALL SELECT * FROM v0, rt0 WHERE ((NOT (NULL))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE (((NULL) ISNULL));
SELECT * FROM v0, rt0;
SELECT DISTINCT * FROM rt1, rt0, v0, t1;
SELECT DISTINCT * FROM rt1, rt0, v0, t1 WHERE (((CAST(0.8171615715320412 AS INTEGER))>>(((rt0.c0)LIKE(rt0.c2))))) UNION SELECT DISTINCT * FROM rt1, rt0, v0, t1 WHERE ((NOT (((CAST(0.8171615715320412 AS INTEGER))>>(((rt0.c0)LIKE(rt0.c2))))))) UNION SELECT DISTINCT * FROM rt1, rt0, v0, t1 WHERE (((((CAST(0.8171615715320412 AS INTEGER))>>(((rt0.c0)LIKE(rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt1, rt0, v0, t1;
SELECT rt1.c0, rt1.c2, rt0.c3, rt0.c0, rt0.c4, t0.c2 FROM rt0, rt1, v0, t0, t1 GROUP BY rt1.c0, rt1.c2, rt0.c3, rt0.c0, rt0.c4, t0.c2;
SELECT rt1.c0, rt1.c2, rt0.c3, rt0.c0, rt0.c4, t0.c2 FROM rt0, rt1, v0, t0, t1 WHERE (((((rt0.c3)/(rt1.c0))) ISNULL)) GROUP BY rt1.c0, rt1.c2, rt0.c3, rt0.c0, rt0.c4, t0.c2 UNION SELECT rt1.c0, rt1.c2, rt0.c3, rt0.c0, rt0.c4, t0.c2 FROM rt0, rt1, v0, t0, t1 WHERE ((NOT (((((rt0.c3)/(rt1.c0))) ISNULL)))) GROUP BY rt1.c0, rt1.c2, rt0.c3, rt0.c0, rt0.c4, t0.c2 UNION SELECT ALL rt1.c0, rt1.c2, rt0.c3, rt0.c0, rt0.c4, t0.c2 FROM rt0, rt1, v0, t0, t1 WHERE (((((((rt0.c3)/(rt1.c0))) ISNULL)) ISNULL)) GROUP BY rt1.c0, rt1.c2, rt0.c3, rt0.c0, rt0.c4, t0.c2;
SELECT rt1.c0, rt1.c2, rt0.c3, rt0.c0, rt0.c4, t0.c2 FROM rt0, rt1, v0, t0, t1 GROUP BY rt1.c0, rt1.c2, rt0.c3, rt0.c0, rt0.c4, t0.c2;
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2;
SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING AVG(MIN(COUNT(*))) UNION ALL SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING (NOT (AVG(MIN(COUNT(*))))) UNION ALL SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING ((AVG(MIN(COUNT(*)))) ISNULL);
SELECT rt0.c4, rt0.c3, t0.c2, rt0.c1, t1.c0, rt0.c0, t0.c0, rt0.c2, t0.c1, v0.c0 FROM t1, v0, t0, rt0;
SELECT rt0.c4, rt0.c3, t0.c2, rt0.c1, t1.c0, rt0.c0, t0.c0, rt0.c2, t0.c1, v0.c0 FROM t1, v0, t0, rt0 WHERE (TYPEOF(((rt0.c1) BETWEEN (t1.c0) AND (rt0.c4)))) UNION ALL SELECT rt0.c4, rt0.c3, t0.c2, rt0.c1, t1.c0, rt0.c0, t0.c0, rt0.c2, t0.c1, v0.c0 FROM t1, v0, t0, rt0 WHERE ((NOT (TYPEOF(((rt0.c1) BETWEEN (t1.c0) AND (rt0.c4)))))) UNION ALL SELECT ALL rt0.c4, rt0.c3, t0.c2, rt0.c1, t1.c0, rt0.c0, t0.c0, rt0.c2, t0.c1, v0.c0 FROM t1, v0, t0, rt0 WHERE (((TYPEOF(((rt0.c1) BETWEEN (t1.c0) AND (rt0.c4)))) ISNULL));
SELECT rt0.c4, rt0.c3, t0.c2, rt0.c1, t1.c0, rt0.c0, t0.c0, rt0.c2, t0.c1, v0.c0 FROM t1, v0, t0, rt0;
SELECT DISTINCT * FROM t0, t1, rt1, rt0;
SELECT DISTINCT * FROM t0 NOT INDEXED, t1, rt1, rt0 WHERE ((NOT (((rt0.c4) BETWEEN ('-635696488') AND (t0.c0))))) UNION SELECT DISTINCT * FROM t0, t1, rt1, rt0 WHERE ((NOT ((NOT (((rt0.c4) BETWEEN ('-635696488') AND (t0.c0))))))) UNION SELECT DISTINCT * FROM t0, t1, rt1, rt0 WHERE ((((NOT (((rt0.c4) BETWEEN ('-635696488') AND (t0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0, t1, rt1, rt0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE (((((((t1.c0)!=(t1.c0)))AND(((((t1.c0)AND(t1.c0)))OR(t1.c0)))))OR(ABS(-291397243)))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT (((((((t1.c0)<>(t1.c0)))AND(((((t1.c0)AND(t1.c0)))OR(t1.c0)))))OR(ABS(-291397243)))))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE (((((((((t1.c0)!=(t1.c0)))AND(((((t1.c0)AND(t1.c0)))OR(t1.c0)))))OR(ABS(-291397243)))) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t0.c0, rt1.c3, rt0.c2, rt1.c1, rt0.c1, t0.c1, rt1.c0, t0.c2, t1.c0, rt0.c0, rt0.c4, rt1.c2, rt0.c3 FROM t1, t0, rt0 NATURAL JOIN rt1 GROUP BY t0.c0, rt1.c3, rt0.c2, rt1.c1, rt0.c1, t0.c1, rt1.c0, t0.c2, t1.c0, rt0.c0, rt0.c4, rt1.c2, rt0.c3;
SELECT t0.c0, rt1.c3, rt0.c2, rt1.c1, rt0.c1, t0.c1, rt1.c0, t0.c2, t1.c0, rt0.c0, rt0.c4, rt1.c2, rt0.c3 FROM t1, t0, rt0 NATURAL JOIN rt1 GROUP BY t0.c0, rt1.c3, rt0.c2, rt1.c1, rt0.c1, t0.c1, rt1.c0, t0.c2, t1.c0, rt0.c0, rt0.c4, rt1.c2, rt0.c3 HAVING json_valid(SUM(GROUP_CONCAT(t0.c1))) UNION ALL SELECT t0.c0, rt1.c3, rt0.c2, rt1.c1, rt0.c1, t0.c1, rt1.c0, t0.c2, t1.c0, rt0.c0, rt0.c4, rt1.c2, rt0.c3 FROM t1, t0, rt0 NATURAL JOIN rt1 GROUP BY t0.c0, rt1.c3, rt0.c2, rt1.c1, rt0.c1, t0.c1, rt1.c0, t0.c2, t1.c0, rt0.c0, rt0.c4, rt1.c2, rt0.c3 HAVING (NOT (json_valid(SUM(GROUP_CONCAT(t0.c1))))) UNION ALL SELECT t0.c0, rt1.c3, rt0.c2, rt1.c1, rt0.c1, t0.c1, rt1.c0, t0.c2, t1.c0, rt0.c0, rt0.c4, rt1.c2, rt0.c3 FROM t1, t0, rt0 NATURAL JOIN rt1 GROUP BY t0.c0, rt1.c3, rt0.c2, rt1.c1, rt0.c1, t0.c1, rt1.c0, t0.c2, t1.c0, rt0.c0, rt0.c4, rt1.c2, rt0.c3 HAVING ((json_valid(SUM(GROUP_CONCAT(t0.c1)))) ISNULL);
SELECT ALL * FROM rt0, rt1;
SELECT * FROM rt0 NOT INDEXED, rt1 WHERE ((((CAST(rt0.c3 AS REAL), rt1.c0, HEX(rt1.c3)))>=((CHAR(rt1.c2, rt1.c2, rt0.c4), CASE WHEN rt1.c1 THEN rt1.c2 END, rt0.c4)))) UNION ALL SELECT ALL * FROM rt0 NOT INDEXED, rt1 WHERE ((NOT ((((CAST(rt0.c3 AS REAL), rt1.c0, HEX(rt1.c3)))>=((CHAR(rt1.c2, rt1.c2, rt0.c4), CASE WHEN rt1.c1 THEN rt1.c2 END, rt0.c4)))))) UNION ALL SELECT ALL * FROM rt0, rt1 WHERE ((((((CAST(rt0.c3 AS REAL), rt1.c0, HEX(rt1.c3)))>=((CHAR(rt1.c2, rt1.c2, rt0.c4), CASE WHEN rt1.c1 THEN rt1.c2 END, rt0.c4)))) ISNULL));
SELECT ALL * FROM rt0, rt1;
SELECT DISTINCT * FROM rt0, v0, t0, t1, rt1;
SELECT DISTINCT * FROM rt0, v0, t0, t1, rt1 WHERE (((((rt1.c2) ISNULL))<('1616403846'))) UNION SELECT DISTINCT * FROM rt0, v0, t0, t1, rt1 WHERE ((NOT (((((rt1.c2) ISNULL))<('1616403846'))))) UNION SELECT DISTINCT * FROM rt0, v0, t0, t1, rt1 WHERE (((((((rt1.c2) ISNULL))<('1616403846'))) ISNULL));
SELECT DISTINCT * FROM rt0, v0, t0, t1, rt1;
SELECT ALL t0.c2, t1.c0, rt0.c1, t0.c0, rt0.c3, t0.c1, rt0.c2, rt0.c4, rt0.c0 FROM t1, t0, rt0 GROUP BY t0.c2, t1.c0, rt0.c1, t0.c0, rt0.c3, t0.c1, rt0.c2, rt0.c4, rt0.c0;
SELECT t0.c2, t1.c0, rt0.c1, t0.c0, rt0.c3, t0.c1, rt0.c2, rt0.c4, rt0.c0 FROM t1, t0, rt0 WHERE (CAST(rt0.c2 COLLATE RTRIM AS TEXT)) GROUP BY t0.c2, t1.c0, rt0.c1, t0.c0, rt0.c3, t0.c1, rt0.c2, rt0.c4, rt0.c0 UNION SELECT ALL t0.c2, t1.c0, rt0.c1, t0.c0, rt0.c3, t0.c1, rt0.c2, rt0.c4, rt0.c0 FROM t1, t0, rt0 NOT INDEXED WHERE ((NOT (CAST(rt0.c2 COLLATE RTRIM AS TEXT)))) GROUP BY t0.c2, t1.c0, rt0.c1, t0.c0, rt0.c3, t0.c1, rt0.c2, rt0.c4, rt0.c0 UNION SELECT ALL t0.c2, t1.c0, rt0.c1, t0.c0, rt0.c3, t0.c1, rt0.c2, rt0.c4, rt0.c0 FROM t1, t0, rt0 WHERE (((CAST(rt0.c2 COLLATE RTRIM AS TEXT)) ISNULL)) GROUP BY t0.c2, t1.c0, rt0.c1, t0.c0, rt0.c3, t0.c1, rt0.c2, rt0.c4, rt0.c0;
SELECT ALL t0.c2, t1.c0, rt0.c1, t0.c0, rt0.c3, t0.c1, rt0.c2, rt0.c4, rt0.c0 FROM t1, t0, rt0 GROUP BY t0.c2, t1.c0, rt0.c1, t0.c0, rt0.c3, t0.c1, rt0.c2, rt0.c4, rt0.c0;
SELECT rt0.c2, v0.c0, t0.c2, rt0.c4, t0.c0, rt0.c3, t0.c1, rt0.c1, rt0.c0 FROM v0 CROSS JOIN t0 ON x'' INNER JOIN rt0 ON (((CASE WHEN t0.c2 THEN rt0.c4 ELSE rt0.c1 END))==((((t0.c2)<=(rt0.c1))))) GROUP BY rt0.c2, v0.c0, t0.c2, rt0.c4, t0.c0, rt0.c3, t0.c1, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, v0.c0, t0.c2, rt0.c4, t0.c0, rt0.c3, t0.c1, rt0.c1, rt0.c0 FROM v0 CROSS JOIN t0 ON x'' INNER JOIN rt0 ON (((CASE WHEN t0.c2 THEN rt0.c4 ELSE rt0.c1 END))==((((t0.c2)<=(rt0.c1))))) GROUP BY rt0.c2, v0.c0, t0.c2, rt0.c4, t0.c0, rt0.c3, t0.c1, rt0.c1, rt0.c0 HAVING SUM(((((rt0.c2)AND(rt0.c0)))AND(COUNT(MAX(rt0.c3))))) UNION ALL SELECT rt0.c2, v0.c0, t0.c2, rt0.c4, t0.c0, rt0.c3, t0.c1, rt0.c1, rt0.c0 FROM v0 CROSS JOIN t0 ON x'' INNER JOIN rt0 ON (((CASE WHEN t0.c2 THEN rt0.c4 ELSE rt0.c1 END))==((((t0.c2)<=(rt0.c1))))) GROUP BY rt0.c2, v0.c0, t0.c2, rt0.c4, t0.c0, rt0.c3, t0.c1, rt0.c1, rt0.c0 HAVING (NOT (SUM(((((rt0.c2)AND(rt0.c0)))AND(COUNT(MAX(rt0.c3))))))) UNION ALL SELECT rt0.c2, v0.c0, t0.c2, rt0.c4, t0.c0, rt0.c3, t0.c1, rt0.c1, rt0.c0 FROM v0 CROSS JOIN t0 ON x'' INNER JOIN rt0 ON (((CASE WHEN t0.c2 THEN rt0.c4 ELSE rt0.c1 END))==((((t0.c2)<=(rt0.c1))))) GROUP BY rt0.c2, v0.c0, t0.c2, rt0.c4, t0.c0, rt0.c3, t0.c1, rt0.c1, rt0.c0 HAVING ((SUM(((((rt0.c2)AND(rt0.c0)))AND(COUNT(MAX(rt0.c3)))))) ISNULL);
SELECT * FROM t0, rt0 RIGHT OUTER JOIN t1 ON NULL CROSS JOIN v0 ON ((((((t0.c0)OR(t0.c2)))AND(rt0.c0))) NOT NULL);
SELECT ALL * FROM t0, rt0 RIGHT OUTER JOIN t1 ON NULL CROSS JOIN v0 ON ((((((t0.c0)OR(t0.c2)))AND(rt0.c0))) NOT NULL) WHERE (((CAST(t0.c0 AS TEXT)) NOTNULL)) UNION ALL SELECT * FROM t0, rt0 RIGHT OUTER JOIN t1 ON NULL CROSS JOIN v0 ON ((((((t0.c0)OR(t0.c2)))AND(rt0.c0))) NOT NULL) WHERE ((NOT (((CAST(t0.c0 AS TEXT)) NOTNULL)))) UNION ALL SELECT * FROM t0, rt0 RIGHT OUTER JOIN t1 ON NULL CROSS JOIN v0 ON ((((((t0.c0)OR(t0.c2)))AND(rt0.c0))) NOT NULL) WHERE (((((CAST(t0.c0 AS TEXT)) NOTNULL)) ISNULL));
SELECT * FROM t0, rt0 RIGHT OUTER JOIN t1 ON NULL CROSS JOIN v0 ON ((((((t0.c0)OR(t0.c2)))AND(rt0.c0))) NOT NULL);
SELECT DISTINCT * FROM rt0, t1, v0 INDEXED BY i35, rt1, t0 NOT INDEXED;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE (((((x'')OR(t1.c0)))AND(t1.c0)) COLLATE NOCASE) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT (((((x'')OR(t1.c0)))AND(t1.c0)) COLLATE NOCASE))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE (((((((x'')OR(t1.c0)))AND(t1.c0)) COLLATE NOCASE) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT rt1.c1, rt1.c0, t1.c0 FROM rt1 NATURAL JOIN t1 GROUP BY rt1.c1, rt1.c0, t1.c0;
SELECT rt1.c1, rt1.c0, t1.c0 FROM rt1 NATURAL JOIN t1 GROUP BY rt1.c1, rt1.c0, t1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c1, rt1.c0, t1.c0 FROM rt1 NATURAL JOIN t1 GROUP BY rt1.c1, rt1.c0, t1.c0 HAVING (NOT ((NOT (COUNT(*))))) UNION ALL SELECT ALL rt1.c1, rt1.c0, t1.c0 FROM rt1 NATURAL JOIN t1 GROUP BY rt1.c1, rt1.c0, t1.c0 HAVING (((NOT (COUNT(*)))) ISNULL);
SELECT rt1.c1, rt1.c0, t1.c0 FROM rt1 NATURAL JOIN t1 GROUP BY rt1.c1, rt1.c0, t1.c0;
SELECT rt1.c1, rt1.c0, t1.c0 FROM rt1 NATURAL JOIN t1 GROUP BY rt1.c1, rt1.c0, t1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c1, rt1.c0, t1.c0 FROM rt1 NATURAL JOIN t1 GROUP BY rt1.c1, rt1.c0, t1.c0 HAVING (NOT ((NOT (COUNT(*))))) UNION ALL SELECT ALL rt1.c1, rt1.c0, t1.c0 FROM rt1 NATURAL JOIN t1 GROUP BY rt1.c1, rt1.c0, t1.c0 HAVING (((NOT (COUNT(*)))) ISNULL);
SELECT rt1.c1, rt1.c0, t1.c0 FROM rt1 NATURAL JOIN t1 GROUP BY rt1.c1, rt1.c0, t1.c0;
SELECT MAX(NULL) FROM t1, t0 ORDER BY LIKELIHOOD(DISTINCT ((t0.c0)<=(t0.c2)), 0.6141969881156778) DESC;
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE ((IFNULL(DISTINCT v0.c0, v0.c0) IN ())) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT ((IFNULL(DISTINCT v0.c0, v0.c0) IN ())))) UNION ALL SELECT * FROM v0 WHERE ((((IFNULL(DISTINCT v0.c0, v0.c0) IN ())) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT rt0.c4, rt0.c1, rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c4, rt0.c1, rt0.c3 FROM rt0 WHERE (COALESCE(DISTINCT ((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c1)), (((rt0.c3))==((rt0.c2))))) UNION SELECT DISTINCT rt0.c4, rt0.c1, rt0.c3 FROM rt0 WHERE ((NOT (COALESCE(DISTINCT ((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c1)), (((rt0.c3))=((rt0.c2))))))) UNION SELECT DISTINCT rt0.c4, rt0.c1, rt0.c3 FROM rt0 WHERE (((COALESCE(DISTINCT ((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c1)), (((rt0.c3))=((rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c1, rt0.c3 FROM rt0;
SELECT t0.c1, t0.c2, t0.c0, rt0.c2, rt0.c3, v0.c0, rt0.c1 FROM t0, rt0 RIGHT OUTER JOIN v0 ON (((NULL)AND(rt0.c0)) IN ()) GROUP BY t0.c1, t0.c2, t0.c0, rt0.c2, rt0.c3, v0.c0, rt0.c1;
SELECT ALL t0.c1, t0.c2, t0.c0, rt0.c2, rt0.c3, v0.c0, rt0.c1 FROM t0, rt0 RIGHT OUTER JOIN v0 ON (((NULL)AND(rt0.c0)) IN ()) WHERE (((((rt0.c0) NOT BETWEEN (-4.05171714E8) AND (t0.c1)))%((NOT (rt0.c0))))) GROUP BY t0.c1, t0.c2, t0.c0, rt0.c2, rt0.c3, v0.c0, rt0.c1 UNION SELECT ALL t0.c1, t0.c2, t0.c0, rt0.c2, rt0.c3, v0.c0, rt0.c1 FROM t0, rt0 RIGHT OUTER JOIN v0 ON (((NULL)AND(rt0.c0)) IN ()) WHERE ((NOT (((((rt0.c0) NOT BETWEEN (-4.05171714E8) AND (t0.c1)))%((NOT (rt0.c0))))))) GROUP BY t0.c1, t0.c2, t0.c0, rt0.c2, rt0.c3, v0.c0, rt0.c1 UNION SELECT ALL t0.c1, t0.c2, t0.c0, rt0.c2, rt0.c3, v0.c0, rt0.c1 FROM t0, rt0 RIGHT OUTER JOIN v0 ON (((NULL)AND(rt0.c0)) IN ()) WHERE (((((((rt0.c0) NOT BETWEEN (-4.05171714E8) AND (t0.c1)))%((NOT (rt0.c0))))) ISNULL)) GROUP BY t0.c1, t0.c2, t0.c0, rt0.c2, rt0.c3, v0.c0, rt0.c1;
SELECT t0.c1, t0.c2, t0.c0, rt0.c2, rt0.c3, v0.c0, rt0.c1 FROM t0, rt0 RIGHT OUTER JOIN v0 ON (((NULL)AND(rt0.c0)) IN ()) GROUP BY t0.c1, t0.c2, t0.c0, rt0.c2, rt0.c3, v0.c0, rt0.c1;
SELECT rt1.c1, rt1.c0, rt1.c2, v0.c0, rt1.c3 FROM v0, rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2, v0.c0, rt1.c3;
SELECT rt1.c1, rt1.c0, rt1.c2, v0.c0, rt1.c3 FROM v0, rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2, v0.c0, rt1.c3 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c1, rt1.c0, rt1.c2, v0.c0, rt1.c3 FROM v0, rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2, v0.c0, rt1.c3 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c1, rt1.c0, rt1.c2, v0.c0, rt1.c3 FROM v0, rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2, v0.c0, rt1.c3 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c1, rt1.c0, rt1.c2, v0.c0, rt1.c3 FROM v0, rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2, v0.c0, rt1.c3;
SELECT rt1.c1, rt1.c0, rt1.c2, v0.c0, rt1.c3 FROM v0, rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2, v0.c0, rt1.c3 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c1, rt1.c0, rt1.c2, v0.c0, rt1.c3 FROM v0, rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2, v0.c0, rt1.c3 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c1, rt1.c0, rt1.c2, v0.c0, rt1.c3 FROM v0, rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2, v0.c0, rt1.c3 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c1, rt1.c0, rt1.c2, v0.c0, rt1.c3 FROM v0, rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2, v0.c0, rt1.c3;
SELECT ALL t0.c2, t0.c1 FROM t0;
SELECT t0.c2, t0.c1 FROM t0 WHERE (t0.c2) UNION ALL SELECT ALL t0.c2, t0.c1 FROM t0 WHERE ((NOT (t0.c2))) UNION ALL SELECT ALL t0.c2, t0.c1 FROM t0 WHERE (((t0.c2) ISNULL));
SELECT ALL t0.c2, t0.c1 FROM t0;
SELECT DISTINCT * FROM v0, t0;
SELECT DISTINCT * FROM v0, t0 WHERE (CASE t0.c2  WHEN CAST(1.93102969E8 AS BLOB) THEN (+ (0.12811503082906373)) ELSE v0.c0 COLLATE RTRIM END) UNION SELECT DISTINCT * FROM v0, t0 WHERE ((NOT (CASE t0.c2  WHEN CAST(1.93102969E8 AS BLOB) THEN (+ (0.12811503082906373)) ELSE v0.c0 COLLATE RTRIM END))) UNION SELECT DISTINCT * FROM v0, t0 WHERE (((CASE t0.c2  WHEN CAST(1.93102969E8 AS BLOB) THEN (+ (0.12811503082906373)) ELSE v0.c0 COLLATE RTRIM END) ISNULL));
SELECT DISTINCT * FROM v0, t0;
SELECT rt1.c3, t0.c2, rt0.c1, rt1.c1, t0.c1 FROM t0, t1 CROSS JOIN v0 ON CAST(((((rt0.c1)AND(rt1.c1)))OR(t0.c2)) AS BLOB) RIGHT OUTER JOIN rt1 ON (+ (LIKELY(rt0.c1))) CROSS JOIN rt0 ON (((NOT (rt0.c2))) BETWEEN (((((x'')OR(rt1.c3)))AND(0xffffffffc4ffed78))) AND (((rt0.c1) NOT NULL))) GROUP BY rt1.c3, t0.c2, rt0.c1, rt1.c1, t0.c1;
SELECT ALL rt0.c1, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2;
SELECT rt0.c1, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2 HAVING MAX(((((MAX(rt0.c1))AND(AVG(rt0.c3))))OR(rt0.c1))) UNION ALL SELECT rt0.c1, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2 HAVING (NOT (MAX(((((MAX(rt0.c1))AND(AVG(rt0.c3))))OR(rt0.c1))))) UNION ALL SELECT rt0.c1, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2 HAVING ((MAX(((((MAX(rt0.c1))AND(AVG(rt0.c3))))OR(rt0.c1)))) ISNULL);
SELECT ALL rt0.c2, rt1.c3, rt1.c1, rt0.c3, rt1.c0, rt0.c1 FROM rt0, rt1;
SELECT ALL rt0.c2, rt1.c3, rt1.c1, rt0.c3, rt1.c0, rt0.c1 FROM rt0, rt1 WHERE (((CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c1 END)IS NOT(LIKELY(rt0.c1)))) UNION ALL SELECT rt0.c2, rt1.c3, rt1.c1, rt0.c3, rt1.c0, rt0.c1 FROM rt0, rt1 WHERE ((NOT (((CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c1 END)IS NOT(LIKELY(rt0.c1)))))) UNION ALL SELECT ALL rt0.c2, rt1.c3, rt1.c1, rt0.c3, rt1.c0, rt0.c1 FROM rt0, rt1 WHERE (((((CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c1 END)IS NOT(LIKELY(rt0.c1)))) ISNULL));
SELECT ALL rt0.c2, rt1.c3, rt1.c1, rt0.c3, rt1.c0, rt0.c1 FROM rt0, rt1;
SELECT DISTINCT t0.c1, rt0.c4, rt1.c2, rt0.c2, t0.c0, rt1.c3, rt1.c1, rt0.c1, rt1.c0 FROM v0, rt1, rt0, t0;
SELECT DISTINCT t0.c1, rt0.c4, rt1.c2, rt0.c2, t0.c0, rt1.c3, rt1.c1, rt0.c1, rt1.c0 FROM v0, rt1, rt0, t0 WHERE (((NULL) NOT NULL)) UNION SELECT DISTINCT t0.c1, rt0.c4, rt1.c2, rt0.c2, t0.c0, rt1.c3, rt1.c1, rt0.c1, rt1.c0 FROM v0, rt1, rt0, t0 WHERE ((NOT (((NULL) NOT NULL)))) UNION SELECT DISTINCT t0.c1, rt0.c4, rt1.c2, rt0.c2, t0.c0, rt1.c3, rt1.c1, rt0.c1, rt1.c0 FROM v0, rt1, rt0, t0 WHERE (((((NULL) NOT NULL)) ISNULL));
SELECT DISTINCT t0.c1, rt0.c4, rt1.c2, rt0.c2, t0.c0, rt1.c3, rt1.c1, rt0.c1, rt1.c0 FROM v0, rt1, rt0, t0;
SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM t1, v0, rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM t1, v0, rt0 WHERE (((((((v0.c0))=((rt0.c4))), CASE WHEN rt0.c1 THEN rt0.c4 END, ((rt0.c0)<(rt0.c4))))<>(((rt0.c2 IN ()), (((rt0.c1, 0.880372059534593, rt0.c0))<((rt0.c1, rt0.c1, t1.c0))), (NOT (rt0.c0)))))) GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM t1, v0, rt0 WHERE ((NOT (((((((v0.c0))==((rt0.c4))), CASE WHEN rt0.c1 THEN rt0.c4 END, ((rt0.c0)<(rt0.c4))))!=(((rt0.c2 IN ()), (((rt0.c1, 0.880372059534593, rt0.c0))<((rt0.c1, rt0.c1, t1.c0))), (NOT (rt0.c0)))))))) GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM t1, v0, rt0 WHERE (((((((((v0.c0))=((rt0.c4))), CASE WHEN rt0.c1 THEN rt0.c4 END, ((rt0.c0)<(rt0.c4))))!=(((rt0.c2 IN ()), (((rt0.c1, 0.880372059534593, rt0.c0))<((rt0.c1, rt0.c1, t1.c0))), (NOT (rt0.c0)))))) ISNULL)) GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM t1, v0, rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1;
SELECT ALL t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1;
SELECT t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1 HAVING AVG(GROUP_CONCAT(t0.c2)) UNION ALL SELECT ALL t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1 HAVING (NOT (AVG(GROUP_CONCAT(t0.c2)))) UNION ALL SELECT t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1 HAVING ((AVG(GROUP_CONCAT(t0.c2))) ISNULL);
SELECT * FROM t0, t1, v0, rt0, rt1;
SELECT ALL * FROM t0, t1, v0, rt0, rt1 WHERE (((((t0.c2)%(rt1.c0))) NOT BETWEEN (((t0.c0) BETWEEN (rt0.c3) AND (rt0.c1))) AND (rt1.c2 COLLATE RTRIM))) UNION ALL SELECT * FROM t0, t1, v0, rt0, rt1 WHERE ((NOT (((((t0.c2)%(rt1.c0))) NOT BETWEEN (((t0.c0) BETWEEN (rt0.c3) AND (rt0.c1))) AND (rt1.c2 COLLATE RTRIM))))) UNION ALL SELECT ALL * FROM t0, t1, v0, rt0, rt1 WHERE (((((((t0.c2)%(rt1.c0))) NOT BETWEEN (((t0.c0) BETWEEN (rt0.c3) AND (rt0.c1))) AND (rt1.c2 COLLATE RTRIM))) ISNULL));
SELECT * FROM t0, t1, v0, rt0, rt1;
SELECT DISTINCT rt0.c4, rt1.c2, t0.c0, rt0.c2, v0.c0, t1.c0, t0.c1, rt0.c1, t0.c2, rt1.c3, rt0.c3, rt0.c0, rt1.c0, rt1.c1 FROM t1, t0, rt1, rt0, v0;
SELECT DISTINCT rt0.c4, rt1.c2, t0.c0, rt0.c2, v0.c0, t1.c0, t0.c1, rt0.c1, t0.c2, rt1.c3, rt0.c3, rt0.c0, rt1.c0, rt1.c1 FROM t1, t0, rt1, rt0, v0 WHERE ((~ ((+ (rt1.c2))))) UNION SELECT DISTINCT rt0.c4, rt1.c2, t0.c0, rt0.c2, v0.c0, t1.c0, t0.c1, rt0.c1, t0.c2, rt1.c3, rt0.c3, rt0.c0, rt1.c0, rt1.c1 FROM t1, t0, rt1, rt0, v0 WHERE ((NOT ((~ ((+ (rt1.c2))))))) UNION SELECT DISTINCT rt0.c4, rt1.c2, t0.c0, rt0.c2, v0.c0, t1.c0, t0.c1, rt0.c1, t0.c2, rt1.c3, rt0.c3, rt0.c0, rt1.c0, rt1.c1 FROM t1, t0, rt1, rt0, v0 WHERE ((((~ ((+ (rt1.c2))))) ISNULL));
SELECT DISTINCT rt0.c4, rt1.c2, t0.c0, rt0.c2, v0.c0, t1.c0, t0.c1, rt0.c1, t0.c2, rt1.c3, rt0.c3, rt0.c0, rt1.c0, rt1.c1 FROM t1, t0, rt1, rt0, v0;
SELECT v0.c0, t1.c0 FROM t1, v0 GROUP BY v0.c0, t1.c0;
SELECT v0.c0, t1.c0 FROM t1, v0 WHERE (CAST((((t1.c0, NULL, v0.c0)) NOT BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((v0.c0, v0.c0, t1.c0))) AS BLOB)) GROUP BY v0.c0, t1.c0 UNION SELECT ALL v0.c0, t1.c0 FROM t1, v0 WHERE ((NOT (CAST((((t1.c0, NULL, v0.c0)) NOT BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((v0.c0, v0.c0, t1.c0))) AS BLOB)))) GROUP BY v0.c0, t1.c0 UNION SELECT ALL v0.c0, t1.c0 FROM t1, v0 WHERE (((CAST((((t1.c0, NULL, v0.c0)) NOT BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((v0.c0, v0.c0, t1.c0))) AS BLOB)) ISNULL)) GROUP BY v0.c0, t1.c0;
SELECT v0.c0, t1.c0 FROM t1, v0 GROUP BY v0.c0, t1.c0;
SELECT ALL rt1.c0 FROM rt0, rt1, t1 NATURAL JOIN t0 GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM rt0, rt1, t1 NATURAL JOIN t0 GROUP BY rt1.c0 HAVING CASE COUNT(*)  WHEN MIN(t0.c0) THEN '' WHEN SUM(t0.c1) THEN ((rt1.c1) IS FALSE) WHEN (rt1.c2 IN ()) THEN x'' END UNION ALL SELECT ALL rt1.c0 FROM rt0, rt1, t1 NATURAL JOIN t0 GROUP BY rt1.c0 HAVING (NOT (CASE COUNT(*)  WHEN MIN(t0.c0) THEN '' WHEN SUM(t0.c1) THEN ((rt1.c1) IS FALSE) WHEN (rt1.c2 IN ()) THEN x'' END)) UNION ALL SELECT rt1.c0 FROM rt0, rt1, t1 NATURAL JOIN t0 GROUP BY rt1.c0 HAVING ((CASE COUNT(*)  WHEN MIN(t0.c0) THEN '' WHEN SUM(t0.c1) THEN ((rt1.c1) IS FALSE) WHEN (rt1.c2 IN ()) THEN x'' END) ISNULL);
SELECT ALL rt1.c0 FROM rt0, rt1, t1 NATURAL JOIN t0 GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM rt0, rt1, t1 NATURAL JOIN t0 GROUP BY rt1.c0 HAVING CASE COUNT(*)  WHEN MIN(t0.c0) THEN '' WHEN SUM(t0.c1) THEN ((rt1.c1) IS FALSE) WHEN (rt1.c2 IN ()) THEN x'' END UNION ALL SELECT ALL rt1.c0 FROM rt0, rt1, t1 NATURAL JOIN t0 GROUP BY rt1.c0 HAVING (NOT (CASE COUNT(*)  WHEN MIN(t0.c0) THEN '' WHEN SUM(t0.c1) THEN ((rt1.c1) IS FALSE) WHEN (rt1.c2 IN ()) THEN x'' END)) UNION ALL SELECT rt1.c0 FROM rt0, rt1, t1 NATURAL JOIN t0 GROUP BY rt1.c0 HAVING ((CASE COUNT(*)  WHEN MIN(t0.c0) THEN '' WHEN SUM(t0.c1) THEN ((rt1.c1) IS FALSE) WHEN (rt1.c2 IN ()) THEN x'' END) ISNULL);
SELECT ALL rt1.c0 FROM rt0, rt1, t1 NATURAL JOIN t0 GROUP BY rt1.c0;
SELECT ALL rt0.c3, rt0.c4, rt1.c2, rt0.c1, rt1.c1, rt0.c2, t1.c0, rt0.c0, rt1.c0 FROM rt0, t1, rt1;
SELECT ALL rt0.c3, rt0.c4, rt1.c2, rt0.c1, rt1.c1, rt0.c2, t1.c0, rt0.c0, rt1.c0 FROM rt0, t1, rt1 WHERE (rt1.c3) UNION ALL SELECT rt0.c3, rt0.c4, rt1.c2, rt0.c1, rt1.c1, rt0.c2, t1.c0, rt0.c0, rt1.c0 FROM rt0, t1, rt1 WHERE ((NOT (rt1.c3))) UNION ALL SELECT rt0.c3, rt0.c4, rt1.c2, rt0.c1, rt1.c1, rt0.c2, t1.c0, rt0.c0, rt1.c0 FROM rt0, t1, rt1 WHERE (((rt1.c3) ISNULL));
SELECT ALL rt0.c3, rt0.c4, rt1.c2, rt0.c1, rt1.c1, rt0.c2, t1.c0, rt0.c0, rt1.c0 FROM rt0, t1, rt1;
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE (CAST(t1.c0 AS BLOB)) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT (CAST(t1.c0 AS BLOB)))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE (((CAST(t1.c0 AS BLOB)) ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1;
SELECT t0.c0, t0.c1 FROM t0 WHERE (t0.c2) GROUP BY t0.c0, t0.c1 UNION SELECT t0.c0, t0.c1 FROM t0 WHERE ((NOT (t0.c2))) GROUP BY t0.c0, t0.c1 UNION SELECT t0.c0, t0.c1 FROM t0 WHERE (((t0.c2) ISNULL)) GROUP BY t0.c0, t0.c1;
SELECT t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1;
SELECT ALL rt0.c2, rt0.c1, t0.c2, t0.c0, t0.c1, rt0.c0, v0.c0, t1.c0, rt1.c3, rt0.c4 FROM t1, v0, rt0, rt1, t0 GROUP BY rt0.c2, rt0.c1, t0.c2, t0.c0, t0.c1, rt0.c0, v0.c0, t1.c0, rt1.c3, rt0.c4;
SELECT ALL rt0.c2, rt0.c1, t0.c2, t0.c0, t0.c1, rt0.c0, v0.c0, t1.c0, rt1.c3, rt0.c4 FROM t1, v0, rt0, rt1, t0 GROUP BY rt0.c2, rt0.c1, t0.c2, t0.c0, t0.c1, rt0.c0, v0.c0, t1.c0, rt1.c3, rt0.c4 HAVING (((rt0.c1)OR(rt0.c4)) IN ()) UNION ALL SELECT ALL rt0.c2, rt0.c1, t0.c2, t0.c0, t0.c1, rt0.c0, v0.c0, t1.c0, rt1.c3, rt0.c4 FROM t1, v0, rt0, rt1, t0 GROUP BY rt0.c2, rt0.c1, t0.c2, t0.c0, t0.c1, rt0.c0, v0.c0, t1.c0, rt1.c3, rt0.c4 HAVING (NOT ((((rt0.c1)OR(rt0.c4)) IN ()))) UNION ALL SELECT rt0.c2, rt0.c1, t0.c2, t0.c0, t0.c1, rt0.c0, v0.c0, t1.c0, rt1.c3, rt0.c4 FROM t1, v0, rt0, rt1, t0 GROUP BY rt0.c2, rt0.c1, t0.c2, t0.c0, t0.c1, rt0.c0, v0.c0, t1.c0, rt1.c3, rt0.c4 HAVING (((((rt0.c1)OR(rt0.c4)) IN ())) ISNULL);
SELECT ALL rt0.c2, rt0.c1, t0.c2, t0.c0, t0.c1, rt0.c0, v0.c0, t1.c0, rt1.c3, rt0.c4 FROM t1, v0, rt0, rt1, t0 GROUP BY rt0.c2, rt0.c1, t0.c2, t0.c0, t0.c1, rt0.c0, v0.c0, t1.c0, rt1.c3, rt0.c4;
SELECT ALL rt0.c2, rt0.c1, t0.c2, t0.c0, t0.c1, rt0.c0, v0.c0, t1.c0, rt1.c3, rt0.c4 FROM t1, v0, rt0, rt1, t0 GROUP BY rt0.c2, rt0.c1, t0.c2, t0.c0, t0.c1, rt0.c0, v0.c0, t1.c0, rt1.c3, rt0.c4 HAVING (((rt0.c1)OR(rt0.c4)) IN ()) UNION ALL SELECT ALL rt0.c2, rt0.c1, t0.c2, t0.c0, t0.c1, rt0.c0, v0.c0, t1.c0, rt1.c3, rt0.c4 FROM t1, v0, rt0, rt1, t0 GROUP BY rt0.c2, rt0.c1, t0.c2, t0.c0, t0.c1, rt0.c0, v0.c0, t1.c0, rt1.c3, rt0.c4 HAVING (NOT ((((rt0.c1)OR(rt0.c4)) IN ()))) UNION ALL SELECT rt0.c2, rt0.c1, t0.c2, t0.c0, t0.c1, rt0.c0, v0.c0, t1.c0, rt1.c3, rt0.c4 FROM t1, v0, rt0, rt1, t0 GROUP BY rt0.c2, rt0.c1, t0.c2, t0.c0, t0.c1, rt0.c0, v0.c0, t1.c0, rt1.c3, rt0.c4 HAVING (((((rt0.c1)OR(rt0.c4)) IN ())) ISNULL);
SELECT ALL rt0.c2, rt0.c1, t0.c2, t0.c0, t0.c1, rt0.c0, v0.c0, t1.c0, rt1.c3, rt0.c4 FROM t1, v0, rt0, rt1, t0 GROUP BY rt0.c2, rt0.c1, t0.c2, t0.c0, t0.c1, rt0.c0, v0.c0, t1.c0, rt1.c3, rt0.c4;
SELECT MIN((v0.c0 COLLATE NOCASE IN ())) FROM v0 ORDER BY NULL  NULLS LAST;
SELECT * FROM rt0, v0;
SELECT * FROM rt0, v0 WHERE (CAST(0.8542714133521909 AS INTEGER)) UNION ALL SELECT * FROM rt0, v0 WHERE ((NOT (CAST(0.8542714133521909 AS INTEGER)))) UNION ALL SELECT * FROM rt0, v0 WHERE (((CAST(0.8542714133521909 AS INTEGER)) ISNULL));
SELECT * FROM rt0, v0;
SELECT DISTINCT rt1.c2 FROM rt1, t0 NATURAL JOIN v0;
SELECT DISTINCT rt1.c2 FROM rt1, t0 NATURAL JOIN v0 WHERE (CASE WHEN ((t0.c1)>(t0.c0)) THEN ((rt1.c1) ISNULL) END) UNION SELECT DISTINCT rt1.c2 FROM rt1, t0 NATURAL JOIN v0 WHERE ((NOT (CASE WHEN ((t0.c1)>(t0.c0)) THEN ((rt1.c1) ISNULL) END))) UNION SELECT DISTINCT rt1.c2 FROM rt1, t0 NATURAL JOIN v0 WHERE (((CASE WHEN ((t0.c1)>(t0.c0)) THEN ((rt1.c1) ISNULL) END) ISNULL));
SELECT DISTINCT rt1.c2 FROM rt1, t0 NATURAL JOIN v0;
SELECT rt0.c4, rt0.c1, rt0.c2, t1.c0, rt0.c0 FROM rt0, t1 GROUP BY rt0.c4, rt0.c1, rt0.c2, t1.c0, rt0.c0;
SELECT ALL rt0.c4, rt0.c1, rt0.c2, t1.c0, rt0.c0 FROM rt0, t1 WHERE (CAST(t1.c0 AS REAL)) GROUP BY rt0.c4, rt0.c1, rt0.c2, t1.c0, rt0.c0 UNION SELECT rt0.c4, rt0.c1, rt0.c2, t1.c0, rt0.c0 FROM rt0, t1 WHERE ((NOT (CAST(t1.c0 AS REAL)))) GROUP BY rt0.c4, rt0.c1, rt0.c2, t1.c0, rt0.c0 UNION SELECT ALL rt0.c4, rt0.c1, rt0.c2, t1.c0, rt0.c0 FROM rt0, t1 WHERE (((CAST(t1.c0 AS REAL)) ISNULL)) GROUP BY rt0.c4, rt0.c1, rt0.c2, t1.c0, rt0.c0;
SELECT rt0.c4, rt0.c1, rt0.c2, t1.c0, rt0.c0 FROM rt0, t1 GROUP BY rt0.c4, rt0.c1, rt0.c2, t1.c0, rt0.c0;
SELECT rt1.c1, rt1.c3, t1.c0 FROM t0, rt1, t1 GROUP BY rt1.c1, rt1.c3, t1.c0;
SELECT ALL rt1.c1, rt1.c3, t1.c0 FROM t0, rt1, t1 GROUP BY rt1.c1, rt1.c3, t1.c0 HAVING SUM(SUM(rt1.c1)) UNION ALL SELECT ALL rt1.c1, rt1.c3, t1.c0 FROM t0, rt1, t1 GROUP BY rt1.c1, rt1.c3, t1.c0 HAVING (NOT (SUM(SUM(rt1.c1)))) UNION ALL SELECT rt1.c1, rt1.c3, t1.c0 FROM t0, rt1, t1 GROUP BY rt1.c1, rt1.c3, t1.c0 HAVING ((SUM(SUM(rt1.c1))) ISNULL);
SELECT rt0.c0, rt0.c3, rt0.c4, rt0.c1 FROM v0 LEFT OUTER JOIN t1 ON ((CAST(v0.c0 AS REAL))>>(CAST(v0.c0 AS NUMERIC))) LEFT OUTER JOIN rt0 ON ((rt0.c0)-((((v0.c0)) BETWEEN ((rt0.c4)) AND ((rt0.c4)))));
SELECT ALL rt0.c0, rt0.c3, rt0.c4, rt0.c1 FROM v0 LEFT OUTER JOIN t1 ON ((CAST(v0.c0 AS REAL))>>(CAST(v0.c0 AS NUMERIC))) LEFT OUTER JOIN rt0 ON ((rt0.c0)-((((v0.c0)) BETWEEN ((rt0.c4)) AND ((rt0.c4))))) WHERE (NULL) UNION ALL SELECT rt0.c0, rt0.c3, rt0.c4, rt0.c1 FROM v0 LEFT OUTER JOIN t1 ON ((CAST(v0.c0 AS REAL))>>(CAST(v0.c0 AS NUMERIC))) LEFT OUTER JOIN rt0 ON ((rt0.c0)-((((v0.c0)) BETWEEN ((rt0.c4)) AND ((rt0.c4))))) WHERE ((NOT (NULL))) UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c4, rt0.c1 FROM v0 LEFT OUTER JOIN t1 ON ((CAST(v0.c0 AS REAL))>>(CAST(v0.c0 AS NUMERIC))) LEFT OUTER JOIN rt0 ON ((rt0.c0)-((((v0.c0)) BETWEEN ((rt0.c4)) AND ((rt0.c4))))) WHERE (((NULL) ISNULL));
SELECT rt0.c0, rt0.c3, rt0.c4, rt0.c1 FROM v0 LEFT OUTER JOIN t1 ON ((CAST(v0.c0 AS REAL))>>(CAST(v0.c0 AS NUMERIC))) LEFT OUTER JOIN rt0 ON ((rt0.c0)-((((v0.c0)) BETWEEN ((rt0.c4)) AND ((rt0.c4)))));
SELECT DISTINCT t0.c2 FROM t0;
SELECT DISTINCT t0.c2 FROM t0 WHERE (CAST(CAST(t0.c1 AS BLOB) AS INTEGER)) UNION SELECT DISTINCT t0.c2 FROM t0 WHERE ((NOT (CAST(CAST(t0.c1 AS BLOB) AS INTEGER)))) UNION SELECT DISTINCT t0.c2 FROM t0 WHERE (((CAST(CAST(t0.c1 AS BLOB) AS INTEGER)) ISNULL));
SELECT DISTINCT t0.c2 FROM t0;
SELECT rt0.c0, t0.c1 FROM rt0, t0 INNER JOIN rt1 ON ((((rt1.c1)>=(rt1.c3)))<(((rt1.c3) NOT BETWEEN (rt0.c0) AND (rt1.c1)))) GROUP BY rt0.c0, t0.c1;
SELECT rt0.c0, t0.c1 FROM rt0, t0 INNER JOIN rt1 ON ((((rt1.c1)>=(rt1.c3)))<(((rt1.c3) NOT BETWEEN (rt0.c0) AND (rt1.c1)))) WHERE ('Jr') GROUP BY rt0.c0, t0.c1 UNION SELECT rt0.c0, t0.c1 FROM rt0, t0 INNER JOIN rt1 ON ((((rt1.c1)>=(rt1.c3)))<(((rt1.c3) NOT BETWEEN (rt0.c0) AND (rt1.c1)))) WHERE ((NOT ('Jr'))) GROUP BY rt0.c0, t0.c1 UNION SELECT ALL rt0.c0, t0.c1 FROM rt0, t0 INNER JOIN rt1 ON ((((rt1.c1)>=(rt1.c3)))<(((rt1.c3) NOT BETWEEN (rt0.c0) AND (rt1.c1)))) WHERE ((('Jr') ISNULL)) GROUP BY rt0.c0, t0.c1;
SELECT rt0.c0, t0.c1 FROM rt0, t0 INNER JOIN rt1 ON ((((rt1.c1)>=(rt1.c3)))<(((rt1.c3) NOT BETWEEN (rt0.c0) AND (rt1.c1)))) GROUP BY rt0.c0, t0.c1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((AVG(MAX(v0.c0)))) NOT BETWEEN (((NOT (v0.c0)))) AND ((MIN(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((((AVG(MAX(v0.c0)))) NOT BETWEEN (((NOT (v0.c0)))) AND ((MIN(v0.c0)))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((AVG(MAX(v0.c0)))) NOT BETWEEN (((NOT (v0.c0)))) AND ((MIN(v0.c0))))) ISNULL);
SELECT SUM((((((((rt1.c2))=((rt1.c0))))OR(rt1.c0 COLLATE BINARY)))AND(rt1.c1))) FROM t1, rt1 ORDER BY (rt1.c1 COLLATE NOCASE IN (((t1.c0) NOTNULL))) DESC  NULLS LAST;
SELECT ALL rt1.c1, rt0.c1, t0.c2, rt0.c0, rt0.c2, rt1.c3, rt1.c2, t0.c0, rt0.c4, t0.c1 FROM rt0, t0, rt1;
SELECT ALL rt1.c1, rt0.c1, t0.c2, rt0.c0, rt0.c2, rt1.c3, rt1.c2, t0.c0, rt0.c4, t0.c1 FROM rt0, t0, rt1 WHERE (((rt0.c1 COLLATE BINARY) BETWEEN (((rt1.c2)==(t0.c2))) AND (((((((((0.5891047346513001)OR(rt1.c1)))AND(rt1.c3)))OR(rt1.c3)))AND(rt1.c3))))) UNION ALL SELECT ALL rt1.c1, rt0.c1, t0.c2, rt0.c0, rt0.c2, rt1.c3, rt1.c2, t0.c0, rt0.c4, t0.c1 FROM rt0, t0, rt1 WHERE ((NOT (((rt0.c1 COLLATE BINARY) BETWEEN (((rt1.c2)=(t0.c2))) AND (((((((((0.5891047346513001)OR(rt1.c1)))AND(rt1.c3)))OR(rt1.c3)))AND(rt1.c3))))))) UNION ALL SELECT rt1.c1, rt0.c1, t0.c2, rt0.c0, rt0.c2, rt1.c3, rt1.c2, t0.c0, rt0.c4, t0.c1 FROM rt0, t0, rt1 WHERE (((((rt0.c1 COLLATE BINARY) BETWEEN (((rt1.c2)=(t0.c2))) AND (((((((((0.5891047346513001)OR(rt1.c1)))AND(rt1.c3)))OR(rt1.c3)))AND(rt1.c3))))) ISNULL));
SELECT ALL rt1.c1, rt0.c1, t0.c2, rt0.c0, rt0.c2, rt1.c3, rt1.c2, t0.c0, rt0.c4, t0.c1 FROM rt0, t0, rt1;
SELECT DISTINCT rt0.c1, rt0.c0, v0.c0, rt0.c4 FROM v0, t1, rt0;
SELECT DISTINCT rt0.c1, rt0.c0, v0.c0, rt0.c4 FROM v0, t1, rt0 WHERE (CAST(CASE WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c3 WHEN t1.c0 THEN rt0.c1 WHEN rt0.c3 THEN t1.c0 WHEN v0.c0 THEN t1.c0 END AS TEXT)) UNION SELECT DISTINCT rt0.c1, rt0.c0, v0.c0, rt0.c4 FROM v0, t1, rt0 WHERE ((NOT (CAST(CASE WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c3 WHEN t1.c0 THEN rt0.c1 WHEN rt0.c3 THEN t1.c0 WHEN v0.c0 THEN t1.c0 END AS TEXT)))) UNION SELECT DISTINCT rt0.c1, rt0.c0, v0.c0, rt0.c4 FROM v0, t1, rt0 WHERE (((CAST(CASE WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c3 WHEN t1.c0 THEN rt0.c1 WHEN rt0.c3 THEN t1.c0 WHEN v0.c0 THEN t1.c0 END AS TEXT)) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, v0.c0, rt0.c4 FROM v0, t1, rt0;
SELECT rt1.c3, rt1.c0, rt1.c2, t1.c0 FROM t1, rt1 GROUP BY rt1.c3, rt1.c0, rt1.c2, t1.c0;
SELECT rt1.c3, rt1.c0, rt1.c2, t1.c0 FROM t1, rt1 WHERE (CASE WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c1 END COLLATE BINARY) GROUP BY rt1.c3, rt1.c0, rt1.c2, t1.c0 UNION SELECT ALL rt1.c3, rt1.c0, rt1.c2, t1.c0 FROM t1, rt1 WHERE ((NOT (CASE WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c1 END COLLATE BINARY))) GROUP BY rt1.c3, rt1.c0, rt1.c2, t1.c0 UNION SELECT ALL rt1.c3, rt1.c0, rt1.c2, t1.c0 FROM t1, rt1 WHERE (((CASE WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c1 END COLLATE BINARY) ISNULL)) GROUP BY rt1.c3, rt1.c0, rt1.c2, t1.c0;
SELECT rt1.c3, rt1.c0, rt1.c2, t1.c0 FROM t1, rt1 GROUP BY rt1.c3, rt1.c0, rt1.c2, t1.c0;
SELECT ALL t0.c1, t0.c0, rt1.c0, rt1.c3 FROM rt1, t0 FULL OUTER JOIN t1 ON ((rt1.c2)*(rt1.c2)) COLLATE RTRIM GROUP BY t0.c1, t0.c0, rt1.c0, rt1.c3;
SELECT ALL t0.c1, t0.c0, rt1.c0, rt1.c3 FROM rt1, t0 FULL OUTER JOIN t1 ON ((rt1.c2)*(rt1.c2)) COLLATE RTRIM GROUP BY t0.c1, t0.c0, rt1.c0, rt1.c3 HAVING TOTAL(((t0.c2)!=(t1.c0))) UNION ALL SELECT t0.c1, t0.c0, rt1.c0, rt1.c3 FROM rt1, t0 FULL OUTER JOIN t1 ON ((rt1.c2)*(rt1.c2)) COLLATE RTRIM GROUP BY t0.c1, t0.c0, rt1.c0, rt1.c3 HAVING (NOT (TOTAL(((t0.c2)!=(t1.c0))))) UNION ALL SELECT ALL t0.c1, t0.c0, rt1.c0, rt1.c3 FROM rt1, t0 FULL OUTER JOIN t1 ON ((rt1.c2)*(rt1.c2)) COLLATE RTRIM GROUP BY t0.c1, t0.c0, rt1.c0, rt1.c3 HAVING ((TOTAL(((t0.c2)!=(t1.c0)))) ISNULL);
SELECT ALL t0.c1, t0.c0, rt1.c0, rt1.c3 FROM rt1, t0 FULL OUTER JOIN t1 ON ((rt1.c2)*(rt1.c2)) COLLATE RTRIM GROUP BY t0.c1, t0.c0, rt1.c0, rt1.c3;
SELECT ALL t0.c1, t0.c0, rt1.c0, rt1.c3 FROM rt1, t0 FULL OUTER JOIN t1 ON ((rt1.c2)*(rt1.c2)) COLLATE RTRIM GROUP BY t0.c1, t0.c0, rt1.c0, rt1.c3 HAVING TOTAL(((t0.c2)!=(t1.c0))) UNION ALL SELECT t0.c1, t0.c0, rt1.c0, rt1.c3 FROM rt1, t0 FULL OUTER JOIN t1 ON ((rt1.c2)*(rt1.c2)) COLLATE RTRIM GROUP BY t0.c1, t0.c0, rt1.c0, rt1.c3 HAVING (NOT (TOTAL(((t0.c2)!=(t1.c0))))) UNION ALL SELECT ALL t0.c1, t0.c0, rt1.c0, rt1.c3 FROM rt1, t0 FULL OUTER JOIN t1 ON ((rt1.c2)*(rt1.c2)) COLLATE RTRIM GROUP BY t0.c1, t0.c0, rt1.c0, rt1.c3 HAVING ((TOTAL(((t0.c2)!=(t1.c0)))) ISNULL);
SELECT ALL t0.c1, t0.c0, rt1.c0, rt1.c3 FROM rt1, t0 FULL OUTER JOIN t1 ON ((rt1.c2)*(rt1.c2)) COLLATE RTRIM GROUP BY t0.c1, t0.c0, rt1.c0, rt1.c3;
SELECT ALL TOTAL(((CAST(rt0.c1 AS INTEGER)) NOT NULL)) FROM rt0, v0, rt1, t0;
SELECT * FROM v0, t0;
SELECT ALL * FROM v0, t0 WHERE (CASE ((t0.c2) BETWEEN (v0.c0) AND (v0.c0))  WHEN (t0.c1 IN ()) THEN ((((t0.c1)AND(t0.c2)))AND(t0.c1)) ELSE v0.c0 COLLATE RTRIM END) UNION ALL SELECT ALL * FROM v0, t0 WHERE ((NOT (CASE ((t0.c2) BETWEEN (v0.c0) AND (v0.c0))  WHEN (t0.c1 IN ()) THEN ((((t0.c1)AND(t0.c2)))AND(t0.c1)) ELSE v0.c0 COLLATE RTRIM END))) UNION ALL SELECT ALL * FROM v0, t0 WHERE (((CASE ((t0.c2) BETWEEN (v0.c0) AND (v0.c0))  WHEN (t0.c1 IN ()) THEN ((((t0.c1)AND(t0.c2)))AND(t0.c1)) ELSE v0.c0 COLLATE RTRIM END) ISNULL));
SELECT * FROM v0, t0;
SELECT DISTINCT rt1.c2, rt1.c0, t0.c0, t0.c2, rt0.c1, rt0.c3, rt0.c2, rt1.c3, rt0.c0, rt1.c1, rt0.c4 FROM t0, rt0, rt1 NOT INDEXED;
SELECT DISTINCT rt1.c2, rt1.c0, t0.c0, t0.c2, rt0.c1, rt0.c3, rt0.c2, rt1.c3, rt0.c0, rt1.c1, rt0.c4 FROM t0, rt0, rt1 WHERE (((((t0.c1)>=(NULL))) ISNULL)) UNION SELECT DISTINCT rt1.c2, rt1.c0, t0.c0, t0.c2, rt0.c1, rt0.c3, rt0.c2, rt1.c3, rt0.c0, rt1.c1, rt0.c4 FROM t0, rt0, rt1 WHERE ((NOT (((((t0.c1)>=(NULL))) ISNULL)))) UNION SELECT DISTINCT rt1.c2, rt1.c0, t0.c0, t0.c2, rt0.c1, rt0.c3, rt0.c2, rt1.c3, rt0.c0, rt1.c1, rt0.c4 FROM t0, rt0, rt1 WHERE (((((((t0.c1)>=(NULL))) ISNULL)) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c0, t0.c0, t0.c2, rt0.c1, rt0.c3, rt0.c2, rt1.c3, rt0.c0, rt1.c1, rt0.c4 FROM t0, rt0, rt1 NOT INDEXED;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (CAST(((((v0.c0)OR(v0.c0)))AND(v0.c0)) AS INTEGER)) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CAST(((((v0.c0)OR(v0.c0)))AND(v0.c0)) AS INTEGER)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((CAST(((((v0.c0)OR(v0.c0)))AND(v0.c0)) AS INTEGER)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c3, rt0.c1, t1.c0, rt0.c0 FROM rt1, v0, rt0, t1, t0 GROUP BY rt0.c3, rt0.c1, t1.c0, rt0.c0;
SELECT ALL rt0.c3, rt0.c1, t1.c0, rt0.c0 FROM rt1, v0, rt0, t1, t0 GROUP BY rt0.c3, rt0.c1, t1.c0, rt0.c0 HAVING MAX(MAX(COUNT(t1.c0))) UNION ALL SELECT rt0.c3, rt0.c1, t1.c0, rt0.c0 FROM rt1, v0, rt0, t1, t0 GROUP BY rt0.c3, rt0.c1, t1.c0, rt0.c0 HAVING (NOT (MAX(MAX(COUNT(t1.c0))))) UNION ALL SELECT rt0.c3, rt0.c1, t1.c0, rt0.c0 FROM rt1, v0, rt0, t1, t0 GROUP BY rt0.c3, rt0.c1, t1.c0, rt0.c0 HAVING ((MAX(MAX(COUNT(t1.c0)))) ISNULL);
SELECT rt0.c1, rt0.c0, t0.c2, rt1.c2, v0.c0, rt1.c1, rt1.c0, rt0.c4 FROM v0, t0, rt0, rt1;
SELECT rt0.c1, rt0.c0, t0.c2, rt1.c2, v0.c0, rt1.c1, rt1.c0, rt0.c4 FROM v0, t0, rt0, rt1 WHERE (((CASE rt0.c3  WHEN rt1.c3 THEN rt1.c0 END) NOT BETWEEN ((((rt0.c3, 0.6728682599997607, rt0.c1)) NOT BETWEEN ((t0.c0, -9.89860488E8, v0.c0)) AND ((t0.c1, v0.c0, rt1.c2)))) AND (((t0.c1)LIKE(rt0.c3))))) UNION ALL SELECT rt0.c1, rt0.c0, t0.c2, rt1.c2, v0.c0, rt1.c1, rt1.c0, rt0.c4 FROM v0, t0, rt0, rt1 WHERE ((NOT (((CASE rt0.c3  WHEN rt1.c3 THEN rt1.c0 END) NOT BETWEEN ((((rt0.c3, 0.6728682599997607, rt0.c1)) NOT BETWEEN ((t0.c0, -9.89860488E8, v0.c0)) AND ((t0.c1, v0.c0, rt1.c2)))) AND (((t0.c1)LIKE(rt0.c3))))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, t0.c2, rt1.c2, v0.c0, rt1.c1, rt1.c0, rt0.c4 FROM v0, t0, rt0, rt1 WHERE (((((CASE rt0.c3  WHEN rt1.c3 THEN rt1.c0 END) NOT BETWEEN ((((rt0.c3, 0.6728682599997607, rt0.c1)) NOT BETWEEN ((t0.c0, -9.89860488E8, v0.c0)) AND ((t0.c1, v0.c0, rt1.c2)))) AND (((t0.c1)LIKE(rt0.c3))))) ISNULL));
SELECT rt0.c1, rt0.c0, t0.c2, rt1.c2, v0.c0, rt1.c1, rt1.c0, rt0.c4 FROM v0, t0, rt0, rt1;
SELECT DISTINCT * FROM v0, rt1, t0, t1, rt0;
SELECT DISTINCT * FROM v0, rt1, t0, t1, rt0 WHERE ((~ ((NOT (t0.c1))))) UNION SELECT DISTINCT * FROM v0, rt1, t0, t1, rt0 WHERE ((NOT ((~ ((NOT (t0.c1))))))) UNION SELECT DISTINCT * FROM v0, rt1, t0, t1, rt0 WHERE ((((~ ((NOT (t0.c1))))) ISNULL));
SELECT DISTINCT * FROM v0, rt1, t0, t1, rt0;
SELECT rt0.c1, rt1.c1, rt0.c4, t1.c0, rt0.c3 FROM rt1, rt0, t1, v0, t0 GROUP BY rt0.c1, rt1.c1, rt0.c4, t1.c0, rt0.c3;
SELECT ALL rt0.c1, rt1.c1, rt0.c4, t1.c0, rt0.c3 FROM rt1, rt0, t1, v0, t0 WHERE ((((t0.c2 IN (v0.c0))) BETWEEN (CAST(rt1.c0 AS INTEGER)) AND ((rt0.c4 IN (rt0.c3, rt0.c4))))) GROUP BY rt0.c1, rt1.c1, rt0.c4, t1.c0, rt0.c3 UNION SELECT ALL rt0.c1, rt1.c1, rt0.c4, t1.c0, rt0.c3 FROM rt1, rt0, t1, v0, t0 WHERE ((NOT ((((t0.c2 IN (v0.c0))) BETWEEN (CAST(rt1.c0 AS INTEGER)) AND ((rt0.c4 IN (rt0.c3, rt0.c4))))))) GROUP BY rt0.c1, rt1.c1, rt0.c4, t1.c0, rt0.c3 UNION SELECT rt0.c1, rt1.c1, rt0.c4, t1.c0, rt0.c3 FROM rt1, rt0, t1, v0, t0 WHERE ((((((t0.c2 IN (v0.c0))) BETWEEN (CAST(rt1.c0 AS INTEGER)) AND ((rt0.c4 IN (rt0.c3, rt0.c4))))) ISNULL)) GROUP BY rt0.c1, rt1.c1, rt0.c4, t1.c0, rt0.c3;
SELECT rt0.c1, rt1.c1, rt0.c4, t1.c0, rt0.c3 FROM rt1, rt0, t1, v0, t0 GROUP BY rt0.c1, rt1.c1, rt0.c4, t1.c0, rt0.c3;
SELECT t0.c1 FROM t0 GROUP BY t0.c1;
SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1 HAVING MAX((~ (COUNT(*)))) UNION ALL SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1 HAVING (NOT (MAX((~ (COUNT(*)))))) UNION ALL SELECT t0.c1 FROM t0 GROUP BY t0.c1 HAVING ((MAX((~ (COUNT(*))))) ISNULL);
SELECT ALL rt1.c1 FROM rt1;
SELECT rt1.c1 FROM rt1 WHERE (NULL) UNION ALL SELECT ALL rt1.c1 FROM rt1 WHERE ((NOT (NULL))) UNION ALL SELECT rt1.c1 FROM rt1 WHERE (((NULL) ISNULL));
SELECT ALL rt1.c1 FROM rt1;
SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN rt1 ON ((((CASE rt1.c2  WHEN t0.c1 THEN rt1.c0 WHEN NULL THEN rt1.c2 WHEN t0.c1 THEN rt1.c1 ELSE rt1.c0 END)OR(((rt1.c3)IS NOT(t0.c1)))))OR(((t0.c1) NOT BETWEEN (v0.c0) AND (t0.c0)))) FULL OUTER JOIN v0 ON IFNULL(((((((((rt1.c1)AND(rt1.c1)))OR(rt1.c1)))AND(rt1.c1)))AND(t0.c2)), rt1.c1 COLLATE RTRIM);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))<((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))<((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))<((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL t0.c2, v0.c0, t0.c1, t0.c0 FROM v0 NATURAL JOIN t0 GROUP BY t0.c2, v0.c0, t0.c1, t0.c0;
SELECT ALL t0.c2, v0.c0, t0.c1, t0.c0 FROM v0 NATURAL JOIN t0 GROUP BY t0.c2, v0.c0, t0.c1, t0.c0 HAVING AVG(MIN(MIN(t0.c2))) UNION ALL SELECT t0.c2, v0.c0, t0.c1, t0.c0 FROM v0 NATURAL JOIN t0 GROUP BY t0.c2, v0.c0, t0.c1, t0.c0 HAVING (NOT (AVG(MIN(MIN(t0.c2))))) UNION ALL SELECT t0.c2, v0.c0, t0.c1, t0.c0 FROM v0 NATURAL JOIN t0 GROUP BY t0.c2, v0.c0, t0.c1, t0.c0 HAVING ((AVG(MIN(MIN(t0.c2)))) ISNULL);
SELECT ALL t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE ((((NULL IN ())) NOT NULL)) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((((NULL IN ())) NOT NULL)))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((((((NULL IN ())) NOT NULL)) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT * FROM t1 INDEXED BY i55 CROSS JOIN rt1 ON LOWER(DISTINCT CASE WHEN t1.c0 THEN NULL WHEN t1.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c3 END);
SELECT rt1.c2, rt1.c1, t0.c0, rt1.c3, t1.c0, rt1.c0, t0.c2 FROM rt1, t0, t1, rt0 GROUP BY rt1.c2, rt1.c1, t0.c0, rt1.c3, t1.c0, rt1.c0, t0.c2;
SELECT ALL rt1.c2, rt1.c1, t0.c0, rt1.c3, t1.c0, rt1.c0, t0.c2 FROM rt1, t0, t1, rt0 WHERE ((((- (t1.c0)))=((+ (rt0.c0))))) GROUP BY rt1.c2, rt1.c1, t0.c0, rt1.c3, t1.c0, rt1.c0, t0.c2 UNION SELECT rt1.c2, rt1.c1, t0.c0, rt1.c3, t1.c0, rt1.c0, t0.c2 FROM rt1, t0, t1, rt0 WHERE ((NOT ((((- (t1.c0)))==((+ (rt0.c0))))))) GROUP BY rt1.c2, rt1.c1, t0.c0, rt1.c3, t1.c0, rt1.c0, t0.c2 UNION SELECT ALL rt1.c2, rt1.c1, t0.c0, rt1.c3, t1.c0, rt1.c0, t0.c2 FROM rt1, t0, t1, rt0 WHERE ((((((- (t1.c0)))=((+ (rt0.c0))))) ISNULL)) GROUP BY rt1.c2, rt1.c1, t0.c0, rt1.c3, t1.c0, rt1.c0, t0.c2;
SELECT rt1.c2, rt1.c1, t0.c0, rt1.c3, t1.c0, rt1.c0, t0.c2 FROM rt1, t0, t1, rt0 GROUP BY rt1.c2, rt1.c1, t0.c0, rt1.c3, t1.c0, rt1.c0, t0.c2;
SELECT t0.c0, t1.c0, rt0.c4 FROM rt1, v0, t1, rt0, t0 GROUP BY t0.c0, t1.c0, rt0.c4;
SELECT ALL t0.c0, t1.c0, rt0.c4 FROM rt1, v0, t1, rt0, t0 GROUP BY t0.c0, t1.c0, rt0.c4 HAVING MAX(MAX(rt0.c3)) UNION ALL SELECT t0.c0, t1.c0, rt0.c4 FROM rt1, v0, t1, rt0, t0 GROUP BY t0.c0, t1.c0, rt0.c4 HAVING (NOT (MAX(MAX(rt0.c3)))) UNION ALL SELECT t0.c0, t1.c0, rt0.c4 FROM rt1, v0, t1, rt0, t0 GROUP BY t0.c0, t1.c0, rt0.c4 HAVING ((MAX(MAX(rt0.c3))) ISNULL);
SELECT ALL * FROM rt1 RIGHT OUTER JOIN t0 ON 'qq漈<PXSU' RIGHT OUTER JOIN t1 ON (((rt1.c2)||(t0.c2)) IN (((rt1.c1)/(t0.c2))));
SELECT ALL * FROM rt1 RIGHT OUTER JOIN t0 ON 'qq漈<PXSU' RIGHT OUTER JOIN t1 ON (((rt1.c2)||(t0.c2)) IN (((rt1.c1)/(t0.c2)))) WHERE (CASE CASE rt1.c2  WHEN 0.2418367532929302 THEN rt1.c1 ELSE t0.c1 END  WHEN 1171025131 THEN ((rt1.c2)<(rt1.c0)) END) UNION ALL SELECT ALL * FROM rt1 RIGHT OUTER JOIN t0 ON 'qq漈<PXSU' RIGHT OUTER JOIN t1 ON (((rt1.c2)||(t0.c2)) IN (((rt1.c1)/(t0.c2)))) WHERE ((NOT (CASE CASE rt1.c2  WHEN 0.2418367532929302 THEN rt1.c1 ELSE t0.c1 END  WHEN 1171025131 THEN ((rt1.c2)<(rt1.c0)) END))) UNION ALL SELECT ALL * FROM rt1 RIGHT OUTER JOIN t0 ON 'qq漈<PXSU' RIGHT OUTER JOIN t1 ON (((rt1.c2)||(t0.c2)) IN (((rt1.c1)/(t0.c2)))) WHERE (((CASE CASE rt1.c2  WHEN 0.2418367532929302 THEN rt1.c1 ELSE t0.c1 END  WHEN 1171025131 THEN ((rt1.c2)<(rt1.c0)) END) ISNULL));
SELECT ALL * FROM rt1 RIGHT OUTER JOIN t0 ON 'qq漈<PXSU' RIGHT OUTER JOIN t1 ON (((rt1.c2)||(t0.c2)) IN (((rt1.c1)/(t0.c2))));
SELECT DISTINCT * FROM v0, t0;
SELECT DISTINCT * FROM v0, t0 WHERE ((~ (((v0.c0)/(t0.c1))))) UNION SELECT DISTINCT * FROM v0, t0 WHERE ((NOT ((~ (((v0.c0)/(t0.c1))))))) UNION SELECT DISTINCT * FROM v0, t0 WHERE ((((~ (((v0.c0)/(t0.c1))))) ISNULL));
SELECT DISTINCT * FROM v0, t0;
SELECT rt1.c1, t1.c0, v0.c0, rt0.c0 FROM t0, rt0, t1 RIGHT OUTER JOIN v0 ON CAST((((t0.c1)) NOT BETWEEN ((v0.c0)) AND ((rt1.c2))) AS TEXT) RIGHT OUTER JOIN rt1 ON (((((rt0.c0)) BETWEEN ((196627645)) AND ((rt0.c1))))GLOB(((rt1.c3)*(rt1.c3)))) GROUP BY rt1.c1, t1.c0, v0.c0, rt0.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING CAST(MIN(t1.c0) AS NUMERIC) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (CAST(MIN(t1.c0) AS NUMERIC))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((CAST(MIN(t1.c0) AS NUMERIC)) ISNULL);
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING CAST(MIN(t1.c0) AS NUMERIC) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (CAST(MIN(t1.c0) AS NUMERIC))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((CAST(MIN(t1.c0) AS NUMERIC)) ISNULL);
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL * FROM t1, rt1 LEFT OUTER JOIN t0 ON rt1.c2 FULL OUTER JOIN v0 ON CASE ((t1.c0) IS FALSE)  WHEN (~ (rt1.c0)) THEN rt1.c1 ELSE rt1.c0 END;
SELECT * FROM t1, rt1 LEFT OUTER JOIN t0 ON rt1.c2 FULL OUTER JOIN v0 ON CASE ((t1.c0) IS FALSE)  WHEN (~ (rt1.c0)) THEN rt1.c1 ELSE rt1.c0 END WHERE ((((((t0.c1) BETWEEN (rt1.c3) AND ('1338271226'))))<>((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2)))))) UNION ALL SELECT ALL * FROM t1, rt1 LEFT OUTER JOIN t0 ON rt1.c2 FULL OUTER JOIN v0 ON CASE ((t1.c0) IS FALSE)  WHEN (~ (rt1.c0)) THEN rt1.c1 ELSE rt1.c0 END WHERE ((NOT ((((((t0.c1) BETWEEN (rt1.c3) AND ('1338271226'))))!=((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2)))))))) UNION ALL SELECT ALL * FROM t1, rt1 LEFT OUTER JOIN t0 ON rt1.c2 FULL OUTER JOIN v0 ON CASE ((t1.c0) IS FALSE)  WHEN (~ (rt1.c0)) THEN rt1.c1 ELSE rt1.c0 END WHERE ((((((((t0.c1) BETWEEN (rt1.c3) AND ('1338271226'))))!=((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2)))))) ISNULL));
SELECT ALL * FROM t1, rt1 LEFT OUTER JOIN t0 ON rt1.c2 FULL OUTER JOIN v0 ON CASE ((t1.c0) IS FALSE)  WHEN (~ (rt1.c0)) THEN rt1.c1 ELSE rt1.c0 END;
SELECT DISTINCT t1.c0, rt0.c1, rt1.c3, rt0.c3, rt1.c2 FROM rt1, v0, rt0, t1;
SELECT DISTINCT t1.c0, rt0.c1, rt1.c3, rt0.c3, rt1.c2 FROM rt1, v0, rt0, t1 WHERE (((((rt0.c1)OR(((rt0.c3) BETWEEN (rt1.c3) AND (rt1.c3)))))AND(((rt0.c3)>=(rt1.c3))))) UNION SELECT DISTINCT t1.c0, rt0.c1, rt1.c3, rt0.c3, rt1.c2 FROM rt1, v0, rt0, t1 WHERE ((NOT (((((rt0.c1)OR(((rt0.c3) BETWEEN (rt1.c3) AND (rt1.c3)))))AND(((rt0.c3)>=(rt1.c3))))))) UNION SELECT DISTINCT t1.c0, rt0.c1, rt1.c3, rt0.c3, rt1.c2 FROM rt1, v0, rt0, t1 WHERE (((((((rt0.c1)OR(((rt0.c3) BETWEEN (rt1.c3) AND (rt1.c3)))))AND(((rt0.c3)>=(rt1.c3))))) ISNULL));
SELECT DISTINCT t1.c0, rt0.c1, rt1.c3, rt0.c3, rt1.c2 FROM rt1, v0, rt0, t1;
SELECT rt0.c3, rt1.c1 FROM v0 LEFT OUTER JOIN t0 ON ((((rt1.c3) NOTNULL))<(((0.23005774667391488) NOT NULL))) FULL OUTER JOIN rt1 ON (0.4978876109242184 IN ((rt0.c2 IN ()))) CROSS JOIN rt0 ON TRIM(DISTINCT CAST(rt0.c3 AS TEXT)) GROUP BY rt0.c3, rt1.c1;
SELECT ALL t0.c0, rt1.c3, rt0.c3, t1.c0, rt0.c0, rt0.c2 FROM t0, v0, rt1 RIGHT OUTER JOIN rt0 ON ((((rt1.c1 COLLATE RTRIM)AND(((rt1.c1) NOTNULL))))AND((NOT (x'')))) INNER JOIN t1 ON ((NULL) BETWEEN ((((t0.c2))>((rt1.c3)))) AND (((rt1.c2) NOTNULL))) GROUP BY t0.c0, rt1.c3, rt0.c3, t1.c0, rt0.c0, rt0.c2;
SELECT t0.c0, rt1.c3, rt0.c3, t1.c0, rt0.c0, rt0.c2 FROM t0, v0, rt1 RIGHT OUTER JOIN rt0 ON ((((rt1.c1 COLLATE RTRIM)AND(((rt1.c1) NOTNULL))))AND((NOT (x'')))) INNER JOIN t1 ON ((NULL) BETWEEN ((((t0.c2))>((rt1.c3)))) AND (((rt1.c2) NOTNULL))) GROUP BY t0.c0, rt1.c3, rt0.c3, t1.c0, rt0.c0, rt0.c2 HAVING TOTAL(COUNT(TOTAL(MIN(0.6631758488288385)))) UNION ALL SELECT ALL t0.c0, rt1.c3, rt0.c3, t1.c0, rt0.c0, rt0.c2 FROM t0, v0, rt1 RIGHT OUTER JOIN rt0 ON ((((rt1.c1 COLLATE RTRIM)AND(((rt1.c1) NOTNULL))))AND((NOT (x'')))) INNER JOIN t1 ON ((NULL) BETWEEN ((((t0.c2))>((rt1.c3)))) AND (((rt1.c2) NOTNULL))) GROUP BY t0.c0, rt1.c3, rt0.c3, t1.c0, rt0.c0, rt0.c2 HAVING (NOT (TOTAL(COUNT(TOTAL(MIN(0.6631758488288385)))))) UNION ALL SELECT ALL t0.c0, rt1.c3, rt0.c3, t1.c0, rt0.c0, rt0.c2 FROM t0, v0, rt1 RIGHT OUTER JOIN rt0 ON ((((rt1.c1 COLLATE RTRIM)AND(((rt1.c1) NOTNULL))))AND((NOT (x'')))) INNER JOIN t1 ON ((NULL) BETWEEN ((((t0.c2))>((rt1.c3)))) AND (((rt1.c2) NOTNULL))) GROUP BY t0.c0, rt1.c3, rt0.c3, t1.c0, rt0.c0, rt0.c2 HAVING ((TOTAL(COUNT(TOTAL(MIN(0.6631758488288385))))) ISNULL);
SELECT MIN(((((rt1.c3)GLOB(rt1.c0)))<>(x''))) FROM rt1, v0 ORDER BY (CAST('' AS INTEGER) IN ()) ASC;
SELECT v0.c0, rt0.c2, rt1.c2, rt0.c1, rt1.c3 FROM rt1, v0, rt0;
SELECT ALL v0.c0, rt0.c2, rt1.c2, rt0.c1, rt1.c3 FROM rt1, v0, rt0 WHERE ((((((((((1691048108)OR(v0.c0)))AND(rt0.c2)))OR(rt1.c0)))OR(rt0.c4)) IN (-1357205383, v0.c0 COLLATE RTRIM))) UNION ALL SELECT v0.c0, rt0.c2, rt1.c2, rt0.c1, rt1.c3 FROM rt1, v0, rt0 WHERE ((NOT ((((((((((1691048108)OR(v0.c0)))AND(rt0.c2)))OR(rt1.c0)))OR(rt0.c4)) IN (-1357205383, v0.c0 COLLATE RTRIM))))) UNION ALL SELECT ALL v0.c0, rt0.c2, rt1.c2, rt0.c1, rt1.c3 FROM rt1, v0, rt0 WHERE ((((((((((((1691048108)OR(v0.c0)))AND(rt0.c2)))OR(rt1.c0)))OR(rt0.c4)) IN (-1357205383, v0.c0 COLLATE RTRIM))) ISNULL));
SELECT v0.c0, rt0.c2, rt1.c2, rt0.c1, rt1.c3 FROM rt1, v0, rt0;
SELECT DISTINCT rt1.c3, t0.c2, t0.c1 FROM t1, t0, rt1;
SELECT DISTINCT rt1.c3, t0.c2, t0.c1 FROM t1, t0, rt1 WHERE (CAST((((rt1.c1)) BETWEEN ((t0.c1)) AND ((t0.c0))) AS INTEGER)) UNION SELECT DISTINCT rt1.c3, t0.c2, t0.c1 FROM t1, t0, rt1 WHERE ((NOT (CAST((((rt1.c1)) BETWEEN ((t0.c1)) AND ((t0.c0))) AS INTEGER)))) UNION SELECT DISTINCT rt1.c3, t0.c2, t0.c1 FROM t1, t0, rt1 WHERE (((CAST((((rt1.c1)) BETWEEN ((t0.c1)) AND ((t0.c0))) AS INTEGER)) ISNULL));
SELECT DISTINCT rt1.c3, t0.c2, t0.c1 FROM t1, t0, rt1;
SELECT ALL rt1.c0, rt1.c1, rt0.c3, t0.c0, rt0.c4, t1.c0, rt0.c0, t0.c1, v0.c0, rt1.c3 FROM t1, v0, t0, rt1 FULL OUTER JOIN rt0 ON rt0.c4 GROUP BY rt1.c0, rt1.c1, rt0.c3, t0.c0, rt0.c4, t1.c0, rt0.c0, t0.c1, v0.c0, rt1.c3;
SELECT rt1.c0, rt1.c1, rt0.c3, t0.c0, rt0.c4, t1.c0, rt0.c0, t0.c1, v0.c0, rt1.c3 FROM t1, v0, t0, rt1 FULL OUTER JOIN rt0 ON rt0.c4 WHERE (((rt0.c0 IN ()) IN ())) GROUP BY rt1.c0, rt1.c1, rt0.c3, t0.c0, rt0.c4, t1.c0, rt0.c0, t0.c1, v0.c0, rt1.c3 UNION SELECT ALL rt1.c0, rt1.c1, rt0.c3, t0.c0, rt0.c4, t1.c0, rt0.c0, t0.c1, v0.c0, rt1.c3 FROM t1, v0, t0, rt1 FULL OUTER JOIN rt0 ON rt0.c4 WHERE ((NOT (((rt0.c0 IN ()) IN ())))) GROUP BY rt1.c0, rt1.c1, rt0.c3, t0.c0, rt0.c4, t1.c0, rt0.c0, t0.c1, v0.c0, rt1.c3 UNION SELECT ALL rt1.c0, rt1.c1, rt0.c3, t0.c0, rt0.c4, t1.c0, rt0.c0, t0.c1, v0.c0, rt1.c3 FROM t1, v0, t0, rt1 NOT INDEXED FULL OUTER JOIN rt0 ON rt0.c4 WHERE (((((rt0.c0 IN ()) IN ())) ISNULL)) GROUP BY rt1.c0, rt1.c1, rt0.c3, t0.c0, rt0.c4, t1.c0, rt0.c0, t0.c1, v0.c0, rt1.c3;
SELECT ALL rt1.c0, rt1.c1, rt0.c3, t0.c0, rt0.c4, t1.c0, rt0.c0, t0.c1, v0.c0, rt1.c3 FROM t1, v0, t0, rt1 FULL OUTER JOIN rt0 ON rt0.c4 GROUP BY rt1.c0, rt1.c1, rt0.c3, t0.c0, rt0.c4, t1.c0, rt0.c0, t0.c1, v0.c0, rt1.c3;
SELECT ALL rt0.c1 FROM t0 CROSS JOIN t1 ON CASE WHEN ((((t0.c2)OR(t1.c0)))AND(rt0.c4)) THEN ((rt0.c0)%(t0.c1)) WHEN ((rt0.c3)>(rt0.c0)) THEN (('1565144667') IS TRUE) WHEN t0.c1 THEN ((t1.c0)LIKE(t0.c2)) ELSE t0.c1 END FULL OUTER JOIN rt0 ON (((- (rt0.c2)))!=((- (rt0.c0)))) GROUP BY rt0.c1;
SELECT t1.c0 FROM t1;
SELECT ALL t1.c0 FROM t1 WHERE (((CAST(t1.c0 AS REAL))<(t1.c0 COLLATE BINARY))) UNION ALL SELECT ALL t1.c0 FROM t1 WHERE ((NOT (((CAST(t1.c0 AS REAL))<(t1.c0 COLLATE BINARY))))) UNION ALL SELECT ALL t1.c0 FROM t1 WHERE (((((CAST(t1.c0 AS REAL))<(t1.c0 COLLATE BINARY))) ISNULL));
SELECT t1.c0 FROM t1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CAST(((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c1)) AS INTEGER)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CAST(((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c1)) AS INTEGER)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CAST(((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c1)) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT t1.c0, rt0.c3, t0.c0, t0.c1, rt1.c0, rt0.c4, rt0.c2, rt1.c2, rt1.c3, rt0.c0 FROM v0 INDEXED BY i55, t1, rt1 RIGHT OUTER JOIN t0 ON ((((((((t0.c0)OR(v0.c0)))OR(rt1.c3)))AND(v0.c0)))OR(rt1.c2)) COLLATE BINARY FULL OUTER JOIN rt0 ON ((((((rt1.c0) IS TRUE))AND(((rt0.c3)AND(rt0.c1)))))AND(((rt1.c2) NOT BETWEEN (rt1.c0) AND (NULL)))) GROUP BY t1.c0, rt0.c3, t0.c0, t0.c1, rt1.c0, rt0.c4, rt0.c2, rt1.c2, rt1.c3, rt0.c0;
SELECT ALL rt1.c1, t0.c1, rt1.c2, v0.c0, rt0.c4, rt0.c1, rt1.c0, t0.c0, rt0.c3, t1.c0, rt0.c0, rt1.c3, t0.c2, rt0.c2 FROM rt1, t0, t1, v0 INDEXED BY i16, rt0 GROUP BY rt1.c1, t0.c1, rt1.c2, v0.c0, rt0.c4, rt0.c1, rt1.c0, t0.c0, rt0.c3, t1.c0, rt0.c0, rt1.c3, t0.c2, rt0.c2;
SELECT ALL * FROM t0, rt0, v0, t1, rt1;
SELECT ALL * FROM t0, rt0, v0, t1, rt1 WHERE (((((((((CASE rt0.c4  WHEN t0.c1 THEN '*Wp' ELSE t1.c0 END)AND((NOT (t0.c2)))))OR(((((((((rt0.c1)OR(t0.c1)))OR(rt1.c0)))AND(t0.c1)))OR(t0.c2)))))AND((rt1.c2 IN ()))))OR((((rt0.c0)) NOT BETWEEN ((rt1.c1)) AND ((v0.c0)))))) UNION ALL SELECT ALL * FROM t0, rt0, v0, t1, rt1 WHERE ((NOT (((((((((CASE rt0.c4  WHEN t0.c1 THEN '*Wp' ELSE t1.c0 END)AND((NOT (t0.c2)))))OR(((((((((rt0.c1)OR(t0.c1)))OR(rt1.c0)))AND(t0.c1)))OR(t0.c2)))))AND((rt1.c2 IN ()))))OR((((rt0.c0)) NOT BETWEEN ((rt1.c1)) AND ((v0.c0)))))))) UNION ALL SELECT ALL * FROM t0, rt0, v0, t1, rt1 WHERE (((((((((((CASE rt0.c4  WHEN t0.c1 THEN '*Wp' ELSE t1.c0 END)AND((NOT (t0.c2)))))OR(((((((((rt0.c1)OR(t0.c1)))OR(rt1.c0)))AND(t0.c1)))OR(t0.c2)))))AND((rt1.c2 IN ()))))OR((((rt0.c0)) NOT BETWEEN ((rt1.c1)) AND ((v0.c0)))))) ISNULL));
SELECT ALL * FROM t0, rt0, v0, t1, rt1;
SELECT DISTINCT rt1.c1, rt1.c0 FROM t1, rt1, v0;
SELECT DISTINCT rt1.c1, rt1.c0 FROM t1, rt1, v0 WHERE (rt1.c1) UNION SELECT DISTINCT rt1.c1, rt1.c0 FROM t1, rt1, v0 WHERE ((NOT (rt1.c1))) UNION SELECT DISTINCT rt1.c1, rt1.c0 FROM t1, rt1, v0 WHERE (((rt1.c1) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c0 FROM t1, rt1, v0;
SELECT t1.c0, rt0.c4, rt0.c1 FROM rt0, t1 GROUP BY t1.c0, rt0.c4, rt0.c1;
SELECT t1.c0, rt0.c4, rt0.c1 FROM rt0, t1 WHERE (((NULL) IS FALSE)) GROUP BY t1.c0, rt0.c4, rt0.c1 UNION SELECT ALL t1.c0, rt0.c4, rt0.c1 FROM rt0, t1 WHERE ((NOT (((NULL) IS FALSE)))) GROUP BY t1.c0, rt0.c4, rt0.c1 UNION SELECT ALL t1.c0, rt0.c4, rt0.c1 FROM rt0, t1 WHERE (((((NULL) IS FALSE)) ISNULL)) GROUP BY t1.c0, rt0.c4, rt0.c1;
SELECT t1.c0, rt0.c4, rt0.c1 FROM rt0, t1 GROUP BY t1.c0, rt0.c4, rt0.c1;
SELECT t0.c0, v0.c0, t0.c1, t1.c0, t0.c2 FROM v0, t1, t0 NOT INDEXED GROUP BY t0.c0, v0.c0, t0.c1, t1.c0, t0.c2;
SELECT t0.c0, v0.c0, t0.c1, t1.c0, t0.c2 FROM v0, t1, t0 GROUP BY t0.c0, v0.c0, t0.c1, t1.c0, t0.c2 HAVING MAX(COUNT(t0.c2)) UNION ALL SELECT t0.c0, v0.c0, t0.c1, t1.c0, t0.c2 FROM v0, t1, t0 GROUP BY t0.c0, v0.c0, t0.c1, t1.c0, t0.c2 HAVING (NOT (MAX(COUNT(t0.c2)))) UNION ALL SELECT ALL t0.c0, v0.c0, t0.c1, t1.c0, t0.c2 FROM v0, t1, t0 GROUP BY t0.c0, v0.c0, t0.c1, t1.c0, t0.c2 HAVING ((MAX(COUNT(t0.c2))) ISNULL);
SELECT ALL TOTAL((((('1053559561')AND((((rt1.c2, t1.c0, t1.c0)) NOT BETWEEN ((0.7821697322123862, t1.c0, t1.c0)) AND ((t1.c0, rt1.c0, rt1.c2))))))AND(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2))))) FROM rt1, v0, t1 ORDER BY (NOT (CAST(t1.c0 AS NUMERIC)))  NULLS FIRST;
SELECT ALL * FROM rt0, t1, v0;
SELECT * FROM rt0, t1, v0 WHERE ((((0.648132297523446) NOT BETWEEN (rt0.c2) AND (rt0.c2)) IN ())) UNION ALL SELECT ALL * FROM rt0, t1, v0 WHERE ((NOT ((((0.648132297523446) NOT BETWEEN (rt0.c2) AND (rt0.c2)) IN ())))) UNION ALL SELECT ALL * FROM rt0, t1, v0 WHERE ((((((0.648132297523446) NOT BETWEEN (rt0.c2) AND (rt0.c2)) IN ())) ISNULL));
SELECT ALL * FROM rt0, t1, v0;
SELECT DISTINCT * FROM v0, t0;
SELECT DISTINCT * FROM v0, t0 WHERE (CASE ((t0.c2)%(t0.c2))  WHEN (~ (v0.c0)) THEN CAST('蚴' AS NUMERIC) END) UNION SELECT DISTINCT * FROM v0, t0 WHERE ((NOT (CASE ((t0.c2)%(t0.c2))  WHEN (~ (v0.c0)) THEN CAST('蚴' AS NUMERIC) END))) UNION SELECT DISTINCT * FROM v0, t0 WHERE (((CASE ((t0.c2)%(t0.c2))  WHEN (~ (v0.c0)) THEN CAST('蚴' AS NUMERIC) END) ISNULL));
SELECT DISTINCT * FROM v0, t0;
SELECT ALL t1.c0 FROM v0 LEFT OUTER JOIN t1 ON t1.c0 GROUP BY t1.c0;
SELECT t1.c0 FROM v0 LEFT OUTER JOIN t1 ON t1.c0 WHERE (TRIM(DISTINCT CAST(t1.c0 AS INTEGER))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM v0 LEFT OUTER JOIN t1 ON t1.c0 WHERE ((NOT (TRIM(DISTINCT CAST(t1.c0 AS INTEGER))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM v0 LEFT OUTER JOIN t1 ON t1.c0 WHERE (((TRIM(DISTINCT CAST(t1.c0 AS INTEGER))) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM v0 LEFT OUTER JOIN t1 ON t1.c0 GROUP BY t1.c0;
SELECT ALL rt0.c3, rt0.c4, rt0.c1 FROM t0, rt0, rt1, t1, v0 GROUP BY rt0.c3, rt0.c4, rt0.c1;
SELECT rt0.c3, rt0.c4, rt0.c1 FROM t0, rt0, rt1, t1, v0 GROUP BY rt0.c3, rt0.c4, rt0.c1 HAVING AVG(rtreenode(AVG(COUNT(t0.c2)), COUNT(SUM(AVG(COUNT(t0.c1)))))) UNION ALL SELECT ALL rt0.c3, rt0.c4, rt0.c1 FROM t0, rt0, rt1, t1, v0 GROUP BY rt0.c3, rt0.c4, rt0.c1 HAVING (NOT (AVG(rtreenode(AVG(COUNT(t0.c2)), COUNT(SUM(AVG(COUNT(t0.c1)))))))) UNION ALL SELECT ALL rt0.c3, rt0.c4, rt0.c1 FROM t0, rt0, rt1, t1, v0 GROUP BY rt0.c3, rt0.c4, rt0.c1 HAVING ((AVG(rtreenode(AVG(COUNT(t0.c2)), COUNT(SUM(AVG(COUNT(t0.c1))))))) ISNULL);
SELECT ALL rt0.c4, rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0;
SELECT ALL rt0.c4, rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0 WHERE (CASE WHEN (rt0.c2 IN ()) THEN ((rt0.c1) NOTNULL) WHEN ((rt0.c1)>>('-1e500')) THEN '0.6728682599997607' WHEN ((((((((((((NULL)OR(rt0.c2)))AND(rt0.c3)))AND(rt0.c4)))AND(rt0.c2)))AND(rt0.c3)))OR(rt0.c1)) THEN ((rt0.c3)=('1850311176')) END) UNION ALL SELECT ALL rt0.c4, rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0 WHERE ((NOT (CASE WHEN (rt0.c2 IN ()) THEN ((rt0.c1) NOTNULL) WHEN ((rt0.c1)>>('-1e500')) THEN '0.6728682599997607' WHEN ((((((((((((NULL)OR(rt0.c2)))AND(rt0.c3)))AND(rt0.c4)))AND(rt0.c2)))AND(rt0.c3)))OR(rt0.c1)) THEN ((rt0.c3)==('1850311176')) END))) UNION ALL SELECT rt0.c4, rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0 WHERE (((CASE WHEN (rt0.c2 IN ()) THEN ((rt0.c1) NOTNULL) WHEN ((rt0.c1)>>('-1e500')) THEN '0.6728682599997607' WHEN ((((((((((((NULL)OR(rt0.c2)))AND(rt0.c3)))AND(rt0.c4)))AND(rt0.c2)))AND(rt0.c3)))OR(rt0.c1)) THEN ((rt0.c3)=('1850311176')) END) ISNULL));
SELECT ALL rt0.c4, rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0;
SELECT DISTINCT * FROM v0 CROSS JOIN rt0 ON INSTR((rt0.c4 IN (rt0.c2)), CAST(t0.c0 AS TEXT)) CROSS JOIN t1 ON (((rt0.c2))<=(((((t0.c1))<=((t0.c2)))))) RIGHT OUTER JOIN t0 ON v0.c0;
SELECT ALL rt1.c1, rt1.c0, rt1.c3 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c3;
SELECT ALL rt1.c1, rt1.c0, rt1.c3 FROM rt1 NOT INDEXED WHERE (((TRIM(rt1.c3)) NOT BETWEEN (CAST(NULL AS NUMERIC)) AND (CAST(rt1.c3 AS NUMERIC)))) GROUP BY rt1.c1, rt1.c0, rt1.c3 UNION SELECT rt1.c1, rt1.c0, rt1.c3 FROM rt1 WHERE ((NOT (((TRIM(rt1.c3)) NOT BETWEEN (CAST(NULL AS NUMERIC)) AND (CAST(rt1.c3 AS NUMERIC)))))) GROUP BY rt1.c1, rt1.c0, rt1.c3 UNION SELECT rt1.c1, rt1.c0, rt1.c3 FROM rt1 NOT INDEXED WHERE (((((TRIM(rt1.c3)) NOT BETWEEN (CAST(NULL AS NUMERIC)) AND (CAST(rt1.c3 AS NUMERIC)))) ISNULL)) GROUP BY rt1.c1, rt1.c0, rt1.c3;
SELECT ALL rt1.c1, rt1.c0, rt1.c3 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c3;
SELECT t0.c0, rt1.c0, rt0.c0, rt1.c1, t0.c1, rt0.c3, t0.c2, rt1.c2, rt0.c1 FROM t0, rt0, rt1 GROUP BY t0.c0, rt1.c0, rt0.c0, rt1.c1, t0.c1, rt0.c3, t0.c2, rt1.c2, rt0.c1;
SELECT t0.c0, rt1.c0, rt0.c0, rt1.c1, t0.c1, rt0.c3, t0.c2, rt1.c2, rt0.c1 FROM t0, rt0, rt1 GROUP BY t0.c0, rt1.c0, rt0.c0, rt1.c1, t0.c1, rt0.c3, t0.c2, rt1.c2, rt0.c1 HAVING AVG(GROUP_CONCAT(MIN(AVG(GROUP_CONCAT(rt0.c3))))) UNION ALL SELECT ALL t0.c0, rt1.c0, rt0.c0, rt1.c1, t0.c1, rt0.c3, t0.c2, rt1.c2, rt0.c1 FROM t0, rt0 NOT INDEXED, rt1 GROUP BY t0.c0, rt1.c0, rt0.c0, rt1.c1, t0.c1, rt0.c3, t0.c2, rt1.c2, rt0.c1 HAVING (NOT (AVG(GROUP_CONCAT(MIN(AVG(GROUP_CONCAT(rt0.c3))))))) UNION ALL SELECT ALL t0.c0, rt1.c0, rt0.c0, rt1.c1, t0.c1, rt0.c3, t0.c2, rt1.c2, rt0.c1 FROM t0, rt0, rt1 GROUP BY t0.c0, rt1.c0, rt0.c0, rt1.c1, t0.c1, rt0.c3, t0.c2, rt1.c2, rt0.c1 HAVING ((AVG(GROUP_CONCAT(MIN(AVG(GROUP_CONCAT(rt0.c3)))))) ISNULL);
SELECT t1.c0, rt0.c4, t0.c1, rt0.c3, rt0.c2, t0.c2, rt1.c3, rt0.c1, rt0.c0, rt1.c0 FROM t0, rt0, t1, rt1, v0;
SELECT ALL t1.c0, rt0.c4, t0.c1, rt0.c3, rt0.c2, t0.c2, rt1.c3, rt0.c1, rt0.c0, rt1.c0 FROM t0, rt0, t1, rt1, v0 WHERE (rt0.c0) UNION ALL SELECT t1.c0, rt0.c4, t0.c1, rt0.c3, rt0.c2, t0.c2, rt1.c3, rt0.c1, rt0.c0, rt1.c0 FROM t0, rt0, t1, rt1, v0 WHERE ((NOT (rt0.c0))) UNION ALL SELECT ALL t1.c0, rt0.c4, t0.c1, rt0.c3, rt0.c2, t0.c2, rt1.c3, rt0.c1, rt0.c0, rt1.c0 FROM t0 NOT INDEXED, rt0, t1, rt1, v0 WHERE (((rt0.c0) ISNULL));
SELECT t1.c0, rt0.c4, t0.c1, rt0.c3, rt0.c2, t0.c2, rt1.c3, rt0.c1, rt0.c0, rt1.c0 FROM t0, rt0, t1, rt1, v0;
SELECT DISTINCT * FROM t1, v0, rt1;
SELECT DISTINCT * FROM t1, v0, rt1 WHERE (x'') UNION SELECT DISTINCT * FROM t1, v0, rt1 WHERE ((NOT (x''))) UNION SELECT DISTINCT * FROM t1, v0, rt1 WHERE (((x'') ISNULL));
SELECT DISTINCT * FROM t1, v0, rt1;
SELECT rt1.c0, rt0.c2, rt0.c3, rt0.c1, rt1.c1, t1.c0, rt0.c4, rt1.c3, rt1.c2 FROM rt1, t1, rt0, v0 GROUP BY rt1.c0, rt0.c2, rt0.c3, rt0.c1, rt1.c1, t1.c0, rt0.c4, rt1.c3, rt1.c2;
SELECT ALL rt1.c0, rt0.c2, rt0.c3, rt0.c1, rt1.c1, t1.c0, rt0.c4, rt1.c3, rt1.c2 FROM rt1, t1, rt0, v0 WHERE (CAST('163403679' AS REAL)) GROUP BY rt1.c0, rt0.c2, rt0.c3, rt0.c1, rt1.c1, t1.c0, rt0.c4, rt1.c3, rt1.c2 UNION SELECT ALL rt1.c0, rt0.c2, rt0.c3, rt0.c1, rt1.c1, t1.c0, rt0.c4, rt1.c3, rt1.c2 FROM rt1, t1, rt0, v0 WHERE ((NOT (CAST('163403679' AS REAL)))) GROUP BY rt1.c0, rt0.c2, rt0.c3, rt0.c1, rt1.c1, t1.c0, rt0.c4, rt1.c3, rt1.c2 UNION SELECT rt1.c0, rt0.c2, rt0.c3, rt0.c1, rt1.c1, t1.c0, rt0.c4, rt1.c3, rt1.c2 FROM rt1, t1, rt0, v0 WHERE (((CAST('163403679' AS REAL)) ISNULL)) GROUP BY rt1.c0, rt0.c2, rt0.c3, rt0.c1, rt1.c1, t1.c0, rt0.c4, rt1.c3, rt1.c2;
SELECT rt1.c0, rt0.c2, rt0.c3, rt0.c1, rt1.c1, t1.c0, rt0.c4, rt1.c3, rt1.c2 FROM rt1, t1, rt0, v0 GROUP BY rt1.c0, rt0.c2, rt0.c3, rt0.c1, rt1.c1, t1.c0, rt0.c4, rt1.c3, rt1.c2;
SELECT ALL t0.c1, rt1.c0, t0.c0, t0.c2, rt1.c2, rt1.c3, rt1.c1 FROM rt1, t0 GROUP BY t0.c1, rt1.c0, t0.c0, t0.c2, rt1.c2, rt1.c3, rt1.c1;
SELECT ALL t0.c1, rt1.c0, t0.c0, t0.c2, rt1.c2, rt1.c3, rt1.c1 FROM rt1, t0 GROUP BY t0.c1, rt1.c0, t0.c0, t0.c2, rt1.c2, rt1.c3, rt1.c1 HAVING SUM(GROUP_CONCAT(rt1.c1)) UNION ALL SELECT ALL t0.c1, rt1.c0, t0.c0, t0.c2, rt1.c2, rt1.c3, rt1.c1 FROM rt1, t0 GROUP BY t0.c1, rt1.c0, t0.c0, t0.c2, rt1.c2, rt1.c3, rt1.c1 HAVING (NOT (SUM(GROUP_CONCAT(rt1.c1)))) UNION ALL SELECT ALL t0.c1, rt1.c0, t0.c0, t0.c2, rt1.c2, rt1.c3, rt1.c1 FROM rt1, t0 GROUP BY t0.c1, rt1.c0, t0.c0, t0.c2, rt1.c2, rt1.c3, rt1.c1 HAVING ((SUM(GROUP_CONCAT(rt1.c1))) ISNULL);
SELECT rt0.c4, rt0.c0, rt0.c3, v0.c0, rt0.c2, rt0.c1, t1.c0 FROM t1, v0 LEFT OUTER JOIN rt0 ON (((rt0.c0)) NOT BETWEEN ((((((t1.c0)OR(rt0.c4)))OR(v0.c0)))) AND (((rt0.c1 IN ()))));
SELECT rt0.c4, rt0.c0, rt0.c3, v0.c0, rt0.c2, rt0.c1, t1.c0 FROM t1, v0 LEFT OUTER JOIN rt0 ON (((rt0.c0)) NOT BETWEEN ((((((t1.c0)OR(rt0.c4)))OR(v0.c0)))) AND (((rt0.c1 IN ())))) WHERE (rt0.c3) UNION ALL SELECT ALL rt0.c4, rt0.c0, rt0.c3, v0.c0, rt0.c2, rt0.c1, t1.c0 FROM t1, v0 LEFT OUTER JOIN rt0 ON (((rt0.c0)) NOT BETWEEN ((((((t1.c0)OR(rt0.c4)))OR(v0.c0)))) AND (((rt0.c1 IN ())))) WHERE ((NOT (rt0.c3))) UNION ALL SELECT rt0.c4, rt0.c0, rt0.c3, v0.c0, rt0.c2, rt0.c1, t1.c0 FROM t1, v0 LEFT OUTER JOIN rt0 ON (((rt0.c0)) NOT BETWEEN ((((((t1.c0)OR(rt0.c4)))OR(v0.c0)))) AND (((rt0.c1 IN ())))) WHERE (((rt0.c3) ISNULL));
SELECT rt0.c4, rt0.c0, rt0.c3, v0.c0, rt0.c2, rt0.c1, t1.c0 FROM t1, v0 LEFT OUTER JOIN rt0 ON (((rt0.c0)) NOT BETWEEN ((((((t1.c0)OR(rt0.c4)))OR(v0.c0)))) AND (((rt0.c1 IN ()))));
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE ((((((rt0.c3)>>(rt0.c4))))!=((((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)))))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT ((((((rt0.c3)>>(rt0.c4))))<>((((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)))))))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((((((((rt0.c3)>>(rt0.c4))))<>((((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)))))) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (CASE WHEN (NOT (v0.c0)) THEN (v0.c0 IN ()) WHEN CAST(v0.c0 AS TEXT) THEN ((v0.c0)/(v0.c0)) WHEN (+ (v0.c0)) THEN (~ (v0.c0)) ELSE ((v0.c0)IS NOT(v0.c0)) END) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CASE WHEN (NOT (v0.c0)) THEN (v0.c0 IN ()) WHEN CAST(v0.c0 AS TEXT) THEN ((v0.c0)/(v0.c0)) WHEN (+ (v0.c0)) THEN (~ (v0.c0)) ELSE ((v0.c0)IS NOT(v0.c0)) END))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((CASE WHEN (NOT (v0.c0)) THEN (v0.c0 IN ()) WHEN CAST(v0.c0 AS TEXT) THEN ((v0.c0)/(v0.c0)) WHEN (+ (v0.c0)) THEN (~ (v0.c0)) ELSE ((v0.c0)IS NOT(v0.c0)) END) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 INDEXED BY i55 LEFT OUTER JOIN t1 ON t1.c0 GROUP BY v0.c0;
SELECT ALL rt1.c3, rt1.c1, rt1.c0, rt1.c2 FROM rt1;
SELECT rt1.c3, rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE (CAST(CASE rt1.c3  WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c3 END AS BLOB)) UNION ALL SELECT ALL rt1.c3, rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE ((NOT (CAST(CASE rt1.c3  WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c3 END AS BLOB)))) UNION ALL SELECT ALL rt1.c3, rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE (((CAST(CASE rt1.c3  WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c3 END AS BLOB)) ISNULL));
SELECT ALL rt1.c3, rt1.c1, rt1.c0, rt1.c2 FROM rt1;
SELECT DISTINCT t1.c0 FROM t1, v0;
SELECT DISTINCT t1.c0 FROM t1, v0 WHERE (CAST(((t1.c0)!=(t1.c0)) AS NUMERIC)) UNION SELECT DISTINCT t1.c0 FROM t1, v0 WHERE ((NOT (CAST(((t1.c0)<>(t1.c0)) AS NUMERIC)))) UNION SELECT DISTINCT t1.c0 FROM t1, v0 WHERE (((CAST(((t1.c0)<>(t1.c0)) AS NUMERIC)) ISNULL));
SELECT DISTINCT t1.c0 FROM t1, v0;
SELECT rt0.c3, t0.c1, rt0.c2, rt0.c4, t1.c0, rt0.c1 FROM rt0, v0 INNER JOIN t0 ON ((((((((((t0.c2) NOT BETWEEN (t0.c2) AND (t1.c0)))OR(((((rt0.c3)AND(t0.c1)))AND(t0.c0)))))OR(IFNULL(DISTINCT rt0.c0, t1.c0))))AND(('0.44534853463619406' IN (t0.c0, rt0.c0)))))OR(x'')) FULL OUTER JOIN t1 ON (((('')OR(((rt0.c1) NOT BETWEEN (t0.c2) AND (v0.c0)))))OR(((rt0.c2) BETWEEN (rt0.c4) AND (t0.c2)))) GROUP BY rt0.c3, t0.c1, rt0.c2, rt0.c4, t1.c0, rt0.c1;
SELECT t0.c1, v0.c0, t0.c0 FROM t0, t1, v0 GROUP BY t0.c1, v0.c0, t0.c0;
SELECT t0.c1, v0.c0, t0.c0 FROM t0, t1, v0 GROUP BY t0.c1, v0.c0, t0.c0 HAVING CASE WHEN CAST(t1.c0 AS REAL) THEN SUM(MAX(TOTAL(SUM(SUM(v0.c0))))) ELSE SUM(v0.c0) END UNION ALL SELECT ALL t0.c1, v0.c0, t0.c0 FROM t0, t1, v0 GROUP BY t0.c1, v0.c0, t0.c0 HAVING (NOT (CASE WHEN CAST(t1.c0 AS REAL) THEN SUM(MAX(TOTAL(SUM(SUM(v0.c0))))) ELSE SUM(v0.c0) END)) UNION ALL SELECT ALL t0.c1, v0.c0, t0.c0 FROM t0, t1, v0 GROUP BY t0.c1, v0.c0, t0.c0 HAVING ((CASE WHEN CAST(t1.c0 AS REAL) THEN SUM(MAX(TOTAL(SUM(SUM(v0.c0))))) ELSE SUM(v0.c0) END) ISNULL);
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE ((+ ((((v0.c0))!=((v0.c0)))))) UNION ALL SELECT * FROM v0 WHERE ((NOT ((+ ((((v0.c0))<>((v0.c0)))))))) UNION ALL SELECT * FROM v0 WHERE ((((+ ((((v0.c0))<>((v0.c0)))))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT rt1.c3, rt1.c1, v0.c0, rt1.c2 FROM rt1, v0;
SELECT DISTINCT rt1.c3, rt1.c1, v0.c0, rt1.c2 FROM rt1, v0 WHERE (((0.9560067282669469)|(json(rt1.c1)))) UNION SELECT DISTINCT rt1.c3, rt1.c1, v0.c0, rt1.c2 FROM rt1, v0 WHERE ((NOT (((0.9560067282669469)|(json(rt1.c1)))))) UNION SELECT DISTINCT rt1.c3, rt1.c1, v0.c0, rt1.c2 FROM rt1, v0 WHERE (((((0.9560067282669469)|(json(rt1.c1)))) ISNULL));
SELECT DISTINCT rt1.c3, rt1.c1, v0.c0, rt1.c2 FROM rt1, v0;
SELECT ALL t0.c0, rt1.c3, rt1.c2 FROM t0, t1, rt1 GROUP BY t0.c0, rt1.c3, rt1.c2;
SELECT t0.c0, rt1.c3, rt1.c2 FROM t0, t1, rt1 WHERE (t0.c2) GROUP BY t0.c0, rt1.c3, rt1.c2 UNION SELECT t0.c0, rt1.c3, rt1.c2 FROM t0, t1, rt1 WHERE ((NOT (t0.c2))) GROUP BY t0.c0, rt1.c3, rt1.c2 UNION SELECT ALL t0.c0, rt1.c3, rt1.c2 FROM t0, t1, rt1 WHERE (((t0.c2) ISNULL)) GROUP BY t0.c0, rt1.c3, rt1.c2;
SELECT ALL t0.c0, rt1.c3, rt1.c2 FROM t0, t1, rt1 GROUP BY t0.c0, rt1.c3, rt1.c2;
SELECT rt1.c3 FROM t1, v0, rt1 NOT INDEXED GROUP BY rt1.c3;
SELECT rt1.c3 FROM t1, v0, rt1 GROUP BY rt1.c3 HAVING v0.c0 UNION ALL SELECT ALL rt1.c3 FROM t1, v0, rt1 GROUP BY rt1.c3 HAVING (NOT (v0.c0)) UNION ALL SELECT rt1.c3 FROM t1, v0, rt1 GROUP BY rt1.c3 HAVING ((v0.c0) ISNULL);
SELECT rt1.c3 FROM t1, v0, rt1 NOT INDEXED GROUP BY rt1.c3;
SELECT rt1.c3 FROM t1, v0, rt1 GROUP BY rt1.c3 HAVING v0.c0 UNION ALL SELECT ALL rt1.c3 FROM t1, v0, rt1 GROUP BY rt1.c3 HAVING (NOT (v0.c0)) UNION ALL SELECT rt1.c3 FROM t1, v0, rt1 GROUP BY rt1.c3 HAVING ((v0.c0) ISNULL);
SELECT rt1.c3 FROM t1, v0, rt1 NOT INDEXED GROUP BY rt1.c3;
SELECT ALL * FROM t1;
SELECT * FROM t1 WHERE (CASE WHEN (t1.c0 IN ()) THEN (+ (t1.c0)) END) UNION ALL SELECT ALL * FROM t1 WHERE ((NOT (CASE WHEN (t1.c0 IN ()) THEN (+ (t1.c0)) END))) UNION ALL SELECT * FROM t1 WHERE (((CASE WHEN (t1.c0 IN ()) THEN (+ (t1.c0)) END) ISNULL));
SELECT ALL * FROM t1;
SELECT DISTINCT t0.c0, rt1.c1, rt1.c3, t0.c1, rt1.c0, t0.c2, rt1.c2, rt0.c4, v0.c0, rt0.c0, rt0.c3, t1.c0 FROM rt1, rt0 NOT INDEXED LEFT OUTER JOIN v0 ON CASE WHEN rt1.c2 COLLATE RTRIM THEN ((t0.c0)>=(v0.c0)) WHEN ((x'')==(rt1.c1)) THEN (~ (rt0.c1)) WHEN (t0.c2 IN (t0.c1)) THEN (NOT (rt1.c2)) ELSE ((rt0.c1) IS TRUE) END CROSS JOIN t0 ON x'f3c1' RIGHT OUTER JOIN t1 ON CAST(NULL AS NUMERIC);
SELECT ALL rt1.c2, t1.c0, rt1.c0, rt1.c3, rt1.c1 FROM t1 NATURAL JOIN rt1 GROUP BY rt1.c2, t1.c0, rt1.c0, rt1.c3, rt1.c1;
SELECT rt1.c2, t1.c0, rt1.c0, rt1.c3, rt1.c1 FROM t1 NATURAL JOIN rt1 WHERE (((((rt1.c0) NOT NULL)) IS FALSE)) GROUP BY rt1.c2, t1.c0, rt1.c0, rt1.c3, rt1.c1 UNION SELECT rt1.c2, t1.c0, rt1.c0, rt1.c3, rt1.c1 FROM t1 NATURAL JOIN rt1 WHERE ((NOT (((((rt1.c0) NOT NULL)) IS FALSE)))) GROUP BY rt1.c2, t1.c0, rt1.c0, rt1.c3, rt1.c1 UNION SELECT rt1.c2, t1.c0, rt1.c0, rt1.c3, rt1.c1 FROM t1 NATURAL JOIN rt1 WHERE (((((((rt1.c0) NOT NULL)) IS FALSE)) ISNULL)) GROUP BY rt1.c2, t1.c0, rt1.c0, rt1.c3, rt1.c1;
SELECT ALL rt1.c2, t1.c0, rt1.c0, rt1.c3, rt1.c1 FROM t1 NATURAL JOIN rt1 GROUP BY rt1.c2, t1.c0, rt1.c0, rt1.c3, rt1.c1;
SELECT t1.c0, v0.c0, t0.c2 FROM v0, t1, t0 GROUP BY t1.c0, v0.c0, t0.c2;
SELECT t1.c0, v0.c0, t0.c2 FROM v0, t1, t0 GROUP BY t1.c0, v0.c0, t0.c2 HAVING GROUP_CONCAT(GROUP_CONCAT(t1.c0)) UNION ALL SELECT t1.c0, v0.c0, t0.c2 FROM v0, t1, t0 GROUP BY t1.c0, v0.c0, t0.c2 HAVING (NOT (GROUP_CONCAT(GROUP_CONCAT(t1.c0)))) UNION ALL SELECT t1.c0, v0.c0, t0.c2 FROM v0, t1, t0 GROUP BY t1.c0, v0.c0, t0.c2 HAVING ((GROUP_CONCAT(GROUP_CONCAT(t1.c0))) ISNULL);
SELECT ALL rt1.c0, rt0.c1, t1.c0, rt0.c3, t0.c2, rt0.c2, t0.c1 FROM rt1, t1, rt0, t0, v0;
SELECT ALL rt1.c0, rt0.c1, t1.c0, rt0.c3, t0.c2, rt0.c2, t0.c1 FROM rt1, t1, rt0, t0, v0 NOT INDEXED WHERE ((((+ (-4.32444159E8)))+((rt1.c3 IN ())))) UNION ALL SELECT rt1.c0, rt0.c1, t1.c0, rt0.c3, t0.c2, rt0.c2, t0.c1 FROM rt1, t1, rt0, t0, v0 WHERE ((NOT ((((+ (-4.32444159E8)))+((rt1.c3 IN ())))))) UNION ALL SELECT ALL rt1.c0, rt0.c1, t1.c0, rt0.c3, t0.c2, rt0.c2, t0.c1 FROM rt1, t1, rt0, t0, v0 WHERE ((((((+ (-4.32444159E8)))+((rt1.c3 IN ())))) ISNULL));
SELECT ALL rt1.c0, rt0.c1, t1.c0, rt0.c3, t0.c2, rt0.c2, t0.c1 FROM rt1, t1, rt0, t0, v0;
SELECT DISTINCT rt1.c0, rt1.c2, v0.c0 FROM v0, rt0, rt1;
SELECT DISTINCT rt1.c0, rt1.c2, v0.c0 FROM v0, rt0, rt1 WHERE ((NOT (((0.9086733014834713) NOT BETWEEN (rt0.c3) AND (rt1.c3))))) UNION SELECT DISTINCT rt1.c0, rt1.c2, v0.c0 FROM v0, rt0, rt1 WHERE ((NOT ((NOT (((0.9086733014834713) NOT BETWEEN (rt0.c3) AND (rt1.c3))))))) UNION SELECT DISTINCT rt1.c0, rt1.c2, v0.c0 FROM v0, rt0, rt1 WHERE ((((NOT (((0.9086733014834713) NOT BETWEEN (rt0.c3) AND (rt1.c3))))) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c2, v0.c0 FROM v0, rt0, rt1;
SELECT ALL rt1.c0, t0.c2, rt0.c2, t0.c1, t1.c0, rt0.c1, t0.c0 FROM rt1, t0, rt0, v0 CROSS JOIN t1 ON (IFNULL(DISTINCT t1.c0, rt1.c1) IN (t1.c0)) GROUP BY rt1.c0, t0.c2, rt0.c2, t0.c1, t1.c0, rt0.c1, t0.c0;
SELECT ALL rt1.c0, t0.c2, rt0.c2, t0.c1, t1.c0, rt0.c1, t0.c0 FROM rt1, t0, rt0, v0 CROSS JOIN t1 ON (IFNULL(DISTINCT t1.c0, rt1.c1) IN (t1.c0)) WHERE ((((((v0.c0 IN (rt1.c2)))OR(((((((((v0.c0)OR(rt0.c1)))OR(t0.c0)))OR(rt1.c3)))AND(rt0.c1)))))OR(('' IN ())))) GROUP BY rt1.c0, t0.c2, rt0.c2, t0.c1, t1.c0, rt0.c1, t0.c0 UNION SELECT rt1.c0, t0.c2, rt0.c2, t0.c1, t1.c0, rt0.c1, t0.c0 FROM rt1, t0, rt0, v0 CROSS JOIN t1 ON (IFNULL(DISTINCT t1.c0, rt1.c1) IN (t1.c0)) WHERE ((NOT ((((((v0.c0 IN (rt1.c2)))OR(((((((((v0.c0)OR(rt0.c1)))OR(t0.c0)))OR(rt1.c3)))AND(rt0.c1)))))OR(('' IN ())))))) GROUP BY rt1.c0, t0.c2, rt0.c2, t0.c1, t1.c0, rt0.c1, t0.c0 UNION SELECT rt1.c0, t0.c2, rt0.c2, t0.c1, t1.c0, rt0.c1, t0.c0 FROM rt1, t0, rt0, v0 CROSS JOIN t1 ON (IFNULL(DISTINCT t1.c0, rt1.c1) IN (t1.c0)) WHERE ((((((((v0.c0 IN (rt1.c2)))OR(((((((((v0.c0)OR(rt0.c1)))OR(t0.c0)))OR(rt1.c3)))AND(rt0.c1)))))OR(('' IN ())))) ISNULL)) GROUP BY rt1.c0, t0.c2, rt0.c2, t0.c1, t1.c0, rt0.c1, t0.c0;
SELECT ALL rt1.c0, t0.c2, rt0.c2, t0.c1, t1.c0, rt0.c1, t0.c0 FROM rt1, t0, rt0, v0 CROSS JOIN t1 ON (IFNULL(DISTINCT t1.c0, rt1.c1) IN (t1.c0)) GROUP BY rt1.c0, t0.c2, rt0.c2, t0.c1, t1.c0, rt0.c1, t0.c0;
SELECT rt0.c1, rt0.c4 FROM rt0 NOT INDEXED GROUP BY rt0.c1, rt0.c4;
SELECT rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c4 HAVING x'' UNION ALL SELECT ALL rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c4 HAVING (NOT (x'')) UNION ALL SELECT ALL rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c4 HAVING ((x'') ISNULL);
SELECT rt0.c1, rt0.c4 FROM rt0 NOT INDEXED GROUP BY rt0.c1, rt0.c4;
SELECT rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c4 HAVING x'' UNION ALL SELECT ALL rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c4 HAVING (NOT (x'')) UNION ALL SELECT ALL rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c4 HAVING ((x'') ISNULL);
SELECT rt0.c1, rt0.c4 FROM rt0 NOT INDEXED GROUP BY rt0.c1, rt0.c4;
SELECT * FROM v0, t0, rt0, t1;
SELECT * FROM v0, t0, rt0, t1 WHERE (v0.c0) UNION ALL SELECT * FROM v0, t0, rt0, t1 WHERE ((NOT (v0.c0))) UNION ALL SELECT ALL * FROM v0, t0, rt0, t1 WHERE (((v0.c0) ISNULL));
SELECT * FROM v0, t0, rt0, t1;
SELECT DISTINCT rt1.c0 FROM rt1, t1;
SELECT DISTINCT rt1.c0 FROM rt1, t1 WHERE ((~ (((rt1.c2)==(rt1.c2))))) UNION SELECT DISTINCT rt1.c0 FROM rt1, t1 WHERE ((NOT ((~ (((rt1.c2)=(rt1.c2))))))) UNION SELECT DISTINCT rt1.c0 FROM rt1, t1 WHERE ((((~ (((rt1.c2)==(rt1.c2))))) ISNULL));
SELECT DISTINCT rt1.c0 FROM rt1, t1;
SELECT ALL rt0.c2, rt0.c4, rt0.c1, t0.c1, rt1.c2, t0.c0, rt1.c0, t0.c2, rt0.c3, v0.c0 FROM t0, t1, v0, rt0, rt1 GROUP BY rt0.c2, rt0.c4, rt0.c1, t0.c1, rt1.c2, t0.c0, rt1.c0, t0.c2, rt0.c3, v0.c0;
SELECT rt0.c2, rt0.c4, rt0.c1, t0.c1, rt1.c2, t0.c0, rt1.c0, t0.c2, rt0.c3, v0.c0 FROM t0, t1, v0, rt0, rt1 WHERE (CAST(((NULL)>(rt1.c0)) AS TEXT)) GROUP BY rt0.c2, rt0.c4, rt0.c1, t0.c1, rt1.c2, t0.c0, rt1.c0, t0.c2, rt0.c3, v0.c0 UNION SELECT rt0.c2, rt0.c4, rt0.c1, t0.c1, rt1.c2, t0.c0, rt1.c0, t0.c2, rt0.c3, v0.c0 FROM t0, t1, v0, rt0, rt1 WHERE ((NOT (CAST(((NULL)>(rt1.c0)) AS TEXT)))) GROUP BY rt0.c2, rt0.c4, rt0.c1, t0.c1, rt1.c2, t0.c0, rt1.c0, t0.c2, rt0.c3, v0.c0 UNION SELECT ALL rt0.c2, rt0.c4, rt0.c1, t0.c1, rt1.c2, t0.c0, rt1.c0, t0.c2, rt0.c3, v0.c0 FROM t0, t1, v0, rt0, rt1 WHERE (((CAST(((NULL)>(rt1.c0)) AS TEXT)) ISNULL)) GROUP BY rt0.c2, rt0.c4, rt0.c1, t0.c1, rt1.c2, t0.c0, rt1.c0, t0.c2, rt0.c3, v0.c0;
SELECT ALL rt0.c2, rt0.c4, rt0.c1, t0.c1, rt1.c2, t0.c0, rt1.c0, t0.c2, rt0.c3, v0.c0 FROM t0, t1, v0, rt0, rt1 GROUP BY rt0.c2, rt0.c4, rt0.c1, t0.c1, rt1.c2, t0.c0, rt1.c0, t0.c2, rt0.c3, v0.c0;
SELECT ALL rt0.c0, t0.c0, rt1.c0, t0.c1, rt1.c1, t1.c0 FROM t0, v0, rt0, rt1 FULL OUTER JOIN t1 ON (((((rt0.c0)AND(t0.c1)))OR(t0.c1)) IN (CASE WHEN rt1.c1 THEN t0.c2 END, ((t0.c1)*(rt0.c1)))) GROUP BY rt0.c0, t0.c0, rt1.c0, t0.c1, rt1.c1, t1.c0;
SELECT ALL rt0.c0, t0.c0, rt1.c0, t0.c1, rt1.c1, t1.c0 FROM t0, v0, rt0, rt1 FULL OUTER JOIN t1 ON (((((rt0.c0)AND(t0.c1)))OR(t0.c1)) IN (CASE WHEN rt1.c1 THEN t0.c2 END, ((t0.c1)*(rt0.c1)))) GROUP BY rt0.c0, t0.c0, rt1.c0, t0.c1, rt1.c1, t1.c0 HAVING (~ (CAST(rt0.c3 AS REAL))) UNION ALL SELECT rt0.c0, t0.c0, rt1.c0, t0.c1, rt1.c1, t1.c0 FROM t0, v0, rt0, rt1 FULL OUTER JOIN t1 ON (((((rt0.c0)AND(t0.c1)))OR(t0.c1)) IN (CASE WHEN rt1.c1 THEN t0.c2 END, ((t0.c1)*(rt0.c1)))) GROUP BY rt0.c0, t0.c0, rt1.c0, t0.c1, rt1.c1, t1.c0 HAVING (NOT ((~ (CAST(rt0.c3 AS REAL))))) UNION ALL SELECT ALL rt0.c0, t0.c0, rt1.c0, t0.c1, rt1.c1, t1.c0 FROM t0, v0, rt0, rt1 FULL OUTER JOIN t1 ON (((((rt0.c0)AND(t0.c1)))OR(t0.c1)) IN (CASE WHEN rt1.c1 THEN t0.c2 END, ((t0.c1)*(rt0.c1)))) GROUP BY rt0.c0, t0.c0, rt1.c0, t0.c1, rt1.c1, t1.c0 HAVING (((~ (CAST(rt0.c3 AS REAL)))) ISNULL);
SELECT ALL rt0.c0, t0.c0, rt1.c0, t0.c1, rt1.c1, t1.c0 FROM t0, v0, rt0, rt1 FULL OUTER JOIN t1 ON (((((rt0.c0)AND(t0.c1)))OR(t0.c1)) IN (CASE WHEN rt1.c1 THEN t0.c2 END, ((t0.c1)*(rt0.c1)))) GROUP BY rt0.c0, t0.c0, rt1.c0, t0.c1, rt1.c1, t1.c0;
SELECT ALL rt0.c0, t0.c0, rt1.c0, t0.c1, rt1.c1, t1.c0 FROM t0, v0, rt0, rt1 FULL OUTER JOIN t1 ON (((((rt0.c0)AND(t0.c1)))OR(t0.c1)) IN (CASE WHEN rt1.c1 THEN t0.c2 END, ((t0.c1)*(rt0.c1)))) GROUP BY rt0.c0, t0.c0, rt1.c0, t0.c1, rt1.c1, t1.c0 HAVING (~ (CAST(rt0.c3 AS REAL))) UNION ALL SELECT rt0.c0, t0.c0, rt1.c0, t0.c1, rt1.c1, t1.c0 FROM t0, v0, rt0, rt1 FULL OUTER JOIN t1 ON (((((rt0.c0)AND(t0.c1)))OR(t0.c1)) IN (CASE WHEN rt1.c1 THEN t0.c2 END, ((t0.c1)*(rt0.c1)))) GROUP BY rt0.c0, t0.c0, rt1.c0, t0.c1, rt1.c1, t1.c0 HAVING (NOT ((~ (CAST(rt0.c3 AS REAL))))) UNION ALL SELECT ALL rt0.c0, t0.c0, rt1.c0, t0.c1, rt1.c1, t1.c0 FROM t0, v0, rt0, rt1 FULL OUTER JOIN t1 ON (((((rt0.c0)AND(t0.c1)))OR(t0.c1)) IN (CASE WHEN rt1.c1 THEN t0.c2 END, ((t0.c1)*(rt0.c1)))) GROUP BY rt0.c0, t0.c0, rt1.c0, t0.c1, rt1.c1, t1.c0 HAVING (((~ (CAST(rt0.c3 AS REAL)))) ISNULL);
SELECT ALL rt0.c0, t0.c0, rt1.c0, t0.c1, rt1.c1, t1.c0 FROM t0, v0, rt0, rt1 FULL OUTER JOIN t1 ON (((((rt0.c0)AND(t0.c1)))OR(t0.c1)) IN (CASE WHEN rt1.c1 THEN t0.c2 END, ((t0.c1)*(rt0.c1)))) GROUP BY rt0.c0, t0.c0, rt1.c0, t0.c1, rt1.c1, t1.c0;
SELECT ALL * FROM t1, v0, rt1, rt0;
SELECT * FROM t1, v0, rt1, rt0 WHERE ((('B''釾') IS TRUE)) UNION ALL SELECT * FROM t1, v0, rt1, rt0 WHERE ((NOT ((('B''釾') IS TRUE)))) UNION ALL SELECT * FROM t1, v0, rt1, rt0 WHERE ((((('B''釾') IS TRUE)) ISNULL));
SELECT ALL * FROM t1, v0, rt1, rt0;
SELECT DISTINCT * FROM v0, rt1, rt0;
SELECT DISTINCT * FROM v0, rt1, rt0 WHERE ((TRIM(rt0.c3, rt1.c2) IN (((rt0.c1) NOT NULL)))) UNION SELECT DISTINCT * FROM v0, rt1, rt0 WHERE ((NOT ((TRIM(rt0.c3, rt1.c2) IN (((rt0.c1) NOT NULL)))))) UNION SELECT DISTINCT * FROM v0, rt1, rt0 WHERE ((((TRIM(rt0.c3, rt1.c2) IN (((rt0.c1) NOT NULL)))) ISNULL));
SELECT DISTINCT * FROM v0, rt1, rt0;
SELECT ALL rt1.c1, t0.c2, rt1.c3, rt0.c4, t0.c1, rt0.c0, rt1.c2, rt0.c2, rt1.c0, t0.c0, v0.c0, rt0.c3 FROM t0, rt0, v0, rt1 GROUP BY rt1.c1, t0.c2, rt1.c3, rt0.c4, t0.c1, rt0.c0, rt1.c2, rt0.c2, rt1.c0, t0.c0, v0.c0, rt0.c3;
SELECT ALL rt1.c1, t0.c2, rt1.c3, rt0.c4, t0.c1, rt0.c0, rt1.c2, rt0.c2, rt1.c0, t0.c0, v0.c0, rt0.c3 FROM t0, rt0, v0, rt1 WHERE ('*') GROUP BY rt1.c1, t0.c2, rt1.c3, rt0.c4, t0.c1, rt0.c0, rt1.c2, rt0.c2, rt1.c0, t0.c0, v0.c0, rt0.c3 UNION SELECT ALL rt1.c1, t0.c2, rt1.c3, rt0.c4, t0.c1, rt0.c0, rt1.c2, rt0.c2, rt1.c0, t0.c0, v0.c0, rt0.c3 FROM t0, rt0, v0, rt1 WHERE ((NOT ('*'))) GROUP BY rt1.c1, t0.c2, rt1.c3, rt0.c4, t0.c1, rt0.c0, rt1.c2, rt0.c2, rt1.c0, t0.c0, v0.c0, rt0.c3 UNION SELECT ALL rt1.c1, t0.c2, rt1.c3, rt0.c4, t0.c1, rt0.c0, rt1.c2, rt0.c2, rt1.c0, t0.c0, v0.c0, rt0.c3 FROM t0, rt0, v0, rt1 WHERE ((('*') ISNULL)) GROUP BY rt1.c1, t0.c2, rt1.c3, rt0.c4, t0.c1, rt0.c0, rt1.c2, rt0.c2, rt1.c0, t0.c0, v0.c0, rt0.c3;
SELECT ALL rt1.c1, t0.c2, rt1.c3, rt0.c4, t0.c1, rt0.c0, rt1.c2, rt0.c2, rt1.c0, t0.c0, v0.c0, rt0.c3 FROM t0, rt0, v0, rt1 GROUP BY rt1.c1, t0.c2, rt1.c3, rt0.c4, t0.c1, rt0.c0, rt1.c2, rt0.c2, rt1.c0, t0.c0, v0.c0, rt0.c3;
SELECT ALL t1.c0, v0.c0 FROM t1, v0 GROUP BY t1.c0, v0.c0;
SELECT ALL t1.c0, v0.c0 FROM t1, v0 GROUP BY t1.c0, v0.c0 HAVING ((((((((((v0.c0)AND(t1.c0)))AND(v0.c0)))OR(t1.c0)))AND(COUNT(MAX(SUM(v0.c0)))))) IS FALSE) UNION ALL SELECT t1.c0, v0.c0 FROM t1, v0 GROUP BY t1.c0, v0.c0 HAVING (NOT (((((((((((v0.c0)AND(t1.c0)))AND(v0.c0)))OR(t1.c0)))AND(COUNT(MAX(SUM(v0.c0)))))) IS FALSE))) UNION ALL SELECT ALL t1.c0, v0.c0 FROM t1, v0 GROUP BY t1.c0, v0.c0 HAVING ((((((((((((v0.c0)AND(t1.c0)))AND(v0.c0)))OR(t1.c0)))AND(COUNT(MAX(SUM(v0.c0)))))) IS FALSE)) ISNULL);
SELECT ALL * FROM rt1, t0, rt0 NATURAL JOIN t1;
SELECT * FROM rt1, t0, rt0 NATURAL JOIN t1 WHERE (CAST(rt1.c1 AS BLOB)) UNION ALL SELECT ALL * FROM rt1, t0, rt0 NATURAL JOIN t1 WHERE ((NOT (CAST(rt1.c1 AS BLOB)))) UNION ALL SELECT ALL * FROM rt1, t0, rt0 NATURAL JOIN t1 WHERE (((CAST(rt1.c1 AS BLOB)) ISNULL));
SELECT ALL * FROM rt1, t0, rt0 NATURAL JOIN t1;
SELECT DISTINCT v0.c0, rt0.c1, rt0.c2, rt1.c0, rt0.c4, rt1.c3, rt0.c0, t0.c2 FROM t0, rt1, rt0, v0, t1;
SELECT DISTINCT v0.c0, rt0.c1, rt0.c2, rt1.c0, rt0.c4, rt1.c3, rt0.c0, t0.c2 FROM t0, rt1, rt0, v0, t1 WHERE (TYPEOF(rt1.c3)) UNION SELECT DISTINCT v0.c0, rt0.c1, rt0.c2, rt1.c0, rt0.c4, rt1.c3, rt0.c0, t0.c2 FROM t0, rt1, rt0, v0, t1 WHERE ((NOT (TYPEOF(rt1.c3)))) UNION SELECT DISTINCT v0.c0, rt0.c1, rt0.c2, rt1.c0, rt0.c4, rt1.c3, rt0.c0, t0.c2 FROM t0, rt1, rt0, v0, t1 WHERE (((TYPEOF(rt1.c3)) ISNULL));
SELECT DISTINCT v0.c0, rt0.c1, rt0.c2, rt1.c0, rt0.c4, rt1.c3, rt0.c0, t0.c2 FROM t0, rt1, rt0, v0, t1;
SELECT rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c4;
SELECT rt0.c3, rt0.c4 FROM rt0 WHERE ('-953740973') GROUP BY rt0.c3, rt0.c4 UNION SELECT rt0.c3, rt0.c4 FROM rt0 WHERE ((NOT ('-953740973'))) GROUP BY rt0.c3, rt0.c4 UNION SELECT ALL rt0.c3, rt0.c4 FROM rt0 WHERE ((('-953740973') ISNULL)) GROUP BY rt0.c3, rt0.c4;
SELECT rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c4;
SELECT ALL t0.c2, rt1.c1, rt0.c4, t1.c0, rt1.c0, t0.c1, t0.c0, rt0.c2, rt0.c1, rt1.c3, v0.c0, rt0.c3, rt1.c2 FROM v0, rt1, t0, t1 INNER JOIN rt0 ON ((((rt0.c2)GLOB(rt0.c2))) NOT NULL) GROUP BY t0.c2, rt1.c1, rt0.c4, t1.c0, rt1.c0, t0.c1, t0.c0, rt0.c2, rt0.c1, rt1.c3, v0.c0, rt0.c3, rt1.c2;
SELECT t0.c2, rt1.c1, rt0.c4, t1.c0, rt1.c0, t0.c1, t0.c0, rt0.c2, rt0.c1, rt1.c3, v0.c0, rt0.c3, rt1.c2 FROM v0, rt1, t0, t1 INNER JOIN rt0 ON ((((rt0.c2)GLOB(rt0.c2))) NOT NULL) GROUP BY t0.c2, rt1.c1, rt0.c4, t1.c0, rt1.c0, t0.c1, t0.c0, rt0.c2, rt0.c1, rt1.c3, v0.c0, rt0.c3, rt1.c2 HAVING (SUM(MAX(AVG(rt0.c1))) IN ()) UNION ALL SELECT ALL t0.c2, rt1.c1, rt0.c4, t1.c0, rt1.c0, t0.c1, t0.c0, rt0.c2, rt0.c1, rt1.c3, v0.c0, rt0.c3, rt1.c2 FROM v0, rt1, t0, t1 INNER JOIN rt0 ON ((((rt0.c2)GLOB(rt0.c2))) NOT NULL) GROUP BY t0.c2, rt1.c1, rt0.c4, t1.c0, rt1.c0, t0.c1, t0.c0, rt0.c2, rt0.c1, rt1.c3, v0.c0, rt0.c3, rt1.c2 HAVING (NOT ((SUM(MAX(AVG(rt0.c1))) IN ()))) UNION ALL SELECT t0.c2, rt1.c1, rt0.c4, t1.c0, rt1.c0, t0.c1, t0.c0, rt0.c2, rt0.c1, rt1.c3, v0.c0, rt0.c3, rt1.c2 FROM v0, rt1, t0, t1 INNER JOIN rt0 ON ((((rt0.c2)GLOB(rt0.c2))) NOT NULL) GROUP BY t0.c2, rt1.c1, rt0.c4, t1.c0, rt1.c0, t0.c1, t0.c0, rt0.c2, rt0.c1, rt1.c3, v0.c0, rt0.c3, rt1.c2 HAVING (((SUM(MAX(AVG(rt0.c1))) IN ())) ISNULL);
SELECT ALL t0.c2, rt1.c1, rt0.c4, t1.c0, rt1.c0, t0.c1, t0.c0, rt0.c2, rt0.c1, rt1.c3, v0.c0, rt0.c3, rt1.c2 FROM v0, rt1, t0, t1 INNER JOIN rt0 ON ((((rt0.c2)GLOB(rt0.c2))) NOT NULL) GROUP BY t0.c2, rt1.c1, rt0.c4, t1.c0, rt1.c0, t0.c1, t0.c0, rt0.c2, rt0.c1, rt1.c3, v0.c0, rt0.c3, rt1.c2;
SELECT t0.c2, rt1.c1, rt0.c4, t1.c0, rt1.c0, t0.c1, t0.c0, rt0.c2, rt0.c1, rt1.c3, v0.c0, rt0.c3, rt1.c2 FROM v0, rt1, t0, t1 INNER JOIN rt0 ON ((((rt0.c2)GLOB(rt0.c2))) NOT NULL) GROUP BY t0.c2, rt1.c1, rt0.c4, t1.c0, rt1.c0, t0.c1, t0.c0, rt0.c2, rt0.c1, rt1.c3, v0.c0, rt0.c3, rt1.c2 HAVING (SUM(MAX(AVG(rt0.c1))) IN ()) UNION ALL SELECT ALL t0.c2, rt1.c1, rt0.c4, t1.c0, rt1.c0, t0.c1, t0.c0, rt0.c2, rt0.c1, rt1.c3, v0.c0, rt0.c3, rt1.c2 FROM v0, rt1, t0, t1 INNER JOIN rt0 ON ((((rt0.c2)GLOB(rt0.c2))) NOT NULL) GROUP BY t0.c2, rt1.c1, rt0.c4, t1.c0, rt1.c0, t0.c1, t0.c0, rt0.c2, rt0.c1, rt1.c3, v0.c0, rt0.c3, rt1.c2 HAVING (NOT ((SUM(MAX(AVG(rt0.c1))) IN ()))) UNION ALL SELECT t0.c2, rt1.c1, rt0.c4, t1.c0, rt1.c0, t0.c1, t0.c0, rt0.c2, rt0.c1, rt1.c3, v0.c0, rt0.c3, rt1.c2 FROM v0, rt1, t0, t1 INNER JOIN rt0 ON ((((rt0.c2)GLOB(rt0.c2))) NOT NULL) GROUP BY t0.c2, rt1.c1, rt0.c4, t1.c0, rt1.c0, t0.c1, t0.c0, rt0.c2, rt0.c1, rt1.c3, v0.c0, rt0.c3, rt1.c2 HAVING (((SUM(MAX(AVG(rt0.c1))) IN ())) ISNULL);
SELECT ALL t0.c2, rt1.c1, rt0.c4, t1.c0, rt1.c0, t0.c1, t0.c0, rt0.c2, rt0.c1, rt1.c3, v0.c0, rt0.c3, rt1.c2 FROM v0, rt1, t0, t1 INNER JOIN rt0 ON ((((rt0.c2)GLOB(rt0.c2))) NOT NULL) GROUP BY t0.c2, rt1.c1, rt0.c4, t1.c0, rt1.c0, t0.c1, t0.c0, rt0.c2, rt0.c1, rt1.c3, v0.c0, rt0.c3, rt1.c2;
SELECT ALL MAX((((((rt1.c2))<>((rt1.c0)))) NOT NULL)) FROM t0, rt1, t1;
SELECT rt1.c3, rt0.c2, t1.c0, rt0.c1, rt1.c2 FROM rt1 CROSS JOIN t1 ON ((CASE rt0.c4  WHEN rt1.c2 THEN t1.c0 WHEN rt1.c1 THEN rt1.c3 WHEN rt0.c0 THEN rt1.c2 WHEN rt0.c0 THEN rt0.c0 WHEN NULL THEN rt0.c2 WHEN rt1.c2 THEN rt0.c4 WHEN x'' THEN rt0.c1 ELSE rt0.c4 END)<=(ABS(rt0.c4))) RIGHT OUTER JOIN rt0 ON (((rt0.c1)) BETWEEN ((CAST('-297580471' AS TEXT))) AND ((rt0.c0 COLLATE RTRIM)));
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((CASE WHEN NULL THEN t0.c1 WHEN t0.c2 THEN t0.c2 WHEN t0.c0 THEN t0.c0 END)<>(((t0.c1)&(t0.c2))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((CASE WHEN NULL THEN t0.c1 WHEN t0.c2 THEN t0.c2 WHEN t0.c0 THEN t0.c0 END)<>(((t0.c1)&(t0.c2))))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((CASE WHEN NULL THEN t0.c1 WHEN t0.c2 THEN t0.c2 WHEN t0.c0 THEN t0.c0 END)<>(((t0.c1)&(t0.c2))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c4, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c3, rt0.c4, rt0.c0 FROM rt0 WHERE ((- (rt0.c2 COLLATE RTRIM))) GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c4, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c3, rt0.c4, rt0.c0 FROM rt0 WHERE ((NOT ((- (rt0.c2 COLLATE RTRIM))))) GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c4, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c3, rt0.c4, rt0.c0 FROM rt0 WHERE ((((- (rt0.c2 COLLATE RTRIM))) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c4, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c4, rt0.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((t1.c0)<<(((SUM(t1.c0)) NOTNULL))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (((t1.c0)<<(((SUM(t1.c0)) NOTNULL))))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((((t1.c0)<<(((SUM(t1.c0)) NOTNULL)))) ISNULL);
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((t1.c0)<<(((SUM(t1.c0)) NOTNULL))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (((t1.c0)<<(((SUM(t1.c0)) NOTNULL))))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((((t1.c0)<<(((SUM(t1.c0)) NOTNULL)))) ISNULL);
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT * FROM rt1, t0;
SELECT ALL * FROM rt1, t0 WHERE (((((rt1.c0)>=(rt1.c0))) NOT BETWEEN ((t0.c0 IN ())) AND (((t0.c0)OR(t0.c2))))) UNION ALL SELECT * FROM rt1, t0 WHERE ((NOT (((((rt1.c0)>=(rt1.c0))) NOT BETWEEN ((t0.c0 IN ())) AND (((t0.c0)OR(t0.c2))))))) UNION ALL SELECT * FROM rt1, t0 WHERE (((((((rt1.c0)>=(rt1.c0))) NOT BETWEEN ((t0.c0 IN ())) AND (((t0.c0)OR(t0.c2))))) ISNULL));
SELECT * FROM rt1, t0;
SELECT DISTINCT * FROM t1, t0, rt0, v0;
SELECT DISTINCT * FROM t1, t0, rt0, v0 WHERE (((((t0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c4))) BETWEEN (((t0.c0)|(t1.c0))) AND (rt0.c0))) UNION SELECT DISTINCT * FROM t1, t0, rt0, v0 WHERE ((NOT (((((t0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c4))) BETWEEN (((t0.c0)|(t1.c0))) AND (rt0.c0))))) UNION SELECT DISTINCT * FROM t1, t0, rt0, v0 WHERE (((((((t0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c4))) BETWEEN (((t0.c0)|(t1.c0))) AND (rt0.c0))) ISNULL));
SELECT DISTINCT * FROM t1, t0, rt0, v0;
SELECT ALL t0.c1, v0.c0 FROM t0, v0 GROUP BY t0.c1, v0.c0;
SELECT t0.c1, v0.c0 FROM t0, v0 WHERE ((NOT ((+ (t0.c0))))) GROUP BY t0.c1, v0.c0 UNION SELECT ALL t0.c1, v0.c0 FROM t0, v0 WHERE ((NOT ((NOT ((+ (t0.c0))))))) GROUP BY t0.c1, v0.c0 UNION SELECT ALL t0.c1, v0.c0 FROM t0, v0 WHERE ((((NOT ((+ (t0.c0))))) ISNULL)) GROUP BY t0.c1, v0.c0;
SELECT ALL t0.c1, v0.c0 FROM t0, v0 GROUP BY t0.c1, v0.c0;
SELECT rt0.c1, t0.c1, rt0.c2, rt1.c3, rt1.c1, rt0.c3, v0.c0, t0.c2, rt0.c4 FROM v0, t0, rt0 INNER JOIN rt1 ON UNLIKELY(NULL) GROUP BY rt0.c1, t0.c1, rt0.c2, rt1.c3, rt1.c1, rt0.c3, v0.c0, t0.c2, rt0.c4;
SELECT rt0.c1, t0.c1, rt0.c2, rt1.c3, rt1.c1, rt0.c3, v0.c0, t0.c2, rt0.c4 FROM v0, t0, rt0 INNER JOIN rt1 ON UNLIKELY(NULL) GROUP BY rt0.c1, t0.c1, rt0.c2, rt1.c3, rt1.c1, rt0.c3, v0.c0, t0.c2, rt0.c4 HAVING ((((TOTAL(rt1.c2))OR(((((COUNT(*))OR(MAX(rt0.c4))))AND(AVG(NULL))))))AND(((AVG(rt0.c0)) NOTNULL))) UNION ALL SELECT rt0.c1, t0.c1, rt0.c2, rt1.c3, rt1.c1, rt0.c3, v0.c0, t0.c2, rt0.c4 FROM v0, t0, rt0 INNER JOIN rt1 ON UNLIKELY(NULL) GROUP BY rt0.c1, t0.c1, rt0.c2, rt1.c3, rt1.c1, rt0.c3, v0.c0, t0.c2, rt0.c4 HAVING (NOT (((((TOTAL(rt1.c2))OR(((((COUNT(*))OR(MAX(rt0.c4))))AND(AVG(NULL))))))AND(((AVG(rt0.c0)) NOTNULL))))) UNION ALL SELECT ALL rt0.c1, t0.c1, rt0.c2, rt1.c3, rt1.c1, rt0.c3, v0.c0, t0.c2, rt0.c4 FROM v0, t0, rt0 INNER JOIN rt1 ON UNLIKELY(NULL) GROUP BY rt0.c1, t0.c1, rt0.c2, rt1.c3, rt1.c1, rt0.c3, v0.c0, t0.c2, rt0.c4 HAVING ((((((TOTAL(rt1.c2))OR(((((COUNT(*))OR(MAX(rt0.c4))))AND(AVG(NULL))))))AND(((AVG(rt0.c0)) NOTNULL)))) ISNULL);
SELECT rt0.c1, t0.c1, rt0.c2, rt1.c3, rt1.c1, rt0.c3, v0.c0, t0.c2, rt0.c4 FROM v0, t0, rt0 INNER JOIN rt1 ON UNLIKELY(NULL) GROUP BY rt0.c1, t0.c1, rt0.c2, rt1.c3, rt1.c1, rt0.c3, v0.c0, t0.c2, rt0.c4;
SELECT rt0.c1, t0.c1, rt0.c2, rt1.c3, rt1.c1, rt0.c3, v0.c0, t0.c2, rt0.c4 FROM v0, t0, rt0 INNER JOIN rt1 ON UNLIKELY(NULL) GROUP BY rt0.c1, t0.c1, rt0.c2, rt1.c3, rt1.c1, rt0.c3, v0.c0, t0.c2, rt0.c4 HAVING ((((TOTAL(rt1.c2))OR(((((COUNT(*))OR(MAX(rt0.c4))))AND(AVG(NULL))))))AND(((AVG(rt0.c0)) NOTNULL))) UNION ALL SELECT rt0.c1, t0.c1, rt0.c2, rt1.c3, rt1.c1, rt0.c3, v0.c0, t0.c2, rt0.c4 FROM v0, t0, rt0 INNER JOIN rt1 ON UNLIKELY(NULL) GROUP BY rt0.c1, t0.c1, rt0.c2, rt1.c3, rt1.c1, rt0.c3, v0.c0, t0.c2, rt0.c4 HAVING (NOT (((((TOTAL(rt1.c2))OR(((((COUNT(*))OR(MAX(rt0.c4))))AND(AVG(NULL))))))AND(((AVG(rt0.c0)) NOTNULL))))) UNION ALL SELECT ALL rt0.c1, t0.c1, rt0.c2, rt1.c3, rt1.c1, rt0.c3, v0.c0, t0.c2, rt0.c4 FROM v0, t0, rt0 INNER JOIN rt1 ON UNLIKELY(NULL) GROUP BY rt0.c1, t0.c1, rt0.c2, rt1.c3, rt1.c1, rt0.c3, v0.c0, t0.c2, rt0.c4 HAVING ((((((TOTAL(rt1.c2))OR(((((COUNT(*))OR(MAX(rt0.c4))))AND(AVG(NULL))))))AND(((AVG(rt0.c0)) NOTNULL)))) ISNULL);
SELECT rt0.c1, t0.c1, rt0.c2, rt1.c3, rt1.c1, rt0.c3, v0.c0, t0.c2, rt0.c4 FROM v0, t0, rt0 INNER JOIN rt1 ON UNLIKELY(NULL) GROUP BY rt0.c1, t0.c1, rt0.c2, rt1.c3, rt1.c1, rt0.c3, v0.c0, t0.c2, rt0.c4;
SELECT ALL * FROM t0, t1, rt1, rt0;
SELECT ALL * FROM t0, t1, rt1, rt0 WHERE (((CASE rt1.c3  WHEN rt0.c4 THEN rt0.c4 END)/(t0.c2))) UNION ALL SELECT * FROM t0, t1, rt1, rt0 WHERE ((NOT (((CASE rt1.c3  WHEN rt0.c4 THEN rt0.c4 END)/(t0.c2))))) UNION ALL SELECT ALL * FROM t0, t1, rt1, rt0 WHERE (((((CASE rt1.c3  WHEN rt0.c4 THEN rt0.c4 END)/(t0.c2))) ISNULL));
SELECT ALL * FROM t0, t1, rt1, rt0;
SELECT DISTINCT * FROM t1 FULL OUTER JOIN t0 ON ((((t1.c0)OR(t0.c0))) NOT NULL) FULL OUTER JOIN rt1 ON (t0.c0 IN ()) FULL OUTER JOIN v0 ON (((((v0.c0 IN ()))AND(RTRIM(t1.c0))))OR(((NULL) IS FALSE)));
SELECT DISTINCT * FROM t1 FULL OUTER JOIN t0 ON ((((t1.c0)OR(t0.c0))) NOT NULL) FULL OUTER JOIN rt1 ON (t0.c0 IN ()) FULL OUTER JOIN v0 ON (((((v0.c0 IN ()))AND(RTRIM(t1.c0))))OR(((NULL) IS FALSE))) WHERE (((NULL)>>(((((((((v0.c0)OR('#O㪂m5]P>''')))AND(rt1.c1)))OR(rt1.c2)))OR(t0.c0))))) UNION SELECT DISTINCT * FROM t1 FULL OUTER JOIN t0 ON ((((t1.c0)OR(t0.c0))) NOT NULL) FULL OUTER JOIN rt1 ON (t0.c0 IN ()) FULL OUTER JOIN v0 ON (((((v0.c0 IN ()))AND(RTRIM(t1.c0))))OR(((NULL) IS FALSE))) WHERE ((NOT (((NULL)>>(((((((((v0.c0)OR('#O㪂m5]P>''')))AND(rt1.c1)))OR(rt1.c2)))OR(t0.c0))))))) UNION SELECT DISTINCT * FROM t1 FULL OUTER JOIN t0 ON ((((t1.c0)OR(t0.c0))) NOT NULL) FULL OUTER JOIN rt1 ON (t0.c0 IN ()) FULL OUTER JOIN v0 ON (((((v0.c0 IN ()))AND(RTRIM(t1.c0))))OR(((NULL) IS FALSE))) WHERE (((((NULL)>>(((((((((v0.c0)OR('#O㪂m5]P>''')))AND(rt1.c1)))OR(rt1.c2)))OR(t0.c0))))) ISNULL));
SELECT DISTINCT * FROM t1 FULL OUTER JOIN t0 ON ((((t1.c0)OR(t0.c0))) NOT NULL) FULL OUTER JOIN rt1 ON (t0.c0 IN ()) FULL OUTER JOIN v0 ON (((((v0.c0 IN ()))AND(RTRIM(t1.c0))))OR(((NULL) IS FALSE)));
SELECT ALL v0.c0, rt0.c1, rt1.c2 FROM v0, rt1, rt0 GROUP BY v0.c0, rt0.c1, rt1.c2;
SELECT v0.c0, rt0.c1, rt1.c2 FROM v0, rt1, rt0 WHERE (((((CASE rt0.c4  WHEN rt1.c2 THEN rt0.c2 ELSE rt1.c3 END)OR(((x'e3e2') BETWEEN (rt1.c1) AND (rt0.c0)))))OR(CASE rt0.c0  WHEN rt0.c4 THEN rt0.c4 WHEN rt1.c3 THEN v0.c0 WHEN 'ཛྷ' THEN rt0.c0 ELSE rt1.c3 END))) GROUP BY v0.c0, rt0.c1, rt1.c2 UNION SELECT ALL v0.c0, rt0.c1, rt1.c2 FROM v0, rt1, rt0 WHERE ((NOT (((((CASE rt0.c4  WHEN rt1.c2 THEN rt0.c2 ELSE rt1.c3 END)OR(((x'e3e2') BETWEEN (rt1.c1) AND (rt0.c0)))))OR(CASE rt0.c0  WHEN rt0.c4 THEN rt0.c4 WHEN rt1.c3 THEN v0.c0 WHEN 'ཛྷ' THEN rt0.c0 ELSE rt1.c3 END))))) GROUP BY v0.c0, rt0.c1, rt1.c2 UNION SELECT v0.c0, rt0.c1, rt1.c2 FROM v0, rt1, rt0 WHERE (((((((CASE rt0.c4  WHEN rt1.c2 THEN rt0.c2 ELSE rt1.c3 END)OR(((x'e3e2') BETWEEN (rt1.c1) AND (rt0.c0)))))OR(CASE rt0.c0  WHEN rt0.c4 THEN rt0.c4 WHEN rt1.c3 THEN v0.c0 WHEN 'ཛྷ' THEN rt0.c0 ELSE rt1.c3 END))) ISNULL)) GROUP BY v0.c0, rt0.c1, rt1.c2;
SELECT ALL v0.c0, rt0.c1, rt1.c2 FROM v0, rt1, rt0 GROUP BY v0.c0, rt0.c1, rt1.c2;
SELECT ALL rt0.c1, t0.c2, t1.c0, rt0.c2 FROM t0, rt0, t1 GROUP BY rt0.c1, t0.c2, t1.c0, rt0.c2;
SELECT ALL rt0.c1, t0.c2, t1.c0, rt0.c2 FROM t0, rt0, t1 GROUP BY rt0.c1, t0.c2, t1.c0, rt0.c2 HAVING AVG(t0.c2) UNION ALL SELECT rt0.c1, t0.c2, t1.c0, rt0.c2 FROM t0, rt0, t1 GROUP BY rt0.c1, t0.c2, t1.c0, rt0.c2 HAVING (NOT (AVG(t0.c2))) UNION ALL SELECT ALL rt0.c1, t0.c2, t1.c0, rt0.c2 FROM t0, rt0, t1 GROUP BY rt0.c1, t0.c2, t1.c0, rt0.c2 HAVING ((AVG(t0.c2)) ISNULL);
SELECT ALL rt0.c1, t0.c2, t1.c0, rt0.c2 FROM t0, rt0, t1 GROUP BY rt0.c1, t0.c2, t1.c0, rt0.c2;
SELECT ALL rt0.c1, t0.c2, t1.c0, rt0.c2 FROM t0, rt0, t1 GROUP BY rt0.c1, t0.c2, t1.c0, rt0.c2 HAVING AVG(t0.c2) UNION ALL SELECT rt0.c1, t0.c2, t1.c0, rt0.c2 FROM t0, rt0, t1 GROUP BY rt0.c1, t0.c2, t1.c0, rt0.c2 HAVING (NOT (AVG(t0.c2))) UNION ALL SELECT ALL rt0.c1, t0.c2, t1.c0, rt0.c2 FROM t0, rt0, t1 GROUP BY rt0.c1, t0.c2, t1.c0, rt0.c2 HAVING ((AVG(t0.c2)) ISNULL);
SELECT ALL rt0.c1, t0.c2, t1.c0, rt0.c2 FROM t0, rt0, t1 GROUP BY rt0.c1, t0.c2, t1.c0, rt0.c2;
SELECT MAX(CAST((('~h') ISNULL) AS BLOB)) FROM t0, rt0, rt1;
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN x'' THEN v0.c0 END)GLOB((v0.c0 IN (v0.c0))))) UNION ALL SELECT * FROM v0 WHERE ((NOT (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN x'' THEN v0.c0 END)GLOB((v0.c0 IN (v0.c0))))))) UNION ALL SELECT * FROM v0 WHERE (((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN x'' THEN v0.c0 END)GLOB((v0.c0 IN (v0.c0))))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((((('蛱&~')<<(v0.c0))) IS FALSE)) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((((('蛱&~')<<(v0.c0))) IS FALSE)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((('蛱&~')<<(v0.c0))) IS FALSE)) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT rt0.c2, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1;
SELECT rt0.c2, rt0.c3, rt0.c1 FROM rt0 WHERE (CAST('' AS INTEGER)) GROUP BY rt0.c2, rt0.c3, rt0.c1 UNION SELECT rt0.c2, rt0.c3, rt0.c1 FROM rt0 WHERE ((NOT (CAST('' AS INTEGER)))) GROUP BY rt0.c2, rt0.c3, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c3, rt0.c1 FROM rt0 WHERE (((CAST('' AS INTEGER)) ISNULL)) GROUP BY rt0.c2, rt0.c3, rt0.c1;
SELECT rt0.c2, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1;
SELECT t1.c0, rt0.c3, rt1.c3, rt0.c2, t0.c2, rt1.c1, t0.c1, rt0.c0, rt0.c4, t0.c0, rt1.c0 FROM t1, rt0, t0, rt1 GROUP BY t1.c0, rt0.c3, rt1.c3, rt0.c2, t0.c2, rt1.c1, t0.c1, rt0.c0, rt0.c4, t0.c0, rt1.c0;
SELECT ALL t1.c0, rt0.c3, rt1.c3, rt0.c2, t0.c2, rt1.c1, t0.c1, rt0.c0, rt0.c4, t0.c0, rt1.c0 FROM t1, rt0, t0, rt1 GROUP BY t1.c0, rt0.c3, rt1.c3, rt0.c2, t0.c2, rt1.c1, t0.c1, rt0.c0, rt0.c4, t0.c0, rt1.c0 HAVING (+ (rt0.c3 COLLATE RTRIM)) UNION ALL SELECT ALL t1.c0, rt0.c3, rt1.c3, rt0.c2, t0.c2, rt1.c1, t0.c1, rt0.c0, rt0.c4, t0.c0, rt1.c0 FROM t1, rt0, t0, rt1 GROUP BY t1.c0, rt0.c3, rt1.c3, rt0.c2, t0.c2, rt1.c1, t0.c1, rt0.c0, rt0.c4, t0.c0, rt1.c0 HAVING (NOT ((+ (rt0.c3 COLLATE RTRIM)))) UNION ALL SELECT ALL t1.c0, rt0.c3, rt1.c3, rt0.c2, t0.c2, rt1.c1, t0.c1, rt0.c0, rt0.c4, t0.c0, rt1.c0 FROM t1, rt0, t0, rt1 GROUP BY t1.c0, rt0.c3, rt1.c3, rt0.c2, t0.c2, rt1.c1, t0.c1, rt0.c0, rt0.c4, t0.c0, rt1.c0 HAVING (((+ (rt0.c3 COLLATE RTRIM))) ISNULL);
SELECT t1.c0, rt0.c3, rt1.c3, rt0.c2, t0.c2, rt1.c1, t0.c1, rt0.c0, rt0.c4, t0.c0, rt1.c0 FROM t1, rt0, t0, rt1 GROUP BY t1.c0, rt0.c3, rt1.c3, rt0.c2, t0.c2, rt1.c1, t0.c1, rt0.c0, rt0.c4, t0.c0, rt1.c0;
SELECT ALL t1.c0, rt0.c3, rt1.c3, rt0.c2, t0.c2, rt1.c1, t0.c1, rt0.c0, rt0.c4, t0.c0, rt1.c0 FROM t1, rt0, t0, rt1 GROUP BY t1.c0, rt0.c3, rt1.c3, rt0.c2, t0.c2, rt1.c1, t0.c1, rt0.c0, rt0.c4, t0.c0, rt1.c0 HAVING (+ (rt0.c3 COLLATE RTRIM)) UNION ALL SELECT ALL t1.c0, rt0.c3, rt1.c3, rt0.c2, t0.c2, rt1.c1, t0.c1, rt0.c0, rt0.c4, t0.c0, rt1.c0 FROM t1, rt0, t0, rt1 GROUP BY t1.c0, rt0.c3, rt1.c3, rt0.c2, t0.c2, rt1.c1, t0.c1, rt0.c0, rt0.c4, t0.c0, rt1.c0 HAVING (NOT ((+ (rt0.c3 COLLATE RTRIM)))) UNION ALL SELECT ALL t1.c0, rt0.c3, rt1.c3, rt0.c2, t0.c2, rt1.c1, t0.c1, rt0.c0, rt0.c4, t0.c0, rt1.c0 FROM t1, rt0, t0, rt1 GROUP BY t1.c0, rt0.c3, rt1.c3, rt0.c2, t0.c2, rt1.c1, t0.c1, rt0.c0, rt0.c4, t0.c0, rt1.c0 HAVING (((+ (rt0.c3 COLLATE RTRIM))) ISNULL);
SELECT t1.c0, rt0.c3, rt1.c3, rt0.c2, t0.c2, rt1.c1, t0.c1, rt0.c0, rt0.c4, t0.c0, rt1.c0 FROM t1, rt0, t0, rt1 GROUP BY t1.c0, rt0.c3, rt1.c3, rt0.c2, t0.c2, rt1.c1, t0.c1, rt0.c0, rt0.c4, t0.c0, rt1.c0;
SELECT ALL v0.c0 FROM t0 RIGHT OUTER JOIN v0 ON (+ (('}&Ob*[F' IN (v0.c0))));
SELECT ALL v0.c0 FROM t0 RIGHT OUTER JOIN v0 ON (+ (('}&Ob*[F' IN (v0.c0)))) WHERE (((t0.c1)<(v0.c0)) COLLATE RTRIM) UNION ALL SELECT ALL v0.c0 FROM t0 RIGHT OUTER JOIN v0 ON (+ (('}&Ob*[F' IN (v0.c0)))) WHERE ((NOT (((t0.c1)<(v0.c0)) COLLATE RTRIM))) UNION ALL SELECT v0.c0 FROM t0 RIGHT OUTER JOIN v0 ON (+ (('}&Ob*[F' IN (v0.c0)))) WHERE (((((t0.c1)<(v0.c0)) COLLATE RTRIM) ISNULL));
SELECT ALL v0.c0 FROM t0 RIGHT OUTER JOIN v0 ON (+ (('}&Ob*[F' IN (v0.c0))));
SELECT DISTINCT * FROM rt0, t1, t0, rt1;
SELECT DISTINCT * FROM rt0, t1, t0, rt1 WHERE (CASE ((t0.c0)==(t1.c0))  WHEN CASE WHEN 0.3522807970394026 THEN rt0.c4 END THEN (t0.c2 IN ()) WHEN ((((rt1.c0)AND(t1.c0)))OR(0.8155555133314525)) THEN ((((((((t0.c1)AND(rt0.c1)))AND(rt1.c0)))AND(rt1.c3)))AND(rt1.c0)) WHEN (t0.c0 IN (rt0.c3)) THEN ((((((((rt0.c1)AND(rt1.c0)))OR(NULL)))OR(t0.c2)))AND(rt0.c4)) END) UNION SELECT DISTINCT * FROM rt0, t1, t0, rt1 WHERE ((NOT (CASE ((t0.c0)==(t1.c0))  WHEN CASE WHEN 0.3522807970394026 THEN rt0.c4 END THEN (t0.c2 IN ()) WHEN ((((rt1.c0)AND(t1.c0)))OR(0.8155555133314525)) THEN ((((((((t0.c1)AND(rt0.c1)))AND(rt1.c0)))AND(rt1.c3)))AND(rt1.c0)) WHEN (t0.c0 IN (rt0.c3)) THEN ((((((((rt0.c1)AND(rt1.c0)))OR(NULL)))OR(t0.c2)))AND(rt0.c4)) END))) UNION SELECT DISTINCT * FROM rt0, t1, t0, rt1 WHERE (((CASE ((t0.c0)=(t1.c0))  WHEN CASE WHEN 0.3522807970394026 THEN rt0.c4 END THEN (t0.c2 IN ()) WHEN ((((rt1.c0)AND(t1.c0)))OR(0.8155555133314525)) THEN ((((((((t0.c1)AND(rt0.c1)))AND(rt1.c0)))AND(rt1.c3)))AND(rt1.c0)) WHEN (t0.c0 IN (rt0.c3)) THEN ((((((((rt0.c1)AND(rt1.c0)))OR(NULL)))OR(t0.c2)))AND(rt0.c4)) END) ISNULL));
SELECT DISTINCT * FROM rt0, t1, t0, rt1;
SELECT ALL rt0.c0, rt1.c2, t0.c1, t1.c0, v0.c0 FROM t0, rt0, t1 RIGHT OUTER JOIN rt1 ON rt0.c0 RIGHT OUTER JOIN v0 ON QUOTE((rt0.c0 IN (rt1.c2))) GROUP BY rt0.c0, rt1.c2, t0.c1, t1.c0, v0.c0;
SELECT ALL rt0.c0, rt1.c2, t0.c1, t1.c0, v0.c0 FROM t0, rt0, t1 RIGHT OUTER JOIN rt1 ON rt0.c0 RIGHT OUTER JOIN v0 ON QUOTE((rt0.c0 IN (rt1.c2))) WHERE ((((rt1.c0 IN ())) BETWEEN (0.48081515099870176) AND ((((rt1.c2))>((rt0.c2)))))) GROUP BY rt0.c0, rt1.c2, t0.c1, t1.c0, v0.c0 UNION SELECT rt0.c0, rt1.c2, t0.c1, t1.c0, v0.c0 FROM t0, rt0, t1 RIGHT OUTER JOIN rt1 ON rt0.c0 RIGHT OUTER JOIN v0 ON QUOTE((rt0.c0 IN (rt1.c2))) WHERE ((NOT ((((rt1.c0 IN ())) BETWEEN (0.48081515099870176) AND ((((rt1.c2))>((rt0.c2)))))))) GROUP BY rt0.c0, rt1.c2, t0.c1, t1.c0, v0.c0 UNION SELECT ALL rt0.c0, rt1.c2, t0.c1, t1.c0, v0.c0 FROM t0, rt0, t1 RIGHT OUTER JOIN rt1 ON rt0.c0 RIGHT OUTER JOIN v0 ON QUOTE((rt0.c0 IN (rt1.c2))) WHERE ((((((rt1.c0 IN ())) BETWEEN (0.48081515099870176) AND ((((rt1.c2))>((rt0.c2)))))) ISNULL)) GROUP BY rt0.c0, rt1.c2, t0.c1, t1.c0, v0.c0;
SELECT ALL rt0.c0, rt1.c2, t0.c1, t1.c0, v0.c0 FROM t0, rt0, t1 RIGHT OUTER JOIN rt1 ON rt0.c0 RIGHT OUTER JOIN v0 ON QUOTE((rt0.c0 IN (rt1.c2))) GROUP BY rt0.c0, rt1.c2, t0.c1, t1.c0, v0.c0;
SELECT ALL rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2, rt0.c0 HAVING CAST(TOTAL(rt0.c3) AS INTEGER) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (CAST(TOTAL(rt0.c3) AS INTEGER))) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2, rt0.c0 HAVING ((CAST(TOTAL(rt0.c3) AS INTEGER)) ISNULL);
SELECT ALL rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2, rt0.c0 HAVING CAST(TOTAL(rt0.c3) AS INTEGER) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (CAST(TOTAL(rt0.c3) AS INTEGER))) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2, rt0.c0 HAVING ((CAST(TOTAL(rt0.c3) AS INTEGER)) ISNULL);
SELECT ALL rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2, rt0.c0;
SELECT v0.c0, t0.c2, t0.c0 FROM t0 RIGHT OUTER JOIN v0 ON (((t0.c2 IN ())) IS FALSE);
SELECT ALL v0.c0, t0.c2, t0.c0 FROM t0 RIGHT OUTER JOIN v0 ON (((t0.c2 IN ())) IS FALSE) WHERE ((CAST(t0.c2 AS TEXT) IN ((('-1803528960')<<(t0.c1)), (NOT (t0.c1))))) UNION ALL SELECT v0.c0, t0.c2, t0.c0 FROM t0 RIGHT OUTER JOIN v0 ON (((t0.c2 IN ())) IS FALSE) WHERE ((NOT ((CAST(t0.c2 AS TEXT) IN ((('-1803528960')<<(t0.c1)), (NOT (t0.c1))))))) UNION ALL SELECT v0.c0, t0.c2, t0.c0 FROM t0 RIGHT OUTER JOIN v0 ON (((t0.c2 IN ())) IS FALSE) WHERE ((((CAST(t0.c2 AS TEXT) IN ((('-1803528960')<<(t0.c1)), (NOT (t0.c1))))) ISNULL));
SELECT v0.c0, t0.c2, t0.c0 FROM t0 RIGHT OUTER JOIN v0 ON (((t0.c2 IN ())) IS FALSE);
SELECT DISTINCT v0.c0, t1.c0 FROM v0 NOT INDEXED, t1;
SELECT DISTINCT v0.c0, t1.c0 FROM v0, t1 WHERE ((NOT (CAST(x'' AS INTEGER)))) UNION SELECT DISTINCT v0.c0, t1.c0 FROM v0, t1 WHERE ((NOT ((NOT (CAST(x'' AS INTEGER)))))) UNION SELECT DISTINCT v0.c0, t1.c0 FROM v0, t1 WHERE ((((NOT (CAST(x'' AS INTEGER)))) ISNULL));
SELECT DISTINCT v0.c0, t1.c0 FROM v0 NOT INDEXED, t1;
SELECT t0.c1, rt1.c2, rt1.c3, t0.c0, rt1.c0, t0.c2 FROM rt1, t0 GROUP BY t0.c1, rt1.c2, rt1.c3, t0.c0, rt1.c0, t0.c2;
SELECT t0.c1, rt1.c2, rt1.c3, t0.c0, rt1.c0, t0.c2 FROM rt1, t0 WHERE (CASE ((rt1.c3) NOT BETWEEN (t0.c1) AND (rt1.c0))  WHEN rt1.c2 COLLATE BINARY THEN t0.c0 WHEN ((((t0.c0)AND(t0.c1)))OR(t0.c1)) THEN rt1.c0 COLLATE BINARY WHEN (((rt1.c0)) BETWEEN ((t0.c0)) AND ((t0.c2))) THEN (NOT (rt1.c3)) END) GROUP BY t0.c1, rt1.c2, rt1.c3, t0.c0, rt1.c0, t0.c2 UNION SELECT ALL t0.c1, rt1.c2, rt1.c3, t0.c0, rt1.c0, t0.c2 FROM rt1, t0 WHERE ((NOT (CASE ((rt1.c3) NOT BETWEEN (t0.c1) AND (rt1.c0))  WHEN rt1.c2 COLLATE BINARY THEN t0.c0 WHEN ((((t0.c0)AND(t0.c1)))OR(t0.c1)) THEN rt1.c0 COLLATE BINARY WHEN (((rt1.c0)) BETWEEN ((t0.c0)) AND ((t0.c2))) THEN (NOT (rt1.c3)) END))) GROUP BY t0.c1, rt1.c2, rt1.c3, t0.c0, rt1.c0, t0.c2 UNION SELECT t0.c1, rt1.c2, rt1.c3, t0.c0, rt1.c0, t0.c2 FROM rt1, t0 WHERE (((CASE ((rt1.c3) NOT BETWEEN (t0.c1) AND (rt1.c0))  WHEN rt1.c2 COLLATE BINARY THEN t0.c0 WHEN ((((t0.c0)AND(t0.c1)))OR(t0.c1)) THEN rt1.c0 COLLATE BINARY WHEN (((rt1.c0)) BETWEEN ((t0.c0)) AND ((t0.c2))) THEN (NOT (rt1.c3)) END) ISNULL)) GROUP BY t0.c1, rt1.c2, rt1.c3, t0.c0, rt1.c0, t0.c2;
SELECT t0.c1, rt1.c2, rt1.c3, t0.c0, rt1.c0, t0.c2 FROM rt1, t0 GROUP BY t0.c1, rt1.c2, rt1.c3, t0.c0, rt1.c0, t0.c2;
SELECT ALL v0.c0, rt0.c3, rt0.c1, rt0.c4, t0.c1, rt0.c0, rt1.c1, t0.c2, t1.c0, t0.c0, rt1.c0, rt1.c2 FROM t0 CROSS JOIN v0 ON (((rt1.c2)) BETWEEN ((NULL)) AND (((- (rt0.c2))))) INNER JOIN rt0 ON rt1.c2 INNER JOIN t1 ON CAST(((rt0.c0)OR(t0.c1)) AS TEXT) CROSS JOIN rt1 ON CAST((((rt0.c2)) NOT BETWEEN ((rt1.c3)) AND ((0.1557462054131764))) AS TEXT) GROUP BY v0.c0, rt0.c3, rt0.c1, rt0.c4, t0.c1, rt0.c0, rt1.c1, t0.c2, t1.c0, t0.c0, rt1.c0, rt1.c2;
SELECT v0.c0, rt0.c3, rt0.c1, rt0.c4, t0.c1, rt0.c0, rt1.c1, t0.c2, t1.c0, t0.c0, rt1.c0, rt1.c2 FROM t0 CROSS JOIN v0 ON (((rt1.c2)) BETWEEN ((NULL)) AND (((- (rt0.c2))))) INNER JOIN rt0 ON rt1.c2 INNER JOIN t1 ON CAST(((rt0.c0)OR(t0.c1)) AS TEXT) CROSS JOIN rt1 ON CAST((((rt0.c2)) NOT BETWEEN ((rt1.c3)) AND ((0.1557462054131764))) AS TEXT) GROUP BY v0.c0, rt0.c3, rt0.c1, rt0.c4, t0.c1, rt0.c0, rt1.c1, t0.c2, t1.c0, t0.c0, rt1.c0, rt1.c2 HAVING GROUP_CONCAT(AVG(t0.c2)) UNION ALL SELECT v0.c0, rt0.c3, rt0.c1, rt0.c4, t0.c1, rt0.c0, rt1.c1, t0.c2, t1.c0, t0.c0, rt1.c0, rt1.c2 FROM t0 CROSS JOIN v0 ON (((rt1.c2)) BETWEEN ((NULL)) AND (((- (rt0.c2))))) INNER JOIN rt0 ON rt1.c2 INNER JOIN t1 ON CAST(((rt0.c0)OR(t0.c1)) AS TEXT) CROSS JOIN rt1 ON CAST((((rt0.c2)) NOT BETWEEN ((rt1.c3)) AND ((0.1557462054131764))) AS TEXT) GROUP BY v0.c0, rt0.c3, rt0.c1, rt0.c4, t0.c1, rt0.c0, rt1.c1, t0.c2, t1.c0, t0.c0, rt1.c0, rt1.c2 HAVING (NOT (GROUP_CONCAT(AVG(t0.c2)))) UNION ALL SELECT ALL v0.c0, rt0.c3, rt0.c1, rt0.c4, t0.c1, rt0.c0, rt1.c1, t0.c2, t1.c0, t0.c0, rt1.c0, rt1.c2 FROM t0 CROSS JOIN v0 ON (((rt1.c2)) BETWEEN ((NULL)) AND (((- (rt0.c2))))) INNER JOIN rt0 ON rt1.c2 INNER JOIN t1 ON CAST(((rt0.c0)OR(t0.c1)) AS TEXT) CROSS JOIN rt1 ON CAST((((rt0.c2)) NOT BETWEEN ((rt1.c3)) AND ((0.1557462054131764))) AS TEXT) GROUP BY v0.c0, rt0.c3, rt0.c1, rt0.c4, t0.c1, rt0.c0, rt1.c1, t0.c2, t1.c0, t0.c0, rt1.c0, rt1.c2 HAVING ((GROUP_CONCAT(AVG(t0.c2))) ISNULL);
SELECT ALL * FROM t1;
SELECT * FROM t1 WHERE ((~ (((t1.c0)|(t1.c0))))) UNION ALL SELECT * FROM t1 WHERE ((NOT ((~ (((t1.c0)|(t1.c0))))))) UNION ALL SELECT * FROM t1 WHERE ((((~ (((t1.c0)|(t1.c0))))) ISNULL));
SELECT ALL * FROM t1;
SELECT DISTINCT * FROM t0 FULL OUTER JOIN rt1 ON (rt1.c3 IN ()) COLLATE RTRIM;
SELECT DISTINCT * FROM t0 FULL OUTER JOIN rt1 ON (rt1.c3 IN ()) COLLATE RTRIM WHERE ((((~ ('80287437')))>>((((-555744804, t0.c0, t0.c1))==((t0.c0, t0.c2, rt1.c1)))))) UNION SELECT DISTINCT * FROM t0 FULL OUTER JOIN rt1 ON (rt1.c3 IN ()) COLLATE RTRIM WHERE ((NOT ((((~ ('80287437')))>>((((-555744804, t0.c0, t0.c1))=((t0.c0, t0.c2, rt1.c1)))))))) UNION SELECT DISTINCT * FROM t0 FULL OUTER JOIN rt1 ON (rt1.c3 IN ()) COLLATE RTRIM WHERE ((((((~ ('80287437')))>>((((-555744804, t0.c0, t0.c1))=((t0.c0, t0.c2, rt1.c1)))))) ISNULL));
SELECT DISTINCT * FROM t0 FULL OUTER JOIN rt1 ON (rt1.c3 IN ()) COLLATE RTRIM;
SELECT ALL t0.c2, v0.c0, t1.c0, t0.c0 FROM v0, t1, t0 GROUP BY t0.c2, v0.c0, t1.c0, t0.c0;
SELECT t0.c2, v0.c0, t1.c0, t0.c0 FROM v0, t1, t0 WHERE (((CASE WHEN t1.c0 THEN t0.c0 WHEN t1.c0 THEN t0.c2 WHEN t0.c0 THEN t0.c0 ELSE t0.c1 END)GLOB(CASE t0.c1  WHEN v0.c0 THEN t0.c0 ELSE t0.c2 END))) GROUP BY t0.c2, v0.c0, t1.c0, t0.c0 UNION SELECT ALL t0.c2, v0.c0, t1.c0, t0.c0 FROM v0, t1, t0 WHERE ((NOT (((CASE WHEN t1.c0 THEN t0.c0 WHEN t1.c0 THEN t0.c2 WHEN t0.c0 THEN t0.c0 ELSE t0.c1 END)GLOB(CASE t0.c1  WHEN v0.c0 THEN t0.c0 ELSE t0.c2 END))))) GROUP BY t0.c2, v0.c0, t1.c0, t0.c0 UNION SELECT ALL t0.c2, v0.c0, t1.c0, t0.c0 FROM v0, t1, t0 WHERE (((((CASE WHEN t1.c0 THEN t0.c0 WHEN t1.c0 THEN t0.c2 WHEN t0.c0 THEN t0.c0 ELSE t0.c1 END)GLOB(CASE t0.c1  WHEN v0.c0 THEN t0.c0 ELSE t0.c2 END))) ISNULL)) GROUP BY t0.c2, v0.c0, t1.c0, t0.c0;
SELECT ALL t0.c2, v0.c0, t1.c0, t0.c0 FROM v0, t1, t0 GROUP BY t0.c2, v0.c0, t1.c0, t0.c0;
SELECT rt0.c1 FROM rt0, t0, t1, rt1 FULL OUTER JOIN v0 ON (((rt0.c0)>(v0.c0)) IN (rt1.c0, rt0.c4 COLLATE BINARY)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, t0, t1, rt1 NOT INDEXED FULL OUTER JOIN v0 ON (((rt0.c0)>(v0.c0)) IN (rt1.c0, rt0.c4 COLLATE BINARY)) GROUP BY rt0.c1 HAVING (((rt0.c0) NOTNULL) IN ()) UNION ALL SELECT ALL rt0.c1 FROM rt0, t0, t1, rt1 FULL OUTER JOIN v0 ON (((rt0.c0)>(v0.c0)) IN (rt1.c0, rt0.c4 COLLATE BINARY)) GROUP BY rt0.c1 HAVING (NOT ((((rt0.c0) NOTNULL) IN ()))) UNION ALL SELECT ALL rt0.c1 FROM rt0, t0, t1, rt1 FULL OUTER JOIN v0 ON (((rt0.c0)>(v0.c0)) IN (rt1.c0, rt0.c4 COLLATE BINARY)) GROUP BY rt0.c1 HAVING (((((rt0.c0) NOTNULL) IN ())) ISNULL);
SELECT rt0.c1 FROM rt0, t0, t1, rt1 FULL OUTER JOIN v0 ON (((rt0.c0)>(v0.c0)) IN (rt1.c0, rt0.c4 COLLATE BINARY)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, t0, t1, rt1 NOT INDEXED FULL OUTER JOIN v0 ON (((rt0.c0)>(v0.c0)) IN (rt1.c0, rt0.c4 COLLATE BINARY)) GROUP BY rt0.c1 HAVING (((rt0.c0) NOTNULL) IN ()) UNION ALL SELECT ALL rt0.c1 FROM rt0, t0, t1, rt1 FULL OUTER JOIN v0 ON (((rt0.c0)>(v0.c0)) IN (rt1.c0, rt0.c4 COLLATE BINARY)) GROUP BY rt0.c1 HAVING (NOT ((((rt0.c0) NOTNULL) IN ()))) UNION ALL SELECT ALL rt0.c1 FROM rt0, t0, t1, rt1 FULL OUTER JOIN v0 ON (((rt0.c0)>(v0.c0)) IN (rt1.c0, rt0.c4 COLLATE BINARY)) GROUP BY rt0.c1 HAVING (((((rt0.c0) NOTNULL) IN ())) ISNULL);
SELECT rt0.c1 FROM rt0, t0, t1, rt1 FULL OUTER JOIN v0 ON (((rt0.c0)>(v0.c0)) IN (rt1.c0, rt0.c4 COLLATE BINARY)) GROUP BY rt0.c1;
SELECT t0.c2, t0.c0 FROM t0;
SELECT ALL t0.c2, t0.c0 FROM t0 WHERE (TRIM(DISTINCT ((t0.c2)||(0X3386121e)), t0.c2 COLLATE RTRIM)) UNION ALL SELECT ALL t0.c2, t0.c0 FROM t0 WHERE ((NOT (TRIM(DISTINCT ((t0.c2)||(0X3386121e)), t0.c2 COLLATE RTRIM)))) UNION ALL SELECT t0.c2, t0.c0 FROM t0 WHERE (((TRIM(DISTINCT ((t0.c2)||(0x3386121e)), t0.c2 COLLATE RTRIM)) ISNULL));
SELECT t0.c2, t0.c0 FROM t0;
SELECT DISTINCT * FROM t0, t1, rt1, rt0, v0;
SELECT DISTINCT * FROM t0, t1, rt1, rt0, v0 WHERE (CAST(((t1.c0)<=(t0.c0)) AS BLOB)) UNION SELECT DISTINCT * FROM t0, t1, rt1, rt0, v0 WHERE ((NOT (CAST(((t1.c0)<=(t0.c0)) AS BLOB)))) UNION SELECT DISTINCT * FROM t0, t1, rt1, rt0, v0 WHERE (((CAST(((t1.c0)<=(t0.c0)) AS BLOB)) ISNULL));
SELECT DISTINCT * FROM t0, t1, rt1, rt0, v0;
SELECT t0.c0, rt0.c4, rt0.c1, t1.c0, rt1.c3, rt0.c3, t0.c2, v0.c0, rt1.c2, t0.c1, rt1.c1, rt0.c0 FROM rt0 RIGHT OUTER JOIN rt1 ON CAST(((((v0.c0)OR(rt0.c0)))AND(t0.c2)) AS TEXT) FULL OUTER JOIN t0 ON CAST(HEX(DISTINCT v0.c0) AS BLOB) CROSS JOIN t1 ON rt1.c3 INNER JOIN v0 ON CASE 0.07337669700063898  WHEN (((v0.c0)) BETWEEN ((t0.c1)) AND ((rt0.c2))) THEN ((rt0.c3) IS FALSE) WHEN rt1.c3 COLLATE BINARY THEN ((rt1.c1)GLOB(rt0.c1)) WHEN ((rt0.c0) IS FALSE) THEN LTRIM(t0.c0) ELSE CAST(rt1.c3 AS REAL) END GROUP BY t0.c0, rt0.c4, rt0.c1, t1.c0, rt1.c3, rt0.c3, t0.c2, v0.c0, rt1.c2, t0.c1, rt1.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, t1.c0 FROM rt0, t1 GROUP BY rt0.c2, rt0.c1, t1.c0;
SELECT ALL rt0.c2, rt0.c1, t1.c0 FROM rt0, t1 GROUP BY rt0.c2, rt0.c1, t1.c0 HAVING COUNT(*) COLLATE RTRIM UNION ALL SELECT ALL rt0.c2, rt0.c1, t1.c0 FROM rt0, t1 GROUP BY rt0.c2, rt0.c1, t1.c0 HAVING (NOT (COUNT(*) COLLATE RTRIM)) UNION ALL SELECT rt0.c2, rt0.c1, t1.c0 FROM rt0, t1 GROUP BY rt0.c2, rt0.c1, t1.c0 HAVING ((COUNT(*) COLLATE RTRIM) ISNULL);
SELECT ALL rt0.c2, rt0.c1, t1.c0 FROM rt0, t1 GROUP BY rt0.c2, rt0.c1, t1.c0;
SELECT ALL rt0.c2, rt0.c1, t1.c0 FROM rt0, t1 GROUP BY rt0.c2, rt0.c1, t1.c0 HAVING COUNT(*) COLLATE RTRIM UNION ALL SELECT ALL rt0.c2, rt0.c1, t1.c0 FROM rt0, t1 GROUP BY rt0.c2, rt0.c1, t1.c0 HAVING (NOT (COUNT(*) COLLATE RTRIM)) UNION ALL SELECT rt0.c2, rt0.c1, t1.c0 FROM rt0, t1 GROUP BY rt0.c2, rt0.c1, t1.c0 HAVING ((COUNT(*) COLLATE RTRIM) ISNULL);
SELECT ALL rt0.c2, rt0.c1, t1.c0 FROM rt0, t1 GROUP BY rt0.c2, rt0.c1, t1.c0;
SELECT ALL * FROM rt1, v0, t0;
SELECT * FROM rt1, v0, t0 WHERE (CASE WHEN ((rt1.c2) IS TRUE) THEN (rt1.c0 IN ()) ELSE CAST(t0.c2 AS NUMERIC) END) UNION ALL SELECT ALL * FROM rt1, v0, t0 WHERE ((NOT (CASE WHEN ((rt1.c2) IS TRUE) THEN (rt1.c0 IN ()) ELSE CAST(t0.c2 AS NUMERIC) END))) UNION ALL SELECT * FROM rt1, v0, t0 WHERE (((CASE WHEN ((rt1.c2) IS TRUE) THEN (rt1.c0 IN ()) ELSE CAST(t0.c2 AS NUMERIC) END) ISNULL));
SELECT ALL * FROM rt1, v0, t0;
SELECT DISTINCT * FROM rt0, v0, rt1, t1, t0;
SELECT DISTINCT * FROM rt0, v0, rt1, t1, t0 WHERE (CAST(((rt1.c2)|(t0.c1)) AS BLOB)) UNION SELECT DISTINCT * FROM rt0, v0, rt1, t1, t0 WHERE ((NOT (CAST(((rt1.c2)|(t0.c1)) AS BLOB)))) UNION SELECT DISTINCT * FROM rt0, v0, rt1, t1, t0 WHERE (((CAST(((rt1.c2)|(t0.c1)) AS BLOB)) ISNULL));
SELECT DISTINCT * FROM rt0, v0, rt1, t1, t0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE ('1119764661') GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT ('1119764661'))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((('1119764661') ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL rt0.c4, t0.c1 FROM rt0, t0, v0, t1, rt1 GROUP BY rt0.c4, t0.c1;
SELECT rt0.c4, t0.c1 FROM rt0, t0, v0, t1, rt1 GROUP BY rt0.c4, t0.c1 HAVING (MAX(COUNT(*)) IN ()) UNION ALL SELECT ALL rt0.c4, t0.c1 FROM rt0, t0, v0, t1, rt1 GROUP BY rt0.c4, t0.c1 HAVING (NOT ((MAX(COUNT(*)) IN ()))) UNION ALL SELECT rt0.c4, t0.c1 FROM rt0, t0, v0, t1, rt1 GROUP BY rt0.c4, t0.c1 HAVING (((MAX(COUNT(*)) IN ())) ISNULL);
SELECT ALL rt0.c4, t0.c1 FROM rt0, t0, v0, t1, rt1 GROUP BY rt0.c4, t0.c1;
SELECT rt0.c4, t0.c1 FROM rt0, t0, v0, t1, rt1 GROUP BY rt0.c4, t0.c1 HAVING (MAX(COUNT(*)) IN ()) UNION ALL SELECT ALL rt0.c4, t0.c1 FROM rt0, t0, v0, t1, rt1 GROUP BY rt0.c4, t0.c1 HAVING (NOT ((MAX(COUNT(*)) IN ()))) UNION ALL SELECT rt0.c4, t0.c1 FROM rt0, t0, v0, t1, rt1 GROUP BY rt0.c4, t0.c1 HAVING (((MAX(COUNT(*)) IN ())) ISNULL);
SELECT ALL rt0.c4, t0.c1 FROM rt0, t0, v0, t1, rt1 GROUP BY rt0.c4, t0.c1;
SELECT ALL TOTAL((((('1439397280') BETWEEN (t0.c2) AND (t0.c2)))<=(((t0.c0)|(t1.c0))))) FROM t1, t0;
SELECT ALL * FROM v0, rt1, t0, rt0;
SELECT * FROM v0, rt1, t0, rt0 WHERE (CASE NULL  WHEN rt0.c3 THEN (((rt1.c0, rt0.c0, rt1.c3))>=((rt0.c4, rt1.c0, rt0.c2))) ELSE ((t0.c0)<=(rt1.c2)) END) UNION ALL SELECT * FROM v0, rt1, t0, rt0 WHERE ((NOT (CASE NULL  WHEN rt0.c3 THEN (((rt1.c0, rt0.c0, rt1.c3))>=((rt0.c4, rt1.c0, rt0.c2))) ELSE ((t0.c0)<=(rt1.c2)) END))) UNION ALL SELECT * FROM v0, rt1, t0, rt0 WHERE (((CASE NULL  WHEN rt0.c3 THEN (((rt1.c0, rt0.c0, rt1.c3))>=((rt0.c4, rt1.c0, rt0.c2))) ELSE ((t0.c0)<=(rt1.c2)) END) ISNULL));
SELECT ALL * FROM v0, rt1, t0, rt0;
SELECT DISTINCT t0.c2 FROM t1, v0, rt0, t0, rt1 INDEXED BY i16;
SELECT rt0.c4, rt0.c1, t1.c0, rt1.c0, rt1.c3, rt0.c3, t0.c0, rt1.c1 FROM t1, t0 NOT INDEXED CROSS JOIN rt0 ON (CAST(NULL AS NUMERIC) IN ()) LEFT OUTER JOIN rt1 ON ((LIKELY(x'b532'))&(0.7391270374155803)) GROUP BY rt0.c4, rt0.c1, t1.c0, rt1.c0, rt1.c3, rt0.c3, t0.c0, rt1.c1;
SELECT rt0.c4, rt0.c1, t1.c0, rt1.c0, rt1.c3, rt0.c3, t0.c0, rt1.c1 FROM t1, t0 CROSS JOIN rt0 ON (CAST(NULL AS NUMERIC) IN ()) LEFT OUTER JOIN rt1 ON ((LIKELY(x'b532'))&(0.7391270374155803)) WHERE (((t0.c0 COLLATE BINARY)IS NOT(rt1.c1 COLLATE BINARY))) GROUP BY rt0.c4, rt0.c1, t1.c0, rt1.c0, rt1.c3, rt0.c3, t0.c0, rt1.c1 UNION SELECT rt0.c4, rt0.c1, t1.c0, rt1.c0, rt1.c3, rt0.c3, t0.c0, rt1.c1 FROM t1, t0 CROSS JOIN rt0 ON (CAST(NULL AS NUMERIC) IN ()) LEFT OUTER JOIN rt1 ON ((LIKELY(x'b532'))&(0.7391270374155803)) WHERE ((NOT (((t0.c0 COLLATE BINARY)IS NOT(rt1.c1 COLLATE BINARY))))) GROUP BY rt0.c4, rt0.c1, t1.c0, rt1.c0, rt1.c3, rt0.c3, t0.c0, rt1.c1 UNION SELECT rt0.c4, rt0.c1, t1.c0, rt1.c0, rt1.c3, rt0.c3, t0.c0, rt1.c1 FROM t1, t0 CROSS JOIN rt0 ON (CAST(NULL AS NUMERIC) IN ()) LEFT OUTER JOIN rt1 ON ((LIKELY(x'b532'))&(0.7391270374155803)) WHERE (((((t0.c0 COLLATE BINARY)IS NOT(rt1.c1 COLLATE BINARY))) ISNULL)) GROUP BY rt0.c4, rt0.c1, t1.c0, rt1.c0, rt1.c3, rt0.c3, t0.c0, rt1.c1;
SELECT rt0.c4, rt0.c1, t1.c0, rt1.c0, rt1.c3, rt0.c3, t0.c0, rt1.c1 FROM t1, t0 NOT INDEXED CROSS JOIN rt0 ON (CAST(NULL AS NUMERIC) IN ()) LEFT OUTER JOIN rt1 ON ((LIKELY(x'b532'))&(0.7391270374155803)) GROUP BY rt0.c4, rt0.c1, t1.c0, rt1.c0, rt1.c3, rt0.c3, t0.c0, rt1.c1;
SELECT ALL t0.c2, rt1.c1, v0.c0, rt0.c1 FROM rt1, v0, rt0, t1 NATURAL JOIN t0 GROUP BY t0.c2, rt1.c1, v0.c0, rt0.c1;
SELECT ALL t0.c2, rt1.c1, v0.c0, rt0.c1 FROM rt1, v0, rt0, t1 NATURAL JOIN t0 GROUP BY t0.c2, rt1.c1, v0.c0, rt0.c1 HAVING MIN(MAX(rt1.c3)) UNION ALL SELECT t0.c2, rt1.c1, v0.c0, rt0.c1 FROM rt1, v0, rt0, t1 NATURAL JOIN t0 GROUP BY t0.c2, rt1.c1, v0.c0, rt0.c1 HAVING (NOT (MIN(MAX(rt1.c3)))) UNION ALL SELECT ALL t0.c2, rt1.c1, v0.c0, rt0.c1 FROM rt1, v0, rt0, t1 NATURAL JOIN t0 GROUP BY t0.c2, rt1.c1, v0.c0, rt0.c1 HAVING ((MIN(MAX(rt1.c3))) ISNULL);
SELECT ALL rt1.c3, rt0.c4, rt1.c2, rt0.c2, rt1.c1 FROM rt0, rt1;
SELECT ALL rt1.c3, rt0.c4, rt1.c2, rt0.c2, rt1.c1 FROM rt0, rt1 WHERE (((((((('0.44534853463619406')) BETWEEN ((rt0.c3)) AND ((rt1.c3))))OR(rt1.c0 COLLATE NOCASE)))AND(LOWER(DISTINCT rt1.c2)))) UNION ALL SELECT rt1.c3, rt0.c4, rt1.c2, rt0.c2, rt1.c1 FROM rt0, rt1 WHERE ((NOT (((((((('0.44534853463619406')) BETWEEN ((rt0.c3)) AND ((rt1.c3))))OR(rt1.c0 COLLATE NOCASE)))AND(LOWER(DISTINCT rt1.c2)))))) UNION ALL SELECT ALL rt1.c3, rt0.c4, rt1.c2, rt0.c2, rt1.c1 FROM rt0, rt1 WHERE (((((((((('0.44534853463619406')) BETWEEN ((rt0.c3)) AND ((rt1.c3))))OR(rt1.c0 COLLATE NOCASE)))AND(LOWER(DISTINCT rt1.c2)))) ISNULL));
SELECT ALL rt1.c3, rt0.c4, rt1.c2, rt0.c2, rt1.c1 FROM rt0, rt1;
SELECT DISTINCT * FROM t0, t1, rt1 INNER JOIN rt0 ON (('-1051511071') BETWEEN (CAST(t1.c0 AS NUMERIC)) AND (CASE WHEN rt0.c3 THEN 'Q⪒-/6뿫>' ELSE rt1.c2 END)) FULL OUTER JOIN v0 ON UPPER((v0.c0 IN ()));
SELECT DISTINCT * FROM t0, t1, rt1 INNER JOIN rt0 ON (('-1051511071') BETWEEN (CAST(t1.c0 AS NUMERIC)) AND (CASE WHEN rt0.c3 THEN 'Q⪒-/6뿫>' ELSE rt1.c2 END)) FULL OUTER JOIN v0 ON UPPER((v0.c0 IN ())) WHERE (((((CASE WHEN t1.c0 THEN rt1.c3 ELSE rt1.c3 END)OR(rt1.c1 COLLATE NOCASE)))AND('939889890' COLLATE BINARY))) UNION SELECT DISTINCT * FROM t0, t1, rt1 INNER JOIN rt0 ON (('-1051511071') BETWEEN (CAST(t1.c0 AS NUMERIC)) AND (CASE WHEN rt0.c3 THEN 'Q⪒-/6뿫>' ELSE rt1.c2 END)) FULL OUTER JOIN v0 ON UPPER((v0.c0 IN ())) WHERE ((NOT (((((CASE WHEN t1.c0 THEN rt1.c3 ELSE rt1.c3 END)OR(rt1.c1 COLLATE NOCASE)))AND('939889890' COLLATE BINARY))))) UNION SELECT DISTINCT * FROM t0, t1, rt1 INNER JOIN rt0 ON (('-1051511071') BETWEEN (CAST(t1.c0 AS NUMERIC)) AND (CASE WHEN rt0.c3 THEN 'Q⪒-/6뿫>' ELSE rt1.c2 END)) FULL OUTER JOIN v0 ON UPPER((v0.c0 IN ())) WHERE (((((((CASE WHEN t1.c0 THEN rt1.c3 ELSE rt1.c3 END)OR(rt1.c1 COLLATE NOCASE)))AND('939889890' COLLATE BINARY))) ISNULL));
SELECT DISTINCT * FROM t0, t1, rt1 INNER JOIN rt0 ON (('-1051511071') BETWEEN (CAST(t1.c0 AS NUMERIC)) AND (CASE WHEN rt0.c3 THEN 'Q⪒-/6뿫>' ELSE rt1.c2 END)) FULL OUTER JOIN v0 ON UPPER((v0.c0 IN ()));
SELECT ALL t0.c1, rt1.c2, rt1.c0, rt1.c3, v0.c0 FROM v0, rt1, t0 GROUP BY t0.c1, rt1.c2, rt1.c0, rt1.c3, v0.c0;
SELECT t0.c1, rt1.c2, rt1.c0, rt1.c3, v0.c0 FROM v0, rt1, t0 WHERE (CAST(((((rt1.c0)AND(rt1.c0)))AND(t0.c0)) AS INTEGER)) GROUP BY t0.c1, rt1.c2, rt1.c0, rt1.c3, v0.c0 UNION SELECT t0.c1, rt1.c2, rt1.c0, rt1.c3, v0.c0 FROM v0, rt1, t0 WHERE ((NOT (CAST(((((rt1.c0)AND(rt1.c0)))AND(t0.c0)) AS INTEGER)))) GROUP BY t0.c1, rt1.c2, rt1.c0, rt1.c3, v0.c0 UNION SELECT t0.c1, rt1.c2, rt1.c0, rt1.c3, v0.c0 FROM v0, rt1, t0 WHERE (((CAST(((((rt1.c0)AND(rt1.c0)))AND(t0.c0)) AS INTEGER)) ISNULL)) GROUP BY t0.c1, rt1.c2, rt1.c0, rt1.c3, v0.c0;
SELECT ALL t0.c1, rt1.c2, rt1.c0, rt1.c3, v0.c0 FROM v0, rt1, t0 GROUP BY t0.c1, rt1.c2, rt1.c0, rt1.c3, v0.c0;
SELECT ALL rt0.c2, rt0.c4, t1.c0 FROM t1 RIGHT OUTER JOIN rt0 ON (NOT ((rt0.c4 IN (rt0.c4)))) GROUP BY rt0.c2, rt0.c4, t1.c0;
SELECT rt0.c2, rt0.c4, t1.c0 FROM t1 RIGHT OUTER JOIN rt0 ON (NOT ((rt0.c4 IN (rt0.c4)))) GROUP BY rt0.c2, rt0.c4, t1.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c2, rt0.c4, t1.c0 FROM t1 RIGHT OUTER JOIN rt0 ON (NOT ((rt0.c4 IN (rt0.c4)))) GROUP BY rt0.c2, rt0.c4, t1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c2, rt0.c4, t1.c0 FROM t1 RIGHT OUTER JOIN rt0 ON (NOT ((rt0.c4 IN (rt0.c4)))) GROUP BY rt0.c2, rt0.c4, t1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c2, rt0.c4, t1.c0 FROM t1 RIGHT OUTER JOIN rt0 ON (NOT ((rt0.c4 IN (rt0.c4)))) GROUP BY rt0.c2, rt0.c4, t1.c0;
SELECT rt0.c2, rt0.c4, t1.c0 FROM t1 RIGHT OUTER JOIN rt0 ON (NOT ((rt0.c4 IN (rt0.c4)))) GROUP BY rt0.c2, rt0.c4, t1.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c2, rt0.c4, t1.c0 FROM t1 RIGHT OUTER JOIN rt0 ON (NOT ((rt0.c4 IN (rt0.c4)))) GROUP BY rt0.c2, rt0.c4, t1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c2, rt0.c4, t1.c0 FROM t1 RIGHT OUTER JOIN rt0 ON (NOT ((rt0.c4 IN (rt0.c4)))) GROUP BY rt0.c2, rt0.c4, t1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c2, rt0.c4, t1.c0 FROM t1 RIGHT OUTER JOIN rt0 ON (NOT ((rt0.c4 IN (rt0.c4)))) GROUP BY rt0.c2, rt0.c4, t1.c0;
SELECT rt0.c0, rt1.c2, rt0.c4, rt1.c0, v0.c0, rt0.c3, rt0.c1, rt0.c2 FROM v0, rt0, t1, rt1 INNER JOIN t0 ON ((CAST(rt0.c1 AS NUMERIC)) ISNULL);
SELECT ALL rt0.c0, rt1.c2, rt0.c4, rt1.c0, v0.c0, rt0.c3, rt0.c1, rt0.c2 FROM v0, rt0, t1, rt1 INNER JOIN t0 ON ((CAST(rt0.c1 AS NUMERIC)) ISNULL) WHERE (CASE WHEN CAST(v0.c0 AS INTEGER) THEN LENGTH(rt0.c1) WHEN t0.c0 COLLATE NOCASE THEN (((t0.c0))==((rt0.c4))) WHEN (('780888506')<<(t0.c0)) THEN (((rt1.c3)) NOT BETWEEN ((t0.c0)) AND ((rt1.c1))) END) UNION ALL SELECT rt0.c0, rt1.c2, rt0.c4, rt1.c0, v0.c0, rt0.c3, rt0.c1, rt0.c2 FROM v0, rt0, t1, rt1 INNER JOIN t0 ON ((CAST(rt0.c1 AS NUMERIC)) ISNULL) WHERE ((NOT (CASE WHEN CAST(v0.c0 AS INTEGER) THEN LENGTH(rt0.c1) WHEN t0.c0 COLLATE NOCASE THEN (((t0.c0))=((rt0.c4))) WHEN (('780888506')<<(t0.c0)) THEN (((rt1.c3)) NOT BETWEEN ((t0.c0)) AND ((rt1.c1))) END))) UNION ALL SELECT ALL rt0.c0, rt1.c2, rt0.c4, rt1.c0, v0.c0, rt0.c3, rt0.c1, rt0.c2 FROM v0, rt0, t1, rt1 INNER JOIN t0 ON ((CAST(rt0.c1 AS NUMERIC)) ISNULL) WHERE (((CASE WHEN CAST(v0.c0 AS INTEGER) THEN LENGTH(rt0.c1) WHEN t0.c0 COLLATE NOCASE THEN (((t0.c0))==((rt0.c4))) WHEN (('780888506')<<(t0.c0)) THEN (((rt1.c3)) NOT BETWEEN ((t0.c0)) AND ((rt1.c1))) END) ISNULL));
SELECT rt0.c0, rt1.c2, rt0.c4, rt1.c0, v0.c0, rt0.c3, rt0.c1, rt0.c2 FROM v0, rt0, t1, rt1 INNER JOIN t0 ON ((CAST(rt0.c1 AS NUMERIC)) ISNULL);
SELECT DISTINCT t0.c1, rt0.c1, t0.c0, rt0.c4, t0.c2, rt0.c0, rt0.c3 FROM rt0, t0 NOT INDEXED, t1;
SELECT DISTINCT t0.c1, rt0.c1, t0.c0, rt0.c4, t0.c2, rt0.c0, rt0.c3 FROM rt0, t0, t1 WHERE ((~ ((rt0.c2 IN ())))) UNION SELECT DISTINCT t0.c1, rt0.c1, t0.c0, rt0.c4, t0.c2, rt0.c0, rt0.c3 FROM rt0, t0, t1 WHERE ((NOT ((~ ((rt0.c2 IN ())))))) UNION SELECT DISTINCT t0.c1, rt0.c1, t0.c0, rt0.c4, t0.c2, rt0.c0, rt0.c3 FROM rt0, t0, t1 WHERE ((((~ ((rt0.c2 IN ())))) ISNULL));
SELECT DISTINCT t0.c1, rt0.c1, t0.c0, rt0.c4, t0.c2, rt0.c0, rt0.c3 FROM rt0, t0 NOT INDEXED, t1;
SELECT rt0.c3, t0.c2, rt0.c0, rt0.c1 FROM rt0, t0 GROUP BY rt0.c3, t0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c3, t0.c2, rt0.c0, rt0.c1 FROM rt0, t0 WHERE (CAST(((rt0.c1) BETWEEN (t0.c1) AND (rt0.c3)) AS INTEGER)) GROUP BY rt0.c3, t0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c3, t0.c2, rt0.c0, rt0.c1 FROM rt0, t0 WHERE ((NOT (CAST(((rt0.c1) BETWEEN (t0.c1) AND (rt0.c3)) AS INTEGER)))) GROUP BY rt0.c3, t0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c3, t0.c2, rt0.c0, rt0.c1 FROM rt0, t0 WHERE (((CAST(((rt0.c1) BETWEEN (t0.c1) AND (rt0.c3)) AS INTEGER)) ISNULL)) GROUP BY rt0.c3, t0.c2, rt0.c0, rt0.c1;
SELECT rt0.c3, t0.c2, rt0.c0, rt0.c1 FROM rt0, t0 GROUP BY rt0.c3, t0.c2, rt0.c0, rt0.c1;
SELECT ALL rt1.c1 FROM v0, rt1 GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM v0, rt1 GROUP BY rt1.c1 HAVING (((((((((((v0.c0, COUNT(rt1.c1), rt1.c1)) BETWEEN ((GROUP_CONCAT(MIN(MIN(rt1.c2))), rt1.c3, rt1.c1)) AND ((COUNT(GROUP_CONCAT(SUM(rt1.c1))), rt1.c0, rt1.c0))))OR(CAST(AVG(rt1.c0) AS INTEGER))))AND(GROUP_CONCAT(v0.c0))))OR(TOTAL(rt1.c2))))OR(((((TOTAL(GROUP_CONCAT(MIN(MIN(v0.c0)))))OR(GROUP_CONCAT(v0.c0))))OR(rt1.c0)))) UNION ALL SELECT ALL rt1.c1 FROM v0, rt1 GROUP BY rt1.c1 HAVING (NOT ((((((((((((v0.c0, COUNT(rt1.c1), rt1.c1)) BETWEEN ((GROUP_CONCAT(MIN(MIN(rt1.c2))), rt1.c3, rt1.c1)) AND ((COUNT(GROUP_CONCAT(SUM(rt1.c1))), rt1.c0, rt1.c0))))OR(CAST(AVG(rt1.c0) AS INTEGER))))AND(GROUP_CONCAT(v0.c0))))OR(TOTAL(rt1.c2))))OR(((((TOTAL(GROUP_CONCAT(MIN(MIN(v0.c0)))))OR(GROUP_CONCAT(v0.c0))))OR(rt1.c0)))))) UNION ALL SELECT ALL rt1.c1 FROM v0, rt1 GROUP BY rt1.c1 HAVING (((((((((((((v0.c0, COUNT(rt1.c1), rt1.c1)) BETWEEN ((GROUP_CONCAT(MIN(MIN(rt1.c2))), rt1.c3, rt1.c1)) AND ((COUNT(GROUP_CONCAT(SUM(rt1.c1))), rt1.c0, rt1.c0))))OR(CAST(AVG(rt1.c0) AS INTEGER))))AND(GROUP_CONCAT(v0.c0))))OR(TOTAL(rt1.c2))))OR(((((TOTAL(GROUP_CONCAT(MIN(MIN(v0.c0)))))OR(GROUP_CONCAT(v0.c0))))OR(rt1.c0))))) ISNULL);
SELECT * FROM rt0, v0, t0, t1;
SELECT ALL * FROM rt0, v0, t0, t1 WHERE ((((((t0.c2) BETWEEN (rt0.c3) AND (rt0.c2))))>=((rt0.c0 COLLATE BINARY)))) UNION ALL SELECT * FROM rt0, v0, t0, t1 WHERE ((NOT ((((((t0.c2) BETWEEN (rt0.c3) AND (rt0.c2))))>=((rt0.c0 COLLATE BINARY)))))) UNION ALL SELECT * FROM rt0, v0, t0, t1 WHERE ((((((((t0.c2) BETWEEN (rt0.c3) AND (rt0.c2))))>=((rt0.c0 COLLATE BINARY)))) ISNULL));
SELECT * FROM rt0, v0, t0, t1;
SELECT DISTINCT t0.c0 FROM t0, v0, t1;
SELECT DISTINCT t0.c0 FROM t0, v0, t1 WHERE (NULLIF(((t1.c0) NOT BETWEEN (t0.c0) AND (t0.c1)), (t0.c2 IN (t0.c0, t0.c0)))) UNION SELECT DISTINCT t0.c0 FROM t0, v0, t1 WHERE ((NOT (NULLIF(((t1.c0) NOT BETWEEN (t0.c0) AND (t0.c1)), (t0.c2 IN (t0.c0, t0.c0)))))) UNION SELECT DISTINCT t0.c0 FROM t0, v0, t1 WHERE (((NULLIF(((t1.c0) NOT BETWEEN (t0.c0) AND (t0.c1)), (t0.c2 IN (t0.c0, t0.c0)))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0, v0, t1;
SELECT rt1.c1, t1.c0, rt1.c0 FROM rt1, t1 FULL OUTER JOIN v0 ON (NOT (NULL)) FULL OUTER JOIN t0 ON ((LIKELIHOOD(rt1.c3, 0.6532349774498808))|(x'' COLLATE RTRIM)) GROUP BY rt1.c1, t1.c0, rt1.c0;
SELECT rt1.c1, t1.c0, rt1.c0 FROM rt1, t1 FULL OUTER JOIN v0 ON (NOT (NULL)) FULL OUTER JOIN t0 ON ((LIKELIHOOD(rt1.c3, 0.6532349774498808))|(x'' COLLATE RTRIM)) WHERE (((CAST(-678056441 AS NUMERIC)) NOTNULL)) GROUP BY rt1.c1, t1.c0, rt1.c0 UNION SELECT ALL rt1.c1, t1.c0, rt1.c0 FROM rt1, t1 FULL OUTER JOIN v0 ON (NOT (NULL)) FULL OUTER JOIN t0 ON ((LIKELIHOOD(rt1.c3, 0.6532349774498808))|(x'' COLLATE RTRIM)) WHERE ((NOT (((CAST(-678056441 AS NUMERIC)) NOTNULL)))) GROUP BY rt1.c1, t1.c0, rt1.c0 UNION SELECT ALL rt1.c1, t1.c0, rt1.c0 FROM rt1, t1 FULL OUTER JOIN v0 ON (NOT (NULL)) FULL OUTER JOIN t0 ON ((LIKELIHOOD(rt1.c3, 0.6532349774498808))|(x'' COLLATE RTRIM)) WHERE (((((CAST(-678056441 AS NUMERIC)) NOTNULL)) ISNULL)) GROUP BY rt1.c1, t1.c0, rt1.c0;
SELECT rt1.c1, t1.c0, rt1.c0 FROM rt1, t1 FULL OUTER JOIN v0 ON (NOT (NULL)) FULL OUTER JOIN t0 ON ((LIKELIHOOD(rt1.c3, 0.6532349774498808))|(x'' COLLATE RTRIM)) GROUP BY rt1.c1, t1.c0, rt1.c0;
SELECT t0.c0, rt1.c2 FROM rt1, t0 GROUP BY t0.c0, rt1.c2;
SELECT t0.c0, rt1.c2 FROM rt1, t0 GROUP BY t0.c0, rt1.c2 HAVING x'' UNION ALL SELECT ALL t0.c0, rt1.c2 FROM rt1, t0 GROUP BY t0.c0, rt1.c2 HAVING (NOT (x'')) UNION ALL SELECT ALL t0.c0, rt1.c2 FROM rt1, t0 GROUP BY t0.c0, rt1.c2 HAVING ((x'') ISNULL);
SELECT t0.c0, rt1.c2 FROM rt1, t0 GROUP BY t0.c0, rt1.c2;
SELECT t0.c0, rt1.c2 FROM rt1, t0 GROUP BY t0.c0, rt1.c2 HAVING x'' UNION ALL SELECT ALL t0.c0, rt1.c2 FROM rt1, t0 GROUP BY t0.c0, rt1.c2 HAVING (NOT (x'')) UNION ALL SELECT ALL t0.c0, rt1.c2 FROM rt1, t0 GROUP BY t0.c0, rt1.c2 HAVING ((x'') ISNULL);
SELECT t0.c0, rt1.c2 FROM rt1, t0 GROUP BY t0.c0, rt1.c2;
SELECT ALL v0.c0, t0.c0, t0.c1, t0.c2, t1.c0 FROM t0, t1, v0;
SELECT ALL v0.c0, t0.c0, t0.c1, t0.c2, t1.c0 FROM t0, t1, v0 WHERE (t1.c0) UNION ALL SELECT ALL v0.c0, t0.c0, t0.c1, t0.c2, t1.c0 FROM t0, t1, v0 WHERE ((NOT (t1.c0))) UNION ALL SELECT v0.c0, t0.c0, t0.c1, t0.c2, t1.c0 FROM t0, t1, v0 WHERE (((t1.c0) ISNULL));
SELECT ALL v0.c0, t0.c0, t0.c1, t0.c2, t1.c0 FROM t0, t1, v0;
SELECT DISTINCT rt0.c4, t1.c0, rt0.c2 FROM rt0, t1;
SELECT DISTINCT rt0.c4, t1.c0, rt0.c2 FROM rt0, t1 WHERE (rt0.c1) UNION SELECT DISTINCT rt0.c4, t1.c0, rt0.c2 FROM rt0, t1 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT rt0.c4, t1.c0, rt0.c2 FROM rt0, t1 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT rt0.c4, t1.c0, rt0.c2 FROM rt0, t1;
SELECT rt0.c1, rt1.c1, rt1.c2, rt0.c4, rt1.c0, rt0.c3, rt0.c0, rt0.c2, v0.c0, rt1.c3 FROM rt0, rt1, v0 GROUP BY rt0.c1, rt1.c1, rt1.c2, rt0.c4, rt1.c0, rt0.c3, rt0.c0, rt0.c2, v0.c0, rt1.c3;
SELECT rt0.c1, rt1.c1, rt1.c2, rt0.c4, rt1.c0, rt0.c3, rt0.c0, rt0.c2, v0.c0, rt1.c3 FROM rt0, rt1, v0 WHERE (((CASE rt0.c3  WHEN 0.2110547592383153 THEN rt1.c2 END)IS(((rt1.c2) IS TRUE)))) GROUP BY rt0.c1, rt1.c1, rt1.c2, rt0.c4, rt1.c0, rt0.c3, rt0.c0, rt0.c2, v0.c0, rt1.c3 UNION SELECT ALL rt0.c1, rt1.c1, rt1.c2, rt0.c4, rt1.c0, rt0.c3, rt0.c0, rt0.c2, v0.c0, rt1.c3 FROM rt0, rt1, v0 WHERE ((NOT (((CASE rt0.c3  WHEN 0.2110547592383153 THEN rt1.c2 END)IS(((rt1.c2) IS TRUE)))))) GROUP BY rt0.c1, rt1.c1, rt1.c2, rt0.c4, rt1.c0, rt0.c3, rt0.c0, rt0.c2, v0.c0, rt1.c3 UNION SELECT rt0.c1, rt1.c1, rt1.c2, rt0.c4, rt1.c0, rt0.c3, rt0.c0, rt0.c2, v0.c0, rt1.c3 FROM rt0, rt1, v0 WHERE (((((CASE rt0.c3  WHEN 0.2110547592383153 THEN rt1.c2 END)IS(((rt1.c2) IS TRUE)))) ISNULL)) GROUP BY rt0.c1, rt1.c1, rt1.c2, rt0.c4, rt1.c0, rt0.c3, rt0.c0, rt0.c2, v0.c0, rt1.c3;
SELECT rt0.c1, rt1.c1, rt1.c2, rt0.c4, rt1.c0, rt0.c3, rt0.c0, rt0.c2, v0.c0, rt1.c3 FROM rt0, rt1, v0 GROUP BY rt0.c1, rt1.c1, rt1.c2, rt0.c4, rt1.c0, rt0.c3, rt0.c0, rt0.c2, v0.c0, rt1.c3;
SELECT ALL t0.c2, rt0.c3, v0.c0, rt1.c0, t0.c1, rt1.c1, t1.c0, rt1.c2, rt0.c4 FROM v0, rt0, t0, rt1, t1 GROUP BY t0.c2, rt0.c3, v0.c0, rt1.c0, t0.c1, rt1.c1, t1.c0, rt1.c2, rt0.c4;
SELECT ALL t0.c2, rt0.c3, v0.c0, rt1.c0, t0.c1, rt1.c1, t1.c0, rt1.c2, rt0.c4 FROM v0, rt0, t0, rt1, t1 GROUP BY t0.c2, rt0.c3, v0.c0, rt1.c0, t0.c1, rt1.c1, t1.c0, rt1.c2, rt0.c4 HAVING SUM(((MAX(MAX(rt0.c1)))GLOB(COUNT(*)))) UNION ALL SELECT t0.c2, rt0.c3, v0.c0, rt1.c0, t0.c1, rt1.c1, t1.c0, rt1.c2, rt0.c4 FROM v0, rt0, t0, rt1, t1 GROUP BY t0.c2, rt0.c3, v0.c0, rt1.c0, t0.c1, rt1.c1, t1.c0, rt1.c2, rt0.c4 HAVING (NOT (SUM(((MAX(MAX(rt0.c1)))GLOB(COUNT(*)))))) UNION ALL SELECT t0.c2, rt0.c3, v0.c0, rt1.c0, t0.c1, rt1.c1, t1.c0, rt1.c2, rt0.c4 FROM v0, rt0, t0, rt1, t1 GROUP BY t0.c2, rt0.c3, v0.c0, rt1.c0, t0.c1, rt1.c1, t1.c0, rt1.c2, rt0.c4 HAVING ((SUM(((MAX(MAX(rt0.c1)))GLOB(COUNT(*))))) ISNULL);
SELECT ALL * FROM rt0, rt1 CROSS JOIN v0 ON ((((((((((t0.c2)AND(rt1.c1)))OR(rt0.c3)))OR(t1.c0)))AND(rt1.c0)))*(json_quote(rt0.c0))) RIGHT OUTER JOIN t0 ON (CAST(v0.c0 AS NUMERIC) IN ()) RIGHT OUTER JOIN t1 ON CASE WHEN NULL THEN (('311978180')IS(rt0.c2)) END;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c3 FROM rt0 WHERE (rt0.c4) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c3 FROM rt0 WHERE ((NOT (rt0.c4))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c3 FROM rt0 WHERE (((rt0.c4) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c3 FROM rt0;
SELECT ALL rt1.c3, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c3, rt1.c1, rt1.c0;
SELECT ALL rt1.c3, rt1.c1, rt1.c0 FROM rt1 WHERE (((TOTAL_CHANGES())&(((rt1.c1)>(rt1.c0))))) GROUP BY rt1.c3, rt1.c1, rt1.c0 UNION SELECT rt1.c3, rt1.c1, rt1.c0 FROM rt1 WHERE ((NOT (((TOTAL_CHANGES())&(((rt1.c1)>(rt1.c0))))))) GROUP BY rt1.c3, rt1.c1, rt1.c0 UNION SELECT rt1.c3, rt1.c1, rt1.c0 FROM rt1 WHERE (((((TOTAL_CHANGES())&(((rt1.c1)>(rt1.c0))))) ISNULL)) GROUP BY rt1.c3, rt1.c1, rt1.c0;
SELECT ALL rt1.c3, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c3, rt1.c1, rt1.c0;
SELECT t1.c0 FROM t1, rt1, v0, rt0 GROUP BY t1.c0;
SELECT t1.c0 FROM t1, rt1, v0, rt0 GROUP BY t1.c0 HAVING GROUP_CONCAT(AVG(rt0.c2)) UNION ALL SELECT ALL t1.c0 FROM t1, rt1, v0, rt0 GROUP BY t1.c0 HAVING (NOT (GROUP_CONCAT(AVG(rt0.c2)))) UNION ALL SELECT t1.c0 FROM t1, rt1, v0, rt0 GROUP BY t1.c0 HAVING ((GROUP_CONCAT(AVG(rt0.c2))) ISNULL);
SELECT rt0.c3, rt0.c4, rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c3, rt0.c4, rt0.c0, rt0.c2 FROM rt0 WHERE (CAST('1119764661' AS REAL)) UNION ALL SELECT ALL rt0.c3, rt0.c4, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (CAST('1119764661' AS REAL)))) UNION ALL SELECT rt0.c3, rt0.c4, rt0.c0, rt0.c2 FROM rt0 WHERE (((CAST('1119764661' AS REAL)) ISNULL));
SELECT rt0.c3, rt0.c4, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT t0.c2, rt1.c1, rt1.c3, rt1.c2 FROM t0, rt1;
SELECT DISTINCT t0.c2, rt1.c1, rt1.c3, rt1.c2 FROM t0, rt1 WHERE (CAST(CASE t0.c2  WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c1 END AS NUMERIC)) UNION SELECT DISTINCT t0.c2, rt1.c1, rt1.c3, rt1.c2 FROM t0, rt1 WHERE ((NOT (CAST(CASE t0.c2  WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c1 END AS NUMERIC)))) UNION SELECT DISTINCT t0.c2, rt1.c1, rt1.c3, rt1.c2 FROM t0, rt1 WHERE (((CAST(CASE t0.c2  WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c1 END AS NUMERIC)) ISNULL));
SELECT DISTINCT t0.c2, rt1.c1, rt1.c3, rt1.c2 FROM t0, rt1;
SELECT rt0.c3, t1.c0, v0.c0, rt1.c3, rt1.c1, rt0.c1, rt1.c0, t0.c2, rt0.c0, t0.c0 FROM t1 RIGHT OUTER JOIN rt0 ON t0.c2 INNER JOIN rt1 ON ((IFNULL(DISTINCT rt1.c1, rt1.c1)) BETWEEN (CASE rt0.c4  WHEN '1649245143' THEN rt1.c3 END) AND (((((t1.c0)OR(rt1.c3)))AND(rt0.c4)))) FULL OUTER JOIN v0 ON (((NOT (v0.c0)))AND(CASE rt1.c1  WHEN t0.c2 THEN t0.c2 ELSE rt1.c3 END)) LEFT OUTER JOIN t0 ON (((rt1.c1 COLLATE NOCASE, CASE rt1.c2  WHEN rt0.c4 THEN v0.c0 END, CASE t0.c0  WHEN 0x129868c4 THEN rt0.c1 WHEN x'' THEN rt0.c1 WHEN '992410591' THEN rt0.c4 WHEN t0.c1 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c1 END))>((((rt0.c2)!=(rt0.c4)), TRIM(rt1.c1), ((rt1.c3) ISNULL)))) GROUP BY rt0.c3, t1.c0, v0.c0, rt1.c3, rt1.c1, rt0.c1, rt1.c0, t0.c2, rt0.c0, t0.c0;
SELECT rt1.c2, rt1.c1 FROM t0, v0, rt1, t1 GROUP BY rt1.c2, rt1.c1;
SELECT rt1.c2, rt1.c1 FROM t0, v0, rt1, t1 GROUP BY rt1.c2, rt1.c1 HAVING ((SUM(t1.c0))>(COUNT(rt1.c1))) UNION ALL SELECT rt1.c2, rt1.c1 FROM t0, v0, rt1, t1 GROUP BY rt1.c2, rt1.c1 HAVING (NOT (((SUM(t1.c0))>(COUNT(rt1.c1))))) UNION ALL SELECT ALL rt1.c2, rt1.c1 FROM t0, v0, rt1, t1 GROUP BY rt1.c2, rt1.c1 HAVING ((((SUM(t1.c0))>(COUNT(rt1.c1)))) ISNULL);
SELECT rt1.c2, rt1.c1 FROM t0, v0, rt1, t1 GROUP BY rt1.c2, rt1.c1;
SELECT rt1.c2, rt1.c1 FROM t0, v0, rt1, t1 GROUP BY rt1.c2, rt1.c1 HAVING ((SUM(t1.c0))>(COUNT(rt1.c1))) UNION ALL SELECT rt1.c2, rt1.c1 FROM t0, v0, rt1, t1 GROUP BY rt1.c2, rt1.c1 HAVING (NOT (((SUM(t1.c0))>(COUNT(rt1.c1))))) UNION ALL SELECT ALL rt1.c2, rt1.c1 FROM t0, v0, rt1, t1 GROUP BY rt1.c2, rt1.c1 HAVING ((((SUM(t1.c0))>(COUNT(rt1.c1)))) ISNULL);
SELECT rt1.c2, rt1.c1 FROM t0, v0, rt1, t1 GROUP BY rt1.c2, rt1.c1;
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE (((((v0.c0)<<(v0.c0))) NOT BETWEEN (CAST(v0.c0 AS NUMERIC)) AND ((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, '-819873456')))))) UNION ALL SELECT * FROM v0 WHERE ((NOT (((((v0.c0)<<(v0.c0))) NOT BETWEEN (CAST(v0.c0 AS NUMERIC)) AND ((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, '-819873456')))))))) UNION ALL SELECT * FROM v0 WHERE (((((((v0.c0)<<(v0.c0))) NOT BETWEEN (CAST(v0.c0 AS NUMERIC)) AND ((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, '-819873456')))))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE (CAST((+ (t1.c0)) AS REAL)) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT (CAST((+ (t1.c0)) AS REAL)))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE (((CAST((+ (t1.c0)) AS REAL)) ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT rt0.c0, t0.c0 FROM t0, v0, rt1, t1, rt0 GROUP BY rt0.c0, t0.c0;
SELECT rt0.c0, t0.c0 FROM t0, v0, rt1, t1, rt0 WHERE (CASE WHEN ((t0.c1)IS(rt0.c0)) THEN '' COLLATE NOCASE WHEN CASE WHEN rt1.c2 THEN t0.c1 END THEN (NOT (t0.c2)) WHEN ((v0.c0)LIKE(rt1.c1)) THEN ((rt1.c1)/(rt0.c4)) WHEN (+ (t0.c1)) THEN COALESCE(rt1.c1, rt0.c1, t0.c0, v0.c0) WHEN ((((((((rt0.c4)AND(x'9da8')))OR(t0.c2)))AND(rt1.c3)))OR(t0.c2)) THEN CASE rt1.c3  WHEN t0.c0 THEN ']j>OaY74N' END END) GROUP BY rt0.c0, t0.c0 UNION SELECT ALL rt0.c0, t0.c0 FROM t0, v0, rt1, t1, rt0 WHERE ((NOT (CASE WHEN ((t0.c1)IS(rt0.c0)) THEN '' COLLATE NOCASE WHEN CASE WHEN rt1.c2 THEN t0.c1 END THEN (NOT (t0.c2)) WHEN ((v0.c0)LIKE(rt1.c1)) THEN ((rt1.c1)/(rt0.c4)) WHEN (+ (t0.c1)) THEN COALESCE(rt1.c1, rt0.c1, t0.c0, v0.c0) WHEN ((((((((rt0.c4)AND(x'9da8')))OR(t0.c2)))AND(rt1.c3)))OR(t0.c2)) THEN CASE rt1.c3  WHEN t0.c0 THEN ']j>OaY74N' END END))) GROUP BY rt0.c0, t0.c0 UNION SELECT rt0.c0, t0.c0 FROM t0, v0, rt1, t1, rt0 WHERE (((CASE WHEN ((t0.c1)IS(rt0.c0)) THEN '' COLLATE NOCASE WHEN CASE WHEN rt1.c2 THEN t0.c1 END THEN (NOT (t0.c2)) WHEN ((v0.c0)LIKE(rt1.c1)) THEN ((rt1.c1)/(rt0.c4)) WHEN (+ (t0.c1)) THEN COALESCE(rt1.c1, rt0.c1, t0.c0, v0.c0) WHEN ((((((((rt0.c4)AND(x'9da8')))OR(t0.c2)))AND(rt1.c3)))OR(t0.c2)) THEN CASE rt1.c3  WHEN t0.c0 THEN ']j>OaY74N' END END) ISNULL)) GROUP BY rt0.c0, t0.c0;
SELECT rt0.c0, t0.c0 FROM t0, v0, rt1, t1, rt0 GROUP BY rt0.c0, t0.c0;
SELECT ALL rt0.c2, rt0.c4, rt0.c0, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, rt0.c4, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c4, rt0.c0, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, rt0.c4, rt0.c0, rt0.c1 HAVING MIN(HEX(DISTINCT t0.c2)) UNION ALL SELECT rt0.c2, rt0.c4, rt0.c0, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, rt0.c4, rt0.c0, rt0.c1 HAVING (NOT (MIN(HEX(DISTINCT t0.c2)))) UNION ALL SELECT rt0.c2, rt0.c4, rt0.c0, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, rt0.c4, rt0.c0, rt0.c1 HAVING ((MIN(HEX(DISTINCT t0.c2))) ISNULL);
SELECT ALL rt0.c2, rt0.c4, rt0.c0, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, rt0.c4, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c4, rt0.c0, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, rt0.c4, rt0.c0, rt0.c1 HAVING MIN(HEX(DISTINCT t0.c2)) UNION ALL SELECT rt0.c2, rt0.c4, rt0.c0, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, rt0.c4, rt0.c0, rt0.c1 HAVING (NOT (MIN(HEX(DISTINCT t0.c2)))) UNION ALL SELECT rt0.c2, rt0.c4, rt0.c0, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, rt0.c4, rt0.c0, rt0.c1 HAVING ((MIN(HEX(DISTINCT t0.c2))) ISNULL);
SELECT ALL rt0.c2, rt0.c4, rt0.c0, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, rt0.c4, rt0.c0, rt0.c1;
SELECT * FROM t1;
SELECT ALL * FROM t1 WHERE ((((t1.c0, t1.c0, t1.c0)) BETWEEN ((((t1.c0)>>(t1.c0)), CASE WHEN t1.c0 THEN t1.c0 END, (~ (t1.c0)))) AND ((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)), (((t1.c0))=((t1.c0))), (t1.c0 IN ()))))) UNION ALL SELECT * FROM t1 WHERE ((NOT ((((t1.c0, t1.c0, t1.c0)) BETWEEN ((((t1.c0)>>(t1.c0)), CASE WHEN t1.c0 THEN t1.c0 END, (~ (t1.c0)))) AND ((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)), (((t1.c0))=((t1.c0))), (t1.c0 IN ()))))))) UNION ALL SELECT ALL * FROM t1 WHERE ((((((t1.c0, t1.c0, t1.c0)) BETWEEN ((((t1.c0)>>(t1.c0)), CASE WHEN t1.c0 THEN t1.c0 END, (~ (t1.c0)))) AND ((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)), (((t1.c0))==((t1.c0))), (t1.c0 IN ()))))) ISNULL));
SELECT * FROM t1;
SELECT DISTINCT * FROM rt1, t0;
SELECT DISTINCT * FROM rt1, t0 WHERE ((((t0.c0, 0.27289699781680343, t0.c1)) NOT BETWEEN ((t0.c2, rt1.c0, rt1.c2)) AND ((rt1.c3, t0.c2, rt1.c3))) COLLATE NOCASE COLLATE BINARY) UNION SELECT DISTINCT * FROM rt1, t0 WHERE ((NOT ((((t0.c0, 0.27289699781680343, t0.c1)) NOT BETWEEN ((t0.c2, rt1.c0, rt1.c2)) AND ((rt1.c3, t0.c2, rt1.c3))) COLLATE NOCASE COLLATE BINARY))) UNION SELECT DISTINCT * FROM rt1, t0 WHERE ((((((t0.c0, 0.27289699781680343, t0.c1)) NOT BETWEEN ((t0.c2, rt1.c0, rt1.c2)) AND ((rt1.c3, t0.c2, rt1.c3))) COLLATE NOCASE COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM rt1, t0;
SELECT rt1.c3, t0.c0, t0.c1, rt1.c0, rt0.c3, rt0.c1, rt0.c4, t1.c0, t0.c2, v0.c0, rt1.c2 FROM rt0, t1, v0 CROSS JOIN rt1 ON ((((rt0.c4)>=(t0.c1))) BETWEEN (((rt1.c3) NOT BETWEEN (rt1.c0) AND (rt0.c0))) AND ((((rt0.c3)) NOT BETWEEN ((t0.c1)) AND ((1.76301842E9))))) CROSS JOIN t0 ON CAST(CASE WHEN rt1.c3 THEN rt0.c1 ELSE t0.c2 END AS REAL) GROUP BY rt1.c3, t0.c0, t0.c1, rt1.c0, rt0.c3, rt0.c1, rt0.c4, t1.c0, t0.c2, v0.c0, rt1.c2;
SELECT ALL rt1.c3, t0.c0, t0.c1, rt1.c0, rt0.c3, rt0.c1, rt0.c4, t1.c0, t0.c2, v0.c0, rt1.c2 FROM rt0, t1, v0 CROSS JOIN rt1 ON ((((rt0.c4)>=(t0.c1))) BETWEEN (((rt1.c3) NOT BETWEEN (rt1.c0) AND (rt0.c0))) AND ((((rt0.c3)) NOT BETWEEN ((t0.c1)) AND ((1.76301842E9))))) CROSS JOIN t0 ON CAST(CASE WHEN rt1.c3 THEN rt0.c1 ELSE t0.c2 END AS REAL) WHERE ((((+ (t0.c0)))>=(((rt1.c1) IS FALSE)))) GROUP BY rt1.c3, t0.c0, t0.c1, rt1.c0, rt0.c3, rt0.c1, rt0.c4, t1.c0, t0.c2, v0.c0, rt1.c2 UNION SELECT ALL rt1.c3, t0.c0, t0.c1, rt1.c0, rt0.c3, rt0.c1, rt0.c4, t1.c0, t0.c2, v0.c0, rt1.c2 FROM rt0, t1, v0 CROSS JOIN rt1 ON ((((rt0.c4)>=(t0.c1))) BETWEEN (((rt1.c3) NOT BETWEEN (rt1.c0) AND (rt0.c0))) AND ((((rt0.c3)) NOT BETWEEN ((t0.c1)) AND ((1.76301842E9))))) CROSS JOIN t0 ON CAST(CASE WHEN rt1.c3 THEN rt0.c1 ELSE t0.c2 END AS REAL) WHERE ((NOT ((((+ (t0.c0)))>=(((rt1.c1) IS FALSE)))))) GROUP BY rt1.c3, t0.c0, t0.c1, rt1.c0, rt0.c3, rt0.c1, rt0.c4, t1.c0, t0.c2, v0.c0, rt1.c2 UNION SELECT rt1.c3, t0.c0, t0.c1, rt1.c0, rt0.c3, rt0.c1, rt0.c4, t1.c0, t0.c2, v0.c0, rt1.c2 FROM rt0, t1, v0 CROSS JOIN rt1 ON ((((rt0.c4)>=(t0.c1))) BETWEEN (((rt1.c3) NOT BETWEEN (rt1.c0) AND (rt0.c0))) AND ((((rt0.c3)) NOT BETWEEN ((t0.c1)) AND ((1.76301842E9))))) CROSS JOIN t0 ON CAST(CASE WHEN rt1.c3 THEN rt0.c1 ELSE t0.c2 END AS REAL) WHERE ((((((+ (t0.c0)))>=(((rt1.c1) IS FALSE)))) ISNULL)) GROUP BY rt1.c3, t0.c0, t0.c1, rt1.c0, rt0.c3, rt0.c1, rt0.c4, t1.c0, t0.c2, v0.c0, rt1.c2;
SELECT rt1.c3, t0.c0, t0.c1, rt1.c0, rt0.c3, rt0.c1, rt0.c4, t1.c0, t0.c2, v0.c0, rt1.c2 FROM rt0, t1, v0 CROSS JOIN rt1 ON ((((rt0.c4)>=(t0.c1))) BETWEEN (((rt1.c3) NOT BETWEEN (rt1.c0) AND (rt0.c0))) AND ((((rt0.c3)) NOT BETWEEN ((t0.c1)) AND ((1.76301842E9))))) CROSS JOIN t0 ON CAST(CASE WHEN rt1.c3 THEN rt0.c1 ELSE t0.c2 END AS REAL) GROUP BY rt1.c3, t0.c0, t0.c1, rt1.c0, rt0.c3, rt0.c1, rt0.c4, t1.c0, t0.c2, v0.c0, rt1.c2;
SELECT ALL t0.c0, rt0.c2, t0.c1, rt0.c0, rt0.c4, v0.c0 FROM t0 CROSS JOIN v0 ON (((((((t0.c1))==((rt0.c4))))OR(t0.c0)))OR(-1151680602)) FULL OUTER JOIN rt0 ON (((rt0.c2 COLLATE RTRIM, CAST(rt0.c1 AS BLOB), ((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c2)), rt0.c4, (+ ('0.975206022101024'))))>=((((v0.c0)OR(rt0.c0)), (((rt0.c1))>=((rt0.c2))), UNLIKELY('dco'), (('-1327740362') ISNULL), ((t0.c0)AND(rt0.c3))))) GROUP BY t0.c0, rt0.c2, t0.c1, rt0.c0, rt0.c4, v0.c0;
SELECT ALL rt0.c2, rt0.c0, v0.c0, rt0.c1 FROM v0 NOT INDEXED NATURAL JOIN rt0;
SELECT rt0.c2, rt0.c0, v0.c0, rt0.c1 FROM v0 NATURAL JOIN rt0 WHERE (1e500) UNION ALL SELECT ALL rt0.c2, rt0.c0, v0.c0, rt0.c1 FROM v0 NATURAL JOIN rt0 WHERE ((NOT (1e500))) UNION ALL SELECT rt0.c2, rt0.c0, v0.c0, rt0.c1 FROM v0 NATURAL JOIN rt0 WHERE (((1e500) ISNULL));
SELECT ALL rt0.c2, rt0.c0, v0.c0, rt0.c1 FROM v0 NOT INDEXED NATURAL JOIN rt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (SQLITE_COMPILEOPTION_USED(CAST(t0.c1 AS BLOB))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (SQLITE_COMPILEOPTION_USED(CAST(t0.c1 AS BLOB))))) UNION SELECT DISTINCT * FROM t0 WHERE (((SQLITE_COMPILEOPTION_USED(CAST(t0.c1 AS BLOB))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL rt0.c0, rt1.c1, rt1.c0, t0.c0, rt1.c2, t0.c1, rt0.c1, t0.c2, rt0.c2, rt1.c3, rt0.c4 FROM rt1, rt0, t0 GROUP BY rt0.c0, rt1.c1, rt1.c0, t0.c0, rt1.c2, t0.c1, rt0.c1, t0.c2, rt0.c2, rt1.c3, rt0.c4;
SELECT rt0.c0, rt1.c1, rt1.c0, t0.c0, rt1.c2, t0.c1, rt0.c1, t0.c2, rt0.c2, rt1.c3, rt0.c4 FROM rt1, rt0, t0 WHERE (((((rt0.c0) NOT BETWEEN (rt1.c1) AND (rt0.c3)))+(rt1.c1))) GROUP BY rt0.c0, rt1.c1, rt1.c0, t0.c0, rt1.c2, t0.c1, rt0.c1, t0.c2, rt0.c2, rt1.c3, rt0.c4 UNION SELECT ALL rt0.c0, rt1.c1, rt1.c0, t0.c0, rt1.c2, t0.c1, rt0.c1, t0.c2, rt0.c2, rt1.c3, rt0.c4 FROM rt1, rt0, t0 WHERE ((NOT (((((rt0.c0) NOT BETWEEN (rt1.c1) AND (rt0.c3)))+(rt1.c1))))) GROUP BY rt0.c0, rt1.c1, rt1.c0, t0.c0, rt1.c2, t0.c1, rt0.c1, t0.c2, rt0.c2, rt1.c3, rt0.c4 UNION SELECT rt0.c0, rt1.c1, rt1.c0, t0.c0, rt1.c2, t0.c1, rt0.c1, t0.c2, rt0.c2, rt1.c3, rt0.c4 FROM rt1, rt0, t0 WHERE (((((((rt0.c0) NOT BETWEEN (rt1.c1) AND (rt0.c3)))+(rt1.c1))) ISNULL)) GROUP BY rt0.c0, rt1.c1, rt1.c0, t0.c0, rt1.c2, t0.c1, rt0.c1, t0.c2, rt0.c2, rt1.c3, rt0.c4;
SELECT ALL rt0.c0, rt1.c1, rt1.c0, t0.c0, rt1.c2, t0.c1, rt0.c1, t0.c2, rt0.c2, rt1.c3, rt0.c4 FROM rt1, rt0, t0 GROUP BY rt0.c0, rt1.c1, rt1.c0, t0.c0, rt1.c2, t0.c1, rt0.c1, t0.c2, rt0.c2, rt1.c3, rt0.c4;
SELECT ALL rt0.c3, rt0.c0, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c4, rt0.c2;
SELECT rt0.c3, rt0.c0, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c4, rt0.c2 HAVING '1280278741' UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c4, rt0.c2 HAVING (NOT ('1280278741')) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c4, rt0.c2 HAVING (('1280278741') ISNULL);
SELECT ALL rt0.c3, rt0.c0, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c4, rt0.c2;
SELECT rt0.c3, rt0.c0, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c4, rt0.c2 HAVING '1280278741' UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c4, rt0.c2 HAVING (NOT ('1280278741')) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c4, rt0.c2 HAVING (('1280278741') ISNULL);
SELECT ALL rt0.c3, rt0.c0, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c4, rt0.c2;
SELECT ALL t1.c0, rt1.c3, rt0.c4, rt1.c1, rt0.c3, t0.c0, t0.c2, v0.c0, rt1.c0, rt0.c2, rt0.c0 FROM v0, rt1, rt0, t0, t1;
SELECT ALL t1.c0, rt1.c3, rt0.c4, rt1.c1, rt0.c3, t0.c0, t0.c2, v0.c0, rt1.c0, rt0.c2, rt0.c0 FROM v0, rt1, rt0, t0, t1 WHERE (t0.c2) UNION ALL SELECT t1.c0, rt1.c3, rt0.c4, rt1.c1, rt0.c3, t0.c0, t0.c2, v0.c0, rt1.c0, rt0.c2, rt0.c0 FROM v0, rt1 NOT INDEXED, rt0, t0, t1 WHERE ((NOT (t0.c2))) UNION ALL SELECT ALL t1.c0, rt1.c3, rt0.c4, rt1.c1, rt0.c3, t0.c0, t0.c2, v0.c0, rt1.c0, rt0.c2, rt0.c0 FROM v0, rt1, rt0, t0, t1 WHERE (((t0.c2) ISNULL));
SELECT ALL t1.c0, rt1.c3, rt0.c4, rt1.c1, rt0.c3, t0.c0, t0.c2, v0.c0, rt1.c0, rt0.c2, rt0.c0 FROM v0, rt1, rt0, t0, t1;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (((CAST(t1.c0 AS NUMERIC))LIKE(((t1.c0)<<(t1.c0))))) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (((CAST(t1.c0 AS NUMERIC))LIKE(((t1.c0)<<(t1.c0))))))) UNION SELECT DISTINCT * FROM t1 WHERE (((((CAST(t1.c0 AS NUMERIC))LIKE(((t1.c0)<<(t1.c0))))) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT ALL rt1.c3 FROM v0, rt1, t1, t0 GROUP BY rt1.c3;
SELECT ALL rt1.c3 FROM v0, rt1, t1, t0 WHERE ((t0.c0 COLLATE RTRIM IN ())) GROUP BY rt1.c3 UNION SELECT rt1.c3 FROM v0, rt1, t1, t0 WHERE ((NOT ((t0.c0 COLLATE RTRIM IN ())))) GROUP BY rt1.c3 UNION SELECT rt1.c3 FROM v0, rt1, t1, t0 WHERE ((((t0.c0 COLLATE RTRIM IN ())) ISNULL)) GROUP BY rt1.c3;
SELECT ALL rt1.c3 FROM v0, rt1, t1, t0 GROUP BY rt1.c3;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((COUNT(GROUP_CONCAT(t1.c0))) BETWEEN (t1.c0 COLLATE NOCASE) AND (CAST(COUNT(COUNT(COUNT(MIN(AVG(MAX(t1.c0)))))) AS INTEGER))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (((COUNT(GROUP_CONCAT(t1.c0))) BETWEEN (t1.c0 COLLATE NOCASE) AND (CAST(COUNT(COUNT(COUNT(MIN(AVG(MAX(t1.c0)))))) AS INTEGER))))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((((COUNT(GROUP_CONCAT(t1.c0))) BETWEEN (t1.c0 COLLATE NOCASE) AND (CAST(COUNT(COUNT(COUNT(MIN(AVG(MAX(t1.c0)))))) AS INTEGER)))) ISNULL);
SELECT ALL rt0.c2, t0.c0, rt1.c3, rt0.c4, t1.c0 FROM rt1, rt0, v0, t0, t1;
SELECT ALL rt0.c2, t0.c0, rt1.c3, rt0.c4, t1.c0 FROM rt1, rt0, v0, t0, t1 WHERE (NULL) UNION ALL SELECT rt0.c2, t0.c0, rt1.c3, rt0.c4, t1.c0 FROM rt1, rt0, v0, t0, t1 WHERE ((NOT (NULL))) UNION ALL SELECT ALL rt0.c2, t0.c0, rt1.c3, rt0.c4, t1.c0 FROM rt1, rt0, v0, t0, t1 WHERE (((NULL) ISNULL));
SELECT ALL rt0.c2, t0.c0, rt1.c3, rt0.c4, t1.c0 FROM rt1, rt0, v0, t0, t1;
SELECT DISTINCT * FROM v0, t0, t1;
SELECT DISTINCT * FROM v0, t0, t1 WHERE (((((((t0.c2) IS FALSE))OR(SQLITE_SOURCE_ID())))OR(CASE t1.c0  WHEN t0.c2 THEN t1.c0 ELSE t0.c0 END))) UNION SELECT DISTINCT * FROM v0, t0, t1 WHERE ((NOT (((((((t0.c2) IS FALSE))OR(SQLITE_SOURCE_ID())))OR(CASE t1.c0  WHEN t0.c2 THEN t1.c0 ELSE t0.c0 END))))) UNION SELECT DISTINCT * FROM v0, t0, t1 WHERE (((((((((t0.c2) IS FALSE))OR(SQLITE_SOURCE_ID())))OR(CASE t1.c0  WHEN t0.c2 THEN t1.c0 ELSE t0.c0 END))) ISNULL));
SELECT DISTINCT * FROM v0, t0, t1;
SELECT ALL t1.c0, v0.c0 FROM v0, t1 GROUP BY t1.c0, v0.c0;
SELECT ALL t1.c0, v0.c0 FROM v0, t1 WHERE (v0.c0) GROUP BY t1.c0, v0.c0 UNION SELECT ALL t1.c0, v0.c0 FROM v0, t1 WHERE ((NOT (v0.c0))) GROUP BY t1.c0, v0.c0 UNION SELECT ALL t1.c0, v0.c0 FROM v0 NOT INDEXED, t1 WHERE (((v0.c0) ISNULL)) GROUP BY t1.c0, v0.c0;
SELECT ALL t1.c0, v0.c0 FROM v0, t1 GROUP BY t1.c0, v0.c0;
SELECT t0.c1 FROM t0 GROUP BY t0.c1;
SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1 HAVING (((((((t0.c2)AND(t0.c0)))AND(TOTAL(t0.c2))), ((AVG(AVG(t0.c1)))+(MIN(AVG(t0.c0)))), TOTAL(t0.c2)))>=((CASE t0.c0  WHEN COUNT(*) THEN t0.c2 END, ((((MIN(MIN(t0.c2)))OR(t0.c1)))OR(t0.c1)), CAST(t0.c1 AS TEXT)))) UNION ALL SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1 HAVING (NOT ((((((((t0.c2)AND(t0.c0)))AND(TOTAL(t0.c2))), ((AVG(AVG(t0.c1)))+(MIN(AVG(t0.c0)))), TOTAL(t0.c2)))>=((CASE t0.c0  WHEN COUNT(*) THEN t0.c2 END, ((((MIN(MIN(t0.c2)))OR(t0.c1)))OR(t0.c1)), CAST(t0.c1 AS TEXT)))))) UNION ALL SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1 HAVING (((((((((t0.c2)AND(t0.c0)))AND(TOTAL(t0.c2))), ((AVG(AVG(t0.c1)))+(MIN(AVG(t0.c0)))), TOTAL(t0.c2)))>=((CASE t0.c0  WHEN COUNT(*) THEN t0.c2 END, ((((MIN(MIN(t0.c2)))OR(t0.c1)))OR(t0.c1)), CAST(t0.c1 AS TEXT))))) ISNULL);
SELECT t0.c2, rt1.c0, rt1.c2, rt1.c1, rt1.c3, t0.c1 FROM rt1, t0;
SELECT ALL t0.c2, rt1.c0, rt1.c2, rt1.c1, rt1.c3, t0.c1 FROM rt1, t0 WHERE (rt1.c3) UNION ALL SELECT ALL t0.c2, rt1.c0, rt1.c2, rt1.c1, rt1.c3, t0.c1 FROM rt1, t0 WHERE ((NOT (rt1.c3))) UNION ALL SELECT t0.c2, rt1.c0, rt1.c2, rt1.c1, rt1.c3, t0.c1 FROM rt1, t0 WHERE (((rt1.c3) ISNULL));
SELECT t0.c2, rt1.c0, rt1.c2, rt1.c1, rt1.c3, t0.c1 FROM rt1, t0;
SELECT DISTINCT rt0.c3, rt0.c2, t0.c1, rt0.c0, rt0.c1, t0.c0, rt0.c4, v0.c0, t0.c2, rt1.c1 FROM rt0, t0 FULL OUTER JOIN t1 ON x'abcb' INNER JOIN rt1 ON CASE CASE WHEN rt1.c1 THEN v0.c0 ELSE '68*6' END  WHEN '-47000396' THEN '1634026519' WHEN ((((rt1.c0)AND(rt1.c2)))AND(rt0.c4)) THEN SQLITE_VERSION() WHEN ((t1.c0)|(t1.c0)) THEN ((rt1.c2)|(rt1.c2)) WHEN (rt0.c3 IN (rt0.c2, v0.c0)) THEN t0.c2 COLLATE BINARY WHEN ((rt0.c4) BETWEEN (rt0.c1) AND (t0.c0)) THEN rt1.c0 END INNER JOIN v0 ON (((((rt0.c0)OR(673036536)))AND(t0.c2)) IN ());
SELECT DISTINCT rt0.c3, rt0.c2, t0.c1, rt0.c0, rt0.c1, t0.c0, rt0.c4, v0.c0, t0.c2, rt1.c1 FROM rt0, t0 FULL OUTER JOIN t1 ON x'abcb' INNER JOIN rt1 ON CASE CASE WHEN rt1.c1 THEN v0.c0 ELSE '68*6' END  WHEN '-47000396' THEN '1634026519' WHEN ((((rt1.c0)AND(rt1.c2)))AND(rt0.c4)) THEN SQLITE_VERSION() WHEN ((t1.c0)|(t1.c0)) THEN ((rt1.c2)|(rt1.c2)) WHEN (rt0.c3 IN (rt0.c2, v0.c0)) THEN t0.c2 COLLATE BINARY WHEN ((rt0.c4) BETWEEN (rt0.c1) AND (t0.c0)) THEN rt1.c0 END INNER JOIN v0 ON (((((rt0.c0)OR(673036536)))AND(t0.c2)) IN ()) WHERE (((((rt1.c1)/(t1.c0))) IS FALSE)) UNION SELECT DISTINCT rt0.c3, rt0.c2, t0.c1, rt0.c0, rt0.c1, t0.c0, rt0.c4, v0.c0, t0.c2, rt1.c1 FROM rt0, t0 FULL OUTER JOIN t1 ON x'abcb' INNER JOIN rt1 ON CASE CASE WHEN rt1.c1 THEN v0.c0 ELSE '68*6' END  WHEN '-47000396' THEN '1634026519' WHEN ((((rt1.c0)AND(rt1.c2)))AND(rt0.c4)) THEN SQLITE_VERSION() WHEN ((t1.c0)|(t1.c0)) THEN ((rt1.c2)|(rt1.c2)) WHEN (rt0.c3 IN (rt0.c2, v0.c0)) THEN t0.c2 COLLATE BINARY WHEN ((rt0.c4) BETWEEN (rt0.c1) AND (t0.c0)) THEN rt1.c0 END INNER JOIN v0 ON (((((rt0.c0)OR(673036536)))AND(t0.c2)) IN ()) WHERE ((NOT (((((rt1.c1)/(t1.c0))) IS FALSE)))) UNION SELECT DISTINCT rt0.c3, rt0.c2, t0.c1, rt0.c0, rt0.c1, t0.c0, rt0.c4, v0.c0, t0.c2, rt1.c1 FROM rt0, t0 FULL OUTER JOIN t1 ON x'abcb' INNER JOIN rt1 ON CASE CASE WHEN rt1.c1 THEN v0.c0 ELSE '68*6' END  WHEN '-47000396' THEN '1634026519' WHEN ((((rt1.c0)AND(rt1.c2)))AND(rt0.c4)) THEN SQLITE_VERSION() WHEN ((t1.c0)|(t1.c0)) THEN ((rt1.c2)|(rt1.c2)) WHEN (rt0.c3 IN (rt0.c2, v0.c0)) THEN t0.c2 COLLATE BINARY WHEN ((rt0.c4) BETWEEN (rt0.c1) AND (t0.c0)) THEN rt1.c0 END INNER JOIN v0 ON (((((rt0.c0)OR(673036536)))AND(t0.c2)) IN ()) WHERE (((((((rt1.c1)/(t1.c0))) IS FALSE)) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c2, t0.c1, rt0.c0, rt0.c1, t0.c0, rt0.c4, v0.c0, t0.c2, rt1.c1 FROM rt0, t0 FULL OUTER JOIN t1 ON x'abcb' INNER JOIN rt1 ON CASE CASE WHEN rt1.c1 THEN v0.c0 ELSE '68*6' END  WHEN '-47000396' THEN '1634026519' WHEN ((((rt1.c0)AND(rt1.c2)))AND(rt0.c4)) THEN SQLITE_VERSION() WHEN ((t1.c0)|(t1.c0)) THEN ((rt1.c2)|(rt1.c2)) WHEN (rt0.c3 IN (rt0.c2, v0.c0)) THEN t0.c2 COLLATE BINARY WHEN ((rt0.c4) BETWEEN (rt0.c1) AND (t0.c0)) THEN rt1.c0 END INNER JOIN v0 ON (((((rt0.c0)OR(673036536)))AND(t0.c2)) IN ());
SELECT ALL rt1.c1, rt1.c3, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c3, rt1.c2;
SELECT ALL rt1.c1, rt1.c3, rt1.c2 FROM rt1 WHERE (rt1.c2) GROUP BY rt1.c1, rt1.c3, rt1.c2 UNION SELECT ALL rt1.c1, rt1.c3, rt1.c2 FROM rt1 WHERE ((NOT (rt1.c2))) GROUP BY rt1.c1, rt1.c3, rt1.c2 UNION SELECT ALL rt1.c1, rt1.c3, rt1.c2 FROM rt1 WHERE (((rt1.c2) ISNULL)) GROUP BY rt1.c1, rt1.c3, rt1.c2;
SELECT ALL rt1.c1, rt1.c3, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c3, rt1.c2;
SELECT rt1.c3, t0.c2, rt1.c0, t0.c1, t1.c0, rt1.c2, rt1.c1 FROM t1 LEFT OUTER JOIN t0 ON CASE WHEN CAST(rt1.c0 AS BLOB) THEN ((rt1.c0) IS TRUE) WHEN ((rt1.c0) ISNULL) THEN rt1.c3 COLLATE RTRIM WHEN (((rt1.c2))>((rt1.c1))) THEN t0.c2 ELSE (t0.c1 IN (rt1.c3, rt1.c3)) END CROSS JOIN rt1 ON json_patch((+ (t0.c0)), CHAR(rt1.c1, t0.c1, t0.c2)) GROUP BY rt1.c3, t0.c2, rt1.c0, t0.c1, t1.c0, rt1.c2, rt1.c1;
SELECT ALL SUM('1253117693') FROM v0, rt1;
SELECT ALL * FROM rt1 CROSS JOIN v0 ON (((((- (t0.c0)))OR(CAST(v0.c0 AS BLOB))))OR(((0.0) IS TRUE))) INNER JOIN t0 ON CAST(((t0.c1)==(rt1.c1)) AS NUMERIC) INNER JOIN t1 ON CASE WHEN GLOB(t0.c0, t0.c1) THEN CAST(t1.c0 AS TEXT) END;
SELECT ALL * FROM rt1 CROSS JOIN v0 ON (((((- (t0.c0)))OR(CAST(v0.c0 AS BLOB))))OR(((0.0) IS TRUE))) INNER JOIN t0 ON CAST(((t0.c1)=(rt1.c1)) AS NUMERIC) INNER JOIN t1 ON CASE WHEN GLOB(t0.c0, t0.c1) THEN CAST(t1.c0 AS TEXT) END WHERE (NULL) UNION ALL SELECT ALL * FROM rt1 CROSS JOIN v0 ON (((((- (t0.c0)))OR(CAST(v0.c0 AS BLOB))))OR(((0.0) IS TRUE))) INNER JOIN t0 ON CAST(((t0.c1)=(rt1.c1)) AS NUMERIC) INNER JOIN t1 ON CASE WHEN GLOB(t0.c0, t0.c1) THEN CAST(t1.c0 AS TEXT) END WHERE ((NOT (NULL))) UNION ALL SELECT * FROM rt1 CROSS JOIN v0 ON (((((- (t0.c0)))OR(CAST(v0.c0 AS BLOB))))OR(((0.0) IS TRUE))) INNER JOIN t0 ON CAST(((t0.c1)==(rt1.c1)) AS NUMERIC) INNER JOIN t1 ON CASE WHEN GLOB(t0.c0, t0.c1) THEN CAST(t1.c0 AS TEXT) END WHERE (((NULL) ISNULL));
SELECT ALL * FROM rt1 CROSS JOIN v0 ON (((((- (t0.c0)))OR(CAST(v0.c0 AS BLOB))))OR(((0.0) IS TRUE))) INNER JOIN t0 ON CAST(((t0.c1)==(rt1.c1)) AS NUMERIC) INNER JOIN t1 ON CASE WHEN GLOB(t0.c0, t0.c1) THEN CAST(t1.c0 AS TEXT) END;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (((((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))AND(t1.c0)))OR((('-1086951672')==(t1.c0))))) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (((((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))AND(t1.c0)))OR((('-1086951672')==(t1.c0))))))) UNION SELECT DISTINCT * FROM t1 WHERE (((((((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))AND(t1.c0)))OR((('-1086951672')==(t1.c0))))) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT ALL rt1.c0, t1.c0, t0.c0, t0.c2 FROM t0, t1, rt1 CROSS JOIN rt0 ON ((NULL) NOT BETWEEN (((rt0.c3)>>(t1.c0))) AND (((((((((rt1.c3)OR(rt1.c2)))OR(t0.c1)))AND(rt0.c0)))OR(t1.c0)))) GROUP BY rt1.c0, t1.c0, t0.c0, t0.c2;
SELECT ALL rt1.c0, t1.c0, t0.c0, t0.c2 FROM t0, t1, rt1 CROSS JOIN rt0 ON ((NULL) NOT BETWEEN (((rt0.c3)>>(t1.c0))) AND (((((((((rt1.c3)OR(rt1.c2)))OR(t0.c1)))AND(rt0.c0)))OR(t1.c0)))) WHERE ((('!%⎰') BETWEEN (((rt0.c0) ISNULL)) AND ((((rt1.c1, rt1.c3, rt0.c2, rt0.c4, t0.c2))>=((rt0.c4, rt0.c2, rt1.c3, rt1.c3, t0.c0)))))) GROUP BY rt1.c0, t1.c0, t0.c0, t0.c2 UNION SELECT ALL rt1.c0, t1.c0, t0.c0, t0.c2 FROM t0, t1, rt1 CROSS JOIN rt0 ON ((NULL) NOT BETWEEN (((rt0.c3)>>(t1.c0))) AND (((((((((rt1.c3)OR(rt1.c2)))OR(t0.c1)))AND(rt0.c0)))OR(t1.c0)))) WHERE ((NOT ((('!%⎰') BETWEEN (((rt0.c0) ISNULL)) AND ((((rt1.c1, rt1.c3, rt0.c2, rt0.c4, t0.c2))>=((rt0.c4, rt0.c2, rt1.c3, rt1.c3, t0.c0)))))))) GROUP BY rt1.c0, t1.c0, t0.c0, t0.c2 UNION SELECT rt1.c0, t1.c0, t0.c0, t0.c2 FROM t0, t1, rt1 CROSS JOIN rt0 ON ((NULL) NOT BETWEEN (((rt0.c3)>>(t1.c0))) AND (((((((((rt1.c3)OR(rt1.c2)))OR(t0.c1)))AND(rt0.c0)))OR(t1.c0)))) WHERE ((((('!%⎰') BETWEEN (((rt0.c0) ISNULL)) AND ((((rt1.c1, rt1.c3, rt0.c2, rt0.c4, t0.c2))>=((rt0.c4, rt0.c2, rt1.c3, rt1.c3, t0.c0)))))) ISNULL)) GROUP BY rt1.c0, t1.c0, t0.c0, t0.c2;
SELECT ALL rt1.c0, t1.c0, t0.c0, t0.c2 FROM t0, t1, rt1 CROSS JOIN rt0 ON ((NULL) NOT BETWEEN (((rt0.c3)>>(t1.c0))) AND (((((((((rt1.c3)OR(rt1.c2)))OR(t0.c1)))AND(rt0.c0)))OR(t1.c0)))) GROUP BY rt1.c0, t1.c0, t0.c0, t0.c2;
SELECT ALL t0.c1, rt1.c3, rt1.c1, rt1.c0, rt1.c2 FROM v0, t0, rt1, t1 GROUP BY t0.c1, rt1.c3, rt1.c1, rt1.c0, rt1.c2;
SELECT ALL t0.c1, rt1.c3, rt1.c1, rt1.c0, rt1.c2 FROM v0, t0, rt1, t1 GROUP BY t0.c1, rt1.c3, rt1.c1, rt1.c0, rt1.c2 HAVING 0x79c421f8 UNION ALL SELECT t0.c1, rt1.c3, rt1.c1, rt1.c0, rt1.c2 FROM v0, t0, rt1 NOT INDEXED, t1 GROUP BY t0.c1, rt1.c3, rt1.c1, rt1.c0, rt1.c2 HAVING (NOT (0X79c421f8)) UNION ALL SELECT t0.c1, rt1.c3, rt1.c1, rt1.c0, rt1.c2 FROM v0, t0, rt1, t1 GROUP BY t0.c1, rt1.c3, rt1.c1, rt1.c0, rt1.c2 HAVING ((0x79c421f8) ISNULL);
SELECT ALL t0.c1, rt1.c3, rt1.c1, rt1.c0, rt1.c2 FROM v0, t0, rt1, t1 GROUP BY t0.c1, rt1.c3, rt1.c1, rt1.c0, rt1.c2;
SELECT ALL t0.c1, rt1.c3, rt1.c1, rt1.c0, rt1.c2 FROM v0, t0, rt1, t1 GROUP BY t0.c1, rt1.c3, rt1.c1, rt1.c0, rt1.c2 HAVING 0x79c421f8 UNION ALL SELECT t0.c1, rt1.c3, rt1.c1, rt1.c0, rt1.c2 FROM v0, t0, rt1 NOT INDEXED, t1 GROUP BY t0.c1, rt1.c3, rt1.c1, rt1.c0, rt1.c2 HAVING (NOT (0X79c421f8)) UNION ALL SELECT t0.c1, rt1.c3, rt1.c1, rt1.c0, rt1.c2 FROM v0, t0, rt1, t1 GROUP BY t0.c1, rt1.c3, rt1.c1, rt1.c0, rt1.c2 HAVING ((0x79c421f8) ISNULL);
SELECT ALL t0.c1, rt1.c3, rt1.c1, rt1.c0, rt1.c2 FROM v0, t0, rt1, t1 GROUP BY t0.c1, rt1.c3, rt1.c1, rt1.c0, rt1.c2;
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE (((INSTR(v0.c0, v0.c0)) ISNULL)) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (((INSTR(v0.c0, v0.c0)) ISNULL)))) UNION ALL SELECT ALL * FROM v0 WHERE (((((INSTR(v0.c0, v0.c0)) ISNULL)) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT rt0.c1 FROM t1, v0, rt1, rt0;
SELECT DISTINCT rt0.c1 FROM t1, v0, rt1, rt0 WHERE ((((((((((rt0.c3 IN (t1.c0)))OR(((rt1.c2) IS TRUE))))OR(((rt0.c0)<=(rt0.c1)))))AND(0.7675888863676918)))OR(NULLIF(DISTINCT rt0.c0, rt0.c2)))) UNION SELECT DISTINCT rt0.c1 FROM t1, v0, rt1, rt0 WHERE ((NOT ((((((((((rt0.c3 IN (t1.c0)))OR(((rt1.c2) IS TRUE))))OR(((rt0.c0)<=(rt0.c1)))))AND(0.7675888863676918)))OR(NULLIF(DISTINCT rt0.c0, rt0.c2)))))) UNION SELECT DISTINCT rt0.c1 FROM t1, v0, rt1, rt0 WHERE ((((((((((((rt0.c3 IN (t1.c0)))OR(((rt1.c2) IS TRUE))))OR(((rt0.c0)<=(rt0.c1)))))AND(0.7675888863676918)))OR(NULLIF(DISTINCT rt0.c0, rt0.c2)))) ISNULL));
SELECT DISTINCT rt0.c1 FROM t1, v0, rt1, rt0;
SELECT v0.c0, t1.c0, rt0.c2, rt1.c3, t0.c2, rt0.c0, t0.c1, rt0.c3, rt1.c2 FROM t0 INDEXED BY i35, rt0 NOT INDEXED, rt1, t1, v0 GROUP BY v0.c0, t1.c0, rt0.c2, rt1.c3, t0.c2, rt0.c0, t0.c1, rt0.c3, rt1.c2;
SELECT ALL rt1.c2, t1.c0, v0.c0 FROM rt1, t1 INNER JOIN t0 ON CASE WHEN ((rt1.c1) NOT NULL) THEN ((rt1.c1) IS FALSE) ELSE rt1.c3 END LEFT OUTER JOIN v0 ON (+ ((((rt1.c3))<(('TルwWd)PI'))))) GROUP BY rt1.c2, t1.c0, v0.c0;
SELECT ALL rt1.c2, t1.c0, v0.c0 FROM rt1, t1 INNER JOIN t0 ON CASE WHEN ((rt1.c1) NOT NULL) THEN ((rt1.c1) IS FALSE) ELSE rt1.c3 END LEFT OUTER JOIN v0 ON (+ ((((rt1.c3))<(('TルwWd)PI'))))) GROUP BY rt1.c2, t1.c0, v0.c0 HAVING COUNT(GROUP_CONCAT(t0.c2)) UNION ALL SELECT ALL rt1.c2, t1.c0, v0.c0 FROM rt1, t1 INNER JOIN t0 ON CASE WHEN ((rt1.c1) NOT NULL) THEN ((rt1.c1) IS FALSE) ELSE rt1.c3 END LEFT OUTER JOIN v0 ON (+ ((((rt1.c3))<(('TルwWd)PI'))))) GROUP BY rt1.c2, t1.c0, v0.c0 HAVING (NOT (COUNT(GROUP_CONCAT(t0.c2)))) UNION ALL SELECT ALL rt1.c2, t1.c0, v0.c0 FROM rt1, t1 INNER JOIN t0 ON CASE WHEN ((rt1.c1) NOT NULL) THEN ((rt1.c1) IS FALSE) ELSE rt1.c3 END LEFT OUTER JOIN v0 ON (+ ((((rt1.c3))<(('TルwWd)PI'))))) GROUP BY rt1.c2, t1.c0, v0.c0 HAVING ((COUNT(GROUP_CONCAT(t0.c2))) ISNULL);
SELECT * FROM t1, rt1, v0, t0, rt0;
SELECT * FROM t1, rt1, v0, t0, rt0 WHERE (CASE WHEN SQLITE_VERSION() THEN ((-439303415) IS FALSE) WHEN 0.8474148938976213 THEN CASE WHEN '1043495188' THEN rt1.c1 WHEN t0.c2 THEN rt0.c1 WHEN rt1.c3 THEN rt1.c1 ELSE v0.c0 END WHEN load_extension(t1.c0) THEN ((t1.c0)IS NOT(t0.c0)) END) UNION ALL SELECT * FROM t1, rt1, v0, t0, rt0 WHERE ((NOT (CASE WHEN SQLITE_VERSION() THEN ((-439303415) IS FALSE) WHEN 0.8474148938976213 THEN CASE WHEN '1043495188' THEN rt1.c1 WHEN t0.c2 THEN rt0.c1 WHEN rt1.c3 THEN rt1.c1 ELSE v0.c0 END WHEN load_extension(t1.c0) THEN ((t1.c0)IS NOT(t0.c0)) END))) UNION ALL SELECT * FROM t1, rt1, v0, t0, rt0 WHERE (((CASE WHEN SQLITE_VERSION() THEN ((-439303415) IS FALSE) WHEN 0.8474148938976213 THEN CASE WHEN '1043495188' THEN rt1.c1 WHEN t0.c2 THEN rt0.c1 WHEN rt1.c3 THEN rt1.c1 ELSE v0.c0 END WHEN load_extension(t1.c0) THEN ((t1.c0)IS NOT(t0.c0)) END) ISNULL));
SELECT * FROM t1, rt1, v0, t0, rt0;
SELECT DISTINCT rt1.c1, rt0.c2, rt1.c2, t1.c0, rt1.c0, t0.c2, t0.c1, v0.c0, rt0.c4 FROM rt0, t1, t0, rt1, v0 INDEXED BY i55;
SELECT ALL t0.c2, t0.c1 FROM t1, t0 GROUP BY t0.c2, t0.c1;
SELECT ALL t0.c2, t0.c1 FROM t1, t0 WHERE (((+ (t0.c2)) IN ())) GROUP BY t0.c2, t0.c1 UNION SELECT ALL t0.c2, t0.c1 FROM t1, t0 WHERE ((NOT (((+ (t0.c2)) IN ())))) GROUP BY t0.c2, t0.c1 UNION SELECT t0.c2, t0.c1 FROM t1, t0 WHERE (((((+ (t0.c2)) IN ())) ISNULL)) GROUP BY t0.c2, t0.c1;
SELECT ALL t0.c2, t0.c1 FROM t1, t0 GROUP BY t0.c2, t0.c1;
SELECT t0.c1, t1.c0, t0.c2, rt0.c2, rt0.c3, rt0.c1, t0.c0, rt0.c4, rt0.c0 FROM t1, t0 INNER JOIN rt0 ON ((((rt0.c2)OR(t0.c0))) NOT BETWEEN (CASE t1.c0  WHEN t0.c0 THEN rt0.c3 WHEN rt0.c1 THEN t0.c0 WHEN t1.c0 THEN t0.c2 END) AND (CAST(t0.c2 AS BLOB))) GROUP BY t0.c1, t1.c0, t0.c2, rt0.c2, rt0.c3, rt0.c1, t0.c0, rt0.c4, rt0.c0;
SELECT ALL t0.c1, t1.c0, t0.c2, rt0.c2, rt0.c3, rt0.c1, t0.c0, rt0.c4, rt0.c0 FROM t1, t0 INNER JOIN rt0 ON ((((rt0.c2)OR(t0.c0))) NOT BETWEEN (CASE t1.c0  WHEN t0.c0 THEN rt0.c3 WHEN rt0.c1 THEN t0.c0 WHEN t1.c0 THEN t0.c2 END) AND (CAST(t0.c2 AS BLOB))) GROUP BY t0.c1, t1.c0, t0.c2, rt0.c2, rt0.c3, rt0.c1, t0.c0, rt0.c4, rt0.c0 HAVING CAST(UNLIKELY(DISTINCT COUNT(rt0.c4)) AS NUMERIC) UNION ALL SELECT t0.c1, t1.c0, t0.c2, rt0.c2, rt0.c3, rt0.c1, t0.c0, rt0.c4, rt0.c0 FROM t1, t0 INNER JOIN rt0 ON ((((rt0.c2)OR(t0.c0))) NOT BETWEEN (CASE t1.c0  WHEN t0.c0 THEN rt0.c3 WHEN rt0.c1 THEN t0.c0 WHEN t1.c0 THEN t0.c2 END) AND (CAST(t0.c2 AS BLOB))) GROUP BY t0.c1, t1.c0, t0.c2, rt0.c2, rt0.c3, rt0.c1, t0.c0, rt0.c4, rt0.c0 HAVING (NOT (CAST(UNLIKELY(DISTINCT COUNT(rt0.c4)) AS NUMERIC))) UNION ALL SELECT ALL t0.c1, t1.c0, t0.c2, rt0.c2, rt0.c3, rt0.c1, t0.c0, rt0.c4, rt0.c0 FROM t1, t0 INNER JOIN rt0 ON ((((rt0.c2)OR(t0.c0))) NOT BETWEEN (CASE t1.c0  WHEN t0.c0 THEN rt0.c3 WHEN rt0.c1 THEN t0.c0 WHEN t1.c0 THEN t0.c2 END) AND (CAST(t0.c2 AS BLOB))) GROUP BY t0.c1, t1.c0, t0.c2, rt0.c2, rt0.c3, rt0.c1, t0.c0, rt0.c4, rt0.c0 HAVING ((CAST(UNLIKELY(DISTINCT COUNT(rt0.c4)) AS NUMERIC)) ISNULL);
SELECT t0.c1, t1.c0, t0.c2, rt0.c2, rt0.c3, rt0.c1, t0.c0, rt0.c4, rt0.c0 FROM t1, t0 INNER JOIN rt0 ON ((((rt0.c2)OR(t0.c0))) NOT BETWEEN (CASE t1.c0  WHEN t0.c0 THEN rt0.c3 WHEN rt0.c1 THEN t0.c0 WHEN t1.c0 THEN t0.c2 END) AND (CAST(t0.c2 AS BLOB))) GROUP BY t0.c1, t1.c0, t0.c2, rt0.c2, rt0.c3, rt0.c1, t0.c0, rt0.c4, rt0.c0;
SELECT ALL t0.c1, t1.c0, t0.c2, rt0.c2, rt0.c3, rt0.c1, t0.c0, rt0.c4, rt0.c0 FROM t1, t0 INNER JOIN rt0 ON ((((rt0.c2)OR(t0.c0))) NOT BETWEEN (CASE t1.c0  WHEN t0.c0 THEN rt0.c3 WHEN rt0.c1 THEN t0.c0 WHEN t1.c0 THEN t0.c2 END) AND (CAST(t0.c2 AS BLOB))) GROUP BY t0.c1, t1.c0, t0.c2, rt0.c2, rt0.c3, rt0.c1, t0.c0, rt0.c4, rt0.c0 HAVING CAST(UNLIKELY(DISTINCT COUNT(rt0.c4)) AS NUMERIC) UNION ALL SELECT t0.c1, t1.c0, t0.c2, rt0.c2, rt0.c3, rt0.c1, t0.c0, rt0.c4, rt0.c0 FROM t1, t0 INNER JOIN rt0 ON ((((rt0.c2)OR(t0.c0))) NOT BETWEEN (CASE t1.c0  WHEN t0.c0 THEN rt0.c3 WHEN rt0.c1 THEN t0.c0 WHEN t1.c0 THEN t0.c2 END) AND (CAST(t0.c2 AS BLOB))) GROUP BY t0.c1, t1.c0, t0.c2, rt0.c2, rt0.c3, rt0.c1, t0.c0, rt0.c4, rt0.c0 HAVING (NOT (CAST(UNLIKELY(DISTINCT COUNT(rt0.c4)) AS NUMERIC))) UNION ALL SELECT ALL t0.c1, t1.c0, t0.c2, rt0.c2, rt0.c3, rt0.c1, t0.c0, rt0.c4, rt0.c0 FROM t1, t0 INNER JOIN rt0 ON ((((rt0.c2)OR(t0.c0))) NOT BETWEEN (CASE t1.c0  WHEN t0.c0 THEN rt0.c3 WHEN rt0.c1 THEN t0.c0 WHEN t1.c0 THEN t0.c2 END) AND (CAST(t0.c2 AS BLOB))) GROUP BY t0.c1, t1.c0, t0.c2, rt0.c2, rt0.c3, rt0.c1, t0.c0, rt0.c4, rt0.c0 HAVING ((CAST(UNLIKELY(DISTINCT COUNT(rt0.c4)) AS NUMERIC)) ISNULL);
SELECT t0.c1, t1.c0, t0.c2, rt0.c2, rt0.c3, rt0.c1, t0.c0, rt0.c4, rt0.c0 FROM t1, t0 INNER JOIN rt0 ON ((((rt0.c2)OR(t0.c0))) NOT BETWEEN (CASE t1.c0  WHEN t0.c0 THEN rt0.c3 WHEN rt0.c1 THEN t0.c0 WHEN t1.c0 THEN t0.c2 END) AND (CAST(t0.c2 AS BLOB))) GROUP BY t0.c1, t1.c0, t0.c2, rt0.c2, rt0.c3, rt0.c1, t0.c0, rt0.c4, rt0.c0;
SELECT ALL * FROM rt0 INNER JOIN rt1 ON HEX(rt1.c0);
SELECT * FROM rt0 INNER JOIN rt1 ON HEX(rt1.c0) WHERE (((JULIANDAY(-4.7000396E7, rt1.c3, rt0.c0)) BETWEEN (CAST(rt1.c3 AS BLOB)) AND ((NOT (rt1.c1))))) UNION ALL SELECT ALL * FROM rt0 INNER JOIN rt1 ON HEX(rt1.c0) WHERE ((NOT (((JULIANDAY(-4.7000396E7, rt1.c3, rt0.c0)) BETWEEN (CAST(rt1.c3 AS BLOB)) AND ((NOT (rt1.c1))))))) UNION ALL SELECT ALL * FROM rt0 INNER JOIN rt1 ON HEX(rt1.c0) WHERE (((((JULIANDAY(-4.7000396E7, rt1.c3, rt0.c0)) BETWEEN (CAST(rt1.c3 AS BLOB)) AND ((NOT (rt1.c1))))) ISNULL));
SELECT ALL * FROM rt0 INNER JOIN rt1 ON HEX(rt1.c0);
SELECT DISTINCT * FROM t1 CROSS JOIN t0 ON (((NULL)/(t0.c1)) IN ()) CROSS JOIN rt1 ON ((CAST(t0.c1 AS NUMERIC)) BETWEEN (((((rt1.c1)OR(t0.c2)))OR(t0.c0))) AND (((t0.c0) NOT BETWEEN (rt1.c2) AND (t1.c0))));
SELECT DISTINCT * FROM t1 CROSS JOIN t0 ON (((NULL)/(t0.c1)) IN ()) CROSS JOIN rt1 ON ((CAST(t0.c1 AS NUMERIC)) BETWEEN (((((rt1.c1)OR(t0.c2)))OR(t0.c0))) AND (((t0.c0) NOT BETWEEN (rt1.c2) AND (t1.c0)))) WHERE (CASE COALESCE(t0.c0, rt1.c0)  WHEN t0.c1 COLLATE RTRIM THEN ((t0.c0) BETWEEN (t0.c0) AND (rt1.c1)) END) UNION SELECT DISTINCT * FROM t1 CROSS JOIN t0 ON (((NULL)/(t0.c1)) IN ()) CROSS JOIN rt1 ON ((CAST(t0.c1 AS NUMERIC)) BETWEEN (((((rt1.c1)OR(t0.c2)))OR(t0.c0))) AND (((t0.c0) NOT BETWEEN (rt1.c2) AND (t1.c0)))) WHERE ((NOT (CASE COALESCE(t0.c0, rt1.c0)  WHEN t0.c1 COLLATE RTRIM THEN ((t0.c0) BETWEEN (t0.c0) AND (rt1.c1)) END))) UNION SELECT DISTINCT * FROM t1 CROSS JOIN t0 ON (((NULL)/(t0.c1)) IN ()) CROSS JOIN rt1 ON ((CAST(t0.c1 AS NUMERIC)) BETWEEN (((((rt1.c1)OR(t0.c2)))OR(t0.c0))) AND (((t0.c0) NOT BETWEEN (rt1.c2) AND (t1.c0)))) WHERE (((CASE COALESCE(t0.c0, rt1.c0)  WHEN t0.c1 COLLATE RTRIM THEN ((t0.c0) BETWEEN (t0.c0) AND (rt1.c1)) END) ISNULL));
SELECT DISTINCT * FROM t1 CROSS JOIN t0 ON (((NULL)/(t0.c1)) IN ()) CROSS JOIN rt1 ON ((CAST(t0.c1 AS NUMERIC)) BETWEEN (((((rt1.c1)OR(t0.c2)))OR(t0.c0))) AND (((t0.c0) NOT BETWEEN (rt1.c2) AND (t1.c0))));
SELECT ALL rt1.c1, v0.c0 FROM v0, rt1, rt0, t1, t0 GROUP BY rt1.c1, v0.c0;
SELECT rt1.c1, v0.c0 FROM v0, rt1, rt0, t1, t0 WHERE (CAST(((0.73259170396909)==(t0.c1)) AS REAL)) GROUP BY rt1.c1, v0.c0 UNION SELECT rt1.c1, v0.c0 FROM v0, rt1, rt0, t1, t0 WHERE ((NOT (CAST(((0.73259170396909)==(t0.c1)) AS REAL)))) GROUP BY rt1.c1, v0.c0 UNION SELECT rt1.c1, v0.c0 FROM v0, rt1, rt0, t1, t0 WHERE (((CAST(((0.73259170396909)==(t0.c1)) AS REAL)) ISNULL)) GROUP BY rt1.c1, v0.c0;
SELECT ALL rt1.c1, v0.c0 FROM v0, rt1, rt0, t1, t0 GROUP BY rt1.c1, v0.c0;
SELECT ALL t0.c1, rt0.c0, rt1.c0, rt0.c2, t0.c0, t0.c2, rt1.c1, rt0.c4, t1.c0, rt0.c3, v0.c0, rt1.c2, rt0.c1 FROM t0 CROSS JOIN v0 ON CAST((+ (t1.c0)) AS REAL) INNER JOIN t1 ON CAST(((t0.c2)<=(rt1.c0)) AS TEXT) INNER JOIN rt1 ON HEX(DISTINCT ((t0.c0)||(rt0.c0))) FULL OUTER JOIN rt0 ON (((rt0.c3, (((rt0.c3, t0.c0, rt0.c3))>((rt1.c0, rt0.c4, t0.c2))), (t0.c1 IN ()), (rt0.c0 IN (rt0.c3, rt1.c2)), (- (rt0.c0))))==((rt0.c2, TRIM(DISTINCT rt0.c4, t0.c0), (((rt1.c0, rt0.c3, rt0.c3)) BETWEEN ((t0.c1, rt0.c0, t0.c1)) AND ((t0.c1, rt0.c1, t1.c0))), v0.c0, rt0.c4))) GROUP BY t0.c1, rt0.c0, rt1.c0, rt0.c2, t0.c0, t0.c2, rt1.c1, rt0.c4, t1.c0, rt0.c3, v0.c0, rt1.c2, rt0.c1;
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE ((- ((- (v0.c0))))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT ((- ((- (v0.c0))))))) UNION ALL SELECT ALL * FROM v0 WHERE ((((- ((- (v0.c0))))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM rt0, rt1, v0 INNER JOIN t1 ON ((((((((((0.44293513925793615)%(rt1.c1)))OR(((v0.c0) IS FALSE))))OR((((rt0.c1))<((rt1.c1))))))AND(TRIM(v0.c0, rt1.c3))))OR(CASE WHEN rt0.c2 THEN 0.8856329458746245 WHEN rt0.c3 THEN rt0.c0 WHEN rt1.c1 THEN rt1.c3 END));
SELECT DISTINCT * FROM rt0, rt1, v0 INNER JOIN t1 ON ((((((((((0.44293513925793615)%(rt1.c1)))OR(((v0.c0) IS FALSE))))OR((((rt0.c1))<((rt1.c1))))))AND(TRIM(v0.c0, rt1.c3))))OR(CASE WHEN rt0.c2 THEN 0.8856329458746245 WHEN rt0.c3 THEN rt0.c0 WHEN rt1.c1 THEN rt1.c3 END)) WHERE (rt1.c0 COLLATE NOCASE) UNION SELECT DISTINCT * FROM rt0, rt1, v0 INNER JOIN t1 ON ((((((((((0.44293513925793615)%(rt1.c1)))OR(((v0.c0) IS FALSE))))OR((((rt0.c1))<((rt1.c1))))))AND(TRIM(v0.c0, rt1.c3))))OR(CASE WHEN rt0.c2 THEN 0.8856329458746245 WHEN rt0.c3 THEN rt0.c0 WHEN rt1.c1 THEN rt1.c3 END)) WHERE ((NOT (rt1.c0 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM rt0, rt1, v0 INNER JOIN t1 ON ((((((((((0.44293513925793615)%(rt1.c1)))OR(((v0.c0) IS FALSE))))OR((((rt0.c1))<((rt1.c1))))))AND(TRIM(v0.c0, rt1.c3))))OR(CASE WHEN rt0.c2 THEN 0.8856329458746245 WHEN rt0.c3 THEN rt0.c0 WHEN rt1.c1 THEN rt1.c3 END)) WHERE (((rt1.c0 COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM rt0, rt1, v0 INNER JOIN t1 ON ((((((((((0.44293513925793615)%(rt1.c1)))OR(((v0.c0) IS FALSE))))OR((((rt0.c1))<((rt1.c1))))))AND(TRIM(v0.c0, rt1.c3))))OR(CASE WHEN rt0.c2 THEN 0.8856329458746245 WHEN rt0.c3 THEN rt0.c0 WHEN rt1.c1 THEN rt1.c3 END));
SELECT ALL v0.c0 FROM t1, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM t1, v0 WHERE ((- (((t1.c0) IS FALSE)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM t1, v0 WHERE ((NOT ((- (((t1.c0) IS FALSE)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM t1, v0 WHERE ((((- (((t1.c0) IS FALSE)))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM t1, v0 GROUP BY v0.c0;
SELECT ALL t0.c1, rt1.c2 FROM rt1, t0 GROUP BY t0.c1, rt1.c2;
SELECT t0.c1, rt1.c2 FROM rt1, t0 GROUP BY t0.c1, rt1.c2 HAVING SUM(MIN(rt1.c2)) UNION ALL SELECT t0.c1, rt1.c2 FROM rt1, t0 GROUP BY t0.c1, rt1.c2 HAVING (NOT (SUM(MIN(rt1.c2)))) UNION ALL SELECT t0.c1, rt1.c2 FROM rt1, t0 GROUP BY t0.c1, rt1.c2 HAVING ((SUM(MIN(rt1.c2))) ISNULL);
SELECT ALL rt1.c2, t0.c1, t0.c0, t0.c2, rt1.c3, v0.c0, rt1.c1 FROM v0, rt1 RIGHT OUTER JOIN t0 ON (t0.c1 IN (((((t0.c2)AND(rt1.c1)))AND('-1560288753'))));
SELECT ALL rt1.c2, t0.c1, t0.c0, t0.c2, rt1.c3, v0.c0, rt1.c1 FROM v0, rt1 RIGHT OUTER JOIN t0 ON (t0.c1 IN (((((t0.c2)AND(rt1.c1)))AND('-1560288753')))) WHERE (((((rt1.c3 IN ())))<(((- (rt1.c2)))))) UNION ALL SELECT ALL rt1.c2, t0.c1, t0.c0, t0.c2, rt1.c3, v0.c0, rt1.c1 FROM v0, rt1 RIGHT OUTER JOIN t0 ON (t0.c1 IN (((((t0.c2)AND(rt1.c1)))AND('-1560288753')))) WHERE ((NOT (((((rt1.c3 IN ())))<(((- (rt1.c2)))))))) UNION ALL SELECT ALL rt1.c2, t0.c1, t0.c0, t0.c2, rt1.c3, v0.c0, rt1.c1 FROM v0, rt1 RIGHT OUTER JOIN t0 ON (t0.c1 IN (((((t0.c2)AND(rt1.c1)))AND('-1560288753')))) WHERE (((((((rt1.c3 IN ())))<(((- (rt1.c2)))))) ISNULL));
SELECT ALL rt1.c2, t0.c1, t0.c0, t0.c2, rt1.c3, v0.c0, rt1.c1 FROM v0, rt1 RIGHT OUTER JOIN t0 ON (t0.c1 IN (((((t0.c2)AND(rt1.c1)))AND('-1560288753'))));
SELECT DISTINCT * FROM rt0, v0, t0, rt1 INNER JOIN t1 ON CASE CAST(rt0.c4 AS NUMERIC)  WHEN rt0.c2 THEN rt0.c1 WHEN CAST(rt1.c3 AS REAL) THEN (((rt0.c3, t0.c2, rt0.c2)) NOT BETWEEN ((rt1.c0, rt0.c4, t1.c0)) AND ((rt1.c3, rt0.c4, x''))) WHEN (rt1.c3 IN ()) THEN ((rt0.c2) BETWEEN (rt1.c2) AND (t0.c0)) WHEN ((rt0.c1) NOTNULL) THEN t0.c0 WHEN ((((rt0.c1)AND(rt0.c3)))AND(rt1.c2)) THEN ((t0.c1)<<(rt0.c3)) END;
SELECT DISTINCT * FROM rt0, v0, t0, rt1 INNER JOIN t1 ON CASE CAST(rt0.c4 AS NUMERIC)  WHEN rt0.c2 THEN rt0.c1 WHEN CAST(rt1.c3 AS REAL) THEN (((rt0.c3, t0.c2, rt0.c2)) NOT BETWEEN ((rt1.c0, rt0.c4, t1.c0)) AND ((rt1.c3, rt0.c4, x''))) WHEN (rt1.c3 IN ()) THEN ((rt0.c2) BETWEEN (rt1.c2) AND (t0.c0)) WHEN ((rt0.c1) NOTNULL) THEN t0.c0 WHEN ((((rt0.c1)AND(rt0.c3)))AND(rt1.c2)) THEN ((t0.c1)<<(rt0.c3)) END WHERE (CAST(json_array_length(rt1.c1) AS TEXT)) UNION SELECT DISTINCT * FROM rt0, v0, t0, rt1 INNER JOIN t1 ON CASE CAST(rt0.c4 AS NUMERIC)  WHEN rt0.c2 THEN rt0.c1 WHEN CAST(rt1.c3 AS REAL) THEN (((rt0.c3, t0.c2, rt0.c2)) NOT BETWEEN ((rt1.c0, rt0.c4, t1.c0)) AND ((rt1.c3, rt0.c4, x''))) WHEN (rt1.c3 IN ()) THEN ((rt0.c2) BETWEEN (rt1.c2) AND (t0.c0)) WHEN ((rt0.c1) NOTNULL) THEN t0.c0 WHEN ((((rt0.c1)AND(rt0.c3)))AND(rt1.c2)) THEN ((t0.c1)<<(rt0.c3)) END WHERE ((NOT (CAST(json_array_length(rt1.c1) AS TEXT)))) UNION SELECT DISTINCT * FROM rt0, v0, t0, rt1 INNER JOIN t1 ON CASE CAST(rt0.c4 AS NUMERIC)  WHEN rt0.c2 THEN rt0.c1 WHEN CAST(rt1.c3 AS REAL) THEN (((rt0.c3, t0.c2, rt0.c2)) NOT BETWEEN ((rt1.c0, rt0.c4, t1.c0)) AND ((rt1.c3, rt0.c4, x''))) WHEN (rt1.c3 IN ()) THEN ((rt0.c2) BETWEEN (rt1.c2) AND (t0.c0)) WHEN ((rt0.c1) NOTNULL) THEN t0.c0 WHEN ((((rt0.c1)AND(rt0.c3)))AND(rt1.c2)) THEN ((t0.c1)<<(rt0.c3)) END WHERE (((CAST(json_array_length(rt1.c1) AS TEXT)) ISNULL));
SELECT DISTINCT * FROM rt0, v0, t0, rt1 INNER JOIN t1 ON CASE CAST(rt0.c4 AS NUMERIC)  WHEN rt0.c2 THEN rt0.c1 WHEN CAST(rt1.c3 AS REAL) THEN (((rt0.c3, t0.c2, rt0.c2)) NOT BETWEEN ((rt1.c0, rt0.c4, t1.c0)) AND ((rt1.c3, rt0.c4, x''))) WHEN (rt1.c3 IN ()) THEN ((rt0.c2) BETWEEN (rt1.c2) AND (t0.c0)) WHEN ((rt0.c1) NOTNULL) THEN t0.c0 WHEN ((((rt0.c1)AND(rt0.c3)))AND(rt1.c2)) THEN ((t0.c1)<<(rt0.c3)) END;
SELECT rt0.c4, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c2, rt0.c3;
SELECT ALL rt0.c4, rt0.c2, rt0.c3 FROM rt0 WHERE ((((((NOT (rt0.c4)))OR((rt0.c3 IN ()))))OR(rt0.c1 COLLATE BINARY))) GROUP BY rt0.c4, rt0.c2, rt0.c3 UNION SELECT ALL rt0.c4, rt0.c2, rt0.c3 FROM rt0 WHERE ((NOT ((((((NOT (rt0.c4)))OR((rt0.c3 IN ()))))OR(rt0.c1 COLLATE BINARY))))) GROUP BY rt0.c4, rt0.c2, rt0.c3 UNION SELECT rt0.c4, rt0.c2, rt0.c3 FROM rt0 WHERE ((((((((NOT (rt0.c4)))OR((rt0.c3 IN ()))))OR(rt0.c1 COLLATE BINARY))) ISNULL)) GROUP BY rt0.c4, rt0.c2, rt0.c3;
SELECT rt0.c4, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c2, rt0.c3;
SELECT t0.c0, t0.c1, t0.c2 FROM t0 GROUP BY t0.c0, t0.c1, t0.c2;
SELECT ALL t0.c0, t0.c1, t0.c2 FROM t0 GROUP BY t0.c0, t0.c1, t0.c2 HAVING MIN(AVG(t0.c0)) UNION ALL SELECT ALL t0.c0, t0.c1, t0.c2 FROM t0 GROUP BY t0.c0, t0.c1, t0.c2 HAVING (NOT (MIN(AVG(t0.c0)))) UNION ALL SELECT ALL t0.c0, t0.c1, t0.c2 FROM t0 GROUP BY t0.c0, t0.c1, t0.c2 HAVING ((MIN(AVG(t0.c0))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE ((- (((rt0.c1)>(rt0.c0))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((- (((rt0.c1)>(rt0.c0))))))) UNION ALL SELECT * FROM rt0 WHERE ((((- (((rt0.c1)>(rt0.c0))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT t0.c0 FROM t0, rt0, rt1, t1;
SELECT DISTINCT t0.c0 FROM t0, rt0, rt1, t1 WHERE (TYPEOF((((t0.c1)) BETWEEN ((t1.c0)) AND ((rt1.c0))))) UNION SELECT DISTINCT t0.c0 FROM t0, rt0, rt1, t1 WHERE ((NOT (TYPEOF((((t0.c1)) BETWEEN ((t1.c0)) AND ((rt1.c0))))))) UNION SELECT DISTINCT t0.c0 FROM t0, rt0, rt1, t1 WHERE (((TYPEOF((((t0.c1)) BETWEEN ((t1.c0)) AND ((rt1.c0))))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0, rt0, rt1, t1;
SELECT rt0.c3, rt1.c3, rt1.c1, rt0.c1, t0.c2, rt0.c4, rt0.c0, rt0.c2, t0.c1 FROM rt1, t1, t0, v0, rt0 GROUP BY rt0.c3, rt1.c3, rt1.c1, rt0.c1, t0.c2, rt0.c4, rt0.c0, rt0.c2, t0.c1;
SELECT ALL rt0.c3, rt1.c3, rt1.c1, rt0.c1, t0.c2, rt0.c4, rt0.c0, rt0.c2, t0.c1 FROM rt1, t1, t0, v0, rt0 WHERE ((((((~ (rt1.c3)))OR((rt0.c4 IN ()))))OR((NOT (t0.c1))))) GROUP BY rt0.c3, rt1.c3, rt1.c1, rt0.c1, t0.c2, rt0.c4, rt0.c0, rt0.c2, t0.c1 UNION SELECT ALL rt0.c3, rt1.c3, rt1.c1, rt0.c1, t0.c2, rt0.c4, rt0.c0, rt0.c2, t0.c1 FROM rt1, t1, t0, v0, rt0 WHERE ((NOT ((((((~ (rt1.c3)))OR((rt0.c4 IN ()))))OR((NOT (t0.c1))))))) GROUP BY rt0.c3, rt1.c3, rt1.c1, rt0.c1, t0.c2, rt0.c4, rt0.c0, rt0.c2, t0.c1 UNION SELECT rt0.c3, rt1.c3, rt1.c1, rt0.c1, t0.c2, rt0.c4, rt0.c0, rt0.c2, t0.c1 FROM rt1, t1, t0, v0, rt0 WHERE ((((((((~ (rt1.c3)))OR((rt0.c4 IN ()))))OR((NOT (t0.c1))))) ISNULL)) GROUP BY rt0.c3, rt1.c3, rt1.c1, rt0.c1, t0.c2, rt0.c4, rt0.c0, rt0.c2, t0.c1;
SELECT rt0.c3, rt1.c3, rt1.c1, rt0.c1, t0.c2, rt0.c4, rt0.c0, rt0.c2, t0.c1 FROM rt1, t1, t0, v0, rt0 GROUP BY rt0.c3, rt1.c3, rt1.c1, rt0.c1, t0.c2, rt0.c4, rt0.c0, rt0.c2, t0.c1;
SELECT t0.c2 FROM v0, t1, t0 GROUP BY t0.c2;
SELECT t0.c2 FROM v0, t1, t0 GROUP BY t0.c2 HAVING COUNT(COUNT(*)) UNION ALL SELECT t0.c2 FROM v0, t1, t0 NOT INDEXED GROUP BY t0.c2 HAVING (NOT (COUNT(COUNT(*)))) UNION ALL SELECT ALL t0.c2 FROM v0, t1, t0 GROUP BY t0.c2 HAVING ((COUNT(COUNT(*))) ISNULL);
SELECT ALL * FROM v0, t1 INNER JOIN rt1 ON ((NULL) BETWEEN (rt1.c3) AND (((t1.c0) ISNULL))) CROSS JOIN rt0 ON ((((t0.c1)IS(rt0.c3)))OR((('0.6523168661742601')<<(v0.c0)))) CROSS JOIN t0 ON (~ (((rt0.c3) IS FALSE)));
SELECT ALL * FROM v0, t1 INNER JOIN rt1 ON ((NULL) BETWEEN (rt1.c3) AND (((t1.c0) ISNULL))) CROSS JOIN rt0 ON ((((t0.c1)IS(rt0.c3)))OR((('0.6523168661742601')<<(v0.c0)))) CROSS JOIN t0 ON (~ (((rt0.c3) IS FALSE))) WHERE (0.3522807970394026) UNION ALL SELECT ALL * FROM v0, t1 INNER JOIN rt1 ON ((NULL) BETWEEN (rt1.c3) AND (((t1.c0) ISNULL))) CROSS JOIN rt0 ON ((((t0.c1)IS(rt0.c3)))OR((('0.6523168661742601')<<(v0.c0)))) CROSS JOIN t0 ON (~ (((rt0.c3) IS FALSE))) WHERE ((NOT (0.3522807970394026))) UNION ALL SELECT * FROM v0, t1 INNER JOIN rt1 ON ((NULL) BETWEEN (rt1.c3) AND (((t1.c0) ISNULL))) CROSS JOIN rt0 ON ((((t0.c1)IS(rt0.c3)))OR((('0.6523168661742601')<<(v0.c0)))) CROSS JOIN t0 ON (~ (((rt0.c3) IS FALSE))) WHERE (((0.3522807970394026) ISNULL));
SELECT ALL * FROM v0, t1 INNER JOIN rt1 ON ((NULL) BETWEEN (rt1.c3) AND (((t1.c0) ISNULL))) CROSS JOIN rt0 ON ((((t0.c1)IS(rt0.c3)))OR((('0.6523168661742601')<<(v0.c0)))) CROSS JOIN t0 ON (~ (((rt0.c3) IS FALSE)));
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((CAST(NULL AS TEXT))%(-348615502))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((CAST(NULL AS TEXT))%(-348615502))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((CAST(NULL AS TEXT))%(-348615502))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c4, rt1.c1, rt0.c0, rt0.c3, v0.c0, t0.c2, t0.c1, rt1.c0, t0.c0, rt1.c3 FROM t0, rt0, rt1 LEFT OUTER JOIN v0 ON (((rt1.c1, t0.c2, rt1.c2)) BETWEEN ((CAST(NULL AS NUMERIC), NULL, '-670259479')) AND ((((t0.c2) BETWEEN (rt0.c4) AND (rt1.c3)), ((((((((t0.c1)AND(x'dcf8')))AND(rt0.c2)))AND(rt1.c1)))OR(rt1.c3)), ((((((((((((rt1.c3)OR(rt1.c0)))AND(v0.c0)))AND(rt0.c4)))AND(rt1.c2)))OR(t0.c0)))OR(''))))) GROUP BY rt0.c4, rt1.c1, rt0.c0, rt0.c3, v0.c0, t0.c2, t0.c1, rt1.c0, t0.c0, rt1.c3;
SELECT ALL rt0.c4, rt1.c1, rt0.c0, rt0.c3, v0.c0, t0.c2, t0.c1, rt1.c0, t0.c0, rt1.c3 FROM t0, rt0, rt1 LEFT OUTER JOIN v0 ON (((rt1.c1, t0.c2, rt1.c2)) BETWEEN ((CAST(NULL AS NUMERIC), NULL, '-670259479')) AND ((((t0.c2) BETWEEN (rt0.c4) AND (rt1.c3)), ((((((((t0.c1)AND(x'dcf8')))AND(rt0.c2)))AND(rt1.c1)))OR(rt1.c3)), ((((((((((((rt1.c3)OR(rt1.c0)))AND(v0.c0)))AND(rt0.c4)))AND(rt1.c2)))OR(t0.c0)))OR(''))))) WHERE (((CASE WHEN rt0.c3 THEN v0.c0 END)<=(t0.c2 COLLATE BINARY))) GROUP BY rt0.c4, rt1.c1, rt0.c0, rt0.c3, v0.c0, t0.c2, t0.c1, rt1.c0, t0.c0, rt1.c3 UNION SELECT rt0.c4, rt1.c1, rt0.c0, rt0.c3, v0.c0, t0.c2, t0.c1, rt1.c0, t0.c0, rt1.c3 FROM t0, rt0, rt1 LEFT OUTER JOIN v0 ON (((rt1.c1, t0.c2, rt1.c2)) BETWEEN ((CAST(NULL AS NUMERIC), NULL, '-670259479')) AND ((((t0.c2) BETWEEN (rt0.c4) AND (rt1.c3)), ((((((((t0.c1)AND(x'dcf8')))AND(rt0.c2)))AND(rt1.c1)))OR(rt1.c3)), ((((((((((((rt1.c3)OR(rt1.c0)))AND(v0.c0)))AND(rt0.c4)))AND(rt1.c2)))OR(t0.c0)))OR(''))))) WHERE ((NOT (((CASE WHEN rt0.c3 THEN v0.c0 END)<=(t0.c2 COLLATE BINARY))))) GROUP BY rt0.c4, rt1.c1, rt0.c0, rt0.c3, v0.c0, t0.c2, t0.c1, rt1.c0, t0.c0, rt1.c3 UNION SELECT rt0.c4, rt1.c1, rt0.c0, rt0.c3, v0.c0, t0.c2, t0.c1, rt1.c0, t0.c0, rt1.c3 FROM t0, rt0, rt1 LEFT OUTER JOIN v0 ON (((rt1.c1, t0.c2, rt1.c2)) BETWEEN ((CAST(NULL AS NUMERIC), NULL, '-670259479')) AND ((((t0.c2) BETWEEN (rt0.c4) AND (rt1.c3)), ((((((((t0.c1)AND(x'dcf8')))AND(rt0.c2)))AND(rt1.c1)))OR(rt1.c3)), ((((((((((((rt1.c3)OR(rt1.c0)))AND(v0.c0)))AND(rt0.c4)))AND(rt1.c2)))OR(t0.c0)))OR(''))))) WHERE (((((CASE WHEN rt0.c3 THEN v0.c0 END)<=(t0.c2 COLLATE BINARY))) ISNULL)) GROUP BY rt0.c4, rt1.c1, rt0.c0, rt0.c3, v0.c0, t0.c2, t0.c1, rt1.c0, t0.c0, rt1.c3;
SELECT rt0.c4, rt1.c1, rt0.c0, rt0.c3, v0.c0, t0.c2, t0.c1, rt1.c0, t0.c0, rt1.c3 FROM t0, rt0, rt1 LEFT OUTER JOIN v0 ON (((rt1.c1, t0.c2, rt1.c2)) BETWEEN ((CAST(NULL AS NUMERIC), NULL, '-670259479')) AND ((((t0.c2) BETWEEN (rt0.c4) AND (rt1.c3)), ((((((((t0.c1)AND(x'dcf8')))AND(rt0.c2)))AND(rt1.c1)))OR(rt1.c3)), ((((((((((((rt1.c3)OR(rt1.c0)))AND(v0.c0)))AND(rt0.c4)))AND(rt1.c2)))OR(t0.c0)))OR(''))))) GROUP BY rt0.c4, rt1.c1, rt0.c0, rt0.c3, v0.c0, t0.c2, t0.c1, rt1.c0, t0.c0, rt1.c3;
SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0;
SELECT t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0 HAVING AVG(t0.c0) UNION ALL SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0 HAVING (NOT (AVG(t0.c0))) UNION ALL SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0 HAVING ((AVG(t0.c0)) ISNULL);
SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0;
SELECT t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0 HAVING AVG(t0.c0) UNION ALL SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0 HAVING (NOT (AVG(t0.c0))) UNION ALL SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0 HAVING ((AVG(t0.c0)) ISNULL);
SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0;
SELECT * FROM rt0, t0, v0, rt1;
SELECT * FROM rt0, t0, v0, rt1 WHERE (((((rt0.c2) NOTNULL))==(CAST(rt1.c1 AS INTEGER)))) UNION ALL SELECT ALL * FROM rt0 NOT INDEXED, t0, v0, rt1 WHERE ((NOT (((((rt0.c2) NOTNULL))=(CAST(rt1.c1 AS INTEGER)))))) UNION ALL SELECT ALL * FROM rt0, t0, v0, rt1 WHERE (((((((rt0.c2) NOTNULL))==(CAST(rt1.c1 AS INTEGER)))) ISNULL));
SELECT * FROM rt0, t0, v0, rt1;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (((((((((rt1.c2)AND(CASE rt1.c0  WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c3 END)))AND(((rt1.c2)AND(rt1.c0)))))AND(((((rt1.c0)OR(rt1.c2)))OR(rt1.c3)))))AND(((((rt1.c1)OR(rt1.c0)))OR(rt1.c0))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (((((((((rt1.c2)AND(CASE rt1.c0  WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c3 END)))AND(((rt1.c2)AND(rt1.c0)))))AND(((((rt1.c0)OR(rt1.c2)))OR(rt1.c3)))))AND(((((rt1.c1)OR(rt1.c0)))OR(rt1.c0))))))) UNION SELECT DISTINCT * FROM rt1 WHERE (((((((((((rt1.c2)AND(CASE rt1.c0  WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c3 END)))AND(((rt1.c2)AND(rt1.c0)))))AND(((((rt1.c0)OR(rt1.c2)))OR(rt1.c3)))))AND(((((rt1.c1)OR(rt1.c0)))OR(rt1.c0))))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT t0.c0, rt0.c1, rt0.c3, t0.c1, rt0.c2 FROM t0, rt0 GROUP BY t0.c0, rt0.c1, rt0.c3, t0.c1, rt0.c2;
SELECT ALL t0.c0, rt0.c1, rt0.c3, t0.c1, rt0.c2 FROM t0, rt0 WHERE (CAST(((t0.c0)LIKE(t0.c1)) AS REAL)) GROUP BY t0.c0, rt0.c1, rt0.c3, t0.c1, rt0.c2 UNION SELECT ALL t0.c0, rt0.c1, rt0.c3, t0.c1, rt0.c2 FROM t0, rt0 WHERE ((NOT (CAST(((t0.c0)LIKE(t0.c1)) AS REAL)))) GROUP BY t0.c0, rt0.c1, rt0.c3, t0.c1, rt0.c2 UNION SELECT t0.c0, rt0.c1, rt0.c3, t0.c1, rt0.c2 FROM t0, rt0 WHERE (((CAST(((t0.c0)LIKE(t0.c1)) AS REAL)) ISNULL)) GROUP BY t0.c0, rt0.c1, rt0.c3, t0.c1, rt0.c2;
SELECT t0.c0, rt0.c1, rt0.c3, t0.c1, rt0.c2 FROM t0, rt0 GROUP BY t0.c0, rt0.c1, rt0.c3, t0.c1, rt0.c2;
SELECT ALL rt0.c3, t1.c0, t0.c2 FROM t0, rt1, rt0 RIGHT OUTER JOIN v0 ON CASE x'db19'  WHEN '1763018420' THEN CAST(rt1.c2 AS BLOB) END INNER JOIN t1 ON ((rt0.c2)GLOB(rt1.c3)) COLLATE RTRIM GROUP BY rt0.c3, t1.c0, t0.c2;
SELECT rt0.c3, t1.c0, t0.c2 FROM t0, rt1, rt0 RIGHT OUTER JOIN v0 ON CASE x'db19'  WHEN '1763018420' THEN CAST(rt1.c2 AS BLOB) END INNER JOIN t1 ON ((rt0.c2)GLOB(rt1.c3)) COLLATE RTRIM GROUP BY rt0.c3, t1.c0, t0.c2 HAVING TOTAL(COUNT(SUM(COUNT(MIN(rt0.c3))))) UNION ALL SELECT ALL rt0.c3, t1.c0, t0.c2 FROM t0, rt1, rt0 RIGHT OUTER JOIN v0 ON CASE x'db19'  WHEN '1763018420' THEN CAST(rt1.c2 AS BLOB) END INNER JOIN t1 ON ((rt0.c2)GLOB(rt1.c3)) COLLATE RTRIM GROUP BY rt0.c3, t1.c0, t0.c2 HAVING (NOT (TOTAL(COUNT(SUM(COUNT(MIN(rt0.c3))))))) UNION ALL SELECT ALL rt0.c3, t1.c0, t0.c2 FROM t0, rt1, rt0 RIGHT OUTER JOIN v0 ON CASE x'db19'  WHEN '1763018420' THEN CAST(rt1.c2 AS BLOB) END INNER JOIN t1 ON ((rt0.c2)GLOB(rt1.c3)) COLLATE RTRIM GROUP BY rt0.c3, t1.c0, t0.c2 HAVING ((TOTAL(COUNT(SUM(COUNT(MIN(rt0.c3)))))) ISNULL);
SELECT ALL * FROM v0, rt1, t1, t0;
SELECT * FROM v0, rt1, t1, t0 WHERE (t0.c0) UNION ALL SELECT ALL * FROM v0, rt1, t1, t0 WHERE ((NOT (t0.c0))) UNION ALL SELECT * FROM v0, rt1, t1, t0 WHERE (((t0.c0) ISNULL));
SELECT ALL * FROM v0, rt1, t1, t0;
SELECT DISTINCT t0.c1, v0.c0 FROM t0, v0, rt1;
SELECT DISTINCT t0.c1, v0.c0 FROM t0, v0, rt1 WHERE ((((((0.8971946394452615, rt1.c3, rt1.c0))>((t0.c0, t0.c0, rt1.c3))))AND(((rt1.c3) ISNULL)))) UNION SELECT DISTINCT t0.c1, v0.c0 FROM t0, v0, rt1 WHERE ((NOT ((((((0.8971946394452615, rt1.c3, rt1.c0))>((t0.c0, t0.c0, rt1.c3))))AND(((rt1.c3) ISNULL)))))) UNION SELECT DISTINCT t0.c1, v0.c0 FROM t0, v0, rt1 WHERE ((((((((0.8971946394452615, rt1.c3, rt1.c0))>((t0.c0, t0.c0, rt1.c3))))AND(((rt1.c3) ISNULL)))) ISNULL));
SELECT DISTINCT t0.c1, v0.c0 FROM t0, v0, rt1;
SELECT t0.c2, t0.c0 FROM rt1, rt0, t0, v0 LEFT OUTER JOIN t1 ON CASE WHEN x'' THEN ((rt1.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)) END GROUP BY t0.c2, t0.c0;
SELECT ALL t0.c2, t0.c0 FROM rt1, rt0, t0, v0 LEFT OUTER JOIN t1 ON CASE WHEN x'' THEN ((rt1.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)) END WHERE ((((t0.c0)) BETWEEN ((x'')) AND ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END)))) GROUP BY t0.c2, t0.c0 UNION SELECT t0.c2, t0.c0 FROM rt1, rt0, t0, v0 LEFT OUTER JOIN t1 ON CASE WHEN x'' THEN ((rt1.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)) END WHERE ((NOT ((((t0.c0)) BETWEEN ((x'')) AND ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END)))))) GROUP BY t0.c2, t0.c0 UNION SELECT t0.c2, t0.c0 FROM rt1, rt0, t0, v0 LEFT OUTER JOIN t1 ON CASE WHEN x'' THEN ((rt1.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)) END WHERE ((((((t0.c0)) BETWEEN ((x'')) AND ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END)))) ISNULL)) GROUP BY t0.c2, t0.c0;
SELECT t0.c2, t0.c0 FROM rt1, rt0, t0, v0 LEFT OUTER JOIN t1 ON CASE WHEN x'' THEN ((rt1.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)) END GROUP BY t0.c2, t0.c0;
SELECT ALL t0.c2 FROM v0, t1 RIGHT OUTER JOIN t0 ON ((((t0.c1)<>(t0.c1))) ISNULL) GROUP BY t0.c2;
SELECT t0.c2 FROM v0, t1 NOT INDEXED RIGHT OUTER JOIN t0 ON ((((t0.c1)!=(t0.c1))) ISNULL) GROUP BY t0.c2 HAVING COUNT(AVG(SUM(t0.c2))) UNION ALL SELECT t0.c2 FROM v0, t1 RIGHT OUTER JOIN t0 ON ((((t0.c1)<>(t0.c1))) ISNULL) GROUP BY t0.c2 HAVING (NOT (COUNT(AVG(SUM(t0.c2))))) UNION ALL SELECT ALL t0.c2 FROM v0 NOT INDEXED, t1 RIGHT OUTER JOIN t0 ON ((((t0.c1)!=(t0.c1))) ISNULL) GROUP BY t0.c2 HAVING ((COUNT(AVG(SUM(t0.c2)))) ISNULL);
SELECT MAX(((((rt0.c3)GLOB(rt0.c2)))>((- (NULL))))) FROM rt0;
SELECT rt0.c0, rt0.c3, v0.c0 FROM v0, t1, rt0;
SELECT rt0.c0, rt0.c3, v0.c0 FROM v0, t1, rt0 WHERE (rt0.c0) UNION ALL SELECT ALL rt0.c0, rt0.c3, v0.c0 FROM v0, t1, rt0 WHERE ((NOT (rt0.c0))) UNION ALL SELECT ALL rt0.c0, rt0.c3, v0.c0 FROM v0, t1, rt0 WHERE (((rt0.c0) ISNULL));
SELECT rt0.c0, rt0.c3, v0.c0 FROM v0, t1, rt0;
SELECT DISTINCT rt0.c4, t1.c0, t0.c2, rt0.c3 FROM rt0, t1 FULL OUTER JOIN t0 ON (NOT ((((rt0.c4))>=((rt0.c3)))));
SELECT DISTINCT rt0.c4, t1.c0, t0.c2, rt0.c3 FROM rt0, t1 FULL OUTER JOIN t0 ON (NOT ((((rt0.c4))>=((rt0.c3))))) WHERE (0Xffffffffb95309ad) UNION SELECT DISTINCT rt0.c4, t1.c0, t0.c2, rt0.c3 FROM rt0, t1 FULL OUTER JOIN t0 ON (NOT ((((rt0.c4))>=((rt0.c3))))) WHERE ((NOT (0Xffffffffb95309ad))) UNION SELECT DISTINCT rt0.c4, t1.c0, t0.c2, rt0.c3 FROM rt0, t1 FULL OUTER JOIN t0 ON (NOT ((((rt0.c4))>=((rt0.c3))))) WHERE (((0xffffffffb95309ad) ISNULL));
SELECT DISTINCT rt0.c4, t1.c0, t0.c2, rt0.c3 FROM rt0, t1 FULL OUTER JOIN t0 ON (NOT ((((rt0.c4))>=((rt0.c3)))));
SELECT v0.c0, rt1.c2 FROM v0 CROSS JOIN rt1 ON ((((x'' IN ())))<((((((rt1.c3)OR(rt1.c2)))AND(692310200))))) GROUP BY v0.c0, rt1.c2;
SELECT ALL v0.c0, rt1.c2 FROM v0 CROSS JOIN rt1 ON ((((x'' IN ())))<((((((rt1.c3)OR(rt1.c2)))AND(692310200))))) WHERE (((((((rt1.c1)AND(rt1.c1)))AND(rt1.c0)))AND(((rt1.c1) NOT BETWEEN (rt1.c0) AND (v0.c0))))) GROUP BY v0.c0, rt1.c2 UNION SELECT ALL v0.c0, rt1.c2 FROM v0 CROSS JOIN rt1 ON ((((x'' IN ())))<((((((rt1.c3)OR(rt1.c2)))AND(692310200))))) WHERE ((NOT (((((((rt1.c1)AND(rt1.c1)))AND(rt1.c0)))AND(((rt1.c1) NOT BETWEEN (rt1.c0) AND (v0.c0))))))) GROUP BY v0.c0, rt1.c2 UNION SELECT v0.c0, rt1.c2 FROM v0 CROSS JOIN rt1 ON ((((x'' IN ())))<((((((rt1.c3)OR(rt1.c2)))AND(692310200))))) WHERE (((((((((rt1.c1)AND(rt1.c1)))AND(rt1.c0)))AND(((rt1.c1) NOT BETWEEN (rt1.c0) AND (v0.c0))))) ISNULL)) GROUP BY v0.c0, rt1.c2;
SELECT v0.c0, rt1.c2 FROM v0 CROSS JOIN rt1 ON ((((x'' IN ())))<((((((rt1.c3)OR(rt1.c2)))AND(692310200))))) GROUP BY v0.c0, rt1.c2;
SELECT t1.c0, rt0.c2, t0.c2, rt0.c0, v0.c0 FROM rt0, t1, v0, t0 GROUP BY t1.c0, rt0.c2, t0.c2, rt0.c0, v0.c0;
SELECT t1.c0, rt0.c2, t0.c2, rt0.c0, v0.c0 FROM rt0, t1, v0, t0 GROUP BY t1.c0, rt0.c2, t0.c2, rt0.c0, v0.c0 HAVING (((((TOTAL(SUM(MAX(MAX(rt0.c3)))), MAX(rt0.c1), COUNT(*), COUNT(TOTAL(t0.c1)), v0.c0))<((COUNT(*), AVG(rt0.c1), rt0.c1, t0.c2, t0.c1)))) NOT BETWEEN (MIN(t1.c0, rt0.c0)) AND (MIN(TOTAL(AVG(rt0.c0))))) UNION ALL SELECT ALL t1.c0, rt0.c2, t0.c2, rt0.c0, v0.c0 FROM rt0, t1, v0, t0 GROUP BY t1.c0, rt0.c2, t0.c2, rt0.c0, v0.c0 HAVING (NOT ((((((TOTAL(SUM(MAX(MAX(rt0.c3)))), MAX(rt0.c1), COUNT(*), COUNT(TOTAL(t0.c1)), v0.c0))<((COUNT(*), AVG(rt0.c1), rt0.c1, t0.c2, t0.c1)))) NOT BETWEEN (MIN(t1.c0, rt0.c0)) AND (MIN(TOTAL(AVG(rt0.c0))))))) UNION ALL SELECT ALL t1.c0, rt0.c2, t0.c2, rt0.c0, v0.c0 FROM rt0, t1, v0, t0 GROUP BY t1.c0, rt0.c2, t0.c2, rt0.c0, v0.c0 HAVING (((((((TOTAL(SUM(MAX(MAX(rt0.c3)))), MAX(rt0.c1), COUNT(*), COUNT(TOTAL(t0.c1)), v0.c0))<((COUNT(*), AVG(rt0.c1), rt0.c1, t0.c2, t0.c1)))) NOT BETWEEN (MIN(t1.c0, rt0.c0)) AND (MIN(TOTAL(AVG(rt0.c0)))))) ISNULL);
SELECT ALL rt1.c0, t1.c0, t0.c2, t0.c1, rt0.c3, rt0.c4, v0.c0 FROM rt1, t0, t1, v0, rt0;
SELECT rt1.c0, t1.c0, t0.c2, t0.c1, rt0.c3, rt0.c4, v0.c0 FROM rt1, t0, t1, v0, rt0 WHERE (t0.c0) UNION ALL SELECT rt1.c0, t1.c0, t0.c2, t0.c1, rt0.c3, rt0.c4, v0.c0 FROM rt1, t0, t1, v0, rt0 WHERE ((NOT (t0.c0))) UNION ALL SELECT rt1.c0, t1.c0, t0.c2, t0.c1, rt0.c3, rt0.c4, v0.c0 FROM rt1, t0, t1, v0, rt0 WHERE (((t0.c0) ISNULL));
SELECT ALL rt1.c0, t1.c0, t0.c2, t0.c1, rt0.c3, rt0.c4, v0.c0 FROM rt1, t0, t1, v0, rt0;
SELECT DISTINCT * FROM rt0, t1;
SELECT DISTINCT * FROM rt0, t1 WHERE (rt0.c0) UNION SELECT DISTINCT * FROM rt0, t1 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT * FROM rt0, t1 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT * FROM rt0, t1;
SELECT ALL rt1.c1, rt0.c1, rt0.c4, rt1.c3, rt0.c2, rt1.c2, rt0.c3, rt1.c0 FROM rt0 FULL OUTER JOIN rt1 ON (((+ (x'8788')))IS(LIKELY(rt1.c2))) GROUP BY rt1.c1, rt0.c1, rt0.c4, rt1.c3, rt0.c2, rt1.c2, rt0.c3, rt1.c0;
SELECT ALL rt1.c1, rt0.c1, rt0.c4, rt1.c3, rt0.c2, rt1.c2, rt0.c3, rt1.c0 FROM rt0 FULL OUTER JOIN rt1 ON (((+ (x'8788')))IS(LIKELY(rt1.c2))) WHERE (CASE WHEN ((rt0.c3)AND(rt1.c0)) THEN rt0.c3 COLLATE BINARY WHEN UPPER(rt0.c1) THEN rt0.c2 COLLATE BINARY WHEN (NOT (NULL)) THEN CAST(0.7675888863676918 AS NUMERIC) ELSE (((rt1.c3, rt0.c4, rt0.c2)) BETWEEN ((rt0.c3, rt1.c1, rt0.c3)) AND ((rt1.c1, rt0.c0, rt1.c0))) END) GROUP BY rt1.c1, rt0.c1, rt0.c4, rt1.c3, rt0.c2, rt1.c2, rt0.c3, rt1.c0 UNION SELECT rt1.c1, rt0.c1, rt0.c4, rt1.c3, rt0.c2, rt1.c2, rt0.c3, rt1.c0 FROM rt0 FULL OUTER JOIN rt1 ON (((+ (x'8788')))IS(LIKELY(rt1.c2))) WHERE ((NOT (CASE WHEN ((rt0.c3)AND(rt1.c0)) THEN rt0.c3 COLLATE BINARY WHEN UPPER(rt0.c1) THEN rt0.c2 COLLATE BINARY WHEN (NOT (NULL)) THEN CAST(0.7675888863676918 AS NUMERIC) ELSE (((rt1.c3, rt0.c4, rt0.c2)) BETWEEN ((rt0.c3, rt1.c1, rt0.c3)) AND ((rt1.c1, rt0.c0, rt1.c0))) END))) GROUP BY rt1.c1, rt0.c1, rt0.c4, rt1.c3, rt0.c2, rt1.c2, rt0.c3, rt1.c0 UNION SELECT ALL rt1.c1, rt0.c1, rt0.c4, rt1.c3, rt0.c2, rt1.c2, rt0.c3, rt1.c0 FROM rt0 FULL OUTER JOIN rt1 ON (((+ (x'8788')))IS(LIKELY(rt1.c2))) WHERE (((CASE WHEN ((rt0.c3)AND(rt1.c0)) THEN rt0.c3 COLLATE BINARY WHEN UPPER(rt0.c1) THEN rt0.c2 COLLATE BINARY WHEN (NOT (NULL)) THEN CAST(0.7675888863676918 AS NUMERIC) ELSE (((rt1.c3, rt0.c4, rt0.c2)) BETWEEN ((rt0.c3, rt1.c1, rt0.c3)) AND ((rt1.c1, rt0.c0, rt1.c0))) END) ISNULL)) GROUP BY rt1.c1, rt0.c1, rt0.c4, rt1.c3, rt0.c2, rt1.c2, rt0.c3, rt1.c0;
SELECT ALL rt1.c1, rt0.c1, rt0.c4, rt1.c3, rt0.c2, rt1.c2, rt0.c3, rt1.c0 FROM rt0 FULL OUTER JOIN rt1 ON (((+ (x'8788')))IS(LIKELY(rt1.c2))) GROUP BY rt1.c1, rt0.c1, rt0.c4, rt1.c3, rt0.c2, rt1.c2, rt0.c3, rt1.c0;
SELECT ALL rt0.c2, t0.c0 FROM t0, v0, rt0 LEFT OUTER JOIN t1 ON 0.7436570110789577 RIGHT OUTER JOIN rt1 ON rt1.c1 GROUP BY rt0.c2, t0.c0;
SELECT rt0.c2, t0.c0 FROM t0, v0, rt0 LEFT OUTER JOIN t1 ON 0.7436570110789577 RIGHT OUTER JOIN rt1 ON rt1.c1 GROUP BY rt0.c2, t0.c0 HAVING TOTAL(GROUP_CONCAT(TOTAL(GROUP_CONCAT(AVG(rt0.c0))))) UNION ALL SELECT rt0.c2, t0.c0 FROM t0, v0, rt0 LEFT OUTER JOIN t1 ON 0.7436570110789577 RIGHT OUTER JOIN rt1 ON rt1.c1 GROUP BY rt0.c2, t0.c0 HAVING (NOT (TOTAL(GROUP_CONCAT(TOTAL(GROUP_CONCAT(AVG(rt0.c0))))))) UNION ALL SELECT ALL rt0.c2, t0.c0 FROM t0, v0, rt0 LEFT OUTER JOIN t1 ON 0.7436570110789577 RIGHT OUTER JOIN rt1 ON rt1.c1 GROUP BY rt0.c2, t0.c0 HAVING ((TOTAL(GROUP_CONCAT(TOTAL(GROUP_CONCAT(AVG(rt0.c0)))))) ISNULL);
SELECT * FROM v0, t0, t1, rt0;
SELECT ALL * FROM v0, t0, t1 NOT INDEXED, rt0 WHERE (((((v0.c0)OR(SUBSTR(t0.c2, t0.c2))))OR(SQLITE_VERSION()))) UNION ALL SELECT ALL * FROM v0, t0, t1, rt0 WHERE ((NOT (((((v0.c0)OR(SUBSTR(t0.c2, t0.c2))))OR(SQLITE_VERSION()))))) UNION ALL SELECT ALL * FROM v0, t0, t1, rt0 WHERE (((((((v0.c0)OR(SUBSTR(t0.c2, t0.c2))))OR(SQLITE_VERSION()))) ISNULL));
SELECT * FROM v0, t0, t1, rt0;
SELECT DISTINCT t0.c0, t0.c2, rt0.c1, rt0.c0, rt0.c2, rt1.c2, t1.c0, rt1.c0, rt0.c3, v0.c0, rt0.c4, rt1.c1, t0.c1 FROM rt1, t0, v0, t1, rt0;
SELECT DISTINCT t0.c0, t0.c2, rt0.c1, rt0.c0, rt0.c2, rt1.c2, t1.c0, rt1.c0, rt0.c3, v0.c0, rt0.c4, rt1.c1, t0.c1 FROM rt1, t0, v0, t1, rt0 WHERE ((+ ((- (rt1.c0))))) UNION SELECT DISTINCT t0.c0, t0.c2, rt0.c1, rt0.c0, rt0.c2, rt1.c2, t1.c0, rt1.c0, rt0.c3, v0.c0, rt0.c4, rt1.c1, t0.c1 FROM rt1, t0, v0, t1, rt0 WHERE ((NOT ((+ ((- (rt1.c0))))))) UNION SELECT DISTINCT t0.c0, t0.c2, rt0.c1, rt0.c0, rt0.c2, rt1.c2, t1.c0, rt1.c0, rt0.c3, v0.c0, rt0.c4, rt1.c1, t0.c1 FROM rt1, t0, v0, t1, rt0 WHERE ((((+ ((- (rt1.c0))))) ISNULL));
SELECT DISTINCT t0.c0, t0.c2, rt0.c1, rt0.c0, rt0.c2, rt1.c2, t1.c0, rt1.c0, rt0.c3, v0.c0, rt0.c4, rt1.c1, t0.c1 FROM rt1, t0, v0, t1, rt0;
SELECT ALL t1.c0, rt1.c3, t0.c0, rt0.c1, t0.c2, rt0.c4, rt0.c2 FROM t0, t1 CROSS JOIN rt0 ON CASE WHEN ((rt0.c2) NOT BETWEEN (t0.c2) AND (t0.c1)) THEN CASE t0.c0  WHEN rt0.c4 THEN rt0.c4 ELSE rt1.c2 END END CROSS JOIN rt1 ON UNLIKELY(DISTINCT rt0.c0) COLLATE RTRIM GROUP BY t1.c0, rt1.c3, t0.c0, rt0.c1, t0.c2, rt0.c4, rt0.c2;
SELECT t1.c0, rt1.c3, t0.c0, rt0.c1, t0.c2, rt0.c4, rt0.c2 FROM t0, t1 CROSS JOIN rt0 ON CASE WHEN ((rt0.c2) NOT BETWEEN (t0.c2) AND (t0.c1)) THEN CASE t0.c0  WHEN rt0.c4 THEN rt0.c4 ELSE rt1.c2 END END CROSS JOIN rt1 ON UNLIKELY(DISTINCT rt0.c0) COLLATE RTRIM WHERE (((((rt0.c0)/(rt0.c4)))%((((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((rt0.c2)))))) GROUP BY t1.c0, rt1.c3, t0.c0, rt0.c1, t0.c2, rt0.c4, rt0.c2 UNION SELECT t1.c0, rt1.c3, t0.c0, rt0.c1, t0.c2, rt0.c4, rt0.c2 FROM t0, t1 CROSS JOIN rt0 ON CASE WHEN ((rt0.c2) NOT BETWEEN (t0.c2) AND (t0.c1)) THEN CASE t0.c0  WHEN rt0.c4 THEN rt0.c4 ELSE rt1.c2 END END CROSS JOIN rt1 ON UNLIKELY(DISTINCT rt0.c0) COLLATE RTRIM WHERE ((NOT (((((rt0.c0)/(rt0.c4)))%((((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((rt0.c2)))))))) GROUP BY t1.c0, rt1.c3, t0.c0, rt0.c1, t0.c2, rt0.c4, rt0.c2 UNION SELECT ALL t1.c0, rt1.c3, t0.c0, rt0.c1, t0.c2, rt0.c4, rt0.c2 FROM t0, t1 CROSS JOIN rt0 ON CASE WHEN ((rt0.c2) NOT BETWEEN (t0.c2) AND (t0.c1)) THEN CASE t0.c0  WHEN rt0.c4 THEN rt0.c4 ELSE rt1.c2 END END CROSS JOIN rt1 ON UNLIKELY(DISTINCT rt0.c0) COLLATE RTRIM WHERE (((((((rt0.c0)/(rt0.c4)))%((((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((rt0.c2)))))) ISNULL)) GROUP BY t1.c0, rt1.c3, t0.c0, rt0.c1, t0.c2, rt0.c4, rt0.c2;
SELECT ALL t1.c0, rt1.c3, t0.c0, rt0.c1, t0.c2, rt0.c4, rt0.c2 FROM t0, t1 CROSS JOIN rt0 ON CASE WHEN ((rt0.c2) NOT BETWEEN (t0.c2) AND (t0.c1)) THEN CASE t0.c0  WHEN rt0.c4 THEN rt0.c4 ELSE rt1.c2 END END CROSS JOIN rt1 ON UNLIKELY(DISTINCT rt0.c0) COLLATE RTRIM GROUP BY t1.c0, rt1.c3, t0.c0, rt0.c1, t0.c2, rt0.c4, rt0.c2;
SELECT rt0.c4, rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c4, rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c0 HAVING ((CAST(COUNT(rt0.c2) AS INTEGER))<<(rt0.c3)) UNION ALL SELECT rt0.c4, rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (((CAST(COUNT(rt0.c2) AS INTEGER))<<(rt0.c3)))) UNION ALL SELECT rt0.c4, rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c0 HAVING ((((CAST(COUNT(rt0.c2) AS INTEGER))<<(rt0.c3))) ISNULL);
SELECT rt0.c4, rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c4, rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c0 HAVING ((CAST(COUNT(rt0.c2) AS INTEGER))<<(rt0.c3)) UNION ALL SELECT rt0.c4, rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (((CAST(COUNT(rt0.c2) AS INTEGER))<<(rt0.c3)))) UNION ALL SELECT rt0.c4, rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c0 HAVING ((((CAST(COUNT(rt0.c2) AS INTEGER))<<(rt0.c3))) ISNULL);
SELECT rt0.c4, rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c0;
SELECT t0.c0, rt0.c0, rt0.c2, t0.c2, rt0.c4, v0.c0, rt0.c3, t0.c1, rt0.c1 FROM rt0, v0 CROSS JOIN t0 ON ((CASE WHEN t0.c0 THEN t0.c0 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c4 THEN t0.c1 ELSE v0.c0 END)||(v0.c0 COLLATE NOCASE));
SELECT t0.c0, rt0.c0, rt0.c2, t0.c2, rt0.c4, v0.c0, rt0.c3, t0.c1, rt0.c1 FROM rt0, v0 CROSS JOIN t0 ON ((CASE WHEN t0.c0 THEN t0.c0 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c4 THEN t0.c1 ELSE v0.c0 END)||(v0.c0 COLLATE NOCASE)) WHERE ((((~ (rt0.c4))) ISNULL)) ORDER BY ((((x'') BETWEEN (rt0.c1) AND (rt0.c1)))>>((('&)i(W}') NOT NULL))) DESC  NULLS LAST, rt0.c4 DESC  NULLS LAST;
SELECT ALL t0.c0, rt0.c0, rt0.c2, t0.c2, rt0.c4, v0.c0, rt0.c3, t0.c1, rt0.c1 FROM rt0, v0 CROSS JOIN t0 ON ((CASE WHEN t0.c0 THEN t0.c0 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c4 THEN t0.c1 ELSE v0.c0 END)||(v0.c0 COLLATE NOCASE)) WHERE ((NOT ((((~ (rt0.c4))) ISNULL)))) ORDER BY ((((x'') BETWEEN (rt0.c1) AND (rt0.c1)))>>((('&)i(W}') NOT NULL))) DESC  NULLS LAST, rt0.c4 DESC  NULLS LAST;
SELECT t0.c0, rt0.c0, rt0.c2, t0.c2, rt0.c4, v0.c0, rt0.c3, t0.c1, rt0.c1 FROM rt0, v0 CROSS JOIN t0 ON ((CASE WHEN t0.c0 THEN t0.c0 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c4 THEN t0.c1 ELSE v0.c0 END)||(v0.c0 COLLATE NOCASE)) WHERE ((((((~ (rt0.c4))) ISNULL)) ISNULL)) ORDER BY ((((x'') BETWEEN (rt0.c1) AND (rt0.c1)))>>((('&)i(W}') NOT NULL))) DESC  NULLS LAST, rt0.c4 DESC  NULLS LAST;
SELECT t0.c0, rt0.c0, rt0.c2, t0.c2, rt0.c4, v0.c0, rt0.c3, t0.c1, rt0.c1 FROM rt0, v0 CROSS JOIN t0 ON ((CASE WHEN t0.c0 THEN t0.c0 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c4 THEN t0.c1 ELSE v0.c0 END)||(v0.c0 COLLATE NOCASE));
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (t1.c0) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (t1.c0))) UNION SELECT DISTINCT * FROM t1 WHERE (((t1.c0) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT ALL v0.c0, t0.c1 FROM rt1, t1, rt0, v0, t0 GROUP BY v0.c0, t0.c1;
SELECT ALL v0.c0, t0.c1 FROM rt1, t1, rt0, v0, t0 WHERE (CAST((rt0.c1 IN (rt0.c4, rt1.c1)) AS NUMERIC)) GROUP BY v0.c0, t0.c1 UNION SELECT v0.c0, t0.c1 FROM rt1, t1, rt0, v0, t0 WHERE ((NOT (CAST((rt0.c1 IN (rt0.c4, rt1.c1)) AS NUMERIC)))) GROUP BY v0.c0, t0.c1 UNION SELECT ALL v0.c0, t0.c1 FROM rt1, t1, rt0, v0, t0 WHERE (((CAST((rt0.c1 IN (rt0.c4, rt1.c1)) AS NUMERIC)) ISNULL)) GROUP BY v0.c0, t0.c1;
SELECT ALL v0.c0, t0.c1 FROM rt1, t1, rt0, v0, t0 GROUP BY v0.c0, t0.c1;
SELECT t0.c1, t0.c0, rt0.c3, rt0.c2, rt0.c1, t0.c2, t1.c0, rt0.c0, v0.c0 FROM t0, rt0 FULL OUTER JOIN v0 ON (NOT (rt0.c4)) COLLATE BINARY CROSS JOIN t1 ON CAST((0.5740459812548898 IN ()) AS NUMERIC) GROUP BY t0.c1, t0.c0, rt0.c3, rt0.c2, rt0.c1, t0.c2, t1.c0, rt0.c0, v0.c0;
SELECT t0.c1, t0.c0, rt0.c3, rt0.c2, rt0.c1, t0.c2, t1.c0, rt0.c0, v0.c0 FROM t0, rt0 FULL OUTER JOIN v0 ON (NOT (rt0.c4)) COLLATE BINARY CROSS JOIN t1 ON CAST((0.5740459812548898 IN ()) AS NUMERIC) GROUP BY t0.c1, t0.c0, rt0.c3, rt0.c2, rt0.c1, t0.c2, t1.c0, rt0.c0, v0.c0 HAVING ((CASE SUM(t0.c2)  WHEN COUNT(*) THEN rt0.c0 END)+(COUNT(v0.c0))) UNION ALL SELECT ALL t0.c1, t0.c0, rt0.c3, rt0.c2, rt0.c1, t0.c2, t1.c0, rt0.c0, v0.c0 FROM t0, rt0 FULL OUTER JOIN v0 ON (NOT (rt0.c4)) COLLATE BINARY CROSS JOIN t1 ON CAST((0.5740459812548898 IN ()) AS NUMERIC) GROUP BY t0.c1, t0.c0, rt0.c3, rt0.c2, rt0.c1, t0.c2, t1.c0, rt0.c0, v0.c0 HAVING (NOT (((CASE SUM(t0.c2)  WHEN COUNT(*) THEN rt0.c0 END)+(COUNT(v0.c0))))) UNION ALL SELECT ALL t0.c1, t0.c0, rt0.c3, rt0.c2, rt0.c1, t0.c2, t1.c0, rt0.c0, v0.c0 FROM t0, rt0 FULL OUTER JOIN v0 ON (NOT (rt0.c4)) COLLATE BINARY CROSS JOIN t1 ON CAST((0.5740459812548898 IN ()) AS NUMERIC) GROUP BY t0.c1, t0.c0, rt0.c3, rt0.c2, rt0.c1, t0.c2, t1.c0, rt0.c0, v0.c0 HAVING ((((CASE SUM(t0.c2)  WHEN COUNT(*) THEN rt0.c0 END)+(COUNT(v0.c0)))) ISNULL);
SELECT t0.c1, t0.c0, rt0.c3, rt0.c2, rt0.c1, t0.c2, t1.c0, rt0.c0, v0.c0 FROM t0, rt0 FULL OUTER JOIN v0 ON (NOT (rt0.c4)) COLLATE BINARY CROSS JOIN t1 ON CAST((0.5740459812548898 IN ()) AS NUMERIC) GROUP BY t0.c1, t0.c0, rt0.c3, rt0.c2, rt0.c1, t0.c2, t1.c0, rt0.c0, v0.c0;
SELECT t0.c1, t0.c0, rt0.c3, rt0.c2, rt0.c1, t0.c2, t1.c0, rt0.c0, v0.c0 FROM t0, rt0 FULL OUTER JOIN v0 ON (NOT (rt0.c4)) COLLATE BINARY CROSS JOIN t1 ON CAST((0.5740459812548898 IN ()) AS NUMERIC) GROUP BY t0.c1, t0.c0, rt0.c3, rt0.c2, rt0.c1, t0.c2, t1.c0, rt0.c0, v0.c0 HAVING ((CASE SUM(t0.c2)  WHEN COUNT(*) THEN rt0.c0 END)+(COUNT(v0.c0))) UNION ALL SELECT ALL t0.c1, t0.c0, rt0.c3, rt0.c2, rt0.c1, t0.c2, t1.c0, rt0.c0, v0.c0 FROM t0, rt0 FULL OUTER JOIN v0 ON (NOT (rt0.c4)) COLLATE BINARY CROSS JOIN t1 ON CAST((0.5740459812548898 IN ()) AS NUMERIC) GROUP BY t0.c1, t0.c0, rt0.c3, rt0.c2, rt0.c1, t0.c2, t1.c0, rt0.c0, v0.c0 HAVING (NOT (((CASE SUM(t0.c2)  WHEN COUNT(*) THEN rt0.c0 END)+(COUNT(v0.c0))))) UNION ALL SELECT ALL t0.c1, t0.c0, rt0.c3, rt0.c2, rt0.c1, t0.c2, t1.c0, rt0.c0, v0.c0 FROM t0, rt0 FULL OUTER JOIN v0 ON (NOT (rt0.c4)) COLLATE BINARY CROSS JOIN t1 ON CAST((0.5740459812548898 IN ()) AS NUMERIC) GROUP BY t0.c1, t0.c0, rt0.c3, rt0.c2, rt0.c1, t0.c2, t1.c0, rt0.c0, v0.c0 HAVING ((((CASE SUM(t0.c2)  WHEN COUNT(*) THEN rt0.c0 END)+(COUNT(v0.c0)))) ISNULL);
SELECT t0.c1, t0.c0, rt0.c3, rt0.c2, rt0.c1, t0.c2, t1.c0, rt0.c0, v0.c0 FROM t0, rt0 FULL OUTER JOIN v0 ON (NOT (rt0.c4)) COLLATE BINARY CROSS JOIN t1 ON CAST((0.5740459812548898 IN ()) AS NUMERIC) GROUP BY t0.c1, t0.c0, rt0.c3, rt0.c2, rt0.c1, t0.c2, t1.c0, rt0.c0, v0.c0;
SELECT ALL * FROM rt0, t1, v0, rt1 LEFT OUTER JOIN t0 ON ((CAST(rt0.c0 AS REAL)) NOTNULL);
SELECT ALL * FROM rt0, t1, v0, rt1 LEFT OUTER JOIN t0 ON ((CAST(rt0.c0 AS REAL)) NOTNULL) WHERE ((t0.c1 IN ())) UNION ALL SELECT ALL * FROM rt0, t1, v0, rt1 LEFT OUTER JOIN t0 ON ((CAST(rt0.c0 AS REAL)) NOTNULL) WHERE ((NOT ((t0.c1 IN ())))) UNION ALL SELECT * FROM rt0, t1, v0, rt1 LEFT OUTER JOIN t0 ON ((CAST(rt0.c0 AS REAL)) NOTNULL) WHERE ((((t0.c1 IN ())) ISNULL));
SELECT ALL * FROM rt0, t1, v0, rt1 LEFT OUTER JOIN t0 ON ((CAST(rt0.c0 AS REAL)) NOTNULL);
SELECT DISTINCT * FROM t0, t1, rt1, v0;
SELECT DISTINCT * FROM t0, t1, rt1, v0 WHERE ((~ ((((t1.c0, v0.c0, t1.c0, v0.c0, t1.c0))=((t1.c0, t0.c2, t0.c0, t0.c0, rt1.c3)))))) UNION SELECT DISTINCT * FROM t0, t1, rt1, v0 WHERE ((NOT ((~ ((((t1.c0, v0.c0, t1.c0, v0.c0, t1.c0))==((t1.c0, t0.c2, t0.c0, t0.c0, rt1.c3)))))))) UNION SELECT DISTINCT * FROM t0, t1, rt1, v0 WHERE ((((~ ((((t1.c0, v0.c0, t1.c0, v0.c0, t1.c0))=((t1.c0, t0.c2, t0.c0, t0.c0, rt1.c3)))))) ISNULL));
SELECT DISTINCT * FROM t0, t1, rt1, v0;
SELECT ALL t0.c2, rt0.c2, rt1.c1, rt0.c1, rt1.c3, rt1.c0, rt0.c0, t0.c0, t1.c0, rt0.c3 FROM rt1, t0, t1, rt0 GROUP BY t0.c2, rt0.c2, rt1.c1, rt0.c1, rt1.c3, rt1.c0, rt0.c0, t0.c0, t1.c0, rt0.c3;
SELECT ALL t0.c2, rt0.c2, rt1.c1, rt0.c1, rt1.c3, rt1.c0, rt0.c0, t0.c0, t1.c0, rt0.c3 FROM rt1, t0, t1, rt0 WHERE ((CAST(t0.c2 AS BLOB) IN ())) GROUP BY t0.c2, rt0.c2, rt1.c1, rt0.c1, rt1.c3, rt1.c0, rt0.c0, t0.c0, t1.c0, rt0.c3 UNION SELECT ALL t0.c2, rt0.c2, rt1.c1, rt0.c1, rt1.c3, rt1.c0, rt0.c0, t0.c0, t1.c0, rt0.c3 FROM rt1, t0, t1, rt0 WHERE ((NOT ((CAST(t0.c2 AS BLOB) IN ())))) GROUP BY t0.c2, rt0.c2, rt1.c1, rt0.c1, rt1.c3, rt1.c0, rt0.c0, t0.c0, t1.c0, rt0.c3 UNION SELECT ALL t0.c2, rt0.c2, rt1.c1, rt0.c1, rt1.c3, rt1.c0, rt0.c0, t0.c0, t1.c0, rt0.c3 FROM rt1, t0, t1, rt0 WHERE ((((CAST(t0.c2 AS BLOB) IN ())) ISNULL)) GROUP BY t0.c2, rt0.c2, rt1.c1, rt0.c1, rt1.c3, rt1.c0, rt0.c0, t0.c0, t1.c0, rt0.c3;
SELECT ALL t0.c2, rt0.c2, rt1.c1, rt0.c1, rt1.c3, rt1.c0, rt0.c0, t0.c0, t1.c0, rt0.c3 FROM rt1, t0, t1, rt0 GROUP BY t0.c2, rt0.c2, rt1.c1, rt0.c1, rt1.c3, rt1.c0, rt0.c0, t0.c0, t1.c0, rt0.c3;
SELECT ALL rt0.c4, v0.c0, t0.c0, rt1.c0, rt0.c1, t0.c1, rt0.c3, rt1.c3, t0.c2, rt1.c2, rt1.c1, rt0.c0, rt0.c2 FROM rt0, rt1, t0, v0 GROUP BY rt0.c4, v0.c0, t0.c0, rt1.c0, rt0.c1, t0.c1, rt0.c3, rt1.c3, t0.c2, rt1.c2, rt1.c1, rt0.c0, rt0.c2;
SELECT rt0.c4, v0.c0, t0.c0, rt1.c0, rt0.c1, t0.c1, rt0.c3, rt1.c3, t0.c2, rt1.c2, rt1.c1, rt0.c0, rt0.c2 FROM rt0, rt1, t0, v0 GROUP BY rt0.c4, v0.c0, t0.c0, rt1.c0, rt0.c1, t0.c1, rt0.c3, rt1.c3, t0.c2, rt1.c2, rt1.c1, rt0.c0, rt0.c2 HAVING ((((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt0.c4)))<<(MAX(t0.c1))) UNION ALL SELECT ALL rt0.c4, v0.c0, t0.c0, rt1.c0, rt0.c1, t0.c1, rt0.c3, rt1.c3, t0.c2, rt1.c2, rt1.c1, rt0.c0, rt0.c2 FROM rt0, rt1, t0, v0 GROUP BY rt0.c4, v0.c0, t0.c0, rt1.c0, rt0.c1, t0.c1, rt0.c3, rt1.c3, t0.c2, rt1.c2, rt1.c1, rt0.c0, rt0.c2 HAVING (NOT (((((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt0.c4)))<<(MAX(t0.c1))))) UNION ALL SELECT rt0.c4, v0.c0, t0.c0, rt1.c0, rt0.c1, t0.c1, rt0.c3, rt1.c3, t0.c2, rt1.c2, rt1.c1, rt0.c0, rt0.c2 FROM rt0, rt1, t0, v0 GROUP BY rt0.c4, v0.c0, t0.c0, rt1.c0, rt0.c1, t0.c1, rt0.c3, rt1.c3, t0.c2, rt1.c2, rt1.c1, rt0.c0, rt0.c2 HAVING ((((((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt0.c4)))<<(MAX(t0.c1)))) ISNULL);
SELECT ALL rt0.c4, v0.c0, t0.c0, rt1.c0, rt0.c1, t0.c1, rt0.c3, rt1.c3, t0.c2, rt1.c2, rt1.c1, rt0.c0, rt0.c2 FROM rt0, rt1, t0, v0 GROUP BY rt0.c4, v0.c0, t0.c0, rt1.c0, rt0.c1, t0.c1, rt0.c3, rt1.c3, t0.c2, rt1.c2, rt1.c1, rt0.c0, rt0.c2;
SELECT rt0.c4, v0.c0, t0.c0, rt1.c0, rt0.c1, t0.c1, rt0.c3, rt1.c3, t0.c2, rt1.c2, rt1.c1, rt0.c0, rt0.c2 FROM rt0, rt1, t0, v0 GROUP BY rt0.c4, v0.c0, t0.c0, rt1.c0, rt0.c1, t0.c1, rt0.c3, rt1.c3, t0.c2, rt1.c2, rt1.c1, rt0.c0, rt0.c2 HAVING ((((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt0.c4)))<<(MAX(t0.c1))) UNION ALL SELECT ALL rt0.c4, v0.c0, t0.c0, rt1.c0, rt0.c1, t0.c1, rt0.c3, rt1.c3, t0.c2, rt1.c2, rt1.c1, rt0.c0, rt0.c2 FROM rt0, rt1, t0, v0 GROUP BY rt0.c4, v0.c0, t0.c0, rt1.c0, rt0.c1, t0.c1, rt0.c3, rt1.c3, t0.c2, rt1.c2, rt1.c1, rt0.c0, rt0.c2 HAVING (NOT (((((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt0.c4)))<<(MAX(t0.c1))))) UNION ALL SELECT rt0.c4, v0.c0, t0.c0, rt1.c0, rt0.c1, t0.c1, rt0.c3, rt1.c3, t0.c2, rt1.c2, rt1.c1, rt0.c0, rt0.c2 FROM rt0, rt1, t0, v0 GROUP BY rt0.c4, v0.c0, t0.c0, rt1.c0, rt0.c1, t0.c1, rt0.c3, rt1.c3, t0.c2, rt1.c2, rt1.c1, rt0.c0, rt0.c2 HAVING ((((((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt0.c4)))<<(MAX(t0.c1)))) ISNULL);
SELECT ALL rt0.c4, v0.c0, t0.c0, rt1.c0, rt0.c1, t0.c1, rt0.c3, rt1.c3, t0.c2, rt1.c2, rt1.c1, rt0.c0, rt0.c2 FROM rt0, rt1, t0, v0 GROUP BY rt0.c4, v0.c0, t0.c0, rt1.c0, rt0.c1, t0.c1, rt0.c3, rt1.c3, t0.c2, rt1.c2, rt1.c1, rt0.c0, rt0.c2;
SELECT t1.c0 FROM t1;
SELECT t1.c0 FROM t1 WHERE ((~ (((t1.c0)<=(t1.c0))))) UNION ALL SELECT t1.c0 FROM t1 WHERE ((NOT ((~ (((t1.c0)<=(t1.c0))))))) UNION ALL SELECT t1.c0 FROM t1 NOT INDEXED WHERE ((((~ (((t1.c0)<=(t1.c0))))) ISNULL));
SELECT t1.c0 FROM t1;
SELECT DISTINCT * FROM rt1, v0, t1, rt0, t0;
SELECT DISTINCT * FROM rt1, v0, t1, rt0, t0 WHERE (((((rt1.c1) IS FALSE)) BETWEEN ((NOT (rt0.c0))) AND (((NULL)IS NOT(rt0.c4))))) UNION SELECT DISTINCT * FROM rt1, v0, t1, rt0, t0 WHERE ((NOT (((((rt1.c1) IS FALSE)) BETWEEN ((NOT (rt0.c0))) AND (((NULL)IS NOT(rt0.c4))))))) UNION SELECT DISTINCT * FROM rt1, v0, t1, rt0, t0 WHERE (((((((rt1.c1) IS FALSE)) BETWEEN ((NOT (rt0.c0))) AND (((NULL)IS NOT(rt0.c4))))) ISNULL));
SELECT DISTINCT * FROM rt1, v0, t1, rt0, t0;
SELECT ALL rt0.c4, rt0.c3, rt0.c0, rt0.c1, t1.c0, rt0.c2 FROM t1 LEFT OUTER JOIN rt0 ON (+ (CAST(rt0.c4 AS NUMERIC))) GROUP BY rt0.c4, rt0.c3, rt0.c0, rt0.c1, t1.c0, rt0.c2;
SELECT rt0.c4, rt0.c3, rt0.c0, rt0.c1, t1.c0, rt0.c2 FROM t1 LEFT OUTER JOIN rt0 ON (+ (CAST(rt0.c4 AS NUMERIC))) WHERE (((((((((((rt0.c4)AND(rt0.c2)))AND(x'')))OR(rt0.c0)))AND(NULL))) NOTNULL)) GROUP BY rt0.c4, rt0.c3, rt0.c0, rt0.c1, t1.c0, rt0.c2 UNION SELECT ALL rt0.c4, rt0.c3, rt0.c0, rt0.c1, t1.c0, rt0.c2 FROM t1 LEFT OUTER JOIN rt0 ON (+ (CAST(rt0.c4 AS NUMERIC))) WHERE ((NOT (((((((((((rt0.c4)AND(rt0.c2)))AND(x'')))OR(rt0.c0)))AND(NULL))) NOTNULL)))) GROUP BY rt0.c4, rt0.c3, rt0.c0, rt0.c1, t1.c0, rt0.c2 UNION SELECT rt0.c4, rt0.c3, rt0.c0, rt0.c1, t1.c0, rt0.c2 FROM t1 LEFT OUTER JOIN rt0 ON (+ (CAST(rt0.c4 AS NUMERIC))) WHERE (((((((((((((rt0.c4)AND(rt0.c2)))AND(x'')))OR(rt0.c0)))AND(NULL))) NOTNULL)) ISNULL)) GROUP BY rt0.c4, rt0.c3, rt0.c0, rt0.c1, t1.c0, rt0.c2;
SELECT ALL rt0.c4, rt0.c3, rt0.c0, rt0.c1, t1.c0, rt0.c2 FROM t1 LEFT OUTER JOIN rt0 ON (+ (CAST(rt0.c4 AS NUMERIC))) GROUP BY rt0.c4, rt0.c3, rt0.c0, rt0.c1, t1.c0, rt0.c2;
SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2;
SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2 HAVING AVG(((t0.c1)GLOB(TOTAL(COUNT(MIN(t0.c0)))))) UNION ALL SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2 HAVING (NOT (AVG(((t0.c1)GLOB(TOTAL(COUNT(MIN(t0.c0)))))))) UNION ALL SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2 HAVING ((AVG(((t0.c1)GLOB(TOTAL(COUNT(MIN(t0.c0))))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (LIKELIHOOD(rt0.c4, 0.3104731097635195) COLLATE BINARY) UNION ALL SELECT * FROM rt0 WHERE ((NOT (LIKELIHOOD(rt0.c4, 0.3104731097635195) COLLATE BINARY))) UNION ALL SELECT * FROM rt0 WHERE (((LIKELIHOOD(rt0.c4, 0.3104731097635195) COLLATE BINARY) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt1, t0, rt0;
SELECT DISTINCT * FROM rt1, t0, rt0 WHERE (((((rt0.c0) NOTNULL)) ISNULL)) UNION SELECT DISTINCT * FROM rt1, t0, rt0 WHERE ((NOT (((((rt0.c0) NOTNULL)) ISNULL)))) UNION SELECT DISTINCT * FROM rt1, t0, rt0 WHERE (((((((rt0.c0) NOTNULL)) ISNULL)) ISNULL));
SELECT DISTINCT * FROM rt1, t0, rt0;
SELECT t0.c2, t1.c0, t0.c1, rt0.c2, t0.c0, rt0.c1, rt0.c4, rt0.c0 FROM rt0 INNER JOIN t1 ON (((rt0.c3)) NOT BETWEEN ((((rt0.c1)/(rt0.c3)))) AND ((((t0.c0)*(t0.c0))))) CROSS JOIN v0 ON CASE WHEN (((x'', rt0.c0, t0.c1, rt0.c1, rt0.c2))<=((t1.c0, rt0.c0, rt0.c0, t1.c0, rt0.c0))) THEN rt0.c1 WHEN ((rt0.c2) NOTNULL) THEN ((v0.c0)|(t0.c0)) WHEN CASE t0.c2  WHEN '2143010694' THEN '啟Q1v' ELSE rt0.c2 END THEN ((0x4b06e5bb)<<(rt0.c3)) END FULL OUTER JOIN t0 ON (CAST(v0.c0 AS BLOB) IN ()) GROUP BY t0.c2, t1.c0, t0.c1, rt0.c2, t0.c0, rt0.c1, rt0.c4, rt0.c0;
SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1;
SELECT t0.c1 FROM t0 GROUP BY t0.c1 HAVING GROUP_CONCAT((t0.c0 IN ())) UNION ALL SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1 HAVING (NOT (GROUP_CONCAT((t0.c0 IN ())))) UNION ALL SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1 HAVING ((GROUP_CONCAT((t0.c0 IN ()))) ISNULL);
SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1;
SELECT t0.c1 FROM t0 GROUP BY t0.c1 HAVING GROUP_CONCAT((t0.c0 IN ())) UNION ALL SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1 HAVING (NOT (GROUP_CONCAT((t0.c0 IN ())))) UNION ALL SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1 HAVING ((GROUP_CONCAT((t0.c0 IN ()))) ISNULL);
SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1;
SELECT rt0.c4, t0.c2, rt0.c3, t0.c1, v0.c0, rt0.c0 FROM t0, rt1, rt0 FULL OUTER JOIN v0 ON rt1.c0 FULL OUTER JOIN t1 ON rt0.c2;
SELECT ALL rt0.c4, t0.c2, rt0.c3, t0.c1, v0.c0, rt0.c0 FROM t0, rt1, rt0 FULL OUTER JOIN v0 ON rt1.c0 FULL OUTER JOIN t1 ON rt0.c2 WHERE (((IFNULL(rt1.c3, rt0.c2))>=((rt0.c3 IN ())))) UNION ALL SELECT rt0.c4, t0.c2, rt0.c3, t0.c1, v0.c0, rt0.c0 FROM t0, rt1, rt0 FULL OUTER JOIN v0 ON rt1.c0 FULL OUTER JOIN t1 ON rt0.c2 WHERE ((NOT (((IFNULL(rt1.c3, rt0.c2))>=((rt0.c3 IN ())))))) UNION ALL SELECT ALL rt0.c4, t0.c2, rt0.c3, t0.c1, v0.c0, rt0.c0 FROM t0, rt1, rt0 FULL OUTER JOIN v0 ON rt1.c0 FULL OUTER JOIN t1 ON rt0.c2 WHERE (((((IFNULL(rt1.c3, rt0.c2))>=((rt0.c3 IN ())))) ISNULL));
SELECT rt0.c4, t0.c2, rt0.c3, t0.c1, v0.c0, rt0.c0 FROM t0, rt1, rt0 FULL OUTER JOIN v0 ON rt1.c0 FULL OUTER JOIN t1 ON rt0.c2;
SELECT DISTINCT t0.c2, rt0.c2, rt0.c1 FROM rt0, t0;
SELECT DISTINCT t0.c2, rt0.c2, rt0.c1 FROM rt0, t0 WHERE (((- ('-489185842')) IN (((rt0.c1) IS FALSE), (- (rt0.c2))))) UNION SELECT DISTINCT t0.c2, rt0.c2, rt0.c1 FROM rt0, t0 WHERE ((NOT (((- ('-489185842')) IN (((rt0.c1) IS FALSE), (- (rt0.c2))))))) UNION SELECT DISTINCT t0.c2, rt0.c2, rt0.c1 FROM rt0, t0 WHERE (((((- ('-489185842')) IN (((rt0.c1) IS FALSE), (- (rt0.c2))))) ISNULL));
SELECT DISTINCT t0.c2, rt0.c2, rt0.c1 FROM rt0, t0;
SELECT t0.c1 FROM t0 GROUP BY t0.c1;
SELECT ALL t0.c1 FROM t0 WHERE (CASE 0.07988839992236663  WHEN ((((t0.c1)OR(t0.c2)))OR(t0.c0)) THEN ((x'fbeb') IS TRUE) END) GROUP BY t0.c1 UNION SELECT ALL t0.c1 FROM t0 WHERE ((NOT (CASE 0.07988839992236663  WHEN ((((t0.c1)OR(t0.c2)))OR(t0.c0)) THEN ((x'fbeb') IS TRUE) END))) GROUP BY t0.c1 UNION SELECT ALL t0.c1 FROM t0 WHERE (((CASE 0.07988839992236663  WHEN ((((t0.c1)OR(t0.c2)))OR(t0.c0)) THEN ((x'fbeb') IS TRUE) END) ISNULL)) GROUP BY t0.c1;
SELECT t0.c1 FROM t0 GROUP BY t0.c1;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING TOTAL(x'') UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (TOTAL(x''))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((TOTAL(x'')) ISNULL);
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING TOTAL(x'') UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (TOTAL(x''))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((TOTAL(x'')) ISNULL);
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT * FROM rt0, t1, t0;
SELECT * FROM rt0, t1, t0 WHERE (rt0.c1) UNION ALL SELECT ALL * FROM rt0, t1, t0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT ALL * FROM rt0, t1, t0 WHERE (((rt0.c1) ISNULL));
SELECT * FROM rt0, t1, t0;
SELECT DISTINCT * FROM t0 INNER JOIN t1 ON rt1.c1 CROSS JOIN rt1 ON CAST(rt1.c0 COLLATE NOCASE AS NUMERIC);
SELECT DISTINCT * FROM t0 INNER JOIN t1 ON rt1.c1 CROSS JOIN rt1 ON CAST(rt1.c0 COLLATE NOCASE AS NUMERIC) WHERE (((((rt1.c0)>(t0.c1))) IS FALSE)) UNION SELECT DISTINCT * FROM t0 INNER JOIN t1 ON rt1.c1 CROSS JOIN rt1 ON CAST(rt1.c0 COLLATE NOCASE AS NUMERIC) WHERE ((NOT (((((rt1.c0)>(t0.c1))) IS FALSE)))) UNION SELECT DISTINCT * FROM t0 INNER JOIN t1 ON rt1.c1 CROSS JOIN rt1 ON CAST(rt1.c0 COLLATE NOCASE AS NUMERIC) WHERE (((((((rt1.c0)>(t0.c1))) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM t0 INNER JOIN t1 ON rt1.c1 CROSS JOIN rt1 ON CAST(rt1.c0 COLLATE NOCASE AS NUMERIC);
SELECT v0.c0, t1.c0 FROM t1, v0 GROUP BY v0.c0, t1.c0;
SELECT v0.c0, t1.c0 FROM t1, v0 WHERE (((((((t1.c0)||(v0.c0)))AND(CASE WHEN v0.c0 THEN t1.c0 ELSE '(.#kc&' END)))AND(((t1.c0) BETWEEN (t1.c0) AND (v0.c0))))) GROUP BY v0.c0, t1.c0 UNION SELECT v0.c0, t1.c0 FROM t1, v0 WHERE ((NOT (((((((t1.c0)||(v0.c0)))AND(CASE WHEN v0.c0 THEN t1.c0 ELSE '(.#kc&' END)))AND(((t1.c0) BETWEEN (t1.c0) AND (v0.c0))))))) GROUP BY v0.c0, t1.c0 UNION SELECT v0.c0, t1.c0 FROM t1, v0 WHERE (((((((((t1.c0)||(v0.c0)))AND(CASE WHEN v0.c0 THEN t1.c0 ELSE '(.#kc&' END)))AND(((t1.c0) BETWEEN (t1.c0) AND (v0.c0))))) ISNULL)) GROUP BY v0.c0, t1.c0;
SELECT v0.c0, t1.c0 FROM t1, v0 GROUP BY v0.c0, t1.c0;
SELECT rt0.c0, rt1.c0, rt0.c3, rt0.c2, rt1.c2, t0.c0, t0.c1, rt0.c1, rt1.c1, rt1.c3, v0.c0, rt0.c4 FROM t0, rt1, t1, rt0 LEFT OUTER JOIN v0 ON CASE ((rt1.c1) IS FALSE)  WHEN (('')||(rt1.c0)) THEN json(v0.c0) ELSE CAST(rt1.c1 AS BLOB) END GROUP BY rt0.c0, rt1.c0, rt0.c3, rt0.c2, rt1.c2, t0.c0, t0.c1, rt0.c1, rt1.c1, rt1.c3, v0.c0, rt0.c4;
SELECT ALL rt0.c0, rt1.c0, rt0.c3, rt0.c2, rt1.c2, t0.c0, t0.c1, rt0.c1, rt1.c1, rt1.c3, v0.c0, rt0.c4 FROM t0, rt1, t1, rt0 LEFT OUTER JOIN v0 ON CASE ((rt1.c1) IS FALSE)  WHEN (('')||(rt1.c0)) THEN json(v0.c0) ELSE CAST(rt1.c1 AS BLOB) END GROUP BY rt0.c0, rt1.c0, rt0.c3, rt0.c2, rt1.c2, t0.c0, t0.c1, rt0.c1, rt1.c1, rt1.c3, v0.c0, rt0.c4 HAVING MAX((((MAX(t1.c0), MAX(t1.c0), COUNT(*)))!=((MAX(rt0.c4), TOTAL(rt0.c4), MIN(rt1.c1))))) UNION ALL SELECT ALL rt0.c0, rt1.c0, rt0.c3, rt0.c2, rt1.c2, t0.c0, t0.c1, rt0.c1, rt1.c1, rt1.c3, v0.c0, rt0.c4 FROM t0, rt1, t1, rt0 LEFT OUTER JOIN v0 ON CASE ((rt1.c1) IS FALSE)  WHEN (('')||(rt1.c0)) THEN json(v0.c0) ELSE CAST(rt1.c1 AS BLOB) END GROUP BY rt0.c0, rt1.c0, rt0.c3, rt0.c2, rt1.c2, t0.c0, t0.c1, rt0.c1, rt1.c1, rt1.c3, v0.c0, rt0.c4 HAVING (NOT (MAX((((MAX(t1.c0), MAX(t1.c0), COUNT(*)))<>((MAX(rt0.c4), TOTAL(rt0.c4), MIN(rt1.c1))))))) UNION ALL SELECT ALL rt0.c0, rt1.c0, rt0.c3, rt0.c2, rt1.c2, t0.c0, t0.c1, rt0.c1, rt1.c1, rt1.c3, v0.c0, rt0.c4 FROM t0, rt1, t1, rt0 LEFT OUTER JOIN v0 ON CASE ((rt1.c1) IS FALSE)  WHEN (('')||(rt1.c0)) THEN json(v0.c0) ELSE CAST(rt1.c1 AS BLOB) END GROUP BY rt0.c0, rt1.c0, rt0.c3, rt0.c2, rt1.c2, t0.c0, t0.c1, rt0.c1, rt1.c1, rt1.c3, v0.c0, rt0.c4 HAVING ((MAX((((MAX(t1.c0), MAX(t1.c0), COUNT(*)))!=((MAX(rt0.c4), TOTAL(rt0.c4), MIN(rt1.c1)))))) ISNULL);
SELECT t0.c0, rt1.c1 FROM rt1, t1, v0, t0, rt0;
SELECT t0.c0, rt1.c1 FROM rt1, t1, v0, t0, rt0 WHERE (TRIM(DISTINCT (NOT (rt1.c0)))) UNION ALL SELECT t0.c0, rt1.c1 FROM rt1, t1, v0, t0, rt0 WHERE ((NOT (TRIM(DISTINCT (NOT (rt1.c0)))))) UNION ALL SELECT t0.c0, rt1.c1 FROM rt1, t1, v0, t0, rt0 WHERE (((TRIM(DISTINCT (NOT (rt1.c0)))) ISNULL));
SELECT t0.c0, rt1.c1 FROM rt1, t1, v0, t0, rt0;
SELECT DISTINCT rt0.c4, rt1.c3, rt1.c0, rt0.c1 FROM t0, v0, rt0, t1, rt1;
SELECT DISTINCT rt0.c4, rt1.c3, rt1.c0, rt0.c1 FROM t0, v0, rt0, t1, rt1 WHERE (LIKELIHOOD(((((t1.c0)OR(rt1.c0)))AND(t0.c2)), 0.6868793913073051)) UNION SELECT DISTINCT rt0.c4, rt1.c3, rt1.c0, rt0.c1 FROM t0, v0, rt0, t1, rt1 WHERE ((NOT (LIKELIHOOD(((((t1.c0)OR(rt1.c0)))AND(t0.c2)), 0.6868793913073051)))) UNION SELECT DISTINCT rt0.c4, rt1.c3, rt1.c0, rt0.c1 FROM t0, v0, rt0, t1, rt1 WHERE (((LIKELIHOOD(((((t1.c0)OR(rt1.c0)))AND(t0.c2)), 0.6868793913073051)) ISNULL));
SELECT DISTINCT rt0.c4, rt1.c3, rt1.c0, rt0.c1 FROM t0, v0, rt0, t1, rt1;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE (t1.c0) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT (t1.c0))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE (((t1.c0) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t0.c1, t1.c0 FROM t1, t0 GROUP BY t0.c1, t1.c0;
SELECT ALL t0.c1, t1.c0 FROM t1, t0 GROUP BY t0.c1, t1.c0 HAVING GROUP_CONCAT(CAST(t0.c1 AS INTEGER)) UNION ALL SELECT ALL t0.c1, t1.c0 FROM t1, t0 GROUP BY t0.c1, t1.c0 HAVING (NOT (GROUP_CONCAT(CAST(t0.c1 AS INTEGER)))) UNION ALL SELECT t0.c1, t1.c0 FROM t1, t0 GROUP BY t0.c1, t1.c0 HAVING ((GROUP_CONCAT(CAST(t0.c1 AS INTEGER))) ISNULL);
SELECT t0.c1, t1.c0 FROM t1, t0 GROUP BY t0.c1, t1.c0;
SELECT ALL t0.c1, t1.c0 FROM t1, t0 GROUP BY t0.c1, t1.c0 HAVING GROUP_CONCAT(CAST(t0.c1 AS INTEGER)) UNION ALL SELECT ALL t0.c1, t1.c0 FROM t1, t0 GROUP BY t0.c1, t1.c0 HAVING (NOT (GROUP_CONCAT(CAST(t0.c1 AS INTEGER)))) UNION ALL SELECT t0.c1, t1.c0 FROM t1, t0 GROUP BY t0.c1, t1.c0 HAVING ((GROUP_CONCAT(CAST(t0.c1 AS INTEGER))) ISNULL);
SELECT t0.c1, t1.c0 FROM t1, t0 GROUP BY t0.c1, t1.c0;
SELECT rt1.c0 FROM rt1;
SELECT rt1.c0 FROM rt1 WHERE (TRIM(DISTINCT json_extract(rt1.c0, rt1.c1))) UNION ALL SELECT rt1.c0 FROM rt1 WHERE ((NOT (TRIM(DISTINCT json_extract(rt1.c0, rt1.c1))))) UNION ALL SELECT ALL rt1.c0 FROM rt1 WHERE (((TRIM(DISTINCT json_extract(rt1.c0, rt1.c1))) ISNULL));
SELECT DISTINCT v0.c0, t0.c1, t0.c0 FROM v0, t0;
SELECT DISTINCT v0.c0, t0.c1, t0.c0 FROM v0, t0 WHERE ((CASE t0.c0  WHEN v0.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c1 WHEN t0.c0 THEN t0.c2 END IN (((v0.c0) BETWEEN (t0.c1) AND (t0.c0)), ((((t0.c0)AND(t0.c2)))AND(t0.c1))))) UNION SELECT DISTINCT v0.c0, t0.c1, t0.c0 FROM v0, t0 WHERE ((NOT ((CASE t0.c0  WHEN v0.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c1 WHEN t0.c0 THEN t0.c2 END IN (((v0.c0) BETWEEN (t0.c1) AND (t0.c0)), ((((t0.c0)AND(t0.c2)))AND(t0.c1))))))) UNION SELECT DISTINCT v0.c0, t0.c1, t0.c0 FROM v0, t0 WHERE ((((CASE t0.c0  WHEN v0.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c1 WHEN t0.c0 THEN t0.c2 END IN (((v0.c0) BETWEEN (t0.c1) AND (t0.c0)), ((((t0.c0)AND(t0.c2)))AND(t0.c1))))) ISNULL));
SELECT DISTINCT v0.c0, t0.c1, t0.c0 FROM v0, t0;
SELECT rt1.c3, rt0.c1 FROM t1 LEFT OUTER JOIN rt1 ON ((((v0.c0) NOTNULL)) BETWEEN (((t1.c0)>>('487805040'))) AND (rt0.c4 COLLATE NOCASE)) RIGHT OUTER JOIN rt0 ON ((((rt1.c3) IS TRUE))==((((t1.c0))==((rt0.c3))))) RIGHT OUTER JOIN v0 ON x'' GROUP BY rt1.c3, rt0.c1;
SELECT t0.c2, rt0.c1, t0.c1, rt0.c0 FROM rt0, t0, t1 GROUP BY t0.c2, rt0.c1, t0.c1, rt0.c0;
SELECT t0.c2, rt0.c1, t0.c1, rt0.c0 FROM rt0, t0, t1 GROUP BY t0.c2, rt0.c1, t0.c1, rt0.c0 HAVING CAST(t1.c0 AS TEXT) UNION ALL SELECT t0.c2, rt0.c1, t0.c1, rt0.c0 FROM rt0, t0, t1 NOT INDEXED GROUP BY t0.c2, rt0.c1, t0.c1, rt0.c0 HAVING (NOT (CAST(t1.c0 AS TEXT))) UNION ALL SELECT t0.c2, rt0.c1, t0.c1, rt0.c0 FROM rt0, t0, t1 GROUP BY t0.c2, rt0.c1, t0.c1, rt0.c0 HAVING ((CAST(t1.c0 AS TEXT)) ISNULL);
SELECT t0.c2, rt0.c1, t0.c1, rt0.c0 FROM rt0, t0, t1 GROUP BY t0.c2, rt0.c1, t0.c1, rt0.c0;
SELECT t0.c2, rt0.c1, t0.c1, rt0.c0 FROM rt0, t0, t1 GROUP BY t0.c2, rt0.c1, t0.c1, rt0.c0 HAVING CAST(t1.c0 AS TEXT) UNION ALL SELECT t0.c2, rt0.c1, t0.c1, rt0.c0 FROM rt0, t0, t1 NOT INDEXED GROUP BY t0.c2, rt0.c1, t0.c1, rt0.c0 HAVING (NOT (CAST(t1.c0 AS TEXT))) UNION ALL SELECT t0.c2, rt0.c1, t0.c1, rt0.c0 FROM rt0, t0, t1 GROUP BY t0.c2, rt0.c1, t0.c1, rt0.c0 HAVING ((CAST(t1.c0 AS TEXT)) ISNULL);
SELECT t0.c2, rt0.c1, t0.c1, rt0.c0 FROM rt0, t0, t1 GROUP BY t0.c2, rt0.c1, t0.c1, rt0.c0;
SELECT ALL rt0.c0, rt0.c1, rt0.c3, v0.c0, t0.c1, rt0.c2 FROM t0, v0, rt0;
SELECT rt0.c0, rt0.c1, rt0.c3, v0.c0, t0.c1, rt0.c2 FROM t0, v0, rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((TYPEOF(t0.c1))) AND ((rt0.c3)))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c3, v0.c0, t0.c1, rt0.c2 FROM t0, v0, rt0 WHERE ((NOT ((((rt0.c2)) NOT BETWEEN ((TYPEOF(t0.c1))) AND ((rt0.c3)))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c3, v0.c0, t0.c1, rt0.c2 FROM t0, v0, rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((TYPEOF(t0.c1))) AND ((rt0.c3)))) ISNULL));
SELECT ALL rt0.c0, rt0.c1, rt0.c3, v0.c0, t0.c1, rt0.c2 FROM t0, v0, rt0;
SELECT DISTINCT * FROM t1, rt0, t0, v0;
SELECT DISTINCT * FROM t1, rt0, t0, v0 WHERE ((CASE rt0.c3  WHEN rt0.c0 THEN t0.c0 ELSE t0.c2 END IN ())) UNION SELECT DISTINCT * FROM t1, rt0, t0, v0 WHERE ((NOT ((CASE rt0.c3  WHEN rt0.c0 THEN t0.c0 ELSE t0.c2 END IN ())))) UNION SELECT DISTINCT * FROM t1, rt0, t0, v0 WHERE ((((CASE rt0.c3  WHEN rt0.c0 THEN t0.c0 ELSE t0.c2 END IN ())) ISNULL));
SELECT DISTINCT * FROM t1, rt0, t0, v0;
SELECT rt0.c0, rt0.c4, rt1.c0, rt1.c3, v0.c0, t1.c0, rt0.c3, rt0.c1, t0.c0 FROM rt1, rt0, v0, t1, t0 GROUP BY rt0.c0, rt0.c4, rt1.c0, rt1.c3, v0.c0, t1.c0, rt0.c3, rt0.c1, t0.c0;
SELECT ALL rt0.c0, rt0.c4, rt1.c0, rt1.c3, v0.c0, t1.c0, rt0.c3, rt0.c1, t0.c0 FROM rt1, rt0, v0, t1, t0 WHERE (('874987322' IN ())) GROUP BY rt0.c0, rt0.c4, rt1.c0, rt1.c3, v0.c0, t1.c0, rt0.c3, rt0.c1, t0.c0 UNION SELECT ALL rt0.c0, rt0.c4, rt1.c0, rt1.c3, v0.c0, t1.c0, rt0.c3, rt0.c1, t0.c0 FROM rt1, rt0, v0, t1, t0 WHERE ((NOT (('874987322' IN ())))) GROUP BY rt0.c0, rt0.c4, rt1.c0, rt1.c3, v0.c0, t1.c0, rt0.c3, rt0.c1, t0.c0 UNION SELECT rt0.c0, rt0.c4, rt1.c0, rt1.c3, v0.c0, t1.c0, rt0.c3, rt0.c1, t0.c0 FROM rt1, rt0, v0, t1, t0 WHERE (((('874987322' IN ())) ISNULL)) GROUP BY rt0.c0, rt0.c4, rt1.c0, rt1.c3, v0.c0, t1.c0, rt0.c3, rt0.c1, t0.c0;
SELECT rt0.c0, rt0.c4, rt1.c0, rt1.c3, v0.c0, t1.c0, rt0.c3, rt0.c1, t0.c0 FROM rt1, rt0, v0, t1, t0 GROUP BY rt0.c0, rt0.c4, rt1.c0, rt1.c3, v0.c0, t1.c0, rt0.c3, rt0.c1, t0.c0;
SELECT rt0.c2, t0.c2, rt1.c3, rt0.c1, rt0.c0, t0.c1, rt1.c2, rt0.c4, v0.c0 FROM rt1 LEFT OUTER JOIN t0 ON ((~ (rt1.c1)) IN (((rt0.c2)IS(rt0.c2)), CASE rt0.c3  WHEN t0.c1 THEN rt1.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt1.c0 ELSE rt0.c0 END)) RIGHT OUTER JOIN v0 ON '.bb㙛|gE' CROSS JOIN rt0 ON rt1.c3 RIGHT OUTER JOIN t1 ON ((rt1.c3)*(((((rt1.c1)OR(rt1.c1)))OR(rt0.c2)))) GROUP BY rt0.c2, t0.c2, rt1.c3, rt0.c1, rt0.c0, t0.c1, rt1.c2, rt0.c4, v0.c0;
SELECT * FROM t1, v0, rt1, t0;
SELECT ALL * FROM t1, v0, rt1, t0 WHERE (CASE ((t0.c1)||(t0.c2))  WHEN 0Xffffffffd43bae5a COLLATE RTRIM THEN NULLIF(DISTINCT x'81c2', t1.c0) WHEN rt1.c2 THEN ((t1.c0) NOTNULL) WHEN NULL THEN CASE NULL  WHEN rt1.c0 THEN -2051400767 ELSE t0.c1 END WHEN ((NULL)==(t0.c0)) THEN t0.c2 COLLATE NOCASE WHEN CAST('-670259479' AS NUMERIC) THEN CASE WHEN t0.c2 THEN rt1.c2 WHEN rt1.c1 THEN t0.c2 WHEN t0.c2 THEN rt1.c2 END END) UNION ALL SELECT ALL * FROM t1, v0, rt1, t0 WHERE ((NOT (CASE ((t0.c1)||(t0.c2))  WHEN 0Xffffffffd43bae5a COLLATE RTRIM THEN NULLIF(DISTINCT x'81c2', t1.c0) WHEN rt1.c2 THEN ((t1.c0) NOTNULL) WHEN NULL THEN CASE NULL  WHEN rt1.c0 THEN -2051400767 ELSE t0.c1 END WHEN ((NULL)=(t0.c0)) THEN t0.c2 COLLATE NOCASE WHEN CAST('-670259479' AS NUMERIC) THEN CASE WHEN t0.c2 THEN rt1.c2 WHEN rt1.c1 THEN t0.c2 WHEN t0.c2 THEN rt1.c2 END END))) UNION ALL SELECT * FROM t1, v0, rt1, t0 WHERE (((CASE ((t0.c1)||(t0.c2))  WHEN 0xffffffffd43bae5a COLLATE RTRIM THEN NULLIF(DISTINCT x'81c2', t1.c0) WHEN rt1.c2 THEN ((t1.c0) NOTNULL) WHEN NULL THEN CASE NULL  WHEN rt1.c0 THEN -2051400767 ELSE t0.c1 END WHEN ((NULL)==(t0.c0)) THEN t0.c2 COLLATE NOCASE WHEN CAST('-670259479' AS NUMERIC) THEN CASE WHEN t0.c2 THEN rt1.c2 WHEN rt1.c1 THEN t0.c2 WHEN t0.c2 THEN rt1.c2 END END) ISNULL));
SELECT * FROM t1, v0, rt1, t0;
SELECT DISTINCT t0.c1 FROM t0;
SELECT DISTINCT t0.c1 FROM t0 WHERE (((CAST(t0.c2 AS REAL))|(((NULL)IS(t0.c0))))) UNION SELECT DISTINCT t0.c1 FROM t0 WHERE ((NOT (((CAST(t0.c2 AS REAL))|(((NULL)IS(t0.c0))))))) UNION SELECT DISTINCT t0.c1 FROM t0 WHERE (((((CAST(t0.c2 AS REAL))|(((NULL)IS(t0.c0))))) ISNULL));
SELECT DISTINCT t0.c1 FROM t0;
SELECT t0.c2, rt0.c2, t0.c0, t0.c1, rt1.c2, rt1.c3 FROM v0, rt0, t1, rt1, t0 GROUP BY t0.c2, rt0.c2, t0.c0, t0.c1, rt1.c2, rt1.c3;
SELECT ALL t0.c2, rt0.c2, t0.c0, t0.c1, rt1.c2, rt1.c3 FROM v0, rt0, t1, rt1, t0 WHERE (CASE ((rt1.c0)<(v0.c0))  WHEN (NOT (rt1.c0)) THEN ((rt0.c1) IS FALSE) END) GROUP BY t0.c2, rt0.c2, t0.c0, t0.c1, rt1.c2, rt1.c3 UNION SELECT t0.c2, rt0.c2, t0.c0, t0.c1, rt1.c2, rt1.c3 FROM v0, rt0, t1, rt1, t0 WHERE ((NOT (CASE ((rt1.c0)<(v0.c0))  WHEN (NOT (rt1.c0)) THEN ((rt0.c1) IS FALSE) END))) GROUP BY t0.c2, rt0.c2, t0.c0, t0.c1, rt1.c2, rt1.c3 UNION SELECT t0.c2, rt0.c2, t0.c0, t0.c1, rt1.c2, rt1.c3 FROM v0, rt0, t1, rt1, t0 WHERE (((CASE ((rt1.c0)<(v0.c0))  WHEN (NOT (rt1.c0)) THEN ((rt0.c1) IS FALSE) END) ISNULL)) GROUP BY t0.c2, rt0.c2, t0.c0, t0.c1, rt1.c2, rt1.c3;
SELECT t0.c2, rt0.c2, t0.c0, t0.c1, rt1.c2, rt1.c3 FROM v0, rt0, t1, rt1, t0 GROUP BY t0.c2, rt0.c2, t0.c0, t0.c1, rt1.c2, rt1.c3;
SELECT t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0;
SELECT t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0 HAVING GROUP_CONCAT(t0.c0 COLLATE RTRIM) UNION ALL SELECT t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0 HAVING (NOT (GROUP_CONCAT(t0.c0 COLLATE RTRIM))) UNION ALL SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0 HAVING ((GROUP_CONCAT(t0.c0 COLLATE RTRIM)) ISNULL);
SELECT t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0;
SELECT t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0 HAVING GROUP_CONCAT(t0.c0 COLLATE RTRIM) UNION ALL SELECT t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0 HAVING (NOT (GROUP_CONCAT(t0.c0 COLLATE RTRIM))) UNION ALL SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0 HAVING ((GROUP_CONCAT(t0.c0 COLLATE RTRIM)) ISNULL);
SELECT t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0;
SELECT ALL * FROM v0 FULL OUTER JOIN rt1 ON ((((rt1.c2, rt1.c2, rt1.c1))>((v0.c0, rt1.c0, rt1.c0))) IN ());
SELECT * FROM v0 FULL OUTER JOIN rt1 ON ((((rt1.c2, rt1.c2, rt1.c1))>((v0.c0, rt1.c0, rt1.c0))) IN ()) WHERE ((CAST(0.3450645692650538 AS BLOB) IN ())) UNION ALL SELECT ALL * FROM v0 FULL OUTER JOIN rt1 ON ((((rt1.c2, rt1.c2, rt1.c1))>((v0.c0, rt1.c0, rt1.c0))) IN ()) WHERE ((NOT ((CAST(0.3450645692650538 AS BLOB) IN ())))) UNION ALL SELECT * FROM v0 FULL OUTER JOIN rt1 ON ((((rt1.c2, rt1.c2, rt1.c1))>((v0.c0, rt1.c0, rt1.c0))) IN ()) WHERE ((((CAST(0.3450645692650538 AS BLOB) IN ())) ISNULL));
SELECT ALL * FROM v0 FULL OUTER JOIN rt1 ON ((((rt1.c2, rt1.c2, rt1.c1))>((v0.c0, rt1.c0, rt1.c0))) IN ());
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (v0.c0) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL rt1.c3 FROM t0, t1, rt1, v0 GROUP BY rt1.c3;
SELECT ALL rt1.c3 FROM t0, t1, rt1, v0 WHERE (PRINTF(((rt1.c3) ISNULL), CAST(t0.c2 AS BLOB), ((rt1.c0) NOT BETWEEN (t0.c2) AND (rt1.c0)))) GROUP BY rt1.c3 UNION SELECT rt1.c3 FROM t0, t1, rt1, v0 WHERE ((NOT (PRINTF(((rt1.c3) ISNULL), CAST(t0.c2 AS BLOB), ((rt1.c0) NOT BETWEEN (t0.c2) AND (rt1.c0)))))) GROUP BY rt1.c3 UNION SELECT rt1.c3 FROM t0, t1, rt1, v0 WHERE (((PRINTF(((rt1.c3) ISNULL), CAST(t0.c2 AS BLOB), ((rt1.c0) NOT BETWEEN (t0.c2) AND (rt1.c0)))) ISNULL)) GROUP BY rt1.c3;
SELECT ALL rt1.c3 FROM t0, t1, rt1, v0 GROUP BY rt1.c3;
SELECT ALL rt0.c2, t0.c2, rt0.c3, t1.c0, t0.c1, rt0.c4, rt0.c0, t0.c0, v0.c0, rt0.c1 FROM t0, v0, rt0, t1 GROUP BY rt0.c2, t0.c2, rt0.c3, t1.c0, t0.c1, rt0.c4, rt0.c0, t0.c0, v0.c0, rt0.c1;
SELECT rt0.c2, t0.c2, rt0.c3, t1.c0, t0.c1, rt0.c4, rt0.c0, t0.c0, v0.c0, rt0.c1 FROM t0, v0, rt0, t1 GROUP BY rt0.c2, t0.c2, rt0.c3, t1.c0, t0.c1, rt0.c4, rt0.c0, t0.c0, v0.c0, rt0.c1 HAVING COUNT(((GROUP_CONCAT(x'')) NOT BETWEEN (rt0.c1) AND (rt0.c0))) UNION ALL SELECT ALL rt0.c2, t0.c2, rt0.c3, t1.c0, t0.c1, rt0.c4, rt0.c0, t0.c0, v0.c0, rt0.c1 FROM t0, v0, rt0, t1 GROUP BY rt0.c2, t0.c2, rt0.c3, t1.c0, t0.c1, rt0.c4, rt0.c0, t0.c0, v0.c0, rt0.c1 HAVING (NOT (COUNT(((GROUP_CONCAT(x'')) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) UNION ALL SELECT rt0.c2, t0.c2, rt0.c3, t1.c0, t0.c1, rt0.c4, rt0.c0, t0.c0, v0.c0, rt0.c1 FROM t0, v0, rt0, t1 GROUP BY rt0.c2, t0.c2, rt0.c3, t1.c0, t0.c1, rt0.c4, rt0.c0, t0.c0, v0.c0, rt0.c1 HAVING ((COUNT(((GROUP_CONCAT(x'')) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) ISNULL);
SELECT ALL * FROM t1, rt1, t0, v0, rt0;
SELECT * FROM t1, rt1, t0, v0, rt0 WHERE (((((((((((((rt1.c2)OR(0Xffffffff83f5b492)))OR(0.1056020378077207)))AND(t1.c0 COLLATE BINARY)))AND(CASE WHEN t0.c2 THEN t0.c2 END)))AND(((rt1.c0)AND(rt0.c0)))))AND((rt0.c3 IN (rt0.c2))))) UNION ALL SELECT * FROM t1, rt1, t0, v0, rt0 WHERE ((NOT (((((((((((((rt1.c2)OR(0xffffffff83f5b492)))OR(0.1056020378077207)))AND(t1.c0 COLLATE BINARY)))AND(CASE WHEN t0.c2 THEN t0.c2 END)))AND(((rt1.c0)AND(rt0.c0)))))AND((rt0.c3 IN (rt0.c2))))))) UNION ALL SELECT ALL * FROM t1, rt1, t0, v0, rt0 WHERE (((((((((((((((rt1.c2)OR(0Xffffffff83f5b492)))OR(0.1056020378077207)))AND(t1.c0 COLLATE BINARY)))AND(CASE WHEN t0.c2 THEN t0.c2 END)))AND(((rt1.c0)AND(rt0.c0)))))AND((rt0.c3 IN (rt0.c2))))) ISNULL));
SELECT ALL * FROM t1, rt1, t0, v0, rt0;
SELECT DISTINCT rt1.c1, t0.c2, rt1.c0 FROM rt0, t0, rt1 FULL OUTER JOIN t1 ON ((t1.c0 COLLATE RTRIM) NOT BETWEEN (rt0.c1) AND (LIKELIHOOD(t0.c2, 0.19330376635587998)));
SELECT DISTINCT rt1.c1, t0.c2, rt1.c0 FROM rt0, t0, rt1 FULL OUTER JOIN t1 ON ((t1.c0 COLLATE RTRIM) NOT BETWEEN (rt0.c1) AND (LIKELIHOOD(t0.c2, 0.19330376635587998))) WHERE (t1.c0) UNION SELECT DISTINCT rt1.c1, t0.c2, rt1.c0 FROM rt0, t0, rt1 FULL OUTER JOIN t1 ON ((t1.c0 COLLATE RTRIM) NOT BETWEEN (rt0.c1) AND (LIKELIHOOD(t0.c2, 0.19330376635587998))) WHERE ((NOT (t1.c0))) UNION SELECT DISTINCT rt1.c1, t0.c2, rt1.c0 FROM rt0, t0, rt1 FULL OUTER JOIN t1 ON ((t1.c0 COLLATE RTRIM) NOT BETWEEN (rt0.c1) AND (LIKELIHOOD(t0.c2, 0.19330376635587998))) WHERE (((t1.c0) ISNULL));
SELECT DISTINCT rt1.c1, t0.c2, rt1.c0 FROM rt0, t0, rt1 FULL OUTER JOIN t1 ON ((t1.c0 COLLATE RTRIM) NOT BETWEEN (rt0.c1) AND (LIKELIHOOD(t0.c2, 0.19330376635587998)));
SELECT rt0.c0, rt0.c2, v0.c0, rt0.c1, t1.c0, rt0.c4, t0.c0, t0.c2, rt0.c3, t0.c1 FROM v0 RIGHT OUTER JOIN rt0 ON NULL LEFT OUTER JOIN t0 ON ((((NULL)AND((((t0.c0))<((v0.c0))))))OR(1.826091579E9)) LEFT OUTER JOIN t1 ON ((CAST(v0.c0 AS REAL)) BETWEEN (((t1.c0)>(x''))) AND ((NOT (t0.c0)))) GROUP BY rt0.c0, rt0.c2, v0.c0, rt0.c1, t1.c0, rt0.c4, t0.c0, t0.c2, rt0.c3, t0.c1;
SELECT rt0.c0, rt0.c2, v0.c0, rt0.c1, t1.c0, rt0.c4, t0.c0, t0.c2, rt0.c3, t0.c1 FROM v0 RIGHT OUTER JOIN rt0 ON NULL LEFT OUTER JOIN t0 ON ((((NULL)AND((((t0.c0))<((v0.c0))))))OR(1.826091579E9)) LEFT OUTER JOIN t1 ON ((CAST(v0.c0 AS REAL)) BETWEEN (((t1.c0)>(x''))) AND ((NOT (t0.c0)))) WHERE (((rt0.c0)%((('1182385769')|(t0.c2))))) GROUP BY rt0.c0, rt0.c2, v0.c0, rt0.c1, t1.c0, rt0.c4, t0.c0, t0.c2, rt0.c3, t0.c1 UNION SELECT rt0.c0, rt0.c2, v0.c0, rt0.c1, t1.c0, rt0.c4, t0.c0, t0.c2, rt0.c3, t0.c1 FROM v0 RIGHT OUTER JOIN rt0 ON NULL LEFT OUTER JOIN t0 ON ((((NULL)AND((((t0.c0))<((v0.c0))))))OR(1.826091579E9)) LEFT OUTER JOIN t1 ON ((CAST(v0.c0 AS REAL)) BETWEEN (((t1.c0)>(x''))) AND ((NOT (t0.c0)))) WHERE ((NOT (((rt0.c0)%((('1182385769')|(t0.c2))))))) GROUP BY rt0.c0, rt0.c2, v0.c0, rt0.c1, t1.c0, rt0.c4, t0.c0, t0.c2, rt0.c3, t0.c1 UNION SELECT rt0.c0, rt0.c2, v0.c0, rt0.c1, t1.c0, rt0.c4, t0.c0, t0.c2, rt0.c3, t0.c1 FROM v0 RIGHT OUTER JOIN rt0 ON NULL LEFT OUTER JOIN t0 ON ((((NULL)AND((((t0.c0))<((v0.c0))))))OR(1.826091579E9)) LEFT OUTER JOIN t1 ON ((CAST(v0.c0 AS REAL)) BETWEEN (((t1.c0)>(x''))) AND ((NOT (t0.c0)))) WHERE (((((rt0.c0)%((('1182385769')|(t0.c2))))) ISNULL)) GROUP BY rt0.c0, rt0.c2, v0.c0, rt0.c1, t1.c0, rt0.c4, t0.c0, t0.c2, rt0.c3, t0.c1;
SELECT rt0.c0, rt0.c2, v0.c0, rt0.c1, t1.c0, rt0.c4, t0.c0, t0.c2, rt0.c3, t0.c1 FROM v0 RIGHT OUTER JOIN rt0 ON NULL LEFT OUTER JOIN t0 ON ((((NULL)AND((((t0.c0))<((v0.c0))))))OR(1.826091579E9)) LEFT OUTER JOIN t1 ON ((CAST(v0.c0 AS REAL)) BETWEEN (((t1.c0)>(x''))) AND ((NOT (t0.c0)))) GROUP BY rt0.c0, rt0.c2, v0.c0, rt0.c1, t1.c0, rt0.c4, t0.c0, t0.c2, rt0.c3, t0.c1;
SELECT rt0.c0, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3;
SELECT ALL rt0.c0, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3 HAVING AVG((((AVG(MIN(MIN(MIN(COUNT(rt0.c4)))))))>=((rt0.c4)))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3 HAVING (NOT (AVG((((AVG(MIN(MIN(MIN(COUNT(rt0.c4)))))))>=((rt0.c4)))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3 HAVING ((AVG((((AVG(MIN(MIN(MIN(COUNT(rt0.c4)))))))>=((rt0.c4))))) ISNULL);
SELECT SUM((UNLIKELY(rt1.c1) IN ())) FROM rt1 ORDER BY (((rt1.c3 IN (rt1.c2, x'')))IS(rt1.c0 COLLATE BINARY)) DESC;
SELECT * FROM rt1 NOT INDEXED, rt0;
SELECT * FROM rt1, rt0 WHERE (CAST((rt0.c4 IN ()) AS NUMERIC)) UNION ALL SELECT * FROM rt1, rt0 WHERE ((NOT (CAST((rt0.c4 IN ()) AS NUMERIC)))) UNION ALL SELECT * FROM rt1, rt0 WHERE (((CAST((rt0.c4 IN ()) AS NUMERIC)) ISNULL));
SELECT * FROM rt1 NOT INDEXED, rt0;
SELECT DISTINCT rt0.c3, rt0.c2, rt0.c0, rt1.c1, rt1.c0, rt1.c3, v0.c0 FROM t1, rt0, t0, v0, rt1;
SELECT DISTINCT rt0.c3, rt0.c2, rt0.c0, rt1.c1, rt1.c0, rt1.c3, v0.c0 FROM t1, rt0, t0, v0, rt1 WHERE (TOTAL_CHANGES()) UNION SELECT DISTINCT rt0.c3, rt0.c2, rt0.c0, rt1.c1, rt1.c0, rt1.c3, v0.c0 FROM t1, rt0, t0, v0, rt1 WHERE ((NOT (TOTAL_CHANGES()))) UNION SELECT DISTINCT rt0.c3, rt0.c2, rt0.c0, rt1.c1, rt1.c0, rt1.c3, v0.c0 FROM t1, rt0, t0, v0, rt1 WHERE (((TOTAL_CHANGES()) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c2, rt0.c0, rt1.c1, rt1.c0, rt1.c3, v0.c0 FROM t1, rt0, t0, v0, rt1;
SELECT rt0.c4, rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c2, rt0.c3, rt0.c0, rt0.c1;
SELECT ALL rt0.c4, rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0 WHERE ((((rt0.c3)>(rt0.c3)) IN ())) GROUP BY rt0.c4, rt0.c2, rt0.c3, rt0.c0, rt0.c1 UNION SELECT rt0.c4, rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c3)>(rt0.c3)) IN ())))) GROUP BY rt0.c4, rt0.c2, rt0.c3, rt0.c0, rt0.c1 UNION SELECT rt0.c4, rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0 WHERE ((((((rt0.c3)>(rt0.c3)) IN ())) ISNULL)) GROUP BY rt0.c4, rt0.c2, rt0.c3, rt0.c0, rt0.c1;
SELECT rt0.c4, rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c2, rt0.c3, rt0.c0, rt0.c1;
SELECT t0.c1, t0.c2, t1.c0, rt0.c1, rt0.c4, rt1.c2, rt0.c3, rt1.c3 FROM t1, rt1, t0, rt0, v0 GROUP BY t0.c1, t0.c2, t1.c0, rt0.c1, rt0.c4, rt1.c2, rt0.c3, rt1.c3;
SELECT t0.c1, t0.c2, t1.c0, rt0.c1, rt0.c4, rt1.c2, rt0.c3, rt1.c3 FROM t1, rt1, t0, rt0, v0 GROUP BY t0.c1, t0.c2, t1.c0, rt0.c1, rt0.c4, rt1.c2, rt0.c3, rt1.c3 HAVING TOTAL(COUNT(*)) UNION ALL SELECT t0.c1, t0.c2, t1.c0, rt0.c1, rt0.c4, rt1.c2, rt0.c3, rt1.c3 FROM t1, rt1, t0, rt0, v0 GROUP BY t0.c1, t0.c2, t1.c0, rt0.c1, rt0.c4, rt1.c2, rt0.c3, rt1.c3 HAVING (NOT (TOTAL(COUNT(*)))) UNION ALL SELECT t0.c1, t0.c2, t1.c0, rt0.c1, rt0.c4, rt1.c2, rt0.c3, rt1.c3 FROM t1, rt1, t0, rt0, v0 GROUP BY t0.c1, t0.c2, t1.c0, rt0.c1, rt0.c4, rt1.c2, rt0.c3, rt1.c3 HAVING ((TOTAL(COUNT(*))) ISNULL);
SELECT * FROM v0, t0, t1 FULL OUTER JOIN rt1 ON 'Z/' RIGHT OUTER JOIN rt0 ON (CASE t1.c0  WHEN '‰/w' THEN rt0.c4 END IN ());
SELECT * FROM v0, t0, t1 FULL OUTER JOIN rt1 ON 'Z/' RIGHT OUTER JOIN rt0 ON (CASE t1.c0  WHEN '‰/w' THEN rt0.c4 END IN ()) WHERE (NULL) UNION ALL SELECT * FROM v0, t0, t1 FULL OUTER JOIN rt1 ON 'Z/' RIGHT OUTER JOIN rt0 ON (CASE t1.c0  WHEN '‰/w' THEN rt0.c4 END IN ()) WHERE ((NOT (NULL))) UNION ALL SELECT ALL * FROM v0, t0, t1 FULL OUTER JOIN rt1 ON 'Z/' RIGHT OUTER JOIN rt0 ON (CASE t1.c0  WHEN '‰/w' THEN rt0.c4 END IN ()) WHERE (((NULL) ISNULL));
SELECT * FROM v0, t0, t1 FULL OUTER JOIN rt1 ON 'Z/' RIGHT OUTER JOIN rt0 ON (CASE t1.c0  WHEN '‰/w' THEN rt0.c4 END IN ());
SELECT DISTINCT rt0.c2, t0.c1, v0.c0 FROM t0 FULL OUTER JOIN rt0 ON t0.c2 INNER JOIN v0 ON ((rt0.c4)<<(((v0.c0) NOTNULL)));
SELECT DISTINCT rt0.c2, t0.c1, v0.c0 FROM t0 FULL OUTER JOIN rt0 ON t0.c2 INNER JOIN v0 ON ((rt0.c4)<<(((v0.c0) NOTNULL))) WHERE (((rt0.c1)>(rt0.c4)) COLLATE RTRIM) UNION SELECT DISTINCT rt0.c2, t0.c1, v0.c0 FROM t0 FULL OUTER JOIN rt0 ON t0.c2 INNER JOIN v0 ON ((rt0.c4)<<(((v0.c0) NOTNULL))) WHERE ((NOT (((rt0.c1)>(rt0.c4)) COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c2, t0.c1, v0.c0 FROM t0 FULL OUTER JOIN rt0 ON t0.c2 INNER JOIN v0 ON ((rt0.c4)<<(((v0.c0) NOTNULL))) WHERE (((((rt0.c1)>(rt0.c4)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt0.c2, t0.c1, v0.c0 FROM t0 FULL OUTER JOIN rt0 ON t0.c2 INNER JOIN v0 ON ((rt0.c4)<<(((v0.c0) NOTNULL)));
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM t1 CROSS JOIN rt0 ON CASE NULL  WHEN ((rt0.c3)IS(rt0.c3)) THEN '-377569301' ELSE ((t1.c0) NOT NULL) END GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM t1 CROSS JOIN rt0 ON CASE NULL  WHEN ((rt0.c3)IS(rt0.c3)) THEN '-377569301' ELSE ((t1.c0) NOT NULL) END WHERE (((rt0.c2 COLLATE BINARY)<(((rt0.c2)=(rt0.c1))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM t1 CROSS JOIN rt0 ON CASE NULL  WHEN ((rt0.c3)IS(rt0.c3)) THEN '-377569301' ELSE ((t1.c0) NOT NULL) END WHERE ((NOT (((rt0.c2 COLLATE BINARY)<(((rt0.c2)=(rt0.c1))))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM t1 CROSS JOIN rt0 ON CASE NULL  WHEN ((rt0.c3)IS(rt0.c3)) THEN '-377569301' ELSE ((t1.c0) NOT NULL) END WHERE (((((rt0.c2 COLLATE BINARY)<(((rt0.c2)==(rt0.c1))))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM t1 CROSS JOIN rt0 ON CASE NULL  WHEN ((rt0.c3)IS(rt0.c3)) THEN '-377569301' ELSE ((t1.c0) NOT NULL) END GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT t0.c0 FROM t0, v0, rt1 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, v0, rt1 GROUP BY t0.c0 HAVING MIN(MAX(AVG(AVG(rt1.c0)))) UNION ALL SELECT t0.c0 FROM t0, v0, rt1 GROUP BY t0.c0 HAVING (NOT (MIN(MAX(AVG(AVG(rt1.c0)))))) UNION ALL SELECT ALL t0.c0 FROM t0, v0, rt1 GROUP BY t0.c0 HAVING ((MIN(MAX(AVG(AVG(rt1.c0))))) ISNULL);
SELECT ALL t0.c0, t0.c2, t1.c0 FROM t0, t1 NATURAL JOIN v0;
SELECT ALL t0.c0, t0.c2, t1.c0 FROM t0, t1 NATURAL JOIN v0 WHERE ((((v0.c0) BETWEEN (v0.c0) AND (t0.c1)) IN ())) UNION ALL SELECT ALL t0.c0, t0.c2, t1.c0 FROM t0, t1 NATURAL JOIN v0 WHERE ((NOT ((((v0.c0) BETWEEN (v0.c0) AND (t0.c1)) IN ())))) UNION ALL SELECT t0.c0, t0.c2, t1.c0 FROM t0, t1 NATURAL JOIN v0 WHERE ((((((v0.c0) BETWEEN (v0.c0) AND (t0.c1)) IN ())) ISNULL));
SELECT ALL t0.c0, t0.c2, t1.c0 FROM t0, t1 NATURAL JOIN v0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((((t0.c2, t0.c1, t0.c0)) NOT BETWEEN ((t0.c1, t0.c0, t0.c0)) AND ((t0.c1, t0.c0, t0.c2))) IN ())) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((((t0.c2, t0.c1, t0.c0)) NOT BETWEEN ((t0.c1, t0.c0, t0.c0)) AND ((t0.c1, t0.c0, t0.c2))) IN ())))) UNION SELECT DISTINCT * FROM t0 WHERE (((((((t0.c2, t0.c1, t0.c0)) NOT BETWEEN ((t0.c1, t0.c0, t0.c0)) AND ((t0.c1, t0.c0, t0.c2))) IN ())) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL rt0.c1, t0.c2, t0.c1, rt0.c4, rt0.c0, v0.c0, rt0.c2 FROM t0 INNER JOIN t1 ON (~ (LIKELY(rt0.c1))) RIGHT OUTER JOIN rt0 ON v0.c0 INNER JOIN v0 ON ((((rt0.c3)>=(t0.c2)))&(rt0.c2 COLLATE BINARY)) GROUP BY rt0.c1, t0.c2, t0.c1, rt0.c4, rt0.c0, v0.c0, rt0.c2;
SELECT ALL v0.c0, t1.c0 FROM t1 INNER JOIN v0 ON CAST(TRIM(t1.c0, t1.c0) AS INTEGER) GROUP BY v0.c0, t1.c0;
SELECT v0.c0, t1.c0 FROM t1 INNER JOIN v0 ON CAST(TRIM(t1.c0, t1.c0) AS INTEGER) GROUP BY v0.c0, t1.c0 HAVING MIN(GROUP_CONCAT(TOTAL(COUNT(*)))) UNION ALL SELECT v0.c0, t1.c0 FROM t1 INNER JOIN v0 ON CAST(TRIM(t1.c0, t1.c0) AS INTEGER) GROUP BY v0.c0, t1.c0 HAVING (NOT (MIN(GROUP_CONCAT(TOTAL(COUNT(*)))))) UNION ALL SELECT v0.c0, t1.c0 FROM t1 INNER JOIN v0 ON CAST(TRIM(t1.c0, t1.c0) AS INTEGER) GROUP BY v0.c0, t1.c0 HAVING ((MIN(GROUP_CONCAT(TOTAL(COUNT(*))))) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c3, rt0.c1 FROM rt0;
SELECT rt0.c2, rt0.c0, rt0.c3, rt0.c1 FROM rt0 WHERE ((LIKE(rt0.c3, rt0.c2, '0') IN ())) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c3, rt0.c1 FROM rt0 WHERE ((NOT ((LIKE(rt0.c3, rt0.c2, '0') IN ())))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c3, rt0.c1 FROM rt0 WHERE ((((LIKE(rt0.c3, rt0.c2, '0') IN ())) ISNULL));
SELECT ALL rt0.c2, rt0.c0, rt0.c3, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c4)) BETWEEN ((LIKELIHOOD(rt0.c1, 0.08904671798899555))) AND ((rt0.c0)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((rt0.c4)) BETWEEN ((LIKELIHOOD(rt0.c1, 0.08904671798899555))) AND ((rt0.c0)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c4)) BETWEEN ((LIKELIHOOD(rt0.c1, 0.08904671798899555))) AND ((rt0.c0)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0, t0.c2, t0.c0, rt0.c4 FROM t0 NOT INDEXED, rt0 GROUP BY rt0.c0, t0.c2, t0.c0, rt0.c4;
SELECT ALL rt0.c0, t0.c2, t0.c0, rt0.c4 FROM t0, rt0 WHERE (((((((t0.c0)OR(rt0.c3)))OR(x''))) BETWEEN (((rt0.c1)<(t0.c2))) AND (t0.c0))) GROUP BY rt0.c0, t0.c2, t0.c0, rt0.c4 UNION SELECT ALL rt0.c0, t0.c2, t0.c0, rt0.c4 FROM t0, rt0 WHERE ((NOT (((((((t0.c0)OR(rt0.c3)))OR(x''))) BETWEEN (((rt0.c1)<(t0.c2))) AND (t0.c0))))) GROUP BY rt0.c0, t0.c2, t0.c0, rt0.c4 UNION SELECT ALL rt0.c0, t0.c2, t0.c0, rt0.c4 FROM t0, rt0 WHERE (((((((((t0.c0)OR(rt0.c3)))OR(x''))) BETWEEN (((rt0.c1)<(t0.c2))) AND (t0.c0))) ISNULL)) GROUP BY rt0.c0, t0.c2, t0.c0, rt0.c4;
SELECT rt0.c0, t0.c2, t0.c0, rt0.c4 FROM t0 NOT INDEXED, rt0 GROUP BY rt0.c0, t0.c2, t0.c0, rt0.c4;
SELECT ALL rt0.c4, rt0.c3, rt0.c2, t0.c2, rt0.c0, t0.c1, rt0.c1, v0.c0 FROM t1, t0, v0, rt0 GROUP BY rt0.c4, rt0.c3, rt0.c2, t0.c2, rt0.c0, t0.c1, rt0.c1, v0.c0;
SELECT ALL rt0.c4, rt0.c3, rt0.c2, t0.c2, rt0.c0, t0.c1, rt0.c1, v0.c0 FROM t1, t0, v0, rt0 GROUP BY rt0.c4, rt0.c3, rt0.c2, t0.c2, rt0.c0, t0.c1, rt0.c1, v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c4, rt0.c3, rt0.c2, t0.c2, rt0.c0, t0.c1, rt0.c1, v0.c0 FROM t1, t0, v0, rt0 GROUP BY rt0.c4, rt0.c3, rt0.c2, t0.c2, rt0.c0, t0.c1, rt0.c1, v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c4, rt0.c3, rt0.c2, t0.c2, rt0.c0, t0.c1, rt0.c1, v0.c0 FROM t1, t0, v0, rt0 GROUP BY rt0.c4, rt0.c3, rt0.c2, t0.c2, rt0.c0, t0.c1, rt0.c1, v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c4, rt0.c3, rt0.c2, t0.c2, rt0.c0, t0.c1, rt0.c1, v0.c0 FROM t1, t0, v0, rt0 GROUP BY rt0.c4, rt0.c3, rt0.c2, t0.c2, rt0.c0, t0.c1, rt0.c1, v0.c0;
SELECT ALL rt0.c4, rt0.c3, rt0.c2, t0.c2, rt0.c0, t0.c1, rt0.c1, v0.c0 FROM t1, t0, v0, rt0 GROUP BY rt0.c4, rt0.c3, rt0.c2, t0.c2, rt0.c0, t0.c1, rt0.c1, v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c4, rt0.c3, rt0.c2, t0.c2, rt0.c0, t0.c1, rt0.c1, v0.c0 FROM t1, t0, v0, rt0 GROUP BY rt0.c4, rt0.c3, rt0.c2, t0.c2, rt0.c0, t0.c1, rt0.c1, v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c4, rt0.c3, rt0.c2, t0.c2, rt0.c0, t0.c1, rt0.c1, v0.c0 FROM t1, t0, v0, rt0 GROUP BY rt0.c4, rt0.c3, rt0.c2, t0.c2, rt0.c0, t0.c1, rt0.c1, v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c4, rt0.c3, rt0.c2, t0.c2, rt0.c0, t0.c1, rt0.c1, v0.c0 FROM t1, t0, v0, rt0 GROUP BY rt0.c4, rt0.c3, rt0.c2, t0.c2, rt0.c0, t0.c1, rt0.c1, v0.c0;
SELECT * FROM t1 LEFT OUTER JOIN t0 ON ((((((((rt0.c3)AND(t0.c0)))OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c1)) COLLATE BINARY INNER JOIN rt0 ON ((((rt0.c0)<(rt0.c0))) NOT BETWEEN (((t0.c1) NOT NULL)) AND (CASE t0.c2  WHEN t0.c2 THEN rt0.c3 ELSE 8.07069633E8 END));
SELECT DISTINCT rt1.c2, rt1.c0, v0.c0, rt1.c3 FROM v0, rt1 NOT INDEXED;
SELECT DISTINCT rt1.c2, rt1.c0, v0.c0, rt1.c3 FROM v0, rt1 WHERE (CASE WHEN SQLITE_SOURCE_ID() THEN x'1d7f' END) UNION SELECT DISTINCT rt1.c2, rt1.c0, v0.c0, rt1.c3 FROM v0, rt1 WHERE ((NOT (CASE WHEN SQLITE_SOURCE_ID() THEN x'1d7f' END))) UNION SELECT DISTINCT rt1.c2, rt1.c0, v0.c0, rt1.c3 FROM v0, rt1 WHERE (((CASE WHEN SQLITE_SOURCE_ID() THEN x'1d7f' END) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c0, v0.c0, rt1.c3 FROM v0, rt1 NOT INDEXED;
SELECT ALL rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0;
SELECT rt1.c2, rt1.c0 FROM rt1 WHERE ((- ((+ (x'd5a7b5b9'))))) GROUP BY rt1.c2, rt1.c0 UNION SELECT rt1.c2, rt1.c0 FROM rt1 WHERE ((NOT ((- ((+ (x'd5a7b5b9'))))))) GROUP BY rt1.c2, rt1.c0 UNION SELECT rt1.c2, rt1.c0 FROM rt1 WHERE ((((- ((+ (x'd5a7b5b9'))))) ISNULL)) GROUP BY rt1.c2, rt1.c0;
SELECT ALL rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0;
SELECT rt0.c4, rt1.c1, rt0.c0, rt0.c3, rt0.c1, rt0.c2, rt1.c2, rt1.c0, rt1.c3 FROM rt1, rt0 GROUP BY rt0.c4, rt1.c1, rt0.c0, rt0.c3, rt0.c1, rt0.c2, rt1.c2, rt1.c0, rt1.c3;
SELECT rt0.c4, rt1.c1, rt0.c0, rt0.c3, rt0.c1, rt0.c2, rt1.c2, rt1.c0, rt1.c3 FROM rt1, rt0 GROUP BY rt0.c4, rt1.c1, rt0.c0, rt0.c3, rt0.c1, rt0.c2, rt1.c2, rt1.c0, rt1.c3 HAVING MAX((NOT (AVG(rt0.c0)))) UNION ALL SELECT rt0.c4, rt1.c1, rt0.c0, rt0.c3, rt0.c1, rt0.c2, rt1.c2, rt1.c0, rt1.c3 FROM rt1, rt0 GROUP BY rt0.c4, rt1.c1, rt0.c0, rt0.c3, rt0.c1, rt0.c2, rt1.c2, rt1.c0, rt1.c3 HAVING (NOT (MAX((NOT (AVG(rt0.c0)))))) UNION ALL SELECT rt0.c4, rt1.c1, rt0.c0, rt0.c3, rt0.c1, rt0.c2, rt1.c2, rt1.c0, rt1.c3 FROM rt1, rt0 GROUP BY rt0.c4, rt1.c1, rt0.c0, rt0.c3, rt0.c1, rt0.c2, rt1.c2, rt1.c0, rt1.c3 HAVING ((MAX((NOT (AVG(rt0.c0))))) ISNULL);
SELECT ALL rt1.c1, rt1.c2, rt1.c0, rt1.c3 FROM rt1;
SELECT ALL rt1.c1, rt1.c2, rt1.c0, rt1.c3 FROM rt1 WHERE ('P/gyE]') UNION ALL SELECT ALL rt1.c1, rt1.c2, rt1.c0, rt1.c3 FROM rt1 WHERE ((NOT ('P/gyE]'))) UNION ALL SELECT ALL rt1.c1, rt1.c2, rt1.c0, rt1.c3 FROM rt1 WHERE ((('P/gyE]') ISNULL));
SELECT ALL rt1.c1, rt1.c2, rt1.c0, rt1.c3 FROM rt1;
SELECT DISTINCT * FROM rt1, rt0;
SELECT DISTINCT * FROM rt1, rt0 WHERE ((+ (((rt0.c4) IS TRUE)))) UNION SELECT DISTINCT * FROM rt1, rt0 WHERE ((NOT ((+ (((rt0.c4) IS TRUE)))))) UNION SELECT DISTINCT * FROM rt1, rt0 WHERE ((((+ (((rt0.c4) IS TRUE)))) ISNULL));
SELECT DISTINCT * FROM rt1, rt0;
SELECT ALL rt0.c0, rt0.c1, rt1.c1, rt1.c2, rt1.c0, rt0.c4, rt0.c3, t1.c0, v0.c0, rt0.c2, rt1.c3 FROM rt0, v0, t1, rt1 GROUP BY rt0.c0, rt0.c1, rt1.c1, rt1.c2, rt1.c0, rt0.c4, rt0.c3, t1.c0, v0.c0, rt0.c2, rt1.c3;
SELECT rt0.c0, rt0.c1, rt1.c1, rt1.c2, rt1.c0, rt0.c4, rt0.c3, t1.c0, v0.c0, rt0.c2, rt1.c3 FROM rt0, v0, t1, rt1 WHERE (UPPER((((rt0.c2))<=((t1.c0))))) GROUP BY rt0.c0, rt0.c1, rt1.c1, rt1.c2, rt1.c0, rt0.c4, rt0.c3, t1.c0, v0.c0, rt0.c2, rt1.c3 UNION SELECT ALL rt0.c0, rt0.c1, rt1.c1, rt1.c2, rt1.c0, rt0.c4, rt0.c3, t1.c0, v0.c0, rt0.c2, rt1.c3 FROM rt0, v0, t1, rt1 WHERE ((NOT (UPPER((((rt0.c2))<=((t1.c0))))))) GROUP BY rt0.c0, rt0.c1, rt1.c1, rt1.c2, rt1.c0, rt0.c4, rt0.c3, t1.c0, v0.c0, rt0.c2, rt1.c3 UNION SELECT ALL rt0.c0, rt0.c1, rt1.c1, rt1.c2, rt1.c0, rt0.c4, rt0.c3, t1.c0, v0.c0, rt0.c2, rt1.c3 FROM rt0, v0, t1, rt1 WHERE (((UPPER((((rt0.c2))<=((t1.c0))))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt1.c1, rt1.c2, rt1.c0, rt0.c4, rt0.c3, t1.c0, v0.c0, rt0.c2, rt1.c3;
SELECT ALL rt0.c0, rt0.c1, rt1.c1, rt1.c2, rt1.c0, rt0.c4, rt0.c3, t1.c0, v0.c0, rt0.c2, rt1.c3 FROM rt0, v0, t1, rt1 GROUP BY rt0.c0, rt0.c1, rt1.c1, rt1.c2, rt1.c0, rt0.c4, rt0.c3, t1.c0, v0.c0, rt0.c2, rt1.c3;
SELECT rt0.c1, rt1.c1, rt1.c0, v0.c0, rt0.c2, rt0.c4, rt1.c3, t1.c0, t0.c1, rt1.c2 FROM t0 FULL OUTER JOIN rt0 ON IFNULL(((rt0.c2)<=(rt1.c0)), CAST(t0.c2 AS INTEGER)) RIGHT OUTER JOIN rt1 ON ((((((t0.c1)<(t0.c2)))OR('2103971342')))OR(CAST(rt1.c3 AS TEXT))) INNER JOIN t1 ON json_quote(((((rt0.c0)AND(t1.c0)))AND(0.62079504932408))) FULL OUTER JOIN v0 ON (((CAST(v0.c0 AS REAL), (NOT (rt1.c1)), rt0.c2 COLLATE BINARY))==((rt1.c1 COLLATE BINARY, ((rt0.c2) BETWEEN (rt1.c1) AND ('WC')), ((t1.c0)-(t0.c0))))) GROUP BY rt0.c1, rt1.c1, rt1.c0, v0.c0, rt0.c2, rt0.c4, rt1.c3, t1.c0, t0.c1, rt1.c2;
SELECT ALL rt1.c0, rt1.c3, rt1.c1, rt1.c2, t1.c0, v0.c0 FROM t1, v0 CROSS JOIN rt1 ON CASE WHEN ((rt1.c0) IS TRUE) THEN CASE WHEN t1.c0 THEN rt1.c0 ELSE v0.c0 END WHEN ((((rt1.c1)OR(rt1.c1)))AND(rt1.c0)) THEN x'' COLLATE BINARY WHEN ((rt1.c3) IS TRUE) THEN t1.c0 COLLATE NOCASE ELSE ((rt1.c2) NOTNULL) END;
SELECT rt1.c0, rt1.c3, rt1.c1, rt1.c2, t1.c0, v0.c0 FROM t1, v0 CROSS JOIN rt1 ON CASE WHEN ((rt1.c0) IS TRUE) THEN CASE WHEN t1.c0 THEN rt1.c0 ELSE v0.c0 END WHEN ((((rt1.c1)OR(rt1.c1)))AND(rt1.c0)) THEN x'' COLLATE BINARY WHEN ((rt1.c3) IS TRUE) THEN t1.c0 COLLATE NOCASE ELSE ((rt1.c2) NOTNULL) END WHERE ((- (((t1.c0) BETWEEN (rt1.c3) AND (rt1.c2))))) UNION ALL SELECT ALL rt1.c0, rt1.c3, rt1.c1, rt1.c2, t1.c0, v0.c0 FROM t1, v0 CROSS JOIN rt1 ON CASE WHEN ((rt1.c0) IS TRUE) THEN CASE WHEN t1.c0 THEN rt1.c0 ELSE v0.c0 END WHEN ((((rt1.c1)OR(rt1.c1)))AND(rt1.c0)) THEN x'' COLLATE BINARY WHEN ((rt1.c3) IS TRUE) THEN t1.c0 COLLATE NOCASE ELSE ((rt1.c2) NOTNULL) END WHERE ((NOT ((- (((t1.c0) BETWEEN (rt1.c3) AND (rt1.c2))))))) UNION ALL SELECT rt1.c0, rt1.c3, rt1.c1, rt1.c2, t1.c0, v0.c0 FROM t1, v0 CROSS JOIN rt1 ON CASE WHEN ((rt1.c0) IS TRUE) THEN CASE WHEN t1.c0 THEN rt1.c0 ELSE v0.c0 END WHEN ((((rt1.c1)OR(rt1.c1)))AND(rt1.c0)) THEN x'' COLLATE BINARY WHEN ((rt1.c3) IS TRUE) THEN t1.c0 COLLATE NOCASE ELSE ((rt1.c2) NOTNULL) END WHERE ((((- (((t1.c0) BETWEEN (rt1.c3) AND (rt1.c2))))) ISNULL));
SELECT ALL rt1.c0, rt1.c3, rt1.c1, rt1.c2, t1.c0, v0.c0 FROM t1, v0 CROSS JOIN rt1 ON CASE WHEN ((rt1.c0) IS TRUE) THEN CASE WHEN t1.c0 THEN rt1.c0 ELSE v0.c0 END WHEN ((((rt1.c1)OR(rt1.c1)))AND(rt1.c0)) THEN x'' COLLATE BINARY WHEN ((rt1.c3) IS TRUE) THEN t1.c0 COLLATE NOCASE ELSE ((rt1.c2) NOTNULL) END;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (t1.c0) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (t1.c0))) UNION SELECT DISTINCT * FROM t1 WHERE (((t1.c0) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT ALL t0.c0, t1.c0 FROM t1 RIGHT OUTER JOIN t0 ON (+ (CAST(x'43ca' AS TEXT))) GROUP BY t0.c0, t1.c0;
SELECT ALL t0.c0, t1.c0 FROM t1 RIGHT OUTER JOIN t0 ON (+ (CAST(x'43ca' AS TEXT))) WHERE (CASE WHEN ((t1.c0)/(t1.c0)) THEN ((((t0.c1)OR(t0.c0)))AND(t0.c2)) WHEN ('-184653989' IN (t0.c1)) THEN (((t1.c0))>((t0.c2))) WHEN ((t0.c2)*(t0.c2)) THEN (- (t1.c0)) ELSE ABS(DISTINCT t0.c2) END) GROUP BY t0.c0, t1.c0 UNION SELECT ALL t0.c0, t1.c0 FROM t1 RIGHT OUTER JOIN t0 ON (+ (CAST(x'43ca' AS TEXT))) WHERE ((NOT (CASE WHEN ((t1.c0)/(t1.c0)) THEN ((((t0.c1)OR(t0.c0)))AND(t0.c2)) WHEN ('-184653989' IN (t0.c1)) THEN (((t1.c0))>((t0.c2))) WHEN ((t0.c2)*(t0.c2)) THEN (- (t1.c0)) ELSE ABS(DISTINCT t0.c2) END))) GROUP BY t0.c0, t1.c0 UNION SELECT ALL t0.c0, t1.c0 FROM t1 RIGHT OUTER JOIN t0 ON (+ (CAST(x'43ca' AS TEXT))) WHERE (((CASE WHEN ((t1.c0)/(t1.c0)) THEN ((((t0.c1)OR(t0.c0)))AND(t0.c2)) WHEN ('-184653989' IN (t0.c1)) THEN (((t1.c0))>((t0.c2))) WHEN ((t0.c2)*(t0.c2)) THEN (- (t1.c0)) ELSE ABS(DISTINCT t0.c2) END) ISNULL)) GROUP BY t0.c0, t1.c0;
SELECT ALL t0.c0, t1.c0 FROM t1 RIGHT OUTER JOIN t0 ON (+ (CAST(x'43ca' AS TEXT))) GROUP BY t0.c0, t1.c0;
SELECT t0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c3, rt0.c0 FROM t1, t0, v0, rt0 GROUP BY t0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c3, rt0.c0;
SELECT t0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c3, rt0.c0 FROM t1, t0, v0, rt0 GROUP BY t0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c3, rt0.c0 HAVING MIN(CAST(t0.c2 AS BLOB)) UNION ALL SELECT ALL t0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c3, rt0.c0 FROM t1, t0, v0, rt0 GROUP BY t0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c3, rt0.c0 HAVING (NOT (MIN(CAST(t0.c2 AS BLOB)))) UNION ALL SELECT ALL t0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c3, rt0.c0 FROM t1, t0, v0, rt0 GROUP BY t0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c3, rt0.c0 HAVING ((MIN(CAST(t0.c2 AS BLOB))) ISNULL);
SELECT t0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c3, rt0.c0 FROM t1, t0, v0, rt0 GROUP BY t0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c3, rt0.c0;
SELECT t0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c3, rt0.c0 FROM t1, t0, v0, rt0 GROUP BY t0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c3, rt0.c0 HAVING MIN(CAST(t0.c2 AS BLOB)) UNION ALL SELECT ALL t0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c3, rt0.c0 FROM t1, t0, v0, rt0 GROUP BY t0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c3, rt0.c0 HAVING (NOT (MIN(CAST(t0.c2 AS BLOB)))) UNION ALL SELECT ALL t0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c3, rt0.c0 FROM t1, t0, v0, rt0 GROUP BY t0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c3, rt0.c0 HAVING ((MIN(CAST(t0.c2 AS BLOB))) ISNULL);
SELECT t0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c3, rt0.c0 FROM t1, t0, v0, rt0 GROUP BY t0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c3, rt0.c0;
SELECT ALL rt0.c4, rt0.c0, rt0.c3 FROM rt0, v0;
SELECT ALL rt0.c4, rt0.c0, rt0.c3 FROM rt0, v0 WHERE (UPPER((rt0.c1 IN ()))) UNION ALL SELECT rt0.c4, rt0.c0, rt0.c3 FROM rt0, v0 WHERE ((NOT (UPPER((rt0.c1 IN ()))))) UNION ALL SELECT ALL rt0.c4, rt0.c0, rt0.c3 FROM rt0, v0 WHERE (((UPPER((rt0.c1 IN ()))) ISNULL));
SELECT ALL rt0.c4, rt0.c0, rt0.c3 FROM rt0, v0;
SELECT DISTINCT * FROM t0, rt1, t1;
SELECT DISTINCT * FROM t0, rt1, t1 WHERE (((t0.c1)*(rt1.c3)) COLLATE NOCASE COLLATE NOCASE) UNION SELECT DISTINCT * FROM t0, rt1, t1 WHERE ((NOT (((t0.c1)*(rt1.c3)) COLLATE NOCASE COLLATE NOCASE))) UNION SELECT DISTINCT * FROM t0, rt1, t1 WHERE (((((t0.c1)*(rt1.c3)) COLLATE NOCASE COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM t0, rt1, t1;
SELECT t1.c0, t0.c0, rt1.c0, t0.c1, rt1.c1, v0.c0, rt1.c3 FROM rt1, t0, t1, v0 GROUP BY t1.c0, t0.c0, rt1.c0, t0.c1, rt1.c1, v0.c0, rt1.c3;
SELECT ALL t1.c0, t0.c0, rt1.c0, t0.c1, rt1.c1, v0.c0, rt1.c3 FROM rt1, t0, t1, v0 WHERE (((v0.c0 COLLATE RTRIM)&(NULL))) GROUP BY t1.c0, t0.c0, rt1.c0, t0.c1, rt1.c1, v0.c0, rt1.c3 UNION SELECT t1.c0, t0.c0, rt1.c0, t0.c1, rt1.c1, v0.c0, rt1.c3 FROM rt1, t0, t1, v0 WHERE ((NOT (((v0.c0 COLLATE RTRIM)&(NULL))))) GROUP BY t1.c0, t0.c0, rt1.c0, t0.c1, rt1.c1, v0.c0, rt1.c3 UNION SELECT t1.c0, t0.c0, rt1.c0, t0.c1, rt1.c1, v0.c0, rt1.c3 FROM rt1, t0, t1, v0 WHERE (((((v0.c0 COLLATE RTRIM)&(NULL))) ISNULL)) GROUP BY t1.c0, t0.c0, rt1.c0, t0.c1, rt1.c1, v0.c0, rt1.c3;
SELECT t1.c0, t0.c0, rt1.c0, t0.c1, rt1.c1, v0.c0, rt1.c3 FROM rt1, t0, t1, v0 GROUP BY t1.c0, t0.c0, rt1.c0, t0.c1, rt1.c1, v0.c0, rt1.c3;
SELECT ALL rt0.c2, v0.c0 FROM t1 RIGHT OUTER JOIN rt1 ON ('2023347333' IN ()) LEFT OUTER JOIN t0 ON LIKELIHOOD(DISTINCT (- (t1.c0)), 0.29806498874839404) CROSS JOIN rt0 ON ((CASE WHEN v0.c0 THEN rt0.c1 ELSE rt0.c0 END) NOTNULL) LEFT OUTER JOIN v0 ON ((((CASE WHEN t0.c1 THEN rt1.c0 END)OR(t0.c2)))AND(NULL)) GROUP BY rt0.c2, v0.c0;
SELECT t0.c0 FROM t0, rt0, rt1, t1, v0;
SELECT t0.c0 FROM t0, rt0, rt1, t1, v0 WHERE (((rt0.c2)|(((t0.c2)>>(t0.c1))))) UNION ALL SELECT ALL t0.c0 FROM t0, rt0, rt1, t1, v0 WHERE ((NOT (((rt0.c2)|(((t0.c2)>>(t0.c1))))))) UNION ALL SELECT t0.c0 FROM t0, rt0, rt1, t1, v0 WHERE (((((rt0.c2)|(((t0.c2)>>(t0.c1))))) ISNULL));
SELECT t0.c0 FROM t0, rt0, rt1, t1, v0;
SELECT DISTINCT * FROM v0, t0;
SELECT DISTINCT * FROM v0, t0 WHERE (((-2.3653107E8)*(((t0.c2)LIKE(v0.c0))))) UNION SELECT DISTINCT * FROM v0, t0 WHERE ((NOT (((-2.3653107E8)*(((t0.c2)LIKE(v0.c0))))))) UNION SELECT DISTINCT * FROM v0, t0 WHERE (((((-2.3653107E8)*(((t0.c2)LIKE(v0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0, t0;
SELECT rt1.c0, rt0.c2, rt1.c2, rt1.c1, t0.c2, rt0.c0, t0.c0, t1.c0, rt1.c3, rt0.c1, t0.c1, rt0.c3, rt0.c4 FROM rt0, rt1 RIGHT OUTER JOIN t0 ON ((((rt0.c0)/(rt0.c2)))|(((rt1.c2)*(rt1.c1)))) LEFT OUTER JOIN t1 ON ((((((((t0.c1)OR(t0.c0)))OR(rt1.c0)))AND((- (t0.c1)))))AND((~ (rt0.c4)))) GROUP BY rt1.c0, rt0.c2, rt1.c2, rt1.c1, t0.c2, rt0.c0, t0.c0, t1.c0, rt1.c3, rt0.c1, t0.c1, rt0.c3, rt0.c4;
SELECT ALL rt1.c0, rt0.c2, rt1.c2, rt1.c1, t0.c2, rt0.c0, t0.c0, t1.c0, rt1.c3, rt0.c1, t0.c1, rt0.c3, rt0.c4 FROM rt0, rt1 RIGHT OUTER JOIN t0 ON ((((rt0.c0)/(rt0.c2)))|(((rt1.c2)*(rt1.c1)))) LEFT OUTER JOIN t1 ON ((((((((t0.c1)OR(t0.c0)))OR(rt1.c0)))AND((- (t0.c1)))))AND((~ (rt0.c4)))) WHERE (CASE (((t0.c2))=((rt0.c4)))  WHEN (~ (rt0.c1)) THEN ((rt1.c1)GLOB('')) ELSE rt0.c2 END) GROUP BY rt1.c0, rt0.c2, rt1.c2, rt1.c1, t0.c2, rt0.c0, t0.c0, t1.c0, rt1.c3, rt0.c1, t0.c1, rt0.c3, rt0.c4 UNION SELECT ALL rt1.c0, rt0.c2, rt1.c2, rt1.c1, t0.c2, rt0.c0, t0.c0, t1.c0, rt1.c3, rt0.c1, t0.c1, rt0.c3, rt0.c4 FROM rt0, rt1 RIGHT OUTER JOIN t0 ON ((((rt0.c0)/(rt0.c2)))|(((rt1.c2)*(rt1.c1)))) LEFT OUTER JOIN t1 ON ((((((((t0.c1)OR(t0.c0)))OR(rt1.c0)))AND((- (t0.c1)))))AND((~ (rt0.c4)))) WHERE ((NOT (CASE (((t0.c2))=((rt0.c4)))  WHEN (~ (rt0.c1)) THEN ((rt1.c1)GLOB('')) ELSE rt0.c2 END))) GROUP BY rt1.c0, rt0.c2, rt1.c2, rt1.c1, t0.c2, rt0.c0, t0.c0, t1.c0, rt1.c3, rt0.c1, t0.c1, rt0.c3, rt0.c4 UNION SELECT ALL rt1.c0, rt0.c2, rt1.c2, rt1.c1, t0.c2, rt0.c0, t0.c0, t1.c0, rt1.c3, rt0.c1, t0.c1, rt0.c3, rt0.c4 FROM rt0, rt1 RIGHT OUTER JOIN t0 ON ((((rt0.c0)/(rt0.c2)))|(((rt1.c2)*(rt1.c1)))) LEFT OUTER JOIN t1 ON ((((((((t0.c1)OR(t0.c0)))OR(rt1.c0)))AND((- (t0.c1)))))AND((~ (rt0.c4)))) WHERE (((CASE (((t0.c2))=((rt0.c4)))  WHEN (~ (rt0.c1)) THEN ((rt1.c1)GLOB('')) ELSE rt0.c2 END) ISNULL)) GROUP BY rt1.c0, rt0.c2, rt1.c2, rt1.c1, t0.c2, rt0.c0, t0.c0, t1.c0, rt1.c3, rt0.c1, t0.c1, rt0.c3, rt0.c4;
SELECT rt1.c0, rt0.c2, rt1.c2, rt1.c1, t0.c2, rt0.c0, t0.c0, t1.c0, rt1.c3, rt0.c1, t0.c1, rt0.c3, rt0.c4 FROM rt0, rt1 RIGHT OUTER JOIN t0 ON ((((rt0.c0)/(rt0.c2)))|(((rt1.c2)*(rt1.c1)))) LEFT OUTER JOIN t1 ON ((((((((t0.c1)OR(t0.c0)))OR(rt1.c0)))AND((- (t0.c1)))))AND((~ (rt0.c4)))) GROUP BY rt1.c0, rt0.c2, rt1.c2, rt1.c1, t0.c2, rt0.c0, t0.c0, t1.c0, rt1.c3, rt0.c1, t0.c1, rt0.c3, rt0.c4;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING SUM((((0.5472665231822943))=((t1.c0)))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (SUM((((0.5472665231822943))=((t1.c0)))))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((SUM((((0.5472665231822943))==((t1.c0))))) ISNULL);
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING SUM((((0.5472665231822943))=((t1.c0)))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (SUM((((0.5472665231822943))=((t1.c0)))))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((SUM((((0.5472665231822943))==((t1.c0))))) ISNULL);
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0, rt1.c0, rt1.c3 FROM t1 FULL OUTER JOIN rt1 ON (((((rt1.c2 IN ()))OR((((rt1.c1))<>((t1.c0))))))OR(((rt1.c2)==(t1.c0))));
SELECT ALL t1.c0, rt1.c0, rt1.c3 FROM t1 FULL OUTER JOIN rt1 ON (((((rt1.c2 IN ()))OR((((rt1.c1))!=((t1.c0))))))OR(((rt1.c2)==(t1.c0)))) WHERE (((((rt1.c3)==(rt1.c0))) NOT BETWEEN ((((rt1.c3)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c2)))) AND (CAST(rt1.c3 AS INTEGER)))) UNION ALL SELECT t1.c0, rt1.c0, rt1.c3 FROM t1 FULL OUTER JOIN rt1 ON (((((rt1.c2 IN ()))OR((((rt1.c1))!=((t1.c0))))))OR(((rt1.c2)=(t1.c0)))) WHERE ((NOT (((((rt1.c3)=(rt1.c0))) NOT BETWEEN ((((rt1.c3)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c2)))) AND (CAST(rt1.c3 AS INTEGER)))))) UNION ALL SELECT t1.c0, rt1.c0, rt1.c3 FROM t1 FULL OUTER JOIN rt1 ON (((((rt1.c2 IN ()))OR((((rt1.c1))!=((t1.c0))))))OR(((rt1.c2)==(t1.c0)))) WHERE (((((((rt1.c3)==(rt1.c0))) NOT BETWEEN ((((rt1.c3)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c2)))) AND (CAST(rt1.c3 AS INTEGER)))) ISNULL));
SELECT ALL t1.c0, rt1.c0, rt1.c3 FROM t1 FULL OUTER JOIN rt1 ON (((((rt1.c2 IN ()))OR((((rt1.c1))<>((t1.c0))))))OR(((rt1.c2)==(t1.c0))));
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE ((((t0.c2 IN ())) ISNULL)) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT ((((t0.c2 IN ())) ISNULL)))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((((((t0.c2 IN ())) ISNULL)) ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT v0.c0 FROM rt0, rt1, v0, t1, t0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM rt0, rt1, v0, t1, t0 WHERE (((((rt1.c0) NOTNULL)) NOT BETWEEN (((x'')<<(rt0.c2))) AND ((~ (rt0.c4))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM rt0, rt1, v0, t1, t0 WHERE ((NOT (((((rt1.c0) NOTNULL)) NOT BETWEEN (((x'')<<(rt0.c2))) AND ((~ (rt0.c4))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM rt0, rt1, v0, t1, t0 WHERE (((((((rt1.c0) NOTNULL)) NOT BETWEEN (((x'')<<(rt0.c2))) AND ((~ (rt0.c4))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM rt0, rt1, v0, t1, t0 GROUP BY v0.c0;
SELECT ALL v0.c0, t1.c0 FROM v0, t1 GROUP BY v0.c0, t1.c0;
SELECT v0.c0, t1.c0 FROM v0, t1 GROUP BY v0.c0, t1.c0 HAVING ((MIN(t1.c0))>=(COUNT(*))) UNION ALL SELECT ALL v0.c0, t1.c0 FROM v0, t1 GROUP BY v0.c0, t1.c0 HAVING (NOT (((MIN(t1.c0))>=(COUNT(*))))) UNION ALL SELECT ALL v0.c0, t1.c0 FROM v0, t1 GROUP BY v0.c0, t1.c0 HAVING ((((MIN(t1.c0))>=(COUNT(*)))) ISNULL);
SELECT ALL v0.c0, t1.c0 FROM v0, t1 GROUP BY v0.c0, t1.c0;
SELECT v0.c0, t1.c0 FROM v0, t1 GROUP BY v0.c0, t1.c0 HAVING ((MIN(t1.c0))>=(COUNT(*))) UNION ALL SELECT ALL v0.c0, t1.c0 FROM v0, t1 GROUP BY v0.c0, t1.c0 HAVING (NOT (((MIN(t1.c0))>=(COUNT(*))))) UNION ALL SELECT ALL v0.c0, t1.c0 FROM v0, t1 GROUP BY v0.c0, t1.c0 HAVING ((((MIN(t1.c0))>=(COUNT(*)))) ISNULL);
SELECT ALL v0.c0, t1.c0 FROM v0, t1 GROUP BY v0.c0, t1.c0;
SELECT ALL * FROM v0, t1;
SELECT * FROM v0, t1 WHERE ((- (v0.c0 COLLATE RTRIM))) UNION ALL SELECT * FROM v0, t1 WHERE ((NOT ((- (v0.c0 COLLATE RTRIM))))) UNION ALL SELECT ALL * FROM v0, t1 WHERE ((((- (v0.c0 COLLATE RTRIM))) ISNULL));
SELECT ALL * FROM v0, t1;
SELECT DISTINCT * FROM v0, t1 NOT INDEXED LEFT OUTER JOIN rt0 ON COALESCE(((rt0.c0)/(NULL)), ((0.4144209315808238)||(rt0.c3)));
SELECT DISTINCT * FROM v0, t1 LEFT OUTER JOIN rt0 ON COALESCE(((rt0.c0)/(NULL)), ((0.4144209315808238)||(rt0.c3))) WHERE (((((0)OR(rt0.c4)))AND(rt0.c0))) UNION SELECT DISTINCT * FROM v0, t1 LEFT OUTER JOIN rt0 ON COALESCE(((rt0.c0)/(NULL)), ((0.4144209315808238)||(rt0.c3))) WHERE ((NOT (((((0)OR(rt0.c4)))AND(rt0.c0))))) UNION SELECT DISTINCT * FROM v0, t1 LEFT OUTER JOIN rt0 ON COALESCE(((rt0.c0)/(NULL)), ((0.4144209315808238)||(rt0.c3))) WHERE (((((((0)OR(rt0.c4)))AND(rt0.c0))) ISNULL));
SELECT DISTINCT * FROM v0, t1 NOT INDEXED LEFT OUTER JOIN rt0 ON COALESCE(((rt0.c0)/(NULL)), ((0.4144209315808238)||(rt0.c3)));
SELECT rt0.c1, t0.c2, t0.c1, rt0.c0, rt0.c4, v0.c0, rt0.c3, t0.c0 FROM t0, v0, rt0 GROUP BY rt0.c1, t0.c2, t0.c1, rt0.c0, rt0.c4, v0.c0, rt0.c3, t0.c0;
SELECT ALL rt0.c1, t0.c2, t0.c1, rt0.c0, rt0.c4, v0.c0, rt0.c3, t0.c0 FROM t0, v0, rt0 WHERE (CASE rt0.c0  WHEN CAST(t0.c2 AS NUMERIC) THEN ((t0.c1) NOT NULL) ELSE CASE WHEN t0.c1 THEN rt0.c1 ELSE rt0.c3 END END) GROUP BY rt0.c1, t0.c2, t0.c1, rt0.c0, rt0.c4, v0.c0, rt0.c3, t0.c0 UNION SELECT rt0.c1, t0.c2, t0.c1, rt0.c0, rt0.c4, v0.c0, rt0.c3, t0.c0 FROM t0, v0, rt0 WHERE ((NOT (CASE rt0.c0  WHEN CAST(t0.c2 AS NUMERIC) THEN ((t0.c1) NOT NULL) ELSE CASE WHEN t0.c1 THEN rt0.c1 ELSE rt0.c3 END END))) GROUP BY rt0.c1, t0.c2, t0.c1, rt0.c0, rt0.c4, v0.c0, rt0.c3, t0.c0 UNION SELECT ALL rt0.c1, t0.c2, t0.c1, rt0.c0, rt0.c4, v0.c0, rt0.c3, t0.c0 FROM t0, v0, rt0 WHERE (((CASE rt0.c0  WHEN CAST(t0.c2 AS NUMERIC) THEN ((t0.c1) NOT NULL) ELSE CASE WHEN t0.c1 THEN rt0.c1 ELSE rt0.c3 END END) ISNULL)) GROUP BY rt0.c1, t0.c2, t0.c1, rt0.c0, rt0.c4, v0.c0, rt0.c3, t0.c0;
SELECT rt0.c1, t0.c2, t0.c1, rt0.c0, rt0.c4, v0.c0, rt0.c3, t0.c0 FROM t0, v0, rt0 GROUP BY rt0.c1, t0.c2, t0.c1, rt0.c0, rt0.c4, v0.c0, rt0.c3, t0.c0;
SELECT rt0.c4, t0.c2 FROM t0, v0, rt1, rt0, t1 GROUP BY rt0.c4, t0.c2;
SELECT rt0.c4, t0.c2 FROM t0, v0, rt1, rt0, t1 GROUP BY rt0.c4, t0.c2 HAVING COUNT(*) UNION ALL SELECT rt0.c4, t0.c2 FROM t0, v0, rt1, rt0, t1 GROUP BY rt0.c4, t0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c4, t0.c2 FROM t0, v0, rt1, rt0, t1 GROUP BY rt0.c4, t0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c4, t0.c2 FROM t0, v0, rt1, rt0, t1 GROUP BY rt0.c4, t0.c2;
SELECT rt0.c4, t0.c2 FROM t0, v0, rt1, rt0, t1 GROUP BY rt0.c4, t0.c2 HAVING COUNT(*) UNION ALL SELECT rt0.c4, t0.c2 FROM t0, v0, rt1, rt0, t1 GROUP BY rt0.c4, t0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c4, t0.c2 FROM t0, v0, rt1, rt0, t1 GROUP BY rt0.c4, t0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c4, t0.c2 FROM t0, v0, rt1, rt0, t1 GROUP BY rt0.c4, t0.c2;
SELECT * FROM rt1, t1;
SELECT ALL * FROM rt1, t1 WHERE ((~ (((rt1.c1) BETWEEN (t1.c0) AND (rt1.c3))))) UNION ALL SELECT ALL * FROM rt1, t1 WHERE ((NOT ((~ (((rt1.c1) BETWEEN (t1.c0) AND (rt1.c3))))))) UNION ALL SELECT ALL * FROM rt1, t1 WHERE ((((~ (((rt1.c1) BETWEEN (t1.c0) AND (rt1.c3))))) ISNULL));
SELECT * FROM rt1, t1;
SELECT DISTINCT * FROM t1, v0, rt0, t0, rt1;
SELECT DISTINCT * FROM t1, v0, rt0, t0, rt1 WHERE (((t1.c0)/(rt1.c0)) COLLATE NOCASE) UNION SELECT DISTINCT * FROM t1, v0, rt0, t0, rt1 WHERE ((NOT (((t1.c0)/(rt1.c0)) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM t1, v0, rt0, t0, rt1 WHERE (((((t1.c0)/(rt1.c0)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM t1, v0, rt0, t0, rt1;
SELECT ALL rt0.c4, t0.c1, t1.c0, rt0.c0, t0.c0, rt0.c1, rt0.c3, t0.c2, rt1.c0 FROM rt0, rt1, t1, t0, v0 GROUP BY rt0.c4, t0.c1, t1.c0, rt0.c0, t0.c0, rt0.c1, rt0.c3, t0.c2, rt1.c0;
SELECT ALL rt0.c4, t0.c1, t1.c0, rt0.c0, t0.c0, rt0.c1, rt0.c3, t0.c2, rt1.c0 FROM rt0, rt1, t1, t0, v0 WHERE ((((t0.c1)) BETWEEN (((- (t0.c0)))) AND ((CAST(rt1.c3 AS REAL))))) GROUP BY rt0.c4, t0.c1, t1.c0, rt0.c0, t0.c0, rt0.c1, rt0.c3, t0.c2, rt1.c0 UNION SELECT rt0.c4, t0.c1, t1.c0, rt0.c0, t0.c0, rt0.c1, rt0.c3, t0.c2, rt1.c0 FROM rt0, rt1, t1, t0, v0 NOT INDEXED WHERE ((NOT ((((t0.c1)) BETWEEN (((- (t0.c0)))) AND ((CAST(rt1.c3 AS REAL))))))) GROUP BY rt0.c4, t0.c1, t1.c0, rt0.c0, t0.c0, rt0.c1, rt0.c3, t0.c2, rt1.c0 UNION SELECT rt0.c4, t0.c1, t1.c0, rt0.c0, t0.c0, rt0.c1, rt0.c3, t0.c2, rt1.c0 FROM rt0, rt1, t1, t0, v0 WHERE ((((((t0.c1)) BETWEEN (((- (t0.c0)))) AND ((CAST(rt1.c3 AS REAL))))) ISNULL)) GROUP BY rt0.c4, t0.c1, t1.c0, rt0.c0, t0.c0, rt0.c1, rt0.c3, t0.c2, rt1.c0;
SELECT ALL rt0.c4, t0.c1, t1.c0, rt0.c0, t0.c0, rt0.c1, rt0.c3, t0.c2, rt1.c0 FROM rt0, rt1, t1, t0, v0 GROUP BY rt0.c4, t0.c1, t1.c0, rt0.c0, t0.c0, rt0.c1, rt0.c3, t0.c2, rt1.c0;
SELECT rt0.c0, rt1.c0, t0.c0, rt0.c4, t0.c1, rt0.c1, t0.c2 FROM t1 LEFT OUTER JOIN v0 ON ((t0.c0 COLLATE NOCASE) IS TRUE) INNER JOIN rt1 ON rt1.c2 COLLATE RTRIM RIGHT OUTER JOIN rt0 ON LIKELY((rt1.c3 IN ())) CROSS JOIN t0 ON ((rt1.c3)>=(rt0.c2)) COLLATE RTRIM GROUP BY rt0.c0, rt1.c0, t0.c0, rt0.c4, t0.c1, rt0.c1, t0.c2;
SELECT ALL v0.c0, rt0.c1 FROM v0, rt0, rt1;
SELECT v0.c0, rt0.c1 FROM v0, rt0, rt1 WHERE (x'') UNION ALL SELECT ALL v0.c0, rt0.c1 FROM v0, rt0, rt1 WHERE ((NOT (x''))) UNION ALL SELECT v0.c0, rt0.c1 FROM v0, rt0, rt1 WHERE (((x'') ISNULL));
SELECT ALL v0.c0, rt0.c1 FROM v0, rt0, rt1;
SELECT DISTINCT * FROM t1, v0;
SELECT DISTINCT * FROM t1, v0 WHERE (((0.41197513923093754)>(v0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM t1, v0 WHERE ((NOT (((0.41197513923093754)>(v0.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT * FROM t1, v0 WHERE (((((0.41197513923093754)>(v0.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT * FROM t1, v0;
SELECT ALL t0.c0, t0.c1, rt1.c1 FROM rt1, t0 GROUP BY t0.c0, t0.c1, rt1.c1;
SELECT ALL t0.c0, t0.c1, rt1.c1 FROM rt1, t0 WHERE (((rt1.c0)GLOB(((t0.c1) NOTNULL)))) GROUP BY t0.c0, t0.c1, rt1.c1 UNION SELECT t0.c0, t0.c1, rt1.c1 FROM rt1, t0 WHERE ((NOT (((rt1.c0)GLOB(((t0.c1) NOTNULL)))))) GROUP BY t0.c0, t0.c1, rt1.c1 UNION SELECT ALL t0.c0, t0.c1, rt1.c1 FROM rt1, t0 WHERE (((((rt1.c0)GLOB(((t0.c1) NOTNULL)))) ISNULL)) GROUP BY t0.c0, t0.c1, rt1.c1;
SELECT ALL t0.c0, t0.c1, rt1.c1 FROM rt1, t0 GROUP BY t0.c0, t0.c1, rt1.c1;
SELECT rt0.c2, rt0.c1, t0.c2, rt0.c4, rt0.c0, rt0.c3, t0.c0 FROM t1, rt0, t0 NOT INDEXED GROUP BY rt0.c2, rt0.c1, t0.c2, rt0.c4, rt0.c0, rt0.c3, t0.c0;
SELECT ALL rt0.c2, rt0.c1, t0.c2, rt0.c4, rt0.c0, rt0.c3, t0.c0 FROM t1, rt0, t0 GROUP BY rt0.c2, rt0.c1, t0.c2, rt0.c4, rt0.c0, rt0.c3, t0.c0 HAVING json(COUNT(*) COLLATE BINARY) UNION ALL SELECT rt0.c2, rt0.c1, t0.c2, rt0.c4, rt0.c0, rt0.c3, t0.c0 FROM t1, rt0, t0 GROUP BY rt0.c2, rt0.c1, t0.c2, rt0.c4, rt0.c0, rt0.c3, t0.c0 HAVING (NOT (json(COUNT(*) COLLATE BINARY))) UNION ALL SELECT rt0.c2, rt0.c1, t0.c2, rt0.c4, rt0.c0, rt0.c3, t0.c0 FROM t1, rt0, t0 GROUP BY rt0.c2, rt0.c1, t0.c2, rt0.c4, rt0.c0, rt0.c3, t0.c0 HAVING ((json(COUNT(*) COLLATE BINARY)) ISNULL);
SELECT rt0.c2, rt0.c1, t0.c2, rt0.c4, rt0.c0, rt0.c3, t0.c0 FROM t1, rt0, t0 NOT INDEXED GROUP BY rt0.c2, rt0.c1, t0.c2, rt0.c4, rt0.c0, rt0.c3, t0.c0;
SELECT ALL rt0.c2, rt0.c1, t0.c2, rt0.c4, rt0.c0, rt0.c3, t0.c0 FROM t1, rt0, t0 GROUP BY rt0.c2, rt0.c1, t0.c2, rt0.c4, rt0.c0, rt0.c3, t0.c0 HAVING json(COUNT(*) COLLATE BINARY) UNION ALL SELECT rt0.c2, rt0.c1, t0.c2, rt0.c4, rt0.c0, rt0.c3, t0.c0 FROM t1, rt0, t0 GROUP BY rt0.c2, rt0.c1, t0.c2, rt0.c4, rt0.c0, rt0.c3, t0.c0 HAVING (NOT (json(COUNT(*) COLLATE BINARY))) UNION ALL SELECT rt0.c2, rt0.c1, t0.c2, rt0.c4, rt0.c0, rt0.c3, t0.c0 FROM t1, rt0, t0 GROUP BY rt0.c2, rt0.c1, t0.c2, rt0.c4, rt0.c0, rt0.c3, t0.c0 HAVING ((json(COUNT(*) COLLATE BINARY)) ISNULL);
SELECT rt0.c2, rt0.c1, t0.c2, rt0.c4, rt0.c0, rt0.c3, t0.c0 FROM t1, rt0, t0 NOT INDEXED GROUP BY rt0.c2, rt0.c1, t0.c2, rt0.c4, rt0.c0, rt0.c3, t0.c0;
SELECT SUM((0.9089377662210801 IN (((rt1.c1) IS FALSE)))) FROM t1, v0, t0, rt1 ORDER BY ((((((((((t1.c0)OR(rt1.c3)))OR(t1.c0)))AND(NULL)))AND(rt1.c0)))+(IFNULL(rt1.c3, v0.c0))), CASE CAST(t1.c0 AS BLOB)  WHEN CASE WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c0 END THEN ((rt1.c1)&(t1.c0)) END, t0.c0 DESC  NULLS LAST;
SELECT * FROM rt0 FULL OUTER JOIN t0 ON NULL FULL OUTER JOIN rt1 ON (rt0.c2 COLLATE RTRIM IN ());
SELECT ALL * FROM rt0 FULL OUTER JOIN t0 ON NULL FULL OUTER JOIN rt1 ON (rt0.c2 COLLATE RTRIM IN ()) WHERE ((((((((rt0.c3)OR(rt1.c2)))OR(t0.c0))))<=((rt1.c2 COLLATE BINARY)))) UNION ALL SELECT * FROM rt0 FULL OUTER JOIN t0 ON NULL FULL OUTER JOIN rt1 ON (rt0.c2 COLLATE RTRIM IN ()) WHERE ((NOT ((((((((rt0.c3)OR(rt1.c2)))OR(t0.c0))))<=((rt1.c2 COLLATE BINARY)))))) UNION ALL SELECT ALL * FROM rt0 FULL OUTER JOIN t0 ON NULL FULL OUTER JOIN rt1 ON (rt0.c2 COLLATE RTRIM IN ()) WHERE ((((((((((rt0.c3)OR(rt1.c2)))OR(t0.c0))))<=((rt1.c2 COLLATE BINARY)))) ISNULL));
SELECT * FROM rt0 FULL OUTER JOIN t0 ON NULL FULL OUTER JOIN rt1 ON (rt0.c2 COLLATE RTRIM IN ());
SELECT DISTINCT * FROM t1, rt0, v0, rt1;
SELECT DISTINCT * FROM t1, rt0, v0, rt1 WHERE (t1.c0) UNION SELECT DISTINCT * FROM t1, rt0, v0, rt1 WHERE ((NOT (t1.c0))) UNION SELECT DISTINCT * FROM t1, rt0, v0, rt1 WHERE (((t1.c0) ISNULL));
SELECT DISTINCT * FROM t1, rt0, v0, rt1;
SELECT rt1.c3, rt0.c4, rt1.c2 FROM rt0 LEFT OUTER JOIN t1 ON LAST_INSERT_ROWID() FULL OUTER JOIN rt1 ON ((((rt0.c0)>=(t0.c1)))!=(((t1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) FULL OUTER JOIN v0 ON ((CAST(rt0.c1 AS TEXT)) NOT BETWEEN ((- (rt1.c3))) AND (rt0.c0 COLLATE NOCASE)) CROSS JOIN t0 ON (((v0.c0)GLOB(rt1.c0)) IN ()) GROUP BY rt1.c3, rt0.c4, rt1.c2;
SELECT ALL rt1.c3, rt0.c4, rt1.c2 FROM rt0 LEFT OUTER JOIN t1 ON LAST_INSERT_ROWID() FULL OUTER JOIN rt1 ON ((((rt0.c0)>=(t0.c1)))!=(((t1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) FULL OUTER JOIN v0 ON ((CAST(rt0.c1 AS TEXT)) NOT BETWEEN ((- (rt1.c3))) AND (rt0.c0 COLLATE NOCASE)) CROSS JOIN t0 ON (((v0.c0)GLOB(rt1.c0)) IN ()) WHERE (((rt1.c0) NOT NULL)) GROUP BY rt1.c3, rt0.c4, rt1.c2 UNION SELECT rt1.c3, rt0.c4, rt1.c2 FROM rt0 LEFT OUTER JOIN t1 ON LAST_INSERT_ROWID() FULL OUTER JOIN rt1 ON ((((rt0.c0)>=(t0.c1)))!=(((t1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) FULL OUTER JOIN v0 ON ((CAST(rt0.c1 AS TEXT)) NOT BETWEEN ((- (rt1.c3))) AND (rt0.c0 COLLATE NOCASE)) CROSS JOIN t0 ON (((v0.c0)GLOB(rt1.c0)) IN ()) WHERE ((NOT (((rt1.c0) NOT NULL)))) GROUP BY rt1.c3, rt0.c4, rt1.c2 UNION SELECT ALL rt1.c3, rt0.c4, rt1.c2 FROM rt0 LEFT OUTER JOIN t1 ON LAST_INSERT_ROWID() FULL OUTER JOIN rt1 ON ((((rt0.c0)>=(t0.c1)))!=(((t1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) FULL OUTER JOIN v0 ON ((CAST(rt0.c1 AS TEXT)) NOT BETWEEN ((- (rt1.c3))) AND (rt0.c0 COLLATE NOCASE)) CROSS JOIN t0 ON (((v0.c0)GLOB(rt1.c0)) IN ()) WHERE (((((rt1.c0) NOT NULL)) ISNULL)) GROUP BY rt1.c3, rt0.c4, rt1.c2;
SELECT rt1.c3, rt0.c4, rt1.c2 FROM rt0 LEFT OUTER JOIN t1 ON LAST_INSERT_ROWID() FULL OUTER JOIN rt1 ON ((((rt0.c0)>=(t0.c1)))!=(((t1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) FULL OUTER JOIN v0 ON ((CAST(rt0.c1 AS TEXT)) NOT BETWEEN ((- (rt1.c3))) AND (rt0.c0 COLLATE NOCASE)) CROSS JOIN t0 ON (((v0.c0)GLOB(rt1.c0)) IN ()) GROUP BY rt1.c3, rt0.c4, rt1.c2;
SELECT t0.c1, t0.c2 FROM t0, t1 GROUP BY t0.c1, t0.c2;
SELECT t0.c1, t0.c2 FROM t0, t1 GROUP BY t0.c1, t0.c2 HAVING '1763018420' UNION ALL SELECT t0.c1, t0.c2 FROM t0, t1 GROUP BY t0.c1, t0.c2 HAVING (NOT ('1763018420')) UNION ALL SELECT ALL t0.c1, t0.c2 FROM t0, t1 GROUP BY t0.c1, t0.c2 HAVING (('1763018420') ISNULL);
SELECT t0.c1, t0.c2 FROM t0, t1 GROUP BY t0.c1, t0.c2;
SELECT t0.c1, t0.c2 FROM t0, t1 GROUP BY t0.c1, t0.c2 HAVING '1763018420' UNION ALL SELECT t0.c1, t0.c2 FROM t0, t1 GROUP BY t0.c1, t0.c2 HAVING (NOT ('1763018420')) UNION ALL SELECT ALL t0.c1, t0.c2 FROM t0, t1 GROUP BY t0.c1, t0.c2 HAVING (('1763018420') ISNULL);
SELECT t0.c1, t0.c2 FROM t0, t1 GROUP BY t0.c1, t0.c2;
SELECT t0.c2, rt0.c1, rt0.c4, t0.c0, t1.c0, rt0.c3, rt1.c1, v0.c0, t0.c1 FROM rt0, t0, t1, rt1 CROSS JOIN v0 ON CASE WHEN t0.c0 THEN x'' ELSE (- (rt1.c2)) END;
SELECT ALL t0.c2, rt0.c1, rt0.c4, t0.c0, t1.c0, rt0.c3, rt1.c1, v0.c0, t0.c1 FROM rt0, t0, t1, rt1 CROSS JOIN v0 ON CASE WHEN t0.c0 THEN x'' ELSE (- (rt1.c2)) END WHERE (UNICODE(((rt0.c1)==(rt1.c2)))) UNION ALL SELECT t0.c2, rt0.c1, rt0.c4, t0.c0, t1.c0, rt0.c3, rt1.c1, v0.c0, t0.c1 FROM rt0, t0, t1, rt1 CROSS JOIN v0 ON CASE WHEN t0.c0 THEN x'' ELSE (- (rt1.c2)) END WHERE ((NOT (UNICODE(((rt0.c1)=(rt1.c2)))))) UNION ALL SELECT ALL t0.c2, rt0.c1, rt0.c4, t0.c0, t1.c0, rt0.c3, rt1.c1, v0.c0, t0.c1 FROM rt0, t0, t1, rt1 CROSS JOIN v0 ON CASE WHEN t0.c0 THEN x'' ELSE (- (rt1.c2)) END WHERE (((UNICODE(((rt0.c1)==(rt1.c2)))) ISNULL));
SELECT t0.c2, rt0.c1, rt0.c4, t0.c0, t1.c0, rt0.c3, rt1.c1, v0.c0, t0.c1 FROM rt0, t0, t1, rt1 CROSS JOIN v0 ON CASE WHEN t0.c0 THEN x'' ELSE (- (rt1.c2)) END;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((((v0.c0)IS NOT(v0.c0)))<=((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((((v0.c0)IS NOT(v0.c0)))<=((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((v0.c0)IS NOT(v0.c0)))<=((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL rt1.c0, rt0.c1, rt1.c3 FROM rt1, rt0, t1, t0, v0 GROUP BY rt1.c0, rt0.c1, rt1.c3;
SELECT ALL rt1.c0, rt0.c1, rt1.c3 FROM rt1, rt0, t1, t0, v0 WHERE ((+ (((rt1.c2) BETWEEN (rt1.c0) AND (rt0.c1))))) GROUP BY rt1.c0, rt0.c1, rt1.c3 UNION SELECT ALL rt1.c0, rt0.c1, rt1.c3 FROM rt1, rt0, t1, t0, v0 WHERE ((NOT ((+ (((rt1.c2) BETWEEN (rt1.c0) AND (rt0.c1))))))) GROUP BY rt1.c0, rt0.c1, rt1.c3 UNION SELECT ALL rt1.c0, rt0.c1, rt1.c3 FROM rt1, rt0, t1, t0, v0 WHERE ((((+ (((rt1.c2) BETWEEN (rt1.c0) AND (rt0.c1))))) ISNULL)) GROUP BY rt1.c0, rt0.c1, rt1.c3;
SELECT ALL rt1.c0, rt0.c1, rt1.c3 FROM rt1, rt0, t1, t0, v0 GROUP BY rt1.c0, rt0.c1, rt1.c3;
SELECT t0.c2, t1.c0, rt0.c0, rt0.c3, rt0.c4, t0.c1, t0.c0 FROM rt1, v0, t0, t1 CROSS JOIN rt0 ON ((((CAST(t0.c2 AS REAL))OR(x'')))OR(0.9678197361387137 COLLATE BINARY)) GROUP BY t0.c2, t1.c0, rt0.c0, rt0.c3, rt0.c4, t0.c1, t0.c0;
SELECT ALL t0.c2, t1.c0, rt0.c0, rt0.c3, rt0.c4, t0.c1, t0.c0 FROM rt1, v0, t0, t1 CROSS JOIN rt0 ON ((((CAST(t0.c2 AS REAL))OR(x'')))OR(0.9678197361387137 COLLATE BINARY)) GROUP BY t0.c2, t1.c0, rt0.c0, rt0.c3, rt0.c4, t0.c1, t0.c0 HAVING MAX(COUNT(*)) UNION ALL SELECT ALL t0.c2, t1.c0, rt0.c0, rt0.c3, rt0.c4, t0.c1, t0.c0 FROM rt1, v0, t0, t1 CROSS JOIN rt0 ON ((((CAST(t0.c2 AS REAL))OR(x'')))OR(0.9678197361387137 COLLATE BINARY)) GROUP BY t0.c2, t1.c0, rt0.c0, rt0.c3, rt0.c4, t0.c1, t0.c0 HAVING (NOT (MAX(COUNT(*)))) UNION ALL SELECT t0.c2, t1.c0, rt0.c0, rt0.c3, rt0.c4, t0.c1, t0.c0 FROM rt1, v0, t0, t1 CROSS JOIN rt0 ON ((((CAST(t0.c2 AS REAL))OR(x'')))OR(0.9678197361387137 COLLATE BINARY)) GROUP BY t0.c2, t1.c0, rt0.c0, rt0.c3, rt0.c4, t0.c1, t0.c0 HAVING ((MAX(COUNT(*))) ISNULL);
SELECT * FROM rt1, t0;
SELECT * FROM rt1, t0 WHERE ((((t0.c2 IN ()))<=(((rt1.c2)>=(NULL))))) UNION ALL SELECT * FROM rt1, t0 WHERE ((NOT ((((t0.c2 IN ()))<=(((rt1.c2)>=(NULL))))))) UNION ALL SELECT * FROM rt1, t0 WHERE ((((((t0.c2 IN ()))<=(((rt1.c2)>=(NULL))))) ISNULL));
SELECT * FROM rt1, t0;
SELECT DISTINCT rt0.c2, rt0.c1, rt1.c1, rt0.c4, t0.c0, v0.c0, rt1.c2, rt1.c3, rt0.c3, t0.c2, rt1.c0, t0.c1, rt0.c0 FROM rt1, rt0, t0, t1, v0;
SELECT DISTINCT rt0.c2, rt0.c1, rt1.c1, rt0.c4, t0.c0, v0.c0, rt1.c2, rt1.c3, rt0.c3, t0.c2, rt1.c0, t0.c1, rt0.c0 FROM rt1, rt0, t0, t1, v0 WHERE (((rt1.c0) IS TRUE) COLLATE BINARY) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt1.c1, rt0.c4, t0.c0, v0.c0, rt1.c2, rt1.c3, rt0.c3, t0.c2, rt1.c0, t0.c1, rt0.c0 FROM rt1, rt0, t0, t1, v0 WHERE ((NOT (((rt1.c0) IS TRUE) COLLATE BINARY))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt1.c1, rt0.c4, t0.c0, v0.c0, rt1.c2, rt1.c3, rt0.c3, t0.c2, rt1.c0, t0.c1, rt0.c0 FROM rt1, rt0, t0, t1, v0 WHERE (((((rt1.c0) IS TRUE) COLLATE BINARY) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, rt1.c1, rt0.c4, t0.c0, v0.c0, rt1.c2, rt1.c3, rt0.c3, t0.c2, rt1.c0, t0.c1, rt0.c0 FROM rt1, rt0, t0, t1, v0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, v0.c0, rt0.c3, rt0.c4 FROM v0 INNER JOIN rt0 ON CASE (+ (v0.c0))  WHEN ((rt0.c0) IS TRUE) THEN (((rt0.c3)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c2))) ELSE json(rt0.c2) END GROUP BY rt0.c0, rt0.c2, rt0.c1, v0.c0, rt0.c3, rt0.c4;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, v0.c0, rt0.c3, rt0.c4 FROM v0 INNER JOIN rt0 ON CASE (+ (v0.c0))  WHEN ((rt0.c0) IS TRUE) THEN (((rt0.c3)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c2))) ELSE json(rt0.c2) END WHERE (((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 END) NOT NULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1, v0.c0, rt0.c3, rt0.c4 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1, v0.c0, rt0.c3, rt0.c4 FROM v0 INNER JOIN rt0 ON CASE (+ (v0.c0))  WHEN ((rt0.c0) IS TRUE) THEN (((rt0.c3)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c2))) ELSE json(rt0.c2) END WHERE ((NOT (((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 END) NOT NULL)))) GROUP BY rt0.c0, rt0.c2, rt0.c1, v0.c0, rt0.c3, rt0.c4 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1, v0.c0, rt0.c3, rt0.c4 FROM v0 INNER JOIN rt0 ON CASE (+ (v0.c0))  WHEN ((rt0.c0) IS TRUE) THEN (((rt0.c3)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c2))) ELSE json(rt0.c2) END WHERE (((((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 END) NOT NULL)) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1, v0.c0, rt0.c3, rt0.c4;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, v0.c0, rt0.c3, rt0.c4 FROM v0 INNER JOIN rt0 ON CASE (+ (v0.c0))  WHEN ((rt0.c0) IS TRUE) THEN (((rt0.c3)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c2))) ELSE json(rt0.c2) END GROUP BY rt0.c0, rt0.c2, rt0.c1, v0.c0, rt0.c3, rt0.c4;
SELECT ALL rt0.c2, rt0.c4, rt0.c0, t0.c0, rt0.c1 FROM t0 FULL OUTER JOIN rt0 ON rt0.c4 INNER JOIN t1 ON CASE ((t1.c0) BETWEEN (rt0.c2) AND (rt0.c2))  WHEN CASE t0.c0  WHEN x'' THEN t0.c2 ELSE rt0.c4 END THEN (((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((t0.c1))) END GROUP BY rt0.c2, rt0.c4, rt0.c0, t0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c4, rt0.c0, t0.c0, rt0.c1 FROM t0 FULL OUTER JOIN rt0 ON rt0.c4 INNER JOIN t1 ON CASE ((t1.c0) BETWEEN (rt0.c2) AND (rt0.c2))  WHEN CASE t0.c0  WHEN x'' THEN t0.c2 ELSE rt0.c4 END THEN (((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((t0.c1))) END GROUP BY rt0.c2, rt0.c4, rt0.c0, t0.c0, rt0.c1 HAVING MAX(TOTAL(t0.c0)) UNION ALL SELECT rt0.c2, rt0.c4, rt0.c0, t0.c0, rt0.c1 FROM t0 FULL OUTER JOIN rt0 ON rt0.c4 INNER JOIN t1 ON CASE ((t1.c0) BETWEEN (rt0.c2) AND (rt0.c2))  WHEN CASE t0.c0  WHEN x'' THEN t0.c2 ELSE rt0.c4 END THEN (((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((t0.c1))) END GROUP BY rt0.c2, rt0.c4, rt0.c0, t0.c0, rt0.c1 HAVING (NOT (MAX(TOTAL(t0.c0)))) UNION ALL SELECT ALL rt0.c2, rt0.c4, rt0.c0, t0.c0, rt0.c1 FROM t0 FULL OUTER JOIN rt0 ON rt0.c4 INNER JOIN t1 ON CASE ((t1.c0) BETWEEN (rt0.c2) AND (rt0.c2))  WHEN CASE t0.c0  WHEN x'' THEN t0.c2 ELSE rt0.c4 END THEN (((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((t0.c1))) END GROUP BY rt0.c2, rt0.c4, rt0.c0, t0.c0, rt0.c1 HAVING ((MAX(TOTAL(t0.c0))) ISNULL);
SELECT ALL rt1.c0 FROM rt1 FULL OUTER JOIN t0 ON ((t0.c0 COLLATE RTRIM) IS TRUE) RIGHT OUTER JOIN v0 ON ((NULL)IS NOT(t0.c1)) COLLATE RTRIM;
SELECT ALL rt1.c0 FROM rt1 FULL OUTER JOIN t0 ON ((t0.c0 COLLATE RTRIM) IS TRUE) RIGHT OUTER JOIN v0 ON ((NULL)IS NOT(t0.c1)) COLLATE RTRIM WHERE (((((t0.c2) NOT NULL))<(LIKELIHOOD(NULL, 0.6475892020545135)))) UNION ALL SELECT ALL rt1.c0 FROM rt1 FULL OUTER JOIN t0 ON ((t0.c0 COLLATE RTRIM) IS TRUE) RIGHT OUTER JOIN v0 ON ((NULL)IS NOT(t0.c1)) COLLATE RTRIM WHERE ((NOT (((((t0.c2) NOT NULL))<(LIKELIHOOD(NULL, 0.6475892020545135)))))) UNION ALL SELECT rt1.c0 FROM rt1 FULL OUTER JOIN t0 ON ((t0.c0 COLLATE RTRIM) IS TRUE) RIGHT OUTER JOIN v0 ON ((NULL)IS NOT(t0.c1)) COLLATE RTRIM WHERE (((((((t0.c2) NOT NULL))<(LIKELIHOOD(NULL, 0.6475892020545135)))) ISNULL));
SELECT ALL rt1.c0 FROM rt1 FULL OUTER JOIN t0 ON ((t0.c0 COLLATE RTRIM) IS TRUE) RIGHT OUTER JOIN v0 ON ((NULL)IS NOT(t0.c1)) COLLATE RTRIM;
SELECT DISTINCT rt1.c2, rt0.c3, rt0.c0, rt0.c1, rt1.c0, rt1.c3, v0.c0, t0.c2, t0.c1, rt1.c1, t0.c0, t1.c0 FROM t1, v0, t0, rt1 NATURAL JOIN rt0;
SELECT DISTINCT rt1.c2, rt0.c3, rt0.c0, rt0.c1, rt1.c0, rt1.c3, v0.c0, t0.c2, t0.c1, rt1.c1, t0.c0, t1.c0 FROM t1, v0, t0, rt1 NATURAL JOIN rt0 WHERE ((((t0.c2)) BETWEEN ((0.5482773033999541)) AND (((('W\r]v') IS FALSE))))) UNION SELECT DISTINCT rt1.c2, rt0.c3, rt0.c0, rt0.c1, rt1.c0, rt1.c3, v0.c0, t0.c2, t0.c1, rt1.c1, t0.c0, t1.c0 FROM t1, v0, t0, rt1 NATURAL JOIN rt0 WHERE ((NOT ((((t0.c2)) BETWEEN ((0.5482773033999541)) AND (((('W\r]v') IS FALSE))))))) UNION SELECT DISTINCT rt1.c2, rt0.c3, rt0.c0, rt0.c1, rt1.c0, rt1.c3, v0.c0, t0.c2, t0.c1, rt1.c1, t0.c0, t1.c0 FROM t1, v0, t0, rt1 NATURAL JOIN rt0 WHERE ((((((t0.c2)) BETWEEN ((0.5482773033999541)) AND (((('W\r]v') IS FALSE))))) ISNULL));
SELECT DISTINCT rt1.c2, rt0.c3, rt0.c0, rt0.c1, rt1.c0, rt1.c3, v0.c0, t0.c2, t0.c1, rt1.c1, t0.c0, t1.c0 FROM t1, v0, t0, rt1 NATURAL JOIN rt0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (t0.c1) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (t0.c1))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((t0.c1) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL v0.c0 FROM t1, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM t1, v0 GROUP BY v0.c0 HAVING NULL UNION ALL SELECT v0.c0 FROM t1, v0 GROUP BY v0.c0 HAVING (NOT (NULL)) UNION ALL SELECT v0.c0 FROM t1, v0 GROUP BY v0.c0 HAVING ((NULL) ISNULL);
SELECT ALL v0.c0 FROM t1, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM t1, v0 GROUP BY v0.c0 HAVING NULL UNION ALL SELECT v0.c0 FROM t1, v0 GROUP BY v0.c0 HAVING (NOT (NULL)) UNION ALL SELECT v0.c0 FROM t1, v0 GROUP BY v0.c0 HAVING ((NULL) ISNULL);
SELECT ALL v0.c0 FROM t1, v0 GROUP BY v0.c0;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((+ (rt0.c4)) IN (((rt0.c0)IS NOT(0.0631141642379468)), ((rt0.c0)>(rt0.c0))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((+ (rt0.c4)) IN (((rt0.c0)IS NOT(0.0631141642379468)), ((rt0.c0)>(rt0.c0))))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((+ (rt0.c4)) IN (((rt0.c0)IS NOT(0.0631141642379468)), ((rt0.c0)>(rt0.c0))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM t0, t1, rt0, rt1;
SELECT DISTINCT * FROM t0, t1, rt0, rt1 WHERE (rt0.c4) UNION SELECT DISTINCT * FROM t0, t1, rt0, rt1 WHERE ((NOT (rt0.c4))) UNION SELECT DISTINCT * FROM t0, t1, rt0, rt1 WHERE (((rt0.c4) ISNULL));
SELECT DISTINCT * FROM t0, t1, rt0, rt1;
SELECT t0.c0, rt0.c3, rt1.c3, rt0.c4, rt1.c0, rt0.c2, t0.c1, t1.c0 FROM v0, rt0, t0, t1, rt1 GROUP BY t0.c0, rt0.c3, rt1.c3, rt0.c4, rt1.c0, rt0.c2, t0.c1, t1.c0;
SELECT t0.c0, rt0.c3, rt1.c3, rt0.c4, rt1.c0, rt0.c2, t0.c1, t1.c0 FROM v0, rt0, t0, t1, rt1 WHERE (CAST(((t0.c0)&(rt1.c0)) AS INTEGER)) GROUP BY t0.c0, rt0.c3, rt1.c3, rt0.c4, rt1.c0, rt0.c2, t0.c1, t1.c0 UNION SELECT ALL t0.c0, rt0.c3, rt1.c3, rt0.c4, rt1.c0, rt0.c2, t0.c1, t1.c0 FROM v0, rt0, t0, t1, rt1 WHERE ((NOT (CAST(((t0.c0)&(rt1.c0)) AS INTEGER)))) GROUP BY t0.c0, rt0.c3, rt1.c3, rt0.c4, rt1.c0, rt0.c2, t0.c1, t1.c0 UNION SELECT t0.c0, rt0.c3, rt1.c3, rt0.c4, rt1.c0, rt0.c2, t0.c1, t1.c0 FROM v0, rt0, t0, t1, rt1 WHERE (((CAST(((t0.c0)&(rt1.c0)) AS INTEGER)) ISNULL)) GROUP BY t0.c0, rt0.c3, rt1.c3, rt0.c4, rt1.c0, rt0.c2, t0.c1, t1.c0;
SELECT t0.c0, rt0.c3, rt1.c3, rt0.c4, rt1.c0, rt0.c2, t0.c1, t1.c0 FROM v0, rt0, t0, t1, rt1 GROUP BY t0.c0, rt0.c3, rt1.c3, rt0.c4, rt1.c0, rt0.c2, t0.c1, t1.c0;
SELECT rt0.c3, rt0.c4, rt1.c1, rt1.c2, rt1.c3, rt0.c0, t1.c0, v0.c0, rt0.c1 FROM rt1, v0, t1, rt0 GROUP BY rt0.c3, rt0.c4, rt1.c1, rt1.c2, rt1.c3, rt0.c0, t1.c0, v0.c0, rt0.c1;
SELECT ALL rt0.c3, rt0.c4, rt1.c1, rt1.c2, rt1.c3, rt0.c0, t1.c0, v0.c0, rt0.c1 FROM rt1, v0, t1, rt0 GROUP BY rt0.c3, rt0.c4, rt1.c1, rt1.c2, rt1.c3, rt0.c0, t1.c0, v0.c0, rt0.c1 HAVING MIN(TOTAL(COUNT(*))) UNION ALL SELECT rt0.c3, rt0.c4, rt1.c1, rt1.c2, rt1.c3, rt0.c0, t1.c0, v0.c0, rt0.c1 FROM rt1, v0, t1, rt0 GROUP BY rt0.c3, rt0.c4, rt1.c1, rt1.c2, rt1.c3, rt0.c0, t1.c0, v0.c0, rt0.c1 HAVING (NOT (MIN(TOTAL(COUNT(*))))) UNION ALL SELECT rt0.c3, rt0.c4, rt1.c1, rt1.c2, rt1.c3, rt0.c0, t1.c0, v0.c0, rt0.c1 FROM rt1, v0, t1, rt0 GROUP BY rt0.c3, rt0.c4, rt1.c1, rt1.c2, rt1.c3, rt0.c0, t1.c0, v0.c0, rt0.c1 HAVING ((MIN(TOTAL(COUNT(*)))) ISNULL);
SELECT ALL rt1.c1, t0.c1, t0.c2, rt0.c4, rt0.c1, rt1.c3, t1.c0 FROM v0, t0, t1, rt1, rt0;
SELECT ALL rt1.c1, t0.c1, t0.c2, rt0.c4, rt0.c1, rt1.c3, t1.c0 FROM v0, t0, t1, rt1, rt0 WHERE (((t0.c0) BETWEEN (rt1.c0) AND (rt0.c1)) COLLATE BINARY) UNION ALL SELECT ALL rt1.c1, t0.c1, t0.c2, rt0.c4, rt0.c1, rt1.c3, t1.c0 FROM v0, t0, t1, rt1, rt0 WHERE ((NOT (((t0.c0) BETWEEN (rt1.c0) AND (rt0.c1)) COLLATE BINARY))) UNION ALL SELECT rt1.c1, t0.c1, t0.c2, rt0.c4, rt0.c1, rt1.c3, t1.c0 FROM v0, t0, t1, rt1, rt0 WHERE (((((t0.c0) BETWEEN (rt1.c0) AND (rt0.c1)) COLLATE BINARY) ISNULL));
SELECT ALL rt1.c1, t0.c1, t0.c2, rt0.c4, rt0.c1, rt1.c3, t1.c0 FROM v0, t0, t1, rt1, rt0;
SELECT DISTINCT * FROM t0, rt0, rt1 FULL OUTER JOIN t1 ON ((((((t0.c0)>(t0.c2)))AND(((rt1.c0)LIKE(t1.c0)))))OR(x''));
SELECT DISTINCT * FROM t0, rt0, rt1 FULL OUTER JOIN t1 ON ((((((t0.c0)>(t0.c2)))AND(((rt1.c0)LIKE(t1.c0)))))OR(x'')) WHERE (INSTR(((NULL)OR(rt1.c1)), ((rt0.c4) IS FALSE))) UNION SELECT DISTINCT * FROM t0, rt0, rt1 FULL OUTER JOIN t1 ON ((((((t0.c0)>(t0.c2)))AND(((rt1.c0)LIKE(t1.c0)))))OR(x'')) WHERE ((NOT (INSTR(((NULL)OR(rt1.c1)), ((rt0.c4) IS FALSE))))) UNION SELECT DISTINCT * FROM t0, rt0, rt1 FULL OUTER JOIN t1 ON ((((((t0.c0)>(t0.c2)))AND(((rt1.c0)LIKE(t1.c0)))))OR(x'')) WHERE (((INSTR(((NULL)OR(rt1.c1)), ((rt0.c4) IS FALSE))) ISNULL));
SELECT DISTINCT * FROM t0, rt0, rt1 FULL OUTER JOIN t1 ON ((((((t0.c0)>(t0.c2)))AND(((rt1.c0)LIKE(t1.c0)))))OR(x''));
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((v0.c0 COLLATE BINARY) IS FALSE)) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((v0.c0 COLLATE BINARY) IS FALSE)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0 COLLATE BINARY) IS FALSE)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt1.c1 FROM v0, rt0, rt1, t0, t1 GROUP BY rt1.c1;
SELECT rt1.c1 FROM v0, rt0, rt1, t0, t1 GROUP BY rt1.c1 HAVING CASE CAST(GROUP_CONCAT(v0.c0) AS TEXT)  WHEN SUM(SUM(rt1.c0)) COLLATE BINARY THEN ((((t0.c2)AND(TOTAL(t0.c1))))AND('2050984674')) ELSE (- (t0.c0)) END UNION ALL SELECT ALL rt1.c1 FROM v0, rt0, rt1, t0, t1 GROUP BY rt1.c1 HAVING (NOT (CASE CAST(GROUP_CONCAT(v0.c0) AS TEXT)  WHEN SUM(SUM(rt1.c0)) COLLATE BINARY THEN ((((t0.c2)AND(TOTAL(t0.c1))))AND('2050984674')) ELSE (- (t0.c0)) END)) UNION ALL SELECT rt1.c1 FROM v0, rt0, rt1, t0, t1 GROUP BY rt1.c1 HAVING ((CASE CAST(GROUP_CONCAT(v0.c0) AS TEXT)  WHEN SUM(SUM(rt1.c0)) COLLATE BINARY THEN ((((t0.c2)AND(TOTAL(t0.c1))))AND('2050984674')) ELSE (- (t0.c0)) END) ISNULL);
SELECT * FROM t0, rt0, rt1, t1;
SELECT * FROM t0 NOT INDEXED, rt0, rt1, t1 WHERE ((~ (CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt1.c2 END))) UNION ALL SELECT ALL * FROM t0, rt0, rt1, t1 WHERE ((NOT ((~ (CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt1.c2 END))))) UNION ALL SELECT ALL * FROM t0, rt0, rt1, t1 WHERE ((((~ (CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt1.c2 END))) ISNULL));
SELECT * FROM t0, rt0, rt1, t1;
SELECT DISTINCT * FROM rt1, t1 RIGHT OUTER JOIN v0 ON (((NOT (rt1.c2)))LIKE(CAST(t0.c1 AS BLOB))) CROSS JOIN t0 ON (((t0.c0 IN ()))LIKE(CASE 967383647  WHEN rt1.c1 THEN t0.c0 END));
SELECT ALL t0.c2, rt1.c0 FROM rt1 RIGHT OUTER JOIN t0 ON 0.7124234309851756 GROUP BY t0.c2, rt1.c0;
SELECT ALL t0.c2, rt1.c0 FROM rt1 RIGHT OUTER JOIN t0 ON 0.7124234309851756 WHERE (((CASE rt1.c0  WHEN rt1.c0 THEN t0.c1 ELSE rt1.c0 END) BETWEEN (((rt1.c1) IS TRUE)) AND (((t0.c2) BETWEEN (t0.c1) AND (t0.c0))))) GROUP BY t0.c2, rt1.c0 UNION SELECT t0.c2, rt1.c0 FROM rt1 RIGHT OUTER JOIN t0 ON 0.7124234309851756 WHERE ((NOT (((CASE rt1.c0  WHEN rt1.c0 THEN t0.c1 ELSE rt1.c0 END) BETWEEN (((rt1.c1) IS TRUE)) AND (((t0.c2) BETWEEN (t0.c1) AND (t0.c0))))))) GROUP BY t0.c2, rt1.c0 UNION SELECT t0.c2, rt1.c0 FROM rt1 RIGHT OUTER JOIN t0 ON 0.7124234309851756 WHERE (((((CASE rt1.c0  WHEN rt1.c0 THEN t0.c1 ELSE rt1.c0 END) BETWEEN (((rt1.c1) IS TRUE)) AND (((t0.c2) BETWEEN (t0.c1) AND (t0.c0))))) ISNULL)) GROUP BY t0.c2, rt1.c0;
SELECT ALL t0.c2, rt1.c0 FROM rt1 RIGHT OUTER JOIN t0 ON 0.7124234309851756 GROUP BY t0.c2, rt1.c0;
SELECT ALL rt0.c2, rt0.c0, t1.c0, rt0.c3, rt0.c4 FROM t1, rt0 GROUP BY rt0.c2, rt0.c0, t1.c0, rt0.c3, rt0.c4;
SELECT rt0.c2, rt0.c0, t1.c0, rt0.c3, rt0.c4 FROM t1, rt0 GROUP BY rt0.c2, rt0.c0, t1.c0, rt0.c3, rt0.c4 HAVING CAST(AVG(TOTAL(rt0.c4)) AS TEXT) UNION ALL SELECT ALL rt0.c2, rt0.c0, t1.c0, rt0.c3, rt0.c4 FROM t1, rt0 GROUP BY rt0.c2, rt0.c0, t1.c0, rt0.c3, rt0.c4 HAVING (NOT (CAST(AVG(TOTAL(rt0.c4)) AS TEXT))) UNION ALL SELECT ALL rt0.c2, rt0.c0, t1.c0, rt0.c3, rt0.c4 FROM t1, rt0 GROUP BY rt0.c2, rt0.c0, t1.c0, rt0.c3, rt0.c4 HAVING ((CAST(AVG(TOTAL(rt0.c4)) AS TEXT)) ISNULL);
SELECT ALL * FROM t1, rt1 LEFT OUTER JOIN t0 ON (((rt1.c0) NOT NULL) IN ());
SELECT * FROM t1, rt1 LEFT OUTER JOIN t0 ON (((rt1.c0) NOT NULL) IN ()) WHERE (CASE WHEN (rt1.c0 IN ()) THEN ((t0.c2) NOT BETWEEN (rt1.c3) AND (rt1.c1)) ELSE ((((((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))OR(rt1.c0)))OR(1.338271226E9)))OR(rt1.c3)))AND(t0.c0)) END) UNION ALL SELECT ALL * FROM t1, rt1 LEFT OUTER JOIN t0 ON (((rt1.c0) NOT NULL) IN ()) WHERE ((NOT (CASE WHEN (rt1.c0 IN ()) THEN ((t0.c2) NOT BETWEEN (rt1.c3) AND (rt1.c1)) ELSE ((((((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))OR(rt1.c0)))OR(1.338271226E9)))OR(rt1.c3)))AND(t0.c0)) END))) UNION ALL SELECT * FROM t1, rt1 LEFT OUTER JOIN t0 ON (((rt1.c0) NOT NULL) IN ()) WHERE (((CASE WHEN (rt1.c0 IN ()) THEN ((t0.c2) NOT BETWEEN (rt1.c3) AND (rt1.c1)) ELSE ((((((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))OR(rt1.c0)))OR(1.338271226E9)))OR(rt1.c3)))AND(t0.c0)) END) ISNULL));
SELECT ALL * FROM t1, rt1 LEFT OUTER JOIN t0 ON (((rt1.c0) NOT NULL) IN ());
SELECT DISTINCT rt1.c0 FROM rt1, t0, rt0, t1;
SELECT DISTINCT rt1.c0 FROM rt1, t0, rt0, t1 WHERE ((- ((NOT (rt1.c2))))) UNION SELECT DISTINCT rt1.c0 FROM rt1, t0, rt0, t1 WHERE ((NOT ((- ((NOT (rt1.c2))))))) UNION SELECT DISTINCT rt1.c0 FROM rt1, t0, rt0, t1 WHERE ((((- ((NOT (rt1.c2))))) ISNULL));
SELECT DISTINCT rt1.c0 FROM rt1, t0, rt0, t1;
SELECT rt0.c3, rt0.c2, t0.c1, rt0.c4, t0.c2, rt0.c1, t1.c0, t0.c0, rt1.c3 FROM t1, rt0, t0, rt1 GROUP BY rt0.c3, rt0.c2, t0.c1, rt0.c4, t0.c2, rt0.c1, t1.c0, t0.c0, rt1.c3;
SELECT ALL rt0.c3, rt0.c2, t0.c1, rt0.c4, t0.c2, rt0.c1, t1.c0, t0.c0, rt1.c3 FROM t1, rt0, t0, rt1 WHERE ((((rt0.c2))>((rt1.c2))) COLLATE NOCASE) GROUP BY rt0.c3, rt0.c2, t0.c1, rt0.c4, t0.c2, rt0.c1, t1.c0, t0.c0, rt1.c3 UNION SELECT ALL rt0.c3, rt0.c2, t0.c1, rt0.c4, t0.c2, rt0.c1, t1.c0, t0.c0, rt1.c3 FROM t1, rt0, t0, rt1 WHERE ((NOT ((((rt0.c2))>((rt1.c2))) COLLATE NOCASE))) GROUP BY rt0.c3, rt0.c2, t0.c1, rt0.c4, t0.c2, rt0.c1, t1.c0, t0.c0, rt1.c3 UNION SELECT ALL rt0.c3, rt0.c2, t0.c1, rt0.c4, t0.c2, rt0.c1, t1.c0, t0.c0, rt1.c3 FROM t1, rt0, t0, rt1 WHERE ((((((rt0.c2))>((rt1.c2))) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c3, rt0.c2, t0.c1, rt0.c4, t0.c2, rt0.c1, t1.c0, t0.c0, rt1.c3;
SELECT rt0.c3, rt0.c2, t0.c1, rt0.c4, t0.c2, rt0.c1, t1.c0, t0.c0, rt1.c3 FROM t1, rt0, t0, rt1 GROUP BY rt0.c3, rt0.c2, t0.c1, rt0.c4, t0.c2, rt0.c1, t1.c0, t0.c0, rt1.c3;
SELECT rt0.c3, rt0.c2, t0.c0, rt0.c0 FROM rt0, t0, v0, t1 GROUP BY rt0.c3, rt0.c2, t0.c0, rt0.c0;
SELECT ALL rt0.c3, rt0.c2, t0.c0, rt0.c0 FROM rt0, t0, v0, t1 GROUP BY rt0.c3, rt0.c2, t0.c0, rt0.c0 HAVING COUNT(SUM(COUNT(*))) UNION ALL SELECT rt0.c3, rt0.c2, t0.c0, rt0.c0 FROM rt0 NOT INDEXED, t0, v0, t1 GROUP BY rt0.c3, rt0.c2, t0.c0, rt0.c0 HAVING (NOT (COUNT(SUM(COUNT(*))))) UNION ALL SELECT ALL rt0.c3, rt0.c2, t0.c0, rt0.c0 FROM rt0, t0, v0, t1 GROUP BY rt0.c3, rt0.c2, t0.c0, rt0.c0 HAVING ((COUNT(SUM(COUNT(*)))) ISNULL);
SELECT ALL * FROM rt1, t0, rt0, t1;
SELECT * FROM rt1, t0, rt0, t1 WHERE (((((rt1.c0)=(t0.c1))) BETWEEN (((((rt0.c1)AND(t0.c1)))AND(t1.c0))) AND ((rt1.c0 IN ())))) UNION ALL SELECT * FROM rt1, t0, rt0, t1 WHERE ((NOT (((((rt1.c0)=(t0.c1))) BETWEEN (((((rt0.c1)AND(t0.c1)))AND(t1.c0))) AND ((rt1.c0 IN ())))))) UNION ALL SELECT * FROM rt1, t0, rt0, t1 WHERE (((((((rt1.c0)==(t0.c1))) BETWEEN (((((rt0.c1)AND(t0.c1)))AND(t1.c0))) AND ((rt1.c0 IN ())))) ISNULL));
SELECT ALL * FROM rt1, t0, rt0, t1;
SELECT DISTINCT t0.c2, t0.c0, rt0.c3, rt0.c2, v0.c0, rt0.c0, rt0.c1, rt0.c4, t1.c0 FROM rt0, t0, t1, v0;
SELECT DISTINCT t0.c2, t0.c0, rt0.c3, rt0.c2, v0.c0, rt0.c0, rt0.c1, rt0.c4, t1.c0 FROM rt0, t0, t1, v0 WHERE (((((t0.c2) IS FALSE)) NOT BETWEEN (((((t0.c0)OR(rt0.c0)))OR(rt0.c0))) AND (CASE rt0.c4  WHEN rt0.c2 THEN v0.c0 WHEN rt0.c2 THEN t0.c2 WHEN rt0.c2 THEN rt0.c1 END))) UNION SELECT DISTINCT t0.c2, t0.c0, rt0.c3, rt0.c2, v0.c0, rt0.c0, rt0.c1, rt0.c4, t1.c0 FROM rt0, t0, t1, v0 WHERE ((NOT (((((t0.c2) IS FALSE)) NOT BETWEEN (((((t0.c0)OR(rt0.c0)))OR(rt0.c0))) AND (CASE rt0.c4  WHEN rt0.c2 THEN v0.c0 WHEN rt0.c2 THEN t0.c2 WHEN rt0.c2 THEN rt0.c1 END))))) UNION SELECT DISTINCT t0.c2, t0.c0, rt0.c3, rt0.c2, v0.c0, rt0.c0, rt0.c1, rt0.c4, t1.c0 FROM rt0, t0, t1, v0 WHERE (((((((t0.c2) IS FALSE)) NOT BETWEEN (((((t0.c0)OR(rt0.c0)))OR(rt0.c0))) AND (CASE rt0.c4  WHEN rt0.c2 THEN v0.c0 WHEN rt0.c2 THEN t0.c2 WHEN rt0.c2 THEN rt0.c1 END))) ISNULL));
SELECT DISTINCT t0.c2, t0.c0, rt0.c3, rt0.c2, v0.c0, rt0.c0, rt0.c1, rt0.c4, t1.c0 FROM rt0, t0, t1, v0;
SELECT rt0.c2, rt0.c1, rt1.c2 FROM v0 INDEXED BY i35, rt1, rt0, t1 GROUP BY rt0.c2, rt0.c1, rt1.c2;
SELECT rt1.c3 FROM v0 LEFT OUTER JOIN t1 ON ((t0.c1)>>(rt1.c2)) COLLATE RTRIM FULL OUTER JOIN t0 ON 4.8780504E8 RIGHT OUTER JOIN rt1 ON json_type(((rt1.c1) BETWEEN (t0.c0) AND (t0.c0))) GROUP BY rt1.c3;
SELECT ALL * FROM t1, t0, rt1, v0, rt0;
SELECT * FROM t1, t0, rt1, v0, rt0 WHERE (v0.c0) UNION ALL SELECT ALL * FROM t1, t0, rt1, v0, rt0 WHERE ((NOT (v0.c0))) UNION ALL SELECT * FROM t1, t0, rt1, v0, rt0 WHERE (((v0.c0) ISNULL));
SELECT ALL * FROM t1, t0, rt1, v0, rt0;
SELECT DISTINCT * FROM rt0, v0, t0;
SELECT DISTINCT * FROM rt0, v0, t0 WHERE (((CAST(t0.c1 AS INTEGER)) NOTNULL)) UNION SELECT DISTINCT * FROM rt0, v0, t0 WHERE ((NOT (((CAST(t0.c1 AS INTEGER)) NOTNULL)))) UNION SELECT DISTINCT * FROM rt0, v0, t0 WHERE (((((CAST(t0.c1 AS INTEGER)) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM rt0, v0, t0;
SELECT t0.c2, rt1.c1, rt1.c3, v0.c0, t0.c1, rt1.c2, rt0.c2, rt1.c0, rt0.c3, rt0.c1, rt0.c0, rt0.c4, t0.c0 FROM t0, v0, rt0, rt1 GROUP BY t0.c2, rt1.c1, rt1.c3, v0.c0, t0.c1, rt1.c2, rt0.c2, rt1.c0, rt0.c3, rt0.c1, rt0.c0, rt0.c4, t0.c0;
SELECT ALL t0.c2, rt1.c1, rt1.c3, v0.c0, t0.c1, rt1.c2, rt0.c2, rt1.c0, rt0.c3, rt0.c1, rt0.c0, rt0.c4, t0.c0 FROM t0, v0, rt0, rt1 WHERE ((~ (TRIM(rt0.c2, rt0.c1)))) GROUP BY t0.c2, rt1.c1, rt1.c3, v0.c0, t0.c1, rt1.c2, rt0.c2, rt1.c0, rt0.c3, rt0.c1, rt0.c0, rt0.c4, t0.c0 UNION SELECT t0.c2, rt1.c1, rt1.c3, v0.c0, t0.c1, rt1.c2, rt0.c2, rt1.c0, rt0.c3, rt0.c1, rt0.c0, rt0.c4, t0.c0 FROM t0, v0, rt0, rt1 WHERE ((NOT ((~ (TRIM(rt0.c2, rt0.c1)))))) GROUP BY t0.c2, rt1.c1, rt1.c3, v0.c0, t0.c1, rt1.c2, rt0.c2, rt1.c0, rt0.c3, rt0.c1, rt0.c0, rt0.c4, t0.c0 UNION SELECT ALL t0.c2, rt1.c1, rt1.c3, v0.c0, t0.c1, rt1.c2, rt0.c2, rt1.c0, rt0.c3, rt0.c1, rt0.c0, rt0.c4, t0.c0 FROM t0, v0, rt0, rt1 WHERE ((((~ (TRIM(rt0.c2, rt0.c1)))) ISNULL)) GROUP BY t0.c2, rt1.c1, rt1.c3, v0.c0, t0.c1, rt1.c2, rt0.c2, rt1.c0, rt0.c3, rt0.c1, rt0.c0, rt0.c4, t0.c0;
SELECT t0.c2, rt1.c1, rt1.c3, v0.c0, t0.c1, rt1.c2, rt0.c2, rt1.c0, rt0.c3, rt0.c1, rt0.c0, rt0.c4, t0.c0 FROM t0, v0, rt0, rt1 GROUP BY t0.c2, rt1.c1, rt1.c3, v0.c0, t0.c1, rt1.c2, rt0.c2, rt1.c0, rt0.c3, rt0.c1, rt0.c0, rt0.c4, t0.c0;
SELECT rt0.c0, rt0.c4 FROM t1, v0 CROSS JOIN rt0 ON (CAST(rt0.c0 AS BLOB) IN (rt0.c3 COLLATE BINARY)) GROUP BY rt0.c0, rt0.c4;
SELECT rt0.c0, rt0.c4 FROM t1, v0 CROSS JOIN rt0 ON (CAST(rt0.c0 AS BLOB) IN (rt0.c3 COLLATE BINARY)) GROUP BY rt0.c0, rt0.c4 HAVING MAX(((SUM(COUNT(*)))>=(rt0.c3))) UNION ALL SELECT ALL rt0.c0, rt0.c4 FROM t1, v0 CROSS JOIN rt0 ON (CAST(rt0.c0 AS BLOB) IN (rt0.c3 COLLATE BINARY)) GROUP BY rt0.c0, rt0.c4 HAVING (NOT (MAX(((SUM(COUNT(*)))>=(rt0.c3))))) UNION ALL SELECT ALL rt0.c0, rt0.c4 FROM t1, v0 CROSS JOIN rt0 ON (CAST(rt0.c0 AS BLOB) IN (rt0.c3 COLLATE BINARY)) GROUP BY rt0.c0, rt0.c4 HAVING ((MAX(((SUM(COUNT(*)))>=(rt0.c3)))) ISNULL);
SELECT rt0.c0, t0.c2, rt0.c4, v0.c0, rt0.c1, rt0.c2 FROM rt0, v0, t0;
SELECT rt0.c0, t0.c2, rt0.c4, v0.c0, rt0.c1, rt0.c2 FROM rt0, v0, t0 WHERE ((((rt0.c0, rt0.c0, rt0.c4)) BETWEEN ((NULL, rt0.c2, v0.c0)) AND ((LIKELY(DISTINCT v0.c0), ((v0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0)), (((rt0.c1)) BETWEEN ((NULL)) AND ((t0.c1))))))) UNION ALL SELECT rt0.c0, t0.c2, rt0.c4, v0.c0, rt0.c1, rt0.c2 FROM rt0, v0, t0 WHERE ((NOT ((((rt0.c0, rt0.c0, rt0.c4)) BETWEEN ((NULL, rt0.c2, v0.c0)) AND ((LIKELY(DISTINCT v0.c0), ((v0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0)), (((rt0.c1)) BETWEEN ((NULL)) AND ((t0.c1))))))))) UNION ALL SELECT rt0.c0, t0.c2, rt0.c4, v0.c0, rt0.c1, rt0.c2 FROM rt0, v0, t0 WHERE ((((((rt0.c0, rt0.c0, rt0.c4)) BETWEEN ((NULL, rt0.c2, v0.c0)) AND ((LIKELY(DISTINCT v0.c0), ((v0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0)), (((rt0.c1)) BETWEEN ((NULL)) AND ((t0.c1))))))) ISNULL));
SELECT rt0.c0, t0.c2, rt0.c4, v0.c0, rt0.c1, rt0.c2 FROM rt0, v0, t0;
SELECT DISTINCT v0.c0, rt1.c1, t1.c0 FROM rt1 CROSS JOIN v0 ON ((((v0.c0)LIKE(rt1.c1)))<=(rt1.c2 COLLATE BINARY)) LEFT OUTER JOIN t1 ON (- ((((t1.c0, v0.c0, rt1.c2))>=((0.6523168661742601, v0.c0, rt1.c1)))));
SELECT DISTINCT v0.c0, rt1.c1, t1.c0 FROM rt1 CROSS JOIN v0 ON ((((v0.c0)LIKE(rt1.c1)))<=(rt1.c2 COLLATE BINARY)) LEFT OUTER JOIN t1 ON (- ((((t1.c0, v0.c0, rt1.c2))>=((0.6523168661742601, v0.c0, rt1.c1))))) WHERE ((((NOT (rt1.c1))) NOTNULL)) UNION SELECT DISTINCT v0.c0, rt1.c1, t1.c0 FROM rt1 CROSS JOIN v0 ON ((((v0.c0)LIKE(rt1.c1)))<=(rt1.c2 COLLATE BINARY)) LEFT OUTER JOIN t1 ON (- ((((t1.c0, v0.c0, rt1.c2))>=((0.6523168661742601, v0.c0, rt1.c1))))) WHERE ((NOT ((((NOT (rt1.c1))) NOTNULL)))) UNION SELECT DISTINCT v0.c0, rt1.c1, t1.c0 FROM rt1 CROSS JOIN v0 ON ((((v0.c0)LIKE(rt1.c1)))<=(rt1.c2 COLLATE BINARY)) LEFT OUTER JOIN t1 ON (- ((((t1.c0, v0.c0, rt1.c2))>=((0.6523168661742601, v0.c0, rt1.c1))))) WHERE ((((((NOT (rt1.c1))) NOTNULL)) ISNULL));
SELECT DISTINCT v0.c0, rt1.c1, t1.c0 FROM rt1 CROSS JOIN v0 ON ((((v0.c0)LIKE(rt1.c1)))<=(rt1.c2 COLLATE BINARY)) LEFT OUTER JOIN t1 ON (- ((((t1.c0, v0.c0, rt1.c2))>=((0.6523168661742601, v0.c0, rt1.c1)))));
SELECT ALL rt0.c2, rt0.c1, rt0.c4 FROM rt0, v0, t1, rt1 GROUP BY rt0.c2, rt0.c1, rt0.c4;
SELECT rt0.c2, rt0.c1, rt0.c4 FROM rt0, v0, t1, rt1 WHERE (((((((rt0.c1)AND(rt1.c3)))OR(0.9622014084260463)))|((rt0.c3 IN ())))) GROUP BY rt0.c2, rt0.c1, rt0.c4 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c4 FROM rt0, v0, t1, rt1 WHERE ((NOT (((((((rt0.c1)AND(rt1.c3)))OR(0.9622014084260463)))|((rt0.c3 IN ())))))) GROUP BY rt0.c2, rt0.c1, rt0.c4 UNION SELECT rt0.c2, rt0.c1, rt0.c4 FROM rt0, v0, t1, rt1 WHERE (((((((((rt0.c1)AND(rt1.c3)))OR(0.9622014084260463)))|((rt0.c3 IN ())))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c4;
SELECT ALL rt0.c2, rt0.c1, rt0.c4 FROM rt0, v0, t1, rt1 GROUP BY rt0.c2, rt0.c1, rt0.c4;
SELECT ALL t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0;
SELECT t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0 HAVING MIN(CASE MAX(t0.c1)  WHEN t0.c0 THEN TOTAL(t0.c0) WHEN t0.c2 THEN MAX(t0.c1) WHEN MAX(GROUP_CONCAT(t0.c0)) THEN COUNT(*) ELSE t0.c2 END) UNION ALL SELECT t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0 HAVING (NOT (MIN(CASE MAX(t0.c1)  WHEN t0.c0 THEN TOTAL(t0.c0) WHEN t0.c2 THEN MAX(t0.c1) WHEN MAX(GROUP_CONCAT(t0.c0)) THEN COUNT(*) ELSE t0.c2 END))) UNION ALL SELECT ALL t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0 HAVING ((MIN(CASE MAX(t0.c1)  WHEN t0.c0 THEN TOTAL(t0.c0) WHEN t0.c2 THEN MAX(t0.c1) WHEN MAX(GROUP_CONCAT(t0.c0)) THEN COUNT(*) ELSE t0.c2 END)) ISNULL);
SELECT rt0.c4, rt0.c1, t1.c0, rt0.c3, rt0.c2, t0.c2, rt1.c3, rt1.c1, rt1.c2, rt1.c0, rt0.c0, t0.c0, t0.c1 FROM v0, t1, rt1, rt0 FULL OUTER JOIN t0 ON (((((t1.c0)) BETWEEN ((rt1.c0)) AND ((v0.c0)))) IS FALSE);
SELECT rt0.c4, rt0.c1, t1.c0, rt0.c3, rt0.c2, t0.c2, rt1.c3, rt1.c1, rt1.c2, rt1.c0, rt0.c0, t0.c0, t0.c1 FROM v0, t1, rt1, rt0 FULL OUTER JOIN t0 ON (((((t1.c0)) BETWEEN ((rt1.c0)) AND ((v0.c0)))) IS FALSE) WHERE (((((NULL) NOT BETWEEN (rt1.c3) AND (rt1.c2)))<>('1850311176'))) UNION ALL SELECT ALL rt0.c4, rt0.c1, t1.c0, rt0.c3, rt0.c2, t0.c2, rt1.c3, rt1.c1, rt1.c2, rt1.c0, rt0.c0, t0.c0, t0.c1 FROM v0, t1, rt1, rt0 FULL OUTER JOIN t0 ON (((((t1.c0)) BETWEEN ((rt1.c0)) AND ((v0.c0)))) IS FALSE) WHERE ((NOT (((((NULL) NOT BETWEEN (rt1.c3) AND (rt1.c2)))!=('1850311176'))))) UNION ALL SELECT rt0.c4, rt0.c1, t1.c0, rt0.c3, rt0.c2, t0.c2, rt1.c3, rt1.c1, rt1.c2, rt1.c0, rt0.c0, t0.c0, t0.c1 FROM v0, t1, rt1, rt0 FULL OUTER JOIN t0 ON (((((t1.c0)) BETWEEN ((rt1.c0)) AND ((v0.c0)))) IS FALSE) WHERE (((((((NULL) NOT BETWEEN (rt1.c3) AND (rt1.c2)))!=('1850311176'))) ISNULL));
SELECT rt0.c4, rt0.c1, t1.c0, rt0.c3, rt0.c2, t0.c2, rt1.c3, rt1.c1, rt1.c2, rt1.c0, rt0.c0, t0.c0, t0.c1 FROM v0, t1, rt1, rt0 FULL OUTER JOIN t0 ON (((((t1.c0)) BETWEEN ((rt1.c0)) AND ((v0.c0)))) IS FALSE);
SELECT DISTINCT * FROM rt0, rt1 FULL OUTER JOIN v0 ON ((((((((((((((rt0.c2)AND(rt0.c4)))AND(NULL)))OR(v0.c0)))OR(rt1.c3)))OR(rt0.c1)))OR(rt0.c3)))+(-658822584)) FULL OUTER JOIN t1 ON ((rt1.c0 COLLATE BINARY)-((t0.c2 IN (rt1.c2, t0.c2)))) INNER JOIN t0 ON (((x'98ef')) NOT BETWEEN ((ROUND(rt1.c1, t0.c1))) AND ((((((rt0.c0)OR(x'')))AND(t0.c0)))));
SELECT rt0.c1, rt0.c2, v0.c0, rt0.c4 FROM rt0 FULL OUTER JOIN t1 ON (((')ꛩ&z', rt0.c4, t1.c0)) BETWEEN (((~ (rt0.c1)), (~ (rt0.c2)), CAST(rt0.c4 AS BLOB))) AND ((((v0.c0)>=(-1.357205383E9)), ((v0.c0)=(rt0.c0)), ((rt0.c0)|(rt0.c1))))) RIGHT OUTER JOIN v0 ON (((v0.c0)) NOT BETWEEN ((((rt0.c0) NOTNULL))) AND ((load_extension(NULL, rt0.c0)))) GROUP BY rt0.c1, rt0.c2, v0.c0, rt0.c4;
SELECT ALL rt0.c4, v0.c0, rt0.c3, rt0.c2, rt0.c1, rt1.c1, t0.c1, rt1.c3, rt1.c2, rt0.c0, t0.c2, rt1.c0 FROM v0, t0, rt1, t1, rt0 GROUP BY rt0.c4, v0.c0, rt0.c3, rt0.c2, rt0.c1, rt1.c1, t0.c1, rt1.c3, rt1.c2, rt0.c0, t0.c2, rt1.c0;
SELECT ALL rt0.c4, v0.c0, rt0.c3, rt0.c2, rt0.c1, rt1.c1, t0.c1, rt1.c3, rt1.c2, rt0.c0, t0.c2, rt1.c0 FROM v0, t0, rt1, t1, rt0 GROUP BY rt0.c4, v0.c0, rt0.c3, rt0.c2, rt0.c1, rt1.c1, t0.c1, rt1.c3, rt1.c2, rt0.c0, t0.c2, rt1.c0 HAVING TOTAL((((v0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))) UNION ALL SELECT ALL rt0.c4, v0.c0, rt0.c3, rt0.c2, rt0.c1, rt1.c1, t0.c1, rt1.c3, rt1.c2, rt0.c0, t0.c2, rt1.c0 FROM v0, t0, rt1, t1, rt0 GROUP BY rt0.c4, v0.c0, rt0.c3, rt0.c2, rt0.c1, rt1.c1, t0.c1, rt1.c3, rt1.c2, rt0.c0, t0.c2, rt1.c0 HAVING (NOT (TOTAL((((v0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))))) UNION ALL SELECT ALL rt0.c4, v0.c0, rt0.c3, rt0.c2, rt0.c1, rt1.c1, t0.c1, rt1.c3, rt1.c2, rt0.c0, t0.c2, rt1.c0 FROM v0, t0, rt1, t1, rt0 GROUP BY rt0.c4, v0.c0, rt0.c3, rt0.c2, rt0.c1, rt1.c1, t0.c1, rt1.c3, rt1.c2, rt0.c0, t0.c2, rt1.c0 HAVING ((TOTAL((((v0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))) ISNULL);
SELECT ALL rt0.c4, v0.c0, rt0.c3, rt0.c2, rt0.c1, rt1.c1, t0.c1, rt1.c3, rt1.c2, rt0.c0, t0.c2, rt1.c0 FROM v0, t0, rt1, t1, rt0 GROUP BY rt0.c4, v0.c0, rt0.c3, rt0.c2, rt0.c1, rt1.c1, t0.c1, rt1.c3, rt1.c2, rt0.c0, t0.c2, rt1.c0;
SELECT ALL rt0.c4, v0.c0, rt0.c3, rt0.c2, rt0.c1, rt1.c1, t0.c1, rt1.c3, rt1.c2, rt0.c0, t0.c2, rt1.c0 FROM v0, t0, rt1, t1, rt0 GROUP BY rt0.c4, v0.c0, rt0.c3, rt0.c2, rt0.c1, rt1.c1, t0.c1, rt1.c3, rt1.c2, rt0.c0, t0.c2, rt1.c0 HAVING TOTAL((((v0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))) UNION ALL SELECT ALL rt0.c4, v0.c0, rt0.c3, rt0.c2, rt0.c1, rt1.c1, t0.c1, rt1.c3, rt1.c2, rt0.c0, t0.c2, rt1.c0 FROM v0, t0, rt1, t1, rt0 GROUP BY rt0.c4, v0.c0, rt0.c3, rt0.c2, rt0.c1, rt1.c1, t0.c1, rt1.c3, rt1.c2, rt0.c0, t0.c2, rt1.c0 HAVING (NOT (TOTAL((((v0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))))) UNION ALL SELECT ALL rt0.c4, v0.c0, rt0.c3, rt0.c2, rt0.c1, rt1.c1, t0.c1, rt1.c3, rt1.c2, rt0.c0, t0.c2, rt1.c0 FROM v0, t0, rt1, t1, rt0 GROUP BY rt0.c4, v0.c0, rt0.c3, rt0.c2, rt0.c1, rt1.c1, t0.c1, rt1.c3, rt1.c2, rt0.c0, t0.c2, rt1.c0 HAVING ((TOTAL((((v0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))) ISNULL);
SELECT ALL rt0.c4, v0.c0, rt0.c3, rt0.c2, rt0.c1, rt1.c1, t0.c1, rt1.c3, rt1.c2, rt0.c0, t0.c2, rt1.c0 FROM v0, t0, rt1, t1, rt0 GROUP BY rt0.c4, v0.c0, rt0.c3, rt0.c2, rt0.c1, rt1.c1, t0.c1, rt1.c3, rt1.c2, rt0.c0, t0.c2, rt1.c0;
SELECT ALL * FROM v0, t1, t0, rt1;
SELECT * FROM v0, t1, t0, rt1 WHERE ('-980749589') UNION ALL SELECT * FROM v0, t1, t0, rt1 WHERE ((NOT ('-980749589'))) UNION ALL SELECT ALL * FROM v0, t1, t0, rt1 WHERE ((('-980749589') ISNULL));
SELECT ALL * FROM v0, t1, t0, rt1;
SELECT DISTINCT t0.c1, rt0.c3, t0.c0, rt0.c0, t0.c2, rt0.c2, rt0.c1, rt0.c4 FROM rt0, t1, t0;
SELECT DISTINCT t0.c1, rt0.c3, t0.c0, rt0.c0, t0.c2, rt0.c2, rt0.c1, rt0.c4 FROM rt0, t1, t0 WHERE ((((((((((((rt0.c0, rt0.c0, rt0.c3)) NOT BETWEEN ((rt0.c4, rt0.c4, t1.c0)) AND ((rt0.c1, rt0.c1, t0.c1))))AND(CAST(0.8606335284389675 AS INTEGER))))OR(SQLITE_COMPILEOPTION_GET(t0.c0))))AND(rt0.c1)))OR(CASE WHEN t0.c2 THEN rt0.c1 WHEN rt0.c1 THEN t0.c1 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END))) UNION SELECT DISTINCT t0.c1, rt0.c3, t0.c0, rt0.c0, t0.c2, rt0.c2, rt0.c1, rt0.c4 FROM rt0, t1, t0 NOT INDEXED WHERE ((NOT ((((((((((((rt0.c0, rt0.c0, rt0.c3)) NOT BETWEEN ((rt0.c4, rt0.c4, t1.c0)) AND ((rt0.c1, rt0.c1, t0.c1))))AND(CAST(0.8606335284389675 AS INTEGER))))OR(SQLITE_COMPILEOPTION_GET(t0.c0))))AND(rt0.c1)))OR(CASE WHEN t0.c2 THEN rt0.c1 WHEN rt0.c1 THEN t0.c1 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END))))) UNION SELECT DISTINCT t0.c1, rt0.c3, t0.c0, rt0.c0, t0.c2, rt0.c2, rt0.c1, rt0.c4 FROM rt0, t1, t0 WHERE ((((((((((((((rt0.c0, rt0.c0, rt0.c3)) NOT BETWEEN ((rt0.c4, rt0.c4, t1.c0)) AND ((rt0.c1, rt0.c1, t0.c1))))AND(CAST(0.8606335284389675 AS INTEGER))))OR(SQLITE_COMPILEOPTION_GET(t0.c0))))AND(rt0.c1)))OR(CASE WHEN t0.c2 THEN rt0.c1 WHEN rt0.c1 THEN t0.c1 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END))) ISNULL));
SELECT DISTINCT t0.c1, rt0.c3, t0.c0, rt0.c0, t0.c2, rt0.c2, rt0.c1, rt0.c4 FROM rt0, t1, t0;
SELECT t0.c1, v0.c0, rt1.c1, t0.c0, rt1.c2, t0.c2, rt1.c0 FROM v0, rt1 INNER JOIN t1 ON (((((((rt1.c2)) BETWEEN ((t0.c1)) AND ((v0.c0))))AND((((t0.c1, -5.55744804E8, t0.c0))<=((t0.c1, t0.c0, rt1.c0))))))OR(rt1.c2 COLLATE NOCASE)) RIGHT OUTER JOIN t0 ON ((rt1.c0) IS TRUE) GROUP BY t0.c1, v0.c0, rt1.c1, t0.c0, rt1.c2, t0.c2, rt1.c0;
SELECT t0.c0, t0.c1, rt1.c1, rt1.c0, rt0.c2 FROM t1, t0, rt1, v0, rt0 NOT INDEXED GROUP BY t0.c0, t0.c1, rt1.c1, rt1.c0, rt0.c2;
SELECT t0.c0, t0.c1, rt1.c1, rt1.c0, rt0.c2 FROM t1, t0, rt1, v0, rt0 GROUP BY t0.c0, t0.c1, rt1.c1, rt1.c0, rt0.c2 HAVING SUM(TOTAL(rt1.c2)) UNION ALL SELECT ALL t0.c0, t0.c1, rt1.c1, rt1.c0, rt0.c2 FROM t1, t0, rt1, v0, rt0 GROUP BY t0.c0, t0.c1, rt1.c1, rt1.c0, rt0.c2 HAVING (NOT (SUM(TOTAL(rt1.c2)))) UNION ALL SELECT ALL t0.c0, t0.c1, rt1.c1, rt1.c0, rt0.c2 FROM t1, t0, rt1, v0, rt0 GROUP BY t0.c0, t0.c1, rt1.c1, rt1.c0, rt0.c2 HAVING ((SUM(TOTAL(rt1.c2))) ISNULL);
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE (((((v0.c0)<>('5KPi7⿇SA3')))>>((- (v0.c0))))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (((((v0.c0)<>('5KPi7⿇SA3')))>>((- (v0.c0))))))) UNION ALL SELECT * FROM v0 WHERE (((((((v0.c0)!=('5KPi7⿇SA3')))>>((- (v0.c0))))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM t1, rt0, rt1, v0, t0;
SELECT DISTINCT * FROM t1, rt0, rt1, v0, t0 WHERE (((((rt1.c3) IS TRUE)) NOTNULL)) UNION SELECT DISTINCT * FROM t1, rt0, rt1, v0, t0 WHERE ((NOT (((((rt1.c3) IS TRUE)) NOTNULL)))) UNION SELECT DISTINCT * FROM t1, rt0, rt1, v0, t0 WHERE (((((((rt1.c3) IS TRUE)) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM t1, rt0, rt1, v0, t0;
SELECT rt0.c0, rt1.c0, t0.c0, rt0.c3, rt1.c1, t0.c2, v0.c0, rt0.c1, t1.c0 FROM rt1, v0, t1, t0, rt0 GROUP BY rt0.c0, rt1.c0, t0.c0, rt0.c3, rt1.c1, t0.c2, v0.c0, rt0.c1, t1.c0;
SELECT rt0.c0, rt1.c0, t0.c0, rt0.c3, rt1.c1, t0.c2, v0.c0, rt0.c1, t1.c0 FROM rt1, v0, t1, t0, rt0 WHERE (((((t0.c0) NOT BETWEEN (t0.c1) AND (rt0.c0))) NOTNULL)) GROUP BY rt0.c0, rt1.c0, t0.c0, rt0.c3, rt1.c1, t0.c2, v0.c0, rt0.c1, t1.c0 UNION SELECT ALL rt0.c0, rt1.c0, t0.c0, rt0.c3, rt1.c1, t0.c2, v0.c0, rt0.c1, t1.c0 FROM rt1, v0, t1 NOT INDEXED, t0, rt0 WHERE ((NOT (((((t0.c0) NOT BETWEEN (t0.c1) AND (rt0.c0))) NOTNULL)))) GROUP BY rt0.c0, rt1.c0, t0.c0, rt0.c3, rt1.c1, t0.c2, v0.c0, rt0.c1, t1.c0 UNION SELECT ALL rt0.c0, rt1.c0, t0.c0, rt0.c3, rt1.c1, t0.c2, v0.c0, rt0.c1, t1.c0 FROM rt1, v0, t1, t0, rt0 WHERE (((((((t0.c0) NOT BETWEEN (t0.c1) AND (rt0.c0))) NOTNULL)) ISNULL)) GROUP BY rt0.c0, rt1.c0, t0.c0, rt0.c3, rt1.c1, t0.c2, v0.c0, rt0.c1, t1.c0;
SELECT rt0.c0, rt1.c0, t0.c0, rt0.c3, rt1.c1, t0.c2, v0.c0, rt0.c1, t1.c0 FROM rt1, v0, t1, t0, rt0 GROUP BY rt0.c0, rt1.c0, t0.c0, rt0.c3, rt1.c1, t0.c2, v0.c0, rt0.c1, t1.c0;
SELECT rt0.c4, t0.c0, rt0.c3, rt1.c1, rt1.c0, rt1.c3, rt0.c2, rt0.c1 FROM v0, t0 LEFT OUTER JOIN t1 ON rt1.c1 FULL OUTER JOIN rt0 ON (((rt0.c3)) NOT BETWEEN (((rt0.c2 IN ()))) AND ((((x'') NOT BETWEEN (rt0.c1) AND (rt1.c0))))) INNER JOIN rt1 ON (((rt1.c0)) BETWEEN ((((((((((rt1.c3)OR(rt0.c2)))OR(rt1.c2)))OR(t0.c2)))AND(rt0.c3)))) AND (((rt1.c3 IN ())))) GROUP BY rt0.c4, t0.c0, rt0.c3, rt1.c1, rt1.c0, rt1.c3, rt0.c2, rt0.c1;
SELECT ALL v0.c0, t1.c0 FROM t1, v0;
SELECT ALL v0.c0, t1.c0 FROM t1, v0 WHERE (json_object(((t1.c0)|(v0.c0)), CAST(v0.c0 AS NUMERIC))) UNION ALL SELECT v0.c0, t1.c0 FROM t1, v0 WHERE ((NOT (json_object(((t1.c0)|(v0.c0)), CAST(v0.c0 AS NUMERIC))))) UNION ALL SELECT v0.c0, t1.c0 FROM t1, v0 WHERE (((json_object(((t1.c0)|(v0.c0)), CAST(v0.c0 AS NUMERIC))) ISNULL));
SELECT DISTINCT t0.c1 FROM t0, v0, rt0, t1, rt1;
SELECT DISTINCT t0.c1 FROM t0, v0, rt0, t1, rt1 WHERE ((+ ((((rt1.c1))==((rt0.c3)))))) UNION SELECT DISTINCT t0.c1 FROM t0, v0, rt0, t1, rt1 WHERE ((NOT ((+ ((((rt1.c1))=((rt0.c3)))))))) UNION SELECT DISTINCT t0.c1 FROM t0, v0, rt0, t1, rt1 WHERE ((((+ ((((rt1.c1))==((rt0.c3)))))) ISNULL));
SELECT DISTINCT t0.c1 FROM t0, v0, rt0, t1, rt1;
SELECT rt1.c1, rt0.c4, rt1.c0, t0.c2, t0.c0, rt0.c1, rt0.c2, rt1.c2, rt1.c3 FROM rt1, v0, t1, rt0, t0 GROUP BY rt1.c1, rt0.c4, rt1.c0, t0.c2, t0.c0, rt0.c1, rt0.c2, rt1.c2, rt1.c3;
SELECT rt1.c1, rt0.c4, rt1.c0, t0.c2, t0.c0, rt0.c1, rt0.c2, rt1.c2, rt1.c3 FROM rt1, v0, t1, rt0, t0 WHERE (((((t1.c0 COLLATE BINARY)OR(x'ca50')))OR(((0.7338500645367282)|(t1.c0))))) GROUP BY rt1.c1, rt0.c4, rt1.c0, t0.c2, t0.c0, rt0.c1, rt0.c2, rt1.c2, rt1.c3 UNION SELECT rt1.c1, rt0.c4, rt1.c0, t0.c2, t0.c0, rt0.c1, rt0.c2, rt1.c2, rt1.c3 FROM rt1, v0, t1, rt0, t0 WHERE ((NOT (((((t1.c0 COLLATE BINARY)OR(x'ca50')))OR(((0.7338500645367282)|(t1.c0))))))) GROUP BY rt1.c1, rt0.c4, rt1.c0, t0.c2, t0.c0, rt0.c1, rt0.c2, rt1.c2, rt1.c3 UNION SELECT rt1.c1, rt0.c4, rt1.c0, t0.c2, t0.c0, rt0.c1, rt0.c2, rt1.c2, rt1.c3 FROM rt1, v0, t1, rt0, t0 WHERE (((((((t1.c0 COLLATE BINARY)OR(x'ca50')))OR(((0.7338500645367282)|(t1.c0))))) ISNULL)) GROUP BY rt1.c1, rt0.c4, rt1.c0, t0.c2, t0.c0, rt0.c1, rt0.c2, rt1.c2, rt1.c3;
SELECT rt1.c1, rt0.c4, rt1.c0, t0.c2, t0.c0, rt0.c1, rt0.c2, rt1.c2, rt1.c3 FROM rt1, v0, t1, rt0, t0 GROUP BY rt1.c1, rt0.c4, rt1.c0, t0.c2, t0.c0, rt0.c1, rt0.c2, rt1.c2, rt1.c3;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING SUM(COUNT(*)) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (SUM(COUNT(*)))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((SUM(COUNT(*))) ISNULL);
SELECT ALL rt0.c0, rt0.c1, t1.c0, rt0.c2, rt0.c4, rt0.c3 FROM t1, rt0, v0;
SELECT ALL rt0.c0, rt0.c1, t1.c0, rt0.c2, rt0.c4, rt0.c3 FROM t1, rt0, v0 WHERE (((((((((((((rt0.c0)OR('-1155179966')))AND(rt0.c0)))OR(rt0.c4)))AND(1900216272)))OR(((rt0.c1)>(rt0.c0)))))OR(((v0.c0)<(rt0.c2))))) UNION ALL SELECT rt0.c0, rt0.c1, t1.c0, rt0.c2, rt0.c4, rt0.c3 FROM t1, rt0, v0 WHERE ((NOT (((((((((((((rt0.c0)OR('-1155179966')))AND(rt0.c0)))OR(rt0.c4)))AND(1900216272)))OR(((rt0.c1)>(rt0.c0)))))OR(((v0.c0)<(rt0.c2))))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, t1.c0, rt0.c2, rt0.c4, rt0.c3 FROM t1, rt0, v0 WHERE (((((((((((((((rt0.c0)OR('-1155179966')))AND(rt0.c0)))OR(rt0.c4)))AND(1900216272)))OR(((rt0.c1)>(rt0.c0)))))OR(((v0.c0)<(rt0.c2))))) ISNULL));
SELECT ALL rt0.c0, rt0.c1, t1.c0, rt0.c2, rt0.c4, rt0.c3 FROM t1, rt0, v0;
SELECT DISTINCT rt1.c0, t1.c0, v0.c0, rt0.c1 FROM t1, t0, rt0, rt1, v0;
SELECT DISTINCT rt1.c0, t1.c0, v0.c0, rt0.c1 FROM t1, t0, rt0, rt1, v0 WHERE (((CASE WHEN t0.c1 THEN rt1.c2 END)IS((rt0.c0 IN ())))) UNION SELECT DISTINCT rt1.c0, t1.c0, v0.c0, rt0.c1 FROM t1, t0, rt0, rt1, v0 WHERE ((NOT (((CASE WHEN t0.c1 THEN rt1.c2 END)IS((rt0.c0 IN ())))))) UNION SELECT DISTINCT rt1.c0, t1.c0, v0.c0, rt0.c1 FROM t1, t0, rt0, rt1, v0 WHERE (((((CASE WHEN t0.c1 THEN rt1.c2 END)IS((rt0.c0 IN ())))) ISNULL));
SELECT DISTINCT rt1.c0, t1.c0, v0.c0, rt0.c1 FROM t1, t0, rt0, rt1, v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((NOT (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((NOT (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((NOT (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c2, rt0.c4, rt1.c2, rt1.c1, rt0.c3, rt0.c0 FROM rt1, rt0 GROUP BY rt0.c2, rt0.c4, rt1.c2, rt1.c1, rt0.c3, rt0.c0;
SELECT rt0.c2, rt0.c4, rt1.c2, rt1.c1, rt0.c3, rt0.c0 FROM rt1, rt0 GROUP BY rt0.c2, rt0.c4, rt1.c2, rt1.c1, rt0.c3, rt0.c0 HAVING ((rt0.c0 COLLATE RTRIM)<>(GROUP_CONCAT(SUM(rt0.c3)))) UNION ALL SELECT rt0.c2, rt0.c4, rt1.c2, rt1.c1, rt0.c3, rt0.c0 FROM rt1, rt0 GROUP BY rt0.c2, rt0.c4, rt1.c2, rt1.c1, rt0.c3, rt0.c0 HAVING (NOT (((rt0.c0 COLLATE RTRIM)<>(GROUP_CONCAT(SUM(rt0.c3)))))) UNION ALL SELECT rt0.c2, rt0.c4, rt1.c2, rt1.c1, rt0.c3, rt0.c0 FROM rt1, rt0 GROUP BY rt0.c2, rt0.c4, rt1.c2, rt1.c1, rt0.c3, rt0.c0 HAVING ((((rt0.c0 COLLATE RTRIM)!=(GROUP_CONCAT(SUM(rt0.c3))))) ISNULL);
SELECT ALL * FROM rt1, t1, v0, rt0;
SELECT * FROM rt1, t1, v0, rt0 WHERE ((((rt0.c0 COLLATE BINARY))<=((rt1.c0)))) UNION ALL SELECT ALL * FROM rt1, t1, v0, rt0 WHERE ((NOT ((((rt0.c0 COLLATE BINARY))<=((rt1.c0)))))) UNION ALL SELECT * FROM rt1, t1, v0, rt0 WHERE ((((((rt0.c0 COLLATE BINARY))<=((rt1.c0)))) ISNULL));
SELECT ALL * FROM rt1, t1, v0, rt0;
SELECT DISTINCT * FROM t1, t0, rt0;
SELECT DISTINCT * FROM t1, t0, rt0 WHERE (((t0.c2)||((t0.c2 IN ())))) UNION SELECT DISTINCT * FROM t1, t0, rt0 WHERE ((NOT (((t0.c2)||((t0.c2 IN ())))))) UNION SELECT DISTINCT * FROM t1, t0, rt0 WHERE (((((t0.c2)||((t0.c2 IN ())))) ISNULL));
SELECT DISTINCT * FROM t1, t0, rt0;
SELECT t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0;
SELECT ALL t0.c2, t0.c0 FROM t0 WHERE (LIKELIHOOD((t0.c1 IN ()), 0.9321457402325806)) GROUP BY t0.c2, t0.c0 UNION SELECT t0.c2, t0.c0 FROM t0 WHERE ((NOT (LIKELIHOOD((t0.c1 IN ()), 0.9321457402325806)))) GROUP BY t0.c2, t0.c0 UNION SELECT ALL t0.c2, t0.c0 FROM t0 WHERE (((LIKELIHOOD((t0.c1 IN ()), 0.9321457402325806)) ISNULL)) GROUP BY t0.c2, t0.c0;
SELECT t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0;
SELECT rt1.c1, t0.c0, rt0.c3, rt1.c0, t0.c1, rt0.c1, rt1.c2, t0.c2, t1.c0, rt0.c2, rt1.c3 FROM t1, v0, rt1, t0, rt0 GROUP BY rt1.c1, t0.c0, rt0.c3, rt1.c0, t0.c1, rt0.c1, rt1.c2, t0.c2, t1.c0, rt0.c2, rt1.c3;
SELECT rt1.c1, t0.c0, rt0.c3, rt1.c0, t0.c1, rt0.c1, rt1.c2, t0.c2, t1.c0, rt0.c2, rt1.c3 FROM t1, v0, rt1, t0, rt0 GROUP BY rt1.c1, t0.c0, rt0.c3, rt1.c0, t0.c1, rt0.c1, rt1.c2, t0.c2, t1.c0, rt0.c2, rt1.c3 HAVING SUM(((t1.c0)||(rt0.c0))) UNION ALL SELECT rt1.c1, t0.c0, rt0.c3, rt1.c0, t0.c1, rt0.c1, rt1.c2, t0.c2, t1.c0, rt0.c2, rt1.c3 FROM t1, v0, rt1, t0, rt0 GROUP BY rt1.c1, t0.c0, rt0.c3, rt1.c0, t0.c1, rt0.c1, rt1.c2, t0.c2, t1.c0, rt0.c2, rt1.c3 HAVING (NOT (SUM(((t1.c0)||(rt0.c0))))) UNION ALL SELECT rt1.c1, t0.c0, rt0.c3, rt1.c0, t0.c1, rt0.c1, rt1.c2, t0.c2, t1.c0, rt0.c2, rt1.c3 FROM t1, v0, rt1, t0, rt0 GROUP BY rt1.c1, t0.c0, rt0.c3, rt1.c0, t0.c1, rt0.c1, rt1.c2, t0.c2, t1.c0, rt0.c2, rt1.c3 HAVING ((SUM(((t1.c0)||(rt0.c0)))) ISNULL);
SELECT rt1.c1, t0.c0, rt0.c3, rt1.c0, t0.c1, rt0.c1, rt1.c2, t0.c2, t1.c0, rt0.c2, rt1.c3 FROM t1, v0, rt1, t0, rt0 GROUP BY rt1.c1, t0.c0, rt0.c3, rt1.c0, t0.c1, rt0.c1, rt1.c2, t0.c2, t1.c0, rt0.c2, rt1.c3;
SELECT rt1.c1, t0.c0, rt0.c3, rt1.c0, t0.c1, rt0.c1, rt1.c2, t0.c2, t1.c0, rt0.c2, rt1.c3 FROM t1, v0, rt1, t0, rt0 GROUP BY rt1.c1, t0.c0, rt0.c3, rt1.c0, t0.c1, rt0.c1, rt1.c2, t0.c2, t1.c0, rt0.c2, rt1.c3 HAVING SUM(((t1.c0)||(rt0.c0))) UNION ALL SELECT rt1.c1, t0.c0, rt0.c3, rt1.c0, t0.c1, rt0.c1, rt1.c2, t0.c2, t1.c0, rt0.c2, rt1.c3 FROM t1, v0, rt1, t0, rt0 GROUP BY rt1.c1, t0.c0, rt0.c3, rt1.c0, t0.c1, rt0.c1, rt1.c2, t0.c2, t1.c0, rt0.c2, rt1.c3 HAVING (NOT (SUM(((t1.c0)||(rt0.c0))))) UNION ALL SELECT rt1.c1, t0.c0, rt0.c3, rt1.c0, t0.c1, rt0.c1, rt1.c2, t0.c2, t1.c0, rt0.c2, rt1.c3 FROM t1, v0, rt1, t0, rt0 GROUP BY rt1.c1, t0.c0, rt0.c3, rt1.c0, t0.c1, rt0.c1, rt1.c2, t0.c2, t1.c0, rt0.c2, rt1.c3 HAVING ((SUM(((t1.c0)||(rt0.c0)))) ISNULL);
SELECT rt1.c1, t0.c0, rt0.c3, rt1.c0, t0.c1, rt0.c1, rt1.c2, t0.c2, t1.c0, rt0.c2, rt1.c3 FROM t1, v0, rt1, t0, rt0 GROUP BY rt1.c1, t0.c0, rt0.c3, rt1.c0, t0.c1, rt0.c1, rt1.c2, t0.c2, t1.c0, rt0.c2, rt1.c3;
SELECT * FROM rt1, rt0, t1, t0;
SELECT * FROM rt1, rt0, t1, t0 WHERE ((rt1.c2 IN ()) COLLATE BINARY) UNION ALL SELECT * FROM rt1, rt0, t1, t0 WHERE ((NOT ((rt1.c2 IN ()) COLLATE BINARY))) UNION ALL SELECT * FROM rt1, rt0, t1, t0 WHERE ((((rt1.c2 IN ()) COLLATE BINARY) ISNULL));
SELECT * FROM rt1, rt0, t1, t0;
SELECT DISTINCT t0.c0, t0.c1, v0.c0, rt0.c2, rt1.c2, rt0.c4, rt0.c0, rt0.c3, t1.c0, rt1.c3, rt0.c1 FROM t1, rt1 INNER JOIN t0 ON t0.c2 COLLATE BINARY FULL OUTER JOIN v0 ON ((rt0.c3 COLLATE NOCASE)+(CAST(rt0.c1 AS REAL))) FULL OUTER JOIN rt0 ON ((((t0.c2) IS TRUE))%(((NULL) NOT BETWEEN (t1.c0) AND (rt0.c4))));
SELECT rt0.c4, rt1.c0, rt0.c1, rt1.c1, t0.c0, rt1.c3, t0.c1, t1.c0, rt0.c3, rt0.c0, rt1.c2 FROM rt0, rt1, t0, t1 GROUP BY rt0.c4, rt1.c0, rt0.c1, rt1.c1, t0.c0, rt1.c3, t0.c1, t1.c0, rt0.c3, rt0.c0, rt1.c2;
SELECT ALL rt0.c4, rt1.c0, rt0.c1, rt1.c1, t0.c0, rt1.c3, t0.c1, t1.c0, rt0.c3, rt0.c0, rt1.c2 FROM rt0, rt1, t0, t1 WHERE (((ABS(rt0.c1)) BETWEEN ((~ (rt1.c1))) AND (COALESCE(DISTINCT 0.8455979169226836, rt1.c3, t1.c0, rt1.c0)))) GROUP BY rt0.c4, rt1.c0, rt0.c1, rt1.c1, t0.c0, rt1.c3, t0.c1, t1.c0, rt0.c3, rt0.c0, rt1.c2 UNION SELECT ALL rt0.c4, rt1.c0, rt0.c1, rt1.c1, t0.c0, rt1.c3, t0.c1, t1.c0, rt0.c3, rt0.c0, rt1.c2 FROM rt0, rt1, t0, t1 WHERE ((NOT (((ABS(rt0.c1)) BETWEEN ((~ (rt1.c1))) AND (COALESCE(DISTINCT 0.8455979169226836, rt1.c3, t1.c0, rt1.c0)))))) GROUP BY rt0.c4, rt1.c0, rt0.c1, rt1.c1, t0.c0, rt1.c3, t0.c1, t1.c0, rt0.c3, rt0.c0, rt1.c2 UNION SELECT rt0.c4, rt1.c0, rt0.c1, rt1.c1, t0.c0, rt1.c3, t0.c1, t1.c0, rt0.c3, rt0.c0, rt1.c2 FROM rt0, rt1, t0, t1 WHERE (((((ABS(rt0.c1)) BETWEEN ((~ (rt1.c1))) AND (COALESCE(DISTINCT 0.8455979169226836, rt1.c3, t1.c0, rt1.c0)))) ISNULL)) GROUP BY rt0.c4, rt1.c0, rt0.c1, rt1.c1, t0.c0, rt1.c3, t0.c1, t1.c0, rt0.c3, rt0.c0, rt1.c2;
SELECT rt0.c4, rt1.c0, rt0.c1, rt1.c1, t0.c0, rt1.c3, t0.c1, t1.c0, rt0.c3, rt0.c0, rt1.c2 FROM rt0, rt1, t0, t1 GROUP BY rt0.c4, rt1.c0, rt0.c1, rt1.c1, t0.c0, rt1.c3, t0.c1, t1.c0, rt0.c3, rt0.c0, rt1.c2;
SELECT t0.c1, rt0.c3, t0.c2, rt0.c2, rt0.c1, rt1.c3, rt0.c4, rt1.c0, rt1.c1, rt1.c2, t0.c0, v0.c0 FROM t0, rt1, v0, rt0, t1 GROUP BY t0.c1, rt0.c3, t0.c2, rt0.c2, rt0.c1, rt1.c3, rt0.c4, rt1.c0, rt1.c1, rt1.c2, t0.c0, v0.c0;
SELECT t0.c1, rt0.c3, t0.c2, rt0.c2, rt0.c1, rt1.c3, rt0.c4, rt1.c0, rt1.c1, rt1.c2, t0.c0, v0.c0 FROM t0, rt1, v0, rt0, t1 GROUP BY t0.c1, rt0.c3, t0.c2, rt0.c2, rt0.c1, rt1.c3, rt0.c4, rt1.c0, rt1.c1, rt1.c2, t0.c0, v0.c0 HAVING ((AVG(COUNT(rt0.c3))) NOT NULL) UNION ALL SELECT ALL t0.c1, rt0.c3, t0.c2, rt0.c2, rt0.c1, rt1.c3, rt0.c4, rt1.c0, rt1.c1, rt1.c2, t0.c0, v0.c0 FROM t0, rt1, v0, rt0, t1 GROUP BY t0.c1, rt0.c3, t0.c2, rt0.c2, rt0.c1, rt1.c3, rt0.c4, rt1.c0, rt1.c1, rt1.c2, t0.c0, v0.c0 HAVING (NOT (((AVG(COUNT(rt0.c3))) NOT NULL))) UNION ALL SELECT t0.c1, rt0.c3, t0.c2, rt0.c2, rt0.c1, rt1.c3, rt0.c4, rt1.c0, rt1.c1, rt1.c2, t0.c0, v0.c0 FROM t0, rt1, v0, rt0, t1 GROUP BY t0.c1, rt0.c3, t0.c2, rt0.c2, rt0.c1, rt1.c3, rt0.c4, rt1.c0, rt1.c1, rt1.c2, t0.c0, v0.c0 HAVING ((((AVG(COUNT(rt0.c3))) NOT NULL)) ISNULL);
SELECT rt0.c3, rt0.c4 FROM v0, t1, rt0;
SELECT ALL rt0.c3, rt0.c4 FROM v0, t1, rt0 WHERE (COALESCE(CAST(rt0.c2 AS TEXT), ((rt0.c4)||(0.6158933540475615)))) UNION ALL SELECT ALL rt0.c3, rt0.c4 FROM v0, t1, rt0 WHERE ((NOT (COALESCE(CAST(rt0.c2 AS TEXT), ((rt0.c4)||(0.6158933540475615)))))) UNION ALL SELECT rt0.c3, rt0.c4 FROM v0, t1, rt0 WHERE (((COALESCE(CAST(rt0.c2 AS TEXT), ((rt0.c4)||(0.6158933540475615)))) ISNULL));
SELECT rt0.c3, rt0.c4 FROM v0, t1, rt0;
SELECT DISTINCT rt1.c3, rt1.c0, rt1.c2, rt1.c1 FROM rt1;
SELECT DISTINCT rt1.c3, rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE (NULL COLLATE RTRIM) UNION SELECT DISTINCT rt1.c3, rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE ((NOT (NULL COLLATE RTRIM))) UNION SELECT DISTINCT rt1.c3, rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE (((NULL COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt1.c3, rt1.c0, rt1.c2, rt1.c1 FROM rt1;
SELECT ALL t0.c2, t0.c1, rt0.c2 FROM t1, t0, rt0 GROUP BY t0.c2, t0.c1, rt0.c2;
SELECT ALL t0.c2, t0.c1, rt0.c2 FROM t1, t0, rt0 WHERE (CAST((((t0.c1))<=((rt0.c4))) AS INTEGER)) GROUP BY t0.c2, t0.c1, rt0.c2 UNION SELECT ALL t0.c2, t0.c1, rt0.c2 FROM t1, t0, rt0 WHERE ((NOT (CAST((((t0.c1))<=((rt0.c4))) AS INTEGER)))) GROUP BY t0.c2, t0.c1, rt0.c2 UNION SELECT t0.c2, t0.c1, rt0.c2 FROM t1, t0, rt0 WHERE (((CAST((((t0.c1))<=((rt0.c4))) AS INTEGER)) ISNULL)) GROUP BY t0.c2, t0.c1, rt0.c2;
SELECT ALL t0.c2, t0.c1, rt0.c2 FROM t1, t0, rt0 GROUP BY t0.c2, t0.c1, rt0.c2;
SELECT t0.c0 FROM t0, v0, t1, rt1 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 NOT INDEXED, v0, t1, rt1 GROUP BY t0.c0 HAVING SUM((+ (COUNT(COUNT(v0.c0))))) UNION ALL SELECT t0.c0 FROM t0, v0, t1, rt1 GROUP BY t0.c0 HAVING (NOT (SUM((+ (COUNT(COUNT(v0.c0))))))) UNION ALL SELECT ALL t0.c0 FROM t0, v0, t1, rt1 GROUP BY t0.c0 HAVING ((SUM((+ (COUNT(COUNT(v0.c0)))))) ISNULL);
SELECT ALL * FROM t0, t1, rt1;
SELECT ALL * FROM t0, t1, rt1 WHERE (TRIM(DISTINCT rt1.c0, rt1.c1) COLLATE RTRIM COLLATE BINARY) UNION ALL SELECT * FROM t0, t1, rt1 WHERE ((NOT (TRIM(DISTINCT rt1.c0, rt1.c1) COLLATE RTRIM COLLATE BINARY))) UNION ALL SELECT ALL * FROM t0, t1, rt1 WHERE (((TRIM(DISTINCT rt1.c0, rt1.c1) COLLATE RTRIM COLLATE BINARY) ISNULL));
SELECT ALL * FROM t0, t1, rt1;
SELECT DISTINCT t1.c0, rt0.c0, rt1.c0, rt1.c1, rt1.c2, rt0.c3, rt0.c4 FROM rt1 CROSS JOIN v0 ON rt1.c3 LEFT OUTER JOIN t1 ON ((v0.c0 COLLATE NOCASE)OR(((((rt0.c2)AND(rt0.c4)))OR(rt0.c4)))) CROSS JOIN rt0 ON ((((rt1.c2) NOT NULL)) NOTNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (TRIM(DISTINCT (~ (v0.c0)), CAST(v0.c0 AS TEXT))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (TRIM(DISTINCT (~ (v0.c0)), CAST(v0.c0 AS TEXT))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((TRIM(DISTINCT (~ (v0.c0)), CAST(v0.c0 AS TEXT))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c1, t0.c0, rt1.c1, rt0.c0, rt1.c2, t0.c2, rt1.c0, t0.c1, rt0.c3, rt0.c4 FROM rt0, rt1, t0 GROUP BY rt0.c1, t0.c0, rt1.c1, rt0.c0, rt1.c2, t0.c2, rt1.c0, t0.c1, rt0.c3, rt0.c4;
SELECT ALL rt0.c1, t0.c0, rt1.c1, rt0.c0, rt1.c2, t0.c2, rt1.c0, t0.c1, rt0.c3, rt0.c4 FROM rt0, rt1, t0 GROUP BY rt0.c1, t0.c0, rt1.c1, rt0.c0, rt1.c2, t0.c2, rt1.c0, t0.c1, rt0.c3, rt0.c4 HAVING COUNT(*) UNION ALL SELECT rt0.c1, t0.c0, rt1.c1, rt0.c0, rt1.c2, t0.c2, rt1.c0, t0.c1, rt0.c3, rt0.c4 FROM rt0, rt1, t0 GROUP BY rt0.c1, t0.c0, rt1.c1, rt0.c0, rt1.c2, t0.c2, rt1.c0, t0.c1, rt0.c3, rt0.c4 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1, t0.c0, rt1.c1, rt0.c0, rt1.c2, t0.c2, rt1.c0, t0.c1, rt0.c3, rt0.c4 FROM rt0, rt1, t0 GROUP BY rt0.c1, t0.c0, rt1.c1, rt0.c0, rt1.c2, t0.c2, rt1.c0, t0.c1, rt0.c3, rt0.c4 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c1, t0.c0, rt1.c1, rt0.c0, rt1.c2, t0.c2, rt1.c0, t0.c1, rt0.c3, rt0.c4 FROM rt0, rt1, t0 GROUP BY rt0.c1, t0.c0, rt1.c1, rt0.c0, rt1.c2, t0.c2, rt1.c0, t0.c1, rt0.c3, rt0.c4;
SELECT ALL rt0.c1, t0.c0, rt1.c1, rt0.c0, rt1.c2, t0.c2, rt1.c0, t0.c1, rt0.c3, rt0.c4 FROM rt0, rt1, t0 GROUP BY rt0.c1, t0.c0, rt1.c1, rt0.c0, rt1.c2, t0.c2, rt1.c0, t0.c1, rt0.c3, rt0.c4 HAVING COUNT(*) UNION ALL SELECT rt0.c1, t0.c0, rt1.c1, rt0.c0, rt1.c2, t0.c2, rt1.c0, t0.c1, rt0.c3, rt0.c4 FROM rt0, rt1, t0 GROUP BY rt0.c1, t0.c0, rt1.c1, rt0.c0, rt1.c2, t0.c2, rt1.c0, t0.c1, rt0.c3, rt0.c4 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1, t0.c0, rt1.c1, rt0.c0, rt1.c2, t0.c2, rt1.c0, t0.c1, rt0.c3, rt0.c4 FROM rt0, rt1, t0 GROUP BY rt0.c1, t0.c0, rt1.c1, rt0.c0, rt1.c2, t0.c2, rt1.c0, t0.c1, rt0.c3, rt0.c4 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c1, t0.c0, rt1.c1, rt0.c0, rt1.c2, t0.c2, rt1.c0, t0.c1, rt0.c3, rt0.c4 FROM rt0, rt1, t0 GROUP BY rt0.c1, t0.c0, rt1.c1, rt0.c0, rt1.c2, t0.c2, rt1.c0, t0.c1, rt0.c3, rt0.c4;
SELECT ALL * FROM rt0 CROSS JOIN v0 ON rt0.c1;
SELECT * FROM rt0 CROSS JOIN v0 ON rt0.c1 WHERE (CASE WHEN (+ (rt0.c1)) THEN (~ (rt0.c4)) WHEN CAST(v0.c0 AS REAL) THEN ((rt0.c1)IS NOT(rt0.c0)) WHEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) THEN ((rt0.c0)-(rt0.c2)) WHEN CAST(rt0.c3 AS BLOB) THEN '581804899' WHEN CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END THEN (((v0.c0, rt0.c3, rt0.c0))<=((rt0.c0, rt0.c2, rt0.c3))) END) UNION ALL SELECT ALL * FROM rt0 CROSS JOIN v0 ON rt0.c1 WHERE ((NOT (CASE WHEN (+ (rt0.c1)) THEN (~ (rt0.c4)) WHEN CAST(v0.c0 AS REAL) THEN ((rt0.c1)IS NOT(rt0.c0)) WHEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) THEN ((rt0.c0)-(rt0.c2)) WHEN CAST(rt0.c3 AS BLOB) THEN '581804899' WHEN CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END THEN (((v0.c0, rt0.c3, rt0.c0))<=((rt0.c0, rt0.c2, rt0.c3))) END))) UNION ALL SELECT ALL * FROM rt0 CROSS JOIN v0 ON rt0.c1 WHERE (((CASE WHEN (+ (rt0.c1)) THEN (~ (rt0.c4)) WHEN CAST(v0.c0 AS REAL) THEN ((rt0.c1)IS NOT(rt0.c0)) WHEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) THEN ((rt0.c0)-(rt0.c2)) WHEN CAST(rt0.c3 AS BLOB) THEN '581804899' WHEN CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END THEN (((v0.c0, rt0.c3, rt0.c0))<=((rt0.c0, rt0.c2, rt0.c3))) END) ISNULL));
SELECT ALL * FROM rt0 CROSS JOIN v0 ON rt0.c1;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE (x'') UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (x''))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE (((x'') ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT ALL t0.c0, t0.c1, t0.c2 FROM t0, rt1 GROUP BY t0.c0, t0.c1, t0.c2;
SELECT t0.c0, t0.c1, t0.c2 FROM t0, rt1 WHERE ((((- (t0.c2))) NOT BETWEEN (((((t0.c2)OR(t0.c1)))AND(rt1.c3))) AND (t0.c1))) GROUP BY t0.c0, t0.c1, t0.c2 UNION SELECT t0.c0, t0.c1, t0.c2 FROM t0, rt1 WHERE ((NOT ((((- (t0.c2))) NOT BETWEEN (((((t0.c2)OR(t0.c1)))AND(rt1.c3))) AND (t0.c1))))) GROUP BY t0.c0, t0.c1, t0.c2 UNION SELECT t0.c0, t0.c1, t0.c2 FROM t0, rt1 WHERE ((((((- (t0.c2))) NOT BETWEEN (((((t0.c2)OR(t0.c1)))AND(rt1.c3))) AND (t0.c1))) ISNULL)) GROUP BY t0.c0, t0.c1, t0.c2;
SELECT ALL t0.c0, t0.c1, t0.c2 FROM t0, rt1 GROUP BY t0.c0, t0.c1, t0.c2;
SELECT ALL v0.c0, rt1.c0, rt0.c1, rt0.c4, t0.c2, rt1.c2, rt1.c3, rt0.c2, rt1.c1, t0.c0, rt0.c3, t0.c1 FROM t0, rt0 FULL OUTER JOIN v0 ON (((((rt1.c2, rt1.c2, rt0.c1)) BETWEEN ((rt0.c0, rt0.c1, rt1.c0)) AND ((rt1.c1, rt1.c2, rt0.c4)))) NOT BETWEEN (CAST('-1357205383' AS BLOB)) AND (((rt0.c2)<(NULL)))) CROSS JOIN rt1 ON ((t0.c1)>(t1.c0)) COLLATE NOCASE LEFT OUTER JOIN t1 ON ((CAST(t0.c1 AS REAL))>>(((((rt1.c0)AND(t0.c0)))AND(rt1.c0)))) GROUP BY v0.c0, rt1.c0, rt0.c1, rt0.c4, t0.c2, rt1.c2, rt1.c3, rt0.c2, rt1.c1, t0.c0, rt0.c3, t0.c1;
SELECT t0.c0, rt1.c2, rt0.c3 FROM rt0, v0 INNER JOIN t0 ON CASE CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END  WHEN CAST(rt1.c1 AS REAL) THEN ((((rt1.c3)AND(rt0.c0)))OR(v0.c0)) ELSE ((t0.c0)||(rt0.c1)) END LEFT OUTER JOIN rt1 ON 1.826091579E9;
SELECT ALL t0.c0, rt1.c2, rt0.c3 FROM rt0, v0 INNER JOIN t0 ON CASE CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END  WHEN CAST(rt1.c1 AS REAL) THEN ((((rt1.c3)AND(rt0.c0)))OR(v0.c0)) ELSE ((t0.c0)||(rt0.c1)) END LEFT OUTER JOIN rt1 ON 1.826091579E9 WHERE ((((rt0.c1 IN (t0.c0)))+(rt0.c3))) UNION ALL SELECT ALL t0.c0, rt1.c2, rt0.c3 FROM rt0, v0 INNER JOIN t0 ON CASE CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END  WHEN CAST(rt1.c1 AS REAL) THEN ((((rt1.c3)AND(rt0.c0)))OR(v0.c0)) ELSE ((t0.c0)||(rt0.c1)) END LEFT OUTER JOIN rt1 ON 1.826091579E9 WHERE ((NOT ((((rt0.c1 IN (t0.c0)))+(rt0.c3))))) UNION ALL SELECT ALL t0.c0, rt1.c2, rt0.c3 FROM rt0, v0 INNER JOIN t0 ON CASE CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END  WHEN CAST(rt1.c1 AS REAL) THEN ((((rt1.c3)AND(rt0.c0)))OR(v0.c0)) ELSE ((t0.c0)||(rt0.c1)) END LEFT OUTER JOIN rt1 ON 1.826091579E9 WHERE ((((((rt0.c1 IN (t0.c0)))+(rt0.c3))) ISNULL));
SELECT t0.c0, rt1.c2, rt0.c3 FROM rt0, v0 INNER JOIN t0 ON CASE CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END  WHEN CAST(rt1.c1 AS REAL) THEN ((((rt1.c3)AND(rt0.c0)))OR(v0.c0)) ELSE ((t0.c0)||(rt0.c1)) END LEFT OUTER JOIN rt1 ON 1.826091579E9;
SELECT DISTINCT * FROM rt1, rt0, v0;
SELECT DISTINCT * FROM rt1, rt0, v0 WHERE ((((rt0.c1)LIKE(v0.c0)) IN (((((((((rt1.c1)OR(rt0.c3)))OR(v0.c0)))OR(rt0.c4)))OR(rt0.c1))))) UNION SELECT DISTINCT * FROM rt1, rt0, v0 WHERE ((NOT ((((rt0.c1)LIKE(v0.c0)) IN (((((((((rt1.c1)OR(rt0.c3)))OR(v0.c0)))OR(rt0.c4)))OR(rt0.c1))))))) UNION SELECT DISTINCT * FROM rt1, rt0, v0 WHERE ((((((rt0.c1)LIKE(v0.c0)) IN (((((((((rt1.c1)OR(rt0.c3)))OR(v0.c0)))OR(rt0.c4)))OR(rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM rt1, rt0, v0;
SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE (-1618413641) GROUP BY rt1.c2, rt1.c1, rt1.c0 UNION SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE ((NOT (-1618413641))) GROUP BY rt1.c2, rt1.c1, rt1.c0 UNION SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE (((-1618413641) ISNULL)) GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT rt1.c3, rt0.c2, rt1.c0, rt0.c4, t1.c0, v0.c0, rt1.c1, rt0.c1, rt1.c2 FROM rt1, v0, t1, rt0 GROUP BY rt1.c3, rt0.c2, rt1.c0, rt0.c4, t1.c0, v0.c0, rt1.c1, rt0.c1, rt1.c2;
SELECT ALL rt1.c3, rt0.c2, rt1.c0, rt0.c4, t1.c0, v0.c0, rt1.c1, rt0.c1, rt1.c2 FROM rt1, v0, t1, rt0 GROUP BY rt1.c3, rt0.c2, rt1.c0, rt0.c4, t1.c0, v0.c0, rt1.c1, rt0.c1, rt1.c2 HAVING TOTAL(rt0.c2) COLLATE RTRIM UNION ALL SELECT rt1.c3, rt0.c2, rt1.c0, rt0.c4, t1.c0, v0.c0, rt1.c1, rt0.c1, rt1.c2 FROM rt1, v0, t1, rt0 GROUP BY rt1.c3, rt0.c2, rt1.c0, rt0.c4, t1.c0, v0.c0, rt1.c1, rt0.c1, rt1.c2 HAVING (NOT (TOTAL(rt0.c2) COLLATE RTRIM)) UNION ALL SELECT ALL rt1.c3, rt0.c2, rt1.c0, rt0.c4, t1.c0, v0.c0, rt1.c1, rt0.c1, rt1.c2 FROM rt1, v0, t1, rt0 GROUP BY rt1.c3, rt0.c2, rt1.c0, rt0.c4, t1.c0, v0.c0, rt1.c1, rt0.c1, rt1.c2 HAVING ((TOTAL(rt0.c2) COLLATE RTRIM) ISNULL);
SELECT rt1.c3, rt0.c2, rt1.c0, rt0.c4, t1.c0, v0.c0, rt1.c1, rt0.c1, rt1.c2 FROM rt1, v0, t1, rt0 GROUP BY rt1.c3, rt0.c2, rt1.c0, rt0.c4, t1.c0, v0.c0, rt1.c1, rt0.c1, rt1.c2;
SELECT ALL rt1.c3, rt0.c2, rt1.c0, rt0.c4, t1.c0, v0.c0, rt1.c1, rt0.c1, rt1.c2 FROM rt1, v0, t1, rt0 GROUP BY rt1.c3, rt0.c2, rt1.c0, rt0.c4, t1.c0, v0.c0, rt1.c1, rt0.c1, rt1.c2 HAVING TOTAL(rt0.c2) COLLATE RTRIM UNION ALL SELECT rt1.c3, rt0.c2, rt1.c0, rt0.c4, t1.c0, v0.c0, rt1.c1, rt0.c1, rt1.c2 FROM rt1, v0, t1, rt0 GROUP BY rt1.c3, rt0.c2, rt1.c0, rt0.c4, t1.c0, v0.c0, rt1.c1, rt0.c1, rt1.c2 HAVING (NOT (TOTAL(rt0.c2) COLLATE RTRIM)) UNION ALL SELECT ALL rt1.c3, rt0.c2, rt1.c0, rt0.c4, t1.c0, v0.c0, rt1.c1, rt0.c1, rt1.c2 FROM rt1, v0, t1, rt0 GROUP BY rt1.c3, rt0.c2, rt1.c0, rt0.c4, t1.c0, v0.c0, rt1.c1, rt0.c1, rt1.c2 HAVING ((TOTAL(rt0.c2) COLLATE RTRIM) ISNULL);
SELECT rt1.c3, rt0.c2, rt1.c0, rt0.c4, t1.c0, v0.c0, rt1.c1, rt0.c1, rt1.c2 FROM rt1, v0, t1, rt0 GROUP BY rt1.c3, rt0.c2, rt1.c0, rt0.c4, t1.c0, v0.c0, rt1.c1, rt0.c1, rt1.c2;
SELECT MIN(((((t0.c2)LIKE(rt0.c4))) ISNULL)) FROM t0, t1, v0, rt0;
SELECT ALL rt0.c1, rt1.c2 FROM rt1, t1, rt0, v0;
SELECT ALL rt0.c1, rt1.c2 FROM rt1, t1, rt0, v0 WHERE (((CASE rt0.c2  WHEN v0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt1.c0 THEN rt0.c3 END) NOT BETWEEN ((((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((v0.c0)))) AND ((- (rt1.c2))))) UNION ALL SELECT ALL rt0.c1, rt1.c2 FROM rt1, t1, rt0, v0 WHERE ((NOT (((CASE rt0.c2  WHEN v0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt1.c0 THEN rt0.c3 END) NOT BETWEEN ((((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((v0.c0)))) AND ((- (rt1.c2))))))) UNION ALL SELECT rt0.c1, rt1.c2 FROM rt1, t1, rt0, v0 WHERE (((((CASE rt0.c2  WHEN v0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt1.c0 THEN rt0.c3 END) NOT BETWEEN ((((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((v0.c0)))) AND ((- (rt1.c2))))) ISNULL));
SELECT ALL rt0.c1, rt1.c2 FROM rt1, t1, rt0, v0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c3, rt0.c2, rt0.c4, v0.c0 FROM v0, rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c3, rt0.c2, rt0.c4, v0.c0 FROM v0, rt0 WHERE ((NOT (0.8856734041428737))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c3, rt0.c2, rt0.c4, v0.c0 FROM v0, rt0 WHERE ((NOT ((NOT (0.8856734041428737))))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c3, rt0.c2, rt0.c4, v0.c0 FROM v0, rt0 WHERE ((((NOT (0.8856734041428737))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c3, rt0.c2, rt0.c4, v0.c0 FROM v0, rt0;
SELECT ALL t0.c1, t0.c0, rt0.c0, rt0.c2, rt0.c1, rt1.c0, v0.c0, rt1.c1, t1.c0, rt0.c3 FROM t0, rt1, t1, rt0, v0 GROUP BY t0.c1, t0.c0, rt0.c0, rt0.c2, rt0.c1, rt1.c0, v0.c0, rt1.c1, t1.c0, rt0.c3;
SELECT ALL t0.c1, t0.c0, rt0.c0, rt0.c2, rt0.c1, rt1.c0, v0.c0, rt1.c1, t1.c0, rt0.c3 FROM t0, rt1, t1, rt0, v0 WHERE ((NOT (COALESCE(DISTINCT t0.c0, rt1.c3)))) GROUP BY t0.c1, t0.c0, rt0.c0, rt0.c2, rt0.c1, rt1.c0, v0.c0, rt1.c1, t1.c0, rt0.c3 UNION SELECT ALL t0.c1, t0.c0, rt0.c0, rt0.c2, rt0.c1, rt1.c0, v0.c0, rt1.c1, t1.c0, rt0.c3 FROM t0, rt1, t1, rt0, v0 WHERE ((NOT ((NOT (COALESCE(DISTINCT t0.c0, rt1.c3)))))) GROUP BY t0.c1, t0.c0, rt0.c0, rt0.c2, rt0.c1, rt1.c0, v0.c0, rt1.c1, t1.c0, rt0.c3 UNION SELECT ALL t0.c1, t0.c0, rt0.c0, rt0.c2, rt0.c1, rt1.c0, v0.c0, rt1.c1, t1.c0, rt0.c3 FROM t0, rt1, t1, rt0 NOT INDEXED, v0 WHERE ((((NOT (COALESCE(DISTINCT t0.c0, rt1.c3)))) ISNULL)) GROUP BY t0.c1, t0.c0, rt0.c0, rt0.c2, rt0.c1, rt1.c0, v0.c0, rt1.c1, t1.c0, rt0.c3;
SELECT ALL t0.c1, t0.c0, rt0.c0, rt0.c2, rt0.c1, rt1.c0, v0.c0, rt1.c1, t1.c0, rt0.c3 FROM t0, rt1, t1, rt0, v0 GROUP BY t0.c1, t0.c0, rt0.c0, rt0.c2, rt0.c1, rt1.c0, v0.c0, rt1.c1, t1.c0, rt0.c3;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING COUNT(SUM(COUNT(TOTAL(t1.c0)))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (COUNT(SUM(COUNT(TOTAL(t1.c0)))))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((COUNT(SUM(COUNT(TOTAL(t1.c0))))) ISNULL);
SELECT ALL * FROM t1, rt1, rt0, v0, t0;
SELECT ALL * FROM t1, rt1, rt0, v0, t0 WHERE ((((((NULL)) BETWEEN ((t0.c2)) AND ((rt0.c2)))) IS FALSE)) UNION ALL SELECT * FROM t1, rt1, rt0, v0, t0 WHERE ((NOT ((((((NULL)) BETWEEN ((t0.c2)) AND ((rt0.c2)))) IS FALSE)))) UNION ALL SELECT * FROM t1, rt1, rt0, v0, t0 WHERE ((((((((NULL)) BETWEEN ((t0.c2)) AND ((rt0.c2)))) IS FALSE)) ISNULL));
SELECT ALL * FROM t1, rt1, rt0, v0, t0;
SELECT DISTINCT rt0.c4, t0.c0 FROM rt1, v0, t0 LEFT OUTER JOIN rt0 ON x'' RIGHT OUTER JOIN t1 ON (((rt0.c4, rt0.c4, rt1.c3)) NOT BETWEEN ((((rt1.c0)<>(rt0.c4)), (rt0.c3 IN (rt0.c1, rt0.c0)), rt0.c1)) AND ((((t0.c1) NOTNULL), ABS(rt1.c2), ((t0.c2) IS FALSE))));
SELECT DISTINCT rt0.c4, t0.c0 FROM rt1, v0, t0 LEFT OUTER JOIN rt0 ON x'' RIGHT OUTER JOIN t1 ON (((rt0.c4, rt0.c4, rt1.c3)) NOT BETWEEN ((((rt1.c0)!=(rt0.c4)), (rt0.c3 IN (rt0.c1, rt0.c0)), rt0.c1)) AND ((((t0.c1) NOTNULL), ABS(rt1.c2), ((t0.c2) IS FALSE)))) WHERE (((((((((rt1.c2)AND(((((t0.c2)AND(rt1.c0)))OR(rt0.c2)))))AND(t0.c2 COLLATE NOCASE)))AND(((rt0.c0) BETWEEN (rt1.c2) AND (rt1.c3)))))AND(CASE rt0.c4  WHEN rt1.c2 THEN rt1.c0 END))) UNION SELECT DISTINCT rt0.c4, t0.c0 FROM rt1, v0, t0 LEFT OUTER JOIN rt0 ON x'' RIGHT OUTER JOIN t1 ON (((rt0.c4, rt0.c4, rt1.c3)) NOT BETWEEN ((((rt1.c0)!=(rt0.c4)), (rt0.c3 IN (rt0.c1, rt0.c0)), rt0.c1)) AND ((((t0.c1) NOTNULL), ABS(rt1.c2), ((t0.c2) IS FALSE)))) WHERE ((NOT (((((((((rt1.c2)AND(((((t0.c2)AND(rt1.c0)))OR(rt0.c2)))))AND(t0.c2 COLLATE NOCASE)))AND(((rt0.c0) BETWEEN (rt1.c2) AND (rt1.c3)))))AND(CASE rt0.c4  WHEN rt1.c2 THEN rt1.c0 END))))) UNION SELECT DISTINCT rt0.c4, t0.c0 FROM rt1, v0, t0 LEFT OUTER JOIN rt0 ON x'' RIGHT OUTER JOIN t1 ON (((rt0.c4, rt0.c4, rt1.c3)) NOT BETWEEN ((((rt1.c0)!=(rt0.c4)), (rt0.c3 IN (rt0.c1, rt0.c0)), rt0.c1)) AND ((((t0.c1) NOTNULL), ABS(rt1.c2), ((t0.c2) IS FALSE)))) WHERE (((((((((((rt1.c2)AND(((((t0.c2)AND(rt1.c0)))OR(rt0.c2)))))AND(t0.c2 COLLATE NOCASE)))AND(((rt0.c0) BETWEEN (rt1.c2) AND (rt1.c3)))))AND(CASE rt0.c4  WHEN rt1.c2 THEN rt1.c0 END))) ISNULL));
SELECT DISTINCT rt0.c4, t0.c0 FROM rt1, v0, t0 LEFT OUTER JOIN rt0 ON x'' RIGHT OUTER JOIN t1 ON (((rt0.c4, rt0.c4, rt1.c3)) NOT BETWEEN ((((rt1.c0)<>(rt0.c4)), (rt0.c3 IN (rt0.c1, rt0.c0)), rt0.c1)) AND ((((t0.c1) NOTNULL), ABS(rt1.c2), ((t0.c2) IS FALSE))));
SELECT ALL t0.c0 FROM v0, rt1, t1, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM v0, rt1, t1, t0 WHERE ((~ (CASE WHEN v0.c0 THEN t1.c0 END))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM v0, rt1, t1, t0 WHERE ((NOT ((~ (CASE WHEN v0.c0 THEN t1.c0 END))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM v0, rt1, t1, t0 WHERE ((((~ (CASE WHEN v0.c0 THEN t1.c0 END))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM v0, rt1, t1, t0 GROUP BY t0.c0;
SELECT ALL rt1.c3, rt1.c1, t0.c1, rt1.c2, t0.c0, rt1.c0, t1.c0, t0.c2 FROM t1 NOT INDEXED, rt1, t0 GROUP BY rt1.c3, rt1.c1, t0.c1, rt1.c2, t0.c0, rt1.c0, t1.c0, t0.c2;
SELECT ALL rt1.c3, rt1.c1, t0.c1, rt1.c2, t0.c0, rt1.c0, t1.c0, t0.c2 FROM t1, rt1, t0 GROUP BY rt1.c3, rt1.c1, t0.c1, rt1.c2, t0.c0, rt1.c0, t1.c0, t0.c2 HAVING COUNT(*) UNION ALL SELECT rt1.c3, rt1.c1, t0.c1, rt1.c2, t0.c0, rt1.c0, t1.c0, t0.c2 FROM t1, rt1, t0 GROUP BY rt1.c3, rt1.c1, t0.c1, rt1.c2, t0.c0, rt1.c0, t1.c0, t0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c3, rt1.c1, t0.c1, rt1.c2, t0.c0, rt1.c0, t1.c0, t0.c2 FROM t1, rt1, t0 GROUP BY rt1.c3, rt1.c1, t0.c1, rt1.c2, t0.c0, rt1.c0, t1.c0, t0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c3, rt1.c1, t0.c1, rt1.c2, t0.c0, rt1.c0, t1.c0, t0.c2 FROM t1 NOT INDEXED, rt1, t0 GROUP BY rt1.c3, rt1.c1, t0.c1, rt1.c2, t0.c0, rt1.c0, t1.c0, t0.c2;
SELECT ALL rt1.c3, rt1.c1, t0.c1, rt1.c2, t0.c0, rt1.c0, t1.c0, t0.c2 FROM t1, rt1, t0 GROUP BY rt1.c3, rt1.c1, t0.c1, rt1.c2, t0.c0, rt1.c0, t1.c0, t0.c2 HAVING COUNT(*) UNION ALL SELECT rt1.c3, rt1.c1, t0.c1, rt1.c2, t0.c0, rt1.c0, t1.c0, t0.c2 FROM t1, rt1, t0 GROUP BY rt1.c3, rt1.c1, t0.c1, rt1.c2, t0.c0, rt1.c0, t1.c0, t0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c3, rt1.c1, t0.c1, rt1.c2, t0.c0, rt1.c0, t1.c0, t0.c2 FROM t1, rt1, t0 GROUP BY rt1.c3, rt1.c1, t0.c1, rt1.c2, t0.c0, rt1.c0, t1.c0, t0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c3, rt1.c1, t0.c1, rt1.c2, t0.c0, rt1.c0, t1.c0, t0.c2 FROM t1 NOT INDEXED, rt1, t0 GROUP BY rt1.c3, rt1.c1, t0.c1, rt1.c2, t0.c0, rt1.c0, t1.c0, t0.c2;
