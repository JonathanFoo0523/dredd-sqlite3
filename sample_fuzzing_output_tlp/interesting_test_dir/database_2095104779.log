-- Time: 2024/06/11 01:34:14
-- Database: database79
-- Database version: 3.40.0
-- seed value: 2095104779
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED); -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
END; -- 0ms;
PRAGMA threads = 3202428525661079519; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '2657'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x''); -- 0ms;
PRAGMA default_cache_size = -1537365420; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
END TRANSACTION; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
PRAGMA temp.recursive_triggers; -- 0ms;
PRAGMA default_cache_size; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0Xffffffffbb814dd4); -- 0ms;
INSERT OR ABORT INTO vt0(c0) VALUES (x'c985'); -- 0ms;
PRAGMA temp.wal_autocheckpoint; -- 0ms;
UPDATE vt0 SET (c0)=(NULL); -- 0ms;
PRAGMA default_cache_size; -- 0ms;
PRAGMA main.automatic_index = true; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('-1149153836'), (0Xffffffffbb814dd4), (x'8ab4'); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL); -- 0ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 505721585); -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (NULL); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
PRAGMA journal_size_limit; -- 0ms;
INSERT OR ABORT INTO vt0(c0) VALUES (0.22490771467910853); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1116399043); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('-1202307893'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.10986624803682954); -- 0ms;
PRAGMA soft_heap_limit; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT; -- 1ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '37003'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x'fc65'); -- 0ms;
CREATE TEMP VIEW  IF NOT EXISTS v0(c0) AS SELECT TYPEOF(DISTINCT vt0.c0) COLLATE BINARY FROM vt0 ORDER BY CASE WHEN ((vt0.c0) ISNULL) THEN vt0.c0 END  NULLS FIRST, ((((((((((vt0.c0) NOT NULL))AND((vt0.c0 IN (vt0.c0, vt0.c0)))))AND(CAST(vt0.c0 AS NUMERIC))))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(CAST(vt0.c0 AS INTEGER)))  NULLS LAST; -- 0ms;
CREATE TEMPORARY TABLE IF NOT EXISTS t0 (c0 INTEGER  CHECK ( c0)); -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES ('/V\Uo{Q)'); -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES (''); -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES (''); -- 0ms;
PRAGMA temp.defer_foreign_keys = true; -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (NULL), ('玅'), (x''); -- 0ms;
INSERT OR ABORT INTO vt0(c0) VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('-1527415080'), (''''), ('}dp4?C'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 1ms;
PRAGMA main.busy_timeout; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-1202307893,14');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 5ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ABORT INTO t1(c0) VALUES (x''), (-1.52741508E9), ('E~b*'), ('2146976274'), ('1602456318'); -- 0ms;
INSERT OR ABORT INTO vt0(c0) VALUES (NULL), ('1979478917'), (NULL); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x''); -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (0.053258784653933744); -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i91 ON t1(CASE (('1678566427')==(c0))  WHEN c0 THEN ((c0) ISNULL) WHEN ((c0)||(c0)) THEN (c0 IN ()) WHEN ((c0) BETWEEN (c0) AND (c0)) THEN CAST(c0 AS INTEGER) END COLLATE BINARY ASC) WHERE (((('Ft0eQ') ISNULL))IS(CASE c0  WHEN c0 THEN c0 WHEN c0 THEN c0 WHEN c0 THEN c0 WHEN c0 THEN x'' WHEN c0 THEN c0 ELSE c0 END)); -- 0ms;
ANALYZE temp; -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
DELETE FROM vt0; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
VACUUM; -- 2ms;
PRAGMA stats; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('1953218456'); -- 0ms;
REINDEX i91; -- 0ms;
REINDEX; -- 1ms;
REINDEX; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1341354466); -- 0ms;
REINDEX; -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
CREATE INDEX i34 ON t1(CAST(c0 AS BLOB) ASC) WHERE c0; -- 0ms;
END TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES ('au)玅oX'); -- 0ms;
VACUUM temp; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=2146976274,4');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=1771812649,5');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 9); -- 1ms;
INSERT OR FAIL INTO vt0(c0) VALUES ('-1527415080'); -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES (0xffffffff9fc54ad5); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 12); -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES (1602456318); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0X699bb729); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1158970938); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-2069590256,12');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=3'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=10'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
PRAGMA secure_delete; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
REINDEX; -- 1ms;
END; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES (x''); -- 1ms;
REINDEX; -- 0ms;
REINDEX; -- 0ms;
ANALYZE; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 4); -- 0ms;
PRAGMA temp.mmap_size; -- 0ms;
END TRANSACTION; -- 0ms;
REINDEX i34; -- 0ms;
REINDEX  vt0; -- 0ms;
INSERT OR ABORT INTO vt0 VALUES (NULL); -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL t1.c0, vt0.c0, v0.c0 FROM vt0, t1, v0;
SELECT t1.c0, vt0.c0, v0.c0 FROM vt0, t1, v0 WHERE ((t1.c0 COLLATE RTRIM IN ())) UNION ALL SELECT t1.c0, vt0.c0, v0.c0 FROM vt0, t1, v0 WHERE ((NOT ((t1.c0 COLLATE RTRIM IN ())))) UNION ALL SELECT t1.c0, vt0.c0, v0.c0 FROM vt0, t1, v0 WHERE ((((t1.c0 COLLATE RTRIM IN ())) ISNULL));
SELECT ALL t1.c0, vt0.c0, v0.c0 FROM vt0, t1, v0;
SELECT DISTINCT vt0.c0 FROM v0 INNER JOIN vt0 ON CAST(vt0.c0 AS REAL) COLLATE NOCASE;
SELECT DISTINCT vt0.c0 FROM v0 INNER JOIN vt0 ON CAST(vt0.c0 AS REAL) COLLATE NOCASE WHERE ((+ (LOWER(DISTINCT v0.c0)))) UNION SELECT DISTINCT vt0.c0 FROM v0 INNER JOIN vt0 ON CAST(vt0.c0 AS REAL) COLLATE NOCASE WHERE ((NOT ((+ (LOWER(DISTINCT v0.c0)))))) UNION SELECT DISTINCT vt0.c0 FROM v0 INNER JOIN vt0 ON CAST(vt0.c0 AS REAL) COLLATE NOCASE WHERE ((((+ (LOWER(DISTINCT v0.c0)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM v0 INNER JOIN vt0 ON CAST(vt0.c0 AS REAL) COLLATE NOCASE;
SELECT t1.c0, v0.c0 FROM t1, v0 GROUP BY t1.c0, v0.c0;
SELECT ALL t1.c0, v0.c0 FROM t1, v0 WHERE ((((((((((((t1.c0)AND(v0.c0)))AND(t1.c0)))OR(v0.c0)))OR(v0.c0))))<>((x'')))) GROUP BY t1.c0, v0.c0 UNION SELECT ALL t1.c0, v0.c0 FROM t1, v0 WHERE ((NOT ((((((((((((t1.c0)AND(v0.c0)))AND(t1.c0)))OR(v0.c0)))OR(v0.c0))))<>((x'')))))) GROUP BY t1.c0, v0.c0 UNION SELECT ALL t1.c0, v0.c0 FROM t1, v0 WHERE ((((((((((((((t1.c0)AND(v0.c0)))AND(t1.c0)))OR(v0.c0)))OR(v0.c0))))!=((x'')))) ISNULL)) GROUP BY t1.c0, v0.c0;
SELECT t1.c0, v0.c0 FROM t1, v0 GROUP BY t1.c0, v0.c0;
SELECT ALL v0.c0, t1.c0 FROM v0, t1, vt0 GROUP BY v0.c0, t1.c0;
SELECT ALL v0.c0, t1.c0 FROM v0, t1, vt0 GROUP BY v0.c0, t1.c0 HAVING CASE ((COUNT(*))!=(AVG(TOTAL(COUNT(MIN(COUNT(COUNT(v0.c0))))))))  WHEN SUM(AVG(t1.c0)) THEN COUNT(*) ELSE (((v0.c0, TOTAL(v0.c0), 0.22490771467910853)) NOT BETWEEN ((GROUP_CONCAT(MIN(MAX(v0.c0))), COUNT(*), SUM(t1.c0))) AND ((t1.c0, v0.c0, MIN(t1.c0)))) END UNION ALL SELECT ALL v0.c0, t1.c0 FROM v0, t1, vt0 GROUP BY v0.c0, t1.c0 HAVING (NOT (CASE ((COUNT(*))!=(AVG(TOTAL(COUNT(MIN(COUNT(COUNT(v0.c0))))))))  WHEN SUM(AVG(t1.c0)) THEN COUNT(*) ELSE (((v0.c0, TOTAL(v0.c0), 0.22490771467910853)) NOT BETWEEN ((GROUP_CONCAT(MIN(MAX(v0.c0))), COUNT(*), SUM(t1.c0))) AND ((t1.c0, v0.c0, MIN(t1.c0)))) END)) UNION ALL SELECT v0.c0, t1.c0 FROM v0, t1, vt0 GROUP BY v0.c0, t1.c0 HAVING ((CASE ((COUNT(*))<>(AVG(TOTAL(COUNT(MIN(COUNT(COUNT(v0.c0))))))))  WHEN SUM(AVG(t1.c0)) THEN COUNT(*) ELSE (((v0.c0, TOTAL(v0.c0), 0.22490771467910853)) NOT BETWEEN ((GROUP_CONCAT(MIN(MAX(v0.c0))), COUNT(*), SUM(t1.c0))) AND ((t1.c0, v0.c0, MIN(t1.c0)))) END) ISNULL);
SELECT v0.c0, vt0.c0 FROM vt0, v0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 WHERE (CAST(CASE WHEN vt0.c0 THEN vt0.c0 END AS BLOB)) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 WHERE ((NOT (CAST(CASE WHEN vt0.c0 THEN vt0.c0 END AS BLOB)))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 WHERE (((CAST(CASE WHEN vt0.c0 THEN vt0.c0 END AS BLOB)) ISNULL));
SELECT v0.c0, vt0.c0 FROM vt0, v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((((v0.c0 IN ()))|(((v0.c0) IS FALSE)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((((v0.c0 IN ()))|(((v0.c0) IS FALSE)))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((v0.c0 IN ()))|(((v0.c0) IS FALSE)))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 WHERE ((((NOT (v0.c0))) NOT BETWEEN (CAST(v0.c0 AS INTEGER)) AND (v0.c0 COLLATE NOCASE))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 WHERE ((NOT ((((NOT (v0.c0))) NOT BETWEEN (CAST(v0.c0 AS INTEGER)) AND (v0.c0 COLLATE NOCASE))))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 WHERE ((((((NOT (v0.c0))) NOT BETWEEN (CAST(v0.c0 AS INTEGER)) AND (v0.c0 COLLATE NOCASE))) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (((t1.c0)) BETWEEN ((MAX(MIN(t1.c0)))) AND (('	+QkB~*z{'))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT ((((t1.c0)) BETWEEN ((MAX(MIN(t1.c0)))) AND (('	+QkB~*z{'))))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (((((t1.c0)) BETWEEN ((MAX(MIN(t1.c0)))) AND (('	+QkB~*z{')))) ISNULL);
SELECT ALL t1.c0, vt0.c0 FROM t1, vt0, v0;
SELECT ALL t1.c0, vt0.c0 FROM t1, vt0, v0 WHERE (((v0.c0) NOT BETWEEN ('9I좫j㿳SHY') AND (vt0.c0 COLLATE BINARY))) UNION ALL SELECT t1.c0, vt0.c0 FROM t1, vt0, v0 WHERE ((NOT (((v0.c0) NOT BETWEEN ('9I좫j㿳SHY') AND (vt0.c0 COLLATE BINARY))))) UNION ALL SELECT t1.c0, vt0.c0 FROM t1, vt0, v0 WHERE (((((v0.c0) NOT BETWEEN ('9I좫j㿳SHY') AND (vt0.c0 COLLATE BINARY))) ISNULL));
SELECT ALL t1.c0, vt0.c0 FROM t1, vt0, v0;
SELECT DISTINCT vt0.c0 FROM v0, vt0;
SELECT DISTINCT vt0.c0 FROM v0, vt0 WHERE ((- ('')) COLLATE BINARY COLLATE RTRIM) UNION SELECT DISTINCT vt0.c0 FROM v0, vt0 WHERE ((NOT ((- ('')) COLLATE BINARY COLLATE RTRIM))) UNION SELECT DISTINCT vt0.c0 FROM v0, vt0 WHERE ((((- ('')) COLLATE BINARY COLLATE RTRIM) ISNULL));
SELECT DISTINCT vt0.c0 FROM v0, vt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))GLOB(x''))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))GLOB(x''))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))GLOB(x''))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (- ((COUNT(*) IN ()))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT ((- ((COUNT(*) IN ()))))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (((- ((COUNT(*) IN ())))) ISNULL);
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (- ((COUNT(*) IN ()))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT ((- ((COUNT(*) IN ()))))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (((- ((COUNT(*) IN ())))) ISNULL);
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE ('?3DR') UNION ALL SELECT * FROM vt0 WHERE ((NOT ('?3DR'))) UNION ALL SELECT * FROM vt0 NOT INDEXED WHERE ((('?3DR') ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0, t1, v0;
SELECT DISTINCT * FROM vt0, t1, v0 WHERE (CASE WHEN t1.c0 THEN t1.c0 END COLLATE BINARY) UNION SELECT DISTINCT * FROM vt0, t1, v0 WHERE ((NOT (CASE WHEN t1.c0 THEN t1.c0 END COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt0, t1, v0 WHERE (((CASE WHEN t1.c0 THEN t1.c0 END COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM vt0, t1, v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((((v0.c0) NOT NULL))) AND ((v0.c0 COLLATE RTRIM)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((((v0.c0)) NOT BETWEEN ((((v0.c0) NOT NULL))) AND ((v0.c0 COLLATE RTRIM)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((((v0.c0)) NOT BETWEEN ((((v0.c0) NOT NULL))) AND ((v0.c0 COLLATE RTRIM)))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0 NATURAL JOIN v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0 NATURAL JOIN v0 GROUP BY v0.c0 HAVING MIN(SUM(GROUP_CONCAT(vt0.c0))) UNION ALL SELECT v0.c0 FROM vt0 NATURAL JOIN v0 GROUP BY v0.c0 HAVING (NOT (MIN(SUM(GROUP_CONCAT(vt0.c0))))) UNION ALL SELECT ALL v0.c0 FROM vt0 NATURAL JOIN v0 GROUP BY v0.c0 HAVING ((MIN(SUM(GROUP_CONCAT(vt0.c0)))) ISNULL);
SELECT * FROM vt0, t1, v0;
SELECT * FROM vt0, t1, v0 WHERE ('uIdM6/') UNION ALL SELECT * FROM vt0, t1, v0 WHERE ((NOT ('uIdM6/'))) UNION ALL SELECT * FROM vt0, t1, v0 WHERE ((('uIdM6/') ISNULL));
SELECT * FROM vt0, t1, v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 NOT INDEXED WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)>(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN NULL THEN v0.c0 END))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)>(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN NULL THEN v0.c0 END))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)>(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN NULL THEN v0.c0 END))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL vt0.c0 FROM vt0 INNER JOIN v0 ON CASE WHEN ((vt0.c0) NOTNULL) THEN ((vt0.c0) NOTNULL) END GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 INNER JOIN v0 ON CASE WHEN ((vt0.c0) NOTNULL) THEN ((vt0.c0) NOTNULL) END WHERE ((~ (json_quote(v0.c0)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 INNER JOIN v0 ON CASE WHEN ((vt0.c0) NOTNULL) THEN ((vt0.c0) NOTNULL) END WHERE ((NOT ((~ (json_quote(v0.c0)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 INNER JOIN v0 ON CASE WHEN ((vt0.c0) NOTNULL) THEN ((vt0.c0) NOTNULL) END WHERE ((((~ (json_quote(v0.c0)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 INNER JOIN v0 ON CASE WHEN ((vt0.c0) NOTNULL) THEN ((vt0.c0) NOTNULL) END GROUP BY vt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING TOTAL(SUM(AVG(MIN(SUM(COUNT(v0.c0)))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TOTAL(SUM(AVG(MIN(SUM(COUNT(v0.c0)))))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL(SUM(AVG(MIN(SUM(COUNT(v0.c0))))))) ISNULL);
SELECT ALL * FROM t1;
SELECT ALL * FROM t1 WHERE (CAST(CASE NULL  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END AS NUMERIC)) ORDER BY (((((t1.c0, t1.c0, '1678566427')) NOT BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((t1.c0, t1.c0, t1.c0)))) NOT BETWEEN (t1.c0) AND (TYPEOF(DISTINCT t1.c0))) ASC  NULLS LAST, (((((t1.c0, t1.c0, t1.c0)) BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((t1.c0, t1.c0, t1.c0)))) BETWEEN (json_extract(t1.c0, t1.c0)) AND (((t1.c0)IS(t1.c0)))) ASC  NULLS LAST, ((UNLIKELY(t1.c0)) BETWEEN (t1.c0 COLLATE RTRIM) AND (-1614460203))  NULLS LAST;
SELECT DISTINCT vt0.c0, v0.c0, t1.c0 FROM vt0, v0, t1;
SELECT DISTINCT vt0.c0, v0.c0, t1.c0 FROM vt0, v0, t1 WHERE (((((t1.c0) BETWEEN (v0.c0) AND (t1.c0))) IS TRUE)) UNION SELECT DISTINCT vt0.c0, v0.c0, t1.c0 FROM vt0, v0, t1 WHERE ((NOT (((((t1.c0) BETWEEN (v0.c0) AND (t1.c0))) IS TRUE)))) UNION SELECT DISTINCT vt0.c0, v0.c0, t1.c0 FROM vt0, v0, t1 WHERE (((((((t1.c0) BETWEEN (v0.c0) AND (t1.c0))) IS TRUE)) ISNULL));
SELECT DISTINCT vt0.c0, v0.c0, t1.c0 FROM vt0, v0, t1;
SELECT ALL vt0.c0, v0.c0, t1.c0 FROM t1, vt0, v0 GROUP BY vt0.c0, v0.c0, t1.c0;
SELECT vt0.c0, v0.c0, t1.c0 FROM t1, vt0, v0 WHERE (((CAST(t1.c0 AS REAL))<(((((v0.c0)OR(t1.c0)))OR(vt0.c0))))) GROUP BY vt0.c0, v0.c0, t1.c0 UNION SELECT ALL vt0.c0, v0.c0, t1.c0 FROM t1, vt0, v0 WHERE ((NOT (((CAST(t1.c0 AS REAL))<(((((v0.c0)OR(t1.c0)))OR(vt0.c0))))))) GROUP BY vt0.c0, v0.c0, t1.c0 UNION SELECT vt0.c0, v0.c0, t1.c0 FROM t1, vt0, v0 WHERE (((((CAST(t1.c0 AS REAL))<(((((v0.c0)OR(t1.c0)))OR(vt0.c0))))) ISNULL)) GROUP BY vt0.c0, v0.c0, t1.c0;
SELECT ALL vt0.c0, v0.c0, t1.c0 FROM t1, vt0, v0 GROUP BY vt0.c0, v0.c0, t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING CAST(CAST(t1.c0 AS BLOB) AS TEXT) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (CAST(CAST(t1.c0 AS BLOB) AS TEXT))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((CAST(CAST(t1.c0 AS BLOB) AS TEXT)) ISNULL);
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING CAST(CAST(t1.c0 AS BLOB) AS TEXT) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (CAST(CAST(t1.c0 AS BLOB) AS TEXT))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((CAST(CAST(t1.c0 AS BLOB) AS TEXT)) ISNULL);
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL v0.c0 FROM v0 NATURAL JOIN vt0;
SELECT v0.c0 FROM v0 NATURAL JOIN vt0 WHERE (CAST(CASE v0.c0  WHEN vt0.c0 THEN v0.c0 END AS TEXT)) UNION ALL SELECT v0.c0 FROM v0 NATURAL JOIN vt0 WHERE ((NOT (CAST(CASE v0.c0  WHEN vt0.c0 THEN v0.c0 END AS TEXT)))) UNION ALL SELECT ALL v0.c0 FROM v0 NATURAL JOIN vt0 WHERE (((CAST(CASE v0.c0  WHEN vt0.c0 THEN v0.c0 END AS TEXT)) ISNULL));
SELECT ALL v0.c0 FROM v0 NATURAL JOIN vt0;
SELECT DISTINCT v0.c0, t1.c0 FROM v0, vt0, t1;
SELECT DISTINCT v0.c0, t1.c0 FROM v0, vt0, t1 NOT INDEXED WHERE (v0.c0) UNION SELECT DISTINCT v0.c0, t1.c0 FROM v0, vt0, t1 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT v0.c0, t1.c0 FROM v0, vt0, t1 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT v0.c0, t1.c0 FROM v0, vt0, t1;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE ((+ ((NULL IN (t1.c0))))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT ((+ ((NULL IN (t1.c0))))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((((+ ((NULL IN (t1.c0))))) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING GROUP_CONCAT(MIN(x'caf0')) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (GROUP_CONCAT(MIN(x'caf0')))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((GROUP_CONCAT(MIN(x'caf0'))) ISNULL);
SELECT ALL vt0.c0, v0.c0 FROM v0 NATURAL JOIN vt0;
SELECT ALL vt0.c0, v0.c0 FROM v0 NATURAL JOIN vt0 WHERE (((((((((v0.c0)AND(x'')))OR(v0.c0)))AND(((vt0.c0)GLOB(v0.c0)))))OR(CASE WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END))) UNION ALL SELECT vt0.c0, v0.c0 FROM v0 NATURAL JOIN vt0 WHERE ((NOT (((((((((v0.c0)AND(x'')))OR(v0.c0)))AND(((vt0.c0)GLOB(v0.c0)))))OR(CASE WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END))))) UNION ALL SELECT vt0.c0, v0.c0 FROM v0 NATURAL JOIN vt0 WHERE (((((((((((v0.c0)AND(x'')))OR(v0.c0)))AND(((vt0.c0)GLOB(v0.c0)))))OR(CASE WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END))) ISNULL));
SELECT ALL vt0.c0, v0.c0 FROM v0 NATURAL JOIN vt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((('1387177131') BETWEEN (v0.c0) AND (((v0.c0)<=(v0.c0))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((('1387177131') BETWEEN (v0.c0) AND (((v0.c0)<=(v0.c0))))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((('1387177131') BETWEEN (v0.c0) AND (((v0.c0)<=(v0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((x'') NOTNULL)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((x'') NOTNULL)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((x'') NOTNULL)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (((TOTAL(COUNT(t1.c0)), t1.c0, t1.c0)) BETWEEN ((COUNT(*), GROUP_CONCAT(t1.c0), MAX(x''))) AND ((((((NULL)AND(t1.c0)))AND(MIN(t1.c0))), CASE WHEN AVG(t1.c0) THEN t1.c0 END, TOTAL(COUNT(SUM(COUNT(*))))))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT ((((TOTAL(COUNT(t1.c0)), t1.c0, t1.c0)) BETWEEN ((COUNT(*), GROUP_CONCAT(t1.c0), MAX(x''))) AND ((((((NULL)AND(t1.c0)))AND(MIN(t1.c0))), CASE WHEN AVG(t1.c0) THEN t1.c0 END, TOTAL(COUNT(SUM(COUNT(*))))))))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (((((TOTAL(COUNT(t1.c0)), t1.c0, t1.c0)) BETWEEN ((COUNT(*), GROUP_CONCAT(t1.c0), MAX(x''))) AND ((((((NULL)AND(t1.c0)))AND(MIN(t1.c0))), CASE WHEN AVG(t1.c0) THEN t1.c0 END, TOTAL(COUNT(SUM(COUNT(*)))))))) ISNULL);
SELECT t1.c0, vt0.c0, v0.c0 FROM vt0, t1, v0;
SELECT t1.c0, vt0.c0, v0.c0 FROM vt0, t1, v0 WHERE ((((v0.c0)) BETWEEN ((v0.c0)) AND ((x'')))) UNION ALL SELECT t1.c0, vt0.c0, v0.c0 FROM vt0, t1, v0 WHERE ((NOT ((((v0.c0)) BETWEEN ((v0.c0)) AND ((x'')))))) UNION ALL SELECT ALL t1.c0, vt0.c0, v0.c0 FROM vt0, t1, v0 WHERE ((((((v0.c0)) BETWEEN ((v0.c0)) AND ((x'')))) ISNULL));
SELECT t1.c0, vt0.c0, v0.c0 FROM vt0, t1, v0;
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE (((((t1.c0))>((t1.c0))) IN (((t1.c0)GLOB(t1.c0)), ((t1.c0)<=(t1.c0))))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT (((((t1.c0))>((t1.c0))) IN (((t1.c0)GLOB(t1.c0)), ((t1.c0)<=(t1.c0))))))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE (((((((t1.c0))>((t1.c0))) IN (((t1.c0)GLOB(t1.c0)), ((t1.c0)<=(t1.c0))))) ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT ALL vt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON CAST(vt0.c0 COLLATE NOCASE AS INTEGER) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON CAST(vt0.c0 COLLATE NOCASE AS INTEGER) WHERE ((((v0.c0, vt0.c0, vt0.c0)) BETWEEN ((v0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, '-117928732', v0.c0))) COLLATE RTRIM) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON CAST(vt0.c0 COLLATE NOCASE AS INTEGER) WHERE ((NOT ((((v0.c0, vt0.c0, vt0.c0)) BETWEEN ((v0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, '-117928732', v0.c0))) COLLATE RTRIM))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON CAST(vt0.c0 COLLATE NOCASE AS INTEGER) WHERE ((((((v0.c0, vt0.c0, vt0.c0)) BETWEEN ((v0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, '-117928732', v0.c0))) COLLATE RTRIM) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON CAST(vt0.c0 COLLATE NOCASE AS INTEGER) GROUP BY vt0.c0;
SELECT ALL t1.c0, vt0.c0 FROM t1, v0, vt0 GROUP BY t1.c0, vt0.c0;
SELECT ALL t1.c0, vt0.c0 FROM t1, v0, vt0 GROUP BY t1.c0, vt0.c0 HAVING ((SUM(v0.c0))<(COUNT(*))) UNION ALL SELECT t1.c0, vt0.c0 FROM t1, v0, vt0 GROUP BY t1.c0, vt0.c0 HAVING (NOT (((SUM(v0.c0))<(COUNT(*))))) UNION ALL SELECT t1.c0, vt0.c0 FROM t1, v0, vt0 GROUP BY t1.c0, vt0.c0 HAVING ((((SUM(v0.c0))<(COUNT(*)))) ISNULL);
SELECT ALL t1.c0, vt0.c0 FROM t1, v0, vt0 GROUP BY t1.c0, vt0.c0;
SELECT ALL t1.c0, vt0.c0 FROM t1, v0, vt0 GROUP BY t1.c0, vt0.c0 HAVING ((SUM(v0.c0))<(COUNT(*))) UNION ALL SELECT t1.c0, vt0.c0 FROM t1, v0, vt0 GROUP BY t1.c0, vt0.c0 HAVING (NOT (((SUM(v0.c0))<(COUNT(*))))) UNION ALL SELECT t1.c0, vt0.c0 FROM t1, v0, vt0 GROUP BY t1.c0, vt0.c0 HAVING ((((SUM(v0.c0))<(COUNT(*)))) ISNULL);
SELECT ALL t1.c0, vt0.c0 FROM t1, v0, vt0 GROUP BY t1.c0, vt0.c0;
SELECT ALL * FROM vt0, v0;
SELECT * FROM vt0, v0 WHERE (((json_insert(v0.c0, v0.c0, 0.10585231089214109, 0.08011607545819055, v0.c0))IS(((((v0.c0)OR(vt0.c0)))OR(vt0.c0))))) UNION ALL SELECT ALL * FROM vt0, v0 WHERE ((NOT (((json_insert(v0.c0, v0.c0, 0.10585231089214109, 0.08011607545819055, v0.c0))IS(((((v0.c0)OR(vt0.c0)))OR(vt0.c0))))))) UNION ALL SELECT ALL * FROM vt0, v0 WHERE (((((json_insert(v0.c0, v0.c0, 0.10585231089214109, 0.08011607545819055, v0.c0))IS(((((v0.c0)OR(vt0.c0)))OR(vt0.c0))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ('873475269' COLLATE NOCASE) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ('873475269' COLLATE NOCASE))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((('873475269' COLLATE NOCASE) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((('\rLv,*')) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) AND ((vt0.c0)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((('\rLv,*')) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) AND ((vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((('\rLv,*')) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) AND ((vt0.c0)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON (((((0.16074557536996248, NULL, v0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, v0.c0)) AND ((vt0.c0, vt0.c0, v0.c0))))>(v0.c0)) GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON (((((0.16074557536996248, NULL, v0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, v0.c0)) AND ((vt0.c0, vt0.c0, v0.c0))))>(v0.c0)) GROUP BY v0.c0, vt0.c0 HAVING v0.c0 UNION ALL SELECT v0.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON (((((0.16074557536996248, NULL, v0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, v0.c0)) AND ((vt0.c0, vt0.c0, v0.c0))))>(v0.c0)) GROUP BY v0.c0, vt0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON (((((0.16074557536996248, NULL, v0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, v0.c0)) AND ((vt0.c0, vt0.c0, v0.c0))))>(v0.c0)) GROUP BY v0.c0, vt0.c0 HAVING ((v0.c0) ISNULL);
SELECT ALL v0.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON (((((0.16074557536996248, NULL, v0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, v0.c0)) AND ((vt0.c0, vt0.c0, v0.c0))))>(v0.c0)) GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON (((((0.16074557536996248, NULL, v0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, v0.c0)) AND ((vt0.c0, vt0.c0, v0.c0))))>(v0.c0)) GROUP BY v0.c0, vt0.c0 HAVING v0.c0 UNION ALL SELECT v0.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON (((((0.16074557536996248, NULL, v0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, v0.c0)) AND ((vt0.c0, vt0.c0, v0.c0))))>(v0.c0)) GROUP BY v0.c0, vt0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON (((((0.16074557536996248, NULL, v0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, v0.c0)) AND ((vt0.c0, vt0.c0, v0.c0))))>(v0.c0)) GROUP BY v0.c0, vt0.c0 HAVING ((v0.c0) ISNULL);
SELECT ALL v0.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON (((((0.16074557536996248, NULL, v0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, v0.c0)) AND ((vt0.c0, vt0.c0, v0.c0))))>(v0.c0)) GROUP BY v0.c0, vt0.c0;
SELECT ALL vt0.c0 FROM t1, vt0, v0;
SELECT ALL vt0.c0 FROM t1, vt0, v0 WHERE (((0.2816363830022749 COLLATE NOCASE) BETWEEN ((((t1.c0, v0.c0, v0.c0))==((NULL, vt0.c0, t1.c0)))) AND (((x'')<<(t1.c0))))) UNION ALL SELECT ALL vt0.c0 FROM t1, vt0, v0 WHERE ((NOT (((0.2816363830022749 COLLATE NOCASE) BETWEEN ((((t1.c0, v0.c0, v0.c0))=((NULL, vt0.c0, t1.c0)))) AND (((x'')<<(t1.c0))))))) UNION ALL SELECT vt0.c0 FROM t1, vt0, v0 WHERE (((((0.2816363830022749 COLLATE NOCASE) BETWEEN ((((t1.c0, v0.c0, v0.c0))=((NULL, vt0.c0, t1.c0)))) AND (((x'')<<(t1.c0))))) ISNULL));
SELECT ALL vt0.c0 FROM t1, vt0, v0;
SELECT DISTINCT * FROM t1, v0;
SELECT DISTINCT * FROM t1, v0 WHERE ((v0.c0 IN ())) UNION SELECT DISTINCT * FROM t1, v0 WHERE ((NOT ((v0.c0 IN ())))) UNION SELECT DISTINCT * FROM t1, v0 WHERE ((((v0.c0 IN ())) ISNULL));
SELECT DISTINCT * FROM t1, v0;
SELECT ALL t1.c0, v0.c0 FROM t1, v0, vt0 GROUP BY t1.c0, v0.c0;
SELECT ALL t1.c0, v0.c0 FROM t1, v0, vt0 WHERE (CASE WHEN CAST(-2069590256 AS INTEGER) THEN x'' ELSE CAST(v0.c0 AS NUMERIC) END) GROUP BY t1.c0, v0.c0 UNION SELECT ALL t1.c0, v0.c0 FROM t1, v0, vt0 WHERE ((NOT (CASE WHEN CAST(-2069590256 AS INTEGER) THEN x'' ELSE CAST(v0.c0 AS NUMERIC) END))) GROUP BY t1.c0, v0.c0 UNION SELECT ALL t1.c0, v0.c0 FROM t1, v0, vt0 WHERE (((CASE WHEN CAST(-2069590256 AS INTEGER) THEN x'' ELSE CAST(v0.c0 AS NUMERIC) END) ISNULL)) GROUP BY t1.c0, v0.c0;
SELECT ALL t1.c0, v0.c0 FROM t1, v0, vt0 GROUP BY t1.c0, v0.c0;
SELECT t1.c0, v0.c0, vt0.c0 FROM vt0, t1 RIGHT OUTER JOIN v0 ON ((((CASE WHEN t1.c0 THEN t1.c0 ELSE v0.c0 END)OR(vt0.c0 COLLATE NOCASE)))OR((('-902171506') NOT NULL))) GROUP BY t1.c0, v0.c0, vt0.c0;
SELECT ALL t1.c0, v0.c0, vt0.c0 FROM vt0, t1 RIGHT OUTER JOIN v0 ON ((((CASE WHEN t1.c0 THEN t1.c0 ELSE v0.c0 END)OR(vt0.c0 COLLATE NOCASE)))OR((('-902171506') NOT NULL))) GROUP BY t1.c0, v0.c0, vt0.c0 HAVING TOTAL(MAX(COUNT(''))) UNION ALL SELECT t1.c0, v0.c0, vt0.c0 FROM vt0, t1 RIGHT OUTER JOIN v0 ON ((((CASE WHEN t1.c0 THEN t1.c0 ELSE v0.c0 END)OR(vt0.c0 COLLATE NOCASE)))OR((('-902171506') NOT NULL))) GROUP BY t1.c0, v0.c0, vt0.c0 HAVING (NOT (TOTAL(MAX(COUNT(''))))) UNION ALL SELECT t1.c0, v0.c0, vt0.c0 FROM vt0, t1 RIGHT OUTER JOIN v0 ON ((((CASE WHEN t1.c0 THEN t1.c0 ELSE v0.c0 END)OR(vt0.c0 COLLATE NOCASE)))OR((('-902171506') NOT NULL))) GROUP BY t1.c0, v0.c0, vt0.c0 HAVING ((TOTAL(MAX(COUNT('')))) ISNULL);
SELECT * FROM t1, v0, vt0;
SELECT ALL * FROM t1, v0, vt0 WHERE ((((((v0.c0)<>(v0.c0)), ((vt0.c0) NOT BETWEEN (t1.c0) AND (t1.c0)), (t1.c0 IN (t1.c0))))<=((TRIM(DISTINCT t1.c0, vt0.c0), (((v0.c0))==((''))), CAST(t1.c0 AS BLOB))))) UNION ALL SELECT * FROM t1, v0, vt0 WHERE ((NOT ((((((v0.c0)!=(v0.c0)), ((vt0.c0) NOT BETWEEN (t1.c0) AND (t1.c0)), (t1.c0 IN (t1.c0))))<=((TRIM(DISTINCT t1.c0, vt0.c0), (((v0.c0))==((''))), CAST(t1.c0 AS BLOB))))))) UNION ALL SELECT ALL * FROM t1, v0, vt0 WHERE ((((((((v0.c0)!=(v0.c0)), ((vt0.c0) NOT BETWEEN (t1.c0) AND (t1.c0)), (t1.c0 IN (t1.c0))))<=((TRIM(DISTINCT t1.c0, vt0.c0), (((v0.c0))=((''))), CAST(t1.c0 AS BLOB))))) ISNULL));
SELECT * FROM t1, v0, vt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((((load_extension(v0.c0))OR(((v0.c0) NOTNULL))))AND(CASE WHEN NULL THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 0.8947329161369935 ELSE v0.c0 END))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((load_extension(v0.c0))OR(((v0.c0) NOTNULL))))AND(CASE WHEN NULL THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 0.8947329161369935 ELSE v0.c0 END))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((load_extension(v0.c0))OR(((v0.c0) NOTNULL))))AND(CASE WHEN NULL THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 0.8947329161369935 ELSE v0.c0 END))) ISNULL));
SELECT t1.c0, v0.c0, vt0.c0 FROM t1, v0, vt0 GROUP BY t1.c0, v0.c0, vt0.c0;
SELECT t1.c0, v0.c0, vt0.c0 FROM t1, v0, vt0 WHERE (((((v0.c0)/(vt0.c0))) ISNULL)) GROUP BY t1.c0, v0.c0, vt0.c0 UNION SELECT ALL t1.c0, v0.c0, vt0.c0 FROM t1, v0, vt0 WHERE ((NOT (((((v0.c0)/(vt0.c0))) ISNULL)))) GROUP BY t1.c0, v0.c0, vt0.c0 UNION SELECT ALL t1.c0, v0.c0, vt0.c0 FROM t1, v0, vt0 WHERE (((((((v0.c0)/(vt0.c0))) ISNULL)) ISNULL)) GROUP BY t1.c0, v0.c0, vt0.c0;
SELECT t1.c0, v0.c0, vt0.c0 FROM t1, v0, vt0 GROUP BY t1.c0, v0.c0, vt0.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING COUNT(*) COLLATE RTRIM UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (COUNT(*) COLLATE RTRIM)) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((COUNT(*) COLLATE RTRIM) ISNULL);
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING COUNT(*) COLLATE RTRIM UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (COUNT(*) COLLATE RTRIM)) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((COUNT(*) COLLATE RTRIM) ISNULL);
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL * FROM t1, v0;
SELECT * FROM t1, v0 WHERE (t1.c0 COLLATE NOCASE) UNION ALL SELECT * FROM t1, v0 WHERE ((NOT (t1.c0 COLLATE NOCASE))) UNION ALL SELECT ALL * FROM t1, v0 WHERE (((t1.c0 COLLATE NOCASE) ISNULL));
SELECT ALL * FROM t1, v0;
SELECT DISTINCT t1.c0 FROM vt0 NATURAL JOIN t1;
SELECT DISTINCT t1.c0 FROM vt0 NATURAL JOIN t1 WHERE (((t1.c0) IS TRUE) COLLATE NOCASE) UNION SELECT DISTINCT t1.c0 FROM vt0 NATURAL JOIN t1 WHERE ((NOT (((t1.c0) IS TRUE) COLLATE NOCASE))) UNION SELECT DISTINCT t1.c0 FROM vt0 NATURAL JOIN t1 WHERE (((((t1.c0) IS TRUE) COLLATE NOCASE) ISNULL));
SELECT DISTINCT t1.c0 FROM vt0 NATURAL JOIN t1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (LIKELIHOOD((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), 0.25600949504262416)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (LIKELIHOOD((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), 0.25600949504262416)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((LIKELIHOOD((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), 0.25600949504262416)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL t1.c0, v0.c0 FROM vt0, t1, v0 GROUP BY t1.c0, v0.c0;
SELECT t1.c0, v0.c0 FROM vt0, t1, v0 GROUP BY t1.c0, v0.c0 HAVING ((t1.c0) NOTNULL) UNION ALL SELECT t1.c0, v0.c0 FROM vt0, t1, v0 GROUP BY t1.c0, v0.c0 HAVING (NOT (((t1.c0) NOTNULL))) UNION ALL SELECT ALL t1.c0, v0.c0 FROM vt0, t1, v0 GROUP BY t1.c0, v0.c0 HAVING ((((t1.c0) NOTNULL)) ISNULL);
SELECT ALL t1.c0, v0.c0 FROM vt0, t1, v0 GROUP BY t1.c0, v0.c0;
SELECT t1.c0, v0.c0 FROM vt0, t1, v0 GROUP BY t1.c0, v0.c0 HAVING ((t1.c0) NOTNULL) UNION ALL SELECT t1.c0, v0.c0 FROM vt0, t1, v0 GROUP BY t1.c0, v0.c0 HAVING (NOT (((t1.c0) NOTNULL))) UNION ALL SELECT ALL t1.c0, v0.c0 FROM vt0, t1, v0 GROUP BY t1.c0, v0.c0 HAVING ((((t1.c0) NOTNULL)) ISNULL);
SELECT ALL t1.c0, v0.c0 FROM vt0, t1, v0 GROUP BY t1.c0, v0.c0;
SELECT ALL * FROM vt0, v0, t1;
SELECT * FROM vt0, v0, t1 WHERE (((((v0.c0) NOT NULL)) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (((NULL) ISNULL)))) UNION ALL SELECT ALL * FROM vt0, v0, t1 WHERE ((NOT (((((v0.c0) NOT NULL)) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (((NULL) ISNULL)))))) UNION ALL SELECT * FROM vt0, v0, t1 WHERE (((((((v0.c0) NOT NULL)) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (((NULL) ISNULL)))) ISNULL));
SELECT ALL * FROM vt0, v0, t1;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (t1.c0) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (t1.c0))) UNION SELECT DISTINCT * FROM t1 WHERE (((t1.c0) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((((v0.c0)<=(v0.c0)))*((((v0.c0, v0.c0, '^<', v0.c0, v0.c0))<=((v0.c0, v0.c0, v0.c0, v0.c0, NULL)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((v0.c0)<=(v0.c0)))*((((v0.c0, v0.c0, '^<', v0.c0, v0.c0))<=((v0.c0, v0.c0, v0.c0, v0.c0, NULL)))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((((v0.c0)<=(v0.c0)))*((((v0.c0, v0.c0, '^<', v0.c0, v0.c0))<=((v0.c0, v0.c0, v0.c0, v0.c0, NULL)))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((((t1.c0) IS TRUE))LIKE((('b *e+j')AND(t1.c0)))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (((((t1.c0) IS TRUE))LIKE((('b *e+j')AND(t1.c0)))))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((((((t1.c0) IS TRUE))LIKE((('b *e+j')AND(t1.c0))))) ISNULL);
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((((t1.c0) IS TRUE))LIKE((('b *e+j')AND(t1.c0)))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (((((t1.c0) IS TRUE))LIKE((('b *e+j')AND(t1.c0)))))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((((((t1.c0) IS TRUE))LIKE((('b *e+j')AND(t1.c0))))) ISNULL);
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1, v0;
SELECT ALL t1.c0 FROM t1, v0 WHERE (((((t1.c0) IS FALSE)) IS TRUE)) UNION ALL SELECT ALL t1.c0 FROM t1, v0 WHERE ((NOT (((((t1.c0) IS FALSE)) IS TRUE)))) UNION ALL SELECT ALL t1.c0 FROM t1, v0 WHERE (((((((t1.c0) IS FALSE)) IS TRUE)) ISNULL));
SELECT ALL t1.c0 FROM t1, v0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((TYPEOF(vt0.c0) IN ())) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((TYPEOF(vt0.c0) IN ())))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((TYPEOF(vt0.c0) IN ())) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON ((((v0.c0)>=(vt0.c0))) NOT BETWEEN ((NOT (v0.c0))) AND (vt0.c0)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON ((((v0.c0)>=(vt0.c0))) NOT BETWEEN ((NOT (v0.c0))) AND (vt0.c0)) WHERE (((((vt0.c0) IS FALSE)) NOT BETWEEN (((v0.c0) NOT NULL)) AND (((v0.c0)>(v0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON ((((v0.c0)>=(vt0.c0))) NOT BETWEEN ((NOT (v0.c0))) AND (vt0.c0)) WHERE ((NOT (((((vt0.c0) IS FALSE)) NOT BETWEEN (((v0.c0) NOT NULL)) AND (((v0.c0)>(v0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON ((((v0.c0)>=(vt0.c0))) NOT BETWEEN ((NOT (v0.c0))) AND (vt0.c0)) WHERE (((((((vt0.c0) IS FALSE)) NOT BETWEEN (((v0.c0) NOT NULL)) AND (((v0.c0)>(v0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON ((((v0.c0)>=(vt0.c0))) NOT BETWEEN ((NOT (v0.c0))) AND (vt0.c0)) GROUP BY vt0.c0;
SELECT ALL vt0.c0, t1.c0, v0.c0 FROM t1, vt0, v0 GROUP BY vt0.c0, t1.c0, v0.c0;
SELECT vt0.c0, t1.c0, v0.c0 FROM t1, vt0, v0 GROUP BY vt0.c0, t1.c0, v0.c0 HAVING 0.19225895798756165 UNION ALL SELECT vt0.c0, t1.c0, v0.c0 FROM t1, vt0, v0 GROUP BY vt0.c0, t1.c0, v0.c0 HAVING (NOT (0.19225895798756165)) UNION ALL SELECT vt0.c0, t1.c0, v0.c0 FROM t1, vt0, v0 GROUP BY vt0.c0, t1.c0, v0.c0 HAVING ((0.19225895798756165) ISNULL);
SELECT ALL vt0.c0, t1.c0, v0.c0 FROM t1, vt0, v0 GROUP BY vt0.c0, t1.c0, v0.c0;
SELECT vt0.c0, t1.c0, v0.c0 FROM t1, vt0, v0 GROUP BY vt0.c0, t1.c0, v0.c0 HAVING 0.19225895798756165 UNION ALL SELECT vt0.c0, t1.c0, v0.c0 FROM t1, vt0, v0 GROUP BY vt0.c0, t1.c0, v0.c0 HAVING (NOT (0.19225895798756165)) UNION ALL SELECT vt0.c0, t1.c0, v0.c0 FROM t1, vt0, v0 GROUP BY vt0.c0, t1.c0, v0.c0 HAVING ((0.19225895798756165) ISNULL);
SELECT ALL vt0.c0, t1.c0, v0.c0 FROM t1, vt0, v0 GROUP BY vt0.c0, t1.c0, v0.c0;
SELECT t1.c0 FROM t1;
SELECT t1.c0 FROM t1 WHERE (((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))) IN ((((t1.c0))>((''))), (t1.c0 IN ())))) UNION ALL SELECT ALL t1.c0 FROM t1 WHERE ((NOT (((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))) IN ((((t1.c0))>((''))), (t1.c0 IN ())))))) UNION ALL SELECT t1.c0 FROM t1 WHERE (((((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))) IN ((((t1.c0))>((''))), (t1.c0 IN ())))) ISNULL));
SELECT t1.c0 FROM t1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (-1.850281744E9) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (-1.850281744E9))) UNION SELECT DISTINCT * FROM vt0 WHERE (((-1.850281744E9) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE (((GLOB(t1.c0, t1.c0))GLOB(((t1.c0) IS FALSE)))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT (((GLOB(t1.c0, t1.c0))GLOB(((t1.c0) IS FALSE)))))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE (((((GLOB(t1.c0, t1.c0))GLOB(((t1.c0) IS FALSE)))) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING COUNT(((t1.c0) BETWEEN (TOTAL(t1.c0)) AND ('d<'))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (COUNT(((t1.c0) BETWEEN (TOTAL(t1.c0)) AND ('d<'))))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((COUNT(((t1.c0) BETWEEN (TOTAL(t1.c0)) AND ('d<')))) ISNULL);
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON CAST(LIKELY(vt0.c0) AS BLOB) INNER JOIN t1 ON -904448401;
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON CAST(LIKELY(vt0.c0) AS BLOB) INNER JOIN t1 ON -904448401 WHERE (((t1.c0 COLLATE NOCASE) NOT BETWEEN (CAST(v0.c0 AS INTEGER)) AND (json_patch(vt0.c0, v0.c0)))) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT DISTINCT v0.c0 FROM v0, t1;
SELECT DISTINCT v0.c0 FROM v0, t1 WHERE ((~ (v0.c0))) UNION SELECT DISTINCT v0.c0 FROM v0, t1 WHERE ((NOT ((~ (v0.c0))))) UNION SELECT DISTINCT v0.c0 FROM v0, t1 WHERE ((((~ (v0.c0))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0, t1;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE (((t1.c0)IS(t1.c0)) COLLATE RTRIM) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT (((t1.c0)IS(t1.c0)) COLLATE RTRIM))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE (((((t1.c0)IS(t1.c0)) COLLATE RTRIM) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL vt0.c0, t1.c0 FROM t1, vt0 GROUP BY vt0.c0, t1.c0;
SELECT ALL vt0.c0, t1.c0 FROM t1, vt0 GROUP BY vt0.c0, t1.c0 HAVING MIN(TOTAL(t1.c0)) UNION ALL SELECT ALL vt0.c0, t1.c0 FROM t1, vt0 GROUP BY vt0.c0, t1.c0 HAVING (NOT (MIN(TOTAL(t1.c0)))) UNION ALL SELECT ALL vt0.c0, t1.c0 FROM t1, vt0 GROUP BY vt0.c0, t1.c0 HAVING ((MIN(TOTAL(t1.c0))) ISNULL);
SELECT vt0.c0 FROM vt0 INNER JOIN t1 ON ((((vt0.c0) NOT NULL)) BETWEEN ((((vt0.c0, vt0.c0, t1.c0))=((vt0.c0, vt0.c0, t1.c0)))) AND (((t1.c0)>=(t1.c0))));
SELECT ALL vt0.c0 FROM vt0 INNER JOIN t1 ON ((((vt0.c0) NOT NULL)) BETWEEN ((((vt0.c0, vt0.c0, t1.c0))=((vt0.c0, vt0.c0, t1.c0)))) AND (((t1.c0)>=(t1.c0)))) WHERE (((((vt0.c0))<((x'164d'))) IN ())) UNION ALL SELECT ALL vt0.c0 FROM vt0 INNER JOIN t1 ON ((((vt0.c0) NOT NULL)) BETWEEN ((((vt0.c0, vt0.c0, t1.c0))=((vt0.c0, vt0.c0, t1.c0)))) AND (((t1.c0)>=(t1.c0)))) WHERE ((NOT (((((vt0.c0))<((x'164d'))) IN ())))) UNION ALL SELECT vt0.c0 FROM vt0 INNER JOIN t1 ON ((((vt0.c0) NOT NULL)) BETWEEN ((((vt0.c0, vt0.c0, t1.c0))=((vt0.c0, vt0.c0, t1.c0)))) AND (((t1.c0)>=(t1.c0)))) WHERE (((((((vt0.c0))<((x'164d'))) IN ())) ISNULL));
SELECT vt0.c0 FROM vt0 INNER JOIN t1 ON ((((vt0.c0) NOT NULL)) BETWEEN ((((vt0.c0, vt0.c0, t1.c0))=((vt0.c0, vt0.c0, t1.c0)))) AND (((t1.c0)>=(t1.c0))));
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (((((((t1.c0, t1.c0, t1.c0))<>((t1.c0, NULL, t1.c0)))))>=((((t1.c0) IS FALSE))))) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (((((((t1.c0, t1.c0, t1.c0))<>((t1.c0, NULL, t1.c0)))))>=((((t1.c0) IS FALSE))))))) UNION SELECT DISTINCT * FROM t1 WHERE (((((((((t1.c0, t1.c0, t1.c0))!=((t1.c0, NULL, t1.c0)))))>=((((t1.c0) IS FALSE))))) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT t1.c0 FROM v0 INNER JOIN t1 ON ((CAST(t1.c0 AS NUMERIC)) NOT BETWEEN (((((((((v0.c0)OR(x'db12')))AND(t1.c0)))OR(0.5929799029406826)))AND(v0.c0))) AND ((((('873475269')OR(t1.c0)))AND(v0.c0)))) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM v0 INNER JOIN t1 ON ((CAST(t1.c0 AS NUMERIC)) NOT BETWEEN (((((((((v0.c0)OR(x'db12')))AND(t1.c0)))OR(0.5929799029406826)))AND(v0.c0))) AND ((((('873475269')OR(t1.c0)))AND(v0.c0)))) WHERE (TRIM(DISTINCT t1.c0 COLLATE BINARY, ((v0.c0) IS FALSE))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM v0 INNER JOIN t1 ON ((CAST(t1.c0 AS NUMERIC)) NOT BETWEEN (((((((((v0.c0)OR(x'db12')))AND(t1.c0)))OR(0.5929799029406826)))AND(v0.c0))) AND ((((('873475269')OR(t1.c0)))AND(v0.c0)))) WHERE ((NOT (TRIM(DISTINCT t1.c0 COLLATE BINARY, ((v0.c0) IS FALSE))))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM v0 INNER JOIN t1 ON ((CAST(t1.c0 AS NUMERIC)) NOT BETWEEN (((((((((v0.c0)OR(x'db12')))AND(t1.c0)))OR(0.5929799029406826)))AND(v0.c0))) AND ((((('873475269')OR(t1.c0)))AND(v0.c0)))) WHERE (((TRIM(DISTINCT t1.c0 COLLATE BINARY, ((v0.c0) IS FALSE))) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM v0 INNER JOIN t1 ON ((CAST(t1.c0 AS NUMERIC)) NOT BETWEEN (((((((((v0.c0)OR(x'db12')))AND(t1.c0)))OR(0.5929799029406826)))AND(v0.c0))) AND ((((('873475269')OR(t1.c0)))AND(v0.c0)))) GROUP BY t1.c0;
SELECT ALL v0.c0 FROM t1 RIGHT OUTER JOIN vt0 ON ((t1.c0) NOT BETWEEN (CASE v0.c0  WHEN v0.c0 THEN x'5b20' ELSE t1.c0 END) AND ((v0.c0 IN (vt0.c0)))) CROSS JOIN v0 ON ((((((((CAST(v0.c0 AS TEXT))OR(((t1.c0)<=(vt0.c0)))))AND(((((((((vt0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(-1850281744)))))AND(v0.c0)))OR(((v0.c0) BETWEEN (vt0.c0) AND (t1.c0)))) GROUP BY v0.c0;
SELECT ALL vt0.c0 FROM vt0, v0;
SELECT ALL vt0.c0 FROM vt0, v0 WHERE ((((vt0.c0 IN ())) IS TRUE)) UNION ALL SELECT ALL vt0.c0 FROM vt0, v0 WHERE ((NOT ((((vt0.c0 IN ())) IS TRUE)))) UNION ALL SELECT ALL vt0.c0 FROM vt0, v0 WHERE ((((((vt0.c0 IN ())) IS TRUE)) ISNULL));
SELECT ALL vt0.c0 FROM vt0, v0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(((vt0.c0) IS FALSE)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(((vt0.c0) IS FALSE)))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(((vt0.c0) IS FALSE)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 NOT INDEXED, t1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, t1 WHERE (((((t1.c0) BETWEEN (t1.c0) AND (t1.c0))) BETWEEN ((((t1.c0))>((t1.c0)))) AND (((0.4073137560745538) ISNULL)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, t1 WHERE ((NOT (((((t1.c0) BETWEEN (t1.c0) AND (t1.c0))) BETWEEN ((((t1.c0))>((t1.c0)))) AND (((0.4073137560745538) ISNULL)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, t1 WHERE (((((((t1.c0) BETWEEN (t1.c0) AND (t1.c0))) BETWEEN ((((t1.c0))>((t1.c0)))) AND (((0.4073137560745538) ISNULL)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 NOT INDEXED, t1 GROUP BY vt0.c0;
SELECT ALL vt0.c0, t1.c0, v0.c0 FROM t1 FULL OUTER JOIN vt0 ON INSTR(((0.08011607545819055) NOT BETWEEN (v0.c0) AND (t1.c0)), ((t1.c0)GLOB(t1.c0))) FULL OUTER JOIN v0 ON ((v0.c0) BETWEEN (((vt0.c0)<<(v0.c0))) AND (0X7fffffffffffffff)) GROUP BY vt0.c0, t1.c0, v0.c0;
SELECT ALL v0.c0, t1.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON (~ (((t1.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) RIGHT OUTER JOIN t1 ON ((t1.c0) NOT BETWEEN (((t1.c0)IS(vt0.c0))) AND (CASE WHEN v0.c0 THEN t1.c0 END));
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE ((((t1.c0 IN ()))*(((((((((t1.c0)OR(t1.c0)))OR(t1.c0)))AND(t1.c0)))AND(NULL))))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT ((((t1.c0 IN ()))*(((((((((t1.c0)OR(t1.c0)))OR(t1.c0)))AND(t1.c0)))AND(NULL))))))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((((((t1.c0 IN ()))*(((((((((t1.c0)OR(t1.c0)))OR(t1.c0)))AND(t1.c0)))AND(NULL))))) ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (v0.c0) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (v0.c0))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((v0.c0) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING ((COUNT(*))=(CASE MIN(COUNT(*))  WHEN v0.c0 THEN 0X53b210f6 END)) UNION ALL SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (((COUNT(*))=(CASE MIN(COUNT(*))  WHEN v0.c0 THEN 0X53b210f6 END)))) UNION ALL SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING ((((COUNT(*))=(CASE MIN(COUNT(*))  WHEN v0.c0 THEN 0X53b210f6 END))) ISNULL);
SELECT * FROM t1;
SELECT * FROM t1 WHERE (((((HEX(DISTINCT t1.c0))AND(((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))AND(t1.c0)))AND(t1.c0)))))OR(((((t1.c0)AND(t1.c0)))AND(t1.c0))))) UNION ALL SELECT * FROM t1 WHERE ((NOT (((((HEX(DISTINCT t1.c0))AND(((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))AND(t1.c0)))AND(t1.c0)))))OR(((((t1.c0)AND(t1.c0)))AND(t1.c0))))))) UNION ALL SELECT ALL * FROM t1 WHERE (((((((HEX(DISTINCT t1.c0))AND(((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))AND(t1.c0)))AND(t1.c0)))))OR(((((t1.c0)AND(t1.c0)))AND(t1.c0))))) ISNULL));
SELECT * FROM t1;
SELECT DISTINCT vt0.c0 FROM v0, t1, vt0;
SELECT DISTINCT vt0.c0 FROM v0, t1, vt0 WHERE ((~ (CAST(vt0.c0 AS NUMERIC)))) UNION SELECT DISTINCT vt0.c0 FROM v0, t1, vt0 WHERE ((NOT ((~ (CAST(vt0.c0 AS NUMERIC)))))) UNION SELECT DISTINCT vt0.c0 FROM v0, t1, vt0 WHERE ((((~ (CAST(vt0.c0 AS NUMERIC)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM v0, t1, vt0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE (-333736730) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT (-333736730))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE (((-333736730) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((COUNT(*)) IS FALSE) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (((COUNT(*)) IS FALSE))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((((COUNT(*)) IS FALSE)) ISNULL);
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((COUNT(*)) IS FALSE) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (((COUNT(*)) IS FALSE))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((((COUNT(*)) IS FALSE)) ISNULL);
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (((((v0.c0) BETWEEN (0.7286584555249492) AND (v0.c0)))==(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (((((v0.c0) BETWEEN (0.7286584555249492) AND (v0.c0)))=(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((((((v0.c0) BETWEEN (0.7286584555249492) AND (v0.c0)))=(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT * FROM t1, v0, vt0;
SELECT DISTINCT * FROM t1, v0, vt0 WHERE ((((v0.c0)) NOT BETWEEN ((((v0.c0) ISNULL))) AND ((((vt0.c0) NOT BETWEEN (v0.c0) AND (t1.c0)))))) UNION SELECT DISTINCT * FROM t1, v0, vt0 WHERE ((NOT ((((v0.c0)) NOT BETWEEN ((((v0.c0) ISNULL))) AND ((((vt0.c0) NOT BETWEEN (v0.c0) AND (t1.c0)))))))) UNION SELECT DISTINCT * FROM t1, v0, vt0 WHERE ((((((v0.c0)) NOT BETWEEN ((((v0.c0) ISNULL))) AND ((((vt0.c0) NOT BETWEEN (v0.c0) AND (t1.c0)))))) ISNULL));
SELECT DISTINCT * FROM t1, v0, vt0;
SELECT ALL vt0.c0, t1.c0, v0.c0 FROM vt0, v0, t1 GROUP BY vt0.c0, t1.c0, v0.c0;
SELECT ALL vt0.c0, t1.c0, v0.c0 FROM vt0 NOT INDEXED, v0, t1 WHERE (((((t1.c0) IS FALSE)) ISNULL)) GROUP BY vt0.c0, t1.c0, v0.c0 UNION SELECT ALL vt0.c0, t1.c0, v0.c0 FROM vt0, v0, t1 WHERE ((NOT (((((t1.c0) IS FALSE)) ISNULL)))) GROUP BY vt0.c0, t1.c0, v0.c0 UNION SELECT ALL vt0.c0, t1.c0, v0.c0 FROM vt0, v0, t1 WHERE (((((((t1.c0) IS FALSE)) ISNULL)) ISNULL)) GROUP BY vt0.c0, t1.c0, v0.c0;
SELECT ALL vt0.c0, t1.c0, v0.c0 FROM vt0, v0, t1 GROUP BY vt0.c0, t1.c0, v0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((vt0.c0) BETWEEN (COUNT(NULL)) AND (SUM(vt0.c0))) IN ()) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((vt0.c0) BETWEEN (COUNT(NULL)) AND (SUM(vt0.c0))) IN ()))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((vt0.c0) BETWEEN (COUNT(NULL)) AND (SUM(vt0.c0))) IN ())) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((vt0.c0) BETWEEN (COUNT(NULL)) AND (SUM(vt0.c0))) IN ()) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((vt0.c0) BETWEEN (COUNT(NULL)) AND (SUM(vt0.c0))) IN ()))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((vt0.c0) BETWEEN (COUNT(NULL)) AND (SUM(vt0.c0))) IN ())) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL MAX((~ ((vt0.c0 IN ())))) FROM vt0, t1, v0;
SELECT ALL * FROM v0, vt0 CROSS JOIN t1 ON vt0.c0;
SELECT * FROM v0, vt0 CROSS JOIN t1 ON vt0.c0 WHERE (((((((((((vt0.c0)OR(t1.c0)))OR(t1.c0)))OR(v0.c0)))AND(vt0.c0)))<((((vt0.c0))==((v0.c0)))))) UNION ALL SELECT ALL * FROM v0, vt0 CROSS JOIN t1 ON vt0.c0 WHERE ((NOT (((((((((((vt0.c0)OR(t1.c0)))OR(t1.c0)))OR(v0.c0)))AND(vt0.c0)))<((((vt0.c0))=((v0.c0)))))))) UNION ALL SELECT ALL * FROM v0, vt0 CROSS JOIN t1 ON vt0.c0 WHERE (((((((((((((vt0.c0)OR(t1.c0)))OR(t1.c0)))OR(v0.c0)))AND(vt0.c0)))<((((vt0.c0))==((v0.c0)))))) ISNULL));
SELECT ALL * FROM v0, vt0 CROSS JOIN t1 ON vt0.c0;
SELECT DISTINCT * FROM t1, v0;
SELECT DISTINCT * FROM t1, v0 WHERE (CASE WHEN (~ (t1.c0)) THEN ((t1.c0)>(v0.c0)) WHEN (~ (v0.c0)) THEN ((t1.c0) BETWEEN (v0.c0) AND (v0.c0)) WHEN v0.c0 THEN ((v0.c0)IS(v0.c0)) END) UNION SELECT DISTINCT * FROM t1, v0 WHERE ((NOT (CASE WHEN (~ (t1.c0)) THEN ((t1.c0)>(v0.c0)) WHEN (~ (v0.c0)) THEN ((t1.c0) BETWEEN (v0.c0) AND (v0.c0)) WHEN v0.c0 THEN ((v0.c0)IS(v0.c0)) END))) UNION SELECT DISTINCT * FROM t1, v0 WHERE (((CASE WHEN (~ (t1.c0)) THEN ((t1.c0)>(v0.c0)) WHEN (~ (v0.c0)) THEN ((t1.c0) BETWEEN (v0.c0) AND (v0.c0)) WHEN v0.c0 THEN ((v0.c0)IS(v0.c0)) END) ISNULL));
SELECT DISTINCT * FROM t1, v0;
SELECT ALL t1.c0, v0.c0 FROM vt0, t1 LEFT OUTER JOIN v0 ON NULLIF(CAST(vt0.c0 AS NUMERIC), ((vt0.c0) BETWEEN (v0.c0) AND (NULL))) GROUP BY t1.c0, v0.c0;
SELECT t1.c0, v0.c0 FROM vt0, t1 LEFT OUTER JOIN v0 ON NULLIF(CAST(vt0.c0 AS NUMERIC), ((vt0.c0) BETWEEN (v0.c0) AND (NULL))) WHERE (((((vt0.c0)|(v0.c0)))+(CASE WHEN vt0.c0 THEN 0.5723538121139146 END))) GROUP BY t1.c0, v0.c0 UNION SELECT t1.c0, v0.c0 FROM vt0, t1 LEFT OUTER JOIN v0 ON NULLIF(CAST(vt0.c0 AS NUMERIC), ((vt0.c0) BETWEEN (v0.c0) AND (NULL))) WHERE ((NOT (((((vt0.c0)|(v0.c0)))+(CASE WHEN vt0.c0 THEN 0.5723538121139146 END))))) GROUP BY t1.c0, v0.c0 UNION SELECT ALL t1.c0, v0.c0 FROM vt0, t1 LEFT OUTER JOIN v0 ON NULLIF(CAST(vt0.c0 AS NUMERIC), ((vt0.c0) BETWEEN (v0.c0) AND (NULL))) WHERE (((((((vt0.c0)|(v0.c0)))+(CASE WHEN vt0.c0 THEN 0.5723538121139146 END))) ISNULL)) GROUP BY t1.c0, v0.c0;
SELECT ALL t1.c0, v0.c0 FROM vt0, t1 LEFT OUTER JOIN v0 ON NULLIF(CAST(vt0.c0 AS NUMERIC), ((vt0.c0) BETWEEN (v0.c0) AND (NULL))) GROUP BY t1.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING COUNT(((((MAX(SUM(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (COUNT(((((MAX(SUM(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))))) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING ((COUNT(((((MAX(SUM(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))) ISNULL);
SELECT vt0.c0, v0.c0 FROM vt0, v0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 WHERE (CASE (((vt0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))  WHEN ((v0.c0)OR(NULL)) THEN v0.c0 COLLATE NOCASE END) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0 WHERE ((NOT (CASE (((vt0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))  WHEN ((v0.c0)OR(NULL)) THEN v0.c0 COLLATE NOCASE END))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE (((CASE (((vt0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))  WHEN ((v0.c0)OR(NULL)) THEN v0.c0 COLLATE NOCASE END) ISNULL));
SELECT vt0.c0, v0.c0 FROM vt0, v0;
SELECT DISTINCT t1.c0, v0.c0 FROM v0, t1;
SELECT DISTINCT t1.c0, v0.c0 FROM v0, t1 WHERE (PRINTF(((v0.c0)|(v0.c0)), CAST(v0.c0 AS TEXT), CAST(v0.c0 AS NUMERIC))) UNION SELECT DISTINCT t1.c0, v0.c0 FROM v0, t1 WHERE ((NOT (PRINTF(((v0.c0)|(v0.c0)), CAST(v0.c0 AS TEXT), CAST(v0.c0 AS NUMERIC))))) UNION SELECT DISTINCT t1.c0, v0.c0 FROM v0, t1 WHERE (((PRINTF(((v0.c0)|(v0.c0)), CAST(v0.c0 AS TEXT), CAST(v0.c0 AS NUMERIC))) ISNULL));
SELECT DISTINCT t1.c0, v0.c0 FROM v0, t1;
SELECT ALL vt0.c0, v0.c0, t1.c0 FROM t1, v0, vt0 GROUP BY vt0.c0, v0.c0, t1.c0;
SELECT ALL vt0.c0, v0.c0, t1.c0 FROM t1, v0, vt0 WHERE (((((((v0.c0)AND(vt0.c0)))AND(NULL))) IS TRUE)) GROUP BY vt0.c0, v0.c0, t1.c0 UNION SELECT vt0.c0, v0.c0, t1.c0 FROM t1, v0, vt0 WHERE ((NOT (((((((v0.c0)AND(vt0.c0)))AND(NULL))) IS TRUE)))) GROUP BY vt0.c0, v0.c0, t1.c0 UNION SELECT vt0.c0, v0.c0, t1.c0 FROM t1, v0, vt0 WHERE (((((((((v0.c0)AND(vt0.c0)))AND(NULL))) IS TRUE)) ISNULL)) GROUP BY vt0.c0, v0.c0, t1.c0;
SELECT ALL vt0.c0, v0.c0, t1.c0 FROM t1, v0, vt0 GROUP BY vt0.c0, v0.c0, t1.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING GROUP_CONCAT(CASE v0.c0  WHEN AVG(COUNT(*)) THEN NULL WHEN v0.c0 THEN COUNT(*) WHEN x'' THEN v0.c0 END) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (GROUP_CONCAT(CASE v0.c0  WHEN AVG(COUNT(*)) THEN NULL WHEN v0.c0 THEN COUNT(*) WHEN x'' THEN v0.c0 END))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((GROUP_CONCAT(CASE v0.c0  WHEN AVG(COUNT(*)) THEN NULL WHEN v0.c0 THEN COUNT(*) WHEN x'' THEN v0.c0 END)) ISNULL);
SELECT ALL t1.c0, vt0.c0 FROM vt0, t1, v0;
SELECT t1.c0, vt0.c0 FROM vt0, t1, v0 WHERE (CAST(((vt0.c0)!=(v0.c0)) AS BLOB)) UNION ALL SELECT ALL t1.c0, vt0.c0 FROM vt0, t1, v0 WHERE ((NOT (CAST(((vt0.c0)!=(v0.c0)) AS BLOB)))) UNION ALL SELECT ALL t1.c0, vt0.c0 FROM vt0, t1, v0 WHERE (((CAST(((vt0.c0)!=(v0.c0)) AS BLOB)) ISNULL));
SELECT ALL t1.c0, vt0.c0 FROM vt0, t1, v0;
SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt0;
SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt0 WHERE (((((vt0.c0)IS NOT(v0.c0))) IS TRUE)) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt0 WHERE ((NOT (((((vt0.c0)IS NOT(v0.c0))) IS TRUE)))) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM v0 NOT INDEXED, vt0 WHERE (((((((vt0.c0)IS NOT(v0.c0))) IS TRUE)) ISNULL));
SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE (COALESCE(((0.0995467956556908)*(v0.c0)), (- (v0.c0)), v0.c0, ((vt0.c0) BETWEEN (0x4e67ab4c) AND (v0.c0)))) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM vt0, v0 WHERE ((NOT (COALESCE(((0.0995467956556908)*(v0.c0)), (- (v0.c0)), v0.c0, ((vt0.c0) BETWEEN (0x4e67ab4c) AND (v0.c0)))))) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM vt0, v0 WHERE (((COALESCE(((0.0995467956556908)*(v0.c0)), (- (v0.c0)), v0.c0, ((vt0.c0) BETWEEN (0X4e67ab4c) AND (v0.c0)))) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT v0.c0 FROM v0 LEFT OUTER JOIN t1 ON ((((vt0.c0) BETWEEN (t1.c0) AND (v0.c0)))>(t1.c0)) FULL OUTER JOIN vt0 ON ((vt0.c0 COLLATE BINARY)IS(v0.c0)) GROUP BY v0.c0;
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((~ (vt0.c0))) IS TRUE)) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((~ (vt0.c0))) IS TRUE)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((((~ (vt0.c0))) IS TRUE)) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0;
SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0 WHERE (CAST(0.44590341696677915 AS NUMERIC) COLLATE RTRIM) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0 WHERE ((NOT (CAST(0.44590341696677915 AS NUMERIC) COLLATE RTRIM))) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0 WHERE (((CAST(0.44590341696677915 AS NUMERIC) COLLATE RTRIM) ISNULL));
SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0;
SELECT ALL vt0.c0, v0.c0 FROM vt0 CROSS JOIN v0 ON ((vt0.c0 COLLATE NOCASE)&(vt0.c0)) GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0 CROSS JOIN v0 ON ((vt0.c0 COLLATE NOCASE)&(vt0.c0)) WHERE (CASE (((v0.c0))<=((vt0.c0)))  WHEN ((((((((v0.c0)OR(v0.c0)))AND(vt0.c0)))OR(v0.c0)))OR(v0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM vt0 CROSS JOIN v0 ON ((vt0.c0 COLLATE NOCASE)&(vt0.c0)) WHERE ((NOT (CASE (((v0.c0))<=((vt0.c0)))  WHEN ((((((((v0.c0)OR(v0.c0)))AND(vt0.c0)))OR(v0.c0)))OR(v0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END))) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM vt0 CROSS JOIN v0 ON ((vt0.c0 COLLATE NOCASE)&(vt0.c0)) WHERE (((CASE (((v0.c0))<=((vt0.c0)))  WHEN ((((((((v0.c0)OR(v0.c0)))AND(vt0.c0)))OR(v0.c0)))OR(v0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0 CROSS JOIN v0 ON ((vt0.c0 COLLATE NOCASE)&(vt0.c0)) GROUP BY vt0.c0, v0.c0;
SELECT t1.c0, v0.c0 FROM v0, t1, vt0 GROUP BY t1.c0, v0.c0;
SELECT t1.c0, v0.c0 FROM v0, t1, vt0 GROUP BY t1.c0, v0.c0 HAVING MAX('552160753') UNION ALL SELECT t1.c0, v0.c0 FROM v0, t1, vt0 NOT INDEXED GROUP BY t1.c0, v0.c0 HAVING (NOT (MAX('552160753'))) UNION ALL SELECT ALL t1.c0, v0.c0 FROM v0, t1 NOT INDEXED, vt0 GROUP BY t1.c0, v0.c0 HAVING ((MAX('552160753')) ISNULL);
SELECT t1.c0, v0.c0 FROM v0, t1, vt0 GROUP BY t1.c0, v0.c0;
SELECT t1.c0, v0.c0 FROM v0, t1, vt0 GROUP BY t1.c0, v0.c0 HAVING MAX('552160753') UNION ALL SELECT t1.c0, v0.c0 FROM v0, t1, vt0 NOT INDEXED GROUP BY t1.c0, v0.c0 HAVING (NOT (MAX('552160753'))) UNION ALL SELECT ALL t1.c0, v0.c0 FROM v0, t1 NOT INDEXED, vt0 GROUP BY t1.c0, v0.c0 HAVING ((MAX('552160753')) ISNULL);
SELECT t1.c0, v0.c0 FROM v0, t1, vt0 GROUP BY t1.c0, v0.c0;
SELECT MIN(t1.c0) FROM t1, vt0 ORDER BY '' COLLATE RTRIM ASC;
SELECT * FROM v0 RIGHT OUTER JOIN t1 ON (((v0.c0))==(((NOT (0.5270668361329102)))));
SELECT * FROM v0 RIGHT OUTER JOIN t1 ON (((v0.c0))=(((NOT (0.5270668361329102))))) WHERE ((- (CASE t1.c0  WHEN v0.c0 THEN '?㿳!''mz7' END))) UNION ALL SELECT * FROM v0 RIGHT OUTER JOIN t1 ON (((v0.c0))=(((NOT (0.5270668361329102))))) WHERE ((NOT ((- (CASE t1.c0  WHEN v0.c0 THEN '?㿳!''mz7' END))))) UNION ALL SELECT ALL * FROM v0 RIGHT OUTER JOIN t1 ON (((v0.c0))=(((NOT (0.5270668361329102))))) WHERE ((((- (CASE t1.c0  WHEN v0.c0 THEN '?㿳!''mz7' END))) ISNULL));
SELECT * FROM v0 RIGHT OUTER JOIN t1 ON (((v0.c0))==(((NOT (0.5270668361329102)))));
SELECT DISTINCT t1.c0, vt0.c0 FROM vt0, v0, t1;
SELECT DISTINCT t1.c0, vt0.c0 FROM vt0, v0, t1 WHERE (HEX(DISTINCT ((v0.c0) NOT BETWEEN (vt0.c0) AND (t1.c0)))) UNION SELECT DISTINCT t1.c0, vt0.c0 FROM vt0, v0, t1 WHERE ((NOT (HEX(DISTINCT ((v0.c0) NOT BETWEEN (vt0.c0) AND (t1.c0)))))) UNION SELECT DISTINCT t1.c0, vt0.c0 FROM vt0, v0, t1 WHERE (((HEX(DISTINCT ((v0.c0) NOT BETWEEN (vt0.c0) AND (t1.c0)))) ISNULL));
SELECT DISTINCT t1.c0, vt0.c0 FROM vt0, v0, t1;
SELECT v0.c0 FROM t1, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM t1, v0 WHERE (((((t1.c0)|(t1.c0)))>>(((((((((t1.c0)OR(t1.c0)))AND(v0.c0)))AND(t1.c0)))OR(v0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM t1, v0 WHERE ((NOT (((((t1.c0)|(t1.c0)))>>(((((((((t1.c0)OR(t1.c0)))AND(v0.c0)))AND(t1.c0)))OR(v0.c0))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM t1, v0 WHERE (((((((t1.c0)|(t1.c0)))>>(((((((((t1.c0)OR(t1.c0)))AND(v0.c0)))AND(t1.c0)))OR(v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM t1, v0 GROUP BY v0.c0;
SELECT t1.c0, v0.c0 FROM t1, v0 INDEXED BY i34 GROUP BY t1.c0, v0.c0;
SELECT t1.c0, v0.c0 FROM v0, t1;
SELECT ALL t1.c0, v0.c0 FROM v0, t1 WHERE (((((((((((v0.c0)-(t1.c0)))AND(((((t1.c0)AND(v0.c0)))OR(v0.c0)))))OR(((t1.c0)OR(t1.c0)))))AND(0.053258784653933744)))OR((((1.992429402E9, NULL, t1.c0)) NOT BETWEEN (('-2050683989', v0.c0, NULL)) AND ((t1.c0, v0.c0, t1.c0)))))) UNION ALL SELECT ALL t1.c0, v0.c0 FROM v0, t1 WHERE ((NOT (((((((((((v0.c0)-(t1.c0)))AND(((((t1.c0)AND(v0.c0)))OR(v0.c0)))))OR(((t1.c0)OR(t1.c0)))))AND(0.053258784653933744)))OR((((1.992429402E9, NULL, t1.c0)) NOT BETWEEN (('-2050683989', v0.c0, NULL)) AND ((t1.c0, v0.c0, t1.c0)))))))) UNION ALL SELECT t1.c0, v0.c0 FROM v0, t1 WHERE (((((((((((((v0.c0)-(t1.c0)))AND(((((t1.c0)AND(v0.c0)))OR(v0.c0)))))OR(((t1.c0)OR(t1.c0)))))AND(0.053258784653933744)))OR((((1.992429402E9, NULL, t1.c0)) NOT BETWEEN (('-2050683989', v0.c0, NULL)) AND ((t1.c0, v0.c0, t1.c0)))))) ISNULL));
SELECT t1.c0, v0.c0 FROM v0, t1;
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE (CAST(UPPER(DISTINCT v0.c0) AS BLOB)) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT (CAST(UPPER(DISTINCT v0.c0) AS BLOB)))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE (((CAST(UPPER(DISTINCT v0.c0) AS BLOB)) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (-1.202307893E9) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (-1.202307893E9))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((-1.202307893E9) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c0, v0.c0, t1.c0 FROM t1, v0, vt0 GROUP BY vt0.c0, v0.c0, t1.c0;
SELECT ALL vt0.c0, v0.c0, t1.c0 FROM t1, v0, vt0 GROUP BY vt0.c0, v0.c0, t1.c0 HAVING TOTAL(TOTAL(COUNT(GROUP_CONCAT(SUM(AVG(COUNT(*))))))) UNION ALL SELECT vt0.c0, v0.c0, t1.c0 FROM t1, v0, vt0 GROUP BY vt0.c0, v0.c0, t1.c0 HAVING (NOT (TOTAL(TOTAL(COUNT(GROUP_CONCAT(SUM(AVG(COUNT(*))))))))) UNION ALL SELECT vt0.c0, v0.c0, t1.c0 FROM t1, v0, vt0 GROUP BY vt0.c0, v0.c0, t1.c0 HAVING ((TOTAL(TOTAL(COUNT(GROUP_CONCAT(SUM(AVG(COUNT(*)))))))) ISNULL);
SELECT v0.c0, t1.c0 FROM v0, vt0, t1;
SELECT ALL v0.c0, t1.c0 FROM v0, vt0, t1 WHERE (((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE BINARY) UNION ALL SELECT ALL v0.c0, t1.c0 FROM v0, vt0, t1 WHERE ((NOT (((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE BINARY))) UNION ALL SELECT ALL v0.c0, t1.c0 FROM v0, vt0, t1 WHERE (((((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE BINARY) ISNULL));
SELECT v0.c0, t1.c0 FROM v0, vt0, t1;
SELECT DISTINCT v0.c0 FROM v0, t1;
SELECT DISTINCT v0.c0 FROM v0, t1 WHERE (((CASE WHEN t1.c0 THEN v0.c0 END) BETWEEN (((t1.c0)LIKE(v0.c0))) AND (((((t1.c0)AND(t1.c0)))OR(v0.c0))))) UNION SELECT DISTINCT v0.c0 FROM v0, t1 WHERE ((NOT (((CASE WHEN t1.c0 THEN v0.c0 END) BETWEEN (((t1.c0)LIKE(v0.c0))) AND (((((t1.c0)AND(t1.c0)))OR(v0.c0))))))) UNION SELECT DISTINCT v0.c0 FROM v0, t1 WHERE (((((CASE WHEN t1.c0 THEN v0.c0 END) BETWEEN (((t1.c0)LIKE(v0.c0))) AND (((((t1.c0)AND(t1.c0)))OR(v0.c0))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0, t1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((v0.c0 COLLATE NOCASE) BETWEEN (((((v0.c0)AND(v0.c0)))AND('-425877922'))) AND (v0.c0 COLLATE NOCASE))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((v0.c0 COLLATE NOCASE) BETWEEN (((((v0.c0)AND(v0.c0)))AND('-425877922'))) AND (v0.c0 COLLATE NOCASE))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((v0.c0 COLLATE NOCASE) BETWEEN (((((v0.c0)AND(v0.c0)))AND('-425877922'))) AND (v0.c0 COLLATE NOCASE))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING AVG(COUNT(*)) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (AVG(COUNT(*)))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING ((AVG(COUNT(*))) ISNULL);
SELECT ALL * FROM t1, vt0 FULL OUTER JOIN v0 ON ((((1107125466)AND(t1.c0 COLLATE BINARY)))OR(((vt0.c0)|(vt0.c0))));
SELECT * FROM t1, vt0 FULL OUTER JOIN v0 ON ((((1107125466)AND(t1.c0 COLLATE BINARY)))OR(((vt0.c0)|(vt0.c0)))) WHERE (CAST(((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)) AS BLOB)) UNION ALL SELECT * FROM t1, vt0 FULL OUTER JOIN v0 ON ((((1107125466)AND(t1.c0 COLLATE BINARY)))OR(((vt0.c0)|(vt0.c0)))) WHERE ((NOT (CAST(((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)) AS BLOB)))) UNION ALL SELECT ALL * FROM t1, vt0 FULL OUTER JOIN v0 ON ((((1107125466)AND(t1.c0 COLLATE BINARY)))OR(((vt0.c0)|(vt0.c0)))) WHERE (((CAST(((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)) AS BLOB)) ISNULL));
SELECT ALL * FROM t1, vt0 FULL OUTER JOIN v0 ON ((((1107125466)AND(t1.c0 COLLATE BINARY)))OR(((vt0.c0)|(vt0.c0))));
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE (t1.c0) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT (t1.c0))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE (((t1.c0) ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT vt0.c0 FROM v0, vt0, t1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, vt0, t1 WHERE ((((~ (vt0.c0)))&(vt0.c0))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM v0, vt0, t1 WHERE ((NOT ((((~ (vt0.c0)))&(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM v0, vt0, t1 WHERE ((((((~ (vt0.c0)))&(vt0.c0))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, vt0, t1 GROUP BY vt0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL(MIN(v0.c0)))LIKE(COUNT(2021963907))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((TOTAL(MIN(v0.c0)))LIKE(COUNT(2021963907))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((TOTAL(MIN(v0.c0)))LIKE(COUNT(2021963907)))) ISNULL);
SELECT MAX(((((vt0.c0) NOT NULL))|(((vt0.c0) NOT BETWEEN (vt0.c0) AND (-1.52550135E9))))) FROM vt0 ORDER BY CAST((((vt0.c0, NULL, vt0.c0)) NOT BETWEEN ((x'', vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) AS BLOB)  NULLS LAST;
SELECT ALL * FROM v0, t1;
SELECT ALL * FROM v0, t1 WHERE ((((t1.c0)LIKE(v0.c0)) IN (((((t1.c0)OR(NULL)))AND(t1.c0))))) UNION ALL SELECT ALL * FROM v0, t1 WHERE ((NOT ((((t1.c0)LIKE(v0.c0)) IN (((((t1.c0)OR(NULL)))AND(t1.c0))))))) UNION ALL SELECT * FROM v0, t1 WHERE ((((((t1.c0)LIKE(v0.c0)) IN (((((t1.c0)OR(NULL)))AND(t1.c0))))) ISNULL));
SELECT ALL * FROM v0, t1;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((((('-908343125'))<=((v0.c0))))GLOB(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((('-908343125'))<=((v0.c0))))GLOB(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((('-908343125'))<=((v0.c0))))GLOB(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE (json_array(CAST(t1.c0 AS NUMERIC), (NOT (t1.c0)))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT (json_array(CAST(t1.c0 AS NUMERIC), (NOT (t1.c0)))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE (((json_array(CAST(t1.c0 AS NUMERIC), (NOT (t1.c0)))) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL v0.c0 FROM vt0, t1, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0, t1, v0 GROUP BY v0.c0 HAVING x'' UNION ALL SELECT v0.c0 FROM vt0, t1, v0 GROUP BY v0.c0 HAVING (NOT (x'')) UNION ALL SELECT ALL v0.c0 FROM vt0, t1, v0 GROUP BY v0.c0 HAVING ((x'') ISNULL);
SELECT ALL v0.c0 FROM vt0, t1, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0, t1, v0 GROUP BY v0.c0 HAVING x'' UNION ALL SELECT v0.c0 FROM vt0, t1, v0 GROUP BY v0.c0 HAVING (NOT (x'')) UNION ALL SELECT ALL v0.c0 FROM vt0, t1, v0 GROUP BY v0.c0 HAVING ((x'') ISNULL);
SELECT ALL v0.c0 FROM vt0, t1, v0 GROUP BY v0.c0;
SELECT * FROM v0, t1;
SELECT ALL * FROM v0, t1 WHERE ((x'' IN ())) UNION ALL SELECT * FROM v0, t1 WHERE ((NOT ((x'' IN ())))) UNION ALL SELECT ALL * FROM v0, t1 WHERE ((((x'' IN ())) ISNULL));
SELECT * FROM v0, t1;
SELECT DISTINCT * FROM vt0, t1 INNER JOIN v0 ON ((NULL)GLOB(CAST('' AS BLOB)));
SELECT DISTINCT * FROM vt0, t1 INNER JOIN v0 ON ((NULL)GLOB(CAST('' AS BLOB))) WHERE ((~ (vt0.c0)) COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt0, t1 INNER JOIN v0 ON ((NULL)GLOB(CAST('' AS BLOB))) WHERE ((NOT ((~ (vt0.c0)) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt0, t1 INNER JOIN v0 ON ((NULL)GLOB(CAST('' AS BLOB))) WHERE ((((~ (vt0.c0)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt0, t1 INNER JOIN v0 ON ((NULL)GLOB(CAST('' AS BLOB)));
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE (NULL) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM vt0, v0 WHERE ((NOT (NULL))) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM vt0, v0 WHERE (((NULL) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT t1.c0, vt0.c0, v0.c0 FROM vt0, v0, t1 GROUP BY t1.c0, vt0.c0, v0.c0;
SELECT t1.c0, vt0.c0, v0.c0 FROM vt0, v0, t1 GROUP BY t1.c0, vt0.c0, v0.c0 HAVING ((((AVG(v0.c0)) BETWEEN (vt0.c0) AND (COUNT(vt0.c0))))<(COUNT(t1.c0) COLLATE BINARY)) UNION ALL SELECT t1.c0, vt0.c0, v0.c0 FROM vt0, v0, t1 GROUP BY t1.c0, vt0.c0, v0.c0 HAVING (NOT (((((AVG(v0.c0)) BETWEEN (vt0.c0) AND (COUNT(vt0.c0))))<(COUNT(t1.c0) COLLATE BINARY)))) UNION ALL SELECT t1.c0, vt0.c0, v0.c0 FROM vt0, v0, t1 GROUP BY t1.c0, vt0.c0, v0.c0 HAVING ((((((AVG(v0.c0)) BETWEEN (vt0.c0) AND (COUNT(vt0.c0))))<(COUNT(t1.c0) COLLATE BINARY))) ISNULL);
SELECT t1.c0, vt0.c0, v0.c0 FROM vt0, v0, t1 GROUP BY t1.c0, vt0.c0, v0.c0;
SELECT t1.c0, vt0.c0, v0.c0 FROM vt0, v0, t1 GROUP BY t1.c0, vt0.c0, v0.c0 HAVING ((((AVG(v0.c0)) BETWEEN (vt0.c0) AND (COUNT(vt0.c0))))<(COUNT(t1.c0) COLLATE BINARY)) UNION ALL SELECT t1.c0, vt0.c0, v0.c0 FROM vt0, v0, t1 GROUP BY t1.c0, vt0.c0, v0.c0 HAVING (NOT (((((AVG(v0.c0)) BETWEEN (vt0.c0) AND (COUNT(vt0.c0))))<(COUNT(t1.c0) COLLATE BINARY)))) UNION ALL SELECT t1.c0, vt0.c0, v0.c0 FROM vt0, v0, t1 GROUP BY t1.c0, vt0.c0, v0.c0 HAVING ((((((AVG(v0.c0)) BETWEEN (vt0.c0) AND (COUNT(vt0.c0))))<(COUNT(t1.c0) COLLATE BINARY))) ISNULL);
SELECT t1.c0, vt0.c0, v0.c0 FROM vt0, v0, t1 GROUP BY t1.c0, vt0.c0, v0.c0;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (UPPER(DISTINCT SQLITE_COMPILEOPTION_GET(vt0.c0))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (UPPER(DISTINCT SQLITE_COMPILEOPTION_GET(vt0.c0))))) UNION ALL SELECT * FROM vt0 WHERE (((UPPER(DISTINCT SQLITE_COMPILEOPTION_GET(vt0.c0))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT v0.c0 FROM t1 LEFT OUTER JOIN v0 ON (((v0.c0) IS TRUE) IN ()) GROUP BY v0.c0;
SELECT v0.c0 FROM t1 LEFT OUTER JOIN v0 ON (((v0.c0) IS TRUE) IN ()) WHERE (CAST(t1.c0 COLLATE BINARY AS BLOB)) GROUP BY v0.c0 UNION SELECT v0.c0 FROM t1 LEFT OUTER JOIN v0 ON (((v0.c0) IS TRUE) IN ()) WHERE ((NOT (CAST(t1.c0 COLLATE BINARY AS BLOB)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM t1 LEFT OUTER JOIN v0 ON (((v0.c0) IS TRUE) IN ()) WHERE (((CAST(t1.c0 COLLATE BINARY AS BLOB)) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM t1 LEFT OUTER JOIN v0 ON (((v0.c0) IS TRUE) IN ()) GROUP BY v0.c0;
SELECT ALL t1.c0 FROM t1 NOT INDEXED, v0 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1, v0 GROUP BY t1.c0 HAVING TOTAL(((((SUM(MAX(GROUP_CONCAT(t1.c0))))AND(GROUP_CONCAT(v0.c0))))OR(AVG(v0.c0)))) UNION ALL SELECT t1.c0 FROM t1, v0 GROUP BY t1.c0 HAVING (NOT (TOTAL(((((SUM(MAX(GROUP_CONCAT(t1.c0))))AND(GROUP_CONCAT(v0.c0))))OR(AVG(v0.c0)))))) UNION ALL SELECT t1.c0 FROM t1, v0 GROUP BY t1.c0 HAVING ((TOTAL(((((SUM(MAX(GROUP_CONCAT(t1.c0))))AND(GROUP_CONCAT(v0.c0))))OR(AVG(v0.c0))))) ISNULL);
SELECT * FROM v0, t1, vt0;
SELECT * FROM v0, t1, vt0 WHERE ((((-221665470)) NOT BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND ('-195161488')))) AND (((NOT (vt0.c0)))))) UNION ALL SELECT ALL * FROM v0, t1, vt0 WHERE ((NOT ((((-221665470)) NOT BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND ('-195161488')))) AND (((NOT (vt0.c0)))))))) UNION ALL SELECT * FROM v0, t1, vt0 WHERE ((((((-221665470)) NOT BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND ('-195161488')))) AND (((NOT (vt0.c0)))))) ISNULL));
SELECT * FROM v0, t1, vt0;
SELECT DISTINCT vt0.c0 FROM t1, vt0;
SELECT DISTINCT vt0.c0 FROM t1, vt0 WHERE ((CASE WHEN t1.c0 THEN vt0.c0 WHEN vt0.c0 THEN t1.c0 WHEN t1.c0 THEN vt0.c0 END IN (t1.c0))) UNION SELECT DISTINCT vt0.c0 FROM t1, vt0 WHERE ((NOT ((CASE WHEN t1.c0 THEN vt0.c0 WHEN vt0.c0 THEN t1.c0 WHEN t1.c0 THEN vt0.c0 END IN (t1.c0))))) UNION SELECT DISTINCT vt0.c0 FROM t1, vt0 WHERE ((((CASE WHEN t1.c0 THEN vt0.c0 WHEN vt0.c0 THEN t1.c0 WHEN t1.c0 THEN vt0.c0 END IN (t1.c0))) ISNULL));
SELECT DISTINCT vt0.c0 FROM t1, vt0;
SELECT vt0.c0 FROM v0, vt0, t1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0, t1 WHERE ((((~ (v0.c0)))!=(((t1.c0) NOT BETWEEN (vt0.c0) AND (t1.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM v0, vt0, t1 WHERE ((NOT ((((~ (v0.c0)))!=(((t1.c0) NOT BETWEEN (vt0.c0) AND (t1.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM v0, vt0, t1 WHERE ((((((~ (v0.c0)))<>(((t1.c0) NOT BETWEEN (vt0.c0) AND (t1.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, vt0, t1 GROUP BY vt0.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING SUM(COUNT(COUNT(*))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (SUM(COUNT(COUNT(*))))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((SUM(COUNT(COUNT(*)))) ISNULL);
SELECT ALL * FROM vt0 LEFT OUTER JOIN t1 ON CASE WHEN ((t1.c0) BETWEEN ('-365467861') AND (t1.c0)) THEN (+ (t1.c0)) END;
SELECT ALL * FROM vt0 LEFT OUTER JOIN t1 ON CASE WHEN ((t1.c0) BETWEEN ('-365467861') AND (t1.c0)) THEN (+ (t1.c0)) END WHERE (CAST(IFNULL('1813080141', t1.c0) AS REAL)) UNION ALL SELECT * FROM vt0 LEFT OUTER JOIN t1 ON CASE WHEN ((t1.c0) BETWEEN ('-365467861') AND (t1.c0)) THEN (+ (t1.c0)) END WHERE ((NOT (CAST(IFNULL('1813080141', t1.c0) AS REAL)))) UNION ALL SELECT ALL * FROM vt0 LEFT OUTER JOIN t1 ON CASE WHEN ((t1.c0) BETWEEN ('-365467861') AND (t1.c0)) THEN (+ (t1.c0)) END WHERE (((CAST(IFNULL('1813080141', t1.c0) AS REAL)) ISNULL));
SELECT ALL * FROM vt0 LEFT OUTER JOIN t1 ON CASE WHEN ((t1.c0) BETWEEN ('-365467861') AND (t1.c0)) THEN (+ (t1.c0)) END;
SELECT DISTINCT * FROM v0, vt0, t1;
SELECT DISTINCT * FROM v0, vt0, t1 WHERE (MAX(LIKELIHOOD(DISTINCT v0.c0, 0.6804511611247365), t1.c0 COLLATE BINARY, (((v0.c0, x'05ad3857', v0.c0)) NOT BETWEEN ((v0.c0, vt0.c0, t1.c0)) AND ((vt0.c0, v0.c0, vt0.c0))), ((vt0.c0)||(vt0.c0)), ((t1.c0)*(v0.c0)), t1.c0)) UNION SELECT DISTINCT * FROM v0, vt0, t1 WHERE ((NOT (MAX(LIKELIHOOD(DISTINCT v0.c0, 0.6804511611247365), t1.c0 COLLATE BINARY, (((v0.c0, x'05ad3857', v0.c0)) NOT BETWEEN ((v0.c0, vt0.c0, t1.c0)) AND ((vt0.c0, v0.c0, vt0.c0))), ((vt0.c0)||(vt0.c0)), ((t1.c0)*(v0.c0)), t1.c0)))) UNION SELECT DISTINCT * FROM v0, vt0, t1 WHERE (((MAX(LIKELIHOOD(DISTINCT v0.c0, 0.6804511611247365), t1.c0 COLLATE BINARY, (((v0.c0, x'05ad3857', v0.c0)) NOT BETWEEN ((v0.c0, vt0.c0, t1.c0)) AND ((vt0.c0, v0.c0, vt0.c0))), ((vt0.c0)||(vt0.c0)), ((t1.c0)*(v0.c0)), t1.c0)) ISNULL));
SELECT DISTINCT * FROM v0, vt0, t1;
SELECT v0.c0, t1.c0 FROM vt0, v0, t1 GROUP BY v0.c0, t1.c0;
SELECT v0.c0, t1.c0 FROM vt0, v0, t1 WHERE (CASE CASE x'226f'  WHEN v0.c0 THEN 0.44590341696677915 ELSE t1.c0 END  WHEN ((((vt0.c0)OR(t1.c0)))AND(NULL)) THEN ((x'') NOTNULL) END) GROUP BY v0.c0, t1.c0 UNION SELECT ALL v0.c0, t1.c0 FROM vt0, v0, t1 WHERE ((NOT (CASE CASE x'226f'  WHEN v0.c0 THEN 0.44590341696677915 ELSE t1.c0 END  WHEN ((((vt0.c0)OR(t1.c0)))AND(NULL)) THEN ((x'') NOTNULL) END))) GROUP BY v0.c0, t1.c0 UNION SELECT v0.c0, t1.c0 FROM vt0, v0, t1 WHERE (((CASE CASE x'226f'  WHEN v0.c0 THEN 0.44590341696677915 ELSE t1.c0 END  WHEN ((((vt0.c0)OR(t1.c0)))AND(NULL)) THEN ((x'') NOTNULL) END) ISNULL)) GROUP BY v0.c0, t1.c0;
SELECT v0.c0, t1.c0 FROM vt0, v0, t1 GROUP BY v0.c0, t1.c0;
SELECT ALL v0.c0, t1.c0 FROM v0 FULL OUTER JOIN t1 ON (((t1.c0, v0.c0, v0.c0)) NOT BETWEEN ((((((((((t1.c0)OR(v0.c0)))AND(v0.c0)))OR('7s-.gFxv')))AND(v0.c0)), t1.c0, CAST(t1.c0 AS INTEGER))) AND (((v0.c0 IN (0.05402863322199891)), (~ (t1.c0)), ((((((((t1.c0)OR(t1.c0)))OR(v0.c0)))AND(t1.c0)))AND(t1.c0))))) GROUP BY v0.c0, t1.c0;
SELECT ALL v0.c0, t1.c0 FROM v0 FULL OUTER JOIN t1 ON (((t1.c0, v0.c0, v0.c0)) NOT BETWEEN ((((((((((t1.c0)OR(v0.c0)))AND(v0.c0)))OR('7s-.gFxv')))AND(v0.c0)), t1.c0, CAST(t1.c0 AS INTEGER))) AND (((v0.c0 IN (0.05402863322199891)), (~ (t1.c0)), ((((((((t1.c0)OR(t1.c0)))OR(v0.c0)))AND(t1.c0)))AND(t1.c0))))) GROUP BY v0.c0, t1.c0 HAVING v0.c0 UNION ALL SELECT v0.c0, t1.c0 FROM v0 FULL OUTER JOIN t1 ON (((t1.c0, v0.c0, v0.c0)) NOT BETWEEN ((((((((((t1.c0)OR(v0.c0)))AND(v0.c0)))OR('7s-.gFxv')))AND(v0.c0)), t1.c0, CAST(t1.c0 AS INTEGER))) AND (((v0.c0 IN (0.05402863322199891)), (~ (t1.c0)), ((((((((t1.c0)OR(t1.c0)))OR(v0.c0)))AND(t1.c0)))AND(t1.c0))))) GROUP BY v0.c0, t1.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL v0.c0, t1.c0 FROM v0 FULL OUTER JOIN t1 ON (((t1.c0, v0.c0, v0.c0)) NOT BETWEEN ((((((((((t1.c0)OR(v0.c0)))AND(v0.c0)))OR('7s-.gFxv')))AND(v0.c0)), t1.c0, CAST(t1.c0 AS INTEGER))) AND (((v0.c0 IN (0.05402863322199891)), (~ (t1.c0)), ((((((((t1.c0)OR(t1.c0)))OR(v0.c0)))AND(t1.c0)))AND(t1.c0))))) GROUP BY v0.c0, t1.c0 HAVING ((v0.c0) ISNULL);
SELECT ALL v0.c0, t1.c0 FROM v0 FULL OUTER JOIN t1 ON (((t1.c0, v0.c0, v0.c0)) NOT BETWEEN ((((((((((t1.c0)OR(v0.c0)))AND(v0.c0)))OR('7s-.gFxv')))AND(v0.c0)), t1.c0, CAST(t1.c0 AS INTEGER))) AND (((v0.c0 IN (0.05402863322199891)), (~ (t1.c0)), ((((((((t1.c0)OR(t1.c0)))OR(v0.c0)))AND(t1.c0)))AND(t1.c0))))) GROUP BY v0.c0, t1.c0;
SELECT ALL v0.c0, t1.c0 FROM v0 FULL OUTER JOIN t1 ON (((t1.c0, v0.c0, v0.c0)) NOT BETWEEN ((((((((((t1.c0)OR(v0.c0)))AND(v0.c0)))OR('7s-.gFxv')))AND(v0.c0)), t1.c0, CAST(t1.c0 AS INTEGER))) AND (((v0.c0 IN (0.05402863322199891)), (~ (t1.c0)), ((((((((t1.c0)OR(t1.c0)))OR(v0.c0)))AND(t1.c0)))AND(t1.c0))))) GROUP BY v0.c0, t1.c0 HAVING v0.c0 UNION ALL SELECT v0.c0, t1.c0 FROM v0 FULL OUTER JOIN t1 ON (((t1.c0, v0.c0, v0.c0)) NOT BETWEEN ((((((((((t1.c0)OR(v0.c0)))AND(v0.c0)))OR('7s-.gFxv')))AND(v0.c0)), t1.c0, CAST(t1.c0 AS INTEGER))) AND (((v0.c0 IN (0.05402863322199891)), (~ (t1.c0)), ((((((((t1.c0)OR(t1.c0)))OR(v0.c0)))AND(t1.c0)))AND(t1.c0))))) GROUP BY v0.c0, t1.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL v0.c0, t1.c0 FROM v0 FULL OUTER JOIN t1 ON (((t1.c0, v0.c0, v0.c0)) NOT BETWEEN ((((((((((t1.c0)OR(v0.c0)))AND(v0.c0)))OR('7s-.gFxv')))AND(v0.c0)), t1.c0, CAST(t1.c0 AS INTEGER))) AND (((v0.c0 IN (0.05402863322199891)), (~ (t1.c0)), ((((((((t1.c0)OR(t1.c0)))OR(v0.c0)))AND(t1.c0)))AND(t1.c0))))) GROUP BY v0.c0, t1.c0 HAVING ((v0.c0) ISNULL);
SELECT ALL v0.c0, t1.c0 FROM v0 FULL OUTER JOIN t1 ON (((t1.c0, v0.c0, v0.c0)) NOT BETWEEN ((((((((((t1.c0)OR(v0.c0)))AND(v0.c0)))OR('7s-.gFxv')))AND(v0.c0)), t1.c0, CAST(t1.c0 AS INTEGER))) AND (((v0.c0 IN (0.05402863322199891)), (~ (t1.c0)), ((((((((t1.c0)OR(t1.c0)))OR(v0.c0)))AND(t1.c0)))AND(t1.c0))))) GROUP BY v0.c0, t1.c0;
SELECT * FROM vt0, v0;
SELECT * FROM vt0, v0 WHERE (((((v0.c0)GLOB(v0.c0))) NOT BETWEEN ((((v0.c0))>((vt0.c0)))) AND (((((v0.c0)AND(v0.c0)))OR(v0.c0))))) UNION ALL SELECT ALL * FROM vt0, v0 WHERE ((NOT (((((v0.c0)GLOB(v0.c0))) NOT BETWEEN ((((v0.c0))>((vt0.c0)))) AND (((((v0.c0)AND(v0.c0)))OR(v0.c0))))))) UNION ALL SELECT * FROM vt0, v0 WHERE (((((((v0.c0)GLOB(v0.c0))) NOT BETWEEN ((((v0.c0))>((vt0.c0)))) AND (((((v0.c0)AND(v0.c0)))OR(v0.c0))))) ISNULL));
SELECT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (NULL) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM vt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE ('1107125466') GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT ('1107125466'))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((('1107125466') ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM v0, t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM v0, t1 GROUP BY t1.c0 HAVING ((((COUNT(*)) BETWEEN (AVG(v0.c0)) AND (AVG(t1.c0)))) NOT NULL) UNION ALL SELECT ALL t1.c0 FROM v0, t1 GROUP BY t1.c0 HAVING (NOT (((((COUNT(*)) BETWEEN (AVG(v0.c0)) AND (AVG(t1.c0)))) NOT NULL))) UNION ALL SELECT t1.c0 FROM v0, t1 GROUP BY t1.c0 HAVING ((((((COUNT(*)) BETWEEN (AVG(v0.c0)) AND (AVG(t1.c0)))) NOT NULL)) ISNULL);
SELECT ALL t1.c0 FROM v0, t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM v0, t1 GROUP BY t1.c0 HAVING ((((COUNT(*)) BETWEEN (AVG(v0.c0)) AND (AVG(t1.c0)))) NOT NULL) UNION ALL SELECT ALL t1.c0 FROM v0, t1 GROUP BY t1.c0 HAVING (NOT (((((COUNT(*)) BETWEEN (AVG(v0.c0)) AND (AVG(t1.c0)))) NOT NULL))) UNION ALL SELECT t1.c0 FROM v0, t1 GROUP BY t1.c0 HAVING ((((((COUNT(*)) BETWEEN (AVG(v0.c0)) AND (AVG(t1.c0)))) NOT NULL)) ISNULL);
SELECT ALL t1.c0 FROM v0, t1 GROUP BY t1.c0;
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((1678566427 COLLATE BINARY)) AND ((((v0.c0)=(v0.c0)))))) UNION ALL SELECT * FROM v0 WHERE ((NOT ((((v0.c0)) NOT BETWEEN ((1678566427 COLLATE BINARY)) AND ((((v0.c0)=(v0.c0)))))))) UNION ALL SELECT * FROM v0 WHERE ((((((v0.c0)) NOT BETWEEN ((1678566427 COLLATE BINARY)) AND ((((v0.c0)==(v0.c0)))))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM t1, v0 CROSS JOIN vt0 ON CASE WHEN CASE v0.c0  WHEN vt0.c0 THEN t1.c0 WHEN vt0.c0 THEN x'' WHEN v0.c0 THEN 0.6698690910929911 END THEN vt0.c0 COLLATE RTRIM ELSE CASE WHEN vt0.c0 THEN t1.c0 ELSE t1.c0 END END;
SELECT DISTINCT * FROM t1, v0 CROSS JOIN vt0 ON CASE WHEN CASE v0.c0  WHEN vt0.c0 THEN t1.c0 WHEN vt0.c0 THEN x'' WHEN v0.c0 THEN 0.6698690910929911 END THEN vt0.c0 COLLATE RTRIM ELSE CASE WHEN vt0.c0 THEN t1.c0 ELSE t1.c0 END END WHERE (((((((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)))OR(((((v0.c0)AND(v0.c0)))OR(NULL)))))OR(CAST(vt0.c0 AS NUMERIC)))) UNION SELECT DISTINCT * FROM t1, v0 CROSS JOIN vt0 ON CASE WHEN CASE v0.c0  WHEN vt0.c0 THEN t1.c0 WHEN vt0.c0 THEN x'' WHEN v0.c0 THEN 0.6698690910929911 END THEN vt0.c0 COLLATE RTRIM ELSE CASE WHEN vt0.c0 THEN t1.c0 ELSE t1.c0 END END WHERE ((NOT (((((((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)))OR(((((v0.c0)AND(v0.c0)))OR(NULL)))))OR(CAST(vt0.c0 AS NUMERIC)))))) UNION SELECT DISTINCT * FROM t1, v0 CROSS JOIN vt0 ON CASE WHEN CASE v0.c0  WHEN vt0.c0 THEN t1.c0 WHEN vt0.c0 THEN x'' WHEN v0.c0 THEN 0.6698690910929911 END THEN vt0.c0 COLLATE RTRIM ELSE CASE WHEN vt0.c0 THEN t1.c0 ELSE t1.c0 END END WHERE (((((((((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)))OR(((((v0.c0)AND(v0.c0)))OR(NULL)))))OR(CAST(vt0.c0 AS NUMERIC)))) ISNULL));
SELECT DISTINCT * FROM t1, v0 CROSS JOIN vt0 ON CASE WHEN CASE v0.c0  WHEN vt0.c0 THEN t1.c0 WHEN vt0.c0 THEN x'' WHEN v0.c0 THEN 0.6698690910929911 END THEN vt0.c0 COLLATE RTRIM ELSE CASE WHEN vt0.c0 THEN t1.c0 ELSE t1.c0 END END;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))>((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))>((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))>((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL t1.c0, v0.c0, vt0.c0 FROM t1, vt0, v0 GROUP BY t1.c0, v0.c0, vt0.c0;
SELECT ALL t1.c0, v0.c0, vt0.c0 FROM t1, vt0, v0 GROUP BY t1.c0, v0.c0, vt0.c0 HAVING COUNT(GROUP_CONCAT(COUNT(*))) UNION ALL SELECT t1.c0, v0.c0, vt0.c0 FROM t1, vt0, v0 GROUP BY t1.c0, v0.c0, vt0.c0 HAVING (NOT (COUNT(GROUP_CONCAT(COUNT(*))))) UNION ALL SELECT t1.c0, v0.c0, vt0.c0 FROM t1, vt0, v0 GROUP BY t1.c0, v0.c0, vt0.c0 HAVING ((COUNT(GROUP_CONCAT(COUNT(*)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((+ (vt0.c0)))IS NOT(CAST(vt0.c0 AS NUMERIC)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((+ (vt0.c0)))IS NOT(CAST(vt0.c0 AS NUMERIC)))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((((+ (vt0.c0)))IS NOT(CAST(vt0.c0 AS NUMERIC)))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM t1, v0 NATURAL JOIN vt0;
SELECT DISTINCT * FROM t1, v0 NATURAL JOIN vt0 WHERE ((((v0.c0) NOTNULL) IN ())) UNION SELECT DISTINCT * FROM t1, v0 NATURAL JOIN vt0 WHERE ((NOT ((((v0.c0) NOTNULL) IN ())))) UNION SELECT DISTINCT * FROM t1, v0 NATURAL JOIN vt0 WHERE ((((((v0.c0) NOTNULL) IN ())) ISNULL));
SELECT DISTINCT * FROM t1, v0 NATURAL JOIN vt0;
SELECT ALL v0.c0 FROM v0, vt0, t1 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0, t1 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(v0.c0)))*(v0.c0))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, vt0, t1 WHERE ((NOT (((((((vt0.c0)AND(vt0.c0)))OR(v0.c0)))*(v0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, vt0, t1 WHERE (((((((((vt0.c0)AND(vt0.c0)))OR(v0.c0)))*(v0.c0))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0, t1 GROUP BY v0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 WHERE ((((v0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))) COLLATE RTRIM) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0 WHERE ((NOT ((((v0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))) COLLATE RTRIM))) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0 WHERE ((((((v0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))) COLLATE RTRIM) ISNULL));
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0;
SELECT DISTINCT t1.c0 FROM t1, v0 NATURAL JOIN vt0;
SELECT DISTINCT t1.c0 FROM t1, v0 NATURAL JOIN vt0 WHERE (CASE WHEN ((vt0.c0)&(0.015202776897577208)) THEN (((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) END) UNION SELECT DISTINCT t1.c0 FROM t1, v0 NATURAL JOIN vt0 WHERE ((NOT (CASE WHEN ((vt0.c0)&(0.015202776897577208)) THEN (((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) END))) UNION SELECT DISTINCT t1.c0 FROM t1, v0 NATURAL JOIN vt0 WHERE (((CASE WHEN ((vt0.c0)&(0.015202776897577208)) THEN (((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) END) ISNULL));
SELECT DISTINCT t1.c0 FROM t1, v0 NATURAL JOIN vt0;
SELECT ALL v0.c0, t1.c0 FROM t1 RIGHT OUTER JOIN v0 ON (('!' IN (v0.c0, v0.c0)) IN ()) GROUP BY v0.c0, t1.c0;
SELECT ALL v0.c0, t1.c0 FROM t1 RIGHT OUTER JOIN v0 ON (('!' IN (v0.c0, v0.c0)) IN ()) WHERE (((((v0.c0) NOT NULL))==((~ (t1.c0))))) GROUP BY v0.c0, t1.c0 UNION SELECT ALL v0.c0, t1.c0 FROM t1 RIGHT OUTER JOIN v0 ON (('!' IN (v0.c0, v0.c0)) IN ()) WHERE ((NOT (((((v0.c0) NOT NULL))==((~ (t1.c0))))))) GROUP BY v0.c0, t1.c0 UNION SELECT ALL v0.c0, t1.c0 FROM t1 RIGHT OUTER JOIN v0 ON (('!' IN (v0.c0, v0.c0)) IN ()) WHERE (((((((v0.c0) NOT NULL))=((~ (t1.c0))))) ISNULL)) GROUP BY v0.c0, t1.c0;
SELECT ALL v0.c0, t1.c0 FROM t1 RIGHT OUTER JOIN v0 ON (('!' IN (v0.c0, v0.c0)) IN ()) GROUP BY v0.c0, t1.c0;
SELECT t1.c0, v0.c0, vt0.c0 FROM t1, v0, vt0 GROUP BY t1.c0, v0.c0, vt0.c0;
SELECT t1.c0, v0.c0, vt0.c0 FROM t1, v0, vt0 GROUP BY t1.c0, v0.c0, vt0.c0 HAVING MIN(((vt0.c0)/(MAX(TOTAL(TOTAL(t1.c0)))))) UNION ALL SELECT ALL t1.c0, v0.c0, vt0.c0 FROM t1, v0, vt0 GROUP BY t1.c0, v0.c0, vt0.c0 HAVING (NOT (MIN(((vt0.c0)/(MAX(TOTAL(TOTAL(t1.c0)))))))) UNION ALL SELECT ALL t1.c0, v0.c0, vt0.c0 FROM t1, v0, vt0 GROUP BY t1.c0, v0.c0, vt0.c0 HAVING ((MIN(((vt0.c0)/(MAX(TOTAL(TOTAL(t1.c0))))))) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((HEX(DISTINCT vt0.c0))<>(CAST(vt0.c0 AS BLOB)))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((HEX(DISTINCT vt0.c0))<>(CAST(vt0.c0 AS BLOB)))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((HEX(DISTINCT vt0.c0))!=(CAST(vt0.c0 AS BLOB)))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c0 FROM v0, vt0;
SELECT DISTINCT vt0.c0 FROM v0, vt0 WHERE (CAST(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS TEXT)) UNION SELECT DISTINCT vt0.c0 FROM v0 NOT INDEXED, vt0 WHERE ((NOT (CAST(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS TEXT)))) UNION SELECT DISTINCT vt0.c0 FROM v0, vt0 WHERE (((CAST(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS TEXT)) ISNULL));
SELECT DISTINCT vt0.c0 FROM v0, vt0;
SELECT ALL v0.c0, t1.c0 FROM v0 FULL OUTER JOIN t1 ON LENGTH(t1.c0) COLLATE BINARY GROUP BY v0.c0, t1.c0;
SELECT ALL v0.c0, t1.c0 FROM v0 FULL OUTER JOIN t1 ON LENGTH(t1.c0) COLLATE BINARY WHERE (((NULL)LIKE(CASE WHEN v0.c0 THEN v0.c0 ELSE t1.c0 END))) GROUP BY v0.c0, t1.c0 UNION SELECT v0.c0, t1.c0 FROM v0 FULL OUTER JOIN t1 ON LENGTH(t1.c0) COLLATE BINARY WHERE ((NOT (((NULL)LIKE(CASE WHEN v0.c0 THEN v0.c0 ELSE t1.c0 END))))) GROUP BY v0.c0, t1.c0 UNION SELECT ALL v0.c0, t1.c0 FROM v0 FULL OUTER JOIN t1 ON LENGTH(t1.c0) COLLATE BINARY WHERE (((((NULL)LIKE(CASE WHEN v0.c0 THEN v0.c0 ELSE t1.c0 END))) ISNULL)) GROUP BY v0.c0, t1.c0;
SELECT ALL v0.c0, t1.c0 FROM v0 FULL OUTER JOIN t1 ON LENGTH(t1.c0) COLLATE BINARY GROUP BY v0.c0, t1.c0;
SELECT v0.c0 FROM t1 FULL OUTER JOIN v0 ON (((((((t1.c0))>((v0.c0))))OR((t1.c0 IN ()))))AND((((t1.c0))>=((v0.c0))))) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM t1 FULL OUTER JOIN v0 ON (((((((t1.c0))>((v0.c0))))OR((t1.c0 IN ()))))AND((((t1.c0))>=((v0.c0))))) GROUP BY v0.c0 HAVING LIKE(COUNT(x''), ((t1.c0)-(MAX('1826347395')))) UNION ALL SELECT ALL v0.c0 FROM t1 FULL OUTER JOIN v0 ON (((((((t1.c0))>((v0.c0))))OR((t1.c0 IN ()))))AND((((t1.c0))>=((v0.c0))))) GROUP BY v0.c0 HAVING (NOT (LIKE(COUNT(x''), ((t1.c0)-(MAX('1826347395')))))) UNION ALL SELECT v0.c0 FROM t1 FULL OUTER JOIN v0 ON (((((((t1.c0))>((v0.c0))))OR((t1.c0 IN ()))))AND((((t1.c0))>=((v0.c0))))) GROUP BY v0.c0 HAVING ((LIKE(COUNT(x''), ((t1.c0)-(MAX('1826347395'))))) ISNULL);
SELECT v0.c0 FROM t1 FULL OUTER JOIN v0 ON (((((((t1.c0))>((v0.c0))))OR((t1.c0 IN ()))))AND((((t1.c0))>=((v0.c0))))) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM t1 FULL OUTER JOIN v0 ON (((((((t1.c0))>((v0.c0))))OR((t1.c0 IN ()))))AND((((t1.c0))>=((v0.c0))))) GROUP BY v0.c0 HAVING LIKE(COUNT(x''), ((t1.c0)-(MAX('1826347395')))) UNION ALL SELECT ALL v0.c0 FROM t1 FULL OUTER JOIN v0 ON (((((((t1.c0))>((v0.c0))))OR((t1.c0 IN ()))))AND((((t1.c0))>=((v0.c0))))) GROUP BY v0.c0 HAVING (NOT (LIKE(COUNT(x''), ((t1.c0)-(MAX('1826347395')))))) UNION ALL SELECT v0.c0 FROM t1 FULL OUTER JOIN v0 ON (((((((t1.c0))>((v0.c0))))OR((t1.c0 IN ()))))AND((((t1.c0))>=((v0.c0))))) GROUP BY v0.c0 HAVING ((LIKE(COUNT(x''), ((t1.c0)-(MAX('1826347395'))))) ISNULL);
SELECT v0.c0 FROM t1 FULL OUTER JOIN v0 ON (((((((t1.c0))>((v0.c0))))OR((t1.c0 IN ()))))AND((((t1.c0))>=((v0.c0))))) GROUP BY v0.c0;
SELECT * FROM t1;
SELECT * FROM t1 WHERE (((((t1.c0)>(t1.c0)))>=(((t1.c0)IS(t1.c0))))) UNION ALL SELECT ALL * FROM t1 WHERE ((NOT (((((t1.c0)>(t1.c0)))>=(((t1.c0)IS(t1.c0))))))) UNION ALL SELECT * FROM t1 WHERE (((((((t1.c0)>(t1.c0)))>=(((t1.c0)IS(t1.c0))))) ISNULL));
SELECT * FROM t1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CAST(vt0.c0 COLLATE BINARY AS INTEGER)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CAST(vt0.c0 COLLATE BINARY AS INTEGER)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CAST(vt0.c0 COLLATE BINARY AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE ((((((vt0.c0))<((v0.c0)))) IS FALSE)) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM vt0, v0 WHERE ((NOT ((((((vt0.c0))<((v0.c0)))) IS FALSE)))) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE ((((((((vt0.c0))<((v0.c0)))) IS FALSE)) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING v0.c0 UNION ALL SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING ((v0.c0) ISNULL);
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING v0.c0 UNION ALL SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING ((v0.c0) ISNULL);
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT * FROM t1, v0, vt0;
SELECT ALL * FROM t1, v0, vt0 WHERE (v0.c0) UNION ALL SELECT ALL * FROM t1, v0, vt0 WHERE ((NOT (v0.c0))) UNION ALL SELECT ALL * FROM t1, v0, vt0 WHERE (((v0.c0) ISNULL));
SELECT * FROM t1, v0, vt0;
SELECT DISTINCT v0.c0 FROM vt0, v0, t1;
SELECT DISTINCT v0.c0 FROM vt0, v0, t1 WHERE (t1.c0) UNION SELECT DISTINCT v0.c0 FROM vt0, v0, t1 WHERE ((NOT (t1.c0))) UNION SELECT DISTINCT v0.c0 FROM vt0, v0, t1 WHERE (((t1.c0) ISNULL));
SELECT DISTINCT v0.c0 FROM vt0, v0, t1;
SELECT t1.c0 FROM v0, t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM v0, t1 WHERE (((NULL)|(v0.c0)) COLLATE RTRIM) GROUP BY t1.c0 UNION SELECT t1.c0 FROM v0, t1 WHERE ((NOT (((NULL)|(v0.c0)) COLLATE RTRIM))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM v0, t1 WHERE (((((NULL)|(v0.c0)) COLLATE RTRIM) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM v0, t1 GROUP BY t1.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING GROUP_CONCAT(((((((((v0.c0)OR(MAX(COUNT(*)))))OR(v0.c0)))OR(COUNT(v0.c0))))OR(SUM(TOTAL(v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (GROUP_CONCAT(((((((((v0.c0)OR(MAX(COUNT(*)))))OR(v0.c0)))OR(COUNT(v0.c0))))OR(SUM(TOTAL(v0.c0))))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((GROUP_CONCAT(((((((((v0.c0)OR(MAX(COUNT(*)))))OR(v0.c0)))OR(COUNT(v0.c0))))OR(SUM(TOTAL(v0.c0)))))) ISNULL);
SELECT ALL t1.c0, vt0.c0 FROM v0, vt0 CROSS JOIN t1 ON (((((t1.c0))>((v0.c0)))) NOTNULL);
SELECT t1.c0, vt0.c0 FROM v0, vt0 CROSS JOIN t1 ON (((((t1.c0))>((v0.c0)))) NOTNULL) WHERE (((CASE t1.c0  WHEN t1.c0 THEN vt0.c0 END)>(((v0.c0) IS TRUE)))) UNION ALL SELECT t1.c0, vt0.c0 FROM v0, vt0 CROSS JOIN t1 ON (((((t1.c0))>((v0.c0)))) NOTNULL) WHERE ((NOT (((CASE t1.c0  WHEN t1.c0 THEN vt0.c0 END)>(((v0.c0) IS TRUE)))))) UNION ALL SELECT ALL t1.c0, vt0.c0 FROM v0, vt0 CROSS JOIN t1 ON (((((t1.c0))>((v0.c0)))) NOTNULL) WHERE (((((CASE t1.c0  WHEN t1.c0 THEN vt0.c0 END)>(((v0.c0) IS TRUE)))) ISNULL));
SELECT ALL t1.c0, vt0.c0 FROM v0, vt0 CROSS JOIN t1 ON (((((t1.c0))>((v0.c0)))) NOTNULL);
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE (((CAST(t1.c0 AS BLOB)) NOT BETWEEN ((((t1.c0)) BETWEEN ((t1.c0)) AND ((0.5929799029406826)))) AND (LOWER(t1.c0)))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT (((CAST(t1.c0 AS BLOB)) NOT BETWEEN ((((t1.c0)) BETWEEN ((t1.c0)) AND ((0.5929799029406826)))) AND (LOWER(t1.c0)))))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE (((((CAST(t1.c0 AS BLOB)) NOT BETWEEN ((((t1.c0)) BETWEEN ((t1.c0)) AND ((0.5929799029406826)))) AND (LOWER(t1.c0)))) ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0)AND(v0.c0)))OR(v0.c0)) COLLATE NOCASE) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((((v0.c0)AND(v0.c0)))OR(v0.c0)) COLLATE NOCASE))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((((v0.c0)AND(v0.c0)))OR(v0.c0)) COLLATE NOCASE) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(SQLITE_COMPILEOPTION_GET(TOTAL(SUM(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(SQLITE_COMPILEOPTION_GET(TOTAL(SUM(vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(SQLITE_COMPILEOPTION_GET(TOTAL(SUM(vt0.c0))))) ISNULL);
SELECT ALL TOTAL(DATETIME(PRINTF(t1.c0, vt0.c0, vt0.c0, t1.c0, vt0.c0), TRIM(t1.c0), ((t1.c0) IS TRUE))) FROM vt0, t1, v0;
SELECT ALL * FROM vt0, v0, t1;
SELECT * FROM vt0, v0, t1 WHERE (((x'')>(((((vt0.c0)AND(t1.c0)))OR(v0.c0))))) UNION ALL SELECT * FROM vt0, v0, t1 WHERE ((NOT (((x'')>(((((vt0.c0)AND(t1.c0)))OR(v0.c0))))))) UNION ALL SELECT ALL * FROM vt0, v0, t1 WHERE (((((x'')>(((((vt0.c0)AND(t1.c0)))OR(v0.c0))))) ISNULL));
SELECT ALL * FROM vt0, v0, t1;
SELECT DISTINCT * FROM vt0, t1, v0;
SELECT DISTINCT * FROM vt0, t1, v0 WHERE (((CASE t1.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)==(CASE t1.c0  WHEN t1.c0 THEN vt0.c0 ELSE v0.c0 END))) UNION SELECT DISTINCT * FROM vt0, t1, v0 WHERE ((NOT (((CASE t1.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)==(CASE t1.c0  WHEN t1.c0 THEN vt0.c0 ELSE v0.c0 END))))) UNION SELECT DISTINCT * FROM vt0, t1, v0 WHERE (((((CASE t1.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)=(CASE t1.c0  WHEN t1.c0 THEN vt0.c0 ELSE v0.c0 END))) ISNULL));
SELECT DISTINCT * FROM vt0, t1, v0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((CAST(vt0.c0 AS INTEGER))AND(((vt0.c0) IS TRUE))))OR(vt0.c0))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((CAST(vt0.c0 AS INTEGER))AND(((vt0.c0) IS TRUE))))OR(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((CAST(vt0.c0 AS INTEGER))AND(((vt0.c0) IS TRUE))))OR(vt0.c0))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING TOTAL(CASE MIN(v0.c0)  WHEN AVG(v0.c0) THEN TOTAL(MIN(MIN(MAX(v0.c0)))) END) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TOTAL(CASE MIN(v0.c0)  WHEN AVG(v0.c0) THEN TOTAL(MIN(MIN(MAX(v0.c0)))) END))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL(CASE MIN(v0.c0)  WHEN AVG(v0.c0) THEN TOTAL(MIN(MIN(MAX(v0.c0)))) END)) ISNULL);
SELECT MIN(UNICODE(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)) FROM v0 ORDER BY NULLIF(COALESCE(v0.c0, v0.c0), ((v0.c0)IS NOT(v0.c0)));
SELECT ALL t1.c0 FROM t1, vt0;
SELECT t1.c0 FROM t1, vt0 WHERE (((((vt0.c0)-(t1.c0))) NOT NULL)) UNION ALL SELECT t1.c0 FROM t1, vt0 WHERE ((NOT (((((vt0.c0)-(t1.c0))) NOT NULL)))) UNION ALL SELECT ALL t1.c0 FROM t1, vt0 WHERE (((((((vt0.c0)-(t1.c0))) NOT NULL)) ISNULL));
SELECT ALL t1.c0 FROM t1, vt0;
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE (((((0.7441648103243901)AND(t1.c0)))OR(t1.c0)) COLLATE BINARY) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT (((((0.7441648103243901)AND(t1.c0)))OR(t1.c0)) COLLATE BINARY))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE (((((((0.7441648103243901)AND(t1.c0)))OR(t1.c0)) COLLATE BINARY) ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT ALL v0.c0 FROM vt0 CROSS JOIN v0 ON (+ (((((((((((((vt0.c0)OR(t1.c0)))OR(t1.c0)))OR(v0.c0)))AND(vt0.c0)))AND(t1.c0)))AND(v0.c0)))) FULL OUTER JOIN t1 ON CASE (NOT (x''))  WHEN (((v0.c0, t1.c0, x'6d8d'))>((vt0.c0, v0.c0, v0.c0))) THEN ((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE json(t1.c0) END GROUP BY v0.c0;
SELECT v0.c0, t1.c0 FROM v0 LEFT OUTER JOIN t1 ON ((((v0.c0)>=(v0.c0)))<>((- (v0.c0)))) GROUP BY v0.c0, t1.c0;
SELECT v0.c0, t1.c0 FROM v0 LEFT OUTER JOIN t1 ON ((((v0.c0)>=(v0.c0)))<>((- (v0.c0)))) GROUP BY v0.c0, t1.c0 HAVING ((GROUP_CONCAT(v0.c0))<<(((((v0.c0)AND(SUM(t1.c0))))AND(t1.c0)))) UNION ALL SELECT ALL v0.c0, t1.c0 FROM v0 LEFT OUTER JOIN t1 ON ((((v0.c0)>=(v0.c0)))!=((- (v0.c0)))) GROUP BY v0.c0, t1.c0 HAVING (NOT (((GROUP_CONCAT(v0.c0))<<(((((v0.c0)AND(SUM(t1.c0))))AND(t1.c0)))))) UNION ALL SELECT ALL v0.c0, t1.c0 FROM v0 LEFT OUTER JOIN t1 ON ((((v0.c0)>=(v0.c0)))!=((- (v0.c0)))) GROUP BY v0.c0, t1.c0 HAVING ((((GROUP_CONCAT(v0.c0))<<(((((v0.c0)AND(SUM(t1.c0))))AND(t1.c0))))) ISNULL);
SELECT v0.c0, t1.c0 FROM v0 LEFT OUTER JOIN t1 ON ((((v0.c0)>=(v0.c0)))<>((- (v0.c0)))) GROUP BY v0.c0, t1.c0;
SELECT v0.c0, t1.c0 FROM v0 LEFT OUTER JOIN t1 ON ((((v0.c0)>=(v0.c0)))<>((- (v0.c0)))) GROUP BY v0.c0, t1.c0 HAVING ((GROUP_CONCAT(v0.c0))<<(((((v0.c0)AND(SUM(t1.c0))))AND(t1.c0)))) UNION ALL SELECT ALL v0.c0, t1.c0 FROM v0 LEFT OUTER JOIN t1 ON ((((v0.c0)>=(v0.c0)))!=((- (v0.c0)))) GROUP BY v0.c0, t1.c0 HAVING (NOT (((GROUP_CONCAT(v0.c0))<<(((((v0.c0)AND(SUM(t1.c0))))AND(t1.c0)))))) UNION ALL SELECT ALL v0.c0, t1.c0 FROM v0 LEFT OUTER JOIN t1 ON ((((v0.c0)>=(v0.c0)))!=((- (v0.c0)))) GROUP BY v0.c0, t1.c0 HAVING ((((GROUP_CONCAT(v0.c0))<<(((((v0.c0)AND(SUM(t1.c0))))AND(t1.c0))))) ISNULL);
SELECT v0.c0, t1.c0 FROM v0 LEFT OUTER JOIN t1 ON ((((v0.c0)>=(v0.c0)))<>((- (v0.c0)))) GROUP BY v0.c0, t1.c0;
SELECT t1.c0 FROM t1;
SELECT t1.c0 FROM t1 WHERE (CAST(LOWER(1850976034) AS INTEGER)) ORDER BY CASE (- (t1.c0))  WHEN t1.c0 COLLATE RTRIM THEN x'' WHEN (t1.c0 IN ('1759838136', t1.c0)) THEN t1.c0 WHEN CAST(t1.c0 AS TEXT) THEN ((t1.c0)AND(t1.c0)) WHEN ((t1.c0)>>(t1.c0)) THEN (((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))) WHEN t1.c0 THEN t1.c0 END  NULLS LAST, TRIM(t1.c0, ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) DESC  NULLS LAST;
SELECT t1.c0 FROM t1 WHERE ((NOT (CAST(LOWER(1850976034) AS INTEGER)))) ORDER BY CASE (- (t1.c0))  WHEN t1.c0 COLLATE RTRIM THEN x'' WHEN (t1.c0 IN ('1759838136', t1.c0)) THEN t1.c0 WHEN CAST(t1.c0 AS TEXT) THEN ((t1.c0)AND(t1.c0)) WHEN ((t1.c0)>>(t1.c0)) THEN (((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))) WHEN t1.c0 THEN t1.c0 END  NULLS LAST, TRIM(t1.c0, ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) DESC  NULLS LAST;
SELECT ALL t1.c0 FROM t1 WHERE (((CAST(LOWER(1850976034) AS INTEGER)) ISNULL)) ORDER BY CASE (- (t1.c0))  WHEN t1.c0 COLLATE RTRIM THEN x'' WHEN (t1.c0 IN ('1759838136', t1.c0)) THEN t1.c0 WHEN CAST(t1.c0 AS TEXT) THEN ((t1.c0)AND(t1.c0)) WHEN ((t1.c0)>>(t1.c0)) THEN (((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))) WHEN t1.c0 THEN t1.c0 END  NULLS LAST, TRIM(t1.c0, ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) DESC  NULLS LAST;
SELECT t1.c0 FROM t1;
SELECT DISTINCT * FROM vt0, t1;
SELECT DISTINCT * FROM vt0 NOT INDEXED, t1 WHERE (((((CAST(NULL AS BLOB))AND(((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))))OR(0.19293855631422685))) UNION SELECT DISTINCT * FROM vt0, t1 WHERE ((NOT (((((CAST(NULL AS BLOB))AND(((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))))OR(0.19293855631422685))))) UNION SELECT DISTINCT * FROM vt0, t1 WHERE (((((((CAST(NULL AS BLOB))AND(((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))))OR(0.19293855631422685))) ISNULL));
SELECT DISTINCT * FROM vt0, t1;
SELECT vt0.c0, v0.c0, t1.c0 FROM vt0, t1, v0 GROUP BY vt0.c0, v0.c0, t1.c0;
SELECT ALL vt0.c0, v0.c0, t1.c0 FROM vt0, t1, v0 WHERE ((((vt0.c0 COLLATE NOCASE, 0.22490771467910853, v0.c0))>(((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((vt0.c0) NOT BETWEEN (v0.c0) AND ('uftJY4?')), ((t1.c0)IS(v0.c0)))))) GROUP BY vt0.c0, v0.c0, t1.c0 UNION SELECT vt0.c0, v0.c0, t1.c0 FROM vt0, t1, v0 WHERE ((NOT ((((vt0.c0 COLLATE NOCASE, 0.22490771467910853, v0.c0))>(((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((vt0.c0) NOT BETWEEN (v0.c0) AND ('uftJY4?')), ((t1.c0)IS(v0.c0)))))))) GROUP BY vt0.c0, v0.c0, t1.c0 UNION SELECT ALL vt0.c0, v0.c0, t1.c0 FROM vt0, t1, v0 WHERE ((((((vt0.c0 COLLATE NOCASE, 0.22490771467910853, v0.c0))>(((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((vt0.c0) NOT BETWEEN (v0.c0) AND ('uftJY4?')), ((t1.c0)IS(v0.c0)))))) ISNULL)) GROUP BY vt0.c0, v0.c0, t1.c0;
SELECT vt0.c0, v0.c0, t1.c0 FROM vt0, t1, v0 GROUP BY vt0.c0, v0.c0, t1.c0;
SELECT t1.c0 FROM t1, v0, vt0 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1, v0, vt0 GROUP BY t1.c0 HAVING AVG((v0.c0 IN ())) UNION ALL SELECT ALL t1.c0 FROM t1, v0, vt0 GROUP BY t1.c0 HAVING (NOT (AVG((v0.c0 IN ())))) UNION ALL SELECT t1.c0 FROM t1, v0, vt0 GROUP BY t1.c0 HAVING ((AVG((v0.c0 IN ()))) ISNULL);
SELECT t1.c0 FROM t1, v0, vt0 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1, v0, vt0 GROUP BY t1.c0 HAVING AVG((v0.c0 IN ())) UNION ALL SELECT ALL t1.c0 FROM t1, v0, vt0 GROUP BY t1.c0 HAVING (NOT (AVG((v0.c0 IN ())))) UNION ALL SELECT t1.c0 FROM t1, v0, vt0 GROUP BY t1.c0 HAVING ((AVG((v0.c0 IN ()))) ISNULL);
SELECT t1.c0 FROM t1, v0, vt0 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1;
SELECT ALL t1.c0 FROM t1 WHERE (((t1.c0) IS FALSE)) UNION ALL SELECT t1.c0 FROM t1 WHERE ((NOT (((t1.c0) IS FALSE)))) UNION ALL SELECT t1.c0 FROM t1 WHERE (((((t1.c0) IS FALSE)) ISNULL));
SELECT ALL t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE (NULL) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT (NULL))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE (((NULL) ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT ALL t1.c0, vt0.c0, v0.c0 FROM t1, vt0, v0 GROUP BY t1.c0, vt0.c0, v0.c0;
SELECT ALL t1.c0, vt0.c0, v0.c0 FROM t1, vt0, v0 WHERE (((CAST(v0.c0 AS NUMERIC))<((('7W') ISNULL)))) GROUP BY t1.c0, vt0.c0, v0.c0 UNION SELECT t1.c0, vt0.c0, v0.c0 FROM t1, vt0, v0 WHERE ((NOT (((CAST(v0.c0 AS NUMERIC))<((('7W') ISNULL)))))) GROUP BY t1.c0, vt0.c0, v0.c0 UNION SELECT t1.c0, vt0.c0, v0.c0 FROM t1, vt0, v0 WHERE (((((CAST(v0.c0 AS NUMERIC))<((('7W') ISNULL)))) ISNULL)) GROUP BY t1.c0, vt0.c0, v0.c0;
SELECT ALL t1.c0, vt0.c0, v0.c0 FROM t1, vt0, v0 GROUP BY t1.c0, vt0.c0, v0.c0;
SELECT t1.c0, v0.c0 FROM t1, v0, vt0 GROUP BY t1.c0, v0.c0;
SELECT t1.c0, v0.c0 FROM t1, v0, vt0 GROUP BY t1.c0, v0.c0 HAVING GROUP_CONCAT(((vt0.c0) NOT NULL)) UNION ALL SELECT t1.c0, v0.c0 FROM t1, v0, vt0 GROUP BY t1.c0, v0.c0 HAVING (NOT (GROUP_CONCAT(((vt0.c0) NOT NULL)))) UNION ALL SELECT t1.c0, v0.c0 FROM t1, v0, vt0 GROUP BY t1.c0, v0.c0 HAVING ((GROUP_CONCAT(((vt0.c0) NOT NULL))) ISNULL);
SELECT t1.c0, v0.c0 FROM t1, v0, vt0 GROUP BY t1.c0, v0.c0;
SELECT t1.c0, v0.c0 FROM t1, v0, vt0 GROUP BY t1.c0, v0.c0 HAVING GROUP_CONCAT(((vt0.c0) NOT NULL)) UNION ALL SELECT t1.c0, v0.c0 FROM t1, v0, vt0 GROUP BY t1.c0, v0.c0 HAVING (NOT (GROUP_CONCAT(((vt0.c0) NOT NULL)))) UNION ALL SELECT t1.c0, v0.c0 FROM t1, v0, vt0 GROUP BY t1.c0, v0.c0 HAVING ((GROUP_CONCAT(((vt0.c0) NOT NULL))) ISNULL);
SELECT t1.c0, v0.c0 FROM t1, v0, vt0 GROUP BY t1.c0, v0.c0;
SELECT vt0.c0 FROM vt0, v0;
SELECT ALL vt0.c0 FROM vt0, v0 WHERE (((vt0.c0) ISNULL) COLLATE RTRIM) UNION ALL SELECT vt0.c0 FROM vt0 NOT INDEXED, v0 WHERE ((NOT (((vt0.c0) ISNULL) COLLATE RTRIM))) UNION ALL SELECT vt0.c0 FROM vt0, v0 WHERE (((((vt0.c0) ISNULL) COLLATE RTRIM) ISNULL));
SELECT vt0.c0 FROM vt0, v0;
SELECT DISTINCT * FROM v0, t1;
SELECT DISTINCT * FROM v0, t1 WHERE ((((t1.c0) IS TRUE) IN ())) UNION SELECT DISTINCT * FROM v0, t1 WHERE ((NOT ((((t1.c0) IS TRUE) IN ())))) UNION SELECT DISTINCT * FROM v0, t1 WHERE ((((((t1.c0) IS TRUE) IN ())) ISNULL));
SELECT DISTINCT * FROM v0, t1;
SELECT ALL vt0.c0 FROM v0 CROSS JOIN vt0 ON x'' GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0 CROSS JOIN vt0 ON x'' WHERE ((((((((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))AND((~ (NULL)))))AND(((vt0.c0) NOT NULL))))AND('')))OR(((((0.5141279902692252)OR(v0.c0)))AND(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM v0 CROSS JOIN vt0 ON x'' WHERE ((NOT ((((((((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))AND((~ (NULL)))))AND(((vt0.c0) NOT NULL))))AND('')))OR(((((0.5141279902692252)OR(v0.c0)))AND(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM v0 CROSS JOIN vt0 ON x'' WHERE ((((((((((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))AND((~ (NULL)))))AND(((vt0.c0) NOT NULL))))AND('')))OR(((((0.5141279902692252)OR(v0.c0)))AND(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0 CROSS JOIN vt0 ON x'' GROUP BY vt0.c0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING COUNT(MIN(v0.c0)) UNION ALL SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING (NOT (COUNT(MIN(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING ((COUNT(MIN(v0.c0))) ISNULL);
SELECT MIN((((+ (v0.c0))) IS TRUE)) FROM v0, vt0, t1 ORDER BY json_type(((vt0.c0)+(vt0.c0)));
SELECT * FROM t1, v0 LEFT OUTER JOIN vt0 ON '21';
SELECT ALL * FROM t1, v0 LEFT OUTER JOIN vt0 ON '21' WHERE ((~ (CASE WHEN vt0.c0 THEN t1.c0 ELSE v0.c0 END))) UNION ALL SELECT * FROM t1, v0 LEFT OUTER JOIN vt0 ON '21' WHERE ((NOT ((~ (CASE WHEN vt0.c0 THEN t1.c0 ELSE v0.c0 END))))) UNION ALL SELECT * FROM t1, v0 LEFT OUTER JOIN vt0 ON '21' WHERE ((((~ (CASE WHEN vt0.c0 THEN t1.c0 ELSE v0.c0 END))) ISNULL));
SELECT * FROM t1, v0 LEFT OUTER JOIN vt0 ON '21';
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END IN ())) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END IN ())))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END IN ())) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (TRIM(vt0.c0, vt0.c0) COLLATE NOCASE) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (TRIM(vt0.c0, vt0.c0) COLLATE NOCASE))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((TRIM(vt0.c0, vt0.c0) COLLATE NOCASE) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING NULL UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (NULL)) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING ((NULL) ISNULL);
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING NULL UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (NULL)) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING ((NULL) ISNULL);
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, t1.c0 FROM v0 RIGHT OUTER JOIN vt0 ON 0.7132878942425255 FULL OUTER JOIN t1 ON (((CASE v0.c0  WHEN t1.c0 THEN t1.c0 END))<=(('741820516')));
SELECT vt0.c0, t1.c0 FROM v0 RIGHT OUTER JOIN vt0 ON 0.7132878942425255 FULL OUTER JOIN t1 ON (((CASE v0.c0  WHEN t1.c0 THEN t1.c0 END))<=(('741820516'))) WHERE (CASE WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0X22a9dffb WHEN 0.43991023365970683 THEN v0.c0 ELSE vt0.c0 END COLLATE NOCASE) UNION ALL SELECT vt0.c0, t1.c0 FROM v0 RIGHT OUTER JOIN vt0 ON 0.7132878942425255 FULL OUTER JOIN t1 ON (((CASE v0.c0  WHEN t1.c0 THEN t1.c0 END))<=(('741820516'))) WHERE ((NOT (CASE WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0X22a9dffb WHEN 0.43991023365970683 THEN v0.c0 ELSE vt0.c0 END COLLATE NOCASE))) UNION ALL SELECT ALL vt0.c0, t1.c0 FROM v0 RIGHT OUTER JOIN vt0 ON 0.7132878942425255 FULL OUTER JOIN t1 ON (((CASE v0.c0  WHEN t1.c0 THEN t1.c0 END))<=(('741820516'))) WHERE (((CASE WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0x22a9dffb WHEN 0.43991023365970683 THEN v0.c0 ELSE vt0.c0 END COLLATE NOCASE) ISNULL));
SELECT vt0.c0, t1.c0 FROM v0 RIGHT OUTER JOIN vt0 ON 0.7132878942425255 FULL OUTER JOIN t1 ON (((CASE v0.c0  WHEN t1.c0 THEN t1.c0 END))<=(('741820516')));
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (UNLIKELY(DISTINCT CAST(v0.c0 AS TEXT))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (UNLIKELY(DISTINCT CAST(v0.c0 AS TEXT))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((UNLIKELY(DISTINCT CAST(v0.c0 AS TEXT))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL vt0.c0 FROM v0 NOT INDEXED, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, vt0 WHERE ((((((NOT (vt0.c0)))AND(vt0.c0)))OR((+ (v0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM v0, vt0 WHERE ((NOT ((((((NOT (vt0.c0)))AND(vt0.c0)))OR((+ (v0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM v0, vt0 WHERE ((((((((NOT (vt0.c0)))AND(vt0.c0)))OR((+ (v0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0 NOT INDEXED, vt0 GROUP BY vt0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING TOTAL(((((MIN(v0.c0))AND(v0.c0)))OR(COUNT(*)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TOTAL(((((MIN(v0.c0))AND(v0.c0)))OR(COUNT(*)))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL(((((MIN(v0.c0))AND(v0.c0)))OR(COUNT(*))))) ISNULL);
SELECT ALL SUM(v0.c0) FROM t1, vt0, v0 ORDER BY vt0.c0 COLLATE NOCASE, ((((((t1.c0)AND(vt0.c0)))OR(vt0.c0)))<=((v0.c0 IN ())));
SELECT t1.c0 FROM t1, v0;
SELECT t1.c0 FROM t1, v0 WHERE ((((t1.c0 IN ()))AND(((t1.c0) NOTNULL)))) UNION ALL SELECT t1.c0 FROM t1, v0 WHERE ((NOT ((((t1.c0 IN ()))AND(((t1.c0) NOTNULL)))))) UNION ALL SELECT ALL t1.c0 FROM t1, v0 WHERE ((((((t1.c0 IN ()))AND(((t1.c0) NOTNULL)))) ISNULL));
SELECT t1.c0 FROM t1, v0;
SELECT DISTINCT t1.c0 FROM v0, vt0, t1;
SELECT DISTINCT t1.c0 FROM v0, vt0, t1 WHERE ((NULL IN ())) UNION SELECT DISTINCT t1.c0 FROM v0, vt0, t1 WHERE ((NOT ((NULL IN ())))) UNION SELECT DISTINCT t1.c0 FROM v0, vt0, t1 WHERE ((((NULL IN ())) ISNULL));
SELECT DISTINCT t1.c0 FROM v0, vt0, t1;
SELECT ALL t1.c0, vt0.c0 FROM vt0, t1 GROUP BY t1.c0, vt0.c0;
SELECT t1.c0, vt0.c0 FROM vt0, t1 WHERE ((((((vt0.c0 IN ()))AND(TRIM(vt0.c0))))AND(((t1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) GROUP BY t1.c0, vt0.c0 UNION SELECT ALL t1.c0, vt0.c0 FROM vt0, t1 WHERE ((NOT ((((((vt0.c0 IN ()))AND(TRIM(vt0.c0))))AND(((t1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))))) GROUP BY t1.c0, vt0.c0 UNION SELECT t1.c0, vt0.c0 FROM vt0, t1 WHERE ((((((((vt0.c0 IN ()))AND(TRIM(vt0.c0))))AND(((t1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL)) GROUP BY t1.c0, vt0.c0;
SELECT ALL t1.c0, vt0.c0 FROM vt0, t1 GROUP BY t1.c0, vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(vt0.c0)) IS TRUE) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((TOTAL(vt0.c0)) IS TRUE))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((TOTAL(vt0.c0)) IS TRUE)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(vt0.c0)) IS TRUE) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((TOTAL(vt0.c0)) IS TRUE))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((TOTAL(vt0.c0)) IS TRUE)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM vt0, v0;
SELECT ALL * FROM vt0, v0 WHERE (CAST(((v0.c0)%(v0.c0)) AS TEXT)) UNION ALL SELECT * FROM vt0, v0 WHERE ((NOT (CAST(((v0.c0)%(v0.c0)) AS TEXT)))) UNION ALL SELECT * FROM vt0, v0 WHERE (((CAST(((v0.c0)%(v0.c0)) AS TEXT)) ISNULL));
SELECT ALL * FROM vt0, v0;
SELECT DISTINCT * FROM v0, vt0, t1;
SELECT DISTINCT * FROM v0, vt0, t1 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((t1.c0)))) IS TRUE)) UNION SELECT DISTINCT * FROM v0, vt0 NOT INDEXED, t1 WHERE ((NOT ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((t1.c0)))) IS TRUE)))) UNION SELECT DISTINCT * FROM v0, vt0, t1 WHERE ((((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((t1.c0)))) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM v0, vt0, t1;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE (CASE CASE WHEN NULL THEN t1.c0 END  WHEN 'm7' THEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) END) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT (CASE CASE WHEN NULL THEN t1.c0 END  WHEN 'm7' THEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) END))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE (((CASE CASE WHEN NULL THEN t1.c0 END  WHEN 'm7' THEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) END) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0, vt0.c0 FROM t1 CROSS JOIN vt0 ON CASE ((t1.c0)IS(vt0.c0))  WHEN highlight(t1.c0, t1.c0, vt0.c0, t1.c0) THEN vt0.c0 COLLATE BINARY ELSE 'Zj' COLLATE RTRIM END GROUP BY t1.c0, vt0.c0;
SELECT * FROM t1, v0 LEFT OUTER JOIN vt0 ON ((((vt0.c0)LIKE(x''))) NOT BETWEEN (((vt0.c0)<=(vt0.c0))) AND (v0.c0));
SELECT * FROM t1, v0 LEFT OUTER JOIN vt0 ON ((((vt0.c0)LIKE(x''))) NOT BETWEEN (((vt0.c0)<=(vt0.c0))) AND (v0.c0)) WHERE (CAST(((v0.c0)<(v0.c0)) AS REAL)) UNION ALL SELECT * FROM t1, v0 LEFT OUTER JOIN vt0 ON ((((vt0.c0)LIKE(x''))) NOT BETWEEN (((vt0.c0)<=(vt0.c0))) AND (v0.c0)) WHERE ((NOT (CAST(((v0.c0)<(v0.c0)) AS REAL)))) UNION ALL SELECT ALL * FROM t1, v0 LEFT OUTER JOIN vt0 ON ((((vt0.c0)LIKE(x''))) NOT BETWEEN (((vt0.c0)<=(vt0.c0))) AND (v0.c0)) WHERE (((CAST(((v0.c0)<(v0.c0)) AS REAL)) ISNULL));
SELECT * FROM t1, v0 LEFT OUTER JOIN vt0 ON ((((vt0.c0)LIKE(x''))) NOT BETWEEN (((vt0.c0)<=(vt0.c0))) AND (v0.c0));
SELECT DISTINCT * FROM t1, v0;
SELECT DISTINCT * FROM t1, v0 WHERE (((((((v0.c0)OR(t1.c0)))AND(t1.c0))) IS TRUE)) UNION SELECT DISTINCT * FROM t1, v0 WHERE ((NOT (((((((v0.c0)OR(t1.c0)))AND(t1.c0))) IS TRUE)))) UNION SELECT DISTINCT * FROM t1, v0 WHERE (((((((((v0.c0)OR(t1.c0)))AND(t1.c0))) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM t1, v0;
SELECT t1.c0 FROM v0, t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM v0, t1 WHERE (((((((((((t1.c0)IS NOT(t1.c0)))AND(t1.c0)))OR((((v0.c0, v0.c0, t1.c0, t1.c0, t1.c0)) BETWEEN ((v0.c0, t1.c0, v0.c0, t1.c0, v0.c0)) AND ((t1.c0, v0.c0, v0.c0, v0.c0, v0.c0))))))AND(((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))))AND(UNICODE(v0.c0)))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM v0, t1 WHERE ((NOT (((((((((((t1.c0)IS NOT(t1.c0)))AND(t1.c0)))OR((((v0.c0, v0.c0, t1.c0, t1.c0, t1.c0)) BETWEEN ((v0.c0, t1.c0, v0.c0, t1.c0, v0.c0)) AND ((t1.c0, v0.c0, v0.c0, v0.c0, v0.c0))))))AND(((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))))AND(UNICODE(v0.c0)))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM v0, t1 WHERE (((((((((((((t1.c0)IS NOT(t1.c0)))AND(t1.c0)))OR((((v0.c0, v0.c0, t1.c0, t1.c0, t1.c0)) BETWEEN ((v0.c0, t1.c0, v0.c0, t1.c0, v0.c0)) AND ((t1.c0, v0.c0, v0.c0, v0.c0, v0.c0))))))AND(((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))))AND(UNICODE(v0.c0)))) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM v0, t1 GROUP BY t1.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((((((vt0.c0)OR(AVG(AVG(AVG(vt0.c0))))))OR(vt0.c0)))OR(NULL)))OR(COUNT(-1.614460203E9)))) ISNULL) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((((((((((vt0.c0)OR(AVG(AVG(AVG(vt0.c0))))))OR(vt0.c0)))OR(NULL)))OR(COUNT(-1.614460203E9)))) ISNULL))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((((((((vt0.c0)OR(AVG(AVG(AVG(vt0.c0))))))OR(vt0.c0)))OR(NULL)))OR(COUNT(-1.614460203E9)))) ISNULL)) ISNULL);
SELECT ALL * FROM vt0, t1;
SELECT * FROM vt0, t1 WHERE (((((t1.c0)OR('-486012067')))OR(t1.c0)) COLLATE BINARY) UNION ALL SELECT * FROM vt0, t1 WHERE ((NOT (((((t1.c0)OR('-486012067')))OR(t1.c0)) COLLATE BINARY))) UNION ALL SELECT * FROM vt0, t1 WHERE (((((((t1.c0)OR('-486012067')))OR(t1.c0)) COLLATE BINARY) ISNULL));
SELECT ALL * FROM vt0, t1;
SELECT DISTINCT t1.c0, vt0.c0 FROM v0, t1, vt0;
SELECT DISTINCT t1.c0, vt0.c0 FROM v0, t1, vt0 WHERE (((NULLIF(DISTINCT v0.c0, t1.c0)) IS FALSE)) UNION SELECT DISTINCT t1.c0, vt0.c0 FROM v0, t1, vt0 WHERE ((NOT (((NULLIF(DISTINCT v0.c0, t1.c0)) IS FALSE)))) UNION SELECT DISTINCT t1.c0, vt0.c0 FROM v0, t1, vt0 WHERE (((((NULLIF(DISTINCT v0.c0, t1.c0)) IS FALSE)) ISNULL));
SELECT DISTINCT t1.c0, vt0.c0 FROM v0, t1, vt0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 WHERE ((vt0.c0 COLLATE RTRIM IN ())) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 WHERE ((NOT ((vt0.c0 COLLATE RTRIM IN ())))) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM v0, vt0 WHERE ((((vt0.c0 COLLATE RTRIM IN ())) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT ALL vt0.c0, t1.c0 FROM v0, vt0 FULL OUTER JOIN t1 ON '!' GROUP BY vt0.c0, t1.c0;
SELECT ALL vt0.c0, t1.c0 FROM v0, vt0 FULL OUTER JOIN t1 ON '!' GROUP BY vt0.c0, t1.c0 HAVING ((MAX(v0.c0)) NOTNULL) UNION ALL SELECT ALL vt0.c0, t1.c0 FROM v0, vt0 FULL OUTER JOIN t1 ON '!' GROUP BY vt0.c0, t1.c0 HAVING (NOT (((MAX(v0.c0)) NOTNULL))) UNION ALL SELECT ALL vt0.c0, t1.c0 FROM v0, vt0 FULL OUTER JOIN t1 ON '!' GROUP BY vt0.c0, t1.c0 HAVING ((((MAX(v0.c0)) NOTNULL)) ISNULL);
SELECT ALL vt0.c0, t1.c0 FROM v0, vt0 FULL OUTER JOIN t1 ON '!' GROUP BY vt0.c0, t1.c0;
SELECT ALL vt0.c0, t1.c0 FROM v0, vt0 FULL OUTER JOIN t1 ON '!' GROUP BY vt0.c0, t1.c0 HAVING ((MAX(v0.c0)) NOTNULL) UNION ALL SELECT ALL vt0.c0, t1.c0 FROM v0, vt0 FULL OUTER JOIN t1 ON '!' GROUP BY vt0.c0, t1.c0 HAVING (NOT (((MAX(v0.c0)) NOTNULL))) UNION ALL SELECT ALL vt0.c0, t1.c0 FROM v0, vt0 FULL OUTER JOIN t1 ON '!' GROUP BY vt0.c0, t1.c0 HAVING ((((MAX(v0.c0)) NOTNULL)) ISNULL);
SELECT ALL vt0.c0, t1.c0 FROM v0, vt0 FULL OUTER JOIN t1 ON '!' GROUP BY vt0.c0, t1.c0;
SELECT * FROM v0, t1, vt0;
SELECT ALL * FROM v0, t1, vt0 WHERE (((((((((vt0.c0 COLLATE BINARY)OR(CASE WHEN t1.c0 THEN vt0.c0 END)))AND(((x'')*(NULL)))))AND(vt0.c0)))AND((vt0.c0 IN ())))) UNION ALL SELECT * FROM v0, t1, vt0 WHERE ((NOT (((((((((vt0.c0 COLLATE BINARY)OR(CASE WHEN t1.c0 THEN vt0.c0 END)))AND(((x'')*(NULL)))))AND(vt0.c0)))AND((vt0.c0 IN ())))))) UNION ALL SELECT ALL * FROM v0, t1, vt0 WHERE (((((((((((vt0.c0 COLLATE BINARY)OR(CASE WHEN t1.c0 THEN vt0.c0 END)))AND(((x'')*(NULL)))))AND(vt0.c0)))AND((vt0.c0 IN ())))) ISNULL));
SELECT * FROM v0, t1, vt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (CASE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0))  WHEN CAST(v0.c0 AS REAL) THEN CAST(v0.c0 AS REAL) WHEN MIN(v0.c0, v0.c0) THEN (- (v0.c0)) WHEN NULL THEN v0.c0 COLLATE RTRIM ELSE ((((v0.c0)AND(v0.c0)))OR(v0.c0)) END) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (CASE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0))  WHEN CAST(v0.c0 AS REAL) THEN CAST(v0.c0 AS REAL) WHEN MIN(v0.c0, v0.c0) THEN (- (v0.c0)) WHEN NULL THEN v0.c0 COLLATE RTRIM ELSE ((((v0.c0)AND(v0.c0)))OR(v0.c0)) END))) UNION SELECT DISTINCT * FROM v0 WHERE (((CASE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0))  WHEN CAST(v0.c0 AS REAL) THEN CAST(v0.c0 AS REAL) WHEN MIN(v0.c0, v0.c0) THEN (- (v0.c0)) WHEN NULL THEN v0.c0 COLLATE RTRIM ELSE ((((v0.c0)AND(v0.c0)))OR(v0.c0)) END) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (TYPEOF(DISTINCT (+ ('1357390051')))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (TYPEOF(DISTINCT (+ ('1357390051')))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((TYPEOF(DISTINCT (+ ('1357390051')))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING MIN('1357390051') UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MIN('1357390051'))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MIN('1357390051')) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING MIN('1357390051') UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MIN('1357390051'))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MIN('1357390051')) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0, t1.c0, vt0.c0 FROM t1, v0, vt0;
SELECT v0.c0, t1.c0, vt0.c0 FROM t1, v0, vt0 WHERE ((((vt0.c0 IN (vt0.c0, t1.c0)))/((NOT (vt0.c0))))) UNION ALL SELECT v0.c0, t1.c0, vt0.c0 FROM t1, v0, vt0 WHERE ((NOT ((((vt0.c0 IN (vt0.c0, t1.c0)))/((NOT (vt0.c0))))))) UNION ALL SELECT ALL v0.c0, t1.c0, vt0.c0 FROM t1, v0, vt0 WHERE ((((((vt0.c0 IN (vt0.c0, t1.c0)))/((NOT (vt0.c0))))) ISNULL));
SELECT ALL v0.c0, t1.c0, vt0.c0 FROM t1, v0, vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CASE (((vt0.c0, vt0.c0, vt0.c0, x'', vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, x'', vt0.c0, vt0.c0, vt0.c0)))  WHEN ((vt0.c0)AND(vt0.c0)) THEN ((vt0.c0)IS(vt0.c0)) WHEN ((vt0.c0)-(vt0.c0)) THEN (- (x'')) WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0)GLOB(vt0.c0)) END) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (CASE (((vt0.c0, vt0.c0, vt0.c0, x'', vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, x'', vt0.c0, vt0.c0, vt0.c0)))  WHEN ((vt0.c0)AND(vt0.c0)) THEN ((vt0.c0)IS(vt0.c0)) WHEN ((vt0.c0)-(vt0.c0)) THEN (- (x'')) WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0)GLOB(vt0.c0)) END))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CASE (((vt0.c0, vt0.c0, vt0.c0, x'', vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, x'', vt0.c0, vt0.c0, vt0.c0)))  WHEN ((vt0.c0)AND(vt0.c0)) THEN ((vt0.c0)IS(vt0.c0)) WHEN ((vt0.c0)-(vt0.c0)) THEN (- (x'')) WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0)GLOB(vt0.c0)) END) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE (CASE ((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))OR(t1.c0)))AND(t1.c0))  WHEN 0.46520081686138737 COLLATE NOCASE THEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) WHEN LENGTH(t1.c0) THEN CAST('' AS TEXT) WHEN (NOT (x'')) THEN ((((t1.c0)OR(t1.c0)))AND(t1.c0)) END) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT (CASE ((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))OR(t1.c0)))AND(t1.c0))  WHEN 0.46520081686138737 COLLATE NOCASE THEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) WHEN LENGTH(t1.c0) THEN CAST('' AS TEXT) WHEN (NOT (x'')) THEN ((((t1.c0)OR(t1.c0)))AND(t1.c0)) END))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE (((CASE ((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))OR(t1.c0)))AND(t1.c0))  WHEN 0.46520081686138737 COLLATE NOCASE THEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) WHEN LENGTH(t1.c0) THEN CAST('' AS TEXT) WHEN (NOT (x'')) THEN ((((t1.c0)OR(t1.c0)))AND(t1.c0)) END) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM vt0, t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM vt0, t1 GROUP BY t1.c0 HAVING NULL UNION ALL SELECT ALL t1.c0 FROM vt0, t1 GROUP BY t1.c0 HAVING (NOT (NULL)) UNION ALL SELECT t1.c0 FROM vt0, t1 GROUP BY t1.c0 HAVING ((NULL) ISNULL);
SELECT t1.c0 FROM vt0, t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM vt0, t1 GROUP BY t1.c0 HAVING NULL UNION ALL SELECT ALL t1.c0 FROM vt0, t1 GROUP BY t1.c0 HAVING (NOT (NULL)) UNION ALL SELECT t1.c0 FROM vt0, t1 GROUP BY t1.c0 HAVING ((NULL) ISNULL);
SELECT t1.c0 FROM vt0, t1 GROUP BY t1.c0;
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE ((- (TRIM(DISTINCT v0.c0)))) UNION ALL SELECT * FROM v0 WHERE ((NOT ((- (TRIM(DISTINCT v0.c0)))))) UNION ALL SELECT ALL * FROM v0 WHERE ((((- (TRIM(DISTINCT v0.c0)))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (CAST((v0.c0 IN (v0.c0)) AS REAL)) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (CAST((v0.c0 IN (v0.c0)) AS REAL)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((CAST((v0.c0 IN (v0.c0)) AS REAL)) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL t1.c0, v0.c0, vt0.c0 FROM vt0, t1 INNER JOIN v0 ON (((NULL))<=((((((((((v0.c0)OR(t1.c0)))OR(v0.c0)))OR(t1.c0)))AND(0.6723732582317307))))) GROUP BY t1.c0, v0.c0, vt0.c0;
SELECT ALL t1.c0, v0.c0, vt0.c0 FROM vt0, t1 INNER JOIN v0 ON (((NULL))<=((((((((((v0.c0)OR(t1.c0)))OR(v0.c0)))OR(t1.c0)))AND(0.6723732582317307))))) WHERE (vt0.c0) GROUP BY t1.c0, v0.c0, vt0.c0 UNION SELECT t1.c0, v0.c0, vt0.c0 FROM vt0, t1 INNER JOIN v0 ON (((NULL))<=((((((((((v0.c0)OR(t1.c0)))OR(v0.c0)))OR(t1.c0)))AND(0.6723732582317307))))) WHERE ((NOT (vt0.c0))) GROUP BY t1.c0, v0.c0, vt0.c0 UNION SELECT ALL t1.c0, v0.c0, vt0.c0 FROM vt0, t1 INNER JOIN v0 ON (((NULL))<=((((((((((v0.c0)OR(t1.c0)))OR(v0.c0)))OR(t1.c0)))AND(0.6723732582317307))))) WHERE (((vt0.c0) ISNULL)) GROUP BY t1.c0, v0.c0, vt0.c0;
SELECT ALL t1.c0, v0.c0, vt0.c0 FROM vt0, t1 INNER JOIN v0 ON (((NULL))<=((((((((((v0.c0)OR(t1.c0)))OR(v0.c0)))OR(t1.c0)))AND(0.6723732582317307))))) GROUP BY t1.c0, v0.c0, vt0.c0;
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (vt0.c0) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT v0.c0 FROM vt0, v0;
SELECT DISTINCT v0.c0 FROM vt0, v0 WHERE ((((vt0.c0))<=((v0.c0))) COLLATE BINARY) UNION SELECT DISTINCT v0.c0 FROM vt0, v0 WHERE ((NOT ((((vt0.c0))<=((v0.c0))) COLLATE BINARY))) UNION SELECT DISTINCT v0.c0 FROM vt0, v0 WHERE ((((((vt0.c0))<=((v0.c0))) COLLATE BINARY) ISNULL));
SELECT DISTINCT v0.c0 FROM vt0, v0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE (((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) BETWEEN (t1.c0 COLLATE NOCASE) AND (((t1.c0)IS NOT(t1.c0))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT (((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) BETWEEN (t1.c0 COLLATE NOCASE) AND (((t1.c0)IS NOT(t1.c0))))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE (((((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) BETWEEN (t1.c0 COLLATE NOCASE) AND (((t1.c0)IS NOT(t1.c0))))) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, t1, v0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, t1, v0 GROUP BY v0.c0, vt0.c0 HAVING x'' UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0, t1, v0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (x'')) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0, t1, v0 GROUP BY v0.c0, vt0.c0 HAVING ((x'') ISNULL);
SELECT ALL v0.c0, vt0.c0 FROM vt0, t1, v0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, t1, v0 GROUP BY v0.c0, vt0.c0 HAVING x'' UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0, t1, v0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (x'')) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0, t1, v0 GROUP BY v0.c0, vt0.c0 HAVING ((x'') ISNULL);
SELECT ALL v0.c0, vt0.c0 FROM vt0, t1, v0 GROUP BY v0.c0, vt0.c0;
SELECT ALL t1.c0 FROM t1;
SELECT ALL t1.c0 FROM t1 WHERE (((+ (t1.c0)) IN ((- (t1.c0)), ((t1.c0) NOT NULL)))) UNION ALL SELECT ALL t1.c0 FROM t1 WHERE ((NOT (((+ (t1.c0)) IN ((- (t1.c0)), ((t1.c0) NOT NULL)))))) UNION ALL SELECT t1.c0 FROM t1 WHERE (((((+ (t1.c0)) IN ((- (t1.c0)), ((t1.c0) NOT NULL)))) ISNULL));
SELECT ALL t1.c0 FROM t1;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (((LAST_INSERT_ROWID())/(t1.c0))) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (((LAST_INSERT_ROWID())/(t1.c0))))) UNION SELECT DISTINCT * FROM t1 WHERE (((((LAST_INSERT_ROWID())/(t1.c0))) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((- (vt0.c0)))) AND ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN (((- (vt0.c0)))) AND ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN (((- (vt0.c0)))) AND ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL t1.c0, v0.c0, vt0.c0 FROM t1 INNER JOIN vt0 ON (((vt0.c0 IN ()))<(t1.c0 COLLATE NOCASE)) RIGHT OUTER JOIN v0 ON ((((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0))) NOT BETWEEN (CASE vt0.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE t1.c0 END) AND ((~ (-168808546)))) GROUP BY t1.c0, v0.c0, vt0.c0;
SELECT t1.c0, v0.c0, vt0.c0 FROM t1 INNER JOIN vt0 ON (((vt0.c0 IN ()))<(t1.c0 COLLATE NOCASE)) RIGHT OUTER JOIN v0 ON ((((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0))) NOT BETWEEN (CASE vt0.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE t1.c0 END) AND ((~ (-168808546)))) GROUP BY t1.c0, v0.c0, vt0.c0 HAVING CASE AVG(SUM(AVG(v0.c0)))  WHEN CASE WHEN MIN(x'') THEN SUM(MAX(t1.c0)) END THEN SUM(MIN(TOTAL(vt0.c0))) ELSE (- (v0.c0)) END UNION ALL SELECT t1.c0, v0.c0, vt0.c0 FROM t1 INNER JOIN vt0 ON (((vt0.c0 IN ()))<(t1.c0 COLLATE NOCASE)) RIGHT OUTER JOIN v0 ON ((((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0))) NOT BETWEEN (CASE vt0.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE t1.c0 END) AND ((~ (-168808546)))) GROUP BY t1.c0, v0.c0, vt0.c0 HAVING (NOT (CASE AVG(SUM(AVG(v0.c0)))  WHEN CASE WHEN MIN(x'') THEN SUM(MAX(t1.c0)) END THEN SUM(MIN(TOTAL(vt0.c0))) ELSE (- (v0.c0)) END)) UNION ALL SELECT t1.c0, v0.c0, vt0.c0 FROM t1 INNER JOIN vt0 ON (((vt0.c0 IN ()))<(t1.c0 COLLATE NOCASE)) RIGHT OUTER JOIN v0 ON ((((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0))) NOT BETWEEN (CASE vt0.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE t1.c0 END) AND ((~ (-168808546)))) GROUP BY t1.c0, v0.c0, vt0.c0 HAVING ((CASE AVG(SUM(AVG(v0.c0)))  WHEN CASE WHEN MIN(x'') THEN SUM(MAX(t1.c0)) END THEN SUM(MIN(TOTAL(vt0.c0))) ELSE (- (v0.c0)) END) ISNULL);
SELECT t1.c0 FROM t1;
SELECT t1.c0 FROM t1 WHERE (((((t1.c0) BETWEEN (t1.c0) AND (t1.c0))) NOTNULL)) UNION ALL SELECT t1.c0 FROM t1 WHERE ((NOT (((((t1.c0) BETWEEN (t1.c0) AND (t1.c0))) NOTNULL)))) UNION ALL SELECT ALL t1.c0 FROM t1 WHERE (((((((t1.c0) BETWEEN (t1.c0) AND (t1.c0))) NOTNULL)) ISNULL));
SELECT t1.c0 FROM t1;
SELECT DISTINCT v0.c0 FROM vt0, v0;
SELECT DISTINCT v0.c0 FROM vt0, v0 WHERE (IFNULL(DISTINCT CAST(v0.c0 AS BLOB), x'ef1f')) UNION SELECT DISTINCT v0.c0 FROM vt0, v0 WHERE ((NOT (IFNULL(DISTINCT CAST(v0.c0 AS BLOB), x'ef1f')))) UNION SELECT DISTINCT v0.c0 FROM vt0, v0 WHERE (((IFNULL(DISTINCT CAST(v0.c0 AS BLOB), x'ef1f')) ISNULL));
SELECT DISTINCT v0.c0 FROM vt0, v0;
SELECT t1.c0, vt0.c0 FROM vt0 NOT INDEXED RIGHT OUTER JOIN t1 ON (((vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS REAL))) AND ((((x'')IS(0.6583700001003091))))) GROUP BY t1.c0, vt0.c0;
SELECT ALL t1.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN t1 ON (((vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS REAL))) AND ((((x'')IS(0.6583700001003091))))) WHERE (((((t1.c0)AND(vt0.c0)))AND(t1.c0)) COLLATE BINARY) GROUP BY t1.c0, vt0.c0 UNION SELECT ALL t1.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN t1 ON (((vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS REAL))) AND ((((x'')IS(0.6583700001003091))))) WHERE ((NOT (((((t1.c0)AND(vt0.c0)))AND(t1.c0)) COLLATE BINARY))) GROUP BY t1.c0, vt0.c0 UNION SELECT t1.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN t1 ON (((vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS REAL))) AND ((((x'')IS(0.6583700001003091))))) WHERE (((((((t1.c0)AND(vt0.c0)))AND(t1.c0)) COLLATE BINARY) ISNULL)) GROUP BY t1.c0, vt0.c0;
SELECT t1.c0, vt0.c0 FROM vt0 NOT INDEXED RIGHT OUTER JOIN t1 ON (((vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS REAL))) AND ((((x'')IS(0.6583700001003091))))) GROUP BY t1.c0, vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((vt0.c0)+(vt0.c0)))<>(((((GROUP_CONCAT(vt0.c0))OR('1796220800')))OR(SUM(AVG(TOTAL(vt0.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((((vt0.c0)+(vt0.c0)))<>(((((GROUP_CONCAT(vt0.c0))OR('1796220800')))OR(SUM(AVG(TOTAL(vt0.c0))))))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((vt0.c0)+(vt0.c0)))<>(((((GROUP_CONCAT(vt0.c0))OR('1796220800')))OR(SUM(AVG(TOTAL(vt0.c0)))))))) ISNULL);
SELECT ALL t1.c0, v0.c0, vt0.c0 FROM v0, t1 NATURAL JOIN vt0;
SELECT t1.c0, v0.c0, vt0.c0 FROM v0, t1 NOT INDEXED NATURAL JOIN vt0 WHERE (CASE (~ (t1.c0))  WHEN ((vt0.c0)&(vt0.c0)) THEN (0x46cf42ee IN (t1.c0)) END) UNION ALL SELECT ALL t1.c0, v0.c0, vt0.c0 FROM v0, t1 NATURAL JOIN vt0 WHERE ((NOT (CASE (~ (t1.c0))  WHEN ((vt0.c0)&(vt0.c0)) THEN (0x46cf42ee IN (t1.c0)) END))) UNION ALL SELECT t1.c0, v0.c0, vt0.c0 FROM v0, t1 NATURAL JOIN vt0 WHERE (((CASE (~ (t1.c0))  WHEN ((vt0.c0)&(vt0.c0)) THEN (0X46cf42ee IN (t1.c0)) END) ISNULL));
SELECT ALL t1.c0, v0.c0, vt0.c0 FROM v0, t1 NATURAL JOIN vt0;
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT ALL vt0.c0 FROM vt0, t1, v0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, t1, v0 WHERE (LOWER(((v0.c0)<<(vt0.c0)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, t1, v0 WHERE ((NOT (LOWER(((v0.c0)<<(vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, t1, v0 WHERE (((LOWER(((v0.c0)<<(vt0.c0)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, t1, v0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX((vt0.c0 IN ())) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX((vt0.c0 IN ())))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX((vt0.c0 IN ()))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX((vt0.c0 IN ())) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX((vt0.c0 IN ())))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX((vt0.c0 IN ()))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL SUM(((((NULL))<=((t1.c0))) IN ())) FROM v0, vt0, t1 ORDER BY ((t1.c0) NOTNULL) COLLATE NOCASE, (~ (((((((((((((((((v0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(v0.c0)))AND(0x618a70d0)))AND(t1.c0)))AND(v0.c0)))AND(t1.c0)))AND(vt0.c0))))  NULLS FIRST;
SELECT * FROM v0 FULL OUTER JOIN vt0 ON (((('뜩~[煉Ꜣg') BETWEEN (vt0.c0) AND (v0.c0)))*((((vt0.c0))<=((vt0.c0)))));
SELECT * FROM v0 FULL OUTER JOIN vt0 ON (((('뜩~[煉Ꜣg') BETWEEN (vt0.c0) AND (v0.c0)))*((((vt0.c0))<=((vt0.c0))))) WHERE (json_object(((x'') NOT NULL), ((((NULL)OR(vt0.c0)))OR(v0.c0)))) UNION ALL SELECT * FROM v0 FULL OUTER JOIN vt0 ON (((('뜩~[煉Ꜣg') BETWEEN (vt0.c0) AND (v0.c0)))*((((vt0.c0))<=((vt0.c0))))) WHERE ((NOT (json_object(((x'') NOT NULL), ((((NULL)OR(vt0.c0)))OR(v0.c0)))))) UNION ALL SELECT ALL * FROM v0 FULL OUTER JOIN vt0 ON (((('뜩~[煉Ꜣg') BETWEEN (vt0.c0) AND (v0.c0)))*((((vt0.c0))<=((vt0.c0))))) WHERE (((json_object(((x'') NOT NULL), ((((NULL)OR(vt0.c0)))OR(v0.c0)))) ISNULL));
SELECT DISTINCT vt0.c0, t1.c0 FROM vt0, t1;
SELECT DISTINCT vt0.c0, t1.c0 FROM vt0, t1 WHERE (vt0.c0) UNION SELECT DISTINCT vt0.c0, t1.c0 FROM vt0, t1 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.c0, t1.c0 FROM vt0, t1 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.c0, t1.c0 FROM vt0, t1;
SELECT v0.c0, t1.c0, vt0.c0 FROM vt0, v0, t1 GROUP BY v0.c0, t1.c0, vt0.c0;
SELECT ALL v0.c0, t1.c0, vt0.c0 FROM vt0, v0, t1 WHERE (((((((((((0.3246991469564914)AND(t1.c0)))AND(vt0.c0)))OR(t1.c0)))OR(t1.c0)))||(CASE WHEN v0.c0 THEN t1.c0 END))) GROUP BY v0.c0, t1.c0, vt0.c0 UNION SELECT ALL v0.c0, t1.c0, vt0.c0 FROM vt0, v0, t1 WHERE ((NOT (((((((((((0.3246991469564914)AND(t1.c0)))AND(vt0.c0)))OR(t1.c0)))OR(t1.c0)))||(CASE WHEN v0.c0 THEN t1.c0 END))))) GROUP BY v0.c0, t1.c0, vt0.c0 UNION SELECT v0.c0, t1.c0, vt0.c0 FROM vt0, v0, t1 WHERE (((((((((((((0.3246991469564914)AND(t1.c0)))AND(vt0.c0)))OR(t1.c0)))OR(t1.c0)))||(CASE WHEN v0.c0 THEN t1.c0 END))) ISNULL)) GROUP BY v0.c0, t1.c0, vt0.c0;
SELECT v0.c0, t1.c0, vt0.c0 FROM vt0, v0, t1 GROUP BY v0.c0, t1.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON (- ((- (v0.c0)))) GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON (- ((- (v0.c0)))) GROUP BY v0.c0, vt0.c0 HAVING (COUNT(COUNT(SUM(x''))) IN ()) COLLATE RTRIM UNION ALL SELECT v0.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON (- ((- (v0.c0)))) GROUP BY v0.c0, vt0.c0 HAVING (NOT ((COUNT(COUNT(SUM(x''))) IN ()) COLLATE RTRIM)) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON (- ((- (v0.c0)))) GROUP BY v0.c0, vt0.c0 HAVING (((COUNT(COUNT(SUM(x''))) IN ()) COLLATE RTRIM) ISNULL);
SELECT v0.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON (- ((- (v0.c0)))) GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON (- ((- (v0.c0)))) GROUP BY v0.c0, vt0.c0 HAVING (COUNT(COUNT(SUM(x''))) IN ()) COLLATE RTRIM UNION ALL SELECT v0.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON (- ((- (v0.c0)))) GROUP BY v0.c0, vt0.c0 HAVING (NOT ((COUNT(COUNT(SUM(x''))) IN ()) COLLATE RTRIM)) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON (- ((- (v0.c0)))) GROUP BY v0.c0, vt0.c0 HAVING (((COUNT(COUNT(SUM(x''))) IN ()) COLLATE RTRIM) ISNULL);
SELECT v0.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON (- ((- (v0.c0)))) GROUP BY v0.c0, vt0.c0;
SELECT ALL * FROM v0, t1 CROSS JOIN vt0 ON v0.c0;
SELECT * FROM v0, t1 CROSS JOIN vt0 ON v0.c0 WHERE (COALESCE((((vt0.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))), vt0.c0)) UNION ALL SELECT ALL * FROM v0, t1 CROSS JOIN vt0 ON v0.c0 WHERE ((NOT (COALESCE((((vt0.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))), vt0.c0)))) UNION ALL SELECT ALL * FROM v0, t1 CROSS JOIN vt0 ON v0.c0 WHERE (((COALESCE((((vt0.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))), vt0.c0)) ISNULL));
SELECT ALL * FROM v0, t1 CROSS JOIN vt0 ON v0.c0;
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE ((x'' COLLATE BINARY IN ())) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT ((x'' COLLATE BINARY IN ())))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((((x'' COLLATE BINARY IN ())) ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT t1.c0, vt0.c0 FROM v0, vt0, t1 GROUP BY t1.c0, vt0.c0;
SELECT t1.c0, vt0.c0 FROM v0, vt0, t1 WHERE (TIME((NOT (vt0.c0)), ((t1.c0)%(vt0.c0)), vt0.c0, ((vt0.c0) BETWEEN (t1.c0) AND (v0.c0)), CASE WHEN t1.c0 THEN v0.c0 END, v0.c0, CASE WHEN vt0.c0 THEN vt0.c0 END)) GROUP BY t1.c0, vt0.c0 UNION SELECT t1.c0, vt0.c0 FROM v0, vt0, t1 WHERE ((NOT (TIME((NOT (vt0.c0)), ((t1.c0)%(vt0.c0)), vt0.c0, ((vt0.c0) BETWEEN (t1.c0) AND (v0.c0)), CASE WHEN t1.c0 THEN v0.c0 END, v0.c0, CASE WHEN vt0.c0 THEN vt0.c0 END)))) GROUP BY t1.c0, vt0.c0 UNION SELECT ALL t1.c0, vt0.c0 FROM v0, vt0, t1 WHERE (((TIME((NOT (vt0.c0)), ((t1.c0)%(vt0.c0)), vt0.c0, ((vt0.c0) BETWEEN (t1.c0) AND (v0.c0)), CASE WHEN t1.c0 THEN v0.c0 END, v0.c0, CASE WHEN vt0.c0 THEN vt0.c0 END)) ISNULL)) GROUP BY t1.c0, vt0.c0;
SELECT t1.c0, vt0.c0 FROM v0, vt0, t1 GROUP BY t1.c0, vt0.c0;
SELECT ALL v0.c0, t1.c0 FROM v0, t1 GROUP BY v0.c0, t1.c0;
SELECT ALL v0.c0, t1.c0 FROM v0, t1 GROUP BY v0.c0, t1.c0 HAVING TOTAL(MAX(t1.c0)) UNION ALL SELECT v0.c0, t1.c0 FROM v0, t1 GROUP BY v0.c0, t1.c0 HAVING (NOT (TOTAL(MAX(t1.c0)))) UNION ALL SELECT v0.c0, t1.c0 FROM v0, t1 GROUP BY v0.c0, t1.c0 HAVING ((TOTAL(MAX(t1.c0))) ISNULL);
SELECT * FROM v0, vt0;
SELECT * FROM v0, vt0 WHERE (((vt0.c0)+((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) UNION ALL SELECT ALL * FROM v0, vt0 WHERE ((NOT (((vt0.c0)+((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))))) UNION ALL SELECT ALL * FROM v0, vt0 WHERE (((((vt0.c0)+((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ISNULL));
SELECT * FROM v0, vt0;
SELECT DISTINCT v0.c0, vt0.c0 FROM t1, v0, vt0;
SELECT DISTINCT v0.c0, vt0.c0 FROM t1, v0, vt0 WHERE (((((((t1.c0)OR(vt0.c0)))AND(vt0.c0))) IS TRUE)) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM t1, v0, vt0 WHERE ((NOT (((((((t1.c0)OR(vt0.c0)))AND(vt0.c0))) IS TRUE)))) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM t1, v0, vt0 WHERE (((((((((t1.c0)OR(vt0.c0)))AND(vt0.c0))) IS TRUE)) ISNULL));
SELECT DISTINCT v0.c0, vt0.c0 FROM t1, v0, vt0;
SELECT t1.c0, vt0.c0, v0.c0 FROM v0, t1 CROSS JOIN vt0 ON ((vt0.c0)AND(t1.c0)) COLLATE RTRIM GROUP BY t1.c0, vt0.c0, v0.c0;
SELECT t1.c0, vt0.c0, v0.c0 FROM v0, t1 CROSS JOIN vt0 ON ((vt0.c0)AND(t1.c0)) COLLATE RTRIM WHERE ((((((t1.c0) BETWEEN (vt0.c0) AND (v0.c0))))!=((vt0.c0)))) GROUP BY t1.c0, vt0.c0, v0.c0 UNION SELECT ALL t1.c0, vt0.c0, v0.c0 FROM v0, t1 CROSS JOIN vt0 ON ((vt0.c0)AND(t1.c0)) COLLATE RTRIM WHERE ((NOT ((((((t1.c0) BETWEEN (vt0.c0) AND (v0.c0))))<>((vt0.c0)))))) GROUP BY t1.c0, vt0.c0, v0.c0 UNION SELECT t1.c0, vt0.c0, v0.c0 FROM v0, t1 CROSS JOIN vt0 ON ((vt0.c0)AND(t1.c0)) COLLATE RTRIM WHERE ((((((((t1.c0) BETWEEN (vt0.c0) AND (v0.c0))))<>((vt0.c0)))) ISNULL)) GROUP BY t1.c0, vt0.c0, v0.c0;
SELECT t1.c0, vt0.c0, v0.c0 FROM v0, t1 CROSS JOIN vt0 ON ((vt0.c0)AND(t1.c0)) COLLATE RTRIM GROUP BY t1.c0, vt0.c0, v0.c0;
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING AVG(TYPEOF(MAX(vt0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0 NOT INDEXED, vt0 GROUP BY v0.c0 HAVING (NOT (AVG(TYPEOF(MAX(vt0.c0))))) UNION ALL SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING ((AVG(TYPEOF(MAX(vt0.c0)))) ISNULL);
SELECT ALL * FROM t1;
SELECT * FROM t1 WHERE (0Xffffffffa6490b10) UNION ALL SELECT ALL * FROM t1 WHERE ((NOT (0Xffffffffa6490b10))) UNION ALL SELECT * FROM t1 WHERE (((0Xffffffffa6490b10) ISNULL));
SELECT ALL * FROM t1;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CAST(CAST(vt0.c0 AS NUMERIC) AS BLOB)) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (CAST(CAST(vt0.c0 AS NUMERIC) AS BLOB)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CAST(CAST(vt0.c0 AS NUMERIC) AS BLOB)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM t1, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM t1, vt0 WHERE ((+ (UNLIKELY(DISTINCT vt0.c0)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM t1, vt0 WHERE ((NOT ((+ (UNLIKELY(DISTINCT vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM t1, vt0 WHERE ((((+ (UNLIKELY(DISTINCT vt0.c0)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t1, vt0 GROUP BY vt0.c0;
SELECT v0.c0, t1.c0, vt0.c0 FROM t1, v0 LEFT OUTER JOIN vt0 ON CASE (((v0.c0, vt0.c0, t1.c0))>=((t1.c0, t1.c0, 'A<ZS?H*-O')))  WHEN vt0.c0 COLLATE BINARY THEN CASE WHEN vt0.c0 THEN v0.c0 ELSE t1.c0 END WHEN ((vt0.c0) NOT NULL) THEN vt0.c0 WHEN ((t1.c0) NOT BETWEEN (t1.c0) AND (vt0.c0)) THEN CASE WHEN t1.c0 THEN v0.c0 END ELSE (((vt0.c0)) NOT BETWEEN ((1387177131)) AND ((v0.c0))) END GROUP BY v0.c0, t1.c0, vt0.c0;
SELECT ALL v0.c0, t1.c0, vt0.c0 FROM t1, v0 LEFT OUTER JOIN vt0 ON CASE (((v0.c0, vt0.c0, t1.c0))>=((t1.c0, t1.c0, 'A<ZS?H*-O')))  WHEN vt0.c0 COLLATE BINARY THEN CASE WHEN vt0.c0 THEN v0.c0 ELSE t1.c0 END WHEN ((vt0.c0) NOT NULL) THEN vt0.c0 WHEN ((t1.c0) NOT BETWEEN (t1.c0) AND (vt0.c0)) THEN CASE WHEN t1.c0 THEN v0.c0 END ELSE (((vt0.c0)) NOT BETWEEN ((1387177131)) AND ((v0.c0))) END GROUP BY v0.c0, t1.c0, vt0.c0 HAVING ((v0.c0)*(GROUP_CONCAT(COUNT(TOTAL(vt0.c0))))) COLLATE NOCASE UNION ALL SELECT v0.c0, t1.c0, vt0.c0 FROM t1, v0 LEFT OUTER JOIN vt0 ON CASE (((v0.c0, vt0.c0, t1.c0))>=((t1.c0, t1.c0, 'A<ZS?H*-O')))  WHEN vt0.c0 COLLATE BINARY THEN CASE WHEN vt0.c0 THEN v0.c0 ELSE t1.c0 END WHEN ((vt0.c0) NOT NULL) THEN vt0.c0 WHEN ((t1.c0) NOT BETWEEN (t1.c0) AND (vt0.c0)) THEN CASE WHEN t1.c0 THEN v0.c0 END ELSE (((vt0.c0)) NOT BETWEEN ((1387177131)) AND ((v0.c0))) END GROUP BY v0.c0, t1.c0, vt0.c0 HAVING (NOT (((v0.c0)*(GROUP_CONCAT(COUNT(TOTAL(vt0.c0))))) COLLATE NOCASE)) UNION ALL SELECT v0.c0, t1.c0, vt0.c0 FROM t1, v0 LEFT OUTER JOIN vt0 ON CASE (((v0.c0, vt0.c0, t1.c0))>=((t1.c0, t1.c0, 'A<ZS?H*-O')))  WHEN vt0.c0 COLLATE BINARY THEN CASE WHEN vt0.c0 THEN v0.c0 ELSE t1.c0 END WHEN ((vt0.c0) NOT NULL) THEN vt0.c0 WHEN ((t1.c0) NOT BETWEEN (t1.c0) AND (vt0.c0)) THEN CASE WHEN t1.c0 THEN v0.c0 END ELSE (((vt0.c0)) NOT BETWEEN ((1387177131)) AND ((v0.c0))) END GROUP BY v0.c0, t1.c0, vt0.c0 HAVING ((((v0.c0)*(GROUP_CONCAT(COUNT(TOTAL(vt0.c0))))) COLLATE NOCASE) ISNULL);
SELECT ALL t1.c0 FROM v0, vt0 CROSS JOIN t1 ON ((v0.c0 COLLATE NOCASE) BETWEEN (vt0.c0) AND (CAST(v0.c0 AS BLOB)));
SELECT ALL t1.c0 FROM v0, vt0 CROSS JOIN t1 ON ((v0.c0 COLLATE NOCASE) BETWEEN (vt0.c0) AND (CAST(v0.c0 AS BLOB))) WHERE (((TRIM(t1.c0, v0.c0))<>((((vt0.c0))<=((v0.c0)))))) UNION ALL SELECT t1.c0 FROM v0, vt0 CROSS JOIN t1 ON ((v0.c0 COLLATE NOCASE) BETWEEN (vt0.c0) AND (CAST(v0.c0 AS BLOB))) WHERE ((NOT (((TRIM(t1.c0, v0.c0))<>((((vt0.c0))<=((v0.c0)))))))) UNION ALL SELECT t1.c0 FROM v0, vt0 CROSS JOIN t1 ON ((v0.c0 COLLATE NOCASE) BETWEEN (vt0.c0) AND (CAST(v0.c0 AS BLOB))) WHERE (((((TRIM(t1.c0, v0.c0))!=((((vt0.c0))<=((v0.c0)))))) ISNULL));
SELECT ALL t1.c0 FROM v0, vt0 CROSS JOIN t1 ON ((v0.c0 COLLATE NOCASE) BETWEEN (vt0.c0) AND (CAST(v0.c0 AS BLOB)));
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (x'') UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (x''))) UNION SELECT DISTINCT * FROM v0 WHERE (((x'') ISNULL));
SELECT DISTINCT * FROM v0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (CAST((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))) AS BLOB)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CAST((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))) AS BLOB)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((CAST((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))) AS BLOB)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((vt0.c0) IS FALSE))==(vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((((vt0.c0) IS FALSE))=(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((vt0.c0) IS FALSE))==(vt0.c0))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((vt0.c0) IS FALSE))==(vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((((vt0.c0) IS FALSE))=(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((vt0.c0) IS FALSE))==(vt0.c0))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL MAX(CAST(((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)) AS BLOB)) FROM vt0, v0;
SELECT t1.c0, v0.c0 FROM vt0, v0, t1;
SELECT t1.c0, v0.c0 FROM vt0, v0, t1 WHERE (((vt0.c0)>(v0.c0)) COLLATE NOCASE) UNION ALL SELECT t1.c0, v0.c0 FROM vt0, v0 NOT INDEXED, t1 WHERE ((NOT (((vt0.c0)>(v0.c0)) COLLATE NOCASE))) UNION ALL SELECT ALL t1.c0, v0.c0 FROM vt0, v0, t1 WHERE (((((vt0.c0)>(v0.c0)) COLLATE NOCASE) ISNULL));
SELECT t1.c0, v0.c0 FROM vt0, v0, t1;
SELECT DISTINCT * FROM t1, vt0;
SELECT DISTINCT * FROM t1, vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL)) UNION SELECT DISTINCT * FROM t1, vt0 WHERE ((NOT (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL)))) UNION SELECT DISTINCT * FROM t1, vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM t1, vt0;
SELECT ALL t1.c0, v0.c0 FROM v0, t1, vt0 GROUP BY t1.c0, v0.c0;
SELECT t1.c0, v0.c0 FROM v0, t1, vt0 WHERE ((t1.c0 IN ()) COLLATE NOCASE) GROUP BY t1.c0, v0.c0 UNION SELECT ALL t1.c0, v0.c0 FROM v0, t1, vt0 WHERE ((NOT ((t1.c0 IN ()) COLLATE NOCASE))) GROUP BY t1.c0, v0.c0 UNION SELECT ALL t1.c0, v0.c0 FROM v0, t1, vt0 WHERE ((((t1.c0 IN ()) COLLATE NOCASE) ISNULL)) GROUP BY t1.c0, v0.c0;
SELECT ALL t1.c0, v0.c0 FROM v0, t1, vt0 GROUP BY t1.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0, t1.c0 FROM vt0, t1 FULL OUTER JOIN v0 ON CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE GROUP BY vt0.c0, v0.c0, t1.c0;
SELECT ALL vt0.c0, v0.c0, t1.c0 FROM vt0, t1 FULL OUTER JOIN v0 ON CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE GROUP BY vt0.c0, v0.c0, t1.c0 HAVING (((v0.c0)) NOT BETWEEN (((- (TOTAL(v0.c0))))) AND (((v0.c0 IN ())))) UNION ALL SELECT ALL vt0.c0, v0.c0, t1.c0 FROM vt0, t1 FULL OUTER JOIN v0 ON CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE GROUP BY vt0.c0, v0.c0, t1.c0 HAVING (NOT ((((v0.c0)) NOT BETWEEN (((- (TOTAL(v0.c0))))) AND (((v0.c0 IN ())))))) UNION ALL SELECT vt0.c0, v0.c0, t1.c0 FROM vt0, t1 FULL OUTER JOIN v0 ON CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE GROUP BY vt0.c0, v0.c0, t1.c0 HAVING (((((v0.c0)) NOT BETWEEN (((- (TOTAL(v0.c0))))) AND (((v0.c0 IN ()))))) ISNULL);
SELECT ALL vt0.c0, v0.c0, t1.c0 FROM vt0, t1 FULL OUTER JOIN v0 ON CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE GROUP BY vt0.c0, v0.c0, t1.c0;
SELECT ALL vt0.c0, v0.c0, t1.c0 FROM vt0, t1 FULL OUTER JOIN v0 ON CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE GROUP BY vt0.c0, v0.c0, t1.c0 HAVING (((v0.c0)) NOT BETWEEN (((- (TOTAL(v0.c0))))) AND (((v0.c0 IN ())))) UNION ALL SELECT ALL vt0.c0, v0.c0, t1.c0 FROM vt0, t1 FULL OUTER JOIN v0 ON CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE GROUP BY vt0.c0, v0.c0, t1.c0 HAVING (NOT ((((v0.c0)) NOT BETWEEN (((- (TOTAL(v0.c0))))) AND (((v0.c0 IN ())))))) UNION ALL SELECT vt0.c0, v0.c0, t1.c0 FROM vt0, t1 FULL OUTER JOIN v0 ON CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE GROUP BY vt0.c0, v0.c0, t1.c0 HAVING (((((v0.c0)) NOT BETWEEN (((- (TOTAL(v0.c0))))) AND (((v0.c0 IN ()))))) ISNULL);
SELECT ALL vt0.c0, v0.c0, t1.c0 FROM vt0, t1 FULL OUTER JOIN v0 ON CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE GROUP BY vt0.c0, v0.c0, t1.c0;
SELECT * FROM vt0, t1 INNER JOIN v0 ON ((v0.c0) BETWEEN (vt0.c0) AND (t1.c0)) COLLATE BINARY;
SELECT * FROM vt0, t1 INNER JOIN v0 ON ((v0.c0) BETWEEN (vt0.c0) AND (t1.c0)) COLLATE BINARY WHERE (((x'01d8')&(v0.c0)) COLLATE NOCASE) UNION ALL SELECT * FROM vt0, t1 INNER JOIN v0 ON ((v0.c0) BETWEEN (vt0.c0) AND (t1.c0)) COLLATE BINARY WHERE ((NOT (((x'01d8')&(v0.c0)) COLLATE NOCASE))) UNION ALL SELECT ALL * FROM vt0, t1 INNER JOIN v0 ON ((v0.c0) BETWEEN (vt0.c0) AND (t1.c0)) COLLATE BINARY WHERE (((((x'01d8')&(v0.c0)) COLLATE NOCASE) ISNULL));
SELECT * FROM vt0, t1 INNER JOIN v0 ON ((v0.c0) BETWEEN (vt0.c0) AND (t1.c0)) COLLATE BINARY;
SELECT DISTINCT * FROM vt0, t1, v0;
SELECT DISTINCT * FROM vt0, t1, v0 WHERE ((- (((vt0.c0)>>(x''))))) UNION SELECT DISTINCT * FROM vt0, t1, v0 WHERE ((NOT ((- (((vt0.c0)>>(x''))))))) UNION SELECT DISTINCT * FROM vt0, t1, v0 WHERE ((((- (((vt0.c0)>>(x''))))) ISNULL));
SELECT DISTINCT * FROM vt0, t1, v0;
SELECT ALL v0.c0 FROM v0 LEFT OUTER JOIN vt0 ON ((((((((vt0.c0)OR(v0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND('')) COLLATE NOCASE GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 LEFT OUTER JOIN vt0 ON ((((((((vt0.c0)OR(v0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND('')) COLLATE NOCASE WHERE (((v0.c0 COLLATE RTRIM) NOTNULL)) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 LEFT OUTER JOIN vt0 ON ((((((((vt0.c0)OR(v0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND('')) COLLATE NOCASE WHERE ((NOT (((v0.c0 COLLATE RTRIM) NOTNULL)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 LEFT OUTER JOIN vt0 ON ((((((((vt0.c0)OR(v0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND('')) COLLATE NOCASE WHERE (((((v0.c0 COLLATE RTRIM) NOTNULL)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 LEFT OUTER JOIN vt0 ON ((((((((vt0.c0)OR(v0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND('')) COLLATE NOCASE GROUP BY v0.c0;
SELECT ALL vt0.c0 FROM t1, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t1, vt0 GROUP BY vt0.c0 HAVING CAST(COUNT(SUM(vt0.c0)) AS INTEGER) UNION ALL SELECT ALL vt0.c0 FROM t1, vt0 GROUP BY vt0.c0 HAVING (NOT (CAST(COUNT(SUM(vt0.c0)) AS INTEGER))) UNION ALL SELECT vt0.c0 FROM t1, vt0 GROUP BY vt0.c0 HAVING ((CAST(COUNT(SUM(vt0.c0)) AS INTEGER)) ISNULL);
SELECT t1.c0 FROM vt0 INNER JOIN t1 ON CASE vt0.c0  WHEN t1.c0 THEN vt0.c0 ELSE t1.c0 END COLLATE BINARY;
SELECT t1.c0 FROM vt0 INNER JOIN t1 ON CASE vt0.c0  WHEN t1.c0 THEN vt0.c0 ELSE t1.c0 END COLLATE BINARY WHERE (((CASE WHEN t1.c0 THEN t1.c0 WHEN vt0.c0 THEN t1.c0 WHEN t1.c0 THEN vt0.c0 END)>=(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) UNION ALL SELECT ALL t1.c0 FROM vt0 INNER JOIN t1 ON CASE vt0.c0  WHEN t1.c0 THEN vt0.c0 ELSE t1.c0 END COLLATE BINARY WHERE ((NOT (((CASE WHEN t1.c0 THEN t1.c0 WHEN vt0.c0 THEN t1.c0 WHEN t1.c0 THEN vt0.c0 END)>=(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))))) UNION ALL SELECT t1.c0 FROM vt0 INNER JOIN t1 ON CASE vt0.c0  WHEN t1.c0 THEN vt0.c0 ELSE t1.c0 END COLLATE BINARY WHERE (((((CASE WHEN t1.c0 THEN t1.c0 WHEN vt0.c0 THEN t1.c0 WHEN t1.c0 THEN vt0.c0 END)>=(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) ISNULL));
SELECT t1.c0 FROM vt0 INNER JOIN t1 ON CASE vt0.c0  WHEN t1.c0 THEN vt0.c0 ELSE t1.c0 END COLLATE BINARY;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) BETWEEN (NULL) AND ((vt0.c0 IN ())))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) BETWEEN (NULL) AND ((vt0.c0 IN ())))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) BETWEEN (NULL) AND ((vt0.c0 IN ())))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE (((((t1.c0) IS FALSE)) BETWEEN (t1.c0) AND (((t1.c0)<<(0.4073137560745538))))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT (((((t1.c0) IS FALSE)) BETWEEN (t1.c0) AND (((t1.c0)<<(0.4073137560745538))))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE (((((((t1.c0) IS FALSE)) BETWEEN (t1.c0) AND (((t1.c0)<<(0.4073137560745538))))) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT vt0.c0, v0.c0 FROM vt0 INNER JOIN v0 ON v0.c0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0 INNER JOIN v0 ON v0.c0 GROUP BY vt0.c0, v0.c0 HAVING (((((vt0.c0)OR(TOTAL(SUM(v0.c0)))))AND(v0.c0)) IN ()) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0 INNER JOIN v0 ON v0.c0 GROUP BY vt0.c0, v0.c0 HAVING (NOT ((((((vt0.c0)OR(TOTAL(SUM(v0.c0)))))AND(v0.c0)) IN ()))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0 INNER JOIN v0 ON v0.c0 GROUP BY vt0.c0, v0.c0 HAVING (((((((vt0.c0)OR(TOTAL(SUM(v0.c0)))))AND(v0.c0)) IN ())) ISNULL);
SELECT vt0.c0, v0.c0 FROM vt0 INNER JOIN v0 ON v0.c0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0 INNER JOIN v0 ON v0.c0 GROUP BY vt0.c0, v0.c0 HAVING (((((vt0.c0)OR(TOTAL(SUM(v0.c0)))))AND(v0.c0)) IN ()) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0 INNER JOIN v0 ON v0.c0 GROUP BY vt0.c0, v0.c0 HAVING (NOT ((((((vt0.c0)OR(TOTAL(SUM(v0.c0)))))AND(v0.c0)) IN ()))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0 INNER JOIN v0 ON v0.c0 GROUP BY vt0.c0, v0.c0 HAVING (((((((vt0.c0)OR(TOTAL(SUM(v0.c0)))))AND(v0.c0)) IN ())) ISNULL);
SELECT vt0.c0, v0.c0 FROM vt0 INNER JOIN v0 ON v0.c0 GROUP BY vt0.c0, v0.c0;
SELECT ALL t1.c0, v0.c0 FROM t1, v0, vt0;
SELECT t1.c0, v0.c0 FROM t1, v0, vt0 WHERE ((((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND (((~ (t1.c0)))))) UNION ALL SELECT t1.c0, v0.c0 FROM t1, v0, vt0 WHERE ((NOT ((((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND (((~ (t1.c0)))))))) UNION ALL SELECT ALL t1.c0, v0.c0 FROM t1, v0, vt0 WHERE ((((((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND (((~ (t1.c0)))))) ISNULL));
SELECT ALL t1.c0, v0.c0 FROM t1, v0, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((NOT (HEX(vt0.c0)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((NOT (HEX(vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((NOT (HEX(vt0.c0)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 END)<=(((v0.c0)&(v0.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((CASE WHEN v0.c0 THEN v0.c0 END)<=(((v0.c0)&(v0.c0))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((CASE WHEN v0.c0 THEN v0.c0 END)<=(((v0.c0)&(v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(MAX(vt0.c0))) IS TRUE) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((MAX(MAX(vt0.c0))) IS TRUE))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((MAX(MAX(vt0.c0))) IS TRUE)) ISNULL);
SELECT ALL * FROM vt0 FULL OUTER JOIN t1 ON ((((vt0.c0) NOT BETWEEN (t1.c0) AND (vt0.c0))) IS FALSE);
SELECT * FROM vt0 FULL OUTER JOIN t1 ON ((((vt0.c0) NOT BETWEEN (t1.c0) AND (vt0.c0))) IS FALSE) WHERE ((t1.c0 COLLATE BINARY IN ())) UNION ALL SELECT ALL * FROM vt0 FULL OUTER JOIN t1 ON ((((vt0.c0) NOT BETWEEN (t1.c0) AND (vt0.c0))) IS FALSE) WHERE ((NOT ((t1.c0 COLLATE BINARY IN ())))) UNION ALL SELECT ALL * FROM vt0 FULL OUTER JOIN t1 ON ((((vt0.c0) NOT BETWEEN (t1.c0) AND (vt0.c0))) IS FALSE) WHERE ((((t1.c0 COLLATE BINARY IN ())) ISNULL));
SELECT ALL * FROM vt0 FULL OUTER JOIN t1 ON ((((vt0.c0) NOT BETWEEN (t1.c0) AND (vt0.c0))) IS FALSE);
SELECT DISTINCT vt0.c0 FROM vt0, t1;
SELECT DISTINCT vt0.c0 FROM vt0, t1 WHERE (CAST(((((t1.c0)AND(vt0.c0)))AND(0.37778135760707576)) AS NUMERIC)) UNION SELECT DISTINCT vt0.c0 FROM vt0, t1 WHERE ((NOT (CAST(((((t1.c0)AND(vt0.c0)))AND(0.37778135760707576)) AS NUMERIC)))) UNION SELECT DISTINCT vt0.c0 FROM vt0, t1 WHERE (((CAST(((((t1.c0)AND(vt0.c0)))AND(0.37778135760707576)) AS NUMERIC)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0, t1;
SELECT t1.c0, vt0.c0 FROM vt0 CROSS JOIN v0 ON (((vt0.c0)) NOT BETWEEN ((CASE 0.8025791745232083  WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END)) AND ((CASE vt0.c0  WHEN t1.c0 THEN t1.c0 ELSE '-333736730' END))) CROSS JOIN t1 ON vt0.c0 COLLATE NOCASE GROUP BY t1.c0, vt0.c0;
SELECT ALL t1.c0, vt0.c0 FROM vt0 CROSS JOIN v0 ON (((vt0.c0)) NOT BETWEEN ((CASE 0.8025791745232083  WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END)) AND ((CASE vt0.c0  WHEN t1.c0 THEN t1.c0 ELSE '-333736730' END))) CROSS JOIN t1 ON vt0.c0 COLLATE NOCASE WHERE (v0.c0) GROUP BY t1.c0, vt0.c0 UNION SELECT ALL t1.c0, vt0.c0 FROM vt0 CROSS JOIN v0 ON (((vt0.c0)) NOT BETWEEN ((CASE 0.8025791745232083  WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END)) AND ((CASE vt0.c0  WHEN t1.c0 THEN t1.c0 ELSE '-333736730' END))) CROSS JOIN t1 ON vt0.c0 COLLATE NOCASE WHERE ((NOT (v0.c0))) GROUP BY t1.c0, vt0.c0 UNION SELECT ALL t1.c0, vt0.c0 FROM vt0 CROSS JOIN v0 ON (((vt0.c0)) NOT BETWEEN ((CASE 0.8025791745232083  WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END)) AND ((CASE vt0.c0  WHEN t1.c0 THEN t1.c0 ELSE '-333736730' END))) CROSS JOIN t1 ON vt0.c0 COLLATE NOCASE WHERE (((v0.c0) ISNULL)) GROUP BY t1.c0, vt0.c0;
SELECT t1.c0, vt0.c0 FROM vt0 CROSS JOIN v0 ON (((vt0.c0)) NOT BETWEEN ((CASE 0.8025791745232083  WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END)) AND ((CASE vt0.c0  WHEN t1.c0 THEN t1.c0 ELSE '-333736730' END))) CROSS JOIN t1 ON vt0.c0 COLLATE NOCASE GROUP BY t1.c0, vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING SUM(GROUP_CONCAT(SUM(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (SUM(GROUP_CONCAT(SUM(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM(GROUP_CONCAT(SUM(vt0.c0)))) ISNULL);
SELECT t1.c0 FROM t1;
SELECT t1.c0 FROM t1 WHERE ((+ ((t1.c0 IN (t1.c0))))) UNION ALL SELECT t1.c0 FROM t1 WHERE ((NOT ((+ ((t1.c0 IN (t1.c0))))))) UNION ALL SELECT t1.c0 FROM t1 WHERE ((((+ ((t1.c0 IN (t1.c0))))) ISNULL));
SELECT t1.c0 FROM t1;
SELECT DISTINCT t1.c0, v0.c0 FROM t1, v0;
SELECT DISTINCT t1.c0, v0.c0 FROM t1, v0 WHERE (CAST(((t1.c0)|(v0.c0)) AS NUMERIC)) UNION SELECT DISTINCT t1.c0, v0.c0 FROM t1, v0 WHERE ((NOT (CAST(((t1.c0)|(v0.c0)) AS NUMERIC)))) UNION SELECT DISTINCT t1.c0, v0.c0 FROM t1, v0 WHERE (((CAST(((t1.c0)|(v0.c0)) AS NUMERIC)) ISNULL));
SELECT DISTINCT t1.c0, v0.c0 FROM t1, v0;
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 WHERE (MIN((NOT (x'')), ((vt0.c0)AND(v0.c0)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, v0 WHERE ((NOT (MIN((NOT (x'')), ((vt0.c0)AND(v0.c0)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, v0 WHERE (((MIN((NOT (x'')), ((vt0.c0)AND(v0.c0)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING TOTAL(SUM(v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TOTAL(SUM(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL(SUM(v0.c0))) ISNULL);
SELECT ALL v0.c0, t1.c0 FROM v0 INNER JOIN t1 ON t1.c0;
SELECT ALL v0.c0, t1.c0 FROM v0 INNER JOIN t1 ON t1.c0 WHERE ((+ (((((((((((((t1.c0)OR(v0.c0)))AND(t1.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0))))) UNION ALL SELECT ALL v0.c0, t1.c0 FROM v0 INNER JOIN t1 ON t1.c0 WHERE ((NOT ((+ (((((((((((((t1.c0)OR(v0.c0)))AND(t1.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0))))))) UNION ALL SELECT ALL v0.c0, t1.c0 FROM v0 INNER JOIN t1 ON t1.c0 WHERE ((((+ (((((((((((((t1.c0)OR(v0.c0)))AND(t1.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0))))) ISNULL));
SELECT ALL v0.c0, t1.c0 FROM v0 INNER JOIN t1 ON t1.c0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((((((v0.c0)OR(v0.c0)))AND(v0.c0)))||('sv'))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((((v0.c0)OR(v0.c0)))AND(v0.c0)))||('sv'))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))||('sv'))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((v0.c0 COLLATE BINARY)*((((NULL, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((v0.c0 COLLATE BINARY)*((((NULL, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0 COLLATE BINARY)*((((NULL, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt0.c0 FROM t1, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM t1, vt0 GROUP BY vt0.c0 HAVING (+ (((MIN(GROUP_CONCAT(COUNT(TOTAL(AVG(MIN(COUNT(*)))))))) IS FALSE))) UNION ALL SELECT ALL vt0.c0 FROM t1, vt0 GROUP BY vt0.c0 HAVING (NOT ((+ (((MIN(GROUP_CONCAT(COUNT(TOTAL(AVG(MIN(COUNT(*)))))))) IS FALSE))))) UNION ALL SELECT vt0.c0 FROM t1, vt0 GROUP BY vt0.c0 HAVING (((+ (((MIN(GROUP_CONCAT(COUNT(TOTAL(AVG(MIN(COUNT(*)))))))) IS FALSE)))) ISNULL);
SELECT t1.c0, v0.c0 FROM t1 CROSS JOIN v0 ON TYPEOF(CASE t1.c0  WHEN v0.c0 THEN v0.c0 END);
SELECT t1.c0, v0.c0 FROM t1 CROSS JOIN v0 ON TYPEOF(CASE t1.c0  WHEN v0.c0 THEN v0.c0 END) WHERE (CASE WHEN ((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(t1.c0)))OR(NULL)) THEN (+ (v0.c0)) END) UNION ALL SELECT ALL t1.c0, v0.c0 FROM t1 CROSS JOIN v0 ON TYPEOF(CASE t1.c0  WHEN v0.c0 THEN v0.c0 END) WHERE ((NOT (CASE WHEN ((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(t1.c0)))OR(NULL)) THEN (+ (v0.c0)) END))) UNION ALL SELECT ALL t1.c0, v0.c0 FROM t1 CROSS JOIN v0 ON TYPEOF(CASE t1.c0  WHEN v0.c0 THEN v0.c0 END) WHERE (((CASE WHEN ((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(t1.c0)))OR(NULL)) THEN (+ (v0.c0)) END) ISNULL));
SELECT t1.c0, v0.c0 FROM t1 CROSS JOIN v0 ON TYPEOF(CASE t1.c0  WHEN v0.c0 THEN v0.c0 END);
SELECT DISTINCT * FROM t1, v0 RIGHT OUTER JOIN vt0 ON CAST(((((((((vt0.c0)AND(v0.c0)))OR(t1.c0)))AND(vt0.c0)))OR(v0.c0)) AS TEXT);
SELECT DISTINCT * FROM t1, v0 RIGHT OUTER JOIN vt0 ON CAST(((((((((vt0.c0)AND(v0.c0)))OR(t1.c0)))AND(vt0.c0)))OR(v0.c0)) AS TEXT) WHERE (t1.c0) UNION SELECT DISTINCT * FROM t1, v0 RIGHT OUTER JOIN vt0 ON CAST(((((((((vt0.c0)AND(v0.c0)))OR(t1.c0)))AND(vt0.c0)))OR(v0.c0)) AS TEXT) WHERE ((NOT (t1.c0))) UNION SELECT DISTINCT * FROM t1, v0 RIGHT OUTER JOIN vt0 ON CAST(((((((((vt0.c0)AND(v0.c0)))OR(t1.c0)))AND(vt0.c0)))OR(v0.c0)) AS TEXT) WHERE (((t1.c0) ISNULL));
SELECT DISTINCT * FROM t1, v0 RIGHT OUTER JOIN vt0 ON CAST(((((((((vt0.c0)AND(v0.c0)))OR(t1.c0)))AND(vt0.c0)))OR(v0.c0)) AS TEXT);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (NULL) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (NULL))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((NULL) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL t1.c0, vt0.c0, v0.c0 FROM v0, vt0, t1 GROUP BY t1.c0, vt0.c0, v0.c0;
SELECT ALL t1.c0, vt0.c0, v0.c0 FROM v0, vt0, t1 GROUP BY t1.c0, vt0.c0, v0.c0 HAVING t1.c0 UNION ALL SELECT t1.c0, vt0.c0, v0.c0 FROM v0, vt0, t1 GROUP BY t1.c0, vt0.c0, v0.c0 HAVING (NOT (t1.c0)) UNION ALL SELECT ALL t1.c0, vt0.c0, v0.c0 FROM v0, vt0, t1 GROUP BY t1.c0, vt0.c0, v0.c0 HAVING ((t1.c0) ISNULL);
SELECT ALL t1.c0, vt0.c0, v0.c0 FROM v0, vt0, t1 GROUP BY t1.c0, vt0.c0, v0.c0;
SELECT ALL t1.c0, vt0.c0, v0.c0 FROM v0, vt0, t1 GROUP BY t1.c0, vt0.c0, v0.c0 HAVING t1.c0 UNION ALL SELECT t1.c0, vt0.c0, v0.c0 FROM v0, vt0, t1 GROUP BY t1.c0, vt0.c0, v0.c0 HAVING (NOT (t1.c0)) UNION ALL SELECT ALL t1.c0, vt0.c0, v0.c0 FROM v0, vt0, t1 GROUP BY t1.c0, vt0.c0, v0.c0 HAVING ((t1.c0) ISNULL);
SELECT ALL t1.c0, vt0.c0, v0.c0 FROM v0, vt0, t1 GROUP BY t1.c0, vt0.c0, v0.c0;
SELECT ALL * FROM vt0 INNER JOIN t1 ON json_array_length(((vt0.c0)>(x'')));
SELECT * FROM vt0 INNER JOIN t1 ON json_array_length(((vt0.c0)>(x''))) WHERE ((((- ('')))||(CASE t1.c0  WHEN t1.c0 THEN vt0.c0 END))) UNION ALL SELECT * FROM vt0 INNER JOIN t1 ON json_array_length(((vt0.c0)>(x''))) WHERE ((NOT ((((- ('')))||(CASE t1.c0  WHEN t1.c0 THEN vt0.c0 END))))) UNION ALL SELECT ALL * FROM vt0 INNER JOIN t1 ON json_array_length(((vt0.c0)>(x''))) WHERE ((((((- ('')))||(CASE t1.c0  WHEN t1.c0 THEN vt0.c0 END))) ISNULL));
SELECT ALL * FROM vt0 INNER JOIN t1 ON json_array_length(((vt0.c0)>(x'')));
SELECT DISTINCT * FROM vt0, t1;
SELECT DISTINCT * FROM vt0, t1 WHERE (CAST(t1.c0 COLLATE NOCASE AS REAL)) UNION SELECT DISTINCT * FROM vt0, t1 WHERE ((NOT (CAST(t1.c0 COLLATE NOCASE AS REAL)))) UNION SELECT DISTINCT * FROM vt0, t1 WHERE (((CAST(t1.c0 COLLATE NOCASE AS REAL)) ISNULL));
SELECT DISTINCT * FROM vt0, t1;
SELECT t1.c0, v0.c0, vt0.c0 FROM v0, t1, vt0 GROUP BY t1.c0, v0.c0, vt0.c0;
SELECT ALL t1.c0, v0.c0, vt0.c0 FROM v0, t1, vt0 WHERE ((- (v0.c0 COLLATE NOCASE))) GROUP BY t1.c0, v0.c0, vt0.c0 UNION SELECT t1.c0, v0.c0, vt0.c0 FROM v0, t1, vt0 WHERE ((NOT ((- (v0.c0 COLLATE NOCASE))))) GROUP BY t1.c0, v0.c0, vt0.c0 UNION SELECT t1.c0, v0.c0, vt0.c0 FROM v0, t1, vt0 WHERE ((((- (v0.c0 COLLATE NOCASE))) ISNULL)) GROUP BY t1.c0, v0.c0, vt0.c0;
SELECT t1.c0, v0.c0, vt0.c0 FROM v0, t1, vt0 GROUP BY t1.c0, v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON (((v0.c0, vt0.c0, v0.c0))>((v0.c0, vt0.c0, 'sv'))) COLLATE RTRIM GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON (((v0.c0, vt0.c0, v0.c0))>((v0.c0, vt0.c0, 'sv'))) COLLATE RTRIM GROUP BY v0.c0, vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON (((v0.c0, vt0.c0, v0.c0))>((v0.c0, vt0.c0, 'sv'))) COLLATE RTRIM GROUP BY v0.c0, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON (((v0.c0, vt0.c0, v0.c0))>((v0.c0, vt0.c0, 'sv'))) COLLATE RTRIM GROUP BY v0.c0, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0, vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON (((v0.c0, vt0.c0, v0.c0))>((v0.c0, vt0.c0, 'sv'))) COLLATE RTRIM GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON (((v0.c0, vt0.c0, v0.c0))>((v0.c0, vt0.c0, 'sv'))) COLLATE RTRIM GROUP BY v0.c0, vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON (((v0.c0, vt0.c0, v0.c0))>((v0.c0, vt0.c0, 'sv'))) COLLATE RTRIM GROUP BY v0.c0, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON (((v0.c0, vt0.c0, v0.c0))>((v0.c0, vt0.c0, 'sv'))) COLLATE RTRIM GROUP BY v0.c0, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0, vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON (((v0.c0, vt0.c0, v0.c0))>((v0.c0, vt0.c0, 'sv'))) COLLATE RTRIM GROUP BY v0.c0, vt0.c0;
SELECT ALL * FROM t1, vt0;
SELECT * FROM t1, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((COALESCE(vt0.c0, vt0.c0))) AND (((~ (t1.c0)))))) UNION ALL SELECT * FROM t1, vt0 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN ((COALESCE(vt0.c0, vt0.c0))) AND (((~ (t1.c0)))))))) UNION ALL SELECT ALL * FROM t1, vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((COALESCE(vt0.c0, vt0.c0))) AND (((~ (t1.c0)))))) ISNULL));
SELECT ALL * FROM t1, vt0;
SELECT DISTINCT vt0.c0, v0.c0, t1.c0 FROM t1, v0, vt0;
SELECT DISTINCT vt0.c0, v0.c0, t1.c0 FROM t1, v0, vt0 WHERE (json_extract(vt0.c0, t1.c0) COLLATE NOCASE) UNION SELECT DISTINCT vt0.c0, v0.c0, t1.c0 FROM t1, v0, vt0 WHERE ((NOT (json_extract(vt0.c0, t1.c0) COLLATE NOCASE))) UNION SELECT DISTINCT vt0.c0, v0.c0, t1.c0 FROM t1, v0, vt0 WHERE (((json_extract(vt0.c0, t1.c0) COLLATE NOCASE) ISNULL));
SELECT vt0.c0 FROM v0 NATURAL JOIN vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0 NATURAL JOIN vt0 WHERE (((NULL) NOTNULL)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM v0 NATURAL JOIN vt0 WHERE ((NOT (((NULL) NOTNULL)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM v0 NATURAL JOIN vt0 WHERE (((((NULL) NOTNULL)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0 NATURAL JOIN vt0 GROUP BY vt0.c0;
SELECT t1.c0 FROM vt0 LEFT OUTER JOIN t1 ON ((((((((((x'1255')<<(vt0.c0)))AND('')))OR(CASE WHEN v0.c0 THEN 'biY|g舭' END)))OR(vt0.c0 COLLATE NOCASE)))AND(v0.c0 COLLATE RTRIM)) FULL OUTER JOIN v0 ON (+ ((v0.c0 IN ()))) GROUP BY t1.c0;
SELECT * FROM vt0, t1;
SELECT ALL * FROM vt0, t1 WHERE ((((('')OR((vt0.c0 IN ('-1525501350', t1.c0, 0.9809526038929776)))))OR(((t1.c0) IS TRUE)))) UNION ALL SELECT ALL * FROM vt0, t1 WHERE ((NOT ((((('')OR((vt0.c0 IN ('-1525501350', t1.c0, 0.9809526038929776)))))OR(((t1.c0) IS TRUE)))))) UNION ALL SELECT * FROM vt0, t1 WHERE ((((((('')OR((vt0.c0 IN ('-1525501350', t1.c0, 0.9809526038929776)))))OR(((t1.c0) IS TRUE)))) ISNULL));
SELECT * FROM vt0, t1;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((((v0.c0) NOTNULL)) NOT BETWEEN (((((v0.c0)OR(v0.c0)))OR(v0.c0))) AND (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((((v0.c0) NOTNULL)) NOT BETWEEN (((((v0.c0)OR(v0.c0)))OR(v0.c0))) AND (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((v0.c0) NOTNULL)) NOT BETWEEN (((((v0.c0)OR(v0.c0)))OR(v0.c0))) AND (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((0.38178433939129564)GLOB(UNLIKELY(DISTINCT v0.c0)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((0.38178433939129564)GLOB(UNLIKELY(DISTINCT v0.c0)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((0.38178433939129564)GLOB(UNLIKELY(DISTINCT v0.c0)))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt0.c0 FROM vt0, t1, v0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, t1, v0 GROUP BY vt0.c0 HAVING GROUP_CONCAT('-2129806836') UNION ALL SELECT vt0.c0 FROM vt0, t1 NOT INDEXED, v0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT('-2129806836'))) UNION ALL SELECT ALL vt0.c0 FROM vt0, t1, v0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT('-2129806836')) ISNULL);
SELECT vt0.c0 FROM vt0, t1, v0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, t1, v0 GROUP BY vt0.c0 HAVING GROUP_CONCAT('-2129806836') UNION ALL SELECT vt0.c0 FROM vt0, t1 NOT INDEXED, v0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT('-2129806836'))) UNION ALL SELECT ALL vt0.c0 FROM vt0, t1, v0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT('-2129806836')) ISNULL);
SELECT vt0.c0 FROM vt0, t1, v0 GROUP BY vt0.c0;
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (((v0.c0) ISNULL) COLLATE RTRIM) UNION ALL SELECT * FROM v0 WHERE ((NOT (((v0.c0) ISNULL) COLLATE RTRIM))) UNION ALL SELECT * FROM v0 WHERE (((((v0.c0) ISNULL) COLLATE RTRIM) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM v0, t1, vt0;
SELECT DISTINCT * FROM v0, t1, vt0 WHERE (((((vt0.c0, 0.5821450658449006, v0.c0)) NOT BETWEEN ((v0.c0, t1.c0, vt0.c0)) AND ((vt0.c0, t1.c0, v0.c0))) IN ())) UNION SELECT DISTINCT * FROM v0, t1, vt0 WHERE ((NOT (((((vt0.c0, 0.5821450658449006, v0.c0)) NOT BETWEEN ((v0.c0, t1.c0, vt0.c0)) AND ((vt0.c0, t1.c0, v0.c0))) IN ())))) UNION SELECT DISTINCT * FROM v0, t1, vt0 WHERE (((((((vt0.c0, 0.5821450658449006, v0.c0)) NOT BETWEEN ((v0.c0, t1.c0, vt0.c0)) AND ((vt0.c0, t1.c0, v0.c0))) IN ())) ISNULL));
SELECT DISTINCT * FROM v0, t1, vt0;
SELECT v0.c0 FROM v0, t1 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, t1 WHERE ((((NULL COLLATE NOCASE))<=((((t1.c0) IS FALSE))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, t1 WHERE ((NOT ((((NULL COLLATE NOCASE))<=((((t1.c0) IS FALSE))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, t1 WHERE ((((((NULL COLLATE NOCASE))<=((((t1.c0) IS FALSE))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0, t1 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0 INNER JOIN v0 ON ((((((((((((v0.c0)OR(v0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(((v0.c0) NOT BETWEEN (v0.c0) AND ('%W')))))AND(CAST(vt0.c0 AS REAL))) GROUP BY v0.c0;
SELECT v0.c0 FROM vt0 INNER JOIN v0 ON ((((((((((((v0.c0)OR(v0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(((v0.c0) NOT BETWEEN (v0.c0) AND ('%W')))))AND(CAST(vt0.c0 AS REAL))) GROUP BY v0.c0 HAVING ((CASE WHEN GROUP_CONCAT(COUNT('-908343125')) THEN SUM(vt0.c0) WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN AVG(MIN(AVG(v0.c0))) WHEN TOTAL(v0.c0) THEN x'6a0e' END)IS(CAST(v0.c0 AS INTEGER))) UNION ALL SELECT v0.c0 FROM vt0 INNER JOIN v0 ON ((((((((((((v0.c0)OR(v0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(((v0.c0) NOT BETWEEN (v0.c0) AND ('%W')))))AND(CAST(vt0.c0 AS REAL))) GROUP BY v0.c0 HAVING (NOT (((CASE WHEN GROUP_CONCAT(COUNT('-908343125')) THEN SUM(vt0.c0) WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN AVG(MIN(AVG(v0.c0))) WHEN TOTAL(v0.c0) THEN x'6a0e' END)IS(CAST(v0.c0 AS INTEGER))))) UNION ALL SELECT ALL v0.c0 FROM vt0 INNER JOIN v0 ON ((((((((((((v0.c0)OR(v0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(((v0.c0) NOT BETWEEN (v0.c0) AND ('%W')))))AND(CAST(vt0.c0 AS REAL))) GROUP BY v0.c0 HAVING ((((CASE WHEN GROUP_CONCAT(COUNT('-908343125')) THEN SUM(vt0.c0) WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN AVG(MIN(AVG(v0.c0))) WHEN TOTAL(v0.c0) THEN x'6a0e' END)IS(CAST(v0.c0 AS INTEGER)))) ISNULL);
SELECT vt0.c0 FROM t1, vt0;
SELECT ALL vt0.c0 FROM t1, vt0 WHERE (((((((((x'4f38')OR(x'')))OR(CAST(vt0.c0 AS NUMERIC))))OR((((t1.c0, vt0.c0, vt0.c0, t1.c0, vt0.c0))<((t1.c0, vt0.c0, t1.c0, t1.c0, vt0.c0))))))AND(((((t1.c0)OR(vt0.c0)))OR(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM t1, vt0 WHERE ((NOT (((((((((x'4f38')OR(x'')))OR(CAST(vt0.c0 AS NUMERIC))))OR((((t1.c0, vt0.c0, vt0.c0, t1.c0, vt0.c0))<((t1.c0, vt0.c0, t1.c0, t1.c0, vt0.c0))))))AND(((((t1.c0)OR(vt0.c0)))OR(vt0.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM t1, vt0 WHERE (((((((((((x'4f38')OR(x'')))OR(CAST(vt0.c0 AS NUMERIC))))OR((((t1.c0, vt0.c0, vt0.c0, t1.c0, vt0.c0))<((t1.c0, vt0.c0, t1.c0, t1.c0, vt0.c0))))))AND(((((t1.c0)OR(vt0.c0)))OR(vt0.c0))))) ISNULL));
SELECT vt0.c0 FROM t1, vt0;
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE (CAST(CAST(v0.c0 AS NUMERIC) AS NUMERIC)) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT (CAST(CAST(v0.c0 AS NUMERIC) AS NUMERIC)))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE (((CAST(CAST(v0.c0 AS NUMERIC) AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE (0.7147010072688114) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT (0.7147010072688114))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE (((0.7147010072688114) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MAX(SUM(AVG(COUNT(*)))))*(TOTAL(GROUP_CONCAT(COUNT(*))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((MAX(SUM(AVG(COUNT(*)))))*(TOTAL(GROUP_CONCAT(COUNT(*))))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((MAX(SUM(AVG(COUNT(*)))))*(TOTAL(GROUP_CONCAT(COUNT(*)))))) ISNULL);
SELECT ALL * FROM t1, vt0, v0;
SELECT ALL * FROM t1, vt0, v0 WHERE (CAST(vt0.c0 AS REAL)) UNION ALL SELECT ALL * FROM t1, vt0, v0 WHERE ((NOT (CAST(vt0.c0 AS REAL)))) UNION ALL SELECT * FROM t1, vt0, v0 WHERE (((CAST(vt0.c0 AS REAL)) ISNULL));
SELECT ALL * FROM t1, vt0, v0;
SELECT DISTINCT v0.c0 FROM t1 INNER JOIN v0 ON x'';
SELECT DISTINCT v0.c0 FROM t1 INNER JOIN v0 ON x'' WHERE ((~ (1636462800))) UNION SELECT DISTINCT v0.c0 FROM t1 INNER JOIN v0 ON x'' WHERE ((NOT ((~ (1636462800))))) UNION SELECT DISTINCT v0.c0 FROM t1 INNER JOIN v0 ON x'' WHERE ((((~ (1636462800))) ISNULL));
SELECT DISTINCT v0.c0 FROM t1 INNER JOIN v0 ON x'';
SELECT ALL v0.c0, vt0.c0 FROM t1, vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM t1, vt0, v0 WHERE ((((((t1.c0, t1.c0, t1.c0))<((v0.c0, vt0.c0, v0.c0)))) BETWEEN ((('-1202307893')IS NOT(vt0.c0))) AND ((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t1.c0)))))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM t1, vt0, v0 WHERE ((NOT ((((((t1.c0, t1.c0, t1.c0))<((v0.c0, vt0.c0, v0.c0)))) BETWEEN ((('-1202307893')IS NOT(vt0.c0))) AND ((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t1.c0)))))))) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM t1, vt0, v0 WHERE ((((((((t1.c0, t1.c0, t1.c0))<((v0.c0, vt0.c0, v0.c0)))) BETWEEN ((('-1202307893')IS NOT(vt0.c0))) AND ((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t1.c0)))))) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM t1, vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((json_array_length(MIN(TOTAL(v0.c0))))AND(SUM(v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((json_array_length(MIN(TOTAL(v0.c0))))AND(SUM(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((json_array_length(MIN(TOTAL(v0.c0))))AND(SUM(v0.c0)))) ISNULL);
SELECT t1.c0, v0.c0 FROM vt0, t1, v0;
SELECT ALL t1.c0, v0.c0 FROM vt0, t1, v0 WHERE ((((('')|(v0.c0)))||(t1.c0))) UNION ALL SELECT ALL t1.c0, v0.c0 FROM vt0, t1, v0 WHERE ((NOT ((((('')|(v0.c0)))||(t1.c0))))) UNION ALL SELECT ALL t1.c0, v0.c0 FROM vt0, t1, v0 WHERE ((((((('')|(v0.c0)))||(t1.c0))) ISNULL));
SELECT t1.c0, v0.c0 FROM vt0, t1, v0;
SELECT DISTINCT vt0.c0, t1.c0 FROM t1, vt0, v0;
SELECT DISTINCT vt0.c0, t1.c0 FROM t1, vt0, v0 WHERE (((((t1.c0)>(v0.c0))) BETWEEN (((vt0.c0)<<(t1.c0))) AND (vt0.c0 COLLATE BINARY))) UNION SELECT DISTINCT vt0.c0, t1.c0 FROM t1, vt0, v0 WHERE ((NOT (((((t1.c0)>(v0.c0))) BETWEEN (((vt0.c0)<<(t1.c0))) AND (vt0.c0 COLLATE BINARY))))) UNION SELECT DISTINCT vt0.c0, t1.c0 FROM t1, vt0, v0 WHERE (((((((t1.c0)>(v0.c0))) BETWEEN (((vt0.c0)<<(t1.c0))) AND (vt0.c0 COLLATE BINARY))) ISNULL));
SELECT DISTINCT vt0.c0, t1.c0 FROM t1, vt0, v0;
SELECT ALL v0.c0, vt0.c0, t1.c0 FROM v0, vt0, t1 GROUP BY v0.c0, vt0.c0, t1.c0;
SELECT ALL v0.c0, vt0.c0, t1.c0 FROM v0, vt0, t1 WHERE (((t1.c0) NOT BETWEEN (((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0))) AND (CASE v0.c0  WHEN t1.c0 THEN t1.c0 END))) GROUP BY v0.c0, vt0.c0, t1.c0 UNION SELECT v0.c0, vt0.c0, t1.c0 FROM v0, vt0, t1 WHERE ((NOT (((t1.c0) NOT BETWEEN (((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0))) AND (CASE v0.c0  WHEN t1.c0 THEN t1.c0 END))))) GROUP BY v0.c0, vt0.c0, t1.c0 UNION SELECT v0.c0, vt0.c0, t1.c0 FROM v0, vt0, t1 WHERE (((((t1.c0) NOT BETWEEN (((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0))) AND (CASE v0.c0  WHEN t1.c0 THEN t1.c0 END))) ISNULL)) GROUP BY v0.c0, vt0.c0, t1.c0;
SELECT ALL v0.c0, vt0.c0, t1.c0 FROM v0, vt0, t1 GROUP BY v0.c0, vt0.c0, t1.c0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING CAST(DATE(v0.c0, GROUP_CONCAT(v0.c0), vt0.c0, v0.c0, v0.c0) AS REAL) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (CAST(DATE(v0.c0, GROUP_CONCAT(v0.c0), vt0.c0, v0.c0, v0.c0) AS REAL))) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING ((CAST(DATE(v0.c0, GROUP_CONCAT(v0.c0), vt0.c0, v0.c0, v0.c0) AS REAL)) ISNULL);
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING CAST(DATE(v0.c0, GROUP_CONCAT(v0.c0), vt0.c0, v0.c0, v0.c0) AS REAL) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (CAST(DATE(v0.c0, GROUP_CONCAT(v0.c0), vt0.c0, v0.c0, v0.c0) AS REAL))) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING ((CAST(DATE(v0.c0, GROUP_CONCAT(v0.c0), vt0.c0, v0.c0, v0.c0) AS REAL)) ISNULL);
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE ((((((-1.95161488E8))<=((v0.c0)))) NOTNULL)) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT ((((((-1.95161488E8))<=((v0.c0)))) NOTNULL)))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((((((((-1.95161488E8))<=((v0.c0)))) NOTNULL)) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((((v0.c0)) NOT BETWEEN (((v0.c0 IN (v0.c0)))) AND ((((v0.c0) NOT BETWEEN ('1759838136') AND (v0.c0)))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((((v0.c0)) NOT BETWEEN (((v0.c0 IN (v0.c0)))) AND ((((v0.c0) NOT BETWEEN ('1759838136') AND (v0.c0)))))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((v0.c0)) NOT BETWEEN (((v0.c0 IN (v0.c0)))) AND ((((v0.c0) NOT BETWEEN ('1759838136') AND (v0.c0)))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT v0.c0 FROM vt0, t1, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0, t1, v0 WHERE (x'') GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt0, t1, v0 WHERE ((NOT (x''))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt0, t1, v0 WHERE (((x'') ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, t1, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM t1, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM t1, v0 GROUP BY v0.c0 HAVING ((TOTAL(v0.c0))*(((t1.c0)/(GROUP_CONCAT(t1.c0))))) UNION ALL SELECT v0.c0 FROM t1, v0 GROUP BY v0.c0 HAVING (NOT (((TOTAL(v0.c0))*(((t1.c0)/(GROUP_CONCAT(t1.c0))))))) UNION ALL SELECT v0.c0 FROM t1, v0 GROUP BY v0.c0 HAVING ((((TOTAL(v0.c0))*(((t1.c0)/(GROUP_CONCAT(t1.c0)))))) ISNULL);
SELECT v0.c0 FROM t1, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM t1, v0 GROUP BY v0.c0 HAVING ((TOTAL(v0.c0))*(((t1.c0)/(GROUP_CONCAT(t1.c0))))) UNION ALL SELECT v0.c0 FROM t1, v0 GROUP BY v0.c0 HAVING (NOT (((TOTAL(v0.c0))*(((t1.c0)/(GROUP_CONCAT(t1.c0))))))) UNION ALL SELECT v0.c0 FROM t1, v0 GROUP BY v0.c0 HAVING ((((TOTAL(v0.c0))*(((t1.c0)/(GROUP_CONCAT(t1.c0)))))) ISNULL);
SELECT v0.c0 FROM t1, v0 GROUP BY v0.c0;
SELECT * FROM vt0, v0;
SELECT * FROM vt0, v0 WHERE (((((((v0.c0) NOT NULL))OR(((v0.c0) ISNULL))))AND(CASE WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END))) UNION ALL SELECT * FROM vt0, v0 WHERE ((NOT (((((((v0.c0) NOT NULL))OR(((v0.c0) ISNULL))))AND(CASE WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END))))) UNION ALL SELECT * FROM vt0, v0 WHERE (((((((((v0.c0) NOT NULL))OR(((v0.c0) ISNULL))))AND(CASE WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END))) ISNULL));
SELECT * FROM vt0, v0;
SELECT DISTINCT * FROM v0, vt0, t1;
SELECT DISTINCT * FROM v0, vt0, t1 WHERE (v0.c0) UNION SELECT DISTINCT * FROM v0, vt0, t1 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT * FROM v0, vt0, t1 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT * FROM v0, vt0, t1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((v0.c0 COLLATE RTRIM) NOTNULL)) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((v0.c0 COLLATE RTRIM) NOTNULL)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((v0.c0 COLLATE RTRIM) NOTNULL)) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING GROUP_CONCAT(TOTAL(t1.c0)) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (GROUP_CONCAT(TOTAL(t1.c0)))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((GROUP_CONCAT(TOTAL(t1.c0))) ISNULL);
SELECT vt0.c0 FROM vt0, t1;
SELECT vt0.c0 FROM vt0, t1 WHERE ((((t1.c0)GLOB(t1.c0)) IN ())) UNION ALL SELECT vt0.c0 FROM vt0, t1 WHERE ((NOT ((((t1.c0)GLOB(t1.c0)) IN ())))) UNION ALL SELECT ALL vt0.c0 FROM vt0, t1 WHERE ((((((t1.c0)GLOB(t1.c0)) IN ())) ISNULL));
SELECT vt0.c0 FROM vt0, t1;
SELECT DISTINCT t1.c0, vt0.c0 FROM vt0 INNER JOIN t1 ON CAST(((((((((((((t1.c0)OR(0.21041083121465753)))OR(t1.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(t1.c0)))OR(x'')) AS TEXT);
SELECT DISTINCT t1.c0, vt0.c0 FROM vt0 INNER JOIN t1 ON CAST(((((((((((((t1.c0)OR(0.21041083121465753)))OR(t1.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(t1.c0)))OR(x'')) AS TEXT) WHERE (((((((((t1.c0)AND(vt0.c0)))AND(t1.c0)))AND(NULL)))OR(t1.c0)) COLLATE NOCASE) UNION SELECT DISTINCT t1.c0, vt0.c0 FROM vt0 INNER JOIN t1 ON CAST(((((((((((((t1.c0)OR(0.21041083121465753)))OR(t1.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(t1.c0)))OR(x'')) AS TEXT) WHERE ((NOT (((((((((t1.c0)AND(vt0.c0)))AND(t1.c0)))AND(NULL)))OR(t1.c0)) COLLATE NOCASE))) UNION SELECT DISTINCT t1.c0, vt0.c0 FROM vt0 INNER JOIN t1 ON CAST(((((((((((((t1.c0)OR(0.21041083121465753)))OR(t1.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(t1.c0)))OR(x'')) AS TEXT) WHERE (((((((((((t1.c0)AND(vt0.c0)))AND(t1.c0)))AND(NULL)))OR(t1.c0)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT t1.c0, vt0.c0 FROM vt0 INNER JOIN t1 ON CAST(((((((((((((t1.c0)OR(0.21041083121465753)))OR(t1.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(t1.c0)))OR(x'')) AS TEXT);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((v0.c0)LIKE(((((v0.c0)OR(v0.c0)))OR(v0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((v0.c0)LIKE(((((v0.c0)OR(v0.c0)))OR(v0.c0))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0)LIKE(((((v0.c0)OR(v0.c0)))OR(v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c0, t1.c0, v0.c0 FROM t1, vt0, v0 GROUP BY vt0.c0, t1.c0, v0.c0;
SELECT vt0.c0, t1.c0, v0.c0 FROM t1, vt0, v0 GROUP BY vt0.c0, t1.c0, v0.c0 HAVING (- (CASE MAX(COUNT(x''))  WHEN vt0.c0 THEN v0.c0 WHEN t1.c0 THEN SUM(TOTAL(SUM(x'b0bc'))) WHEN MAX(COUNT(t1.c0)) THEN TOTAL(v0.c0) END)) UNION ALL SELECT ALL vt0.c0, t1.c0, v0.c0 FROM t1, vt0, v0 GROUP BY vt0.c0, t1.c0, v0.c0 HAVING (NOT ((- (CASE MAX(COUNT(x''))  WHEN vt0.c0 THEN v0.c0 WHEN t1.c0 THEN SUM(TOTAL(SUM(x'b0bc'))) WHEN MAX(COUNT(t1.c0)) THEN TOTAL(v0.c0) END)))) UNION ALL SELECT vt0.c0, t1.c0, v0.c0 FROM t1, vt0, v0 GROUP BY vt0.c0, t1.c0, v0.c0 HAVING (((- (CASE MAX(COUNT(x''))  WHEN vt0.c0 THEN v0.c0 WHEN t1.c0 THEN SUM(TOTAL(SUM(x'b0bc'))) WHEN MAX(COUNT(t1.c0)) THEN TOTAL(v0.c0) END))) ISNULL);
SELECT * FROM v0;
SELECT * FROM v0 WHERE ((((- ('-2129806836')))-(((v0.c0)+(v0.c0))))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT ((((- ('-2129806836')))-(((v0.c0)+(v0.c0))))))) UNION ALL SELECT * FROM v0 WHERE ((((((- ('-2129806836')))-(((v0.c0)+(v0.c0))))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM v0, vt0, t1;
SELECT DISTINCT * FROM v0, vt0, t1 WHERE (((((v0.c0)<>(t1.c0))) BETWEEN (((vt0.c0)<=(t1.c0))) AND ((vt0.c0 IN ())))) UNION SELECT DISTINCT * FROM v0, vt0, t1 WHERE ((NOT (((((v0.c0)<>(t1.c0))) BETWEEN (((vt0.c0)<=(t1.c0))) AND ((vt0.c0 IN ())))))) UNION SELECT DISTINCT * FROM v0, vt0, t1 WHERE (((((((v0.c0)!=(t1.c0))) BETWEEN (((vt0.c0)<=(t1.c0))) AND ((vt0.c0 IN ())))) ISNULL));
SELECT DISTINCT * FROM v0, vt0, t1;
SELECT t1.c0, vt0.c0 FROM t1 FULL OUTER JOIN vt0 ON ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((t1.c0, vt0.c0, vt0.c0)) AND ((t1.c0, t1.c0, vt0.c0))) IN ()) GROUP BY t1.c0, vt0.c0;
SELECT t1.c0, vt0.c0 FROM t1 FULL OUTER JOIN vt0 ON ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((t1.c0, vt0.c0, vt0.c0)) AND ((t1.c0, t1.c0, vt0.c0))) IN ()) WHERE (CAST(NULL AS TEXT)) GROUP BY t1.c0, vt0.c0 UNION SELECT ALL t1.c0, vt0.c0 FROM t1 FULL OUTER JOIN vt0 ON ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((t1.c0, vt0.c0, vt0.c0)) AND ((t1.c0, t1.c0, vt0.c0))) IN ()) WHERE ((NOT (CAST(NULL AS TEXT)))) GROUP BY t1.c0, vt0.c0 UNION SELECT t1.c0, vt0.c0 FROM t1 FULL OUTER JOIN vt0 ON ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((t1.c0, vt0.c0, vt0.c0)) AND ((t1.c0, t1.c0, vt0.c0))) IN ()) WHERE (((CAST(NULL AS TEXT)) ISNULL)) GROUP BY t1.c0, vt0.c0;
SELECT t1.c0, vt0.c0 FROM t1 FULL OUTER JOIN vt0 ON ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((t1.c0, vt0.c0, vt0.c0)) AND ((t1.c0, t1.c0, vt0.c0))) IN ()) GROUP BY t1.c0, vt0.c0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING GROUP_CONCAT(GROUP_CONCAT(SUM(2.054568304E9))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (GROUP_CONCAT(GROUP_CONCAT(SUM(2.054568304E9))))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING ((GROUP_CONCAT(GROUP_CONCAT(SUM(2.054568304E9)))) ISNULL);
SELECT MAX(0.08011607545819055) FROM v0 ORDER BY v0.c0 DESC  NULLS LAST, ((((v0.c0)GLOB(v0.c0))) NOT BETWEEN ((v0.c0 IN (v0.c0))) AND (((v0.c0) IS TRUE)));
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (TRIM(DISTINCT '4+i.', (vt0.c0 IN (vt0.c0, vt0.c0)))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (TRIM(DISTINCT '4+i.', (vt0.c0 IN (vt0.c0, vt0.c0)))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((TRIM(DISTINCT '4+i.', (vt0.c0 IN (vt0.c0, vt0.c0)))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, t1, v0;
SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, t1, v0 WHERE (((+ (t1.c0)) IN (vt0.c0))) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, t1, v0 WHERE ((NOT (((+ (t1.c0)) IN (vt0.c0))))) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, t1, v0 WHERE (((((+ (t1.c0)) IN (vt0.c0))) ISNULL));
SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, t1, v0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt0 WHERE (v0.c0) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, vt0 WHERE ((NOT (v0.c0))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 NOT INDEXED, vt0 WHERE (((v0.c0) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT ALL t1.c0 FROM t1, v0, vt0 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1, v0, vt0 GROUP BY t1.c0 HAVING ((((((((((((TOTAL(MAX(MAX(vt0.c0))))AND(AVG(v0.c0))))OR(COUNT(*))))AND(TOTAL(AVG(-1.95161488E8)))))AND(TOTAL(TOTAL(v0.c0)))))OR(MIN(AVG(AVG(AVG(GROUP_CONCAT(v0.c0))))))))OR(0.1456772366986986)) UNION ALL SELECT ALL t1.c0 FROM t1, v0, vt0 GROUP BY t1.c0 HAVING (NOT (((((((((((((TOTAL(MAX(MAX(vt0.c0))))AND(AVG(v0.c0))))OR(COUNT(*))))AND(TOTAL(AVG(-1.95161488E8)))))AND(TOTAL(TOTAL(v0.c0)))))OR(MIN(AVG(AVG(AVG(GROUP_CONCAT(v0.c0))))))))OR(0.1456772366986986)))) UNION ALL SELECT t1.c0 FROM t1, v0, vt0 GROUP BY t1.c0 HAVING ((((((((((((((TOTAL(MAX(MAX(vt0.c0))))AND(AVG(v0.c0))))OR(COUNT(*))))AND(TOTAL(AVG(-1.95161488E8)))))AND(TOTAL(TOTAL(v0.c0)))))OR(MIN(AVG(AVG(AVG(GROUP_CONCAT(v0.c0))))))))OR(0.1456772366986986))) ISNULL);
SELECT ALL TOTAL(((((((vt0.c0)AND(t1.c0)))OR(t1.c0)))IS((t1.c0 IN (t1.c0))))) FROM vt0, t1 ORDER BY (((((t1.c0)*(t1.c0))))<((((t1.c0) ISNULL)))) ASC, (((vt0.c0, vt0.c0, t1.c0, vt0.c0, vt0.c0)) BETWEEN ((LIKELY(vt0.c0), ((((vt0.c0)AND(t1.c0)))AND(t1.c0)), ((vt0.c0) IS TRUE), ((vt0.c0)/(vt0.c0)), CAST(0.6233270288289683 AS REAL))) AND ((((t1.c0) NOT NULL), DATETIME(t1.c0, vt0.c0, vt0.c0), (((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, t1.c0, t1.c0))), COALESCE(t1.c0, vt0.c0, vt0.c0, vt0.c0), ((vt0.c0) NOTNULL)))) ASC  NULLS FIRST;
SELECT ALL * FROM v0, vt0, t1;
SELECT ALL * FROM v0, vt0, t1 WHERE (((((vt0.c0)AND(CASE WHEN v0.c0 THEN vt0.c0 END)))OR((((vt0.c0))==((v0.c0)))))) UNION ALL SELECT ALL * FROM v0, vt0, t1 WHERE ((NOT (((((vt0.c0)AND(CASE WHEN v0.c0 THEN vt0.c0 END)))OR((((vt0.c0))=((v0.c0)))))))) UNION ALL SELECT ALL * FROM v0, vt0, t1 WHERE (((((((vt0.c0)AND(CASE WHEN v0.c0 THEN vt0.c0 END)))OR((((vt0.c0))=((v0.c0)))))) ISNULL));
SELECT ALL * FROM v0, vt0, t1;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((CAST(v0.c0 AS TEXT) IN ())) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((CAST(v0.c0 AS TEXT) IN ())))) UNION SELECT DISTINCT * FROM v0 WHERE ((((CAST(v0.c0 AS TEXT) IN ())) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL v0.c0, t1.c0 FROM v0, t1 GROUP BY v0.c0, t1.c0;
SELECT ALL v0.c0, t1.c0 FROM v0, t1 WHERE ('9223372036854775807') GROUP BY v0.c0, t1.c0 UNION SELECT v0.c0, t1.c0 FROM v0, t1 WHERE ((NOT ('9223372036854775807'))) GROUP BY v0.c0, t1.c0 UNION SELECT v0.c0, t1.c0 FROM v0, t1 WHERE ((('9223372036854775807') ISNULL)) GROUP BY v0.c0, t1.c0;
SELECT ALL v0.c0, t1.c0 FROM v0, t1 GROUP BY v0.c0, t1.c0;
SELECT ALL vt0.c0, t1.c0 FROM v0, t1, vt0 GROUP BY vt0.c0, t1.c0;
SELECT ALL vt0.c0, t1.c0 FROM v0, t1, vt0 GROUP BY vt0.c0, t1.c0 HAVING ((SUM(t1.c0)) BETWEEN (CAST(v0.c0 AS REAL)) AND ((- (v0.c0)))) UNION ALL SELECT ALL vt0.c0, t1.c0 FROM v0, t1, vt0 GROUP BY vt0.c0, t1.c0 HAVING (NOT (((SUM(t1.c0)) BETWEEN (CAST(v0.c0 AS REAL)) AND ((- (v0.c0)))))) UNION ALL SELECT ALL vt0.c0, t1.c0 FROM v0, t1, vt0 GROUP BY vt0.c0, t1.c0 HAVING ((((SUM(t1.c0)) BETWEEN (CAST(v0.c0 AS REAL)) AND ((- (v0.c0))))) ISNULL);
SELECT ALL vt0.c0, t1.c0 FROM v0, t1, vt0 GROUP BY vt0.c0, t1.c0;
SELECT ALL vt0.c0, t1.c0 FROM v0, t1, vt0 GROUP BY vt0.c0, t1.c0 HAVING ((SUM(t1.c0)) BETWEEN (CAST(v0.c0 AS REAL)) AND ((- (v0.c0)))) UNION ALL SELECT ALL vt0.c0, t1.c0 FROM v0, t1, vt0 GROUP BY vt0.c0, t1.c0 HAVING (NOT (((SUM(t1.c0)) BETWEEN (CAST(v0.c0 AS REAL)) AND ((- (v0.c0)))))) UNION ALL SELECT ALL vt0.c0, t1.c0 FROM v0, t1, vt0 GROUP BY vt0.c0, t1.c0 HAVING ((((SUM(t1.c0)) BETWEEN (CAST(v0.c0 AS REAL)) AND ((- (v0.c0))))) ISNULL);
SELECT ALL vt0.c0, t1.c0 FROM v0, t1, vt0 GROUP BY vt0.c0, t1.c0;
SELECT ALL * FROM t1, vt0 LEFT OUTER JOIN v0 ON CAST(v0.c0 COLLATE NOCASE AS TEXT);
SELECT * FROM t1, vt0 LEFT OUTER JOIN v0 ON CAST(v0.c0 COLLATE NOCASE AS TEXT) WHERE (t1.c0) UNION ALL SELECT ALL * FROM t1, vt0 LEFT OUTER JOIN v0 ON CAST(v0.c0 COLLATE NOCASE AS TEXT) WHERE ((NOT (t1.c0))) UNION ALL SELECT * FROM t1, vt0 LEFT OUTER JOIN v0 ON CAST(v0.c0 COLLATE NOCASE AS TEXT) WHERE (((t1.c0) ISNULL));
SELECT ALL * FROM t1, vt0 LEFT OUTER JOIN v0 ON CAST(v0.c0 COLLATE NOCASE AS TEXT);
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (((((0.04098053660484169) BETWEEN (t1.c0) AND (t1.c0)))OR(((((t1.c0)AND(t1.c0)))OR(t1.c0))))) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (((((0.04098053660484169) BETWEEN (t1.c0) AND (t1.c0)))OR(((((t1.c0)AND(t1.c0)))OR(t1.c0))))))) UNION SELECT DISTINCT * FROM t1 WHERE (((((((0.04098053660484169) BETWEEN (t1.c0) AND (t1.c0)))OR(((((t1.c0)AND(t1.c0)))OR(t1.c0))))) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT ALL v0.c0, vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON (((t1.c0)) BETWEEN ((v0.c0 COLLATE BINARY)) AND (((('2颬bzMI') NOT BETWEEN (t1.c0) AND (vt0.c0))))) FULL OUTER JOIN t1 ON UPPER((((vt0.c0, v0.c0, v0.c0)) NOT BETWEEN ((t1.c0, t1.c0, v0.c0)) AND ((v0.c0, v0.c0, x'')))) GROUP BY v0.c0, vt0.c0;
SELECT vt0.c0 FROM vt0, t1, v0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, t1, v0 GROUP BY vt0.c0 HAVING MAX(AVG(v0.c0)) UNION ALL SELECT vt0.c0 FROM vt0, t1, v0 GROUP BY vt0.c0 HAVING (NOT (MAX(AVG(v0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0, t1, v0 GROUP BY vt0.c0 HAVING ((MAX(AVG(v0.c0))) ISNULL);
SELECT ALL * FROM v0 INNER JOIN t1 ON (((((t1.c0)>=(v0.c0))))!=((NULL)));
SELECT * FROM v0 INNER JOIN t1 ON (((((t1.c0)>=(v0.c0))))!=((NULL))) WHERE ((((t1.c0, t1.c0, t1.c0)) NOT BETWEEN (((NOT (t1.c0)), t1.c0 COLLATE NOCASE, (NOT (v0.c0)))) AND ((CAST(t1.c0 AS INTEGER), json_object(t1.c0, t1.c0), ((v0.c0) BETWEEN (v0.c0) AND (t1.c0)))))) UNION ALL SELECT ALL * FROM v0 INNER JOIN t1 ON (((((t1.c0)>=(v0.c0))))<>((NULL))) WHERE ((NOT ((((t1.c0, t1.c0, t1.c0)) NOT BETWEEN (((NOT (t1.c0)), t1.c0 COLLATE NOCASE, (NOT (v0.c0)))) AND ((CAST(t1.c0 AS INTEGER), json_object(t1.c0, t1.c0), ((v0.c0) BETWEEN (v0.c0) AND (t1.c0)))))))) UNION ALL SELECT ALL * FROM v0 INNER JOIN t1 ON (((((t1.c0)>=(v0.c0))))<>((NULL))) WHERE ((((((t1.c0, t1.c0, t1.c0)) NOT BETWEEN (((NOT (t1.c0)), t1.c0 COLLATE NOCASE, (NOT (v0.c0)))) AND ((CAST(t1.c0 AS INTEGER), json_object(t1.c0, t1.c0), ((v0.c0) BETWEEN (v0.c0) AND (t1.c0)))))) ISNULL));
SELECT DISTINCT * FROM v0, t1 LEFT OUTER JOIN vt0 ON (((t1.c0 IN ())) BETWEEN ((vt0.c0 IN ())) AND (((((((((v0.c0)OR(v0.c0)))AND(t1.c0)))OR(v0.c0)))AND(vt0.c0))));
SELECT DISTINCT * FROM v0, t1 LEFT OUTER JOIN vt0 ON (((t1.c0 IN ())) BETWEEN ((vt0.c0 IN ())) AND (((((((((v0.c0)OR(v0.c0)))AND(t1.c0)))OR(v0.c0)))AND(vt0.c0)))) WHERE (0.32311285166124437) UNION SELECT DISTINCT * FROM v0, t1 LEFT OUTER JOIN vt0 ON (((t1.c0 IN ())) BETWEEN ((vt0.c0 IN ())) AND (((((((((v0.c0)OR(v0.c0)))AND(t1.c0)))OR(v0.c0)))AND(vt0.c0)))) WHERE ((NOT (0.32311285166124437))) UNION SELECT DISTINCT * FROM v0, t1 LEFT OUTER JOIN vt0 ON (((t1.c0 IN ())) BETWEEN ((vt0.c0 IN ())) AND (((((((((v0.c0)OR(v0.c0)))AND(t1.c0)))OR(v0.c0)))AND(vt0.c0)))) WHERE (((0.32311285166124437) ISNULL));
SELECT DISTINCT * FROM v0, t1 LEFT OUTER JOIN vt0 ON (((t1.c0 IN ())) BETWEEN ((vt0.c0 IN ())) AND (((((((((v0.c0)OR(v0.c0)))AND(t1.c0)))OR(v0.c0)))AND(vt0.c0))));
SELECT t1.c0, v0.c0 FROM t1, v0 GROUP BY t1.c0, v0.c0;
SELECT t1.c0, v0.c0 FROM t1, v0 WHERE ((v0.c0 IN ())) GROUP BY t1.c0, v0.c0 UNION SELECT ALL t1.c0, v0.c0 FROM t1, v0 WHERE ((NOT ((v0.c0 IN ())))) GROUP BY t1.c0, v0.c0 UNION SELECT ALL t1.c0, v0.c0 FROM t1, v0 WHERE ((((v0.c0 IN ())) ISNULL)) GROUP BY t1.c0, v0.c0;
SELECT t1.c0, v0.c0 FROM t1, v0 GROUP BY t1.c0, v0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX(COUNT(*)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(COUNT(*)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(COUNT(*))) ISNULL);
SELECT ALL * FROM t1, vt0;
SELECT * FROM t1, vt0 WHERE ((((+ (t1.c0))) BETWEEN ((- (t1.c0))) AND (''))) UNION ALL SELECT ALL * FROM t1, vt0 WHERE ((NOT ((((+ (t1.c0))) BETWEEN ((- (t1.c0))) AND (''))))) UNION ALL SELECT ALL * FROM t1, vt0 WHERE ((((((+ (t1.c0))) BETWEEN ((- (t1.c0))) AND (''))) ISNULL));
SELECT ALL * FROM t1, vt0;
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE (((NULL) NOT NULL)) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT (((NULL) NOT NULL)))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE (((((NULL) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT t1.c0 FROM t1, v0 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1, v0 WHERE (((((((((HEX(t1.c0))OR((- (t1.c0)))))OR(((t1.c0)AND(t1.c0)))))AND(((v0.c0) NOTNULL))))OR(((v0.c0)LIKE(t1.c0))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1, v0 WHERE ((NOT (((((((((HEX(t1.c0))OR((- (t1.c0)))))OR(((t1.c0)AND(t1.c0)))))AND(((v0.c0) NOTNULL))))OR(((v0.c0)LIKE(t1.c0))))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1, v0 WHERE (((((((((((HEX(t1.c0))OR((- (t1.c0)))))OR(((t1.c0)AND(t1.c0)))))AND(((v0.c0) NOTNULL))))OR(((v0.c0)LIKE(t1.c0))))) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1, v0 GROUP BY t1.c0;
SELECT t1.c0, v0.c0 FROM t1 NATURAL JOIN v0 GROUP BY t1.c0, v0.c0;
SELECT t1.c0, v0.c0 FROM t1 NATURAL JOIN v0 GROUP BY t1.c0, v0.c0 HAVING AVG(AVG(TOTAL(MIN(COUNT(v0.c0))))) UNION ALL SELECT ALL t1.c0, v0.c0 FROM t1 NATURAL JOIN v0 GROUP BY t1.c0, v0.c0 HAVING (NOT (AVG(AVG(TOTAL(MIN(COUNT(v0.c0))))))) UNION ALL SELECT t1.c0, v0.c0 FROM t1 NATURAL JOIN v0 GROUP BY t1.c0, v0.c0 HAVING ((AVG(AVG(TOTAL(MIN(COUNT(v0.c0)))))) ISNULL);
SELECT ALL * FROM t1, v0;
SELECT * FROM t1, v0 WHERE ((((v0.c0))!=(((t1.c0 IN ()))))) UNION ALL SELECT * FROM t1, v0 WHERE ((NOT ((((v0.c0))<>(((t1.c0 IN ()))))))) UNION ALL SELECT ALL * FROM t1, v0 WHERE ((((((v0.c0))!=(((t1.c0 IN ()))))) ISNULL));
SELECT ALL * FROM t1, v0;
SELECT DISTINCT t1.c0 FROM t1, vt0, v0;
SELECT DISTINCT t1.c0 FROM t1, vt0, v0 WHERE (((t1.c0) NOT NULL)) UNION SELECT DISTINCT t1.c0 FROM t1, vt0, v0 WHERE ((NOT (((t1.c0) NOT NULL)))) UNION SELECT DISTINCT t1.c0 FROM t1, vt0, v0 WHERE (((((t1.c0) NOT NULL)) ISNULL));
SELECT DISTINCT t1.c0 FROM t1, vt0, v0;
SELECT ALL t1.c0 FROM vt0, v0, t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM vt0, v0, t1 WHERE (CAST(LIKELIHOOD(DISTINCT v0.c0, 0.4758584137173071) AS NUMERIC)) GROUP BY t1.c0 UNION SELECT t1.c0 FROM vt0, v0, t1 WHERE ((NOT (CAST(LIKELIHOOD(DISTINCT v0.c0, 0.4758584137173071) AS NUMERIC)))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM vt0, v0, t1 WHERE (((CAST(LIKELIHOOD(DISTINCT v0.c0, 0.4758584137173071) AS NUMERIC)) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM vt0, v0, t1 GROUP BY t1.c0;
SELECT vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON x'' GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON x'' GROUP BY vt0.c0 HAVING v0.c0 UNION ALL SELECT vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON x'' GROUP BY vt0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON x'' GROUP BY vt0.c0 HAVING ((v0.c0) ISNULL);
SELECT vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON x'' GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON x'' GROUP BY vt0.c0 HAVING v0.c0 UNION ALL SELECT vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON x'' GROUP BY vt0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON x'' GROUP BY vt0.c0 HAVING ((v0.c0) ISNULL);
SELECT vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON x'' GROUP BY vt0.c0;
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE ((((((v0.c0, v0.c0, v0.c0))=((v0.c0, v0.c0, v0.c0))))&(((((((((0.21041083121465753)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0))))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT ((((((v0.c0, v0.c0, v0.c0))==((v0.c0, v0.c0, v0.c0))))&(((((((((0.21041083121465753)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0))))))) UNION ALL SELECT * FROM v0 WHERE ((((((((v0.c0, v0.c0, v0.c0))=((v0.c0, v0.c0, v0.c0))))&(((((((((0.21041083121465753)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0))))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((+ (((vt0.c0)OR(vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((+ (((vt0.c0)OR(vt0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((+ (((vt0.c0)OR(vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (CASE WHEN -1.850281744E9 THEN (vt0.c0 IN ()) WHEN (((vt0.c0))>((vt0.c0))) THEN (- (vt0.c0)) WHEN ((((vt0.c0)AND(x'')))AND(vt0.c0)) THEN CASE vt0.c0  WHEN 2105007583 THEN vt0.c0 ELSE vt0.c0 END END) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN -1.850281744E9 THEN (vt0.c0 IN ()) WHEN (((vt0.c0))>((vt0.c0))) THEN (- (vt0.c0)) WHEN ((((vt0.c0)AND(x'')))AND(vt0.c0)) THEN CASE vt0.c0  WHEN 2105007583 THEN vt0.c0 ELSE vt0.c0 END END))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((CASE WHEN -1.850281744E9 THEN (vt0.c0 IN ()) WHEN (((vt0.c0))>((vt0.c0))) THEN (- (vt0.c0)) WHEN ((((vt0.c0)AND(x'')))AND(vt0.c0)) THEN CASE vt0.c0  WHEN 2105007583 THEN vt0.c0 ELSE vt0.c0 END END) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL v0.c0, t1.c0 FROM v0, vt0, t1 GROUP BY v0.c0, t1.c0;
SELECT v0.c0, t1.c0 FROM v0, vt0, t1 GROUP BY v0.c0, t1.c0 HAVING TYPEOF(DISTINCT (((AVG(vt0.c0))) NOT BETWEEN ((MIN(TOTAL(SUM(TOTAL(t1.c0)))))) AND ((MIN(vt0.c0))))) UNION ALL SELECT ALL v0.c0, t1.c0 FROM v0, vt0, t1 GROUP BY v0.c0, t1.c0 HAVING (NOT (TYPEOF(DISTINCT (((AVG(vt0.c0))) NOT BETWEEN ((MIN(TOTAL(SUM(TOTAL(t1.c0)))))) AND ((MIN(vt0.c0))))))) UNION ALL SELECT v0.c0, t1.c0 FROM v0, vt0, t1 GROUP BY v0.c0, t1.c0 HAVING ((TYPEOF(DISTINCT (((AVG(vt0.c0))) NOT BETWEEN ((MIN(TOTAL(SUM(TOTAL(t1.c0)))))) AND ((MIN(vt0.c0)))))) ISNULL);
SELECT * FROM v0, vt0, t1;
SELECT * FROM v0, vt0, t1 WHERE (t1.c0) UNION ALL SELECT * FROM v0, vt0, t1 WHERE ((NOT (t1.c0))) UNION ALL SELECT ALL * FROM v0, vt0, t1 WHERE (((t1.c0) ISNULL));
SELECT * FROM v0, vt0, t1;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((vt0.c0 IN ())) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((vt0.c0 IN ())))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((vt0.c0 IN ())) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0, t1 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0, t1 WHERE (0.4025784043018006) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM vt0, v0, t1 WHERE ((NOT (0.4025784043018006))) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM vt0, v0, t1 WHERE (((0.4025784043018006) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0, t1 GROUP BY v0.c0, vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TOTAL(((vt0.c0)/(NULL))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(((vt0.c0)/(NULL))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(((vt0.c0)/(NULL)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TOTAL(((vt0.c0)/(NULL))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(((vt0.c0)/(NULL))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(((vt0.c0)/(NULL)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE (((v0.c0 COLLATE RTRIM) NOT BETWEEN (((v0.c0)!=(v0.c0))) AND (CASE v0.c0  WHEN -117928732 THEN v0.c0 END))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (((v0.c0 COLLATE RTRIM) NOT BETWEEN (((v0.c0)!=(v0.c0))) AND (CASE v0.c0  WHEN -117928732 THEN v0.c0 END))))) UNION ALL SELECT ALL * FROM v0 WHERE (((((v0.c0 COLLATE RTRIM) NOT BETWEEN (((v0.c0)!=(v0.c0))) AND (CASE v0.c0  WHEN -117928732 THEN v0.c0 END))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0;
SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0 WHERE (((((((((((((((vt0.c0)AND(vt0.c0)))AND(v0.c0)))OR(vt0.c0)))OR(v0.c0)))OR(vt0.c0)))AND(v0.c0)))>>((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0 WHERE ((NOT (((((((((((((((vt0.c0)AND(vt0.c0)))AND(v0.c0)))OR(vt0.c0)))OR(v0.c0)))OR(vt0.c0)))AND(v0.c0)))>>((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))))) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0 WHERE (((((((((((((((((vt0.c0)AND(vt0.c0)))AND(v0.c0)))OR(vt0.c0)))OR(v0.c0)))OR(vt0.c0)))AND(v0.c0)))>>((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ISNULL));
SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE (((((t1.c0)OR(t1.c0))) IS TRUE)) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT (((((t1.c0)OR(t1.c0))) IS TRUE)))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE (((((((t1.c0)OR(t1.c0))) IS TRUE)) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT v0.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON (((((vt0.c0 IN ()))AND((~ (v0.c0)))))OR(((((0.23491953941136356)OR(vt0.c0)))AND(v0.c0)))) GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON (((((vt0.c0 IN ()))AND((~ (v0.c0)))))OR(((((0.23491953941136356)OR(vt0.c0)))AND(v0.c0)))) GROUP BY v0.c0, vt0.c0 HAVING ((((MAX(v0.c0))OR(SUM(vt0.c0))))OR(MIN(vt0.c0))) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON (((((vt0.c0 IN ()))AND((~ (v0.c0)))))OR(((((0.23491953941136356)OR(vt0.c0)))AND(v0.c0)))) GROUP BY v0.c0, vt0.c0 HAVING (NOT (((((MAX(v0.c0))OR(SUM(vt0.c0))))OR(MIN(vt0.c0))))) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON (((((vt0.c0 IN ()))AND((~ (v0.c0)))))OR(((((0.23491953941136356)OR(vt0.c0)))AND(v0.c0)))) GROUP BY v0.c0, vt0.c0 HAVING ((((((MAX(v0.c0))OR(SUM(vt0.c0))))OR(MIN(vt0.c0)))) ISNULL);
SELECT v0.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON (((((vt0.c0 IN ()))AND((~ (v0.c0)))))OR(((((0.23491953941136356)OR(vt0.c0)))AND(v0.c0)))) GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON (((((vt0.c0 IN ()))AND((~ (v0.c0)))))OR(((((0.23491953941136356)OR(vt0.c0)))AND(v0.c0)))) GROUP BY v0.c0, vt0.c0 HAVING ((((MAX(v0.c0))OR(SUM(vt0.c0))))OR(MIN(vt0.c0))) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON (((((vt0.c0 IN ()))AND((~ (v0.c0)))))OR(((((0.23491953941136356)OR(vt0.c0)))AND(v0.c0)))) GROUP BY v0.c0, vt0.c0 HAVING (NOT (((((MAX(v0.c0))OR(SUM(vt0.c0))))OR(MIN(vt0.c0))))) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON (((((vt0.c0 IN ()))AND((~ (v0.c0)))))OR(((((0.23491953941136356)OR(vt0.c0)))AND(v0.c0)))) GROUP BY v0.c0, vt0.c0 HAVING ((((((MAX(v0.c0))OR(SUM(vt0.c0))))OR(MIN(vt0.c0)))) ISNULL);
SELECT v0.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON (((((vt0.c0 IN ()))AND((~ (v0.c0)))))OR(((((0.23491953941136356)OR(vt0.c0)))AND(v0.c0)))) GROUP BY v0.c0, vt0.c0;
SELECT * FROM v0 NATURAL JOIN t1;
SELECT * FROM v0 NATURAL JOIN t1 WHERE (t1.c0) UNION ALL SELECT * FROM v0 NATURAL JOIN t1 WHERE ((NOT (t1.c0))) UNION ALL SELECT * FROM v0 NATURAL JOIN t1 WHERE (((t1.c0) ISNULL));
SELECT * FROM v0 NATURAL JOIN t1;
SELECT DISTINCT t1.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN t1 ON ((((vt0.c0) NOT BETWEEN (t1.c0) AND (vt0.c0))) ISNULL);
SELECT DISTINCT t1.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN t1 ON ((((vt0.c0) NOT BETWEEN (t1.c0) AND (vt0.c0))) ISNULL) WHERE (vt0.c0) UNION SELECT DISTINCT t1.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN t1 ON ((((vt0.c0) NOT BETWEEN (t1.c0) AND (vt0.c0))) ISNULL) WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT t1.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN t1 ON ((((vt0.c0) NOT BETWEEN (t1.c0) AND (vt0.c0))) ISNULL) WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT t1.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN t1 ON ((((vt0.c0) NOT BETWEEN (t1.c0) AND (vt0.c0))) ISNULL);
SELECT vt0.c0, t1.c0 FROM vt0 INNER JOIN t1 ON 0.5728791134830593 GROUP BY vt0.c0, t1.c0;
SELECT ALL vt0.c0, t1.c0 FROM vt0 INNER JOIN t1 ON 0.5728791134830593 WHERE (json_object(CAST(vt0.c0 AS BLOB), CAST(t1.c0 AS TEXT))) GROUP BY vt0.c0, t1.c0 UNION SELECT ALL vt0.c0, t1.c0 FROM vt0 INNER JOIN t1 ON 0.5728791134830593 WHERE ((NOT (json_object(CAST(vt0.c0 AS BLOB), CAST(t1.c0 AS TEXT))))) GROUP BY vt0.c0, t1.c0 UNION SELECT ALL vt0.c0, t1.c0 FROM vt0 INNER JOIN t1 ON 0.5728791134830593 WHERE (((json_object(CAST(vt0.c0 AS BLOB), CAST(t1.c0 AS TEXT))) ISNULL)) GROUP BY vt0.c0, t1.c0;
SELECT t1.c0 FROM v0 INNER JOIN t1 ON (CASE v0.c0  WHEN v0.c0 THEN vt0.c0 ELSE t1.c0 END IN ()) LEFT OUTER JOIN vt0 ON CASE WHEN (vt0.c0 IN (t1.c0)) THEN CASE WHEN t1.c0 THEN t1.c0 END END GROUP BY t1.c0;
SELECT t1.c0 FROM v0 INNER JOIN t1 ON (CASE v0.c0  WHEN v0.c0 THEN vt0.c0 ELSE t1.c0 END IN ()) LEFT OUTER JOIN vt0 ON CASE WHEN (vt0.c0 IN (t1.c0)) THEN CASE WHEN t1.c0 THEN t1.c0 END END GROUP BY t1.c0 HAVING SUM(COUNT(*) COLLATE NOCASE) UNION ALL SELECT t1.c0 FROM v0 INNER JOIN t1 ON (CASE v0.c0  WHEN v0.c0 THEN vt0.c0 ELSE t1.c0 END IN ()) LEFT OUTER JOIN vt0 ON CASE WHEN (vt0.c0 IN (t1.c0)) THEN CASE WHEN t1.c0 THEN t1.c0 END END GROUP BY t1.c0 HAVING (NOT (SUM(COUNT(*) COLLATE NOCASE))) UNION ALL SELECT ALL t1.c0 FROM v0 INNER JOIN t1 ON (CASE v0.c0  WHEN v0.c0 THEN vt0.c0 ELSE t1.c0 END IN ()) LEFT OUTER JOIN vt0 ON CASE WHEN (vt0.c0 IN (t1.c0)) THEN CASE WHEN t1.c0 THEN t1.c0 END END GROUP BY t1.c0 HAVING ((SUM(COUNT(*) COLLATE NOCASE)) ISNULL);
SELECT * FROM vt0, v0, t1;
SELECT ALL * FROM vt0, v0, t1 WHERE (t1.c0) UNION ALL SELECT ALL * FROM vt0, v0, t1 WHERE ((NOT (t1.c0))) UNION ALL SELECT * FROM vt0, v0, t1 WHERE (((t1.c0) ISNULL));
SELECT * FROM vt0, v0, t1;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (CASE WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 END THEN 0x3f902ffe END) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (CASE WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 END THEN 0x3f902ffe END))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((CASE WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 END THEN 0x3f902ffe END) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((((- (v0.c0)))IS(((((v0.c0)OR(v0.c0)))OR(v0.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((- (v0.c0)))IS(((((v0.c0)OR(v0.c0)))OR(v0.c0))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((((- (v0.c0)))IS(((((v0.c0)OR(v0.c0)))OR(v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL t1.c0 FROM t1, vt0 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1, vt0 GROUP BY t1.c0 HAVING (((((NOT (t1.c0)))OR(TYPEOF(NULL))))AND((TOTAL(vt0.c0) IN (AVG(vt0.c0))))) UNION ALL SELECT t1.c0 FROM t1, vt0 GROUP BY t1.c0 HAVING (NOT ((((((NOT (t1.c0)))OR(TYPEOF(NULL))))AND((TOTAL(vt0.c0) IN (AVG(vt0.c0))))))) UNION ALL SELECT t1.c0 FROM t1, vt0 GROUP BY t1.c0 HAVING (((((((NOT (t1.c0)))OR(TYPEOF(NULL))))AND((TOTAL(vt0.c0) IN (AVG(vt0.c0)))))) ISNULL);
SELECT ALL t1.c0 FROM t1, vt0 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1, vt0 GROUP BY t1.c0 HAVING (((((NOT (t1.c0)))OR(TYPEOF(NULL))))AND((TOTAL(vt0.c0) IN (AVG(vt0.c0))))) UNION ALL SELECT t1.c0 FROM t1, vt0 GROUP BY t1.c0 HAVING (NOT ((((((NOT (t1.c0)))OR(TYPEOF(NULL))))AND((TOTAL(vt0.c0) IN (AVG(vt0.c0))))))) UNION ALL SELECT t1.c0 FROM t1, vt0 GROUP BY t1.c0 HAVING (((((((NOT (t1.c0)))OR(TYPEOF(NULL))))AND((TOTAL(vt0.c0) IN (AVG(vt0.c0)))))) ISNULL);
SELECT ALL t1.c0 FROM t1, vt0 GROUP BY t1.c0;
SELECT * FROM vt0, t1;
SELECT * FROM vt0, t1 WHERE ((IFNULL(DISTINCT t1.c0, vt0.c0) IN ())) UNION ALL SELECT ALL * FROM vt0, t1 WHERE ((NOT ((IFNULL(DISTINCT t1.c0, vt0.c0) IN ())))) UNION ALL SELECT ALL * FROM vt0, t1 WHERE ((((IFNULL(DISTINCT t1.c0, vt0.c0) IN ())) ISNULL));
SELECT * FROM vt0, t1;
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE (((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))) IN ())) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT (((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))) IN ())))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE (((((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))) IN ())) ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (v0.c0 COLLATE NOCASE) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (v0.c0 COLLATE NOCASE))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((v0.c0 COLLATE NOCASE) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING CASE ((NULL)IS(MIN(MIN(AVG(MAX(MIN(v0.c0)))))))  WHEN COUNT(*) THEN ((MAX(MAX(MIN(COUNT(*)))))%(SUM(vt0.c0))) END UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (CASE ((NULL)IS(MIN(MIN(AVG(MAX(MIN(v0.c0)))))))  WHEN COUNT(*) THEN ((MAX(MAX(MIN(COUNT(*)))))%(SUM(vt0.c0))) END)) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING ((CASE ((NULL)IS(MIN(MIN(AVG(MAX(MIN(v0.c0)))))))  WHEN COUNT(*) THEN ((MAX(MAX(MIN(COUNT(*)))))%(SUM(vt0.c0))) END) ISNULL);
SELECT * FROM v0, vt0, t1;
SELECT * FROM v0, vt0, t1 WHERE (t1.c0) UNION ALL SELECT ALL * FROM v0, vt0, t1 WHERE ((NOT (t1.c0))) UNION ALL SELECT ALL * FROM v0, vt0, t1 WHERE (((t1.c0) ISNULL));
SELECT * FROM v0, vt0, t1;
SELECT DISTINCT * FROM t1, v0;
SELECT DISTINCT * FROM t1, v0 WHERE (t1.c0) UNION SELECT DISTINCT * FROM t1, v0 WHERE ((NOT (t1.c0))) UNION SELECT DISTINCT * FROM t1, v0 WHERE (((t1.c0) ISNULL));
SELECT DISTINCT * FROM t1, v0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (CASE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((((vt0.c0)AND('-174964677')))OR(vt0.c0)) THEN (vt0.c0 IN ()) END) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CASE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((((vt0.c0)AND('-174964677')))OR(vt0.c0)) THEN (vt0.c0 IN ()) END))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((CASE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((((vt0.c0)AND('-174964677')))OR(vt0.c0)) THEN (vt0.c0 IN ()) END) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL v0.c0 FROM t1, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM t1, v0 GROUP BY v0.c0 HAVING (MIN(COUNT(t1.c0)) IN (SQLITE_COMPILEOPTION_USED(TOTAL(TOTAL(MAX(MIN(COUNT(SUM(MIN(SUM(AVG(MIN(GROUP_CONCAT(t1.c0)))))))))))))) UNION ALL SELECT v0.c0 FROM t1, v0 GROUP BY v0.c0 HAVING (NOT ((MIN(COUNT(t1.c0)) IN (SQLITE_COMPILEOPTION_USED(TOTAL(TOTAL(MAX(MIN(COUNT(SUM(MIN(SUM(AVG(MIN(GROUP_CONCAT(t1.c0)))))))))))))))) UNION ALL SELECT v0.c0 FROM t1, v0 GROUP BY v0.c0 HAVING (((MIN(COUNT(t1.c0)) IN (SQLITE_COMPILEOPTION_USED(TOTAL(TOTAL(MAX(MIN(COUNT(SUM(MIN(SUM(AVG(MIN(GROUP_CONCAT(t1.c0))))))))))))))) ISNULL);
SELECT ALL t1.c0, vt0.c0, v0.c0 FROM t1, v0 INDEXED BY i91, vt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((+ (GLOB(v0.c0, v0.c0)))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((+ (GLOB(v0.c0, v0.c0)))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((+ (GLOB(v0.c0, v0.c0)))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL vt0.c0, v0.c0, t1.c0 FROM vt0, v0, t1 GROUP BY vt0.c0, v0.c0, t1.c0;
SELECT vt0.c0, v0.c0, t1.c0 FROM vt0, v0 NOT INDEXED, t1 WHERE ((((vt0.c0, '', t1.c0)) BETWEEN ((CASE t1.c0  WHEN 0.6064957790299415 THEN v0.c0 END, CASE vt0.c0  WHEN v0.c0 THEN t1.c0 END, CASE WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END)) AND (((~ (v0.c0)), CAST(v0.c0 AS BLOB), (NULL IN ()))))) GROUP BY vt0.c0, v0.c0, t1.c0 UNION SELECT ALL vt0.c0, v0.c0, t1.c0 FROM vt0, v0, t1 WHERE ((NOT ((((vt0.c0, '', t1.c0)) BETWEEN ((CASE t1.c0  WHEN 0.6064957790299415 THEN v0.c0 END, CASE vt0.c0  WHEN v0.c0 THEN t1.c0 END, CASE WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END)) AND (((~ (v0.c0)), CAST(v0.c0 AS BLOB), (NULL IN ()))))))) GROUP BY vt0.c0, v0.c0, t1.c0 UNION SELECT vt0.c0, v0.c0, t1.c0 FROM vt0, v0, t1 WHERE ((((((vt0.c0, '', t1.c0)) BETWEEN ((CASE t1.c0  WHEN 0.6064957790299415 THEN v0.c0 END, CASE vt0.c0  WHEN v0.c0 THEN t1.c0 END, CASE WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END)) AND (((~ (v0.c0)), CAST(v0.c0 AS BLOB), (NULL IN ()))))) ISNULL)) GROUP BY vt0.c0, v0.c0, t1.c0;
SELECT ALL vt0.c0, v0.c0, t1.c0 FROM vt0, v0, t1 GROUP BY vt0.c0, v0.c0, t1.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING SUM(((v0.c0)IS(AVG(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (SUM(((v0.c0)IS(AVG(v0.c0)))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((SUM(((v0.c0)IS(AVG(v0.c0))))) ISNULL);
SELECT * FROM t1;
SELECT ALL * FROM t1 WHERE (TYPEOF(DISTINCT ((t1.c0)IS(t1.c0)))) UNION ALL SELECT * FROM t1 WHERE ((NOT (TYPEOF(DISTINCT ((t1.c0)IS(t1.c0)))))) UNION ALL SELECT ALL * FROM t1 WHERE (((TYPEOF(DISTINCT ((t1.c0)IS(t1.c0)))) ISNULL));
SELECT * FROM t1;
SELECT DISTINCT t1.c0, v0.c0 FROM v0 FULL OUTER JOIN t1 ON CAST(t1.c0 AS REAL) COLLATE NOCASE;
SELECT DISTINCT t1.c0, v0.c0 FROM v0 FULL OUTER JOIN t1 ON CAST(t1.c0 AS REAL) COLLATE NOCASE WHERE ((+ (v0.c0 COLLATE BINARY))) UNION SELECT DISTINCT t1.c0, v0.c0 FROM v0 FULL OUTER JOIN t1 ON CAST(t1.c0 AS REAL) COLLATE NOCASE WHERE ((NOT ((+ (v0.c0 COLLATE BINARY))))) UNION SELECT DISTINCT t1.c0, v0.c0 FROM v0 FULL OUTER JOIN t1 ON CAST(t1.c0 AS REAL) COLLATE NOCASE WHERE ((((+ (v0.c0 COLLATE BINARY))) ISNULL));
SELECT DISTINCT t1.c0, v0.c0 FROM v0 FULL OUTER JOIN t1 ON CAST(t1.c0 AS REAL) COLLATE NOCASE;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (CAST((((v0.c0))<=((v0.c0))) AS TEXT)) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (CAST((((v0.c0))<=((v0.c0))) AS TEXT)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((CAST((((v0.c0))<=((v0.c0))) AS TEXT)) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c0 FROM t1, vt0 INDEXED BY i34 INNER JOIN v0 ON (((v0.c0 IN ())) NOTNULL) GROUP BY vt0.c0;
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE ((v0.c0 IN ()) COLLATE NOCASE) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT ((v0.c0 IN ()) COLLATE NOCASE))) UNION ALL SELECT * FROM v0 WHERE ((((v0.c0 IN ()) COLLATE NOCASE) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT vt0.c0, t1.c0, v0.c0 FROM vt0, t1 FULL OUTER JOIN v0 ON ((((((((((v0.c0)<=(t1.c0)))AND(CAST('-2069590256' AS INTEGER))))AND((0.25913124363437345 IN (vt0.c0)))))OR(581558267)))AND((t1.c0 IN (v0.c0))));
SELECT DISTINCT vt0.c0, t1.c0, v0.c0 FROM vt0, t1 FULL OUTER JOIN v0 ON ((((((((((v0.c0)<=(t1.c0)))AND(CAST('-2069590256' AS INTEGER))))AND((0.25913124363437345 IN (vt0.c0)))))OR(581558267)))AND((t1.c0 IN (v0.c0)))) WHERE (((((x'') IS FALSE)) NOTNULL)) UNION SELECT DISTINCT vt0.c0, t1.c0, v0.c0 FROM vt0, t1 FULL OUTER JOIN v0 ON ((((((((((v0.c0)<=(t1.c0)))AND(CAST('-2069590256' AS INTEGER))))AND((0.25913124363437345 IN (vt0.c0)))))OR(581558267)))AND((t1.c0 IN (v0.c0)))) WHERE ((NOT (((((x'') IS FALSE)) NOTNULL)))) UNION SELECT DISTINCT vt0.c0, t1.c0, v0.c0 FROM vt0, t1 FULL OUTER JOIN v0 ON ((((((((((v0.c0)<=(t1.c0)))AND(CAST('-2069590256' AS INTEGER))))AND((0.25913124363437345 IN (vt0.c0)))))OR(581558267)))AND((t1.c0 IN (v0.c0)))) WHERE (((((((x'') IS FALSE)) NOTNULL)) ISNULL));
SELECT DISTINCT vt0.c0, t1.c0, v0.c0 FROM vt0, t1 FULL OUTER JOIN v0 ON ((((((((((v0.c0)<=(t1.c0)))AND(CAST('-2069590256' AS INTEGER))))AND((0.25913124363437345 IN (vt0.c0)))))OR(581558267)))AND((t1.c0 IN (v0.c0))));
SELECT t1.c0, v0.c0 FROM t1 RIGHT OUTER JOIN v0 ON ((x'7e4f') BETWEEN ((v0.c0 IN ())) AND ((((NULL)) BETWEEN ((t1.c0)) AND ((v0.c0))))) GROUP BY t1.c0, v0.c0;
SELECT ALL t1.c0, v0.c0 FROM t1 RIGHT OUTER JOIN v0 ON ((x'7e4f') BETWEEN ((v0.c0 IN ())) AND ((((NULL)) BETWEEN ((t1.c0)) AND ((v0.c0))))) WHERE (v0.c0) GROUP BY t1.c0, v0.c0 UNION SELECT t1.c0, v0.c0 FROM t1 RIGHT OUTER JOIN v0 ON ((x'7e4f') BETWEEN ((v0.c0 IN ())) AND ((((NULL)) BETWEEN ((t1.c0)) AND ((v0.c0))))) WHERE ((NOT (v0.c0))) GROUP BY t1.c0, v0.c0 UNION SELECT ALL t1.c0, v0.c0 FROM t1 RIGHT OUTER JOIN v0 ON ((x'7e4f') BETWEEN ((v0.c0 IN ())) AND ((((NULL)) BETWEEN ((t1.c0)) AND ((v0.c0))))) WHERE (((v0.c0) ISNULL)) GROUP BY t1.c0, v0.c0;
SELECT t1.c0, v0.c0 FROM t1 RIGHT OUTER JOIN v0 ON ((x'7e4f') BETWEEN ((v0.c0 IN ())) AND ((((NULL)) BETWEEN ((t1.c0)) AND ((v0.c0))))) GROUP BY t1.c0, v0.c0;
SELECT ALL v0.c0, t1.c0 FROM t1, v0 GROUP BY v0.c0, t1.c0;
SELECT ALL v0.c0, t1.c0 FROM t1, v0 GROUP BY v0.c0, t1.c0 HAVING GROUP_CONCAT(v0.c0) UNION ALL SELECT ALL v0.c0, t1.c0 FROM t1, v0 GROUP BY v0.c0, t1.c0 HAVING (NOT (GROUP_CONCAT(v0.c0))) UNION ALL SELECT ALL v0.c0, t1.c0 FROM t1, v0 GROUP BY v0.c0, t1.c0 HAVING ((GROUP_CONCAT(v0.c0)) ISNULL);
SELECT ALL v0.c0, t1.c0 FROM t1, v0 GROUP BY v0.c0, t1.c0;
SELECT ALL v0.c0, t1.c0 FROM t1, v0 GROUP BY v0.c0, t1.c0 HAVING GROUP_CONCAT(v0.c0) UNION ALL SELECT ALL v0.c0, t1.c0 FROM t1, v0 GROUP BY v0.c0, t1.c0 HAVING (NOT (GROUP_CONCAT(v0.c0))) UNION ALL SELECT ALL v0.c0, t1.c0 FROM t1, v0 GROUP BY v0.c0, t1.c0 HAVING ((GROUP_CONCAT(v0.c0)) ISNULL);
SELECT ALL v0.c0, t1.c0 FROM t1, v0 GROUP BY v0.c0, t1.c0;
SELECT * FROM v0, vt0;
SELECT * FROM v0, vt0 WHERE (((((((v0.c0, v0.c0, v0.c0, v0.c0, vt0.c0))<((v0.c0, v0.c0, vt0.c0, vt0.c0, vt0.c0))), ((vt0.c0) IS TRUE), ((x'') NOT NULL)))>=(((v0.c0 IN ()), CASE WHEN v0.c0 THEN '0\nJMU' END, ((vt0.c0) NOT NULL))))) UNION ALL SELECT * FROM v0, vt0 WHERE ((NOT (((((((v0.c0, v0.c0, v0.c0, v0.c0, vt0.c0))<((v0.c0, v0.c0, vt0.c0, vt0.c0, vt0.c0))), ((vt0.c0) IS TRUE), ((x'') NOT NULL)))>=(((v0.c0 IN ()), CASE WHEN v0.c0 THEN '0\nJMU' END, ((vt0.c0) NOT NULL))))))) UNION ALL SELECT ALL * FROM v0, vt0 WHERE (((((((((v0.c0, v0.c0, v0.c0, v0.c0, vt0.c0))<((v0.c0, v0.c0, vt0.c0, vt0.c0, vt0.c0))), ((vt0.c0) IS TRUE), ((x'') NOT NULL)))>=(((v0.c0 IN ()), CASE WHEN v0.c0 THEN '0\nJMU' END, ((vt0.c0) NOT NULL))))) ISNULL));
SELECT * FROM v0, vt0;
SELECT DISTINCT t1.c0, v0.c0 FROM v0 CROSS JOIN t1 ON (((v0.c0)) BETWEEN ((((t1.c0)<<(v0.c0)))) AND ((COALESCE(DISTINCT t1.c0, t1.c0, t1.c0, v0.c0))));
SELECT DISTINCT t1.c0, v0.c0 FROM v0 CROSS JOIN t1 ON (((v0.c0)) BETWEEN ((((t1.c0)<<(v0.c0)))) AND ((COALESCE(DISTINCT t1.c0, t1.c0, t1.c0, v0.c0)))) WHERE (((((((v0.c0) BETWEEN ('') AND (t1.c0)))AND(((((v0.c0)OR(v0.c0)))OR(v0.c0)))))OR(CAST(v0.c0 AS TEXT)))) UNION SELECT DISTINCT t1.c0, v0.c0 FROM v0 CROSS JOIN t1 ON (((v0.c0)) BETWEEN ((((t1.c0)<<(v0.c0)))) AND ((COALESCE(DISTINCT t1.c0, t1.c0, t1.c0, v0.c0)))) WHERE ((NOT (((((((v0.c0) BETWEEN ('') AND (t1.c0)))AND(((((v0.c0)OR(v0.c0)))OR(v0.c0)))))OR(CAST(v0.c0 AS TEXT)))))) UNION SELECT DISTINCT t1.c0, v0.c0 FROM v0 CROSS JOIN t1 ON (((v0.c0)) BETWEEN ((((t1.c0)<<(v0.c0)))) AND ((COALESCE(DISTINCT t1.c0, t1.c0, t1.c0, v0.c0)))) WHERE (((((((((v0.c0) BETWEEN ('') AND (t1.c0)))AND(((((v0.c0)OR(v0.c0)))OR(v0.c0)))))OR(CAST(v0.c0 AS TEXT)))) ISNULL));
SELECT DISTINCT t1.c0, v0.c0 FROM v0 CROSS JOIN t1 ON (((v0.c0)) BETWEEN ((((t1.c0)<<(v0.c0)))) AND ((COALESCE(DISTINCT t1.c0, t1.c0, t1.c0, v0.c0))));
SELECT ALL t1.c0 FROM v0, t1 INNER JOIN vt0 ON 'HI(e,)q' GROUP BY t1.c0;
SELECT ALL t1.c0 FROM v0, t1 INNER JOIN vt0 ON 'HI(e,)q' WHERE (x'89f9') GROUP BY t1.c0 UNION SELECT t1.c0 FROM v0, t1 INNER JOIN vt0 ON 'HI(e,)q' WHERE ((NOT (x'89f9'))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM v0, t1 INNER JOIN vt0 ON 'HI(e,)q' WHERE (((x'89f9') ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM v0, t1 INNER JOIN vt0 ON 'HI(e,)q' GROUP BY t1.c0;
SELECT t1.c0 FROM v0, t1 GROUP BY t1.c0;
SELECT t1.c0 FROM v0, t1 GROUP BY t1.c0 HAVING MAX(MAX(NULL)) UNION ALL SELECT ALL t1.c0 FROM v0, t1 GROUP BY t1.c0 HAVING (NOT (MAX(MAX(NULL)))) UNION ALL SELECT ALL t1.c0 FROM v0, t1 GROUP BY t1.c0 HAVING ((MAX(MAX(NULL))) ISNULL);
SELECT vt0.c0, t1.c0 FROM v0, vt0, t1;
SELECT ALL vt0.c0, t1.c0 FROM v0, vt0, t1 WHERE ((((t1.c0)%('')) IN ())) UNION ALL SELECT vt0.c0, t1.c0 FROM v0, vt0, t1 WHERE ((NOT ((((t1.c0)%('')) IN ())))) UNION ALL SELECT vt0.c0, t1.c0 FROM v0, vt0, t1 WHERE ((((((t1.c0)%('')) IN ())) ISNULL));
SELECT vt0.c0, t1.c0 FROM v0, vt0, t1;
SELECT DISTINCT v0.c0, vt0.c0 FROM t1, v0, vt0;
SELECT DISTINCT v0.c0, vt0.c0 FROM t1, v0, vt0 WHERE (((((v0.c0)>>(v0.c0)))GLOB((('1771812649')IS(v0.c0))))) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM t1, v0, vt0 WHERE ((NOT (((((v0.c0)>>(v0.c0)))GLOB((('1771812649')IS(v0.c0))))))) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM t1, v0 NOT INDEXED, vt0 WHERE (((((((v0.c0)>>(v0.c0)))GLOB((('1771812649')IS(v0.c0))))) ISNULL));
SELECT DISTINCT v0.c0, vt0.c0 FROM t1, v0, vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0)<(vt0.c0)))) AND (((((vt0.c0))>=((vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN ((((vt0.c0)<(vt0.c0)))) AND (((((vt0.c0))>=((vt0.c0))))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((((vt0.c0)<(vt0.c0)))) AND (((((vt0.c0))>=((vt0.c0))))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING ((((GROUP_CONCAT(MAX(vt0.c0)))OR(COUNT(v0.c0))))OR(('Cj' IN ()))) UNION ALL SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING (NOT (((((GROUP_CONCAT(MAX(vt0.c0)))OR(COUNT(v0.c0))))OR(('Cj' IN ()))))) UNION ALL SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING ((((((GROUP_CONCAT(MAX(vt0.c0)))OR(COUNT(v0.c0))))OR(('Cj' IN ())))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (vt0.c0 COLLATE NOCASE COLLATE RTRIM) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0 COLLATE NOCASE COLLATE RTRIM))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE COLLATE RTRIM) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CAST(HEX(DISTINCT vt0.c0) AS INTEGER)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CAST(HEX(DISTINCT vt0.c0) AS INTEGER)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CAST(HEX(DISTINCT vt0.c0) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL t1.c0, v0.c0 FROM t1, vt0, v0 GROUP BY t1.c0, v0.c0;
SELECT ALL t1.c0, v0.c0 FROM t1, vt0, v0 GROUP BY t1.c0, v0.c0 HAVING AVG(NULL) UNION ALL SELECT ALL t1.c0, v0.c0 FROM t1, vt0, v0 GROUP BY t1.c0, v0.c0 HAVING (NOT (AVG(NULL))) UNION ALL SELECT ALL t1.c0, v0.c0 FROM t1, vt0, v0 GROUP BY t1.c0, v0.c0 HAVING ((AVG(NULL)) ISNULL);
SELECT ALL t1.c0, v0.c0 FROM t1, vt0, v0 GROUP BY t1.c0, v0.c0;
SELECT ALL t1.c0, v0.c0 FROM t1, vt0, v0 GROUP BY t1.c0, v0.c0 HAVING AVG(NULL) UNION ALL SELECT ALL t1.c0, v0.c0 FROM t1, vt0, v0 GROUP BY t1.c0, v0.c0 HAVING (NOT (AVG(NULL))) UNION ALL SELECT ALL t1.c0, v0.c0 FROM t1, vt0, v0 GROUP BY t1.c0, v0.c0 HAVING ((AVG(NULL)) ISNULL);
SELECT ALL t1.c0, v0.c0 FROM t1, vt0, v0 GROUP BY t1.c0, v0.c0;
SELECT * FROM v0;
SELECT * FROM v0 WHERE ((~ (CASE v0.c0  WHEN v0.c0 THEN '' ELSE v0.c0 END))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT ((~ (CASE v0.c0  WHEN v0.c0 THEN '' ELSE v0.c0 END))))) UNION ALL SELECT * FROM v0 WHERE ((((~ (CASE v0.c0  WHEN v0.c0 THEN '' ELSE v0.c0 END))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT vt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON ((((v0.c0)*(t1.c0)))AND(((t1.c0)==(vt0.c0)))) LEFT OUTER JOIN t1 ON ((((vt0.c0) NOTNULL))>>(((v0.c0) ISNULL)));
SELECT vt0.c0 FROM v0 LEFT OUTER JOIN vt0 ON '1771812649' FULL OUTER JOIN t1 ON x'cb98' GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0 LEFT OUTER JOIN vt0 ON '1771812649' FULL OUTER JOIN t1 ON x'cb98' WHERE ((((t1.c0) BETWEEN (v0.c0) AND (vt0.c0)) IN ())) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM v0 LEFT OUTER JOIN vt0 ON '1771812649' FULL OUTER JOIN t1 ON x'cb98' WHERE ((NOT ((((t1.c0) BETWEEN (v0.c0) AND (vt0.c0)) IN ())))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM v0 LEFT OUTER JOIN vt0 ON '1771812649' FULL OUTER JOIN t1 ON x'cb98' WHERE ((((((t1.c0) BETWEEN (v0.c0) AND (vt0.c0)) IN ())) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0 LEFT OUTER JOIN vt0 ON '1771812649' FULL OUTER JOIN t1 ON x'cb98' GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((((COUNT(*))AND(-1906385037)))OR(CAST(SUM(vt0.c0) AS REAL))))AND(((MIN(GROUP_CONCAT(vt0.c0)))>>(vt0.c0)))))OR(5.84179792E8)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((((((((COUNT(*))AND(-1906385037)))OR(CAST(SUM(vt0.c0) AS REAL))))AND(((MIN(GROUP_CONCAT(vt0.c0)))>>(vt0.c0)))))OR(5.84179792E8)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((((((COUNT(*))AND(-1906385037)))OR(CAST(SUM(vt0.c0) AS REAL))))AND(((MIN(GROUP_CONCAT(vt0.c0)))>>(vt0.c0)))))OR(5.84179792E8))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (vt0.c0) UNION ALL SELECT vt0.c0 FROM vt0 NOT INDEXED WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ('t-z\n[') UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ('t-z\n['))) UNION SELECT DISTINCT * FROM v0 WHERE ((('t-z\n[') ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL v0.c0, t1.c0 FROM v0, t1 GROUP BY v0.c0, t1.c0;
SELECT ALL v0.c0, t1.c0 FROM v0, t1 WHERE ((+ (((t1.c0)|(v0.c0))))) GROUP BY v0.c0, t1.c0 UNION SELECT v0.c0, t1.c0 FROM v0, t1 WHERE ((NOT ((+ (((t1.c0)|(v0.c0))))))) GROUP BY v0.c0, t1.c0 UNION SELECT v0.c0, t1.c0 FROM v0, t1 WHERE ((((+ (((t1.c0)|(v0.c0))))) ISNULL)) GROUP BY v0.c0, t1.c0;
SELECT ALL v0.c0, t1.c0 FROM v0, t1 GROUP BY v0.c0, t1.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TOTAL(((vt0.c0) BETWEEN (GROUP_CONCAT(TOTAL(COUNT(vt0.c0)))) AND ('-1906385037'))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(((vt0.c0) BETWEEN (GROUP_CONCAT(TOTAL(COUNT(vt0.c0)))) AND ('-1906385037'))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(((vt0.c0) BETWEEN (GROUP_CONCAT(TOTAL(COUNT(vt0.c0)))) AND ('-1906385037')))) ISNULL);
SELECT * FROM t1;
SELECT * FROM t1 WHERE ('7j1Y') UNION ALL SELECT ALL * FROM t1 WHERE ((NOT ('7j1Y'))) UNION ALL SELECT * FROM t1 WHERE ((('7j1Y') ISNULL));
SELECT * FROM t1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((~ (vt0.c0)))<<(vt0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((~ (vt0.c0)))<<(vt0.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((~ (vt0.c0)))<<(vt0.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT t1.c0 FROM t1, vt0 NOT INDEXED GROUP BY t1.c0;
SELECT t1.c0 FROM t1, vt0 WHERE ((NOT (CAST(vt0.c0 AS INTEGER)))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1, vt0 WHERE ((NOT ((NOT (CAST(vt0.c0 AS INTEGER)))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1, vt0 WHERE ((((NOT (CAST(vt0.c0 AS INTEGER)))) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1, vt0 NOT INDEXED GROUP BY t1.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING AVG((~ (NULL))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (AVG((~ (NULL))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((AVG((~ (NULL)))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING AVG((~ (NULL))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (AVG((~ (NULL))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((AVG((~ (NULL)))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (((0.19513614430736004)GLOB('352333430'))) UNION ALL SELECT * FROM v0 WHERE ((NOT (((0.19513614430736004)GLOB('352333430'))))) UNION ALL SELECT * FROM v0 WHERE (((((0.19513614430736004)GLOB('352333430'))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM v0, t1, vt0;
SELECT DISTINCT * FROM v0, t1, vt0 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM v0, t1, vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM v0, t1, vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM v0, t1, vt0;
SELECT v0.c0, t1.c0, vt0.c0 FROM vt0, t1, v0 GROUP BY v0.c0, t1.c0, vt0.c0;
SELECT v0.c0, t1.c0, vt0.c0 FROM vt0, t1, v0 WHERE ((((t1.c0)) BETWEEN ((((vt0.c0)<=(vt0.c0)))) AND (('1315416908')))) GROUP BY v0.c0, t1.c0, vt0.c0 UNION SELECT v0.c0, t1.c0, vt0.c0 FROM vt0, t1, v0 WHERE ((NOT ((((t1.c0)) BETWEEN ((((vt0.c0)<=(vt0.c0)))) AND (('1315416908')))))) GROUP BY v0.c0, t1.c0, vt0.c0 UNION SELECT v0.c0, t1.c0, vt0.c0 FROM vt0, t1, v0 WHERE ((((((t1.c0)) BETWEEN ((((vt0.c0)<=(vt0.c0)))) AND (('1315416908')))) ISNULL)) GROUP BY v0.c0, t1.c0, vt0.c0;
SELECT v0.c0, t1.c0, vt0.c0 FROM vt0, t1, v0 GROUP BY v0.c0, t1.c0, vt0.c0;
SELECT v0.c0, t1.c0 FROM t1, v0 GROUP BY v0.c0, t1.c0;
SELECT ALL v0.c0, t1.c0 FROM t1, v0 GROUP BY v0.c0, t1.c0 HAVING CASE MIN('O7Ys7ZU%l') COLLATE NOCASE  WHEN CAST(v0.c0 AS REAL) THEN t1.c0 COLLATE RTRIM ELSE MAX(MAX(t1.c0)) END UNION ALL SELECT v0.c0, t1.c0 FROM t1, v0 GROUP BY v0.c0, t1.c0 HAVING (NOT (CASE MIN('O7Ys7ZU%l') COLLATE NOCASE  WHEN CAST(v0.c0 AS REAL) THEN t1.c0 COLLATE RTRIM ELSE MAX(MAX(t1.c0)) END)) UNION ALL SELECT v0.c0, t1.c0 FROM t1, v0 GROUP BY v0.c0, t1.c0 HAVING ((CASE MIN('O7Ys7ZU%l') COLLATE NOCASE  WHEN CAST(v0.c0 AS REAL) THEN t1.c0 COLLATE RTRIM ELSE MAX(MAX(t1.c0)) END) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) IN ())) ORDER BY (~ (CASE WHEN vt0.c0 THEN vt0.c0 END));
SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) IN ())))) ORDER BY (~ (CASE WHEN vt0.c0 THEN vt0.c0 END));
SELECT vt0.c0 FROM vt0 WHERE ((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) IN ())) ISNULL)) ORDER BY (~ (CASE WHEN vt0.c0 THEN vt0.c0 END));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT t1.c0, v0.c0 FROM v0, t1;
SELECT DISTINCT t1.c0, v0.c0 FROM v0, t1 WHERE (((((t1.c0) NOTNULL))AND(((((t1.c0)AND(t1.c0)))OR(v0.c0))))) UNION SELECT DISTINCT t1.c0, v0.c0 FROM v0, t1 WHERE ((NOT (((((t1.c0) NOTNULL))AND(((((t1.c0)AND(t1.c0)))OR(v0.c0))))))) UNION SELECT DISTINCT t1.c0, v0.c0 FROM v0 NOT INDEXED, t1 WHERE (((((((t1.c0) NOTNULL))AND(((((t1.c0)AND(t1.c0)))OR(v0.c0))))) ISNULL));
SELECT DISTINCT t1.c0, v0.c0 FROM v0, t1;
SELECT t1.c0 FROM t1, vt0 GROUP BY t1.c0;
SELECT t1.c0 FROM t1, vt0 WHERE (CASE ABS(t1.c0)  WHEN ((vt0.c0)LIKE(t1.c0)) THEN CAST(t1.c0 AS INTEGER) ELSE ((((vt0.c0)AND(t1.c0)))AND(t1.c0)) END) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1, vt0 WHERE ((NOT (CASE ABS(t1.c0)  WHEN ((vt0.c0)LIKE(t1.c0)) THEN CAST(t1.c0 AS INTEGER) ELSE ((((vt0.c0)AND(t1.c0)))AND(t1.c0)) END))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1, vt0 WHERE (((CASE ABS(t1.c0)  WHEN ((vt0.c0)LIKE(t1.c0)) THEN CAST(t1.c0 AS INTEGER) ELSE ((((vt0.c0)AND(t1.c0)))AND(t1.c0)) END) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1, vt0 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 LEFT OUTER JOIN v0 ON ('1937782357' IN ()) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 LEFT OUTER JOIN v0 ON ('1937782357' IN ()) GROUP BY t1.c0 HAVING t1.c0 UNION ALL SELECT t1.c0 FROM t1 LEFT OUTER JOIN v0 ON ('1937782357' IN ()) GROUP BY t1.c0 HAVING (NOT (t1.c0)) UNION ALL SELECT t1.c0 FROM t1 LEFT OUTER JOIN v0 ON ('1937782357' IN ()) GROUP BY t1.c0 HAVING ((t1.c0) ISNULL);
SELECT ALL t1.c0 FROM t1 LEFT OUTER JOIN v0 ON ('1937782357' IN ()) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 LEFT OUTER JOIN v0 ON ('1937782357' IN ()) GROUP BY t1.c0 HAVING t1.c0 UNION ALL SELECT t1.c0 FROM t1 LEFT OUTER JOIN v0 ON ('1937782357' IN ()) GROUP BY t1.c0 HAVING (NOT (t1.c0)) UNION ALL SELECT t1.c0 FROM t1 LEFT OUTER JOIN v0 ON ('1937782357' IN ()) GROUP BY t1.c0 HAVING ((t1.c0) ISNULL);
SELECT ALL t1.c0 FROM t1 LEFT OUTER JOIN v0 ON ('1937782357' IN ()) GROUP BY t1.c0;
SELECT vt0.c0 FROM vt0, t1 LEFT OUTER JOIN v0 ON ((t1.c0) BETWEEN (vt0.c0) AND (((t1.c0) NOT BETWEEN (t1.c0) AND (vt0.c0))));
SELECT ALL vt0.c0 FROM vt0, t1 LEFT OUTER JOIN v0 ON ((t1.c0) BETWEEN (vt0.c0) AND (((t1.c0) NOT BETWEEN (t1.c0) AND (vt0.c0)))) WHERE (((json_patch(vt0.c0, vt0.c0))&(v0.c0 COLLATE BINARY))) UNION ALL SELECT ALL vt0.c0 FROM vt0, t1 LEFT OUTER JOIN v0 ON ((t1.c0) BETWEEN (vt0.c0) AND (((t1.c0) NOT BETWEEN (t1.c0) AND (vt0.c0)))) WHERE ((NOT (((json_patch(vt0.c0, vt0.c0))&(v0.c0 COLLATE BINARY))))) UNION ALL SELECT ALL vt0.c0 FROM vt0, t1 LEFT OUTER JOIN v0 ON ((t1.c0) BETWEEN (vt0.c0) AND (((t1.c0) NOT BETWEEN (t1.c0) AND (vt0.c0)))) WHERE (((((json_patch(vt0.c0, vt0.c0))&(v0.c0 COLLATE BINARY))) ISNULL));
SELECT DISTINCT v0.c0, t1.c0, vt0.c0 FROM vt0, v0, t1;
SELECT DISTINCT v0.c0, t1.c0, vt0.c0 FROM vt0, v0, t1 WHERE (((((NULL)-(vt0.c0)))>(t1.c0 COLLATE NOCASE))) UNION SELECT DISTINCT v0.c0, t1.c0, vt0.c0 FROM vt0, v0, t1 WHERE ((NOT (((((NULL)-(vt0.c0)))>(t1.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT v0.c0, t1.c0, vt0.c0 FROM vt0, v0, t1 WHERE (((((((NULL)-(vt0.c0)))>(t1.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT v0.c0, t1.c0, vt0.c0 FROM vt0, v0, t1;
SELECT v0.c0, t1.c0 FROM vt0, v0 LEFT OUTER JOIN t1 ON ((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)) COLLATE BINARY GROUP BY v0.c0, t1.c0;
SELECT v0.c0, t1.c0 FROM vt0, v0 LEFT OUTER JOIN t1 ON ((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)) COLLATE BINARY WHERE (t1.c0) GROUP BY v0.c0, t1.c0 UNION SELECT v0.c0, t1.c0 FROM vt0, v0 LEFT OUTER JOIN t1 ON ((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)) COLLATE BINARY WHERE ((NOT (t1.c0))) GROUP BY v0.c0, t1.c0 UNION SELECT v0.c0, t1.c0 FROM vt0, v0 LEFT OUTER JOIN t1 ON ((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)) COLLATE BINARY WHERE (((t1.c0) ISNULL)) GROUP BY v0.c0, t1.c0;
SELECT v0.c0, t1.c0 FROM vt0, v0 LEFT OUTER JOIN t1 ON ((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)) COLLATE BINARY GROUP BY v0.c0, t1.c0;
SELECT ALL vt0.c0 FROM t1, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t1, vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM t1, vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM t1, vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM t1, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t1, vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM t1, vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM t1, vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM t1, vt0 GROUP BY vt0.c0;
SELECT ALL * FROM vt0 NATURAL JOIN v0;
SELECT * FROM vt0 NATURAL JOIN v0 WHERE ((((((NULL) BETWEEN (-589300489) AND (vt0.c0))))<((((v0.c0)>(1.00729708E8)))))) UNION ALL SELECT ALL * FROM vt0 NATURAL JOIN v0 WHERE ((NOT ((((((NULL) BETWEEN (-589300489) AND (vt0.c0))))<((((v0.c0)>(1.00729708E8)))))))) UNION ALL SELECT * FROM vt0 NATURAL JOIN v0 WHERE ((((((((NULL) BETWEEN (-589300489) AND (vt0.c0))))<((((v0.c0)>(1.00729708E8)))))) ISNULL));
SELECT ALL * FROM vt0 NATURAL JOIN v0;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (LAST_INSERT_ROWID()) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (LAST_INSERT_ROWID()))) UNION SELECT DISTINCT * FROM t1 WHERE (((LAST_INSERT_ROWID()) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT ALL vt0.c0, t1.c0 FROM vt0, t1 GROUP BY vt0.c0, t1.c0;
SELECT ALL vt0.c0, t1.c0 FROM vt0, t1 WHERE (((((t1.c0)GLOB(vt0.c0))) NOTNULL)) GROUP BY vt0.c0, t1.c0 UNION SELECT ALL vt0.c0, t1.c0 FROM vt0, t1 WHERE ((NOT (((((t1.c0)GLOB(vt0.c0))) NOTNULL)))) GROUP BY vt0.c0, t1.c0 UNION SELECT ALL vt0.c0, t1.c0 FROM vt0, t1 WHERE (((((((t1.c0)GLOB(vt0.c0))) NOTNULL)) ISNULL)) GROUP BY vt0.c0, t1.c0;
SELECT ALL vt0.c0, t1.c0 FROM vt0, t1 GROUP BY vt0.c0, t1.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING '-757226135' UNION ALL SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (NOT ('-757226135')) UNION ALL SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (('-757226135') ISNULL);
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING '-757226135' UNION ALL SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (NOT ('-757226135')) UNION ALL SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (('-757226135') ISNULL);
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT ALL * FROM t1;
SELECT * FROM t1 WHERE (((CAST(t1.c0 AS REAL))IS(CAST(NULL AS NUMERIC)))) UNION ALL SELECT ALL * FROM t1 WHERE ((NOT (((CAST(t1.c0 AS REAL))IS(CAST(NULL AS NUMERIC)))))) UNION ALL SELECT ALL * FROM t1 WHERE (((((CAST(t1.c0 AS REAL))IS(CAST(NULL AS NUMERIC)))) ISNULL));
SELECT ALL * FROM t1;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (0.6954916730182027) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (0.6954916730182027))) UNION SELECT DISTINCT * FROM v0 WHERE (((0.6954916730182027) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT vt0.c0 FROM vt0, t1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, t1 WHERE (CASE t1.c0  WHEN t1.c0 THEN vt0.c0 WHEN 0.05929086237894188 THEN vt0.c0 WHEN vt0.c0 THEN t1.c0 ELSE t1.c0 END COLLATE NOCASE) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, t1 WHERE ((NOT (CASE t1.c0  WHEN t1.c0 THEN vt0.c0 WHEN 0.05929086237894188 THEN vt0.c0 WHEN vt0.c0 THEN t1.c0 ELSE t1.c0 END COLLATE NOCASE))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, t1 WHERE (((CASE t1.c0  WHEN t1.c0 THEN vt0.c0 WHEN 0.05929086237894188 THEN vt0.c0 WHEN vt0.c0 THEN t1.c0 ELSE t1.c0 END COLLATE NOCASE) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, t1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, t1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, t1 GROUP BY vt0.c0 HAVING (((((SUM(vt0.c0))OR(MAX(MIN(AVG(MIN(vt0.c0)))))))AND(vt0.c0)) IN (COUNT(vt0.c0), ((SUM(MIN(vt0.c0))) ISNULL))) UNION ALL SELECT ALL vt0.c0 FROM vt0, t1 GROUP BY vt0.c0 HAVING (NOT ((((((SUM(vt0.c0))OR(MAX(MIN(AVG(MIN(vt0.c0)))))))AND(vt0.c0)) IN (COUNT(vt0.c0), ((SUM(MIN(vt0.c0))) ISNULL))))) UNION ALL SELECT ALL vt0.c0 FROM vt0, t1 GROUP BY vt0.c0 HAVING (((((((SUM(vt0.c0))OR(MAX(MIN(AVG(MIN(vt0.c0)))))))AND(vt0.c0)) IN (COUNT(vt0.c0), ((SUM(MIN(vt0.c0))) ISNULL)))) ISNULL);
SELECT ALL * FROM v0 FULL OUTER JOIN t1 ON CASE WHEN ('2040633050' IN ()) THEN ((((x'')OR(v0.c0)))OR(t1.c0)) ELSE (t1.c0 IN ()) END INNER JOIN vt0 ON (((v0.c0 IN ())) BETWEEN ((+ (NULL))) AND (v0.c0 COLLATE RTRIM));
SELECT * FROM v0 FULL OUTER JOIN t1 ON CASE WHEN ('2040633050' IN ()) THEN ((((x'')OR(v0.c0)))OR(t1.c0)) ELSE (t1.c0 IN ()) END INNER JOIN vt0 ON (((v0.c0 IN ())) BETWEEN ((+ (NULL))) AND (v0.c0 COLLATE RTRIM)) WHERE ((((0x45adf724)<>(t1.c0)) IN ())) UNION ALL SELECT ALL * FROM v0 FULL OUTER JOIN t1 ON CASE WHEN ('2040633050' IN ()) THEN ((((x'')OR(v0.c0)))OR(t1.c0)) ELSE (t1.c0 IN ()) END INNER JOIN vt0 ON (((v0.c0 IN ())) BETWEEN ((+ (NULL))) AND (v0.c0 COLLATE RTRIM)) WHERE ((NOT ((((0X45adf724)<>(t1.c0)) IN ())))) UNION ALL SELECT * FROM v0 FULL OUTER JOIN t1 ON CASE WHEN ('2040633050' IN ()) THEN ((((x'')OR(v0.c0)))OR(t1.c0)) ELSE (t1.c0 IN ()) END INNER JOIN vt0 ON (((v0.c0 IN ())) BETWEEN ((+ (NULL))) AND (v0.c0 COLLATE RTRIM)) WHERE ((((((0x45adf724)!=(t1.c0)) IN ())) ISNULL));
SELECT ALL * FROM v0 FULL OUTER JOIN t1 ON CASE WHEN ('2040633050' IN ()) THEN ((((x'')OR(v0.c0)))OR(t1.c0)) ELSE (t1.c0 IN ()) END INNER JOIN vt0 ON (((v0.c0 IN ())) BETWEEN ((+ (NULL))) AND (v0.c0 COLLATE RTRIM));
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(0.19430635056654266)))<>(((vt0.c0)>>(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(0.19430635056654266)))<>(((vt0.c0)>>(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(0.19430635056654266)))!=(((vt0.c0)>>(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT v0.c0, t1.c0 FROM v0, t1 GROUP BY v0.c0, t1.c0;
SELECT ALL v0.c0, t1.c0 FROM v0, t1 WHERE (COALESCE(t1.c0, t1.c0) COLLATE BINARY) GROUP BY v0.c0, t1.c0 UNION SELECT v0.c0, t1.c0 FROM v0, t1 WHERE ((NOT (COALESCE(t1.c0, t1.c0) COLLATE BINARY))) GROUP BY v0.c0, t1.c0 UNION SELECT ALL v0.c0, t1.c0 FROM v0, t1 WHERE (((COALESCE(t1.c0, t1.c0) COLLATE BINARY) ISNULL)) GROUP BY v0.c0, t1.c0;
SELECT v0.c0, t1.c0 FROM v0, t1 GROUP BY v0.c0, t1.c0;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING CASE ((GROUP_CONCAT(COUNT(vt0.c0))) BETWEEN (SUM(COUNT(*))) AND (AVG(MIN('0.08011607545819055'))))  WHEN ((v0.c0) BETWEEN (vt0.c0) AND (COUNT(*))) THEN SUM(vt0.c0) END UNION ALL SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING (NOT (CASE ((GROUP_CONCAT(COUNT(vt0.c0))) BETWEEN (SUM(COUNT(*))) AND (AVG(MIN('0.08011607545819055'))))  WHEN ((v0.c0) BETWEEN (vt0.c0) AND (COUNT(*))) THEN SUM(vt0.c0) END)) UNION ALL SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING ((CASE ((GROUP_CONCAT(COUNT(vt0.c0))) BETWEEN (SUM(COUNT(*))) AND (AVG(MIN('0.08011607545819055'))))  WHEN ((v0.c0) BETWEEN (vt0.c0) AND (COUNT(*))) THEN SUM(vt0.c0) END) ISNULL);
SELECT ALL v0.c0 FROM vt0 CROSS JOIN v0 ON (+ (((v0.c0) IS FALSE)));
SELECT v0.c0 FROM vt0 CROSS JOIN v0 ON (+ (((v0.c0) IS FALSE))) WHERE (((((vt0.c0)AND(0.6044976963249701)))OR(v0.c0))) UNION ALL SELECT v0.c0 FROM vt0 CROSS JOIN v0 ON (+ (((v0.c0) IS FALSE))) WHERE ((NOT (((((vt0.c0)AND(0.6044976963249701)))OR(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM vt0 CROSS JOIN v0 ON (+ (((v0.c0) IS FALSE))) WHERE (((((((vt0.c0)AND(0.6044976963249701)))OR(v0.c0))) ISNULL));
SELECT ALL v0.c0 FROM vt0 CROSS JOIN v0 ON (+ (((v0.c0) IS FALSE)));
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE ((~ (((((v0.c0)AND(vt0.c0)))AND(vt0.c0))))) UNION SELECT DISTINCT * FROM v0, vt0 NOT INDEXED WHERE ((NOT ((~ (((((v0.c0)AND(vt0.c0)))AND(vt0.c0))))))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((((~ (((((v0.c0)AND(vt0.c0)))AND(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT ALL v0.c0 FROM t1, vt0 LEFT OUTER JOIN v0 ON ((0xffffffff9ebfeb33) BETWEEN ((t1.c0 IN ())) AND ((vt0.c0 IN ()))) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM t1, vt0 LEFT OUTER JOIN v0 ON ((0Xffffffff9ebfeb33) BETWEEN ((t1.c0 IN ())) AND ((vt0.c0 IN ()))) WHERE (((t1.c0) BETWEEN ((vt0.c0 IN ())) AND ('Et''J'))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM t1, vt0 LEFT OUTER JOIN v0 ON ((0xffffffff9ebfeb33) BETWEEN ((t1.c0 IN ())) AND ((vt0.c0 IN ()))) WHERE ((NOT (((t1.c0) BETWEEN ((vt0.c0 IN ())) AND ('Et''J'))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM t1, vt0 LEFT OUTER JOIN v0 ON ((0Xffffffff9ebfeb33) BETWEEN ((t1.c0 IN ())) AND ((vt0.c0 IN ()))) WHERE (((((t1.c0) BETWEEN ((vt0.c0 IN ())) AND ('Et''J'))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM t1, vt0 LEFT OUTER JOIN v0 ON ((0xffffffff9ebfeb33) BETWEEN ((t1.c0 IN ())) AND ((vt0.c0 IN ()))) GROUP BY v0.c0;
SELECT ALL t1.c0, vt0.c0 FROM v0, t1, vt0 GROUP BY t1.c0, vt0.c0;
SELECT t1.c0, vt0.c0 FROM v0, t1, vt0 GROUP BY t1.c0, vt0.c0 HAVING v0.c0 UNION ALL SELECT t1.c0, vt0.c0 FROM v0, t1, vt0 GROUP BY t1.c0, vt0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL t1.c0, vt0.c0 FROM v0, t1, vt0 GROUP BY t1.c0, vt0.c0 HAVING ((v0.c0) ISNULL);
SELECT ALL t1.c0, vt0.c0 FROM v0, t1, vt0 GROUP BY t1.c0, vt0.c0;
SELECT t1.c0, vt0.c0 FROM v0, t1, vt0 GROUP BY t1.c0, vt0.c0 HAVING v0.c0 UNION ALL SELECT t1.c0, vt0.c0 FROM v0, t1, vt0 GROUP BY t1.c0, vt0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL t1.c0, vt0.c0 FROM v0, t1, vt0 GROUP BY t1.c0, vt0.c0 HAVING ((v0.c0) ISNULL);
SELECT ALL t1.c0, vt0.c0 FROM v0, t1, vt0 GROUP BY t1.c0, vt0.c0;
SELECT * FROM vt0, v0, t1;
SELECT ALL * FROM vt0, v0, t1 WHERE (vt0.c0) UNION ALL SELECT ALL * FROM vt0 NOT INDEXED, v0, t1 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL * FROM vt0, v0, t1 WHERE (((vt0.c0) ISNULL));
SELECT * FROM vt0, v0, t1;
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE (v0.c0) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT ALL vt0.c0, t1.c0 FROM t1 FULL OUTER JOIN vt0 ON (((CASE WHEN t1.c0 THEN vt0.c0 END))>((((t1.c0)||(vt0.c0))))) GROUP BY vt0.c0, t1.c0;
SELECT ALL vt0.c0, t1.c0 FROM t1 FULL OUTER JOIN vt0 ON (((CASE WHEN t1.c0 THEN vt0.c0 END))>((((t1.c0)||(vt0.c0))))) WHERE (((((vt0.c0)=(x''))) IS TRUE)) GROUP BY vt0.c0, t1.c0 UNION SELECT vt0.c0, t1.c0 FROM t1 FULL OUTER JOIN vt0 ON (((CASE WHEN t1.c0 THEN vt0.c0 END))>((((t1.c0)||(vt0.c0))))) WHERE ((NOT (((((vt0.c0)=(x''))) IS TRUE)))) GROUP BY vt0.c0, t1.c0 UNION SELECT vt0.c0, t1.c0 FROM t1 FULL OUTER JOIN vt0 ON (((CASE WHEN t1.c0 THEN vt0.c0 END))>((((t1.c0)||(vt0.c0))))) WHERE (((((((vt0.c0)==(x''))) IS TRUE)) ISNULL)) GROUP BY vt0.c0, t1.c0;
SELECT ALL vt0.c0, t1.c0 FROM t1 FULL OUTER JOIN vt0 ON (((CASE WHEN t1.c0 THEN vt0.c0 END))>((((t1.c0)||(vt0.c0))))) GROUP BY vt0.c0, t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 NOT INDEXED GROUP BY t1.c0 HAVING MAX((~ (COUNT(t1.c0)))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (MAX((~ (COUNT(t1.c0)))))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((MAX((~ (COUNT(t1.c0))))) ISNULL);
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE (((LENGTH(vt0.c0))>=(((vt0.c0)>=(v0.c0))))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE ((NOT (((LENGTH(vt0.c0))>=(((vt0.c0)>=(v0.c0))))))) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0 WHERE (((((LENGTH(vt0.c0))>=(((vt0.c0)>=(v0.c0))))) ISNULL));
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (DATE(v0.c0, (((v0.c0))>((v0.c0))), '')) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (DATE(v0.c0, (((v0.c0))>((v0.c0))), '')))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((DATE(v0.c0, (((v0.c0))>((v0.c0))), '')) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT v0.c0, vt0.c0 FROM t1 LEFT OUTER JOIN vt0 ON ((JULIANDAY(v0.c0, 0.053258784653933744, t1.c0)) IS FALSE) INNER JOIN v0 ON (((v0.c0)) BETWEEN ((((v0.c0) IS TRUE))) AND ((vt0.c0))) GROUP BY v0.c0, vt0.c0;
SELECT ALL vt0.c0, t1.c0, v0.c0 FROM t1, vt0, v0 GROUP BY vt0.c0, t1.c0, v0.c0;
SELECT vt0.c0, t1.c0, v0.c0 FROM t1, vt0, v0 GROUP BY vt0.c0, t1.c0, v0.c0 HAVING MIN(TOTAL(TOTAL(v0.c0))) UNION ALL SELECT ALL vt0.c0, t1.c0, v0.c0 FROM t1, vt0, v0 GROUP BY vt0.c0, t1.c0, v0.c0 HAVING (NOT (MIN(TOTAL(TOTAL(v0.c0))))) UNION ALL SELECT ALL vt0.c0, t1.c0, v0.c0 FROM t1, vt0, v0 GROUP BY vt0.c0, t1.c0, v0.c0 HAVING ((MIN(TOTAL(TOTAL(v0.c0)))) ISNULL);
SELECT ALL * FROM t1;
SELECT * FROM t1 WHERE ((((t1.c0)) NOT BETWEEN ((json_insert(t1.c0, t1.c0, t1.c0, NULL, t1.c0))) AND (((((t1.c0, t1.c0, t1.c0)) BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((t1.c0, t1.c0, t1.c0))))))) UNION ALL SELECT ALL * FROM t1 WHERE ((NOT ((((t1.c0)) NOT BETWEEN ((json_insert(t1.c0, t1.c0, t1.c0, NULL, t1.c0))) AND (((((t1.c0, t1.c0, t1.c0)) BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((t1.c0, t1.c0, t1.c0))))))))) UNION ALL SELECT ALL * FROM t1 WHERE ((((((t1.c0)) NOT BETWEEN ((json_insert(t1.c0, t1.c0, t1.c0, NULL, t1.c0))) AND (((((t1.c0, t1.c0, t1.c0)) BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((t1.c0, t1.c0, t1.c0))))))) ISNULL));
SELECT DISTINCT * FROM t1 NATURAL JOIN vt0;
SELECT DISTINCT * FROM t1 NATURAL JOIN vt0 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM t1 NATURAL JOIN vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM t1 NATURAL JOIN vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM t1 NATURAL JOIN vt0;
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, v0 WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, v0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, v0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT ALL vt0.c0, t1.c0 FROM t1 LEFT OUTER JOIN vt0 ON ((LIKELIHOOD(vt0.c0, 0.9008776494263188))OR(((((((((vt0.c0)AND(0Xc42842)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))) GROUP BY vt0.c0, t1.c0;
SELECT vt0.c0, t1.c0 FROM t1 LEFT OUTER JOIN vt0 ON ((LIKELIHOOD(vt0.c0, 0.9008776494263188))OR(((((((((vt0.c0)AND(0xc42842)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))) GROUP BY vt0.c0, t1.c0 HAVING x'f0c6' UNION ALL SELECT ALL vt0.c0, t1.c0 FROM t1 LEFT OUTER JOIN vt0 ON ((LIKELIHOOD(vt0.c0, 0.9008776494263188))OR(((((((((vt0.c0)AND(0xc42842)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))) GROUP BY vt0.c0, t1.c0 HAVING (NOT (x'f0c6')) UNION ALL SELECT vt0.c0, t1.c0 FROM t1 LEFT OUTER JOIN vt0 ON ((LIKELIHOOD(vt0.c0, 0.9008776494263188))OR(((((((((vt0.c0)AND(0Xc42842)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))) GROUP BY vt0.c0, t1.c0 HAVING ((x'f0c6') ISNULL);
SELECT ALL vt0.c0, t1.c0 FROM t1 LEFT OUTER JOIN vt0 ON ((LIKELIHOOD(vt0.c0, 0.9008776494263188))OR(((((((((vt0.c0)AND(0Xc42842)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))) GROUP BY vt0.c0, t1.c0;
SELECT vt0.c0, t1.c0 FROM t1 LEFT OUTER JOIN vt0 ON ((LIKELIHOOD(vt0.c0, 0.9008776494263188))OR(((((((((vt0.c0)AND(0xc42842)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))) GROUP BY vt0.c0, t1.c0 HAVING x'f0c6' UNION ALL SELECT ALL vt0.c0, t1.c0 FROM t1 LEFT OUTER JOIN vt0 ON ((LIKELIHOOD(vt0.c0, 0.9008776494263188))OR(((((((((vt0.c0)AND(0xc42842)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))) GROUP BY vt0.c0, t1.c0 HAVING (NOT (x'f0c6')) UNION ALL SELECT vt0.c0, t1.c0 FROM t1 LEFT OUTER JOIN vt0 ON ((LIKELIHOOD(vt0.c0, 0.9008776494263188))OR(((((((((vt0.c0)AND(0Xc42842)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))) GROUP BY vt0.c0, t1.c0 HAVING ((x'f0c6') ISNULL);
SELECT ALL vt0.c0, t1.c0 FROM t1 LEFT OUTER JOIN vt0 ON ((LIKELIHOOD(vt0.c0, 0.9008776494263188))OR(((((((((vt0.c0)AND(0Xc42842)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))) GROUP BY vt0.c0, t1.c0;
SELECT ALL * FROM v0, vt0;
SELECT * FROM v0, vt0 WHERE (CASE WHEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, -2010548692, v0.c0)) AND ((NULL, v0.c0, vt0.c0))) THEN (+ (v0.c0)) WHEN ((v0.c0) ISNULL) THEN (v0.c0 IN ()) WHEN v0.c0 THEN ('-187286704' IN ()) END) UNION ALL SELECT ALL * FROM v0, vt0 WHERE ((NOT (CASE WHEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, -2010548692, v0.c0)) AND ((NULL, v0.c0, vt0.c0))) THEN (+ (v0.c0)) WHEN ((v0.c0) ISNULL) THEN (v0.c0 IN ()) WHEN v0.c0 THEN ('-187286704' IN ()) END))) UNION ALL SELECT * FROM v0, vt0 WHERE (((CASE WHEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, -2010548692, v0.c0)) AND ((NULL, v0.c0, vt0.c0))) THEN (+ (v0.c0)) WHEN ((v0.c0) ISNULL) THEN (v0.c0 IN ()) WHEN v0.c0 THEN ('-187286704' IN ()) END) ISNULL));
SELECT ALL * FROM v0, vt0;
SELECT DISTINCT * FROM v0, t1;
SELECT DISTINCT * FROM v0, t1 WHERE (((v0.c0 COLLATE BINARY)>=((+ (v0.c0))))) UNION SELECT DISTINCT * FROM v0, t1 WHERE ((NOT (((v0.c0 COLLATE BINARY)>=((+ (v0.c0))))))) UNION SELECT DISTINCT * FROM v0, t1 WHERE (((((v0.c0 COLLATE BINARY)>=((+ (v0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0, t1;
SELECT t1.c0, v0.c0 FROM v0, t1 GROUP BY t1.c0, v0.c0;
SELECT ALL t1.c0, v0.c0 FROM v0, t1 WHERE ((((~ (v0.c0)))-(((t1.c0) IS TRUE)))) GROUP BY t1.c0, v0.c0 UNION SELECT t1.c0, v0.c0 FROM v0, t1 WHERE ((NOT ((((~ (v0.c0)))-(((t1.c0) IS TRUE)))))) GROUP BY t1.c0, v0.c0 UNION SELECT ALL t1.c0, v0.c0 FROM v0, t1 NOT INDEXED WHERE ((((((~ (v0.c0)))-(((t1.c0) IS TRUE)))) ISNULL)) GROUP BY t1.c0, v0.c0;
SELECT t1.c0, v0.c0 FROM v0, t1 GROUP BY t1.c0, v0.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING CASE COUNT(AVG(GROUP_CONCAT(SUM(COUNT(t1.c0)))))  WHEN CASE WHEN t1.c0 THEN COUNT(COUNT(*)) ELSE t1.c0 END THEN GROUP_CONCAT(MIN(COUNT(MAX(COUNT(*))))) ELSE ((COUNT(t1.c0)) NOT BETWEEN (t1.c0) AND (t1.c0)) END UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (CASE COUNT(AVG(GROUP_CONCAT(SUM(COUNT(t1.c0)))))  WHEN CASE WHEN t1.c0 THEN COUNT(COUNT(*)) ELSE t1.c0 END THEN GROUP_CONCAT(MIN(COUNT(MAX(COUNT(*))))) ELSE ((COUNT(t1.c0)) NOT BETWEEN (t1.c0) AND (t1.c0)) END)) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((CASE COUNT(AVG(GROUP_CONCAT(SUM(COUNT(t1.c0)))))  WHEN CASE WHEN t1.c0 THEN COUNT(COUNT(*)) ELSE t1.c0 END THEN GROUP_CONCAT(MIN(COUNT(MAX(COUNT(*))))) ELSE ((COUNT(t1.c0)) NOT BETWEEN (t1.c0) AND (t1.c0)) END) ISNULL);
SELECT * FROM vt0, v0;
SELECT * FROM vt0, v0 WHERE ((((+ (v0.c0))) NOT BETWEEN (v0.c0 COLLATE NOCASE) AND ((vt0.c0 IN ())))) UNION ALL SELECT ALL * FROM vt0, v0 WHERE ((NOT ((((+ (v0.c0))) NOT BETWEEN (v0.c0 COLLATE NOCASE) AND ((vt0.c0 IN ())))))) UNION ALL SELECT * FROM vt0, v0 WHERE ((((((+ (v0.c0))) NOT BETWEEN (v0.c0 COLLATE NOCASE) AND ((vt0.c0 IN ())))) ISNULL));
SELECT * FROM vt0, v0;
SELECT DISTINCT * FROM t1 RIGHT OUTER JOIN v0 ON CASE vt0.c0 COLLATE NOCASE  WHEN NULLIF(t1.c0, t1.c0) THEN ((vt0.c0)GLOB('-1349088493')) END CROSS JOIN vt0 ON (~ (((vt0.c0)IS(vt0.c0))));
SELECT ALL vt0.c0, t1.c0 FROM vt0, t1 GROUP BY vt0.c0, t1.c0;
SELECT ALL vt0.c0, t1.c0 FROM vt0, t1 WHERE ((((t1.c0)) BETWEEN (((- (t1.c0)))) AND ((((t1.c0)&(vt0.c0)))))) GROUP BY vt0.c0, t1.c0 UNION SELECT vt0.c0, t1.c0 FROM vt0, t1 WHERE ((NOT ((((t1.c0)) BETWEEN (((- (t1.c0)))) AND ((((t1.c0)&(vt0.c0)))))))) GROUP BY vt0.c0, t1.c0 UNION SELECT ALL vt0.c0, t1.c0 FROM vt0, t1 WHERE ((((((t1.c0)) BETWEEN (((- (t1.c0)))) AND ((((t1.c0)&(vt0.c0)))))) ISNULL)) GROUP BY vt0.c0, t1.c0;
SELECT ALL vt0.c0, t1.c0 FROM vt0, t1 GROUP BY vt0.c0, t1.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING ((('|U')) NOT BETWEEN ((MAX(TOTAL(MAX(SUM(v0.c0)))))) AND ((AVG(vt0.c0)))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (((('|U')) NOT BETWEEN ((MAX(TOTAL(MAX(SUM(v0.c0)))))) AND ((AVG(vt0.c0)))))) UNION ALL SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING ((((('|U')) NOT BETWEEN ((MAX(TOTAL(MAX(SUM(v0.c0)))))) AND ((AVG(vt0.c0))))) ISNULL);
SELECT * FROM t1, vt0, v0;
SELECT * FROM t1, vt0, v0 WHERE ((~ (v0.c0))) UNION ALL SELECT ALL * FROM t1, vt0, v0 WHERE ((NOT ((~ (v0.c0))))) UNION ALL SELECT * FROM t1, vt0, v0 WHERE ((((~ (v0.c0))) ISNULL));
SELECT * FROM t1, vt0, v0;
SELECT DISTINCT t1.c0 FROM t1, vt0, v0;
SELECT DISTINCT t1.c0 FROM t1, vt0, v0 WHERE ((NOT (((t1.c0) NOTNULL)))) UNION SELECT DISTINCT t1.c0 FROM t1, vt0, v0 WHERE ((NOT ((NOT (((t1.c0) NOTNULL)))))) UNION SELECT DISTINCT t1.c0 FROM t1, vt0, v0 WHERE ((((NOT (((t1.c0) NOTNULL)))) ISNULL));
SELECT DISTINCT t1.c0 FROM t1, vt0, v0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE (TYPEOF(DISTINCT ((t1.c0)GLOB(t1.c0)))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT (TYPEOF(DISTINCT ((t1.c0)GLOB(t1.c0)))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE (((TYPEOF(DISTINCT ((t1.c0)GLOB(t1.c0)))) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0, v0.c0 FROM v0, t1 GROUP BY t1.c0, v0.c0;
SELECT t1.c0, v0.c0 FROM v0, t1 GROUP BY t1.c0, v0.c0 HAVING AVG((v0.c0 IN (MAX(v0.c0)))) UNION ALL SELECT t1.c0, v0.c0 FROM v0, t1 GROUP BY t1.c0, v0.c0 HAVING (NOT (AVG((v0.c0 IN (MAX(v0.c0)))))) UNION ALL SELECT t1.c0, v0.c0 FROM v0, t1 GROUP BY t1.c0, v0.c0 HAVING ((AVG((v0.c0 IN (MAX(v0.c0))))) ISNULL);
SELECT vt0.c0 FROM vt0, v0;
SELECT vt0.c0 FROM vt0, v0 WHERE (CAST(vt0.c0 AS REAL)) UNION ALL SELECT vt0.c0 FROM vt0, v0 WHERE ((NOT (CAST(vt0.c0 AS REAL)))) UNION ALL SELECT vt0.c0 FROM vt0, v0 WHERE (((CAST(vt0.c0 AS REAL)) ISNULL));
SELECT vt0.c0 FROM vt0, v0;
SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt0;
SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt0 WHERE ((((((((((~ (vt0.c0)))OR(vt0.c0 COLLATE BINARY)))AND(((((v0.c0)OR(vt0.c0)))AND(v0.c0)))))OR((((vt0.c0))<>((vt0.c0))))))AND(TIME(x'c1ac', v0.c0, vt0.c0)))) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt0 WHERE ((NOT ((((((((((~ (vt0.c0)))OR(vt0.c0 COLLATE BINARY)))AND(((((v0.c0)OR(vt0.c0)))AND(v0.c0)))))OR((((vt0.c0))!=((vt0.c0))))))AND(TIME(x'c1ac', v0.c0, vt0.c0)))))) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt0 WHERE ((((((((((((~ (vt0.c0)))OR(vt0.c0 COLLATE BINARY)))AND(((((v0.c0)OR(vt0.c0)))AND(v0.c0)))))OR((((vt0.c0))<>((vt0.c0))))))AND(TIME(x'c1ac', v0.c0, vt0.c0)))) ISNULL));
SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c0) IS TRUE))AND(json_quote(vt0.c0))))AND(((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((((vt0.c0) IS TRUE))AND(json_quote(vt0.c0))))AND(((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((((vt0.c0) IS TRUE))AND(json_quote(vt0.c0))))AND(((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL(v0.c0)) NOT BETWEEN (SUM(TOTAL(v0.c0))) AND (CASE COUNT(*)  WHEN GROUP_CONCAT(v0.c0) THEN COUNT(MIN(0.8975694163006144)) END)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((TOTAL(v0.c0)) NOT BETWEEN (SUM(TOTAL(v0.c0))) AND (CASE COUNT(*)  WHEN GROUP_CONCAT(v0.c0) THEN COUNT(MIN(0.8975694163006144)) END)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((TOTAL(v0.c0)) NOT BETWEEN (SUM(TOTAL(v0.c0))) AND (CASE COUNT(*)  WHEN GROUP_CONCAT(v0.c0) THEN COUNT(MIN(0.8975694163006144)) END))) ISNULL);
SELECT * FROM vt0, t1, v0;
SELECT * FROM vt0, t1, v0 WHERE ((((t1.c0)) BETWEEN (((((vt0.c0, t1.c0, v0.c0))>=((t1.c0, v0.c0, t1.c0))))) AND ((CAST(t1.c0 AS BLOB))))) UNION ALL SELECT * FROM vt0, t1, v0 WHERE ((NOT ((((t1.c0)) BETWEEN (((((vt0.c0, t1.c0, v0.c0))>=((t1.c0, v0.c0, t1.c0))))) AND ((CAST(t1.c0 AS BLOB))))))) UNION ALL SELECT * FROM vt0, t1, v0 WHERE ((((((t1.c0)) BETWEEN (((((vt0.c0, t1.c0, v0.c0))>=((t1.c0, v0.c0, t1.c0))))) AND ((CAST(t1.c0 AS BLOB))))) ISNULL));
SELECT * FROM vt0, t1, v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) IN ())) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) IN ())))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) IN ())) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL vt0.c0, t1.c0 FROM t1, vt0 GROUP BY vt0.c0, t1.c0;
SELECT ALL vt0.c0, t1.c0 FROM t1, vt0 WHERE (CAST((((vt0.c0)) NOT BETWEEN ((t1.c0)) AND ((vt0.c0))) AS INTEGER)) GROUP BY vt0.c0, t1.c0 UNION SELECT vt0.c0, t1.c0 FROM t1, vt0 WHERE ((NOT (CAST((((vt0.c0)) NOT BETWEEN ((t1.c0)) AND ((vt0.c0))) AS INTEGER)))) GROUP BY vt0.c0, t1.c0 UNION SELECT ALL vt0.c0, t1.c0 FROM t1, vt0 WHERE (((CAST((((vt0.c0)) NOT BETWEEN ((t1.c0)) AND ((vt0.c0))) AS INTEGER)) ISNULL)) GROUP BY vt0.c0, t1.c0;
SELECT ALL vt0.c0, t1.c0 FROM t1, vt0 GROUP BY vt0.c0, t1.c0;
SELECT vt0.c0, t1.c0, v0.c0 FROM v0, vt0, t1 GROUP BY vt0.c0, t1.c0, v0.c0;
SELECT ALL vt0.c0, t1.c0, v0.c0 FROM v0, vt0, t1 GROUP BY vt0.c0, t1.c0, v0.c0 HAVING t1.c0 UNION ALL SELECT vt0.c0, t1.c0, v0.c0 FROM v0, vt0, t1 GROUP BY vt0.c0, t1.c0, v0.c0 HAVING (NOT (t1.c0)) UNION ALL SELECT ALL vt0.c0, t1.c0, v0.c0 FROM v0, vt0, t1 GROUP BY vt0.c0, t1.c0, v0.c0 HAVING ((t1.c0) ISNULL);
SELECT vt0.c0, t1.c0, v0.c0 FROM v0, vt0, t1 GROUP BY vt0.c0, t1.c0, v0.c0;
SELECT ALL vt0.c0, t1.c0, v0.c0 FROM v0, vt0, t1 GROUP BY vt0.c0, t1.c0, v0.c0 HAVING t1.c0 UNION ALL SELECT vt0.c0, t1.c0, v0.c0 FROM v0, vt0, t1 GROUP BY vt0.c0, t1.c0, v0.c0 HAVING (NOT (t1.c0)) UNION ALL SELECT ALL vt0.c0, t1.c0, v0.c0 FROM v0, vt0, t1 GROUP BY vt0.c0, t1.c0, v0.c0 HAVING ((t1.c0) ISNULL);
SELECT vt0.c0, t1.c0, v0.c0 FROM v0, vt0, t1 GROUP BY vt0.c0, t1.c0, v0.c0;
SELECT * FROM v0;
SELECT * FROM v0 WHERE ((NOT (v0.c0 COLLATE BINARY))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT ((NOT (v0.c0 COLLATE BINARY))))) UNION ALL SELECT * FROM v0 WHERE ((((NOT (v0.c0 COLLATE BINARY))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT vt0.c0 FROM vt0 NATURAL JOIN t1;
SELECT DISTINCT vt0.c0 FROM vt0 NATURAL JOIN t1 WHERE (vt0.c0) UNION SELECT DISTINCT vt0.c0 FROM vt0 NATURAL JOIN t1 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.c0 FROM vt0 NATURAL JOIN t1 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0 NATURAL JOIN t1;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((v0.c0)>>((((v0.c0))<((v0.c0)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((v0.c0)>>((((v0.c0))<((v0.c0)))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0)>>((((v0.c0))<((v0.c0)))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (((((MAX(SUM(GROUP_CONCAT(t1.c0))))&(MIN(MIN(t1.c0))))))<=((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT ((((((MAX(SUM(GROUP_CONCAT(t1.c0))))&(MIN(MIN(t1.c0))))))<=((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (((((((MAX(SUM(GROUP_CONCAT(t1.c0))))&(MIN(MIN(t1.c0))))))<=((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))))) ISNULL);
SELECT ALL * FROM t1;
SELECT ALL * FROM t1 WHERE ((((t1.c0 IN (t1.c0))) NOT BETWEEN (t1.c0) AND (CAST(t1.c0 AS REAL)))) UNION ALL SELECT ALL * FROM t1 WHERE ((NOT ((((t1.c0 IN (t1.c0))) NOT BETWEEN (t1.c0) AND (CAST(t1.c0 AS REAL)))))) UNION ALL SELECT ALL * FROM t1 WHERE ((((((t1.c0 IN (t1.c0))) NOT BETWEEN (t1.c0) AND (CAST(t1.c0 AS REAL)))) ISNULL));
SELECT ALL * FROM t1;
SELECT DISTINCT * FROM t1, v0;
SELECT DISTINCT * FROM t1, v0 WHERE (((((x'571c')>(t1.c0)))LIKE(((v0.c0)=(v0.c0))))) UNION SELECT DISTINCT * FROM t1, v0 WHERE ((NOT (((((x'571c')>(t1.c0)))LIKE(((v0.c0)=(v0.c0))))))) UNION SELECT DISTINCT * FROM t1, v0 WHERE (((((((x'571c')>(t1.c0)))LIKE(((v0.c0)==(v0.c0))))) ISNULL));
SELECT DISTINCT * FROM t1, v0;
SELECT t1.c0 FROM vt0, t1 RIGHT OUTER JOIN v0 ON CASE CAST(v0.c0 AS BLOB)  WHEN NULL THEN CAST(vt0.c0 AS NUMERIC) ELSE ((x'') NOT BETWEEN (t1.c0) AND (vt0.c0)) END GROUP BY t1.c0;
SELECT t1.c0 FROM vt0, t1 RIGHT OUTER JOIN v0 ON CASE CAST(v0.c0 AS BLOB)  WHEN NULL THEN CAST(vt0.c0 AS NUMERIC) ELSE ((x'') NOT BETWEEN (t1.c0) AND (vt0.c0)) END WHERE ((((t1.c0)+(t1.c0)) IN ('100729708'))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM vt0, t1 RIGHT OUTER JOIN v0 ON CASE CAST(v0.c0 AS BLOB)  WHEN NULL THEN CAST(vt0.c0 AS NUMERIC) ELSE ((x'') NOT BETWEEN (t1.c0) AND (vt0.c0)) END WHERE ((NOT ((((t1.c0)+(t1.c0)) IN ('100729708'))))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM vt0, t1 RIGHT OUTER JOIN v0 ON CASE CAST(v0.c0 AS BLOB)  WHEN NULL THEN CAST(vt0.c0 AS NUMERIC) ELSE ((x'') NOT BETWEEN (t1.c0) AND (vt0.c0)) END WHERE ((((((t1.c0)+(t1.c0)) IN ('100729708'))) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM vt0, t1 RIGHT OUTER JOIN v0 ON CASE CAST(v0.c0 AS BLOB)  WHEN NULL THEN CAST(vt0.c0 AS NUMERIC) ELSE ((x'') NOT BETWEEN (t1.c0) AND (vt0.c0)) END GROUP BY t1.c0;
SELECT t1.c0, v0.c0 FROM vt0, t1, v0 GROUP BY t1.c0, v0.c0;
SELECT ALL t1.c0, v0.c0 FROM vt0, t1, v0 GROUP BY t1.c0, v0.c0 HAVING GROUP_CONCAT(GROUP_CONCAT(COUNT(MIN(v0.c0)))) UNION ALL SELECT t1.c0, v0.c0 FROM vt0, t1, v0 GROUP BY t1.c0, v0.c0 HAVING (NOT (GROUP_CONCAT(GROUP_CONCAT(COUNT(MIN(v0.c0)))))) UNION ALL SELECT t1.c0, v0.c0 FROM vt0, t1, v0 GROUP BY t1.c0, v0.c0 HAVING ((GROUP_CONCAT(GROUP_CONCAT(COUNT(MIN(v0.c0))))) ISNULL);
SELECT ALL t1.c0 FROM t1, v0;
SELECT t1.c0 FROM t1, v0 WHERE (CAST(((t1.c0) ISNULL) AS REAL)) UNION ALL SELECT t1.c0 FROM t1, v0 WHERE ((NOT (CAST(((t1.c0) ISNULL) AS REAL)))) UNION ALL SELECT t1.c0 FROM t1, v0 WHERE (((CAST(((t1.c0) ISNULL) AS REAL)) ISNULL));
SELECT ALL t1.c0 FROM t1, v0;
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE (((((v0.c0)) BETWEEN ((NULL)) AND ((vt0.c0))) IN ())) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT (((((v0.c0)) BETWEEN ((NULL)) AND ((vt0.c0))) IN ())))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE (((((((v0.c0)) BETWEEN ((NULL)) AND ((vt0.c0))) IN ())) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT ALL t1.c0, vt0.c0 FROM t1 LEFT OUTER JOIN vt0 ON ((((((vt0.c0) NOTNULL))AND(CAST(t1.c0 AS INTEGER))))AND((('(U')<<(vt0.c0)))) GROUP BY t1.c0, vt0.c0;
SELECT t1.c0, vt0.c0 FROM t1 LEFT OUTER JOIN vt0 ON ((((((vt0.c0) NOTNULL))AND(CAST(t1.c0 AS INTEGER))))AND((('(U')<<(vt0.c0)))) WHERE ((((((vt0.c0)) BETWEEN ((t1.c0)) AND ((t1.c0)))) BETWEEN ('') AND (vt0.c0))) GROUP BY t1.c0, vt0.c0 UNION SELECT ALL t1.c0, vt0.c0 FROM t1 LEFT OUTER JOIN vt0 ON ((((((vt0.c0) NOTNULL))AND(CAST(t1.c0 AS INTEGER))))AND((('(U')<<(vt0.c0)))) WHERE ((NOT ((((((vt0.c0)) BETWEEN ((t1.c0)) AND ((t1.c0)))) BETWEEN ('') AND (vt0.c0))))) GROUP BY t1.c0, vt0.c0 UNION SELECT ALL t1.c0, vt0.c0 FROM t1 LEFT OUTER JOIN vt0 ON ((((((vt0.c0) NOTNULL))AND(CAST(t1.c0 AS INTEGER))))AND((('(U')<<(vt0.c0)))) WHERE ((((((((vt0.c0)) BETWEEN ((t1.c0)) AND ((t1.c0)))) BETWEEN ('') AND (vt0.c0))) ISNULL)) GROUP BY t1.c0, vt0.c0;
SELECT ALL t1.c0, vt0.c0 FROM t1 LEFT OUTER JOIN vt0 ON ((((((vt0.c0) NOTNULL))AND(CAST(t1.c0 AS INTEGER))))AND((('(U')<<(vt0.c0)))) GROUP BY t1.c0, vt0.c0;
SELECT v0.c0, vt0.c0, t1.c0 FROM t1, vt0, v0 GROUP BY v0.c0, vt0.c0, t1.c0;
SELECT ALL v0.c0, vt0.c0, t1.c0 FROM t1, vt0, v0 GROUP BY v0.c0, vt0.c0, t1.c0 HAVING (((NOT (vt0.c0))) NOTNULL) UNION ALL SELECT v0.c0, vt0.c0, t1.c0 FROM t1, vt0, v0 GROUP BY v0.c0, vt0.c0, t1.c0 HAVING (NOT ((((NOT (vt0.c0))) NOTNULL))) UNION ALL SELECT v0.c0, vt0.c0, t1.c0 FROM t1, vt0, v0 GROUP BY v0.c0, vt0.c0, t1.c0 HAVING (((((NOT (vt0.c0))) NOTNULL)) ISNULL);
SELECT v0.c0, vt0.c0, t1.c0 FROM t1, vt0, v0 GROUP BY v0.c0, vt0.c0, t1.c0;
SELECT ALL v0.c0, vt0.c0, t1.c0 FROM t1, vt0, v0 GROUP BY v0.c0, vt0.c0, t1.c0 HAVING (((NOT (vt0.c0))) NOTNULL) UNION ALL SELECT v0.c0, vt0.c0, t1.c0 FROM t1, vt0, v0 GROUP BY v0.c0, vt0.c0, t1.c0 HAVING (NOT ((((NOT (vt0.c0))) NOTNULL))) UNION ALL SELECT v0.c0, vt0.c0, t1.c0 FROM t1, vt0, v0 GROUP BY v0.c0, vt0.c0, t1.c0 HAVING (((((NOT (vt0.c0))) NOTNULL)) ISNULL);
SELECT v0.c0, vt0.c0, t1.c0 FROM t1, vt0, v0 GROUP BY v0.c0, vt0.c0, t1.c0;
SELECT ALL t1.c0, v0.c0 FROM t1, vt0, v0;
SELECT t1.c0, v0.c0 FROM t1, vt0, v0 WHERE ((((- (v0.c0)))*(((((t1.c0)AND(v0.c0)))OR(vt0.c0))))) UNION ALL SELECT ALL t1.c0, v0.c0 FROM t1, vt0 NOT INDEXED, v0 WHERE ((NOT ((((- (v0.c0)))*(((((t1.c0)AND(v0.c0)))OR(vt0.c0))))))) UNION ALL SELECT ALL t1.c0, v0.c0 FROM t1, vt0 NOT INDEXED, v0 WHERE ((((((- (v0.c0)))*(((((t1.c0)AND(v0.c0)))OR(vt0.c0))))) ISNULL));
SELECT ALL t1.c0, v0.c0 FROM t1, vt0, v0;
SELECT DISTINCT * FROM t1 RIGHT OUTER JOIN vt0 ON v0.c0 LEFT OUTER JOIN v0 ON ((((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))%(TOTAL_CHANGES()));
SELECT ALL vt0.c0, v0.c0 FROM t1, vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM t1, vt0, v0 WHERE ((t1.c0 IN ())) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM t1, vt0, v0 WHERE ((NOT ((t1.c0 IN ())))) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM t1, vt0, v0 WHERE ((((t1.c0 IN ())) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM t1, vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING MIN(COUNT(GROUP_CONCAT(t1.c0))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (MIN(COUNT(GROUP_CONCAT(t1.c0))))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((MIN(COUNT(GROUP_CONCAT(t1.c0)))) ISNULL);
SELECT v0.c0, t1.c0 FROM v0, t1;
SELECT v0.c0, t1.c0 FROM v0, t1 WHERE (load_extension(CASE t1.c0  WHEN v0.c0 THEN t1.c0 ELSE v0.c0 END)) UNION ALL SELECT ALL v0.c0, t1.c0 FROM v0, t1 WHERE ((NOT (load_extension(CASE t1.c0  WHEN v0.c0 THEN t1.c0 ELSE v0.c0 END)))) UNION ALL SELECT ALL v0.c0, t1.c0 FROM v0, t1 WHERE (((load_extension(CASE t1.c0  WHEN v0.c0 THEN t1.c0 ELSE v0.c0 END)) ISNULL));
SELECT DISTINCT v0.c0 FROM v0, vt0;
SELECT DISTINCT v0.c0 FROM v0, vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT v0.c0 FROM v0, vt0 WHERE ((NOT ((NOT (vt0.c0))))) UNION SELECT DISTINCT v0.c0 FROM v0, vt0 WHERE ((((NOT (vt0.c0))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0, vt0;
SELECT ALL v0.c0 FROM t1, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM t1, v0 WHERE (CASE WHEN ((v0.c0)||(v0.c0)) THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN 206137493 THEN NULL WHEN t1.c0 THEN '99298717' END WHEN t1.c0 THEN ((v0.c0)<(v0.c0)) WHEN ((t1.c0) BETWEEN (v0.c0) AND (0.4389998277306153)) THEN NULL ELSE ((t1.c0) BETWEEN (NULL) AND (v0.c0)) END) GROUP BY v0.c0 UNION SELECT v0.c0 FROM t1, v0 WHERE ((NOT (CASE WHEN ((v0.c0)||(v0.c0)) THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN 206137493 THEN NULL WHEN t1.c0 THEN '99298717' END WHEN t1.c0 THEN ((v0.c0)<(v0.c0)) WHEN ((t1.c0) BETWEEN (v0.c0) AND (0.4389998277306153)) THEN NULL ELSE ((t1.c0) BETWEEN (NULL) AND (v0.c0)) END))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM t1, v0 WHERE (((CASE WHEN ((v0.c0)||(v0.c0)) THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN 206137493 THEN NULL WHEN t1.c0 THEN '99298717' END WHEN t1.c0 THEN ((v0.c0)<(v0.c0)) WHEN ((t1.c0) BETWEEN (v0.c0) AND (0.4389998277306153)) THEN NULL ELSE ((t1.c0) BETWEEN (NULL) AND (v0.c0)) END) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM t1, v0 GROUP BY v0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX(COUNT(AVG(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(COUNT(AVG(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(COUNT(AVG(vt0.c0)))) ISNULL);
SELECT ALL v0.c0, t1.c0 FROM v0, t1;
SELECT v0.c0, t1.c0 FROM v0 NOT INDEXED, t1 WHERE (CAST(t1.c0 COLLATE RTRIM AS REAL)) UNION ALL SELECT ALL v0.c0, t1.c0 FROM v0, t1 WHERE ((NOT (CAST(t1.c0 COLLATE RTRIM AS REAL)))) UNION ALL SELECT ALL v0.c0, t1.c0 FROM v0, t1 WHERE (((CAST(t1.c0 COLLATE RTRIM AS REAL)) ISNULL));
SELECT ALL v0.c0, t1.c0 FROM v0, t1;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((vt0.c0))=((vt0.c0))) COLLATE NOCASE) UNION SELECT DISTINCT vt0.c0 FROM vt0 NOT INDEXED WHERE ((NOT ((((vt0.c0))=((vt0.c0))) COLLATE NOCASE))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((vt0.c0))=((vt0.c0))) COLLATE NOCASE) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (CAST(((v0.c0) IS TRUE) AS REAL)) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CAST(((v0.c0) IS TRUE) AS REAL)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((CAST(((v0.c0) IS TRUE) AS REAL)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT t1.c0, v0.c0 FROM v0, t1 GROUP BY t1.c0, v0.c0;
SELECT t1.c0, v0.c0 FROM v0, t1 GROUP BY t1.c0, v0.c0 HAVING COUNT(CAST(AVG(COUNT(*)) AS BLOB)) UNION ALL SELECT t1.c0, v0.c0 FROM v0, t1 GROUP BY t1.c0, v0.c0 HAVING (NOT (COUNT(CAST(AVG(COUNT(*)) AS BLOB)))) UNION ALL SELECT t1.c0, v0.c0 FROM v0, t1 GROUP BY t1.c0, v0.c0 HAVING ((COUNT(CAST(AVG(COUNT(*)) AS BLOB))) ISNULL);
SELECT vt0.c0 FROM vt0, t1;
SELECT ALL vt0.c0 FROM vt0, t1 WHERE (vt0.c0) UNION ALL SELECT vt0.c0 FROM vt0, t1 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0, t1 WHERE (((vt0.c0) ISNULL));
SELECT vt0.c0 FROM vt0, t1;
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE (CASE WHEN ((t1.c0) NOT NULL) THEN (((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))) END) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT (CASE WHEN ((t1.c0) NOT NULL) THEN (((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))) END))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE (((CASE WHEN ((t1.c0) NOT NULL) THEN (((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))) END) ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT ALL t1.c0, vt0.c0 FROM t1, vt0 GROUP BY t1.c0, vt0.c0;
SELECT ALL t1.c0, vt0.c0 FROM t1, vt0 WHERE ((- ((t1.c0 IN ())))) GROUP BY t1.c0, vt0.c0 UNION SELECT ALL t1.c0, vt0.c0 FROM t1, vt0 WHERE ((NOT ((- ((t1.c0 IN ())))))) GROUP BY t1.c0, vt0.c0 UNION SELECT ALL t1.c0, vt0.c0 FROM t1, vt0 WHERE ((((- ((t1.c0 IN ())))) ISNULL)) GROUP BY t1.c0, vt0.c0;
SELECT ALL t1.c0, vt0.c0 FROM t1, vt0 GROUP BY t1.c0, vt0.c0;
SELECT ALL t1.c0 FROM v0, t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM v0, t1 GROUP BY t1.c0 HAVING ((((TOTAL(v0.c0))>=(AVG(t1.c0)))) BETWEEN (((MIN(t1.c0)) BETWEEN (AVG(MIN(t1.c0))) AND (COUNT(*)))) AND (SUM(v0.c0))) UNION ALL SELECT t1.c0 FROM v0, t1 GROUP BY t1.c0 HAVING (NOT (((((TOTAL(v0.c0))>=(AVG(t1.c0)))) BETWEEN (((MIN(t1.c0)) BETWEEN (AVG(MIN(t1.c0))) AND (COUNT(*)))) AND (SUM(v0.c0))))) UNION ALL SELECT ALL t1.c0 FROM v0, t1 GROUP BY t1.c0 HAVING ((((((TOTAL(v0.c0))>=(AVG(t1.c0)))) BETWEEN (((MIN(t1.c0)) BETWEEN (AVG(MIN(t1.c0))) AND (COUNT(*)))) AND (SUM(v0.c0)))) ISNULL);
SELECT * FROM v0, t1, vt0;
SELECT ALL * FROM v0, t1, vt0 WHERE (((((LIKELY(t1.c0))OR(NULL)))AND(((NULL)-(v0.c0))))) UNION ALL SELECT ALL * FROM v0, t1, vt0 WHERE ((NOT (((((LIKELY(t1.c0))OR(NULL)))AND(((NULL)-(v0.c0))))))) UNION ALL SELECT ALL * FROM v0, t1, vt0 WHERE (((((((LIKELY(t1.c0))OR(NULL)))AND(((NULL)-(v0.c0))))) ISNULL));
SELECT * FROM v0, t1, vt0;
SELECT DISTINCT v0.c0, vt0.c0, t1.c0 FROM t1, vt0, v0;
SELECT DISTINCT v0.c0, vt0.c0, t1.c0 FROM t1, vt0, v0 WHERE ((((CASE WHEN v0.c0 THEN t1.c0 END))>=((((t1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) UNION SELECT DISTINCT v0.c0, vt0.c0, t1.c0 FROM t1, vt0, v0 WHERE ((NOT ((((CASE WHEN v0.c0 THEN t1.c0 END))>=((((t1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))))) UNION SELECT DISTINCT v0.c0, vt0.c0, t1.c0 FROM t1, vt0, v0 WHERE ((((((CASE WHEN v0.c0 THEN t1.c0 END))>=((((t1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) ISNULL));
SELECT DISTINCT v0.c0, vt0.c0, t1.c0 FROM t1, vt0, v0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0) NOT NULL)) NOT NULL)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) NOT NULL)) NOT NULL)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c0) NOT NULL)) NOT NULL)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL v0.c0 FROM t1, vt0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM t1, vt0, v0 GROUP BY v0.c0 HAVING COUNT((~ (GROUP_CONCAT(COUNT(*))))) UNION ALL SELECT ALL v0.c0 FROM t1, vt0, v0 GROUP BY v0.c0 HAVING (NOT (COUNT((~ (GROUP_CONCAT(COUNT(*))))))) UNION ALL SELECT v0.c0 FROM t1, vt0, v0 GROUP BY v0.c0 HAVING ((COUNT((~ (GROUP_CONCAT(COUNT(*)))))) ISNULL);
SELECT MAX(v0.c0) FROM t1, v0, vt0 ORDER BY ((((vt0.c0)=(v0.c0))) ISNULL) DESC;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 NOT INDEXED WHERE ((((NOT (vt0.c0)))OR(vt0.c0 COLLATE BINARY))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((((NOT (vt0.c0)))OR(vt0.c0 COLLATE BINARY))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((((NOT (vt0.c0)))OR(vt0.c0 COLLATE BINARY))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, t1, v0;
SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, t1, v0 WHERE (((((t1.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOTNULL)) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, t1, v0 WHERE ((NOT (((((t1.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOTNULL)))) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, t1, v0 WHERE (((((((t1.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOTNULL)) ISNULL));
SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, t1, v0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((((((((((((vt0.c0)AND(0.3203773771533336)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))) AND (((NOT (0.2610224566313234)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0)) BETWEEN ((((((((((((((vt0.c0)AND(0.3203773771533336)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))) AND (((NOT (0.2610224566313234)))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((((((((((((((vt0.c0)AND(0.3203773771533336)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))) AND (((NOT (0.2610224566313234)))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL v0.c0, vt0.c0, t1.c0 FROM vt0, t1 RIGHT OUTER JOIN v0 ON ((((((vt0.c0)AND(vt0.c0)))AND((((vt0.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))))))OR(((vt0.c0) IS TRUE))) GROUP BY v0.c0, vt0.c0, t1.c0;
SELECT v0.c0, vt0.c0, t1.c0 FROM vt0, t1 RIGHT OUTER JOIN v0 ON ((((((vt0.c0)AND(vt0.c0)))AND((((vt0.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))))))OR(((vt0.c0) IS TRUE))) GROUP BY v0.c0, vt0.c0, t1.c0 HAVING GROUP_CONCAT(GROUP_CONCAT(TOTAL(COUNT(v0.c0)))) UNION ALL SELECT ALL v0.c0, vt0.c0, t1.c0 FROM vt0, t1 RIGHT OUTER JOIN v0 ON ((((((vt0.c0)AND(vt0.c0)))AND((((vt0.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))))))OR(((vt0.c0) IS TRUE))) GROUP BY v0.c0, vt0.c0, t1.c0 HAVING (NOT (GROUP_CONCAT(GROUP_CONCAT(TOTAL(COUNT(v0.c0)))))) UNION ALL SELECT ALL v0.c0, vt0.c0, t1.c0 FROM vt0, t1 RIGHT OUTER JOIN v0 ON ((((((vt0.c0)AND(vt0.c0)))AND((((vt0.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))))))OR(((vt0.c0) IS TRUE))) GROUP BY v0.c0, vt0.c0, t1.c0 HAVING ((GROUP_CONCAT(GROUP_CONCAT(TOTAL(COUNT(v0.c0))))) ISNULL);
SELECT ALL v0.c0, vt0.c0, t1.c0 FROM v0, vt0, t1;
SELECT ALL v0.c0, vt0.c0, t1.c0 FROM v0, vt0, t1 WHERE (CAST(((v0.c0)+(t1.c0)) AS NUMERIC)) UNION ALL SELECT ALL v0.c0, vt0.c0, t1.c0 FROM v0, vt0, t1 WHERE ((NOT (CAST(((v0.c0)+(t1.c0)) AS NUMERIC)))) UNION ALL SELECT ALL v0.c0, vt0.c0, t1.c0 FROM v0, vt0, t1 WHERE (((CAST(((v0.c0)+(t1.c0)) AS NUMERIC)) ISNULL));
SELECT ALL v0.c0, vt0.c0, t1.c0 FROM v0, vt0, t1;
SELECT DISTINCT t1.c0 FROM t1, vt0;
SELECT DISTINCT t1.c0 FROM t1, vt0 WHERE ((((((((t1.c0)) NOT BETWEEN ((NULL)) AND ((t1.c0))))AND(((t1.c0) IS TRUE))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) UNION SELECT DISTINCT t1.c0 FROM t1, vt0 WHERE ((NOT ((((((((t1.c0)) NOT BETWEEN ((NULL)) AND ((t1.c0))))AND(((t1.c0) IS TRUE))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))))) UNION SELECT DISTINCT t1.c0 FROM t1, vt0 WHERE ((((((((((t1.c0)) NOT BETWEEN ((NULL)) AND ((t1.c0))))AND(((t1.c0) IS TRUE))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL));
SELECT DISTINCT t1.c0 FROM t1, vt0;
SELECT vt0.c0, t1.c0, v0.c0 FROM t1 RIGHT OUTER JOIN vt0 ON ((((((((x'e372')OR(((t1.c0) NOT NULL))))OR(t1.c0 COLLATE NOCASE)))AND((((v0.c0, t1.c0, vt0.c0, vt0.c0, t1.c0))<>(('1404178678', v0.c0, vt0.c0, v0.c0, vt0.c0))))))OR(((((((((vt0.c0)AND(v0.c0)))OR(v0.c0)))OR(vt0.c0)))AND(v0.c0)))) RIGHT OUTER JOIN v0 ON (((((t1.c0 IN ()))OR(NULL)))OR('-195161488')) GROUP BY vt0.c0, t1.c0, v0.c0;
SELECT v0.c0, vt0.c0 FROM v0, t1, vt0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0, t1, vt0 GROUP BY v0.c0, vt0.c0 HAVING SUM(COUNT(*)) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0, t1, vt0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (SUM(COUNT(*)))) UNION ALL SELECT v0.c0, vt0.c0 FROM v0, t1, vt0 GROUP BY v0.c0, vt0.c0 HAVING ((SUM(COUNT(*))) ISNULL);
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (((((('1813080141', v0.c0, v0.c0))==((v0.c0, v0.c0, v0.c0)))) IS FALSE)) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (((((('1813080141', v0.c0, v0.c0))=((v0.c0, v0.c0, v0.c0)))) IS FALSE)))) UNION ALL SELECT ALL * FROM v0 WHERE (((((((('1813080141', v0.c0, v0.c0))==((v0.c0, v0.c0, v0.c0)))) IS FALSE)) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM t1, vt0, v0;
SELECT DISTINCT * FROM t1, vt0, v0 WHERE (NULL) UNION SELECT DISTINCT * FROM t1, vt0, v0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM t1, vt0, v0 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM t1, vt0, v0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0)OR(CAST(vt0.c0 AS REAL)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0)OR(CAST(vt0.c0 AS REAL)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0)OR(CAST(vt0.c0 AS REAL)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((v0.c0)) BETWEEN ((((SUM(COUNT(*))) NOT NULL))) AND ((((v0.c0) NOT NULL)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((((v0.c0)) BETWEEN ((((SUM(COUNT(*))) NOT NULL))) AND ((((v0.c0) NOT NULL)))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((v0.c0)) BETWEEN ((((SUM(COUNT(*))) NOT NULL))) AND ((((v0.c0) NOT NULL))))) ISNULL);
SELECT ALL t1.c0, vt0.c0 FROM vt0, t1;
SELECT t1.c0, vt0.c0 FROM vt0, t1 WHERE ((((t1.c0 IN (t1.c0)))>>(t1.c0 COLLATE BINARY))) UNION ALL SELECT t1.c0, vt0.c0 FROM vt0, t1 WHERE ((NOT ((((t1.c0 IN (t1.c0)))>>(t1.c0 COLLATE BINARY))))) UNION ALL SELECT ALL t1.c0, vt0.c0 FROM vt0, t1 WHERE ((((((t1.c0 IN (t1.c0)))>>(t1.c0 COLLATE BINARY))) ISNULL));
SELECT ALL t1.c0, vt0.c0 FROM vt0, t1;
SELECT DISTINCT t1.c0 FROM t1, v0;
SELECT DISTINCT t1.c0 FROM t1, v0 WHERE (((('', NULL, t1.c0)) BETWEEN ((IFNULL(t1.c0, t1.c0), ((v0.c0)>(v0.c0)), CASE t1.c0  WHEN t1.c0 THEN '-1567557729' ELSE t1.c0 END)) AND (((+ (t1.c0)), t1.c0 COLLATE BINARY, (v0.c0 IN ()))))) UNION SELECT DISTINCT t1.c0 FROM t1, v0 WHERE ((NOT (((('', NULL, t1.c0)) BETWEEN ((IFNULL(t1.c0, t1.c0), ((v0.c0)>(v0.c0)), CASE t1.c0  WHEN t1.c0 THEN '-1567557729' ELSE t1.c0 END)) AND (((+ (t1.c0)), t1.c0 COLLATE BINARY, (v0.c0 IN ()))))))) UNION SELECT DISTINCT t1.c0 FROM t1, v0 WHERE (((((('', NULL, t1.c0)) BETWEEN ((IFNULL(t1.c0, t1.c0), ((v0.c0)>(v0.c0)), CASE t1.c0  WHEN t1.c0 THEN '-1567557729' ELSE t1.c0 END)) AND (((+ (t1.c0)), t1.c0 COLLATE BINARY, (v0.c0 IN ()))))) ISNULL));
SELECT DISTINCT t1.c0 FROM t1, v0;
SELECT v0.c0, t1.c0 FROM t1, v0 GROUP BY v0.c0, t1.c0;
SELECT ALL v0.c0, t1.c0 FROM t1, v0 WHERE (((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) COLLATE RTRIM) GROUP BY v0.c0, t1.c0 UNION SELECT ALL v0.c0, t1.c0 FROM t1, v0 WHERE ((NOT (((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) COLLATE RTRIM))) GROUP BY v0.c0, t1.c0 UNION SELECT v0.c0, t1.c0 FROM t1, v0 WHERE (((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) COLLATE RTRIM) ISNULL)) GROUP BY v0.c0, t1.c0;
SELECT v0.c0, t1.c0 FROM t1, v0 GROUP BY v0.c0, t1.c0;
SELECT ALL vt0.c0 FROM v0, t1, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, t1, vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM v0, t1, vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM v0, t1, vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM v0, t1, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, t1, vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM v0, t1, vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM v0, t1, vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM v0, t1, vt0 GROUP BY vt0.c0;
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE (((((((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))AND(((v0.c0)+(v0.c0)))))OR((~ (v0.c0)))))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)))AND((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))))) UNION ALL SELECT * FROM v0 WHERE ((NOT (((((((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))AND(((v0.c0)+(v0.c0)))))OR((~ (v0.c0)))))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)))AND((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))))))) UNION ALL SELECT * FROM v0 WHERE (((((((((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))AND(((v0.c0)+(v0.c0)))))OR((~ (v0.c0)))))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)))AND((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (CASE WHEN v0.c0 COLLATE RTRIM THEN ((v0.c0) NOT NULL) END) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (CASE WHEN v0.c0 COLLATE RTRIM THEN ((v0.c0) NOT NULL) END))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((CASE WHEN v0.c0 COLLATE RTRIM THEN ((v0.c0) NOT NULL) END) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT t1.c0, v0.c0, vt0.c0 FROM t1, vt0 NATURAL JOIN v0 GROUP BY t1.c0, v0.c0, vt0.c0;
SELECT ALL t1.c0, v0.c0, vt0.c0 FROM t1, vt0 NATURAL JOIN v0 WHERE ((- (((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))AND(t1.c0)))AND(t1.c0))))) GROUP BY t1.c0, v0.c0, vt0.c0 UNION SELECT t1.c0, v0.c0, vt0.c0 FROM t1, vt0 NATURAL JOIN v0 WHERE ((NOT ((- (((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))AND(t1.c0)))AND(t1.c0))))))) GROUP BY t1.c0, v0.c0, vt0.c0 UNION SELECT ALL t1.c0, v0.c0, vt0.c0 FROM t1, vt0 NATURAL JOIN v0 WHERE ((((- (((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))AND(t1.c0)))AND(t1.c0))))) ISNULL)) GROUP BY t1.c0, v0.c0, vt0.c0;
SELECT t1.c0, v0.c0, vt0.c0 FROM t1, vt0 NATURAL JOIN v0 GROUP BY t1.c0, v0.c0, vt0.c0;
SELECT ALL t1.c0 FROM t1, v0 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1, v0 GROUP BY t1.c0 HAVING ((((SUM(v0.c0))OR(((t1.c0)<<(v0.c0)))))OR(AVG(t1.c0))) UNION ALL SELECT ALL t1.c0 FROM t1, v0 GROUP BY t1.c0 HAVING (NOT (((((SUM(v0.c0))OR(((t1.c0)<<(v0.c0)))))OR(AVG(t1.c0))))) UNION ALL SELECT t1.c0 FROM t1, v0 GROUP BY t1.c0 HAVING ((((((SUM(v0.c0))OR(((t1.c0)<<(v0.c0)))))OR(AVG(t1.c0)))) ISNULL);
SELECT ALL t1.c0 FROM t1, v0 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1, v0 GROUP BY t1.c0 HAVING ((((SUM(v0.c0))OR(((t1.c0)<<(v0.c0)))))OR(AVG(t1.c0))) UNION ALL SELECT ALL t1.c0 FROM t1, v0 GROUP BY t1.c0 HAVING (NOT (((((SUM(v0.c0))OR(((t1.c0)<<(v0.c0)))))OR(AVG(t1.c0))))) UNION ALL SELECT t1.c0 FROM t1, v0 GROUP BY t1.c0 HAVING ((((((SUM(v0.c0))OR(((t1.c0)<<(v0.c0)))))OR(AVG(t1.c0)))) ISNULL);
SELECT ALL t1.c0 FROM t1, v0 GROUP BY t1.c0;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE ((((((- (vt0.c0)))OR(vt0.c0)))OR(((vt0.c0) NOTNULL)))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((((((- (vt0.c0)))OR(vt0.c0)))OR(((vt0.c0) NOTNULL)))))) UNION ALL SELECT * FROM vt0 WHERE ((((((((- (vt0.c0)))OR(vt0.c0)))OR(((vt0.c0) NOTNULL)))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((('-195161488'))<=((vt0.c0 COLLATE RTRIM)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((('-195161488'))<=((vt0.c0 COLLATE RTRIM)))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((('-195161488'))<=((vt0.c0 COLLATE RTRIM)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 CROSS JOIN t1 ON ((((((0.48729526297165016)IS(vt0.c0)))AND(((t1.c0) NOTNULL))))AND((vt0.c0 IN ()))) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 CROSS JOIN t1 ON ((((((0.48729526297165016)IS(vt0.c0)))AND(((t1.c0) NOTNULL))))AND((vt0.c0 IN ()))) WHERE ((((t1.c0 IN ())) ISNULL)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 CROSS JOIN t1 ON ((((((0.48729526297165016)IS(vt0.c0)))AND(((t1.c0) NOTNULL))))AND((vt0.c0 IN ()))) WHERE ((NOT ((((t1.c0 IN ())) ISNULL)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 CROSS JOIN t1 ON ((((((0.48729526297165016)IS(vt0.c0)))AND(((t1.c0) NOTNULL))))AND((vt0.c0 IN ()))) WHERE ((((((t1.c0 IN ())) ISNULL)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 CROSS JOIN t1 ON ((((((0.48729526297165016)IS(vt0.c0)))AND(((t1.c0) NOTNULL))))AND((vt0.c0 IN ()))) GROUP BY vt0.c0;
SELECT v0.c0, t1.c0 FROM v0, t1 GROUP BY v0.c0, t1.c0;
SELECT v0.c0, t1.c0 FROM v0, t1 GROUP BY v0.c0, t1.c0 HAVING ((COUNT(MIN(v0.c0)))||(GROUP_CONCAT(v0.c0))) UNION ALL SELECT ALL v0.c0, t1.c0 FROM v0, t1 GROUP BY v0.c0, t1.c0 HAVING (NOT (((COUNT(MIN(v0.c0)))||(GROUP_CONCAT(v0.c0))))) UNION ALL SELECT v0.c0, t1.c0 FROM v0, t1 GROUP BY v0.c0, t1.c0 HAVING ((((COUNT(MIN(v0.c0)))||(GROUP_CONCAT(v0.c0)))) ISNULL);
SELECT * FROM v0, vt0;
SELECT * FROM v0, vt0 WHERE (((((v0.c0)<(v0.c0))) IS FALSE)) UNION ALL SELECT ALL * FROM v0, vt0 WHERE ((NOT (((((v0.c0)<(v0.c0))) IS FALSE)))) UNION ALL SELECT * FROM v0, vt0 WHERE (((((((v0.c0)<(v0.c0))) IS FALSE)) ISNULL));
SELECT * FROM v0, vt0;
SELECT DISTINCT * FROM t1 LEFT OUTER JOIN vt0 ON CASE WHEN COALESCE(vt0.c0, vt0.c0) THEN ((vt0.c0)&(vt0.c0)) END;
SELECT DISTINCT * FROM t1 LEFT OUTER JOIN vt0 ON CASE WHEN COALESCE(vt0.c0, vt0.c0) THEN ((vt0.c0)&(vt0.c0)) END WHERE (((vt0.c0) BETWEEN (t1.c0) AND (vt0.c0)) COLLATE BINARY) UNION SELECT DISTINCT * FROM t1 LEFT OUTER JOIN vt0 ON CASE WHEN COALESCE(vt0.c0, vt0.c0) THEN ((vt0.c0)&(vt0.c0)) END WHERE ((NOT (((vt0.c0) BETWEEN (t1.c0) AND (vt0.c0)) COLLATE BINARY))) UNION SELECT DISTINCT * FROM t1 LEFT OUTER JOIN vt0 ON CASE WHEN COALESCE(vt0.c0, vt0.c0) THEN ((vt0.c0)&(vt0.c0)) END WHERE (((((vt0.c0) BETWEEN (t1.c0) AND (vt0.c0)) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM t1 LEFT OUTER JOIN vt0 ON CASE WHEN COALESCE(vt0.c0, vt0.c0) THEN ((vt0.c0)&(vt0.c0)) END;
SELECT vt0.c0, v0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON ((CASE WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) NOT BETWEEN (((v0.c0)*(x'2a50'))) AND ((v0.c0 IN ()))) GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON ((CASE WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) NOT BETWEEN (((v0.c0)*(x'2a50'))) AND ((v0.c0 IN ()))) WHERE (((CAST(v0.c0 AS NUMERIC))LIKE(((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))))) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON ((CASE WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) NOT BETWEEN (((v0.c0)*(x'2a50'))) AND ((v0.c0 IN ()))) WHERE ((NOT (((CAST(v0.c0 AS NUMERIC))LIKE(((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))))))) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON ((CASE WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) NOT BETWEEN (((v0.c0)*(x'2a50'))) AND ((v0.c0 IN ()))) WHERE (((((CAST(v0.c0 AS NUMERIC))LIKE(((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))))) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON ((CASE WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) NOT BETWEEN (((v0.c0)*(x'2a50'))) AND ((v0.c0 IN ()))) GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM t1, vt0 RIGHT OUTER JOIN v0 ON v0.c0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM t1, vt0 RIGHT OUTER JOIN v0 ON v0.c0 GROUP BY vt0.c0, v0.c0 HAVING ABS(SUM(SUM(v0.c0))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM t1, vt0 RIGHT OUTER JOIN v0 ON v0.c0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (ABS(SUM(SUM(v0.c0))))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM t1, vt0 RIGHT OUTER JOIN v0 ON v0.c0 GROUP BY vt0.c0, v0.c0 HAVING ((ABS(SUM(SUM(v0.c0)))) ISNULL);
SELECT t1.c0, vt0.c0 FROM v0, vt0 RIGHT OUTER JOIN t1 ON (+ (((vt0.c0)+(t1.c0))));
SELECT ALL t1.c0, vt0.c0 FROM v0, vt0 RIGHT OUTER JOIN t1 ON (+ (((vt0.c0)+(t1.c0)))) WHERE (CASE CHANGES()  WHEN t1.c0 COLLATE BINARY THEN t1.c0 END) UNION ALL SELECT t1.c0, vt0.c0 FROM v0, vt0 RIGHT OUTER JOIN t1 ON (+ (((vt0.c0)+(t1.c0)))) WHERE ((NOT (CASE CHANGES()  WHEN t1.c0 COLLATE BINARY THEN t1.c0 END))) UNION ALL SELECT t1.c0, vt0.c0 FROM v0, vt0 RIGHT OUTER JOIN t1 ON (+ (((vt0.c0)+(t1.c0)))) WHERE (((CASE CHANGES()  WHEN t1.c0 COLLATE BINARY THEN t1.c0 END) ISNULL));
SELECT t1.c0, vt0.c0 FROM v0, vt0 RIGHT OUTER JOIN t1 ON (+ (((vt0.c0)+(t1.c0))));
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((((v0.c0) BETWEEN (0.7935469113601816) AND (v0.c0)))/(((((v0.c0)OR(v0.c0)))OR(v0.c0))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((v0.c0) BETWEEN (0.7935469113601816) AND (v0.c0)))/(((((v0.c0)OR(v0.c0)))OR(v0.c0))))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((v0.c0) BETWEEN (0.7935469113601816) AND (v0.c0)))/(((((v0.c0)OR(v0.c0)))OR(v0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt0 WHERE (CAST(UNLIKELY(v0.c0) AS TEXT)) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, vt0 WHERE ((NOT (CAST(UNLIKELY(v0.c0) AS TEXT)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, vt0 WHERE (((CAST(UNLIKELY(v0.c0) AS TEXT)) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT ALL t1.c0 FROM v0 INNER JOIN t1 ON ((((t1.c0) NOT NULL))||(((t1.c0)||(v0.c0)))) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM v0 INNER JOIN t1 ON ((((t1.c0) NOT NULL))||(((t1.c0)||(v0.c0)))) GROUP BY t1.c0 HAVING (((AVG(MIN(0.042749633154791744))))>=((GROUP_CONCAT(COUNT(*))))) UNION ALL SELECT ALL t1.c0 FROM v0 INNER JOIN t1 ON ((((t1.c0) NOT NULL))||(((t1.c0)||(v0.c0)))) GROUP BY t1.c0 HAVING (NOT ((((AVG(MIN(0.042749633154791744))))>=((GROUP_CONCAT(COUNT(*))))))) UNION ALL SELECT ALL t1.c0 FROM v0 INNER JOIN t1 ON ((((t1.c0) NOT NULL))||(((t1.c0)||(v0.c0)))) GROUP BY t1.c0 HAVING (((((AVG(MIN(0.042749633154791744))))>=((GROUP_CONCAT(COUNT(*)))))) ISNULL);
SELECT * FROM vt0 FULL OUTER JOIN t1 ON (((0.7384998864199245) NOT BETWEEN (t1.c0) AND (vt0.c0)) IN ());
SELECT ALL * FROM vt0 FULL OUTER JOIN t1 ON (((0.7384998864199245) NOT BETWEEN (t1.c0) AND (vt0.c0)) IN ()) WHERE (x'79f1') UNION ALL SELECT * FROM vt0 FULL OUTER JOIN t1 ON (((0.7384998864199245) NOT BETWEEN (t1.c0) AND (vt0.c0)) IN ()) WHERE ((NOT (x'79f1'))) UNION ALL SELECT * FROM vt0 FULL OUTER JOIN t1 ON (((0.7384998864199245) NOT BETWEEN (t1.c0) AND (vt0.c0)) IN ()) WHERE (((x'79f1') ISNULL));
SELECT * FROM vt0 FULL OUTER JOIN t1 ON (((0.7384998864199245) NOT BETWEEN (t1.c0) AND (vt0.c0)) IN ());
SELECT DISTINCT * FROM t1, v0;
SELECT DISTINCT * FROM t1, v0 WHERE (((NULL) BETWEEN (t1.c0) AND (v0.c0)) COLLATE NOCASE) UNION SELECT DISTINCT * FROM t1, v0 WHERE ((NOT (((NULL) BETWEEN (t1.c0) AND (v0.c0)) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM t1, v0 WHERE (((((NULL) BETWEEN (t1.c0) AND (v0.c0)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM t1, v0;
SELECT t1.c0, vt0.c0 FROM v0, vt0, t1 GROUP BY t1.c0, vt0.c0;
SELECT ALL t1.c0, vt0.c0 FROM v0 NOT INDEXED, vt0, t1 WHERE (((t1.c0 COLLATE NOCASE)==((v0.c0 IN ())))) GROUP BY t1.c0, vt0.c0 UNION SELECT ALL t1.c0, vt0.c0 FROM v0, vt0, t1 WHERE ((NOT (((t1.c0 COLLATE NOCASE)==((v0.c0 IN ())))))) GROUP BY t1.c0, vt0.c0 UNION SELECT ALL t1.c0, vt0.c0 FROM v0, vt0, t1 WHERE (((((t1.c0 COLLATE NOCASE)=((v0.c0 IN ())))) ISNULL)) GROUP BY t1.c0, vt0.c0;
SELECT t1.c0, vt0.c0 FROM v0, vt0, t1 GROUP BY t1.c0, vt0.c0;
SELECT ALL t1.c0, v0.c0 FROM t1, v0 GROUP BY t1.c0, v0.c0;
SELECT ALL t1.c0, v0.c0 FROM t1, v0 GROUP BY t1.c0, v0.c0 HAVING CASE AVG(v0.c0)  WHEN 0.3734807153055869 THEN MAX(MIN(COUNT(AVG(t1.c0)))) WHEN SUM(t1.c0) THEN TOTAL(AVG(TOTAL(v0.c0))) WHEN (SUM(MAX(0.9163787689232884)) IN ()) THEN TOTAL(TOTAL(t1.c0)) ELSE AVG(SUM(MIN(COUNT(COUNT(t1.c0))))) END UNION ALL SELECT ALL t1.c0, v0.c0 FROM t1, v0 GROUP BY t1.c0, v0.c0 HAVING (NOT (CASE AVG(v0.c0)  WHEN 0.3734807153055869 THEN MAX(MIN(COUNT(AVG(t1.c0)))) WHEN SUM(t1.c0) THEN TOTAL(AVG(TOTAL(v0.c0))) WHEN (SUM(MAX(0.9163787689232884)) IN ()) THEN TOTAL(TOTAL(t1.c0)) ELSE AVG(SUM(MIN(COUNT(COUNT(t1.c0))))) END)) UNION ALL SELECT t1.c0, v0.c0 FROM t1, v0 GROUP BY t1.c0, v0.c0 HAVING ((CASE AVG(v0.c0)  WHEN 0.3734807153055869 THEN MAX(MIN(COUNT(AVG(t1.c0)))) WHEN SUM(t1.c0) THEN TOTAL(AVG(TOTAL(v0.c0))) WHEN (SUM(MAX(0.9163787689232884)) IN ()) THEN TOTAL(TOTAL(t1.c0)) ELSE AVG(SUM(MIN(COUNT(COUNT(t1.c0))))) END) ISNULL);
SELECT ALL * FROM vt0, v0;
SELECT ALL * FROM vt0, v0 WHERE ((CASE WHEN vt0.c0 THEN v0.c0 ELSE NULL END IN ())) UNION ALL SELECT * FROM vt0, v0 WHERE ((NOT ((CASE WHEN vt0.c0 THEN v0.c0 ELSE NULL END IN ())))) UNION ALL SELECT ALL * FROM vt0, v0 WHERE ((((CASE WHEN vt0.c0 THEN v0.c0 ELSE NULL END IN ())) ISNULL));
SELECT ALL * FROM vt0, v0;
SELECT DISTINCT v0.c0, t1.c0 FROM vt0 FULL OUTER JOIN t1 ON vt0.c0 INNER JOIN v0 ON ((vt0.c0 COLLATE RTRIM) NOT BETWEEN (CASE t1.c0  WHEN v0.c0 THEN t1.c0 END) AND ((v0.c0 IN (t1.c0, vt0.c0))));
SELECT DISTINCT v0.c0, t1.c0 FROM vt0 FULL OUTER JOIN t1 ON vt0.c0 INNER JOIN v0 ON ((vt0.c0 COLLATE RTRIM) NOT BETWEEN (CASE t1.c0  WHEN v0.c0 THEN t1.c0 END) AND ((v0.c0 IN (t1.c0, vt0.c0)))) WHERE (UPPER(DISTINCT ((v0.c0)!=(t1.c0)))) UNION SELECT DISTINCT v0.c0, t1.c0 FROM vt0 FULL OUTER JOIN t1 ON vt0.c0 INNER JOIN v0 ON ((vt0.c0 COLLATE RTRIM) NOT BETWEEN (CASE t1.c0  WHEN v0.c0 THEN t1.c0 END) AND ((v0.c0 IN (t1.c0, vt0.c0)))) WHERE ((NOT (UPPER(DISTINCT ((v0.c0)<>(t1.c0)))))) UNION SELECT DISTINCT v0.c0, t1.c0 FROM vt0 FULL OUTER JOIN t1 ON vt0.c0 INNER JOIN v0 ON ((vt0.c0 COLLATE RTRIM) NOT BETWEEN (CASE t1.c0  WHEN v0.c0 THEN t1.c0 END) AND ((v0.c0 IN (t1.c0, vt0.c0)))) WHERE (((UPPER(DISTINCT ((v0.c0)<>(t1.c0)))) ISNULL));
SELECT DISTINCT v0.c0, t1.c0 FROM vt0 FULL OUTER JOIN t1 ON vt0.c0 INNER JOIN v0 ON ((vt0.c0 COLLATE RTRIM) NOT BETWEEN (CASE t1.c0  WHEN v0.c0 THEN t1.c0 END) AND ((v0.c0 IN (t1.c0, vt0.c0))));
SELECT ALL t1.c0 FROM t1, v0 LEFT OUTER JOIN vt0 ON (v0.c0 IN ()) COLLATE BINARY GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1, v0 LEFT OUTER JOIN vt0 ON (v0.c0 IN ()) COLLATE BINARY WHERE (CAST(((t1.c0)GLOB(v0.c0)) AS BLOB)) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1, v0 LEFT OUTER JOIN vt0 ON (v0.c0 IN ()) COLLATE BINARY WHERE ((NOT (CAST(((t1.c0)GLOB(v0.c0)) AS BLOB)))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1, v0 LEFT OUTER JOIN vt0 ON (v0.c0 IN ()) COLLATE BINARY WHERE (((CAST(((t1.c0)GLOB(v0.c0)) AS BLOB)) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1, v0 LEFT OUTER JOIN vt0 ON (v0.c0 IN ()) COLLATE BINARY GROUP BY t1.c0;
SELECT t1.c0 FROM t1, vt0 GROUP BY t1.c0;
SELECT t1.c0 FROM t1, vt0 GROUP BY t1.c0 HAVING ((MIN(GROUP_CONCAT(t1.c0))) IS FALSE) UNION ALL SELECT ALL t1.c0 FROM t1, vt0 GROUP BY t1.c0 HAVING (NOT (((MIN(GROUP_CONCAT(t1.c0))) IS FALSE))) UNION ALL SELECT ALL t1.c0 FROM t1, vt0 GROUP BY t1.c0 HAVING ((((MIN(GROUP_CONCAT(t1.c0))) IS FALSE)) ISNULL);
SELECT * FROM v0, vt0;
SELECT * FROM v0, vt0 WHERE (TRIM(((vt0.c0)GLOB(v0.c0)))) UNION ALL SELECT * FROM v0, vt0 WHERE ((NOT (TRIM(((vt0.c0)GLOB(v0.c0)))))) UNION ALL SELECT ALL * FROM v0, vt0 WHERE (((TRIM(((vt0.c0)GLOB(v0.c0)))) ISNULL));
SELECT * FROM v0, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c0 COLLATE RTRIM)) AND (((vt0.c0 IN ()))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((vt0.c0)) BETWEEN ((vt0.c0 COLLATE RTRIM)) AND (((vt0.c0 IN ()))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0 COLLATE RTRIM)) AND (((vt0.c0 IN ()))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT v0.c0 FROM t1, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM t1, v0 WHERE (((((t1.c0) BETWEEN (t1.c0) AND (v0.c0))) ISNULL)) GROUP BY v0.c0 UNION SELECT v0.c0 FROM t1, v0 WHERE ((NOT (((((t1.c0) BETWEEN (t1.c0) AND (v0.c0))) ISNULL)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM t1, v0 WHERE (((((((t1.c0) BETWEEN (t1.c0) AND (v0.c0))) ISNULL)) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM t1, v0 GROUP BY v0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT(GROUP_CONCAT(GROUP_CONCAT(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(GROUP_CONCAT(GROUP_CONCAT(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(GROUP_CONCAT(GROUP_CONCAT(vt0.c0)))) ISNULL);
SELECT t1.c0 FROM v0, t1;
SELECT ALL t1.c0 FROM v0, t1 WHERE (PRINTF((NOT (t1.c0)))) UNION ALL SELECT t1.c0 FROM v0, t1 WHERE ((NOT (PRINTF((NOT (t1.c0)))))) UNION ALL SELECT ALL t1.c0 FROM v0, t1 NOT INDEXED WHERE (((PRINTF((NOT (t1.c0)))) ISNULL));
SELECT t1.c0 FROM v0, t1;
SELECT DISTINCT v0.c0 FROM v0, t1, vt0;
SELECT DISTINCT v0.c0 FROM v0, t1, vt0 WHERE (2.04063305E9) UNION SELECT DISTINCT v0.c0 FROM v0, t1, vt0 WHERE ((NOT (2.04063305E9))) UNION SELECT DISTINCT v0.c0 FROM v0, t1, vt0 WHERE (((2.04063305E9) ISNULL));
SELECT DISTINCT v0.c0 FROM v0, t1, vt0;
SELECT ALL vt0.c0, t1.c0 FROM t1, vt0 GROUP BY vt0.c0, t1.c0;
SELECT ALL vt0.c0, t1.c0 FROM t1, vt0 WHERE (((((t1.c0)%(vt0.c0)))+(t1.c0 COLLATE NOCASE))) GROUP BY vt0.c0, t1.c0 UNION SELECT ALL vt0.c0, t1.c0 FROM t1, vt0 WHERE ((NOT (((((t1.c0)%(vt0.c0)))+(t1.c0 COLLATE NOCASE))))) GROUP BY vt0.c0, t1.c0 UNION SELECT ALL vt0.c0, t1.c0 FROM t1, vt0 WHERE (((((((t1.c0)%(vt0.c0)))+(t1.c0 COLLATE NOCASE))) ISNULL)) GROUP BY vt0.c0, t1.c0;
SELECT ALL vt0.c0, t1.c0 FROM t1, vt0 GROUP BY vt0.c0, t1.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING MAX(AVG(vt0.c0)) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (MAX(AVG(vt0.c0)))) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING ((MAX(AVG(vt0.c0))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (((vt0.c0)|(vt0.c0))) AND (NULL))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (((vt0.c0)|(vt0.c0))) AND (NULL))))) UNION ALL SELECT * FROM vt0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (((vt0.c0)|(vt0.c0))) AND (NULL))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN t1 ON CASE ((vt0.c0) IS TRUE)  WHEN UPPER(vt0.c0) THEN vt0.c0 ELSE CAST(vt0.c0 AS INTEGER) END FULL OUTER JOIN v0 ON CASE WHEN ((((t1.c0)OR(0.7286584555249492)))AND(v0.c0)) THEN ((vt0.c0) BETWEEN (v0.c0) AND (t1.c0)) END;
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN t1 ON CASE ((vt0.c0) IS TRUE)  WHEN UPPER(vt0.c0) THEN vt0.c0 ELSE CAST(vt0.c0 AS INTEGER) END FULL OUTER JOIN v0 ON CASE WHEN ((((t1.c0)OR(0.7286584555249492)))AND(v0.c0)) THEN ((vt0.c0) BETWEEN (v0.c0) AND (t1.c0)) END WHERE ((~ (((0Xffffffffe150584e) NOT BETWEEN (v0.c0) AND (t1.c0))))) UNION SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN t1 ON CASE ((vt0.c0) IS TRUE)  WHEN UPPER(vt0.c0) THEN vt0.c0 ELSE CAST(vt0.c0 AS INTEGER) END FULL OUTER JOIN v0 ON CASE WHEN ((((t1.c0)OR(0.7286584555249492)))AND(v0.c0)) THEN ((vt0.c0) BETWEEN (v0.c0) AND (t1.c0)) END WHERE ((NOT ((~ (((0Xffffffffe150584e) NOT BETWEEN (v0.c0) AND (t1.c0))))))) UNION SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN t1 ON CASE ((vt0.c0) IS TRUE)  WHEN UPPER(vt0.c0) THEN vt0.c0 ELSE CAST(vt0.c0 AS INTEGER) END FULL OUTER JOIN v0 ON CASE WHEN ((((t1.c0)OR(0.7286584555249492)))AND(v0.c0)) THEN ((vt0.c0) BETWEEN (v0.c0) AND (t1.c0)) END WHERE ((((~ (((0xffffffffe150584e) NOT BETWEEN (v0.c0) AND (t1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN t1 ON CASE ((vt0.c0) IS TRUE)  WHEN UPPER(vt0.c0) THEN vt0.c0 ELSE CAST(vt0.c0 AS INTEGER) END FULL OUTER JOIN v0 ON CASE WHEN ((((t1.c0)OR(0.7286584555249492)))AND(v0.c0)) THEN ((vt0.c0) BETWEEN (v0.c0) AND (t1.c0)) END;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0 WHERE ((((v0.c0 IN ()))/((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, vt0 WHERE ((NOT ((((v0.c0 IN ()))/((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, vt0 WHERE ((((((v0.c0 IN ()))/((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING SUM((+ (MIN(MIN(MIN(MAX(MIN(GROUP_CONCAT(COUNT(MAX(t1.c0))))))))))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (SUM((+ (MIN(MIN(MIN(MAX(MIN(GROUP_CONCAT(COUNT(MAX(t1.c0))))))))))))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((SUM((+ (MIN(MIN(MIN(MAX(MIN(GROUP_CONCAT(COUNT(MAX(t1.c0)))))))))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0, t1;
SELECT vt0.c0 FROM vt0, t1 WHERE (((((NULL)OR(0.7749189713887392))) NOT BETWEEN (((t1.c0) BETWEEN (t1.c0) AND (t1.c0))) AND (0.5473332450899007))) UNION ALL SELECT vt0.c0 FROM vt0, t1 WHERE ((NOT (((((NULL)OR(0.7749189713887392))) NOT BETWEEN (((t1.c0) BETWEEN (t1.c0) AND (t1.c0))) AND (0.5473332450899007))))) UNION ALL SELECT ALL vt0.c0 FROM vt0, t1 WHERE (((((((NULL)OR(0.7749189713887392))) NOT BETWEEN (((t1.c0) BETWEEN (t1.c0) AND (t1.c0))) AND (0.5473332450899007))) ISNULL));
SELECT ALL vt0.c0 FROM vt0, t1;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))<=(NULLIF(v0.c0, v0.c0)))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))<=(NULLIF(v0.c0, v0.c0)))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))<=(NULLIF(v0.c0, v0.c0)))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL t1.c0, v0.c0, vt0.c0 FROM vt0, v0, t1 GROUP BY t1.c0, v0.c0, vt0.c0;
SELECT ALL t1.c0, v0.c0, vt0.c0 FROM vt0, v0, t1 WHERE (x'' COLLATE NOCASE) GROUP BY t1.c0, v0.c0, vt0.c0 UNION SELECT t1.c0, v0.c0, vt0.c0 FROM vt0, v0, t1 WHERE ((NOT (x'' COLLATE NOCASE))) GROUP BY t1.c0, v0.c0, vt0.c0 UNION SELECT ALL t1.c0, v0.c0, vt0.c0 FROM vt0, v0, t1 WHERE (((x'' COLLATE NOCASE) ISNULL)) GROUP BY t1.c0, v0.c0, vt0.c0;
SELECT ALL t1.c0, v0.c0, vt0.c0 FROM vt0, v0, t1 GROUP BY t1.c0, v0.c0, vt0.c0;
SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING ((MAX(vt0.c0)) BETWEEN (SUM(MAX(MIN(COUNT(*))))) AND (AVG(COUNT(*)))) UNION ALL SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING (NOT (((MAX(vt0.c0)) BETWEEN (SUM(MAX(MIN(COUNT(*))))) AND (AVG(COUNT(*)))))) UNION ALL SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING ((((MAX(vt0.c0)) BETWEEN (SUM(MAX(MIN(COUNT(*))))) AND (AVG(COUNT(*))))) ISNULL);
SELECT vt0.c0 FROM t1, v0, vt0;
SELECT vt0.c0 FROM t1, v0, vt0 WHERE (LTRIM(((((((((((((v0.c0)OR(vt0.c0)))AND(0.8521503640046235)))AND(t1.c0)))OR(t1.c0)))AND(v0.c0)))AND(vt0.c0)), (v0.c0 IN (vt0.c0, vt0.c0)))) UNION ALL SELECT vt0.c0 FROM t1, v0, vt0 WHERE ((NOT (LTRIM(((((((((((((v0.c0)OR(vt0.c0)))AND(0.8521503640046235)))AND(t1.c0)))OR(t1.c0)))AND(v0.c0)))AND(vt0.c0)), (v0.c0 IN (vt0.c0, vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM t1, v0, vt0 WHERE (((LTRIM(((((((((((((v0.c0)OR(vt0.c0)))AND(0.8521503640046235)))AND(t1.c0)))OR(t1.c0)))AND(v0.c0)))AND(vt0.c0)), (v0.c0 IN (vt0.c0, vt0.c0)))) ISNULL));
SELECT vt0.c0 FROM t1, v0, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((+ (CAST(vt0.c0 AS NUMERIC)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((+ (CAST(vt0.c0 AS NUMERIC)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((+ (CAST(vt0.c0 AS NUMERIC)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL v0.c0 FROM t1 RIGHT OUTER JOIN v0 ON LENGTH(CAST(t1.c0 AS NUMERIC)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM t1 RIGHT OUTER JOIN v0 ON LENGTH(CAST(t1.c0 AS NUMERIC)) WHERE (CASE WHEN (((v0.c0))>((v0.c0))) THEN ((v0.c0)LIKE(-1.17928732E8)) ELSE ((t1.c0)/(t1.c0)) END) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM t1 RIGHT OUTER JOIN v0 ON LENGTH(CAST(t1.c0 AS NUMERIC)) WHERE ((NOT (CASE WHEN (((v0.c0))>((v0.c0))) THEN ((v0.c0)LIKE(-1.17928732E8)) ELSE ((t1.c0)/(t1.c0)) END))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM t1 RIGHT OUTER JOIN v0 ON LENGTH(CAST(t1.c0 AS NUMERIC)) WHERE (((CASE WHEN (((v0.c0))>((v0.c0))) THEN ((v0.c0)LIKE(-1.17928732E8)) ELSE ((t1.c0)/(t1.c0)) END) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM t1 RIGHT OUTER JOIN v0 ON LENGTH(CAST(t1.c0 AS NUMERIC)) GROUP BY v0.c0;
SELECT v0.c0, t1.c0 FROM vt0, v0, t1 GROUP BY v0.c0, t1.c0;
SELECT v0.c0, t1.c0 FROM vt0, v0, t1 GROUP BY v0.c0, t1.c0 HAVING TOTAL(((((COUNT(*))OR(vt0.c0)))AND(0x1b023a53))) UNION ALL SELECT ALL v0.c0, t1.c0 FROM vt0, v0, t1 GROUP BY v0.c0, t1.c0 HAVING (NOT (TOTAL(((((COUNT(*))OR(vt0.c0)))AND(0x1b023a53))))) UNION ALL SELECT ALL v0.c0, t1.c0 FROM vt0, v0, t1 GROUP BY v0.c0, t1.c0 HAVING ((TOTAL(((((COUNT(*))OR(vt0.c0)))AND(0x1b023a53)))) ISNULL);
SELECT ALL v0.c0 FROM vt0, v0;
SELECT ALL v0.c0 FROM vt0, v0 WHERE (((vt0.c0 IN ()) IN ())) UNION ALL SELECT ALL v0.c0 FROM vt0, v0 WHERE ((NOT (((vt0.c0 IN ()) IN ())))) UNION ALL SELECT ALL v0.c0 FROM vt0, v0 WHERE (((((vt0.c0 IN ()) IN ())) ISNULL));
SELECT ALL v0.c0 FROM vt0, v0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (x'') UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (x''))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((x'') ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE ((((t1.c0)==(t1.c0)) IN ())) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT ((((t1.c0)=(t1.c0)) IN ())))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((((((t1.c0)=(t1.c0)) IN ())) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT v0.c0, t1.c0 FROM vt0 CROSS JOIN v0 ON x'' CROSS JOIN t1 ON CAST(CAST(v0.c0 AS NUMERIC) AS REAL) GROUP BY v0.c0, t1.c0;
SELECT v0.c0, t1.c0 FROM vt0 CROSS JOIN v0 ON x'' CROSS JOIN t1 ON CAST(CAST(v0.c0 AS NUMERIC) AS REAL) GROUP BY v0.c0, t1.c0 HAVING ((((v0.c0)IS NOT(TOTAL(SUM(COUNT(*)))))) NOT BETWEEN (SUM(t1.c0)) AND ((t1.c0 IN ()))) UNION ALL SELECT ALL v0.c0, t1.c0 FROM vt0 CROSS JOIN v0 ON x'' CROSS JOIN t1 ON CAST(CAST(v0.c0 AS NUMERIC) AS REAL) GROUP BY v0.c0, t1.c0 HAVING (NOT (((((v0.c0)IS NOT(TOTAL(SUM(COUNT(*)))))) NOT BETWEEN (SUM(t1.c0)) AND ((t1.c0 IN ()))))) UNION ALL SELECT ALL v0.c0, t1.c0 FROM vt0 CROSS JOIN v0 ON x'' CROSS JOIN t1 ON CAST(CAST(v0.c0 AS NUMERIC) AS REAL) GROUP BY v0.c0, t1.c0 HAVING ((((((v0.c0)IS NOT(TOTAL(SUM(COUNT(*)))))) NOT BETWEEN (SUM(t1.c0)) AND ((t1.c0 IN ())))) ISNULL);
SELECT * FROM vt0 FULL OUTER JOIN v0 ON ((((((t1.c0)OR(v0.c0)))OR(v0.c0)))<<(x'')) CROSS JOIN t1 ON ((((((((CASE v0.c0  WHEN vt0.c0 THEN 0.8670226355506757 WHEN t1.c0 THEN t1.c0 WHEN v0.c0 THEN v0.c0 ELSE t1.c0 END)OR(((v0.c0) ISNULL))))OR((((v0.c0, t1.c0, v0.c0))==((t1.c0, vt0.c0, vt0.c0))))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t1.c0)))))AND(LIKELIHOOD(DISTINCT t1.c0, 0.8722394926925333)));
SELECT DISTINCT * FROM t1, vt0, v0;
SELECT DISTINCT * FROM t1, vt0, v0 WHERE (((((vt0.c0) BETWEEN (v0.c0) AND (t1.c0)))GLOB(((((t1.c0)AND(t1.c0)))OR(vt0.c0))))) UNION SELECT DISTINCT * FROM t1, vt0, v0 WHERE ((NOT (((((vt0.c0) BETWEEN (v0.c0) AND (t1.c0)))GLOB(((((t1.c0)AND(t1.c0)))OR(vt0.c0))))))) UNION SELECT DISTINCT * FROM t1, vt0, v0 WHERE (((((((vt0.c0) BETWEEN (v0.c0) AND (t1.c0)))GLOB(((((t1.c0)AND(t1.c0)))OR(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM t1, vt0, v0;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 WHERE ((((vt0.c0 IN ())) NOT BETWEEN ((+ (v0.c0))) AND (CAST(vt0.c0 AS BLOB)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt0, v0 WHERE ((NOT ((((vt0.c0 IN ())) NOT BETWEEN ((+ (v0.c0))) AND (CAST(vt0.c0 AS BLOB)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt0, v0 WHERE ((((((vt0.c0 IN ())) NOT BETWEEN ((+ (v0.c0))) AND (CAST(vt0.c0 AS BLOB)))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (~ (MAX(t1.c0))) COLLATE BINARY UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT ((~ (MAX(t1.c0))) COLLATE BINARY)) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (((~ (MAX(t1.c0))) COLLATE BINARY) ISNULL);
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (~ (MAX(t1.c0))) COLLATE BINARY UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT ((~ (MAX(t1.c0))) COLLATE BINARY)) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (((~ (MAX(t1.c0))) COLLATE BINARY) ISNULL);
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL MAX((- (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))) FROM v0;
SELECT t1.c0, v0.c0 FROM t1, v0;
SELECT t1.c0, v0.c0 FROM t1, v0 WHERE (CASE v0.c0  WHEN NULL THEN t1.c0 END) UNION ALL SELECT t1.c0, v0.c0 FROM t1, v0 WHERE ((NOT (CASE v0.c0  WHEN NULL THEN t1.c0 END))) UNION ALL SELECT t1.c0, v0.c0 FROM t1, v0 WHERE (((CASE v0.c0  WHEN NULL THEN t1.c0 END) ISNULL));
SELECT t1.c0, v0.c0 FROM t1, v0;
SELECT DISTINCT t1.c0, v0.c0, vt0.c0 FROM t1, vt0, v0;
SELECT DISTINCT t1.c0, v0.c0, vt0.c0 FROM t1, vt0, v0 WHERE ((~ ((((v0.c0))>=((t1.c0)))))) UNION SELECT DISTINCT t1.c0, v0.c0, vt0.c0 FROM t1, vt0, v0 WHERE ((NOT ((~ ((((v0.c0))>=((t1.c0)))))))) UNION SELECT DISTINCT t1.c0, v0.c0, vt0.c0 FROM t1, vt0, v0 WHERE ((((~ ((((v0.c0))>=((t1.c0)))))) ISNULL));
SELECT DISTINCT t1.c0, v0.c0, vt0.c0 FROM t1, vt0, v0;
SELECT ALL t1.c0, v0.c0 FROM t1 INNER JOIN v0 ON CAST(NULL COLLATE BINARY AS BLOB) INNER JOIN vt0 ON (((t1.c0) BETWEEN (v0.c0) AND (vt0.c0)) IN ()) GROUP BY t1.c0, v0.c0;
SELECT ALL t1.c0, v0.c0 FROM t1 INNER JOIN v0 ON CAST(NULL COLLATE BINARY AS BLOB) INNER JOIN vt0 ON (((t1.c0) BETWEEN (v0.c0) AND (vt0.c0)) IN ()) WHERE (CASE WHEN ((t1.c0) NOTNULL) THEN CAST(t1.c0 AS TEXT) ELSE (- (t1.c0)) END) GROUP BY t1.c0, v0.c0 UNION SELECT t1.c0, v0.c0 FROM t1 INNER JOIN v0 ON CAST(NULL COLLATE BINARY AS BLOB) INNER JOIN vt0 ON (((t1.c0) BETWEEN (v0.c0) AND (vt0.c0)) IN ()) WHERE ((NOT (CASE WHEN ((t1.c0) NOTNULL) THEN CAST(t1.c0 AS TEXT) ELSE (- (t1.c0)) END))) GROUP BY t1.c0, v0.c0 UNION SELECT t1.c0, v0.c0 FROM t1 INNER JOIN v0 ON CAST(NULL COLLATE BINARY AS BLOB) INNER JOIN vt0 ON (((t1.c0) BETWEEN (v0.c0) AND (vt0.c0)) IN ()) WHERE (((CASE WHEN ((t1.c0) NOTNULL) THEN CAST(t1.c0 AS TEXT) ELSE (- (t1.c0)) END) ISNULL)) GROUP BY t1.c0, v0.c0;
SELECT ALL t1.c0, v0.c0 FROM t1 INNER JOIN v0 ON CAST(NULL COLLATE BINARY AS BLOB) INNER JOIN vt0 ON (((t1.c0) BETWEEN (v0.c0) AND (vt0.c0)) IN ()) GROUP BY t1.c0, v0.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (((t1.c0)) NOT BETWEEN ((CAST(t1.c0 AS TEXT))) AND ((COUNT(*)))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT ((((t1.c0)) NOT BETWEEN ((CAST(t1.c0 AS TEXT))) AND ((COUNT(*)))))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (((((t1.c0)) NOT BETWEEN ((CAST(t1.c0 AS TEXT))) AND ((COUNT(*))))) ISNULL);
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (((t1.c0)) NOT BETWEEN ((CAST(t1.c0 AS TEXT))) AND ((COUNT(*)))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT ((((t1.c0)) NOT BETWEEN ((CAST(t1.c0 AS TEXT))) AND ((COUNT(*)))))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (((((t1.c0)) NOT BETWEEN ((CAST(t1.c0 AS TEXT))) AND ((COUNT(*))))) ISNULL);
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1;
SELECT ALL t1.c0 FROM t1 WHERE (((((t1.c0) BETWEEN (t1.c0) AND (0.9310757795604306))) NOT BETWEEN (((t1.c0)<=(t1.c0))) AND (COALESCE(t1.c0, t1.c0)))) UNION ALL SELECT t1.c0 FROM t1 WHERE ((NOT (((((t1.c0) BETWEEN (t1.c0) AND (0.9310757795604306))) NOT BETWEEN (((t1.c0)<=(t1.c0))) AND (COALESCE(t1.c0, t1.c0)))))) UNION ALL SELECT t1.c0 FROM t1 WHERE (((((((t1.c0) BETWEEN (t1.c0) AND (0.9310757795604306))) NOT BETWEEN (((t1.c0)<=(t1.c0))) AND (COALESCE(t1.c0, t1.c0)))) ISNULL));
SELECT ALL t1.c0 FROM t1;
SELECT DISTINCT t1.c0, v0.c0 FROM t1, v0, vt0;
SELECT DISTINCT t1.c0, v0.c0 FROM t1, v0, vt0 WHERE (((((vt0.c0)>(t1.c0))) NOT BETWEEN ('1655940879') AND (t1.c0 COLLATE BINARY))) UNION SELECT DISTINCT t1.c0, v0.c0 FROM t1, v0, vt0 WHERE ((NOT (((((vt0.c0)>(t1.c0))) NOT BETWEEN ('1655940879') AND (t1.c0 COLLATE BINARY))))) UNION SELECT DISTINCT t1.c0, v0.c0 FROM t1, v0, vt0 WHERE (((((((vt0.c0)>(t1.c0))) NOT BETWEEN ('1655940879') AND (t1.c0 COLLATE BINARY))) ISNULL));
SELECT DISTINCT t1.c0, v0.c0 FROM t1, v0, vt0;
SELECT ALL vt0.c0, v0.c0, t1.c0 FROM t1 INNER JOIN vt0 ON '' COLLATE RTRIM INNER JOIN v0 ON CASE CAST(x'' AS TEXT)  WHEN (t1.c0 IN (t1.c0)) THEN ((v0.c0)-(v0.c0)) END GROUP BY vt0.c0, v0.c0, t1.c0;
SELECT vt0.c0, v0.c0, t1.c0 FROM t1 INNER JOIN vt0 ON '' COLLATE RTRIM INNER JOIN v0 ON CASE CAST(x'' AS TEXT)  WHEN (t1.c0 IN (t1.c0)) THEN ((v0.c0)-(v0.c0)) END WHERE (CAST(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 END AS REAL)) GROUP BY vt0.c0, v0.c0, t1.c0 UNION SELECT ALL vt0.c0, v0.c0, t1.c0 FROM t1 INNER JOIN vt0 ON '' COLLATE RTRIM INNER JOIN v0 ON CASE CAST(x'' AS TEXT)  WHEN (t1.c0 IN (t1.c0)) THEN ((v0.c0)-(v0.c0)) END WHERE ((NOT (CAST(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 END AS REAL)))) GROUP BY vt0.c0, v0.c0, t1.c0 UNION SELECT vt0.c0, v0.c0, t1.c0 FROM t1 INNER JOIN vt0 ON '' COLLATE RTRIM INNER JOIN v0 ON CASE CAST(x'' AS TEXT)  WHEN (t1.c0 IN (t1.c0)) THEN ((v0.c0)-(v0.c0)) END WHERE (((CAST(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 END AS REAL)) ISNULL)) GROUP BY vt0.c0, v0.c0, t1.c0;
SELECT ALL vt0.c0, v0.c0, t1.c0 FROM t1 INNER JOIN vt0 ON '' COLLATE RTRIM INNER JOIN v0 ON CASE CAST(x'' AS TEXT)  WHEN (t1.c0 IN (t1.c0)) THEN ((v0.c0)-(v0.c0)) END GROUP BY vt0.c0, v0.c0, t1.c0;
SELECT ALL v0.c0, t1.c0, vt0.c0 FROM vt0, v0, t1 GROUP BY v0.c0, t1.c0, vt0.c0;
SELECT ALL v0.c0, t1.c0, vt0.c0 FROM vt0, v0, t1 GROUP BY v0.c0, t1.c0, vt0.c0 HAVING (t1.c0 IN ()) UNION ALL SELECT v0.c0, t1.c0, vt0.c0 FROM vt0, v0, t1 GROUP BY v0.c0, t1.c0, vt0.c0 HAVING (NOT ((t1.c0 IN ()))) UNION ALL SELECT v0.c0, t1.c0, vt0.c0 FROM vt0, v0, t1 GROUP BY v0.c0, t1.c0, vt0.c0 HAVING (((t1.c0 IN ())) ISNULL);
SELECT ALL v0.c0, t1.c0, vt0.c0 FROM vt0, v0, t1 GROUP BY v0.c0, t1.c0, vt0.c0;
SELECT ALL v0.c0, t1.c0, vt0.c0 FROM vt0, v0, t1 GROUP BY v0.c0, t1.c0, vt0.c0 HAVING (t1.c0 IN ()) UNION ALL SELECT v0.c0, t1.c0, vt0.c0 FROM vt0, v0, t1 GROUP BY v0.c0, t1.c0, vt0.c0 HAVING (NOT ((t1.c0 IN ()))) UNION ALL SELECT v0.c0, t1.c0, vt0.c0 FROM vt0, v0, t1 GROUP BY v0.c0, t1.c0, vt0.c0 HAVING (((t1.c0 IN ())) ISNULL);
SELECT ALL v0.c0, t1.c0, vt0.c0 FROM vt0, v0, t1 GROUP BY v0.c0, t1.c0, vt0.c0;
SELECT ALL * FROM vt0, t1;
SELECT ALL * FROM vt0, t1 WHERE (((CASE WHEN t1.c0 THEN vt0.c0 END)LIKE(CAST(vt0.c0 AS BLOB)))) UNION ALL SELECT * FROM vt0, t1 WHERE ((NOT (((CASE WHEN t1.c0 THEN vt0.c0 END)LIKE(CAST(vt0.c0 AS BLOB)))))) UNION ALL SELECT * FROM vt0, t1 WHERE (((((CASE WHEN t1.c0 THEN vt0.c0 END)LIKE(CAST(vt0.c0 AS BLOB)))) ISNULL));
SELECT ALL * FROM vt0, t1;
SELECT DISTINCT * FROM vt0, t1;
SELECT DISTINCT * FROM vt0, t1 WHERE (((t1.c0)LIKE(t1.c0)) COLLATE NOCASE) UNION SELECT DISTINCT * FROM vt0, t1 WHERE ((NOT (((t1.c0)LIKE(t1.c0)) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt0, t1 WHERE (((((t1.c0)LIKE(t1.c0)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM vt0, t1;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE (((((t1.c0) BETWEEN ('-1469316005') AND (t1.c0)))>((((t1.c0))>((t1.c0)))))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT (((((t1.c0) BETWEEN ('-1469316005') AND (t1.c0)))>((((t1.c0))>((t1.c0)))))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE (((((((t1.c0) BETWEEN ('-1469316005') AND (t1.c0)))>((((t1.c0))>((t1.c0)))))) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0, t1 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0, t1 GROUP BY vt0.c0, v0.c0 HAVING COUNT(COUNT(vt0.c0)) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0, t1 GROUP BY vt0.c0, v0.c0 HAVING (NOT (COUNT(COUNT(vt0.c0)))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0, t1 GROUP BY vt0.c0, v0.c0 HAVING ((COUNT(COUNT(vt0.c0))) ISNULL);
SELECT ALL v0.c0 FROM v0, vt0;
SELECT v0.c0 FROM v0, vt0 WHERE (v0.c0) UNION ALL SELECT v0.c0 FROM v0, vt0 WHERE ((NOT (v0.c0))) UNION ALL SELECT v0.c0 FROM v0, vt0 WHERE (((v0.c0) ISNULL));
SELECT ALL v0.c0 FROM v0, vt0;
