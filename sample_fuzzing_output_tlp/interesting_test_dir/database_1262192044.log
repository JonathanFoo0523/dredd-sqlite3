-- Time: 2024/06/09 15:52:05
-- Database: database44
-- Database version: 3.40.0
-- seed value: 1262192044
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED, matchinfo=fts3, order=ASC); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=4'); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
UPDATE vt0 SET c0='w' WHERE (((CAST(vt0.c0 AS INTEGER)))<(('w'))); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=x'' WHERE ((CASE WHEN vt0.c0 THEN '1602514494' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)>(vt0.c0)); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '41306'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-1024107878,11');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'6837') BETWEEN (NULL) AND (0xffffffffba9ac1ba)))<<(((0.04779070552976561)/('0L7nf')))); -- 0ms;
END TRANSACTION; -- 1ms;
INSERT INTO vt0(vt0) VALUES('automerge=9'); -- 3ms;
UPDATE OR IGNORE vt0 SET (c0)=(0.36607458353337985) WHERE ((vt0.c0 COLLATE RTRIM)=(CAST(x'' AS NUMERIC))); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
DELETE FROM vt0 WHERE ('' IN ((+ (vt0.c0)))); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1390147161); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=6'); -- 4ms;
UPDATE OR IGNORE vt0 SET c0=NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered noskipscan'); -- 0ms;
INSERT OR ABORT INTO vt0(c0) VALUES (0.33609706919971705); -- 0ms;
UPDATE vt0 SET (c0, c0)=(NULL, 0Xffffffffeb909521) WHERE (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, x'')) AND ((vt0.c0, vt0.c0, vt0.c0))) COLLATE RTRIM; -- 0ms;
UPDATE OR ROLLBACK vt0 SET c0=0.6445159800210782, c0=x'dd35' WHERE ((vt0.c0) ISNULL); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1187351485); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-302491505,2');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=12'); -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (NULL); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '57527'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 9); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 240760958); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE vt0 SET (c0)=(NULL); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=x''; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (x''); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE vt0 SET c0='0.04779070552976561', c0=NULL, c0='E8,tQW 馼'; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
REINDEX; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE vt0 SET c0='w', c0=x'6f0da6f3'; -- 0ms;
UPDATE OR ABORT vt0 SET c0=x'9483'; -- 0ms;
END; -- 0ms;
ANALYZE; -- 0ms;
ANALYZE; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=0.1450287426982192; -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
REINDEX NOCASE; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '3278'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1433774869); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 101493147); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '12106'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '26501'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
CREATE TEMPORARY VIEW  IF NOT EXISTS v0(c0) AS SELECT ALL ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)*(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND('806390193')))AND(vt0.c0)))) FROM vt0; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 8); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '12805'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 13); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=3'); -- 0ms;
CREATE TABLE IF NOT EXISTS t0 (c0 REAL ); -- 0ms;
CREATE INDEX i72 ON t0((((c0 IN ()))>=(c0)) COLLATE BINARY) WHERE '957816834'; -- 0ms;
DROP TABLE t0; -- 0ms;
UPDATE OR REPLACE vt0 SET c0='u渾' WHERE (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (('E8,tQWC馼', ((NULL)%(vt0.c0)), 0.7791326646009227)) AND ((((vt0.c0)AND(vt0.c0)), ((vt0.c0)>(vt0.c0)), (NOT (vt0.c0))))); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=x'' WHERE vt0.c0; -- 1ms;
UPDATE OR ABORT vt0 SET (c0)=('hD') WHERE (((vt0.c0)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((((vt0.c0)==(vt0.c0))))); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-302491505,6');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1590856228); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 3); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 12); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=1276396578,2');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '43796'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 2072309131);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 6); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '16445'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
COMMIT; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=('1276396578') WHERE CAST(CHANGES() AS TEXT); -- 2ms;
REINDEX; -- 4ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 10); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1047268163); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 282387095); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '39465'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1526782483); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
END; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(0.5040599467816427); -- 6ms;
UPDATE OR IGNORE vt0 SET c0='BbBN', c0=2139294327, c0=NULL WHERE ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<<((~ (vt0.c0)))); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL); -- 0ms;
UPDATE OR IGNORE vt0 SET c0='957816834', c0=NULL, c0=1542079077 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), HEX(vt0.c0), ((vt0.c0) NOTNULL)))<((CAST(vt0.c0 AS INTEGER), ((vt0.c0)<('B郝4')), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1334648063); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=7'); -- 7ms;
UPDATE OR IGNORE vt0 SET c0=x''; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 5ms;
UPDATE OR IGNORE vt0 SET c0=NULL; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 7); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 2); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '33592'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -874623290);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1970154868); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 8); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(x'ddbf') WHERE (((((((((vt0.c0 IN ()))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(NULL)))AND(DATETIME(vt0.c0, vt0.c0, vt0.c0))))AND(((vt0.c0) NOT NULL))); -- 1ms;
UPDATE OR IGNORE vt0 SET c0=0.6267299604440729 WHERE 0.5566845771296621; -- 0ms;
COMMIT; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 14); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
ANALYZE sqlite_master; -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (NULL) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (NULL))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((NULL) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (CAST(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS REAL)) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (CAST(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS REAL)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((CAST(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS REAL)) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0 WHERE (CAST((~ (v0.c0)) AS INTEGER)) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, vt0 WHERE ((NOT (CAST((~ (v0.c0)) AS INTEGER)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, vt0 WHERE (((CAST((~ (v0.c0)) AS INTEGER)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (~ (SUM(v0.c0))) UNION ALL SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (NOT ((~ (SUM(v0.c0))))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (((~ (SUM(v0.c0)))) ISNULL);
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (~ (SUM(v0.c0))) UNION ALL SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (NOT ((~ (SUM(v0.c0))))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (((~ (SUM(v0.c0)))) ISNULL);
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT * FROM v0, vt0;
SELECT * FROM v0, vt0 WHERE (CASE WHEN ABS(v0.c0) THEN (~ (vt0.c0)) WHEN (((('')OR(NULL)))OR(v0.c0)) THEN (((v0.c0))<=((vt0.c0))) WHEN (NOT (v0.c0)) THEN LTRIM(v0.c0) END) UNION ALL SELECT ALL * FROM v0, vt0 WHERE ((NOT (CASE WHEN ABS(v0.c0) THEN (~ (vt0.c0)) WHEN (((('')OR(NULL)))OR(v0.c0)) THEN (((v0.c0))<=((vt0.c0))) WHEN (NOT (v0.c0)) THEN LTRIM(v0.c0) END))) UNION ALL SELECT ALL * FROM v0, vt0 WHERE (((CASE WHEN ABS(v0.c0) THEN (~ (vt0.c0)) WHEN (((('')OR(NULL)))OR(v0.c0)) THEN (((v0.c0))<=((vt0.c0))) WHEN (NOT (v0.c0)) THEN LTRIM(v0.c0) END) ISNULL));
SELECT * FROM v0, vt0;
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE (CAST(((vt0.c0)<<(v0.c0)) AS TEXT)) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT (CAST(((vt0.c0)<<(v0.c0)) AS TEXT)))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE (((CAST(((vt0.c0)<<(v0.c0)) AS TEXT)) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((((v0.c0)>=(v0.c0)) IN ())) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((v0.c0)>=(v0.c0)) IN ())))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((((v0.c0)>=(v0.c0)) IN ())) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON vt0.c0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON vt0.c0 GROUP BY vt0.c0 HAVING vt0.c0 UNION ALL SELECT ALL vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON vt0.c0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON vt0.c0 GROUP BY vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON vt0.c0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON vt0.c0 GROUP BY vt0.c0 HAVING vt0.c0 UNION ALL SELECT ALL vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON vt0.c0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON vt0.c0 GROUP BY vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON vt0.c0 GROUP BY vt0.c0;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (CASE (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN ((vt0.c0)=(vt0.c0)) THEN ((vt0.c0)!=(vt0.c0)) WHEN vt0.c0 THEN (vt0.c0 IN ()) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN (vt0.c0 IN ()) END) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (CASE (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN ((vt0.c0)=(vt0.c0)) THEN ((vt0.c0)!=(vt0.c0)) WHEN vt0.c0 THEN (vt0.c0 IN ()) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN (vt0.c0 IN ()) END))) UNION ALL SELECT * FROM vt0 WHERE (((CASE (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN ((vt0.c0)==(vt0.c0)) THEN ((vt0.c0)!=(vt0.c0)) WHEN vt0.c0 THEN (vt0.c0 IN ()) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN (vt0.c0 IN ()) END) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 WHERE (x'') GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 WHERE ((NOT (x''))) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM v0, vt0 WHERE (((x'') ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING ((TOTAL(NULL)) NOT BETWEEN (GROUP_CONCAT(TOTAL(v0.c0)) COLLATE BINARY) AND (((vt0.c0) IS FALSE))) UNION ALL SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING (NOT (((TOTAL(NULL)) NOT BETWEEN (GROUP_CONCAT(TOTAL(v0.c0)) COLLATE BINARY) AND (((vt0.c0) IS FALSE))))) UNION ALL SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING ((((TOTAL(NULL)) NOT BETWEEN (GROUP_CONCAT(TOTAL(v0.c0)) COLLATE BINARY) AND (((vt0.c0) IS FALSE)))) ISNULL);
SELECT ALL TOTAL((((~ (v0.c0))) ISNULL)) FROM v0;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (((vt0.c0) ISNULL)) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((vt0.c0) ISNULL)))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((vt0.c0) ISNULL)) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (v0.c0) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CASE CAST(vt0.c0 AS REAL)  WHEN vt0.c0 COLLATE RTRIM THEN ((((vt0.c0)OR(NULL)))OR(vt0.c0)) END) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CASE CAST(vt0.c0 AS REAL)  WHEN vt0.c0 COLLATE RTRIM THEN ((((vt0.c0)OR(NULL)))OR(vt0.c0)) END))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((CASE CAST(vt0.c0 AS REAL)  WHEN vt0.c0 COLLATE RTRIM THEN ((((vt0.c0)OR(NULL)))OR(vt0.c0)) END) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING MAX(((v0.c0) BETWEEN (v0.c0) AND (COUNT(TOTAL(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MAX(((v0.c0) BETWEEN (v0.c0) AND (COUNT(TOTAL(v0.c0))))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MAX(((v0.c0) BETWEEN (v0.c0) AND (COUNT(TOTAL(v0.c0)))))) ISNULL);
SELECT vt0.c0 FROM vt0, v0;
SELECT vt0.c0 FROM vt0, v0 WHERE (CAST(v0.c0 AS NUMERIC)) UNION ALL SELECT vt0.c0 FROM vt0, v0 WHERE ((NOT (CAST(v0.c0 AS NUMERIC)))) UNION ALL SELECT ALL vt0.c0 FROM vt0, v0 WHERE (((CAST(v0.c0 AS NUMERIC)) ISNULL));
SELECT vt0.c0 FROM vt0, v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN 0.5990197892485905 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END COLLATE BINARY) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN 0.5990197892485905 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END COLLATE BINARY))) UNION SELECT DISTINCT * FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN 0.5990197892485905 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 WHERE (TIME(1.542079077E9, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)-('1180471517')))) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM vt0, v0 WHERE ((NOT (TIME(1.542079077E9, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)-('1180471517')))))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 WHERE (((TIME(1.542079077E9, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)-('1180471517')))) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING TOTAL(CASE COUNT(*)  WHEN v0.c0 THEN '' END) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TOTAL(CASE COUNT(*)  WHEN v0.c0 THEN '' END))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL(CASE COUNT(*)  WHEN v0.c0 THEN '' END)) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((NOT ('2139294327'))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((NOT ('2139294327'))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((NOT ('2139294327'))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT v0.c0 FROM vt0, v0;
SELECT DISTINCT v0.c0 FROM vt0, v0 WHERE ((vt0.c0 IN ()) COLLATE RTRIM) UNION SELECT DISTINCT v0.c0 FROM vt0, v0 WHERE ((NOT ((vt0.c0 IN ()) COLLATE RTRIM))) UNION SELECT DISTINCT v0.c0 FROM vt0, v0 WHERE ((((vt0.c0 IN ()) COLLATE RTRIM) ISNULL));
SELECT DISTINCT v0.c0 FROM vt0, v0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 WHERE ((((((('E8,tQW 馼')OR(vt0.c0)))OR(vt0.c0))) BETWEEN (NULL) AND (((v0.c0)LIKE(v0.c0))))) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 WHERE ((NOT ((((((('E8,tQW 馼')OR(vt0.c0)))OR(vt0.c0))) BETWEEN (NULL) AND (((v0.c0)LIKE(v0.c0))))))) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM v0, vt0 WHERE ((((((((('E8,tQW 馼')OR(vt0.c0)))OR(vt0.c0))) BETWEEN (NULL) AND (((v0.c0)LIKE(v0.c0))))) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT v0.c0, vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON ((v0.c0)|(vt0.c0)) COLLATE BINARY GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON ((v0.c0)|(vt0.c0)) COLLATE BINARY GROUP BY v0.c0, vt0.c0 HAVING CASE WHEN GROUP_CONCAT(vt0.c0) THEN AVG(GROUP_CONCAT(GROUP_CONCAT(MIN(MAX(vt0.c0))))) ELSE COUNT(MIN(v0.c0)) END UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON ((v0.c0)|(vt0.c0)) COLLATE BINARY GROUP BY v0.c0, vt0.c0 HAVING (NOT (CASE WHEN GROUP_CONCAT(vt0.c0) THEN AVG(GROUP_CONCAT(GROUP_CONCAT(MIN(MAX(vt0.c0))))) ELSE COUNT(MIN(v0.c0)) END)) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON ((v0.c0)|(vt0.c0)) COLLATE BINARY GROUP BY v0.c0, vt0.c0 HAVING ((CASE WHEN GROUP_CONCAT(vt0.c0) THEN AVG(GROUP_CONCAT(GROUP_CONCAT(MIN(MAX(vt0.c0))))) ELSE COUNT(MIN(v0.c0)) END) ISNULL);
SELECT TOTAL((((v0.c0)<<(v0.c0)) IN ())) FROM v0, vt0 ORDER BY ((TYPEOF(vt0.c0))+(CAST(NULL AS TEXT)));
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 NOT INDEXED WHERE ((((NULL)) NOT BETWEEN ((((('-1287986699', x'', v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))) AND ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT ((((NULL)) NOT BETWEEN ((((('-1287986699', x'', v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))) AND ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))))) UNION ALL SELECT ALL * FROM v0 NOT INDEXED WHERE ((((((NULL)) NOT BETWEEN ((((('-1287986699', x'', v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))) AND ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT v0.c0 FROM vt0, v0 NOT INDEXED;
SELECT DISTINCT v0.c0 FROM vt0, v0 WHERE (((vt0.c0)==((vt0.c0 IN (vt0.c0))))) UNION SELECT DISTINCT v0.c0 FROM vt0, v0 WHERE ((NOT (((vt0.c0)=((vt0.c0 IN (vt0.c0))))))) UNION SELECT DISTINCT v0.c0 FROM vt0, v0 WHERE (((((vt0.c0)==((vt0.c0 IN (vt0.c0))))) ISNULL));
SELECT DISTINCT v0.c0 FROM vt0, v0 NOT INDEXED;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 WHERE (((((vt0.c0) NOT NULL))|(((vt0.c0)>>(vt0.c0))))) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 NOT INDEXED WHERE ((NOT (((((vt0.c0) NOT NULL))|(((vt0.c0)>>(vt0.c0))))))) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 WHERE (((((((vt0.c0) NOT NULL))|(((vt0.c0)>>(vt0.c0))))) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ())) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ())))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ())) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE (((CASE vt0.c0  WHEN x'' THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END)>>((- (v0.c0))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT (((CASE vt0.c0  WHEN x'' THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END)>>((- (v0.c0))))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE (((((CASE vt0.c0  WHEN x'' THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END)>>((- (v0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))AND(vt0.c0 COLLATE BINARY))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))AND(vt0.c0 COLLATE BINARY))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))AND(vt0.c0 COLLATE BINARY))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(MIN(v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(MIN(v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(MIN(v0.c0))) ISNULL);
SELECT ALL * FROM vt0, v0;
SELECT ALL * FROM vt0, v0 WHERE (json_array_length(CASE WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 ELSE x'' END)) UNION ALL SELECT ALL * FROM vt0, v0 WHERE ((NOT (json_array_length(CASE WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 ELSE x'' END)))) UNION ALL SELECT ALL * FROM vt0, v0 WHERE (((json_array_length(CASE WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 ELSE x'' END)) ISNULL));
SELECT ALL * FROM vt0, v0;
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE ((COALESCE(DISTINCT vt0.c0, v0.c0) IN ())) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT ((COALESCE(DISTINCT vt0.c0, v0.c0) IN ())))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((((COALESCE(DISTINCT vt0.c0, v0.c0) IN ())) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 WHERE (('' IN ())) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM v0, vt0 WHERE ((NOT (('' IN ())))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM v0, vt0 WHERE (((('' IN ())) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (- (CAST(GROUP_CONCAT(vt0.c0) AS BLOB))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((- (CAST(GROUP_CONCAT(vt0.c0) AS BLOB))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((- (CAST(GROUP_CONCAT(vt0.c0) AS BLOB)))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (- (CAST(GROUP_CONCAT(vt0.c0) AS BLOB))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((- (CAST(GROUP_CONCAT(vt0.c0) AS BLOB))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((- (CAST(GROUP_CONCAT(vt0.c0) AS BLOB)))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE ('-1523143607') UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT ('-1523143607'))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((('-1523143607') ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT v0.c0, vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON ((CASE '0.6821709210550662'  WHEN vt0.c0 THEN v0.c0 WHEN ' 轼()' THEN vt0.c0 WHEN 0.9841729658641254 THEN v0.c0 ELSE v0.c0 END)<<(v0.c0 COLLATE NOCASE));
SELECT DISTINCT v0.c0, vt0.c0 FROM v0 NOT INDEXED RIGHT OUTER JOIN vt0 ON ((CASE '0.6821709210550662'  WHEN vt0.c0 THEN v0.c0 WHEN ' 轼()' THEN vt0.c0 WHEN 0.9841729658641254 THEN v0.c0 ELSE v0.c0 END)<<(v0.c0 COLLATE NOCASE)) WHERE ((('-1605998921') NOT BETWEEN ((('-302491505')-(vt0.c0))) AND (((vt0.c0)IS(vt0.c0))))) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON ((CASE '0.6821709210550662'  WHEN vt0.c0 THEN v0.c0 WHEN ' 轼()' THEN vt0.c0 WHEN 0.9841729658641254 THEN v0.c0 ELSE v0.c0 END)<<(v0.c0 COLLATE NOCASE)) WHERE ((NOT ((('-1605998921') NOT BETWEEN ((('-302491505')-(vt0.c0))) AND (((vt0.c0)IS(vt0.c0))))))) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON ((CASE '0.6821709210550662'  WHEN vt0.c0 THEN v0.c0 WHEN ' 轼()' THEN vt0.c0 WHEN 0.9841729658641254 THEN v0.c0 ELSE v0.c0 END)<<(v0.c0 COLLATE NOCASE)) WHERE ((((('-1605998921') NOT BETWEEN ((('-302491505')-(vt0.c0))) AND (((vt0.c0)IS(vt0.c0))))) ISNULL));
SELECT DISTINCT v0.c0, vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON ((CASE '0.6821709210550662'  WHEN vt0.c0 THEN v0.c0 WHEN ' 轼()' THEN vt0.c0 WHEN 0.9841729658641254 THEN v0.c0 ELSE v0.c0 END)<<(v0.c0 COLLATE NOCASE));
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (SQLITE_VERSION()) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (SQLITE_VERSION()))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((SQLITE_VERSION()) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING TOTAL(COUNT(*)) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (TOTAL(COUNT(*)))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING ((TOTAL(COUNT(*))) ISNULL);
SELECT MIN((((v0.c0 COLLATE BINARY))!=(((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))))) FROM v0, vt0;
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (((v0.c0) NOT NULL)) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (((v0.c0) NOT NULL)))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((((v0.c0) NOT NULL)) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN v0 ON (+ (((v0.c0)LIKE(vt0.c0))));
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN v0 ON (+ (((v0.c0)LIKE(vt0.c0)))) WHERE (CASE ((vt0.c0) NOT NULL)  WHEN vt0.c0 COLLATE RTRIM THEN CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 END WHEN (- (vt0.c0)) THEN SQLITE_COMPILEOPTION_USED(v0.c0) WHEN ((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN (- (vt0.c0)) ELSE CAST(vt0.c0 AS BLOB) END) UNION SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN v0 ON (+ (((v0.c0)LIKE(vt0.c0)))) WHERE ((NOT (CASE ((vt0.c0) NOT NULL)  WHEN vt0.c0 COLLATE RTRIM THEN CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 END WHEN (- (vt0.c0)) THEN SQLITE_COMPILEOPTION_USED(v0.c0) WHEN ((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN (- (vt0.c0)) ELSE CAST(vt0.c0 AS BLOB) END))) UNION SELECT DISTINCT * FROM vt0 NOT INDEXED RIGHT OUTER JOIN v0 ON (+ (((v0.c0)LIKE(vt0.c0)))) WHERE (((CASE ((vt0.c0) NOT NULL)  WHEN vt0.c0 COLLATE RTRIM THEN CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 END WHEN (- (vt0.c0)) THEN SQLITE_COMPILEOPTION_USED(v0.c0) WHEN ((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN (- (vt0.c0)) ELSE CAST(vt0.c0 AS BLOB) END) ISNULL));
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN v0 ON (+ (((v0.c0)LIKE(vt0.c0))));
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt0 WHERE (((CASE v0.c0  WHEN NULL THEN vt0.c0 END)LIKE(CAST(v0.c0 AS INTEGER)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, vt0 WHERE ((NOT (((CASE v0.c0  WHEN NULL THEN vt0.c0 END)LIKE(CAST(v0.c0 AS INTEGER)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, vt0 WHERE (((((CASE v0.c0  WHEN NULL THEN vt0.c0 END)LIKE(CAST(v0.c0 AS INTEGER)))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING ((((CASE WHEN MIN(SUM(vt0.c0)) THEN SUM(vt0.c0) WHEN vt0.c0 THEN COUNT(v0.c0) WHEN COUNT(MIN(v0.c0)) THEN v0.c0 END)AND(CAST(GROUP_CONCAT(TOTAL(COUNT(v0.c0))) AS REAL))))OR((~ (SUM(COUNT(TOTAL(GROUP_CONCAT(COUNT(v0.c0))))))))) UNION ALL SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING (NOT (((((CASE WHEN MIN(SUM(vt0.c0)) THEN SUM(vt0.c0) WHEN vt0.c0 THEN COUNT(v0.c0) WHEN COUNT(MIN(v0.c0)) THEN v0.c0 END)AND(CAST(GROUP_CONCAT(TOTAL(COUNT(v0.c0))) AS REAL))))OR((~ (SUM(COUNT(TOTAL(GROUP_CONCAT(COUNT(v0.c0))))))))))) UNION ALL SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING ((((((CASE WHEN MIN(SUM(vt0.c0)) THEN SUM(vt0.c0) WHEN vt0.c0 THEN COUNT(v0.c0) WHEN COUNT(MIN(v0.c0)) THEN v0.c0 END)AND(CAST(GROUP_CONCAT(TOTAL(COUNT(v0.c0))) AS REAL))))OR((~ (SUM(COUNT(TOTAL(GROUP_CONCAT(COUNT(v0.c0)))))))))) ISNULL);
SELECT * FROM v0;
SELECT * FROM v0 WHERE (0.847814758542347) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (0.847814758542347))) UNION ALL SELECT ALL * FROM v0 WHERE (((0.847814758542347) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT v0.c0, vt0.c0 FROM v0 INNER JOIN vt0 ON CASE (v0.c0 IN (''))  WHEN (+ (v0.c0)) THEN (- (v0.c0)) END;
SELECT DISTINCT v0.c0, vt0.c0 FROM v0 INNER JOIN vt0 ON CASE (v0.c0 IN (''))  WHEN (+ (v0.c0)) THEN (- (v0.c0)) END WHERE ((NOT (vt0.c0 COLLATE BINARY))) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM v0 INNER JOIN vt0 ON CASE (v0.c0 IN (''))  WHEN (+ (v0.c0)) THEN (- (v0.c0)) END WHERE ((NOT ((NOT (vt0.c0 COLLATE BINARY))))) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM v0 INNER JOIN vt0 ON CASE (v0.c0 IN (''))  WHEN (+ (v0.c0)) THEN (- (v0.c0)) END WHERE ((((NOT (vt0.c0 COLLATE BINARY))) ISNULL));
SELECT DISTINCT v0.c0, vt0.c0 FROM v0 INNER JOIN vt0 ON CASE (v0.c0 IN (''))  WHEN (+ (v0.c0)) THEN (- (v0.c0)) END;
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 WHERE (CASE (vt0.c0 IN ())  WHEN ((vt0.c0) IS TRUE) THEN ((vt0.c0) IS FALSE) END) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 WHERE ((NOT (CASE (vt0.c0 IN ())  WHEN ((vt0.c0) IS TRUE) THEN ((vt0.c0) IS FALSE) END))) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM v0, vt0 WHERE (((CASE (vt0.c0 IN ())  WHEN ((vt0.c0) IS TRUE) THEN ((vt0.c0) IS FALSE) END) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING AVG(LIKELIHOOD(DISTINCT AVG(v0.c0), 0.6067322951691378)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (AVG(LIKELIHOOD(DISTINCT AVG(v0.c0), 0.6067322951691378)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((AVG(LIKELIHOOD(DISTINCT AVG(v0.c0), 0.6067322951691378))) ISNULL);
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE ((~ (((v0.c0)==(v0.c0))))) UNION ALL SELECT * FROM v0 WHERE ((NOT ((~ (((v0.c0)=(v0.c0))))))) UNION ALL SELECT ALL * FROM v0 WHERE ((((~ (((v0.c0)=(v0.c0))))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (CAST(((v0.c0) BETWEEN (NULL) AND (v0.c0)) AS TEXT)) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (CAST(((v0.c0) BETWEEN (NULL) AND (v0.c0)) AS TEXT)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((CAST(((v0.c0) BETWEEN (NULL) AND (v0.c0)) AS TEXT)) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (json_extract(CAST(-1523143607 AS BLOB), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (json_extract(CAST(-1523143607 AS BLOB), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((json_extract(CAST(-1523143607 AS BLOB), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING CASE WHEN MIN(GROUP_CONCAT(TOTAL(v0.c0))) THEN v0.c0 COLLATE NOCASE END UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (CASE WHEN MIN(GROUP_CONCAT(TOTAL(v0.c0))) THEN v0.c0 COLLATE NOCASE END)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((CASE WHEN MIN(GROUP_CONCAT(TOTAL(v0.c0))) THEN v0.c0 COLLATE NOCASE END) ISNULL);
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (CAST(((v0.c0) IS TRUE) AS INTEGER)) UNION ALL SELECT * FROM v0 WHERE ((NOT (CAST(((v0.c0) IS TRUE) AS INTEGER)))) UNION ALL SELECT ALL * FROM v0 WHERE (((CAST(((v0.c0) IS TRUE) AS INTEGER)) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE (JULIANDAY(CAST(0.23168405541764714 AS NUMERIC), ((vt0.c0)LIKE(vt0.c0)), ((((v0.c0)OR(v0.c0)))AND(vt0.c0)))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT (JULIANDAY(CAST(0.23168405541764714 AS NUMERIC), ((vt0.c0)LIKE(vt0.c0)), ((((v0.c0)OR(v0.c0)))AND(vt0.c0)))))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE (((JULIANDAY(CAST(0.23168405541764714 AS NUMERIC), ((vt0.c0)LIKE(vt0.c0)), ((((v0.c0)OR(v0.c0)))AND(vt0.c0)))) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT vt0.c0, v0.c0 FROM v0 CROSS JOIN vt0 ON ((v0.c0) NOT BETWEEN ((NOT (vt0.c0))) AND (CAST(v0.c0 AS TEXT))) GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0 CROSS JOIN vt0 ON ((v0.c0) NOT BETWEEN ((NOT (vt0.c0))) AND (CAST(v0.c0 AS TEXT))) WHERE (((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))AND(((((vt0.c0)OR(vt0.c0)))OR(v0.c0)))))OR(1.602514494E9))) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM v0 CROSS JOIN vt0 ON ((v0.c0) NOT BETWEEN ((NOT (vt0.c0))) AND (CAST(v0.c0 AS TEXT))) WHERE ((NOT (((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))AND(((((vt0.c0)OR(vt0.c0)))OR(v0.c0)))))OR(1.602514494E9))))) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM v0 CROSS JOIN vt0 ON ((v0.c0) NOT BETWEEN ((NOT (vt0.c0))) AND (CAST(v0.c0 AS TEXT))) WHERE (((((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))AND(((((vt0.c0)OR(vt0.c0)))OR(v0.c0)))))OR(1.602514494E9))) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM v0 CROSS JOIN vt0 ON ((v0.c0) NOT BETWEEN ((NOT (vt0.c0))) AND (CAST(v0.c0 AS TEXT))) GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING 0.6434028804177448 UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (0.6434028804177448)) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING ((0.6434028804177448) ISNULL);
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING 0.6434028804177448 UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (0.6434028804177448)) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING ((0.6434028804177448) ISNULL);
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT * FROM v0, vt0;
SELECT ALL * FROM v0, vt0 WHERE (((v0.c0)LIKE(vt0.c0)) COLLATE BINARY) UNION ALL SELECT ALL * FROM v0, vt0 WHERE ((NOT (((v0.c0)LIKE(vt0.c0)) COLLATE BINARY))) UNION ALL SELECT * FROM v0, vt0 WHERE (((((v0.c0)LIKE(vt0.c0)) COLLATE BINARY) ISNULL));
SELECT * FROM v0, vt0;
SELECT DISTINCT vt0.c0 FROM vt0, v0;
SELECT DISTINCT vt0.c0 FROM vt0, v0 WHERE ((((~ (v0.c0)))+(vt0.c0 COLLATE BINARY))) UNION SELECT DISTINCT vt0.c0 FROM vt0, v0 WHERE ((NOT ((((~ (v0.c0)))+(vt0.c0 COLLATE BINARY))))) UNION SELECT DISTINCT vt0.c0 FROM vt0, v0 WHERE ((((((~ (v0.c0)))+(vt0.c0 COLLATE BINARY))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0, v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ('1587899893') GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ('1587899893'))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((('1587899893') ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING (((v0.c0)) BETWEEN (((((SUM(vt0.c0), SUM(vt0.c0), vt0.c0))<((AVG(v0.c0), MAX(TOTAL(GROUP_CONCAT(COUNT(COUNT(*))))), MAX(AVG(MIN(v0.c0)))))))) AND ((CASE v0.c0  WHEN MIN(v0.c0) THEN SUM(v0.c0) WHEN vt0.c0 THEN COUNT(v0.c0) WHEN vt0.c0 THEN vt0.c0 ELSE GROUP_CONCAT(v0.c0) END))) UNION ALL SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING (NOT ((((v0.c0)) BETWEEN (((((SUM(vt0.c0), SUM(vt0.c0), vt0.c0))<((AVG(v0.c0), MAX(TOTAL(GROUP_CONCAT(COUNT(COUNT(*))))), MAX(AVG(MIN(v0.c0)))))))) AND ((CASE v0.c0  WHEN MIN(v0.c0) THEN SUM(v0.c0) WHEN vt0.c0 THEN COUNT(v0.c0) WHEN vt0.c0 THEN vt0.c0 ELSE GROUP_CONCAT(v0.c0) END))))) UNION ALL SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING (((((v0.c0)) BETWEEN (((((SUM(vt0.c0), SUM(vt0.c0), vt0.c0))<((AVG(v0.c0), MAX(TOTAL(GROUP_CONCAT(COUNT(COUNT(*))))), MAX(AVG(MIN(v0.c0)))))))) AND ((CASE v0.c0  WHEN MIN(v0.c0) THEN SUM(v0.c0) WHEN vt0.c0 THEN COUNT(v0.c0) WHEN vt0.c0 THEN vt0.c0 ELSE GROUP_CONCAT(v0.c0) END)))) ISNULL);
SELECT * FROM v0;
SELECT * FROM v0 WHERE (((((v0.c0 COLLATE NOCASE)OR(0Xffffffffedf8588f)))OR((('1478261765') IS TRUE)))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (((((v0.c0 COLLATE NOCASE)OR(0xffffffffedf8588f)))OR((('1478261765') IS TRUE)))))) UNION ALL SELECT * FROM v0 WHERE (((((((v0.c0 COLLATE NOCASE)OR(0Xffffffffedf8588f)))OR((('1478261765') IS TRUE)))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt0;
SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt0 WHERE (NULL) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt0;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 WHERE (((v0.c0)&(vt0.c0)) COLLATE BINARY) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt0, v0 WHERE ((NOT (((v0.c0)&(vt0.c0)) COLLATE BINARY))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt0, v0 WHERE (((((v0.c0)&(vt0.c0)) COLLATE BINARY) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 INNER JOIN vt0 ON TRIM(CASE x''  WHEN v0.c0 THEN v0.c0 WHEN x'' THEN vt0.c0 WHEN v0.c0 THEN v0.c0 END) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 INNER JOIN vt0 ON TRIM(CASE x''  WHEN v0.c0 THEN v0.c0 WHEN x'' THEN vt0.c0 WHEN v0.c0 THEN v0.c0 END) GROUP BY v0.c0 HAVING AVG((((vt0.c0)) BETWEEN ((GROUP_CONCAT(MAX(COUNT(*))))) AND ((v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 INNER JOIN vt0 ON TRIM(CASE x''  WHEN v0.c0 THEN v0.c0 WHEN x'' THEN vt0.c0 WHEN v0.c0 THEN v0.c0 END) GROUP BY v0.c0 HAVING (NOT (AVG((((vt0.c0)) BETWEEN ((GROUP_CONCAT(MAX(COUNT(*))))) AND ((v0.c0)))))) UNION ALL SELECT v0.c0 FROM v0 INNER JOIN vt0 ON TRIM(CASE x''  WHEN v0.c0 THEN v0.c0 WHEN x'' THEN vt0.c0 WHEN v0.c0 THEN v0.c0 END) GROUP BY v0.c0 HAVING ((AVG((((vt0.c0)) BETWEEN ((GROUP_CONCAT(MAX(COUNT(*))))) AND ((v0.c0))))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((- ((x'' IN ())))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((- ((x'' IN ())))))) UNION ALL SELECT * FROM vt0 WHERE ((((- ((x'' IN ())))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0, v0;
SELECT DISTINCT vt0.c0 FROM vt0, v0 WHERE (CASE CAST(v0.c0 AS BLOB)  WHEN v0.c0 THEN LOWER(v0.c0) END) UNION SELECT DISTINCT vt0.c0 FROM vt0, v0 WHERE ((NOT (CASE CAST(v0.c0 AS BLOB)  WHEN v0.c0 THEN LOWER(v0.c0) END))) UNION SELECT DISTINCT vt0.c0 FROM vt0, v0 WHERE (((CASE CAST(v0.c0 AS BLOB)  WHEN v0.c0 THEN LOWER(v0.c0) END) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0, v0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL v0.c0 FROM v0 FULL OUTER JOIN vt0 ON (((v0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((v0.c0 COLLATE BINARY, ((v0.c0)OR(vt0.c0)), CAST(vt0.c0 AS INTEGER))) AND (((((vt0.c0, vt0.c0, vt0.c0))>((v0.c0, vt0.c0, v0.c0))), ((((v0.c0)AND(vt0.c0)))OR(vt0.c0)), ((vt0.c0)AND(v0.c0))))) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 NOT INDEXED FULL OUTER JOIN vt0 ON (((v0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((v0.c0 COLLATE BINARY, ((v0.c0)OR(vt0.c0)), CAST(vt0.c0 AS INTEGER))) AND (((((vt0.c0, vt0.c0, vt0.c0))>((v0.c0, vt0.c0, v0.c0))), ((((v0.c0)AND(vt0.c0)))OR(vt0.c0)), ((vt0.c0)AND(v0.c0))))) GROUP BY v0.c0 HAVING CASE WHEN CAST(COUNT(*) AS TEXT) THEN (vt0.c0 IN ()) ELSE ABS(DISTINCT v0.c0) END UNION ALL SELECT v0.c0 FROM v0 FULL OUTER JOIN vt0 ON (((v0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((v0.c0 COLLATE BINARY, ((v0.c0)OR(vt0.c0)), CAST(vt0.c0 AS INTEGER))) AND (((((vt0.c0, vt0.c0, vt0.c0))>((v0.c0, vt0.c0, v0.c0))), ((((v0.c0)AND(vt0.c0)))OR(vt0.c0)), ((vt0.c0)AND(v0.c0))))) GROUP BY v0.c0 HAVING (NOT (CASE WHEN CAST(COUNT(*) AS TEXT) THEN (vt0.c0 IN ()) ELSE ABS(DISTINCT v0.c0) END)) UNION ALL SELECT v0.c0 FROM v0 FULL OUTER JOIN vt0 ON (((v0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((v0.c0 COLLATE BINARY, ((v0.c0)OR(vt0.c0)), CAST(vt0.c0 AS INTEGER))) AND (((((vt0.c0, vt0.c0, vt0.c0))>((v0.c0, vt0.c0, v0.c0))), ((((v0.c0)AND(vt0.c0)))OR(vt0.c0)), ((vt0.c0)AND(v0.c0))))) GROUP BY v0.c0 HAVING ((CASE WHEN CAST(COUNT(*) AS TEXT) THEN (vt0.c0 IN ()) ELSE ABS(DISTINCT v0.c0) END) ISNULL);
SELECT ALL v0.c0 FROM v0 FULL OUTER JOIN vt0 ON (((v0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((v0.c0 COLLATE BINARY, ((v0.c0)OR(vt0.c0)), CAST(vt0.c0 AS INTEGER))) AND (((((vt0.c0, vt0.c0, vt0.c0))>((v0.c0, vt0.c0, v0.c0))), ((((v0.c0)AND(vt0.c0)))OR(vt0.c0)), ((vt0.c0)AND(v0.c0))))) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 NOT INDEXED FULL OUTER JOIN vt0 ON (((v0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((v0.c0 COLLATE BINARY, ((v0.c0)OR(vt0.c0)), CAST(vt0.c0 AS INTEGER))) AND (((((vt0.c0, vt0.c0, vt0.c0))>((v0.c0, vt0.c0, v0.c0))), ((((v0.c0)AND(vt0.c0)))OR(vt0.c0)), ((vt0.c0)AND(v0.c0))))) GROUP BY v0.c0 HAVING CASE WHEN CAST(COUNT(*) AS TEXT) THEN (vt0.c0 IN ()) ELSE ABS(DISTINCT v0.c0) END UNION ALL SELECT v0.c0 FROM v0 FULL OUTER JOIN vt0 ON (((v0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((v0.c0 COLLATE BINARY, ((v0.c0)OR(vt0.c0)), CAST(vt0.c0 AS INTEGER))) AND (((((vt0.c0, vt0.c0, vt0.c0))>((v0.c0, vt0.c0, v0.c0))), ((((v0.c0)AND(vt0.c0)))OR(vt0.c0)), ((vt0.c0)AND(v0.c0))))) GROUP BY v0.c0 HAVING (NOT (CASE WHEN CAST(COUNT(*) AS TEXT) THEN (vt0.c0 IN ()) ELSE ABS(DISTINCT v0.c0) END)) UNION ALL SELECT v0.c0 FROM v0 FULL OUTER JOIN vt0 ON (((v0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((v0.c0 COLLATE BINARY, ((v0.c0)OR(vt0.c0)), CAST(vt0.c0 AS INTEGER))) AND (((((vt0.c0, vt0.c0, vt0.c0))>((v0.c0, vt0.c0, v0.c0))), ((((v0.c0)AND(vt0.c0)))OR(vt0.c0)), ((vt0.c0)AND(v0.c0))))) GROUP BY v0.c0 HAVING ((CASE WHEN CAST(COUNT(*) AS TEXT) THEN (vt0.c0 IN ()) ELSE ABS(DISTINCT v0.c0) END) ISNULL);
SELECT ALL v0.c0 FROM v0 FULL OUTER JOIN vt0 ON (((v0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((v0.c0 COLLATE BINARY, ((v0.c0)OR(vt0.c0)), CAST(vt0.c0 AS INTEGER))) AND (((((vt0.c0, vt0.c0, vt0.c0))>((v0.c0, vt0.c0, v0.c0))), ((((v0.c0)AND(vt0.c0)))OR(vt0.c0)), ((vt0.c0)AND(v0.c0))))) GROUP BY v0.c0;
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (((v0.c0 COLLATE BINARY)+((NULL IN (v0.c0, 0xffffffffcbde4ec6))))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (((v0.c0 COLLATE BINARY)+((NULL IN (v0.c0, 0xffffffffcbde4ec6))))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0 COLLATE BINARY)+((NULL IN (v0.c0, 0Xffffffffcbde4ec6))))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) ISNULL)) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) ISNULL)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) ISNULL)) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL vt0.c0, v0.c0 FROM v0 LEFT OUTER JOIN vt0 ON vt0.c0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM v0 NOT INDEXED LEFT OUTER JOIN vt0 ON vt0.c0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))>('1r'))) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM v0 LEFT OUTER JOIN vt0 ON vt0.c0 WHERE ((NOT (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))>('1r'))))) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM v0 LEFT OUTER JOIN vt0 ON vt0.c0 WHERE (((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))>('1r'))) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0 LEFT OUTER JOIN vt0 ON vt0.c0 GROUP BY vt0.c0, v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL(TOTAL(v0.c0))) NOT BETWEEN (CASE WHEN COUNT(*) THEN TOTAL(MAX(0.4711291680994826)) WHEN MAX(v0.c0) THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) AND (((MAX(v0.c0)) NOT BETWEEN (v0.c0) AND (COUNT(*))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((TOTAL(TOTAL(v0.c0))) NOT BETWEEN (CASE WHEN COUNT(*) THEN TOTAL(MAX(0.4711291680994826)) WHEN MAX(v0.c0) THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) AND (((MAX(v0.c0)) NOT BETWEEN (v0.c0) AND (COUNT(*))))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((TOTAL(TOTAL(v0.c0))) NOT BETWEEN (CASE WHEN COUNT(*) THEN TOTAL(MAX(0.4711291680994826)) WHEN MAX(v0.c0) THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) AND (((MAX(v0.c0)) NOT BETWEEN (v0.c0) AND (COUNT(*)))))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 NOT INDEXED WHERE (((((((((CAST(vt0.c0 AS INTEGER))AND((x'9028' IN (vt0.c0)))))OR(((vt0.c0)/(vt0.c0)))))AND((vt0.c0 IN (vt0.c0)))))OR(((vt0.c0)||(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((((((CAST(vt0.c0 AS INTEGER))AND((x'9028' IN (vt0.c0)))))OR(((vt0.c0)/(vt0.c0)))))AND((vt0.c0 IN (vt0.c0)))))OR(((vt0.c0)||(vt0.c0))))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((((((((CAST(vt0.c0 AS INTEGER))AND((x'9028' IN (vt0.c0)))))OR(((vt0.c0)/(vt0.c0)))))AND((vt0.c0 IN (vt0.c0)))))OR(((vt0.c0)||(vt0.c0))))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (UNLIKELY(DISTINCT CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (UNLIKELY(DISTINCT CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((UNLIKELY(DISTINCT CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((((((((((- (v0.c0)))AND((v0.c0 IN ()))))OR(CASE WHEN 0.01934775926240928 THEN v0.c0 ELSE v0.c0 END)))OR((~ (v0.c0)))))OR(((((v0.c0)OR(v0.c0)))AND(v0.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((((((((- (v0.c0)))AND((v0.c0 IN ()))))OR(CASE WHEN 0.01934775926240928 THEN v0.c0 ELSE v0.c0 END)))OR((~ (v0.c0)))))OR(((((v0.c0)OR(v0.c0)))AND(v0.c0))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((((((((((- (v0.c0)))AND((v0.c0 IN ()))))OR(CASE WHEN 0.01934775926240928 THEN v0.c0 ELSE v0.c0 END)))OR((~ (v0.c0)))))OR(((((v0.c0)OR(v0.c0)))AND(v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((IFNULL(AVG(vt0.c0), vt0.c0))OR(((((MAX(vt0.c0))AND(vt0.c0)))OR(GROUP_CONCAT(TOTAL(vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((IFNULL(AVG(vt0.c0), vt0.c0))OR(((((MAX(vt0.c0))AND(vt0.c0)))OR(GROUP_CONCAT(TOTAL(vt0.c0)))))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((IFNULL(AVG(vt0.c0), vt0.c0))OR(((((MAX(vt0.c0))AND(vt0.c0)))OR(GROUP_CONCAT(TOTAL(vt0.c0))))))) ISNULL);
SELECT vt0.c0 FROM v0, vt0;
SELECT ALL vt0.c0 FROM v0, vt0 WHERE (TYPEOF(DISTINCT vt0.c0 COLLATE RTRIM)) UNION ALL SELECT ALL vt0.c0 FROM v0, vt0 NOT INDEXED WHERE ((NOT (TYPEOF(DISTINCT vt0.c0 COLLATE RTRIM)))) UNION ALL SELECT ALL vt0.c0 FROM v0, vt0 WHERE (((TYPEOF(DISTINCT vt0.c0 COLLATE RTRIM)) ISNULL));
SELECT vt0.c0 FROM v0, vt0;
SELECT DISTINCT vt0.c0 FROM v0, vt0;
SELECT DISTINCT vt0.c0 FROM v0, vt0 WHERE ('驟*') UNION SELECT DISTINCT vt0.c0 FROM v0, vt0 WHERE ((NOT ('驟*'))) UNION SELECT DISTINCT vt0.c0 FROM v0, vt0 WHERE ((('驟*') ISNULL));
SELECT DISTINCT vt0.c0 FROM v0, vt0;
SELECT ALL vt0.c0 FROM v0 NATURAL JOIN vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0 NATURAL JOIN vt0 WHERE (CASE ((((vt0.c0)OR(vt0.c0)))AND(v0.c0))  WHEN ((((vt0.c0)OR(v0.c0)))OR(v0.c0)) THEN ((((((((v0.c0)AND(vt0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)) END) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM v0 NATURAL JOIN vt0 WHERE ((NOT (CASE ((((vt0.c0)OR(vt0.c0)))AND(v0.c0))  WHEN ((((vt0.c0)OR(v0.c0)))OR(v0.c0)) THEN ((((((((v0.c0)AND(vt0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)) END))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM v0 NATURAL JOIN vt0 WHERE (((CASE ((((vt0.c0)OR(vt0.c0)))AND(v0.c0))  WHEN ((((vt0.c0)OR(v0.c0)))OR(v0.c0)) THEN ((((((((v0.c0)AND(vt0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)) END) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0 NATURAL JOIN vt0 GROUP BY vt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (- (((v0.c0) NOT NULL))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((- (((v0.c0) NOT NULL))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((- (((v0.c0) NOT NULL)))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (- (((v0.c0) NOT NULL))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((- (((v0.c0) NOT NULL))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((- (((v0.c0) NOT NULL)))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 LEFT OUTER JOIN vt0 ON (((HEX(DISTINCT v0.c0)))>=(((vt0.c0 IN ()))));
SELECT ALL v0.c0 FROM v0 LEFT OUTER JOIN vt0 ON (((HEX(DISTINCT v0.c0)))>=(((vt0.c0 IN ())))) WHERE ((((((vt0.c0, v0.c0, vt0.c0)) BETWEEN ((v0.c0, v0.c0, vt0.c0)) AND ((vt0.c0, 1547872314, vt0.c0)))) BETWEEN ('-1184906154') AND (SQLITE_VERSION()))) UNION ALL SELECT v0.c0 FROM v0 LEFT OUTER JOIN vt0 ON (((HEX(DISTINCT v0.c0)))>=(((vt0.c0 IN ())))) WHERE ((NOT ((((((vt0.c0, v0.c0, vt0.c0)) BETWEEN ((v0.c0, v0.c0, vt0.c0)) AND ((vt0.c0, 1547872314, vt0.c0)))) BETWEEN ('-1184906154') AND (SQLITE_VERSION()))))) UNION ALL SELECT v0.c0 FROM v0 LEFT OUTER JOIN vt0 ON (((HEX(DISTINCT v0.c0)))>=(((vt0.c0 IN ())))) WHERE ((((((((vt0.c0, v0.c0, vt0.c0)) BETWEEN ((v0.c0, v0.c0, vt0.c0)) AND ((vt0.c0, 1547872314, vt0.c0)))) BETWEEN ('-1184906154') AND (SQLITE_VERSION()))) ISNULL));
SELECT ALL v0.c0 FROM v0 LEFT OUTER JOIN vt0 ON (((HEX(DISTINCT v0.c0)))>=(((vt0.c0 IN ()))));
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((v0.c0) IS FALSE))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))AND(v0.c0 COLLATE BINARY))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((((((v0.c0) IS FALSE))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))AND(v0.c0 COLLATE BINARY))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((((v0.c0) IS FALSE))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))AND(v0.c0 COLLATE BINARY))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (CAST(vt0.c0 AS REAL)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CAST(vt0.c0 AS REAL)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST(vt0.c0 AS REAL)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX(CASE WHEN vt0.c0 THEN vt0.c0 WHEN MIN(COUNT(AVG(vt0.c0))) THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE TOTAL(vt0.c0) END) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(CASE WHEN vt0.c0 THEN vt0.c0 WHEN MIN(COUNT(AVG(vt0.c0))) THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE TOTAL(vt0.c0) END))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(CASE WHEN vt0.c0 THEN vt0.c0 WHEN MIN(COUNT(AVG(vt0.c0))) THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE TOTAL(vt0.c0) END)) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (vt0.c0) UNION ALL SELECT * FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CASE WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN COALESCE(vt0.c0, vt0.c0) END) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CASE WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN COALESCE(vt0.c0, vt0.c0) END))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CASE WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN COALESCE(vt0.c0, vt0.c0) END) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0, v0.c0 FROM v0 LEFT OUTER JOIN vt0 ON ABS(QUOTE(v0.c0)) GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0 LEFT OUTER JOIN vt0 ON ABS(QUOTE(v0.c0)) WHERE ((((NOT (vt0.c0)))LIKE(((((v0.c0)OR(vt0.c0)))AND(v0.c0))))) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM v0 LEFT OUTER JOIN vt0 ON ABS(QUOTE(v0.c0)) WHERE ((NOT ((((NOT (vt0.c0)))LIKE(((((v0.c0)OR(vt0.c0)))AND(v0.c0))))))) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM v0 LEFT OUTER JOIN vt0 ON ABS(QUOTE(v0.c0)) WHERE ((((((NOT (vt0.c0)))LIKE(((((v0.c0)OR(vt0.c0)))AND(v0.c0))))) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0 LEFT OUTER JOIN vt0 ON ABS(QUOTE(v0.c0)) GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0 CROSS JOIN v0 ON CAST(((((((((v0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(v0.c0)))AND(v0.c0)) AS INTEGER) GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0 CROSS JOIN v0 ON CAST(((((((((v0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(v0.c0)))AND(v0.c0)) AS INTEGER) GROUP BY vt0.c0, v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0 CROSS JOIN v0 ON CAST(((((((((v0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(v0.c0)))AND(v0.c0)) AS INTEGER) GROUP BY vt0.c0, v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0 CROSS JOIN v0 ON CAST(((((((((v0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(v0.c0)))AND(v0.c0)) AS INTEGER) GROUP BY vt0.c0, v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0, v0.c0 FROM vt0 CROSS JOIN v0 ON CAST(((((((((v0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(v0.c0)))AND(v0.c0)) AS INTEGER) GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0 CROSS JOIN v0 ON CAST(((((((((v0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(v0.c0)))AND(v0.c0)) AS INTEGER) GROUP BY vt0.c0, v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0 CROSS JOIN v0 ON CAST(((((((((v0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(v0.c0)))AND(v0.c0)) AS INTEGER) GROUP BY vt0.c0, v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0 CROSS JOIN v0 ON CAST(((((((((v0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(v0.c0)))AND(v0.c0)) AS INTEGER) GROUP BY vt0.c0, v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0, v0.c0 FROM vt0 CROSS JOIN v0 ON CAST(((((((((v0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(v0.c0)))AND(v0.c0)) AS INTEGER) GROUP BY vt0.c0, v0.c0;
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE ('O遘e2+Q') UNION ALL SELECT ALL * FROM v0 WHERE ((NOT ('O遘e2+Q'))) UNION ALL SELECT ALL * FROM v0 WHERE ((('O遘e2+Q') ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ('FR') UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ('FR'))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((('FR') ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 NOT INDEXED WHERE (-1.605998921E9) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM vt0, v0 WHERE ((NOT (-1.605998921E9))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 WHERE (((-1.605998921E9) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING TOTAL(SUM(v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TOTAL(SUM(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL(SUM(v0.c0))) ISNULL);
SELECT ALL TOTAL((- (v0.c0)) COLLATE NOCASE) FROM vt0, v0;
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (CAST(((vt0.c0)GLOB(vt0.c0)) AS NUMERIC)) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CAST(((vt0.c0)GLOB(vt0.c0)) AS NUMERIC)))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((CAST(((vt0.c0)GLOB(vt0.c0)) AS NUMERIC)) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (HEX(((v0.c0) NOT NULL))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (HEX(((v0.c0) NOT NULL))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((HEX(((v0.c0) NOT NULL))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0, v0 WHERE (((((vt0.c0)<<(vt0.c0))) BETWEEN ('H,') AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt0 NOT INDEXED, v0 WHERE ((NOT (((((vt0.c0)<<(vt0.c0))) BETWEEN ('H,') AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt0, v0 WHERE (((((((vt0.c0)<<(vt0.c0))) BETWEEN ('H,') AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT vt0.c0, v0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON (((+ (v0.c0))) NOTNULL) GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON (((+ (v0.c0))) NOTNULL) GROUP BY vt0.c0, v0.c0 HAVING MAX(MIN(vt0.c0)) COLLATE BINARY UNION ALL SELECT vt0.c0, v0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON (((+ (v0.c0))) NOTNULL) GROUP BY vt0.c0, v0.c0 HAVING (NOT (MAX(MIN(vt0.c0)) COLLATE BINARY)) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON (((+ (v0.c0))) NOTNULL) GROUP BY vt0.c0, v0.c0 HAVING ((MAX(MIN(vt0.c0)) COLLATE BINARY) ISNULL);
SELECT * FROM vt0, v0;
SELECT * FROM vt0, v0 WHERE ((~ (CAST(vt0.c0 AS TEXT)))) UNION ALL SELECT ALL * FROM vt0, v0 WHERE ((NOT ((~ (CAST(vt0.c0 AS TEXT)))))) UNION ALL SELECT * FROM vt0, v0 WHERE ((((~ (CAST(vt0.c0 AS TEXT)))) ISNULL));
SELECT * FROM vt0, v0;
SELECT DISTINCT vt0.c0, v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON ((vt0.c0)AND(0.9004387256479329)) COLLATE BINARY;
SELECT DISTINCT vt0.c0, v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON ((vt0.c0)AND(0.9004387256479329)) COLLATE BINARY WHERE ((((v0.c0))=((v0.c0)))) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON ((vt0.c0)AND(0.9004387256479329)) COLLATE BINARY WHERE ((NOT ((((v0.c0))==((v0.c0)))))) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON ((vt0.c0)AND(0.9004387256479329)) COLLATE BINARY WHERE ((((((v0.c0))==((v0.c0)))) ISNULL));
SELECT DISTINCT vt0.c0, v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON ((vt0.c0)AND(0.9004387256479329)) COLLATE BINARY;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (CASE WHEN ((v0.c0) ISNULL) THEN ((v0.c0)OR(v0.c0)) ELSE ((v0.c0)GLOB(0.36966159365917717)) END) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (CASE WHEN ((v0.c0) ISNULL) THEN ((v0.c0)OR(v0.c0)) ELSE ((v0.c0)GLOB(0.36966159365917717)) END))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((CASE WHEN ((v0.c0) ISNULL) THEN ((v0.c0)OR(v0.c0)) ELSE ((v0.c0)GLOB(0.36966159365917717)) END) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX(SUM(vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(SUM(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(SUM(vt0.c0))) ISNULL);
SELECT ALL * FROM v0, vt0;
SELECT * FROM v0, vt0 WHERE (CASE 0.31848124620286444 COLLATE BINARY  WHEN CASE NULL  WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 END THEN ((((vt0.c0)AND(v0.c0)))AND(v0.c0)) WHEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) THEN (+ ('')) WHEN ((vt0.c0)IS NOT(vt0.c0)) THEN CASE v0.c0  WHEN x'' THEN v0.c0 ELSE vt0.c0 END ELSE HEX(v0.c0) END) UNION ALL SELECT * FROM v0, vt0 WHERE ((NOT (CASE 0.31848124620286444 COLLATE BINARY  WHEN CASE NULL  WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 END THEN ((((vt0.c0)AND(v0.c0)))AND(v0.c0)) WHEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) THEN (+ ('')) WHEN ((vt0.c0)IS NOT(vt0.c0)) THEN CASE v0.c0  WHEN x'' THEN v0.c0 ELSE vt0.c0 END ELSE HEX(v0.c0) END))) UNION ALL SELECT * FROM v0, vt0 WHERE (((CASE 0.31848124620286444 COLLATE BINARY  WHEN CASE NULL  WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 END THEN ((((vt0.c0)AND(v0.c0)))AND(v0.c0)) WHEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) THEN (+ ('')) WHEN ((vt0.c0)IS NOT(vt0.c0)) THEN CASE v0.c0  WHEN x'' THEN v0.c0 ELSE vt0.c0 END ELSE HEX(v0.c0) END) ISNULL));
SELECT ALL * FROM v0, vt0;
SELECT DISTINCT v0.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON (~ ((- (vt0.c0))));
SELECT DISTINCT v0.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON (~ ((- (vt0.c0)))) WHERE (((((((vt0.c0)OR(vt0.c0)))AND(v0.c0))) BETWEEN (((vt0.c0)*('-181317258'))) AND ((v0.c0 IN (x'', v0.c0))))) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON (~ ((- (vt0.c0)))) WHERE ((NOT (((((((vt0.c0)OR(vt0.c0)))AND(v0.c0))) BETWEEN (((vt0.c0)*('-181317258'))) AND ((v0.c0 IN (x'', v0.c0))))))) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON (~ ((- (vt0.c0)))) WHERE (((((((((vt0.c0)OR(vt0.c0)))AND(v0.c0))) BETWEEN (((vt0.c0)*('-181317258'))) AND ((v0.c0 IN (x'', v0.c0))))) ISNULL));
SELECT DISTINCT v0.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON (~ ((- (vt0.c0))));
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (CAST(((v0.c0)IS(v0.c0)) AS INTEGER)) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CAST(((v0.c0)IS(v0.c0)) AS INTEGER)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((CAST(((v0.c0)IS(v0.c0)) AS INTEGER)) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0, vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON ((json_insert(vt0.c0, v0.c0, v0.c0)) ISNULL) GROUP BY v0.c0, vt0.c0;
SELECT ALL * FROM vt0, v0;
SELECT ALL * FROM vt0, v0 WHERE ((((((NOT (NULL)))OR(((vt0.c0)/(v0.c0)))))OR((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) UNION ALL SELECT ALL * FROM vt0, v0 WHERE ((NOT ((((((NOT (NULL)))OR(((vt0.c0)/(v0.c0)))))OR((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))))) UNION ALL SELECT * FROM vt0, v0 WHERE ((((((((NOT (NULL)))OR(((vt0.c0)/(v0.c0)))))OR((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) ISNULL));
SELECT ALL * FROM vt0, v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (0xfffffffffdd8eb36) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (0xfffffffffdd8eb36))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((0xfffffffffdd8eb36) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (CAST((((0.010816464163322492, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0))) AS INTEGER)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CAST((((0.010816464163322492, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0))) AS INTEGER)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST((((0.010816464163322492, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0))) AS INTEGER)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING CASE 0.7447712800990667  WHEN ((((((((379335701)AND(vt0.c0)))OR(GROUP_CONCAT(MIN(v0.c0)))))AND(vt0.c0)))OR(vt0.c0)) THEN COUNT(vt0.c0) WHEN ((((((((GROUP_CONCAT(MIN(MIN(GROUP_CONCAT(MAX(vt0.c0))))))AND(v0.c0)))OR(v0.c0)))AND(MIN(v0.c0))))AND(COUNT(*))) THEN MAX(TOTAL(v0.c0)) WHEN (((AVG(COUNT(*))))<((GROUP_CONCAT(SUM(v0.c0))))) THEN COUNT(MIN(AVG(COUNT(*)))) END UNION ALL SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING (NOT (CASE 0.7447712800990667  WHEN ((((((((379335701)AND(vt0.c0)))OR(GROUP_CONCAT(MIN(v0.c0)))))AND(vt0.c0)))OR(vt0.c0)) THEN COUNT(vt0.c0) WHEN ((((((((GROUP_CONCAT(MIN(MIN(GROUP_CONCAT(MAX(vt0.c0))))))AND(v0.c0)))OR(v0.c0)))AND(MIN(v0.c0))))AND(COUNT(*))) THEN MAX(TOTAL(v0.c0)) WHEN (((AVG(COUNT(*))))<((GROUP_CONCAT(SUM(v0.c0))))) THEN COUNT(MIN(AVG(COUNT(*)))) END)) UNION ALL SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING ((CASE 0.7447712800990667  WHEN ((((((((379335701)AND(vt0.c0)))OR(GROUP_CONCAT(MIN(v0.c0)))))AND(vt0.c0)))OR(vt0.c0)) THEN COUNT(vt0.c0) WHEN ((((((((GROUP_CONCAT(MIN(MIN(GROUP_CONCAT(MAX(vt0.c0))))))AND(v0.c0)))OR(v0.c0)))AND(MIN(v0.c0))))AND(COUNT(*))) THEN MAX(TOTAL(v0.c0)) WHEN (((AVG(COUNT(*))))<((GROUP_CONCAT(SUM(v0.c0))))) THEN COUNT(MIN(AVG(COUNT(*)))) END) ISNULL);
SELECT v0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON ((((((((((((1.180471517E9)OR(CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0Xacc9c4e WHEN vt0.c0 THEN vt0.c0 END)))OR(TRIM(v0.c0, 'wV&NQiSFT'))))OR((- (vt0.c0)))))OR((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))))AND(((v0.c0) ISNULL))))AND(CAST(vt0.c0 AS TEXT)));
SELECT v0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON ((((((((((((1.180471517E9)OR(CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0xacc9c4e WHEN vt0.c0 THEN vt0.c0 END)))OR(TRIM(v0.c0, 'wV&NQiSFT'))))OR((- (vt0.c0)))))OR((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))))AND(((v0.c0) ISNULL))))AND(CAST(vt0.c0 AS TEXT))) WHERE (((((x'bbb5e0f1') NOT BETWEEN (vt0.c0) AND (v0.c0))) IS FALSE)) UNION ALL SELECT ALL v0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON ((((((((((((1.180471517E9)OR(CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0xacc9c4e WHEN vt0.c0 THEN vt0.c0 END)))OR(TRIM(v0.c0, 'wV&NQiSFT'))))OR((- (vt0.c0)))))OR((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))))AND(((v0.c0) ISNULL))))AND(CAST(vt0.c0 AS TEXT))) WHERE ((NOT (((((x'bbb5e0f1') NOT BETWEEN (vt0.c0) AND (v0.c0))) IS FALSE)))) UNION ALL SELECT ALL v0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON ((((((((((((1.180471517E9)OR(CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0xacc9c4e WHEN vt0.c0 THEN vt0.c0 END)))OR(TRIM(v0.c0, 'wV&NQiSFT'))))OR((- (vt0.c0)))))OR((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))))AND(((v0.c0) ISNULL))))AND(CAST(vt0.c0 AS TEXT))) WHERE (((((((x'bbb5e0f1') NOT BETWEEN (vt0.c0) AND (v0.c0))) IS FALSE)) ISNULL));
SELECT v0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON ((((((((((((1.180471517E9)OR(CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0Xacc9c4e WHEN vt0.c0 THEN vt0.c0 END)))OR(TRIM(v0.c0, 'wV&NQiSFT'))))OR((- (vt0.c0)))))OR((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))))AND(((v0.c0) ISNULL))))AND(CAST(vt0.c0 AS TEXT)));
SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt0;
SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt0 WHERE (CASE (((v0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0)))  WHEN LIKELIHOOD(vt0.c0, 0.6459089789096525) THEN v0.c0 WHEN ((v0.c0) ISNULL) THEN (- (vt0.c0)) WHEN (vt0.c0 IN (v0.c0)) THEN ((v0.c0)=(v0.c0)) END) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt0 WHERE ((NOT (CASE (((v0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0)))  WHEN LIKELIHOOD(vt0.c0, 0.6459089789096525) THEN v0.c0 WHEN ((v0.c0) ISNULL) THEN (- (vt0.c0)) WHEN (vt0.c0 IN (v0.c0)) THEN ((v0.c0)=(v0.c0)) END))) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt0 WHERE (((CASE (((v0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0)))  WHEN LIKELIHOOD(vt0.c0, 0.6459089789096525) THEN v0.c0 WHEN ((v0.c0) ISNULL) THEN (- (vt0.c0)) WHEN (vt0.c0 IN (v0.c0)) THEN ((v0.c0)==(v0.c0)) END) ISNULL));
SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) NOT BETWEEN (v0.c0) AND (0x2e7a2993))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) NOT BETWEEN (v0.c0) AND (0X2e7a2993))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) NOT BETWEEN (v0.c0) AND (0X2e7a2993))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING CAST(CAST(vt0.c0 AS INTEGER) AS INTEGER) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (CAST(CAST(vt0.c0 AS INTEGER) AS INTEGER))) UNION ALL SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING ((CAST(CAST(vt0.c0 AS INTEGER) AS INTEGER)) ISNULL);
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING CAST(CAST(vt0.c0 AS INTEGER) AS INTEGER) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (CAST(CAST(vt0.c0 AS INTEGER) AS INTEGER))) UNION ALL SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING ((CAST(CAST(vt0.c0 AS INTEGER) AS INTEGER)) ISNULL);
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM v0, vt0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 WHERE (TYPEOF(DISTINCT (v0.c0 IN ()))) UNION ALL SELECT vt0.c0, v0.c0 FROM v0, vt0 WHERE ((NOT (TYPEOF(DISTINCT (v0.c0 IN ()))))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 WHERE (((TYPEOF(DISTINCT (v0.c0 IN ()))) ISNULL));
SELECT vt0.c0, v0.c0 FROM v0, vt0;
SELECT DISTINCT * FROM vt0, v0 NOT INDEXED;
SELECT DISTINCT * FROM vt0, v0 WHERE (((CAST(vt0.c0 AS TEXT))GLOB(CASE WHEN vt0.c0 THEN 0.277452561119219 ELSE vt0.c0 END))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT (((CAST(vt0.c0 AS TEXT))GLOB(CASE WHEN vt0.c0 THEN 0.277452561119219 ELSE vt0.c0 END))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE (((((CAST(vt0.c0 AS TEXT))GLOB(CASE WHEN vt0.c0 THEN 0.277452561119219 ELSE vt0.c0 END))) ISNULL));
SELECT DISTINCT * FROM vt0, v0 NOT INDEXED;
SELECT ALL v0.c0 FROM v0 NOT INDEXED GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((load_extension(v0.c0, v0.c0) IN (v0.c0 COLLATE NOCASE, ((v0.c0)|(NULL))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((load_extension(v0.c0, v0.c0) IN (v0.c0 COLLATE NOCASE, ((v0.c0)|(NULL))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((load_extension(v0.c0, v0.c0) IN (v0.c0 COLLATE NOCASE, ((v0.c0)|(NULL))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT v0.c0 FROM vt0, v0;
SELECT v0.c0 FROM vt0, v0 WHERE (('' IN ())) UNION ALL SELECT v0.c0 FROM vt0, v0 WHERE ((NOT (('' IN ())))) UNION ALL SELECT v0.c0 FROM vt0, v0 WHERE (((('' IN ())) ISNULL));
SELECT v0.c0 FROM vt0, v0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (NULL) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 WHERE (((((((vt0.c0)OR(0.754461188155661)))OR(v0.c0)))IS(((v0.c0)&(v0.c0))))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 WHERE ((NOT (((((((vt0.c0)OR(0.754461188155661)))OR(v0.c0)))IS(((v0.c0)&(v0.c0))))))) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM v0, vt0 WHERE (((((((((vt0.c0)OR(0.754461188155661)))OR(v0.c0)))IS(((v0.c0)&(v0.c0))))) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING ((CASE vt0.c0  WHEN GROUP_CONCAT(MAX(v0.c0)) THEN v0.c0 WHEN SUM(TOTAL(COUNT(SUM(AVG(vt0.c0))))) THEN MIN(COUNT(vt0.c0)) WHEN COUNT(*) THEN NULL END)%(AVG(v0.c0))) UNION ALL SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING (NOT (((CASE vt0.c0  WHEN GROUP_CONCAT(MAX(v0.c0)) THEN v0.c0 WHEN SUM(TOTAL(COUNT(SUM(AVG(vt0.c0))))) THEN MIN(COUNT(vt0.c0)) WHEN COUNT(*) THEN NULL END)%(AVG(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING ((((CASE vt0.c0  WHEN GROUP_CONCAT(MAX(v0.c0)) THEN v0.c0 WHEN SUM(TOTAL(COUNT(SUM(AVG(vt0.c0))))) THEN MIN(COUNT(vt0.c0)) WHEN COUNT(*) THEN NULL END)%(AVG(v0.c0)))) ISNULL);
SELECT ALL * FROM v0, vt0;
SELECT ALL * FROM v0, vt0 WHERE (((CAST(v0.c0 AS REAL))!=(((vt0.c0)<<(v0.c0))))) UNION ALL SELECT * FROM v0, vt0 WHERE ((NOT (((CAST(v0.c0 AS REAL))!=(((vt0.c0)<<(v0.c0))))))) UNION ALL SELECT ALL * FROM v0, vt0 NOT INDEXED WHERE (((((CAST(v0.c0 AS REAL))<>(((vt0.c0)<<(v0.c0))))) ISNULL));
SELECT ALL * FROM v0, vt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))AND(((v0.c0) BETWEEN (v0.c0) AND (x'')))))AND(((v0.c0) IS TRUE)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))AND(((v0.c0) BETWEEN (v0.c0) AND (x'')))))AND(((v0.c0) IS TRUE)))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))AND(((v0.c0) BETWEEN (v0.c0) AND (x'')))))AND(((v0.c0) IS TRUE)))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 WHERE (((((((((((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)AND(((vt0.c0) IS FALSE))))AND(NULLIF(v0.c0, vt0.c0))))OR(((((((((vt0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))))OR(SQLITE_SOURCE_ID())))OR(((vt0.c0) ISNULL))))OR(vt0.c0))) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM v0, vt0 WHERE ((NOT (((((((((((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)AND(((vt0.c0) IS FALSE))))AND(NULLIF(v0.c0, vt0.c0))))OR(((((((((vt0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))))OR(SQLITE_SOURCE_ID())))OR(((vt0.c0) ISNULL))))OR(vt0.c0))))) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM v0, vt0 WHERE (((((((((((((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)AND(((vt0.c0) IS FALSE))))AND(NULLIF(v0.c0, vt0.c0))))OR(((((((((vt0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))))OR(SQLITE_SOURCE_ID())))OR(((vt0.c0) ISNULL))))OR(vt0.c0))) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (~ (TOTAL(v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((~ (TOTAL(v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((~ (TOTAL(v0.c0)))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (~ (TOTAL(v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((~ (TOTAL(v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((~ (TOTAL(v0.c0)))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (v0.c0) UNION ALL SELECT * FROM v0 WHERE ((NOT (v0.c0))) UNION ALL SELECT ALL * FROM v0 NOT INDEXED WHERE (((v0.c0) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((CAST(v0.c0 AS REAL)))<>((v0.c0)))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((CAST(v0.c0 AS REAL)))!=((v0.c0)))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((CAST(v0.c0 AS REAL)))!=((v0.c0)))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0 WHERE (vt0.c0) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, vt0 WHERE ((NOT (vt0.c0))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ABS(DISTINCT MIN(v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (ABS(DISTINCT MIN(v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((ABS(DISTINCT MIN(v0.c0))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ABS(DISTINCT MIN(v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (ABS(DISTINCT MIN(v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((ABS(DISTINCT MIN(v0.c0))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE ('-1733429817') UNION ALL SELECT * FROM vt0 WHERE ((NOT ('-1733429817'))) UNION ALL SELECT * FROM vt0 WHERE ((('-1733429817') ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE (1826655251) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT (1826655251))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE (((1826655251) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (CAST((((v0.c0))<>((v0.c0))) AS NUMERIC)) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (CAST((((v0.c0))!=((v0.c0))) AS NUMERIC)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((CAST((((v0.c0))<>((v0.c0))) AS NUMERIC)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING ((TOTAL(COUNT(*)))>>(MIN(vt0.c0))) COLLATE NOCASE UNION ALL SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING (NOT (((TOTAL(COUNT(*)))>>(MIN(vt0.c0))) COLLATE NOCASE)) UNION ALL SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING ((((TOTAL(COUNT(*)))>>(MIN(vt0.c0))) COLLATE NOCASE) ISNULL);
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (CASE WHEN v0.c0 THEN CAST(v0.c0 AS INTEGER) ELSE ((v0.c0)|(v0.c0)) END) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CASE WHEN v0.c0 THEN CAST(v0.c0 AS INTEGER) ELSE ((v0.c0)|(v0.c0)) END))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((CASE WHEN v0.c0 THEN CAST(v0.c0 AS INTEGER) ELSE ((v0.c0)|(v0.c0)) END) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT vt0.c0, v0.c0 FROM vt0 FULL OUTER JOIN v0 ON (((0X975ec0, ((vt0.c0)<<(vt0.c0)), (vt0.c0 IN ()), CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END, ((((x'd7e3')AND(vt0.c0)))AND(vt0.c0))))=((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END, (vt0.c0 IN (v0.c0)), CAST(vt0.c0 AS BLOB), ((((v0.c0)AND(v0.c0)))OR(vt0.c0)), ((vt0.c0)AND(0.5040599467816427)))));
SELECT DISTINCT vt0.c0, v0.c0 FROM vt0 FULL OUTER JOIN v0 ON (((0x975ec0, ((vt0.c0)<<(vt0.c0)), (vt0.c0 IN ()), CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END, ((((x'd7e3')AND(vt0.c0)))AND(vt0.c0))))==((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END, (vt0.c0 IN (v0.c0)), CAST(vt0.c0 AS BLOB), ((((v0.c0)AND(v0.c0)))OR(vt0.c0)), ((vt0.c0)AND(0.5040599467816427))))) WHERE ('0.277452561119219') UNION SELECT DISTINCT vt0.c0, v0.c0 FROM vt0 FULL OUTER JOIN v0 ON (((0X975ec0, ((vt0.c0)<<(vt0.c0)), (vt0.c0 IN ()), CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END, ((((x'd7e3')AND(vt0.c0)))AND(vt0.c0))))==((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END, (vt0.c0 IN (v0.c0)), CAST(vt0.c0 AS BLOB), ((((v0.c0)AND(v0.c0)))OR(vt0.c0)), ((vt0.c0)AND(0.5040599467816427))))) WHERE ((NOT ('0.277452561119219'))) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM vt0 FULL OUTER JOIN v0 ON (((0x975ec0, ((vt0.c0)<<(vt0.c0)), (vt0.c0 IN ()), CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END, ((((x'd7e3')AND(vt0.c0)))AND(vt0.c0))))=((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END, (vt0.c0 IN (v0.c0)), CAST(vt0.c0 AS BLOB), ((((v0.c0)AND(v0.c0)))OR(vt0.c0)), ((vt0.c0)AND(0.5040599467816427))))) WHERE ((('0.277452561119219') ISNULL));
SELECT DISTINCT vt0.c0, v0.c0 FROM vt0 FULL OUTER JOIN v0 ON (((0X975ec0, ((vt0.c0)<<(vt0.c0)), (vt0.c0 IN ()), CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END, ((((x'd7e3')AND(vt0.c0)))AND(vt0.c0))))=((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END, (vt0.c0 IN (v0.c0)), CAST(vt0.c0 AS BLOB), ((((v0.c0)AND(v0.c0)))OR(vt0.c0)), ((vt0.c0)AND(0.5040599467816427)))));
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) AND (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) AND (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) AND (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CAST(AVG(x'c728') AS TEXT) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CAST(AVG(x'c728') AS TEXT))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CAST(AVG(x'c728') AS TEXT)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CAST(AVG(x'c728') AS TEXT) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CAST(AVG(x'c728') AS TEXT))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CAST(AVG(x'c728') AS TEXT)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0, v0.c0 FROM v0, vt0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 WHERE (v0.c0) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 WHERE ((NOT (v0.c0))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 WHERE (((v0.c0) ISNULL));
SELECT vt0.c0, v0.c0 FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE (((TRIM(DISTINCT vt0.c0))AND(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(v0.c0)))OR(vt0.c0))))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT (((TRIM(DISTINCT vt0.c0))AND(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(v0.c0)))OR(vt0.c0))))))) UNION SELECT DISTINCT * FROM v0 NOT INDEXED, vt0 WHERE (((((TRIM(DISTINCT vt0.c0))AND(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(v0.c0)))OR(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((((NOT (v0.c0)))==(''))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((NOT (v0.c0)))==(''))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((((NOT (v0.c0)))=(''))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((((MAX(AVG(v0.c0)))&(v0.c0)))AND(((((v0.c0)AND(AVG(v0.c0))))OR(MIN(COUNT(v0.c0)))))))AND(COUNT(v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((((((MAX(AVG(v0.c0)))&(v0.c0)))AND(((((v0.c0)AND(AVG(v0.c0))))OR(MIN(COUNT(v0.c0)))))))AND(COUNT(v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((((((MAX(AVG(v0.c0)))&(v0.c0)))AND(((((v0.c0)AND(AVG(v0.c0))))OR(MIN(COUNT(v0.c0)))))))AND(COUNT(v0.c0)))) ISNULL);
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (CAST(LIKELIHOOD(DISTINCT v0.c0, 0.6668653615756952) AS REAL)) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (CAST(LIKELIHOOD(DISTINCT v0.c0, 0.6668653615756952) AS REAL)))) UNION ALL SELECT ALL * FROM v0 WHERE (((CAST(LIKELIHOOD(DISTINCT v0.c0, 0.6668653615756952) AS REAL)) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE (((((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))||(((vt0.c0)>=(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT (((((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))||(((vt0.c0)>=(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE (((((((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))||(((vt0.c0)>=(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (v0.c0) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (v0.c0))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((v0.c0) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT(GROUP_CONCAT('1859063684')) UNION ALL SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(GROUP_CONCAT('1859063684')))) UNION ALL SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(GROUP_CONCAT('1859063684'))) ISNULL);
SELECT * FROM v0 INNER JOIN vt0 ON (((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)) IN ());
SELECT ALL * FROM v0 INNER JOIN vt0 ON (((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)) IN ()) WHERE (vt0.c0) UNION ALL SELECT ALL * FROM v0 INNER JOIN vt0 ON (((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)) IN ()) WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL * FROM v0 INNER JOIN vt0 ON (((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)) IN ()) WHERE (((vt0.c0) ISNULL));
SELECT * FROM v0 INNER JOIN vt0 ON (((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)) IN ());
SELECT DISTINCT * FROM v0 NATURAL JOIN vt0;
SELECT DISTINCT * FROM v0 NATURAL JOIN vt0 WHERE (v0.c0) UNION SELECT DISTINCT * FROM v0 NATURAL JOIN vt0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT * FROM v0 NATURAL JOIN vt0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT * FROM v0 NATURAL JOIN vt0;
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0 WHERE ((((vt0.c0)>(vt0.c0)) IN ())) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, vt0 WHERE ((NOT ((((vt0.c0)>(vt0.c0)) IN ())))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, vt0 WHERE ((((((vt0.c0)>(vt0.c0)) IN ())) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING TOTAL(COUNT(v0.c0)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TOTAL(COUNT(v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL(COUNT(v0.c0))) ISNULL);
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 WHERE (-1.605998921E9) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0, v0 WHERE ((NOT (-1.605998921E9))) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0, v0 WHERE (((-1.605998921E9) ISNULL));
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0;
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE (((((((vt0.c0)-(v0.c0)))OR((v0.c0 IN ()))))OR(CASE v0.c0  WHEN vt0.c0 THEN NULL END))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT (((((((vt0.c0)-(v0.c0)))OR((v0.c0 IN ()))))OR(CASE v0.c0  WHEN vt0.c0 THEN NULL END))))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE (((((((((vt0.c0)-(v0.c0)))OR((v0.c0 IN ()))))OR(CASE v0.c0  WHEN vt0.c0 THEN NULL END))) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 WHERE (CASE WHEN v0.c0 COLLATE BINARY THEN (('0.6821709210550662') NOT NULL) WHEN (NOT ('I+y3D ')) THEN CAST(v0.c0 AS TEXT) WHEN ((((((((v0.c0)AND(x'')))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)) THEN ((v0.c0) ISNULL) ELSE CAST(vt0.c0 AS BLOB) END) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM v0, vt0 WHERE ((NOT (CASE WHEN v0.c0 COLLATE BINARY THEN (('0.6821709210550662') NOT NULL) WHEN (NOT ('I+y3D ')) THEN CAST(v0.c0 AS TEXT) WHEN ((((((((v0.c0)AND(x'')))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)) THEN ((v0.c0) ISNULL) ELSE CAST(vt0.c0 AS BLOB) END))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 WHERE (((CASE WHEN v0.c0 COLLATE BINARY THEN (('0.6821709210550662') NOT NULL) WHEN (NOT ('I+y3D ')) THEN CAST(v0.c0 AS TEXT) WHEN ((((((((v0.c0)AND(x'')))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)) THEN ((v0.c0) ISNULL) ELSE CAST(vt0.c0 AS BLOB) END) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT((v0.c0 IN (v0.c0, SUM(AVG(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT((v0.c0 IN (v0.c0, SUM(AVG(v0.c0))))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT((v0.c0 IN (v0.c0, SUM(AVG(v0.c0)))))) ISNULL);
SELECT v0.c0 FROM v0 CROSS JOIN vt0 ON CAST(((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS BLOB);
SELECT ALL v0.c0 FROM v0 CROSS JOIN vt0 ON CAST(((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS BLOB) WHERE (CAST(((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)) AS REAL)) ORDER BY CASE WHEN (((v0.c0, vt0.c0, vt0.c0, vt0.c0, v0.c0)) NOT BETWEEN ((v0.c0, vt0.c0, v0.c0, vt0.c0, vt0.c0)) AND ((v0.c0, vt0.c0, v0.c0, v0.c0, v0.c0))) THEN ((v0.c0)-(v0.c0)) WHEN NULL THEN CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END WHEN (NOT (vt0.c0)) THEN x'' ELSE vt0.c0 END;
SELECT v0.c0 FROM v0 CROSS JOIN vt0 ON CAST(((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS BLOB) WHERE ((NOT (CAST(((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)) AS REAL)))) ORDER BY CASE WHEN (((v0.c0, vt0.c0, vt0.c0, vt0.c0, v0.c0)) NOT BETWEEN ((v0.c0, vt0.c0, v0.c0, vt0.c0, vt0.c0)) AND ((v0.c0, vt0.c0, v0.c0, v0.c0, v0.c0))) THEN ((v0.c0)-(v0.c0)) WHEN NULL THEN CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END WHEN (NOT (vt0.c0)) THEN x'' ELSE vt0.c0 END;
SELECT v0.c0 FROM v0 CROSS JOIN vt0 ON CAST(((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS BLOB) WHERE (((CAST(((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)) AS REAL)) ISNULL)) ORDER BY CASE WHEN (((v0.c0, vt0.c0, vt0.c0, vt0.c0, v0.c0)) NOT BETWEEN ((v0.c0, vt0.c0, v0.c0, vt0.c0, vt0.c0)) AND ((v0.c0, vt0.c0, v0.c0, v0.c0, v0.c0))) THEN ((v0.c0)-(v0.c0)) WHEN NULL THEN CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END WHEN (NOT (vt0.c0)) THEN x'' ELSE vt0.c0 END;
SELECT v0.c0 FROM v0 CROSS JOIN vt0 ON CAST(((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS BLOB);
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE (LOWER(DISTINCT QUOTE(vt0.c0))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT (LOWER(DISTINCT QUOTE(vt0.c0))))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE (((LOWER(DISTINCT QUOTE(vt0.c0))) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE (CASE WHEN v0.c0 THEN (((1.180471517E9))<((v0.c0))) END) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM vt0, v0 WHERE ((NOT (CASE WHEN v0.c0 THEN (((1.180471517E9))<((v0.c0))) END))) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE (((CASE WHEN v0.c0 THEN (((1.180471517E9))<((v0.c0))) END) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((~ (SUM(v0.c0)))) BETWEEN (AVG(TOTAL(v0.c0))) AND (TOTAL(AVG(SUM(MAX(COUNT(*))))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((((~ (SUM(v0.c0)))) BETWEEN (AVG(TOTAL(v0.c0))) AND (TOTAL(AVG(SUM(MAX(COUNT(*))))))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((~ (SUM(v0.c0)))) BETWEEN (AVG(TOTAL(v0.c0))) AND (TOTAL(AVG(SUM(MAX(COUNT(*)))))))) ISNULL);
SELECT TOTAL(((NULL)|(v0.c0)) COLLATE RTRIM) FROM vt0, v0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)>>(CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 END))  NULLS FIRST, ((((v0.c0)>=(v0.c0)))IS NOT(x''));
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE ((LIKELIHOOD(vt0.c0, 0.7446626305986307) IN (CASE v0.c0  WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT ((LIKELIHOOD(vt0.c0, 0.7446626305986307) IN (CASE v0.c0  WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END))))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((((LIKELIHOOD(vt0.c0, 0.7446626305986307) IN (CASE v0.c0  WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END))) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT v0.c0, vt0.c0 FROM vt0 INNER JOIN v0 ON (NOT ((((x''))>=((v0.c0))))) GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0 INNER JOIN v0 ON (NOT ((((x''))>=((v0.c0))))) WHERE ((((vt0.c0 IN ())) NOT BETWEEN (v0.c0) AND (CASE WHEN v0.c0 THEN vt0.c0 END))) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM vt0 NOT INDEXED INNER JOIN v0 ON (NOT ((((x''))>=((v0.c0))))) WHERE ((NOT ((((vt0.c0 IN ())) NOT BETWEEN (v0.c0) AND (CASE WHEN v0.c0 THEN vt0.c0 END))))) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM vt0 INNER JOIN v0 ON (NOT ((((x''))>=((v0.c0))))) WHERE ((((((vt0.c0 IN ())) NOT BETWEEN (v0.c0) AND (CASE WHEN v0.c0 THEN vt0.c0 END))) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0 INNER JOIN v0 ON (NOT ((((x''))>=((v0.c0))))) GROUP BY v0.c0, vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT(vt0.c0) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(vt0.c0)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT(vt0.c0) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(vt0.c0)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM v0, vt0;
SELECT ALL * FROM v0, vt0 WHERE (CASE WHEN ((((vt0.c0)AND(x'')))AND(v0.c0)) THEN ((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)) WHEN ((v0.c0)>=(vt0.c0)) THEN (NOT (v0.c0)) WHEN ((v0.c0)>>(v0.c0)) THEN ((vt0.c0) NOTNULL) ELSE ((vt0.c0)&(vt0.c0)) END) UNION ALL SELECT * FROM v0, vt0 WHERE ((NOT (CASE WHEN ((((vt0.c0)AND(x'')))AND(v0.c0)) THEN ((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)) WHEN ((v0.c0)>=(vt0.c0)) THEN (NOT (v0.c0)) WHEN ((v0.c0)>>(v0.c0)) THEN ((vt0.c0) NOTNULL) ELSE ((vt0.c0)&(vt0.c0)) END))) UNION ALL SELECT ALL * FROM v0, vt0 WHERE (((CASE WHEN ((((vt0.c0)AND(x'')))AND(v0.c0)) THEN ((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)) WHEN ((v0.c0)>=(vt0.c0)) THEN (NOT (v0.c0)) WHEN ((v0.c0)>>(v0.c0)) THEN ((vt0.c0) NOTNULL) ELSE ((vt0.c0)&(vt0.c0)) END) ISNULL));
SELECT ALL * FROM v0, vt0;
SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, v0;
SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, v0 WHERE ((- ((v0.c0 IN (vt0.c0))))) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, v0 WHERE ((NOT ((- ((v0.c0 IN (vt0.c0))))))) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, v0 WHERE ((((- ((v0.c0 IN (vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, v0;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0, v0 WHERE ((- ((NOT (vt0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt0, v0 WHERE ((NOT ((- ((NOT (vt0.c0))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt0, v0 WHERE ((((- ((NOT (vt0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING AVG(MIN(AVG(v0.c0)) COLLATE BINARY) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (AVG(MIN(AVG(v0.c0)) COLLATE BINARY))) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING ((AVG(MIN(AVG(v0.c0)) COLLATE BINARY)) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE ((((vt0.c0 IN ())) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((((vt0.c0 IN ())) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))))) UNION ALL SELECT * FROM vt0 WHERE ((((((vt0.c0 IN ())) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((v0.c0 COLLATE RTRIM)|(((v0.c0)/(v0.c0))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((v0.c0 COLLATE RTRIM)|(((v0.c0)/(v0.c0))))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((v0.c0 COLLATE RTRIM)|(((v0.c0)/(v0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL v0.c0 FROM v0 FULL OUTER JOIN vt0 ON (((vt0.c0 IN ())) IS FALSE) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 FULL OUTER JOIN vt0 ON (((vt0.c0 IN ())) IS FALSE) WHERE (CASE ((0.8222456975371282)=(vt0.c0))  WHEN LOWER(vt0.c0) THEN ((v0.c0)<<(vt0.c0)) END) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 FULL OUTER JOIN vt0 ON (((vt0.c0 IN ())) IS FALSE) WHERE ((NOT (CASE ((0.8222456975371282)==(vt0.c0))  WHEN LOWER(vt0.c0) THEN ((v0.c0)<<(vt0.c0)) END))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 FULL OUTER JOIN vt0 ON (((vt0.c0 IN ())) IS FALSE) WHERE (((CASE ((0.8222456975371282)==(vt0.c0))  WHEN LOWER(vt0.c0) THEN ((v0.c0)<<(vt0.c0)) END) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 FULL OUTER JOIN vt0 ON (((vt0.c0 IN ())) IS FALSE) GROUP BY v0.c0;
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING MAX(MAX(GROUP_CONCAT(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING (NOT (MAX(MAX(GROUP_CONCAT(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING ((MAX(MAX(GROUP_CONCAT(vt0.c0)))) ISNULL);
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (NULL) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (NULL))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((NULL) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0;
SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0 WHERE (((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0 WHERE ((NOT (((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE))) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0 WHERE (((((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ('1542079077') GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ('1542079077'))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((('1542079077') ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING NULL UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (NULL)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((NULL) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING NULL UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (NULL)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((NULL) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (CAST((vt0.c0 IN ()) AS INTEGER)) UNION ALL SELECT * FROM vt0 WHERE ((NOT (CAST((vt0.c0 IN ()) AS INTEGER)))) UNION ALL SELECT ALL * FROM vt0 WHERE (((CAST((vt0.c0 IN ()) AS INTEGER)) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0;
SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0 WHERE (vt0.c0) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 WHERE (((((((0.5682095513167253))<>((v0.c0)))))>=((((vt0.c0)<=(vt0.c0)))))) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM v0, vt0 NOT INDEXED WHERE ((NOT (((((((0.5682095513167253))<>((v0.c0)))))>=((((vt0.c0)<=(vt0.c0)))))))) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM v0, vt0 WHERE (((((((((0.5682095513167253))!=((v0.c0)))))>=((((vt0.c0)<=(vt0.c0)))))) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING HEX(DISTINCT TOTAL(TOTAL(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (HEX(DISTINCT TOTAL(TOTAL(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((HEX(DISTINCT TOTAL(TOTAL(vt0.c0)))) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE ((+ (UPPER(DISTINCT vt0.c0)))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((+ (UPPER(DISTINCT vt0.c0)))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((+ (UPPER(DISTINCT vt0.c0)))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CAST(((vt0.c0) ISNULL) AS TEXT)) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (CAST(((vt0.c0) ISNULL) AS TEXT)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CAST(((vt0.c0) ISNULL) AS TEXT)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((SUM(vt0.c0)))) COLLATE RTRIM UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING (NOT ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((SUM(vt0.c0)))) COLLATE RTRIM)) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((SUM(vt0.c0)))) COLLATE RTRIM) ISNULL);
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((SUM(vt0.c0)))) COLLATE RTRIM UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING (NOT ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((SUM(vt0.c0)))) COLLATE RTRIM)) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((SUM(vt0.c0)))) COLLATE RTRIM) ISNULL);
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE ('#C_zj') UNION ALL SELECT * FROM vt0 WHERE ((NOT ('#C_zj'))) UNION ALL SELECT ALL * FROM vt0 WHERE ((('#C_zj') ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 NATURAL JOIN v0;
SELECT DISTINCT vt0.c0 FROM vt0 NATURAL JOIN v0 WHERE (((((v0.c0) IS TRUE))/((NOT (vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 NATURAL JOIN v0 WHERE ((NOT (((((v0.c0) IS TRUE))/((NOT (vt0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 NATURAL JOIN v0 WHERE (((((((v0.c0) IS TRUE))/((NOT (vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0 NATURAL JOIN v0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((vt0.c0))<((((vt0.c0)>=(vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0))<((((vt0.c0)>=(vt0.c0)))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c0))<((((vt0.c0)>=(vt0.c0)))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING AVG(((v0.c0) NOT NULL)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (AVG(((v0.c0) NOT NULL)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((AVG(((v0.c0) NOT NULL))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING AVG(((v0.c0) NOT NULL)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (AVG(((v0.c0) NOT NULL)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((AVG(((v0.c0) NOT NULL))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt0.c0 FROM v0, vt0;
SELECT ALL vt0.c0 FROM v0, vt0 NOT INDEXED WHERE (((vt0.c0)AND(v0.c0)) COLLATE RTRIM) UNION ALL SELECT ALL vt0.c0 FROM v0, vt0 WHERE ((NOT (((vt0.c0)AND(v0.c0)) COLLATE RTRIM))) UNION ALL SELECT ALL vt0.c0 FROM v0, vt0 WHERE (((((vt0.c0)AND(v0.c0)) COLLATE RTRIM) ISNULL));
SELECT vt0.c0 FROM v0, vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB))AND((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((CAST(vt0.c0 AS BLOB))AND((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0)))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((CAST(vt0.c0 AS BLOB))AND((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0)))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 WHERE (v0.c0) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 WHERE ((NOT (v0.c0))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 WHERE (((v0.c0) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT vt0.c0, v0.c0 FROM vt0 NATURAL JOIN v0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0 NATURAL JOIN v0 GROUP BY vt0.c0, v0.c0 HAVING SUM((((vt0.c0))>((vt0.c0)))) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0 NATURAL JOIN v0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (SUM((((vt0.c0))>((vt0.c0)))))) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0 NATURAL JOIN v0 GROUP BY vt0.c0, v0.c0 HAVING ((SUM((((vt0.c0))>((vt0.c0))))) ISNULL);
SELECT vt0.c0, v0.c0 FROM vt0 NATURAL JOIN v0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0 NATURAL JOIN v0 GROUP BY vt0.c0, v0.c0 HAVING SUM((((vt0.c0))>((vt0.c0)))) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0 NATURAL JOIN v0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (SUM((((vt0.c0))>((vt0.c0)))))) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0 NATURAL JOIN v0 GROUP BY vt0.c0, v0.c0 HAVING ((SUM((((vt0.c0))>((vt0.c0))))) ISNULL);
SELECT vt0.c0, v0.c0 FROM vt0 NATURAL JOIN v0 GROUP BY vt0.c0, v0.c0;
SELECT * FROM vt0 CROSS JOIN v0 ON ((CAST(vt0.c0 AS BLOB))>>((~ (v0.c0))));
SELECT ALL * FROM vt0 CROSS JOIN v0 ON ((CAST(vt0.c0 AS BLOB))>>((~ (v0.c0)))) WHERE (json_valid(CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) UNION ALL SELECT * FROM vt0 CROSS JOIN v0 ON ((CAST(vt0.c0 AS BLOB))>>((~ (v0.c0)))) WHERE ((NOT (json_valid(CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))) UNION ALL SELECT * FROM vt0 CROSS JOIN v0 ON ((CAST(vt0.c0 AS BLOB))>>((~ (v0.c0)))) WHERE (((json_valid(CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ISNULL));
SELECT * FROM vt0 CROSS JOIN v0 ON ((CAST(vt0.c0 AS BLOB))>>((~ (v0.c0))));
SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0;
SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0 WHERE (vt0.c0) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (x'') GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (x''))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((x'') ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(vt0.c0))>=(GROUP_CONCAT(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((TOTAL(vt0.c0))>=(GROUP_CONCAT(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((TOTAL(vt0.c0))>=(GROUP_CONCAT(vt0.c0)))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(vt0.c0))>=(GROUP_CONCAT(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((TOTAL(vt0.c0))>=(GROUP_CONCAT(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((TOTAL(vt0.c0))>=(GROUP_CONCAT(vt0.c0)))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE ((NOT (LIKELY(DISTINCT v0.c0)))) UNION ALL SELECT * FROM v0 WHERE ((NOT ((NOT (LIKELY(DISTINCT v0.c0)))))) UNION ALL SELECT * FROM v0 WHERE ((((NOT (LIKELY(DISTINCT v0.c0)))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE (((((NULL)-(v0.c0))) NOT NULL)) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE ((NOT (((((NULL)-(v0.c0))) NOT NULL)))) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM vt0, v0 WHERE (((((((NULL)-(v0.c0))) NOT NULL)) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING SUM(COUNT(vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (SUM(COUNT(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM(COUNT(vt0.c0))) ISNULL);
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE (((((CAST(v0.c0 AS INTEGER))OR(0.2262037035971569)))AND((+ (v0.c0))))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (((((CAST(v0.c0 AS INTEGER))OR(0.2262037035971569)))AND((+ (v0.c0))))))) UNION ALL SELECT * FROM v0 WHERE (((((((CAST(v0.c0 AS INTEGER))OR(0.2262037035971569)))AND((+ (v0.c0))))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)OR(((vt0.c0) NOT NULL))))OR(((vt0.c0)OR(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)OR(((vt0.c0) NOT NULL))))OR(((vt0.c0)OR(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)OR(((vt0.c0) NOT NULL))))OR(((vt0.c0)OR(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 WHERE ((((((v0.c0, vt0.c0, v0.c0))!=((vt0.c0, v0.c0, v0.c0)))) NOTNULL)) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 WHERE ((NOT ((((((v0.c0, vt0.c0, v0.c0))!=((vt0.c0, v0.c0, v0.c0)))) NOTNULL)))) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 WHERE ((((((((v0.c0, vt0.c0, v0.c0))<>((vt0.c0, v0.c0, v0.c0)))) NOTNULL)) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING ((AVG(TOTAL(vt0.c0))) BETWEEN (0xffffffff968c99bc) AND (((0.26354235072097476) NOT BETWEEN (MIN(SUM(vt0.c0))) AND (vt0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING (NOT (((AVG(TOTAL(vt0.c0))) BETWEEN (0xffffffff968c99bc) AND (((0.26354235072097476) NOT BETWEEN (MIN(SUM(vt0.c0))) AND (vt0.c0)))))) UNION ALL SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING ((((AVG(TOTAL(vt0.c0))) BETWEEN (0Xffffffff968c99bc) AND (((0.26354235072097476) NOT BETWEEN (MIN(SUM(vt0.c0))) AND (vt0.c0))))) ISNULL);
SELECT ALL * FROM vt0, v0;
SELECT ALL * FROM vt0, v0 WHERE (((1542079077) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM) UNION ALL SELECT ALL * FROM vt0, v0 WHERE ((NOT (((1542079077) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM))) UNION ALL SELECT * FROM vt0, v0 WHERE (((((1542079077) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM) ISNULL));
SELECT ALL * FROM vt0, v0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CAST(vt0.c0 AS REAL))LIKE(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(x'bee8'))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((CAST(vt0.c0 AS REAL))LIKE(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(x'bee8'))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((CAST(vt0.c0 AS REAL))LIKE(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(x'bee8'))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 WHERE ((- (CASE WHEN NULL THEN vt0.c0 END))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt0, v0 WHERE ((NOT ((- (CASE WHEN NULL THEN vt0.c0 END))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt0, v0 WHERE ((((- (CASE WHEN NULL THEN vt0.c0 END))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(vt0.c0))>>(COUNT(AVG(TOTAL(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((MAX(vt0.c0))>>(COUNT(AVG(TOTAL(vt0.c0))))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((MAX(vt0.c0))>>(COUNT(AVG(TOTAL(vt0.c0)))))) ISNULL);
SELECT * FROM v0;
SELECT * FROM v0 WHERE (((TYPEOF(v0.c0)) ISNULL)) UNION ALL SELECT * FROM v0 WHERE ((NOT (((TYPEOF(v0.c0)) ISNULL)))) UNION ALL SELECT * FROM v0 WHERE (((((TYPEOF(v0.c0)) ISNULL)) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((LOWER(DISTINCT v0.c0)) BETWEEN (v0.c0) AND (v0.c0 COLLATE RTRIM))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((LOWER(DISTINCT v0.c0)) BETWEEN (v0.c0) AND (v0.c0 COLLATE RTRIM))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((LOWER(DISTINCT v0.c0)) BETWEEN (v0.c0) AND (v0.c0 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0 COLLATE BINARY)OR((NOT (v0.c0)))))AND(v0.c0 COLLATE NOCASE))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((v0.c0 COLLATE BINARY)OR((NOT (v0.c0)))))AND(v0.c0 COLLATE NOCASE))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((((v0.c0 COLLATE BINARY)OR((NOT (v0.c0)))))AND(v0.c0 COLLATE NOCASE))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE ('m?B箁I') UNION ALL SELECT * FROM vt0 WHERE ((NOT ('m?B箁I'))) UNION ALL SELECT ALL * FROM vt0 WHERE ((('m?B箁I') ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (TRIM(((v0.c0) IS TRUE), CAST(v0.c0 AS TEXT))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (TRIM(((v0.c0) IS TRUE), CAST(v0.c0 AS TEXT))))) UNION SELECT DISTINCT * FROM v0 WHERE (((TRIM(((v0.c0) IS TRUE), CAST(v0.c0 AS TEXT))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (SQLITE_COMPILEOPTION_USED(TRIM(NULL))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (SQLITE_COMPILEOPTION_USED(TRIM(NULL))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((SQLITE_COMPILEOPTION_USED(TRIM(NULL))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING TOTAL(((vt0.c0) IS TRUE)) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (TOTAL(((vt0.c0) IS TRUE)))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING ((TOTAL(((vt0.c0) IS TRUE))) ISNULL);
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING TOTAL(((vt0.c0) IS TRUE)) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (TOTAL(((vt0.c0) IS TRUE)))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING ((TOTAL(((vt0.c0) IS TRUE))) ISNULL);
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT * FROM vt0, v0;
SELECT ALL * FROM vt0, v0 WHERE (((((((vt0.c0)AND(v0.c0)))AND('v]nE'))) IS TRUE)) UNION ALL SELECT * FROM vt0, v0 WHERE ((NOT (((((((vt0.c0)AND(v0.c0)))AND('v]nE'))) IS TRUE)))) UNION ALL SELECT * FROM vt0, v0 WHERE (((((((((vt0.c0)AND(v0.c0)))AND('v]nE'))) IS TRUE)) ISNULL));
SELECT * FROM vt0, v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ('0.7231134800771387') UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ('0.7231134800771387'))) UNION SELECT DISTINCT * FROM v0 WHERE ((('0.7231134800771387') ISNULL));
SELECT DISTINCT * FROM v0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0 WHERE (NULLIF(DISTINCT ((v0.c0)<=(vt0.c0)), ((v0.c0)<=(v0.c0)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, vt0 WHERE ((NOT (NULLIF(DISTINCT ((v0.c0)<=(vt0.c0)), ((v0.c0)<=(v0.c0)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, vt0 WHERE (((NULLIF(DISTINCT ((v0.c0)<=(vt0.c0)), ((v0.c0)<=(v0.c0)))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING MAX(x'0449') UNION ALL SELECT vt0.c0 FROM vt0 NOT INDEXED, v0 GROUP BY vt0.c0 HAVING (NOT (MAX(x'0449'))) UNION ALL SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING ((MAX(x'0449')) ISNULL);
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING MAX(x'0449') UNION ALL SELECT vt0.c0 FROM vt0 NOT INDEXED, v0 GROUP BY vt0.c0 HAVING (NOT (MAX(x'0449'))) UNION ALL SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING ((MAX(x'0449')) ISNULL);
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0 LEFT OUTER JOIN vt0 ON ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) NOT BETWEEN ((((vt0.c0, v0.c0, v0.c0))<((v0.c0, v0.c0, v0.c0)))) AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END));
SELECT v0.c0, vt0.c0 FROM v0 LEFT OUTER JOIN vt0 ON ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) NOT BETWEEN ((((vt0.c0, v0.c0, v0.c0))<((v0.c0, v0.c0, v0.c0)))) AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) WHERE ((~ (((v0.c0)IS NOT(v0.c0))))) UNION ALL SELECT v0.c0, vt0.c0 FROM v0 LEFT OUTER JOIN vt0 ON ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) NOT BETWEEN ((((vt0.c0, v0.c0, v0.c0))<((v0.c0, v0.c0, v0.c0)))) AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) WHERE ((NOT ((~ (((v0.c0)IS NOT(v0.c0))))))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0 LEFT OUTER JOIN vt0 ON ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) NOT BETWEEN ((((vt0.c0, v0.c0, v0.c0))<((v0.c0, v0.c0, v0.c0)))) AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) WHERE ((((~ (((v0.c0)IS NOT(v0.c0))))) ISNULL));
SELECT ALL v0.c0, vt0.c0 FROM v0 LEFT OUTER JOIN vt0 ON ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) NOT BETWEEN ((((vt0.c0, v0.c0, v0.c0))<((v0.c0, v0.c0, v0.c0)))) AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END));
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (NULLIF(DISTINCT ((v0.c0)<(v0.c0)), (NOT (v0.c0)))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (NULLIF(DISTINCT ((v0.c0)<(v0.c0)), (NOT (v0.c0)))))) UNION SELECT DISTINCT * FROM v0 WHERE (((NULLIF(DISTINCT ((v0.c0)<(v0.c0)), (NOT (v0.c0)))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((v0.c0)<=(((x'') NOT NULL)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((v0.c0)<=(((x'') NOT NULL)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((v0.c0)<=(((x'') NOT NULL)))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c0 UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c0 UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL MIN(NULLIF(((v0.c0)|(v0.c0)), ABS(v0.c0))) FROM vt0, v0 ORDER BY ((((((((((((vt0.c0)OR(0.8107400831770232)))OR(vt0.c0)))OR(v0.c0)))AND(vt0.c0)))OR(v0.c0)))AND(vt0.c0)) COLLATE NOCASE;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)IS((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((vt0.c0 COLLATE RTRIM)IS((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))))) UNION ALL SELECT * FROM vt0 WHERE (((((vt0.c0 COLLATE RTRIM)IS((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0;
SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(v0.c0)))>=(CAST(vt0.c0 AS TEXT)))) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0 WHERE ((NOT (((((((vt0.c0)OR(vt0.c0)))AND(v0.c0)))>=(CAST(vt0.c0 AS TEXT)))))) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0 WHERE (((((((((vt0.c0)OR(vt0.c0)))AND(v0.c0)))>=(CAST(vt0.c0 AS TEXT)))) ISNULL));
SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (x'b35f'))) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM vt0, v0 WHERE ((NOT (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (x'b35f'))))) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (x'b35f'))) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT(COUNT(*)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(COUNT(*))) ISNULL);
SELECT * FROM vt0, v0;
SELECT * FROM vt0, v0 WHERE ((((v0.c0)) BETWEEN ((((v0.c0) IS TRUE))) AND ((CAST(vt0.c0 AS BLOB))))) UNION ALL SELECT ALL * FROM vt0 NOT INDEXED, v0 WHERE ((NOT ((((v0.c0)) BETWEEN ((((v0.c0) IS TRUE))) AND ((CAST(vt0.c0 AS BLOB))))))) UNION ALL SELECT * FROM vt0, v0 WHERE ((((((v0.c0)) BETWEEN ((((v0.c0) IS TRUE))) AND ((CAST(vt0.c0 AS BLOB))))) ISNULL));
SELECT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CASE (((vt0.c0))==((vt0.c0)))  WHEN vt0.c0 THEN vt0.c0 COLLATE NOCASE END) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CASE (((vt0.c0))==((vt0.c0)))  WHEN vt0.c0 THEN vt0.c0 COLLATE NOCASE END))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CASE (((vt0.c0))=((vt0.c0)))  WHEN vt0.c0 THEN vt0.c0 COLLATE NOCASE END) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, vt0 WHERE ((((((((((((v0.c0)AND(vt0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0))))<=((0.4632534150982037)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM v0, vt0 WHERE ((NOT ((((((((((((v0.c0)AND(vt0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0))))<=((0.4632534150982037)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM v0, vt0 WHERE ((((((((((((((v0.c0)AND(vt0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0))))<=((0.4632534150982037)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING CAST(((v0.c0) ISNULL) AS REAL) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (CAST(((v0.c0) ISNULL) AS REAL))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING ((CAST(((v0.c0) ISNULL) AS REAL)) ISNULL);
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING CAST(((v0.c0) ISNULL) AS REAL) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (CAST(((v0.c0) ISNULL) AS REAL))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING ((CAST(((v0.c0) ISNULL) AS REAL)) ISNULL);
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ('?y8O') UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ('?y8O'))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((('?y8O') ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 NOT INDEXED;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN ((vt0.c0 IN ())) AND (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN ((vt0.c0 IN ())) AND (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN ((vt0.c0 IN ())) AND (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0 NOT INDEXED;
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 WHERE (v0.c0 COLLATE NOCASE) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM vt0, v0 WHERE ((NOT (v0.c0 COLLATE NOCASE))) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM vt0, v0 WHERE (((v0.c0 COLLATE NOCASE) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING TOTAL(COUNT(*)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TOTAL(COUNT(*)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL(COUNT(*))) ISNULL);
SELECT vt0.c0 FROM v0, vt0;
SELECT ALL vt0.c0 FROM v0, vt0 WHERE ((((vt0.c0)GLOB(vt0.c0)) IN ((+ (v0.c0)), CAST(v0.c0 AS BLOB)))) UNION ALL SELECT vt0.c0 FROM v0, vt0 WHERE ((NOT ((((vt0.c0)GLOB(vt0.c0)) IN ((+ (v0.c0)), CAST(v0.c0 AS BLOB)))))) UNION ALL SELECT vt0.c0 FROM v0, vt0 WHERE ((((((vt0.c0)GLOB(vt0.c0)) IN ((+ (v0.c0)), CAST(v0.c0 AS BLOB)))) ISNULL));
SELECT vt0.c0 FROM v0, vt0;
SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, v0;
SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, v0 WHERE ((((vt0.c0) ISNULL) IN (vt0.c0, ((((vt0.c0)AND(v0.c0)))AND(vt0.c0))))) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, v0 WHERE ((NOT ((((vt0.c0) ISNULL) IN (vt0.c0, ((((vt0.c0)AND(v0.c0)))AND(vt0.c0))))))) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, v0 WHERE ((((((vt0.c0) ISNULL) IN (vt0.c0, ((((vt0.c0)AND(v0.c0)))AND(vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, v0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 WHERE ((((((((v0.c0, vt0.c0, v0.c0))!=((vt0.c0, vt0.c0, v0.c0))))OR(v0.c0 COLLATE BINARY)))AND(NULL))) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM v0, vt0 WHERE ((NOT ((((((((v0.c0, vt0.c0, v0.c0))<>((vt0.c0, vt0.c0, v0.c0))))OR(v0.c0 COLLATE BINARY)))AND(NULL))))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 WHERE ((((((((((v0.c0, vt0.c0, v0.c0))!=((vt0.c0, vt0.c0, v0.c0))))OR(v0.c0 COLLATE BINARY)))AND(NULL))) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON ((vt0.c0) NOT BETWEEN (((v0.c0) BETWEEN (vt0.c0) AND (v0.c0))) AND (((v0.c0) BETWEEN ('-1508903975') AND (vt0.c0)))) GROUP BY v0.c0;
SELECT v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON ((vt0.c0) NOT BETWEEN (((v0.c0) BETWEEN (vt0.c0) AND (v0.c0))) AND (((v0.c0) BETWEEN ('-1508903975') AND (vt0.c0)))) GROUP BY v0.c0 HAVING MAX(COUNT(TOTAL(vt0.c0))) UNION ALL SELECT ALL v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON ((vt0.c0) NOT BETWEEN (((v0.c0) BETWEEN (vt0.c0) AND (v0.c0))) AND (((v0.c0) BETWEEN ('-1508903975') AND (vt0.c0)))) GROUP BY v0.c0 HAVING (NOT (MAX(COUNT(TOTAL(vt0.c0))))) UNION ALL SELECT ALL v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON ((vt0.c0) NOT BETWEEN (((v0.c0) BETWEEN (vt0.c0) AND (v0.c0))) AND (((v0.c0) BETWEEN ('-1508903975') AND (vt0.c0)))) GROUP BY v0.c0 HAVING ((MAX(COUNT(TOTAL(vt0.c0)))) ISNULL);
SELECT * FROM vt0, v0;
SELECT ALL * FROM vt0, v0 WHERE ((((v0.c0)AND(vt0.c0)) IN ())) UNION ALL SELECT ALL * FROM vt0, v0 WHERE ((NOT ((((v0.c0)AND(vt0.c0)) IN ())))) UNION ALL SELECT ALL * FROM vt0, v0 WHERE ((((((v0.c0)AND(vt0.c0)) IN ())) ISNULL));
SELECT * FROM vt0, v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (CASE WHEN ((v0.c0) IS TRUE) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN -7.9334978E8 WHEN v0.c0 THEN ((v0.c0)<=(v0.c0)) END) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (CASE WHEN ((v0.c0) IS TRUE) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN -7.9334978E8 WHEN v0.c0 THEN ((v0.c0)<=(v0.c0)) END))) UNION SELECT DISTINCT * FROM v0 WHERE (((CASE WHEN ((v0.c0) IS TRUE) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN -7.9334978E8 WHEN v0.c0 THEN ((v0.c0)<=(v0.c0)) END) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE (((vt0.c0)>=(vt0.c0)) COLLATE NOCASE) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM vt0 NOT INDEXED, v0 WHERE ((NOT (((vt0.c0)>=(vt0.c0)) COLLATE NOCASE))) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE (((((vt0.c0)>=(vt0.c0)) COLLATE NOCASE) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TOTAL(COUNT(*)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(COUNT(*)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(COUNT(*))) ISNULL);
SELECT * FROM v0, vt0;
SELECT * FROM v0, vt0 WHERE (SQLITE_COMPILEOPTION_GET((((vt0.c0))=((v0.c0))))) UNION ALL SELECT ALL * FROM v0, vt0 WHERE ((NOT (SQLITE_COMPILEOPTION_GET((((vt0.c0))=((v0.c0))))))) UNION ALL SELECT ALL * FROM v0, vt0 WHERE (((SQLITE_COMPILEOPTION_GET((((vt0.c0))==((v0.c0))))) ISNULL));
SELECT * FROM v0, vt0;
SELECT DISTINCT * FROM vt0 CROSS JOIN v0 ON (((vt0.c0, vt0.c0, v0.c0)) NOT BETWEEN ((x'', v0.c0, ((v0.c0)IS(v0.c0)))) AND ((((0X10915552) IS TRUE), v0.c0 COLLATE RTRIM, 0.7336771492817432)));
SELECT DISTINCT * FROM vt0 CROSS JOIN v0 ON (((vt0.c0, vt0.c0, v0.c0)) NOT BETWEEN ((x'', v0.c0, ((v0.c0)IS(v0.c0)))) AND ((((0X10915552) IS TRUE), v0.c0 COLLATE RTRIM, 0.7336771492817432))) WHERE (((LIKELY(DISTINCT vt0.c0)) IS TRUE)) UNION SELECT DISTINCT * FROM vt0 CROSS JOIN v0 ON (((vt0.c0, vt0.c0, v0.c0)) NOT BETWEEN ((x'', v0.c0, ((v0.c0)IS(v0.c0)))) AND ((((0X10915552) IS TRUE), v0.c0 COLLATE RTRIM, 0.7336771492817432))) WHERE ((NOT (((LIKELY(DISTINCT vt0.c0)) IS TRUE)))) UNION SELECT DISTINCT * FROM vt0 CROSS JOIN v0 ON (((vt0.c0, vt0.c0, v0.c0)) NOT BETWEEN ((x'', v0.c0, ((v0.c0)IS(v0.c0)))) AND ((((0X10915552) IS TRUE), v0.c0 COLLATE RTRIM, 0.7336771492817432))) WHERE (((((LIKELY(DISTINCT vt0.c0)) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM vt0 CROSS JOIN v0 ON (((vt0.c0, vt0.c0, v0.c0)) NOT BETWEEN ((x'', v0.c0, ((v0.c0)IS(v0.c0)))) AND ((((0X10915552) IS TRUE), v0.c0 COLLATE RTRIM, 0.7336771492817432)));
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((~ (LIKELY(v0.c0)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((~ (LIKELY(v0.c0)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((~ (LIKELY(v0.c0)))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING v0.c0 UNION ALL SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING ((v0.c0) ISNULL);
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING v0.c0 UNION ALL SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING ((v0.c0) ISNULL);
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (x'') UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (x''))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((x'') ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) IN (v0.c0 COLLATE RTRIM))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) IN (v0.c0 COLLATE RTRIM))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) IN (v0.c0 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt0 WHERE ((+ ((vt0.c0 IN ())))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 NOT INDEXED, vt0 WHERE ((NOT ((+ ((vt0.c0 IN ())))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, vt0 WHERE ((((+ ((vt0.c0 IN ())))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0 LEFT OUTER JOIN vt0 ON ((v0.c0 COLLATE RTRIM)>=(((v0.c0)&(vt0.c0)))) GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM v0 LEFT OUTER JOIN vt0 ON ((v0.c0 COLLATE RTRIM)>=(((v0.c0)&(vt0.c0)))) GROUP BY vt0.c0, v0.c0 HAVING MIN(MAX(v0.c0)) UNION ALL SELECT vt0.c0, v0.c0 FROM v0 LEFT OUTER JOIN vt0 ON ((v0.c0 COLLATE RTRIM)>=(((v0.c0)&(vt0.c0)))) GROUP BY vt0.c0, v0.c0 HAVING (NOT (MIN(MAX(v0.c0)))) UNION ALL SELECT vt0.c0, v0.c0 FROM v0 LEFT OUTER JOIN vt0 ON ((v0.c0 COLLATE RTRIM)>=(((v0.c0)&(vt0.c0)))) GROUP BY vt0.c0, v0.c0 HAVING ((MIN(MAX(v0.c0))) ISNULL);
SELECT v0.c0 FROM vt0, v0;
SELECT ALL v0.c0 FROM vt0, v0 WHERE (vt0.c0) UNION ALL SELECT v0.c0 FROM vt0, v0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT v0.c0 FROM vt0, v0 WHERE (((vt0.c0) ISNULL));
SELECT v0.c0 FROM vt0, v0;
SELECT DISTINCT vt0.c0 FROM v0, vt0;
SELECT DISTINCT vt0.c0 FROM v0, vt0 WHERE (((((vt0.c0) IS FALSE))OR(((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM v0, vt0 WHERE ((NOT (((((vt0.c0) IS FALSE))OR(((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM v0, vt0 WHERE (((((((vt0.c0) IS FALSE))OR(((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM v0, vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (json_object(((((vt0.c0)AND('Q')))OR(vt0.c0)), ((((((((0x581c7c05)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)), 0.3184478707229458, CAST(vt0.c0 AS INTEGER))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (json_object(((((vt0.c0)AND('Q')))OR(vt0.c0)), ((((((((0X581c7c05)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)), 0.3184478707229458, CAST(vt0.c0 AS INTEGER))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((json_object(((((vt0.c0)AND('Q')))OR(vt0.c0)), ((((((((0X581c7c05)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)), 0.3184478707229458, CAST(vt0.c0 AS INTEGER))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0 LEFT OUTER JOIN vt0 ON 0.5421016684361262 GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0 LEFT OUTER JOIN vt0 ON 0.5421016684361262 GROUP BY vt0.c0 HAVING AVG(COUNT(MIN(vt0.c0))) COLLATE NOCASE COLLATE RTRIM UNION ALL SELECT ALL vt0.c0 FROM v0 LEFT OUTER JOIN vt0 ON 0.5421016684361262 GROUP BY vt0.c0 HAVING (NOT (AVG(COUNT(MIN(vt0.c0))) COLLATE NOCASE COLLATE RTRIM)) UNION ALL SELECT ALL vt0.c0 FROM v0 LEFT OUTER JOIN vt0 ON 0.5421016684361262 GROUP BY vt0.c0 HAVING ((AVG(COUNT(MIN(vt0.c0))) COLLATE NOCASE COLLATE RTRIM) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE ((((~ (vt0.c0)))==(vt0.c0 COLLATE NOCASE))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((((~ (vt0.c0)))=(vt0.c0 COLLATE NOCASE))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((((~ (vt0.c0)))==(vt0.c0 COLLATE NOCASE))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((- ((((vt0.c0))!=((vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((- ((((vt0.c0))<>((vt0.c0)))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((- ((((vt0.c0))!=((vt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CAST((NOT (vt0.c0)) AS BLOB)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CAST((NOT (vt0.c0)) AS BLOB)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST((NOT (vt0.c0)) AS BLOB)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL TOTAL((((vt0.c0)) BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) AND ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))) FROM vt0, v0 ORDER BY 0.5566845771296621 COLLATE RTRIM ASC;
SELECT ALL * FROM vt0, v0;
SELECT ALL * FROM vt0, v0 WHERE (((((v0.c0)-(vt0.c0)))&(0x6ce08c13))) UNION ALL SELECT ALL * FROM vt0, v0 WHERE ((NOT (((((v0.c0)-(vt0.c0)))&(0x6ce08c13))))) UNION ALL SELECT ALL * FROM vt0, v0 WHERE (((((((v0.c0)-(vt0.c0)))&(0X6ce08c13))) ISNULL));
SELECT ALL * FROM vt0, v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((~ (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((~ (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((~ (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (json_quote((('169531879')%(vt0.c0)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (json_quote((('169531879')%(vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((json_quote((('169531879')%(vt0.c0)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING ((v0.c0)-(GROUP_CONCAT(v0.c0))) COLLATE RTRIM UNION ALL SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (((v0.c0)-(GROUP_CONCAT(v0.c0))) COLLATE RTRIM)) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING ((((v0.c0)-(GROUP_CONCAT(v0.c0))) COLLATE RTRIM) ISNULL);
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING ((v0.c0)-(GROUP_CONCAT(v0.c0))) COLLATE RTRIM UNION ALL SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (((v0.c0)-(GROUP_CONCAT(v0.c0))) COLLATE RTRIM)) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING ((((v0.c0)-(GROUP_CONCAT(v0.c0))) COLLATE RTRIM) ISNULL);
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((INSTR(vt0.c0, vt0.c0))<=((NOT (vt0.c0))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((INSTR(vt0.c0, vt0.c0))<=((NOT (vt0.c0))))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((INSTR(vt0.c0, vt0.c0))<=((NOT (vt0.c0))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (CAST(v0.c0 COLLATE BINARY AS BLOB)) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (CAST(v0.c0 COLLATE BINARY AS BLOB)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((CAST(v0.c0 COLLATE BINARY AS BLOB)) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 WHERE (CAST(vt0.c0 AS INTEGER)) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM v0, vt0 WHERE ((NOT (CAST(vt0.c0 AS INTEGER)))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (- (COUNT(vt0.c0))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (NOT ((- (COUNT(vt0.c0))))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (((- (COUNT(vt0.c0)))) ISNULL);
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (- (COUNT(vt0.c0))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (NOT ((- (COUNT(vt0.c0))))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (((- (COUNT(vt0.c0)))) ISNULL);
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0) BETWEEN ('#Z{HZ()}{') AND (''))) NOT BETWEEN ((- (v0.c0))) AND (v0.c0 COLLATE RTRIM))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((v0.c0) BETWEEN ('#Z{HZ()}{') AND (''))) NOT BETWEEN ((- (v0.c0))) AND (v0.c0 COLLATE RTRIM))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((((((v0.c0) BETWEEN ('#Z{HZ()}{') AND (''))) NOT BETWEEN ((- (v0.c0))) AND (v0.c0 COLLATE RTRIM))) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT))<=((vt0.c0 IN ())))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((CAST(vt0.c0 AS TEXT))<=((vt0.c0 IN ())))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((CAST(vt0.c0 AS TEXT))<=((vt0.c0 IN ())))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 WHERE (CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END COLLATE RTRIM) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 WHERE ((NOT (CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END COLLATE RTRIM))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 WHERE (((CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END COLLATE RTRIM) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0 NOT INDEXED, v0 GROUP BY v0.c0 HAVING RTRIM((((vt0.c0)) BETWEEN ((MIN(vt0.c0))) AND ((TOTAL(v0.c0))))) UNION ALL SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING (NOT (RTRIM((((vt0.c0)) BETWEEN ((MIN(vt0.c0))) AND ((TOTAL(v0.c0))))))) UNION ALL SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING ((RTRIM((((vt0.c0)) BETWEEN ((MIN(vt0.c0))) AND ((TOTAL(v0.c0)))))) ISNULL);
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0 NOT INDEXED, v0 GROUP BY v0.c0 HAVING RTRIM((((vt0.c0)) BETWEEN ((MIN(vt0.c0))) AND ((TOTAL(v0.c0))))) UNION ALL SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING (NOT (RTRIM((((vt0.c0)) BETWEEN ((MIN(vt0.c0))) AND ((TOTAL(v0.c0))))))) UNION ALL SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING ((RTRIM((((vt0.c0)) BETWEEN ((MIN(vt0.c0))) AND ((TOTAL(v0.c0)))))) ISNULL);
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))%(((vt0.c0)OR(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))%(((vt0.c0)OR(vt0.c0))))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))%(((vt0.c0)OR(vt0.c0))))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR((vt0.c0 IN (vt0.c0, '1547872314')))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR((vt0.c0 IN (vt0.c0, '1547872314')))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR((vt0.c0 IN (vt0.c0, '1547872314')))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL v0.c0 FROM v0 FULL OUTER JOIN vt0 ON (~ ((+ (0.022793995041978876)))) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 FULL OUTER JOIN vt0 ON (~ ((+ (0.022793995041978876)))) WHERE (((((((v0.c0) NOTNULL))AND(0Xffffffff92de2dda COLLATE RTRIM)))AND(((vt0.c0) IS TRUE)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 FULL OUTER JOIN vt0 ON (~ ((+ (0.022793995041978876)))) WHERE ((NOT (((((((v0.c0) NOTNULL))AND(0Xffffffff92de2dda COLLATE RTRIM)))AND(((vt0.c0) IS TRUE)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 FULL OUTER JOIN vt0 ON (~ ((+ (0.022793995041978876)))) WHERE (((((((((v0.c0) NOTNULL))AND(0Xffffffff92de2dda COLLATE RTRIM)))AND(((vt0.c0) IS TRUE)))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 FULL OUTER JOIN vt0 ON (~ ((+ (0.022793995041978876)))) GROUP BY v0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c0 UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c0 UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM vt0 INNER JOIN v0 ON ((((((x'')OR(vt0.c0)))OR(v0.c0)))<<(vt0.c0));
SELECT * FROM vt0 INNER JOIN v0 ON ((((((x'')OR(vt0.c0)))OR(v0.c0)))<<(vt0.c0)) WHERE (CAST((NOT (v0.c0)) AS NUMERIC)) UNION ALL SELECT ALL * FROM vt0 NOT INDEXED INNER JOIN v0 ON ((((((x'')OR(vt0.c0)))OR(v0.c0)))<<(vt0.c0)) WHERE ((NOT (CAST((NOT (v0.c0)) AS NUMERIC)))) UNION ALL SELECT ALL * FROM vt0 INNER JOIN v0 ON ((((((x'')OR(vt0.c0)))OR(v0.c0)))<<(vt0.c0)) WHERE (((CAST((NOT (v0.c0)) AS NUMERIC)) ISNULL));
SELECT ALL * FROM vt0 INNER JOIN v0 ON ((((((x'')OR(vt0.c0)))OR(v0.c0)))<<(vt0.c0));
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((((('514641276') BETWEEN (0.5693888897841395) AND (v0.c0))) NOT BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) AND (((v0.c0) NOTNULL)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((((('514641276') BETWEEN (0.5693888897841395) AND (v0.c0))) NOT BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) AND (((v0.c0) NOTNULL)))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((('514641276') BETWEEN (0.5693888897841395) AND (v0.c0))) NOT BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) AND (((v0.c0) NOTNULL)))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))>=(CAST(vt0.c0 AS REAL)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))>=(CAST(vt0.c0 AS REAL)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))>=(CAST(vt0.c0 AS REAL)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING SUM(((AVG(COUNT(*)))>>(v0.c0))) UNION ALL SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING (NOT (SUM(((AVG(COUNT(*)))>>(v0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING ((SUM(((AVG(COUNT(*)))>>(v0.c0)))) ISNULL);
SELECT * FROM v0 CROSS JOIN vt0 ON ((((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL);
SELECT ALL * FROM v0 CROSS JOIN vt0 ON ((((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL) WHERE (vt0.c0) UNION ALL SELECT ALL * FROM v0 CROSS JOIN vt0 ON ((((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL) WHERE ((NOT (vt0.c0))) UNION ALL SELECT * FROM v0 CROSS JOIN vt0 ON ((((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL) WHERE (((vt0.c0) ISNULL));
SELECT * FROM v0 CROSS JOIN vt0 ON ((((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL);
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CAST(((vt0.c0)+(vt0.c0)) AS BLOB)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CAST(((vt0.c0)+(vt0.c0)) AS BLOB)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CAST(((vt0.c0)+(vt0.c0)) AS BLOB)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 NOT INDEXED WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0 NATURAL JOIN vt0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0 NATURAL JOIN vt0 GROUP BY v0.c0, vt0.c0 HAVING MAX(SUM(v0.c0)) UNION ALL SELECT v0.c0, vt0.c0 FROM v0 NATURAL JOIN vt0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (MAX(SUM(v0.c0)))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0 NATURAL JOIN vt0 GROUP BY v0.c0, vt0.c0 HAVING ((MAX(SUM(v0.c0))) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE)) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE)))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE)) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt0;
SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt0 WHERE (((((vt0.c0)AND(v0.c0)))OR(vt0.c0)) COLLATE NOCASE) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt0 WHERE ((NOT (((((vt0.c0)AND(v0.c0)))OR(vt0.c0)) COLLATE NOCASE))) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt0 WHERE (((((((vt0.c0)AND(v0.c0)))OR(vt0.c0)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((vt0.c0)<<(vt0.c0)) IN ((NOT (vt0.c0)), CAST(vt0.c0 AS REAL)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0)<<(vt0.c0)) IN ((NOT (vt0.c0)), CAST(vt0.c0 AS REAL)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c0)<<(vt0.c0)) IN ((NOT (vt0.c0)), CAST(vt0.c0 AS REAL)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING (~ (CASE COUNT(*)  WHEN v0.c0 THEN v0.c0 END)) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING (NOT ((~ (CASE COUNT(*)  WHEN v0.c0 THEN v0.c0 END)))) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING (((~ (CASE COUNT(*)  WHEN v0.c0 THEN v0.c0 END))) ISNULL);
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING (~ (CASE COUNT(*)  WHEN v0.c0 THEN v0.c0 END)) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING (NOT ((~ (CASE COUNT(*)  WHEN v0.c0 THEN v0.c0 END)))) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING (((~ (CASE COUNT(*)  WHEN v0.c0 THEN v0.c0 END))) ISNULL);
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (CAST(vt0.c0 AS BLOB)) UNION ALL SELECT * FROM vt0 WHERE ((NOT (CAST(vt0.c0 AS BLOB)))) UNION ALL SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB)) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((- ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((- ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((- ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ('1649139184') GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ('1649139184'))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((('1649139184') ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((v0.c0, v0.c0, v0.c0)) BETWEEN ((MAX(COUNT(*)), v0.c0, MAX(v0.c0))) AND ((SUM(v0.c0), v0.c0, v0.c0))))OR(((SUM(v0.c0)) NOT BETWEEN (COUNT(COUNT(v0.c0))) AND (v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((((((v0.c0, v0.c0, v0.c0)) BETWEEN ((MAX(COUNT(*)), v0.c0, MAX(v0.c0))) AND ((SUM(v0.c0), v0.c0, v0.c0))))OR(((SUM(v0.c0)) NOT BETWEEN (COUNT(COUNT(v0.c0))) AND (v0.c0)))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((((v0.c0, v0.c0, v0.c0)) BETWEEN ((MAX(COUNT(*)), v0.c0, MAX(v0.c0))) AND ((SUM(v0.c0), v0.c0, v0.c0))))OR(((SUM(v0.c0)) NOT BETWEEN (COUNT(COUNT(v0.c0))) AND (v0.c0))))) ISNULL);
SELECT SUM(((v0.c0) NOT NULL)) FROM v0, vt0 ORDER BY ((((NULL)-(v0.c0)))%((~ (vt0.c0)))) ASC  NULLS LAST;
SELECT * FROM v0, vt0;
SELECT * FROM v0, vt0 WHERE (((((- (v0.c0))))<((vt0.c0)))) UNION ALL SELECT * FROM v0, vt0 WHERE ((NOT (((((- (v0.c0))))<((vt0.c0)))))) UNION ALL SELECT ALL * FROM v0, vt0 WHERE (((((((- (v0.c0))))<((vt0.c0)))) ISNULL));
SELECT * FROM v0, vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((NOT (vt0.c0)))LIKE(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((((NOT (vt0.c0)))LIKE(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((NOT (vt0.c0)))LIKE(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (CASE 0.6267299604440729  WHEN (((vt0.c0))<>((vt0.c0))) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END WHEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) THEN ((vt0.c0) IS TRUE) WHEN CAST(vt0.c0 AS INTEGER) THEN ((((vt0.c0)OR(0.21352845707900714)))OR(x'')) END) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CASE 0.6267299604440729  WHEN (((vt0.c0))!=((vt0.c0))) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END WHEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) THEN ((vt0.c0) IS TRUE) WHEN CAST(vt0.c0 AS INTEGER) THEN ((((vt0.c0)OR(0.21352845707900714)))OR(x'')) END))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((CASE 0.6267299604440729  WHEN (((vt0.c0))!=((vt0.c0))) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END WHEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) THEN ((vt0.c0) IS TRUE) WHEN CAST(vt0.c0 AS INTEGER) THEN ((((vt0.c0)OR(0.21352845707900714)))OR(x'')) END) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING CAST(COALESCE(DISTINCT GROUP_CONCAT(SUM(COUNT(MAX(vt0.c0)))), GROUP_CONCAT(MIN(v0.c0))) AS INTEGER) UNION ALL SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING (NOT (CAST(COALESCE(DISTINCT GROUP_CONCAT(SUM(COUNT(MAX(vt0.c0)))), GROUP_CONCAT(MIN(v0.c0))) AS INTEGER))) UNION ALL SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING ((CAST(COALESCE(DISTINCT GROUP_CONCAT(SUM(COUNT(MAX(vt0.c0)))), GROUP_CONCAT(MIN(v0.c0))) AS INTEGER)) ISNULL);
SELECT ALL MAX(v0.c0) FROM v0, vt0;
SELECT ALL v0.c0 FROM vt0 INNER JOIN v0 ON CAST((((vt0.c0))<>((v0.c0))) AS NUMERIC);
SELECT ALL v0.c0 FROM vt0 INNER JOIN v0 ON CAST((((vt0.c0))!=((v0.c0))) AS NUMERIC) WHERE ((((+ (v0.c0)))LIKE(vt0.c0))) UNION ALL SELECT v0.c0 FROM vt0 INNER JOIN v0 ON CAST((((vt0.c0))<>((v0.c0))) AS NUMERIC) WHERE ((NOT ((((+ (v0.c0)))LIKE(vt0.c0))))) UNION ALL SELECT v0.c0 FROM vt0 INNER JOIN v0 ON CAST((((vt0.c0))<>((v0.c0))) AS NUMERIC) WHERE ((((((+ (v0.c0)))LIKE(vt0.c0))) ISNULL));
SELECT ALL v0.c0 FROM vt0 INNER JOIN v0 ON CAST((((vt0.c0))<>((v0.c0))) AS NUMERIC);
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE ('141949189') UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT ('141949189'))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((('141949189') ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (CASE (- (v0.c0))  WHEN (('V-OwD[')>=(v0.c0)) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) ELSE v0.c0 END) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CASE (- (v0.c0))  WHEN (('V-OwD[')>=(v0.c0)) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) ELSE v0.c0 END))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((CASE (- (v0.c0))  WHEN (('V-OwD[')>=(v0.c0)) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) ELSE v0.c0 END) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (((v0.c0)) NOT BETWEEN ((GROUP_CONCAT(AVG(v0.c0)))) AND ((MIN(AVG(MAX(MAX(vt0.c0))))))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (NOT ((((v0.c0)) NOT BETWEEN ((GROUP_CONCAT(AVG(v0.c0)))) AND ((MIN(AVG(MAX(MAX(vt0.c0))))))))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (((((v0.c0)) NOT BETWEEN ((GROUP_CONCAT(AVG(v0.c0)))) AND ((MIN(AVG(MAX(MAX(vt0.c0)))))))) ISNULL);
SELECT * FROM v0, vt0;
SELECT * FROM v0, vt0 WHERE (UNICODE(0X4d483a44)) UNION ALL SELECT * FROM v0, vt0 WHERE ((NOT (UNICODE(0x4d483a44)))) UNION ALL SELECT * FROM v0, vt0 WHERE (((UNICODE(0X4d483a44)) ISNULL));
SELECT * FROM v0, vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND(vt0.c0)))AND(''))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND(vt0.c0)))AND(''))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND(vt0.c0)))AND(''))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((((((v0.c0)OR(v0.c0)))OR(v0.c0))) ISNULL)) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((((v0.c0)OR(v0.c0)))OR(v0.c0))) ISNULL)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((((((v0.c0)OR(v0.c0)))OR(v0.c0))) ISNULL)) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG(vt0.c0)) NOT NULL) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((AVG(vt0.c0)) NOT NULL))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((AVG(vt0.c0)) NOT NULL)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG(vt0.c0)) NOT NULL) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((AVG(vt0.c0)) NOT NULL))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((AVG(vt0.c0)) NOT NULL)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM v0, vt0;
SELECT ALL * FROM v0, vt0 WHERE (CASE v0.c0  WHEN (x'' IN ()) THEN (vt0.c0 IN ()) END) UNION ALL SELECT ALL * FROM v0, vt0 WHERE ((NOT (CASE v0.c0  WHEN (x'' IN ()) THEN (vt0.c0 IN ()) END))) UNION ALL SELECT ALL * FROM v0, vt0 WHERE (((CASE v0.c0  WHEN (x'' IN ()) THEN (vt0.c0 IN ()) END) ISNULL));
SELECT * FROM v0, vt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (CASE CAST(v0.c0 AS NUMERIC)  WHEN CAST(v0.c0 AS BLOB) THEN ((0.06216879106633988)||(v0.c0)) ELSE (v0.c0 IN (v0.c0)) END) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (CASE CAST(v0.c0 AS NUMERIC)  WHEN CAST(v0.c0 AS BLOB) THEN ((0.06216879106633988)||(v0.c0)) ELSE (v0.c0 IN (v0.c0)) END))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((CASE CAST(v0.c0 AS NUMERIC)  WHEN CAST(v0.c0 AS BLOB) THEN ((0.06216879106633988)||(v0.c0)) ELSE (v0.c0 IN (v0.c0)) END) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, vt0 WHERE ((NOT (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING MAX(TOTAL(v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MAX(TOTAL(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MAX(TOTAL(v0.c0))) ISNULL);
SELECT * FROM vt0, v0;
SELECT ALL * FROM vt0, v0 WHERE (((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN ((v0.c0 IN ())) AND ((- (v0.c0))))) UNION ALL SELECT ALL * FROM vt0, v0 WHERE ((NOT (((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN ((v0.c0 IN ())) AND ((- (v0.c0))))))) UNION ALL SELECT ALL * FROM vt0, v0 WHERE (((((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN ((v0.c0 IN ())) AND ((- (v0.c0))))) ISNULL));
SELECT * FROM vt0, v0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((load_extension(vt0.c0, vt0.c0))+((~ (vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((load_extension(vt0.c0, vt0.c0))+((~ (vt0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((load_extension(vt0.c0, vt0.c0))+((~ (vt0.c0))))) ISNULL));
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 NOT INDEXED WHERE (((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))AND((v0.c0 IN (v0.c0, v0.c0)))))OR(v0.c0 COLLATE NOCASE))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))AND((v0.c0 IN (v0.c0, v0.c0)))))OR(v0.c0 COLLATE NOCASE))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))AND((v0.c0 IN (v0.c0, v0.c0)))))OR(v0.c0 COLLATE NOCASE))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING CAST(CASE WHEN AVG(MAX(vt0.c0)) THEN MIN(vt0.c0) END AS NUMERIC) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (CAST(CASE WHEN AVG(MAX(vt0.c0)) THEN MIN(vt0.c0) END AS NUMERIC))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING ((CAST(CASE WHEN AVG(MAX(vt0.c0)) THEN MIN(vt0.c0) END AS NUMERIC)) ISNULL);
SELECT vt0.c0 FROM vt0, v0;
SELECT vt0.c0 FROM vt0, v0 WHERE ((- (vt0.c0 COLLATE RTRIM))) UNION ALL SELECT vt0.c0 FROM vt0, v0 WHERE ((NOT ((- (vt0.c0 COLLATE RTRIM))))) UNION ALL SELECT ALL vt0.c0 FROM vt0, v0 WHERE ((((- (vt0.c0 COLLATE RTRIM))) ISNULL));
SELECT vt0.c0 FROM vt0, v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (v0.c0) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (x'')))-(CAST(v0.c0 AS TEXT)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((((v0.c0) BETWEEN (v0.c0) AND (x'')))-(CAST(v0.c0 AS TEXT)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((((v0.c0) BETWEEN (v0.c0) AND (x'')))-(CAST(v0.c0 AS TEXT)))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING LIKELIHOOD(DISTINCT COUNT(TOTAL(MAX(MAX(v0.c0)))) COLLATE RTRIM, 0.8086654355861815) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (LIKELIHOOD(DISTINCT COUNT(TOTAL(MAX(MAX(v0.c0)))) COLLATE RTRIM, 0.8086654355861815))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((LIKELIHOOD(DISTINCT COUNT(TOTAL(MAX(MAX(v0.c0)))) COLLATE RTRIM, 0.8086654355861815)) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (((~ (vt0.c0)) IN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY CAST(vt0.c0 AS BLOB);
SELECT * FROM vt0 WHERE ((NOT (((~ (vt0.c0)) IN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))))) ORDER BY CAST(vt0.c0 AS BLOB);
SELECT ALL * FROM vt0 WHERE (((((~ (vt0.c0)) IN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL)) ORDER BY CAST(vt0.c0 AS BLOB);
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE (CAST(vt0.c0 AS BLOB) COLLATE NOCASE) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT (CAST(vt0.c0 AS BLOB) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE (((CAST(vt0.c0 AS BLOB) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 WHERE ((((((v0.c0 IN (vt0.c0)))OR(((v0.c0)IS(vt0.c0)))))AND(((v0.c0)AND(v0.c0))))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 WHERE ((NOT ((((((v0.c0 IN (vt0.c0)))OR(((v0.c0)IS(vt0.c0)))))AND(((v0.c0)AND(v0.c0))))))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 WHERE ((((((((v0.c0 IN (vt0.c0)))OR(((v0.c0)IS(vt0.c0)))))AND(((v0.c0)AND(v0.c0))))) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0 FROM v0 FULL OUTER JOIN vt0 ON ((((vt0.c0)%(v0.c0))) ISNULL) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 FULL OUTER JOIN vt0 ON ((((vt0.c0)%(v0.c0))) ISNULL) GROUP BY v0.c0 HAVING '' UNION ALL SELECT ALL v0.c0 FROM v0 FULL OUTER JOIN vt0 ON ((((vt0.c0)%(v0.c0))) ISNULL) GROUP BY v0.c0 HAVING (NOT ('')) UNION ALL SELECT ALL v0.c0 FROM v0 FULL OUTER JOIN vt0 ON ((((vt0.c0)%(v0.c0))) ISNULL) GROUP BY v0.c0 HAVING (('') ISNULL);
SELECT v0.c0 FROM v0 FULL OUTER JOIN vt0 ON ((((vt0.c0)%(v0.c0))) ISNULL) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 FULL OUTER JOIN vt0 ON ((((vt0.c0)%(v0.c0))) ISNULL) GROUP BY v0.c0 HAVING '' UNION ALL SELECT ALL v0.c0 FROM v0 FULL OUTER JOIN vt0 ON ((((vt0.c0)%(v0.c0))) ISNULL) GROUP BY v0.c0 HAVING (NOT ('')) UNION ALL SELECT ALL v0.c0 FROM v0 FULL OUTER JOIN vt0 ON ((((vt0.c0)%(v0.c0))) ISNULL) GROUP BY v0.c0 HAVING (('') ISNULL);
SELECT v0.c0 FROM v0 FULL OUTER JOIN vt0 ON ((((vt0.c0)%(v0.c0))) ISNULL) GROUP BY v0.c0;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((((((~ (vt0.c0)))AND(vt0.c0)))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((((((~ (vt0.c0)))AND(vt0.c0)))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((((((~ (vt0.c0)))AND(vt0.c0)))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON CASE WHEN v0.c0 COLLATE RTRIM THEN v0.c0 ELSE UNLIKELY(DISTINCT v0.c0) END;
SELECT DISTINCT vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON CASE WHEN v0.c0 COLLATE RTRIM THEN v0.c0 ELSE UNLIKELY(DISTINCT v0.c0) END WHERE (((((((((((((((vt0.c0)*(v0.c0)))AND(((NULL)OR(v0.c0)))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(CASE v0.c0  WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 END)))AND(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))AND(((NULL) ISNULL))))AND(vt0.c0))) UNION SELECT DISTINCT vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON CASE WHEN v0.c0 COLLATE RTRIM THEN v0.c0 ELSE UNLIKELY(DISTINCT v0.c0) END WHERE ((NOT (((((((((((((((vt0.c0)*(v0.c0)))AND(((NULL)OR(v0.c0)))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(CASE v0.c0  WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 END)))AND(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))AND(((NULL) ISNULL))))AND(vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON CASE WHEN v0.c0 COLLATE RTRIM THEN v0.c0 ELSE UNLIKELY(DISTINCT v0.c0) END WHERE (((((((((((((((((vt0.c0)*(v0.c0)))AND(((NULL)OR(v0.c0)))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(CASE v0.c0  WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 END)))AND(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))AND(((NULL) ISNULL))))AND(vt0.c0))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON CASE WHEN v0.c0 COLLATE RTRIM THEN v0.c0 ELSE UNLIKELY(DISTINCT v0.c0) END;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 WHERE ((((NOT (vt0.c0))) BETWEEN (CASE WHEN 190019336 THEN v0.c0 ELSE vt0.c0 END) AND (((((v0.c0)OR(vt0.c0)))OR(vt0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt0, v0 WHERE ((NOT ((((NOT (vt0.c0))) BETWEEN (CASE WHEN 190019336 THEN v0.c0 ELSE vt0.c0 END) AND (((((v0.c0)OR(vt0.c0)))OR(vt0.c0))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt0, v0 WHERE ((((((NOT (vt0.c0))) BETWEEN (CASE WHEN 190019336 THEN v0.c0 ELSE vt0.c0 END) AND (((((v0.c0)OR(vt0.c0)))OR(vt0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING GROUP_CONCAT(SUM(v0.c0) COLLATE NOCASE) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (GROUP_CONCAT(SUM(v0.c0) COLLATE NOCASE))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((GROUP_CONCAT(SUM(v0.c0) COLLATE NOCASE)) ISNULL);
SELECT vt0.c0 FROM v0, vt0;
SELECT ALL vt0.c0 FROM v0, vt0 WHERE (0.8443701078448982) UNION ALL SELECT vt0.c0 FROM v0, vt0 WHERE ((NOT (0.8443701078448982))) UNION ALL SELECT vt0.c0 FROM v0, vt0 WHERE (((0.8443701078448982) ISNULL));
SELECT vt0.c0 FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE ((- (NULL)) COLLATE NOCASE) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT ((- (NULL)) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((((- (NULL)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT v0.c0 FROM v0 INNER JOIN vt0 ON (+ ((+ (v0.c0)))) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 INNER JOIN vt0 ON (+ ((+ (v0.c0)))) WHERE (x'') GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 INNER JOIN vt0 ON (+ ((+ (v0.c0)))) WHERE ((NOT (x''))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 INNER JOIN vt0 ON (+ ((+ (v0.c0)))) WHERE (((x'') ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 INNER JOIN vt0 ON (+ ((+ (v0.c0)))) GROUP BY v0.c0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING TOTAL(v0.c0) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (TOTAL(v0.c0))) UNION ALL SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING ((TOTAL(v0.c0)) ISNULL);
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING TOTAL(v0.c0) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (TOTAL(v0.c0))) UNION ALL SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING ((TOTAL(v0.c0)) ISNULL);
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE (((((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(((((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))))AND(v0.c0 COLLATE NOCASE)))OR(v0.c0)))OR(CAST(v0.c0 AS INTEGER)))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (((((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(((((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))))AND(v0.c0 COLLATE NOCASE)))OR(v0.c0)))OR(CAST(v0.c0 AS INTEGER)))))) UNION ALL SELECT * FROM v0 WHERE (((((((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(((((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))))AND(v0.c0 COLLATE NOCASE)))OR(v0.c0)))OR(CAST(v0.c0 AS INTEGER)))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((NOT (vt0.c0)))>>(((vt0.c0) IS TRUE)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((NOT (vt0.c0)))>>(((vt0.c0) IS TRUE)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((NOT (vt0.c0)))>>(((vt0.c0) IS TRUE)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0) IS TRUE))LIKE(CASE WHEN vt0.c0 THEN vt0.c0 END))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) IS TRUE))LIKE(CASE WHEN vt0.c0 THEN vt0.c0 END))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c0) IS TRUE))LIKE(CASE WHEN vt0.c0 THEN vt0.c0 END))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING LIKELIHOOD(((((GROUP_CONCAT(TOTAL(vt0.c0)))AND(COUNT(*))))OR(COUNT(COUNT(*)))), 0.8714758748533048) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (LIKELIHOOD(((((GROUP_CONCAT(TOTAL(vt0.c0)))AND(COUNT(*))))OR(COUNT(COUNT(*)))), 0.8714758748533048))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((LIKELIHOOD(((((GROUP_CONCAT(TOTAL(vt0.c0)))AND(COUNT(*))))OR(COUNT(COUNT(*)))), 0.8714758748533048)) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (((1.03749643E9)<<((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((1.03749643E9)<<((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((1.03749643E9)<<((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((MIN('', v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) NOT NULL)) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((MIN('', v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) NOT NULL)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((MIN('', v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) NOT NULL)) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 NOT INDEXED WHERE (CAST((v0.c0 IN (v0.c0)) AS BLOB)) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CAST((v0.c0 IN (v0.c0)) AS BLOB)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((CAST((v0.c0 IN (v0.c0)) AS BLOB)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON SQLITE_COMPILEOPTION_USED((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0)))) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON SQLITE_COMPILEOPTION_USED((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0)))) GROUP BY vt0.c0 HAVING COUNT(((v0.c0)>=(SUM(SUM(0.6713461879585154))))) UNION ALL SELECT vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON SQLITE_COMPILEOPTION_USED((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0)))) GROUP BY vt0.c0 HAVING (NOT (COUNT(((v0.c0)>=(SUM(SUM(0.6713461879585154))))))) UNION ALL SELECT vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON SQLITE_COMPILEOPTION_USED((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0)))) GROUP BY vt0.c0 HAVING ((COUNT(((v0.c0)>=(SUM(SUM(0.6713461879585154)))))) ISNULL);
SELECT vt0.c0 FROM vt0, v0;
SELECT ALL vt0.c0 FROM vt0, v0 NOT INDEXED WHERE ((((- (v0.c0))) NOT BETWEEN ((v0.c0 IN (vt0.c0, v0.c0))) AND (((vt0.c0) IS FALSE)))) UNION ALL SELECT ALL vt0.c0 FROM vt0, v0 WHERE ((NOT ((((- (v0.c0))) NOT BETWEEN ((v0.c0 IN (vt0.c0, v0.c0))) AND (((vt0.c0) IS FALSE)))))) UNION ALL SELECT vt0.c0 FROM vt0, v0 WHERE ((((((- (v0.c0))) NOT BETWEEN ((v0.c0 IN (vt0.c0, v0.c0))) AND (((vt0.c0) IS FALSE)))) ISNULL));
SELECT vt0.c0 FROM vt0, v0;
SELECT DISTINCT v0.c0 FROM v0 NOT INDEXED;
SELECT DISTINCT v0.c0 FROM v0 WHERE (CASE ((((v0.c0)OR('-181317258')))AND(v0.c0))  WHEN ((v0.c0) ISNULL) THEN ((v0.c0) IS FALSE) ELSE (v0.c0 IN (v0.c0, v0.c0)) END) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (CASE ((((v0.c0)OR('-181317258')))AND(v0.c0))  WHEN ((v0.c0) ISNULL) THEN ((v0.c0) IS FALSE) ELSE (v0.c0 IN (v0.c0, v0.c0)) END))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((CASE ((((v0.c0)OR('-181317258')))AND(v0.c0))  WHEN ((v0.c0) ISNULL) THEN ((v0.c0) IS FALSE) ELSE (v0.c0 IN (v0.c0, v0.c0)) END) ISNULL));
SELECT DISTINCT v0.c0 FROM v0 NOT INDEXED;
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt0 WHERE ((((v0.c0 IN ())) BETWEEN (((v0.c0) NOTNULL)) AND (((vt0.c0) NOT NULL)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, vt0 WHERE ((NOT ((((v0.c0 IN ())) BETWEEN (((v0.c0) NOTNULL)) AND (((vt0.c0) NOT NULL)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, vt0 WHERE ((((((v0.c0 IN ())) BETWEEN (((v0.c0) NOTNULL)) AND (((vt0.c0) NOT NULL)))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG(MAX(COUNT(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (AVG(MAX(COUNT(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG(MAX(COUNT(vt0.c0)))) ISNULL);
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (0.42963702359449074) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (0.42963702359449074))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((0.42963702359449074) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT vt0.c0 FROM v0, vt0;
SELECT DISTINCT vt0.c0 FROM v0, vt0 WHERE (-1.02586611E8) UNION SELECT DISTINCT vt0.c0 FROM v0, vt0 WHERE ((NOT (-1.02586611E8))) UNION SELECT DISTINCT vt0.c0 FROM v0, vt0 WHERE (((-1.02586611E8) ISNULL));
SELECT DISTINCT vt0.c0 FROM v0, vt0;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0, v0 WHERE (((((((((((v0.c0)AND(v0.c0)))AND(vt0.c0)))OR(v0.c0)))AND(vt0.c0)))<=(((((((((x'afc3')AND(v0.c0)))AND(v0.c0)))OR(NULL)))OR(v0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt0, v0 WHERE ((NOT (((((((((((v0.c0)AND(v0.c0)))AND(vt0.c0)))OR(v0.c0)))AND(vt0.c0)))<=(((((((((x'afc3')AND(v0.c0)))AND(v0.c0)))OR(NULL)))OR(v0.c0))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt0, v0 WHERE (((((((((((((v0.c0)AND(v0.c0)))AND(vt0.c0)))OR(v0.c0)))AND(vt0.c0)))<=(((((((((x'afc3')AND(v0.c0)))AND(v0.c0)))OR(NULL)))OR(v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(GROUP_CONCAT(GROUP_CONCAT(AVG(TOTAL(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(GROUP_CONCAT(GROUP_CONCAT(AVG(TOTAL(vt0.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(GROUP_CONCAT(GROUP_CONCAT(AVG(TOTAL(vt0.c0)))))) ISNULL);
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (v0.c0) UNION ALL SELECT * FROM v0 WHERE ((NOT (v0.c0))) UNION ALL SELECT ALL * FROM v0 WHERE (((v0.c0) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE (((vt0.c0) IS TRUE)) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT (((vt0.c0) IS TRUE)))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE (((((vt0.c0) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT vt0.c0, v0.c0 FROM v0 INNER JOIN vt0 ON CASE CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN ((('*੷xxtJ<fJ'))>((v0.c0))) THEN ((v0.c0) ISNULL) ELSE (v0.c0 IN ()) END GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM v0 INNER JOIN vt0 ON CASE CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN ((('*੷xxtJ<fJ'))>((v0.c0))) THEN ((v0.c0) ISNULL) ELSE (v0.c0 IN ()) END WHERE (((vt0.c0 COLLATE NOCASE) BETWEEN (((v0.c0)!=(v0.c0))) AND (IFNULL(DISTINCT vt0.c0, v0.c0)))) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM v0 INNER JOIN vt0 ON CASE CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN ((('*੷xxtJ<fJ'))>((v0.c0))) THEN ((v0.c0) ISNULL) ELSE (v0.c0 IN ()) END WHERE ((NOT (((vt0.c0 COLLATE NOCASE) BETWEEN (((v0.c0)!=(v0.c0))) AND (IFNULL(DISTINCT vt0.c0, v0.c0)))))) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM v0 INNER JOIN vt0 ON CASE CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN ((('*੷xxtJ<fJ'))>((v0.c0))) THEN ((v0.c0) ISNULL) ELSE (v0.c0 IN ()) END WHERE (((((vt0.c0 COLLATE NOCASE) BETWEEN (((v0.c0)!=(v0.c0))) AND (IFNULL(DISTINCT vt0.c0, v0.c0)))) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM v0 INNER JOIN vt0 ON CASE CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN ((('*੷xxtJ<fJ'))>((v0.c0))) THEN ((v0.c0) ISNULL) ELSE (v0.c0 IN ()) END GROUP BY vt0.c0, v0.c0;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING GROUP_CONCAT(MAX(COUNT(*))) UNION ALL SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING (NOT (GROUP_CONCAT(MAX(COUNT(*))))) UNION ALL SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING ((GROUP_CONCAT(MAX(COUNT(*)))) ISNULL);
SELECT vt0.c0, v0.c0 FROM vt0, v0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 WHERE ((((-1003044128 IN (v0.c0)))==(((vt0.c0)%(v0.c0))))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE ((NOT ((((-1003044128 IN (v0.c0)))=(((vt0.c0)%(v0.c0))))))) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0 WHERE ((((((-1003044128 IN (v0.c0)))==(((vt0.c0)%(v0.c0))))) ISNULL));
SELECT vt0.c0, v0.c0 FROM vt0, v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))%(CAST(v0.c0 AS INTEGER)))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))%(CAST(v0.c0 AS INTEGER)))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))%(CAST(v0.c0 AS INTEGER)))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (CASE WHEN (- (vt0.c0)) THEN vt0.c0 COLLATE RTRIM WHEN vt0.c0 COLLATE RTRIM THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) WHEN (+ (vt0.c0)) THEN UNLIKELY(DISTINCT vt0.c0) END) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN (- (vt0.c0)) THEN vt0.c0 COLLATE RTRIM WHEN vt0.c0 COLLATE RTRIM THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) WHEN (+ (vt0.c0)) THEN UNLIKELY(DISTINCT vt0.c0) END))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((CASE WHEN (- (vt0.c0)) THEN vt0.c0 COLLATE RTRIM WHEN vt0.c0 COLLATE RTRIM THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) WHEN (+ (vt0.c0)) THEN UNLIKELY(DISTINCT vt0.c0) END) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((((v0.c0) NOTNULL))OR(CASE AVG(SUM(v0.c0))  WHEN v0.c0 THEN GROUP_CONCAT(v0.c0) ELSE v0.c0 END)))AND(GROUP_CONCAT(v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((((((v0.c0) NOTNULL))OR(CASE AVG(SUM(v0.c0))  WHEN v0.c0 THEN GROUP_CONCAT(v0.c0) ELSE v0.c0 END)))AND(GROUP_CONCAT(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((((((v0.c0) NOTNULL))OR(CASE AVG(SUM(v0.c0))  WHEN v0.c0 THEN GROUP_CONCAT(v0.c0) ELSE v0.c0 END)))AND(GROUP_CONCAT(v0.c0)))) ISNULL);
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (CAST(v0.c0 AS NUMERIC) COLLATE RTRIM COLLATE NOCASE) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CAST(v0.c0 AS NUMERIC) COLLATE RTRIM COLLATE NOCASE))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((CAST(v0.c0 AS NUMERIC) COLLATE RTRIM COLLATE NOCASE) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt0;
SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt0 WHERE ((((((vt0.c0))!=((NULL))))IS((NOT (vt0.c0))))) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt0 WHERE ((NOT ((((((vt0.c0))!=((NULL))))IS((NOT (vt0.c0))))))) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt0 WHERE ((((((((vt0.c0))<>((NULL))))IS((NOT (vt0.c0))))) ISNULL));
SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 WHERE ((((vt0.c0, vt0.c0, v0.c0)) NOT BETWEEN ((((vt0.c0)<(0.34071981495479486)), vt0.c0 COLLATE RTRIM, (vt0.c0 IN ()))) AND ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), vt0.c0 COLLATE BINARY, CAST(-102586611 AS INTEGER))))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 WHERE ((NOT ((((vt0.c0, vt0.c0, v0.c0)) NOT BETWEEN ((((vt0.c0)<(0.34071981495479486)), vt0.c0 COLLATE RTRIM, (vt0.c0 IN ()))) AND ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), vt0.c0 COLLATE BINARY, CAST(-102586611 AS INTEGER))))))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 WHERE ((((((vt0.c0, vt0.c0, v0.c0)) NOT BETWEEN ((((vt0.c0)<(0.34071981495479486)), vt0.c0 COLLATE RTRIM, (vt0.c0 IN ()))) AND ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), vt0.c0 COLLATE BINARY, CAST(-102586611 AS INTEGER))))) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING MAX(MIN(v0.c0)) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (MAX(MIN(v0.c0)))) UNION ALL SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING ((MAX(MIN(v0.c0))) ISNULL);
SELECT ALL TOTAL(v0.c0) FROM v0;
SELECT ALL * FROM vt0 NOT INDEXED, v0;
SELECT * FROM vt0, v0 WHERE (((((CAST(vt0.c0 AS TEXT))OR(((vt0.c0)-(NULL)))))AND((((vt0.c0, vt0.c0, v0.c0)) NOT BETWEEN ((v0.c0, vt0.c0, v0.c0)) AND ((vt0.c0, vt0.c0, v0.c0)))))) UNION ALL SELECT * FROM vt0, v0 WHERE ((NOT (((((CAST(vt0.c0 AS TEXT))OR(((vt0.c0)-(NULL)))))AND((((vt0.c0, vt0.c0, v0.c0)) NOT BETWEEN ((v0.c0, vt0.c0, v0.c0)) AND ((vt0.c0, vt0.c0, v0.c0)))))))) UNION ALL SELECT * FROM vt0, v0 WHERE (((((((CAST(vt0.c0 AS TEXT))OR(((vt0.c0)-(NULL)))))AND((((vt0.c0, vt0.c0, v0.c0)) NOT BETWEEN ((v0.c0, vt0.c0, v0.c0)) AND ((vt0.c0, vt0.c0, v0.c0)))))) ISNULL));
SELECT ALL * FROM vt0 NOT INDEXED, v0;
SELECT DISTINCT v0.c0 FROM v0, vt0;
SELECT DISTINCT v0.c0 FROM v0, vt0 WHERE ((((((((((((vt0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((NULL, v0.c0, NULL))))AND(x'')))OR(9223372036854775807)))OR(((vt0.c0)=(vt0.c0)))))OR(json_array_length(vt0.c0)))) UNION SELECT DISTINCT v0.c0 FROM v0, vt0 WHERE ((NOT ((((((((((((vt0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((NULL, v0.c0, NULL))))AND(x'')))OR(9223372036854775807)))OR(((vt0.c0)==(vt0.c0)))))OR(json_array_length(vt0.c0)))))) UNION SELECT DISTINCT v0.c0 FROM v0, vt0 WHERE ((((((((((((((vt0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((NULL, v0.c0, NULL))))AND(x'')))OR(9223372036854775807)))OR(((vt0.c0)=(vt0.c0)))))OR(json_array_length(vt0.c0)))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0, vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0)|(vt0.c0)))>>((vt0.c0 IN ())))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0)|(vt0.c0)))>>((vt0.c0 IN ())))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c0)|(vt0.c0)))>>((vt0.c0 IN ())))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING AVG(CASE vt0.c0  WHEN TOTAL(vt0.c0) THEN vt0.c0 END) UNION ALL SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (AVG(CASE vt0.c0  WHEN TOTAL(vt0.c0) THEN vt0.c0 END))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING ((AVG(CASE vt0.c0  WHEN TOTAL(vt0.c0) THEN vt0.c0 END)) ISNULL);
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (((CAST(v0.c0 AS REAL))>=(CAST(v0.c0 AS TEXT)))) UNION ALL SELECT * FROM v0 WHERE ((NOT (((CAST(v0.c0 AS REAL))>=(CAST(v0.c0 AS TEXT)))))) UNION ALL SELECT * FROM v0 WHERE (((((CAST(v0.c0 AS REAL))>=(CAST(v0.c0 AS TEXT)))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (CASE (v0.c0 IN ())  WHEN ((v0.c0)-(-1924608389)) THEN json_insert(v0.c0, 1.441763416E9, v0.c0) ELSE CAST(0x7953235d AS TEXT) END) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (CASE (v0.c0 IN ())  WHEN ((v0.c0)-(-1924608389)) THEN json_insert(v0.c0, 1.441763416E9, v0.c0) ELSE CAST(0X7953235d AS TEXT) END))) UNION SELECT DISTINCT * FROM v0 WHERE (((CASE (v0.c0 IN ())  WHEN ((v0.c0)-(-1924608389)) THEN json_insert(v0.c0, 1.441763416E9, v0.c0) ELSE CAST(0x7953235d AS TEXT) END) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL vt0.c0 FROM v0 LEFT OUTER JOIN vt0 ON v0.c0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0 LEFT OUTER JOIN vt0 ON v0.c0 WHERE (((vt0.c0)%(0.7219843773754913)) COLLATE NOCASE) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM v0 LEFT OUTER JOIN vt0 ON v0.c0 WHERE ((NOT (((vt0.c0)%(0.7219843773754913)) COLLATE NOCASE))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM v0 LEFT OUTER JOIN vt0 ON v0.c0 WHERE (((((vt0.c0)%(0.7219843773754913)) COLLATE NOCASE) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0 LEFT OUTER JOIN vt0 ON v0.c0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0 CROSS JOIN vt0 ON LOWER(DISTINCT v0.c0 COLLATE BINARY) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0 CROSS JOIN vt0 ON LOWER(DISTINCT v0.c0 COLLATE BINARY) GROUP BY vt0.c0 HAVING MIN(MAX(vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM v0 CROSS JOIN vt0 ON LOWER(DISTINCT v0.c0 COLLATE BINARY) GROUP BY vt0.c0 HAVING (NOT (MIN(MAX(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM v0 CROSS JOIN vt0 ON LOWER(DISTINCT v0.c0 COLLATE BINARY) GROUP BY vt0.c0 HAVING ((MIN(MAX(vt0.c0))) ISNULL);
SELECT * FROM vt0, v0;
SELECT * FROM vt0, v0 WHERE (((CAST(vt0.c0 AS INTEGER)) NOT NULL)) UNION ALL SELECT ALL * FROM vt0, v0 WHERE ((NOT (((CAST(vt0.c0 AS INTEGER)) NOT NULL)))) UNION ALL SELECT ALL * FROM vt0, v0 WHERE (((((CAST(vt0.c0 AS INTEGER)) NOT NULL)) ISNULL));
SELECT * FROM vt0, v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((- (v0.c0))) NOT BETWEEN (((v0.c0)AND(v0.c0))) AND (((v0.c0)>(v0.c0))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((- (v0.c0))) NOT BETWEEN (((v0.c0)AND(v0.c0))) AND (((v0.c0)>(v0.c0))))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((- (v0.c0))) NOT BETWEEN (((v0.c0)AND(v0.c0))) AND (((v0.c0)>(v0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 WHERE (((vt0.c0)*(((v0.c0) NOT NULL)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt0, v0 WHERE ((NOT (((vt0.c0)*(((v0.c0) NOT NULL)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt0, v0 WHERE (((((vt0.c0)*(((v0.c0) NOT NULL)))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(COUNT(AVG(vt0.c0))))IS NOT(((((((((vt0.c0)OR(x'd7c2')))AND(SUM(MAX(vt0.c0)))))AND(vt0.c0)))OR(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((MAX(COUNT(AVG(vt0.c0))))IS NOT(((((((((vt0.c0)OR(x'd7c2')))AND(SUM(MAX(vt0.c0)))))AND(vt0.c0)))OR(vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((MAX(COUNT(AVG(vt0.c0))))IS NOT(((((((((vt0.c0)OR(x'd7c2')))AND(SUM(MAX(vt0.c0)))))AND(vt0.c0)))OR(vt0.c0))))) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND ('')))>=(HEX(DISTINCT vt0.c0)))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((((vt0.c0) BETWEEN (vt0.c0) AND ('')))>=(HEX(DISTINCT vt0.c0)))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND ('')))>=(HEX(DISTINCT vt0.c0)))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (v0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((NOT (v0.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((NOT (v0.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((((((((v0.c0 COLLATE NOCASE)AND(v0.c0 COLLATE NOCASE)))OR(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))))OR((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, x'', v0.c0))))))AND((v0.c0 IN (v0.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((((((v0.c0 COLLATE NOCASE)AND(v0.c0 COLLATE NOCASE)))OR(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))))OR((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, x'', v0.c0))))))AND((v0.c0 IN (v0.c0))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((((((((v0.c0 COLLATE NOCASE)AND(v0.c0 COLLATE NOCASE)))OR(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))))OR((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, x'', v0.c0))))))AND((v0.c0 IN (v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MIN(MIN(MAX(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MIN(MIN(MAX(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN(MIN(MAX(vt0.c0)))) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ())) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ())))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ())) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT v0.c0 FROM v0, vt0;
SELECT DISTINCT v0.c0 FROM v0, vt0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))/(CASE WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) UNION SELECT DISTINCT v0.c0 FROM v0, vt0 WHERE ((NOT (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))/(CASE WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))))) UNION SELECT DISTINCT v0.c0 FROM v0, vt0 WHERE (((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))/(CASE WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0, vt0;
SELECT ALL v0.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON ((((v0.c0) BETWEEN (v0.c0) AND (-2.60942884E8))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (v0.c0 COLLATE RTRIM)) GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON ((((v0.c0) BETWEEN (v0.c0) AND (-2.60942884E8))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (v0.c0 COLLATE RTRIM)) WHERE ((v0.c0 IN ()) COLLATE BINARY) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON ((((v0.c0) BETWEEN (v0.c0) AND (-2.60942884E8))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (v0.c0 COLLATE RTRIM)) WHERE ((NOT ((v0.c0 IN ()) COLLATE BINARY))) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON ((((v0.c0) BETWEEN (v0.c0) AND (-2.60942884E8))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (v0.c0 COLLATE RTRIM)) WHERE ((((v0.c0 IN ()) COLLATE BINARY) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON ((((v0.c0) BETWEEN (v0.c0) AND (-2.60942884E8))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (v0.c0 COLLATE RTRIM)) GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING TOTAL(LTRIM(vt0.c0)) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (TOTAL(LTRIM(vt0.c0)))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 NOT INDEXED GROUP BY v0.c0, vt0.c0 HAVING ((TOTAL(LTRIM(vt0.c0))) ISNULL);
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING TOTAL(LTRIM(vt0.c0)) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (TOTAL(LTRIM(vt0.c0)))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 NOT INDEXED GROUP BY v0.c0, vt0.c0 HAVING ((TOTAL(LTRIM(vt0.c0))) ISNULL);
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((x'' IN ())) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((x'' IN ())))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((x'' IN ())) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c0, v0.c0 FROM v0 CROSS JOIN vt0 ON ((((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)))GLOB(v0.c0 COLLATE RTRIM));
SELECT DISTINCT vt0.c0, v0.c0 FROM v0 CROSS JOIN vt0 ON ((((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)))GLOB(v0.c0 COLLATE RTRIM)) WHERE (UNLIKELY(DISTINCT (vt0.c0 IN (v0.c0)))) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM v0 CROSS JOIN vt0 ON ((((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)))GLOB(v0.c0 COLLATE RTRIM)) WHERE ((NOT (UNLIKELY(DISTINCT (vt0.c0 IN (v0.c0)))))) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM v0 CROSS JOIN vt0 ON ((((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)))GLOB(v0.c0 COLLATE RTRIM)) WHERE (((UNLIKELY(DISTINCT (vt0.c0 IN (v0.c0)))) ISNULL));
SELECT DISTINCT vt0.c0, v0.c0 FROM v0 CROSS JOIN vt0 ON ((((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)))GLOB(v0.c0 COLLATE RTRIM));
SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 WHERE (load_extension(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt0, v0 WHERE ((NOT (load_extension(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt0, v0 WHERE (((load_extension(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0, vt0.c0 FROM vt0 INNER JOIN v0 ON x'' GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0 INNER JOIN v0 ON x'' GROUP BY v0.c0, vt0.c0 HAVING ((((SUM(vt0.c0))AND(IFNULL(v0.c0, v0.c0))))AND(SUM(SUM(MAX(AVG(TOTAL('1430943191'))))))) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0 INNER JOIN v0 ON x'' GROUP BY v0.c0, vt0.c0 HAVING (NOT (((((SUM(vt0.c0))AND(IFNULL(v0.c0, v0.c0))))AND(SUM(SUM(MAX(AVG(TOTAL('1430943191'))))))))) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0 INNER JOIN v0 ON x'' GROUP BY v0.c0, vt0.c0 HAVING ((((((SUM(vt0.c0))AND(IFNULL(v0.c0, v0.c0))))AND(SUM(SUM(MAX(AVG(TOTAL('1430943191')))))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CAST(((vt0.c0)!=(vt0.c0)) AS REAL)) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (CAST(((vt0.c0)<>(vt0.c0)) AS REAL)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST(((vt0.c0)!=(vt0.c0)) AS REAL)) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0;
SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0 WHERE ((((((v0.c0))<((v0.c0)))) IS FALSE)) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0 WHERE ((NOT ((((((v0.c0))<((v0.c0)))) IS FALSE)))) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0 WHERE ((((((((v0.c0))<((v0.c0)))) IS FALSE)) ISNULL));
SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0;
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0 WHERE (CASE WHEN ((vt0.c0)&(vt0.c0)) THEN ((((((((((((v0.c0)OR(-6.57743387E8)))AND(vt0.c0)))OR(v0.c0)))AND(vt0.c0)))AND(NULL)))OR(vt0.c0)) ELSE CAST(vt0.c0 AS TEXT) END) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, vt0 WHERE ((NOT (CASE WHEN ((vt0.c0)&(vt0.c0)) THEN ((((((((((((v0.c0)OR(-6.57743387E8)))AND(vt0.c0)))OR(v0.c0)))AND(vt0.c0)))AND(NULL)))OR(vt0.c0)) ELSE CAST(vt0.c0 AS TEXT) END))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, vt0 WHERE (((CASE WHEN ((vt0.c0)&(vt0.c0)) THEN ((((((((((((v0.c0)OR(-6.57743387E8)))AND(vt0.c0)))OR(v0.c0)))AND(vt0.c0)))AND(NULL)))OR(vt0.c0)) ELSE CAST(vt0.c0 AS TEXT) END) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CASE WHEN GROUP_CONCAT(MIN(SUM(AVG(vt0.c0)))) THEN (NOT (TOTAL(TOTAL(vt0.c0)))) ELSE COUNT(*) END UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CASE WHEN GROUP_CONCAT(MIN(SUM(AVG(vt0.c0)))) THEN (NOT (TOTAL(TOTAL(vt0.c0)))) ELSE COUNT(*) END)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CASE WHEN GROUP_CONCAT(MIN(SUM(AVG(vt0.c0)))) THEN (NOT (TOTAL(TOTAL(vt0.c0)))) ELSE COUNT(*) END) ISNULL);
SELECT * FROM vt0, v0;
SELECT * FROM vt0, v0 WHERE (v0.c0) UNION ALL SELECT * FROM vt0, v0 WHERE ((NOT (v0.c0))) UNION ALL SELECT ALL * FROM vt0, v0 WHERE (((v0.c0) ISNULL));
SELECT * FROM vt0, v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((v0.c0 IN (v0.c0, v0.c0)))%((v0.c0 IN ())))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((v0.c0 IN (v0.c0, v0.c0)))%((v0.c0 IN ())))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((v0.c0 IN (v0.c0, v0.c0)))%((v0.c0 IN ())))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((((v0.c0) NOT NULL) IN ())) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((v0.c0) NOT NULL) IN ())))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((((v0.c0) NOT NULL) IN ())) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING MAX((((0xffffffffc3935f96))>=((AVG(MIN(TOTAL(v0.c0))))))) UNION ALL SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING (NOT (MAX((((0Xffffffffc3935f96))>=((AVG(MIN(TOTAL(v0.c0))))))))) UNION ALL SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING ((MAX((((0xffffffffc3935f96))>=((AVG(MIN(TOTAL(v0.c0)))))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0, v0;
SELECT ALL vt0.c0 FROM vt0, v0 WHERE ((((vt0.c0))<(((v0.c0 IN (v0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0, v0 WHERE ((NOT ((((vt0.c0))<(((v0.c0 IN (v0.c0)))))))) UNION ALL SELECT vt0.c0 FROM vt0, v0 WHERE ((((((vt0.c0))<(((v0.c0 IN (v0.c0)))))) ISNULL));
SELECT ALL vt0.c0 FROM vt0, v0;
SELECT DISTINCT vt0.c0, v0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON ((json_insert(v0.c0, v0.c0, v0.c0)) IS FALSE);
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 WHERE (((((v0.c0)+(vt0.c0)))||(((v0.c0) IS TRUE)))) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 WHERE ((NOT (((((v0.c0)+(vt0.c0)))||(((v0.c0) IS TRUE)))))) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM v0, vt0 WHERE (((((((v0.c0)+(vt0.c0)))||(((v0.c0) IS TRUE)))) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING COUNT((~ (COUNT(vt0.c0)))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (COUNT((~ (COUNT(vt0.c0)))))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING ((COUNT((~ (COUNT(vt0.c0))))) ISNULL);
SELECT MIN((((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0))) COLLATE NOCASE) FROM vt0, v0;
SELECT * FROM v0;
SELECT * FROM v0 WHERE ((((v0.c0) NOT NULL) IN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT ((((v0.c0) NOT NULL) IN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))))) UNION ALL SELECT ALL * FROM v0 WHERE ((((((v0.c0) NOT NULL) IN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE (((+ (vt0.c0)) IN ((v0.c0 IN ())))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT (((+ (vt0.c0)) IN ((v0.c0 IN ())))))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE (((((+ (vt0.c0)) IN ((v0.c0 IN ())))) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST(vt0.c0 AS REAL)) BETWEEN ((vt0.c0 IN (vt0.c0, vt0.c0))) AND ('Vf'))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((CAST(vt0.c0 AS REAL)) BETWEEN ((vt0.c0 IN (vt0.c0, vt0.c0))) AND ('Vf'))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((CAST(vt0.c0 AS REAL)) BETWEEN ((vt0.c0 IN (vt0.c0, vt0.c0))) AND ('Vf'))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0 NATURAL JOIN vt0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0 NATURAL JOIN vt0 GROUP BY vt0.c0, v0.c0 HAVING CASE GROUP_CONCAT(v0.c0)  WHEN CAST(SUM(v0.c0) AS INTEGER) THEN MIN(MAX(MAX(vt0.c0))) WHEN ((vt0.c0) IS TRUE) THEN 0.06269074605803826 WHEN ((AVG(COUNT(SUM(v0.c0)))) NOT BETWEEN (COUNT(*)) AND (TOTAL(GROUP_CONCAT(AVG(vt0.c0))))) THEN ((COUNT(x'd6c4')) NOTNULL) END UNION ALL SELECT vt0.c0, v0.c0 FROM v0 NATURAL JOIN vt0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (CASE GROUP_CONCAT(v0.c0)  WHEN CAST(SUM(v0.c0) AS INTEGER) THEN MIN(MAX(MAX(vt0.c0))) WHEN ((vt0.c0) IS TRUE) THEN 0.06269074605803826 WHEN ((AVG(COUNT(SUM(v0.c0)))) NOT BETWEEN (COUNT(*)) AND (TOTAL(GROUP_CONCAT(AVG(vt0.c0))))) THEN ((COUNT(x'd6c4')) NOTNULL) END)) UNION ALL SELECT vt0.c0, v0.c0 FROM v0 NATURAL JOIN vt0 GROUP BY vt0.c0, v0.c0 HAVING ((CASE GROUP_CONCAT(v0.c0)  WHEN CAST(SUM(v0.c0) AS INTEGER) THEN MIN(MAX(MAX(vt0.c0))) WHEN ((vt0.c0) IS TRUE) THEN 0.06269074605803826 WHEN ((AVG(COUNT(SUM(v0.c0)))) NOT BETWEEN (COUNT(*)) AND (TOTAL(GROUP_CONCAT(AVG(vt0.c0))))) THEN ((COUNT(x'd6c4')) NOTNULL) END) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) AS TEXT)) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) AS TEXT)))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) AS TEXT)) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0;
SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) AND ((((v0.c0)+(NULL)))))) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) AND ((((v0.c0)+(NULL)))))))) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) AND ((((v0.c0)+(NULL)))))) ISNULL));
SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0;
SELECT ALL v0.c0 FROM vt0 NATURAL JOIN v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0 NATURAL JOIN v0 WHERE ((((v0.c0))<((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt0 NATURAL JOIN v0 WHERE ((NOT ((((v0.c0))<((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt0 NATURAL JOIN v0 WHERE ((((((v0.c0))<((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0 NATURAL JOIN v0 GROUP BY v0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX(LIKELY(AVG(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(LIKELY(AVG(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(LIKELY(AVG(vt0.c0)))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ('|P') UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ('|P'))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((('|P') ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0)))AND(((vt0.c0)<<(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.c0)AND(vt0.c0)))AND(((vt0.c0)<<(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(((vt0.c0)<<(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (CAST(((v0.c0)||(v0.c0)) AS REAL)) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (CAST(((v0.c0)||(v0.c0)) AS REAL)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((CAST(((v0.c0)||(v0.c0)) AS REAL)) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG(NULL) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (AVG(NULL))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG(NULL)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG(NULL) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (AVG(NULL))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG(NULL)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(x'f021')))OR(vt0.c0)))))OR(''))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(x'f021')))OR(vt0.c0)))))OR(''))))) UNION ALL SELECT * FROM vt0 WHERE (((((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(x'f021')))OR(vt0.c0)))))OR(''))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CAST(vt0.c0 AS BLOB)) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (CAST(vt0.c0 AS BLOB)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((vt0.c0 COLLATE BINARY))<>((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0 COLLATE BINARY))<>((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c0 COLLATE BINARY))<>((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING MAX(COUNT(COUNT(*))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MAX(COUNT(COUNT(*))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MAX(COUNT(COUNT(*)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0)OR(NULL)))AND(vt0.c0)) COLLATE RTRIM) ORDER BY (((0.6589023915666538 IN ()))-(json(vt0.c0))) DESC  NULLS LAST, TYPEOF(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) DESC  NULLS FIRST;
SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0)OR(NULL)))AND(vt0.c0)) COLLATE RTRIM))) ORDER BY (((0.6589023915666538 IN ()))-(json(vt0.c0))) DESC  NULLS LAST, TYPEOF(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) DESC  NULLS FIRST;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c0)OR(NULL)))AND(vt0.c0)) COLLATE RTRIM) ISNULL)) ORDER BY (((0.6589023915666538 IN ()))-(json(vt0.c0))) DESC  NULLS LAST, TYPEOF(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) DESC  NULLS FIRST;
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))/(vt0.c0))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))/(vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))/(vt0.c0))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0 WHERE ((((vt0.c0, 'z麪Uj칻Ii%', vt0.c0)) NOT BETWEEN ((CASE v0.c0  WHEN v0.c0 THEN vt0.c0 ELSE NULL END, (vt0.c0 IN (vt0.c0)), (292574273 IN ()))) AND ((((((v0.c0)AND(vt0.c0)))AND(NULL)), v0.c0 COLLATE RTRIM, 0.9143236734710513)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, vt0 NOT INDEXED WHERE ((NOT ((((vt0.c0, 'z麪Uj칻Ii%', vt0.c0)) NOT BETWEEN ((CASE v0.c0  WHEN v0.c0 THEN vt0.c0 ELSE NULL END, (vt0.c0 IN (vt0.c0)), (292574273 IN ()))) AND ((((((v0.c0)AND(vt0.c0)))AND(NULL)), v0.c0 COLLATE RTRIM, 0.9143236734710513)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, vt0 WHERE ((((((vt0.c0, 'z麪Uj칻Ii%', vt0.c0)) NOT BETWEEN ((CASE v0.c0  WHEN v0.c0 THEN vt0.c0 ELSE NULL END, (vt0.c0 IN (vt0.c0)), (292574273 IN ()))) AND ((((((v0.c0)AND(vt0.c0)))AND(NULL)), v0.c0 COLLATE RTRIM, 0.9143236734710513)))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING COUNT(MIN(SUM(AVG(vt0.c0)))) UNION ALL SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING (NOT (COUNT(MIN(SUM(AVG(vt0.c0)))))) UNION ALL SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING ((COUNT(MIN(SUM(AVG(vt0.c0))))) ISNULL);
SELECT vt0.c0 FROM vt0, v0;
SELECT ALL vt0.c0 FROM vt0, v0 WHERE (CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY) UNION ALL SELECT vt0.c0 FROM vt0, v0 WHERE ((NOT (CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY))) UNION ALL SELECT vt0.c0 FROM vt0, v0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY) ISNULL));
SELECT vt0.c0 FROM vt0, v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((((CASE v0.c0  WHEN v0.c0 THEN '驟*' ELSE x'' END)AND((v0.c0 IN (v0.c0)))))OR(v0.c0)))OR(((v0.c0)==(v0.c0)))))OR(((v0.c0)=(v0.c0))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((((((((CASE v0.c0  WHEN v0.c0 THEN '驟*' ELSE x'' END)AND((v0.c0 IN (v0.c0)))))OR(v0.c0)))OR(((v0.c0)==(v0.c0)))))OR(((v0.c0)==(v0.c0))))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((((((CASE v0.c0  WHEN v0.c0 THEN '驟*' ELSE x'' END)AND((v0.c0 IN (v0.c0)))))OR(v0.c0)))OR(((v0.c0)==(v0.c0)))))OR(((v0.c0)=(v0.c0))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, vt0 WHERE ((CASE WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ())) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM v0, vt0 WHERE ((NOT ((CASE WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ())))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM v0, vt0 WHERE ((((CASE WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ())) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ABS(((vt0.c0) BETWEEN (COUNT(COUNT(COUNT(vt0.c0)))) AND (vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (ABS(((vt0.c0) BETWEEN (COUNT(COUNT(COUNT(vt0.c0)))) AND (vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((ABS(((vt0.c0) BETWEEN (COUNT(COUNT(COUNT(vt0.c0)))) AND (vt0.c0)))) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (CASE ((((v0.c0)AND(v0.c0)))AND(v0.c0))  WHEN (~ (v0.c0)) THEN (((v0.c0, v0.c0, v0.c0))!=((v0.c0, 0x7acbe526, v0.c0))) WHEN ((v0.c0)LIKE(v0.c0)) THEN ((v0.c0) IS FALSE) WHEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) THEN v0.c0 COLLATE NOCASE ELSE ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (CASE ((((v0.c0)AND(v0.c0)))AND(v0.c0))  WHEN (~ (v0.c0)) THEN (((v0.c0, v0.c0, v0.c0))<>((v0.c0, 0X7acbe526, v0.c0))) WHEN ((v0.c0)LIKE(v0.c0)) THEN ((v0.c0) IS FALSE) WHEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) THEN v0.c0 COLLATE NOCASE ELSE ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((CASE ((((v0.c0)AND(v0.c0)))AND(v0.c0))  WHEN (~ (v0.c0)) THEN (((v0.c0, v0.c0, v0.c0))!=((v0.c0, 0X7acbe526, v0.c0))) WHEN ((v0.c0)LIKE(v0.c0)) THEN ((v0.c0) IS FALSE) WHEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) THEN v0.c0 COLLATE NOCASE ELSE ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((((v0.c0)/(v0.c0))) NOT BETWEEN ((x'' IN ())) AND ((v0.c0 IN ())))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((((v0.c0)/(v0.c0))) NOT BETWEEN ((x'' IN ())) AND ((v0.c0 IN ())))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((v0.c0)/(v0.c0))) NOT BETWEEN ((x'' IN ())) AND ((v0.c0 IN ())))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((CAST(v0.c0 AS TEXT))+(NULL))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((CAST(v0.c0 AS TEXT))+(NULL))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((CAST(v0.c0 AS TEXT))+(NULL))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (+ (((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(GROUP_CONCAT(COUNT(v0.c0)))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((+ (((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(GROUP_CONCAT(COUNT(v0.c0)))))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((+ (((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(GROUP_CONCAT(COUNT(v0.c0))))))) ISNULL);
SELECT ALL SUM((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) BETWEEN (((((v0.c0)AND(vt0.c0)))OR(vt0.c0))) AND (''))) FROM vt0, v0 ORDER BY ((x'cb60')|(CAST(v0.c0 AS BLOB))) ASC, ((CAST(v0.c0 AS BLOB))<(CASE WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) ASC  NULLS FIRST;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (((vt0.c0)*(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((vt0.c0)*(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))))) UNION ALL SELECT * FROM vt0 WHERE (((((vt0.c0)*(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c0, v0.c0 FROM v0 NATURAL JOIN vt0;
SELECT DISTINCT vt0.c0, v0.c0 FROM v0 NATURAL JOIN vt0 WHERE (0.19558881214523582) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM v0 NATURAL JOIN vt0 WHERE ((NOT (0.19558881214523582))) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM v0 NATURAL JOIN vt0 WHERE (((0.19558881214523582) ISNULL));
SELECT DISTINCT vt0.c0, v0.c0 FROM v0 NATURAL JOIN vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX(MAX(vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(MAX(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(MAX(vt0.c0))) ISNULL);
SELECT * FROM vt0 FULL OUTER JOIN v0 ON (vt0.c0 COLLATE BINARY IN (v0.c0 COLLATE RTRIM));
SELECT * FROM vt0 FULL OUTER JOIN v0 ON (vt0.c0 COLLATE BINARY IN (v0.c0 COLLATE RTRIM)) WHERE (CAST(v0.c0 AS BLOB)) UNION ALL SELECT * FROM vt0 FULL OUTER JOIN v0 ON (vt0.c0 COLLATE BINARY IN (v0.c0 COLLATE RTRIM)) WHERE ((NOT (CAST(v0.c0 AS BLOB)))) UNION ALL SELECT * FROM vt0 FULL OUTER JOIN v0 ON (vt0.c0 COLLATE BINARY IN (v0.c0 COLLATE RTRIM)) WHERE (((CAST(v0.c0 AS BLOB)) ISNULL));
SELECT * FROM vt0 FULL OUTER JOIN v0 ON (vt0.c0 COLLATE BINARY IN (v0.c0 COLLATE RTRIM));
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) IN ())) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) IN ())))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) IN ())) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, vt0 WHERE (((((((((v0.c0)AND(CASE WHEN v0.c0 THEN v0.c0 END)))OR(((v0.c0) BETWEEN (vt0.c0) AND ('1296579140')))))AND(((vt0.c0)GLOB(vt0.c0)))))AND(((0.49021171032527877) NOT BETWEEN (v0.c0) AND (v0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM v0, vt0 WHERE ((NOT (((((((((v0.c0)AND(CASE WHEN v0.c0 THEN v0.c0 END)))OR(((v0.c0) BETWEEN (vt0.c0) AND ('1296579140')))))AND(((vt0.c0)GLOB(vt0.c0)))))AND(((0.49021171032527877) NOT BETWEEN (v0.c0) AND (v0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM v0, vt0 WHERE (((((((((((v0.c0)AND(CASE WHEN v0.c0 THEN v0.c0 END)))OR(((v0.c0) BETWEEN (vt0.c0) AND ('1296579140')))))AND(((vt0.c0)GLOB(vt0.c0)))))AND(((0.49021171032527877) NOT BETWEEN (v0.c0) AND (v0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX(((TOTAL(MAX(COUNT(AVG(MIN(COUNT(*)))))))<<(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(((TOTAL(MAX(COUNT(AVG(MIN(COUNT(*)))))))<<(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(((TOTAL(MAX(COUNT(AVG(MIN(COUNT(*)))))))<<(vt0.c0)))) ISNULL);
SELECT vt0.c0 FROM vt0, v0;
SELECT ALL vt0.c0 FROM vt0, v0 WHERE (vt0.c0) UNION ALL SELECT vt0.c0 FROM vt0, v0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0, v0 WHERE (((vt0.c0) ISNULL));
SELECT vt0.c0 FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE (((NULL) BETWEEN ((~ (v0.c0))) AND (((vt0.c0) ISNULL)))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT (((NULL) BETWEEN ((~ (v0.c0))) AND (((vt0.c0) ISNULL)))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE (((((NULL) BETWEEN ((~ (v0.c0))) AND (((vt0.c0) ISNULL)))) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CASE vt0.c0 COLLATE RTRIM  WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN (- (vt0.c0)) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0)) WHEN ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(-1.48074628E8)) THEN ((vt0.c0) IS FALSE) ELSE UNLIKELY(DISTINCT vt0.c0) END) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CASE vt0.c0 COLLATE RTRIM  WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN (- (vt0.c0)) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0)) WHEN ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(-1.48074628E8)) THEN ((vt0.c0) IS FALSE) ELSE UNLIKELY(DISTINCT vt0.c0) END))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((CASE vt0.c0 COLLATE RTRIM  WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN (- (vt0.c0)) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0)) WHEN ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(-1.48074628E8)) THEN ((vt0.c0) IS FALSE) ELSE UNLIKELY(DISTINCT vt0.c0) END) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING json_array_length(SUM(vt0.c0) COLLATE NOCASE) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (json_array_length(SUM(vt0.c0) COLLATE NOCASE))) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING ((json_array_length(SUM(vt0.c0) COLLATE NOCASE)) ISNULL);
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING json_array_length(SUM(vt0.c0) COLLATE NOCASE) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (json_array_length(SUM(vt0.c0) COLLATE NOCASE))) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING ((json_array_length(SUM(vt0.c0) COLLATE NOCASE)) ISNULL);
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (CAST(v0.c0 AS BLOB) COLLATE BINARY) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (CAST(v0.c0 AS BLOB) COLLATE BINARY))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((CAST(v0.c0 AS BLOB) COLLATE BINARY) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN v0 ON ((((((((((((((vt0.c0)IS(vt0.c0)))AND('645190656')))OR(CAST(v0.c0 AS TEXT))))OR(((vt0.c0) BETWEEN (1487759374) AND (v0.c0)))))AND((- (v0.c0)))))AND(v0.c0)))OR(CAST(v0.c0 AS BLOB)));
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN v0 ON ((((((((((((((vt0.c0)IS(vt0.c0)))AND('645190656')))OR(CAST(v0.c0 AS TEXT))))OR(((vt0.c0) BETWEEN (1487759374) AND (v0.c0)))))AND((- (v0.c0)))))AND(v0.c0)))OR(CAST(v0.c0 AS BLOB))) WHERE (((NOT (vt0.c0)) IN ())) UNION SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN v0 ON ((((((((((((((vt0.c0)IS(vt0.c0)))AND('645190656')))OR(CAST(v0.c0 AS TEXT))))OR(((vt0.c0) BETWEEN (1487759374) AND (v0.c0)))))AND((- (v0.c0)))))AND(v0.c0)))OR(CAST(v0.c0 AS BLOB))) WHERE ((NOT (((NOT (vt0.c0)) IN ())))) UNION SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN v0 ON ((((((((((((((vt0.c0)IS(vt0.c0)))AND('645190656')))OR(CAST(v0.c0 AS TEXT))))OR(((vt0.c0) BETWEEN (1487759374) AND (v0.c0)))))AND((- (v0.c0)))))AND(v0.c0)))OR(CAST(v0.c0 AS BLOB))) WHERE (((((NOT (vt0.c0)) IN ())) ISNULL));
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN v0 ON ((((((((((((((vt0.c0)IS(vt0.c0)))AND('645190656')))OR(CAST(v0.c0 AS TEXT))))OR(((vt0.c0) BETWEEN (1487759374) AND (v0.c0)))))AND((- (v0.c0)))))AND(v0.c0)))OR(CAST(v0.c0 AS BLOB)));
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))>>((v0.c0 IN ())))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))>>((v0.c0 IN ())))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))>>((v0.c0 IN ())))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((AVG(v0.c0)) NOTNULL) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((AVG(v0.c0)) NOTNULL))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((AVG(v0.c0)) NOTNULL)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((AVG(v0.c0)) NOTNULL) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((AVG(v0.c0)) NOTNULL))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((AVG(v0.c0)) NOTNULL)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))+(vt0.c0 COLLATE RTRIM))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))+(vt0.c0 COLLATE RTRIM))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))+(vt0.c0 COLLATE RTRIM))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE (vt0.c0 COLLATE NOCASE) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT (vt0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE (((vt0.c0 COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0) NOTNULL)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0) NOTNULL)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0) NOTNULL)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING (((CAST(vt0.c0 AS INTEGER), AVG(x''), vt0.c0))=(((~ (v0.c0)), ((((((((TOTAL(AVG(COUNT(*))))AND(vt0.c0)))OR(v0.c0)))AND(vt0.c0)))AND(vt0.c0)), ((vt0.c0) ISNULL)))) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING (NOT ((((CAST(vt0.c0 AS INTEGER), AVG(x''), vt0.c0))=(((~ (v0.c0)), ((((((((TOTAL(AVG(COUNT(*))))AND(vt0.c0)))OR(v0.c0)))AND(vt0.c0)))AND(vt0.c0)), ((vt0.c0) ISNULL)))))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING (((((CAST(vt0.c0 AS INTEGER), AVG(x''), vt0.c0))==(((~ (v0.c0)), ((((((((TOTAL(AVG(COUNT(*))))AND(vt0.c0)))OR(v0.c0)))AND(vt0.c0)))AND(vt0.c0)), ((vt0.c0) ISNULL))))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (IFNULL(((vt0.c0)|(vt0.c0)), ((((((((vt0.c0)OR(vt0.c0)))OR(NULL)))OR(vt0.c0)))OR(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (IFNULL(((vt0.c0)|(vt0.c0)), ((((((((vt0.c0)OR(vt0.c0)))OR(NULL)))OR(vt0.c0)))OR(vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((IFNULL(((vt0.c0)|(vt0.c0)), ((((((((vt0.c0)OR(vt0.c0)))OR(NULL)))OR(vt0.c0)))OR(vt0.c0)))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM v0 NATURAL JOIN vt0;
SELECT DISTINCT * FROM v0 NATURAL JOIN vt0 WHERE ((((vt0.c0)/(vt0.c0)) IN ())) UNION SELECT DISTINCT * FROM v0 NATURAL JOIN vt0 WHERE ((NOT ((((vt0.c0)/(vt0.c0)) IN ())))) UNION SELECT DISTINCT * FROM v0 NATURAL JOIN vt0 WHERE ((((((vt0.c0)/(vt0.c0)) IN ())) ISNULL));
SELECT DISTINCT * FROM v0 NATURAL JOIN vt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (v0.c0) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (v0.c0))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((v0.c0) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c0 FROM vt0 INNER JOIN v0 ON (+ (((v0.c0)IS NOT(v0.c0)))) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 INNER JOIN v0 ON (+ (((v0.c0)IS NOT(v0.c0)))) GROUP BY vt0.c0 HAVING TOTAL(((v0.c0)+(COUNT(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 INNER JOIN v0 ON (+ (((v0.c0)IS NOT(v0.c0)))) GROUP BY vt0.c0 HAVING (NOT (TOTAL(((v0.c0)+(COUNT(vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 INNER JOIN v0 ON (+ (((v0.c0)IS NOT(v0.c0)))) GROUP BY vt0.c0 HAVING ((TOTAL(((v0.c0)+(COUNT(vt0.c0))))) ISNULL);
SELECT ALL * FROM vt0, v0;
SELECT ALL * FROM vt0, v0 WHERE (x'79aa') UNION ALL SELECT ALL * FROM vt0, v0 WHERE ((NOT (x'79aa'))) UNION ALL SELECT * FROM vt0, v0 WHERE (((x'79aa') ISNULL));
SELECT ALL * FROM vt0, v0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0 IN (vt0.c0, vt0.c0)) IN ())) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((vt0.c0 IN (vt0.c0, vt0.c0)) IN ())))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0 IN (vt0.c0, vt0.c0)) IN ())) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ())))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((vt0.c0 IN ()), ((vt0.c0)LIKE(AVG(MAX(vt0.c0)))), ((COUNT(vt0.c0))OR(vt0.c0))))>((AVG(SUM(GROUP_CONCAT(vt0.c0))), (((SUM(COUNT(SUM(AVG(GROUP_CONCAT(vt0.c0))))), GROUP_CONCAT(MIN(COUNT(*))), vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND (('W?p칻', vt0.c0, vt0.c0))), SUM(SUM(MAX(vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((((vt0.c0 IN ()), ((vt0.c0)LIKE(AVG(MAX(vt0.c0)))), ((COUNT(vt0.c0))OR(vt0.c0))))>((AVG(SUM(GROUP_CONCAT(vt0.c0))), (((SUM(COUNT(SUM(AVG(GROUP_CONCAT(vt0.c0))))), GROUP_CONCAT(MIN(COUNT(*))), vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND (('W?p칻', vt0.c0, vt0.c0))), SUM(SUM(MAX(vt0.c0)))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((vt0.c0 IN ()), ((vt0.c0)LIKE(AVG(MAX(vt0.c0)))), ((COUNT(vt0.c0))OR(vt0.c0))))>((AVG(SUM(GROUP_CONCAT(vt0.c0))), (((SUM(COUNT(SUM(AVG(GROUP_CONCAT(vt0.c0))))), GROUP_CONCAT(MIN(COUNT(*))), vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND (('W?p칻', vt0.c0, vt0.c0))), SUM(SUM(MAX(vt0.c0))))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (TRIM(((vt0.c0) NOT NULL))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (TRIM(((vt0.c0) NOT NULL))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((TRIM(((vt0.c0) NOT NULL))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 CROSS JOIN v0 ON ((((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))/(v0.c0));
SELECT DISTINCT vt0.c0 FROM vt0 CROSS JOIN v0 ON ((((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))/(v0.c0)) WHERE ((((v0.c0)) BETWEEN ((((v0.c0)=('Q#')))) AND (((((v0.c0, v0.c0, v0.c0, v0.c0, 0.3100148207967349))<>((vt0.c0, vt0.c0, vt0.c0, vt0.c0, v0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 CROSS JOIN v0 ON ((((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))/(v0.c0)) WHERE ((NOT ((((v0.c0)) BETWEEN ((((v0.c0)=('Q#')))) AND (((((v0.c0, v0.c0, v0.c0, v0.c0, 0.3100148207967349))!=((vt0.c0, vt0.c0, vt0.c0, vt0.c0, v0.c0))))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 CROSS JOIN v0 ON ((((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))/(v0.c0)) WHERE ((((((v0.c0)) BETWEEN ((((v0.c0)=('Q#')))) AND (((((v0.c0, v0.c0, v0.c0, v0.c0, 0.3100148207967349))<>((vt0.c0, vt0.c0, vt0.c0, vt0.c0, v0.c0))))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0 CROSS JOIN v0 ON ((((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))/(v0.c0));
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (v0.c0) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (v0.c0))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((v0.c0) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING GROUP_CONCAT(MIN(vt0.c0)) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (GROUP_CONCAT(MIN(vt0.c0)))) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING ((GROUP_CONCAT(MIN(vt0.c0))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))>=(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))>=(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))>=(vt0.c0))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((~ (v0.c0 COLLATE BINARY))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((~ (v0.c0 COLLATE BINARY))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((~ (v0.c0 COLLATE BINARY))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CAST(SQLITE_SOURCE_ID() AS NUMERIC)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CAST(SQLITE_SOURCE_ID() AS NUMERIC)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST(SQLITE_SOURCE_ID() AS NUMERIC)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (((GROUP_CONCAT(vt0.c0), MAX(vt0.c0), vt0.c0)) NOT BETWEEN ((TOTAL(TOTAL(MAX(MAX(MAX(COUNT(vt0.c0)))))), vt0.c0, AVG(COUNT(v0.c0)))) AND ((json_array_length(vt0.c0), MIN(COUNT(*)), ((-723849960) BETWEEN (vt0.c0) AND (TOTAL(vt0.c0)))))) UNION ALL SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (NOT ((((GROUP_CONCAT(vt0.c0), MAX(vt0.c0), vt0.c0)) NOT BETWEEN ((TOTAL(TOTAL(MAX(MAX(MAX(COUNT(vt0.c0)))))), vt0.c0, AVG(COUNT(v0.c0)))) AND ((json_array_length(vt0.c0), MIN(COUNT(*)), ((-723849960) BETWEEN (vt0.c0) AND (TOTAL(vt0.c0)))))))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (((((GROUP_CONCAT(vt0.c0), MAX(vt0.c0), vt0.c0)) NOT BETWEEN ((TOTAL(TOTAL(MAX(MAX(MAX(COUNT(vt0.c0)))))), vt0.c0, AVG(COUNT(v0.c0)))) AND ((json_array_length(vt0.c0), MIN(COUNT(*)), ((-723849960) BETWEEN (vt0.c0) AND (TOTAL(vt0.c0))))))) ISNULL);
SELECT * FROM vt0, v0;
SELECT ALL * FROM vt0, v0 WHERE (-1657936299) UNION ALL SELECT * FROM vt0, v0 WHERE ((NOT (-1657936299))) UNION ALL SELECT ALL * FROM vt0, v0 WHERE (((-1657936299) ISNULL));
SELECT * FROM vt0, v0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((vt0.c0 IN ())))<=((((vt0.c0)>(vt0.c0)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0 IN ())))<=((((vt0.c0)>(vt0.c0)))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((vt0.c0 IN ())))<=((((vt0.c0)>(vt0.c0)))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((GROUP_CONCAT('1460448236')) IS FALSE), COUNT(*), (((v0.c0))>((TOTAL(v0.c0))))))<((AVG(SUM(v0.c0)), TOTAL(SUM(MAX(GROUP_CONCAT(v0.c0)))), UPPER(v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((((((GROUP_CONCAT('1460448236')) IS FALSE), COUNT(*), (((v0.c0))>((TOTAL(v0.c0))))))<((AVG(SUM(v0.c0)), TOTAL(SUM(MAX(GROUP_CONCAT(v0.c0)))), UPPER(v0.c0)))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((((GROUP_CONCAT('1460448236')) IS FALSE), COUNT(*), (((v0.c0))>((TOTAL(v0.c0))))))<((AVG(SUM(v0.c0)), TOTAL(SUM(MAX(GROUP_CONCAT(v0.c0)))), UPPER(v0.c0))))) ISNULL);
SELECT SUM((~ (((v0.c0)>>(vt0.c0))))) FROM vt0, v0 ORDER BY CAST(vt0.c0 COLLATE BINARY AS NUMERIC) ASC, ((((v0.c0)IS NOT(x'')))-(((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)))) DESC  NULLS LAST;
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE BINARY) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE BINARY))) UNION ALL SELECT * FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE BINARY) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT v0.c0 FROM vt0 INNER JOIN v0 ON (NOT (v0.c0)) COLLATE RTRIM;
SELECT DISTINCT v0.c0 FROM vt0 INNER JOIN v0 ON (NOT (v0.c0)) COLLATE RTRIM WHERE (((((v0.c0)*(vt0.c0)))|((((vt0.c0))!=((vt0.c0)))))) UNION SELECT DISTINCT v0.c0 FROM vt0 INNER JOIN v0 ON (NOT (v0.c0)) COLLATE RTRIM WHERE ((NOT (((((v0.c0)*(vt0.c0)))|((((vt0.c0))<>((vt0.c0)))))))) UNION SELECT DISTINCT v0.c0 FROM vt0 INNER JOIN v0 ON (NOT (v0.c0)) COLLATE RTRIM WHERE (((((((v0.c0)*(vt0.c0)))|((((vt0.c0))<>((vt0.c0)))))) ISNULL));
SELECT DISTINCT v0.c0 FROM vt0 INNER JOIN v0 ON (NOT (v0.c0)) COLLATE RTRIM;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((((+ (v0.c0)))&(((((v0.c0)OR(v0.c0)))OR(v0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((((+ (v0.c0)))&(((((v0.c0)OR(v0.c0)))OR(v0.c0))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((((+ (v0.c0)))&(((((v0.c0)OR(v0.c0)))OR(v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING GROUP_CONCAT(COUNT(*)) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING ((GROUP_CONCAT(COUNT(*))) ISNULL);
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE (CASE WHEN CASE WHEN v0.c0 THEN v0.c0 END THEN (v0.c0 IN ()) ELSE (v0.c0 IN ()) END) UNION ALL SELECT * FROM v0 WHERE ((NOT (CASE WHEN CASE WHEN v0.c0 THEN v0.c0 END THEN (v0.c0 IN ()) ELSE (v0.c0 IN ()) END))) UNION ALL SELECT * FROM v0 WHERE (((CASE WHEN CASE WHEN v0.c0 THEN v0.c0 END THEN (v0.c0 IN ()) ELSE (v0.c0 IN ()) END) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT vt0.c0 FROM v0, vt0;
SELECT DISTINCT vt0.c0 FROM v0, vt0 WHERE (CAST(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END AS NUMERIC)) UNION SELECT DISTINCT vt0.c0 FROM v0, vt0 WHERE ((NOT (CAST(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END AS NUMERIC)))) UNION SELECT DISTINCT vt0.c0 FROM v0, vt0 WHERE (((CAST(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END AS NUMERIC)) ISNULL));
SELECT DISTINCT vt0.c0 FROM v0, vt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((NOT ('\nR'))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((NOT ('\nR'))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((NOT ('\nR'))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 NOT INDEXED GROUP BY v0.c0 HAVING AVG(COALESCE(DISTINCT v0.c0, v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (AVG(COALESCE(DISTINCT v0.c0, v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((AVG(COALESCE(DISTINCT v0.c0, v0.c0))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 NOT INDEXED GROUP BY v0.c0 HAVING AVG(COALESCE(DISTINCT v0.c0, v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (AVG(COALESCE(DISTINCT v0.c0, v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((AVG(COALESCE(DISTINCT v0.c0, v0.c0))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT * FROM vt0 NATURAL JOIN v0;
SELECT * FROM vt0 NATURAL JOIN v0 WHERE ((('')IS NOT(((vt0.c0)OR(v0.c0))))) UNION ALL SELECT * FROM vt0 NATURAL JOIN v0 WHERE ((NOT ((('')IS NOT(((vt0.c0)OR(v0.c0))))))) UNION ALL SELECT * FROM vt0 NATURAL JOIN v0 WHERE ((((('')IS NOT(((vt0.c0)OR(v0.c0))))) ISNULL));
SELECT * FROM vt0 NATURAL JOIN v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (CAST(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS INTEGER)) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (CAST(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS INTEGER)))) UNION SELECT DISTINCT * FROM v0 WHERE (((CAST(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt0 WHERE ((~ (((v0.c0)==(vt0.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, vt0 WHERE ((NOT ((~ (((v0.c0)==(vt0.c0))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, vt0 WHERE ((((~ (((v0.c0)=(vt0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING SUM((((COUNT(*)))>=((COUNT(TOTAL(MIN(v0.c0))))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (SUM((((COUNT(*)))>=((COUNT(TOTAL(MIN(v0.c0))))))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((SUM((((COUNT(*)))>=((COUNT(TOTAL(MIN(v0.c0)))))))) ISNULL);
SELECT ALL * FROM v0, vt0;
SELECT * FROM v0, vt0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOTNULL)) UNION ALL SELECT * FROM v0, vt0 NOT INDEXED WHERE ((NOT (((CASE WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOTNULL)))) UNION ALL SELECT * FROM v0, vt0 WHERE (((((CASE WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOTNULL)) ISNULL));
SELECT ALL * FROM v0, vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (ABS(DISTINCT (vt0.c0 IN (vt0.c0, vt0.c0, vt0.c0)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (ABS(DISTINCT (vt0.c0 IN (vt0.c0, vt0.c0, vt0.c0)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((ABS(DISTINCT (vt0.c0 IN (vt0.c0, vt0.c0, vt0.c0)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE BINARY) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE BINARY))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE BINARY) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((NULL IN ()))>(SUM(MIN(TOTAL(COUNT(*)))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((((NULL IN ()))>(SUM(MIN(TOTAL(COUNT(*)))))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((NULL IN ()))>(SUM(MIN(TOTAL(COUNT(*))))))) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (((TYPEOF(vt0.c0)) NOT NULL)) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((TYPEOF(vt0.c0)) NOT NULL)))) UNION ALL SELECT * FROM vt0 WHERE (((((TYPEOF(vt0.c0)) NOT NULL)) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((TYPEOF(vt0.c0)) ISNULL)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((TYPEOF(vt0.c0)) ISNULL)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((TYPEOF(vt0.c0)) ISNULL)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0 WHERE (vt0.c0) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, vt0 WHERE ((NOT (vt0.c0))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 NOT INDEXED GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING TOTAL(((((v0.c0)OR(COUNT(*))))OR(COUNT(*)))) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (TOTAL(((((v0.c0)OR(COUNT(*))))OR(COUNT(*)))))) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING ((TOTAL(((((v0.c0)OR(COUNT(*))))OR(COUNT(*))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0, v0;
SELECT vt0.c0 FROM vt0, v0 WHERE (NULL) UNION ALL SELECT ALL vt0.c0 FROM vt0, v0 WHERE ((NOT (NULL))) UNION ALL SELECT ALL vt0.c0 FROM vt0, v0 WHERE (((NULL) ISNULL));
SELECT ALL vt0.c0 FROM vt0, v0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ('964175703') UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ('964175703'))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((('964175703') ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 NATURAL JOIN v0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 NATURAL JOIN v0 WHERE ((~ (((v0.c0) NOTNULL)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 NATURAL JOIN v0 WHERE ((NOT ((~ (((v0.c0) NOTNULL)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 NATURAL JOIN v0 WHERE ((((~ (((v0.c0) NOTNULL)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 NATURAL JOIN v0 GROUP BY vt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (~ ((((COUNT(COUNT(*))))=((COUNT(*)))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((~ ((((COUNT(COUNT(*))))=((COUNT(*)))))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((~ ((((COUNT(COUNT(*))))=((COUNT(*))))))) ISNULL);
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (((v0.c0) ISNULL)) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((v0.c0) ISNULL)))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((((v0.c0) ISNULL)) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((~ (((((v0.c0)AND(v0.c0)))AND(v0.c0))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((~ (((((v0.c0)AND(v0.c0)))AND(v0.c0))))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((~ (((((v0.c0)AND(v0.c0)))AND(v0.c0))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 WHERE (((((v0.c0)OR(vt0.c0 COLLATE BINARY)))AND(CAST(vt0.c0 AS NUMERIC)))) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 WHERE ((NOT (((((v0.c0)OR(vt0.c0 COLLATE BINARY)))AND(CAST(vt0.c0 AS NUMERIC)))))) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 WHERE (((((((v0.c0)OR(vt0.c0 COLLATE BINARY)))AND(CAST(vt0.c0 AS NUMERIC)))) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING MAX(CAST(GROUP_CONCAT(GROUP_CONCAT(TOTAL(MAX(vt0.c0)))) AS TEXT)) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (MAX(CAST(GROUP_CONCAT(GROUP_CONCAT(TOTAL(MAX(vt0.c0)))) AS TEXT)))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING ((MAX(CAST(GROUP_CONCAT(GROUP_CONCAT(TOTAL(MAX(vt0.c0)))) AS TEXT))) ISNULL);
SELECT * FROM v0, vt0;
SELECT ALL * FROM v0, vt0 WHERE (vt0.c0) UNION ALL SELECT * FROM v0, vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL * FROM v0, vt0 WHERE (((vt0.c0) ISNULL));
SELECT * FROM v0, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM) BETWEEN (((vt0.c0) NOT NULL)) AND (((vt0.c0)|(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((vt0.c0 COLLATE RTRIM) BETWEEN (((vt0.c0) NOT NULL)) AND (((vt0.c0)|(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0 COLLATE RTRIM) BETWEEN (((vt0.c0) NOT NULL)) AND (((vt0.c0)|(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL v0.c0 FROM v0 CROSS JOIN vt0 ON NULLIF(vt0.c0, vt0.c0) COLLATE RTRIM GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 CROSS JOIN vt0 ON NULLIF(vt0.c0, vt0.c0) COLLATE RTRIM WHERE (((CAST(x'' AS TEXT)) NOTNULL)) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 CROSS JOIN vt0 ON NULLIF(vt0.c0, vt0.c0) COLLATE RTRIM WHERE ((NOT (((CAST(x'' AS TEXT)) NOTNULL)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 CROSS JOIN vt0 ON NULLIF(vt0.c0, vt0.c0) COLLATE RTRIM WHERE (((((CAST(x'' AS TEXT)) NOTNULL)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 CROSS JOIN vt0 ON NULLIF(vt0.c0, vt0.c0) COLLATE RTRIM GROUP BY v0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING (CASE MIN(vt0.c0)  WHEN v0.c0 THEN v0.c0 WHEN AVG(MAX(v0.c0)) THEN v0.c0 WHEN AVG(0.9551017337218262) THEN TOTAL(x'') END IN ()) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING (NOT ((CASE MIN(vt0.c0)  WHEN v0.c0 THEN v0.c0 WHEN AVG(MAX(v0.c0)) THEN v0.c0 WHEN AVG(0.9551017337218262) THEN TOTAL(x'') END IN ()))) UNION ALL SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING (((CASE MIN(vt0.c0)  WHEN v0.c0 THEN v0.c0 WHEN AVG(MAX(v0.c0)) THEN v0.c0 WHEN AVG(0.9551017337218262) THEN TOTAL(x'') END IN ())) ISNULL);
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING (CASE MIN(vt0.c0)  WHEN v0.c0 THEN v0.c0 WHEN AVG(MAX(v0.c0)) THEN v0.c0 WHEN AVG(0.9551017337218262) THEN TOTAL(x'') END IN ()) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING (NOT ((CASE MIN(vt0.c0)  WHEN v0.c0 THEN v0.c0 WHEN AVG(MAX(v0.c0)) THEN v0.c0 WHEN AVG(0.9551017337218262) THEN TOTAL(x'') END IN ()))) UNION ALL SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING (((CASE MIN(vt0.c0)  WHEN v0.c0 THEN v0.c0 WHEN AVG(MAX(v0.c0)) THEN v0.c0 WHEN AVG(0.9551017337218262) THEN TOTAL(x'') END IN ())) ISNULL);
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 WHERE (TIME(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)), ((v0.c0)IS NOT(v0.c0)), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND (('202686381'))), CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 END, ((vt0.c0) NOTNULL))) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0, v0 WHERE ((NOT (TIME(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)), ((v0.c0)IS NOT(v0.c0)), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND (('202686381'))), CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 END, ((vt0.c0) NOTNULL))))) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0, v0 WHERE (((TIME(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)), ((v0.c0)IS NOT(v0.c0)), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND (('202686381'))), CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 END, ((vt0.c0) NOTNULL))) ISNULL));
SELECT v0.c0, vt0.c0 FROM vt0, v0;
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE (v0.c0) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (CASE (((0.6223930547420128))<=((v0.c0)))  WHEN v0.c0 THEN ((v0.c0)<(v0.c0)) ELSE (v0.c0 IN ()) END) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (CASE (((0.6223930547420128))<=((v0.c0)))  WHEN v0.c0 THEN ((v0.c0)<(v0.c0)) ELSE (v0.c0 IN ()) END))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((CASE (((0.6223930547420128))<=((v0.c0)))  WHEN v0.c0 THEN ((v0.c0)<(v0.c0)) ELSE (v0.c0 IN ()) END) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING TOTAL((NOT (v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TOTAL((NOT (v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL((NOT (v0.c0)))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING TOTAL((NOT (v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TOTAL((NOT (v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL((NOT (v0.c0)))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((NOT (vt0.c0))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((NOT (vt0.c0))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c0 FROM v0 LEFT OUTER JOIN vt0 ON CASE COALESCE(DISTINCT vt0.c0, v0.c0, NULL, v0.c0)  WHEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(v0.c0)))AND(v0.c0)) THEN ((vt0.c0)<=(v0.c0)) END;
SELECT DISTINCT vt0.c0 FROM v0 LEFT OUTER JOIN vt0 ON CASE COALESCE(DISTINCT vt0.c0, v0.c0, NULL, v0.c0)  WHEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(v0.c0)))AND(v0.c0)) THEN ((vt0.c0)<=(v0.c0)) END WHERE (CASE x''  WHEN ((vt0.c0)*(vt0.c0)) THEN v0.c0 COLLATE BINARY WHEN '*&>nh' THEN (+ (v0.c0)) WHEN CAST(v0.c0 AS BLOB) THEN (v0.c0 IN ()) ELSE ((vt0.c0) BETWEEN (x'') AND (vt0.c0)) END) UNION SELECT DISTINCT vt0.c0 FROM v0 LEFT OUTER JOIN vt0 ON CASE COALESCE(DISTINCT vt0.c0, v0.c0, NULL, v0.c0)  WHEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(v0.c0)))AND(v0.c0)) THEN ((vt0.c0)<=(v0.c0)) END WHERE ((NOT (CASE x''  WHEN ((vt0.c0)*(vt0.c0)) THEN v0.c0 COLLATE BINARY WHEN '*&>nh' THEN (+ (v0.c0)) WHEN CAST(v0.c0 AS BLOB) THEN (v0.c0 IN ()) ELSE ((vt0.c0) BETWEEN (x'') AND (vt0.c0)) END))) UNION SELECT DISTINCT vt0.c0 FROM v0 LEFT OUTER JOIN vt0 ON CASE COALESCE(DISTINCT vt0.c0, v0.c0, NULL, v0.c0)  WHEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(v0.c0)))AND(v0.c0)) THEN ((vt0.c0)<=(v0.c0)) END WHERE (((CASE x''  WHEN ((vt0.c0)*(vt0.c0)) THEN v0.c0 COLLATE BINARY WHEN '*&>nh' THEN (+ (v0.c0)) WHEN CAST(v0.c0 AS BLOB) THEN (v0.c0 IN ()) ELSE ((vt0.c0) BETWEEN (x'') AND (vt0.c0)) END) ISNULL));
SELECT DISTINCT vt0.c0 FROM v0 LEFT OUTER JOIN vt0 ON CASE COALESCE(DISTINCT vt0.c0, v0.c0, NULL, v0.c0)  WHEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(v0.c0)))AND(v0.c0)) THEN ((vt0.c0)<=(v0.c0)) END;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (v0.c0 COLLATE RTRIM COLLATE NOCASE COLLATE RTRIM) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (v0.c0 COLLATE RTRIM COLLATE NOCASE COLLATE RTRIM))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((v0.c0 COLLATE RTRIM COLLATE NOCASE COLLATE RTRIM) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0, v0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 WHERE (LIKELIHOOD(((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)), 0.9983261149758331)) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE ((NOT (LIKELIHOOD(((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)), 0.9983261149758331)))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE (((LIKELIHOOD(((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)), 0.9983261149758331)) ISNULL));
SELECT vt0.c0, v0.c0 FROM vt0, v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((((v0.c0 IN (v0.c0))))>((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((((v0.c0 IN (v0.c0))))>((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((v0.c0 IN (v0.c0))))>((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, v0 WHERE ((x'' IN ())) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, v0 WHERE ((NOT ((x'' IN ())))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, v0 WHERE ((((x'' IN ())) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(MAX(MIN(COUNT(*)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(MAX(MIN(COUNT(*)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(MAX(MIN(COUNT(*))))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (CAST(((vt0.c0)!=(vt0.c0)) AS BLOB)) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (CAST(((vt0.c0)<>(vt0.c0)) AS BLOB)))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((CAST(((vt0.c0)!=(vt0.c0)) AS BLOB)) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0)<=(-163501785))) NOT BETWEEN ((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0)))) AND (TRIM(vt0.c0, vt0.c0)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.c0)<=(-163501785))) NOT BETWEEN ((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0)))) AND (TRIM(vt0.c0, vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0)<=(-163501785))) NOT BETWEEN ((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0)))) AND (TRIM(vt0.c0, vt0.c0)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 WHERE ((NOT (0.8172583107853689))) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM v0, vt0 WHERE ((NOT ((NOT (0.8172583107853689))))) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM v0, vt0 WHERE ((((NOT (0.8172583107853689))) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING AVG(AVG(COUNT(GROUP_CONCAT(v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (AVG(AVG(COUNT(GROUP_CONCAT(v0.c0)))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((AVG(AVG(COUNT(GROUP_CONCAT(v0.c0))))) ISNULL);
SELECT ALL v0.c0, vt0.c0 FROM v0 INNER JOIN vt0 ON (v0.c0 COLLATE NOCASE IN ());
SELECT ALL v0.c0, vt0.c0 FROM v0 INNER JOIN vt0 ON (v0.c0 COLLATE NOCASE IN ()) WHERE (((((0.5198788149904037)<(vt0.c0)))GLOB(LIKE(vt0.c0, v0.c0, 'z')))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0 INNER JOIN vt0 ON (v0.c0 COLLATE NOCASE IN ()) WHERE ((NOT (((((0.5198788149904037)<(vt0.c0)))GLOB(LIKE(vt0.c0, v0.c0, 'z')))))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0 INNER JOIN vt0 ON (v0.c0 COLLATE NOCASE IN ()) WHERE (((((((0.5198788149904037)<(vt0.c0)))GLOB(LIKE(vt0.c0, v0.c0, 'z')))) ISNULL));
SELECT ALL v0.c0, vt0.c0 FROM v0 INNER JOIN vt0 ON (v0.c0 COLLATE NOCASE IN ());
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE (CAST((vt0.c0 IN ()) AS INTEGER)) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT (CAST((vt0.c0 IN ()) AS INTEGER)))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE (((CAST((vt0.c0 IN ()) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, vt0 WHERE ((((vt0.c0 IN ())) BETWEEN ((vt0.c0 IN ())) AND (CASE WHEN vt0.c0 THEN v0.c0 END))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM v0, vt0 WHERE ((NOT ((((vt0.c0 IN ())) BETWEEN ((vt0.c0 IN ())) AND (CASE WHEN vt0.c0 THEN v0.c0 END))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM v0, vt0 WHERE ((((((vt0.c0 IN ())) BETWEEN ((vt0.c0 IN ())) AND (CASE WHEN vt0.c0 THEN v0.c0 END))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL * FROM v0, vt0;
SELECT ALL * FROM v0, vt0 WHERE (((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)) COLLATE RTRIM) UNION ALL SELECT ALL * FROM v0, vt0 WHERE ((NOT (((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)) COLLATE RTRIM))) UNION ALL SELECT ALL * FROM v0, vt0 WHERE (((((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)) COLLATE RTRIM) ISNULL));
SELECT ALL * FROM v0, vt0;
SELECT DISTINCT vt0.c0 FROM v0 INNER JOIN vt0 ON CAST('968934657' AS REAL);
SELECT DISTINCT vt0.c0 FROM v0 INNER JOIN vt0 ON CAST('968934657' AS REAL) WHERE (NULL) UNION SELECT DISTINCT vt0.c0 FROM v0 INNER JOIN vt0 ON CAST('968934657' AS REAL) WHERE ((NOT (NULL))) UNION SELECT DISTINCT vt0.c0 FROM v0 INNER JOIN vt0 ON CAST('968934657' AS REAL) WHERE (((NULL) ISNULL));
SELECT DISTINCT vt0.c0 FROM v0 INNER JOIN vt0 ON CAST('968934657' AS REAL);
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE ((((((vt0.c0))<((v0.c0)))) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(v0.c0))) AND ((((vt0.c0, vt0.c0, '372479221')) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((v0.c0, '', v0.c0)))))) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE ((NOT ((((((vt0.c0))<((v0.c0)))) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(v0.c0))) AND ((((vt0.c0, vt0.c0, '372479221')) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((v0.c0, '', v0.c0)))))))) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE ((((((((vt0.c0))<((v0.c0)))) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(v0.c0))) AND ((((vt0.c0, vt0.c0, '372479221')) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((v0.c0, '', v0.c0)))))) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(vt0.c0) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(vt0.c0)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(vt0.c0) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(vt0.c0)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM v0, vt0;
SELECT ALL * FROM v0, vt0 WHERE (((((((v0.c0)AND(vt0.c0)))AND(v0.c0)))>=(NULL))) UNION ALL SELECT ALL * FROM v0, vt0 WHERE ((NOT (((((((v0.c0)AND(vt0.c0)))AND(v0.c0)))>=(NULL))))) UNION ALL SELECT * FROM v0, vt0 WHERE (((((((((v0.c0)AND(vt0.c0)))AND(v0.c0)))>=(NULL))) ISNULL));
SELECT * FROM v0, vt0;
SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, v0;
SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, v0 WHERE (((CASE vt0.c0  WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)/((NOT (vt0.c0))))) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, v0 WHERE ((NOT (((CASE vt0.c0  WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)/((NOT (vt0.c0))))))) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, v0 WHERE (((((CASE vt0.c0  WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)/((NOT (vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, v0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((+ (CAST(vt0.c0 AS REAL)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((+ (CAST(vt0.c0 AS REAL)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((+ (CAST(vt0.c0 AS REAL)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING (+ (MIN(vt0.c0))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING (NOT ((+ (MIN(vt0.c0))))) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING (((+ (MIN(vt0.c0)))) ISNULL);
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING (+ (MIN(vt0.c0))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING (NOT ((+ (MIN(vt0.c0))))) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING (((+ (MIN(vt0.c0)))) ISNULL);
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) IN ())) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) IN ())))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) IN ())) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE ((json_array_length(v0.c0) IN (((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT ((json_array_length(v0.c0) IN (((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((((json_array_length(v0.c0) IN (((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON vt0.c0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON vt0.c0 WHERE (((0Xffffffff93afcc02)&((~ (v0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON vt0.c0 WHERE ((NOT (((0xffffffff93afcc02)&((~ (v0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON vt0.c0 WHERE (((((0xffffffff93afcc02)&((~ (v0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON vt0.c0 GROUP BY vt0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING UNLIKELY(((MIN(vt0.c0))GLOB(TOTAL(SUM(GROUP_CONCAT(vt0.c0)))))) UNION ALL SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (UNLIKELY(((MIN(vt0.c0))GLOB(TOTAL(SUM(GROUP_CONCAT(vt0.c0)))))))) UNION ALL SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING ((UNLIKELY(((MIN(vt0.c0))GLOB(TOTAL(SUM(GROUP_CONCAT(vt0.c0))))))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (CAST((((vt0.c0))==((vt0.c0))) AS NUMERIC)) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CAST((((vt0.c0))=((vt0.c0))) AS NUMERIC)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST((((vt0.c0))=((vt0.c0))) AS NUMERIC)) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (CAST(UPPER(v0.c0) AS BLOB)) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (CAST(UPPER(v0.c0) AS BLOB)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((CAST(UPPER(v0.c0) AS BLOB)) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL v0.c0, vt0.c0 FROM v0 NATURAL JOIN vt0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0 NATURAL JOIN vt0 WHERE ((((v0.c0, v0.c0, vt0.c0))>=((v0.c0, vt0.c0, vt0.c0))) COLLATE NOCASE) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM v0 NATURAL JOIN vt0 WHERE ((NOT ((((v0.c0, v0.c0, vt0.c0))>=((v0.c0, vt0.c0, vt0.c0))) COLLATE NOCASE))) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM v0 NATURAL JOIN vt0 WHERE ((((((v0.c0, v0.c0, vt0.c0))>=((v0.c0, vt0.c0, vt0.c0))) COLLATE NOCASE) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0 NATURAL JOIN vt0 GROUP BY v0.c0, vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((NOT (((vt0.c0)<<(vt0.c0))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((NOT (((vt0.c0)<<(vt0.c0))))))) UNION ALL SELECT * FROM vt0 WHERE ((((NOT (((vt0.c0)<<(vt0.c0))))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE ((~ (((((v0.c0)OR(vt0.c0)))OR(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT ((~ (((((v0.c0)OR(vt0.c0)))OR(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((((~ (((((v0.c0)OR(vt0.c0)))OR(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT ALL v0.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON CASE WHEN ((vt0.c0)LIKE(v0.c0)) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON CASE WHEN ((vt0.c0)LIKE(v0.c0)) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END WHERE ((((v0.c0)=(vt0.c0)) IN ())) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON CASE WHEN ((vt0.c0)LIKE(v0.c0)) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END WHERE ((NOT ((((v0.c0)==(vt0.c0)) IN ())))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON CASE WHEN ((vt0.c0)LIKE(v0.c0)) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END WHERE ((((((v0.c0)=(vt0.c0)) IN ())) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON CASE WHEN ((vt0.c0)LIKE(v0.c0)) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END GROUP BY v0.c0, vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MIN(((TOTAL(vt0.c0)) NOT BETWEEN (MIN(COUNT(*))) AND (GROUP_CONCAT(TOTAL(MAX(MIN(MIN(vt0.c0)))))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MIN(((TOTAL(vt0.c0)) NOT BETWEEN (MIN(COUNT(*))) AND (GROUP_CONCAT(TOTAL(MAX(MIN(MIN(vt0.c0)))))))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN(((TOTAL(vt0.c0)) NOT BETWEEN (MIN(COUNT(*))) AND (GROUP_CONCAT(TOTAL(MAX(MIN(MIN(vt0.c0))))))))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((~ (((((((((vt0.c0)OR(0.18097015215577894)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((~ (((((((((vt0.c0)OR(0.18097015215577894)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))))))) UNION ALL SELECT * FROM vt0 NOT INDEXED WHERE ((((~ (((((((((vt0.c0)OR(0.18097015215577894)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ('H渾,B?k') UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ('H渾,B?k'))) UNION SELECT DISTINCT * FROM v0 WHERE ((('H渾,B?k') ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ('-793128650' COLLATE RTRIM) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ('-793128650' COLLATE RTRIM))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((('-793128650' COLLATE RTRIM) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING vt0.c0 UNION ALL SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING vt0.c0 UNION ALL SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT * FROM v0, vt0;
SELECT ALL * FROM v0, vt0 WHERE ((vt0.c0 IN ())) UNION ALL SELECT * FROM v0, vt0 WHERE ((NOT ((vt0.c0 IN ())))) UNION ALL SELECT ALL * FROM v0, vt0 WHERE ((((vt0.c0 IN ())) ISNULL));
SELECT * FROM v0, vt0;
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN v0 ON CAST((~ (vt0.c0)) AS REAL);
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN v0 ON CAST((~ (vt0.c0)) AS REAL) WHERE ((((((NOT (v0.c0)))OR((((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0))))))OR(((((((((vt0.c0)OR(v0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(v0.c0))))) UNION SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN v0 ON CAST((~ (vt0.c0)) AS REAL) WHERE ((NOT ((((((NOT (v0.c0)))OR((((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0))))))OR(((((((((vt0.c0)OR(v0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(v0.c0))))))) UNION SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN v0 ON CAST((~ (vt0.c0)) AS REAL) WHERE ((((((((NOT (v0.c0)))OR((((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0))))))OR(((((((((vt0.c0)OR(v0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(v0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN v0 ON CAST((~ (vt0.c0)) AS REAL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)GLOB((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, x'')) AND ((v0.c0, v0.c0, 0xffffffff93effbcb)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)GLOB((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, x'')) AND ((v0.c0, v0.c0, 0Xffffffff93effbcb)))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)GLOB((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, x'')) AND ((v0.c0, v0.c0, 0xffffffff93effbcb)))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0 NATURAL JOIN v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0 NATURAL JOIN v0 GROUP BY v0.c0 HAVING CASE WHEN CASE vt0.c0  WHEN COUNT(*) THEN COUNT(COUNT(*)) END THEN ((v0.c0) BETWEEN (v0.c0) AND (GROUP_CONCAT(SUM(v0.c0)))) WHEN ((vt0.c0) NOT NULL) THEN '' WHEN ((COUNT(*)) ISNULL) THEN (~ (MIN(vt0.c0))) WHEN HEX(GROUP_CONCAT(SUM(vt0.c0))) THEN ((MIN(vt0.c0))||(vt0.c0)) WHEN (('od') IS TRUE) THEN v0.c0 ELSE x'' END UNION ALL SELECT v0.c0 FROM vt0 NATURAL JOIN v0 GROUP BY v0.c0 HAVING (NOT (CASE WHEN CASE vt0.c0  WHEN COUNT(*) THEN COUNT(COUNT(*)) END THEN ((v0.c0) BETWEEN (v0.c0) AND (GROUP_CONCAT(SUM(v0.c0)))) WHEN ((vt0.c0) NOT NULL) THEN '' WHEN ((COUNT(*)) ISNULL) THEN (~ (MIN(vt0.c0))) WHEN HEX(GROUP_CONCAT(SUM(vt0.c0))) THEN ((MIN(vt0.c0))||(vt0.c0)) WHEN (('od') IS TRUE) THEN v0.c0 ELSE x'' END)) UNION ALL SELECT ALL v0.c0 FROM vt0 NATURAL JOIN v0 GROUP BY v0.c0 HAVING ((CASE WHEN CASE vt0.c0  WHEN COUNT(*) THEN COUNT(COUNT(*)) END THEN ((v0.c0) BETWEEN (v0.c0) AND (GROUP_CONCAT(SUM(v0.c0)))) WHEN ((vt0.c0) NOT NULL) THEN '' WHEN ((COUNT(*)) ISNULL) THEN (~ (MIN(vt0.c0))) WHEN HEX(GROUP_CONCAT(SUM(vt0.c0))) THEN ((MIN(vt0.c0))||(vt0.c0)) WHEN (('od') IS TRUE) THEN v0.c0 ELSE x'' END) ISNULL);
SELECT * FROM v0;
SELECT * FROM v0 WHERE ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) COLLATE RTRIM COLLATE RTRIM) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) COLLATE RTRIM COLLATE RTRIM))) UNION ALL SELECT * FROM v0 WHERE ((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) COLLATE RTRIM COLLATE RTRIM) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((- (v0.c0))) NOT BETWEEN (((v0.c0) IS FALSE)) AND (((v0.c0)GLOB(v0.c0))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((- (v0.c0))) NOT BETWEEN (((v0.c0) IS FALSE)) AND (((v0.c0)GLOB(v0.c0))))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((- (v0.c0))) NOT BETWEEN (((v0.c0) IS FALSE)) AND (((v0.c0)GLOB(v0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (v0.c0) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (v0.c0))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((v0.c0) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON (((v0.c0) BETWEEN (NULL) AND (v0.c0)) IN ()) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON (((v0.c0) BETWEEN (NULL) AND (v0.c0)) IN ()) GROUP BY v0.c0 HAVING TOTAL(SUM('-470736177')) UNION ALL SELECT ALL v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON (((v0.c0) BETWEEN (NULL) AND (v0.c0)) IN ()) GROUP BY v0.c0 HAVING (NOT (TOTAL(SUM('-470736177')))) UNION ALL SELECT v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON (((v0.c0) BETWEEN (NULL) AND (v0.c0)) IN ()) GROUP BY v0.c0 HAVING ((TOTAL(SUM('-470736177'))) ISNULL);
SELECT vt0.c0, v0.c0 FROM vt0, v0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 WHERE (CAST(((((vt0.c0)AND(vt0.c0)))OR(v0.c0)) AS NUMERIC)) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE ((NOT (CAST(((((vt0.c0)AND(vt0.c0)))OR(v0.c0)) AS NUMERIC)))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0 NOT INDEXED, v0 WHERE (((CAST(((((vt0.c0)AND(vt0.c0)))OR(v0.c0)) AS NUMERIC)) ISNULL));
SELECT vt0.c0, v0.c0 FROM vt0, v0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((((((v0.c0, v0.c0, 0.1637136864619686)) NOT BETWEEN ((v0.c0, v0.c0, '-1306639499')) AND ((v0.c0, NULL, 0.9245186396543094)))) NOT BETWEEN (((v0.c0)GLOB(v0.c0))) AND (COALESCE(DISTINCT v0.c0, v0.c0)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((((v0.c0, v0.c0, 0.1637136864619686)) NOT BETWEEN ((v0.c0, v0.c0, '-1306639499')) AND ((v0.c0, NULL, 0.9245186396543094)))) NOT BETWEEN (((v0.c0)GLOB(v0.c0))) AND (COALESCE(DISTINCT v0.c0, v0.c0)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((((((v0.c0, v0.c0, 0.1637136864619686)) NOT BETWEEN ((v0.c0, v0.c0, '-1306639499')) AND ((v0.c0, NULL, 0.9245186396543094)))) NOT BETWEEN (((v0.c0)GLOB(v0.c0))) AND (COALESCE(DISTINCT v0.c0, v0.c0)))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING ((GROUP_CONCAT(COUNT(GROUP_CONCAT(COUNT(*))))) NOT BETWEEN (AVG(COUNT(*))) AND (MAX('957816834'))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (((GROUP_CONCAT(COUNT(GROUP_CONCAT(COUNT(*))))) NOT BETWEEN (AVG(COUNT(*))) AND (MAX('957816834'))))) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING ((((GROUP_CONCAT(COUNT(GROUP_CONCAT(COUNT(*))))) NOT BETWEEN (AVG(COUNT(*))) AND (MAX('957816834')))) ISNULL);
SELECT vt0.c0, v0.c0 FROM vt0 INNER JOIN v0 ON ((((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL);
SELECT vt0.c0, v0.c0 FROM vt0 INNER JOIN v0 ON ((((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL) WHERE (UNLIKELY(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0 INNER JOIN v0 ON ((((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL) WHERE ((NOT (UNLIKELY(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0 INNER JOIN v0 ON ((((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL) WHERE (((UNLIKELY(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ISNULL));
SELECT vt0.c0, v0.c0 FROM vt0 INNER JOIN v0 ON ((((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL);
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((((v0.c0) BETWEEN (0.2485583130917648) AND (v0.c0))) NOT BETWEEN (((NULL) ISNULL)) AND ((- (v0.c0))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((((v0.c0) BETWEEN (0.2485583130917648) AND (v0.c0))) NOT BETWEEN (((NULL) ISNULL)) AND ((- (v0.c0))))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((v0.c0) BETWEEN (0.2485583130917648) AND (v0.c0))) NOT BETWEEN (((NULL) ISNULL)) AND ((- (v0.c0))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0) NOT NULL)) ISNULL)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) NOT NULL)) ISNULL)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c0) NOT NULL)) ISNULL)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT v0.c0 FROM v0 NOT INDEXED GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING MAX(((v0.c0)<<(v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MAX(((v0.c0)<<(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MAX(((v0.c0)<<(v0.c0)))) ISNULL);
SELECT v0.c0 FROM v0 NOT INDEXED GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING MAX(((v0.c0)<<(v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MAX(((v0.c0)<<(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MAX(((v0.c0)<<(v0.c0)))) ISNULL);
SELECT v0.c0 FROM v0 NOT INDEXED GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 LEFT OUTER JOIN vt0 ON ((vt0.c0 COLLATE RTRIM)>=(((v0.c0)<(v0.c0))));
SELECT v0.c0 FROM v0 LEFT OUTER JOIN vt0 ON ((vt0.c0 COLLATE RTRIM)>=(((v0.c0)<(v0.c0)))) WHERE (CASE v0.c0  WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END COLLATE NOCASE) UNION ALL SELECT v0.c0 FROM v0 LEFT OUTER JOIN vt0 ON ((vt0.c0 COLLATE RTRIM)>=(((v0.c0)<(v0.c0)))) WHERE ((NOT (CASE v0.c0  WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END COLLATE NOCASE))) UNION ALL SELECT v0.c0 FROM v0 LEFT OUTER JOIN vt0 ON ((vt0.c0 COLLATE RTRIM)>=(((v0.c0)<(v0.c0)))) WHERE (((CASE v0.c0  WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END COLLATE NOCASE) ISNULL));
SELECT ALL v0.c0 FROM v0 LEFT OUTER JOIN vt0 ON ((vt0.c0 COLLATE RTRIM)>=(((v0.c0)<(v0.c0))));
SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0;
SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0 WHERE (((((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(CASE WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END))) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0 WHERE ((NOT (((((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(CASE WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END))))) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0 WHERE (((((((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(CASE WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ISNULL));
SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((NULL)=(v0.c0))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((NULL)==(v0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((NULL)==(v0.c0))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING CAST((vt0.c0 IN (v0.c0)) AS TEXT) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (CAST((vt0.c0 IN (v0.c0)) AS TEXT))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING ((CAST((vt0.c0 IN (v0.c0)) AS TEXT)) ISNULL);
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING CAST((vt0.c0 IN (v0.c0)) AS TEXT) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (CAST((vt0.c0 IN (v0.c0)) AS TEXT))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING ((CAST((vt0.c0 IN (v0.c0)) AS TEXT)) ISNULL);
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT * FROM v0, vt0;
SELECT ALL * FROM v0, vt0 WHERE (((v0.c0) BETWEEN (x'') AND (((((0.7636886681959989)OR(vt0.c0)))AND(v0.c0))))) UNION ALL SELECT ALL * FROM v0, vt0 WHERE ((NOT (((v0.c0) BETWEEN (x'') AND (((((0.7636886681959989)OR(vt0.c0)))AND(v0.c0))))))) UNION ALL SELECT * FROM v0, vt0 WHERE (((((v0.c0) BETWEEN (x'') AND (((((0.7636886681959989)OR(vt0.c0)))AND(v0.c0))))) ISNULL));
SELECT * FROM v0, vt0;
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE (CAST(CAST(v0.c0 AS TEXT) AS BLOB)) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT (CAST(CAST(v0.c0 AS TEXT) AS BLOB)))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE (((CAST(CAST(v0.c0 AS TEXT) AS BLOB)) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE ((vt0.c0 IN (NULL))) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM vt0, v0 WHERE ((NOT ((vt0.c0 IN (NULL))))) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE ((((vt0.c0 IN (NULL))) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM vt0, v0;
SELECT ALL * FROM vt0, v0 WHERE ((+ (((vt0.c0)IS(v0.c0))))) UNION ALL SELECT * FROM vt0, v0 WHERE ((NOT ((+ (((vt0.c0)IS(v0.c0))))))) UNION ALL SELECT ALL * FROM vt0, v0 WHERE ((((+ (((vt0.c0)IS(v0.c0))))) ISNULL));
SELECT * FROM vt0, v0;
SELECT DISTINCT v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON CASE WHEN (v0.c0 IN (v0.c0)) THEN ((v0.c0)+('')) WHEN vt0.c0 THEN v0.c0 WHEN CAST(vt0.c0 AS BLOB) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) ELSE CAST(v0.c0 AS BLOB) END;
SELECT DISTINCT v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON CASE WHEN (v0.c0 IN (v0.c0)) THEN ((v0.c0)+('')) WHEN vt0.c0 THEN v0.c0 WHEN CAST(vt0.c0 AS BLOB) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) ELSE CAST(v0.c0 AS BLOB) END WHERE (((UPPER(vt0.c0)) BETWEEN (((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND ((NOT (vt0.c0))))) UNION SELECT DISTINCT v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON CASE WHEN (v0.c0 IN (v0.c0)) THEN ((v0.c0)+('')) WHEN vt0.c0 THEN v0.c0 WHEN CAST(vt0.c0 AS BLOB) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) ELSE CAST(v0.c0 AS BLOB) END WHERE ((NOT (((UPPER(vt0.c0)) BETWEEN (((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND ((NOT (vt0.c0))))))) UNION SELECT DISTINCT v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON CASE WHEN (v0.c0 IN (v0.c0)) THEN ((v0.c0)+('')) WHEN vt0.c0 THEN v0.c0 WHEN CAST(vt0.c0 AS BLOB) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) ELSE CAST(v0.c0 AS BLOB) END WHERE (((((UPPER(vt0.c0)) BETWEEN (((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND ((NOT (vt0.c0))))) ISNULL));
SELECT DISTINCT v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON CASE WHEN (v0.c0 IN (v0.c0)) THEN ((v0.c0)+('')) WHEN vt0.c0 THEN v0.c0 WHEN CAST(vt0.c0 AS BLOB) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) ELSE CAST(v0.c0 AS BLOB) END;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ('-712746216') GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ('-712746216'))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((('-712746216') ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((AVG(v0.c0))GLOB(AVG(v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((AVG(v0.c0))GLOB(AVG(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((AVG(v0.c0))GLOB(AVG(v0.c0)))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((AVG(v0.c0))GLOB(AVG(v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((AVG(v0.c0))GLOB(AVG(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((AVG(v0.c0))GLOB(AVG(v0.c0)))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE ((~ (((v0.c0)||(v0.c0))))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT ((~ (((v0.c0)||(v0.c0))))))) UNION ALL SELECT ALL * FROM v0 WHERE ((((~ (((v0.c0)||(v0.c0))))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) IN ((('337348506')AND(v0.c0)), (v0.c0 IN ())))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) IN ((('337348506')AND(v0.c0)), (v0.c0 IN ())))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) IN ((('337348506')AND(v0.c0)), (v0.c0 IN ())))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (CASE WHEN (v0.c0 IN (v0.c0)) THEN 'c2[d,x	o' END) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CASE WHEN (v0.c0 IN (v0.c0)) THEN 'c2[d,x	o' END))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((CASE WHEN (v0.c0 IN (v0.c0)) THEN 'c2[d,x	o' END) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING vt0.c0 UNION ALL SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT vt0.c0, v0.c0 FROM v0, vt0 NOT INDEXED GROUP BY vt0.c0, v0.c0 HAVING ((vt0.c0) ISNULL);
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING vt0.c0 UNION ALL SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT vt0.c0, v0.c0 FROM v0, vt0 NOT INDEXED GROUP BY vt0.c0, v0.c0 HAVING ((vt0.c0) ISNULL);
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT * FROM vt0 LEFT OUTER JOIN v0 ON CASE v0.c0  WHEN ((x'')||(v0.c0)) THEN CASE v0.c0  WHEN v0.c0 THEN vt0.c0 END ELSE ((vt0.c0)OR(v0.c0)) END;
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON CASE v0.c0  WHEN ((x'')||(v0.c0)) THEN CASE v0.c0  WHEN v0.c0 THEN vt0.c0 END ELSE ((vt0.c0)OR(v0.c0)) END WHERE ((((vt0.c0 IN ())) IS FALSE)) UNION ALL SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON CASE v0.c0  WHEN ((x'')||(v0.c0)) THEN CASE v0.c0  WHEN v0.c0 THEN vt0.c0 END ELSE ((vt0.c0)OR(v0.c0)) END WHERE ((NOT ((((vt0.c0 IN ())) IS FALSE)))) UNION ALL SELECT * FROM vt0 LEFT OUTER JOIN v0 ON CASE v0.c0  WHEN ((x'')||(v0.c0)) THEN CASE v0.c0  WHEN v0.c0 THEN vt0.c0 END ELSE ((vt0.c0)OR(v0.c0)) END WHERE ((((((vt0.c0 IN ())) IS FALSE)) ISNULL));
SELECT * FROM vt0 LEFT OUTER JOIN v0 ON CASE v0.c0  WHEN ((x'')||(v0.c0)) THEN CASE v0.c0  WHEN v0.c0 THEN vt0.c0 END ELSE ((vt0.c0)OR(v0.c0)) END;
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE (CAST(v0.c0 COLLATE BINARY AS NUMERIC)) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT (CAST(v0.c0 COLLATE BINARY AS NUMERIC)))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE (((CAST(v0.c0 COLLATE BINARY AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 WHERE (((((vt0.c0) NOT NULL))+((('rtf') NOT BETWEEN (vt0.c0) AND (vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, v0 WHERE ((NOT (((((vt0.c0) NOT NULL))+((('rtf') NOT BETWEEN (vt0.c0) AND (vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, v0 WHERE (((((((vt0.c0) NOT NULL))+((('rtf') NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON ((vt0.c0) IS FALSE) GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON ((vt0.c0) IS FALSE) GROUP BY vt0.c0, v0.c0 HAVING MAX(CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 END) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON ((vt0.c0) IS FALSE) GROUP BY vt0.c0, v0.c0 HAVING (NOT (MAX(CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 END))) UNION ALL SELECT vt0.c0, v0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON ((vt0.c0) IS FALSE) GROUP BY vt0.c0, v0.c0 HAVING ((MAX(CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 END)) ISNULL);
SELECT ALL vt0.c0, v0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON ((vt0.c0) IS FALSE) GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON ((vt0.c0) IS FALSE) GROUP BY vt0.c0, v0.c0 HAVING MAX(CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 END) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON ((vt0.c0) IS FALSE) GROUP BY vt0.c0, v0.c0 HAVING (NOT (MAX(CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 END))) UNION ALL SELECT vt0.c0, v0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON ((vt0.c0) IS FALSE) GROUP BY vt0.c0, v0.c0 HAVING ((MAX(CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 END)) ISNULL);
SELECT ALL vt0.c0, v0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON ((vt0.c0) IS FALSE) GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((0.5040599467816427)GLOB(vt0.c0))) BETWEEN ((+ (1e500))) AND (((vt0.c0) IS FALSE)))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((0.5040599467816427)GLOB(vt0.c0))) BETWEEN ((+ (1e500))) AND (((vt0.c0) IS FALSE)))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((((0.5040599467816427)GLOB(vt0.c0))) BETWEEN ((+ (1e500))) AND (((vt0.c0) IS FALSE)))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT v0.c0 FROM vt0, v0;
SELECT DISTINCT v0.c0 FROM vt0, v0 WHERE (-1937131782) UNION SELECT DISTINCT v0.c0 FROM vt0, v0 WHERE ((NOT (-1937131782))) UNION SELECT DISTINCT v0.c0 FROM vt0, v0 WHERE (((-1937131782) ISNULL));
SELECT DISTINCT v0.c0 FROM vt0, v0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 WHERE (CAST(((v0.c0)AND(vt0.c0)) AS NUMERIC)) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM v0, vt0 WHERE ((NOT (CAST(((v0.c0)AND(vt0.c0)) AS NUMERIC)))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 WHERE (((CAST(((v0.c0)AND(vt0.c0)) AS NUMERIC)) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING NULL UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (NULL)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((NULL) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING NULL UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (NULL)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((NULL) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (vt0.c0) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE ((CAST(v0.c0 AS NUMERIC) IN ())) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT ((CAST(v0.c0 AS NUMERIC) IN ())))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((((CAST(v0.c0 AS NUMERIC) IN ())) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE (CASE WHEN CAST(v0.c0 AS NUMERIC) THEN (vt0.c0 IN ()) END) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE ((NOT (CASE WHEN CAST(v0.c0 AS NUMERIC) THEN (vt0.c0 IN ()) END))) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM vt0, v0 WHERE (((CASE WHEN CAST(v0.c0 AS NUMERIC) THEN (vt0.c0 IN ()) END) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON '1056483367' GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON '1056483367' GROUP BY vt0.c0 HAVING MAX(COUNT(v0.c0)) UNION ALL SELECT vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON '1056483367' GROUP BY vt0.c0 HAVING (NOT (MAX(COUNT(v0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON '1056483367' GROUP BY vt0.c0 HAVING ((MAX(COUNT(v0.c0))) ISNULL);
SELECT ALL * FROM vt0, v0;
SELECT * FROM vt0, v0 WHERE ((~ (((v0.c0) NOT NULL)))) UNION ALL SELECT * FROM vt0, v0 WHERE ((NOT ((~ (((v0.c0) NOT NULL)))))) UNION ALL SELECT ALL * FROM vt0, v0 WHERE ((((~ (((v0.c0) NOT NULL)))) ISNULL));
SELECT ALL * FROM vt0, v0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0) BETWEEN ((+ (vt0.c0))) AND ((x'' IN ())))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((vt0.c0) BETWEEN ((+ (vt0.c0))) AND ((x'' IN ())))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0) BETWEEN ((+ (vt0.c0))) AND ((x'' IN ())))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0) NOT NULL)) BETWEEN (((((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(0.8175645825346792)))AND(v0.c0)))OR(0xfffffffff96dd99e)))AND(v0.c0))) AND (HEX(v0.c0)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((v0.c0) NOT NULL)) BETWEEN (((((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(0.8175645825346792)))AND(v0.c0)))OR(0xfffffffff96dd99e)))AND(v0.c0))) AND (HEX(v0.c0)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((((v0.c0) NOT NULL)) BETWEEN (((((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(0.8175645825346792)))AND(v0.c0)))OR(0Xfffffffff96dd99e)))AND(v0.c0))) AND (HEX(v0.c0)))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((CAST(v0.c0 AS REAL))<<(TOTAL(v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((CAST(v0.c0 AS REAL))<<(TOTAL(v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((CAST(v0.c0 AS REAL))<<(TOTAL(v0.c0)))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((CAST(v0.c0 AS REAL))<<(TOTAL(v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((CAST(v0.c0 AS REAL))<<(TOTAL(v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((CAST(v0.c0 AS REAL))<<(TOTAL(v0.c0)))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE ((~ (CAST(v0.c0 AS TEXT)))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT ((~ (CAST(v0.c0 AS TEXT)))))) UNION ALL SELECT ALL * FROM v0 NOT INDEXED WHERE ((((~ (CAST(v0.c0 AS TEXT)))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0) NOTNULL)) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) AND (0.49707766182162005))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.c0) NOTNULL)) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) AND (0.49707766182162005))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0) NOTNULL)) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) AND (0.49707766182162005))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CASE WHEN ((vt0.c0) NOT NULL) THEN vt0.c0 END) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN ((vt0.c0) NOT NULL) THEN vt0.c0 END))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((CASE WHEN ((vt0.c0) NOT NULL) THEN vt0.c0 END) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
