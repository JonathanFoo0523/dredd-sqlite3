-- Time: 2024/06/10 02:37:36
-- Database: database7
-- Database version: 3.40.0
-- seed value: 2330033307
PRAGMA cache_size = 50000; -- 13ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2); -- 1ms;
PRAGMA automatic_index = false; -- 0ms;
UPDATE rt0 SET (c0, c2)=(0.7975744075631497, 0x501f68b7); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE; -- 2ms;
INSERT OR FAIL INTO rt0(c1) VALUES (x''), (x''), (''); -- 0ms;
UPDATE OR IGNORE rt0 SET (c1)=(0.35014555167090455); -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=(0X63d5c775); -- 0ms;
BEGIN  TRANSACTION; -- 1ms;
UPDATE OR IGNORE rt0 SET c0=NULL, c1=x'', c0='' WHERE CAST(((rt0.c1)<=(rt0.c1)) AS BLOB); -- 4ms;
INSERT OR FAIL INTO rt0(c1, c2, c0) VALUES (0.9491141067834556, NULL, NULL), ('', -701313960, x''), (-7.0131396E8, 0.32370166806591605, '0.7975744075631497'); -- 0ms;
INSERT OR FAIL INTO rt0(c0, c2) VALUES ('*', x''), (0x501f68b7, ''), ('OY', x''); -- 1ms;
INSERT OR ROLLBACK INTO rt0(c2) VALUES (-1313656123), (x''), ('1684285275'), (x''), (1.344235703E9); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c0, c1, c2) VALUES (x'', NULL, x''); -- 0ms;
UPDATE rt0 SET c2='1344235703', c1=x'' WHERE (rt0.c0 IN (rt0.c2)) COLLATE BINARY; -- 0ms;
ROLLBACK TRANSACTION; -- 2ms;
UPDATE OR IGNORE rt0 SET (c0, c2)=(1.674954613E9, NULL) WHERE CASE WHEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)) THEN CAST(rt0.c1 AS NUMERIC) END; -- 0ms;
PRAGMA foreign_keys = true; -- 0ms;
PRAGMA main.automatic_index; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
PRAGMA secure_delete; -- 0ms;
UPDATE OR IGNORE rt0 SET c2=''; -- 0ms;
PRAGMA main.mmap_size = 9011861510044748665; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
INSERT OR IGNORE INTO rt0(c1, c0) VALUES ('1674954613', 0x168d8453); -- 1ms;
UPDATE OR REPLACE rt0 SET (c0)=(''); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c0, c1) VALUES ('*_DI1|o', 0Xffffffffd632cc58); -- 0ms;
INSERT OR IGNORE INTO rt0(c1) VALUES (x''); -- 0ms;
REINDEX; -- 0ms;
REINDEX RTRIM; -- 1ms;
UPDATE OR IGNORE rt0 SET c2='1317474129', c1=x''; -- 3ms;
PRAGMA application_id; -- 1ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c1) VALUES ('7WmAC챘dq'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c0) VALUES (x'', '漩FCB'); -- 0ms;
INSERT OR IGNORE INTO rt0(c0) VALUES (NULL); -- 0ms;
PRAGMA stats; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET (c1, c0)=(NULL, '7WmAC챘dq'); -- 0ms;
BEGIN  TRANSACTION; -- 1ms;
PRAGMA temp.secure_delete; -- 0ms;
UPDATE OR REPLACE rt0 SET (c0, c0, c2)=(0.8264073588141408, x'6102dd17', NULL); -- 0ms;
INSERT OR ROLLBACK INTO rt0 VALUES ('xLaKA-', x'', x''); -- 0ms;
INSERT OR ROLLBACK INTO rt0 VALUES ('0.35014555167090455', x'7dc9e196', x'3110'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=44064913 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES ('', x'', -1800684014); -- 0ms;
UPDATE rt0 SET c0='1684285275' WHERE IFNULL(((((rt0.c1)AND('1919991224')))AND(rt0.c2)), CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END); -- 0ms;
INSERT OR REPLACE INTO rt0(c1) VALUES (x''), ('378373203'), (x''); -- 1ms;
INSERT OR FAIL INTO rt0(c0, c2, c1) VALUES (0xffffffff9a2067aa, 0.8264073588141408, '-1679704387'), (NULL, '1344235703', NULL), ('-1800684014', 2050798549, 0.32370166806591605); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c2, c1, c0) VALUES (0x608c8c95, 'C镢Z', x'f0cd'); -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (0.35014555167090455, '-512351504', x''), ('*FDI1|o', '-1679704387', NULL), (0.8417083386662124, 'R08^/됈', 0.354426873054118); -- 0ms;
ANALYZE; -- 1ms;
ANALYZE; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA short_column_names = true; -- 0ms;
UPDATE rt0 SET (c1, c0)=(x'', 0x4e870f51); -- 0ms;
UPDATE rt0 SET (c1)=(x'') WHERE ((((((rt0.c2)AND(rt0.c2)))OR(x'')))OR(((rt0.c0)<=(rt0.c2)))); -- 4ms;
PRAGMA temp.recursive_triggers = false; -- 1ms;
PRAGMA main.journal_size_limit = 0; -- 0ms;
REINDEX NOCASE; -- 0ms;
ANALYZE; -- 0ms;
PRAGMA integrity_check; -- 0ms;
VACUUM temp; -- 0ms;
INSERT OR IGNORE INTO rt0(c0) VALUES (x''), (0X7270bdb8), (NULL); -- 0ms;
ANALYZE; -- 1ms;
INSERT OR IGNORE INTO rt0(c2, c1) VALUES (NULL, x'485b'); -- 0ms;
UPDATE OR IGNORE rt0 SET c2=0.4818485358361966, c0=1633816699, c2=NULL; -- 0ms;
UPDATE OR REPLACE rt0 SET (c1, c0)=(x'', x'8fb7') WHERE rt0.c1; -- 1ms;
ROLLBACK TRANSACTION; -- 1ms;
PRAGMA defer_foreign_keys; -- 0ms;
PRAGMA main.secure_delete; -- 0ms;
ANALYZE; -- 0ms;
PRAGMA soft_heap_limit = 6128756020819739346; -- 0ms;
PRAGMA temp.journal_size_limit = 0; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED, c1); -- 1ms;
PRAGMA journal_size_limit; -- 0ms;
PRAGMA wal_checkpoint(TRUNCATE); -- 0ms;
UPDATE vt0 SET (c1)=(0.9238441011653826) WHERE LOWER(vt0.c0 COLLATE BINARY); -- 0ms;
REINDEX  rt0; -- 0ms;
ANALYZE; -- 8ms;
UPDATE vt0 SET c0=NULL, c0=0x0, c1='1633816699' WHERE ((((TRIM(vt0.c1, vt0.c1))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL ELSE vt0.c0 END)))AND(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)); -- 0ms;
CREATE TABLE t0 (c0 BLOB UNIQUE ON CONFLICT FAIL NOT NULL ); -- 4ms;
PRAGMA cache_size; -- 0ms;
ALTER TABLE t0 ADD COLUMN c29 INT; -- 1ms;
ANALYZE; -- 1ms;
INSERT OR ABORT INTO vt0(c0, c1) VALUES ('354954414', ((TRIM(0.7679934328478628)) IS TRUE)), ('-701313960', 0.023671033970926514), (x'f5e1', 'M'); -- 3ms;
CREATE TEMP VIEW  IF NOT EXISTS v0(c0, c1, c2) AS SELECT DISTINCT COUNT(CASE WHEN '' THEN t0.c29 END) OVER (), SUM((((rt0.c2))<>((rt0.c0)))), CASE HEX(DISTINCT t0.c0)  WHEN rt0.c0 THEN CASE t0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE rt0.c0 END WHEN ((((((((vt0.c0)OR(vt0.c1)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)) THEN (NOT (vt0.c0)) WHEN (rt0.c2 IN ()) THEN (+ (t0.c0)) ELSE TOTAL(x'cddb') END FROM rt0; -- 0ms;
