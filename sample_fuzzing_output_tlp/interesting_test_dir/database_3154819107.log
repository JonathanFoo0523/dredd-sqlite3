-- Time: 2024/06/08 22:12:24
-- Database: database7
-- Database version: 3.40.0
-- seed value: 3154819107
PRAGMA cache_size = 50000; -- 5ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-16'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED, c1, prefix = 85, tokenize = "unicode61 separators '稚d'"); -- 1ms;
CREATE VIRTUAL TABLE rt1 USING rtree_i32(c0, c1, c2, c3, c4, c5, c6); -- 1ms;
PRAGMA temp.shrink_memory; -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
PRAGMA temp.mmap_size; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO rt1(c6, c1, c0, c2, c3) VALUES (x'', x'', -1980974337, '', '-1980974337'); -- 1ms;
PRAGMA cache_spill; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1980974337);\n; -- 1ms;
CREATE VIRTUAL TABLE vt64 USING fts4(c0, compress=likely, uncompress=likely, languageid="lid"); -- 0ms;
PRAGMA main.locking_mode = EXCLUSIVE; -- 0ms;
BEGIN  TRANSACTION; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA temp.auto_vacuum = NONE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('稚d') NOT NULL)) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt64_segdir_1', '2045383048 sz=1156200343 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt64', ' sz=2045383048 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((0.6052831349128988)AND('l6')))AND('956442592')))OR(COALESCE(0.8075948238751569, x''))))OR((((NULL)) NOT BETWEEN ((x'')) AND ((0.48687634388474843))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('I?')>(362915826)))AND(((((((((x'')OR(0.48687634388474843)))AND(NULL)))OR(274288375)))OR(NULL)))))OR(((NULL) NOT NULL))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt64_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt64', '0 949140396 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt64', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt64_segdir_1', ' sz=1780067169 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.48687634388474843) IS FALSE) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt64_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('fZq0M' COLLATE NOCASE)<<(((NULL)-(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.48687634388474843)!=(x'')) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (x'')); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'rt1', ' sz=949140396'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-554233691 533167366 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt64_segdir_1', '4 sz=86005220 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((((0.8455402705367009) BETWEEN (0.8455402705367009) AND (x'')))AND(((x'2608')==(x'')))))AND((('') NOT NULL))))AND((~ (x'')))))AND(((((2.20297754E8)AND(NULL)))OR(NULL)))))OR(((((((((((((x'74af')AND(NULL)))AND(2.74288375E8)))AND('c%j\r^')))AND(NULL)))AND(NULL)))OR('596373917')))))OR((x'd9b5' IN (0.8459519639207603)))); -- 1ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL) NOTNULL))OR(0.4703379706006453)))OR(((0.34809349278738655)<(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt64_segdir_1', ' sz=-530571519 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (''))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)%(CAST(0.8075948238751569 AS INTEGER))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', '2 sz=213916959 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('()')>=(x''))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 2ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)>=(x'3c2d'))) BETWEEN (CAST('t&价e' AS INTEGER)) AND (0.2447226980048064)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', '0 sz=2096537879 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('2027202069') NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1652449091 0 sz=1703244397 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.2923252368487733) BETWEEN ('ea/\n3]ꇶ') AND (595331705)))OR(CAST(x'' AS TEXT))))AND((~ (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt64_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', ' sz=1383654182 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt64_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE WHEN '' THEN NULL WHEN NULL THEN NULL WHEN NULL THEN 0.8759500150925931 END IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.5398228708329642))<((0X1fc77d06)))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'vt64', ' sz=1652449091'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt64_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt64_segdir_1', ' sz=1800726734 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LIKELIHOOD(0Xffffffff8214e69a, 0.5395357807683551))*(CASE WHEN '727443424' THEN NULL ELSE '0 dlK੹' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'vt0', '0 -94377269 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '0 86005220 sz=1824185485 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt64', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.8759500150925931 IN ()))<((((NULL, '1645244807', 0.3398562897919235))>((0.2866650250380002, 'ᆈF氰4K4BR', ''))))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt64_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt64_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=246373326 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt64_segdir_1', ' sz=595331705 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)IS((((x'28c2'))>=((x''))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.47962141019882687)AND(x'')))OR(x'')) IN (NULLIF('X  ?GqlL6', '1299208443'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(DISTINCT 'li', '-291296266') COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((((0.8459519639207603)AND(-1066563248)))AND(0X1cc5042f))  WHEN (+ (x'')) THEN NULL COLLATE NOCASE WHEN CAST(NULL AS INTEGER) THEN (~ (0.8908598931866069)) WHEN CASE WHEN '' THEN '25286733' WHEN 0.3805766282616452 THEN NULL WHEN 0x506862df THEN 9.56442592E8 END THEN LIKELY('') ELSE CAST(x'7e57' AS INTEGER) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt64', ' unordered'); -- 2ms;
DELETE FROM sqlite_stat1 WHERE (~ ((((NULL)) NOT BETWEEN (('3[吾.BB9')) AND (('T{%3c	 u'))))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt64', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(DISTINCT CASE WHEN 0.4848445769728338 THEN 0.029205258439342963 END); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'rt1', '868902355 sz=533167366 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1939863374 sz=-322475926 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt64_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt64', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((x'')OR(NULL)))OR(x'8fe1')) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')&('-530571519'))) NOT BETWEEN (((((((((((((x'')AND(NULL)))OR(NULL)))AND(x'')))AND(0.7760220204755447)))OR('ἁB')))AND('-1436689520'))) AND (CASE NULL  WHEN NULL THEN 0.6052831349128988 END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)IS(0Xffffffff9e0123e3)) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', ' sz=375644662 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((2084638366)!=('25286733'))) NOT BETWEEN (NULL COLLATE BINARY) AND (((((0Xffffffffdcb0c025)OR(NULL)))AND(x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt64_segdir_1', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((((631703153)OR(NULL)))OR(x'')) THEN ((NULL)<<(x'')) ELSE ((((x'')AND('830573844')))OR(NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((((x'9b33')) BETWEEN ((NULL)) AND ((x'8184'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.2447226980048064 AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt64', '-981822957 0 sz=-798952361 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '-1967499582 0 sz=1096464059'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', '0 sz=375644662 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', ' sz=-20439278 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '1376633104 0 sz=-2075203550'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt64_segdir_1', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt64_segdir_1', ' sz=-1428892406 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (CAST(x'' AS TEXT) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt64_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('787722419' COLLATE NOCASE) NOT BETWEEN ((((('紆*o*bv貹')AND(941655517)))OR(x''))) AND (CAST(0Xffffffffbca1a9ed AS NUMERIC))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt64', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt64_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'vt0', '-338614341 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS TEXT)) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt64_segdir_1', ' sz=362915826'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.9471918495789173))<=((0.378894049181948)))) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((1881617056, x'1318', 0.815640778741503)) NOT BETWEEN ((x'816c', x'', '375644662')) AND ((0.4711772807958118, x'd6226b96', 0.8908598931866069))))OR(('1939863374' IN ()))))AND(CAST(0xfffffffffbcd475a AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=419513352 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('')GLOB('1299208443')) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1281167380 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((0X67d6247a)>(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-875355210'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(UNLIKELY(x'')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt64_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', ' sz=533167366 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt64_segdir_1', '947557304 sz=1652449091'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.9170468568471826)AND(NULL)))OR(-8.7535521E8)) IN ((('1742087290')>=('1176352476')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=631703153 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt64_segdir_1', ' sz=-1015313223 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0x74ebfd80) NOT BETWEEN (0.8676373196655917) AND (x'69fe'))) NOT BETWEEN (NULL) AND (NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'vt64', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', '2 0 sz=1703244397 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=25286733 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt64_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('e彃') NOTNULL))OR(((0Xffffffffc57a9213) BETWEEN (0.5398228708329642) AND (x'')))))OR(((((0.8075948238751569)AND('-1029742109')))AND(-1.428892406E9)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE SUBSTR(PRINTF(0X43846150), x''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'rt1', ' sz=274288375'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('1754992779')<=(0Xffffffffed444153)) THEN ((('1824185485'))!=((x''))) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE NOCASE)|(((NULL) ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt64', '2 2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt64', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt64_segdir_1', ' sz=60300201 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((2.20297754E8)) BETWEEN ((CAST(NULL AS TEXT))) AND (((- (NULL))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((x'4023')) BETWEEN ((NULL)) AND (('1132749136'))) THEN NULL COLLATE BINARY WHEN ((x'') BETWEEN (NULL) AND ('-814069536')) THEN (((((((('631703153')OR(-70432934)))OR('(&}Sc0B')))OR(NULL)))AND('0.8676373196655917')) WHEN CASE '-1980974337'  WHEN '!n' THEN NULL END THEN ((('l6', x'', ''))<((0.9874986975541499, 0.5289418840510723, 0.8908598931866069))) WHEN ((0.6349641682980978) BETWEEN (x'6e86') AND (x'')) THEN ((NULL) BETWEEN (x'') AND (-2.112559462E9)) WHEN (NULL IN ('', NULL)) THEN ((((((((((((0Xffffffffa54225e2)AND(-1896107721)))OR(x'f269')))OR('-1967499582')))OR(NULL)))AND(x'')))OR(NULL)) END; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1850236823 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', ' sz=-1161888630 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((('e彃') BETWEEN ('d') AND (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (NULL))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'vt64', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.6233070398443922))>=((0X2380709e))) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((x'') BETWEEN (x'25d47460') AND (939732202))  WHEN ((-1.869424613E9) BETWEEN (x'831d1c0c') AND (x'674ab389')) THEN ((((((((((((x'')OR('-221732362')))OR(x'13db')))OR(0.48890045748483457)))OR(NULL)))OR(NULL)))AND(x'973c707b')) WHEN ABS(NULL) THEN -5.92396251E8 WHEN IFNULL(DISTINCT 0.2835935569883933, '') THEN CASE WHEN '1824185485' THEN NULL END ELSE (((792056279))>((x''))) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((',')+(NULL)))-(-987349391)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((',5')OR(0xffffffffcb1ff405)))+(0.2866650250380002)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt64_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((NOT (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt64_segdir_1', ' sz=830573844'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1785095686 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'rt1', '0 -1710515764 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt64_segdir_1', '1421651570 -152862071'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(((NULL) IS FALSE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('>ᴟ', NULL, x'dd7c')) BETWEEN ((x'e781', 0.7794440403933016, 0.5172349670385695)) AND (('wn', '', 0.4703379706006453))))OR(LIKELY('0.6349641682980978'))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt64_segdir_1', ' sz=650547517 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.9931190726534364)<>(x'afda')) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt64', ' sz=1299208443'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')<=('0.4848445769728338')))LIKE(((NULL) BETWEEN (NULL) AND (NULL)))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((x''))<=(('-1710515764')))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0x20d89e92) NOT NULL) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('fl') IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(TRIM(-1306286852) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 1646481306 sz=-84404509 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ('1132749136' COLLATE NOCASE)); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt64_segdir_1', ' sz=504653540 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)&(''))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt64_segdir_1', ' sz=-1428892406 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt64_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'vt0', ' sz=-1023097654'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', ' sz=1858534221 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt64_segdir_1', '-1918666738 sz=-677034383 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt64', ' sz=-1062198867 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'vt64', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY(DISTINCT 0.9356333790756007) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-1029742109 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt64_segdir_1', ' sz=1608238425 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt64', ' sz=-577856135'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(-1785095686 COLLATE RTRIM AS BLOB); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt64_segdir_1', '1275319638 sz=1288401813 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'vt0', ' sz=1431489372'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt64', ' sz=-1715579809 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('')>>(0X7fffffffffffffff)) AS TEXT); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('n&7') NOTNULL) THEN ((NULL) IS TRUE) ELSE 'li' END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', '2 2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', '4 sz=1660970648 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((x'c658') NOTNULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((+ (x'')) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', ' sz=533167366 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt64_segdir_1', '4 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'vt0', ' sz=727443424'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') IS TRUE)) BETWEEN (CASE x''  WHEN '' THEN NULL END) AND ('uX')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'vt64', ' sz=-1055793650 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '!n'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt64_segdir_1', ' sz=998072283 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'rt1', '-1329302001 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'NT|9ឨF*'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1850236823'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', ' sz=-84404509'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('b/')/(NULL))  WHEN TRIM(DISTINCT '1194660022') THEN (0.8702235703557544 IN ()) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((SQLITE_COMPILEOPTION_GET(''))&(((((NULL)AND('60300201')))AND(x'91e7')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)OR(NULL))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt64_segdir_1', ' sz=-1417864844 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL, '1780067169', -1901261342)) BETWEEN (((((((((('2027202069')AND(NULL)))AND(x'')))OR(-1.644092445E9)))AND(x'')), ((NULL) NOT BETWEEN ('68364821') AND (NULL)), ((NULL)-(0x397a696c)))) AND ((0.7764850165201062 COLLATE RTRIM, (0.445938929676744 IN ()), ((5.33167366E8)<>('ᆈf氰4k4br'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (CASE NULL  WHEN '-598381520' THEN 6.0300201E7 ELSE x'a33b' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', '25286733'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=152937151 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt64', '-317445246 sz=-1066563248 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', ' sz=362915826 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt64', ' sz=-1668871192 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt64', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt64_segdir_1', ' sz=25286733 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'', NULL, '!k')) NOT BETWEEN (((((('')AND(0x3a23438b)))AND('907427390')), NULLIF(NULL, 0.5299522307499528), ((x'') BETWEEN ('K|ꓼ') AND (NULL)))) AND ((((('89t'))<((',s*>'))), RTRIM('1881617056'), CAST(x'ceb6' AS BLOB)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('1331910023', x'e816', '')) BETWEEN ((((0Xffffffffdabb2547)GLOB(NULL)), (- (x'')), CASE WHEN x'14aa' THEN '-2075203550' WHEN 1.74208729E9 THEN '' WHEN -1613315946 THEN 0.7237573357209449 END)) AND ((((((0.7764850165201062)AND(x'')))AND(0.18802854093041876)), CASE 0Xffffffff90becca4  WHEN '' THEN '246373326' END, (((((((('Wv3E')OR('(&}SC0B')))OR('-1340650509')))AND(0.5146387729490447)))OR(NULL))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt64_segdir_1', ' sz=570442201 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt64_segdir_1', '2 sz=-2089915004 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', ' sz=145831979 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'vt0', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('340729628') NOT BETWEEN (NULL) AND (x'')))>=((- ('-0.0')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt64_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt64_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.9064789228349122)-(3.75644662E8)))AND((~ (-887098363)))))AND(((((((((x'')AND('504301902')))OR('')))AND(NULL)))OR(x'cb2b')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((941655517 COLLATE NOCASE) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '-1023097654 -360229826 sz=-1066563248'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((1.176352476E9 COLLATE NOCASE)<((~ ('e')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CAST('-84404509' AS BLOB) THEN ((((x'')AND(NULL)))OR(x'')) ELSE (NULL IN ()) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', '1780067169 sz=362915826'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt64_segdir_1', '2 sz=-608807458'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('' IN ()) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt64_segdir_1', '-339255850 sz=-2112559462 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'vt64', '-531512071 -276170502 sz=213916959 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=9223372036854775807 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL)OR('0.9170468568471826')) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt64_segdir_1', ' sz=25286733'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt64_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_array_length(((NULL)>=('-1527512546'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.2715749278321449 IN ()))!=((('SEc,aeZ~*')GLOB(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', ' sz=-743293065 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt64_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1298435304 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(0.6119944353093608 AS BLOB) AS BLOB); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((LTRIM(x'', x'1e1f')) NOT BETWEEN (LENGTH(NULL)) AND (CAST('l6' AS BLOB))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'vt64', ' sz=1898658580'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((0.15060853006624375) BETWEEN (x'') AND ('1742087290')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt64', ' sz=977165833'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt64_segdir_1', ' sz=-554233691 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt64_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 sz=1858534221 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt64_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt64_segdir_1', ' sz=120072376 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'vt0', ' sz=1800726734 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', ' sz=631703153 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) NOT BETWEEN (((((x'96b3'))<((x'b58d'))))) AND ((((((x'')AND(0.2414648364667744)))OR(0.2414648364667744))))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=504653540 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'vt64', '-1620175349 sz=-598381520'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (x'07f03449'))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'vt0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', ' sz=-1279556590 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt64_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((NOT (x'9dd9fd94')) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt64_segdir_1', '0 1272271135 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((+ ('60300201')))OR(0x43846150 COLLATE RTRIM)))AND(((NULL)GLOB('1438595668')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', '-798952361 1281167380 sz=244917670 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '362915826 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0xffffffff9a0b99cc) BETWEEN (0.995090573551799) AND ('2045383048')))<=((('l?WC')IS(-1130255891)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE HEX(json_valid(NULL)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((NULL, x'4146', '-413945804'))<((x'', 0.48791194443839103, '1868917429'))) AS TEXT); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=2021847092 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt64_segdir_1', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt64_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', '-1066563248'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt64_segdir_1', ' sz=-554233691 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((956442592)>(0Xffffffff94b5ee07)) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((0.8703981773345039) IS TRUE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((x''))<>((''))))AND(NULL COLLATE RTRIM)))AND((('35xa')+('-2022223255')))))AND(((-8.87098363E8) NOTNULL))))AND(CAST(x'' AS REAL))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((((('(&}Sc0B')OR(NULL)))AND(0.14100928973920224)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt64_segdir_1', ' sz=1016114959'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-1066563248 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((0.6636803169925479)) NOT BETWEEN (('596373917')) AND (('-670274589'))))OR(((0.34809349278738655) NOT NULL))))AND(((0.2341094584086666) NOT BETWEEN (0.7374942154861803) AND ('C827O*v')))))OR(((NULL) NOT BETWEEN (-2.112559462E9) AND (NULL)))))OR(((((0.5330048321332352)AND(0Xffffffffab538b23)))OR(0.5279730605511517)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt64_segdir_1', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0Xfffffffff028bcb6 COLLATE RTRIM)+('1673214511')); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt64_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'vt0', ' sz=-1015313223 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', ' sz=-987349391 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', ' sz=-776117840 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((((NULL))<=((NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt64_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', '0 1497886022 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt64', ' sz=1516053103'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.24094659438043164; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt64', '-935240132 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', ' sz=804088089 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt64_segdir_1', ' sz=-1757279925'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt64_segdir_1', '0 2'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-1204214237')) BETWEEN (((('939732202') NOT NULL))) AND (((+ (NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt64', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt64', '1592172724 sz=-500140942 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE WHEN NULL THEN 0.12415378561333168 ELSE x'19a1' END THEN ((0.6068371268943935) BETWEEN (NULL) AND ('7騟')) WHEN (((0.6106254896637614)) BETWEEN ((NULL)) AND ((x'2985'))) THEN (('D)枪9ພﲉtc')!=(3.75644662E8)) WHEN (~ (0.3760919155719308)) THEN (- (0.6158728530036158)) ELSE (((0.4311048804902955)) NOT BETWEEN ((x'')) AND (('-1123497070'))) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt64_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('362915826') IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((ABS(DISTINCT x'')) BETWEEN ((0Xfffffffff5509ac4 IN ())) AND (COALESCE(x'', x'', 648113129, 1790314701))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt64_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '868902355' COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt64_segdir_1', ' sz=1244430925 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((((('')AND('-221732362')))AND(0.1150322836784905)))AND('I?')))AND('0.0')))AND(x'')))OR('.Wr\rFG'))) BETWEEN (SUBSTR('l', NULL)) AND (CASE NULL  WHEN 'ꧭG' THEN '-1564204297' ELSE 0.995090573551799 END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY((('-598381520') NOT BETWEEN (x'') AND ('#LLd'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 'Cf*-' THEN -1330564987 END) BETWEEN (0x670bc2c1 COLLATE BINARY) AND (((('', '', 0.6234823925895511, NULL, '')) NOT BETWEEN ((0.5328545006233326, x'', 0.07299243050582038, x'', 0.3999912533088198)) AND ((0X3b163db0, '-479433668', 0.8466164570984813, NULL, -84404509))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('1780067169') NOT BETWEEN (0.43294214963768163) AND ('-720971071')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt64_segdir_1', '1006941237 sz=1063068009'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=440759177'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '-1768924455 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'vt64', ''); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((((('A]휦')OR(NULL)))OR(0xffffffffa7bf67e3)))AND(0Xffffffffdb36bdcc)))OR(x'd926')))OR('362915826')))OR(0.0904625457072118))) BETWEEN ((+ ('fr{h|[\n'))) AND ((((('-70432934')AND(NULL)))OR(1793601869)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt64', ' sz=-4888752 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', '-1977354067 2 sz=-1522391582 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt64_segdir_1', ' sz=873993269 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt64', '0 -1850236823'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt64_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'rt1', ' sz=851333656'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', '0 sz=-228868480'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (TYPEOF(DISTINCT x'3e99ad508bc7') IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt64_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt64_segdir_1', '165360311 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((+ (0.42844336528736204)))OR(((x'') IS TRUE))))OR((('fl')GLOB(0Xfffffffffdd9d1c6)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'rt1', ' sz=-798952361'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt64_segdir_1', '1851058813 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN x'c833' THEN 0.011591517689130693 END)<(CASE WHEN '466331687' THEN x'' WHEN 0.9577739518056613 THEN NULL WHEN NULL THEN '-360229826' ELSE '-1016232927' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt64_segdir_1', ' sz=1754992779 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=1867642932'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.3920547048850769 COLLATE NOCASE AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (x'')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL)/('%')) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt64_segdir_1', ' sz=1800726734 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', ' sz=-20439278 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (CASE NULL  WHEN NULL THEN '狷4ezZ' ELSE 0x1a61b4d END)); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (CAST('Z{*' AS NUMERIC) IN (((0.07299243050582038)AND(0.8032066451758751)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')&(((NULL) NOT BETWEEN (x'') AND ('◢9Q')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt64', ' sz=-1954820197 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.006164954604861883 AS NUMERIC))||(CAST(x'8f9f' AS REAL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'vt0', '4 -1247899045 sz=375644662 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt64_segdir_1', ' sz=1134611706 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt64_segdir_1', '0 sz=-1977791610 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-871154845'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CAST('906906947' AS NUMERIC)))!=((CAST(x'' AS TEXT)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1951121623 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt64_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '0 2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt64_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt64_segdir_1', ' sz=-1434206209'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt64_segdir_1', '-1062198867 sz=1096464059 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'rt1', ' sz=1824185485 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'vt64', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((((((0.5526510212593477)AND(NULL)))OR('0.6636803169925479')))AND(-530571519)))OR(0.6636803169925479)))OR('1*' COLLATE RTRIM)))OR(CAST(0X6a9f813d AS INTEGER))))AND(load_extension(NULL, 0.41044272439756846))))OR(('112008479' IN ('26罶4llrx', NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.7785209707008443; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-84404509')!=(0.09253387512311295)))==((NULL IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'rt1', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', ' sz=1935400188'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', '372465538 sz=727443424 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt64_segdir_1', '-706759115'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1144205508'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.2662373299842886; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt64', ' sz=-650100102 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '1421651570'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1290621286 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', ' sz=947557304 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(DISTINCT 0.32789829310923835) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1383654182'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=773434008 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('213916959') NOT NULL))>>(((NULL)-(0.9368235243799564)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'rt1', ' sz=1421651570 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt64', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt64_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('482673711' IN (NULL)) IN ((NULL IN (x'', x'2e70')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY((('f80r%%')<('-1084398913'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt64_segdir_1', ' sz=25286733 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'vt0', '0 0 sz=-1428892406 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt64', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)GLOB('')))AND(('0.5328545006233326' IN ()))))AND(CASE '-1428892406'  WHEN x'' THEN 0.42485704459927376 ELSE 1156200343 END)); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', '1156200343 1074322477 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)OR(NULL))) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('213916959' IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt64_segdir_1', '882440498 1856920055 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt64_segdir_1', ' sz=489506133 noskipscan'); -- 2ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (NOT (NULL))  WHEN ((0.8455402705367009)<<(0.17192208154559807)) THEN 9.39732202E8 COLLATE BINARY END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE 't&价e'  WHEN 848273863 THEN '-1097058976' END)OR(CAST(NULL AS INTEGER))))AND(((x'0ec0')AND(-598381520)))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((0.48890045748483457 IN ()))OR(CAST(0x1d125ea6 AS NUMERIC))))AND((x'62a4' IN ()))))AND(x'' COLLATE BINARY)))AND((('')||(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt64_segdir_1', ' sz=1460426634'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0x5278e326 COLLATE RTRIM)*(((((NULL)AND(x'')))AND(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt64_segdir_1', '-1917445064 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt64', ' sz=1421651570 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt64_segdir_1', ' sz=701168259 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt64_segdir_1', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', '1493942567 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt64_segdir_1', '-221732362 sz=404529890'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE '871333616'  WHEN NULL THEN 0.2866650250380002 WHEN '#LLD' THEN 0Xffffffffcc774f41 WHEN x'' THEN '-338614341' END)GLOB(CAST(NULL AS REAL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt64_segdir_1', '2074721578'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '0 sz=-912881429 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 'BF''nY'  WHEN '*4M' THEN 0.7374942154861803 END)<(CAST('727443424' AS INTEGER))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt64_segdir_1', '0 sz=1000528169'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt64_segdir_1', ' sz=-1188908145 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-20439278 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=1652449091'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0.6869185374302459 COLLATE BINARY IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt64_segdir_1', '201838431 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt64', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt64', ' sz=1607637089'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 -161546098 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt64', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((- (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'rt1', '551067282 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt64', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', ' sz=1879659438 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.27102085203390225)%(NULL))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt64', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', '0 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt64_segdir_1', '1156200343 -220314949 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT ('529491190')))LIKE(rtreenode(x'9b1e', 0.8334688396083159))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL COLLATE NOCASE IN ((((0.42979934699158207, '6㠅?Sn', '-1527400009')) NOT BETWEEN ((0X6a90b7a1, NULL, 274288375)) AND (('', NULL, 0.4703379706006453))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt64_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'rt1', ' sz=246373326 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'vt64', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)%(NULL)))>>(CASE -1.980974337E9  WHEN '0.9931190726534364' THEN NULL ELSE '949140396' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt64_segdir_1', '-1097232093 sz=886586448 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 'ἁB'  WHEN NULL THEN '-598381520' WHEN '紆*o*bv貹' THEN 0.3142479151936911 WHEN 'fr{h|[\n' THEN '0.34809349278738655' WHEN 0X44ea3797 THEN 'aVB' WHEN NULL THEN NULL END)<>(((x'')>>('0.6068371268943935')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', ' sz=-943583819 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt64', '1523620770 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt64_segdir_1', '2 102107364 sz=-940799122 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((((NULL IN ()))OR(((((x'')AND(x'')))OR(0.7929369211641338)))))OR(((x'') ISNULL))))AND(((x'')>(NULL)))))AND(((0X74f9766a) NOT BETWEEN (0.1020597756722389) AND ('')))))OR(CAST(1770979189 AS INTEGER))))OR(('' IN (0.6067185201721859, '')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOT NULL))%(((-1785095686) BETWEEN (-1.644092445E9) AND (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((NULL)AND('fl')))AND('1324625826')))AND('^}')))AND('X%殹w+b')) IN (NULL COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt64_segdir_1', ' sz=1153484229 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt64_segdir_1', ' sz=1349018335'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'vt0', '375644662 0 sz=1034793002 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((2.46373326E8 COLLATE RTRIM)OR(((0.4593021592435952)>('')))))OR(((643577411)>>('-360229826')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt64_segdir_1', '0 0 sz=2084638366 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', ' sz=-1578865521 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((1.28116738E9) BETWEEN (x'') AND ('830573844')) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL COLLATE BINARY IN (((0x7bfb2922)>=('d饅曤n')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt64_segdir_1', ' sz=2085164391 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt64_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt64_segdir_1', ' sz=274288375'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'vt64', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('766803324') BETWEEN (-1112251947) AND (1800726734)) IN (((0.2959473092881084) BETWEEN ('-174155181') AND ('787722419')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-1850236823 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', ' sz=-1049436172 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '1858534221'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt64', ' sz=-514886462 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CAST(NULL AS REAL)  WHEN ((0.39780676702260664) NOT BETWEEN (0.24094659438043164) AND (x'c2ce')) THEN ((0.9792736473794761) ISNULL) WHEN (((0.02711337009366277, '616067050', x'')) NOT BETWEEN ((0X471c43a3, '-592396251', '939732202')) AND (('~*dQtFul', NULL, -1272715636))) THEN CAST(NULL AS BLOB) WHEN rtreenode('1946667164', '0.2341094584086666') THEN (~ (NULL)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '0 sz=-632446128 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt64', ' sz=-877429588'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt64_segdir_1', ' sz=-1917713991 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt64', ' sz=556182534'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.7604088748210327) BETWEEN (NULL) AND (x'1420')))<<((((NULL, '', '0.3760919155719308'))<=((NULL, 0.33428810791935204, 0.03266365094389412))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt64_segdir_1', ' sz=-851369107 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt64_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CAST('1646481306' AS TEXT) THEN CAST(0.6067185201721859 AS TEXT) ELSE ((NULL)||(1824185485)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt64', '-1869424613 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.3809609437061221 COLLATE NOCASE) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt64_segdir_1', ' sz=-475924962 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt64_segdir_1', ' sz=-1546496996 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((((((0.9636286201876486)AND(0.6953735774700006)))AND(0X0)))AND(NULL)))OR(0X1fe3ee4c)) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt64_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.9832143577120601; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)||(0.05725811064790498))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt64_segdir_1', '2'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', '0 1800726734 sz=102069943'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1617910589 -186145029 sz=86005220 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', '1646481306 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt64_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.080384519857432)/(x'd833')))OR((('Yo]#')==(-1263059932)))))OR(NULLIF(DISTINCT x'', x'0593'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt64', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'') NOTNULL) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt64_segdir_1', ' sz=1571742390 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.13869023091685562 IN ())) NOT BETWEEN ((5.95619998E8 IN ())) AND ((7.87722419E8 IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST((('25286733')>>(0.5328545006233326)) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt64_segdir_1', '435526442 -861942465 sz=-1785095686 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LIKELY(NULL))>((- (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((SQLITE_SOURCE_ID()) BETWEEN ((NOT (x''))) AND ('hK6(' COLLATE RTRIM)); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'vt0', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'vt64', ' sz=2139209827'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((0.10526533721322562 IN ()) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.7677956741273831)) BETWEEN ((((0.3247718954243467) NOT BETWEEN (x'') AND (NULL)))) AND ((CASE WHEN NULL THEN '-406400625' ELSE 1453545612 END))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'')|(0Xbd4243d)))OR(((('-1961139749'))!=((NULL))))))OR((NULL IN (NULL, NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt64', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-1005560942 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'rt1', '2 sz=1132749136 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt64_segdir_1', ' sz=-895810956 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', ' sz=1048585607 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (0X2f35d1d7 COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt64', '-592396251 sz=956442592 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'vt64', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', '2 sz=1897058650 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt64_segdir_1', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('' IN ()))&(((0.45036400328271875)||(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt64_segdir_1', ' sz=-338614341'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'vt64', ' sz=1858534221 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'vt0', ' sz=1775121821 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'vt64', '274288375 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-1752009618 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', ' sz=-1026693744'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'rt1', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt64_segdir_1', ' sz=2045383048 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt64_segdir_1', ' sz=246373326'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt64_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((NULL)%(0Xffffffffec9d9630)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((('-1843559091') NOTNULL) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.17192208154559807; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL) BETWEEN (NULL) AND (NULL)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)||(0X25a70671)) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (HEX('-1600613793') IN (LOWER(0.15060853006624375))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (NULL IN ())  WHEN x'dd26' COLLATE RTRIM THEN CASE WHEN '' THEN 0X689b108b ELSE x'' END WHEN -3.38614341E8 COLLATE RTRIM THEN ((x'')>=('1590371904')) WHEN '956442592' THEN (1.376633104E9 IN ()) ELSE ((((NULL)OR(x'664f')))OR(x'')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt64_segdir_1', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'249a') IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('t&价e') NOTNULL))<<(((((((((NULL)OR(NULL)))OR(x'1fc8')))AND(NULL)))AND(x'0da5')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'vt0', ' sz=-314293933 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) ISNULL)) BETWEEN (CASE NULL  WHEN 0x3aa3863c THEN '멆<' END) AND (CAST(220297754 AS TEXT))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt64_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (- ('337596794'))  WHEN (NOT (0X4cfb08b3)) THEN (((('b/')AND(x'')))AND(x'')) ELSE ((0.2772382703591072) BETWEEN (NULL) AND ('紆*o*bv貹')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'vt0', ' sz=1754992779 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt64_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', ' sz=1563832882 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((x'15af', '102545848', NULL))=((x'', NULL, 0.7659568030285415))))OR(RTRIM(0.8199767045623224))))OR((('d(')<(x'0166')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((0.4711772807958118) NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1956797779 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'vt64', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((((0.48687634388474843)) NOT BETWEEN (('503760060')) AND ((NULL))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt64_segdir_1', ' sz=-1436689520 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt64', ' sz=-900060287'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.4401056213840585)||(0Xffffffffbb1f78cb)) IN (((NULL) NOT NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt64_segdir_1', ' sz=1383654182 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt64_segdir_1', '-360229826 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'5999', 0X398b8795, NULL, 0.378894049181948, '')) BETWEEN (((- ('')), ((x'f6e327a4')||('1141208472')), HEX(-292256900), NULL COLLATE BINARY, (0Xd05bc00 IN ()))) AND ((NULL, ((NULL) ISNULL), '', ((x'3bd1') NOT NULL), HEX(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt64_segdir_1', ' sz=-424834537 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL))>((x'')))) BETWEEN (((x'45d8')<=(0.6592469478543604))) AND (LTRIM(246373326, -7.0432934E7))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '-1738365736' THEN '-1804558790' ELSE NULL END)<<(SQLITE_COMPILEOPTION_GET(4.19513352E8))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt64_segdir_1', '0 2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0x42b7ba5b)IS NOT(((((x'')OR(1518443857)))AND('0n7a')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'1b6c' AS BLOB))%(LAST_INSERT_ROWID())); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((NULL)AND('2027202069')))AND(0.41173739749561655)))OR(0X6585726d)))OR(CAST(5.0465354E8 AS REAL))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=143903255 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt64', ' sz=-519684965 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt64', ' sz=274288375 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('')) BETWEEN (('1858534221')) AND ((NULL))) IN ((~ ('')), CASE NULL  WHEN x'' THEN x'' ELSE 0.5830579658989873 END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') ISNULL))%(CASE 0.9070657606899492  WHEN 2059404378 THEN NULL WHEN '' THEN NULL WHEN '' THEN '-1869424613' ELSE 'Z	]?.!9' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt64_segdir_1', '-887098363 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 1373512353; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt64_segdir_1', ' sz=596373917 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt64_segdir_1', '1421651570'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', '1659903571 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', '533167366 sz=2056636744 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'rt1', '-291296266 -486940250 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt64_segdir_1', '236601561 2096537879'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt64', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS(DISTINCT (((0x783a9985, x'', '1e500'))>((NULL, -798952361, 0.06978748113918043)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt64', '2 sz=1906692221 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt64', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', ' sz=-1436689520 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.006066527033335101 IN ('426665124'))) NOT BETWEEN (CASE WHEN 419513352 THEN NULL WHEN x'' THEN '-832429420' WHEN '0.8334688396083159' THEN 0.34577035203194595 END) AND (((((((((0.17336673680718884)OR('912775052')))OR(NULL)))OR('')))AND(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.011591517689130693) NOTNULL) COLLATE RTRIM COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((DATETIME(0.8971312058312502, x'', 'TBdE{x')) BETWEEN (((0.6632405050630878)|(''))) AND (CAST(0.13688335690753195 AS REAL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((PRINTF(x'')) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', '2 2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt64_segdir_1', ' sz=-152862071 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('787722419')) BETWEEN (((NOT (x'1cc9')))) AND (((('4Y') NOT BETWEEN ('153483478') AND ('e彃'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt64_segdir_1', '2 sz=482673711 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt64', ' sz=1376633104 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'vt64', ' sz=-1522391582 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)OR(NULL)))OR(NULL)))<=((('-291296266')>(0.12838940092537543)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt64_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'vt64', ' sz=-1896107721 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-2049129488'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt64_segdir_1', '-981692505 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt64_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt64_segdir_1', '-2075203550 sz=2060373619'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.5823983073751007)AND(((x'02e1')&(NULL)))))OR(((((x'')AND(0.32789829310923835)))OR('25286733')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('0.3999912533088198') IS FALSE) IN (('' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)/(NULL)) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'vt0', '1703244397 sz=2102591723 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)&('n&7'))) BETWEEN (x'' COLLATE NOCASE) AND (('A]휦' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'vt64', '-1306286852 sz=1856420582'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.7265518294530382) NOT BETWEEN ('830573844') AND ('0.5279730605511517')))IS NOT(CASE x'76ff'  WHEN NULL THEN 0.35792248324975917 ELSE 0.9792736473794761 END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (NULL))) BETWEEN (((x'bb68')<(NULL))) AND (LIKELIHOOD(0.4618808384242953, 0.17778685272214456))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('0.7794440403933016'))==(('1172069479'))))>=(((NULL) NOT BETWEEN (x'') AND ('K7')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((~ ('')) IN ((((x'', NULL, x''))>((NULL, NULL, NULL))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (NULL)))&('26罶4llrx')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1896107721 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt64_segdir_1', ' sz=-1919057086'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((COALESCE(x'2187', x'')) NOT BETWEEN (((((x'e91c')AND(NULL)))AND(NULL))) AND (NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt64_segdir_1', '-1518479274 sz=-1462579516 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE 'VA'  WHEN x'' THEN x'' ELSE 'x%殹w+b' END AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt64_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'29f4') NOT BETWEEN (NULL) AND ('0.4711772807958118')) COLLATE NOCASE COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt64_segdir_1', '-592396251 sz=-852124592 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt64', '-644997066 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', ' sz=-677034383 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt64_segdir_1', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt64_segdir_1', ' sz=-887750198 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' COLLATE NOCASE, (- (NULL)), CAST(x'' AS TEXT)))<=(((- (x'')), (('-593847723') NOTNULL), ((-2.91296266E8)|('xt	5MT7F'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt64_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt64_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt64_segdir_1', '2027202069 sz=1858534221'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((('-1083212876'))<((NULL))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt64_segdir_1', '-322475926 650547517 sz=1411646754 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((x'' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL COLLATE NOCASE IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt64', ' sz=-1791767957'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt64_segdir_1', ' sz=-143217209'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CAST(x'' AS BLOB) THEN '-1137495579' ELSE ((((((((0Xffffffffeb4a79b4)OR(x'')))OR('949T26T554-')))AND('60300201')))OR(NULL)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt64', ' sz=-20439278 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((x'') NOT BETWEEN (0.338156796023542) AND ('-1097405807')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', '839197372 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1281500467'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt64_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL IN (CASE x''  WHEN 0.5148228181511513 THEN '578459592' ELSE NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt64_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(((0.48890045748483457) IS TRUE), DATE(0Xffffffffa54225e2, ',', '427181804', NULL, 0.9299117103132295), CAST(NULL AS BLOB), ((x'') NOT BETWEEN ('') AND (0.24094659438043164))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt64_segdir_1', ' sz=-994339705 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', ' sz=1742087290 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM((x'' IN ())); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt64_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'rt1', ' sz=541474702 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt64_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt64_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt64_segdir_1', ' sz=956442592 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt64', ' sz=-331125560 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS BLOB)) BETWEEN ((NOT (NULL))) AND (CASE WHEN x'' THEN -739359619 ELSE x'6f0f' END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('')OR(('**' IN ()))))AND((0X13cc17de IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt64', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL AS INTEGER) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt64_segdir_1', ' sz=777477443'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt64_segdir_1', ' sz=1742087290 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt64_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'rt1', ' sz=633426203 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '1458615461 sz=-1675936107'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-1029742109') BETWEEN (NULL) AND (x''))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('	yp') IS FALSE) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'vt0', ' sz=119483661'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) BETWEEN (x'') AND (0.6921421574695196)))<<((NULL IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=721869231 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', ' sz=-1062198867'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '419513352 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt64_segdir_1', ' sz=-1042384508 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', '868902355 2 sz=-987349391'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.7396003003347612) NOT BETWEEN ('35XA') AND (NULL)) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', '1652239993 sz=114697378 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', ' sz=30498402 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '-814069536 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt64_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', '-473156332'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'2442' IN ()) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'vt0', ' sz=-1043268694 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'vt0', '0 sz=461399931 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=246373326 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '2 sz=1881617056 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt64_segdir_1', '0 sz=2015259756 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CAST('-2085904756' AS TEXT))OR((((NULL, NULL, 0.015489916018320615, '1688004016', 1.652449091E9)) BETWEEN (('ႋctQ\H|g%', NULL, 3.62915826E8, '', 0.47921631770589923)) AND ((0.42979934699158207, NULL, 0.8063384786738773, x'', x''))))))OR(0.0)))AND(CAST(x'9df4' AS INTEGER))))OR(((NULL) NOT BETWEEN (-1062198867) AND (x'0699')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt64', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', ' sz=365785279 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'vt64', ' sz=1447074379 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ()))IS(CASE WHEN x'' THEN NULL ELSE NULL END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((0.08107378406611065) NOTNULL))OR(CHAR(0.3760919155719308))))OR(NULL)))OR(('' IN ()))))OR((('274288375') BETWEEN (0X3c1e92e2) AND (x'c637f869')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt64_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'vt0', '-1529691069 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((((6.0300201E7)OR('1306538253')))AND(',s*>')))); -- 0ms;
ANALYZE temp; -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA cache_spill = 338276681634973233; -- 0ms;
PRAGMA temp.application_id = -8785596935218891059; -- 0ms;
ANALYZE main; -- 0ms;
INSERT OR REPLACE INTO vt64 VALUES ('''j\O+D~H', x''); -- 0ms;
INSERT OR IGNORE INTO vt0(c1) VALUES ('\麒'); -- 0ms;
SELECT rtreecheck('rt1'); -- 0ms;
INSERT INTO vt64(vt64, rank) VALUES('pgsz', '23385'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
BEGIN  TRANSACTION; -- 1ms;
INSERT OR IGNORE INTO vt64(c0, lid) VALUES (NULL, 'VqSD'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA ignore_check_constraints; -- 0ms;
END; -- 0ms;
ANALYZE; -- 0ms;
ANALYZE sqlite_master; -- 1ms;
PRAGMA ignore_check_constraints = true; -- 0ms;
ANALYZE temp; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
DROP TABLE IF EXISTS vt0; -- 0ms;
ANALYZE; -- 0ms;
INSERT INTO vt64(vt64, rank) VALUES('pgsz', '18655'); -- 0ms;
INSERT INTO vt64(vt64) VALUES('integrity-check'); -- 1ms;
PRAGMA temp.locking_mode; -- 0ms;
REINDEX; -- 0ms;
PRAGMA application_id = 5177584322872195684; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO rt1(c0, c5, c4) VALUES (x'', NULL, NULL); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt64', 'sqlite_autoindex_vt64_segdir_1', '0 unordered noskipscan'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt64 VALUES (NULL, 1447030111), (NULL, 0.7562819503235726), (x'', x''); -- 0ms;
INSERT OR IGNORE INTO rt1(c0, c2, c6) VALUES (0.21128552150270452, '-814069536', -535485971), (0.24797597392260595, '773810773', NULL), (1.703244397E9, NULL, x''), (1427567404, x'2f3c', NULL), ('kX\n/', NULL, 0.9033669631690848); -- 0ms;
INSERT INTO vt64(vt64) VALUES('automerge=2'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
INSERT INTO vt64(vt64) VALUES('automerge=4'); -- 0ms;
PRAGMA temp.stats; -- 0ms;
DELETE FROM vt64 WHERE (((~ (vt64.c0)))>((+ (vt64.c0)))); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt1(c2, c3, c1, c4, c0, c6) VALUES ('', '', x'03e8', 0.7147750973039442, NULL, '-1062198867'), (0Xffffffffe411c645, 1.176352476E9, '274288375', 0.6813964338978521, '狷4ezz', x''), ('U~,?', x'', 0X5adcac7a, NULL, NULL, ''); -- 1ms;
PRAGMA cell_size_check = true; -- 0ms;
PRAGMA temp.legacy_file_format = false; -- 0ms;
PRAGMA stats; -- 0ms;
VACUUM; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt64_segdir_1', ' sz=2027202069 noskipscan'); -- 0ms;
REINDEX BINARY; -- 0ms;
END TRANSACTION; -- 0ms;
PRAGMA main.automatic_index; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA mmap_size = -2257076555379348072; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
PRAGMA temp.auto_vacuum = INCREMENTAL; -- 0ms;
INSERT OR IGNORE INTO rt1(c6, c3, c0) VALUES ('FR{H|[\n', '803951836', x'a111'); -- 0ms;
INSERT OR ROLLBACK INTO rt1(c5, c6, c2, c3, c4) VALUES (0.2170183740909799, NULL, 0.9792787701594193, x'', 0.4273530749040082); -- 0ms;
INSERT OR REPLACE INTO rt1(c6, c0) VALUES (0X6aa80f95, NULL), (-8.14069536E8, 0.8032066451758751), (0.14266191117408178, 0.9063005824103938); -- 1ms;
INSERT OR IGNORE INTO rt1(c5, c1, c0, c4, c2, c3) VALUES (0.8839631574182111, x'810dae20', NULL, -875355210, '-1524467424', '1978216643'); -- 0ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO rt1(c0, c1, c4, c6, c5) VALUES (-1.869424613E9, '1302074856', NULL, x'', 0.8735357185655499); -- 1ms;
INSERT OR IGNORE INTO rt1(c1, c6) VALUES ('656686781', -1.7976931348623157E308); -- 0ms;
PRAGMA default_cache_size = 595331705; -- 0ms;
INSERT OR IGNORE INTO rt1(c2, c6, c5, c4, c0) VALUES (NULL, '1156200343', 0.7999088607084877, '1703244397', 'C''⟠QP~ᙳ'), (x'e908', x'', x'', '', NULL), ('', NULL, 0x62c5e21d, x'e0e8', '>ᴟ'); -- 0ms;
INSERT OR FAIL INTO vt64(c0) VALUES ('-1455416760'); -- 1ms;
INSERT OR FAIL INTO rt1(c2, c6, c0, c4, c1, c3) VALUES ('958791651', x'', x'', 'Du\ro', 0.2341094584086666, 'sue\\rs9\'), (0.24094659438043164, NULL, NULL, x'c812', '1349018335', (- (0.22614564179067942 COLLATE BINARY))), ('', '-612981618', 0.5739937592926684, x'', x'', NULL); -- 0ms;
INSERT OR ROLLBACK INTO rt1(c4, c5, c3) VALUES (0.34554762491327495, x'', NULL); -- 1ms;
INSERT OR ROLLBACK INTO vt64 VALUES ('-314293933', '-1785095686'); -- 0ms;
INSERT OR IGNORE INTO vt64 VALUES ('-1023097654', '-833184695'); -- 0ms;
INSERT OR IGNORE INTO vt64(lid, c0) VALUES (NULL, x''), (2740392, '()'), (-1.428892406E9, '1383654182'); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT rt1.c2, vt64.lid, vt64.c0, rt1.c0 FROM rt1, vt64;
SELECT rt1.c2, vt64.lid, vt64.c0, rt1.c0 FROM rt1, vt64 WHERE ((~ (((rt1.c2) NOTNULL)))) UNION ALL SELECT ALL rt1.c2, vt64.lid, vt64.c0, rt1.c0 FROM rt1, vt64 WHERE ((NOT ((~ (((rt1.c2) NOTNULL)))))) UNION ALL SELECT rt1.c2, vt64.lid, vt64.c0, rt1.c0 FROM rt1, vt64 WHERE ((((~ (((rt1.c2) NOTNULL)))) ISNULL));
SELECT rt1.c2, vt64.lid, vt64.c0, rt1.c0 FROM rt1, vt64;
SELECT DISTINCT rt1.c3, vt64.lid, rt1.c2, vt64.c0 FROM rt1, vt64;
SELECT DISTINCT rt1.c3, vt64.lid, rt1.c2, vt64.c0 FROM rt1, vt64 WHERE (CAST(((rt1.c3)OR(rt1.c5)) AS TEXT)) UNION SELECT DISTINCT rt1.c3, vt64.lid, rt1.c2, vt64.c0 FROM rt1, vt64 WHERE ((NOT (CAST(((rt1.c3)OR(rt1.c5)) AS TEXT)))) UNION SELECT DISTINCT rt1.c3, vt64.lid, rt1.c2, vt64.c0 FROM rt1, vt64 WHERE (((CAST(((rt1.c3)OR(rt1.c5)) AS TEXT)) ISNULL));
SELECT DISTINCT rt1.c3, vt64.lid, rt1.c2, vt64.c0 FROM rt1, vt64;
SELECT ALL vt64.lid, vt64.c0 FROM vt64 GROUP BY vt64.lid, vt64.c0;
SELECT ALL vt64.lid, vt64.c0 FROM vt64 WHERE (vt64.c0) GROUP BY vt64.lid, vt64.c0 UNION SELECT vt64.lid, vt64.c0 FROM vt64 WHERE ((NOT (vt64.c0))) GROUP BY vt64.lid, vt64.c0 UNION SELECT vt64.lid, vt64.c0 FROM vt64 WHERE (((vt64.c0) ISNULL)) GROUP BY vt64.lid, vt64.c0;
SELECT ALL vt64.lid, vt64.c0 FROM vt64 GROUP BY vt64.lid, vt64.c0;
SELECT rt1.c0, rt1.c1, rt1.c2, vt64.lid, rt1.c6, rt1.c5, vt64.c0 FROM rt1, vt64 GROUP BY rt1.c0, rt1.c1, rt1.c2, vt64.lid, rt1.c6, rt1.c5, vt64.c0;
SELECT ALL rt1.c0, rt1.c1, rt1.c2, vt64.lid, rt1.c6, rt1.c5, vt64.c0 FROM rt1, vt64 GROUP BY rt1.c0, rt1.c1, rt1.c2, vt64.lid, rt1.c6, rt1.c5, vt64.c0 HAVING MIN(SUM(MAX(rt1.c3))) UNION ALL SELECT ALL rt1.c0, rt1.c1, rt1.c2, vt64.lid, rt1.c6, rt1.c5, vt64.c0 FROM rt1, vt64 GROUP BY rt1.c0, rt1.c1, rt1.c2, vt64.lid, rt1.c6, rt1.c5, vt64.c0 HAVING (NOT (MIN(SUM(MAX(rt1.c3))))) UNION ALL SELECT rt1.c0, rt1.c1, rt1.c2, vt64.lid, rt1.c6, rt1.c5, vt64.c0 FROM rt1, vt64 GROUP BY rt1.c0, rt1.c1, rt1.c2, vt64.lid, rt1.c6, rt1.c5, vt64.c0 HAVING ((MIN(SUM(MAX(rt1.c3)))) ISNULL);
SELECT rt1.c2, rt1.c6, rt1.c1 FROM vt64 NATURAL JOIN rt1;
SELECT ALL rt1.c2, rt1.c6, rt1.c1 FROM vt64 NATURAL JOIN rt1 WHERE (CASE TRIM('0.9471918495789173')  WHEN ((rt1.c6)|(rt1.c2)) THEN CASE rt1.c4  WHEN rt1.c3 THEN rt1.c0 END WHEN (~ (rt1.c6)) THEN CAST(vt64.lid AS TEXT) WHEN ((vt64.lid)+(rt1.c5)) THEN ((vt64.lid) NOT BETWEEN (rt1.c6) AND (rt1.c0)) END) UNION ALL SELECT rt1.c2, rt1.c6, rt1.c1 FROM vt64 NATURAL JOIN rt1 WHERE ((NOT (CASE TRIM('0.9471918495789173')  WHEN ((rt1.c6)|(rt1.c2)) THEN CASE rt1.c4  WHEN rt1.c3 THEN rt1.c0 END WHEN (~ (rt1.c6)) THEN CAST(vt64.lid AS TEXT) WHEN ((vt64.lid)+(rt1.c5)) THEN ((vt64.lid) NOT BETWEEN (rt1.c6) AND (rt1.c0)) END))) UNION ALL SELECT rt1.c2, rt1.c6, rt1.c1 FROM vt64 NATURAL JOIN rt1 WHERE (((CASE TRIM('0.9471918495789173')  WHEN ((rt1.c6)|(rt1.c2)) THEN CASE rt1.c4  WHEN rt1.c3 THEN rt1.c0 END WHEN (~ (rt1.c6)) THEN CAST(vt64.lid AS TEXT) WHEN ((vt64.lid)+(rt1.c5)) THEN ((vt64.lid) NOT BETWEEN (rt1.c6) AND (rt1.c0)) END) ISNULL));
SELECT rt1.c2, rt1.c6, rt1.c1 FROM vt64 NATURAL JOIN rt1;
SELECT DISTINCT rt1.c1, rt1.c0, rt1.c3, vt64.lid, rt1.c4, rt1.c5 FROM rt1, vt64;
SELECT DISTINCT rt1.c1, rt1.c0, rt1.c3, vt64.lid, rt1.c4, rt1.c5 FROM rt1, vt64 WHERE (((rt1.c3)LIKE((rt1.c1 IN ())))) UNION SELECT DISTINCT rt1.c1, rt1.c0, rt1.c3, vt64.lid, rt1.c4, rt1.c5 FROM rt1, vt64 WHERE ((NOT (((rt1.c3)LIKE((rt1.c1 IN ())))))) UNION SELECT DISTINCT rt1.c1, rt1.c0, rt1.c3, vt64.lid, rt1.c4, rt1.c5 FROM rt1, vt64 WHERE (((((rt1.c3)LIKE((rt1.c1 IN ())))) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c0, rt1.c3, vt64.lid, rt1.c4, rt1.c5 FROM rt1, vt64;
SELECT rt1.c3 FROM vt64 NATURAL JOIN rt1 GROUP BY rt1.c3;
SELECT ALL rt1.c3 FROM vt64 NATURAL JOIN rt1 WHERE (NULL) GROUP BY rt1.c3 UNION SELECT ALL rt1.c3 FROM vt64 NATURAL JOIN rt1 WHERE ((NOT (NULL))) GROUP BY rt1.c3 UNION SELECT rt1.c3 FROM vt64 NATURAL JOIN rt1 WHERE (((NULL) ISNULL)) GROUP BY rt1.c3;
SELECT rt1.c3 FROM vt64 NATURAL JOIN rt1 GROUP BY rt1.c3;
SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0 HAVING (QUOTE(rt1.c1) IN ()) UNION ALL SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0 HAVING (NOT ((QUOTE(rt1.c1) IN ()))) UNION ALL SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0 HAVING (((QUOTE(rt1.c1) IN ())) ISNULL);
SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0 HAVING (QUOTE(rt1.c1) IN ()) UNION ALL SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0 HAVING (NOT ((QUOTE(rt1.c1) IN ()))) UNION ALL SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0 HAVING (((QUOTE(rt1.c1) IN ())) ISNULL);
SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT ALL rt1.c1, rt1.c0 FROM rt1;
SELECT rt1.c1, rt1.c0 FROM rt1 WHERE (((rt1.c2)>>(((rt1.c5) NOT BETWEEN (rt1.c5) AND (rt1.c1))))) UNION ALL SELECT rt1.c1, rt1.c0 FROM rt1 WHERE ((NOT (((rt1.c2)>>(((rt1.c5) NOT BETWEEN (rt1.c5) AND (rt1.c1))))))) UNION ALL SELECT rt1.c1, rt1.c0 FROM rt1 WHERE (((((rt1.c2)>>(((rt1.c5) NOT BETWEEN (rt1.c5) AND (rt1.c1))))) ISNULL));
SELECT ALL rt1.c1, rt1.c0 FROM rt1;
SELECT DISTINCT * FROM vt64;
SELECT DISTINCT * FROM vt64 WHERE (CASE (vt64.c0 IN ())  WHEN ((vt64.c0)|(vt64.lid)) THEN ((vt64.c0)>(vt64.c0)) ELSE (((('')OR(vt64.c0)))AND(vt64.lid)) END) UNION SELECT DISTINCT * FROM vt64 WHERE ((NOT (CASE (vt64.c0 IN ())  WHEN ((vt64.c0)|(vt64.lid)) THEN ((vt64.c0)>(vt64.c0)) ELSE (((('')OR(vt64.c0)))AND(vt64.lid)) END))) UNION SELECT DISTINCT * FROM vt64 WHERE (((CASE (vt64.c0 IN ())  WHEN ((vt64.c0)|(vt64.lid)) THEN ((vt64.c0)>(vt64.c0)) ELSE (((('')OR(vt64.c0)))AND(vt64.lid)) END) ISNULL));
SELECT DISTINCT * FROM vt64;
SELECT rt1.c2, rt1.c3, rt1.c0, vt64.c0, vt64.lid, rt1.c1, rt1.c6, rt1.c5, rt1.c4 FROM rt1 LEFT OUTER JOIN vt64 ON (((((((rt1.c3, vt64.lid, rt1.c5)) NOT BETWEEN ((rt1.c1, rt1.c2, '362915826')) AND ((rt1.c3, rt1.c5, rt1.c5))))OR(rt1.c1 COLLATE NOCASE)))OR(((rt1.c5) NOT BETWEEN (rt1.c3) AND (vt64.lid)))) GROUP BY rt1.c2, rt1.c3, rt1.c0, vt64.c0, vt64.lid, rt1.c1, rt1.c6, rt1.c5, rt1.c4;
SELECT rt1.c2, rt1.c3, rt1.c0, vt64.c0, vt64.lid, rt1.c1, rt1.c6, rt1.c5, rt1.c4 FROM rt1 LEFT OUTER JOIN vt64 ON (((((((rt1.c3, vt64.lid, rt1.c5)) NOT BETWEEN ((rt1.c1, rt1.c2, '362915826')) AND ((rt1.c3, rt1.c5, rt1.c5))))OR(rt1.c1 COLLATE NOCASE)))OR(((rt1.c5) NOT BETWEEN (rt1.c3) AND (vt64.lid)))) WHERE (CAST(rt1.c2 COLLATE BINARY AS NUMERIC)) GROUP BY rt1.c2, rt1.c3, rt1.c0, vt64.c0, vt64.lid, rt1.c1, rt1.c6, rt1.c5, rt1.c4 UNION SELECT rt1.c2, rt1.c3, rt1.c0, vt64.c0, vt64.lid, rt1.c1, rt1.c6, rt1.c5, rt1.c4 FROM rt1 LEFT OUTER JOIN vt64 ON (((((((rt1.c3, vt64.lid, rt1.c5)) NOT BETWEEN ((rt1.c1, rt1.c2, '362915826')) AND ((rt1.c3, rt1.c5, rt1.c5))))OR(rt1.c1 COLLATE NOCASE)))OR(((rt1.c5) NOT BETWEEN (rt1.c3) AND (vt64.lid)))) WHERE ((NOT (CAST(rt1.c2 COLLATE BINARY AS NUMERIC)))) GROUP BY rt1.c2, rt1.c3, rt1.c0, vt64.c0, vt64.lid, rt1.c1, rt1.c6, rt1.c5, rt1.c4 UNION SELECT rt1.c2, rt1.c3, rt1.c0, vt64.c0, vt64.lid, rt1.c1, rt1.c6, rt1.c5, rt1.c4 FROM rt1 LEFT OUTER JOIN vt64 ON (((((((rt1.c3, vt64.lid, rt1.c5)) NOT BETWEEN ((rt1.c1, rt1.c2, '362915826')) AND ((rt1.c3, rt1.c5, rt1.c5))))OR(rt1.c1 COLLATE NOCASE)))OR(((rt1.c5) NOT BETWEEN (rt1.c3) AND (vt64.lid)))) WHERE (((CAST(rt1.c2 COLLATE BINARY AS NUMERIC)) ISNULL)) GROUP BY rt1.c2, rt1.c3, rt1.c0, vt64.c0, vt64.lid, rt1.c1, rt1.c6, rt1.c5, rt1.c4;
SELECT rt1.c2, rt1.c3, rt1.c0, vt64.c0, vt64.lid, rt1.c1, rt1.c6, rt1.c5, rt1.c4 FROM rt1 LEFT OUTER JOIN vt64 ON (((((((rt1.c3, vt64.lid, rt1.c5)) NOT BETWEEN ((rt1.c1, rt1.c2, '362915826')) AND ((rt1.c3, rt1.c5, rt1.c5))))OR(rt1.c1 COLLATE NOCASE)))OR(((rt1.c5) NOT BETWEEN (rt1.c3) AND (vt64.lid)))) GROUP BY rt1.c2, rt1.c3, rt1.c0, vt64.c0, vt64.lid, rt1.c1, rt1.c6, rt1.c5, rt1.c4;
SELECT rt1.c3, rt1.c5, rt1.c4 FROM rt1 GROUP BY rt1.c3, rt1.c5, rt1.c4;
SELECT rt1.c3, rt1.c5, rt1.c4 FROM rt1 GROUP BY rt1.c3, rt1.c5, rt1.c4 HAVING UPPER(DISTINCT AVG(COUNT(AVG(rt1.c2)))) UNION ALL SELECT ALL rt1.c3, rt1.c5, rt1.c4 FROM rt1 GROUP BY rt1.c3, rt1.c5, rt1.c4 HAVING (NOT (UPPER(DISTINCT AVG(COUNT(AVG(rt1.c2)))))) UNION ALL SELECT rt1.c3, rt1.c5, rt1.c4 FROM rt1 GROUP BY rt1.c3, rt1.c5, rt1.c4 HAVING ((UPPER(DISTINCT AVG(COUNT(AVG(rt1.c2))))) ISNULL);
SELECT * FROM vt64 RIGHT OUTER JOIN rt1 ON ((((rt1.c3)IS NOT(vt64.c0))) NOTNULL);
SELECT ALL * FROM vt64 RIGHT OUTER JOIN rt1 ON ((((rt1.c3)IS NOT(vt64.c0))) NOTNULL) WHERE (((((rt1.c6) BETWEEN (rt1.c2) AND (rt1.c6)))>>((((NULL))==((rt1.c5)))))) UNION ALL SELECT ALL * FROM vt64 RIGHT OUTER JOIN rt1 ON ((((rt1.c3)IS NOT(vt64.c0))) NOTNULL) WHERE ((NOT (((((rt1.c6) BETWEEN (rt1.c2) AND (rt1.c6)))>>((((NULL))==((rt1.c5)))))))) UNION ALL SELECT * FROM vt64 RIGHT OUTER JOIN rt1 ON ((((rt1.c3)IS NOT(vt64.c0))) NOTNULL) WHERE (((((((rt1.c6) BETWEEN (rt1.c2) AND (rt1.c6)))>>((((NULL))=((rt1.c5)))))) ISNULL));
SELECT * FROM vt64 RIGHT OUTER JOIN rt1 ON ((((rt1.c3)IS NOT(vt64.c0))) NOTNULL);
SELECT DISTINCT vt64.lid, vt64.c0, rt1.c1, rt1.c6 FROM vt64, rt1;
SELECT DISTINCT vt64.lid, vt64.c0, rt1.c1, rt1.c6 FROM vt64, rt1 WHERE (((((NOT (rt1.c5))))<=(((((rt1.c0))=((rt1.c6))))))) UNION SELECT DISTINCT vt64.lid, vt64.c0, rt1.c1, rt1.c6 FROM vt64, rt1 WHERE ((NOT (((((NOT (rt1.c5))))<=(((((rt1.c0))=((rt1.c6))))))))) UNION SELECT DISTINCT vt64.lid, vt64.c0, rt1.c1, rt1.c6 FROM vt64, rt1 WHERE (((((((NOT (rt1.c5))))<=(((((rt1.c0))=((rt1.c6))))))) ISNULL));
SELECT DISTINCT vt64.lid, vt64.c0, rt1.c1, rt1.c6 FROM vt64, rt1;
SELECT ALL vt64.lid FROM vt64 GROUP BY vt64.lid;
SELECT vt64.lid FROM vt64 WHERE (((((vt64.c0)==(vt64.lid)))LIKE(vt64.c0))) GROUP BY vt64.lid UNION SELECT ALL vt64.lid FROM vt64 WHERE ((NOT (((((vt64.c0)==(vt64.lid)))LIKE(vt64.c0))))) GROUP BY vt64.lid UNION SELECT ALL vt64.lid FROM vt64 WHERE (((((((vt64.c0)=(vt64.lid)))LIKE(vt64.c0))) ISNULL)) GROUP BY vt64.lid;
SELECT ALL vt64.lid FROM vt64 GROUP BY vt64.lid;
SELECT ALL rt1.c3, rt1.c6 FROM rt1 GROUP BY rt1.c3, rt1.c6;
SELECT ALL rt1.c3, rt1.c6 FROM rt1 GROUP BY rt1.c3, rt1.c6 HAVING (~ (((0.17279527883784906)==(rt1.c5)))) UNION ALL SELECT ALL rt1.c3, rt1.c6 FROM rt1 GROUP BY rt1.c3, rt1.c6 HAVING (NOT ((~ (((0.17279527883784906)=(rt1.c5)))))) UNION ALL SELECT ALL rt1.c3, rt1.c6 FROM rt1 GROUP BY rt1.c3, rt1.c6 HAVING (((~ (((0.17279527883784906)=(rt1.c5))))) ISNULL);
SELECT ALL rt1.c3, rt1.c6 FROM rt1 GROUP BY rt1.c3, rt1.c6;
SELECT ALL rt1.c3, rt1.c6 FROM rt1 GROUP BY rt1.c3, rt1.c6 HAVING (~ (((0.17279527883784906)==(rt1.c5)))) UNION ALL SELECT ALL rt1.c3, rt1.c6 FROM rt1 GROUP BY rt1.c3, rt1.c6 HAVING (NOT ((~ (((0.17279527883784906)=(rt1.c5)))))) UNION ALL SELECT ALL rt1.c3, rt1.c6 FROM rt1 GROUP BY rt1.c3, rt1.c6 HAVING (((~ (((0.17279527883784906)=(rt1.c5))))) ISNULL);
SELECT ALL rt1.c3, rt1.c6 FROM rt1 GROUP BY rt1.c3, rt1.c6;
SELECT rt1.c2, rt1.c1, rt1.c5, vt64.c0, rt1.c0 FROM rt1 INNER JOIN vt64 ON CASE NULL  WHEN CASE 0.3760919155719308  WHEN rt1.c3 THEN 0.6638866128024482 END THEN ((vt64.c0)IS(vt64.lid)) ELSE CASE '-221732362'  WHEN rt1.c1 THEN vt64.lid END END;
SELECT rt1.c2, rt1.c1, rt1.c5, vt64.c0, rt1.c0 FROM rt1 INNER JOIN vt64 ON CASE NULL  WHEN CASE 0.3760919155719308  WHEN rt1.c3 THEN 0.6638866128024482 END THEN ((vt64.c0)IS(vt64.lid)) ELSE CASE '-221732362'  WHEN rt1.c1 THEN vt64.lid END END WHERE ((((rt1.c1 IN ())) BETWEEN ((vt64.c0 IN ())) AND (x''))) UNION ALL SELECT ALL rt1.c2, rt1.c1, rt1.c5, vt64.c0, rt1.c0 FROM rt1 INNER JOIN vt64 ON CASE NULL  WHEN CASE 0.3760919155719308  WHEN rt1.c3 THEN 0.6638866128024482 END THEN ((vt64.c0)IS(vt64.lid)) ELSE CASE '-221732362'  WHEN rt1.c1 THEN vt64.lid END END WHERE ((NOT ((((rt1.c1 IN ())) BETWEEN ((vt64.c0 IN ())) AND (x''))))) UNION ALL SELECT rt1.c2, rt1.c1, rt1.c5, vt64.c0, rt1.c0 FROM rt1 INNER JOIN vt64 ON CASE NULL  WHEN CASE 0.3760919155719308  WHEN rt1.c3 THEN 0.6638866128024482 END THEN ((vt64.c0)IS(vt64.lid)) ELSE CASE '-221732362'  WHEN rt1.c1 THEN vt64.lid END END WHERE ((((((rt1.c1 IN ())) BETWEEN ((vt64.c0 IN ())) AND (x''))) ISNULL));
SELECT rt1.c2, rt1.c1, rt1.c5, vt64.c0, rt1.c0 FROM rt1 INNER JOIN vt64 ON CASE NULL  WHEN CASE 0.3760919155719308  WHEN rt1.c3 THEN 0.6638866128024482 END THEN ((vt64.c0)IS(vt64.lid)) ELSE CASE '-221732362'  WHEN rt1.c1 THEN vt64.lid END END;
SELECT DISTINCT vt64.c0, rt1.c1, rt1.c3, rt1.c0, rt1.c5, rt1.c6, rt1.c4 FROM rt1, vt64;
SELECT DISTINCT vt64.c0, rt1.c1, rt1.c3, rt1.c0, rt1.c5, rt1.c6, rt1.c4 FROM rt1, vt64 WHERE (((((rt1.c2)/(rt1.c3))) IS FALSE)) UNION SELECT DISTINCT vt64.c0, rt1.c1, rt1.c3, rt1.c0, rt1.c5, rt1.c6, rt1.c4 FROM rt1, vt64 WHERE ((NOT (((((rt1.c2)/(rt1.c3))) IS FALSE)))) UNION SELECT DISTINCT vt64.c0, rt1.c1, rt1.c3, rt1.c0, rt1.c5, rt1.c6, rt1.c4 FROM rt1, vt64 WHERE (((((((rt1.c2)/(rt1.c3))) IS FALSE)) ISNULL));
SELECT DISTINCT vt64.c0, rt1.c1, rt1.c3, rt1.c0, rt1.c5, rt1.c6, rt1.c4 FROM rt1, vt64;
SELECT ALL rt1.c6 FROM vt64, rt1 GROUP BY rt1.c6;
SELECT ALL rt1.c6 FROM vt64, rt1 NOT INDEXED WHERE ((((('7czTV4p{') BETWEEN (0.9279766322553503) AND (rt1.c5)))<>((vt64.lid IN ('461394207'))))) GROUP BY rt1.c6 UNION SELECT rt1.c6 FROM vt64, rt1 WHERE ((NOT ((((('7czTV4p{') BETWEEN (0.9279766322553503) AND (rt1.c5)))<>((vt64.lid IN ('461394207'))))))) GROUP BY rt1.c6 UNION SELECT rt1.c6 FROM vt64, rt1 WHERE ((((((('7czTV4p{') BETWEEN (0.9279766322553503) AND (rt1.c5)))<>((vt64.lid IN ('461394207'))))) ISNULL)) GROUP BY rt1.c6;
SELECT ALL rt1.c6 FROM vt64, rt1 GROUP BY rt1.c6;
SELECT rt1.c3 FROM rt1, vt64 GROUP BY rt1.c3;
SELECT rt1.c3 FROM rt1, vt64 GROUP BY rt1.c3 HAVING COUNT(SUM(AVG(rt1.c3))) UNION ALL SELECT rt1.c3 FROM rt1, vt64 GROUP BY rt1.c3 HAVING (NOT (COUNT(SUM(AVG(rt1.c3))))) UNION ALL SELECT rt1.c3 FROM rt1, vt64 GROUP BY rt1.c3 HAVING ((COUNT(SUM(AVG(rt1.c3)))) ISNULL);
SELECT ALL rt1.c3 FROM rt1;
SELECT rt1.c3 FROM rt1 WHERE (0.9874986975541499) UNION ALL SELECT rt1.c3 FROM rt1 WHERE ((NOT (0.9874986975541499))) UNION ALL SELECT rt1.c3 FROM rt1 WHERE (((0.9874986975541499) ISNULL));
SELECT ALL rt1.c3 FROM rt1;
SELECT DISTINCT vt64.c0, vt64.lid FROM vt64;
SELECT DISTINCT vt64.c0, vt64.lid FROM vt64 WHERE (CAST(vt64.c0 COLLATE NOCASE AS NUMERIC)) UNION SELECT DISTINCT vt64.c0, vt64.lid FROM vt64 WHERE ((NOT (CAST(vt64.c0 COLLATE NOCASE AS NUMERIC)))) UNION SELECT DISTINCT vt64.c0, vt64.lid FROM vt64 WHERE (((CAST(vt64.c0 COLLATE NOCASE AS NUMERIC)) ISNULL));
SELECT DISTINCT vt64.c0, vt64.lid FROM vt64;
SELECT rt1.c3, rt1.c4 FROM rt1, vt64 GROUP BY rt1.c3, rt1.c4;
SELECT ALL rt1.c3, rt1.c4 FROM rt1, vt64 WHERE (((((((rt1.c5)/(rt1.c2)))OR(((rt1.c6) IS FALSE))))OR(((((rt1.c5)AND(rt1.c1)))AND(rt1.c1))))) GROUP BY rt1.c3, rt1.c4 UNION SELECT ALL rt1.c3, rt1.c4 FROM rt1, vt64 WHERE ((NOT (((((((rt1.c5)/(rt1.c2)))OR(((rt1.c6) IS FALSE))))OR(((((rt1.c5)AND(rt1.c1)))AND(rt1.c1))))))) GROUP BY rt1.c3, rt1.c4 UNION SELECT rt1.c3, rt1.c4 FROM rt1, vt64 WHERE (((((((((rt1.c5)/(rt1.c2)))OR(((rt1.c6) IS FALSE))))OR(((((rt1.c5)AND(rt1.c1)))AND(rt1.c1))))) ISNULL)) GROUP BY rt1.c3, rt1.c4;
SELECT rt1.c3, rt1.c4 FROM rt1, vt64 GROUP BY rt1.c3, rt1.c4;
SELECT ALL rt1.c6 FROM rt1 GROUP BY rt1.c6;
SELECT ALL rt1.c6 FROM rt1 GROUP BY rt1.c6 HAVING GROUP_CONCAT(CASE COUNT(rt1.c2)  WHEN TOTAL(rt1.c1) THEN rt1.c4 END) UNION ALL SELECT ALL rt1.c6 FROM rt1 GROUP BY rt1.c6 HAVING (NOT (GROUP_CONCAT(CASE COUNT(rt1.c2)  WHEN TOTAL(rt1.c1) THEN rt1.c4 END))) UNION ALL SELECT ALL rt1.c6 FROM rt1 GROUP BY rt1.c6 HAVING ((GROUP_CONCAT(CASE COUNT(rt1.c2)  WHEN TOTAL(rt1.c1) THEN rt1.c4 END)) ISNULL);
SELECT rt1.c5, rt1.c6, rt1.c0, rt1.c3, vt64.lid, vt64.c0, rt1.c2 FROM rt1, vt64;
SELECT rt1.c5, rt1.c6, rt1.c0, rt1.c3, vt64.lid, vt64.c0, rt1.c2 FROM rt1, vt64 WHERE (ABS(rt1.c2) COLLATE NOCASE) UNION ALL SELECT rt1.c5, rt1.c6, rt1.c0, rt1.c3, vt64.lid, vt64.c0, rt1.c2 FROM rt1, vt64 WHERE ((NOT (ABS(rt1.c2) COLLATE NOCASE))) UNION ALL SELECT rt1.c5, rt1.c6, rt1.c0, rt1.c3, vt64.lid, vt64.c0, rt1.c2 FROM rt1, vt64 WHERE (((ABS(rt1.c2) COLLATE NOCASE) ISNULL));
SELECT rt1.c5, rt1.c6, rt1.c0, rt1.c3, vt64.lid, vt64.c0, rt1.c2 FROM rt1, vt64;
SELECT DISTINCT * FROM vt64;
SELECT DISTINCT * FROM vt64 WHERE ((((((vt64.c0, vt64.lid, vt64.lid))<((vt64.c0, vt64.c0, vt64.lid)))) ISNULL)) UNION SELECT DISTINCT * FROM vt64 WHERE ((NOT ((((((vt64.c0, vt64.lid, vt64.lid))<((vt64.c0, vt64.c0, vt64.lid)))) ISNULL)))) UNION SELECT DISTINCT * FROM vt64 WHERE ((((((((vt64.c0, vt64.lid, vt64.lid))<((vt64.c0, vt64.c0, vt64.lid)))) ISNULL)) ISNULL));
SELECT DISTINCT * FROM vt64;
SELECT rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1;
SELECT rt1.c2, rt1.c1 FROM rt1 WHERE (((rt1.c3 IN ()) IN ((rt1.c0 IN (0xffffffff8214e69a))))) GROUP BY rt1.c2, rt1.c1 UNION SELECT ALL rt1.c2, rt1.c1 FROM rt1 WHERE ((NOT (((rt1.c3 IN ()) IN ((rt1.c0 IN (0xffffffff8214e69a))))))) GROUP BY rt1.c2, rt1.c1 UNION SELECT rt1.c2, rt1.c1 FROM rt1 WHERE (((((rt1.c3 IN ()) IN ((rt1.c0 IN (0xffffffff8214e69a))))) ISNULL)) GROUP BY rt1.c2, rt1.c1;
SELECT rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1;
SELECT rt1.c4, rt1.c0, vt64.lid, rt1.c1, rt1.c6, rt1.c2 FROM rt1, vt64 GROUP BY rt1.c4, rt1.c0, vt64.lid, rt1.c1, rt1.c6, rt1.c2;
SELECT ALL rt1.c4, rt1.c0, vt64.lid, rt1.c1, rt1.c6, rt1.c2 FROM rt1, vt64 GROUP BY rt1.c4, rt1.c0, vt64.lid, rt1.c1, rt1.c6, rt1.c2 HAVING COUNT(NULL) UNION ALL SELECT ALL rt1.c4, rt1.c0, vt64.lid, rt1.c1, rt1.c6, rt1.c2 FROM rt1, vt64 GROUP BY rt1.c4, rt1.c0, vt64.lid, rt1.c1, rt1.c6, rt1.c2 HAVING (NOT (COUNT(NULL))) UNION ALL SELECT ALL rt1.c4, rt1.c0, vt64.lid, rt1.c1, rt1.c6, rt1.c2 FROM rt1, vt64 GROUP BY rt1.c4, rt1.c0, vt64.lid, rt1.c1, rt1.c6, rt1.c2 HAVING ((COUNT(NULL)) ISNULL);
SELECT rt1.c4, rt1.c0, vt64.lid, rt1.c1, rt1.c6, rt1.c2 FROM rt1, vt64 GROUP BY rt1.c4, rt1.c0, vt64.lid, rt1.c1, rt1.c6, rt1.c2;
SELECT ALL rt1.c4, rt1.c0, vt64.lid, rt1.c1, rt1.c6, rt1.c2 FROM rt1, vt64 GROUP BY rt1.c4, rt1.c0, vt64.lid, rt1.c1, rt1.c6, rt1.c2 HAVING COUNT(NULL) UNION ALL SELECT ALL rt1.c4, rt1.c0, vt64.lid, rt1.c1, rt1.c6, rt1.c2 FROM rt1, vt64 GROUP BY rt1.c4, rt1.c0, vt64.lid, rt1.c1, rt1.c6, rt1.c2 HAVING (NOT (COUNT(NULL))) UNION ALL SELECT ALL rt1.c4, rt1.c0, vt64.lid, rt1.c1, rt1.c6, rt1.c2 FROM rt1, vt64 GROUP BY rt1.c4, rt1.c0, vt64.lid, rt1.c1, rt1.c6, rt1.c2 HAVING ((COUNT(NULL)) ISNULL);
SELECT rt1.c4, rt1.c0, vt64.lid, rt1.c1, rt1.c6, rt1.c2 FROM rt1, vt64 GROUP BY rt1.c4, rt1.c0, vt64.lid, rt1.c1, rt1.c6, rt1.c2;
SELECT * FROM vt64;
SELECT ALL * FROM vt64 WHERE ((((vt64.lid, vt64.c0, vt64.c0)) BETWEEN (('-1012919441', x'', SUBSTR(vt64.lid, vt64.c0))) AND ((((vt64.lid) BETWEEN (vt64.lid) AND (vt64.lid)), CASE vt64.c0  WHEN vt64.c0 THEN 0.6960324684405428 WHEN x'2589' THEN vt64.c0 WHEN vt64.lid THEN vt64.c0 END, ((((vt64.c0)OR(vt64.lid)))OR(vt64.lid)))))) UNION ALL SELECT ALL * FROM vt64 WHERE ((NOT ((((vt64.lid, vt64.c0, vt64.c0)) BETWEEN (('-1012919441', x'', SUBSTR(vt64.lid, vt64.c0))) AND ((((vt64.lid) BETWEEN (vt64.lid) AND (vt64.lid)), CASE vt64.c0  WHEN vt64.c0 THEN 0.6960324684405428 WHEN x'2589' THEN vt64.c0 WHEN vt64.lid THEN vt64.c0 END, ((((vt64.c0)OR(vt64.lid)))OR(vt64.lid)))))))) UNION ALL SELECT * FROM vt64 WHERE ((((((vt64.lid, vt64.c0, vt64.c0)) BETWEEN (('-1012919441', x'', SUBSTR(vt64.lid, vt64.c0))) AND ((((vt64.lid) BETWEEN (vt64.lid) AND (vt64.lid)), CASE vt64.c0  WHEN vt64.c0 THEN 0.6960324684405428 WHEN x'2589' THEN vt64.c0 WHEN vt64.lid THEN vt64.c0 END, ((((vt64.c0)OR(vt64.lid)))OR(vt64.lid)))))) ISNULL));
SELECT * FROM vt64;
SELECT DISTINCT rt1.c1, rt1.c0, rt1.c3, rt1.c4, rt1.c5, vt64.lid FROM vt64, rt1;
SELECT DISTINCT rt1.c1, rt1.c0, rt1.c3, rt1.c4, rt1.c5, vt64.lid FROM vt64, rt1 WHERE (CASE WHEN CASE rt1.c3  WHEN 0Xfffffffff32878c5 THEN vt64.c0 WHEN rt1.c6 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c6 WHEN vt64.c0 THEN vt64.lid WHEN rt1.c6 THEN rt1.c0 ELSE rt1.c0 END THEN rt1.c4 COLLATE NOCASE ELSE (((rt1.c2))>((vt64.c0))) END) UNION SELECT DISTINCT rt1.c1, rt1.c0, rt1.c3, rt1.c4, rt1.c5, vt64.lid FROM vt64, rt1 WHERE ((NOT (CASE WHEN CASE rt1.c3  WHEN 0xfffffffff32878c5 THEN vt64.c0 WHEN rt1.c6 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c6 WHEN vt64.c0 THEN vt64.lid WHEN rt1.c6 THEN rt1.c0 ELSE rt1.c0 END THEN rt1.c4 COLLATE NOCASE ELSE (((rt1.c2))>((vt64.c0))) END))) UNION SELECT DISTINCT rt1.c1, rt1.c0, rt1.c3, rt1.c4, rt1.c5, vt64.lid FROM vt64, rt1 WHERE (((CASE WHEN CASE rt1.c3  WHEN 0Xfffffffff32878c5 THEN vt64.c0 WHEN rt1.c6 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c6 WHEN vt64.c0 THEN vt64.lid WHEN rt1.c6 THEN rt1.c0 ELSE rt1.c0 END THEN rt1.c4 COLLATE NOCASE ELSE (((rt1.c2))>((vt64.c0))) END) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c0, rt1.c3, rt1.c4, rt1.c5, vt64.lid FROM vt64, rt1;
SELECT vt64.c0, rt1.c3, rt1.c6, rt1.c0 FROM rt1, vt64 GROUP BY vt64.c0, rt1.c3, rt1.c6, rt1.c0;
SELECT vt64.c0, rt1.c3, rt1.c6, rt1.c0 FROM rt1, vt64 WHERE (rt1.c5) GROUP BY vt64.c0, rt1.c3, rt1.c6, rt1.c0 UNION SELECT vt64.c0, rt1.c3, rt1.c6, rt1.c0 FROM rt1, vt64 WHERE ((NOT (rt1.c5))) GROUP BY vt64.c0, rt1.c3, rt1.c6, rt1.c0 UNION SELECT vt64.c0, rt1.c3, rt1.c6, rt1.c0 FROM rt1, vt64 WHERE (((rt1.c5) ISNULL)) GROUP BY vt64.c0, rt1.c3, rt1.c6, rt1.c0;
SELECT vt64.c0, rt1.c3, rt1.c6, rt1.c0 FROM rt1, vt64 GROUP BY vt64.c0, rt1.c3, rt1.c6, rt1.c0;
SELECT vt64.lid, vt64.c0 FROM vt64 GROUP BY vt64.lid, vt64.c0;
SELECT ALL vt64.lid, vt64.c0 FROM vt64 GROUP BY vt64.lid, vt64.c0 HAVING COUNT(*) UNION ALL SELECT vt64.lid, vt64.c0 FROM vt64 GROUP BY vt64.lid, vt64.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt64.lid, vt64.c0 FROM vt64 GROUP BY vt64.lid, vt64.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt64.lid, vt64.c0 FROM vt64 GROUP BY vt64.lid, vt64.c0;
SELECT ALL vt64.lid, vt64.c0 FROM vt64 GROUP BY vt64.lid, vt64.c0 HAVING COUNT(*) UNION ALL SELECT vt64.lid, vt64.c0 FROM vt64 GROUP BY vt64.lid, vt64.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt64.lid, vt64.c0 FROM vt64 GROUP BY vt64.lid, vt64.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt64.lid, vt64.c0 FROM vt64 GROUP BY vt64.lid, vt64.c0;
SELECT * FROM rt1;
SELECT * FROM rt1 WHERE (rt1.c5) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT (rt1.c5))) UNION ALL SELECT ALL * FROM rt1 WHERE (((rt1.c5) ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT * FROM vt64;
SELECT DISTINCT * FROM vt64 WHERE (vt64.c0) UNION SELECT DISTINCT * FROM vt64 WHERE ((NOT (vt64.c0))) UNION SELECT DISTINCT * FROM vt64 WHERE (((vt64.c0) ISNULL));
SELECT DISTINCT * FROM vt64;
SELECT ALL rt1.c0, rt1.c3, vt64.lid, rt1.c5, rt1.c6, rt1.c4, vt64.c0 FROM rt1, vt64 GROUP BY rt1.c0, rt1.c3, vt64.lid, rt1.c5, rt1.c6, rt1.c4, vt64.c0;
SELECT ALL rt1.c0, rt1.c3, vt64.lid, rt1.c5, rt1.c6, rt1.c4, vt64.c0 FROM rt1, vt64 WHERE (((((rt1.c3) IS FALSE))&((vt64.c0 IN (rt1.c0))))) GROUP BY rt1.c0, rt1.c3, vt64.lid, rt1.c5, rt1.c6, rt1.c4, vt64.c0 UNION SELECT ALL rt1.c0, rt1.c3, vt64.lid, rt1.c5, rt1.c6, rt1.c4, vt64.c0 FROM rt1, vt64 WHERE ((NOT (((((rt1.c3) IS FALSE))&((vt64.c0 IN (rt1.c0))))))) GROUP BY rt1.c0, rt1.c3, vt64.lid, rt1.c5, rt1.c6, rt1.c4, vt64.c0 UNION SELECT rt1.c0, rt1.c3, vt64.lid, rt1.c5, rt1.c6, rt1.c4, vt64.c0 FROM rt1, vt64 WHERE (((((((rt1.c3) IS FALSE))&((vt64.c0 IN (rt1.c0))))) ISNULL)) GROUP BY rt1.c0, rt1.c3, vt64.lid, rt1.c5, rt1.c6, rt1.c4, vt64.c0;
SELECT ALL rt1.c0, rt1.c3, vt64.lid, rt1.c5, rt1.c6, rt1.c4, vt64.c0 FROM rt1, vt64 GROUP BY rt1.c0, rt1.c3, vt64.lid, rt1.c5, rt1.c6, rt1.c4, vt64.c0;
SELECT ALL rt1.c6, rt1.c4, rt1.c0, rt1.c1, rt1.c5 FROM rt1 GROUP BY rt1.c6, rt1.c4, rt1.c0, rt1.c1, rt1.c5;
SELECT ALL rt1.c6, rt1.c4, rt1.c0, rt1.c1, rt1.c5 FROM rt1 GROUP BY rt1.c6, rt1.c4, rt1.c0, rt1.c1, rt1.c5 HAVING MAX(MIN(MAX(rt1.c4))) UNION ALL SELECT ALL rt1.c6, rt1.c4, rt1.c0, rt1.c1, rt1.c5 FROM rt1 GROUP BY rt1.c6, rt1.c4, rt1.c0, rt1.c1, rt1.c5 HAVING (NOT (MAX(MIN(MAX(rt1.c4))))) UNION ALL SELECT ALL rt1.c6, rt1.c4, rt1.c0, rt1.c1, rt1.c5 FROM rt1 GROUP BY rt1.c6, rt1.c4, rt1.c0, rt1.c1, rt1.c5 HAVING ((MAX(MIN(MAX(rt1.c4)))) ISNULL);
SELECT ALL * FROM vt64;
SELECT * FROM vt64 WHERE ((((vt64.lid IN (vt64.lid, vt64.lid)))>(CAST(vt64.c0 AS INTEGER)))) UNION ALL SELECT * FROM vt64 WHERE ((NOT ((((vt64.lid IN (vt64.lid, vt64.lid)))>(CAST(vt64.c0 AS INTEGER)))))) UNION ALL SELECT ALL * FROM vt64 WHERE ((((((vt64.lid IN (vt64.lid, vt64.lid)))>(CAST(vt64.c0 AS INTEGER)))) ISNULL));
SELECT ALL * FROM vt64;
SELECT DISTINCT * FROM vt64, rt1;
SELECT DISTINCT * FROM vt64, rt1 WHERE (((((((((((rt1.c6) BETWEEN (rt1.c2) AND (rt1.c4)))OR(CAST(rt1.c4 AS REAL))))AND(((rt1.c4) NOT NULL))))AND(((((vt64.lid)OR(rt1.c6)))AND(rt1.c6)))))OR(rt1.c0 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt64, rt1 WHERE ((NOT (((((((((((rt1.c6) BETWEEN (rt1.c2) AND (rt1.c4)))OR(CAST(rt1.c4 AS REAL))))AND(((rt1.c4) NOT NULL))))AND(((((vt64.lid)OR(rt1.c6)))AND(rt1.c6)))))OR(rt1.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT * FROM vt64, rt1 WHERE (((((((((((((rt1.c6) BETWEEN (rt1.c2) AND (rt1.c4)))OR(CAST(rt1.c4 AS REAL))))AND(((rt1.c4) NOT NULL))))AND(((((vt64.lid)OR(rt1.c6)))AND(rt1.c6)))))OR(rt1.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT * FROM vt64, rt1;
SELECT vt64.c0 FROM vt64 GROUP BY vt64.c0;
SELECT ALL vt64.c0 FROM vt64 WHERE (vt64.lid) GROUP BY vt64.c0 UNION SELECT vt64.c0 FROM vt64 WHERE ((NOT (vt64.lid))) GROUP BY vt64.c0 UNION SELECT ALL vt64.c0 FROM vt64 WHERE (((vt64.lid) ISNULL)) GROUP BY vt64.c0;
SELECT vt64.c0 FROM vt64 GROUP BY vt64.c0;
SELECT vt64.lid, vt64.c0 FROM vt64 GROUP BY vt64.lid, vt64.c0;
SELECT vt64.lid, vt64.c0 FROM vt64 GROUP BY vt64.lid, vt64.c0 HAVING x'' UNION ALL SELECT vt64.lid, vt64.c0 FROM vt64 GROUP BY vt64.lid, vt64.c0 HAVING (NOT (x'')) UNION ALL SELECT ALL vt64.lid, vt64.c0 FROM vt64 GROUP BY vt64.lid, vt64.c0 HAVING ((x'') ISNULL);
SELECT vt64.lid, vt64.c0 FROM vt64 GROUP BY vt64.lid, vt64.c0;
SELECT vt64.lid, vt64.c0 FROM vt64 GROUP BY vt64.lid, vt64.c0 HAVING x'' UNION ALL SELECT vt64.lid, vt64.c0 FROM vt64 GROUP BY vt64.lid, vt64.c0 HAVING (NOT (x'')) UNION ALL SELECT ALL vt64.lid, vt64.c0 FROM vt64 GROUP BY vt64.lid, vt64.c0 HAVING ((x'') ISNULL);
SELECT vt64.lid, vt64.c0 FROM vt64 GROUP BY vt64.lid, vt64.c0;
SELECT ALL rt1.c0 FROM rt1, vt64 NOT INDEXED;
SELECT rt1.c0 FROM rt1, vt64 WHERE (CASE ((rt1.c4) NOT BETWEEN (rt1.c2) AND (rt1.c4))  WHEN ((rt1.c1)IS NOT(rt1.c0)) THEN rt1.c6 COLLATE RTRIM END) UNION ALL SELECT ALL rt1.c0 FROM rt1, vt64 WHERE ((NOT (CASE ((rt1.c4) NOT BETWEEN (rt1.c2) AND (rt1.c4))  WHEN ((rt1.c1)IS NOT(rt1.c0)) THEN rt1.c6 COLLATE RTRIM END))) UNION ALL SELECT rt1.c0 FROM rt1, vt64 WHERE (((CASE ((rt1.c4) NOT BETWEEN (rt1.c2) AND (rt1.c4))  WHEN ((rt1.c1)IS NOT(rt1.c0)) THEN rt1.c6 COLLATE RTRIM END) ISNULL));
SELECT ALL rt1.c0 FROM rt1, vt64 NOT INDEXED;
SELECT DISTINCT rt1.c5, rt1.c1, rt1.c2, rt1.c6, rt1.c3 FROM rt1;
SELECT DISTINCT rt1.c5, rt1.c1, rt1.c2, rt1.c6, rt1.c3 FROM rt1 WHERE (CASE CAST(rt1.c2 AS TEXT)  WHEN rt1.c4 THEN CAST(rt1.c3 AS TEXT) END) UNION SELECT DISTINCT rt1.c5, rt1.c1, rt1.c2, rt1.c6, rt1.c3 FROM rt1 WHERE ((NOT (CASE CAST(rt1.c2 AS TEXT)  WHEN rt1.c4 THEN CAST(rt1.c3 AS TEXT) END))) UNION SELECT DISTINCT rt1.c5, rt1.c1, rt1.c2, rt1.c6, rt1.c3 FROM rt1 WHERE (((CASE CAST(rt1.c2 AS TEXT)  WHEN rt1.c4 THEN CAST(rt1.c3 AS TEXT) END) ISNULL));
SELECT DISTINCT rt1.c5, rt1.c1, rt1.c2, rt1.c6, rt1.c3 FROM rt1;
SELECT ALL rt1.c4, vt64.c0, vt64.lid, rt1.c5, rt1.c2, rt1.c0 FROM vt64, rt1 GROUP BY rt1.c4, vt64.c0, vt64.lid, rt1.c5, rt1.c2, rt1.c0;
SELECT rt1.c4, vt64.c0, vt64.lid, rt1.c5, rt1.c2, rt1.c0 FROM vt64, rt1 WHERE ((- (rt1.c1)) COLLATE NOCASE) GROUP BY rt1.c4, vt64.c0, vt64.lid, rt1.c5, rt1.c2, rt1.c0 UNION SELECT ALL rt1.c4, vt64.c0, vt64.lid, rt1.c5, rt1.c2, rt1.c0 FROM vt64, rt1 WHERE ((NOT ((- (rt1.c1)) COLLATE NOCASE))) GROUP BY rt1.c4, vt64.c0, vt64.lid, rt1.c5, rt1.c2, rt1.c0 UNION SELECT rt1.c4, vt64.c0, vt64.lid, rt1.c5, rt1.c2, rt1.c0 FROM vt64, rt1 WHERE ((((- (rt1.c1)) COLLATE NOCASE) ISNULL)) GROUP BY rt1.c4, vt64.c0, vt64.lid, rt1.c5, rt1.c2, rt1.c0;
SELECT ALL rt1.c4, vt64.c0, vt64.lid, rt1.c5, rt1.c2, rt1.c0 FROM vt64, rt1 GROUP BY rt1.c4, vt64.c0, vt64.lid, rt1.c5, rt1.c2, rt1.c0;
SELECT rt1.c4, rt1.c5, rt1.c6, rt1.c2, vt64.c0, rt1.c0, rt1.c1, vt64.lid, rt1.c3 FROM vt64, rt1 GROUP BY rt1.c4, rt1.c5, rt1.c6, rt1.c2, vt64.c0, rt1.c0, rt1.c1, vt64.lid, rt1.c3;
SELECT rt1.c4, rt1.c5, rt1.c6, rt1.c2, vt64.c0, rt1.c0, rt1.c1, vt64.lid, rt1.c3 FROM vt64, rt1 GROUP BY rt1.c4, rt1.c5, rt1.c6, rt1.c2, vt64.c0, rt1.c0, rt1.c1, vt64.lid, rt1.c3 HAVING MAX(AVG(rt1.c5)) UNION ALL SELECT rt1.c4, rt1.c5, rt1.c6, rt1.c2, vt64.c0, rt1.c0, rt1.c1, vt64.lid, rt1.c3 FROM vt64, rt1 NOT INDEXED GROUP BY rt1.c4, rt1.c5, rt1.c6, rt1.c2, vt64.c0, rt1.c0, rt1.c1, vt64.lid, rt1.c3 HAVING (NOT (MAX(AVG(rt1.c5)))) UNION ALL SELECT rt1.c4, rt1.c5, rt1.c6, rt1.c2, vt64.c0, rt1.c0, rt1.c1, vt64.lid, rt1.c3 FROM vt64, rt1 GROUP BY rt1.c4, rt1.c5, rt1.c6, rt1.c2, vt64.c0, rt1.c0, rt1.c1, vt64.lid, rt1.c3 HAVING ((MAX(AVG(rt1.c5))) ISNULL);
SELECT SUM(((vt64.c0)<(vt64.c0)) COLLATE NOCASE) FROM vt64 ORDER BY ((vt64.lid) BETWEEN (vt64.c0) AND (vt64.lid)) COLLATE BINARY  NULLS LAST;
SELECT ALL * FROM vt64;
SELECT * FROM vt64 WHERE (((vt64.c0)IS(vt64.c0)) COLLATE NOCASE) UNION ALL SELECT ALL * FROM vt64 WHERE ((NOT (((vt64.c0)IS(vt64.c0)) COLLATE NOCASE))) UNION ALL SELECT ALL * FROM vt64 WHERE (((((vt64.c0)IS(vt64.c0)) COLLATE NOCASE) ISNULL));
SELECT ALL * FROM vt64;
SELECT DISTINCT rt1.c2, rt1.c1, rt1.c0 FROM vt64, rt1;
SELECT DISTINCT rt1.c2, rt1.c1, rt1.c0 FROM vt64, rt1 WHERE ((+ ((+ (vt64.lid))))) UNION SELECT DISTINCT rt1.c2, rt1.c1, rt1.c0 FROM vt64, rt1 WHERE ((NOT ((+ ((+ (vt64.lid))))))) UNION SELECT DISTINCT rt1.c2, rt1.c1, rt1.c0 FROM vt64, rt1 WHERE ((((+ ((+ (vt64.lid))))) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c1, rt1.c0 FROM vt64, rt1;
SELECT ALL rt1.c0, rt1.c5, rt1.c1, rt1.c6, rt1.c4, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c5, rt1.c1, rt1.c6, rt1.c4, rt1.c2;
SELECT ALL rt1.c0, rt1.c5, rt1.c1, rt1.c6, rt1.c4, rt1.c2 FROM rt1 WHERE (((((rt1.c1) NOT BETWEEN ('0.1150322836784905') AND (rt1.c6)))||(((rt1.c2) NOT BETWEEN (rt1.c6) AND (rt1.c2))))) GROUP BY rt1.c0, rt1.c5, rt1.c1, rt1.c6, rt1.c4, rt1.c2 UNION SELECT ALL rt1.c0, rt1.c5, rt1.c1, rt1.c6, rt1.c4, rt1.c2 FROM rt1 WHERE ((NOT (((((rt1.c1) NOT BETWEEN ('0.1150322836784905') AND (rt1.c6)))||(((rt1.c2) NOT BETWEEN (rt1.c6) AND (rt1.c2))))))) GROUP BY rt1.c0, rt1.c5, rt1.c1, rt1.c6, rt1.c4, rt1.c2 UNION SELECT ALL rt1.c0, rt1.c5, rt1.c1, rt1.c6, rt1.c4, rt1.c2 FROM rt1 WHERE (((((((rt1.c1) NOT BETWEEN ('0.1150322836784905') AND (rt1.c6)))||(((rt1.c2) NOT BETWEEN (rt1.c6) AND (rt1.c2))))) ISNULL)) GROUP BY rt1.c0, rt1.c5, rt1.c1, rt1.c6, rt1.c4, rt1.c2;
SELECT ALL rt1.c0, rt1.c5, rt1.c1, rt1.c6, rt1.c4, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c5, rt1.c1, rt1.c6, rt1.c4, rt1.c2;
SELECT ALL rt1.c0, rt1.c4, rt1.c1, rt1.c2, rt1.c5, rt1.c3 FROM rt1 GROUP BY rt1.c0, rt1.c4, rt1.c1, rt1.c2, rt1.c5, rt1.c3;
SELECT rt1.c0, rt1.c4, rt1.c1, rt1.c2, rt1.c5, rt1.c3 FROM rt1 GROUP BY rt1.c0, rt1.c4, rt1.c1, rt1.c2, rt1.c5, rt1.c3 HAVING AVG(SUM(rt1.c4)) UNION ALL SELECT rt1.c0, rt1.c4, rt1.c1, rt1.c2, rt1.c5, rt1.c3 FROM rt1 GROUP BY rt1.c0, rt1.c4, rt1.c1, rt1.c2, rt1.c5, rt1.c3 HAVING (NOT (AVG(SUM(rt1.c4)))) UNION ALL SELECT ALL rt1.c0, rt1.c4, rt1.c1, rt1.c2, rt1.c5, rt1.c3 FROM rt1 GROUP BY rt1.c0, rt1.c4, rt1.c1, rt1.c2, rt1.c5, rt1.c3 HAVING ((AVG(SUM(rt1.c4))) ISNULL);
SELECT ALL vt64.c0 FROM vt64;
SELECT vt64.c0 FROM vt64 WHERE (((((x'')&(vt64.c0))) BETWEEN (vt64.lid COLLATE BINARY) AND ((NOT (vt64.c0))))) UNION ALL SELECT ALL vt64.c0 FROM vt64 WHERE ((NOT (((((x'')&(vt64.c0))) BETWEEN (vt64.lid COLLATE BINARY) AND ((NOT (vt64.c0))))))) UNION ALL SELECT vt64.c0 FROM vt64 WHERE (((((((x'')&(vt64.c0))) BETWEEN (vt64.lid COLLATE BINARY) AND ((NOT (vt64.c0))))) ISNULL));
SELECT ALL vt64.c0 FROM vt64;
SELECT DISTINCT vt64.lid, vt64.c0 FROM vt64 NOT INDEXED;
SELECT DISTINCT vt64.lid, vt64.c0 FROM vt64 WHERE (LIKELY((vt64.lid IN ()))) UNION SELECT DISTINCT vt64.lid, vt64.c0 FROM vt64 WHERE ((NOT (LIKELY((vt64.lid IN ()))))) UNION SELECT DISTINCT vt64.lid, vt64.c0 FROM vt64 WHERE (((LIKELY((vt64.lid IN ()))) ISNULL));
SELECT DISTINCT vt64.lid, vt64.c0 FROM vt64 NOT INDEXED;
SELECT rt1.c3, rt1.c2, vt64.lid FROM rt1, vt64 GROUP BY rt1.c3, rt1.c2, vt64.lid;
SELECT rt1.c3, rt1.c2, vt64.lid FROM rt1, vt64 WHERE ((((rt1.c5 IN ())) NOT BETWEEN ((~ (rt1.c4))) AND ((((rt1.c6))>=((rt1.c1)))))) GROUP BY rt1.c3, rt1.c2, vt64.lid UNION SELECT ALL rt1.c3, rt1.c2, vt64.lid FROM rt1, vt64 NOT INDEXED WHERE ((NOT ((((rt1.c5 IN ())) NOT BETWEEN ((~ (rt1.c4))) AND ((((rt1.c6))>=((rt1.c1)))))))) GROUP BY rt1.c3, rt1.c2, vt64.lid UNION SELECT ALL rt1.c3, rt1.c2, vt64.lid FROM rt1, vt64 WHERE ((((((rt1.c5 IN ())) NOT BETWEEN ((~ (rt1.c4))) AND ((((rt1.c6))>=((rt1.c1)))))) ISNULL)) GROUP BY rt1.c3, rt1.c2, vt64.lid;
SELECT rt1.c3, rt1.c2, vt64.lid FROM rt1, vt64 GROUP BY rt1.c3, rt1.c2, vt64.lid;
SELECT ALL rt1.c6, rt1.c0, rt1.c3, rt1.c2 FROM rt1 GROUP BY rt1.c6, rt1.c0, rt1.c3, rt1.c2;
SELECT rt1.c6, rt1.c0, rt1.c3, rt1.c2 FROM rt1 GROUP BY rt1.c6, rt1.c0, rt1.c3, rt1.c2 HAVING (((CAST(GROUP_CONCAT(rt1.c5) AS INTEGER)))==((LIKELIHOOD(rt1.c2, 0.1888952782492611)))) UNION ALL SELECT ALL rt1.c6, rt1.c0, rt1.c3, rt1.c2 FROM rt1 GROUP BY rt1.c6, rt1.c0, rt1.c3, rt1.c2 HAVING (NOT ((((CAST(GROUP_CONCAT(rt1.c5) AS INTEGER)))==((LIKELIHOOD(rt1.c2, 0.1888952782492611)))))) UNION ALL SELECT rt1.c6, rt1.c0, rt1.c3, rt1.c2 FROM rt1 GROUP BY rt1.c6, rt1.c0, rt1.c3, rt1.c2 HAVING (((((CAST(GROUP_CONCAT(rt1.c5) AS INTEGER)))==((LIKELIHOOD(rt1.c2, 0.1888952782492611))))) ISNULL);
SELECT ALL rt1.c6, rt1.c0, rt1.c3, rt1.c2 FROM rt1 GROUP BY rt1.c6, rt1.c0, rt1.c3, rt1.c2;
SELECT rt1.c6, rt1.c0, rt1.c3, rt1.c2 FROM rt1 GROUP BY rt1.c6, rt1.c0, rt1.c3, rt1.c2 HAVING (((CAST(GROUP_CONCAT(rt1.c5) AS INTEGER)))==((LIKELIHOOD(rt1.c2, 0.1888952782492611)))) UNION ALL SELECT ALL rt1.c6, rt1.c0, rt1.c3, rt1.c2 FROM rt1 GROUP BY rt1.c6, rt1.c0, rt1.c3, rt1.c2 HAVING (NOT ((((CAST(GROUP_CONCAT(rt1.c5) AS INTEGER)))==((LIKELIHOOD(rt1.c2, 0.1888952782492611)))))) UNION ALL SELECT rt1.c6, rt1.c0, rt1.c3, rt1.c2 FROM rt1 GROUP BY rt1.c6, rt1.c0, rt1.c3, rt1.c2 HAVING (((((CAST(GROUP_CONCAT(rt1.c5) AS INTEGER)))==((LIKELIHOOD(rt1.c2, 0.1888952782492611))))) ISNULL);
SELECT ALL rt1.c6, rt1.c0, rt1.c3, rt1.c2 FROM rt1 GROUP BY rt1.c6, rt1.c0, rt1.c3, rt1.c2;
SELECT ALL * FROM rt1, vt64;
SELECT * FROM rt1, vt64 WHERE (((((rt1.c2)%(rt1.c5))) NOT BETWEEN (ABS(DISTINCT 0.06963149136866198)) AND ('C䑯e03\rj%5'))) UNION ALL SELECT ALL * FROM rt1, vt64 WHERE ((NOT (((((rt1.c2)%(rt1.c5))) NOT BETWEEN (ABS(DISTINCT 0.06963149136866198)) AND ('C䑯e03\rj%5'))))) UNION ALL SELECT ALL * FROM rt1, vt64 WHERE (((((((rt1.c2)%(rt1.c5))) NOT BETWEEN (ABS(DISTINCT 0.06963149136866198)) AND ('C䑯e03\rj%5'))) ISNULL));
SELECT ALL * FROM rt1, vt64;
SELECT DISTINCT * FROM rt1, vt64;
SELECT DISTINCT * FROM rt1, vt64 WHERE ((((vt64.c0 IN ())) NOT NULL)) UNION SELECT DISTINCT * FROM rt1, vt64 WHERE ((NOT ((((vt64.c0 IN ())) NOT NULL)))) UNION SELECT DISTINCT * FROM rt1, vt64 WHERE ((((((vt64.c0 IN ())) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM rt1, vt64;
SELECT ALL rt1.c5, rt1.c0, rt1.c1, rt1.c3, rt1.c4, rt1.c6, rt1.c2 FROM rt1 GROUP BY rt1.c5, rt1.c0, rt1.c1, rt1.c3, rt1.c4, rt1.c6, rt1.c2;
SELECT ALL rt1.c5, rt1.c0, rt1.c1, rt1.c3, rt1.c4, rt1.c6, rt1.c2 FROM rt1 WHERE ((CASE WHEN rt1.c1 THEN NULL WHEN rt1.c6 THEN '' WHEN rt1.c5 THEN 0.4125044350946746 ELSE rt1.c6 END IN ())) GROUP BY rt1.c5, rt1.c0, rt1.c1, rt1.c3, rt1.c4, rt1.c6, rt1.c2 UNION SELECT ALL rt1.c5, rt1.c0, rt1.c1, rt1.c3, rt1.c4, rt1.c6, rt1.c2 FROM rt1 WHERE ((NOT ((CASE WHEN rt1.c1 THEN NULL WHEN rt1.c6 THEN '' WHEN rt1.c5 THEN 0.4125044350946746 ELSE rt1.c6 END IN ())))) GROUP BY rt1.c5, rt1.c0, rt1.c1, rt1.c3, rt1.c4, rt1.c6, rt1.c2 UNION SELECT ALL rt1.c5, rt1.c0, rt1.c1, rt1.c3, rt1.c4, rt1.c6, rt1.c2 FROM rt1 WHERE ((((CASE WHEN rt1.c1 THEN NULL WHEN rt1.c6 THEN '' WHEN rt1.c5 THEN 0.4125044350946746 ELSE rt1.c6 END IN ())) ISNULL)) GROUP BY rt1.c5, rt1.c0, rt1.c1, rt1.c3, rt1.c4, rt1.c6, rt1.c2;
SELECT ALL rt1.c5, rt1.c0, rt1.c1, rt1.c3, rt1.c4, rt1.c6, rt1.c2 FROM rt1 GROUP BY rt1.c5, rt1.c0, rt1.c1, rt1.c3, rt1.c4, rt1.c6, rt1.c2;
SELECT rt1.c5, vt64.lid, rt1.c0, vt64.c0, rt1.c3, rt1.c2, rt1.c6, rt1.c4 FROM vt64, rt1 GROUP BY rt1.c5, vt64.lid, rt1.c0, vt64.c0, rt1.c3, rt1.c2, rt1.c6, rt1.c4;
SELECT rt1.c5, vt64.lid, rt1.c0, vt64.c0, rt1.c3, rt1.c2, rt1.c6, rt1.c4 FROM vt64, rt1 GROUP BY rt1.c5, vt64.lid, rt1.c0, vt64.c0, rt1.c3, rt1.c2, rt1.c6, rt1.c4 HAVING AVG(CASE vt64.lid  WHEN GROUP_CONCAT(rt1.c2) THEN MAX(TOTAL(COUNT(*))) ELSE rt1.c3 END) UNION ALL SELECT ALL rt1.c5, vt64.lid, rt1.c0, vt64.c0, rt1.c3, rt1.c2, rt1.c6, rt1.c4 FROM vt64, rt1 GROUP BY rt1.c5, vt64.lid, rt1.c0, vt64.c0, rt1.c3, rt1.c2, rt1.c6, rt1.c4 HAVING (NOT (AVG(CASE vt64.lid  WHEN GROUP_CONCAT(rt1.c2) THEN MAX(TOTAL(COUNT(*))) ELSE rt1.c3 END))) UNION ALL SELECT rt1.c5, vt64.lid, rt1.c0, vt64.c0, rt1.c3, rt1.c2, rt1.c6, rt1.c4 FROM vt64, rt1 GROUP BY rt1.c5, vt64.lid, rt1.c0, vt64.c0, rt1.c3, rt1.c2, rt1.c6, rt1.c4 HAVING ((AVG(CASE vt64.lid  WHEN GROUP_CONCAT(rt1.c2) THEN MAX(TOTAL(COUNT(*))) ELSE rt1.c3 END)) ISNULL);
SELECT rt1.c1, rt1.c5, rt1.c3, rt1.c2, rt1.c0, vt64.c0, rt1.c4 FROM rt1 INNER JOIN vt64 ON CASE WHEN ((rt1.c4)/(rt1.c5)) THEN NULLIF(rt1.c5, rt1.c5) END;
SELECT rt1.c1, rt1.c5, rt1.c3, rt1.c2, rt1.c0, vt64.c0, rt1.c4 FROM rt1 INNER JOIN vt64 ON CASE WHEN ((rt1.c4)/(rt1.c5)) THEN NULLIF(rt1.c5, rt1.c5) END WHERE (rt1.c4) UNION ALL SELECT rt1.c1, rt1.c5, rt1.c3, rt1.c2, rt1.c0, vt64.c0, rt1.c4 FROM rt1 INNER JOIN vt64 ON CASE WHEN ((rt1.c4)/(rt1.c5)) THEN NULLIF(rt1.c5, rt1.c5) END WHERE ((NOT (rt1.c4))) UNION ALL SELECT rt1.c1, rt1.c5, rt1.c3, rt1.c2, rt1.c0, vt64.c0, rt1.c4 FROM rt1 INNER JOIN vt64 ON CASE WHEN ((rt1.c4)/(rt1.c5)) THEN NULLIF(rt1.c5, rt1.c5) END WHERE (((rt1.c4) ISNULL));
SELECT rt1.c1, rt1.c5, rt1.c3, rt1.c2, rt1.c0, vt64.c0, rt1.c4 FROM rt1 INNER JOIN vt64 ON CASE WHEN ((rt1.c4)/(rt1.c5)) THEN NULLIF(rt1.c5, rt1.c5) END;
SELECT DISTINCT vt64.lid, rt1.c0, vt64.c0, rt1.c3, rt1.c2 FROM vt64, rt1;
SELECT DISTINCT vt64.lid, rt1.c0, vt64.c0, rt1.c3, rt1.c2 FROM vt64, rt1 WHERE (CAST(rt1.c2 COLLATE NOCASE AS INTEGER)) UNION SELECT DISTINCT vt64.lid, rt1.c0, vt64.c0, rt1.c3, rt1.c2 FROM vt64, rt1 WHERE ((NOT (CAST(rt1.c2 COLLATE NOCASE AS INTEGER)))) UNION SELECT DISTINCT vt64.lid, rt1.c0, vt64.c0, rt1.c3, rt1.c2 FROM vt64, rt1 WHERE (((CAST(rt1.c2 COLLATE NOCASE AS INTEGER)) ISNULL));
SELECT DISTINCT vt64.lid, rt1.c0, vt64.c0, rt1.c3, rt1.c2 FROM vt64, rt1;
SELECT rt1.c6, rt1.c3, rt1.c2, rt1.c0, rt1.c4, vt64.c0, rt1.c1 FROM vt64 FULL OUTER JOIN rt1 ON ((vt64.lid COLLATE NOCASE)+('-1372782480')) GROUP BY rt1.c6, rt1.c3, rt1.c2, rt1.c0, rt1.c4, vt64.c0, rt1.c1;
SELECT ALL rt1.c6, rt1.c3, rt1.c2, rt1.c0, rt1.c4, vt64.c0, rt1.c1 FROM vt64 FULL OUTER JOIN rt1 ON ((vt64.lid COLLATE NOCASE)+('-1372782480')) WHERE (TRIM(rt1.c3 COLLATE NOCASE)) GROUP BY rt1.c6, rt1.c3, rt1.c2, rt1.c0, rt1.c4, vt64.c0, rt1.c1 UNION SELECT rt1.c6, rt1.c3, rt1.c2, rt1.c0, rt1.c4, vt64.c0, rt1.c1 FROM vt64 FULL OUTER JOIN rt1 ON ((vt64.lid COLLATE NOCASE)+('-1372782480')) WHERE ((NOT (TRIM(rt1.c3 COLLATE NOCASE)))) GROUP BY rt1.c6, rt1.c3, rt1.c2, rt1.c0, rt1.c4, vt64.c0, rt1.c1 UNION SELECT rt1.c6, rt1.c3, rt1.c2, rt1.c0, rt1.c4, vt64.c0, rt1.c1 FROM vt64 FULL OUTER JOIN rt1 ON ((vt64.lid COLLATE NOCASE)+('-1372782480')) WHERE (((TRIM(rt1.c3 COLLATE NOCASE)) ISNULL)) GROUP BY rt1.c6, rt1.c3, rt1.c2, rt1.c0, rt1.c4, vt64.c0, rt1.c1;
SELECT rt1.c6, rt1.c3, rt1.c2, rt1.c0, rt1.c4, vt64.c0, rt1.c1 FROM vt64 FULL OUTER JOIN rt1 ON ((vt64.lid COLLATE NOCASE)+('-1372782480')) GROUP BY rt1.c6, rt1.c3, rt1.c2, rt1.c0, rt1.c4, vt64.c0, rt1.c1;
SELECT rt1.c3, rt1.c2, rt1.c5, rt1.c4, rt1.c0 FROM vt64, rt1 GROUP BY rt1.c3, rt1.c2, rt1.c5, rt1.c4, rt1.c0;
SELECT rt1.c3, rt1.c2, rt1.c5, rt1.c4, rt1.c0 FROM vt64, rt1 GROUP BY rt1.c3, rt1.c2, rt1.c5, rt1.c4, rt1.c0 HAVING TOTAL('s价k HZ') UNION ALL SELECT rt1.c3, rt1.c2, rt1.c5, rt1.c4, rt1.c0 FROM vt64, rt1 GROUP BY rt1.c3, rt1.c2, rt1.c5, rt1.c4, rt1.c0 HAVING (NOT (TOTAL('s价k HZ'))) UNION ALL SELECT rt1.c3, rt1.c2, rt1.c5, rt1.c4, rt1.c0 FROM vt64, rt1 GROUP BY rt1.c3, rt1.c2, rt1.c5, rt1.c4, rt1.c0 HAVING ((TOTAL('s价k HZ')) ISNULL);
SELECT rt1.c3, rt1.c2, rt1.c5, rt1.c4, rt1.c0 FROM vt64, rt1 GROUP BY rt1.c3, rt1.c2, rt1.c5, rt1.c4, rt1.c0;
SELECT rt1.c3, rt1.c2, rt1.c5, rt1.c4, rt1.c0 FROM vt64, rt1 GROUP BY rt1.c3, rt1.c2, rt1.c5, rt1.c4, rt1.c0 HAVING TOTAL('s价k HZ') UNION ALL SELECT rt1.c3, rt1.c2, rt1.c5, rt1.c4, rt1.c0 FROM vt64, rt1 GROUP BY rt1.c3, rt1.c2, rt1.c5, rt1.c4, rt1.c0 HAVING (NOT (TOTAL('s价k HZ'))) UNION ALL SELECT rt1.c3, rt1.c2, rt1.c5, rt1.c4, rt1.c0 FROM vt64, rt1 GROUP BY rt1.c3, rt1.c2, rt1.c5, rt1.c4, rt1.c0 HAVING ((TOTAL('s价k HZ')) ISNULL);
SELECT rt1.c3, rt1.c2, rt1.c5, rt1.c4, rt1.c0 FROM vt64, rt1 GROUP BY rt1.c3, rt1.c2, rt1.c5, rt1.c4, rt1.c0;
SELECT MIN(CASE LIKELY(rt1.c1)  WHEN ((rt1.c0) BETWEEN (rt1.c5) AND (rt1.c5)) THEN ((rt1.c3) IS FALSE) WHEN CASE WHEN rt1.c1 THEN rt1.c5 END THEN (rt1.c6 IN ()) WHEN ((rt1.c2) NOTNULL) THEN ((rt1.c2)>>(rt1.c6)) END) FROM rt1;
SELECT * FROM rt1 FULL OUTER JOIN vt64 ON (((CAST(rt1.c5 AS TEXT)))=((((((((((rt1.c3)AND(0.8041490013873582)))OR(rt1.c1)))AND(vt64.c0)))AND(vt64.lid)))));
SELECT * FROM rt1 FULL OUTER JOIN vt64 ON (((CAST(rt1.c5 AS TEXT)))=((((((((((rt1.c3)AND(0.8041490013873582)))OR(rt1.c1)))AND(vt64.c0)))AND(vt64.lid))))) WHERE (((rt1.c6 COLLATE BINARY)!=(((vt64.lid) BETWEEN (x'') AND (rt1.c2))))) UNION ALL SELECT * FROM rt1 FULL OUTER JOIN vt64 ON (((CAST(rt1.c5 AS TEXT)))==((((((((((rt1.c3)AND(0.8041490013873582)))OR(rt1.c1)))AND(vt64.c0)))AND(vt64.lid))))) WHERE ((NOT (((rt1.c6 COLLATE BINARY)!=(((vt64.lid) BETWEEN (x'') AND (rt1.c2))))))) UNION ALL SELECT * FROM rt1 FULL OUTER JOIN vt64 ON (((CAST(rt1.c5 AS TEXT)))=((((((((((rt1.c3)AND(0.8041490013873582)))OR(rt1.c1)))AND(vt64.c0)))AND(vt64.lid))))) WHERE (((((rt1.c6 COLLATE BINARY)!=(((vt64.lid) BETWEEN (x'') AND (rt1.c2))))) ISNULL));
SELECT * FROM rt1 FULL OUTER JOIN vt64 ON (((CAST(rt1.c5 AS TEXT)))=((((((((((rt1.c3)AND(0.8041490013873582)))OR(rt1.c1)))AND(vt64.c0)))AND(vt64.lid)))));
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (rt1.c2) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (rt1.c2))) UNION SELECT DISTINCT * FROM rt1 WHERE (((rt1.c2) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT vt64.c0 FROM vt64 GROUP BY vt64.c0;
SELECT ALL vt64.c0 FROM vt64 WHERE ((((vt64.c0)) BETWEEN ((((vt64.lid) ISNULL))) AND (((vt64.lid IN ()))))) GROUP BY vt64.c0 UNION SELECT ALL vt64.c0 FROM vt64 WHERE ((NOT ((((vt64.c0)) BETWEEN ((((vt64.lid) ISNULL))) AND (((vt64.lid IN ()))))))) GROUP BY vt64.c0 UNION SELECT ALL vt64.c0 FROM vt64 WHERE ((((((vt64.c0)) BETWEEN ((((vt64.lid) ISNULL))) AND (((vt64.lid IN ()))))) ISNULL)) GROUP BY vt64.c0;
SELECT vt64.c0 FROM vt64 GROUP BY vt64.c0;
SELECT rt1.c1, vt64.c0, rt1.c2, rt1.c6, rt1.c0 FROM rt1, vt64 GROUP BY rt1.c1, vt64.c0, rt1.c2, rt1.c6, rt1.c0;
SELECT rt1.c1, vt64.c0, rt1.c2, rt1.c6, rt1.c0 FROM rt1, vt64 GROUP BY rt1.c1, vt64.c0, rt1.c2, rt1.c6, rt1.c0 HAVING rt1.c3 UNION ALL SELECT ALL rt1.c1, vt64.c0, rt1.c2, rt1.c6, rt1.c0 FROM rt1, vt64 GROUP BY rt1.c1, vt64.c0, rt1.c2, rt1.c6, rt1.c0 HAVING (NOT (rt1.c3)) UNION ALL SELECT rt1.c1, vt64.c0, rt1.c2, rt1.c6, rt1.c0 FROM rt1, vt64 GROUP BY rt1.c1, vt64.c0, rt1.c2, rt1.c6, rt1.c0 HAVING ((rt1.c3) ISNULL);
SELECT rt1.c1, vt64.c0, rt1.c2, rt1.c6, rt1.c0 FROM rt1, vt64 GROUP BY rt1.c1, vt64.c0, rt1.c2, rt1.c6, rt1.c0;
SELECT rt1.c1, vt64.c0, rt1.c2, rt1.c6, rt1.c0 FROM rt1, vt64 GROUP BY rt1.c1, vt64.c0, rt1.c2, rt1.c6, rt1.c0 HAVING rt1.c3 UNION ALL SELECT ALL rt1.c1, vt64.c0, rt1.c2, rt1.c6, rt1.c0 FROM rt1, vt64 GROUP BY rt1.c1, vt64.c0, rt1.c2, rt1.c6, rt1.c0 HAVING (NOT (rt1.c3)) UNION ALL SELECT rt1.c1, vt64.c0, rt1.c2, rt1.c6, rt1.c0 FROM rt1, vt64 GROUP BY rt1.c1, vt64.c0, rt1.c2, rt1.c6, rt1.c0 HAVING ((rt1.c3) ISNULL);
SELECT rt1.c1, vt64.c0, rt1.c2, rt1.c6, rt1.c0 FROM rt1, vt64 GROUP BY rt1.c1, vt64.c0, rt1.c2, rt1.c6, rt1.c0;
SELECT * FROM rt1, vt64;
SELECT * FROM rt1, vt64 WHERE (rt1.c5) UNION ALL SELECT * FROM rt1, vt64 WHERE ((NOT (rt1.c5))) UNION ALL SELECT ALL * FROM rt1, vt64 WHERE (((rt1.c5) ISNULL));
SELECT * FROM rt1, vt64;
SELECT DISTINCT rt1.c2, rt1.c4 FROM rt1;
SELECT DISTINCT rt1.c2, rt1.c4 FROM rt1 WHERE ((('c罼\J]N-z') NOTNULL)) UNION SELECT DISTINCT rt1.c2, rt1.c4 FROM rt1 WHERE ((NOT ((('c罼\J]N-z') NOTNULL)))) UNION SELECT DISTINCT rt1.c2, rt1.c4 FROM rt1 WHERE ((((('c罼\J]N-z') NOTNULL)) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c4 FROM rt1;
SELECT rt1.c6, rt1.c2 FROM vt64 RIGHT OUTER JOIN rt1 ON ((((rt1.c4)GLOB(vt64.c0))) NOT BETWEEN (rt1.c5 COLLATE RTRIM) AND (((rt1.c4) NOT BETWEEN (rt1.c6) AND (rt1.c2)))) GROUP BY rt1.c6, rt1.c2;
SELECT ALL rt1.c6, rt1.c2 FROM vt64 RIGHT OUTER JOIN rt1 ON ((((rt1.c4)GLOB(vt64.c0))) NOT BETWEEN (rt1.c5 COLLATE RTRIM) AND (((rt1.c4) NOT BETWEEN (rt1.c6) AND (rt1.c2)))) WHERE (CASE ((rt1.c3) NOT NULL)  WHEN ((vt64.lid)%(rt1.c2)) THEN (((vt64.lid)) NOT BETWEEN ((vt64.c0)) AND ((rt1.c0))) ELSE (vt64.c0 IN (rt1.c3, rt1.c0)) END) GROUP BY rt1.c6, rt1.c2 UNION SELECT ALL rt1.c6, rt1.c2 FROM vt64 RIGHT OUTER JOIN rt1 ON ((((rt1.c4)GLOB(vt64.c0))) NOT BETWEEN (rt1.c5 COLLATE RTRIM) AND (((rt1.c4) NOT BETWEEN (rt1.c6) AND (rt1.c2)))) WHERE ((NOT (CASE ((rt1.c3) NOT NULL)  WHEN ((vt64.lid)%(rt1.c2)) THEN (((vt64.lid)) NOT BETWEEN ((vt64.c0)) AND ((rt1.c0))) ELSE (vt64.c0 IN (rt1.c3, rt1.c0)) END))) GROUP BY rt1.c6, rt1.c2 UNION SELECT rt1.c6, rt1.c2 FROM vt64 RIGHT OUTER JOIN rt1 ON ((((rt1.c4)GLOB(vt64.c0))) NOT BETWEEN (rt1.c5 COLLATE RTRIM) AND (((rt1.c4) NOT BETWEEN (rt1.c6) AND (rt1.c2)))) WHERE (((CASE ((rt1.c3) NOT NULL)  WHEN ((vt64.lid)%(rt1.c2)) THEN (((vt64.lid)) NOT BETWEEN ((vt64.c0)) AND ((rt1.c0))) ELSE (vt64.c0 IN (rt1.c3, rt1.c0)) END) ISNULL)) GROUP BY rt1.c6, rt1.c2;
SELECT rt1.c6, rt1.c2 FROM vt64 RIGHT OUTER JOIN rt1 ON ((((rt1.c4)GLOB(vt64.c0))) NOT BETWEEN (rt1.c5 COLLATE RTRIM) AND (((rt1.c4) NOT BETWEEN (rt1.c6) AND (rt1.c2)))) GROUP BY rt1.c6, rt1.c2;
SELECT ALL rt1.c5, vt64.c0 FROM vt64, rt1 GROUP BY rt1.c5, vt64.c0;
SELECT ALL rt1.c5, vt64.c0 FROM vt64, rt1 GROUP BY rt1.c5, vt64.c0 HAVING ((((TOTAL(COUNT(rt1.c2)))AND(((rt1.c5) NOT NULL))))OR(AVG(rt1.c1))) UNION ALL SELECT ALL rt1.c5, vt64.c0 FROM vt64, rt1 GROUP BY rt1.c5, vt64.c0 HAVING (NOT (((((TOTAL(COUNT(rt1.c2)))AND(((rt1.c5) NOT NULL))))OR(AVG(rt1.c1))))) UNION ALL SELECT ALL rt1.c5, vt64.c0 FROM vt64, rt1 GROUP BY rt1.c5, vt64.c0 HAVING ((((((TOTAL(COUNT(rt1.c2)))AND(((rt1.c5) NOT NULL))))OR(AVG(rt1.c1)))) ISNULL);
SELECT ALL vt64.c0, vt64.lid FROM vt64;
SELECT ALL vt64.c0, vt64.lid FROM vt64 WHERE (((((((vt64.lid)OR(vt64.c0)))AND(vt64.lid))) BETWEEN (ABS(vt64.c0)) AND (((vt64.lid)<(vt64.c0))))) UNION ALL SELECT ALL vt64.c0, vt64.lid FROM vt64 WHERE ((NOT (((((((vt64.lid)OR(vt64.c0)))AND(vt64.lid))) BETWEEN (ABS(vt64.c0)) AND (((vt64.lid)<(vt64.c0))))))) UNION ALL SELECT vt64.c0, vt64.lid FROM vt64 WHERE (((((((((vt64.lid)OR(vt64.c0)))AND(vt64.lid))) BETWEEN (ABS(vt64.c0)) AND (((vt64.lid)<(vt64.c0))))) ISNULL));
SELECT ALL vt64.c0, vt64.lid FROM vt64;
SELECT DISTINCT rt1.c1, rt1.c4, rt1.c0, vt64.c0, rt1.c6, vt64.lid, rt1.c2 FROM rt1, vt64;
SELECT DISTINCT rt1.c1, rt1.c4, rt1.c0, vt64.c0, rt1.c6, vt64.lid, rt1.c2 FROM rt1, vt64 WHERE (((rt1.c4 IN ()) IN ())) UNION SELECT DISTINCT rt1.c1, rt1.c4, rt1.c0, vt64.c0, rt1.c6, vt64.lid, rt1.c2 FROM rt1, vt64 WHERE ((NOT (((rt1.c4 IN ()) IN ())))) UNION SELECT DISTINCT rt1.c1, rt1.c4, rt1.c0, vt64.c0, rt1.c6, vt64.lid, rt1.c2 FROM rt1, vt64 WHERE (((((rt1.c4 IN ()) IN ())) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c4, rt1.c0, vt64.c0, rt1.c6, vt64.lid, rt1.c2 FROM rt1, vt64;
SELECT vt64.c0, vt64.lid FROM vt64, rt1 GROUP BY vt64.c0, vt64.lid;
SELECT vt64.c0, vt64.lid FROM vt64, rt1 WHERE (((rt1.c0)>>(rt1.c6)) COLLATE RTRIM) GROUP BY vt64.c0, vt64.lid UNION SELECT vt64.c0, vt64.lid FROM vt64, rt1 WHERE ((NOT (((rt1.c0)>>(rt1.c6)) COLLATE RTRIM))) GROUP BY vt64.c0, vt64.lid UNION SELECT vt64.c0, vt64.lid FROM vt64, rt1 WHERE (((((rt1.c0)>>(rt1.c6)) COLLATE RTRIM) ISNULL)) GROUP BY vt64.c0, vt64.lid;
SELECT vt64.c0, vt64.lid FROM vt64, rt1 GROUP BY vt64.c0, vt64.lid;
SELECT rt1.c5, vt64.lid, rt1.c4, vt64.c0 FROM vt64, rt1 GROUP BY rt1.c5, vt64.lid, rt1.c4, vt64.c0;
SELECT ALL rt1.c5, vt64.lid, rt1.c4, vt64.c0 FROM vt64, rt1 GROUP BY rt1.c5, vt64.lid, rt1.c4, vt64.c0 HAVING AVG(COUNT(rt1.c2)) UNION ALL SELECT ALL rt1.c5, vt64.lid, rt1.c4, vt64.c0 FROM vt64, rt1 GROUP BY rt1.c5, vt64.lid, rt1.c4, vt64.c0 HAVING (NOT (AVG(COUNT(rt1.c2)))) UNION ALL SELECT ALL rt1.c5, vt64.lid, rt1.c4, vt64.c0 FROM vt64, rt1 GROUP BY rt1.c5, vt64.lid, rt1.c4, vt64.c0 HAVING ((AVG(COUNT(rt1.c2))) ISNULL);
SELECT ALL * FROM rt1;
SELECT * FROM rt1 WHERE (((((rt1.c5) NOT BETWEEN (rt1.c4) AND (rt1.c5)))||(CAST(rt1.c1 AS BLOB)))) UNION ALL SELECT * FROM rt1 WHERE ((NOT (((((rt1.c5) NOT BETWEEN (rt1.c4) AND (rt1.c5)))||(CAST(rt1.c1 AS BLOB)))))) UNION ALL SELECT * FROM rt1 WHERE (((((((rt1.c5) NOT BETWEEN (rt1.c4) AND (rt1.c5)))||(CAST(rt1.c1 AS BLOB)))) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE ((((rt1.c3 IN ('-468373327'))) IS FALSE)) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT ((((rt1.c3 IN ('-468373327'))) IS FALSE)))) UNION SELECT DISTINCT * FROM rt1 WHERE ((((((rt1.c3 IN ('-468373327'))) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL rt1.c5, rt1.c3, rt1.c0, rt1.c1, rt1.c2, rt1.c4 FROM rt1 GROUP BY rt1.c5, rt1.c3, rt1.c0, rt1.c1, rt1.c2, rt1.c4;
SELECT ALL rt1.c5, rt1.c3, rt1.c0, rt1.c1, rt1.c2, rt1.c4 FROM rt1 WHERE (load_extension(((rt1.c2)&(rt1.c2)))) GROUP BY rt1.c5, rt1.c3, rt1.c0, rt1.c1, rt1.c2, rt1.c4 UNION SELECT rt1.c5, rt1.c3, rt1.c0, rt1.c1, rt1.c2, rt1.c4 FROM rt1 WHERE ((NOT (load_extension(((rt1.c2)&(rt1.c2)))))) GROUP BY rt1.c5, rt1.c3, rt1.c0, rt1.c1, rt1.c2, rt1.c4 UNION SELECT ALL rt1.c5, rt1.c3, rt1.c0, rt1.c1, rt1.c2, rt1.c4 FROM rt1 WHERE (((load_extension(((rt1.c2)&(rt1.c2)))) ISNULL)) GROUP BY rt1.c5, rt1.c3, rt1.c0, rt1.c1, rt1.c2, rt1.c4;
SELECT vt64.c0, vt64.lid FROM vt64 GROUP BY vt64.c0, vt64.lid;
SELECT ALL vt64.c0, vt64.lid FROM vt64 GROUP BY vt64.c0, vt64.lid HAVING 0x390227e0 UNION ALL SELECT vt64.c0, vt64.lid FROM vt64 GROUP BY vt64.c0, vt64.lid HAVING (NOT (0x390227e0)) UNION ALL SELECT ALL vt64.c0, vt64.lid FROM vt64 GROUP BY vt64.c0, vt64.lid HAVING ((0x390227e0) ISNULL);
SELECT vt64.c0, vt64.lid FROM vt64 GROUP BY vt64.c0, vt64.lid;
SELECT ALL vt64.c0, vt64.lid FROM vt64 GROUP BY vt64.c0, vt64.lid HAVING 0x390227e0 UNION ALL SELECT vt64.c0, vt64.lid FROM vt64 GROUP BY vt64.c0, vt64.lid HAVING (NOT (0x390227e0)) UNION ALL SELECT ALL vt64.c0, vt64.lid FROM vt64 GROUP BY vt64.c0, vt64.lid HAVING ((0x390227e0) ISNULL);
SELECT vt64.c0, vt64.lid FROM vt64 GROUP BY vt64.c0, vt64.lid;
SELECT rt1.c4, rt1.c5, rt1.c2, rt1.c0 FROM rt1;
SELECT ALL rt1.c4, rt1.c5, rt1.c2, rt1.c0 FROM rt1 WHERE (rtreenode(((rt1.c3) BETWEEN (rt1.c4) AND (rt1.c3)), rt1.c4 COLLATE BINARY)) UNION ALL SELECT ALL rt1.c4, rt1.c5, rt1.c2, rt1.c0 FROM rt1 WHERE ((NOT (rtreenode(((rt1.c3) BETWEEN (rt1.c4) AND (rt1.c3)), rt1.c4 COLLATE BINARY)))) UNION ALL SELECT rt1.c4, rt1.c5, rt1.c2, rt1.c0 FROM rt1 WHERE (((rtreenode(((rt1.c3) BETWEEN (rt1.c4) AND (rt1.c3)), rt1.c4 COLLATE BINARY)) ISNULL));
SELECT rt1.c4, rt1.c5, rt1.c2, rt1.c0 FROM rt1;
SELECT DISTINCT rt1.c6, rt1.c1, rt1.c3 FROM rt1;
SELECT DISTINCT rt1.c6, rt1.c1, rt1.c3 FROM rt1 WHERE ((((rt1.c1 COLLATE RTRIM))<>((PRINTF(rt1.c3))))) UNION SELECT DISTINCT rt1.c6, rt1.c1, rt1.c3 FROM rt1 WHERE ((NOT ((((rt1.c1 COLLATE RTRIM))!=((PRINTF(rt1.c3))))))) UNION SELECT DISTINCT rt1.c6, rt1.c1, rt1.c3 FROM rt1 WHERE ((((((rt1.c1 COLLATE RTRIM))!=((PRINTF(rt1.c3))))) ISNULL));
SELECT DISTINCT rt1.c6, rt1.c1, rt1.c3 FROM rt1;
SELECT rt1.c5, rt1.c6, vt64.c0, rt1.c0, rt1.c1, rt1.c2 FROM vt64, rt1 GROUP BY rt1.c5, rt1.c6, vt64.c0, rt1.c0, rt1.c1, rt1.c2;
SELECT rt1.c5, rt1.c6, vt64.c0, rt1.c0, rt1.c1, rt1.c2 FROM vt64, rt1 WHERE (((((rt1.c5)&(vt64.lid))) IS TRUE)) GROUP BY rt1.c5, rt1.c6, vt64.c0, rt1.c0, rt1.c1, rt1.c2 UNION SELECT ALL rt1.c5, rt1.c6, vt64.c0, rt1.c0, rt1.c1, rt1.c2 FROM vt64, rt1 WHERE ((NOT (((((rt1.c5)&(vt64.lid))) IS TRUE)))) GROUP BY rt1.c5, rt1.c6, vt64.c0, rt1.c0, rt1.c1, rt1.c2 UNION SELECT ALL rt1.c5, rt1.c6, vt64.c0, rt1.c0, rt1.c1, rt1.c2 FROM vt64, rt1 WHERE (((((((rt1.c5)&(vt64.lid))) IS TRUE)) ISNULL)) GROUP BY rt1.c5, rt1.c6, vt64.c0, rt1.c0, rt1.c1, rt1.c2;
SELECT rt1.c5, rt1.c6, vt64.c0, rt1.c0, rt1.c1, rt1.c2 FROM vt64, rt1 GROUP BY rt1.c5, rt1.c6, vt64.c0, rt1.c0, rt1.c1, rt1.c2;
SELECT vt64.c0, rt1.c3, vt64.lid, rt1.c6, rt1.c4 FROM vt64, rt1 GROUP BY vt64.c0, rt1.c3, vt64.lid, rt1.c6, rt1.c4;
SELECT ALL vt64.c0, rt1.c3, vt64.lid, rt1.c6, rt1.c4 FROM vt64, rt1 GROUP BY vt64.c0, rt1.c3, vt64.lid, rt1.c6, rt1.c4 HAVING (((CASE rt1.c3  WHEN rt1.c6 THEN MIN(rt1.c3) WHEN rt1.c0 THEN vt64.lid WHEN NULL THEN vt64.lid ELSE COUNT(rt1.c3) END))>((TOTAL(vt64.lid)))) UNION ALL SELECT vt64.c0, rt1.c3, vt64.lid, rt1.c6, rt1.c4 FROM vt64, rt1 GROUP BY vt64.c0, rt1.c3, vt64.lid, rt1.c6, rt1.c4 HAVING (NOT ((((CASE rt1.c3  WHEN rt1.c6 THEN MIN(rt1.c3) WHEN rt1.c0 THEN vt64.lid WHEN NULL THEN vt64.lid ELSE COUNT(rt1.c3) END))>((TOTAL(vt64.lid)))))) UNION ALL SELECT vt64.c0, rt1.c3, vt64.lid, rt1.c6, rt1.c4 FROM vt64, rt1 GROUP BY vt64.c0, rt1.c3, vt64.lid, rt1.c6, rt1.c4 HAVING (((((CASE rt1.c3  WHEN rt1.c6 THEN MIN(rt1.c3) WHEN rt1.c0 THEN vt64.lid WHEN NULL THEN vt64.lid ELSE COUNT(rt1.c3) END))>((TOTAL(vt64.lid))))) ISNULL);
SELECT vt64.c0, rt1.c3, vt64.lid, rt1.c6, rt1.c4 FROM vt64, rt1 GROUP BY vt64.c0, rt1.c3, vt64.lid, rt1.c6, rt1.c4;
SELECT ALL vt64.c0, rt1.c3, vt64.lid, rt1.c6, rt1.c4 FROM vt64, rt1 GROUP BY vt64.c0, rt1.c3, vt64.lid, rt1.c6, rt1.c4 HAVING (((CASE rt1.c3  WHEN rt1.c6 THEN MIN(rt1.c3) WHEN rt1.c0 THEN vt64.lid WHEN NULL THEN vt64.lid ELSE COUNT(rt1.c3) END))>((TOTAL(vt64.lid)))) UNION ALL SELECT vt64.c0, rt1.c3, vt64.lid, rt1.c6, rt1.c4 FROM vt64, rt1 GROUP BY vt64.c0, rt1.c3, vt64.lid, rt1.c6, rt1.c4 HAVING (NOT ((((CASE rt1.c3  WHEN rt1.c6 THEN MIN(rt1.c3) WHEN rt1.c0 THEN vt64.lid WHEN NULL THEN vt64.lid ELSE COUNT(rt1.c3) END))>((TOTAL(vt64.lid)))))) UNION ALL SELECT vt64.c0, rt1.c3, vt64.lid, rt1.c6, rt1.c4 FROM vt64, rt1 GROUP BY vt64.c0, rt1.c3, vt64.lid, rt1.c6, rt1.c4 HAVING (((((CASE rt1.c3  WHEN rt1.c6 THEN MIN(rt1.c3) WHEN rt1.c0 THEN vt64.lid WHEN NULL THEN vt64.lid ELSE COUNT(rt1.c3) END))>((TOTAL(vt64.lid))))) ISNULL);
SELECT vt64.c0, rt1.c3, vt64.lid, rt1.c6, rt1.c4 FROM vt64, rt1 GROUP BY vt64.c0, rt1.c3, vt64.lid, rt1.c6, rt1.c4;
SELECT ALL rt1.c0, rt1.c1, vt64.c0 FROM vt64, rt1;
SELECT rt1.c0, rt1.c1, vt64.c0 FROM vt64, rt1 WHERE ((((NULL)||(rt1.c2)) IN ())) UNION ALL SELECT ALL rt1.c0, rt1.c1, vt64.c0 FROM vt64, rt1 WHERE ((NOT ((((NULL)||(rt1.c2)) IN ())))) UNION ALL SELECT rt1.c0, rt1.c1, vt64.c0 FROM vt64, rt1 WHERE ((((((NULL)||(rt1.c2)) IN ())) ISNULL));
SELECT ALL rt1.c0, rt1.c1, vt64.c0 FROM vt64, rt1;
SELECT DISTINCT rt1.c3, rt1.c2, rt1.c4, rt1.c0, rt1.c6, rt1.c1 FROM rt1;
SELECT DISTINCT rt1.c3, rt1.c2, rt1.c4, rt1.c0, rt1.c6, rt1.c1 FROM rt1 WHERE (((((rt1.c4) ISNULL))LIKE((rt1.c1 IN (rt1.c3))))) UNION SELECT DISTINCT rt1.c3, rt1.c2, rt1.c4, rt1.c0, rt1.c6, rt1.c1 FROM rt1 WHERE ((NOT (((((rt1.c4) ISNULL))LIKE((rt1.c1 IN (rt1.c3))))))) UNION SELECT DISTINCT rt1.c3, rt1.c2, rt1.c4, rt1.c0, rt1.c6, rt1.c1 FROM rt1 WHERE (((((((rt1.c4) ISNULL))LIKE((rt1.c1 IN (rt1.c3))))) ISNULL));
SELECT DISTINCT rt1.c3, rt1.c2, rt1.c4, rt1.c0, rt1.c6, rt1.c1 FROM rt1;
SELECT ALL rt1.c1, rt1.c0, rt1.c3 FROM vt64, rt1 NOT INDEXED GROUP BY rt1.c1, rt1.c0, rt1.c3;
SELECT rt1.c1, rt1.c0, rt1.c3 FROM vt64, rt1 WHERE (rt1.c3) GROUP BY rt1.c1, rt1.c0, rt1.c3 UNION SELECT ALL rt1.c1, rt1.c0, rt1.c3 FROM vt64, rt1 WHERE ((NOT (rt1.c3))) GROUP BY rt1.c1, rt1.c0, rt1.c3 UNION SELECT rt1.c1, rt1.c0, rt1.c3 FROM vt64, rt1 WHERE (((rt1.c3) ISNULL)) GROUP BY rt1.c1, rt1.c0, rt1.c3;
SELECT ALL rt1.c1, rt1.c0, rt1.c3 FROM vt64, rt1 NOT INDEXED GROUP BY rt1.c1, rt1.c0, rt1.c3;
SELECT rt1.c3, rt1.c0 FROM rt1, vt64 GROUP BY rt1.c3, rt1.c0;
SELECT ALL rt1.c3, rt1.c0 FROM rt1, vt64 GROUP BY rt1.c3, rt1.c0 HAVING ((MIN(TOTAL(COUNT(GROUP_CONCAT(AVG(rt1.c0))))) COLLATE RTRIM)GLOB(MAX(vt64.lid))) UNION ALL SELECT ALL rt1.c3, rt1.c0 FROM rt1, vt64 GROUP BY rt1.c3, rt1.c0 HAVING (NOT (((MIN(TOTAL(COUNT(GROUP_CONCAT(AVG(rt1.c0))))) COLLATE RTRIM)GLOB(MAX(vt64.lid))))) UNION ALL SELECT ALL rt1.c3, rt1.c0 FROM rt1, vt64 GROUP BY rt1.c3, rt1.c0 HAVING ((((MIN(TOTAL(COUNT(GROUP_CONCAT(AVG(rt1.c0))))) COLLATE RTRIM)GLOB(MAX(vt64.lid)))) ISNULL);
SELECT * FROM rt1, vt64;
SELECT * FROM rt1, vt64 WHERE (rt1.c0) UNION ALL SELECT * FROM rt1, vt64 WHERE ((NOT (rt1.c0))) UNION ALL SELECT ALL * FROM rt1, vt64 WHERE (((rt1.c0) ISNULL));
SELECT * FROM rt1, vt64;
SELECT DISTINCT vt64.c0 FROM vt64;
SELECT DISTINCT vt64.c0 FROM vt64 WHERE (vt64.c0) UNION SELECT DISTINCT vt64.c0 FROM vt64 WHERE ((NOT (vt64.c0))) UNION SELECT DISTINCT vt64.c0 FROM vt64 WHERE (((vt64.c0) ISNULL));
SELECT DISTINCT vt64.c0 FROM vt64;
SELECT ALL rt1.c6, rt1.c2, rt1.c5 FROM rt1 GROUP BY rt1.c6, rt1.c2, rt1.c5;
SELECT ALL rt1.c6, rt1.c2, rt1.c5 FROM rt1 WHERE ((((rt1.c0, rt1.c5, rt1.c0)) BETWEEN ((((rt1.c2)*(rt1.c5)), CASE WHEN NULL THEN rt1.c5 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c3 THEN 0.9844116195612969 END, ((rt1.c5)>>(rt1.c3)))) AND ((x'f90c', x'', ((rt1.c2) NOTNULL))))) GROUP BY rt1.c6, rt1.c2, rt1.c5 UNION SELECT ALL rt1.c6, rt1.c2, rt1.c5 FROM rt1 WHERE ((NOT ((((rt1.c0, rt1.c5, rt1.c0)) BETWEEN ((((rt1.c2)*(rt1.c5)), CASE WHEN NULL THEN rt1.c5 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c3 THEN 0.9844116195612969 END, ((rt1.c5)>>(rt1.c3)))) AND ((x'f90c', x'', ((rt1.c2) NOTNULL))))))) GROUP BY rt1.c6, rt1.c2, rt1.c5 UNION SELECT ALL rt1.c6, rt1.c2, rt1.c5 FROM rt1 WHERE ((((((rt1.c0, rt1.c5, rt1.c0)) BETWEEN ((((rt1.c2)*(rt1.c5)), CASE WHEN NULL THEN rt1.c5 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c3 THEN 0.9844116195612969 END, ((rt1.c5)>>(rt1.c3)))) AND ((x'f90c', x'', ((rt1.c2) NOTNULL))))) ISNULL)) GROUP BY rt1.c6, rt1.c2, rt1.c5;
SELECT ALL rt1.c6, rt1.c2, rt1.c5 FROM rt1 GROUP BY rt1.c6, rt1.c2, rt1.c5;
SELECT ALL rt1.c4, rt1.c6, rt1.c1, rt1.c0, vt64.lid, vt64.c0, rt1.c5 FROM vt64, rt1 GROUP BY rt1.c4, rt1.c6, rt1.c1, rt1.c0, vt64.lid, vt64.c0, rt1.c5;
SELECT rt1.c4, rt1.c6, rt1.c1, rt1.c0, vt64.lid, vt64.c0, rt1.c5 FROM vt64, rt1 GROUP BY rt1.c4, rt1.c6, rt1.c1, rt1.c0, vt64.lid, vt64.c0, rt1.c5 HAVING CASE MAX(COUNT(*))  WHEN HEX(DISTINCT vt64.lid) THEN MAX(SUM(MAX(GROUP_CONCAT(rt1.c0)))) END UNION ALL SELECT ALL rt1.c4, rt1.c6, rt1.c1, rt1.c0, vt64.lid, vt64.c0, rt1.c5 FROM vt64, rt1 GROUP BY rt1.c4, rt1.c6, rt1.c1, rt1.c0, vt64.lid, vt64.c0, rt1.c5 HAVING (NOT (CASE MAX(COUNT(*))  WHEN HEX(DISTINCT vt64.lid) THEN MAX(SUM(MAX(GROUP_CONCAT(rt1.c0)))) END)) UNION ALL SELECT rt1.c4, rt1.c6, rt1.c1, rt1.c0, vt64.lid, vt64.c0, rt1.c5 FROM vt64, rt1 GROUP BY rt1.c4, rt1.c6, rt1.c1, rt1.c0, vt64.lid, vt64.c0, rt1.c5 HAVING ((CASE MAX(COUNT(*))  WHEN HEX(DISTINCT vt64.lid) THEN MAX(SUM(MAX(GROUP_CONCAT(rt1.c0)))) END) ISNULL);
SELECT rt1.c5 FROM rt1;
SELECT rt1.c5 FROM rt1 WHERE (((((((((((rt1.c0)OR(rt1.c3)))OR((rt1.c3 IN ()))))OR((((NULL))>=((rt1.c3))))))AND(NULLIF(DISTINCT NULL, rt1.c0))))OR(0.22098803747495643))) UNION ALL SELECT rt1.c5 FROM rt1 WHERE ((NOT (((((((((((rt1.c0)OR(rt1.c3)))OR((rt1.c3 IN ()))))OR((((NULL))>=((rt1.c3))))))AND(NULLIF(DISTINCT NULL, rt1.c0))))OR(0.22098803747495643))))) UNION ALL SELECT rt1.c5 FROM rt1 WHERE (((((((((((((rt1.c0)OR(rt1.c3)))OR((rt1.c3 IN ()))))OR((((NULL))>=((rt1.c3))))))AND(NULLIF(DISTINCT NULL, rt1.c0))))OR(0.22098803747495643))) ISNULL));
SELECT rt1.c5 FROM rt1;
SELECT DISTINCT * FROM rt1, vt64;
SELECT DISTINCT * FROM rt1, vt64 WHERE ((((NOT (rt1.c1)))>(CAST(rt1.c0 AS TEXT)))) UNION SELECT DISTINCT * FROM rt1, vt64 WHERE ((NOT ((((NOT (rt1.c1)))>(CAST(rt1.c0 AS TEXT)))))) UNION SELECT DISTINCT * FROM rt1, vt64 WHERE ((((((NOT (rt1.c1)))>(CAST(rt1.c0 AS TEXT)))) ISNULL));
SELECT DISTINCT * FROM rt1, vt64;
SELECT vt64.c0 FROM vt64 GROUP BY vt64.c0;
SELECT vt64.c0 FROM vt64 WHERE ((((vt64.c0)) NOT BETWEEN ((CASE vt64.lid  WHEN vt64.c0 THEN vt64.lid ELSE vt64.lid END)) AND ((CAST(vt64.c0 AS TEXT))))) GROUP BY vt64.c0 UNION SELECT vt64.c0 FROM vt64 WHERE ((NOT ((((vt64.c0)) NOT BETWEEN ((CASE vt64.lid  WHEN vt64.c0 THEN vt64.lid ELSE vt64.lid END)) AND ((CAST(vt64.c0 AS TEXT))))))) GROUP BY vt64.c0 UNION SELECT ALL vt64.c0 FROM vt64 WHERE ((((((vt64.c0)) NOT BETWEEN ((CASE vt64.lid  WHEN vt64.c0 THEN vt64.lid ELSE vt64.lid END)) AND ((CAST(vt64.c0 AS TEXT))))) ISNULL)) GROUP BY vt64.c0;
SELECT vt64.c0 FROM vt64 GROUP BY vt64.c0;
SELECT ALL rt1.c3, rt1.c4, vt64.c0, rt1.c6 FROM rt1 FULL OUTER JOIN vt64 ON (((((((((rt1.c2 IN (rt1.c0, rt1.c0)))AND(((rt1.c3)<=(rt1.c0)))))AND(((rt1.c4)OR(rt1.c5)))))OR(((((((((vt64.c0)OR(1.961622912E9)))AND(rt1.c2)))AND(rt1.c3)))OR(1.961622912E9)))))OR((((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c5))))) GROUP BY rt1.c3, rt1.c4, vt64.c0, rt1.c6;
SELECT ALL rt1.c3, rt1.c4, vt64.c0, rt1.c6 FROM rt1 FULL OUTER JOIN vt64 ON (((((((((rt1.c2 IN (rt1.c0, rt1.c0)))AND(((rt1.c3)<=(rt1.c0)))))AND(((rt1.c4)OR(rt1.c5)))))OR(((((((((vt64.c0)OR(1.961622912E9)))AND(rt1.c2)))AND(rt1.c3)))OR(1.961622912E9)))))OR((((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c5))))) GROUP BY rt1.c3, rt1.c4, vt64.c0, rt1.c6 HAVING IFNULL(((COUNT('-360229826')) ISNULL), vt64.lid) UNION ALL SELECT ALL rt1.c3, rt1.c4, vt64.c0, rt1.c6 FROM rt1 FULL OUTER JOIN vt64 ON (((((((((rt1.c2 IN (rt1.c0, rt1.c0)))AND(((rt1.c3)<=(rt1.c0)))))AND(((rt1.c4)OR(rt1.c5)))))OR(((((((((vt64.c0)OR(1.961622912E9)))AND(rt1.c2)))AND(rt1.c3)))OR(1.961622912E9)))))OR((((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c5))))) GROUP BY rt1.c3, rt1.c4, vt64.c0, rt1.c6 HAVING (NOT (IFNULL(((COUNT('-360229826')) ISNULL), vt64.lid))) UNION ALL SELECT rt1.c3, rt1.c4, vt64.c0, rt1.c6 FROM rt1 FULL OUTER JOIN vt64 ON (((((((((rt1.c2 IN (rt1.c0, rt1.c0)))AND(((rt1.c3)<=(rt1.c0)))))AND(((rt1.c4)OR(rt1.c5)))))OR(((((((((vt64.c0)OR(1.961622912E9)))AND(rt1.c2)))AND(rt1.c3)))OR(1.961622912E9)))))OR((((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c5))))) GROUP BY rt1.c3, rt1.c4, vt64.c0, rt1.c6 HAVING ((IFNULL(((COUNT('-360229826')) ISNULL), vt64.lid)) ISNULL);
SELECT ALL rt1.c3, rt1.c4, vt64.c0, rt1.c6 FROM rt1 FULL OUTER JOIN vt64 ON (((((((((rt1.c2 IN (rt1.c0, rt1.c0)))AND(((rt1.c3)<=(rt1.c0)))))AND(((rt1.c4)OR(rt1.c5)))))OR(((((((((vt64.c0)OR(1.961622912E9)))AND(rt1.c2)))AND(rt1.c3)))OR(1.961622912E9)))))OR((((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c5))))) GROUP BY rt1.c3, rt1.c4, vt64.c0, rt1.c6;
SELECT ALL rt1.c3, rt1.c4, vt64.c0, rt1.c6 FROM rt1 FULL OUTER JOIN vt64 ON (((((((((rt1.c2 IN (rt1.c0, rt1.c0)))AND(((rt1.c3)<=(rt1.c0)))))AND(((rt1.c4)OR(rt1.c5)))))OR(((((((((vt64.c0)OR(1.961622912E9)))AND(rt1.c2)))AND(rt1.c3)))OR(1.961622912E9)))))OR((((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c5))))) GROUP BY rt1.c3, rt1.c4, vt64.c0, rt1.c6 HAVING IFNULL(((COUNT('-360229826')) ISNULL), vt64.lid) UNION ALL SELECT ALL rt1.c3, rt1.c4, vt64.c0, rt1.c6 FROM rt1 FULL OUTER JOIN vt64 ON (((((((((rt1.c2 IN (rt1.c0, rt1.c0)))AND(((rt1.c3)<=(rt1.c0)))))AND(((rt1.c4)OR(rt1.c5)))))OR(((((((((vt64.c0)OR(1.961622912E9)))AND(rt1.c2)))AND(rt1.c3)))OR(1.961622912E9)))))OR((((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c5))))) GROUP BY rt1.c3, rt1.c4, vt64.c0, rt1.c6 HAVING (NOT (IFNULL(((COUNT('-360229826')) ISNULL), vt64.lid))) UNION ALL SELECT rt1.c3, rt1.c4, vt64.c0, rt1.c6 FROM rt1 FULL OUTER JOIN vt64 ON (((((((((rt1.c2 IN (rt1.c0, rt1.c0)))AND(((rt1.c3)<=(rt1.c0)))))AND(((rt1.c4)OR(rt1.c5)))))OR(((((((((vt64.c0)OR(1.961622912E9)))AND(rt1.c2)))AND(rt1.c3)))OR(1.961622912E9)))))OR((((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c5))))) GROUP BY rt1.c3, rt1.c4, vt64.c0, rt1.c6 HAVING ((IFNULL(((COUNT('-360229826')) ISNULL), vt64.lid)) ISNULL);
SELECT ALL rt1.c3, rt1.c4, vt64.c0, rt1.c6 FROM rt1 FULL OUTER JOIN vt64 ON (((((((((rt1.c2 IN (rt1.c0, rt1.c0)))AND(((rt1.c3)<=(rt1.c0)))))AND(((rt1.c4)OR(rt1.c5)))))OR(((((((((vt64.c0)OR(1.961622912E9)))AND(rt1.c2)))AND(rt1.c3)))OR(1.961622912E9)))))OR((((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c5))))) GROUP BY rt1.c3, rt1.c4, vt64.c0, rt1.c6;
SELECT ALL rt1.c6 FROM vt64, rt1;
SELECT ALL rt1.c6 FROM vt64, rt1 WHERE (NULLIF(DISTINCT ((vt64.c0) NOT NULL), x'')) UNION ALL SELECT ALL rt1.c6 FROM vt64, rt1 WHERE ((NOT (NULLIF(DISTINCT ((vt64.c0) NOT NULL), x'')))) UNION ALL SELECT ALL rt1.c6 FROM vt64, rt1 WHERE (((NULLIF(DISTINCT ((vt64.c0) NOT NULL), x'')) ISNULL));
SELECT ALL rt1.c6 FROM vt64, rt1;
SELECT DISTINCT vt64.lid FROM vt64;
SELECT DISTINCT vt64.lid FROM vt64 WHERE (((((((vt64.lid, vt64.lid, vt64.lid))!=(('246373326', vt64.lid, vt64.lid)))))<=((CASE NULL  WHEN vt64.c0 THEN vt64.c0 ELSE '-1520029724' END)))) UNION SELECT DISTINCT vt64.lid FROM vt64 WHERE ((NOT (((((((vt64.lid, vt64.lid, vt64.lid))!=(('246373326', vt64.lid, vt64.lid)))))<=((CASE NULL  WHEN vt64.c0 THEN vt64.c0 ELSE '-1520029724' END)))))) UNION SELECT DISTINCT vt64.lid FROM vt64 WHERE (((((((((vt64.lid, vt64.lid, vt64.lid))<>(('246373326', vt64.lid, vt64.lid)))))<=((CASE NULL  WHEN vt64.c0 THEN vt64.c0 ELSE '-1520029724' END)))) ISNULL));
SELECT DISTINCT vt64.lid FROM vt64;
SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT rt1.c0 FROM rt1 WHERE (CASE WHEN x'' THEN (+ (rt1.c2)) END) GROUP BY rt1.c0 UNION SELECT rt1.c0 FROM rt1 WHERE ((NOT (CASE WHEN x'' THEN (+ (rt1.c2)) END))) GROUP BY rt1.c0 UNION SELECT ALL rt1.c0 FROM rt1 WHERE (((CASE WHEN x'' THEN (+ (rt1.c2)) END) ISNULL)) GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT vt64.c0 FROM vt64 GROUP BY vt64.c0;
SELECT vt64.c0 FROM vt64 GROUP BY vt64.c0 HAVING GROUP_CONCAT(SUM(GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT ALL vt64.c0 FROM vt64 GROUP BY vt64.c0 HAVING (NOT (GROUP_CONCAT(SUM(GROUP_CONCAT(COUNT(*)))))) UNION ALL SELECT vt64.c0 FROM vt64 GROUP BY vt64.c0 HAVING ((GROUP_CONCAT(SUM(GROUP_CONCAT(COUNT(*))))) ISNULL);
SELECT ALL * FROM vt64;
SELECT ALL * FROM vt64 WHERE (CASE WHEN ((vt64.c0) NOT BETWEEN (vt64.lid) AND (vt64.lid)) THEN (+ (vt64.lid)) END) UNION ALL SELECT ALL * FROM vt64 WHERE ((NOT (CASE WHEN ((vt64.c0) NOT BETWEEN (vt64.lid) AND (vt64.lid)) THEN (+ (vt64.lid)) END))) UNION ALL SELECT * FROM vt64 WHERE (((CASE WHEN ((vt64.c0) NOT BETWEEN (vt64.lid) AND (vt64.lid)) THEN (+ (vt64.lid)) END) ISNULL));
SELECT ALL * FROM vt64;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (((((rt1.c5) NOT NULL))=('1703244397'))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (((((rt1.c5) NOT NULL))=('1703244397'))))) UNION SELECT DISTINCT * FROM rt1 WHERE (((((((rt1.c5) NOT NULL))=('1703244397'))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL rt1.c2, rt1.c0, rt1.c6, rt1.c4, rt1.c1 FROM vt64, rt1 GROUP BY rt1.c2, rt1.c0, rt1.c6, rt1.c4, rt1.c1;
SELECT ALL rt1.c2, rt1.c0, rt1.c6, rt1.c4, rt1.c1 FROM vt64, rt1 WHERE (((((vt64.lid IN ())))>=((UNLIKELY(DISTINCT 0.08895183990809707))))) GROUP BY rt1.c2, rt1.c0, rt1.c6, rt1.c4, rt1.c1 UNION SELECT ALL rt1.c2, rt1.c0, rt1.c6, rt1.c4, rt1.c1 FROM vt64, rt1 WHERE ((NOT (((((vt64.lid IN ())))>=((UNLIKELY(DISTINCT 0.08895183990809707))))))) GROUP BY rt1.c2, rt1.c0, rt1.c6, rt1.c4, rt1.c1 UNION SELECT rt1.c2, rt1.c0, rt1.c6, rt1.c4, rt1.c1 FROM vt64, rt1 WHERE (((((((vt64.lid IN ())))>=((UNLIKELY(DISTINCT 0.08895183990809707))))) ISNULL)) GROUP BY rt1.c2, rt1.c0, rt1.c6, rt1.c4, rt1.c1;
SELECT ALL rt1.c2, rt1.c0, rt1.c6, rt1.c4, rt1.c1 FROM vt64, rt1 GROUP BY rt1.c2, rt1.c0, rt1.c6, rt1.c4, rt1.c1;
SELECT vt64.c0, vt64.lid FROM vt64 GROUP BY vt64.c0, vt64.lid;
SELECT vt64.c0, vt64.lid FROM vt64 GROUP BY vt64.c0, vt64.lid HAVING vt64.c0 UNION ALL SELECT ALL vt64.c0, vt64.lid FROM vt64 GROUP BY vt64.c0, vt64.lid HAVING (NOT (vt64.c0)) UNION ALL SELECT ALL vt64.c0, vt64.lid FROM vt64 GROUP BY vt64.c0, vt64.lid HAVING ((vt64.c0) ISNULL);
SELECT vt64.c0, vt64.lid FROM vt64 GROUP BY vt64.c0, vt64.lid;
SELECT vt64.c0, vt64.lid FROM vt64 GROUP BY vt64.c0, vt64.lid HAVING vt64.c0 UNION ALL SELECT ALL vt64.c0, vt64.lid FROM vt64 GROUP BY vt64.c0, vt64.lid HAVING (NOT (vt64.c0)) UNION ALL SELECT ALL vt64.c0, vt64.lid FROM vt64 GROUP BY vt64.c0, vt64.lid HAVING ((vt64.c0) ISNULL);
SELECT vt64.c0, vt64.lid FROM vt64 GROUP BY vt64.c0, vt64.lid;
SELECT ALL * FROM rt1, vt64;
SELECT ALL * FROM rt1, vt64 WHERE (((((rt1.c5) NOT BETWEEN (rt1.c6) AND (rt1.c4)))<((((rt1.c2))=((rt1.c2)))))) UNION ALL SELECT ALL * FROM rt1, vt64 WHERE ((NOT (((((rt1.c5) NOT BETWEEN (rt1.c6) AND (rt1.c4)))<((((rt1.c2))=((rt1.c2)))))))) UNION ALL SELECT ALL * FROM rt1, vt64 WHERE (((((((rt1.c5) NOT BETWEEN (rt1.c6) AND (rt1.c4)))<((((rt1.c2))==((rt1.c2)))))) ISNULL));
SELECT ALL * FROM rt1, vt64;
SELECT DISTINCT vt64.lid FROM vt64, rt1;
SELECT DISTINCT vt64.lid FROM vt64, rt1 WHERE (((((vt64.lid)=(rt1.c2)))||(('1800726734' IN ())))) UNION SELECT DISTINCT vt64.lid FROM vt64, rt1 WHERE ((NOT (((((vt64.lid)==(rt1.c2)))||(('1800726734' IN ())))))) UNION SELECT DISTINCT vt64.lid FROM vt64, rt1 WHERE (((((((vt64.lid)=(rt1.c2)))||(('1800726734' IN ())))) ISNULL));
SELECT DISTINCT vt64.lid FROM vt64, rt1;
SELECT vt64.c0, vt64.lid FROM vt64 NOT INDEXED GROUP BY vt64.c0, vt64.lid;
SELECT vt64.c0, vt64.lid FROM vt64 WHERE (CAST((((vt64.lid)) BETWEEN ((vt64.c0)) AND ((vt64.lid))) AS INTEGER)) GROUP BY vt64.c0, vt64.lid UNION SELECT ALL vt64.c0, vt64.lid FROM vt64 WHERE ((NOT (CAST((((vt64.lid)) BETWEEN ((vt64.c0)) AND ((vt64.lid))) AS INTEGER)))) GROUP BY vt64.c0, vt64.lid UNION SELECT vt64.c0, vt64.lid FROM vt64 WHERE (((CAST((((vt64.lid)) BETWEEN ((vt64.c0)) AND ((vt64.lid))) AS INTEGER)) ISNULL)) GROUP BY vt64.c0, vt64.lid;
SELECT vt64.c0, vt64.lid FROM vt64 NOT INDEXED GROUP BY vt64.c0, vt64.lid;
SELECT vt64.c0, vt64.lid FROM vt64 GROUP BY vt64.c0, vt64.lid;
SELECT ALL vt64.c0, vt64.lid FROM vt64 GROUP BY vt64.c0, vt64.lid HAVING MIN(SUM(COUNT(*))) UNION ALL SELECT ALL vt64.c0, vt64.lid FROM vt64 GROUP BY vt64.c0, vt64.lid HAVING (NOT (MIN(SUM(COUNT(*))))) UNION ALL SELECT ALL vt64.c0, vt64.lid FROM vt64 GROUP BY vt64.c0, vt64.lid HAVING ((MIN(SUM(COUNT(*)))) ISNULL);
SELECT * FROM rt1;
SELECT * FROM rt1 WHERE (0.9014771499987465) UNION ALL SELECT * FROM rt1 WHERE ((NOT (0.9014771499987465))) UNION ALL SELECT ALL * FROM rt1 WHERE (((0.9014771499987465) ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT vt64.lid, rt1.c4, vt64.c0, rt1.c0, rt1.c1, rt1.c6 FROM vt64, rt1;
SELECT DISTINCT vt64.lid, rt1.c4, vt64.c0, rt1.c0, rt1.c1, rt1.c6 FROM vt64, rt1 WHERE (CASE WHEN rt1.c5 THEN CASE rt1.c5  WHEN vt64.c0 THEN vt64.lid ELSE rt1.c2 END ELSE ((vt64.c0)=(rt1.c6)) END) UNION SELECT DISTINCT vt64.lid, rt1.c4, vt64.c0, rt1.c0, rt1.c1, rt1.c6 FROM vt64, rt1 WHERE ((NOT (CASE WHEN rt1.c5 THEN CASE rt1.c5  WHEN vt64.c0 THEN vt64.lid ELSE rt1.c2 END ELSE ((vt64.c0)=(rt1.c6)) END))) UNION SELECT DISTINCT vt64.lid, rt1.c4, vt64.c0, rt1.c0, rt1.c1, rt1.c6 FROM vt64, rt1 WHERE (((CASE WHEN rt1.c5 THEN CASE rt1.c5  WHEN vt64.c0 THEN vt64.lid ELSE rt1.c2 END ELSE ((vt64.c0)=(rt1.c6)) END) ISNULL));
SELECT DISTINCT vt64.lid, rt1.c4, vt64.c0, rt1.c0, rt1.c1, rt1.c6 FROM vt64, rt1;
SELECT ALL vt64.lid, rt1.c4, rt1.c0, rt1.c2, vt64.c0 FROM rt1, vt64 GROUP BY vt64.lid, rt1.c4, rt1.c0, rt1.c2, vt64.c0;
SELECT ALL vt64.lid, rt1.c4, rt1.c0, rt1.c2, vt64.c0 FROM rt1, vt64 WHERE (rt1.c1) GROUP BY vt64.lid, rt1.c4, rt1.c0, rt1.c2, vt64.c0 UNION SELECT ALL vt64.lid, rt1.c4, rt1.c0, rt1.c2, vt64.c0 FROM rt1, vt64 WHERE ((NOT (rt1.c1))) GROUP BY vt64.lid, rt1.c4, rt1.c0, rt1.c2, vt64.c0 UNION SELECT ALL vt64.lid, rt1.c4, rt1.c0, rt1.c2, vt64.c0 FROM rt1 NOT INDEXED, vt64 WHERE (((rt1.c1) ISNULL)) GROUP BY vt64.lid, rt1.c4, rt1.c0, rt1.c2, vt64.c0;
SELECT ALL vt64.lid, rt1.c4, rt1.c0, rt1.c2, vt64.c0 FROM rt1, vt64 GROUP BY vt64.lid, rt1.c4, rt1.c0, rt1.c2, vt64.c0;
SELECT rt1.c6 FROM vt64, rt1 GROUP BY rt1.c6;
SELECT ALL rt1.c6 FROM vt64, rt1 GROUP BY rt1.c6 HAVING TRIM(CASE WHEN vt64.lid THEN MIN(MAX(NULL)) END) UNION ALL SELECT rt1.c6 FROM vt64, rt1 GROUP BY rt1.c6 HAVING (NOT (TRIM(CASE WHEN vt64.lid THEN MIN(MAX(NULL)) END))) UNION ALL SELECT rt1.c6 FROM vt64, rt1 GROUP BY rt1.c6 HAVING ((TRIM(CASE WHEN vt64.lid THEN MIN(MAX(NULL)) END)) ISNULL);
SELECT rt1.c5, rt1.c1, rt1.c2, rt1.c6, vt64.lid, rt1.c0, vt64.c0, rt1.c4, rt1.c3 FROM rt1, vt64;
SELECT rt1.c5, rt1.c1, rt1.c2, rt1.c6, vt64.lid, rt1.c0, vt64.c0, rt1.c4, rt1.c3 FROM rt1, vt64 WHERE (NULL) UNION ALL SELECT rt1.c5, rt1.c1, rt1.c2, rt1.c6, vt64.lid, rt1.c0, vt64.c0, rt1.c4, rt1.c3 FROM rt1, vt64 WHERE ((NOT (NULL))) UNION ALL SELECT rt1.c5, rt1.c1, rt1.c2, rt1.c6, vt64.lid, rt1.c0, vt64.c0, rt1.c4, rt1.c3 FROM rt1, vt64 WHERE (((NULL) ISNULL));
SELECT rt1.c5, rt1.c1, rt1.c2, rt1.c6, vt64.lid, rt1.c0, vt64.c0, rt1.c4, rt1.c3 FROM rt1, vt64;
SELECT DISTINCT rt1.c2, vt64.c0, rt1.c4, rt1.c3, rt1.c0, rt1.c1 FROM vt64 LEFT OUTER JOIN rt1 ON (~ (((((rt1.c1)AND(rt1.c3)))OR(rt1.c2))));
SELECT DISTINCT rt1.c2, vt64.c0, rt1.c4, rt1.c3, rt1.c0, rt1.c1 FROM vt64 LEFT OUTER JOIN rt1 ON (~ (((((rt1.c1)AND(rt1.c3)))OR(rt1.c2)))) WHERE ((((('R,7m') IS FALSE))>(((((0x79538123)AND(rt1.c3)))OR(rt1.c4))))) UNION SELECT DISTINCT rt1.c2, vt64.c0, rt1.c4, rt1.c3, rt1.c0, rt1.c1 FROM vt64 LEFT OUTER JOIN rt1 ON (~ (((((rt1.c1)AND(rt1.c3)))OR(rt1.c2)))) WHERE ((NOT ((((('R,7m') IS FALSE))>(((((0x79538123)AND(rt1.c3)))OR(rt1.c4))))))) UNION SELECT DISTINCT rt1.c2, vt64.c0, rt1.c4, rt1.c3, rt1.c0, rt1.c1 FROM vt64 LEFT OUTER JOIN rt1 ON (~ (((((rt1.c1)AND(rt1.c3)))OR(rt1.c2)))) WHERE ((((((('R,7m') IS FALSE))>(((((0X79538123)AND(rt1.c3)))OR(rt1.c4))))) ISNULL));
SELECT DISTINCT rt1.c2, vt64.c0, rt1.c4, rt1.c3, rt1.c0, rt1.c1 FROM vt64 LEFT OUTER JOIN rt1 ON (~ (((((rt1.c1)AND(rt1.c3)))OR(rt1.c2))));
SELECT rt1.c2, rt1.c0 FROM rt1, vt64 GROUP BY rt1.c2, rt1.c0;
SELECT ALL rt1.c2, rt1.c0 FROM rt1, vt64 WHERE (rt1.c5) GROUP BY rt1.c2, rt1.c0 UNION SELECT ALL rt1.c2, rt1.c0 FROM rt1, vt64 WHERE ((NOT (rt1.c5))) GROUP BY rt1.c2, rt1.c0 UNION SELECT rt1.c2, rt1.c0 FROM rt1, vt64 WHERE (((rt1.c5) ISNULL)) GROUP BY rt1.c2, rt1.c0;
SELECT rt1.c2, rt1.c0 FROM rt1, vt64 GROUP BY rt1.c2, rt1.c0;
SELECT vt64.lid, vt64.c0 FROM vt64 GROUP BY vt64.lid, vt64.c0;
SELECT ALL vt64.lid, vt64.c0 FROM vt64 GROUP BY vt64.lid, vt64.c0 HAVING COUNT(AVG(vt64.c0)) UNION ALL SELECT vt64.lid, vt64.c0 FROM vt64 GROUP BY vt64.lid, vt64.c0 HAVING (NOT (COUNT(AVG(vt64.c0)))) UNION ALL SELECT vt64.lid, vt64.c0 FROM vt64 GROUP BY vt64.lid, vt64.c0 HAVING ((COUNT(AVG(vt64.c0))) ISNULL);
SELECT ALL * FROM rt1;
SELECT ALL * FROM rt1 WHERE (CAST(0.3413178920249089 AS BLOB) COLLATE RTRIM) UNION ALL SELECT * FROM rt1 WHERE ((NOT (CAST(0.3413178920249089 AS BLOB) COLLATE RTRIM))) UNION ALL SELECT ALL * FROM rt1 WHERE (((CAST(0.3413178920249089 AS BLOB) COLLATE RTRIM) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT * FROM vt64;
SELECT DISTINCT * FROM vt64 WHERE (((vt64.lid) NOT NULL) COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt64 WHERE ((NOT (((vt64.lid) NOT NULL) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt64 WHERE (((((vt64.lid) NOT NULL) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt64;
SELECT rt1.c4, rt1.c0, vt64.lid, rt1.c3, rt1.c2, vt64.c0 FROM vt64, rt1 GROUP BY rt1.c4, rt1.c0, vt64.lid, rt1.c3, rt1.c2, vt64.c0;
SELECT ALL rt1.c4, rt1.c0, vt64.lid, rt1.c3, rt1.c2, vt64.c0 FROM vt64, rt1 WHERE (vt64.c0) GROUP BY rt1.c4, rt1.c0, vt64.lid, rt1.c3, rt1.c2, vt64.c0 UNION SELECT ALL rt1.c4, rt1.c0, vt64.lid, rt1.c3, rt1.c2, vt64.c0 FROM vt64, rt1 WHERE ((NOT (vt64.c0))) GROUP BY rt1.c4, rt1.c0, vt64.lid, rt1.c3, rt1.c2, vt64.c0 UNION SELECT rt1.c4, rt1.c0, vt64.lid, rt1.c3, rt1.c2, vt64.c0 FROM vt64, rt1 WHERE (((vt64.c0) ISNULL)) GROUP BY rt1.c4, rt1.c0, vt64.lid, rt1.c3, rt1.c2, vt64.c0;
SELECT rt1.c4, rt1.c0, vt64.lid, rt1.c3, rt1.c2, vt64.c0 FROM vt64, rt1 GROUP BY rt1.c4, rt1.c0, vt64.lid, rt1.c3, rt1.c2, vt64.c0;
SELECT vt64.c0, vt64.lid FROM vt64 GROUP BY vt64.c0, vt64.lid;
SELECT vt64.c0, vt64.lid FROM vt64 GROUP BY vt64.c0, vt64.lid HAVING ((COUNT(vt64.lid)) NOT BETWEEN (CASE COUNT(vt64.c0)  WHEN TOTAL(TOTAL(AVG(vt64.c0))) THEN COUNT(*) ELSE TOTAL(TOTAL(vt64.c0)) END) AND (vt64.c0 COLLATE BINARY)) UNION ALL SELECT ALL vt64.c0, vt64.lid FROM vt64 GROUP BY vt64.c0, vt64.lid HAVING (NOT (((COUNT(vt64.lid)) NOT BETWEEN (CASE COUNT(vt64.c0)  WHEN TOTAL(TOTAL(AVG(vt64.c0))) THEN COUNT(*) ELSE TOTAL(TOTAL(vt64.c0)) END) AND (vt64.c0 COLLATE BINARY)))) UNION ALL SELECT ALL vt64.c0, vt64.lid FROM vt64 GROUP BY vt64.c0, vt64.lid HAVING ((((COUNT(vt64.lid)) NOT BETWEEN (CASE COUNT(vt64.c0)  WHEN TOTAL(TOTAL(AVG(vt64.c0))) THEN COUNT(*) ELSE TOTAL(TOTAL(vt64.c0)) END) AND (vt64.c0 COLLATE BINARY))) ISNULL);
SELECT rt1.c4, rt1.c1, vt64.c0, rt1.c0, rt1.c6, rt1.c2, rt1.c5, vt64.lid FROM rt1, vt64;
SELECT rt1.c4, rt1.c1, vt64.c0, rt1.c0, rt1.c6, rt1.c2, rt1.c5, vt64.lid FROM rt1, vt64 WHERE (CASE WHEN vt64.c0 THEN rt1.c5 ELSE rt1.c4 END COLLATE BINARY) UNION ALL SELECT ALL rt1.c4, rt1.c1, vt64.c0, rt1.c0, rt1.c6, rt1.c2, rt1.c5, vt64.lid FROM rt1, vt64 WHERE ((NOT (CASE WHEN vt64.c0 THEN rt1.c5 ELSE rt1.c4 END COLLATE BINARY))) UNION ALL SELECT ALL rt1.c4, rt1.c1, vt64.c0, rt1.c0, rt1.c6, rt1.c2, rt1.c5, vt64.lid FROM rt1, vt64 WHERE (((CASE WHEN vt64.c0 THEN rt1.c5 ELSE rt1.c4 END COLLATE BINARY) ISNULL));
SELECT rt1.c4, rt1.c1, vt64.c0, rt1.c0, rt1.c6, rt1.c2, rt1.c5, vt64.lid FROM rt1, vt64;
SELECT DISTINCT vt64.c0 FROM vt64, rt1;
SELECT DISTINCT vt64.c0 FROM vt64, rt1 WHERE (((('' IN ()))GLOB(x''))) UNION SELECT DISTINCT vt64.c0 FROM vt64, rt1 WHERE ((NOT (((('' IN ()))GLOB(x''))))) UNION SELECT DISTINCT vt64.c0 FROM vt64, rt1 WHERE (((((('' IN ()))GLOB(x''))) ISNULL));
SELECT DISTINCT vt64.c0 FROM vt64, rt1;
SELECT rt1.c0, vt64.lid, rt1.c6, rt1.c4, rt1.c2, vt64.c0, rt1.c3, rt1.c5, rt1.c1 FROM rt1, vt64 GROUP BY rt1.c0, vt64.lid, rt1.c6, rt1.c4, rt1.c2, vt64.c0, rt1.c3, rt1.c5, rt1.c1;
SELECT ALL rt1.c0, vt64.lid, rt1.c6, rt1.c4, rt1.c2, vt64.c0, rt1.c3, rt1.c5, rt1.c1 FROM rt1, vt64 WHERE (((((((((((((((rt1.c2)AND(rt1.c5)))AND(rt1.c0)))AND(rt1.c1)))OR(NULL)))OR(rt1.c0)))OR(rt1.c0)))%((NOT (rt1.c3))))) GROUP BY rt1.c0, vt64.lid, rt1.c6, rt1.c4, rt1.c2, vt64.c0, rt1.c3, rt1.c5, rt1.c1 UNION SELECT rt1.c0, vt64.lid, rt1.c6, rt1.c4, rt1.c2, vt64.c0, rt1.c3, rt1.c5, rt1.c1 FROM rt1, vt64 WHERE ((NOT (((((((((((((((rt1.c2)AND(rt1.c5)))AND(rt1.c0)))AND(rt1.c1)))OR(NULL)))OR(rt1.c0)))OR(rt1.c0)))%((NOT (rt1.c3))))))) GROUP BY rt1.c0, vt64.lid, rt1.c6, rt1.c4, rt1.c2, vt64.c0, rt1.c3, rt1.c5, rt1.c1 UNION SELECT ALL rt1.c0, vt64.lid, rt1.c6, rt1.c4, rt1.c2, vt64.c0, rt1.c3, rt1.c5, rt1.c1 FROM rt1, vt64 WHERE (((((((((((((((((rt1.c2)AND(rt1.c5)))AND(rt1.c0)))AND(rt1.c1)))OR(NULL)))OR(rt1.c0)))OR(rt1.c0)))%((NOT (rt1.c3))))) ISNULL)) GROUP BY rt1.c0, vt64.lid, rt1.c6, rt1.c4, rt1.c2, vt64.c0, rt1.c3, rt1.c5, rt1.c1;
SELECT rt1.c0, vt64.lid, rt1.c6, rt1.c4, rt1.c2, vt64.c0, rt1.c3, rt1.c5, rt1.c1 FROM rt1, vt64 GROUP BY rt1.c0, vt64.lid, rt1.c6, rt1.c4, rt1.c2, vt64.c0, rt1.c3, rt1.c5, rt1.c1;
SELECT ALL rt1.c6, rt1.c4, rt1.c3 FROM rt1 GROUP BY rt1.c6, rt1.c4, rt1.c3;
SELECT rt1.c6, rt1.c4, rt1.c3 FROM rt1 GROUP BY rt1.c6, rt1.c4, rt1.c3 HAVING rt1.c3 UNION ALL SELECT rt1.c6, rt1.c4, rt1.c3 FROM rt1 GROUP BY rt1.c6, rt1.c4, rt1.c3 HAVING (NOT (rt1.c3)) UNION ALL SELECT rt1.c6, rt1.c4, rt1.c3 FROM rt1 GROUP BY rt1.c6, rt1.c4, rt1.c3 HAVING ((rt1.c3) ISNULL);
SELECT ALL rt1.c6, rt1.c4, rt1.c3 FROM rt1 GROUP BY rt1.c6, rt1.c4, rt1.c3;
SELECT rt1.c6, rt1.c4, rt1.c3 FROM rt1 GROUP BY rt1.c6, rt1.c4, rt1.c3 HAVING rt1.c3 UNION ALL SELECT rt1.c6, rt1.c4, rt1.c3 FROM rt1 GROUP BY rt1.c6, rt1.c4, rt1.c3 HAVING (NOT (rt1.c3)) UNION ALL SELECT rt1.c6, rt1.c4, rt1.c3 FROM rt1 GROUP BY rt1.c6, rt1.c4, rt1.c3 HAVING ((rt1.c3) ISNULL);
SELECT ALL rt1.c6, rt1.c4, rt1.c3 FROM rt1 GROUP BY rt1.c6, rt1.c4, rt1.c3;
SELECT * FROM rt1;
SELECT * FROM rt1 WHERE (CAST(rt1.c2 AS NUMERIC) COLLATE RTRIM COLLATE RTRIM) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT (CAST(rt1.c2 AS NUMERIC) COLLATE RTRIM COLLATE RTRIM))) UNION ALL SELECT * FROM rt1 WHERE (((CAST(rt1.c2 AS NUMERIC) COLLATE RTRIM COLLATE RTRIM) ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT rt1.c5, rt1.c3, rt1.c0, vt64.c0 FROM rt1 CROSS JOIN vt64 ON (- (((rt1.c5) NOT BETWEEN (rt1.c1) AND (rt1.c5))));
SELECT DISTINCT rt1.c5, rt1.c3, rt1.c0, vt64.c0 FROM rt1 CROSS JOIN vt64 ON (- (((rt1.c5) NOT BETWEEN (rt1.c1) AND (rt1.c5)))) WHERE (CASE ((rt1.c2) BETWEEN (vt64.lid) AND (rt1.c6))  WHEN LTRIM(rt1.c3, vt64.c0) THEN rt1.c6 ELSE ((rt1.c0) IS FALSE) END) UNION SELECT DISTINCT rt1.c5, rt1.c3, rt1.c0, vt64.c0 FROM rt1 CROSS JOIN vt64 ON (- (((rt1.c5) NOT BETWEEN (rt1.c1) AND (rt1.c5)))) WHERE ((NOT (CASE ((rt1.c2) BETWEEN (vt64.lid) AND (rt1.c6))  WHEN LTRIM(rt1.c3, vt64.c0) THEN rt1.c6 ELSE ((rt1.c0) IS FALSE) END))) UNION SELECT DISTINCT rt1.c5, rt1.c3, rt1.c0, vt64.c0 FROM rt1 CROSS JOIN vt64 ON (- (((rt1.c5) NOT BETWEEN (rt1.c1) AND (rt1.c5)))) WHERE (((CASE ((rt1.c2) BETWEEN (vt64.lid) AND (rt1.c6))  WHEN LTRIM(rt1.c3, vt64.c0) THEN rt1.c6 ELSE ((rt1.c0) IS FALSE) END) ISNULL));
SELECT DISTINCT rt1.c5, rt1.c3, rt1.c0, vt64.c0 FROM rt1 CROSS JOIN vt64 ON (- (((rt1.c5) NOT BETWEEN (rt1.c1) AND (rt1.c5))));
SELECT rt1.c2 FROM rt1, vt64 GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1, vt64 WHERE (CASE (rt1.c2 IN ())  WHEN json_array_length(0.8399861782131758, vt64.lid) THEN ((rt1.c4)!=('1881617056')) WHEN (((rt1.c4))>=((rt1.c4))) THEN ((0.10522326116196967) BETWEEN (rt1.c4) AND (rt1.c0)) WHEN ((vt64.lid)<(rt1.c4)) THEN (((vt64.lid))==((rt1.c6))) END) GROUP BY rt1.c2 UNION SELECT ALL rt1.c2 FROM rt1, vt64 WHERE ((NOT (CASE (rt1.c2 IN ())  WHEN json_array_length(0.8399861782131758, vt64.lid) THEN ((rt1.c4)<>('1881617056')) WHEN (((rt1.c4))>=((rt1.c4))) THEN ((0.10522326116196967) BETWEEN (rt1.c4) AND (rt1.c0)) WHEN ((vt64.lid)<(rt1.c4)) THEN (((vt64.lid))=((rt1.c6))) END))) GROUP BY rt1.c2 UNION SELECT rt1.c2 FROM rt1, vt64 WHERE (((CASE (rt1.c2 IN ())  WHEN json_array_length(0.8399861782131758, vt64.lid) THEN ((rt1.c4)!=('1881617056')) WHEN (((rt1.c4))>=((rt1.c4))) THEN ((0.10522326116196967) BETWEEN (rt1.c4) AND (rt1.c0)) WHEN ((vt64.lid)<(rt1.c4)) THEN (((vt64.lid))==((rt1.c6))) END) ISNULL)) GROUP BY rt1.c2;
SELECT ALL rt1.c0, vt64.lid, rt1.c4, rt1.c5 FROM vt64 INNER JOIN rt1 ON ((CAST(rt1.c6 AS REAL)) NOT BETWEEN (((rt1.c5)<<(rt1.c1))) AND (LIKELY(rt1.c3))) GROUP BY rt1.c0, vt64.lid, rt1.c4, rt1.c5;
SELECT ALL rt1.c0, vt64.lid, rt1.c4, rt1.c5 FROM vt64 INNER JOIN rt1 ON ((CAST(rt1.c6 AS REAL)) NOT BETWEEN (((rt1.c5)<<(rt1.c1))) AND (LIKELY(rt1.c3))) GROUP BY rt1.c0, vt64.lid, rt1.c4, rt1.c5 HAVING json_insert(0.445938929676744, x'8432', MAX(MIN(rt1.c5))) UNION ALL SELECT rt1.c0, vt64.lid, rt1.c4, rt1.c5 FROM vt64 INNER JOIN rt1 ON ((CAST(rt1.c6 AS REAL)) NOT BETWEEN (((rt1.c5)<<(rt1.c1))) AND (LIKELY(rt1.c3))) GROUP BY rt1.c0, vt64.lid, rt1.c4, rt1.c5 HAVING (NOT (json_insert(0.445938929676744, x'8432', MAX(MIN(rt1.c5))))) UNION ALL SELECT rt1.c0, vt64.lid, rt1.c4, rt1.c5 FROM vt64 INNER JOIN rt1 ON ((CAST(rt1.c6 AS REAL)) NOT BETWEEN (((rt1.c5)<<(rt1.c1))) AND (LIKELY(rt1.c3))) GROUP BY rt1.c0, vt64.lid, rt1.c4, rt1.c5 HAVING ((json_insert(0.445938929676744, x'8432', MAX(MIN(rt1.c5)))) ISNULL);
SELECT MIN((((CASE WHEN vt64.c0 THEN rt1.c1 END))==((rt1.c2)))) FROM vt64, rt1 ORDER BY NULL DESC  NULLS LAST;
SELECT rt1.c1, vt64.c0, rt1.c5, rt1.c6, vt64.lid, rt1.c2, rt1.c4, rt1.c3 FROM rt1, vt64;
SELECT rt1.c1, vt64.c0, rt1.c5, rt1.c6, vt64.lid, rt1.c2, rt1.c4, rt1.c3 FROM rt1, vt64 WHERE (((LIKELIHOOD(DISTINCT rt1.c5, 0.8039144059823501))LIKE(CASE vt64.lid  WHEN rt1.c4 THEN rt1.c0 ELSE x'' END))) UNION ALL SELECT ALL rt1.c1, vt64.c0, rt1.c5, rt1.c6, vt64.lid, rt1.c2, rt1.c4, rt1.c3 FROM rt1, vt64 WHERE ((NOT (((LIKELIHOOD(DISTINCT rt1.c5, 0.8039144059823501))LIKE(CASE vt64.lid  WHEN rt1.c4 THEN rt1.c0 ELSE x'' END))))) UNION ALL SELECT ALL rt1.c1, vt64.c0, rt1.c5, rt1.c6, vt64.lid, rt1.c2, rt1.c4, rt1.c3 FROM rt1, vt64 WHERE (((((LIKELIHOOD(DISTINCT rt1.c5, 0.8039144059823501))LIKE(CASE vt64.lid  WHEN rt1.c4 THEN rt1.c0 ELSE x'' END))) ISNULL));
SELECT rt1.c1, vt64.c0, rt1.c5, rt1.c6, vt64.lid, rt1.c2, rt1.c4, rt1.c3 FROM rt1, vt64;
SELECT DISTINCT * FROM rt1, vt64;
SELECT DISTINCT * FROM rt1, vt64 WHERE ((((((rt1.c0, vt64.c0, rt1.c2))>=((rt1.c3, rt1.c3, rt1.c3)))) BETWEEN (json_valid(rt1.c0)) AND (vt64.lid))) UNION SELECT DISTINCT * FROM rt1, vt64 WHERE ((NOT ((((((rt1.c0, vt64.c0, rt1.c2))>=((rt1.c3, rt1.c3, rt1.c3)))) BETWEEN (json_valid(rt1.c0)) AND (vt64.lid))))) UNION SELECT DISTINCT * FROM rt1, vt64 WHERE ((((((((rt1.c0, vt64.c0, rt1.c2))>=((rt1.c3, rt1.c3, rt1.c3)))) BETWEEN (json_valid(rt1.c0)) AND (vt64.lid))) ISNULL));
SELECT DISTINCT * FROM rt1, vt64;
SELECT rt1.c0, rt1.c3, rt1.c4, rt1.c1, rt1.c5, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c3, rt1.c4, rt1.c1, rt1.c5, rt1.c2;
SELECT ALL rt1.c0, rt1.c3, rt1.c4, rt1.c1, rt1.c5, rt1.c2 FROM rt1 WHERE (CAST(rt1.c1 AS BLOB)) GROUP BY rt1.c0, rt1.c3, rt1.c4, rt1.c1, rt1.c5, rt1.c2 UNION SELECT ALL rt1.c0, rt1.c3, rt1.c4, rt1.c1, rt1.c5, rt1.c2 FROM rt1 WHERE ((NOT (CAST(rt1.c1 AS BLOB)))) GROUP BY rt1.c0, rt1.c3, rt1.c4, rt1.c1, rt1.c5, rt1.c2 UNION SELECT ALL rt1.c0, rt1.c3, rt1.c4, rt1.c1, rt1.c5, rt1.c2 FROM rt1 WHERE (((CAST(rt1.c1 AS BLOB)) ISNULL)) GROUP BY rt1.c0, rt1.c3, rt1.c4, rt1.c1, rt1.c5, rt1.c2;
SELECT rt1.c0, rt1.c3, rt1.c4, rt1.c1, rt1.c5, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c3, rt1.c4, rt1.c1, rt1.c5, rt1.c2;
SELECT rt1.c3, rt1.c4, rt1.c6, rt1.c0 FROM rt1 GROUP BY rt1.c3, rt1.c4, rt1.c6, rt1.c0;
SELECT ALL rt1.c3, rt1.c4, rt1.c6, rt1.c0 FROM rt1 GROUP BY rt1.c3, rt1.c4, rt1.c6, rt1.c0 HAVING AVG(COUNT(*)) UNION ALL SELECT rt1.c3, rt1.c4, rt1.c6, rt1.c0 FROM rt1 GROUP BY rt1.c3, rt1.c4, rt1.c6, rt1.c0 HAVING (NOT (AVG(COUNT(*)))) UNION ALL SELECT ALL rt1.c3, rt1.c4, rt1.c6, rt1.c0 FROM rt1 GROUP BY rt1.c3, rt1.c4, rt1.c6, rt1.c0 HAVING ((AVG(COUNT(*))) ISNULL);
SELECT * FROM rt1;
SELECT * FROM rt1 WHERE (((((NULL)LIKE(rt1.c5)))>((((rt1.c3, x'', rt1.c3, rt1.c0, rt1.c4)) NOT BETWEEN ((rt1.c0, NULL, rt1.c5, rt1.c5, rt1.c4)) AND ((rt1.c0, rt1.c2, 0.5312979065997104, rt1.c6, rt1.c2)))))) UNION ALL SELECT * FROM rt1 NOT INDEXED WHERE ((NOT (((((NULL)LIKE(rt1.c5)))>((((rt1.c3, x'', rt1.c3, rt1.c0, rt1.c4)) NOT BETWEEN ((rt1.c0, NULL, rt1.c5, rt1.c5, rt1.c4)) AND ((rt1.c0, rt1.c2, 0.5312979065997104, rt1.c6, rt1.c2)))))))) UNION ALL SELECT * FROM rt1 WHERE (((((((NULL)LIKE(rt1.c5)))>((((rt1.c3, x'', rt1.c3, rt1.c0, rt1.c4)) NOT BETWEEN ((rt1.c0, NULL, rt1.c5, rt1.c5, rt1.c4)) AND ((rt1.c0, rt1.c2, 0.5312979065997104, rt1.c6, rt1.c2)))))) ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT * FROM rt1, vt64;
SELECT DISTINCT * FROM rt1, vt64 WHERE (CASE json_insert(rt1.c4, rt1.c4, rt1.c2)  WHEN (((0.21193105275375368))<((rt1.c3))) THEN CAST(rt1.c2 AS BLOB) WHEN ((vt64.lid) BETWEEN (rt1.c5) AND (rt1.c4)) THEN CASE rt1.c2  WHEN rt1.c6 THEN rt1.c3 END WHEN ((vt64.c0) BETWEEN (vt64.lid) AND (rt1.c0)) THEN ((rt1.c0)GLOB(rt1.c2)) ELSE (((rt1.c0))<((rt1.c0))) END) UNION SELECT DISTINCT * FROM rt1, vt64 WHERE ((NOT (CASE json_insert(rt1.c4, rt1.c4, rt1.c2)  WHEN (((0.21193105275375368))<((rt1.c3))) THEN CAST(rt1.c2 AS BLOB) WHEN ((vt64.lid) BETWEEN (rt1.c5) AND (rt1.c4)) THEN CASE rt1.c2  WHEN rt1.c6 THEN rt1.c3 END WHEN ((vt64.c0) BETWEEN (vt64.lid) AND (rt1.c0)) THEN ((rt1.c0)GLOB(rt1.c2)) ELSE (((rt1.c0))<((rt1.c0))) END))) UNION SELECT DISTINCT * FROM rt1, vt64 WHERE (((CASE json_insert(rt1.c4, rt1.c4, rt1.c2)  WHEN (((0.21193105275375368))<((rt1.c3))) THEN CAST(rt1.c2 AS BLOB) WHEN ((vt64.lid) BETWEEN (rt1.c5) AND (rt1.c4)) THEN CASE rt1.c2  WHEN rt1.c6 THEN rt1.c3 END WHEN ((vt64.c0) BETWEEN (vt64.lid) AND (rt1.c0)) THEN ((rt1.c0)GLOB(rt1.c2)) ELSE (((rt1.c0))<((rt1.c0))) END) ISNULL));
SELECT ALL vt64.lid FROM vt64 GROUP BY vt64.lid;
SELECT ALL vt64.lid FROM vt64 WHERE (((((CAST(vt64.lid AS INTEGER))AND(CAST(vt64.c0 AS TEXT))))OR(((vt64.c0) BETWEEN (vt64.lid) AND (vt64.lid))))) GROUP BY vt64.lid UNION SELECT vt64.lid FROM vt64 WHERE ((NOT (((((CAST(vt64.lid AS INTEGER))AND(CAST(vt64.c0 AS TEXT))))OR(((vt64.c0) BETWEEN (vt64.lid) AND (vt64.lid))))))) GROUP BY vt64.lid UNION SELECT ALL vt64.lid FROM vt64 WHERE (((((((CAST(vt64.lid AS INTEGER))AND(CAST(vt64.c0 AS TEXT))))OR(((vt64.c0) BETWEEN (vt64.lid) AND (vt64.lid))))) ISNULL)) GROUP BY vt64.lid;
SELECT ALL vt64.lid FROM vt64 GROUP BY vt64.lid;
SELECT ALL rt1.c1, rt1.c4 FROM rt1, vt64 GROUP BY rt1.c1, rt1.c4;
SELECT rt1.c1, rt1.c4 FROM rt1, vt64 GROUP BY rt1.c1, rt1.c4 HAVING GROUP_CONCAT(COUNT(MIN(GROUP_CONCAT(rt1.c2))) COLLATE RTRIM) UNION ALL SELECT rt1.c1, rt1.c4 FROM rt1, vt64 GROUP BY rt1.c1, rt1.c4 HAVING (NOT (GROUP_CONCAT(COUNT(MIN(GROUP_CONCAT(rt1.c2))) COLLATE RTRIM))) UNION ALL SELECT ALL rt1.c1, rt1.c4 FROM rt1, vt64 GROUP BY rt1.c1, rt1.c4 HAVING ((GROUP_CONCAT(COUNT(MIN(GROUP_CONCAT(rt1.c2))) COLLATE RTRIM)) ISNULL);
SELECT * FROM rt1;
SELECT * FROM rt1 WHERE (((NULL)<(((rt1.c6)==(rt1.c1))))) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT (((NULL)<(((rt1.c6)==(rt1.c1))))))) UNION ALL SELECT ALL * FROM rt1 WHERE (((((NULL)<(((rt1.c6)=(rt1.c1))))) ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (((CASE rt1.c1  WHEN rt1.c6 THEN x'' END)<=(((((((((rt1.c6)OR(rt1.c3)))OR('0.7794440403933016')))AND('*✔Z')))OR(rt1.c4))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (((CASE rt1.c1  WHEN rt1.c6 THEN x'' END)<=(((((((((rt1.c6)OR(rt1.c3)))OR('0.7794440403933016')))AND('*✔Z')))OR(rt1.c4))))))) UNION SELECT DISTINCT * FROM rt1 WHERE (((((CASE rt1.c1  WHEN rt1.c6 THEN x'' END)<=(((((((((rt1.c6)OR(rt1.c3)))OR('0.7794440403933016')))AND('*✔Z')))OR(rt1.c4))))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT vt64.lid, rt1.c2, rt1.c6, vt64.c0, rt1.c4, rt1.c5, rt1.c1 FROM vt64 RIGHT OUTER JOIN rt1 ON CASE (((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c1)))  WHEN ((rt1.c0) BETWEEN (x'a2545c82') AND (vt64.c0)) THEN ((rt1.c3)|(vt64.c0)) WHEN (((vt64.lid, rt1.c4, x'037b'))=((rt1.c2, vt64.lid, vt64.c0))) THEN CASE rt1.c4  WHEN rt1.c1 THEN vt64.c0 END WHEN ((rt1.c1)GLOB(rt1.c0)) THEN (((vt64.lid, vt64.c0, rt1.c3))<((rt1.c5, rt1.c6, vt64.c0))) END GROUP BY vt64.lid, rt1.c2, rt1.c6, vt64.c0, rt1.c4, rt1.c5, rt1.c1;
SELECT vt64.lid, rt1.c2, rt1.c6, vt64.c0, rt1.c4, rt1.c5, rt1.c1 FROM vt64 RIGHT OUTER JOIN rt1 ON CASE (((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c1)))  WHEN ((rt1.c0) BETWEEN (x'a2545c82') AND (vt64.c0)) THEN ((rt1.c3)|(vt64.c0)) WHEN (((vt64.lid, rt1.c4, x'037b'))=((rt1.c2, vt64.lid, vt64.c0))) THEN CASE rt1.c4  WHEN rt1.c1 THEN vt64.c0 END WHEN ((rt1.c1)GLOB(rt1.c0)) THEN (((vt64.lid, vt64.c0, rt1.c3))<((rt1.c5, rt1.c6, vt64.c0))) END WHERE (((((rt1.c6) NOT BETWEEN (rt1.c3) AND (rt1.c1))) IS FALSE)) GROUP BY vt64.lid, rt1.c2, rt1.c6, vt64.c0, rt1.c4, rt1.c5, rt1.c1 UNION SELECT ALL vt64.lid, rt1.c2, rt1.c6, vt64.c0, rt1.c4, rt1.c5, rt1.c1 FROM vt64 RIGHT OUTER JOIN rt1 ON CASE (((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c1)))  WHEN ((rt1.c0) BETWEEN (x'a2545c82') AND (vt64.c0)) THEN ((rt1.c3)|(vt64.c0)) WHEN (((vt64.lid, rt1.c4, x'037b'))==((rt1.c2, vt64.lid, vt64.c0))) THEN CASE rt1.c4  WHEN rt1.c1 THEN vt64.c0 END WHEN ((rt1.c1)GLOB(rt1.c0)) THEN (((vt64.lid, vt64.c0, rt1.c3))<((rt1.c5, rt1.c6, vt64.c0))) END WHERE ((NOT (((((rt1.c6) NOT BETWEEN (rt1.c3) AND (rt1.c1))) IS FALSE)))) GROUP BY vt64.lid, rt1.c2, rt1.c6, vt64.c0, rt1.c4, rt1.c5, rt1.c1 UNION SELECT ALL vt64.lid, rt1.c2, rt1.c6, vt64.c0, rt1.c4, rt1.c5, rt1.c1 FROM vt64 RIGHT OUTER JOIN rt1 ON CASE (((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c1)))  WHEN ((rt1.c0) BETWEEN (x'a2545c82') AND (vt64.c0)) THEN ((rt1.c3)|(vt64.c0)) WHEN (((vt64.lid, rt1.c4, x'037b'))==((rt1.c2, vt64.lid, vt64.c0))) THEN CASE rt1.c4  WHEN rt1.c1 THEN vt64.c0 END WHEN ((rt1.c1)GLOB(rt1.c0)) THEN (((vt64.lid, vt64.c0, rt1.c3))<((rt1.c5, rt1.c6, vt64.c0))) END WHERE (((((((rt1.c6) NOT BETWEEN (rt1.c3) AND (rt1.c1))) IS FALSE)) ISNULL)) GROUP BY vt64.lid, rt1.c2, rt1.c6, vt64.c0, rt1.c4, rt1.c5, rt1.c1;
SELECT vt64.lid, rt1.c2, rt1.c6, vt64.c0, rt1.c4, rt1.c5, rt1.c1 FROM vt64 RIGHT OUTER JOIN rt1 ON CASE (((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c1)))  WHEN ((rt1.c0) BETWEEN (x'a2545c82') AND (vt64.c0)) THEN ((rt1.c3)|(vt64.c0)) WHEN (((vt64.lid, rt1.c4, x'037b'))=((rt1.c2, vt64.lid, vt64.c0))) THEN CASE rt1.c4  WHEN rt1.c1 THEN vt64.c0 END WHEN ((rt1.c1)GLOB(rt1.c0)) THEN (((vt64.lid, vt64.c0, rt1.c3))<((rt1.c5, rt1.c6, vt64.c0))) END GROUP BY vt64.lid, rt1.c2, rt1.c6, vt64.c0, rt1.c4, rt1.c5, rt1.c1;
SELECT vt64.lid FROM vt64 GROUP BY vt64.lid;
SELECT vt64.lid FROM vt64 GROUP BY vt64.lid HAVING COUNT(*) UNION ALL SELECT vt64.lid FROM vt64 GROUP BY vt64.lid HAVING (NOT (COUNT(*))) UNION ALL SELECT vt64.lid FROM vt64 GROUP BY vt64.lid HAVING ((COUNT(*)) ISNULL);
SELECT vt64.lid FROM vt64 GROUP BY vt64.lid;
SELECT vt64.lid FROM vt64 GROUP BY vt64.lid HAVING COUNT(*) UNION ALL SELECT vt64.lid FROM vt64 GROUP BY vt64.lid HAVING (NOT (COUNT(*))) UNION ALL SELECT vt64.lid FROM vt64 GROUP BY vt64.lid HAVING ((COUNT(*)) ISNULL);
SELECT vt64.lid FROM vt64 GROUP BY vt64.lid;
SELECT ALL * FROM rt1;
SELECT * FROM rt1 WHERE ((((IFNULL(rt1.c0, rt1.c2)))<>((rt1.c6)))) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT ((((IFNULL(rt1.c0, rt1.c2)))<>((rt1.c6)))))) UNION ALL SELECT ALL * FROM rt1 WHERE ((((((IFNULL(rt1.c0, rt1.c2)))<>((rt1.c6)))) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT rt1.c0, rt1.c3, rt1.c6, rt1.c4, rt1.c5, rt1.c2 FROM rt1;
SELECT DISTINCT rt1.c0, rt1.c3, rt1.c6, rt1.c4, rt1.c5, rt1.c2 FROM rt1 WHERE (((LIKELY(DISTINCT rt1.c0)) NOT BETWEEN (((rt1.c5)-(rt1.c6))) AND (((rt1.c6)<=(rt1.c2))))) UNION SELECT DISTINCT rt1.c0, rt1.c3, rt1.c6, rt1.c4, rt1.c5, rt1.c2 FROM rt1 WHERE ((NOT (((LIKELY(DISTINCT rt1.c0)) NOT BETWEEN (((rt1.c5)-(rt1.c6))) AND (((rt1.c6)<=(rt1.c2))))))) UNION SELECT DISTINCT rt1.c0, rt1.c3, rt1.c6, rt1.c4, rt1.c5, rt1.c2 FROM rt1 WHERE (((((LIKELY(DISTINCT rt1.c0)) NOT BETWEEN (((rt1.c5)-(rt1.c6))) AND (((rt1.c6)<=(rt1.c2))))) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c3, rt1.c6, rt1.c4, rt1.c5, rt1.c2 FROM rt1;
SELECT vt64.c0 FROM vt64 GROUP BY vt64.c0;
SELECT ALL vt64.c0 FROM vt64 WHERE (vt64.c0) GROUP BY vt64.c0 UNION SELECT ALL vt64.c0 FROM vt64 WHERE ((NOT (vt64.c0))) GROUP BY vt64.c0 UNION SELECT vt64.c0 FROM vt64 WHERE (((vt64.c0) ISNULL)) GROUP BY vt64.c0;
SELECT vt64.c0 FROM vt64 GROUP BY vt64.c0;
SELECT ALL vt64.c0, vt64.lid, rt1.c0, rt1.c5, rt1.c1, rt1.c6 FROM vt64 NATURAL JOIN rt1 GROUP BY vt64.c0, vt64.lid, rt1.c0, rt1.c5, rt1.c1, rt1.c6;
SELECT ALL vt64.c0, vt64.lid, rt1.c0, rt1.c5, rt1.c1, rt1.c6 FROM vt64 NATURAL JOIN rt1 GROUP BY vt64.c0, vt64.lid, rt1.c0, rt1.c5, rt1.c1, rt1.c6 HAVING MAX(GROUP_CONCAT(MIN(AVG(TOTAL(GROUP_CONCAT(COUNT(*))))))) UNION ALL SELECT ALL vt64.c0, vt64.lid, rt1.c0, rt1.c5, rt1.c1, rt1.c6 FROM vt64 NATURAL JOIN rt1 GROUP BY vt64.c0, vt64.lid, rt1.c0, rt1.c5, rt1.c1, rt1.c6 HAVING (NOT (MAX(GROUP_CONCAT(MIN(AVG(TOTAL(GROUP_CONCAT(COUNT(*))))))))) UNION ALL SELECT ALL vt64.c0, vt64.lid, rt1.c0, rt1.c5, rt1.c1, rt1.c6 FROM vt64 NATURAL JOIN rt1 GROUP BY vt64.c0, vt64.lid, rt1.c0, rt1.c5, rt1.c1, rt1.c6 HAVING ((MAX(GROUP_CONCAT(MIN(AVG(TOTAL(GROUP_CONCAT(COUNT(*)))))))) ISNULL);
SELECT ALL * FROM vt64;
SELECT * FROM vt64 WHERE (((((vt64.c0, vt64.lid, vt64.c0)) NOT BETWEEN ((vt64.lid, vt64.c0, NULL)) AND ((vt64.c0, 0.054289069390394795, vt64.lid))) IN ())) UNION ALL SELECT * FROM vt64 WHERE ((NOT (((((vt64.c0, vt64.lid, vt64.c0)) NOT BETWEEN ((vt64.lid, vt64.c0, NULL)) AND ((vt64.c0, 0.054289069390394795, vt64.lid))) IN ())))) UNION ALL SELECT * FROM vt64 WHERE (((((((vt64.c0, vt64.lid, vt64.c0)) NOT BETWEEN ((vt64.lid, vt64.c0, NULL)) AND ((vt64.c0, 0.054289069390394795, vt64.lid))) IN ())) ISNULL));
SELECT ALL * FROM vt64;
SELECT DISTINCT * FROM rt1, vt64;
SELECT DISTINCT * FROM rt1, vt64 WHERE (((~ (rt1.c3)) IN (((rt1.c3)IS(rt1.c5))))) UNION SELECT DISTINCT * FROM rt1, vt64 WHERE ((NOT (((~ (rt1.c3)) IN (((rt1.c3)IS(rt1.c5))))))) UNION SELECT DISTINCT * FROM rt1, vt64 WHERE (((((~ (rt1.c3)) IN (((rt1.c3)IS(rt1.c5))))) ISNULL));
SELECT DISTINCT * FROM rt1, vt64;
SELECT ALL rt1.c2, rt1.c0, rt1.c5 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c5;
SELECT rt1.c2, rt1.c0, rt1.c5 FROM rt1 WHERE (((((rt1.c5)>>(rt1.c6)))IS((+ (rt1.c0))))) GROUP BY rt1.c2, rt1.c0, rt1.c5 UNION SELECT rt1.c2, rt1.c0, rt1.c5 FROM rt1 WHERE ((NOT (((((rt1.c5)>>(rt1.c6)))IS((+ (rt1.c0))))))) GROUP BY rt1.c2, rt1.c0, rt1.c5 UNION SELECT ALL rt1.c2, rt1.c0, rt1.c5 FROM rt1 WHERE (((((((rt1.c5)>>(rt1.c6)))IS((+ (rt1.c0))))) ISNULL)) GROUP BY rt1.c2, rt1.c0, rt1.c5;
SELECT ALL rt1.c2, rt1.c0, rt1.c5 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c5;
SELECT vt64.c0, rt1.c4, rt1.c6, rt1.c2, rt1.c3, vt64.lid, rt1.c5 FROM vt64 FULL OUTER JOIN rt1 ON 5.95619998E8 GROUP BY vt64.c0, rt1.c4, rt1.c6, rt1.c2, rt1.c3, vt64.lid, rt1.c5;
SELECT vt64.c0, rt1.c4, rt1.c6, rt1.c2, rt1.c3, vt64.lid, rt1.c5 FROM vt64 FULL OUTER JOIN rt1 ON 5.95619998E8 GROUP BY vt64.c0, rt1.c4, rt1.c6, rt1.c2, rt1.c3, vt64.lid, rt1.c5 HAVING MIN(TOTAL(TOTAL(rt1.c3))) UNION ALL SELECT vt64.c0, rt1.c4, rt1.c6, rt1.c2, rt1.c3, vt64.lid, rt1.c5 FROM vt64 FULL OUTER JOIN rt1 ON 5.95619998E8 GROUP BY vt64.c0, rt1.c4, rt1.c6, rt1.c2, rt1.c3, vt64.lid, rt1.c5 HAVING (NOT (MIN(TOTAL(TOTAL(rt1.c3))))) UNION ALL SELECT ALL vt64.c0, rt1.c4, rt1.c6, rt1.c2, rt1.c3, vt64.lid, rt1.c5 FROM vt64 FULL OUTER JOIN rt1 ON 5.95619998E8 GROUP BY vt64.c0, rt1.c4, rt1.c6, rt1.c2, rt1.c3, vt64.lid, rt1.c5 HAVING ((MIN(TOTAL(TOTAL(rt1.c3)))) ISNULL);
SELECT * FROM rt1;
SELECT * FROM rt1 WHERE (0x2b5be7e0) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT (0x2b5be7e0))) UNION ALL SELECT ALL * FROM rt1 WHERE (((0X2b5be7e0) ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT rt1.c6, rt1.c4, rt1.c1, rt1.c0, rt1.c5, rt1.c3, rt1.c2 FROM rt1;
SELECT DISTINCT rt1.c6, rt1.c4, rt1.c1, rt1.c0, rt1.c5, rt1.c3, rt1.c2 FROM rt1 WHERE (((((CASE WHEN rt1.c6 THEN rt1.c0 ELSE rt1.c6 END)AND(CASE rt1.c1  WHEN rt1.c4 THEN rt1.c0 WHEN x'' THEN rt1.c1 WHEN rt1.c0 THEN rt1.c4 END)))AND('-1130255891' COLLATE RTRIM))) UNION SELECT DISTINCT rt1.c6, rt1.c4, rt1.c1, rt1.c0, rt1.c5, rt1.c3, rt1.c2 FROM rt1 WHERE ((NOT (((((CASE WHEN rt1.c6 THEN rt1.c0 ELSE rt1.c6 END)AND(CASE rt1.c1  WHEN rt1.c4 THEN rt1.c0 WHEN x'' THEN rt1.c1 WHEN rt1.c0 THEN rt1.c4 END)))AND('-1130255891' COLLATE RTRIM))))) UNION SELECT DISTINCT rt1.c6, rt1.c4, rt1.c1, rt1.c0, rt1.c5, rt1.c3, rt1.c2 FROM rt1 WHERE (((((((CASE WHEN rt1.c6 THEN rt1.c0 ELSE rt1.c6 END)AND(CASE rt1.c1  WHEN rt1.c4 THEN rt1.c0 WHEN x'' THEN rt1.c1 WHEN rt1.c0 THEN rt1.c4 END)))AND('-1130255891' COLLATE RTRIM))) ISNULL));
SELECT DISTINCT rt1.c6, rt1.c4, rt1.c1, rt1.c0, rt1.c5, rt1.c3, rt1.c2 FROM rt1;
SELECT ALL vt64.c0 FROM vt64 GROUP BY vt64.c0;
SELECT vt64.c0 FROM vt64 WHERE (CAST((((vt64.lid)) BETWEEN ((vt64.c0)) AND ((vt64.c0))) AS BLOB)) GROUP BY vt64.c0 UNION SELECT vt64.c0 FROM vt64 WHERE ((NOT (CAST((((vt64.lid)) BETWEEN ((vt64.c0)) AND ((vt64.c0))) AS BLOB)))) GROUP BY vt64.c0 UNION SELECT vt64.c0 FROM vt64 WHERE (((CAST((((vt64.lid)) BETWEEN ((vt64.c0)) AND ((vt64.c0))) AS BLOB)) ISNULL)) GROUP BY vt64.c0;
SELECT ALL vt64.c0 FROM vt64 GROUP BY vt64.c0;
SELECT rt1.c5, rt1.c0 FROM vt64, rt1 GROUP BY rt1.c5, rt1.c0;
SELECT ALL rt1.c5, rt1.c0 FROM vt64, rt1 GROUP BY rt1.c5, rt1.c0 HAVING MAX(CAST(rt1.c5 AS BLOB)) UNION ALL SELECT ALL rt1.c5, rt1.c0 FROM vt64, rt1 GROUP BY rt1.c5, rt1.c0 HAVING (NOT (MAX(CAST(rt1.c5 AS BLOB)))) UNION ALL SELECT rt1.c5, rt1.c0 FROM vt64, rt1 GROUP BY rt1.c5, rt1.c0 HAVING ((MAX(CAST(rt1.c5 AS BLOB))) ISNULL);
SELECT rt1.c5, rt1.c0 FROM vt64, rt1 GROUP BY rt1.c5, rt1.c0;
SELECT ALL rt1.c5, rt1.c0 FROM vt64, rt1 GROUP BY rt1.c5, rt1.c0 HAVING MAX(CAST(rt1.c5 AS BLOB)) UNION ALL SELECT ALL rt1.c5, rt1.c0 FROM vt64, rt1 GROUP BY rt1.c5, rt1.c0 HAVING (NOT (MAX(CAST(rt1.c5 AS BLOB)))) UNION ALL SELECT rt1.c5, rt1.c0 FROM vt64, rt1 GROUP BY rt1.c5, rt1.c0 HAVING ((MAX(CAST(rt1.c5 AS BLOB))) ISNULL);
SELECT rt1.c5, rt1.c0 FROM vt64, rt1 GROUP BY rt1.c5, rt1.c0;
SELECT TOTAL((((vt64.lid)) BETWEEN ((((vt64.lid)<=(vt64.lid)))) AND ((((vt64.lid) BETWEEN (vt64.lid) AND (vt64.c0)))))) FROM vt64;
SELECT ALL * FROM rt1;
SELECT * FROM rt1 WHERE ('-1498855566') UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT ('-1498855566'))) UNION ALL SELECT ALL * FROM rt1 WHERE ((('-1498855566') ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (CASE ((((rt1.c2)OR(rt1.c0)))AND(rt1.c3))  WHEN (((rt1.c0)) BETWEEN ((rt1.c5)) AND ((rt1.c5))) THEN (((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))) ELSE rt1.c6 END) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (CASE ((((rt1.c2)OR(rt1.c0)))AND(rt1.c3))  WHEN (((rt1.c0)) BETWEEN ((rt1.c5)) AND ((rt1.c5))) THEN (((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))) ELSE rt1.c6 END))) UNION SELECT DISTINCT * FROM rt1 WHERE (((CASE ((((rt1.c2)OR(rt1.c0)))AND(rt1.c3))  WHEN (((rt1.c0)) BETWEEN ((rt1.c5)) AND ((rt1.c5))) THEN (((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))) ELSE rt1.c6 END) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT rt1.c2, rt1.c4, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c4, rt1.c0;
SELECT ALL rt1.c2, rt1.c4, rt1.c0 FROM rt1 WHERE ((((((((rt1.c5)) BETWEEN ((rt1.c5)) AND ((rt1.c1))))AND(JULIANDAY(rt1.c4, rt1.c0, '-1770271121'))))OR(((rt1.c5) NOT BETWEEN (rt1.c3) AND (rt1.c2))))) GROUP BY rt1.c2, rt1.c4, rt1.c0 UNION SELECT ALL rt1.c2, rt1.c4, rt1.c0 FROM rt1 WHERE ((NOT ((((((((rt1.c5)) BETWEEN ((rt1.c5)) AND ((rt1.c1))))AND(JULIANDAY(rt1.c4, rt1.c0, '-1770271121'))))OR(((rt1.c5) NOT BETWEEN (rt1.c3) AND (rt1.c2))))))) GROUP BY rt1.c2, rt1.c4, rt1.c0 UNION SELECT ALL rt1.c2, rt1.c4, rt1.c0 FROM rt1 WHERE ((((((((((rt1.c5)) BETWEEN ((rt1.c5)) AND ((rt1.c1))))AND(JULIANDAY(rt1.c4, rt1.c0, '-1770271121'))))OR(((rt1.c5) NOT BETWEEN (rt1.c3) AND (rt1.c2))))) ISNULL)) GROUP BY rt1.c2, rt1.c4, rt1.c0;
SELECT rt1.c2, rt1.c4, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c4, rt1.c0;
SELECT ALL rt1.c2, rt1.c5, rt1.c0, vt64.lid, vt64.c0, rt1.c3, rt1.c6, rt1.c4, rt1.c1 FROM vt64, rt1 GROUP BY rt1.c2, rt1.c5, rt1.c0, vt64.lid, vt64.c0, rt1.c3, rt1.c6, rt1.c4, rt1.c1;
SELECT ALL rt1.c2, rt1.c5, rt1.c0, vt64.lid, vt64.c0, rt1.c3, rt1.c6, rt1.c4, rt1.c1 FROM vt64, rt1 GROUP BY rt1.c2, rt1.c5, rt1.c0, vt64.lid, vt64.c0, rt1.c3, rt1.c6, rt1.c4, rt1.c1 HAVING AVG(((vt64.c0) BETWEEN ('脉') AND (COUNT(*)))) UNION ALL SELECT ALL rt1.c2, rt1.c5, rt1.c0, vt64.lid, vt64.c0, rt1.c3, rt1.c6, rt1.c4, rt1.c1 FROM vt64, rt1 GROUP BY rt1.c2, rt1.c5, rt1.c0, vt64.lid, vt64.c0, rt1.c3, rt1.c6, rt1.c4, rt1.c1 HAVING (NOT (AVG(((vt64.c0) BETWEEN ('脉') AND (COUNT(*)))))) UNION ALL SELECT ALL rt1.c2, rt1.c5, rt1.c0, vt64.lid, vt64.c0, rt1.c3, rt1.c6, rt1.c4, rt1.c1 FROM vt64, rt1 GROUP BY rt1.c2, rt1.c5, rt1.c0, vt64.lid, vt64.c0, rt1.c3, rt1.c6, rt1.c4, rt1.c1 HAVING ((AVG(((vt64.c0) BETWEEN ('脉') AND (COUNT(*))))) ISNULL);
SELECT vt64.c0 FROM vt64;
SELECT vt64.c0 FROM vt64 WHERE (((((((vt64.lid) NOT BETWEEN (vt64.lid) AND (vt64.lid)))OR((NULL IN ()))))OR(CASE vt64.lid  WHEN '551067282' THEN vt64.lid ELSE 0.8833361866835656 END))) UNION ALL SELECT ALL vt64.c0 FROM vt64 WHERE ((NOT (((((((vt64.lid) NOT BETWEEN (vt64.lid) AND (vt64.lid)))OR((NULL IN ()))))OR(CASE vt64.lid  WHEN '551067282' THEN vt64.lid ELSE 0.8833361866835656 END))))) UNION ALL SELECT vt64.c0 FROM vt64 WHERE (((((((((vt64.lid) NOT BETWEEN (vt64.lid) AND (vt64.lid)))OR((NULL IN ()))))OR(CASE vt64.lid  WHEN '551067282' THEN vt64.lid ELSE 0.8833361866835656 END))) ISNULL));
SELECT vt64.c0 FROM vt64;
SELECT DISTINCT vt64.c0 FROM vt64;
SELECT DISTINCT vt64.c0 FROM vt64 WHERE (((((vt64.c0 IN ())))>=((((vt64.c0) NOT NULL))))) UNION SELECT DISTINCT vt64.c0 FROM vt64 WHERE ((NOT (((((vt64.c0 IN ())))>=((((vt64.c0) NOT NULL))))))) UNION SELECT DISTINCT vt64.c0 FROM vt64 WHERE (((((((vt64.c0 IN ())))>=((((vt64.c0) NOT NULL))))) ISNULL));
SELECT DISTINCT vt64.c0 FROM vt64;
SELECT rt1.c5, rt1.c0, rt1.c6 FROM rt1 GROUP BY rt1.c5, rt1.c0, rt1.c6;
SELECT rt1.c5, rt1.c0, rt1.c6 FROM rt1 WHERE ((((((rt1.c1, -750131895, rt1.c4))<((rt1.c5, rt1.c3, rt1.c0)))) BETWEEN ('0.9931190726534364') AND (rt1.c6))) GROUP BY rt1.c5, rt1.c0, rt1.c6 UNION SELECT rt1.c5, rt1.c0, rt1.c6 FROM rt1 WHERE ((NOT ((((((rt1.c1, -750131895, rt1.c4))<((rt1.c5, rt1.c3, rt1.c0)))) BETWEEN ('0.9931190726534364') AND (rt1.c6))))) GROUP BY rt1.c5, rt1.c0, rt1.c6 UNION SELECT ALL rt1.c5, rt1.c0, rt1.c6 FROM rt1 WHERE ((((((((rt1.c1, -750131895, rt1.c4))<((rt1.c5, rt1.c3, rt1.c0)))) BETWEEN ('0.9931190726534364') AND (rt1.c6))) ISNULL)) GROUP BY rt1.c5, rt1.c0, rt1.c6;
SELECT rt1.c5, rt1.c0, rt1.c6 FROM rt1 GROUP BY rt1.c5, rt1.c0, rt1.c6;
SELECT ALL rt1.c0, rt1.c3, vt64.c0 FROM rt1, vt64 GROUP BY rt1.c0, rt1.c3, vt64.c0;
SELECT rt1.c0, rt1.c3, vt64.c0 FROM rt1, vt64 GROUP BY rt1.c0, rt1.c3, vt64.c0 HAVING GROUP_CONCAT(SUM(TOTAL(rt1.c5))) UNION ALL SELECT rt1.c0, rt1.c3, vt64.c0 FROM rt1, vt64 GROUP BY rt1.c0, rt1.c3, vt64.c0 HAVING (NOT (GROUP_CONCAT(SUM(TOTAL(rt1.c5))))) UNION ALL SELECT rt1.c0, rt1.c3, vt64.c0 FROM rt1, vt64 GROUP BY rt1.c0, rt1.c3, vt64.c0 HAVING ((GROUP_CONCAT(SUM(TOTAL(rt1.c5)))) ISNULL);
SELECT vt64.c0, rt1.c3, rt1.c4, rt1.c6, rt1.c1, rt1.c5 FROM rt1, vt64;
SELECT ALL vt64.c0, rt1.c3, rt1.c4, rt1.c6, rt1.c1, rt1.c5 FROM rt1, vt64 WHERE (0.021748163793039454) UNION ALL SELECT ALL vt64.c0, rt1.c3, rt1.c4, rt1.c6, rt1.c1, rt1.c5 FROM rt1, vt64 WHERE ((NOT (0.021748163793039454))) UNION ALL SELECT ALL vt64.c0, rt1.c3, rt1.c4, rt1.c6, rt1.c1, rt1.c5 FROM rt1, vt64 WHERE (((0.021748163793039454) ISNULL));
SELECT vt64.c0, rt1.c3, rt1.c4, rt1.c6, rt1.c1, rt1.c5 FROM rt1, vt64;
SELECT DISTINCT rt1.c6, rt1.c0, rt1.c2, rt1.c1 FROM rt1;
SELECT DISTINCT rt1.c6, rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE ((((rt1.c3 IN ()))&(((rt1.c6)-(rt1.c4))))) UNION SELECT DISTINCT rt1.c6, rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE ((NOT ((((rt1.c3 IN ()))&(((rt1.c6)-(rt1.c4))))))) UNION SELECT DISTINCT rt1.c6, rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE ((((((rt1.c3 IN ()))&(((rt1.c6)-(rt1.c4))))) ISNULL));
SELECT DISTINCT rt1.c6, rt1.c0, rt1.c2, rt1.c1 FROM rt1;
SELECT vt64.lid, vt64.c0 FROM vt64 GROUP BY vt64.lid, vt64.c0;
SELECT ALL vt64.lid, vt64.c0 FROM vt64 NOT INDEXED WHERE (vt64.lid) GROUP BY vt64.lid, vt64.c0 UNION SELECT ALL vt64.lid, vt64.c0 FROM vt64 WHERE ((NOT (vt64.lid))) GROUP BY vt64.lid, vt64.c0 UNION SELECT vt64.lid, vt64.c0 FROM vt64 WHERE (((vt64.lid) ISNULL)) GROUP BY vt64.lid, vt64.c0;
SELECT vt64.lid, vt64.c0 FROM vt64 GROUP BY vt64.lid, vt64.c0;
SELECT rt1.c0, rt1.c4, rt1.c3, rt1.c6, rt1.c2, rt1.c5, rt1.c1, vt64.c0, vt64.lid FROM vt64 FULL OUTER JOIN rt1 ON ((((rt1.c0) BETWEEN (vt64.lid) AND (rt1.c1))) BETWEEN (DATETIME(NULL, rt1.c3, rt1.c4, 0.4732591610229372, vt64.c0)) AND (((rt1.c3) BETWEEN (vt64.lid) AND (rt1.c4)))) GROUP BY rt1.c0, rt1.c4, rt1.c3, rt1.c6, rt1.c2, rt1.c5, rt1.c1, vt64.c0, vt64.lid;
SELECT ALL rt1.c0, rt1.c4, rt1.c3, rt1.c6, rt1.c2, rt1.c5, rt1.c1, vt64.c0, vt64.lid FROM vt64 FULL OUTER JOIN rt1 ON ((((rt1.c0) BETWEEN (vt64.lid) AND (rt1.c1))) BETWEEN (DATETIME(NULL, rt1.c3, rt1.c4, 0.4732591610229372, vt64.c0)) AND (((rt1.c3) BETWEEN (vt64.lid) AND (rt1.c4)))) GROUP BY rt1.c0, rt1.c4, rt1.c3, rt1.c6, rt1.c2, rt1.c5, rt1.c1, vt64.c0, vt64.lid HAVING (- (((rt1.c3)<=(vt64.c0)))) UNION ALL SELECT rt1.c0, rt1.c4, rt1.c3, rt1.c6, rt1.c2, rt1.c5, rt1.c1, vt64.c0, vt64.lid FROM vt64 FULL OUTER JOIN rt1 ON ((((rt1.c0) BETWEEN (vt64.lid) AND (rt1.c1))) BETWEEN (DATETIME(NULL, rt1.c3, rt1.c4, 0.4732591610229372, vt64.c0)) AND (((rt1.c3) BETWEEN (vt64.lid) AND (rt1.c4)))) GROUP BY rt1.c0, rt1.c4, rt1.c3, rt1.c6, rt1.c2, rt1.c5, rt1.c1, vt64.c0, vt64.lid HAVING (NOT ((- (((rt1.c3)<=(vt64.c0)))))) UNION ALL SELECT ALL rt1.c0, rt1.c4, rt1.c3, rt1.c6, rt1.c2, rt1.c5, rt1.c1, vt64.c0, vt64.lid FROM vt64 FULL OUTER JOIN rt1 ON ((((rt1.c0) BETWEEN (vt64.lid) AND (rt1.c1))) BETWEEN (DATETIME(NULL, rt1.c3, rt1.c4, 0.4732591610229372, vt64.c0)) AND (((rt1.c3) BETWEEN (vt64.lid) AND (rt1.c4)))) GROUP BY rt1.c0, rt1.c4, rt1.c3, rt1.c6, rt1.c2, rt1.c5, rt1.c1, vt64.c0, vt64.lid HAVING (((- (((rt1.c3)<=(vt64.c0))))) ISNULL);
SELECT rt1.c0, rt1.c4, rt1.c3, rt1.c6, rt1.c2, rt1.c5, rt1.c1, vt64.c0, vt64.lid FROM vt64 FULL OUTER JOIN rt1 ON ((((rt1.c0) BETWEEN (vt64.lid) AND (rt1.c1))) BETWEEN (DATETIME(NULL, rt1.c3, rt1.c4, 0.4732591610229372, vt64.c0)) AND (((rt1.c3) BETWEEN (vt64.lid) AND (rt1.c4)))) GROUP BY rt1.c0, rt1.c4, rt1.c3, rt1.c6, rt1.c2, rt1.c5, rt1.c1, vt64.c0, vt64.lid;
SELECT ALL rt1.c0, rt1.c4, rt1.c3, rt1.c6, rt1.c2, rt1.c5, rt1.c1, vt64.c0, vt64.lid FROM vt64 FULL OUTER JOIN rt1 ON ((((rt1.c0) BETWEEN (vt64.lid) AND (rt1.c1))) BETWEEN (DATETIME(NULL, rt1.c3, rt1.c4, 0.4732591610229372, vt64.c0)) AND (((rt1.c3) BETWEEN (vt64.lid) AND (rt1.c4)))) GROUP BY rt1.c0, rt1.c4, rt1.c3, rt1.c6, rt1.c2, rt1.c5, rt1.c1, vt64.c0, vt64.lid HAVING (- (((rt1.c3)<=(vt64.c0)))) UNION ALL SELECT rt1.c0, rt1.c4, rt1.c3, rt1.c6, rt1.c2, rt1.c5, rt1.c1, vt64.c0, vt64.lid FROM vt64 FULL OUTER JOIN rt1 ON ((((rt1.c0) BETWEEN (vt64.lid) AND (rt1.c1))) BETWEEN (DATETIME(NULL, rt1.c3, rt1.c4, 0.4732591610229372, vt64.c0)) AND (((rt1.c3) BETWEEN (vt64.lid) AND (rt1.c4)))) GROUP BY rt1.c0, rt1.c4, rt1.c3, rt1.c6, rt1.c2, rt1.c5, rt1.c1, vt64.c0, vt64.lid HAVING (NOT ((- (((rt1.c3)<=(vt64.c0)))))) UNION ALL SELECT ALL rt1.c0, rt1.c4, rt1.c3, rt1.c6, rt1.c2, rt1.c5, rt1.c1, vt64.c0, vt64.lid FROM vt64 FULL OUTER JOIN rt1 ON ((((rt1.c0) BETWEEN (vt64.lid) AND (rt1.c1))) BETWEEN (DATETIME(NULL, rt1.c3, rt1.c4, 0.4732591610229372, vt64.c0)) AND (((rt1.c3) BETWEEN (vt64.lid) AND (rt1.c4)))) GROUP BY rt1.c0, rt1.c4, rt1.c3, rt1.c6, rt1.c2, rt1.c5, rt1.c1, vt64.c0, vt64.lid HAVING (((- (((rt1.c3)<=(vt64.c0))))) ISNULL);
SELECT rt1.c0, rt1.c4, rt1.c3, rt1.c6, rt1.c2, rt1.c5, rt1.c1, vt64.c0, vt64.lid FROM vt64 FULL OUTER JOIN rt1 ON ((((rt1.c0) BETWEEN (vt64.lid) AND (rt1.c1))) BETWEEN (DATETIME(NULL, rt1.c3, rt1.c4, 0.4732591610229372, vt64.c0)) AND (((rt1.c3) BETWEEN (vt64.lid) AND (rt1.c4)))) GROUP BY rt1.c0, rt1.c4, rt1.c3, rt1.c6, rt1.c2, rt1.c5, rt1.c1, vt64.c0, vt64.lid;
SELECT * FROM rt1, vt64;
SELECT * FROM rt1, vt64 WHERE (((vt64.lid COLLATE RTRIM)*(((rt1.c3) BETWEEN (rt1.c4) AND (vt64.c0))))) UNION ALL SELECT ALL * FROM rt1, vt64 NOT INDEXED WHERE ((NOT (((vt64.lid COLLATE RTRIM)*(((rt1.c3) BETWEEN (rt1.c4) AND (vt64.c0))))))) UNION ALL SELECT ALL * FROM rt1, vt64 WHERE (((((vt64.lid COLLATE RTRIM)*(((rt1.c3) BETWEEN (rt1.c4) AND (vt64.c0))))) ISNULL));
SELECT * FROM rt1, vt64;
SELECT DISTINCT * FROM rt1, vt64;
SELECT DISTINCT * FROM rt1, vt64 WHERE ((- (((0.8480433609095389) BETWEEN (rt1.c5) AND (vt64.lid))))) UNION SELECT DISTINCT * FROM rt1, vt64 WHERE ((NOT ((- (((0.8480433609095389) BETWEEN (rt1.c5) AND (vt64.lid))))))) UNION SELECT DISTINCT * FROM rt1, vt64 WHERE ((((- (((0.8480433609095389) BETWEEN (rt1.c5) AND (vt64.lid))))) ISNULL));
SELECT DISTINCT * FROM rt1, vt64;
SELECT vt64.c0, rt1.c2, rt1.c0, rt1.c6, rt1.c4, rt1.c5, vt64.lid, rt1.c1, rt1.c3 FROM rt1, vt64 GROUP BY vt64.c0, rt1.c2, rt1.c0, rt1.c6, rt1.c4, rt1.c5, vt64.lid, rt1.c1, rt1.c3;
SELECT ALL vt64.c0, rt1.c2, rt1.c0, rt1.c6, rt1.c4, rt1.c5, vt64.lid, rt1.c1, rt1.c3 FROM rt1, vt64 WHERE (((((vt64.lid)<=(rt1.c5)))<=(((rt1.c0) NOTNULL)))) GROUP BY vt64.c0, rt1.c2, rt1.c0, rt1.c6, rt1.c4, rt1.c5, vt64.lid, rt1.c1, rt1.c3 UNION SELECT ALL vt64.c0, rt1.c2, rt1.c0, rt1.c6, rt1.c4, rt1.c5, vt64.lid, rt1.c1, rt1.c3 FROM rt1, vt64 WHERE ((NOT (((((vt64.lid)<=(rt1.c5)))<=(((rt1.c0) NOTNULL)))))) GROUP BY vt64.c0, rt1.c2, rt1.c0, rt1.c6, rt1.c4, rt1.c5, vt64.lid, rt1.c1, rt1.c3 UNION SELECT vt64.c0, rt1.c2, rt1.c0, rt1.c6, rt1.c4, rt1.c5, vt64.lid, rt1.c1, rt1.c3 FROM rt1, vt64 WHERE (((((((vt64.lid)<=(rt1.c5)))<=(((rt1.c0) NOTNULL)))) ISNULL)) GROUP BY vt64.c0, rt1.c2, rt1.c0, rt1.c6, rt1.c4, rt1.c5, vt64.lid, rt1.c1, rt1.c3;
SELECT vt64.c0, rt1.c2, rt1.c0, rt1.c6, rt1.c4, rt1.c5, vt64.lid, rt1.c1, rt1.c3 FROM rt1, vt64 GROUP BY vt64.c0, rt1.c2, rt1.c0, rt1.c6, rt1.c4, rt1.c5, vt64.lid, rt1.c1, rt1.c3;
SELECT rt1.c6, rt1.c3, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c6, rt1.c3, rt1.c1, rt1.c2;
SELECT rt1.c6, rt1.c3, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c6, rt1.c3, rt1.c1, rt1.c2 HAVING CASE COUNT(*)  WHEN (COUNT(rt1.c4) IN ()) THEN rt1.c5 COLLATE NOCASE WHEN SUM(TOTAL(GROUP_CONCAT(rt1.c5))) THEN MIN(rt1.c1) WHEN json_extract(rt1.c1, TOTAL(rt1.c2)) THEN (~ (rt1.c5)) END UNION ALL SELECT rt1.c6, rt1.c3, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c6, rt1.c3, rt1.c1, rt1.c2 HAVING (NOT (CASE COUNT(*)  WHEN (COUNT(rt1.c4) IN ()) THEN rt1.c5 COLLATE NOCASE WHEN SUM(TOTAL(GROUP_CONCAT(rt1.c5))) THEN MIN(rt1.c1) WHEN json_extract(rt1.c1, TOTAL(rt1.c2)) THEN (~ (rt1.c5)) END)) UNION ALL SELECT ALL rt1.c6, rt1.c3, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c6, rt1.c3, rt1.c1, rt1.c2 HAVING ((CASE COUNT(*)  WHEN (COUNT(rt1.c4) IN ()) THEN rt1.c5 COLLATE NOCASE WHEN SUM(TOTAL(GROUP_CONCAT(rt1.c5))) THEN MIN(rt1.c1) WHEN json_extract(rt1.c1, TOTAL(rt1.c2)) THEN (~ (rt1.c5)) END) ISNULL);
SELECT ALL * FROM vt64;
SELECT ALL * FROM vt64 WHERE (CASE WHEN vt64.lid THEN vt64.c0 ELSE vt64.lid END COLLATE RTRIM) UNION ALL SELECT * FROM vt64 WHERE ((NOT (CASE WHEN vt64.lid THEN vt64.c0 ELSE vt64.lid END COLLATE RTRIM))) UNION ALL SELECT ALL * FROM vt64 WHERE (((CASE WHEN vt64.lid THEN vt64.c0 ELSE vt64.lid END COLLATE RTRIM) ISNULL));
SELECT ALL * FROM vt64;
SELECT DISTINCT vt64.lid, vt64.c0 FROM vt64;
SELECT DISTINCT vt64.lid, vt64.c0 FROM vt64 WHERE ((((NOT (vt64.c0))) NOTNULL)) UNION SELECT DISTINCT vt64.lid, vt64.c0 FROM vt64 WHERE ((NOT ((((NOT (vt64.c0))) NOTNULL)))) UNION SELECT DISTINCT vt64.lid, vt64.c0 FROM vt64 WHERE ((((((NOT (vt64.c0))) NOTNULL)) ISNULL));
SELECT DISTINCT vt64.lid, vt64.c0 FROM vt64;
SELECT rt1.c2 FROM vt64 INNER JOIN rt1 ON rt1.c1 GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM vt64 INNER JOIN rt1 ON rt1.c1 WHERE ((((('-221732362') NOT BETWEEN (rt1.c1) AND (rt1.c3))) NOTNULL)) GROUP BY rt1.c2 UNION SELECT rt1.c2 FROM vt64 INNER JOIN rt1 ON rt1.c1 WHERE ((NOT ((((('-221732362') NOT BETWEEN (rt1.c1) AND (rt1.c3))) NOTNULL)))) GROUP BY rt1.c2 UNION SELECT rt1.c2 FROM vt64 INNER JOIN rt1 ON rt1.c1 WHERE ((((((('-221732362') NOT BETWEEN (rt1.c1) AND (rt1.c3))) NOTNULL)) ISNULL)) GROUP BY rt1.c2;
SELECT rt1.c2 FROM vt64 INNER JOIN rt1 ON rt1.c1 GROUP BY rt1.c2;
SELECT ALL rt1.c5, rt1.c0, rt1.c4, rt1.c3, rt1.c2 FROM rt1 GROUP BY rt1.c5, rt1.c0, rt1.c4, rt1.c3, rt1.c2;
SELECT ALL rt1.c5, rt1.c0, rt1.c4, rt1.c3, rt1.c2 FROM rt1 GROUP BY rt1.c5, rt1.c0, rt1.c4, rt1.c3, rt1.c2 HAVING CAST(rt1.c6 AS TEXT) UNION ALL SELECT ALL rt1.c5, rt1.c0, rt1.c4, rt1.c3, rt1.c2 FROM rt1 GROUP BY rt1.c5, rt1.c0, rt1.c4, rt1.c3, rt1.c2 HAVING (NOT (CAST(rt1.c6 AS TEXT))) UNION ALL SELECT rt1.c5, rt1.c0, rt1.c4, rt1.c3, rt1.c2 FROM rt1 GROUP BY rt1.c5, rt1.c0, rt1.c4, rt1.c3, rt1.c2 HAVING ((CAST(rt1.c6 AS TEXT)) ISNULL);
SELECT ALL rt1.c5, rt1.c0, rt1.c4, rt1.c3, rt1.c2 FROM rt1 GROUP BY rt1.c5, rt1.c0, rt1.c4, rt1.c3, rt1.c2;
SELECT ALL rt1.c5, rt1.c0, rt1.c4, rt1.c3, rt1.c2 FROM rt1 GROUP BY rt1.c5, rt1.c0, rt1.c4, rt1.c3, rt1.c2 HAVING CAST(rt1.c6 AS TEXT) UNION ALL SELECT ALL rt1.c5, rt1.c0, rt1.c4, rt1.c3, rt1.c2 FROM rt1 GROUP BY rt1.c5, rt1.c0, rt1.c4, rt1.c3, rt1.c2 HAVING (NOT (CAST(rt1.c6 AS TEXT))) UNION ALL SELECT rt1.c5, rt1.c0, rt1.c4, rt1.c3, rt1.c2 FROM rt1 GROUP BY rt1.c5, rt1.c0, rt1.c4, rt1.c3, rt1.c2 HAVING ((CAST(rt1.c6 AS TEXT)) ISNULL);
SELECT ALL rt1.c5, rt1.c0, rt1.c4, rt1.c3, rt1.c2 FROM rt1 GROUP BY rt1.c5, rt1.c0, rt1.c4, rt1.c3, rt1.c2;
SELECT vt64.lid, rt1.c6, rt1.c5, rt1.c4, rt1.c3, vt64.c0, rt1.c0, rt1.c2, rt1.c1 FROM rt1 NATURAL JOIN vt64;
SELECT vt64.lid, rt1.c6, rt1.c5, rt1.c4, rt1.c3, vt64.c0, rt1.c0, rt1.c2, rt1.c1 FROM rt1 NATURAL JOIN vt64 WHERE ((vt64.c0 IN ())) UNION ALL SELECT ALL vt64.lid, rt1.c6, rt1.c5, rt1.c4, rt1.c3, vt64.c0, rt1.c0, rt1.c2, rt1.c1 FROM rt1 NATURAL JOIN vt64 WHERE ((NOT ((vt64.c0 IN ())))) UNION ALL SELECT vt64.lid, rt1.c6, rt1.c5, rt1.c4, rt1.c3, vt64.c0, rt1.c0, rt1.c2, rt1.c1 FROM rt1 NATURAL JOIN vt64 WHERE ((((vt64.c0 IN ())) ISNULL));
SELECT vt64.lid, rt1.c6, rt1.c5, rt1.c4, rt1.c3, vt64.c0, rt1.c0, rt1.c2, rt1.c1 FROM rt1 NATURAL JOIN vt64;
SELECT DISTINCT rt1.c0 FROM rt1;
SELECT DISTINCT rt1.c0 FROM rt1 WHERE (((CAST(x'a21a' AS REAL)) IS FALSE)) UNION SELECT DISTINCT rt1.c0 FROM rt1 WHERE ((NOT (((CAST(x'a21a' AS REAL)) IS FALSE)))) UNION SELECT DISTINCT rt1.c0 FROM rt1 WHERE (((((CAST(x'a21a' AS REAL)) IS FALSE)) ISNULL));
SELECT DISTINCT rt1.c0 FROM rt1;
SELECT rt1.c0, rt1.c5, rt1.c6 FROM rt1 FULL OUTER JOIN vt64 ON highlight(UPPER(-2129006486), ((((((((x'')OR('')))OR(vt64.c0)))AND(rt1.c6)))OR(rt1.c2)), ((rt1.c2)*(rt1.c3)), ((rt1.c1)AND(rt1.c6))) GROUP BY rt1.c0, rt1.c5, rt1.c6;
SELECT rt1.c6, rt1.c2, vt64.c0, rt1.c5 FROM vt64, rt1 GROUP BY rt1.c6, rt1.c2, vt64.c0, rt1.c5;
SELECT rt1.c6, rt1.c2, vt64.c0, rt1.c5 FROM vt64, rt1 GROUP BY rt1.c6, rt1.c2, vt64.c0, rt1.c5 HAVING MAX((rt1.c5 IN ())) UNION ALL SELECT ALL rt1.c6, rt1.c2, vt64.c0, rt1.c5 FROM vt64, rt1 GROUP BY rt1.c6, rt1.c2, vt64.c0, rt1.c5 HAVING (NOT (MAX((rt1.c5 IN ())))) UNION ALL SELECT rt1.c6, rt1.c2, vt64.c0, rt1.c5 FROM vt64, rt1 GROUP BY rt1.c6, rt1.c2, vt64.c0, rt1.c5 HAVING ((MAX((rt1.c5 IN ()))) ISNULL);
SELECT rt1.c6, rt1.c2, vt64.c0, rt1.c5 FROM vt64, rt1 GROUP BY rt1.c6, rt1.c2, vt64.c0, rt1.c5;
SELECT rt1.c6, rt1.c2, vt64.c0, rt1.c5 FROM vt64, rt1 GROUP BY rt1.c6, rt1.c2, vt64.c0, rt1.c5 HAVING MAX((rt1.c5 IN ())) UNION ALL SELECT ALL rt1.c6, rt1.c2, vt64.c0, rt1.c5 FROM vt64, rt1 GROUP BY rt1.c6, rt1.c2, vt64.c0, rt1.c5 HAVING (NOT (MAX((rt1.c5 IN ())))) UNION ALL SELECT rt1.c6, rt1.c2, vt64.c0, rt1.c5 FROM vt64, rt1 GROUP BY rt1.c6, rt1.c2, vt64.c0, rt1.c5 HAVING ((MAX((rt1.c5 IN ()))) ISNULL);
SELECT rt1.c6, rt1.c2, vt64.c0, rt1.c5 FROM vt64, rt1 GROUP BY rt1.c6, rt1.c2, vt64.c0, rt1.c5;
SELECT ALL rt1.c5, vt64.lid, rt1.c1, vt64.c0, rt1.c4, rt1.c3, rt1.c2, rt1.c6, rt1.c0 FROM vt64, rt1;
SELECT rt1.c5, vt64.lid, rt1.c1, vt64.c0, rt1.c4, rt1.c3, rt1.c2, rt1.c6, rt1.c0 FROM vt64, rt1 WHERE (NULL) UNION ALL SELECT rt1.c5, vt64.lid, rt1.c1, vt64.c0, rt1.c4, rt1.c3, rt1.c2, rt1.c6, rt1.c0 FROM vt64, rt1 WHERE ((NOT (NULL))) UNION ALL SELECT rt1.c5, vt64.lid, rt1.c1, vt64.c0, rt1.c4, rt1.c3, rt1.c2, rt1.c6, rt1.c0 FROM vt64, rt1 WHERE (((NULL) ISNULL));
SELECT ALL rt1.c5, vt64.lid, rt1.c1, vt64.c0, rt1.c4, rt1.c3, rt1.c2, rt1.c6, rt1.c0 FROM vt64, rt1;
SELECT DISTINCT rt1.c2, rt1.c4 FROM rt1, vt64;
SELECT DISTINCT rt1.c2, rt1.c4 FROM rt1, vt64 WHERE ((((((((((rt1.c3)AND(rt1.c1)))OR(vt64.c0)))OR(rt1.c5)))OR(rt1.c3)) IN ())) UNION SELECT DISTINCT rt1.c2, rt1.c4 FROM rt1, vt64 WHERE ((NOT ((((((((((rt1.c3)AND(rt1.c1)))OR(vt64.c0)))OR(rt1.c5)))OR(rt1.c3)) IN ())))) UNION SELECT DISTINCT rt1.c2, rt1.c4 FROM rt1, vt64 WHERE ((((((((((((rt1.c3)AND(rt1.c1)))OR(vt64.c0)))OR(rt1.c5)))OR(rt1.c3)) IN ())) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c4 FROM rt1, vt64;
SELECT vt64.c0 FROM vt64 GROUP BY vt64.c0;
SELECT ALL vt64.c0 FROM vt64 WHERE (CASE WHEN (NOT (vt64.lid)) THEN (+ (vt64.lid)) END) GROUP BY vt64.c0 UNION SELECT vt64.c0 FROM vt64 WHERE ((NOT (CASE WHEN (NOT (vt64.lid)) THEN (+ (vt64.lid)) END))) GROUP BY vt64.c0 UNION SELECT ALL vt64.c0 FROM vt64 WHERE (((CASE WHEN (NOT (vt64.lid)) THEN (+ (vt64.lid)) END) ISNULL)) GROUP BY vt64.c0;
SELECT vt64.c0 FROM vt64 GROUP BY vt64.c0;
SELECT ALL rt1.c5, rt1.c4, vt64.c0, rt1.c2 FROM rt1, vt64 GROUP BY rt1.c5, rt1.c4, vt64.c0, rt1.c2;
SELECT ALL rt1.c5, rt1.c4, vt64.c0, rt1.c2 FROM rt1, vt64 GROUP BY rt1.c5, rt1.c4, vt64.c0, rt1.c2 HAVING (((((rt1.c5))>((rt1.c5))))OR(((((((((rt1.c0)OR(MAX(TOTAL(SUM(MAX(vt64.lid)))))))OR(rt1.c0)))OR(rt1.c4)))AND(AVG(rt1.c1))))) UNION ALL SELECT ALL rt1.c5, rt1.c4, vt64.c0, rt1.c2 FROM rt1, vt64 GROUP BY rt1.c5, rt1.c4, vt64.c0, rt1.c2 HAVING (NOT ((((((rt1.c5))>((rt1.c5))))OR(((((((((rt1.c0)OR(MAX(TOTAL(SUM(MAX(vt64.lid)))))))OR(rt1.c0)))OR(rt1.c4)))AND(AVG(rt1.c1))))))) UNION ALL SELECT ALL rt1.c5, rt1.c4, vt64.c0, rt1.c2 FROM rt1, vt64 GROUP BY rt1.c5, rt1.c4, vt64.c0, rt1.c2 HAVING (((((((rt1.c5))>((rt1.c5))))OR(((((((((rt1.c0)OR(MAX(TOTAL(SUM(MAX(vt64.lid)))))))OR(rt1.c0)))OR(rt1.c4)))AND(AVG(rt1.c1)))))) ISNULL);
SELECT ALL rt1.c0, rt1.c3, rt1.c4 FROM rt1;
SELECT ALL rt1.c0, rt1.c3, rt1.c4 FROM rt1 WHERE (CASE WHEN rt1.c0 THEN (((rt1.c6, rt1.c4, rt1.c4)) BETWEEN ((0.46640863525533505, x'', rt1.c6)) AND ((rt1.c0, rt1.c2, '-338614341'))) END) UNION ALL SELECT ALL rt1.c0, rt1.c3, rt1.c4 FROM rt1 WHERE ((NOT (CASE WHEN rt1.c0 THEN (((rt1.c6, rt1.c4, rt1.c4)) BETWEEN ((0.46640863525533505, x'', rt1.c6)) AND ((rt1.c0, rt1.c2, '-338614341'))) END))) UNION ALL SELECT rt1.c0, rt1.c3, rt1.c4 FROM rt1 WHERE (((CASE WHEN rt1.c0 THEN (((rt1.c6, rt1.c4, rt1.c4)) BETWEEN ((0.46640863525533505, x'', rt1.c6)) AND ((rt1.c0, rt1.c2, '-338614341'))) END) ISNULL));
SELECT ALL rt1.c0, rt1.c3, rt1.c4 FROM rt1;
SELECT DISTINCT * FROM rt1 FULL OUTER JOIN vt64 ON ((SQLITE_VERSION())>((rt1.c2 IN (vt64.lid))));
SELECT DISTINCT * FROM rt1 FULL OUTER JOIN vt64 ON ((SQLITE_VERSION())>((rt1.c2 IN (vt64.lid)))) WHERE (((((rt1.c2) NOT BETWEEN (rt1.c2) AND (vt64.lid)))|(ROUND(rt1.c0, rt1.c2)))) UNION SELECT DISTINCT * FROM rt1 FULL OUTER JOIN vt64 ON ((SQLITE_VERSION())>((rt1.c2 IN (vt64.lid)))) WHERE ((NOT (((((rt1.c2) NOT BETWEEN (rt1.c2) AND (vt64.lid)))|(ROUND(rt1.c0, rt1.c2)))))) UNION SELECT DISTINCT * FROM rt1 FULL OUTER JOIN vt64 ON ((SQLITE_VERSION())>((rt1.c2 IN (vt64.lid)))) WHERE (((((((rt1.c2) NOT BETWEEN (rt1.c2) AND (vt64.lid)))|(ROUND(rt1.c0, rt1.c2)))) ISNULL));
SELECT DISTINCT * FROM rt1 FULL OUTER JOIN vt64 ON ((SQLITE_VERSION())>((rt1.c2 IN (vt64.lid))));
SELECT rt1.c0, rt1.c2, rt1.c4, rt1.c1, rt1.c5 FROM vt64, rt1 GROUP BY rt1.c0, rt1.c2, rt1.c4, rt1.c1, rt1.c5;
SELECT ALL rt1.c0, rt1.c2, rt1.c4, rt1.c1, rt1.c5 FROM vt64, rt1 WHERE (((((x'73cd')OR((('1768034548') IS TRUE))))OR(COALESCE(vt64.c0, rt1.c5)))) GROUP BY rt1.c0, rt1.c2, rt1.c4, rt1.c1, rt1.c5 UNION SELECT rt1.c0, rt1.c2, rt1.c4, rt1.c1, rt1.c5 FROM vt64, rt1 WHERE ((NOT (((((x'73cd')OR((('1768034548') IS TRUE))))OR(COALESCE(vt64.c0, rt1.c5)))))) GROUP BY rt1.c0, rt1.c2, rt1.c4, rt1.c1, rt1.c5 UNION SELECT rt1.c0, rt1.c2, rt1.c4, rt1.c1, rt1.c5 FROM vt64, rt1 WHERE (((((((x'73cd')OR((('1768034548') IS TRUE))))OR(COALESCE(vt64.c0, rt1.c5)))) ISNULL)) GROUP BY rt1.c0, rt1.c2, rt1.c4, rt1.c1, rt1.c5;
SELECT rt1.c0, rt1.c2, rt1.c4, rt1.c1, rt1.c5 FROM vt64, rt1 GROUP BY rt1.c0, rt1.c2, rt1.c4, rt1.c1, rt1.c5;
SELECT vt64.c0, vt64.lid FROM vt64 GROUP BY vt64.c0, vt64.lid;
SELECT ALL vt64.c0, vt64.lid FROM vt64 GROUP BY vt64.c0, vt64.lid HAVING ((((MIN(MIN(vt64.lid))) NOT BETWEEN (SUM(vt64.c0)) AND (AVG(vt64.lid))))<=(((vt64.c0) BETWEEN (vt64.lid) AND (MAX(COUNT(*)))))) UNION ALL SELECT vt64.c0, vt64.lid FROM vt64 GROUP BY vt64.c0, vt64.lid HAVING (NOT (((((MIN(MIN(vt64.lid))) NOT BETWEEN (SUM(vt64.c0)) AND (AVG(vt64.lid))))<=(((vt64.c0) BETWEEN (vt64.lid) AND (MAX(COUNT(*)))))))) UNION ALL SELECT ALL vt64.c0, vt64.lid FROM vt64 GROUP BY vt64.c0, vt64.lid HAVING ((((((MIN(MIN(vt64.lid))) NOT BETWEEN (SUM(vt64.c0)) AND (AVG(vt64.lid))))<=(((vt64.c0) BETWEEN (vt64.lid) AND (MAX(COUNT(*))))))) ISNULL);
SELECT * FROM rt1;
SELECT * FROM rt1 WHERE (COALESCE(DISTINCT (+ (rt1.c4)), (rt1.c5 IN (rt1.c0)), (- (rt1.c6)), ((rt1.c3)<=(rt1.c0)))) UNION ALL SELECT * FROM rt1 WHERE ((NOT (COALESCE(DISTINCT (+ (rt1.c4)), (rt1.c5 IN (rt1.c0)), (- (rt1.c6)), ((rt1.c3)<=(rt1.c0)))))) UNION ALL SELECT * FROM rt1 WHERE (((COALESCE(DISTINCT (+ (rt1.c4)), (rt1.c5 IN (rt1.c0)), (- (rt1.c6)), ((rt1.c3)<=(rt1.c0)))) ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT rt1.c2, rt1.c6, rt1.c5 FROM rt1;
SELECT DISTINCT rt1.c2, rt1.c6, rt1.c5 FROM rt1 WHERE ((0.6247826165266788 IN ()) COLLATE RTRIM) UNION SELECT DISTINCT rt1.c2, rt1.c6, rt1.c5 FROM rt1 WHERE ((NOT ((0.6247826165266788 IN ()) COLLATE RTRIM))) UNION SELECT DISTINCT rt1.c2, rt1.c6, rt1.c5 FROM rt1 WHERE ((((0.6247826165266788 IN ()) COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c6, rt1.c5 FROM rt1;
SELECT ALL rt1.c5, rt1.c3, rt1.c4, vt64.c0, rt1.c1, rt1.c2, rt1.c6 FROM vt64 NATURAL JOIN rt1 GROUP BY rt1.c5, rt1.c3, rt1.c4, vt64.c0, rt1.c1, rt1.c2, rt1.c6;
SELECT ALL rt1.c5, rt1.c3, rt1.c4, vt64.c0, rt1.c1, rt1.c2, rt1.c6 FROM vt64 NATURAL JOIN rt1 WHERE (((UPPER(rt1.c2)) BETWEEN (CASE rt1.c5  WHEN rt1.c5 THEN rt1.c1 END) AND ((((rt1.c0, vt64.c0, vt64.c0))>((rt1.c1, rt1.c0, rt1.c6)))))) GROUP BY rt1.c5, rt1.c3, rt1.c4, vt64.c0, rt1.c1, rt1.c2, rt1.c6 UNION SELECT ALL rt1.c5, rt1.c3, rt1.c4, vt64.c0, rt1.c1, rt1.c2, rt1.c6 FROM vt64 NATURAL JOIN rt1 WHERE ((NOT (((UPPER(rt1.c2)) BETWEEN (CASE rt1.c5  WHEN rt1.c5 THEN rt1.c1 END) AND ((((rt1.c0, vt64.c0, vt64.c0))>((rt1.c1, rt1.c0, rt1.c6)))))))) GROUP BY rt1.c5, rt1.c3, rt1.c4, vt64.c0, rt1.c1, rt1.c2, rt1.c6 UNION SELECT rt1.c5, rt1.c3, rt1.c4, vt64.c0, rt1.c1, rt1.c2, rt1.c6 FROM vt64 NATURAL JOIN rt1 WHERE (((((UPPER(rt1.c2)) BETWEEN (CASE rt1.c5  WHEN rt1.c5 THEN rt1.c1 END) AND ((((rt1.c0, vt64.c0, vt64.c0))>((rt1.c1, rt1.c0, rt1.c6)))))) ISNULL)) GROUP BY rt1.c5, rt1.c3, rt1.c4, vt64.c0, rt1.c1, rt1.c2, rt1.c6;
SELECT ALL rt1.c5, rt1.c3, rt1.c4, vt64.c0, rt1.c1, rt1.c2, rt1.c6 FROM vt64 NATURAL JOIN rt1 GROUP BY rt1.c5, rt1.c3, rt1.c4, vt64.c0, rt1.c1, rt1.c2, rt1.c6;
SELECT rt1.c5, rt1.c2, rt1.c0, rt1.c4, rt1.c6, rt1.c1 FROM rt1 GROUP BY rt1.c5, rt1.c2, rt1.c0, rt1.c4, rt1.c6, rt1.c1;
SELECT rt1.c5, rt1.c2, rt1.c0, rt1.c4, rt1.c6, rt1.c1 FROM rt1 GROUP BY rt1.c5, rt1.c2, rt1.c0, rt1.c4, rt1.c6, rt1.c1 HAVING SUM(GROUP_CONCAT(NULL)) UNION ALL SELECT rt1.c5, rt1.c2, rt1.c0, rt1.c4, rt1.c6, rt1.c1 FROM rt1 GROUP BY rt1.c5, rt1.c2, rt1.c0, rt1.c4, rt1.c6, rt1.c1 HAVING (NOT (SUM(GROUP_CONCAT(NULL)))) UNION ALL SELECT ALL rt1.c5, rt1.c2, rt1.c0, rt1.c4, rt1.c6, rt1.c1 FROM rt1 GROUP BY rt1.c5, rt1.c2, rt1.c0, rt1.c4, rt1.c6, rt1.c1 HAVING ((SUM(GROUP_CONCAT(NULL))) ISNULL);
SELECT ALL * FROM vt64;
SELECT ALL * FROM vt64 WHERE (CASE vt64.c0 COLLATE NOCASE  WHEN ((vt64.lid)&(vt64.c0)) THEN NULL END) UNION ALL SELECT ALL * FROM vt64 WHERE ((NOT (CASE vt64.c0 COLLATE NOCASE  WHEN ((vt64.lid)&(vt64.c0)) THEN NULL END))) UNION ALL SELECT ALL * FROM vt64 WHERE (((CASE vt64.c0 COLLATE NOCASE  WHEN ((vt64.lid)&(vt64.c0)) THEN NULL END) ISNULL));
SELECT ALL * FROM vt64;
SELECT DISTINCT vt64.c0, vt64.lid FROM vt64;
SELECT DISTINCT vt64.c0, vt64.lid FROM vt64 WHERE (((vt64.lid) IS TRUE) COLLATE NOCASE) UNION SELECT DISTINCT vt64.c0, vt64.lid FROM vt64 NOT INDEXED WHERE ((NOT (((vt64.lid) IS TRUE) COLLATE NOCASE))) UNION SELECT DISTINCT vt64.c0, vt64.lid FROM vt64 WHERE (((((vt64.lid) IS TRUE) COLLATE NOCASE) ISNULL));
SELECT DISTINCT vt64.c0, vt64.lid FROM vt64;
SELECT ALL rt1.c2, rt1.c4 FROM rt1, vt64 GROUP BY rt1.c2, rt1.c4;
SELECT rt1.c2, rt1.c4 FROM rt1, vt64 WHERE (CASE WHEN 0x77214e12 THEN rt1.c1 COLLATE RTRIM ELSE CASE WHEN vt64.c0 THEN vt64.lid WHEN vt64.lid THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 WHEN '-875355210' THEN rt1.c5 WHEN rt1.c5 THEN vt64.lid ELSE rt1.c1 END END) GROUP BY rt1.c2, rt1.c4 UNION SELECT rt1.c2, rt1.c4 FROM rt1, vt64 WHERE ((NOT (CASE WHEN 0x77214e12 THEN rt1.c1 COLLATE RTRIM ELSE CASE WHEN vt64.c0 THEN vt64.lid WHEN vt64.lid THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 WHEN '-875355210' THEN rt1.c5 WHEN rt1.c5 THEN vt64.lid ELSE rt1.c1 END END))) GROUP BY rt1.c2, rt1.c4 UNION SELECT ALL rt1.c2, rt1.c4 FROM rt1, vt64 WHERE (((CASE WHEN 0x77214e12 THEN rt1.c1 COLLATE RTRIM ELSE CASE WHEN vt64.c0 THEN vt64.lid WHEN vt64.lid THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 WHEN '-875355210' THEN rt1.c5 WHEN rt1.c5 THEN vt64.lid ELSE rt1.c1 END END) ISNULL)) GROUP BY rt1.c2, rt1.c4;
SELECT ALL rt1.c2, rt1.c4 FROM rt1, vt64 GROUP BY rt1.c2, rt1.c4;
SELECT rt1.c2 FROM vt64, rt1 GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM vt64, rt1 GROUP BY rt1.c2 HAVING vt64.lid UNION ALL SELECT rt1.c2 FROM vt64, rt1 GROUP BY rt1.c2 HAVING (NOT (vt64.lid)) UNION ALL SELECT rt1.c2 FROM vt64, rt1 GROUP BY rt1.c2 HAVING ((vt64.lid) ISNULL);
SELECT rt1.c2 FROM vt64, rt1 GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM vt64, rt1 GROUP BY rt1.c2 HAVING vt64.lid UNION ALL SELECT rt1.c2 FROM vt64, rt1 GROUP BY rt1.c2 HAVING (NOT (vt64.lid)) UNION ALL SELECT rt1.c2 FROM vt64, rt1 GROUP BY rt1.c2 HAVING ((vt64.lid) ISNULL);
SELECT rt1.c2 FROM vt64, rt1 GROUP BY rt1.c2;
SELECT ALL vt64.c0 FROM vt64;
SELECT ALL vt64.c0 FROM vt64 WHERE ((((vt64.lid IN ())) NOTNULL)) UNION ALL SELECT vt64.c0 FROM vt64 WHERE ((NOT ((((vt64.lid IN ())) NOTNULL)))) UNION ALL SELECT ALL vt64.c0 FROM vt64 WHERE ((((((vt64.lid IN ())) NOTNULL)) ISNULL));
SELECT ALL vt64.c0 FROM vt64;
SELECT DISTINCT * FROM vt64, rt1;
SELECT DISTINCT * FROM vt64, rt1 WHERE (((rt1.c2 IN ()) IN (vt64.c0))) UNION SELECT DISTINCT * FROM vt64, rt1 WHERE ((NOT (((rt1.c2 IN ()) IN (vt64.c0))))) UNION SELECT DISTINCT * FROM vt64, rt1 WHERE (((((rt1.c2 IN ()) IN (vt64.c0))) ISNULL));
SELECT DISTINCT * FROM vt64, rt1;
SELECT ALL vt64.lid, vt64.c0 FROM vt64 GROUP BY vt64.lid, vt64.c0;
SELECT vt64.lid, vt64.c0 FROM vt64 WHERE (CAST((('') BETWEEN (vt64.lid) AND (vt64.lid)) AS REAL)) GROUP BY vt64.lid, vt64.c0 UNION SELECT ALL vt64.lid, vt64.c0 FROM vt64 WHERE ((NOT (CAST((('') BETWEEN (vt64.lid) AND (vt64.lid)) AS REAL)))) GROUP BY vt64.lid, vt64.c0 UNION SELECT ALL vt64.lid, vt64.c0 FROM vt64 WHERE (((CAST((('') BETWEEN (vt64.lid) AND (vt64.lid)) AS REAL)) ISNULL)) GROUP BY vt64.lid, vt64.c0;
SELECT ALL vt64.lid, vt64.c0 FROM vt64 GROUP BY vt64.lid, vt64.c0;
SELECT ALL rt1.c0, rt1.c4, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c4, rt1.c2, rt1.c1;
SELECT rt1.c0, rt1.c4, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c4, rt1.c2, rt1.c1 HAVING x'a5ec' UNION ALL SELECT rt1.c0, rt1.c4, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c4, rt1.c2, rt1.c1 HAVING (NOT (x'a5ec')) UNION ALL SELECT rt1.c0, rt1.c4, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c4, rt1.c2, rt1.c1 HAVING ((x'a5ec') ISNULL);
SELECT ALL rt1.c0, rt1.c4, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c4, rt1.c2, rt1.c1;
SELECT rt1.c0, rt1.c4, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c4, rt1.c2, rt1.c1 HAVING x'a5ec' UNION ALL SELECT rt1.c0, rt1.c4, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c4, rt1.c2, rt1.c1 HAVING (NOT (x'a5ec')) UNION ALL SELECT rt1.c0, rt1.c4, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c4, rt1.c2, rt1.c1 HAVING ((x'a5ec') ISNULL);
SELECT ALL rt1.c0, rt1.c4, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c4, rt1.c2, rt1.c1;
SELECT MAX(CASE WHEN rt1.c6 THEN ((rt1.c2)<<(rt1.c3)) WHEN ((rt1.c0) NOT NULL) THEN ((rt1.c4) IS FALSE) WHEN ((((rt1.c3)AND(rt1.c2)))AND(rt1.c6)) THEN ((((((((rt1.c1)AND(0X43846150)))OR(vt64.lid)))OR(rt1.c0)))AND(rt1.c4)) END) FROM vt64, rt1;
SELECT * FROM vt64;
SELECT ALL * FROM vt64 WHERE ((((vt64.lid, vt64.lid, vt64.lid)) BETWEEN ((CASE vt64.lid  WHEN vt64.c0 THEN vt64.lid END, ((vt64.c0) BETWEEN (vt64.lid) AND (vt64.c0)), CASE vt64.lid  WHEN vt64.c0 THEN vt64.lid END)) AND ((((vt64.c0)GLOB(vt64.c0)), (NOT (vt64.lid)), TYPEOF(DISTINCT vt64.lid))))) UNION ALL SELECT ALL * FROM vt64 WHERE ((NOT ((((vt64.lid, vt64.lid, vt64.lid)) BETWEEN ((CASE vt64.lid  WHEN vt64.c0 THEN vt64.lid END, ((vt64.c0) BETWEEN (vt64.lid) AND (vt64.c0)), CASE vt64.lid  WHEN vt64.c0 THEN vt64.lid END)) AND ((((vt64.c0)GLOB(vt64.c0)), (NOT (vt64.lid)), TYPEOF(DISTINCT vt64.lid))))))) UNION ALL SELECT * FROM vt64 WHERE ((((((vt64.lid, vt64.lid, vt64.lid)) BETWEEN ((CASE vt64.lid  WHEN vt64.c0 THEN vt64.lid END, ((vt64.c0) BETWEEN (vt64.lid) AND (vt64.c0)), CASE vt64.lid  WHEN vt64.c0 THEN vt64.lid END)) AND ((((vt64.c0)GLOB(vt64.c0)), (NOT (vt64.lid)), TYPEOF(DISTINCT vt64.lid))))) ISNULL));
SELECT * FROM vt64;
SELECT DISTINCT * FROM rt1, vt64;
SELECT DISTINCT * FROM rt1, vt64 WHERE (((rt1.c2 COLLATE BINARY) IS TRUE)) UNION SELECT DISTINCT * FROM rt1, vt64 WHERE ((NOT (((rt1.c2 COLLATE BINARY) IS TRUE)))) UNION SELECT DISTINCT * FROM rt1, vt64 WHERE (((((rt1.c2 COLLATE BINARY) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM rt1, vt64;
SELECT ALL vt64.lid, vt64.c0 FROM vt64 GROUP BY vt64.lid, vt64.c0;
SELECT ALL vt64.lid, vt64.c0 FROM vt64 WHERE ((((vt64.c0, vt64.c0, vt64.c0, vt64.c0, vt64.c0)) NOT BETWEEN ((vt64.c0, ((vt64.c0) BETWEEN (vt64.c0) AND (vt64.lid)), ((vt64.c0) NOT BETWEEN (vt64.c0) AND (vt64.c0)), (((vt64.lid)) NOT BETWEEN ((vt64.lid)) AND ((vt64.lid))), ((vt64.lid) BETWEEN ('419513352') AND (vt64.c0)))) AND ((TYPEOF(DISTINCT vt64.lid), CAST(vt64.c0 AS BLOB), (~ (vt64.c0)), ((vt64.c0)OR(vt64.lid)), 5.51067282E8 COLLATE RTRIM)))) GROUP BY vt64.lid, vt64.c0 UNION SELECT ALL vt64.lid, vt64.c0 FROM vt64 WHERE ((NOT ((((vt64.c0, vt64.c0, vt64.c0, vt64.c0, vt64.c0)) NOT BETWEEN ((vt64.c0, ((vt64.c0) BETWEEN (vt64.c0) AND (vt64.lid)), ((vt64.c0) NOT BETWEEN (vt64.c0) AND (vt64.c0)), (((vt64.lid)) NOT BETWEEN ((vt64.lid)) AND ((vt64.lid))), ((vt64.lid) BETWEEN ('419513352') AND (vt64.c0)))) AND ((TYPEOF(DISTINCT vt64.lid), CAST(vt64.c0 AS BLOB), (~ (vt64.c0)), ((vt64.c0)OR(vt64.lid)), 5.51067282E8 COLLATE RTRIM)))))) GROUP BY vt64.lid, vt64.c0 UNION SELECT vt64.lid, vt64.c0 FROM vt64 WHERE ((((((vt64.c0, vt64.c0, vt64.c0, vt64.c0, vt64.c0)) NOT BETWEEN ((vt64.c0, ((vt64.c0) BETWEEN (vt64.c0) AND (vt64.lid)), ((vt64.c0) NOT BETWEEN (vt64.c0) AND (vt64.c0)), (((vt64.lid)) NOT BETWEEN ((vt64.lid)) AND ((vt64.lid))), ((vt64.lid) BETWEEN ('419513352') AND (vt64.c0)))) AND ((TYPEOF(DISTINCT vt64.lid), CAST(vt64.c0 AS BLOB), (~ (vt64.c0)), ((vt64.c0)OR(vt64.lid)), 5.51067282E8 COLLATE RTRIM)))) ISNULL)) GROUP BY vt64.lid, vt64.c0;
SELECT ALL vt64.lid, vt64.c0 FROM vt64 GROUP BY vt64.lid, vt64.c0;
SELECT ALL vt64.c0, vt64.lid FROM vt64 GROUP BY vt64.c0, vt64.lid;
SELECT ALL vt64.c0, vt64.lid FROM vt64 GROUP BY vt64.c0, vt64.lid HAVING COUNT(COUNT(COUNT(*))) UNION ALL SELECT ALL vt64.c0, vt64.lid FROM vt64 GROUP BY vt64.c0, vt64.lid HAVING (NOT (COUNT(COUNT(COUNT(*))))) UNION ALL SELECT vt64.c0, vt64.lid FROM vt64 GROUP BY vt64.c0, vt64.lid HAVING ((COUNT(COUNT(COUNT(*)))) ISNULL);
SELECT ALL MAX(((vt64.lid) IS FALSE)) FROM vt64 ORDER BY (((((3.75644662E8) NOT NULL)))<=(((((vt64.c0))<=((vt64.lid)))))) DESC  NULLS FIRST, ((((((((((vt64.lid) IS FALSE))AND(CAST(vt64.lid AS NUMERIC))))AND(0.7982410393711324)))AND(((vt64.lid)OR(vt64.lid)))))OR('-710590884' COLLATE BINARY))  NULLS LAST;
SELECT rt1.c1 FROM rt1, vt64;
SELECT ALL rt1.c1 FROM rt1, vt64 WHERE (((rt1.c0 COLLATE BINARY)LIKE((vt64.c0 IN ())))) UNION ALL SELECT rt1.c1 FROM rt1, vt64 WHERE ((NOT (((rt1.c0 COLLATE BINARY)LIKE((vt64.c0 IN ())))))) UNION ALL SELECT rt1.c1 FROM rt1, vt64 WHERE (((((rt1.c0 COLLATE BINARY)LIKE((vt64.c0 IN ())))) ISNULL));
SELECT rt1.c1 FROM rt1, vt64;
SELECT DISTINCT vt64.c0, vt64.lid FROM vt64;
SELECT DISTINCT vt64.c0, vt64.lid FROM vt64 WHERE ((~ (vt64.c0 COLLATE NOCASE))) UNION SELECT DISTINCT vt64.c0, vt64.lid FROM vt64 WHERE ((NOT ((~ (vt64.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT vt64.c0, vt64.lid FROM vt64 WHERE ((((~ (vt64.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT vt64.c0, vt64.lid FROM vt64;
SELECT ALL vt64.lid FROM vt64 GROUP BY vt64.lid;
SELECT ALL vt64.lid FROM vt64 WHERE (((CAST(vt64.lid AS REAL))IS NOT(((vt64.lid) BETWEEN (x'') AND (vt64.lid))))) GROUP BY vt64.lid UNION SELECT ALL vt64.lid FROM vt64 WHERE ((NOT (((CAST(vt64.lid AS REAL))IS NOT(((vt64.lid) BETWEEN (x'') AND (vt64.lid))))))) GROUP BY vt64.lid UNION SELECT vt64.lid FROM vt64 WHERE (((((CAST(vt64.lid AS REAL))IS NOT(((vt64.lid) BETWEEN (x'') AND (vt64.lid))))) ISNULL)) GROUP BY vt64.lid;
SELECT ALL vt64.lid FROM vt64 GROUP BY vt64.lid;
SELECT rt1.c6, rt1.c3, rt1.c1, rt1.c2, rt1.c4 FROM rt1 NOT INDEXED GROUP BY rt1.c6, rt1.c3, rt1.c1, rt1.c2, rt1.c4;
SELECT ALL rt1.c6, rt1.c3, rt1.c1, rt1.c2, rt1.c4 FROM rt1 GROUP BY rt1.c6, rt1.c3, rt1.c1, rt1.c2, rt1.c4 HAVING (((rt1.c6)) BETWEEN (('FZQ0M')) AND ((CASE WHEN COUNT(*) THEN rt1.c2 ELSE rt1.c4 END))) UNION ALL SELECT rt1.c6, rt1.c3, rt1.c1, rt1.c2, rt1.c4 FROM rt1 GROUP BY rt1.c6, rt1.c3, rt1.c1, rt1.c2, rt1.c4 HAVING (NOT ((((rt1.c6)) BETWEEN (('FZQ0M')) AND ((CASE WHEN COUNT(*) THEN rt1.c2 ELSE rt1.c4 END))))) UNION ALL SELECT ALL rt1.c6, rt1.c3, rt1.c1, rt1.c2, rt1.c4 FROM rt1 GROUP BY rt1.c6, rt1.c3, rt1.c1, rt1.c2, rt1.c4 HAVING (((((rt1.c6)) BETWEEN (('FZQ0M')) AND ((CASE WHEN COUNT(*) THEN rt1.c2 ELSE rt1.c4 END)))) ISNULL);
SELECT rt1.c6, rt1.c3, rt1.c1, rt1.c2, rt1.c4 FROM rt1 NOT INDEXED GROUP BY rt1.c6, rt1.c3, rt1.c1, rt1.c2, rt1.c4;
SELECT ALL rt1.c6, rt1.c3, rt1.c1, rt1.c2, rt1.c4 FROM rt1 GROUP BY rt1.c6, rt1.c3, rt1.c1, rt1.c2, rt1.c4 HAVING (((rt1.c6)) BETWEEN (('FZQ0M')) AND ((CASE WHEN COUNT(*) THEN rt1.c2 ELSE rt1.c4 END))) UNION ALL SELECT rt1.c6, rt1.c3, rt1.c1, rt1.c2, rt1.c4 FROM rt1 GROUP BY rt1.c6, rt1.c3, rt1.c1, rt1.c2, rt1.c4 HAVING (NOT ((((rt1.c6)) BETWEEN (('FZQ0M')) AND ((CASE WHEN COUNT(*) THEN rt1.c2 ELSE rt1.c4 END))))) UNION ALL SELECT ALL rt1.c6, rt1.c3, rt1.c1, rt1.c2, rt1.c4 FROM rt1 GROUP BY rt1.c6, rt1.c3, rt1.c1, rt1.c2, rt1.c4 HAVING (((((rt1.c6)) BETWEEN (('FZQ0M')) AND ((CASE WHEN COUNT(*) THEN rt1.c2 ELSE rt1.c4 END)))) ISNULL);
SELECT rt1.c6, rt1.c3, rt1.c1, rt1.c2, rt1.c4 FROM rt1 NOT INDEXED GROUP BY rt1.c6, rt1.c3, rt1.c1, rt1.c2, rt1.c4;
SELECT MAX(LIKELY(((rt1.c0) BETWEEN (rt1.c3) AND (rt1.c3)))) FROM rt1 ORDER BY x''  NULLS FIRST;
SELECT rt1.c6 FROM vt64 FULL OUTER JOIN rt1 ON ((CASE WHEN rt1.c1 THEN rt1.c4 ELSE 'r' END)-((NOT (rt1.c0))));
SELECT ALL rt1.c6 FROM vt64 FULL OUTER JOIN rt1 ON ((CASE WHEN rt1.c1 THEN rt1.c4 ELSE 'r' END)-((NOT (rt1.c0)))) WHERE (rt1.c0) UNION ALL SELECT ALL rt1.c6 FROM vt64 FULL OUTER JOIN rt1 ON ((CASE WHEN rt1.c1 THEN rt1.c4 ELSE 'r' END)-((NOT (rt1.c0)))) WHERE ((NOT (rt1.c0))) UNION ALL SELECT ALL rt1.c6 FROM vt64 FULL OUTER JOIN rt1 ON ((CASE WHEN rt1.c1 THEN rt1.c4 ELSE 'r' END)-((NOT (rt1.c0)))) WHERE (((rt1.c0) ISNULL));
SELECT rt1.c6 FROM vt64 FULL OUTER JOIN rt1 ON ((CASE WHEN rt1.c1 THEN rt1.c4 ELSE 'r' END)-((NOT (rt1.c0))));
SELECT DISTINCT rt1.c4, rt1.c1, rt1.c3 FROM rt1, vt64;
SELECT DISTINCT rt1.c4, rt1.c1, rt1.c3 FROM rt1, vt64 WHERE (((vt64.lid IN ()) IN ())) UNION SELECT DISTINCT rt1.c4, rt1.c1, rt1.c3 FROM rt1, vt64 WHERE ((NOT (((vt64.lid IN ()) IN ())))) UNION SELECT DISTINCT rt1.c4, rt1.c1, rt1.c3 FROM rt1, vt64 WHERE (((((vt64.lid IN ()) IN ())) ISNULL));
SELECT DISTINCT rt1.c4, rt1.c1, rt1.c3 FROM rt1, vt64;
SELECT ALL vt64.c0, vt64.lid FROM vt64 GROUP BY vt64.c0, vt64.lid;
SELECT ALL vt64.c0, vt64.lid FROM vt64 WHERE (CAST(((vt64.c0) ISNULL) AS NUMERIC)) GROUP BY vt64.c0, vt64.lid UNION SELECT vt64.c0, vt64.lid FROM vt64 WHERE ((NOT (CAST(((vt64.c0) ISNULL) AS NUMERIC)))) GROUP BY vt64.c0, vt64.lid UNION SELECT vt64.c0, vt64.lid FROM vt64 WHERE (((CAST(((vt64.c0) ISNULL) AS NUMERIC)) ISNULL)) GROUP BY vt64.c0, vt64.lid;
SELECT ALL vt64.c0, vt64.lid FROM vt64 GROUP BY vt64.c0, vt64.lid;
SELECT ALL vt64.c0, rt1.c0, vt64.lid, rt1.c4, rt1.c6, rt1.c3, rt1.c1 FROM rt1, vt64 GROUP BY vt64.c0, rt1.c0, vt64.lid, rt1.c4, rt1.c6, rt1.c3, rt1.c1;
SELECT ALL vt64.c0, rt1.c0, vt64.lid, rt1.c4, rt1.c6, rt1.c3, rt1.c1 FROM rt1, vt64 GROUP BY vt64.c0, rt1.c0, vt64.lid, rt1.c4, rt1.c6, rt1.c3, rt1.c1 HAVING COUNT(((AVG(COUNT(SUM(rt1.c6)))) NOT NULL)) UNION ALL SELECT ALL vt64.c0, rt1.c0, vt64.lid, rt1.c4, rt1.c6, rt1.c3, rt1.c1 FROM rt1, vt64 GROUP BY vt64.c0, rt1.c0, vt64.lid, rt1.c4, rt1.c6, rt1.c3, rt1.c1 HAVING (NOT (COUNT(((AVG(COUNT(SUM(rt1.c6)))) NOT NULL)))) UNION ALL SELECT vt64.c0, rt1.c0, vt64.lid, rt1.c4, rt1.c6, rt1.c3, rt1.c1 FROM rt1, vt64 GROUP BY vt64.c0, rt1.c0, vt64.lid, rt1.c4, rt1.c6, rt1.c3, rt1.c1 HAVING ((COUNT(((AVG(COUNT(SUM(rt1.c6)))) NOT NULL))) ISNULL);
SELECT ALL * FROM vt64;
SELECT ALL * FROM vt64 WHERE (UPPER(DISTINCT ((vt64.lid)<>(vt64.c0)))) UNION ALL SELECT * FROM vt64 WHERE ((NOT (UPPER(DISTINCT ((vt64.lid)!=(vt64.c0)))))) UNION ALL SELECT ALL * FROM vt64 WHERE (((UPPER(DISTINCT ((vt64.lid)!=(vt64.c0)))) ISNULL));
SELECT ALL * FROM vt64;
SELECT DISTINCT * FROM vt64;
SELECT DISTINCT * FROM vt64 WHERE (((((CASE WHEN vt64.lid THEN vt64.lid END)AND(vt64.lid)))OR(((vt64.c0)>(NULL))))) UNION SELECT DISTINCT * FROM vt64 WHERE ((NOT (((((CASE WHEN vt64.lid THEN vt64.lid END)AND(vt64.lid)))OR(((vt64.c0)>(NULL))))))) UNION SELECT DISTINCT * FROM vt64 WHERE (((((((CASE WHEN vt64.lid THEN vt64.lid END)AND(vt64.lid)))OR(((vt64.c0)>(NULL))))) ISNULL));
SELECT DISTINCT * FROM vt64;
SELECT ALL rt1.c4, rt1.c2 FROM rt1 GROUP BY rt1.c4, rt1.c2;
SELECT rt1.c4, rt1.c2 FROM rt1 WHERE (((((CASE rt1.c4  WHEN rt1.c1 THEN rt1.c5 END)AND(((rt1.c2)OR(rt1.c6)))))OR(rt1.c6 COLLATE RTRIM))) GROUP BY rt1.c4, rt1.c2 UNION SELECT rt1.c4, rt1.c2 FROM rt1 WHERE ((NOT (((((CASE rt1.c4  WHEN rt1.c1 THEN rt1.c5 END)AND(((rt1.c2)OR(rt1.c6)))))OR(rt1.c6 COLLATE RTRIM))))) GROUP BY rt1.c4, rt1.c2 UNION SELECT ALL rt1.c4, rt1.c2 FROM rt1 WHERE (((((((CASE rt1.c4  WHEN rt1.c1 THEN rt1.c5 END)AND(((rt1.c2)OR(rt1.c6)))))OR(rt1.c6 COLLATE RTRIM))) ISNULL)) GROUP BY rt1.c4, rt1.c2;
SELECT ALL rt1.c4, rt1.c2 FROM rt1 GROUP BY rt1.c4, rt1.c2;
SELECT vt64.c0 FROM vt64 GROUP BY vt64.c0;
SELECT vt64.c0 FROM vt64 NOT INDEXED GROUP BY vt64.c0 HAVING MIN(((SUM(vt64.c0))IS(MAX(TOTAL(AVG(vt64.lid)))))) UNION ALL SELECT ALL vt64.c0 FROM vt64 GROUP BY vt64.c0 HAVING (NOT (MIN(((SUM(vt64.c0))IS(MAX(TOTAL(AVG(vt64.lid)))))))) UNION ALL SELECT vt64.c0 FROM vt64 GROUP BY vt64.c0 HAVING ((MIN(((SUM(vt64.c0))IS(MAX(TOTAL(AVG(vt64.lid))))))) ISNULL);
SELECT ALL MAX(((x'')<(3.75644662E8))) FROM rt1;
SELECT rt1.c3, rt1.c2, rt1.c1, rt1.c5, vt64.lid, vt64.c0 FROM rt1 LEFT OUTER JOIN vt64 ON ((CASE rt1.c0  WHEN rt1.c5 THEN x'' END) BETWEEN (CASE rt1.c3  WHEN rt1.c0 THEN vt64.lid WHEN rt1.c0 THEN vt64.lid WHEN rt1.c1 THEN rt1.c2 WHEN vt64.c0 THEN rt1.c3 WHEN rt1.c5 THEN rt1.c5 END) AND ((rt1.c5 IN ())));
SELECT ALL rt1.c3, rt1.c2, rt1.c1, rt1.c5, vt64.lid, vt64.c0 FROM rt1 LEFT OUTER JOIN vt64 ON ((CASE rt1.c0  WHEN rt1.c5 THEN x'' END) BETWEEN (CASE rt1.c3  WHEN rt1.c0 THEN vt64.lid WHEN rt1.c0 THEN vt64.lid WHEN rt1.c1 THEN rt1.c2 WHEN vt64.c0 THEN rt1.c3 WHEN rt1.c5 THEN rt1.c5 END) AND ((rt1.c5 IN ()))) WHERE (vt64.c0) UNION ALL SELECT rt1.c3, rt1.c2, rt1.c1, rt1.c5, vt64.lid, vt64.c0 FROM rt1 LEFT OUTER JOIN vt64 ON ((CASE rt1.c0  WHEN rt1.c5 THEN x'' END) BETWEEN (CASE rt1.c3  WHEN rt1.c0 THEN vt64.lid WHEN rt1.c0 THEN vt64.lid WHEN rt1.c1 THEN rt1.c2 WHEN vt64.c0 THEN rt1.c3 WHEN rt1.c5 THEN rt1.c5 END) AND ((rt1.c5 IN ()))) WHERE ((NOT (vt64.c0))) UNION ALL SELECT rt1.c3, rt1.c2, rt1.c1, rt1.c5, vt64.lid, vt64.c0 FROM rt1 LEFT OUTER JOIN vt64 ON ((CASE rt1.c0  WHEN rt1.c5 THEN x'' END) BETWEEN (CASE rt1.c3  WHEN rt1.c0 THEN vt64.lid WHEN rt1.c0 THEN vt64.lid WHEN rt1.c1 THEN rt1.c2 WHEN vt64.c0 THEN rt1.c3 WHEN rt1.c5 THEN rt1.c5 END) AND ((rt1.c5 IN ()))) WHERE (((vt64.c0) ISNULL));
SELECT rt1.c3, rt1.c2, rt1.c1, rt1.c5, vt64.lid, vt64.c0 FROM rt1 LEFT OUTER JOIN vt64 ON ((CASE rt1.c0  WHEN rt1.c5 THEN x'' END) BETWEEN (CASE rt1.c3  WHEN rt1.c0 THEN vt64.lid WHEN rt1.c0 THEN vt64.lid WHEN rt1.c1 THEN rt1.c2 WHEN vt64.c0 THEN rt1.c3 WHEN rt1.c5 THEN rt1.c5 END) AND ((rt1.c5 IN ())));
SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM rt1;
SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE ((((rt1.c4) ISNULL) IN (((('0.4311048804902955'))=((rt1.c1)))))) UNION SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE ((NOT ((((rt1.c4) ISNULL) IN (((('0.4311048804902955'))==((rt1.c1)))))))) UNION SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE ((((((rt1.c4) ISNULL) IN (((('0.4311048804902955'))==((rt1.c1)))))) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM rt1;
SELECT rt1.c5, rt1.c6, rt1.c2, vt64.lid, vt64.c0, rt1.c4 FROM rt1 NATURAL JOIN vt64 GROUP BY rt1.c5, rt1.c6, rt1.c2, vt64.lid, vt64.c0, rt1.c4;
SELECT ALL rt1.c5, rt1.c6, rt1.c2, vt64.lid, vt64.c0, rt1.c4 FROM rt1 NATURAL JOIN vt64 WHERE ((((((rt1.c6)<(rt1.c0)), ((rt1.c6) NOT BETWEEN (rt1.c2) AND (rt1.c0)), CASE WHEN rt1.c5 THEN rt1.c5 WHEN 0.8844842253064562 THEN rt1.c0 WHEN vt64.c0 THEN rt1.c1 WHEN '\nu' THEN NULL WHEN rt1.c0 THEN rt1.c6 END))<(((((rt1.c6, rt1.c2, vt64.lid))>((rt1.c5, vt64.lid, rt1.c1))), (((rt1.c2, vt64.lid, vt64.c0))>((rt1.c5, rt1.c5, rt1.c6))), '⎶Mi~')))) GROUP BY rt1.c5, rt1.c6, rt1.c2, vt64.lid, vt64.c0, rt1.c4 UNION SELECT rt1.c5, rt1.c6, rt1.c2, vt64.lid, vt64.c0, rt1.c4 FROM rt1 NATURAL JOIN vt64 WHERE ((NOT ((((((rt1.c6)<(rt1.c0)), ((rt1.c6) NOT BETWEEN (rt1.c2) AND (rt1.c0)), CASE WHEN rt1.c5 THEN rt1.c5 WHEN 0.8844842253064562 THEN rt1.c0 WHEN vt64.c0 THEN rt1.c1 WHEN '\nu' THEN NULL WHEN rt1.c0 THEN rt1.c6 END))<(((((rt1.c6, rt1.c2, vt64.lid))>((rt1.c5, vt64.lid, rt1.c1))), (((rt1.c2, vt64.lid, vt64.c0))>((rt1.c5, rt1.c5, rt1.c6))), '⎶Mi~')))))) GROUP BY rt1.c5, rt1.c6, rt1.c2, vt64.lid, vt64.c0, rt1.c4 UNION SELECT ALL rt1.c5, rt1.c6, rt1.c2, vt64.lid, vt64.c0, rt1.c4 FROM rt1 NATURAL JOIN vt64 WHERE ((((((((rt1.c6)<(rt1.c0)), ((rt1.c6) NOT BETWEEN (rt1.c2) AND (rt1.c0)), CASE WHEN rt1.c5 THEN rt1.c5 WHEN 0.8844842253064562 THEN rt1.c0 WHEN vt64.c0 THEN rt1.c1 WHEN '\nu' THEN NULL WHEN rt1.c0 THEN rt1.c6 END))<(((((rt1.c6, rt1.c2, vt64.lid))>((rt1.c5, vt64.lid, rt1.c1))), (((rt1.c2, vt64.lid, vt64.c0))>((rt1.c5, rt1.c5, rt1.c6))), '⎶Mi~')))) ISNULL)) GROUP BY rt1.c5, rt1.c6, rt1.c2, vt64.lid, vt64.c0, rt1.c4;
SELECT rt1.c5, rt1.c6, rt1.c2, vt64.lid, vt64.c0, rt1.c4 FROM rt1 NATURAL JOIN vt64 GROUP BY rt1.c5, rt1.c6, rt1.c2, vt64.lid, vt64.c0, rt1.c4;
SELECT rt1.c4, vt64.c0, rt1.c6, rt1.c3, rt1.c1, rt1.c0, rt1.c2, vt64.lid, rt1.c5 FROM vt64 LEFT OUTER JOIN rt1 ON ((((vt64.c0)+(vt64.lid)))LIKE(((rt1.c0) NOT BETWEEN (rt1.c6) AND (rt1.c3)))) GROUP BY rt1.c4, vt64.c0, rt1.c6, rt1.c3, rt1.c1, rt1.c0, rt1.c2, vt64.lid, rt1.c5;
SELECT rt1.c4, vt64.c0, rt1.c6, rt1.c3, rt1.c1, rt1.c0, rt1.c2, vt64.lid, rt1.c5 FROM vt64 LEFT OUTER JOIN rt1 ON ((((vt64.c0)+(vt64.lid)))LIKE(((rt1.c0) NOT BETWEEN (rt1.c6) AND (rt1.c3)))) GROUP BY rt1.c4, vt64.c0, rt1.c6, rt1.c3, rt1.c1, rt1.c0, rt1.c2, vt64.lid, rt1.c5 HAVING AVG(((AVG(COUNT(AVG(rt1.c0))))IS NOT(rt1.c0))) UNION ALL SELECT rt1.c4, vt64.c0, rt1.c6, rt1.c3, rt1.c1, rt1.c0, rt1.c2, vt64.lid, rt1.c5 FROM vt64 LEFT OUTER JOIN rt1 ON ((((vt64.c0)+(vt64.lid)))LIKE(((rt1.c0) NOT BETWEEN (rt1.c6) AND (rt1.c3)))) GROUP BY rt1.c4, vt64.c0, rt1.c6, rt1.c3, rt1.c1, rt1.c0, rt1.c2, vt64.lid, rt1.c5 HAVING (NOT (AVG(((AVG(COUNT(AVG(rt1.c0))))IS NOT(rt1.c0))))) UNION ALL SELECT rt1.c4, vt64.c0, rt1.c6, rt1.c3, rt1.c1, rt1.c0, rt1.c2, vt64.lid, rt1.c5 FROM vt64 LEFT OUTER JOIN rt1 ON ((((vt64.c0)+(vt64.lid)))LIKE(((rt1.c0) NOT BETWEEN (rt1.c6) AND (rt1.c3)))) GROUP BY rt1.c4, vt64.c0, rt1.c6, rt1.c3, rt1.c1, rt1.c0, rt1.c2, vt64.lid, rt1.c5 HAVING ((AVG(((AVG(COUNT(AVG(rt1.c0))))IS NOT(rt1.c0)))) ISNULL);
SELECT rt1.c6 FROM rt1;
SELECT rt1.c6 FROM rt1 WHERE (((rt1.c5) IS TRUE)) UNION ALL SELECT rt1.c6 FROM rt1 WHERE ((NOT (((rt1.c5) IS TRUE)))) UNION ALL SELECT ALL rt1.c6 FROM rt1 WHERE (((((rt1.c5) IS TRUE)) ISNULL));
SELECT rt1.c6 FROM rt1;
SELECT DISTINCT vt64.c0 FROM rt1, vt64;
SELECT DISTINCT vt64.c0 FROM rt1, vt64 WHERE ((NOT (JULIANDAY(rt1.c0, rt1.c1, vt64.c0, vt64.c0, vt64.lid, NULL, vt64.lid)))) UNION SELECT DISTINCT vt64.c0 FROM rt1 NOT INDEXED, vt64 WHERE ((NOT ((NOT (JULIANDAY(rt1.c0, rt1.c1, vt64.c0, vt64.c0, vt64.lid, NULL, vt64.lid)))))) UNION SELECT DISTINCT vt64.c0 FROM rt1, vt64 WHERE ((((NOT (JULIANDAY(rt1.c0, rt1.c1, vt64.c0, vt64.c0, vt64.lid, NULL, vt64.lid)))) ISNULL));
SELECT DISTINCT vt64.c0 FROM rt1, vt64;
SELECT vt64.c0 FROM vt64 GROUP BY vt64.c0;
SELECT vt64.c0 FROM vt64 WHERE ((NOT ((+ (vt64.lid))))) GROUP BY vt64.c0 UNION SELECT ALL vt64.c0 FROM vt64 WHERE ((NOT ((NOT ((+ (vt64.lid))))))) GROUP BY vt64.c0 UNION SELECT ALL vt64.c0 FROM vt64 WHERE ((((NOT ((+ (vt64.lid))))) ISNULL)) GROUP BY vt64.c0;
SELECT vt64.c0 FROM vt64 GROUP BY vt64.c0;
SELECT ALL vt64.lid, rt1.c5 FROM vt64 INNER JOIN rt1 ON ((UPPER(vt64.lid)) NOT BETWEEN (json_quote(NULL)) AND (rt1.c4 COLLATE RTRIM)) GROUP BY vt64.lid, rt1.c5;
SELECT ALL vt64.lid, rt1.c5 FROM vt64 INNER JOIN rt1 ON ((UPPER(vt64.lid)) NOT BETWEEN (json_quote(NULL)) AND (rt1.c4 COLLATE RTRIM)) GROUP BY vt64.lid, rt1.c5 HAVING COUNT(*) UNION ALL SELECT vt64.lid, rt1.c5 FROM vt64 INNER JOIN rt1 ON ((UPPER(vt64.lid)) NOT BETWEEN (json_quote(NULL)) AND (rt1.c4 COLLATE RTRIM)) GROUP BY vt64.lid, rt1.c5 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt64.lid, rt1.c5 FROM vt64 INNER JOIN rt1 ON ((UPPER(vt64.lid)) NOT BETWEEN (json_quote(NULL)) AND (rt1.c4 COLLATE RTRIM)) GROUP BY vt64.lid, rt1.c5 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt64.lid, rt1.c5 FROM vt64 INNER JOIN rt1 ON ((UPPER(vt64.lid)) NOT BETWEEN (json_quote(NULL)) AND (rt1.c4 COLLATE RTRIM)) GROUP BY vt64.lid, rt1.c5;
SELECT ALL vt64.lid, rt1.c5 FROM vt64 INNER JOIN rt1 ON ((UPPER(vt64.lid)) NOT BETWEEN (json_quote(NULL)) AND (rt1.c4 COLLATE RTRIM)) GROUP BY vt64.lid, rt1.c5 HAVING COUNT(*) UNION ALL SELECT vt64.lid, rt1.c5 FROM vt64 INNER JOIN rt1 ON ((UPPER(vt64.lid)) NOT BETWEEN (json_quote(NULL)) AND (rt1.c4 COLLATE RTRIM)) GROUP BY vt64.lid, rt1.c5 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt64.lid, rt1.c5 FROM vt64 INNER JOIN rt1 ON ((UPPER(vt64.lid)) NOT BETWEEN (json_quote(NULL)) AND (rt1.c4 COLLATE RTRIM)) GROUP BY vt64.lid, rt1.c5 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt64.lid, rt1.c5 FROM vt64 INNER JOIN rt1 ON ((UPPER(vt64.lid)) NOT BETWEEN (json_quote(NULL)) AND (rt1.c4 COLLATE RTRIM)) GROUP BY vt64.lid, rt1.c5;
SELECT * FROM vt64;
SELECT * FROM vt64 WHERE (((((vt64.lid)/(vt64.c0)))*(((((vt64.lid)OR(vt64.lid)))OR(vt64.lid))))) UNION ALL SELECT ALL * FROM vt64 WHERE ((NOT (((((vt64.lid)/(vt64.c0)))*(((((vt64.lid)OR(vt64.lid)))OR(vt64.lid))))))) UNION ALL SELECT ALL * FROM vt64 WHERE (((((((vt64.lid)/(vt64.c0)))*(((((vt64.lid)OR(vt64.lid)))OR(vt64.lid))))) ISNULL));
SELECT * FROM vt64;
SELECT DISTINCT * FROM vt64;
SELECT DISTINCT * FROM vt64 WHERE (CASE ((vt64.lid)>(vt64.lid))  WHEN (NOT (vt64.c0)) THEN HEX(vt64.lid) ELSE ((vt64.c0)%(vt64.lid)) END) UNION SELECT DISTINCT * FROM vt64 WHERE ((NOT (CASE ((vt64.lid)>(vt64.lid))  WHEN (NOT (vt64.c0)) THEN HEX(vt64.lid) ELSE ((vt64.c0)%(vt64.lid)) END))) UNION SELECT DISTINCT * FROM vt64 WHERE (((CASE ((vt64.lid)>(vt64.lid))  WHEN (NOT (vt64.c0)) THEN HEX(vt64.lid) ELSE ((vt64.c0)%(vt64.lid)) END) ISNULL));
SELECT DISTINCT * FROM vt64;
SELECT vt64.lid FROM vt64 GROUP BY vt64.lid;
SELECT ALL vt64.lid FROM vt64 WHERE (((((vt64.c0)>=(vt64.lid))) IS FALSE)) GROUP BY vt64.lid UNION SELECT ALL vt64.lid FROM vt64 WHERE ((NOT (((((vt64.c0)>=(vt64.lid))) IS FALSE)))) GROUP BY vt64.lid UNION SELECT vt64.lid FROM vt64 WHERE (((((((vt64.c0)>=(vt64.lid))) IS FALSE)) ISNULL)) GROUP BY vt64.lid;
SELECT vt64.lid FROM vt64 GROUP BY vt64.lid;
SELECT vt64.lid FROM vt64 GROUP BY vt64.lid;
SELECT ALL vt64.lid FROM vt64 GROUP BY vt64.lid HAVING MIN(COUNT(COUNT(*))) UNION ALL SELECT vt64.lid FROM vt64 GROUP BY vt64.lid HAVING (NOT (MIN(COUNT(COUNT(*))))) UNION ALL SELECT vt64.lid FROM vt64 GROUP BY vt64.lid HAVING ((MIN(COUNT(COUNT(*)))) ISNULL);
SELECT ALL MAX((((rt1.c4)) NOT BETWEEN (((((rt1.c1))>((rt1.c3))))) AND ((LIKELIHOOD(rt1.c6, 0.39905274464520135))))) FROM rt1 ORDER BY rt1.c6;
SELECT * FROM vt64;
SELECT * FROM vt64 WHERE (((((vt64.lid) NOT BETWEEN (vt64.lid) AND (vt64.c0)))GLOB((- (vt64.lid))))) UNION ALL SELECT ALL * FROM vt64 WHERE ((NOT (((((vt64.lid) NOT BETWEEN (vt64.lid) AND (vt64.c0)))GLOB((- (vt64.lid))))))) UNION ALL SELECT ALL * FROM vt64 WHERE (((((((vt64.lid) NOT BETWEEN (vt64.lid) AND (vt64.c0)))GLOB((- (vt64.lid))))) ISNULL));
SELECT * FROM vt64;
SELECT DISTINCT * FROM vt64;
SELECT DISTINCT * FROM vt64 WHERE ((((vt64.c0)IS(vt64.c0)) IN ())) UNION SELECT DISTINCT * FROM vt64 WHERE ((NOT ((((vt64.c0)IS(vt64.c0)) IN ())))) UNION SELECT DISTINCT * FROM vt64 WHERE ((((((vt64.c0)IS(vt64.c0)) IN ())) ISNULL));
SELECT DISTINCT * FROM vt64;
SELECT rt1.c5, rt1.c3, rt1.c6, vt64.c0, rt1.c2, rt1.c4 FROM rt1, vt64 GROUP BY rt1.c5, rt1.c3, rt1.c6, vt64.c0, rt1.c2, rt1.c4;
SELECT ALL rt1.c5, rt1.c3, rt1.c6, vt64.c0, rt1.c2, rt1.c4 FROM rt1, vt64 WHERE (((LOWER(rt1.c4)) NOT NULL)) GROUP BY rt1.c5, rt1.c3, rt1.c6, vt64.c0, rt1.c2, rt1.c4 UNION SELECT rt1.c5, rt1.c3, rt1.c6, vt64.c0, rt1.c2, rt1.c4 FROM rt1, vt64 WHERE ((NOT (((LOWER(rt1.c4)) NOT NULL)))) GROUP BY rt1.c5, rt1.c3, rt1.c6, vt64.c0, rt1.c2, rt1.c4 UNION SELECT ALL rt1.c5, rt1.c3, rt1.c6, vt64.c0, rt1.c2, rt1.c4 FROM rt1, vt64 WHERE (((((LOWER(rt1.c4)) NOT NULL)) ISNULL)) GROUP BY rt1.c5, rt1.c3, rt1.c6, vt64.c0, rt1.c2, rt1.c4;
SELECT rt1.c5, rt1.c3, rt1.c6, vt64.c0, rt1.c2, rt1.c4 FROM rt1, vt64 GROUP BY rt1.c5, rt1.c3, rt1.c6, vt64.c0, rt1.c2, rt1.c4;
SELECT rt1.c4, rt1.c5, rt1.c2, rt1.c1, rt1.c0, rt1.c6 FROM rt1 GROUP BY rt1.c4, rt1.c5, rt1.c2, rt1.c1, rt1.c0, rt1.c6;
SELECT ALL rt1.c4, rt1.c5, rt1.c2, rt1.c1, rt1.c0, rt1.c6 FROM rt1 GROUP BY rt1.c4, rt1.c5, rt1.c2, rt1.c1, rt1.c0, rt1.c6 HAVING MAX(AVG(TOTAL(AVG(MAX(rt1.c0))))) COLLATE BINARY UNION ALL SELECT ALL rt1.c4, rt1.c5, rt1.c2, rt1.c1, rt1.c0, rt1.c6 FROM rt1 GROUP BY rt1.c4, rt1.c5, rt1.c2, rt1.c1, rt1.c0, rt1.c6 HAVING (NOT (MAX(AVG(TOTAL(AVG(MAX(rt1.c0))))) COLLATE BINARY)) UNION ALL SELECT ALL rt1.c4, rt1.c5, rt1.c2, rt1.c1, rt1.c0, rt1.c6 FROM rt1 GROUP BY rt1.c4, rt1.c5, rt1.c2, rt1.c1, rt1.c0, rt1.c6 HAVING ((MAX(AVG(TOTAL(AVG(MAX(rt1.c0))))) COLLATE BINARY) ISNULL);
SELECT rt1.c4, rt1.c2, vt64.lid, rt1.c0, vt64.c0, rt1.c5, rt1.c6 FROM rt1 CROSS JOIN vt64 ON (- ('*dvpQu^*'));
SELECT ALL rt1.c4, rt1.c2, vt64.lid, rt1.c0, vt64.c0, rt1.c5, rt1.c6 FROM rt1 CROSS JOIN vt64 ON (- ('*dvpQu^*')) WHERE (CAST(((rt1.c6)GLOB(rt1.c3)) AS NUMERIC)) UNION ALL SELECT ALL rt1.c4, rt1.c2, vt64.lid, rt1.c0, vt64.c0, rt1.c5, rt1.c6 FROM rt1 CROSS JOIN vt64 ON (- ('*dvpQu^*')) WHERE ((NOT (CAST(((rt1.c6)GLOB(rt1.c3)) AS NUMERIC)))) UNION ALL SELECT rt1.c4, rt1.c2, vt64.lid, rt1.c0, vt64.c0, rt1.c5, rt1.c6 FROM rt1 CROSS JOIN vt64 ON (- ('*dvpQu^*')) WHERE (((CAST(((rt1.c6)GLOB(rt1.c3)) AS NUMERIC)) ISNULL));
SELECT rt1.c4, rt1.c2, vt64.lid, rt1.c0, vt64.c0, rt1.c5, rt1.c6 FROM rt1 CROSS JOIN vt64 ON (- ('*dvpQu^*'));
SELECT DISTINCT vt64.c0, vt64.lid FROM vt64;
SELECT DISTINCT vt64.c0, vt64.lid FROM vt64 WHERE (NULL) UNION SELECT DISTINCT vt64.c0, vt64.lid FROM vt64 WHERE ((NOT (NULL))) UNION SELECT DISTINCT vt64.c0, vt64.lid FROM vt64 WHERE (((NULL) ISNULL));
SELECT DISTINCT vt64.c0, vt64.lid FROM vt64;
SELECT ALL vt64.lid FROM vt64 GROUP BY vt64.lid;
SELECT ALL vt64.lid FROM vt64 WHERE ((((vt64.lid)LIKE(vt64.lid)) IN ())) GROUP BY vt64.lid UNION SELECT ALL vt64.lid FROM vt64 WHERE ((NOT ((((vt64.lid)LIKE(vt64.lid)) IN ())))) GROUP BY vt64.lid UNION SELECT vt64.lid FROM vt64 WHERE ((((((vt64.lid)LIKE(vt64.lid)) IN ())) ISNULL)) GROUP BY vt64.lid;
SELECT ALL vt64.lid FROM vt64 GROUP BY vt64.lid;
SELECT rt1.c6, rt1.c1, rt1.c2, rt1.c0, rt1.c3, vt64.lid, vt64.c0, rt1.c4 FROM vt64, rt1 GROUP BY rt1.c6, rt1.c1, rt1.c2, rt1.c0, rt1.c3, vt64.lid, vt64.c0, rt1.c4;
SELECT ALL rt1.c6, rt1.c1, rt1.c2, rt1.c0, rt1.c3, vt64.lid, vt64.c0, rt1.c4 FROM vt64, rt1 GROUP BY rt1.c6, rt1.c1, rt1.c2, rt1.c0, rt1.c3, vt64.lid, vt64.c0, rt1.c4 HAVING MIN(COUNT(TOTAL(GROUP_CONCAT(TOTAL(rt1.c6))))) UNION ALL SELECT ALL rt1.c6, rt1.c1, rt1.c2, rt1.c0, rt1.c3, vt64.lid, vt64.c0, rt1.c4 FROM vt64, rt1 GROUP BY rt1.c6, rt1.c1, rt1.c2, rt1.c0, rt1.c3, vt64.lid, vt64.c0, rt1.c4 HAVING (NOT (MIN(COUNT(TOTAL(GROUP_CONCAT(TOTAL(rt1.c6))))))) UNION ALL SELECT rt1.c6, rt1.c1, rt1.c2, rt1.c0, rt1.c3, vt64.lid, vt64.c0, rt1.c4 FROM vt64, rt1 GROUP BY rt1.c6, rt1.c1, rt1.c2, rt1.c0, rt1.c3, vt64.lid, vt64.c0, rt1.c4 HAVING ((MIN(COUNT(TOTAL(GROUP_CONCAT(TOTAL(rt1.c6)))))) ISNULL);
SELECT * FROM vt64, rt1;
SELECT ALL * FROM vt64, rt1 WHERE ((rt1.c5 IN ()) COLLATE BINARY) UNION ALL SELECT ALL * FROM vt64, rt1 WHERE ((NOT ((rt1.c5 IN ()) COLLATE BINARY))) UNION ALL SELECT ALL * FROM vt64, rt1 WHERE ((((rt1.c5 IN ()) COLLATE BINARY) ISNULL));
SELECT * FROM vt64, rt1;
SELECT DISTINCT rt1.c5, rt1.c4, rt1.c1, rt1.c2, rt1.c3, vt64.lid, rt1.c6 FROM rt1, vt64;
SELECT DISTINCT rt1.c5, rt1.c4, rt1.c1, rt1.c2, rt1.c3, vt64.lid, rt1.c6 FROM rt1, vt64 WHERE (CAST((- (rt1.c3)) AS NUMERIC)) UNION SELECT DISTINCT rt1.c5, rt1.c4, rt1.c1, rt1.c2, rt1.c3, vt64.lid, rt1.c6 FROM rt1, vt64 WHERE ((NOT (CAST((- (rt1.c3)) AS NUMERIC)))) UNION SELECT DISTINCT rt1.c5, rt1.c4, rt1.c1, rt1.c2, rt1.c3, vt64.lid, rt1.c6 FROM rt1, vt64 WHERE (((CAST((- (rt1.c3)) AS NUMERIC)) ISNULL));
SELECT DISTINCT rt1.c5, rt1.c4, rt1.c1, rt1.c2, rt1.c3, vt64.lid, rt1.c6 FROM rt1, vt64;
SELECT rt1.c4 FROM vt64, rt1 GROUP BY rt1.c4;
SELECT rt1.c4 FROM vt64, rt1 WHERE (rt1.c6) GROUP BY rt1.c4 UNION SELECT ALL rt1.c4 FROM vt64, rt1 WHERE ((NOT (rt1.c6))) GROUP BY rt1.c4 UNION SELECT ALL rt1.c4 FROM vt64, rt1 WHERE (((rt1.c6) ISNULL)) GROUP BY rt1.c4;
SELECT rt1.c4 FROM vt64, rt1 GROUP BY rt1.c4;
SELECT ALL rt1.c1, rt1.c5, rt1.c4, vt64.c0, vt64.lid, rt1.c0, rt1.c2, rt1.c6, rt1.c3 FROM rt1, vt64 GROUP BY rt1.c1, rt1.c5, rt1.c4, vt64.c0, vt64.lid, rt1.c0, rt1.c2, rt1.c6, rt1.c3;
SELECT rt1.c1, rt1.c5, rt1.c4, vt64.c0, vt64.lid, rt1.c0, rt1.c2, rt1.c6, rt1.c3 FROM rt1, vt64 GROUP BY rt1.c1, rt1.c5, rt1.c4, vt64.c0, vt64.lid, rt1.c0, rt1.c2, rt1.c6, rt1.c3 HAVING CAST(GROUP_CONCAT(rt1.c0) AS BLOB) UNION ALL SELECT rt1.c1, rt1.c5, rt1.c4, vt64.c0, vt64.lid, rt1.c0, rt1.c2, rt1.c6, rt1.c3 FROM rt1, vt64 GROUP BY rt1.c1, rt1.c5, rt1.c4, vt64.c0, vt64.lid, rt1.c0, rt1.c2, rt1.c6, rt1.c3 HAVING (NOT (CAST(GROUP_CONCAT(rt1.c0) AS BLOB))) UNION ALL SELECT rt1.c1, rt1.c5, rt1.c4, vt64.c0, vt64.lid, rt1.c0, rt1.c2, rt1.c6, rt1.c3 FROM rt1, vt64 GROUP BY rt1.c1, rt1.c5, rt1.c4, vt64.c0, vt64.lid, rt1.c0, rt1.c2, rt1.c6, rt1.c3 HAVING ((CAST(GROUP_CONCAT(rt1.c0) AS BLOB)) ISNULL);
SELECT ALL rt1.c1, rt1.c5, rt1.c4, vt64.c0, vt64.lid, rt1.c0, rt1.c2, rt1.c6, rt1.c3 FROM rt1, vt64 GROUP BY rt1.c1, rt1.c5, rt1.c4, vt64.c0, vt64.lid, rt1.c0, rt1.c2, rt1.c6, rt1.c3;
SELECT rt1.c1, rt1.c5, rt1.c4, vt64.c0, vt64.lid, rt1.c0, rt1.c2, rt1.c6, rt1.c3 FROM rt1, vt64 GROUP BY rt1.c1, rt1.c5, rt1.c4, vt64.c0, vt64.lid, rt1.c0, rt1.c2, rt1.c6, rt1.c3 HAVING CAST(GROUP_CONCAT(rt1.c0) AS BLOB) UNION ALL SELECT rt1.c1, rt1.c5, rt1.c4, vt64.c0, vt64.lid, rt1.c0, rt1.c2, rt1.c6, rt1.c3 FROM rt1, vt64 GROUP BY rt1.c1, rt1.c5, rt1.c4, vt64.c0, vt64.lid, rt1.c0, rt1.c2, rt1.c6, rt1.c3 HAVING (NOT (CAST(GROUP_CONCAT(rt1.c0) AS BLOB))) UNION ALL SELECT rt1.c1, rt1.c5, rt1.c4, vt64.c0, vt64.lid, rt1.c0, rt1.c2, rt1.c6, rt1.c3 FROM rt1, vt64 GROUP BY rt1.c1, rt1.c5, rt1.c4, vt64.c0, vt64.lid, rt1.c0, rt1.c2, rt1.c6, rt1.c3 HAVING ((CAST(GROUP_CONCAT(rt1.c0) AS BLOB)) ISNULL);
SELECT ALL rt1.c1, rt1.c5, rt1.c4, vt64.c0, vt64.lid, rt1.c0, rt1.c2, rt1.c6, rt1.c3 FROM rt1, vt64 GROUP BY rt1.c1, rt1.c5, rt1.c4, vt64.c0, vt64.lid, rt1.c0, rt1.c2, rt1.c6, rt1.c3;
SELECT ALL SUM((((vt64.lid)) BETWEEN (((((vt64.c0))>((rt1.c1))))) AND ((vt64.lid)))) FROM vt64, rt1;
SELECT * FROM rt1;
SELECT * FROM rt1 WHERE (((((rt1.c2 COLLATE RTRIM)AND(((rt1.c3)LIKE(rt1.c4)))))AND(TYPEOF(rt1.c5)))) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT (((((rt1.c2 COLLATE RTRIM)AND(((rt1.c3)LIKE(rt1.c4)))))AND(TYPEOF(rt1.c5)))))) UNION ALL SELECT ALL * FROM rt1 WHERE (((((((rt1.c2 COLLATE RTRIM)AND(((rt1.c3)LIKE(rt1.c4)))))AND(TYPEOF(rt1.c5)))) ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT * FROM vt64;
SELECT DISTINCT * FROM vt64 WHERE (((CAST(vt64.lid AS REAL)) IS FALSE)) UNION SELECT DISTINCT * FROM vt64 WHERE ((NOT (((CAST(vt64.lid AS REAL)) IS FALSE)))) UNION SELECT DISTINCT * FROM vt64 WHERE (((((CAST(vt64.lid AS REAL)) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM vt64;
SELECT ALL rt1.c6, rt1.c5, rt1.c2, vt64.lid, vt64.c0, rt1.c4, rt1.c1, rt1.c3, rt1.c0 FROM rt1 CROSS JOIN vt64 ON (((rt1.c2)) NOT BETWEEN ((((rt1.c3) NOT NULL))) AND ((CAST(rt1.c0 AS BLOB)))) GROUP BY rt1.c6, rt1.c5, rt1.c2, vt64.lid, vt64.c0, rt1.c4, rt1.c1, rt1.c3, rt1.c0;
SELECT rt1.c6, rt1.c5, rt1.c2, vt64.lid, vt64.c0, rt1.c4, rt1.c1, rt1.c3, rt1.c0 FROM rt1 CROSS JOIN vt64 ON (((rt1.c2)) NOT BETWEEN ((((rt1.c3) NOT NULL))) AND ((CAST(rt1.c0 AS BLOB)))) WHERE (CAST(UPPER(rt1.c0) AS NUMERIC)) GROUP BY rt1.c6, rt1.c5, rt1.c2, vt64.lid, vt64.c0, rt1.c4, rt1.c1, rt1.c3, rt1.c0 UNION SELECT rt1.c6, rt1.c5, rt1.c2, vt64.lid, vt64.c0, rt1.c4, rt1.c1, rt1.c3, rt1.c0 FROM rt1 CROSS JOIN vt64 ON (((rt1.c2)) NOT BETWEEN ((((rt1.c3) NOT NULL))) AND ((CAST(rt1.c0 AS BLOB)))) WHERE ((NOT (CAST(UPPER(rt1.c0) AS NUMERIC)))) GROUP BY rt1.c6, rt1.c5, rt1.c2, vt64.lid, vt64.c0, rt1.c4, rt1.c1, rt1.c3, rt1.c0 UNION SELECT ALL rt1.c6, rt1.c5, rt1.c2, vt64.lid, vt64.c0, rt1.c4, rt1.c1, rt1.c3, rt1.c0 FROM rt1 CROSS JOIN vt64 ON (((rt1.c2)) NOT BETWEEN ((((rt1.c3) NOT NULL))) AND ((CAST(rt1.c0 AS BLOB)))) WHERE (((CAST(UPPER(rt1.c0) AS NUMERIC)) ISNULL)) GROUP BY rt1.c6, rt1.c5, rt1.c2, vt64.lid, vt64.c0, rt1.c4, rt1.c1, rt1.c3, rt1.c0;
SELECT ALL rt1.c6, rt1.c5, rt1.c2, vt64.lid, vt64.c0, rt1.c4, rt1.c1, rt1.c3, rt1.c0 FROM rt1 CROSS JOIN vt64 ON (((rt1.c2)) NOT BETWEEN ((((rt1.c3) NOT NULL))) AND ((CAST(rt1.c0 AS BLOB)))) GROUP BY rt1.c6, rt1.c5, rt1.c2, vt64.lid, vt64.c0, rt1.c4, rt1.c1, rt1.c3, rt1.c0;
SELECT ALL rt1.c4, rt1.c0, rt1.c3, rt1.c5, vt64.c0, rt1.c2, rt1.c6 FROM rt1, vt64 GROUP BY rt1.c4, rt1.c0, rt1.c3, rt1.c5, vt64.c0, rt1.c2, rt1.c6;
SELECT rt1.c4, rt1.c0, rt1.c3, rt1.c5, vt64.c0, rt1.c2, rt1.c6 FROM rt1, vt64 GROUP BY rt1.c4, rt1.c0, rt1.c3, rt1.c5, vt64.c0, rt1.c2, rt1.c6 HAVING (- (SUM(rt1.c1))) UNION ALL SELECT rt1.c4, rt1.c0, rt1.c3, rt1.c5, vt64.c0, rt1.c2, rt1.c6 FROM rt1, vt64 GROUP BY rt1.c4, rt1.c0, rt1.c3, rt1.c5, vt64.c0, rt1.c2, rt1.c6 HAVING (NOT ((- (SUM(rt1.c1))))) UNION ALL SELECT rt1.c4, rt1.c0, rt1.c3, rt1.c5, vt64.c0, rt1.c2, rt1.c6 FROM rt1, vt64 GROUP BY rt1.c4, rt1.c0, rt1.c3, rt1.c5, vt64.c0, rt1.c2, rt1.c6 HAVING (((- (SUM(rt1.c1)))) ISNULL);
SELECT ALL rt1.c4, rt1.c0, rt1.c3, rt1.c5, vt64.c0, rt1.c2, rt1.c6 FROM rt1, vt64 GROUP BY rt1.c4, rt1.c0, rt1.c3, rt1.c5, vt64.c0, rt1.c2, rt1.c6;
SELECT rt1.c4, rt1.c0, rt1.c3, rt1.c5, vt64.c0, rt1.c2, rt1.c6 FROM rt1, vt64 GROUP BY rt1.c4, rt1.c0, rt1.c3, rt1.c5, vt64.c0, rt1.c2, rt1.c6 HAVING (- (SUM(rt1.c1))) UNION ALL SELECT rt1.c4, rt1.c0, rt1.c3, rt1.c5, vt64.c0, rt1.c2, rt1.c6 FROM rt1, vt64 GROUP BY rt1.c4, rt1.c0, rt1.c3, rt1.c5, vt64.c0, rt1.c2, rt1.c6 HAVING (NOT ((- (SUM(rt1.c1))))) UNION ALL SELECT rt1.c4, rt1.c0, rt1.c3, rt1.c5, vt64.c0, rt1.c2, rt1.c6 FROM rt1, vt64 GROUP BY rt1.c4, rt1.c0, rt1.c3, rt1.c5, vt64.c0, rt1.c2, rt1.c6 HAVING (((- (SUM(rt1.c1)))) ISNULL);
SELECT ALL rt1.c4, rt1.c0, rt1.c3, rt1.c5, vt64.c0, rt1.c2, rt1.c6 FROM rt1, vt64 GROUP BY rt1.c4, rt1.c0, rt1.c3, rt1.c5, vt64.c0, rt1.c2, rt1.c6;
SELECT ALL vt64.lid FROM vt64;
SELECT ALL vt64.lid FROM vt64 WHERE (((NULL)-(CASE WHEN vt64.lid THEN vt64.c0 WHEN vt64.c0 THEN vt64.c0 WHEN NULL THEN vt64.lid ELSE vt64.c0 END))) UNION ALL SELECT ALL vt64.lid FROM vt64 WHERE ((NOT (((NULL)-(CASE WHEN vt64.lid THEN vt64.c0 WHEN vt64.c0 THEN vt64.c0 WHEN NULL THEN vt64.lid ELSE vt64.c0 END))))) UNION ALL SELECT ALL vt64.lid FROM vt64 WHERE (((((NULL)-(CASE WHEN vt64.lid THEN vt64.c0 WHEN vt64.c0 THEN vt64.c0 WHEN NULL THEN vt64.lid ELSE vt64.c0 END))) ISNULL));
SELECT ALL vt64.lid FROM vt64;
SELECT DISTINCT rt1.c5 FROM rt1;
SELECT DISTINCT rt1.c5 FROM rt1 WHERE (NULL) UNION SELECT DISTINCT rt1.c5 FROM rt1 WHERE ((NOT (NULL))) UNION SELECT DISTINCT rt1.c5 FROM rt1 WHERE (((NULL) ISNULL));
SELECT DISTINCT rt1.c5 FROM rt1;
SELECT ALL vt64.c0, vt64.lid FROM vt64 GROUP BY vt64.c0, vt64.lid;
SELECT vt64.c0, vt64.lid FROM vt64 WHERE ((((vt64.c0)) NOT BETWEEN ((vt64.lid COLLATE RTRIM)) AND ((((vt64.c0) BETWEEN (vt64.c0) AND ('\rF䝚')))))) GROUP BY vt64.c0, vt64.lid UNION SELECT ALL vt64.c0, vt64.lid FROM vt64 WHERE ((NOT ((((vt64.c0)) NOT BETWEEN ((vt64.lid COLLATE RTRIM)) AND ((((vt64.c0) BETWEEN (vt64.c0) AND ('\rF䝚')))))))) GROUP BY vt64.c0, vt64.lid UNION SELECT vt64.c0, vt64.lid FROM vt64 WHERE ((((((vt64.c0)) NOT BETWEEN ((vt64.lid COLLATE RTRIM)) AND ((((vt64.c0) BETWEEN (vt64.c0) AND ('\rF䝚')))))) ISNULL)) GROUP BY vt64.c0, vt64.lid;
SELECT ALL vt64.c0, vt64.lid FROM vt64 GROUP BY vt64.c0, vt64.lid;
SELECT ALL rt1.c1, rt1.c2, rt1.c6, rt1.c3, rt1.c4, vt64.c0, rt1.c0, rt1.c5 FROM vt64 RIGHT OUTER JOIN rt1 ON NULLIF(((rt1.c4)-(rt1.c2)), rt1.c1 COLLATE RTRIM) GROUP BY rt1.c1, rt1.c2, rt1.c6, rt1.c3, rt1.c4, vt64.c0, rt1.c0, rt1.c5;
SELECT ALL rt1.c1, rt1.c2, rt1.c6, rt1.c3, rt1.c4, vt64.c0, rt1.c0, rt1.c5 FROM vt64 RIGHT OUTER JOIN rt1 ON NULLIF(((rt1.c4)-(rt1.c2)), rt1.c1 COLLATE RTRIM) GROUP BY rt1.c1, rt1.c2, rt1.c6, rt1.c3, rt1.c4, vt64.c0, rt1.c0, rt1.c5 HAVING ((CASE AVG(AVG(rt1.c5))  WHEN COUNT(*) THEN vt64.c0 WHEN COUNT(SUM(vt64.c0)) THEN GROUP_CONCAT(COUNT(vt64.lid)) WHEN COUNT(*) THEN rt1.c0 ELSE vt64.c0 END) IS FALSE) UNION ALL SELECT ALL rt1.c1, rt1.c2, rt1.c6, rt1.c3, rt1.c4, vt64.c0, rt1.c0, rt1.c5 FROM vt64 RIGHT OUTER JOIN rt1 ON NULLIF(((rt1.c4)-(rt1.c2)), rt1.c1 COLLATE RTRIM) GROUP BY rt1.c1, rt1.c2, rt1.c6, rt1.c3, rt1.c4, vt64.c0, rt1.c0, rt1.c5 HAVING (NOT (((CASE AVG(AVG(rt1.c5))  WHEN COUNT(*) THEN vt64.c0 WHEN COUNT(SUM(vt64.c0)) THEN GROUP_CONCAT(COUNT(vt64.lid)) WHEN COUNT(*) THEN rt1.c0 ELSE vt64.c0 END) IS FALSE))) UNION ALL SELECT rt1.c1, rt1.c2, rt1.c6, rt1.c3, rt1.c4, vt64.c0, rt1.c0, rt1.c5 FROM vt64 RIGHT OUTER JOIN rt1 ON NULLIF(((rt1.c4)-(rt1.c2)), rt1.c1 COLLATE RTRIM) GROUP BY rt1.c1, rt1.c2, rt1.c6, rt1.c3, rt1.c4, vt64.c0, rt1.c0, rt1.c5 HAVING ((((CASE AVG(AVG(rt1.c5))  WHEN COUNT(*) THEN vt64.c0 WHEN COUNT(SUM(vt64.c0)) THEN GROUP_CONCAT(COUNT(vt64.lid)) WHEN COUNT(*) THEN rt1.c0 ELSE vt64.c0 END) IS FALSE)) ISNULL);
SELECT ALL rt1.c0, rt1.c1, vt64.c0, rt1.c4, vt64.lid FROM rt1, vt64;
SELECT rt1.c0, rt1.c1, vt64.c0, rt1.c4, vt64.lid FROM rt1, vt64 WHERE (((((rt1.c2)+(rt1.c2)))!=(((rt1.c5)>>(rt1.c4))))) UNION ALL SELECT ALL rt1.c0, rt1.c1, vt64.c0, rt1.c4, vt64.lid FROM rt1, vt64 WHERE ((NOT (((((rt1.c2)+(rt1.c2)))<>(((rt1.c5)>>(rt1.c4))))))) UNION ALL SELECT rt1.c0, rt1.c1, vt64.c0, rt1.c4, vt64.lid FROM rt1, vt64 WHERE (((((((rt1.c2)+(rt1.c2)))<>(((rt1.c5)>>(rt1.c4))))) ISNULL));
SELECT ALL rt1.c0, rt1.c1, vt64.c0, rt1.c4, vt64.lid FROM rt1, vt64;
SELECT DISTINCT * FROM vt64;
SELECT DISTINCT * FROM vt64 WHERE ((((x'') ISNULL) IN ())) UNION SELECT DISTINCT * FROM vt64 WHERE ((NOT ((((x'') ISNULL) IN ())))) UNION SELECT DISTINCT * FROM vt64 WHERE ((((((x'') ISNULL) IN ())) ISNULL));
SELECT DISTINCT * FROM vt64;
SELECT rt1.c5, rt1.c6, rt1.c1, vt64.c0, vt64.lid, rt1.c3, rt1.c0, rt1.c4 FROM vt64, rt1 GROUP BY rt1.c5, rt1.c6, rt1.c1, vt64.c0, vt64.lid, rt1.c3, rt1.c0, rt1.c4;
SELECT ALL rt1.c5, rt1.c6, rt1.c1, vt64.c0, vt64.lid, rt1.c3, rt1.c0, rt1.c4 FROM vt64, rt1 WHERE ((((((rt1.c1) BETWEEN (rt1.c6) AND (vt64.lid))))<=((rt1.c3 COLLATE BINARY)))) GROUP BY rt1.c5, rt1.c6, rt1.c1, vt64.c0, vt64.lid, rt1.c3, rt1.c0, rt1.c4 UNION SELECT rt1.c5, rt1.c6, rt1.c1, vt64.c0, vt64.lid, rt1.c3, rt1.c0, rt1.c4 FROM vt64, rt1 WHERE ((NOT ((((((rt1.c1) BETWEEN (rt1.c6) AND (vt64.lid))))<=((rt1.c3 COLLATE BINARY)))))) GROUP BY rt1.c5, rt1.c6, rt1.c1, vt64.c0, vt64.lid, rt1.c3, rt1.c0, rt1.c4 UNION SELECT rt1.c5, rt1.c6, rt1.c1, vt64.c0, vt64.lid, rt1.c3, rt1.c0, rt1.c4 FROM vt64, rt1 WHERE ((((((((rt1.c1) BETWEEN (rt1.c6) AND (vt64.lid))))<=((rt1.c3 COLLATE BINARY)))) ISNULL)) GROUP BY rt1.c5, rt1.c6, rt1.c1, vt64.c0, vt64.lid, rt1.c3, rt1.c0, rt1.c4;
SELECT rt1.c5, rt1.c6, rt1.c1, vt64.c0, vt64.lid, rt1.c3, rt1.c0, rt1.c4 FROM vt64, rt1 GROUP BY rt1.c5, rt1.c6, rt1.c1, vt64.c0, vt64.lid, rt1.c3, rt1.c0, rt1.c4;
SELECT ALL rt1.c0, rt1.c1 FROM rt1, vt64 GROUP BY rt1.c0, rt1.c1;
SELECT rt1.c0, rt1.c1 FROM rt1, vt64 GROUP BY rt1.c0, rt1.c1 HAVING MAX(SUM(COUNT(*))) UNION ALL SELECT ALL rt1.c0, rt1.c1 FROM rt1, vt64 GROUP BY rt1.c0, rt1.c1 HAVING (NOT (MAX(SUM(COUNT(*))))) UNION ALL SELECT rt1.c0, rt1.c1 FROM rt1, vt64 GROUP BY rt1.c0, rt1.c1 HAVING ((MAX(SUM(COUNT(*)))) ISNULL);
SELECT ALL * FROM vt64, rt1;
SELECT ALL * FROM vt64, rt1 NOT INDEXED WHERE ((((rt1.c5)) NOT BETWEEN ((((rt1.c1) IS FALSE))) AND ((rt1.c6 COLLATE NOCASE)))) UNION ALL SELECT * FROM vt64, rt1 WHERE ((NOT ((((rt1.c5)) NOT BETWEEN ((((rt1.c1) IS FALSE))) AND ((rt1.c6 COLLATE NOCASE)))))) UNION ALL SELECT * FROM vt64, rt1 WHERE ((((((rt1.c5)) NOT BETWEEN ((((rt1.c1) IS FALSE))) AND ((rt1.c6 COLLATE NOCASE)))) ISNULL));
SELECT ALL * FROM vt64, rt1;
SELECT DISTINCT * FROM vt64, rt1;
SELECT DISTINCT * FROM vt64, rt1 WHERE (TRIM(TYPEOF(DISTINCT rt1.c2))) UNION SELECT DISTINCT * FROM vt64, rt1 WHERE ((NOT (TRIM(TYPEOF(DISTINCT rt1.c2))))) UNION SELECT DISTINCT * FROM vt64, rt1 WHERE (((TRIM(TYPEOF(DISTINCT rt1.c2))) ISNULL));
SELECT DISTINCT * FROM vt64, rt1;
SELECT vt64.c0, vt64.lid FROM vt64 GROUP BY vt64.c0, vt64.lid;
SELECT ALL vt64.c0, vt64.lid FROM vt64 WHERE (((vt64.c0 IN ()) IN ((((vt64.c0))!=((vt64.c0)))))) GROUP BY vt64.c0, vt64.lid UNION SELECT ALL vt64.c0, vt64.lid FROM vt64 WHERE ((NOT (((vt64.c0 IN ()) IN ((((vt64.c0))!=((vt64.c0)))))))) GROUP BY vt64.c0, vt64.lid UNION SELECT ALL vt64.c0, vt64.lid FROM vt64 WHERE (((((vt64.c0 IN ()) IN ((((vt64.c0))!=((vt64.c0)))))) ISNULL)) GROUP BY vt64.c0, vt64.lid;
SELECT vt64.c0, vt64.lid FROM vt64 GROUP BY vt64.c0, vt64.lid;
SELECT rt1.c1, rt1.c6 FROM rt1 GROUP BY rt1.c1, rt1.c6;
SELECT rt1.c1, rt1.c6 FROM rt1 GROUP BY rt1.c1, rt1.c6 HAVING GROUP_CONCAT(TOTAL(x'')) UNION ALL SELECT ALL rt1.c1, rt1.c6 FROM rt1 GROUP BY rt1.c1, rt1.c6 HAVING (NOT (GROUP_CONCAT(TOTAL(x'')))) UNION ALL SELECT rt1.c1, rt1.c6 FROM rt1 GROUP BY rt1.c1, rt1.c6 HAVING ((GROUP_CONCAT(TOTAL(x''))) ISNULL);
SELECT ALL rt1.c0, vt64.lid, rt1.c3, rt1.c1, rt1.c4 FROM vt64, rt1;
SELECT ALL rt1.c0, vt64.lid, rt1.c3, rt1.c1, rt1.c4 FROM vt64, rt1 WHERE (CAST(('1754992779' IN ()) AS REAL)) UNION ALL SELECT rt1.c0, vt64.lid, rt1.c3, rt1.c1, rt1.c4 FROM vt64, rt1 WHERE ((NOT (CAST(('1754992779' IN ()) AS REAL)))) UNION ALL SELECT rt1.c0, vt64.lid, rt1.c3, rt1.c1, rt1.c4 FROM vt64, rt1 WHERE (((CAST(('1754992779' IN ()) AS REAL)) ISNULL));
SELECT ALL rt1.c0, vt64.lid, rt1.c3, rt1.c1, rt1.c4 FROM vt64, rt1;
SELECT DISTINCT vt64.c0, rt1.c6, vt64.lid, rt1.c2 FROM vt64, rt1;
SELECT DISTINCT vt64.c0, rt1.c6, vt64.lid, rt1.c2 FROM vt64, rt1 WHERE ((((((rt1.c2, rt1.c1, vt64.lid)) NOT BETWEEN ((rt1.c4, rt1.c6, rt1.c0)) AND ((rt1.c5, rt1.c5, rt1.c2))))>(((rt1.c6) NOT BETWEEN (rt1.c4) AND (rt1.c6))))) UNION SELECT DISTINCT vt64.c0, rt1.c6, vt64.lid, rt1.c2 FROM vt64, rt1 WHERE ((NOT ((((((rt1.c2, rt1.c1, vt64.lid)) NOT BETWEEN ((rt1.c4, rt1.c6, rt1.c0)) AND ((rt1.c5, rt1.c5, rt1.c2))))>(((rt1.c6) NOT BETWEEN (rt1.c4) AND (rt1.c6))))))) UNION SELECT DISTINCT vt64.c0, rt1.c6, vt64.lid, rt1.c2 FROM vt64, rt1 WHERE ((((((((rt1.c2, rt1.c1, vt64.lid)) NOT BETWEEN ((rt1.c4, rt1.c6, rt1.c0)) AND ((rt1.c5, rt1.c5, rt1.c2))))>(((rt1.c6) NOT BETWEEN (rt1.c4) AND (rt1.c6))))) ISNULL));
SELECT DISTINCT vt64.c0, rt1.c6, vt64.lid, rt1.c2 FROM vt64, rt1;
SELECT vt64.lid, vt64.c0 FROM vt64 GROUP BY vt64.lid, vt64.c0;
SELECT ALL vt64.lid, vt64.c0 FROM vt64 WHERE ((((vt64.lid)) NOT BETWEEN ((((vt64.c0) IS TRUE))) AND (((x'0398f0a6' IN ()))))) GROUP BY vt64.lid, vt64.c0 UNION SELECT vt64.lid, vt64.c0 FROM vt64 WHERE ((NOT ((((vt64.lid)) NOT BETWEEN ((((vt64.c0) IS TRUE))) AND (((x'0398f0a6' IN ()))))))) GROUP BY vt64.lid, vt64.c0 UNION SELECT ALL vt64.lid, vt64.c0 FROM vt64 WHERE ((((((vt64.lid)) NOT BETWEEN ((((vt64.c0) IS TRUE))) AND (((x'0398f0a6' IN ()))))) ISNULL)) GROUP BY vt64.lid, vt64.c0;
SELECT vt64.lid, vt64.c0 FROM vt64 GROUP BY vt64.lid, vt64.c0;
SELECT ALL rt1.c0, rt1.c3, rt1.c1, rt1.c4 FROM rt1 RIGHT OUTER JOIN vt64 ON CAST(((vt64.lid)>=(rt1.c6)) AS TEXT) GROUP BY rt1.c0, rt1.c3, rt1.c1, rt1.c4;
SELECT rt1.c0, rt1.c3, rt1.c1, rt1.c4 FROM rt1 RIGHT OUTER JOIN vt64 ON CAST(((vt64.lid)>=(rt1.c6)) AS TEXT) GROUP BY rt1.c0, rt1.c3, rt1.c1, rt1.c4 HAVING ((COUNT(*)) NOT BETWEEN ((+ (GROUP_CONCAT(COUNT(*))))) AND (TOTAL(rt1.c4))) UNION ALL SELECT rt1.c0, rt1.c3, rt1.c1, rt1.c4 FROM rt1 RIGHT OUTER JOIN vt64 ON CAST(((vt64.lid)>=(rt1.c6)) AS TEXT) GROUP BY rt1.c0, rt1.c3, rt1.c1, rt1.c4 HAVING (NOT (((COUNT(*)) NOT BETWEEN ((+ (GROUP_CONCAT(COUNT(*))))) AND (TOTAL(rt1.c4))))) UNION ALL SELECT ALL rt1.c0, rt1.c3, rt1.c1, rt1.c4 FROM rt1 RIGHT OUTER JOIN vt64 ON CAST(((vt64.lid)>=(rt1.c6)) AS TEXT) GROUP BY rt1.c0, rt1.c3, rt1.c1, rt1.c4 HAVING ((((COUNT(*)) NOT BETWEEN ((+ (GROUP_CONCAT(COUNT(*))))) AND (TOTAL(rt1.c4)))) ISNULL);
SELECT ALL * FROM vt64 NOT INDEXED LEFT OUTER JOIN rt1 ON ((((vt64.lid)LIKE(rt1.c6)))LIKE(0x6b4bba1));
SELECT * FROM vt64 LEFT OUTER JOIN rt1 ON ((((vt64.lid)LIKE(rt1.c6)))LIKE(0X6b4bba1)) WHERE (NULL) UNION ALL SELECT ALL * FROM vt64 LEFT OUTER JOIN rt1 ON ((((vt64.lid)LIKE(rt1.c6)))LIKE(0x6b4bba1)) WHERE ((NOT (NULL))) UNION ALL SELECT * FROM vt64 LEFT OUTER JOIN rt1 ON ((((vt64.lid)LIKE(rt1.c6)))LIKE(0x6b4bba1)) WHERE (((NULL) ISNULL));
SELECT ALL * FROM vt64 NOT INDEXED LEFT OUTER JOIN rt1 ON ((((vt64.lid)LIKE(rt1.c6)))LIKE(0x6b4bba1));
SELECT DISTINCT vt64.c0, vt64.lid FROM vt64;
SELECT DISTINCT vt64.c0, vt64.lid FROM vt64 WHERE (LIKELY(DISTINCT ((vt64.c0) ISNULL))) UNION SELECT DISTINCT vt64.c0, vt64.lid FROM vt64 WHERE ((NOT (LIKELY(DISTINCT ((vt64.c0) ISNULL))))) UNION SELECT DISTINCT vt64.c0, vt64.lid FROM vt64 WHERE (((LIKELY(DISTINCT ((vt64.c0) ISNULL))) ISNULL));
SELECT DISTINCT vt64.c0, vt64.lid FROM vt64;
SELECT rt1.c0, rt1.c2 FROM vt64 LEFT OUTER JOIN rt1 ON ((CASE rt1.c3  WHEN rt1.c6 THEN rt1.c5 ELSE rt1.c2 END) BETWEEN (((rt1.c2) ISNULL)) AND (((rt1.c1)/(rt1.c3)))) GROUP BY rt1.c0, rt1.c2;
SELECT ALL rt1.c0, rt1.c2 FROM vt64 LEFT OUTER JOIN rt1 ON ((CASE rt1.c3  WHEN rt1.c6 THEN rt1.c5 ELSE rt1.c2 END) BETWEEN (((rt1.c2) ISNULL)) AND (((rt1.c1)/(rt1.c3)))) WHERE (rt1.c0) GROUP BY rt1.c0, rt1.c2 UNION SELECT ALL rt1.c0, rt1.c2 FROM vt64 LEFT OUTER JOIN rt1 ON ((CASE rt1.c3  WHEN rt1.c6 THEN rt1.c5 ELSE rt1.c2 END) BETWEEN (((rt1.c2) ISNULL)) AND (((rt1.c1)/(rt1.c3)))) WHERE ((NOT (rt1.c0))) GROUP BY rt1.c0, rt1.c2 UNION SELECT rt1.c0, rt1.c2 FROM vt64 LEFT OUTER JOIN rt1 ON ((CASE rt1.c3  WHEN rt1.c6 THEN rt1.c5 ELSE rt1.c2 END) BETWEEN (((rt1.c2) ISNULL)) AND (((rt1.c1)/(rt1.c3)))) WHERE (((rt1.c0) ISNULL)) GROUP BY rt1.c0, rt1.c2;
SELECT rt1.c0, rt1.c2 FROM vt64 LEFT OUTER JOIN rt1 ON ((CASE rt1.c3  WHEN rt1.c6 THEN rt1.c5 ELSE rt1.c2 END) BETWEEN (((rt1.c2) ISNULL)) AND (((rt1.c1)/(rt1.c3)))) GROUP BY rt1.c0, rt1.c2;
SELECT ALL rt1.c4, rt1.c0, rt1.c3, rt1.c1, vt64.lid, rt1.c2, rt1.c5 FROM rt1, vt64 GROUP BY rt1.c4, rt1.c0, rt1.c3, rt1.c1, vt64.lid, rt1.c2, rt1.c5;
SELECT ALL rt1.c4, rt1.c0, rt1.c3, rt1.c1, vt64.lid, rt1.c2, rt1.c5 FROM rt1, vt64 GROUP BY rt1.c4, rt1.c0, rt1.c3, rt1.c1, vt64.lid, rt1.c2, rt1.c5 HAVING GROUP_CONCAT(COUNT(vt64.c0)) UNION ALL SELECT ALL rt1.c4, rt1.c0, rt1.c3, rt1.c1, vt64.lid, rt1.c2, rt1.c5 FROM rt1, vt64 GROUP BY rt1.c4, rt1.c0, rt1.c3, rt1.c1, vt64.lid, rt1.c2, rt1.c5 HAVING (NOT (GROUP_CONCAT(COUNT(vt64.c0)))) UNION ALL SELECT ALL rt1.c4, rt1.c0, rt1.c3, rt1.c1, vt64.lid, rt1.c2, rt1.c5 FROM rt1, vt64 GROUP BY rt1.c4, rt1.c0, rt1.c3, rt1.c1, vt64.lid, rt1.c2, rt1.c5 HAVING ((GROUP_CONCAT(COUNT(vt64.c0))) ISNULL);
SELECT * FROM vt64, rt1;
SELECT ALL * FROM vt64, rt1 WHERE (0.563651592275337) UNION ALL SELECT * FROM vt64, rt1 WHERE ((NOT (0.563651592275337))) UNION ALL SELECT ALL * FROM vt64, rt1 WHERE (((0.563651592275337) ISNULL));
SELECT * FROM vt64, rt1;
SELECT DISTINCT * FROM rt1, vt64;
SELECT DISTINCT * FROM rt1, vt64 WHERE ((((rt1.c1, rt1.c2, vt64.c0)) NOT BETWEEN ((vt64.c0, CAST(0.7077605328014537 AS NUMERIC), CASE vt64.lid  WHEN rt1.c4 THEN rt1.c4 ELSE rt1.c1 END)) AND ((CASE WHEN vt64.c0 THEN vt64.c0 ELSE NULL END, ((((x'86f4')AND(rt1.c3)))OR(rt1.c0)), ((rt1.c5)IS NOT(rt1.c5)))))) UNION SELECT DISTINCT * FROM rt1, vt64 WHERE ((NOT ((((rt1.c1, rt1.c2, vt64.c0)) NOT BETWEEN ((vt64.c0, CAST(0.7077605328014537 AS NUMERIC), CASE vt64.lid  WHEN rt1.c4 THEN rt1.c4 ELSE rt1.c1 END)) AND ((CASE WHEN vt64.c0 THEN vt64.c0 ELSE NULL END, ((((x'86f4')AND(rt1.c3)))OR(rt1.c0)), ((rt1.c5)IS NOT(rt1.c5)))))))) UNION SELECT DISTINCT * FROM rt1, vt64 WHERE ((((((rt1.c1, rt1.c2, vt64.c0)) NOT BETWEEN ((vt64.c0, CAST(0.7077605328014537 AS NUMERIC), CASE vt64.lid  WHEN rt1.c4 THEN rt1.c4 ELSE rt1.c1 END)) AND ((CASE WHEN vt64.c0 THEN vt64.c0 ELSE NULL END, ((((x'86f4')AND(rt1.c3)))OR(rt1.c0)), ((rt1.c5)IS NOT(rt1.c5)))))) ISNULL));
SELECT DISTINCT * FROM rt1, vt64;
SELECT ALL vt64.c0 FROM vt64 NOT INDEXED GROUP BY vt64.c0;
SELECT ALL vt64.c0 FROM vt64 WHERE ('') GROUP BY vt64.c0 UNION SELECT vt64.c0 FROM vt64 WHERE ((NOT (''))) GROUP BY vt64.c0 UNION SELECT vt64.c0 FROM vt64 WHERE ((('') ISNULL)) GROUP BY vt64.c0;
SELECT ALL vt64.c0 FROM vt64 NOT INDEXED GROUP BY vt64.c0;
SELECT vt64.lid, rt1.c6, rt1.c4, rt1.c1, rt1.c3, rt1.c0, rt1.c5, vt64.c0, rt1.c2 FROM rt1 NATURAL JOIN vt64 GROUP BY vt64.lid, rt1.c6, rt1.c4, rt1.c1, rt1.c3, rt1.c0, rt1.c5, vt64.c0, rt1.c2;
SELECT vt64.lid, rt1.c6, rt1.c4, rt1.c1, rt1.c3, rt1.c0, rt1.c5, vt64.c0, rt1.c2 FROM rt1 NATURAL JOIN vt64 GROUP BY vt64.lid, rt1.c6, rt1.c4, rt1.c1, rt1.c3, rt1.c0, rt1.c5, vt64.c0, rt1.c2 HAVING AVG((vt64.lid IN ())) UNION ALL SELECT vt64.lid, rt1.c6, rt1.c4, rt1.c1, rt1.c3, rt1.c0, rt1.c5, vt64.c0, rt1.c2 FROM rt1 NATURAL JOIN vt64 GROUP BY vt64.lid, rt1.c6, rt1.c4, rt1.c1, rt1.c3, rt1.c0, rt1.c5, vt64.c0, rt1.c2 HAVING (NOT (AVG((vt64.lid IN ())))) UNION ALL SELECT ALL vt64.lid, rt1.c6, rt1.c4, rt1.c1, rt1.c3, rt1.c0, rt1.c5, vt64.c0, rt1.c2 FROM rt1 NATURAL JOIN vt64 GROUP BY vt64.lid, rt1.c6, rt1.c4, rt1.c1, rt1.c3, rt1.c0, rt1.c5, vt64.c0, rt1.c2 HAVING ((AVG((vt64.lid IN ()))) ISNULL);
SELECT vt64.lid, rt1.c6, rt1.c4, rt1.c1, rt1.c3, rt1.c0, rt1.c5, vt64.c0, rt1.c2 FROM rt1 NATURAL JOIN vt64 GROUP BY vt64.lid, rt1.c6, rt1.c4, rt1.c1, rt1.c3, rt1.c0, rt1.c5, vt64.c0, rt1.c2;
SELECT vt64.lid, rt1.c6, rt1.c4, rt1.c1, rt1.c3, rt1.c0, rt1.c5, vt64.c0, rt1.c2 FROM rt1 NATURAL JOIN vt64 GROUP BY vt64.lid, rt1.c6, rt1.c4, rt1.c1, rt1.c3, rt1.c0, rt1.c5, vt64.c0, rt1.c2 HAVING AVG((vt64.lid IN ())) UNION ALL SELECT vt64.lid, rt1.c6, rt1.c4, rt1.c1, rt1.c3, rt1.c0, rt1.c5, vt64.c0, rt1.c2 FROM rt1 NATURAL JOIN vt64 GROUP BY vt64.lid, rt1.c6, rt1.c4, rt1.c1, rt1.c3, rt1.c0, rt1.c5, vt64.c0, rt1.c2 HAVING (NOT (AVG((vt64.lid IN ())))) UNION ALL SELECT ALL vt64.lid, rt1.c6, rt1.c4, rt1.c1, rt1.c3, rt1.c0, rt1.c5, vt64.c0, rt1.c2 FROM rt1 NATURAL JOIN vt64 GROUP BY vt64.lid, rt1.c6, rt1.c4, rt1.c1, rt1.c3, rt1.c0, rt1.c5, vt64.c0, rt1.c2 HAVING ((AVG((vt64.lid IN ()))) ISNULL);
SELECT vt64.lid, rt1.c6, rt1.c4, rt1.c1, rt1.c3, rt1.c0, rt1.c5, vt64.c0, rt1.c2 FROM rt1 NATURAL JOIN vt64 GROUP BY vt64.lid, rt1.c6, rt1.c4, rt1.c1, rt1.c3, rt1.c0, rt1.c5, vt64.c0, rt1.c2;
SELECT * FROM vt64;
SELECT * FROM vt64 WHERE (((((vt64.c0)|(vt64.lid))) NOT BETWEEN (CAST(vt64.c0 AS TEXT)) AND ('l'))) UNION ALL SELECT ALL * FROM vt64 WHERE ((NOT (((((vt64.c0)|(vt64.lid))) NOT BETWEEN (CAST(vt64.c0 AS TEXT)) AND ('l'))))) UNION ALL SELECT * FROM vt64 WHERE (((((((vt64.c0)|(vt64.lid))) NOT BETWEEN (CAST(vt64.c0 AS TEXT)) AND ('l'))) ISNULL));
SELECT * FROM vt64;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (rt1.c5) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (rt1.c5))) UNION SELECT DISTINCT * FROM rt1 WHERE (((rt1.c5) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL rt1.c2, rt1.c4, vt64.c0, rt1.c3, rt1.c0 FROM rt1 NATURAL JOIN vt64 GROUP BY rt1.c2, rt1.c4, vt64.c0, rt1.c3, rt1.c0;
SELECT ALL rt1.c2, rt1.c4, vt64.c0, rt1.c3, rt1.c0 FROM rt1 NATURAL JOIN vt64 WHERE (((LOWER(DISTINCT rt1.c1)) NOT NULL)) GROUP BY rt1.c2, rt1.c4, vt64.c0, rt1.c3, rt1.c0 UNION SELECT rt1.c2, rt1.c4, vt64.c0, rt1.c3, rt1.c0 FROM rt1 NATURAL JOIN vt64 WHERE ((NOT (((LOWER(DISTINCT rt1.c1)) NOT NULL)))) GROUP BY rt1.c2, rt1.c4, vt64.c0, rt1.c3, rt1.c0 UNION SELECT ALL rt1.c2, rt1.c4, vt64.c0, rt1.c3, rt1.c0 FROM rt1 NATURAL JOIN vt64 WHERE (((((LOWER(DISTINCT rt1.c1)) NOT NULL)) ISNULL)) GROUP BY rt1.c2, rt1.c4, vt64.c0, rt1.c3, rt1.c0;
SELECT ALL rt1.c2, rt1.c4, vt64.c0, rt1.c3, rt1.c0 FROM rt1 NATURAL JOIN vt64 GROUP BY rt1.c2, rt1.c4, vt64.c0, rt1.c3, rt1.c0;
SELECT ALL rt1.c5 FROM rt1 GROUP BY rt1.c5;
SELECT rt1.c5 FROM rt1 GROUP BY rt1.c5 HAVING SUM(((rt1.c5)<>(rt1.c1))) UNION ALL SELECT rt1.c5 FROM rt1 GROUP BY rt1.c5 HAVING (NOT (SUM(((rt1.c5)!=(rt1.c1))))) UNION ALL SELECT rt1.c5 FROM rt1 GROUP BY rt1.c5 HAVING ((SUM(((rt1.c5)!=(rt1.c1)))) ISNULL);
SELECT ALL rt1.c5 FROM rt1 GROUP BY rt1.c5;
SELECT rt1.c5 FROM rt1 GROUP BY rt1.c5 HAVING SUM(((rt1.c5)<>(rt1.c1))) UNION ALL SELECT rt1.c5 FROM rt1 GROUP BY rt1.c5 HAVING (NOT (SUM(((rt1.c5)!=(rt1.c1))))) UNION ALL SELECT rt1.c5 FROM rt1 GROUP BY rt1.c5 HAVING ((SUM(((rt1.c5)!=(rt1.c1)))) ISNULL);
SELECT ALL rt1.c5 FROM rt1 GROUP BY rt1.c5;
SELECT rt1.c5 FROM vt64 NATURAL JOIN rt1;
SELECT rt1.c5 FROM vt64 NATURAL JOIN rt1 WHERE (CASE WHEN NULL THEN NULL WHEN ((rt1.c1) IS FALSE) THEN ((rt1.c3)LIKE(vt64.lid)) WHEN (NOT (NULL)) THEN ((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c0)) ELSE CAST(rt1.c0 AS NUMERIC) END) UNION ALL SELECT ALL rt1.c5 FROM vt64 NATURAL JOIN rt1 WHERE ((NOT (CASE WHEN NULL THEN NULL WHEN ((rt1.c1) IS FALSE) THEN ((rt1.c3)LIKE(vt64.lid)) WHEN (NOT (NULL)) THEN ((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c0)) ELSE CAST(rt1.c0 AS NUMERIC) END))) UNION ALL SELECT ALL rt1.c5 FROM vt64 NATURAL JOIN rt1 WHERE (((CASE WHEN NULL THEN NULL WHEN ((rt1.c1) IS FALSE) THEN ((rt1.c3)LIKE(vt64.lid)) WHEN (NOT (NULL)) THEN ((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c0)) ELSE CAST(rt1.c0 AS NUMERIC) END) ISNULL));
SELECT rt1.c5 FROM vt64 NATURAL JOIN rt1;
SELECT DISTINCT rt1.c6, rt1.c2, rt1.c3, vt64.lid FROM rt1, vt64;
SELECT DISTINCT rt1.c6, rt1.c2, rt1.c3, vt64.lid FROM rt1, vt64 WHERE (((((vt64.lid)AND(rt1.c5)))OR(rt1.c3)) COLLATE NOCASE) UNION SELECT DISTINCT rt1.c6, rt1.c2, rt1.c3, vt64.lid FROM rt1, vt64 WHERE ((NOT (((((vt64.lid)AND(rt1.c5)))OR(rt1.c3)) COLLATE NOCASE))) UNION SELECT DISTINCT rt1.c6, rt1.c2, rt1.c3, vt64.lid FROM rt1, vt64 WHERE (((((((vt64.lid)AND(rt1.c5)))OR(rt1.c3)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT rt1.c6, rt1.c2, rt1.c3, vt64.lid FROM rt1, vt64;
SELECT rt1.c5 FROM rt1 GROUP BY rt1.c5;
SELECT ALL rt1.c5 FROM rt1 WHERE (CASE ((((((((rt1.c3)OR(rt1.c2)))OR(rt1.c0)))OR(rt1.c2)))OR(rt1.c4))  WHEN rt1.c2 THEN CAST(rt1.c6 AS NUMERIC) ELSE ((((rt1.c6)AND(rt1.c4)))OR(rt1.c0)) END) GROUP BY rt1.c5 UNION SELECT rt1.c5 FROM rt1 WHERE ((NOT (CASE ((((((((rt1.c3)OR(rt1.c2)))OR(rt1.c0)))OR(rt1.c2)))OR(rt1.c4))  WHEN rt1.c2 THEN CAST(rt1.c6 AS NUMERIC) ELSE ((((rt1.c6)AND(rt1.c4)))OR(rt1.c0)) END))) GROUP BY rt1.c5 UNION SELECT ALL rt1.c5 FROM rt1 WHERE (((CASE ((((((((rt1.c3)OR(rt1.c2)))OR(rt1.c0)))OR(rt1.c2)))OR(rt1.c4))  WHEN rt1.c2 THEN CAST(rt1.c6 AS NUMERIC) ELSE ((((rt1.c6)AND(rt1.c4)))OR(rt1.c0)) END) ISNULL)) GROUP BY rt1.c5;
SELECT rt1.c5 FROM rt1 GROUP BY rt1.c5;
SELECT ALL vt64.c0, rt1.c6 FROM vt64, rt1 GROUP BY vt64.c0, rt1.c6;
SELECT vt64.c0, rt1.c6 FROM vt64, rt1 GROUP BY vt64.c0, rt1.c6 HAVING DATETIME((vt64.lid IN ()), ((rt1.c0) NOT BETWEEN (GROUP_CONCAT(rt1.c1)) AND (COUNT(*))), ((rt1.c0) NOTNULL), MIN(rt1.c0), ((vt64.lid) NOT BETWEEN (rt1.c6) AND (COUNT(SUM(MAX(rt1.c1)))))) UNION ALL SELECT vt64.c0, rt1.c6 FROM vt64, rt1 GROUP BY vt64.c0, rt1.c6 HAVING (NOT (DATETIME((vt64.lid IN ()), ((rt1.c0) NOT BETWEEN (GROUP_CONCAT(rt1.c1)) AND (COUNT(*))), ((rt1.c0) NOTNULL), MIN(rt1.c0), ((vt64.lid) NOT BETWEEN (rt1.c6) AND (COUNT(SUM(MAX(rt1.c1)))))))) UNION ALL SELECT vt64.c0, rt1.c6 FROM vt64, rt1 GROUP BY vt64.c0, rt1.c6 HAVING ((DATETIME((vt64.lid IN ()), ((rt1.c0) NOT BETWEEN (GROUP_CONCAT(rt1.c1)) AND (COUNT(*))), ((rt1.c0) NOTNULL), MIN(rt1.c0), ((vt64.lid) NOT BETWEEN (rt1.c6) AND (COUNT(SUM(MAX(rt1.c1))))))) ISNULL);
SELECT ALL rt1.c5, rt1.c3, vt64.lid, rt1.c0, vt64.c0, rt1.c6 FROM vt64, rt1;
SELECT ALL rt1.c5, rt1.c3, vt64.lid, rt1.c0, vt64.c0, rt1.c6 FROM vt64, rt1 WHERE (IFNULL(((rt1.c6) IS TRUE), (NOT (rt1.c0)))) UNION ALL SELECT ALL rt1.c5, rt1.c3, vt64.lid, rt1.c0, vt64.c0, rt1.c6 FROM vt64, rt1 WHERE ((NOT (IFNULL(((rt1.c6) IS TRUE), (NOT (rt1.c0)))))) UNION ALL SELECT ALL rt1.c5, rt1.c3, vt64.lid, rt1.c0, vt64.c0, rt1.c6 FROM vt64, rt1 WHERE (((IFNULL(((rt1.c6) IS TRUE), (NOT (rt1.c0)))) ISNULL));
SELECT ALL rt1.c5, rt1.c3, vt64.lid, rt1.c0, vt64.c0, rt1.c6 FROM vt64, rt1;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (CASE ((rt1.c6)||(rt1.c3))  WHEN (- (rt1.c0)) THEN NULL WHEN ((rt1.c4) ISNULL) THEN rt1.c2 WHEN (((rt1.c0))<>((rt1.c4))) THEN (NULL IN ()) END) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (CASE ((rt1.c6)||(rt1.c3))  WHEN (- (rt1.c0)) THEN NULL WHEN ((rt1.c4) ISNULL) THEN rt1.c2 WHEN (((rt1.c0))!=((rt1.c4))) THEN (NULL IN ()) END))) UNION SELECT DISTINCT * FROM rt1 WHERE (((CASE ((rt1.c6)||(rt1.c3))  WHEN (- (rt1.c0)) THEN NULL WHEN ((rt1.c4) ISNULL) THEN rt1.c2 WHEN (((rt1.c0))!=((rt1.c4))) THEN (NULL IN ()) END) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL vt64.lid, vt64.c0 FROM vt64 GROUP BY vt64.lid, vt64.c0;
SELECT vt64.lid, vt64.c0 FROM vt64 WHERE (vt64.c0) GROUP BY vt64.lid, vt64.c0 UNION SELECT ALL vt64.lid, vt64.c0 FROM vt64 WHERE ((NOT (vt64.c0))) GROUP BY vt64.lid, vt64.c0 UNION SELECT vt64.lid, vt64.c0 FROM vt64 WHERE (((vt64.c0) ISNULL)) GROUP BY vt64.lid, vt64.c0;
SELECT ALL vt64.lid, vt64.c0 FROM vt64 GROUP BY vt64.lid, vt64.c0;
SELECT ALL rt1.c2, rt1.c3, rt1.c6, rt1.c5, rt1.c0 FROM vt64, rt1 GROUP BY rt1.c2, rt1.c3, rt1.c6, rt1.c5, rt1.c0;
SELECT rt1.c2, rt1.c3, rt1.c6, rt1.c5, rt1.c0 FROM vt64, rt1 GROUP BY rt1.c2, rt1.c3, rt1.c6, rt1.c5, rt1.c0 HAVING MAX((rt1.c4 IN ())) UNION ALL SELECT ALL rt1.c2, rt1.c3, rt1.c6, rt1.c5, rt1.c0 FROM vt64, rt1 GROUP BY rt1.c2, rt1.c3, rt1.c6, rt1.c5, rt1.c0 HAVING (NOT (MAX((rt1.c4 IN ())))) UNION ALL SELECT ALL rt1.c2, rt1.c3, rt1.c6, rt1.c5, rt1.c0 FROM vt64, rt1 GROUP BY rt1.c2, rt1.c3, rt1.c6, rt1.c5, rt1.c0 HAVING ((MAX((rt1.c4 IN ()))) ISNULL);
SELECT ALL rt1.c2, rt1.c3, rt1.c6, rt1.c5, rt1.c0 FROM vt64, rt1 GROUP BY rt1.c2, rt1.c3, rt1.c6, rt1.c5, rt1.c0;
SELECT rt1.c2, rt1.c3, rt1.c6, rt1.c5, rt1.c0 FROM vt64, rt1 GROUP BY rt1.c2, rt1.c3, rt1.c6, rt1.c5, rt1.c0 HAVING MAX((rt1.c4 IN ())) UNION ALL SELECT ALL rt1.c2, rt1.c3, rt1.c6, rt1.c5, rt1.c0 FROM vt64, rt1 GROUP BY rt1.c2, rt1.c3, rt1.c6, rt1.c5, rt1.c0 HAVING (NOT (MAX((rt1.c4 IN ())))) UNION ALL SELECT ALL rt1.c2, rt1.c3, rt1.c6, rt1.c5, rt1.c0 FROM vt64, rt1 GROUP BY rt1.c2, rt1.c3, rt1.c6, rt1.c5, rt1.c0 HAVING ((MAX((rt1.c4 IN ()))) ISNULL);
SELECT ALL rt1.c2, rt1.c3, rt1.c6, rt1.c5, rt1.c0 FROM vt64, rt1 GROUP BY rt1.c2, rt1.c3, rt1.c6, rt1.c5, rt1.c0;
SELECT ALL * FROM vt64;
SELECT * FROM vt64 WHERE (CASE WHEN (vt64.lid IN ()) THEN vt64.lid END) UNION ALL SELECT * FROM vt64 WHERE ((NOT (CASE WHEN (vt64.lid IN ()) THEN vt64.lid END))) UNION ALL SELECT ALL * FROM vt64 WHERE (((CASE WHEN (vt64.lid IN ()) THEN vt64.lid END) ISNULL));
SELECT ALL * FROM vt64;
SELECT DISTINCT rt1.c2, rt1.c5, rt1.c1, vt64.c0, rt1.c3, vt64.lid FROM rt1 INNER JOIN vt64 ON (((((((((rt1.c3 IN ()))AND(rt1.c2 COLLATE BINARY)))OR((rt1.c6 IN ()))))OR(((rt1.c6) NOT BETWEEN (vt64.lid) AND (rt1.c6)))))OR(CASE WHEN rt1.c1 THEN rt1.c2 END));
SELECT DISTINCT rt1.c2, rt1.c5, rt1.c1, vt64.c0, rt1.c3, vt64.lid FROM rt1 INNER JOIN vt64 ON (((((((((rt1.c3 IN ()))AND(rt1.c2 COLLATE BINARY)))OR((rt1.c6 IN ()))))OR(((rt1.c6) NOT BETWEEN (vt64.lid) AND (rt1.c6)))))OR(CASE WHEN rt1.c1 THEN rt1.c2 END)) WHERE (((((((rt1.c0)OR(rt1.c6)))OR(vt64.c0)))OR(((vt64.c0) IS FALSE)))) UNION SELECT DISTINCT rt1.c2, rt1.c5, rt1.c1, vt64.c0, rt1.c3, vt64.lid FROM rt1 INNER JOIN vt64 ON (((((((((rt1.c3 IN ()))AND(rt1.c2 COLLATE BINARY)))OR((rt1.c6 IN ()))))OR(((rt1.c6) NOT BETWEEN (vt64.lid) AND (rt1.c6)))))OR(CASE WHEN rt1.c1 THEN rt1.c2 END)) WHERE ((NOT (((((((rt1.c0)OR(rt1.c6)))OR(vt64.c0)))OR(((vt64.c0) IS FALSE)))))) UNION SELECT DISTINCT rt1.c2, rt1.c5, rt1.c1, vt64.c0, rt1.c3, vt64.lid FROM rt1 INNER JOIN vt64 ON (((((((((rt1.c3 IN ()))AND(rt1.c2 COLLATE BINARY)))OR((rt1.c6 IN ()))))OR(((rt1.c6) NOT BETWEEN (vt64.lid) AND (rt1.c6)))))OR(CASE WHEN rt1.c1 THEN rt1.c2 END)) WHERE (((((((((rt1.c0)OR(rt1.c6)))OR(vt64.c0)))OR(((vt64.c0) IS FALSE)))) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c5, rt1.c1, vt64.c0, rt1.c3, vt64.lid FROM rt1 INNER JOIN vt64 ON (((((((((rt1.c3 IN ()))AND(rt1.c2 COLLATE BINARY)))OR((rt1.c6 IN ()))))OR(((rt1.c6) NOT BETWEEN (vt64.lid) AND (rt1.c6)))))OR(CASE WHEN rt1.c1 THEN rt1.c2 END));
SELECT ALL rt1.c1, vt64.lid, rt1.c6, rt1.c5, rt1.c0, rt1.c3 FROM rt1, vt64 GROUP BY rt1.c1, vt64.lid, rt1.c6, rt1.c5, rt1.c0, rt1.c3;
SELECT ALL rt1.c1, vt64.lid, rt1.c6, rt1.c5, rt1.c0, rt1.c3 FROM rt1, vt64 WHERE (STRFTIME(CASE vt64.lid  WHEN rt1.c0 THEN vt64.c0 ELSE rt1.c2 END, rt1.c4 COLLATE NOCASE, ((rt1.c3)OR(rt1.c2)))) GROUP BY rt1.c1, vt64.lid, rt1.c6, rt1.c5, rt1.c0, rt1.c3 UNION SELECT rt1.c1, vt64.lid, rt1.c6, rt1.c5, rt1.c0, rt1.c3 FROM rt1, vt64 WHERE ((NOT (STRFTIME(CASE vt64.lid  WHEN rt1.c0 THEN vt64.c0 ELSE rt1.c2 END, rt1.c4 COLLATE NOCASE, ((rt1.c3)OR(rt1.c2)))))) GROUP BY rt1.c1, vt64.lid, rt1.c6, rt1.c5, rt1.c0, rt1.c3 UNION SELECT ALL rt1.c1, vt64.lid, rt1.c6, rt1.c5, rt1.c0, rt1.c3 FROM rt1, vt64 WHERE (((STRFTIME(CASE vt64.lid  WHEN rt1.c0 THEN vt64.c0 ELSE rt1.c2 END, rt1.c4 COLLATE NOCASE, ((rt1.c3)OR(rt1.c2)))) ISNULL)) GROUP BY rt1.c1, vt64.lid, rt1.c6, rt1.c5, rt1.c0, rt1.c3;
SELECT ALL rt1.c1, vt64.lid, rt1.c6, rt1.c5, rt1.c0, rt1.c3 FROM rt1, vt64 GROUP BY rt1.c1, vt64.lid, rt1.c6, rt1.c5, rt1.c0, rt1.c3;
SELECT ALL vt64.c0, vt64.lid FROM vt64 GROUP BY vt64.c0, vt64.lid;
SELECT ALL vt64.c0, vt64.lid FROM vt64 GROUP BY vt64.c0, vt64.lid HAVING ((((vt64.c0)LIKE(vt64.c0))) BETWEEN (0X2d7d8f42) AND (AVG(AVG(vt64.lid)))) UNION ALL SELECT vt64.c0, vt64.lid FROM vt64 GROUP BY vt64.c0, vt64.lid HAVING (NOT (((((vt64.c0)LIKE(vt64.c0))) BETWEEN (0x2d7d8f42) AND (AVG(AVG(vt64.lid)))))) UNION ALL SELECT ALL vt64.c0, vt64.lid FROM vt64 GROUP BY vt64.c0, vt64.lid HAVING ((((((vt64.c0)LIKE(vt64.c0))) BETWEEN (0X2d7d8f42) AND (AVG(AVG(vt64.lid))))) ISNULL);
SELECT ALL rt1.c6 FROM rt1, vt64;
SELECT ALL rt1.c6 FROM rt1, vt64 WHERE (ABS(((((rt1.c5)OR(rt1.c6)))AND(rt1.c3)))) UNION ALL SELECT rt1.c6 FROM rt1, vt64 WHERE ((NOT (ABS(((((rt1.c5)OR(rt1.c6)))AND(rt1.c3)))))) UNION ALL SELECT ALL rt1.c6 FROM rt1, vt64 WHERE (((ABS(((((rt1.c5)OR(rt1.c6)))AND(rt1.c3)))) ISNULL));
SELECT ALL rt1.c6 FROM rt1, vt64;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (((TRIM(rt1.c6)) NOTNULL)) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (((TRIM(rt1.c6)) NOTNULL)))) UNION SELECT DISTINCT * FROM rt1 WHERE (((((TRIM(rt1.c6)) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL vt64.c0 FROM vt64 GROUP BY vt64.c0;
SELECT vt64.c0 FROM vt64 WHERE (((((((vt64.c0)) BETWEEN ((vt64.c0)) AND ((vt64.c0)))))=((vt64.c0)))) GROUP BY vt64.c0 UNION SELECT ALL vt64.c0 FROM vt64 WHERE ((NOT (((((((vt64.c0)) BETWEEN ((vt64.c0)) AND ((vt64.c0)))))=((vt64.c0)))))) GROUP BY vt64.c0 UNION SELECT ALL vt64.c0 FROM vt64 WHERE (((((((((vt64.c0)) BETWEEN ((vt64.c0)) AND ((vt64.c0)))))==((vt64.c0)))) ISNULL)) GROUP BY vt64.c0;
SELECT ALL vt64.c0 FROM vt64 GROUP BY vt64.c0;
SELECT ALL vt64.lid FROM vt64, rt1 GROUP BY vt64.lid;
SELECT ALL vt64.lid FROM vt64, rt1 GROUP BY vt64.lid HAVING COUNT(*) UNION ALL SELECT vt64.lid FROM vt64, rt1 GROUP BY vt64.lid HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt64.lid FROM vt64, rt1 GROUP BY vt64.lid HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt64.lid FROM vt64, rt1 GROUP BY vt64.lid;
SELECT ALL vt64.lid FROM vt64, rt1 GROUP BY vt64.lid HAVING COUNT(*) UNION ALL SELECT vt64.lid FROM vt64, rt1 GROUP BY vt64.lid HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt64.lid FROM vt64, rt1 GROUP BY vt64.lid HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt64.lid FROM vt64, rt1 GROUP BY vt64.lid;
SELECT ALL rt1.c3, rt1.c0, rt1.c2, rt1.c6, rt1.c4, rt1.c1 FROM rt1;
SELECT rt1.c3, rt1.c0, rt1.c2, rt1.c6, rt1.c4, rt1.c1 FROM rt1 WHERE (((((((rt1.c6)GLOB(rt1.c2)))AND(json_valid('0.1020597756722389'))))OR(CAST(x'' AS REAL)))) UNION ALL SELECT ALL rt1.c3, rt1.c0, rt1.c2, rt1.c6, rt1.c4, rt1.c1 FROM rt1 WHERE ((NOT (((((((rt1.c6)GLOB(rt1.c2)))AND(json_valid('0.1020597756722389'))))OR(CAST(x'' AS REAL)))))) UNION ALL SELECT rt1.c3, rt1.c0, rt1.c2, rt1.c6, rt1.c4, rt1.c1 FROM rt1 WHERE (((((((((rt1.c6)GLOB(rt1.c2)))AND(json_valid('0.1020597756722389'))))OR(CAST(x'' AS REAL)))) ISNULL));
SELECT ALL rt1.c3, rt1.c0, rt1.c2, rt1.c6, rt1.c4, rt1.c1 FROM rt1;
SELECT DISTINCT * FROM vt64;
SELECT DISTINCT * FROM vt64 WHERE (vt64.c0) UNION SELECT DISTINCT * FROM vt64 WHERE ((NOT (vt64.c0))) UNION SELECT DISTINCT * FROM vt64 WHERE (((vt64.c0) ISNULL));
SELECT DISTINCT * FROM vt64;
SELECT vt64.c0, rt1.c6, rt1.c0, rt1.c1, rt1.c5, rt1.c4, rt1.c2, rt1.c3, vt64.lid FROM vt64, rt1 GROUP BY vt64.c0, rt1.c6, rt1.c0, rt1.c1, rt1.c5, rt1.c4, rt1.c2, rt1.c3, vt64.lid;
SELECT ALL vt64.c0, rt1.c6, rt1.c0, rt1.c1, rt1.c5, rt1.c4, rt1.c2, rt1.c3, vt64.lid FROM vt64, rt1 WHERE (((((rt1.c2)>(rt1.c3))) NOT BETWEEN ((rt1.c6 IN (vt64.lid))) AND (((((((((vt64.c0)OR(rt1.c4)))AND(rt1.c0)))AND(rt1.c1)))AND(rt1.c2))))) GROUP BY vt64.c0, rt1.c6, rt1.c0, rt1.c1, rt1.c5, rt1.c4, rt1.c2, rt1.c3, vt64.lid UNION SELECT ALL vt64.c0, rt1.c6, rt1.c0, rt1.c1, rt1.c5, rt1.c4, rt1.c2, rt1.c3, vt64.lid FROM vt64, rt1 WHERE ((NOT (((((rt1.c2)>(rt1.c3))) NOT BETWEEN ((rt1.c6 IN (vt64.lid))) AND (((((((((vt64.c0)OR(rt1.c4)))AND(rt1.c0)))AND(rt1.c1)))AND(rt1.c2))))))) GROUP BY vt64.c0, rt1.c6, rt1.c0, rt1.c1, rt1.c5, rt1.c4, rt1.c2, rt1.c3, vt64.lid UNION SELECT ALL vt64.c0, rt1.c6, rt1.c0, rt1.c1, rt1.c5, rt1.c4, rt1.c2, rt1.c3, vt64.lid FROM vt64, rt1 WHERE (((((((rt1.c2)>(rt1.c3))) NOT BETWEEN ((rt1.c6 IN (vt64.lid))) AND (((((((((vt64.c0)OR(rt1.c4)))AND(rt1.c0)))AND(rt1.c1)))AND(rt1.c2))))) ISNULL)) GROUP BY vt64.c0, rt1.c6, rt1.c0, rt1.c1, rt1.c5, rt1.c4, rt1.c2, rt1.c3, vt64.lid;
SELECT vt64.c0, rt1.c6, rt1.c0, rt1.c1, rt1.c5, rt1.c4, rt1.c2, rt1.c3, vt64.lid FROM vt64, rt1 GROUP BY vt64.c0, rt1.c6, rt1.c0, rt1.c1, rt1.c5, rt1.c4, rt1.c2, rt1.c3, vt64.lid;
SELECT ALL vt64.c0 FROM vt64 GROUP BY vt64.c0;
SELECT vt64.c0 FROM vt64 GROUP BY vt64.c0 HAVING x'4e57' UNION ALL SELECT ALL vt64.c0 FROM vt64 GROUP BY vt64.c0 HAVING (NOT (x'4e57')) UNION ALL SELECT vt64.c0 FROM vt64 GROUP BY vt64.c0 HAVING ((x'4e57') ISNULL);
SELECT ALL vt64.c0 FROM vt64 GROUP BY vt64.c0;
SELECT vt64.c0 FROM vt64 GROUP BY vt64.c0 HAVING x'4e57' UNION ALL SELECT ALL vt64.c0 FROM vt64 GROUP BY vt64.c0 HAVING (NOT (x'4e57')) UNION ALL SELECT vt64.c0 FROM vt64 GROUP BY vt64.c0 HAVING ((x'4e57') ISNULL);
SELECT ALL vt64.c0 FROM vt64 GROUP BY vt64.c0;
SELECT vt64.c0 FROM rt1 INNER JOIN vt64 ON ((((rt1.c5) BETWEEN (vt64.lid) AND (rt1.c6))) IS FALSE);
SELECT ALL vt64.c0 FROM rt1 INNER JOIN vt64 ON ((((rt1.c5) BETWEEN (vt64.lid) AND (rt1.c6))) IS FALSE) WHERE (((rt1.c1)+(rt1.c0)) COLLATE BINARY) UNION ALL SELECT ALL vt64.c0 FROM rt1 INNER JOIN vt64 ON ((((rt1.c5) BETWEEN (vt64.lid) AND (rt1.c6))) IS FALSE) WHERE ((NOT (((rt1.c1)+(rt1.c0)) COLLATE BINARY))) UNION ALL SELECT vt64.c0 FROM rt1 INNER JOIN vt64 ON ((((rt1.c5) BETWEEN (vt64.lid) AND (rt1.c6))) IS FALSE) WHERE (((((rt1.c1)+(rt1.c0)) COLLATE BINARY) ISNULL));
SELECT vt64.c0 FROM rt1 INNER JOIN vt64 ON ((((rt1.c5) BETWEEN (vt64.lid) AND (rt1.c6))) IS FALSE);
SELECT DISTINCT * FROM vt64, rt1;
SELECT DISTINCT * FROM vt64, rt1 WHERE (((((((((((rt1.c0)AND(vt64.c0)))AND(0.30815012985767987)))OR(rt1.c1)))AND('0.2866650250380002')))&(CASE NULL  WHEN rt1.c5 THEN rt1.c3 END))) UNION SELECT DISTINCT * FROM vt64, rt1 WHERE ((NOT (((((((((((rt1.c0)AND(vt64.c0)))AND(0.30815012985767987)))OR(rt1.c1)))AND('0.2866650250380002')))&(CASE NULL  WHEN rt1.c5 THEN rt1.c3 END))))) UNION SELECT DISTINCT * FROM vt64, rt1 WHERE (((((((((((((rt1.c0)AND(vt64.c0)))AND(0.30815012985767987)))OR(rt1.c1)))AND('0.2866650250380002')))&(CASE NULL  WHEN rt1.c5 THEN rt1.c3 END))) ISNULL));
SELECT DISTINCT * FROM vt64, rt1;
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1 WHERE (rt1.c0) GROUP BY rt1.c2 UNION SELECT rt1.c2 FROM rt1 WHERE ((NOT (rt1.c0))) GROUP BY rt1.c2 UNION SELECT ALL rt1.c2 FROM rt1 WHERE (((rt1.c0) ISNULL)) GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT ALL rt1.c6, vt64.lid, rt1.c2, rt1.c3, rt1.c0, vt64.c0 FROM vt64, rt1 GROUP BY rt1.c6, vt64.lid, rt1.c2, rt1.c3, rt1.c0, vt64.c0;
SELECT ALL rt1.c6, vt64.lid, rt1.c2, rt1.c3, rt1.c0, vt64.c0 FROM vt64, rt1 GROUP BY rt1.c6, vt64.lid, rt1.c2, rt1.c3, rt1.c0, vt64.c0 HAVING x'' UNION ALL SELECT ALL rt1.c6, vt64.lid, rt1.c2, rt1.c3, rt1.c0, vt64.c0 FROM vt64, rt1 GROUP BY rt1.c6, vt64.lid, rt1.c2, rt1.c3, rt1.c0, vt64.c0 HAVING (NOT (x'')) UNION ALL SELECT rt1.c6, vt64.lid, rt1.c2, rt1.c3, rt1.c0, vt64.c0 FROM vt64, rt1 GROUP BY rt1.c6, vt64.lid, rt1.c2, rt1.c3, rt1.c0, vt64.c0 HAVING ((x'') ISNULL);
SELECT ALL rt1.c6, vt64.lid, rt1.c2, rt1.c3, rt1.c0, vt64.c0 FROM vt64, rt1 GROUP BY rt1.c6, vt64.lid, rt1.c2, rt1.c3, rt1.c0, vt64.c0;
SELECT ALL rt1.c6, vt64.lid, rt1.c2, rt1.c3, rt1.c0, vt64.c0 FROM vt64, rt1 GROUP BY rt1.c6, vt64.lid, rt1.c2, rt1.c3, rt1.c0, vt64.c0 HAVING x'' UNION ALL SELECT ALL rt1.c6, vt64.lid, rt1.c2, rt1.c3, rt1.c0, vt64.c0 FROM vt64, rt1 GROUP BY rt1.c6, vt64.lid, rt1.c2, rt1.c3, rt1.c0, vt64.c0 HAVING (NOT (x'')) UNION ALL SELECT rt1.c6, vt64.lid, rt1.c2, rt1.c3, rt1.c0, vt64.c0 FROM vt64, rt1 GROUP BY rt1.c6, vt64.lid, rt1.c2, rt1.c3, rt1.c0, vt64.c0 HAVING ((x'') ISNULL);
SELECT ALL rt1.c6, vt64.lid, rt1.c2, rt1.c3, rt1.c0, vt64.c0 FROM vt64, rt1 GROUP BY rt1.c6, vt64.lid, rt1.c2, rt1.c3, rt1.c0, vt64.c0;
SELECT * FROM vt64;
SELECT * FROM vt64 WHERE (SQLITE_COMPILEOPTION_GET(CASE vt64.lid  WHEN vt64.c0 THEN vt64.c0 END)) UNION ALL SELECT ALL * FROM vt64 WHERE ((NOT (SQLITE_COMPILEOPTION_GET(CASE vt64.lid  WHEN vt64.c0 THEN vt64.c0 END)))) UNION ALL SELECT ALL * FROM vt64 WHERE (((SQLITE_COMPILEOPTION_GET(CASE vt64.lid  WHEN vt64.c0 THEN vt64.c0 END)) ISNULL));
SELECT * FROM vt64;
SELECT DISTINCT * FROM vt64, rt1;
SELECT DISTINCT * FROM vt64, rt1 WHERE (vt64.lid) UNION SELECT DISTINCT * FROM vt64, rt1 WHERE ((NOT (vt64.lid))) UNION SELECT DISTINCT * FROM vt64, rt1 WHERE (((vt64.lid) ISNULL));
SELECT DISTINCT * FROM vt64, rt1;
SELECT vt64.lid, vt64.c0 FROM vt64 GROUP BY vt64.lid, vt64.c0;
SELECT vt64.lid, vt64.c0 FROM vt64 WHERE (((((vt64.c0)/(vt64.lid))) BETWEEN (((((((((vt64.c0)AND(vt64.c0)))AND(vt64.c0)))AND('')))AND(vt64.c0))) AND (vt64.lid))) GROUP BY vt64.lid, vt64.c0 UNION SELECT ALL vt64.lid, vt64.c0 FROM vt64 WHERE ((NOT (((((vt64.c0)/(vt64.lid))) BETWEEN (((((((((vt64.c0)AND(vt64.c0)))AND(vt64.c0)))AND('')))AND(vt64.c0))) AND (vt64.lid))))) GROUP BY vt64.lid, vt64.c0 UNION SELECT ALL vt64.lid, vt64.c0 FROM vt64 WHERE (((((((vt64.c0)/(vt64.lid))) BETWEEN (((((((((vt64.c0)AND(vt64.c0)))AND(vt64.c0)))AND('')))AND(vt64.c0))) AND (vt64.lid))) ISNULL)) GROUP BY vt64.lid, vt64.c0;
SELECT vt64.lid, vt64.c0 FROM vt64 GROUP BY vt64.lid, vt64.c0;
SELECT rt1.c6, rt1.c1, rt1.c0, vt64.lid, rt1.c4 FROM vt64, rt1 GROUP BY rt1.c6, rt1.c1, rt1.c0, vt64.lid, rt1.c4;
SELECT ALL rt1.c6, rt1.c1, rt1.c0, vt64.lid, rt1.c4 FROM vt64, rt1 GROUP BY rt1.c6, rt1.c1, rt1.c0, vt64.lid, rt1.c4 HAVING ((MAX(rt1.c1))&((rt1.c1 IN (AVG(MAX(AVG(COUNT(*)))), 0.0725564325278012)))) UNION ALL SELECT ALL rt1.c6, rt1.c1, rt1.c0, vt64.lid, rt1.c4 FROM vt64, rt1 GROUP BY rt1.c6, rt1.c1, rt1.c0, vt64.lid, rt1.c4 HAVING (NOT (((MAX(rt1.c1))&((rt1.c1 IN (AVG(MAX(AVG(COUNT(*)))), 0.0725564325278012)))))) UNION ALL SELECT rt1.c6, rt1.c1, rt1.c0, vt64.lid, rt1.c4 FROM vt64, rt1 GROUP BY rt1.c6, rt1.c1, rt1.c0, vt64.lid, rt1.c4 HAVING ((((MAX(rt1.c1))&((rt1.c1 IN (AVG(MAX(AVG(COUNT(*)))), 0.0725564325278012))))) ISNULL);
SELECT ALL rt1.c2, rt1.c4, rt1.c5, rt1.c1, rt1.c6, rt1.c0, rt1.c3 FROM rt1;
SELECT rt1.c2, rt1.c4, rt1.c5, rt1.c1, rt1.c6, rt1.c0, rt1.c3 FROM rt1 WHERE (CAST(((rt1.c1)/(rt1.c3)) AS NUMERIC)) UNION ALL SELECT rt1.c2, rt1.c4, rt1.c5, rt1.c1, rt1.c6, rt1.c0, rt1.c3 FROM rt1 WHERE ((NOT (CAST(((rt1.c1)/(rt1.c3)) AS NUMERIC)))) UNION ALL SELECT rt1.c2, rt1.c4, rt1.c5, rt1.c1, rt1.c6, rt1.c0, rt1.c3 FROM rt1 WHERE (((CAST(((rt1.c1)/(rt1.c3)) AS NUMERIC)) ISNULL));
SELECT ALL rt1.c2, rt1.c4, rt1.c5, rt1.c1, rt1.c6, rt1.c0, rt1.c3 FROM rt1;
SELECT DISTINCT rt1.c0, rt1.c1, vt64.lid, rt1.c3, rt1.c2, rt1.c6, rt1.c4, vt64.c0, rt1.c5 FROM rt1, vt64;
SELECT DISTINCT rt1.c0, rt1.c1, vt64.lid, rt1.c3, rt1.c2, rt1.c6, rt1.c4, vt64.c0, rt1.c5 FROM rt1, vt64 WHERE (TRIM(DISTINCT ((rt1.c5)-(vt64.lid)), rt1.c4)) UNION SELECT DISTINCT rt1.c0, rt1.c1, vt64.lid, rt1.c3, rt1.c2, rt1.c6, rt1.c4, vt64.c0, rt1.c5 FROM rt1, vt64 WHERE ((NOT (TRIM(DISTINCT ((rt1.c5)-(vt64.lid)), rt1.c4)))) UNION SELECT DISTINCT rt1.c0, rt1.c1, vt64.lid, rt1.c3, rt1.c2, rt1.c6, rt1.c4, vt64.c0, rt1.c5 FROM rt1, vt64 WHERE (((TRIM(DISTINCT ((rt1.c5)-(vt64.lid)), rt1.c4)) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c1, vt64.lid, rt1.c3, rt1.c2, rt1.c6, rt1.c4, vt64.c0, rt1.c5 FROM rt1, vt64;
SELECT ALL vt64.c0, rt1.c4, rt1.c3, rt1.c2, rt1.c1 FROM rt1, vt64 GROUP BY vt64.c0, rt1.c4, rt1.c3, rt1.c2, rt1.c1;
SELECT vt64.c0, rt1.c4, rt1.c3, rt1.c2, rt1.c1 FROM rt1, vt64 WHERE (((((rt1.c6)IS(rt1.c4)))==(rt1.c4 COLLATE NOCASE))) GROUP BY vt64.c0, rt1.c4, rt1.c3, rt1.c2, rt1.c1 UNION SELECT ALL vt64.c0, rt1.c4, rt1.c3, rt1.c2, rt1.c1 FROM rt1, vt64 WHERE ((NOT (((((rt1.c6)IS(rt1.c4)))=(rt1.c4 COLLATE NOCASE))))) GROUP BY vt64.c0, rt1.c4, rt1.c3, rt1.c2, rt1.c1 UNION SELECT vt64.c0, rt1.c4, rt1.c3, rt1.c2, rt1.c1 FROM rt1, vt64 WHERE (((((((rt1.c6)IS(rt1.c4)))=(rt1.c4 COLLATE NOCASE))) ISNULL)) GROUP BY vt64.c0, rt1.c4, rt1.c3, rt1.c2, rt1.c1;
SELECT ALL vt64.c0, rt1.c4, rt1.c3, rt1.c2, rt1.c1 FROM rt1, vt64 GROUP BY vt64.c0, rt1.c4, rt1.c3, rt1.c2, rt1.c1;
SELECT ALL vt64.lid, vt64.c0 FROM vt64 GROUP BY vt64.lid, vt64.c0;
SELECT vt64.lid, vt64.c0 FROM vt64 GROUP BY vt64.lid, vt64.c0 HAVING MAX(((0.7580272147253377) BETWEEN (TOTAL(vt64.lid)) AND (vt64.lid))) UNION ALL SELECT ALL vt64.lid, vt64.c0 FROM vt64 GROUP BY vt64.lid, vt64.c0 HAVING (NOT (MAX(((0.7580272147253377) BETWEEN (TOTAL(vt64.lid)) AND (vt64.lid))))) UNION ALL SELECT ALL vt64.lid, vt64.c0 FROM vt64 GROUP BY vt64.lid, vt64.c0 HAVING ((MAX(((0.7580272147253377) BETWEEN (TOTAL(vt64.lid)) AND (vt64.lid)))) ISNULL);
SELECT rt1.c1, rt1.c5 FROM rt1, vt64;
SELECT rt1.c1, rt1.c5 FROM rt1, vt64 WHERE (((ABS(rt1.c3)) BETWEEN (((rt1.c0)>=(rt1.c2))) AND ('\r\0yW?JLM'))) UNION ALL SELECT ALL rt1.c1, rt1.c5 FROM rt1, vt64 WHERE ((NOT (((ABS(rt1.c3)) BETWEEN (((rt1.c0)>=(rt1.c2))) AND ('\r\0yW?JLM'))))) UNION ALL SELECT ALL rt1.c1, rt1.c5 FROM rt1, vt64 WHERE (((((ABS(rt1.c3)) BETWEEN (((rt1.c0)>=(rt1.c2))) AND ('\r\0yW?JLM'))) ISNULL));
SELECT rt1.c1, rt1.c5 FROM rt1, vt64;
SELECT DISTINCT * FROM vt64, rt1;
SELECT DISTINCT * FROM vt64, rt1 WHERE ('N\],') UNION SELECT DISTINCT * FROM vt64, rt1 WHERE ((NOT ('N\],'))) UNION SELECT DISTINCT * FROM vt64, rt1 WHERE ((('N\],') ISNULL));
SELECT DISTINCT * FROM vt64, rt1;
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1 WHERE (LIKELIHOOD(DISTINCT rt1.c4, 0.7709572548433287) COLLATE NOCASE) GROUP BY rt1.c2 UNION SELECT rt1.c2 FROM rt1 WHERE ((NOT (LIKELIHOOD(DISTINCT rt1.c4, 0.7709572548433287) COLLATE NOCASE))) GROUP BY rt1.c2 UNION SELECT rt1.c2 FROM rt1 WHERE (((LIKELIHOOD(DISTINCT rt1.c4, 0.7709572548433287) COLLATE NOCASE) ISNULL)) GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT ALL vt64.c0, vt64.lid FROM vt64 GROUP BY vt64.c0, vt64.lid;
SELECT vt64.c0, vt64.lid FROM vt64 GROUP BY vt64.c0, vt64.lid HAVING AVG(vt64.lid COLLATE BINARY) UNION ALL SELECT ALL vt64.c0, vt64.lid FROM vt64 GROUP BY vt64.c0, vt64.lid HAVING (NOT (AVG(vt64.lid COLLATE BINARY))) UNION ALL SELECT vt64.c0, vt64.lid FROM vt64 GROUP BY vt64.c0, vt64.lid HAVING ((AVG(vt64.lid COLLATE BINARY)) ISNULL);
SELECT ALL vt64.c0, vt64.lid FROM vt64 GROUP BY vt64.c0, vt64.lid;
SELECT vt64.c0, vt64.lid FROM vt64 GROUP BY vt64.c0, vt64.lid HAVING AVG(vt64.lid COLLATE BINARY) UNION ALL SELECT ALL vt64.c0, vt64.lid FROM vt64 GROUP BY vt64.c0, vt64.lid HAVING (NOT (AVG(vt64.lid COLLATE BINARY))) UNION ALL SELECT vt64.c0, vt64.lid FROM vt64 GROUP BY vt64.c0, vt64.lid HAVING ((AVG(vt64.lid COLLATE BINARY)) ISNULL);
SELECT ALL vt64.c0, vt64.lid FROM vt64 GROUP BY vt64.c0, vt64.lid;
SELECT ALL rt1.c1, rt1.c0 FROM vt64, rt1 NOT INDEXED;
SELECT rt1.c1, rt1.c0 FROM vt64, rt1 WHERE ((+ (((rt1.c1)-(rt1.c5))))) UNION ALL SELECT rt1.c1, rt1.c0 FROM vt64, rt1 WHERE ((NOT ((+ (((rt1.c1)-(rt1.c5))))))) UNION ALL SELECT rt1.c1, rt1.c0 FROM vt64, rt1 WHERE ((((+ (((rt1.c1)-(rt1.c5))))) ISNULL));
SELECT ALL rt1.c1, rt1.c0 FROM vt64, rt1 NOT INDEXED;
SELECT DISTINCT vt64.c0, vt64.lid, rt1.c6, rt1.c3, rt1.c5, rt1.c0, rt1.c2 FROM rt1, vt64;
SELECT DISTINCT vt64.c0, vt64.lid, rt1.c6, rt1.c3, rt1.c5, rt1.c0, rt1.c2 FROM rt1, vt64 WHERE (CAST(json_quote(rt1.c1) AS NUMERIC)) UNION SELECT DISTINCT vt64.c0, vt64.lid, rt1.c6, rt1.c3, rt1.c5, rt1.c0, rt1.c2 FROM rt1, vt64 WHERE ((NOT (CAST(json_quote(rt1.c1) AS NUMERIC)))) UNION SELECT DISTINCT vt64.c0, vt64.lid, rt1.c6, rt1.c3, rt1.c5, rt1.c0, rt1.c2 FROM rt1, vt64 WHERE (((CAST(json_quote(rt1.c1) AS NUMERIC)) ISNULL));
SELECT DISTINCT vt64.c0, vt64.lid, rt1.c6, rt1.c3, rt1.c5, rt1.c0, rt1.c2 FROM rt1, vt64;
SELECT rt1.c6, rt1.c2, rt1.c4, rt1.c5, rt1.c1, rt1.c3 FROM rt1 GROUP BY rt1.c6, rt1.c2, rt1.c4, rt1.c5, rt1.c1, rt1.c3;
SELECT rt1.c6, rt1.c2, rt1.c4, rt1.c5, rt1.c1, rt1.c3 FROM rt1 WHERE (CASE WHEN CASE rt1.c3  WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c1 END THEN ((rt1.c2)>>(rt1.c3)) END) GROUP BY rt1.c6, rt1.c2, rt1.c4, rt1.c5, rt1.c1, rt1.c3 UNION SELECT rt1.c6, rt1.c2, rt1.c4, rt1.c5, rt1.c1, rt1.c3 FROM rt1 WHERE ((NOT (CASE WHEN CASE rt1.c3  WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c1 END THEN ((rt1.c2)>>(rt1.c3)) END))) GROUP BY rt1.c6, rt1.c2, rt1.c4, rt1.c5, rt1.c1, rt1.c3 UNION SELECT rt1.c6, rt1.c2, rt1.c4, rt1.c5, rt1.c1, rt1.c3 FROM rt1 WHERE (((CASE WHEN CASE rt1.c3  WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c1 END THEN ((rt1.c2)>>(rt1.c3)) END) ISNULL)) GROUP BY rt1.c6, rt1.c2, rt1.c4, rt1.c5, rt1.c1, rt1.c3;
SELECT rt1.c6, rt1.c2, rt1.c4, rt1.c5, rt1.c1, rt1.c3 FROM rt1 GROUP BY rt1.c6, rt1.c2, rt1.c4, rt1.c5, rt1.c1, rt1.c3;
SELECT ALL rt1.c4, rt1.c6, rt1.c5 FROM vt64, rt1 GROUP BY rt1.c4, rt1.c6, rt1.c5;
SELECT rt1.c4, rt1.c6, rt1.c5 FROM vt64, rt1 GROUP BY rt1.c4, rt1.c6, rt1.c5 HAVING ((((((((CAST(rt1.c1 AS BLOB))AND((SUM(rt1.c4) IN ()))))AND((- (x'')))))OR(((0.7240093936880942)*(rt1.c0)))))OR(rt1.c4)) UNION ALL SELECT rt1.c4, rt1.c6, rt1.c5 FROM vt64, rt1 GROUP BY rt1.c4, rt1.c6, rt1.c5 HAVING (NOT (((((((((CAST(rt1.c1 AS BLOB))AND((SUM(rt1.c4) IN ()))))AND((- (x'')))))OR(((0.7240093936880942)*(rt1.c0)))))OR(rt1.c4)))) UNION ALL SELECT rt1.c4, rt1.c6, rt1.c5 FROM vt64, rt1 GROUP BY rt1.c4, rt1.c6, rt1.c5 HAVING ((((((((((CAST(rt1.c1 AS BLOB))AND((SUM(rt1.c4) IN ()))))AND((- (x'')))))OR(((0.7240093936880942)*(rt1.c0)))))OR(rt1.c4))) ISNULL);
SELECT ALL rt1.c4, rt1.c6, rt1.c5 FROM vt64, rt1 GROUP BY rt1.c4, rt1.c6, rt1.c5;
SELECT rt1.c4, rt1.c6, rt1.c5 FROM vt64, rt1 GROUP BY rt1.c4, rt1.c6, rt1.c5 HAVING ((((((((CAST(rt1.c1 AS BLOB))AND((SUM(rt1.c4) IN ()))))AND((- (x'')))))OR(((0.7240093936880942)*(rt1.c0)))))OR(rt1.c4)) UNION ALL SELECT rt1.c4, rt1.c6, rt1.c5 FROM vt64, rt1 GROUP BY rt1.c4, rt1.c6, rt1.c5 HAVING (NOT (((((((((CAST(rt1.c1 AS BLOB))AND((SUM(rt1.c4) IN ()))))AND((- (x'')))))OR(((0.7240093936880942)*(rt1.c0)))))OR(rt1.c4)))) UNION ALL SELECT rt1.c4, rt1.c6, rt1.c5 FROM vt64, rt1 GROUP BY rt1.c4, rt1.c6, rt1.c5 HAVING ((((((((((CAST(rt1.c1 AS BLOB))AND((SUM(rt1.c4) IN ()))))AND((- (x'')))))OR(((0.7240093936880942)*(rt1.c0)))))OR(rt1.c4))) ISNULL);
SELECT ALL rt1.c4, rt1.c6, rt1.c5 FROM vt64, rt1 GROUP BY rt1.c4, rt1.c6, rt1.c5;
SELECT SUM(rt1.c4) FROM rt1 ORDER BY ((((((((((((((rt1.c3)AND(rt1.c1)))AND(rt1.c2)))OR(rt1.c5)))OR(rt1.c6)))OR(rt1.c3)))AND('650547517')))>(LIKE(rt1.c3, rt1.c5, 'f')));
SELECT ALL * FROM rt1;
SELECT ALL * FROM rt1 WHERE (NULL) UNION ALL SELECT * FROM rt1 WHERE ((NOT (NULL))) UNION ALL SELECT ALL * FROM rt1 WHERE (((NULL) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT vt64.c0 FROM vt64;
SELECT DISTINCT vt64.c0 FROM vt64 WHERE (((vt64.c0 COLLATE BINARY)IS(((vt64.lid) IS FALSE)))) UNION SELECT DISTINCT vt64.c0 FROM vt64 WHERE ((NOT (((vt64.c0 COLLATE BINARY)IS(((vt64.lid) IS FALSE)))))) UNION SELECT DISTINCT vt64.c0 FROM vt64 WHERE (((((vt64.c0 COLLATE BINARY)IS(((vt64.lid) IS FALSE)))) ISNULL));
SELECT DISTINCT vt64.c0 FROM vt64;
SELECT rt1.c1, vt64.c0, rt1.c3, rt1.c2, rt1.c0, rt1.c4, rt1.c5, vt64.lid, rt1.c6 FROM rt1, vt64 GROUP BY rt1.c1, vt64.c0, rt1.c3, rt1.c2, rt1.c0, rt1.c4, rt1.c5, vt64.lid, rt1.c6;
SELECT ALL rt1.c1, vt64.c0, rt1.c3, rt1.c2, rt1.c0, rt1.c4, rt1.c5, vt64.lid, rt1.c6 FROM rt1, vt64 WHERE (vt64.c0) GROUP BY rt1.c1, vt64.c0, rt1.c3, rt1.c2, rt1.c0, rt1.c4, rt1.c5, vt64.lid, rt1.c6 UNION SELECT ALL rt1.c1, vt64.c0, rt1.c3, rt1.c2, rt1.c0, rt1.c4, rt1.c5, vt64.lid, rt1.c6 FROM rt1, vt64 WHERE ((NOT (vt64.c0))) GROUP BY rt1.c1, vt64.c0, rt1.c3, rt1.c2, rt1.c0, rt1.c4, rt1.c5, vt64.lid, rt1.c6 UNION SELECT rt1.c1, vt64.c0, rt1.c3, rt1.c2, rt1.c0, rt1.c4, rt1.c5, vt64.lid, rt1.c6 FROM rt1, vt64 WHERE (((vt64.c0) ISNULL)) GROUP BY rt1.c1, vt64.c0, rt1.c3, rt1.c2, rt1.c0, rt1.c4, rt1.c5, vt64.lid, rt1.c6;
SELECT rt1.c1, vt64.c0, rt1.c3, rt1.c2, rt1.c0, rt1.c4, rt1.c5, vt64.lid, rt1.c6 FROM rt1, vt64 GROUP BY rt1.c1, vt64.c0, rt1.c3, rt1.c2, rt1.c0, rt1.c4, rt1.c5, vt64.lid, rt1.c6;
SELECT rt1.c1, vt64.c0, vt64.lid, rt1.c3, rt1.c5, rt1.c4, rt1.c6, rt1.c0 FROM vt64, rt1 GROUP BY rt1.c1, vt64.c0, vt64.lid, rt1.c3, rt1.c5, rt1.c4, rt1.c6, rt1.c0;
SELECT rt1.c1, vt64.c0, vt64.lid, rt1.c3, rt1.c5, rt1.c4, rt1.c6, rt1.c0 FROM vt64, rt1 GROUP BY rt1.c1, vt64.c0, vt64.lid, rt1.c3, rt1.c5, rt1.c4, rt1.c6, rt1.c0 HAVING 0X60047fc2 UNION ALL SELECT rt1.c1, vt64.c0, vt64.lid, rt1.c3, rt1.c5, rt1.c4, rt1.c6, rt1.c0 FROM vt64, rt1 GROUP BY rt1.c1, vt64.c0, vt64.lid, rt1.c3, rt1.c5, rt1.c4, rt1.c6, rt1.c0 HAVING (NOT (0X60047fc2)) UNION ALL SELECT ALL rt1.c1, vt64.c0, vt64.lid, rt1.c3, rt1.c5, rt1.c4, rt1.c6, rt1.c0 FROM vt64, rt1 GROUP BY rt1.c1, vt64.c0, vt64.lid, rt1.c3, rt1.c5, rt1.c4, rt1.c6, rt1.c0 HAVING ((0x60047fc2) ISNULL);
SELECT rt1.c1, vt64.c0, vt64.lid, rt1.c3, rt1.c5, rt1.c4, rt1.c6, rt1.c0 FROM vt64, rt1 GROUP BY rt1.c1, vt64.c0, vt64.lid, rt1.c3, rt1.c5, rt1.c4, rt1.c6, rt1.c0;
SELECT rt1.c1, vt64.c0, vt64.lid, rt1.c3, rt1.c5, rt1.c4, rt1.c6, rt1.c0 FROM vt64, rt1 GROUP BY rt1.c1, vt64.c0, vt64.lid, rt1.c3, rt1.c5, rt1.c4, rt1.c6, rt1.c0 HAVING 0X60047fc2 UNION ALL SELECT rt1.c1, vt64.c0, vt64.lid, rt1.c3, rt1.c5, rt1.c4, rt1.c6, rt1.c0 FROM vt64, rt1 GROUP BY rt1.c1, vt64.c0, vt64.lid, rt1.c3, rt1.c5, rt1.c4, rt1.c6, rt1.c0 HAVING (NOT (0X60047fc2)) UNION ALL SELECT ALL rt1.c1, vt64.c0, vt64.lid, rt1.c3, rt1.c5, rt1.c4, rt1.c6, rt1.c0 FROM vt64, rt1 GROUP BY rt1.c1, vt64.c0, vt64.lid, rt1.c3, rt1.c5, rt1.c4, rt1.c6, rt1.c0 HAVING ((0x60047fc2) ISNULL);
SELECT rt1.c1, vt64.c0, vt64.lid, rt1.c3, rt1.c5, rt1.c4, rt1.c6, rt1.c0 FROM vt64, rt1 GROUP BY rt1.c1, vt64.c0, vt64.lid, rt1.c3, rt1.c5, rt1.c4, rt1.c6, rt1.c0;
SELECT * FROM rt1;
SELECT * FROM rt1 WHERE (((((rt1.c1)<=(rt1.c4))) NOT NULL)) UNION ALL SELECT * FROM rt1 WHERE ((NOT (((((rt1.c1)<=(rt1.c4))) NOT NULL)))) UNION ALL SELECT ALL * FROM rt1 WHERE (((((((rt1.c1)<=(rt1.c4))) NOT NULL)) ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT * FROM vt64;
SELECT DISTINCT * FROM vt64 WHERE (LIKELY(DISTINCT (vt64.lid IN ()))) UNION SELECT DISTINCT * FROM vt64 WHERE ((NOT (LIKELY(DISTINCT (vt64.lid IN ()))))) UNION SELECT DISTINCT * FROM vt64 WHERE (((LIKELY(DISTINCT (vt64.lid IN ()))) ISNULL));
SELECT DISTINCT * FROM vt64;
SELECT ALL rt1.c6, vt64.lid, rt1.c2, rt1.c4, vt64.c0, rt1.c0 FROM vt64, rt1 GROUP BY rt1.c6, vt64.lid, rt1.c2, rt1.c4, vt64.c0, rt1.c0;
SELECT rt1.c6, vt64.lid, rt1.c2, rt1.c4, vt64.c0, rt1.c0 FROM vt64, rt1 WHERE ((((vt64.c0 COLLATE BINARY, vt64.c0, json(rt1.c2)))<=((((rt1.c6)&(rt1.c2)), rt1.c3 COLLATE RTRIM, rt1.c5)))) GROUP BY rt1.c6, vt64.lid, rt1.c2, rt1.c4, vt64.c0, rt1.c0 UNION SELECT ALL rt1.c6, vt64.lid, rt1.c2, rt1.c4, vt64.c0, rt1.c0 FROM vt64, rt1 WHERE ((NOT ((((vt64.c0 COLLATE BINARY, vt64.c0, json(rt1.c2)))<=((((rt1.c6)&(rt1.c2)), rt1.c3 COLLATE RTRIM, rt1.c5)))))) GROUP BY rt1.c6, vt64.lid, rt1.c2, rt1.c4, vt64.c0, rt1.c0 UNION SELECT ALL rt1.c6, vt64.lid, rt1.c2, rt1.c4, vt64.c0, rt1.c0 FROM vt64 NOT INDEXED, rt1 WHERE ((((((vt64.c0 COLLATE BINARY, vt64.c0, json(rt1.c2)))<=((((rt1.c6)&(rt1.c2)), rt1.c3 COLLATE RTRIM, rt1.c5)))) ISNULL)) GROUP BY rt1.c6, vt64.lid, rt1.c2, rt1.c4, vt64.c0, rt1.c0;
SELECT ALL rt1.c6, vt64.lid, rt1.c2, rt1.c4, vt64.c0, rt1.c0 FROM vt64, rt1 GROUP BY rt1.c6, vt64.lid, rt1.c2, rt1.c4, vt64.c0, rt1.c0;
SELECT vt64.lid, rt1.c3, rt1.c2, rt1.c0 FROM rt1, vt64 GROUP BY vt64.lid, rt1.c3, rt1.c2, rt1.c0;
SELECT vt64.lid, rt1.c3, rt1.c2, rt1.c0 FROM rt1, vt64 GROUP BY vt64.lid, rt1.c3, rt1.c2, rt1.c0 HAVING MIN(((rt1.c6) BETWEEN (rt1.c4) AND (rt1.c0))) UNION ALL SELECT vt64.lid, rt1.c3, rt1.c2, rt1.c0 FROM rt1, vt64 GROUP BY vt64.lid, rt1.c3, rt1.c2, rt1.c0 HAVING (NOT (MIN(((rt1.c6) BETWEEN (rt1.c4) AND (rt1.c0))))) UNION ALL SELECT ALL vt64.lid, rt1.c3, rt1.c2, rt1.c0 FROM rt1, vt64 GROUP BY vt64.lid, rt1.c3, rt1.c2, rt1.c0 HAVING ((MIN(((rt1.c6) BETWEEN (rt1.c4) AND (rt1.c0)))) ISNULL);
SELECT vt64.lid, rt1.c3, rt1.c2, rt1.c0 FROM rt1, vt64 GROUP BY vt64.lid, rt1.c3, rt1.c2, rt1.c0;
SELECT vt64.lid, rt1.c3, rt1.c2, rt1.c0 FROM rt1, vt64 GROUP BY vt64.lid, rt1.c3, rt1.c2, rt1.c0 HAVING MIN(((rt1.c6) BETWEEN (rt1.c4) AND (rt1.c0))) UNION ALL SELECT vt64.lid, rt1.c3, rt1.c2, rt1.c0 FROM rt1, vt64 GROUP BY vt64.lid, rt1.c3, rt1.c2, rt1.c0 HAVING (NOT (MIN(((rt1.c6) BETWEEN (rt1.c4) AND (rt1.c0))))) UNION ALL SELECT ALL vt64.lid, rt1.c3, rt1.c2, rt1.c0 FROM rt1, vt64 GROUP BY vt64.lid, rt1.c3, rt1.c2, rt1.c0 HAVING ((MIN(((rt1.c6) BETWEEN (rt1.c4) AND (rt1.c0)))) ISNULL);
SELECT vt64.lid, rt1.c3, rt1.c2, rt1.c0 FROM rt1, vt64 GROUP BY vt64.lid, rt1.c3, rt1.c2, rt1.c0;
SELECT * FROM rt1, vt64;
SELECT * FROM rt1, vt64 WHERE (TRIM(DISTINCT CASE WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c3 THEN rt1.c2 WHEN vt64.c0 THEN rt1.c4 END)) UNION ALL SELECT ALL * FROM rt1, vt64 WHERE ((NOT (TRIM(DISTINCT CASE WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c3 THEN rt1.c2 WHEN vt64.c0 THEN rt1.c4 END)))) UNION ALL SELECT ALL * FROM rt1, vt64 WHERE (((TRIM(DISTINCT CASE WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c3 THEN rt1.c2 WHEN vt64.c0 THEN rt1.c4 END)) ISNULL));
SELECT * FROM rt1, vt64;
SELECT DISTINCT rt1.c3, rt1.c0, rt1.c1 FROM rt1;
SELECT DISTINCT rt1.c3, rt1.c0, rt1.c1 FROM rt1 WHERE ((((rt1.c1)) BETWEEN ((rt1.c3)) AND ((rt1.c3))) COLLATE NOCASE) UNION SELECT DISTINCT rt1.c3, rt1.c0, rt1.c1 FROM rt1 WHERE ((NOT ((((rt1.c1)) BETWEEN ((rt1.c3)) AND ((rt1.c3))) COLLATE NOCASE))) UNION SELECT DISTINCT rt1.c3, rt1.c0, rt1.c1 FROM rt1 WHERE ((((((rt1.c1)) BETWEEN ((rt1.c3)) AND ((rt1.c3))) COLLATE NOCASE) ISNULL));
SELECT DISTINCT rt1.c3, rt1.c0, rt1.c1 FROM rt1;
SELECT ALL rt1.c6, vt64.c0, rt1.c0, rt1.c1, rt1.c3, rt1.c5, rt1.c2, vt64.lid, rt1.c4 FROM rt1, vt64 GROUP BY rt1.c6, vt64.c0, rt1.c0, rt1.c1, rt1.c3, rt1.c5, rt1.c2, vt64.lid, rt1.c4;
SELECT ALL rt1.c6, vt64.c0, rt1.c0, rt1.c1, rt1.c3, rt1.c5, rt1.c2, vt64.lid, rt1.c4 FROM rt1, vt64 WHERE (((((rt1.c6) IS TRUE)) NOT BETWEEN ((~ (rt1.c6))) AND ((rt1.c6 IN (rt1.c2, rt1.c4))))) GROUP BY rt1.c6, vt64.c0, rt1.c0, rt1.c1, rt1.c3, rt1.c5, rt1.c2, vt64.lid, rt1.c4 UNION SELECT ALL rt1.c6, vt64.c0, rt1.c0, rt1.c1, rt1.c3, rt1.c5, rt1.c2, vt64.lid, rt1.c4 FROM rt1, vt64 WHERE ((NOT (((((rt1.c6) IS TRUE)) NOT BETWEEN ((~ (rt1.c6))) AND ((rt1.c6 IN (rt1.c2, rt1.c4))))))) GROUP BY rt1.c6, vt64.c0, rt1.c0, rt1.c1, rt1.c3, rt1.c5, rt1.c2, vt64.lid, rt1.c4 UNION SELECT rt1.c6, vt64.c0, rt1.c0, rt1.c1, rt1.c3, rt1.c5, rt1.c2, vt64.lid, rt1.c4 FROM rt1, vt64 WHERE (((((((rt1.c6) IS TRUE)) NOT BETWEEN ((~ (rt1.c6))) AND ((rt1.c6 IN (rt1.c2, rt1.c4))))) ISNULL)) GROUP BY rt1.c6, vt64.c0, rt1.c0, rt1.c1, rt1.c3, rt1.c5, rt1.c2, vt64.lid, rt1.c4;
SELECT ALL rt1.c6, vt64.c0, rt1.c0, rt1.c1, rt1.c3, rt1.c5, rt1.c2, vt64.lid, rt1.c4 FROM rt1, vt64 GROUP BY rt1.c6, vt64.c0, rt1.c0, rt1.c1, rt1.c3, rt1.c5, rt1.c2, vt64.lid, rt1.c4;
SELECT ALL rt1.c4, vt64.lid FROM rt1 FULL OUTER JOIN vt64 ON (~ ((+ (vt64.lid)))) GROUP BY rt1.c4, vt64.lid;
SELECT rt1.c4, vt64.lid FROM rt1 FULL OUTER JOIN vt64 ON (~ ((+ (vt64.lid)))) GROUP BY rt1.c4, vt64.lid HAVING MAX(GROUP_CONCAT(AVG(rt1.c2))) UNION ALL SELECT ALL rt1.c4, vt64.lid FROM rt1 FULL OUTER JOIN vt64 ON (~ ((+ (vt64.lid)))) GROUP BY rt1.c4, vt64.lid HAVING (NOT (MAX(GROUP_CONCAT(AVG(rt1.c2))))) UNION ALL SELECT ALL rt1.c4, vt64.lid FROM rt1 FULL OUTER JOIN vt64 ON (~ ((+ (vt64.lid)))) GROUP BY rt1.c4, vt64.lid HAVING ((MAX(GROUP_CONCAT(AVG(rt1.c2)))) ISNULL);
SELECT ALL * FROM rt1;
SELECT * FROM rt1 WHERE (CASE WHEN ((((rt1.c5)OR(rt1.c3)))OR(rt1.c0)) THEN rt1.c1 ELSE ((rt1.c1)&(rt1.c4)) END) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT (CASE WHEN ((((rt1.c5)OR(rt1.c3)))OR(rt1.c0)) THEN rt1.c1 ELSE ((rt1.c1)&(rt1.c4)) END))) UNION ALL SELECT ALL * FROM rt1 WHERE (((CASE WHEN ((((rt1.c5)OR(rt1.c3)))OR(rt1.c0)) THEN rt1.c1 ELSE ((rt1.c1)&(rt1.c4)) END) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT rt1.c0, rt1.c5, rt1.c2, rt1.c6, rt1.c4, rt1.c3, rt1.c1 FROM rt1 NOT INDEXED;
SELECT DISTINCT rt1.c0, rt1.c5, rt1.c2, rt1.c6, rt1.c4, rt1.c3, rt1.c1 FROM rt1 WHERE (rt1.c2) UNION SELECT DISTINCT rt1.c0, rt1.c5, rt1.c2, rt1.c6, rt1.c4, rt1.c3, rt1.c1 FROM rt1 WHERE ((NOT (rt1.c2))) UNION SELECT DISTINCT rt1.c0, rt1.c5, rt1.c2, rt1.c6, rt1.c4, rt1.c3, rt1.c1 FROM rt1 WHERE (((rt1.c2) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c5, rt1.c2, rt1.c6, rt1.c4, rt1.c3, rt1.c1 FROM rt1 NOT INDEXED;
SELECT rt1.c4, rt1.c0, rt1.c6, rt1.c5, vt64.lid, rt1.c2, vt64.c0 FROM vt64, rt1 GROUP BY rt1.c4, rt1.c0, rt1.c6, rt1.c5, vt64.lid, rt1.c2, vt64.c0;
SELECT ALL rt1.c4, rt1.c0, rt1.c6, rt1.c5, vt64.lid, rt1.c2, vt64.c0 FROM vt64, rt1 WHERE (((((rt1.c2 COLLATE NOCASE)AND(((rt1.c4) NOTNULL))))AND(((((rt1.c5)OR(rt1.c1)))OR(rt1.c1))))) GROUP BY rt1.c4, rt1.c0, rt1.c6, rt1.c5, vt64.lid, rt1.c2, vt64.c0 UNION SELECT rt1.c4, rt1.c0, rt1.c6, rt1.c5, vt64.lid, rt1.c2, vt64.c0 FROM vt64, rt1 WHERE ((NOT (((((rt1.c2 COLLATE NOCASE)AND(((rt1.c4) NOTNULL))))AND(((((rt1.c5)OR(rt1.c1)))OR(rt1.c1))))))) GROUP BY rt1.c4, rt1.c0, rt1.c6, rt1.c5, vt64.lid, rt1.c2, vt64.c0 UNION SELECT ALL rt1.c4, rt1.c0, rt1.c6, rt1.c5, vt64.lid, rt1.c2, vt64.c0 FROM vt64, rt1 WHERE (((((((rt1.c2 COLLATE NOCASE)AND(((rt1.c4) NOTNULL))))AND(((((rt1.c5)OR(rt1.c1)))OR(rt1.c1))))) ISNULL)) GROUP BY rt1.c4, rt1.c0, rt1.c6, rt1.c5, vt64.lid, rt1.c2, vt64.c0;
SELECT rt1.c4, rt1.c0, rt1.c6, rt1.c5, vt64.lid, rt1.c2, vt64.c0 FROM vt64, rt1 GROUP BY rt1.c4, rt1.c0, rt1.c6, rt1.c5, vt64.lid, rt1.c2, vt64.c0;
SELECT ALL vt64.c0 FROM vt64 GROUP BY vt64.c0;
SELECT vt64.c0 FROM vt64 GROUP BY vt64.c0 HAVING AVG(AVG(vt64.c0)) UNION ALL SELECT vt64.c0 FROM vt64 GROUP BY vt64.c0 HAVING (NOT (AVG(AVG(vt64.c0)))) UNION ALL SELECT ALL vt64.c0 FROM vt64 GROUP BY vt64.c0 HAVING ((AVG(AVG(vt64.c0))) ISNULL);
SELECT ALL vt64.c0, vt64.lid FROM vt64;
SELECT ALL vt64.c0, vt64.lid FROM vt64 WHERE (CAST(vt64.c0 AS BLOB)) UNION ALL SELECT ALL vt64.c0, vt64.lid FROM vt64 WHERE ((NOT (CAST(vt64.c0 AS BLOB)))) UNION ALL SELECT vt64.c0, vt64.lid FROM vt64 WHERE (((CAST(vt64.c0 AS BLOB)) ISNULL));
SELECT ALL vt64.c0, vt64.lid FROM vt64;
SELECT DISTINCT * FROM rt1, vt64;
SELECT DISTINCT * FROM rt1, vt64 WHERE (((CASE WHEN rt1.c0 THEN '962269749' END)>>(((rt1.c5)IS(rt1.c6))))) UNION SELECT DISTINCT * FROM rt1, vt64 WHERE ((NOT (((CASE WHEN rt1.c0 THEN '962269749' END)>>(((rt1.c5)IS(rt1.c6))))))) UNION SELECT DISTINCT * FROM rt1 NOT INDEXED, vt64 WHERE (((((CASE WHEN rt1.c0 THEN '962269749' END)>>(((rt1.c5)IS(rt1.c6))))) ISNULL));
SELECT DISTINCT * FROM rt1, vt64;
SELECT rt1.c2, rt1.c1, vt64.c0, rt1.c4, rt1.c6, rt1.c0, rt1.c3, vt64.lid FROM vt64, rt1 GROUP BY rt1.c2, rt1.c1, vt64.c0, rt1.c4, rt1.c6, rt1.c0, rt1.c3, vt64.lid;
SELECT ALL rt1.c2, rt1.c1, vt64.c0, rt1.c4, rt1.c6, rt1.c0, rt1.c3, vt64.lid FROM vt64, rt1 WHERE ((((vt64.c0 IN ())) BETWEEN (((rt1.c5) NOT BETWEEN (rt1.c0) AND (rt1.c1))) AND (rt1.c4))) GROUP BY rt1.c2, rt1.c1, vt64.c0, rt1.c4, rt1.c6, rt1.c0, rt1.c3, vt64.lid UNION SELECT ALL rt1.c2, rt1.c1, vt64.c0, rt1.c4, rt1.c6, rt1.c0, rt1.c3, vt64.lid FROM vt64, rt1 WHERE ((NOT ((((vt64.c0 IN ())) BETWEEN (((rt1.c5) NOT BETWEEN (rt1.c0) AND (rt1.c1))) AND (rt1.c4))))) GROUP BY rt1.c2, rt1.c1, vt64.c0, rt1.c4, rt1.c6, rt1.c0, rt1.c3, vt64.lid UNION SELECT rt1.c2, rt1.c1, vt64.c0, rt1.c4, rt1.c6, rt1.c0, rt1.c3, vt64.lid FROM vt64, rt1 WHERE ((((((vt64.c0 IN ())) BETWEEN (((rt1.c5) NOT BETWEEN (rt1.c0) AND (rt1.c1))) AND (rt1.c4))) ISNULL)) GROUP BY rt1.c2, rt1.c1, vt64.c0, rt1.c4, rt1.c6, rt1.c0, rt1.c3, vt64.lid;
SELECT rt1.c2, rt1.c1, vt64.c0, rt1.c4, rt1.c6, rt1.c0, rt1.c3, vt64.lid FROM vt64, rt1 GROUP BY rt1.c2, rt1.c1, vt64.c0, rt1.c4, rt1.c6, rt1.c0, rt1.c3, vt64.lid;
SELECT vt64.lid, vt64.c0 FROM vt64 GROUP BY vt64.lid, vt64.c0;
SELECT vt64.lid, vt64.c0 FROM vt64 GROUP BY vt64.lid, vt64.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt64.lid, vt64.c0 FROM vt64 GROUP BY vt64.lid, vt64.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt64.lid, vt64.c0 FROM vt64 GROUP BY vt64.lid, vt64.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt64.lid, vt64.c0 FROM vt64 GROUP BY vt64.lid, vt64.c0;
SELECT vt64.lid, vt64.c0 FROM vt64 GROUP BY vt64.lid, vt64.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt64.lid, vt64.c0 FROM vt64 GROUP BY vt64.lid, vt64.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt64.lid, vt64.c0 FROM vt64 GROUP BY vt64.lid, vt64.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt64.lid, vt64.c0 FROM vt64 GROUP BY vt64.lid, vt64.c0;
SELECT * FROM vt64, rt1;
SELECT ALL * FROM vt64, rt1 WHERE ((('939732202')<(((((rt1.c4)AND(vt64.lid)))AND(vt64.lid))))) UNION ALL SELECT ALL * FROM vt64, rt1 WHERE ((NOT ((('939732202')<(((((rt1.c4)AND(vt64.lid)))AND(vt64.lid))))))) UNION ALL SELECT * FROM vt64, rt1 WHERE ((((('939732202')<(((((rt1.c4)AND(vt64.lid)))AND(vt64.lid))))) ISNULL));
SELECT * FROM vt64, rt1;
SELECT DISTINCT * FROM vt64;
SELECT DISTINCT * FROM vt64 WHERE ((((~ (vt64.lid)))<(((vt64.c0) NOTNULL)))) UNION SELECT DISTINCT * FROM vt64 WHERE ((NOT ((((~ (vt64.lid)))<(((vt64.c0) NOTNULL)))))) UNION SELECT DISTINCT * FROM vt64 WHERE ((((((~ (vt64.lid)))<(((vt64.c0) NOTNULL)))) ISNULL));
SELECT DISTINCT * FROM vt64;
SELECT ALL rt1.c2, rt1.c1, rt1.c3, rt1.c5, rt1.c4 FROM vt64 LEFT OUTER JOIN rt1 ON (CAST(vt64.c0 AS NUMERIC) IN ()) GROUP BY rt1.c2, rt1.c1, rt1.c3, rt1.c5, rt1.c4;
SELECT ALL rt1.c2, rt1.c1, rt1.c3, rt1.c5, rt1.c4 FROM vt64 LEFT OUTER JOIN rt1 ON (CAST(vt64.c0 AS NUMERIC) IN ()) WHERE (((rt1.c1) IS FALSE)) GROUP BY rt1.c2, rt1.c1, rt1.c3, rt1.c5, rt1.c4 UNION SELECT ALL rt1.c2, rt1.c1, rt1.c3, rt1.c5, rt1.c4 FROM vt64 NOT INDEXED LEFT OUTER JOIN rt1 ON (CAST(vt64.c0 AS NUMERIC) IN ()) WHERE ((NOT (((rt1.c1) IS FALSE)))) GROUP BY rt1.c2, rt1.c1, rt1.c3, rt1.c5, rt1.c4 UNION SELECT rt1.c2, rt1.c1, rt1.c3, rt1.c5, rt1.c4 FROM vt64 LEFT OUTER JOIN rt1 ON (CAST(vt64.c0 AS NUMERIC) IN ()) WHERE (((((rt1.c1) IS FALSE)) ISNULL)) GROUP BY rt1.c2, rt1.c1, rt1.c3, rt1.c5, rt1.c4;
SELECT ALL rt1.c2, rt1.c1, rt1.c3, rt1.c5, rt1.c4 FROM vt64 LEFT OUTER JOIN rt1 ON (CAST(vt64.c0 AS NUMERIC) IN ()) GROUP BY rt1.c2, rt1.c1, rt1.c3, rt1.c5, rt1.c4;
SELECT rt1.c0, rt1.c1, rt1.c4 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c4;
SELECT rt1.c0, rt1.c1, rt1.c4 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c4 HAVING AVG(TOTAL('0.32789829310923835')) UNION ALL SELECT rt1.c0, rt1.c1, rt1.c4 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c4 HAVING (NOT (AVG(TOTAL('0.32789829310923835')))) UNION ALL SELECT rt1.c0, rt1.c1, rt1.c4 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c4 HAVING ((AVG(TOTAL('0.32789829310923835'))) ISNULL);
SELECT * FROM vt64, rt1;
SELECT * FROM vt64, rt1 WHERE (((((((rt1.c2)AND(rt1.c4)))AND(x'033a'))) BETWEEN ((rt1.c0 IN ())) AND (CASE WHEN vt64.lid THEN rt1.c6 ELSE rt1.c1 END))) UNION ALL SELECT * FROM vt64, rt1 WHERE ((NOT (((((((rt1.c2)AND(rt1.c4)))AND(x'033a'))) BETWEEN ((rt1.c0 IN ())) AND (CASE WHEN vt64.lid THEN rt1.c6 ELSE rt1.c1 END))))) UNION ALL SELECT ALL * FROM vt64, rt1 WHERE (((((((((rt1.c2)AND(rt1.c4)))AND(x'033a'))) BETWEEN ((rt1.c0 IN ())) AND (CASE WHEN vt64.lid THEN rt1.c6 ELSE rt1.c1 END))) ISNULL));
SELECT * FROM vt64, rt1;
SELECT DISTINCT vt64.c0 FROM vt64;
SELECT DISTINCT vt64.c0 FROM vt64 WHERE (CASE ((vt64.lid) IS FALSE)  WHEN vt64.c0 THEN (vt64.lid IN ()) WHEN ((vt64.lid) NOT BETWEEN (vt64.lid) AND (vt64.lid)) THEN (+ (vt64.lid)) WHEN vt64.lid COLLATE NOCASE THEN ((vt64.lid)-(x'e2a8')) END) UNION SELECT DISTINCT vt64.c0 FROM vt64 WHERE ((NOT (CASE ((vt64.lid) IS FALSE)  WHEN vt64.c0 THEN (vt64.lid IN ()) WHEN ((vt64.lid) NOT BETWEEN (vt64.lid) AND (vt64.lid)) THEN (+ (vt64.lid)) WHEN vt64.lid COLLATE NOCASE THEN ((vt64.lid)-(x'e2a8')) END))) UNION SELECT DISTINCT vt64.c0 FROM vt64 WHERE (((CASE ((vt64.lid) IS FALSE)  WHEN vt64.c0 THEN (vt64.lid IN ()) WHEN ((vt64.lid) NOT BETWEEN (vt64.lid) AND (vt64.lid)) THEN (+ (vt64.lid)) WHEN vt64.lid COLLATE NOCASE THEN ((vt64.lid)-(x'e2a8')) END) ISNULL));
SELECT DISTINCT vt64.c0 FROM vt64;
SELECT rt1.c2, rt1.c0, vt64.lid, rt1.c5, rt1.c4, vt64.c0, rt1.c1, rt1.c6, rt1.c3 FROM vt64 NATURAL JOIN rt1 GROUP BY rt1.c2, rt1.c0, vt64.lid, rt1.c5, rt1.c4, vt64.c0, rt1.c1, rt1.c6, rt1.c3;
SELECT rt1.c2, rt1.c0, vt64.lid, rt1.c5, rt1.c4, vt64.c0, rt1.c1, rt1.c6, rt1.c3 FROM vt64 NATURAL JOIN rt1 WHERE ((+ (((vt64.c0) BETWEEN (rt1.c6) AND (rt1.c4))))) GROUP BY rt1.c2, rt1.c0, vt64.lid, rt1.c5, rt1.c4, vt64.c0, rt1.c1, rt1.c6, rt1.c3 UNION SELECT rt1.c2, rt1.c0, vt64.lid, rt1.c5, rt1.c4, vt64.c0, rt1.c1, rt1.c6, rt1.c3 FROM vt64 NATURAL JOIN rt1 WHERE ((NOT ((+ (((vt64.c0) BETWEEN (rt1.c6) AND (rt1.c4))))))) GROUP BY rt1.c2, rt1.c0, vt64.lid, rt1.c5, rt1.c4, vt64.c0, rt1.c1, rt1.c6, rt1.c3 UNION SELECT rt1.c2, rt1.c0, vt64.lid, rt1.c5, rt1.c4, vt64.c0, rt1.c1, rt1.c6, rt1.c3 FROM vt64 NATURAL JOIN rt1 WHERE ((((+ (((vt64.c0) BETWEEN (rt1.c6) AND (rt1.c4))))) ISNULL)) GROUP BY rt1.c2, rt1.c0, vt64.lid, rt1.c5, rt1.c4, vt64.c0, rt1.c1, rt1.c6, rt1.c3;
SELECT rt1.c2, rt1.c0, vt64.lid, rt1.c5, rt1.c4, vt64.c0, rt1.c1, rt1.c6, rt1.c3 FROM vt64 NATURAL JOIN rt1 GROUP BY rt1.c2, rt1.c0, vt64.lid, rt1.c5, rt1.c4, vt64.c0, rt1.c1, rt1.c6, rt1.c3;
SELECT ALL vt64.c0 FROM vt64 GROUP BY vt64.c0;
SELECT vt64.c0 FROM vt64 GROUP BY vt64.c0 HAVING TOTAL(AVG(TOTAL(GROUP_CONCAT(vt64.c0)))) UNION ALL SELECT vt64.c0 FROM vt64 GROUP BY vt64.c0 HAVING (NOT (TOTAL(AVG(TOTAL(GROUP_CONCAT(vt64.c0)))))) UNION ALL SELECT vt64.c0 FROM vt64 GROUP BY vt64.c0 HAVING ((TOTAL(AVG(TOTAL(GROUP_CONCAT(vt64.c0))))) ISNULL);
SELECT rt1.c1 FROM vt64, rt1;
SELECT ALL rt1.c1 FROM vt64, rt1 WHERE (NULL) UNION ALL SELECT ALL rt1.c1 FROM vt64, rt1 WHERE ((NOT (NULL))) UNION ALL SELECT rt1.c1 FROM vt64, rt1 WHERE (((NULL) ISNULL));
SELECT rt1.c1 FROM vt64, rt1;
SELECT DISTINCT rt1.c2, vt64.lid, rt1.c6, rt1.c0 FROM vt64 NOT INDEXED, rt1;
SELECT DISTINCT rt1.c2, vt64.lid, rt1.c6, rt1.c0 FROM vt64, rt1 WHERE ((((((vt64.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0))))|(((rt1.c5) BETWEEN (rt1.c4) AND (x''))))) UNION SELECT DISTINCT rt1.c2, vt64.lid, rt1.c6, rt1.c0 FROM vt64, rt1 WHERE ((NOT ((((((vt64.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0))))|(((rt1.c5) BETWEEN (rt1.c4) AND (x''))))))) UNION SELECT DISTINCT rt1.c2, vt64.lid, rt1.c6, rt1.c0 FROM vt64, rt1 WHERE ((((((((vt64.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0))))|(((rt1.c5) BETWEEN (rt1.c4) AND (x''))))) ISNULL));
SELECT DISTINCT rt1.c2, vt64.lid, rt1.c6, rt1.c0 FROM vt64 NOT INDEXED, rt1;
SELECT vt64.c0, rt1.c6, rt1.c2, rt1.c3, vt64.lid, rt1.c5, rt1.c4, rt1.c1 FROM rt1, vt64 GROUP BY vt64.c0, rt1.c6, rt1.c2, rt1.c3, vt64.lid, rt1.c5, rt1.c4, rt1.c1;
SELECT ALL vt64.c0, rt1.c6, rt1.c2, rt1.c3, vt64.lid, rt1.c5, rt1.c4, rt1.c1 FROM rt1, vt64 WHERE ('') GROUP BY vt64.c0, rt1.c6, rt1.c2, rt1.c3, vt64.lid, rt1.c5, rt1.c4, rt1.c1 UNION SELECT ALL vt64.c0, rt1.c6, rt1.c2, rt1.c3, vt64.lid, rt1.c5, rt1.c4, rt1.c1 FROM rt1, vt64 WHERE ((NOT (''))) GROUP BY vt64.c0, rt1.c6, rt1.c2, rt1.c3, vt64.lid, rt1.c5, rt1.c4, rt1.c1 UNION SELECT ALL vt64.c0, rt1.c6, rt1.c2, rt1.c3, vt64.lid, rt1.c5, rt1.c4, rt1.c1 FROM rt1, vt64 WHERE ((('') ISNULL)) GROUP BY vt64.c0, rt1.c6, rt1.c2, rt1.c3, vt64.lid, rt1.c5, rt1.c4, rt1.c1;
SELECT vt64.c0, rt1.c6, rt1.c2, rt1.c3, vt64.lid, rt1.c5, rt1.c4, rt1.c1 FROM rt1, vt64 GROUP BY vt64.c0, rt1.c6, rt1.c2, rt1.c3, vt64.lid, rt1.c5, rt1.c4, rt1.c1;
SELECT ALL vt64.c0, vt64.lid FROM vt64 GROUP BY vt64.c0, vt64.lid;
SELECT vt64.c0, vt64.lid FROM vt64 GROUP BY vt64.c0, vt64.lid HAVING AVG(MAX(vt64.lid)) UNION ALL SELECT ALL vt64.c0, vt64.lid FROM vt64 GROUP BY vt64.c0, vt64.lid HAVING (NOT (AVG(MAX(vt64.lid)))) UNION ALL SELECT ALL vt64.c0, vt64.lid FROM vt64 GROUP BY vt64.c0, vt64.lid HAVING ((AVG(MAX(vt64.lid))) ISNULL);
SELECT ALL * FROM rt1;
SELECT * FROM rt1 WHERE (CASE WHEN ('' IN ()) THEN (((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1))) WHEN ((rt1.c6)<>(rt1.c4)) THEN NULLIF(DISTINCT rt1.c1, rt1.c1) WHEN ((rt1.c0) NOT BETWEEN (rt1.c1) AND ('+&k''j')) THEN rt1.c2 COLLATE BINARY ELSE ABS(rt1.c1) END) UNION ALL SELECT * FROM rt1 WHERE ((NOT (CASE WHEN ('' IN ()) THEN (((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1))) WHEN ((rt1.c6)!=(rt1.c4)) THEN NULLIF(DISTINCT rt1.c1, rt1.c1) WHEN ((rt1.c0) NOT BETWEEN (rt1.c1) AND ('+&k''j')) THEN rt1.c2 COLLATE BINARY ELSE ABS(rt1.c1) END))) UNION ALL SELECT * FROM rt1 WHERE (((CASE WHEN ('' IN ()) THEN (((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1))) WHEN ((rt1.c6)!=(rt1.c4)) THEN NULLIF(DISTINCT rt1.c1, rt1.c1) WHEN ((rt1.c0) NOT BETWEEN (rt1.c1) AND ('+&k''j')) THEN rt1.c2 COLLATE BINARY ELSE ABS(rt1.c1) END) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT rt1.c4, vt64.lid, rt1.c0, rt1.c5, rt1.c6, rt1.c3, rt1.c1, vt64.c0, rt1.c2 FROM vt64, rt1;
SELECT DISTINCT rt1.c4, vt64.lid, rt1.c0, rt1.c5, rt1.c6, rt1.c3, rt1.c1, vt64.c0, rt1.c2 FROM vt64, rt1 WHERE (CAST((rt1.c5 IN (rt1.c0)) AS TEXT)) UNION SELECT DISTINCT rt1.c4, vt64.lid, rt1.c0, rt1.c5, rt1.c6, rt1.c3, rt1.c1, vt64.c0, rt1.c2 FROM vt64, rt1 WHERE ((NOT (CAST((rt1.c5 IN (rt1.c0)) AS TEXT)))) UNION SELECT DISTINCT rt1.c4, vt64.lid, rt1.c0, rt1.c5, rt1.c6, rt1.c3, rt1.c1, vt64.c0, rt1.c2 FROM vt64, rt1 WHERE (((CAST((rt1.c5 IN (rt1.c0)) AS TEXT)) ISNULL));
SELECT DISTINCT rt1.c4, vt64.lid, rt1.c0, rt1.c5, rt1.c6, rt1.c3, rt1.c1, vt64.c0, rt1.c2 FROM vt64, rt1;
SELECT ALL vt64.c0, vt64.lid FROM vt64 GROUP BY vt64.c0, vt64.lid;
SELECT ALL vt64.c0, vt64.lid FROM vt64 WHERE ((+ ((vt64.c0 IN ())))) GROUP BY vt64.c0, vt64.lid UNION SELECT ALL vt64.c0, vt64.lid FROM vt64 WHERE ((NOT ((+ ((vt64.c0 IN ())))))) GROUP BY vt64.c0, vt64.lid UNION SELECT vt64.c0, vt64.lid FROM vt64 WHERE ((((+ ((vt64.c0 IN ())))) ISNULL)) GROUP BY vt64.c0, vt64.lid;
SELECT ALL vt64.c0, vt64.lid FROM vt64 GROUP BY vt64.c0, vt64.lid;
SELECT ALL rt1.c5 FROM rt1 RIGHT OUTER JOIN vt64 ON 0.7764850165201062 GROUP BY rt1.c5;
SELECT rt1.c5 FROM rt1 RIGHT OUTER JOIN vt64 ON 0.7764850165201062 GROUP BY rt1.c5 HAVING COUNT(AVG(vt64.lid)) UNION ALL SELECT rt1.c5 FROM rt1 RIGHT OUTER JOIN vt64 ON 0.7764850165201062 GROUP BY rt1.c5 HAVING (NOT (COUNT(AVG(vt64.lid)))) UNION ALL SELECT rt1.c5 FROM rt1 RIGHT OUTER JOIN vt64 ON 0.7764850165201062 GROUP BY rt1.c5 HAVING ((COUNT(AVG(vt64.lid))) ISNULL);
SELECT ALL * FROM vt64 INNER JOIN rt1 ON x'';
SELECT ALL * FROM vt64 INNER JOIN rt1 ON x'' WHERE (((((rt1.c0)>(rt1.c4))) NOTNULL)) UNION ALL SELECT * FROM vt64 INNER JOIN rt1 ON x'' WHERE ((NOT (((((rt1.c0)>(rt1.c4))) NOTNULL)))) UNION ALL SELECT * FROM vt64 INNER JOIN rt1 ON x'' WHERE (((((((rt1.c0)>(rt1.c4))) NOTNULL)) ISNULL));
SELECT ALL * FROM vt64 INNER JOIN rt1 ON x'';
SELECT DISTINCT vt64.c0, vt64.lid FROM vt64;
SELECT DISTINCT vt64.c0, vt64.lid FROM vt64 WHERE (x'') UNION SELECT DISTINCT vt64.c0, vt64.lid FROM vt64 WHERE ((NOT (x''))) UNION SELECT DISTINCT vt64.c0, vt64.lid FROM vt64 WHERE (((x'') ISNULL));
SELECT DISTINCT vt64.c0, vt64.lid FROM vt64;
SELECT rt1.c2, rt1.c4, rt1.c3, rt1.c0, rt1.c1, rt1.c5, rt1.c6 FROM rt1 GROUP BY rt1.c2, rt1.c4, rt1.c3, rt1.c0, rt1.c1, rt1.c5, rt1.c6;
SELECT rt1.c2, rt1.c4, rt1.c3, rt1.c0, rt1.c1, rt1.c5, rt1.c6 FROM rt1 WHERE (((((rt1.c3) IS TRUE))LIKE(NULL))) GROUP BY rt1.c2, rt1.c4, rt1.c3, rt1.c0, rt1.c1, rt1.c5, rt1.c6 UNION SELECT rt1.c2, rt1.c4, rt1.c3, rt1.c0, rt1.c1, rt1.c5, rt1.c6 FROM rt1 WHERE ((NOT (((((rt1.c3) IS TRUE))LIKE(NULL))))) GROUP BY rt1.c2, rt1.c4, rt1.c3, rt1.c0, rt1.c1, rt1.c5, rt1.c6 UNION SELECT rt1.c2, rt1.c4, rt1.c3, rt1.c0, rt1.c1, rt1.c5, rt1.c6 FROM rt1 WHERE (((((((rt1.c3) IS TRUE))LIKE(NULL))) ISNULL)) GROUP BY rt1.c2, rt1.c4, rt1.c3, rt1.c0, rt1.c1, rt1.c5, rt1.c6;
SELECT rt1.c2, rt1.c4, rt1.c3, rt1.c0, rt1.c1, rt1.c5, rt1.c6 FROM rt1 GROUP BY rt1.c2, rt1.c4, rt1.c3, rt1.c0, rt1.c1, rt1.c5, rt1.c6;
SELECT ALL vt64.lid, vt64.c0 FROM vt64 GROUP BY vt64.lid, vt64.c0;
SELECT ALL vt64.lid, vt64.c0 FROM vt64 GROUP BY vt64.lid, vt64.c0 HAVING (((SUM('-338614341')))>((COUNT(MAX(TOTAL(TOTAL(TOTAL(AVG('405968399'))))))))) UNION ALL SELECT vt64.lid, vt64.c0 FROM vt64 GROUP BY vt64.lid, vt64.c0 HAVING (NOT ((((SUM('-338614341')))>((COUNT(MAX(TOTAL(TOTAL(TOTAL(AVG('405968399'))))))))))) UNION ALL SELECT ALL vt64.lid, vt64.c0 FROM vt64 GROUP BY vt64.lid, vt64.c0 HAVING (((((SUM('-338614341')))>((COUNT(MAX(TOTAL(TOTAL(TOTAL(AVG('405968399')))))))))) ISNULL);
SELECT ALL * FROM vt64;
SELECT * FROM vt64 WHERE (UPPER((vt64.c0 IN ()))) UNION ALL SELECT ALL * FROM vt64 WHERE ((NOT (UPPER((vt64.c0 IN ()))))) UNION ALL SELECT * FROM vt64 WHERE (((UPPER((vt64.c0 IN ()))) ISNULL));
SELECT ALL * FROM vt64;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE ((((rt1.c2 COLLATE BINARY, CASE WHEN rt1.c6 THEN rt1.c0 END, ((NULL)<(rt1.c2))))=((((x'62f0') BETWEEN (rt1.c0) AND (rt1.c0)), '', CASE rt1.c1  WHEN rt1.c6 THEN rt1.c5 WHEN '0.4711772807958118' THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 END)))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT ((((rt1.c2 COLLATE BINARY, CASE WHEN rt1.c6 THEN rt1.c0 END, ((NULL)<(rt1.c2))))=((((x'62f0') BETWEEN (rt1.c0) AND (rt1.c0)), '', CASE rt1.c1  WHEN rt1.c6 THEN rt1.c5 WHEN '0.4711772807958118' THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 END)))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((((((rt1.c2 COLLATE BINARY, CASE WHEN rt1.c6 THEN rt1.c0 END, ((NULL)<(rt1.c2))))==((((x'62f0') BETWEEN (rt1.c0) AND (rt1.c0)), '', CASE rt1.c1  WHEN rt1.c6 THEN rt1.c5 WHEN '0.4711772807958118' THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 END)))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT rt1.c6, rt1.c1, rt1.c2 FROM vt64, rt1 GROUP BY rt1.c6, rt1.c1, rt1.c2;
SELECT ALL rt1.c6, rt1.c1, rt1.c2 FROM vt64, rt1 WHERE (((((((rt1.c1) ISNULL))AND(CASE WHEN vt64.c0 THEN rt1.c6 ELSE rt1.c3 END)))AND(1845185827))) GROUP BY rt1.c6, rt1.c1, rt1.c2 UNION SELECT ALL rt1.c6, rt1.c1, rt1.c2 FROM vt64, rt1 WHERE ((NOT (((((((rt1.c1) ISNULL))AND(CASE WHEN vt64.c0 THEN rt1.c6 ELSE rt1.c3 END)))AND(1845185827))))) GROUP BY rt1.c6, rt1.c1, rt1.c2 UNION SELECT ALL rt1.c6, rt1.c1, rt1.c2 FROM vt64, rt1 WHERE (((((((((rt1.c1) ISNULL))AND(CASE WHEN vt64.c0 THEN rt1.c6 ELSE rt1.c3 END)))AND(1845185827))) ISNULL)) GROUP BY rt1.c6, rt1.c1, rt1.c2;
SELECT rt1.c6, rt1.c1, rt1.c2 FROM vt64, rt1 GROUP BY rt1.c6, rt1.c1, rt1.c2;
SELECT vt64.lid FROM vt64 GROUP BY vt64.lid;
SELECT vt64.lid FROM vt64 GROUP BY vt64.lid HAVING (- (TOTAL(vt64.c0))) UNION ALL SELECT ALL vt64.lid FROM vt64 GROUP BY vt64.lid HAVING (NOT ((- (TOTAL(vt64.c0))))) UNION ALL SELECT vt64.lid FROM vt64 GROUP BY vt64.lid HAVING (((- (TOTAL(vt64.c0)))) ISNULL);
SELECT vt64.lid FROM vt64 GROUP BY vt64.lid;
SELECT vt64.lid FROM vt64 GROUP BY vt64.lid HAVING (- (TOTAL(vt64.c0))) UNION ALL SELECT ALL vt64.lid FROM vt64 GROUP BY vt64.lid HAVING (NOT ((- (TOTAL(vt64.c0))))) UNION ALL SELECT vt64.lid FROM vt64 GROUP BY vt64.lid HAVING (((- (TOTAL(vt64.c0)))) ISNULL);
SELECT vt64.lid FROM vt64 GROUP BY vt64.lid;
SELECT rt1.c2, rt1.c4 FROM rt1;
SELECT ALL rt1.c2, rt1.c4 FROM rt1 WHERE (CASE WHEN UNICODE(rt1.c3) THEN rt1.c3 END) UNION ALL SELECT ALL rt1.c2, rt1.c4 FROM rt1 WHERE ((NOT (CASE WHEN UNICODE(rt1.c3) THEN rt1.c3 END))) UNION ALL SELECT rt1.c2, rt1.c4 FROM rt1 WHERE (((CASE WHEN UNICODE(rt1.c3) THEN rt1.c3 END) ISNULL));
SELECT rt1.c2, rt1.c4 FROM rt1;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (((CAST(rt1.c6 AS TEXT)) BETWEEN (((rt1.c4)<(rt1.c0))) AND (((NULL) NOTNULL)))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (((CAST(rt1.c6 AS TEXT)) BETWEEN (((rt1.c4)<(rt1.c0))) AND (((NULL) NOTNULL)))))) UNION SELECT DISTINCT * FROM rt1 WHERE (((((CAST(rt1.c6 AS TEXT)) BETWEEN (((rt1.c4)<(rt1.c0))) AND (((NULL) NOTNULL)))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT rt1.c3 FROM rt1 GROUP BY rt1.c3;
SELECT ALL rt1.c3 FROM rt1 WHERE (((((CAST(rt1.c1 AS TEXT))AND(((rt1.c6) IS FALSE))))AND(rt1.c6))) GROUP BY rt1.c3 UNION SELECT rt1.c3 FROM rt1 WHERE ((NOT (((((CAST(rt1.c1 AS TEXT))AND(((rt1.c6) IS FALSE))))AND(rt1.c6))))) GROUP BY rt1.c3 UNION SELECT ALL rt1.c3 FROM rt1 WHERE (((((((CAST(rt1.c1 AS TEXT))AND(((rt1.c6) IS FALSE))))AND(rt1.c6))) ISNULL)) GROUP BY rt1.c3;
SELECT rt1.c3 FROM rt1 GROUP BY rt1.c3;
SELECT vt64.lid, vt64.c0 FROM vt64 GROUP BY vt64.lid, vt64.c0;
SELECT ALL vt64.lid, vt64.c0 FROM vt64 GROUP BY vt64.lid, vt64.c0 HAVING MIN(CAST(MAX(MAX(vt64.lid)) AS REAL)) UNION ALL SELECT vt64.lid, vt64.c0 FROM vt64 GROUP BY vt64.lid, vt64.c0 HAVING (NOT (MIN(CAST(MAX(MAX(vt64.lid)) AS REAL)))) UNION ALL SELECT ALL vt64.lid, vt64.c0 FROM vt64 GROUP BY vt64.lid, vt64.c0 HAVING ((MIN(CAST(MAX(MAX(vt64.lid)) AS REAL))) ISNULL);
SELECT * FROM rt1 NATURAL JOIN vt64;
SELECT * FROM rt1 NATURAL JOIN vt64 WHERE ('596373917') UNION ALL SELECT ALL * FROM rt1 NATURAL JOIN vt64 WHERE ((NOT ('596373917'))) UNION ALL SELECT * FROM rt1 NATURAL JOIN vt64 WHERE ((('596373917') ISNULL));
SELECT * FROM rt1 NATURAL JOIN vt64;
SELECT DISTINCT rt1.c5, rt1.c2, rt1.c6, rt1.c3, rt1.c1, rt1.c0 FROM rt1;
SELECT DISTINCT rt1.c5, rt1.c2, rt1.c6, rt1.c3, rt1.c1, rt1.c0 FROM rt1 WHERE ((((((((rt1.c1)OR(rt1.c1)))AND(rt1.c1))))<=(((((rt1.c3, rt1.c0, rt1.c1)) NOT BETWEEN ((rt1.c2, rt1.c3, rt1.c2)) AND (('-1015313223', NULL, rt1.c1))))))) UNION SELECT DISTINCT rt1.c5, rt1.c2, rt1.c6, rt1.c3, rt1.c1, rt1.c0 FROM rt1 WHERE ((NOT ((((((((rt1.c1)OR(rt1.c1)))AND(rt1.c1))))<=(((((rt1.c3, rt1.c0, rt1.c1)) NOT BETWEEN ((rt1.c2, rt1.c3, rt1.c2)) AND (('-1015313223', NULL, rt1.c1))))))))) UNION SELECT DISTINCT rt1.c5, rt1.c2, rt1.c6, rt1.c3, rt1.c1, rt1.c0 FROM rt1 WHERE ((((((((((rt1.c1)OR(rt1.c1)))AND(rt1.c1))))<=(((((rt1.c3, rt1.c0, rt1.c1)) NOT BETWEEN ((rt1.c2, rt1.c3, rt1.c2)) AND (('-1015313223', NULL, rt1.c1))))))) ISNULL));
SELECT DISTINCT rt1.c5, rt1.c2, rt1.c6, rt1.c3, rt1.c1, rt1.c0 FROM rt1;
SELECT ALL rt1.c2, vt64.c0, vt64.lid, rt1.c3, rt1.c4, rt1.c0, rt1.c1, rt1.c6, rt1.c5 FROM rt1, vt64 GROUP BY rt1.c2, vt64.c0, vt64.lid, rt1.c3, rt1.c4, rt1.c0, rt1.c1, rt1.c6, rt1.c5;
SELECT rt1.c2, vt64.c0, vt64.lid, rt1.c3, rt1.c4, rt1.c0, rt1.c1, rt1.c6, rt1.c5 FROM rt1, vt64 WHERE (((HEX(DISTINCT vt64.lid)) NOT NULL)) GROUP BY rt1.c2, vt64.c0, vt64.lid, rt1.c3, rt1.c4, rt1.c0, rt1.c1, rt1.c6, rt1.c5 UNION SELECT rt1.c2, vt64.c0, vt64.lid, rt1.c3, rt1.c4, rt1.c0, rt1.c1, rt1.c6, rt1.c5 FROM rt1, vt64 WHERE ((NOT (((HEX(DISTINCT vt64.lid)) NOT NULL)))) GROUP BY rt1.c2, vt64.c0, vt64.lid, rt1.c3, rt1.c4, rt1.c0, rt1.c1, rt1.c6, rt1.c5 UNION SELECT rt1.c2, vt64.c0, vt64.lid, rt1.c3, rt1.c4, rt1.c0, rt1.c1, rt1.c6, rt1.c5 FROM rt1, vt64 WHERE (((((HEX(DISTINCT vt64.lid)) NOT NULL)) ISNULL)) GROUP BY rt1.c2, vt64.c0, vt64.lid, rt1.c3, rt1.c4, rt1.c0, rt1.c1, rt1.c6, rt1.c5;
SELECT ALL rt1.c2, vt64.c0, vt64.lid, rt1.c3, rt1.c4, rt1.c0, rt1.c1, rt1.c6, rt1.c5 FROM rt1, vt64 GROUP BY rt1.c2, vt64.c0, vt64.lid, rt1.c3, rt1.c4, rt1.c0, rt1.c1, rt1.c6, rt1.c5;
SELECT rt1.c4, rt1.c1, rt1.c2, rt1.c6, rt1.c3, rt1.c5, rt1.c0 FROM rt1 GROUP BY rt1.c4, rt1.c1, rt1.c2, rt1.c6, rt1.c3, rt1.c5, rt1.c0;
SELECT ALL rt1.c4, rt1.c1, rt1.c2, rt1.c6, rt1.c3, rt1.c5, rt1.c0 FROM rt1 GROUP BY rt1.c4, rt1.c1, rt1.c2, rt1.c6, rt1.c3, rt1.c5, rt1.c0 HAVING GROUP_CONCAT(LIKELIHOOD(rt1.c6, 0.8481138341058354)) UNION ALL SELECT rt1.c4, rt1.c1, rt1.c2, rt1.c6, rt1.c3, rt1.c5, rt1.c0 FROM rt1 GROUP BY rt1.c4, rt1.c1, rt1.c2, rt1.c6, rt1.c3, rt1.c5, rt1.c0 HAVING (NOT (GROUP_CONCAT(LIKELIHOOD(rt1.c6, 0.8481138341058354)))) UNION ALL SELECT ALL rt1.c4, rt1.c1, rt1.c2, rt1.c6, rt1.c3, rt1.c5, rt1.c0 FROM rt1 GROUP BY rt1.c4, rt1.c1, rt1.c2, rt1.c6, rt1.c3, rt1.c5, rt1.c0 HAVING ((GROUP_CONCAT(LIKELIHOOD(rt1.c6, 0.8481138341058354))) ISNULL);
SELECT rt1.c4, rt1.c1, rt1.c2, rt1.c6, rt1.c3, rt1.c5, rt1.c0 FROM rt1 GROUP BY rt1.c4, rt1.c1, rt1.c2, rt1.c6, rt1.c3, rt1.c5, rt1.c0;
SELECT ALL rt1.c4, rt1.c1, rt1.c2, rt1.c6, rt1.c3, rt1.c5, rt1.c0 FROM rt1 GROUP BY rt1.c4, rt1.c1, rt1.c2, rt1.c6, rt1.c3, rt1.c5, rt1.c0 HAVING GROUP_CONCAT(LIKELIHOOD(rt1.c6, 0.8481138341058354)) UNION ALL SELECT rt1.c4, rt1.c1, rt1.c2, rt1.c6, rt1.c3, rt1.c5, rt1.c0 FROM rt1 GROUP BY rt1.c4, rt1.c1, rt1.c2, rt1.c6, rt1.c3, rt1.c5, rt1.c0 HAVING (NOT (GROUP_CONCAT(LIKELIHOOD(rt1.c6, 0.8481138341058354)))) UNION ALL SELECT ALL rt1.c4, rt1.c1, rt1.c2, rt1.c6, rt1.c3, rt1.c5, rt1.c0 FROM rt1 GROUP BY rt1.c4, rt1.c1, rt1.c2, rt1.c6, rt1.c3, rt1.c5, rt1.c0 HAVING ((GROUP_CONCAT(LIKELIHOOD(rt1.c6, 0.8481138341058354))) ISNULL);
SELECT rt1.c4, rt1.c1, rt1.c2, rt1.c6, rt1.c3, rt1.c5, rt1.c0 FROM rt1 GROUP BY rt1.c4, rt1.c1, rt1.c2, rt1.c6, rt1.c3, rt1.c5, rt1.c0;
SELECT rt1.c2, rt1.c1, rt1.c3, rt1.c4, vt64.c0, vt64.lid, rt1.c5 FROM rt1, vt64;
SELECT rt1.c2, rt1.c1, rt1.c3, rt1.c4, vt64.c0, vt64.lid, rt1.c5 FROM rt1, vt64 WHERE (((vt64.lid) NOTNULL) COLLATE BINARY) UNION ALL SELECT ALL rt1.c2, rt1.c1, rt1.c3, rt1.c4, vt64.c0, vt64.lid, rt1.c5 FROM rt1, vt64 WHERE ((NOT (((vt64.lid) NOTNULL) COLLATE BINARY))) UNION ALL SELECT ALL rt1.c2, rt1.c1, rt1.c3, rt1.c4, vt64.c0, vt64.lid, rt1.c5 FROM rt1, vt64 WHERE (((((vt64.lid) NOTNULL) COLLATE BINARY) ISNULL));
SELECT rt1.c2, rt1.c1, rt1.c3, rt1.c4, vt64.c0, vt64.lid, rt1.c5 FROM rt1, vt64;
SELECT DISTINCT rt1.c6, vt64.lid, rt1.c2, vt64.c0, rt1.c4 FROM vt64, rt1;
SELECT DISTINCT rt1.c6, vt64.lid, rt1.c2, vt64.c0, rt1.c4 FROM vt64, rt1 WHERE (((((CAST(rt1.c6 AS BLOB))OR(CASE rt1.c3  WHEN rt1.c6 THEN rt1.c5 WHEN vt64.lid THEN vt64.c0 WHEN vt64.lid THEN rt1.c4 WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c4 THEN vt64.c0 END)))OR(((vt64.lid)LIKE(rt1.c3))))) UNION SELECT DISTINCT rt1.c6, vt64.lid, rt1.c2, vt64.c0, rt1.c4 FROM vt64, rt1 WHERE ((NOT (((((CAST(rt1.c6 AS BLOB))OR(CASE rt1.c3  WHEN rt1.c6 THEN rt1.c5 WHEN vt64.lid THEN vt64.c0 WHEN vt64.lid THEN rt1.c4 WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c4 THEN vt64.c0 END)))OR(((vt64.lid)LIKE(rt1.c3))))))) UNION SELECT DISTINCT rt1.c6, vt64.lid, rt1.c2, vt64.c0, rt1.c4 FROM vt64, rt1 WHERE (((((((CAST(rt1.c6 AS BLOB))OR(CASE rt1.c3  WHEN rt1.c6 THEN rt1.c5 WHEN vt64.lid THEN vt64.c0 WHEN vt64.lid THEN rt1.c4 WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c4 THEN vt64.c0 END)))OR(((vt64.lid)LIKE(rt1.c3))))) ISNULL));
SELECT DISTINCT rt1.c6, vt64.lid, rt1.c2, vt64.c0, rt1.c4 FROM vt64, rt1;
SELECT ALL rt1.c2, rt1.c0, rt1.c6, vt64.c0, vt64.lid, rt1.c1, rt1.c5, rt1.c3, rt1.c4 FROM vt64, rt1 GROUP BY rt1.c2, rt1.c0, rt1.c6, vt64.c0, vt64.lid, rt1.c1, rt1.c5, rt1.c3, rt1.c4;
SELECT ALL rt1.c2, rt1.c0, rt1.c6, vt64.c0, vt64.lid, rt1.c1, rt1.c5, rt1.c3, rt1.c4 FROM vt64, rt1 WHERE (((((rt1.c3) IS FALSE)) NOT BETWEEN (LIKELY(DISTINCT rt1.c3)) AND (((rt1.c0)IS NOT(vt64.c0))))) GROUP BY rt1.c2, rt1.c0, rt1.c6, vt64.c0, vt64.lid, rt1.c1, rt1.c5, rt1.c3, rt1.c4 UNION SELECT rt1.c2, rt1.c0, rt1.c6, vt64.c0, vt64.lid, rt1.c1, rt1.c5, rt1.c3, rt1.c4 FROM vt64, rt1 WHERE ((NOT (((((rt1.c3) IS FALSE)) NOT BETWEEN (LIKELY(DISTINCT rt1.c3)) AND (((rt1.c0)IS NOT(vt64.c0))))))) GROUP BY rt1.c2, rt1.c0, rt1.c6, vt64.c0, vt64.lid, rt1.c1, rt1.c5, rt1.c3, rt1.c4 UNION SELECT ALL rt1.c2, rt1.c0, rt1.c6, vt64.c0, vt64.lid, rt1.c1, rt1.c5, rt1.c3, rt1.c4 FROM vt64, rt1 WHERE (((((((rt1.c3) IS FALSE)) NOT BETWEEN (LIKELY(DISTINCT rt1.c3)) AND (((rt1.c0)IS NOT(vt64.c0))))) ISNULL)) GROUP BY rt1.c2, rt1.c0, rt1.c6, vt64.c0, vt64.lid, rt1.c1, rt1.c5, rt1.c3, rt1.c4;
SELECT ALL rt1.c2, rt1.c0, rt1.c6, vt64.c0, vt64.lid, rt1.c1, rt1.c5, rt1.c3, rt1.c4 FROM vt64, rt1 GROUP BY rt1.c2, rt1.c0, rt1.c6, vt64.c0, vt64.lid, rt1.c1, rt1.c5, rt1.c3, rt1.c4;
SELECT ALL rt1.c1, rt1.c2, vt64.c0, rt1.c3, rt1.c4, rt1.c5 FROM vt64, rt1 GROUP BY rt1.c1, rt1.c2, vt64.c0, rt1.c3, rt1.c4, rt1.c5;
SELECT rt1.c1, rt1.c2, vt64.c0, rt1.c3, rt1.c4, rt1.c5 FROM vt64, rt1 GROUP BY rt1.c1, rt1.c2, vt64.c0, rt1.c3, rt1.c4, rt1.c5 HAVING ((NULL)<>(SUM(GROUP_CONCAT(TOTAL(x'c721'))))) UNION ALL SELECT rt1.c1, rt1.c2, vt64.c0, rt1.c3, rt1.c4, rt1.c5 FROM vt64, rt1 GROUP BY rt1.c1, rt1.c2, vt64.c0, rt1.c3, rt1.c4, rt1.c5 HAVING (NOT (((NULL)<>(SUM(GROUP_CONCAT(TOTAL(x'c721'))))))) UNION ALL SELECT ALL rt1.c1, rt1.c2, vt64.c0, rt1.c3, rt1.c4, rt1.c5 FROM vt64, rt1 GROUP BY rt1.c1, rt1.c2, vt64.c0, rt1.c3, rt1.c4, rt1.c5 HAVING ((((NULL)<>(SUM(GROUP_CONCAT(TOTAL(x'c721')))))) ISNULL);
SELECT ALL * FROM vt64;
SELECT * FROM vt64 WHERE (((vt64.lid COLLATE RTRIM) NOTNULL)) UNION ALL SELECT * FROM vt64 WHERE ((NOT (((vt64.lid COLLATE RTRIM) NOTNULL)))) UNION ALL SELECT * FROM vt64 WHERE (((((vt64.lid COLLATE RTRIM) NOTNULL)) ISNULL));
SELECT ALL * FROM vt64;
SELECT DISTINCT vt64.lid, vt64.c0 FROM vt64;
SELECT DISTINCT vt64.lid, vt64.c0 FROM vt64 WHERE (IFNULL(x'', NULL)) UNION SELECT DISTINCT vt64.lid, vt64.c0 FROM vt64 WHERE ((NOT (IFNULL(x'', NULL)))) UNION SELECT DISTINCT vt64.lid, vt64.c0 FROM vt64 WHERE (((IFNULL(x'', NULL)) ISNULL));
SELECT DISTINCT vt64.lid, vt64.c0 FROM vt64;
SELECT ALL vt64.c0, rt1.c5 FROM rt1, vt64 GROUP BY vt64.c0, rt1.c5;
SELECT ALL vt64.c0, rt1.c5 FROM rt1, vt64 WHERE (HEX(DISTINCT CASE x''  WHEN rt1.c6 THEN rt1.c0 END)) GROUP BY vt64.c0, rt1.c5 UNION SELECT vt64.c0, rt1.c5 FROM rt1, vt64 WHERE ((NOT (HEX(DISTINCT CASE x''  WHEN rt1.c6 THEN rt1.c0 END)))) GROUP BY vt64.c0, rt1.c5 UNION SELECT vt64.c0, rt1.c5 FROM rt1, vt64 WHERE (((HEX(DISTINCT CASE x''  WHEN rt1.c6 THEN rt1.c0 END)) ISNULL)) GROUP BY vt64.c0, rt1.c5;
SELECT ALL vt64.c0, rt1.c5 FROM rt1, vt64 GROUP BY vt64.c0, rt1.c5;
SELECT rt1.c5, rt1.c1, vt64.lid, vt64.c0, rt1.c2, rt1.c4, rt1.c6 FROM rt1, vt64 GROUP BY rt1.c5, rt1.c1, vt64.lid, vt64.c0, rt1.c2, rt1.c4, rt1.c6;
SELECT rt1.c5, rt1.c1, vt64.lid, vt64.c0, rt1.c2, rt1.c4, rt1.c6 FROM rt1, vt64 GROUP BY rt1.c5, rt1.c1, vt64.lid, vt64.c0, rt1.c2, rt1.c4, rt1.c6 HAVING MAX(GROUP_CONCAT(rt1.c4)) UNION ALL SELECT rt1.c5, rt1.c1, vt64.lid, vt64.c0, rt1.c2, rt1.c4, rt1.c6 FROM rt1, vt64 GROUP BY rt1.c5, rt1.c1, vt64.lid, vt64.c0, rt1.c2, rt1.c4, rt1.c6 HAVING (NOT (MAX(GROUP_CONCAT(rt1.c4)))) UNION ALL SELECT ALL rt1.c5, rt1.c1, vt64.lid, vt64.c0, rt1.c2, rt1.c4, rt1.c6 FROM rt1, vt64 GROUP BY rt1.c5, rt1.c1, vt64.lid, vt64.c0, rt1.c2, rt1.c4, rt1.c6 HAVING ((MAX(GROUP_CONCAT(rt1.c4))) ISNULL);
SELECT ALL MIN((((DATETIME(rt1.c1, rt1.c4, rt1.c3)))<((rt1.c4 COLLATE RTRIM)))) FROM rt1 ORDER BY (+ ((+ (rt1.c1)))) DESC, CAST(rt1.c1 COLLATE NOCASE AS BLOB);
SELECT rt1.c0, rt1.c4, rt1.c3, rt1.c6 FROM rt1;
SELECT ALL rt1.c0, rt1.c4, rt1.c3, rt1.c6 FROM rt1 WHERE ((((rt1.c6 IN ()))OR(rt1.c1))) UNION ALL SELECT rt1.c0, rt1.c4, rt1.c3, rt1.c6 FROM rt1 WHERE ((NOT ((((rt1.c6 IN ()))OR(rt1.c1))))) UNION ALL SELECT rt1.c0, rt1.c4, rt1.c3, rt1.c6 FROM rt1 WHERE ((((((rt1.c6 IN ()))OR(rt1.c1))) ISNULL));
SELECT rt1.c0, rt1.c4, rt1.c3, rt1.c6 FROM rt1;
SELECT DISTINCT rt1.c6 FROM vt64, rt1;
SELECT DISTINCT rt1.c6 FROM vt64, rt1 WHERE (CASE WHEN ((rt1.c4)/(rt1.c0)) THEN vt64.lid COLLATE RTRIM END) UNION SELECT DISTINCT rt1.c6 FROM vt64, rt1 WHERE ((NOT (CASE WHEN ((rt1.c4)/(rt1.c0)) THEN vt64.lid COLLATE RTRIM END))) UNION SELECT DISTINCT rt1.c6 FROM vt64, rt1 WHERE (((CASE WHEN ((rt1.c4)/(rt1.c0)) THEN vt64.lid COLLATE RTRIM END) ISNULL));
SELECT DISTINCT rt1.c6 FROM vt64, rt1;
SELECT ALL vt64.c0, vt64.lid FROM vt64 GROUP BY vt64.c0, vt64.lid;
SELECT vt64.c0, vt64.lid FROM vt64 WHERE (((((CASE WHEN vt64.c0 THEN vt64.lid WHEN vt64.c0 THEN '1696736045' WHEN vt64.lid THEN vt64.c0 ELSE vt64.c0 END)AND(NULL)))OR(((vt64.lid)=(NULL))))) GROUP BY vt64.c0, vt64.lid UNION SELECT ALL vt64.c0, vt64.lid FROM vt64 WHERE ((NOT (((((CASE WHEN vt64.c0 THEN vt64.lid WHEN vt64.c0 THEN '1696736045' WHEN vt64.lid THEN vt64.c0 ELSE vt64.c0 END)AND(NULL)))OR(((vt64.lid)=(NULL))))))) GROUP BY vt64.c0, vt64.lid UNION SELECT vt64.c0, vt64.lid FROM vt64 WHERE (((((((CASE WHEN vt64.c0 THEN vt64.lid WHEN vt64.c0 THEN '1696736045' WHEN vt64.lid THEN vt64.c0 ELSE vt64.c0 END)AND(NULL)))OR(((vt64.lid)==(NULL))))) ISNULL)) GROUP BY vt64.c0, vt64.lid;
SELECT ALL vt64.c0, vt64.lid FROM vt64 GROUP BY vt64.c0, vt64.lid;
SELECT ALL vt64.c0 FROM vt64 GROUP BY vt64.c0;
SELECT ALL vt64.c0 FROM vt64 GROUP BY vt64.c0 HAVING vt64.c0 UNION ALL SELECT ALL vt64.c0 FROM vt64 GROUP BY vt64.c0 HAVING (NOT (vt64.c0)) UNION ALL SELECT ALL vt64.c0 FROM vt64 GROUP BY vt64.c0 HAVING ((vt64.c0) ISNULL);
SELECT ALL vt64.c0 FROM vt64 GROUP BY vt64.c0;
SELECT ALL vt64.c0 FROM vt64 GROUP BY vt64.c0 HAVING vt64.c0 UNION ALL SELECT ALL vt64.c0 FROM vt64 GROUP BY vt64.c0 HAVING (NOT (vt64.c0)) UNION ALL SELECT ALL vt64.c0 FROM vt64 GROUP BY vt64.c0 HAVING ((vt64.c0) ISNULL);
SELECT ALL vt64.c0 FROM vt64 GROUP BY vt64.c0;
SELECT * FROM vt64;
SELECT ALL * FROM vt64 WHERE ('' COLLATE NOCASE) UNION ALL SELECT ALL * FROM vt64 WHERE ((NOT ('' COLLATE NOCASE))) UNION ALL SELECT * FROM vt64 WHERE ((('' COLLATE NOCASE) ISNULL));
SELECT * FROM vt64;
SELECT DISTINCT * FROM rt1 CROSS JOIN vt64 ON ((x'') NOT NULL);
SELECT DISTINCT * FROM rt1 CROSS JOIN vt64 ON ((x'') NOT NULL) WHERE (CAST((((rt1.c6, rt1.c5, vt64.lid))<>((vt64.lid, vt64.lid, x'fe38'))) AS INTEGER)) UNION SELECT DISTINCT * FROM rt1 CROSS JOIN vt64 ON ((x'') NOT NULL) WHERE ((NOT (CAST((((rt1.c6, rt1.c5, vt64.lid))<>((vt64.lid, vt64.lid, x'fe38'))) AS INTEGER)))) UNION SELECT DISTINCT * FROM rt1 CROSS JOIN vt64 ON ((x'') NOT NULL) WHERE (((CAST((((rt1.c6, rt1.c5, vt64.lid))<>((vt64.lid, vt64.lid, x'fe38'))) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM rt1 CROSS JOIN vt64 ON ((x'') NOT NULL);
SELECT vt64.c0 FROM vt64, rt1 GROUP BY vt64.c0;
SELECT ALL vt64.c0 FROM vt64, rt1 WHERE (rt1.c5) GROUP BY vt64.c0 UNION SELECT vt64.c0 FROM vt64, rt1 WHERE ((NOT (rt1.c5))) GROUP BY vt64.c0 UNION SELECT vt64.c0 FROM vt64, rt1 WHERE (((rt1.c5) ISNULL)) GROUP BY vt64.c0;
SELECT vt64.c0 FROM vt64, rt1 GROUP BY vt64.c0;
SELECT ALL vt64.c0, vt64.lid FROM vt64 GROUP BY vt64.c0, vt64.lid;
SELECT ALL vt64.c0, vt64.lid FROM vt64 GROUP BY vt64.c0, vt64.lid HAVING (('')!=(QUOTE(vt64.c0))) UNION ALL SELECT vt64.c0, vt64.lid FROM vt64 GROUP BY vt64.c0, vt64.lid HAVING (NOT ((('')<>(QUOTE(vt64.c0))))) UNION ALL SELECT vt64.c0, vt64.lid FROM vt64 GROUP BY vt64.c0, vt64.lid HAVING (((('')<>(QUOTE(vt64.c0)))) ISNULL);
SELECT ALL vt64.c0, vt64.lid FROM vt64 GROUP BY vt64.c0, vt64.lid;
SELECT ALL vt64.c0, vt64.lid FROM vt64 GROUP BY vt64.c0, vt64.lid HAVING (('')!=(QUOTE(vt64.c0))) UNION ALL SELECT vt64.c0, vt64.lid FROM vt64 GROUP BY vt64.c0, vt64.lid HAVING (NOT ((('')<>(QUOTE(vt64.c0))))) UNION ALL SELECT vt64.c0, vt64.lid FROM vt64 GROUP BY vt64.c0, vt64.lid HAVING (((('')<>(QUOTE(vt64.c0)))) ISNULL);
SELECT ALL vt64.c0, vt64.lid FROM vt64 GROUP BY vt64.c0, vt64.lid;
SELECT ALL vt64.c0, vt64.lid FROM vt64;
SELECT vt64.c0, vt64.lid FROM vt64 WHERE (CAST(((vt64.lid) NOTNULL) AS NUMERIC)) UNION ALL SELECT vt64.c0, vt64.lid FROM vt64 WHERE ((NOT (CAST(((vt64.lid) NOTNULL) AS NUMERIC)))) UNION ALL SELECT ALL vt64.c0, vt64.lid FROM vt64 WHERE (((CAST(((vt64.lid) NOTNULL) AS NUMERIC)) ISNULL));
SELECT ALL vt64.c0, vt64.lid FROM vt64;
SELECT DISTINCT rt1.c4, rt1.c0, rt1.c6 FROM rt1, vt64;
SELECT DISTINCT rt1.c4, rt1.c0, rt1.c6 FROM rt1, vt64 WHERE (((((vt64.lid) NOT BETWEEN (rt1.c6) AND (vt64.lid))) IS FALSE)) UNION SELECT DISTINCT rt1.c4, rt1.c0, rt1.c6 FROM rt1, vt64 WHERE ((NOT (((((vt64.lid) NOT BETWEEN (rt1.c6) AND (vt64.lid))) IS FALSE)))) UNION SELECT DISTINCT rt1.c4, rt1.c0, rt1.c6 FROM rt1, vt64 WHERE (((((((vt64.lid) NOT BETWEEN (rt1.c6) AND (vt64.lid))) IS FALSE)) ISNULL));
SELECT DISTINCT rt1.c4, rt1.c0, rt1.c6 FROM rt1, vt64;
SELECT ALL rt1.c1, rt1.c0, rt1.c4 FROM vt64, rt1 GROUP BY rt1.c1, rt1.c0, rt1.c4;
SELECT ALL rt1.c1, rt1.c0, rt1.c4 FROM vt64, rt1 WHERE ((CASE WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c6 END IN ())) GROUP BY rt1.c1, rt1.c0, rt1.c4 UNION SELECT ALL rt1.c1, rt1.c0, rt1.c4 FROM vt64, rt1 WHERE ((NOT ((CASE WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c6 END IN ())))) GROUP BY rt1.c1, rt1.c0, rt1.c4 UNION SELECT ALL rt1.c1, rt1.c0, rt1.c4 FROM vt64, rt1 WHERE ((((CASE WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c6 END IN ())) ISNULL)) GROUP BY rt1.c1, rt1.c0, rt1.c4;
SELECT ALL rt1.c1, rt1.c0, rt1.c4 FROM vt64, rt1 GROUP BY rt1.c1, rt1.c0, rt1.c4;
SELECT ALL rt1.c2, rt1.c4, rt1.c6, rt1.c0, rt1.c3 FROM rt1 GROUP BY rt1.c2, rt1.c4, rt1.c6, rt1.c0, rt1.c3;
SELECT rt1.c2, rt1.c4, rt1.c6, rt1.c0, rt1.c3 FROM rt1 GROUP BY rt1.c2, rt1.c4, rt1.c6, rt1.c0, rt1.c3 HAVING GROUP_CONCAT(GROUP_CONCAT(MIN(rt1.c0))) UNION ALL SELECT ALL rt1.c2, rt1.c4, rt1.c6, rt1.c0, rt1.c3 FROM rt1 GROUP BY rt1.c2, rt1.c4, rt1.c6, rt1.c0, rt1.c3 HAVING (NOT (GROUP_CONCAT(GROUP_CONCAT(MIN(rt1.c0))))) UNION ALL SELECT rt1.c2, rt1.c4, rt1.c6, rt1.c0, rt1.c3 FROM rt1 GROUP BY rt1.c2, rt1.c4, rt1.c6, rt1.c0, rt1.c3 HAVING ((GROUP_CONCAT(GROUP_CONCAT(MIN(rt1.c0)))) ISNULL);
SELECT ALL * FROM rt1;
SELECT * FROM rt1 WHERE (((((((rt1.c3)AND(rt1.c0)))OR(rt1.c5)))&(CASE WHEN rt1.c1 THEN rt1.c0 END))) UNION ALL SELECT * FROM rt1 WHERE ((NOT (((((((rt1.c3)AND(rt1.c0)))OR(rt1.c5)))&(CASE WHEN rt1.c1 THEN rt1.c0 END))))) UNION ALL SELECT ALL * FROM rt1 WHERE (((((((((rt1.c3)AND(rt1.c0)))OR(rt1.c5)))&(CASE WHEN rt1.c1 THEN rt1.c0 END))) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (((((rt1.c6)OR(rt1.c0)))OR((- (rt1.c5))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (((((rt1.c6)OR(rt1.c0)))OR((- (rt1.c5))))))) UNION SELECT DISTINCT * FROM rt1 WHERE (((((((rt1.c6)OR(rt1.c0)))OR((- (rt1.c5))))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL rt1.c3, vt64.c0, vt64.lid, rt1.c2, rt1.c5, rt1.c1, rt1.c6, rt1.c0, rt1.c4 FROM vt64 RIGHT OUTER JOIN rt1 ON ((((1.74208729E9)AND(CAST(vt64.c0 AS INTEGER))))AND((rt1.c1 IN ()))) GROUP BY rt1.c3, vt64.c0, vt64.lid, rt1.c2, rt1.c5, rt1.c1, rt1.c6, rt1.c0, rt1.c4;
SELECT ALL rt1.c3, vt64.c0, vt64.lid, rt1.c2, rt1.c5, rt1.c1, rt1.c6, rt1.c0, rt1.c4 FROM vt64 RIGHT OUTER JOIN rt1 ON ((((1.74208729E9)AND(CAST(vt64.c0 AS INTEGER))))AND((rt1.c1 IN ()))) WHERE ((CAST(rt1.c6 AS REAL) IN (rt1.c5))) GROUP BY rt1.c3, vt64.c0, vt64.lid, rt1.c2, rt1.c5, rt1.c1, rt1.c6, rt1.c0, rt1.c4 UNION SELECT ALL rt1.c3, vt64.c0, vt64.lid, rt1.c2, rt1.c5, rt1.c1, rt1.c6, rt1.c0, rt1.c4 FROM vt64 RIGHT OUTER JOIN rt1 ON ((((1.74208729E9)AND(CAST(vt64.c0 AS INTEGER))))AND((rt1.c1 IN ()))) WHERE ((NOT ((CAST(rt1.c6 AS REAL) IN (rt1.c5))))) GROUP BY rt1.c3, vt64.c0, vt64.lid, rt1.c2, rt1.c5, rt1.c1, rt1.c6, rt1.c0, rt1.c4 UNION SELECT rt1.c3, vt64.c0, vt64.lid, rt1.c2, rt1.c5, rt1.c1, rt1.c6, rt1.c0, rt1.c4 FROM vt64 RIGHT OUTER JOIN rt1 ON ((((1.74208729E9)AND(CAST(vt64.c0 AS INTEGER))))AND((rt1.c1 IN ()))) WHERE ((((CAST(rt1.c6 AS REAL) IN (rt1.c5))) ISNULL)) GROUP BY rt1.c3, vt64.c0, vt64.lid, rt1.c2, rt1.c5, rt1.c1, rt1.c6, rt1.c0, rt1.c4;
SELECT ALL rt1.c3, vt64.c0, vt64.lid, rt1.c2, rt1.c5, rt1.c1, rt1.c6, rt1.c0, rt1.c4 FROM vt64 RIGHT OUTER JOIN rt1 ON ((((1.74208729E9)AND(CAST(vt64.c0 AS INTEGER))))AND((rt1.c1 IN ()))) GROUP BY rt1.c3, vt64.c0, vt64.lid, rt1.c2, rt1.c5, rt1.c1, rt1.c6, rt1.c0, rt1.c4;
SELECT rt1.c5, rt1.c2, rt1.c0, rt1.c1 FROM rt1 NOT INDEXED GROUP BY rt1.c5, rt1.c2, rt1.c0, rt1.c1;
SELECT ALL rt1.c5, rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c5, rt1.c2, rt1.c0, rt1.c1 HAVING (0xffffffff91b9608f IN ()) UNION ALL SELECT ALL rt1.c5, rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c5, rt1.c2, rt1.c0, rt1.c1 HAVING (NOT ((0Xffffffff91b9608f IN ()))) UNION ALL SELECT ALL rt1.c5, rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c5, rt1.c2, rt1.c0, rt1.c1 HAVING (((0xffffffff91b9608f IN ())) ISNULL);
SELECT rt1.c5, rt1.c2, rt1.c0, rt1.c1 FROM rt1 NOT INDEXED GROUP BY rt1.c5, rt1.c2, rt1.c0, rt1.c1;
SELECT ALL rt1.c5, rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c5, rt1.c2, rt1.c0, rt1.c1 HAVING (0xffffffff91b9608f IN ()) UNION ALL SELECT ALL rt1.c5, rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c5, rt1.c2, rt1.c0, rt1.c1 HAVING (NOT ((0Xffffffff91b9608f IN ()))) UNION ALL SELECT ALL rt1.c5, rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c5, rt1.c2, rt1.c0, rt1.c1 HAVING (((0xffffffff91b9608f IN ())) ISNULL);
SELECT rt1.c5, rt1.c2, rt1.c0, rt1.c1 FROM rt1 NOT INDEXED GROUP BY rt1.c5, rt1.c2, rt1.c0, rt1.c1;
SELECT * FROM rt1;
SELECT ALL * FROM rt1 WHERE (((((((((rt1.c6)OR(rt1.c5)))OR(rt1.c2)))AND(rt1.c2)))OR(rt1.c4)) COLLATE NOCASE) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT (((((((((rt1.c6)OR(rt1.c5)))OR(rt1.c2)))AND(rt1.c2)))OR(rt1.c4)) COLLATE NOCASE))) UNION ALL SELECT ALL * FROM rt1 WHERE (((((((((((rt1.c6)OR(rt1.c5)))OR(rt1.c2)))AND(rt1.c2)))OR(rt1.c4)) COLLATE NOCASE) ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT * FROM vt64, rt1;
SELECT DISTINCT * FROM vt64, rt1 WHERE ((((rt1.c5 IN (-981822957)))OR(((vt64.c0)==(rt1.c2))))) UNION SELECT DISTINCT * FROM vt64, rt1 WHERE ((NOT ((((rt1.c5 IN (-981822957)))OR(((vt64.c0)==(rt1.c2))))))) UNION SELECT DISTINCT * FROM vt64, rt1 WHERE ((((((rt1.c5 IN (-981822957)))OR(((vt64.c0)==(rt1.c2))))) ISNULL));
SELECT DISTINCT * FROM vt64, rt1;
SELECT ALL vt64.lid, rt1.c1, rt1.c5, vt64.c0 FROM vt64, rt1 GROUP BY vt64.lid, rt1.c1, rt1.c5, vt64.c0;
SELECT ALL vt64.lid, rt1.c1, rt1.c5, vt64.c0 FROM vt64, rt1 WHERE (((((((((rt1.c4)OR(((rt1.c4)-(rt1.c5)))))OR((- (rt1.c0)))))AND(((((rt1.c2)AND(vt64.c0)))OR(rt1.c6)))))AND((((vt64.lid))>=((rt1.c5)))))) GROUP BY vt64.lid, rt1.c1, rt1.c5, vt64.c0 UNION SELECT vt64.lid, rt1.c1, rt1.c5, vt64.c0 FROM vt64, rt1 WHERE ((NOT (((((((((rt1.c4)OR(((rt1.c4)-(rt1.c5)))))OR((- (rt1.c0)))))AND(((((rt1.c2)AND(vt64.c0)))OR(rt1.c6)))))AND((((vt64.lid))>=((rt1.c5)))))))) GROUP BY vt64.lid, rt1.c1, rt1.c5, vt64.c0 UNION SELECT vt64.lid, rt1.c1, rt1.c5, vt64.c0 FROM vt64, rt1 WHERE (((((((((((rt1.c4)OR(((rt1.c4)-(rt1.c5)))))OR((- (rt1.c0)))))AND(((((rt1.c2)AND(vt64.c0)))OR(rt1.c6)))))AND((((vt64.lid))>=((rt1.c5)))))) ISNULL)) GROUP BY vt64.lid, rt1.c1, rt1.c5, vt64.c0;
SELECT ALL vt64.lid, rt1.c1, rt1.c5, vt64.c0 FROM vt64, rt1 GROUP BY vt64.lid, rt1.c1, rt1.c5, vt64.c0;
SELECT rt1.c4, rt1.c6, rt1.c1, rt1.c3, rt1.c5, rt1.c0, vt64.lid, vt64.c0, rt1.c2 FROM rt1, vt64 GROUP BY rt1.c4, rt1.c6, rt1.c1, rt1.c3, rt1.c5, rt1.c0, vt64.lid, vt64.c0, rt1.c2;
SELECT rt1.c4, rt1.c6, rt1.c1, rt1.c3, rt1.c5, rt1.c0, vt64.lid, vt64.c0, rt1.c2 FROM rt1, vt64 GROUP BY rt1.c4, rt1.c6, rt1.c1, rt1.c3, rt1.c5, rt1.c0, vt64.lid, vt64.c0, rt1.c2 HAVING TOTAL(SUM(GROUP_CONCAT(MAX(vt64.lid)))) UNION ALL SELECT ALL rt1.c4, rt1.c6, rt1.c1, rt1.c3, rt1.c5, rt1.c0, vt64.lid, vt64.c0, rt1.c2 FROM rt1, vt64 GROUP BY rt1.c4, rt1.c6, rt1.c1, rt1.c3, rt1.c5, rt1.c0, vt64.lid, vt64.c0, rt1.c2 HAVING (NOT (TOTAL(SUM(GROUP_CONCAT(MAX(vt64.lid)))))) UNION ALL SELECT ALL rt1.c4, rt1.c6, rt1.c1, rt1.c3, rt1.c5, rt1.c0, vt64.lid, vt64.c0, rt1.c2 FROM rt1, vt64 GROUP BY rt1.c4, rt1.c6, rt1.c1, rt1.c3, rt1.c5, rt1.c0, vt64.lid, vt64.c0, rt1.c2 HAVING ((TOTAL(SUM(GROUP_CONCAT(MAX(vt64.lid))))) ISNULL);
SELECT rt1.c2, vt64.lid, rt1.c0, rt1.c3 FROM rt1 CROSS JOIN vt64 ON ((((rt1.c2) BETWEEN (rt1.c5) AND (x'e4fa')))!=(json_type('-554233691')));
SELECT ALL rt1.c2, vt64.lid, rt1.c0, rt1.c3 FROM rt1 CROSS JOIN vt64 ON ((((rt1.c2) BETWEEN (rt1.c5) AND (x'e4fa')))<>(json_type('-554233691'))) WHERE (((((((rt1.c3)OR(vt64.c0)))AND(rt1.c0))) ISNULL)) UNION ALL SELECT rt1.c2, vt64.lid, rt1.c0, rt1.c3 FROM rt1 CROSS JOIN vt64 ON ((((rt1.c2) BETWEEN (rt1.c5) AND (x'e4fa')))!=(json_type('-554233691'))) WHERE ((NOT (((((((rt1.c3)OR(vt64.c0)))AND(rt1.c0))) ISNULL)))) UNION ALL SELECT ALL rt1.c2, vt64.lid, rt1.c0, rt1.c3 FROM rt1 CROSS JOIN vt64 ON ((((rt1.c2) BETWEEN (rt1.c5) AND (x'e4fa')))!=(json_type('-554233691'))) WHERE (((((((((rt1.c3)OR(vt64.c0)))AND(rt1.c0))) ISNULL)) ISNULL));
SELECT rt1.c2, vt64.lid, rt1.c0, rt1.c3 FROM rt1 CROSS JOIN vt64 ON ((((rt1.c2) BETWEEN (rt1.c5) AND (x'e4fa')))!=(json_type('-554233691')));
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE ((((CASE rt1.c5  WHEN rt1.c3 THEN rt1.c2 END))>((INSTR(rt1.c2, rt1.c1))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT ((((CASE rt1.c5  WHEN rt1.c3 THEN rt1.c2 END))>((INSTR(rt1.c2, rt1.c1))))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((((((CASE rt1.c5  WHEN rt1.c3 THEN rt1.c2 END))>((INSTR(rt1.c2, rt1.c1))))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT rt1.c3, rt1.c0, rt1.c1, rt1.c5, rt1.c2, rt1.c4 FROM rt1 GROUP BY rt1.c3, rt1.c0, rt1.c1, rt1.c5, rt1.c2, rt1.c4;
SELECT ALL rt1.c3, rt1.c0, rt1.c1, rt1.c5, rt1.c2, rt1.c4 FROM rt1 WHERE ((rt1.c4 IN ()) COLLATE RTRIM) GROUP BY rt1.c3, rt1.c0, rt1.c1, rt1.c5, rt1.c2, rt1.c4 UNION SELECT ALL rt1.c3, rt1.c0, rt1.c1, rt1.c5, rt1.c2, rt1.c4 FROM rt1 WHERE ((NOT ((rt1.c4 IN ()) COLLATE RTRIM))) GROUP BY rt1.c3, rt1.c0, rt1.c1, rt1.c5, rt1.c2, rt1.c4 UNION SELECT rt1.c3, rt1.c0, rt1.c1, rt1.c5, rt1.c2, rt1.c4 FROM rt1 WHERE ((((rt1.c4 IN ()) COLLATE RTRIM) ISNULL)) GROUP BY rt1.c3, rt1.c0, rt1.c1, rt1.c5, rt1.c2, rt1.c4;
SELECT rt1.c3, rt1.c0, rt1.c1, rt1.c5, rt1.c2, rt1.c4 FROM rt1 GROUP BY rt1.c3, rt1.c0, rt1.c1, rt1.c5, rt1.c2, rt1.c4;
SELECT rt1.c2, rt1.c6 FROM rt1 GROUP BY rt1.c2, rt1.c6;
SELECT rt1.c2, rt1.c6 FROM rt1 GROUP BY rt1.c2, rt1.c6 HAVING json_valid(((((COUNT(*))OR(GROUP_CONCAT(rt1.c1))))OR(GROUP_CONCAT(AVG(GROUP_CONCAT(rt1.c5)))))) UNION ALL SELECT rt1.c2, rt1.c6 FROM rt1 GROUP BY rt1.c2, rt1.c6 HAVING (NOT (json_valid(((((COUNT(*))OR(GROUP_CONCAT(rt1.c1))))OR(GROUP_CONCAT(AVG(GROUP_CONCAT(rt1.c5)))))))) UNION ALL SELECT ALL rt1.c2, rt1.c6 FROM rt1 GROUP BY rt1.c2, rt1.c6 HAVING ((json_valid(((((COUNT(*))OR(GROUP_CONCAT(rt1.c1))))OR(GROUP_CONCAT(AVG(GROUP_CONCAT(rt1.c5))))))) ISNULL);
SELECT ALL * FROM rt1 NOT INDEXED;
SELECT * FROM rt1 WHERE (((((rt1.c1) IS TRUE))>=(rt1.c1))) UNION ALL SELECT * FROM rt1 WHERE ((NOT (((((rt1.c1) IS TRUE))>=(rt1.c1))))) UNION ALL SELECT ALL * FROM rt1 WHERE (((((((rt1.c1) IS TRUE))>=(rt1.c1))) ISNULL));
SELECT ALL * FROM rt1 NOT INDEXED;
SELECT DISTINCT rt1.c0, rt1.c2, rt1.c3, rt1.c5, vt64.lid, rt1.c1 FROM rt1 FULL OUTER JOIN vt64 ON CASE WHEN ((rt1.c0)IS NOT(0.23015656847062183)) THEN ((rt1.c1) NOT BETWEEN (rt1.c6) AND (rt1.c0)) WHEN ((((rt1.c3)OR(rt1.c2)))AND(rt1.c5)) THEN '0.9874986975541499' WHEN (- (rt1.c6)) THEN json_insert(rt1.c5, rt1.c5, rt1.c2) ELSE ((rt1.c3) NOT BETWEEN (-9.87349391E8) AND (rt1.c0)) END;
SELECT DISTINCT rt1.c0, rt1.c2, rt1.c3, rt1.c5, vt64.lid, rt1.c1 FROM rt1 FULL OUTER JOIN vt64 ON CASE WHEN ((rt1.c0)IS NOT(0.23015656847062183)) THEN ((rt1.c1) NOT BETWEEN (rt1.c6) AND (rt1.c0)) WHEN ((((rt1.c3)OR(rt1.c2)))AND(rt1.c5)) THEN '0.9874986975541499' WHEN (- (rt1.c6)) THEN json_insert(rt1.c5, rt1.c5, rt1.c2) ELSE ((rt1.c3) NOT BETWEEN (-9.87349391E8) AND (rt1.c0)) END WHERE (((- (NULL)) IN ())) UNION SELECT DISTINCT rt1.c0, rt1.c2, rt1.c3, rt1.c5, vt64.lid, rt1.c1 FROM rt1 FULL OUTER JOIN vt64 ON CASE WHEN ((rt1.c0)IS NOT(0.23015656847062183)) THEN ((rt1.c1) NOT BETWEEN (rt1.c6) AND (rt1.c0)) WHEN ((((rt1.c3)OR(rt1.c2)))AND(rt1.c5)) THEN '0.9874986975541499' WHEN (- (rt1.c6)) THEN json_insert(rt1.c5, rt1.c5, rt1.c2) ELSE ((rt1.c3) NOT BETWEEN (-9.87349391E8) AND (rt1.c0)) END WHERE ((NOT (((- (NULL)) IN ())))) UNION SELECT DISTINCT rt1.c0, rt1.c2, rt1.c3, rt1.c5, vt64.lid, rt1.c1 FROM rt1 FULL OUTER JOIN vt64 ON CASE WHEN ((rt1.c0)IS NOT(0.23015656847062183)) THEN ((rt1.c1) NOT BETWEEN (rt1.c6) AND (rt1.c0)) WHEN ((((rt1.c3)OR(rt1.c2)))AND(rt1.c5)) THEN '0.9874986975541499' WHEN (- (rt1.c6)) THEN json_insert(rt1.c5, rt1.c5, rt1.c2) ELSE ((rt1.c3) NOT BETWEEN (-9.87349391E8) AND (rt1.c0)) END WHERE (((((- (NULL)) IN ())) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c2, rt1.c3, rt1.c5, vt64.lid, rt1.c1 FROM rt1 FULL OUTER JOIN vt64 ON CASE WHEN ((rt1.c0)IS NOT(0.23015656847062183)) THEN ((rt1.c1) NOT BETWEEN (rt1.c6) AND (rt1.c0)) WHEN ((((rt1.c3)OR(rt1.c2)))AND(rt1.c5)) THEN '0.9874986975541499' WHEN (- (rt1.c6)) THEN json_insert(rt1.c5, rt1.c5, rt1.c2) ELSE ((rt1.c3) NOT BETWEEN (-9.87349391E8) AND (rt1.c0)) END;
SELECT rt1.c5 FROM vt64 FULL OUTER JOIN rt1 ON ((((rt1.c1)+(rt1.c3)))>=(QUOTE(rt1.c1))) GROUP BY rt1.c5;
SELECT ALL rt1.c5 FROM vt64 FULL OUTER JOIN rt1 ON ((((rt1.c1)+(rt1.c3)))>=(QUOTE(rt1.c1))) WHERE (((('823044091')) NOT BETWEEN ((COALESCE(DISTINCT rt1.c3, rt1.c4))) AND (((vt64.c0 IN ()))))) GROUP BY rt1.c5 UNION SELECT ALL rt1.c5 FROM vt64 FULL OUTER JOIN rt1 ON ((((rt1.c1)+(rt1.c3)))>=(QUOTE(rt1.c1))) WHERE ((NOT (((('823044091')) NOT BETWEEN ((COALESCE(DISTINCT rt1.c3, rt1.c4))) AND (((vt64.c0 IN ()))))))) GROUP BY rt1.c5 UNION SELECT ALL rt1.c5 FROM vt64 FULL OUTER JOIN rt1 ON ((((rt1.c1)+(rt1.c3)))>=(QUOTE(rt1.c1))) WHERE (((((('823044091')) NOT BETWEEN ((COALESCE(DISTINCT rt1.c3, rt1.c4))) AND (((vt64.c0 IN ()))))) ISNULL)) GROUP BY rt1.c5;
SELECT rt1.c5 FROM vt64 FULL OUTER JOIN rt1 ON ((((rt1.c1)+(rt1.c3)))>=(QUOTE(rt1.c1))) GROUP BY rt1.c5;
SELECT ALL rt1.c0, rt1.c3, vt64.lid, rt1.c6, rt1.c1, rt1.c2, vt64.c0 FROM rt1, vt64 GROUP BY rt1.c0, rt1.c3, vt64.lid, rt1.c6, rt1.c1, rt1.c2, vt64.c0;
SELECT ALL rt1.c0, rt1.c3, vt64.lid, rt1.c6, rt1.c1, rt1.c2, vt64.c0 FROM rt1, vt64 GROUP BY rt1.c0, rt1.c3, vt64.lid, rt1.c6, rt1.c1, rt1.c2, vt64.c0 HAVING COUNT(((COUNT(*))<>(rt1.c3))) UNION ALL SELECT ALL rt1.c0, rt1.c3, vt64.lid, rt1.c6, rt1.c1, rt1.c2, vt64.c0 FROM rt1, vt64 GROUP BY rt1.c0, rt1.c3, vt64.lid, rt1.c6, rt1.c1, rt1.c2, vt64.c0 HAVING (NOT (COUNT(((COUNT(*))<>(rt1.c3))))) UNION ALL SELECT ALL rt1.c0, rt1.c3, vt64.lid, rt1.c6, rt1.c1, rt1.c2, vt64.c0 FROM rt1, vt64 GROUP BY rt1.c0, rt1.c3, vt64.lid, rt1.c6, rt1.c1, rt1.c2, vt64.c0 HAVING ((COUNT(((COUNT(*))!=(rt1.c3)))) ISNULL);
SELECT ALL * FROM vt64, rt1;
SELECT ALL * FROM vt64, rt1 WHERE (rt1.c3) UNION ALL SELECT * FROM vt64, rt1 WHERE ((NOT (rt1.c3))) UNION ALL SELECT * FROM vt64, rt1 WHERE (((rt1.c3) ISNULL));
SELECT ALL * FROM vt64, rt1;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE ((((rt1.c6 IN (rt1.c1))) NOT BETWEEN (CAST(rt1.c1 AS NUMERIC)) AND (rt1.c1))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT ((((rt1.c6 IN (rt1.c1))) NOT BETWEEN (CAST(rt1.c1 AS NUMERIC)) AND (rt1.c1))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((((((rt1.c6 IN (rt1.c1))) NOT BETWEEN (CAST(rt1.c1 AS NUMERIC)) AND (rt1.c1))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL rt1.c4, rt1.c5, vt64.lid, rt1.c3, rt1.c2, rt1.c0, rt1.c6, rt1.c1, vt64.c0 FROM vt64 NOT INDEXED, rt1 GROUP BY rt1.c4, rt1.c5, vt64.lid, rt1.c3, rt1.c2, rt1.c0, rt1.c6, rt1.c1, vt64.c0;
SELECT rt1.c4, rt1.c5, vt64.lid, rt1.c3, rt1.c2, rt1.c0, rt1.c6, rt1.c1, vt64.c0 FROM vt64, rt1 WHERE (('0.6068371268943935' IN ())) GROUP BY rt1.c4, rt1.c5, vt64.lid, rt1.c3, rt1.c2, rt1.c0, rt1.c6, rt1.c1, vt64.c0 UNION SELECT ALL rt1.c4, rt1.c5, vt64.lid, rt1.c3, rt1.c2, rt1.c0, rt1.c6, rt1.c1, vt64.c0 FROM vt64, rt1 WHERE ((NOT (('0.6068371268943935' IN ())))) GROUP BY rt1.c4, rt1.c5, vt64.lid, rt1.c3, rt1.c2, rt1.c0, rt1.c6, rt1.c1, vt64.c0 UNION SELECT rt1.c4, rt1.c5, vt64.lid, rt1.c3, rt1.c2, rt1.c0, rt1.c6, rt1.c1, vt64.c0 FROM vt64, rt1 WHERE (((('0.6068371268943935' IN ())) ISNULL)) GROUP BY rt1.c4, rt1.c5, vt64.lid, rt1.c3, rt1.c2, rt1.c0, rt1.c6, rt1.c1, vt64.c0;
SELECT ALL rt1.c4, rt1.c5, vt64.lid, rt1.c3, rt1.c2, rt1.c0, rt1.c6, rt1.c1, vt64.c0 FROM vt64 NOT INDEXED, rt1 GROUP BY rt1.c4, rt1.c5, vt64.lid, rt1.c3, rt1.c2, rt1.c0, rt1.c6, rt1.c1, vt64.c0;
SELECT ALL rt1.c4 FROM vt64, rt1 GROUP BY rt1.c4;
SELECT rt1.c4 FROM vt64, rt1 GROUP BY rt1.c4 HAVING (NOT (PRINTF(AVG(vt64.c0)))) UNION ALL SELECT ALL rt1.c4 FROM vt64, rt1 GROUP BY rt1.c4 HAVING (NOT ((NOT (PRINTF(AVG(vt64.c0)))))) UNION ALL SELECT rt1.c4 FROM vt64, rt1 GROUP BY rt1.c4 HAVING (((NOT (PRINTF(AVG(vt64.c0))))) ISNULL);
SELECT ALL rt1.c4 FROM vt64, rt1 GROUP BY rt1.c4;
SELECT rt1.c4 FROM vt64, rt1 GROUP BY rt1.c4 HAVING (NOT (PRINTF(AVG(vt64.c0)))) UNION ALL SELECT ALL rt1.c4 FROM vt64, rt1 GROUP BY rt1.c4 HAVING (NOT ((NOT (PRINTF(AVG(vt64.c0)))))) UNION ALL SELECT rt1.c4 FROM vt64, rt1 GROUP BY rt1.c4 HAVING (((NOT (PRINTF(AVG(vt64.c0))))) ISNULL);
SELECT ALL rt1.c4 FROM vt64, rt1 GROUP BY rt1.c4;
SELECT * FROM vt64;
SELECT * FROM vt64 WHERE (CASE WHEN vt64.c0 THEN ((vt64.c0) IS TRUE) WHEN (vt64.c0 IN ()) THEN ((vt64.lid)<<(1791866912)) WHEN ((vt64.lid)%(vt64.lid)) THEN ((vt64.lid) NOT NULL) WHEN CASE '-1767366575'  WHEN vt64.lid THEN vt64.c0 ELSE vt64.c0 END THEN (- (vt64.lid)) WHEN CAST(vt64.c0 AS BLOB) THEN (((vt64.lid)) NOT BETWEEN ((vt64.c0)) AND ((vt64.c0))) ELSE (vt64.c0 IN ()) END) UNION ALL SELECT * FROM vt64 WHERE ((NOT (CASE WHEN vt64.c0 THEN ((vt64.c0) IS TRUE) WHEN (vt64.c0 IN ()) THEN ((vt64.lid)<<(1791866912)) WHEN ((vt64.lid)%(vt64.lid)) THEN ((vt64.lid) NOT NULL) WHEN CASE '-1767366575'  WHEN vt64.lid THEN vt64.c0 ELSE vt64.c0 END THEN (- (vt64.lid)) WHEN CAST(vt64.c0 AS BLOB) THEN (((vt64.lid)) NOT BETWEEN ((vt64.c0)) AND ((vt64.c0))) ELSE (vt64.c0 IN ()) END))) UNION ALL SELECT * FROM vt64 WHERE (((CASE WHEN vt64.c0 THEN ((vt64.c0) IS TRUE) WHEN (vt64.c0 IN ()) THEN ((vt64.lid)<<(1791866912)) WHEN ((vt64.lid)%(vt64.lid)) THEN ((vt64.lid) NOT NULL) WHEN CASE '-1767366575'  WHEN vt64.lid THEN vt64.c0 ELSE vt64.c0 END THEN (- (vt64.lid)) WHEN CAST(vt64.c0 AS BLOB) THEN (((vt64.lid)) NOT BETWEEN ((vt64.c0)) AND ((vt64.c0))) ELSE (vt64.c0 IN ()) END) ISNULL));
SELECT * FROM vt64;
SELECT DISTINCT rt1.c5, vt64.c0 FROM rt1 CROSS JOIN vt64 ON ((LAST_INSERT_ROWID())OR(rt1.c1));
SELECT DISTINCT rt1.c5, vt64.c0 FROM rt1 CROSS JOIN vt64 ON ((LAST_INSERT_ROWID())OR(rt1.c1)) WHERE (rt1.c6) UNION SELECT DISTINCT rt1.c5, vt64.c0 FROM rt1 CROSS JOIN vt64 ON ((LAST_INSERT_ROWID())OR(rt1.c1)) WHERE ((NOT (rt1.c6))) UNION SELECT DISTINCT rt1.c5, vt64.c0 FROM rt1 CROSS JOIN vt64 ON ((LAST_INSERT_ROWID())OR(rt1.c1)) WHERE (((rt1.c6) ISNULL));
SELECT DISTINCT rt1.c5, vt64.c0 FROM rt1 CROSS JOIN vt64 ON ((LAST_INSERT_ROWID())OR(rt1.c1));
SELECT vt64.lid FROM vt64 GROUP BY vt64.lid;
SELECT vt64.lid FROM vt64 WHERE (x'c84b') GROUP BY vt64.lid UNION SELECT ALL vt64.lid FROM vt64 WHERE ((NOT (x'c84b'))) GROUP BY vt64.lid UNION SELECT vt64.lid FROM vt64 WHERE (((x'c84b') ISNULL)) GROUP BY vt64.lid;
SELECT vt64.lid FROM vt64 GROUP BY vt64.lid;
SELECT ALL rt1.c3, rt1.c0, rt1.c4 FROM vt64, rt1 GROUP BY rt1.c3, rt1.c0, rt1.c4;
SELECT rt1.c3, rt1.c0, rt1.c4 FROM vt64, rt1 GROUP BY rt1.c3, rt1.c0, rt1.c4 HAVING AVG(vt64.lid) UNION ALL SELECT ALL rt1.c3, rt1.c0, rt1.c4 FROM vt64, rt1 GROUP BY rt1.c3, rt1.c0, rt1.c4 HAVING (NOT (AVG(vt64.lid))) UNION ALL SELECT ALL rt1.c3, rt1.c0, rt1.c4 FROM vt64, rt1 GROUP BY rt1.c3, rt1.c0, rt1.c4 HAVING ((AVG(vt64.lid)) ISNULL);
SELECT ALL rt1.c3, rt1.c0, rt1.c4 FROM vt64, rt1 GROUP BY rt1.c3, rt1.c0, rt1.c4;
SELECT rt1.c3, rt1.c0, rt1.c4 FROM vt64, rt1 GROUP BY rt1.c3, rt1.c0, rt1.c4 HAVING AVG(vt64.lid) UNION ALL SELECT ALL rt1.c3, rt1.c0, rt1.c4 FROM vt64, rt1 GROUP BY rt1.c3, rt1.c0, rt1.c4 HAVING (NOT (AVG(vt64.lid))) UNION ALL SELECT ALL rt1.c3, rt1.c0, rt1.c4 FROM vt64, rt1 GROUP BY rt1.c3, rt1.c0, rt1.c4 HAVING ((AVG(vt64.lid)) ISNULL);
SELECT ALL rt1.c3, rt1.c0, rt1.c4 FROM vt64, rt1 GROUP BY rt1.c3, rt1.c0, rt1.c4;
SELECT ALL rt1.c1 FROM rt1;
SELECT ALL rt1.c1 FROM rt1 WHERE (((((rt1.c2)%(rt1.c6)))+(((rt1.c3) NOT BETWEEN (rt1.c0) AND (rt1.c0))))) UNION ALL SELECT rt1.c1 FROM rt1 WHERE ((NOT (((((rt1.c2)%(rt1.c6)))+(((rt1.c3) NOT BETWEEN (rt1.c0) AND (rt1.c0))))))) UNION ALL SELECT rt1.c1 FROM rt1 WHERE (((((((rt1.c2)%(rt1.c6)))+(((rt1.c3) NOT BETWEEN (rt1.c0) AND (rt1.c0))))) ISNULL));
SELECT ALL rt1.c1 FROM rt1;
SELECT DISTINCT * FROM vt64 CROSS JOIN rt1 ON rt1.c1;
SELECT DISTINCT * FROM vt64 CROSS JOIN rt1 ON rt1.c1 WHERE (((DATETIME(rt1.c5, vt64.c0, rt1.c1))!=(((rt1.c3) IS FALSE)))) UNION SELECT DISTINCT * FROM vt64 CROSS JOIN rt1 ON rt1.c1 WHERE ((NOT (((DATETIME(rt1.c5, vt64.c0, rt1.c1))<>(((rt1.c3) IS FALSE)))))) UNION SELECT DISTINCT * FROM vt64 CROSS JOIN rt1 ON rt1.c1 WHERE (((((DATETIME(rt1.c5, vt64.c0, rt1.c1))<>(((rt1.c3) IS FALSE)))) ISNULL));
SELECT DISTINCT * FROM vt64 CROSS JOIN rt1 ON rt1.c1;
SELECT vt64.lid, vt64.c0 FROM vt64 GROUP BY vt64.lid, vt64.c0;
SELECT vt64.lid, vt64.c0 FROM vt64 WHERE ((CASE vt64.c0  WHEN vt64.lid THEN vt64.c0 ELSE vt64.c0 END IN ())) GROUP BY vt64.lid, vt64.c0 UNION SELECT vt64.lid, vt64.c0 FROM vt64 WHERE ((NOT ((CASE vt64.c0  WHEN vt64.lid THEN vt64.c0 ELSE vt64.c0 END IN ())))) GROUP BY vt64.lid, vt64.c0 UNION SELECT ALL vt64.lid, vt64.c0 FROM vt64 WHERE ((((CASE vt64.c0  WHEN vt64.lid THEN vt64.c0 ELSE vt64.c0 END IN ())) ISNULL)) GROUP BY vt64.lid, vt64.c0;
SELECT vt64.lid, vt64.c0 FROM vt64 GROUP BY vt64.lid, vt64.c0;
SELECT ALL vt64.c0, rt1.c3, rt1.c5, rt1.c0, rt1.c2, rt1.c6, rt1.c4, rt1.c1 FROM vt64, rt1 GROUP BY vt64.c0, rt1.c3, rt1.c5, rt1.c0, rt1.c2, rt1.c6, rt1.c4, rt1.c1;
SELECT ALL vt64.c0, rt1.c3, rt1.c5, rt1.c0, rt1.c2, rt1.c6, rt1.c4, rt1.c1 FROM vt64, rt1 GROUP BY vt64.c0, rt1.c3, rt1.c5, rt1.c0, rt1.c2, rt1.c6, rt1.c4, rt1.c1 HAVING COUNT(AVG(rt1.c3)) UNION ALL SELECT vt64.c0, rt1.c3, rt1.c5, rt1.c0, rt1.c2, rt1.c6, rt1.c4, rt1.c1 FROM vt64, rt1 GROUP BY vt64.c0, rt1.c3, rt1.c5, rt1.c0, rt1.c2, rt1.c6, rt1.c4, rt1.c1 HAVING (NOT (COUNT(AVG(rt1.c3)))) UNION ALL SELECT vt64.c0, rt1.c3, rt1.c5, rt1.c0, rt1.c2, rt1.c6, rt1.c4, rt1.c1 FROM vt64, rt1 GROUP BY vt64.c0, rt1.c3, rt1.c5, rt1.c0, rt1.c2, rt1.c6, rt1.c4, rt1.c1 HAVING ((COUNT(AVG(rt1.c3))) ISNULL);
SELECT vt64.c0, rt1.c3, rt1.c4, rt1.c2, rt1.c0, rt1.c1, rt1.c5 FROM rt1 CROSS JOIN vt64 ON CASE WHEN (((rt1.c5, vt64.lid, rt1.c2)) BETWEEN ((rt1.c1, rt1.c5, rt1.c6)) AND ((rt1.c2, rt1.c5, rt1.c5))) THEN (+ (rt1.c2)) END;
SELECT ALL vt64.c0, rt1.c3, rt1.c4, rt1.c2, rt1.c0, rt1.c1, rt1.c5 FROM rt1 CROSS JOIN vt64 ON CASE WHEN (((rt1.c5, vt64.lid, rt1.c2)) BETWEEN ((rt1.c1, rt1.c5, rt1.c6)) AND ((rt1.c2, rt1.c5, rt1.c5))) THEN (+ (rt1.c2)) END WHERE ((((rt1.c2)>=(rt1.c6)) IN (CAST(rt1.c5 AS NUMERIC)))) UNION ALL SELECT ALL vt64.c0, rt1.c3, rt1.c4, rt1.c2, rt1.c0, rt1.c1, rt1.c5 FROM rt1 CROSS JOIN vt64 ON CASE WHEN (((rt1.c5, vt64.lid, rt1.c2)) BETWEEN ((rt1.c1, rt1.c5, rt1.c6)) AND ((rt1.c2, rt1.c5, rt1.c5))) THEN (+ (rt1.c2)) END WHERE ((NOT ((((rt1.c2)>=(rt1.c6)) IN (CAST(rt1.c5 AS NUMERIC)))))) UNION ALL SELECT ALL vt64.c0, rt1.c3, rt1.c4, rt1.c2, rt1.c0, rt1.c1, rt1.c5 FROM rt1 CROSS JOIN vt64 ON CASE WHEN (((rt1.c5, vt64.lid, rt1.c2)) BETWEEN ((rt1.c1, rt1.c5, rt1.c6)) AND ((rt1.c2, rt1.c5, rt1.c5))) THEN (+ (rt1.c2)) END WHERE ((((((rt1.c2)>=(rt1.c6)) IN (CAST(rt1.c5 AS NUMERIC)))) ISNULL));
SELECT vt64.c0, rt1.c3, rt1.c4, rt1.c2, rt1.c0, rt1.c1, rt1.c5 FROM rt1 CROSS JOIN vt64 ON CASE WHEN (((rt1.c5, vt64.lid, rt1.c2)) BETWEEN ((rt1.c1, rt1.c5, rt1.c6)) AND ((rt1.c2, rt1.c5, rt1.c5))) THEN (+ (rt1.c2)) END;
SELECT DISTINCT * FROM vt64, rt1;
SELECT DISTINCT * FROM vt64, rt1 WHERE ((((CASE WHEN rt1.c3 THEN rt1.c5 ELSE x'b574' END))<((UNLIKELY(DISTINCT rt1.c6))))) UNION SELECT DISTINCT * FROM vt64, rt1 WHERE ((NOT ((((CASE WHEN rt1.c3 THEN rt1.c5 ELSE x'b574' END))<((UNLIKELY(DISTINCT rt1.c6))))))) UNION SELECT DISTINCT * FROM vt64, rt1 WHERE ((((((CASE WHEN rt1.c3 THEN rt1.c5 ELSE x'b574' END))<((UNLIKELY(DISTINCT rt1.c6))))) ISNULL));
SELECT DISTINCT * FROM vt64, rt1;
SELECT rt1.c0, rt1.c6, rt1.c4 FROM vt64, rt1 GROUP BY rt1.c0, rt1.c6, rt1.c4;
SELECT rt1.c0, rt1.c6, rt1.c4 FROM vt64, rt1 WHERE (LAST_INSERT_ROWID()) GROUP BY rt1.c0, rt1.c6, rt1.c4 UNION SELECT rt1.c0, rt1.c6, rt1.c4 FROM vt64, rt1 WHERE ((NOT (LAST_INSERT_ROWID()))) GROUP BY rt1.c0, rt1.c6, rt1.c4 UNION SELECT ALL rt1.c0, rt1.c6, rt1.c4 FROM vt64, rt1 WHERE (((LAST_INSERT_ROWID()) ISNULL)) GROUP BY rt1.c0, rt1.c6, rt1.c4;
SELECT rt1.c0, rt1.c6, rt1.c4 FROM vt64, rt1 GROUP BY rt1.c0, rt1.c6, rt1.c4;
SELECT ALL rt1.c2, rt1.c1, rt1.c3, rt1.c0, rt1.c5 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c3, rt1.c0, rt1.c5;
SELECT rt1.c2, rt1.c1, rt1.c3, rt1.c0, rt1.c5 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c3, rt1.c0, rt1.c5 HAVING MIN(0.4711772807958118) UNION ALL SELECT ALL rt1.c2, rt1.c1, rt1.c3, rt1.c0, rt1.c5 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c3, rt1.c0, rt1.c5 HAVING (NOT (MIN(0.4711772807958118))) UNION ALL SELECT rt1.c2, rt1.c1, rt1.c3, rt1.c0, rt1.c5 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c3, rt1.c0, rt1.c5 HAVING ((MIN(0.4711772807958118)) ISNULL);
SELECT ALL rt1.c2, rt1.c1, rt1.c3, rt1.c0, rt1.c5 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c3, rt1.c0, rt1.c5;
SELECT rt1.c2, rt1.c1, rt1.c3, rt1.c0, rt1.c5 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c3, rt1.c0, rt1.c5 HAVING MIN(0.4711772807958118) UNION ALL SELECT ALL rt1.c2, rt1.c1, rt1.c3, rt1.c0, rt1.c5 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c3, rt1.c0, rt1.c5 HAVING (NOT (MIN(0.4711772807958118))) UNION ALL SELECT rt1.c2, rt1.c1, rt1.c3, rt1.c0, rt1.c5 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c3, rt1.c0, rt1.c5 HAVING ((MIN(0.4711772807958118)) ISNULL);
SELECT ALL rt1.c2, rt1.c1, rt1.c3, rt1.c0, rt1.c5 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c3, rt1.c0, rt1.c5;
SELECT ALL vt64.c0, vt64.lid FROM vt64;
SELECT ALL vt64.c0, vt64.lid FROM vt64 WHERE (vt64.lid) UNION ALL SELECT ALL vt64.c0, vt64.lid FROM vt64 WHERE ((NOT (vt64.lid))) UNION ALL SELECT vt64.c0, vt64.lid FROM vt64 WHERE (((vt64.lid) ISNULL));
SELECT ALL vt64.c0, vt64.lid FROM vt64;
SELECT DISTINCT rt1.c3, rt1.c5, rt1.c4, rt1.c0, rt1.c2 FROM rt1;
SELECT DISTINCT rt1.c3, rt1.c5, rt1.c4, rt1.c0, rt1.c2 FROM rt1 WHERE (((((rt1.c3) BETWEEN (rt1.c4) AND (rt1.c3)))==(SQLITE_COMPILEOPTION_USED(rt1.c6)))) UNION SELECT DISTINCT rt1.c3, rt1.c5, rt1.c4, rt1.c0, rt1.c2 FROM rt1 WHERE ((NOT (((((rt1.c3) BETWEEN (rt1.c4) AND (rt1.c3)))=(SQLITE_COMPILEOPTION_USED(rt1.c6)))))) UNION SELECT DISTINCT rt1.c3, rt1.c5, rt1.c4, rt1.c0, rt1.c2 FROM rt1 WHERE (((((((rt1.c3) BETWEEN (rt1.c4) AND (rt1.c3)))=(SQLITE_COMPILEOPTION_USED(rt1.c6)))) ISNULL));
SELECT DISTINCT rt1.c3, rt1.c5, rt1.c4, rt1.c0, rt1.c2 FROM rt1;
SELECT ALL vt64.lid FROM vt64 GROUP BY vt64.lid;
SELECT ALL vt64.lid FROM vt64 WHERE ((NOT (ABS(DISTINCT vt64.c0)))) GROUP BY vt64.lid UNION SELECT vt64.lid FROM vt64 WHERE ((NOT ((NOT (ABS(DISTINCT vt64.c0)))))) GROUP BY vt64.lid UNION SELECT vt64.lid FROM vt64 WHERE ((((NOT (ABS(DISTINCT vt64.c0)))) ISNULL)) GROUP BY vt64.lid;
SELECT ALL vt64.lid FROM vt64 GROUP BY vt64.lid;
SELECT ALL rt1.c2, rt1.c4, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c4, rt1.c1;
SELECT rt1.c2, rt1.c4, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c4, rt1.c1 HAVING COUNT(GROUP_CONCAT(AVG(rt1.c0))) UNION ALL SELECT rt1.c2, rt1.c4, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c4, rt1.c1 HAVING (NOT (COUNT(GROUP_CONCAT(AVG(rt1.c0))))) UNION ALL SELECT ALL rt1.c2, rt1.c4, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c4, rt1.c1 HAVING ((COUNT(GROUP_CONCAT(AVG(rt1.c0)))) ISNULL);
SELECT ALL rt1.c1, rt1.c2 FROM vt64, rt1;
SELECT ALL rt1.c1, rt1.c2 FROM vt64, rt1 WHERE (((rt1.c5)>=(rt1.c2)) COLLATE RTRIM) UNION ALL SELECT rt1.c1, rt1.c2 FROM vt64, rt1 WHERE ((NOT (((rt1.c5)>=(rt1.c2)) COLLATE RTRIM))) UNION ALL SELECT ALL rt1.c1, rt1.c2 FROM vt64, rt1 WHERE (((((rt1.c5)>=(rt1.c2)) COLLATE RTRIM) ISNULL));
SELECT ALL rt1.c1, rt1.c2 FROM vt64, rt1;
SELECT DISTINCT * FROM vt64 NATURAL JOIN rt1;
SELECT DISTINCT * FROM vt64 NATURAL JOIN rt1 WHERE (((vt64.lid COLLATE NOCASE) ISNULL)) UNION SELECT DISTINCT * FROM vt64 NATURAL JOIN rt1 WHERE ((NOT (((vt64.lid COLLATE NOCASE) ISNULL)))) UNION SELECT DISTINCT * FROM vt64 NATURAL JOIN rt1 WHERE (((((vt64.lid COLLATE NOCASE) ISNULL)) ISNULL));
SELECT DISTINCT * FROM vt64 NATURAL JOIN rt1;
SELECT rt1.c5, rt1.c0 FROM rt1, vt64 GROUP BY rt1.c5, rt1.c0;
SELECT ALL rt1.c5, rt1.c0 FROM rt1, vt64 WHERE (((((rt1.c4)IS NOT(rt1.c5))) NOT NULL)) GROUP BY rt1.c5, rt1.c0 UNION SELECT rt1.c5, rt1.c0 FROM rt1, vt64 WHERE ((NOT (((((rt1.c4)IS NOT(rt1.c5))) NOT NULL)))) GROUP BY rt1.c5, rt1.c0 UNION SELECT ALL rt1.c5, rt1.c0 FROM rt1, vt64 WHERE (((((((rt1.c4)IS NOT(rt1.c5))) NOT NULL)) ISNULL)) GROUP BY rt1.c5, rt1.c0;
SELECT rt1.c5, rt1.c0 FROM rt1, vt64 GROUP BY rt1.c5, rt1.c0;
SELECT vt64.lid FROM vt64 RIGHT OUTER JOIN rt1 ON CASE WHEN LIKELY(rt1.c5) THEN vt64.c0 COLLATE BINARY WHEN ((vt64.lid)+(vt64.lid)) THEN JULIANDAY(rt1.c5, vt64.c0, 1059993042) WHEN (((rt1.c0)) BETWEEN ((vt64.c0)) AND ((rt1.c4))) THEN CAST(rt1.c1 AS TEXT) ELSE (NOT (vt64.lid)) END GROUP BY vt64.lid;
SELECT ALL vt64.lid FROM vt64 RIGHT OUTER JOIN rt1 ON CASE WHEN LIKELY(rt1.c5) THEN vt64.c0 COLLATE BINARY WHEN ((vt64.lid)+(vt64.lid)) THEN JULIANDAY(rt1.c5, vt64.c0, 1059993042) WHEN (((rt1.c0)) BETWEEN ((vt64.c0)) AND ((rt1.c4))) THEN CAST(rt1.c1 AS TEXT) ELSE (NOT (vt64.lid)) END GROUP BY vt64.lid HAVING CAST(((rt1.c5)-(TOTAL(MAX(SUM(SUM(SUM(rt1.c1))))))) AS TEXT) UNION ALL SELECT vt64.lid FROM vt64 RIGHT OUTER JOIN rt1 ON CASE WHEN LIKELY(rt1.c5) THEN vt64.c0 COLLATE BINARY WHEN ((vt64.lid)+(vt64.lid)) THEN JULIANDAY(rt1.c5, vt64.c0, 1059993042) WHEN (((rt1.c0)) BETWEEN ((vt64.c0)) AND ((rt1.c4))) THEN CAST(rt1.c1 AS TEXT) ELSE (NOT (vt64.lid)) END GROUP BY vt64.lid HAVING (NOT (CAST(((rt1.c5)-(TOTAL(MAX(SUM(SUM(SUM(rt1.c1))))))) AS TEXT))) UNION ALL SELECT ALL vt64.lid FROM vt64 RIGHT OUTER JOIN rt1 ON CASE WHEN LIKELY(rt1.c5) THEN vt64.c0 COLLATE BINARY WHEN ((vt64.lid)+(vt64.lid)) THEN JULIANDAY(rt1.c5, vt64.c0, 1059993042) WHEN (((rt1.c0)) BETWEEN ((vt64.c0)) AND ((rt1.c4))) THEN CAST(rt1.c1 AS TEXT) ELSE (NOT (vt64.lid)) END GROUP BY vt64.lid HAVING ((CAST(((rt1.c5)-(TOTAL(MAX(SUM(SUM(SUM(rt1.c1))))))) AS TEXT)) ISNULL);
SELECT ALL * FROM vt64, rt1;
SELECT ALL * FROM vt64, rt1 WHERE (((((((vt64.lid)AND(rt1.c6)))AND(rt1.c5))) BETWEEN ((((vt64.c0, vt64.c0, -1.43668952E9, vt64.c0, vt64.lid)) NOT BETWEEN ((rt1.c2, rt1.c5, rt1.c1, rt1.c0, vt64.lid)) AND ((rt1.c5, rt1.c4, rt1.c1, 0.08395847698654457, rt1.c0)))) AND ('-221732362'))) UNION ALL SELECT ALL * FROM vt64, rt1 WHERE ((NOT (((((((vt64.lid)AND(rt1.c6)))AND(rt1.c5))) BETWEEN ((((vt64.c0, vt64.c0, -1.43668952E9, vt64.c0, vt64.lid)) NOT BETWEEN ((rt1.c2, rt1.c5, rt1.c1, rt1.c0, vt64.lid)) AND ((rt1.c5, rt1.c4, rt1.c1, 0.08395847698654457, rt1.c0)))) AND ('-221732362'))))) UNION ALL SELECT ALL * FROM vt64, rt1 WHERE (((((((((vt64.lid)AND(rt1.c6)))AND(rt1.c5))) BETWEEN ((((vt64.c0, vt64.c0, -1.43668952E9, vt64.c0, vt64.lid)) NOT BETWEEN ((rt1.c2, rt1.c5, rt1.c1, rt1.c0, vt64.lid)) AND ((rt1.c5, rt1.c4, rt1.c1, 0.08395847698654457, rt1.c0)))) AND ('-221732362'))) ISNULL));
SELECT ALL * FROM vt64, rt1;
SELECT DISTINCT * FROM rt1, vt64;
SELECT DISTINCT * FROM rt1, vt64 WHERE (CASE WHEN ((((rt1.c3)OR(rt1.c5)))AND(vt64.lid)) THEN (NOT (vt64.c0)) END) UNION SELECT DISTINCT * FROM rt1, vt64 WHERE ((NOT (CASE WHEN ((((rt1.c3)OR(rt1.c5)))AND(vt64.lid)) THEN (NOT (vt64.c0)) END))) UNION SELECT DISTINCT * FROM rt1, vt64 WHERE (((CASE WHEN ((((rt1.c3)OR(rt1.c5)))AND(vt64.lid)) THEN (NOT (vt64.c0)) END) ISNULL));
SELECT DISTINCT * FROM rt1, vt64;
SELECT rt1.c0, rt1.c2, rt1.c3, rt1.c5, vt64.lid, rt1.c6, rt1.c1 FROM vt64, rt1 GROUP BY rt1.c0, rt1.c2, rt1.c3, rt1.c5, vt64.lid, rt1.c6, rt1.c1;
SELECT ALL rt1.c0, rt1.c2, rt1.c3, rt1.c5, vt64.lid, rt1.c6, rt1.c1 FROM vt64, rt1 WHERE ((((TYPEOF(rt1.c3), CAST(rt1.c2 AS TEXT), CASE WHEN vt64.c0 THEN rt1.c1 ELSE rt1.c0 END))>=(('-1340073017', ('_,' IN ()), CHAR(NULL, rt1.c3, rt1.c1, rt1.c2, rt1.c6))))) GROUP BY rt1.c0, rt1.c2, rt1.c3, rt1.c5, vt64.lid, rt1.c6, rt1.c1 UNION SELECT rt1.c0, rt1.c2, rt1.c3, rt1.c5, vt64.lid, rt1.c6, rt1.c1 FROM vt64, rt1 WHERE ((NOT ((((TYPEOF(rt1.c3), CAST(rt1.c2 AS TEXT), CASE WHEN vt64.c0 THEN rt1.c1 ELSE rt1.c0 END))>=(('-1340073017', ('_,' IN ()), CHAR(NULL, rt1.c3, rt1.c1, rt1.c2, rt1.c6))))))) GROUP BY rt1.c0, rt1.c2, rt1.c3, rt1.c5, vt64.lid, rt1.c6, rt1.c1 UNION SELECT rt1.c0, rt1.c2, rt1.c3, rt1.c5, vt64.lid, rt1.c6, rt1.c1 FROM vt64, rt1 WHERE ((((((TYPEOF(rt1.c3), CAST(rt1.c2 AS TEXT), CASE WHEN vt64.c0 THEN rt1.c1 ELSE rt1.c0 END))>=(('-1340073017', ('_,' IN ()), CHAR(NULL, rt1.c3, rt1.c1, rt1.c2, rt1.c6))))) ISNULL)) GROUP BY rt1.c0, rt1.c2, rt1.c3, rt1.c5, vt64.lid, rt1.c6, rt1.c1;
SELECT rt1.c0, rt1.c2, rt1.c3, rt1.c5, vt64.lid, rt1.c6, rt1.c1 FROM vt64, rt1 GROUP BY rt1.c0, rt1.c2, rt1.c3, rt1.c5, vt64.lid, rt1.c6, rt1.c1;
SELECT rt1.c5, rt1.c3, rt1.c2, rt1.c6, rt1.c1 FROM rt1 GROUP BY rt1.c5, rt1.c3, rt1.c2, rt1.c6, rt1.c1;
SELECT rt1.c5, rt1.c3, rt1.c2, rt1.c6, rt1.c1 FROM rt1 GROUP BY rt1.c5, rt1.c3, rt1.c2, rt1.c6, rt1.c1 HAVING GROUP_CONCAT(MAX(COUNT(MAX(rt1.c2)))) UNION ALL SELECT rt1.c5, rt1.c3, rt1.c2, rt1.c6, rt1.c1 FROM rt1 GROUP BY rt1.c5, rt1.c3, rt1.c2, rt1.c6, rt1.c1 HAVING (NOT (GROUP_CONCAT(MAX(COUNT(MAX(rt1.c2)))))) UNION ALL SELECT rt1.c5, rt1.c3, rt1.c2, rt1.c6, rt1.c1 FROM rt1 GROUP BY rt1.c5, rt1.c3, rt1.c2, rt1.c6, rt1.c1 HAVING ((GROUP_CONCAT(MAX(COUNT(MAX(rt1.c2))))) ISNULL);
SELECT * FROM vt64;
SELECT * FROM vt64 WHERE ('1349018335') UNION ALL SELECT ALL * FROM vt64 WHERE ((NOT ('1349018335'))) UNION ALL SELECT * FROM vt64 WHERE ((('1349018335') ISNULL));
SELECT * FROM vt64;
SELECT DISTINCT * FROM rt1, vt64;
SELECT DISTINCT * FROM rt1, vt64 WHERE ((+ (CAST(rt1.c2 AS NUMERIC)))) UNION SELECT DISTINCT * FROM rt1, vt64 WHERE ((NOT ((+ (CAST(rt1.c2 AS NUMERIC)))))) UNION SELECT DISTINCT * FROM rt1, vt64 WHERE ((((+ (CAST(rt1.c2 AS NUMERIC)))) ISNULL));
SELECT DISTINCT * FROM rt1, vt64;
SELECT rt1.c6, vt64.c0, rt1.c4, rt1.c5, rt1.c2, vt64.lid, rt1.c1, rt1.c3 FROM rt1, vt64 GROUP BY rt1.c6, vt64.c0, rt1.c4, rt1.c5, rt1.c2, vt64.lid, rt1.c1, rt1.c3;
SELECT ALL rt1.c6, vt64.c0, rt1.c4, rt1.c5, rt1.c2, vt64.lid, rt1.c1, rt1.c3 FROM rt1, vt64 WHERE (LOWER(rt1.c6)) GROUP BY rt1.c6, vt64.c0, rt1.c4, rt1.c5, rt1.c2, vt64.lid, rt1.c1, rt1.c3 UNION SELECT ALL rt1.c6, vt64.c0, rt1.c4, rt1.c5, rt1.c2, vt64.lid, rt1.c1, rt1.c3 FROM rt1, vt64 WHERE ((NOT (LOWER(rt1.c6)))) GROUP BY rt1.c6, vt64.c0, rt1.c4, rt1.c5, rt1.c2, vt64.lid, rt1.c1, rt1.c3 UNION SELECT rt1.c6, vt64.c0, rt1.c4, rt1.c5, rt1.c2, vt64.lid, rt1.c1, rt1.c3 FROM rt1, vt64 WHERE (((LOWER(rt1.c6)) ISNULL)) GROUP BY rt1.c6, vt64.c0, rt1.c4, rt1.c5, rt1.c2, vt64.lid, rt1.c1, rt1.c3;
SELECT rt1.c6, vt64.c0, rt1.c4, rt1.c5, rt1.c2, vt64.lid, rt1.c1, rt1.c3 FROM rt1, vt64 GROUP BY rt1.c6, vt64.c0, rt1.c4, rt1.c5, rt1.c2, vt64.lid, rt1.c1, rt1.c3;
SELECT ALL rt1.c1, vt64.c0, rt1.c3, rt1.c2, vt64.lid, rt1.c5 FROM rt1, vt64 GROUP BY rt1.c1, vt64.c0, rt1.c3, rt1.c2, vt64.lid, rt1.c5;
SELECT ALL rt1.c1, vt64.c0, rt1.c3, rt1.c2, vt64.lid, rt1.c5 FROM rt1, vt64 GROUP BY rt1.c1, vt64.c0, rt1.c3, rt1.c2, vt64.lid, rt1.c5 HAVING COUNT(*) UNION ALL SELECT rt1.c1, vt64.c0, rt1.c3, rt1.c2, vt64.lid, rt1.c5 FROM rt1, vt64 GROUP BY rt1.c1, vt64.c0, rt1.c3, rt1.c2, vt64.lid, rt1.c5 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c1, vt64.c0, rt1.c3, rt1.c2, vt64.lid, rt1.c5 FROM rt1, vt64 GROUP BY rt1.c1, vt64.c0, rt1.c3, rt1.c2, vt64.lid, rt1.c5 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c1, vt64.c0, rt1.c3, rt1.c2, vt64.lid, rt1.c5 FROM rt1, vt64 GROUP BY rt1.c1, vt64.c0, rt1.c3, rt1.c2, vt64.lid, rt1.c5;
SELECT ALL rt1.c1, vt64.c0, rt1.c3, rt1.c2, vt64.lid, rt1.c5 FROM rt1, vt64 GROUP BY rt1.c1, vt64.c0, rt1.c3, rt1.c2, vt64.lid, rt1.c5 HAVING COUNT(*) UNION ALL SELECT rt1.c1, vt64.c0, rt1.c3, rt1.c2, vt64.lid, rt1.c5 FROM rt1, vt64 GROUP BY rt1.c1, vt64.c0, rt1.c3, rt1.c2, vt64.lid, rt1.c5 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c1, vt64.c0, rt1.c3, rt1.c2, vt64.lid, rt1.c5 FROM rt1, vt64 GROUP BY rt1.c1, vt64.c0, rt1.c3, rt1.c2, vt64.lid, rt1.c5 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c1, vt64.c0, rt1.c3, rt1.c2, vt64.lid, rt1.c5 FROM rt1, vt64 GROUP BY rt1.c1, vt64.c0, rt1.c3, rt1.c2, vt64.lid, rt1.c5;
SELECT * FROM vt64, rt1;
SELECT * FROM vt64 NOT INDEXED, rt1 WHERE (rt1.c1) UNION ALL SELECT ALL * FROM vt64, rt1 WHERE ((NOT (rt1.c1))) UNION ALL SELECT ALL * FROM vt64, rt1 WHERE (((rt1.c1) ISNULL));
SELECT * FROM vt64, rt1;
SELECT DISTINCT * FROM rt1, vt64;
SELECT DISTINCT * FROM rt1, vt64 WHERE (((NULL) NOT BETWEEN (((rt1.c5)<('\r^y''*Nk'))) AND (((rt1.c4)AND(rt1.c6))))) UNION SELECT DISTINCT * FROM rt1, vt64 WHERE ((NOT (((NULL) NOT BETWEEN (((rt1.c5)<('\r^y''*Nk'))) AND (((rt1.c4)AND(rt1.c6))))))) UNION SELECT DISTINCT * FROM rt1, vt64 WHERE (((((NULL) NOT BETWEEN (((rt1.c5)<('\r^y''*Nk'))) AND (((rt1.c4)AND(rt1.c6))))) ISNULL));
SELECT DISTINCT * FROM rt1, vt64;
SELECT ALL vt64.lid FROM vt64 GROUP BY vt64.lid;
SELECT vt64.lid FROM vt64 WHERE (((((((((((vt64.c0)OR('939732202')))AND(vt64.c0)))OR(vt64.lid)))OR(vt64.c0)))IS NOT(CAST(vt64.lid AS NUMERIC)))) GROUP BY vt64.lid UNION SELECT ALL vt64.lid FROM vt64 WHERE ((NOT (((((((((((vt64.c0)OR('939732202')))AND(vt64.c0)))OR(vt64.lid)))OR(vt64.c0)))IS NOT(CAST(vt64.lid AS NUMERIC)))))) GROUP BY vt64.lid UNION SELECT ALL vt64.lid FROM vt64 WHERE (((((((((((((vt64.c0)OR('939732202')))AND(vt64.c0)))OR(vt64.lid)))OR(vt64.c0)))IS NOT(CAST(vt64.lid AS NUMERIC)))) ISNULL)) GROUP BY vt64.lid;
SELECT ALL vt64.lid FROM vt64 GROUP BY vt64.lid;
SELECT rt1.c3, rt1.c6, rt1.c4, rt1.c1, rt1.c2, rt1.c5 FROM rt1 GROUP BY rt1.c3, rt1.c6, rt1.c4, rt1.c1, rt1.c2, rt1.c5;
SELECT ALL rt1.c3, rt1.c6, rt1.c4, rt1.c1, rt1.c2, rt1.c5 FROM rt1 GROUP BY rt1.c3, rt1.c6, rt1.c4, rt1.c1, rt1.c2, rt1.c5 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c3, rt1.c6, rt1.c4, rt1.c1, rt1.c2, rt1.c5 FROM rt1 GROUP BY rt1.c3, rt1.c6, rt1.c4, rt1.c1, rt1.c2, rt1.c5 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c3, rt1.c6, rt1.c4, rt1.c1, rt1.c2, rt1.c5 FROM rt1 GROUP BY rt1.c3, rt1.c6, rt1.c4, rt1.c1, rt1.c2, rt1.c5 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c3, rt1.c6, rt1.c4, rt1.c1, rt1.c2, rt1.c5 FROM rt1 GROUP BY rt1.c3, rt1.c6, rt1.c4, rt1.c1, rt1.c2, rt1.c5;
SELECT ALL rt1.c3, rt1.c6, rt1.c4, rt1.c1, rt1.c2, rt1.c5 FROM rt1 GROUP BY rt1.c3, rt1.c6, rt1.c4, rt1.c1, rt1.c2, rt1.c5 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c3, rt1.c6, rt1.c4, rt1.c1, rt1.c2, rt1.c5 FROM rt1 GROUP BY rt1.c3, rt1.c6, rt1.c4, rt1.c1, rt1.c2, rt1.c5 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c3, rt1.c6, rt1.c4, rt1.c1, rt1.c2, rt1.c5 FROM rt1 GROUP BY rt1.c3, rt1.c6, rt1.c4, rt1.c1, rt1.c2, rt1.c5 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c3, rt1.c6, rt1.c4, rt1.c1, rt1.c2, rt1.c5 FROM rt1 GROUP BY rt1.c3, rt1.c6, rt1.c4, rt1.c1, rt1.c2, rt1.c5;
SELECT rt1.c5, rt1.c2, rt1.c3, rt1.c4, vt64.c0, rt1.c1 FROM vt64 LEFT OUTER JOIN rt1 ON (((((rt1.c4))<>((rt1.c1)))) NOT NULL);
SELECT ALL rt1.c5, rt1.c2, rt1.c3, rt1.c4, vt64.c0, rt1.c1 FROM vt64 NOT INDEXED LEFT OUTER JOIN rt1 ON (((((rt1.c4))<>((rt1.c1)))) NOT NULL) WHERE ((CAST(rt1.c2 AS INTEGER) IN ())) UNION ALL SELECT ALL rt1.c5, rt1.c2, rt1.c3, rt1.c4, vt64.c0, rt1.c1 FROM vt64 LEFT OUTER JOIN rt1 ON (((((rt1.c4))!=((rt1.c1)))) NOT NULL) WHERE ((NOT ((CAST(rt1.c2 AS INTEGER) IN ())))) UNION ALL SELECT ALL rt1.c5, rt1.c2, rt1.c3, rt1.c4, vt64.c0, rt1.c1 FROM vt64 LEFT OUTER JOIN rt1 ON (((((rt1.c4))!=((rt1.c1)))) NOT NULL) WHERE ((((CAST(rt1.c2 AS INTEGER) IN ())) ISNULL));
SELECT rt1.c5, rt1.c2, rt1.c3, rt1.c4, vt64.c0, rt1.c1 FROM vt64 LEFT OUTER JOIN rt1 ON (((((rt1.c4))<>((rt1.c1)))) NOT NULL);
SELECT DISTINCT rt1.c6 FROM rt1 NATURAL JOIN vt64;
SELECT DISTINCT rt1.c6 FROM rt1 NATURAL JOIN vt64 WHERE (rt1.c5) UNION SELECT DISTINCT rt1.c6 FROM rt1 NATURAL JOIN vt64 WHERE ((NOT (rt1.c5))) UNION SELECT DISTINCT rt1.c6 FROM rt1 NATURAL JOIN vt64 WHERE (((rt1.c5) ISNULL));
SELECT DISTINCT rt1.c6 FROM rt1 NATURAL JOIN vt64;
SELECT vt64.lid, vt64.c0 FROM vt64 GROUP BY vt64.lid, vt64.c0;
SELECT vt64.lid, vt64.c0 FROM vt64 WHERE (CASE LIKELY(vt64.c0)  WHEN (NOT (vt64.c0)) THEN ((vt64.c0)&('631703153')) ELSE ((vt64.lid)<(vt64.c0)) END) GROUP BY vt64.lid, vt64.c0 UNION SELECT ALL vt64.lid, vt64.c0 FROM vt64 WHERE ((NOT (CASE LIKELY(vt64.c0)  WHEN (NOT (vt64.c0)) THEN ((vt64.c0)&('631703153')) ELSE ((vt64.lid)<(vt64.c0)) END))) GROUP BY vt64.lid, vt64.c0 UNION SELECT ALL vt64.lid, vt64.c0 FROM vt64 WHERE (((CASE LIKELY(vt64.c0)  WHEN (NOT (vt64.c0)) THEN ((vt64.c0)&('631703153')) ELSE ((vt64.lid)<(vt64.c0)) END) ISNULL)) GROUP BY vt64.lid, vt64.c0;
SELECT vt64.lid, vt64.c0 FROM vt64 GROUP BY vt64.lid, vt64.c0;
SELECT rt1.c0, vt64.c0, vt64.lid, rt1.c6, rt1.c4, rt1.c2, rt1.c5 FROM rt1, vt64 GROUP BY rt1.c0, vt64.c0, vt64.lid, rt1.c6, rt1.c4, rt1.c2, rt1.c5;
SELECT ALL rt1.c0, vt64.c0, vt64.lid, rt1.c6, rt1.c4, rt1.c2, rt1.c5 FROM rt1, vt64 GROUP BY rt1.c0, vt64.c0, vt64.lid, rt1.c6, rt1.c4, rt1.c2, rt1.c5 HAVING rt1.c3 UNION ALL SELECT rt1.c0, vt64.c0, vt64.lid, rt1.c6, rt1.c4, rt1.c2, rt1.c5 FROM rt1, vt64 GROUP BY rt1.c0, vt64.c0, vt64.lid, rt1.c6, rt1.c4, rt1.c2, rt1.c5 HAVING (NOT (rt1.c3)) UNION ALL SELECT rt1.c0, vt64.c0, vt64.lid, rt1.c6, rt1.c4, rt1.c2, rt1.c5 FROM rt1, vt64 GROUP BY rt1.c0, vt64.c0, vt64.lid, rt1.c6, rt1.c4, rt1.c2, rt1.c5 HAVING ((rt1.c3) ISNULL);
SELECT rt1.c0, vt64.c0, vt64.lid, rt1.c6, rt1.c4, rt1.c2, rt1.c5 FROM rt1, vt64 GROUP BY rt1.c0, vt64.c0, vt64.lid, rt1.c6, rt1.c4, rt1.c2, rt1.c5;
SELECT ALL rt1.c0, vt64.c0, vt64.lid, rt1.c6, rt1.c4, rt1.c2, rt1.c5 FROM rt1, vt64 GROUP BY rt1.c0, vt64.c0, vt64.lid, rt1.c6, rt1.c4, rt1.c2, rt1.c5 HAVING rt1.c3 UNION ALL SELECT rt1.c0, vt64.c0, vt64.lid, rt1.c6, rt1.c4, rt1.c2, rt1.c5 FROM rt1, vt64 GROUP BY rt1.c0, vt64.c0, vt64.lid, rt1.c6, rt1.c4, rt1.c2, rt1.c5 HAVING (NOT (rt1.c3)) UNION ALL SELECT rt1.c0, vt64.c0, vt64.lid, rt1.c6, rt1.c4, rt1.c2, rt1.c5 FROM rt1, vt64 GROUP BY rt1.c0, vt64.c0, vt64.lid, rt1.c6, rt1.c4, rt1.c2, rt1.c5 HAVING ((rt1.c3) ISNULL);
SELECT rt1.c0, vt64.c0, vt64.lid, rt1.c6, rt1.c4, rt1.c2, rt1.c5 FROM rt1, vt64 GROUP BY rt1.c0, vt64.c0, vt64.lid, rt1.c6, rt1.c4, rt1.c2, rt1.c5;
SELECT vt64.lid, rt1.c4, rt1.c6, rt1.c3 FROM rt1 INNER JOIN vt64 ON (CAST(vt64.c0 AS TEXT) IN ());
SELECT vt64.lid, rt1.c4, rt1.c6, rt1.c3 FROM rt1 INNER JOIN vt64 ON (CAST(vt64.c0 AS TEXT) IN ()) WHERE (CAST((rt1.c0 IN ()) AS BLOB)) UNION ALL SELECT ALL vt64.lid, rt1.c4, rt1.c6, rt1.c3 FROM rt1 INNER JOIN vt64 ON (CAST(vt64.c0 AS TEXT) IN ()) WHERE ((NOT (CAST((rt1.c0 IN ()) AS BLOB)))) UNION ALL SELECT vt64.lid, rt1.c4, rt1.c6, rt1.c3 FROM rt1 INNER JOIN vt64 ON (CAST(vt64.c0 AS TEXT) IN ()) WHERE (((CAST((rt1.c0 IN ()) AS BLOB)) ISNULL));
SELECT vt64.lid, rt1.c4, rt1.c6, rt1.c3 FROM rt1 INNER JOIN vt64 ON (CAST(vt64.c0 AS TEXT) IN ());
SELECT DISTINCT * FROM vt64;
SELECT DISTINCT * FROM vt64 WHERE ((((vt64.c0) NOT NULL) IN (json_extract(vt64.c0, vt64.lid, vt64.c0, '129394183', vt64.lid, vt64.lid)))) UNION SELECT DISTINCT * FROM vt64 WHERE ((NOT ((((vt64.c0) NOT NULL) IN (json_extract(vt64.c0, vt64.lid, vt64.c0, '129394183', vt64.lid, vt64.lid)))))) UNION SELECT DISTINCT * FROM vt64 WHERE ((((((vt64.c0) NOT NULL) IN (json_extract(vt64.c0, vt64.lid, vt64.c0, '129394183', vt64.lid, vt64.lid)))) ISNULL));
SELECT rt1.c5, vt64.lid, rt1.c4 FROM rt1, vt64 GROUP BY rt1.c5, vt64.lid, rt1.c4;
SELECT rt1.c5, vt64.lid, rt1.c4 FROM rt1, vt64 WHERE (CAST((('419513352')LIKE(rt1.c6)) AS NUMERIC)) GROUP BY rt1.c5, vt64.lid, rt1.c4 UNION SELECT rt1.c5, vt64.lid, rt1.c4 FROM rt1, vt64 WHERE ((NOT (CAST((('419513352')LIKE(rt1.c6)) AS NUMERIC)))) GROUP BY rt1.c5, vt64.lid, rt1.c4 UNION SELECT ALL rt1.c5, vt64.lid, rt1.c4 FROM rt1, vt64 WHERE (((CAST((('419513352')LIKE(rt1.c6)) AS NUMERIC)) ISNULL)) GROUP BY rt1.c5, vt64.lid, rt1.c4;
SELECT rt1.c5, vt64.lid, rt1.c4 FROM rt1, vt64 GROUP BY rt1.c5, vt64.lid, rt1.c4;
SELECT rt1.c6, rt1.c2, rt1.c5 FROM vt64, rt1 GROUP BY rt1.c6, rt1.c2, rt1.c5;
SELECT ALL rt1.c6, rt1.c2, rt1.c5 FROM vt64, rt1 GROUP BY rt1.c6, rt1.c2, rt1.c5 HAVING COUNT(TOTAL(TOTAL(MIN(MIN(rt1.c6))))) UNION ALL SELECT ALL rt1.c6, rt1.c2, rt1.c5 FROM vt64, rt1 GROUP BY rt1.c6, rt1.c2, rt1.c5 HAVING (NOT (COUNT(TOTAL(TOTAL(MIN(MIN(rt1.c6))))))) UNION ALL SELECT rt1.c6, rt1.c2, rt1.c5 FROM vt64, rt1 GROUP BY rt1.c6, rt1.c2, rt1.c5 HAVING ((COUNT(TOTAL(TOTAL(MIN(MIN(rt1.c6)))))) ISNULL);
SELECT ALL vt64.lid FROM vt64;
SELECT vt64.lid FROM vt64 WHERE ((vt64.lid IN ((x'6bfc' IN ())))) UNION ALL SELECT ALL vt64.lid FROM vt64 WHERE ((NOT ((vt64.lid IN ((x'6bfc' IN ())))))) UNION ALL SELECT ALL vt64.lid FROM vt64 WHERE ((((vt64.lid IN ((x'6bfc' IN ())))) ISNULL));
SELECT ALL vt64.lid FROM vt64;
SELECT DISTINCT * FROM rt1, vt64;
SELECT DISTINCT * FROM rt1, vt64 WHERE ((((((rt1.c5)) BETWEEN ((vt64.lid)) AND ((x''))))||((rt1.c3 IN ())))) UNION SELECT DISTINCT * FROM rt1, vt64 WHERE ((NOT ((((((rt1.c5)) BETWEEN ((vt64.lid)) AND ((x''))))||((rt1.c3 IN ())))))) UNION SELECT DISTINCT * FROM rt1, vt64 WHERE ((((((((rt1.c5)) BETWEEN ((vt64.lid)) AND ((x''))))||((rt1.c3 IN ())))) ISNULL));
SELECT DISTINCT * FROM rt1, vt64;
SELECT ALL vt64.lid, vt64.c0 FROM vt64 NOT INDEXED GROUP BY vt64.lid, vt64.c0;
SELECT ALL vt64.lid, vt64.c0 FROM vt64 WHERE (CASE WHEN CASE vt64.c0  WHEN vt64.c0 THEN vt64.lid WHEN vt64.c0 THEN vt64.lid WHEN vt64.lid THEN vt64.c0 END THEN ((vt64.lid) NOT BETWEEN (vt64.c0) AND (vt64.c0)) WHEN (- (vt64.lid)) THEN ((vt64.lid)/(vt64.c0)) WHEN (('0.8032066451758751')%(vt64.c0)) THEN CAST(vt64.c0 AS TEXT) END) GROUP BY vt64.lid, vt64.c0 UNION SELECT ALL vt64.lid, vt64.c0 FROM vt64 WHERE ((NOT (CASE WHEN CASE vt64.c0  WHEN vt64.c0 THEN vt64.lid WHEN vt64.c0 THEN vt64.lid WHEN vt64.lid THEN vt64.c0 END THEN ((vt64.lid) NOT BETWEEN (vt64.c0) AND (vt64.c0)) WHEN (- (vt64.lid)) THEN ((vt64.lid)/(vt64.c0)) WHEN (('0.8032066451758751')%(vt64.c0)) THEN CAST(vt64.c0 AS TEXT) END))) GROUP BY vt64.lid, vt64.c0 UNION SELECT ALL vt64.lid, vt64.c0 FROM vt64 WHERE (((CASE WHEN CASE vt64.c0  WHEN vt64.c0 THEN vt64.lid WHEN vt64.c0 THEN vt64.lid WHEN vt64.lid THEN vt64.c0 END THEN ((vt64.lid) NOT BETWEEN (vt64.c0) AND (vt64.c0)) WHEN (- (vt64.lid)) THEN ((vt64.lid)/(vt64.c0)) WHEN (('0.8032066451758751')%(vt64.c0)) THEN CAST(vt64.c0 AS TEXT) END) ISNULL)) GROUP BY vt64.lid, vt64.c0;
SELECT ALL vt64.lid, vt64.c0 FROM vt64 NOT INDEXED GROUP BY vt64.lid, vt64.c0;
SELECT rt1.c0, rt1.c4, rt1.c5, vt64.lid, vt64.c0, rt1.c6, rt1.c1, rt1.c2 FROM rt1, vt64 GROUP BY rt1.c0, rt1.c4, rt1.c5, vt64.lid, vt64.c0, rt1.c6, rt1.c1, rt1.c2;
SELECT ALL rt1.c0, rt1.c4, rt1.c5, vt64.lid, vt64.c0, rt1.c6, rt1.c1, rt1.c2 FROM rt1, vt64 GROUP BY rt1.c0, rt1.c4, rt1.c5, vt64.lid, vt64.c0, rt1.c6, rt1.c1, rt1.c2 HAVING (CASE rt1.c3  WHEN vt64.c0 THEN MAX(COUNT(MIN(MAX(GROUP_CONCAT(MAX(rt1.c1)))))) WHEN SUM(vt64.lid) THEN rt1.c4 WHEN rt1.c6 THEN AVG('1939863374') END IN ()) UNION ALL SELECT rt1.c0, rt1.c4, rt1.c5, vt64.lid, vt64.c0, rt1.c6, rt1.c1, rt1.c2 FROM rt1, vt64 GROUP BY rt1.c0, rt1.c4, rt1.c5, vt64.lid, vt64.c0, rt1.c6, rt1.c1, rt1.c2 HAVING (NOT ((CASE rt1.c3  WHEN vt64.c0 THEN MAX(COUNT(MIN(MAX(GROUP_CONCAT(MAX(rt1.c1)))))) WHEN SUM(vt64.lid) THEN rt1.c4 WHEN rt1.c6 THEN AVG('1939863374') END IN ()))) UNION ALL SELECT ALL rt1.c0, rt1.c4, rt1.c5, vt64.lid, vt64.c0, rt1.c6, rt1.c1, rt1.c2 FROM rt1, vt64 GROUP BY rt1.c0, rt1.c4, rt1.c5, vt64.lid, vt64.c0, rt1.c6, rt1.c1, rt1.c2 HAVING (((CASE rt1.c3  WHEN vt64.c0 THEN MAX(COUNT(MIN(MAX(GROUP_CONCAT(MAX(rt1.c1)))))) WHEN SUM(vt64.lid) THEN rt1.c4 WHEN rt1.c6 THEN AVG('1939863374') END IN ())) ISNULL);
SELECT rt1.c0, rt1.c4, rt1.c5, vt64.lid, vt64.c0, rt1.c6, rt1.c1, rt1.c2 FROM rt1, vt64 GROUP BY rt1.c0, rt1.c4, rt1.c5, vt64.lid, vt64.c0, rt1.c6, rt1.c1, rt1.c2;
SELECT ALL rt1.c0, rt1.c4, rt1.c5, vt64.lid, vt64.c0, rt1.c6, rt1.c1, rt1.c2 FROM rt1, vt64 GROUP BY rt1.c0, rt1.c4, rt1.c5, vt64.lid, vt64.c0, rt1.c6, rt1.c1, rt1.c2 HAVING (CASE rt1.c3  WHEN vt64.c0 THEN MAX(COUNT(MIN(MAX(GROUP_CONCAT(MAX(rt1.c1)))))) WHEN SUM(vt64.lid) THEN rt1.c4 WHEN rt1.c6 THEN AVG('1939863374') END IN ()) UNION ALL SELECT rt1.c0, rt1.c4, rt1.c5, vt64.lid, vt64.c0, rt1.c6, rt1.c1, rt1.c2 FROM rt1, vt64 GROUP BY rt1.c0, rt1.c4, rt1.c5, vt64.lid, vt64.c0, rt1.c6, rt1.c1, rt1.c2 HAVING (NOT ((CASE rt1.c3  WHEN vt64.c0 THEN MAX(COUNT(MIN(MAX(GROUP_CONCAT(MAX(rt1.c1)))))) WHEN SUM(vt64.lid) THEN rt1.c4 WHEN rt1.c6 THEN AVG('1939863374') END IN ()))) UNION ALL SELECT ALL rt1.c0, rt1.c4, rt1.c5, vt64.lid, vt64.c0, rt1.c6, rt1.c1, rt1.c2 FROM rt1, vt64 GROUP BY rt1.c0, rt1.c4, rt1.c5, vt64.lid, vt64.c0, rt1.c6, rt1.c1, rt1.c2 HAVING (((CASE rt1.c3  WHEN vt64.c0 THEN MAX(COUNT(MIN(MAX(GROUP_CONCAT(MAX(rt1.c1)))))) WHEN SUM(vt64.lid) THEN rt1.c4 WHEN rt1.c6 THEN AVG('1939863374') END IN ())) ISNULL);
SELECT rt1.c0, rt1.c4, rt1.c5, vt64.lid, vt64.c0, rt1.c6, rt1.c1, rt1.c2 FROM rt1, vt64 GROUP BY rt1.c0, rt1.c4, rt1.c5, vt64.lid, vt64.c0, rt1.c6, rt1.c1, rt1.c2;
SELECT ALL * FROM vt64;
SELECT * FROM vt64 WHERE (vt64.c0) UNION ALL SELECT ALL * FROM vt64 WHERE ((NOT (vt64.c0))) UNION ALL SELECT * FROM vt64 WHERE (((vt64.c0) ISNULL));
SELECT ALL * FROM vt64;
SELECT DISTINCT vt64.lid FROM rt1, vt64;
SELECT DISTINCT vt64.lid FROM rt1, vt64 WHERE (ABS(DISTINCT ((((rt1.c0)AND(vt64.lid)))AND(rt1.c6)))) UNION SELECT DISTINCT vt64.lid FROM rt1, vt64 WHERE ((NOT (ABS(DISTINCT ((((rt1.c0)AND(vt64.lid)))AND(rt1.c6)))))) UNION SELECT DISTINCT vt64.lid FROM rt1, vt64 WHERE (((ABS(DISTINCT ((((rt1.c0)AND(vt64.lid)))AND(rt1.c6)))) ISNULL));
SELECT DISTINCT vt64.lid FROM rt1, vt64;
SELECT ALL vt64.lid, rt1.c5, rt1.c2, rt1.c3 FROM rt1, vt64 GROUP BY vt64.lid, rt1.c5, rt1.c2, rt1.c3;
SELECT vt64.lid, rt1.c5, rt1.c2, rt1.c3 FROM rt1, vt64 WHERE ((((((vt64.c0)) NOT BETWEEN ((vt64.lid)) AND ((rt1.c0))))LIKE((- ('-1850236823'))))) GROUP BY vt64.lid, rt1.c5, rt1.c2, rt1.c3 UNION SELECT ALL vt64.lid, rt1.c5, rt1.c2, rt1.c3 FROM rt1 NOT INDEXED, vt64 WHERE ((NOT ((((((vt64.c0)) NOT BETWEEN ((vt64.lid)) AND ((rt1.c0))))LIKE((- ('-1850236823'))))))) GROUP BY vt64.lid, rt1.c5, rt1.c2, rt1.c3 UNION SELECT ALL vt64.lid, rt1.c5, rt1.c2, rt1.c3 FROM rt1, vt64 WHERE ((((((((vt64.c0)) NOT BETWEEN ((vt64.lid)) AND ((rt1.c0))))LIKE((- ('-1850236823'))))) ISNULL)) GROUP BY vt64.lid, rt1.c5, rt1.c2, rt1.c3;
SELECT ALL vt64.lid, rt1.c5, rt1.c2, rt1.c3 FROM rt1, vt64 GROUP BY vt64.lid, rt1.c5, rt1.c2, rt1.c3;
SELECT vt64.lid, rt1.c1, rt1.c0, rt1.c5, rt1.c4, vt64.c0 FROM vt64, rt1 GROUP BY vt64.lid, rt1.c1, rt1.c0, rt1.c5, rt1.c4, vt64.c0;
SELECT ALL vt64.lid, rt1.c1, rt1.c0, rt1.c5, rt1.c4, vt64.c0 FROM vt64, rt1 GROUP BY vt64.lid, rt1.c1, rt1.c0, rt1.c5, rt1.c4, vt64.c0 HAVING (((AVG(rt1.c6) IN ())) BETWEEN ((((('-887098363')AND(MAX(x''))))AND(SUM(COUNT(COUNT(MIN(vt64.lid))))))) AND (SUM(vt64.lid))) UNION ALL SELECT ALL vt64.lid, rt1.c1, rt1.c0, rt1.c5, rt1.c4, vt64.c0 FROM vt64, rt1 GROUP BY vt64.lid, rt1.c1, rt1.c0, rt1.c5, rt1.c4, vt64.c0 HAVING (NOT ((((AVG(rt1.c6) IN ())) BETWEEN ((((('-887098363')AND(MAX(x''))))AND(SUM(COUNT(COUNT(MIN(vt64.lid))))))) AND (SUM(vt64.lid))))) UNION ALL SELECT ALL vt64.lid, rt1.c1, rt1.c0, rt1.c5, rt1.c4, vt64.c0 FROM vt64, rt1 GROUP BY vt64.lid, rt1.c1, rt1.c0, rt1.c5, rt1.c4, vt64.c0 HAVING (((((AVG(rt1.c6) IN ())) BETWEEN ((((('-887098363')AND(MAX(x''))))AND(SUM(COUNT(COUNT(MIN(vt64.lid))))))) AND (SUM(vt64.lid)))) ISNULL);
SELECT rt1.c1, rt1.c0, rt1.c6, rt1.c3, rt1.c5, vt64.c0, rt1.c2, rt1.c4, vt64.lid FROM vt64, rt1;
SELECT ALL rt1.c1, rt1.c0, rt1.c6, rt1.c3, rt1.c5, vt64.c0, rt1.c2, rt1.c4, vt64.lid FROM vt64, rt1 WHERE (((CASE WHEN rt1.c0 THEN vt64.lid ELSE rt1.c2 END) NOT BETWEEN ((NOT (rt1.c4))) AND (CASE rt1.c6  WHEN rt1.c5 THEN rt1.c3 ELSE vt64.c0 END))) UNION ALL SELECT ALL rt1.c1, rt1.c0, rt1.c6, rt1.c3, rt1.c5, vt64.c0, rt1.c2, rt1.c4, vt64.lid FROM vt64, rt1 WHERE ((NOT (((CASE WHEN rt1.c0 THEN vt64.lid ELSE rt1.c2 END) NOT BETWEEN ((NOT (rt1.c4))) AND (CASE rt1.c6  WHEN rt1.c5 THEN rt1.c3 ELSE vt64.c0 END))))) UNION ALL SELECT rt1.c1, rt1.c0, rt1.c6, rt1.c3, rt1.c5, vt64.c0, rt1.c2, rt1.c4, vt64.lid FROM vt64, rt1 WHERE (((((CASE WHEN rt1.c0 THEN vt64.lid ELSE rt1.c2 END) NOT BETWEEN ((NOT (rt1.c4))) AND (CASE rt1.c6  WHEN rt1.c5 THEN rt1.c3 ELSE vt64.c0 END))) ISNULL));
SELECT rt1.c1, rt1.c0, rt1.c6, rt1.c3, rt1.c5, vt64.c0, rt1.c2, rt1.c4, vt64.lid FROM vt64, rt1;
SELECT DISTINCT * FROM rt1, vt64;
SELECT DISTINCT * FROM rt1, vt64 WHERE (CASE NULL  WHEN rt1.c1 THEN vt64.lid ELSE (rt1.c2 IN (vt64.lid)) END) UNION SELECT DISTINCT * FROM rt1, vt64 WHERE ((NOT (CASE NULL  WHEN rt1.c1 THEN vt64.lid ELSE (rt1.c2 IN (vt64.lid)) END))) UNION SELECT DISTINCT * FROM rt1, vt64 WHERE (((CASE NULL  WHEN rt1.c1 THEN vt64.lid ELSE (rt1.c2 IN (vt64.lid)) END) ISNULL));
SELECT DISTINCT * FROM rt1, vt64;
SELECT ALL vt64.c0 FROM vt64 GROUP BY vt64.c0;
SELECT ALL vt64.c0 FROM vt64 WHERE (((((LIKELIHOOD(DISTINCT vt64.c0, 0.7137502088798132))OR(vt64.c0)))OR(((vt64.lid)>>(vt64.c0))))) GROUP BY vt64.c0 UNION SELECT vt64.c0 FROM vt64 WHERE ((NOT (((((LIKELIHOOD(DISTINCT vt64.c0, 0.7137502088798132))OR(vt64.c0)))OR(((vt64.lid)>>(vt64.c0))))))) GROUP BY vt64.c0 UNION SELECT ALL vt64.c0 FROM vt64 WHERE (((((((LIKELIHOOD(DISTINCT vt64.c0, 0.7137502088798132))OR(vt64.c0)))OR(((vt64.lid)>>(vt64.c0))))) ISNULL)) GROUP BY vt64.c0;
SELECT ALL vt64.c0 FROM vt64 GROUP BY vt64.c0;
SELECT ALL rt1.c2, rt1.c1, rt1.c3 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c3;
SELECT ALL rt1.c2, rt1.c1, rt1.c3 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c3 HAVING AVG(((((rt1.c4)AND(TOTAL(rt1.c1))))AND(rt1.c3))) UNION ALL SELECT ALL rt1.c2, rt1.c1, rt1.c3 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c3 HAVING (NOT (AVG(((((rt1.c4)AND(TOTAL(rt1.c1))))AND(rt1.c3))))) UNION ALL SELECT ALL rt1.c2, rt1.c1, rt1.c3 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c3 HAVING ((AVG(((((rt1.c4)AND(TOTAL(rt1.c1))))AND(rt1.c3)))) ISNULL);
SELECT ALL rt1.c6, rt1.c4, rt1.c5, rt1.c0, rt1.c3 FROM rt1;
SELECT ALL rt1.c6, rt1.c4, rt1.c5, rt1.c0, rt1.c3 FROM rt1 WHERE (((((rt1.c3 IN ())))<((((rt1.c3) NOT BETWEEN (rt1.c0) AND (rt1.c4)))))) UNION ALL SELECT rt1.c6, rt1.c4, rt1.c5, rt1.c0, rt1.c3 FROM rt1 WHERE ((NOT (((((rt1.c3 IN ())))<((((rt1.c3) NOT BETWEEN (rt1.c0) AND (rt1.c4)))))))) UNION ALL SELECT ALL rt1.c6, rt1.c4, rt1.c5, rt1.c0, rt1.c3 FROM rt1 WHERE (((((((rt1.c3 IN ())))<((((rt1.c3) NOT BETWEEN (rt1.c0) AND (rt1.c4)))))) ISNULL));
SELECT ALL rt1.c6, rt1.c4, rt1.c5, rt1.c0, rt1.c3 FROM rt1;
SELECT DISTINCT vt64.lid FROM vt64;
SELECT DISTINCT vt64.lid FROM vt64 WHERE ((((vt64.c0, vt64.lid, vt64.c0)) NOT BETWEEN ((CAST(vt64.lid AS INTEGER), ((vt64.lid) NOT BETWEEN (vt64.c0) AND (vt64.lid)), ((((vt64.lid)AND(vt64.c0)))OR(vt64.c0)))) AND ((CAST(vt64.c0 AS NUMERIC), (((vt64.c0))<=((vt64.c0))), vt64.c0)))) UNION SELECT DISTINCT vt64.lid FROM vt64 WHERE ((NOT ((((vt64.c0, vt64.lid, vt64.c0)) NOT BETWEEN ((CAST(vt64.lid AS INTEGER), ((vt64.lid) NOT BETWEEN (vt64.c0) AND (vt64.lid)), ((((vt64.lid)AND(vt64.c0)))OR(vt64.c0)))) AND ((CAST(vt64.c0 AS NUMERIC), (((vt64.c0))<=((vt64.c0))), vt64.c0)))))) UNION SELECT DISTINCT vt64.lid FROM vt64 WHERE ((((((vt64.c0, vt64.lid, vt64.c0)) NOT BETWEEN ((CAST(vt64.lid AS INTEGER), ((vt64.lid) NOT BETWEEN (vt64.c0) AND (vt64.lid)), ((((vt64.lid)AND(vt64.c0)))OR(vt64.c0)))) AND ((CAST(vt64.c0 AS NUMERIC), (((vt64.c0))<=((vt64.c0))), vt64.c0)))) ISNULL));
SELECT DISTINCT vt64.lid FROM vt64;
SELECT rt1.c5, rt1.c1, rt1.c3 FROM vt64, rt1 GROUP BY rt1.c5, rt1.c1, rt1.c3;
SELECT ALL rt1.c5, rt1.c1, rt1.c3 FROM vt64, rt1 WHERE (((rt1.c2 COLLATE NOCASE) NOTNULL)) GROUP BY rt1.c5, rt1.c1, rt1.c3 UNION SELECT rt1.c5, rt1.c1, rt1.c3 FROM vt64, rt1 WHERE ((NOT (((rt1.c2 COLLATE NOCASE) NOTNULL)))) GROUP BY rt1.c5, rt1.c1, rt1.c3 UNION SELECT rt1.c5, rt1.c1, rt1.c3 FROM vt64, rt1 WHERE (((((rt1.c2 COLLATE NOCASE) NOTNULL)) ISNULL)) GROUP BY rt1.c5, rt1.c1, rt1.c3;
SELECT rt1.c5, rt1.c1, rt1.c3 FROM vt64, rt1 GROUP BY rt1.c5, rt1.c1, rt1.c3;
SELECT rt1.c1 FROM rt1, vt64 GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt1, vt64 GROUP BY rt1.c1 HAVING -5.92396251E8 UNION ALL SELECT rt1.c1 FROM rt1, vt64 GROUP BY rt1.c1 HAVING (NOT (-5.92396251E8)) UNION ALL SELECT ALL rt1.c1 FROM rt1, vt64 GROUP BY rt1.c1 HAVING ((-5.92396251E8) ISNULL);
SELECT rt1.c1 FROM rt1, vt64 GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt1, vt64 GROUP BY rt1.c1 HAVING -5.92396251E8 UNION ALL SELECT rt1.c1 FROM rt1, vt64 GROUP BY rt1.c1 HAVING (NOT (-5.92396251E8)) UNION ALL SELECT ALL rt1.c1 FROM rt1, vt64 GROUP BY rt1.c1 HAVING ((-5.92396251E8) ISNULL);
SELECT rt1.c1 FROM rt1, vt64 GROUP BY rt1.c1;
SELECT ALL * FROM vt64;
SELECT * FROM vt64 WHERE (((LTRIM(vt64.lid, vt64.lid)) NOTNULL)) UNION ALL SELECT ALL * FROM vt64 WHERE ((NOT (((LTRIM(vt64.lid, vt64.lid)) NOTNULL)))) UNION ALL SELECT ALL * FROM vt64 WHERE (((((LTRIM(vt64.lid, vt64.lid)) NOTNULL)) ISNULL));
SELECT ALL * FROM vt64;
SELECT DISTINCT rt1.c3 FROM rt1;
SELECT DISTINCT rt1.c3 FROM rt1 WHERE ((((((rt1.c5, rt1.c3, rt1.c1))=((rt1.c1, rt1.c3, rt1.c2)))) NOTNULL)) UNION SELECT DISTINCT rt1.c3 FROM rt1 WHERE ((NOT ((((((rt1.c5, rt1.c3, rt1.c1))=((rt1.c1, rt1.c3, rt1.c2)))) NOTNULL)))) UNION SELECT DISTINCT rt1.c3 FROM rt1 WHERE ((((((((rt1.c5, rt1.c3, rt1.c1))==((rt1.c1, rt1.c3, rt1.c2)))) NOTNULL)) ISNULL));
SELECT DISTINCT rt1.c3 FROM rt1;
SELECT vt64.c0, rt1.c1, rt1.c2, rt1.c5, rt1.c3 FROM rt1 NATURAL JOIN vt64 GROUP BY vt64.c0, rt1.c1, rt1.c2, rt1.c5, rt1.c3;
SELECT ALL vt64.c0, rt1.c1, rt1.c2, rt1.c5, rt1.c3 FROM rt1 NATURAL JOIN vt64 WHERE ((((rt1.c3)) NOT BETWEEN ((CASE rt1.c0  WHEN rt1.c4 THEN NULL ELSE rt1.c3 END)) AND (('')))) GROUP BY vt64.c0, rt1.c1, rt1.c2, rt1.c5, rt1.c3 UNION SELECT ALL vt64.c0, rt1.c1, rt1.c2, rt1.c5, rt1.c3 FROM rt1 NATURAL JOIN vt64 WHERE ((NOT ((((rt1.c3)) NOT BETWEEN ((CASE rt1.c0  WHEN rt1.c4 THEN NULL ELSE rt1.c3 END)) AND (('')))))) GROUP BY vt64.c0, rt1.c1, rt1.c2, rt1.c5, rt1.c3 UNION SELECT vt64.c0, rt1.c1, rt1.c2, rt1.c5, rt1.c3 FROM rt1 NATURAL JOIN vt64 WHERE ((((((rt1.c3)) NOT BETWEEN ((CASE rt1.c0  WHEN rt1.c4 THEN NULL ELSE rt1.c3 END)) AND (('')))) ISNULL)) GROUP BY vt64.c0, rt1.c1, rt1.c2, rt1.c5, rt1.c3;
SELECT vt64.c0, rt1.c1, rt1.c2, rt1.c5, rt1.c3 FROM rt1 NATURAL JOIN vt64 GROUP BY vt64.c0, rt1.c1, rt1.c2, rt1.c5, rt1.c3;
SELECT rt1.c5, rt1.c4, rt1.c6 FROM rt1 GROUP BY rt1.c5, rt1.c4, rt1.c6;
SELECT rt1.c5, rt1.c4, rt1.c6 FROM rt1 GROUP BY rt1.c5, rt1.c4, rt1.c6 HAVING (~ (MAX(rt1.c0))) UNION ALL SELECT ALL rt1.c5, rt1.c4, rt1.c6 FROM rt1 GROUP BY rt1.c5, rt1.c4, rt1.c6 HAVING (NOT ((~ (MAX(rt1.c0))))) UNION ALL SELECT rt1.c5, rt1.c4, rt1.c6 FROM rt1 GROUP BY rt1.c5, rt1.c4, rt1.c6 HAVING (((~ (MAX(rt1.c0)))) ISNULL);
SELECT rt1.c5, rt1.c4, rt1.c6 FROM rt1 GROUP BY rt1.c5, rt1.c4, rt1.c6;
SELECT rt1.c5, rt1.c4, rt1.c6 FROM rt1 GROUP BY rt1.c5, rt1.c4, rt1.c6 HAVING (~ (MAX(rt1.c0))) UNION ALL SELECT ALL rt1.c5, rt1.c4, rt1.c6 FROM rt1 GROUP BY rt1.c5, rt1.c4, rt1.c6 HAVING (NOT ((~ (MAX(rt1.c0))))) UNION ALL SELECT rt1.c5, rt1.c4, rt1.c6 FROM rt1 GROUP BY rt1.c5, rt1.c4, rt1.c6 HAVING (((~ (MAX(rt1.c0)))) ISNULL);
SELECT rt1.c5, rt1.c4, rt1.c6 FROM rt1 GROUP BY rt1.c5, rt1.c4, rt1.c6;
SELECT ALL * FROM rt1, vt64;
SELECT ALL * FROM rt1, vt64 WHERE (rt1.c6) UNION ALL SELECT ALL * FROM rt1, vt64 WHERE ((NOT (rt1.c6))) UNION ALL SELECT * FROM rt1, vt64 WHERE (((rt1.c6) ISNULL));
SELECT ALL * FROM rt1, vt64;
SELECT DISTINCT rt1.c2 FROM rt1, vt64;
SELECT DISTINCT rt1.c2 FROM rt1, vt64 WHERE ((((rt1.c2 IN ('FV', rt1.c4)))<<((vt64.lid IN ())))) UNION SELECT DISTINCT rt1.c2 FROM rt1, vt64 WHERE ((NOT ((((rt1.c2 IN ('FV', rt1.c4)))<<((vt64.lid IN ())))))) UNION SELECT DISTINCT rt1.c2 FROM rt1, vt64 WHERE ((((((rt1.c2 IN ('FV', rt1.c4)))<<((vt64.lid IN ())))) ISNULL));
SELECT DISTINCT rt1.c2 FROM rt1, vt64;
SELECT ALL vt64.lid, rt1.c4, rt1.c2, rt1.c5, vt64.c0, rt1.c1, rt1.c3 FROM vt64 CROSS JOIN rt1 ON ((((CAST(rt1.c4 AS REAL))OR(2.045383048E9)))OR(CAST(rt1.c0 AS REAL))) GROUP BY vt64.lid, rt1.c4, rt1.c2, rt1.c5, vt64.c0, rt1.c1, rt1.c3;
SELECT ALL vt64.lid, rt1.c4, rt1.c2, rt1.c5, vt64.c0, rt1.c1, rt1.c3 FROM vt64 CROSS JOIN rt1 ON ((((CAST(rt1.c4 AS REAL))OR(2.045383048E9)))OR(CAST(rt1.c0 AS REAL))) WHERE (CAST(((rt1.c6)-(rt1.c3)) AS TEXT)) GROUP BY vt64.lid, rt1.c4, rt1.c2, rt1.c5, vt64.c0, rt1.c1, rt1.c3 UNION SELECT vt64.lid, rt1.c4, rt1.c2, rt1.c5, vt64.c0, rt1.c1, rt1.c3 FROM vt64 NOT INDEXED CROSS JOIN rt1 ON ((((CAST(rt1.c4 AS REAL))OR(2.045383048E9)))OR(CAST(rt1.c0 AS REAL))) WHERE ((NOT (CAST(((rt1.c6)-(rt1.c3)) AS TEXT)))) GROUP BY vt64.lid, rt1.c4, rt1.c2, rt1.c5, vt64.c0, rt1.c1, rt1.c3 UNION SELECT ALL vt64.lid, rt1.c4, rt1.c2, rt1.c5, vt64.c0, rt1.c1, rt1.c3 FROM vt64 CROSS JOIN rt1 ON ((((CAST(rt1.c4 AS REAL))OR(2.045383048E9)))OR(CAST(rt1.c0 AS REAL))) WHERE (((CAST(((rt1.c6)-(rt1.c3)) AS TEXT)) ISNULL)) GROUP BY vt64.lid, rt1.c4, rt1.c2, rt1.c5, vt64.c0, rt1.c1, rt1.c3;
SELECT ALL vt64.lid, rt1.c4, rt1.c2, rt1.c5, vt64.c0, rt1.c1, rt1.c3 FROM vt64 CROSS JOIN rt1 ON ((((CAST(rt1.c4 AS REAL))OR(2.045383048E9)))OR(CAST(rt1.c0 AS REAL))) GROUP BY vt64.lid, rt1.c4, rt1.c2, rt1.c5, vt64.c0, rt1.c1, rt1.c3;
SELECT rt1.c4 FROM rt1, vt64 GROUP BY rt1.c4;
SELECT ALL rt1.c4 FROM rt1, vt64 GROUP BY rt1.c4 HAVING MAX(COUNT(*)) UNION ALL SELECT rt1.c4 FROM rt1, vt64 GROUP BY rt1.c4 HAVING (NOT (MAX(COUNT(*)))) UNION ALL SELECT rt1.c4 FROM rt1, vt64 NOT INDEXED GROUP BY rt1.c4 HAVING ((MAX(COUNT(*))) ISNULL);
SELECT * FROM rt1 NOT INDEXED;
SELECT * FROM rt1 WHERE ((((rt1.c0))>((rt1.c3))) COLLATE NOCASE COLLATE NOCASE) UNION ALL SELECT * FROM rt1 WHERE ((NOT ((((rt1.c0))>((rt1.c3))) COLLATE NOCASE COLLATE NOCASE))) UNION ALL SELECT * FROM rt1 WHERE ((((((rt1.c0))>((rt1.c3))) COLLATE NOCASE COLLATE NOCASE) ISNULL));
SELECT * FROM rt1 NOT INDEXED;
SELECT DISTINCT * FROM vt64 CROSS JOIN rt1 ON (rt1.c1 IN ());
SELECT DISTINCT * FROM vt64 CROSS JOIN rt1 ON (rt1.c1 IN ()) WHERE (((((((vt64.c0))>=((rt1.c5)))))<((((rt1.c1) IS FALSE))))) UNION SELECT DISTINCT * FROM vt64 CROSS JOIN rt1 ON (rt1.c1 IN ()) WHERE ((NOT (((((((vt64.c0))>=((rt1.c5)))))<((((rt1.c1) IS FALSE))))))) UNION SELECT DISTINCT * FROM vt64 CROSS JOIN rt1 ON (rt1.c1 IN ()) WHERE (((((((((vt64.c0))>=((rt1.c5)))))<((((rt1.c1) IS FALSE))))) ISNULL));
SELECT DISTINCT * FROM vt64 CROSS JOIN rt1 ON (rt1.c1 IN ());
SELECT rt1.c6, rt1.c1, rt1.c2 FROM vt64, rt1 GROUP BY rt1.c6, rt1.c1, rt1.c2;
SELECT rt1.c6, rt1.c1, rt1.c2 FROM vt64, rt1 WHERE (LIKELIHOOD((NOT (vt64.c0)), 0.9059258526967456)) GROUP BY rt1.c6, rt1.c1, rt1.c2 UNION SELECT ALL rt1.c6, rt1.c1, rt1.c2 FROM vt64, rt1 WHERE ((NOT (LIKELIHOOD((NOT (vt64.c0)), 0.9059258526967456)))) GROUP BY rt1.c6, rt1.c1, rt1.c2 UNION SELECT ALL rt1.c6, rt1.c1, rt1.c2 FROM vt64, rt1 WHERE (((LIKELIHOOD((NOT (vt64.c0)), 0.9059258526967456)) ISNULL)) GROUP BY rt1.c6, rt1.c1, rt1.c2;
SELECT rt1.c6, rt1.c1, rt1.c2 FROM vt64, rt1 GROUP BY rt1.c6, rt1.c1, rt1.c2;
SELECT ALL vt64.lid FROM vt64 GROUP BY vt64.lid;
SELECT ALL vt64.lid FROM vt64 GROUP BY vt64.lid HAVING ((((COUNT(vt64.lid))OR(UNLIKELY(DISTINCT vt64.lid))))AND((NOT (vt64.lid)))) UNION ALL SELECT vt64.lid FROM vt64 GROUP BY vt64.lid HAVING (NOT (((((COUNT(vt64.lid))OR(UNLIKELY(DISTINCT vt64.lid))))AND((NOT (vt64.lid)))))) UNION ALL SELECT ALL vt64.lid FROM vt64 GROUP BY vt64.lid HAVING ((((((COUNT(vt64.lid))OR(UNLIKELY(DISTINCT vt64.lid))))AND((NOT (vt64.lid))))) ISNULL);
SELECT ALL vt64.lid FROM vt64 GROUP BY vt64.lid;
SELECT ALL vt64.lid FROM vt64 GROUP BY vt64.lid HAVING ((((COUNT(vt64.lid))OR(UNLIKELY(DISTINCT vt64.lid))))AND((NOT (vt64.lid)))) UNION ALL SELECT vt64.lid FROM vt64 GROUP BY vt64.lid HAVING (NOT (((((COUNT(vt64.lid))OR(UNLIKELY(DISTINCT vt64.lid))))AND((NOT (vt64.lid)))))) UNION ALL SELECT ALL vt64.lid FROM vt64 GROUP BY vt64.lid HAVING ((((((COUNT(vt64.lid))OR(UNLIKELY(DISTINCT vt64.lid))))AND((NOT (vt64.lid))))) ISNULL);
SELECT ALL vt64.lid FROM vt64 GROUP BY vt64.lid;
SELECT rt1.c1, rt1.c4, rt1.c5 FROM rt1;
SELECT ALL rt1.c1, rt1.c4, rt1.c5 FROM rt1 WHERE (('-1023097654' IN ())) UNION ALL SELECT ALL rt1.c1, rt1.c4, rt1.c5 FROM rt1 WHERE ((NOT (('-1023097654' IN ())))) UNION ALL SELECT ALL rt1.c1, rt1.c4, rt1.c5 FROM rt1 WHERE (((('-1023097654' IN ())) ISNULL));
SELECT rt1.c1, rt1.c4, rt1.c5 FROM rt1;
SELECT DISTINCT rt1.c1, vt64.c0, rt1.c0, rt1.c4, rt1.c5, vt64.lid, rt1.c6, rt1.c3, rt1.c2 FROM rt1 RIGHT OUTER JOIN vt64 ON ((((((((rt1.c3)AND(rt1.c2)))OR(rt1.c4)))AND(rt1.c2)))AND(NULL)) COLLATE BINARY;
SELECT DISTINCT rt1.c1, vt64.c0, rt1.c0, rt1.c4, rt1.c5, vt64.lid, rt1.c6, rt1.c3, rt1.c2 FROM rt1 RIGHT OUTER JOIN vt64 ON ((((((((rt1.c3)AND(rt1.c2)))OR(rt1.c4)))AND(rt1.c2)))AND(NULL)) COLLATE BINARY WHERE (((+ (rt1.c4)) IN ())) UNION SELECT DISTINCT rt1.c1, vt64.c0, rt1.c0, rt1.c4, rt1.c5, vt64.lid, rt1.c6, rt1.c3, rt1.c2 FROM rt1 RIGHT OUTER JOIN vt64 ON ((((((((rt1.c3)AND(rt1.c2)))OR(rt1.c4)))AND(rt1.c2)))AND(NULL)) COLLATE BINARY WHERE ((NOT (((+ (rt1.c4)) IN ())))) UNION SELECT DISTINCT rt1.c1, vt64.c0, rt1.c0, rt1.c4, rt1.c5, vt64.lid, rt1.c6, rt1.c3, rt1.c2 FROM rt1 RIGHT OUTER JOIN vt64 ON ((((((((rt1.c3)AND(rt1.c2)))OR(rt1.c4)))AND(rt1.c2)))AND(NULL)) COLLATE BINARY WHERE (((((+ (rt1.c4)) IN ())) ISNULL));
SELECT DISTINCT rt1.c1, vt64.c0, rt1.c0, rt1.c4, rt1.c5, vt64.lid, rt1.c6, rt1.c3, rt1.c2 FROM rt1 RIGHT OUTER JOIN vt64 ON ((((((((rt1.c3)AND(rt1.c2)))OR(rt1.c4)))AND(rt1.c2)))AND(NULL)) COLLATE BINARY;
SELECT ALL rt1.c1, rt1.c4, vt64.c0, vt64.lid, rt1.c6 FROM vt64, rt1 GROUP BY rt1.c1, rt1.c4, vt64.c0, vt64.lid, rt1.c6;
SELECT rt1.c1, rt1.c4, vt64.c0, vt64.lid, rt1.c6 FROM vt64, rt1 WHERE (LIKELIHOOD(DISTINCT ((vt64.lid) BETWEEN (rt1.c5) AND (rt1.c4)), 0.19494633561762909)) GROUP BY rt1.c1, rt1.c4, vt64.c0, vt64.lid, rt1.c6 UNION SELECT ALL rt1.c1, rt1.c4, vt64.c0, vt64.lid, rt1.c6 FROM vt64, rt1 WHERE ((NOT (LIKELIHOOD(DISTINCT ((vt64.lid) BETWEEN (rt1.c5) AND (rt1.c4)), 0.19494633561762909)))) GROUP BY rt1.c1, rt1.c4, vt64.c0, vt64.lid, rt1.c6 UNION SELECT rt1.c1, rt1.c4, vt64.c0, vt64.lid, rt1.c6 FROM vt64, rt1 WHERE (((LIKELIHOOD(DISTINCT ((vt64.lid) BETWEEN (rt1.c5) AND (rt1.c4)), 0.19494633561762909)) ISNULL)) GROUP BY rt1.c1, rt1.c4, vt64.c0, vt64.lid, rt1.c6;
SELECT ALL rt1.c1, rt1.c4, vt64.c0, vt64.lid, rt1.c6 FROM vt64, rt1 GROUP BY rt1.c1, rt1.c4, vt64.c0, vt64.lid, rt1.c6;
SELECT ALL rt1.c3, vt64.c0, rt1.c0, rt1.c6, rt1.c2, rt1.c1, rt1.c5, rt1.c4, vt64.lid FROM vt64 LEFT OUTER JOIN rt1 ON ((vt64.lid COLLATE RTRIM)-(NULL)) GROUP BY rt1.c3, vt64.c0, rt1.c0, rt1.c6, rt1.c2, rt1.c1, rt1.c5, rt1.c4, vt64.lid;
SELECT ALL rt1.c3, vt64.c0, rt1.c0, rt1.c6, rt1.c2, rt1.c1, rt1.c5, rt1.c4, vt64.lid FROM vt64 LEFT OUTER JOIN rt1 ON ((vt64.lid COLLATE RTRIM)-(NULL)) GROUP BY rt1.c3, vt64.c0, rt1.c0, rt1.c6, rt1.c2, rt1.c1, rt1.c5, rt1.c4, vt64.lid HAVING CHANGES() COLLATE RTRIM UNION ALL SELECT ALL rt1.c3, vt64.c0, rt1.c0, rt1.c6, rt1.c2, rt1.c1, rt1.c5, rt1.c4, vt64.lid FROM vt64 LEFT OUTER JOIN rt1 ON ((vt64.lid COLLATE RTRIM)-(NULL)) GROUP BY rt1.c3, vt64.c0, rt1.c0, rt1.c6, rt1.c2, rt1.c1, rt1.c5, rt1.c4, vt64.lid HAVING (NOT (CHANGES() COLLATE RTRIM)) UNION ALL SELECT rt1.c3, vt64.c0, rt1.c0, rt1.c6, rt1.c2, rt1.c1, rt1.c5, rt1.c4, vt64.lid FROM vt64 LEFT OUTER JOIN rt1 ON ((vt64.lid COLLATE RTRIM)-(NULL)) GROUP BY rt1.c3, vt64.c0, rt1.c0, rt1.c6, rt1.c2, rt1.c1, rt1.c5, rt1.c4, vt64.lid HAVING ((CHANGES() COLLATE RTRIM) ISNULL);
SELECT ALL rt1.c3, vt64.c0, rt1.c0, rt1.c6, rt1.c2, rt1.c1, rt1.c5, rt1.c4, vt64.lid FROM vt64 LEFT OUTER JOIN rt1 ON ((vt64.lid COLLATE RTRIM)-(NULL)) GROUP BY rt1.c3, vt64.c0, rt1.c0, rt1.c6, rt1.c2, rt1.c1, rt1.c5, rt1.c4, vt64.lid;
SELECT ALL rt1.c3, vt64.c0, rt1.c0, rt1.c6, rt1.c2, rt1.c1, rt1.c5, rt1.c4, vt64.lid FROM vt64 LEFT OUTER JOIN rt1 ON ((vt64.lid COLLATE RTRIM)-(NULL)) GROUP BY rt1.c3, vt64.c0, rt1.c0, rt1.c6, rt1.c2, rt1.c1, rt1.c5, rt1.c4, vt64.lid HAVING CHANGES() COLLATE RTRIM UNION ALL SELECT ALL rt1.c3, vt64.c0, rt1.c0, rt1.c6, rt1.c2, rt1.c1, rt1.c5, rt1.c4, vt64.lid FROM vt64 LEFT OUTER JOIN rt1 ON ((vt64.lid COLLATE RTRIM)-(NULL)) GROUP BY rt1.c3, vt64.c0, rt1.c0, rt1.c6, rt1.c2, rt1.c1, rt1.c5, rt1.c4, vt64.lid HAVING (NOT (CHANGES() COLLATE RTRIM)) UNION ALL SELECT rt1.c3, vt64.c0, rt1.c0, rt1.c6, rt1.c2, rt1.c1, rt1.c5, rt1.c4, vt64.lid FROM vt64 LEFT OUTER JOIN rt1 ON ((vt64.lid COLLATE RTRIM)-(NULL)) GROUP BY rt1.c3, vt64.c0, rt1.c0, rt1.c6, rt1.c2, rt1.c1, rt1.c5, rt1.c4, vt64.lid HAVING ((CHANGES() COLLATE RTRIM) ISNULL);
SELECT ALL rt1.c3, vt64.c0, rt1.c0, rt1.c6, rt1.c2, rt1.c1, rt1.c5, rt1.c4, vt64.lid FROM vt64 LEFT OUTER JOIN rt1 ON ((vt64.lid COLLATE RTRIM)-(NULL)) GROUP BY rt1.c3, vt64.c0, rt1.c0, rt1.c6, rt1.c2, rt1.c1, rt1.c5, rt1.c4, vt64.lid;
SELECT ALL MIN((((((('삸G*')OR(vt64.lid)))AND(vt64.lid)))IS(vt64.lid))) FROM vt64 ORDER BY (((((+ (NULL)))AND(((NULL)|(vt64.c0)))))OR(((vt64.c0)LIKE(vt64.lid))))  NULLS FIRST;
SELECT ALL * FROM vt64 RIGHT OUTER JOIN rt1 ON ((rt1.c3)+(vt64.c0)) COLLATE BINARY;
SELECT ALL * FROM vt64 RIGHT OUTER JOIN rt1 ON ((rt1.c3)+(vt64.c0)) COLLATE BINARY WHERE ('551067282') UNION ALL SELECT * FROM vt64 RIGHT OUTER JOIN rt1 ON ((rt1.c3)+(vt64.c0)) COLLATE BINARY WHERE ((NOT ('551067282'))) UNION ALL SELECT * FROM vt64 RIGHT OUTER JOIN rt1 ON ((rt1.c3)+(vt64.c0)) COLLATE BINARY WHERE ((('551067282') ISNULL));
SELECT ALL * FROM vt64 RIGHT OUTER JOIN rt1 ON ((rt1.c3)+(vt64.c0)) COLLATE BINARY;
SELECT DISTINCT * FROM rt1 INNER JOIN vt64 ON (rt1.c3 IN ());
SELECT DISTINCT * FROM rt1 INNER JOIN vt64 ON (rt1.c3 IN ()) WHERE (STRFTIME((((vt64.lid, vt64.c0, rt1.c0)) BETWEEN ((rt1.c5, rt1.c5, vt64.c0)) AND ((rt1.c4, rt1.c3, rt1.c4))), ((rt1.c0)!=(rt1.c0)), (((rt1.c0))<=((x'15ce'))))) UNION SELECT DISTINCT * FROM rt1 INNER JOIN vt64 ON (rt1.c3 IN ()) WHERE ((NOT (STRFTIME((((vt64.lid, vt64.c0, rt1.c0)) BETWEEN ((rt1.c5, rt1.c5, vt64.c0)) AND ((rt1.c4, rt1.c3, rt1.c4))), ((rt1.c0)!=(rt1.c0)), (((rt1.c0))<=((x'15ce'))))))) UNION SELECT DISTINCT * FROM rt1 INNER JOIN vt64 ON (rt1.c3 IN ()) WHERE (((STRFTIME((((vt64.lid, vt64.c0, rt1.c0)) BETWEEN ((rt1.c5, rt1.c5, vt64.c0)) AND ((rt1.c4, rt1.c3, rt1.c4))), ((rt1.c0)<>(rt1.c0)), (((rt1.c0))<=((x'15ce'))))) ISNULL));
SELECT DISTINCT * FROM rt1 INNER JOIN vt64 ON (rt1.c3 IN ());
SELECT ALL rt1.c3, rt1.c1, rt1.c5, rt1.c0, rt1.c6, rt1.c4, rt1.c2 FROM vt64, rt1 GROUP BY rt1.c3, rt1.c1, rt1.c5, rt1.c0, rt1.c6, rt1.c4, rt1.c2;
SELECT rt1.c3, rt1.c1, rt1.c5, rt1.c0, rt1.c6, rt1.c4, rt1.c2 FROM vt64, rt1 WHERE (CAST((vt64.lid IN (x'', vt64.c0)) AS NUMERIC)) GROUP BY rt1.c3, rt1.c1, rt1.c5, rt1.c0, rt1.c6, rt1.c4, rt1.c2 UNION SELECT rt1.c3, rt1.c1, rt1.c5, rt1.c0, rt1.c6, rt1.c4, rt1.c2 FROM vt64, rt1 WHERE ((NOT (CAST((vt64.lid IN (x'', vt64.c0)) AS NUMERIC)))) GROUP BY rt1.c3, rt1.c1, rt1.c5, rt1.c0, rt1.c6, rt1.c4, rt1.c2 UNION SELECT rt1.c3, rt1.c1, rt1.c5, rt1.c0, rt1.c6, rt1.c4, rt1.c2 FROM vt64, rt1 WHERE (((CAST((vt64.lid IN (x'', vt64.c0)) AS NUMERIC)) ISNULL)) GROUP BY rt1.c3, rt1.c1, rt1.c5, rt1.c0, rt1.c6, rt1.c4, rt1.c2;
SELECT ALL rt1.c3, rt1.c1, rt1.c5, rt1.c0, rt1.c6, rt1.c4, rt1.c2 FROM vt64, rt1 GROUP BY rt1.c3, rt1.c1, rt1.c5, rt1.c0, rt1.c6, rt1.c4, rt1.c2;
SELECT vt64.lid FROM vt64 GROUP BY vt64.lid;
SELECT ALL vt64.lid FROM vt64 GROUP BY vt64.lid HAVING TOTAL('1341560773') UNION ALL SELECT ALL vt64.lid FROM vt64 GROUP BY vt64.lid HAVING (NOT (TOTAL('1341560773'))) UNION ALL SELECT vt64.lid FROM vt64 GROUP BY vt64.lid HAVING ((TOTAL('1341560773')) ISNULL);
SELECT vt64.lid FROM vt64 GROUP BY vt64.lid;
SELECT ALL vt64.lid FROM vt64 GROUP BY vt64.lid HAVING TOTAL('1341560773') UNION ALL SELECT ALL vt64.lid FROM vt64 GROUP BY vt64.lid HAVING (NOT (TOTAL('1341560773'))) UNION ALL SELECT vt64.lid FROM vt64 GROUP BY vt64.lid HAVING ((TOTAL('1341560773')) ISNULL);
SELECT vt64.lid FROM vt64 GROUP BY vt64.lid;
SELECT ALL rt1.c1, rt1.c3, rt1.c2, rt1.c0, rt1.c6, vt64.lid, rt1.c5 FROM vt64, rt1;
SELECT ALL rt1.c1, rt1.c3, rt1.c2, rt1.c0, rt1.c6, vt64.lid, rt1.c5 FROM vt64, rt1 WHERE (((((((((((rt1.c3)+(vt64.c0)))OR((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c2))))))OR((~ (rt1.c1)))))OR((+ (vt64.lid)))))OR((~ (x''))))) UNION ALL SELECT rt1.c1, rt1.c3, rt1.c2, rt1.c0, rt1.c6, vt64.lid, rt1.c5 FROM vt64, rt1 WHERE ((NOT (((((((((((rt1.c3)+(vt64.c0)))OR((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c2))))))OR((~ (rt1.c1)))))OR((+ (vt64.lid)))))OR((~ (x''))))))) UNION ALL SELECT ALL rt1.c1, rt1.c3, rt1.c2, rt1.c0, rt1.c6, vt64.lid, rt1.c5 FROM vt64, rt1 WHERE (((((((((((((rt1.c3)+(vt64.c0)))OR((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c2))))))OR((~ (rt1.c1)))))OR((+ (vt64.lid)))))OR((~ (x''))))) ISNULL));
SELECT ALL rt1.c1, rt1.c3, rt1.c2, rt1.c0, rt1.c6, vt64.lid, rt1.c5 FROM vt64, rt1;
SELECT DISTINCT * FROM vt64;
SELECT DISTINCT * FROM vt64 WHERE (((((vt64.c0) NOT BETWEEN (vt64.lid) AND (vt64.lid)))>(CASE WHEN vt64.c0 THEN vt64.c0 ELSE vt64.lid END))) UNION SELECT DISTINCT * FROM vt64 WHERE ((NOT (((((vt64.c0) NOT BETWEEN (vt64.lid) AND (vt64.lid)))>(CASE WHEN vt64.c0 THEN vt64.c0 ELSE vt64.lid END))))) UNION SELECT DISTINCT * FROM vt64 WHERE (((((((vt64.c0) NOT BETWEEN (vt64.lid) AND (vt64.lid)))>(CASE WHEN vt64.c0 THEN vt64.c0 ELSE vt64.lid END))) ISNULL));
SELECT DISTINCT * FROM vt64;
SELECT rt1.c2, rt1.c5 FROM rt1 GROUP BY rt1.c2, rt1.c5;
SELECT ALL rt1.c2, rt1.c5 FROM rt1 WHERE ((('')-(MAX(rt1.c2, rt1.c6)))) GROUP BY rt1.c2, rt1.c5 UNION SELECT ALL rt1.c2, rt1.c5 FROM rt1 WHERE ((NOT ((('')-(MAX(rt1.c2, rt1.c6)))))) GROUP BY rt1.c2, rt1.c5 UNION SELECT ALL rt1.c2, rt1.c5 FROM rt1 WHERE ((((('')-(MAX(rt1.c2, rt1.c6)))) ISNULL)) GROUP BY rt1.c2, rt1.c5;
SELECT rt1.c2, rt1.c5 FROM rt1 GROUP BY rt1.c2, rt1.c5;
SELECT vt64.lid FROM vt64 GROUP BY vt64.lid;
SELECT ALL vt64.lid FROM vt64 GROUP BY vt64.lid HAVING vt64.lid UNION ALL SELECT vt64.lid FROM vt64 GROUP BY vt64.lid HAVING (NOT (vt64.lid)) UNION ALL SELECT vt64.lid FROM vt64 GROUP BY vt64.lid HAVING ((vt64.lid) ISNULL);
SELECT vt64.lid FROM vt64 GROUP BY vt64.lid;
SELECT ALL vt64.lid FROM vt64 GROUP BY vt64.lid HAVING vt64.lid UNION ALL SELECT vt64.lid FROM vt64 GROUP BY vt64.lid HAVING (NOT (vt64.lid)) UNION ALL SELECT vt64.lid FROM vt64 GROUP BY vt64.lid HAVING ((vt64.lid) ISNULL);
SELECT vt64.lid FROM vt64 GROUP BY vt64.lid;
SELECT ALL * FROM vt64, rt1;
SELECT ALL * FROM vt64, rt1 WHERE ((((rt1.c4 IN ()))>(((rt1.c6) NOTNULL)))) UNION ALL SELECT * FROM vt64, rt1 WHERE ((NOT ((((rt1.c4 IN ()))>(((rt1.c6) NOTNULL)))))) UNION ALL SELECT ALL * FROM vt64, rt1 WHERE ((((((rt1.c4 IN ()))>(((rt1.c6) NOTNULL)))) ISNULL));
SELECT ALL * FROM vt64, rt1;
SELECT DISTINCT vt64.lid FROM vt64, rt1;
SELECT DISTINCT vt64.lid FROM vt64, rt1 WHERE ((~ (((rt1.c1) NOTNULL)))) UNION SELECT DISTINCT vt64.lid FROM vt64, rt1 WHERE ((NOT ((~ (((rt1.c1) NOTNULL)))))) UNION SELECT DISTINCT vt64.lid FROM vt64, rt1 WHERE ((((~ (((rt1.c1) NOTNULL)))) ISNULL));
SELECT DISTINCT vt64.lid FROM vt64, rt1;
SELECT ALL vt64.c0, rt1.c6, rt1.c4, rt1.c2, vt64.lid, rt1.c5, rt1.c1 FROM vt64 CROSS JOIN rt1 ON CAST(((((((((rt1.c5)AND(rt1.c2)))AND(vt64.c0)))AND(rt1.c2)))OR(rt1.c4)) AS NUMERIC) GROUP BY vt64.c0, rt1.c6, rt1.c4, rt1.c2, vt64.lid, rt1.c5, rt1.c1;
SELECT ALL vt64.c0, rt1.c6, rt1.c4, rt1.c2, vt64.lid, rt1.c5, rt1.c1 FROM vt64 CROSS JOIN rt1 ON CAST(((((((((rt1.c5)AND(rt1.c2)))AND(vt64.c0)))AND(rt1.c2)))OR(rt1.c4)) AS NUMERIC) WHERE (((((rt1.c1) IS FALSE))<<(rt1.c4 COLLATE NOCASE))) GROUP BY vt64.c0, rt1.c6, rt1.c4, rt1.c2, vt64.lid, rt1.c5, rt1.c1 UNION SELECT ALL vt64.c0, rt1.c6, rt1.c4, rt1.c2, vt64.lid, rt1.c5, rt1.c1 FROM vt64 CROSS JOIN rt1 ON CAST(((((((((rt1.c5)AND(rt1.c2)))AND(vt64.c0)))AND(rt1.c2)))OR(rt1.c4)) AS NUMERIC) WHERE ((NOT (((((rt1.c1) IS FALSE))<<(rt1.c4 COLLATE NOCASE))))) GROUP BY vt64.c0, rt1.c6, rt1.c4, rt1.c2, vt64.lid, rt1.c5, rt1.c1 UNION SELECT ALL vt64.c0, rt1.c6, rt1.c4, rt1.c2, vt64.lid, rt1.c5, rt1.c1 FROM vt64 CROSS JOIN rt1 ON CAST(((((((((rt1.c5)AND(rt1.c2)))AND(vt64.c0)))AND(rt1.c2)))OR(rt1.c4)) AS NUMERIC) WHERE (((((((rt1.c1) IS FALSE))<<(rt1.c4 COLLATE NOCASE))) ISNULL)) GROUP BY vt64.c0, rt1.c6, rt1.c4, rt1.c2, vt64.lid, rt1.c5, rt1.c1;
SELECT ALL vt64.c0, rt1.c6, rt1.c4, rt1.c2, vt64.lid, rt1.c5, rt1.c1 FROM vt64 CROSS JOIN rt1 ON CAST(((((((((rt1.c5)AND(rt1.c2)))AND(vt64.c0)))AND(rt1.c2)))OR(rt1.c4)) AS NUMERIC) GROUP BY vt64.c0, rt1.c6, rt1.c4, rt1.c2, vt64.lid, rt1.c5, rt1.c1;
SELECT ALL vt64.c0, rt1.c6, rt1.c3, rt1.c1, rt1.c0, rt1.c4, rt1.c2 FROM vt64, rt1 GROUP BY vt64.c0, rt1.c6, rt1.c3, rt1.c1, rt1.c0, rt1.c4, rt1.c2;
SELECT vt64.c0, rt1.c6, rt1.c3, rt1.c1, rt1.c0, rt1.c4, rt1.c2 FROM vt64, rt1 GROUP BY vt64.c0, rt1.c6, rt1.c3, rt1.c1, rt1.c0, rt1.c4, rt1.c2 HAVING (SUM(COUNT(*)) IN (AVG(MAX(MAX(rt1.c4))))) UNION ALL SELECT ALL vt64.c0, rt1.c6, rt1.c3, rt1.c1, rt1.c0, rt1.c4, rt1.c2 FROM vt64, rt1 GROUP BY vt64.c0, rt1.c6, rt1.c3, rt1.c1, rt1.c0, rt1.c4, rt1.c2 HAVING (NOT ((SUM(COUNT(*)) IN (AVG(MAX(MAX(rt1.c4))))))) UNION ALL SELECT ALL vt64.c0, rt1.c6, rt1.c3, rt1.c1, rt1.c0, rt1.c4, rt1.c2 FROM vt64, rt1 GROUP BY vt64.c0, rt1.c6, rt1.c3, rt1.c1, rt1.c0, rt1.c4, rt1.c2 HAVING (((SUM(COUNT(*)) IN (AVG(MAX(MAX(rt1.c4)))))) ISNULL);
SELECT rt1.c0, rt1.c2, rt1.c3 FROM rt1;
SELECT rt1.c0, rt1.c2, rt1.c3 FROM rt1 WHERE (rt1.c4) UNION ALL SELECT rt1.c0, rt1.c2, rt1.c3 FROM rt1 WHERE ((NOT (rt1.c4))) UNION ALL SELECT ALL rt1.c0, rt1.c2, rt1.c3 FROM rt1 WHERE (((rt1.c4) ISNULL));
SELECT rt1.c0, rt1.c2, rt1.c3 FROM rt1;
SELECT DISTINCT * FROM rt1 INNER JOIN vt64 ON (+ (((rt1.c3) NOT NULL)));
SELECT DISTINCT * FROM rt1 INNER JOIN vt64 ON (+ (((rt1.c3) NOT NULL))) WHERE ((((vt64.c0)) NOT BETWEEN ((CAST(rt1.c1 AS INTEGER))) AND ((((rt1.c5) NOT BETWEEN (0.32816608272812975) AND (rt1.c3)))))) UNION SELECT DISTINCT * FROM rt1 INNER JOIN vt64 ON (+ (((rt1.c3) NOT NULL))) WHERE ((NOT ((((vt64.c0)) NOT BETWEEN ((CAST(rt1.c1 AS INTEGER))) AND ((((rt1.c5) NOT BETWEEN (0.32816608272812975) AND (rt1.c3)))))))) UNION SELECT DISTINCT * FROM rt1 INNER JOIN vt64 ON (+ (((rt1.c3) NOT NULL))) WHERE ((((((vt64.c0)) NOT BETWEEN ((CAST(rt1.c1 AS INTEGER))) AND ((((rt1.c5) NOT BETWEEN (0.32816608272812975) AND (rt1.c3)))))) ISNULL));
SELECT DISTINCT * FROM rt1 INNER JOIN vt64 ON (+ (((rt1.c3) NOT NULL)));
SELECT rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0;
SELECT rt1.c2, rt1.c0 FROM rt1 WHERE ('213916959') GROUP BY rt1.c2, rt1.c0 UNION SELECT rt1.c2, rt1.c0 FROM rt1 WHERE ((NOT ('213916959'))) GROUP BY rt1.c2, rt1.c0 UNION SELECT rt1.c2, rt1.c0 FROM rt1 WHERE ((('213916959') ISNULL)) GROUP BY rt1.c2, rt1.c0;
SELECT rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0;
SELECT ALL vt64.c0 FROM vt64 GROUP BY vt64.c0;
SELECT ALL vt64.c0 FROM vt64 GROUP BY vt64.c0 HAVING COUNT((((vt64.lid)) NOT BETWEEN ((MIN(TOTAL(COUNT(vt64.lid))))) AND ((vt64.c0)))) UNION ALL SELECT vt64.c0 FROM vt64 GROUP BY vt64.c0 HAVING (NOT (COUNT((((vt64.lid)) NOT BETWEEN ((MIN(TOTAL(COUNT(vt64.lid))))) AND ((vt64.c0)))))) UNION ALL SELECT vt64.c0 FROM vt64 GROUP BY vt64.c0 HAVING ((COUNT((((vt64.lid)) NOT BETWEEN ((MIN(TOTAL(COUNT(vt64.lid))))) AND ((vt64.c0))))) ISNULL);
SELECT rt1.c3, vt64.c0, vt64.lid FROM rt1 NATURAL JOIN vt64;
SELECT rt1.c3, vt64.c0, vt64.lid FROM rt1 NATURAL JOIN vt64 WHERE ((((CASE rt1.c6  WHEN rt1.c5 THEN rt1.c3 END))<>(((rt1.c6 IN ()))))) UNION ALL SELECT ALL rt1.c3, vt64.c0, vt64.lid FROM rt1 NATURAL JOIN vt64 WHERE ((NOT ((((CASE rt1.c6  WHEN rt1.c5 THEN rt1.c3 END))!=(((rt1.c6 IN ()))))))) UNION ALL SELECT rt1.c3, vt64.c0, vt64.lid FROM rt1 NATURAL JOIN vt64 WHERE ((((((CASE rt1.c6  WHEN rt1.c5 THEN rt1.c3 END))!=(((rt1.c6 IN ()))))) ISNULL));
SELECT rt1.c3, vt64.c0, vt64.lid FROM rt1 NATURAL JOIN vt64;
SELECT DISTINCT vt64.c0 FROM vt64;
SELECT DISTINCT vt64.c0 FROM vt64 WHERE (((CAST(vt64.lid AS BLOB))LIKE(((vt64.c0)/(vt64.c0))))) UNION SELECT DISTINCT vt64.c0 FROM vt64 WHERE ((NOT (((CAST(vt64.lid AS BLOB))LIKE(((vt64.c0)/(vt64.c0))))))) UNION SELECT DISTINCT vt64.c0 FROM vt64 WHERE (((((CAST(vt64.lid AS BLOB))LIKE(((vt64.c0)/(vt64.c0))))) ISNULL));
SELECT DISTINCT vt64.c0 FROM vt64;
SELECT vt64.lid FROM vt64 GROUP BY vt64.lid;
SELECT ALL vt64.lid FROM vt64 WHERE (vt64.c0 COLLATE NOCASE) GROUP BY vt64.lid UNION SELECT vt64.lid FROM vt64 WHERE ((NOT (vt64.c0 COLLATE NOCASE))) GROUP BY vt64.lid UNION SELECT vt64.lid FROM vt64 WHERE (((vt64.c0 COLLATE NOCASE) ISNULL)) GROUP BY vt64.lid;
SELECT vt64.lid FROM vt64 GROUP BY vt64.lid;
SELECT ALL vt64.c0, vt64.lid FROM vt64 GROUP BY vt64.c0, vt64.lid;
SELECT vt64.c0, vt64.lid FROM vt64 GROUP BY vt64.c0, vt64.lid HAVING MIN(COUNT(*)) UNION ALL SELECT vt64.c0, vt64.lid FROM vt64 GROUP BY vt64.c0, vt64.lid HAVING (NOT (MIN(COUNT(*)))) UNION ALL SELECT ALL vt64.c0, vt64.lid FROM vt64 GROUP BY vt64.c0, vt64.lid HAVING ((MIN(COUNT(*))) ISNULL);
SELECT ALL * FROM vt64;
SELECT * FROM vt64 WHERE ('yT僡䐈ꟲtJ_') UNION ALL SELECT * FROM vt64 WHERE ((NOT ('yT僡䐈ꟲtJ_'))) UNION ALL SELECT * FROM vt64 WHERE ((('yT僡䐈ꟲtJ_') ISNULL));
SELECT ALL * FROM vt64;
SELECT DISTINCT rt1.c1, rt1.c4, rt1.c2, vt64.c0, rt1.c5, rt1.c0 FROM rt1, vt64;
SELECT DISTINCT rt1.c1, rt1.c4, rt1.c2, vt64.c0, rt1.c5, rt1.c0 FROM rt1, vt64 WHERE (SQLITE_VERSION()) UNION SELECT DISTINCT rt1.c1, rt1.c4, rt1.c2, vt64.c0, rt1.c5, rt1.c0 FROM rt1, vt64 WHERE ((NOT (SQLITE_VERSION()))) UNION SELECT DISTINCT rt1.c1, rt1.c4, rt1.c2, vt64.c0, rt1.c5, rt1.c0 FROM rt1, vt64 WHERE (((SQLITE_VERSION()) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c4, rt1.c2, vt64.c0, rt1.c5, rt1.c0 FROM rt1, vt64;
SELECT vt64.c0, rt1.c5, rt1.c3 FROM rt1 INNER JOIN vt64 ON CAST((rt1.c0 IN ()) AS NUMERIC) GROUP BY vt64.c0, rt1.c5, rt1.c3;
SELECT vt64.c0, rt1.c5, rt1.c3 FROM rt1 INNER JOIN vt64 ON CAST((rt1.c0 IN ()) AS NUMERIC) WHERE ((((vt64.lid) IS FALSE) IN ())) GROUP BY vt64.c0, rt1.c5, rt1.c3 UNION SELECT ALL vt64.c0, rt1.c5, rt1.c3 FROM rt1 INNER JOIN vt64 ON CAST((rt1.c0 IN ()) AS NUMERIC) WHERE ((NOT ((((vt64.lid) IS FALSE) IN ())))) GROUP BY vt64.c0, rt1.c5, rt1.c3 UNION SELECT vt64.c0, rt1.c5, rt1.c3 FROM rt1 INNER JOIN vt64 ON CAST((rt1.c0 IN ()) AS NUMERIC) WHERE ((((((vt64.lid) IS FALSE) IN ())) ISNULL)) GROUP BY vt64.c0, rt1.c5, rt1.c3;
SELECT vt64.c0, rt1.c5, rt1.c3 FROM rt1 INNER JOIN vt64 ON CAST((rt1.c0 IN ()) AS NUMERIC) GROUP BY vt64.c0, rt1.c5, rt1.c3;
SELECT ALL rt1.c5, vt64.lid, rt1.c4, rt1.c2 FROM rt1 RIGHT OUTER JOIN vt64 ON CASE CAST(vt64.lid AS NUMERIC)  WHEN (- (rt1.c1)) THEN ((vt64.lid)<(rt1.c4)) ELSE rt1.c6 END GROUP BY rt1.c5, vt64.lid, rt1.c4, rt1.c2;
SELECT rt1.c5, vt64.lid, rt1.c4, rt1.c2 FROM rt1 RIGHT OUTER JOIN vt64 ON CASE CAST(vt64.lid AS NUMERIC)  WHEN (- (rt1.c1)) THEN ((vt64.lid)<(rt1.c4)) ELSE rt1.c6 END GROUP BY rt1.c5, vt64.lid, rt1.c4, rt1.c2 HAVING SUM(SUM(AVG(rt1.c4))) UNION ALL SELECT ALL rt1.c5, vt64.lid, rt1.c4, rt1.c2 FROM rt1 RIGHT OUTER JOIN vt64 ON CASE CAST(vt64.lid AS NUMERIC)  WHEN (- (rt1.c1)) THEN ((vt64.lid)<(rt1.c4)) ELSE rt1.c6 END GROUP BY rt1.c5, vt64.lid, rt1.c4, rt1.c2 HAVING (NOT (SUM(SUM(AVG(rt1.c4))))) UNION ALL SELECT ALL rt1.c5, vt64.lid, rt1.c4, rt1.c2 FROM rt1 RIGHT OUTER JOIN vt64 ON CASE CAST(vt64.lid AS NUMERIC)  WHEN (- (rt1.c1)) THEN ((vt64.lid)<(rt1.c4)) ELSE rt1.c6 END GROUP BY rt1.c5, vt64.lid, rt1.c4, rt1.c2 HAVING ((SUM(SUM(AVG(rt1.c4)))) ISNULL);
SELECT * FROM vt64, rt1;
SELECT ALL * FROM vt64, rt1 WHERE (CASE WHEN (rt1.c0 IN ()) THEN ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c3)) ELSE ((vt64.lid)>>(rt1.c6)) END) UNION ALL SELECT ALL * FROM vt64, rt1 WHERE ((NOT (CASE WHEN (rt1.c0 IN ()) THEN ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c3)) ELSE ((vt64.lid)>>(rt1.c6)) END))) UNION ALL SELECT ALL * FROM vt64, rt1 WHERE (((CASE WHEN (rt1.c0 IN ()) THEN ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c3)) ELSE ((vt64.lid)>>(rt1.c6)) END) ISNULL));
SELECT * FROM vt64, rt1;
SELECT DISTINCT rt1.c0, rt1.c1, rt1.c4, rt1.c3, rt1.c6, rt1.c5, rt1.c2 FROM vt64, rt1;
SELECT DISTINCT rt1.c0, rt1.c1, rt1.c4, rt1.c3, rt1.c6, rt1.c5, rt1.c2 FROM vt64, rt1 WHERE ((+ (((rt1.c4) IS TRUE)))) UNION SELECT DISTINCT rt1.c0, rt1.c1, rt1.c4, rt1.c3, rt1.c6, rt1.c5, rt1.c2 FROM vt64, rt1 WHERE ((NOT ((+ (((rt1.c4) IS TRUE)))))) UNION SELECT DISTINCT rt1.c0, rt1.c1, rt1.c4, rt1.c3, rt1.c6, rt1.c5, rt1.c2 FROM vt64, rt1 WHERE ((((+ (((rt1.c4) IS TRUE)))) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c1, rt1.c4, rt1.c3, rt1.c6, rt1.c5, rt1.c2 FROM vt64, rt1;
SELECT ALL rt1.c6, rt1.c3, rt1.c2, rt1.c4 FROM rt1 GROUP BY rt1.c6, rt1.c3, rt1.c2, rt1.c4;
SELECT ALL rt1.c6, rt1.c3, rt1.c2, rt1.c4 FROM rt1 WHERE ((((((rt1.c5 IN ()))AND((((rt1.c3)) BETWEEN ((rt1.c3)) AND ((rt1.c3))))))AND(((rt1.c5)<(rt1.c4))))) GROUP BY rt1.c6, rt1.c3, rt1.c2, rt1.c4 UNION SELECT ALL rt1.c6, rt1.c3, rt1.c2, rt1.c4 FROM rt1 WHERE ((NOT ((((((rt1.c5 IN ()))AND((((rt1.c3)) BETWEEN ((rt1.c3)) AND ((rt1.c3))))))AND(((rt1.c5)<(rt1.c4))))))) GROUP BY rt1.c6, rt1.c3, rt1.c2, rt1.c4 UNION SELECT rt1.c6, rt1.c3, rt1.c2, rt1.c4 FROM rt1 WHERE ((((((((rt1.c5 IN ()))AND((((rt1.c3)) BETWEEN ((rt1.c3)) AND ((rt1.c3))))))AND(((rt1.c5)<(rt1.c4))))) ISNULL)) GROUP BY rt1.c6, rt1.c3, rt1.c2, rt1.c4;
SELECT ALL rt1.c6, rt1.c3, rt1.c2, rt1.c4 FROM rt1 GROUP BY rt1.c6, rt1.c3, rt1.c2, rt1.c4;
SELECT ALL rt1.c5, rt1.c2, rt1.c1, rt1.c3, rt1.c6 FROM rt1 GROUP BY rt1.c5, rt1.c2, rt1.c1, rt1.c3, rt1.c6;
SELECT ALL rt1.c5, rt1.c2, rt1.c1, rt1.c3, rt1.c6 FROM rt1 GROUP BY rt1.c5, rt1.c2, rt1.c1, rt1.c3, rt1.c6 HAVING ((rt1.c4 IN ()) IN (((rt1.c4)<(MIN(AVG(rt1.c1)))))) UNION ALL SELECT ALL rt1.c5, rt1.c2, rt1.c1, rt1.c3, rt1.c6 FROM rt1 GROUP BY rt1.c5, rt1.c2, rt1.c1, rt1.c3, rt1.c6 HAVING (NOT (((rt1.c4 IN ()) IN (((rt1.c4)<(MIN(AVG(rt1.c1)))))))) UNION ALL SELECT rt1.c5, rt1.c2, rt1.c1, rt1.c3, rt1.c6 FROM rt1 GROUP BY rt1.c5, rt1.c2, rt1.c1, rt1.c3, rt1.c6 HAVING ((((rt1.c4 IN ()) IN (((rt1.c4)<(MIN(AVG(rt1.c1))))))) ISNULL);
SELECT vt64.c0 FROM vt64;
SELECT vt64.c0 FROM vt64 WHERE ((((~ (vt64.lid))) IS TRUE)) UNION ALL SELECT ALL vt64.c0 FROM vt64 WHERE ((NOT ((((~ (vt64.lid))) IS TRUE)))) UNION ALL SELECT vt64.c0 FROM vt64 WHERE ((((((~ (vt64.lid))) IS TRUE)) ISNULL));
SELECT vt64.c0 FROM vt64;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (((((((((((rt1.c0)*(rt1.c4)))OR(IFNULL(rt1.c6, rt1.c2))))AND(LIKELIHOOD(rt1.c5, 0.6623359217535413))))AND(((rt1.c5)<>(rt1.c0)))))OR(CAST(rt1.c6 AS TEXT)))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (((((((((((rt1.c0)*(rt1.c4)))OR(IFNULL(rt1.c6, rt1.c2))))AND(LIKELIHOOD(rt1.c5, 0.6623359217535413))))AND(((rt1.c5)!=(rt1.c0)))))OR(CAST(rt1.c6 AS TEXT)))))) UNION SELECT DISTINCT * FROM rt1 WHERE (((((((((((((rt1.c0)*(rt1.c4)))OR(IFNULL(rt1.c6, rt1.c2))))AND(LIKELIHOOD(rt1.c5, 0.6623359217535413))))AND(((rt1.c5)!=(rt1.c0)))))OR(CAST(rt1.c6 AS TEXT)))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT rt1.c1, rt1.c0, rt1.c5, rt1.c6, rt1.c4, rt1.c3 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c5, rt1.c6, rt1.c4, rt1.c3;
SELECT rt1.c1, rt1.c0, rt1.c5, rt1.c6, rt1.c4, rt1.c3 FROM rt1 WHERE (CAST(((rt1.c2)OR(rt1.c6)) AS TEXT)) GROUP BY rt1.c1, rt1.c0, rt1.c5, rt1.c6, rt1.c4, rt1.c3 UNION SELECT rt1.c1, rt1.c0, rt1.c5, rt1.c6, rt1.c4, rt1.c3 FROM rt1 WHERE ((NOT (CAST(((rt1.c2)OR(rt1.c6)) AS TEXT)))) GROUP BY rt1.c1, rt1.c0, rt1.c5, rt1.c6, rt1.c4, rt1.c3 UNION SELECT rt1.c1, rt1.c0, rt1.c5, rt1.c6, rt1.c4, rt1.c3 FROM rt1 WHERE (((CAST(((rt1.c2)OR(rt1.c6)) AS TEXT)) ISNULL)) GROUP BY rt1.c1, rt1.c0, rt1.c5, rt1.c6, rt1.c4, rt1.c3;
SELECT rt1.c1, rt1.c0, rt1.c5, rt1.c6, rt1.c4, rt1.c3 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c5, rt1.c6, rt1.c4, rt1.c3;
SELECT rt1.c2, rt1.c3 FROM vt64 CROSS JOIN rt1 ON ((((vt64.lid)<<(vt64.lid))) NOT NULL) GROUP BY rt1.c2, rt1.c3;
SELECT rt1.c2, rt1.c3 FROM vt64 CROSS JOIN rt1 ON ((((vt64.lid)<<(vt64.lid))) NOT NULL) GROUP BY rt1.c2, rt1.c3 HAVING MIN(COUNT(SUM(GROUP_CONCAT(GROUP_CONCAT(rt1.c5))))) UNION ALL SELECT rt1.c2, rt1.c3 FROM vt64 CROSS JOIN rt1 ON ((((vt64.lid)<<(vt64.lid))) NOT NULL) GROUP BY rt1.c2, rt1.c3 HAVING (NOT (MIN(COUNT(SUM(GROUP_CONCAT(GROUP_CONCAT(rt1.c5))))))) UNION ALL SELECT rt1.c2, rt1.c3 FROM vt64 CROSS JOIN rt1 ON ((((vt64.lid)<<(vt64.lid))) NOT NULL) GROUP BY rt1.c2, rt1.c3 HAVING ((MIN(COUNT(SUM(GROUP_CONCAT(GROUP_CONCAT(rt1.c5)))))) ISNULL);
SELECT ALL * FROM rt1;
SELECT * FROM rt1 WHERE (((((rt1.c6) NOT BETWEEN (rt1.c6) AND (rt1.c4))) NOT BETWEEN (((rt1.c4)/(rt1.c2))) AND (((rt1.c6) BETWEEN (rt1.c5) AND (rt1.c3))))) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT (((((rt1.c6) NOT BETWEEN (rt1.c6) AND (rt1.c4))) NOT BETWEEN (((rt1.c4)/(rt1.c2))) AND (((rt1.c6) BETWEEN (rt1.c5) AND (rt1.c3))))))) UNION ALL SELECT * FROM rt1 WHERE (((((((rt1.c6) NOT BETWEEN (rt1.c6) AND (rt1.c4))) NOT BETWEEN (((rt1.c4)/(rt1.c2))) AND (((rt1.c6) BETWEEN (rt1.c5) AND (rt1.c3))))) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT * FROM vt64;
SELECT DISTINCT * FROM vt64 WHERE (CAST(((vt64.lid)<(vt64.c0)) AS TEXT)) UNION SELECT DISTINCT * FROM vt64 WHERE ((NOT (CAST(((vt64.lid)<(vt64.c0)) AS TEXT)))) UNION SELECT DISTINCT * FROM vt64 WHERE (((CAST(((vt64.lid)<(vt64.c0)) AS TEXT)) ISNULL));
SELECT DISTINCT * FROM vt64;
SELECT ALL rt1.c6 FROM rt1 GROUP BY rt1.c6;
SELECT rt1.c6 FROM rt1 WHERE ((((rt1.c5)+(rt1.c0)) IN ((((rt1.c0, rt1.c4, rt1.c6)) NOT BETWEEN ((x'a3ce', rt1.c0, rt1.c2)) AND ((rt1.c5, rt1.c6, rt1.c6))), (~ (rt1.c3))))) GROUP BY rt1.c6 UNION SELECT rt1.c6 FROM rt1 WHERE ((NOT ((((rt1.c5)+(rt1.c0)) IN ((((rt1.c0, rt1.c4, rt1.c6)) NOT BETWEEN ((x'a3ce', rt1.c0, rt1.c2)) AND ((rt1.c5, rt1.c6, rt1.c6))), (~ (rt1.c3))))))) GROUP BY rt1.c6 UNION SELECT rt1.c6 FROM rt1 WHERE ((((((rt1.c5)+(rt1.c0)) IN ((((rt1.c0, rt1.c4, rt1.c6)) NOT BETWEEN ((x'a3ce', rt1.c0, rt1.c2)) AND ((rt1.c5, rt1.c6, rt1.c6))), (~ (rt1.c3))))) ISNULL)) GROUP BY rt1.c6;
SELECT ALL rt1.c6 FROM rt1 GROUP BY rt1.c6;
SELECT rt1.c5, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c5, rt1.c0, rt1.c1;
SELECT ALL rt1.c5, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c5, rt1.c0, rt1.c1 HAVING GROUP_CONCAT(SUM(COUNT(rt1.c2))) UNION ALL SELECT rt1.c5, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c5, rt1.c0, rt1.c1 HAVING (NOT (GROUP_CONCAT(SUM(COUNT(rt1.c2))))) UNION ALL SELECT rt1.c5, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c5, rt1.c0, rt1.c1 HAVING ((GROUP_CONCAT(SUM(COUNT(rt1.c2)))) ISNULL);
SELECT ALL * FROM vt64;
SELECT * FROM vt64 WHERE (((- (vt64.c0)) IN ())) UNION ALL SELECT * FROM vt64 WHERE ((NOT (((- (vt64.c0)) IN ())))) UNION ALL SELECT ALL * FROM vt64 WHERE (((((- (vt64.c0)) IN ())) ISNULL));
SELECT ALL * FROM vt64;
SELECT DISTINCT rt1.c3, rt1.c1, rt1.c0 FROM rt1, vt64;
SELECT DISTINCT rt1.c3, rt1.c1, rt1.c0 FROM rt1, vt64 WHERE (((vt64.c0 COLLATE BINARY)>>('\nz\nIBQr氰H'))) UNION SELECT DISTINCT rt1.c3, rt1.c1, rt1.c0 FROM rt1, vt64 WHERE ((NOT (((vt64.c0 COLLATE BINARY)>>('\nz\nIBQr氰H'))))) UNION SELECT DISTINCT rt1.c3, rt1.c1, rt1.c0 FROM rt1, vt64 WHERE (((((vt64.c0 COLLATE BINARY)>>('\nz\nIBQr氰H'))) ISNULL));
SELECT DISTINCT rt1.c3, rt1.c1, rt1.c0 FROM rt1, vt64;
SELECT rt1.c5, rt1.c0, rt1.c2, rt1.c1, rt1.c3, rt1.c4, rt1.c6, vt64.c0, vt64.lid FROM rt1 NOT INDEXED RIGHT OUTER JOIN vt64 ON CASE WHEN (((rt1.c4)) BETWEEN ((rt1.c4)) AND ((rt1.c5))) THEN ((rt1.c3)-(rt1.c1)) WHEN CASE WHEN rt1.c1 THEN rt1.c5 END THEN ((rt1.c5) BETWEEN (x'4665') AND (vt64.c0)) WHEN rt1.c0 COLLATE RTRIM THEN ((rt1.c1)OR(vt64.c0)) ELSE (+ (rt1.c2)) END GROUP BY rt1.c5, rt1.c0, rt1.c2, rt1.c1, rt1.c3, rt1.c4, rt1.c6, vt64.c0, vt64.lid;
SELECT ALL rt1.c5, rt1.c0, rt1.c2, rt1.c1, rt1.c3, rt1.c4, rt1.c6, vt64.c0, vt64.lid FROM rt1 RIGHT OUTER JOIN vt64 ON CASE WHEN (((rt1.c4)) BETWEEN ((rt1.c4)) AND ((rt1.c5))) THEN ((rt1.c3)-(rt1.c1)) WHEN CASE WHEN rt1.c1 THEN rt1.c5 END THEN ((rt1.c5) BETWEEN (x'4665') AND (vt64.c0)) WHEN rt1.c0 COLLATE RTRIM THEN ((rt1.c1)OR(vt64.c0)) ELSE (+ (rt1.c2)) END WHERE (((((((-1710515764) IS FALSE))AND((((rt1.c5))>=((rt1.c0))))))AND(((((rt1.c0)OR(rt1.c6)))AND(rt1.c5))))) GROUP BY rt1.c5, rt1.c0, rt1.c2, rt1.c1, rt1.c3, rt1.c4, rt1.c6, vt64.c0, vt64.lid UNION SELECT ALL rt1.c5, rt1.c0, rt1.c2, rt1.c1, rt1.c3, rt1.c4, rt1.c6, vt64.c0, vt64.lid FROM rt1 RIGHT OUTER JOIN vt64 ON CASE WHEN (((rt1.c4)) BETWEEN ((rt1.c4)) AND ((rt1.c5))) THEN ((rt1.c3)-(rt1.c1)) WHEN CASE WHEN rt1.c1 THEN rt1.c5 END THEN ((rt1.c5) BETWEEN (x'4665') AND (vt64.c0)) WHEN rt1.c0 COLLATE RTRIM THEN ((rt1.c1)OR(vt64.c0)) ELSE (+ (rt1.c2)) END WHERE ((NOT (((((((-1710515764) IS FALSE))AND((((rt1.c5))>=((rt1.c0))))))AND(((((rt1.c0)OR(rt1.c6)))AND(rt1.c5))))))) GROUP BY rt1.c5, rt1.c0, rt1.c2, rt1.c1, rt1.c3, rt1.c4, rt1.c6, vt64.c0, vt64.lid UNION SELECT rt1.c5, rt1.c0, rt1.c2, rt1.c1, rt1.c3, rt1.c4, rt1.c6, vt64.c0, vt64.lid FROM rt1 RIGHT OUTER JOIN vt64 ON CASE WHEN (((rt1.c4)) BETWEEN ((rt1.c4)) AND ((rt1.c5))) THEN ((rt1.c3)-(rt1.c1)) WHEN CASE WHEN rt1.c1 THEN rt1.c5 END THEN ((rt1.c5) BETWEEN (x'4665') AND (vt64.c0)) WHEN rt1.c0 COLLATE RTRIM THEN ((rt1.c1)OR(vt64.c0)) ELSE (+ (rt1.c2)) END WHERE (((((((((-1710515764) IS FALSE))AND((((rt1.c5))>=((rt1.c0))))))AND(((((rt1.c0)OR(rt1.c6)))AND(rt1.c5))))) ISNULL)) GROUP BY rt1.c5, rt1.c0, rt1.c2, rt1.c1, rt1.c3, rt1.c4, rt1.c6, vt64.c0, vt64.lid;
SELECT rt1.c5, rt1.c0, rt1.c2, rt1.c1, rt1.c3, rt1.c4, rt1.c6, vt64.c0, vt64.lid FROM rt1 NOT INDEXED RIGHT OUTER JOIN vt64 ON CASE WHEN (((rt1.c4)) BETWEEN ((rt1.c4)) AND ((rt1.c5))) THEN ((rt1.c3)-(rt1.c1)) WHEN CASE WHEN rt1.c1 THEN rt1.c5 END THEN ((rt1.c5) BETWEEN (x'4665') AND (vt64.c0)) WHEN rt1.c0 COLLATE RTRIM THEN ((rt1.c1)OR(vt64.c0)) ELSE (+ (rt1.c2)) END GROUP BY rt1.c5, rt1.c0, rt1.c2, rt1.c1, rt1.c3, rt1.c4, rt1.c6, vt64.c0, vt64.lid;
SELECT rt1.c4, rt1.c2, rt1.c6 FROM vt64, rt1 GROUP BY rt1.c4, rt1.c2, rt1.c6;
SELECT ALL rt1.c4, rt1.c2, rt1.c6 FROM vt64, rt1 GROUP BY rt1.c4, rt1.c2, rt1.c6 HAVING COUNT(rt1.c0) COLLATE NOCASE UNION ALL SELECT rt1.c4, rt1.c2, rt1.c6 FROM vt64, rt1 GROUP BY rt1.c4, rt1.c2, rt1.c6 HAVING (NOT (COUNT(rt1.c0) COLLATE NOCASE)) UNION ALL SELECT ALL rt1.c4, rt1.c2, rt1.c6 FROM vt64, rt1 GROUP BY rt1.c4, rt1.c2, rt1.c6 HAVING ((COUNT(rt1.c0) COLLATE NOCASE) ISNULL);
SELECT rt1.c4, rt1.c2, rt1.c6 FROM vt64, rt1 GROUP BY rt1.c4, rt1.c2, rt1.c6;
SELECT ALL rt1.c4, rt1.c2, rt1.c6 FROM vt64, rt1 GROUP BY rt1.c4, rt1.c2, rt1.c6 HAVING COUNT(rt1.c0) COLLATE NOCASE UNION ALL SELECT rt1.c4, rt1.c2, rt1.c6 FROM vt64, rt1 GROUP BY rt1.c4, rt1.c2, rt1.c6 HAVING (NOT (COUNT(rt1.c0) COLLATE NOCASE)) UNION ALL SELECT ALL rt1.c4, rt1.c2, rt1.c6 FROM vt64, rt1 GROUP BY rt1.c4, rt1.c2, rt1.c6 HAVING ((COUNT(rt1.c0) COLLATE NOCASE) ISNULL);
SELECT rt1.c4, rt1.c2, rt1.c6 FROM vt64, rt1 GROUP BY rt1.c4, rt1.c2, rt1.c6;
SELECT SUM(CAST((('mOK~,') IS FALSE) AS REAL)) FROM rt1, vt64;
SELECT rt1.c3, rt1.c4, rt1.c6, rt1.c0 FROM rt1;
SELECT ALL rt1.c3, rt1.c4, rt1.c6, rt1.c0 FROM rt1 WHERE (((CAST(rt1.c3 AS REAL)) NOT BETWEEN (((rt1.c0) IS TRUE)) AND (NULL))) UNION ALL SELECT rt1.c3, rt1.c4, rt1.c6, rt1.c0 FROM rt1 WHERE ((NOT (((CAST(rt1.c3 AS REAL)) NOT BETWEEN (((rt1.c0) IS TRUE)) AND (NULL))))) UNION ALL SELECT ALL rt1.c3, rt1.c4, rt1.c6, rt1.c0 FROM rt1 WHERE (((((CAST(rt1.c3 AS REAL)) NOT BETWEEN (((rt1.c0) IS TRUE)) AND (NULL))) ISNULL));
SELECT rt1.c3, rt1.c4, rt1.c6, rt1.c0 FROM rt1;
SELECT DISTINCT vt64.c0, rt1.c6, rt1.c2, rt1.c5, rt1.c1, rt1.c3, rt1.c4 FROM vt64, rt1;
SELECT DISTINCT vt64.c0, rt1.c6, rt1.c2, rt1.c5, rt1.c1, rt1.c3, rt1.c4 FROM vt64, rt1 WHERE (((((vt64.c0)OR(0.5704089243844477)))<=(vt64.c0 COLLATE NOCASE))) UNION SELECT DISTINCT vt64.c0, rt1.c6, rt1.c2, rt1.c5, rt1.c1, rt1.c3, rt1.c4 FROM vt64, rt1 WHERE ((NOT (((((vt64.c0)OR(0.5704089243844477)))<=(vt64.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT vt64.c0, rt1.c6, rt1.c2, rt1.c5, rt1.c1, rt1.c3, rt1.c4 FROM vt64, rt1 WHERE (((((((vt64.c0)OR(0.5704089243844477)))<=(vt64.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT vt64.c0, rt1.c6, rt1.c2, rt1.c5, rt1.c1, rt1.c3, rt1.c4 FROM vt64, rt1;
SELECT ALL rt1.c2, rt1.c6, rt1.c1, vt64.c0, vt64.lid, rt1.c3 FROM vt64 NATURAL JOIN rt1 GROUP BY rt1.c2, rt1.c6, rt1.c1, vt64.c0, vt64.lid, rt1.c3;
SELECT rt1.c2, rt1.c6, rt1.c1, vt64.c0, vt64.lid, rt1.c3 FROM vt64 NATURAL JOIN rt1 WHERE ((((((rt1.c3, rt1.c5, rt1.c6, rt1.c2, rt1.c5))<>((rt1.c3, rt1.c1, rt1.c3, rt1.c1, rt1.c6)))) BETWEEN (rt1.c3) AND (CAST(vt64.lid AS NUMERIC)))) GROUP BY rt1.c2, rt1.c6, rt1.c1, vt64.c0, vt64.lid, rt1.c3 UNION SELECT ALL rt1.c2, rt1.c6, rt1.c1, vt64.c0, vt64.lid, rt1.c3 FROM vt64 NOT INDEXED NATURAL JOIN rt1 WHERE ((NOT ((((((rt1.c3, rt1.c5, rt1.c6, rt1.c2, rt1.c5))<>((rt1.c3, rt1.c1, rt1.c3, rt1.c1, rt1.c6)))) BETWEEN (rt1.c3) AND (CAST(vt64.lid AS NUMERIC)))))) GROUP BY rt1.c2, rt1.c6, rt1.c1, vt64.c0, vt64.lid, rt1.c3 UNION SELECT ALL rt1.c2, rt1.c6, rt1.c1, vt64.c0, vt64.lid, rt1.c3 FROM vt64 NATURAL JOIN rt1 WHERE ((((((((rt1.c3, rt1.c5, rt1.c6, rt1.c2, rt1.c5))<>((rt1.c3, rt1.c1, rt1.c3, rt1.c1, rt1.c6)))) BETWEEN (rt1.c3) AND (CAST(vt64.lid AS NUMERIC)))) ISNULL)) GROUP BY rt1.c2, rt1.c6, rt1.c1, vt64.c0, vt64.lid, rt1.c3;
SELECT ALL rt1.c2, rt1.c6, rt1.c1, vt64.c0, vt64.lid, rt1.c3 FROM vt64 NATURAL JOIN rt1 GROUP BY rt1.c2, rt1.c6, rt1.c1, vt64.c0, vt64.lid, rt1.c3;
SELECT rt1.c4 FROM rt1, vt64 GROUP BY rt1.c4;
SELECT rt1.c4 FROM rt1, vt64 GROUP BY rt1.c4 HAVING ((TOTAL(MAX(TOTAL(rt1.c4))))<<(GROUP_CONCAT(MAX(COUNT(*))))) UNION ALL SELECT ALL rt1.c4 FROM rt1, vt64 GROUP BY rt1.c4 HAVING (NOT (((TOTAL(MAX(TOTAL(rt1.c4))))<<(GROUP_CONCAT(MAX(COUNT(*))))))) UNION ALL SELECT ALL rt1.c4 FROM rt1, vt64 GROUP BY rt1.c4 HAVING ((((TOTAL(MAX(TOTAL(rt1.c4))))<<(GROUP_CONCAT(MAX(COUNT(*)))))) ISNULL);
SELECT vt64.c0, rt1.c5, rt1.c4 FROM vt64, rt1;
SELECT ALL vt64.c0, rt1.c5, rt1.c4 FROM vt64, rt1 WHERE (CAST(CAST('59' AS INTEGER) AS INTEGER)) ORDER BY CASE ((rt1.c3)>>(rt1.c5))  WHEN CASE rt1.c3  WHEN vt64.lid THEN 787722419 END THEN ((rt1.c0)>>(rt1.c4)) ELSE ((rt1.c5) NOTNULL) END  NULLS FIRST, (((((rt1.c0) NOTNULL)))>((vt64.lid COLLATE RTRIM)));
SELECT vt64.c0, rt1.c5, rt1.c4 FROM vt64, rt1 WHERE ((NOT (CAST(CAST('59' AS INTEGER) AS INTEGER)))) ORDER BY CASE ((rt1.c3)>>(rt1.c5))  WHEN CASE rt1.c3  WHEN vt64.lid THEN 787722419 END THEN ((rt1.c0)>>(rt1.c4)) ELSE ((rt1.c5) NOTNULL) END  NULLS FIRST, (((((rt1.c0) NOTNULL)))>((vt64.lid COLLATE RTRIM)));
SELECT ALL vt64.c0, rt1.c5, rt1.c4 FROM vt64, rt1 WHERE (((CAST(CAST('59' AS INTEGER) AS INTEGER)) ISNULL)) ORDER BY CASE ((rt1.c3)>>(rt1.c5))  WHEN CASE rt1.c3  WHEN vt64.lid THEN 787722419 END THEN ((rt1.c0)>>(rt1.c4)) ELSE ((rt1.c5) NOTNULL) END  NULLS FIRST, (((((rt1.c0) NOTNULL)))>((vt64.lid COLLATE RTRIM)));
SELECT vt64.c0, rt1.c5, rt1.c4 FROM vt64, rt1;
SELECT DISTINCT rt1.c0, vt64.lid, rt1.c3, rt1.c4, rt1.c1, rt1.c6, rt1.c5, vt64.c0 FROM vt64 INNER JOIN rt1 ON ((CASE rt1.c6  WHEN rt1.c0 THEN rt1.c4 WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c4 END) NOTNULL);
SELECT DISTINCT rt1.c0, vt64.lid, rt1.c3, rt1.c4, rt1.c1, rt1.c6, rt1.c5, vt64.c0 FROM vt64 NOT INDEXED INNER JOIN rt1 ON ((CASE rt1.c6  WHEN rt1.c0 THEN rt1.c4 WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c4 END) NOTNULL) WHERE (rt1.c4) UNION SELECT DISTINCT rt1.c0, vt64.lid, rt1.c3, rt1.c4, rt1.c1, rt1.c6, rt1.c5, vt64.c0 FROM vt64 INNER JOIN rt1 ON ((CASE rt1.c6  WHEN rt1.c0 THEN rt1.c4 WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c4 END) NOTNULL) WHERE ((NOT (rt1.c4))) UNION SELECT DISTINCT rt1.c0, vt64.lid, rt1.c3, rt1.c4, rt1.c1, rt1.c6, rt1.c5, vt64.c0 FROM vt64 INNER JOIN rt1 ON ((CASE rt1.c6  WHEN rt1.c0 THEN rt1.c4 WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c4 END) NOTNULL) WHERE (((rt1.c4) ISNULL));
SELECT DISTINCT rt1.c0, vt64.lid, rt1.c3, rt1.c4, rt1.c1, rt1.c6, rt1.c5, vt64.c0 FROM vt64 INNER JOIN rt1 ON ((CASE rt1.c6  WHEN rt1.c0 THEN rt1.c4 WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c4 END) NOTNULL);
SELECT vt64.c0 FROM vt64 GROUP BY vt64.c0;
SELECT ALL vt64.c0 FROM vt64 WHERE (((((((vt64.c0)AND(vt64.lid)))AND(vt64.lid))) BETWEEN (vt64.lid COLLATE BINARY) AND ((- (vt64.lid))))) GROUP BY vt64.c0 UNION SELECT vt64.c0 FROM vt64 WHERE ((NOT (((((((vt64.c0)AND(vt64.lid)))AND(vt64.lid))) BETWEEN (vt64.lid COLLATE BINARY) AND ((- (vt64.lid))))))) GROUP BY vt64.c0 UNION SELECT vt64.c0 FROM vt64 WHERE (((((((((vt64.c0)AND(vt64.lid)))AND(vt64.lid))) BETWEEN (vt64.lid COLLATE BINARY) AND ((- (vt64.lid))))) ISNULL)) GROUP BY vt64.c0;
SELECT vt64.c0 FROM vt64 GROUP BY vt64.c0;
SELECT ALL rt1.c6, rt1.c2, vt64.c0, rt1.c4, rt1.c3 FROM vt64, rt1 GROUP BY rt1.c6, rt1.c2, vt64.c0, rt1.c4, rt1.c3;
SELECT ALL rt1.c6, rt1.c2, vt64.c0, rt1.c4, rt1.c3 FROM vt64, rt1 GROUP BY rt1.c6, rt1.c2, vt64.c0, rt1.c4, rt1.c3 HAVING AVG(IFNULL(rt1.c5, rt1.c0)) UNION ALL SELECT ALL rt1.c6, rt1.c2, vt64.c0, rt1.c4, rt1.c3 FROM vt64, rt1 GROUP BY rt1.c6, rt1.c2, vt64.c0, rt1.c4, rt1.c3 HAVING (NOT (AVG(IFNULL(rt1.c5, rt1.c0)))) UNION ALL SELECT ALL rt1.c6, rt1.c2, vt64.c0, rt1.c4, rt1.c3 FROM vt64, rt1 GROUP BY rt1.c6, rt1.c2, vt64.c0, rt1.c4, rt1.c3 HAVING ((AVG(IFNULL(rt1.c5, rt1.c0))) ISNULL);
SELECT ALL rt1.c6, rt1.c2, vt64.c0, rt1.c4, rt1.c3 FROM vt64, rt1 GROUP BY rt1.c6, rt1.c2, vt64.c0, rt1.c4, rt1.c3;
SELECT ALL rt1.c6, rt1.c2, vt64.c0, rt1.c4, rt1.c3 FROM vt64, rt1 GROUP BY rt1.c6, rt1.c2, vt64.c0, rt1.c4, rt1.c3 HAVING AVG(IFNULL(rt1.c5, rt1.c0)) UNION ALL SELECT ALL rt1.c6, rt1.c2, vt64.c0, rt1.c4, rt1.c3 FROM vt64, rt1 GROUP BY rt1.c6, rt1.c2, vt64.c0, rt1.c4, rt1.c3 HAVING (NOT (AVG(IFNULL(rt1.c5, rt1.c0)))) UNION ALL SELECT ALL rt1.c6, rt1.c2, vt64.c0, rt1.c4, rt1.c3 FROM vt64, rt1 GROUP BY rt1.c6, rt1.c2, vt64.c0, rt1.c4, rt1.c3 HAVING ((AVG(IFNULL(rt1.c5, rt1.c0))) ISNULL);
SELECT ALL rt1.c6, rt1.c2, vt64.c0, rt1.c4, rt1.c3 FROM vt64, rt1 GROUP BY rt1.c6, rt1.c2, vt64.c0, rt1.c4, rt1.c3;
SELECT ALL * FROM vt64 FULL OUTER JOIN rt1 ON (- (STRFTIME(vt64.lid, rt1.c5, rt1.c1)));
SELECT * FROM vt64 FULL OUTER JOIN rt1 ON (- (STRFTIME(vt64.lid, rt1.c5, rt1.c1))) WHERE (((((((((TRIM(DISTINCT rt1.c3))AND(((rt1.c0) IS FALSE))))OR(rt1.c1 COLLATE NOCASE)))OR((~ (rt1.c6)))))OR((((vt64.lid)) BETWEEN ((rt1.c4)) AND ((-909277839)))))) UNION ALL SELECT * FROM vt64 FULL OUTER JOIN rt1 ON (- (STRFTIME(vt64.lid, rt1.c5, rt1.c1))) WHERE ((NOT (((((((((TRIM(DISTINCT rt1.c3))AND(((rt1.c0) IS FALSE))))OR(rt1.c1 COLLATE NOCASE)))OR((~ (rt1.c6)))))OR((((vt64.lid)) BETWEEN ((rt1.c4)) AND ((-909277839)))))))) UNION ALL SELECT ALL * FROM vt64 FULL OUTER JOIN rt1 ON (- (STRFTIME(vt64.lid, rt1.c5, rt1.c1))) WHERE (((((((((((TRIM(DISTINCT rt1.c3))AND(((rt1.c0) IS FALSE))))OR(rt1.c1 COLLATE NOCASE)))OR((~ (rt1.c6)))))OR((((vt64.lid)) BETWEEN ((rt1.c4)) AND ((-909277839)))))) ISNULL));
SELECT ALL * FROM vt64 FULL OUTER JOIN rt1 ON (- (STRFTIME(vt64.lid, rt1.c5, rt1.c1)));
SELECT DISTINCT rt1.c2 FROM rt1;
SELECT DISTINCT rt1.c2 FROM rt1 WHERE (rt1.c3) UNION SELECT DISTINCT rt1.c2 FROM rt1 WHERE ((NOT (rt1.c3))) UNION SELECT DISTINCT rt1.c2 FROM rt1 WHERE (((rt1.c3) ISNULL));
SELECT DISTINCT rt1.c2 FROM rt1;
SELECT rt1.c3, rt1.c2, vt64.lid, rt1.c5, rt1.c4, rt1.c1, rt1.c0 FROM rt1, vt64 GROUP BY rt1.c3, rt1.c2, vt64.lid, rt1.c5, rt1.c4, rt1.c1, rt1.c0;
SELECT rt1.c3, rt1.c2, vt64.lid, rt1.c5, rt1.c4, rt1.c1, rt1.c0 FROM rt1, vt64 WHERE (((TYPEOF(rt1.c1)) IS FALSE)) GROUP BY rt1.c3, rt1.c2, vt64.lid, rt1.c5, rt1.c4, rt1.c1, rt1.c0 UNION SELECT rt1.c3, rt1.c2, vt64.lid, rt1.c5, rt1.c4, rt1.c1, rt1.c0 FROM rt1, vt64 WHERE ((NOT (((TYPEOF(rt1.c1)) IS FALSE)))) GROUP BY rt1.c3, rt1.c2, vt64.lid, rt1.c5, rt1.c4, rt1.c1, rt1.c0 UNION SELECT ALL rt1.c3, rt1.c2, vt64.lid, rt1.c5, rt1.c4, rt1.c1, rt1.c0 FROM rt1, vt64 WHERE (((((TYPEOF(rt1.c1)) IS FALSE)) ISNULL)) GROUP BY rt1.c3, rt1.c2, vt64.lid, rt1.c5, rt1.c4, rt1.c1, rt1.c0;
SELECT rt1.c3, rt1.c2, vt64.lid, rt1.c5, rt1.c4, rt1.c1, rt1.c0 FROM rt1, vt64 GROUP BY rt1.c3, rt1.c2, vt64.lid, rt1.c5, rt1.c4, rt1.c1, rt1.c0;
SELECT ALL vt64.lid FROM vt64, rt1 GROUP BY vt64.lid;
SELECT vt64.lid FROM vt64, rt1 GROUP BY vt64.lid HAVING MAX(SUM(rt1.c6)) COLLATE BINARY UNION ALL SELECT vt64.lid FROM vt64, rt1 GROUP BY vt64.lid HAVING (NOT (MAX(SUM(rt1.c6)) COLLATE BINARY)) UNION ALL SELECT vt64.lid FROM vt64, rt1 GROUP BY vt64.lid HAVING ((MAX(SUM(rt1.c6)) COLLATE BINARY) ISNULL);
SELECT ALL rt1.c5, rt1.c2, rt1.c6, vt64.c0, rt1.c1, rt1.c4, rt1.c3, vt64.lid, rt1.c0 FROM rt1, vt64;
SELECT rt1.c5, rt1.c2, rt1.c6, vt64.c0, rt1.c1, rt1.c4, rt1.c3, vt64.lid, rt1.c0 FROM rt1, vt64 WHERE (((vt64.lid COLLATE NOCASE)-(rt1.c0))) UNION ALL SELECT rt1.c5, rt1.c2, rt1.c6, vt64.c0, rt1.c1, rt1.c4, rt1.c3, vt64.lid, rt1.c0 FROM rt1, vt64 WHERE ((NOT (((vt64.lid COLLATE NOCASE)-(rt1.c0))))) UNION ALL SELECT rt1.c5, rt1.c2, rt1.c6, vt64.c0, rt1.c1, rt1.c4, rt1.c3, vt64.lid, rt1.c0 FROM rt1, vt64 WHERE (((((vt64.lid COLLATE NOCASE)-(rt1.c0))) ISNULL));
SELECT ALL rt1.c5, rt1.c2, rt1.c6, vt64.c0, rt1.c1, rt1.c4, rt1.c3, vt64.lid, rt1.c0 FROM rt1, vt64;
SELECT DISTINCT rt1.c0, rt1.c3, vt64.lid FROM rt1, vt64;
SELECT DISTINCT rt1.c0, rt1.c3, vt64.lid FROM rt1, vt64 WHERE ((((((rt1.c5))<=((vt64.c0)))) IS TRUE)) UNION SELECT DISTINCT rt1.c0, rt1.c3, vt64.lid FROM rt1, vt64 WHERE ((NOT ((((((rt1.c5))<=((vt64.c0)))) IS TRUE)))) UNION SELECT DISTINCT rt1.c0, rt1.c3, vt64.lid FROM rt1, vt64 WHERE ((((((((rt1.c5))<=((vt64.c0)))) IS TRUE)) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c3, vt64.lid FROM rt1, vt64;
SELECT rt1.c3, rt1.c1, vt64.c0, rt1.c4, rt1.c5, rt1.c0, rt1.c6, rt1.c2 FROM vt64 CROSS JOIN rt1 ON ((((rt1.c3) IS FALSE))==(CASE WHEN rt1.c5 THEN rt1.c1 ELSE rt1.c2 END)) GROUP BY rt1.c3, rt1.c1, vt64.c0, rt1.c4, rt1.c5, rt1.c0, rt1.c6, rt1.c2;
SELECT ALL rt1.c3, rt1.c1, vt64.c0, rt1.c4, rt1.c5, rt1.c0, rt1.c6, rt1.c2 FROM vt64 CROSS JOIN rt1 ON ((((rt1.c3) IS FALSE))=(CASE WHEN rt1.c5 THEN rt1.c1 ELSE rt1.c2 END)) WHERE ((- (((rt1.c6)/(rt1.c5))))) GROUP BY rt1.c3, rt1.c1, vt64.c0, rt1.c4, rt1.c5, rt1.c0, rt1.c6, rt1.c2 UNION SELECT rt1.c3, rt1.c1, vt64.c0, rt1.c4, rt1.c5, rt1.c0, rt1.c6, rt1.c2 FROM vt64 CROSS JOIN rt1 ON ((((rt1.c3) IS FALSE))=(CASE WHEN rt1.c5 THEN rt1.c1 ELSE rt1.c2 END)) WHERE ((NOT ((- (((rt1.c6)/(rt1.c5))))))) GROUP BY rt1.c3, rt1.c1, vt64.c0, rt1.c4, rt1.c5, rt1.c0, rt1.c6, rt1.c2 UNION SELECT ALL rt1.c3, rt1.c1, vt64.c0, rt1.c4, rt1.c5, rt1.c0, rt1.c6, rt1.c2 FROM vt64 CROSS JOIN rt1 ON ((((rt1.c3) IS FALSE))=(CASE WHEN rt1.c5 THEN rt1.c1 ELSE rt1.c2 END)) WHERE ((((- (((rt1.c6)/(rt1.c5))))) ISNULL)) GROUP BY rt1.c3, rt1.c1, vt64.c0, rt1.c4, rt1.c5, rt1.c0, rt1.c6, rt1.c2;
SELECT rt1.c3, rt1.c1, vt64.c0, rt1.c4, rt1.c5, rt1.c0, rt1.c6, rt1.c2 FROM vt64 CROSS JOIN rt1 ON ((((rt1.c3) IS FALSE))==(CASE WHEN rt1.c5 THEN rt1.c1 ELSE rt1.c2 END)) GROUP BY rt1.c3, rt1.c1, vt64.c0, rt1.c4, rt1.c5, rt1.c0, rt1.c6, rt1.c2;
SELECT ALL rt1.c1, rt1.c5, rt1.c0, rt1.c6, vt64.c0, rt1.c2, vt64.lid FROM rt1 FULL OUTER JOIN vt64 ON ((((((((CASE vt64.lid  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c5 END)AND(CASE vt64.c0  WHEN rt1.c5 THEN rt1.c6 END)))AND(CASE WHEN rt1.c4 THEN rt1.c1 END)))OR((((vt64.c0)) NOT BETWEEN ((vt64.lid)) AND (('1261455776'))))))AND(((rt1.c4) NOT NULL))) GROUP BY rt1.c1, rt1.c5, rt1.c0, rt1.c6, vt64.c0, rt1.c2, vt64.lid;
SELECT ALL rt1.c1, rt1.c5, rt1.c0, rt1.c6, vt64.c0, rt1.c2, vt64.lid FROM rt1 FULL OUTER JOIN vt64 ON ((((((((CASE vt64.lid  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c5 END)AND(CASE vt64.c0  WHEN rt1.c5 THEN rt1.c6 END)))AND(CASE WHEN rt1.c4 THEN rt1.c1 END)))OR((((vt64.c0)) NOT BETWEEN ((vt64.lid)) AND (('1261455776'))))))AND(((rt1.c4) NOT NULL))) GROUP BY rt1.c1, rt1.c5, rt1.c0, rt1.c6, vt64.c0, rt1.c2, vt64.lid HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c1, rt1.c5, rt1.c0, rt1.c6, vt64.c0, rt1.c2, vt64.lid FROM rt1 FULL OUTER JOIN vt64 ON ((((((((CASE vt64.lid  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c5 END)AND(CASE vt64.c0  WHEN rt1.c5 THEN rt1.c6 END)))AND(CASE WHEN rt1.c4 THEN rt1.c1 END)))OR((((vt64.c0)) NOT BETWEEN ((vt64.lid)) AND (('1261455776'))))))AND(((rt1.c4) NOT NULL))) GROUP BY rt1.c1, rt1.c5, rt1.c0, rt1.c6, vt64.c0, rt1.c2, vt64.lid HAVING (NOT ((NOT (COUNT(*))))) UNION ALL SELECT ALL rt1.c1, rt1.c5, rt1.c0, rt1.c6, vt64.c0, rt1.c2, vt64.lid FROM rt1 FULL OUTER JOIN vt64 ON ((((((((CASE vt64.lid  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c5 END)AND(CASE vt64.c0  WHEN rt1.c5 THEN rt1.c6 END)))AND(CASE WHEN rt1.c4 THEN rt1.c1 END)))OR((((vt64.c0)) NOT BETWEEN ((vt64.lid)) AND (('1261455776'))))))AND(((rt1.c4) NOT NULL))) GROUP BY rt1.c1, rt1.c5, rt1.c0, rt1.c6, vt64.c0, rt1.c2, vt64.lid HAVING (((NOT (COUNT(*)))) ISNULL);
SELECT ALL rt1.c1, rt1.c5, rt1.c0, rt1.c6, vt64.c0, rt1.c2, vt64.lid FROM rt1 FULL OUTER JOIN vt64 ON ((((((((CASE vt64.lid  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c5 END)AND(CASE vt64.c0  WHEN rt1.c5 THEN rt1.c6 END)))AND(CASE WHEN rt1.c4 THEN rt1.c1 END)))OR((((vt64.c0)) NOT BETWEEN ((vt64.lid)) AND (('1261455776'))))))AND(((rt1.c4) NOT NULL))) GROUP BY rt1.c1, rt1.c5, rt1.c0, rt1.c6, vt64.c0, rt1.c2, vt64.lid;
SELECT ALL rt1.c1, rt1.c5, rt1.c0, rt1.c6, vt64.c0, rt1.c2, vt64.lid FROM rt1 FULL OUTER JOIN vt64 ON ((((((((CASE vt64.lid  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c5 END)AND(CASE vt64.c0  WHEN rt1.c5 THEN rt1.c6 END)))AND(CASE WHEN rt1.c4 THEN rt1.c1 END)))OR((((vt64.c0)) NOT BETWEEN ((vt64.lid)) AND (('1261455776'))))))AND(((rt1.c4) NOT NULL))) GROUP BY rt1.c1, rt1.c5, rt1.c0, rt1.c6, vt64.c0, rt1.c2, vt64.lid HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c1, rt1.c5, rt1.c0, rt1.c6, vt64.c0, rt1.c2, vt64.lid FROM rt1 FULL OUTER JOIN vt64 ON ((((((((CASE vt64.lid  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c5 END)AND(CASE vt64.c0  WHEN rt1.c5 THEN rt1.c6 END)))AND(CASE WHEN rt1.c4 THEN rt1.c1 END)))OR((((vt64.c0)) NOT BETWEEN ((vt64.lid)) AND (('1261455776'))))))AND(((rt1.c4) NOT NULL))) GROUP BY rt1.c1, rt1.c5, rt1.c0, rt1.c6, vt64.c0, rt1.c2, vt64.lid HAVING (NOT ((NOT (COUNT(*))))) UNION ALL SELECT ALL rt1.c1, rt1.c5, rt1.c0, rt1.c6, vt64.c0, rt1.c2, vt64.lid FROM rt1 FULL OUTER JOIN vt64 ON ((((((((CASE vt64.lid  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c5 END)AND(CASE vt64.c0  WHEN rt1.c5 THEN rt1.c6 END)))AND(CASE WHEN rt1.c4 THEN rt1.c1 END)))OR((((vt64.c0)) NOT BETWEEN ((vt64.lid)) AND (('1261455776'))))))AND(((rt1.c4) NOT NULL))) GROUP BY rt1.c1, rt1.c5, rt1.c0, rt1.c6, vt64.c0, rt1.c2, vt64.lid HAVING (((NOT (COUNT(*)))) ISNULL);
SELECT ALL rt1.c1, rt1.c5, rt1.c0, rt1.c6, vt64.c0, rt1.c2, vt64.lid FROM rt1 FULL OUTER JOIN vt64 ON ((((((((CASE vt64.lid  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c5 END)AND(CASE vt64.c0  WHEN rt1.c5 THEN rt1.c6 END)))AND(CASE WHEN rt1.c4 THEN rt1.c1 END)))OR((((vt64.c0)) NOT BETWEEN ((vt64.lid)) AND (('1261455776'))))))AND(((rt1.c4) NOT NULL))) GROUP BY rt1.c1, rt1.c5, rt1.c0, rt1.c6, vt64.c0, rt1.c2, vt64.lid;
SELECT ALL rt1.c6, rt1.c1 FROM vt64 NATURAL JOIN rt1;
SELECT ALL rt1.c6, rt1.c1 FROM vt64 NATURAL JOIN rt1 WHERE ((((((vt64.lid) NOT BETWEEN (rt1.c1) AND (rt1.c4))))<((((rt1.c5)LIKE(rt1.c4)))))) UNION ALL SELECT ALL rt1.c6, rt1.c1 FROM vt64 NATURAL JOIN rt1 WHERE ((NOT ((((((vt64.lid) NOT BETWEEN (rt1.c1) AND (rt1.c4))))<((((rt1.c5)LIKE(rt1.c4)))))))) UNION ALL SELECT rt1.c6, rt1.c1 FROM vt64 NATURAL JOIN rt1 WHERE ((((((((vt64.lid) NOT BETWEEN (rt1.c1) AND (rt1.c4))))<((((rt1.c5)LIKE(rt1.c4)))))) ISNULL));
SELECT ALL rt1.c6, rt1.c1 FROM vt64 NATURAL JOIN rt1;
SELECT DISTINCT * FROM vt64, rt1;
SELECT DISTINCT * FROM vt64, rt1 WHERE (((((rt1.c6) NOTNULL))<=(rt1.c0))) UNION SELECT DISTINCT * FROM vt64, rt1 WHERE ((NOT (((((rt1.c6) NOTNULL))<=(rt1.c0))))) UNION SELECT DISTINCT * FROM vt64, rt1 WHERE (((((((rt1.c6) NOTNULL))<=(rt1.c0))) ISNULL));
SELECT DISTINCT * FROM vt64, rt1;
SELECT ALL rt1.c2, rt1.c4, vt64.lid, rt1.c3, vt64.c0, rt1.c6 FROM rt1, vt64 GROUP BY rt1.c2, rt1.c4, vt64.lid, rt1.c3, vt64.c0, rt1.c6;
SELECT rt1.c2, rt1.c4, vt64.lid, rt1.c3, vt64.c0, rt1.c6 FROM rt1, vt64 WHERE ((((rt1.c2)<=(rt1.c4)) IN (CAST(0.8663974618246929 AS REAL)))) GROUP BY rt1.c2, rt1.c4, vt64.lid, rt1.c3, vt64.c0, rt1.c6 UNION SELECT ALL rt1.c2, rt1.c4, vt64.lid, rt1.c3, vt64.c0, rt1.c6 FROM rt1, vt64 WHERE ((NOT ((((rt1.c2)<=(rt1.c4)) IN (CAST(0.8663974618246929 AS REAL)))))) GROUP BY rt1.c2, rt1.c4, vt64.lid, rt1.c3, vt64.c0, rt1.c6 UNION SELECT rt1.c2, rt1.c4, vt64.lid, rt1.c3, vt64.c0, rt1.c6 FROM rt1, vt64 WHERE ((((((rt1.c2)<=(rt1.c4)) IN (CAST(0.8663974618246929 AS REAL)))) ISNULL)) GROUP BY rt1.c2, rt1.c4, vt64.lid, rt1.c3, vt64.c0, rt1.c6;
SELECT ALL rt1.c2, rt1.c4, vt64.lid, rt1.c3, vt64.c0, rt1.c6 FROM rt1, vt64 GROUP BY rt1.c2, rt1.c4, vt64.lid, rt1.c3, vt64.c0, rt1.c6;
SELECT ALL rt1.c5, rt1.c0 FROM vt64 NATURAL JOIN rt1 GROUP BY rt1.c5, rt1.c0;
SELECT rt1.c5, rt1.c0 FROM vt64 NATURAL JOIN rt1 GROUP BY rt1.c5, rt1.c0 HAVING COUNT(TOTAL(COUNT(rt1.c4))) COLLATE BINARY UNION ALL SELECT rt1.c5, rt1.c0 FROM vt64 NATURAL JOIN rt1 GROUP BY rt1.c5, rt1.c0 HAVING (NOT (COUNT(TOTAL(COUNT(rt1.c4))) COLLATE BINARY)) UNION ALL SELECT ALL rt1.c5, rt1.c0 FROM vt64 NATURAL JOIN rt1 GROUP BY rt1.c5, rt1.c0 HAVING ((COUNT(TOTAL(COUNT(rt1.c4))) COLLATE BINARY) ISNULL);
SELECT ALL rt1.c2, rt1.c6, vt64.c0 FROM rt1, vt64;
SELECT ALL rt1.c2, rt1.c6, vt64.c0 FROM rt1, vt64 WHERE ((((CAST(rt1.c3 AS TEXT), CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c6 END, HEX(DISTINCT rt1.c4)))<((vt64.c0 COLLATE BINARY, CAST(rt1.c0 AS BLOB), CAST(rt1.c3 AS BLOB))))) UNION ALL SELECT rt1.c2, rt1.c6, vt64.c0 FROM rt1, vt64 WHERE ((NOT ((((CAST(rt1.c3 AS TEXT), CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c6 END, HEX(DISTINCT rt1.c4)))<((vt64.c0 COLLATE BINARY, CAST(rt1.c0 AS BLOB), CAST(rt1.c3 AS BLOB))))))) UNION ALL SELECT rt1.c2, rt1.c6, vt64.c0 FROM rt1, vt64 WHERE ((((((CAST(rt1.c3 AS TEXT), CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c6 END, HEX(DISTINCT rt1.c4)))<((vt64.c0 COLLATE BINARY, CAST(rt1.c0 AS BLOB), CAST(rt1.c3 AS BLOB))))) ISNULL));
SELECT ALL rt1.c2, rt1.c6, vt64.c0 FROM rt1, vt64;
SELECT DISTINCT rt1.c4, rt1.c2, rt1.c1, rt1.c5 FROM rt1;
SELECT DISTINCT rt1.c4, rt1.c2, rt1.c1, rt1.c5 FROM rt1 WHERE (((x'')||((rt1.c4 IN ())))) UNION SELECT DISTINCT rt1.c4, rt1.c2, rt1.c1, rt1.c5 FROM rt1 WHERE ((NOT (((x'')||((rt1.c4 IN ())))))) UNION SELECT DISTINCT rt1.c4, rt1.c2, rt1.c1, rt1.c5 FROM rt1 WHERE (((((x'')||((rt1.c4 IN ())))) ISNULL));
SELECT DISTINCT rt1.c4, rt1.c2, rt1.c1, rt1.c5 FROM rt1;
SELECT ALL rt1.c2, rt1.c4, rt1.c3, rt1.c0, rt1.c5, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c4, rt1.c3, rt1.c0, rt1.c5, rt1.c1;
SELECT rt1.c2, rt1.c4, rt1.c3, rt1.c0, rt1.c5, rt1.c1 FROM rt1 WHERE (CASE NULL  WHEN ((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c0)) THEN rt1.c6 COLLATE NOCASE WHEN (rt1.c0 IN ()) THEN ((((((((rt1.c5)OR(rt1.c3)))AND(rt1.c0)))AND('593169254')))AND(rt1.c3)) WHEN rt1.c4 THEN CAST(NULL AS INTEGER) ELSE rt1.c2 COLLATE NOCASE END) GROUP BY rt1.c2, rt1.c4, rt1.c3, rt1.c0, rt1.c5, rt1.c1 UNION SELECT ALL rt1.c2, rt1.c4, rt1.c3, rt1.c0, rt1.c5, rt1.c1 FROM rt1 WHERE ((NOT (CASE NULL  WHEN ((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c0)) THEN rt1.c6 COLLATE NOCASE WHEN (rt1.c0 IN ()) THEN ((((((((rt1.c5)OR(rt1.c3)))AND(rt1.c0)))AND('593169254')))AND(rt1.c3)) WHEN rt1.c4 THEN CAST(NULL AS INTEGER) ELSE rt1.c2 COLLATE NOCASE END))) GROUP BY rt1.c2, rt1.c4, rt1.c3, rt1.c0, rt1.c5, rt1.c1 UNION SELECT rt1.c2, rt1.c4, rt1.c3, rt1.c0, rt1.c5, rt1.c1 FROM rt1 WHERE (((CASE NULL  WHEN ((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c0)) THEN rt1.c6 COLLATE NOCASE WHEN (rt1.c0 IN ()) THEN ((((((((rt1.c5)OR(rt1.c3)))AND(rt1.c0)))AND('593169254')))AND(rt1.c3)) WHEN rt1.c4 THEN CAST(NULL AS INTEGER) ELSE rt1.c2 COLLATE NOCASE END) ISNULL)) GROUP BY rt1.c2, rt1.c4, rt1.c3, rt1.c0, rt1.c5, rt1.c1;
SELECT ALL rt1.c2, rt1.c4, rt1.c3, rt1.c0, rt1.c5, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c4, rt1.c3, rt1.c0, rt1.c5, rt1.c1;
SELECT ALL rt1.c3, rt1.c0, rt1.c4, rt1.c1 FROM rt1, vt64 GROUP BY rt1.c3, rt1.c0, rt1.c4, rt1.c1;
SELECT ALL rt1.c3, rt1.c0, rt1.c4, rt1.c1 FROM rt1, vt64 GROUP BY rt1.c3, rt1.c0, rt1.c4, rt1.c1 HAVING GROUP_CONCAT(MIN(vt64.c0)) UNION ALL SELECT rt1.c3, rt1.c0, rt1.c4, rt1.c1 FROM rt1, vt64 GROUP BY rt1.c3, rt1.c0, rt1.c4, rt1.c1 HAVING (NOT (GROUP_CONCAT(MIN(vt64.c0)))) UNION ALL SELECT ALL rt1.c3, rt1.c0, rt1.c4, rt1.c1 FROM rt1, vt64 GROUP BY rt1.c3, rt1.c0, rt1.c4, rt1.c1 HAVING ((GROUP_CONCAT(MIN(vt64.c0))) ISNULL);
SELECT ALL * FROM rt1;
SELECT ALL * FROM rt1 WHERE (((((rt1.c0 IN ())))<((LIKELY(DISTINCT rt1.c6))))) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT (((((rt1.c0 IN ())))<((LIKELY(DISTINCT rt1.c6))))))) UNION ALL SELECT ALL * FROM rt1 WHERE (((((((rt1.c0 IN ())))<((LIKELY(DISTINCT rt1.c6))))) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT * FROM rt1 RIGHT OUTER JOIN vt64 ON (~ (CAST(rt1.c3 AS TEXT)));
SELECT DISTINCT * FROM rt1 RIGHT OUTER JOIN vt64 ON (~ (CAST(rt1.c3 AS TEXT))) WHERE (((((CAST(rt1.c1 AS NUMERIC))AND(((-50205731)|(rt1.c3)))))OR(((((rt1.c5)OR(rt1.c6)))AND(vt64.c0))))) UNION SELECT DISTINCT * FROM rt1 RIGHT OUTER JOIN vt64 ON (~ (CAST(rt1.c3 AS TEXT))) WHERE ((NOT (((((CAST(rt1.c1 AS NUMERIC))AND(((-50205731)|(rt1.c3)))))OR(((((rt1.c5)OR(rt1.c6)))AND(vt64.c0))))))) UNION SELECT DISTINCT * FROM rt1 RIGHT OUTER JOIN vt64 ON (~ (CAST(rt1.c3 AS TEXT))) WHERE (((((((CAST(rt1.c1 AS NUMERIC))AND(((-50205731)|(rt1.c3)))))OR(((((rt1.c5)OR(rt1.c6)))AND(vt64.c0))))) ISNULL));
SELECT DISTINCT * FROM rt1 RIGHT OUTER JOIN vt64 ON (~ (CAST(rt1.c3 AS TEXT)));
SELECT ALL rt1.c2, vt64.c0, rt1.c4, rt1.c1, vt64.lid, rt1.c6 FROM rt1, vt64 GROUP BY rt1.c2, vt64.c0, rt1.c4, rt1.c1, vt64.lid, rt1.c6;
SELECT ALL rt1.c2, vt64.c0, rt1.c4, rt1.c1, vt64.lid, rt1.c6 FROM rt1, vt64 WHERE (((((rt1.c1)/(rt1.c1))) NOT BETWEEN (((((rt1.c0)AND(vt64.lid)))OR(rt1.c1))) AND (json(rt1.c6)))) GROUP BY rt1.c2, vt64.c0, rt1.c4, rt1.c1, vt64.lid, rt1.c6 UNION SELECT rt1.c2, vt64.c0, rt1.c4, rt1.c1, vt64.lid, rt1.c6 FROM rt1, vt64 WHERE ((NOT (((((rt1.c1)/(rt1.c1))) NOT BETWEEN (((((rt1.c0)AND(vt64.lid)))OR(rt1.c1))) AND (json(rt1.c6)))))) GROUP BY rt1.c2, vt64.c0, rt1.c4, rt1.c1, vt64.lid, rt1.c6 UNION SELECT rt1.c2, vt64.c0, rt1.c4, rt1.c1, vt64.lid, rt1.c6 FROM rt1, vt64 WHERE (((((((rt1.c1)/(rt1.c1))) NOT BETWEEN (((((rt1.c0)AND(vt64.lid)))OR(rt1.c1))) AND (json(rt1.c6)))) ISNULL)) GROUP BY rt1.c2, vt64.c0, rt1.c4, rt1.c1, vt64.lid, rt1.c6;
SELECT ALL rt1.c2, vt64.c0, rt1.c4, rt1.c1, vt64.lid, rt1.c6 FROM rt1, vt64 GROUP BY rt1.c2, vt64.c0, rt1.c4, rt1.c1, vt64.lid, rt1.c6;
SELECT ALL rt1.c2, vt64.c0, vt64.lid, rt1.c1, rt1.c5 FROM rt1 CROSS JOIN vt64 ON TRIM(rt1.c3) COLLATE NOCASE GROUP BY rt1.c2, vt64.c0, vt64.lid, rt1.c1, rt1.c5;
SELECT rt1.c2, vt64.c0, vt64.lid, rt1.c1, rt1.c5 FROM rt1 CROSS JOIN vt64 ON TRIM(rt1.c3) COLLATE NOCASE GROUP BY rt1.c2, vt64.c0, vt64.lid, rt1.c1, rt1.c5 HAVING (+ (MAX(MAX(rt1.c4)))) COLLATE NOCASE UNION ALL SELECT rt1.c2, vt64.c0, vt64.lid, rt1.c1, rt1.c5 FROM rt1 CROSS JOIN vt64 ON TRIM(rt1.c3) COLLATE NOCASE GROUP BY rt1.c2, vt64.c0, vt64.lid, rt1.c1, rt1.c5 HAVING (NOT ((+ (MAX(MAX(rt1.c4)))) COLLATE NOCASE)) UNION ALL SELECT rt1.c2, vt64.c0, vt64.lid, rt1.c1, rt1.c5 FROM rt1 CROSS JOIN vt64 ON TRIM(rt1.c3) COLLATE NOCASE GROUP BY rt1.c2, vt64.c0, vt64.lid, rt1.c1, rt1.c5 HAVING (((+ (MAX(MAX(rt1.c4)))) COLLATE NOCASE) ISNULL);
SELECT * FROM rt1;
SELECT ALL * FROM rt1 WHERE (SQLITE_SOURCE_ID()) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT (SQLITE_SOURCE_ID()))) UNION ALL SELECT * FROM rt1 WHERE (((SQLITE_SOURCE_ID()) ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT * FROM rt1, vt64;
SELECT DISTINCT * FROM rt1, vt64 WHERE (((((rt1.c0 IN (vt64.lid)), ((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c4)), CASE WHEN vt64.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c6 WHEN rt1.c1 THEN vt64.c0 ELSE vt64.c0 END))>=((TYPEOF('650547517'), rt1.c0, IFNULL(DISTINCT rt1.c4, rt1.c4))))) UNION SELECT DISTINCT * FROM rt1, vt64 WHERE ((NOT (((((rt1.c0 IN (vt64.lid)), ((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c4)), CASE WHEN vt64.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c6 WHEN rt1.c1 THEN vt64.c0 ELSE vt64.c0 END))>=((TYPEOF('650547517'), rt1.c0, IFNULL(DISTINCT rt1.c4, rt1.c4))))))) UNION SELECT DISTINCT * FROM rt1, vt64 WHERE (((((((rt1.c0 IN (vt64.lid)), ((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c4)), CASE WHEN vt64.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c6 WHEN rt1.c1 THEN vt64.c0 ELSE vt64.c0 END))>=((TYPEOF('650547517'), rt1.c0, IFNULL(DISTINCT rt1.c4, rt1.c4))))) ISNULL));
SELECT DISTINCT * FROM rt1, vt64;
SELECT ALL rt1.c5, rt1.c3 FROM vt64, rt1 GROUP BY rt1.c5, rt1.c3;
SELECT rt1.c5, rt1.c3 FROM vt64, rt1 WHERE ((((rt1.c0 IN ())) BETWEEN (((((((((vt64.lid)OR(rt1.c2)))AND(rt1.c3)))AND(rt1.c3)))OR(vt64.c0))) AND (rt1.c0 COLLATE NOCASE))) GROUP BY rt1.c5, rt1.c3 UNION SELECT rt1.c5, rt1.c3 FROM vt64, rt1 WHERE ((NOT ((((rt1.c0 IN ())) BETWEEN (((((((((vt64.lid)OR(rt1.c2)))AND(rt1.c3)))AND(rt1.c3)))OR(vt64.c0))) AND (rt1.c0 COLLATE NOCASE))))) GROUP BY rt1.c5, rt1.c3 UNION SELECT rt1.c5, rt1.c3 FROM vt64, rt1 WHERE ((((((rt1.c0 IN ())) BETWEEN (((((((((vt64.lid)OR(rt1.c2)))AND(rt1.c3)))AND(rt1.c3)))OR(vt64.c0))) AND (rt1.c0 COLLATE NOCASE))) ISNULL)) GROUP BY rt1.c5, rt1.c3;
SELECT ALL rt1.c5, rt1.c3 FROM vt64, rt1 GROUP BY rt1.c5, rt1.c3;
SELECT rt1.c1, rt1.c6, vt64.c0, rt1.c5, rt1.c2 FROM vt64, rt1 GROUP BY rt1.c1, rt1.c6, vt64.c0, rt1.c5, rt1.c2;
SELECT ALL rt1.c1, rt1.c6, vt64.c0, rt1.c5, rt1.c2 FROM vt64, rt1 GROUP BY rt1.c1, rt1.c6, vt64.c0, rt1.c5, rt1.c2 HAVING rt1.c1 UNION ALL SELECT ALL rt1.c1, rt1.c6, vt64.c0, rt1.c5, rt1.c2 FROM vt64, rt1 GROUP BY rt1.c1, rt1.c6, vt64.c0, rt1.c5, rt1.c2 HAVING (NOT (rt1.c1)) UNION ALL SELECT rt1.c1, rt1.c6, vt64.c0, rt1.c5, rt1.c2 FROM vt64, rt1 GROUP BY rt1.c1, rt1.c6, vt64.c0, rt1.c5, rt1.c2 HAVING ((rt1.c1) ISNULL);
SELECT rt1.c1, rt1.c6, vt64.c0, rt1.c5, rt1.c2 FROM vt64, rt1 GROUP BY rt1.c1, rt1.c6, vt64.c0, rt1.c5, rt1.c2;
SELECT ALL rt1.c1, rt1.c6, vt64.c0, rt1.c5, rt1.c2 FROM vt64, rt1 GROUP BY rt1.c1, rt1.c6, vt64.c0, rt1.c5, rt1.c2 HAVING rt1.c1 UNION ALL SELECT ALL rt1.c1, rt1.c6, vt64.c0, rt1.c5, rt1.c2 FROM vt64, rt1 GROUP BY rt1.c1, rt1.c6, vt64.c0, rt1.c5, rt1.c2 HAVING (NOT (rt1.c1)) UNION ALL SELECT rt1.c1, rt1.c6, vt64.c0, rt1.c5, rt1.c2 FROM vt64, rt1 GROUP BY rt1.c1, rt1.c6, vt64.c0, rt1.c5, rt1.c2 HAVING ((rt1.c1) ISNULL);
SELECT rt1.c1, rt1.c6, vt64.c0, rt1.c5, rt1.c2 FROM vt64, rt1 GROUP BY rt1.c1, rt1.c6, vt64.c0, rt1.c5, rt1.c2;
SELECT * FROM rt1;
SELECT * FROM rt1 WHERE (']<' COLLATE RTRIM) UNION ALL SELECT * FROM rt1 WHERE ((NOT (']<' COLLATE RTRIM))) UNION ALL SELECT ALL * FROM rt1 WHERE (((']<' COLLATE RTRIM) ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT rt1.c4, rt1.c6, rt1.c1, rt1.c5, vt64.lid, rt1.c2, vt64.c0, rt1.c0 FROM rt1 RIGHT OUTER JOIN vt64 ON (((~ (rt1.c0)))<(CAST(rt1.c5 AS NUMERIC)));
SELECT DISTINCT rt1.c4, rt1.c6, rt1.c1, rt1.c5, vt64.lid, rt1.c2, vt64.c0, rt1.c0 FROM rt1 RIGHT OUTER JOIN vt64 ON (((~ (rt1.c0)))<(CAST(rt1.c5 AS NUMERIC))) WHERE (CAST(((NULL)|(rt1.c0)) AS INTEGER)) UNION SELECT DISTINCT rt1.c4, rt1.c6, rt1.c1, rt1.c5, vt64.lid, rt1.c2, vt64.c0, rt1.c0 FROM rt1 RIGHT OUTER JOIN vt64 ON (((~ (rt1.c0)))<(CAST(rt1.c5 AS NUMERIC))) WHERE ((NOT (CAST(((NULL)|(rt1.c0)) AS INTEGER)))) UNION SELECT DISTINCT rt1.c4, rt1.c6, rt1.c1, rt1.c5, vt64.lid, rt1.c2, vt64.c0, rt1.c0 FROM rt1 RIGHT OUTER JOIN vt64 ON (((~ (rt1.c0)))<(CAST(rt1.c5 AS NUMERIC))) WHERE (((CAST(((NULL)|(rt1.c0)) AS INTEGER)) ISNULL));
SELECT DISTINCT rt1.c4, rt1.c6, rt1.c1, rt1.c5, vt64.lid, rt1.c2, vt64.c0, rt1.c0 FROM rt1 RIGHT OUTER JOIN vt64 ON (((~ (rt1.c0)))<(CAST(rt1.c5 AS NUMERIC)));
SELECT vt64.lid FROM vt64 GROUP BY vt64.lid;
SELECT vt64.lid FROM vt64 WHERE (((((((((CAST('' AS REAL))AND((vt64.c0 IN ()))))AND(((vt64.lid) BETWEEN (vt64.c0) AND (vt64.lid)))))AND(((vt64.lid)/(vt64.lid)))))AND((((vt64.lid)) BETWEEN ((vt64.lid)) AND ((vt64.lid)))))) GROUP BY vt64.lid UNION SELECT ALL vt64.lid FROM vt64 WHERE ((NOT (((((((((CAST('' AS REAL))AND((vt64.c0 IN ()))))AND(((vt64.lid) BETWEEN (vt64.c0) AND (vt64.lid)))))AND(((vt64.lid)/(vt64.lid)))))AND((((vt64.lid)) BETWEEN ((vt64.lid)) AND ((vt64.lid)))))))) GROUP BY vt64.lid UNION SELECT ALL vt64.lid FROM vt64 WHERE (((((((((((CAST('' AS REAL))AND((vt64.c0 IN ()))))AND(((vt64.lid) BETWEEN (vt64.c0) AND (vt64.lid)))))AND(((vt64.lid)/(vt64.lid)))))AND((((vt64.lid)) BETWEEN ((vt64.lid)) AND ((vt64.lid)))))) ISNULL)) GROUP BY vt64.lid;
SELECT vt64.lid FROM vt64 GROUP BY vt64.lid;
SELECT ALL rt1.c3, rt1.c5, rt1.c2, vt64.lid, rt1.c6, vt64.c0, rt1.c4, rt1.c0, rt1.c1 FROM rt1 LEFT OUTER JOIN vt64 ON LOWER(((rt1.c3)&(rt1.c0))) GROUP BY rt1.c3, rt1.c5, rt1.c2, vt64.lid, rt1.c6, vt64.c0, rt1.c4, rt1.c0, rt1.c1;
SELECT ALL rt1.c3, rt1.c5, rt1.c2, vt64.lid, rt1.c6, vt64.c0, rt1.c4, rt1.c0, rt1.c1 FROM rt1 LEFT OUTER JOIN vt64 ON LOWER(((rt1.c3)&(rt1.c0))) GROUP BY rt1.c3, rt1.c5, rt1.c2, vt64.lid, rt1.c6, vt64.c0, rt1.c4, rt1.c0, rt1.c1 HAVING ((GROUP_CONCAT(vt64.lid)) NOT BETWEEN (TOTAL(1.156200343E9)) AND (((MAX(rt1.c3))>=(COUNT('-2075203550'))))) UNION ALL SELECT rt1.c3, rt1.c5, rt1.c2, vt64.lid, rt1.c6, vt64.c0, rt1.c4, rt1.c0, rt1.c1 FROM rt1 LEFT OUTER JOIN vt64 ON LOWER(((rt1.c3)&(rt1.c0))) GROUP BY rt1.c3, rt1.c5, rt1.c2, vt64.lid, rt1.c6, vt64.c0, rt1.c4, rt1.c0, rt1.c1 HAVING (NOT (((GROUP_CONCAT(vt64.lid)) NOT BETWEEN (TOTAL(1.156200343E9)) AND (((MAX(rt1.c3))>=(COUNT('-2075203550'))))))) UNION ALL SELECT ALL rt1.c3, rt1.c5, rt1.c2, vt64.lid, rt1.c6, vt64.c0, rt1.c4, rt1.c0, rt1.c1 FROM rt1 LEFT OUTER JOIN vt64 ON LOWER(((rt1.c3)&(rt1.c0))) GROUP BY rt1.c3, rt1.c5, rt1.c2, vt64.lid, rt1.c6, vt64.c0, rt1.c4, rt1.c0, rt1.c1 HAVING ((((GROUP_CONCAT(vt64.lid)) NOT BETWEEN (TOTAL(1.156200343E9)) AND (((MAX(rt1.c3))>=(COUNT('-2075203550')))))) ISNULL);
SELECT ALL rt1.c3, rt1.c5, rt1.c2, vt64.lid, rt1.c6, vt64.c0, rt1.c4, rt1.c0, rt1.c1 FROM rt1 LEFT OUTER JOIN vt64 ON LOWER(((rt1.c3)&(rt1.c0))) GROUP BY rt1.c3, rt1.c5, rt1.c2, vt64.lid, rt1.c6, vt64.c0, rt1.c4, rt1.c0, rt1.c1;
SELECT ALL rt1.c3, rt1.c5, rt1.c2, vt64.lid, rt1.c6, vt64.c0, rt1.c4, rt1.c0, rt1.c1 FROM rt1 LEFT OUTER JOIN vt64 ON LOWER(((rt1.c3)&(rt1.c0))) GROUP BY rt1.c3, rt1.c5, rt1.c2, vt64.lid, rt1.c6, vt64.c0, rt1.c4, rt1.c0, rt1.c1 HAVING ((GROUP_CONCAT(vt64.lid)) NOT BETWEEN (TOTAL(1.156200343E9)) AND (((MAX(rt1.c3))>=(COUNT('-2075203550'))))) UNION ALL SELECT rt1.c3, rt1.c5, rt1.c2, vt64.lid, rt1.c6, vt64.c0, rt1.c4, rt1.c0, rt1.c1 FROM rt1 LEFT OUTER JOIN vt64 ON LOWER(((rt1.c3)&(rt1.c0))) GROUP BY rt1.c3, rt1.c5, rt1.c2, vt64.lid, rt1.c6, vt64.c0, rt1.c4, rt1.c0, rt1.c1 HAVING (NOT (((GROUP_CONCAT(vt64.lid)) NOT BETWEEN (TOTAL(1.156200343E9)) AND (((MAX(rt1.c3))>=(COUNT('-2075203550'))))))) UNION ALL SELECT ALL rt1.c3, rt1.c5, rt1.c2, vt64.lid, rt1.c6, vt64.c0, rt1.c4, rt1.c0, rt1.c1 FROM rt1 LEFT OUTER JOIN vt64 ON LOWER(((rt1.c3)&(rt1.c0))) GROUP BY rt1.c3, rt1.c5, rt1.c2, vt64.lid, rt1.c6, vt64.c0, rt1.c4, rt1.c0, rt1.c1 HAVING ((((GROUP_CONCAT(vt64.lid)) NOT BETWEEN (TOTAL(1.156200343E9)) AND (((MAX(rt1.c3))>=(COUNT('-2075203550')))))) ISNULL);
SELECT ALL rt1.c3, rt1.c5, rt1.c2, vt64.lid, rt1.c6, vt64.c0, rt1.c4, rt1.c0, rt1.c1 FROM rt1 LEFT OUTER JOIN vt64 ON LOWER(((rt1.c3)&(rt1.c0))) GROUP BY rt1.c3, rt1.c5, rt1.c2, vt64.lid, rt1.c6, vt64.c0, rt1.c4, rt1.c0, rt1.c1;
SELECT ALL rt1.c1, rt1.c4, rt1.c3 FROM rt1;
SELECT ALL rt1.c1, rt1.c4, rt1.c3 FROM rt1 WHERE (((((((rt1.c3)AND(rt1.c2)))OR(rt1.c2)))IS NOT((rt1.c3 IN (rt1.c2))))) UNION ALL SELECT rt1.c1, rt1.c4, rt1.c3 FROM rt1 WHERE ((NOT (((((((rt1.c3)AND(rt1.c2)))OR(rt1.c2)))IS NOT((rt1.c3 IN (rt1.c2))))))) UNION ALL SELECT rt1.c1, rt1.c4, rt1.c3 FROM rt1 WHERE (((((((((rt1.c3)AND(rt1.c2)))OR(rt1.c2)))IS NOT((rt1.c3 IN (rt1.c2))))) ISNULL));
SELECT ALL rt1.c1, rt1.c4, rt1.c3 FROM rt1;
SELECT DISTINCT * FROM vt64;
SELECT DISTINCT * FROM vt64 WHERE ((((vt64.c0)+(vt64.c0)) IN ())) UNION SELECT DISTINCT * FROM vt64 WHERE ((NOT ((((vt64.c0)+(vt64.c0)) IN ())))) UNION SELECT DISTINCT * FROM vt64 WHERE ((((((vt64.c0)+(vt64.c0)) IN ())) ISNULL));
SELECT DISTINCT * FROM vt64;
SELECT rt1.c5, rt1.c6, rt1.c4, vt64.lid, rt1.c0 FROM rt1, vt64 GROUP BY rt1.c5, rt1.c6, rt1.c4, vt64.lid, rt1.c0;
SELECT rt1.c5, rt1.c6, rt1.c4, vt64.lid, rt1.c0 FROM rt1, vt64 WHERE (CASE WHEN ((vt64.c0)OR(rt1.c4)) THEN vt64.lid ELSE ABS(rt1.c4) END) GROUP BY rt1.c5, rt1.c6, rt1.c4, vt64.lid, rt1.c0 UNION SELECT ALL rt1.c5, rt1.c6, rt1.c4, vt64.lid, rt1.c0 FROM rt1, vt64 WHERE ((NOT (CASE WHEN ((vt64.c0)OR(rt1.c4)) THEN vt64.lid ELSE ABS(rt1.c4) END))) GROUP BY rt1.c5, rt1.c6, rt1.c4, vt64.lid, rt1.c0 UNION SELECT ALL rt1.c5, rt1.c6, rt1.c4, vt64.lid, rt1.c0 FROM rt1, vt64 WHERE (((CASE WHEN ((vt64.c0)OR(rt1.c4)) THEN vt64.lid ELSE ABS(rt1.c4) END) ISNULL)) GROUP BY rt1.c5, rt1.c6, rt1.c4, vt64.lid, rt1.c0;
SELECT rt1.c5, rt1.c6, rt1.c4, vt64.lid, rt1.c0 FROM rt1, vt64 GROUP BY rt1.c5, rt1.c6, rt1.c4, vt64.lid, rt1.c0;
SELECT rt1.c5, rt1.c1, rt1.c6, rt1.c3, rt1.c2, vt64.lid, vt64.c0 FROM rt1, vt64 GROUP BY rt1.c5, rt1.c1, rt1.c6, rt1.c3, rt1.c2, vt64.lid, vt64.c0;
SELECT rt1.c5, rt1.c1, rt1.c6, rt1.c3, rt1.c2, vt64.lid, vt64.c0 FROM rt1, vt64 GROUP BY rt1.c5, rt1.c1, rt1.c6, rt1.c3, rt1.c2, vt64.lid, vt64.c0 HAVING ((COUNT(*))=(((COUNT(*)) NOT BETWEEN (rt1.c6) AND (COUNT(*))))) UNION ALL SELECT rt1.c5, rt1.c1, rt1.c6, rt1.c3, rt1.c2, vt64.lid, vt64.c0 FROM rt1, vt64 GROUP BY rt1.c5, rt1.c1, rt1.c6, rt1.c3, rt1.c2, vt64.lid, vt64.c0 HAVING (NOT (((COUNT(*))==(((COUNT(*)) NOT BETWEEN (rt1.c6) AND (COUNT(*))))))) UNION ALL SELECT ALL rt1.c5, rt1.c1, rt1.c6, rt1.c3, rt1.c2, vt64.lid, vt64.c0 FROM rt1, vt64 GROUP BY rt1.c5, rt1.c1, rt1.c6, rt1.c3, rt1.c2, vt64.lid, vt64.c0 HAVING ((((COUNT(*))=(((COUNT(*)) NOT BETWEEN (rt1.c6) AND (COUNT(*)))))) ISNULL);
SELECT rt1.c5, rt1.c1, rt1.c6, rt1.c3, rt1.c2, vt64.lid, vt64.c0 FROM rt1, vt64 GROUP BY rt1.c5, rt1.c1, rt1.c6, rt1.c3, rt1.c2, vt64.lid, vt64.c0;
SELECT rt1.c5, rt1.c1, rt1.c6, rt1.c3, rt1.c2, vt64.lid, vt64.c0 FROM rt1, vt64 GROUP BY rt1.c5, rt1.c1, rt1.c6, rt1.c3, rt1.c2, vt64.lid, vt64.c0 HAVING ((COUNT(*))=(((COUNT(*)) NOT BETWEEN (rt1.c6) AND (COUNT(*))))) UNION ALL SELECT rt1.c5, rt1.c1, rt1.c6, rt1.c3, rt1.c2, vt64.lid, vt64.c0 FROM rt1, vt64 GROUP BY rt1.c5, rt1.c1, rt1.c6, rt1.c3, rt1.c2, vt64.lid, vt64.c0 HAVING (NOT (((COUNT(*))==(((COUNT(*)) NOT BETWEEN (rt1.c6) AND (COUNT(*))))))) UNION ALL SELECT ALL rt1.c5, rt1.c1, rt1.c6, rt1.c3, rt1.c2, vt64.lid, vt64.c0 FROM rt1, vt64 GROUP BY rt1.c5, rt1.c1, rt1.c6, rt1.c3, rt1.c2, vt64.lid, vt64.c0 HAVING ((((COUNT(*))=(((COUNT(*)) NOT BETWEEN (rt1.c6) AND (COUNT(*)))))) ISNULL);
SELECT rt1.c5, rt1.c1, rt1.c6, rt1.c3, rt1.c2, vt64.lid, vt64.c0 FROM rt1, vt64 GROUP BY rt1.c5, rt1.c1, rt1.c6, rt1.c3, rt1.c2, vt64.lid, vt64.c0;
SELECT * FROM rt1 NATURAL JOIN vt64;
SELECT * FROM rt1 NATURAL JOIN vt64 WHERE (CAST(rt1.c3 COLLATE RTRIM AS BLOB)) UNION ALL SELECT ALL * FROM rt1 NATURAL JOIN vt64 WHERE ((NOT (CAST(rt1.c3 COLLATE RTRIM AS BLOB)))) UNION ALL SELECT ALL * FROM rt1 NATURAL JOIN vt64 WHERE (((CAST(rt1.c3 COLLATE RTRIM AS BLOB)) ISNULL));
SELECT * FROM rt1 NATURAL JOIN vt64;
SELECT DISTINCT vt64.c0, vt64.lid FROM vt64;
SELECT DISTINCT vt64.c0, vt64.lid FROM vt64 WHERE (((((vt64.c0) IS FALSE))>=(((vt64.lid)IS(x''))))) UNION SELECT DISTINCT vt64.c0, vt64.lid FROM vt64 WHERE ((NOT (((((vt64.c0) IS FALSE))>=(((vt64.lid)IS(x''))))))) UNION SELECT DISTINCT vt64.c0, vt64.lid FROM vt64 WHERE (((((((vt64.c0) IS FALSE))>=(((vt64.lid)IS(x''))))) ISNULL));
SELECT DISTINCT vt64.c0, vt64.lid FROM vt64;
SELECT ALL rt1.c0, rt1.c3, rt1.c2, vt64.c0, rt1.c4, vt64.lid, rt1.c5, rt1.c6 FROM vt64, rt1 GROUP BY rt1.c0, rt1.c3, rt1.c2, vt64.c0, rt1.c4, vt64.lid, rt1.c5, rt1.c6;
SELECT ALL rt1.c0, rt1.c3, rt1.c2, vt64.c0, rt1.c4, vt64.lid, rt1.c5, rt1.c6 FROM vt64, rt1 WHERE ((~ ((('!')OR(rt1.c2))))) GROUP BY rt1.c0, rt1.c3, rt1.c2, vt64.c0, rt1.c4, vt64.lid, rt1.c5, rt1.c6 UNION SELECT rt1.c0, rt1.c3, rt1.c2, vt64.c0, rt1.c4, vt64.lid, rt1.c5, rt1.c6 FROM vt64, rt1 WHERE ((NOT ((~ ((('!')OR(rt1.c2))))))) GROUP BY rt1.c0, rt1.c3, rt1.c2, vt64.c0, rt1.c4, vt64.lid, rt1.c5, rt1.c6 UNION SELECT rt1.c0, rt1.c3, rt1.c2, vt64.c0, rt1.c4, vt64.lid, rt1.c5, rt1.c6 FROM vt64, rt1 WHERE ((((~ ((('!')OR(rt1.c2))))) ISNULL)) GROUP BY rt1.c0, rt1.c3, rt1.c2, vt64.c0, rt1.c4, vt64.lid, rt1.c5, rt1.c6;
SELECT ALL rt1.c0, rt1.c3, rt1.c2, vt64.c0, rt1.c4, vt64.lid, rt1.c5, rt1.c6 FROM vt64, rt1 GROUP BY rt1.c0, rt1.c3, rt1.c2, vt64.c0, rt1.c4, vt64.lid, rt1.c5, rt1.c6;
SELECT vt64.c0 FROM vt64 GROUP BY vt64.c0;
SELECT vt64.c0 FROM vt64 GROUP BY vt64.c0 HAVING vt64.c0 UNION ALL SELECT vt64.c0 FROM vt64 GROUP BY vt64.c0 HAVING (NOT (vt64.c0)) UNION ALL SELECT ALL vt64.c0 FROM vt64 GROUP BY vt64.c0 HAVING ((vt64.c0) ISNULL);
SELECT vt64.c0 FROM vt64 GROUP BY vt64.c0;
SELECT vt64.c0 FROM vt64 GROUP BY vt64.c0 HAVING vt64.c0 UNION ALL SELECT vt64.c0 FROM vt64 GROUP BY vt64.c0 HAVING (NOT (vt64.c0)) UNION ALL SELECT ALL vt64.c0 FROM vt64 GROUP BY vt64.c0 HAVING ((vt64.c0) ISNULL);
SELECT vt64.c0 FROM vt64 GROUP BY vt64.c0;
SELECT vt64.c0, rt1.c3, rt1.c0, rt1.c4, rt1.c1, rt1.c5, vt64.lid, rt1.c2 FROM vt64, rt1;
SELECT vt64.c0, rt1.c3, rt1.c0, rt1.c4, rt1.c1, rt1.c5, vt64.lid, rt1.c2 FROM vt64, rt1 WHERE ('[]') UNION ALL SELECT vt64.c0, rt1.c3, rt1.c0, rt1.c4, rt1.c1, rt1.c5, vt64.lid, rt1.c2 FROM vt64, rt1 WHERE ((NOT ('[]'))) UNION ALL SELECT vt64.c0, rt1.c3, rt1.c0, rt1.c4, rt1.c1, rt1.c5, vt64.lid, rt1.c2 FROM vt64, rt1 WHERE ((('[]') ISNULL));
SELECT vt64.c0, rt1.c3, rt1.c0, rt1.c4, rt1.c1, rt1.c5, vt64.lid, rt1.c2 FROM vt64, rt1;
SELECT DISTINCT * FROM vt64;
SELECT DISTINCT * FROM vt64 WHERE (IFNULL(DISTINCT '727443424', ((((vt64.lid)OR(vt64.c0)))AND(vt64.c0)))) UNION SELECT DISTINCT * FROM vt64 WHERE ((NOT (IFNULL(DISTINCT '727443424', ((((vt64.lid)OR(vt64.c0)))AND(vt64.c0)))))) UNION SELECT DISTINCT * FROM vt64 WHERE (((IFNULL(DISTINCT '727443424', ((((vt64.lid)OR(vt64.c0)))AND(vt64.c0)))) ISNULL));
SELECT DISTINCT * FROM vt64;
SELECT rt1.c0, rt1.c5, rt1.c4, rt1.c2, rt1.c6, rt1.c1, vt64.c0 FROM rt1, vt64 GROUP BY rt1.c0, rt1.c5, rt1.c4, rt1.c2, rt1.c6, rt1.c1, vt64.c0;
SELECT ALL rt1.c0, rt1.c5, rt1.c4, rt1.c2, rt1.c6, rt1.c1, vt64.c0 FROM rt1, vt64 WHERE ((((((rt1.c4))>((rt1.c0))))!=(rt1.c1 COLLATE NOCASE))) GROUP BY rt1.c0, rt1.c5, rt1.c4, rt1.c2, rt1.c6, rt1.c1, vt64.c0 UNION SELECT ALL rt1.c0, rt1.c5, rt1.c4, rt1.c2, rt1.c6, rt1.c1, vt64.c0 FROM rt1, vt64 WHERE ((NOT ((((((rt1.c4))>((rt1.c0))))<>(rt1.c1 COLLATE NOCASE))))) GROUP BY rt1.c0, rt1.c5, rt1.c4, rt1.c2, rt1.c6, rt1.c1, vt64.c0 UNION SELECT rt1.c0, rt1.c5, rt1.c4, rt1.c2, rt1.c6, rt1.c1, vt64.c0 FROM rt1, vt64 WHERE ((((((((rt1.c4))>((rt1.c0))))<>(rt1.c1 COLLATE NOCASE))) ISNULL)) GROUP BY rt1.c0, rt1.c5, rt1.c4, rt1.c2, rt1.c6, rt1.c1, vt64.c0;
SELECT rt1.c0, rt1.c5, rt1.c4, rt1.c2, rt1.c6, rt1.c1, vt64.c0 FROM rt1, vt64 GROUP BY rt1.c0, rt1.c5, rt1.c4, rt1.c2, rt1.c6, rt1.c1, vt64.c0;
SELECT vt64.lid, vt64.c0 FROM vt64 GROUP BY vt64.lid, vt64.c0;
SELECT ALL vt64.lid, vt64.c0 FROM vt64 GROUP BY vt64.lid, vt64.c0 HAVING TOTAL(COUNT(vt64.c0)) UNION ALL SELECT vt64.lid, vt64.c0 FROM vt64 GROUP BY vt64.lid, vt64.c0 HAVING (NOT (TOTAL(COUNT(vt64.c0)))) UNION ALL SELECT vt64.lid, vt64.c0 FROM vt64 GROUP BY vt64.lid, vt64.c0 HAVING ((TOTAL(COUNT(vt64.c0))) ISNULL);
SELECT * FROM vt64, rt1;
SELECT * FROM vt64, rt1 WHERE ((((((rt1.c2)>=(rt1.c4))))>(('-94377269')))) UNION ALL SELECT * FROM vt64, rt1 WHERE ((NOT ((((((rt1.c2)>=(rt1.c4))))>(('-94377269')))))) UNION ALL SELECT * FROM vt64, rt1 WHERE ((((((((rt1.c2)>=(rt1.c4))))>(('-94377269')))) ISNULL));
SELECT * FROM vt64, rt1;
SELECT DISTINCT rt1.c2, rt1.c0 FROM rt1 CROSS JOIN vt64 ON CASE CASE WHEN 0.7760220204755447 THEN rt1.c3 ELSE rt1.c3 END  WHEN rt1.c5 THEN ((rt1.c0) NOTNULL) WHEN vt64.lid COLLATE RTRIM THEN CASE rt1.c6  WHEN rt1.c5 THEN rt1.c0 ELSE rt1.c0 END WHEN ((rt1.c6) BETWEEN (rt1.c4) AND (vt64.c0)) THEN ((((rt1.c5)OR('')))OR(rt1.c2)) END;
SELECT DISTINCT rt1.c2, rt1.c0 FROM rt1 CROSS JOIN vt64 ON CASE CASE WHEN 0.7760220204755447 THEN rt1.c3 ELSE rt1.c3 END  WHEN rt1.c5 THEN ((rt1.c0) NOTNULL) WHEN vt64.lid COLLATE RTRIM THEN CASE rt1.c6  WHEN rt1.c5 THEN rt1.c0 ELSE rt1.c0 END WHEN ((rt1.c6) BETWEEN (rt1.c4) AND (vt64.c0)) THEN ((((rt1.c5)OR('')))OR(rt1.c2)) END WHERE (((COALESCE(DISTINCT rt1.c5, rt1.c6, rt1.c4, rt1.c2, rt1.c3, rt1.c2))OR((+ (rt1.c0))))) UNION SELECT DISTINCT rt1.c2, rt1.c0 FROM rt1 CROSS JOIN vt64 ON CASE CASE WHEN 0.7760220204755447 THEN rt1.c3 ELSE rt1.c3 END  WHEN rt1.c5 THEN ((rt1.c0) NOTNULL) WHEN vt64.lid COLLATE RTRIM THEN CASE rt1.c6  WHEN rt1.c5 THEN rt1.c0 ELSE rt1.c0 END WHEN ((rt1.c6) BETWEEN (rt1.c4) AND (vt64.c0)) THEN ((((rt1.c5)OR('')))OR(rt1.c2)) END WHERE ((NOT (((COALESCE(DISTINCT rt1.c5, rt1.c6, rt1.c4, rt1.c2, rt1.c3, rt1.c2))OR((+ (rt1.c0))))))) UNION SELECT DISTINCT rt1.c2, rt1.c0 FROM rt1 CROSS JOIN vt64 ON CASE CASE WHEN 0.7760220204755447 THEN rt1.c3 ELSE rt1.c3 END  WHEN rt1.c5 THEN ((rt1.c0) NOTNULL) WHEN vt64.lid COLLATE RTRIM THEN CASE rt1.c6  WHEN rt1.c5 THEN rt1.c0 ELSE rt1.c0 END WHEN ((rt1.c6) BETWEEN (rt1.c4) AND (vt64.c0)) THEN ((((rt1.c5)OR('')))OR(rt1.c2)) END WHERE (((((COALESCE(DISTINCT rt1.c5, rt1.c6, rt1.c4, rt1.c2, rt1.c3, rt1.c2))OR((+ (rt1.c0))))) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c0 FROM rt1 CROSS JOIN vt64 ON CASE CASE WHEN 0.7760220204755447 THEN rt1.c3 ELSE rt1.c3 END  WHEN rt1.c5 THEN ((rt1.c0) NOTNULL) WHEN vt64.lid COLLATE RTRIM THEN CASE rt1.c6  WHEN rt1.c5 THEN rt1.c0 ELSE rt1.c0 END WHEN ((rt1.c6) BETWEEN (rt1.c4) AND (vt64.c0)) THEN ((((rt1.c5)OR('')))OR(rt1.c2)) END;
SELECT vt64.lid, vt64.c0 FROM vt64 GROUP BY vt64.lid, vt64.c0;
SELECT ALL vt64.lid, vt64.c0 FROM vt64 WHERE ((((vt64.lid)<(vt64.lid)) IN (CAST(vt64.c0 AS NUMERIC)))) GROUP BY vt64.lid, vt64.c0 UNION SELECT vt64.lid, vt64.c0 FROM vt64 WHERE ((NOT ((((vt64.lid)<(vt64.lid)) IN (CAST(vt64.c0 AS NUMERIC)))))) GROUP BY vt64.lid, vt64.c0 UNION SELECT vt64.lid, vt64.c0 FROM vt64 WHERE ((((((vt64.lid)<(vt64.lid)) IN (CAST(vt64.c0 AS NUMERIC)))) ISNULL)) GROUP BY vt64.lid, vt64.c0;
SELECT vt64.lid, vt64.c0 FROM vt64 GROUP BY vt64.lid, vt64.c0;
SELECT rt1.c6, rt1.c1, rt1.c3, rt1.c4, rt1.c0, rt1.c2, rt1.c5 FROM rt1 GROUP BY rt1.c6, rt1.c1, rt1.c3, rt1.c4, rt1.c0, rt1.c2, rt1.c5;
SELECT rt1.c6, rt1.c1, rt1.c3, rt1.c4, rt1.c0, rt1.c2, rt1.c5 FROM rt1 GROUP BY rt1.c6, rt1.c1, rt1.c3, rt1.c4, rt1.c0, rt1.c2, rt1.c5 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c6, rt1.c1, rt1.c3, rt1.c4, rt1.c0, rt1.c2, rt1.c5 FROM rt1 GROUP BY rt1.c6, rt1.c1, rt1.c3, rt1.c4, rt1.c0, rt1.c2, rt1.c5 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c6, rt1.c1, rt1.c3, rt1.c4, rt1.c0, rt1.c2, rt1.c5 FROM rt1 GROUP BY rt1.c6, rt1.c1, rt1.c3, rt1.c4, rt1.c0, rt1.c2, rt1.c5 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c6, rt1.c1, rt1.c3, rt1.c4, rt1.c0, rt1.c2, rt1.c5 FROM rt1 GROUP BY rt1.c6, rt1.c1, rt1.c3, rt1.c4, rt1.c0, rt1.c2, rt1.c5;
SELECT rt1.c6, rt1.c1, rt1.c3, rt1.c4, rt1.c0, rt1.c2, rt1.c5 FROM rt1 GROUP BY rt1.c6, rt1.c1, rt1.c3, rt1.c4, rt1.c0, rt1.c2, rt1.c5 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c6, rt1.c1, rt1.c3, rt1.c4, rt1.c0, rt1.c2, rt1.c5 FROM rt1 GROUP BY rt1.c6, rt1.c1, rt1.c3, rt1.c4, rt1.c0, rt1.c2, rt1.c5 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c6, rt1.c1, rt1.c3, rt1.c4, rt1.c0, rt1.c2, rt1.c5 FROM rt1 GROUP BY rt1.c6, rt1.c1, rt1.c3, rt1.c4, rt1.c0, rt1.c2, rt1.c5 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c6, rt1.c1, rt1.c3, rt1.c4, rt1.c0, rt1.c2, rt1.c5 FROM rt1 GROUP BY rt1.c6, rt1.c1, rt1.c3, rt1.c4, rt1.c0, rt1.c2, rt1.c5;
SELECT ALL rt1.c2, rt1.c3, vt64.c0, rt1.c4, rt1.c5 FROM rt1, vt64;
SELECT rt1.c2, rt1.c3, vt64.c0, rt1.c4, rt1.c5 FROM rt1, vt64 WHERE (0.39252211105986634) UNION ALL SELECT rt1.c2, rt1.c3, vt64.c0, rt1.c4, rt1.c5 FROM rt1, vt64 WHERE ((NOT (0.39252211105986634))) UNION ALL SELECT rt1.c2, rt1.c3, vt64.c0, rt1.c4, rt1.c5 FROM rt1, vt64 NOT INDEXED WHERE (((0.39252211105986634) ISNULL));
SELECT ALL rt1.c2, rt1.c3, vt64.c0, rt1.c4, rt1.c5 FROM rt1, vt64;
SELECT DISTINCT rt1.c3, rt1.c0, rt1.c4, rt1.c6 FROM rt1;
SELECT DISTINCT rt1.c3, rt1.c0, rt1.c4, rt1.c6 FROM rt1 WHERE ((((rt1.c1))>=((((((rt1.c5)AND(rt1.c2)))AND(rt1.c2)))))) UNION SELECT DISTINCT rt1.c3, rt1.c0, rt1.c4, rt1.c6 FROM rt1 WHERE ((NOT ((((rt1.c1))>=((((((rt1.c5)AND(rt1.c2)))AND(rt1.c2)))))))) UNION SELECT DISTINCT rt1.c3, rt1.c0, rt1.c4, rt1.c6 FROM rt1 WHERE ((((((rt1.c1))>=((((((rt1.c5)AND(rt1.c2)))AND(rt1.c2)))))) ISNULL));
SELECT DISTINCT rt1.c3, rt1.c0, rt1.c4, rt1.c6 FROM rt1;
SELECT vt64.c0, rt1.c6, rt1.c1, vt64.lid, rt1.c5 FROM rt1 LEFT OUTER JOIN vt64 ON vt64.lid GROUP BY vt64.c0, rt1.c6, rt1.c1, vt64.lid, rt1.c5;
SELECT ALL vt64.c0, rt1.c6, rt1.c1, vt64.lid, rt1.c5 FROM rt1 LEFT OUTER JOIN vt64 ON vt64.lid WHERE (ABS(DISTINCT ((vt64.lid) BETWEEN (rt1.c3) AND (rt1.c1)))) GROUP BY vt64.c0, rt1.c6, rt1.c1, vt64.lid, rt1.c5 UNION SELECT ALL vt64.c0, rt1.c6, rt1.c1, vt64.lid, rt1.c5 FROM rt1 LEFT OUTER JOIN vt64 ON vt64.lid WHERE ((NOT (ABS(DISTINCT ((vt64.lid) BETWEEN (rt1.c3) AND (rt1.c1)))))) GROUP BY vt64.c0, rt1.c6, rt1.c1, vt64.lid, rt1.c5 UNION SELECT vt64.c0, rt1.c6, rt1.c1, vt64.lid, rt1.c5 FROM rt1 LEFT OUTER JOIN vt64 ON vt64.lid WHERE (((ABS(DISTINCT ((vt64.lid) BETWEEN (rt1.c3) AND (rt1.c1)))) ISNULL)) GROUP BY vt64.c0, rt1.c6, rt1.c1, vt64.lid, rt1.c5;
SELECT vt64.c0, rt1.c6, rt1.c1, vt64.lid, rt1.c5 FROM rt1 LEFT OUTER JOIN vt64 ON vt64.lid GROUP BY vt64.c0, rt1.c6, rt1.c1, vt64.lid, rt1.c5;
SELECT rt1.c5, rt1.c1, rt1.c0, vt64.lid, rt1.c6, rt1.c4, rt1.c2, rt1.c3 FROM vt64, rt1 GROUP BY rt1.c5, rt1.c1, rt1.c0, vt64.lid, rt1.c6, rt1.c4, rt1.c2, rt1.c3;
SELECT ALL rt1.c5, rt1.c1, rt1.c0, vt64.lid, rt1.c6, rt1.c4, rt1.c2, rt1.c3 FROM vt64, rt1 GROUP BY rt1.c5, rt1.c1, rt1.c0, vt64.lid, rt1.c6, rt1.c4, rt1.c2, rt1.c3 HAVING TYPEOF(DISTINCT COUNT(*)) UNION ALL SELECT ALL rt1.c5, rt1.c1, rt1.c0, vt64.lid, rt1.c6, rt1.c4, rt1.c2, rt1.c3 FROM vt64, rt1 GROUP BY rt1.c5, rt1.c1, rt1.c0, vt64.lid, rt1.c6, rt1.c4, rt1.c2, rt1.c3 HAVING (NOT (TYPEOF(DISTINCT COUNT(*)))) UNION ALL SELECT rt1.c5, rt1.c1, rt1.c0, vt64.lid, rt1.c6, rt1.c4, rt1.c2, rt1.c3 FROM vt64, rt1 GROUP BY rt1.c5, rt1.c1, rt1.c0, vt64.lid, rt1.c6, rt1.c4, rt1.c2, rt1.c3 HAVING ((TYPEOF(DISTINCT COUNT(*))) ISNULL);
SELECT rt1.c5, rt1.c1, rt1.c0, vt64.lid, rt1.c6, rt1.c4, rt1.c2, rt1.c3 FROM vt64, rt1 GROUP BY rt1.c5, rt1.c1, rt1.c0, vt64.lid, rt1.c6, rt1.c4, rt1.c2, rt1.c3;
SELECT ALL rt1.c5, rt1.c1, rt1.c0, vt64.lid, rt1.c6, rt1.c4, rt1.c2, rt1.c3 FROM vt64, rt1 GROUP BY rt1.c5, rt1.c1, rt1.c0, vt64.lid, rt1.c6, rt1.c4, rt1.c2, rt1.c3 HAVING TYPEOF(DISTINCT COUNT(*)) UNION ALL SELECT ALL rt1.c5, rt1.c1, rt1.c0, vt64.lid, rt1.c6, rt1.c4, rt1.c2, rt1.c3 FROM vt64, rt1 GROUP BY rt1.c5, rt1.c1, rt1.c0, vt64.lid, rt1.c6, rt1.c4, rt1.c2, rt1.c3 HAVING (NOT (TYPEOF(DISTINCT COUNT(*)))) UNION ALL SELECT rt1.c5, rt1.c1, rt1.c0, vt64.lid, rt1.c6, rt1.c4, rt1.c2, rt1.c3 FROM vt64, rt1 GROUP BY rt1.c5, rt1.c1, rt1.c0, vt64.lid, rt1.c6, rt1.c4, rt1.c2, rt1.c3 HAVING ((TYPEOF(DISTINCT COUNT(*))) ISNULL);
SELECT rt1.c5, rt1.c1, rt1.c0, vt64.lid, rt1.c6, rt1.c4, rt1.c2, rt1.c3 FROM vt64, rt1 GROUP BY rt1.c5, rt1.c1, rt1.c0, vt64.lid, rt1.c6, rt1.c4, rt1.c2, rt1.c3;
SELECT ALL * FROM rt1;
SELECT * FROM rt1 WHERE (((rt1.c2)>>(((rt1.c6)AND(rt1.c1))))) UNION ALL SELECT * FROM rt1 WHERE ((NOT (((rt1.c2)>>(((rt1.c6)AND(rt1.c1))))))) UNION ALL SELECT ALL * FROM rt1 WHERE (((((rt1.c2)>>(((rt1.c6)AND(rt1.c1))))) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT * FROM vt64, rt1;
SELECT DISTINCT * FROM vt64, rt1 WHERE (CAST(rt1.c3 AS BLOB)) UNION SELECT DISTINCT * FROM vt64, rt1 WHERE ((NOT (CAST(rt1.c3 AS BLOB)))) UNION SELECT DISTINCT * FROM vt64, rt1 WHERE (((CAST(rt1.c3 AS BLOB)) ISNULL));
SELECT DISTINCT * FROM vt64, rt1;
SELECT ALL rt1.c3, rt1.c6, rt1.c2, rt1.c5, rt1.c0 FROM rt1 GROUP BY rt1.c3, rt1.c6, rt1.c2, rt1.c5, rt1.c0;
SELECT ALL rt1.c3, rt1.c6, rt1.c2, rt1.c5, rt1.c0 FROM rt1 WHERE ((~ (COALESCE(rt1.c4, rt1.c0)))) GROUP BY rt1.c3, rt1.c6, rt1.c2, rt1.c5, rt1.c0 UNION SELECT ALL rt1.c3, rt1.c6, rt1.c2, rt1.c5, rt1.c0 FROM rt1 WHERE ((NOT ((~ (COALESCE(rt1.c4, rt1.c0)))))) GROUP BY rt1.c3, rt1.c6, rt1.c2, rt1.c5, rt1.c0 UNION SELECT ALL rt1.c3, rt1.c6, rt1.c2, rt1.c5, rt1.c0 FROM rt1 WHERE ((((~ (COALESCE(rt1.c4, rt1.c0)))) ISNULL)) GROUP BY rt1.c3, rt1.c6, rt1.c2, rt1.c5, rt1.c0;
SELECT ALL rt1.c3, rt1.c6, rt1.c2, rt1.c5, rt1.c0 FROM rt1 GROUP BY rt1.c3, rt1.c6, rt1.c2, rt1.c5, rt1.c0;
SELECT ALL rt1.c6, rt1.c1, rt1.c5 FROM rt1 GROUP BY rt1.c6, rt1.c1, rt1.c5;
SELECT rt1.c6, rt1.c1, rt1.c5 FROM rt1 GROUP BY rt1.c6, rt1.c1, rt1.c5 HAVING (COUNT(0.18519025886280382) IN (COUNT(*))) UNION ALL SELECT rt1.c6, rt1.c1, rt1.c5 FROM rt1 GROUP BY rt1.c6, rt1.c1, rt1.c5 HAVING (NOT ((COUNT(0.18519025886280382) IN (COUNT(*))))) UNION ALL SELECT ALL rt1.c6, rt1.c1, rt1.c5 FROM rt1 GROUP BY rt1.c6, rt1.c1, rt1.c5 HAVING (((COUNT(0.18519025886280382) IN (COUNT(*)))) ISNULL);
SELECT ALL rt1.c6, rt1.c1, rt1.c5 FROM rt1 GROUP BY rt1.c6, rt1.c1, rt1.c5;
SELECT rt1.c6, rt1.c1, rt1.c5 FROM rt1 GROUP BY rt1.c6, rt1.c1, rt1.c5 HAVING (COUNT(0.18519025886280382) IN (COUNT(*))) UNION ALL SELECT rt1.c6, rt1.c1, rt1.c5 FROM rt1 GROUP BY rt1.c6, rt1.c1, rt1.c5 HAVING (NOT ((COUNT(0.18519025886280382) IN (COUNT(*))))) UNION ALL SELECT ALL rt1.c6, rt1.c1, rt1.c5 FROM rt1 GROUP BY rt1.c6, rt1.c1, rt1.c5 HAVING (((COUNT(0.18519025886280382) IN (COUNT(*)))) ISNULL);
SELECT ALL rt1.c6, rt1.c1, rt1.c5 FROM rt1 GROUP BY rt1.c6, rt1.c1, rt1.c5;
SELECT ALL rt1.c5, rt1.c0, rt1.c6, vt64.c0 FROM vt64, rt1;
SELECT rt1.c5, rt1.c0, rt1.c6, vt64.c0 FROM vt64, rt1 WHERE (((rt1.c2) NOT NULL)) UNION ALL SELECT ALL rt1.c5, rt1.c0, rt1.c6, vt64.c0 FROM vt64, rt1 WHERE ((NOT (((rt1.c2) NOT NULL)))) UNION ALL SELECT rt1.c5, rt1.c0, rt1.c6, vt64.c0 FROM vt64, rt1 WHERE (((((rt1.c2) NOT NULL)) ISNULL));
SELECT ALL rt1.c5, rt1.c0, rt1.c6, vt64.c0 FROM vt64, rt1;
SELECT DISTINCT rt1.c4, rt1.c5, rt1.c0, vt64.lid, rt1.c6, vt64.c0 FROM rt1, vt64;
SELECT DISTINCT rt1.c4, rt1.c5, rt1.c0, vt64.lid, rt1.c6, vt64.c0 FROM rt1, vt64 WHERE (((((((rt1.c5)OR(rt1.c4)))OR(vt64.lid))) BETWEEN ((+ (rt1.c2))) AND (((rt1.c4)<(rt1.c5))))) UNION SELECT DISTINCT rt1.c4, rt1.c5, rt1.c0, vt64.lid, rt1.c6, vt64.c0 FROM rt1, vt64 WHERE ((NOT (((((((rt1.c5)OR(rt1.c4)))OR(vt64.lid))) BETWEEN ((+ (rt1.c2))) AND (((rt1.c4)<(rt1.c5))))))) UNION SELECT DISTINCT rt1.c4, rt1.c5, rt1.c0, vt64.lid, rt1.c6, vt64.c0 FROM rt1, vt64 WHERE (((((((((rt1.c5)OR(rt1.c4)))OR(vt64.lid))) BETWEEN ((+ (rt1.c2))) AND (((rt1.c4)<(rt1.c5))))) ISNULL));
SELECT DISTINCT rt1.c4, rt1.c5, rt1.c0, vt64.lid, rt1.c6, vt64.c0 FROM rt1, vt64;
