-- Time: 2024/06/10 13:41:05
-- Database: database46
-- Database version: 3.40.0
-- seed value: 3386166046
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-8'; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2); -- 1ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0, c1 UNINDEXED, detail=full, tokenize = "unicode61 remove_diacritics 0"); -- 1ms;
COMMIT TRANSACTION; -- 1ms;
PRAGMA cache_spill = -3892342104163110112; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
ANALYZE; -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
ANALYZE main; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1203916520); -- 0ms;
PRAGMA defer_foreign_keys; -- 0ms;
UPDATE rt0 SET c0='k\2SꢿJ,', c1='1876597876'; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
UPDATE OR IGNORE vt0 SET c1=0.20642015351457887; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR ROLLBACK rt0 SET (c1)=('2j/# Ln'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE vt0 SET c1=NULL WHERE vt0.c1; -- 0ms;
PRAGMA ignore_check_constraints = true; -- 1ms;
PRAGMA reverse_unordered_selects; -- 0ms;
UPDATE vt0 SET c0=x'', c0='1605189527' WHERE (((vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((CAST(x'f56d' AS BLOB), '564504767', ((vt0.c1)=('')))) AND ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)), TYPEOF(vt0.c0), vt0.c0 COLLATE NOCASE))); -- 0ms;
UPDATE OR IGNORE rt0 SET (c0, c0)=(NULL, '\'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 15); -- 0ms;
PRAGMA temp.journal_mode; -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (NULL); -- 0ms;
UPDATE OR ABORT rt0 SET c2=x'4d69'; -- 1ms;
INSERT OR FAIL INTO vt0(c1) VALUES (NULL); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE; -- 7ms;
INSERT OR FAIL INTO rt0 VALUES ('\', '6He', '1605189527'), (x'', NULL, 1876597876), ('1876597876', 0.47579081824098257, NULL); -- 0ms;
INSERT OR ABORT INTO rt0(c0, c1) VALUES (1676028479, '0.20642015351457887'); -- 1ms;
UPDATE OR IGNORE rt0 SET (c2)=(0.8709941938258762) WHERE ((x'') NOT BETWEEN (((rt0.c0) NOT NULL)) AND (CAST(rt0.c0 AS TEXT))); -- 0ms;
ANALYZE; -- 0ms;
UPDATE vt0 SET (c1)=(0.055579721092639645) WHERE (+ ((NOT (vt0.c0)))); -- 0ms;
PRAGMA defer_foreign_keys; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR FAIL vt0 SET c0=NULL; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=7'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
ANALYZE vt0; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1864161085);\n; -- 0ms;
PRAGMA temp.optimize; -- 0ms;
DELETE FROM rt0 WHERE (- (rt0.c1)); -- 0ms;
PRAGMA wal_checkpoint(PASSIVE); -- 0ms;
PRAGMA main.cache_spill; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '45057'); -- 0ms;
ANALYZE main; -- 0ms;
PRAGMA threads = -1385379023820213170; -- 0ms;
INSERT OR IGNORE INTO vt0(c0, c1) VALUES (0.8908540365472049, 'i鮺'''); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=x'790b', c1=NULL WHERE ((vt0.c1) ISNULL); -- 0ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO rt0(c2) VALUES ('-885041628'); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c0) VALUES (x'', NULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c0, c1) VALUES (NULL, 'TV鍺nq4O!', 0X6fda9c74), (x'a9f7', 'B鉛', 0.4187551431202968), (NULL, '1069746690', '-80156512'), (NULL, 0.24806425849487224, 2057833201), ('', '1876597876', 0.6865920877857028), ('', 0.05721366126618421, NULL), (NULL, NULL, '\no{fF'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x''); -- 0ms;
UPDATE rt0 SET c1=NULL, c1=5.29243066E8 WHERE ((((rt0.c0)<(rt0.c1)))LIKE(((rt0.c0)<(rt0.c2)))); -- 0ms;
UPDATE rt0 SET (c2)=(x''); -- 0ms;
INSERT OR FAIL INTO rt0(c1, c2) VALUES (NULL, -538548144); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c0, c1) VALUES (0Xffffffffb664937a, 0.24806425849487224), (x'', 529243066), (x'', x'a07b'), (NULL, x''), (x'', 0.6845570168657736); -- 1ms;
INSERT OR ABORT INTO rt0(c1) VALUES ('-1864161085'); -- 0ms;
PRAGMA short_column_names; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
INSERT OR IGNORE INTO vt0(c0, c1) VALUES ('160868614', NULL); -- 0ms;
INSERT OR IGNORE INTO vt0(c1) VALUES ('0.20642015351457887'), (0.7273366153968599), (0.01838883222026355), (NULL), (0x5fad3f97); -- 0ms;
UPDATE vt0 SET (c0)=(x''); -- 1ms;
ANALYZE; -- 0ms;
PRAGMA journal_size_limit = 0; -- 0ms;
UPDATE OR IGNORE rt0 SET c0=NULL WHERE ((IFNULL(rt0.c1, rt0.c0)) NOT NULL); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1233624514); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1732497087); -- 0ms;
ANALYZE; -- 1ms;
SELECT rtreecheck('rt0'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL), (NULL), (5.64504767E8); -- 0ms;
INSERT OR IGNORE INTO rt0(c0) VALUES (0.4211070266191461), (CAST('i鮺''' AS INTEGER) COLLATE BINARY), ('-1864161085'); -- 1ms;
INSERT OR IGNORE INTO vt0 VALUES ('0.4211070266191461', '1069746690'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '42337'); -- 0ms;
ROLLBACK TRANSACTION; -- 3ms;
COMMIT; -- 1ms;
PRAGMA temp.cache_size = 0; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
ANALYZE rt0; -- 0ms;
PRAGMA temp.locking_mode = NORMAL; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=('桐IhI./)鱴y'); -- 1ms;
UPDATE OR FAIL vt0 SET (c0, c1)=(x'', 'Y4^a6e)/P'); -- 0ms;
PRAGMA secure_delete = true; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL), (NULL), (-137077646); -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=(x'') WHERE HEX(DISTINCT 632127359 COLLATE BINARY); -- 0ms;
UPDATE OR IGNORE rt0 SET c1=x''; -- 0ms;
VACUUM temp; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '4150'); -- 1ms;
INSERT OR FAIL INTO rt0(c1, c0) VALUES (x'', NULL); -- 0ms;
UPDATE rt0 SET c1=0.9606609187404987 WHERE (- (((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))); -- 0ms;
INSERT OR IGNORE INTO vt0(c1) VALUES (NULL); -- 1ms;
PRAGMA temp.ignore_check_constraints; -- 0ms;
INSERT OR FAIL INTO vt0(c1) VALUES (0x1ac61766); -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=(0.6788989137916542) WHERE (((rt0.c1 IN ()))>>((('0.47579081824098257')=(rt0.c2)))); -- 0ms;
PRAGMA secure_delete; -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES ('529243066', 0.5402132565525948, '632127359'); -- 1ms;
VACUUM; -- 4ms;
UPDATE OR IGNORE rt0 SET c2=x'04fc' WHERE (rt0.c0 IN ()) COLLATE RTRIM; -- 1ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON NULLIF(((vt0.c1)IS(rt0.c1)), ((rt0.c2) NOTNULL));
SELECT rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON NULLIF(((vt0.c1)IS(rt0.c1)), ((rt0.c2) NOTNULL)) WHERE (((((rt0.c1) NOT NULL))LIKE(CAST(vt0.c1 AS REAL)))) UNION ALL SELECT rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON NULLIF(((vt0.c1)IS(rt0.c1)), ((rt0.c2) NOTNULL)) WHERE ((NOT (((((rt0.c1) NOT NULL))LIKE(CAST(vt0.c1 AS REAL)))))) UNION ALL SELECT ALL rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON NULLIF(((vt0.c1)IS(rt0.c1)), ((rt0.c2) NOTNULL)) WHERE (((((((rt0.c1) NOT NULL))LIKE(CAST(vt0.c1 AS REAL)))) ISNULL));
SELECT ALL rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON NULLIF(((vt0.c1)IS(rt0.c1)), ((rt0.c2) NOTNULL));
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN rt0 ON MAX((+ (rt0.c0)), vt0.c1, (~ (vt0.c1)), ((rt0.c0)<(rt0.c2)));
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN rt0 ON MAX((+ (rt0.c0)), vt0.c1, (~ (vt0.c1)), ((rt0.c0)<(rt0.c2))) WHERE ((((vt0.c1))<((vt0.c1))) COLLATE BINARY) UNION SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN rt0 ON MAX((+ (rt0.c0)), vt0.c1, (~ (vt0.c1)), ((rt0.c0)<(rt0.c2))) WHERE ((NOT ((((vt0.c1))<((vt0.c1))) COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN rt0 ON MAX((+ (rt0.c0)), vt0.c1, (~ (vt0.c1)), ((rt0.c0)<(rt0.c2))) WHERE ((((((vt0.c1))<((vt0.c1))) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN rt0 ON MAX((+ (rt0.c0)), vt0.c1, (~ (vt0.c1)), ((rt0.c0)<(rt0.c2)));
SELECT ALL vt0.c1, rt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c0, rt0.c2, rt0.c1;
SELECT vt0.c1, rt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 WHERE (CASE ((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt0.c1))  WHEN (((rt0.c1, vt0.c0, vt0.c0))<=((rt0.c2, rt0.c1, rt0.c2))) THEN ((rt0.c2)IS NOT(-552372358)) ELSE ((((((((rt0.c0)AND(vt0.c1)))AND(vt0.c0)))OR(rt0.c1)))AND(rt0.c2)) END) GROUP BY vt0.c1, rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL vt0.c1, rt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 WHERE ((NOT (CASE ((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt0.c1))  WHEN (((rt0.c1, vt0.c0, vt0.c0))<=((rt0.c2, rt0.c1, rt0.c2))) THEN ((rt0.c2)IS NOT(-552372358)) ELSE ((((((((rt0.c0)AND(vt0.c1)))AND(vt0.c0)))OR(rt0.c1)))AND(rt0.c2)) END))) GROUP BY vt0.c1, rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL vt0.c1, rt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 WHERE (((CASE ((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt0.c1))  WHEN (((rt0.c1, vt0.c0, vt0.c0))<=((rt0.c2, rt0.c1, rt0.c2))) THEN ((rt0.c2)IS NOT(-552372358)) ELSE ((((((((rt0.c0)AND(vt0.c1)))AND(vt0.c0)))OR(rt0.c1)))AND(rt0.c2)) END) ISNULL)) GROUP BY vt0.c1, rt0.c0, rt0.c2, rt0.c1;
SELECT ALL vt0.c1, rt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c0, rt0.c2, rt0.c1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MIN(SUM(MAX(vt0.c1))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MIN(SUM(MAX(vt0.c1))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN(SUM(MAX(vt0.c1)))) ISNULL);
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(((vt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c1)) AS NUMERIC);
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(((vt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c1)) AS NUMERIC) WHERE ((((rt0.c1 IN (rt0.c1))) BETWEEN (CASE WHEN vt0.c0 THEN rt0.c1 END) AND ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))))) UNION ALL SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(((vt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c1)) AS NUMERIC) WHERE ((NOT ((((rt0.c1 IN (rt0.c1))) BETWEEN (CASE WHEN vt0.c0 THEN rt0.c1 END) AND ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))))))) UNION ALL SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(((vt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c1)) AS NUMERIC) WHERE ((((((rt0.c1 IN (rt0.c1))) BETWEEN (CASE WHEN vt0.c0 THEN rt0.c1 END) AND ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))))) ISNULL));
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(((vt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c1)) AS NUMERIC);
SELECT DISTINCT rt0.c1, vt0.c0, rt0.c0, rt0.c2, vt0.c1 FROM rt0, vt0;
SELECT DISTINCT rt0.c1, vt0.c0, rt0.c0, rt0.c2, vt0.c1 FROM rt0, vt0 WHERE (CASE 'F/o.qNq'  WHEN x'34c1' THEN ((vt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)) WHEN (rt0.c1 IN ()) THEN ((rt0.c0)||('0.24806425849487224')) WHEN ((((((((vt0.c1)AND(0.5502740330106916)))OR(rt0.c2)))AND(vt0.c0)))AND(x'beb4')) THEN CASE WHEN vt0.c1 THEN rt0.c1 END ELSE ABS(DISTINCT '0.055579721092639645') END) UNION SELECT DISTINCT rt0.c1, vt0.c0, rt0.c0, rt0.c2, vt0.c1 FROM rt0, vt0 WHERE ((NOT (CASE 'F/o.qNq'  WHEN x'34c1' THEN ((vt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)) WHEN (rt0.c1 IN ()) THEN ((rt0.c0)||('0.24806425849487224')) WHEN ((((((((vt0.c1)AND(0.5502740330106916)))OR(rt0.c2)))AND(vt0.c0)))AND(x'beb4')) THEN CASE WHEN vt0.c1 THEN rt0.c1 END ELSE ABS(DISTINCT '0.055579721092639645') END))) UNION SELECT DISTINCT rt0.c1, vt0.c0, rt0.c0, rt0.c2, vt0.c1 FROM rt0, vt0 WHERE (((CASE 'F/o.qNq'  WHEN x'34c1' THEN ((vt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)) WHEN (rt0.c1 IN ()) THEN ((rt0.c0)||('0.24806425849487224')) WHEN ((((((((vt0.c1)AND(0.5502740330106916)))OR(rt0.c2)))AND(vt0.c0)))AND(x'beb4')) THEN CASE WHEN vt0.c1 THEN rt0.c1 END ELSE ABS(DISTINCT '0.055579721092639645') END) ISNULL));
SELECT DISTINCT rt0.c1, vt0.c0, rt0.c0, rt0.c2, vt0.c1 FROM rt0, vt0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((NULLIF(rt0.c1, rt0.c2))*(PRINTF(rt0.c1)))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((NULLIF(rt0.c1, rt0.c2))*(PRINTF(rt0.c1)))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((NULLIF(rt0.c1, rt0.c2))*(PRINTF(rt0.c1)))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CASE WHEN SUM(MAX(COUNT(*))) THEN vt0.c1 WHEN COUNT(*) THEN vt0.c0 WHEN AVG(vt0.c1) THEN vt0.c0 WHEN GROUP_CONCAT(TOTAL(vt0.c0)) THEN COUNT(vt0.c1) WHEN COUNT(vt0.c0) THEN GROUP_CONCAT(vt0.c0) WHEN GROUP_CONCAT(vt0.c1) THEN COUNT(SUM(AVG(vt0.c1))) WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN ((MIN(vt0.c1) IN ())) AND (((TOTAL(SUM(vt0.c0)))<<(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((CASE WHEN SUM(MAX(COUNT(*))) THEN vt0.c1 WHEN COUNT(*) THEN vt0.c0 WHEN AVG(vt0.c1) THEN vt0.c0 WHEN GROUP_CONCAT(TOTAL(vt0.c0)) THEN COUNT(vt0.c1) WHEN COUNT(vt0.c0) THEN GROUP_CONCAT(vt0.c0) WHEN GROUP_CONCAT(vt0.c1) THEN COUNT(SUM(AVG(vt0.c1))) WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN ((MIN(vt0.c1) IN ())) AND (((TOTAL(SUM(vt0.c0)))<<(vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((CASE WHEN SUM(MAX(COUNT(*))) THEN vt0.c1 WHEN COUNT(*) THEN vt0.c0 WHEN AVG(vt0.c1) THEN vt0.c0 WHEN GROUP_CONCAT(TOTAL(vt0.c0)) THEN COUNT(vt0.c1) WHEN COUNT(vt0.c0) THEN GROUP_CONCAT(vt0.c0) WHEN GROUP_CONCAT(vt0.c1) THEN COUNT(SUM(AVG(vt0.c1))) WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN ((MIN(vt0.c1) IN ())) AND (((TOTAL(SUM(vt0.c0)))<<(vt0.c0))))) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (NULL) UNION ALL SELECT * FROM vt0 WHERE ((NOT (NULL))) UNION ALL SELECT * FROM vt0 WHERE (((NULL) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (highlight(rt0.c0 COLLATE NOCASE, json_array(rt0.c1, rt0.c0), rt0.c1 COLLATE BINARY, ((0x4f0787aa) BETWEEN (rt0.c1) AND (rt0.c0)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (highlight(rt0.c0 COLLATE NOCASE, json_array(rt0.c1, rt0.c0), rt0.c1 COLLATE BINARY, ((0x4f0787aa) BETWEEN (rt0.c1) AND (rt0.c0)))))) UNION SELECT DISTINCT * FROM rt0 NOT INDEXED WHERE (((highlight(rt0.c0 COLLATE NOCASE, json_array(rt0.c1, rt0.c0), rt0.c1 COLLATE BINARY, ((0X4f0787aa) BETWEEN (rt0.c1) AND (rt0.c0)))) ISNULL));
SELECT ALL rt0.c2, rt0.c0, vt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0, vt0.c1, vt0.c0;
SELECT ALL rt0.c2, rt0.c0, vt0.c1, vt0.c0 FROM rt0, vt0 WHERE (rt0.c0) GROUP BY rt0.c2, rt0.c0, vt0.c1, vt0.c0 UNION SELECT rt0.c2, rt0.c0, vt0.c1, vt0.c0 FROM rt0, vt0 WHERE ((NOT (rt0.c0))) GROUP BY rt0.c2, rt0.c0, vt0.c1, vt0.c0 UNION SELECT ALL rt0.c2, rt0.c0, vt0.c1, vt0.c0 FROM rt0, vt0 WHERE (((rt0.c0) ISNULL)) GROUP BY rt0.c2, rt0.c0, vt0.c1, vt0.c0;
SELECT ALL rt0.c2, rt0.c0, vt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0, vt0.c1, vt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM vt0, rt0 NOT INDEXED GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((((MIN(AVG(GROUP_CONCAT(COUNT(*))))) NOT BETWEEN (rt0.c2) AND (vt0.c0))) ISNULL) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (((((MIN(AVG(GROUP_CONCAT(COUNT(*))))) NOT BETWEEN (rt0.c2) AND (vt0.c0))) ISNULL))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((((((MIN(AVG(GROUP_CONCAT(COUNT(*))))) NOT BETWEEN (rt0.c2) AND (vt0.c0))) ISNULL)) ISNULL);
SELECT rt0.c2, rt0.c1, rt0.c0, vt0.c1 FROM rt0 FULL OUTER JOIN vt0 ON (NOT (((((rt0.c2)OR(rt0.c0)))OR(rt0.c1))));
SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt0.c1 FROM rt0 FULL OUTER JOIN vt0 ON (NOT (((((rt0.c2)OR(rt0.c0)))OR(rt0.c1)))) WHERE (-1192329692) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0, vt0.c1 FROM rt0 FULL OUTER JOIN vt0 ON (NOT (((((rt0.c2)OR(rt0.c0)))OR(rt0.c1)))) WHERE ((NOT (-1192329692))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt0.c1 FROM rt0 FULL OUTER JOIN vt0 ON (NOT (((((rt0.c2)OR(rt0.c0)))OR(rt0.c1)))) WHERE (((-1192329692) ISNULL));
SELECT rt0.c2, rt0.c1, rt0.c0, vt0.c1 FROM rt0 FULL OUTER JOIN vt0 ON (NOT (((((rt0.c2)OR(rt0.c0)))OR(rt0.c1))));
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (x'') UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (x''))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((x'') ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT ALL vt0.c0, rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c0, rt0.c1;
SELECT vt0.c0, rt0.c0, rt0.c1 FROM rt0, vt0 WHERE (CAST(NULL AS NUMERIC)) GROUP BY vt0.c0, rt0.c0, rt0.c1 UNION SELECT vt0.c0, rt0.c0, rt0.c1 FROM rt0, vt0 WHERE ((NOT (CAST(NULL AS NUMERIC)))) GROUP BY vt0.c0, rt0.c0, rt0.c1 UNION SELECT ALL vt0.c0, rt0.c0, rt0.c1 FROM rt0, vt0 WHERE (((CAST(NULL AS NUMERIC)) ISNULL)) GROUP BY vt0.c0, rt0.c0, rt0.c1;
SELECT ALL vt0.c0, rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c0, rt0.c1;
SELECT rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0 HAVING 0.4126706703779951 UNION ALL SELECT rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0 HAVING (NOT (0.4126706703779951)) UNION ALL SELECT ALL rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0 HAVING ((0.4126706703779951) ISNULL);
SELECT rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0 HAVING 0.4126706703779951 UNION ALL SELECT rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0 HAVING (NOT (0.4126706703779951)) UNION ALL SELECT ALL rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0 HAVING ((0.4126706703779951) ISNULL);
SELECT rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0;
SELECT ALL * FROM vt0, rt0;
SELECT * FROM vt0, rt0 WHERE (((rt0.c2 IN (rt0.c0)) IN ())) UNION ALL SELECT * FROM vt0, rt0 WHERE ((NOT (((rt0.c2 IN (rt0.c0)) IN ())))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c2 IN (rt0.c0)) IN ())) ISNULL));
SELECT ALL * FROM vt0, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CAST(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)) AS NUMERIC)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CAST(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)) AS NUMERIC)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CAST(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)) AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, vt0.c1, rt0.c2, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, vt0.c1, rt0.c2, rt0.c0 FROM vt0, rt0 WHERE (((CAST(rt0.c0 AS TEXT))GLOB(((((vt0.c1)OR(rt0.c0)))AND(rt0.c2))))) GROUP BY rt0.c1, vt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, vt0.c1, rt0.c2, rt0.c0 FROM vt0, rt0 WHERE ((NOT (((CAST(rt0.c0 AS TEXT))GLOB(((((vt0.c1)OR(rt0.c0)))AND(rt0.c2))))))) GROUP BY rt0.c1, vt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, vt0.c1, rt0.c2, rt0.c0 FROM vt0, rt0 WHERE (((((CAST(rt0.c0 AS TEXT))GLOB(((((vt0.c1)OR(rt0.c0)))AND(rt0.c2))))) ISNULL)) GROUP BY rt0.c1, vt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, vt0.c1, rt0.c2, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2 HAVING ((rt0.c0)<(CASE WHEN COUNT(*) THEN MAX(AVG(COUNT(*))) ELSE SUM(vt0.c0) END)) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (((rt0.c0)<(CASE WHEN COUNT(*) THEN MAX(AVG(COUNT(*))) ELSE SUM(vt0.c0) END)))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2 HAVING ((((rt0.c0)<(CASE WHEN COUNT(*) THEN MAX(AVG(COUNT(*))) ELSE SUM(vt0.c0) END))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((((NOT (rt0.c1)))OR((((rt0.c0))==((rt0.c0))))))OR(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((((NOT (rt0.c1)))OR((((rt0.c0))=((rt0.c0))))))OR(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2))))))) UNION ALL SELECT * FROM rt0 WHERE ((((((((NOT (rt0.c1)))OR((((rt0.c0))==((rt0.c0))))))OR(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (CASE WHEN ((rt0.c2) NOT NULL) THEN ((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c2)) WHEN (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))) THEN CASE vt0.c1  WHEN rt0.c0 THEN rt0.c1 END WHEN ((vt0.c0)|(vt0.c0)) THEN rt0.c0 COLLATE BINARY ELSE (vt0.c1 IN (rt0.c0, vt0.c0)) END) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (CASE WHEN ((rt0.c2) NOT NULL) THEN ((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c2)) WHEN (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))) THEN CASE vt0.c1  WHEN rt0.c0 THEN rt0.c1 END WHEN ((vt0.c0)|(vt0.c0)) THEN rt0.c0 COLLATE BINARY ELSE (vt0.c1 IN (rt0.c0, vt0.c0)) END))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((CASE WHEN ((rt0.c2) NOT NULL) THEN ((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c2)) WHEN (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))) THEN CASE vt0.c1  WHEN rt0.c0 THEN rt0.c1 END WHEN ((vt0.c0)|(vt0.c0)) THEN rt0.c0 COLLATE BINARY ELSE (vt0.c1 IN (rt0.c0, vt0.c0)) END) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT ALL vt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c0;
SELECT ALL vt0.c1, rt0.c0 FROM vt0, rt0 WHERE (((rt0.c0) NOT BETWEEN ('\n}[V') AND (CAST(rt0.c2 AS NUMERIC)))) GROUP BY vt0.c1, rt0.c0 UNION SELECT ALL vt0.c1, rt0.c0 FROM vt0, rt0 WHERE ((NOT (((rt0.c0) NOT BETWEEN ('\n}[V') AND (CAST(rt0.c2 AS NUMERIC)))))) GROUP BY vt0.c1, rt0.c0 UNION SELECT ALL vt0.c1, rt0.c0 FROM vt0, rt0 WHERE (((((rt0.c0) NOT BETWEEN ('\n}[V') AND (CAST(rt0.c2 AS NUMERIC)))) ISNULL)) GROUP BY vt0.c1, rt0.c0;
SELECT ALL vt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c0;
SELECT vt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, vt0.c1 HAVING MAX((+ (0x3a08dbf1))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (MAX((+ (0X3a08dbf1))))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((MAX((+ (0X3a08dbf1)))) ISNULL);
SELECT vt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, vt0.c1 HAVING MAX((+ (0x3a08dbf1))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (MAX((+ (0X3a08dbf1))))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((MAX((+ (0X3a08dbf1)))) ISNULL);
SELECT vt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL * FROM vt0, rt0;
SELECT ALL * FROM vt0, rt0 WHERE (0.6487225607084878) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE ((NOT (0.6487225607084878))) UNION ALL SELECT * FROM vt0, rt0 WHERE (((0.6487225607084878) ISNULL));
SELECT ALL * FROM vt0, rt0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE (CASE WHEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)) THEN ((rt0.c0)GLOB(rt0.c0)) ELSE ((x'') BETWEEN (rt0.c0) AND (rt0.c2)) END) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (CASE WHEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)) THEN ((rt0.c0)GLOB(rt0.c0)) ELSE ((x'') BETWEEN (rt0.c0) AND (rt0.c2)) END))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE (((CASE WHEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)) THEN ((rt0.c0)GLOB(rt0.c0)) ELSE ((x'') BETWEEN (rt0.c0) AND (rt0.c2)) END) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((rt0.c0 COLLATE RTRIM) BETWEEN (IFNULL(rt0.c2, rt0.c2)) AND (CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 END))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((rt0.c0 COLLATE RTRIM) BETWEEN (IFNULL(rt0.c2, rt0.c2)) AND (CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 END))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((((rt0.c0 COLLATE RTRIM) BETWEEN (IFNULL(rt0.c2, rt0.c2)) AND (CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 END))) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT vt0.c0, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c0;
SELECT ALL vt0.c0, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c0 HAVING (((rt0.c0)) NOT BETWEEN (((SUM(rt0.c1) IN (rt0.c2)))) AND ((AVG(rt0.c2)))) UNION ALL SELECT ALL vt0.c0, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c0 HAVING (NOT ((((rt0.c0)) NOT BETWEEN (((SUM(rt0.c1) IN (rt0.c2)))) AND ((AVG(rt0.c2)))))) UNION ALL SELECT vt0.c0, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c0 HAVING (((((rt0.c0)) NOT BETWEEN (((SUM(rt0.c1) IN (rt0.c2)))) AND ((AVG(rt0.c2))))) ISNULL);
SELECT vt0.c0, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c0;
SELECT ALL vt0.c0, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c0 HAVING (((rt0.c0)) NOT BETWEEN (((SUM(rt0.c1) IN (rt0.c2)))) AND ((AVG(rt0.c2)))) UNION ALL SELECT ALL vt0.c0, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c0 HAVING (NOT ((((rt0.c0)) NOT BETWEEN (((SUM(rt0.c1) IN (rt0.c2)))) AND ((AVG(rt0.c2)))))) UNION ALL SELECT vt0.c0, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c0 HAVING (((((rt0.c0)) NOT BETWEEN (((SUM(rt0.c1) IN (rt0.c2)))) AND ((AVG(rt0.c2))))) ISNULL);
SELECT vt0.c0, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c0;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (CAST(0.055579721092639645 AS NUMERIC)) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (CAST(0.055579721092639645 AS NUMERIC)))) UNION ALL SELECT * FROM vt0 WHERE (((CAST(0.055579721092639645 AS NUMERIC)) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CAST(x'' AS REAL)) BETWEEN (TRIM(DISTINCT vt0.c0, vt0.c1)) AND (vt0.c0 COLLATE BINARY))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((CAST(x'' AS REAL)) BETWEEN (TRIM(DISTINCT vt0.c0, vt0.c1)) AND (vt0.c0 COLLATE BINARY))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((CAST(x'' AS REAL)) BETWEEN (TRIM(DISTINCT vt0.c0, vt0.c1)) AND (vt0.c0 COLLATE BINARY))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT rt0.c2, rt0.c1, rt0.c0, vt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt0.c1, vt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0, vt0.c1, vt0.c0 FROM rt0, vt0 WHERE (CASE rt0.c1  WHEN CAST(rt0.c2 AS REAL) THEN 160868614 END) GROUP BY rt0.c2, rt0.c1, rt0.c0, vt0.c1, vt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0, vt0.c1, vt0.c0 FROM rt0, vt0 WHERE ((NOT (CASE rt0.c1  WHEN CAST(rt0.c2 AS REAL) THEN 160868614 END))) GROUP BY rt0.c2, rt0.c1, rt0.c0, vt0.c1, vt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0, vt0.c1, vt0.c0 FROM rt0, vt0 WHERE (((CASE rt0.c1  WHEN CAST(rt0.c2 AS REAL) THEN 160868614 END) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0, vt0.c1, vt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0, vt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt0.c1, vt0.c0;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((((vt0.c1)>>(SUM('-885041628'))))>=(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (((((vt0.c1)>>(SUM('-885041628'))))>=(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((((((vt0.c1)>>(SUM('-885041628'))))>=(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))))) ISNULL);
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((((vt0.c1)>>(SUM('-885041628'))))>=(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (((((vt0.c1)>>(SUM('-885041628'))))>=(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((((((vt0.c1)>>(SUM('-885041628'))))>=(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))))) ISNULL);
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL * FROM vt0, rt0;
SELECT * FROM vt0, rt0 WHERE (CAST((((vt0.c1))<=((rt0.c0))) AS NUMERIC)) UNION ALL SELECT * FROM vt0, rt0 WHERE ((NOT (CAST((((vt0.c1))<=((rt0.c0))) AS NUMERIC)))) UNION ALL SELECT ALL * FROM vt0, rt0 NOT INDEXED WHERE (((CAST((((vt0.c1))<=((rt0.c0))) AS NUMERIC)) ISNULL));
SELECT ALL * FROM vt0, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)))IS NOT((rt0.c1 IN ())))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)))IS NOT((rt0.c1 IN ())))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)))IS NOT((rt0.c1 IN ())))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM vt0, rt0 WHERE (((vt0.c0)IS NOT((((0.3995588398897312, rt0.c0, -8.85041628E8)) BETWEEN ((vt0.c1, rt0.c1, rt0.c1)) AND ((rt0.c0, vt0.c0, rt0.c1)))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM vt0, rt0 WHERE ((NOT (((vt0.c0)IS NOT((((0.3995588398897312, rt0.c0, -8.85041628E8)) BETWEEN ((vt0.c1, rt0.c1, rt0.c1)) AND ((rt0.c0, vt0.c0, rt0.c1)))))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM vt0, rt0 WHERE (((((vt0.c0)IS NOT((((0.3995588398897312, rt0.c0, -8.85041628E8)) BETWEEN ((vt0.c1, rt0.c1, rt0.c1)) AND ((rt0.c0, vt0.c0, rt0.c1)))))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING SUM(((GROUP_CONCAT(rt0.c2))IS(TOTAL(MAX(TOTAL(SUM(COUNT(AVG(rt0.c0))))))))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (SUM(((GROUP_CONCAT(rt0.c2))IS(TOTAL(MAX(TOTAL(SUM(COUNT(AVG(rt0.c0))))))))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((SUM(((GROUP_CONCAT(rt0.c2))IS(TOTAL(MAX(TOTAL(SUM(COUNT(AVG(rt0.c0)))))))))) ISNULL);
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON LIKELY(DISTINCT ((vt0.c1) IS FALSE));
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON LIKELY(DISTINCT ((vt0.c1) IS FALSE)) WHERE (LENGTH(CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)) UNION ALL SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON LIKELY(DISTINCT ((vt0.c1) IS FALSE)) WHERE ((NOT (LENGTH(CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)))) UNION ALL SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON LIKELY(DISTINCT ((vt0.c1) IS FALSE)) WHERE (((LENGTH(CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)) ISNULL));
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON LIKELY(DISTINCT ((vt0.c1) IS FALSE));
SELECT DISTINCT vt0.c1, rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0;
SELECT DISTINCT vt0.c1, rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 WHERE ((~ ((((rt0.c1))>=((vt0.c0)))))) UNION SELECT DISTINCT vt0.c1, rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 WHERE ((NOT ((~ ((((rt0.c1))>=((vt0.c0)))))))) UNION SELECT DISTINCT vt0.c1, rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 WHERE ((((~ ((((rt0.c1))>=((vt0.c0)))))) ISNULL));
SELECT DISTINCT vt0.c1, rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((((((vt0.c1)||(vt0.c0)))AND(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))))AND((('o_')<>(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((((vt0.c1)||(vt0.c0)))AND(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))))AND((('o_')<>(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((((((vt0.c1)||(vt0.c0)))AND(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))))AND((('o_')<>(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c1, rt0.c0, vt0.c1 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0, vt0.c1;
SELECT rt0.c1, rt0.c0, vt0.c1 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0, vt0.c1 HAVING CASE rt0.c1  WHEN rt0.c0 THEN AVG(vt0.c0) END COLLATE BINARY UNION ALL SELECT rt0.c1, rt0.c0, vt0.c1 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0, vt0.c1 HAVING (NOT (CASE rt0.c1  WHEN rt0.c0 THEN AVG(vt0.c0) END COLLATE BINARY)) UNION ALL SELECT ALL rt0.c1, rt0.c0, vt0.c1 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0, vt0.c1 HAVING ((CASE rt0.c1  WHEN rt0.c0 THEN AVG(vt0.c0) END COLLATE BINARY) ISNULL);
SELECT rt0.c1, rt0.c0, vt0.c1 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0, vt0.c1;
SELECT rt0.c1, rt0.c0, vt0.c1 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0, vt0.c1 HAVING CASE rt0.c1  WHEN rt0.c0 THEN AVG(vt0.c0) END COLLATE BINARY UNION ALL SELECT rt0.c1, rt0.c0, vt0.c1 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0, vt0.c1 HAVING (NOT (CASE rt0.c1  WHEN rt0.c0 THEN AVG(vt0.c0) END COLLATE BINARY)) UNION ALL SELECT ALL rt0.c1, rt0.c0, vt0.c1 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0, vt0.c1 HAVING ((CASE rt0.c1  WHEN rt0.c0 THEN AVG(vt0.c0) END COLLATE BINARY) ISNULL);
SELECT rt0.c1, rt0.c0, vt0.c1 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0, vt0.c1;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (CASE NULL  WHEN (((vt0.c1, vt0.c0, vt0.c0))<>((vt0.c1, vt0.c1, vt0.c1))) THEN -38640440 COLLATE BINARY END) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (CASE NULL  WHEN (((vt0.c1, vt0.c0, vt0.c0))!=((vt0.c1, vt0.c1, vt0.c1))) THEN -38640440 COLLATE BINARY END))) UNION ALL SELECT * FROM vt0 WHERE (((CASE NULL  WHEN (((vt0.c1, vt0.c0, vt0.c0))!=((vt0.c1, vt0.c1, vt0.c1))) THEN -38640440 COLLATE BINARY END) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT rt0.c0, vt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0;
SELECT DISTINCT rt0.c0, vt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 WHERE (((CASE rt0.c2  WHEN vt0.c0 THEN rt0.c2 WHEN vt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 END)%(vt0.c0 COLLATE BINARY))) UNION SELECT DISTINCT rt0.c0, vt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 WHERE ((NOT (((CASE rt0.c2  WHEN vt0.c0 THEN rt0.c2 WHEN vt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 END)%(vt0.c0 COLLATE BINARY))))) UNION SELECT DISTINCT rt0.c0, vt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 WHERE (((((CASE rt0.c2  WHEN vt0.c0 THEN rt0.c2 WHEN vt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 END)%(vt0.c0 COLLATE BINARY))) ISNULL));
SELECT DISTINCT rt0.c0, vt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (((((vt0.c0) IS TRUE)) NOT BETWEEN (vt0.c1) AND (CAST(vt0.c0 AS TEXT)))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((((vt0.c0) IS TRUE)) NOT BETWEEN (vt0.c1) AND (CAST(vt0.c0 AS TEXT)))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((((((vt0.c0) IS TRUE)) NOT BETWEEN (vt0.c1) AND (CAST(vt0.c0 AS TEXT)))) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c1;
SELECT ALL vt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c1 HAVING ((MIN(MIN(rt0.c0))) NOT BETWEEN (COUNT(*)) AND ((((SUM(COUNT(rt0.c1)))) BETWEEN ((SUM(MIN(rt0.c1)))) AND ((vt0.c1))))) UNION ALL SELECT vt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c1 HAVING (NOT (((MIN(MIN(rt0.c0))) NOT BETWEEN (COUNT(*)) AND ((((SUM(COUNT(rt0.c1)))) BETWEEN ((SUM(MIN(rt0.c1)))) AND ((vt0.c1))))))) UNION ALL SELECT vt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c1 HAVING ((((MIN(MIN(rt0.c0))) NOT BETWEEN (COUNT(*)) AND ((((SUM(COUNT(rt0.c1)))) BETWEEN ((SUM(MIN(rt0.c1)))) AND ((vt0.c1)))))) ISNULL);
SELECT rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (rt0.c0) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (rt0.c0))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (((rt0.c0) ISNULL));
SELECT rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0, vt0.c1 FROM rt0, vt0;
SELECT DISTINCT rt0.c0, vt0.c1 FROM rt0, vt0 WHERE (((((((((rt0.c2 COLLATE NOCASE)AND(CASE WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c2 ELSE vt0.c0 END)))OR(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))))OR(((rt0.c2) NOTNULL))))OR((~ (rt0.c1))))) UNION SELECT DISTINCT rt0.c0, vt0.c1 FROM rt0, vt0 WHERE ((NOT (((((((((rt0.c2 COLLATE NOCASE)AND(CASE WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c2 ELSE vt0.c0 END)))OR(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))))OR(((rt0.c2) NOTNULL))))OR((~ (rt0.c1))))))) UNION SELECT DISTINCT rt0.c0, vt0.c1 FROM rt0, vt0 WHERE (((((((((((rt0.c2 COLLATE NOCASE)AND(CASE WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c2 ELSE vt0.c0 END)))OR(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))))OR(((rt0.c2) NOTNULL))))OR((~ (rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c0, vt0.c1 FROM rt0, vt0;
SELECT vt0.c0, vt0.c1, rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, vt0.c1, rt0.c2, rt0.c1;
SELECT ALL vt0.c0, vt0.c1, rt0.c2, rt0.c1 FROM vt0, rt0 WHERE (rt0.c0) GROUP BY vt0.c0, vt0.c1, rt0.c2, rt0.c1 UNION SELECT ALL vt0.c0, vt0.c1, rt0.c2, rt0.c1 FROM vt0, rt0 WHERE ((NOT (rt0.c0))) GROUP BY vt0.c0, vt0.c1, rt0.c2, rt0.c1 UNION SELECT vt0.c0, vt0.c1, rt0.c2, rt0.c1 FROM vt0, rt0 WHERE (((rt0.c0) ISNULL)) GROUP BY vt0.c0, vt0.c1, rt0.c2, rt0.c1;
SELECT vt0.c0, vt0.c1, rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, vt0.c1, rt0.c2, rt0.c1;
SELECT ALL rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c2;
SELECT ALL rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c2 HAVING TOTAL((+ (vt0.c1))) UNION ALL SELECT ALL rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0 NOT INDEXED GROUP BY rt0.c1, vt0.c0, rt0.c2 HAVING (NOT (TOTAL((+ (vt0.c1))))) UNION ALL SELECT rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c2 HAVING ((TOTAL((+ (vt0.c1)))) ISNULL);
SELECT ALL rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c2;
SELECT ALL rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c2 HAVING TOTAL((+ (vt0.c1))) UNION ALL SELECT ALL rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0 NOT INDEXED GROUP BY rt0.c1, vt0.c0, rt0.c2 HAVING (NOT (TOTAL((+ (vt0.c1))))) UNION ALL SELECT rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c2 HAVING ((TOTAL((+ (vt0.c1)))) ISNULL);
SELECT ALL rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c2;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (vt0.c0 COLLATE BINARY) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (vt0.c0 COLLATE BINARY))) UNION ALL SELECT * FROM vt0 NOT INDEXED WHERE (((vt0.c0 COLLATE BINARY) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) IN (CAST(vt0.c1 AS REAL)))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) IN (CAST(vt0.c1 AS REAL)))))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE ((((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) IN (CAST(vt0.c1 AS REAL)))) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((rt0.c2)IS(rt0.c1)) COLLATE RTRIM) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((rt0.c2)IS(rt0.c1)) COLLATE RTRIM))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (((((rt0.c2)IS(rt0.c1)) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING TOTAL(SUM(vt0.c1)) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (TOTAL(SUM(vt0.c1)))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((TOTAL(SUM(vt0.c1))) ISNULL);
SELECT vt0.c1 FROM vt0;
SELECT vt0.c1 FROM vt0 WHERE ('') UNION ALL SELECT ALL vt0.c1 FROM vt0 WHERE ((NOT (''))) UNION ALL SELECT ALL vt0.c1 FROM vt0 WHERE ((('') ISNULL));
SELECT vt0.c1 FROM vt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE ((x'' IN ())) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT ((x'' IN ())))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((((x'' IN ())) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c2;
SELECT ALL rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0 WHERE ((((((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((NULL, rt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c0, rt0.c2)))) BETWEEN (((vt0.c1) ISNULL)) AND (TYPEOF(vt0.c1)))) GROUP BY rt0.c1, vt0.c0, rt0.c2 UNION SELECT rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0 WHERE ((NOT ((((((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((NULL, rt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c0, rt0.c2)))) BETWEEN (((vt0.c1) ISNULL)) AND (TYPEOF(vt0.c1)))))) GROUP BY rt0.c1, vt0.c0, rt0.c2 UNION SELECT rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0 WHERE ((((((((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((NULL, rt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c0, rt0.c2)))) BETWEEN (((vt0.c1) ISNULL)) AND (TYPEOF(vt0.c1)))) ISNULL)) GROUP BY rt0.c1, vt0.c0, rt0.c2;
SELECT rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c2;
SELECT rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1 HAVING x'' UNION ALL SELECT ALL rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1 HAVING (NOT (x'')) UNION ALL SELECT rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1 HAVING ((x'') ISNULL);
SELECT rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1 HAVING x'' UNION ALL SELECT ALL rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1 HAVING (NOT (x'')) UNION ALL SELECT rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1 HAVING ((x'') ISNULL);
SELECT rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1;
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c1)<(vt0.c0)))OR(vt0.c1 COLLATE RTRIM)))OR(((vt0.c1) NOTNULL)))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((((vt0.c1)<(vt0.c0)))OR(vt0.c1 COLLATE RTRIM)))OR(((vt0.c1) NOTNULL)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((((((((vt0.c1)<(vt0.c0)))OR(vt0.c1 COLLATE RTRIM)))OR(((vt0.c1) NOTNULL)))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE ((((- (rt0.c2)))<=(((vt0.c0)IS(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT ((((- (rt0.c2)))<=(((vt0.c0)IS(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((((((- (rt0.c2)))<=(((vt0.c0)IS(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((((vt0.c1)GLOB(vt0.c1)) IN ())) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT ((((vt0.c1)GLOB(vt0.c1)) IN ())))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((((((vt0.c1)GLOB(vt0.c1)) IN ())) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL rt0.c0, rt0.c1, vt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, vt0.c1, vt0.c0;
SELECT ALL rt0.c0, rt0.c1, vt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, vt0.c1, vt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c0, rt0.c1, vt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, vt0.c1, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, rt0.c1, vt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, vt0.c1, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0, rt0.c1, vt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, vt0.c1, vt0.c0;
SELECT ALL rt0.c0, rt0.c1, vt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, vt0.c1, vt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c0, rt0.c1, vt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, vt0.c1, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, rt0.c1, vt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, vt0.c1, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0, rt0.c1, vt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, vt0.c1, vt0.c0;
SELECT rt0.c2 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 WHERE ((((0X1b057438))<>((rt0.c1))) COLLATE NOCASE) ORDER BY CHAR((((NULL)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))) DESC  NULLS FIRST;
SELECT rt0.c2 FROM rt0 WHERE ((NOT ((((0x1b057438))!=((rt0.c1))) COLLATE NOCASE))) ORDER BY CHAR((((NULL)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))) DESC  NULLS FIRST;
SELECT ALL rt0.c2 FROM rt0 WHERE ((((((0x1b057438))!=((rt0.c1))) COLLATE NOCASE) ISNULL)) ORDER BY CHAR((((NULL)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))) DESC  NULLS FIRST;
SELECT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, vt0.c0 FROM rt0, vt0;
SELECT DISTINCT rt0.c1, vt0.c0 FROM rt0, vt0 WHERE (CASE WHEN rt0.c0 THEN CAST(rt0.c0 AS BLOB) END) UNION SELECT DISTINCT rt0.c1, vt0.c0 FROM rt0, vt0 WHERE ((NOT (CASE WHEN rt0.c0 THEN CAST(rt0.c0 AS BLOB) END))) UNION SELECT DISTINCT rt0.c1, vt0.c0 FROM rt0, vt0 WHERE (((CASE WHEN rt0.c0 THEN CAST(rt0.c0 AS BLOB) END) ISNULL));
SELECT DISTINCT rt0.c1, vt0.c0 FROM rt0, vt0;
SELECT vt0.c1 FROM rt0, vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM rt0, vt0 WHERE ((+ (CASE vt0.c1  WHEN rt0.c1 THEN rt0.c2 END))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM rt0, vt0 WHERE ((NOT ((+ (CASE vt0.c1  WHEN rt0.c1 THEN rt0.c2 END))))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM rt0, vt0 WHERE ((((+ (CASE vt0.c1  WHEN rt0.c1 THEN rt0.c2 END))) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM rt0, vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING AVG(NULL) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (AVG(NULL))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((AVG(NULL)) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING AVG(NULL) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (AVG(NULL))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((AVG(NULL)) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((TYPEOF(DISTINCT vt0.c0) IN ())) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT ((TYPEOF(DISTINCT vt0.c0) IN ())))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((((TYPEOF(DISTINCT vt0.c0) IN ())) ISNULL));
SELECT ALL vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (((TRIM(vt0.c0, rt0.c2)) NOT BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (CAST(rt0.c2 AS BLOB)))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (((TRIM(vt0.c0, rt0.c2)) NOT BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (CAST(rt0.c2 AS BLOB)))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((((TRIM(vt0.c0, rt0.c2)) NOT BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (CAST(rt0.c2 AS BLOB)))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT rt0.c1, vt0.c1 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c1;
SELECT rt0.c1, vt0.c1 FROM vt0, rt0 WHERE (((((rt0.c2) IS TRUE))<>(UPPER(DISTINCT rt0.c0)))) GROUP BY rt0.c1, vt0.c1 UNION SELECT rt0.c1, vt0.c1 FROM vt0, rt0 WHERE ((NOT (((((rt0.c2) IS TRUE))<>(UPPER(DISTINCT rt0.c0)))))) GROUP BY rt0.c1, vt0.c1 UNION SELECT ALL rt0.c1, vt0.c1 FROM vt0, rt0 WHERE (((((((rt0.c2) IS TRUE))<>(UPPER(DISTINCT rt0.c0)))) ISNULL)) GROUP BY rt0.c1, vt0.c1;
SELECT rt0.c1, vt0.c1 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c1;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING MIN(MAX(vt0.c1)) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (MIN(MAX(vt0.c1)))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((MIN(MAX(vt0.c1))) ISNULL);
SELECT vt0.c1 FROM vt0 CROSS JOIN rt0 ON rt0.c1;
SELECT ALL vt0.c1 FROM vt0 CROSS JOIN rt0 ON rt0.c1 WHERE (((((rt0.c2) IS FALSE)) IS FALSE)) UNION ALL SELECT ALL vt0.c1 FROM vt0 CROSS JOIN rt0 ON rt0.c1 WHERE ((NOT (((((rt0.c2) IS FALSE)) IS FALSE)))) UNION ALL SELECT vt0.c1 FROM vt0 CROSS JOIN rt0 ON rt0.c1 WHERE (((((((rt0.c2) IS FALSE)) IS FALSE)) ISNULL));
SELECT vt0.c1 FROM vt0 CROSS JOIN rt0 ON rt0.c1;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE (CASE ((((vt0.c0)OR(vt0.c1)))OR(vt0.c0))  WHEN vt0.c1 COLLATE BINARY THEN ((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)) END) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (CASE ((((vt0.c0)OR(vt0.c1)))OR(vt0.c0))  WHEN vt0.c1 COLLATE BINARY THEN ((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)) END))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE (((CASE ((((vt0.c0)OR(vt0.c1)))OR(vt0.c0))  WHEN vt0.c1 COLLATE BINARY THEN ((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)) END) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (-561274063) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (-561274063))) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (((-561274063) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2 HAVING MIN(MIN(rt0.c1)) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (MIN(MIN(rt0.c1)))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2 HAVING ((MIN(MIN(rt0.c1))) ISNULL);
SELECT ALL vt0.c1, rt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM rt0, vt0;
SELECT ALL vt0.c1, rt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM rt0, vt0 WHERE ((~ (rt0.c0))) UNION ALL SELECT vt0.c1, rt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM rt0, vt0 WHERE ((NOT ((~ (rt0.c0))))) UNION ALL SELECT vt0.c1, rt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM rt0, vt0 WHERE ((((~ (rt0.c0))) ISNULL));
SELECT ALL vt0.c1, rt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM rt0, vt0;
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON ((CASE WHEN rt0.c1 THEN rt0.c1 ELSE vt0.c1 END)>>(CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE rt0.c1 END));
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON ((CASE WHEN rt0.c1 THEN rt0.c1 ELSE vt0.c1 END)>>(CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE rt0.c1 END)) WHERE ((((rt0.c0 IN ())) BETWEEN ((~ (vt0.c0))) AND (((((((((rt0.c2)OR(vt0.c1)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c2))))) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON ((CASE WHEN rt0.c1 THEN rt0.c1 ELSE vt0.c1 END)>>(CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE rt0.c1 END)) WHERE ((NOT ((((rt0.c0 IN ())) BETWEEN ((~ (vt0.c0))) AND (((((((((rt0.c2)OR(vt0.c1)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c2))))))) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON ((CASE WHEN rt0.c1 THEN rt0.c1 ELSE vt0.c1 END)>>(CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE rt0.c1 END)) WHERE ((((((rt0.c0 IN ())) BETWEEN ((~ (vt0.c0))) AND (((((((((rt0.c2)OR(vt0.c1)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON ((CASE WHEN rt0.c1 THEN rt0.c1 ELSE vt0.c1 END)>>(CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE rt0.c1 END));
SELECT rt0.c1, rt0.c2 FROM vt0 NOT INDEXED, rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM vt0, rt0 WHERE (((vt0.c1 IN (x'8888', rt0.c1)) IN ())) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM vt0, rt0 WHERE ((NOT (((vt0.c1 IN (x'8888', rt0.c1)) IN ())))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM vt0, rt0 WHERE (((((vt0.c1 IN (x'8888', rt0.c1)) IN ())) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM vt0 NOT INDEXED, rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (+ (((rt0.c0) ISNULL))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT ((+ (((rt0.c0) ISNULL))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (((+ (((rt0.c0) ISNULL)))) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (+ (((rt0.c0) ISNULL))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT ((+ (((rt0.c0) ISNULL))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (((+ (((rt0.c0) ISNULL)))) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT vt0.c1 FROM vt0;
SELECT ALL vt0.c1 FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c1, vt0.c0, vt0.c1))>=((vt0.c1, vt0.c0, vt0.c0, x'', vt0.c0))))*((vt0.c0 IN ())))) UNION ALL SELECT vt0.c1 FROM vt0 WHERE ((NOT ((((((vt0.c0, vt0.c0, vt0.c1, vt0.c0, vt0.c1))>=((vt0.c1, vt0.c0, vt0.c0, x'', vt0.c0))))*((vt0.c0 IN ())))))) UNION ALL SELECT vt0.c1 FROM vt0 WHERE ((((((((vt0.c0, vt0.c0, vt0.c1, vt0.c0, vt0.c1))>=((vt0.c1, vt0.c0, vt0.c0, x'', vt0.c0))))*((vt0.c0 IN ())))) ISNULL));
SELECT vt0.c1 FROM vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((('') IS FALSE)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((('') IS FALSE)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((('') IS FALSE)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT vt0.c1, vt0.c0, rt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c1, vt0.c0, rt0.c0, rt0.c2, rt0.c1;
SELECT vt0.c1, vt0.c0, rt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 WHERE (rt0.c2) GROUP BY vt0.c1, vt0.c0, rt0.c0, rt0.c2, rt0.c1 UNION SELECT vt0.c1, vt0.c0, rt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 NOT INDEXED WHERE ((NOT (rt0.c2))) GROUP BY vt0.c1, vt0.c0, rt0.c0, rt0.c2, rt0.c1 UNION SELECT vt0.c1, vt0.c0, rt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 WHERE (((rt0.c2) ISNULL)) GROUP BY vt0.c1, vt0.c0, rt0.c0, rt0.c2, rt0.c1;
SELECT vt0.c1, vt0.c0, rt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c1, vt0.c0, rt0.c0, rt0.c2, rt0.c1;
SELECT ALL vt0.c1, vt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c1, vt0.c0, rt0.c1, rt0.c2;
SELECT ALL vt0.c1, vt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c1, vt0.c0, rt0.c1, rt0.c2 HAVING CASE MIN(SUM(COUNT(*)))  WHEN TOTAL(rt0.c0) THEN ((AVG(rt0.c2))||(COUNT(MAX(vt0.c0)))) WHEN LIKELIHOOD(DISTINCT rt0.c2, 0.4533792136996797) THEN TOTAL(rt0.c1) WHEN ((SUM(TOTAL(rt0.c2)))GLOB(vt0.c1)) THEN CAST(MAX(COUNT(*)) AS NUMERIC) END UNION ALL SELECT vt0.c1, vt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c1, vt0.c0, rt0.c1, rt0.c2 HAVING (NOT (CASE MIN(SUM(COUNT(*)))  WHEN TOTAL(rt0.c0) THEN ((AVG(rt0.c2))||(COUNT(MAX(vt0.c0)))) WHEN LIKELIHOOD(DISTINCT rt0.c2, 0.4533792136996797) THEN TOTAL(rt0.c1) WHEN ((SUM(TOTAL(rt0.c2)))GLOB(vt0.c1)) THEN CAST(MAX(COUNT(*)) AS NUMERIC) END)) UNION ALL SELECT vt0.c1, vt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c1, vt0.c0, rt0.c1, rt0.c2 HAVING ((CASE MIN(SUM(COUNT(*)))  WHEN TOTAL(rt0.c0) THEN ((AVG(rt0.c2))||(COUNT(MAX(vt0.c0)))) WHEN LIKELIHOOD(DISTINCT rt0.c2, 0.4533792136996797) THEN TOTAL(rt0.c1) WHEN ((SUM(TOTAL(rt0.c2)))GLOB(vt0.c1)) THEN CAST(MAX(COUNT(*)) AS NUMERIC) END) ISNULL);
SELECT rt0.c1, rt0.c2 FROM rt0 NATURAL JOIN vt0;
SELECT rt0.c1, rt0.c2 FROM rt0 NATURAL JOIN vt0 WHERE ((rt0.c1 IN ()) COLLATE NOCASE) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 NATURAL JOIN vt0 WHERE ((NOT ((rt0.c1 IN ()) COLLATE NOCASE))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 NATURAL JOIN vt0 WHERE ((((rt0.c1 IN ()) COLLATE NOCASE) ISNULL));
SELECT rt0.c1, rt0.c2 FROM rt0 NATURAL JOIN vt0;
SELECT DISTINCT vt0.c0, rt0.c2, vt0.c1 FROM rt0, vt0;
SELECT DISTINCT vt0.c0, rt0.c2, vt0.c1 FROM rt0, vt0 WHERE (vt0.c0) UNION SELECT DISTINCT vt0.c0, rt0.c2, vt0.c1 FROM rt0, vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.c0, rt0.c2, vt0.c1 FROM rt0, vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c2, vt0.c1 FROM rt0, vt0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NULL IN ())) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((NULL IN ())))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((NULL IN ())) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (+ (MAX(MIN(SUM(COUNT(*)))))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT ((+ (MAX(MIN(SUM(COUNT(*)))))))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (((+ (MAX(MIN(SUM(COUNT(*))))))) ISNULL);
SELECT ALL rt0.c0 FROM vt0, rt0;
SELECT rt0.c0 FROM vt0, rt0 WHERE (CAST(((((((((vt0.c1)OR(rt0.c1)))AND(vt0.c0)))OR(rt0.c1)))OR(rt0.c0)) AS REAL)) UNION ALL SELECT rt0.c0 FROM vt0, rt0 WHERE ((NOT (CAST(((((((((vt0.c1)OR(rt0.c1)))AND(vt0.c0)))OR(rt0.c1)))OR(rt0.c0)) AS REAL)))) UNION ALL SELECT ALL rt0.c0 FROM vt0, rt0 WHERE (((CAST(((((((((vt0.c1)OR(rt0.c1)))AND(vt0.c0)))OR(rt0.c1)))OR(rt0.c0)) AS REAL)) ISNULL));
SELECT ALL rt0.c0 FROM vt0, rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((NOT (((vt0.c1)%(vt0.c1))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((NOT (((vt0.c1)%(vt0.c1))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((NOT (((vt0.c1)%(vt0.c1))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c0;
SELECT rt0.c1, vt0.c0 FROM vt0, rt0 WHERE (CASE (((vt0.c0, rt0.c1, rt0.c1))<((vt0.c0, vt0.c1, rt0.c0)))  WHEN CASE WHEN vt0.c1 THEN rt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN NULL THEN rt0.c1 WHEN rt0.c0 THEN 0Xffffffff867e8ded WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END THEN ((rt0.c0)<<(rt0.c1)) WHEN ((('449189734'))==((rt0.c0))) THEN NULL WHEN (rt0.c0 IN ()) THEN ((vt0.c1)=('-1548173166')) ELSE CAST(rt0.c1 AS REAL) END) GROUP BY rt0.c1, vt0.c0 UNION SELECT ALL rt0.c1, vt0.c0 FROM vt0, rt0 WHERE ((NOT (CASE (((vt0.c0, rt0.c1, rt0.c1))<((vt0.c0, vt0.c1, rt0.c0)))  WHEN CASE WHEN vt0.c1 THEN rt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN NULL THEN rt0.c1 WHEN rt0.c0 THEN 0xffffffff867e8ded WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END THEN ((rt0.c0)<<(rt0.c1)) WHEN ((('449189734'))=((rt0.c0))) THEN NULL WHEN (rt0.c0 IN ()) THEN ((vt0.c1)=('-1548173166')) ELSE CAST(rt0.c1 AS REAL) END))) GROUP BY rt0.c1, vt0.c0 UNION SELECT rt0.c1, vt0.c0 FROM vt0, rt0 WHERE (((CASE (((vt0.c0, rt0.c1, rt0.c1))<((vt0.c0, vt0.c1, rt0.c0)))  WHEN CASE WHEN vt0.c1 THEN rt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN NULL THEN rt0.c1 WHEN rt0.c0 THEN 0Xffffffff867e8ded WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END THEN ((rt0.c0)<<(rt0.c1)) WHEN ((('449189734'))=((rt0.c0))) THEN NULL WHEN (rt0.c0 IN ()) THEN ((vt0.c1)==('-1548173166')) ELSE CAST(rt0.c1 AS REAL) END) ISNULL)) GROUP BY rt0.c1, vt0.c0;
SELECT rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING MIN(COUNT(*)) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (MIN(COUNT(*)))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((MIN(COUNT(*))) ISNULL);
SELECT MAX('03pꂄx') FROM vt0 ORDER BY ((((((((((((vt0.c1)AND(HEX(0.8629946278883065))))OR(((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))))AND(vt0.c1)))AND(vt0.c0)))AND(((vt0.c1)IS('Ch~i+''>ꠚb')))))OR(((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))) ASC  NULLS LAST, ((vt0.c0)%(vt0.c0)) COLLATE NOCASE  NULLS FIRST;
SELECT * FROM vt0, rt0;
SELECT * FROM vt0, rt0 WHERE ((((x'')!=(rt0.c0)) IN ())) UNION ALL SELECT * FROM vt0, rt0 WHERE ((NOT ((((x'')<>(rt0.c0)) IN ())))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE ((((((x'')<>(rt0.c0)) IN ())) ISNULL));
SELECT * FROM vt0, rt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT ALL rt0.c2, vt0.c1, rt0.c1, vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON x'2192' COLLATE RTRIM GROUP BY rt0.c2, vt0.c1, rt0.c1, vt0.c0;
SELECT ALL rt0.c2, vt0.c1, rt0.c1, vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON x'2192' COLLATE RTRIM WHERE (((((CASE WHEN rt0.c2 THEN rt0.c2 ELSE 0.8069255010064831 END)AND(CASE WHEN vt0.c0 THEN rt0.c2 END)))OR(rt0.c1 COLLATE RTRIM))) GROUP BY rt0.c2, vt0.c1, rt0.c1, vt0.c0 UNION SELECT ALL rt0.c2, vt0.c1, rt0.c1, vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON x'2192' COLLATE RTRIM WHERE ((NOT (((((CASE WHEN rt0.c2 THEN rt0.c2 ELSE 0.8069255010064831 END)AND(CASE WHEN vt0.c0 THEN rt0.c2 END)))OR(rt0.c1 COLLATE RTRIM))))) GROUP BY rt0.c2, vt0.c1, rt0.c1, vt0.c0 UNION SELECT rt0.c2, vt0.c1, rt0.c1, vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON x'2192' COLLATE RTRIM WHERE (((((((CASE WHEN rt0.c2 THEN rt0.c2 ELSE 0.8069255010064831 END)AND(CASE WHEN vt0.c0 THEN rt0.c2 END)))OR(rt0.c1 COLLATE RTRIM))) ISNULL)) GROUP BY rt0.c2, vt0.c1, rt0.c1, vt0.c0;
SELECT ALL rt0.c2, vt0.c1, rt0.c1, vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON x'2192' COLLATE RTRIM GROUP BY rt0.c2, vt0.c1, rt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((GROUP_CONCAT(GROUP_CONCAT(vt0.c0))) NOT BETWEEN (TOTAL(SUM(vt0.c0))) AND (((((GROUP_CONCAT(vt0.c0))AND(SUM(COUNT(vt0.c0)))))OR(vt0.c0)))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (((GROUP_CONCAT(GROUP_CONCAT(vt0.c0))) NOT BETWEEN (TOTAL(SUM(vt0.c0))) AND (((((GROUP_CONCAT(vt0.c0))AND(SUM(COUNT(vt0.c0)))))OR(vt0.c0)))))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((((GROUP_CONCAT(GROUP_CONCAT(vt0.c0))) NOT BETWEEN (TOTAL(SUM(vt0.c0))) AND (((((GROUP_CONCAT(vt0.c0))AND(SUM(COUNT(vt0.c0)))))OR(vt0.c0))))) ISNULL);
SELECT ALL MIN(((CASE vt0.c1  WHEN '03pꂄx' THEN vt0.c1 WHEN vt0.c1 THEN x'' WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c0 END) NOT BETWEEN (CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END) AND (((vt0.c1)>>(vt0.c0))))) FROM vt0, rt0 NOT INDEXED;
SELECT vt0.c0, vt0.c1 FROM vt0, rt0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0, rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((((((((((0.008615922231975381)OR(vt0.c1)))OR(rt0.c1)))AND(vt0.c0)))OR(rt0.c0)))) AND (((+ (vt0.c1)))))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0, rt0 WHERE ((NOT ((((rt0.c1)) NOT BETWEEN ((((((((((0.008615922231975381)OR(vt0.c1)))OR(rt0.c1)))AND(vt0.c0)))OR(rt0.c0)))) AND (((+ (vt0.c1)))))))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0, rt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((((((((((0.008615922231975381)OR(vt0.c1)))OR(rt0.c1)))AND(vt0.c0)))OR(rt0.c0)))) AND (((+ (vt0.c1)))))) ISNULL));
SELECT vt0.c0, vt0.c1 FROM vt0, rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (TRIM(DISTINCT CAST(vt0.c1 AS TEXT))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (TRIM(DISTINCT CAST(vt0.c1 AS TEXT))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((TRIM(DISTINCT CAST(vt0.c1 AS TEXT))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (((GLOB(vt0.c1, vt0.c0))*((vt0.c1 IN ())))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((GLOB(vt0.c1, vt0.c0))*((vt0.c1 IN ())))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((((GLOB(vt0.c1, vt0.c0))*((vt0.c1 IN ())))) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON rt0.c1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON rt0.c1 GROUP BY vt0.c0 HAVING (((((vt0.c0)) BETWEEN ((GROUP_CONCAT(MAX(TOTAL(GROUP_CONCAT(rt0.c0)))))) AND ((rt0.c2)))) NOT NULL) UNION ALL SELECT vt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON rt0.c1 GROUP BY vt0.c0 HAVING (NOT ((((((vt0.c0)) BETWEEN ((GROUP_CONCAT(MAX(TOTAL(GROUP_CONCAT(rt0.c0)))))) AND ((rt0.c2)))) NOT NULL))) UNION ALL SELECT vt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON rt0.c1 GROUP BY vt0.c0 HAVING (((((((vt0.c0)) BETWEEN ((GROUP_CONCAT(MAX(TOTAL(GROUP_CONCAT(rt0.c0)))))) AND ((rt0.c2)))) NOT NULL)) ISNULL);
SELECT SUM((((rt0.c0 IN (rt0.c0))) NOTNULL)) FROM rt0;
SELECT * FROM vt0, rt0;
SELECT ALL * FROM vt0, rt0 WHERE ((((((rt0.c1)AND('ZS/''')))OR(x'1a09')) IN (rt0.c1, ((((((((((((rt0.c0)OR(rt0.c1)))AND(vt0.c1)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c1))))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE ((NOT ((((((rt0.c1)AND('ZS/''')))OR(x'1a09')) IN (rt0.c1, ((((((((((((rt0.c0)OR(rt0.c1)))AND(vt0.c1)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c1))))))) UNION ALL SELECT * FROM vt0, rt0 WHERE ((((((((rt0.c1)AND('ZS/''')))OR(x'1a09')) IN (rt0.c1, ((((((((((((rt0.c0)OR(rt0.c1)))AND(vt0.c1)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c1))))) ISNULL));
SELECT * FROM vt0, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c0)LIKE('-1187634862'))))=((json_insert('', rt0.c1, rt0.c2))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((((rt0.c0)LIKE('-1187634862'))))==((json_insert('', rt0.c1, rt0.c2))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((((rt0.c0)LIKE('-1187634862'))))=((json_insert('', rt0.c1, rt0.c2))))) ISNULL));
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (CASE WHEN 0.2063902414073029 THEN ((rt0.c1)>=(rt0.c2)) WHEN (((rt0.c2, 0.008615922231975381, rt0.c2)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c0)) AND ((rt0.c1, rt0.c2, rt0.c2))) THEN (- (6.96619908E8)) WHEN rt0.c1 THEN rt0.c0 END) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (CASE WHEN 0.2063902414073029 THEN ((rt0.c1)>=(rt0.c2)) WHEN (((rt0.c2, 0.008615922231975381, rt0.c2)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c0)) AND ((rt0.c1, rt0.c2, rt0.c2))) THEN (- (6.96619908E8)) WHEN rt0.c1 THEN rt0.c0 END))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((CASE WHEN 0.2063902414073029 THEN ((rt0.c1)>=(rt0.c2)) WHEN (((rt0.c2, 0.008615922231975381, rt0.c2)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c0)) AND ((rt0.c1, rt0.c2, rt0.c2))) THEN (- (6.96619908E8)) WHEN rt0.c1 THEN rt0.c0 END) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG((vt0.c1 IN ())) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (AVG((vt0.c1 IN ())))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG((vt0.c1 IN ()))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG((vt0.c1 IN ())) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (AVG((vt0.c1 IN ())))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG((vt0.c1 IN ()))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0;
SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((- (CAST(x'27e8' AS BLOB)))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT ((- (CAST(x'27e8' AS BLOB)))))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((((- (CAST(x'27e8' AS BLOB)))) ISNULL));
SELECT ALL vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c1)))) IS TRUE)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c1)))) IS TRUE)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c1)))) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 WHERE (((vt0.c0) NOT BETWEEN (((vt0.c1)/(vt0.c1))) AND (((vt0.c1)<=(vt0.c1))))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE ((NOT (((vt0.c0) NOT BETWEEN (((vt0.c1)/(vt0.c1))) AND (((vt0.c1)<=(vt0.c1))))))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (((vt0.c1)/(vt0.c1))) AND (((vt0.c1)<=(vt0.c1))))) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING CASE GROUP_CONCAT(rt0.c2)  WHEN AVG(COUNT(*)) THEN (~ (MIN(rt0.c0))) END UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (CASE GROUP_CONCAT(rt0.c2)  WHEN AVG(COUNT(*)) THEN (~ (MIN(rt0.c0))) END)) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((CASE GROUP_CONCAT(rt0.c2)  WHEN AVG(COUNT(*)) THEN (~ (MIN(rt0.c0))) END) ISNULL);
SELECT ALL MAX(((((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)))OR((('-1548173166') NOT BETWEEN (rt0.c2) AND (rt0.c1))))) FROM rt0 ORDER BY LIKELIHOOD(LOWER(DISTINCT rt0.c0), 0.7435398911938391)  NULLS FIRST;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((((vt0.c1)<=(vt0.c1)), ((vt0.c0)<>(vt0.c1)), ((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))) AND (((NULL IN ()), TYPEOF(DISTINCT vt0.c0), ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((((vt0.c1)<=(vt0.c1)), ((vt0.c0)!=(vt0.c1)), ((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))) AND (((NULL IN ()), TYPEOF(DISTINCT vt0.c0), ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((((vt0.c1)<=(vt0.c1)), ((vt0.c0)!=(vt0.c1)), ((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))) AND (((NULL IN ()), TYPEOF(DISTINCT vt0.c0), ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CASE WHEN CASE WHEN '1' THEN vt0.c0 END THEN (x'' IN ()) ELSE vt0.c0 END) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CASE WHEN CASE WHEN '1' THEN vt0.c0 END THEN (x'' IN ()) ELSE vt0.c0 END))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CASE WHEN CASE WHEN '1' THEN vt0.c0 END THEN (x'' IN ()) ELSE vt0.c0 END) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c1, rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c1, rt0.c1, rt0.c2;
SELECT vt0.c1, rt0.c1, rt0.c2 FROM rt0, vt0 WHERE (TRIM(UPPER(vt0.c1))) GROUP BY vt0.c1, rt0.c1, rt0.c2 UNION SELECT ALL vt0.c1, rt0.c1, rt0.c2 FROM rt0, vt0 WHERE ((NOT (TRIM(UPPER(vt0.c1))))) GROUP BY vt0.c1, rt0.c1, rt0.c2 UNION SELECT vt0.c1, rt0.c1, rt0.c2 FROM rt0, vt0 WHERE (((TRIM(UPPER(vt0.c1))) ISNULL)) GROUP BY vt0.c1, rt0.c1, rt0.c2;
SELECT ALL vt0.c1, rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c1, rt0.c1, rt0.c2;
SELECT ALL vt0.c1, vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c1, vt0.c0, rt0.c1, rt0.c0;
SELECT vt0.c1, vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c1, vt0.c0, rt0.c1, rt0.c0 HAVING ((AVG(MAX(rt0.c2)))=(MAX('\no{fF'))) UNION ALL SELECT vt0.c1, vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c1, vt0.c0, rt0.c1, rt0.c0 HAVING (NOT (((AVG(MAX(rt0.c2)))=(MAX('\no{fF'))))) UNION ALL SELECT ALL vt0.c1, vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c1, vt0.c0, rt0.c1, rt0.c0 HAVING ((((AVG(MAX(rt0.c2)))=(MAX('\no{fF')))) ISNULL);
SELECT rt0.c0, rt0.c1 FROM rt0;
SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (CAST((rt0.c2 IN ()) AS NUMERIC)) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (CAST((rt0.c2 IN ()) AS NUMERIC)))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((CAST((rt0.c2 IN ()) AS NUMERIC)) ISNULL));
SELECT rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (HEX(CAST(rt0.c1 AS INTEGER))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (HEX(CAST(rt0.c1 AS INTEGER))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((HEX(CAST(rt0.c1 AS INTEGER))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)OR(IFNULL(DISTINCT rt0.c1, rt0.c2))))AND(((rt0.c1)GLOB(rt0.c2))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)OR(IFNULL(DISTINCT rt0.c1, rt0.c2))))AND(((rt0.c1)GLOB(rt0.c2))))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)OR(IFNULL(DISTINCT rt0.c1, rt0.c2))))AND(((rt0.c1)GLOB(rt0.c2))))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING TOTAL(COUNT(MIN(vt0.c0))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (TOTAL(COUNT(MIN(vt0.c0))))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((TOTAL(COUNT(MIN(vt0.c0)))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((((((((((vt0.c0)AND(vt0.c1)))AND(0x3fc30a02)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))AND(((vt0.c0) NOT BETWEEN (0.8886814403473714) AND (vt0.c1))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((((((((((vt0.c0)AND(vt0.c1)))AND(0X3fc30a02)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))AND(((vt0.c0) NOT BETWEEN (0.8886814403473714) AND (vt0.c1))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((((((((((((((vt0.c0)AND(vt0.c1)))AND(0x3fc30a02)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))AND(((vt0.c0) NOT BETWEEN (0.8886814403473714) AND (vt0.c1))))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((COALESCE(DISTINCT vt0.c1, vt0.c1) IN ())) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((COALESCE(DISTINCT vt0.c1, vt0.c1) IN ())))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((COALESCE(DISTINCT vt0.c1, vt0.c1) IN ())) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c1, rt0.c2;
SELECT vt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 WHERE ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 END IN ())) GROUP BY vt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL vt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 WHERE ((NOT ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 END IN ())))) GROUP BY vt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL vt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 WHERE ((((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 END IN ())) ISNULL)) GROUP BY vt0.c0, rt0.c1, rt0.c2;
SELECT vt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((((rt0.c1) NOT BETWEEN (SUM(COUNT(*))) AND (rt0.c1)))OR(MAX(rt0.c0))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (((((rt0.c1) NOT BETWEEN (SUM(COUNT(*))) AND (rt0.c1)))OR(MAX(rt0.c0))))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((((((rt0.c1) NOT BETWEEN (SUM(COUNT(*))) AND (rt0.c1)))OR(MAX(rt0.c0)))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE (((JULIANDAY(rt0.c1, rt0.c0, rt0.c2)) NOTNULL)) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((JULIANDAY(rt0.c1, rt0.c0, rt0.c2)) NOTNULL)))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE (((((JULIANDAY(rt0.c1, rt0.c0, rt0.c2)) NOTNULL)) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((LOWER(DISTINCT rt0.c0))) AND ((rt0.c1 COLLATE BINARY)))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c1)) NOT BETWEEN ((LOWER(DISTINCT rt0.c0))) AND ((rt0.c1 COLLATE BINARY)))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((LOWER(DISTINCT rt0.c0))) AND ((rt0.c1 COLLATE BINARY)))) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0 HAVING AVG(((((rt0.c0)AND(SUM(MAX(SUM(rt0.c2))))))AND(vt0.c1))) UNION ALL SELECT ALL vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0 HAVING (NOT (AVG(((((rt0.c0)AND(SUM(MAX(SUM(rt0.c2))))))AND(vt0.c1))))) UNION ALL SELECT ALL vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0 HAVING ((AVG(((((rt0.c0)AND(SUM(MAX(SUM(rt0.c2))))))AND(vt0.c1)))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (RTRIM(rt0.c0)) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (RTRIM(rt0.c0)))) UNION ALL SELECT * FROM rt0 WHERE (((RTRIM(rt0.c0)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (((vt0.c1) NOT BETWEEN (((rt0.c0) IS FALSE)) AND (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (((vt0.c1) NOT BETWEEN (((rt0.c0) IS FALSE)) AND (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((((vt0.c1) NOT BETWEEN (((rt0.c0) IS FALSE)) AND (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 WHERE (((((vt0.c0)<<('0.9606609187404987')))OR(vt0.c0 COLLATE BINARY))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE ((NOT (((((vt0.c0)<<('0.9606609187404987')))OR(vt0.c0 COLLATE BINARY))))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE (((((((vt0.c0)<<('0.9606609187404987')))OR(vt0.c0 COLLATE BINARY))) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((MAX(rt0.c0)) BETWEEN (ABS(DISTINCT rt0.c1)) AND (AVG(rt0.c2))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (((MAX(rt0.c0)) BETWEEN (ABS(DISTINCT rt0.c1)) AND (AVG(rt0.c2))))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((((MAX(rt0.c0)) BETWEEN (ABS(DISTINCT rt0.c1)) AND (AVG(rt0.c2)))) ISNULL);
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((MAX(rt0.c0)) BETWEEN (ABS(DISTINCT rt0.c1)) AND (AVG(rt0.c2))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (((MAX(rt0.c0)) BETWEEN (ABS(DISTINCT rt0.c1)) AND (AVG(rt0.c2))))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((((MAX(rt0.c0)) BETWEEN (ABS(DISTINCT rt0.c1)) AND (AVG(rt0.c2)))) ISNULL);
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT * FROM rt0, vt0;
SELECT * FROM rt0, vt0 WHERE (((((((((((((((0.48083531284444314)AND(vt0.c1)))AND(vt0.c1)))AND(rt0.c0)))OR(vt0.c0)))AND(rt0.c2)))OR(rt0.c1)))/((- (vt0.c1))))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((NOT (((((((((((((((0.48083531284444314)AND(vt0.c1)))AND(vt0.c1)))AND(rt0.c0)))OR(vt0.c0)))AND(rt0.c2)))OR(rt0.c1)))/((- (vt0.c1))))))) UNION ALL SELECT * FROM rt0, vt0 WHERE (((((((((((((((((0.48083531284444314)AND(vt0.c1)))AND(vt0.c1)))AND(rt0.c0)))OR(vt0.c0)))AND(rt0.c2)))OR(rt0.c1)))/((- (vt0.c1))))) ISNULL));
SELECT * FROM rt0, vt0;
SELECT DISTINCT rt0.c1 FROM rt0, vt0;
SELECT DISTINCT rt0.c1 FROM rt0, vt0 WHERE (((LOWER(rt0.c1))>=((vt0.c1 IN (rt0.c1))))) UNION SELECT DISTINCT rt0.c1 FROM rt0, vt0 WHERE ((NOT (((LOWER(rt0.c1))>=((vt0.c1 IN (rt0.c1))))))) UNION SELECT DISTINCT rt0.c1 FROM rt0, vt0 WHERE (((((LOWER(rt0.c1))>=((vt0.c1 IN (rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0, vt0;
SELECT ALL vt0.c0, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c0, rt0.c1;
SELECT ALL vt0.c0, rt0.c0, rt0.c1 FROM vt0, rt0 WHERE (((((((((vt0.c0)OR(rt0.c0)))OR(x'')))AND(rt0.c2)))OR(rt0.c0)) COLLATE RTRIM) GROUP BY vt0.c0, rt0.c0, rt0.c1 UNION SELECT vt0.c0, rt0.c0, rt0.c1 FROM vt0, rt0 WHERE ((NOT (((((((((vt0.c0)OR(rt0.c0)))OR(x'')))AND(rt0.c2)))OR(rt0.c0)) COLLATE RTRIM))) GROUP BY vt0.c0, rt0.c0, rt0.c1 UNION SELECT vt0.c0, rt0.c0, rt0.c1 FROM vt0, rt0 WHERE (((((((((((vt0.c0)OR(rt0.c0)))OR(x'')))AND(rt0.c2)))OR(rt0.c0)) COLLATE RTRIM) ISNULL)) GROUP BY vt0.c0, rt0.c0, rt0.c1;
SELECT ALL vt0.c0, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c0, rt0.c1;
SELECT ALL vt0.c0, vt0.c1, rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY vt0.c0, vt0.c1, rt0.c0, rt0.c1, rt0.c2;
SELECT ALL vt0.c0, vt0.c1, rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY vt0.c0, vt0.c1, rt0.c0, rt0.c1, rt0.c2 HAVING ((AVG(rt0.c0)) NOT BETWEEN (GROUP_CONCAT(TOTAL(vt0.c0))) AND (TOTAL(rt0.c1))) UNION ALL SELECT vt0.c0, vt0.c1, rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY vt0.c0, vt0.c1, rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (((AVG(rt0.c0)) NOT BETWEEN (GROUP_CONCAT(TOTAL(vt0.c0))) AND (TOTAL(rt0.c1))))) UNION ALL SELECT ALL vt0.c0, vt0.c1, rt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY vt0.c0, vt0.c1, rt0.c0, rt0.c1, rt0.c2 HAVING ((((AVG(rt0.c0)) NOT BETWEEN (GROUP_CONCAT(TOTAL(vt0.c0))) AND (TOTAL(rt0.c1)))) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((rt0.c1)) BETWEEN ((CAST(rt0.c1 AS REAL))) AND ((((((((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c2)))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c1)) BETWEEN ((CAST(rt0.c1 AS REAL))) AND ((((((((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c2)))))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((((rt0.c1)) BETWEEN ((CAST(rt0.c1 AS REAL))) AND ((((((((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c2)))))) ISNULL));
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ('') UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (''))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((('') ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT ALL vt0.c1, rt0.c2 FROM rt0 NATURAL JOIN vt0 GROUP BY vt0.c1, rt0.c2;
SELECT ALL vt0.c1, rt0.c2 FROM rt0 NATURAL JOIN vt0 WHERE (((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0))) IS FALSE)) GROUP BY vt0.c1, rt0.c2 UNION SELECT vt0.c1, rt0.c2 FROM rt0 NATURAL JOIN vt0 WHERE ((NOT (((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0))) IS FALSE)))) GROUP BY vt0.c1, rt0.c2 UNION SELECT ALL vt0.c1, rt0.c2 FROM rt0 NATURAL JOIN vt0 WHERE (((((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0))) IS FALSE)) ISNULL)) GROUP BY vt0.c1, rt0.c2;
SELECT ALL vt0.c1, rt0.c2 FROM rt0 NATURAL JOIN vt0 GROUP BY vt0.c1, rt0.c2;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING COUNT(((((((((rt0.c2)AND(COUNT(*))))AND(COUNT(AVG(COUNT(*))))))AND(MAX(rt0.c1))))AND(rt0.c1))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (COUNT(((((((((rt0.c2)AND(COUNT(*))))AND(COUNT(AVG(COUNT(*))))))AND(MAX(rt0.c1))))AND(rt0.c1))))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((COUNT(((((((((rt0.c2)AND(COUNT(*))))AND(COUNT(AVG(COUNT(*))))))AND(MAX(rt0.c1))))AND(rt0.c1)))) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND(DATE(vt0.c0, vt0.c1, 0.2982115088725671, vt0.c0, vt0.c0))))AND(((x'31b4d146')GLOB(vt0.c1))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND(DATE(vt0.c0, vt0.c1, 0.2982115088725671, vt0.c0, vt0.c0))))AND(((x'31b4d146')GLOB(vt0.c1))))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND(DATE(vt0.c0, vt0.c1, 0.2982115088725671, vt0.c0, vt0.c0))))AND(((x'31b4d146')GLOB(vt0.c1))))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM vt0 INNER JOIN rt0 ON (((((((0.17998372600073753, rt0.c2, rt0.c2))<>((rt0.c0, rt0.c0, rt0.c2))))OR(LAST_INSERT_ROWID())))AND((NOT ('-2103277425'))));
SELECT DISTINCT rt0.c0, rt0.c1 FROM vt0 INNER JOIN rt0 ON (((((((0.17998372600073753, rt0.c2, rt0.c2))<>((rt0.c0, rt0.c0, rt0.c2))))OR(LAST_INSERT_ROWID())))AND((NOT ('-2103277425')))) WHERE (vt0.c0) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM vt0 INNER JOIN rt0 ON (((((((0.17998372600073753, rt0.c2, rt0.c2))!=((rt0.c0, rt0.c0, rt0.c2))))OR(LAST_INSERT_ROWID())))AND((NOT ('-2103277425')))) WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM vt0 INNER JOIN rt0 ON (((((((0.17998372600073753, rt0.c2, rt0.c2))<>((rt0.c0, rt0.c0, rt0.c2))))OR(LAST_INSERT_ROWID())))AND((NOT ('-2103277425')))) WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1 FROM vt0 INNER JOIN rt0 ON (((((((0.17998372600073753, rt0.c2, rt0.c2))<>((rt0.c0, rt0.c0, rt0.c2))))OR(LAST_INSERT_ROWID())))AND((NOT ('-2103277425'))));
SELECT ALL vt0.c1, rt0.c1, rt0.c2, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c1, rt0.c2, rt0.c0;
SELECT vt0.c1, rt0.c1, rt0.c2, rt0.c0 FROM vt0, rt0 WHERE (((LIKELY(rt0.c2)) BETWEEN (HEX(vt0.c0)) AND (rt0.c2))) GROUP BY vt0.c1, rt0.c1, rt0.c2, rt0.c0 UNION SELECT vt0.c1, rt0.c1, rt0.c2, rt0.c0 FROM vt0, rt0 WHERE ((NOT (((LIKELY(rt0.c2)) BETWEEN (HEX(vt0.c0)) AND (rt0.c2))))) GROUP BY vt0.c1, rt0.c1, rt0.c2, rt0.c0 UNION SELECT vt0.c1, rt0.c1, rt0.c2, rt0.c0 FROM vt0, rt0 WHERE (((((LIKELY(rt0.c2)) BETWEEN (HEX(vt0.c0)) AND (rt0.c2))) ISNULL)) GROUP BY vt0.c1, rt0.c1, rt0.c2, rt0.c0;
SELECT ALL vt0.c1, rt0.c1, rt0.c2, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c1, rt0.c2, rt0.c0;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((SUM(COUNT(*))) IS TRUE) COLLATE RTRIM UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (((SUM(COUNT(*))) IS TRUE) COLLATE RTRIM)) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((((SUM(COUNT(*))) IS TRUE) COLLATE RTRIM) ISNULL);
SELECT ALL SUM(NULL) FROM vt0, rt0;
SELECT rt0.c0, rt0.c1, vt0.c1, rt0.c2 FROM rt0, vt0;
SELECT ALL rt0.c0, rt0.c1, vt0.c1, rt0.c2 FROM rt0, vt0 WHERE (CAST(rt0.c1 COLLATE RTRIM AS REAL)) UNION ALL SELECT ALL rt0.c0, rt0.c1, vt0.c1, rt0.c2 FROM rt0, vt0 WHERE ((NOT (CAST(rt0.c1 COLLATE RTRIM AS REAL)))) UNION ALL SELECT rt0.c0, rt0.c1, vt0.c1, rt0.c2 FROM rt0, vt0 WHERE (((CAST(rt0.c1 COLLATE RTRIM AS REAL)) ISNULL));
SELECT rt0.c0, rt0.c1, vt0.c1, rt0.c2 FROM rt0, vt0;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((0Xffffffff8445ddf1)AND(((((rt0.c1)AND(rt0.c0)))AND(rt0.c2))))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT (((0xffffffff8445ddf1)AND(((((rt0.c1)AND(rt0.c0)))AND(rt0.c2))))))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((((0Xffffffff8445ddf1)AND(((((rt0.c1)AND(rt0.c0)))AND(rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT ALL rt0.c1, vt0.c0, vt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c0, vt0.c1, rt0.c0;
SELECT rt0.c1, vt0.c0, vt0.c1, rt0.c0 FROM vt0, rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c1 END) NOT BETWEEN (LAST_INSERT_ROWID()) AND (CASE WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE rt0.c0 END))) GROUP BY rt0.c1, vt0.c0, vt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, vt0.c0, vt0.c1, rt0.c0 FROM vt0, rt0 WHERE ((NOT (((CASE WHEN rt0.c0 THEN rt0.c1 END) NOT BETWEEN (LAST_INSERT_ROWID()) AND (CASE WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE rt0.c0 END))))) GROUP BY rt0.c1, vt0.c0, vt0.c1, rt0.c0 UNION SELECT rt0.c1, vt0.c0, vt0.c1, rt0.c0 FROM vt0, rt0 WHERE (((((CASE WHEN rt0.c0 THEN rt0.c1 END) NOT BETWEEN (LAST_INSERT_ROWID()) AND (CASE WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE rt0.c0 END))) ISNULL)) GROUP BY rt0.c1, vt0.c0, vt0.c1, rt0.c0;
SELECT ALL rt0.c1, vt0.c0, vt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c0, vt0.c1, rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING AVG(((GROUP_CONCAT(TOTAL(COUNT(*))))-(MIN(rt0.c1)))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (AVG(((GROUP_CONCAT(TOTAL(COUNT(*))))-(MIN(rt0.c1)))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((AVG(((GROUP_CONCAT(TOTAL(COUNT(*))))-(MIN(rt0.c1))))) ISNULL);
SELECT vt0.c1, vt0.c0 FROM vt0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (((json_array_length(vt0.c0, NULL)) NOT BETWEEN ((~ (vt0.c1))) AND (((x'')+(vt0.c0))))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((json_array_length(vt0.c0, NULL)) NOT BETWEEN ((~ (vt0.c1))) AND (((x'')+(vt0.c0))))))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (((((json_array_length(vt0.c0, NULL)) NOT BETWEEN ((~ (vt0.c1))) AND (((x'')+(vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE (x'') UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (x''))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE (((x'') ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT vt0.c0, rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c1, rt0.c0;
SELECT ALL vt0.c0, rt0.c1, rt0.c0 FROM rt0, vt0 WHERE (rt0.c2) GROUP BY vt0.c0, rt0.c1, rt0.c0 UNION SELECT vt0.c0, rt0.c1, rt0.c0 FROM rt0, vt0 WHERE ((NOT (rt0.c2))) GROUP BY vt0.c0, rt0.c1, rt0.c0 UNION SELECT vt0.c0, rt0.c1, rt0.c0 FROM rt0, vt0 WHERE (((rt0.c2) ISNULL)) GROUP BY vt0.c0, rt0.c1, rt0.c0;
SELECT vt0.c0, rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING CAST(MIN(rt0.c2) AS BLOB) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (CAST(MIN(rt0.c2) AS BLOB))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((CAST(MIN(rt0.c2) AS BLOB)) ISNULL);
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING CAST(MIN(rt0.c2) AS BLOB) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (CAST(MIN(rt0.c2) AS BLOB))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((CAST(MIN(rt0.c2) AS BLOB)) ISNULL);
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((((((rt0.c0 COLLATE NOCASE)OR(((rt0.c1)>(rt0.c2)))))AND((((rt0.c0))<>((rt0.c0))))))OR(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))))OR(CASE WHEN rt0.c0 THEN '-348744242' WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((((((((rt0.c0 COLLATE NOCASE)OR(((rt0.c1)>(rt0.c2)))))AND((((rt0.c0))<>((rt0.c0))))))OR(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))))OR(CASE WHEN rt0.c0 THEN '-348744242' WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((((((((rt0.c0 COLLATE NOCASE)OR(((rt0.c1)>(rt0.c2)))))AND((((rt0.c0))<>((rt0.c0))))))OR(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))))OR(CASE WHEN rt0.c0 THEN '-348744242' WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END))) ISNULL));
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT vt0.c0, rt0.c0, rt0.c1, rt0.c2, vt0.c1 FROM rt0, vt0;
SELECT DISTINCT vt0.c0, rt0.c0, rt0.c1, rt0.c2, vt0.c1 FROM rt0, vt0 WHERE (((vt0.c0 IN ()) IN (vt0.c1 COLLATE RTRIM))) UNION SELECT DISTINCT vt0.c0, rt0.c0, rt0.c1, rt0.c2, vt0.c1 FROM rt0, vt0 WHERE ((NOT (((vt0.c0 IN ()) IN (vt0.c1 COLLATE RTRIM))))) UNION SELECT DISTINCT vt0.c0, rt0.c0, rt0.c1, rt0.c2, vt0.c1 FROM rt0, vt0 WHERE (((((vt0.c0 IN ()) IN (vt0.c1 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c0, rt0.c1, rt0.c2, vt0.c1 FROM rt0, vt0;
SELECT rt0.c2, rt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON (~ (rt0.c0)) GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON (~ (rt0.c0)) WHERE (((((((((vt0.c1)AND(rt0.c0)))OR(rt0.c1)))OR(((rt0.c1) ISNULL))))OR(((((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c1)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))AND(rt0.c2))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON (~ (rt0.c0)) WHERE ((NOT (((((((((vt0.c1)AND(rt0.c0)))OR(rt0.c1)))OR(((rt0.c1) ISNULL))))OR(((((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c1)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))AND(rt0.c2))))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON (~ (rt0.c0)) WHERE (((((((((((vt0.c1)AND(rt0.c0)))OR(rt0.c1)))OR(((rt0.c1) ISNULL))))OR(((((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c1)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))AND(rt0.c2))))) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON (~ (rt0.c0)) GROUP BY rt0.c2, rt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c1, vt0.c0, vt0.c1 FROM rt0 FULL OUTER JOIN vt0 ON ((((rt0.c2) IS TRUE)) NOTNULL);
SELECT rt0.c1, vt0.c0, vt0.c1 FROM rt0 FULL OUTER JOIN vt0 ON ((((rt0.c2) IS TRUE)) NOTNULL) WHERE (((((NULL) NOT BETWEEN (vt0.c1) AND (vt0.c0))) BETWEEN (((vt0.c0) IS TRUE)) AND (((((rt0.c0)OR(vt0.c1)))OR(vt0.c1))))) UNION ALL SELECT rt0.c1, vt0.c0, vt0.c1 FROM rt0 FULL OUTER JOIN vt0 ON ((((rt0.c2) IS TRUE)) NOTNULL) WHERE ((NOT (((((NULL) NOT BETWEEN (vt0.c1) AND (vt0.c0))) BETWEEN (((vt0.c0) IS TRUE)) AND (((((rt0.c0)OR(vt0.c1)))OR(vt0.c1))))))) UNION ALL SELECT ALL rt0.c1, vt0.c0, vt0.c1 FROM rt0 FULL OUTER JOIN vt0 ON ((((rt0.c2) IS TRUE)) NOTNULL) WHERE (((((((NULL) NOT BETWEEN (vt0.c1) AND (vt0.c0))) BETWEEN (((vt0.c0) IS TRUE)) AND (((((rt0.c0)OR(vt0.c1)))OR(vt0.c1))))) ISNULL));
SELECT rt0.c1, vt0.c0, vt0.c1 FROM rt0 FULL OUTER JOIN vt0 ON ((((rt0.c2) IS TRUE)) NOTNULL);
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 NATURAL JOIN vt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 NATURAL JOIN vt0 WHERE (((CAST(rt0.c2 AS REAL))IS(rt0.c0 COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 NATURAL JOIN vt0 WHERE ((NOT (((CAST(rt0.c2 AS REAL))IS(rt0.c0 COLLATE RTRIM))))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 NATURAL JOIN vt0 WHERE (((((CAST(rt0.c2 AS REAL))IS(rt0.c0 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 NATURAL JOIN vt0;
SELECT rt0.c2, vt0.c0, rt0.c0, rt0.c1, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c0, rt0.c1, vt0.c1;
SELECT rt0.c2, vt0.c0, rt0.c0, rt0.c1, vt0.c1 FROM rt0, vt0 WHERE ((((rt0.c1)) NOT BETWEEN (((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))) AND ((0xffffffffd130a701)))) GROUP BY rt0.c2, vt0.c0, rt0.c0, rt0.c1, vt0.c1 UNION SELECT rt0.c2, vt0.c0, rt0.c0, rt0.c1, vt0.c1 FROM rt0, vt0 WHERE ((NOT ((((rt0.c1)) NOT BETWEEN (((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))) AND ((0xffffffffd130a701)))))) GROUP BY rt0.c2, vt0.c0, rt0.c0, rt0.c1, vt0.c1 UNION SELECT rt0.c2, vt0.c0, rt0.c0, rt0.c1, vt0.c1 FROM rt0, vt0 WHERE ((((((rt0.c1)) NOT BETWEEN (((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))) AND ((0Xffffffffd130a701)))) ISNULL)) GROUP BY rt0.c2, vt0.c0, rt0.c0, rt0.c1, vt0.c1;
SELECT rt0.c2, vt0.c0, rt0.c0, rt0.c1, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c0, rt0.c1, vt0.c1;
SELECT vt0.c1, rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c1, rt0.c2;
SELECT vt0.c1, rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c1, rt0.c2 HAVING COUNT(*) UNION ALL SELECT vt0.c1, rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c1, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c1, rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c1, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c1, rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c1, rt0.c2;
SELECT vt0.c1, rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c1, rt0.c2 HAVING COUNT(*) UNION ALL SELECT vt0.c1, rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c1, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c1, rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c1, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c1, rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c1, rt0.c2;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (load_extension(x'' COLLATE BINARY, ((vt0.c0)LIKE(vt0.c0)))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (load_extension(x'' COLLATE BINARY, ((vt0.c0)LIKE(vt0.c0)))))) UNION ALL SELECT * FROM vt0 WHERE (((load_extension(x'' COLLATE BINARY, ((vt0.c0)LIKE(vt0.c0)))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE ((((((x''))<((rt0.c0))))&((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((((((x''))<((rt0.c0))))&((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))))))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE ((((((((x''))<((rt0.c0))))&((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (((((((((CAST(vt0.c1 AS INTEGER))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))AND((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND(((x'2300') ISNULL))))OR((vt0.c0 IN (vt0.c1))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((((((((CAST(vt0.c1 AS INTEGER))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))AND((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND(((x'2300') ISNULL))))OR((vt0.c0 IN (vt0.c1))))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (((((((((((CAST(vt0.c1 AS INTEGER))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))AND((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND(((x'2300') ISNULL))))OR((vt0.c0 IN (vt0.c1))))) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0 HAVING json_extract(CAST(rt0.c2 AS TEXT), COUNT(*)) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (json_extract(CAST(rt0.c2 AS TEXT), COUNT(*)))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0 HAVING ((json_extract(CAST(rt0.c2 AS TEXT), COUNT(*))) ISNULL);
SELECT MAX(NULL) FROM rt0, vt0 ORDER BY ((((vt0.c0) IS FALSE))IS(CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END)) ASC  NULLS LAST;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c1))>((vt0.c0, vt0.c1, vt0.c0))))IS NOT(0.4852408389381301))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((((((vt0.c0, vt0.c0, vt0.c1))>((vt0.c0, vt0.c1, vt0.c0))))IS NOT(0.4852408389381301))))) UNION ALL SELECT * FROM vt0 WHERE ((((((((vt0.c0, vt0.c0, vt0.c1))>((vt0.c0, vt0.c1, vt0.c0))))IS NOT(0.4852408389381301))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (CHAR(vt0.c1) COLLATE BINARY) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (CHAR(vt0.c1) COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((CHAR(vt0.c1) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE (UPPER(rt0.c0) COLLATE NOCASE) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (UPPER(rt0.c0) COLLATE NOCASE))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE (((UPPER(rt0.c0) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0 HAVING SUM(((AVG(GROUP_CONCAT(rt0.c2)))IS('-885041628'))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (SUM(((AVG(GROUP_CONCAT(rt0.c2)))IS('-885041628'))))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0 HAVING ((SUM(((AVG(GROUP_CONCAT(rt0.c2)))IS('-885041628')))) ISNULL);
SELECT vt0.c0, rt0.c2, rt0.c0 FROM rt0, vt0;
SELECT ALL vt0.c0, rt0.c2, rt0.c0 FROM rt0, vt0 WHERE ((((rt0.c2, rt0.c0, 0.46413047856235334)) BETWEEN ((((vt0.c1)AND(rt0.c1)), CASE WHEN rt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c1 THEN rt0.c2 ELSE NULL END, (vt0.c1 IN (vt0.c0)))) AND ((((vt0.c1) BETWEEN (rt0.c2) AND (vt0.c0)), 'zZ.6t\A', rt0.c2)))) UNION ALL SELECT ALL vt0.c0, rt0.c2, rt0.c0 FROM rt0, vt0 WHERE ((NOT ((((rt0.c2, rt0.c0, 0.46413047856235334)) BETWEEN ((((vt0.c1)AND(rt0.c1)), CASE WHEN rt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c1 THEN rt0.c2 ELSE NULL END, (vt0.c1 IN (vt0.c0)))) AND ((((vt0.c1) BETWEEN (rt0.c2) AND (vt0.c0)), 'zZ.6t\A', rt0.c2)))))) UNION ALL SELECT ALL vt0.c0, rt0.c2, rt0.c0 FROM rt0, vt0 WHERE ((((((rt0.c2, rt0.c0, 0.46413047856235334)) BETWEEN ((((vt0.c1)AND(rt0.c1)), CASE WHEN rt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c1 THEN rt0.c2 ELSE NULL END, (vt0.c1 IN (vt0.c0)))) AND ((((vt0.c1) BETWEEN (rt0.c2) AND (vt0.c0)), 'zZ.6t\A', rt0.c2)))) ISNULL));
SELECT vt0.c0, rt0.c2, rt0.c0 FROM rt0, vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((CAST(rt0.c0 AS BLOB))<>(rt0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((CAST(rt0.c0 AS BLOB))<>(rt0.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((CAST(rt0.c0 AS BLOB))<>(rt0.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((((vt0.c1 IN ()))+('1257040439'))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c1 IN ()))+('1257040439'))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((((((vt0.c1 IN ()))+('1257040439'))) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL rt0.c1, vt0.c0, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c0, rt0.c0;
SELECT rt0.c1, vt0.c0, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c0, rt0.c0 HAVING GROUP_CONCAT(COUNT(*)) UNION ALL SELECT ALL rt0.c1, vt0.c0, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c0, rt0.c0 HAVING (NOT (GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT ALL rt0.c1, vt0.c0, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c0, rt0.c0 HAVING ((GROUP_CONCAT(COUNT(*))) ISNULL);
SELECT SUM((LENGTH(rt0.c2) IN ())) FROM rt0, vt0;
SELECT ALL vt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0;
SELECT vt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0 WHERE ((NOT (CAST(vt0.c0 AS REAL)))) UNION ALL SELECT vt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0 WHERE ((NOT ((NOT (CAST(vt0.c0 AS REAL)))))) UNION ALL SELECT ALL vt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0 WHERE ((((NOT (CAST(vt0.c0 AS REAL)))) ISNULL));
SELECT ALL vt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (NULL) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM rt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, vt0.c1, rt0.c2 FROM vt0 LEFT OUTER JOIN rt0 ON ((0X7e73479c IN ()) IN ()) GROUP BY rt0.c1, vt0.c1, rt0.c2;
SELECT rt0.c1, vt0.c1, rt0.c2 FROM vt0 LEFT OUTER JOIN rt0 ON ((0X7e73479c IN ()) IN ()) WHERE (((((((vt0.c0)OR(rt0.c0)))AND(rt0.c0))) NOT BETWEEN (rt0.c0) AND (NULLIF(vt0.c0, rt0.c1)))) GROUP BY rt0.c1, vt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, vt0.c1, rt0.c2 FROM vt0 LEFT OUTER JOIN rt0 ON ((0x7e73479c IN ()) IN ()) WHERE ((NOT (((((((vt0.c0)OR(rt0.c0)))AND(rt0.c0))) NOT BETWEEN (rt0.c0) AND (NULLIF(vt0.c0, rt0.c1)))))) GROUP BY rt0.c1, vt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, vt0.c1, rt0.c2 FROM vt0 LEFT OUTER JOIN rt0 ON ((0X7e73479c IN ()) IN ()) WHERE (((((((((vt0.c0)OR(rt0.c0)))AND(rt0.c0))) NOT BETWEEN (rt0.c0) AND (NULLIF(vt0.c0, rt0.c1)))) ISNULL)) GROUP BY rt0.c1, vt0.c1, rt0.c2;
SELECT ALL rt0.c1, vt0.c1, rt0.c2 FROM vt0 LEFT OUTER JOIN rt0 ON ((0X7e73479c IN ()) IN ()) GROUP BY rt0.c1, vt0.c1, rt0.c2;
SELECT ALL rt0.c1 FROM vt0 CROSS JOIN rt0 ON ((CASE '1555943751'  WHEN vt0.c0 THEN rt0.c2 END) BETWEEN (SQLITE_COMPILEOPTION_USED(rt0.c2)) AND (CAST(rt0.c1 AS REAL))) GROUP BY rt0.c1;
SELECT rt0.c1 FROM vt0 CROSS JOIN rt0 ON ((CASE '1555943751'  WHEN vt0.c0 THEN rt0.c2 END) BETWEEN (SQLITE_COMPILEOPTION_USED(rt0.c2)) AND (CAST(rt0.c1 AS REAL))) GROUP BY rt0.c1 HAVING (((MIN(COUNT(GROUP_CONCAT(TOTAL(rt0.c1))))))==((MIN(COUNT(*))))) UNION ALL SELECT rt0.c1 FROM vt0 CROSS JOIN rt0 ON ((CASE '1555943751'  WHEN vt0.c0 THEN rt0.c2 END) BETWEEN (SQLITE_COMPILEOPTION_USED(rt0.c2)) AND (CAST(rt0.c1 AS REAL))) GROUP BY rt0.c1 HAVING (NOT ((((MIN(COUNT(GROUP_CONCAT(TOTAL(rt0.c1))))))==((MIN(COUNT(*))))))) UNION ALL SELECT rt0.c1 FROM vt0 CROSS JOIN rt0 ON ((CASE '1555943751'  WHEN vt0.c0 THEN rt0.c2 END) BETWEEN (SQLITE_COMPILEOPTION_USED(rt0.c2)) AND (CAST(rt0.c1 AS REAL))) GROUP BY rt0.c1 HAVING (((((MIN(COUNT(GROUP_CONCAT(TOTAL(rt0.c1))))))==((MIN(COUNT(*)))))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (LIKELY(DISTINCT vt0.c1 COLLATE NOCASE)) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (LIKELY(DISTINCT vt0.c1 COLLATE NOCASE)))) UNION ALL SELECT ALL * FROM vt0 WHERE (((LIKELY(DISTINCT vt0.c1 COLLATE NOCASE)) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (((((((((0.5502740330106916)AND(CAST(vt0.c1 AS TEXT))))AND(((rt0.c0) IS TRUE))))OR(((((((((vt0.c1)OR(rt0.c0)))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))))AND(((((vt0.c1)AND(vt0.c0)))AND(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (((((((((0.5502740330106916)AND(CAST(vt0.c1 AS TEXT))))AND(((rt0.c0) IS TRUE))))OR(((((((((vt0.c1)OR(rt0.c0)))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))))AND(((((vt0.c1)AND(vt0.c0)))AND(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((((((((((0.5502740330106916)AND(CAST(vt0.c1 AS TEXT))))AND(((rt0.c0) IS TRUE))))OR(((((((((vt0.c1)OR(rt0.c0)))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))))AND(((((vt0.c1)AND(vt0.c0)))AND(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0, rt0 WHERE ((((rt0.c0 IN ())) ISNULL)) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0, rt0 WHERE ((NOT ((((rt0.c0 IN ())) ISNULL)))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0, rt0 WHERE ((((((rt0.c0 IN ())) ISNULL)) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((vt0.c0) BETWEEN (COUNT(*)) AND (TOTAL(MIN(vt0.c1)))) COLLATE NOCASE UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (((vt0.c0) BETWEEN (COUNT(*)) AND (TOTAL(MIN(vt0.c1)))) COLLATE NOCASE)) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((((vt0.c0) BETWEEN (COUNT(*)) AND (TOTAL(MIN(vt0.c1)))) COLLATE NOCASE) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE ((((~ (vt0.c0))) IS TRUE)) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((((~ (vt0.c0))) IS TRUE)))) UNION ALL SELECT * FROM vt0 WHERE ((((((~ (vt0.c0))) IS TRUE)) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0)=(vt0.c0)))||(((vt0.c1)&(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.c0)==(vt0.c0)))||(((vt0.c1)&(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0)=(vt0.c0)))||(((vt0.c1)&(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0, vt0 WHERE (TRIM(DISTINCT (((vt0.c0))<>((rt0.c2))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0, vt0 WHERE ((NOT (TRIM(DISTINCT (((vt0.c0))<>((rt0.c2))))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0, vt0 WHERE (((TRIM(DISTINCT (((vt0.c0))<>((rt0.c2))))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1;
SELECT vt0.c1, vt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON (('') NOT BETWEEN ((- (vt0.c0))) AND ((((rt0.c2))<((rt0.c2))))) GROUP BY vt0.c1, vt0.c0, rt0.c1;
SELECT vt0.c1, vt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON (('') NOT BETWEEN ((- (vt0.c0))) AND ((((rt0.c2))<((rt0.c2))))) GROUP BY vt0.c1, vt0.c0, rt0.c1 HAVING (+ (((MAX(vt0.c0))&(rt0.c1)))) UNION ALL SELECT ALL vt0.c1, vt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON (('') NOT BETWEEN ((- (vt0.c0))) AND ((((rt0.c2))<((rt0.c2))))) GROUP BY vt0.c1, vt0.c0, rt0.c1 HAVING (NOT ((+ (((MAX(vt0.c0))&(rt0.c1)))))) UNION ALL SELECT ALL vt0.c1, vt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON (('') NOT BETWEEN ((- (vt0.c0))) AND ((((rt0.c2))<((rt0.c2))))) GROUP BY vt0.c1, vt0.c0, rt0.c1 HAVING (((+ (((MAX(vt0.c0))&(rt0.c1))))) ISNULL);
SELECT vt0.c1, vt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON (('') NOT BETWEEN ((- (vt0.c0))) AND ((((rt0.c2))<((rt0.c2))))) GROUP BY vt0.c1, vt0.c0, rt0.c1;
SELECT vt0.c1, vt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON (('') NOT BETWEEN ((- (vt0.c0))) AND ((((rt0.c2))<((rt0.c2))))) GROUP BY vt0.c1, vt0.c0, rt0.c1 HAVING (+ (((MAX(vt0.c0))&(rt0.c1)))) UNION ALL SELECT ALL vt0.c1, vt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON (('') NOT BETWEEN ((- (vt0.c0))) AND ((((rt0.c2))<((rt0.c2))))) GROUP BY vt0.c1, vt0.c0, rt0.c1 HAVING (NOT ((+ (((MAX(vt0.c0))&(rt0.c1)))))) UNION ALL SELECT ALL vt0.c1, vt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON (('') NOT BETWEEN ((- (vt0.c0))) AND ((((rt0.c2))<((rt0.c2))))) GROUP BY vt0.c1, vt0.c0, rt0.c1 HAVING (((+ (((MAX(vt0.c0))&(rt0.c1))))) ISNULL);
SELECT vt0.c1, vt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON (('') NOT BETWEEN ((- (vt0.c0))) AND ((((rt0.c2))<((rt0.c2))))) GROUP BY vt0.c1, vt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((rt0.c1 IN ((((rt0.c2, rt0.c2, NULL))<=((rt0.c1, rt0.c0, rt0.c0))), ((rt0.c0)&(rt0.c0)), (rt0.c1 IN (1.676028479E9))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((rt0.c1 IN ((((rt0.c2, rt0.c2, NULL))<=((rt0.c1, rt0.c0, rt0.c0))), ((rt0.c0)&(rt0.c0)), (rt0.c1 IN (1.676028479E9))))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((rt0.c1 IN ((((rt0.c2, rt0.c2, NULL))<=((rt0.c1, rt0.c0, rt0.c0))), ((rt0.c0)&(rt0.c0)), (rt0.c1 IN (1.676028479E9))))) ISNULL));
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)), ((-1139665962)%(vt0.c1)), (NOT (vt0.c0))))>(((~ (vt0.c0)), vt0.c1 COLLATE RTRIM, ((((vt0.c0)AND(NULL)))AND(vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)), ((-1139665962)%(vt0.c1)), (NOT (vt0.c0))))>(((~ (vt0.c0)), vt0.c1 COLLATE RTRIM, ((((vt0.c0)AND(NULL)))AND(vt0.c0)))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)), ((-1139665962)%(vt0.c1)), (NOT (vt0.c0))))>(((~ (vt0.c0)), vt0.c1 COLLATE RTRIM, ((((vt0.c0)AND(NULL)))AND(vt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c0;
SELECT ALL rt0.c1, vt0.c0 FROM vt0, rt0 WHERE (((((rt0.c0)IS(vt0.c0)))==((rt0.c0 IN (vt0.c1))))) GROUP BY rt0.c1, vt0.c0 UNION SELECT rt0.c1, vt0.c0 FROM vt0, rt0 WHERE ((NOT (((((rt0.c0)IS(vt0.c0)))==((rt0.c0 IN (vt0.c1))))))) GROUP BY rt0.c1, vt0.c0 UNION SELECT ALL rt0.c1, vt0.c0 FROM vt0, rt0 WHERE (((((((rt0.c0)IS(vt0.c0)))==((rt0.c0 IN (vt0.c1))))) ISNULL)) GROUP BY rt0.c1, vt0.c0;
SELECT ALL rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c0;
SELECT rt0.c1, rt0.c2, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2, vt0.c1;
SELECT ALL rt0.c1, rt0.c2, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2, vt0.c1 HAVING AVG(CASE WHEN COUNT(*) THEN AVG(rt0.c0) END) UNION ALL SELECT rt0.c1, rt0.c2, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2, vt0.c1 HAVING (NOT (AVG(CASE WHEN COUNT(*) THEN AVG(rt0.c0) END))) UNION ALL SELECT ALL rt0.c1, rt0.c2, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2, vt0.c1 HAVING ((AVG(CASE WHEN COUNT(*) THEN AVG(rt0.c0) END)) ISNULL);
SELECT ALL TOTAL(((vt0.c0 COLLATE BINARY)|(((-2075795983) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) FROM vt0, rt0 ORDER BY ((CAST('2037723750' AS TEXT))LIKE(rt0.c0 COLLATE RTRIM))  NULLS LAST;
SELECT ALL vt0.c1 FROM vt0;
SELECT vt0.c1 FROM vt0 WHERE (((CAST(vt0.c1 AS BLOB))>(((((vt0.c1)AND(vt0.c1)))OR(vt0.c0))))) UNION ALL SELECT vt0.c1 FROM vt0 WHERE ((NOT (((CAST(vt0.c1 AS BLOB))>(((((vt0.c1)AND(vt0.c1)))OR(vt0.c0))))))) UNION ALL SELECT vt0.c1 FROM vt0 WHERE (((((CAST(vt0.c1 AS BLOB))>(((((vt0.c1)AND(vt0.c1)))OR(vt0.c0))))) ISNULL));
SELECT ALL vt0.c1 FROM vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CASE WHEN x'' THEN (((rt0.c2, NULL, rt0.c0))>((rt0.c1, rt0.c1, rt0.c1))) END) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CASE WHEN x'' THEN (((rt0.c2, NULL, rt0.c0))>((rt0.c1, rt0.c1, rt0.c1))) END))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CASE WHEN x'' THEN (((rt0.c2, NULL, rt0.c0))>((rt0.c1, rt0.c1, rt0.c1))) END) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, rt0.c1, vt0.c0, vt0.c1, rt0.c2 FROM vt0 CROSS JOIN rt0 ON (NULL IN ()) GROUP BY rt0.c0, rt0.c1, vt0.c0, vt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, vt0.c0, vt0.c1, rt0.c2 FROM vt0 CROSS JOIN rt0 ON (NULL IN ()) WHERE ((('-1843705631')<=(rt0.c1)) COLLATE NOCASE) GROUP BY rt0.c0, rt0.c1, vt0.c0, vt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, vt0.c0, vt0.c1, rt0.c2 FROM vt0 CROSS JOIN rt0 ON (NULL IN ()) WHERE ((NOT ((('-1843705631')<=(rt0.c1)) COLLATE NOCASE))) GROUP BY rt0.c0, rt0.c1, vt0.c0, vt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, vt0.c0, vt0.c1, rt0.c2 FROM vt0 CROSS JOIN rt0 ON (NULL IN ()) WHERE ((((('-1843705631')<=(rt0.c1)) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c0, rt0.c1, vt0.c0, vt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, vt0.c0, vt0.c1, rt0.c2 FROM vt0 CROSS JOIN rt0 ON (NULL IN ()) GROUP BY rt0.c0, rt0.c1, vt0.c0, vt0.c1, rt0.c2;
SELECT ALL vt0.c0, vt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY vt0.c0, vt0.c1, rt0.c2;
SELECT vt0.c0, vt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY vt0.c0, vt0.c1, rt0.c2 HAVING ((((((((COUNT(*))OR(((rt0.c1)AND(COUNT(rt0.c0))))))AND(MAX(MAX(TOTAL(rt0.c0))))))AND(COUNT(vt0.c1))))AND(COUNT(rt0.c0))) UNION ALL SELECT ALL vt0.c0, vt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY vt0.c0, vt0.c1, rt0.c2 HAVING (NOT (((((((((COUNT(*))OR(((rt0.c1)AND(COUNT(rt0.c0))))))AND(MAX(MAX(TOTAL(rt0.c0))))))AND(COUNT(vt0.c1))))AND(COUNT(rt0.c0))))) UNION ALL SELECT vt0.c0, vt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY vt0.c0, vt0.c1, rt0.c2 HAVING ((((((((((COUNT(*))OR(((rt0.c1)AND(COUNT(rt0.c0))))))AND(MAX(MAX(TOTAL(rt0.c0))))))AND(COUNT(vt0.c1))))AND(COUNT(rt0.c0)))) ISNULL);
SELECT ALL vt0.c1 FROM rt0, vt0;
SELECT vt0.c1 FROM rt0, vt0 WHERE (CASE WHEN CAST(rt0.c1 AS INTEGER) THEN json_array_length(rt0.c0, rt0.c2) ELSE (((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))) END) UNION ALL SELECT ALL vt0.c1 FROM rt0, vt0 WHERE ((NOT (CASE WHEN CAST(rt0.c1 AS INTEGER) THEN json_array_length(rt0.c0, rt0.c2) ELSE (((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))) END))) UNION ALL SELECT ALL vt0.c1 FROM rt0, vt0 WHERE (((CASE WHEN CAST(rt0.c1 AS INTEGER) THEN json_array_length(rt0.c0, rt0.c2) ELSE (((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))) END) ISNULL));
SELECT ALL vt0.c1 FROM rt0, vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE (((HEX(vt0.c0))<>(((vt0.c0) IS FALSE)))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((HEX(vt0.c0))<>(((vt0.c0) IS FALSE)))))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE (((((HEX(vt0.c0))!=(((vt0.c0) IS FALSE)))) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT vt0.c1 FROM rt0, vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM rt0, vt0 WHERE ((((+ (0.48076362790053595))) NOT NULL)) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM rt0, vt0 WHERE ((NOT ((((+ (0.48076362790053595))) NOT NULL)))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM rt0, vt0 WHERE ((((((+ (0.48076362790053595))) NOT NULL)) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM rt0, vt0 GROUP BY vt0.c1;
SELECT ALL rt0.c0, rt0.c2, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c2, vt0.c1;
SELECT rt0.c0, rt0.c2, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c2, vt0.c1 HAVING GROUP_CONCAT(COUNT(COUNT(rt0.c2))) UNION ALL SELECT ALL rt0.c0, rt0.c2, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c2, vt0.c1 HAVING (NOT (GROUP_CONCAT(COUNT(COUNT(rt0.c2))))) UNION ALL SELECT rt0.c0, rt0.c2, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c2, vt0.c1 HAVING ((GROUP_CONCAT(COUNT(COUNT(rt0.c2)))) ISNULL);
SELECT rt0.c2 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 WHERE (PRINTF(((rt0.c0) IS TRUE), SQLITE_VERSION(), ((rt0.c2)==(rt0.c0)))) UNION ALL SELECT rt0.c2 FROM rt0 WHERE ((NOT (PRINTF(((rt0.c0) IS TRUE), SQLITE_VERSION(), ((rt0.c2)==(rt0.c0)))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE (((PRINTF(((rt0.c0) IS TRUE), SQLITE_VERSION(), ((rt0.c2)=(rt0.c0)))) ISNULL));
SELECT rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((0xffffffff8445ddf1) ISNULL)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((0xffffffff8445ddf1) ISNULL)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((0Xffffffff8445ddf1) ISNULL)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (CASE vt0.c1  WHEN CASE WHEN vt0.c1 THEN vt0.c1 END THEN ((vt0.c0) IS FALSE) ELSE (vt0.c0 IN ()) END) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CASE vt0.c1  WHEN CASE WHEN vt0.c1 THEN vt0.c1 END THEN ((vt0.c0) IS FALSE) ELSE (vt0.c0 IN ()) END))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((CASE vt0.c1  WHEN CASE WHEN vt0.c1 THEN vt0.c1 END THEN ((vt0.c0) IS FALSE) ELSE (vt0.c0 IN ()) END) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2 HAVING SUM(TOTAL(rt0.c0)) UNION ALL SELECT rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2 HAVING (NOT (SUM(TOTAL(rt0.c0)))) UNION ALL SELECT rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2 HAVING ((SUM(TOTAL(rt0.c0))) ISNULL);
SELECT * FROM rt0, vt0;
SELECT ALL * FROM rt0, vt0 WHERE (HEX(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)))) UNION ALL SELECT * FROM rt0, vt0 WHERE ((NOT (HEX(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)))))) UNION ALL SELECT * FROM rt0, vt0 WHERE (((HEX(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)))) ISNULL));
SELECT * FROM rt0, vt0;
SELECT DISTINCT rt0.c2, rt0.c1, vt0.c0, vt0.c1 FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(CASE WHEN vt0.c1 THEN vt0.c1 ELSE rt0.c2 END AS REAL);
SELECT DISTINCT rt0.c2, rt0.c1, vt0.c0, vt0.c1 FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(CASE WHEN vt0.c1 THEN vt0.c1 ELSE rt0.c2 END AS REAL) WHERE (((((((0x3698be82) NOT BETWEEN (rt0.c0) AND (vt0.c0)))AND(((((vt0.c1)AND(rt0.c0)))OR(vt0.c1)))))AND(CAST(rt0.c2 AS TEXT)))) UNION SELECT DISTINCT rt0.c2, rt0.c1, vt0.c0, vt0.c1 FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(CASE WHEN vt0.c1 THEN vt0.c1 ELSE rt0.c2 END AS REAL) WHERE ((NOT (((((((0x3698be82) NOT BETWEEN (rt0.c0) AND (vt0.c0)))AND(((((vt0.c1)AND(rt0.c0)))OR(vt0.c1)))))AND(CAST(rt0.c2 AS TEXT)))))) UNION SELECT DISTINCT rt0.c2, rt0.c1, vt0.c0, vt0.c1 FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(CASE WHEN vt0.c1 THEN vt0.c1 ELSE rt0.c2 END AS REAL) WHERE (((((((((0x3698be82) NOT BETWEEN (rt0.c0) AND (vt0.c0)))AND(((((vt0.c1)AND(rt0.c0)))OR(vt0.c1)))))AND(CAST(rt0.c2 AS TEXT)))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, vt0.c0, vt0.c1 FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(CASE WHEN vt0.c1 THEN vt0.c1 ELSE rt0.c2 END AS REAL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((CAST(vt0.c1 AS INTEGER))OR(((vt0.c0)IS(vt0.c1))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((CAST(vt0.c1 AS INTEGER))OR(((vt0.c0)IS(vt0.c1))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((CAST(vt0.c1 AS INTEGER))OR(((vt0.c0)IS(vt0.c1))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0;
SELECT rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0 HAVING (((((0.5122637399054875)) NOT BETWEEN ((MAX(vt0.c1))) AND ((TOTAL(vt0.c1))))) BETWEEN (CAST(vt0.c1 AS TEXT)) AND (((NULL)*(NULL)))) UNION ALL SELECT rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0 HAVING (NOT ((((((0.5122637399054875)) NOT BETWEEN ((MAX(vt0.c1))) AND ((TOTAL(vt0.c1))))) BETWEEN (CAST(vt0.c1 AS TEXT)) AND (((NULL)*(NULL)))))) UNION ALL SELECT rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0 HAVING (((((((0.5122637399054875)) NOT BETWEEN ((MAX(vt0.c1))) AND ((TOTAL(vt0.c1))))) BETWEEN (CAST(vt0.c1 AS TEXT)) AND (((NULL)*(NULL))))) ISNULL);
SELECT rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0;
SELECT rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0 HAVING (((((0.5122637399054875)) NOT BETWEEN ((MAX(vt0.c1))) AND ((TOTAL(vt0.c1))))) BETWEEN (CAST(vt0.c1 AS TEXT)) AND (((NULL)*(NULL)))) UNION ALL SELECT rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0 HAVING (NOT ((((((0.5122637399054875)) NOT BETWEEN ((MAX(vt0.c1))) AND ((TOTAL(vt0.c1))))) BETWEEN (CAST(vt0.c1 AS TEXT)) AND (((NULL)*(NULL)))))) UNION ALL SELECT rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0 HAVING (((((((0.5122637399054875)) NOT BETWEEN ((MAX(vt0.c1))) AND ((TOTAL(vt0.c1))))) BETWEEN (CAST(vt0.c1 AS TEXT)) AND (((NULL)*(NULL))))) ISNULL);
SELECT rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (vt0.c0) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((+ (rt0.c0)) IN ())) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((+ (rt0.c0)) IN ())))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((+ (rt0.c0)) IN ())) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON LOWER(((((vt0.c0)AND(vt0.c1)))OR(rt0.c2))) GROUP BY rt0.c0, vt0.c0;
SELECT rt0.c0, vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON LOWER(((((vt0.c0)AND(vt0.c1)))OR(rt0.c2))) WHERE ((((vt0.c1))=((rt0.c1 COLLATE NOCASE)))) GROUP BY rt0.c0, vt0.c0 UNION SELECT ALL rt0.c0, vt0.c0 FROM rt0 NOT INDEXED FULL OUTER JOIN vt0 ON LOWER(((((vt0.c0)AND(vt0.c1)))OR(rt0.c2))) WHERE ((NOT ((((vt0.c1))==((rt0.c1 COLLATE NOCASE)))))) GROUP BY rt0.c0, vt0.c0 UNION SELECT rt0.c0, vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON LOWER(((((vt0.c0)AND(vt0.c1)))OR(rt0.c2))) WHERE ((((((vt0.c1))==((rt0.c1 COLLATE NOCASE)))) ISNULL)) GROUP BY rt0.c0, vt0.c0;
SELECT ALL rt0.c0, vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON LOWER(((((vt0.c0)AND(vt0.c1)))OR(rt0.c2))) GROUP BY rt0.c0, vt0.c0;
SELECT ALL rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1 HAVING COUNT(CASE WHEN x'1333' THEN COUNT(SUM(rt0.c0)) WHEN vt0.c1 THEN vt0.c1 WHEN TOTAL(rt0.c2) THEN rt0.c1 ELSE MAX(COUNT(*)) END) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (COUNT(CASE WHEN x'1333' THEN COUNT(SUM(rt0.c0)) WHEN vt0.c1 THEN vt0.c1 WHEN TOTAL(rt0.c2) THEN rt0.c1 ELSE MAX(COUNT(*)) END))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((COUNT(CASE WHEN x'1333' THEN COUNT(SUM(rt0.c0)) WHEN vt0.c1 THEN vt0.c1 WHEN TOTAL(rt0.c2) THEN rt0.c1 ELSE MAX(COUNT(*)) END)) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (((((vt0.c1)+(vt0.c0)))<(0.6523104389941112))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((((vt0.c1)+(vt0.c0)))<(0.6523104389941112))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((((vt0.c1)+(vt0.c0)))<(0.6523104389941112))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0, vt0.c1, vt0.c0 FROM rt0 CROSS JOIN vt0 ON ((((('1411240976'))=((rt0.c1)))) ISNULL);
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0, vt0.c1, vt0.c0 FROM rt0 CROSS JOIN vt0 ON ((((('1411240976'))==((rt0.c1)))) ISNULL) WHERE (TYPEOF(DISTINCT 0.8245968941133169)) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0, vt0.c1, vt0.c0 FROM rt0 CROSS JOIN vt0 ON ((((('1411240976'))=((rt0.c1)))) ISNULL) WHERE ((NOT (TYPEOF(DISTINCT 0.8245968941133169)))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0, vt0.c1, vt0.c0 FROM rt0 CROSS JOIN vt0 ON ((((('1411240976'))==((rt0.c1)))) ISNULL) WHERE (((TYPEOF(DISTINCT 0.8245968941133169)) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0, vt0.c1, vt0.c0 FROM rt0 CROSS JOIN vt0 ON ((((('1411240976'))=((rt0.c1)))) ISNULL);
SELECT vt0.c1 FROM vt0, rt0 NOT INDEXED GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0, rt0 WHERE (((IFNULL(rt0.c1, rt0.c0)) NOT BETWEEN (((rt0.c2)||(rt0.c2))) AND ((NOT (rt0.c0))))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0, rt0 WHERE ((NOT (((IFNULL(rt0.c1, rt0.c0)) NOT BETWEEN (((rt0.c2)||(rt0.c2))) AND ((NOT (rt0.c0))))))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0, rt0 WHERE (((((IFNULL(rt0.c1, rt0.c0)) NOT BETWEEN (((rt0.c2)||(rt0.c2))) AND ((NOT (rt0.c0))))) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0, rt0 NOT INDEXED GROUP BY vt0.c1;
SELECT ALL rt0.c2, vt0.c1, rt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON CAST((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c1))) AS INTEGER) GROUP BY rt0.c2, vt0.c1, rt0.c0;
SELECT ALL rt0.c2, vt0.c1, rt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON CAST((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c1))) AS INTEGER) GROUP BY rt0.c2, vt0.c1, rt0.c0 HAVING MAX(COUNT(vt0.c1)) UNION ALL SELECT ALL rt0.c2, vt0.c1, rt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON CAST((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c1))) AS INTEGER) GROUP BY rt0.c2, vt0.c1, rt0.c0 HAVING (NOT (MAX(COUNT(vt0.c1)))) UNION ALL SELECT rt0.c2, vt0.c1, rt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON CAST((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c1))) AS INTEGER) GROUP BY rt0.c2, vt0.c1, rt0.c0 HAVING ((MAX(COUNT(vt0.c1))) ISNULL);
SELECT rt0.c2 FROM rt0, vt0;
SELECT rt0.c2 FROM rt0, vt0 WHERE ((((((rt0.c0 IN (rt0.c2, vt0.c0)))OR(CASE WHEN vt0.c1 THEN vt0.c0 END)))AND((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((vt0.c0)))))) UNION ALL SELECT ALL rt0.c2 FROM rt0, vt0 WHERE ((NOT ((((((rt0.c0 IN (rt0.c2, vt0.c0)))OR(CASE WHEN vt0.c1 THEN vt0.c0 END)))AND((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((vt0.c0)))))))) UNION ALL SELECT rt0.c2 FROM rt0, vt0 WHERE ((((((((rt0.c0 IN (rt0.c2, vt0.c0)))OR(CASE WHEN vt0.c1 THEN vt0.c0 END)))AND((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((vt0.c0)))))) ISNULL));
SELECT rt0.c2 FROM rt0, vt0;
SELECT DISTINCT vt0.c0, rt0.c2, vt0.c1 FROM vt0, rt0;
SELECT DISTINCT vt0.c0, rt0.c2, vt0.c1 FROM vt0, rt0 WHERE ((((vt0.c0)) NOT BETWEEN (((((''))<>(('166260741'))))) AND (((vt0.c1 IN (rt0.c0)))))) UNION SELECT DISTINCT vt0.c0, rt0.c2, vt0.c1 FROM vt0, rt0 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN (((((''))<>(('166260741'))))) AND (((vt0.c1 IN (rt0.c0)))))))) UNION SELECT DISTINCT vt0.c0, rt0.c2, vt0.c1 FROM vt0, rt0 WHERE ((((((vt0.c0)) NOT BETWEEN (((((''))!=(('166260741'))))) AND (((vt0.c1 IN (rt0.c0)))))) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c2, vt0.c1 FROM vt0, rt0;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (((UNLIKELY(NULL)) NOTNULL)) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((UNLIKELY(NULL)) NOTNULL)))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((((UNLIKELY(NULL)) NOTNULL)) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING NULL UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (NULL)) UNION ALL SELECT rt0.c2 FROM rt0 NOT INDEXED GROUP BY rt0.c2 HAVING ((NULL) ISNULL);
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING NULL UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (NULL)) UNION ALL SELECT rt0.c2 FROM rt0 NOT INDEXED GROUP BY rt0.c2 HAVING ((NULL) ISNULL);
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL vt0.c0 FROM rt0, vt0;
SELECT vt0.c0 FROM rt0 NOT INDEXED, vt0 WHERE (((((vt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)))OR(((rt0.c1)%(rt0.c0))))) UNION ALL SELECT vt0.c0 FROM rt0, vt0 WHERE ((NOT (((((vt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)))OR(((rt0.c1)%(rt0.c0))))))) UNION ALL SELECT vt0.c0 FROM rt0, vt0 WHERE (((((((vt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)))OR(((rt0.c1)%(rt0.c0))))) ISNULL));
SELECT ALL vt0.c0 FROM rt0, vt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (COALESCE(rt0.c2, (vt0.c0 IN ()))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (COALESCE(rt0.c2, (vt0.c0 IN ()))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((COALESCE(rt0.c2, (vt0.c0 IN ()))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (('1507039610' IN (LIKELY(DISTINCT rt0.c1)))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (('1507039610' IN (LIKELY(DISTINCT rt0.c1)))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (((('1507039610' IN (LIKELY(DISTINCT rt0.c1)))) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (((CASE WHEN '1956018368' THEN vt0.c1 END) IS FALSE)) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((CASE WHEN '1956018368' THEN vt0.c1 END) IS FALSE)))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((CASE WHEN '1956018368' THEN vt0.c1 END) IS FALSE)) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c0 IN ()) IN ())) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c0 IN ()) IN ())))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c0 IN ()) IN ())) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2, rt0.c1, rt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt0.c1;
SELECT rt0.c2, rt0.c1, rt0.c0, vt0.c1 FROM rt0, vt0 WHERE (CAST(((rt0.c1)|(vt0.c0)) AS NUMERIC)) GROUP BY rt0.c2, rt0.c1, rt0.c0, vt0.c1 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt0.c1 FROM rt0, vt0 WHERE ((NOT (CAST(((rt0.c1)|(vt0.c0)) AS NUMERIC)))) GROUP BY rt0.c2, rt0.c1, rt0.c0, vt0.c1 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt0.c1 FROM rt0, vt0 WHERE (((CAST(((rt0.c1)|(vt0.c0)) AS NUMERIC)) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0, vt0.c1;
SELECT rt0.c2, rt0.c1, rt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0 HAVING AVG(((((MAX(vt0.c1))AND(rt0.c1)))OR(rt0.c2))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0 HAVING (NOT (AVG(((((MAX(vt0.c1))AND(rt0.c1)))OR(rt0.c2))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0 HAVING ((AVG(((((MAX(vt0.c1))AND(rt0.c1)))OR(rt0.c2)))) ISNULL);
SELECT ALL TOTAL(((CAST(rt0.c2 AS REAL)) NOTNULL)) FROM rt0, vt0 ORDER BY CAST(COALESCE(rt0.c0, rt0.c1) AS NUMERIC) ASC  NULLS FIRST;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (LENGTH(((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (LENGTH(((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))))) UNION ALL SELECT * FROM vt0 WHERE (((LENGTH(((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT rt0.c0 FROM rt0, vt0;
SELECT DISTINCT rt0.c0 FROM rt0, vt0 WHERE (NULLIF((((vt0.c1))<>((0.28401517945656674))), ((rt0.c2) NOTNULL))) UNION SELECT DISTINCT rt0.c0 FROM rt0, vt0 WHERE ((NOT (NULLIF((((vt0.c1))<>((0.28401517945656674))), ((rt0.c2) NOTNULL))))) UNION SELECT DISTINCT rt0.c0 FROM rt0, vt0 WHERE (((NULLIF((((vt0.c1))<>((0.28401517945656674))), ((rt0.c2) NOTNULL))) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0, vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (vt0.c1) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (vt0.c1))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((vt0.c1) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0 HAVING (((CASE WHEN rt0.c0 THEN rt0.c0 ELSE AVG(rt0.c1) END))>=((TOTAL(COUNT(rt0.c2))))) UNION ALL SELECT rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0 HAVING (NOT ((((CASE WHEN rt0.c0 THEN rt0.c0 ELSE AVG(rt0.c1) END))>=((TOTAL(COUNT(rt0.c2))))))) UNION ALL SELECT rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0 HAVING (((((CASE WHEN rt0.c0 THEN rt0.c0 ELSE AVG(rt0.c1) END))>=((TOTAL(COUNT(rt0.c2)))))) ISNULL);
SELECT ALL * FROM vt0, rt0;
SELECT * FROM vt0, rt0 WHERE (((NULL)GLOB((- (vt0.c1))))) UNION ALL SELECT * FROM vt0, rt0 WHERE ((NOT (((NULL)GLOB((- (vt0.c1))))))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE (((((NULL)GLOB((- (vt0.c1))))) ISNULL));
SELECT ALL * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CAST(vt0.c0 COLLATE RTRIM AS NUMERIC)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CAST(vt0.c0 COLLATE RTRIM AS NUMERIC)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CAST(vt0.c0 COLLATE RTRIM AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE ((((+ (rt0.c1)))|(MAX(rt0.c1, rt0.c2)))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT ((((+ (rt0.c1)))|(MAX(rt0.c1, rt0.c2)))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((((((+ (rt0.c1)))|(MAX(rt0.c1, rt0.c2)))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CAST(TOTAL(vt0.c0) AS REAL) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CAST(TOTAL(vt0.c0) AS REAL))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CAST(TOTAL(vt0.c0) AS REAL)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CAST(TOTAL(vt0.c0) AS REAL) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CAST(TOTAL(vt0.c0) AS REAL))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CAST(TOTAL(vt0.c0) AS REAL)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL SUM(((((((rt0.c1)<(rt0.c1)))AND((rt0.c1 IN (rt0.c0)))))OR(rt0.c1))) FROM rt0;
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON ((((rt0.c0)IS(rt0.c2))) NOT NULL);
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON ((((rt0.c0)IS(rt0.c2))) NOT NULL) WHERE ((((((rt0.c2, rt0.c0, vt0.c1))<((rt0.c1, rt0.c1, vt0.c0)))) NOT BETWEEN (rt0.c2) AND (((((-1126518618)AND(rt0.c1)))OR(rt0.c2))))) UNION ALL SELECT ALL * FROM rt0 CROSS JOIN vt0 ON ((((rt0.c0)IS(rt0.c2))) NOT NULL) WHERE ((NOT ((((((rt0.c2, rt0.c0, vt0.c1))<((rt0.c1, rt0.c1, vt0.c0)))) NOT BETWEEN (rt0.c2) AND (((((-1126518618)AND(rt0.c1)))OR(rt0.c2))))))) UNION ALL SELECT ALL * FROM rt0 CROSS JOIN vt0 ON ((((rt0.c0)IS(rt0.c2))) NOT NULL) WHERE ((((((((rt0.c2, rt0.c0, vt0.c1))<((rt0.c1, rt0.c1, vt0.c0)))) NOT BETWEEN (rt0.c2) AND (((((-1126518618)AND(rt0.c1)))OR(rt0.c2))))) ISNULL));
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON ((((rt0.c0)IS(rt0.c2))) NOT NULL);
SELECT DISTINCT rt0.c0, rt0.c1, vt0.c1, vt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON (NOT ('1690408925'));
SELECT DISTINCT rt0.c0, rt0.c1, vt0.c1, vt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON (NOT ('1690408925')) WHERE (ABS(DISTINCT vt0.c1) COLLATE NOCASE) UNION SELECT DISTINCT rt0.c0, rt0.c1, vt0.c1, vt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON (NOT ('1690408925')) WHERE ((NOT (ABS(DISTINCT vt0.c1) COLLATE NOCASE))) UNION SELECT DISTINCT rt0.c0, rt0.c1, vt0.c1, vt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON (NOT ('1690408925')) WHERE (((ABS(DISTINCT vt0.c1) COLLATE NOCASE) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, vt0.c1, vt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON (NOT ('1690408925'));
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 WHERE (NULLIF(((vt0.c0)GLOB(vt0.c0)), CAST(vt0.c1 AS REAL))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE ((NOT (NULLIF(((vt0.c0)GLOB(vt0.c0)), CAST(vt0.c1 AS REAL))))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE (((NULLIF(((vt0.c0)GLOB(vt0.c0)), CAST(vt0.c1 AS REAL))) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT rt0.c0, vt0.c0, rt0.c1, vt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c1, vt0.c1, rt0.c2;
SELECT ALL rt0.c0, vt0.c0, rt0.c1, vt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c1, vt0.c1, rt0.c2 HAVING GROUP_CONCAT(MIN(MAX(rt0.c0))) UNION ALL SELECT rt0.c0, vt0.c0, rt0.c1, vt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c1, vt0.c1, rt0.c2 HAVING (NOT (GROUP_CONCAT(MIN(MAX(rt0.c0))))) UNION ALL SELECT ALL rt0.c0, vt0.c0, rt0.c1, vt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c1, vt0.c1, rt0.c2 HAVING ((GROUP_CONCAT(MIN(MAX(rt0.c0)))) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (((((vt0.c1) IS TRUE))||(((vt0.c1)-(vt0.c0))))) ORDER BY ((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0))) IS FALSE) ASC;
SELECT * FROM vt0 WHERE ((NOT (((((vt0.c1) IS TRUE))||(((vt0.c1)-(vt0.c0))))))) ORDER BY ((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0))) IS FALSE) ASC;
SELECT ALL * FROM vt0 WHERE (((((((vt0.c1) IS TRUE))||(((vt0.c1)-(vt0.c0))))) ISNULL)) ORDER BY ((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0))) IS FALSE) ASC;
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE ((((rt0.c2))<=((CAST(vt0.c0 AS TEXT))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT ((((rt0.c2))<=((CAST(vt0.c0 AS TEXT))))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((((((rt0.c2))<=((CAST(vt0.c0 AS TEXT))))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((((rt0.c2)AND(((rt0.c2) NOTNULL))))OR(ABS(DISTINCT rt0.c2)))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c2)AND(((rt0.c2) NOTNULL))))OR(ABS(DISTINCT rt0.c2)))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (((((((rt0.c2)AND(((rt0.c2) NOTNULL))))OR(ABS(DISTINCT rt0.c2)))) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING AVG(SUM(SUM(GROUP_CONCAT(COUNT(TOTAL(COUNT(*))))))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (AVG(SUM(SUM(GROUP_CONCAT(COUNT(TOTAL(COUNT(*))))))))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((AVG(SUM(SUM(GROUP_CONCAT(COUNT(TOTAL(COUNT(*)))))))) ISNULL);
SELECT ALL SUM(((vt0.c0)AND(CASE WHEN rt0.c1 THEN rt0.c1 END))) FROM rt0, vt0 ORDER BY ((TRIM(rt0.c1, rt0.c2)) IS FALSE)  NULLS FIRST;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE ((((rt0.c1)>(rt0.c1)) IN ())) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((((rt0.c1)>(rt0.c1)) IN ())))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((((rt0.c1)>(rt0.c1)) IN ())) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (CASE WHEN rt0.c1 THEN ((((((((rt0.c1)OR(vt0.c0)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c1)) WHEN ((rt0.c1)&(rt0.c0)) THEN rt0.c0 COLLATE NOCASE WHEN CAST(rt0.c1 AS TEXT) THEN x'd804' END) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (CASE WHEN rt0.c1 THEN ((((((((rt0.c1)OR(vt0.c0)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c1)) WHEN ((rt0.c1)&(rt0.c0)) THEN rt0.c0 COLLATE NOCASE WHEN CAST(rt0.c1 AS TEXT) THEN x'd804' END))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((CASE WHEN rt0.c1 THEN ((((((((rt0.c1)OR(vt0.c0)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c1)) WHEN ((rt0.c1)&(rt0.c0)) THEN rt0.c0 COLLATE NOCASE WHEN CAST(rt0.c1 AS TEXT) THEN x'd804' END) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (CASE WHEN (NOT (rt0.c1)) THEN ((((NULL)AND(rt0.c2)))OR(rt0.c2)) ELSE ((rt0.c0)!=(rt0.c0)) END) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (CASE WHEN (NOT (rt0.c1)) THEN ((((NULL)AND(rt0.c2)))OR(rt0.c2)) ELSE ((rt0.c0)!=(rt0.c0)) END))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((CASE WHEN (NOT (rt0.c1)) THEN ((((NULL)AND(rt0.c2)))OR(rt0.c2)) ELSE ((rt0.c0)<>(rt0.c0)) END) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((rt0.c2 COLLATE BINARY)*(-62211098)) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (((rt0.c2 COLLATE BINARY)*(-62211098)))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((((rt0.c2 COLLATE BINARY)*(-62211098))) ISNULL);
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((rt0.c2 COLLATE BINARY)*(-62211098)) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (((rt0.c2 COLLATE BINARY)*(-62211098)))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((((rt0.c2 COLLATE BINARY)*(-62211098))) ISNULL);
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL * FROM vt0, rt0;
SELECT * FROM vt0, rt0 NOT INDEXED WHERE ((((rt0.c2)) NOT BETWEEN ((((rt0.c0)>=(rt0.c1)))) AND (((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((vt0.c1))))))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE ((NOT ((((rt0.c2)) NOT BETWEEN ((((rt0.c0)>=(rt0.c1)))) AND (((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((vt0.c1))))))))) UNION ALL SELECT * FROM vt0, rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((((rt0.c0)>=(rt0.c1)))) AND (((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((vt0.c1))))))) ISNULL));
SELECT ALL * FROM vt0, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((((((((((((rt0.c1 IN ()))OR(rt0.c2 COLLATE RTRIM)))OR((+ (rt0.c1)))))AND((rt0.c1 IN ()))))AND(rtreenode(rt0.c2, rt0.c0))))AND(CAST(rt0.c2 AS INTEGER))))OR(((((rt0.c0)AND(rt0.c0)))OR(rt0.c0))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((((((((((((rt0.c1 IN ()))OR(rt0.c2 COLLATE RTRIM)))OR((+ (rt0.c1)))))AND((rt0.c1 IN ()))))AND(rtreenode(rt0.c2, rt0.c0))))AND(CAST(rt0.c2 AS INTEGER))))OR(((((rt0.c0)AND(rt0.c0)))OR(rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((((((((((((rt0.c1 IN ()))OR(rt0.c2 COLLATE RTRIM)))OR((+ (rt0.c1)))))AND((rt0.c1 IN ()))))AND(rtreenode(rt0.c2, rt0.c0))))AND(CAST(rt0.c2 AS INTEGER))))OR(((((rt0.c0)AND(rt0.c0)))OR(rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (TYPEOF(DISTINCT ((rt0.c2)<=(rt0.c0)))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (TYPEOF(DISTINCT ((rt0.c2)<=(rt0.c0)))))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((TYPEOF(DISTINCT ((rt0.c2)<=(rt0.c0)))) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c2, vt0.c0, rt0.c0, vt0.c1, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0, rt0.c0, vt0.c1, rt0.c1;
SELECT rt0.c2, vt0.c0, rt0.c0, vt0.c1, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0, rt0.c0, vt0.c1, rt0.c1 HAVING SUM(COUNT(*)) UNION ALL SELECT rt0.c2, vt0.c0, rt0.c0, vt0.c1, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0, rt0.c0, vt0.c1, rt0.c1 HAVING (NOT (SUM(COUNT(*)))) UNION ALL SELECT ALL rt0.c2, vt0.c0, rt0.c0, vt0.c1, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0, rt0.c0, vt0.c1, rt0.c1 HAVING ((SUM(COUNT(*))) ISNULL);
SELECT ALL rt0.c2 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 WHERE (((((rt0.c1 IN ())))<=((CAST(rt0.c2 AS BLOB))))) UNION ALL SELECT rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c1 IN ())))<=((CAST(rt0.c2 AS BLOB))))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE (((((((rt0.c1 IN ())))<=((CAST(rt0.c2 AS BLOB))))) ISNULL));
SELECT ALL rt0.c2 FROM rt0;
SELECT DISTINCT vt0.c0 FROM vt0, rt0;
SELECT DISTINCT vt0.c0 FROM vt0, rt0 WHERE (CASE WHEN rt0.c0 THEN rt0.c0 ELSE vt0.c1 END COLLATE BINARY) UNION SELECT DISTINCT vt0.c0 FROM vt0, rt0 WHERE ((NOT (CASE WHEN rt0.c0 THEN rt0.c0 ELSE vt0.c1 END COLLATE BINARY))) UNION SELECT DISTINCT vt0.c0 FROM vt0, rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c0 ELSE vt0.c1 END COLLATE BINARY) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0, rt0;
SELECT ALL vt0.c1 FROM rt0, vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM rt0, vt0 WHERE ((NOT (COALESCE('', rt0.c2, rt0.c1, vt0.c1)))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM rt0, vt0 WHERE ((NOT ((NOT (COALESCE('', rt0.c2, rt0.c1, vt0.c1)))))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM rt0, vt0 WHERE ((((NOT (COALESCE('', rt0.c2, rt0.c1, vt0.c1)))) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM rt0, vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1, rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c1, rt0.c0, rt0.c1, rt0.c2;
SELECT vt0.c1, rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c1, rt0.c0, rt0.c1, rt0.c2 HAVING TOTAL(((vt0.c1) BETWEEN (COUNT(*)) AND (MIN(rt0.c1)))) UNION ALL SELECT vt0.c1, rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c1, rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (TOTAL(((vt0.c1) BETWEEN (COUNT(*)) AND (MIN(rt0.c1)))))) UNION ALL SELECT ALL vt0.c1, rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c1, rt0.c0, rt0.c1, rt0.c2 HAVING ((TOTAL(((vt0.c1) BETWEEN (COUNT(*)) AND (MIN(rt0.c1))))) ISNULL);
SELECT rt0.c0, rt0.c2, rt0.c1, vt0.c1 FROM rt0 FULL OUTER JOIN vt0 ON CAST(((vt0.c1)>=('7')) AS INTEGER);
SELECT ALL rt0.c0, rt0.c2, rt0.c1, vt0.c1 FROM rt0 FULL OUTER JOIN vt0 ON CAST(((vt0.c1)>=('7')) AS INTEGER) WHERE (((((((rt0.c2) NOT BETWEEN (0.9868050211185181) AND ('-1139665962')))OR(0.5580727129197975)))OR(((rt0.c1) NOT BETWEEN (x'') AND (rt0.c1))))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1, vt0.c1 FROM rt0 FULL OUTER JOIN vt0 ON CAST(((vt0.c1)>=('7')) AS INTEGER) WHERE ((NOT (((((((rt0.c2) NOT BETWEEN (0.9868050211185181) AND ('-1139665962')))OR(0.5580727129197975)))OR(((rt0.c1) NOT BETWEEN (x'') AND (rt0.c1))))))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1, vt0.c1 FROM rt0 FULL OUTER JOIN vt0 ON CAST(((vt0.c1)>=('7')) AS INTEGER) WHERE (((((((((rt0.c2) NOT BETWEEN (0.9868050211185181) AND ('-1139665962')))OR(0.5580727129197975)))OR(((rt0.c1) NOT BETWEEN (x'') AND (rt0.c1))))) ISNULL));
SELECT rt0.c0, rt0.c2, rt0.c1, vt0.c1 FROM rt0 FULL OUTER JOIN vt0 ON CAST(((vt0.c1)>=('7')) AS INTEGER);
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CAST((('1405160367')IS(rt0.c0)) AS NUMERIC)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CAST((('1405160367')IS(rt0.c0)) AS NUMERIC)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CAST((('1405160367')IS(rt0.c0)) AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL vt0.c0, vt0.c1, rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, vt0.c1, rt0.c1, rt0.c2;
SELECT ALL vt0.c0, vt0.c1, rt0.c1, rt0.c2 FROM rt0, vt0 WHERE (vt0.c1 COLLATE NOCASE) GROUP BY vt0.c0, vt0.c1, rt0.c1, rt0.c2 UNION SELECT vt0.c0, vt0.c1, rt0.c1, rt0.c2 FROM rt0, vt0 WHERE ((NOT (vt0.c1 COLLATE NOCASE))) GROUP BY vt0.c0, vt0.c1, rt0.c1, rt0.c2 UNION SELECT ALL vt0.c0, vt0.c1, rt0.c1, rt0.c2 FROM rt0, vt0 WHERE (((vt0.c1 COLLATE NOCASE) ISNULL)) GROUP BY vt0.c0, vt0.c1, rt0.c1, rt0.c2;
SELECT ALL vt0.c0, vt0.c1, rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, vt0.c1, rt0.c1, rt0.c2;
SELECT ALL rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2 HAVING (NOT (((SUM('-1100495587')) NOTNULL))) UNION ALL SELECT ALL rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2 HAVING (NOT ((NOT (((SUM('-1100495587')) NOTNULL))))) UNION ALL SELECT ALL rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2 HAVING (((NOT (((SUM('-1100495587')) NOTNULL)))) ISNULL);
SELECT ALL rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2 HAVING (NOT (((SUM('-1100495587')) NOTNULL))) UNION ALL SELECT ALL rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2 HAVING (NOT ((NOT (((SUM('-1100495587')) NOTNULL))))) UNION ALL SELECT ALL rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2 HAVING (((NOT (((SUM('-1100495587')) NOTNULL)))) ISNULL);
SELECT ALL rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((IFNULL(vt0.c1, vt0.c0) IN ())) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((IFNULL(vt0.c1, vt0.c0) IN ())))) UNION ALL SELECT * FROM vt0 WHERE ((((IFNULL(vt0.c1, vt0.c0) IN ())) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c2) BETWEEN (rt0.c0) AND (vt0.c1)))&(0xffffffffc23ec7d7));
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c2) BETWEEN (rt0.c0) AND (vt0.c1)))&(0Xffffffffc23ec7d7)) WHERE (((((rt0.c0 COLLATE NOCASE)AND(((rt0.c0)GLOB(vt0.c0)))))OR((((rt0.c0))>=((vt0.c1)))))) UNION SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c2) BETWEEN (rt0.c0) AND (vt0.c1)))&(0Xffffffffc23ec7d7)) WHERE ((NOT (((((rt0.c0 COLLATE NOCASE)AND(((rt0.c0)GLOB(vt0.c0)))))OR((((rt0.c0))>=((vt0.c1)))))))) UNION SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c2) BETWEEN (rt0.c0) AND (vt0.c1)))&(0Xffffffffc23ec7d7)) WHERE (((((((rt0.c0 COLLATE NOCASE)AND(((rt0.c0)GLOB(vt0.c0)))))OR((((rt0.c0))>=((vt0.c1)))))) ISNULL));
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c2) BETWEEN (rt0.c0) AND (vt0.c1)))&(0xffffffffc23ec7d7));
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0) IS TRUE)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0) IS TRUE)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0) IS TRUE)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (((COUNT(vt0.c0), vt0.c1, vt0.c1)) NOT BETWEEN ((TOTAL(vt0.c0), GROUP_CONCAT(GROUP_CONCAT(vt0.c0)), MIN(vt0.c1))) AND (((vt0.c1 IN ()), ((vt0.c1)/(AVG(MIN(vt0.c1)))), ((((GROUP_CONCAT(SUM(SUM(AVG(vt0.c0)))))AND(MAX(vt0.c0))))OR(vt0.c0))))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT ((((COUNT(vt0.c0), vt0.c1, vt0.c1)) NOT BETWEEN ((TOTAL(vt0.c0), GROUP_CONCAT(GROUP_CONCAT(vt0.c0)), MIN(vt0.c1))) AND (((vt0.c1 IN ()), ((vt0.c1)/(AVG(MIN(vt0.c1)))), ((((GROUP_CONCAT(SUM(SUM(AVG(vt0.c0)))))AND(MAX(vt0.c0))))OR(vt0.c0))))))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (((((COUNT(vt0.c0), vt0.c1, vt0.c1)) NOT BETWEEN ((TOTAL(vt0.c0), GROUP_CONCAT(GROUP_CONCAT(vt0.c0)), MIN(vt0.c1))) AND (((vt0.c1 IN ()), ((vt0.c1)/(AVG(MIN(vt0.c1)))), ((((GROUP_CONCAT(SUM(SUM(AVG(vt0.c0)))))AND(MAX(vt0.c0))))OR(vt0.c0)))))) ISNULL);
SELECT * FROM rt0, vt0;
SELECT ALL * FROM rt0, vt0 WHERE (((((((rt0.c2)+(rt0.c0)))AND(CASE rt0.c0  WHEN '' THEN vt0.c1 WHEN NULL THEN rt0.c0 WHEN vt0.c0 THEN rt0.c2 ELSE vt0.c1 END)))AND((- (rt0.c2))))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((NOT (((((((rt0.c2)+(rt0.c0)))AND(CASE rt0.c0  WHEN '' THEN vt0.c1 WHEN NULL THEN rt0.c0 WHEN vt0.c0 THEN rt0.c2 ELSE vt0.c1 END)))AND((- (rt0.c2))))))) UNION ALL SELECT * FROM rt0, vt0 WHERE (((((((((rt0.c2)+(rt0.c0)))AND(CASE rt0.c0  WHEN '' THEN vt0.c1 WHEN NULL THEN rt0.c0 WHEN vt0.c0 THEN rt0.c2 ELSE vt0.c1 END)))AND((- (rt0.c2))))) ISNULL));
SELECT * FROM rt0, vt0;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((CAST(rt0.c2 AS REAL))) AND ((CAST(rt0.c1 AS INTEGER))))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c1)) NOT BETWEEN ((CAST(rt0.c2 AS REAL))) AND ((CAST(rt0.c1 AS INTEGER))))))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((CAST(rt0.c2 AS REAL))) AND ((CAST(rt0.c1 AS INTEGER))))) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (vt0.c1) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c1))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((vt0.c1) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((CAST(SUM(TOTAL(rt0.c0)) AS INTEGER))>(AVG(MAX(rt0.c2)))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (((CAST(SUM(TOTAL(rt0.c0)) AS INTEGER))>(AVG(MAX(rt0.c2)))))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((((CAST(SUM(TOTAL(rt0.c0)) AS INTEGER))>(AVG(MAX(rt0.c2))))) ISNULL);
SELECT ALL vt0.c1 FROM vt0;
SELECT vt0.c1 FROM vt0 WHERE (LOWER(vt0.c1 COLLATE NOCASE)) UNION ALL SELECT vt0.c1 FROM vt0 WHERE ((NOT (LOWER(vt0.c1 COLLATE NOCASE)))) UNION ALL SELECT ALL vt0.c1 FROM vt0 WHERE (((LOWER(vt0.c1 COLLATE NOCASE)) ISNULL));
SELECT ALL vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0, rt0.c2, vt0.c1, rt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON (((x'')) BETWEEN ((rt0.c0)) AND ((0x1b057438))) COLLATE RTRIM;
SELECT DISTINCT vt0.c0, rt0.c2, vt0.c1, rt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON (((x'')) BETWEEN ((rt0.c0)) AND ((0X1b057438))) COLLATE RTRIM WHERE (((((CAST(rt0.c0 AS REAL))OR(((rt0.c0)+(vt0.c1)))))OR((('''.陱VfAEX') NOT BETWEEN (vt0.c0) AND (rt0.c0))))) UNION SELECT DISTINCT vt0.c0, rt0.c2, vt0.c1, rt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON (((x'')) BETWEEN ((rt0.c0)) AND ((0X1b057438))) COLLATE RTRIM WHERE ((NOT (((((CAST(rt0.c0 AS REAL))OR(((rt0.c0)+(vt0.c1)))))OR((('''.陱VfAEX') NOT BETWEEN (vt0.c0) AND (rt0.c0))))))) UNION SELECT DISTINCT vt0.c0, rt0.c2, vt0.c1, rt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON (((x'')) BETWEEN ((rt0.c0)) AND ((0X1b057438))) COLLATE RTRIM WHERE (((((((CAST(rt0.c0 AS REAL))OR(((rt0.c0)+(vt0.c1)))))OR((('''.陱VfAEX') NOT BETWEEN (vt0.c0) AND (rt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c2, vt0.c1, rt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON (((x'')) BETWEEN ((rt0.c0)) AND ((0x1b057438))) COLLATE RTRIM;
SELECT ALL vt0.c1, rt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c1, rt0.c2, vt0.c0, rt0.c0;
SELECT ALL vt0.c1, rt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM vt0, rt0 WHERE (vt0.c0 COLLATE RTRIM) GROUP BY vt0.c1, rt0.c1, rt0.c2, vt0.c0, rt0.c0 UNION SELECT ALL vt0.c1, rt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM vt0, rt0 WHERE ((NOT (vt0.c0 COLLATE RTRIM))) GROUP BY vt0.c1, rt0.c1, rt0.c2, vt0.c0, rt0.c0 UNION SELECT ALL vt0.c1, rt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM vt0, rt0 WHERE (((vt0.c0 COLLATE RTRIM) ISNULL)) GROUP BY vt0.c1, rt0.c1, rt0.c2, vt0.c0, rt0.c0;
SELECT ALL vt0.c1, rt0.c1, rt0.c2, vt0.c0, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c1, rt0.c2, vt0.c0, rt0.c0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((COUNT(COUNT(*))) IS FALSE) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (((COUNT(COUNT(*))) IS FALSE))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((((COUNT(COUNT(*))) IS FALSE)) ISNULL);
SELECT MIN(vt0.c0) FROM vt0 ORDER BY ((((vt0.c1 IN ())))==((CASE vt0.c0  WHEN NULL THEN vt0.c1 ELSE vt0.c1 END)))  NULLS FIRST;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE ((- (((rt0.c0)AND(rt0.c2))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((- (((rt0.c0)AND(rt0.c2))))))) UNION ALL SELECT * FROM rt0 WHERE ((((- (((rt0.c0)AND(rt0.c2))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (((vt0.c0)>(rt0.c2)) COLLATE BINARY) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (((vt0.c0)>(rt0.c2)) COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((((vt0.c0)>(rt0.c2)) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))*(rt0.c2))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))*(rt0.c2))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE (((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))*(rt0.c2))) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0 HAVING CAST(SUM(COUNT(*)) AS NUMERIC) UNION ALL SELECT rt0.c2, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (CAST(SUM(COUNT(*)) AS NUMERIC))) UNION ALL SELECT rt0.c2, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((CAST(SUM(COUNT(*)) AS NUMERIC)) ISNULL);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON ((('-1036073001' IN (rt0.c1))) NOT BETWEEN ((((vt0.c1))<=((vt0.c1)))) AND (CAST(rt0.c2 AS BLOB)));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON ((('-1036073001' IN (rt0.c1))) NOT BETWEEN ((((vt0.c1))<=((vt0.c1)))) AND (CAST(rt0.c2 AS BLOB))) WHERE (LAST_INSERT_ROWID()) UNION ALL SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON ((('-1036073001' IN (rt0.c1))) NOT BETWEEN ((((vt0.c1))<=((vt0.c1)))) AND (CAST(rt0.c2 AS BLOB))) WHERE ((NOT (LAST_INSERT_ROWID()))) UNION ALL SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON ((('-1036073001' IN (rt0.c1))) NOT BETWEEN ((((vt0.c1))<=((vt0.c1)))) AND (CAST(rt0.c2 AS BLOB))) WHERE (((LAST_INSERT_ROWID()) ISNULL));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON ((('-1036073001' IN (rt0.c1))) NOT BETWEEN ((((vt0.c1))<=((vt0.c1)))) AND (CAST(rt0.c2 AS BLOB)));
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE (((((rt0.c0)>(NULL)))+(COALESCE(rt0.c0, 0.7168586146331942)))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c0)>(NULL)))+(COALESCE(rt0.c0, 0.7168586146331942)))))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE (((((((rt0.c0)>(NULL)))+(COALESCE(rt0.c0, 0.7168586146331942)))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c0, vt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c1;
SELECT ALL rt0.c0, vt0.c1 FROM vt0, rt0 WHERE (((((rt0.c0)OR('<<9m')))AND(vt0.c0)) COLLATE RTRIM) GROUP BY rt0.c0, vt0.c1 UNION SELECT ALL rt0.c0, vt0.c1 FROM vt0, rt0 WHERE ((NOT (((((rt0.c0)OR('<<9m')))AND(vt0.c0)) COLLATE RTRIM))) GROUP BY rt0.c0, vt0.c1 UNION SELECT ALL rt0.c0, vt0.c1 FROM vt0, rt0 WHERE (((((((rt0.c0)OR('<<9m')))AND(vt0.c0)) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c0, vt0.c1;
SELECT ALL rt0.c0, vt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c1;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 NATURAL JOIN vt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 NATURAL JOIN vt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING GROUP_CONCAT(GROUP_CONCAT(MAX(AVG(rt0.c1)))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 NATURAL JOIN vt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (GROUP_CONCAT(GROUP_CONCAT(MAX(AVG(rt0.c1)))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 NATURAL JOIN vt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((GROUP_CONCAT(GROUP_CONCAT(MAX(AVG(rt0.c1))))) ISNULL);
SELECT ALL rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (ROUND(((rt0.c1)||(rt0.c0)), '-1192309450')) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (ROUND(((rt0.c1)||(rt0.c0)), '-1192309450')))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (((ROUND(((rt0.c1)||(rt0.c0)), '-1192309450')) ISNULL));
SELECT ALL rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, vt0.c0 FROM rt0, vt0;
SELECT DISTINCT rt0.c1, vt0.c0 FROM rt0, vt0 WHERE (((((rt0.c2) ISNULL)) ISNULL)) UNION SELECT DISTINCT rt0.c1, vt0.c0 FROM rt0, vt0 WHERE ((NOT (((((rt0.c2) ISNULL)) ISNULL)))) UNION SELECT DISTINCT rt0.c1, vt0.c0 FROM rt0, vt0 WHERE (((((((rt0.c2) ISNULL)) ISNULL)) ISNULL));
SELECT DISTINCT rt0.c1, vt0.c0 FROM rt0, vt0;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (ABS(CAST(rt0.c1 AS TEXT))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (ABS(CAST(rt0.c1 AS TEXT))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((ABS(CAST(rt0.c1 AS TEXT))) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 NOT INDEXED, vt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2 HAVING COUNT(*) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, rt0.c2 FROM rt0 NOT INDEXED, vt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2 HAVING COUNT(*) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, rt0.c2 FROM rt0 NOT INDEXED, vt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON (((NOT (rt0.c1)))AND(rt0.c2));
SELECT ALL rt0.c1, rt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON (((NOT (rt0.c1)))AND(rt0.c2)) WHERE (CASE WHEN (((0.9821783636360962)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) THEN (0x27ded341 IN (rt0.c1)) ELSE CASE WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END END) UNION ALL SELECT rt0.c1, rt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON (((NOT (rt0.c1)))AND(rt0.c2)) WHERE ((NOT (CASE WHEN (((0.9821783636360962)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) THEN (0x27ded341 IN (rt0.c1)) ELSE CASE WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END END))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON (((NOT (rt0.c1)))AND(rt0.c2)) WHERE (((CASE WHEN (((0.9821783636360962)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) THEN (0x27ded341 IN (rt0.c1)) ELSE CASE WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END END) ISNULL));
SELECT rt0.c1, rt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON (((NOT (rt0.c1)))AND(rt0.c2));
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((((((vt0.c0, vt0.c1, 0.04826275905500266, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c1, vt0.c0, vt0.c1)) AND (('⅒', vt0.c0, vt0.c0, vt0.c0, vt0.c1)))) ISNULL)) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT ((((((vt0.c0, vt0.c1, 0.04826275905500266, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c1, vt0.c0, vt0.c1)) AND (('⅒', vt0.c0, vt0.c0, vt0.c0, vt0.c1)))) ISNULL)))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((((((((vt0.c0, vt0.c1, 0.04826275905500266, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c1, vt0.c0, vt0.c1)) AND (('⅒', vt0.c0, vt0.c0, vt0.c0, vt0.c1)))) ISNULL)) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, vt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM rt0, vt0 WHERE (ROUND((((vt0.c1, vt0.c1, rt0.c0)) BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((rt0.c1, '-1244344316', rt0.c2))), (((vt0.c1))!=((rt0.c0))))) GROUP BY rt0.c1, rt0.c2, rt0.c0, vt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM rt0, vt0 WHERE ((NOT (ROUND((((vt0.c1, vt0.c1, rt0.c0)) BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((rt0.c1, '-1244344316', rt0.c2))), (((vt0.c1))<>((rt0.c0))))))) GROUP BY rt0.c1, rt0.c2, rt0.c0, vt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM rt0, vt0 WHERE (((ROUND((((vt0.c1, vt0.c1, rt0.c0)) BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((rt0.c1, '-1244344316', rt0.c2))), (((vt0.c1))!=((rt0.c0))))) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0, vt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, vt0.c0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING AVG(COUNT(SUM(NULL))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (AVG(COUNT(SUM(NULL))))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((AVG(COUNT(SUM(NULL)))) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c1)) IN ())) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c1)) IN ())))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c1)) IN ())) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (LOWER((rt0.c2 IN ()))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (LOWER((rt0.c2 IN ()))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((LOWER((rt0.c2 IN ()))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c1) ISNULL))IS(((((vt0.c1)OR(vt0.c1)))AND(vt0.c1))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c1) ISNULL))IS(((((vt0.c1)OR(vt0.c1)))AND(vt0.c1))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c1) ISNULL))IS(((((vt0.c1)OR(vt0.c1)))AND(vt0.c1))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c0, vt0.c0, vt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, vt0.c1, rt0.c2;
SELECT rt0.c0, vt0.c0, vt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, vt0.c1, rt0.c2 HAVING (((MAX(rt0.c2)))<=((AVG(rt0.c2)))) UNION ALL SELECT ALL rt0.c0, vt0.c0, vt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, vt0.c1, rt0.c2 HAVING (NOT ((((MAX(rt0.c2)))<=((AVG(rt0.c2)))))) UNION ALL SELECT ALL rt0.c0, vt0.c0, vt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, vt0.c1, rt0.c2 HAVING (((((MAX(rt0.c2)))<=((AVG(rt0.c2))))) ISNULL);
SELECT ALL rt0.c0, vt0.c0, vt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, vt0.c1, rt0.c2;
SELECT rt0.c0, vt0.c0, vt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, vt0.c1, rt0.c2 HAVING (((MAX(rt0.c2)))<=((AVG(rt0.c2)))) UNION ALL SELECT ALL rt0.c0, vt0.c0, vt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, vt0.c1, rt0.c2 HAVING (NOT ((((MAX(rt0.c2)))<=((AVG(rt0.c2)))))) UNION ALL SELECT ALL rt0.c0, vt0.c0, vt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, vt0.c1, rt0.c2 HAVING (((((MAX(rt0.c2)))<=((AVG(rt0.c2))))) ISNULL);
SELECT ALL rt0.c0, vt0.c0, vt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, vt0.c1, rt0.c2;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (CAST(0.7883909655570405 AS INTEGER)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CAST(0.7883909655570405 AS INTEGER)))) UNION ALL SELECT * FROM rt0 WHERE (((CAST(0.7883909655570405 AS INTEGER)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT vt0.c0, rt0.c2, vt0.c1, rt0.c1 FROM vt0 CROSS JOIN rt0 ON (((vt0.c0 IN ())) IS FALSE);
SELECT DISTINCT vt0.c0, rt0.c2, vt0.c1, rt0.c1 FROM vt0 CROSS JOIN rt0 ON (((vt0.c0 IN ())) IS FALSE) WHERE ((CAST(rt0.c1 AS NUMERIC) IN ())) UNION SELECT DISTINCT vt0.c0, rt0.c2, vt0.c1, rt0.c1 FROM vt0 CROSS JOIN rt0 ON (((vt0.c0 IN ())) IS FALSE) WHERE ((NOT ((CAST(rt0.c1 AS NUMERIC) IN ())))) UNION SELECT DISTINCT vt0.c0, rt0.c2, vt0.c1, rt0.c1 FROM vt0 CROSS JOIN rt0 ON (((vt0.c0 IN ())) IS FALSE) WHERE ((((CAST(rt0.c1 AS NUMERIC) IN ())) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c2, vt0.c1, rt0.c1 FROM vt0 CROSS JOIN rt0 ON (((vt0.c0 IN ())) IS FALSE);
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (((CASE x'fe1b'  WHEN vt0.c1 THEN vt0.c0 END) BETWEEN (((0.8629946278883065)OR(vt0.c0))) AND ((~ (x''))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((CASE x'fe1b'  WHEN vt0.c1 THEN vt0.c0 END) BETWEEN (((0.8629946278883065)OR(vt0.c0))) AND ((~ (x''))))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (((((CASE x'fe1b'  WHEN vt0.c1 THEN vt0.c0 END) BETWEEN (((0.8629946278883065)OR(vt0.c0))) AND ((~ (x''))))) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT rt0.c1 FROM vt0, rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM vt0, rt0 GROUP BY rt0.c1 HAVING SUM(TOTAL(rt0.c0)) UNION ALL SELECT ALL rt0.c1 FROM vt0, rt0 GROUP BY rt0.c1 HAVING (NOT (SUM(TOTAL(rt0.c0)))) UNION ALL SELECT ALL rt0.c1 FROM vt0, rt0 GROUP BY rt0.c1 HAVING ((SUM(TOTAL(rt0.c0))) ISNULL);
SELECT rt0.c2, rt0.c0, vt0.c1 FROM rt0, vt0;
SELECT ALL rt0.c2, rt0.c0, vt0.c1 FROM rt0, vt0 WHERE (CAST(rt0.c1 AS REAL) COLLATE RTRIM) UNION ALL SELECT ALL rt0.c2, rt0.c0, vt0.c1 FROM rt0, vt0 WHERE ((NOT (CAST(rt0.c1 AS REAL) COLLATE RTRIM))) UNION ALL SELECT ALL rt0.c2, rt0.c0, vt0.c1 FROM rt0, vt0 WHERE (((CAST(rt0.c1 AS REAL) COLLATE RTRIM) ISNULL));
SELECT rt0.c2, rt0.c0, vt0.c1 FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (LIKELY(((rt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (LIKELY(((rt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((LIKELY(((rt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT ALL rt0.c1, vt0.c0, rt0.c0 FROM rt0 INNER JOIN vt0 ON TRIM(vt0.c0 COLLATE RTRIM, (vt0.c0 IN ())) GROUP BY rt0.c1, vt0.c0, rt0.c0;
SELECT rt0.c1, vt0.c0, rt0.c0 FROM rt0 INNER JOIN vt0 ON TRIM(vt0.c0 COLLATE RTRIM, (vt0.c0 IN ())) WHERE (LIKE(((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c1)), rt0.c0, '0')) GROUP BY rt0.c1, vt0.c0, rt0.c0 UNION SELECT rt0.c1, vt0.c0, rt0.c0 FROM rt0 INNER JOIN vt0 ON TRIM(vt0.c0 COLLATE RTRIM, (vt0.c0 IN ())) WHERE ((NOT (LIKE(((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c1)), rt0.c0, '0')))) GROUP BY rt0.c1, vt0.c0, rt0.c0 UNION SELECT rt0.c1, vt0.c0, rt0.c0 FROM rt0 INNER JOIN vt0 ON TRIM(vt0.c0 COLLATE RTRIM, (vt0.c0 IN ())) WHERE (((LIKE(((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c1)), rt0.c0, '0')) ISNULL)) GROUP BY rt0.c1, vt0.c0, rt0.c0;
SELECT ALL rt0.c1, vt0.c0, rt0.c0 FROM rt0 INNER JOIN vt0 ON TRIM(vt0.c0 COLLATE RTRIM, (vt0.c0 IN ())) GROUP BY rt0.c1, vt0.c0, rt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (- (CAST(COUNT(MAX(vt0.c0)) AS INTEGER))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT ((- (CAST(COUNT(MAX(vt0.c0)) AS INTEGER))))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (((- (CAST(COUNT(MAX(vt0.c0)) AS INTEGER)))) ISNULL);
SELECT vt0.c0, vt0.c1 FROM vt0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((vt0.c0 IN ())) ORDER BY x'e519';
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT ((vt0.c0 IN ())))) ORDER BY x'e519';
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((((vt0.c0 IN ())) ISNULL)) ORDER BY x'e519';
SELECT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((((rt0.c0) IS FALSE))LIKE(((rt0.c0)>(rt0.c0))))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c0) IS FALSE))LIKE(((rt0.c0)>(rt0.c0))))))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((((((rt0.c0) IS FALSE))LIKE(((rt0.c0)>(rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM rt0, vt0 WHERE (vt0.c1) GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0 UNION SELECT rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM rt0, vt0 WHERE ((NOT (vt0.c1))) GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM rt0, vt0 WHERE (((vt0.c1) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0;
SELECT rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0;
SELECT ALL vt0.c1, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c1, rt0.c1;
SELECT ALL vt0.c1, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c1, rt0.c1 HAVING MIN(AVG(rt0.c2)) UNION ALL SELECT ALL vt0.c1, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c1, rt0.c1 HAVING (NOT (MIN(AVG(rt0.c2)))) UNION ALL SELECT vt0.c1, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c1, rt0.c1 HAVING ((MIN(AVG(rt0.c2))) ISNULL);
SELECT ALL MAX(CASE rt0.c0  WHEN ((rt0.c0)=(rt0.c2)) THEN LENGTH(rt0.c1) WHEN CAST(rt0.c0 AS INTEGER) THEN ((rt0.c1)<=('0.5477793593185427')) WHEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN CAST('-1305070277' AS BLOB) ELSE ((((x'c65e')AND(rt0.c2)))OR(rt0.c2)) END) FROM rt0;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (CAST(vt0.c1 COLLATE BINARY AS NUMERIC)) UNION ALL SELECT * FROM vt0 WHERE ((NOT (CAST(vt0.c1 COLLATE BINARY AS NUMERIC)))) UNION ALL SELECT * FROM vt0 WHERE (((CAST(vt0.c1 COLLATE BINARY AS NUMERIC)) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (LTRIM((~ (rt0.c2)))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (LTRIM((~ (rt0.c2)))))) UNION SELECT DISTINCT * FROM vt0 NOT INDEXED, rt0 WHERE (((LTRIM((~ (rt0.c2)))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 WHERE (((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))AND(((vt0.c0)%(vt0.c1)))))AND(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE ((NOT (((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))AND(((vt0.c0)%(vt0.c1)))))AND(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END))))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE (((((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))AND(((vt0.c0)%(vt0.c1)))))AND(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END))) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c0, vt0.c1, rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, vt0.c1, rt0.c1, rt0.c0, rt0.c2;
SELECT vt0.c0, vt0.c1, rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, vt0.c1, rt0.c1, rt0.c0, rt0.c2 HAVING (((((((rt0.c1)OR(TOTAL(vt0.c0))))AND(rt0.c0))))<((((TOTAL(MAX(rt0.c0))) ISNULL)))) UNION ALL SELECT ALL vt0.c0, vt0.c1, rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, vt0.c1, rt0.c1, rt0.c0, rt0.c2 HAVING (NOT ((((((((rt0.c1)OR(TOTAL(vt0.c0))))AND(rt0.c0))))<((((TOTAL(MAX(rt0.c0))) ISNULL)))))) UNION ALL SELECT ALL vt0.c0, vt0.c1, rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, vt0.c1, rt0.c1, rt0.c0, rt0.c2 HAVING (((((((((rt0.c1)OR(TOTAL(vt0.c0))))AND(rt0.c0))))<((((TOTAL(MAX(rt0.c0))) ISNULL))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (x'') UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (x''))) UNION ALL SELECT * FROM rt0 WHERE (((x'') ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c2)&(rt0.c2)) IN (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((rt0.c2)&(rt0.c2)) IN (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c2)&(rt0.c2)) IN (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, vt0.c1;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, vt0.c1 FROM rt0, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((rt0.c2 COLLATE BINARY)) AND ((rt0.c0)))) GROUP BY rt0.c1, rt0.c2, rt0.c0, vt0.c1 UNION SELECT rt0.c1, rt0.c2, rt0.c0, vt0.c1 FROM rt0, vt0 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN ((rt0.c2 COLLATE BINARY)) AND ((rt0.c0)))))) GROUP BY rt0.c1, rt0.c2, rt0.c0, vt0.c1 UNION SELECT rt0.c1, rt0.c2, rt0.c0, vt0.c1 FROM rt0, vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((rt0.c2 COLLATE BINARY)) AND ((rt0.c0)))) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0, vt0.c1;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, vt0.c1;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING MIN(AVG(AVG(rt0.c2))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (MIN(AVG(AVG(rt0.c2))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((MIN(AVG(AVG(rt0.c2)))) ISNULL);
SELECT ALL rt0.c0 FROM rt0, vt0;
SELECT rt0.c0 FROM rt0, vt0 WHERE (((((((((((rt0.c1)==('罿W4 y*4p')))OR((((NULL))>((rt0.c2))))))AND((rt0.c0 IN ()))))OR(((vt0.c1) NOT NULL))))OR((- (rt0.c1))))) UNION ALL SELECT ALL rt0.c0 FROM rt0, vt0 WHERE ((NOT (((((((((((rt0.c1)==('罿W4 y*4p')))OR((((NULL))>((rt0.c2))))))AND((rt0.c0 IN ()))))OR(((vt0.c1) NOT NULL))))OR((- (rt0.c1))))))) UNION ALL SELECT ALL rt0.c0 FROM rt0, vt0 WHERE (((((((((((((rt0.c1)==('罿W4 y*4p')))OR((((NULL))>((rt0.c2))))))AND((rt0.c0 IN ()))))OR(((vt0.c1) NOT NULL))))OR((- (rt0.c1))))) ISNULL));
SELECT ALL rt0.c0 FROM rt0, vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((CAST(rt0.c0 AS BLOB))) AND (((NOT (rt0.c0)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((rt0.c0)) NOT BETWEEN ((CAST(rt0.c0 AS BLOB))) AND (((NOT (rt0.c0)))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c0)) NOT BETWEEN ((CAST(rt0.c0 AS BLOB))) AND (((NOT (rt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 WHERE (CAST(vt0.c0 AS TEXT) COLLATE RTRIM) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE ((NOT (CAST(vt0.c0 AS TEXT) COLLATE RTRIM))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT) COLLATE RTRIM) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((AVG(vt0.c1)) BETWEEN (((((SUM(rt0.c0))AND(vt0.c1)))OR(vt0.c1))) AND (((AVG(vt0.c0)) BETWEEN (AVG(MIN(AVG(MIN(TOTAL(MIN(COUNT(rt0.c2)))))))) AND (vt0.c1)))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (((AVG(vt0.c1)) BETWEEN (((((SUM(rt0.c0))AND(vt0.c1)))OR(vt0.c1))) AND (((AVG(vt0.c0)) BETWEEN (AVG(MIN(AVG(MIN(TOTAL(MIN(COUNT(rt0.c2)))))))) AND (vt0.c1)))))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((((AVG(vt0.c1)) BETWEEN (((((SUM(rt0.c0))AND(vt0.c1)))OR(vt0.c1))) AND (((AVG(vt0.c0)) BETWEEN (AVG(MIN(AVG(MIN(TOTAL(MIN(COUNT(rt0.c2)))))))) AND (vt0.c1))))) ISNULL);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON ((((CASE WHEN rt0.c2 THEN rt0.c2 END)OR(((rt0.c0)+(vt0.c0)))))OR(((rt0.c1) NOT BETWEEN (0.699159187606626) AND (rt0.c1))));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON ((((CASE WHEN rt0.c2 THEN rt0.c2 END)OR(((rt0.c0)+(vt0.c0)))))OR(((rt0.c1) NOT BETWEEN (0.699159187606626) AND (rt0.c1)))) WHERE (((((((vt0.c1) IS FALSE))AND(((rt0.c1)<>(vt0.c1)))))OR(((rt0.c2)IS(rt0.c2))))) UNION ALL SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON ((((CASE WHEN rt0.c2 THEN rt0.c2 END)OR(((rt0.c0)+(vt0.c0)))))OR(((rt0.c1) NOT BETWEEN (0.699159187606626) AND (rt0.c1)))) WHERE ((NOT (((((((vt0.c1) IS FALSE))AND(((rt0.c1)<>(vt0.c1)))))OR(((rt0.c2)IS(rt0.c2))))))) UNION ALL SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON ((((CASE WHEN rt0.c2 THEN rt0.c2 END)OR(((rt0.c0)+(vt0.c0)))))OR(((rt0.c1) NOT BETWEEN (0.699159187606626) AND (rt0.c1)))) WHERE (((((((((vt0.c1) IS FALSE))AND(((rt0.c1)<>(vt0.c1)))))OR(((rt0.c2)IS(rt0.c2))))) ISNULL));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON ((((CASE WHEN rt0.c2 THEN rt0.c2 END)OR(((rt0.c0)+(vt0.c0)))))OR(((rt0.c1) NOT BETWEEN (0.699159187606626) AND (rt0.c1))));
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ((rt0.c2 IN ()) COLLATE RTRIM COLLATE NOCASE) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((rt0.c2 IN ()) COLLATE RTRIM COLLATE NOCASE))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ((((rt0.c2 IN ()) COLLATE RTRIM COLLATE NOCASE) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT vt0.c0, rt0.c2, vt0.c1 FROM vt0 NATURAL JOIN rt0 GROUP BY vt0.c0, rt0.c2, vt0.c1;
SELECT vt0.c0, rt0.c2, vt0.c1 FROM vt0 NATURAL JOIN rt0 WHERE ((((((rt0.c2) BETWEEN (vt0.c0) AND (vt0.c0))))<>((((rt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c0)))))) GROUP BY vt0.c0, rt0.c2, vt0.c1 UNION SELECT ALL vt0.c0, rt0.c2, vt0.c1 FROM vt0 NATURAL JOIN rt0 WHERE ((NOT ((((((rt0.c2) BETWEEN (vt0.c0) AND (vt0.c0))))!=((((rt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c0)))))))) GROUP BY vt0.c0, rt0.c2, vt0.c1 UNION SELECT vt0.c0, rt0.c2, vt0.c1 FROM vt0 NATURAL JOIN rt0 WHERE ((((((((rt0.c2) BETWEEN (vt0.c0) AND (vt0.c0))))<>((((rt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c0)))))) ISNULL)) GROUP BY vt0.c0, rt0.c2, vt0.c1;
SELECT vt0.c0, rt0.c2, vt0.c1 FROM vt0 NATURAL JOIN rt0 GROUP BY vt0.c0, rt0.c2, vt0.c1;
SELECT rt0.c2, vt0.c1, rt0.c0, vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON CAST(((rt0.c1)OR(rt0.c1)) AS BLOB) GROUP BY rt0.c2, vt0.c1, rt0.c0, vt0.c0;
SELECT ALL rt0.c2, vt0.c1, rt0.c0, vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON CAST(((rt0.c1)OR(rt0.c1)) AS BLOB) GROUP BY rt0.c2, vt0.c1, rt0.c0, vt0.c0 HAVING CAST(((AVG(vt0.c0)) IS TRUE) AS REAL) UNION ALL SELECT rt0.c2, vt0.c1, rt0.c0, vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON CAST(((rt0.c1)OR(rt0.c1)) AS BLOB) GROUP BY rt0.c2, vt0.c1, rt0.c0, vt0.c0 HAVING (NOT (CAST(((AVG(vt0.c0)) IS TRUE) AS REAL))) UNION ALL SELECT rt0.c2, vt0.c1, rt0.c0, vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON CAST(((rt0.c1)OR(rt0.c1)) AS BLOB) GROUP BY rt0.c2, vt0.c1, rt0.c0, vt0.c0 HAVING ((CAST(((AVG(vt0.c0)) IS TRUE) AS REAL)) ISNULL);
SELECT rt0.c2, vt0.c1, rt0.c0, vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON CAST(((rt0.c1)OR(rt0.c1)) AS BLOB) GROUP BY rt0.c2, vt0.c1, rt0.c0, vt0.c0;
SELECT ALL rt0.c2, vt0.c1, rt0.c0, vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON CAST(((rt0.c1)OR(rt0.c1)) AS BLOB) GROUP BY rt0.c2, vt0.c1, rt0.c0, vt0.c0 HAVING CAST(((AVG(vt0.c0)) IS TRUE) AS REAL) UNION ALL SELECT rt0.c2, vt0.c1, rt0.c0, vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON CAST(((rt0.c1)OR(rt0.c1)) AS BLOB) GROUP BY rt0.c2, vt0.c1, rt0.c0, vt0.c0 HAVING (NOT (CAST(((AVG(vt0.c0)) IS TRUE) AS REAL))) UNION ALL SELECT rt0.c2, vt0.c1, rt0.c0, vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON CAST(((rt0.c1)OR(rt0.c1)) AS BLOB) GROUP BY rt0.c2, vt0.c1, rt0.c0, vt0.c0 HAVING ((CAST(((AVG(vt0.c0)) IS TRUE) AS REAL)) ISNULL);
SELECT rt0.c2, vt0.c1, rt0.c0, vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON CAST(((rt0.c1)OR(rt0.c1)) AS BLOB) GROUP BY rt0.c2, vt0.c1, rt0.c0, vt0.c0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (CAST(CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END AS TEXT)) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (CAST(CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END AS TEXT)))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((CAST(CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END AS TEXT)) ISNULL));
SELECT ALL rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (NULL) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM vt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE (x'4e38f269' COLLATE NOCASE) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (x'4e38f269' COLLATE NOCASE))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE (((x'4e38f269' COLLATE NOCASE) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (MIN(MIN(vt0.c0)))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT ((NOT (MIN(MIN(vt0.c0)))))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (((NOT (MIN(MIN(vt0.c0))))) ISNULL);
SELECT ALL vt0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0 INNER JOIN vt0 ON CASE WHEN ((vt0.c1)IS('1130936970')) THEN (vt0.c0 IN ()) WHEN ((((vt0.c0)AND(rt0.c1)))OR(rt0.c1)) THEN rt0.c0 COLLATE NOCASE WHEN ((rt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) ELSE (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))) END;
SELECT ALL vt0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0 INNER JOIN vt0 ON CASE WHEN ((vt0.c1)IS('1130936970')) THEN (vt0.c0 IN ()) WHEN ((((vt0.c0)AND(rt0.c1)))OR(rt0.c1)) THEN rt0.c0 COLLATE NOCASE WHEN ((rt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) ELSE (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))) END WHERE (((vt0.c0 COLLATE RTRIM)||(rt0.c1))) UNION ALL SELECT ALL vt0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0 INNER JOIN vt0 ON CASE WHEN ((vt0.c1)IS('1130936970')) THEN (vt0.c0 IN ()) WHEN ((((vt0.c0)AND(rt0.c1)))OR(rt0.c1)) THEN rt0.c0 COLLATE NOCASE WHEN ((rt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) ELSE (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))) END WHERE ((NOT (((vt0.c0 COLLATE RTRIM)||(rt0.c1))))) UNION ALL SELECT ALL vt0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0 INNER JOIN vt0 ON CASE WHEN ((vt0.c1)IS('1130936970')) THEN (vt0.c0 IN ()) WHEN ((((vt0.c0)AND(rt0.c1)))OR(rt0.c1)) THEN rt0.c0 COLLATE NOCASE WHEN ((rt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) ELSE (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))) END WHERE (((((vt0.c0 COLLATE RTRIM)||(rt0.c1))) ISNULL));
SELECT ALL vt0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0 INNER JOIN vt0 ON CASE WHEN ((vt0.c1)IS('1130936970')) THEN (vt0.c0 IN ()) WHEN ((((vt0.c0)AND(rt0.c1)))OR(rt0.c1)) THEN rt0.c0 COLLATE NOCASE WHEN ((rt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) ELSE (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))) END;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (x'') UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (x''))) UNION SELECT DISTINCT * FROM vt0 WHERE (((x'') ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (('' IN ())) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (('' IN ())))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((('' IN ())) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0;
SELECT ALL rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0 HAVING MIN(GROUP_CONCAT(rt0.c0)) UNION ALL SELECT ALL rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0 HAVING (NOT (MIN(GROUP_CONCAT(rt0.c0)))) UNION ALL SELECT rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0 HAVING ((MIN(GROUP_CONCAT(rt0.c0))) ISNULL);
SELECT vt0.c0, vt0.c1 FROM vt0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0))) BETWEEN (CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END) AND ((((-5.52372358E8))<=((vt0.c0)))))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0))) BETWEEN (CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END) AND ((((-5.52372358E8))<=((vt0.c0)))))))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0))) BETWEEN (CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END) AND ((((-5.52372358E8))<=((vt0.c0)))))) ISNULL));
SELECT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0, rt0.c1, rt0.c2, rt0.c0, vt0.c1 FROM rt0, vt0;
SELECT DISTINCT vt0.c0, rt0.c1, rt0.c2, rt0.c0, vt0.c1 FROM rt0, vt0 WHERE (TOTAL_CHANGES()) UNION SELECT DISTINCT vt0.c0, rt0.c1, rt0.c2, rt0.c0, vt0.c1 FROM rt0, vt0 WHERE ((NOT (TOTAL_CHANGES()))) UNION SELECT DISTINCT vt0.c0, rt0.c1, rt0.c2, rt0.c0, vt0.c1 FROM rt0, vt0 WHERE (((TOTAL_CHANGES()) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c1, rt0.c2, rt0.c0, vt0.c1 FROM rt0, vt0;
SELECT ALL vt0.c1, rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c1, rt0.c0, rt0.c2, vt0.c0;
SELECT vt0.c1, rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM vt0, rt0 WHERE (LIKELIHOOD(((NULL) NOT NULL), 0.0543487526872386)) GROUP BY vt0.c1, rt0.c1, rt0.c0, rt0.c2, vt0.c0 UNION SELECT vt0.c1, rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM vt0, rt0 WHERE ((NOT (LIKELIHOOD(((NULL) NOT NULL), 0.0543487526872386)))) GROUP BY vt0.c1, rt0.c1, rt0.c0, rt0.c2, vt0.c0 UNION SELECT vt0.c1, rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM vt0, rt0 WHERE (((LIKELIHOOD(((NULL) NOT NULL), 0.0543487526872386)) ISNULL)) GROUP BY vt0.c1, rt0.c1, rt0.c0, rt0.c2, vt0.c0;
SELECT ALL vt0.c1, rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c1, rt0.c0, rt0.c2, vt0.c0;
SELECT ALL rt0.c0, vt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c1, rt0.c2;
SELECT rt0.c0, vt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c1, rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0, vt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c1, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c0, vt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c1, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0, vt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c1, rt0.c2;
SELECT rt0.c0, vt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c1, rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0, vt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c1, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c0, vt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c1, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0, vt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((rt0.c2)OR(CAST(rt0.c2 AS BLOB))))AND(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c2)OR(CAST(rt0.c2 AS BLOB))))AND(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))))))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((((rt0.c2)OR(CAST(rt0.c2 AS BLOB))))AND(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) ISNULL));
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE (TYPEOF(DISTINCT vt0.c1) COLLATE NOCASE) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (TYPEOF(DISTINCT vt0.c1) COLLATE NOCASE))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE (((TYPEOF(DISTINCT vt0.c1) COLLATE NOCASE) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, vt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, vt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, vt0.c1 FROM vt0, rt0 WHERE (((((rt0.c2)OR('1009294985')))<=(((rt0.c1)OR(rt0.c1))))) GROUP BY rt0.c0, rt0.c2, rt0.c1, vt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1, vt0.c1 FROM vt0, rt0 WHERE ((NOT (((((rt0.c2)OR('1009294985')))<=(((rt0.c1)OR(rt0.c1))))))) GROUP BY rt0.c0, rt0.c2, rt0.c1, vt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1, vt0.c1 FROM vt0, rt0 WHERE (((((((rt0.c2)OR('1009294985')))<=(((rt0.c1)OR(rt0.c1))))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1, vt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, vt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, vt0.c1;
SELECT rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0 HAVING GROUP_CONCAT(COUNT(*)) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0 HAVING ((GROUP_CONCAT(COUNT(*))) ISNULL);
SELECT ALL vt0.c1 FROM vt0;
SELECT ALL vt0.c1 FROM vt0 WHERE ((((vt0.c1 IN (vt0.c1)))||(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) UNION ALL SELECT vt0.c1 FROM vt0 WHERE ((NOT ((((vt0.c1 IN (vt0.c1)))||(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))))) UNION ALL SELECT ALL vt0.c1 FROM vt0 WHERE ((((((vt0.c1 IN (vt0.c1)))||(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL));
SELECT ALL vt0.c1 FROM vt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE (UNLIKELY(((rt0.c2)AND(rt0.c2)))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (UNLIKELY(((rt0.c2)AND(rt0.c2)))))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE (((UNLIKELY(((rt0.c2)AND(rt0.c2)))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (CAST((((rt0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c1)) AND ((rt0.c1, rt0.c2, rt0.c0))) AS NUMERIC)) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (CAST((((rt0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c1)) AND ((rt0.c1, rt0.c2, rt0.c0))) AS NUMERIC)))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((CAST((((rt0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c1)) AND ((rt0.c1, rt0.c2, rt0.c0))) AS NUMERIC)) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT vt0.c0, rt0.c1, vt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c1, vt0.c1, rt0.c0;
SELECT vt0.c0, rt0.c1, vt0.c1, rt0.c0 FROM vt0, rt0 NOT INDEXED GROUP BY vt0.c0, rt0.c1, vt0.c1, rt0.c0 HAVING (CAST(rt0.c0 AS TEXT) IN (TOTAL(AVG(-1253384791)), AVG(vt0.c1))) UNION ALL SELECT vt0.c0, rt0.c1, vt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c1, vt0.c1, rt0.c0 HAVING (NOT ((CAST(rt0.c0 AS TEXT) IN (TOTAL(AVG(-1253384791)), AVG(vt0.c1))))) UNION ALL SELECT ALL vt0.c0, rt0.c1, vt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c1, vt0.c1, rt0.c0 HAVING (((CAST(rt0.c0 AS TEXT) IN (TOTAL(AVG(-1253384791)), AVG(vt0.c1)))) ISNULL);
SELECT ALL rt0.c1 FROM rt0;
SELECT ALL rt0.c1 FROM rt0 WHERE ((((CAST(rt0.c0 AS REAL)))>=(((rt0.c1 IN ()))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT ((((CAST(rt0.c0 AS REAL)))>=(((rt0.c1 IN ()))))))) UNION ALL SELECT rt0.c1 FROM rt0 WHERE ((((((CAST(rt0.c0 AS REAL)))>=(((rt0.c1 IN ()))))) ISNULL));
SELECT ALL rt0.c1 FROM rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((COALESCE(vt0.c1, vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN (((vt0.c0) IS TRUE)) AND (NULL))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((COALESCE(vt0.c1, vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN (((vt0.c0) IS TRUE)) AND (NULL))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((COALESCE(vt0.c1, vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN (((vt0.c0) IS TRUE)) AND (NULL))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL rt0.c1, rt0.c0, vt0.c1 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0, vt0.c1;
SELECT ALL rt0.c1, rt0.c0, vt0.c1 FROM vt0, rt0 WHERE ((+ (CASE WHEN rt0.c0 THEN vt0.c0 END))) GROUP BY rt0.c1, rt0.c0, vt0.c1 UNION SELECT ALL rt0.c1, rt0.c0, vt0.c1 FROM vt0, rt0 WHERE ((NOT ((+ (CASE WHEN rt0.c0 THEN vt0.c0 END))))) GROUP BY rt0.c1, rt0.c0, vt0.c1 UNION SELECT rt0.c1, rt0.c0, vt0.c1 FROM vt0, rt0 WHERE ((((+ (CASE WHEN rt0.c0 THEN vt0.c0 END))) ISNULL)) GROUP BY rt0.c1, rt0.c0, vt0.c1;
SELECT ALL rt0.c1, rt0.c0, vt0.c1 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0, vt0.c1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CAST(GROUP_CONCAT(vt0.c0) AS TEXT) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CAST(GROUP_CONCAT(vt0.c0) AS TEXT))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CAST(GROUP_CONCAT(vt0.c0) AS TEXT)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CAST(GROUP_CONCAT(vt0.c0) AS TEXT) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CAST(GROUP_CONCAT(vt0.c0) AS TEXT))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CAST(GROUP_CONCAT(vt0.c0) AS TEXT)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT SUM(CAST(CAST(rt0.c0 AS NUMERIC) AS BLOB)) FROM vt0, rt0 ORDER BY CASE WHEN vt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 ELSE vt0.c1 END COLLATE RTRIM  NULLS FIRST;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CASE WHEN rtreenode(rt0.c2, rt0.c0) THEN ((rt0.c2)>>(rt0.c2)) END) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CASE WHEN rtreenode(rt0.c2, rt0.c0) THEN ((rt0.c2)>>(rt0.c2)) END))) UNION ALL SELECT ALL * FROM rt0 NOT INDEXED WHERE (((CASE WHEN rtreenode(rt0.c2, rt0.c0) THEN ((rt0.c2)>>(rt0.c2)) END) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0 NOT INDEXED, rt0 WHERE ((+ (((rt0.c0)/(rt0.c0))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT ((+ (((rt0.c0)/(rt0.c0))))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((((+ (((rt0.c0)/(rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT vt0.c1, vt0.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt0 NOT INDEXED, vt0 GROUP BY vt0.c1, vt0.c0, rt0.c0, rt0.c2, rt0.c1;
SELECT vt0.c1, vt0.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0 WHERE (((CASE rt0.c0  WHEN rt0.c2 THEN vt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c1 THEN rt0.c0 ELSE vt0.c0 END)|((rt0.c1 IN (rt0.c1))))) GROUP BY vt0.c1, vt0.c0, rt0.c0, rt0.c2, rt0.c1 UNION SELECT vt0.c1, vt0.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0 WHERE ((NOT (((CASE rt0.c0  WHEN rt0.c2 THEN vt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c1 THEN rt0.c0 ELSE vt0.c0 END)|((rt0.c1 IN (rt0.c1))))))) GROUP BY vt0.c1, vt0.c0, rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL vt0.c1, vt0.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0 WHERE (((((CASE rt0.c0  WHEN rt0.c2 THEN vt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c1 THEN rt0.c0 ELSE vt0.c0 END)|((rt0.c1 IN (rt0.c1))))) ISNULL)) GROUP BY vt0.c1, vt0.c0, rt0.c0, rt0.c2, rt0.c1;
SELECT vt0.c1, vt0.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt0 NOT INDEXED, vt0 GROUP BY vt0.c1, vt0.c0, rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (((SUM(rt0.c0))) NOT BETWEEN ((SUM(rt0.c0))) AND ((NULL))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT ((((SUM(rt0.c0))) NOT BETWEEN ((SUM(rt0.c0))) AND ((NULL))))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (((((SUM(rt0.c0))) NOT BETWEEN ((SUM(rt0.c0))) AND ((NULL)))) ISNULL);
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (((SUM(rt0.c0))) NOT BETWEEN ((SUM(rt0.c0))) AND ((NULL))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT ((((SUM(rt0.c0))) NOT BETWEEN ((SUM(rt0.c0))) AND ((NULL))))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (((((SUM(rt0.c0))) NOT BETWEEN ((SUM(rt0.c0))) AND ((NULL)))) ISNULL);
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT vt0.c1, vt0.c0 FROM vt0;
SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE BINARY) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE BINARY))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE BINARY) ISNULL));
SELECT vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE (CASE WHEN rt0.c1 COLLATE NOCASE THEN ((rt0.c1)-(0.5630092131103224)) ELSE rt0.c2 COLLATE NOCASE END) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT (CASE WHEN rt0.c1 COLLATE NOCASE THEN ((rt0.c1)-(0.5630092131103224)) ELSE rt0.c2 COLLATE NOCASE END))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((CASE WHEN rt0.c1 COLLATE NOCASE THEN ((rt0.c1)-(0.5630092131103224)) ELSE rt0.c2 COLLATE NOCASE END) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE (((((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c1))) NOT BETWEEN (((rt0.c0) IS FALSE)) AND (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT (((((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c1))) NOT BETWEEN (((rt0.c0) IS FALSE)) AND (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE (((((((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c1))) NOT BETWEEN (((rt0.c0) IS FALSE)) AND (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING AVG(TOTAL(COUNT(rt0.c0))) COLLATE BINARY UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (AVG(TOTAL(COUNT(rt0.c0))) COLLATE BINARY)) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((AVG(TOTAL(COUNT(rt0.c0))) COLLATE BINARY) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c1 THEN vt0.c0 END) BETWEEN (CAST(0.7600257701928023 AS TEXT)) AND (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN 0.14348747445815035 THEN vt0.c0 END))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((CASE WHEN vt0.c1 THEN vt0.c0 END) BETWEEN (CAST(0.7600257701928023 AS TEXT)) AND (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN 0.14348747445815035 THEN vt0.c0 END))))) UNION ALL SELECT * FROM vt0 WHERE (((((CASE WHEN vt0.c1 THEN vt0.c0 END) BETWEEN (CAST(0.7600257701928023 AS TEXT)) AND (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN 0.14348747445815035 THEN vt0.c0 END))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE (((vt0.c0) NOTNULL)) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((NOT (((vt0.c0) NOTNULL)))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE (((((vt0.c0) NOTNULL)) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE (((rt0.c0 IN ()) IN (((rt0.c0)|(rt0.c0))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c0 IN ()) IN (((rt0.c0)|(rt0.c0))))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE (((((rt0.c0 IN ()) IN (((rt0.c0)|(rt0.c0))))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 NOT INDEXED, vt0 GROUP BY rt0.c0 HAVING (((((TOTAL(rt0.c0))AND(vt0.c0)))OR(TOTAL(rt0.c0))) IN ()) UNION ALL SELECT rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0 HAVING (NOT ((((((TOTAL(rt0.c0))AND(vt0.c0)))OR(TOTAL(rt0.c0))) IN ()))) UNION ALL SELECT ALL rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0 HAVING (((((((TOTAL(rt0.c0))AND(vt0.c0)))OR(TOTAL(rt0.c0))) IN ())) ISNULL);
SELECT ALL rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 NOT INDEXED, vt0 GROUP BY rt0.c0 HAVING (((((TOTAL(rt0.c0))AND(vt0.c0)))OR(TOTAL(rt0.c0))) IN ()) UNION ALL SELECT rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0 HAVING (NOT ((((((TOTAL(rt0.c0))AND(vt0.c0)))OR(TOTAL(rt0.c0))) IN ()))) UNION ALL SELECT ALL rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0 HAVING (((((((TOTAL(rt0.c0))AND(vt0.c0)))OR(TOTAL(rt0.c0))) IN ())) ISNULL);
SELECT ALL rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (((vt0.c0)==(vt0.c1)) COLLATE NOCASE) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0)=(vt0.c1)) COLLATE NOCASE))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (((((vt0.c0)==(vt0.c1)) COLLATE NOCASE) ISNULL));
SELECT vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT rt0.c0, rt0.c2, vt0.c0, vt0.c1 FROM vt0, rt0 NOT INDEXED;
SELECT DISTINCT rt0.c0, rt0.c2, vt0.c0, vt0.c1 FROM vt0, rt0 WHERE ((('1212116152') BETWEEN (TYPEOF(rt0.c0)) AND (rt0.c0))) UNION SELECT DISTINCT rt0.c0, rt0.c2, vt0.c0, vt0.c1 FROM vt0, rt0 WHERE ((NOT ((('1212116152') BETWEEN (TYPEOF(rt0.c0)) AND (rt0.c0))))) UNION SELECT DISTINCT rt0.c0, rt0.c2, vt0.c0, vt0.c1 FROM vt0, rt0 WHERE ((((('1212116152') BETWEEN (TYPEOF(rt0.c0)) AND (rt0.c0))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, vt0.c0, vt0.c1 FROM vt0, rt0 NOT INDEXED;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))))) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0, rt0.c1 FROM vt0 NATURAL JOIN rt0 GROUP BY vt0.c1, vt0.c0, rt0.c1;
SELECT vt0.c1, vt0.c0, rt0.c1 FROM vt0 NATURAL JOIN rt0 GROUP BY vt0.c1, vt0.c0, rt0.c1 HAVING AVG(TOTAL(vt0.c0)) UNION ALL SELECT ALL vt0.c1, vt0.c0, rt0.c1 FROM vt0 NATURAL JOIN rt0 GROUP BY vt0.c1, vt0.c0, rt0.c1 HAVING (NOT (AVG(TOTAL(vt0.c0)))) UNION ALL SELECT ALL vt0.c1, vt0.c0, rt0.c1 FROM vt0 NATURAL JOIN rt0 GROUP BY vt0.c1, vt0.c0, rt0.c1 HAVING ((AVG(TOTAL(vt0.c0))) ISNULL);
SELECT rt0.c2, vt0.c1, rt0.c0, rt0.c1 FROM vt0, rt0;
SELECT ALL rt0.c2, vt0.c1, rt0.c0, rt0.c1 FROM vt0, rt0 WHERE (((((vt0.c1 COLLATE NOCASE)OR((rt0.c2 IN ()))))AND(CAST(rt0.c1 AS BLOB)))) UNION ALL SELECT ALL rt0.c2, vt0.c1, rt0.c0, rt0.c1 FROM vt0, rt0 WHERE ((NOT (((((vt0.c1 COLLATE NOCASE)OR((rt0.c2 IN ()))))AND(CAST(rt0.c1 AS BLOB)))))) UNION ALL SELECT rt0.c2, vt0.c1, rt0.c0, rt0.c1 FROM vt0, rt0 WHERE (((((((vt0.c1 COLLATE NOCASE)OR((rt0.c2 IN ()))))AND(CAST(rt0.c1 AS BLOB)))) ISNULL));
SELECT rt0.c2, vt0.c1, rt0.c0, rt0.c1 FROM vt0, rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((NULL)*(((rt0.c0)<=(rt0.c0))))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((NULL)*(((rt0.c0)<=(rt0.c0))))))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((NULL)*(((rt0.c0)<=(rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((((UPPER(vt0.c1)))=((((vt0.c1) ISNULL))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT ((((UPPER(vt0.c1)))=((((vt0.c1) ISNULL))))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((((((UPPER(vt0.c1)))==((((vt0.c1) ISNULL))))) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1 FROM vt0, rt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0, rt0 GROUP BY vt0.c1 HAVING CASE MIN('-318230763')  WHEN MIN(vt0.c1) THEN GROUP_CONCAT(rt0.c2) END UNION ALL SELECT vt0.c1 FROM vt0, rt0 GROUP BY vt0.c1 HAVING (NOT (CASE MIN('-318230763')  WHEN MIN(vt0.c1) THEN GROUP_CONCAT(rt0.c2) END)) UNION ALL SELECT ALL vt0.c1 FROM vt0, rt0 GROUP BY vt0.c1 HAVING ((CASE MIN('-318230763')  WHEN MIN(vt0.c1) THEN GROUP_CONCAT(rt0.c2) END) ISNULL);
SELECT vt0.c1 FROM vt0, rt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0, rt0 GROUP BY vt0.c1 HAVING CASE MIN('-318230763')  WHEN MIN(vt0.c1) THEN GROUP_CONCAT(rt0.c2) END UNION ALL SELECT vt0.c1 FROM vt0, rt0 GROUP BY vt0.c1 HAVING (NOT (CASE MIN('-318230763')  WHEN MIN(vt0.c1) THEN GROUP_CONCAT(rt0.c2) END)) UNION ALL SELECT ALL vt0.c1 FROM vt0, rt0 GROUP BY vt0.c1 HAVING ((CASE MIN('-318230763')  WHEN MIN(vt0.c1) THEN GROUP_CONCAT(rt0.c2) END) ISNULL);
SELECT vt0.c1 FROM vt0, rt0 GROUP BY vt0.c1;
SELECT ALL rt0.c0, rt0.c1, vt0.c1, vt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON ((((vt0.c0)IS(vt0.c1)))LIKE(((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c1))));
SELECT ALL rt0.c0, rt0.c1, vt0.c1, vt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON ((((vt0.c0)IS(vt0.c1)))LIKE(((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))) WHERE (((((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)))%(((((((((vt0.c1)OR(rt0.c1)))OR(rt0.c0)))AND(vt0.c0)))OR(vt0.c0))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, vt0.c1, vt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON ((((vt0.c0)IS(vt0.c1)))LIKE(((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))) WHERE ((NOT (((((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)))%(((((((((vt0.c1)OR(rt0.c1)))OR(rt0.c0)))AND(vt0.c0)))OR(vt0.c0))))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, vt0.c1, vt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON ((((vt0.c0)IS(vt0.c1)))LIKE(((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))) WHERE (((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)))%(((((((((vt0.c1)OR(rt0.c1)))OR(rt0.c0)))AND(vt0.c0)))OR(vt0.c0))))) ISNULL));
SELECT ALL rt0.c0, rt0.c1, vt0.c1, vt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON ((((vt0.c0)IS(vt0.c1)))LIKE(((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c1))));
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0, vt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0, vt0 WHERE ((- (((rt0.c2)-(rt0.c0))))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0, vt0 WHERE ((NOT ((- (((rt0.c2)-(rt0.c0))))))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0, vt0 WHERE ((((- (((rt0.c2)-(rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0, vt0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE ((0Xa8c25b5 IN ())) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT ((0Xa8c25b5 IN ())))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((((0xa8c25b5 IN ())) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((AVG(MAX(MAX(MIN(COUNT(*)))))) NOT NULL) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (((AVG(MAX(MAX(MIN(COUNT(*)))))) NOT NULL))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((((AVG(MAX(MAX(MIN(COUNT(*)))))) NOT NULL)) ISNULL);
SELECT ALL MIN(((0.6042385673601821)*(((('-1872240320'))>((rt0.c1)))))) FROM rt0, vt0 ORDER BY ((((vt0.c1)-(rt0.c0)))-(0.4774634980473722));
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (((rt0.c1) ISNULL) COLLATE RTRIM) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((rt0.c1) ISNULL) COLLATE RTRIM))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((rt0.c1) ISNULL) COLLATE RTRIM) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0, vt0.c0 FROM vt0 NATURAL JOIN rt0;
SELECT DISTINCT rt0.c2, rt0.c0, vt0.c0 FROM vt0 NATURAL JOIN rt0 WHERE (rt0.c2) UNION SELECT DISTINCT rt0.c2, rt0.c0, vt0.c0 FROM vt0 NATURAL JOIN rt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT rt0.c2, rt0.c0, vt0.c0 FROM vt0 NATURAL JOIN rt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, vt0.c0 FROM vt0 NATURAL JOIN rt0;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 WHERE (vt0.c1) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE ((NOT (vt0.c1))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE (((vt0.c1) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING TRIM(DISTINCT GROUP_CONCAT(0.6468551036822784), (- (rt0.c1))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (TRIM(DISTINCT GROUP_CONCAT(0.6468551036822784), (- (rt0.c1))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((TRIM(DISTINCT GROUP_CONCAT(0.6468551036822784), (- (rt0.c1)))) ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING TRIM(DISTINCT GROUP_CONCAT(0.6468551036822784), (- (rt0.c1))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (TRIM(DISTINCT GROUP_CONCAT(0.6468551036822784), (- (rt0.c1))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((TRIM(DISTINCT GROUP_CONCAT(0.6468551036822784), (- (rt0.c1)))) ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (INSTR(rt0.c2, rt0.c2) COLLATE BINARY) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (INSTR(rt0.c2, rt0.c2) COLLATE BINARY))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (((INSTR(rt0.c2, rt0.c2) COLLATE BINARY) ISNULL));
SELECT rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE (CASE WHEN (- (rt0.c0)) THEN ((rt0.c2)>>(rt0.c1)) END) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (CASE WHEN (- (rt0.c0)) THEN ((rt0.c2)>>(rt0.c1)) END))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE (((CASE WHEN (- (rt0.c0)) THEN ((rt0.c2)>>(rt0.c1)) END) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c2, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM vt0, rt0 NOT INDEXED WHERE (CAST((vt0.c0 IN (NULL)) AS REAL)) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM vt0, rt0 WHERE ((NOT (CAST((vt0.c0 IN (NULL)) AS REAL)))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM vt0, rt0 WHERE (((CAST((vt0.c0 IN (NULL)) AS REAL)) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0;
SELECT vt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c1, rt0.c2;
SELECT ALL vt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 NOT INDEXED GROUP BY vt0.c0, rt0.c1, rt0.c2 HAVING CASE ((((GROUP_CONCAT(AVG(rt0.c2)))AND(SUM(COUNT(*)))))OR(GROUP_CONCAT(vt0.c1)))  WHEN AVG(vt0.c1) THEN CASE TOTAL(MAX(TOTAL(COUNT(COUNT(0.8279659963856739)))))  WHEN SUM(COUNT(*)) THEN TOTAL(GROUP_CONCAT(rt0.c0)) WHEN GROUP_CONCAT(COUNT(*)) THEN GROUP_CONCAT(GROUP_CONCAT(COUNT(vt0.c0))) WHEN rt0.c0 THEN rt0.c0 ELSE MAX(COUNT(SUM(vt0.c1))) END WHEN GROUP_CONCAT(rt0.c0) THEN rt0.c2 WHEN COUNT(*) THEN AVG(vt0.c0) ELSE rt0.c0 END UNION ALL SELECT vt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c1, rt0.c2 HAVING (NOT (CASE ((((GROUP_CONCAT(AVG(rt0.c2)))AND(SUM(COUNT(*)))))OR(GROUP_CONCAT(vt0.c1)))  WHEN AVG(vt0.c1) THEN CASE TOTAL(MAX(TOTAL(COUNT(COUNT(0.8279659963856739)))))  WHEN SUM(COUNT(*)) THEN TOTAL(GROUP_CONCAT(rt0.c0)) WHEN GROUP_CONCAT(COUNT(*)) THEN GROUP_CONCAT(GROUP_CONCAT(COUNT(vt0.c0))) WHEN rt0.c0 THEN rt0.c0 ELSE MAX(COUNT(SUM(vt0.c1))) END WHEN GROUP_CONCAT(rt0.c0) THEN rt0.c2 WHEN COUNT(*) THEN AVG(vt0.c0) ELSE rt0.c0 END)) UNION ALL SELECT vt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c1, rt0.c2 HAVING ((CASE ((((GROUP_CONCAT(AVG(rt0.c2)))AND(SUM(COUNT(*)))))OR(GROUP_CONCAT(vt0.c1)))  WHEN AVG(vt0.c1) THEN CASE TOTAL(MAX(TOTAL(COUNT(COUNT(0.8279659963856739)))))  WHEN SUM(COUNT(*)) THEN TOTAL(GROUP_CONCAT(rt0.c0)) WHEN GROUP_CONCAT(COUNT(*)) THEN GROUP_CONCAT(GROUP_CONCAT(COUNT(vt0.c0))) WHEN rt0.c0 THEN rt0.c0 ELSE MAX(COUNT(SUM(vt0.c1))) END WHEN GROUP_CONCAT(rt0.c0) THEN rt0.c2 WHEN COUNT(*) THEN AVG(vt0.c0) ELSE rt0.c0 END) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (((((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))AND((((vt0.c1)) BETWEEN ((x'')) AND ((vt0.c0))))))AND(CAST(vt0.c0 AS TEXT)))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))AND((((vt0.c1)) BETWEEN ((x'')) AND ((vt0.c0))))))AND(CAST(vt0.c0 AS TEXT)))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))AND((((vt0.c1)) BETWEEN ((x'')) AND ((vt0.c0))))))AND(CAST(vt0.c0 AS TEXT)))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE (LIKELY(rt0.c1 COLLATE NOCASE)) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (LIKELY(rt0.c1 COLLATE NOCASE)))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE (((LIKELY(rt0.c1 COLLATE NOCASE)) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((- (CASE WHEN rt0.c1 THEN rt0.c1 END))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((- (CASE WHEN rt0.c1 THEN rt0.c1 END))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((((- (CASE WHEN rt0.c1 THEN rt0.c1 END))) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING SUM(SUM(x'5286')) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (SUM(SUM(x'5286')))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((SUM(SUM(x'5286'))) ISNULL);
SELECT ALL rt0.c0, rt0.c1 FROM rt0, vt0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0, vt0 WHERE (CAST(((rt0.c1)=(rt0.c1)) AS INTEGER)) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0, vt0 WHERE ((NOT (CAST(((rt0.c1)=(rt0.c1)) AS INTEGER)))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0, vt0 WHERE (((CAST(((rt0.c1)==(rt0.c1)) AS INTEGER)) ISNULL));
SELECT ALL rt0.c0, rt0.c1 FROM rt0, vt0;
SELECT DISTINCT rt0.c0, vt0.c0, vt0.c1 FROM vt0, rt0;
SELECT DISTINCT rt0.c0, vt0.c0, vt0.c1 FROM vt0, rt0 WHERE ((((((((('4')OR((+ (rt0.c2)))))AND(((vt0.c1)!=(vt0.c1)))))AND(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))))OR(TRIM(rt0.c2)))) UNION SELECT DISTINCT rt0.c0, vt0.c0, vt0.c1 FROM vt0, rt0 WHERE ((NOT ((((((((('4')OR((+ (rt0.c2)))))AND(((vt0.c1)<>(vt0.c1)))))AND(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))))OR(TRIM(rt0.c2)))))) UNION SELECT DISTINCT rt0.c0, vt0.c0, vt0.c1 FROM vt0, rt0 WHERE ((((((((((('4')OR((+ (rt0.c2)))))AND(((vt0.c1)<>(vt0.c1)))))AND(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))))OR(TRIM(rt0.c2)))) ISNULL));
SELECT DISTINCT rt0.c0, vt0.c0, vt0.c1 FROM vt0, rt0;
SELECT rt0.c0, rt0.c1, vt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, vt0.c1;
SELECT ALL rt0.c0, rt0.c1, vt0.c1 FROM vt0, rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((((((((((vt0.c0)AND(rt0.c1)))OR(vt0.c0)))OR(vt0.c0)))AND(rt0.c0)))) AND ((((vt0.c0) IS TRUE))))) GROUP BY rt0.c0, rt0.c1, vt0.c1 UNION SELECT ALL rt0.c0, rt0.c1, vt0.c1 FROM vt0, rt0 WHERE ((NOT ((((rt0.c0)) NOT BETWEEN ((((((((((vt0.c0)AND(rt0.c1)))OR(vt0.c0)))OR(vt0.c0)))AND(rt0.c0)))) AND ((((vt0.c0) IS TRUE))))))) GROUP BY rt0.c0, rt0.c1, vt0.c1 UNION SELECT rt0.c0, rt0.c1, vt0.c1 FROM vt0, rt0 WHERE ((((((rt0.c0)) NOT BETWEEN ((((((((((vt0.c0)AND(rt0.c1)))OR(vt0.c0)))OR(vt0.c0)))AND(rt0.c0)))) AND ((((vt0.c0) IS TRUE))))) ISNULL)) GROUP BY rt0.c0, rt0.c1, vt0.c1;
SELECT rt0.c0, rt0.c1, vt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, vt0.c1;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING SUM(MAX(rt0.c2) COLLATE BINARY) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (SUM(MAX(rt0.c2) COLLATE BINARY))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((SUM(MAX(rt0.c2) COLLATE BINARY)) ISNULL);
SELECT rt0.c0 FROM rt0;
SELECT ALL rt0.c0 FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END) ISNULL)) UNION ALL SELECT rt0.c0 FROM rt0 WHERE ((NOT (((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END) ISNULL)))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE (((((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END) ISNULL)) ISNULL));
SELECT rt0.c0 FROM rt0;
SELECT DISTINCT vt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0;
SELECT DISTINCT vt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 WHERE ((+ (UNLIKELY(DISTINCT rt0.c1)))) UNION SELECT DISTINCT vt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 WHERE ((NOT ((+ (UNLIKELY(DISTINCT rt0.c1)))))) UNION SELECT DISTINCT vt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 WHERE ((((+ (UNLIKELY(DISTINCT rt0.c1)))) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 WHERE (((0.8174273194315541)>=(((vt0.c0)-(vt0.c1))))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE ((NOT (((0.8174273194315541)>=(((vt0.c0)-(vt0.c1))))))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE (((((0.8174273194315541)>=(((vt0.c0)-(vt0.c1))))) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING COUNT(((rt0.c2) IS TRUE)) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (COUNT(((rt0.c2) IS TRUE)))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((COUNT(((rt0.c2) IS TRUE))) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING COUNT(((rt0.c2) IS TRUE)) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (COUNT(((rt0.c2) IS TRUE)))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((COUNT(((rt0.c2) IS TRUE))) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL SUM(((- (rt0.c0)) IN ())) FROM rt0, vt0;
SELECT vt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0;
SELECT ALL vt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0 WHERE (((SQLITE_COMPILEOPTION_GET(vt0.c1))+(((rt0.c0) ISNULL)))) UNION ALL SELECT vt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0 WHERE ((NOT (((SQLITE_COMPILEOPTION_GET(vt0.c1))+(((rt0.c0) ISNULL)))))) UNION ALL SELECT ALL vt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0 WHERE (((((SQLITE_COMPILEOPTION_GET(vt0.c1))+(((rt0.c0) ISNULL)))) ISNULL));
SELECT vt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ((~ (((rt0.c2) NOTNULL)))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((~ (((rt0.c2) NOTNULL)))))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ((((~ (((rt0.c2) NOTNULL)))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT vt0.c1, rt0.c1 FROM vt0 NATURAL JOIN rt0 GROUP BY vt0.c1, rt0.c1;
SELECT ALL vt0.c1, rt0.c1 FROM vt0 NATURAL JOIN rt0 WHERE (((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c1 ELSE '-178799210' END) NOT BETWEEN (NULL) AND (CAST(rt0.c0 AS NUMERIC)))) GROUP BY vt0.c1, rt0.c1 UNION SELECT vt0.c1, rt0.c1 FROM vt0 NATURAL JOIN rt0 WHERE ((NOT (((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c1 ELSE '-178799210' END) NOT BETWEEN (NULL) AND (CAST(rt0.c0 AS NUMERIC)))))) GROUP BY vt0.c1, rt0.c1 UNION SELECT ALL vt0.c1, rt0.c1 FROM vt0 NATURAL JOIN rt0 WHERE (((((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c1 ELSE '-178799210' END) NOT BETWEEN (NULL) AND (CAST(rt0.c0 AS NUMERIC)))) ISNULL)) GROUP BY vt0.c1, rt0.c1;
SELECT vt0.c1, rt0.c1 FROM vt0 NATURAL JOIN rt0 GROUP BY vt0.c1, rt0.c1;
SELECT ALL rt0.c2, rt0.c1, vt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, vt0.c0, vt0.c1;
SELECT rt0.c2, rt0.c1, vt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, vt0.c0, vt0.c1 HAVING GROUP_CONCAT(CAST(rt0.c1 AS BLOB)) UNION ALL SELECT ALL rt0.c2, rt0.c1, vt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, vt0.c0, vt0.c1 HAVING (NOT (GROUP_CONCAT(CAST(rt0.c1 AS BLOB)))) UNION ALL SELECT rt0.c2, rt0.c1, vt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, vt0.c0, vt0.c1 HAVING ((GROUP_CONCAT(CAST(rt0.c1 AS BLOB))) ISNULL);
SELECT ALL rt0.c2, rt0.c1, vt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, vt0.c0, vt0.c1;
SELECT rt0.c2, rt0.c1, vt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, vt0.c0, vt0.c1 HAVING GROUP_CONCAT(CAST(rt0.c1 AS BLOB)) UNION ALL SELECT ALL rt0.c2, rt0.c1, vt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, vt0.c0, vt0.c1 HAVING (NOT (GROUP_CONCAT(CAST(rt0.c1 AS BLOB)))) UNION ALL SELECT rt0.c2, rt0.c1, vt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, vt0.c0, vt0.c1 HAVING ((GROUP_CONCAT(CAST(rt0.c1 AS BLOB))) ISNULL);
SELECT ALL rt0.c2, rt0.c1, vt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, vt0.c0, vt0.c1;
SELECT vt0.c1, vt0.c0 FROM vt0;
SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (((TYPEOF(vt0.c0)) NOT BETWEEN (vt0.c1) AND (ABS(DISTINCT vt0.c0)))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((TYPEOF(vt0.c0)) NOT BETWEEN (vt0.c1) AND (ABS(DISTINCT vt0.c0)))))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (((((TYPEOF(vt0.c0)) NOT BETWEEN (vt0.c1) AND (ABS(DISTINCT vt0.c0)))) ISNULL));
SELECT vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((x'')OR(((x'')||(rt0.c2)))))AND(rt0.c0 COLLATE BINARY))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((x'')OR(((x'')||(rt0.c2)))))AND(rt0.c0 COLLATE BINARY))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((x'')OR(((x'')||(rt0.c2)))))AND(rt0.c0 COLLATE BINARY))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, vt0 WHERE (((((rt0.c2) NOT NULL))<=('-1253384791' COLLATE BINARY))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0, vt0 WHERE ((NOT (((((rt0.c2) NOT NULL))<=('-1253384791' COLLATE BINARY))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0, vt0 WHERE (((((((rt0.c2) NOT NULL))<=('-1253384791' COLLATE BINARY))) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 INNER JOIN vt0 ON CAST(CASE WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c0 END AS TEXT) GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 INNER JOIN vt0 ON CAST(CASE WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c0 END AS TEXT) GROUP BY rt0.c1, rt0.c0 HAVING TOTAL(COUNT(rt0.c1)) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 INNER JOIN vt0 ON CAST(CASE WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c0 END AS TEXT) GROUP BY rt0.c1, rt0.c0 HAVING (NOT (TOTAL(COUNT(rt0.c1)))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 INNER JOIN vt0 ON CAST(CASE WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c0 END AS TEXT) GROUP BY rt0.c1, rt0.c0 HAVING ((TOTAL(COUNT(rt0.c1))) ISNULL);
SELECT vt0.c0, rt0.c0, vt0.c1, rt0.c2, rt0.c1 FROM vt0 CROSS JOIN rt0 ON ((~ (rt0.c2)) IN (((((vt0.c0)AND(vt0.c0)))OR(rt0.c0))));
SELECT vt0.c0, rt0.c0, vt0.c1, rt0.c2, rt0.c1 FROM vt0 CROSS JOIN rt0 ON ((~ (rt0.c2)) IN (((((vt0.c0)AND(vt0.c0)))OR(rt0.c0)))) WHERE (((((rt0.c0)<(rt0.c2))) BETWEEN (CASE rt0.c1  WHEN rt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN vt0.c1 END) AND ((~ (rt0.c2))))) UNION ALL SELECT ALL vt0.c0, rt0.c0, vt0.c1, rt0.c2, rt0.c1 FROM vt0 CROSS JOIN rt0 ON ((~ (rt0.c2)) IN (((((vt0.c0)AND(vt0.c0)))OR(rt0.c0)))) WHERE ((NOT (((((rt0.c0)<(rt0.c2))) BETWEEN (CASE rt0.c1  WHEN rt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN vt0.c1 END) AND ((~ (rt0.c2))))))) UNION ALL SELECT vt0.c0, rt0.c0, vt0.c1, rt0.c2, rt0.c1 FROM vt0 CROSS JOIN rt0 ON ((~ (rt0.c2)) IN (((((vt0.c0)AND(vt0.c0)))OR(rt0.c0)))) WHERE (((((((rt0.c0)<(rt0.c2))) BETWEEN (CASE rt0.c1  WHEN rt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN vt0.c1 END) AND ((~ (rt0.c2))))) ISNULL));
SELECT vt0.c0, rt0.c0, vt0.c1, rt0.c2, rt0.c1 FROM vt0 CROSS JOIN rt0 ON ((~ (rt0.c2)) IN (((((vt0.c0)AND(vt0.c0)))OR(rt0.c0))));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((CAST(vt0.c1 AS REAL)))=((((vt0.c0) NOTNULL))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((((CAST(vt0.c1 AS REAL)))==((((vt0.c0) NOTNULL))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((CAST(vt0.c1 AS REAL)))==((((vt0.c0) NOTNULL))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0, vt0 WHERE (((((((((CAST(rt0.c0 AS TEXT))OR(((vt0.c0) NOT NULL))))AND((NOT (vt0.c1)))))AND(((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))OR(rt0.c0 COLLATE BINARY))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0, vt0 WHERE ((NOT (((((((((CAST(rt0.c0 AS TEXT))OR(((vt0.c0) NOT NULL))))AND((NOT (vt0.c1)))))AND(((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))OR(rt0.c0 COLLATE BINARY))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0, vt0 WHERE (((((((((((CAST(rt0.c0 AS TEXT))OR(((vt0.c0) NOT NULL))))AND((NOT (vt0.c1)))))AND(((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))OR(rt0.c0 COLLATE BINARY))) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c0, vt0.c0, rt0.c1, vt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, rt0.c1, vt0.c1, rt0.c2;
SELECT ALL rt0.c0, vt0.c0, rt0.c1, vt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, rt0.c1, vt0.c1, rt0.c2 HAVING CAST(TOTAL(GROUP_CONCAT(MAX(MIN(vt0.c1)))) COLLATE RTRIM AS REAL) UNION ALL SELECT rt0.c0, vt0.c0, rt0.c1, vt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, rt0.c1, vt0.c1, rt0.c2 HAVING (NOT (CAST(TOTAL(GROUP_CONCAT(MAX(MIN(vt0.c1)))) COLLATE RTRIM AS REAL))) UNION ALL SELECT rt0.c0, vt0.c0, rt0.c1, vt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, rt0.c1, vt0.c1, rt0.c2 HAVING ((CAST(TOTAL(GROUP_CONCAT(MAX(MIN(vt0.c1)))) COLLATE RTRIM AS REAL)) ISNULL);
SELECT rt0.c1 FROM rt0 NATURAL JOIN vt0;
SELECT ALL rt0.c1 FROM rt0 NATURAL JOIN vt0 WHERE (((CAST(vt0.c1 AS NUMERIC))|(((rt0.c0)||('X'))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 NATURAL JOIN vt0 WHERE ((NOT (((CAST(vt0.c1 AS NUMERIC))|(((rt0.c0)||('X'))))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 NATURAL JOIN vt0 WHERE (((((CAST(vt0.c1 AS NUMERIC))|(((rt0.c0)||('X'))))) ISNULL));
SELECT rt0.c1 FROM rt0 NATURAL JOIN vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((+ ((vt0.c1 IN ())))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((+ ((vt0.c1 IN ())))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((+ ((vt0.c1 IN ())))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0)/(vt0.c0))) BETWEEN (TIME(vt0.c0, vt0.c0, 0.9868050211185181)) AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c1))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0)/(vt0.c0))) BETWEEN (TIME(vt0.c0, vt0.c0, 0.9868050211185181)) AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c1))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((((vt0.c0)/(vt0.c0))) BETWEEN (TIME(vt0.c0, vt0.c0, 0.9868050211185181)) AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c1))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1, vt0.c0;
SELECT ALL rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1, vt0.c0 HAVING MAX(((GROUP_CONCAT(TOTAL(TOTAL(rt0.c1)))) NOTNULL)) UNION ALL SELECT rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1, vt0.c0 HAVING (NOT (MAX(((GROUP_CONCAT(TOTAL(TOTAL(rt0.c1)))) NOTNULL)))) UNION ALL SELECT ALL rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1, vt0.c0 HAVING ((MAX(((GROUP_CONCAT(TOTAL(TOTAL(rt0.c1)))) NOTNULL))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((+ (((((rt0.c1)AND(rt0.c1)))OR('-639152692'))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((+ (((((rt0.c1)AND(rt0.c1)))OR('-639152692'))))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((+ (((((rt0.c1)AND(rt0.c1)))OR('-639152692'))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (CAST(vt0.c0 AS BLOB)) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (CAST(vt0.c0 AS BLOB)))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((CAST(vt0.c0 AS BLOB)) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE ((((UPPER(DISTINCT x'')))=(((((rt0.c2, rt0.c2, rt0.c0))!=((rt0.c0, rt0.c0, rt0.c1))))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT ((((UPPER(DISTINCT x'')))=(((((rt0.c2, rt0.c2, rt0.c0))!=((rt0.c0, rt0.c0, rt0.c1))))))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((((((UPPER(DISTINCT x'')))=(((((rt0.c2, rt0.c2, rt0.c0))!=((rt0.c0, rt0.c0, rt0.c1))))))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2 HAVING ((SUM(rt0.c1)) NOT NULL) UNION ALL SELECT rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2 HAVING (NOT (((SUM(rt0.c1)) NOT NULL))) UNION ALL SELECT ALL rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2 HAVING ((((SUM(rt0.c1)) NOT NULL)) ISNULL);
SELECT ALL rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2 HAVING ((SUM(rt0.c1)) NOT NULL) UNION ALL SELECT rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2 HAVING (NOT (((SUM(rt0.c1)) NOT NULL))) UNION ALL SELECT ALL rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2 HAVING ((((SUM(rt0.c1)) NOT NULL)) ISNULL);
SELECT ALL rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2;
SELECT vt0.c0, vt0.c1 FROM vt0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (vt0.c0) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CASE WHEN CAST(rt0.c0 AS NUMERIC) THEN ((-1782465827)LIKE(rt0.c0)) END) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CASE WHEN CAST(rt0.c0 AS NUMERIC) THEN ((-1782465827)LIKE(rt0.c0)) END))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CASE WHEN CAST(rt0.c0 AS NUMERIC) THEN ((-1782465827)LIKE(rt0.c0)) END) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0, vt0 WHERE (CASE WHEN CASE WHEN vt0.c0 THEN vt0.c1 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c2 THEN vt0.c0 END THEN ((vt0.c1) IS TRUE) END) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0, vt0 WHERE ((NOT (CASE WHEN CASE WHEN vt0.c0 THEN vt0.c1 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c2 THEN vt0.c0 END THEN ((vt0.c1) IS TRUE) END))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0, vt0 WHERE (((CASE WHEN CASE WHEN vt0.c0 THEN vt0.c1 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c2 THEN vt0.c0 END THEN ((vt0.c1) IS TRUE) END) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING CASE ((rt0.c2)%(rt0.c2))  WHEN TOTAL(rt0.c1) THEN ((SUM(rt0.c2))GLOB(rt0.c0)) ELSE SUM(rt0.c2) END UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (CASE ((rt0.c2)%(rt0.c2))  WHEN TOTAL(rt0.c1) THEN ((SUM(rt0.c2))GLOB(rt0.c0)) ELSE SUM(rt0.c2) END)) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((CASE ((rt0.c2)%(rt0.c2))  WHEN TOTAL(rt0.c1) THEN ((SUM(rt0.c2))GLOB(rt0.c0)) ELSE SUM(rt0.c2) END) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING CASE ((rt0.c2)%(rt0.c2))  WHEN TOTAL(rt0.c1) THEN ((SUM(rt0.c2))GLOB(rt0.c0)) ELSE SUM(rt0.c2) END UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (CASE ((rt0.c2)%(rt0.c2))  WHEN TOTAL(rt0.c1) THEN ((SUM(rt0.c2))GLOB(rt0.c0)) ELSE SUM(rt0.c2) END)) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((CASE ((rt0.c2)%(rt0.c2))  WHEN TOTAL(rt0.c1) THEN ((SUM(rt0.c2))GLOB(rt0.c0)) ELSE SUM(rt0.c2) END) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c0, vt0.c1, vt0.c0, rt0.c2 FROM vt0, rt0;
SELECT ALL rt0.c0, vt0.c1, vt0.c0, rt0.c2 FROM vt0, rt0 WHERE (((rt0.c0 COLLATE BINARY) BETWEEN (((vt0.c1)<(vt0.c1))) AND (rt0.c0 COLLATE BINARY))) ORDER BY vt0.c0  NULLS LAST;
SELECT ALL rt0.c0, vt0.c1, vt0.c0, rt0.c2 FROM vt0, rt0 WHERE ((NOT (((rt0.c0 COLLATE BINARY) BETWEEN (((vt0.c1)<(vt0.c1))) AND (rt0.c0 COLLATE BINARY))))) ORDER BY vt0.c0  NULLS LAST;
SELECT rt0.c0, vt0.c1, vt0.c0, rt0.c2 FROM vt0, rt0 WHERE (((((rt0.c0 COLLATE BINARY) BETWEEN (((vt0.c1)<(vt0.c1))) AND (rt0.c0 COLLATE BINARY))) ISNULL)) ORDER BY vt0.c0  NULLS LAST;
SELECT ALL rt0.c0, vt0.c1, vt0.c0, rt0.c2 FROM vt0, rt0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE (((CASE rt0.c1  WHEN rt0.c2 THEN '908327416' ELSE rt0.c2 END)!=(rt0.c1))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((CASE rt0.c1  WHEN rt0.c2 THEN '908327416' ELSE rt0.c2 END)<>(rt0.c1))))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE (((((CASE rt0.c1  WHEN rt0.c2 THEN '908327416' ELSE rt0.c2 END)!=(rt0.c1))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0;
SELECT ALL vt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c1, rt0.c2;
SELECT vt0.c1, rt0.c2 FROM rt0, vt0 WHERE ((- (NULL))) GROUP BY vt0.c1, rt0.c2 UNION SELECT vt0.c1, rt0.c2 FROM rt0, vt0 WHERE ((NOT ((- (NULL))))) GROUP BY vt0.c1, rt0.c2 UNION SELECT ALL vt0.c1, rt0.c2 FROM rt0, vt0 NOT INDEXED WHERE ((((- (NULL))) ISNULL)) GROUP BY vt0.c1, rt0.c2;
SELECT ALL vt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c1, rt0.c2;
SELECT vt0.c0, vt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, vt0.c1, rt0.c2;
SELECT ALL vt0.c0, vt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, vt0.c1, rt0.c2 HAVING TOTAL(COUNT(TOTAL(rt0.c0))) UNION ALL SELECT ALL vt0.c0, vt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, vt0.c1, rt0.c2 HAVING (NOT (TOTAL(COUNT(TOTAL(rt0.c0))))) UNION ALL SELECT ALL vt0.c0, vt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, vt0.c1, rt0.c2 HAVING ((TOTAL(COUNT(TOTAL(rt0.c0)))) ISNULL);
SELECT * FROM vt0, rt0;
SELECT * FROM vt0, rt0 WHERE (((((((NULL)OR(NULL)))AND(CASE WHEN rt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE rt0.c2 END)))AND(CAST(rt0.c2 AS BLOB)))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE ((NOT (((((((NULL)OR(NULL)))AND(CASE WHEN rt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE rt0.c2 END)))AND(CAST(rt0.c2 AS BLOB)))))) UNION ALL SELECT * FROM vt0, rt0 WHERE (((((((((NULL)OR(NULL)))AND(CASE WHEN rt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE rt0.c2 END)))AND(CAST(rt0.c2 AS BLOB)))) ISNULL));
SELECT * FROM vt0, rt0;
SELECT DISTINCT vt0.c1 FROM rt0 FULL OUTER JOIN vt0 ON ((((vt0.c0)AND(rt0.c2)))OR(vt0.c0)) COLLATE RTRIM;
SELECT DISTINCT vt0.c1 FROM rt0 FULL OUTER JOIN vt0 ON ((((vt0.c0)AND(rt0.c2)))OR(vt0.c0)) COLLATE RTRIM WHERE ((((vt0.c1 IN ()))+(((vt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c1))))) UNION SELECT DISTINCT vt0.c1 FROM rt0 FULL OUTER JOIN vt0 ON ((((vt0.c0)AND(rt0.c2)))OR(vt0.c0)) COLLATE RTRIM WHERE ((NOT ((((vt0.c1 IN ()))+(((vt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c1))))))) UNION SELECT DISTINCT vt0.c1 FROM rt0 FULL OUTER JOIN vt0 ON ((((vt0.c0)AND(rt0.c2)))OR(vt0.c0)) COLLATE RTRIM WHERE ((((((vt0.c1 IN ()))+(((vt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c1))))) ISNULL));
SELECT DISTINCT vt0.c1 FROM rt0 FULL OUTER JOIN vt0 ON ((((vt0.c0)AND(rt0.c2)))OR(vt0.c0)) COLLATE RTRIM;
SELECT vt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c0;
SELECT ALL vt0.c1, rt0.c0 FROM vt0, rt0 WHERE (((((json_patch(rt0.c0, rt0.c2))AND((~ (rt0.c1)))))AND(((vt0.c0) IS TRUE)))) GROUP BY vt0.c1, rt0.c0 UNION SELECT ALL vt0.c1, rt0.c0 FROM vt0, rt0 WHERE ((NOT (((((json_patch(rt0.c0, rt0.c2))AND((~ (rt0.c1)))))AND(((vt0.c0) IS TRUE)))))) GROUP BY vt0.c1, rt0.c0 UNION SELECT vt0.c1, rt0.c0 FROM vt0, rt0 WHERE (((((((json_patch(rt0.c0, rt0.c2))AND((~ (rt0.c1)))))AND(((vt0.c0) IS TRUE)))) ISNULL)) GROUP BY vt0.c1, rt0.c0;
SELECT vt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c0;
SELECT rt0.c2, vt0.c1, rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c1, rt0.c1, rt0.c0;
SELECT rt0.c2, vt0.c1, rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c1, rt0.c1, rt0.c0 HAVING TOTAL(GROUP_CONCAT(vt0.c1)) UNION ALL SELECT ALL rt0.c2, vt0.c1, rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c1, rt0.c1, rt0.c0 HAVING (NOT (TOTAL(GROUP_CONCAT(vt0.c1)))) UNION ALL SELECT rt0.c2, vt0.c1, rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c1, rt0.c1, rt0.c0 HAVING ((TOTAL(GROUP_CONCAT(vt0.c1))) ISNULL);
SELECT * FROM vt0, rt0;
SELECT * FROM vt0, rt0 WHERE (((((((((((rt0.c2)OR(rt0.c2)))AND(vt0.c0)))AND(rt0.c2)))AND(vt0.c1))) NOT BETWEEN (LIKELIHOOD(rt0.c0, 0.3061921344642804)) AND (rt0.c2))) UNION ALL SELECT * FROM vt0, rt0 WHERE ((NOT (((((((((((rt0.c2)OR(rt0.c2)))AND(vt0.c0)))AND(rt0.c2)))AND(vt0.c1))) NOT BETWEEN (LIKELIHOOD(rt0.c0, 0.3061921344642804)) AND (rt0.c2))))) UNION ALL SELECT * FROM vt0, rt0 WHERE (((((((((((((rt0.c2)OR(rt0.c2)))AND(vt0.c0)))AND(rt0.c2)))AND(vt0.c1))) NOT BETWEEN (LIKELIHOOD(rt0.c0, 0.3061921344642804)) AND (rt0.c2))) ISNULL));
SELECT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CASE WHEN CAST(vt0.c0 AS BLOB) THEN vt0.c1 ELSE ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) END) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CASE WHEN CAST(vt0.c0 AS BLOB) THEN vt0.c1 ELSE ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) END))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CASE WHEN CAST(vt0.c0 AS BLOB) THEN vt0.c1 ELSE ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) END) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT rt0.c2 FROM rt0, vt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, vt0 WHERE (((((((rt0.c1)OR(NULL)))OR(vt0.c0))) ISNULL)) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0, vt0 WHERE ((NOT (((((((rt0.c1)OR(NULL)))OR(vt0.c0))) ISNULL)))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0, vt0 WHERE (((((((((rt0.c1)OR(NULL)))OR(vt0.c0))) ISNULL)) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, vt0 GROUP BY rt0.c2;
SELECT ALL vt0.c1, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c1, rt0.c1;
SELECT vt0.c1, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c1, rt0.c1 HAVING (NOT ((GROUP_CONCAT(rt0.c1) IN (rt0.c0)))) UNION ALL SELECT vt0.c1, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c1, rt0.c1 HAVING (NOT ((NOT ((GROUP_CONCAT(rt0.c1) IN (rt0.c0)))))) UNION ALL SELECT vt0.c1, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c1, rt0.c1 HAVING (((NOT ((GROUP_CONCAT(rt0.c1) IN (rt0.c0))))) ISNULL);
SELECT ALL vt0.c1, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c1, rt0.c1;
SELECT vt0.c1, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c1, rt0.c1 HAVING (NOT ((GROUP_CONCAT(rt0.c1) IN (rt0.c0)))) UNION ALL SELECT vt0.c1, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c1, rt0.c1 HAVING (NOT ((NOT ((GROUP_CONCAT(rt0.c1) IN (rt0.c0)))))) UNION ALL SELECT vt0.c1, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c1, rt0.c1 HAVING (((NOT ((GROUP_CONCAT(rt0.c1) IN (rt0.c0))))) ISNULL);
SELECT ALL vt0.c1, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c1, rt0.c1;
SELECT ALL * FROM vt0, rt0;
SELECT ALL * FROM vt0, rt0 WHERE ((((((- (rt0.c2)))OR((NOT (rt0.c2)))))OR((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c1)))))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE ((NOT ((((((- (rt0.c2)))OR((NOT (rt0.c2)))))OR((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c1)))))))) UNION ALL SELECT * FROM vt0, rt0 WHERE ((((((((- (rt0.c2)))OR((NOT (rt0.c2)))))OR((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c1)))))) ISNULL));
SELECT ALL * FROM vt0, rt0;
SELECT DISTINCT rt0.c1, rt0.c2, vt0.c1, vt0.c0, rt0.c0 FROM vt0, rt0;
SELECT DISTINCT rt0.c1, rt0.c2, vt0.c1, vt0.c0, rt0.c0 FROM vt0, rt0 WHERE ((((vt0.c0) BETWEEN (NULL) AND (rt0.c2)) IN (QUOTE(vt0.c0), ((rt0.c2) NOT NULL), NULL))) UNION SELECT DISTINCT rt0.c1, rt0.c2, vt0.c1, vt0.c0, rt0.c0 FROM vt0, rt0 WHERE ((NOT ((((vt0.c0) BETWEEN (NULL) AND (rt0.c2)) IN (QUOTE(vt0.c0), ((rt0.c2) NOT NULL), NULL))))) UNION SELECT DISTINCT rt0.c1, rt0.c2, vt0.c1, vt0.c0, rt0.c0 FROM vt0, rt0 WHERE ((((((vt0.c0) BETWEEN (NULL) AND (rt0.c2)) IN (QUOTE(vt0.c0), ((rt0.c2) NOT NULL), NULL))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, vt0.c1, vt0.c0, rt0.c0 FROM vt0, rt0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (CASE WHEN (rt0.c0 IN ()) THEN CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END ELSE (((rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c1, rt0.c1))) END) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (CASE WHEN (rt0.c0 IN ()) THEN CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END ELSE (((rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c1, rt0.c1))) END))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((CASE WHEN (rt0.c0 IN ()) THEN CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END ELSE (((rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c1, rt0.c1))) END) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT vt0.c0, vt0.c1, rt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, vt0.c1, rt0.c0, rt0.c2, rt0.c1;
SELECT ALL vt0.c0, vt0.c1, rt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, vt0.c1, rt0.c0, rt0.c2, rt0.c1 HAVING AVG(MIN(TOTAL(MIN(MIN(rt0.c2))))) UNION ALL SELECT vt0.c0, vt0.c1, rt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, vt0.c1, rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (AVG(MIN(TOTAL(MIN(MIN(rt0.c2))))))) UNION ALL SELECT vt0.c0, vt0.c1, rt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, vt0.c1, rt0.c0, rt0.c2, rt0.c1 HAVING ((AVG(MIN(TOTAL(MIN(MIN(rt0.c2)))))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((((((((0.7291100779598735 COLLATE BINARY)AND(CASE WHEN rt0.c1 THEN rt0.c2 END)))OR(((rt0.c0) NOTNULL))))AND(NULL)))AND(rt0.c0))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((((((((0.7291100779598735 COLLATE BINARY)AND(CASE WHEN rt0.c1 THEN rt0.c2 END)))OR(((rt0.c0) NOTNULL))))AND(NULL)))AND(rt0.c0))))) UNION ALL SELECT * FROM rt0 WHERE (((((((((((0.7291100779598735 COLLATE BINARY)AND(CASE WHEN rt0.c1 THEN rt0.c2 END)))OR(((rt0.c0) NOTNULL))))AND(NULL)))AND(rt0.c0))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0, vt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0, vt0 WHERE (SQLITE_COMPILEOPTION_GET(rt0.c2) COLLATE BINARY) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0, vt0 WHERE ((NOT (SQLITE_COMPILEOPTION_GET(rt0.c2) COLLATE BINARY))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0, vt0 WHERE (((SQLITE_COMPILEOPTION_GET(rt0.c2) COLLATE BINARY) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0, vt0;
SELECT ALL rt0.c1, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c1;
SELECT ALL rt0.c1, vt0.c1 FROM rt0, vt0 WHERE (((((((rt0.c1)AND(rt0.c0)))OR(rt0.c2))) BETWEEN (CASE rt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE '.n_^c8&}I' END) AND (LIKELIHOOD(DISTINCT rt0.c1, 0.884026298009506)))) GROUP BY rt0.c1, vt0.c1 UNION SELECT ALL rt0.c1, vt0.c1 FROM rt0, vt0 WHERE ((NOT (((((((rt0.c1)AND(rt0.c0)))OR(rt0.c2))) BETWEEN (CASE rt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE '.n_^c8&}I' END) AND (LIKELIHOOD(DISTINCT rt0.c1, 0.884026298009506)))))) GROUP BY rt0.c1, vt0.c1 UNION SELECT ALL rt0.c1, vt0.c1 FROM rt0, vt0 WHERE (((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c2))) BETWEEN (CASE rt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE '.n_^c8&}I' END) AND (LIKELIHOOD(DISTINCT rt0.c1, 0.884026298009506)))) ISNULL)) GROUP BY rt0.c1, vt0.c1;
SELECT ALL rt0.c1, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c1;
SELECT rt0.c2, rt0.c1, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, vt0.c1;
SELECT ALL rt0.c2, rt0.c1, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, vt0.c1 HAVING AVG(rt0.c2) COLLATE NOCASE UNION ALL SELECT rt0.c2, rt0.c1, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, vt0.c1 HAVING (NOT (AVG(rt0.c2) COLLATE NOCASE)) UNION ALL SELECT rt0.c2, rt0.c1, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, vt0.c1 HAVING ((AVG(rt0.c2) COLLATE NOCASE) ISNULL);
SELECT rt0.c2, rt0.c1, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, vt0.c1;
SELECT ALL rt0.c2, rt0.c1, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, vt0.c1 HAVING AVG(rt0.c2) COLLATE NOCASE UNION ALL SELECT rt0.c2, rt0.c1, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, vt0.c1 HAVING (NOT (AVG(rt0.c2) COLLATE NOCASE)) UNION ALL SELECT rt0.c2, rt0.c1, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, vt0.c1 HAVING ((AVG(rt0.c2) COLLATE NOCASE) ISNULL);
SELECT rt0.c2, rt0.c1, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, vt0.c1;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (((0.4397544512730942) BETWEEN (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END) AND (('﫡3xd#' IN (rt0.c0))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((0.4397544512730942) BETWEEN (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END) AND (('﫡3xd#' IN (rt0.c0))))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((0.4397544512730942) BETWEEN (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END) AND (('﫡3xd#' IN (rt0.c0))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((+ ((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((+ ((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((+ ((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE (CAST(CASE WHEN rt0.c1 THEN NULL END AS NUMERIC)) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT (CAST(CASE WHEN rt0.c1 THEN NULL END AS NUMERIC)))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE (((CAST(CASE WHEN rt0.c1 THEN NULL END AS NUMERIC)) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c1;
SELECT vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c1 HAVING CAST((rt0.c2 IN ()) AS TEXT) UNION ALL SELECT ALL vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c1 HAVING (NOT (CAST((rt0.c2 IN ()) AS TEXT))) UNION ALL SELECT vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c1 HAVING ((CAST((rt0.c2 IN ()) AS TEXT)) ISNULL);
SELECT ALL vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c1;
SELECT vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c1 HAVING CAST((rt0.c2 IN ()) AS TEXT) UNION ALL SELECT ALL vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c1 HAVING (NOT (CAST((rt0.c2 IN ()) AS TEXT))) UNION ALL SELECT vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c1 HAVING ((CAST((rt0.c2 IN ()) AS TEXT)) ISNULL);
SELECT ALL vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c1;
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN NULL END) NOT NULL);
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN NULL END) NOT NULL) WHERE (rt0.c0) UNION ALL SELECT * FROM vt0 FULL OUTER JOIN rt0 ON ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN NULL END) NOT NULL) WHERE ((NOT (rt0.c0))) UNION ALL SELECT * FROM vt0 FULL OUTER JOIN rt0 ON ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN NULL END) NOT NULL) WHERE (((rt0.c0) ISNULL));
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN NULL END) NOT NULL);
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((NOT (vt0.c0))) NOT BETWEEN (UPPER(vt0.c0)) AND (vt0.c0 COLLATE RTRIM))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((((NOT (vt0.c0))) NOT BETWEEN (UPPER(vt0.c0)) AND (vt0.c0 COLLATE RTRIM))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((NOT (vt0.c0))) NOT BETWEEN (UPPER(vt0.c0)) AND (vt0.c0 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL rt0.c2, rt0.c1, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, vt0.c1;
SELECT rt0.c2, rt0.c1, vt0.c1 FROM rt0, vt0 WHERE ('161846672') GROUP BY rt0.c2, rt0.c1, vt0.c1 UNION SELECT ALL rt0.c2, rt0.c1, vt0.c1 FROM rt0, vt0 WHERE ((NOT ('161846672'))) GROUP BY rt0.c2, rt0.c1, vt0.c1 UNION SELECT ALL rt0.c2, rt0.c1, vt0.c1 FROM rt0, vt0 WHERE ((('161846672') ISNULL)) GROUP BY rt0.c2, rt0.c1, vt0.c1;
SELECT ALL rt0.c2, rt0.c1, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, vt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING MAX(MIN(TOTAL(rt0.c2))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (MAX(MIN(TOTAL(rt0.c2))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((MAX(MIN(TOTAL(rt0.c2)))) ISNULL);
SELECT ALL vt0.c1 FROM rt0, vt0;
SELECT vt0.c1 FROM rt0, vt0 WHERE (((vt0.c1)<>((((vt0.c1))<>((vt0.c0)))))) UNION ALL SELECT ALL vt0.c1 FROM rt0, vt0 WHERE ((NOT (((vt0.c1)!=((((vt0.c1))<>((vt0.c0)))))))) UNION ALL SELECT vt0.c1 FROM rt0, vt0 WHERE (((((vt0.c1)<>((((vt0.c1))<>((vt0.c0)))))) ISNULL));
SELECT ALL vt0.c1 FROM rt0, vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c0)))>=(rt0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c0)))>=(rt0.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c0)))>=(rt0.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM vt0, rt0 WHERE (LENGTH(((((((((vt0.c1)OR(rt0.c0)))AND(rt0.c1)))OR(vt0.c1)))AND(vt0.c0)))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM vt0, rt0 WHERE ((NOT (LENGTH(((((((((vt0.c1)OR(rt0.c0)))AND(rt0.c1)))OR(vt0.c1)))AND(vt0.c0)))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM vt0, rt0 WHERE (((LENGTH(((((((((vt0.c1)OR(rt0.c0)))AND(rt0.c1)))OR(vt0.c1)))AND(vt0.c0)))) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING CAST(((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)) AS REAL) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (CAST(((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)) AS REAL))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((CAST(((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)) AS REAL)) ISNULL);
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING CAST(((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)) AS REAL) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (CAST(((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)) AS REAL))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((CAST(((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)) AS REAL)) ISNULL);
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL vt0.c1, vt0.c0 FROM vt0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((((vt0.c1 IN ()))==('S'))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c1 IN ()))=('S'))))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((((((vt0.c1 IN ()))==('S'))) ISNULL));
SELECT ALL vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (vt0.c1) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (vt0.c1))) UNION SELECT DISTINCT * FROM vt0 WHERE (((vt0.c1) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c1 FROM rt0, vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM rt0, vt0 WHERE (CHANGES()) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM rt0, vt0 WHERE ((NOT (CHANGES()))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM rt0, vt0 WHERE (((CHANGES()) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM rt0, vt0 GROUP BY vt0.c1;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((COUNT(*)) NOT BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND (AVG(1697627743) COLLATE BINARY)) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (((COUNT(*)) NOT BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND (AVG(1697627743) COLLATE BINARY)))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((((COUNT(*)) NOT BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND (AVG(1697627743) COLLATE BINARY))) ISNULL);
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((COUNT(*)) NOT BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND (AVG(1697627743) COLLATE BINARY)) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (((COUNT(*)) NOT BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND (AVG(1697627743) COLLATE BINARY)))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((((COUNT(*)) NOT BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND (AVG(1697627743) COLLATE BINARY))) ISNULL);
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CAST(vt0.c1 AS REAL)) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (CAST(vt0.c1 AS REAL)))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((CAST(vt0.c1 AS REAL)) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c1, rt0.c0, rt0.c2 FROM vt0, rt0;
SELECT DISTINCT vt0.c1, rt0.c0, rt0.c2 FROM vt0, rt0 WHERE (((rt0.c0) BETWEEN (vt0.c1) AND (rt0.c2)) COLLATE BINARY) UNION SELECT DISTINCT vt0.c1, rt0.c0, rt0.c2 FROM vt0, rt0 WHERE ((NOT (((rt0.c0) BETWEEN (vt0.c1) AND (rt0.c2)) COLLATE BINARY))) UNION SELECT DISTINCT vt0.c1, rt0.c0, rt0.c2 FROM vt0, rt0 WHERE (((((rt0.c0) BETWEEN (vt0.c1) AND (rt0.c2)) COLLATE BINARY) ISNULL));
SELECT DISTINCT vt0.c1, rt0.c0, rt0.c2 FROM vt0, rt0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE (CAST(rt0.c1 AS INTEGER)) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (CAST(rt0.c1 AS INTEGER)))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE (((CAST(rt0.c1 AS INTEGER)) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING MAX(rt0.c1) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (MAX(rt0.c1))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((MAX(rt0.c1)) ISNULL);
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING MAX(rt0.c1) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (MAX(rt0.c1))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((MAX(rt0.c1)) ISNULL);
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE ((+ (CASE rt0.c1  WHEN rt0.c2 THEN '910456533' END))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((+ (CASE rt0.c1  WHEN rt0.c2 THEN '910456533' END))))) UNION ALL SELECT * FROM rt0 WHERE ((((+ (CASE rt0.c1  WHEN rt0.c2 THEN '910456533' END))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 END) NOT BETWEEN (((rt0.c1) NOT NULL)) AND (((rt0.c1) IS FALSE)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 END) NOT BETWEEN (((rt0.c1) NOT NULL)) AND (((rt0.c1) IS FALSE)))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 END) NOT BETWEEN (((rt0.c1) NOT NULL)) AND (((rt0.c1) IS FALSE)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((((NOT (rt0.c1)))OR((NOT (rt0.c1)))))OR(((rt0.c1)>=(rt0.c1))))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 NOT INDEXED WHERE ((NOT ((((((NOT (rt0.c1)))OR((NOT (rt0.c1)))))OR(((rt0.c1)>=(rt0.c1))))))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((((((NOT (rt0.c1)))OR((NOT (rt0.c1)))))OR(((rt0.c1)>=(rt0.c1))))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT vt0.c1 FROM rt0 RIGHT OUTER JOIN vt0 ON '' COLLATE RTRIM GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM rt0 RIGHT OUTER JOIN vt0 ON '' COLLATE RTRIM GROUP BY vt0.c1 HAVING CASE COUNT(*)  WHEN (((rt0.c0)) BETWEEN ((0.7254707292437615)) AND ((MAX(vt0.c1)))) THEN json_remove(GROUP_CONCAT(COUNT(*)), vt0.c0, COUNT(vt0.c1), rt0.c2) END UNION ALL SELECT vt0.c1 FROM rt0 RIGHT OUTER JOIN vt0 ON '' COLLATE RTRIM GROUP BY vt0.c1 HAVING (NOT (CASE COUNT(*)  WHEN (((rt0.c0)) BETWEEN ((0.7254707292437615)) AND ((MAX(vt0.c1)))) THEN json_remove(GROUP_CONCAT(COUNT(*)), vt0.c0, COUNT(vt0.c1), rt0.c2) END)) UNION ALL SELECT vt0.c1 FROM rt0 RIGHT OUTER JOIN vt0 ON '' COLLATE RTRIM GROUP BY vt0.c1 HAVING ((CASE COUNT(*)  WHEN (((rt0.c0)) BETWEEN ((0.7254707292437615)) AND ((MAX(vt0.c1)))) THEN json_remove(GROUP_CONCAT(COUNT(*)), vt0.c0, COUNT(vt0.c1), rt0.c2) END) ISNULL);
SELECT ALL vt0.c1, vt0.c0 FROM vt0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (((((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))+(vt0.c0 COLLATE NOCASE))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))+(vt0.c0 COLLATE NOCASE))))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (((((((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))+(vt0.c0 COLLATE NOCASE))) ISNULL));
SELECT ALL vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c0)GLOB(rt0.c1)))%((x'' IN (rt0.c1))));
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c0)GLOB(rt0.c1)))%((x'' IN (rt0.c1)))) WHERE (LIKELIHOOD(((rt0.c2)LIKE(rt0.c1)), 0.557154788772951)) UNION SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c0)GLOB(rt0.c1)))%((x'' IN (rt0.c1)))) WHERE ((NOT (LIKELIHOOD(((rt0.c2)LIKE(rt0.c1)), 0.557154788772951)))) UNION SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c0)GLOB(rt0.c1)))%((x'' IN (rt0.c1)))) WHERE (((LIKELIHOOD(((rt0.c2)LIKE(rt0.c1)), 0.557154788772951)) ISNULL));
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c0)GLOB(rt0.c1)))%((x'' IN (rt0.c1))));
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 WHERE (LIKE(((vt0.c1)>>(vt0.c1)), CASE vt0.c1  WHEN 0.377908535498634 THEN vt0.c1 END)) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 NOT INDEXED WHERE ((NOT (LIKE(((vt0.c1)>>(vt0.c1)), CASE vt0.c1  WHEN 0.377908535498634 THEN vt0.c1 END)))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE (((LIKE(((vt0.c1)>>(vt0.c1)), CASE vt0.c1  WHEN 0.377908535498634 THEN vt0.c1 END)) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL rt0.c2 FROM vt0 NATURAL JOIN rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt0 NATURAL JOIN rt0 GROUP BY rt0.c2 HAVING COUNT(CASE TOTAL(AVG(rt0.c2))  WHEN vt0.c1 THEN rt0.c1 END) UNION ALL SELECT ALL rt0.c2 FROM vt0 NATURAL JOIN rt0 GROUP BY rt0.c2 HAVING (NOT (COUNT(CASE TOTAL(AVG(rt0.c2))  WHEN vt0.c1 THEN rt0.c1 END))) UNION ALL SELECT rt0.c2 FROM vt0 NATURAL JOIN rt0 GROUP BY rt0.c2 HAVING ((COUNT(CASE TOTAL(AVG(rt0.c2))  WHEN vt0.c1 THEN rt0.c1 END)) ISNULL);
SELECT * FROM vt0, rt0;
SELECT * FROM vt0, rt0 WHERE (((((vt0.c0)IS(rt0.c1)))!=((- (vt0.c1))))) UNION ALL SELECT * FROM vt0, rt0 WHERE ((NOT (((((vt0.c0)IS(rt0.c1)))!=((- (vt0.c1))))))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE (((((((vt0.c0)IS(rt0.c1)))<>((- (vt0.c1))))) ISNULL));
SELECT * FROM vt0, rt0;
SELECT DISTINCT rt0.c0, vt0.c1 FROM rt0, vt0;
SELECT DISTINCT rt0.c0, vt0.c1 FROM rt0, vt0 WHERE (vt0.c1) UNION SELECT DISTINCT rt0.c0, vt0.c1 FROM rt0, vt0 WHERE ((NOT (vt0.c1))) UNION SELECT DISTINCT rt0.c0, vt0.c1 FROM rt0, vt0 WHERE (((vt0.c1) ISNULL));
SELECT DISTINCT rt0.c0, vt0.c1 FROM rt0, vt0;
SELECT vt0.c1, rt0.c1, vt0.c0, rt0.c0 FROM vt0 INNER JOIN rt0 ON CASE WHEN rt0.c2 COLLATE BINARY THEN (~ (rt0.c2)) END GROUP BY vt0.c1, rt0.c1, vt0.c0, rt0.c0;
SELECT vt0.c1, rt0.c1, vt0.c0, rt0.c0 FROM vt0 INNER JOIN rt0 ON CASE WHEN rt0.c2 COLLATE BINARY THEN (~ (rt0.c2)) END WHERE (((((vt0.c1) IS TRUE))<('' COLLATE RTRIM))) GROUP BY vt0.c1, rt0.c1, vt0.c0, rt0.c0 UNION SELECT vt0.c1, rt0.c1, vt0.c0, rt0.c0 FROM vt0 INNER JOIN rt0 ON CASE WHEN rt0.c2 COLLATE BINARY THEN (~ (rt0.c2)) END WHERE ((NOT (((((vt0.c1) IS TRUE))<('' COLLATE RTRIM))))) GROUP BY vt0.c1, rt0.c1, vt0.c0, rt0.c0 UNION SELECT vt0.c1, rt0.c1, vt0.c0, rt0.c0 FROM vt0 INNER JOIN rt0 ON CASE WHEN rt0.c2 COLLATE BINARY THEN (~ (rt0.c2)) END WHERE (((((((vt0.c1) IS TRUE))<('' COLLATE RTRIM))) ISNULL)) GROUP BY vt0.c1, rt0.c1, vt0.c0, rt0.c0;
SELECT vt0.c1, rt0.c1, vt0.c0, rt0.c0 FROM vt0 INNER JOIN rt0 ON CASE WHEN rt0.c2 COLLATE BINARY THEN (~ (rt0.c2)) END GROUP BY vt0.c1, rt0.c1, vt0.c0, rt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MIN(COUNT(*)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MIN(COUNT(*)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN(COUNT(*))) ISNULL);
SELECT ALL TOTAL((NOT ((((rt0.c1))==((rt0.c2)))))) FROM rt0;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c0 AS BLOB)) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (CAST(vt0.c0 AS BLOB)))) UNION ALL SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB)) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT rt0.c1 FROM rt0, vt0;
SELECT DISTINCT rt0.c1 FROM rt0, vt0 WHERE (((((~ (rt0.c2))))<((CAST(vt0.c1 AS NUMERIC))))) UNION SELECT DISTINCT rt0.c1 FROM rt0, vt0 WHERE ((NOT (((((~ (rt0.c2))))<((CAST(vt0.c1 AS NUMERIC))))))) UNION SELECT DISTINCT rt0.c1 FROM rt0, vt0 WHERE (((((((~ (rt0.c2))))<((CAST(vt0.c1 AS NUMERIC))))) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0, vt0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((('122691604') ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((('122691604') ISNULL)))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((('122691604') ISNULL)) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c2, vt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0, vt0.c1;
SELECT rt0.c2, vt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0, vt0.c1 HAVING ((CASE WHEN COUNT(GROUP_CONCAT(rt0.c2)) THEN GROUP_CONCAT(SUM(MAX(COUNT(*)))) END)IS(TOTAL(TOTAL(SUM(AVG(TOTAL(rt0.c2))))))) UNION ALL SELECT rt0.c2, vt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0, vt0.c1 HAVING (NOT (((CASE WHEN COUNT(GROUP_CONCAT(rt0.c2)) THEN GROUP_CONCAT(SUM(MAX(COUNT(*)))) END)IS(TOTAL(TOTAL(SUM(AVG(TOTAL(rt0.c2))))))))) UNION ALL SELECT rt0.c2, vt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0, vt0.c1 HAVING ((((CASE WHEN COUNT(GROUP_CONCAT(rt0.c2)) THEN GROUP_CONCAT(SUM(MAX(COUNT(*)))) END)IS(TOTAL(TOTAL(SUM(AVG(TOTAL(rt0.c2)))))))) ISNULL);
SELECT vt0.c0, vt0.c1 FROM vt0;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((- (IFNULL(vt0.c1, vt0.c1)))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT ((- (IFNULL(vt0.c1, vt0.c1)))))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((((- (IFNULL(vt0.c1, vt0.c1)))) ISNULL));
SELECT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (((vt0.c1) BETWEEN (rt0.c2) AND (vt0.c0)) COLLATE BINARY) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (((vt0.c1) BETWEEN (rt0.c2) AND (vt0.c0)) COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((((vt0.c1) BETWEEN (rt0.c2) AND (vt0.c0)) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT ((- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((((- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING NULL UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (NULL)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((NULL) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING NULL UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (NULL)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((NULL) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c2 FROM rt0;
SELECT rt0.c2 FROM rt0 WHERE (CASE CAST(rt0.c0 AS TEXT)  WHEN ((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)) THEN ((rt0.c2)*(rt0.c0)) ELSE CAST(rt0.c2 AS TEXT) END) UNION ALL SELECT rt0.c2 FROM rt0 WHERE ((NOT (CASE CAST(rt0.c0 AS TEXT)  WHEN ((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)) THEN ((rt0.c2)*(rt0.c0)) ELSE CAST(rt0.c2 AS TEXT) END))) UNION ALL SELECT rt0.c2 FROM rt0 WHERE (((CASE CAST(rt0.c0 AS TEXT)  WHEN ((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)) THEN ((rt0.c2)*(rt0.c0)) ELSE CAST(rt0.c2 AS TEXT) END) ISNULL));
SELECT ALL rt0.c2 FROM rt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (CAST(HEX(vt0.c0) AS BLOB)) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (CAST(HEX(vt0.c0) AS BLOB)))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((CAST(HEX(vt0.c0) AS BLOB)) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 NOT INDEXED WHERE (CASE ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))  WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0)/(vt0.c1)) WHEN ((vt0.c0) IS FALSE) THEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (x'')) WHEN DATETIME(vt0.c1, vt0.c0, vt0.c0) THEN 0Xffffffffa512fc92 ELSE vt0.c1 END) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE ((NOT (CASE ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))  WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0)/(vt0.c1)) WHEN ((vt0.c0) IS FALSE) THEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (x'')) WHEN DATETIME(vt0.c1, vt0.c0, vt0.c0) THEN 0xffffffffa512fc92 ELSE vt0.c1 END))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE (((CASE ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))  WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0)/(vt0.c1)) WHEN ((vt0.c0) IS FALSE) THEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (x'')) WHEN DATETIME(vt0.c1, vt0.c0, vt0.c0) THEN 0xffffffffa512fc92 ELSE vt0.c1 END) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (+ (((TOTAL(vt0.c1))/(vt0.c0)))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT ((+ (((TOTAL(vt0.c1))/(vt0.c0)))))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (((+ (((TOTAL(vt0.c1))/(vt0.c0))))) ISNULL);
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (+ (((TOTAL(vt0.c1))/(vt0.c0)))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT ((+ (((TOTAL(vt0.c1))/(vt0.c0)))))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (((+ (((TOTAL(vt0.c1))/(vt0.c0))))) ISNULL);
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL * FROM rt0, vt0;
SELECT * FROM rt0, vt0 WHERE (CAST(vt0.c1 AS INTEGER) COLLATE NOCASE) UNION ALL SELECT * FROM rt0, vt0 WHERE ((NOT (CAST(vt0.c1 AS INTEGER) COLLATE NOCASE))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE (((CAST(vt0.c1 AS INTEGER) COLLATE NOCASE) ISNULL));
SELECT ALL * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((CAST(rt0.c2 AS NUMERIC)))<((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((CAST(rt0.c2 AS NUMERIC)))<((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((CAST(rt0.c2 AS NUMERIC)))<((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, rt0.c2 FROM vt0 LEFT OUTER JOIN rt0 ON ((CASE WHEN vt0.c1 THEN rt0.c2 ELSE rt0.c0 END) NOT NULL) GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM vt0 LEFT OUTER JOIN rt0 ON ((CASE WHEN vt0.c1 THEN rt0.c2 ELSE rt0.c0 END) NOT NULL) WHERE ((~ (rt0.c0 COLLATE RTRIM))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM vt0 LEFT OUTER JOIN rt0 ON ((CASE WHEN vt0.c1 THEN rt0.c2 ELSE rt0.c0 END) NOT NULL) WHERE ((NOT ((~ (rt0.c0 COLLATE RTRIM))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM vt0 LEFT OUTER JOIN rt0 ON ((CASE WHEN vt0.c1 THEN rt0.c2 ELSE rt0.c0 END) NOT NULL) WHERE ((((~ (rt0.c0 COLLATE RTRIM))) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM vt0 LEFT OUTER JOIN rt0 ON ((CASE WHEN vt0.c1 THEN rt0.c2 ELSE rt0.c0 END) NOT NULL) GROUP BY rt0.c0, rt0.c2;
SELECT ALL vt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON ((CASE WHEN rt0.c1 THEN rt0.c2 END) BETWEEN (json_valid(rt0.c0)) AND ((~ (rt0.c1)))) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON ((CASE WHEN rt0.c1 THEN rt0.c2 END) BETWEEN (json_valid(rt0.c0)) AND ((~ (rt0.c1)))) GROUP BY vt0.c1 HAVING COUNT(ABS('0覙⮸r 8')) UNION ALL SELECT vt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON ((CASE WHEN rt0.c1 THEN rt0.c2 END) BETWEEN (json_valid(rt0.c0)) AND ((~ (rt0.c1)))) GROUP BY vt0.c1 HAVING (NOT (COUNT(ABS('0覙⮸r 8')))) UNION ALL SELECT vt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON ((CASE WHEN rt0.c1 THEN rt0.c2 END) BETWEEN (json_valid(rt0.c0)) AND ((~ (rt0.c1)))) GROUP BY vt0.c1 HAVING ((COUNT(ABS('0覙⮸r 8'))) ISNULL);
SELECT ALL vt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON ((CASE WHEN rt0.c1 THEN rt0.c2 END) BETWEEN (json_valid(rt0.c0)) AND ((~ (rt0.c1)))) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON ((CASE WHEN rt0.c1 THEN rt0.c2 END) BETWEEN (json_valid(rt0.c0)) AND ((~ (rt0.c1)))) GROUP BY vt0.c1 HAVING COUNT(ABS('0覙⮸r 8')) UNION ALL SELECT vt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON ((CASE WHEN rt0.c1 THEN rt0.c2 END) BETWEEN (json_valid(rt0.c0)) AND ((~ (rt0.c1)))) GROUP BY vt0.c1 HAVING (NOT (COUNT(ABS('0覙⮸r 8')))) UNION ALL SELECT vt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON ((CASE WHEN rt0.c1 THEN rt0.c2 END) BETWEEN (json_valid(rt0.c0)) AND ((~ (rt0.c1)))) GROUP BY vt0.c1 HAVING ((COUNT(ABS('0覙⮸r 8'))) ISNULL);
SELECT ALL vt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON ((CASE WHEN rt0.c1 THEN rt0.c2 END) BETWEEN (json_valid(rt0.c0)) AND ((~ (rt0.c1)))) GROUP BY vt0.c1;
SELECT ALL TOTAL(vt0.c1) FROM vt0, rt0;
SELECT ALL rt0.c1, vt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM rt0 NATURAL JOIN vt0;
SELECT rt0.c1, vt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM rt0 NATURAL JOIN vt0 WHERE (CAST(CASE WHEN vt0.c1 THEN rt0.c1 END AS TEXT)) UNION ALL SELECT rt0.c1, vt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM rt0 NATURAL JOIN vt0 WHERE ((NOT (CAST(CASE WHEN vt0.c1 THEN rt0.c1 END AS TEXT)))) UNION ALL SELECT rt0.c1, vt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM rt0 NATURAL JOIN vt0 WHERE (((CAST(CASE WHEN vt0.c1 THEN rt0.c1 END AS TEXT)) ISNULL));
SELECT ALL rt0.c1, vt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM rt0 NATURAL JOIN vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((0.17805154185665262)) BETWEEN (((rt0.c0 IN ()))) AND ((CAST(rt0.c1 AS INTEGER))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((0.17805154185665262)) BETWEEN (((rt0.c0 IN ()))) AND ((CAST(rt0.c1 AS INTEGER))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((0.17805154185665262)) BETWEEN (((rt0.c0 IN ()))) AND ((CAST(rt0.c1 AS INTEGER))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c1) NOT NULL)))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((NOT (((rt0.c1) NOT NULL)))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((NOT (((rt0.c1) NOT NULL)))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1, vt0.c1, rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1, vt0.c1, rt0.c2, vt0.c0;
SELECT rt0.c0, rt0.c1, vt0.c1, rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1, vt0.c1, rt0.c2, vt0.c0 HAVING AVG(AVG(NULL)) UNION ALL SELECT rt0.c0, rt0.c1, vt0.c1, rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1, vt0.c1, rt0.c2, vt0.c0 HAVING (NOT (AVG(AVG(NULL)))) UNION ALL SELECT ALL rt0.c0, rt0.c1, vt0.c1, rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1, vt0.c1, rt0.c2, vt0.c0 HAVING ((AVG(AVG(NULL))) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((NULL) IS TRUE)) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((NULL) IS TRUE)))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((NULL) IS TRUE)) ISNULL));
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM vt0, rt0 NOT INDEXED WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CAST(((vt0.c0)LIKE(MIN(MAX(SUM(AVG(vt0.c1)))))) AS INTEGER) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CAST(((vt0.c0)LIKE(MIN(MAX(SUM(AVG(vt0.c1)))))) AS INTEGER))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CAST(((vt0.c0)LIKE(MIN(MAX(SUM(AVG(vt0.c1)))))) AS INTEGER)) ISNULL);
SELECT ALL vt0.c0, rt0.c2 FROM rt0, vt0;
SELECT vt0.c0, rt0.c2 FROM rt0, vt0 WHERE (((((rt0.c2) IS TRUE))-(CAST(rt0.c0 AS INTEGER)))) UNION ALL SELECT ALL vt0.c0, rt0.c2 FROM rt0, vt0 WHERE ((NOT (((((rt0.c2) IS TRUE))-(CAST(rt0.c0 AS INTEGER)))))) UNION ALL SELECT ALL vt0.c0, rt0.c2 FROM rt0, vt0 WHERE (((((((rt0.c2) IS TRUE))-(CAST(rt0.c0 AS INTEGER)))) ISNULL));
SELECT ALL vt0.c0, rt0.c2 FROM rt0, vt0;
SELECT DISTINCT vt0.c0, rt0.c2, vt0.c1, rt0.c1, rt0.c0 FROM vt0, rt0;
SELECT DISTINCT vt0.c0, rt0.c2, vt0.c1, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE (((((vt0.c1)OR(rt0.c0))) ISNULL)) UNION SELECT DISTINCT vt0.c0, rt0.c2, vt0.c1, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE ((NOT (((((vt0.c1)OR(rt0.c0))) ISNULL)))) UNION SELECT DISTINCT vt0.c0, rt0.c2, vt0.c1, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE (((((((vt0.c1)OR(rt0.c0))) ISNULL)) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c2, vt0.c1, rt0.c1, rt0.c0 FROM vt0, rt0;
SELECT ALL rt0.c2 FROM rt0, vt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0, vt0 WHERE (((((((vt0.c1) NOTNULL))OR(CAST(vt0.c0 AS INTEGER))))OR(((vt0.c1)-(rt0.c1))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0, vt0 WHERE ((NOT (((((((vt0.c1) NOTNULL))OR(CAST(vt0.c0 AS INTEGER))))OR(((vt0.c1)-(rt0.c1))))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0, vt0 WHERE (((((((((vt0.c1) NOTNULL))OR(CAST(vt0.c0 AS INTEGER))))OR(((vt0.c1)-(rt0.c1))))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0, vt0 GROUP BY rt0.c2;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(SUM(SUM(AVG(vt0.c1)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(SUM(SUM(AVG(vt0.c1)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(SUM(SUM(AVG(vt0.c1))))) ISNULL);
SELECT ALL rt0.c0, vt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON ((CAST(vt0.c0 AS NUMERIC))AND(((vt0.c1)GLOB(vt0.c1))));
SELECT ALL rt0.c0, vt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON ((CAST(vt0.c0 AS NUMERIC))AND(((vt0.c1)GLOB(vt0.c1)))) WHERE ((+ (((((((((vt0.c1)OR('1876597876')))OR(vt0.c1)))OR(rt0.c2)))OR(rt0.c1))))) UNION ALL SELECT ALL rt0.c0, vt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON ((CAST(vt0.c0 AS NUMERIC))AND(((vt0.c1)GLOB(vt0.c1)))) WHERE ((NOT ((+ (((((((((vt0.c1)OR('1876597876')))OR(vt0.c1)))OR(rt0.c2)))OR(rt0.c1))))))) UNION ALL SELECT rt0.c0, vt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON ((CAST(vt0.c0 AS NUMERIC))AND(((vt0.c1)GLOB(vt0.c1)))) WHERE ((((+ (((((((((vt0.c1)OR('1876597876')))OR(vt0.c1)))OR(rt0.c2)))OR(rt0.c1))))) ISNULL));
SELECT ALL rt0.c0, vt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON ((CAST(vt0.c0 AS NUMERIC))AND(((vt0.c1)GLOB(vt0.c1))));
SELECT DISTINCT rt0.c0, vt0.c1, rt0.c2, rt0.c1, vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON (+ (((((rt0.c1)OR(rt0.c2)))AND(rt0.c0))));
SELECT DISTINCT rt0.c0, vt0.c1, rt0.c2, rt0.c1, vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON (+ (((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)))) WHERE ('-1628331239' COLLATE RTRIM COLLATE BINARY) UNION SELECT DISTINCT rt0.c0, vt0.c1, rt0.c2, rt0.c1, vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON (+ (((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)))) WHERE ((NOT ('-1628331239' COLLATE RTRIM COLLATE BINARY))) UNION SELECT DISTINCT rt0.c0, vt0.c1, rt0.c2, rt0.c1, vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON (+ (((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)))) WHERE ((('-1628331239' COLLATE RTRIM COLLATE BINARY) ISNULL));
SELECT DISTINCT rt0.c0, vt0.c1, rt0.c2, rt0.c1, vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON (+ (((((rt0.c1)OR(rt0.c2)))AND(rt0.c0))));
SELECT vt0.c1 FROM vt0, rt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0, rt0 WHERE ((NOT (rt0.c0))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0, rt0 WHERE ((NOT ((NOT (rt0.c0))))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0, rt0 WHERE ((((NOT (rt0.c0))) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0, rt0 GROUP BY vt0.c1;
SELECT rt0.c2, vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c1;
SELECT ALL rt0.c2, vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c1 HAVING COUNT(*) UNION ALL SELECT rt0.c2, vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c2, vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c2, vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c1;
SELECT ALL rt0.c2, vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c1 HAVING COUNT(*) UNION ALL SELECT rt0.c2, vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c2, vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c2, vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c1;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (LTRIM((((x'')) BETWEEN ((vt0.c0)) AND ((vt0.c1))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (LTRIM((((x'')) BETWEEN ((vt0.c0)) AND ((vt0.c1))))))) UNION ALL SELECT * FROM vt0 WHERE (((LTRIM((((x'')) BETWEEN ((vt0.c0)) AND ((vt0.c1))))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ('i鮺''') UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ('i鮺'''))) UNION SELECT DISTINCT * FROM vt0 WHERE ((('i鮺''') ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM vt0, rt0 WHERE ((((rt0.c2 IN ()))/(((545512198) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM vt0, rt0 WHERE ((NOT ((((rt0.c2 IN ()))/(((545512198) NOT BETWEEN (rt0.c0) AND (rt0.c0))))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM vt0, rt0 WHERE ((((((rt0.c2 IN ()))/(((545512198) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c0, vt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON (((vt0.c0))<>((((rt0.c2)OR(vt0.c1))))) GROUP BY rt0.c0, vt0.c1;
SELECT ALL rt0.c0, vt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON (((vt0.c0))!=((((rt0.c2)OR(vt0.c1))))) GROUP BY rt0.c0, vt0.c1 HAVING SUM(((vt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c2))) UNION ALL SELECT rt0.c0, vt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON (((vt0.c0))<>((((rt0.c2)OR(vt0.c1))))) GROUP BY rt0.c0, vt0.c1 HAVING (NOT (SUM(((vt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c2))))) UNION ALL SELECT ALL rt0.c0, vt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON (((vt0.c0))!=((((rt0.c2)OR(vt0.c1))))) GROUP BY rt0.c0, vt0.c1 HAVING ((SUM(((vt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c2)))) ISNULL);
SELECT ALL rt0.c0, vt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON (((vt0.c0))<>((((rt0.c2)OR(vt0.c1))))) GROUP BY rt0.c0, vt0.c1;
SELECT ALL rt0.c0, vt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON (((vt0.c0))!=((((rt0.c2)OR(vt0.c1))))) GROUP BY rt0.c0, vt0.c1 HAVING SUM(((vt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c2))) UNION ALL SELECT rt0.c0, vt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON (((vt0.c0))<>((((rt0.c2)OR(vt0.c1))))) GROUP BY rt0.c0, vt0.c1 HAVING (NOT (SUM(((vt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c2))))) UNION ALL SELECT ALL rt0.c0, vt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON (((vt0.c0))!=((((rt0.c2)OR(vt0.c1))))) GROUP BY rt0.c0, vt0.c1 HAVING ((SUM(((vt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c2)))) ISNULL);
SELECT ALL rt0.c0, vt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON (((vt0.c0))<>((((rt0.c2)OR(vt0.c1))))) GROUP BY rt0.c0, vt0.c1;
SELECT ALL TOTAL(((((((((rt0.c1)AND(vt0.c1)))AND(vt0.c1)))OR(CAST(rt0.c2 AS NUMERIC))))AND((((vt0.c1))<=((vt0.c0)))))) FROM vt0, rt0 ORDER BY (((rt0.c2)||(vt0.c1)) IN ());
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (CASE WHEN LIKELY(DISTINCT 0X6f4db4fe) THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)) WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) THEN ((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)) WHEN LIKELY(rt0.c0) THEN (((NULL, rt0.c2, rt0.c2, rt0.c1, rt0.c2))<=((rt0.c1, rt0.c0, rt0.c0, rt0.c1, rt0.c1))) ELSE NULL COLLATE NOCASE END) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (CASE WHEN LIKELY(DISTINCT 0x6f4db4fe) THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)) WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) THEN ((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)) WHEN LIKELY(rt0.c0) THEN (((NULL, rt0.c2, rt0.c2, rt0.c1, rt0.c2))<=((rt0.c1, rt0.c0, rt0.c0, rt0.c1, rt0.c1))) ELSE NULL COLLATE NOCASE END))) UNION ALL SELECT ALL * FROM rt0 WHERE (((CASE WHEN LIKELY(DISTINCT 0X6f4db4fe) THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)) WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) THEN ((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)) WHEN LIKELY(rt0.c0) THEN (((NULL, rt0.c2, rt0.c2, rt0.c1, rt0.c2))<=((rt0.c1, rt0.c0, rt0.c0, rt0.c1, rt0.c1))) ELSE NULL COLLATE NOCASE END) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c2, vt0.c0, rt0.c0, rt0.c1 FROM vt0, rt0;
SELECT DISTINCT rt0.c2, vt0.c0, rt0.c0, rt0.c1 FROM vt0, rt0 WHERE (CAST((((rt0.c0, x'', vt0.c1)) NOT BETWEEN ((rt0.c1, vt0.c1, rt0.c2)) AND ((vt0.c0, rt0.c2, rt0.c0))) AS REAL)) UNION SELECT DISTINCT rt0.c2, vt0.c0, rt0.c0, rt0.c1 FROM vt0, rt0 WHERE ((NOT (CAST((((rt0.c0, x'', vt0.c1)) NOT BETWEEN ((rt0.c1, vt0.c1, rt0.c2)) AND ((vt0.c0, rt0.c2, rt0.c0))) AS REAL)))) UNION SELECT DISTINCT rt0.c2, vt0.c0, rt0.c0, rt0.c1 FROM vt0, rt0 WHERE (((CAST((((rt0.c0, x'', vt0.c1)) NOT BETWEEN ((rt0.c1, vt0.c1, rt0.c2)) AND ((vt0.c0, rt0.c2, rt0.c0))) AS REAL)) ISNULL));
SELECT DISTINCT rt0.c2, vt0.c0, rt0.c0, rt0.c1 FROM vt0, rt0;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 WHERE ((((((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c1))))<=((0.8413773478973597)))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE ((NOT ((((((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c1))))<=((0.8413773478973597)))))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE ((((((((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c1))))<=((0.8413773478973597)))) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING MIN((TOTAL(rt0.c1) IN ())) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (MIN((TOTAL(rt0.c1) IN ())))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((MIN((TOTAL(rt0.c1) IN ()))) ISNULL);
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING MIN((TOTAL(rt0.c1) IN ())) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (MIN((TOTAL(rt0.c1) IN ())))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((MIN((TOTAL(rt0.c1) IN ()))) ISNULL);
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE ('-174470869') UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ('-174470869'))) UNION ALL SELECT * FROM vt0 WHERE ((('-174470869') ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE ((vt0.c1 COLLATE BINARY IN ())) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT ((vt0.c1 COLLATE BINARY IN ())))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE ((((vt0.c1 COLLATE BINARY IN ())) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT vt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c1, rt0.c2;
SELECT vt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 WHERE (SQLITE_COMPILEOPTION_GET(vt0.c1 COLLATE NOCASE)) GROUP BY vt0.c0, rt0.c1, rt0.c2 UNION SELECT vt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 WHERE ((NOT (SQLITE_COMPILEOPTION_GET(vt0.c1 COLLATE NOCASE)))) GROUP BY vt0.c0, rt0.c1, rt0.c2 UNION SELECT vt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 WHERE (((SQLITE_COMPILEOPTION_GET(vt0.c1 COLLATE NOCASE)) ISNULL)) GROUP BY vt0.c0, rt0.c1, rt0.c2;
SELECT vt0.c0, rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING rt0.c1 UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (rt0.c1)) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((rt0.c1) ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING rt0.c1 UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (rt0.c1)) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((rt0.c1) ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT SUM(CASE rt0.c1  WHEN rt0.c0 THEN ((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))OR(0.22474289097366484)))OR(rt0.c1)) END) FROM vt0 NOT INDEXED, rt0 ORDER BY ((((vt0.c1) IS FALSE)) IS TRUE);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END) BETWEEN (CASE vt0.c1  WHEN 'UOM' THEN vt0.c1 END) AND (((vt0.c1)!=(vt0.c1))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END) BETWEEN (CASE vt0.c1  WHEN 'UOM' THEN vt0.c1 END) AND (((vt0.c1)!=(vt0.c1))))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END) BETWEEN (CASE vt0.c1  WHEN 'UOM' THEN vt0.c1 END) AND (((vt0.c1)<>(vt0.c1))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c1) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (((CAST(rt0.c1 AS NUMERIC))&(CAST(rt0.c2 AS REAL)))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((CAST(rt0.c1 AS NUMERIC))&(CAST(rt0.c2 AS REAL)))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (((((CAST(rt0.c1 AS NUMERIC))&(CAST(rt0.c2 AS REAL)))) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT vt0.c0, rt0.c1, vt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c1, vt0.c1, rt0.c0;
SELECT vt0.c0, rt0.c1, vt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c1, vt0.c1, rt0.c0 HAVING AVG(CAST(MIN(COUNT(*)) AS TEXT)) UNION ALL SELECT vt0.c0, rt0.c1, vt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c1, vt0.c1, rt0.c0 HAVING (NOT (AVG(CAST(MIN(COUNT(*)) AS TEXT)))) UNION ALL SELECT ALL vt0.c0, rt0.c1, vt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c1, vt0.c1, rt0.c0 HAVING ((AVG(CAST(MIN(COUNT(*)) AS TEXT))) ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((((((((rt0.c1)>(rt0.c1)))AND((((NULL)) NOT BETWEEN ((-1.794750212E9)) AND ((rt0.c0))))))AND(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)))AND(((rt0.c1)<(rt0.c2)))))OR(COALESCE(rt0.c2, rt0.c0, rt0.c2, rt0.c2)))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((((((((((rt0.c1)>(rt0.c1)))AND((((NULL)) NOT BETWEEN ((-1.794750212E9)) AND ((rt0.c0))))))AND(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)))AND(((rt0.c1)<(rt0.c2)))))OR(COALESCE(rt0.c2, rt0.c0, rt0.c2, rt0.c2)))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((((((((((rt0.c1)>(rt0.c1)))AND((((NULL)) NOT BETWEEN ((-1.794750212E9)) AND ((rt0.c0))))))AND(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)))AND(((rt0.c1)<(rt0.c2)))))OR(COALESCE(rt0.c2, rt0.c0, rt0.c2, rt0.c2)))) ISNULL));
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (((((vt0.c1)!=(vt0.c1))) ISNULL)) UNION SELECT DISTINCT * FROM vt0 NOT INDEXED, rt0 WHERE ((NOT (((((vt0.c1)!=(vt0.c1))) ISNULL)))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((((((vt0.c1)!=(vt0.c1))) ISNULL)) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 WHERE (NULL) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE ((NOT (NULL))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE (((NULL) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL rt0.c0, vt0.c0, vt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, vt0.c1, rt0.c2;
SELECT ALL rt0.c0, vt0.c0, vt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, vt0.c1, rt0.c2 HAVING SUM((vt0.c0 IN ())) UNION ALL SELECT ALL rt0.c0, vt0.c0, vt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, vt0.c1, rt0.c2 HAVING (NOT (SUM((vt0.c0 IN ())))) UNION ALL SELECT ALL rt0.c0, vt0.c0, vt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, vt0.c1, rt0.c2 HAVING ((SUM((vt0.c0 IN ()))) ISNULL);
SELECT ALL rt0.c0, vt0.c0, vt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, vt0.c1, rt0.c2;
SELECT ALL rt0.c0, vt0.c0, vt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, vt0.c1, rt0.c2 HAVING SUM((vt0.c0 IN ())) UNION ALL SELECT ALL rt0.c0, vt0.c0, vt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, vt0.c1, rt0.c2 HAVING (NOT (SUM((vt0.c0 IN ())))) UNION ALL SELECT ALL rt0.c0, vt0.c0, vt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, vt0.c1, rt0.c2 HAVING ((SUM((vt0.c0 IN ()))) ISNULL);
SELECT ALL rt0.c0, vt0.c0, vt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, vt0.c1, rt0.c2;
SELECT ALL rt0.c2, vt0.c0 FROM vt0 NOT INDEXED, rt0;
SELECT ALL rt0.c2, vt0.c0 FROM vt0, rt0 WHERE (rt0.c0) UNION ALL SELECT rt0.c2, vt0.c0 FROM vt0, rt0 WHERE ((NOT (rt0.c0))) UNION ALL SELECT ALL rt0.c2, vt0.c0 FROM vt0, rt0 WHERE (((rt0.c0) ISNULL));
SELECT ALL rt0.c2, vt0.c0 FROM vt0 NOT INDEXED, rt0;
SELECT DISTINCT vt0.c0, rt0.c2 FROM vt0 CROSS JOIN rt0 ON (((((vt0.c0)+(rt0.c1)), ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)), CASE rt0.c1  WHEN vt0.c0 THEN vt0.c0 END))==((IFNULL(rt0.c1, rt0.c1), 9.15979906E8, CAST(vt0.c0 AS REAL))));
SELECT DISTINCT vt0.c0, rt0.c2 FROM vt0 CROSS JOIN rt0 ON (((((vt0.c0)+(rt0.c1)), ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)), CASE rt0.c1  WHEN vt0.c0 THEN vt0.c0 END))=((IFNULL(rt0.c1, rt0.c1), 9.15979906E8, CAST(vt0.c0 AS REAL)))) WHERE (((((((vt0.c0)*(vt0.c0)))AND(rt0.c1 COLLATE RTRIM)))OR(x'' COLLATE RTRIM))) UNION SELECT DISTINCT vt0.c0, rt0.c2 FROM vt0 CROSS JOIN rt0 ON (((((vt0.c0)+(rt0.c1)), ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)), CASE rt0.c1  WHEN vt0.c0 THEN vt0.c0 END))=((IFNULL(rt0.c1, rt0.c1), 9.15979906E8, CAST(vt0.c0 AS REAL)))) WHERE ((NOT (((((((vt0.c0)*(vt0.c0)))AND(rt0.c1 COLLATE RTRIM)))OR(x'' COLLATE RTRIM))))) UNION SELECT DISTINCT vt0.c0, rt0.c2 FROM vt0 CROSS JOIN rt0 ON (((((vt0.c0)+(rt0.c1)), ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)), CASE rt0.c1  WHEN vt0.c0 THEN vt0.c0 END))=((IFNULL(rt0.c1, rt0.c1), 9.15979906E8, CAST(vt0.c0 AS REAL)))) WHERE (((((((((vt0.c0)*(vt0.c0)))AND(rt0.c1 COLLATE RTRIM)))OR(x'' COLLATE RTRIM))) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c2 FROM vt0 CROSS JOIN rt0 ON (((((vt0.c0)+(rt0.c1)), ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)), CASE rt0.c1  WHEN vt0.c0 THEN vt0.c0 END))==((IFNULL(rt0.c1, rt0.c1), 9.15979906E8, CAST(vt0.c0 AS REAL))));
SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt0.c1, vt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON rt0.c2 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c1, vt0.c0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt0.c1, vt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON rt0.c2 WHERE (-6.2211098E7) GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c1, vt0.c0 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt0.c1, vt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON rt0.c2 WHERE ((NOT (-6.2211098E7))) GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c1, vt0.c0 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt0.c1, vt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON rt0.c2 WHERE (((-6.2211098E7) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c1, vt0.c0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt0.c1, vt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON rt0.c2 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c1, vt0.c0;
SELECT rt0.c0, vt0.c1, vt0.c0, rt0.c2, rt0.c1 FROM vt0 NATURAL JOIN rt0 GROUP BY rt0.c0, vt0.c1, vt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, vt0.c1, vt0.c0, rt0.c2, rt0.c1 FROM vt0 NATURAL JOIN rt0 GROUP BY rt0.c0, vt0.c1, vt0.c0, rt0.c2, rt0.c1 HAVING TOTAL(SUM(rt0.c2)) UNION ALL SELECT rt0.c0, vt0.c1, vt0.c0, rt0.c2, rt0.c1 FROM vt0 NATURAL JOIN rt0 GROUP BY rt0.c0, vt0.c1, vt0.c0, rt0.c2, rt0.c1 HAVING (NOT (TOTAL(SUM(rt0.c2)))) UNION ALL SELECT rt0.c0, vt0.c1, vt0.c0, rt0.c2, rt0.c1 FROM vt0 NATURAL JOIN rt0 GROUP BY rt0.c0, vt0.c1, vt0.c0, rt0.c2, rt0.c1 HAVING ((TOTAL(SUM(rt0.c2))) ISNULL);
SELECT ALL rt0.c0, rt0.c1 FROM rt0;
SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (((((((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)))AND(((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))))AND(((rt0.c2) BETWEEN (rt0.c0) AND ('-2019739793')))))AND((+ (0.5402132565525948)))))OR(CASE WHEN rt0.c0 THEN '' ELSE rt0.c2 END))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((((((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)))AND(((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))))AND(((rt0.c2) BETWEEN (rt0.c0) AND ('-2019739793')))))AND((+ (0.5402132565525948)))))OR(CASE WHEN rt0.c0 THEN '' ELSE rt0.c2 END))))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((((((((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)))AND(((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))))AND(((rt0.c2) BETWEEN (rt0.c0) AND ('-2019739793')))))AND((+ (0.5402132565525948)))))OR(CASE WHEN rt0.c0 THEN '' ELSE rt0.c2 END))) ISNULL));
SELECT ALL rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (LIKELIHOOD(DISTINCT vt0.c0, 0.1532749650475702) COLLATE BINARY) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (LIKELIHOOD(DISTINCT vt0.c0, 0.1532749650475702) COLLATE BINARY))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((LIKELIHOOD(DISTINCT vt0.c0, 0.1532749650475702) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT ALL rt0.c2, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM vt0, rt0 WHERE (((DATETIME(vt0.c0, vt0.c1, rt0.c0))<=(vt0.c0 COLLATE NOCASE))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM vt0, rt0 NOT INDEXED WHERE ((NOT (((DATETIME(vt0.c0, vt0.c1, rt0.c0))<=(vt0.c0 COLLATE NOCASE))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM vt0, rt0 WHERE (((((DATETIME(vt0.c0, vt0.c1, rt0.c0))<=(vt0.c0 COLLATE NOCASE))) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (((MAX(MAX(AVG(vt0.c0)))))>=((TOTAL(GROUP_CONCAT(SUM(TOTAL(vt0.c0))))))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT ((((MAX(MAX(AVG(vt0.c0)))))>=((TOTAL(GROUP_CONCAT(SUM(TOTAL(vt0.c0))))))))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (((((MAX(MAX(AVG(vt0.c0)))))>=((TOTAL(GROUP_CONCAT(SUM(TOTAL(vt0.c0)))))))) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (CAST(vt0.c0 AS BLOB)) UNION ALL SELECT * FROM vt0 WHERE ((NOT (CAST(vt0.c0 AS BLOB)))) UNION ALL SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB)) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CASE WHEN ((vt0.c1)||(vt0.c1)) THEN vt0.c1 COLLATE BINARY END) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CASE WHEN ((vt0.c1)||(vt0.c1)) THEN vt0.c1 COLLATE BINARY END))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CASE WHEN ((vt0.c1)||(vt0.c1)) THEN vt0.c1 COLLATE BINARY END) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT rt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c1;
SELECT rt0.c0, vt0.c1 FROM rt0, vt0 WHERE (((((((((LENGTH(vt0.c1))OR(x'')))AND(((rt0.c2) BETWEEN (vt0.c1) AND (vt0.c0)))))AND((~ (vt0.c0)))))OR(((((rt0.c2)AND(vt0.c1)))OR(rt0.c0))))) GROUP BY rt0.c0, vt0.c1 UNION SELECT ALL rt0.c0, vt0.c1 FROM rt0, vt0 WHERE ((NOT (((((((((LENGTH(vt0.c1))OR(x'')))AND(((rt0.c2) BETWEEN (vt0.c1) AND (vt0.c0)))))AND((~ (vt0.c0)))))OR(((((rt0.c2)AND(vt0.c1)))OR(rt0.c0))))))) GROUP BY rt0.c0, vt0.c1 UNION SELECT ALL rt0.c0, vt0.c1 FROM rt0, vt0 WHERE (((((((((((LENGTH(vt0.c1))OR(x'')))AND(((rt0.c2) BETWEEN (vt0.c1) AND (vt0.c0)))))AND((~ (vt0.c0)))))OR(((((rt0.c2)AND(vt0.c1)))OR(rt0.c0))))) ISNULL)) GROUP BY rt0.c0, vt0.c1;
SELECT rt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c1;
SELECT ALL rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0, vt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0, vt0.c0, rt0.c1 HAVING AVG(TOTAL(GROUP_CONCAT(rt0.c2))) UNION ALL SELECT ALL rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM vt0, rt0 NOT INDEXED GROUP BY rt0.c2, rt0.c0, vt0.c0, rt0.c1 HAVING (NOT (AVG(TOTAL(GROUP_CONCAT(rt0.c2))))) UNION ALL SELECT rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0, vt0.c0, rt0.c1 HAVING ((AVG(TOTAL(GROUP_CONCAT(rt0.c2)))) ISNULL);
SELECT vt0.c0, vt0.c1 FROM vt0;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((((((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1))))>=((vt0.c0 COLLATE NOCASE)))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT ((((((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1))))>=((vt0.c0 COLLATE NOCASE)))))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((((((((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1))))>=((vt0.c0 COLLATE NOCASE)))) ISNULL));
SELECT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT rt0.c2 FROM rt0, vt0;
SELECT DISTINCT rt0.c2 FROM rt0, vt0 WHERE (CAST(((vt0.c0)<=(vt0.c0)) AS REAL)) UNION SELECT DISTINCT rt0.c2 FROM rt0, vt0 WHERE ((NOT (CAST(((vt0.c0)<=(vt0.c0)) AS REAL)))) UNION SELECT DISTINCT rt0.c2 FROM rt0, vt0 WHERE (((CAST(((vt0.c0)<=(vt0.c0)) AS REAL)) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0, vt0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (((0.8161904463719317)<(((rt0.c0)=(rt0.c2))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((0.8161904463719317)<(((rt0.c0)==(rt0.c2))))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (((((0.8161904463719317)<(((rt0.c0)==(rt0.c2))))) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(COUNT(vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(COUNT(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(COUNT(vt0.c0))) ISNULL);
SELECT * FROM rt0, vt0;
SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2))) NOT NULL)) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((NOT (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2))) NOT NULL)))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE (((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2))) NOT NULL)) ISNULL));
SELECT * FROM rt0, vt0;
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN rt0 ON ((ABS(DISTINCT vt0.c1))GLOB(vt0.c0 COLLATE BINARY));
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN rt0 ON ((ABS(DISTINCT vt0.c1))GLOB(vt0.c0 COLLATE BINARY)) WHERE (((CAST(x'5321' AS TEXT))<<((rt0.c1 IN ())))) UNION SELECT DISTINCT * FROM vt0 FULL OUTER JOIN rt0 ON ((ABS(DISTINCT vt0.c1))GLOB(vt0.c0 COLLATE BINARY)) WHERE ((NOT (((CAST(x'5321' AS TEXT))<<((rt0.c1 IN ())))))) UNION SELECT DISTINCT * FROM vt0 FULL OUTER JOIN rt0 ON ((ABS(DISTINCT vt0.c1))GLOB(vt0.c0 COLLATE BINARY)) WHERE (((((CAST(x'5321' AS TEXT))<<((rt0.c1 IN ())))) ISNULL));
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN rt0 ON ((ABS(DISTINCT vt0.c1))GLOB(vt0.c0 COLLATE BINARY));
SELECT ALL vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, rt0 WHERE (LAST_INSERT_ROWID()) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, rt0 WHERE ((NOT (LAST_INSERT_ROWID()))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, rt0 WHERE (((LAST_INSERT_ROWID()) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0;
SELECT rt0.c2, rt0.c1, vt0.c1, vt0.c0 FROM rt0 NATURAL JOIN vt0 GROUP BY rt0.c2, rt0.c1, vt0.c1, vt0.c0;
SELECT rt0.c2, rt0.c1, vt0.c1, vt0.c0 FROM rt0 NOT INDEXED NATURAL JOIN vt0 GROUP BY rt0.c2, rt0.c1, vt0.c1, vt0.c0 HAVING GROUP_CONCAT(MAX(vt0.c1)) UNION ALL SELECT rt0.c2, rt0.c1, vt0.c1, vt0.c0 FROM rt0 NATURAL JOIN vt0 GROUP BY rt0.c2, rt0.c1, vt0.c1, vt0.c0 HAVING (NOT (GROUP_CONCAT(MAX(vt0.c1)))) UNION ALL SELECT ALL rt0.c2, rt0.c1, vt0.c1, vt0.c0 FROM rt0 NATURAL JOIN vt0 GROUP BY rt0.c2, rt0.c1, vt0.c1, vt0.c0 HAVING ((GROUP_CONCAT(MAX(vt0.c1))) ISNULL);
SELECT vt0.c1, vt0.c0 FROM rt0, vt0;
SELECT ALL vt0.c1, vt0.c0 FROM rt0, vt0 WHERE (rt0.c2) UNION ALL SELECT vt0.c1, vt0.c0 FROM rt0, vt0 WHERE ((NOT (rt0.c2))) UNION ALL SELECT vt0.c1, vt0.c0 FROM rt0, vt0 WHERE (((rt0.c2) ISNULL));
SELECT vt0.c1, vt0.c0 FROM rt0, vt0;
SELECT DISTINCT rt0.c2, rt0.c1, vt0.c0, vt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON ((((rt0.c1)>(vt0.c0)))+((- (vt0.c0))));
SELECT DISTINCT rt0.c2, rt0.c1, vt0.c0, vt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON ((((rt0.c1)>(vt0.c0)))+((- (vt0.c0)))) WHERE (((('1920096578')) BETWEEN ((CASE rt0.c2  WHEN rt0.c0 THEN vt0.c0 END)) AND ((((rt0.c1) NOTNULL))))) UNION SELECT DISTINCT rt0.c2, rt0.c1, vt0.c0, vt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON ((((rt0.c1)>(vt0.c0)))+((- (vt0.c0)))) WHERE ((NOT (((('1920096578')) BETWEEN ((CASE rt0.c2  WHEN rt0.c0 THEN vt0.c0 END)) AND ((((rt0.c1) NOTNULL))))))) UNION SELECT DISTINCT rt0.c2, rt0.c1, vt0.c0, vt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON ((((rt0.c1)>(vt0.c0)))+((- (vt0.c0)))) WHERE (((((('1920096578')) BETWEEN ((CASE rt0.c2  WHEN rt0.c0 THEN vt0.c0 END)) AND ((((rt0.c1) NOTNULL))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, vt0.c0, vt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON ((((rt0.c1)>(vt0.c0)))+((- (vt0.c0))));
SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c0;
SELECT rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0 WHERE (((((vt0.c0)IS(rt0.c1)))/(x'd755'))) GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c0 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0 WHERE ((NOT (((((vt0.c0)IS(rt0.c1)))/(x'd755'))))) GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c0 UNION SELECT rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0 WHERE (((((((vt0.c0)IS(rt0.c1)))/(x'd755'))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c0;
SELECT ALL rt0.c2, vt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c1, rt0.c0, vt0.c0;
SELECT ALL rt0.c2, vt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c1, rt0.c0, vt0.c0 HAVING GROUP_CONCAT(CASE WHEN vt0.c1 THEN MAX(rt0.c1) END) UNION ALL SELECT ALL rt0.c2, vt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c1, rt0.c0, vt0.c0 HAVING (NOT (GROUP_CONCAT(CASE WHEN vt0.c1 THEN MAX(rt0.c1) END))) UNION ALL SELECT ALL rt0.c2, vt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c1, rt0.c0, vt0.c0 HAVING ((GROUP_CONCAT(CASE WHEN vt0.c1 THEN MAX(rt0.c1) END)) ISNULL);
SELECT SUM(vt0.c0) FROM vt0;
SELECT vt0.c0, vt0.c1 FROM vt0;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (vt0.c1) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (vt0.c1))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((vt0.c1) ISNULL));
SELECT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (((rt0.c1) IS TRUE) COLLATE NOCASE) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (((rt0.c1) IS TRUE) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((((rt0.c1) IS TRUE) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))<=(((((116771838)AND(vt0.c0)))OR(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))<=(((((116771838)AND(vt0.c0)))OR(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))<=(((((116771838)AND(vt0.c0)))OR(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c0, rt0.c1, vt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, vt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, vt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, vt0.c1, rt0.c2 HAVING TOTAL(COUNT(GROUP_CONCAT(MIN(MAX(vt0.c0))))) UNION ALL SELECT rt0.c0, rt0.c1, vt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, vt0.c1, rt0.c2 HAVING (NOT (TOTAL(COUNT(GROUP_CONCAT(MIN(MAX(vt0.c0))))))) UNION ALL SELECT rt0.c0, rt0.c1, vt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, vt0.c1, rt0.c2 HAVING ((TOTAL(COUNT(GROUP_CONCAT(MIN(MAX(vt0.c0)))))) ISNULL);
SELECT rt0.c0, rt0.c1, vt0.c0, vt0.c1, rt0.c2 FROM vt0, rt0;
SELECT rt0.c0, rt0.c1, vt0.c0, vt0.c1, rt0.c2 FROM vt0, rt0 WHERE (CAST(rt0.c1 AS TEXT)) UNION ALL SELECT rt0.c0, rt0.c1, vt0.c0, vt0.c1, rt0.c2 FROM vt0, rt0 WHERE ((NOT (CAST(rt0.c1 AS TEXT)))) UNION ALL SELECT rt0.c0, rt0.c1, vt0.c0, vt0.c1, rt0.c2 FROM vt0, rt0 WHERE (((CAST(rt0.c1 AS TEXT)) ISNULL));
SELECT rt0.c0, rt0.c1, vt0.c0, vt0.c1, rt0.c2 FROM vt0, rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE (NULL) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 NOT INDEXED WHERE ((NOT (NULL))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0;
SELECT ALL rt0.c2, vt0.c0 FROM vt0, rt0 WHERE (vt0.c0) GROUP BY rt0.c2, vt0.c0 UNION SELECT rt0.c2, vt0.c0 FROM vt0, rt0 WHERE ((NOT (vt0.c0))) GROUP BY rt0.c2, vt0.c0 UNION SELECT rt0.c2, vt0.c0 FROM vt0, rt0 WHERE (((vt0.c0) ISNULL)) GROUP BY rt0.c2, vt0.c0;
SELECT ALL rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING MIN(255003387) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (MIN(255003387))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((MIN(255003387)) ISNULL);
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING MIN(255003387) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (MIN(255003387))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((MIN(255003387)) ISNULL);
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE ((- ((((vt0.c0))!=((vt0.c1)))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((- ((((vt0.c0))<>((vt0.c1)))))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((- ((((vt0.c0))<>((vt0.c1)))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0 NOT INDEXED, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM vt0 NOT INDEXED, rt0;
SELECT vt0.c0, rt0.c0, rt0.c1, rt0.c2, vt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c0, rt0.c1, rt0.c2, vt0.c1;
SELECT vt0.c0, rt0.c0, rt0.c1, rt0.c2, vt0.c1 FROM vt0, rt0 WHERE ('0.7387005751819172') GROUP BY vt0.c0, rt0.c0, rt0.c1, rt0.c2, vt0.c1 UNION SELECT ALL vt0.c0, rt0.c0, rt0.c1, rt0.c2, vt0.c1 FROM vt0, rt0 WHERE ((NOT ('0.7387005751819172'))) GROUP BY vt0.c0, rt0.c0, rt0.c1, rt0.c2, vt0.c1 UNION SELECT vt0.c0, rt0.c0, rt0.c1, rt0.c2, vt0.c1 FROM vt0, rt0 WHERE ((('0.7387005751819172') ISNULL)) GROUP BY vt0.c0, rt0.c0, rt0.c1, rt0.c2, vt0.c1;
SELECT vt0.c0, rt0.c0, rt0.c1, rt0.c2, vt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c0, rt0.c1, rt0.c2, vt0.c1;
SELECT rt0.c0, rt0.c2, vt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2, vt0.c1, vt0.c0;
SELECT rt0.c0, rt0.c2, vt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2, vt0.c1, vt0.c0 HAVING TOTAL(MIN(vt0.c0)) UNION ALL SELECT rt0.c0, rt0.c2, vt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2, vt0.c1, vt0.c0 HAVING (NOT (TOTAL(MIN(vt0.c0)))) UNION ALL SELECT ALL rt0.c0, rt0.c2, vt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2, vt0.c1, vt0.c0 HAVING ((TOTAL(MIN(vt0.c0))) ISNULL);
SELECT * FROM vt0, rt0;
SELECT * FROM vt0, rt0 WHERE (rt0.c1) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT * FROM vt0, rt0 WHERE (((rt0.c1) ISNULL));
SELECT * FROM vt0, rt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE ((vt0.c1 IN ())) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT ((vt0.c1 IN ())))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((((vt0.c1 IN ())) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0, vt0 WHERE (CAST(vt0.c1 AS INTEGER) COLLATE RTRIM) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0, vt0 WHERE ((NOT (CAST(vt0.c1 AS INTEGER) COLLATE RTRIM))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0, vt0 WHERE (((CAST(vt0.c1 AS INTEGER) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 INNER JOIN vt0 ON (((rt0.c2 IN ()))>=(CAST(rt0.c2 AS REAL))) GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 INNER JOIN vt0 ON (((rt0.c2 IN ()))>=(CAST(rt0.c2 AS REAL))) GROUP BY rt0.c0, rt0.c2 HAVING AVG(MAX(rt0.c1)) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 INNER JOIN vt0 ON (((rt0.c2 IN ()))>=(CAST(rt0.c2 AS REAL))) GROUP BY rt0.c0, rt0.c2 HAVING (NOT (AVG(MAX(rt0.c1)))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 INNER JOIN vt0 ON (((rt0.c2 IN ()))>=(CAST(rt0.c2 AS REAL))) GROUP BY rt0.c0, rt0.c2 HAVING ((AVG(MAX(rt0.c1))) ISNULL);
SELECT ALL rt0.c2 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 WHERE ('-2038526483') UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT ('-2038526483'))) UNION ALL SELECT rt0.c2 FROM rt0 WHERE ((('-2038526483') ISNULL));
SELECT ALL rt0.c2 FROM rt0;
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE (((((x'') NOT NULL)) NOT BETWEEN (HEX(DISTINCT vt0.c0)) AND (((('A')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((NOT (((((x'') NOT NULL)) NOT BETWEEN (HEX(DISTINCT vt0.c0)) AND (((('A')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE (((((((x'') NOT NULL)) NOT BETWEEN (HEX(DISTINCT vt0.c0)) AND (((('A')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1))) IS FALSE)) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1))) IS FALSE)))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1))) IS FALSE)) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c1, rt0.c2, vt0.c1, rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2, vt0.c1, rt0.c0, vt0.c0;
SELECT rt0.c1, rt0.c2, vt0.c1, rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2, vt0.c1, rt0.c0, vt0.c0 HAVING GROUP_CONCAT(CASE MIN(COUNT(*))  WHEN GROUP_CONCAT(SUM(rt0.c1)) THEN rt0.c0 WHEN rt0.c1 THEN AVG(COUNT(rt0.c0)) WHEN SUM(GROUP_CONCAT(vt0.c1)) THEN rt0.c0 END) UNION ALL SELECT rt0.c1, rt0.c2, vt0.c1, rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2, vt0.c1, rt0.c0, vt0.c0 HAVING (NOT (GROUP_CONCAT(CASE MIN(COUNT(*))  WHEN GROUP_CONCAT(SUM(rt0.c1)) THEN rt0.c0 WHEN rt0.c1 THEN AVG(COUNT(rt0.c0)) WHEN SUM(GROUP_CONCAT(vt0.c1)) THEN rt0.c0 END))) UNION ALL SELECT ALL rt0.c1, rt0.c2, vt0.c1, rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2, vt0.c1, rt0.c0, vt0.c0 HAVING ((GROUP_CONCAT(CASE MIN(COUNT(*))  WHEN GROUP_CONCAT(SUM(rt0.c1)) THEN rt0.c0 WHEN rt0.c1 THEN AVG(COUNT(rt0.c0)) WHEN SUM(GROUP_CONCAT(vt0.c1)) THEN rt0.c0 END)) ISNULL);
SELECT ALL * FROM rt0, vt0;
SELECT * FROM rt0, vt0 WHERE ((((rt0.c2 IN ()))LIKE(rt0.c0 COLLATE NOCASE))) UNION ALL SELECT * FROM rt0, vt0 WHERE ((NOT ((((rt0.c2 IN ()))LIKE(rt0.c0 COLLATE NOCASE))))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((((((rt0.c2 IN ()))LIKE(rt0.c0 COLLATE NOCASE))) ISNULL));
SELECT ALL * FROM rt0, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (LIKE(CAST(vt0.c1 AS BLOB), x'', '9')) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (LIKE(CAST(vt0.c1 AS BLOB), x'', '9')))) UNION SELECT DISTINCT * FROM vt0 WHERE (((LIKE(CAST(vt0.c1 AS BLOB), x'', '9')) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (UPPER(CASE 0xffffffffc3c8f38e  WHEN rt0.c0 THEN rt0.c2 WHEN 4.49189734E8 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 END)) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (UPPER(CASE 0Xffffffffc3c8f38e  WHEN rt0.c0 THEN rt0.c2 WHEN 4.49189734E8 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 END)))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((UPPER(CASE 0xffffffffc3c8f38e  WHEN rt0.c0 THEN rt0.c2 WHEN 4.49189734E8 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 END)) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING vt0.c0 UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((vt0.c0) ISNULL);
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING vt0.c0 UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((vt0.c0) ISNULL);
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL * FROM vt0, rt0;
SELECT ALL * FROM vt0, rt0 WHERE ((CASE rt0.c2  WHEN vt0.c0 THEN rt0.c1 END IN ())) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE ((NOT ((CASE rt0.c2  WHEN vt0.c0 THEN rt0.c1 END IN ())))) UNION ALL SELECT * FROM vt0, rt0 WHERE ((((CASE rt0.c2  WHEN vt0.c0 THEN rt0.c1 END IN ())) ISNULL));
SELECT ALL * FROM vt0, rt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE (CAST(vt0.c1 AS NUMERIC)) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (CAST(vt0.c1 AS NUMERIC)))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE (((CAST(vt0.c1 AS NUMERIC)) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM vt0 INNER JOIN rt0 ON CASE CAST(vt0.c0 AS INTEGER)  WHEN (((rt0.c2, rt0.c1, rt0.c2))<=((rt0.c0, vt0.c1, rt0.c2))) THEN vt0.c0 END GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM vt0 INNER JOIN rt0 ON CASE CAST(vt0.c0 AS INTEGER)  WHEN (((rt0.c2, rt0.c1, rt0.c2))<=((rt0.c0, vt0.c1, rt0.c2))) THEN vt0.c0 END WHERE (((2.121484188E9) NOT NULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM vt0 INNER JOIN rt0 ON CASE CAST(vt0.c0 AS INTEGER)  WHEN (((rt0.c2, rt0.c1, rt0.c2))<=((rt0.c0, vt0.c1, rt0.c2))) THEN vt0.c0 END WHERE ((NOT (((2.121484188E9) NOT NULL)))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM vt0 INNER JOIN rt0 ON CASE CAST(vt0.c0 AS INTEGER)  WHEN (((rt0.c2, rt0.c1, rt0.c2))<=((rt0.c0, vt0.c1, rt0.c2))) THEN vt0.c0 END WHERE (((((2.121484188E9) NOT NULL)) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM vt0 INNER JOIN rt0 ON CASE CAST(vt0.c0 AS INTEGER)  WHEN (((rt0.c2, rt0.c1, rt0.c2))<=((rt0.c0, vt0.c1, rt0.c2))) THEN vt0.c0 END GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING x'' UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (x'')) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((x'') ISNULL);
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING x'' UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (x'')) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((x'') ISNULL);
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE ((+ (vt0.c0))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((+ (vt0.c0))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((+ (vt0.c0))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE ((~ (((((vt0.c1)AND(0.5452492287722203)))OR(vt0.c1))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT ((~ (((((vt0.c1)AND(0.5452492287722203)))OR(vt0.c1))))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((((~ (((((vt0.c1)AND(0.5452492287722203)))OR(vt0.c1))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT ALL vt0.c1, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c1, vt0.c0;
SELECT vt0.c1, rt0.c1, vt0.c0 FROM vt0, rt0 WHERE (((((((rt0.c2)OR(rt0.c2)))OR(NULL)))IS NOT(TRIM(rt0.c2)))) GROUP BY vt0.c1, rt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, rt0.c1, vt0.c0 FROM vt0, rt0 WHERE ((NOT (((((((rt0.c2)OR(rt0.c2)))OR(NULL)))IS NOT(TRIM(rt0.c2)))))) GROUP BY vt0.c1, rt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, rt0.c1, vt0.c0 FROM vt0, rt0 WHERE (((((((((rt0.c2)OR(rt0.c2)))OR(NULL)))IS NOT(TRIM(rt0.c2)))) ISNULL)) GROUP BY vt0.c1, rt0.c1, vt0.c0;
SELECT ALL vt0.c1, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c1, vt0.c0;
SELECT rt0.c0, rt0.c2, vt0.c1, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2, vt0.c1, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, vt0.c1, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2, vt0.c1, rt0.c1 HAVING vt0.c0 UNION ALL SELECT rt0.c0, rt0.c2, vt0.c1, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2, vt0.c1, rt0.c1 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL rt0.c0, rt0.c2, vt0.c1, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2, vt0.c1, rt0.c1 HAVING ((vt0.c0) ISNULL);
SELECT rt0.c0, rt0.c2, vt0.c1, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2, vt0.c1, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, vt0.c1, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2, vt0.c1, rt0.c1 HAVING vt0.c0 UNION ALL SELECT rt0.c0, rt0.c2, vt0.c1, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2, vt0.c1, rt0.c1 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL rt0.c0, rt0.c2, vt0.c1, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2, vt0.c1, rt0.c1 HAVING ((vt0.c0) ISNULL);
SELECT rt0.c0, rt0.c2, vt0.c1, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2, vt0.c1, rt0.c1;
SELECT ALL rt0.c1, vt0.c1 FROM rt0 NATURAL JOIN vt0;
SELECT ALL rt0.c1, vt0.c1 FROM rt0 NATURAL JOIN vt0 WHERE (((((rt0.c2)==(vt0.c1))) IS FALSE)) UNION ALL SELECT ALL rt0.c1, vt0.c1 FROM rt0 NATURAL JOIN vt0 WHERE ((NOT (((((rt0.c2)==(vt0.c1))) IS FALSE)))) UNION ALL SELECT ALL rt0.c1, vt0.c1 FROM rt0 NATURAL JOIN vt0 WHERE (((((((rt0.c2)==(vt0.c1))) IS FALSE)) ISNULL));
SELECT ALL rt0.c1, vt0.c1 FROM rt0 NATURAL JOIN vt0;
SELECT DISTINCT rt0.c0 FROM rt0, vt0;
SELECT DISTINCT rt0.c0 FROM rt0, vt0 WHERE (vt0.c1) UNION SELECT DISTINCT rt0.c0 FROM rt0, vt0 WHERE ((NOT (vt0.c1))) UNION SELECT DISTINCT rt0.c0 FROM rt0, vt0 WHERE (((vt0.c1) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0, vt0;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END IN (((vt0.c1)=(vt0.c1))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END IN (((vt0.c1)=(vt0.c1))))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END IN (((vt0.c1)=(vt0.c1))))) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0;
SELECT ALL rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0 HAVING CASE WHEN (+ ('>n㎅v')) THEN vt0.c0 END UNION ALL SELECT rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0 HAVING (NOT (CASE WHEN (+ ('>n㎅v')) THEN vt0.c0 END)) UNION ALL SELECT ALL rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0 HAVING ((CASE WHEN (+ ('>n㎅v')) THEN vt0.c0 END) ISNULL);
SELECT ALL rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0;
SELECT ALL rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0 HAVING CASE WHEN (+ ('>n㎅v')) THEN vt0.c0 END UNION ALL SELECT rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0 HAVING (NOT (CASE WHEN (+ ('>n㎅v')) THEN vt0.c0 END)) UNION ALL SELECT ALL rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0 HAVING ((CASE WHEN (+ ('>n㎅v')) THEN vt0.c0 END) ISNULL);
SELECT ALL rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0;
SELECT ALL rt0.c2, vt0.c1, rt0.c0, vt0.c0 FROM rt0, vt0;
SELECT rt0.c2, vt0.c1, rt0.c0, vt0.c0 FROM rt0, vt0 WHERE (0.09752936686584479) UNION ALL SELECT ALL rt0.c2, vt0.c1, rt0.c0, vt0.c0 FROM rt0, vt0 WHERE ((NOT (0.09752936686584479))) UNION ALL SELECT rt0.c2, vt0.c1, rt0.c0, vt0.c0 FROM rt0, vt0 WHERE (((0.09752936686584479) ISNULL));
SELECT ALL rt0.c2, vt0.c1, rt0.c0, vt0.c0 FROM rt0, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 NOT INDEXED WHERE (((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)/((vt0.c0 IN ())))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)/((vt0.c0 IN ())))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)/((vt0.c0 IN ())))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CAST(vt0.c1 AS INTEGER) COLLATE BINARY) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CAST(vt0.c1 AS INTEGER) COLLATE BINARY))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((CAST(vt0.c1 AS INTEGER) COLLATE BINARY) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c0, rt0.c2, vt0.c1, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2, vt0.c1, rt0.c1;
SELECT rt0.c0, rt0.c2, vt0.c1, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2, vt0.c1, rt0.c1 HAVING GROUP_CONCAT(COUNT(*)) UNION ALL SELECT rt0.c0, rt0.c2, vt0.c1, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2, vt0.c1, rt0.c1 HAVING (NOT (GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT rt0.c0, rt0.c2, vt0.c1, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2, vt0.c1, rt0.c1 HAVING ((GROUP_CONCAT(COUNT(*))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((((vt0.c0)%(vt0.c1)))))) UNION ALL SELECT * FROM vt0 NOT INDEXED WHERE ((NOT ((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((((vt0.c0)%(vt0.c1)))))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((((vt0.c0)%(vt0.c1)))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON rt0.c2;
SELECT DISTINCT rt0.c0, rt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON rt0.c2 WHERE ((rt0.c2 COLLATE RTRIM IN ())) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON rt0.c2 WHERE ((NOT ((rt0.c2 COLLATE RTRIM IN ())))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON rt0.c2 WHERE ((((rt0.c2 COLLATE RTRIM IN ())) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (CASE ((((((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c1))  WHEN ((0Xffffffffdfe66850) IS FALSE) THEN NULL WHEN rt0.c0 COLLATE BINARY THEN ((rt0.c0) BETWEEN (x'') AND (rt0.c2)) WHEN ((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)) THEN CASE WHEN 'xCF6L9o' THEN rt0.c1 END ELSE (0.44135984037920495 IN ()) END) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (CASE ((((((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c1))  WHEN ((0xffffffffdfe66850) IS FALSE) THEN NULL WHEN rt0.c0 COLLATE BINARY THEN ((rt0.c0) BETWEEN (x'') AND (rt0.c2)) WHEN ((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)) THEN CASE WHEN 'xCF6L9o' THEN rt0.c1 END ELSE (0.44135984037920495 IN ()) END))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((CASE ((((((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c1))  WHEN ((0xffffffffdfe66850) IS FALSE) THEN NULL WHEN rt0.c0 COLLATE BINARY THEN ((rt0.c0) BETWEEN (x'') AND (rt0.c2)) WHEN ((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)) THEN CASE WHEN 'xCF6L9o' THEN rt0.c1 END ELSE (0.44135984037920495 IN ()) END) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
