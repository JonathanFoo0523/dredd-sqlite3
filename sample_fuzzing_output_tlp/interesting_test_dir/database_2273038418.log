-- Time: 2024/06/12 11:34:27
-- Database: database18
-- Database version: 3.40.0
-- seed value: 2273038418
PRAGMA cache_size = 50000; -- 4ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16be'; -- 0ms;
CREATE TABLE t0 (c0 REAL , c1 INTEGER , c2 TEXT ); -- 1ms;
END TRANSACTION; -- 5ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0(c1, c0, c2) VALUES ('', NULL, ''); -- 1ms;
INSERT OR IGNORE INTO t0(c0) VALUES (NULL); -- 1ms;
UPDATE OR IGNORE t0 SET c2=NULL WHERE CASE ((t0.c2)>=('M{L3'))  WHEN (+ (t0.c1)) THEN t0.c2 ELSE x'22e1' END; -- 1ms;
INSERT OR IGNORE INTO t0(c0) VALUES (-1778782102); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('-1778782102', NULL, 'M{L3'); -- 0ms;
ANALYZE; -- 0ms;
INSERT OR REPLACE INTO t0(c0, c1) VALUES ('', 'KlhhwR*H&'); -- 1ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0X2d86d57c); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES (NULL); -- 0ms;
REINDEX  t0; -- 0ms;
UPDATE OR FAIL t0 SET (c1, c0, c2)=(-1.778782102E9, 0.8738964490323626, x'7137') WHERE (~ (((t0.c2)>=('1977046783')))); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
CREATE TRIGGER IF NOT EXISTS tr2 BEFORE INSERT ON t0 BEGIN SELECT RAISE(IGNORE);END; -- 0ms;
UPDATE OR IGNORE t0 SET c1=0.11767816751436633; -- 0ms;
END; -- 0ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(0Xfffffffffd90d4fe); -- 1ms;
UPDATE OR IGNORE t0 SET (c1)=(0.7174010024901952); -- 1ms;
INSERT OR IGNORE INTO t0(c1) VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO t0(c2, c0) VALUES (0.393671011964149, '-920430081'), ('M{L3', 0.15952597722303785), ('Qe', '-912578666'); -- 0ms;
ANALYZE; -- 1ms;
UPDATE OR REPLACE t0 SET c0=7.63811196E8 WHERE ((((t0.c0) NOTNULL)) NOTNULL); -- 0ms;
INSERT OR FAIL INTO t0(c0, c1) VALUES (NULL, '1526422112'), (NULL, '-912578666'), (0X6744dd8d, '?jh\8[M쓵V'); -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
UPDATE OR FAIL t0 SET (c1, c1)=(NULL, x'') WHERE ((0.48853105701821853) BETWEEN (((((((((t0.c1)AND(NULL)))AND(NULL)))OR(t0.c0)))OR(NULL))) AND (((t0.c2) IS TRUE))); -- 0ms;
UPDATE OR FAIL t0 SET c0=-140423585; -- 1ms;
REINDEX  t0; -- 0ms;
UPDATE OR IGNORE t0 SET c0=x'44d9', c2=0.7174010024901952 WHERE CAST((t0.c1 IN ()) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL, NULL, 1.526422112E9); -- 0ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE t0 SET (c1, c1)=('', '') WHERE MIN((t0.c2 IN (t0.c1)), RTRIM(t0.c1)); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
INSERT OR REPLACE INTO t0(c1) VALUES ('-\! F챑!pR'), ('	{L3'), (x''); -- 0ms;
END; -- 0ms;
INSERT OR IGNORE INTO t0(c2) VALUES (NULL); -- 1ms;
CREATE TEMP VIEW  IF NOT EXISTS v0(c0) AS SELECT DISTINCT ((CAST(t0.c1 AS INTEGER))LIKE(TYPEOF(t0.c2))) FROM t0 WHERE (((((((((((NULL)*(x'322c')))AND((~ (0x3d15793)))))AND((1.526422112E9 IN ()))))AND(NULL)))OR(CASE WHEN 'ᴞC' THEN '-1754774315' WHEN -1754774315 THEN 'LZT0oGuZ' WHEN 'xp' THEN '1752738273' ELSE x'' END))); -- 1ms;
BEGIN DEFERRED TRANSACTION; -- 1ms;
UPDATE OR IGNORE t0 SET c2=0X75d756ff, c1=0x5afb5a60; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
END; -- 0ms;
INSERT OR ABORT INTO t0(c1) VALUES (0.7167995658764458), ('u\n D'), (x'd135'), (x'26fa'), ('Ez'); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
UPDATE t0 SET c1=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET c1=0x3d15793 WHERE CASE ((t0.c1) BETWEEN (t0.c1) AND (t0.c0))  WHEN CASE x''  WHEN t0.c0 THEN NULL ELSE t0.c2 END THEN t0.c2 WHEN ((t0.c1)>(t0.c2)) THEN (((t0.c1, t0.c2, 0.3452175914879161))=((t0.c2, 0.11767816751436633, t0.c1))) WHEN CAST(t0.c2 AS REAL) THEN (~ (t0.c2)) END; -- 0ms;
INSERT OR IGNORE INTO t0(c2) VALUES (NULL); -- 0ms;
INSERT OR ABORT INTO t0(c1) VALUES (x'436f'); -- 1ms;
END; -- 0ms;
REINDEX; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE t0 SET (c2, c2, c1)=(0Xffffffffd28ccc51, 1.977046783E9, '-78355239') WHERE ((((((t0.c1)*(t0.c0)))AND(((t0.c1)AND(t0.c0)))))OR(t0.c1)); -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c1, c2)=('dY', 0.18214699841729443, x'') WHERE (((t0.c2)) NOT BETWEEN (((t0.c1 IN ()))) AND (((~ (t0.c0))))); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0(c0, c2) VALUES ('d-}^sYdQ', 0x5784a76f), (1.752738273E9, NULL), ('', 0.15952597722303785); -- 0ms;
UPDATE OR IGNORE t0 SET c2=NULL; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
UPDATE t0 SET (c1)=(0.9909498366172788) WHERE CAST(t0.c1 COLLATE RTRIM AS TEXT); -- 0ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE t0 SET (c1, c0)=('-920430081', NULL); -- 0ms;
UPDATE OR IGNORE t0 SET c1=0.30992179784163676, c2='-228846149'; -- 1ms;
UPDATE OR IGNORE t0 SET (c2, c2, c2)=(x'', x'9f33', '-169932717') WHERE ''; -- 0ms;
INSERT OR IGNORE INTO t0(c1) VALUES ('g	>1'); -- 0ms;
UPDATE t0 SET (c1)=('-305879217'); -- 0ms;
UPDATE OR IGNORE t0 SET c2=0.1897700880739427 WHERE (((t0.c0))<>((CAST(t0.c0 AS INTEGER)))); -- 1ms;
ROLLBACK TRANSACTION; -- 2ms;
INSERT OR ROLLBACK INTO t0 VALUES (NULL, -1287731979, x''); -- 0ms;
UPDATE OR FAIL t0 SET (c1)=('.v1)<'); -- 4ms;
INSERT OR IGNORE INTO t0(c0, c2) VALUES (763811196, ''), (0.40568897064573994, 0x6dc4a7b3), (763811196, NULL), ('1♡', 'n'), ('64051091', NULL); -- 0ms;
END; -- 0ms;
INSERT OR REPLACE INTO t0(c1, c0) VALUES (0X4182e060, '-762524591'); -- 0ms;
PRAGMA temp.journal_mode; -- 0ms;
COMMIT; -- 1ms;
VACUUM temp; -- 0ms;
INSERT OR ROLLBACK INTO t0(c1) VALUES ('?{'); -- 2ms;
UPDATE OR IGNORE t0 SET c1='1956593637'; -- 4ms;
ANALYZE; -- 0ms;
REINDEX NOCASE; -- 0ms;
INSERT OR ABORT INTO t0(c0, c2) VALUES ('', NULL), (0xffffffffde3a9f46, x'63a0'), ('1526422112', 0.3287556232480844); -- 0ms;
CREATE TABLE t1 (c0 INTEGER ); -- 1ms;
UPDATE t0 SET c1=NULL; -- 0ms;
UPDATE t0 SET (c2, c2, c0)=(-3.05879217E8, 0Xffffffffcbad0f75, 'dY') WHERE json_array_length(t0.c1, (((t0.c1))<((t0.c0)))); -- 0ms;
ANALYZE temp; -- 0ms;
UPDATE t0 SET c2='+bcdq', c2='396572020'; -- 0ms;
UPDATE OR IGNORE t0 SET c1=x'5955' WHERE (- ((NOT (t0.c2)))); -- 0ms;
INSERT OR IGNORE INTO t1 VALUES (x''); -- 1ms;
UPDATE OR IGNORE t0 SET (c2)=(0.40568897064573994) WHERE ((t0.c2) NOT BETWEEN ((((('7!-핼8y')AND(t0.c0)))AND(t0.c2))) AND (((t0.c1)+(t0.c0)))); -- 0ms;
PRAGMA temp.threads = -4321993741434256696; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR FAIL INTO t0 VALUES ('B,', 0.653269476662747, NULL), ('ᴞC', x'', '335642502'), (1.752738273E9, 1108249871, 0.9298906522546176), (0.47882682422353473, x'', 'pៈ'), ('-78355239', 0.46761182094170506, '-566583482'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
REINDEX RTRIM; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
SELECT ALL t1.c0 FROM t1;
SELECT ALL t1.c0 FROM t1 WHERE (NULL) UNION ALL SELECT t1.c0 FROM t1 WHERE ((NOT (NULL))) UNION ALL SELECT ALL t1.c0 FROM t1 WHERE (((NULL) ISNULL));
SELECT ALL t1.c0 FROM t1;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((((t0.c2)) NOT BETWEEN ((NULLIF(t0.c2, t0.c2))) AND ((((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c0)))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((((t0.c2)) NOT BETWEEN ((NULLIF(t0.c2, t0.c2))) AND ((((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c0)))))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((((t0.c2)) NOT BETWEEN ((NULLIF(t0.c2, t0.c2))) AND ((((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c0)))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE ((((((((t1.c0))>((t1.c0))))OR(TYPEOF(DISTINCT t1.c0))))AND((t1.c0 IN (0.7013470915223292))))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT ((((((((t1.c0))>((t1.c0))))OR(TYPEOF(DISTINCT t1.c0))))AND((t1.c0 IN (0.7013470915223292))))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((((((((((t1.c0))>((t1.c0))))OR(TYPEOF(DISTINCT t1.c0))))AND((t1.c0 IN (0.7013470915223292))))) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING MAX(((((((((((((MIN(COUNT(MIN(GROUP_CONCAT(COUNT(*))))))AND(COUNT(t1.c0))))OR(t1.c0)))AND(SUM(COUNT(*)))))AND(t1.c0)))AND(AVG(TOTAL(t1.c0)))))AND(t1.c0))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (MAX(((((((((((((MIN(COUNT(MIN(GROUP_CONCAT(COUNT(*))))))AND(COUNT(t1.c0))))OR(t1.c0)))AND(SUM(COUNT(*)))))AND(t1.c0)))AND(AVG(TOTAL(t1.c0)))))AND(t1.c0))))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((MAX(((((((((((((MIN(COUNT(MIN(GROUP_CONCAT(COUNT(*))))))AND(COUNT(t1.c0))))OR(t1.c0)))AND(SUM(COUNT(*)))))AND(t1.c0)))AND(AVG(TOTAL(t1.c0)))))AND(t1.c0)))) ISNULL);
SELECT v0.c0, t1.c0 FROM t1, v0;
SELECT ALL v0.c0, t1.c0 FROM t1, v0 WHERE (IFNULL(((t1.c0)<=(t1.c0)), (- (v0.c0)))) UNION ALL SELECT ALL v0.c0, t1.c0 FROM t1, v0 WHERE ((NOT (IFNULL(((t1.c0)<=(t1.c0)), (- (v0.c0)))))) UNION ALL SELECT ALL v0.c0, t1.c0 FROM t1, v0 WHERE (((IFNULL(((t1.c0)<=(t1.c0)), (- (v0.c0)))) ISNULL));
SELECT v0.c0, t1.c0 FROM t1, v0;
SELECT DISTINCT * FROM t0, t1;
SELECT DISTINCT * FROM t0, t1 WHERE (((((CAST(x'' AS TEXT))AND(json_insert(0.7817435171780502, t1.c0, t0.c0))))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c2))))) UNION SELECT DISTINCT * FROM t0, t1 WHERE ((NOT (((((CAST(x'' AS TEXT))AND(json_insert(0.7817435171780502, t1.c0, t0.c0))))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c2))))))) UNION SELECT DISTINCT * FROM t0, t1 WHERE (((((((CAST(x'' AS TEXT))AND(json_insert(0.7817435171780502, t1.c0, t0.c0))))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c2))))) ISNULL));
SELECT t1.c0 FROM v0 RIGHT OUTER JOIN t1 ON ((((t1.c0, v0.c0, t1.c0)) NOT BETWEEN ((v0.c0, t1.c0, v0.c0)) AND ((t1.c0, t1.c0, v0.c0))) IN ()) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM v0 RIGHT OUTER JOIN t1 ON ((((t1.c0, v0.c0, t1.c0)) NOT BETWEEN ((v0.c0, t1.c0, v0.c0)) AND ((t1.c0, t1.c0, v0.c0))) IN ()) WHERE (NULLIF(CASE WHEN v0.c0 THEN 'n' WHEN t1.c0 THEN t1.c0 WHEN '1400887872' THEN v0.c0 ELSE v0.c0 END, (v0.c0 IN ('89069851')))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM v0 RIGHT OUTER JOIN t1 ON ((((t1.c0, v0.c0, t1.c0)) NOT BETWEEN ((v0.c0, t1.c0, v0.c0)) AND ((t1.c0, t1.c0, v0.c0))) IN ()) WHERE ((NOT (NULLIF(CASE WHEN v0.c0 THEN 'n' WHEN t1.c0 THEN t1.c0 WHEN '1400887872' THEN v0.c0 ELSE v0.c0 END, (v0.c0 IN ('89069851')))))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM v0 RIGHT OUTER JOIN t1 ON ((((t1.c0, v0.c0, t1.c0)) NOT BETWEEN ((v0.c0, t1.c0, v0.c0)) AND ((t1.c0, t1.c0, v0.c0))) IN ()) WHERE (((NULLIF(CASE WHEN v0.c0 THEN 'n' WHEN t1.c0 THEN t1.c0 WHEN '1400887872' THEN v0.c0 ELSE v0.c0 END, (v0.c0 IN ('89069851')))) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM v0 RIGHT OUTER JOIN t1 ON ((((t1.c0, v0.c0, t1.c0)) NOT BETWEEN ((v0.c0, t1.c0, v0.c0)) AND ((t1.c0, t1.c0, v0.c0))) IN ()) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t0, v0, t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t0, v0, t1 GROUP BY t1.c0 HAVING (GROUP_CONCAT(t0.c1) IN ((t0.c2 IN ()))) UNION ALL SELECT ALL t1.c0 FROM t0, v0, t1 GROUP BY t1.c0 HAVING (NOT ((GROUP_CONCAT(t0.c1) IN ((t0.c2 IN ()))))) UNION ALL SELECT ALL t1.c0 FROM t0, v0, t1 GROUP BY t1.c0 HAVING (((GROUP_CONCAT(t0.c1) IN ((t0.c2 IN ())))) ISNULL);
SELECT ALL t1.c0 FROM t0, v0, t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t0, v0, t1 GROUP BY t1.c0 HAVING (GROUP_CONCAT(t0.c1) IN ((t0.c2 IN ()))) UNION ALL SELECT ALL t1.c0 FROM t0, v0, t1 GROUP BY t1.c0 HAVING (NOT ((GROUP_CONCAT(t0.c1) IN ((t0.c2 IN ()))))) UNION ALL SELECT ALL t1.c0 FROM t0, v0, t1 GROUP BY t1.c0 HAVING (((GROUP_CONCAT(t0.c1) IN ((t0.c2 IN ())))) ISNULL);
SELECT ALL t1.c0 FROM t0, v0, t1 GROUP BY t1.c0;
SELECT * FROM t1, t0, v0;
SELECT * FROM t1, t0, v0 WHERE (((t0.c1) BETWEEN (t0.c0) AND (t0.c2)) COLLATE RTRIM) UNION ALL SELECT ALL * FROM t1, t0, v0 WHERE ((NOT (((t0.c1) BETWEEN (t0.c0) AND (t0.c2)) COLLATE RTRIM))) UNION ALL SELECT * FROM t1, t0, v0 WHERE (((((t0.c1) BETWEEN (t0.c0) AND (t0.c2)) COLLATE RTRIM) ISNULL));
SELECT * FROM t1, t0, v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((((v0.c0 COLLATE NOCASE)OR(v0.c0 COLLATE RTRIM)))OR((v0.c0 IN (v0.c0))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((((v0.c0 COLLATE NOCASE)OR(v0.c0 COLLATE RTRIM)))OR((v0.c0 IN (v0.c0))))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((v0.c0 COLLATE NOCASE)OR(v0.c0 COLLATE RTRIM)))OR((v0.c0 IN (v0.c0))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE (CAST(((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) AS REAL)) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT (CAST(((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) AS REAL)))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE (((CAST(((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) AS REAL)) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t0.c1 FROM t1, t0, v0 GROUP BY t0.c1;
SELECT t0.c1 FROM t1, t0, v0 GROUP BY t0.c1 HAVING COUNT(AVG(MAX(t0.c2))) UNION ALL SELECT ALL t0.c1 FROM t1, t0, v0 GROUP BY t0.c1 HAVING (NOT (COUNT(AVG(MAX(t0.c2))))) UNION ALL SELECT t0.c1 FROM t1, t0, v0 GROUP BY t0.c1 HAVING ((COUNT(AVG(MAX(t0.c2)))) ISNULL);
SELECT ALL * FROM t1 FULL OUTER JOIN v0 ON ((CAST(t1.c0 AS BLOB)) NOT BETWEEN (CAST(t1.c0 AS NUMERIC)) AND (((v0.c0) BETWEEN (v0.c0) AND (NULL))));
SELECT * FROM t1 FULL OUTER JOIN v0 ON ((CAST(t1.c0 AS BLOB)) NOT BETWEEN (CAST(t1.c0 AS NUMERIC)) AND (((v0.c0) BETWEEN (v0.c0) AND (NULL)))) WHERE (((((v0.c0)OR(v0.c0))) NOT BETWEEN ((- (t1.c0))) AND ((('jB') NOT BETWEEN (v0.c0) AND (t1.c0))))) UNION ALL SELECT * FROM t1 FULL OUTER JOIN v0 ON ((CAST(t1.c0 AS BLOB)) NOT BETWEEN (CAST(t1.c0 AS NUMERIC)) AND (((v0.c0) BETWEEN (v0.c0) AND (NULL)))) WHERE ((NOT (((((v0.c0)OR(v0.c0))) NOT BETWEEN ((- (t1.c0))) AND ((('jB') NOT BETWEEN (v0.c0) AND (t1.c0))))))) UNION ALL SELECT * FROM t1 FULL OUTER JOIN v0 ON ((CAST(t1.c0 AS BLOB)) NOT BETWEEN (CAST(t1.c0 AS NUMERIC)) AND (((v0.c0) BETWEEN (v0.c0) AND (NULL)))) WHERE (((((((v0.c0)OR(v0.c0))) NOT BETWEEN ((- (t1.c0))) AND ((('jB') NOT BETWEEN (v0.c0) AND (t1.c0))))) ISNULL));
SELECT ALL * FROM t1 FULL OUTER JOIN v0 ON ((CAST(t1.c0 AS BLOB)) NOT BETWEEN (CAST(t1.c0 AS NUMERIC)) AND (((v0.c0) BETWEEN (v0.c0) AND (NULL))));
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (t1.c0) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (t1.c0))) UNION SELECT DISTINCT * FROM t1 WHERE (((t1.c0) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT t0.c2 FROM v0, t0 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM v0, t0 WHERE (((((v0.c0)<=(-1.40423585E8))) NOT BETWEEN (((v0.c0)IS(t0.c2))) AND (((t0.c0) IS FALSE)))) GROUP BY t0.c2 UNION SELECT t0.c2 FROM v0, t0 WHERE ((NOT (((((v0.c0)<=(-1.40423585E8))) NOT BETWEEN (((v0.c0)IS(t0.c2))) AND (((t0.c0) IS FALSE)))))) GROUP BY t0.c2 UNION SELECT t0.c2 FROM v0, t0 WHERE (((((((v0.c0)<=(-1.40423585E8))) NOT BETWEEN (((v0.c0)IS(t0.c2))) AND (((t0.c0) IS FALSE)))) ISNULL)) GROUP BY t0.c2;
SELECT t0.c2 FROM v0, t0 GROUP BY t0.c2;
SELECT t0.c1, v0.c0, t0.c0, t1.c0, t0.c2 FROM t0 FULL OUTER JOIN v0 ON CAST(t0.c0 AS BLOB) RIGHT OUTER JOIN t1 ON CAST((((t0.c2))<((x''))) AS BLOB) GROUP BY t0.c1, v0.c0, t0.c0, t1.c0, t0.c2;
SELECT t0.c1, v0.c0, t0.c0, t1.c0, t0.c2 FROM t0 FULL OUTER JOIN v0 ON CAST(t0.c0 AS BLOB) RIGHT OUTER JOIN t1 ON CAST((((t0.c2))<((x''))) AS BLOB) GROUP BY t0.c1, v0.c0, t0.c0, t1.c0, t0.c2 HAVING (((((v0.c0, 0.33966039726069974, t1.c0))<>((t0.c2, AVG('0.7167995658764458'), SUM(COUNT(*))))))|(((t0.c1)*(TOTAL(COUNT(t0.c1)))))) UNION ALL SELECT ALL t0.c1, v0.c0, t0.c0, t1.c0, t0.c2 FROM t0 FULL OUTER JOIN v0 ON CAST(t0.c0 AS BLOB) RIGHT OUTER JOIN t1 ON CAST((((t0.c2))<((x''))) AS BLOB) GROUP BY t0.c1, v0.c0, t0.c0, t1.c0, t0.c2 HAVING (NOT ((((((v0.c0, 0.33966039726069974, t1.c0))!=((t0.c2, AVG('0.7167995658764458'), SUM(COUNT(*))))))|(((t0.c1)*(TOTAL(COUNT(t0.c1)))))))) UNION ALL SELECT t0.c1, v0.c0, t0.c0, t1.c0, t0.c2 FROM t0 FULL OUTER JOIN v0 ON CAST(t0.c0 AS BLOB) RIGHT OUTER JOIN t1 ON CAST((((t0.c2))<((x''))) AS BLOB) GROUP BY t0.c1, v0.c0, t0.c0, t1.c0, t0.c2 HAVING (((((((v0.c0, 0.33966039726069974, t1.c0))<>((t0.c2, AVG('0.7167995658764458'), SUM(COUNT(*))))))|(((t0.c1)*(TOTAL(COUNT(t0.c1))))))) ISNULL);
SELECT * FROM t1;
SELECT * FROM t1 WHERE (CAST((+ (t1.c0)) AS REAL)) UNION ALL SELECT ALL * FROM t1 WHERE ((NOT (CAST((+ (t1.c0)) AS REAL)))) UNION ALL SELECT ALL * FROM t1 WHERE (((CAST((+ (t1.c0)) AS REAL)) ISNULL));
SELECT * FROM t1;
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE (LIKELIHOOD(DISTINCT ((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))AND(t1.c0)))OR(t1.c0)), 0.04290017028844573)) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT (LIKELIHOOD(DISTINCT ((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))AND(t1.c0)))OR(t1.c0)), 0.04290017028844573)))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE (((LIKELIHOOD(DISTINCT ((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))AND(t1.c0)))OR(t1.c0)), 0.04290017028844573)) ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT ALL v0.c0, t0.c2, t0.c0 FROM t0 FULL OUTER JOIN v0 ON t0.c2 GROUP BY v0.c0, t0.c2, t0.c0;
SELECT v0.c0, t0.c2, t0.c0 FROM t0 FULL OUTER JOIN v0 ON t0.c2 WHERE (((CASE t0.c0  WHEN NULL THEN t0.c1 END) IS FALSE)) GROUP BY v0.c0, t0.c2, t0.c0 UNION SELECT v0.c0, t0.c2, t0.c0 FROM t0 FULL OUTER JOIN v0 ON t0.c2 WHERE ((NOT (((CASE t0.c0  WHEN NULL THEN t0.c1 END) IS FALSE)))) GROUP BY v0.c0, t0.c2, t0.c0 UNION SELECT v0.c0, t0.c2, t0.c0 FROM t0 FULL OUTER JOIN v0 ON t0.c2 WHERE (((((CASE t0.c0  WHEN NULL THEN t0.c1 END) IS FALSE)) ISNULL)) GROUP BY v0.c0, t0.c2, t0.c0;
SELECT ALL v0.c0, t0.c2, t0.c0 FROM t0 FULL OUTER JOIN v0 ON t0.c2 GROUP BY v0.c0, t0.c2, t0.c0;
SELECT ALL t0.c0, t0.c2, t0.c1, v0.c0 FROM t0, v0 GROUP BY t0.c0, t0.c2, t0.c1, v0.c0;
SELECT ALL t0.c0, t0.c2, t0.c1, v0.c0 FROM t0, v0 GROUP BY t0.c0, t0.c2, t0.c1, v0.c0 HAVING COUNT(AVG(MAX(SUM(COUNT(*))))) UNION ALL SELECT t0.c0, t0.c2, t0.c1, v0.c0 FROM t0, v0 GROUP BY t0.c0, t0.c2, t0.c1, v0.c0 HAVING (NOT (COUNT(AVG(MAX(SUM(COUNT(*))))))) UNION ALL SELECT t0.c0, t0.c2, t0.c1, v0.c0 FROM t0, v0 GROUP BY t0.c0, t0.c2, t0.c1, v0.c0 HAVING ((COUNT(AVG(MAX(SUM(COUNT(*)))))) ISNULL);
SELECT ALL t0.c1, v0.c0 FROM v0 FULL OUTER JOIN t0 ON v0.c0;
SELECT t0.c1, v0.c0 FROM v0 FULL OUTER JOIN t0 ON v0.c0 WHERE ((LIKELIHOOD(DISTINCT t0.c2, 0.7684809373639633) IN ())) UNION ALL SELECT t0.c1, v0.c0 FROM v0 FULL OUTER JOIN t0 ON v0.c0 WHERE ((NOT ((LIKELIHOOD(DISTINCT t0.c2, 0.7684809373639633) IN ())))) UNION ALL SELECT t0.c1, v0.c0 FROM v0 FULL OUTER JOIN t0 ON v0.c0 WHERE ((((LIKELIHOOD(DISTINCT t0.c2, 0.7684809373639633) IN ())) ISNULL));
SELECT ALL t0.c1, v0.c0 FROM v0 FULL OUTER JOIN t0 ON v0.c0;
SELECT DISTINCT * FROM t1, v0, t0;
SELECT DISTINCT * FROM t1, v0, t0 WHERE ((~ ((~ (t0.c2))))) UNION SELECT DISTINCT * FROM t1, v0, t0 WHERE ((NOT ((~ ((~ (t0.c2))))))) UNION SELECT DISTINCT * FROM t1, v0, t0 WHERE ((((~ ((~ (t0.c2))))) ISNULL));
SELECT DISTINCT * FROM t1, v0, t0;
SELECT t0.c1 FROM v0 CROSS JOIN t1 ON TIME(((t1.c0)LIKE(t0.c2)), t0.c1 COLLATE NOCASE, ((t1.c0)*(t0.c0))) INNER JOIN t0 ON (('1662099584')<(t1.c0 COLLATE RTRIM)) GROUP BY t0.c1;
SELECT t0.c1 FROM v0 CROSS JOIN t1 ON TIME(((t1.c0)LIKE(t0.c2)), t0.c1 COLLATE NOCASE, ((t1.c0)*(t0.c0))) INNER JOIN t0 ON (('1662099584')<(t1.c0 COLLATE RTRIM)) WHERE (CASE 'd-}^sydq'  WHEN CASE t1.c0  WHEN v0.c0 THEN NULL WHEN v0.c0 THEN t0.c2 WHEN t0.c2 THEN v0.c0 ELSE t0.c0 END THEN (NOT (t0.c2)) WHEN t0.c2 COLLATE NOCASE THEN ((t0.c2)||(t0.c0)) WHEN TRIM(DISTINCT t0.c0) THEN t1.c0 ELSE (- (t0.c2)) END) GROUP BY t0.c1 UNION SELECT ALL t0.c1 FROM v0 CROSS JOIN t1 ON TIME(((t1.c0)LIKE(t0.c2)), t0.c1 COLLATE NOCASE, ((t1.c0)*(t0.c0))) INNER JOIN t0 ON (('1662099584')<(t1.c0 COLLATE RTRIM)) WHERE ((NOT (CASE 'd-}^sydq'  WHEN CASE t1.c0  WHEN v0.c0 THEN NULL WHEN v0.c0 THEN t0.c2 WHEN t0.c2 THEN v0.c0 ELSE t0.c0 END THEN (NOT (t0.c2)) WHEN t0.c2 COLLATE NOCASE THEN ((t0.c2)||(t0.c0)) WHEN TRIM(DISTINCT t0.c0) THEN t1.c0 ELSE (- (t0.c2)) END))) GROUP BY t0.c1 UNION SELECT ALL t0.c1 FROM v0 CROSS JOIN t1 ON TIME(((t1.c0)LIKE(t0.c2)), t0.c1 COLLATE NOCASE, ((t1.c0)*(t0.c0))) INNER JOIN t0 ON (('1662099584')<(t1.c0 COLLATE RTRIM)) WHERE (((CASE 'd-}^sydq'  WHEN CASE t1.c0  WHEN v0.c0 THEN NULL WHEN v0.c0 THEN t0.c2 WHEN t0.c2 THEN v0.c0 ELSE t0.c0 END THEN (NOT (t0.c2)) WHEN t0.c2 COLLATE NOCASE THEN ((t0.c2)||(t0.c0)) WHEN TRIM(DISTINCT t0.c0) THEN t1.c0 ELSE (- (t0.c2)) END) ISNULL)) GROUP BY t0.c1;
SELECT t0.c1 FROM v0 CROSS JOIN t1 ON TIME(((t1.c0)LIKE(t0.c2)), t0.c1 COLLATE NOCASE, ((t1.c0)*(t0.c0))) INNER JOIN t0 ON (('1662099584')<(t1.c0 COLLATE RTRIM)) GROUP BY t0.c1;
SELECT ALL t0.c2, t0.c1, t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c2, t0.c1, t0.c0, t1.c0;
SELECT ALL t0.c2, t0.c1, t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c2, t0.c1, t0.c0, t1.c0 HAVING (((GROUP_CONCAT(TOTAL(t1.c0)))) BETWEEN ((((t1.c0) BETWEEN (t0.c1) AND (t0.c2)))) AND ((MAX(SUM(COUNT(SUM(TOTAL(AVG(COUNT(TOTAL(COUNT(*)))))))))))) UNION ALL SELECT t0.c2, t0.c1, t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c2, t0.c1, t0.c0, t1.c0 HAVING (NOT ((((GROUP_CONCAT(TOTAL(t1.c0)))) BETWEEN ((((t1.c0) BETWEEN (t0.c1) AND (t0.c2)))) AND ((MAX(SUM(COUNT(SUM(TOTAL(AVG(COUNT(TOTAL(COUNT(*)))))))))))))) UNION ALL SELECT t0.c2, t0.c1, t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c2, t0.c1, t0.c0, t1.c0 HAVING (((((GROUP_CONCAT(TOTAL(t1.c0)))) BETWEEN ((((t1.c0) BETWEEN (t0.c1) AND (t0.c2)))) AND ((MAX(SUM(COUNT(SUM(TOTAL(AVG(COUNT(TOTAL(COUNT(*))))))))))))) ISNULL);
SELECT ALL t1.c0 FROM t1;
SELECT ALL t1.c0 FROM t1 WHERE (IFNULL(((t1.c0)>(t1.c0)), ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))) UNION ALL SELECT ALL t1.c0 FROM t1 WHERE ((NOT (IFNULL(((t1.c0)>(t1.c0)), ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))))) UNION ALL SELECT ALL t1.c0 FROM t1 WHERE (((IFNULL(((t1.c0)>(t1.c0)), ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))) ISNULL));
SELECT ALL t1.c0 FROM t1;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((((v0.c0)OR(v0.c0)))OR(v0.c0)) COLLATE BINARY) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((((v0.c0)OR(v0.c0)))OR(v0.c0)) COLLATE BINARY))) UNION SELECT DISTINCT v0.c0 FROM v0 NOT INDEXED WHERE (((((((v0.c0)OR(v0.c0)))OR(v0.c0)) COLLATE BINARY) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT v0.c0, t0.c2, t0.c1, t1.c0 FROM t0, v0, t1 GROUP BY v0.c0, t0.c2, t0.c1, t1.c0;
SELECT ALL v0.c0, t0.c2, t0.c1, t1.c0 FROM t0, v0, t1 WHERE (v0.c0) GROUP BY v0.c0, t0.c2, t0.c1, t1.c0 UNION SELECT ALL v0.c0, t0.c2, t0.c1, t1.c0 FROM t0, v0, t1 WHERE ((NOT (v0.c0))) GROUP BY v0.c0, t0.c2, t0.c1, t1.c0 UNION SELECT ALL v0.c0, t0.c2, t0.c1, t1.c0 FROM t0, v0, t1 WHERE (((v0.c0) ISNULL)) GROUP BY v0.c0, t0.c2, t0.c1, t1.c0;
SELECT v0.c0, t0.c2, t0.c1, t1.c0 FROM t0, v0, t1 GROUP BY v0.c0, t0.c2, t0.c1, t1.c0;
SELECT t0.c1, t1.c0, t0.c2 FROM t0, t1 GROUP BY t0.c1, t1.c0, t0.c2;
SELECT ALL t0.c1, t1.c0, t0.c2 FROM t0, t1 GROUP BY t0.c1, t1.c0, t0.c2 HAVING (+ (((t0.c2) ISNULL))) UNION ALL SELECT ALL t0.c1, t1.c0, t0.c2 FROM t0, t1 GROUP BY t0.c1, t1.c0, t0.c2 HAVING (NOT ((+ (((t0.c2) ISNULL))))) UNION ALL SELECT t0.c1, t1.c0, t0.c2 FROM t0, t1 GROUP BY t0.c1, t1.c0, t0.c2 HAVING (((+ (((t0.c2) ISNULL)))) ISNULL);
SELECT t0.c1, t1.c0, t0.c2 FROM t0, t1 GROUP BY t0.c1, t1.c0, t0.c2;
SELECT ALL t0.c1, t1.c0, t0.c2 FROM t0, t1 GROUP BY t0.c1, t1.c0, t0.c2 HAVING (+ (((t0.c2) ISNULL))) UNION ALL SELECT ALL t0.c1, t1.c0, t0.c2 FROM t0, t1 GROUP BY t0.c1, t1.c0, t0.c2 HAVING (NOT ((+ (((t0.c2) ISNULL))))) UNION ALL SELECT t0.c1, t1.c0, t0.c2 FROM t0, t1 GROUP BY t0.c1, t1.c0, t0.c2 HAVING (((+ (((t0.c2) ISNULL)))) ISNULL);
SELECT t0.c1, t1.c0, t0.c2 FROM t0, t1 GROUP BY t0.c1, t1.c0, t0.c2;
SELECT MIN(v0.c0) FROM t0, v0, t1 ORDER BY (((v0.c0)<(t0.c1)) IN ((((t0.c1, t0.c2, 'Hi'))=((t1.c0, t0.c1, t1.c0))), ((NULL)>=(t0.c2))))  NULLS LAST;
SELECT * FROM t0 FULL OUTER JOIN t1 ON ((((((t1.c0)OR(t0.c0)))AND(t0.c1)))/(x''));
SELECT * FROM t0 FULL OUTER JOIN t1 ON ((((((t1.c0)OR(t0.c0)))AND(t0.c1)))/(x'')) WHERE (t0.c1) UNION ALL SELECT * FROM t0 FULL OUTER JOIN t1 ON ((((((t1.c0)OR(t0.c0)))AND(t0.c1)))/(x'')) WHERE ((NOT (t0.c1))) UNION ALL SELECT ALL * FROM t0 FULL OUTER JOIN t1 ON ((((((t1.c0)OR(t0.c0)))AND(t0.c1)))/(x'')) WHERE (((t0.c1) ISNULL));
SELECT * FROM t0 FULL OUTER JOIN t1 ON ((((((t1.c0)OR(t0.c0)))AND(t0.c1)))/(x''));
SELECT DISTINCT t0.c1, t0.c0 FROM t0;
SELECT DISTINCT t0.c1, t0.c0 FROM t0 WHERE ((((t0.c2 IN (t0.c1))) NOTNULL)) UNION SELECT DISTINCT t0.c1, t0.c0 FROM t0 WHERE ((NOT ((((t0.c2 IN (t0.c1))) NOTNULL)))) UNION SELECT DISTINCT t0.c1, t0.c0 FROM t0 WHERE ((((((t0.c2 IN (t0.c1))) NOTNULL)) ISNULL));
SELECT DISTINCT t0.c1, t0.c0 FROM t0;
SELECT ALL t0.c1, t1.c0, t0.c0, t0.c2 FROM t0, t1, v0 GROUP BY t0.c1, t1.c0, t0.c0, t0.c2;
SELECT ALL t0.c1, t1.c0, t0.c0, t0.c2 FROM t0, t1, v0 WHERE (((NULL)-(((((t1.c0)OR(0.6102370370869384)))OR(t0.c0))))) GROUP BY t0.c1, t1.c0, t0.c0, t0.c2 UNION SELECT ALL t0.c1, t1.c0, t0.c0, t0.c2 FROM t0, t1, v0 WHERE ((NOT (((NULL)-(((((t1.c0)OR(0.6102370370869384)))OR(t0.c0))))))) GROUP BY t0.c1, t1.c0, t0.c0, t0.c2 UNION SELECT t0.c1, t1.c0, t0.c0, t0.c2 FROM t0, t1, v0 WHERE (((((NULL)-(((((t1.c0)OR(0.6102370370869384)))OR(t0.c0))))) ISNULL)) GROUP BY t0.c1, t1.c0, t0.c0, t0.c2;
SELECT ALL t0.c1, t1.c0, t0.c0, t0.c2 FROM t0, t1, v0 GROUP BY t0.c1, t1.c0, t0.c0, t0.c2;
SELECT t0.c1, t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c1, t0.c0, t1.c0;
SELECT ALL t0.c1, t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c1, t0.c0, t1.c0 HAVING MIN(AVG(COUNT(*))) UNION ALL SELECT ALL t0.c1, t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c1, t0.c0, t1.c0 HAVING (NOT (MIN(AVG(COUNT(*))))) UNION ALL SELECT t0.c1, t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c1, t0.c0, t1.c0 HAVING ((MIN(AVG(COUNT(*)))) ISNULL);
SELECT * FROM t0 LEFT OUTER JOIN v0 ON t0.c1 CROSS JOIN t1 ON ((((t0.c2)AND('7!-핼8y'))) BETWEEN ((- (t0.c1))) AND ((t1.c0 IN (t0.c0))));
SELECT * FROM t0 LEFT OUTER JOIN v0 ON t0.c1 CROSS JOIN t1 ON ((((t0.c2)AND('7!-핼8y'))) BETWEEN ((- (t0.c1))) AND ((t1.c0 IN (t0.c0)))) WHERE (((((NULL)||(t0.c1))) NOT BETWEEN ((NOT (v0.c0))) AND (((((((((((((t0.c0)OR(t0.c1)))OR(t0.c1)))OR(t1.c0)))OR(t1.c0)))OR(t0.c2)))OR(t1.c0))))) UNION ALL SELECT ALL * FROM t0 LEFT OUTER JOIN v0 ON t0.c1 CROSS JOIN t1 ON ((((t0.c2)AND('7!-핼8y'))) BETWEEN ((- (t0.c1))) AND ((t1.c0 IN (t0.c0)))) WHERE ((NOT (((((NULL)||(t0.c1))) NOT BETWEEN ((NOT (v0.c0))) AND (((((((((((((t0.c0)OR(t0.c1)))OR(t0.c1)))OR(t1.c0)))OR(t1.c0)))OR(t0.c2)))OR(t1.c0))))))) UNION ALL SELECT * FROM t0 LEFT OUTER JOIN v0 ON t0.c1 CROSS JOIN t1 ON ((((t0.c2)AND('7!-핼8y'))) BETWEEN ((- (t0.c1))) AND ((t1.c0 IN (t0.c0)))) WHERE (((((((NULL)||(t0.c1))) NOT BETWEEN ((NOT (v0.c0))) AND (((((((((((((t0.c0)OR(t0.c1)))OR(t0.c1)))OR(t1.c0)))OR(t1.c0)))OR(t0.c2)))OR(t1.c0))))) ISNULL));
SELECT * FROM t0 LEFT OUTER JOIN v0 ON t0.c1 CROSS JOIN t1 ON ((((t0.c2)AND('7!-핼8y'))) BETWEEN ((- (t0.c1))) AND ((t1.c0 IN (t0.c0))));
SELECT DISTINCT * FROM v0, t0, t1;
SELECT DISTINCT * FROM v0, t0, t1 WHERE (t0.c2) UNION SELECT DISTINCT * FROM v0, t0, t1 WHERE ((NOT (t0.c2))) UNION SELECT DISTINCT * FROM v0, t0, t1 WHERE (((t0.c2) ISNULL));
SELECT DISTINCT * FROM v0, t0, t1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (((LIKE(t0.c1, t0.c2))>>(t0.c1 COLLATE NOCASE))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((LIKE(t0.c1, t0.c2))>>(t0.c1 COLLATE NOCASE))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((((LIKE(t0.c1, t0.c2))>>(t0.c1 COLLATE NOCASE))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t1.c0, t0.c2, t0.c0, v0.c0, t0.c1 FROM t0, v0 LEFT OUTER JOIN t1 ON ((CASE WHEN t0.c1 THEN t0.c0 END)<>((NOT (t0.c0)))) GROUP BY t1.c0, t0.c2, t0.c0, v0.c0, t0.c1;
SELECT ALL t1.c0, t0.c2, t0.c0, v0.c0, t0.c1 FROM t0, v0 LEFT OUTER JOIN t1 ON ((CASE WHEN t0.c1 THEN t0.c0 END)!=((NOT (t0.c0)))) GROUP BY t1.c0, t0.c2, t0.c0, v0.c0, t0.c1 HAVING SUM(HEX(v0.c0)) UNION ALL SELECT ALL t1.c0, t0.c2, t0.c0, v0.c0, t0.c1 FROM t0, v0 LEFT OUTER JOIN t1 ON ((CASE WHEN t0.c1 THEN t0.c0 END)<>((NOT (t0.c0)))) GROUP BY t1.c0, t0.c2, t0.c0, v0.c0, t0.c1 HAVING (NOT (SUM(HEX(v0.c0)))) UNION ALL SELECT ALL t1.c0, t0.c2, t0.c0, v0.c0, t0.c1 FROM t0, v0 LEFT OUTER JOIN t1 ON ((CASE WHEN t0.c1 THEN t0.c0 END)!=((NOT (t0.c0)))) GROUP BY t1.c0, t0.c2, t0.c0, v0.c0, t0.c1 HAVING ((SUM(HEX(v0.c0))) ISNULL);
SELECT t1.c0, t0.c2, t0.c0, v0.c0, t0.c1 FROM t0, v0 LEFT OUTER JOIN t1 ON ((CASE WHEN t0.c1 THEN t0.c0 END)<>((NOT (t0.c0)))) GROUP BY t1.c0, t0.c2, t0.c0, v0.c0, t0.c1;
SELECT ALL t1.c0, t0.c2, t0.c0, v0.c0, t0.c1 FROM t0, v0 LEFT OUTER JOIN t1 ON ((CASE WHEN t0.c1 THEN t0.c0 END)!=((NOT (t0.c0)))) GROUP BY t1.c0, t0.c2, t0.c0, v0.c0, t0.c1 HAVING SUM(HEX(v0.c0)) UNION ALL SELECT ALL t1.c0, t0.c2, t0.c0, v0.c0, t0.c1 FROM t0, v0 LEFT OUTER JOIN t1 ON ((CASE WHEN t0.c1 THEN t0.c0 END)<>((NOT (t0.c0)))) GROUP BY t1.c0, t0.c2, t0.c0, v0.c0, t0.c1 HAVING (NOT (SUM(HEX(v0.c0)))) UNION ALL SELECT ALL t1.c0, t0.c2, t0.c0, v0.c0, t0.c1 FROM t0, v0 LEFT OUTER JOIN t1 ON ((CASE WHEN t0.c1 THEN t0.c0 END)!=((NOT (t0.c0)))) GROUP BY t1.c0, t0.c2, t0.c0, v0.c0, t0.c1 HAVING ((SUM(HEX(v0.c0))) ISNULL);
SELECT t1.c0, t0.c2, t0.c0, v0.c0, t0.c1 FROM t0, v0 LEFT OUTER JOIN t1 ON ((CASE WHEN t0.c1 THEN t0.c0 END)<>((NOT (t0.c0)))) GROUP BY t1.c0, t0.c2, t0.c0, v0.c0, t0.c1;
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE ((((t0.c0, t0.c2, t0.c1)) BETWEEN ((((t0.c1) IS TRUE), ((NULL) ISNULL), ((t0.c0) ISNULL))) AND (('1526422112', (((t0.c1))<((t0.c2))), ((t0.c1)<<(t0.c2)))))) UNION ALL SELECT * FROM t0 WHERE ((NOT ((((t0.c0, t0.c2, t0.c1)) BETWEEN ((((t0.c1) IS TRUE), ((NULL) ISNULL), ((t0.c0) ISNULL))) AND (('1526422112', (((t0.c1))<((t0.c2))), ((t0.c1)<<(t0.c2)))))))) UNION ALL SELECT ALL * FROM t0 WHERE ((((((t0.c0, t0.c2, t0.c1)) BETWEEN ((((t0.c1) IS TRUE), ((NULL) ISNULL), ((t0.c0) ISNULL))) AND (('1526422112', (((t0.c1))<((t0.c2))), ((t0.c1)<<(t0.c2)))))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM v0, t0;
SELECT DISTINCT * FROM v0, t0 WHERE (UNLIKELY(IFNULL(t0.c1, t0.c0))) UNION SELECT DISTINCT * FROM v0, t0 WHERE ((NOT (UNLIKELY(IFNULL(t0.c1, t0.c0))))) UNION SELECT DISTINCT * FROM v0, t0 WHERE (((UNLIKELY(IFNULL(t0.c1, t0.c0))) ISNULL));
SELECT DISTINCT * FROM v0, t0;
SELECT t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM t0, t1 WHERE ((((((t1.c0)AND(t0.c0)))AND(t0.c0)) IN ())) GROUP BY t1.c0, t0.c0 UNION SELECT t1.c0, t0.c0 FROM t0, t1 WHERE ((NOT ((((((t1.c0)AND(t0.c0)))AND(t0.c0)) IN ())))) GROUP BY t1.c0, t0.c0 UNION SELECT ALL t1.c0, t0.c0 FROM t0, t1 WHERE ((((((((t1.c0)AND(t0.c0)))AND(t0.c0)) IN ())) ISNULL)) GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0;
SELECT ALL t0.c0, t0.c1, t0.c2, t1.c0 FROM t0 LEFT OUTER JOIN t1 ON ((CAST(t1.c0 AS TEXT)) NOT BETWEEN (HEX('Jꘖ')) AND (t0.c0)) GROUP BY t0.c0, t0.c1, t0.c2, t1.c0;
SELECT ALL t0.c0, t0.c1, t0.c2, t1.c0 FROM t0 LEFT OUTER JOIN t1 ON ((CAST(t1.c0 AS TEXT)) NOT BETWEEN (HEX('Jꘖ')) AND (t0.c0)) GROUP BY t0.c0, t0.c1, t0.c2, t1.c0 HAVING AVG((- (MAX(t0.c1)))) UNION ALL SELECT t0.c0, t0.c1, t0.c2, t1.c0 FROM t0 LEFT OUTER JOIN t1 ON ((CAST(t1.c0 AS TEXT)) NOT BETWEEN (HEX('Jꘖ')) AND (t0.c0)) GROUP BY t0.c0, t0.c1, t0.c2, t1.c0 HAVING (NOT (AVG((- (MAX(t0.c1)))))) UNION ALL SELECT ALL t0.c0, t0.c1, t0.c2, t1.c0 FROM t0 LEFT OUTER JOIN t1 ON ((CAST(t1.c0 AS TEXT)) NOT BETWEEN (HEX('Jꘖ')) AND (t0.c0)) GROUP BY t0.c0, t0.c1, t0.c2, t1.c0 HAVING ((AVG((- (MAX(t0.c1))))) ISNULL);
SELECT * FROM v0, t0;
SELECT ALL * FROM v0, t0 WHERE ((NOT (CASE t0.c2  WHEN v0.c0 THEN t0.c0 ELSE x'' END))) UNION ALL SELECT ALL * FROM v0, t0 WHERE ((NOT ((NOT (CASE t0.c2  WHEN v0.c0 THEN t0.c0 ELSE x'' END))))) UNION ALL SELECT * FROM v0, t0 WHERE ((((NOT (CASE t0.c2  WHEN v0.c0 THEN t0.c0 ELSE x'' END))) ISNULL));
SELECT * FROM v0, t0;
SELECT DISTINCT * FROM t1, t0 LEFT OUTER JOIN v0 ON 0x6f009666;
SELECT DISTINCT * FROM t1, t0 LEFT OUTER JOIN v0 ON 0x6f009666 WHERE (((((0.22489162746277214) BETWEEN (t0.c0) AND (t1.c0))) NOT BETWEEN (((t1.c0) NOT NULL)) AND (0.5988149750510646))) UNION SELECT DISTINCT * FROM t1, t0 LEFT OUTER JOIN v0 ON 0x6f009666 WHERE ((NOT (((((0.22489162746277214) BETWEEN (t0.c0) AND (t1.c0))) NOT BETWEEN (((t1.c0) NOT NULL)) AND (0.5988149750510646))))) UNION SELECT DISTINCT * FROM t1, t0 LEFT OUTER JOIN v0 ON 0X6f009666 WHERE (((((((0.22489162746277214) BETWEEN (t0.c0) AND (t1.c0))) NOT BETWEEN (((t1.c0) NOT NULL)) AND (0.5988149750510646))) ISNULL));
SELECT DISTINCT * FROM t1, t0 LEFT OUTER JOIN v0 ON 0x6f009666;
SELECT v0.c0 FROM t0 NATURAL JOIN v0 GROUP BY v0.c0;
SELECT v0.c0 FROM t0 NATURAL JOIN v0 WHERE (((((v0.c0) BETWEEN (NULL) AND (t0.c2))) NOT BETWEEN (CASE v0.c0  WHEN v0.c0 THEN t0.c1 END) AND (-1.191868757E9))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM t0 NATURAL JOIN v0 WHERE ((NOT (((((v0.c0) BETWEEN (NULL) AND (t0.c2))) NOT BETWEEN (CASE v0.c0  WHEN v0.c0 THEN t0.c1 END) AND (-1.191868757E9))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM t0 NATURAL JOIN v0 WHERE (((((((v0.c0) BETWEEN (NULL) AND (t0.c2))) NOT BETWEEN (CASE v0.c0  WHEN v0.c0 THEN t0.c1 END) AND (-1.191868757E9))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM t0 NATURAL JOIN v0 GROUP BY v0.c0;
SELECT t1.c0, t0.c1, t0.c2 FROM t0, v0, t1 GROUP BY t1.c0, t0.c1, t0.c2;
SELECT ALL t1.c0, t0.c1, t0.c2 FROM t0, v0, t1 GROUP BY t1.c0, t0.c1, t0.c2 HAVING GROUP_CONCAT(COUNT(*)) UNION ALL SELECT t1.c0, t0.c1, t0.c2 FROM t0, v0, t1 GROUP BY t1.c0, t0.c1, t0.c2 HAVING (NOT (GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT ALL t1.c0, t0.c1, t0.c2 FROM t0, v0, t1 GROUP BY t1.c0, t0.c1, t0.c2 HAVING ((GROUP_CONCAT(COUNT(*))) ISNULL);
SELECT ALL t0.c0, t0.c2, t1.c0 FROM t1, t0;
SELECT ALL t0.c0, t0.c2, t1.c0 FROM t1, t0 NOT INDEXED WHERE (t1.c0) UNION ALL SELECT ALL t0.c0, t0.c2, t1.c0 FROM t1, t0 WHERE ((NOT (t1.c0))) UNION ALL SELECT t0.c0, t0.c2, t1.c0 FROM t1, t0 WHERE (((t1.c0) ISNULL));
SELECT ALL t0.c0, t0.c2, t1.c0 FROM t1, t0;
SELECT DISTINCT * FROM v0 NOT INDEXED, t0;
SELECT DISTINCT * FROM v0, t0 WHERE ((((t0.c0)) BETWEEN ((v0.c0)) AND ((t0.c1))) COLLATE NOCASE) UNION SELECT DISTINCT * FROM v0, t0 WHERE ((NOT ((((t0.c0)) BETWEEN ((v0.c0)) AND ((t0.c1))) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM v0, t0 WHERE ((((((t0.c0)) BETWEEN ((v0.c0)) AND ((t0.c1))) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM v0 NOT INDEXED, t0;
SELECT ALL t1.c0, v0.c0 FROM t1, v0 GROUP BY t1.c0, v0.c0;
SELECT ALL t1.c0, v0.c0 FROM t1, v0 WHERE ((((- (t1.c0))) NOTNULL)) GROUP BY t1.c0, v0.c0 UNION SELECT ALL t1.c0, v0.c0 FROM t1, v0 WHERE ((NOT ((((- (t1.c0))) NOTNULL)))) GROUP BY t1.c0, v0.c0 UNION SELECT t1.c0, v0.c0 FROM t1, v0 WHERE ((((((- (t1.c0))) NOTNULL)) ISNULL)) GROUP BY t1.c0, v0.c0;
SELECT ALL t1.c0, v0.c0 FROM t1, v0 GROUP BY t1.c0, v0.c0;
SELECT ALL t1.c0, v0.c0, t0.c1, t0.c0 FROM t1, t0, v0 GROUP BY t1.c0, v0.c0, t0.c1, t0.c0;
SELECT ALL t1.c0, v0.c0, t0.c1, t0.c0 FROM t1, t0, v0 GROUP BY t1.c0, v0.c0, t0.c1, t0.c0 HAVING MIN(MIN(SUM(MIN(AVG(GROUP_CONCAT(MAX(v0.c0))))))) UNION ALL SELECT ALL t1.c0, v0.c0, t0.c1, t0.c0 FROM t1, t0, v0 GROUP BY t1.c0, v0.c0, t0.c1, t0.c0 HAVING (NOT (MIN(MIN(SUM(MIN(AVG(GROUP_CONCAT(MAX(v0.c0))))))))) UNION ALL SELECT t1.c0, v0.c0, t0.c1, t0.c0 FROM t1, t0, v0 GROUP BY t1.c0, v0.c0, t0.c1, t0.c0 HAVING ((MIN(MIN(SUM(MIN(AVG(GROUP_CONCAT(MAX(v0.c0)))))))) ISNULL);
SELECT ALL t0.c1, t0.c2, t0.c0 FROM t0;
SELECT t0.c1, t0.c2, t0.c0 FROM t0 WHERE (CAST(CASE WHEN t0.c0 THEN t0.c1 END AS NUMERIC)) UNION ALL SELECT t0.c1, t0.c2, t0.c0 FROM t0 WHERE ((NOT (CAST(CASE WHEN t0.c0 THEN t0.c1 END AS NUMERIC)))) UNION ALL SELECT ALL t0.c1, t0.c2, t0.c0 FROM t0 WHERE (((CAST(CASE WHEN t0.c0 THEN t0.c1 END AS NUMERIC)) ISNULL));
SELECT ALL t0.c1, t0.c2, t0.c0 FROM t0;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (load_extension(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (load_extension(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))))) UNION SELECT DISTINCT * FROM t1 WHERE (((load_extension(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))) ISNULL));
SELECT ALL t0.c1 FROM t1, t0, v0 GROUP BY t0.c1;
SELECT t0.c1 FROM t1, t0, v0 WHERE ((((CAST(NULL AS BLOB)))<=((((((t0.c2)OR(v0.c0)))AND(t1.c0)))))) GROUP BY t0.c1 UNION SELECT ALL t0.c1 FROM t1, t0, v0 WHERE ((NOT ((((CAST(NULL AS BLOB)))<=((((((t0.c2)OR(v0.c0)))AND(t1.c0)))))))) GROUP BY t0.c1 UNION SELECT ALL t0.c1 FROM t1, t0, v0 WHERE ((((((CAST(NULL AS BLOB)))<=((((((t0.c2)OR(v0.c0)))AND(t1.c0)))))) ISNULL)) GROUP BY t0.c1;
SELECT ALL t0.c1 FROM t1, t0, v0 GROUP BY t0.c1;
SELECT ALL t0.c0, t1.c0 FROM t0, v0, t1 GROUP BY t0.c0, t1.c0;
SELECT ALL t0.c0, t1.c0 FROM t0, v0, t1 GROUP BY t0.c0, t1.c0 HAVING CAST(t0.c1 AS INTEGER) UNION ALL SELECT ALL t0.c0, t1.c0 FROM t0, v0, t1 GROUP BY t0.c0, t1.c0 HAVING (NOT (CAST(t0.c1 AS INTEGER))) UNION ALL SELECT t0.c0, t1.c0 FROM t0, v0, t1 GROUP BY t0.c0, t1.c0 HAVING ((CAST(t0.c1 AS INTEGER)) ISNULL);
SELECT ALL t0.c0, t1.c0 FROM t0, v0, t1 GROUP BY t0.c0, t1.c0;
SELECT ALL t0.c0, t1.c0 FROM t0, v0, t1 GROUP BY t0.c0, t1.c0 HAVING CAST(t0.c1 AS INTEGER) UNION ALL SELECT ALL t0.c0, t1.c0 FROM t0, v0, t1 GROUP BY t0.c0, t1.c0 HAVING (NOT (CAST(t0.c1 AS INTEGER))) UNION ALL SELECT t0.c0, t1.c0 FROM t0, v0, t1 GROUP BY t0.c0, t1.c0 HAVING ((CAST(t0.c1 AS INTEGER)) ISNULL);
SELECT ALL t0.c0, t1.c0 FROM t0, v0, t1 GROUP BY t0.c0, t1.c0;
SELECT ALL MIN((((0.4578466148899798 IN ()))<(CASE WHEN t0.c1 THEN v0.c0 ELSE t0.c2 END))) FROM t0, v0;
SELECT * FROM v0 RIGHT OUTER JOIN t0 ON (((t0.c2, t1.c0, t0.c1)) BETWEEN ((CASE WHEN '' THEN t1.c0 END, ((v0.c0)IS(t1.c0)), ((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c1)))) AND ((((((((((t1.c0)AND(t0.c0)))OR(0.03682603015919006)))OR(t0.c2)))AND(t0.c1)), ((t0.c0)*(t1.c0)), CASE WHEN t1.c0 THEN v0.c0 WHEN t0.c2 THEN t0.c2 WHEN v0.c0 THEN t0.c2 END))) RIGHT OUTER JOIN t1 ON ((((t0.c0)>>(x'')))*((t0.c2 IN (t0.c0))));
SELECT DISTINCT * FROM v0, t1, t0;
SELECT DISTINCT * FROM v0, t1, t0 NOT INDEXED WHERE (CASE (((t0.c2)) BETWEEN ((0.22489162746277214)) AND ((t0.c1)))  WHEN COALESCE(DISTINCT t0.c2, t0.c1) THEN ((t0.c1)LIKE(t0.c0)) END) UNION SELECT DISTINCT * FROM v0, t1, t0 WHERE ((NOT (CASE (((t0.c2)) BETWEEN ((0.22489162746277214)) AND ((t0.c1)))  WHEN COALESCE(DISTINCT t0.c2, t0.c1) THEN ((t0.c1)LIKE(t0.c0)) END))) UNION SELECT DISTINCT * FROM v0, t1, t0 WHERE (((CASE (((t0.c2)) BETWEEN ((0.22489162746277214)) AND ((t0.c1)))  WHEN COALESCE(DISTINCT t0.c2, t0.c1) THEN ((t0.c1)LIKE(t0.c0)) END) ISNULL));
SELECT DISTINCT * FROM v0, t1, t0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((CASE -1.114695736E9  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, LIKELY(DISTINCT v0.c0), CAST(v0.c0 AS NUMERIC))) AND ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN -248511514 ELSE v0.c0 END, NULL, v0.c0)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((CASE -1.114695736E9  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, LIKELY(DISTINCT v0.c0), CAST(v0.c0 AS NUMERIC))) AND ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN -248511514 ELSE v0.c0 END, NULL, v0.c0)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((CASE -1.114695736E9  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, LIKELY(DISTINCT v0.c0), CAST(v0.c0 AS NUMERIC))) AND ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN -248511514 ELSE v0.c0 END, NULL, v0.c0)))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2;
SELECT t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2 HAVING t0.c0 UNION ALL SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2 HAVING (NOT (t0.c0)) UNION ALL SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2 HAVING ((t0.c0) ISNULL);
SELECT t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2;
SELECT t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2 HAVING t0.c0 UNION ALL SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2 HAVING (NOT (t0.c0)) UNION ALL SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2 HAVING ((t0.c0) ISNULL);
SELECT t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2;
SELECT * FROM t1 CROSS JOIN v0 ON (((((t0.c1 IN (t0.c2)))OR(CAST(t0.c1 AS INTEGER))))AND(((t0.c0)+(t1.c0)))) RIGHT OUTER JOIN t0 ON (((((t0.c1)) BETWEEN ((t0.c2)) AND ((0xfffffffff5df0853)))) NOT BETWEEN (((t0.c0) NOT NULL)) AND ((t0.c0 IN ())));
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE ((((t1.c0, t1.c0, t1.c0)) BETWEEN (((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))), ((((t1.c0)AND(t1.c0)))AND(t1.c0)), (- (t1.c0)))) AND ((NULLIF(t1.c0, NULL), ((t1.c0) ISNULL), HEX(DISTINCT t1.c0))))) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT ((((t1.c0, t1.c0, t1.c0)) BETWEEN (((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))), ((((t1.c0)AND(t1.c0)))AND(t1.c0)), (- (t1.c0)))) AND ((NULLIF(t1.c0, NULL), ((t1.c0) ISNULL), HEX(DISTINCT t1.c0))))))) UNION SELECT DISTINCT * FROM t1 WHERE ((((((t1.c0, t1.c0, t1.c0)) BETWEEN (((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))), ((((t1.c0)AND(t1.c0)))AND(t1.c0)), (- (t1.c0)))) AND ((NULLIF(t1.c0, NULL), ((t1.c0) ISNULL), HEX(DISTINCT t1.c0))))) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT ALL v0.c0 FROM t1, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM t1, v0 WHERE ((((t1.c0)+(v0.c0)) IN ())) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM t1, v0 WHERE ((NOT ((((t1.c0)+(v0.c0)) IN ())))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM t1, v0 WHERE ((((((t1.c0)+(v0.c0)) IN ())) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM t1, v0 GROUP BY v0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING MAX(0.8770999683744388) COLLATE BINARY UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MAX(0.8770999683744388) COLLATE BINARY)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MAX(0.8770999683744388) COLLATE BINARY) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING MAX(0.8770999683744388) COLLATE BINARY UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MAX(0.8770999683744388) COLLATE BINARY)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MAX(0.8770999683744388) COLLATE BINARY) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))<=((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))<=((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))))))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))<=((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))))) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((CAST(v0.c0 AS TEXT), ((v0.c0)LIKE(v0.c0)), (NOT (v0.c0)), TRIM(v0.c0, v0.c0), TRIM(DISTINCT v0.c0)))=((CAST(v0.c0 AS TEXT), ((v0.c0)||('736021537')), (((v0.c0))!=((v0.c0))), ((((v0.c0)OR(v0.c0)))OR(v0.c0)), ((((v0.c0)OR(v0.c0)))OR(1.862309478E9)))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((CAST(v0.c0 AS TEXT), ((v0.c0)LIKE(v0.c0)), (NOT (v0.c0)), TRIM(v0.c0, v0.c0), TRIM(DISTINCT v0.c0)))==((CAST(v0.c0 AS TEXT), ((v0.c0)||('736021537')), (((v0.c0))!=((v0.c0))), ((((v0.c0)OR(v0.c0)))OR(v0.c0)), ((((v0.c0)OR(v0.c0)))OR(1.862309478E9)))))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((CAST(v0.c0 AS TEXT), ((v0.c0)LIKE(v0.c0)), (NOT (v0.c0)), TRIM(v0.c0, v0.c0), TRIM(DISTINCT v0.c0)))=((CAST(v0.c0 AS TEXT), ((v0.c0)||('736021537')), (((v0.c0))<>((v0.c0))), ((((v0.c0)OR(v0.c0)))OR(v0.c0)), ((((v0.c0)OR(v0.c0)))OR(1.862309478E9)))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT t0.c1 FROM v0, t0 CROSS JOIN t1 ON ((((t1.c0 COLLATE NOCASE)OR(0Xffffffffa9e27965)))AND(CAST(v0.c0 AS NUMERIC))) GROUP BY t0.c1;
SELECT ALL t0.c1 FROM v0, t0 CROSS JOIN t1 ON ((((t1.c0 COLLATE NOCASE)OR(0Xffffffffa9e27965)))AND(CAST(v0.c0 AS NUMERIC))) WHERE (CASE WHEN (((t0.c1, t0.c2, v0.c0))>=((t0.c2, t0.c1, v0.c0))) THEN ((((v0.c0)AND(t1.c0)))AND(t0.c1)) END) GROUP BY t0.c1 UNION SELECT ALL t0.c1 FROM v0, t0 CROSS JOIN t1 ON ((((t1.c0 COLLATE NOCASE)OR(0xffffffffa9e27965)))AND(CAST(v0.c0 AS NUMERIC))) WHERE ((NOT (CASE WHEN (((t0.c1, t0.c2, v0.c0))>=((t0.c2, t0.c1, v0.c0))) THEN ((((v0.c0)AND(t1.c0)))AND(t0.c1)) END))) GROUP BY t0.c1 UNION SELECT t0.c1 FROM v0, t0 CROSS JOIN t1 ON ((((t1.c0 COLLATE NOCASE)OR(0xffffffffa9e27965)))AND(CAST(v0.c0 AS NUMERIC))) WHERE (((CASE WHEN (((t0.c1, t0.c2, v0.c0))>=((t0.c2, t0.c1, v0.c0))) THEN ((((v0.c0)AND(t1.c0)))AND(t0.c1)) END) ISNULL)) GROUP BY t0.c1;
SELECT t0.c1 FROM v0, t0 CROSS JOIN t1 ON ((((t1.c0 COLLATE NOCASE)OR(0Xffffffffa9e27965)))AND(CAST(v0.c0 AS NUMERIC))) GROUP BY t0.c1;
SELECT ALL v0.c0, t0.c2, t1.c0, t0.c0 FROM t1, t0, v0 GROUP BY v0.c0, t0.c2, t1.c0, t0.c0;
SELECT v0.c0, t0.c2, t1.c0, t0.c0 FROM t1, t0, v0 GROUP BY v0.c0, t0.c2, t1.c0, t0.c0 HAVING MAX(v0.c0) UNION ALL SELECT ALL v0.c0, t0.c2, t1.c0, t0.c0 FROM t1, t0, v0 GROUP BY v0.c0, t0.c2, t1.c0, t0.c0 HAVING (NOT (MAX(v0.c0))) UNION ALL SELECT ALL v0.c0, t0.c2, t1.c0, t0.c0 FROM t1, t0, v0 GROUP BY v0.c0, t0.c2, t1.c0, t0.c0 HAVING ((MAX(v0.c0)) ISNULL);
SELECT ALL v0.c0, t0.c2, t1.c0, t0.c0 FROM t1, t0, v0 GROUP BY v0.c0, t0.c2, t1.c0, t0.c0;
SELECT v0.c0, t0.c2, t1.c0, t0.c0 FROM t1, t0, v0 GROUP BY v0.c0, t0.c2, t1.c0, t0.c0 HAVING MAX(v0.c0) UNION ALL SELECT ALL v0.c0, t0.c2, t1.c0, t0.c0 FROM t1, t0, v0 GROUP BY v0.c0, t0.c2, t1.c0, t0.c0 HAVING (NOT (MAX(v0.c0))) UNION ALL SELECT ALL v0.c0, t0.c2, t1.c0, t0.c0 FROM t1, t0, v0 GROUP BY v0.c0, t0.c2, t1.c0, t0.c0 HAVING ((MAX(v0.c0)) ISNULL);
SELECT ALL v0.c0, t0.c2, t1.c0, t0.c0 FROM t1, t0, v0 GROUP BY v0.c0, t0.c2, t1.c0, t0.c0;
SELECT t0.c1 FROM t0;
SELECT ALL t0.c1 FROM t0 WHERE (((x'1e2e')||(t0.c0))) UNION ALL SELECT ALL t0.c1 FROM t0 WHERE ((NOT (((x'1e2e')||(t0.c0))))) UNION ALL SELECT t0.c1 FROM t0 WHERE (((((x'1e2e')||(t0.c0))) ISNULL));
SELECT t0.c1 FROM t0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((((v0.c0) ISNULL))OR(((v0.c0)IS NOT(v0.c0))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((v0.c0) ISNULL))OR(((v0.c0)IS NOT(v0.c0))))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((v0.c0) ISNULL))OR(((v0.c0)IS NOT(v0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT v0.c0, t0.c1, t0.c2 FROM t0, v0 GROUP BY v0.c0, t0.c1, t0.c2;
SELECT ALL v0.c0, t0.c1, t0.c2 FROM t0, v0 WHERE ((((''))>=((t0.c2))) COLLATE RTRIM) GROUP BY v0.c0, t0.c1, t0.c2 UNION SELECT ALL v0.c0, t0.c1, t0.c2 FROM t0, v0 WHERE ((NOT ((((''))>=((t0.c2))) COLLATE RTRIM))) GROUP BY v0.c0, t0.c1, t0.c2 UNION SELECT v0.c0, t0.c1, t0.c2 FROM t0, v0 WHERE ((((((''))>=((t0.c2))) COLLATE RTRIM) ISNULL)) GROUP BY v0.c0, t0.c1, t0.c2;
SELECT v0.c0, t0.c1, t0.c2 FROM t0, v0 GROUP BY v0.c0, t0.c1, t0.c2;
SELECT v0.c0 FROM v0, t1 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, t1 GROUP BY v0.c0 HAVING ((((t1.c0) IS TRUE)) NOT BETWEEN (SUM(t1.c0)) AND (TOTAL(t1.c0))) UNION ALL SELECT ALL v0.c0 FROM v0, t1 GROUP BY v0.c0 HAVING (NOT (((((t1.c0) IS TRUE)) NOT BETWEEN (SUM(t1.c0)) AND (TOTAL(t1.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0, t1 GROUP BY v0.c0 HAVING ((((((t1.c0) IS TRUE)) NOT BETWEEN (SUM(t1.c0)) AND (TOTAL(t1.c0)))) ISNULL);
SELECT v0.c0 FROM v0, t1 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, t1 GROUP BY v0.c0 HAVING ((((t1.c0) IS TRUE)) NOT BETWEEN (SUM(t1.c0)) AND (TOTAL(t1.c0))) UNION ALL SELECT ALL v0.c0 FROM v0, t1 GROUP BY v0.c0 HAVING (NOT (((((t1.c0) IS TRUE)) NOT BETWEEN (SUM(t1.c0)) AND (TOTAL(t1.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0, t1 GROUP BY v0.c0 HAVING ((((((t1.c0) IS TRUE)) NOT BETWEEN (SUM(t1.c0)) AND (TOTAL(t1.c0)))) ISNULL);
SELECT v0.c0 FROM v0, t1 GROUP BY v0.c0;
SELECT * FROM v0, t1, t0 NOT INDEXED;
SELECT * FROM v0, t1, t0 WHERE ((((v0.c0 IN (t1.c0))) IS FALSE)) UNION ALL SELECT * FROM v0, t1, t0 WHERE ((NOT ((((v0.c0 IN (t1.c0))) IS FALSE)))) UNION ALL SELECT ALL * FROM v0, t1, t0 WHERE ((((((v0.c0 IN (t1.c0))) IS FALSE)) ISNULL));
SELECT * FROM v0, t1, t0 NOT INDEXED;
SELECT DISTINCT * FROM v0, t1, t0;
SELECT DISTINCT * FROM v0, t1, t0 WHERE (t0.c0 COLLATE NOCASE) UNION SELECT DISTINCT * FROM v0, t1, t0 WHERE ((NOT (t0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM v0, t1, t0 WHERE (((t0.c0 COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM v0, t1, t0;
SELECT ALL t1.c0, v0.c0 FROM v0, t1 GROUP BY t1.c0, v0.c0;
SELECT t1.c0, v0.c0 FROM v0, t1 WHERE (v0.c0 COLLATE NOCASE) GROUP BY t1.c0, v0.c0 UNION SELECT t1.c0, v0.c0 FROM v0, t1 WHERE ((NOT (v0.c0 COLLATE NOCASE))) GROUP BY t1.c0, v0.c0 UNION SELECT ALL t1.c0, v0.c0 FROM v0, t1 WHERE (((v0.c0 COLLATE NOCASE) ISNULL)) GROUP BY t1.c0, v0.c0;
SELECT ALL t1.c0, v0.c0 FROM v0, t1 GROUP BY t1.c0, v0.c0;
SELECT v0.c0, t0.c1, t0.c2 FROM v0, t0 GROUP BY v0.c0, t0.c1, t0.c2;
SELECT v0.c0, t0.c1, t0.c2 FROM v0, t0 GROUP BY v0.c0, t0.c1, t0.c2 HAVING TOTAL(GROUP_CONCAT(v0.c0)) UNION ALL SELECT ALL v0.c0, t0.c1, t0.c2 FROM v0, t0 GROUP BY v0.c0, t0.c1, t0.c2 HAVING (NOT (TOTAL(GROUP_CONCAT(v0.c0)))) UNION ALL SELECT v0.c0, t0.c1, t0.c2 FROM v0, t0 GROUP BY v0.c0, t0.c1, t0.c2 HAVING ((TOTAL(GROUP_CONCAT(v0.c0))) ISNULL);
SELECT ALL * FROM v0, t1, t0;
SELECT ALL * FROM v0, t1, t0 WHERE (v0.c0) UNION ALL SELECT ALL * FROM v0, t1, t0 WHERE ((NOT (v0.c0))) UNION ALL SELECT ALL * FROM v0, t1, t0 WHERE (((v0.c0) ISNULL));
SELECT ALL * FROM v0, t1, t0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((x'e529' COLLATE NOCASE) NOTNULL)) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((x'e529' COLLATE NOCASE) NOTNULL)))) UNION SELECT DISTINCT * FROM v0 WHERE (((((x'e529' COLLATE NOCASE) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT t1.c0, t0.c1, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c1, t0.c0;
SELECT t1.c0, t0.c1, t0.c0 FROM t0, t1 WHERE ((((t0.c0)) BETWEEN ((((t0.c0) NOT BETWEEN (t0.c0) AND ('')))) AND ((((t1.c0) ISNULL))))) GROUP BY t1.c0, t0.c1, t0.c0 UNION SELECT ALL t1.c0, t0.c1, t0.c0 FROM t0, t1 WHERE ((NOT ((((t0.c0)) BETWEEN ((((t0.c0) NOT BETWEEN (t0.c0) AND ('')))) AND ((((t1.c0) ISNULL))))))) GROUP BY t1.c0, t0.c1, t0.c0 UNION SELECT t1.c0, t0.c1, t0.c0 FROM t0, t1 WHERE ((((((t0.c0)) BETWEEN ((((t0.c0) NOT BETWEEN (t0.c0) AND ('')))) AND ((((t1.c0) ISNULL))))) ISNULL)) GROUP BY t1.c0, t0.c1, t0.c0;
SELECT t1.c0, t0.c1, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c1, t0.c0;
SELECT ALL t0.c2, t1.c0 FROM t1, t0 GROUP BY t0.c2, t1.c0;
SELECT t0.c2, t1.c0 FROM t1, t0 NOT INDEXED GROUP BY t0.c2, t1.c0 HAVING LTRIM(x'', CASE WHEN SUM(t0.c0) THEN t0.c1 WHEN COUNT(*) THEN COUNT(SUM(MIN(MIN(MIN(-1.191868757E9))))) WHEN AVG(t0.c2) THEN COUNT(*) END) UNION ALL SELECT ALL t0.c2, t1.c0 FROM t1, t0 GROUP BY t0.c2, t1.c0 HAVING (NOT (LTRIM(x'', CASE WHEN SUM(t0.c0) THEN t0.c1 WHEN COUNT(*) THEN COUNT(SUM(MIN(MIN(MIN(-1.191868757E9))))) WHEN AVG(t0.c2) THEN COUNT(*) END))) UNION ALL SELECT t0.c2, t1.c0 FROM t1, t0 GROUP BY t0.c2, t1.c0 HAVING ((LTRIM(x'', CASE WHEN SUM(t0.c0) THEN t0.c1 WHEN COUNT(*) THEN COUNT(SUM(MIN(MIN(MIN(-1.191868757E9))))) WHEN AVG(t0.c2) THEN COUNT(*) END)) ISNULL);
SELECT ALL MIN(((CAST(v0.c0 AS NUMERIC))LIKE(((((v0.c0)OR(t1.c0)))OR(v0.c0))))) FROM t1, v0, t0;
SELECT ALL t0.c2, t0.c1 FROM t0;
SELECT t0.c2, t0.c1 FROM t0 WHERE (t0.c0) UNION ALL SELECT ALL t0.c2, t0.c1 FROM t0 WHERE ((NOT (t0.c0))) UNION ALL SELECT ALL t0.c2, t0.c1 FROM t0 WHERE (((t0.c0) ISNULL));
SELECT ALL t0.c2, t0.c1 FROM t0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (v0.c0) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT v0.c0, t0.c0, t0.c2 FROM t1, t0, v0 GROUP BY v0.c0, t0.c0, t0.c2;
SELECT v0.c0, t0.c0, t0.c2 FROM t1, t0, v0 WHERE (((((((x'')AND(t0.c2)))OR(t1.c0))) NOT BETWEEN (((((t0.c0)OR(v0.c0)))AND(t0.c0))) AND ((- (t0.c1))))) GROUP BY v0.c0, t0.c0, t0.c2 UNION SELECT v0.c0, t0.c0, t0.c2 FROM t1, t0, v0 WHERE ((NOT (((((((x'')AND(t0.c2)))OR(t1.c0))) NOT BETWEEN (((((t0.c0)OR(v0.c0)))AND(t0.c0))) AND ((- (t0.c1))))))) GROUP BY v0.c0, t0.c0, t0.c2 UNION SELECT v0.c0, t0.c0, t0.c2 FROM t1, t0, v0 WHERE (((((((((x'')AND(t0.c2)))OR(t1.c0))) NOT BETWEEN (((((t0.c0)OR(v0.c0)))AND(t0.c0))) AND ((- (t0.c1))))) ISNULL)) GROUP BY v0.c0, t0.c0, t0.c2;
SELECT v0.c0, t0.c0, t0.c2 FROM t1, t0, v0 GROUP BY v0.c0, t0.c0, t0.c2;
SELECT t0.c0 FROM t0, t1, v0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, t1, v0 GROUP BY t0.c0 HAVING MAX(MIN(t0.c0)) UNION ALL SELECT ALL t0.c0 FROM t0, t1, v0 GROUP BY t0.c0 HAVING (NOT (MAX(MIN(t0.c0)))) UNION ALL SELECT ALL t0.c0 FROM t0, t1, v0 GROUP BY t0.c0 HAVING ((MAX(MIN(t0.c0))) ISNULL);
SELECT ALL * FROM t1, t0 FULL OUTER JOIN v0 ON t0.c1;
SELECT * FROM t1, t0 FULL OUTER JOIN v0 ON t0.c1 WHERE (CAST(0.820853550737164 AS TEXT)) UNION ALL SELECT ALL * FROM t1, t0 FULL OUTER JOIN v0 ON t0.c1 WHERE ((NOT (CAST(0.820853550737164 AS TEXT)))) UNION ALL SELECT ALL * FROM t1, t0 FULL OUTER JOIN v0 ON t0.c1 WHERE (((CAST(0.820853550737164 AS TEXT)) ISNULL));
SELECT ALL * FROM t1, t0 FULL OUTER JOIN v0 ON t0.c1;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((((v0.c0, x'', v0.c0, '-1917219037', 0.4449712272791587)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) AND ((0.3452175914879161, v0.c0, v0.c0, v0.c0, v0.c0))))<(CASE WHEN 0.5005346531134939 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN 1862309478 THEN v0.c0 END))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((((v0.c0, x'', v0.c0, '-1917219037', 0.4449712272791587)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) AND ((0.3452175914879161, v0.c0, v0.c0, v0.c0, v0.c0))))<(CASE WHEN 0.5005346531134939 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN 1862309478 THEN v0.c0 END))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((((v0.c0, x'', v0.c0, '-1917219037', 0.4449712272791587)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) AND ((0.3452175914879161, v0.c0, v0.c0, v0.c0, v0.c0))))<(CASE WHEN 0.5005346531134939 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN 1862309478 THEN v0.c0 END))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1;
SELECT t0.c2, t0.c0, t0.c1 FROM t0 WHERE (CASE WHEN ((t0.c2)&(t0.c0)) THEN (((t0.c1)) BETWEEN ((t0.c0)) AND ((t0.c2))) END) GROUP BY t0.c2, t0.c0, t0.c1 UNION SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 WHERE ((NOT (CASE WHEN ((t0.c2)&(t0.c0)) THEN (((t0.c1)) BETWEEN ((t0.c0)) AND ((t0.c2))) END))) GROUP BY t0.c2, t0.c0, t0.c1 UNION SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 WHERE (((CASE WHEN ((t0.c2)&(t0.c0)) THEN (((t0.c1)) BETWEEN ((t0.c0)) AND ((t0.c2))) END) ISNULL)) GROUP BY t0.c2, t0.c0, t0.c1;
SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1;
SELECT ALL t1.c0, v0.c0 FROM v0, t1 GROUP BY t1.c0, v0.c0;
SELECT ALL t1.c0, v0.c0 FROM v0, t1 GROUP BY t1.c0, v0.c0 HAVING GROUP_CONCAT(CAST(SUM(t1.c0) AS INTEGER)) UNION ALL SELECT ALL t1.c0, v0.c0 FROM v0, t1 GROUP BY t1.c0, v0.c0 HAVING (NOT (GROUP_CONCAT(CAST(SUM(t1.c0) AS INTEGER)))) UNION ALL SELECT t1.c0, v0.c0 FROM v0, t1 GROUP BY t1.c0, v0.c0 HAVING ((GROUP_CONCAT(CAST(SUM(t1.c0) AS INTEGER))) ISNULL);
SELECT ALL t0.c2, t0.c1, v0.c0 FROM t1, t0, v0;
SELECT t0.c2, t0.c1, v0.c0 FROM t1, t0, v0 WHERE (((((t0.c2)IS('1526422112'))) NOT BETWEEN (((t0.c1)LIKE(t1.c0))) AND (((t0.c1)OR(t0.c2))))) UNION ALL SELECT ALL t0.c2, t0.c1, v0.c0 FROM t1, t0, v0 WHERE ((NOT (((((t0.c2)IS('1526422112'))) NOT BETWEEN (((t0.c1)LIKE(t1.c0))) AND (((t0.c1)OR(t0.c2))))))) UNION ALL SELECT ALL t0.c2, t0.c1, v0.c0 FROM t1, t0, v0 WHERE (((((((t0.c2)IS('1526422112'))) NOT BETWEEN (((t0.c1)LIKE(t1.c0))) AND (((t0.c1)OR(t0.c2))))) ISNULL));
SELECT ALL t0.c2, t0.c1, v0.c0 FROM t1, t0, v0;
SELECT DISTINCT * FROM v0, t1, t0;
SELECT DISTINCT * FROM v0, t1, t0 WHERE (((((v0.c0)*(NULL))) NOT BETWEEN ((NOT (v0.c0))) AND (CASE t1.c0  WHEN t0.c2 THEN t0.c2 WHEN t0.c0 THEN t0.c2 WHEN NULL THEN t1.c0 ELSE t0.c0 END))) UNION SELECT DISTINCT * FROM v0, t1, t0 WHERE ((NOT (((((v0.c0)*(NULL))) NOT BETWEEN ((NOT (v0.c0))) AND (CASE t1.c0  WHEN t0.c2 THEN t0.c2 WHEN t0.c0 THEN t0.c2 WHEN NULL THEN t1.c0 ELSE t0.c0 END))))) UNION SELECT DISTINCT * FROM v0, t1, t0 WHERE (((((((v0.c0)*(NULL))) NOT BETWEEN ((NOT (v0.c0))) AND (CASE t1.c0  WHEN t0.c2 THEN t0.c2 WHEN t0.c0 THEN t0.c2 WHEN NULL THEN t1.c0 ELSE t0.c0 END))) ISNULL));
SELECT DISTINCT * FROM v0, t1, t0;
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2;
SELECT t0.c2 FROM t0 WHERE (t0.c1) GROUP BY t0.c2 UNION SELECT ALL t0.c2 FROM t0 WHERE ((NOT (t0.c1))) GROUP BY t0.c2 UNION SELECT t0.c2 FROM t0 WHERE (((t0.c1) ISNULL)) GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2;
SELECT ALL t0.c2, t0.c0, v0.c0 FROM t0, v0 GROUP BY t0.c2, t0.c0, v0.c0;
SELECT ALL t0.c2, t0.c0, v0.c0 FROM t0, v0 GROUP BY t0.c2, t0.c0, v0.c0 HAVING ((((SUM(v0.c0))OR(MAX(COUNT(*)))))AND(COUNT(MAX(SUM(t0.c2))))) UNION ALL SELECT t0.c2, t0.c0, v0.c0 FROM t0, v0 GROUP BY t0.c2, t0.c0, v0.c0 HAVING (NOT (((((SUM(v0.c0))OR(MAX(COUNT(*)))))AND(COUNT(MAX(SUM(t0.c2))))))) UNION ALL SELECT t0.c2, t0.c0, v0.c0 FROM t0, v0 GROUP BY t0.c2, t0.c0, v0.c0 HAVING ((((((SUM(v0.c0))OR(MAX(COUNT(*)))))AND(COUNT(MAX(SUM(t0.c2)))))) ISNULL);
SELECT v0.c0, t0.c0, t0.c1 FROM v0 CROSS JOIN t0 ON ((1028246012) IS FALSE) COLLATE NOCASE LEFT OUTER JOIN t1 ON (+ (((v0.c0)-(t1.c0))));
SELECT v0.c0, t0.c0, t0.c1 FROM v0 CROSS JOIN t0 ON ((1028246012) IS FALSE) COLLATE NOCASE LEFT OUTER JOIN t1 ON (+ (((v0.c0)-(t1.c0)))) WHERE (0xffffffffcf30ad83) UNION ALL SELECT v0.c0, t0.c0, t0.c1 FROM v0 CROSS JOIN t0 ON ((1028246012) IS FALSE) COLLATE NOCASE LEFT OUTER JOIN t1 ON (+ (((v0.c0)-(t1.c0)))) WHERE ((NOT (0Xffffffffcf30ad83))) UNION ALL SELECT ALL v0.c0, t0.c0, t0.c1 FROM v0 CROSS JOIN t0 ON ((1028246012) IS FALSE) COLLATE NOCASE LEFT OUTER JOIN t1 ON (+ (((v0.c0)-(t1.c0)))) WHERE (((0Xffffffffcf30ad83) ISNULL));
SELECT v0.c0, t0.c0, t0.c1 FROM v0 CROSS JOIN t0 ON ((1028246012) IS FALSE) COLLATE NOCASE LEFT OUTER JOIN t1 ON (+ (((v0.c0)-(t1.c0))));
SELECT DISTINCT * FROM v0 INNER JOIN t0 ON ((((((t0.c1)AND(47454305)))OR(t1.c0))) IS FALSE) RIGHT OUTER JOIN t1 ON UPPER((t1.c0 IN ()));
SELECT ALL t1.c0, t0.c2, t0.c1, v0.c0, t0.c0 FROM v0 INNER JOIN t1 ON '162169277' INNER JOIN t0 ON (0.57755056927104 COLLATE RTRIM IN ()) GROUP BY t1.c0, t0.c2, t0.c1, v0.c0, t0.c0;
SELECT t1.c0, t0.c2, t0.c1, v0.c0, t0.c0 FROM v0 INNER JOIN t1 ON '162169277' INNER JOIN t0 ON (0.57755056927104 COLLATE RTRIM IN ()) WHERE ((((((t0.c2) NOT BETWEEN (t1.c0) AND (t1.c0))))>((CAST(t0.c2 AS TEXT))))) GROUP BY t1.c0, t0.c2, t0.c1, v0.c0, t0.c0 UNION SELECT t1.c0, t0.c2, t0.c1, v0.c0, t0.c0 FROM v0 INNER JOIN t1 ON '162169277' INNER JOIN t0 ON (0.57755056927104 COLLATE RTRIM IN ()) WHERE ((NOT ((((((t0.c2) NOT BETWEEN (t1.c0) AND (t1.c0))))>((CAST(t0.c2 AS TEXT))))))) GROUP BY t1.c0, t0.c2, t0.c1, v0.c0, t0.c0 UNION SELECT t1.c0, t0.c2, t0.c1, v0.c0, t0.c0 FROM v0 INNER JOIN t1 ON '162169277' INNER JOIN t0 ON (0.57755056927104 COLLATE RTRIM IN ()) WHERE ((((((((t0.c2) NOT BETWEEN (t1.c0) AND (t1.c0))))>((CAST(t0.c2 AS TEXT))))) ISNULL)) GROUP BY t1.c0, t0.c2, t0.c1, v0.c0, t0.c0;
SELECT ALL t1.c0, t0.c2, t0.c1, v0.c0, t0.c0 FROM v0 INNER JOIN t1 ON '162169277' INNER JOIN t0 ON (0.57755056927104 COLLATE RTRIM IN ()) GROUP BY t1.c0, t0.c2, t0.c1, v0.c0, t0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT((~ (v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT((~ (v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT((~ (v0.c0)))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT((~ (v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT((~ (v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT((~ (v0.c0)))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT * FROM t0, t1, v0;
SELECT * FROM t0, t1, v0 WHERE (((((t0.c0)=(v0.c0))) NOT NULL)) UNION ALL SELECT * FROM t0, t1, v0 WHERE ((NOT (((((t0.c0)=(v0.c0))) NOT NULL)))) UNION ALL SELECT * FROM t0, t1, v0 WHERE (((((((t0.c0)==(v0.c0))) NOT NULL)) ISNULL));
SELECT * FROM t0, t1, v0;
SELECT DISTINCT * FROM t0, t1, v0;
SELECT DISTINCT * FROM t0, t1, v0 WHERE (NULL) UNION SELECT DISTINCT * FROM t0, t1, v0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM t0, t1, v0 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM t0, t1, v0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE ((((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))<>(('\rw')))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT ((((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))!=(('\rw')))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((((((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))!=(('\rw')))) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t0.c0, t0.c2 FROM v0, t0, t1 GROUP BY t0.c0, t0.c2;
SELECT ALL t0.c0, t0.c2 FROM v0, t0, t1 GROUP BY t0.c0, t0.c2 HAVING SUM(IFNULL(AVG(t1.c0), AVG(MAX(t0.c2)))) UNION ALL SELECT t0.c0, t0.c2 FROM v0, t0, t1 GROUP BY t0.c0, t0.c2 HAVING (NOT (SUM(IFNULL(AVG(t1.c0), AVG(MAX(t0.c2)))))) UNION ALL SELECT t0.c0, t0.c2 FROM v0, t0, t1 GROUP BY t0.c0, t0.c2 HAVING ((SUM(IFNULL(AVG(t1.c0), AVG(MAX(t0.c2))))) ISNULL);
SELECT ALL * FROM v0 FULL OUTER JOIN t0 ON CASE WHEN CAST(t1.c0 AS REAL) THEN ((v0.c0)>>(t0.c2)) ELSE (((v0.c0)) NOT BETWEEN ((t1.c0)) AND ((t0.c0))) END LEFT OUTER JOIN t1 ON (+ (CAST(t0.c0 AS NUMERIC)));
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (CASE ((t0.c2) ISNULL)  WHEN CASE WHEN t0.c1 THEN t0.c2 END THEN (NOT (t0.c1)) WHEN (('771446391') NOT NULL) THEN ((t0.c1)GLOB(t0.c1)) WHEN (NOT (t0.c1)) THEN CAST(t0.c2 AS TEXT) END) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (CASE ((t0.c2) ISNULL)  WHEN CASE WHEN t0.c1 THEN t0.c2 END THEN (NOT (t0.c1)) WHEN (('771446391') NOT NULL) THEN ((t0.c1)GLOB(t0.c1)) WHEN (NOT (t0.c1)) THEN CAST(t0.c2 AS TEXT) END))) UNION SELECT DISTINCT * FROM t0 WHERE (((CASE ((t0.c2) ISNULL)  WHEN CASE WHEN t0.c1 THEN t0.c2 END THEN (NOT (t0.c1)) WHEN (('771446391') NOT NULL) THEN ((t0.c1)GLOB(t0.c1)) WHEN (NOT (t0.c1)) THEN CAST(t0.c2 AS TEXT) END) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c1, t1.c0, t0.c0 FROM t0, t1 GROUP BY t0.c1, t1.c0, t0.c0;
SELECT ALL t0.c1, t1.c0, t0.c0 FROM t0, t1 WHERE (((t1.c0)%((t0.c1 IN (x''))))) GROUP BY t0.c1, t1.c0, t0.c0 UNION SELECT ALL t0.c1, t1.c0, t0.c0 FROM t0, t1 WHERE ((NOT (((t1.c0)%((t0.c1 IN (x''))))))) GROUP BY t0.c1, t1.c0, t0.c0 UNION SELECT ALL t0.c1, t1.c0, t0.c0 FROM t0, t1 WHERE (((((t1.c0)%((t0.c1 IN (x''))))) ISNULL)) GROUP BY t0.c1, t1.c0, t0.c0;
SELECT ALL t0.c1, t1.c0, t0.c0 FROM t0, t1 GROUP BY t0.c1, t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM v0, t0, t1 GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM v0, t0, t1 GROUP BY t1.c0, t0.c0 HAVING t0.c2 UNION ALL SELECT ALL t1.c0, t0.c0 FROM v0, t0, t1 GROUP BY t1.c0, t0.c0 HAVING (NOT (t0.c2)) UNION ALL SELECT t1.c0, t0.c0 FROM v0, t0, t1 GROUP BY t1.c0, t0.c0 HAVING ((t0.c2) ISNULL);
SELECT t1.c0, t0.c0 FROM v0, t0, t1 GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM v0, t0, t1 GROUP BY t1.c0, t0.c0 HAVING t0.c2 UNION ALL SELECT ALL t1.c0, t0.c0 FROM v0, t0, t1 GROUP BY t1.c0, t0.c0 HAVING (NOT (t0.c2)) UNION ALL SELECT t1.c0, t0.c0 FROM v0, t0, t1 GROUP BY t1.c0, t0.c0 HAVING ((t0.c2) ISNULL);
SELECT t1.c0, t0.c0 FROM v0, t0, t1 GROUP BY t1.c0, t0.c0;
SELECT MAX(CASE WHEN v0.c0 THEN CAST(v0.c0 AS NUMERIC) ELSE ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END) FROM v0 ORDER BY ((v0.c0)/(v0.c0)) COLLATE BINARY;
SELECT * FROM t1;
SELECT * FROM t1 WHERE (GLOB((((t1.c0))<=((t1.c0))), ((t1.c0) IS FALSE))) UNION ALL SELECT ALL * FROM t1 WHERE ((NOT (GLOB((((t1.c0))<=((t1.c0))), ((t1.c0) IS FALSE))))) UNION ALL SELECT ALL * FROM t1 WHERE (((GLOB((((t1.c0))<=((t1.c0))), ((t1.c0) IS FALSE))) ISNULL));
SELECT * FROM t1;
SELECT DISTINCT * FROM t1, t0;
SELECT DISTINCT * FROM t1, t0 WHERE ((((((t0.c0)OR(t0.c0)))OR(t0.c2)) IN ())) UNION SELECT DISTINCT * FROM t1, t0 WHERE ((NOT ((((((t0.c0)OR(t0.c0)))OR(t0.c2)) IN ())))) UNION SELECT DISTINCT * FROM t1, t0 WHERE ((((((((t0.c0)OR(t0.c0)))OR(t0.c2)) IN ())) ISNULL));
SELECT DISTINCT * FROM t1, t0;
SELECT ALL t1.c0, v0.c0 FROM v0, t1 GROUP BY t1.c0, v0.c0;
SELECT t1.c0, v0.c0 FROM v0, t1 WHERE (((((((t1.c0)==(t1.c0)))OR((t1.c0 IN (v0.c0)))))OR(x''))) GROUP BY t1.c0, v0.c0 UNION SELECT ALL t1.c0, v0.c0 FROM v0, t1 WHERE ((NOT (((((((t1.c0)=(t1.c0)))OR((t1.c0 IN (v0.c0)))))OR(x''))))) GROUP BY t1.c0, v0.c0 UNION SELECT t1.c0, v0.c0 FROM v0, t1 WHERE (((((((((t1.c0)==(t1.c0)))OR((t1.c0 IN (v0.c0)))))OR(x''))) ISNULL)) GROUP BY t1.c0, v0.c0;
SELECT ALL t1.c0, v0.c0 FROM v0, t1 GROUP BY t1.c0, v0.c0;
SELECT t0.c1, t0.c0, t1.c0, t0.c2 FROM t0 INNER JOIN t1 ON (NOT (CAST(t0.c0 AS REAL))) GROUP BY t0.c1, t0.c0, t1.c0, t0.c2;
SELECT ALL t0.c1, t0.c0, t1.c0, t0.c2 FROM t0 INNER JOIN t1 ON (NOT (CAST(t0.c0 AS REAL))) GROUP BY t0.c1, t0.c0, t1.c0, t0.c2 HAVING GROUP_CONCAT(MAX(COUNT(MIN(t1.c0)))) UNION ALL SELECT ALL t0.c1, t0.c0, t1.c0, t0.c2 FROM t0 INNER JOIN t1 ON (NOT (CAST(t0.c0 AS REAL))) GROUP BY t0.c1, t0.c0, t1.c0, t0.c2 HAVING (NOT (GROUP_CONCAT(MAX(COUNT(MIN(t1.c0)))))) UNION ALL SELECT ALL t0.c1, t0.c0, t1.c0, t0.c2 FROM t0 INNER JOIN t1 ON (NOT (CAST(t0.c0 AS REAL))) GROUP BY t0.c1, t0.c0, t1.c0, t0.c2 HAVING ((GROUP_CONCAT(MAX(COUNT(MIN(t1.c0))))) ISNULL);
SELECT ALL * FROM v0 RIGHT OUTER JOIN t1 ON TRIM((v0.c0 IN ())) LEFT OUTER JOIN t0 ON (~ (t0.c2 COLLATE RTRIM));
SELECT ALL * FROM v0 RIGHT OUTER JOIN t1 ON TRIM((v0.c0 IN ())) LEFT OUTER JOIN t0 ON (~ (t0.c2 COLLATE RTRIM)) WHERE (((((CASE t1.c0  WHEN t1.c0 THEN t0.c2 ELSE t0.c0 END)AND((NOT (t0.c2)))))AND('0.03682603015919006'))) UNION ALL SELECT * FROM v0 NOT INDEXED RIGHT OUTER JOIN t1 ON TRIM((v0.c0 IN ())) LEFT OUTER JOIN t0 ON (~ (t0.c2 COLLATE RTRIM)) WHERE ((NOT (((((CASE t1.c0  WHEN t1.c0 THEN t0.c2 ELSE t0.c0 END)AND((NOT (t0.c2)))))AND('0.03682603015919006'))))) UNION ALL SELECT * FROM v0 RIGHT OUTER JOIN t1 ON TRIM((v0.c0 IN ())) LEFT OUTER JOIN t0 ON (~ (t0.c2 COLLATE RTRIM)) WHERE (((((((CASE t1.c0  WHEN t1.c0 THEN t0.c2 ELSE t0.c0 END)AND((NOT (t0.c2)))))AND('0.03682603015919006'))) ISNULL));
SELECT ALL * FROM v0 RIGHT OUTER JOIN t1 ON TRIM((v0.c0 IN ())) LEFT OUTER JOIN t0 ON (~ (t0.c2 COLLATE RTRIM));
SELECT DISTINCT * FROM v0, t1;
SELECT DISTINCT * FROM v0, t1 WHERE ((((((x'') IS FALSE)))>((CAST(NULL AS TEXT))))) UNION SELECT DISTINCT * FROM v0, t1 WHERE ((NOT ((((((x'') IS FALSE)))>((CAST(NULL AS TEXT))))))) UNION SELECT DISTINCT * FROM v0, t1 WHERE ((((((((x'') IS FALSE)))>((CAST(NULL AS TEXT))))) ISNULL));
SELECT DISTINCT * FROM v0, t1;
SELECT ALL v0.c0, t1.c0 FROM v0, t1 GROUP BY v0.c0, t1.c0;
SELECT ALL v0.c0, t1.c0 FROM v0, t1 WHERE (((v0.c0 COLLATE BINARY)=(((((((((t1.c0)AND(0.13882732881544524)))OR(t1.c0)))AND(t1.c0)))AND(v0.c0))))) GROUP BY v0.c0, t1.c0 UNION SELECT v0.c0, t1.c0 FROM v0, t1 WHERE ((NOT (((v0.c0 COLLATE BINARY)=(((((((((t1.c0)AND(0.13882732881544524)))OR(t1.c0)))AND(t1.c0)))AND(v0.c0))))))) GROUP BY v0.c0, t1.c0 UNION SELECT ALL v0.c0, t1.c0 FROM v0, t1 WHERE (((((v0.c0 COLLATE BINARY)=(((((((((t1.c0)AND(0.13882732881544524)))OR(t1.c0)))AND(t1.c0)))AND(v0.c0))))) ISNULL)) GROUP BY v0.c0, t1.c0;
SELECT ALL v0.c0, t1.c0 FROM v0, t1 GROUP BY v0.c0, t1.c0;
SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2;
SELECT t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2 HAVING (~ ((((MIN(SUM(t0.c0)))) BETWEEN ((t0.c0)) AND ((t0.c1))))) UNION ALL SELECT t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2 HAVING (NOT ((~ ((((MIN(SUM(t0.c0)))) BETWEEN ((t0.c0)) AND ((t0.c1))))))) UNION ALL SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2 HAVING (((~ ((((MIN(SUM(t0.c0)))) BETWEEN ((t0.c0)) AND ((t0.c1)))))) ISNULL);
SELECT ALL v0.c0 FROM t1, v0;
SELECT ALL v0.c0 FROM t1, v0 WHERE (0.1070878496037102) UNION ALL SELECT ALL v0.c0 FROM t1, v0 WHERE ((NOT (0.1070878496037102))) UNION ALL SELECT ALL v0.c0 FROM t1, v0 WHERE (((0.1070878496037102) ISNULL));
SELECT ALL v0.c0 FROM t1, v0;
SELECT DISTINCT * FROM t0 CROSS JOIN v0 ON DATETIME(((v0.c0)<<(t0.c0)), CASE t0.c0  WHEN t0.c2 THEN v0.c0 END, CASE WHEN v0.c0 THEN t0.c2 ELSE t0.c0 END);
SELECT DISTINCT * FROM t0 CROSS JOIN v0 ON DATETIME(((v0.c0)<<(t0.c0)), CASE t0.c0  WHEN t0.c2 THEN v0.c0 END, CASE WHEN v0.c0 THEN t0.c2 ELSE t0.c0 END) WHERE (t0.c2) UNION SELECT DISTINCT * FROM t0 CROSS JOIN v0 ON DATETIME(((v0.c0)<<(t0.c0)), CASE t0.c0  WHEN t0.c2 THEN v0.c0 END, CASE WHEN v0.c0 THEN t0.c2 ELSE t0.c0 END) WHERE ((NOT (t0.c2))) UNION SELECT DISTINCT * FROM t0 CROSS JOIN v0 ON DATETIME(((v0.c0)<<(t0.c0)), CASE t0.c0  WHEN t0.c2 THEN v0.c0 END, CASE WHEN v0.c0 THEN t0.c2 ELSE t0.c0 END) WHERE (((t0.c2) ISNULL));
SELECT DISTINCT * FROM t0 CROSS JOIN v0 ON DATETIME(((v0.c0)<<(t0.c0)), CASE t0.c0  WHEN t0.c2 THEN v0.c0 END, CASE WHEN v0.c0 THEN t0.c2 ELSE t0.c0 END);
SELECT ALL v0.c0, t1.c0 FROM t1, v0 GROUP BY v0.c0, t1.c0;
SELECT v0.c0, t1.c0 FROM t1, v0 WHERE (CASE WHEN CAST(t1.c0 AS REAL) THEN x'ad85' COLLATE RTRIM WHEN SQLITE_SOURCE_ID() THEN v0.c0 WHEN t1.c0 THEN LIKELY(v0.c0) END) GROUP BY v0.c0, t1.c0 UNION SELECT ALL v0.c0, t1.c0 FROM t1, v0 WHERE ((NOT (CASE WHEN CAST(t1.c0 AS REAL) THEN x'ad85' COLLATE RTRIM WHEN SQLITE_SOURCE_ID() THEN v0.c0 WHEN t1.c0 THEN LIKELY(v0.c0) END))) GROUP BY v0.c0, t1.c0 UNION SELECT v0.c0, t1.c0 FROM t1, v0 WHERE (((CASE WHEN CAST(t1.c0 AS REAL) THEN x'ad85' COLLATE RTRIM WHEN SQLITE_SOURCE_ID() THEN v0.c0 WHEN t1.c0 THEN LIKELY(v0.c0) END) ISNULL)) GROUP BY v0.c0, t1.c0;
SELECT ALL v0.c0, t1.c0 FROM t1, v0 GROUP BY v0.c0, t1.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING AVG((MIN(v0.c0) IN (MAX(MIN('-196758780'))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (AVG((MIN(v0.c0) IN (MAX(MIN('-196758780'))))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((AVG((MIN(v0.c0) IN (MAX(MIN('-196758780')))))) ISNULL);
SELECT ALL t0.c1, t0.c0, t1.c0, t0.c2 FROM t0 LEFT OUTER JOIN v0 ON UNLIKELY(CASE '}'  WHEN t1.c0 THEN t0.c1 WHEN t0.c0 THEN t0.c1 WHEN v0.c0 THEN v0.c0 ELSE t0.c2 END) INNER JOIN t1 ON (+ (CASE WHEN t0.c0 THEN v0.c0 END));
SELECT DISTINCT t0.c1, t0.c0, v0.c0 FROM t0, t1, v0;
SELECT DISTINCT t0.c1, t0.c0, v0.c0 FROM t0, t1, v0 WHERE ('-1778782102') UNION SELECT DISTINCT t0.c1, t0.c0, v0.c0 FROM t0, t1, v0 WHERE ((NOT ('-1778782102'))) UNION SELECT DISTINCT t0.c1, t0.c0, v0.c0 FROM t0, t1, v0 WHERE ((('-1778782102') ISNULL));
SELECT DISTINCT t0.c1, t0.c0, v0.c0 FROM t0, t1, v0;
SELECT v0.c0 FROM v0, t1 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, t1 WHERE (((CAST(v0.c0 AS INTEGER))<>(((v0.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, t1 WHERE ((NOT (((CAST(v0.c0 AS INTEGER))!=(((v0.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, t1 WHERE (((((CAST(v0.c0 AS INTEGER))<>(((v0.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0, t1 GROUP BY v0.c0;
SELECT t1.c0 FROM t1, t0 LEFT OUTER JOIN v0 ON (((v0.c0 IN ()))<=((t0.c0 IN ()))) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1, t0 LEFT OUTER JOIN v0 ON (((v0.c0 IN ()))<=((t0.c0 IN ()))) GROUP BY t1.c0 HAVING COUNT(*) COLLATE NOCASE UNION ALL SELECT t1.c0 FROM t1, t0 LEFT OUTER JOIN v0 ON (((v0.c0 IN ()))<=((t0.c0 IN ()))) GROUP BY t1.c0 HAVING (NOT (COUNT(*) COLLATE NOCASE)) UNION ALL SELECT ALL t1.c0 FROM t1, t0 LEFT OUTER JOIN v0 ON (((v0.c0 IN ()))<=((t0.c0 IN ()))) GROUP BY t1.c0 HAVING ((COUNT(*) COLLATE NOCASE) ISNULL);
SELECT t1.c0 FROM t1, t0 LEFT OUTER JOIN v0 ON (((v0.c0 IN ()))<=((t0.c0 IN ()))) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1, t0 LEFT OUTER JOIN v0 ON (((v0.c0 IN ()))<=((t0.c0 IN ()))) GROUP BY t1.c0 HAVING COUNT(*) COLLATE NOCASE UNION ALL SELECT t1.c0 FROM t1, t0 LEFT OUTER JOIN v0 ON (((v0.c0 IN ()))<=((t0.c0 IN ()))) GROUP BY t1.c0 HAVING (NOT (COUNT(*) COLLATE NOCASE)) UNION ALL SELECT ALL t1.c0 FROM t1, t0 LEFT OUTER JOIN v0 ON (((v0.c0 IN ()))<=((t0.c0 IN ()))) GROUP BY t1.c0 HAVING ((COUNT(*) COLLATE NOCASE) ISNULL);
SELECT t1.c0 FROM t1, t0 LEFT OUTER JOIN v0 ON (((v0.c0 IN ()))<=((t0.c0 IN ()))) GROUP BY t1.c0;
SELECT ALL t0.c2, t0.c1 FROM t1, t0, v0;
SELECT t0.c2, t0.c1 FROM t1, t0, v0 WHERE ('.~') UNION ALL SELECT ALL t0.c2, t0.c1 FROM t1, t0, v0 WHERE ((NOT ('.~'))) UNION ALL SELECT ALL t0.c2, t0.c1 FROM t1, t0, v0 WHERE ((('.~') ISNULL));
SELECT ALL t0.c2, t0.c1 FROM t1, t0, v0;
SELECT DISTINCT * FROM t1 RIGHT OUTER JOIN t0 ON t0.c0;
SELECT DISTINCT * FROM t1 RIGHT OUTER JOIN t0 ON t0.c0 WHERE ((t0.c2 IN (((t0.c2)*(t0.c1))))) UNION SELECT DISTINCT * FROM t1 RIGHT OUTER JOIN t0 ON t0.c0 WHERE ((NOT ((t0.c2 IN (((t0.c2)*(t0.c1))))))) UNION SELECT DISTINCT * FROM t1 RIGHT OUTER JOIN t0 ON t0.c0 WHERE ((((t0.c2 IN (((t0.c2)*(t0.c1))))) ISNULL));
SELECT DISTINCT * FROM t1 RIGHT OUTER JOIN t0 ON t0.c0;
SELECT t0.c1, t1.c0, t0.c2, t0.c0 FROM t0, t1 GROUP BY t0.c1, t1.c0, t0.c2, t0.c0;
SELECT ALL t0.c1, t1.c0, t0.c2, t0.c0 FROM t0, t1 WHERE ((((t1.c0) IS TRUE) IN ((t1.c0 IN (t0.c1))))) GROUP BY t0.c1, t1.c0, t0.c2, t0.c0 UNION SELECT t0.c1, t1.c0, t0.c2, t0.c0 FROM t0, t1 WHERE ((NOT ((((t1.c0) IS TRUE) IN ((t1.c0 IN (t0.c1))))))) GROUP BY t0.c1, t1.c0, t0.c2, t0.c0 UNION SELECT t0.c1, t1.c0, t0.c2, t0.c0 FROM t0, t1 WHERE ((((((t1.c0) IS TRUE) IN ((t1.c0 IN (t0.c1))))) ISNULL)) GROUP BY t0.c1, t1.c0, t0.c2, t0.c0;
SELECT t0.c1, t1.c0, t0.c2, t0.c0 FROM t0, t1 GROUP BY t0.c1, t1.c0, t0.c2, t0.c0;
SELECT t0.c0 FROM t0, t1 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, t1 GROUP BY t0.c0 HAVING MAX(((t1.c0)<(t0.c1))) UNION ALL SELECT t0.c0 FROM t0, t1 GROUP BY t0.c0 HAVING (NOT (MAX(((t1.c0)<(t0.c1))))) UNION ALL SELECT ALL t0.c0 FROM t0, t1 GROUP BY t0.c0 HAVING ((MAX(((t1.c0)<(t0.c1)))) ISNULL);
SELECT t0.c0 FROM t0, t1 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, t1 GROUP BY t0.c0 HAVING MAX(((t1.c0)<(t0.c1))) UNION ALL SELECT t0.c0 FROM t0, t1 GROUP BY t0.c0 HAVING (NOT (MAX(((t1.c0)<(t0.c1))))) UNION ALL SELECT ALL t0.c0 FROM t0, t1 GROUP BY t0.c0 HAVING ((MAX(((t1.c0)<(t0.c1)))) ISNULL);
SELECT t0.c0 FROM t0, t1 GROUP BY t0.c0;
SELECT ALL v0.c0 FROM t1 INNER JOIN t0 ON ((x'') IS FALSE) LEFT OUTER JOIN v0 ON ((v0.c0 COLLATE RTRIM) NOT BETWEEN (((v0.c0) NOT BETWEEN (t0.c2) AND (t0.c0))) AND (CASE WHEN t1.c0 THEN t0.c2 END));
SELECT ALL v0.c0 FROM t1 INNER JOIN t0 ON ((x'') IS FALSE) LEFT OUTER JOIN v0 ON ((v0.c0 COLLATE RTRIM) NOT BETWEEN (((v0.c0) NOT BETWEEN (t0.c2) AND (t0.c0))) AND (CASE WHEN t1.c0 THEN t0.c2 END)) WHERE ((((t0.c0 IN ())) BETWEEN (CAST(t1.c0 AS NUMERIC)) AND (((t0.c2) IS TRUE)))) UNION ALL SELECT v0.c0 FROM t1 INNER JOIN t0 ON ((x'') IS FALSE) LEFT OUTER JOIN v0 ON ((v0.c0 COLLATE RTRIM) NOT BETWEEN (((v0.c0) NOT BETWEEN (t0.c2) AND (t0.c0))) AND (CASE WHEN t1.c0 THEN t0.c2 END)) WHERE ((NOT ((((t0.c0 IN ())) BETWEEN (CAST(t1.c0 AS NUMERIC)) AND (((t0.c2) IS TRUE)))))) UNION ALL SELECT v0.c0 FROM t1 INNER JOIN t0 ON ((x'') IS FALSE) LEFT OUTER JOIN v0 ON ((v0.c0 COLLATE RTRIM) NOT BETWEEN (((v0.c0) NOT BETWEEN (t0.c2) AND (t0.c0))) AND (CASE WHEN t1.c0 THEN t0.c2 END)) WHERE ((((((t0.c0 IN ())) BETWEEN (CAST(t1.c0 AS NUMERIC)) AND (((t0.c2) IS TRUE)))) ISNULL));
SELECT ALL v0.c0 FROM t1 INNER JOIN t0 ON ((x'') IS FALSE) LEFT OUTER JOIN v0 ON ((v0.c0 COLLATE RTRIM) NOT BETWEEN (((v0.c0) NOT BETWEEN (t0.c2) AND (t0.c0))) AND (CASE WHEN t1.c0 THEN t0.c2 END));
SELECT DISTINCT t0.c1, v0.c0, t1.c0, t0.c0 FROM v0, t1, t0;
SELECT DISTINCT t0.c1, v0.c0, t1.c0, t0.c0 FROM v0, t1, t0 WHERE (t1.c0) UNION SELECT DISTINCT t0.c1, v0.c0, t1.c0, t0.c0 FROM v0, t1, t0 WHERE ((NOT (t1.c0))) UNION SELECT DISTINCT t0.c1, v0.c0, t1.c0, t0.c0 FROM v0, t1, t0 WHERE (((t1.c0) ISNULL));
SELECT DISTINCT t0.c1, v0.c0, t1.c0, t0.c0 FROM v0, t1, t0;
SELECT ALL t0.c1, t0.c2 FROM t0 GROUP BY t0.c1, t0.c2;
SELECT ALL t0.c1, t0.c2 FROM t0 WHERE (t0.c1) GROUP BY t0.c1, t0.c2 UNION SELECT t0.c1, t0.c2 FROM t0 WHERE ((NOT (t0.c1))) GROUP BY t0.c1, t0.c2 UNION SELECT ALL t0.c1, t0.c2 FROM t0 WHERE (((t0.c1) ISNULL)) GROUP BY t0.c1, t0.c2;
SELECT ALL t0.c1, t0.c2 FROM t0 GROUP BY t0.c1, t0.c2;
SELECT ALL t0.c1, t1.c0, t0.c0 FROM t1 NOT INDEXED, t0 GROUP BY t0.c1, t1.c0, t0.c0;
SELECT t0.c1, t1.c0, t0.c0 FROM t1, t0 GROUP BY t0.c1, t1.c0, t0.c0 HAVING ((((MIN(AVG(AVG(GROUP_CONCAT(t0.c1)))))AND(SUM(t1.c0))))AND((NOT (t1.c0)))) UNION ALL SELECT ALL t0.c1, t1.c0, t0.c0 FROM t1, t0 GROUP BY t0.c1, t1.c0, t0.c0 HAVING (NOT (((((MIN(AVG(AVG(GROUP_CONCAT(t0.c1)))))AND(SUM(t1.c0))))AND((NOT (t1.c0)))))) UNION ALL SELECT ALL t0.c1, t1.c0, t0.c0 FROM t1, t0 GROUP BY t0.c1, t1.c0, t0.c0 HAVING ((((((MIN(AVG(AVG(GROUP_CONCAT(t0.c1)))))AND(SUM(t1.c0))))AND((NOT (t1.c0))))) ISNULL);
SELECT t0.c0 FROM t1, t0;
SELECT ALL t0.c0 FROM t1, t0 WHERE ((((t1.c0, t0.c1, t1.c0)) BETWEEN ((t0.c1 COLLATE NOCASE, ((t0.c1)!=(t1.c0)), CAST(t0.c2 AS INTEGER))) AND ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c2)), (NOT (t0.c2)), NULLIF(DISTINCT t0.c0, t0.c0))))) UNION ALL SELECT ALL t0.c0 FROM t1, t0 WHERE ((NOT ((((t1.c0, t0.c1, t1.c0)) BETWEEN ((t0.c1 COLLATE NOCASE, ((t0.c1)<>(t1.c0)), CAST(t0.c2 AS INTEGER))) AND ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c2)), (NOT (t0.c2)), NULLIF(DISTINCT t0.c0, t0.c0))))))) UNION ALL SELECT t0.c0 FROM t1, t0 WHERE ((((((t1.c0, t0.c1, t1.c0)) BETWEEN ((t0.c1 COLLATE NOCASE, ((t0.c1)<>(t1.c0)), CAST(t0.c2 AS INTEGER))) AND ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c2)), (NOT (t0.c2)), NULLIF(DISTINCT t0.c0, t0.c0))))) ISNULL));
SELECT t0.c0 FROM t1, t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((t0.c0)LIKE(t0.c2)) COLLATE NOCASE) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((t0.c0)LIKE(t0.c2)) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM t0 WHERE (((((t0.c0)LIKE(t0.c2)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t1.c0, v0.c0 FROM t1, v0 GROUP BY t1.c0, v0.c0;
SELECT ALL t1.c0, v0.c0 FROM t1, v0 WHERE ((CASE ''  WHEN v0.c0 THEN t1.c0 END IN (((v0.c0) ISNULL)))) GROUP BY t1.c0, v0.c0 UNION SELECT t1.c0, v0.c0 FROM t1, v0 WHERE ((NOT ((CASE ''  WHEN v0.c0 THEN t1.c0 END IN (((v0.c0) ISNULL)))))) GROUP BY t1.c0, v0.c0 UNION SELECT t1.c0, v0.c0 FROM t1, v0 WHERE ((((CASE ''  WHEN v0.c0 THEN t1.c0 END IN (((v0.c0) ISNULL)))) ISNULL)) GROUP BY t1.c0, v0.c0;
SELECT t1.c0, v0.c0 FROM t1, v0 GROUP BY t1.c0, v0.c0;
SELECT ALL t0.c2 FROM t1, v0, t0 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t1, v0, t0 GROUP BY t0.c2 HAVING MIN(SUM(COUNT(*))) UNION ALL SELECT ALL t0.c2 FROM t1, v0, t0 GROUP BY t0.c2 HAVING (NOT (MIN(SUM(COUNT(*))))) UNION ALL SELECT ALL t0.c2 FROM t1, v0, t0 GROUP BY t0.c2 HAVING ((MIN(SUM(COUNT(*)))) ISNULL);
SELECT * FROM t1;
SELECT * FROM t1 WHERE (CASE WHEN '.' THEN ((t1.c0)LIKE(t1.c0)) END) UNION ALL SELECT ALL * FROM t1 WHERE ((NOT (CASE WHEN '.' THEN ((t1.c0)LIKE(t1.c0)) END))) UNION ALL SELECT * FROM t1 WHERE (((CASE WHEN '.' THEN ((t1.c0)LIKE(t1.c0)) END) ISNULL));
SELECT * FROM t1;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE ((((CAST(t0.c2 AS REAL), ((t0.c2) BETWEEN (t0.c2) AND (t0.c0)), NULL COLLATE RTRIM))<=((((x'3827')>=(t0.c1)), ((t0.c0) BETWEEN (t0.c0) AND (t0.c2)), (t0.c0 IN ()))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT ((((CAST(t0.c2 AS REAL), ((t0.c2) BETWEEN (t0.c2) AND (t0.c0)), NULL COLLATE RTRIM))<=((((x'3827')>=(t0.c1)), ((t0.c0) BETWEEN (t0.c0) AND (t0.c2)), (t0.c0 IN ()))))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((((((CAST(t0.c2 AS REAL), ((t0.c2) BETWEEN (t0.c2) AND (t0.c0)), NULL COLLATE RTRIM))<=((((x'3827')>=(t0.c1)), ((t0.c0) BETWEEN (t0.c0) AND (t0.c2)), (t0.c0 IN ()))))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT t0.c1, v0.c0, t1.c0 FROM t0, t1, v0 GROUP BY t0.c1, v0.c0, t1.c0;
SELECT ALL t0.c1, v0.c0, t1.c0 FROM t0, t1, v0 WHERE (v0.c0) GROUP BY t0.c1, v0.c0, t1.c0 UNION SELECT ALL t0.c1, v0.c0, t1.c0 FROM t0, t1, v0 WHERE ((NOT (v0.c0))) GROUP BY t0.c1, v0.c0, t1.c0 UNION SELECT t0.c1, v0.c0, t1.c0 FROM t0, t1, v0 WHERE (((v0.c0) ISNULL)) GROUP BY t0.c1, v0.c0, t1.c0;
SELECT t0.c1, v0.c0, t1.c0 FROM t0, t1, v0 GROUP BY t0.c1, v0.c0, t1.c0;
SELECT v0.c0, t0.c1, t0.c0, t0.c2 FROM v0, t0 GROUP BY v0.c0, t0.c1, t0.c0, t0.c2;
SELECT v0.c0, t0.c1, t0.c0, t0.c2 FROM v0, t0 GROUP BY v0.c0, t0.c1, t0.c0, t0.c2 HAVING ((SUM(MIN(v0.c0)))!=(SQLITE_COMPILEOPTION_USED(t0.c2))) UNION ALL SELECT ALL v0.c0, t0.c1, t0.c0, t0.c2 FROM v0, t0 GROUP BY v0.c0, t0.c1, t0.c0, t0.c2 HAVING (NOT (((SUM(MIN(v0.c0)))!=(SQLITE_COMPILEOPTION_USED(t0.c2))))) UNION ALL SELECT v0.c0, t0.c1, t0.c0, t0.c2 FROM v0, t0 GROUP BY v0.c0, t0.c1, t0.c0, t0.c2 HAVING ((((SUM(MIN(v0.c0)))<>(SQLITE_COMPILEOPTION_USED(t0.c2)))) ISNULL);
SELECT ALL * FROM t1, t0, v0;
SELECT * FROM t1, t0, v0 WHERE ((((t0.c0 IN ())) BETWEEN ((((t1.c0))<=((t0.c0)))) AND (CAST(t0.c0 AS INTEGER)))) UNION ALL SELECT * FROM t1, t0, v0 WHERE ((NOT ((((t0.c0 IN ())) BETWEEN ((((t1.c0))<=((t0.c0)))) AND (CAST(t0.c0 AS INTEGER)))))) UNION ALL SELECT * FROM t1, t0, v0 WHERE ((((((t0.c0 IN ())) BETWEEN ((((t1.c0))<=((t0.c0)))) AND (CAST(t0.c0 AS INTEGER)))) ISNULL));
SELECT ALL * FROM t1, t0, v0;
SELECT DISTINCT t0.c2, t0.c0, t0.c1 FROM t0, v0;
SELECT DISTINCT t0.c2, t0.c0, t0.c1 FROM t0, v0 WHERE (((((CAST(t0.c0 AS REAL))AND(0.5561765168426772)))OR(((t0.c0)+(v0.c0))))) UNION SELECT DISTINCT t0.c2, t0.c0, t0.c1 FROM t0, v0 WHERE ((NOT (((((CAST(t0.c0 AS REAL))AND(0.5561765168426772)))OR(((t0.c0)+(v0.c0))))))) UNION SELECT DISTINCT t0.c2, t0.c0, t0.c1 FROM t0, v0 WHERE (((((((CAST(t0.c0 AS REAL))AND(0.5561765168426772)))OR(((t0.c0)+(v0.c0))))) ISNULL));
SELECT DISTINCT t0.c2, t0.c0, t0.c1 FROM t0, v0;
SELECT v0.c0, t0.c2, t0.c0, t0.c1, t1.c0 FROM v0, t0, t1 GROUP BY v0.c0, t0.c2, t0.c0, t0.c1, t1.c0;
SELECT ALL v0.c0, t0.c2, t0.c0, t0.c1, t1.c0 FROM v0, t0, t1 WHERE ((((t0.c2)) BETWEEN ((((t0.c0)!=(t0.c1)))) AND ((v0.c0 COLLATE RTRIM)))) GROUP BY v0.c0, t0.c2, t0.c0, t0.c1, t1.c0 UNION SELECT v0.c0, t0.c2, t0.c0, t0.c1, t1.c0 FROM v0, t0, t1 WHERE ((NOT ((((t0.c2)) BETWEEN ((((t0.c0)<>(t0.c1)))) AND ((v0.c0 COLLATE RTRIM)))))) GROUP BY v0.c0, t0.c2, t0.c0, t0.c1, t1.c0 UNION SELECT v0.c0, t0.c2, t0.c0, t0.c1, t1.c0 FROM v0, t0, t1 WHERE ((((((t0.c2)) BETWEEN ((((t0.c0)!=(t0.c1)))) AND ((v0.c0 COLLATE RTRIM)))) ISNULL)) GROUP BY v0.c0, t0.c2, t0.c0, t0.c1, t1.c0;
SELECT v0.c0, t0.c2, t0.c0, t0.c1, t1.c0 FROM v0, t0, t1 GROUP BY v0.c0, t0.c2, t0.c0, t0.c1, t1.c0;
SELECT v0.c0 FROM t1 NATURAL JOIN v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM t1 NATURAL JOIN v0 GROUP BY v0.c0 HAVING AVG(CASE t1.c0  WHEN '1312741338' THEN v0.c0 END) UNION ALL SELECT v0.c0 FROM t1 NATURAL JOIN v0 GROUP BY v0.c0 HAVING (NOT (AVG(CASE t1.c0  WHEN '1312741338' THEN v0.c0 END))) UNION ALL SELECT v0.c0 FROM t1 NATURAL JOIN v0 GROUP BY v0.c0 HAVING ((AVG(CASE t1.c0  WHEN '1312741338' THEN v0.c0 END)) ISNULL);
SELECT v0.c0 FROM t1 NATURAL JOIN v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM t1 NATURAL JOIN v0 GROUP BY v0.c0 HAVING AVG(CASE t1.c0  WHEN '1312741338' THEN v0.c0 END) UNION ALL SELECT v0.c0 FROM t1 NATURAL JOIN v0 GROUP BY v0.c0 HAVING (NOT (AVG(CASE t1.c0  WHEN '1312741338' THEN v0.c0 END))) UNION ALL SELECT v0.c0 FROM t1 NATURAL JOIN v0 GROUP BY v0.c0 HAVING ((AVG(CASE t1.c0  WHEN '1312741338' THEN v0.c0 END)) ISNULL);
SELECT v0.c0 FROM t1 NATURAL JOIN v0 GROUP BY v0.c0;
SELECT t1.c0 FROM v0, t1;
SELECT ALL t1.c0 FROM v0, t1 WHERE (((t1.c0) ISNULL)) UNION ALL SELECT ALL t1.c0 FROM v0, t1 WHERE ((NOT (((t1.c0) ISNULL)))) UNION ALL SELECT t1.c0 FROM v0, t1 WHERE (((((t1.c0) ISNULL)) ISNULL));
SELECT t1.c0 FROM v0, t1;
SELECT DISTINCT t0.c0 FROM t0, v0;
SELECT DISTINCT t0.c0 FROM t0, v0 WHERE (((((((v0.c0)AND(t0.c1)))AND(t0.c1))) NOT BETWEEN (CASE WHEN v0.c0 THEN t0.c0 WHEN v0.c0 THEN t0.c1 WHEN NULL THEN v0.c0 ELSE t0.c1 END) AND (NULL))) UNION SELECT DISTINCT t0.c0 FROM t0, v0 WHERE ((NOT (((((((v0.c0)AND(t0.c1)))AND(t0.c1))) NOT BETWEEN (CASE WHEN v0.c0 THEN t0.c0 WHEN v0.c0 THEN t0.c1 WHEN NULL THEN v0.c0 ELSE t0.c1 END) AND (NULL))))) UNION SELECT DISTINCT t0.c0 FROM t0, v0 WHERE (((((((((v0.c0)AND(t0.c1)))AND(t0.c1))) NOT BETWEEN (CASE WHEN v0.c0 THEN t0.c0 WHEN v0.c0 THEN t0.c1 WHEN NULL THEN v0.c0 ELSE t0.c1 END) AND (NULL))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0, v0;
SELECT ALL v0.c0, t1.c0 FROM v0 CROSS JOIN t1 ON ((((v0.c0)-(v0.c0)))%(((v0.c0)<>(t1.c0)))) GROUP BY v0.c0, t1.c0;
SELECT v0.c0, t1.c0 FROM v0 CROSS JOIN t1 ON ((((v0.c0)-(v0.c0)))%(((v0.c0)!=(t1.c0)))) WHERE (v0.c0) GROUP BY v0.c0, t1.c0 UNION SELECT v0.c0, t1.c0 FROM v0 CROSS JOIN t1 ON ((((v0.c0)-(v0.c0)))%(((v0.c0)!=(t1.c0)))) WHERE ((NOT (v0.c0))) GROUP BY v0.c0, t1.c0 UNION SELECT v0.c0, t1.c0 FROM v0 CROSS JOIN t1 ON ((((v0.c0)-(v0.c0)))%(((v0.c0)<>(t1.c0)))) WHERE (((v0.c0) ISNULL)) GROUP BY v0.c0, t1.c0;
SELECT ALL v0.c0, t1.c0 FROM v0 CROSS JOIN t1 ON ((((v0.c0)-(v0.c0)))%(((v0.c0)<>(t1.c0)))) GROUP BY v0.c0, t1.c0;
SELECT t0.c1, t0.c2, t0.c0 FROM t0 GROUP BY t0.c1, t0.c2, t0.c0;
SELECT ALL t0.c1, t0.c2, t0.c0 FROM t0 GROUP BY t0.c1, t0.c2, t0.c0 HAVING MAX(TOTAL(t0.c0)) COLLATE NOCASE UNION ALL SELECT t0.c1, t0.c2, t0.c0 FROM t0 GROUP BY t0.c1, t0.c2, t0.c0 HAVING (NOT (MAX(TOTAL(t0.c0)) COLLATE NOCASE)) UNION ALL SELECT t0.c1, t0.c2, t0.c0 FROM t0 GROUP BY t0.c1, t0.c2, t0.c0 HAVING ((MAX(TOTAL(t0.c0)) COLLATE NOCASE) ISNULL);
SELECT ALL TOTAL(((t1.c0) BETWEEN (x'') AND (t1.c0)) COLLATE BINARY) FROM t1 ORDER BY CASE ((t1.c0) BETWEEN (t1.c0) AND (t1.c0))  WHEN (((t1.c0))!=((t1.c0))) THEN (('-242657752')||(t1.c0)) WHEN (((t1.c0))>=((t1.c0))) THEN (t1.c0 IN (t1.c0)) WHEN ((t1.c0) NOTNULL) THEN t1.c0 COLLATE BINARY END DESC;
SELECT ALL v0.c0 FROM v0 FULL OUTER JOIN t0 ON (((t0.c0 COLLATE BINARY))!=(((((v0.c0, v0.c0, t0.c0)) NOT BETWEEN (('', v0.c0, v0.c0)) AND ((NULL, 'M{33', t1.c0)))))) CROSS JOIN t1 ON (((t0.c1 COLLATE BINARY))>((((t1.c0) ISNULL))));
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (CAST(IFNULL(v0.c0, v0.c0) AS NUMERIC)) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (CAST(IFNULL(v0.c0, v0.c0) AS NUMERIC)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((CAST(IFNULL(v0.c0, v0.c0) AS NUMERIC)) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL t0.c2, t1.c0 FROM t0, t1, v0 GROUP BY t0.c2, t1.c0;
SELECT t0.c2, t1.c0 FROM t0, t1, v0 WHERE (CAST(t0.c1 AS NUMERIC)) GROUP BY t0.c2, t1.c0 UNION SELECT ALL t0.c2, t1.c0 FROM t0, t1, v0 WHERE ((NOT (CAST(t0.c1 AS NUMERIC)))) GROUP BY t0.c2, t1.c0 UNION SELECT ALL t0.c2, t1.c0 FROM t0, t1, v0 WHERE (((CAST(t0.c1 AS NUMERIC)) ISNULL)) GROUP BY t0.c2, t1.c0;
SELECT ALL t0.c2, t1.c0 FROM t0, t1, v0 GROUP BY t0.c2, t1.c0;
SELECT ALL t0.c1 FROM t1, v0, t0 GROUP BY t0.c1;
SELECT t0.c1 FROM t1, v0, t0 GROUP BY t0.c1 HAVING (~ (ROUND(SUM(t0.c2), GROUP_CONCAT('')))) UNION ALL SELECT t0.c1 FROM t1, v0, t0 GROUP BY t0.c1 HAVING (NOT ((~ (ROUND(SUM(t0.c2), GROUP_CONCAT('')))))) UNION ALL SELECT t0.c1 FROM t1, v0, t0 GROUP BY t0.c1 HAVING (((~ (ROUND(SUM(t0.c2), GROUP_CONCAT(''))))) ISNULL);
SELECT ALL t0.c1 FROM t1, v0, t0 GROUP BY t0.c1;
SELECT t0.c1 FROM t1, v0, t0 GROUP BY t0.c1 HAVING (~ (ROUND(SUM(t0.c2), GROUP_CONCAT('')))) UNION ALL SELECT t0.c1 FROM t1, v0, t0 GROUP BY t0.c1 HAVING (NOT ((~ (ROUND(SUM(t0.c2), GROUP_CONCAT('')))))) UNION ALL SELECT t0.c1 FROM t1, v0, t0 GROUP BY t0.c1 HAVING (((~ (ROUND(SUM(t0.c2), GROUP_CONCAT(''))))) ISNULL);
SELECT ALL t0.c1 FROM t1, v0, t0 GROUP BY t0.c1;
SELECT t1.c0 FROM t1;
SELECT t1.c0 FROM t1 WHERE (ABS(DISTINCT ((t1.c0)<<(t1.c0)))) UNION ALL SELECT ALL t1.c0 FROM t1 WHERE ((NOT (ABS(DISTINCT ((t1.c0)<<(t1.c0)))))) UNION ALL SELECT ALL t1.c0 FROM t1 WHERE (((ABS(DISTINCT ((t1.c0)<<(t1.c0)))) ISNULL));
SELECT t1.c0 FROM t1;
SELECT DISTINCT t0.c2 FROM t0;
SELECT DISTINCT t0.c2 FROM t0 WHERE (x'') UNION SELECT DISTINCT t0.c2 FROM t0 WHERE ((NOT (x''))) UNION SELECT DISTINCT t0.c2 FROM t0 WHERE (((x'') ISNULL));
SELECT DISTINCT t0.c2 FROM t0;
SELECT t0.c2 FROM t0, t1, v0 GROUP BY t0.c2;
SELECT t0.c2 FROM t0, t1, v0 WHERE (NULL COLLATE NOCASE) GROUP BY t0.c2 UNION SELECT ALL t0.c2 FROM t0, t1, v0 WHERE ((NOT (NULL COLLATE NOCASE))) GROUP BY t0.c2 UNION SELECT t0.c2 FROM t0, t1, v0 WHERE (((NULL COLLATE NOCASE) ISNULL)) GROUP BY t0.c2;
SELECT t0.c2 FROM t0, t1, v0 GROUP BY t0.c2;
SELECT t0.c0, v0.c0, t1.c0, t0.c1 FROM v0, t1 INNER JOIN t0 ON 0.4750411978336636 GROUP BY t0.c0, v0.c0, t1.c0, t0.c1;
SELECT t0.c0, v0.c0, t1.c0, t0.c1 FROM v0, t1 INNER JOIN t0 ON 0.4750411978336636 GROUP BY t0.c0, v0.c0, t1.c0, t0.c1 HAVING COUNT(*) UNION ALL SELECT t0.c0, v0.c0, t1.c0, t0.c1 FROM v0, t1 INNER JOIN t0 ON 0.4750411978336636 GROUP BY t0.c0, v0.c0, t1.c0, t0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c0, v0.c0, t1.c0, t0.c1 FROM v0, t1 INNER JOIN t0 ON 0.4750411978336636 GROUP BY t0.c0, v0.c0, t1.c0, t0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0, v0.c0, t1.c0, t0.c1 FROM v0, t1 INNER JOIN t0 ON 0.4750411978336636 GROUP BY t0.c0, v0.c0, t1.c0, t0.c1;
SELECT t0.c0, v0.c0, t1.c0, t0.c1 FROM v0, t1 INNER JOIN t0 ON 0.4750411978336636 GROUP BY t0.c0, v0.c0, t1.c0, t0.c1 HAVING COUNT(*) UNION ALL SELECT t0.c0, v0.c0, t1.c0, t0.c1 FROM v0, t1 INNER JOIN t0 ON 0.4750411978336636 GROUP BY t0.c0, v0.c0, t1.c0, t0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c0, v0.c0, t1.c0, t0.c1 FROM v0, t1 INNER JOIN t0 ON 0.4750411978336636 GROUP BY t0.c0, v0.c0, t1.c0, t0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0, v0.c0, t1.c0, t0.c1 FROM v0, t1 INNER JOIN t0 ON 0.4750411978336636 GROUP BY t0.c0, v0.c0, t1.c0, t0.c1;
SELECT t1.c0, t0.c0, t0.c2, t0.c1, v0.c0 FROM t0, v0, t1;
SELECT t1.c0, t0.c0, t0.c2, t0.c1, v0.c0 FROM t0, v0, t1 WHERE ('158565912') UNION ALL SELECT t1.c0, t0.c0, t0.c2, t0.c1, v0.c0 FROM t0, v0, t1 WHERE ((NOT ('158565912'))) UNION ALL SELECT ALL t1.c0, t0.c0, t0.c2, t0.c1, v0.c0 FROM t0, v0, t1 WHERE ((('158565912') ISNULL));
SELECT t1.c0, t0.c0, t0.c2, t0.c1, v0.c0 FROM t0, v0, t1;
SELECT DISTINCT * FROM t1 FULL OUTER JOIN v0 ON CAST('-1' AS TEXT);
SELECT DISTINCT * FROM t1 FULL OUTER JOIN v0 ON CAST('-1' AS TEXT) WHERE (((((((v0.c0, '1656149077', t1.c0)) NOT BETWEEN ((t1.c0, NULL, v0.c0)) AND ((t1.c0, v0.c0, v0.c0)))))<>((((t1.c0)AND(t1.c0)))))) UNION SELECT DISTINCT * FROM t1 FULL OUTER JOIN v0 ON CAST('-1' AS TEXT) WHERE ((NOT (((((((v0.c0, '1656149077', t1.c0)) NOT BETWEEN ((t1.c0, NULL, v0.c0)) AND ((t1.c0, v0.c0, v0.c0)))))<>((((t1.c0)AND(t1.c0)))))))) UNION SELECT DISTINCT * FROM t1 FULL OUTER JOIN v0 ON CAST('-1' AS TEXT) WHERE (((((((((v0.c0, '1656149077', t1.c0)) NOT BETWEEN ((t1.c0, NULL, v0.c0)) AND ((t1.c0, v0.c0, v0.c0)))))<>((((t1.c0)AND(t1.c0)))))) ISNULL));
SELECT DISTINCT * FROM t1 FULL OUTER JOIN v0 ON CAST('-1' AS TEXT);
SELECT t1.c0 FROM t1 NOT INDEXED, v0 GROUP BY t1.c0;
SELECT t1.c0 FROM t1, v0 WHERE (((- (v0.c0)) IN ())) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1, v0 WHERE ((NOT (((- (v0.c0)) IN ())))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1, v0 WHERE (((((- (v0.c0)) IN ())) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 NOT INDEXED, v0 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING json_object(COUNT(*), TOTAL(MAX(GROUP_CONCAT(t1.c0))), ((t1.c0) BETWEEN (COUNT(TOTAL(t1.c0))) AND (t1.c0)), SUM(AVG(t1.c0))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (json_object(COUNT(*), TOTAL(MAX(GROUP_CONCAT(t1.c0))), ((t1.c0) BETWEEN (COUNT(TOTAL(t1.c0))) AND (t1.c0)), SUM(AVG(t1.c0))))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((json_object(COUNT(*), TOTAL(MAX(GROUP_CONCAT(t1.c0))), ((t1.c0) BETWEEN (COUNT(TOTAL(t1.c0))) AND (t1.c0)), SUM(AVG(t1.c0)))) ISNULL);
SELECT * FROM v0, t0 LEFT OUTER JOIN t1 ON (((((0.4144953825223924)<(t0.c1))))<=((0.6606657108987669)));
SELECT ALL * FROM v0, t0 LEFT OUTER JOIN t1 ON (((((0.4144953825223924)<(t0.c1))))<=((0.6606657108987669))) WHERE (((v0.c0 COLLATE BINARY) IS TRUE)) UNION ALL SELECT ALL * FROM v0, t0 LEFT OUTER JOIN t1 ON (((((0.4144953825223924)<(t0.c1))))<=((0.6606657108987669))) WHERE ((NOT (((v0.c0 COLLATE BINARY) IS TRUE)))) UNION ALL SELECT ALL * FROM v0, t0 LEFT OUTER JOIN t1 ON (((((0.4144953825223924)<(t0.c1))))<=((0.6606657108987669))) WHERE (((((v0.c0 COLLATE BINARY) IS TRUE)) ISNULL));
SELECT * FROM v0, t0 LEFT OUTER JOIN t1 ON (((((0.4144953825223924)<(t0.c1))))<=((0.6606657108987669)));
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE (CASE ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))  WHEN ((t1.c0) NOT NULL) THEN ((t1.c0) NOTNULL) WHEN ((t1.c0) IS TRUE) THEN ((t1.c0) IS FALSE) WHEN ((((((((t1.c0)AND(t1.c0)))AND(x'')))AND(t1.c0)))AND(t1.c0)) THEN CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END ELSE NULLIF(DISTINCT t1.c0, t1.c0) END) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT (CASE ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))  WHEN ((t1.c0) NOT NULL) THEN ((t1.c0) NOTNULL) WHEN ((t1.c0) IS TRUE) THEN ((t1.c0) IS FALSE) WHEN ((((((((t1.c0)AND(t1.c0)))AND(x'')))AND(t1.c0)))AND(t1.c0)) THEN CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END ELSE NULLIF(DISTINCT t1.c0, t1.c0) END))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE (((CASE ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))  WHEN ((t1.c0) NOT NULL) THEN ((t1.c0) NOTNULL) WHEN ((t1.c0) IS TRUE) THEN ((t1.c0) IS FALSE) WHEN ((((((((t1.c0)AND(t1.c0)))AND(x'')))AND(t1.c0)))AND(t1.c0)) THEN CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END ELSE NULLIF(DISTINCT t1.c0, t1.c0) END) ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE (((t1.c0 COLLATE BINARY)<<(((t1.c0) NOT NULL)))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT (((t1.c0 COLLATE BINARY)<<(((t1.c0) NOT NULL)))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE (((((t1.c0 COLLATE BINARY)<<(((t1.c0) NOT NULL)))) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL v0.c0, t0.c1, t0.c0, t1.c0, t0.c2 FROM t1, v0, t0 GROUP BY v0.c0, t0.c1, t0.c0, t1.c0, t0.c2;
SELECT ALL v0.c0, t0.c1, t0.c0, t1.c0, t0.c2 FROM t1, v0, t0 GROUP BY v0.c0, t0.c1, t0.c0, t1.c0, t0.c2 HAVING SUM(MAX(MAX(COUNT(*)))) UNION ALL SELECT v0.c0, t0.c1, t0.c0, t1.c0, t0.c2 FROM t1, v0, t0 GROUP BY v0.c0, t0.c1, t0.c0, t1.c0, t0.c2 HAVING (NOT (SUM(MAX(MAX(COUNT(*)))))) UNION ALL SELECT ALL v0.c0, t0.c1, t0.c0, t1.c0, t0.c2 FROM t1, v0, t0 GROUP BY v0.c0, t0.c1, t0.c0, t1.c0, t0.c2 HAVING ((SUM(MAX(MAX(COUNT(*))))) ISNULL);
SELECT ALL t0.c1, t0.c0 FROM t0;
SELECT ALL t0.c1, t0.c0 FROM t0 WHERE ((((- (t0.c0)))&(CAST(t0.c0 AS REAL)))) UNION ALL SELECT t0.c1, t0.c0 FROM t0 WHERE ((NOT ((((- (t0.c0)))&(CAST(t0.c0 AS REAL)))))) UNION ALL SELECT ALL t0.c1, t0.c0 FROM t0 WHERE ((((((- (t0.c0)))&(CAST(t0.c0 AS REAL)))) ISNULL));
SELECT ALL t0.c1, t0.c0 FROM t0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (highlight((+ (v0.c0)), v0.c0, v0.c0, ((((((((v0.c0)OR(v0.c0)))OR(x'a757')))OR(v0.c0)))OR(v0.c0)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (highlight((+ (v0.c0)), v0.c0, v0.c0, ((((((((v0.c0)OR(v0.c0)))OR(x'a757')))OR(v0.c0)))OR(v0.c0)))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((highlight((+ (v0.c0)), v0.c0, v0.c0, ((((((((v0.c0)OR(v0.c0)))OR(x'a757')))OR(v0.c0)))OR(v0.c0)))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((((((v0.c0 IN ()))AND((v0.c0 IN ()))))OR(v0.c0 COLLATE RTRIM))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((((v0.c0 IN ()))AND((v0.c0 IN ()))))OR(v0.c0 COLLATE RTRIM))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((((((v0.c0 IN ()))AND((v0.c0 IN ()))))OR(v0.c0 COLLATE RTRIM))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL t0.c0, t0.c1, t1.c0, t0.c2 FROM t0, t1, v0 GROUP BY t0.c0, t0.c1, t1.c0, t0.c2;
SELECT t0.c0, t0.c1, t1.c0, t0.c2 FROM t0, t1, v0 GROUP BY t0.c0, t0.c1, t1.c0, t0.c2 HAVING SUM(NULL) UNION ALL SELECT t0.c0, t0.c1, t1.c0, t0.c2 FROM t0, t1, v0 GROUP BY t0.c0, t0.c1, t1.c0, t0.c2 HAVING (NOT (SUM(NULL))) UNION ALL SELECT t0.c0, t0.c1, t1.c0, t0.c2 FROM t0, t1, v0 GROUP BY t0.c0, t0.c1, t1.c0, t0.c2 HAVING ((SUM(NULL)) ISNULL);
SELECT ALL t0.c0, t0.c1, t1.c0, t0.c2 FROM t0, t1, v0 GROUP BY t0.c0, t0.c1, t1.c0, t0.c2;
SELECT t0.c0, t0.c1, t1.c0, t0.c2 FROM t0, t1, v0 GROUP BY t0.c0, t0.c1, t1.c0, t0.c2 HAVING SUM(NULL) UNION ALL SELECT t0.c0, t0.c1, t1.c0, t0.c2 FROM t0, t1, v0 GROUP BY t0.c0, t0.c1, t1.c0, t0.c2 HAVING (NOT (SUM(NULL))) UNION ALL SELECT t0.c0, t0.c1, t1.c0, t0.c2 FROM t0, t1, v0 GROUP BY t0.c0, t0.c1, t1.c0, t0.c2 HAVING ((SUM(NULL)) ISNULL);
SELECT ALL t0.c0, t0.c1, t1.c0, t0.c2 FROM t0, t1, v0 GROUP BY t0.c0, t0.c1, t1.c0, t0.c2;
SELECT t0.c2, v0.c0 FROM v0, t0;
SELECT ALL t0.c2, v0.c0 FROM v0, t0 WHERE ((((((t0.c0)AND(v0.c0)))OR(t0.c1)) IN (((v0.c0) BETWEEN (t0.c2) AND (NULL))))) UNION ALL SELECT t0.c2, v0.c0 FROM v0, t0 WHERE ((NOT ((((((t0.c0)AND(v0.c0)))OR(t0.c1)) IN (((v0.c0) BETWEEN (t0.c2) AND (NULL))))))) UNION ALL SELECT t0.c2, v0.c0 FROM v0, t0 WHERE ((((((((t0.c0)AND(v0.c0)))OR(t0.c1)) IN (((v0.c0) BETWEEN (t0.c2) AND (NULL))))) ISNULL));
SELECT t0.c2, v0.c0 FROM v0, t0;
SELECT DISTINCT * FROM v0, t0, t1;
SELECT DISTINCT * FROM v0, t0, t1 WHERE (t0.c1) UNION SELECT DISTINCT * FROM v0, t0, t1 WHERE ((NOT (t0.c1))) UNION SELECT DISTINCT * FROM v0, t0, t1 WHERE (((t0.c1) ISNULL));
SELECT DISTINCT * FROM v0, t0, t1;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE (((((t1.c0) IS FALSE))%(((((t1.c0)AND(t1.c0)))AND(t1.c0))))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT (((((t1.c0) IS FALSE))%(((((t1.c0)AND(t1.c0)))AND(t1.c0))))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE (((((((t1.c0) IS FALSE))%(((((t1.c0)AND(t1.c0)))AND(t1.c0))))) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING GROUP_CONCAT(TOTAL('DlYG^\n^R')) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (GROUP_CONCAT(TOTAL('DlYG^\n^R')))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((GROUP_CONCAT(TOTAL('DlYG^\n^R'))) ISNULL);
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE (CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) AS BLOB)) UNION ALL SELECT * FROM v0 WHERE ((NOT (CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) AS BLOB)))) UNION ALL SELECT * FROM v0 WHERE (((CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) AS BLOB)) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((((('j藶') NOT BETWEEN (t0.c2) AND (t0.c0)))LIKE((((t0.c1)) NOT BETWEEN ((t0.c1)) AND ((NULL)))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((((('j藶') NOT BETWEEN (t0.c2) AND (t0.c0)))LIKE((((t0.c1)) NOT BETWEEN ((t0.c1)) AND ((NULL)))))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((((('j藶') NOT BETWEEN (t0.c2) AND (t0.c0)))LIKE((((t0.c1)) NOT BETWEEN ((t0.c1)) AND ((NULL)))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c1, v0.c0, t0.c2, t0.c0 FROM t0, t1, v0 GROUP BY t0.c1, v0.c0, t0.c2, t0.c0;
SELECT ALL t0.c1, v0.c0, t0.c2, t0.c0 FROM t0, t1, v0 WHERE ((((((t0.c2)AND(v0.c0)))OR(t1.c0)) IN ())) GROUP BY t0.c1, v0.c0, t0.c2, t0.c0 UNION SELECT t0.c1, v0.c0, t0.c2, t0.c0 FROM t0, t1, v0 WHERE ((NOT ((((((t0.c2)AND(v0.c0)))OR(t1.c0)) IN ())))) GROUP BY t0.c1, v0.c0, t0.c2, t0.c0 UNION SELECT ALL t0.c1, v0.c0, t0.c2, t0.c0 FROM t0, t1, v0 WHERE ((((((((t0.c2)AND(v0.c0)))OR(t1.c0)) IN ())) ISNULL)) GROUP BY t0.c1, v0.c0, t0.c2, t0.c0;
SELECT t0.c1, v0.c0, t0.c2, t0.c0 FROM t0, t1, v0 GROUP BY t0.c1, v0.c0, t0.c2, t0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING v0.c0 UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((v0.c0) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING v0.c0 UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((v0.c0) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0, t0.c0, t0.c1 FROM v0, t0;
SELECT ALL v0.c0, t0.c0, t0.c1 FROM v0, t0 WHERE ((CASE t0.c1  WHEN t0.c1 THEN t0.c0 WHEN t0.c2 THEN t0.c0 WHEN t0.c0 THEN t0.c2 END IN (CAST('-912578666' AS NUMERIC)))) UNION ALL SELECT ALL v0.c0, t0.c0, t0.c1 FROM v0, t0 WHERE ((NOT ((CASE t0.c1  WHEN t0.c1 THEN t0.c0 WHEN t0.c2 THEN t0.c0 WHEN t0.c0 THEN t0.c2 END IN (CAST('-912578666' AS NUMERIC)))))) UNION ALL SELECT ALL v0.c0, t0.c0, t0.c1 FROM v0, t0 WHERE ((((CASE t0.c1  WHEN t0.c1 THEN t0.c0 WHEN t0.c2 THEN t0.c0 WHEN t0.c0 THEN t0.c2 END IN (CAST('-912578666' AS NUMERIC)))) ISNULL));
SELECT v0.c0, t0.c0, t0.c1 FROM v0, t0;
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE (CHAR((+ (t1.c0)), ((x'')>>(t1.c0)), (t1.c0 IN ()))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT (CHAR((+ (t1.c0)), ((x'')>>(t1.c0)), (t1.c0 IN ()))))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE (((CHAR((+ (t1.c0)), ((x'')>>(t1.c0)), (t1.c0 IN ()))) ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT t0.c2, v0.c0, t0.c0, t0.c1 FROM v0, t1 FULL OUTER JOIN t0 ON LOWER((NOT (x''))) GROUP BY t0.c2, v0.c0, t0.c0, t0.c1;
SELECT t0.c2, v0.c0, t0.c0, t0.c1 FROM v0, t1 FULL OUTER JOIN t0 ON LOWER((NOT (x''))) WHERE (((((t0.c2) IS TRUE))<<(t0.c2))) GROUP BY t0.c2, v0.c0, t0.c0, t0.c1 UNION SELECT ALL t0.c2, v0.c0, t0.c0, t0.c1 FROM v0, t1 FULL OUTER JOIN t0 ON LOWER((NOT (x''))) WHERE ((NOT (((((t0.c2) IS TRUE))<<(t0.c2))))) GROUP BY t0.c2, v0.c0, t0.c0, t0.c1 UNION SELECT t0.c2, v0.c0, t0.c0, t0.c1 FROM v0, t1 FULL OUTER JOIN t0 ON LOWER((NOT (x''))) WHERE (((((((t0.c2) IS TRUE))<<(t0.c2))) ISNULL)) GROUP BY t0.c2, v0.c0, t0.c0, t0.c1;
SELECT t0.c2, v0.c0, t0.c0, t0.c1 FROM v0, t1 FULL OUTER JOIN t0 ON LOWER((NOT (x''))) GROUP BY t0.c2, v0.c0, t0.c0, t0.c1;
SELECT t1.c0 FROM v0, t1 GROUP BY t1.c0;
SELECT t1.c0 FROM v0, t1 GROUP BY t1.c0 HAVING ((AVG(MAX(COUNT(SUM(MIN(v0.c0)))))) ISNULL) UNION ALL SELECT t1.c0 FROM v0, t1 GROUP BY t1.c0 HAVING (NOT (((AVG(MAX(COUNT(SUM(MIN(v0.c0)))))) ISNULL))) UNION ALL SELECT t1.c0 FROM v0, t1 GROUP BY t1.c0 HAVING ((((AVG(MAX(COUNT(SUM(MIN(v0.c0)))))) ISNULL)) ISNULL);
SELECT * FROM t0, t1;
SELECT ALL * FROM t0, t1 WHERE ((+ (((t0.c1) IS FALSE)))) UNION ALL SELECT ALL * FROM t0, t1 WHERE ((NOT ((+ (((t0.c1) IS FALSE)))))) UNION ALL SELECT ALL * FROM t0, t1 WHERE ((((+ (((t0.c1) IS FALSE)))) ISNULL));
SELECT * FROM t0, t1;
SELECT DISTINCT t1.c0 FROM v0, t1;
SELECT DISTINCT t1.c0 FROM v0, t1 WHERE ((((((v0.c0) IS FALSE)))<((((t1.c0) BETWEEN (v0.c0) AND (v0.c0)))))) UNION SELECT DISTINCT t1.c0 FROM v0, t1 WHERE ((NOT ((((((v0.c0) IS FALSE)))<((((t1.c0) BETWEEN (v0.c0) AND (v0.c0)))))))) UNION SELECT DISTINCT t1.c0 FROM v0, t1 WHERE ((((((((v0.c0) IS FALSE)))<((((t1.c0) BETWEEN (v0.c0) AND (v0.c0)))))) ISNULL));
SELECT DISTINCT t1.c0 FROM v0, t1;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE ((+ (CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT ((+ (CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END))))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((((+ (CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END))) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT v0.c0, t1.c0 FROM t1, v0 GROUP BY v0.c0, t1.c0;
SELECT ALL v0.c0, t1.c0 FROM t1, v0 GROUP BY v0.c0, t1.c0 HAVING COUNT(*) UNION ALL SELECT v0.c0, t1.c0 FROM t1, v0 GROUP BY v0.c0, t1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0, t1.c0 FROM t1, v0 GROUP BY v0.c0, t1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0, t1.c0 FROM t1, v0 GROUP BY v0.c0, t1.c0;
SELECT ALL v0.c0, t1.c0 FROM t1, v0 GROUP BY v0.c0, t1.c0 HAVING COUNT(*) UNION ALL SELECT v0.c0, t1.c0 FROM t1, v0 GROUP BY v0.c0, t1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0, t1.c0 FROM t1, v0 GROUP BY v0.c0, t1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0, t1.c0 FROM t1, v0 GROUP BY v0.c0, t1.c0;
SELECT ALL t0.c2, v0.c0, t1.c0 FROM t0, v0, t1;
SELECT t0.c2, v0.c0, t1.c0 FROM t0, v0, t1 WHERE (CAST(t0.c0 AS INTEGER) COLLATE BINARY) UNION ALL SELECT ALL t0.c2, v0.c0, t1.c0 FROM t0, v0, t1 WHERE ((NOT (CAST(t0.c0 AS INTEGER) COLLATE BINARY))) UNION ALL SELECT ALL t0.c2, v0.c0, t1.c0 FROM t0, v0, t1 WHERE (((CAST(t0.c0 AS INTEGER) COLLATE BINARY) ISNULL));
SELECT ALL t0.c2, v0.c0, t1.c0 FROM t0, v0, t1;
SELECT DISTINCT t1.c0, t0.c1, t0.c2, t0.c0, v0.c0 FROM t1, v0, t0;
SELECT DISTINCT t1.c0, t0.c1, t0.c2, t0.c0, v0.c0 FROM t1, v0, t0 WHERE (((t0.c0 COLLATE NOCASE) NOT BETWEEN (NULL COLLATE NOCASE) AND (((t0.c1) BETWEEN (t1.c0) AND (t0.c0))))) UNION SELECT DISTINCT t1.c0, t0.c1, t0.c2, t0.c0, v0.c0 FROM t1, v0, t0 WHERE ((NOT (((t0.c0 COLLATE NOCASE) NOT BETWEEN (NULL COLLATE NOCASE) AND (((t0.c1) BETWEEN (t1.c0) AND (t0.c0))))))) UNION SELECT DISTINCT t1.c0, t0.c1, t0.c2, t0.c0, v0.c0 FROM t1, v0, t0 WHERE (((((t0.c0 COLLATE NOCASE) NOT BETWEEN (NULL COLLATE NOCASE) AND (((t0.c1) BETWEEN (t1.c0) AND (t0.c0))))) ISNULL));
SELECT DISTINCT t1.c0, t0.c1, t0.c2, t0.c0, v0.c0 FROM t1, v0, t0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (CASE ((((v0.c0)OR(v0.c0)))OR(v0.c0))  WHEN NULL THEN TYPEOF(DISTINCT v0.c0) ELSE CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END END) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (CASE ((((v0.c0)OR(v0.c0)))OR(v0.c0))  WHEN NULL THEN TYPEOF(DISTINCT v0.c0) ELSE CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END END))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((CASE ((((v0.c0)OR(v0.c0)))OR(v0.c0))  WHEN NULL THEN TYPEOF(DISTINCT v0.c0) ELSE CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END END) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT t0.c0, t0.c2 FROM v0, t0, t1 GROUP BY t0.c0, t0.c2;
SELECT ALL t0.c0, t0.c2 FROM v0, t0, t1 GROUP BY t0.c0, t0.c2 HAVING SUM(TOTAL(t0.c1)) UNION ALL SELECT ALL t0.c0, t0.c2 FROM v0, t0, t1 GROUP BY t0.c0, t0.c2 HAVING (NOT (SUM(TOTAL(t0.c1)))) UNION ALL SELECT t0.c0, t0.c2 FROM v0, t0, t1 GROUP BY t0.c0, t0.c2 HAVING ((SUM(TOTAL(t0.c1))) ISNULL);
SELECT ALL v0.c0, t0.c1, t0.c0, t0.c2 FROM t0, v0;
SELECT ALL v0.c0, t0.c1, t0.c0, t0.c2 FROM t0, v0 WHERE ((NOT (t0.c1))) UNION ALL SELECT ALL v0.c0, t0.c1, t0.c0, t0.c2 FROM t0, v0 WHERE ((NOT ((NOT (t0.c1))))) UNION ALL SELECT ALL v0.c0, t0.c1, t0.c0, t0.c2 FROM t0, v0 WHERE ((((NOT (t0.c1))) ISNULL));
SELECT ALL v0.c0, t0.c1, t0.c0, t0.c2 FROM t0, v0;
SELECT DISTINCT t1.c0 FROM t1 RIGHT OUTER JOIN v0 ON (((((v0.c0)AND(t1.c0)))OR(t1.c0)) IN (0xfffffffff1895628));
SELECT DISTINCT t1.c0 FROM t1 RIGHT OUTER JOIN v0 ON (((((v0.c0)AND(t1.c0)))OR(t1.c0)) IN (0Xfffffffff1895628)) WHERE ((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))) COLLATE BINARY) UNION SELECT DISTINCT t1.c0 FROM t1 RIGHT OUTER JOIN v0 ON (((((v0.c0)AND(t1.c0)))OR(t1.c0)) IN (0xfffffffff1895628)) WHERE ((NOT ((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))) COLLATE BINARY))) UNION SELECT DISTINCT t1.c0 FROM t1 RIGHT OUTER JOIN v0 ON (((((v0.c0)AND(t1.c0)))OR(t1.c0)) IN (0xfffffffff1895628)) WHERE ((((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))) COLLATE BINARY) ISNULL));
SELECT DISTINCT t1.c0 FROM t1 RIGHT OUTER JOIN v0 ON (((((v0.c0)AND(t1.c0)))OR(t1.c0)) IN (0xfffffffff1895628));
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (NULL) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (NULL))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((NULL) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2;
SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING COUNT(*) UNION ALL SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2;
SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING COUNT(*) UNION ALL SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2;
SELECT t1.c0 FROM t1 NOT INDEXED, v0;
SELECT t1.c0 FROM t1, v0 WHERE (t1.c0) UNION ALL SELECT t1.c0 FROM t1, v0 WHERE ((NOT (t1.c0))) UNION ALL SELECT t1.c0 FROM t1, v0 WHERE (((t1.c0) ISNULL));
SELECT t1.c0 FROM t1 NOT INDEXED, v0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((((t0.c0)) NOT BETWEEN ((((((((((t0.c0)OR(t0.c1)))OR(t0.c1)))AND(t0.c2)))AND(t0.c1)))) AND ((t0.c0 COLLATE RTRIM)))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((((t0.c0)) NOT BETWEEN ((((((((((t0.c0)OR(t0.c1)))OR(t0.c1)))AND(t0.c2)))AND(t0.c1)))) AND ((t0.c0 COLLATE RTRIM)))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((((t0.c0)) NOT BETWEEN ((((((((((t0.c0)OR(t0.c1)))OR(t0.c1)))AND(t0.c2)))AND(t0.c1)))) AND ((t0.c0 COLLATE RTRIM)))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT v0.c0 FROM t0, t1, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM t0, t1, v0 WHERE (t0.c2) GROUP BY v0.c0 UNION SELECT v0.c0 FROM t0, t1, v0 WHERE ((NOT (t0.c2))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM t0, t1, v0 WHERE (((t0.c2) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM t0, t1, v0 GROUP BY v0.c0;
SELECT ALL t0.c2, t0.c1, t1.c0, v0.c0 FROM v0, t1, t0 GROUP BY t0.c2, t0.c1, t1.c0, v0.c0;
SELECT ALL t0.c2, t0.c1, t1.c0, v0.c0 FROM v0, t1, t0 GROUP BY t0.c2, t0.c1, t1.c0, v0.c0 HAVING AVG(GROUP_CONCAT('64051091')) UNION ALL SELECT ALL t0.c2, t0.c1, t1.c0, v0.c0 FROM v0, t1, t0 GROUP BY t0.c2, t0.c1, t1.c0, v0.c0 HAVING (NOT (AVG(GROUP_CONCAT('64051091')))) UNION ALL SELECT t0.c2, t0.c1, t1.c0, v0.c0 FROM v0, t1, t0 GROUP BY t0.c2, t0.c1, t1.c0, v0.c0 HAVING ((AVG(GROUP_CONCAT('64051091'))) ISNULL);
SELECT ALL * FROM t0, t1;
SELECT * FROM t0, t1 WHERE (TRIM(t1.c0, ((t0.c1)>>(t0.c2)))) UNION ALL SELECT * FROM t0, t1 WHERE ((NOT (TRIM(t1.c0, ((t0.c1)>>(t0.c2)))))) UNION ALL SELECT * FROM t0, t1 WHERE (((TRIM(t1.c0, ((t0.c1)>>(t0.c2)))) ISNULL));
SELECT ALL * FROM t0, t1;
SELECT DISTINCT t0.c0, t1.c0, t0.c2 FROM t1 FULL OUTER JOIN t0 ON (- (t0.c0)) COLLATE RTRIM;
SELECT DISTINCT t0.c0, t1.c0, t0.c2 FROM t1 FULL OUTER JOIN t0 ON (- (t0.c0)) COLLATE RTRIM WHERE (CAST(-6.24810399E8 AS INTEGER)) UNION SELECT DISTINCT t0.c0, t1.c0, t0.c2 FROM t1 FULL OUTER JOIN t0 ON (- (t0.c0)) COLLATE RTRIM WHERE ((NOT (CAST(-6.24810399E8 AS INTEGER)))) UNION SELECT DISTINCT t0.c0, t1.c0, t0.c2 FROM t1 FULL OUTER JOIN t0 ON (- (t0.c0)) COLLATE RTRIM WHERE (((CAST(-6.24810399E8 AS INTEGER)) ISNULL));
SELECT DISTINCT t0.c0, t1.c0, t0.c2 FROM t1 FULL OUTER JOIN t0 ON (- (t0.c0)) COLLATE RTRIM;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) BETWEEN (COALESCE(v0.c0, v0.c0)) AND (v0.c0))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) BETWEEN (COALESCE(v0.c0, v0.c0)) AND (v0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) BETWEEN (COALESCE(v0.c0, v0.c0)) AND (v0.c0))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0;
SELECT t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0 HAVING ((COUNT(SUM(t0.c0)))/(GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0 HAVING (NOT (((COUNT(SUM(t0.c0)))/(GROUP_CONCAT(COUNT(*)))))) UNION ALL SELECT ALL t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0 HAVING ((((COUNT(SUM(t0.c0)))/(GROUP_CONCAT(COUNT(*))))) ISNULL);
SELECT ALL * FROM v0, t0, t1;
SELECT ALL * FROM v0, t0, t1 WHERE (IFNULL(((((t0.c2)AND(t1.c0)))OR(t0.c1)), ((t1.c0) BETWEEN (v0.c0) AND (t0.c2)))) UNION ALL SELECT * FROM v0, t0, t1 WHERE ((NOT (IFNULL(((((t0.c2)AND(t1.c0)))OR(t0.c1)), ((t1.c0) BETWEEN (v0.c0) AND (t0.c2)))))) UNION ALL SELECT ALL * FROM v0, t0, t1 WHERE (((IFNULL(((((t0.c2)AND(t1.c0)))OR(t0.c1)), ((t1.c0) BETWEEN (v0.c0) AND (t0.c2)))) ISNULL));
SELECT ALL * FROM v0, t0, t1;
SELECT DISTINCT t0.c1, v0.c0, t1.c0, t0.c2 FROM v0, t1 CROSS JOIN t0 ON ((((t0.c0) IS FALSE)) NOT BETWEEN (((t0.c2) NOT BETWEEN (v0.c0) AND (t0.c2))) AND (CASE WHEN t0.c1 THEN t1.c0 END));
SELECT DISTINCT t0.c1, v0.c0, t1.c0, t0.c2 FROM v0, t1 CROSS JOIN t0 ON ((((t0.c0) IS FALSE)) NOT BETWEEN (((t0.c2) NOT BETWEEN (v0.c0) AND (t0.c2))) AND (CASE WHEN t0.c1 THEN t1.c0 END)) WHERE ((((t0.c2 IN ()))|(((v0.c0)>>(x''))))) UNION SELECT DISTINCT t0.c1, v0.c0, t1.c0, t0.c2 FROM v0, t1 CROSS JOIN t0 ON ((((t0.c0) IS FALSE)) NOT BETWEEN (((t0.c2) NOT BETWEEN (v0.c0) AND (t0.c2))) AND (CASE WHEN t0.c1 THEN t1.c0 END)) WHERE ((NOT ((((t0.c2 IN ()))|(((v0.c0)>>(x''))))))) UNION SELECT DISTINCT t0.c1, v0.c0, t1.c0, t0.c2 FROM v0, t1 CROSS JOIN t0 ON ((((t0.c0) IS FALSE)) NOT BETWEEN (((t0.c2) NOT BETWEEN (v0.c0) AND (t0.c2))) AND (CASE WHEN t0.c1 THEN t1.c0 END)) WHERE ((((((t0.c2 IN ()))|(((v0.c0)>>(x''))))) ISNULL));
SELECT DISTINCT t0.c1, v0.c0, t1.c0, t0.c2 FROM v0, t1 CROSS JOIN t0 ON ((((t0.c0) IS FALSE)) NOT BETWEEN (((t0.c2) NOT BETWEEN (v0.c0) AND (t0.c2))) AND (CASE WHEN t0.c1 THEN t1.c0 END));
SELECT t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0;
SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0 WHERE (((CAST(t0.c2 AS REAL))&(t0.c1))) GROUP BY t0.c2, t0.c1, t0.c0 UNION SELECT t0.c2, t0.c1, t0.c0 FROM t0 WHERE ((NOT (((CAST(t0.c2 AS REAL))&(t0.c1))))) GROUP BY t0.c2, t0.c1, t0.c0 UNION SELECT t0.c2, t0.c1, t0.c0 FROM t0 WHERE (((((CAST(t0.c2 AS REAL))&(t0.c1))) ISNULL)) GROUP BY t0.c2, t0.c1, t0.c0;
SELECT t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0;
SELECT t0.c2, t0.c1, v0.c0, t0.c0 FROM v0, t1, t0 GROUP BY t0.c2, t0.c1, v0.c0, t0.c0;
SELECT t0.c2, t0.c1, v0.c0, t0.c0 FROM v0, t1, t0 GROUP BY t0.c2, t0.c1, v0.c0, t0.c0 HAVING ((AVG(t0.c2)) IS TRUE) UNION ALL SELECT t0.c2, t0.c1, v0.c0, t0.c0 FROM v0, t1, t0 GROUP BY t0.c2, t0.c1, v0.c0, t0.c0 HAVING (NOT (((AVG(t0.c2)) IS TRUE))) UNION ALL SELECT t0.c2, t0.c1, v0.c0, t0.c0 FROM v0, t1, t0 GROUP BY t0.c2, t0.c1, v0.c0, t0.c0 HAVING ((((AVG(t0.c2)) IS TRUE)) ISNULL);
SELECT t0.c2, t0.c1, v0.c0, t0.c0 FROM v0, t1, t0 GROUP BY t0.c2, t0.c1, v0.c0, t0.c0;
SELECT t0.c2, t0.c1, v0.c0, t0.c0 FROM v0, t1, t0 GROUP BY t0.c2, t0.c1, v0.c0, t0.c0 HAVING ((AVG(t0.c2)) IS TRUE) UNION ALL SELECT t0.c2, t0.c1, v0.c0, t0.c0 FROM v0, t1, t0 GROUP BY t0.c2, t0.c1, v0.c0, t0.c0 HAVING (NOT (((AVG(t0.c2)) IS TRUE))) UNION ALL SELECT t0.c2, t0.c1, v0.c0, t0.c0 FROM v0, t1, t0 GROUP BY t0.c2, t0.c1, v0.c0, t0.c0 HAVING ((((AVG(t0.c2)) IS TRUE)) ISNULL);
SELECT t0.c2, t0.c1, v0.c0, t0.c0 FROM v0, t1, t0 GROUP BY t0.c2, t0.c1, v0.c0, t0.c0;
SELECT ALL v0.c0 FROM t0 NATURAL JOIN v0;
SELECT v0.c0 FROM t0 NATURAL JOIN v0 WHERE ((t0.c2 IN (v0.c0, v0.c0)) COLLATE BINARY) UNION ALL SELECT ALL v0.c0 FROM t0 NATURAL JOIN v0 WHERE ((NOT ((t0.c2 IN (v0.c0, v0.c0)) COLLATE BINARY))) UNION ALL SELECT v0.c0 FROM t0 NATURAL JOIN v0 WHERE ((((t0.c2 IN (v0.c0, v0.c0)) COLLATE BINARY) ISNULL));
SELECT ALL v0.c0 FROM t0 NATURAL JOIN v0;
SELECT DISTINCT t0.c1, v0.c0, t0.c2, t0.c0 FROM v0, t0;
SELECT DISTINCT t0.c1, v0.c0, t0.c2, t0.c0 FROM v0, t0 WHERE (((((t0.c1)>(t0.c2)))IS NOT((t0.c0 IN ())))) UNION SELECT DISTINCT t0.c1, v0.c0, t0.c2, t0.c0 FROM v0, t0 WHERE ((NOT (((((t0.c1)>(t0.c2)))IS NOT((t0.c0 IN ())))))) UNION SELECT DISTINCT t0.c1, v0.c0, t0.c2, t0.c0 FROM v0, t0 WHERE (((((((t0.c1)>(t0.c2)))IS NOT((t0.c0 IN ())))) ISNULL));
SELECT DISTINCT t0.c1, v0.c0, t0.c2, t0.c0 FROM v0, t0;
SELECT ALL t0.c1, t1.c0, t0.c0 FROM t0 NOT INDEXED, t1, v0 GROUP BY t0.c1, t1.c0, t0.c0;
SELECT t0.c1, t1.c0, t0.c0 FROM t0, t1, v0 WHERE (((((v0.c0) BETWEEN (t0.c0) AND (x''))) NOT BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (x'd8d0'))) AND (v0.c0))) GROUP BY t0.c1, t1.c0, t0.c0 UNION SELECT t0.c1, t1.c0, t0.c0 FROM t0, t1, v0 WHERE ((NOT (((((v0.c0) BETWEEN (t0.c0) AND (x''))) NOT BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (x'd8d0'))) AND (v0.c0))))) GROUP BY t0.c1, t1.c0, t0.c0 UNION SELECT ALL t0.c1, t1.c0, t0.c0 FROM t0, t1, v0 WHERE (((((((v0.c0) BETWEEN (t0.c0) AND (x''))) NOT BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (x'd8d0'))) AND (v0.c0))) ISNULL)) GROUP BY t0.c1, t1.c0, t0.c0;
SELECT ALL t0.c1, t1.c0, t0.c0 FROM t0 NOT INDEXED, t1, v0 GROUP BY t0.c1, t1.c0, t0.c0;
SELECT v0.c0, t1.c0 FROM v0, t1 GROUP BY v0.c0, t1.c0;
SELECT ALL v0.c0, t1.c0 FROM v0, t1 GROUP BY v0.c0, t1.c0 HAVING INSTR((TOTAL(t1.c0) IN (v0.c0)), MAX(AVG(MAX(t1.c0)))) UNION ALL SELECT v0.c0, t1.c0 FROM v0, t1 GROUP BY v0.c0, t1.c0 HAVING (NOT (INSTR((TOTAL(t1.c0) IN (v0.c0)), MAX(AVG(MAX(t1.c0)))))) UNION ALL SELECT v0.c0, t1.c0 FROM v0, t1 GROUP BY v0.c0, t1.c0 HAVING ((INSTR((TOTAL(t1.c0) IN (v0.c0)), MAX(AVG(MAX(t1.c0))))) ISNULL);
SELECT ALL t0.c1, t0.c0, t1.c0 FROM t1 FULL OUTER JOIN t0 ON (((t1.c0, t1.c0, t1.c0)) NOT BETWEEN ((v0.c0, ((((v0.c0)AND(t0.c0)))OR(v0.c0)), TYPEOF(t0.c1))) AND ((((t0.c2) NOTNULL), t0.c0 COLLATE RTRIM, ((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c0))))) LEFT OUTER JOIN v0 ON ((((+ (v0.c0)), -33847958, CAST(t0.c1 AS NUMERIC)))<((CASE v0.c0  WHEN t1.c0 THEN NULL ELSE t0.c0 END, (((v0.c0))<=((x'f77b'))), COALESCE(t0.c2, t1.c0))));
SELECT DISTINCT t0.c0, t0.c2, v0.c0, t0.c1 FROM t0, v0;
SELECT DISTINCT t0.c0, t0.c2, v0.c0, t0.c1 FROM t0, v0 WHERE (t0.c0) UNION SELECT DISTINCT t0.c0, t0.c2, v0.c0, t0.c1 FROM t0, v0 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT t0.c0, t0.c2, v0.c0, t0.c1 FROM t0, v0 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT t0.c0, t0.c2, v0.c0, t0.c1 FROM t0, v0;
SELECT t0.c2, t0.c1, t0.c0, v0.c0 FROM t0, v0 GROUP BY t0.c2, t0.c1, t0.c0, v0.c0;
SELECT t0.c2, t0.c1, t0.c0, v0.c0 FROM t0, v0 WHERE ((+ (v0.c0 COLLATE RTRIM))) GROUP BY t0.c2, t0.c1, t0.c0, v0.c0 UNION SELECT t0.c2, t0.c1, t0.c0, v0.c0 FROM t0, v0 WHERE ((NOT ((+ (v0.c0 COLLATE RTRIM))))) GROUP BY t0.c2, t0.c1, t0.c0, v0.c0 UNION SELECT ALL t0.c2, t0.c1, t0.c0, v0.c0 FROM t0, v0 WHERE ((((+ (v0.c0 COLLATE RTRIM))) ISNULL)) GROUP BY t0.c2, t0.c1, t0.c0, v0.c0;
SELECT t0.c2, t0.c1, t0.c0, v0.c0 FROM t0, v0 GROUP BY t0.c2, t0.c1, t0.c0, v0.c0;
SELECT t0.c1, t0.c0 FROM v0 NOT INDEXED LEFT OUTER JOIN t0 ON NULLIF((~ (t0.c0)), ((((t0.c2)AND(t0.c0)))OR(t0.c1))) GROUP BY t0.c1, t0.c0;
SELECT t0.c1, t0.c0 FROM v0 LEFT OUTER JOIN t0 ON NULLIF((~ (t0.c0)), ((((t0.c2)AND(t0.c0)))OR(t0.c1))) GROUP BY t0.c1, t0.c0 HAVING (+ (SUM(GROUP_CONCAT(SUM(COUNT(v0.c0)))))) UNION ALL SELECT t0.c1, t0.c0 FROM v0 LEFT OUTER JOIN t0 ON NULLIF((~ (t0.c0)), ((((t0.c2)AND(t0.c0)))OR(t0.c1))) GROUP BY t0.c1, t0.c0 HAVING (NOT ((+ (SUM(GROUP_CONCAT(SUM(COUNT(v0.c0)))))))) UNION ALL SELECT ALL t0.c1, t0.c0 FROM v0 LEFT OUTER JOIN t0 ON NULLIF((~ (t0.c0)), ((((t0.c2)AND(t0.c0)))OR(t0.c1))) GROUP BY t0.c1, t0.c0 HAVING (((+ (SUM(GROUP_CONCAT(SUM(COUNT(v0.c0))))))) ISNULL);
SELECT ALL * FROM t0, v0 LEFT OUTER JOIN t1 ON (((((0.9755727504374365 IN ()))AND(HEX(t0.c1))))OR(((((t0.c0)AND(t0.c2)))OR(t1.c0))));
SELECT ALL * FROM t0, v0 LEFT OUTER JOIN t1 ON (((((0.9755727504374365 IN ()))AND(HEX(t0.c1))))OR(((((t0.c0)AND(t0.c2)))OR(t1.c0)))) WHERE (((((v0.c0) BETWEEN (t1.c0) AND (v0.c0)))+(((('*,eq ?HN', v0.c0, t0.c0))<((t0.c1, t1.c0, t0.c0)))))) UNION ALL SELECT ALL * FROM t0, v0 LEFT OUTER JOIN t1 ON (((((0.9755727504374365 IN ()))AND(HEX(t0.c1))))OR(((((t0.c0)AND(t0.c2)))OR(t1.c0)))) WHERE ((NOT (((((v0.c0) BETWEEN (t1.c0) AND (v0.c0)))+(((('*,eq ?HN', v0.c0, t0.c0))<((t0.c1, t1.c0, t0.c0)))))))) UNION ALL SELECT * FROM t0, v0 LEFT OUTER JOIN t1 ON (((((0.9755727504374365 IN ()))AND(HEX(t0.c1))))OR(((((t0.c0)AND(t0.c2)))OR(t1.c0)))) WHERE (((((((v0.c0) BETWEEN (t1.c0) AND (v0.c0)))+(((('*,eq ?HN', v0.c0, t0.c0))<((t0.c1, t1.c0, t0.c0)))))) ISNULL));
SELECT ALL * FROM t0, v0 LEFT OUTER JOIN t1 ON (((((0.9755727504374365 IN ()))AND(HEX(t0.c1))))OR(((((t0.c0)AND(t0.c2)))OR(t1.c0))));
SELECT DISTINCT t0.c0, t0.c1, t1.c0, t0.c2 FROM t1, t0;
SELECT DISTINCT t0.c0, t0.c1, t1.c0, t0.c2 FROM t1, t0 WHERE (((t0.c0) ISNULL)) UNION SELECT DISTINCT t0.c0, t0.c1, t1.c0, t0.c2 FROM t1, t0 WHERE ((NOT (((t0.c0) ISNULL)))) UNION SELECT DISTINCT t0.c0, t0.c1, t1.c0, t0.c2 FROM t1, t0 WHERE (((((t0.c0) ISNULL)) ISNULL));
SELECT DISTINCT t0.c0, t0.c1, t1.c0, t0.c2 FROM t1, t0;
SELECT t0.c2, t0.c0, v0.c0 FROM v0, t0 GROUP BY t0.c2, t0.c0, v0.c0;
SELECT t0.c2, t0.c0, v0.c0 FROM v0, t0 WHERE (((v0.c0) BETWEEN (NULL) AND (v0.c0)) COLLATE NOCASE) GROUP BY t0.c2, t0.c0, v0.c0 UNION SELECT t0.c2, t0.c0, v0.c0 FROM v0, t0 WHERE ((NOT (((v0.c0) BETWEEN (NULL) AND (v0.c0)) COLLATE NOCASE))) GROUP BY t0.c2, t0.c0, v0.c0 UNION SELECT t0.c2, t0.c0, v0.c0 FROM v0, t0 WHERE (((((v0.c0) BETWEEN (NULL) AND (v0.c0)) COLLATE NOCASE) ISNULL)) GROUP BY t0.c2, t0.c0, v0.c0;
SELECT t0.c2, t0.c0, v0.c0 FROM v0, t0 GROUP BY t0.c2, t0.c0, v0.c0;
SELECT ALL t0.c2 FROM v0, t0, t1 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM v0, t0, t1 GROUP BY t0.c2 HAVING ((358016543)IS NOT((x'' IN ()))) UNION ALL SELECT t0.c2 FROM v0, t0, t1 GROUP BY t0.c2 HAVING (NOT (((358016543)IS NOT((x'' IN ()))))) UNION ALL SELECT ALL t0.c2 FROM v0, t0, t1 GROUP BY t0.c2 HAVING ((((358016543)IS NOT((x'' IN ())))) ISNULL);
SELECT ALL t0.c2 FROM v0, t0, t1 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM v0, t0, t1 GROUP BY t0.c2 HAVING ((358016543)IS NOT((x'' IN ()))) UNION ALL SELECT t0.c2 FROM v0, t0, t1 GROUP BY t0.c2 HAVING (NOT (((358016543)IS NOT((x'' IN ()))))) UNION ALL SELECT ALL t0.c2 FROM v0, t0, t1 GROUP BY t0.c2 HAVING ((((358016543)IS NOT((x'' IN ())))) ISNULL);
SELECT ALL t0.c2 FROM v0, t0, t1 GROUP BY t0.c2;
SELECT * FROM t1;
SELECT ALL * FROM t1 WHERE (((((LIKELIHOOD(t1.c0, 0.1431766805475847))OR(x'')))AND(((t1.c0)&(t1.c0))))) UNION ALL SELECT ALL * FROM t1 WHERE ((NOT (((((LIKELIHOOD(t1.c0, 0.1431766805475847))OR(x'')))AND(((t1.c0)&(t1.c0))))))) UNION ALL SELECT ALL * FROM t1 WHERE (((((((LIKELIHOOD(t1.c0, 0.1431766805475847))OR(x'')))AND(((t1.c0)&(t1.c0))))) ISNULL));
SELECT * FROM t1;
SELECT DISTINCT v0.c0 FROM v0, t1;
SELECT DISTINCT v0.c0 FROM v0 NOT INDEXED, t1 WHERE ((NOT (((t1.c0)<(t1.c0))))) UNION SELECT DISTINCT v0.c0 FROM v0, t1 WHERE ((NOT ((NOT (((t1.c0)<(t1.c0))))))) UNION SELECT DISTINCT v0.c0 FROM v0, t1 WHERE ((((NOT (((t1.c0)<(t1.c0))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0, t1;
SELECT t0.c1, t0.c2, v0.c0, t1.c0 FROM t0 RIGHT OUTER JOIN t1 ON NULLIF(DISTINCT t1.c0 COLLATE RTRIM, CAST(v0.c0 AS REAL)) CROSS JOIN v0 ON ((t0.c0) IS FALSE) GROUP BY t0.c1, t0.c2, v0.c0, t1.c0;
SELECT ALL t0.c0, t0.c2, t1.c0, t0.c1 FROM t1, v0, t0 GROUP BY t0.c0, t0.c2, t1.c0, t0.c1;
SELECT t0.c0, t0.c2, t1.c0, t0.c1 FROM t1, v0, t0 GROUP BY t0.c0, t0.c2, t1.c0, t0.c1 HAVING MAX(COUNT(*)) UNION ALL SELECT t0.c0, t0.c2, t1.c0, t0.c1 FROM t1, v0, t0 GROUP BY t0.c0, t0.c2, t1.c0, t0.c1 HAVING (NOT (MAX(COUNT(*)))) UNION ALL SELECT ALL t0.c0, t0.c2, t1.c0, t0.c1 FROM t1, v0, t0 GROUP BY t0.c0, t0.c2, t1.c0, t0.c1 HAVING ((MAX(COUNT(*))) ISNULL);
SELECT v0.c0, t0.c1 FROM t0, t1 RIGHT OUTER JOIN v0 ON ((((((((v0.c0 COLLATE BINARY)OR(((((t0.c2)AND(t0.c1)))AND(t0.c0)))))OR(((((((((v0.c0)OR(t1.c0)))AND(t0.c0)))OR('570462492')))OR(t0.c2)))))OR(((t1.c0) ISNULL))))OR(t0.c1 COLLATE RTRIM));
SELECT v0.c0, t0.c1 FROM t0, t1 RIGHT OUTER JOIN v0 ON ((((((((v0.c0 COLLATE BINARY)OR(((((t0.c2)AND(t0.c1)))AND(t0.c0)))))OR(((((((((v0.c0)OR(t1.c0)))AND(t0.c0)))OR('570462492')))OR(t0.c2)))))OR(((t1.c0) ISNULL))))OR(t0.c1 COLLATE RTRIM)) WHERE (t0.c2) UNION ALL SELECT v0.c0, t0.c1 FROM t0, t1 RIGHT OUTER JOIN v0 ON ((((((((v0.c0 COLLATE BINARY)OR(((((t0.c2)AND(t0.c1)))AND(t0.c0)))))OR(((((((((v0.c0)OR(t1.c0)))AND(t0.c0)))OR('570462492')))OR(t0.c2)))))OR(((t1.c0) ISNULL))))OR(t0.c1 COLLATE RTRIM)) WHERE ((NOT (t0.c2))) UNION ALL SELECT ALL v0.c0, t0.c1 FROM t0, t1 RIGHT OUTER JOIN v0 ON ((((((((v0.c0 COLLATE BINARY)OR(((((t0.c2)AND(t0.c1)))AND(t0.c0)))))OR(((((((((v0.c0)OR(t1.c0)))AND(t0.c0)))OR('570462492')))OR(t0.c2)))))OR(((t1.c0) ISNULL))))OR(t0.c1 COLLATE RTRIM)) WHERE (((t0.c2) ISNULL));
SELECT v0.c0, t0.c1 FROM t0, t1 RIGHT OUTER JOIN v0 ON ((((((((v0.c0 COLLATE BINARY)OR(((((t0.c2)AND(t0.c1)))AND(t0.c0)))))OR(((((((((v0.c0)OR(t1.c0)))AND(t0.c0)))OR('570462492')))OR(t0.c2)))))OR(((t1.c0) ISNULL))))OR(t0.c1 COLLATE RTRIM));
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE (((CAST(t1.c0 AS INTEGER)) NOT NULL)) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT (((CAST(t1.c0 AS INTEGER)) NOT NULL)))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE (((((CAST(t1.c0 AS INTEGER)) NOT NULL)) ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT ALL v0.c0, t1.c0 FROM t1 NOT INDEXED INNER JOIN v0 ON ABS(t1.c0) GROUP BY v0.c0, t1.c0;
SELECT ALL v0.c0, t1.c0 FROM t1 INNER JOIN v0 ON ABS(t1.c0) WHERE ((((x'', v0.c0, v0.c0)) BETWEEN ((CASE v0.c0  WHEN t1.c0 THEN t1.c0 ELSE v0.c0 END, t1.c0 COLLATE BINARY, x'' COLLATE RTRIM)) AND ((v0.c0, CAST(v0.c0 AS TEXT), CAST(t1.c0 AS NUMERIC))))) GROUP BY v0.c0, t1.c0 UNION SELECT v0.c0, t1.c0 FROM t1 INNER JOIN v0 ON ABS(t1.c0) WHERE ((NOT ((((x'', v0.c0, v0.c0)) BETWEEN ((CASE v0.c0  WHEN t1.c0 THEN t1.c0 ELSE v0.c0 END, t1.c0 COLLATE BINARY, x'' COLLATE RTRIM)) AND ((v0.c0, CAST(v0.c0 AS TEXT), CAST(t1.c0 AS NUMERIC))))))) GROUP BY v0.c0, t1.c0 UNION SELECT v0.c0, t1.c0 FROM t1 INNER JOIN v0 ON ABS(t1.c0) WHERE ((((((x'', v0.c0, v0.c0)) BETWEEN ((CASE v0.c0  WHEN t1.c0 THEN t1.c0 ELSE v0.c0 END, t1.c0 COLLATE BINARY, x'' COLLATE RTRIM)) AND ((v0.c0, CAST(v0.c0 AS TEXT), CAST(t1.c0 AS NUMERIC))))) ISNULL)) GROUP BY v0.c0, t1.c0;
SELECT ALL v0.c0, t1.c0 FROM t1 NOT INDEXED INNER JOIN v0 ON ABS(t1.c0) GROUP BY v0.c0, t1.c0;
SELECT v0.c0, t0.c1, t0.c2 FROM v0, t0, t1 GROUP BY v0.c0, t0.c1, t0.c2;
SELECT ALL v0.c0, t0.c1, t0.c2 FROM v0, t0, t1 GROUP BY v0.c0, t0.c1, t0.c2 HAVING AVG((~ (TOTAL(COUNT(*))))) UNION ALL SELECT ALL v0.c0, t0.c1, t0.c2 FROM v0, t0, t1 GROUP BY v0.c0, t0.c1, t0.c2 HAVING (NOT (AVG((~ (TOTAL(COUNT(*))))))) UNION ALL SELECT ALL v0.c0, t0.c1, t0.c2 FROM v0, t0, t1 GROUP BY v0.c0, t0.c1, t0.c2 HAVING ((AVG((~ (TOTAL(COUNT(*)))))) ISNULL);
SELECT * FROM v0 FULL OUTER JOIN t0 ON CASE WHEN ((t0.c0)<<(v0.c0)) THEN t0.c1 END;
SELECT * FROM v0 FULL OUTER JOIN t0 ON CASE WHEN ((t0.c0)<<(v0.c0)) THEN t0.c1 END WHERE ((t0.c1 IN (CASE WHEN t0.c0 THEN t0.c0 END))) UNION ALL SELECT * FROM v0 FULL OUTER JOIN t0 ON CASE WHEN ((t0.c0)<<(v0.c0)) THEN t0.c1 END WHERE ((NOT ((t0.c1 IN (CASE WHEN t0.c0 THEN t0.c0 END))))) UNION ALL SELECT ALL * FROM v0 FULL OUTER JOIN t0 ON CASE WHEN ((t0.c0)<<(v0.c0)) THEN t0.c1 END WHERE ((((t0.c1 IN (CASE WHEN t0.c0 THEN t0.c0 END))) ISNULL));
SELECT * FROM v0 FULL OUTER JOIN t0 ON CASE WHEN ((t0.c0)<<(v0.c0)) THEN t0.c1 END;
SELECT DISTINCT t0.c1, t0.c0, v0.c0 FROM v0, t0 NATURAL JOIN t1;
SELECT DISTINCT t0.c1, t0.c0, v0.c0 FROM v0, t0 NATURAL JOIN t1 WHERE (SQLITE_SOURCE_ID()) UNION SELECT DISTINCT t0.c1, t0.c0, v0.c0 FROM v0, t0 NATURAL JOIN t1 WHERE ((NOT (SQLITE_SOURCE_ID()))) UNION SELECT DISTINCT t0.c1, t0.c0, v0.c0 FROM v0, t0 NATURAL JOIN t1 WHERE (((SQLITE_SOURCE_ID()) ISNULL));
SELECT DISTINCT t0.c1, t0.c0, v0.c0 FROM v0, t0 NATURAL JOIN t1;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((((((((IFNULL(DISTINCT 0.9072156836805855, v0.c0))AND(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(-1.917219037E9)))))AND(LIKELIHOOD(v0.c0, 0.13104642882542283))))AND(CAST(v0.c0 AS INTEGER))))OR(((((((((v0.c0)OR(NULL)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((((((IFNULL(DISTINCT 0.9072156836805855, v0.c0))AND(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(-1.917219037E9)))))AND(LIKELIHOOD(v0.c0, 0.13104642882542283))))AND(CAST(v0.c0 AS INTEGER))))OR(((((((((v0.c0)OR(NULL)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((((((((IFNULL(DISTINCT 0.9072156836805855, v0.c0))AND(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(-1.917219037E9)))))AND(LIKELIHOOD(v0.c0, 0.13104642882542283))))AND(CAST(v0.c0 AS INTEGER))))OR(((((((((v0.c0)OR(NULL)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT t0.c2, t0.c1, t0.c0 FROM t0, v0, t1 GROUP BY t0.c2, t0.c1, t0.c0;
SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0, v0, t1 GROUP BY t0.c2, t0.c1, t0.c0 HAVING (- (TOTAL(t0.c2))) UNION ALL SELECT t0.c2, t0.c1, t0.c0 FROM t0, v0, t1 GROUP BY t0.c2, t0.c1, t0.c0 HAVING (NOT ((- (TOTAL(t0.c2))))) UNION ALL SELECT t0.c2, t0.c1, t0.c0 FROM t0, v0, t1 GROUP BY t0.c2, t0.c1, t0.c0 HAVING (((- (TOTAL(t0.c2)))) ISNULL);
SELECT t0.c2, t0.c1, t0.c0 FROM t0, v0, t1 GROUP BY t0.c2, t0.c1, t0.c0;
SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0, v0, t1 GROUP BY t0.c2, t0.c1, t0.c0 HAVING (- (TOTAL(t0.c2))) UNION ALL SELECT t0.c2, t0.c1, t0.c0 FROM t0, v0, t1 GROUP BY t0.c2, t0.c1, t0.c0 HAVING (NOT ((- (TOTAL(t0.c2))))) UNION ALL SELECT t0.c2, t0.c1, t0.c0 FROM t0, v0, t1 GROUP BY t0.c2, t0.c1, t0.c0 HAVING (((- (TOTAL(t0.c2)))) ISNULL);
SELECT t0.c2, t0.c1, t0.c0 FROM t0, v0, t1 GROUP BY t0.c2, t0.c1, t0.c0;
SELECT ALL t1.c0, v0.c0 FROM v0 LEFT OUTER JOIN t1 ON -1366556791;
SELECT t1.c0, v0.c0 FROM v0 LEFT OUTER JOIN t1 ON -1366556791 WHERE (((((((t1.c0)IS(v0.c0)))AND(CAST(v0.c0 AS NUMERIC))))AND(t1.c0 COLLATE BINARY))) UNION ALL SELECT t1.c0, v0.c0 FROM v0 LEFT OUTER JOIN t1 ON -1366556791 WHERE ((NOT (((((((t1.c0)IS(v0.c0)))AND(CAST(v0.c0 AS NUMERIC))))AND(t1.c0 COLLATE BINARY))))) UNION ALL SELECT t1.c0, v0.c0 FROM v0 NOT INDEXED LEFT OUTER JOIN t1 ON -1366556791 WHERE (((((((((t1.c0)IS(v0.c0)))AND(CAST(v0.c0 AS NUMERIC))))AND(t1.c0 COLLATE BINARY))) ISNULL));
SELECT ALL t1.c0, v0.c0 FROM v0 LEFT OUTER JOIN t1 ON -1366556791;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((((v0.c0 IN ())) NOT NULL)) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((((v0.c0 IN ())) NOT NULL)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((v0.c0 IN ())) NOT NULL)) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT v0.c0, t1.c0, t0.c0 FROM t0, v0, t1 GROUP BY v0.c0, t1.c0, t0.c0;
SELECT ALL v0.c0, t1.c0, t0.c0 FROM t0, v0, t1 WHERE ((((- (v0.c0)))LIKE((((t0.c2))<((t0.c0)))))) GROUP BY v0.c0, t1.c0, t0.c0 UNION SELECT v0.c0, t1.c0, t0.c0 FROM t0, v0, t1 WHERE ((NOT ((((- (v0.c0)))LIKE((((t0.c2))<((t0.c0)))))))) GROUP BY v0.c0, t1.c0, t0.c0 UNION SELECT ALL v0.c0, t1.c0, t0.c0 FROM t0, v0, t1 WHERE ((((((- (v0.c0)))LIKE((((t0.c2))<((t0.c0)))))) ISNULL)) GROUP BY v0.c0, t1.c0, t0.c0;
SELECT v0.c0, t1.c0, t0.c0 FROM t0, v0, t1 GROUP BY v0.c0, t1.c0, t0.c0;
SELECT t0.c0, t0.c1 FROM t1, t0 LEFT OUTER JOIN v0 ON NULL GROUP BY t0.c0, t0.c1;
SELECT ALL t0.c0, t0.c1 FROM t1, t0 LEFT OUTER JOIN v0 ON NULL GROUP BY t0.c0, t0.c1 HAVING COUNT(*) UNION ALL SELECT t0.c0, t0.c1 FROM t1, t0 LEFT OUTER JOIN v0 ON NULL GROUP BY t0.c0, t0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0, t0.c1 FROM t1, t0 LEFT OUTER JOIN v0 ON NULL GROUP BY t0.c0, t0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0, t0.c1 FROM t1, t0 LEFT OUTER JOIN v0 ON NULL GROUP BY t0.c0, t0.c1;
SELECT ALL t0.c0, t0.c1 FROM t1, t0 LEFT OUTER JOIN v0 ON NULL GROUP BY t0.c0, t0.c1 HAVING COUNT(*) UNION ALL SELECT t0.c0, t0.c1 FROM t1, t0 LEFT OUTER JOIN v0 ON NULL GROUP BY t0.c0, t0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0, t0.c1 FROM t1, t0 LEFT OUTER JOIN v0 ON NULL GROUP BY t0.c0, t0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0, t0.c1 FROM t1, t0 LEFT OUTER JOIN v0 ON NULL GROUP BY t0.c0, t0.c1;
SELECT ALL * FROM t0 RIGHT OUTER JOIN v0 ON (0.9573783381031156 IN ());
SELECT ALL * FROM t0 RIGHT OUTER JOIN v0 ON (0.9573783381031156 IN ()) WHERE (CAST((t0.c1 IN ()) AS INTEGER)) UNION ALL SELECT ALL * FROM t0 RIGHT OUTER JOIN v0 ON (0.9573783381031156 IN ()) WHERE ((NOT (CAST((t0.c1 IN ()) AS INTEGER)))) UNION ALL SELECT * FROM t0 RIGHT OUTER JOIN v0 ON (0.9573783381031156 IN ()) WHERE (((CAST((t0.c1 IN ()) AS INTEGER)) ISNULL));
SELECT ALL * FROM t0 RIGHT OUTER JOIN v0 ON (0.9573783381031156 IN ());
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((+ ('DJuL#┷st'))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((+ ('DJuL#┷st'))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((+ ('DJuL#┷st'))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL v0.c0, t0.c1, t1.c0, t0.c2 FROM t1, v0 RIGHT OUTER JOIN t0 ON ((v0.c0) IS TRUE) COLLATE NOCASE GROUP BY v0.c0, t0.c1, t1.c0, t0.c2;
SELECT ALL v0.c0, t0.c1, t1.c0, t0.c2 FROM t1, v0 RIGHT OUTER JOIN t0 ON ((v0.c0) IS TRUE) COLLATE NOCASE WHERE (((((0.011132623556227683)>(t1.c0)))GLOB(CASE t1.c0  WHEN t0.c2 THEN v0.c0 ELSE t1.c0 END))) GROUP BY v0.c0, t0.c1, t1.c0, t0.c2 UNION SELECT v0.c0, t0.c1, t1.c0, t0.c2 FROM t1, v0 RIGHT OUTER JOIN t0 ON ((v0.c0) IS TRUE) COLLATE NOCASE WHERE ((NOT (((((0.011132623556227683)>(t1.c0)))GLOB(CASE t1.c0  WHEN t0.c2 THEN v0.c0 ELSE t1.c0 END))))) GROUP BY v0.c0, t0.c1, t1.c0, t0.c2 UNION SELECT ALL v0.c0, t0.c1, t1.c0, t0.c2 FROM t1, v0 RIGHT OUTER JOIN t0 ON ((v0.c0) IS TRUE) COLLATE NOCASE WHERE (((((((0.011132623556227683)>(t1.c0)))GLOB(CASE t1.c0  WHEN t0.c2 THEN v0.c0 ELSE t1.c0 END))) ISNULL)) GROUP BY v0.c0, t0.c1, t1.c0, t0.c2;
SELECT ALL v0.c0, t0.c1, t1.c0, t0.c2 FROM t1, v0 RIGHT OUTER JOIN t0 ON ((v0.c0) IS TRUE) COLLATE NOCASE GROUP BY v0.c0, t0.c1, t1.c0, t0.c2;
SELECT ALL t0.c0 FROM t1, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t1, t0 GROUP BY t0.c0 HAVING ((TOTAL(t0.c0)) NOT NULL) UNION ALL SELECT ALL t0.c0 FROM t1, t0 GROUP BY t0.c0 HAVING (NOT (((TOTAL(t0.c0)) NOT NULL))) UNION ALL SELECT ALL t0.c0 FROM t1, t0 GROUP BY t0.c0 HAVING ((((TOTAL(t0.c0)) NOT NULL)) ISNULL);
SELECT ALL t0.c0 FROM t1, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t1, t0 GROUP BY t0.c0 HAVING ((TOTAL(t0.c0)) NOT NULL) UNION ALL SELECT ALL t0.c0 FROM t1, t0 GROUP BY t0.c0 HAVING (NOT (((TOTAL(t0.c0)) NOT NULL))) UNION ALL SELECT ALL t0.c0 FROM t1, t0 GROUP BY t0.c0 HAVING ((((TOTAL(t0.c0)) NOT NULL)) ISNULL);
SELECT ALL t0.c0 FROM t1, t0 GROUP BY t0.c0;
SELECT t0.c1, t0.c2, t0.c0 FROM v0, t0;
SELECT t0.c1, t0.c2, t0.c0 FROM v0, t0 WHERE (ABS(x'16e9')) UNION ALL SELECT t0.c1, t0.c2, t0.c0 FROM v0, t0 WHERE ((NOT (ABS(x'16e9')))) UNION ALL SELECT t0.c1, t0.c2, t0.c0 FROM v0, t0 WHERE (((ABS(x'16e9')) ISNULL));
SELECT t0.c1, t0.c2, t0.c0 FROM v0, t0;
SELECT DISTINCT * FROM t1 RIGHT OUTER JOIN t0 ON LIKELY(((((((((t1.c0)AND(t0.c2)))AND(t0.c0)))OR(t0.c0)))OR(t1.c0)));
SELECT DISTINCT * FROM t1 RIGHT OUTER JOIN t0 ON LIKELY(((((((((t1.c0)AND(t0.c2)))AND(t0.c0)))OR(t0.c0)))OR(t1.c0))) WHERE (((((t0.c0)=(t0.c2))) BETWEEN (0x6a8915a3) AND ((+ (t0.c2))))) UNION SELECT DISTINCT * FROM t1 RIGHT OUTER JOIN t0 ON LIKELY(((((((((t1.c0)AND(t0.c2)))AND(t0.c0)))OR(t0.c0)))OR(t1.c0))) WHERE ((NOT (((((t0.c0)=(t0.c2))) BETWEEN (0x6a8915a3) AND ((+ (t0.c2))))))) UNION SELECT DISTINCT * FROM t1 RIGHT OUTER JOIN t0 ON LIKELY(((((((((t1.c0)AND(t0.c2)))AND(t0.c0)))OR(t0.c0)))OR(t1.c0))) WHERE (((((((t0.c0)==(t0.c2))) BETWEEN (0x6a8915a3) AND ((+ (t0.c2))))) ISNULL));
SELECT DISTINCT * FROM t1 RIGHT OUTER JOIN t0 ON LIKELY(((((((((t1.c0)AND(t0.c2)))AND(t0.c0)))OR(t0.c0)))OR(t1.c0)));
SELECT ALL v0.c0, t0.c1, t0.c0, t0.c2 FROM v0, t0 GROUP BY v0.c0, t0.c1, t0.c0, t0.c2;
SELECT v0.c0, t0.c1, t0.c0, t0.c2 FROM v0, t0 WHERE (t0.c0) GROUP BY v0.c0, t0.c1, t0.c0, t0.c2 UNION SELECT ALL v0.c0, t0.c1, t0.c0, t0.c2 FROM v0, t0 WHERE ((NOT (t0.c0))) GROUP BY v0.c0, t0.c1, t0.c0, t0.c2 UNION SELECT v0.c0, t0.c1, t0.c0, t0.c2 FROM v0, t0 WHERE (((t0.c0) ISNULL)) GROUP BY v0.c0, t0.c1, t0.c0, t0.c2;
SELECT ALL v0.c0, t0.c1, t0.c0, t0.c2 FROM v0, t0 GROUP BY v0.c0, t0.c1, t0.c0, t0.c2;
SELECT v0.c0, t0.c0 FROM v0, t0 GROUP BY v0.c0, t0.c0;
SELECT ALL v0.c0, t0.c0 FROM v0, t0 GROUP BY v0.c0, t0.c0 HAVING CASE WHEN NULL THEN v0.c0 ELSE t0.c2 END COLLATE BINARY UNION ALL SELECT v0.c0, t0.c0 FROM v0, t0 GROUP BY v0.c0, t0.c0 HAVING (NOT (CASE WHEN NULL THEN v0.c0 ELSE t0.c2 END COLLATE BINARY)) UNION ALL SELECT ALL v0.c0, t0.c0 FROM v0, t0 GROUP BY v0.c0, t0.c0 HAVING ((CASE WHEN NULL THEN v0.c0 ELSE t0.c2 END COLLATE BINARY) ISNULL);
SELECT v0.c0, t0.c0 FROM v0, t0 GROUP BY v0.c0, t0.c0;
SELECT ALL v0.c0, t0.c0 FROM v0, t0 GROUP BY v0.c0, t0.c0 HAVING CASE WHEN NULL THEN v0.c0 ELSE t0.c2 END COLLATE BINARY UNION ALL SELECT v0.c0, t0.c0 FROM v0, t0 GROUP BY v0.c0, t0.c0 HAVING (NOT (CASE WHEN NULL THEN v0.c0 ELSE t0.c2 END COLLATE BINARY)) UNION ALL SELECT ALL v0.c0, t0.c0 FROM v0, t0 GROUP BY v0.c0, t0.c0 HAVING ((CASE WHEN NULL THEN v0.c0 ELSE t0.c2 END COLLATE BINARY) ISNULL);
SELECT v0.c0, t0.c0 FROM v0, t0 GROUP BY v0.c0, t0.c0;
SELECT * FROM t1;
SELECT * FROM t1 WHERE ((((t1.c0)) NOT BETWEEN ((COALESCE(t1.c0, t1.c0))) AND ((((t1.c0) IS TRUE))))) UNION ALL SELECT ALL * FROM t1 WHERE ((NOT ((((t1.c0)) NOT BETWEEN ((COALESCE(t1.c0, t1.c0))) AND ((((t1.c0) IS TRUE))))))) UNION ALL SELECT * FROM t1 WHERE ((((((t1.c0)) NOT BETWEEN ((COALESCE(t1.c0, t1.c0))) AND ((((t1.c0) IS TRUE))))) ISNULL));
SELECT * FROM t1;
SELECT DISTINCT * FROM t1, t0, v0;
SELECT DISTINCT * FROM t1, t0, v0 WHERE (CASE WHEN t0.c0 COLLATE NOCASE THEN CASE t0.c2  WHEN t0.c2 THEN t0.c1 WHEN t0.c1 THEN t0.c0 WHEN t0.c1 THEN t0.c0 END END) UNION SELECT DISTINCT * FROM t1, t0, v0 WHERE ((NOT (CASE WHEN t0.c0 COLLATE NOCASE THEN CASE t0.c2  WHEN t0.c2 THEN t0.c1 WHEN t0.c1 THEN t0.c0 WHEN t0.c1 THEN t0.c0 END END))) UNION SELECT DISTINCT * FROM t1, t0, v0 WHERE (((CASE WHEN t0.c0 COLLATE NOCASE THEN CASE t0.c2  WHEN t0.c2 THEN t0.c1 WHEN t0.c1 THEN t0.c0 WHEN t0.c1 THEN t0.c0 END END) ISNULL));
SELECT DISTINCT * FROM t1, t0, v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((((((v0.c0)%(v0.c0)))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))AND(((0.9298906522546176) BETWEEN (v0.c0) AND (v0.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((((v0.c0)%(v0.c0)))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))AND(((0.9298906522546176) BETWEEN (v0.c0) AND (v0.c0))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((((((v0.c0)%(v0.c0)))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))AND(((0.9298906522546176) BETWEEN (v0.c0) AND (v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL t0.c1, t0.c0, t0.c2, v0.c0 FROM v0 INNER JOIN t0 ON UNLIKELY(CASE t0.c0  WHEN t0.c2 THEN '386717167' END) GROUP BY t0.c1, t0.c0, t0.c2, v0.c0;
SELECT ALL t0.c1, t0.c0, t0.c2, v0.c0 FROM v0 INNER JOIN t0 ON UNLIKELY(CASE t0.c0  WHEN t0.c2 THEN '386717167' END) GROUP BY t0.c1, t0.c0, t0.c2, v0.c0 HAVING TOTAL(((t0.c1)*(GROUP_CONCAT(SUM(0.1344063631893534))))) UNION ALL SELECT ALL t0.c1, t0.c0, t0.c2, v0.c0 FROM v0 INNER JOIN t0 ON UNLIKELY(CASE t0.c0  WHEN t0.c2 THEN '386717167' END) GROUP BY t0.c1, t0.c0, t0.c2, v0.c0 HAVING (NOT (TOTAL(((t0.c1)*(GROUP_CONCAT(SUM(0.1344063631893534))))))) UNION ALL SELECT t0.c1, t0.c0, t0.c2, v0.c0 FROM v0 INNER JOIN t0 ON UNLIKELY(CASE t0.c0  WHEN t0.c2 THEN '386717167' END) GROUP BY t0.c1, t0.c0, t0.c2, v0.c0 HAVING ((TOTAL(((t0.c1)*(GROUP_CONCAT(SUM(0.1344063631893534)))))) ISNULL);
SELECT t1.c0, t0.c1, v0.c0, t0.c0 FROM v0, t0, t1;
SELECT ALL t1.c0, t0.c1, v0.c0, t0.c0 FROM v0, t0, t1 WHERE (0.28775899785256764) UNION ALL SELECT t1.c0, t0.c1, v0.c0, t0.c0 FROM v0, t0, t1 WHERE ((NOT (0.28775899785256764))) UNION ALL SELECT ALL t1.c0, t0.c1, v0.c0, t0.c0 FROM v0, t0, t1 WHERE (((0.28775899785256764) ISNULL));
SELECT t1.c0, t0.c1, v0.c0, t0.c0 FROM v0, t0, t1;
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE ((((+ (t1.c0)))||(((6.52661028E8) NOTNULL)))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT ((((+ (t1.c0)))||(((6.52661028E8) NOTNULL)))))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((((((+ (t1.c0)))||(((6.52661028E8) NOTNULL)))) ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT ALL t0.c0, t0.c2 FROM t0, v0 GROUP BY t0.c0, t0.c2;
SELECT ALL t0.c0, t0.c2 FROM t0, v0 WHERE (0.1070878496037102) GROUP BY t0.c0, t0.c2 UNION SELECT ALL t0.c0, t0.c2 FROM t0, v0 WHERE ((NOT (0.1070878496037102))) GROUP BY t0.c0, t0.c2 UNION SELECT t0.c0, t0.c2 FROM t0, v0 WHERE (((0.1070878496037102) ISNULL)) GROUP BY t0.c0, t0.c2;
SELECT ALL t0.c0, t0.c2 FROM t0, v0 GROUP BY t0.c0, t0.c2;
SELECT ALL t0.c1, t1.c0, t0.c2, t0.c0 FROM t0 LEFT OUTER JOIN t1 ON ((((((((t0.c2)AND(t0.c2)))OR(t0.c1)))AND(t0.c2)))AND(t0.c1)) COLLATE RTRIM COLLATE NOCASE GROUP BY t0.c1, t1.c0, t0.c2, t0.c0;
SELECT ALL t0.c1, t1.c0, t0.c2, t0.c0 FROM t0 LEFT OUTER JOIN t1 ON ((((((((t0.c2)AND(t0.c2)))OR(t0.c1)))AND(t0.c2)))AND(t0.c1)) COLLATE RTRIM COLLATE NOCASE GROUP BY t0.c1, t1.c0, t0.c2, t0.c0 HAVING MIN(LOWER(DISTINCT t0.c2)) UNION ALL SELECT t0.c1, t1.c0, t0.c2, t0.c0 FROM t0 LEFT OUTER JOIN t1 ON ((((((((t0.c2)AND(t0.c2)))OR(t0.c1)))AND(t0.c2)))AND(t0.c1)) COLLATE RTRIM COLLATE NOCASE GROUP BY t0.c1, t1.c0, t0.c2, t0.c0 HAVING (NOT (MIN(LOWER(DISTINCT t0.c2)))) UNION ALL SELECT ALL t0.c1, t1.c0, t0.c2, t0.c0 FROM t0 LEFT OUTER JOIN t1 ON ((((((((t0.c2)AND(t0.c2)))OR(t0.c1)))AND(t0.c2)))AND(t0.c1)) COLLATE RTRIM COLLATE NOCASE GROUP BY t0.c1, t1.c0, t0.c2, t0.c0 HAVING ((MIN(LOWER(DISTINCT t0.c2))) ISNULL);
SELECT ALL t0.c1, t1.c0, t0.c2, t0.c0 FROM t0 LEFT OUTER JOIN t1 ON ((((((((t0.c2)AND(t0.c2)))OR(t0.c1)))AND(t0.c2)))AND(t0.c1)) COLLATE RTRIM COLLATE NOCASE GROUP BY t0.c1, t1.c0, t0.c2, t0.c0;
SELECT ALL t0.c1, t1.c0, t0.c2, t0.c0 FROM t0 LEFT OUTER JOIN t1 ON ((((((((t0.c2)AND(t0.c2)))OR(t0.c1)))AND(t0.c2)))AND(t0.c1)) COLLATE RTRIM COLLATE NOCASE GROUP BY t0.c1, t1.c0, t0.c2, t0.c0 HAVING MIN(LOWER(DISTINCT t0.c2)) UNION ALL SELECT t0.c1, t1.c0, t0.c2, t0.c0 FROM t0 LEFT OUTER JOIN t1 ON ((((((((t0.c2)AND(t0.c2)))OR(t0.c1)))AND(t0.c2)))AND(t0.c1)) COLLATE RTRIM COLLATE NOCASE GROUP BY t0.c1, t1.c0, t0.c2, t0.c0 HAVING (NOT (MIN(LOWER(DISTINCT t0.c2)))) UNION ALL SELECT ALL t0.c1, t1.c0, t0.c2, t0.c0 FROM t0 LEFT OUTER JOIN t1 ON ((((((((t0.c2)AND(t0.c2)))OR(t0.c1)))AND(t0.c2)))AND(t0.c1)) COLLATE RTRIM COLLATE NOCASE GROUP BY t0.c1, t1.c0, t0.c2, t0.c0 HAVING ((MIN(LOWER(DISTINCT t0.c2))) ISNULL);
SELECT ALL t0.c1, t1.c0, t0.c2, t0.c0 FROM t0 LEFT OUTER JOIN t1 ON ((((((((t0.c2)AND(t0.c2)))OR(t0.c1)))AND(t0.c2)))AND(t0.c1)) COLLATE RTRIM COLLATE NOCASE GROUP BY t0.c1, t1.c0, t0.c2, t0.c0;
SELECT t0.c0 FROM t1 INNER JOIN t0 ON (((t1.c0) ISNULL) IN ());
SELECT ALL t0.c0 FROM t1 INNER JOIN t0 ON (((t1.c0) ISNULL) IN ()) WHERE ((((((t1.c0, t1.c0, t0.c0)) NOT BETWEEN ((t1.c0, t1.c0, '1160834351')) AND ((t0.c1, t0.c1, t0.c2)))) IS TRUE)) UNION ALL SELECT t0.c0 FROM t1 INNER JOIN t0 ON (((t1.c0) ISNULL) IN ()) WHERE ((NOT ((((((t1.c0, t1.c0, t0.c0)) NOT BETWEEN ((t1.c0, t1.c0, '1160834351')) AND ((t0.c1, t0.c1, t0.c2)))) IS TRUE)))) UNION ALL SELECT t0.c0 FROM t1 INNER JOIN t0 ON (((t1.c0) ISNULL) IN ()) WHERE ((((((((t1.c0, t1.c0, t0.c0)) NOT BETWEEN ((t1.c0, t1.c0, '1160834351')) AND ((t0.c1, t0.c1, t0.c2)))) IS TRUE)) ISNULL));
SELECT t0.c0 FROM t1 INNER JOIN t0 ON (((t1.c0) ISNULL) IN ());
SELECT DISTINCT * FROM v0, t1;
SELECT DISTINCT * FROM v0, t1 WHERE ((((v0.c0)%(t1.c0)) IN ())) UNION SELECT DISTINCT * FROM v0, t1 WHERE ((NOT ((((v0.c0)%(t1.c0)) IN ())))) UNION SELECT DISTINCT * FROM v0, t1 WHERE ((((((v0.c0)%(t1.c0)) IN ())) ISNULL));
SELECT DISTINCT * FROM v0, t1;
SELECT ALL t0.c1, t0.c2, t0.c0 FROM t0 GROUP BY t0.c1, t0.c2, t0.c0;
SELECT ALL t0.c1, t0.c2, t0.c0 FROM t0 WHERE (x'35074db8') GROUP BY t0.c1, t0.c2, t0.c0 UNION SELECT t0.c1, t0.c2, t0.c0 FROM t0 WHERE ((NOT (x'35074db8'))) GROUP BY t0.c1, t0.c2, t0.c0 UNION SELECT t0.c1, t0.c2, t0.c0 FROM t0 WHERE (((x'35074db8') ISNULL)) GROUP BY t0.c1, t0.c2, t0.c0;
SELECT ALL t0.c1, t0.c2, t0.c0 FROM t0 GROUP BY t0.c1, t0.c2, t0.c0;
SELECT ALL t0.c2, t1.c0, v0.c0, t0.c0 FROM t1, v0 NATURAL JOIN t0 GROUP BY t0.c2, t1.c0, v0.c0, t0.c0;
SELECT ALL t0.c2, t1.c0, v0.c0, t0.c0 FROM t1, v0 NATURAL JOIN t0 GROUP BY t0.c2, t1.c0, v0.c0, t0.c0 HAVING AVG(MAX(0.9102578824659161)) UNION ALL SELECT t0.c2, t1.c0, v0.c0, t0.c0 FROM t1, v0 NATURAL JOIN t0 GROUP BY t0.c2, t1.c0, v0.c0, t0.c0 HAVING (NOT (AVG(MAX(0.9102578824659161)))) UNION ALL SELECT t0.c2, t1.c0, v0.c0, t0.c0 FROM t1, v0 NATURAL JOIN t0 GROUP BY t0.c2, t1.c0, v0.c0, t0.c0 HAVING ((AVG(MAX(0.9102578824659161))) ISNULL);
SELECT ALL MIN(((t0.c2 COLLATE NOCASE)<>(((((v0.c0)OR(v0.c0)))OR(t0.c2))))) FROM v0, t0 ORDER BY ((x'e9fe') BETWEEN ((NOT (t0.c2))) AND (CAST(t0.c2 AS REAL))) DESC  NULLS LAST;
SELECT ALL v0.c0 FROM t1, v0;
SELECT v0.c0 FROM t1, v0 WHERE (((t1.c0) BETWEEN (-818893437) AND (t1.c0))) ORDER BY (+ (CASE WHEN t1.c0 THEN v0.c0 WHEN v0.c0 THEN t1.c0 WHEN t1.c0 THEN v0.c0 WHEN t1.c0 THEN v0.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)) DESC;
SELECT ALL v0.c0 FROM t1, v0 WHERE ((NOT (((t1.c0) BETWEEN (-818893437) AND (t1.c0))))) ORDER BY (+ (CASE WHEN t1.c0 THEN v0.c0 WHEN v0.c0 THEN t1.c0 WHEN t1.c0 THEN v0.c0 WHEN t1.c0 THEN v0.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)) DESC;
SELECT ALL v0.c0 FROM t1, v0 WHERE (((((t1.c0) BETWEEN (-818893437) AND (t1.c0))) ISNULL)) ORDER BY (+ (CASE WHEN t1.c0 THEN v0.c0 WHEN v0.c0 THEN t1.c0 WHEN t1.c0 THEN v0.c0 WHEN t1.c0 THEN v0.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)) DESC;
SELECT ALL v0.c0 FROM t1, v0;
SELECT DISTINCT t0.c2, t0.c0 FROM t0, t1, v0;
SELECT DISTINCT t0.c2, t0.c0 FROM t0, t1, v0 WHERE (CASE WHEN json_quote(t1.c0) THEN (t1.c0 IN ()) END) UNION SELECT DISTINCT t0.c2, t0.c0 FROM t0, t1, v0 WHERE ((NOT (CASE WHEN json_quote(t1.c0) THEN (t1.c0 IN ()) END))) UNION SELECT DISTINCT t0.c2, t0.c0 FROM t0, t1, v0 WHERE (((CASE WHEN json_quote(t1.c0) THEN (t1.c0 IN ()) END) ISNULL));
SELECT DISTINCT t0.c2, t0.c0 FROM t0, t1, v0;
SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1;
SELECT t0.c2, t0.c0, t0.c1 FROM t0 WHERE (CAST(CAST(t0.c0 AS NUMERIC) AS BLOB)) GROUP BY t0.c2, t0.c0, t0.c1 UNION SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 WHERE ((NOT (CAST(CAST(t0.c0 AS NUMERIC) AS BLOB)))) GROUP BY t0.c2, t0.c0, t0.c1 UNION SELECT t0.c2, t0.c0, t0.c1 FROM t0 WHERE (((CAST(CAST(t0.c0 AS NUMERIC) AS BLOB)) ISNULL)) GROUP BY t0.c2, t0.c0, t0.c1;
SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT * FROM t1, t0;
SELECT ALL * FROM t1, t0 WHERE ((((((t0.c2)) BETWEEN ((t1.c0)) AND ((t0.c2))))+(t0.c1))) UNION ALL SELECT * FROM t1, t0 WHERE ((NOT ((((((t0.c2)) BETWEEN ((t1.c0)) AND ((t0.c2))))+(t0.c1))))) UNION ALL SELECT * FROM t1, t0 WHERE ((((((((t0.c2)) BETWEEN ((t1.c0)) AND ((t0.c2))))+(t0.c1))) ISNULL));
SELECT * FROM t1, t0;
SELECT DISTINCT * FROM t0, t1;
SELECT DISTINCT * FROM t0, t1 WHERE ((((NULL)) BETWEEN (((t0.c2 IN (t1.c0)))) AND (((((t0.c2))>((t0.c2))))))) UNION SELECT DISTINCT * FROM t0, t1 WHERE ((NOT ((((NULL)) BETWEEN (((t0.c2 IN (t1.c0)))) AND (((((t0.c2))>((t0.c2))))))))) UNION SELECT DISTINCT * FROM t0, t1 WHERE ((((((NULL)) BETWEEN (((t0.c2 IN (t1.c0)))) AND (((((t0.c2))>((t0.c2))))))) ISNULL));
SELECT DISTINCT * FROM t0, t1;
SELECT t1.c0 FROM v0, t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM v0, t1 WHERE (UNLIKELY(v0.c0 COLLATE NOCASE)) GROUP BY t1.c0 UNION SELECT t1.c0 FROM v0, t1 WHERE ((NOT (UNLIKELY(v0.c0 COLLATE NOCASE)))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM v0, t1 WHERE (((UNLIKELY(v0.c0 COLLATE NOCASE)) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM v0, t1 GROUP BY t1.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING TOTAL(UNLIKELY(DISTINCT COUNT(MIN(v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TOTAL(UNLIKELY(DISTINCT COUNT(MIN(v0.c0)))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL(UNLIKELY(DISTINCT COUNT(MIN(v0.c0))))) ISNULL);
SELECT ALL * FROM t0 FULL OUTER JOIN t1 ON CAST(NULL AS NUMERIC);
SELECT ALL * FROM t0 FULL OUTER JOIN t1 ON CAST(NULL AS NUMERIC) WHERE (CAST(LIKE('-169932717', t0.c0) AS REAL)) UNION ALL SELECT ALL * FROM t0 FULL OUTER JOIN t1 ON CAST(NULL AS NUMERIC) WHERE ((NOT (CAST(LIKE('-169932717', t0.c0) AS REAL)))) UNION ALL SELECT ALL * FROM t0 FULL OUTER JOIN t1 ON CAST(NULL AS NUMERIC) WHERE (((CAST(LIKE('-169932717', t0.c0) AS REAL)) ISNULL));
SELECT ALL * FROM t0 FULL OUTER JOIN t1 ON CAST(NULL AS NUMERIC);
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (((CAST(t1.c0 AS BLOB))GLOB((((t1.c0))<((NULL)))))) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (((CAST(t1.c0 AS BLOB))GLOB((((t1.c0))<((NULL)))))))) UNION SELECT DISTINCT * FROM t1 WHERE (((((CAST(t1.c0 AS BLOB))GLOB((((t1.c0))<((NULL)))))) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT ALL v0.c0, t1.c0 FROM t1, v0 GROUP BY v0.c0, t1.c0;
SELECT v0.c0, t1.c0 FROM t1, v0 WHERE (CAST(((t1.c0) NOT NULL) AS TEXT)) GROUP BY v0.c0, t1.c0 UNION SELECT ALL v0.c0, t1.c0 FROM t1, v0 WHERE ((NOT (CAST(((t1.c0) NOT NULL) AS TEXT)))) GROUP BY v0.c0, t1.c0 UNION SELECT v0.c0, t1.c0 FROM t1, v0 WHERE (((CAST(((t1.c0) NOT NULL) AS TEXT)) ISNULL)) GROUP BY v0.c0, t1.c0;
SELECT ALL v0.c0, t1.c0 FROM t1, v0 GROUP BY v0.c0, t1.c0;
SELECT ALL v0.c0, t0.c2, t0.c1 FROM t0, v0 GROUP BY v0.c0, t0.c2, t0.c1;
SELECT v0.c0, t0.c2, t0.c1 FROM t0, v0 GROUP BY v0.c0, t0.c2, t0.c1 HAVING TOTAL(COUNT(*)) UNION ALL SELECT v0.c0, t0.c2, t0.c1 FROM t0, v0 GROUP BY v0.c0, t0.c2, t0.c1 HAVING (NOT (TOTAL(COUNT(*)))) UNION ALL SELECT v0.c0, t0.c2, t0.c1 FROM t0, v0 GROUP BY v0.c0, t0.c2, t0.c1 HAVING ((TOTAL(COUNT(*))) ISNULL);
SELECT t0.c2, t1.c0, v0.c0, t0.c1 FROM v0, t0, t1;
SELECT t0.c2, t1.c0, v0.c0, t0.c1 FROM v0, t0, t1 WHERE ((((((((v0.c0, t0.c2, t1.c0)) BETWEEN ((t0.c1, t0.c0, 0.6825522475730467)) AND ((t0.c0, t0.c2, t0.c1))))OR((~ (t0.c1)))))OR(((t0.c2) IS FALSE)))) UNION ALL SELECT ALL t0.c2, t1.c0, v0.c0, t0.c1 FROM v0, t0, t1 WHERE ((NOT ((((((((v0.c0, t0.c2, t1.c0)) BETWEEN ((t0.c1, t0.c0, 0.6825522475730467)) AND ((t0.c0, t0.c2, t0.c1))))OR((~ (t0.c1)))))OR(((t0.c2) IS FALSE)))))) UNION ALL SELECT ALL t0.c2, t1.c0, v0.c0, t0.c1 FROM v0, t0, t1 WHERE ((((((((((v0.c0, t0.c2, t1.c0)) BETWEEN ((t0.c1, t0.c0, 0.6825522475730467)) AND ((t0.c0, t0.c2, t0.c1))))OR((~ (t0.c1)))))OR(((t0.c2) IS FALSE)))) ISNULL));
SELECT t0.c2, t1.c0, v0.c0, t0.c1 FROM v0, t0, t1;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (CASE CAST(t0.c1 AS NUMERIC)  WHEN (((t0.c0))==((t0.c1))) THEN ((t0.c2)&(t0.c0)) WHEN ((((((((t0.c2)OR(t0.c2)))OR(t0.c0)))OR(t0.c0)))OR(t0.c2)) THEN ((t0.c1)>(t0.c2)) WHEN (- (t0.c1)) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END ELSE ((((((((((((t0.c2)AND(t0.c2)))AND(t0.c2)))OR(t0.c0)))AND(t0.c0)))AND(NULL)))OR(t0.c1)) END) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (CASE CAST(t0.c1 AS NUMERIC)  WHEN (((t0.c0))=((t0.c1))) THEN ((t0.c2)&(t0.c0)) WHEN ((((((((t0.c2)OR(t0.c2)))OR(t0.c0)))OR(t0.c0)))OR(t0.c2)) THEN ((t0.c1)>(t0.c2)) WHEN (- (t0.c1)) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END ELSE ((((((((((((t0.c2)AND(t0.c2)))AND(t0.c2)))OR(t0.c0)))AND(t0.c0)))AND(NULL)))OR(t0.c1)) END))) UNION SELECT DISTINCT * FROM t0 WHERE (((CASE CAST(t0.c1 AS NUMERIC)  WHEN (((t0.c0))=((t0.c1))) THEN ((t0.c2)&(t0.c0)) WHEN ((((((((t0.c2)OR(t0.c2)))OR(t0.c0)))OR(t0.c0)))OR(t0.c2)) THEN ((t0.c1)>(t0.c2)) WHEN (- (t0.c1)) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END ELSE ((((((((((((t0.c2)AND(t0.c2)))AND(t0.c2)))OR(t0.c0)))AND(t0.c0)))AND(NULL)))OR(t0.c1)) END) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t1.c0, t0.c0, t0.c2, v0.c0, t0.c1 FROM v0 CROSS JOIN t1 ON (t0.c1 IN ()) LEFT OUTER JOIN t0 ON CAST(((x'')<<(t0.c2)) AS TEXT) GROUP BY t1.c0, t0.c0, t0.c2, v0.c0, t0.c1;
SELECT ALL t1.c0, t0.c0, t0.c2, v0.c0, t0.c1 FROM v0 CROSS JOIN t1 ON (t0.c1 IN ()) LEFT OUTER JOIN t0 ON CAST(((x'')<<(t0.c2)) AS TEXT) WHERE ((((v0.c0)) BETWEEN ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c1)))) AND ((json_remove(v0.c0, t1.c0, v0.c0, t0.c2))))) GROUP BY t1.c0, t0.c0, t0.c2, v0.c0, t0.c1 UNION SELECT ALL t1.c0, t0.c0, t0.c2, v0.c0, t0.c1 FROM v0 CROSS JOIN t1 ON (t0.c1 IN ()) LEFT OUTER JOIN t0 ON CAST(((x'')<<(t0.c2)) AS TEXT) WHERE ((NOT ((((v0.c0)) BETWEEN ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c1)))) AND ((json_remove(v0.c0, t1.c0, v0.c0, t0.c2))))))) GROUP BY t1.c0, t0.c0, t0.c2, v0.c0, t0.c1 UNION SELECT t1.c0, t0.c0, t0.c2, v0.c0, t0.c1 FROM v0 CROSS JOIN t1 ON (t0.c1 IN ()) LEFT OUTER JOIN t0 ON CAST(((x'')<<(t0.c2)) AS TEXT) WHERE ((((((v0.c0)) BETWEEN ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c1)))) AND ((json_remove(v0.c0, t1.c0, v0.c0, t0.c2))))) ISNULL)) GROUP BY t1.c0, t0.c0, t0.c2, v0.c0, t0.c1;
SELECT t1.c0, t0.c0, t0.c2, v0.c0, t0.c1 FROM v0 CROSS JOIN t1 ON (t0.c1 IN ()) LEFT OUTER JOIN t0 ON CAST(((x'')<<(t0.c2)) AS TEXT) GROUP BY t1.c0, t0.c0, t0.c2, v0.c0, t0.c1;
SELECT ALL t0.c0, v0.c0 FROM v0, t0 GROUP BY t0.c0, v0.c0;
SELECT ALL t0.c0, v0.c0 FROM v0, t0 GROUP BY t0.c0, v0.c0 HAVING CASE SUM(t0.c2)  WHEN (((t0.c2))<>((SUM(t0.c2)))) THEN load_extension(v0.c0) WHEN MIN(COUNT(t0.c1)) THEN MIN(x'') WHEN ((t0.c0) NOTNULL) THEN ((v0.c0)*(GROUP_CONCAT(t0.c2))) WHEN ((t0.c1) NOT BETWEEN (v0.c0) AND (t0.c2)) THEN ((GROUP_CONCAT(t0.c0)) IS TRUE) WHEN (t0.c0 IN (t0.c0, v0.c0)) THEN ((t0.c2)>(t0.c0)) ELSE (+ (COUNT(*))) END UNION ALL SELECT ALL t0.c0, v0.c0 FROM v0, t0 GROUP BY t0.c0, v0.c0 HAVING (NOT (CASE SUM(t0.c2)  WHEN (((t0.c2))<>((SUM(t0.c2)))) THEN load_extension(v0.c0) WHEN MIN(COUNT(t0.c1)) THEN MIN(x'') WHEN ((t0.c0) NOTNULL) THEN ((v0.c0)*(GROUP_CONCAT(t0.c2))) WHEN ((t0.c1) NOT BETWEEN (v0.c0) AND (t0.c2)) THEN ((GROUP_CONCAT(t0.c0)) IS TRUE) WHEN (t0.c0 IN (t0.c0, v0.c0)) THEN ((t0.c2)>(t0.c0)) ELSE (+ (COUNT(*))) END)) UNION ALL SELECT t0.c0, v0.c0 FROM v0, t0 GROUP BY t0.c0, v0.c0 HAVING ((CASE SUM(t0.c2)  WHEN (((t0.c2))<>((SUM(t0.c2)))) THEN load_extension(v0.c0) WHEN MIN(COUNT(t0.c1)) THEN MIN(x'') WHEN ((t0.c0) NOTNULL) THEN ((v0.c0)*(GROUP_CONCAT(t0.c2))) WHEN ((t0.c1) NOT BETWEEN (v0.c0) AND (t0.c2)) THEN ((GROUP_CONCAT(t0.c0)) IS TRUE) WHEN (t0.c0 IN (t0.c0, v0.c0)) THEN ((t0.c2)>(t0.c0)) ELSE (+ (COUNT(*))) END) ISNULL);
SELECT t0.c0, t0.c2, v0.c0 FROM v0 NATURAL JOIN t0;
SELECT t0.c0, t0.c2, v0.c0 FROM v0 NATURAL JOIN t0 WHERE (v0.c0) UNION ALL SELECT t0.c0, t0.c2, v0.c0 FROM v0 NATURAL JOIN t0 WHERE ((NOT (v0.c0))) UNION ALL SELECT t0.c0, t0.c2, v0.c0 FROM v0 NATURAL JOIN t0 WHERE (((v0.c0) ISNULL));
SELECT t0.c0, t0.c2, v0.c0 FROM v0 NATURAL JOIN t0;
SELECT DISTINCT * FROM t0, t1, v0;
SELECT DISTINCT * FROM t0, t1, v0 WHERE ('') UNION SELECT DISTINCT * FROM t0, t1, v0 WHERE ((NOT (''))) UNION SELECT DISTINCT * FROM t0, t1, v0 WHERE ((('') ISNULL));
SELECT DISTINCT * FROM t0, t1, v0;
SELECT t0.c0, t0.c1, t0.c2 FROM t0 GROUP BY t0.c0, t0.c1, t0.c2;
SELECT t0.c0, t0.c1, t0.c2 FROM t0 WHERE (LIKELIHOOD((('1977046783')*(t0.c0)), 0.31307040463687474)) GROUP BY t0.c0, t0.c1, t0.c2 UNION SELECT ALL t0.c0, t0.c1, t0.c2 FROM t0 WHERE ((NOT (LIKELIHOOD((('1977046783')*(t0.c0)), 0.31307040463687474)))) GROUP BY t0.c0, t0.c1, t0.c2 UNION SELECT ALL t0.c0, t0.c1, t0.c2 FROM t0 WHERE (((LIKELIHOOD((('1977046783')*(t0.c0)), 0.31307040463687474)) ISNULL)) GROUP BY t0.c0, t0.c1, t0.c2;
SELECT t0.c0, t0.c1, t0.c2 FROM t0 GROUP BY t0.c0, t0.c1, t0.c2;
SELECT t0.c2, t1.c0, t0.c1, t0.c0, v0.c0 FROM v0, t0, t1 GROUP BY t0.c2, t1.c0, t0.c1, t0.c0, v0.c0;
SELECT t0.c2, t1.c0, t0.c1, t0.c0, v0.c0 FROM v0, t0, t1 GROUP BY t0.c2, t1.c0, t0.c1, t0.c0, v0.c0 HAVING CAST(SUM(t0.c1) AS NUMERIC) UNION ALL SELECT t0.c2, t1.c0, t0.c1, t0.c0, v0.c0 FROM v0, t0, t1 GROUP BY t0.c2, t1.c0, t0.c1, t0.c0, v0.c0 HAVING (NOT (CAST(SUM(t0.c1) AS NUMERIC))) UNION ALL SELECT t0.c2, t1.c0, t0.c1, t0.c0, v0.c0 FROM v0, t0, t1 GROUP BY t0.c2, t1.c0, t0.c1, t0.c0, v0.c0 HAVING ((CAST(SUM(t0.c1) AS NUMERIC)) ISNULL);
SELECT t0.c2, t1.c0, t0.c1, t0.c0, v0.c0 FROM v0, t0, t1 GROUP BY t0.c2, t1.c0, t0.c1, t0.c0, v0.c0;
SELECT t0.c2, t1.c0, t0.c1, t0.c0, v0.c0 FROM v0, t0, t1 GROUP BY t0.c2, t1.c0, t0.c1, t0.c0, v0.c0 HAVING CAST(SUM(t0.c1) AS NUMERIC) UNION ALL SELECT t0.c2, t1.c0, t0.c1, t0.c0, v0.c0 FROM v0, t0, t1 GROUP BY t0.c2, t1.c0, t0.c1, t0.c0, v0.c0 HAVING (NOT (CAST(SUM(t0.c1) AS NUMERIC))) UNION ALL SELECT t0.c2, t1.c0, t0.c1, t0.c0, v0.c0 FROM v0, t0, t1 GROUP BY t0.c2, t1.c0, t0.c1, t0.c0, v0.c0 HAVING ((CAST(SUM(t0.c1) AS NUMERIC)) ISNULL);
SELECT t0.c2, t1.c0, t0.c1, t0.c0, v0.c0 FROM v0, t0, t1 GROUP BY t0.c2, t1.c0, t0.c1, t0.c0, v0.c0;
SELECT ALL t1.c0, v0.c0 FROM t1, v0 NOT INDEXED;
SELECT t1.c0, v0.c0 FROM t1, v0 WHERE (CAST(CAST(v0.c0 AS REAL) AS TEXT)) UNION ALL SELECT ALL t1.c0, v0.c0 FROM t1, v0 WHERE ((NOT (CAST(CAST(v0.c0 AS REAL) AS TEXT)))) UNION ALL SELECT t1.c0, v0.c0 FROM t1, v0 WHERE (((CAST(CAST(v0.c0 AS REAL) AS TEXT)) ISNULL));
SELECT ALL t1.c0, v0.c0 FROM t1, v0 NOT INDEXED;
SELECT DISTINCT t0.c1, t0.c2, v0.c0 FROM t1, v0, t0;
SELECT DISTINCT t0.c1, t0.c2, v0.c0 FROM t1, v0, t0 WHERE (CAST((t0.c1 IN ()) AS BLOB)) UNION SELECT DISTINCT t0.c1, t0.c2, v0.c0 FROM t1, v0, t0 WHERE ((NOT (CAST((t0.c1 IN ()) AS BLOB)))) UNION SELECT DISTINCT t0.c1, t0.c2, v0.c0 FROM t1, v0, t0 WHERE (((CAST((t0.c1 IN ()) AS BLOB)) ISNULL));
SELECT DISTINCT t0.c1, t0.c2, v0.c0 FROM t1, v0, t0;
SELECT t0.c2, t0.c0 FROM v0 CROSS JOIN t1 ON (~ (CASE t0.c2  WHEN t0.c0 THEN v0.c0 WHEN t0.c1 THEN t0.c2 WHEN t0.c2 THEN 0x3ec5fe1b ELSE t0.c0 END)) CROSS JOIN t0 ON (- (t1.c0 COLLATE NOCASE)) GROUP BY t0.c2, t0.c0;
SELECT ALL t0.c2, t0.c0 FROM v0 CROSS JOIN t1 ON (~ (CASE t0.c2  WHEN t0.c0 THEN v0.c0 WHEN t0.c1 THEN t0.c2 WHEN t0.c2 THEN 0X3ec5fe1b ELSE t0.c0 END)) CROSS JOIN t0 ON (- (t1.c0 COLLATE NOCASE)) WHERE (((((t1.c0) NOT BETWEEN (t0.c1) AND (0X70cf1707))) IS TRUE)) GROUP BY t0.c2, t0.c0 UNION SELECT t0.c2, t0.c0 FROM v0 CROSS JOIN t1 ON (~ (CASE t0.c2  WHEN t0.c0 THEN v0.c0 WHEN t0.c1 THEN t0.c2 WHEN t0.c2 THEN 0X3ec5fe1b ELSE t0.c0 END)) CROSS JOIN t0 ON (- (t1.c0 COLLATE NOCASE)) WHERE ((NOT (((((t1.c0) NOT BETWEEN (t0.c1) AND (0X70cf1707))) IS TRUE)))) GROUP BY t0.c2, t0.c0 UNION SELECT t0.c2, t0.c0 FROM v0 CROSS JOIN t1 ON (~ (CASE t0.c2  WHEN t0.c0 THEN v0.c0 WHEN t0.c1 THEN t0.c2 WHEN t0.c2 THEN 0X3ec5fe1b ELSE t0.c0 END)) CROSS JOIN t0 ON (- (t1.c0 COLLATE NOCASE)) WHERE (((((((t1.c0) NOT BETWEEN (t0.c1) AND (0x70cf1707))) IS TRUE)) ISNULL)) GROUP BY t0.c2, t0.c0;
SELECT t0.c2, t0.c0 FROM v0 CROSS JOIN t1 ON (~ (CASE t0.c2  WHEN t0.c0 THEN v0.c0 WHEN t0.c1 THEN t0.c2 WHEN t0.c2 THEN 0x3ec5fe1b ELSE t0.c0 END)) CROSS JOIN t0 ON (- (t1.c0 COLLATE NOCASE)) GROUP BY t0.c2, t0.c0;
SELECT t0.c2, t0.c1 FROM t0, v0, t1 GROUP BY t0.c2, t0.c1;
SELECT t0.c2, t0.c1 FROM t0, v0, t1 GROUP BY t0.c2, t0.c1 HAVING COUNT(((COUNT(SUM(MAX(TOTAL(t0.c0)))))+(t0.c1))) UNION ALL SELECT ALL t0.c2, t0.c1 FROM t0, v0, t1 GROUP BY t0.c2, t0.c1 HAVING (NOT (COUNT(((COUNT(SUM(MAX(TOTAL(t0.c0)))))+(t0.c1))))) UNION ALL SELECT ALL t0.c2, t0.c1 FROM t0, v0, t1 GROUP BY t0.c2, t0.c1 HAVING ((COUNT(((COUNT(SUM(MAX(TOTAL(t0.c0)))))+(t0.c1)))) ISNULL);
SELECT * FROM t1, t0;
SELECT ALL * FROM t1, t0 WHERE ('1732566413') UNION ALL SELECT * FROM t1, t0 WHERE ((NOT ('1732566413'))) UNION ALL SELECT ALL * FROM t1, t0 WHERE ((('1732566413') ISNULL));
SELECT * FROM t1, t0;
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE ((CAST(t1.c0 AS REAL) IN ())) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT ((CAST(t1.c0 AS REAL) IN ())))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((((CAST(t1.c0 AS REAL) IN ())) ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT ALL t1.c0 FROM t0 FULL OUTER JOIN t1 ON CAST(((t0.c2)>(x'')) AS BLOB) INNER JOIN v0 ON (((- (v0.c0)))IS NOT(((t0.c1) BETWEEN (t0.c0) AND (t0.c2)))) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t0 FULL OUTER JOIN t1 ON CAST(((t0.c2)>(x'')) AS BLOB) INNER JOIN v0 ON (((- (v0.c0)))IS NOT(((t0.c1) BETWEEN (t0.c0) AND (t0.c2)))) WHERE (((v0.c0) NOT BETWEEN (1.780315434E9) AND (x''))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t0 FULL OUTER JOIN t1 ON CAST(((t0.c2)>(x'')) AS BLOB) INNER JOIN v0 ON (((- (v0.c0)))IS NOT(((t0.c1) BETWEEN (t0.c0) AND (t0.c2)))) WHERE ((NOT (((v0.c0) NOT BETWEEN (1.780315434E9) AND (x''))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t0 FULL OUTER JOIN t1 ON CAST(((t0.c2)>(x'')) AS BLOB) INNER JOIN v0 ON (((- (v0.c0)))IS NOT(((t0.c1) BETWEEN (t0.c0) AND (t0.c2)))) WHERE (((((v0.c0) NOT BETWEEN (1.780315434E9) AND (x''))) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t0 FULL OUTER JOIN t1 ON CAST(((t0.c2)>(x'')) AS BLOB) INNER JOIN v0 ON (((- (v0.c0)))IS NOT(((t0.c1) BETWEEN (t0.c0) AND (t0.c2)))) GROUP BY t1.c0;
SELECT t1.c0 FROM v0 RIGHT OUTER JOIN t0 ON LOWER(DISTINCT ((v0.c0) ISNULL)) LEFT OUTER JOIN t1 ON load_extension(((((t0.c1)AND(t0.c1)))AND(t1.c0))) GROUP BY t1.c0;
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (((((x'a097')AND(((v0.c0) NOT BETWEEN (v0.c0) AND ('1931762708')))))AND(v0.c0 COLLATE NOCASE))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (((((x'a097')AND(((v0.c0) NOT BETWEEN (v0.c0) AND ('1931762708')))))AND(v0.c0 COLLATE NOCASE))))) UNION ALL SELECT ALL * FROM v0 WHERE (((((((x'a097')AND(((v0.c0) NOT BETWEEN (v0.c0) AND ('1931762708')))))AND(v0.c0 COLLATE NOCASE))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT t1.c0, t0.c2, v0.c0 FROM v0, t1 FULL OUTER JOIN t0 ON ((((0Xffffffff8056067a) NOTNULL))=((~ (t0.c1))));
SELECT DISTINCT t1.c0, t0.c2, v0.c0 FROM v0, t1 FULL OUTER JOIN t0 ON ((((0xffffffff8056067a) NOTNULL))=((~ (t0.c1)))) WHERE (CAST(((t0.c1)LIKE('챑h')) AS NUMERIC)) UNION SELECT DISTINCT t1.c0, t0.c2, v0.c0 FROM v0, t1 FULL OUTER JOIN t0 ON ((((0xffffffff8056067a) NOTNULL))=((~ (t0.c1)))) WHERE ((NOT (CAST(((t0.c1)LIKE('챑h')) AS NUMERIC)))) UNION SELECT DISTINCT t1.c0, t0.c2, v0.c0 FROM v0, t1 FULL OUTER JOIN t0 ON ((((0xffffffff8056067a) NOTNULL))==((~ (t0.c1)))) WHERE (((CAST(((t0.c1)LIKE('챑h')) AS NUMERIC)) ISNULL));
SELECT DISTINCT t1.c0, t0.c2, v0.c0 FROM v0, t1 FULL OUTER JOIN t0 ON ((((0Xffffffff8056067a) NOTNULL))=((~ (t0.c1))));
SELECT ALL t0.c2 FROM t0 NATURAL JOIN t1 GROUP BY t0.c2;
SELECT t0.c2 FROM t0 NATURAL JOIN t1 WHERE (((((t0.c1)/(t1.c0))) ISNULL)) GROUP BY t0.c2 UNION SELECT t0.c2 FROM t0 NATURAL JOIN t1 WHERE ((NOT (((((t0.c1)/(t1.c0))) ISNULL)))) GROUP BY t0.c2 UNION SELECT ALL t0.c2 FROM t0 NATURAL JOIN t1 WHERE (((((((t0.c1)/(t1.c0))) ISNULL)) ISNULL)) GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0 NATURAL JOIN t1 GROUP BY t0.c2;
SELECT t0.c1, t0.c2, t1.c0, t0.c0 FROM t0, t1 GROUP BY t0.c1, t0.c2, t1.c0, t0.c0;
SELECT ALL t0.c1, t0.c2, t1.c0, t0.c0 FROM t0, t1 GROUP BY t0.c1, t0.c2, t1.c0, t0.c0 HAVING 0.3603691484572692 COLLATE RTRIM UNION ALL SELECT ALL t0.c1, t0.c2, t1.c0, t0.c0 FROM t0, t1 GROUP BY t0.c1, t0.c2, t1.c0, t0.c0 HAVING (NOT (0.3603691484572692 COLLATE RTRIM)) UNION ALL SELECT ALL t0.c1, t0.c2, t1.c0, t0.c0 FROM t0, t1 GROUP BY t0.c1, t0.c2, t1.c0, t0.c0 HAVING ((0.3603691484572692 COLLATE RTRIM) ISNULL);
SELECT t0.c1, t0.c2, t1.c0, t0.c0 FROM t0, t1 GROUP BY t0.c1, t0.c2, t1.c0, t0.c0;
SELECT ALL t0.c1, t0.c2, t1.c0, t0.c0 FROM t0, t1 GROUP BY t0.c1, t0.c2, t1.c0, t0.c0 HAVING 0.3603691484572692 COLLATE RTRIM UNION ALL SELECT ALL t0.c1, t0.c2, t1.c0, t0.c0 FROM t0, t1 GROUP BY t0.c1, t0.c2, t1.c0, t0.c0 HAVING (NOT (0.3603691484572692 COLLATE RTRIM)) UNION ALL SELECT ALL t0.c1, t0.c2, t1.c0, t0.c0 FROM t0, t1 GROUP BY t0.c1, t0.c2, t1.c0, t0.c0 HAVING ((0.3603691484572692 COLLATE RTRIM) ISNULL);
SELECT t0.c1, t0.c2, t1.c0, t0.c0 FROM t0, t1 GROUP BY t0.c1, t0.c2, t1.c0, t0.c0;
SELECT ALL * FROM t0, v0;
SELECT ALL * FROM t0, v0 WHERE ((((((t0.c1))>((v0.c0)))) IS FALSE)) UNION ALL SELECT * FROM t0, v0 WHERE ((NOT ((((((t0.c1))>((v0.c0)))) IS FALSE)))) UNION ALL SELECT * FROM t0, v0 WHERE ((((((((t0.c1))>((v0.c0)))) IS FALSE)) ISNULL));
SELECT ALL * FROM t0, v0;
SELECT DISTINCT * FROM t0, v0;
SELECT DISTINCT * FROM t0, v0 WHERE (LOWER(DISTINCT CAST(t0.c0 AS BLOB))) UNION SELECT DISTINCT * FROM t0, v0 WHERE ((NOT (LOWER(DISTINCT CAST(t0.c0 AS BLOB))))) UNION SELECT DISTINCT * FROM t0, v0 WHERE (((LOWER(DISTINCT CAST(t0.c0 AS BLOB))) ISNULL));
SELECT DISTINCT * FROM t0, v0;
SELECT t1.c0, t0.c0 FROM t0 LEFT OUTER JOIN t1 ON CASE ((v0.c0)|(t0.c2))  WHEN CAST(t1.c0 AS REAL) THEN (t1.c0 IN ()) ELSE ((t1.c0)OR(t0.c0)) END LEFT OUTER JOIN v0 ON (((v0.c0 IN (t1.c0))) BETWEEN (TRIM('Rp??h')) AND (((((((((t0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(t0.c1)))) GROUP BY t1.c0, t0.c0;
SELECT t0.c1, t0.c0, v0.c0, t1.c0 FROM v0, t0, t1 GROUP BY t0.c1, t0.c0, v0.c0, t1.c0;
SELECT t0.c1, t0.c0, v0.c0, t1.c0 FROM v0, t0, t1 GROUP BY t0.c1, t0.c0, v0.c0, t1.c0 HAVING COUNT(*) COLLATE NOCASE UNION ALL SELECT t0.c1, t0.c0, v0.c0, t1.c0 FROM v0, t0, t1 GROUP BY t0.c1, t0.c0, v0.c0, t1.c0 HAVING (NOT (COUNT(*) COLLATE NOCASE)) UNION ALL SELECT ALL t0.c1, t0.c0, v0.c0, t1.c0 FROM v0, t0, t1 GROUP BY t0.c1, t0.c0, v0.c0, t1.c0 HAVING ((COUNT(*) COLLATE NOCASE) ISNULL);
SELECT t0.c1, t0.c0, v0.c0, t1.c0 FROM v0, t0, t1 GROUP BY t0.c1, t0.c0, v0.c0, t1.c0;
SELECT t0.c1, t0.c0, v0.c0, t1.c0 FROM v0, t0, t1 GROUP BY t0.c1, t0.c0, v0.c0, t1.c0 HAVING COUNT(*) COLLATE NOCASE UNION ALL SELECT t0.c1, t0.c0, v0.c0, t1.c0 FROM v0, t0, t1 GROUP BY t0.c1, t0.c0, v0.c0, t1.c0 HAVING (NOT (COUNT(*) COLLATE NOCASE)) UNION ALL SELECT ALL t0.c1, t0.c0, v0.c0, t1.c0 FROM v0, t0, t1 GROUP BY t0.c1, t0.c0, v0.c0, t1.c0 HAVING ((COUNT(*) COLLATE NOCASE) ISNULL);
SELECT t0.c1, t0.c0, v0.c0, t1.c0 FROM v0, t0, t1 GROUP BY t0.c1, t0.c0, v0.c0, t1.c0;
SELECT * FROM v0, t0, t1;
SELECT * FROM v0, t0 NOT INDEXED, t1 WHERE (((((v0.c0 IN ())))>=((((t1.c0) NOT NULL))))) UNION ALL SELECT * FROM v0, t0, t1 WHERE ((NOT (((((v0.c0 IN ())))>=((((t1.c0) NOT NULL))))))) UNION ALL SELECT ALL * FROM v0, t0, t1 WHERE (((((((v0.c0 IN ())))>=((((t1.c0) NOT NULL))))) ISNULL));
SELECT * FROM v0, t0, t1;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (CAST(CASE WHEN t1.c0 THEN t1.c0 WHEN '852328762' THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END AS INTEGER)) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (CAST(CASE WHEN t1.c0 THEN t1.c0 WHEN '852328762' THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END AS INTEGER)))) UNION SELECT DISTINCT * FROM t1 WHERE (((CAST(CASE WHEN t1.c0 THEN t1.c0 WHEN '852328762' THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT ALL t0.c0, t0.c2, v0.c0, t1.c0 FROM t1, t0, v0 GROUP BY t0.c0, t0.c2, v0.c0, t1.c0;
SELECT t0.c0, t0.c2, v0.c0, t1.c0 FROM t1, t0, v0 WHERE ((~ (CASE t0.c1  WHEN v0.c0 THEN v0.c0 END))) GROUP BY t0.c0, t0.c2, v0.c0, t1.c0 UNION SELECT t0.c0, t0.c2, v0.c0, t1.c0 FROM t1, t0, v0 WHERE ((NOT ((~ (CASE t0.c1  WHEN v0.c0 THEN v0.c0 END))))) GROUP BY t0.c0, t0.c2, v0.c0, t1.c0 UNION SELECT ALL t0.c0, t0.c2, v0.c0, t1.c0 FROM t1, t0, v0 WHERE ((((~ (CASE t0.c1  WHEN v0.c0 THEN v0.c0 END))) ISNULL)) GROUP BY t0.c0, t0.c2, v0.c0, t1.c0;
SELECT ALL t0.c0, t0.c2, v0.c0, t1.c0 FROM t1, t0, v0 GROUP BY t0.c0, t0.c2, v0.c0, t1.c0;
SELECT ALL v0.c0 FROM t1 NATURAL JOIN v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM t1 NATURAL JOIN v0 GROUP BY v0.c0 HAVING COUNT(SUM(TOTAL(v0.c0))) UNION ALL SELECT v0.c0 FROM t1 NATURAL JOIN v0 GROUP BY v0.c0 HAVING (NOT (COUNT(SUM(TOTAL(v0.c0))))) UNION ALL SELECT v0.c0 FROM t1 NATURAL JOIN v0 GROUP BY v0.c0 HAVING ((COUNT(SUM(TOTAL(v0.c0)))) ISNULL);
SELECT * FROM t1, v0;
SELECT ALL * FROM t1, v0 WHERE (CAST(v0.c0 COLLATE NOCASE AS TEXT)) UNION ALL SELECT * FROM t1, v0 WHERE ((NOT (CAST(v0.c0 COLLATE NOCASE AS TEXT)))) UNION ALL SELECT * FROM t1, v0 WHERE (((CAST(v0.c0 COLLATE NOCASE AS TEXT)) ISNULL));
SELECT * FROM t1, v0;
SELECT DISTINCT * FROM t1 INNER JOIN v0 ON CAST(NULLIF(t1.c0, t1.c0) AS REAL);
SELECT DISTINCT * FROM t1 INNER JOIN v0 ON CAST(NULLIF(t1.c0, t1.c0) AS REAL) WHERE (CASE WHEN CAST(t1.c0 AS TEXT) THEN (~ (v0.c0)) WHEN CASE t1.c0  WHEN t1.c0 THEN v0.c0 END THEN RTRIM(t1.c0) WHEN (((v0.c0))<((t1.c0))) THEN ((t1.c0) NOTNULL) ELSE t1.c0 COLLATE NOCASE END) UNION SELECT DISTINCT * FROM t1 INNER JOIN v0 ON CAST(NULLIF(t1.c0, t1.c0) AS REAL) WHERE ((NOT (CASE WHEN CAST(t1.c0 AS TEXT) THEN (~ (v0.c0)) WHEN CASE t1.c0  WHEN t1.c0 THEN v0.c0 END THEN RTRIM(t1.c0) WHEN (((v0.c0))<((t1.c0))) THEN ((t1.c0) NOTNULL) ELSE t1.c0 COLLATE NOCASE END))) UNION SELECT DISTINCT * FROM t1 INNER JOIN v0 ON CAST(NULLIF(t1.c0, t1.c0) AS REAL) WHERE (((CASE WHEN CAST(t1.c0 AS TEXT) THEN (~ (v0.c0)) WHEN CASE t1.c0  WHEN t1.c0 THEN v0.c0 END THEN RTRIM(t1.c0) WHEN (((v0.c0))<((t1.c0))) THEN ((t1.c0) NOTNULL) ELSE t1.c0 COLLATE NOCASE END) ISNULL));
SELECT DISTINCT * FROM t1 INNER JOIN v0 ON CAST(NULLIF(t1.c0, t1.c0) AS REAL);
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE ((((t1.c0)) BETWEEN ((((('1862309478')) NOT BETWEEN ((t1.c0)) AND ((t1.c0))))) AND ((((t1.c0) ISNULL))))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT ((((t1.c0)) BETWEEN ((((('1862309478')) NOT BETWEEN ((t1.c0)) AND ((t1.c0))))) AND ((((t1.c0) ISNULL))))))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((((((t1.c0)) BETWEEN ((((('1862309478')) NOT BETWEEN ((t1.c0)) AND ((t1.c0))))) AND ((((t1.c0) ISNULL))))) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2;
SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING COUNT(COUNT(MAX(MAX(COUNT(t0.c2))))) UNION ALL SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING (NOT (COUNT(COUNT(MAX(MAX(COUNT(t0.c2))))))) UNION ALL SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING ((COUNT(COUNT(MAX(MAX(COUNT(t0.c2)))))) ISNULL);
SELECT ALL * FROM t1 RIGHT OUTER JOIN v0 ON ((SQLITE_COMPILEOPTION_USED(v0.c0)) BETWEEN (CASE t1.c0  WHEN t1.c0 THEN v0.c0 END) AND ((((v0.c0))<=((v0.c0)))));
SELECT * FROM t1 RIGHT OUTER JOIN v0 ON ((SQLITE_COMPILEOPTION_USED(v0.c0)) BETWEEN (CASE t1.c0  WHEN t1.c0 THEN v0.c0 END) AND ((((v0.c0))<=((v0.c0))))) WHERE ((+ (((v0.c0)==(t1.c0))))) UNION ALL SELECT ALL * FROM t1 RIGHT OUTER JOIN v0 ON ((SQLITE_COMPILEOPTION_USED(v0.c0)) BETWEEN (CASE t1.c0  WHEN t1.c0 THEN v0.c0 END) AND ((((v0.c0))<=((v0.c0))))) WHERE ((NOT ((+ (((v0.c0)=(t1.c0))))))) UNION ALL SELECT ALL * FROM t1 RIGHT OUTER JOIN v0 ON ((SQLITE_COMPILEOPTION_USED(v0.c0)) BETWEEN (CASE t1.c0  WHEN t1.c0 THEN v0.c0 END) AND ((((v0.c0))<=((v0.c0))))) WHERE ((((+ (((v0.c0)=(t1.c0))))) ISNULL));
SELECT ALL * FROM t1 RIGHT OUTER JOIN v0 ON ((SQLITE_COMPILEOPTION_USED(v0.c0)) BETWEEN (CASE t1.c0  WHEN t1.c0 THEN v0.c0 END) AND ((((v0.c0))<=((v0.c0)))));
SELECT DISTINCT * FROM t0, t1, v0;
SELECT DISTINCT * FROM t0, t1, v0 WHERE (CASE (~ (x'bcd9'))  WHEN (t0.c0 IN ()) THEN ((t1.c0)AND(v0.c0)) END) UNION SELECT DISTINCT * FROM t0, t1, v0 WHERE ((NOT (CASE (~ (x'bcd9'))  WHEN (t0.c0 IN ()) THEN ((t1.c0)AND(v0.c0)) END))) UNION SELECT DISTINCT * FROM t0, t1, v0 WHERE (((CASE (~ (x'bcd9'))  WHEN (t0.c0 IN ()) THEN ((t1.c0)AND(v0.c0)) END) ISNULL));
SELECT DISTINCT * FROM t0, t1, v0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE ((((- (t1.c0)))%(((t1.c0)>(t1.c0))))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT ((((- (t1.c0)))%(((t1.c0)>(t1.c0))))))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((((((- (t1.c0)))%(((t1.c0)>(t1.c0))))) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t0.c2, v0.c0, t0.c0, t0.c1, t1.c0 FROM t1, v0 FULL OUTER JOIN t0 ON ((CASE t1.c0  WHEN t0.c0 THEN '1956593637' WHEN t0.c1 THEN t0.c2 WHEN t0.c1 THEN t0.c0 WHEN t0.c0 THEN t0.c2 WHEN t0.c1 THEN v0.c0 ELSE t0.c0 END) IS TRUE) GROUP BY t0.c2, v0.c0, t0.c0, t0.c1, t1.c0;
SELECT t0.c2, v0.c0, t0.c0, t0.c1, t1.c0 FROM t1, v0 FULL OUTER JOIN t0 ON ((CASE t1.c0  WHEN t0.c0 THEN '1956593637' WHEN t0.c1 THEN t0.c2 WHEN t0.c1 THEN t0.c0 WHEN t0.c0 THEN t0.c2 WHEN t0.c1 THEN v0.c0 ELSE t0.c0 END) IS TRUE) GROUP BY t0.c2, v0.c0, t0.c0, t0.c1, t1.c0 HAVING HEX(AVG(t0.c0)) UNION ALL SELECT ALL t0.c2, v0.c0, t0.c0, t0.c1, t1.c0 FROM t1, v0 FULL OUTER JOIN t0 ON ((CASE t1.c0  WHEN t0.c0 THEN '1956593637' WHEN t0.c1 THEN t0.c2 WHEN t0.c1 THEN t0.c0 WHEN t0.c0 THEN t0.c2 WHEN t0.c1 THEN v0.c0 ELSE t0.c0 END) IS TRUE) GROUP BY t0.c2, v0.c0, t0.c0, t0.c1, t1.c0 HAVING (NOT (HEX(AVG(t0.c0)))) UNION ALL SELECT t0.c2, v0.c0, t0.c0, t0.c1, t1.c0 FROM t1, v0 FULL OUTER JOIN t0 ON ((CASE t1.c0  WHEN t0.c0 THEN '1956593637' WHEN t0.c1 THEN t0.c2 WHEN t0.c1 THEN t0.c0 WHEN t0.c0 THEN t0.c2 WHEN t0.c1 THEN v0.c0 ELSE t0.c0 END) IS TRUE) GROUP BY t0.c2, v0.c0, t0.c0, t0.c1, t1.c0 HAVING ((HEX(AVG(t0.c0))) ISNULL);
SELECT ALL t0.c2, v0.c0, t0.c0, t0.c1, t1.c0 FROM t1, v0 FULL OUTER JOIN t0 ON ((CASE t1.c0  WHEN t0.c0 THEN '1956593637' WHEN t0.c1 THEN t0.c2 WHEN t0.c1 THEN t0.c0 WHEN t0.c0 THEN t0.c2 WHEN t0.c1 THEN v0.c0 ELSE t0.c0 END) IS TRUE) GROUP BY t0.c2, v0.c0, t0.c0, t0.c1, t1.c0;
SELECT t0.c2, v0.c0, t0.c0, t0.c1, t1.c0 FROM t1, v0 FULL OUTER JOIN t0 ON ((CASE t1.c0  WHEN t0.c0 THEN '1956593637' WHEN t0.c1 THEN t0.c2 WHEN t0.c1 THEN t0.c0 WHEN t0.c0 THEN t0.c2 WHEN t0.c1 THEN v0.c0 ELSE t0.c0 END) IS TRUE) GROUP BY t0.c2, v0.c0, t0.c0, t0.c1, t1.c0 HAVING HEX(AVG(t0.c0)) UNION ALL SELECT ALL t0.c2, v0.c0, t0.c0, t0.c1, t1.c0 FROM t1, v0 FULL OUTER JOIN t0 ON ((CASE t1.c0  WHEN t0.c0 THEN '1956593637' WHEN t0.c1 THEN t0.c2 WHEN t0.c1 THEN t0.c0 WHEN t0.c0 THEN t0.c2 WHEN t0.c1 THEN v0.c0 ELSE t0.c0 END) IS TRUE) GROUP BY t0.c2, v0.c0, t0.c0, t0.c1, t1.c0 HAVING (NOT (HEX(AVG(t0.c0)))) UNION ALL SELECT t0.c2, v0.c0, t0.c0, t0.c1, t1.c0 FROM t1, v0 FULL OUTER JOIN t0 ON ((CASE t1.c0  WHEN t0.c0 THEN '1956593637' WHEN t0.c1 THEN t0.c2 WHEN t0.c1 THEN t0.c0 WHEN t0.c0 THEN t0.c2 WHEN t0.c1 THEN v0.c0 ELSE t0.c0 END) IS TRUE) GROUP BY t0.c2, v0.c0, t0.c0, t0.c1, t1.c0 HAVING ((HEX(AVG(t0.c0))) ISNULL);
SELECT ALL t0.c2, v0.c0, t0.c0, t0.c1, t1.c0 FROM t1, v0 FULL OUTER JOIN t0 ON ((CASE t1.c0  WHEN t0.c0 THEN '1956593637' WHEN t0.c1 THEN t0.c2 WHEN t0.c1 THEN t0.c0 WHEN t0.c0 THEN t0.c2 WHEN t0.c1 THEN v0.c0 ELSE t0.c0 END) IS TRUE) GROUP BY t0.c2, v0.c0, t0.c0, t0.c1, t1.c0;
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE (t0.c1) UNION ALL SELECT * FROM t0 WHERE ((NOT (t0.c1))) UNION ALL SELECT * FROM t0 WHERE (((t0.c1) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM t1 RIGHT OUTER JOIN t0 ON '-1573545000' CROSS JOIN v0 ON (((v0.c0 IN ())) NOT BETWEEN (t1.c0) AND (((((((((t0.c2)AND(t0.c1)))AND(v0.c0)))OR(t1.c0)))AND(t0.c1))));
SELECT DISTINCT * FROM t1 RIGHT OUTER JOIN t0 ON '-1573545000' CROSS JOIN v0 ON (((v0.c0 IN ())) NOT BETWEEN (t1.c0) AND (((((((((t0.c2)AND(t0.c1)))AND(v0.c0)))OR(t1.c0)))AND(t0.c1)))) WHERE (CASE WHEN ((0x45f11dcb)OR(-887255462)) THEN t0.c0 COLLATE RTRIM END) UNION SELECT DISTINCT * FROM t1 RIGHT OUTER JOIN t0 ON '-1573545000' CROSS JOIN v0 ON (((v0.c0 IN ())) NOT BETWEEN (t1.c0) AND (((((((((t0.c2)AND(t0.c1)))AND(v0.c0)))OR(t1.c0)))AND(t0.c1)))) WHERE ((NOT (CASE WHEN ((0x45f11dcb)OR(-887255462)) THEN t0.c0 COLLATE RTRIM END))) UNION SELECT DISTINCT * FROM t1 RIGHT OUTER JOIN t0 ON '-1573545000' CROSS JOIN v0 ON (((v0.c0 IN ())) NOT BETWEEN (t1.c0) AND (((((((((t0.c2)AND(t0.c1)))AND(v0.c0)))OR(t1.c0)))AND(t0.c1)))) WHERE (((CASE WHEN ((0x45f11dcb)OR(-887255462)) THEN t0.c0 COLLATE RTRIM END) ISNULL));
SELECT DISTINCT * FROM t1 RIGHT OUTER JOIN t0 ON '-1573545000' CROSS JOIN v0 ON (((v0.c0 IN ())) NOT BETWEEN (t1.c0) AND (((((((((t0.c2)AND(t0.c1)))AND(v0.c0)))OR(t1.c0)))AND(t0.c1))));
SELECT ALL t0.c0 FROM t1, v0, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t1, v0, t0 WHERE ((~ (CAST(t1.c0 AS BLOB)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t1, v0, t0 WHERE ((NOT ((~ (CAST(t1.c0 AS BLOB)))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t1, v0, t0 WHERE ((((~ (CAST(t1.c0 AS BLOB)))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t1, v0, t0 GROUP BY t0.c0;
SELECT ALL v0.c0, t0.c0 FROM t1, t0, v0 GROUP BY v0.c0, t0.c0;
SELECT ALL v0.c0, t0.c0 FROM t1, t0, v0 GROUP BY v0.c0, t0.c0 HAVING TOTAL((- (COUNT(t0.c0)))) UNION ALL SELECT ALL v0.c0, t0.c0 FROM t1, t0, v0 GROUP BY v0.c0, t0.c0 HAVING (NOT (TOTAL((- (COUNT(t0.c0)))))) UNION ALL SELECT v0.c0, t0.c0 FROM t1, t0, v0 GROUP BY v0.c0, t0.c0 HAVING ((TOTAL((- (COUNT(t0.c0))))) ISNULL);
SELECT ALL TOTAL(CASE WHEN CASE t0.c1  WHEN t1.c0 THEN t0.c1 END THEN ((t0.c1) NOT BETWEEN (t0.c0) AND (t1.c0)) END) FROM v0, t0, t1 ORDER BY UPPER(((t0.c0)&(t0.c0))) DESC;
SELECT ALL t0.c0, t0.c2, t0.c1, v0.c0 FROM t0 LEFT OUTER JOIN v0 ON (((t0.c0)IS(t0.c2)) IN ());
SELECT ALL t0.c0, t0.c2, t0.c1, v0.c0 FROM t0 LEFT OUTER JOIN v0 ON (((t0.c0)IS(t0.c2)) IN ()) WHERE (NULL) ORDER BY (((((t0.c1)AND(v0.c0)))OR(t0.c0)) IN (LIKELY(DISTINCT 0.529904297913107))) DESC;
SELECT t0.c0, t0.c2, t0.c1, v0.c0 FROM t0 LEFT OUTER JOIN v0 ON (((t0.c0)IS(t0.c2)) IN ()) WHERE ((NOT (NULL))) ORDER BY (((((t0.c1)AND(v0.c0)))OR(t0.c0)) IN (LIKELY(DISTINCT 0.529904297913107))) DESC;
SELECT ALL t0.c0, t0.c2, t0.c1, v0.c0 FROM t0 LEFT OUTER JOIN v0 ON (((t0.c0)IS(t0.c2)) IN ()) WHERE (((NULL) ISNULL)) ORDER BY (((((t0.c1)AND(v0.c0)))OR(t0.c0)) IN (LIKELY(DISTINCT 0.529904297913107))) DESC;
SELECT ALL t0.c0, t0.c2, t0.c1, v0.c0 FROM t0 LEFT OUTER JOIN v0 ON (((t0.c0)IS(t0.c2)) IN ());
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (NULL) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((NULL) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT t1.c0, v0.c0 FROM t1, v0 GROUP BY t1.c0, v0.c0;
SELECT ALL t1.c0, v0.c0 FROM t1, v0 WHERE (t1.c0) GROUP BY t1.c0, v0.c0 UNION SELECT t1.c0, v0.c0 FROM t1, v0 WHERE ((NOT (t1.c0))) GROUP BY t1.c0, v0.c0 UNION SELECT t1.c0, v0.c0 FROM t1, v0 WHERE (((t1.c0) ISNULL)) GROUP BY t1.c0, v0.c0;
SELECT t1.c0, v0.c0 FROM t1, v0 GROUP BY t1.c0, v0.c0;
SELECT v0.c0, t0.c0 FROM v0, t0 GROUP BY v0.c0, t0.c0;
SELECT v0.c0, t0.c0 FROM v0, t0 GROUP BY v0.c0, t0.c0 HAVING v0.c0 UNION ALL SELECT v0.c0, t0.c0 FROM v0, t0 GROUP BY v0.c0, t0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT v0.c0, t0.c0 FROM v0, t0 GROUP BY v0.c0, t0.c0 HAVING ((v0.c0) ISNULL);
SELECT v0.c0, t0.c0 FROM v0, t0 GROUP BY v0.c0, t0.c0;
SELECT v0.c0, t0.c0 FROM v0, t0 GROUP BY v0.c0, t0.c0 HAVING v0.c0 UNION ALL SELECT v0.c0, t0.c0 FROM v0, t0 GROUP BY v0.c0, t0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT v0.c0, t0.c0 FROM v0, t0 GROUP BY v0.c0, t0.c0 HAVING ((v0.c0) ISNULL);
SELECT v0.c0, t0.c0 FROM v0, t0 GROUP BY v0.c0, t0.c0;
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE (UPPER(DISTINCT (((t0.c1)) NOT BETWEEN ((t0.c0)) AND (('-14003873'))))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (UPPER(DISTINCT (((t0.c1)) NOT BETWEEN ((t0.c0)) AND (('-14003873'))))))) UNION ALL SELECT * FROM t0 WHERE (((UPPER(DISTINCT (((t0.c1)) NOT BETWEEN ((t0.c0)) AND (('-14003873'))))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT t1.c0, t0.c0 FROM t1, v0, t0;
SELECT DISTINCT t1.c0, t0.c0 FROM t1, v0, t0 WHERE (t0.c0) UNION SELECT DISTINCT t1.c0, t0.c0 FROM t1, v0, t0 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT t1.c0, t0.c0 FROM t1, v0, t0 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT t1.c0, t0.c0 FROM t1, v0, t0;
SELECT t0.c2 FROM v0, t0 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM v0, t0 WHERE ((((((t0.c2)) NOT BETWEEN ((t0.c0)) AND ((0.7750638359696913)))) BETWEEN (((t0.c0)>(t0.c0))) AND (t0.c0 COLLATE NOCASE))) GROUP BY t0.c2 UNION SELECT ALL t0.c2 FROM v0, t0 WHERE ((NOT ((((((t0.c2)) NOT BETWEEN ((t0.c0)) AND ((0.7750638359696913)))) BETWEEN (((t0.c0)>(t0.c0))) AND (t0.c0 COLLATE NOCASE))))) GROUP BY t0.c2 UNION SELECT t0.c2 FROM v0, t0 WHERE ((((((((t0.c2)) NOT BETWEEN ((t0.c0)) AND ((0.7750638359696913)))) BETWEEN (((t0.c0)>(t0.c0))) AND (t0.c0 COLLATE NOCASE))) ISNULL)) GROUP BY t0.c2;
SELECT t0.c2 FROM v0, t0 GROUP BY t0.c2;
SELECT t0.c2, t0.c1, v0.c0, t1.c0, t0.c0 FROM t1 INNER JOIN v0 ON (((NULL)) BETWEEN ((t1.c0)) AND ((t1.c0))) COLLATE BINARY LEFT OUTER JOIN t0 ON CAST(CAST(t0.c0 AS REAL) AS INTEGER) GROUP BY t0.c2, t0.c1, v0.c0, t1.c0, t0.c0;
SELECT ALL t0.c2, t0.c1, v0.c0, t1.c0, t0.c0 FROM t1 INNER JOIN v0 ON (((NULL)) BETWEEN ((t1.c0)) AND ((t1.c0))) COLLATE BINARY LEFT OUTER JOIN t0 ON CAST(CAST(t0.c0 AS REAL) AS INTEGER) GROUP BY t0.c2, t0.c1, v0.c0, t1.c0, t0.c0 HAVING MAX(SUM(AVG(v0.c0))) UNION ALL SELECT ALL t0.c2, t0.c1, v0.c0, t1.c0, t0.c0 FROM t1 INNER JOIN v0 ON (((NULL)) BETWEEN ((t1.c0)) AND ((t1.c0))) COLLATE BINARY LEFT OUTER JOIN t0 ON CAST(CAST(t0.c0 AS REAL) AS INTEGER) GROUP BY t0.c2, t0.c1, v0.c0, t1.c0, t0.c0 HAVING (NOT (MAX(SUM(AVG(v0.c0))))) UNION ALL SELECT t0.c2, t0.c1, v0.c0, t1.c0, t0.c0 FROM t1 INNER JOIN v0 ON (((NULL)) BETWEEN ((t1.c0)) AND ((t1.c0))) COLLATE BINARY LEFT OUTER JOIN t0 ON CAST(CAST(t0.c0 AS REAL) AS INTEGER) GROUP BY t0.c2, t0.c1, v0.c0, t1.c0, t0.c0 HAVING ((MAX(SUM(AVG(v0.c0)))) ISNULL);
SELECT ALL MIN((((t1.c0 IN ())) BETWEEN ('-1056679760') AND ((v0.c0 IN ())))) FROM v0, t0, t1;
SELECT ALL t0.c2, t1.c0 FROM v0, t1 CROSS JOIN t0 ON ((((t0.c1) BETWEEN (t1.c0) AND (t0.c0))) NOTNULL);
SELECT ALL t0.c2, t1.c0 FROM v0, t1 CROSS JOIN t0 ON ((((t0.c1) BETWEEN (t1.c0) AND (t0.c0))) NOTNULL) WHERE (CAST(CAST(v0.c0 AS BLOB) AS TEXT)) UNION ALL SELECT ALL t0.c2, t1.c0 FROM v0, t1 CROSS JOIN t0 ON ((((t0.c1) BETWEEN (t1.c0) AND (t0.c0))) NOTNULL) WHERE ((NOT (CAST(CAST(v0.c0 AS BLOB) AS TEXT)))) UNION ALL SELECT t0.c2, t1.c0 FROM v0, t1 CROSS JOIN t0 ON ((((t0.c1) BETWEEN (t1.c0) AND (t0.c0))) NOTNULL) WHERE (((CAST(CAST(v0.c0 AS BLOB) AS TEXT)) ISNULL));
SELECT ALL t0.c2, t1.c0 FROM v0, t1 CROSS JOIN t0 ON ((((t0.c1) BETWEEN (t1.c0) AND (t0.c0))) NOTNULL);
SELECT DISTINCT * FROM t0, t1 INNER JOIN v0 ON (~ ((t0.c0 IN ())));
SELECT DISTINCT * FROM t0, t1 INNER JOIN v0 ON (~ ((t0.c0 IN ()))) WHERE ((((t0.c0)) NOT BETWEEN ((((t0.c0)>>(t0.c2)))) AND ((t0.c2)))) UNION SELECT DISTINCT * FROM t0, t1 INNER JOIN v0 ON (~ ((t0.c0 IN ()))) WHERE ((NOT ((((t0.c0)) NOT BETWEEN ((((t0.c0)>>(t0.c2)))) AND ((t0.c2)))))) UNION SELECT DISTINCT * FROM t0, t1 INNER JOIN v0 ON (~ ((t0.c0 IN ()))) WHERE ((((((t0.c0)) NOT BETWEEN ((((t0.c0)>>(t0.c2)))) AND ((t0.c2)))) ISNULL));
SELECT DISTINCT * FROM t0, t1 INNER JOIN v0 ON (~ ((t0.c0 IN ())));
SELECT v0.c0 FROM t0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM t0, v0 WHERE ((+ (NULL))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM t0, v0 WHERE ((NOT ((+ (NULL))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM t0, v0 WHERE ((((+ (NULL))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM t0, v0 GROUP BY v0.c0;
SELECT t0.c1, v0.c0 FROM v0, t0 GROUP BY t0.c1, v0.c0;
SELECT t0.c1, v0.c0 FROM v0, t0 GROUP BY t0.c1, v0.c0 HAVING (t0.c1 IN ()) UNION ALL SELECT t0.c1, v0.c0 FROM v0, t0 GROUP BY t0.c1, v0.c0 HAVING (NOT ((t0.c1 IN ()))) UNION ALL SELECT ALL t0.c1, v0.c0 FROM v0, t0 GROUP BY t0.c1, v0.c0 HAVING (((t0.c1 IN ())) ISNULL);
SELECT t0.c1, v0.c0 FROM v0, t0 GROUP BY t0.c1, v0.c0;
SELECT t0.c1, v0.c0 FROM v0, t0 GROUP BY t0.c1, v0.c0 HAVING (t0.c1 IN ()) UNION ALL SELECT t0.c1, v0.c0 FROM v0, t0 GROUP BY t0.c1, v0.c0 HAVING (NOT ((t0.c1 IN ()))) UNION ALL SELECT ALL t0.c1, v0.c0 FROM v0, t0 GROUP BY t0.c1, v0.c0 HAVING (((t0.c1 IN ())) ISNULL);
SELECT t0.c1, v0.c0 FROM v0, t0 GROUP BY t0.c1, v0.c0;
SELECT t0.c2 FROM t0;
SELECT t0.c2 FROM t0 WHERE ((((t0.c2 IN ()))OR('J峙DWOJ/\rp'))) UNION ALL SELECT ALL t0.c2 FROM t0 WHERE ((NOT ((((t0.c2 IN ()))OR('J峙DWOJ/\rp'))))) UNION ALL SELECT t0.c2 FROM t0 WHERE ((((((t0.c2 IN ()))OR('J峙DWOJ/\rp'))) ISNULL));
SELECT t0.c2 FROM t0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (CASE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0))  WHEN (((v0.c0)) BETWEEN ((v0.c0)) AND (('763811196'))) THEN (NOT (v0.c0)) ELSE CAST(v0.c0 AS BLOB) END) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (CASE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0))  WHEN (((v0.c0)) BETWEEN ((v0.c0)) AND (('763811196'))) THEN (NOT (v0.c0)) ELSE CAST(v0.c0 AS BLOB) END))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((CASE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0))  WHEN (((v0.c0)) BETWEEN ((v0.c0)) AND (('763811196'))) THEN (NOT (v0.c0)) ELSE CAST(v0.c0 AS BLOB) END) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL t0.c1 FROM t1, v0, t0 GROUP BY t0.c1;
SELECT t0.c1 FROM t1, v0, t0 WHERE (((LIKELIHOOD(t0.c2, 0.12559777402876116))AND(((v0.c0)>(t0.c0))))) GROUP BY t0.c1 UNION SELECT ALL t0.c1 FROM t1, v0, t0 WHERE ((NOT (((LIKELIHOOD(t0.c2, 0.12559777402876116))AND(((v0.c0)>(t0.c0))))))) GROUP BY t0.c1 UNION SELECT ALL t0.c1 FROM t1, v0, t0 WHERE (((((LIKELIHOOD(t0.c2, 0.12559777402876116))AND(((v0.c0)>(t0.c0))))) ISNULL)) GROUP BY t0.c1;
SELECT ALL t0.c1 FROM t1, v0, t0 GROUP BY t0.c1;
SELECT t0.c2 FROM t0 CROSS JOIN v0 ON v0.c0 INNER JOIN t1 ON 0.4682758808795574 GROUP BY t0.c2;
SELECT t0.c2 FROM t0 CROSS JOIN v0 ON v0.c0 INNER JOIN t1 ON 0.4682758808795574 GROUP BY t0.c2 HAVING ((((t1.c0) NOT BETWEEN (COUNT(*)) AND (COUNT(*)))) NOT BETWEEN (COUNT(GROUP_CONCAT(t1.c0))) AND (TOTAL(t0.c0))) UNION ALL SELECT ALL t0.c2 FROM t0 CROSS JOIN v0 ON v0.c0 INNER JOIN t1 ON 0.4682758808795574 GROUP BY t0.c2 HAVING (NOT (((((t1.c0) NOT BETWEEN (COUNT(*)) AND (COUNT(*)))) NOT BETWEEN (COUNT(GROUP_CONCAT(t1.c0))) AND (TOTAL(t0.c0))))) UNION ALL SELECT ALL t0.c2 FROM t0 CROSS JOIN v0 ON v0.c0 INNER JOIN t1 ON 0.4682758808795574 GROUP BY t0.c2 HAVING ((((((t1.c0) NOT BETWEEN (COUNT(*)) AND (COUNT(*)))) NOT BETWEEN (COUNT(GROUP_CONCAT(t1.c0))) AND (TOTAL(t0.c0)))) ISNULL);
SELECT ALL t0.c1, t0.c0, t0.c2, t1.c0 FROM t1 FULL OUTER JOIN t0 ON ((((((t1.c0) BETWEEN (t0.c2) AND (t0.c2)))AND(((t0.c2) BETWEEN (t0.c1) AND (t0.c1)))))OR(((t0.c2) IS TRUE)));
SELECT ALL t0.c1, t0.c0, t0.c2, t1.c0 FROM t1 FULL OUTER JOIN t0 ON ((((((t1.c0) BETWEEN (t0.c2) AND (t0.c2)))AND(((t0.c2) BETWEEN (t0.c1) AND (t0.c1)))))OR(((t0.c2) IS TRUE))) WHERE (((((t1.c0) BETWEEN (t0.c2) AND (t0.c0))) NOT NULL)) UNION ALL SELECT ALL t0.c1, t0.c0, t0.c2, t1.c0 FROM t1 FULL OUTER JOIN t0 ON ((((((t1.c0) BETWEEN (t0.c2) AND (t0.c2)))AND(((t0.c2) BETWEEN (t0.c1) AND (t0.c1)))))OR(((t0.c2) IS TRUE))) WHERE ((NOT (((((t1.c0) BETWEEN (t0.c2) AND (t0.c0))) NOT NULL)))) UNION ALL SELECT ALL t0.c1, t0.c0, t0.c2, t1.c0 FROM t1 FULL OUTER JOIN t0 ON ((((((t1.c0) BETWEEN (t0.c2) AND (t0.c2)))AND(((t0.c2) BETWEEN (t0.c1) AND (t0.c1)))))OR(((t0.c2) IS TRUE))) WHERE (((((((t1.c0) BETWEEN (t0.c2) AND (t0.c0))) NOT NULL)) ISNULL));
SELECT ALL t0.c1, t0.c0, t0.c2, t1.c0 FROM t1 FULL OUTER JOIN t0 ON ((((((t1.c0) BETWEEN (t0.c2) AND (t0.c2)))AND(((t0.c2) BETWEEN (t0.c1) AND (t0.c1)))))OR(((t0.c2) IS TRUE)));
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (COALESCE(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), '-867963315')) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (COALESCE(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), '-867963315')))) UNION SELECT DISTINCT * FROM v0 WHERE (((COALESCE(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), '-867963315')) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL t1.c0, t0.c2, v0.c0, t0.c1 FROM t0 CROSS JOIN v0 ON CAST(CAST(v0.c0 AS BLOB) AS REAL) FULL OUTER JOIN t1 ON (((NOT (t0.c0))) NOTNULL) GROUP BY t1.c0, t0.c2, v0.c0, t0.c1;
SELECT ALL t1.c0, t0.c2, v0.c0, t0.c1 FROM t0 CROSS JOIN v0 ON CAST(CAST(v0.c0 AS BLOB) AS REAL) FULL OUTER JOIN t1 ON (((NOT (t0.c0))) NOTNULL) WHERE ('u}u6') GROUP BY t1.c0, t0.c2, v0.c0, t0.c1 UNION SELECT ALL t1.c0, t0.c2, v0.c0, t0.c1 FROM t0 CROSS JOIN v0 ON CAST(CAST(v0.c0 AS BLOB) AS REAL) FULL OUTER JOIN t1 ON (((NOT (t0.c0))) NOTNULL) WHERE ((NOT ('u}u6'))) GROUP BY t1.c0, t0.c2, v0.c0, t0.c1 UNION SELECT t1.c0, t0.c2, v0.c0, t0.c1 FROM t0 CROSS JOIN v0 ON CAST(CAST(v0.c0 AS BLOB) AS REAL) FULL OUTER JOIN t1 ON (((NOT (t0.c0))) NOTNULL) WHERE ((('u}u6') ISNULL)) GROUP BY t1.c0, t0.c2, v0.c0, t0.c1;
SELECT ALL t1.c0, t0.c2, v0.c0, t0.c1 FROM t0 CROSS JOIN v0 ON CAST(CAST(v0.c0 AS BLOB) AS REAL) FULL OUTER JOIN t1 ON (((NOT (t0.c0))) NOTNULL) GROUP BY t1.c0, t0.c2, v0.c0, t0.c1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING v0.c0 UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((v0.c0) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING v0.c0 UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((v0.c0) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE ((+ (v0.c0)) COLLATE NOCASE) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((+ (v0.c0)) COLLATE NOCASE))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((((+ (v0.c0)) COLLATE NOCASE) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT t0.c0 FROM t1, t0;
SELECT DISTINCT t0.c0 FROM t1, t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c1)))AND(t0.c1))) UNION SELECT DISTINCT t0.c0 FROM t1, t0 WHERE ((NOT (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c1)))AND(t0.c1))))) UNION SELECT DISTINCT t0.c0 FROM t1, t0 WHERE (((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c1)))AND(t0.c1))) ISNULL));
SELECT DISTINCT t0.c0 FROM t1, t0;
SELECT t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1;
SELECT t0.c0, t0.c2, t0.c1 FROM t0 WHERE (((load_extension(t0.c2, t0.c2)) BETWEEN (UNICODE(t0.c1)) AND (CAST(t0.c2 AS TEXT)))) GROUP BY t0.c0, t0.c2, t0.c1 UNION SELECT t0.c0, t0.c2, t0.c1 FROM t0 WHERE ((NOT (((load_extension(t0.c2, t0.c2)) BETWEEN (UNICODE(t0.c1)) AND (CAST(t0.c2 AS TEXT)))))) GROUP BY t0.c0, t0.c2, t0.c1 UNION SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0 WHERE (((((load_extension(t0.c2, t0.c2)) BETWEEN (UNICODE(t0.c1)) AND (CAST(t0.c2 AS TEXT)))) ISNULL)) GROUP BY t0.c0, t0.c2, t0.c1;
SELECT ALL t0.c0, t1.c0, t0.c2 FROM v0, t0, t1 GROUP BY t0.c0, t1.c0, t0.c2;
SELECT ALL t0.c0, t1.c0, t0.c2 FROM v0, t0, t1 GROUP BY t0.c0, t1.c0, t0.c2 HAVING (((((NOT (t0.c1)))AND(MIN(t0.c2))))OR(AVG(COUNT(*)) COLLATE NOCASE)) UNION ALL SELECT ALL t0.c0, t1.c0, t0.c2 FROM v0, t0, t1 GROUP BY t0.c0, t1.c0, t0.c2 HAVING (NOT ((((((NOT (t0.c1)))AND(MIN(t0.c2))))OR(AVG(COUNT(*)) COLLATE NOCASE)))) UNION ALL SELECT t0.c0, t1.c0, t0.c2 FROM v0, t0, t1 GROUP BY t0.c0, t1.c0, t0.c2 HAVING (((((((NOT (t0.c1)))AND(MIN(t0.c2))))OR(AVG(COUNT(*)) COLLATE NOCASE))) ISNULL);
SELECT ALL t0.c0 FROM t0 NATURAL JOIN v0;
SELECT ALL t0.c0 FROM t0 NATURAL JOIN v0 WHERE (x'') UNION ALL SELECT t0.c0 FROM t0 NATURAL JOIN v0 WHERE ((NOT (x''))) UNION ALL SELECT t0.c0 FROM t0 NATURAL JOIN v0 WHERE (((x'') ISNULL));
SELECT ALL t0.c0 FROM t0 NATURAL JOIN v0;
SELECT DISTINCT * FROM v0, t1;
SELECT DISTINCT * FROM v0, t1 WHERE (t1.c0) UNION SELECT DISTINCT * FROM v0, t1 WHERE ((NOT (t1.c0))) UNION SELECT DISTINCT * FROM v0, t1 WHERE (((t1.c0) ISNULL));
SELECT DISTINCT * FROM v0, t1;
SELECT t1.c0, v0.c0 FROM t1, v0 GROUP BY t1.c0, v0.c0;
SELECT t1.c0, v0.c0 FROM t1, v0 WHERE (((t1.c0)>=(v0.c0)) COLLATE BINARY) GROUP BY t1.c0, v0.c0 UNION SELECT t1.c0, v0.c0 FROM t1, v0 WHERE ((NOT (((t1.c0)>=(v0.c0)) COLLATE BINARY))) GROUP BY t1.c0, v0.c0 UNION SELECT t1.c0, v0.c0 FROM t1, v0 WHERE (((((t1.c0)>=(v0.c0)) COLLATE BINARY) ISNULL)) GROUP BY t1.c0, v0.c0;
SELECT t1.c0, v0.c0 FROM t1, v0 GROUP BY t1.c0, v0.c0;
SELECT t0.c2, t0.c0 FROM v0, t0, t1 GROUP BY t0.c2, t0.c0;
SELECT t0.c2, t0.c0 FROM v0, t0, t1 GROUP BY t0.c2, t0.c0 HAVING CAST(AVG(t1.c0) AS TEXT) UNION ALL SELECT ALL t0.c2, t0.c0 FROM v0, t0, t1 GROUP BY t0.c2, t0.c0 HAVING (NOT (CAST(AVG(t1.c0) AS TEXT))) UNION ALL SELECT t0.c2, t0.c0 FROM v0, t0, t1 GROUP BY t0.c2, t0.c0 HAVING ((CAST(AVG(t1.c0) AS TEXT)) ISNULL);
SELECT t0.c2, t0.c0 FROM v0, t0, t1 GROUP BY t0.c2, t0.c0;
SELECT t0.c2, t0.c0 FROM v0, t0, t1 GROUP BY t0.c2, t0.c0 HAVING CAST(AVG(t1.c0) AS TEXT) UNION ALL SELECT ALL t0.c2, t0.c0 FROM v0, t0, t1 GROUP BY t0.c2, t0.c0 HAVING (NOT (CAST(AVG(t1.c0) AS TEXT))) UNION ALL SELECT t0.c2, t0.c0 FROM v0, t0, t1 GROUP BY t0.c2, t0.c0 HAVING ((CAST(AVG(t1.c0) AS TEXT)) ISNULL);
SELECT t0.c2, t0.c0 FROM v0, t0, t1 GROUP BY t0.c2, t0.c0;
SELECT SUM(((json_type(t1.c0)) BETWEEN (((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))AND(t1.c0)))OR(t1.c0))) AND (LIKELIHOOD(t1.c0, 0.959752015049585)))) FROM t1, v0 ORDER BY (NOT (('' IN ())));
SELECT * FROM v0 LEFT OUTER JOIN t0 ON (((CASE WHEN 0.014422862097801414 THEN v0.c0 ELSE v0.c0 END, (t0.c0 IN ()), ((t0.c2)AND(v0.c0))))<=((((((v0.c0)AND(v0.c0)))OR(t0.c1)), ((((((((t0.c2)OR(t0.c0)))OR(t0.c0)))OR(v0.c0)))OR(t0.c1)), ((t0.c0)||(t0.c2)))));
SELECT ALL * FROM v0 LEFT OUTER JOIN t0 ON (((CASE WHEN 0.014422862097801414 THEN v0.c0 ELSE v0.c0 END, (t0.c0 IN ()), ((t0.c2)AND(v0.c0))))<=((((((v0.c0)AND(v0.c0)))OR(t0.c1)), ((((((((t0.c2)OR(t0.c0)))OR(t0.c0)))OR(v0.c0)))OR(t0.c1)), ((t0.c0)||(t0.c2))))) WHERE ((v0.c0 IN ()) COLLATE RTRIM) UNION ALL SELECT ALL * FROM v0 LEFT OUTER JOIN t0 ON (((CASE WHEN 0.014422862097801414 THEN v0.c0 ELSE v0.c0 END, (t0.c0 IN ()), ((t0.c2)AND(v0.c0))))<=((((((v0.c0)AND(v0.c0)))OR(t0.c1)), ((((((((t0.c2)OR(t0.c0)))OR(t0.c0)))OR(v0.c0)))OR(t0.c1)), ((t0.c0)||(t0.c2))))) WHERE ((NOT ((v0.c0 IN ()) COLLATE RTRIM))) UNION ALL SELECT * FROM v0 LEFT OUTER JOIN t0 ON (((CASE WHEN 0.014422862097801414 THEN v0.c0 ELSE v0.c0 END, (t0.c0 IN ()), ((t0.c2)AND(v0.c0))))<=((((((v0.c0)AND(v0.c0)))OR(t0.c1)), ((((((((t0.c2)OR(t0.c0)))OR(t0.c0)))OR(v0.c0)))OR(t0.c1)), ((t0.c0)||(t0.c2))))) WHERE ((((v0.c0 IN ()) COLLATE RTRIM) ISNULL));
SELECT * FROM v0 LEFT OUTER JOIN t0 ON (((CASE WHEN 0.014422862097801414 THEN v0.c0 ELSE v0.c0 END, (t0.c0 IN ()), ((t0.c2)AND(v0.c0))))<=((((((v0.c0)AND(v0.c0)))OR(t0.c1)), ((((((((t0.c2)OR(t0.c0)))OR(t0.c0)))OR(v0.c0)))OR(t0.c1)), ((t0.c0)||(t0.c2)))));
SELECT DISTINCT t0.c0 FROM t1, t0, v0;
SELECT DISTINCT t0.c0 FROM t1, t0, v0 WHERE (CAST(t0.c0 COLLATE RTRIM AS REAL)) UNION SELECT DISTINCT t0.c0 FROM t1, t0, v0 WHERE ((NOT (CAST(t0.c0 COLLATE RTRIM AS REAL)))) UNION SELECT DISTINCT t0.c0 FROM t1, t0, v0 WHERE (((CAST(t0.c0 COLLATE RTRIM AS REAL)) ISNULL));
SELECT DISTINCT t0.c0 FROM t1, t0, v0;
SELECT v0.c0, t0.c0 FROM t0, v0 GROUP BY v0.c0, t0.c0;
SELECT ALL v0.c0, t0.c0 FROM t0, v0 WHERE ((((t0.c1)) BETWEEN ((CAST(t0.c1 AS TEXT))) AND (((((t0.c1))<=((v0.c0))))))) GROUP BY v0.c0, t0.c0 UNION SELECT v0.c0, t0.c0 FROM t0, v0 WHERE ((NOT ((((t0.c1)) BETWEEN ((CAST(t0.c1 AS TEXT))) AND (((((t0.c1))<=((v0.c0))))))))) GROUP BY v0.c0, t0.c0 UNION SELECT v0.c0, t0.c0 FROM t0, v0 WHERE ((((((t0.c1)) BETWEEN ((CAST(t0.c1 AS TEXT))) AND (((((t0.c1))<=((v0.c0))))))) ISNULL)) GROUP BY v0.c0, t0.c0;
SELECT v0.c0, t0.c0 FROM t0, v0 GROUP BY v0.c0, t0.c0;
SELECT ALL t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2;
SELECT t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2 HAVING TOTAL(MAX(MAX(t0.c0))) UNION ALL SELECT t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2 HAVING (NOT (TOTAL(MAX(MAX(t0.c0))))) UNION ALL SELECT ALL t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2 HAVING ((TOTAL(MAX(MAX(t0.c0)))) ISNULL);
SELECT SUM((((1768339714)) NOT BETWEEN ((((t0.c0) NOT BETWEEN (v0.c0) AND (t0.c0)))) AND ((CASE t0.c1  WHEN t1.c0 THEN t0.c1 END)))) FROM t1, t0, v0;
SELECT * FROM t1, v0;
SELECT * FROM t1, v0 WHERE ((json_array_length(t1.c0, t1.c0) IN ())) UNION ALL SELECT * FROM t1, v0 WHERE ((NOT ((json_array_length(t1.c0, t1.c0) IN ())))) UNION ALL SELECT * FROM t1, v0 WHERE ((((json_array_length(t1.c0, t1.c0) IN ())) ISNULL));
SELECT * FROM t1, v0;
SELECT DISTINCT * FROM t0, t1;
SELECT DISTINCT * FROM t0, t1 WHERE (IFNULL(t1.c0, ((t0.c0)LIKE(t1.c0)))) UNION SELECT DISTINCT * FROM t0, t1 WHERE ((NOT (IFNULL(t1.c0, ((t0.c0)LIKE(t1.c0)))))) UNION SELECT DISTINCT * FROM t0, t1 WHERE (((IFNULL(t1.c0, ((t0.c0)LIKE(t1.c0)))) ISNULL));
SELECT DISTINCT * FROM t0, t1;
SELECT t0.c0, t0.c2, t0.c1 FROM v0, t0, t1 GROUP BY t0.c0, t0.c2, t0.c1;
SELECT t0.c0, t0.c2, t0.c1 FROM v0, t0, t1 WHERE (((((((((((((t0.c1)AND(t0.c2)))AND(v0.c0)))OR((NOT (t0.c0)))))OR(CASE t1.c0  WHEN t1.c0 THEN '1411109916' END)))OR(((t0.c0) NOTNULL))))OR(TYPEOF(DISTINCT 0.7822226831550877)))) GROUP BY t0.c0, t0.c2, t0.c1 UNION SELECT t0.c0, t0.c2, t0.c1 FROM v0, t0, t1 WHERE ((NOT (((((((((((((t0.c1)AND(t0.c2)))AND(v0.c0)))OR((NOT (t0.c0)))))OR(CASE t1.c0  WHEN t1.c0 THEN '1411109916' END)))OR(((t0.c0) NOTNULL))))OR(TYPEOF(DISTINCT 0.7822226831550877)))))) GROUP BY t0.c0, t0.c2, t0.c1 UNION SELECT t0.c0, t0.c2, t0.c1 FROM v0, t0, t1 WHERE (((((((((((((((t0.c1)AND(t0.c2)))AND(v0.c0)))OR((NOT (t0.c0)))))OR(CASE t1.c0  WHEN t1.c0 THEN '1411109916' END)))OR(((t0.c0) NOTNULL))))OR(TYPEOF(DISTINCT 0.7822226831550877)))) ISNULL)) GROUP BY t0.c0, t0.c2, t0.c1;
SELECT t0.c0, t0.c2, t0.c1 FROM v0, t0, t1 GROUP BY t0.c0, t0.c2, t0.c1;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((((COUNT(*))OR(MAX(GROUP_CONCAT(t1.c0))))) NOT BETWEEN (t1.c0 COLLATE RTRIM) AND (CASE WHEN t1.c0 THEN SUM(TOTAL(TOTAL(MAX(AVG(SUM(NULL)))))) ELSE t1.c0 END)) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (((((COUNT(*))OR(MAX(GROUP_CONCAT(t1.c0))))) NOT BETWEEN (t1.c0 COLLATE RTRIM) AND (CASE WHEN t1.c0 THEN SUM(TOTAL(TOTAL(MAX(AVG(SUM(NULL)))))) ELSE t1.c0 END)))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((((((COUNT(*))OR(MAX(GROUP_CONCAT(t1.c0))))) NOT BETWEEN (t1.c0 COLLATE RTRIM) AND (CASE WHEN t1.c0 THEN SUM(TOTAL(TOTAL(MAX(AVG(SUM(NULL)))))) ELSE t1.c0 END))) ISNULL);
SELECT ALL MAX((((v0.c0 IN ()))<<((- (v0.c0))))) FROM v0 ORDER BY v0.c0  NULLS FIRST;
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (0.4776683724877462) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (0.4776683724877462))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((0.4776683724877462) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT t0.c0 FROM t1, v0 RIGHT OUTER JOIN t0 ON CASE WHEN v0.c0 COLLATE RTRIM THEN t0.c0 COLLATE RTRIM ELSE ((t0.c1) IS TRUE) END;
SELECT DISTINCT t0.c0 FROM t1, v0 RIGHT OUTER JOIN t0 ON CASE WHEN v0.c0 COLLATE RTRIM THEN t0.c0 COLLATE RTRIM ELSE ((t0.c1) IS TRUE) END WHERE (CAST((- (t0.c1)) AS NUMERIC)) UNION SELECT DISTINCT t0.c0 FROM t1, v0 RIGHT OUTER JOIN t0 ON CASE WHEN v0.c0 COLLATE RTRIM THEN t0.c0 COLLATE RTRIM ELSE ((t0.c1) IS TRUE) END WHERE ((NOT (CAST((- (t0.c1)) AS NUMERIC)))) UNION SELECT DISTINCT t0.c0 FROM t1, v0 RIGHT OUTER JOIN t0 ON CASE WHEN v0.c0 COLLATE RTRIM THEN t0.c0 COLLATE RTRIM ELSE ((t0.c1) IS TRUE) END WHERE (((CAST((- (t0.c1)) AS NUMERIC)) ISNULL));
SELECT DISTINCT t0.c0 FROM t1, v0 RIGHT OUTER JOIN t0 ON CASE WHEN v0.c0 COLLATE RTRIM THEN t0.c0 COLLATE RTRIM ELSE ((t0.c1) IS TRUE) END;
SELECT t0.c2, t1.c0, t0.c1 FROM v0 NOT INDEXED, t0, t1 GROUP BY t0.c2, t1.c0, t0.c1;
SELECT t0.c2, t1.c0, t0.c1 FROM v0, t0, t1 WHERE (((((t0.c1)|(0.4912632061944844)))LIKE('?c'))) GROUP BY t0.c2, t1.c0, t0.c1 UNION SELECT t0.c2, t1.c0, t0.c1 FROM v0, t0, t1 WHERE ((NOT (((((t0.c1)|(0.4912632061944844)))LIKE('?c'))))) GROUP BY t0.c2, t1.c0, t0.c1 UNION SELECT ALL t0.c2, t1.c0, t0.c1 FROM v0, t0, t1 WHERE (((((((t0.c1)|(0.4912632061944844)))LIKE('?c'))) ISNULL)) GROUP BY t0.c2, t1.c0, t0.c1;
SELECT t0.c2, t1.c0, t0.c1 FROM v0 NOT INDEXED, t0, t1 GROUP BY t0.c2, t1.c0, t0.c1;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING SUM(((GROUP_CONCAT(t1.c0)) NOT BETWEEN (t1.c0) AND (t1.c0))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (SUM(((GROUP_CONCAT(t1.c0)) NOT BETWEEN (t1.c0) AND (t1.c0))))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((SUM(((GROUP_CONCAT(t1.c0)) NOT BETWEEN (t1.c0) AND (t1.c0)))) ISNULL);
SELECT * FROM t0, t1;
SELECT ALL * FROM t0, t1 WHERE (t0.c0) UNION ALL SELECT * FROM t0, t1 WHERE ((NOT (t0.c0))) UNION ALL SELECT * FROM t0, t1 WHERE (((t0.c0) ISNULL));
SELECT * FROM t0, t1;
SELECT DISTINCT t0.c0, t0.c1, t0.c2, v0.c0, t1.c0 FROM v0, t0, t1;
SELECT DISTINCT t0.c0, t0.c1, t0.c2, v0.c0, t1.c0 FROM v0, t0, t1 WHERE (((CAST(t0.c0 AS BLOB)) BETWEEN (LIKELIHOOD(t0.c1, 0.3955804596516813)) AND (CAST(t0.c1 AS NUMERIC)))) UNION SELECT DISTINCT t0.c0, t0.c1, t0.c2, v0.c0, t1.c0 FROM v0, t0, t1 WHERE ((NOT (((CAST(t0.c0 AS BLOB)) BETWEEN (LIKELIHOOD(t0.c1, 0.3955804596516813)) AND (CAST(t0.c1 AS NUMERIC)))))) UNION SELECT DISTINCT t0.c0, t0.c1, t0.c2, v0.c0, t1.c0 FROM v0, t0, t1 WHERE (((((CAST(t0.c0 AS BLOB)) BETWEEN (LIKELIHOOD(t0.c1, 0.3955804596516813)) AND (CAST(t0.c1 AS NUMERIC)))) ISNULL));
SELECT DISTINCT t0.c0, t0.c1, t0.c2, v0.c0, t1.c0 FROM v0, t0, t1;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE (TRIM(DISTINCT (((t1.c0))<=((t1.c0))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT (TRIM(DISTINCT (((t1.c0))<=((t1.c0))))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE (((TRIM(DISTINCT (((t1.c0))<=((t1.c0))))) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t0.c1, t0.c0 FROM t0 FULL OUTER JOIN t1 ON ((((t0.c0)<=(NULL)))GLOB((((t0.c2))<>((t1.c0))))) GROUP BY t0.c1, t0.c0;
SELECT ALL t0.c1, t0.c0 FROM t0 FULL OUTER JOIN t1 ON ((((t0.c0)<=(NULL)))GLOB((((t0.c2))<>((t1.c0))))) GROUP BY t0.c1, t0.c0 HAVING CASE WHEN ((t0.c2) NOT NULL) THEN GROUP_CONCAT('-1444775579') END UNION ALL SELECT ALL t0.c1, t0.c0 FROM t0 FULL OUTER JOIN t1 ON ((((t0.c0)<=(NULL)))GLOB((((t0.c2))!=((t1.c0))))) GROUP BY t0.c1, t0.c0 HAVING (NOT (CASE WHEN ((t0.c2) NOT NULL) THEN GROUP_CONCAT('-1444775579') END)) UNION ALL SELECT t0.c1, t0.c0 FROM t0 FULL OUTER JOIN t1 ON ((((t0.c0)<=(NULL)))GLOB((((t0.c2))<>((t1.c0))))) GROUP BY t0.c1, t0.c0 HAVING ((CASE WHEN ((t0.c2) NOT NULL) THEN GROUP_CONCAT('-1444775579') END) ISNULL);
SELECT t0.c1, t0.c0 FROM t0 FULL OUTER JOIN t1 ON ((((t0.c0)<=(NULL)))GLOB((((t0.c2))<>((t1.c0))))) GROUP BY t0.c1, t0.c0;
SELECT ALL t0.c1, t0.c0 FROM t0 FULL OUTER JOIN t1 ON ((((t0.c0)<=(NULL)))GLOB((((t0.c2))<>((t1.c0))))) GROUP BY t0.c1, t0.c0 HAVING CASE WHEN ((t0.c2) NOT NULL) THEN GROUP_CONCAT('-1444775579') END UNION ALL SELECT ALL t0.c1, t0.c0 FROM t0 FULL OUTER JOIN t1 ON ((((t0.c0)<=(NULL)))GLOB((((t0.c2))!=((t1.c0))))) GROUP BY t0.c1, t0.c0 HAVING (NOT (CASE WHEN ((t0.c2) NOT NULL) THEN GROUP_CONCAT('-1444775579') END)) UNION ALL SELECT t0.c1, t0.c0 FROM t0 FULL OUTER JOIN t1 ON ((((t0.c0)<=(NULL)))GLOB((((t0.c2))<>((t1.c0))))) GROUP BY t0.c1, t0.c0 HAVING ((CASE WHEN ((t0.c2) NOT NULL) THEN GROUP_CONCAT('-1444775579') END) ISNULL);
SELECT t0.c1, t0.c0 FROM t0 FULL OUTER JOIN t1 ON ((((t0.c0)<=(NULL)))GLOB((((t0.c2))<>((t1.c0))))) GROUP BY t0.c1, t0.c0;
SELECT ALL t0.c0, v0.c0 FROM v0 CROSS JOIN t0 ON (((t0.c0) BETWEEN (v0.c0) AND (v0.c0)) IN ()) CROSS JOIN t1 ON ((NULL)GLOB((+ (t0.c0))));
SELECT ALL t0.c0, v0.c0 FROM v0 CROSS JOIN t0 ON (((t0.c0) BETWEEN (v0.c0) AND (v0.c0)) IN ()) CROSS JOIN t1 ON ((NULL)GLOB((+ (t0.c0)))) WHERE ((((((t0.c0)) BETWEEN ((t0.c1)) AND ((t1.c0))))IS((+ (t0.c0))))) UNION ALL SELECT ALL t0.c0, v0.c0 FROM v0 NOT INDEXED CROSS JOIN t0 ON (((t0.c0) BETWEEN (v0.c0) AND (v0.c0)) IN ()) CROSS JOIN t1 ON ((NULL)GLOB((+ (t0.c0)))) WHERE ((NOT ((((((t0.c0)) BETWEEN ((t0.c1)) AND ((t1.c0))))IS((+ (t0.c0))))))) UNION ALL SELECT t0.c0, v0.c0 FROM v0 CROSS JOIN t0 ON (((t0.c0) BETWEEN (v0.c0) AND (v0.c0)) IN ()) CROSS JOIN t1 ON ((NULL)GLOB((+ (t0.c0)))) WHERE ((((((((t0.c0)) BETWEEN ((t0.c1)) AND ((t1.c0))))IS((+ (t0.c0))))) ISNULL));
SELECT ALL t0.c0, v0.c0 FROM v0 CROSS JOIN t0 ON (((t0.c0) BETWEEN (v0.c0) AND (v0.c0)) IN ()) CROSS JOIN t1 ON ((NULL)GLOB((+ (t0.c0))));
SELECT DISTINCT * FROM v0, t1;
SELECT DISTINCT * FROM v0, t1 WHERE (((CAST(x'bac7' AS REAL))GLOB(((v0.c0) ISNULL)))) UNION SELECT DISTINCT * FROM v0, t1 WHERE ((NOT (((CAST(x'bac7' AS REAL))GLOB(((v0.c0) ISNULL)))))) UNION SELECT DISTINCT * FROM v0, t1 WHERE (((((CAST(x'bac7' AS REAL))GLOB(((v0.c0) ISNULL)))) ISNULL));
SELECT DISTINCT * FROM v0, t1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((NULL) BETWEEN (x'') AND (((v0.c0)IS(v0.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((NULL) BETWEEN (x'') AND (((v0.c0)IS(v0.c0))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((NULL) BETWEEN (x'') AND (((v0.c0)IS(v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING GROUP_CONCAT(CAST(AVG(t1.c0) AS TEXT)) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (GROUP_CONCAT(CAST(AVG(t1.c0) AS TEXT)))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((GROUP_CONCAT(CAST(AVG(t1.c0) AS TEXT))) ISNULL);
SELECT ALL t0.c2, v0.c0, t0.c1, t1.c0 FROM v0, t0, t1;
SELECT ALL t0.c2, v0.c0, t0.c1, t1.c0 FROM v0, t0, t1 WHERE (CASE ((v0.c0) ISNULL)  WHEN CASE WHEN t0.c1 THEN t1.c0 ELSE v0.c0 END THEN ((t1.c0)=(t0.c0)) WHEN (v0.c0 IN ()) THEN (v0.c0 IN ()) WHEN (t0.c2 IN ()) THEN t1.c0 COLLATE BINARY WHEN x'' THEN CAST(t1.c0 AS BLOB) WHEN (((x'')) BETWEEN ((v0.c0)) AND ((t0.c2))) THEN (- (t0.c1)) END) UNION ALL SELECT ALL t0.c2, v0.c0, t0.c1, t1.c0 FROM v0, t0, t1 WHERE ((NOT (CASE ((v0.c0) ISNULL)  WHEN CASE WHEN t0.c1 THEN t1.c0 ELSE v0.c0 END THEN ((t1.c0)==(t0.c0)) WHEN (v0.c0 IN ()) THEN (v0.c0 IN ()) WHEN (t0.c2 IN ()) THEN t1.c0 COLLATE BINARY WHEN x'' THEN CAST(t1.c0 AS BLOB) WHEN (((x'')) BETWEEN ((v0.c0)) AND ((t0.c2))) THEN (- (t0.c1)) END))) UNION ALL SELECT t0.c2, v0.c0, t0.c1, t1.c0 FROM v0, t0, t1 WHERE (((CASE ((v0.c0) ISNULL)  WHEN CASE WHEN t0.c1 THEN t1.c0 ELSE v0.c0 END THEN ((t1.c0)==(t0.c0)) WHEN (v0.c0 IN ()) THEN (v0.c0 IN ()) WHEN (t0.c2 IN ()) THEN t1.c0 COLLATE BINARY WHEN x'' THEN CAST(t1.c0 AS BLOB) WHEN (((x'')) BETWEEN ((v0.c0)) AND ((t0.c2))) THEN (- (t0.c1)) END) ISNULL));
SELECT ALL t0.c2, v0.c0, t0.c1, t1.c0 FROM v0, t0, t1;
SELECT DISTINCT * FROM v0 CROSS JOIN t0 ON (NOT (UPPER(t0.c2)));
SELECT DISTINCT * FROM v0 CROSS JOIN t0 ON (NOT (UPPER(t0.c2))) WHERE ((((((((((t0.c2)OR(t0.c1)))AND(t0.c1)))OR(t0.c2)))OR(t0.c2)) IN ())) UNION SELECT DISTINCT * FROM v0 CROSS JOIN t0 ON (NOT (UPPER(t0.c2))) WHERE ((NOT ((((((((((t0.c2)OR(t0.c1)))AND(t0.c1)))OR(t0.c2)))OR(t0.c2)) IN ())))) UNION SELECT DISTINCT * FROM v0 CROSS JOIN t0 ON (NOT (UPPER(t0.c2))) WHERE ((((((((((((t0.c2)OR(t0.c1)))AND(t0.c1)))OR(t0.c2)))OR(t0.c2)) IN ())) ISNULL));
SELECT DISTINCT * FROM v0 CROSS JOIN t0 ON (NOT (UPPER(t0.c2)));
SELECT t0.c1, t0.c2 FROM t0 GROUP BY t0.c1, t0.c2;
SELECT t0.c1, t0.c2 FROM t0 WHERE (CASE WHEN NULL THEN CAST(t0.c1 AS REAL) END) GROUP BY t0.c1, t0.c2 UNION SELECT t0.c1, t0.c2 FROM t0 WHERE ((NOT (CASE WHEN NULL THEN CAST(t0.c1 AS REAL) END))) GROUP BY t0.c1, t0.c2 UNION SELECT t0.c1, t0.c2 FROM t0 WHERE (((CASE WHEN NULL THEN CAST(t0.c1 AS REAL) END) ISNULL)) GROUP BY t0.c1, t0.c2;
SELECT t0.c1, t0.c2 FROM t0 GROUP BY t0.c1, t0.c2;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((SUM(v0.c0))GLOB(v0.c0)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((SUM(v0.c0))GLOB(v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((SUM(v0.c0))GLOB(v0.c0))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((SUM(v0.c0))GLOB(v0.c0)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((SUM(v0.c0))GLOB(v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((SUM(v0.c0))GLOB(v0.c0))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT * FROM t1, t0, v0;
SELECT * FROM t1, t0, v0 WHERE ((((t0.c1))>((t0.c2)))) UNION ALL SELECT ALL * FROM t1, t0, v0 WHERE ((NOT ((((t0.c1))>((t0.c2)))))) UNION ALL SELECT ALL * FROM t1, t0, v0 WHERE ((((((t0.c1))>((t0.c2)))) ISNULL));
SELECT * FROM t1, t0, v0;
SELECT DISTINCT t0.c0, t0.c1 FROM t0, v0, t1;
SELECT DISTINCT t0.c0, t0.c1 FROM t0, v0, t1 WHERE (((((t0.c0) NOTNULL)) NOT BETWEEN (((t0.c2)&(t0.c0))) AND ((((v0.c0)) NOT BETWEEN ((t0.c1)) AND ((t1.c0)))))) UNION SELECT DISTINCT t0.c0, t0.c1 FROM t0, v0, t1 WHERE ((NOT (((((t0.c0) NOTNULL)) NOT BETWEEN (((t0.c2)&(t0.c0))) AND ((((v0.c0)) NOT BETWEEN ((t0.c1)) AND ((t1.c0)))))))) UNION SELECT DISTINCT t0.c0, t0.c1 FROM t0, v0, t1 WHERE (((((((t0.c0) NOTNULL)) NOT BETWEEN (((t0.c2)&(t0.c0))) AND ((((v0.c0)) NOT BETWEEN ((t0.c1)) AND ((t1.c0)))))) ISNULL));
SELECT DISTINCT t0.c0, t0.c1 FROM t0, v0, t1;
SELECT t0.c2, t0.c1 FROM t0, v0 GROUP BY t0.c2, t0.c1;
SELECT t0.c2, t0.c1 FROM t0, v0 WHERE (t0.c2) GROUP BY t0.c2, t0.c1 UNION SELECT t0.c2, t0.c1 FROM t0, v0 WHERE ((NOT (t0.c2))) GROUP BY t0.c2, t0.c1 UNION SELECT t0.c2, t0.c1 FROM t0, v0 WHERE (((t0.c2) ISNULL)) GROUP BY t0.c2, t0.c1;
SELECT t0.c2, t0.c1 FROM t0, v0 GROUP BY t0.c2, t0.c1;
SELECT ALL t0.c0, t1.c0, t0.c2, t0.c1 FROM t0, t1 GROUP BY t0.c0, t1.c0, t0.c2, t0.c1;
SELECT ALL t0.c0, t1.c0, t0.c2, t0.c1 FROM t0, t1 GROUP BY t0.c0, t1.c0, t0.c2, t0.c1 HAVING MAX(MAX(t0.c2)) UNION ALL SELECT ALL t0.c0, t1.c0, t0.c2, t0.c1 FROM t0, t1 GROUP BY t0.c0, t1.c0, t0.c2, t0.c1 HAVING (NOT (MAX(MAX(t0.c2)))) UNION ALL SELECT t0.c0, t1.c0, t0.c2, t0.c1 FROM t0, t1 GROUP BY t0.c0, t1.c0, t0.c2, t0.c1 HAVING ((MAX(MAX(t0.c2))) ISNULL);
SELECT t1.c0 FROM t1;
SELECT ALL t1.c0 FROM t1 WHERE (t1.c0) UNION ALL SELECT ALL t1.c0 FROM t1 WHERE ((NOT (t1.c0))) UNION ALL SELECT ALL t1.c0 FROM t1 WHERE (((t1.c0) ISNULL));
SELECT t1.c0 FROM t1;
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN v0 ON (((t0.c1)%(t0.c2)) IN ());
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN v0 ON (((t0.c1)%(t0.c2)) IN ()) WHERE (0.4639377465273663) UNION SELECT DISTINCT * FROM t0 LEFT OUTER JOIN v0 ON (((t0.c1)%(t0.c2)) IN ()) WHERE ((NOT (0.4639377465273663))) UNION SELECT DISTINCT * FROM t0 LEFT OUTER JOIN v0 ON (((t0.c1)%(t0.c2)) IN ()) WHERE (((0.4639377465273663) ISNULL));
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN v0 ON (((t0.c1)%(t0.c2)) IN ());
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (v0.c0) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (v0.c0))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((v0.c0) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL t0.c1, t0.c2, t0.c0 FROM t0 GROUP BY t0.c1, t0.c2, t0.c0;
SELECT t0.c1, t0.c2, t0.c0 FROM t0 GROUP BY t0.c1, t0.c2, t0.c0 HAVING t0.c1 UNION ALL SELECT t0.c1, t0.c2, t0.c0 FROM t0 GROUP BY t0.c1, t0.c2, t0.c0 HAVING (NOT (t0.c1)) UNION ALL SELECT t0.c1, t0.c2, t0.c0 FROM t0 GROUP BY t0.c1, t0.c2, t0.c0 HAVING ((t0.c1) ISNULL);
SELECT ALL t0.c1, t0.c2, t0.c0 FROM t0 GROUP BY t0.c1, t0.c2, t0.c0;
SELECT t0.c1, t0.c2, t0.c0 FROM t0 GROUP BY t0.c1, t0.c2, t0.c0 HAVING t0.c1 UNION ALL SELECT t0.c1, t0.c2, t0.c0 FROM t0 GROUP BY t0.c1, t0.c2, t0.c0 HAVING (NOT (t0.c1)) UNION ALL SELECT t0.c1, t0.c2, t0.c0 FROM t0 GROUP BY t0.c1, t0.c2, t0.c0 HAVING ((t0.c1) ISNULL);
SELECT ALL t0.c1, t0.c2, t0.c0 FROM t0 GROUP BY t0.c1, t0.c2, t0.c0;
SELECT ALL t0.c0, v0.c0, t0.c2, t1.c0 FROM t1, t0, v0;
SELECT ALL t0.c0, v0.c0, t0.c2, t1.c0 FROM t1, t0, v0 WHERE (LTRIM((((t0.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c1))))) UNION ALL SELECT t0.c0, v0.c0, t0.c2, t1.c0 FROM t1, t0, v0 WHERE ((NOT (LTRIM((((t0.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c1))))))) UNION ALL SELECT ALL t0.c0, v0.c0, t0.c2, t1.c0 FROM t1, t0, v0 WHERE (((LTRIM((((t0.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c1))))) ISNULL));
SELECT ALL t0.c0, v0.c0, t0.c2, t1.c0 FROM t1, t0, v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (NULL) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((NULL) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL t0.c2 FROM t1, t0 RIGHT OUTER JOIN v0 ON (+ (t1.c0 COLLATE RTRIM)) GROUP BY t0.c2;
SELECT t0.c2 FROM t1, t0 RIGHT OUTER JOIN v0 ON (+ (t1.c0 COLLATE RTRIM)) WHERE (((((t0.c0) BETWEEN (t1.c0) AND (t0.c2))) ISNULL)) GROUP BY t0.c2 UNION SELECT ALL t0.c2 FROM t1, t0 RIGHT OUTER JOIN v0 ON (+ (t1.c0 COLLATE RTRIM)) WHERE ((NOT (((((t0.c0) BETWEEN (t1.c0) AND (t0.c2))) ISNULL)))) GROUP BY t0.c2 UNION SELECT ALL t0.c2 FROM t1, t0 RIGHT OUTER JOIN v0 ON (+ (t1.c0 COLLATE RTRIM)) WHERE (((((((t0.c0) BETWEEN (t1.c0) AND (t0.c2))) ISNULL)) ISNULL)) GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t1, t0 RIGHT OUTER JOIN v0 ON (+ (t1.c0 COLLATE RTRIM)) GROUP BY t0.c2;
SELECT ALL t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1;
SELECT ALL t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1 HAVING MIN(t0.c2) UNION ALL SELECT t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1 HAVING (NOT (MIN(t0.c2))) UNION ALL SELECT ALL t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1 HAVING ((MIN(t0.c2)) ISNULL);
SELECT ALL t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1;
SELECT ALL t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1 HAVING MIN(t0.c2) UNION ALL SELECT t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1 HAVING (NOT (MIN(t0.c2))) UNION ALL SELECT ALL t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1 HAVING ((MIN(t0.c2)) ISNULL);
SELECT ALL t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1;
SELECT ALL * FROM v0, t0, t1;
SELECT ALL * FROM v0, t0, t1 WHERE (((((v0.c0)|(t0.c2))) BETWEEN (((((((((t1.c0)OR(t1.c0)))AND(v0.c0)))OR(t1.c0)))AND(t0.c1))) AND (CASE WHEN '1409408981' THEN t0.c1 WHEN t0.c1 THEN t0.c2 WHEN t0.c0 THEN t0.c0 ELSE v0.c0 END))) UNION ALL SELECT * FROM v0, t0, t1 WHERE ((NOT (((((v0.c0)|(t0.c2))) BETWEEN (((((((((t1.c0)OR(t1.c0)))AND(v0.c0)))OR(t1.c0)))AND(t0.c1))) AND (CASE WHEN '1409408981' THEN t0.c1 WHEN t0.c1 THEN t0.c2 WHEN t0.c0 THEN t0.c0 ELSE v0.c0 END))))) UNION ALL SELECT ALL * FROM v0, t0, t1 WHERE (((((((v0.c0)|(t0.c2))) BETWEEN (((((((((t1.c0)OR(t1.c0)))AND(v0.c0)))OR(t1.c0)))AND(t0.c1))) AND (CASE WHEN '1409408981' THEN t0.c1 WHEN t0.c1 THEN t0.c2 WHEN t0.c0 THEN t0.c0 ELSE v0.c0 END))) ISNULL));
SELECT ALL * FROM v0, t0, t1;
SELECT DISTINCT v0.c0, t1.c0 FROM v0 CROSS JOIN t1 ON CAST(x'' AS BLOB) COLLATE BINARY;
SELECT DISTINCT v0.c0, t1.c0 FROM v0 CROSS JOIN t1 ON CAST(x'' AS BLOB) COLLATE BINARY WHERE (((v0.c0) NOT BETWEEN (t1.c0) AND (v0.c0)) COLLATE NOCASE) UNION SELECT DISTINCT v0.c0, t1.c0 FROM v0 CROSS JOIN t1 ON CAST(x'' AS BLOB) COLLATE BINARY WHERE ((NOT (((v0.c0) NOT BETWEEN (t1.c0) AND (v0.c0)) COLLATE NOCASE))) UNION SELECT DISTINCT v0.c0, t1.c0 FROM v0 CROSS JOIN t1 ON CAST(x'' AS BLOB) COLLATE BINARY WHERE (((((v0.c0) NOT BETWEEN (t1.c0) AND (v0.c0)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT v0.c0, t1.c0 FROM v0 CROSS JOIN t1 ON CAST(x'' AS BLOB) COLLATE BINARY;
SELECT t0.c1 FROM t0, v0 GROUP BY t0.c1;
SELECT ALL t0.c1 FROM t0, v0 WHERE (((((v0.c0)AND(t0.c2))) NOTNULL)) GROUP BY t0.c1 UNION SELECT ALL t0.c1 FROM t0, v0 WHERE ((NOT (((((v0.c0)AND(t0.c2))) NOTNULL)))) GROUP BY t0.c1 UNION SELECT t0.c1 FROM t0, v0 WHERE (((((((v0.c0)AND(t0.c2))) NOTNULL)) ISNULL)) GROUP BY t0.c1;
SELECT t0.c1 FROM t0, v0 GROUP BY t0.c1;
SELECT ALL t0.c2, t0.c1, t1.c0, v0.c0, t0.c0 FROM v0, t0 FULL OUTER JOIN t1 ON ((t0.c2)-(CAST(t0.c1 AS INTEGER))) GROUP BY t0.c2, t0.c1, t1.c0, v0.c0, t0.c0;
SELECT ALL t0.c2, t0.c1, t1.c0, v0.c0, t0.c0 FROM v0, t0 FULL OUTER JOIN t1 ON ((t0.c2)-(CAST(t0.c1 AS INTEGER))) GROUP BY t0.c2, t0.c1, t1.c0, v0.c0, t0.c0 HAVING MIN(MIN(SUM(t0.c0))) UNION ALL SELECT ALL t0.c2, t0.c1, t1.c0, v0.c0, t0.c0 FROM v0, t0 FULL OUTER JOIN t1 ON ((t0.c2)-(CAST(t0.c1 AS INTEGER))) GROUP BY t0.c2, t0.c1, t1.c0, v0.c0, t0.c0 HAVING (NOT (MIN(MIN(SUM(t0.c0))))) UNION ALL SELECT t0.c2, t0.c1, t1.c0, v0.c0, t0.c0 FROM v0, t0 FULL OUTER JOIN t1 ON ((t0.c2)-(CAST(t0.c1 AS INTEGER))) GROUP BY t0.c2, t0.c1, t1.c0, v0.c0, t0.c0 HAVING ((MIN(MIN(SUM(t0.c0)))) ISNULL);
SELECT ALL * FROM t1;
SELECT ALL * FROM t1 WHERE (0.17024113752155812) UNION ALL SELECT * FROM t1 WHERE ((NOT (0.17024113752155812))) UNION ALL SELECT ALL * FROM t1 WHERE (((0.17024113752155812) ISNULL));
SELECT ALL * FROM t1;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (t0.c2) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (t0.c2))) UNION SELECT DISTINCT * FROM t0 WHERE (((t0.c2) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c0, t0.c2, v0.c0 FROM t0 NATURAL JOIN v0 GROUP BY t0.c0, t0.c2, v0.c0;
SELECT ALL t0.c0, t0.c2, v0.c0 FROM t0 NATURAL JOIN v0 WHERE (((((t0.c0))<=((v0.c0))) IN ((((v0.c0)) NOT BETWEEN ((t0.c0)) AND ((v0.c0))), '1841604531'))) GROUP BY t0.c0, t0.c2, v0.c0 UNION SELECT t0.c0, t0.c2, v0.c0 FROM t0 NATURAL JOIN v0 WHERE ((NOT (((((t0.c0))<=((v0.c0))) IN ((((v0.c0)) NOT BETWEEN ((t0.c0)) AND ((v0.c0))), '1841604531'))))) GROUP BY t0.c0, t0.c2, v0.c0 UNION SELECT ALL t0.c0, t0.c2, v0.c0 FROM t0 NATURAL JOIN v0 WHERE (((((((t0.c0))<=((v0.c0))) IN ((((v0.c0)) NOT BETWEEN ((t0.c0)) AND ((v0.c0))), '1841604531'))) ISNULL)) GROUP BY t0.c0, t0.c2, v0.c0;
SELECT t0.c0, t0.c2, v0.c0 FROM t0 NATURAL JOIN v0 GROUP BY t0.c0, t0.c2, v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING TOTAL(TOTAL(v0.c0)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TOTAL(TOTAL(v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL(TOTAL(v0.c0))) ISNULL);
SELECT ALL * FROM t1;
SELECT ALL * FROM t1 WHERE ((t1.c0 IN ((NOT (t1.c0))))) UNION ALL SELECT * FROM t1 WHERE ((NOT ((t1.c0 IN ((NOT (t1.c0))))))) UNION ALL SELECT * FROM t1 WHERE ((((t1.c0 IN ((NOT (t1.c0))))) ISNULL));
SELECT ALL * FROM t1;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (IFNULL(DISTINCT CASE t1.c0  WHEN t1.c0 THEN t1.c0 END, (0.6822273914548094 IN (t1.c0)))) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (IFNULL(DISTINCT CASE t1.c0  WHEN t1.c0 THEN t1.c0 END, (0.6822273914548094 IN (t1.c0)))))) UNION SELECT DISTINCT * FROM t1 WHERE (((IFNULL(DISTINCT CASE t1.c0  WHEN t1.c0 THEN t1.c0 END, (0.6822273914548094 IN (t1.c0)))) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE (NULL) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT (NULL))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE (((NULL) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t0.c1, v0.c0 FROM v0, t0 GROUP BY t0.c1, v0.c0;
SELECT ALL t0.c1, v0.c0 FROM v0, t0 GROUP BY t0.c1, v0.c0 HAVING (COUNT(*) IN (t0.c2)) COLLATE BINARY UNION ALL SELECT ALL t0.c1, v0.c0 FROM v0, t0 GROUP BY t0.c1, v0.c0 HAVING (NOT ((COUNT(*) IN (t0.c2)) COLLATE BINARY)) UNION ALL SELECT ALL t0.c1, v0.c0 FROM v0, t0 GROUP BY t0.c1, v0.c0 HAVING (((COUNT(*) IN (t0.c2)) COLLATE BINARY) ISNULL);
SELECT ALL t0.c1, v0.c0 FROM v0, t0 GROUP BY t0.c1, v0.c0;
SELECT ALL t0.c1, v0.c0 FROM v0, t0 GROUP BY t0.c1, v0.c0 HAVING (COUNT(*) IN (t0.c2)) COLLATE BINARY UNION ALL SELECT ALL t0.c1, v0.c0 FROM v0, t0 GROUP BY t0.c1, v0.c0 HAVING (NOT ((COUNT(*) IN (t0.c2)) COLLATE BINARY)) UNION ALL SELECT ALL t0.c1, v0.c0 FROM v0, t0 GROUP BY t0.c1, v0.c0 HAVING (((COUNT(*) IN (t0.c2)) COLLATE BINARY) ISNULL);
SELECT ALL t0.c1, v0.c0 FROM v0, t0 GROUP BY t0.c1, v0.c0;
SELECT * FROM v0, t0;
SELECT * FROM v0, t0 WHERE ((((t0.c0)) BETWEEN (((((t0.c1)) BETWEEN ((t0.c2)) AND ((t0.c2))))) AND ((LIKELIHOOD(DISTINCT '-490472299', 0.746534387780129))))) UNION ALL SELECT * FROM v0, t0 WHERE ((NOT ((((t0.c0)) BETWEEN (((((t0.c1)) BETWEEN ((t0.c2)) AND ((t0.c2))))) AND ((LIKELIHOOD(DISTINCT '-490472299', 0.746534387780129))))))) UNION ALL SELECT * FROM v0, t0 WHERE ((((((t0.c0)) BETWEEN (((((t0.c1)) BETWEEN ((t0.c2)) AND ((t0.c2))))) AND ((LIKELIHOOD(DISTINCT '-490472299', 0.746534387780129))))) ISNULL));
SELECT * FROM v0, t0;
SELECT DISTINCT v0.c0 FROM v0 RIGHT OUTER JOIN t0 ON (((t0.c0 IN ())) NOT BETWEEN (((t0.c0)OR(v0.c0))) AND (NULL));
SELECT DISTINCT v0.c0 FROM v0 RIGHT OUTER JOIN t0 ON (((t0.c0 IN ())) NOT BETWEEN (((t0.c0)OR(v0.c0))) AND (NULL)) WHERE (CASE WHEN (- (t0.c2)) THEN CAST(v0.c0 AS INTEGER) WHEN ((v0.c0)IS(t0.c2)) THEN (NOT (t0.c2)) WHEN CAST(t0.c2 AS NUMERIC) THEN x'149e' END) UNION SELECT DISTINCT v0.c0 FROM v0 RIGHT OUTER JOIN t0 ON (((t0.c0 IN ())) NOT BETWEEN (((t0.c0)OR(v0.c0))) AND (NULL)) WHERE ((NOT (CASE WHEN (- (t0.c2)) THEN CAST(v0.c0 AS INTEGER) WHEN ((v0.c0)IS(t0.c2)) THEN (NOT (t0.c2)) WHEN CAST(t0.c2 AS NUMERIC) THEN x'149e' END))) UNION SELECT DISTINCT v0.c0 FROM v0 RIGHT OUTER JOIN t0 ON (((t0.c0 IN ())) NOT BETWEEN (((t0.c0)OR(v0.c0))) AND (NULL)) WHERE (((CASE WHEN (- (t0.c2)) THEN CAST(v0.c0 AS INTEGER) WHEN ((v0.c0)IS(t0.c2)) THEN (NOT (t0.c2)) WHEN CAST(t0.c2 AS NUMERIC) THEN x'149e' END) ISNULL));
SELECT DISTINCT v0.c0 FROM v0 RIGHT OUTER JOIN t0 ON (((t0.c0 IN ())) NOT BETWEEN (((t0.c0)OR(v0.c0))) AND (NULL));
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (LTRIM(((v0.c0) IS TRUE))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (LTRIM(((v0.c0) IS TRUE))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((LTRIM(((v0.c0) IS TRUE))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0, t1.c0 FROM t1, v0 GROUP BY v0.c0, t1.c0;
SELECT ALL v0.c0, t1.c0 FROM t1, v0 GROUP BY v0.c0, t1.c0 HAVING ((MAX(COUNT(*)))||(GROUP_CONCAT(COUNT(TOTAL(MAX(COUNT(t1.c0))))))) UNION ALL SELECT ALL v0.c0, t1.c0 FROM t1, v0 GROUP BY v0.c0, t1.c0 HAVING (NOT (((MAX(COUNT(*)))||(GROUP_CONCAT(COUNT(TOTAL(MAX(COUNT(t1.c0))))))))) UNION ALL SELECT v0.c0, t1.c0 FROM t1, v0 GROUP BY v0.c0, t1.c0 HAVING ((((MAX(COUNT(*)))||(GROUP_CONCAT(COUNT(TOTAL(MAX(COUNT(t1.c0)))))))) ISNULL);
SELECT * FROM t1;
SELECT ALL * FROM t1 WHERE (((((NULL)OR(((t1.c0)IS(t1.c0)))))OR((t1.c0 IN ())))) UNION ALL SELECT ALL * FROM t1 WHERE ((NOT (((((NULL)OR(((t1.c0)IS(t1.c0)))))OR((t1.c0 IN ())))))) UNION ALL SELECT * FROM t1 WHERE (((((((NULL)OR(((t1.c0)IS(t1.c0)))))OR((t1.c0 IN ())))) ISNULL));
SELECT * FROM t1;
SELECT DISTINCT t0.c1 FROM t1, t0, v0;
SELECT DISTINCT t0.c1 FROM t1, t0, v0 WHERE ((((((t0.c2)IS NOT(t1.c0))))<>((t1.c0 COLLATE BINARY)))) UNION SELECT DISTINCT t0.c1 FROM t1, t0, v0 WHERE ((NOT ((((((t0.c2)IS NOT(t1.c0))))!=((t1.c0 COLLATE BINARY)))))) UNION SELECT DISTINCT t0.c1 FROM t1, t0, v0 WHERE ((((((((t0.c2)IS NOT(t1.c0))))!=((t1.c0 COLLATE BINARY)))) ISNULL));
SELECT DISTINCT t0.c1 FROM t1, t0, v0;
SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0, v0 GROUP BY t0.c2, t0.c1, t0.c0;
SELECT t0.c2, t0.c1, t0.c0 FROM t0, v0 WHERE (((CAST(v0.c0 AS BLOB)) NOT BETWEEN ((((v0.c0))>((t0.c0)))) AND (((t0.c1) NOT BETWEEN ('') AND ('-1444775579'))))) GROUP BY t0.c2, t0.c1, t0.c0 UNION SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0, v0 WHERE ((NOT (((CAST(v0.c0 AS BLOB)) NOT BETWEEN ((((v0.c0))>((t0.c0)))) AND (((t0.c1) NOT BETWEEN ('') AND ('-1444775579'))))))) GROUP BY t0.c2, t0.c1, t0.c0 UNION SELECT t0.c2, t0.c1, t0.c0 FROM t0, v0 WHERE (((((CAST(v0.c0 AS BLOB)) NOT BETWEEN ((((v0.c0))>((t0.c0)))) AND (((t0.c1) NOT BETWEEN ('') AND ('-1444775579'))))) ISNULL)) GROUP BY t0.c2, t0.c1, t0.c0;
SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0, v0 GROUP BY t0.c2, t0.c1, t0.c0;
SELECT t0.c1 FROM t0 GROUP BY t0.c1;
SELECT t0.c1 FROM t0 GROUP BY t0.c1 HAVING t0.c1 UNION ALL SELECT t0.c1 FROM t0 GROUP BY t0.c1 HAVING (NOT (t0.c1)) UNION ALL SELECT t0.c1 FROM t0 GROUP BY t0.c1 HAVING ((t0.c1) ISNULL);
SELECT t0.c1 FROM t0 GROUP BY t0.c1;
SELECT t0.c1 FROM t0 GROUP BY t0.c1 HAVING t0.c1 UNION ALL SELECT t0.c1 FROM t0 GROUP BY t0.c1 HAVING (NOT (t0.c1)) UNION ALL SELECT t0.c1 FROM t0 GROUP BY t0.c1 HAVING ((t0.c1) ISNULL);
SELECT t0.c1 FROM t0 GROUP BY t0.c1;
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE (v0.c0) UNION ALL SELECT * FROM v0 WHERE ((NOT (v0.c0))) UNION ALL SELECT * FROM v0 WHERE (((v0.c0) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT t0.c0, t0.c1, t0.c2 FROM t0;
SELECT DISTINCT t0.c0, t0.c1, t0.c2 FROM t0 WHERE ((((t0.c0)) NOT BETWEEN ((CAST(t0.c1 AS REAL))) AND ((t0.c2 COLLATE NOCASE)))) UNION SELECT DISTINCT t0.c0, t0.c1, t0.c2 FROM t0 WHERE ((NOT ((((t0.c0)) NOT BETWEEN ((CAST(t0.c1 AS REAL))) AND ((t0.c2 COLLATE NOCASE)))))) UNION SELECT DISTINCT t0.c0, t0.c1, t0.c2 FROM t0 WHERE ((((((t0.c0)) NOT BETWEEN ((CAST(t0.c1 AS REAL))) AND ((t0.c2 COLLATE NOCASE)))) ISNULL));
SELECT DISTINCT t0.c0, t0.c1, t0.c2 FROM t0;
SELECT ALL t0.c0, t0.c1, t1.c0, t0.c2 FROM t1, t0 GROUP BY t0.c0, t0.c1, t1.c0, t0.c2;
SELECT t0.c0, t0.c1, t1.c0, t0.c2 FROM t1, t0 WHERE ((NOT ((((t1.c0))<=((t0.c1)))))) GROUP BY t0.c0, t0.c1, t1.c0, t0.c2 UNION SELECT ALL t0.c0, t0.c1, t1.c0, t0.c2 FROM t1, t0 WHERE ((NOT ((NOT ((((t1.c0))<=((t0.c1)))))))) GROUP BY t0.c0, t0.c1, t1.c0, t0.c2 UNION SELECT ALL t0.c0, t0.c1, t1.c0, t0.c2 FROM t1, t0 WHERE ((((NOT ((((t1.c0))<=((t0.c1)))))) ISNULL)) GROUP BY t0.c0, t0.c1, t1.c0, t0.c2;
SELECT ALL t0.c0, t0.c1, t1.c0, t0.c2 FROM t1, t0 GROUP BY t0.c0, t0.c1, t1.c0, t0.c2;
SELECT ALL t0.c2, v0.c0, t0.c0, t0.c1 FROM v0, t0 GROUP BY t0.c2, v0.c0, t0.c0, t0.c1;
SELECT ALL t0.c2, v0.c0, t0.c0, t0.c1 FROM v0, t0 GROUP BY t0.c2, v0.c0, t0.c0, t0.c1 HAVING ((((COUNT(t0.c0)) IS FALSE)) NOT NULL) UNION ALL SELECT t0.c2, v0.c0, t0.c0, t0.c1 FROM v0, t0 GROUP BY t0.c2, v0.c0, t0.c0, t0.c1 HAVING (NOT (((((COUNT(t0.c0)) IS FALSE)) NOT NULL))) UNION ALL SELECT ALL t0.c2, v0.c0, t0.c0, t0.c1 FROM v0, t0 GROUP BY t0.c2, v0.c0, t0.c0, t0.c1 HAVING ((((((COUNT(t0.c0)) IS FALSE)) NOT NULL)) ISNULL);
SELECT ALL t0.c2, v0.c0, t0.c0, t0.c1 FROM v0, t0 GROUP BY t0.c2, v0.c0, t0.c0, t0.c1;
SELECT ALL t0.c2, v0.c0, t0.c0, t0.c1 FROM v0, t0 GROUP BY t0.c2, v0.c0, t0.c0, t0.c1 HAVING ((((COUNT(t0.c0)) IS FALSE)) NOT NULL) UNION ALL SELECT t0.c2, v0.c0, t0.c0, t0.c1 FROM v0, t0 GROUP BY t0.c2, v0.c0, t0.c0, t0.c1 HAVING (NOT (((((COUNT(t0.c0)) IS FALSE)) NOT NULL))) UNION ALL SELECT ALL t0.c2, v0.c0, t0.c0, t0.c1 FROM v0, t0 GROUP BY t0.c2, v0.c0, t0.c0, t0.c1 HAVING ((((((COUNT(t0.c0)) IS FALSE)) NOT NULL)) ISNULL);
SELECT ALL t0.c2, v0.c0, t0.c0, t0.c1 FROM v0, t0 GROUP BY t0.c2, v0.c0, t0.c0, t0.c1;
SELECT ALL t1.c0 FROM t1;
SELECT t1.c0 FROM t1 WHERE ((((((t1.c0))!=((t1.c0)))) ISNULL)) UNION ALL SELECT t1.c0 FROM t1 WHERE ((NOT ((((((t1.c0))!=((t1.c0)))) ISNULL)))) UNION ALL SELECT t1.c0 FROM t1 WHERE ((((((((t1.c0))!=((t1.c0)))) ISNULL)) ISNULL));
SELECT ALL t1.c0 FROM t1;
SELECT DISTINCT * FROM t1, t0;
SELECT DISTINCT * FROM t1, t0 WHERE (CASE WHEN (-1.754774315E9 IN ()) THEN ((t1.c0)*(t1.c0)) ELSE ((t0.c1)OR(0X4a32e42c)) END) UNION SELECT DISTINCT * FROM t1, t0 WHERE ((NOT (CASE WHEN (-1.754774315E9 IN ()) THEN ((t1.c0)*(t1.c0)) ELSE ((t0.c1)OR(0X4a32e42c)) END))) UNION SELECT DISTINCT * FROM t1, t0 WHERE (((CASE WHEN (-1.754774315E9 IN ()) THEN ((t1.c0)*(t1.c0)) ELSE ((t0.c1)OR(0x4a32e42c)) END) ISNULL));
SELECT DISTINCT * FROM t1, t0;
SELECT t1.c0, v0.c0 FROM t1, v0 GROUP BY t1.c0, v0.c0;
SELECT ALL t1.c0, v0.c0 FROM t1, v0 WHERE (t1.c0) GROUP BY t1.c0, v0.c0 UNION SELECT ALL t1.c0, v0.c0 FROM t1, v0 WHERE ((NOT (t1.c0))) GROUP BY t1.c0, v0.c0 UNION SELECT t1.c0, v0.c0 FROM t1, v0 WHERE (((t1.c0) ISNULL)) GROUP BY t1.c0, v0.c0;
SELECT t1.c0, v0.c0 FROM t1, v0 GROUP BY t1.c0, v0.c0;
SELECT t0.c1, t0.c0, t1.c0, v0.c0 FROM t1, v0, t0 GROUP BY t0.c1, t0.c0, t1.c0, v0.c0;
SELECT ALL t0.c1, t0.c0, t1.c0, v0.c0 FROM t1 NOT INDEXED, v0, t0 GROUP BY t0.c1, t0.c0, t1.c0, v0.c0 HAVING t0.c2 UNION ALL SELECT t0.c1, t0.c0, t1.c0, v0.c0 FROM t1, v0, t0 GROUP BY t0.c1, t0.c0, t1.c0, v0.c0 HAVING (NOT (t0.c2)) UNION ALL SELECT t0.c1, t0.c0, t1.c0, v0.c0 FROM t1, v0, t0 GROUP BY t0.c1, t0.c0, t1.c0, v0.c0 HAVING ((t0.c2) ISNULL);
SELECT t0.c1, t0.c0, t1.c0, v0.c0 FROM t1, v0, t0 GROUP BY t0.c1, t0.c0, t1.c0, v0.c0;
SELECT ALL t0.c1, t0.c0, t1.c0, v0.c0 FROM t1 NOT INDEXED, v0, t0 GROUP BY t0.c1, t0.c0, t1.c0, v0.c0 HAVING t0.c2 UNION ALL SELECT t0.c1, t0.c0, t1.c0, v0.c0 FROM t1, v0, t0 GROUP BY t0.c1, t0.c0, t1.c0, v0.c0 HAVING (NOT (t0.c2)) UNION ALL SELECT t0.c1, t0.c0, t1.c0, v0.c0 FROM t1, v0, t0 GROUP BY t0.c1, t0.c0, t1.c0, v0.c0 HAVING ((t0.c2) ISNULL);
SELECT t0.c1, t0.c0, t1.c0, v0.c0 FROM t1, v0, t0 GROUP BY t0.c1, t0.c0, t1.c0, v0.c0;
SELECT t1.c0, t0.c2, v0.c0, t0.c1, t0.c0 FROM t0, t1, v0;
SELECT ALL t1.c0, t0.c2, v0.c0, t0.c1, t0.c0 FROM t0, t1, v0 WHERE (CAST(LIKELY(t0.c0) AS INTEGER)) UNION ALL SELECT t1.c0, t0.c2, v0.c0, t0.c1, t0.c0 FROM t0, t1, v0 WHERE ((NOT (CAST(LIKELY(t0.c0) AS INTEGER)))) UNION ALL SELECT ALL t1.c0, t0.c2, v0.c0, t0.c1, t0.c0 FROM t0 NOT INDEXED, t1, v0 WHERE (((CAST(LIKELY(t0.c0) AS INTEGER)) ISNULL));
SELECT t1.c0, t0.c2, v0.c0, t0.c1, t0.c0 FROM t0, t1, v0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (t0.c2) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (t0.c2))) UNION SELECT DISTINCT * FROM t0 WHERE (((t0.c2) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE (((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))OR(t1.c0)))AND(t1.c0)) COLLATE RTRIM) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT (((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))OR(t1.c0)))AND(t1.c0)) COLLATE RTRIM))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE (((((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))OR(t1.c0)))AND(t1.c0)) COLLATE RTRIM) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t0.c2 FROM t1, t0, v0 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t1, t0, v0 GROUP BY t0.c2 HAVING COUNT(*) UNION ALL SELECT ALL t0.c2 FROM t1, t0, v0 GROUP BY t0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c2 FROM t1, t0, v0 GROUP BY t0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c2 FROM t1, t0, v0 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t1, t0, v0 GROUP BY t0.c2 HAVING COUNT(*) UNION ALL SELECT ALL t0.c2 FROM t1, t0, v0 GROUP BY t0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c2 FROM t1, t0, v0 GROUP BY t0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c2 FROM t1, t0, v0 GROUP BY t0.c2;
SELECT TOTAL(CASE WHEN t0.c0 THEN t0.c1 END COLLATE RTRIM) FROM t1, t0;
SELECT ALL * FROM t1;
SELECT ALL * FROM t1 WHERE (((t1.c0)IS(((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))AND(t1.c0)))AND(t1.c0))))) UNION ALL SELECT ALL * FROM t1 WHERE ((NOT (((t1.c0)IS(((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))AND(t1.c0)))AND(t1.c0))))))) UNION ALL SELECT * FROM t1 WHERE (((((t1.c0)IS(((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))AND(t1.c0)))AND(t1.c0))))) ISNULL));
SELECT ALL * FROM t1;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((t0.c0 COLLATE RTRIM)&((t0.c1 IN (t0.c2))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((t0.c0 COLLATE RTRIM)&((t0.c1 IN (t0.c2))))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((t0.c0 COLLATE RTRIM)&((t0.c1 IN (t0.c2))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL v0.c0 FROM v0, t1 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, t1 WHERE (CASE t1.c0 COLLATE NOCASE  WHEN v0.c0 COLLATE BINARY THEN (('-1070261366') NOTNULL) ELSE (((t1.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) END) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, t1 WHERE ((NOT (CASE t1.c0 COLLATE NOCASE  WHEN v0.c0 COLLATE BINARY THEN (('-1070261366') NOTNULL) ELSE (((t1.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) END))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, t1 WHERE (((CASE t1.c0 COLLATE NOCASE  WHEN v0.c0 COLLATE BINARY THEN (('-1070261366') NOTNULL) ELSE (((t1.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) END) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, t1 GROUP BY v0.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING SUM(AVG(t1.c0)) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (SUM(AVG(t1.c0)))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((SUM(AVG(t1.c0))) ISNULL);
SELECT * FROM t0 FULL OUTER JOIN v0 ON v0.c0 INNER JOIN t1 ON CASE ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c2))  WHEN t1.c0 COLLATE RTRIM THEN ((t1.c0)|(t0.c2)) WHEN v0.c0 THEN (NOT (t1.c0)) WHEN (NOT (t0.c1)) THEN ((t1.c0) BETWEEN (t0.c2) AND (t0.c2)) ELSE t1.c0 COLLATE BINARY END;
SELECT ALL * FROM t0 FULL OUTER JOIN v0 ON v0.c0 INNER JOIN t1 ON CASE ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c2))  WHEN t1.c0 COLLATE RTRIM THEN ((t1.c0)|(t0.c2)) WHEN v0.c0 THEN (NOT (t1.c0)) WHEN (NOT (t0.c1)) THEN ((t1.c0) BETWEEN (t0.c2) AND (t0.c2)) ELSE t1.c0 COLLATE BINARY END WHERE (((HEX(t0.c1)) NOTNULL)) UNION ALL SELECT * FROM t0 FULL OUTER JOIN v0 ON v0.c0 INNER JOIN t1 ON CASE ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c2))  WHEN t1.c0 COLLATE RTRIM THEN ((t1.c0)|(t0.c2)) WHEN v0.c0 THEN (NOT (t1.c0)) WHEN (NOT (t0.c1)) THEN ((t1.c0) BETWEEN (t0.c2) AND (t0.c2)) ELSE t1.c0 COLLATE BINARY END WHERE ((NOT (((HEX(t0.c1)) NOTNULL)))) UNION ALL SELECT ALL * FROM t0 FULL OUTER JOIN v0 ON v0.c0 INNER JOIN t1 ON CASE ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c2))  WHEN t1.c0 COLLATE RTRIM THEN ((t1.c0)|(t0.c2)) WHEN v0.c0 THEN (NOT (t1.c0)) WHEN (NOT (t0.c1)) THEN ((t1.c0) BETWEEN (t0.c2) AND (t0.c2)) ELSE t1.c0 COLLATE BINARY END WHERE (((((HEX(t0.c1)) NOTNULL)) ISNULL));
SELECT * FROM t0 FULL OUTER JOIN v0 ON v0.c0 INNER JOIN t1 ON CASE ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c2))  WHEN t1.c0 COLLATE RTRIM THEN ((t1.c0)|(t0.c2)) WHEN v0.c0 THEN (NOT (t1.c0)) WHEN (NOT (t0.c1)) THEN ((t1.c0) BETWEEN (t0.c2) AND (t0.c2)) ELSE t1.c0 COLLATE BINARY END;
SELECT DISTINCT * FROM t0, v0, t1;
SELECT DISTINCT * FROM t0, v0, t1 WHERE (((((t0.c2) ISNULL))=(((((((((t0.c2)OR(v0.c0)))AND(t1.c0)))OR(v0.c0)))AND(v0.c0))))) UNION SELECT DISTINCT * FROM t0, v0, t1 WHERE ((NOT (((((t0.c2) ISNULL))==(((((((((t0.c2)OR(v0.c0)))AND(t1.c0)))OR(v0.c0)))AND(v0.c0))))))) UNION SELECT DISTINCT * FROM t0, v0, t1 WHERE (((((((t0.c2) ISNULL))==(((((((((t0.c2)OR(v0.c0)))AND(t1.c0)))OR(v0.c0)))AND(v0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0, v0, t1;
SELECT ALL v0.c0, t0.c1 FROM v0, t0 GROUP BY v0.c0, t0.c1;
SELECT v0.c0, t0.c1 FROM v0, t0 WHERE ((((v0.c0)) NOT BETWEEN ((((v0.c0) IS TRUE))) AND ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c1)))))) GROUP BY v0.c0, t0.c1 UNION SELECT v0.c0, t0.c1 FROM v0, t0 WHERE ((NOT ((((v0.c0)) NOT BETWEEN ((((v0.c0) IS TRUE))) AND ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c1)))))))) GROUP BY v0.c0, t0.c1 UNION SELECT ALL v0.c0, t0.c1 FROM v0, t0 WHERE ((((((v0.c0)) NOT BETWEEN ((((v0.c0) IS TRUE))) AND ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c1)))))) ISNULL)) GROUP BY v0.c0, t0.c1;
SELECT ALL v0.c0, t0.c1 FROM v0, t0 GROUP BY v0.c0, t0.c1;
SELECT v0.c0, t0.c1, t1.c0, t0.c2 FROM t1 FULL OUTER JOIN t0 ON (NOT (CAST(t0.c0 AS REAL))) INNER JOIN v0 ON SQLITE_SOURCE_ID() GROUP BY v0.c0, t0.c1, t1.c0, t0.c2;
SELECT v0.c0, t0.c1, t1.c0, t0.c2 FROM t1 FULL OUTER JOIN t0 ON (NOT (CAST(t0.c0 AS REAL))) INNER JOIN v0 ON SQLITE_SOURCE_ID() GROUP BY v0.c0, t0.c1, t1.c0, t0.c2 HAVING ((COUNT(*)) IS FALSE) UNION ALL SELECT v0.c0, t0.c1, t1.c0, t0.c2 FROM t1 FULL OUTER JOIN t0 ON (NOT (CAST(t0.c0 AS REAL))) INNER JOIN v0 ON SQLITE_SOURCE_ID() GROUP BY v0.c0, t0.c1, t1.c0, t0.c2 HAVING (NOT (((COUNT(*)) IS FALSE))) UNION ALL SELECT ALL v0.c0, t0.c1, t1.c0, t0.c2 FROM t1 FULL OUTER JOIN t0 ON (NOT (CAST(t0.c0 AS REAL))) INNER JOIN v0 ON SQLITE_SOURCE_ID() GROUP BY v0.c0, t0.c1, t1.c0, t0.c2 HAVING ((((COUNT(*)) IS FALSE)) ISNULL);
SELECT v0.c0, t0.c1, t1.c0, t0.c2 FROM t1 FULL OUTER JOIN t0 ON (NOT (CAST(t0.c0 AS REAL))) INNER JOIN v0 ON SQLITE_SOURCE_ID() GROUP BY v0.c0, t0.c1, t1.c0, t0.c2;
SELECT v0.c0, t0.c1, t1.c0, t0.c2 FROM t1 FULL OUTER JOIN t0 ON (NOT (CAST(t0.c0 AS REAL))) INNER JOIN v0 ON SQLITE_SOURCE_ID() GROUP BY v0.c0, t0.c1, t1.c0, t0.c2 HAVING ((COUNT(*)) IS FALSE) UNION ALL SELECT v0.c0, t0.c1, t1.c0, t0.c2 FROM t1 FULL OUTER JOIN t0 ON (NOT (CAST(t0.c0 AS REAL))) INNER JOIN v0 ON SQLITE_SOURCE_ID() GROUP BY v0.c0, t0.c1, t1.c0, t0.c2 HAVING (NOT (((COUNT(*)) IS FALSE))) UNION ALL SELECT ALL v0.c0, t0.c1, t1.c0, t0.c2 FROM t1 FULL OUTER JOIN t0 ON (NOT (CAST(t0.c0 AS REAL))) INNER JOIN v0 ON SQLITE_SOURCE_ID() GROUP BY v0.c0, t0.c1, t1.c0, t0.c2 HAVING ((((COUNT(*)) IS FALSE)) ISNULL);
SELECT v0.c0, t0.c1, t1.c0, t0.c2 FROM t1 FULL OUTER JOIN t0 ON (NOT (CAST(t0.c0 AS REAL))) INNER JOIN v0 ON SQLITE_SOURCE_ID() GROUP BY v0.c0, t0.c1, t1.c0, t0.c2;
SELECT ALL * FROM t0 LEFT OUTER JOIN t1 ON (((((NULL)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))))||(((t0.c2)*(t1.c0))));
SELECT ALL * FROM t0 LEFT OUTER JOIN t1 ON (((((NULL)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))))||(((t0.c2)*(t1.c0)))) WHERE (CAST(((((t0.c0)OR(t0.c1)))OR(NULL)) AS TEXT)) UNION ALL SELECT ALL * FROM t0 LEFT OUTER JOIN t1 ON (((((NULL)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))))||(((t0.c2)*(t1.c0)))) WHERE ((NOT (CAST(((((t0.c0)OR(t0.c1)))OR(NULL)) AS TEXT)))) UNION ALL SELECT * FROM t0 LEFT OUTER JOIN t1 ON (((((NULL)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))))||(((t0.c2)*(t1.c0)))) WHERE (((CAST(((((t0.c0)OR(t0.c1)))OR(NULL)) AS TEXT)) ISNULL));
SELECT ALL * FROM t0 LEFT OUTER JOIN t1 ON (((((NULL)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))))||(((t0.c2)*(t1.c0))));
SELECT DISTINCT t0.c2, t0.c0, t0.c1 FROM t0;
SELECT DISTINCT t0.c2, t0.c0, t0.c1 FROM t0 WHERE (t0.c0 COLLATE BINARY) UNION SELECT DISTINCT t0.c2, t0.c0, t0.c1 FROM t0 WHERE ((NOT (t0.c0 COLLATE BINARY))) UNION SELECT DISTINCT t0.c2, t0.c0, t0.c1 FROM t0 WHERE (((t0.c0 COLLATE BINARY) ISNULL));
SELECT DISTINCT t0.c2, t0.c0, t0.c1 FROM t0;
SELECT ALL t1.c0, v0.c0 FROM t1, v0 GROUP BY t1.c0, v0.c0;
SELECT ALL t1.c0, v0.c0 FROM t1, v0 WHERE ((((v0.c0)) NOT BETWEEN (((v0.c0 IN ()))) AND (((v0.c0 IN (NULL, v0.c0)))))) GROUP BY t1.c0, v0.c0 UNION SELECT t1.c0, v0.c0 FROM t1, v0 WHERE ((NOT ((((v0.c0)) NOT BETWEEN (((v0.c0 IN ()))) AND (((v0.c0 IN (NULL, v0.c0)))))))) GROUP BY t1.c0, v0.c0 UNION SELECT ALL t1.c0, v0.c0 FROM t1, v0 WHERE ((((((v0.c0)) NOT BETWEEN (((v0.c0 IN ()))) AND (((v0.c0 IN (NULL, v0.c0)))))) ISNULL)) GROUP BY t1.c0, v0.c0;
SELECT ALL t1.c0, v0.c0 FROM t1, v0 GROUP BY t1.c0, v0.c0;
SELECT ALL t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0;
SELECT t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0 HAVING CASE AVG(COUNT(TOTAL(SUM(MIN(GROUP_CONCAT(TOTAL(TOTAL(t0.c1))))))))  WHEN MAX(t0.c1) THEN ((t0.c1) NOT BETWEEN (COUNT(*)) AND (COUNT(AVG(COUNT(*))))) WHEN COUNT(GROUP_CONCAT(t0.c0)) THEN COUNT(*) WHEN TOTAL(t0.c1) THEN MAX(t0.c0) END UNION ALL SELECT ALL t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0 HAVING (NOT (CASE AVG(COUNT(TOTAL(SUM(MIN(GROUP_CONCAT(TOTAL(TOTAL(t0.c1))))))))  WHEN MAX(t0.c1) THEN ((t0.c1) NOT BETWEEN (COUNT(*)) AND (COUNT(AVG(COUNT(*))))) WHEN COUNT(GROUP_CONCAT(t0.c0)) THEN COUNT(*) WHEN TOTAL(t0.c1) THEN MAX(t0.c0) END)) UNION ALL SELECT ALL t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0 HAVING ((CASE AVG(COUNT(TOTAL(SUM(MIN(GROUP_CONCAT(TOTAL(TOTAL(t0.c1))))))))  WHEN MAX(t0.c1) THEN ((t0.c1) NOT BETWEEN (COUNT(*)) AND (COUNT(AVG(COUNT(*))))) WHEN COUNT(GROUP_CONCAT(t0.c0)) THEN COUNT(*) WHEN TOTAL(t0.c1) THEN MAX(t0.c0) END) ISNULL);
SELECT * FROM t0, v0, t1;
SELECT * FROM t0, v0, t1 WHERE (((((((t1.c0)<>(t1.c0)))OR(((t0.c2) NOT BETWEEN (t0.c2) AND ('*B')))))OR((NOT (t0.c0))))) UNION ALL SELECT ALL * FROM t0, v0, t1 WHERE ((NOT (((((((t1.c0)!=(t1.c0)))OR(((t0.c2) NOT BETWEEN (t0.c2) AND ('*B')))))OR((NOT (t0.c0))))))) UNION ALL SELECT * FROM t0, v0, t1 WHERE (((((((((t1.c0)<>(t1.c0)))OR(((t0.c2) NOT BETWEEN (t0.c2) AND ('*B')))))OR((NOT (t0.c0))))) ISNULL));
SELECT * FROM t0, v0, t1;
SELECT DISTINCT * FROM v0, t1, t0;
SELECT DISTINCT * FROM v0, t1, t0 WHERE (((((((t0.c2) BETWEEN (t0.c0) AND (t0.c1)))OR((((v0.c0))<((t0.c0))))))OR(v0.c0))) UNION SELECT DISTINCT * FROM v0, t1, t0 WHERE ((NOT (((((((t0.c2) BETWEEN (t0.c0) AND (t0.c1)))OR((((v0.c0))<((t0.c0))))))OR(v0.c0))))) UNION SELECT DISTINCT * FROM v0, t1, t0 WHERE (((((((((t0.c2) BETWEEN (t0.c0) AND (t0.c1)))OR((((v0.c0))<((t0.c0))))))OR(v0.c0))) ISNULL));
SELECT DISTINCT * FROM v0, t1, t0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) IS FALSE)) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) IS FALSE)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) IS FALSE)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL t0.c2 FROM t0, v0 GROUP BY t0.c2;
SELECT t0.c2 FROM t0, v0 GROUP BY t0.c2 HAVING AVG('0.0') UNION ALL SELECT ALL t0.c2 FROM t0, v0 GROUP BY t0.c2 HAVING (NOT (AVG('0.0'))) UNION ALL SELECT t0.c2 FROM t0, v0 GROUP BY t0.c2 HAVING ((AVG('0.0')) ISNULL);
SELECT ALL t0.c2 FROM t0, v0 GROUP BY t0.c2;
SELECT t0.c2 FROM t0, v0 GROUP BY t0.c2 HAVING AVG('0.0') UNION ALL SELECT ALL t0.c2 FROM t0, v0 GROUP BY t0.c2 HAVING (NOT (AVG('0.0'))) UNION ALL SELECT t0.c2 FROM t0, v0 GROUP BY t0.c2 HAVING ((AVG('0.0')) ISNULL);
SELECT ALL t0.c2 FROM t0, v0 GROUP BY t0.c2;
SELECT ALL t0.c0, v0.c0 FROM t0, v0;
SELECT t0.c0, v0.c0 FROM t0, v0 WHERE (((t0.c0)GLOB(t0.c2)) COLLATE RTRIM) UNION ALL SELECT t0.c0, v0.c0 FROM t0, v0 WHERE ((NOT (((t0.c0)GLOB(t0.c2)) COLLATE RTRIM))) UNION ALL SELECT ALL t0.c0, v0.c0 FROM t0, v0 WHERE (((((t0.c0)GLOB(t0.c2)) COLLATE RTRIM) ISNULL));
SELECT ALL t0.c0, v0.c0 FROM t0, v0;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (CAST(0.07146987499015534 COLLATE BINARY AS TEXT)) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (CAST(0.07146987499015534 COLLATE BINARY AS TEXT)))) UNION SELECT DISTINCT * FROM t1 WHERE (((CAST(0.07146987499015534 COLLATE BINARY AS TEXT)) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT v0.c0, t1.c0 FROM t1, v0 GROUP BY v0.c0, t1.c0;
SELECT v0.c0, t1.c0 FROM t1, v0 WHERE (((- (t1.c0)) IN ())) GROUP BY v0.c0, t1.c0 UNION SELECT v0.c0, t1.c0 FROM t1, v0 WHERE ((NOT (((- (t1.c0)) IN ())))) GROUP BY v0.c0, t1.c0 UNION SELECT ALL v0.c0, t1.c0 FROM t1, v0 WHERE (((((- (t1.c0)) IN ())) ISNULL)) GROUP BY v0.c0, t1.c0;
SELECT v0.c0, t1.c0 FROM t1, v0 GROUP BY v0.c0, t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING MAX(TOTAL(t1.c0)) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (MAX(TOTAL(t1.c0)))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((MAX(TOTAL(t1.c0))) ISNULL);
SELECT ALL t0.c1, v0.c0 FROM t1, t0 LEFT OUTER JOIN v0 ON CAST(v0.c0 COLLATE RTRIM AS NUMERIC);
SELECT ALL t0.c1, v0.c0 FROM t1, t0 LEFT OUTER JOIN v0 ON CAST(v0.c0 COLLATE RTRIM AS NUMERIC) WHERE (((((t0.c0)>(v0.c0)))=(((((t1.c0)AND(t0.c1)))OR(t0.c1))))) UNION ALL SELECT ALL t0.c1, v0.c0 FROM t1, t0 LEFT OUTER JOIN v0 ON CAST(v0.c0 COLLATE RTRIM AS NUMERIC) WHERE ((NOT (((((t0.c0)>(v0.c0)))==(((((t1.c0)AND(t0.c1)))OR(t0.c1))))))) UNION ALL SELECT ALL t0.c1, v0.c0 FROM t1, t0 LEFT OUTER JOIN v0 ON CAST(v0.c0 COLLATE RTRIM AS NUMERIC) WHERE (((((((t0.c0)>(v0.c0)))==(((((t1.c0)AND(t0.c1)))OR(t0.c1))))) ISNULL));
SELECT ALL t0.c1, v0.c0 FROM t1, t0 LEFT OUTER JOIN v0 ON CAST(v0.c0 COLLATE RTRIM AS NUMERIC);
SELECT DISTINCT * FROM t1 INNER JOIN v0 ON 'E^u5l/axC' CROSS JOIN t0 ON ((t0.c2) NOT BETWEEN (x'ffcc') AND (t0.c2)) COLLATE RTRIM;
SELECT DISTINCT * FROM t1 INNER JOIN v0 ON 'E^u5l/axC' CROSS JOIN t0 ON ((t0.c2) NOT BETWEEN (x'ffcc') AND (t0.c2)) COLLATE RTRIM WHERE (((((t0.c2)AND(t1.c0)))OR((NOT (t1.c0))))) UNION SELECT DISTINCT * FROM t1 INNER JOIN v0 ON 'E^u5l/axC' CROSS JOIN t0 ON ((t0.c2) NOT BETWEEN (x'ffcc') AND (t0.c2)) COLLATE RTRIM WHERE ((NOT (((((t0.c2)AND(t1.c0)))OR((NOT (t1.c0))))))) UNION SELECT DISTINCT * FROM t1 INNER JOIN v0 ON 'E^u5l/axC' CROSS JOIN t0 ON ((t0.c2) NOT BETWEEN (x'ffcc') AND (t0.c2)) COLLATE RTRIM WHERE (((((((t0.c2)AND(t1.c0)))OR((NOT (t1.c0))))) ISNULL));
SELECT DISTINCT * FROM t1 INNER JOIN v0 ON 'E^u5l/axC' CROSS JOIN t0 ON ((t0.c2) NOT BETWEEN (x'ffcc') AND (t0.c2)) COLLATE RTRIM;
SELECT v0.c0 FROM v0 INNER JOIN t1 ON v0.c0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 INNER JOIN t1 ON v0.c0 WHERE (CASE ((v0.c0) NOTNULL)  WHEN ((v0.c0)%(v0.c0)) THEN CAST(v0.c0 AS INTEGER) WHEN ((t1.c0)IS NOT(v0.c0)) THEN ((((((((t1.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)) WHEN '' THEN v0.c0 COLLATE NOCASE ELSE ((t1.c0) NOT BETWEEN (NULL) AND (t1.c0)) END) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 INNER JOIN t1 ON v0.c0 WHERE ((NOT (CASE ((v0.c0) NOTNULL)  WHEN ((v0.c0)%(v0.c0)) THEN CAST(v0.c0 AS INTEGER) WHEN ((t1.c0)IS NOT(v0.c0)) THEN ((((((((t1.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)) WHEN '' THEN v0.c0 COLLATE NOCASE ELSE ((t1.c0) NOT BETWEEN (NULL) AND (t1.c0)) END))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 INNER JOIN t1 ON v0.c0 WHERE (((CASE ((v0.c0) NOTNULL)  WHEN ((v0.c0)%(v0.c0)) THEN CAST(v0.c0 AS INTEGER) WHEN ((t1.c0)IS NOT(v0.c0)) THEN ((((((((t1.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)) WHEN '' THEN v0.c0 COLLATE NOCASE ELSE ((t1.c0) NOT BETWEEN (NULL) AND (t1.c0)) END) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 INNER JOIN t1 ON v0.c0 GROUP BY v0.c0;
SELECT ALL t0.c0, t0.c1, t0.c2, t1.c0 FROM t0 NATURAL JOIN t1 GROUP BY t0.c0, t0.c1, t0.c2, t1.c0;
SELECT ALL t0.c0, t0.c1, t0.c2, t1.c0 FROM t0 NATURAL JOIN t1 GROUP BY t0.c0, t0.c1, t0.c2, t1.c0 HAVING '-_' UNION ALL SELECT ALL t0.c0, t0.c1, t0.c2, t1.c0 FROM t0 NATURAL JOIN t1 GROUP BY t0.c0, t0.c1, t0.c2, t1.c0 HAVING (NOT ('-_')) UNION ALL SELECT ALL t0.c0, t0.c1, t0.c2, t1.c0 FROM t0 NATURAL JOIN t1 GROUP BY t0.c0, t0.c1, t0.c2, t1.c0 HAVING (('-_') ISNULL);
SELECT ALL t0.c0, t0.c1, t0.c2, t1.c0 FROM t0 NATURAL JOIN t1 GROUP BY t0.c0, t0.c1, t0.c2, t1.c0;
SELECT ALL t0.c0, t0.c1, t0.c2, t1.c0 FROM t0 NATURAL JOIN t1 GROUP BY t0.c0, t0.c1, t0.c2, t1.c0 HAVING '-_' UNION ALL SELECT ALL t0.c0, t0.c1, t0.c2, t1.c0 FROM t0 NATURAL JOIN t1 GROUP BY t0.c0, t0.c1, t0.c2, t1.c0 HAVING (NOT ('-_')) UNION ALL SELECT ALL t0.c0, t0.c1, t0.c2, t1.c0 FROM t0 NATURAL JOIN t1 GROUP BY t0.c0, t0.c1, t0.c2, t1.c0 HAVING (('-_') ISNULL);
SELECT ALL t0.c0, t0.c1, t0.c2, t1.c0 FROM t0 NATURAL JOIN t1 GROUP BY t0.c0, t0.c1, t0.c2, t1.c0;
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE (CAST((t0.c0 IN ()) AS NUMERIC)) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (CAST((t0.c0 IN ()) AS NUMERIC)))) UNION ALL SELECT ALL * FROM t0 WHERE (((CAST((t0.c0 IN ()) AS NUMERIC)) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM t1, v0;
SELECT DISTINCT * FROM t1, v0 WHERE (((((t1.c0)/('*2'))) ISNULL)) UNION SELECT DISTINCT * FROM t1, v0 WHERE ((NOT (((((t1.c0)/('*2'))) ISNULL)))) UNION SELECT DISTINCT * FROM t1, v0 WHERE (((((((t1.c0)/('*2'))) ISNULL)) ISNULL));
SELECT DISTINCT * FROM t1, v0;
SELECT t0.c0 FROM t1, v0, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t1, v0, t0 WHERE (((((((((CAST(t0.c0 AS BLOB))AND(((((t1.c0)AND(t0.c1)))OR(t0.c1)))))OR(((v0.c0) NOT BETWEEN (t1.c0) AND (v0.c0)))))OR((t0.c0 IN ()))))OR((((t0.c1))>((t1.c0)))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t1, v0, t0 WHERE ((NOT (((((((((CAST(t0.c0 AS BLOB))AND(((((t1.c0)AND(t0.c1)))OR(t0.c1)))))OR(((v0.c0) NOT BETWEEN (t1.c0) AND (v0.c0)))))OR((t0.c0 IN ()))))OR((((t0.c1))>((t1.c0)))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t1, v0, t0 WHERE (((((((((((CAST(t0.c0 AS BLOB))AND(((((t1.c0)AND(t0.c1)))OR(t0.c1)))))OR(((v0.c0) NOT BETWEEN (t1.c0) AND (v0.c0)))))OR((t0.c0 IN ()))))OR((((t0.c1))>((t1.c0)))))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t1, v0, t0 GROUP BY t0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT SUM((((t1.c0, ((t0.c1) NOTNULL), LIKE(t0.c0, t0.c2, '0')))>=((CASE WHEN t0.c1 THEN t0.c1 ELSE t0.c2 END, ((t1.c0) NOT BETWEEN (t1.c0) AND (t0.c2)), t1.c0)))) FROM t1, t0 ORDER BY (~ ((((t0.c0)) NOT BETWEEN ((t0.c1)) AND ((x''))))) DESC, ((x'')<(((t0.c0) IS FALSE)))  NULLS FIRST, SQLITE_COMPILEOPTION_GET(((x'') BETWEEN (t0.c0) AND (NULL))) DESC;
SELECT t0.c0, t0.c1, t0.c2 FROM t0;
SELECT t0.c0, t0.c1, t0.c2 FROM t0 WHERE (HEX(DISTINCT ((t0.c1)/(t0.c1)))) UNION ALL SELECT ALL t0.c0, t0.c1, t0.c2 FROM t0 WHERE ((NOT (HEX(DISTINCT ((t0.c1)/(t0.c1)))))) UNION ALL SELECT t0.c0, t0.c1, t0.c2 FROM t0 WHERE (((HEX(DISTINCT ((t0.c1)/(t0.c1)))) ISNULL));
SELECT t0.c0, t0.c1, t0.c2 FROM t0;
SELECT DISTINCT t0.c1, t0.c2 FROM t1, t0;
SELECT DISTINCT t0.c1, t0.c2 FROM t1, t0 WHERE (HEX(((((0.23141196873058045)OR(t0.c2)))AND(t0.c0)))) UNION SELECT DISTINCT t0.c1, t0.c2 FROM t1, t0 WHERE ((NOT (HEX(((((0.23141196873058045)OR(t0.c2)))AND(t0.c0)))))) UNION SELECT DISTINCT t0.c1, t0.c2 FROM t1, t0 WHERE (((HEX(((((0.23141196873058045)OR(t0.c2)))AND(t0.c0)))) ISNULL));
SELECT DISTINCT t0.c1, t0.c2 FROM t1, t0;
SELECT ALL t0.c2, t0.c1 FROM t0 LEFT OUTER JOIN v0 ON ((t0.c0)GLOB(((((t0.c1)AND(t0.c0)))OR(v0.c0)))) INNER JOIN t1 ON ((((v0.c0)>=(t0.c0)))==(((t0.c0) NOT NULL))) GROUP BY t0.c2, t0.c1;
SELECT t0.c2, t0.c1 FROM t0 LEFT OUTER JOIN v0 ON ((t0.c0)GLOB(((((t0.c1)AND(t0.c0)))OR(v0.c0)))) INNER JOIN t1 ON ((((v0.c0)>=(t0.c0)))==(((t0.c0) NOT NULL))) WHERE (TRIM(DISTINCT (t1.c0 IN ()), CASE WHEN x'4dad' THEN NULL END)) GROUP BY t0.c2, t0.c1 UNION SELECT ALL t0.c2, t0.c1 FROM t0 LEFT OUTER JOIN v0 ON ((t0.c0)GLOB(((((t0.c1)AND(t0.c0)))OR(v0.c0)))) INNER JOIN t1 ON ((((v0.c0)>=(t0.c0)))==(((t0.c0) NOT NULL))) WHERE ((NOT (TRIM(DISTINCT (t1.c0 IN ()), CASE WHEN x'4dad' THEN NULL END)))) GROUP BY t0.c2, t0.c1 UNION SELECT ALL t0.c2, t0.c1 FROM t0 LEFT OUTER JOIN v0 ON ((t0.c0)GLOB(((((t0.c1)AND(t0.c0)))OR(v0.c0)))) INNER JOIN t1 ON ((((v0.c0)>=(t0.c0)))=(((t0.c0) NOT NULL))) WHERE (((TRIM(DISTINCT (t1.c0 IN ()), CASE WHEN x'4dad' THEN NULL END)) ISNULL)) GROUP BY t0.c2, t0.c1;
SELECT ALL t0.c2, t0.c1 FROM t0 LEFT OUTER JOIN v0 ON ((t0.c0)GLOB(((((t0.c1)AND(t0.c0)))OR(v0.c0)))) INNER JOIN t1 ON ((((v0.c0)>=(t0.c0)))==(((t0.c0) NOT NULL))) GROUP BY t0.c2, t0.c1;
SELECT t1.c0 FROM t1, v0 GROUP BY t1.c0;
SELECT t1.c0 FROM t1, v0 GROUP BY t1.c0 HAVING MAX(AVG(t1.c0)) UNION ALL SELECT t1.c0 FROM t1, v0 GROUP BY t1.c0 HAVING (NOT (MAX(AVG(t1.c0)))) UNION ALL SELECT t1.c0 FROM t1, v0 GROUP BY t1.c0 HAVING ((MAX(AVG(t1.c0))) ISNULL);
SELECT * FROM v0;
SELECT * FROM v0 WHERE (((CASE WHEN 0.2995875254957875 THEN v0.c0 END)IS(((v0.c0) IS FALSE)))) UNION ALL SELECT * FROM v0 WHERE ((NOT (((CASE WHEN 0.2995875254957875 THEN v0.c0 END)IS(((v0.c0) IS FALSE)))))) UNION ALL SELECT * FROM v0 WHERE (((((CASE WHEN 0.2995875254957875 THEN v0.c0 END)IS(((v0.c0) IS FALSE)))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE (((t1.c0) NOT NULL)) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT (((t1.c0) NOT NULL)))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE (((((t1.c0) NOT NULL)) ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((v0.c0 COLLATE BINARY)IS((+ (v0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((v0.c0 COLLATE BINARY)IS((+ (v0.c0))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0 COLLATE BINARY)IS((+ (v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT t1.c0, t0.c0 FROM t0, t1, v0 GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM t0, t1, v0 GROUP BY t1.c0, t0.c0 HAVING SUM(MAX(SUM(v0.c0))) UNION ALL SELECT t1.c0, t0.c0 FROM t0, t1, v0 GROUP BY t1.c0, t0.c0 HAVING (NOT (SUM(MAX(SUM(v0.c0))))) UNION ALL SELECT ALL t1.c0, t0.c0 FROM t0, t1, v0 GROUP BY t1.c0, t0.c0 HAVING ((SUM(MAX(SUM(v0.c0)))) ISNULL);
SELECT * FROM v0;
SELECT * FROM v0 WHERE (CASE WHEN ((v0.c0)/(v0.c0)) THEN (((v0.c0, v0.c0, v0.c0))>=((v0.c0, v0.c0, 'sQF'))) WHEN v0.c0 COLLATE BINARY THEN (((('-530630532')AND(v0.c0)))AND(v0.c0)) WHEN CAST(v0.c0 AS TEXT) THEN CASE WHEN v0.c0 THEN v0.c0 END ELSE CAST(v0.c0 AS TEXT) END) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (CASE WHEN ((v0.c0)/(v0.c0)) THEN (((v0.c0, v0.c0, v0.c0))>=((v0.c0, v0.c0, 'sQF'))) WHEN v0.c0 COLLATE BINARY THEN (((('-530630532')AND(v0.c0)))AND(v0.c0)) WHEN CAST(v0.c0 AS TEXT) THEN CASE WHEN v0.c0 THEN v0.c0 END ELSE CAST(v0.c0 AS TEXT) END))) UNION ALL SELECT * FROM v0 WHERE (((CASE WHEN ((v0.c0)/(v0.c0)) THEN (((v0.c0, v0.c0, v0.c0))>=((v0.c0, v0.c0, 'sQF'))) WHEN v0.c0 COLLATE BINARY THEN (((('-530630532')AND(v0.c0)))AND(v0.c0)) WHEN CAST(v0.c0 AS TEXT) THEN CASE WHEN v0.c0 THEN v0.c0 END ELSE CAST(v0.c0 AS TEXT) END) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((((v0.c0 IN ()))&(((((v0.c0)AND(v0.c0)))AND(v0.c0))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((((v0.c0 IN ()))&(((((v0.c0)AND(v0.c0)))AND(v0.c0))))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((v0.c0 IN ()))&(((((v0.c0)AND(v0.c0)))AND(v0.c0))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((((('-0.0')IS NOT(v0.c0))) BETWEEN (CAST(v0.c0 AS REAL)) AND (v0.c0 COLLATE RTRIM))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((((('-0.0')IS NOT(v0.c0))) BETWEEN (CAST(v0.c0 AS REAL)) AND (v0.c0 COLLATE RTRIM))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((((('-0.0')IS NOT(v0.c0))) BETWEEN (CAST(v0.c0 AS REAL)) AND (v0.c0 COLLATE RTRIM))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0, t1.c0 FROM t1, v0 GROUP BY v0.c0, t1.c0;
SELECT ALL v0.c0, t1.c0 FROM t1, v0 GROUP BY v0.c0, t1.c0 HAVING ((((((((((((((((v0.c0)AND((t1.c0 IN ()))))OR(COUNT(*))))AND(AVG(MIN(GROUP_CONCAT(AVG(SUM(COUNT(*)))))))))OR(((MIN(v0.c0))==(v0.c0)))))OR((((t1.c0)) NOT BETWEEN ((v0.c0)) AND ((MIN(MIN(t1.c0))))))))OR(AVG(t1.c0))))OR(COUNT(*))))AND(COUNT(t1.c0))) UNION ALL SELECT ALL v0.c0, t1.c0 FROM t1, v0 GROUP BY v0.c0, t1.c0 HAVING (NOT (((((((((((((((((v0.c0)AND((t1.c0 IN ()))))OR(COUNT(*))))AND(AVG(MIN(GROUP_CONCAT(AVG(SUM(COUNT(*)))))))))OR(((MIN(v0.c0))=(v0.c0)))))OR((((t1.c0)) NOT BETWEEN ((v0.c0)) AND ((MIN(MIN(t1.c0))))))))OR(AVG(t1.c0))))OR(COUNT(*))))AND(COUNT(t1.c0))))) UNION ALL SELECT v0.c0, t1.c0 FROM t1, v0 GROUP BY v0.c0, t1.c0 HAVING ((((((((((((((((((v0.c0)AND((t1.c0 IN ()))))OR(COUNT(*))))AND(AVG(MIN(GROUP_CONCAT(AVG(SUM(COUNT(*)))))))))OR(((MIN(v0.c0))==(v0.c0)))))OR((((t1.c0)) NOT BETWEEN ((v0.c0)) AND ((MIN(MIN(t1.c0))))))))OR(AVG(t1.c0))))OR(COUNT(*))))AND(COUNT(t1.c0)))) ISNULL);
SELECT t0.c1, v0.c0, t1.c0, t0.c0 FROM v0, t0, t1;
SELECT t0.c1, v0.c0, t1.c0, t0.c0 FROM v0, t0, t1 WHERE ((0.11120799981515506 IN ())) UNION ALL SELECT ALL t0.c1, v0.c0, t1.c0, t0.c0 FROM v0, t0, t1 WHERE ((NOT ((0.11120799981515506 IN ())))) UNION ALL SELECT t0.c1, v0.c0, t1.c0, t0.c0 FROM v0, t0, t1 WHERE ((((0.11120799981515506 IN ())) ISNULL));
SELECT t0.c1, v0.c0, t1.c0, t0.c0 FROM v0, t0, t1;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (CAST(((t1.c0) NOT BETWEEN (t1.c0) AND (0.11767816751436633)) AS REAL)) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (CAST(((t1.c0) NOT BETWEEN (t1.c0) AND (0.11767816751436633)) AS REAL)))) UNION SELECT DISTINCT * FROM t1 WHERE (((CAST(((t1.c0) NOT BETWEEN (t1.c0) AND (0.11767816751436633)) AS REAL)) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT ALL t0.c2, t1.c0, v0.c0 FROM t1 FULL OUTER JOIN v0 ON (('914116175')||(CASE v0.c0  WHEN 0.9018176682436703 THEN t0.c2 ELSE t0.c2 END)) FULL OUTER JOIN t0 ON (((((t0.c0)) BETWEEN ((t0.c0)) AND ((t1.c0))))|((+ (t0.c2)))) GROUP BY t0.c2, t1.c0, v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING TOTAL('') UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TOTAL(''))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL('')) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING TOTAL('') UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TOTAL(''))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL('')) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL MAX(((CAST(t0.c0 AS REAL)) BETWEEN ((t0.c1 IN ())) AND (((t0.c1)>>(t0.c1))))) FROM t1, t0;
SELECT v0.c0, t1.c0 FROM t1, v0;
SELECT v0.c0, t1.c0 FROM t1, v0 WHERE (((((t1.c0) BETWEEN (v0.c0) AND (v0.c0))) BETWEEN ((((t1.c0))=((v0.c0)))) AND (((v0.c0) NOTNULL)))) UNION ALL SELECT v0.c0, t1.c0 FROM t1, v0 WHERE ((NOT (((((t1.c0) BETWEEN (v0.c0) AND (v0.c0))) BETWEEN ((((t1.c0))=((v0.c0)))) AND (((v0.c0) NOTNULL)))))) UNION ALL SELECT ALL v0.c0, t1.c0 FROM t1, v0 WHERE (((((((t1.c0) BETWEEN (v0.c0) AND (v0.c0))) BETWEEN ((((t1.c0))=((v0.c0)))) AND (((v0.c0) NOTNULL)))) ISNULL));
SELECT v0.c0, t1.c0 FROM t1, v0;
SELECT DISTINCT * FROM t1, t0;
SELECT DISTINCT * FROM t1, t0 WHERE (CASE t0.c2  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END COLLATE BINARY) UNION SELECT DISTINCT * FROM t1, t0 WHERE ((NOT (CASE t0.c2  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END COLLATE BINARY))) UNION SELECT DISTINCT * FROM t1, t0 WHERE (((CASE t0.c2  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM t1, t0;
SELECT t0.c0, t1.c0, v0.c0 FROM t0 NOT INDEXED CROSS JOIN t1 ON ((((v0.c0)|(t0.c2)))<('')) RIGHT OUTER JOIN v0 ON ((((((((((((((((((((0.1072001413970225)AND(0x686875be)))OR(t0.c2)))OR(t0.c2)))OR(t0.c2)))AND((t1.c0 IN ()))))AND((t0.c0 IN (t0.c0)))))AND(HEX(DISTINCT t0.c1))))AND(((v0.c0)OR(v0.c0)))))AND(((t0.c0) BETWEEN (t0.c2) AND (v0.c0)))))AND(ROUND(t0.c0, t0.c0))) GROUP BY t0.c0, t1.c0, v0.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING COUNT(MAX(t1.c0)) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (COUNT(MAX(t1.c0)))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((COUNT(MAX(t1.c0))) ISNULL);
SELECT ALL * FROM v0, t1, t0;
SELECT * FROM v0, t1, t0 WHERE (SUBSTR(t0.c0, ((((t1.c0)AND(t1.c0)))OR(t0.c2)))) UNION ALL SELECT * FROM v0, t1, t0 WHERE ((NOT (SUBSTR(t0.c0, ((((t1.c0)AND(t1.c0)))OR(t0.c2)))))) UNION ALL SELECT ALL * FROM v0, t1, t0 WHERE (((SUBSTR(t0.c0, ((((t1.c0)AND(t1.c0)))OR(t0.c2)))) ISNULL));
SELECT ALL * FROM v0, t1, t0;
SELECT DISTINCT t0.c2 FROM v0, t0;
SELECT DISTINCT t0.c2 FROM v0, t0 WHERE (CAST((((v0.c0, v0.c0, t0.c2, t0.c1, v0.c0))>((t0.c2, 0.3103627238471268, t0.c0, t0.c1, t0.c1))) AS REAL)) UNION SELECT DISTINCT t0.c2 FROM v0, t0 WHERE ((NOT (CAST((((v0.c0, v0.c0, t0.c2, t0.c1, v0.c0))>((t0.c2, 0.3103627238471268, t0.c0, t0.c1, t0.c1))) AS REAL)))) UNION SELECT DISTINCT t0.c2 FROM v0, t0 WHERE (((CAST((((v0.c0, v0.c0, t0.c2, t0.c1, v0.c0))>((t0.c2, 0.3103627238471268, t0.c0, t0.c1, t0.c1))) AS REAL)) ISNULL));
SELECT DISTINCT t0.c2 FROM v0, t0;
SELECT ALL t0.c1, t0.c0, t0.c2 FROM v0, t0 GROUP BY t0.c1, t0.c0, t0.c2;
SELECT ALL t0.c1, t0.c0, t0.c2 FROM v0, t0 WHERE (((CASE WHEN t0.c2 THEN t0.c1 ELSE v0.c0 END)<(((t0.c1) NOTNULL)))) GROUP BY t0.c1, t0.c0, t0.c2 UNION SELECT ALL t0.c1, t0.c0, t0.c2 FROM v0, t0 WHERE ((NOT (((CASE WHEN t0.c2 THEN t0.c1 ELSE v0.c0 END)<(((t0.c1) NOTNULL)))))) GROUP BY t0.c1, t0.c0, t0.c2 UNION SELECT ALL t0.c1, t0.c0, t0.c2 FROM v0, t0 WHERE (((((CASE WHEN t0.c2 THEN t0.c1 ELSE v0.c0 END)<(((t0.c1) NOTNULL)))) ISNULL)) GROUP BY t0.c1, t0.c0, t0.c2;
SELECT ALL t0.c1, t0.c0, t0.c2 FROM v0, t0 GROUP BY t0.c1, t0.c0, t0.c2;
SELECT ALL t0.c1, t0.c2 FROM t0 GROUP BY t0.c1, t0.c2;
SELECT ALL t0.c1, t0.c2 FROM t0 GROUP BY t0.c1, t0.c2 HAVING COUNT(NULL) UNION ALL SELECT ALL t0.c1, t0.c2 FROM t0 GROUP BY t0.c1, t0.c2 HAVING (NOT (COUNT(NULL))) UNION ALL SELECT ALL t0.c1, t0.c2 FROM t0 NOT INDEXED GROUP BY t0.c1, t0.c2 HAVING ((COUNT(NULL)) ISNULL);
SELECT ALL t0.c1, t0.c2 FROM t0 GROUP BY t0.c1, t0.c2;
SELECT ALL t0.c1, t0.c2 FROM t0 GROUP BY t0.c1, t0.c2 HAVING COUNT(NULL) UNION ALL SELECT ALL t0.c1, t0.c2 FROM t0 GROUP BY t0.c1, t0.c2 HAVING (NOT (COUNT(NULL))) UNION ALL SELECT ALL t0.c1, t0.c2 FROM t0 NOT INDEXED GROUP BY t0.c1, t0.c2 HAVING ((COUNT(NULL)) ISNULL);
SELECT ALL t0.c1, t0.c2 FROM t0 GROUP BY t0.c1, t0.c2;
SELECT t1.c0, t0.c2, t0.c0 FROM t1 NATURAL JOIN t0;
SELECT t1.c0, t0.c2, t0.c0 FROM t1 NATURAL JOIN t0 WHERE (t1.c0) UNION ALL SELECT t1.c0, t0.c2, t0.c0 FROM t1 NATURAL JOIN t0 WHERE ((NOT (t1.c0))) UNION ALL SELECT ALL t1.c0, t0.c2, t0.c0 FROM t1 NATURAL JOIN t0 WHERE (((t1.c0) ISNULL));
SELECT t1.c0, t0.c2, t0.c0 FROM t1 NATURAL JOIN t0;
SELECT DISTINCT * FROM v0, t1, t0;
SELECT DISTINCT * FROM v0, t1, t0 WHERE (CAST((t0.c2 IN (t0.c1)) AS INTEGER)) UNION SELECT DISTINCT * FROM v0, t1 NOT INDEXED, t0 WHERE ((NOT (CAST((t0.c2 IN (t0.c1)) AS INTEGER)))) UNION SELECT DISTINCT * FROM v0, t1, t0 WHERE (((CAST((t0.c2 IN (t0.c1)) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM v0, t1, t0;
SELECT t0.c1, v0.c0, t0.c2, t0.c0 FROM t0, v0 GROUP BY t0.c1, v0.c0, t0.c2, t0.c0;
SELECT ALL t0.c1, v0.c0, t0.c2, t0.c0 FROM t0, v0 WHERE (((((t0.c1)||(')r'))) NOT BETWEEN (JULIANDAY(t0.c0, v0.c0, t0.c1, t0.c1, v0.c0)) AND (t0.c1 COLLATE BINARY))) GROUP BY t0.c1, v0.c0, t0.c2, t0.c0 UNION SELECT ALL t0.c1, v0.c0, t0.c2, t0.c0 FROM t0, v0 WHERE ((NOT (((((t0.c1)||(')r'))) NOT BETWEEN (JULIANDAY(t0.c0, v0.c0, t0.c1, t0.c1, v0.c0)) AND (t0.c1 COLLATE BINARY))))) GROUP BY t0.c1, v0.c0, t0.c2, t0.c0 UNION SELECT ALL t0.c1, v0.c0, t0.c2, t0.c0 FROM t0, v0 WHERE (((((((t0.c1)||(')r'))) NOT BETWEEN (JULIANDAY(t0.c0, v0.c0, t0.c1, t0.c1, v0.c0)) AND (t0.c1 COLLATE BINARY))) ISNULL)) GROUP BY t0.c1, v0.c0, t0.c2, t0.c0;
SELECT t0.c1, v0.c0, t0.c2, t0.c0 FROM t0, v0 GROUP BY t0.c1, v0.c0, t0.c2, t0.c0;
SELECT t1.c0, t0.c2, t0.c1, t0.c0, v0.c0 FROM v0, t0, t1 GROUP BY t1.c0, t0.c2, t0.c1, t0.c0, v0.c0;
SELECT ALL t1.c0, t0.c2, t0.c1, t0.c0, v0.c0 FROM v0, t0, t1 GROUP BY t1.c0, t0.c2, t0.c1, t0.c0, v0.c0 HAVING (((((t1.c0) NOT NULL)))=((COUNT(TOTAL(0.20979162687094666))))) UNION ALL SELECT t1.c0, t0.c2, t0.c1, t0.c0, v0.c0 FROM v0 NOT INDEXED, t0, t1 GROUP BY t1.c0, t0.c2, t0.c1, t0.c0, v0.c0 HAVING (NOT ((((((t1.c0) NOT NULL)))=((COUNT(TOTAL(0.20979162687094666))))))) UNION ALL SELECT t1.c0, t0.c2, t0.c1, t0.c0, v0.c0 FROM v0, t0, t1 GROUP BY t1.c0, t0.c2, t0.c1, t0.c0, v0.c0 HAVING (((((((t1.c0) NOT NULL)))=((COUNT(TOTAL(0.20979162687094666)))))) ISNULL);
SELECT t0.c1, t0.c2 FROM t0;
SELECT ALL t0.c1, t0.c2 FROM t0 WHERE (((t0.c1 COLLATE BINARY)GLOB(t0.c0 COLLATE RTRIM))) UNION ALL SELECT t0.c1, t0.c2 FROM t0 WHERE ((NOT (((t0.c1 COLLATE BINARY)GLOB(t0.c0 COLLATE RTRIM))))) UNION ALL SELECT ALL t0.c1, t0.c2 FROM t0 WHERE (((((t0.c1 COLLATE BINARY)GLOB(t0.c0 COLLATE RTRIM))) ISNULL));
SELECT t0.c1, t0.c2 FROM t0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (NULL COLLATE BINARY) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (NULL COLLATE BINARY))) UNION SELECT DISTINCT * FROM v0 WHERE (((NULL COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE (CAST(((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) AS REAL)) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT (CAST(((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) AS REAL)))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE (((CAST(((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) AS REAL)) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t0.c0, t1.c0 FROM t0, v0, t1 GROUP BY t0.c0, t1.c0;
SELECT ALL t0.c0, t1.c0 FROM t0, v0, t1 GROUP BY t0.c0, t1.c0 HAVING TOTAL(COUNT(*)) UNION ALL SELECT ALL t0.c0, t1.c0 FROM t0, v0, t1 GROUP BY t0.c0, t1.c0 HAVING (NOT (TOTAL(COUNT(*)))) UNION ALL SELECT t0.c0, t1.c0 FROM t0, v0, t1 GROUP BY t0.c0, t1.c0 HAVING ((TOTAL(COUNT(*))) ISNULL);
SELECT ALL * FROM t1, v0, t0;
SELECT ALL * FROM t1, v0, t0 WHERE ((((t1.c0, v0.c0, t0.c0)) BETWEEN ((CAST(t0.c2 AS BLOB), (v0.c0 IN ()), HEX(t1.c0))) AND ((((v0.c0)|(t0.c2)), t1.c0 COLLATE RTRIM, ((v0.c0) IS FALSE))))) UNION ALL SELECT ALL * FROM t1, v0, t0 WHERE ((NOT ((((t1.c0, v0.c0, t0.c0)) BETWEEN ((CAST(t0.c2 AS BLOB), (v0.c0 IN ()), HEX(t1.c0))) AND ((((v0.c0)|(t0.c2)), t1.c0 COLLATE RTRIM, ((v0.c0) IS FALSE))))))) UNION ALL SELECT * FROM t1, v0, t0 WHERE ((((((t1.c0, v0.c0, t0.c0)) BETWEEN ((CAST(t0.c2 AS BLOB), (v0.c0 IN ()), HEX(t1.c0))) AND ((((v0.c0)|(t0.c2)), t1.c0 COLLATE RTRIM, ((v0.c0) IS FALSE))))) ISNULL));
SELECT ALL * FROM t1, v0, t0;
SELECT DISTINCT t0.c1 FROM t0;
SELECT DISTINCT t0.c1 FROM t0 WHERE (CASE WHEN CAST(t0.c2 AS TEXT) THEN ((t0.c0) NOT NULL) ELSE ((t0.c2)/(0.031010414080127835)) END) UNION SELECT DISTINCT t0.c1 FROM t0 WHERE ((NOT (CASE WHEN CAST(t0.c2 AS TEXT) THEN ((t0.c0) NOT NULL) ELSE ((t0.c2)/(0.031010414080127835)) END))) UNION SELECT DISTINCT t0.c1 FROM t0 WHERE (((CASE WHEN CAST(t0.c2 AS TEXT) THEN ((t0.c0) NOT NULL) ELSE ((t0.c2)/(0.031010414080127835)) END) ISNULL));
SELECT DISTINCT t0.c1 FROM t0;
SELECT ALL t1.c0, t0.c0, v0.c0, t0.c1 FROM t1, t0, v0 GROUP BY t1.c0, t0.c0, v0.c0, t0.c1;
SELECT t1.c0, t0.c0, v0.c0, t0.c1 FROM t1, t0, v0 WHERE ((~ (CAST(t0.c2 AS BLOB)))) GROUP BY t1.c0, t0.c0, v0.c0, t0.c1 UNION SELECT t1.c0, t0.c0, v0.c0, t0.c1 FROM t1, t0, v0 WHERE ((NOT ((~ (CAST(t0.c2 AS BLOB)))))) GROUP BY t1.c0, t0.c0, v0.c0, t0.c1 UNION SELECT ALL t1.c0, t0.c0, v0.c0, t0.c1 FROM t1, t0, v0 WHERE ((((~ (CAST(t0.c2 AS BLOB)))) ISNULL)) GROUP BY t1.c0, t0.c0, v0.c0, t0.c1;
SELECT ALL t1.c0, t0.c0, v0.c0, t0.c1 FROM t1, t0, v0 GROUP BY t1.c0, t0.c0, v0.c0, t0.c1;
SELECT t1.c0, v0.c0, t0.c0, t0.c2, t0.c1 FROM t0, t1, v0 GROUP BY t1.c0, v0.c0, t0.c0, t0.c2, t0.c1;
SELECT t1.c0, v0.c0, t0.c0, t0.c2, t0.c1 FROM t0, t1, v0 GROUP BY t1.c0, v0.c0, t0.c0, t0.c2, t0.c1 HAVING AVG(t1.c0) UNION ALL SELECT ALL t1.c0, v0.c0, t0.c0, t0.c2, t0.c1 FROM t0, t1, v0 GROUP BY t1.c0, v0.c0, t0.c0, t0.c2, t0.c1 HAVING (NOT (AVG(t1.c0))) UNION ALL SELECT t1.c0, v0.c0, t0.c0, t0.c2, t0.c1 FROM t0, t1, v0 GROUP BY t1.c0, v0.c0, t0.c0, t0.c2, t0.c1 HAVING ((AVG(t1.c0)) ISNULL);
SELECT t1.c0, v0.c0, t0.c0, t0.c2, t0.c1 FROM t0, t1, v0 GROUP BY t1.c0, v0.c0, t0.c0, t0.c2, t0.c1;
SELECT t1.c0, v0.c0, t0.c0, t0.c2, t0.c1 FROM t0, t1, v0 GROUP BY t1.c0, v0.c0, t0.c0, t0.c2, t0.c1 HAVING AVG(t1.c0) UNION ALL SELECT ALL t1.c0, v0.c0, t0.c0, t0.c2, t0.c1 FROM t0, t1, v0 GROUP BY t1.c0, v0.c0, t0.c0, t0.c2, t0.c1 HAVING (NOT (AVG(t1.c0))) UNION ALL SELECT t1.c0, v0.c0, t0.c0, t0.c2, t0.c1 FROM t0, t1, v0 GROUP BY t1.c0, v0.c0, t0.c0, t0.c2, t0.c1 HAVING ((AVG(t1.c0)) ISNULL);
SELECT t1.c0, v0.c0, t0.c0, t0.c2, t0.c1 FROM t0, t1, v0 GROUP BY t1.c0, v0.c0, t0.c0, t0.c2, t0.c1;
SELECT * FROM v0, t1;
SELECT * FROM v0, t1 WHERE (((t1.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM) UNION ALL SELECT ALL * FROM v0, t1 WHERE ((NOT (((t1.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM))) UNION ALL SELECT ALL * FROM v0, t1 WHERE (((((t1.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM) ISNULL));
SELECT * FROM v0, t1;
SELECT DISTINCT v0.c0 FROM t0, v0 RIGHT OUTER JOIN t1 ON ((((((((t1.c0)OR((t0.c1 IN (t0.c1)))))OR((((t0.c0, t1.c0, t0.c0, t1.c0, t0.c1)) BETWEEN ((t0.c1, t0.c1, t0.c2, t0.c2, v0.c0)) AND ((t0.c0, v0.c0, v0.c0, v0.c0, NULL))))))AND(x'0db8')))OR(((t0.c1)<(t0.c1))));
SELECT DISTINCT v0.c0 FROM t0, v0 RIGHT OUTER JOIN t1 ON ((((((((t1.c0)OR((t0.c1 IN (t0.c1)))))OR((((t0.c0, t1.c0, t0.c0, t1.c0, t0.c1)) BETWEEN ((t0.c1, t0.c1, t0.c2, t0.c2, v0.c0)) AND ((t0.c0, v0.c0, v0.c0, v0.c0, NULL))))))AND(x'0db8')))OR(((t0.c1)<(t0.c1)))) WHERE (CAST(t1.c0 AS NUMERIC)) UNION SELECT DISTINCT v0.c0 FROM t0, v0 RIGHT OUTER JOIN t1 ON ((((((((t1.c0)OR((t0.c1 IN (t0.c1)))))OR((((t0.c0, t1.c0, t0.c0, t1.c0, t0.c1)) BETWEEN ((t0.c1, t0.c1, t0.c2, t0.c2, v0.c0)) AND ((t0.c0, v0.c0, v0.c0, v0.c0, NULL))))))AND(x'0db8')))OR(((t0.c1)<(t0.c1)))) WHERE ((NOT (CAST(t1.c0 AS NUMERIC)))) UNION SELECT DISTINCT v0.c0 FROM t0, v0 RIGHT OUTER JOIN t1 ON ((((((((t1.c0)OR((t0.c1 IN (t0.c1)))))OR((((t0.c0, t1.c0, t0.c0, t1.c0, t0.c1)) BETWEEN ((t0.c1, t0.c1, t0.c2, t0.c2, v0.c0)) AND ((t0.c0, v0.c0, v0.c0, v0.c0, NULL))))))AND(x'0db8')))OR(((t0.c1)<(t0.c1)))) WHERE (((CAST(t1.c0 AS NUMERIC)) ISNULL));
SELECT DISTINCT v0.c0 FROM t0, v0 RIGHT OUTER JOIN t1 ON ((((((((t1.c0)OR((t0.c1 IN (t0.c1)))))OR((((t0.c0, t1.c0, t0.c0, t1.c0, t0.c1)) BETWEEN ((t0.c1, t0.c1, t0.c2, t0.c2, v0.c0)) AND ((t0.c0, v0.c0, v0.c0, v0.c0, NULL))))))AND(x'0db8')))OR(((t0.c1)<(t0.c1))));
SELECT ALL t1.c0, t0.c1, t0.c2, v0.c0 FROM t1 NOT INDEXED, t0, v0 GROUP BY t1.c0, t0.c1, t0.c2, v0.c0;
SELECT ALL t1.c0, t0.c1, t0.c2, v0.c0 FROM t1, t0, v0 WHERE ((('779695189') NOT BETWEEN ((('-732543364')=(t0.c0))) AND (((t0.c1) NOT BETWEEN (v0.c0) AND (t0.c1))))) GROUP BY t1.c0, t0.c1, t0.c2, v0.c0 UNION SELECT ALL t1.c0, t0.c1, t0.c2, v0.c0 FROM t1, t0 NOT INDEXED, v0 WHERE ((NOT ((('779695189') NOT BETWEEN ((('-732543364')=(t0.c0))) AND (((t0.c1) NOT BETWEEN (v0.c0) AND (t0.c1))))))) GROUP BY t1.c0, t0.c1, t0.c2, v0.c0 UNION SELECT ALL t1.c0, t0.c1, t0.c2, v0.c0 FROM t1, t0, v0 WHERE ((((('779695189') NOT BETWEEN ((('-732543364')=(t0.c0))) AND (((t0.c1) NOT BETWEEN (v0.c0) AND (t0.c1))))) ISNULL)) GROUP BY t1.c0, t0.c1, t0.c2, v0.c0;
SELECT ALL t1.c0, t0.c1, t0.c2, v0.c0 FROM t1 NOT INDEXED, t0, v0 GROUP BY t1.c0, t0.c1, t0.c2, v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING TOTAL(COUNT(*)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TOTAL(COUNT(*)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL(COUNT(*))) ISNULL);
SELECT t1.c0 FROM t1;
SELECT t1.c0 FROM t1 WHERE ((+ (((t1.c0) IS FALSE)))) UNION ALL SELECT t1.c0 FROM t1 WHERE ((NOT ((+ (((t1.c0) IS FALSE)))))) UNION ALL SELECT t1.c0 FROM t1 WHERE ((((+ (((t1.c0) IS FALSE)))) ISNULL));
SELECT t1.c0 FROM t1;
SELECT DISTINCT t1.c0, t0.c0, t0.c1, t0.c2 FROM t0, t1, v0;
SELECT DISTINCT t1.c0, t0.c0, t0.c1, t0.c2 FROM t0, t1, v0 WHERE ((((0.8541385024420404, t0.c0, t0.c0)) BETWEEN ((0.6995095523670486, (((v0.c0, v0.c0, t0.c1))>=((v0.c0, t0.c1, t1.c0))), 0xffffffff9845b443)) AND ((((t0.c2) NOT NULL), CASE v0.c0  WHEN v0.c0 THEN t0.c1 END, t0.c2)))) UNION SELECT DISTINCT t1.c0, t0.c0, t0.c1, t0.c2 FROM t0, t1, v0 WHERE ((NOT ((((0.8541385024420404, t0.c0, t0.c0)) BETWEEN ((0.6995095523670486, (((v0.c0, v0.c0, t0.c1))>=((v0.c0, t0.c1, t1.c0))), 0xffffffff9845b443)) AND ((((t0.c2) NOT NULL), CASE v0.c0  WHEN v0.c0 THEN t0.c1 END, t0.c2)))))) UNION SELECT DISTINCT t1.c0, t0.c0, t0.c1, t0.c2 FROM t0, t1, v0 WHERE ((((((0.8541385024420404, t0.c0, t0.c0)) BETWEEN ((0.6995095523670486, (((v0.c0, v0.c0, t0.c1))>=((v0.c0, t0.c1, t1.c0))), 0xffffffff9845b443)) AND ((((t0.c2) NOT NULL), CASE v0.c0  WHEN v0.c0 THEN t0.c1 END, t0.c2)))) ISNULL));
SELECT DISTINCT t1.c0, t0.c0, t0.c1, t0.c2 FROM t0, t1, v0;
SELECT t0.c1, t1.c0, t0.c0 FROM t1 CROSS JOIN t0 ON t0.c2 GROUP BY t0.c1, t1.c0, t0.c0;
SELECT t0.c1, t1.c0, t0.c0 FROM t1 CROSS JOIN t0 ON t0.c2 WHERE ((~ ((((t1.c0))<((t0.c2)))))) GROUP BY t0.c1, t1.c0, t0.c0 UNION SELECT t0.c1, t1.c0, t0.c0 FROM t1 CROSS JOIN t0 ON t0.c2 WHERE ((NOT ((~ ((((t1.c0))<((t0.c2)))))))) GROUP BY t0.c1, t1.c0, t0.c0 UNION SELECT t0.c1, t1.c0, t0.c0 FROM t1 CROSS JOIN t0 ON t0.c2 WHERE ((((~ ((((t1.c0))<((t0.c2)))))) ISNULL)) GROUP BY t0.c1, t1.c0, t0.c0;
SELECT t0.c1, t1.c0, t0.c0 FROM t1 CROSS JOIN t0 ON t0.c2 GROUP BY t0.c1, t1.c0, t0.c0;
SELECT ALL v0.c0, t1.c0 FROM t1, v0 NOT INDEXED GROUP BY v0.c0, t1.c0;
SELECT ALL v0.c0, t1.c0 FROM t1, v0 GROUP BY v0.c0, t1.c0 HAVING GROUP_CONCAT(GROUP_CONCAT(0X1)) UNION ALL SELECT v0.c0, t1.c0 FROM t1, v0 GROUP BY v0.c0, t1.c0 HAVING (NOT (GROUP_CONCAT(GROUP_CONCAT(0x1)))) UNION ALL SELECT ALL v0.c0, t1.c0 FROM t1, v0 GROUP BY v0.c0, t1.c0 HAVING ((GROUP_CONCAT(GROUP_CONCAT(0X1))) ISNULL);
SELECT * FROM t0, v0, t1;
SELECT * FROM t0, v0, t1 WHERE ((((t0.c1)) BETWEEN ((t1.c0)) AND ((t0.c1))) COLLATE NOCASE) UNION ALL SELECT ALL * FROM t0, v0, t1 WHERE ((NOT ((((t0.c1)) BETWEEN ((t1.c0)) AND ((t0.c1))) COLLATE NOCASE))) UNION ALL SELECT * FROM t0, v0, t1 WHERE ((((((t0.c1)) BETWEEN ((t1.c0)) AND ((t0.c1))) COLLATE NOCASE) ISNULL));
SELECT * FROM t0, v0, t1;
SELECT DISTINCT v0.c0 FROM t1, v0;
SELECT DISTINCT v0.c0 FROM t1, v0 WHERE (((v0.c0 COLLATE BINARY) NOTNULL)) UNION SELECT DISTINCT v0.c0 FROM t1, v0 WHERE ((NOT (((v0.c0 COLLATE BINARY) NOTNULL)))) UNION SELECT DISTINCT v0.c0 FROM t1, v0 WHERE (((((v0.c0 COLLATE BINARY) NOTNULL)) ISNULL));
SELECT DISTINCT v0.c0 FROM t1, v0;
SELECT t0.c1, t0.c2, t1.c0, t0.c0 FROM t1 FULL OUTER JOIN t0 ON '0.4912632061944844' GROUP BY t0.c1, t0.c2, t1.c0, t0.c0;
SELECT t0.c1, t0.c2, t1.c0, t0.c0 FROM t1 FULL OUTER JOIN t0 ON '0.4912632061944844' WHERE ((((((t0.c1))!=((t0.c2))))IS NOT(((t0.c1)<<(t0.c2))))) GROUP BY t0.c1, t0.c2, t1.c0, t0.c0 UNION SELECT t0.c1, t0.c2, t1.c0, t0.c0 FROM t1 FULL OUTER JOIN t0 ON '0.4912632061944844' WHERE ((NOT ((((((t0.c1))<>((t0.c2))))IS NOT(((t0.c1)<<(t0.c2))))))) GROUP BY t0.c1, t0.c2, t1.c0, t0.c0 UNION SELECT ALL t0.c1, t0.c2, t1.c0, t0.c0 FROM t1 FULL OUTER JOIN t0 ON '0.4912632061944844' WHERE ((((((((t0.c1))!=((t0.c2))))IS NOT(((t0.c1)<<(t0.c2))))) ISNULL)) GROUP BY t0.c1, t0.c2, t1.c0, t0.c0;
SELECT t0.c1, t0.c2, t1.c0, t0.c0 FROM t1 FULL OUTER JOIN t0 ON '0.4912632061944844' GROUP BY t0.c1, t0.c2, t1.c0, t0.c0;
SELECT t0.c1, t0.c2, t0.c0, t1.c0, v0.c0 FROM t0, t1, v0 GROUP BY t0.c1, t0.c2, t0.c0, t1.c0, v0.c0;
SELECT ALL t0.c1, t0.c2, t0.c0, t1.c0, v0.c0 FROM t0 NOT INDEXED, t1, v0 GROUP BY t0.c1, t0.c2, t0.c0, t1.c0, v0.c0 HAVING ((((TOTAL(TOTAL(SUM(COUNT(*)))))AND(COUNT(t1.c0))))AND(TOTAL(t1.c0))) UNION ALL SELECT t0.c1, t0.c2, t0.c0, t1.c0, v0.c0 FROM t0, t1, v0 GROUP BY t0.c1, t0.c2, t0.c0, t1.c0, v0.c0 HAVING (NOT (((((TOTAL(TOTAL(SUM(COUNT(*)))))AND(COUNT(t1.c0))))AND(TOTAL(t1.c0))))) UNION ALL SELECT ALL t0.c1, t0.c2, t0.c0, t1.c0, v0.c0 FROM t0, t1, v0 GROUP BY t0.c1, t0.c2, t0.c0, t1.c0, v0.c0 HAVING ((((((TOTAL(TOTAL(SUM(COUNT(*)))))AND(COUNT(t1.c0))))AND(TOTAL(t1.c0)))) ISNULL);
SELECT ALL v0.c0 FROM t1 CROSS JOIN v0 ON (((NOT (v0.c0)))+(((t1.c0) NOT BETWEEN (v0.c0) AND (v0.c0))));
SELECT v0.c0 FROM t1 CROSS JOIN v0 ON (((NOT (v0.c0)))+(((t1.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) WHERE ((((v0.c0)) BETWEEN ((CAST(v0.c0 AS NUMERIC))) AND ((((NULL)>=(t1.c0)))))) UNION ALL SELECT ALL v0.c0 FROM t1 CROSS JOIN v0 ON (((NOT (v0.c0)))+(((t1.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) WHERE ((NOT ((((v0.c0)) BETWEEN ((CAST(v0.c0 AS NUMERIC))) AND ((((NULL)>=(t1.c0)))))))) UNION ALL SELECT v0.c0 FROM t1 CROSS JOIN v0 ON (((NOT (v0.c0)))+(((t1.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) WHERE ((((((v0.c0)) BETWEEN ((CAST(v0.c0 AS NUMERIC))) AND ((((NULL)>=(t1.c0)))))) ISNULL));
SELECT ALL v0.c0 FROM t1 CROSS JOIN v0 ON (((NOT (v0.c0)))+(((t1.c0) NOT BETWEEN (v0.c0) AND (v0.c0))));
SELECT DISTINCT * FROM t0, t1, v0;
SELECT DISTINCT * FROM t0, t1, v0 WHERE (t0.c1) UNION SELECT DISTINCT * FROM t0, t1, v0 NOT INDEXED WHERE ((NOT (t0.c1))) UNION SELECT DISTINCT * FROM t0, t1, v0 WHERE (((t0.c1) ISNULL));
SELECT DISTINCT * FROM t0, t1, v0;
SELECT t0.c0, t1.c0, t0.c2, t0.c1 FROM t0, t1 GROUP BY t0.c0, t1.c0, t0.c2, t0.c1;
SELECT ALL t0.c0, t1.c0, t0.c2, t0.c1 FROM t0, t1 WHERE (((CASE t0.c1  WHEN t0.c2 THEN t0.c2 ELSE t0.c0 END) ISNULL)) GROUP BY t0.c0, t1.c0, t0.c2, t0.c1 UNION SELECT t0.c0, t1.c0, t0.c2, t0.c1 FROM t0, t1 WHERE ((NOT (((CASE t0.c1  WHEN t0.c2 THEN t0.c2 ELSE t0.c0 END) ISNULL)))) GROUP BY t0.c0, t1.c0, t0.c2, t0.c1 UNION SELECT t0.c0, t1.c0, t0.c2, t0.c1 FROM t0, t1 WHERE (((((CASE t0.c1  WHEN t0.c2 THEN t0.c2 ELSE t0.c0 END) ISNULL)) ISNULL)) GROUP BY t0.c0, t1.c0, t0.c2, t0.c1;
SELECT t0.c0, t1.c0, t0.c2, t0.c1 FROM t0, t1 GROUP BY t0.c0, t1.c0, t0.c2, t0.c1;
SELECT ALL t0.c1, t0.c2, v0.c0, t1.c0, t0.c0 FROM t0, t1, v0 GROUP BY t0.c1, t0.c2, v0.c0, t1.c0, t0.c0;
SELECT t0.c1, t0.c2, v0.c0, t1.c0, t0.c0 FROM t0, t1, v0 GROUP BY t0.c1, t0.c2, v0.c0, t1.c0, t0.c0 HAVING TOTAL(GROUP_CONCAT(t0.c0) COLLATE NOCASE) UNION ALL SELECT t0.c1, t0.c2, v0.c0, t1.c0, t0.c0 FROM t0, t1, v0 GROUP BY t0.c1, t0.c2, v0.c0, t1.c0, t0.c0 HAVING (NOT (TOTAL(GROUP_CONCAT(t0.c0) COLLATE NOCASE))) UNION ALL SELECT ALL t0.c1, t0.c2, v0.c0, t1.c0, t0.c0 FROM t0, t1, v0 GROUP BY t0.c1, t0.c2, v0.c0, t1.c0, t0.c0 HAVING ((TOTAL(GROUP_CONCAT(t0.c0) COLLATE NOCASE)) ISNULL);
SELECT ALL MAX(NULL) FROM v0 ORDER BY ((((('652661028') NOTNULL), ((v0.c0)>(v0.c0)), x'50bc'))<((((((v0.c0)AND(v0.c0)))OR(v0.c0)), CASE v0.c0  WHEN v0.c0 THEN 0x524aa7c3 END, v0.c0 COLLATE RTRIM))) ASC;
SELECT t1.c0, v0.c0 FROM t1, t0 LEFT OUTER JOIN v0 ON (((NOT (t1.c0))) NOT NULL);
SELECT t1.c0, v0.c0 FROM t1, t0 LEFT OUTER JOIN v0 ON (((NOT (t1.c0))) NOT NULL) WHERE (((((CAST(0.7750638359696913 AS INTEGER))AND(((t0.c2)<>(t1.c0)))))OR(t0.c0))) UNION ALL SELECT t1.c0, v0.c0 FROM t1, t0 LEFT OUTER JOIN v0 ON (((NOT (t1.c0))) NOT NULL) WHERE ((NOT (((((CAST(0.7750638359696913 AS INTEGER))AND(((t0.c2)<>(t1.c0)))))OR(t0.c0))))) UNION ALL SELECT ALL t1.c0, v0.c0 FROM t1, t0 LEFT OUTER JOIN v0 ON (((NOT (t1.c0))) NOT NULL) WHERE (((((((CAST(0.7750638359696913 AS INTEGER))AND(((t0.c2)<>(t1.c0)))))OR(t0.c0))) ISNULL));
SELECT t1.c0, v0.c0 FROM t1, t0 LEFT OUTER JOIN v0 ON (((NOT (t1.c0))) NOT NULL);
SELECT DISTINCT t0.c1, t0.c0 FROM t0;
SELECT DISTINCT t0.c1, t0.c0 FROM t0 WHERE ((((((((((-3.2860749E8 IN ()))OR(((NULL)!=(t0.c1)))))OR(((t0.c2) ISNULL))))AND(t0.c2 COLLATE RTRIM)))OR((t0.c1 IN (t0.c2))))) UNION SELECT DISTINCT t0.c1, t0.c0 FROM t0 WHERE ((NOT ((((((((((-3.2860749E8 IN ()))OR(((NULL)<>(t0.c1)))))OR(((t0.c2) ISNULL))))AND(t0.c2 COLLATE RTRIM)))OR((t0.c1 IN (t0.c2))))))) UNION SELECT DISTINCT t0.c1, t0.c0 FROM t0 WHERE ((((((((((((-3.2860749E8 IN ()))OR(((NULL)<>(t0.c1)))))OR(((t0.c2) ISNULL))))AND(t0.c2 COLLATE RTRIM)))OR((t0.c1 IN (t0.c2))))) ISNULL));
SELECT DISTINCT t0.c1, t0.c0 FROM t0;
SELECT t0.c1, t0.c2 FROM t0 GROUP BY t0.c1, t0.c2;
SELECT ALL t0.c1, t0.c2 FROM t0 WHERE ((t0.c2 IN (CAST(t0.c2 AS REAL), t0.c2))) GROUP BY t0.c1, t0.c2 UNION SELECT ALL t0.c1, t0.c2 FROM t0 WHERE ((NOT ((t0.c2 IN (CAST(t0.c2 AS REAL), t0.c2))))) GROUP BY t0.c1, t0.c2 UNION SELECT t0.c1, t0.c2 FROM t0 WHERE ((((t0.c2 IN (CAST(t0.c2 AS REAL), t0.c2))) ISNULL)) GROUP BY t0.c1, t0.c2;
SELECT t0.c1, t0.c2 FROM t0 GROUP BY t0.c1, t0.c2;
SELECT ALL v0.c0, t0.c2 FROM t0, v0, t1 GROUP BY v0.c0, t0.c2;
SELECT v0.c0, t0.c2 FROM t0 NOT INDEXED, v0, t1 GROUP BY v0.c0, t0.c2 HAVING COUNT(*) UNION ALL SELECT v0.c0, t0.c2 FROM t0, v0, t1 GROUP BY v0.c0, t0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0, t0.c2 FROM t0, v0, t1 GROUP BY v0.c0, t0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0, t0.c2 FROM t0, v0, t1 GROUP BY v0.c0, t0.c2;
SELECT v0.c0, t0.c2 FROM t0 NOT INDEXED, v0, t1 GROUP BY v0.c0, t0.c2 HAVING COUNT(*) UNION ALL SELECT v0.c0, t0.c2 FROM t0, v0, t1 GROUP BY v0.c0, t0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0, t0.c2 FROM t0, v0, t1 GROUP BY v0.c0, t0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0, t0.c2 FROM t0, v0, t1 GROUP BY v0.c0, t0.c2;
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE ((NOT (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT ((NOT (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))))) UNION ALL SELECT ALL * FROM v0 WHERE ((((NOT (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM v0 LEFT OUTER JOIN t0 ON ((t0.c0 COLLATE RTRIM)>(t0.c2));
SELECT DISTINCT * FROM v0 LEFT OUTER JOIN t0 ON ((t0.c0 COLLATE RTRIM)>(t0.c2)) WHERE (json_object(((t0.c2) ISNULL), (((v0.c0))<=((t0.c0))))) UNION SELECT DISTINCT * FROM v0 LEFT OUTER JOIN t0 ON ((t0.c0 COLLATE RTRIM)>(t0.c2)) WHERE ((NOT (json_object(((t0.c2) ISNULL), (((v0.c0))<=((t0.c0))))))) UNION SELECT DISTINCT * FROM v0 LEFT OUTER JOIN t0 ON ((t0.c0 COLLATE RTRIM)>(t0.c2)) WHERE (((json_object(((t0.c2) ISNULL), (((v0.c0))<=((t0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0 LEFT OUTER JOIN t0 ON ((t0.c0 COLLATE RTRIM)>(t0.c2));
SELECT ALL t1.c0, v0.c0 FROM v0 NATURAL JOIN t1 GROUP BY t1.c0, v0.c0;
SELECT ALL t1.c0, v0.c0 FROM v0 NATURAL JOIN t1 WHERE ((NOT (json_type(t1.c0)))) GROUP BY t1.c0, v0.c0 UNION SELECT t1.c0, v0.c0 FROM v0 NATURAL JOIN t1 WHERE ((NOT ((NOT (json_type(t1.c0)))))) GROUP BY t1.c0, v0.c0 UNION SELECT ALL t1.c0, v0.c0 FROM v0 NATURAL JOIN t1 WHERE ((((NOT (json_type(t1.c0)))) ISNULL)) GROUP BY t1.c0, v0.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING NULL UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (NULL)) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((NULL) ISNULL);
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING NULL UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (NULL)) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((NULL) ISNULL);
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT * FROM t1;
SELECT ALL * FROM t1 WHERE ((- ((((t1.c0)) BETWEEN ((t1.c0)) AND ((NULL)))))) UNION ALL SELECT ALL * FROM t1 WHERE ((NOT ((- ((((t1.c0)) BETWEEN ((t1.c0)) AND ((NULL)))))))) UNION ALL SELECT * FROM t1 WHERE ((((- ((((t1.c0)) BETWEEN ((t1.c0)) AND ((NULL)))))) ISNULL));
SELECT * FROM t1;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((t0.c1 COLLATE RTRIM IN ((t0.c1 IN ()), (((t0.c2, t0.c2, t0.c1))<=((t0.c0, t0.c0, t0.c0)))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((t0.c1 COLLATE RTRIM IN ((t0.c1 IN ()), (((t0.c2, t0.c2, t0.c1))<=((t0.c0, t0.c0, t0.c0)))))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((t0.c1 COLLATE RTRIM IN ((t0.c1 IN ()), (((t0.c2, t0.c2, t0.c1))<=((t0.c0, t0.c0, t0.c0)))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c1, v0.c0, t0.c0, t1.c0 FROM t1, t0, v0 GROUP BY t0.c1, v0.c0, t0.c0, t1.c0;
SELECT ALL t0.c1, v0.c0, t0.c0, t1.c0 FROM t1, t0, v0 WHERE (CAST(x'' AS BLOB)) GROUP BY t0.c1, v0.c0, t0.c0, t1.c0 UNION SELECT ALL t0.c1, v0.c0, t0.c0, t1.c0 FROM t1, t0, v0 WHERE ((NOT (CAST(x'' AS BLOB)))) GROUP BY t0.c1, v0.c0, t0.c0, t1.c0 UNION SELECT t0.c1, v0.c0, t0.c0, t1.c0 FROM t1, t0, v0 WHERE (((CAST(x'' AS BLOB)) ISNULL)) GROUP BY t0.c1, v0.c0, t0.c0, t1.c0;
SELECT t0.c1, v0.c0, t0.c0, t1.c0 FROM t1, t0, v0 GROUP BY t0.c1, v0.c0, t0.c0, t1.c0;
SELECT t0.c2, t0.c0 FROM t0 INNER JOIN v0 ON (t0.c0 IN ()) COLLATE BINARY GROUP BY t0.c2, t0.c0;
SELECT ALL t0.c2, t0.c0 FROM t0 INNER JOIN v0 ON (t0.c0 IN ()) COLLATE BINARY GROUP BY t0.c2, t0.c0 HAVING (COUNT(t0.c0) IN ()) UNION ALL SELECT ALL t0.c2, t0.c0 FROM t0 INNER JOIN v0 ON (t0.c0 IN ()) COLLATE BINARY GROUP BY t0.c2, t0.c0 HAVING (NOT ((COUNT(t0.c0) IN ()))) UNION ALL SELECT t0.c2, t0.c0 FROM t0 INNER JOIN v0 ON (t0.c0 IN ()) COLLATE BINARY GROUP BY t0.c2, t0.c0 HAVING (((COUNT(t0.c0) IN ())) ISNULL);
SELECT t0.c2, t0.c0 FROM t0 INNER JOIN v0 ON (t0.c0 IN ()) COLLATE BINARY GROUP BY t0.c2, t0.c0;
SELECT ALL t0.c2, t0.c0 FROM t0 INNER JOIN v0 ON (t0.c0 IN ()) COLLATE BINARY GROUP BY t0.c2, t0.c0 HAVING (COUNT(t0.c0) IN ()) UNION ALL SELECT ALL t0.c2, t0.c0 FROM t0 INNER JOIN v0 ON (t0.c0 IN ()) COLLATE BINARY GROUP BY t0.c2, t0.c0 HAVING (NOT ((COUNT(t0.c0) IN ()))) UNION ALL SELECT t0.c2, t0.c0 FROM t0 INNER JOIN v0 ON (t0.c0 IN ()) COLLATE BINARY GROUP BY t0.c2, t0.c0 HAVING (((COUNT(t0.c0) IN ())) ISNULL);
SELECT t0.c2, t0.c0 FROM t0 INNER JOIN v0 ON (t0.c0 IN ()) COLLATE BINARY GROUP BY t0.c2, t0.c0;
SELECT ALL v0.c0, t0.c0 FROM t0, t1, v0;
SELECT v0.c0, t0.c0 FROM t0, t1, v0 WHERE ((((((((t0.c2)AND(v0.c0)))AND(v0.c0))))<=((((t1.c0) NOT BETWEEN (t0.c2) AND (t0.c0)))))) UNION ALL SELECT ALL v0.c0, t0.c0 FROM t0, t1, v0 WHERE ((NOT ((((((((t0.c2)AND(v0.c0)))AND(v0.c0))))<=((((t1.c0) NOT BETWEEN (t0.c2) AND (t0.c0)))))))) UNION ALL SELECT ALL v0.c0, t0.c0 FROM t0, t1, v0 WHERE ((((((((((t0.c2)AND(v0.c0)))AND(v0.c0))))<=((((t1.c0) NOT BETWEEN (t0.c2) AND (t0.c0)))))) ISNULL));
SELECT ALL v0.c0, t0.c0 FROM t0, t1, v0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (CASE WHEN ((t0.c1)||(t0.c1)) THEN (((t0.c1, t0.c1, t0.c2, t0.c2, t0.c2)) NOT BETWEEN ((t0.c1, 'ouaJﱶe)', t0.c1, -8.18893437E8, t0.c0)) AND ((t0.c0, NULL, t0.c2, t0.c1, t0.c1))) END) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (CASE WHEN ((t0.c1)||(t0.c1)) THEN (((t0.c1, t0.c1, t0.c2, t0.c2, t0.c2)) NOT BETWEEN ((t0.c1, 'ouaJﱶe)', t0.c1, -8.18893437E8, t0.c0)) AND ((t0.c0, NULL, t0.c2, t0.c1, t0.c1))) END))) UNION SELECT DISTINCT * FROM t0 WHERE (((CASE WHEN ((t0.c1)||(t0.c1)) THEN (((t0.c1, t0.c1, t0.c2, t0.c2, t0.c2)) NOT BETWEEN ((t0.c1, 'ouaJﱶe)', t0.c1, -8.18893437E8, t0.c0)) AND ((t0.c0, NULL, t0.c2, t0.c1, t0.c1))) END) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c0, t0.c1 FROM v0, t1, t0 GROUP BY t0.c0, t0.c1;
SELECT t0.c0, t0.c1 FROM v0, t1, t0 WHERE (CAST((NOT (t0.c0)) AS REAL)) GROUP BY t0.c0, t0.c1 UNION SELECT t0.c0, t0.c1 FROM v0, t1, t0 WHERE ((NOT (CAST((NOT (t0.c0)) AS REAL)))) GROUP BY t0.c0, t0.c1 UNION SELECT ALL t0.c0, t0.c1 FROM v0, t1, t0 WHERE (((CAST((NOT (t0.c0)) AS REAL)) ISNULL)) GROUP BY t0.c0, t0.c1;
SELECT t0.c0, t0.c1 FROM v0, t1, t0 GROUP BY t0.c0, t0.c1;
SELECT t1.c0, t0.c1, v0.c0, t0.c0, t0.c2 FROM t1, v0, t0 GROUP BY t1.c0, t0.c1, v0.c0, t0.c0, t0.c2;
SELECT ALL t1.c0, t0.c1, v0.c0, t0.c0, t0.c2 FROM t1, v0, t0 GROUP BY t1.c0, t0.c1, v0.c0, t0.c0, t0.c2 HAVING COUNT(COUNT(*)) COLLATE NOCASE UNION ALL SELECT ALL t1.c0, t0.c1, v0.c0, t0.c0, t0.c2 FROM t1, v0, t0 GROUP BY t1.c0, t0.c1, v0.c0, t0.c0, t0.c2 HAVING (NOT (COUNT(COUNT(*)) COLLATE NOCASE)) UNION ALL SELECT t1.c0, t0.c1, v0.c0, t0.c0, t0.c2 FROM t1, v0, t0 GROUP BY t1.c0, t0.c1, v0.c0, t0.c0, t0.c2 HAVING ((COUNT(COUNT(*)) COLLATE NOCASE) ISNULL);
SELECT t1.c0, t0.c2 FROM t0, t1, v0;
SELECT t1.c0, t0.c2 FROM t0, t1, v0 WHERE ((- (((((t0.c1)AND(t0.c1)))OR(t0.c2))))) UNION ALL SELECT t1.c0, t0.c2 FROM t0, t1, v0 WHERE ((NOT ((- (((((t0.c1)AND(t0.c1)))OR(t0.c2))))))) UNION ALL SELECT t1.c0, t0.c2 FROM t0, t1, v0 WHERE ((((- (((((t0.c1)AND(t0.c1)))OR(t0.c2))))) ISNULL));
SELECT t1.c0, t0.c2 FROM t0, t1, v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((v0.c0)|(v0.c0)) IN (((v0.c0)+(v0.c0)), CASE '737247356'  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 0.8909634153812338 ELSE v0.c0 END))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((v0.c0)|(v0.c0)) IN (((v0.c0)+(v0.c0)), CASE '737247356'  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 0.8909634153812338 ELSE v0.c0 END))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((v0.c0)|(v0.c0)) IN (((v0.c0)+(v0.c0)), CASE '737247356'  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 0.8909634153812338 ELSE v0.c0 END))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT t0.c0, t0.c1 FROM v0, t0 GROUP BY t0.c0, t0.c1;
SELECT t0.c0, t0.c1 FROM v0, t0 WHERE (((((((((CASE v0.c0  WHEN t0.c0 THEN t0.c2 WHEN t0.c1 THEN t0.c1 WHEN t0.c0 THEN t0.c1 END)OR(((t0.c1) NOTNULL))))OR(x'')))AND(((v0.c0)IS(v0.c0)))))OR(t0.c0))) GROUP BY t0.c0, t0.c1 UNION SELECT ALL t0.c0, t0.c1 FROM v0, t0 WHERE ((NOT (((((((((CASE v0.c0  WHEN t0.c0 THEN t0.c2 WHEN t0.c1 THEN t0.c1 WHEN t0.c0 THEN t0.c1 END)OR(((t0.c1) NOTNULL))))OR(x'')))AND(((v0.c0)IS(v0.c0)))))OR(t0.c0))))) GROUP BY t0.c0, t0.c1 UNION SELECT ALL t0.c0, t0.c1 FROM v0, t0 WHERE (((((((((((CASE v0.c0  WHEN t0.c0 THEN t0.c2 WHEN t0.c1 THEN t0.c1 WHEN t0.c0 THEN t0.c1 END)OR(((t0.c1) NOTNULL))))OR(x'')))AND(((v0.c0)IS(v0.c0)))))OR(t0.c0))) ISNULL)) GROUP BY t0.c0, t0.c1;
SELECT t0.c0, t0.c1 FROM v0, t0 GROUP BY t0.c0, t0.c1;
SELECT t0.c0, v0.c0, t0.c1, t0.c2 FROM t1, t0, v0 GROUP BY t0.c0, v0.c0, t0.c1, t0.c2;
SELECT t0.c0, v0.c0, t0.c1, t0.c2 FROM t1, t0, v0 GROUP BY t0.c0, v0.c0, t0.c1, t0.c2 HAVING TOTAL((((v0.c0)) NOT BETWEEN ((GROUP_CONCAT(SUM(AVG(t1.c0))))) AND ((TOTAL(t0.c0))))) UNION ALL SELECT t0.c0, v0.c0, t0.c1, t0.c2 FROM t1, t0, v0 GROUP BY t0.c0, v0.c0, t0.c1, t0.c2 HAVING (NOT (TOTAL((((v0.c0)) NOT BETWEEN ((GROUP_CONCAT(SUM(AVG(t1.c0))))) AND ((TOTAL(t0.c0))))))) UNION ALL SELECT ALL t0.c0, v0.c0, t0.c1, t0.c2 FROM t1, t0, v0 GROUP BY t0.c0, v0.c0, t0.c1, t0.c2 HAVING ((TOTAL((((v0.c0)) NOT BETWEEN ((GROUP_CONCAT(SUM(AVG(t1.c0))))) AND ((TOTAL(t0.c0)))))) ISNULL);
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE (CAST(CASE WHEN t0.c0 THEN t0.c2 END AS INTEGER)) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (CAST(CASE WHEN t0.c0 THEN t0.c2 END AS INTEGER)))) UNION ALL SELECT ALL * FROM t0 WHERE (((CAST(CASE WHEN t0.c0 THEN t0.c2 END AS INTEGER)) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM t0 FULL OUTER JOIN t1 ON ((((t0.c0)%(t0.c0)))>((t0.c2 IN ())));
SELECT DISTINCT * FROM t0 FULL OUTER JOIN t1 ON ((((t0.c0)%(t0.c0)))>((t0.c2 IN ()))) WHERE ((((t0.c1)) NOT BETWEEN ((((x'73d118e2')<=(t0.c0)))) AND ((((t0.c1)IS NOT(t1.c0)))))) UNION SELECT DISTINCT * FROM t0 FULL OUTER JOIN t1 ON ((((t0.c0)%(t0.c0)))>((t0.c2 IN ()))) WHERE ((NOT ((((t0.c1)) NOT BETWEEN ((((x'73d118e2')<=(t0.c0)))) AND ((((t0.c1)IS NOT(t1.c0)))))))) UNION SELECT DISTINCT * FROM t0 FULL OUTER JOIN t1 ON ((((t0.c0)%(t0.c0)))>((t0.c2 IN ()))) WHERE ((((((t0.c1)) NOT BETWEEN ((((x'73d118e2')<=(t0.c0)))) AND ((((t0.c1)IS NOT(t1.c0)))))) ISNULL));
SELECT DISTINCT * FROM t0 FULL OUTER JOIN t1 ON ((((t0.c0)%(t0.c0)))>((t0.c2 IN ())));
SELECT ALL v0.c0 FROM v0, t1 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, t1 WHERE (json_object(((v0.c0) BETWEEN (0.13372406125940706) AND (t1.c0)), v0.c0)) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, t1 WHERE ((NOT (json_object(((v0.c0) BETWEEN (0.13372406125940706) AND (t1.c0)), v0.c0)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, t1 WHERE (((json_object(((v0.c0) BETWEEN (0.13372406125940706) AND (t1.c0)), v0.c0)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, t1 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING SUM(MIN(TOTAL(v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (SUM(MIN(TOTAL(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((SUM(MIN(TOTAL(v0.c0)))) ISNULL);
SELECT ALL t1.c0, t0.c1, t0.c0 FROM t0, v0, t1;
SELECT t1.c0, t0.c1, t0.c0 FROM t0, v0, t1 WHERE ((~ (((t0.c2) BETWEEN (0.6883471090828815) AND (t0.c0))))) UNION ALL SELECT ALL t1.c0, t0.c1, t0.c0 FROM t0, v0, t1 WHERE ((NOT ((~ (((t0.c2) BETWEEN (0.6883471090828815) AND (t0.c0))))))) UNION ALL SELECT ALL t1.c0, t0.c1, t0.c0 FROM t0, v0, t1 WHERE ((((~ (((t0.c2) BETWEEN (0.6883471090828815) AND (t0.c0))))) ISNULL));
SELECT ALL t1.c0, t0.c1, t0.c0 FROM t0, v0, t1;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (CASE t0.c2  WHEN t0.c0 THEN t0.c2 END COLLATE NOCASE) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (CASE t0.c2  WHEN t0.c0 THEN t0.c2 END COLLATE NOCASE))) UNION SELECT DISTINCT * FROM t0 WHERE (((CASE t0.c2  WHEN t0.c0 THEN t0.c2 END COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c1 FROM v0, t0 GROUP BY t0.c1;
SELECT t0.c1 FROM v0, t0 WHERE ((((((((((((('-592623647')AND(((t0.c1)+(t0.c2)))))AND(((((t0.c2)OR(t0.c2)))AND(t0.c1)))))OR(CAST(t0.c0 AS INTEGER))))AND((t0.c2 IN ()))))OR(ABS(t0.c2))))OR(CAST(v0.c0 AS BLOB)))) GROUP BY t0.c1 UNION SELECT ALL t0.c1 FROM v0, t0 WHERE ((NOT ((((((((((((('-592623647')AND(((t0.c1)+(t0.c2)))))AND(((((t0.c2)OR(t0.c2)))AND(t0.c1)))))OR(CAST(t0.c0 AS INTEGER))))AND((t0.c2 IN ()))))OR(ABS(t0.c2))))OR(CAST(v0.c0 AS BLOB)))))) GROUP BY t0.c1 UNION SELECT t0.c1 FROM v0, t0 WHERE ((((((((((((((('-592623647')AND(((t0.c1)+(t0.c2)))))AND(((((t0.c2)OR(t0.c2)))AND(t0.c1)))))OR(CAST(t0.c0 AS INTEGER))))AND((t0.c2 IN ()))))OR(ABS(t0.c2))))OR(CAST(v0.c0 AS BLOB)))) ISNULL)) GROUP BY t0.c1;
SELECT ALL t0.c1 FROM v0, t0 GROUP BY t0.c1;
SELECT t1.c0 FROM t0, t1, v0 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t0, t1, v0 GROUP BY t1.c0 HAVING CHAR(AVG(v0.c0)) UNION ALL SELECT t1.c0 FROM t0, t1, v0 GROUP BY t1.c0 HAVING (NOT (CHAR(AVG(v0.c0)))) UNION ALL SELECT ALL t1.c0 FROM t0, t1, v0 GROUP BY t1.c0 HAVING ((CHAR(AVG(v0.c0))) ISNULL);
SELECT t1.c0 FROM t0, t1, v0 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t0, t1, v0 GROUP BY t1.c0 HAVING CHAR(AVG(v0.c0)) UNION ALL SELECT t1.c0 FROM t0, t1, v0 GROUP BY t1.c0 HAVING (NOT (CHAR(AVG(v0.c0)))) UNION ALL SELECT ALL t1.c0 FROM t0, t1, v0 GROUP BY t1.c0 HAVING ((CHAR(AVG(v0.c0))) ISNULL);
SELECT t1.c0 FROM t0, t1, v0 GROUP BY t1.c0;
SELECT ALL t0.c1, t0.c2 FROM v0, t0;
SELECT t0.c1, t0.c2 FROM v0, t0 WHERE (CAST((~ (t0.c1)) AS NUMERIC)) UNION ALL SELECT t0.c1, t0.c2 FROM v0, t0 WHERE ((NOT (CAST((~ (t0.c1)) AS NUMERIC)))) UNION ALL SELECT t0.c1, t0.c2 FROM v0, t0 WHERE (((CAST((~ (t0.c1)) AS NUMERIC)) ISNULL));
SELECT ALL t0.c1, t0.c2 FROM v0, t0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END IN ())) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END IN ())))) UNION SELECT DISTINCT * FROM v0 WHERE ((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END IN ())) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT v0.c0, t0.c2 FROM t0, v0, t1 GROUP BY v0.c0, t0.c2;
SELECT ALL v0.c0, t0.c2 FROM t0, v0, t1 WHERE ((((t0.c0, v0.c0, t0.c0)) NOT BETWEEN ((CAST(t0.c0 AS REAL), CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN t0.c0 ELSE t0.c2 END, ((((t1.c0)AND(t0.c0)))AND(t0.c1)))) AND ((t1.c0 COLLATE RTRIM, CASE WHEN t1.c0 THEN t0.c0 ELSE t0.c2 END, t0.c1 COLLATE BINARY)))) GROUP BY v0.c0, t0.c2 UNION SELECT ALL v0.c0, t0.c2 FROM t0, v0, t1 WHERE ((NOT ((((t0.c0, v0.c0, t0.c0)) NOT BETWEEN ((CAST(t0.c0 AS REAL), CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN t0.c0 ELSE t0.c2 END, ((((t1.c0)AND(t0.c0)))AND(t0.c1)))) AND ((t1.c0 COLLATE RTRIM, CASE WHEN t1.c0 THEN t0.c0 ELSE t0.c2 END, t0.c1 COLLATE BINARY)))))) GROUP BY v0.c0, t0.c2 UNION SELECT ALL v0.c0, t0.c2 FROM t0, v0, t1 WHERE ((((((t0.c0, v0.c0, t0.c0)) NOT BETWEEN ((CAST(t0.c0 AS REAL), CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN t0.c0 ELSE t0.c2 END, ((((t1.c0)AND(t0.c0)))AND(t0.c1)))) AND ((t1.c0 COLLATE RTRIM, CASE WHEN t1.c0 THEN t0.c0 ELSE t0.c2 END, t0.c1 COLLATE BINARY)))) ISNULL)) GROUP BY v0.c0, t0.c2;
SELECT v0.c0, t0.c2 FROM t0, v0, t1 GROUP BY v0.c0, t0.c2;
SELECT ALL v0.c0 FROM t0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM t0, v0 GROUP BY v0.c0 HAVING GROUP_CONCAT(AVG(COUNT(t0.c2))) UNION ALL SELECT v0.c0 FROM t0, v0 GROUP BY v0.c0 HAVING (NOT (GROUP_CONCAT(AVG(COUNT(t0.c2))))) UNION ALL SELECT ALL v0.c0 FROM t0, v0 GROUP BY v0.c0 HAVING ((GROUP_CONCAT(AVG(COUNT(t0.c2)))) ISNULL);
SELECT ALL t0.c0, t0.c2, v0.c0, t1.c0 FROM v0, t0, t1 NOT INDEXED;
SELECT ALL t0.c0, t0.c2, v0.c0, t1.c0 FROM v0, t0, t1 WHERE (((((t0.c1))<((t0.c1))) IN ())) UNION ALL SELECT ALL t0.c0, t0.c2, v0.c0, t1.c0 FROM v0, t0, t1 WHERE ((NOT (((((t0.c1))<((t0.c1))) IN ())))) UNION ALL SELECT ALL t0.c0, t0.c2, v0.c0, t1.c0 FROM v0, t0, t1 WHERE (((((((t0.c1))<((t0.c1))) IN ())) ISNULL));
SELECT ALL t0.c0, t0.c2, v0.c0, t1.c0 FROM v0, t0, t1 NOT INDEXED;
SELECT DISTINCT * FROM t0 FULL OUTER JOIN v0 ON CASE WHEN ((t1.c0)/(t1.c0)) THEN ((v0.c0)%(t0.c2)) END FULL OUTER JOIN t1 ON ((CASE t1.c0  WHEN t1.c0 THEN t0.c2 WHEN NULL THEN v0.c0 WHEN v0.c0 THEN t0.c0 END) NOTNULL);
SELECT t0.c1, v0.c0, t0.c2 FROM t1, v0 CROSS JOIN t0 ON (- (CASE WHEN t0.c0 THEN t1.c0 WHEN t0.c0 THEN t1.c0 WHEN v0.c0 THEN v0.c0 ELSE t0.c2 END)) GROUP BY t0.c1, v0.c0, t0.c2;
SELECT ALL t0.c1, v0.c0, t0.c2 FROM t1, v0 CROSS JOIN t0 ON (- (CASE WHEN t0.c0 THEN t1.c0 WHEN t0.c0 THEN t1.c0 WHEN v0.c0 THEN v0.c0 ELSE t0.c2 END)) WHERE (((((t0.c2))!=((t0.c0))) IN ())) GROUP BY t0.c1, v0.c0, t0.c2 UNION SELECT t0.c1, v0.c0, t0.c2 FROM t1, v0 CROSS JOIN t0 ON (- (CASE WHEN t0.c0 THEN t1.c0 WHEN t0.c0 THEN t1.c0 WHEN v0.c0 THEN v0.c0 ELSE t0.c2 END)) WHERE ((NOT (((((t0.c2))<>((t0.c0))) IN ())))) GROUP BY t0.c1, v0.c0, t0.c2 UNION SELECT ALL t0.c1, v0.c0, t0.c2 FROM t1, v0 CROSS JOIN t0 ON (- (CASE WHEN t0.c0 THEN t1.c0 WHEN t0.c0 THEN t1.c0 WHEN v0.c0 THEN v0.c0 ELSE t0.c2 END)) WHERE (((((((t0.c2))!=((t0.c0))) IN ())) ISNULL)) GROUP BY t0.c1, v0.c0, t0.c2;
SELECT t0.c1, v0.c0, t0.c2 FROM t1, v0 CROSS JOIN t0 ON (- (CASE WHEN t0.c0 THEN t1.c0 WHEN t0.c0 THEN t1.c0 WHEN v0.c0 THEN v0.c0 ELSE t0.c2 END)) GROUP BY t0.c1, v0.c0, t0.c2;
SELECT t0.c2, t0.c0, t0.c1 FROM v0, t0 GROUP BY t0.c2, t0.c0, t0.c1;
SELECT ALL t0.c2, t0.c0, t0.c1 FROM v0, t0 GROUP BY t0.c2, t0.c0, t0.c1 HAVING ((- (t0.c0)) IN (TOTAL(MAX(t0.c0)))) UNION ALL SELECT ALL t0.c2, t0.c0, t0.c1 FROM v0, t0 GROUP BY t0.c2, t0.c0, t0.c1 HAVING (NOT (((- (t0.c0)) IN (TOTAL(MAX(t0.c0)))))) UNION ALL SELECT ALL t0.c2, t0.c0, t0.c1 FROM v0, t0 GROUP BY t0.c2, t0.c0, t0.c1 HAVING ((((- (t0.c0)) IN (TOTAL(MAX(t0.c0))))) ISNULL);
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE (t0.c1) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (t0.c1))) UNION ALL SELECT ALL * FROM t0 WHERE (((t0.c1) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (((((t1.c0) NOT NULL)) BETWEEN (((t1.c0)>('YbCLJ.( '))) AND (COALESCE(t1.c0, t1.c0)))) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (((((t1.c0) NOT NULL)) BETWEEN (((t1.c0)>('YbCLJ.( '))) AND (COALESCE(t1.c0, t1.c0)))))) UNION SELECT DISTINCT * FROM t1 WHERE (((((((t1.c0) NOT NULL)) BETWEEN (((t1.c0)>('YbCLJ.( '))) AND (COALESCE(t1.c0, t1.c0)))) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT ALL t0.c1 FROM t0, v0 GROUP BY t0.c1;
SELECT ALL t0.c1 FROM t0, v0 WHERE (CAST(CASE WHEN t0.c1 THEN t0.c1 ELSE t0.c2 END AS INTEGER)) GROUP BY t0.c1 UNION SELECT t0.c1 FROM t0, v0 WHERE ((NOT (CAST(CASE WHEN t0.c1 THEN t0.c1 ELSE t0.c2 END AS INTEGER)))) GROUP BY t0.c1 UNION SELECT ALL t0.c1 FROM t0, v0 WHERE (((CAST(CASE WHEN t0.c1 THEN t0.c1 ELSE t0.c2 END AS INTEGER)) ISNULL)) GROUP BY t0.c1;
SELECT ALL t0.c1 FROM t0, v0 GROUP BY t0.c1;
SELECT ALL t1.c0 FROM v0, t1 GROUP BY t1.c0;
SELECT t1.c0 FROM v0 NOT INDEXED, t1 GROUP BY t1.c0 HAVING COUNT(((((((((MIN(MAX(TOTAL(TOTAL(TOTAL(v0.c0))))))AND(t1.c0)))AND(COUNT(AVG(v0.c0)))))OR(AVG(v0.c0))))AND(COUNT(COUNT(COUNT(t1.c0)))))) UNION ALL SELECT t1.c0 FROM v0, t1 GROUP BY t1.c0 HAVING (NOT (COUNT(((((((((MIN(MAX(TOTAL(TOTAL(TOTAL(v0.c0))))))AND(t1.c0)))AND(COUNT(AVG(v0.c0)))))OR(AVG(v0.c0))))AND(COUNT(COUNT(COUNT(t1.c0)))))))) UNION ALL SELECT ALL t1.c0 FROM v0, t1 GROUP BY t1.c0 HAVING ((COUNT(((((((((MIN(MAX(TOTAL(TOTAL(TOTAL(v0.c0))))))AND(t1.c0)))AND(COUNT(AVG(v0.c0)))))OR(AVG(v0.c0))))AND(COUNT(COUNT(COUNT(t1.c0))))))) ISNULL);
SELECT ALL * FROM v0, t0, t1;
SELECT ALL * FROM v0, t0, t1 WHERE (((t0.c2)GLOB((v0.c0 IN ())))) UNION ALL SELECT * FROM v0, t0, t1 WHERE ((NOT (((t0.c2)GLOB((v0.c0 IN ())))))) UNION ALL SELECT ALL * FROM v0, t0, t1 WHERE (((((t0.c2)GLOB((v0.c0 IN ())))) ISNULL));
SELECT ALL * FROM v0, t0, t1;
SELECT DISTINCT t0.c1, t0.c2 FROM t0;
SELECT DISTINCT t0.c1, t0.c2 FROM t0 WHERE (((CAST(t0.c1 AS REAL))|(((t0.c1)>(t0.c1))))) UNION SELECT DISTINCT t0.c1, t0.c2 FROM t0 WHERE ((NOT (((CAST(t0.c1 AS REAL))|(((t0.c1)>(t0.c1))))))) UNION SELECT DISTINCT t0.c1, t0.c2 FROM t0 WHERE (((((CAST(t0.c1 AS REAL))|(((t0.c1)>(t0.c1))))) ISNULL));
SELECT DISTINCT t0.c1, t0.c2 FROM t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (((t0.c1)<=(((((t0.c0)OR(t0.c2)))OR(t0.c0))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((t0.c1)<=(((((t0.c0)OR(t0.c2)))OR(t0.c0))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((t0.c1)<=(((((t0.c0)OR(t0.c2)))OR(t0.c0))))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING v0.c0 UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((v0.c0) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING v0.c0 UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((v0.c0) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT t1.c0 FROM t1;
SELECT t1.c0 FROM t1 WHERE ((((t1.c0 IN (t1.c0)))IS NOT(((t1.c0)>>(t1.c0))))) UNION ALL SELECT ALL t1.c0 FROM t1 WHERE ((NOT ((((t1.c0 IN (t1.c0)))IS NOT(((t1.c0)>>(t1.c0))))))) UNION ALL SELECT ALL t1.c0 FROM t1 WHERE ((((((t1.c0 IN (t1.c0)))IS NOT(((t1.c0)>>(t1.c0))))) ISNULL));
SELECT t1.c0 FROM t1;
SELECT DISTINCT * FROM t1, t0, v0;
SELECT DISTINCT * FROM t1, t0, v0 WHERE (((((t0.c1)-('-1642460724')))&(HEX(t0.c0)))) UNION SELECT DISTINCT * FROM t1, t0, v0 WHERE ((NOT (((((t0.c1)-('-1642460724')))&(HEX(t0.c0)))))) UNION SELECT DISTINCT * FROM t1, t0, v0 WHERE (((((((t0.c1)-('-1642460724')))&(HEX(t0.c0)))) ISNULL));
SELECT DISTINCT * FROM t1, t0, v0;
SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1;
SELECT ALL t0.c1 FROM t0 WHERE (((t0.c1) NOTNULL) COLLATE RTRIM) GROUP BY t0.c1 UNION SELECT t0.c1 FROM t0 WHERE ((NOT (((t0.c1) NOTNULL) COLLATE RTRIM))) GROUP BY t0.c1 UNION SELECT ALL t0.c1 FROM t0 WHERE (((((t0.c1) NOTNULL) COLLATE RTRIM) ISNULL)) GROUP BY t0.c1;
SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1;
SELECT ALL t1.c0 FROM t1, v0 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1, v0 GROUP BY t1.c0 HAVING AVG(MAX(AVG(0.653269476662747))) UNION ALL SELECT ALL t1.c0 FROM t1, v0 GROUP BY t1.c0 HAVING (NOT (AVG(MAX(AVG(0.653269476662747))))) UNION ALL SELECT t1.c0 FROM t1, v0 GROUP BY t1.c0 HAVING ((AVG(MAX(AVG(0.653269476662747)))) ISNULL);
SELECT ALL * FROM t0, t1, v0;
SELECT ALL * FROM t0, t1, v0 WHERE (((v0.c0) NOTNULL)) UNION ALL SELECT * FROM t0, t1, v0 WHERE ((NOT (((v0.c0) NOTNULL)))) UNION ALL SELECT * FROM t0, t1, v0 WHERE (((((v0.c0) NOTNULL)) ISNULL));
SELECT ALL * FROM t0, t1, v0;
SELECT DISTINCT * FROM t1 NATURAL JOIN t0;
SELECT DISTINCT * FROM t1 NATURAL JOIN t0 WHERE ((NOT (CAST(t1.c0 AS TEXT)))) UNION SELECT DISTINCT * FROM t1 NATURAL JOIN t0 WHERE ((NOT ((NOT (CAST(t1.c0 AS TEXT)))))) UNION SELECT DISTINCT * FROM t1 NATURAL JOIN t0 WHERE ((((NOT (CAST(t1.c0 AS TEXT)))) ISNULL));
SELECT DISTINCT * FROM t1 NATURAL JOIN t0;
SELECT ALL v0.c0 FROM t0, v0, t1 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM t0, v0, t1 WHERE (((((v0.c0) BETWEEN (t0.c0) AND (v0.c0))) ISNULL)) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM t0, v0, t1 WHERE ((NOT (((((v0.c0) BETWEEN (t0.c0) AND (v0.c0))) ISNULL)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM t0, v0, t1 WHERE (((((((v0.c0) BETWEEN (t0.c0) AND (v0.c0))) ISNULL)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM t0, v0, t1 GROUP BY v0.c0;
SELECT t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0;
SELECT ALL t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0 HAVING ((GROUP_CONCAT(t0.c1)) BETWEEN (TRIM(AVG(SUM(t0.c1)))) AND (UPPER('736021537'))) UNION ALL SELECT ALL t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0 HAVING (NOT (((GROUP_CONCAT(t0.c1)) BETWEEN (TRIM(AVG(SUM(t0.c1)))) AND (UPPER('736021537'))))) UNION ALL SELECT t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0 HAVING ((((GROUP_CONCAT(t0.c1)) BETWEEN (TRIM(AVG(SUM(t0.c1)))) AND (UPPER('736021537')))) ISNULL);
SELECT * FROM v0;
SELECT * FROM v0 WHERE (((((v0.c0) NOTNULL)) ISNULL)) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (((((v0.c0) NOTNULL)) ISNULL)))) UNION ALL SELECT ALL * FROM v0 WHERE (((((((v0.c0) NOTNULL)) ISNULL)) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT v0.c0 FROM v0, t1;
SELECT DISTINCT v0.c0 FROM v0, t1 WHERE (((v0.c0)IS NOT(t1.c0)) COLLATE RTRIM) UNION SELECT DISTINCT v0.c0 FROM v0, t1 WHERE ((NOT (((v0.c0)IS NOT(t1.c0)) COLLATE RTRIM))) UNION SELECT DISTINCT v0.c0 FROM v0, t1 WHERE (((((v0.c0)IS NOT(t1.c0)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT v0.c0 FROM v0, t1;
SELECT t0.c1, v0.c0, t0.c0, t0.c2 FROM v0, t0, t1 GROUP BY t0.c1, v0.c0, t0.c0, t0.c2;
SELECT ALL t0.c1, v0.c0, t0.c0, t0.c2 FROM v0, t0, t1 WHERE (((((((t0.c1)<=(t0.c2)))OR(((((((((x'')AND(t0.c1)))OR(t0.c0)))AND(0x66f63644)))AND(t0.c0)))))AND(((t0.c2) IS TRUE)))) GROUP BY t0.c1, v0.c0, t0.c0, t0.c2 UNION SELECT t0.c1, v0.c0, t0.c0, t0.c2 FROM v0, t0, t1 WHERE ((NOT (((((((t0.c1)<=(t0.c2)))OR(((((((((x'')AND(t0.c1)))OR(t0.c0)))AND(0x66f63644)))AND(t0.c0)))))AND(((t0.c2) IS TRUE)))))) GROUP BY t0.c1, v0.c0, t0.c0, t0.c2 UNION SELECT ALL t0.c1, v0.c0, t0.c0, t0.c2 FROM v0, t0, t1 WHERE (((((((((t0.c1)<=(t0.c2)))OR(((((((((x'')AND(t0.c1)))OR(t0.c0)))AND(0x66f63644)))AND(t0.c0)))))AND(((t0.c2) IS TRUE)))) ISNULL)) GROUP BY t0.c1, v0.c0, t0.c0, t0.c2;
SELECT t0.c1, v0.c0, t0.c0, t0.c2 FROM v0, t0, t1 GROUP BY t0.c1, v0.c0, t0.c0, t0.c2;
SELECT ALL t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0;
SELECT t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0;
SELECT t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0;
SELECT t0.c1, t0.c2 FROM v0, t0, t1;
SELECT t0.c1, t0.c2 FROM v0, t0, t1 WHERE (((CASE WHEN t0.c1 THEN t1.c0 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c0 WHEN t0.c0 THEN t1.c0 WHEN t0.c2 THEN t0.c1 END)=(CAST(-1113770462 AS NUMERIC)))) UNION ALL SELECT t0.c1, t0.c2 FROM v0, t0, t1 WHERE ((NOT (((CASE WHEN t0.c1 THEN t1.c0 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c0 WHEN t0.c0 THEN t1.c0 WHEN t0.c2 THEN t0.c1 END)==(CAST(-1113770462 AS NUMERIC)))))) UNION ALL SELECT t0.c1, t0.c2 FROM v0, t0, t1 WHERE (((((CASE WHEN t0.c1 THEN t1.c0 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c0 WHEN t0.c0 THEN t1.c0 WHEN t0.c2 THEN t0.c1 END)==(CAST(-1113770462 AS NUMERIC)))) ISNULL));
SELECT t0.c1, t0.c2 FROM v0, t0, t1;
SELECT DISTINCT t0.c1, t0.c2, v0.c0, t0.c0, t1.c0 FROM t0, t1, v0;
SELECT DISTINCT t0.c1, t0.c2, v0.c0, t0.c0, t1.c0 FROM t0, t1, v0 WHERE ((((t0.c2 IN (t0.c0))) NOT NULL)) UNION SELECT DISTINCT t0.c1, t0.c2, v0.c0, t0.c0, t1.c0 FROM t0, t1, v0 WHERE ((NOT ((((t0.c2 IN (t0.c0))) NOT NULL)))) UNION SELECT DISTINCT t0.c1, t0.c2, v0.c0, t0.c0, t1.c0 FROM t0, t1, v0 WHERE ((((((t0.c2 IN (t0.c0))) NOT NULL)) ISNULL));
SELECT DISTINCT t0.c1, t0.c2, v0.c0, t0.c0, t1.c0 FROM t0, t1, v0;
SELECT ALL t1.c0, v0.c0 FROM t1, v0 GROUP BY t1.c0, v0.c0;
SELECT ALL t1.c0, v0.c0 FROM t1, v0 WHERE ((((t1.c0)) NOT BETWEEN ((v0.c0 COLLATE BINARY)) AND (((((t1.c0, t1.c0, v0.c0))==((t1.c0, t1.c0, t1.c0))))))) GROUP BY t1.c0, v0.c0 UNION SELECT t1.c0, v0.c0 FROM t1, v0 WHERE ((NOT ((((t1.c0)) NOT BETWEEN ((v0.c0 COLLATE BINARY)) AND (((((t1.c0, t1.c0, v0.c0))=((t1.c0, t1.c0, t1.c0))))))))) GROUP BY t1.c0, v0.c0 UNION SELECT ALL t1.c0, v0.c0 FROM t1, v0 WHERE ((((((t1.c0)) NOT BETWEEN ((v0.c0 COLLATE BINARY)) AND (((((t1.c0, t1.c0, v0.c0))==((t1.c0, t1.c0, t1.c0))))))) ISNULL)) GROUP BY t1.c0, v0.c0;
SELECT ALL t1.c0, v0.c0 FROM t1, v0 GROUP BY t1.c0, v0.c0;
SELECT ALL t0.c0, t0.c1 FROM t0, v0 GROUP BY t0.c0, t0.c1;
SELECT t0.c0, t0.c1 FROM t0, v0 GROUP BY t0.c0, t0.c1 HAVING MAX(CAST(v0.c0 AS REAL)) UNION ALL SELECT t0.c0, t0.c1 FROM t0, v0 GROUP BY t0.c0, t0.c1 HAVING (NOT (MAX(CAST(v0.c0 AS REAL)))) UNION ALL SELECT t0.c0, t0.c1 FROM t0, v0 GROUP BY t0.c0, t0.c1 HAVING ((MAX(CAST(v0.c0 AS REAL))) ISNULL);
SELECT ALL t0.c0, t0.c1 FROM t0, v0 GROUP BY t0.c0, t0.c1;
SELECT t0.c0, t0.c1 FROM t0, v0 GROUP BY t0.c0, t0.c1 HAVING MAX(CAST(v0.c0 AS REAL)) UNION ALL SELECT t0.c0, t0.c1 FROM t0, v0 GROUP BY t0.c0, t0.c1 HAVING (NOT (MAX(CAST(v0.c0 AS REAL)))) UNION ALL SELECT t0.c0, t0.c1 FROM t0, v0 GROUP BY t0.c0, t0.c1 HAVING ((MAX(CAST(v0.c0 AS REAL))) ISNULL);
SELECT ALL t0.c0, t0.c1 FROM t0, v0 GROUP BY t0.c0, t0.c1;
SELECT ALL t0.c2, t0.c0 FROM t1, t0;
SELECT t0.c2, t0.c0 FROM t1, t0 WHERE (((((((t0.c2)AND(t0.c2)))AND(t0.c1)))<<(((t0.c1) IS FALSE)))) UNION ALL SELECT ALL t0.c2, t0.c0 FROM t1, t0 WHERE ((NOT (((((((t0.c2)AND(t0.c2)))AND(t0.c1)))<<(((t0.c1) IS FALSE)))))) UNION ALL SELECT t0.c2, t0.c0 FROM t1, t0 WHERE (((((((((t0.c2)AND(t0.c2)))AND(t0.c1)))<<(((t0.c1) IS FALSE)))) ISNULL));
SELECT ALL t0.c2, t0.c0 FROM t1, t0;
SELECT DISTINCT v0.c0, t0.c2, t0.c1, t1.c0 FROM t1, t0, v0;
SELECT DISTINCT v0.c0, t0.c2, t0.c1, t1.c0 FROM t1, t0, v0 WHERE (((((((((((t0.c0)<<(t1.c0)))AND(((t1.c0)||(t0.c0)))))AND(t1.c0 COLLATE RTRIM)))OR(((t0.c0) BETWEEN (v0.c0) AND (t1.c0)))))OR((((v0.c0, v0.c0, t0.c2)) NOT BETWEEN ((t1.c0, t0.c2, t0.c1)) AND (('1199991574', 0.1344063631893534, t0.c0)))))) UNION SELECT DISTINCT v0.c0, t0.c2, t0.c1, t1.c0 FROM t1, t0, v0 WHERE ((NOT (((((((((((t0.c0)<<(t1.c0)))AND(((t1.c0)||(t0.c0)))))AND(t1.c0 COLLATE RTRIM)))OR(((t0.c0) BETWEEN (v0.c0) AND (t1.c0)))))OR((((v0.c0, v0.c0, t0.c2)) NOT BETWEEN ((t1.c0, t0.c2, t0.c1)) AND (('1199991574', 0.1344063631893534, t0.c0)))))))) UNION SELECT DISTINCT v0.c0, t0.c2, t0.c1, t1.c0 FROM t1, t0, v0 WHERE (((((((((((((t0.c0)<<(t1.c0)))AND(((t1.c0)||(t0.c0)))))AND(t1.c0 COLLATE RTRIM)))OR(((t0.c0) BETWEEN (v0.c0) AND (t1.c0)))))OR((((v0.c0, v0.c0, t0.c2)) NOT BETWEEN ((t1.c0, t0.c2, t0.c1)) AND (('1199991574', 0.1344063631893534, t0.c0)))))) ISNULL));
SELECT DISTINCT v0.c0, t0.c2, t0.c1, t1.c0 FROM t1, t0, v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (v0.c0 COLLATE RTRIM) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (v0.c0 COLLATE RTRIM))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((v0.c0 COLLATE RTRIM) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((((t1.c0)AND(((t1.c0) IS FALSE))))OR(COUNT(*))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (((((t1.c0)AND(((t1.c0) IS FALSE))))OR(COUNT(*))))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((((((t1.c0)AND(((t1.c0) IS FALSE))))OR(COUNT(*)))) ISNULL);
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((((t1.c0)AND(((t1.c0) IS FALSE))))OR(COUNT(*))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (((((t1.c0)AND(((t1.c0) IS FALSE))))OR(COUNT(*))))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((((((t1.c0)AND(((t1.c0) IS FALSE))))OR(COUNT(*)))) ISNULL);
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t0.c0, t0.c1, t0.c2 FROM t0;
SELECT t0.c0, t0.c1, t0.c2 FROM t0 WHERE (CASE (((t0.c2)) BETWEEN ((t0.c2)) AND ((t0.c1)))  WHEN (((('')AND(t0.c1)))AND(t0.c0)) THEN t0.c1 WHEN CAST(t0.c1 AS BLOB) THEN 0.9576099911816062 WHEN '2063905856' THEN CASE NULL  WHEN t0.c1 THEN t0.c0 ELSE x'' END ELSE ((t0.c1)LIKE(t0.c1)) END) UNION ALL SELECT ALL t0.c0, t0.c1, t0.c2 FROM t0 WHERE ((NOT (CASE (((t0.c2)) BETWEEN ((t0.c2)) AND ((t0.c1)))  WHEN (((('')AND(t0.c1)))AND(t0.c0)) THEN t0.c1 WHEN CAST(t0.c1 AS BLOB) THEN 0.9576099911816062 WHEN '2063905856' THEN CASE NULL  WHEN t0.c1 THEN t0.c0 ELSE x'' END ELSE ((t0.c1)LIKE(t0.c1)) END))) UNION ALL SELECT ALL t0.c0, t0.c1, t0.c2 FROM t0 WHERE (((CASE (((t0.c2)) BETWEEN ((t0.c2)) AND ((t0.c1)))  WHEN (((('')AND(t0.c1)))AND(t0.c0)) THEN t0.c1 WHEN CAST(t0.c1 AS BLOB) THEN 0.9576099911816062 WHEN '2063905856' THEN CASE NULL  WHEN t0.c1 THEN t0.c0 ELSE x'' END ELSE ((t0.c1)LIKE(t0.c1)) END) ISNULL));
SELECT ALL t0.c0, t0.c1, t0.c2 FROM t0;
SELECT DISTINCT t0.c0, t0.c1, t0.c2 FROM t0;
SELECT DISTINCT t0.c0, t0.c1, t0.c2 FROM t0 WHERE (CAST(((t0.c2)+(t0.c0)) AS BLOB)) UNION SELECT DISTINCT t0.c0, t0.c1, t0.c2 FROM t0 WHERE ((NOT (CAST(((t0.c2)+(t0.c0)) AS BLOB)))) UNION SELECT DISTINCT t0.c0, t0.c1, t0.c2 FROM t0 WHERE (((CAST(((t0.c2)+(t0.c0)) AS BLOB)) ISNULL));
SELECT DISTINCT t0.c0, t0.c1, t0.c2 FROM t0;
SELECT ALL t1.c0 FROM t1, t0 NATURAL JOIN v0 GROUP BY t1.c0;
SELECT t1.c0 FROM t1, t0 NATURAL JOIN v0 WHERE ('' COLLATE NOCASE) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1, t0 NATURAL JOIN v0 WHERE ((NOT ('' COLLATE NOCASE))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1, t0 NATURAL JOIN v0 WHERE ((('' COLLATE NOCASE) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1, t0 NATURAL JOIN v0 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((((MIN(t1.c0))OR(COUNT(COUNT(*)))))OR(GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (((((MIN(t1.c0))OR(COUNT(COUNT(*)))))OR(GROUP_CONCAT(COUNT(*)))))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((((((MIN(t1.c0))OR(COUNT(COUNT(*)))))OR(GROUP_CONCAT(COUNT(*))))) ISNULL);
SELECT ALL * FROM t1, t0, v0;
SELECT * FROM t1, t0, v0 WHERE ('-1287731979') UNION ALL SELECT ALL * FROM t1, t0, v0 WHERE ((NOT ('-1287731979'))) UNION ALL SELECT * FROM t1, t0, v0 WHERE ((('-1287731979') ISNULL));
SELECT ALL * FROM t1, t0, v0;
SELECT DISTINCT * FROM t1, v0;
SELECT DISTINCT * FROM t1, v0 WHERE ((- (CAST(v0.c0 AS NUMERIC)))) UNION SELECT DISTINCT * FROM t1, v0 WHERE ((NOT ((- (CAST(v0.c0 AS NUMERIC)))))) UNION SELECT DISTINCT * FROM t1, v0 WHERE ((((- (CAST(v0.c0 AS NUMERIC)))) ISNULL));
SELECT DISTINCT * FROM t1, v0;
SELECT t0.c2, t1.c0, v0.c0, t0.c1, t0.c0 FROM v0, t1, t0 GROUP BY t0.c2, t1.c0, v0.c0, t0.c1, t0.c0;
SELECT ALL t0.c2, t1.c0, v0.c0, t0.c1, t0.c0 FROM v0, t1, t0 WHERE (((t1.c0 COLLATE NOCASE)>(t0.c0 COLLATE BINARY))) GROUP BY t0.c2, t1.c0, v0.c0, t0.c1, t0.c0 UNION SELECT t0.c2, t1.c0, v0.c0, t0.c1, t0.c0 FROM v0, t1, t0 WHERE ((NOT (((t1.c0 COLLATE NOCASE)>(t0.c0 COLLATE BINARY))))) GROUP BY t0.c2, t1.c0, v0.c0, t0.c1, t0.c0 UNION SELECT t0.c2, t1.c0, v0.c0, t0.c1, t0.c0 FROM v0, t1, t0 WHERE (((((t1.c0 COLLATE NOCASE)>(t0.c0 COLLATE BINARY))) ISNULL)) GROUP BY t0.c2, t1.c0, v0.c0, t0.c1, t0.c0;
SELECT t0.c2, t1.c0, v0.c0, t0.c1, t0.c0 FROM v0, t1, t0 GROUP BY t0.c2, t1.c0, v0.c0, t0.c1, t0.c0;
SELECT ALL t0.c0, v0.c0 FROM t1 INNER JOIN t0 ON (((((t0.c0)) BETWEEN ((v0.c0)) AND ((t0.c1)))) NOT BETWEEN (SQLITE_SOURCE_ID()) AND ((('&	KjxmV')&(t0.c1)))) FULL OUTER JOIN v0 ON ((((NULL)AND(((t0.c0) BETWEEN (v0.c0) AND (t1.c0)))))AND(((v0.c0) NOTNULL))) GROUP BY t0.c0, v0.c0;
SELECT * FROM t0, v0;
SELECT ALL * FROM t0, v0 WHERE (((t0.c0 COLLATE BINARY)AND(((((t0.c0)AND(t0.c0)))AND(t0.c2))))) UNION ALL SELECT ALL * FROM t0, v0 WHERE ((NOT (((t0.c0 COLLATE BINARY)AND(((((t0.c0)AND(t0.c0)))AND(t0.c2))))))) UNION ALL SELECT * FROM t0, v0 WHERE (((((t0.c0 COLLATE BINARY)AND(((((t0.c0)AND(t0.c0)))AND(t0.c2))))) ISNULL));
SELECT * FROM t0, v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((v0.c0) IS TRUE) COLLATE NOCASE) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((v0.c0) IS TRUE) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM v0 WHERE (((((v0.c0) IS TRUE) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE (CAST(CASE WHEN t1.c0 THEN t1.c0 END AS NUMERIC)) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT (CAST(CASE WHEN t1.c0 THEN t1.c0 END AS NUMERIC)))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE (((CAST(CASE WHEN t1.c0 THEN t1.c0 END AS NUMERIC)) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t0.c0 FROM t1, t0, v0 GROUP BY t0.c0;
SELECT t0.c0 FROM t1, t0, v0 GROUP BY t0.c0 HAVING ((((TOTAL(COUNT(*)))AND(COUNT(*))))OR(MAX(t0.c0))) UNION ALL SELECT t0.c0 FROM t1, t0, v0 GROUP BY t0.c0 HAVING (NOT (((((TOTAL(COUNT(*)))AND(COUNT(*))))OR(MAX(t0.c0))))) UNION ALL SELECT ALL t0.c0 FROM t1, t0, v0 GROUP BY t0.c0 HAVING ((((((TOTAL(COUNT(*)))AND(COUNT(*))))OR(MAX(t0.c0)))) ISNULL);
SELECT * FROM t1, t0;
SELECT ALL * FROM t1, t0 WHERE (((CASE t0.c1  WHEN t1.c0 THEN t0.c1 ELSE t1.c0 END) ISNULL)) UNION ALL SELECT ALL * FROM t1, t0 WHERE ((NOT (((CASE t0.c1  WHEN t1.c0 THEN t0.c1 ELSE t1.c0 END) ISNULL)))) UNION ALL SELECT ALL * FROM t1, t0 WHERE (((((CASE t0.c1  WHEN t1.c0 THEN t0.c1 ELSE t1.c0 END) ISNULL)) ISNULL));
SELECT * FROM t1, t0;
SELECT DISTINCT * FROM t1, v0, t0;
SELECT DISTINCT * FROM t1, v0, t0 NOT INDEXED WHERE ((- (((x'') ISNULL)))) UNION SELECT DISTINCT * FROM t1 NOT INDEXED, v0, t0 WHERE ((NOT ((- (((x'') ISNULL)))))) UNION SELECT DISTINCT * FROM t1, v0, t0 WHERE ((((- (((x'') ISNULL)))) ISNULL));
SELECT DISTINCT * FROM t1, v0, t0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE (((((SUBSTR(t1.c0, t1.c0))AND(((((t1.c0)AND(t1.c0)))OR(0.007162714044952168)))))OR(CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT (((((SUBSTR(t1.c0, t1.c0))AND(((((t1.c0)AND(t1.c0)))OR(0.007162714044952168)))))OR(CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE (((((((SUBSTR(t1.c0, t1.c0))AND(((((t1.c0)AND(t1.c0)))OR(0.007162714044952168)))))OR(CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END))) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL(MAX(MAX(MIN(v0.c0))))) NOTNULL) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((TOTAL(MAX(MAX(MIN(v0.c0))))) NOTNULL))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((TOTAL(MAX(MAX(MIN(v0.c0))))) NOTNULL)) ISNULL);
SELECT t0.c1, t0.c0, t0.c2, t1.c0, v0.c0 FROM t1, v0, t0;
SELECT t0.c1, t0.c0, t0.c2, t1.c0, v0.c0 FROM t1, v0, t0 WHERE (TRIM(((v0.c0) NOT NULL))) UNION ALL SELECT ALL t0.c1, t0.c0, t0.c2, t1.c0, v0.c0 FROM t1, v0, t0 WHERE ((NOT (TRIM(((v0.c0) NOT NULL))))) UNION ALL SELECT ALL t0.c1, t0.c0, t0.c2, t1.c0, v0.c0 FROM t1, v0, t0 WHERE (((TRIM(((v0.c0) NOT NULL))) ISNULL));
SELECT t0.c1, t0.c0, t0.c2, t1.c0, v0.c0 FROM t1, v0, t0;
SELECT DISTINCT t1.c0, v0.c0, t0.c2, t0.c1 FROM t1, t0, v0;
SELECT DISTINCT t1.c0, v0.c0, t0.c2, t0.c1 FROM t1, t0, v0 WHERE (((CASE WHEN t0.c0 THEN v0.c0 WHEN t1.c0 THEN v0.c0 WHEN t0.c0 THEN t0.c1 ELSE v0.c0 END) NOT BETWEEN (((t1.c0)=(t0.c1))) AND (t0.c2 COLLATE RTRIM))) UNION SELECT DISTINCT t1.c0, v0.c0, t0.c2, t0.c1 FROM t1, t0, v0 WHERE ((NOT (((CASE WHEN t0.c0 THEN v0.c0 WHEN t1.c0 THEN v0.c0 WHEN t0.c0 THEN t0.c1 ELSE v0.c0 END) NOT BETWEEN (((t1.c0)=(t0.c1))) AND (t0.c2 COLLATE RTRIM))))) UNION SELECT DISTINCT t1.c0, v0.c0, t0.c2, t0.c1 FROM t1, t0, v0 WHERE (((((CASE WHEN t0.c0 THEN v0.c0 WHEN t1.c0 THEN v0.c0 WHEN t0.c0 THEN t0.c1 ELSE v0.c0 END) NOT BETWEEN (((t1.c0)=(t0.c1))) AND (t0.c2 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT t1.c0, v0.c0, t0.c2, t0.c1 FROM t1, t0, v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (CAST(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END AS INTEGER)) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CAST(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END AS INTEGER)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((CAST(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END AS INTEGER)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT t0.c0, v0.c0, t0.c2 FROM v0, t0 GROUP BY t0.c0, v0.c0, t0.c2;
SELECT t0.c0, v0.c0, t0.c2 FROM v0, t0 GROUP BY t0.c0, v0.c0, t0.c2 HAVING (((((AVG(MIN(SUM(MAX(v0.c0))))))=((COUNT(*))))) BETWEEN (GROUP_CONCAT(MIN(t0.c2))) AND (((MIN(t0.c0))&(COUNT(*))))) UNION ALL SELECT ALL t0.c0, v0.c0, t0.c2 FROM v0, t0 GROUP BY t0.c0, v0.c0, t0.c2 HAVING (NOT ((((((AVG(MIN(SUM(MAX(v0.c0))))))=((COUNT(*))))) BETWEEN (GROUP_CONCAT(MIN(t0.c2))) AND (((MIN(t0.c0))&(COUNT(*))))))) UNION ALL SELECT t0.c0, v0.c0, t0.c2 FROM v0, t0 GROUP BY t0.c0, v0.c0, t0.c2 HAVING (((((((AVG(MIN(SUM(MAX(v0.c0))))))=((COUNT(*))))) BETWEEN (GROUP_CONCAT(MIN(t0.c2))) AND (((MIN(t0.c0))&(COUNT(*)))))) ISNULL);
SELECT t0.c0, t0.c1 FROM t0;
SELECT t0.c0, t0.c1 FROM t0 WHERE (((CASE t0.c2  WHEN t0.c1 THEN t0.c1 ELSE x'' END)LIKE((t0.c1 IN (t0.c2))))) UNION ALL SELECT ALL t0.c0, t0.c1 FROM t0 WHERE ((NOT (((CASE t0.c2  WHEN t0.c1 THEN t0.c1 ELSE x'' END)LIKE((t0.c1 IN (t0.c2))))))) UNION ALL SELECT t0.c0, t0.c1 FROM t0 WHERE (((((CASE t0.c2  WHEN t0.c1 THEN t0.c1 ELSE x'' END)LIKE((t0.c1 IN (t0.c2))))) ISNULL));
SELECT t0.c0, t0.c1 FROM t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (CASE ((((t0.c1)OR(t0.c1)))OR(t0.c2))  WHEN t0.c1 COLLATE BINARY THEN CAST(t0.c1 AS NUMERIC) WHEN CASE WHEN t0.c2 THEN t0.c1 ELSE t0.c1 END THEN ((t0.c0)&(t0.c1)) WHEN t0.c1 COLLATE RTRIM THEN TRIM(DISTINCT t0.c0, t0.c1) END) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (CASE ((((t0.c1)OR(t0.c1)))OR(t0.c2))  WHEN t0.c1 COLLATE BINARY THEN CAST(t0.c1 AS NUMERIC) WHEN CASE WHEN t0.c2 THEN t0.c1 ELSE t0.c1 END THEN ((t0.c0)&(t0.c1)) WHEN t0.c1 COLLATE RTRIM THEN TRIM(DISTINCT t0.c0, t0.c1) END))) UNION SELECT DISTINCT * FROM t0 WHERE (((CASE ((((t0.c1)OR(t0.c1)))OR(t0.c2))  WHEN t0.c1 COLLATE BINARY THEN CAST(t0.c1 AS NUMERIC) WHEN CASE WHEN t0.c2 THEN t0.c1 ELSE t0.c1 END THEN ((t0.c0)&(t0.c1)) WHEN t0.c1 COLLATE RTRIM THEN TRIM(DISTINCT t0.c0, t0.c1) END) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c0, t0.c1 FROM t1, t0, v0 GROUP BY t0.c0, t0.c1;
SELECT t0.c0, t0.c1 FROM t1, t0, v0 WHERE (CASE WHEN t0.c0 THEN t0.c2 END COLLATE NOCASE) GROUP BY t0.c0, t0.c1 UNION SELECT ALL t0.c0, t0.c1 FROM t1, t0, v0 WHERE ((NOT (CASE WHEN t0.c0 THEN t0.c2 END COLLATE NOCASE))) GROUP BY t0.c0, t0.c1 UNION SELECT ALL t0.c0, t0.c1 FROM t1, t0, v0 WHERE (((CASE WHEN t0.c0 THEN t0.c2 END COLLATE NOCASE) ISNULL)) GROUP BY t0.c0, t0.c1;
SELECT ALL t0.c0, t0.c1 FROM t1, t0, v0 GROUP BY t0.c0, t0.c1;
SELECT ALL t1.c0 FROM v0, t1 GROUP BY t1.c0;
SELECT t1.c0 FROM v0, t1 GROUP BY t1.c0 HAVING GROUP_CONCAT(SUM(v0.c0)) UNION ALL SELECT ALL t1.c0 FROM v0, t1 GROUP BY t1.c0 HAVING (NOT (GROUP_CONCAT(SUM(v0.c0)))) UNION ALL SELECT t1.c0 FROM v0, t1 GROUP BY t1.c0 HAVING ((GROUP_CONCAT(SUM(v0.c0))) ISNULL);
SELECT * FROM t1, v0;
SELECT * FROM t1, v0 WHERE ((((- (v0.c0))) NOTNULL)) UNION ALL SELECT ALL * FROM t1, v0 WHERE ((NOT ((((- (v0.c0))) NOTNULL)))) UNION ALL SELECT ALL * FROM t1, v0 WHERE ((((((- (v0.c0))) NOTNULL)) ISNULL));
SELECT * FROM t1, v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((- (NULLIF(v0.c0, v0.c0)))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((- (NULLIF(v0.c0, v0.c0)))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((- (NULLIF(v0.c0, v0.c0)))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT v0.c0 FROM v0, t1, t0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, t1, t0 WHERE (((((t0.c2)||(t0.c0))) NOT NULL)) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, t1, t0 WHERE ((NOT (((((t0.c2)||(t0.c0))) NOT NULL)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, t1, t0 WHERE (((((((t0.c2)||(t0.c0))) NOT NULL)) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0, t1, t0 GROUP BY v0.c0;
SELECT v0.c0, t0.c1, t0.c0 FROM t0, v0, t1 GROUP BY v0.c0, t0.c1, t0.c0;
SELECT ALL v0.c0, t0.c1, t0.c0 FROM t0, v0, t1 GROUP BY v0.c0, t0.c1, t0.c0 HAVING TOTAL(COUNT(*)) UNION ALL SELECT ALL v0.c0, t0.c1, t0.c0 FROM t0, v0, t1 GROUP BY v0.c0, t0.c1, t0.c0 HAVING (NOT (TOTAL(COUNT(*)))) UNION ALL SELECT ALL v0.c0, t0.c1, t0.c0 FROM t0, v0, t1 GROUP BY v0.c0, t0.c1, t0.c0 HAVING ((TOTAL(COUNT(*))) ISNULL);
SELECT t1.c0, t0.c2, t0.c1, t0.c0 FROM t1, t0, v0;
SELECT t1.c0, t0.c2, t0.c1, t0.c0 FROM t1, t0, v0 WHERE (((((t0.c0)LIKE(t0.c1)))AND(ROUND(x'201e', t1.c0)))) UNION ALL SELECT t1.c0, t0.c2, t0.c1, t0.c0 FROM t1, t0, v0 WHERE ((NOT (((((t0.c0)LIKE(t0.c1)))AND(ROUND(x'201e', t1.c0)))))) UNION ALL SELECT t1.c0, t0.c2, t0.c1, t0.c0 FROM t1, t0, v0 WHERE (((((((t0.c0)LIKE(t0.c1)))AND(ROUND(x'201e', t1.c0)))) ISNULL));
SELECT t1.c0, t0.c2, t0.c1, t0.c0 FROM t1, t0, v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ('T') UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ('T'))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((('T') ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL v0.c0, t1.c0, t0.c2, t0.c1 FROM v0, t1, t0 GROUP BY v0.c0, t1.c0, t0.c2, t0.c1;
SELECT ALL v0.c0, t1.c0, t0.c2, t0.c1 FROM v0, t1, t0 WHERE (((((t0.c2) NOTNULL)) BETWEEN (0X618bdfbb) AND (((v0.c0)OR(t0.c1))))) GROUP BY v0.c0, t1.c0, t0.c2, t0.c1 UNION SELECT ALL v0.c0, t1.c0, t0.c2, t0.c1 FROM v0, t1, t0 WHERE ((NOT (((((t0.c2) NOTNULL)) BETWEEN (0x618bdfbb) AND (((v0.c0)OR(t0.c1))))))) GROUP BY v0.c0, t1.c0, t0.c2, t0.c1 UNION SELECT ALL v0.c0, t1.c0, t0.c2, t0.c1 FROM v0, t1, t0 WHERE (((((((t0.c2) NOTNULL)) BETWEEN (0x618bdfbb) AND (((v0.c0)OR(t0.c1))))) ISNULL)) GROUP BY v0.c0, t1.c0, t0.c2, t0.c1;
SELECT ALL v0.c0, t1.c0, t0.c2, t0.c1 FROM v0, t1, t0 GROUP BY v0.c0, t1.c0, t0.c2, t0.c1;
SELECT ALL t0.c1, t0.c2, v0.c0 FROM v0 NATURAL JOIN t0 GROUP BY t0.c1, t0.c2, v0.c0;
SELECT ALL t0.c1, t0.c2, v0.c0 FROM v0 NATURAL JOIN t0 GROUP BY t0.c1, t0.c2, v0.c0 HAVING GROUP_CONCAT(CASE WHEN t0.c1 THEN v0.c0 ELSE TOTAL(t0.c1) END) UNION ALL SELECT ALL t0.c1, t0.c2, v0.c0 FROM v0 NATURAL JOIN t0 GROUP BY t0.c1, t0.c2, v0.c0 HAVING (NOT (GROUP_CONCAT(CASE WHEN t0.c1 THEN v0.c0 ELSE TOTAL(t0.c1) END))) UNION ALL SELECT t0.c1, t0.c2, v0.c0 FROM v0 NATURAL JOIN t0 GROUP BY t0.c1, t0.c2, v0.c0 HAVING ((GROUP_CONCAT(CASE WHEN t0.c1 THEN v0.c0 ELSE TOTAL(t0.c1) END)) ISNULL);
SELECT ALL MIN(ABS(DISTINCT (t1.c0 IN ()))) FROM t1, v0;
SELECT * FROM t1;
SELECT * FROM t1 WHERE ((t1.c0 COLLATE BINARY IN ())) UNION ALL SELECT ALL * FROM t1 WHERE ((NOT ((t1.c0 COLLATE BINARY IN ())))) UNION ALL SELECT ALL * FROM t1 WHERE ((((t1.c0 COLLATE BINARY IN ())) ISNULL));
SELECT * FROM t1;
SELECT DISTINCT * FROM v0, t1;
SELECT DISTINCT * FROM v0, t1 WHERE ((CAST(t1.c0 AS INTEGER) IN ())) UNION SELECT DISTINCT * FROM v0, t1 WHERE ((NOT ((CAST(t1.c0 AS INTEGER) IN ())))) UNION SELECT DISTINCT * FROM v0, t1 WHERE ((((CAST(t1.c0 AS INTEGER) IN ())) ISNULL));
SELECT DISTINCT * FROM v0, t1;
SELECT ALL t0.c1, t0.c2, v0.c0 FROM v0 NATURAL JOIN t0 GROUP BY t0.c1, t0.c2, v0.c0;
SELECT t0.c1, t0.c2, v0.c0 FROM v0 NATURAL JOIN t0 WHERE (CAST(((((t0.c2)AND(v0.c0)))AND(t0.c1)) AS BLOB)) GROUP BY t0.c1, t0.c2, v0.c0 UNION SELECT ALL t0.c1, t0.c2, v0.c0 FROM v0 NATURAL JOIN t0 WHERE ((NOT (CAST(((((t0.c2)AND(v0.c0)))AND(t0.c1)) AS BLOB)))) GROUP BY t0.c1, t0.c2, v0.c0 UNION SELECT ALL t0.c1, t0.c2, v0.c0 FROM v0 NATURAL JOIN t0 WHERE (((CAST(((((t0.c2)AND(v0.c0)))AND(t0.c1)) AS BLOB)) ISNULL)) GROUP BY t0.c1, t0.c2, v0.c0;
SELECT ALL t0.c1, t0.c2, v0.c0 FROM v0 NATURAL JOIN t0 GROUP BY t0.c1, t0.c2, v0.c0;
SELECT t0.c1, t0.c0, v0.c0, t0.c2 FROM t0, v0 GROUP BY t0.c1, t0.c0, v0.c0, t0.c2;
SELECT t0.c1, t0.c0, v0.c0, t0.c2 FROM t0, v0 GROUP BY t0.c1, t0.c0, v0.c0, t0.c2 HAVING t0.c1 UNION ALL SELECT ALL t0.c1, t0.c0, v0.c0, t0.c2 FROM t0, v0 GROUP BY t0.c1, t0.c0, v0.c0, t0.c2 HAVING (NOT (t0.c1)) UNION ALL SELECT ALL t0.c1, t0.c0, v0.c0, t0.c2 FROM t0, v0 GROUP BY t0.c1, t0.c0, v0.c0, t0.c2 HAVING ((t0.c1) ISNULL);
SELECT t0.c1, t0.c0, v0.c0, t0.c2 FROM t0, v0 GROUP BY t0.c1, t0.c0, v0.c0, t0.c2;
SELECT t0.c1, t0.c0, v0.c0, t0.c2 FROM t0, v0 GROUP BY t0.c1, t0.c0, v0.c0, t0.c2 HAVING t0.c1 UNION ALL SELECT ALL t0.c1, t0.c0, v0.c0, t0.c2 FROM t0, v0 GROUP BY t0.c1, t0.c0, v0.c0, t0.c2 HAVING (NOT (t0.c1)) UNION ALL SELECT ALL t0.c1, t0.c0, v0.c0, t0.c2 FROM t0, v0 GROUP BY t0.c1, t0.c0, v0.c0, t0.c2 HAVING ((t0.c1) ISNULL);
SELECT t0.c1, t0.c0, v0.c0, t0.c2 FROM t0, v0 GROUP BY t0.c1, t0.c0, v0.c0, t0.c2;
SELECT t0.c0, t0.c2, v0.c0 FROM t1, v0, t0;
SELECT t0.c0, t0.c2, v0.c0 FROM t1, v0, t0 WHERE ((((t0.c1, t0.c0, t0.c2))>((t0.c1, t0.c0, t0.c2))) COLLATE RTRIM) UNION ALL SELECT t0.c0, t0.c2, v0.c0 FROM t1, v0, t0 WHERE ((NOT ((((t0.c1, t0.c0, t0.c2))>((t0.c1, t0.c0, t0.c2))) COLLATE RTRIM))) UNION ALL SELECT t0.c0, t0.c2, v0.c0 FROM t1, v0, t0 WHERE ((((((t0.c1, t0.c0, t0.c2))>((t0.c1, t0.c0, t0.c2))) COLLATE RTRIM) ISNULL));
SELECT t0.c0, t0.c2, v0.c0 FROM t1, v0, t0;
SELECT DISTINCT t0.c2, t0.c1, t1.c0, v0.c0 FROM t0, t1, v0;
SELECT DISTINCT t0.c2, t0.c1, t1.c0, v0.c0 FROM t0, t1, v0 WHERE ((((0.9236905094924881)) BETWEEN ((v0.c0)) AND (((~ (t1.c0)))))) UNION SELECT DISTINCT t0.c2, t0.c1, t1.c0, v0.c0 FROM t0, t1, v0 WHERE ((NOT ((((0.9236905094924881)) BETWEEN ((v0.c0)) AND (((~ (t1.c0)))))))) UNION SELECT DISTINCT t0.c2, t0.c1, t1.c0, v0.c0 FROM t0, t1, v0 WHERE ((((((0.9236905094924881)) BETWEEN ((v0.c0)) AND (((~ (t1.c0)))))) ISNULL));
SELECT DISTINCT t0.c2, t0.c1, t1.c0, v0.c0 FROM t0, t1, v0;
SELECT t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0;
SELECT t0.c1, t0.c0 FROM t0 WHERE (((((('606265279')+(t0.c2))))>((json_extract(t0.c1, t0.c1, t0.c1, t0.c1))))) GROUP BY t0.c1, t0.c0 UNION SELECT ALL t0.c1, t0.c0 FROM t0 WHERE ((NOT (((((('606265279')+(t0.c2))))>((json_extract(t0.c1, t0.c1, t0.c1, t0.c1))))))) GROUP BY t0.c1, t0.c0 UNION SELECT ALL t0.c1, t0.c0 FROM t0 WHERE (((((((('606265279')+(t0.c2))))>((json_extract(t0.c1, t0.c1, t0.c1, t0.c1))))) ISNULL)) GROUP BY t0.c1, t0.c0;
SELECT t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0;
SELECT ALL t0.c0, t1.c0, v0.c0, t0.c2 FROM t0 CROSS JOIN t1 ON CASE WHEN t0.c0 COLLATE NOCASE THEN ((((v0.c0)AND(t0.c2)))AND(t0.c0)) END FULL OUTER JOIN v0 ON UNLIKELY(t0.c2) GROUP BY t0.c0, t1.c0, v0.c0, t0.c2;
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE (CASE (v0.c0 IN ())  WHEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) THEN v0.c0 COLLATE RTRIM ELSE (~ (v0.c0)) END) UNION ALL SELECT * FROM v0 WHERE ((NOT (CASE (v0.c0 IN ())  WHEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) THEN v0.c0 COLLATE RTRIM ELSE (~ (v0.c0)) END))) UNION ALL SELECT ALL * FROM v0 WHERE (((CASE (v0.c0 IN ())  WHEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) THEN v0.c0 COLLATE RTRIM ELSE (~ (v0.c0)) END) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT t0.c1, t1.c0, t0.c0, t0.c2 FROM t1, t0;
SELECT DISTINCT t0.c1, t1.c0, t0.c0, t0.c2 FROM t1, t0 WHERE (((t1.c0 COLLATE BINARY) NOT NULL)) UNION SELECT DISTINCT t0.c1, t1.c0, t0.c0, t0.c2 FROM t1 NOT INDEXED, t0 WHERE ((NOT (((t1.c0 COLLATE BINARY) NOT NULL)))) UNION SELECT DISTINCT t0.c1, t1.c0, t0.c0, t0.c2 FROM t1, t0 WHERE (((((t1.c0 COLLATE BINARY) NOT NULL)) ISNULL));
SELECT DISTINCT t0.c1, t1.c0, t0.c0, t0.c2 FROM t1, t0;
SELECT ALL t1.c0 FROM t0, t1, v0 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t0, t1, v0 WHERE ((NOT (CAST(v0.c0 AS BLOB)))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t0, t1, v0 WHERE ((NOT ((NOT (CAST(v0.c0 AS BLOB)))))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t0, t1, v0 WHERE ((((NOT (CAST(v0.c0 AS BLOB)))) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t0, t1, v0 GROUP BY t1.c0;
SELECT t0.c2, v0.c0 FROM t0, v0, t1 GROUP BY t0.c2, v0.c0;
SELECT t0.c2, v0.c0 FROM t0, v0, t1 GROUP BY t0.c2, v0.c0 HAVING 0.19479303794543856 UNION ALL SELECT ALL t0.c2, v0.c0 FROM t0, v0, t1 GROUP BY t0.c2, v0.c0 HAVING (NOT (0.19479303794543856)) UNION ALL SELECT t0.c2, v0.c0 FROM t0, v0, t1 GROUP BY t0.c2, v0.c0 HAVING ((0.19479303794543856) ISNULL);
SELECT t0.c2, v0.c0 FROM t0, v0, t1 GROUP BY t0.c2, v0.c0;
SELECT t0.c2, v0.c0 FROM t0, v0, t1 GROUP BY t0.c2, v0.c0 HAVING 0.19479303794543856 UNION ALL SELECT ALL t0.c2, v0.c0 FROM t0, v0, t1 GROUP BY t0.c2, v0.c0 HAVING (NOT (0.19479303794543856)) UNION ALL SELECT t0.c2, v0.c0 FROM t0, v0, t1 GROUP BY t0.c2, v0.c0 HAVING ((0.19479303794543856) ISNULL);
SELECT t0.c2, v0.c0 FROM t0, v0, t1 GROUP BY t0.c2, v0.c0;
SELECT ALL t0.c2, t0.c0 FROM t0;
SELECT ALL t0.c2, t0.c0 FROM t0 WHERE (x'') UNION ALL SELECT t0.c2, t0.c0 FROM t0 WHERE ((NOT (x''))) UNION ALL SELECT ALL t0.c2, t0.c0 FROM t0 WHERE (((x'') ISNULL));
SELECT ALL t0.c2, t0.c0 FROM t0;
SELECT DISTINCT * FROM v0, t0 NOT INDEXED, t1;
SELECT DISTINCT * FROM v0, t0, t1 WHERE (((INSTR(t0.c0, t0.c0))<=(ROUND(t1.c0, t0.c1)))) UNION SELECT DISTINCT * FROM v0, t0, t1 WHERE ((NOT (((INSTR(t0.c0, t0.c0))<=(ROUND(t1.c0, t0.c1)))))) UNION SELECT DISTINCT * FROM v0, t0, t1 WHERE (((((INSTR(t0.c0, t0.c0))<=(ROUND(t1.c0, t0.c1)))) ISNULL));
SELECT DISTINCT * FROM v0, t0 NOT INDEXED, t1;
SELECT t0.c0, v0.c0, t0.c1, t1.c0 FROM v0, t0, t1 GROUP BY t0.c0, v0.c0, t0.c1, t1.c0;
SELECT ALL t0.c0, v0.c0, t0.c1, t1.c0 FROM v0, t0, t1 WHERE ('') GROUP BY t0.c0, v0.c0, t0.c1, t1.c0 UNION SELECT t0.c0, v0.c0, t0.c1, t1.c0 FROM v0, t0, t1 WHERE ((NOT (''))) GROUP BY t0.c0, v0.c0, t0.c1, t1.c0 UNION SELECT t0.c0, v0.c0, t0.c1, t1.c0 FROM v0, t0, t1 WHERE ((('') ISNULL)) GROUP BY t0.c0, v0.c0, t0.c1, t1.c0;
SELECT t0.c0, v0.c0, t0.c1, t1.c0 FROM v0, t0, t1 GROUP BY t0.c0, v0.c0, t0.c1, t1.c0;
SELECT ALL t0.c1, t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c1, t0.c0, t1.c0;
SELECT t0.c1, t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c1, t0.c0, t1.c0 HAVING MIN(TOTAL(TOTAL(t0.c0))) UNION ALL SELECT ALL t0.c1, t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c1, t0.c0, t1.c0 HAVING (NOT (MIN(TOTAL(TOTAL(t0.c0))))) UNION ALL SELECT ALL t0.c1, t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c1, t0.c0, t1.c0 HAVING ((MIN(TOTAL(TOTAL(t0.c0)))) ISNULL);
SELECT * FROM t1, v0;
SELECT ALL * FROM t1, v0 WHERE (((json_array(v0.c0, v0.c0)) BETWEEN ((('-1262339912')>(v0.c0))) AND (CAST(v0.c0 AS INTEGER)))) UNION ALL SELECT * FROM t1, v0 WHERE ((NOT (((json_array(v0.c0, v0.c0)) BETWEEN ((('-1262339912')>(v0.c0))) AND (CAST(v0.c0 AS INTEGER)))))) UNION ALL SELECT ALL * FROM t1, v0 WHERE (((((json_array(v0.c0, v0.c0)) BETWEEN ((('-1262339912')>(v0.c0))) AND (CAST(v0.c0 AS INTEGER)))) ISNULL));
SELECT * FROM t1, v0;
